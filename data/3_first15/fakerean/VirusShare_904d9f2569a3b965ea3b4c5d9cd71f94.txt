and
push
call
cmpl
je
mov
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
test
je
push
movl
xor
cmpb
jne
test
je
nop
mov
cmpb
jne
mov
test
je
mov
mov
test
jne
mov
test
je
mov
mov
push
call
mov
pop
ret
cmpl
je
testb
je
mov
mov
mov
test
je
mov
mov
push
call
test
je
mov
test
je
cmpb
je
mov
test
jne
jmp
mov
jmp
push
mov
sub
andl
push
mov
andl
push
push
lea
mov
call
mov
mov
mov
push
call
test
pop
jne
pushl
and
mov
lea
call
mov
test
je
mov
push
push
call
mov
lea
call
lea
call
pop
mov
pop
pop
leave
ret
push
mov
mov
sub
push
xor
cmp
jne
push
lea
cmp
je
mov
mov
mov
mov
push
call
xor
pop
pop
leave
ret
call
cmp
je
pushl
mov
push
call
jmp
lea
push
lea
mov
movl
movl
mov
mov
call
mov
test
js
push
lea
push
lea
lea
mov
movl
movl
mov
mov
mov
call
test
pop
jne
pushl
mov
mov
push
push
call
pushl
mov
lea
mov
call
mov
cmp
je
pushl
mov
push
call
lea
call
lea
call
jmp
push
mov
sub
push
push
mov
movl
mov
add
cmpl
jne
mov
andl
mov
call
mov
fstps
add
decl
jne
pop
pop
leave
ret
mov
call
test
je
mov
mov
pushl
mov
push
push
push
call
fldz
mov
add
mov
jmp
mov
call
test
jne
cmpl
jne
mov
andl
mov
call
jmp
int3
int3
int3
int3
push
mov
and
sub
cmpl
push
push
je
mov
cmp
jne
mov
cmp
je
mov
push
call
add
test
je
movl
movl
movl
mov
test
je
mov
mov
push
call
mov
test
mov
je
mov
mov
push
call
mov
mov
mov
mov
mov
test
jbe
xor
mov
jmp
lea
mov
mov
or
lea
je
mov
mov
add
mov
call
test
je
add
mov
mov
je
mov
mov
mov
push
push
call
mov
mov
sub
fstl
lea
fld1
fsubp
fstpl
push
push
lea
push
call
add
add
subl
jne
pop
pop
mov
pop
ret
int3
int3
int3
push
mov
and
mov
sub
cmpl
push
push
push
movl
je
mov
mov
mov
mov
test
je
push
mov
call
mov
add
mov
mov
cmp
je
mov
sub
test
mov
mov
je
test
je
push
call
mov
add
movl
mov
test
js
mov
cmp
ja
test
je
mov
mov
lea
push
mov
mov
push
push
push
push
push
movl
call
xor
test
js
mov
mov
cmp
je
mov
add
add
sub
sub
add
adc
cmp
jne
cmp
jae
mov
mov
sub
call
mov
mov
test
jne
mov
pop
pop
pop
mov
pop
ret
mov
mov
jmp
mov
test
js
movl
test
je
test
je
push
call
add
mov
mov
mov
jmp
mov
cmpl
ja
cmp
jne
cmpb
je
jmp
mov
jmp
pop
pop
xor
pop
mov
pop
ret
int3
int3
sub
push
mov
push
xor
cmp
push
mov
mov
mov
mov
mov
mov
mov
je
push
call
add
movl
add
sub
mov
cmp
jne
mov
cmp
jne
mov
cmp
jbe
cmp
je
cmp
je
push
call
add
lea
call
inc
add
les
ret
add
lea
mov
call
mov
cmp
je
mov
mov
sub
and
cmp
mov
mov
jne
mov
mov
lea
push
lea
call
test
je
jmp
mov
add
mov
jmp
push
mov
push
push
push
xor
cmp
mov
jne
mov
mov
push
mov
push
call
pop
lea
mov
call
add
adc
pop
xor
pop
lea
call
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
mov
cmpl
jge
mov
pushl
mov
call
mov
xor
mov
mov
push
call
mov
sub
sub
push
cltd
pop
idiv
mov
push
cmp
mov
jae
call
push
lea
mov
call
lea
push
push
lea
call
test
jne
lea
call
pop
mov
pop
leave
ret
call
jmp
push
lea
sub
mov
xor
mov
mov
push
mov
push
push
mov
xor
push
mov
lea
mov
call
mov
cmp
je
lea
lea
push
mov
mov
movl
movl
mov
mov
mov
push
call
mov
push
lea
push
mov
call
testb
mov
jne
testb
jne
lea
call
mov
mov
pop
pop
xor
pop
call
add
leave
ret
push
mov
test
push
je
lea
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
push
mov
call
xor
jmp
xor
jmp
push
call
test
pop
je
movl
movl
andl
test
mov
mov
je
mov
push
call
xor
ret
xor
jmp
pushl
mov
add
push
call
xor
ret
push
mov
sub
testb
jne
push
mov
call
test
je
mov
test
push
push
pop
je
mov
push
mov
mov
call
test
pop
je
mov
test
jl
cmp
jle
test
jl
mov
mov
andl
andl
push
add
lea
movl
movl
call
mov
mov
test
je
mov
push
push
add
push
push
call
xor
pop
pop
leave
ret
push
mov
mov
sub
push
push
mov
push
mov
call
pop
pushl
push
call
test
jl
mov
test
je
cmpb
je
test
jne
push
call
pop
push
call
pop
xor
pop
pop
leave
ret
push
mov
and
push
cmpl
push
je
call
test
js
mov
cmpl
jne
andl
push
call
mov
mov
mov
mov
pop
call
push
call
pop
mov
pop
ret
push
mov
test
je
push
mov
mov
cmp
movb
je
cmp
je
movb
mov
mov
push
call
pushl
pushl
push
call
pop
pop
ret
mov
add
mov
mov
add
or
mov
ret
push
mov
sub
push
mov
mov
test
jne
push
or
xor
cmp
mov
jne
cmp
ja
and
mov
mov
mov
call
orb
call
mov
mov
mov
movb
mov
cmp
jne
mov
add
mov
mov
cmp
je
cmpb
jne
mov
lea
lea
movsl
movsl
movsl
movsl
mov
mov
push
call
pushl
mov
pushl
mov
call
test
lea
js
call
mov
pushl
mov
call
lea
call
pop
pop
pop
leave
ret
xor
jmp
push
mov
push
push
mov
mov
lea
push
mov
add
movl
call
test
jne
mov
leave
ret
push
lea
sub
mov
xor
mov
mov
mov
andl
andl
les
mov
mov
mov
lea
pop
ret
mov
lea
movl
movl
mov
mov
push
call
mov
push
pushl
icebp
inc
add
add
test
je
pushl
movzwl
pushl
mov
pushl
push
push
call
mov
test
jne
testb
jne
testb
jne
mov
pop
pop
mov
xor
pop
call
add
mov
lea
sub
mov
xor
mov
andl
andw
push
mov
push
mov
push
pushl
mov
lea
push
lea
mov
movl
movl
mov
call
mov
pop
pop
push
pushl
push
pushl
push
call
testb
mov
jne
testb
jne
mov
mov
pop
pop
xor
pop
call
add
leave
ret
mov
movzbl
mov
mov
xor
ret
push
mov
movl
movl
cmpl
je
push
lea
push
call
pushl
call
pop
pop
lea
movl
call
testb
je
push
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
test
push
je
mov
test
je
mov
test
je
and
mov
test
je
mov
cmp
jne
mov
jmp
push
push
mov
push
call
add
cmpl
je
mov
mov
test
je
mov
test
je
lea
cmp
jne
mov
pop
ret
mov
test
jne
xor
pop
ret
xor
jmp
push
mov
push
push
andl
lea
push
pushl
mov
call
pop
pop
lea
call
mov
leave
ret
push
mov
sub
andl
push
mov
push
mov
mov
push
sub
push
push
lea
push
lea
mov
movl
movl
call
andl
push
pop
push
push
lea
mov
call
cmp
mov
je
cmp
je
cmp
je
lea
call
test
jg
mov
cmpl
mov
jne
inc
cmp
mov
jge
push
push
lea
call
mov
test
mov
jmp
movl
sub
mov
lea
push
mov
mov
call
mov
neg
sbb
inc
mov
lea
push
lea
add
push
mov
mov
call
mov
cmp
je
push
pop
jmp
incl
mov
cmp
jge
push
push
lea
call
mov
jmp
mov
testb
jne
testb
jne
pop
pop
pop
leave
ret
push
mov
cmp
je
push
mov
mov
mov
mov
movzwl
mov
movzwl
push
call
cmp
jne
xor
pop
pop
ret
mov
movzwl
movzwl
cmp
je
cmp
je
cmp
je
movzwl
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
cmp
je
cmp
je
cmp
jne
jmp
mov
call
movzbl
ret
cmp
ja
mov
shr
movzbl
mov
and
shl
shr
and
ret
push
mov
mov
sub
cmpl
push
push
jge
xor
cmp
jne
lea
push
push
push
mov
call
mov
mov
add
mov
and
jne
test
jne
pushl
lea
call
test
jne
testb
movb
jne
and
mov
lea
push
call
cmpl
jne
lea
mov
lea
push
push
lea
push
pushl
push
push
call
mov
test
jne
mov
cmpl
jge
cmpb
movl
jne
lea
call
mov
pop
pop
leave
ret
movl
jmp
push
mov
call
jmp
push
mov
and
sub
mov
xor
mov
push
mov
movl
movl
movl
push
xor
inc
mov
push
xor
mov
mov
mov
mov
mov
push
movl
mov
mov
call
cmp
pop
je
mov
mov
call
cmp
mov
je
incl
mov
mov
mov
push
mov
call
cmp
pop
je
mov
mov
add
push
call
push
mov
call
cmp
pop
je
mov
mov
call
mov
mov
call
cmp
mov
je
mov
cmp
mov
mov
je
mov
push
call
movl
call
cmp
mov
je
call
cmp
mov
je
call
cmp
mov
je
mov
push
call
push
call
cmp
pop
je
mov
mov
cmp
mov
movl
mov
je
mov
push
call
cmp
mov
je
mov
push
call
push
call
cmp
pop
je
mov
mov
cmp
mov
movl
mov
je
mov
push
call
cmp
mov
je
mov
push
call
lea
mov
push
lea
mov
movl
movl
mov
mov
mov
call
mov
pushl
mov
push
call
lea
call
mov
mov
mov
push
lea
mov
call
cmp
pop
jne
testb
jne
testb
je
pushl
call
pop
mov
pop
pop
mov
pop
xor
call
mov
pop
ret
cmpl
je
mov
movzbl
ret
push
push
mov
mov
push
mov
push
push
lea
call
push
push
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
pop
pop
xor
pop
ret
push
mov
xor
sub
cmp
jne
push
mov
xor
inc
push
mov
lea
push
push
pushl
movl
push
movl
call
testb
jne
testb
jne
pop
leave
ret
mov
push
pushl
push
call
leave
ret
push
mov
push
mov
mov
and
cmp
je
mov
and
cmp
jne
and
shl
movl
movl
mov
mov
xor
inc
pop
pop
ret
and
shl
movl
movl
jmp
mov
cmp
je
mov
test
jne
mov
push
mov
and
cmp
jae
test
push
mov
jne
test
jne
push
call
pop
movl
pop
pop
ret
lea
cmp
je
jmp
int3
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
push
mov
sub
push
push
push
mov
mov
test
mov
mov
je
testb
jne
mov
mov
movb
mov
mov
mov
call
testb
jne
lea
cmpl
jne
mov
test
jne
testl
jne
mov
test
je
mov
lea
push
push
xor
push
mov
call
cmp
je
mov
cmp
je
cmp
jne
mov
lea
push
mov
call
mov
neg
sbb
and
cmp
jne
xor
cmp
jne
mov
mov
mov
call
push
mov
mov
call
test
je
lea
mov
push
call
mov
mov
call
mov
push
call
pop
pop
pop
leave
ret
cmpl
je
mov
lea
push
call
jmp
mov
mov
mov
push
call
test
mov
je
mov
push
call
push
lea
lea
call
andb
lea
call
jmp
mov
cmp
mov
mov
je
mov
push
call
cmp
mov
je
mov
push
call
mov
mov
push
add
lea
call
cmp
je
test
lea
je
mov
push
call
mov
mov
call
lea
call
jmp
mov
jmp
mov
decl
mov
cmpl
jne
mov
add
pushf
out
inc
add
add
pushl
mov
pushl
pushl
call
jmp
lea
call
test
jne
jmp
push
mov
lea
call
mov
pop
jmp
push
mov
sub
mov
andl
push
push
push
push
push
lea
push
call
test
je
mov
call
test
je
mov
lea
lea
call
lea
lea
call
push
pop
cmp
jne
mov
sub
je
dec
je
lea
lea
cmp
je
cmpl
jne
lea
call
orl
lea
lea
cmp
je
cmpl
jne
lea
call
orl
cmpl
je
lea
call
cmpl
je
lea
call
cmpl
je
lea
call
xor
inc
pop
pop
pop
leave
ret
int3
sub
outsl
movl
cmp
push
push
jne
mov
lea
call
mov
push
mov
call
mov
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
test
je
mov
add
push
call
add
test
je
fildl
lea
fstl
fcompl
fnstsw
test
jne
fldl
fstl
fld1
fstl
fcompp
fnstsw
test
jp
lea
fldl
sub
fdivl
fstpl
call
add
pop
pop
pop
add
rcr
inc
add
int3
pop
loopne
je
push
push
mov
push
mov
push
push
push
call
mov
test
jne
pop
pop
pop
pop
ret
test
je
lea
push
mov
push
call
test
je
mov
push
mov
call
test
je
mov
mov
cmp
je
cmp
je
cmp
je
mov
mov
call
add
jne
mov
mov
call
test
jne
push
pushl
mov
call
jmp
mov
mov
call
test
je
jmp
mov
mov
call
test
je
jmp
mov
mov
call
test
je
jmp
push
mov
push
push
andl
push
lea
call
mov
lea
push
call
mov
andl
test
je
mov
lea
push
push
call
mov
lea
mov
call
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
testb
je
mov
test
mov
jne
test
je
push
call
add
mov
mov
mov
mov
and
mov
or
mov
movl
movl
movl
pop
pop
mov
pop
ret
push
mov
sub
mov
xor
mov
mov
push
mov
push
mov
mov
cmpl
push
mov
mov
mov
jge
andl
cmpl
lea
mov
mov
movl
movl
mov
push
mov
push
mov
lea
call
push
push
pushl
lea
call
mov
push
pushl
or
push
call
mov
push
push
push
lea
call
test
je
mov
movb
pushl
lea
push
call
pushl
pushl
call
add
test
jne
mov
testb
jne
testb
jne
mov
mov
pop
pop
xor
pop
call
leave
ret
mov
add
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
je
cmp
je
cmp
push
je
cmp
je
test
je
cmp
je
cmp
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
loop
inc
add
push
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
add
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
xor
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
ret
push
mov
sub
push
xor
mov
push
lea
call
mov
lea
push
push
call
test
js
cmp
je
pushl
mov
lea
mov
call
mov
cmp
je
mov
cmp
jne
mov
push
mov
lea
mov
call
pushl
call
pop
lea
call
lea
call
add
scas
add
add
ret
push
push
mov
mov
push
mov
push
push
lea
call
push
push
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
pop
pop
xor
pop
ret
push
mov
push
push
xor
push
lea
mov
call
mov
lea
add
mov
push
push
call
test
js
mov
cmp
je
mov
call
mov
lea
call
mov
pop
leave
ret
mov
andl
andl
ret
cmpl
jne
push
call
test
pop
je
andl
andl
test
mov
je
pushl
mov
call
ret
xor
jmp
push
mov
push
xor
cmp
push
mov
je
mov
push
call
mov
mov
mov
cmp
mov
je
mov
push
call
mov
cmp
mov
je
mov
push
call
mov
pushl
call
mov
lea
mov
mov
mov
cmp
pop
jne
mov
cmp
je
push
pushl
pushl
push
mov
call
add
test
je
push
mov
call
push
push
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
pop
ret
push
mov
sub
push
push
mov
mov
push
xor
cmp
movb
jne
mov
lea
push
push
mov
call
mov
call
cmp
jne
cmp
jne
movb
mov
cmp
jne
cmp
jne
inc
add
test
xchg
int
add
add
add
je
inc
add
add
inc
xor
mov
lea
mov
call
push
pop
pushl
lea
push
pushl
mov
movl
mov
movl
call
testb
jne
inc
add
jne
inc
add
call
pop
pop
pop
leave
ret
mov
push
call
jmp
push
mov
sub
push
push
mov
xor
cmp
je
xor
pop
pop
leave
ret
cmp
jne
mov
push
push
mov
lea
mov
mov
call
mov
cmp
je
mov
call
cmp
jne
push
mov
call
push
lea
mov
mov
call
lea
lea
mov
push
push
call
cmp
jne
lea
call
push
pushl
mov
pushl
call
mov
test
js
push
lea
lea
movl
mov
mov
mov
call
mov
lea
movb
call
lea
call
lea
call
mov
pop
jmp
cmpl
je
push
mov
lea
mov
push
call
test
js
mov
pushl
mov
push
call
pop
ret
push
push
mov
test
jne
mov
mov
lea
push
push
call
test
jne
mov
mov
mov
push
push
push
call
test
jne
mov
shr
or
pop
pop
ret
cmp
je
jmp
push
mov
push
mov
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
xor
test
jne
mov
mov
mov
pop
pop
ret
mov
test
je
mov
push
call
xor
jmp
mov
jmp
mov
movl
movl
mov
jmp
push
mov
test
je
push
mov
add
mov
test
je
mov
push
push
call
test
pop
je
mov
push
call
xor
pop
ret
xor
jmp
push
mov
sub
mov
push
mov
push
xor
mov
mov
push
mov
call
mov
shr
and
mov
mov
mov
mov
shr
and
mov
mov
mov
call
mov
push
mov
call
add
call
xor
cmp
je
or
mov
mov
cmp
mov
je
mov
mov
jb
inc
add
cmp
je
mov
push
call
cmp
je
mov
mov
movl
call
test
je
mov
cmpl
jne
mov
testb
jne
mov
add
mov
lea
push
call
mov
push
pushl
mov
call
cmp
mov
mov
je
lea
cmp
jne
lea
mov
add
lea
movsl
movsl
movsl
movsl
mov
mov
xor
lea
mov
call
mov
and
xor
or
movl
je
cmp
je
mov
pushl
mov
mov
call
pop
push
lea
mov
call
mov
mov
mov
cmp
je
mov
push
push
push
pushl
mov
mov
mov
pushl
mov
lea
lea
call
pushl
lea
push
pushl
mov
call
mov
push
lea
push
push
push
pushl
lea
push
push
pushl
pushl
call
mov
xor
inc
test
jne
mov
cmpl
jne
mov
mov
call
test
jne
lea
push
push
push
call
push
push
mov
push
call
pop
mov
call
test
je
mov
call
mov
push
sub
push
push
pushl
mov
call
mov
mov
mov
push
push
mov
push
lea
push
push
pushl
call
pushl
lea
push
lea
push
push
call
add
add
mov
mov
mov
push
add
push
call
mov
add
mov
xor
lea
call
cmp
mov
jne
mov
mov
mov
mov
testb
jne
cmpl
jne
push
pushl
add
call
mov
mov
mov
and
or
jne
cmp
jne
cmp
jne
mov
mov
call
pushl
mov
call
mov
pop
pop
pop
leave
ret
mov
jmp
mov
cmp
jg
mov
mov
and
or
jne
jmp
push
push
push
call
pushl
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
movl
movl
mov
ret
push
mov
lea
mov
or
lock
dec
je
pop
ret
mov
movl
call
push
call
pop
xor
jmp
push
mov
push
add
xor
push
inc
call
pop
pop
ret
push
mov
push
push
mov
push
push
lea
push
pushl
push
call
mov
test
mov
jne
cmpl
je
test
jne
xor
pop
pop
leave
ret
mov
jmp
mov
lea
call
test
je
mov
jmp
push
mov
push
push
mov
add
mov
add
push
push
push
push
push
mov
mov
mov
mov
add
mov
mov
add
mov
add
add
push
push
mov
push
sub
mov
sub
mov
mov
add
mov
add
push
mov
pushl
mov
mov
mov
mov
mov
push
push
mov
mov
mov
pushl
mov
lea
push
call
mov
mov
add
pop
add
pop
add
add
leave
ret
mov
mov
test
je
pushl
call
xor
ret
mov
mov
push
pushl
pushl
call
ret
push
mov
sub
push
push
pushl
xor
mov
lea
mov
mov
call
mov
cmp
mov
je
push
push
lea
push
movl
movl
movl
mov
push
call
testb
mov
jne
testb
jne
test
jne
cmp
je
lea
call
mov
pop
pop
leave
ret
pushl
mov
lea
mov
call
mov
cmp
je
mov
push
push
call
test
mov
jne
lea
call
jmp
mov
jmp
mov
jmp
push
lea
mov
cmpl
jne
push
mov
push
call
pop
pop
ret
push
lea
sub
mov
xor
mov
push
push
mov
push
mov
xor
push
call
test
je
mov
push
lea
mov
call
push
lea
push
mov
call
mov
mov
cmp
je
mov
lea
push
push
call
test
js
cmpl
je
pushl
lea
push
lea
mov
mov
movl
movl
mov
mov
call
pop
pop
pushl
xor
pushl
pushl
push
call
testb
jne
testb
jne
mov
xor
cmp
je
mov
push
call
mov
pop
mov
pop
xor
pop
call
add
leave
ret
push
mov
mov
test
push
push
mov
je
mov
mov
cmp
je
add
mov
test
jne
mov
andl
mov
test
jns
push
push
pushl
call
pop
pop
pop
ret
mov
mov
cmp
je
add
push
je
test
push
je
cmp
je
cmp
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
mov
xor
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
je
cmp
push
je
cmp
mov
je
movl
lea
push
push
push
call
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
xor
ret
push
mov
lea
call
lea
int
inc
add
adc
mov
movl
call
testb
jne
mov
pop
ret
push
mov
push
push
push
mov
push
lea
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
call
lea
xor
call
cmpl
je
lea
mov
lea
push
push
add
push
movl
call
add
xor
pop
leave
ret
push
mov
sub
push
push
mov
mov
call
mov
andl
mov
mov
mov
lea
push
add
push
mov
call
cmpl
je
mov
add
je
push
call
pop
lea
push
mov
call
push
mov
call
push
call
pop
pop
pop
leave
ret
push
mov
push
cmpb
jne
mov
test
movb
jbe
dec
mov
mov
push
lea
mov
push
mov
mov
mov
cmp
jb
mov
test
jne
push
mov
call
mov
pop
mov
movb
pop
leave
ret
pushl
mov
dec
mov
call
jmp
movl
jmp
inc
mov
add
xchg
pushl
leave
lea
mov
cmpl
jne
inc
add
cmp
jb
push
lea
mov
mov
push
call
mov
pop
xor
pop
jmp
pop
ret
mov
mov
push
push
push
call
xor
cmp
je
push
push
mov
mov
push
call
movl
mov
mov
mov
mov
mov
pop
pop
ret
xor
pop
ret
mov
mov
push
push
call
test
je
push
push
mov
mov
push
call
movl
movl
movl
andl
mov
pop
ret
xor
ret
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
mov
cmp
je
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
fldz
sub
push
mov
test
push
push
push
je
fcompl
mov
mov
fnstsw
test
jp
mov
fldl
sub
faddl
fstpl
call
fstpl
add
fldl
sub
fldz
fcomp
fnstsw
test
jp
faddl
fstpl
call
fstpl
add
fldl
sub
fldz
fcomp
fnstsw
test
jp
faddl
fstpl
call
fstl
add
fld1
fstl
fcompp
fnstsw
test
jnp
lea
fldl
sub
fstpl
fldz
fldl
fcom
fnstsw
fstp
test
jne
faddl
fstpl
call
fstpl
add
fldl
sub
fstpl
call
fstl
add
fld1
fstl
fldl
fcomp
fnstsw
fstp
test
jne
add
fcompl
fnstsw
test
jp
mov
cmp
fldl
fstl
fldl
fstl
je
cmp
jne
fldl
fcom
fnstsw
fld
test
jnp
fmull
test
fstl
je
fcomp
fnstsw
fstp
test
je
fstp
fstp
fldl
sub
faddl
faddl
fstpl
call
movzbl
fstpl
fldz
add
cmp
fld
jne
test
fstp
fldl
fld
je
fldl
fld
fsubp
fldl
fcom
fnstsw
fstp
test
jp
fstp
fsubp
fstl
fxch
fstl
fcompp
fnstsw
test
jnp
lea
fldl
faddl
sub
fstpl
call
mov
fsubrl
mov
fldl
mov
fstpl
mov
mov
fstpl
mov
mov
mov
add
mov
pop
pop
pop
pop
add
ret
xor
jmp
lea
jmp
fstp
fstp
jmp
push
mov
sub
push
push
neg
push
sbb
and
push
mov
mov
mov
or
push
push
lea
call
test
jne
mov
push
mov
call
test
je
mov
mov
mov
push
mov
call
test
jne
mov
push
push
push
call
add
jne
mov
test
je
cmp
je
cmp
je
test
jne
test
jne
xor
inc
mov
lea
cmp
movl
je
cmpl
je
mov
call
lea
call
lea
call
testb
jne
testb
je
push
pop
mov
lea
cmp
movl
je
cmpl
je
mov
call
lea
mov
call
lea
call
xor
inc
pop
pop
pop
leave
ret
mov
mov
and
test
jne
or
jmp
mov
cmp
je
cmp
je
mov
push
push
push
call
test
jne
jmp
xor
inc
jmp
push
pop
jmp
push
jmp
push
jmp
testb
je
push
pushl
lea
call
pop
pop
push
mov
call
cmpl
jne
jmp
mov
lea
neg
sbb
and
mov
andl
push
call
pop
ret
mov
lea
push
mov
or
lock
dec
pop
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
push
mov
push
call
mov
test
pop
je
push
call
pop
push
call
pop
pop
xor
pop
ret
push
mov
push
mov
cmpl
je
push
push
mov
push
push
pushl
call
mov
test
jne
pop
pop
pop
pop
ret
mov
test
je
lea
push
push
mov
call
test
je
pushl
mov
mov
call
test
je
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
push
push
call
jmp
xor
jmp
xor
jmp
push
mov
cmpl
jne
push
movl
call
test
pop
je
andl
andl
andl
mov
incl
mov
pop
ret
push
mov
push
push
push
push
mov
mov
call
test
je
push
mov
call
test
pop
je
mov
push
mov
andl
movl
add
mov
push
call
test
mov
je
mov
push
call
pop
test
mov
je
mov
push
call
mov
mov
push
pushl
push
call
test
js
lea
call
pop
pop
leave
ret
xor
jmp
push
mov
sub
mov
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
push
lea
lea
movl
mov
mov
mov
call
pushl
mov
lea
mov
call
mov
cmp
je
mov
lea
push
call
mov
lea
mov
call
lea
call
lea
call
mov
pop
leave
ret
push
mov
call
test
jne
mov
pop
ret
mov
test
je
mov
pop
jmp
xor
pop
ret
push
mov
sub
andl
push
push
mov
mov
push
lea
call
mov
lea
push
push
call
test
js
mov
mov
lea
push
push
call
test
js
add
push
mov
call
mov
push
pushl
pushl
call
lea
mov
call
mov
pop
pop
leave
ret
mov
test
push
push
je
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
push
call
mov
mov
xor
pop
pop
ret
add
mov
test
jne
mov
andl
mov
jmp
push
mov
and
sub
push
mov
mov
push
push
mov
call
test
je
push
mov
call
test
je
mov
lea
lea
movsl
movsl
movsl
lea
push
push
movsl
call
mov
mov
mov
andl
andl
andl
andl
add
mov
add
mov
add
mov
add
lea
call
cmp
jl
mov
cmp
jl
pushl
pushl
pushl
pushl
call
inc
add
add
test
push
mov
push
je
mov
mov
cmp
je
add
mov
test
jne
mov
andl
mov
mov
call
test
jne
mov
mov
call
test
je
push
call
test
pop
je
add
mov
push
call
xor
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
push
call
mov
mov
xor
jmp
push
push
lea
mov
mov
push
push
push
call
mov
cmp
je
testl
je
add
cmp
jne
pop
ret
push
mov
push
mov
push
push
lea
push
mov
call
mov
cmp
je
cmpb
mov
jne
mov
push
lea
push
mov
call
push
pushl
or
push
mov
call
mov
push
push
push
mov
call
test
je
mov
movb
pushl
push
call
cmpb
pop
pop
jne
cmpb
jne
cmpb
jne
mov
test
jne
test
jne
pop
pop
pop
pop
ret
mov
neg
sbb
and
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
sub
push
mov
push
lea
cmp
jb
cmp
mov
mov
jb
lea
push
mov
mov
sub
add
test
jne
mov
test
jne
test
je
mov
cmp
jbe
mov
and
mov
mov
movb
mov
mov
mov
push
push
push
call
add
pop
pop
pop
add
ret
mov
push
push
push
push
mov
call
test
jne
pop
pop
pop
add
ret
lea
cmp
jbe
jmp
mov
test
push
push
je
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
push
call
mov
mov
xor
pop
pop
ret
add
mov
test
jne
jmp
push
mov
push
mov
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
je
mov
test
je
add
mov
mov
xor
pop
pop
ret
mov
movl
jmp
mov
test
je
mov
push
call
xor
mov
mov
jmp
mov
test
je
lea
jmp
mov
test
je
lea
jmp
xor
jmp
xor
jmp
push
mov
testb
jne
mov
push
mov
push
pushl
call
test
pop
pop
je
pushl
mov
pushl
pushl
call
pop
pop
ret
xor
jmp
push
mov
sub
push
push
mov
push
lea
cmpl
mov
je
mov
andl
mov
lea
push
push
call
test
jne
mov
test
je
mov
mov
mov
mov
xor
pop
pop
pop
leave
ret
push
call
test
pop
je
movl
movl
andl
mov
test
mov
je
mov
push
call
cmpl
je
lea
call
mov
mov
push
mov
mov
mov
call
mov
push
push
pushl
pushl
pushl
call
pop
pop
push
pushl
pushl
call
test
lea
jne
call
lea
call
jmp
mov
lea
push
mov
or
lock
dec
pop
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
push
lea
mov
test
je
mov
push
mov
push
push
call
test
je
test
je
mov
push
call
pushl
mov
mov
call
mov
push
mov
call
mov
test
pop
jne
pop
xor
pop
ret
xor
jmp
mov
test
je
mov
push
push
pushl
push
call
sub
je
dec
je
dec
je
ret
orl
mov
mov
ret
mov
mov
test
je
add
ret
push
mov
sub
andl
push
push
push
mov
push
mov
lea
call
cmpb
jne
cmpb
je
mov
testb
je
cmpb
jne
mov
mov
call
test
je
mov
mov
call
mov
movb
mov
mov
mov
lea
mov
call
mov
test
mov
je
mov
push
call
mov
mov
call
andl
push
mov
add
call
cmp
lea
jne
call
mov
mov
call
mov
test
je
mov
push
call
push
mov
call
mov
test
js
test
je
mov
push
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
lea
call
xor
jmp
lea
call
add
call
mov
jmp
mov
mov
mov
mov
ret
push
mov
cmpl
jne
xor
test
jne
mov
test
jne
pop
ret
mov
mov
mov
mov
jmp
mov
lea
push
mov
or
lock
dec
pop
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
mov
sub
push
mov
push
push
mov
call
movl
movl
movl
movl
xor
mov
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movb
movb
lea
mov
and
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
movb
mov
mov
mov
mov
cmp
lea
mov
mov
je
add
mov
mov
mov
mov
mov
push
mov
call
cmp
pop
je
movl
mov
mov
cmp
mov
je
mov
push
call
lea
call
mov
cmp
mov
je
mov
push
push
pushl
push
call
mov
mov
push
push
pushl
push
call
mov
mov
push
push
pushl
push
call
lea
call
xor
inc
incl
cmp
je
cmp
je
cmp
je
incl
mov
pop
mov
pop
mov
pop
leave
ret
orb
mov
mov
orl
cmp
je
push
lea
call
cmp
je
mov
jmp
push
xor
mov
call
movl
push
pop
mov
call
pop
xor
jmp
lea
push
push
call
cmp
pop
pop
jne
call
add
lea
mov
call
jmp
push
call
cmp
pop
je
mov
mov
mov
call
test
je
mov
xor
inc
cmp
jne
jmp
push
push
push
call
add
jmp
xor
jmp
push
mov
push
lea
push
mov
call
test
jne
and
lea
call
push
call
pop
xor
pop
pop
ret
push
mov
sub
test
push
mov
push
mov
je
test
je
test
jne
push
pushl
add
push
mov
call
mov
sub
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
xor
cmpw
je
xor
test
jne
add
add
jmp
mov
jmp
ret
int3
int3
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
mov
add
push
lea
mov
call
test
js
mov
xor
cmp
lea
mov
mov
mov
mov
movl
movl
mov
mov
je
movl
mov
mov
call
cmp
mov
je
push
mov
lea
call
test
je
mov
mov
call
lea
mov
lea
push
lea
mov
push
movl
mov
mov
movl
mov
mov
movb
call
mov
add
cmp
mov
je
lea
push
push
push
add
push
call
lea
push
lea
push
lea
push
mov
mov
movl
mov
mov
mov
call
test
mov
js
mov
cmp
je
xor
jmp
lea
mov
mov
push
call
add
test
je
mov
add
cmp
jne
jmp
movl
movl
lea
push
lea
add
dec
and
mov
push
mov
mov
movl
mov
add
mov
call
test
mov
jns
cmp
jne
mov
test
jne
test
jne
cmpl
jne
orl
lea
push
lea
add
mov
push
push
mov
mov
movl
mov
add
mov
call
test
mov
jns
cmp
jne
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
cmp
je
mov
push
mov
call
mov
mov
test
jne
test
jne
mov
add
cmp
jne
mov
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
cmp
jne
mov
cmp
je
mov
mov
mov
call
mov
push
call
add
cmp
je
mov
mov
push
push
call
mov
cmp
mov
je
addl
cmp
je
mov
mov
lea
push
mov
call
lea
lea
push
lea
push
mov
movl
movl
movl
mov
movb
call
push
push
push
lea
push
push
call
mov
mov
add
test
jne
test
jne
test
mov
mov
js
mov
cmpl
lea
je
test
js
mov
mov
lea
push
lea
lea
movl
mov
movl
call
testl
jne
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
mov
call
mov
lea
call
mov
test
js
mov
test
je
push
xor
mov
call
mov
cmpl
je
mov
add
xor
test
mov
js
lea
push
mov
call
mov
mov
mov
push
push
movl
call
mov
movl
addl
cmpl
je
lea
call
mov
test
jne
test
jne
xor
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
mov
call
add
test
jne
mov
push
lea
call
jmp
push
lea
push
lea
movl
mov
call
mov
mov
jmp
push
mov
push
push
mov
mov
test
je
mov
lea
push
pushl
add
push
push
call
mov
and
jne
mov
test
je
mov
test
jne
pushl
mov
call
pop
pop
pop
ret
mov
test
je
mov
push
call
mov
jmp
push
mov
mov
mov
lea
push
pushl
push
call
test
js
mov
xor
cmp
sete
mov
xor
pop
ret
push
mov
mov
mov
test
je
mov
cmp
jae
cmpb
je
push
push
call
dec
pop
pop
je
dec
je
dec
jne
mov
movl
xor
pop
ret
dec
je
dec
jne
mov
andl
jmp
mov
movl
jmp
mov
movl
jmp
decw
movzwl
test
push
jne
xor
mov
xor
inc
mov
shl
shr
test
jne
inc
cmp
jl
andl
xor
pop
ret
push
mov
call
test
jns
pop
ret
push
lea
sub
mov
xor
mov
andl
push
push
push
mov
push
lea
call
lea
push
lea
xor
add
mov
push
inc
push
movl
movl
mov
call
testb
mov
jne
testb
jne
testl
jne
mov
xor
cmp
mov
je
mov
lea
push
push
call
cmp
lea
mov
mov
mov
movl
movl
mov
mov
ja
push
lea
call
mov
lea
push
lea
push
push
movl
movl
mov
call
testb
mov
jne
testb
jne
test
js
pop
add
add
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
pushl
andl
mov
lea
call
mov
test
je
lea
push
lea
push
movl
movl
mov
mov
push
call
testb
jne
testb
jne
push
pop
cmp
je
mov
mov
lea
push
push
call
push
pop
cmp
je
lea
call
incl
mov
cmp
jb
mov
sub
push
push
lea
push
call
add
jo
add
push
out
add
std
xchg
aam
sti
loop
add
icebp
jge
scas
out
mov
fidivrl
jns
cmc
push
fcmovne
push
addl
in
push
push
lea
push
push
push
push
push
push
lea
push
call
addl
add
sti
mov
add
add
mov
xchg
sti
clc
pushf
js
add
cmpsl
mov
arpl
mov
fwait
stos
sub
pop
push
push
push
lea
push
push
push
call
mov
les
mov
pusha
mov
add
pop
add
in
add
add
fsts
lcall
loop
jne
add
imul
add
add
pop
sar
cli
jae
xchg
mov
add
in
lcall
push
push
push
lea
push
push
call
add
icebp
addr16
add
mov
add
fptan
add
cld
fstl
sahf
jb
add
jo
add
add
add
mov
into
add
lahf
rcl
jo
out
add
fstpt
add
pop
in
cmc
add
add
addl
aam
add
stos
lahf
jbe
sub
pop
push
push
push
push
push
lea
push
push
call
pop
mov
out
nop
mov
lret
int
add
add
add
mov
add
add
add
add
mov
xchg
lds
test
aad
pop
pop
mov
pushf
push
sub
pop
push
call
push
push
push
push
push
push
push
push
push
push
call
xchg
add
imul
push
add
add
mov
add
add
add
stos
cmpsl
lods
xchg
notl
add
xlat
add
add
fcmovu
fldcw
roll
add
add
shrb
add
call
sub
pop
push
call
push
push
push
push
push
push
push
push
call
pop
mov
stos
add
add
add
popf
iret
add
add
sahf
test
stos
add
jno
add
sbbl
add
mov
loop
insb
clc
call
cld
pop
cld
cltd
mov
lcall
push
add
add
push
push
call
mov
shl
pusha
gs
imul
add
mov
add
test
add
mov
loop
add
push
enter
add
add
add
add
add
pusha
sub
pop
mov
mov
push
push
push
push
push
push
push
call
push
add
jbe
fstpl
in
sub
add
mov
add
push
add
jae
add
imul
add
in
fadds
add
push
add
sub
pop
add
push
lea
push
lea
push
push
lea
push
push
push
push
call
add
out
addl
add
add
loope
int3
mov
mov
je
add
shl
mov
hlt
mov
loopne
lcall
ret
add
add
push
push
push
call
add
pop
add
push
add
add
add
add
incb
movsb
in
add
imul
into
add
add
sub
pop
add
mov
xor
push
push
dec
rol
inc
push
push
pop
add
xor
add
sub
dec
pop
shr
pop
push
push
lea
push
push
push
push
push
push
push
lea
push
call
in
in
add
add
mov
insb
int
add
outsl
add
imul
add
fstp
mov
movsl
ljmp
add
pop
add
std
pop
jmp
add
scas
add
incb
add
repnz
pop
stos
add
stc
push
enter
push
add
sub
pop
pushl
push
push
lea
push
push
lea
push
call
movl
add
lods
hlt
jnp
pusha
xchg
fiaddl
mov
add
add
jp
add
add
jbe
add
shlb
add
push
popa
add
filds
mov
mov
mov
xchg
add
pop
call
push
push
push
push
push
push
lea
push
call
add
fiaddl
add
rolb
data16
mov
scas
add
push
shll
jge
add
sub
pop
mov
push
push
lea
push
push
push
call
add
add
xchg
add
push
popa
add
ljmp
add
ret
add
jmp
adcl
add
push
add
mov
add
je
jge
fbstp
lea
add
in
pop
movl
push
lea
push
push
push
call
out
aad
pop
scas
add
leave
lods
add
scas
out
add
add
jno
nop
loop
push
lahf
movb
add
mov
cmc
push
push
add
in
cmc
fcomps
cltd
push
xchg
js
add
sub
pop
lea
push
push
push
lea
push
push
push
push
push
push
push
push
call
addr16
add
add
add
add
mov
movl
pop
add
add
add
clc
mov
add
gs
add
add
push
lcall
jne
push
push
push
push
call
loop
add
add
jae
les
sti
add
lcall
add
fiaddl
adcb
add
roll
jp
pusha
mov
leave
xchg
lods
mov
pushl
push
push
push
push
push
call
add
add
lods
lahf
mov
mov
add
mov
pop
jno
movsl
in
add
mov
loope
jmp
call
mov
mov
add
sti
add
rcll
add
add
pop
add
filds
subb
in
pop
call
push
push
lea
push
lea
push
call
add
fiaddl
fadds
jge
popl
gs
add
jl
push
iret
add
add
fdivr
fwait
add
add
scas
jbe
lea
lcall
out
add
pushl
push
push
lea
push
push
lea
push
push
push
call
jbe
aad
jmp
push
in
xchg
push
ffreep
add
add
cmpsl
xchg
jb
push
add
jnp
mov
add
mov
in
add
push
cld
add
fsubrl
fwait
add
add
icebp
pop
push
add
add
mov
add
add
pushl
push
push
lea
push
push
push
push
lea
push
push
push
push
call
add
mov
jb
add
lahf
add
addb
push
int3
mov
mov
loope
mov
pop
gs
add
call
push
popa
push
add
std
xchg
add
add
add
cwtl
add
mov
divb
push
add
xchg
add
add
addr16
add
roll
mov
add
shrb
pop
call
push
push
not
shr
dec
ror
push
or
inc
add
dec
sub
lea
shr
rol
pop
xor
xor
add
pop
push
push
call
aad
jp
add
add
pop
int
mov
lret
cld
fstl
lods
jae
cltd
push
add
iret
int
add
mov
sub
pop
pushl
push
push
push
call
test
add
add
cmc
add
gs
test
jb
iret
pop
add
add
jns
add
int3
shl
mov
rorb
mov
add
sub
pop
call
push
push
push
push
lea
push
lea
push
push
push
push
lea
push
call
add
test
fistps
add
test
add
data16
add
stc
add
add
add
xchg
pop
arpl
jne
cli
push
add
bound
lods
add
in
fdivr
lcall
inc
push
push
rol
inc
push
xor
add
inc
sub
xor
lea
pop
dec
pop
push
push
push
push
push
push
push
push
lea
push
push
call
jp
lcall
arpl
mov
jb
in
add
hlt
add
pop
movsb
ret
add
push
add
xchg
loopne
std
rolb
jnp
jne
int
add
lods
movsl
mov
lea
push
mov
cmc
roll
test
shlb
add
mov
hlt
les
push
push
push
push
call
add
shl
add
cld
stos
mov
jne
mov
mov
movl
call
add
add
add
roll
popa
add
add
sahf
ja
rorl
fdivrs
add
cltd
test
pop
gs
addl
xchg
popf
stos
add
sub
pop
push
push
lea
push
push
call
pop
lods
add
int
cltd
pop
out
add
out
arpl
add
jbe
sahf
add
add
mov
imul
in
pop
mov
add
add
add
fildl
add
add
test
add
jge
in
hlt
pop
call
push
lea
push
push
lea
push
push
push
lea
push
lea
push
push
call
addr16
lcall
repnz
add
lods
add
add
add
jmp
ret
push
mov
icebp
add
add
out
push
mov
add
sti
lds
jno
add
add
lcall
clc
push
push
push
lea
push
push
push
push
push
push
call
test
cmpsb
add
add
add
add
add
add
int
push
out
add
add
add
add
add
shrb
pop
add
add
fildl
mov
jne
add
jmp
add
in
bound
movsb
les
add
jmp
ffree
pop
iret
jle
addl
pop
push
mov
push
push
push
push
push
push
call
ficoml
push
add
jbe
add
ljmp
cli
orb
out
add
out
add
mov
add
add
fldcw
call
add
push
push
push
push
push
push
push
call
call
out
in
clc
into
repnz
testl
add
in
loope
loopne
sahf
jecxz
fidivl
pop
fldl
lea
add
add
add
jbe
jbe
pop
add
add
mov
add
sti
out
add
iret
cld
cli
mov
jae
jbe
push
in
add
lcall
ret
add
push
push
push
push
call
add
add
add
popf
add
jle
add
pop
loop
lahf
addb
add
mov
lods
xchg
add
add
add
lcall
xor
scas
push
push
push
push
push
lea
push
push
lea
push
lea
push
call
scas
push
add
fldl
add
add
add
add
jb
add
add
fadds
in
add
in
add
add
test
addl
hlt
lahf
jnp
add
stos
bound
add
xchg
add
push
gs
in
fcompl
jne
push
push
call
in
sahf
jge
movsb
lods
jmp
add
add
add
add
je
mov
icebp
mov
jae
hlt
xorl
arpl
lcall
lcall
mov
push
push
lea
push
lea
push
push
lea
push
lea
push
push
push
push
push
call
shrb
add
add
add
jo
add
test
add
frstor
mov
add
add
jo
xchg
add
jge
mov
add
leave
jo
ret
and
addb
shr
push
add
ret
add
gs
xchg
push
insb
gs
push
cli
in
add
sub
pop
xor
push
lea
push
push
call
loop
repnz
mov
icebp
mov
lret
add
pop
push
add
out
add
mov
orb
bound
add
test
add
add
mov
add
incb
mov
mov
int3
add
add
add
hlt
lcall
les
lea
push
push
push
call
add
jle
add
lahf
add
mov
add
add
test
add
cmpsl
sub
pop
add
push
push
push
call
add
mov
cmpsb
clc
mov
add
movsl
add
mov
push
cmc
add
pop
add
jnp
push
xchg
data16
aad
push
iret
mov
add
sub
pop
pop
push
push
lea
push
push
push
push
push
push
push
push
call
fldt
add
add
add
add
mov
mov
iret
add
mov
pop
popf
xchg
add
mov
cmpsl
mov
add
add
testb
mov
add
jnp
sub
pop
mov
push
push
push
push
call
mov
add
add
add
pop
stos
enter
push
sarb
mov
rolb
add
add
testl
add
jmp
add
sub
pop
xor
push
lea
push
push
push
push
push
lea
push
push
push
push
call
pop
idivb
pop
imul
leave
repnz
xlat
test
add
shll
out
mov
jp
popf
mov
xorb
add
lcall
les
push
push
push
push
call
add
shll
arpl
push
lds
jb
add
add
add
add
add
pusha
in
les
out
add
add
shll
std
add
add
add
stos
xchg
fistps
ror
add
mov
pop
add
sahf
xchg
add
in
lcall
mov
push
push
push
push
push
call
mov
add
add
add
add
scas
add
divb
js
stos
add
mov
in
push
add
leave
call
add
lcall
add
push
push
push
push
push
push
push
push
call
nop
lock
pushf
stos
add
add
add
popf
add
testl
fdivrs
pop
movsl
pop
add
xchg
call
loopne
add
push
push
push
push
push
lea
push
call
mov
std
je
add
les
jecxz
add
fs
sbbl
int
add
add
jmp
add
add
add
jecxz
sub
pop
sub
pop
push
lea
push
push
call
add
pusha
add
pushf
hlt
fidivrs
push
ffree
add
push
add
shlb
add
push
pop
add
rclb
mov
add
push
test
add
bound
testb
imul
push
push
push
push
push
push
push
lea
push
call
cmc
add
mov
shll
add
imulb
enter
add
jp
gs
sbbl
lcall
push
push
push
lea
push
push
push
push
push
push
call
sahf
les
mov
fld
add
add
add
mov
add
xchg
push
add
add
popf
js
pusha
xlat
sub
pop
mov
add
push
push
lea
push
push
push
push
push
push
push
lea
push
call
add
sahf
faddl
clc
roll
enter
add
jmp
test
into
into
add
aad
outsl
jns
add
add
mov
mov
add
add
add
pop
rcll
push
pop
lcall
jmp
imul
push
mov
jle
in
jae
add
add
add
push
lea
push
push
push
push
push
lea
push
lea
push
push
call
lahf
xchg
add
cmpsl
add
lret
add
cli
add
add
fiaddl
rcr
mov
add
mov
in
fcompl
inc
and
lods
mov
add
add
add
add
pop
mov
mov
jge
je
xchg
add
div
mov
add
add
mul
xchg
add
fldl
pop
add
add
push
add
mov
add
add
loop
add
cwtl
repnz
sub
pop
xor
push
push
push
push
call
add
movsb
add
cwtl
add
lods
xchg
fiaddl
imul
lcall
test
pop
add
add
add
xchg
add
add
jle
add
add
add
push
addb
in
lock
lcall
les
add
push
push
push
lea
push
push
push
call
push
add
xchg
fsubrl
mov
cmc
mov
mov
add
outsl
outsl
add
loop
lods
mov
add
mov
add
gs
add
test
fcomi
loope
add
add
add
push
push
mov
mov
mov
add
mov
push
and
lret
lods
mov
stos
pop
mov
xor
push
lea
push
call
into
add
shr
xchg
ficoml
int3
add
cmc
adc
add
add
add
push
add
arpl
mov
lahf
fcmovb
out
mov
imul
mov
rorl
add
push
in
loop
sub
pop
xor
push
push
push
push
call
cltd
add
fwait
mov
add
add
add
fisubrl
rcrb
add
test
add
popf
cwtl
les
jecxz
jno
cltd
mov
xchg
add
add
stos
pushf
mov
add
out
addl
mov
sub
pop
add
push
push
call
imul
hlt
mov
xchg
cmc
xchg
jp
jns
je
add
add
out
add
add
add
ret
mov
add
add
push
lock
movsb
imul
add
add
push
fwait
add
mov
xchg
out
loopne
icebp
jne
sub
pop
mov
xor
push
push
call
add
xor
jno
mov
mov
jae
add
add
mov
mov
stos
add
scas
bound
clc
notb
add
lock
movb
xchg
ljmp
loopne
add
add
add
add
add
cmc
add
aad
xchg
mov
push
add
add
sub
pop
add
add
push
push
call
lahf
cmpsl
mov
mov
bound
iret
xchg
push
out
idivl
add
sbbb
xchg
lock
pop
movsl
ja
jo
add
add
fldl
add
xchg
add
mov
push
add
add
add
jae
jmp
mov
add
pop
add
mov
pop
mov
push
push
xor
sub
not
rol
push
xor
add
add
add
shl
shl
sub
lea
sub
sub
pop
xor
add
pop
push
push
call
popl
jo
add
addl
xlat
std
int3
add
add
lret
addr16
in
add
js
add
arpl
add
add
add
clc
pop
pushl
push
push
push
push
push
push
push
push
push
call
bound
add
mov
add
ret
in
add
mov
cmpsb
mov
add
add
icebp
loop
jnp
cmc
pop
add
add
add
jbe
push
pop
add
pop
stos
sub
pop
call
push
push
push
push
push
call
filds
add
mov
popa
add
in
jb
bound
enter
fstpt
xchg
test
cwtl
out
mov
mov
scas
movsl
ja
pusha
add
mov
jae
add
add
add
jb
push
jmp
lret
add
add
sbb
add
push
add
inc
add
push
or
not
add
ror
not
add
lea
sub
dec
inc
pop
rol
shl
pop
push
push
push
lea
push
push
push
lea
push
push
call
test
add
add
add
add
push
mov
fs
add
ljmp
lahf
push
fadds
clc
sub
pop
push
push
push
lea
push
push
push
push
call
add
add
add
add
sti
add
pop
loopne
jp
add
mov
mov
pop
jmp
add
add
data16
js
mov
sub
pop
call
push
push
push
push
push
call
add
add
rcr
add
add
movl
scas
pop
add
pushf
icebp
add
loopne
gs
add
add
jle
mov
mov
xchg
mov
ror
loope
mov
add
popl
mov
add
add
mov
add
cmpsb
add
in
pop
mov
push
pop
push
push
push
pop
mov
push
shl
sub
dec
dec
pop
add
push
shr
not
pop
add
add
push
ror
pop
mov
xor
push
lea
push
lea
push
push
push
push
push
call
add
int3
lods
fsubrs
fistpl
add
push
insb
faddl
add
insb
mov
add
add
pusha
xchg
arpl
pop
xlat
jns
pop
hlt
add
ja
add
aad
add
int
add
sahf
add
flds
cmpsb
cltd
arpl
add
shl
add
mov
push
stos
add
jne
push
push
inc
add
pop
mov
xor
push
push
push
push
lea
push
push
push
call
mov
andb
jl
add
xchg
lods
leave
mov
add
js
out
xchg
add
test
movsl
add
add
jo
enter
xlat
add
add
cmpsb
iret
push
push
add
jnp
fdivrp
add
add
loop
fstpl
arpl
mov
in
in
lcall
lock
push
push
lea
push
push
call
add
scas
add
add
imul
testb
add
add
faddl
int
add
add
mov
out
fadds
jmp
mov
je
jne
add
lock
sub
pop
pop
mov
xor
push
push
push
push
call
add
scas
je
in
fstpt
add
xchg
add
add
push
je
push
mov
lods
push
add
add
push
mov
cli
cmpsb
add
add
jmp
mov
rep
push
rol
pop
mov
push
push
lea
push
push
push
push
push
push
push
push
push
call
add
fadds
add
mov
add
shlb
xchg
sti
mov
xchg
add
add
add
jb
push
int
les
je
loope
imul
sub
pop
xor
push
push
push
call
fmul
fldl
rol
add
popf
xchg
mov
loop
fldt
ljmp
jp
ret
mov
mov
add
add
add
add
rclb
add
sub
pop
add
push
lea
push
push
call
add
gs
add
add
add
add
stc
add
xchg
in
cwtl
push
outsl
add
add
movsb
add
add
in
add
movb
pop
add
sbbl
mov
nop
add
add
push
lods
fistpl
add
in
cld
add
lcall
leave
je
push
push
push
lea
push
push
push
push
push
push
lea
push
call
add
cwtl
shlb
jae
call
add
push
push
cwtl
imul
imul
add
popa
add
enter
mov
add
add
add
test
add
lcall
xor
scas
push
push
call
xchg
pop
cmpl
add
lcall
add
sti
ja
loope
in
add
test
into
add
cmpsl
leave
xchg
mov
add
pop
test
push
xchg
lret
add
clc
pop
mov
push
push
push
push
call
int
imul
scas
add
popa
addl
pop
bound
mov
xchg
mov
mov
rcr
shl
add
cwtl
sub
pop
xor
push
push
push
push
push
push
push
push
call
add
pop
hlt
mov
lret
add
lods
xchg
call
add
mov
in
xlat
add
les
les
push
push
push
push
lea
push
lea
push
push
call
lret
cwtl
fiadds
xchg
addb
add
add
lret
aad
add
add
add
push
fildll
mov
lcall
repnz
lea
push
push
push
call
mov
out
add
pop
clc
lcall
jns
push
push
add
push
add
test
pop
cli
fsubr
call
pushf
xchg
add
int3
add
imul
xchg
add
add
mov
mov
ja
mov
cld
add
lcall
mov
lcall
jne
push
lea
push
push
push
push
push
push
lea
push
call
lea
add
div
les
imul
push
xchg
mov
xlat
out
in
add
cmc
mov
mov
push
lods
add
add
mov
outsl
test
pop
ljmp
mov
add
add
add
jge
sub
pop
push
push
sub
pop
mov
push
push
push
lea
push
push
push
push
lea
push
push
push
call
movb
add
add
push
add
movsl
add
nop
fiadds
add
add
add
add
add
push
mov
add
lods
add
in
nop
add
push
add
add
mov
add
add
call
in
cli
xchg
in
mov
add
add
push
push
lea
push
lea
push
push
push
push
call
testl
test
add
pop
lds
pop
mov
add
xchg
sahf
add
lods
push
jnp
cmpsb
jbe
push
hlt
ja
add
fld
arpl
push
rclb
add
pop
push
pop
out
cmpsl
fcmovnbe
lods
je
test
add
add
xchg
add
cltd
icebp
into
add
add
cli
sub
pop
add
push
shr
sub
lea
pop
add
push
push
push
lea
push
call
test
push
mov
xchg
add
loopne
andl
xchg
roll
les
add
mov
add
cltd
add
add
pop
xchg
jne
fs
arpl
stos
into
aam
int
in
pop
cltd
out
add
std
add
bound
mov
add
add
fstl
add
lock
jae
add
lcall
pop
rep
push
lea
push
call
flds
add
add
add
ror
xchg
xorb
mov
andl
mov
add
js
loope
cmpsb
sti
pop
pushf
add
push
mov
nop
add
dec
sub
lods
mov
lea
push
push
push
lea
push
push
call
fwait
std
shrb
lock
add
popf
add
add
aad
ja
stc
add
cmpsl
imul
loopne
repnz
add
movsb
cld
push
xchg
bnd
add
add
in
out
sub
pop
xor
push
push
push
push
push
push
call
add
int
add
movsl
xchg
movb
add
rolb
andb
out
add
ja
add
lea
lcall
les
add
push
add
add
pop
or
je
push
lea
push
push
push
push
push
call
in
add
fcoms
enter
mov
je
add
add
add
add
add
addr16
add
mov
add
add
add
leave
scas
mov
in
call
push
push
push
push
lea
push
push
call
enter
add
cmc
lahf
add
rolb
add
lods
out
push
popl
mov
add
add
push
add
jbe
jl
add
roll
xchg
add
add
add
shrl
mov
bound
lcall
sub
lea
push
push
push
lea
push
call
iret
add
pop
xchg
add
add
push
push
loope
popf
in
push
enter
add
out
add
add
jno
cmc
xchg
add
jno
addr16
in
add
data16
mov
push
mov
mov
add
lea
add
lcall
movb
add
push
lea
push
push
call
xchg
add
add
sarl
add
mov
filds
pop
add
int3
add
add
add
add
lahf
add
xchg
loope
add
leave
in
add
in
pop
push
insb
add
movsl
add
add
mov
sub
pop
rep
push
push
push
push
push
push
push
call
xchg
cli
lds
add
add
push
add
xchg
cmpsl
add
add
mov
xlat
loopne
pusha
add
arpl
in
in
pop
push
push
sub
push
or
inc
add
sub
sub
sub
xor
not
not
shr
pop
not
ror
sub
pop
push
push
push
lea
push
push
push
push
push
push
push
call
fcoml
int3
sar
sar
cld
add
xchg
int
mov
xlat
add
popl
pushf
push
mov
add
gs
pop
add
add
mov
add
add
mov
add
add
xchg
add
add
insb
add
lcall
mov
push
add
pop
mov
push
push
push
call
into
mov
add
add
add
into
mov
rolb
add
add
add
stc
ljmp
mov
add
mov
lods
mov
add
fidivrl
mov
jnp
mov
arpl
push
mov
add
pop
imul
add
loop
rolb
repnz
stc
cmpsb
add
inc
and
push
lea
push
push
push
push
push
push
lea
push
push
push
call
pop
add
add
loopne
js
add
add
mov
movb
add
imul
sahf
xlat
add
in
notb
rolb
mov
add
add
call
add
mov
add
sbb
test
loopne
inc
shr
pop
push
push
push
call
add
xlat
pop
into
add
add
xchg
add
add
ljmp
outsl
lret
mov
add
rcrl
loopne
mov
add
rcl
add
xchg
sub
pop
mov
add
push
push
lea
push
call
std
mov
xchg
add
scas
add
add
add
icebp
add
int
lods
cmpsb
data16
out
repnz
bound
test
ljmp
subl
mov
add
add
je
add
sub
pop
push
push
lea
push
push
push
push
call
fcmovb
leave
add
lds
mov
push
add
testb
mov
gs
flds
roll
nop
jo
stos
add
add
add
std
out
lret
xchg
mov
xchg
add
add
sub
pop
push
push
push
push
push
push
push
push
push
call
xlat
pushf
jmp
push
xchg
int
add
add
shll
mov
push
imulb
lret
lahf
lea
stos
add
out
movsl
movsb
in
add
jns
add
stos
pop
push
test
add
addl
add
imul
add
push
mov
lcall
mov
push
push
push
push
push
call
add
cmpsl
mov
xchg
add
xchg
xlat
ja
shl
pop
mov
sti
mov
add
add
add
pop
add
add
add
add
xchg
lea
push
add
mov
outsl
add
jb
in
cmpsl
fiadds
pop
push
sub
add
sub
pop
pop
push
inc
pop
pop
push
push
push
push
push
push
push
push
call
cmc
cmpsl
outsl
pop
test
push
jnp
push
movl
add
fcomi
call
xlat
arpl
add
orl
add
lds
add
leave
popa
jnp
stc
add
orl
sbbl
add
loop
test
sub
pop
leave
push
lea
push
call
loop
add
xchg
mov
add
loope
repnz
faddl
pop
leave
mov
sbbl
add
addb
int3
testb
mov
clc
push
cltd
jle
addb
mov
add
add
add
ret
push
push
not
pop
mov
add
push
add
sub
pop
push
push
push
lea
push
push
push
lea
push
push
push
push
call
add
xchg
add
lods
add
mov
fldl
mov
cmpsb
rol
cmc
add
add
rcll
add
pop
mov
sub
pop
push
push
shr
dec
pop
push
push
ror
pop
push
push
push
push
push
call
push
add
add
mov
add
add
add
movsl
pop
add
cld
add
aad
add
lods
hlt
in
add
pop
add
add
add
arpl
movsl
add
fistpll
add
imul
add
fadds
popa
imul
add
testb
add
jmp
sub
pop
movl
addl
push
push
call
add
add
jb
rolb
movsl
xchg
add
scas
jne
scas
add
pop
shrl
add
out
add
add
add
add
ficomps
out
xchg
xchg
add
add
add
add
cltd
fstpt
pop
icebp
popl
rorb
rolb
add
push
lea
push
push
push
call
xchg
add
jno
add
cmpsl
jnp
push
mov
add
ret
add
mov
add
jns
roll
push
add
clc
nop
add
jmp
add
add
add
add
add
mov
lret
add
pop
add
lcall
inc
or
or
test
push
add
add
lock
add
jl
popf
pushf
add
mov
push
lock
enter
xchg
lea
add
imul
rcll
add
mov
add
lret
add
aad
hlt
in
mov
int
pop
add
push
jns
xlat
out
sub
pop
pop
pop
push
add
dec
xor
pop
pop
push
push
push
push
call
cmc
popa
pop
sti
lahf
out
std
icebp
add
lcall
bound
add
pop
xchg
jne
add
cli
jle
in
lock
lcall
push
sub
shr
add
pop
leave
push
push
lea
push
lea
push
push
push
push
call
rcrb
iret
mov
je
add
add
lret
add
push
in
xchg
ja
add
xchg
add
test
add
add
push
lea
push
push
push
push
lea
push
push
push
call
add
add
sarb
pop
add
add
add
into
add
mov
add
scas
pusha
add
data16
cmpsb
add
add
mov
add
add
mov
add
movb
cli
sub
pop
push
push
push
push
lea
push
call
jne
insb
add
cmpsl
xlat
add
add
mov
add
in
mov
loopne
ret
add
loope
add
add
add
add
add
ja
ja
in
lock
mov
push
lea
push
push
push
push
call
add
add
lret
into
mov
mov
out
add
jo
add
jmp
icebp
je
add
out
ljmp
jns
add
loope
add
xchg
add
sti
add
nop
int3
cmc
add
enter
cltd
xlat
test
cld
push
push
xor
pop
push
push
pop
push
push
shr
sub
pop
push
testl
push
lea
push
call
add
xchg
rolb
stos
mov
cwtl
add
push
mov
mov
mov
pop
xchg
mov
mov
add
test
add
lods
add
out
iret
popf
add
mov
add
add
test
test
mov
add
in
clc
pop
addl
push
shr
shl
add
pop
push
push
push
lea
push
push
push
lea
push
push
push
push
call
pop
jo
add
stos
lret
test
add
add
add
add
add
call
cmc
add
faddl
idiv
jo
add
lret
mov
jle
add
add
cmp
inc
cld
push
not
pop
pushl
push
push
lea
push
push
push
push
push
push
call
xchg
mov
add
cmc
xchg
jns
out
add
add
add
jl
pop
add
movl
add
add
add
jbe
mov
lcall
in
in
push
call
push
lea
push
push
lea
push
call
add
mov
push
add
add
out
add
mov
push
add
add
not
stc
out
mov
mov
add
mov
add
bnd
fildl
test
in
lock
cmpl
jne
pop
push
dec
rol
xor
add
pop
pop
push
add
shl
dec
pop
pop
push
push
push
push
push
call
xchg
clc
fxch
cmpsb
jp
repnz
add
mov
test
push
pop
jp
add
add
movsl
repnz
jne
testb
in
in
pop
pop
push
push
push
call
add
fidivrl
in
add
mov
lahf
add
mov
jbe
jecxz
add
call
iret
pop
std
add
add
cwtl
add
cli
xchg
aam
test
js
imul
add
add
mov
bound
in
hlt
pop
leave
ret
push
lea
push
push
lea
push
lea
push
push
lea
push
call
add
add
add
jmp
scas
add
jae
flds
pop
jno
jno
add
xchg
push
mov
ret
sahf
clc
jmp
out
sahf
imul
jae
mov
jb
roll
add
xchg
add
mov
add
mov
popl
mov
jl
add
xchg
sub
pop
push
mov
push
push
push
push
push
lea
push
push
lea
push
call
hlt
js
mov
add
mov
loope
xchg
pop
add
idiv
jne
add
pop
mov
in
loopne
add
push
lea
push
lea
push
push
push
push
lea
push
push
lea
push
call
jge
in
pop
add
add
add
nop
add
add
xchg
roll
add
mov
jp
fisttpll
mov
mov
add
jmp
pop
mov
xlat
jns
xchg
out
add
test
add
add
out
jmp
add
imul
fcompl
push
push
sub
pop
push
push
lea
push
push
push
push
push
push
push
lea
push
call
push
cmpsl
xchg
add
add
scas
mov
add
add
add
addb
addb
out
fldcw
cmpsb
jle
lea
push
pop
push
push
sub
sub
shr
pop
movl
push
push
push
lea
push
call
jge
add
jnp
add
add
jmp
mov
add
push
mov
add
add
add
fidivrl
ficoms
add
mov
add
pop
mov
add
lock
push
push
push
call
add
stos
mov
pop
out
jmp
add
add
add
mov
add
cmc
fcoms
sub
pop
call
push
push
push
push
lea
push
push
push
push
call
jae
mov
add
stc
in
movsl
jmp
add
add
add
jl
lahf
add
add
test
add
jnp
fiaddl
xchg
add
pop
lcall
call
push
push
lea
push
push
push
call
add
iret
mov
ljmp
in
hlt
add
mov
add
je
push
xchg
add
add
add
push
add
add
xorb
in
in
pop
subl
cmpl
jne
push
push
push
call
add
mov
out
cwtl
push
add
popa
jle
idivb
stc
add
movsl
add
ja
pop
pop
add
add
jge
add
lea
js
add
mov
add
loopne
test
call
rolb
push
push
lea
push
lea
push
push
push
push
push
push
push
call
test
out
mov
add
add
push
add
hlt
fwait
jns
lods
xchg
push
pop
pop
scas
fdivp
jle
jmp
xchg
add
xchg
add
sub
pop
pop
push
lea
push
push
push
push
push
push
call
fildl
shll
je
add
pushf
add
add
jbe
pop
mov
fadds
xchg
mov
xchg
in
jmp
mov
add
je
sub
pop
pop
push
ror
add
not
shr
pop
pop
push
push
lea
push
push
push
push
push
push
lea
push
push
call
mov
pop
add
jmp
out
add
push
add
push
add
jne
mov
add
icebp
lods
push
test
arpl
mov
mov
mov
out
add
loope
imul
add
call
xchg
enter
sub
pop
leave
push
push
push
push
push
lea
push
push
lea
push
call
add
pop
add
add
fsubp
stc
mov
mov
mov
addr16
idivl
xchg
cmpsb
add
add
mov
xchg
scas
add
into
add
imul
pusha
add
mov
push
lea
push
mov
and
in
loopne
ret
push
dec
add
pop
push
mov
push
push
push
lea
push
push
push
push
lea
push
push
push
call
add
mov
add
pop
filds
add
add
xchg
sti
add
add
rolb
imul
add
sub
pop
add
push
push
push
push
push
push
push
push
push
call
fcompl
push
pop
mov
sahf
mov
add
mov
in
cmpsl
mov
add
push
call
add
add
xorl
add
cli
icebp
push
mov
lcall
push
push
lea
push
call
mov
jge
scas
xchg
add
push
add
test
iret
add
jle
pop
imul
loop
mov
lods
loop
pusha
add
add
jp
xchg
fldl
lods
xchg
cltd
cmc
add
add
pop
add
in
clc
pop
push
push
push
push
add
xor
not
ror
push
and
add
inc
sub
shl
dec
pop
shl
pop
push
lea
pop
pushl
push
push
lea
push
lea
push
push
push
lea
push
push
lea
push
push
call
clc
mov
mov
std
add
iret
xchg
add
test
mov
add
pop
jbe
jmp
add
cld
out
in
mov
add
mov
add
pop
add
add
add
call
xchg
add
andl
rolb
bound
jl
cmpsb
cmpsb
add
in
fcomps
mov
sub
sub
dec
pop
call
push
push
push
call
add
push
jne
cmpsb
add
add
pop
add
push
xchg
add
add
add
lds
add
lods
add
in
add
movsb
cmpsb
add
push
add
add
lahf
popf
add
inc
or
not
inc
pop
lea
push
push
push
push
push
push
lea
push
call
jle
add
repnz
mov
pop
add
push
xchg
add
add
call
jnp
out
scas
data16
in
in
sub
push
pop
mov
push
push
push
push
push
push
lea
push
push
call
add
imul
add
add
loope
mov
add
scas
add
add
mov
ja
lret
movsl
add
add
add
lods
add
pop
add
nop
fcomp
jbe
add
fucomp
add
add
add
add
out
lock
add
add
add
xchg
add
nop
push
jmp
add
add
sbbb
add
add
add
sub
pop
shr
push
add
sub
lea
sub
pop
add
push
lea
sub
add
pop
mov
push
lea
push
lea
push
push
push
push
push
call
add
cmpsb
loope
add
add
add
add
cmpsl
add
add
add
add
push
add
icebp
add
rolb
add
scas
add
xchg
frndint
add
add
ja
push
add
mov
add
in
mov
push
sub
not
pop
add
push
sub
shr
pop
add
push
lea
push
lea
push
push
call
scas
add
add
movsl
mov
aad
pop
f2xm1
jne
ret
add
idivl
add
add
mov
add
add
imul
add
push
fwait
hlt
repnz
mov
add
add
sub
pop
mov
push
lea
push
push
push
push
call
add
mov
divb
mov
addr16
mov
mov
add
lcall
add
push
pop
mov
cmp
jne
push
push
call
mov
loop
add
add
testl
test
scas
lahf
add
add
add
addl
lcall
std
add
add
add
icebp
out
lahf
pop
add
add
fisttpll
add
in
clc
lcall
cwtl
fadds
add
jne
mov
push
not
inc
pop
movl
push
shl
rol
pop
jmp
mov
push
inc
sub
sub
pop
mov
push
shl
add
pop
sub
jne
mov
push
shr
add
dec
pop
movl
push
lea
not
add
pop
jmp
push
push
push
lea
push
call
lods
lcall
pop
movsl
add
subl
lahf
fisubl
xlat
loop
xchg
add
addb
mov
xlat
xchg
cmpsb
test
add
call
add
jnp
sub
pop
mov
push
add
shl
pop
mov
cmp
jne
push
lea
ror
add
pop
mov
push
shr
pop
movl
jmp
push
sub
add
dec
pop
mov
push
rol
inc
pop
cmpw
jne
push
push
call
movsb
add
aad
add
out
add
faddl
add
xchg
mov
mov
add
shlb
mov
sahf
mov
ljmp
pop
mov
push
push
push
call
lret
test
add
jl
addb
repnz
jns
loope
add
add
pop
bound
idiv
jae
cld
add
leave
int3
sub
pop
movl
jmp
push
lea
push
push
lea
push
push
push
lea
push
push
lea
push
call
stos
add
pushf
pop
push
in
jecxz
xchg
add
lock
pushf
stos
add
push
jecxz
out
add
mov
popf
mov
add
lcall
in
mov
add
roll
ja
add
add
stos
test
add
add
add
xchg
add
pushl
push
rol
lea
sub
pop
pop
mov
push
lea
xor
dec
pop
mov
push
rol
dec
pop
mov
push
push
add
xor
sub
push
or
not
add
lea
inc
sub
rol
pop
xor
add
pop
push
shl
add
dec
add
pop
push
call
push
push
lea
push
push
push
push
push
call
fldl
popl
hlt
jne
xchg
mov
mov
lret
push
stos
pop
mov
ja
data16
push
push
add
stc
add
add
add
popf
xchg
add
mov
add
add
xchg
call
test
jbe
add
add
jl
test
lcall
cmp
rol
je
push
push
push
xor
add
shl
ror
shl
sub
pop
not
pop
push
rol
pop
push
push
sub
xor
dec
pop
call
cmpl
je
push
push
shr
push
sub
add
inc
sub
rol
shl
add
pop
pop
push
push
lea
push
lea
push
push
call
test
jno
xchg
in
add
in
add
push
movb
add
cwtl
add
mov
add
mov
f2xm1
mov
or
add
add
mov
add
mov
out
leave
add
mov
rorb
lcall
call
push
ror
pop
cmpl
je
push
push
add
not
add
push
and
add
sub
xor
sub
shl
sub
inc
inc
add
lea
pop
add
pop
push
push
push
push
call
jae
push
loopne
mov
imul
lock
add
add
xchg
mov
int3
add
nop
mov
mov
testb
mov
add
in
lock
lcall
push
inc
ror
pop
call
push
sub
add
shr
sub
pop
cmpl
je
push
push
shr
push
sub
add
add
sub
rol
dec
lea
pop
not
pop
push
lea
push
push
push
push
push
push
lea
push
push
call
add
pop
add
push
fdivl
imul
mov
sbb
add
add
mov
cli
int
push
popf
jle
add
pop
scas
andb
mov
add
add
sub
pop
push
push
inc
sub
dec
pop
call
push
add
xor
sub
add
pop
cmpl
je
push
push
shl
sub
rol
push
push
pop
add
xor
sub
add
lea
shr
not
pop
shr
not
inc
pop
push
push
push
push
push
call
pop
add
pop
xchg
add
outsl
push
jmp
loop
add
add
enter
fwait
loope
add
cld
xchg
in
pop
add
add
add
add
in
in
lcall
push
push
call
jae
add
mov
add
out
add
add
fnstcw
add
add
fs
pop
add
add
test
add
add
movb
out
imul
fildl
lcall
imul
push
lea
push
push
push
push
push
call
sti
add
add
lods
add
scas
pop
add
mov
push
add
cmpsl
mov
add
add
nop
int
jl
lods
lds
cmc
add
sub
pop
cmpl
je
push
push
sub
push
or
inc
add
not
sub
shl
lea
pop
pop
push
push
push
lea
push
push
push
push
push
call
in
xchg
lods
add
divl
sti
loope
fs
add
addb
mov
mov
add
xchg
add
mov
add
movb
testb
add
cld
add
fmull
push
ret
test
add
add
pop
mov
movsl
add
sub
pop
push
call
push
push
lea
push
push
push
call
push
add
xchg
add
add
insb
arpl
add
mov
stos
add
xchg
cmpl
add
add
pop
rclb
movsl
add
add
rolb
addr16
add
add
out
test
add
mov
jbe
add
pop
mov
in
in
lcall
cmp
test
inc
and
mov
sub
add
push
sub
add
ror
shr
sub
shl
add
pop
dec
ror
pop
push
push
lea
push
push
push
push
push
push
push
lea
push
call
out
add
mov
adcl
xor
ficoml
gs
add
jmp
popa
mov
add
jbe
shll
mov
push
push
data16
out
pop
add
add
add
add
mov
les
mov
les
add
lcall
call
push
push
push
lea
push
push
push
push
push
push
push
call
add
outsl
fdivrl
add
mov
pop
add
lahf
add
add
add
fdiv
hlt
pop
sub
pop
cmpl
je
push
push
push
push
pop
add
add
sub
rol
inc
not
pop
sub
lea
shr
xor
pop
push
add
pop
push
push
add
add
pop
call
push
sub
ror
pop
cmpl
je
push
push
rol
not
ror
push
push
pop
add
inc
sub
not
lea
ror
pop
shr
sub
pop
push
lea
push
push
push
push
push
push
call
mov
add
rolb
add
add
add
iret
add
cmpsb
push
jmp
add
add
nop
imul
nop
add
enter
push
push
mov
into
aad
loope
add
pop
push
add
add
add
mov
sub
pop
push
push
sub
pop
call
push
dec
shl
pop
cmpl
jne
push
lea
push
push
push
push
lea
push
lea
push
lea
push
lea
push
push
call
loopne
test
add
add
add
add
lcall
add
add
mov
add
mov
sub
pop
mov
movl
push
lea
sub
xor
dec
pop
jmp
xor
push
xor
rol
pop
pop
pop
push
push
push
call
xchg
test
filds
int
loopne
jmp
jbe
add
into
pop
jge
jp
test
add
add
enter
add
out
add
shlb
out
jnp
add
cmc
add
add
add
fiadds
xorl
add
mov
out
mov
aam
add
lcall
pop
push
shr
pop
leave
push
push
call
pop
icebp
scas
mov
add
add
clc
push
add
scas
add
pop
add
mov
add
add
hlt
add
stos
sahf
std
xchg
movsl
mov
lods
mov
add
add
mov
jp
fidivl
subl
lcall
or
push
shl
pop
push
push
rol
sub
add
pop
mov
add
push
push
push
lea
push
push
push
lea
push
push
lea
push
push
call
imul
add
add
mov
push
add
lcall
bound
call
mov
mov
mov
int
in
test
mov
mov
leave
pop
push
mov
add
add
cli
sahf
fsin
add
jge
add
test
add
add
mov
xlat
push
lea
push
xor
add
dec
sub
shr
sub
not
rol
pop
add
shl
dec
pop
push
push
push
push
push
push
push
call
mov
add
mov
pusha
add
push
test
add
add
fadds
mov
test
add
add
add
sub
pop
pushl
push
xor
pop
call
push
ror
pop
push
call
push
push
push
lea
push
push
push
push
push
push
push
call
jmp
jmp
add
add
add
fldl
movsl
add
std
test
add
add
add
mov
into
add
sub
pop
jmp
cmpl
jne
push
ror
pop
mov
push
ror
xor
sub
pop
call
push
rol
pop
ret
push
lea
push
lea
push
push
push
push
push
push
call
popa
add
leave
lret
mov
add
faddl
add
add
xchg
add
add
mov
divb
imul
push
add
push
dec
xor
pop
cmpl
jne
push
push
lea
push
or
not
add
xor
lea
shr
sub
add
rol
lea
pop
inc
inc
rol
pop
push
ror
lea
pop
pushl
call
push
shr
pop
push
call
push
push
call
fadds
imul
add
add
fiadds
xchg
cmpsl
add
add
add
add
cld
jno
int
mov
icebp
add
mov
lds
push
in
add
push
add
in
clc
lcall
aas
push
add
cmpl
je
push
push
push
push
lea
push
push
push
push
lea
push
lea
push
call
add
add
in
add
jo
scas
add
negb
xchg
add
out
sahf
aad
add
add
fistpl
jnp
add
mov
rorb
aad
imull
js
js
add
in
jbe
mov
add
add
ja
sub
pop
cmpl
jne
mov
push
sub
add
inc
pop
mov
push
push
push
lea
push
push
push
push
push
push
push
call
jo
cld
addl
outsl
pop
cwtl
test
enter
imul
add
add
add
cltd
add
add
insb
add
cmc
add
mov
loope
js
add
add
test
js
pop
add
test
test
in
fdivr
lcall
push
ror
pop
jmp
push
push
add
sub
push
xor
add
sub
add
shl
add
pop
inc
rol
pop
push
shl
pop
pushl
push
dec
pop
call
push
push
lea
push
lea
push
push
call
andb
fiadds
cwtl
add
push
add
mov
mov
push
fisubl
push
add
jne
add
lret
mov
jge
mov
clc
add
add
add
add
sub
pop
call
push
push
inc
shr
push
push
pop
add
sub
not
lea
pop
sub
rol
add
pop
push
add
dec
add
pop
pushl
push
push
call
jp
mov
mov
out
push
add
mov
lcall
pop
jbe
out
fimuls
add
add
add
add
add
jno
ret
shlb
pop
add
add
into
lret
clc
pop
call
call
push
push
shl
lea
push
and
add
shl
sub
add
pop
add
pop
push
add
rol
pop
pushl
push
lea
push
push
call
leave
add
mov
out
out
add
stc
add
in
jns
sti
push
add
add
xchg
fildll
add
jmp
add
aam
add
lcall
scas
add
ret
in
stc
imul
insb
add
add
popf
add
mov
roll
mov
add
push
push
push
push
push
push
push
lea
push
push
call
add
addb
scas
cmpsl
imul
add
add
push
fsubl
add
mov
mov
add
enter
add
pusha
jl
sub
pop
call
push
push
lea
lea
push
or
inc
add
inc
ror
sub
rol
pop
inc
pop
push
inc
pop
pushl
call
push
add
pop
call
push
push
dec
xor
not
push
push
pop
add
sub
sub
ror
sub
inc
shl
pop
inc
pop
push
push
push
push
push
push
call
add
enter
push
xchg
ja
jl
add
mov
mov
mov
add
push
movsb
incb
mov
mov
add
add
movsl
popl
add
add
add
mov
roll
stos
addb
pushl
push
push
call
jge
cmpsl
insb
mov
mov
add
hlt
add
add
pop
add
jle
xchg
jmp
les
roll
add
push
xchg
xchg
push
pushf
sub
pop
call
call
push
push
xor
sub
lea
push
sub
add
lea
shl
inc
sub
rol
pop
add
pop
push
push
push
lea
push
lea
push
push
push
push
push
call
add
cmpsl
xchg
add
incb
mov
addb
lret
rolb
faddp
add
into
mov
lahf
add
add
mov
add
sbbb
repnz
cmc
sub
pop
pushl
push
add
add
dec
pop
call
push
xor
inc
pop
call
push
push
lea
lea
push
sub
add
inc
sub
xor
not
pop
rol
inc
pop
push
add
pop
pushl
push
lea
push
push
lea
push
push
push
push
push
push
lea
push
call
xchg
add
movsb
pop
testb
fidivrs
add
lcall
out
add
add
add
loop
mov
push
in
fdivr
lcall
adc
add
push
ror
add
lea
pop
call
push
push
rol
push
sub
add
add
sub
not
dec
not
pop
shr
xor
ror
rol
pop
push
push
push
push
push
push
push
push
call
enter
add
mov
pushf
xchg
add
add
add
fistps
add
add
pop
lods
cwtl
jne
jns
push
mov
add
add
addr16
lods
mov
push
test
jmp
rorl
loope
add
push
xchg
sub
pop
pushl
push
sub
pop
call
push
inc
lea
add
pop
call
push
push
sub
push
or
not
add
rol
sub
sub
inc
dec
pop
rol
rol
pop
push
shl
pop
pushl
push
push
push
push
lea
push
push
lea
push
push
lea
push
call
add
xchg
push
mov
mov
add
add
mov
cmpsb
add
add
add
sti
pop
add
xlat
cmpsl
incb
jns
mov
scas
addb
mov
movl
push
sub
rol
inc
pop
call
push
push
lea
push
and
add
not
sub
sub
not
pop
ror
inc
xor
sub
pop
push
push
push
push
lea
push
push
lea
push
call
leave
add
lret
add
jo
add
mov
add
jbe
add
in
add
add
into
add
repnz
movsb
cwtl
add
add
fs
loop
iret
call
in
pushl
call
push
push
push
push
push
push
lea
push
push
push
push
call
jnp
js
add
mov
add
nop
pop
pop
movsl
add
add
addr16
lods
scas
mov
jo
add
add
cltd
add
add
stos
push
add
stos
add
mov
add
mov
mul
fldl
fstpt
in
scas
mov
pop
pop
out
testl
lea
push
dec
sub
pop
push
call
push
push
sub
shr
push
and
add
sub
not
sub
pop
shr
inc
dec
pop
push
push
push
push
push
call
jb
mov
add
pop
scas
add
insb
mov
popa
aad
add
fstpt
xchg
add
add
hlt
popa
jmp
add
rclb
mov
lret
pop
cltd
clc
add
std
lret
add
jne
push
push
lea
push
lea
push
push
push
push
lea
push
call
imul
add
add
sti
mov
jb
push
lahf
xchg
icebp
js
stos
out
mov
shl
shll
push
mov
push
jnp
jge
lods
add
bnd
popf
sti
add
mov
pushf
aad
mov
movsb
cli
addb
sub
pop
call
push
push
call
add
lods
add
shrb
fcompl
cli
into
mov
push
jle
add
add
mov
add
movsl
incb
sahf
add
aam
add
shrb
mov
out
shl
sub
dec
sub
push
or
not
add
lea
not
sub
lea
xor
pop
inc
sub
sub
pop
push
lea
push
push
lea
push
call
fimuls
add
add
mov
add
test
add
clc
add
add
data16
shl
add
add
add
jmp
xchg
les
mov
push
arpl
pop
sahf
mov
data16
stos
int
add
add
add
fnstsw
pop
pushl
push
push
lea
push
push
push
push
push
push
call
push
add
icebp
imul
mov
mov
int
sti
add
push
pop
movsb
add
jnp
mov
sti
ja
lods
sahf
push
pop
add
movsl
add
out
add
push
pop
mov
add
push
mov
outsl
add
lret
push
fistpl
pusha
cld
add
add
push
add
add
or
add
push
add
pop
call
push
push
add
rol
rol
push
xor
add
sub
sub
dec
pop
shl
lea
add
pop
push
push
push
call
imul
cwtl
into
xchg
fadds
add
add
add
lcall
loop
add
add
add
rcll
imul
mov
mov
add
pop
add
add
add
andl
faddp
add
add
add
add
add
mov
jle
add
mov
sub
pop
pushl
push
dec
pop
call
push
push
lea
push
lea
push
lea
push
push
lea
push
call
jmp
mov
popa
lods
popl
sti
add
rol
mov
mov
jp
add
add
jl
pop
add
xchg
mov
mov
filds
test
mov
lods
int
add
in
xchg
mov
in
in
call
push
push
push
sub
add
add
sub
ror
inc
sub
sub
shr
pop
ror
sub
pop
push
shl
shr
not
pop
pushl
push
push
push
lea
push
lea
push
push
lea
push
call
mov
ja
add
test
add
add
nop
add
test
lret
out
insb
mov
lock
pushf
ret
into
sub
pop
call
push
push
lea
push
and
add
shr
sub
xor
not
pop
ror
ror
not
pop
push
push
sub
push
sub
add
add
xor
not
sub
sub
not
rol
ror
pop
add
shl
pop
push
push
call
roll
add
push
xchg
mov
enter
add
out
add
add
sbbb
sar
pop
jne
mov
add
add
xchg
add
sub
pop
call
push
sub
lea
shr
pop
pop
dec
jne
push
dec
pop
call
push
push
push
lea
push
lea
push
push
push
push
push
call
mov
arpl
cli
add
loope
mov
xchg
push
add
add
incb
push
jle
jmp
fnstsw
add
loop
add
push
add
scas
mov
add
rcl
add
in
fdivr
lcall
add
add
push
push
call
add
xchg
xchg
std
add
in
add
add
imul
movb
icebp
xlat
in
out
add
add
mov
mov
notb
outsl
std
add
cli
add
js
add
scas
add
push
add
mov
mov
add
repnz
add
in
add
call
pop
int
lea
push
push
not
inc
dec
not
push
and
add
inc
dec
shr
sub
lea
pop
shr
add
sub
pop
push
inc
not
pop
pushl
call
push
xor
ror
pop
push
push
rol
rol
add
add
pop
call
push
push
shl
add
push
or
inc
add
xor
sub
shr
pop
xor
dec
ror
pop
push
lea
push
push
push
lea
push
push
push
lea
push
call
shr
push
add
add
test
add
fsubp
pop
xchg
in
loopne
enter
addl
jmp
filds
add
mov
push
xchg
jmp
jno
sub
pop
pushl
call
push
lea
push
push
push
push
push
push
push
push
call
lods
addr16
add
mov
mov
add
pop
add
add
outsl
enter
cmpsl
out
in
mov
pop
lods
jp
mov
add
int3
xlat
add
push
iret
jl
add
scas
pop
popa
stos
add
add
mov
int3
add
add
enter
pusha
jge
pop
lods
add
lcall
rclb
pop
insb
and
xor
call
add
mov
xchg
fiaddl
add
push
in
push
mov
into
add
jns
idivb
add
fs
add
nop
mov
add
add
lds
add
fcmovb
xchg
sub
out
add
ljmp
pop
mov
push
push
call
add
jbe
fs
adcl
in
add
add
mov
add
cltd
cmpsb
add
mov
add
add
add
add
add
jge
mov
lea
push
push
not
xor
sub
push
push
pop
add
sub
shr
inc
pop
dec
pop
push
add
pop
pushl
push
lea
push
push
push
push
push
lea
push
lea
push
call
filds
call
add
mov
in
add
add
fsts
insb
andb
cli
jne
jo
aad
roll
xchg
clc
pusha
jmp
rol
add
xchg
fcomp
add
add
add
add
mov
imul
push
shr
rol
xor
add
pop
lea
push
push
push
push
push
lea
push
push
call
add
shrb
fists
icebp
jp
cld
xchg
jl
add
orl
push
push
cmc
call
mov
add
lcall
push
ror
pop
push
push
sub
add
pop
push
push
dec
pop
pushl
push
push
dec
shr
add
shl
push
and
add
add
ror
shr
sub
add
pop
ror
pop
push
dec
add
pop
push
call
push
push
rol
push
and
add
xor
sub
lea
xor
pop
not
sub
pop
push
add
pop
pushl
push
ror
pop
call
push
push
push
push
lea
push
push
push
push
push
push
call
testl
add
push
add
jmp
lret
add
add
add
add
add
add
cmc
stos
add
add
mov
lcall
call
push
push
lea
push
xor
add
add
sub
inc
not
sub
add
pop
rol
pop
push
xor
sub
add
add
pop
pushl
push
push
push
call
mov
add
add
mov
mov
je
addb
add
xchg
movsl
cwtl
imul
mov
mov
flds
std
popa
mov
mov
pop
push
add
fucomi
call
add
rolb
mov
add
lea
sti
jno
add
add
mov
jb
mov
xchg
int
in
hlt
pop
call
call
push
shl
lea
pop
pushl
push
push
call
add
add
xchg
mov
mov
mov
fadds
testl
jp
out
fiadds
in
add
add
add
add
lcall
rolb
fsubrs
add
jmp
out
add
lcall
mov
jmp
push
push
push
or
not
add
not
xor
sub
pop
not
pop
push
not
pop
pushl
call
push
push
push
lea
push
call
scas
mov
add
jmp
arpl
add
add
popf
pop
pop
push
add
int
data16
mov
add
add
mov
fildl
addl
push
testb
add
add
add
aad
push
pop
add
add
jecxz
test
mov
lcall
add
shrb
sbb
xlat
push
xor
shl
push
sub
add
ror
shl
sub
dec
sub
pop
shr
pop
push
ror
inc
pop
pushl
push
push
push
call
repnz
jp
fnstsw
in
cld
add
xchg
test
fsubl
add
mov
testb
cmpsl
mov
mov
add
rcrb
add
mov
mov
lcall
dec
adc
add
push
lea
push
push
call
mov
pop
pop
add
out
add
pop
add
add
pop
loope
add
cli
add
push
fidivs
add
add
mov
add
insb
mov
add
add
int3
movb
add
loop
lcall
lcall
rclb
push
lea
push
push
push
push
push
push
lea
push
call
lahf
fwait
cmc
movsb
push
mov
add
add
pushf
mov
xchg
outsl
add
fucomp
pop
add
add
iret
add
jl
movsb
in
popa
int
movsl
mov
fadds
jecxz
add
add
add
mov
js
scas
out
add
les
jno
jns
js
sub
pop
leave
push
ror
pop
add
pop
push
lea
push
push
push
push
call
fs
lods
roll
test
push
mov
pop
enter
fildl
add
xchg
add
add
popa
mov
insb
cltd
add
mov
add
add
test
rolb
movsl
mov
xchg
mov
add
mov
iret
push
sub
pop
pop
push
shr
pop
pop
push
push
lea
push
push
push
lea
push
call
add
add
out
jae
cmpsb
lock
jle
repnz
cmc
negb
out
add
pusha
mov
cltd
arpl
lahf
add
add
mov
fldenv
mov
jp
add
add
add
fwait
jecxz
in
add
add
add
lcall
rclb
lods
pop
inc
push
sub
shr
pop
ret
push
sub
xor
pop
leave
push
lea
push
lea
push
lea
push
lea
push
push
lea
push
push
call
mov
pop
incb
cltd
add
lahf
add
mov
add
add
mov
add
add
test
push
pop
sub
pop
ret
push
not
not
shl
sub
pop
push
push
push
push
call
mov
shrb
add
jo
clc
add
add
repnz
mov
addb
outsl
into
add
jns
push
pusha
into
add
add
mov
add
mov
add
pop
mov
push
ror
pop
cmpl
jne
push
push
push
push
push
lea
push
lea
push
push
lea
push
call
ljmp
add
cmpsl
sahf
push
in
imul
push
addb
loope
lcall
stos
add
sahf
jecxz
test
div
rcrl
jns
pusha
add
add
mov
add
iret
push
add
add
add
lods
sarl
fdivr
lcall
inc
and
jmp
push
push
push
push
push
lea
push
push
push
push
push
call
rcrb
add
mov
jl
add
add
popa
add
cltd
lock
rolb
pop
test
add
add
mov
add
add
jle
add
add
roll
add
fs
popf
xchg
lock
std
popl
inc
or
jmp
loopne
push
push
push
push
lea
push
lea
push
push
push
call
add
push
add
lret
scas
add
add
add
popf
pushf
outsl
add
add
lcall
cld
add
pusha
cwtl
add
mov
add
add
mov
loopne
xor
xor
push
not
sub
sub
pop
add
push
push
push
push
push
push
push
push
push
call
int3
add
enter
add
mov
imul
add
mov
loopne
fldcw
int3
pop
add
jnp
add
lods
lahf
add
flds
add
jae
add
sbb
movl
add
cld
push
add
in
fcompl
dec
decl
push
push
push
push
lea
push
lea
push
push
call
scas
add
push
pop
add
add
jns
insb
add
add
jge
out
add
mov
in
fidivrs
rolb
mov
loop
add
incb
sub
pop
sub
jmp
push
push
push
push
push
call
fisubs
cwtl
stos
lods
mov
testb
add
add
test
add
data16
lret
add
pop
stos
add
add
mov
mov
stos
add
addl
lcall
add
add
push
lea
pop
pushl
pop
push
lea
push
push
call
add
add
rcll
fcompl
out
leave
add
add
int3
mov
loop
out
add
in
hlt
pop
sub
push
push
lea
push
push
call
in
add
xchg
add
add
cld
add
call
mov
js
add
add
add
push
push
mov
subl
in
lock
cmp
jne
mov
push
shr
pop
lea
push
shl
lea
pop
sub
push
not
not
shl
pop
mov
shr
push
shl
pop
add
push
not
shr
pop
sub
pushl
push
lea
push
push
push
push
push
push
call
mulb
lock
add
pushf
outsl
outsl
add
stos
jb
in
cmpsl
fstl
movsb
mov
pop
movsl
addr16
in
add
add
add
add
imul
out
nop
addb
sub
pop
pop
shr
push
lea
push
push
push
push
push
push
push
push
lea
push
call
add
pop
mov
in
fiaddl
jb
pop
add
add
stos
arpl
add
push
cmc
cli
add
add
lret
je
cli
push
fcomps
loope
incl
add
xlat
dec
shr
pop
sub
push
add
lea
rol
shl
pop
cmp
jne
leave
push
lea
push
lea
push
call
stc
roll
scas
std
cltd
in
push
pop
cwtl
testl
mov
add
add
add
std
lcall
pop
add
mov
ret
jp
add
jbe
in
add
mov
stos
add
mov
add
jge
add
jnp
add
out
imul
mov
lcall
add
push
push
push
call
sti
add
je
iret
xchg
add
add
in
mov
jmp
js
fadds
mov
lock
add
add
mov
add
add
sarb
jo
in
flds
aad
data16
cmc
sub
pop
mov
push
push
lea
push
push
push
call
add
add
mov
mov
push
in
call
lds
add
add
addr16
add
mov
addb
je
add
mov
shlb
add
jp
idivb
add
into
fwait
add
pushf
mov
add
test
sub
pop
add
push
add
pop
push
push
add
ror
rol
pop
push
push
shr
sub
add
shl
pop
push
push
push
push
lea
push
call
fs
mov
test
jmp
cmc
jae
cli
add
nop
add
add
cld
ja
push
xchg
add
add
cmpsl
add
mov
add
add
add
mov
xchg
add
insb
pop
add
test
lcall
push
push
sub
lea
pop
mov
lea
push
push
lea
push
call
flds
cltd
jmp
pop
stos
popl
sti
ja
mov
xchg
add
push
popa
add
mov
add
in
jecxz
lods
add
add
push
pop
test
add
test
mov
iret
lock
iret
pop
push
add
in
scas
push
add
add
movl
sub
pop
sub
push
shl
pop
mov
push
push
lea
push
push
push
call
bnd
lret
shl
arpl
insb
add
add
faddl
add
jbe
xchg
outsl
jbe
fcompl
push
push
add
push
scas
flds
imul
int3
fnstcw
in
cld
nop
push
test
add
loop
data16
add
xchg
xchg
lcall
ljmp
and
lea
push
push
push
push
lea
push
push
call
add
les
hlt
cmp
cli
nop
test
loop
lret
add
std
mulb
lahf
xchg
add
add
lods
out
add
jmp
leave
aam
leave
add
push
loop
mov
mov
lods
pusha
add
into
add
icebp
push
add
stos
lret
add
add
add
add
flds
add
in
loopne
add
push
push
push
push
call
mov
test
add
jle
add
jno
stos
add
sahf
test
mov
ja
pop
cli
add
in
lock
lcall
fwait
addb
add
pop
or
mov
push
add
add
pop
add
push
lea
pop
xor
push
push
push
lea
push
push
call
jno
add
add
add
cltd
mov
xchg
push
sahf
test
push
add
data16
addb
ja
in
lret
push
add
add
add
push
jle
cmpsb
test
push
leave
add
test
lret
add
add
push
leave
lods
fiaddl
jb
cld
add
add
scas
call
lcall
xlat
push
lea
push
push
push
push
push
call
add
mov
arpl
pop
lods
fdivp
add
addl
add
jbe
fs
lcall
add
add
mov
push
xchg
add
add
push
popf
mov
ljmp
add
sub
pop
and
push
rol
not
pop
rol
push
inc
pop
rol
xor
push
pop
inc
cmpb
jne
push
inc
shr
pop
add
push
push
lea
push
push
push
push
lea
push
push
call
add
push
add
icebp
add
add
pop
add
fwait
mov
mov
add
cld
mov
fistpl
incb
fs
js
in
mov
add
loop
into
mov
add
sarb
mov
add
fs
addb
add
mov
add
pop
in
sub
pop
cmp
je
push
lea
push
call
mov
add
add
lods
jne
add
add
out
addb
stc
add
add
mov
jge
adcb
add
add
cmpsl
jge
add
push
cmc
mov
push
cmpsb
leave
mov
movsb
add
add
bound
lahf
outsl
sub
pop
add
push
xor
lea
rol
pop
cmpl
jne
push
lea
push
push
push
lea
push
push
push
call
add
pop
add
add
jnp
mov
movb
pop
add
roll
cmpsb
add
pushf
xchg
in
add
add
lcall
rclb
mov
icebp
pop
pop
push
lea
sub
pop
pop
push
sub
pop
pop
push
push
push
push
push
lea
push
push
push
push
push
call
add
stos
add
add
mov
mov
add
stos
add
mov
shlb
loope
add
add
add
add
mov
mov
cltd
fistpl
cld
pop
arpl
mov
movsb
adcl
add
addl
push
lea
push
lea
push
push
push
call
push
jmp
add
ljmp
cmpsb
add
pusha
jmp
jle
lock
mov
faddl
rolb
push
mov
add
add
add
add
add
cli
add
pop
add
sub
pop
pop
leave
push
xor
add
rol
inc
pop
ret
push
push
push
push
call
add
add
or
jmp
into
add
cwtl
xchg
loopne
leave
clc
add
add
leave
imul
sti
sub
pop
mov
add
push
sub
pop
mov
cmpb
push
push
push
push
push
push
push
lea
push
push
push
call
xchg
mov
push
add
pop
push
fildl
push
out
in
cmc
arpl
loopne
add
add
mov
aad
add
xchg
add
xchg
out
pop
add
lcall
sbb
call
stc
not
not
pop
push
push
lea
push
push
call
add
test
add
popa
xchg
xlat
xchg
add
pop
add
add
lcall
mov
xchg
add
add
stos
add
fstpt
mov
add
lret
scas
bound
pusha
pushf
sahf
add
jp
add
xchg
add
jns
add
mov
stc
mov
outsl
jbe
in
hlt
lcall
loope
jmp
rclb
int
mov
cmp
mov
lea
push
push
push
push
lea
push
call
in
nop
add
popa
mov
add
bound
aam
sti
mov
stos
test
in
add
repnz
fcoml
ret
jl
test
out
mov
add
add
add
add
pop
add
mov
xchg
fcmovb
jl
add
lcall
push
push
lea
push
push
lea
push
lea
push
lea
push
call
add
testb
les
add
aam
enter
jge
out
add
add
mov
add
add
movsl
lea
mov
stos
add
aad
int
add
mov
filds
push
rol
not
pop
pop
pop
push
pop
pop
push
rol
lea
sub
pop
leave
push
lea
push
push
call
out
add
mov
js
pop
lock
jb
add
shll
jle
add
pop
add
jns
xchg
push
push
add
stc
in
aad
mov
sub
pop
ret
push
lea
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
cmpsb
call
aam
mov
xchg
popa
add
cmpsl
add
mov
add
mov
shlb
rolb
mov
add
mov
add
add
add
lods
add
add
add
pop
cmc
jnp
shr
stos
xchg
addl
in
fcomps
push
lea
push
call
mov
push
js
hlt
mov
pop
add
fiadds
fcoms
mov
add
cmpsl
mov
in
mov
loope
imul
mov
test
add
mov
add
add
fldl2t
add
add
jbe
sub
pop
mov
push
inc
shr
ror
pop
add
push
lea
push
push
push
lea
push
push
push
push
call
add
mov
pusha
arpl
mov
out
add
add
stc
faddl
rcr
loopne
out
add
add
ror
mov
scas
add
lcall
push
shr
rol
pop
push
push
push
push
push
push
lea
push
call
addr16
add
add
add
add
fldl
mov
call
jecxz
push
int3
lds
add
mov
add
out
jne
mov
mov
test
mov
xchg
jae
push
push
mov
push
lods
les
xchg
fsub
subl
push
mov
sub
pop
push
push
add
inc
pop
mov
push
push
inc
add
shr
shr
pop
pop
push
push
push
lea
push
push
push
push
push
call
loop
add
add
testl
add
test
add
jl
lods
add
out
leave
push
loope
add
add
test
pop
in
push
add
fidivs
arpl
pop
add
scas
add
push
imul
int
mov
scas
popa
loope
insb
ljmp
push
cmp
push
lea
push
push
push
push
lea
push
call
mov
in
jmp
add
add
add
add
jp
arpl
add
add
xchg
add
push
movsb
repnz
add
sub
pop
sub
push
rol
add
pop
mov
push
pop
shr
add
push
push
push
lea
push
push
push
push
push
push
push
call
add
pop
xchg
add
test
add
nop
cmpsb
insb
hlt
xchg
mov
mov
add
mov
roll
jmp
hlt
cmpsb
add
add
sub
pop
mov
push
add
xor
shr
pop
add
push
rol
lea
pop
pushl
push
push
push
call
jmp
jl
mov
mov
add
shrl
add
imul
insb
add
imul
mov
movb
rolb
xchg
add
je
addb
pop
add
imul
hlt
lcall
inc
clc
push
pop
mov
push
add
pop
add
push
add
sub
pop
xor
push
xor
sub
shl
shl
pop
lea
mov
push
lea
sub
sub
pop
add
push
shl
xor
shl
pop
xor
rol
push
sub
pop
nop
nop
push
push
lea
push
push
call
idivl
mov
add
adc
ret
nop
add
mov
add
add
fdiv
add
add
fadd
add
add
aad
outsl
sub
pop
xor
nop
push
dec
ror
rol
pop
nop
push
lea
shl
pop
inc
nop
push
add
add
pop
nop
push
pop
cmpb
jne
add
push
shr
pop
nop
nop
push
lea
push
push
push
push
push
call
pop
bnd
add
std
lcall
lea
add
add
les
add
addr16
add
outsl
pop
add
mov
in
call
je
push
add
shr
pop
nop
nop
push
dec
sub
ror
rol
pop
inc
nop
push
inc
pop
nop
push
add
sub
pop
cmp
jb
xor
push
push
push
push
lea
push
lea
push
lea
push
call
jnp
clc
push
add
add
add
add
insb
imul
xlat
add
mov
jno
leave
mov
add
add
add
arpl
stos
fists
mov
les
in
add
out
icebp
iret
sub
pop
jmp
mov
push
lea
push
push
call
movsl
leave
jp
mov
add
xchg
add
in
add
testb
sahf
popf
iret
repnz
add
add
cli
xlat
in
cmc
add
js
sub
pop
add
movzwl
push
lea
push
push
lea
push
call
int3
pop
add
add
add
loop
jne
cmpsl
add
lret
push
fmull
sar
addl
out
imul
push
add
mov
int3
lods
into
add
xchg
add
mov
lock
lcall
inc
sbb
rcll
rol
jnp
mov
xor
push
sub
pop
xor
push
push
call
add
aad
add
out
jo
pop
pop
stos
out
cwtl
out
add
add
bound
add
cltd
test
fistl
pop
mov
sub
pop
shl
xor
push
xor
xor
xor
pop
shl
push
add
xor
not
pop
xor
push
push
push
push
push
push
push
push
call
pop
add
shrl
add
stos
add
movsl
addb
add
add
add
xchg
add
xlat
add
clc
fdivrs
add
add
mov
not
add
pop
shl
xor
push
lea
push
call
scas
rcll
fnstenv
pop
fildll
add
roll
jnp
lret
mov
add
pop
xchg
stos
add
test
arpl
addr16
add
sub
pop
mov
add
push
rol
pop
pop
push
lea
push
lea
push
push
push
push
push
lea
push
push
push
call
pop
add
out
add
aam
pop
add
lret
add
jle
cwtl
add
add
je
jae
jle
int3
lret
push
fcomps
pop
push
pop
pop
push
push
lea
push
call
xlat
xchg
lea
ja
xchg
xchg
stos
movb
mov
test
push
into
xchg
add
push
add
add
sub
pop
leave
push
sub
pop
ret
push
push
add
sub
pop
mov
push
push
push
push
push
push
push
call
add
add
mov
stc
push
push
jne
jecxz
stos
in
xchg
mov
mov
jb
add
movsl
enter
add
add
add
add
push
outsl
jno
out
lock
add
add
jb
xchg
add
jnp
jp
add
mov
test
lcall
push
push
shr
pop
push
push
inc
pop
mov
push
lea
xor
xor
pop
mov
push
push
push
push
push
lea
push
push
push
call
add
hlt
sti
movb
add
arpl
add
mov
mov
sbb
shll
pop
aam
frstor
mov
std
mov
add
add
scas
add
rol
mov
scas
nop
add
add
loopne
mov
test
je
push
push
push
push
lea
push
push
push
push
push
push
call
sahf
lods
addr16
fldenv
add
fwait
mov
add
add
push
mov
add
data16
lret
add
mov
add
jnp
add
icebp
sub
pop
mov
test
je
push
push
push
push
push
call
add
push
fs
xchg
jnp
in
push
stc
test
pop
int3
jae
pop
push
in
bound
add
mov
add
add
push
add
mov
bound
add
lods
add
lea
add
lcall
testl
inc
out
inc
adc
call
rclb
xlat
imul
mov
xchg
jmp
lock
jecxz
popa
add
imul
test
xchg
scas
leave
out
mov
xchg
add
lods
roll
in
add
add
cli
in
cli
jle
in
add
cmpsb
add
push
mov
js
cmpsl
fcmovbe
arpl
add
lcall
pop
inc
push
sub
xor
pop
cmp
je
test
je
push
ror
pop
mov
inc
push
push
push
push
push
call
add
mov
add
add
mov
fiaddl
mov
lret
in
hlt
add
out
mov
in
in
pop
cmp
je
push
lea
xor
sub
pop
test
jne
xor
push
push
push
push
push
push
push
push
call
mov
fcmovb
fnstsw
cmpsl
insb
scas
mov
aam
add
mov
mov
testl
pop
add
ja
jecxz
push
add
add
add
add
mov
add
xchg
jge
frstor
nop
aad
add
cmc
add
add
loopne
pop
push
push
lea
push
lea
push
push
lea
push
call
pop
add
add
ja
ja
mov
add
add
add
xchg
hlt
add
mov
add
scas
add
add
add
rolb
out
add
loope
jb
stc
bound
lahf
mov
add
pop
mov
sub
pop
pop
pop
push
shl
pop
pop
push
lea
pop
leave
push
ror
add
lea
xor
pop
ret
push
shr
rol
pop
mov
inc
push
lea
push
call
lock
add
jmp
add
incb
clc
push
fadds
add
add
add
mov
jle
cli
add
add
mov
pop
mov
cmpsl
stc
scas
add
int
mov
lret
jmp
fcoms
data16
add
lcall
lock
lea
push
push
call
add
mov
add
mov
add
jecxz
shr
gs
nop
pop
addr16
add
push
fld
in
mov
shrl
mov
mov
ret
sub
pop
mov
push
dec
add
pop
test
je
push
rol
pop
mov
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
add
cmc
hlt
push
add
add
mov
add
add
add
add
outsl
push
add
add
rolb
add
push
scas
hlt
push
jo
jle
int3
add
stos
rcrl
js
mov
add
add
fistpl
mov
mov
in
fcompl
movb
dec
add
dec
not
pop
cmp
jne
mov
push
lea
shl
pop
test
je
mov
push
sub
shr
lea
pop
add
push
push
push
push
push
call
push
nop
pop
mov
add
fstpl
mov
add
fmul
mov
mov
add
int
mov
pusha
mov
lcall
loopne
test
call
push
lahf
das
push
push
push
push
call
push
add
jle
addl
add
add
mov
ret
subl
xchg
add
roll
mov
filds
add
in
add
lea
add
mov
lret
xchg
cmpsl
add
lock
xchg
mov
cmpsl
add
pop
add
in
in
pop
jmp
push
ror
pop
xor
push
push
push
lea
push
lea
push
push
push
push
push
push
call
add
add
stos
add
cmpsb
add
test
in
out
in
mov
arpl
roll
add
popf
push
add
add
lret
push
lret
cld
xchg
push
icebp
stos
add
bound
xchg
jmp
add
js
mov
lcall
push
push
lea
push
push
push
push
push
push
push
push
call
add
ja
add
lret
xchg
icebp
lds
ret
iret
add
pop
add
add
sar
add
pop
iret
jno
add
add
js
cmc
mov
shr
jbe
leave
icebp
lret
mov
push
in
add
add
in
fcomps
push
lea
push
lea
push
push
lea
push
push
push
call
add
add
xlat
ljmp
mov
add
sahf
add
lcall
in
add
add
fiadds
lcall
push
lea
pop
pop
push
lea
push
call
add
add
scas
int
fiaddl
jbe
hlt
pushf
pop
insb
jp
mov
add
xchg
rolb
ljmp
sub
pop
leave
ret
push
push
push
lea
push
push
push
call
jp
ret
mov
add
jl
std
add
mov
add
xchg
test
add
mov
mov
add
cli
xlat
add
add
jecxz
mov
cmpsl
add
add
add
xor
lcall
xchg
sub
pop
lea
push
lea
push
push
push
push
lea
push
push
call
mov
pop
mov
scas
test
rolb
mov
add
loope
in
add
add
arpl
fs
mov
add
add
in
mov
jns
add
test
add
add
xchg
mov
popf
movsl
out
push
add
add
pushf
push
out
sub
pop
pop
pop
push
xor
sub
pop
pop
push
xor
pop
pop
push
add
rol
shr
rol
pop
leave
push
shr
xor
inc
pop
ret
push
lea
push
push
push
push
push
lea
push
call
pop
stc
add
add
loope
add
in
add
ljmp
add
jl
add
add
add
mov
mov
mov
sub
pop
mov
pop
push
push
call
roll
test
mov
pop
add
add
add
add
jl
xchg
mov
add
in
xlat
pop
push
test
push
add
sub
pop
pop
push
shl
ror
pop
pop
push
sub
pop
pop
push
add
rol
add
sub
pop
leave
push
push
lea
push
call
add
jp
add
mov
aad
cmpsl
add
jo
add
sti
push
movsb
add
add
into
add
xchg
pop
add
add
add
roll
in
jnp
add
in
hlt
lcall
or
lret
sbb
mov
scas
lret
fnstsw
scas
ja
mov
scas
loope
mov
scas
lret
scas
mov
scas
sbb
mov
andb
faddl
loope
mov
in
cld
es
inc
mul
pop
mov
rorl
ret
sbb
lea
lock
clc
mov
out
ds
ret
mov
or
rcrl
dec
jno
push
enter
jb
jl
mov
aas
fisubrs
push
pop
int
fistpll
je
inc
test
cmpsl
dec
jge
es
jne
in
inc
push
push
mov
outsb
dec
cmp
xchg
sbb
insl
imul
jbe
into
pop
xchg
xor
cmp
pop
loope
ret
and
xlat
das
pop
mov
cmp
aad
pop
cmp
pop
xor
cmp
lea
out
fs
jmp
loopne
push
test
jns
push
mov
inc
mov
mov
add
push
mov
fwait
jmp
mov
rol
ljmp
les
lds
into
inc
jns
aaa
clc
mov
push
cmp
sub
sbb
enter
je
lods
lret
push
shll
mov
push
inc
jmp
nop
fs
lods
push
clc
mov
movsl
addl
dec
add
sub
incl
in
loop
and
aam
scas
cmp
cltd
jnp
xor
or
movsb
push
out
lret
dec
xlat
xchg
mov
and
mov
mov
stos
jmp
mov
cmp
mov
js
js
movsb
and
rorl
and
flds
cmp
push
mov
adc
inc
pop
jb
insl
cld
fistps
orl
push
mov
cmpsl
repnz
sar
out
lds
sbb
push
movsl
dec
mov
add
cmp
mov
dec
imul
dec
adc
mov
cmc
cmp
or
xchg
push
sub
fstl
pop
je
pop
clc
out
mov
lahf
pop
imul
js
jne
js
sub
out
mov
aam
fimuls
mov
dec
cmpsb
cmp
pusha
mov
hlt
or
and
cmp
push
imul
dec
mov
jle
insb
lods
xchg
sbb
decl
out
addr16
jbe
insb
sbb
lea
inc
push
stos
inc
into
sarb
in
adc
popa
adc
stos
mov
add
xchg
dec
pop
push
cmc
lret
out
stos
jb
xor
ret
xlat
cli
in
and
cs
stos
or
mov
fisttpll
movsl
fsubs
les
push
jmp
scas
rcrl
pop
ds
mov
inc
negl
inc
flds
addr16
fildll
push
arpl
aaa
xchg
dec
in
jg
cld
movsb
test
mov
jl
js
stc
pop
push
push
mov
lds
sahf
fistpll
hlt
add
aad
or
add
push
add
mov
inc
std
lock
xchg
sbb
andl
jecxz
ja
cmp
push
ds
push
adc
xlat
imul
loopne
test
stos
aam
jl
xor
mov
push
push
call
cmpsl
push
xchg
jle
jns
aas
xor
jle
mov
ret
sub
adc
pushf
ja
cltd
je
xchg
jno
jb
je,pn
cmp
pusha
negl
lret
jnp
or
iret
xor
xchg
jg
in
cmp
xor
arpl
sbb
pop
mov
arpl
test
dec
frstor
enter
jnp
repnz
insb
inc
imul
add
adc
add
out
lret
stos
sbb
xor
fiadds
int3
mov
fidivrl
pusha
std
iret
test
ljmp
aad
ds
cld
shrb
mov
sbbl
inc
cmp
cmp
mov
mov
push
mov
mov
daa
imul
in
je
int
ret
cld
ljmp
jmp
jl
popf
sub
mov
dec
mov
sub
inc
pop
daa
daa
xor
pop
dec
in
cld
cmp
lods
fisttps
lods
sti
ss
jns
fcoms
pop
mov
imul
adc
ja
test
fstpt
adc
test
test
aas
push
lret
jg
fwait
and
bound
repnz
ljmp
push
dec
movsb
dec
xor
add
lods
add
movl
and
outsl
sub
push
lret
cmpsl
or
add
inc
push
and
imul
cmp
les
add
movsl
popf
jmp
pusha
xchg
pop
icebp
xchg
mov
mov
out
adc
xchg
dec
jnp
sub
sbb
adc
mov
cmp
or
and
and
cli
push
and
adc
inc
pop
xor
xor
test
test
shll
jbe
adc
lea
fcmovbe
jg
subb
std
mov
int3
jne
mov
lret
dec
xor
or
insb
mov
and
ja
sbb
mov
pop
ret
cli
lret
int3
leavew
jmp
pop
ja
stc
mov
jnp
adc
and
lods
out
mov
lods
or
out
add
jl
jnp
pop
rolb
xchg
imul
sub
jo
xor
add
sbbb
sbb
xchg
aam
stos
fcomp
orl
sub
je
dec
sub
leave
out
sub
enter
cmpsl
mov
stos
xchg
int
cmc
rorl
push
scas
xchg
stos
push
mov
unpckhps
fsubp
cmp
add
mov
sub
cmp
ficoml
pop
push
in
sbb
jnp
in
out
sbb
mov
jmp
mov
shl
ret
rolb
out
or
aas
add
mov
pop
xlat
xchg
js
adc
lods
mov
sbb
leave
adc
aaa
add
cwtl
cmp
xchg
int
or
mov
subb
pop
dec
inc
in
fstps
push
negl
mov
lods
jno
nop
lds
xchg
inc
rorl
and
pop
in
push
xlat
out
daa
aas
xlat
mov
insl
std
push
dec
adc
aas
inc
cmp
popa
adc
or
jae
lcall
in
dec
mov
enter
fucom
or
push
jbe
frstor
popa
aam
mov
jae
pop
inc
sarb
aam
pop
lahf
out
mov
arpl
pushf
shll
loop
repnz
mov
push
outsl
jmp
orl
icebp
mov
movsl
adc
insl
aad
or
pop
into
lods
push
in
hlt
mov
cld
call
fwait
adc
aas
xchg
mov
mov
mov
nop
adc
cmp
out
loop
rcrb
cli
push
jl
jle
in
dec
cmpb
clc
ss
inc
out
xor
push
jmp
cmp
cmp
out
adc
lahf
stos
bound
pop
jle
fldl
pop
pop
aaa
pop
iret
sahf
in
cmp
mov
xchg
adc
call
mov
jnp
roll
inc
xchg
adc
fdivrs
stc
dec
lods
jge
and
in
int3
ljmp
std
imul
iret
mov
js
jmp
push
subb
sub
cld
xchg
dec
es
cmp
ret
inc
cmp
sarb
inc
std
fsts
or
scas
pop
mov
mov
in
inc
adc
test
dec
imul
arpl
push
enter
lea
cmpsl
jnp
mov
inc
jno
repnz
shll
mov
adc
fimull
test
push
push
setno
lds
adc
jbe
push
mov
imul
fnstsw
out
arpl
push
rclb
mov
cmp
dec
data16
js
popf
scas
adc
push
xchg
loopne
and
daa
sti
inc
repz
pop
imul
jg
jns,pt
mov
cmpsb
fnstcw
or
sbb
enter
rep
div
aas
fists
adc
int3
loopne
jp
fwait
leave
mov
xchg
sbb
adc
adc
or
loope
push
loopne
in
jnp
mov
pop
xchg
cmc
lret
and
mov
inc
dec
pop
cld
cwtl
in
inc
movsb
cmp
pop
and
dec
in
mov
mov
int3
lret
shrb
mov
xchg
inc
mov
cmp
jne
mov
cltd
in
and
mov
outsb
pushf
nopl
lahf
addr16
sub
mov
outsb
jne
dec
inc
mov
movsl
lock
pop
xor
and
mov
push
pop
aam
adc
lahf
cs
or
cmp
fistl
sbb
add
pop
dec
and
aas
dec
icebp
cmpl
icebp
pop
out
pop
clc
in
jecxz
xor
sub
mov
lahf
sbb
xorl
push
jo
mov
jbe
push
leave
loop
enter
adc
clc
cmp
mov
sub
icebp
sbb
and
imulb
pop
fs
scas
sub
andl
push
adcb
arpl
mov
mov
stos
and
ret
xor
dec
repnz
daa
mov
fistps
push
mov
jbe
push
cmp
fildl
orb
aad
push
stos
int3
pop
notl
and
pop
adc
scas
add
mov
dec
pop
jnp
fs
and
addb
cmpsl
and
enter
mov
pusha
fldl
xchg
mov
add
out
shlb
mov
repz
and
leave
scas
mov
and
stos
sub
lods
aam
ss
push
aaa
sbb
fs
jbe
or
out
jg
std
pop
dec
sub
int3
push
rcl
sahf
test
sbb
mov
gs
sub
hlt
push
pop
mov
mov
dec
push
leave
or
inc
mov
and
mov
dec
cmp
cli
mov
jl
cmp
push
fiadds
mov
and
adc
xchg
pop
repz
loop
test
mov
push
in
int3
pusha
and
stos
call
mov
dec
inc
rclb
out
ret
jae
sbb
in
andl
cltd
cmpl
ror
ret
andb
mov
stc
call
adc
in
sub
jae
ret
add
push
icebp
add
rorl
jae
sahf
xor
sarb
sbb
mov
repz
sahf
jnp
mov
lret
rorl
xchg
stos
shll
test
sbb
xchg
mov
in
cld
dec
adc
outsl
inc
mov
xchg
sub
hlt
xlat
jmp
sub
outsb
push
inc
mov
dec
jl
mov
jecxz
add
ret
sahf
in
aaa
js
adcl
and
adc
ret
lret
pop
push
cmp
es
mov
in
sbb
in
sbb
jb
add
notb
jo
sbb
push
stc
sbb
mov
fdivrs
stos
ret
stos
insl
inc
nop
movsl
pop
jl
pop
or
xor
adc
in
int
dec
js
cmpl
jno
jae
aam
out
mov
icebp
pop
stos
hlt
lea
jl
jmp
xlat
xor
out
leave
or
and
aam
cmp
push
scas
test
pop
inc
jmp
jbe
adc
ljmp
mov
lock
adc
cmc
push
daa
or
push
push
and
and
mov
cmpsl
in
test
xlat
jno
stc
mov
mov
mov
shr
or
in
cmpsb
mov
gs
mov
push
into
push
movsb
or
movsb
jae
rdtsc
mov
jecxz
cmp
inc
loopne
ss
dec
testb
ja
gs
lcall
into
mov
testl
rolb
inc
pop
daa
adc
inc
rcrb
popf
sbb
mov
aam
adc
pusha
sbbl
dec
clc
js
jns
xor
rclb
out
loopne
subb
mov
ret
subb
in
mov
test
js
shlb
test
shlb
mov
int3
mov
dec
mov
xor
and
push
aam
inc
dec
insl
xchg
push
push
in
or
xor
dec
dec
cli
or
stos
movsb
cmp
imul
popa
mov
mov
idivb
rcl
cltd
faddp
not
jns
out
mov
sbb
mov
rol
push
cmp
mov
cmc
and
xchg
and
lahf
insb
loope
jecxz
push
mov
pop
insl
sbb
hlt
sub
mov
jmp
xor
fists
add
cmp
mov
jne
inc
insl
adc
mov
pop
fsubl
xchg
or
jecxz
push
push
fcoml
xchg
sbb
lds
imul
sbb
push
add
fdivs
mov
mov
adc
mov
add
ret
in
shlb
jl
icebp
shlb
imul
std
inc
fcompl
or
fcoml
sti
imul
lahf
mov
rol
daa
ss
jge
and
int
mov
out
dec
adc
orl
or
push
cltd
scas
or
pop
fdivs
push
pop
mov
shl
dec
das
push
pushf
dec
in
mov
std
insb
inc
fnstcw
enter
loope
xor
inc
ror
sbb
mov
push
into
pop
daa
pop
sti
push
sub
jmp
testb
js
push
sbb
fldl
xchg
mov
fimuls
sbb
incl
push
pop
pop
fisubs
outsb
faddl
out
filds
cld
jmp
jp
lock
inc
loope
push
cmpsl
inc
sub
sbb
pop
mov
jecxz
in
mov
insl
cmp
xor
and
xchg
push
push
dec
lret
adcl
sbb
mov
ja
mov
sahf
or
cwtl
out
jb
andl
ret
out
js
inc
jnp
jmp
fsubl
test
sbb
add
stos
mov
call
imul
test
inc
inc
es
je
cmp
aam
fs
ljmp
adc
inc
jl
in
clc
push
add
mov
mov
adc
sub
sub
mov
cmp
adcb
add
xor
fsubr
pusha
ret
popa
rorl
sub
add
call
jle
lods
out
out
sbb
cltd
js
mov
push
or
test
or
pop
lds
scas
outsb
dec
sub
sub
cmpsb
test
mov
or
or
popa
test
je
add
jecxz
adcb
cmpsb
dec
jbe
jnp
rcl
jnp
dec
divb
inc
ds
xchg
inc
and
leave
lcall
xchg
xchg
and
push
add
add
add
mov
mov
les
xchg
jne
inc
mov
in
sbb
test
xchg
cmp
xchg
or
orl
ret
cld
mov
pop
dec
addr16
mov
pop
ljmp
and
mov
imul
mov
pop
ds
arpl
dec
aas
mov
pop
test
mov
mov
cmc
dec
adc
stc
lahf
mov
std
jmp
dec
adc
push
aam
or
push
xchg
xlat
ja
xchg
in
jo
and
shl
mov
in
pop
cmp
adc
xchg
arpl
lds
enter
imul
jle
jns
mov
inc
mov
and
push
xchg
pushf
mov
mov
mov
xchg
aas
inc
cmp
ljmp
ficoms
ficoml
call
mov
arpl
gs
push
jecxz
pop
mov
mov
jl
or
daa
mov
clc
cmc
add
hlt
pusha
les
test
scas
invlpg
pushf
in
adc
inc
cmp
cmp
fnstenv
push
mov
pop
inc
or
mov
pop
clc
jnp
cmp
inc
mov
dec
ficoms
or
and
jle
xorb
push
adc
xor
into
dec
in
push
push
mov
dec
test
sbbl
dec
je
loop
lret
or
xchg
mov
dec
cmp
popa
mov
jnp
jp
in
rorb
sti
cmpsl
insb
adc
cmpsb
add
xor
mov
lods
adc
xchg
outsl
int3
cmc
cmp
pop
and
sti
mov
add
movsl
dec
vandnps
or
lret
cli
rclb
mov
add
adc
lret
or
punpckldq
add
adc
xor
push
bound
mov
pushf
add
mov
xchg
mov
xor
mov
pop
ss
adc
push
je
adc
mov
dec
adc
push
aas
aam
arpl
adc
sub
int
xchg
adc
adc
fimull
nop
or
dec
outsl
aad
and
mov
aad
es
into
dec
xchg
sbb
ss
ror
fs
adc
lcall
je
sub
xor
push
lock
xor
movsb
mov
test
testl
push
sbb
add
cld
push
jnp
mov
testl
cs
int3
rcl
adc
repnz
in
loop
sbb
xchg
lods
popa
loopne
sub
add
xchg
addr16
jmp
arpl
pushl
mov
mov
mov
sbb
push
jae
mov
jb
inc
out
bswap
jle
push
sub
lcall
inc
es
imul
inc
ret
and
test
mov
imul
jno,pt
mov
jne
inc
xor
add
xchg
loopne
roll
jge
nop
xor
lods
pop
mov
pop
pop
xchg
jb
aad
scas
add
cmp
sbb
imul
inc
fnstenv
in
imul
cmp
dec
jl
in
fstps
movsb
dec
cwtl
cmp
push
ds
aam
negb
adc
loope
sub
mov
ja
test
xchg
jge
fnsave
mov
or
add
xchg
xor
test
sub
inc
xchg
dec
cld
xchg
jp
mov
in
adc
mov
jae
mov
rolb
and
mov
pop
xchg
pushf
cltd
stos
pop
test
push
mov
cmp
fnsave
xchg
add
nop
add
es
das
jno,pn
arpl
js
jle
int
mov
pop
mov
mov
dec
mov
icebp
lds
lret
je
je
sub
pop
jb
stc
scas
imul
pusha
inc
arpl
mov
push
and
or
mov
jmp
insb
popa
xor
push
clc
inc
lock
jge
icebp
clc
or
mov
mov
pop
jg
cmpsb
nop/reserved
xor
iret
enter
jo
neg
je
fwait
xchg
cltd
inc
adc
mov
out
push
loopne
pop
stos
out
pop
addr16
xor
jg
cmc
and
mov
cmp
js
scas
or
lods
imul
ljmp
aam
inc
cwtl
mov
xorb
scas
sub
xor
sub
jne
scas
dec
pop
adc
rep
rorb
das
fisubl
push
insl
mov
in
les
adc
dec
inc
pop
mov
or
sarb
pop
js
inc
push
testl
add
mov
fst
xchg
dec
mov
cmp
sbb
push
pop
mov
sub
add
xchg
mov
loopne
fs
out
cmc
aas
cmpl
mov
mov
sub
sar
test
aaa
inc
nop
sub
jmp
jmp
xor
cmp
and
add
jecxz
shll
cli
je
pusha
add
xchg
es
xchg
jbe
notb
mov
in
popf
js
scas
fptan
lods
jno
leave
mov
mov
mov
sbb
adc
pop
mov
sub
rolb
mov
jne
jp
xor
lea
inc
loope
jl
cmp
lods
cmpsb
mov
iret
je
inc
lods
adc
mov
pavgb
out
mov
test
notl
nop
shlb
subb
leave
rcr
je
cmp
inc
icebp
pop
inc
and
push
push
pop
cmp
inc
push
imul
pop
mov
out
outsl
rcrl
cltd
jmp
loope
jo
sbb
aad
pop
sub
jl
cld
subb
stos
mov
popa
cmova
mov
xor
mov
fld
stos
filds
push
dec
daa
ds
mov
and
call
dec
sbb
js
sbb
push
addr16
xor
jge
xor
cmp
jo
xor
cmpsl
and
xchg
jb
or
mov
adc
insb
mov
xchg
iret
jmp
scas
mov
in
icebp
fidivrs
cmpsb
ds
sub
xchg
adc
clc
mov
shlw
add
xchg
outsl
lcall
pop
in
popf
xor
sub
dec
loopne
jmp
fdivrs
dec
rorb
cmpsl
sti
test
sub
fadd
jno
cmpsl
repnz
pop
mov
fwait
pop
and
fdivl
ljmp
out
stos
mov
andl
movsb
sub
adc
adc
test
les
shll
cli
xor
mov
dec
mov
fs
mov
sahf
mov
mov
xchg
xor
int3
addr16
push
scas
mov
psadbw
pop
in
mov
cmp
inc
inc
mov
sahf
mov
outsb
cs
movsb
or
fmull
xchg
repnz
fstps
mov
std
mov
sbb
shrb
mov
fdivrl
pushf
filds
cmp
jg
cld
xchg
mov
jecxz
shrb
out
xchg
jb
sbb
aad
nop
sti
stos
mov
mov
mov
jne
ja
mov
ds
adc
sbb
mov
popf
xor
int3
push
sbb
and
insb
clc
aam
xchg
int
into
popf
xor
and
add
repnz
rcr
jo
mov
rorl
inc
sbb
popf
ret
pop
rcrl
fsubl
inc
mov
dec
int3
insb
jp
or
jno
leave
subb
xchg
test
xchg
pushf
test
mov
out
cli
and
add
jae
mov
leave
loop
and
iret
sbb
jp
jno
dec
jmp
jge
push
imul
pop
jecxz
xor
divl
cmpsb
inc
loopne
lods
pop
push
pop
or
push
dec
cltd
inc
xchg
icebp
gs
movsl
test
scas
mov
jecxz
mov
or
jp
cmp
into
or
xchg
stos
mov
xlat
rcrl
sbb
bound
fistps
and
fiaddl
pop
fcomps
out
das
xchg
imul
jno
test
add
fcomps
pop
push
sub
inc
clc
mov
int
inc
xlat
enter
push
push
imul
pop
mov
pop
loope
icebp
rcrb
xchg
push
or
mov
out
insb
popa
loopne
shrb
in
das
cmp
push
fidivrl
xchg
pop
shll
and
push
loop
push
and
mov
adc
jecxz
pop
inc
xor
jno
out
mov
sub
pop
sbb
inc
adc
inc
je
add
divl
fadd
into
daa
mov
je
ds
push
movsl
push
add
mov
pop
orl
imull
loop
xchg
dec
fistl
add
adc
icebp
mov
adc
roll
mov
mov
mov
or
adc
and
test
push
mov
fptan
mov
and
push
mov
andl
test
fadd
push
jo
xchg
cmp
inc
enter
jg
jne
movb
out
add
popf
leave
aam
push
xor
cli
movsb
and
aaa
test
mov
nop
push
insl
scas
sub
mov
cmp
in
add
jle
cmp
stos
mov
cmpsb
adc
cmp
or
test
mov
aaa
sub
scas
push
pop
mov
fdivrs
and
mov
in
cmpsl
sub
and
cmp
ja
xchg
daa
push
repnz
xchg
sub
fsubs
add
dec
pushf
stos
mov
fmulp
mov
mov
out
outsl
jnp
addl
adc
dec
cmp
mov
xor
mulb
cmpsl
mov
xor
or
xchg
push
sbb
sub
push
fidivl
test
leave
sub
mov
mov
iret
jmp
bound
in
inc
test
icebp
mov
ds
mov
sub
dec
cmp
cmp
push
mov
lods
aas
jo
push
stc
cmpsb
jb
and
cmc
push
jbe
leave
imul
cmp
fidivl
fldenv
push
mov
sub
mov
stos
andl
fcompl
sahf
add
xor
setnp
xor
add
ret
inc
fucom
das
inc
cmp
push
mov
fisubrs
pop
mov
jo
dec
mov
daa
aad
addr16
mov
ss
xchg
and
ljmp
fsubs
lods
sbb
shrl
inc
sahf
xor
cmp
push
jecxz
sbb
enter
xchg
lea
repnz
xor
daa
and
rcll
dec
in
sub
sbbb
sbb
inc
xchg
inc
push
cmp
std
or
dec
fs
sub
jno
push
mov
nop
cmpsl
rcl
loop
mov
stos
jle
repz
push
inc
insl
mov
or
or
lahf
xor
sahf
sub
std
or
out
roll
cwtl
out
dec
lea
std
push
daa
in
jl
adc
fcomps
jns
and
sti
sub
mov
aad
fwait
pop
add
adc
jnp
lret
adc
add
jae
dec
fsubrl
adc
and
nop
sub
in
popa
and
imulb
jnp
pop
arpl
xchg
mov
testb
je
dec
sub
push
lcall
sub
sbb
pop
jnp
pop
inc
orl
rorl
dec
loop
aas
xlat
sub
pop
testl
push
sbb
xchg
xchg
push
js
out
imul
xchg
fwait
sahf
mov
movsl
stc
add
mov
jg
fwait
push
push
icebp
enter
js
fs
scas
aam
mov
or
imul
lcall
cli
xchg
or
out
dec
jbe
mov
imulb
fsubrl
into
or
xchg
cmpsl
sbb
pop
rolb
pop
sbb
cld
fdivrl
jmp
add
add
aaa
repnz
outsl
shll
jae
sub
movsb
inc
out
cwtl
xor
sbb
or
sbb
lods
inc
call
jg
mov
in
cwtl
dec
mov
add
add
adc
xchg
mov
mov
jo
loop
cmp
in
movsb
ficoml
and
jns
push
push
push
inc
dec
inc
addr16
insb
stos
out
mov
jg
xor
mov
aaa
jns
test
loope
mov
xchg
popa
in
cld
push
xchg
in
pop
cmp
dec
cmp
cmovge
jp
mov
daa
add
push
inc
fcmovbe
mov
cmp
mov
or
xchg
popa
cmp
inc
mov
in
das
jecxz
inc
sbb
mov
subb
jecxz
in
lahf
xor
es
les
dec
sbb
lret
sub
sbb
adc
push
mov
idiv
punpckhdq
dec
xchg
jbe
out
icebp
dec
xchg
test
fildl
cwtl
rcl
pop
iret
add
add
mov
inc
frstor
movsl
ljmp
in
push
pop
xor
xchg
sub
shlb
push
cmp
loop
push
cmpsb
mov
mov
mov
popf
push
mov
lcall
fidivrl
adc
pop
lahf
in
data16
ret
sti
test
add
fwait
lahf
xchg
es
mov
bound
mov
cli
js
movsl
xchg
xlat
inc
sub
jle
mov
push
xchg
sarb
rorl
cmp
adc
mov
pushf
adc
pop
mov
adc
push
orb
insb
imul
popa
test
ret
mov
xor
scas
xor
scas
jmp
add
xchg
mov
adc
stos
int
outsl
pop
inc
int3
push
insb
imul
clc
aas
or
cmpsl
sub
jo
sub
rolb
xor
jb
dec
repnz
jg
mov
std
in
or
pop
xchg
popf
cmp
or
imul
add
inc
lea
adc
xchg
leave
push
sbb
je
xor
cmpsb
lret
pop
pop
gs
push
clc
xchg
imul
sbb
in
adc
dec
cmc
test
cld
test
cmc
lods
fsubr
aaa
into
mov
stos
mov
and
in
aam
fs
rcll
bnd
dec
jmp
in
dec
cmc
or
sbb
jmp
and
add
mov
jbe
rolb
and
sbb
jae
lret
in
fadd
pop
mov
pusha
jae
cs
adc
std
stc
idivl
into
mov
push
jo
js
ret
dec
adc
cmp
repz
cmp
lret
jne
mov
xchg
mov
cmpsb
in
lea
jmp
or
jmp
movsb
pop
inc
push
pop
fisubrs
test
xchg
xchg
cmp
sbb
mov
inc
xchg
rclb
cs
in
cmc
cmp
nop
rcrl
pop
subb
int
pop
int3
mov
aaa
mov
mov
pushl
pusha
or
popa
pop
outsl
into
xor
scas
ret
mov
loop
add
mov
lds
and
mov
push
jge
call
js
stc
in
adc
cmpsb
jp
subb
or
in
cmpsl
ret
pop
rcll
pop
sub
cmp
sub
inc
and
mov
xor
out
insb
push
jno
cmpsl
out
jns
cmpsl
or
push
add
fidivs
movsb
xchg
lods
fnsave
pop
add
pop
cmpsb
mov
sahf
hlt
jnp
mov
push
mov
xchg
je
mov
mov
xchg
in
mov
push
jmp
push
push
jne
dec
jge
mulb
data16
inc
sbb
xor
dec
jae
inc
xor
sbb
jno
jle
xchg
arpl
inc
mov
addb
mov
sbb
xchg
repnz
icebp
loopne
mov
mull
mov
shll
xchg
popa
inc
mov
jge
and
outsl
jge
faddl
xlat
lea
lahf
mov
and
insl
push
lret
push
inc
xlat
xchg
imul
and
xor
fs
dec
or
std
push
shrl
cmp
jp
xchg
jge
sbb
loopne
je
add
push
dec
ficomps
in
jge
xorb
xor
and
pushf
mov
popf
dec
push
shrb
jae
push
aas
mov
dec
xor
sbb
call
jle
cmc
aad
mov
mov
out
lock
jb
cld
cs
mov
in
cmp
dec
inc
pop
xorl
adc
mov
sbb
push
pop
imul
and
cmp
mov
int3
imull
test
adc
jmp
cmp
mov
gs
mov
pop
dec
notl
jle
jns
cmp
add
pop
scas
xchg
ja
or
push
clc
ss
add
pop
into
mov
inc
pop
cmp
push
scas
repnz
cld
cmp
inc
cmp
lods
loopne
jg
cltd
sub
lret
push
imul
mov
push
out
es
inc
adc
push
jno
shrl
sub
sbb
pop
lock
arpl
push
out
mov
shrb
push
cmpsl
in
sbb
xor
xlat
out
mov
jle
data16
and
jl
and
sti
jnp
pop
add
add
pop
mov
xor
jmp
int3
stos
inc
sbb
out
sbb
lods
or
imul
stc
sbb
push
inc
filds
lret
adcl
lret
test
ss
int3
mov
or
rorl
repnz
mov
xchg
loopne
cmp
dec
lahf
clc
test
leave
aam
repz
mov
mov
sti
jbe
movsb
nop
lock
aas
mov
mov
stos
jle
xchg
sbb
inc
pop
jno
cmp
js
icebp
adc
cmpsl
inc
nop
les
call
sbb
scas
ret
lcall
aas
inc
iret
into
cmp
inc
out
jmp
and
mov
in
fnsave
jle
hlt
pop
imul
sub
mov
aaa
adc
sbb
sub
xchg
bound
dec
pop
mov
pop
fimuls
lds
pop
or
add
lods
xchg
jg
sub
dec
js
inc
test
push
sub
adc
aad
adc
out
clc
xchg
lret
dec
out
and
repz
repnz
pop
int
clc
mov
and
mov
fildl
mov
and
xlat
jno
jg
adc
mov
ja
sahf
hlt
inc
clc
mov
lahf
es
xchg
and
xorb
sahf
jp
aad
inc
daa
jle
fadds
addb
lret
out
stc
jecxz
sahf
rorb
mov
pop
cwtl
mov
push
mov
leave
sub
xchg
push
cmp
out
fstpt
lds
frstor
dec
xlat
out
xchg
mov
dec
push
mov
or
dec
jecxz
cmp
xor
dec
stc
jo
lret
push
push
int3
push
outsl
iret
push
push
fwait
inc
pop
ja
std
inc
ja
inc
into
stos
clc
and
xchg
fcomp
gs
xchg
lahf
sub
xor
cmp
inc
fdivrl
dec
push
jbe
mov
mov
arpl
cmp
nop
shll
push
cwtl
or
cmpsl
add
pop
sahf
dec
adc
adc
test
xchg
inc
call
incl
lea
xor
mov
push
scas
bound
loop
pop
inc
add
and
pop
ja
orb
pop
not
push
jo
pop
jno
and
repnz
jne
into
mov
scas
movsl
sbb
test
pushf
es
mov
cld
fs
cmpsl
loop
dec
mov
dec
dec
jo
inc
mov
aaa
arpl
gs
push
fistps
inc
push
adc
aas
aad
mov
dec
or
pusha
in
outsl
mov
xor
add
xor
pop
in
out
mov
mov
out
cmp
imul
fsubr
sbb
jnp
jbe
popf
push
mov
popa
loop
pop
add
or
outsl
fs
test
cltd
scas
cmc
mov
into
inc
movsb
call
xorb
pop
add
cmp
sbb
mov
sahf
jno
int3
jae
jns
repnz
adc
mov
push
out
dec
repz
jnp
jle
ud2
mov
lock
mov
stos
in
sahf
inc
rorl
inc
mov
xchg
scas
lcall
mov
loopne
repz
imul
ret
fsubl
cmpb
sbbl
ret
jns
fisubl
lahf
fdivl
pop
out
pop
cld
xor
dec
divb
les
cld
in
cli
inc
sti
or
call
push
test
sub
repnz
stc
in
in
push
sbb
dec
push
add
iret
push
adc
adc
sub
push
jbe
push
adc
adc
push
stos
xor
jo
mov
movsb
mov
and
push
lahf
push
or
mov
mov
ret
aas
sub
pop
mov
pop
test
sahf
sbb
loopne
aad
stc
dec
or
ljmp
popf
inc
sub
popf
lds
inc
andb
mov
add
imul
mov
loopne
fmulp
sub
stos
out
test
add
enter
dec
inc
test
pop
jb
push
inc
mov
or
call
or
movsb
jne
mov
icebp
es
test
sub
cmpsl
roll
clc
lds
mov
lahf
or
cmp
xchg
jns
loope
shll
jo
unpcklps
daa
adc
sti
cmp
ret
and
es
enter
cmp
jne
and
shrl
xor
movb
jecxz
ds
lds
out
xchg
sbb
fdivrs
stc
test
mov
popf
push
inc
sahf
pop
cmp
lcall
enter
mov
mov
in
sbb
inc
add
lret
aaa
pop
mov
adc
mov
mov
aam
fisubrs
pop
hlt
and
shr
and
push
insl
jo
mov
jbe
sti
outsb
sbb
jbe
lods
js
decb
lods
scas
push
in
mov
out
inc
sbb
lods
xchg
pop
and
cmpsb
fnstsw
lcall
ljmp
je
test
int3
aaa
jbe
adc
xchg
daa
fdivs
adcl
bound
inc
movb
xchg
imul
int
cmp
adc
adc
vcvtss2si
inc
mov
aad
or
mov
mov
pusha
add
push
test
js
xchg
push
inc
sbb
fldt
idiv
jo
cmpb
sub
jmp
pop
mov
push
into
movsl
sbb
sbb
inc
or
pop
jmp
iret
pop
add
push
push
sar
xchg
inc
inc
jl
adc
cmp
jmp
cmp
loopne
mov
xchg
xchg
fstl
push
outsb
cmp
jno
pop
out
mov
pop
jle
mov
insb
fwait
add
jle
ds
or
mov
enter
pop
pop
push
mov
pushf
int
lret
cmp
dec
jbe
dec
mov
lret
or
test
jmp
rcll
adc
mov
orb
cmp
mov
repz
fldenv
dec
mov
fsubrs
add
ret
jb
and
add
jle
fsubr
push
or
lea
dec
mov
push
cmpsl
xor
push
ret
mov
xlat
mov
popa
int3
sub
test
pop
decb
adc
and
push
mov
test
test
pop
mov
inc
mov
lahf
sub
pop
jnp
addl
cmp
fsubrs
mov
lods
push
notb
in
pop
dec
cs
mov
adc
mov
jb
clc
cmpsl
jle
push
xchg
pop
adc
inc
ret
push
popa
mov
cmp
mov
cmpb
lret
insb
add
iret
push
pushf
pop
jecxz
jle
mov
lcall
icebp
mov
in
pop
jmp
xchg
clc
ss
cmp
push
aam
and
pop
or
jb
andl
mov
js
push
or
xor
mov
sub
xchg
pop
rclb
mov
rol
call
mov
ds
inc
cwtl
dec
das
add
jg
mov
nop
daa
dec
xchg
fs
leave
ret
icebp
aad
scas
cmpsb
cmc
xlat
xchg
jecxz
jmp
ret
into
mov
ret
xchg
subb
mov
adc
dec
rcrb
punpckhdq
jp
jno
push
jns
lret
popa
push
ss
mov
pop
stc
pop
insb
mov
sti
push
adc
rolb
fidivs
jns
lcall
int3
sub
mov
inc
movsb
sub
add
or
out
movsb
jmp
loopne
push
mov
cmp
imul
int3
mov
jl,pt
xor
ljmp
stos
outsb
daa
fcompl
imul
push
ds
arpl
xchg
js
and
adc
mov
lea
dec
and
push
popl
inc
xor
xor
jb
out
and
rorb
cmp
lahf
cltd
dec
and
movsl
fstl
dec
aaa
pop
loopne
popl
scas
inc
xor
sbb
or
cli
cmp
filds
mov
mov
mov
jo
int3
mov
xchg
and
jno
fsubp
jnp
gs
je
aas
in
xchg
push
repz
inc
cs
jecxz
xor
xchg
xchg
mov
lcall
push
push
or
repnz
dec
mov
rorl
orl
ret
test
dec
repnz
int3
xchg
in
cmpsl
sbb
inc
sti
cwtl
dec
aas
jecxz
movsl
jl
lods
dec
xor
xchg
pop
dec
xor
jmp
mov
push
es
xor
aaa
fmul
lahf
notl
adc
loopne
xchg
ja
inc
mov
adc
scas
cmp
jge
ja
pop
sub
mov
xchg
loopne
adc
out
mov
mov
or
push
rclb
insb
out
jno
in
fstpl
lret
jns
inc
xchg
adcl
test
shll
jnp
jp
lock
outsl
daa
cmp
fbld
arpl
fwait
pop
push
jbe
or
sbb
aaa
sub
inc
stc
cld
stc
lret
push
cmpsl
sub
filds
dec
repnz
addr16
sub
adc
jns
or
data16
mov
fisubl
push
xor
sahf
push
sub
jns
xor
push
mov
push
pop
cmp
lds
pop
cmc
and
lret
shrb
xchg
mov
inc
xchg
mov
jbe
mov
jle
test
sub
mov
push
divb
or
movsl
lcall
hlt
mov
fsubrp
inc
dec
enter
xchg
repz
xchg
push
inc
adc
cmp
mov
out
cmp
out
mov
mov
cmp
fsub
incb
dec
jns
adc
jecxz
aam
pop
and
push
cmp
lret
push
enter
mov
or
das
ret
cli
or
repz
mov
mov
aas
mov
mov
dec
pop
and
mov
les
in
dec
mov
xchg
ljmp
addr16
and
cmpsb
jo
fsubrs
pop
cmp
lds
push
mov
xchg
sub
jl
mov
push
mov
cmp
aaa
aam
addr16
cmp
mov
xlat
adc
mov
aaa
and
lea
call
or
adcb
xchg
pop
std
cmpsl
push
add
int3
inc
or
ror
cmpb
mov
jo
xlat
insl
fidivs
daa
jg
cmp
mov
inc
mov
add
push
pop
pop
fimuls
loopew
jae
pop
test
pop
mov
jns
loope
test
sbb
or
add
or
ds
mov
pusha
pop
flds
adc
mov
ror
push
xchg
mov
adc
mov
aaa
js
es
xor
push
cmp
dec
jmp
das
sub
bound
and
lret
adcb
add
into
xor
rorb
aad
xchg
xchg
loop
mov
push
dec
dec
outsb
fs
frstor
jg
imul
or
jne
sahf
lret
aad
lahf
ja,pn
sbb
sysexit
xchg
sbb
mov
data16
loopne
test
stc
repz
push
push
es
jecxz
jge
int3
aam
cmp
pop
pop
outsl
mov
std
dec
dec
push
sti
mov
test
or
movsb
fidivl
scas
addb
or
mov
xor
sahf
shlb
xlat
mov
jns,pn
lds
or
je
mov
movsl
mov
sahf
or
mov
inc
popa
rcrb
jbe
dec
fildll
cli
iret
cs
inc
lret
fsubs
mov
mov
inc
cmp
mov
fcoml
xchg
jnp
sbbb
fimull
pop
dec
cs
js
push
andb
out
les
push
cmp
das
mov
jp
push
addr16
aas
mov
stos
test
mov
jg
in
dec
push
lcall
daa
test
outsb
cli
sub
add
xor
and
xchg
mov
movsl
scas
lret
ja
jmp
test
cs
les
adc
dec
add
push
dec
xor
xchg
into
das
nop
xor
cmp
and
psubw
xlat
in
inc
xor
add
add
ja
lds
cmp
jne
xchg
popa
cwtl
dec
mov
or
xchg
xchg
test
sbb
mov
sbb
fninit
cmp
dec
dec
push
pop
cmp
lods
popa
cli
xor
or
rcl
add
sub
jo
mov
pop
jbe
and
testb
sbb
addl
dec
loopne
or
fldl
aam
pushf
clc
xor
jg
scas
das
push
jnp
mov
ja
cmc
fists
mov
repz
roll
lea
int3
xor
fs
and
out
xor
add
daa
cmp
subb
mov
mov
test
pop
push
insb
cld
cmp
sahf
pop
mov
pushf
inc
fldcw
xchg
loopw
dec
and
push
mov
stos
mov
adc
mov
add
jne
fnstcw
sti
sti
fimuls
mov
xchg
scas
stos
les
ret
and
mov
ret
shlb
adc
cmp
lods
sub
insb
das
outsl
fwait
dec
ljmp
repz
pop
lods
mov
cli
bound
mov
jmp
mov
enter
jne
pop
mov
repz
rcr
push
mov
sahf
xor
pop
push
sub
add
jo
add
cmpsl
xchg
mov
or
cmpsb
out
adc
mov
jnp
lods
repnz
loop
icebp
push
sbb
cmp
mov
shrl
ret
xchg
das
mov
add
stos
push
imul
add
cmc
xchg
test
out
cs
sbb
mov
shlb
fcoml
add
dec
mov
ret
push
and
fs
dec
pop
jbe
xorb
outsl
scas
jbe
sti
jecxz
xlat
aam
scas
jns
cltd
sub
mov
inc
clc
fildl
pop
ds
mov
inc
dec
test
push
add
and
push
xor
xchg
out
loopne
popf
or
pop
jl
sbb
out
sbb
push
fildl
cmpsl
pop
aam
hlt
push
cmp
mov
jecxz
sub
push
out
xchg
add
xor
xlat
movsl
push
push
xchg
sbb
mov
nop
and
or
add
popl
mov
dec
scas
les
lds
stos
adcl
jb
dec
mov
fldenv
jns
xor
lret
inc
cs
mov
imul
pop
out
sbb
push
sahf
xlat
sarl
movsb
add
pushf
inc
mov
ljmp
ret
pop
mov
pop
test
sub
shrb
sub
scas
lret
test
push
loope
cmp
mov
popf
popf
arpl
loop
lods
popa
arpl
xor
sub
xchg
cli
xchg
cli
int3
adc
popa
xchg
rcll
jl
js
or
mov
sbb
jbe
jge
mov
dec
sahf
sub
lds
iret
pop
lods
pop
xor
loop
inc
mov
popf
xchg
and
mov
dec
or
cmp
mov
lock
icebp
fwait
push
shl
cmp
cmp
sub
jmp
pop
das
push
shll
pop
fldcw
cmp
jg
xor
inc
ficoml
dec
jle
push
inc
insl
mov
add
lret
or
add
mulb
mov
rcl
xchg
dec
je
fwait
pop
cmpsb
fistpl
xchg
push
jmp
ljmp
iret
shrb
out
inc
mov
fwait
inc
xlat
insb
mov
out
lahf
mov
in
xchg
int
popf
pop
inc
gs
nop
stc
push
cmpsb
mov
mov
pushf
aam
bound
adc
repnz
das
clc
out
inc
bound
or
fdivrl
mov
dec
notb
aas
clc
icebp
push
inc
gs
mov
nop
fistpll
adc
testl
jge
repz
sbb
cmp
jg
cmpsb
jmp
sbb
bound
andl
jmp
lahf
xor
dec
inc
cli
adc
fneni(8087
pop
sbb
bound
push
addl
in
rol
and
sub
sub
mov
dec
pop
test
jnp
sub
imul
push
mov
xor
mov
cltd
dec
mov
je
gs
cmp
pop
stos
test
fidivrs
cmp
jb
add
mov
mov
icebp
je
xorb
cmp
push
inc
cwtl
rorb
cld
sub
jmp
hlt
ds
pop
mov
repnz
sbb
mov
inc
add
mov
daa
jl
xchg
xchg
popa
cmp
jns
pusha
vmovups
daa
mov
and
sti
inc
fidivs
addb
sbb
and
push
pop
xor
lods
in
loopne
mov
mov
adc
ds
mov
hlt
mov
shrb
jp
stos
popf
loopne
xor
sub
sub
test
gs
cmp
cmc
add
xchg
push
cltd
rclb
ds
xchg
jge
adc
or
xor
imul
ja
mov
xor
push
mov
inc
jo
adc
pop
rcl
repz
cmp
mov
jg
in
cmp
fists
fstl
outsl
stos
js
dec
aad
pop
pop
push
xchg
pop
push
cwtl
mov
cmp
push
stc
fcompl
jo
cmpb
sti
xlat
faddl
push
je
jbe
dec
push
imul
in
je
and
sub
mov
mov
xlat
jno
bound
jbe
mov
pushf
or
xor
les
mov
mov
int
mov
sub
arpl
neg
aas
push
xchg
mov
push
arpl
cwtl
popf
test
add
jg
insb
push
push
scas
ss
add
mov
shr
test
loope
push
fwait
insl
lea
cli
xor
hlt
adcb
addr16
in
push
jmp
divb
xor
aas
aad
movsb
xchg
ret
xor
sub
movsl
add
subl
or
sbb
cmp
xchg
or
cli
cmp
into
xor
das
mov
ret
or
mov
and
sub
mov
scas
mov
cmc
and
aaa
into
add
add
push
mov
jg
in
fisttps
cli
test
mov
jbe
and
jmp
je
mov
in
addr16
in
mov
fldl
or
test
cmp
jl
adc
mov
jb
sbb
scas
insl
mov
cmp
mov
mov
inc
insb
jecxz
mov
mov
loope
rcr
outsb
lock
fsubrs
jmp
ret
pop
pop
sarl
adc
inc
jp
jp
out
sub
inc
pop
movsl
cld
ds
push
inc
leave
arpl
rcrb
and
mov
sbb
ljmp
mov
mov
jno
mov
mov
push
out
fwait
or
and
push
add
pop
pop
adc
adc
out
test
ds
cwtl
xor
outsl
divl
push
push
mov
scas
adc
adc
movsb
cmp
in
fdivl
push
js
gs
push
jp
jg
dec
jecxz
xchg
jl
push
in
cltd
or
stos
mov
pop
pop
mov
and
pop
and
scas
out
iret
aam
adc
jp
addl
imul
or
outsl
sbb
add
inc
mov
push
inc
mov
insl
sub
cmp
mov
mov
in
mov
jp
enter
xor
jge
cmpsb
xchg
dec
push
xchg
jge
sub
dec
jp
or
mov
dec
mov
xlat
nop
fidivrl
pop
sub
adcl
out
sub
int3
push
fistpl
xor
dec
scas
pop
cli
xchg
inc
leave
jns
clc
jecxz
or
idiv
mov
stc
mov
sbb
icebp
fbstp
fcmovb
int3
mov
xchg
cltd
imull
cmpsl
sub
pop
in
lcall
bound
loope
and
call
mov
jle
push
sbb
jnp
inc
mov
sbb
aas
pop
jp
fiadds
in
fcoms
inc
and
icebp
mov
jmp
adc
std
mov
inc
aam
mov
popa
pop
push
popf
rorb
fmuls
jecxz
andl
subl
xchg
sub
lret
lcall
fnstenv
xor
dec
xchg
fbstp
inc
aas
xor
incl
mov
add
out
aas
testl
or
fwait
mov
int
or
inc
inc
mov
bound
xchg
sbb
sarl
jp
jbe
jbe
push
dec
dec
ds
push
push
fnsave
jp
or
imul
test
enter
xor
bound
popl
jmp
sub
std
cmp
outsl
lahf
mov
loopne
fiaddl
cmpsl
out
jmp
lock
jecxz
test
outsb
xlat
loopne
cltd
jle
cltd
notl
xor
ror
xor
mov
into
mov
es
xor
movsb
test
scas
sbb
xor
jg
shrb
add
pushf
push
data16
lcall
xor
rdtsc
enter
xor
addr16
loope
or
inc
cmp
cmp
cmp
rcrb
data16
std
sub
cmpsl
pop
shll
jecxz
das
sahf
in
daa
jo
iret
in
add
movsl
int
cli
scas
xor
mov
add
push
sbb
stos
imul
pop
mov
inc
pop
dec
jbe
xchg
rcl
adc
mov
or
movl
test
push
or
jo
es
nop
lds
xchg
cltd
or
subl
jns
pop
pop
jecxz
movq
mov
mov
je
mov
int
stc
inc
or
subl
sub
sub
xchg
push
frstor
es
push
insb
adc
adc
pop
and
sub
and
add
cld
cltd
ljmp
dec
ror
fs
mov
repz
pop
cmp
ja
mov
and
out
jb
cmp
push
sbb
dec
push
in
insl
xchg
addr16
jecxz
pop
xchg
in
loopne
into
out
sbb
divl
adc
bound
repz
nop
stos
jmp
cmp
fs
inc
jo
inc
cs
push
xlat
icebp
decb
rolb
iret
ljmp
movsb
std
outsl
push
test
cmp
outsl
addr16
and
scas
sub
in
mov
test
or
jo
inc
daa
push
je
pop
aaa
imul
push
push
repz
mov
sub
rorl
mov
mov
xchg
bnd
mov
imul
cmpsl
jne
pop
dec
cltd
and
and
ret
in
flds
pop
mov
or
bswap
pop
add
stos
ljmp
std
jnp
ret
pop
pop
sub
xor
out
xchg
push
cmp
pop
lcall
ljmp
imull
or
out
repnz
mov
aam
sub
jo
push
movsl
cli
mov
loop
lock
and
insl
outsb
lcall
cs
out
fisttpl
add
push
lods
icebp
cmp
fisubl
inc
xchg
dec
std
ret
mov
ljmp
xchg
ljmp
das
jno
pushf
xor
mov
push
cmp
xchg
sbb
mov
jnp
nop
cmc
gs
xchg
add
jmp
aaa
dec
xor
das
ret
sarl
and
sbb
mov
mov
inc
mov
and
mov
sub
xor
es
leave
insl
mov
cmp
mov
call
icebp
jge
dec
push
sbb
mov
inc
in
rcll
data16
out
out
fadds
jg
in
inc
idiv
sti
clc
pop
clc
push
divl
push
lret
clc
sbb
sub
aas
xchg
es
or
add
jbe
and
xor
xor
jns
xchg
out
jbe
dec
in
cmp
mov
sbb
in
out
mov
test
or
xor
sub
lods
sbb
fdivrp
shlb
mov
and
fsts
popf
xor
inc
in
mov
mov
pop
notb
jge
insb
lret
lock
add
cmp
test
rcrb
int3
shl
sub
stos
xor
pop
xchg
mov
cld
imul
pop
cwtl
push
aas
cmp
imul
es
aas
js
mov
mov
lcall
push
addb
stc
mov
inc
mov
das
stc
xor
fmul
fldl
ret
fisubrs
pop
fistpl
sub
mov
dec
jge
je
sub
je
loop
push
or
lcall
rorl
or
data16
ret
sub
dec
jne
pop
mov
mov
shll
adc
cwtl
sub
add
ror
push
inc
test
fmul
jo
or
lret
add
rcrl
add
inc
fsubrs
jns
cmc
cmp
xor
mov
in
sbb
mov
fucomip
loopne
into
pop
jnp
cwtl
in
cmc
dec
fisttpl
dec
ja,pn
cmc
arpl
sbb
fst
push
lods
imul
es
mov
clc
and
insl
shrb
es
jge
adc
mov
push
ja
mov
mov
aam
mov
sarb
pop
mov
cmpsl
cmp
jmp
pop
test
faddp
mov
sbb
push
call
fwait
sti
jmp
inc
mov
jecxz
aad
sti
out
push
mov
lahf
sbb
pop
xor
add
and
mov
xlat
cmp
pusha
dec
xchg
scas
ja
out
and
cs
loop
mov
adc
insb
clc
mov
jl
outsl
adc
cltd
mov
orb
sub
sbb
into
fmull
inc
pop
ss
inc
jmp
imul
shl
xor
mov
ss
add
daa
andl
add
mov
fucomp
sub
jns
rorl
or
jmp
ss
jnp
pop
jp
xchg
in
leave
movsl
pop
outsb
mov
push
movsb
xor
int
sahf
add
or
pop
push
xchg
adc
push
adc
out
mov
rorb
aas
pop
std
clc
ret
sti
dec
ds
inc
xchg
mov
xchg
cli
sub
cmp
xchg
mov
shll
lahf
push
fcmovbe
sbb
inc
ja
push
inc
sub
mov
sahf
mov
bound
ret
inc
jbe
push
xchg
pop
push
dec
dec
fstp
int3
jle
mov
cmc
inc
enter
mov
adc
es
jl
and
cld
test
jle
cmp
and
sbb
push
xchg
add
cmp
xchg
dec
nop
popa
in
sub
aam
add
push
jno
fmul
cmp
lock
mov
dec
outsb
dec
ljmp
aad
inc
sub
nop
cmp
pop
call
and
insl
or
lock
push
rorb
pop
jns
jnp
and
sbb
add
xor
bound
cwtl
fdivrp
cmp
loope
icebp
push
pop
cmp
test
lea
dec
out
int
pop
call
ror
inc
xor
mov
shll
aad
dec
pop
test
add
data16
pop
nop
cli
xchg
jno
sbb
push
lods
ja
lcall
inc
sarl
sti
data16
leave
pop
in
std
test
cltd
out
xchg
mov
sub
sub
dec
mov
xor
xchg
pusha
sub
inc
cmp
fs
enter
mov
leave
jb
jns
mov
cmp
rolb
fistl
paddw
jne
aas
outsb
ret
mov
aas
inc
lahf
xor
mov
jmp
cmp
ret
or
and
fldcw
jns
or
movsb
fisubrl
loop
imul
mov
mov
idivl
int
jle
fwait
dec
mov
pop
nop
jle
dec
mulb
pop
jns
insb
xchg
dec
mov
movsl
mov
mov
pushf
mov
outsb
mov
jns
push
les
cld
and
shlb
dec
dec
out
mov
je
movl
or
rcll
cmp
mov
out
cmp
mov
inc
fcos
pushf
sbb
jecxz
xchg
inc
jne
xchg
push
xchg
mov
pop
cmpsl
sub
out
jne
fs
jns
mov
mov
cs
xchg
dec
out
xchg
or
add
mov
pop
push
xchg
mov
lea
push
mov
mov
loop
mov
test
fs
push
lcall
icebp
jo
mov
mov
mov
stos
adc
pop
int
test
pop
xor
incl
ret
xchg
pop
xor
repnz
adc
mov
into
int3
cmpsb
out
push
xor
push
cld
mov
ss
popa
add
mov
and
xchg
mov
nop
inc
test
clc
and
mov
test
pop
out
cltd
or
mov
jb
and
sub
adcl
mov
out
mov
call
jb
sbb
dec
dec
jnp
cld
pop
mov
test
mov
dec
fadds
xchg
sbb
scas
and
icebp
enter
pop
pop
pop
ret
fists
xor
sbb
in
addr16
adc
mov
and
fsubs
loop
repnz
sub
or
outsl
jg
les
sbb
pushf
in
test
inc
outsb
gs
ds
imul
clc
leave
scas
cmc
push
mov
mov
out
mov
jae
push
xlat
or
xchg
mov
lds
pop
pusha
cs
gs
push
add
cmp
lods
xor
fistps
nop
dec
cmp
lea
sub
and
adc
call
shr
outsb
jnp
xchg
loopne
adc
mov
leave
jle
mov
lds
test
sub
hlt
js
fcom
mov
into
pop
cld
add
les
scas
popa
adc
das
mov
pop
dec
pop
sbb
lret
sbb
add
jg
jnp
shrl
or
dec
pop
lods
cli
mov
repnz
outsb
in
je
clc
push
cmp
inc
in
lods
cli
dec
sbb
xor
push
icebp
insb
jo
ss
sarl
insb
xor
push
jl
scas
xchg
add
mov
jge
enter
mov
mov
leave
mov
adc
shll
in
dec
stos
push
sub
out
cmp
xchg
and
in
stos
shlb
mov
push
mov
pushl
es
jb
mov
push
repnz
and
adc
ffree
pop
aam
ja
jb
leave
inc
jbe
mov
xor
lea
shr
cmp
jne
push
or
pusha
out
dec
dec
xor
or
or
orl
and
fmul
mov
mov
into
mov
js
out
jns
ftst
addr16
mov
fidivrl
xchg
or
insl
fadd
out
adc
in
sbb
lods
out
rcll
sbb
ljmp
sbb
je
dec
add
iret
add
mov
bnd
and
rorl
lret
ret
mov
or
and
xchg
jp
inc
adc
mov
gs
cmp
xchg
ljmp
int3
frstor
ret
stos
mov
stc
xchg
lea
scas
push
fs
jle
push
in
mov
mov
fildll
ret
es
adc
mov
jmp
mov
mov
dec
dec
jnp
adc
and
sbb
data16
push
add
fidivl
xor
cmc
inc
sbb
adc
fstpt
lea
or
pop
adc
add
adc
mov
cmpsb
loope
addb
jno
and
mov
int
mov
pop
mov
push
and
or
inc
xor
jb
and
imul
int
pop
mov
mov
orb
or
sub
xchg
mov
mov
dec
or
mov
rolb
fcomip
in
xchg
cs
pop
cmc
mov
fisubrl
jecxz
xchg
pop
sub
pop
jno
cmp
mov
pop
lds
outsb
fnstsw
scas
enter
cli
cli
out
mov
push
push
or
push
mov
out
sbb
repnz
cmpsb
jns
aas
jle
arpl
mov
sbbl
mov
les
imul
mov
mov
fcomps
enter
es
fldlg2
rclb
int
cld
pusha
or
inc
inc
negb
outsb
push
xor
pop
xor
into
xchg
jecxz
mov
mov
xchg
mov
int3
or
cmc
in
ret
dec
lahf
mov
mov
test
movsb
jnp
mov
sbb
sti
nop
push
hlt
lods
push
repnz
jns
repz
or
fs
dec
pop
pop
cmc
testb
sbb
pusha
pushf
mov
fisttps
cmp
mov
add
das
roll
mov
push
mov
gs
aaa
adc
cmp
xor
sub
in
and
lahf
out
sbb
stos
outsl
outsl
mov
mov
daa
mov
daa
and
jl
add
stc
xor
js
ss
mov
cmc
cmpsb
gs
dec
js
fcoml
mov
ljmp
movsb
jbe
jne
and
scas
mov
fldl
cmp
out
xchg
cs
cmpsb
mov
pop
sbb
por
jne
jb
les
pop
ret
add
or
les
enter
fs
push
add
mov
mov
push
adc
loop
movsb
and
stc
ljmp
xchg
arpl
jl
orl
pushf
push
call
mov
pop
lock
push
out
rcl
ds
pop
dec
add
jge
or
mov
cld
inc
jb
stos
sahf
xchg
bound
pop
mov
mov
dec
loope
rclb
and
sub
dec
adc
fiaddl
int
mov
data16
mov
ds
div
cwtl
inc
fmull
dec
mov
stos
inc
scas
dec
dec
mov
or
or
out
dec
sub
ror
mov
rcrl
push
lds
sub
call
add
enter
inc
inc
sub
das
xor
jp
or
testb
out
xor
jbe
and
popa
stos
movsb
mov
cwtl
loopne
or
jmp
repz
pop
add
scas
fsubl
scas
jnp
fsubrs
stos
push
xor
inc
sub
sti
fwait
xchg
mov
sub
pusha
adc
test
dec
pop
faddl
hlt
pop
or
enter
lea
pop
xor
mov
lods
popf
in
scas
xor
stos
out
call
into
mov
xlat
in
jmp
and
mov
sbb
mov
test
xor
push
fistpl
sbb
lret
int
mov
mov
je
mov
in
jg
lods
fbld
pop
addl
fsts
mov
imul
inc
in
cld
nop
out
ret
xor
cld
repnz
cld
inc
rcr
jmp
mov
xchg
out
rep
hlt
les
xchg
or
sbb
rol
test
sub
and
add
jl
xchg
push
mov
into
xchg
xchg
push
out
push
pushf
js
pop
je
into
jl
sub
mov
clc
daa
lcall
shrb
fs
clc
mov
adc
xorb
jne
mulb
cmp
fsubs
sub
lock
dec
or
mov
mov
mov
inc
push
dec
inc
lcall
mov
iret
push
and
ret
mov
sbb
and
mov
xchg
lea
jmp
mov
or
mov
xor
inc
sti
adc
mov
lcall
cmpl
movsl
mov
mov
pusha
xor
jne
push
outsb
push
outsb
test
xchg
outsb
shlb
orb
pop
add
xchg
adc
test
movsl
pop
push
sti
push
sub
pusha
inc
adc
push
loopne
xlat
mov
mov
mov
jg
dec
or
sbb
or
rcrb
jns
cmp
mov
mov
repz
in
mov
adc
loop
popa
xchg
inc
lods
in
les
xor
loopne
jmp
and
cmpsb
mulb
imul
pop
dec
and
sarl
mov
add
out
cmpsl
inc
mov
data16
sbb
pop
sbb
sti
subb
xchg
mov
mov
in
lcall
ret
mov
and
xchg
cmp
and
fisttpll
mov
push
in
or
popf
inc
jecxz
gs
aad
repnz
or
test
scas
add
sub
loopne
mov
mov
lds
dec
dec
test
push
inc
scas
mov
mov
jg
ret
adc
adc
mov
cmpl
jbe
cmpsb
xor
fnstsw
ficoml
push
movsl
test
aas
imul
movsb
push
add
int
xchg
jo
das
rorl
daa
das
test
arpl
xor
in
cmp
data16
test
jmp
and
mov
mov
call
dec
xlat
mov
xor
fs
mov
lahf
xchg
in
mov
jno
nop
leave
shrl
jg
stos
ljmp
or
out
test
lock
adc
pop
and
lods
push
lcall
js
jecxz
mov
cmpsl
and
xor
loope
mov
or
pop
push
add
insb
out
and
sub
pop
inc
xchg
insl
and
mov
jns
es
in
test
push
mov
lods
jge
out
test
out
mov
add
inc
js
push
movsl
pop
push
stos
movsb
loope
addr16
adc
ja
or
stos
add
aaa
cltd
test
xor
and
inc
mov
loopne
add
daa
cmp
and
stos
add
jns
out
ret
loopne
shl
aaa
add
jne
stos
mov
xlat
stos
mov
aad
sub
pop
xchg
stos
cli
jl
ret
dec
clc
and
xchg
cmp
lret
mov
adc
fwait
mov
mov
iret
stos
das
adc
mov
fildll
pop
or
mov
add
lret
xor
fistpl
xchg
in
dec
out
sbb
inc
xor
outsl
ds
cmp
or
js
pusha
lret
fisttpll
mov
inc
out
pop
pop
inc
xor
inc
jae
mov
push
pop
pmaxsw
daa
stos
or
loope
sub
fildl
pop
arpl
pop
movsl
fwait
jmp
dec
push
xor
dec
xchg
dec
cmp
loope
in
stc
dec
pop
lds
inc
push
rclb
sbb
mov
add
idivb
std
push
fisttpll
loope
pop
addr16
pop
cmp
pushf
jge
sbb
mov
in
cmpsl
inc
in
cltd
mov
fcmovbe
fisttpll
aam
and
lods
jne
scas
sub
lock
mov
cld
jmp
adc
bound
aaa
or
hlt
dec
xor
in
adc
lods
mov
push
cmp
jp
sbb
inc
jno
in
mov
addl
jl
cltd
pop
mov
daa
js
push
in
inc
mov
int
fwait
push
mov
movsl
loop
or
fistl
inc
cmp
lahf
gs
xchg
jae
test
ds
jl
sub
cmpb
mov
test
adc
or
push
sbb
and
out
mov
add
sarb
jp
sub
push
cli
fxch
data16
out
xchg
rclb
sub
inc
cmc
test
scas
push
imul
popa
jb
push
push
leave
scas
push
icebp
mov
repnz
adc
loopne
sbbl
lods
outsb
mov
and
sub
and
push
adc
icebp
call
sub
jmp
add
cmp
sti
pushf
mov
mov
push
pusha
or
adc
lahf
mov
mov
mov
sub
mov
test
xchg
xchg
cmpsl
pop
cmp
xchg
pop
xchg
inc
sbb
mov
pop
xchg
mov
sbb
xchg
divl
and
lret
int3
jbe
lcall
push
es
xchg
in
inc
daa
push
dec
flds
add
outsb
cmp
repnz
dec
repnz
push
call
lods
push
xor
xchg
stos
jnp
mov
cmp
dec
in
in
popf
pop
or
dec
ljmp
dec
or
jecxz
mov
sbb
bound
loope
gs
in
pop
xchg
out
cmp
push
int3
loope
pop
sub
rcr
or
sbb
ficompl
add
cwtl
test
sahf
outsl
das
sbb
fstpt
outsb
in
dec
mov
pop
movsl
sarb
pop
loop
imul
xor
pop
mov
sbb
mov
mov
mov
jmp
xchg
and
inc
push
lods
fs
pop
repz
xor
stos
xor
jmp
loopne
mov
pop
inc
pop
stos
mov
fadd
ret
push
inc
movsb
cmpb
test
ficoms
or
pusha
sbb
lret
fists
loop
lods
sub
jg
icebp
outsl
sub
daa
jge
sbb
cmpsb
std
mov
add
je
or
mov
popa
jo
mov
das
pop
push
sub
decb
mov
mov
inc
sub
push
or
mov
imul
xchg
lods
cld
int
hlt
lock
les
add
or
lods
mov
inc
mov
cld
and
lcall
mov
mov
out
inc
inc
inc
push
rcrl
in
mov
mov
stos
xchg
and
xor
xchg
cmpsl
jg
sarb
lret
add
add
test
jae
mov
subb
xor
push
stc
subl
movsb
cwtl
jno
in
fwait
push
cmp
jno
xchg
test
pusha
xor
and
scas
jbe
adc
push
sti
call
cmp
jl
stos
icebp
test
inc
cwtl
popa
sbb
idivb
mov
sub
les
jecxz
movsb
jp
dec
mov
lock
dec
mov
loop
jae
daa
shl
mov
pop
leave
test
aad
out
jmp
sbb
sub
and
rolb
mov
rcr
jge
mov
js
fwait
jle
hlt
adc
cwtl
fbstp
xchg
imul
push
lock
clc
rcr
aaa
stos
sub
xor
in
popf
jae
jb
dec
inc
repnz
fcmovu
jecxz
mov
fstl
mov
addr16
push
lock
pop
push
inc
dec
leave
ljmp
sub
xchg
jo
pop
pop
pop
insb
test
xchg
rolb
cmp
xchg
test
or
aas
nop
mov
leave
and
cmc
fxch
xchg
cli
sbb
loope
lret
sarl
or
add
or
sub
jo
or
lds
dec
fs
dec
lds
inc
icebp
imul
cli
mov
inc
loopne
sbb
and
sbb
popa
inc
xor
nop
mov
mov
and
and
mov
jg
shll
mov
lds
push
xchg
inc
cmp
ds
push
mov
adc
ja
lods
cmpsb
push
cs
push
inc
daa
jmp
pop
outsb
push
jbe
sbb
mov
aaa
inc
mov
jmp
inc
aam
inc
ss
and
xchg
incl
sub
xor
loop
roll
and
xor
daa
nop
mov
lcall
and
dec
lret
mov
mov
stos
lcall
push
data16
or
cmp
in
sub
jmp
lcall
xlat
dec
scas
insb
sbb
pusha
mov
repnz
imul
popf
cmpsb
mov
mov
and
or
fisttpll
jg
cmp
cwtl
in
iret
test
push
cmp
stos
mov
push
and
mov
adc
sub
push
lock
mov
cmp
jne
sub
inc
push
sahf
ja
mov
jns
stc
jmp
jge
test
jmp
cmc
in
xchg
imul
inc
jge
jp
jp
xchg
js
decb
cltd
jnp
adc
jno
lcall
cmp
aad
sbb
mov
pop
cwtl
shlb
jne
adc
pop
shll
iret
jno
jg
jle
mov
and
rcr
mov
mov
pop
adc
and
aam
aad
mov
mov
fisttpll
das
adc
sub
lret
push
jecxz
mov
jg
and
rorl
ljmp
sbb
adc
jne
sbb
lods
into
fsubrp
mov
mov
push
gs
out
cmp
sahf
in
test
popf
jo
aad
or
in
lds
pop
or
outsb
int3
das
test
adcl
fistl
jo
sub
pusha
mov
ljmp
outsb
fs
psubb
pop
dec
jg
xor
movsb
lcall
fdivrs
and
test
repnz
dec
and
sti
cmp
in
mov
shrl
scas
and
cli
lods
sub
jle
dec
sbb
cmpl
repz
pop
fbld
xor
mov
std
loopne
cmp
lcall
and
mov
mov
xor
outsl
inc
iret
movsb
push
mov
out
dec
push
mov
jns
and
cmc
les
orb
mov
inc
into
int3
xchg
xor
idivb
cmpsl
enter
pop
add
xchg
test
imul
xor
pop
mov
fists
and
push
dec
mov
repz
add
adc
icebp
lcall
lret
inc
mov
mov
movsl
fnstcw
add
sti
dec
inc
lods
out
std
ret
imul
stos
push
mov
mov
mov
inc
imul
outsb
dec
add
loope
fmull
mov
ret
dec
cmp
arpl
dec
and
cmpsb
lds
sub
jb
inc
mov
dec
mov
cli
mov
adcb
mov
fsubs
dec
mov
xchg
movsl
add
out
xchg
ja
or
faddl
dec
lods
push
hlt
sub
stos
icebp
movsb
add
push
pushf
mov
mulb
jnp
les
pop
push
shrl
jg
and
test
imul
mov
sub
mov
sbb
sub
enter
sbb
adc
sub
sarb
fwait
sub
mov
adc
je
out
ds
fdivl
lods
aam
repz
out
inc
lds
fincstp
pop
lcall
xor
inc
insl
push
sbb
inc
repz
decl
xchg
subl
test
jge
shlb
add
pop
fistps
iret
int
xchg
jo
int
xchg
je
sub
rcrl
cmp
ss
push
lcall
dec
sbb
mov
sbb
js
insb
sub
cmp
adc
add
mov
add
push
in
adc
inc
std
in
jb
inc
jle
and
sub
imulb
addb
inc
ret
or
jne
xchg
sar
ja
add
addr16
fstpl
jmp
iret
roll
lea
mov
sub
jl
mov
fsubs
fiaddl
fisubs
dec
push
adc
push
pop
jbe
mov
cmp
cmp
imul
lahf
sub
push
lock
stos
pusha
push
scas
insl
xchg
push
mov
adc
js
idivb
xchg
push
in
mov
mov
stc
shll
xchg
out
movsb
iret
jg
mov
jge
inc
mov
call
dec
out
les
lea
pushf
lods
fdivs
pop
jmp
mov
ss
mov
push
cld
jmp
xor
push
inc
adc
mov
dec
fsts
dec
nop
push
outsb
dec
push
bound
fsubr
mov
mov
jno
push
int3
inc
dec
ror
or
fsubrl
pop
xor
mov
jmp
adc
ds
arpl
mov
sti
dec
notl
mov
ja
mov
ss
lcall
test
jg
lret
sub
push
cmp
outsl
loope
dec
mov
fs
and
inc
xchg
loop
adc
repnz
mov
cwtl
mov
hlt
push
roll
jg
clc
pop
notb
aad
push
cmp
scas
iret
and
jb
ss
mov
nop
lods
aad
mov
stc
std
adc
ret
pop
mov
aad
in
jp
cli
push
mov
inc
imul
dec
xor
sbb
push
jno
jl
jae
fs
popa
arpl
dec
push
xor
mov
insl
pusha
es
cmpsl
sbb
dec
jns
jo
sbb
jp
jnp
push
adc
mov
dec
and
and
scas
stos
in
sub
jge
push
cld
js
jno
icebp
pop
push
jle
outsb
jns
rcrb
push
enter
pop
jmp
cmp
jo
pop
shrb
roll
pop
and
popl
scas
jne
xor
or
inc
adc
mov
push
cmpsl
jae
pop
dec
fidivrs
stc
mov
pop
jge
dec
mov
in
inc
fldenvs
sub
mov
pop
adc
xor
bound
mov
subl
or
xor
std
cwtl
cmp
fwait
adc
xchg
mov
cmpsb
xchg
inc
repnz
js
push
stc
dec
fisttpll
and
ret
std
pop
inc
mov
loopne
repnz
inc
dec
leave
orb
cmp
pop
mov
ffree
or
cmc
jnp
inc
pop
pop
and
push
sbb
xchg
or
sbb
mov
in
and
ret
mov
pushf
aas
jo
xchg
dec
shlb
pop
push
fcoml
repz
cmp
and
aaa
or
nop
dec
test
jb
sub
cmp
iret
jmp
daa
xorl
out
push
pop
pop
mov
hlt
les
adc
adc
inc
int3
movsl
add
lock
pop
aaa
loopne
mov
pusha
jl
jno
iret
fistps
aam
daa
lret
push
inc
ljmp
jp
cmp
pop
stos
mov
ret
mov
jecxz
mov
push
sahf
shl
or
xlat
adc
and
daa
pop
fs
jg
in
xchg
ja
push
xlat
jns
xor
icebp
shll
popa
xor
jbe
jg
dec
pushf
add
xchg
inc
xor
cltd
imul
dec
mov
sbb
mov
sub
loop
or
aas
lea
xor
imul
scas
jmp
loope
lahf
fsubr
mov
aam
ret
and
int
add
sub
std
pop
jmp
loope
xor
mov
sahf
jne
sbb
mov
mov
dec
loope
in
out
test
fiadds
lods
pushf
or
push
jle
dec
lea
xchg
repz
jno
pusha
lds
push
sub
mov
push
xchg
mov
mul
or
das
cmp
cmp
cmc
inc
xorb
lcall
loopne
dec
ds
pop
push
cltd
sti
imul
pop
jno
out
scas
and
test
sarl
out
and
jecxz
cmpsb
pop
xchg
or
xor
lcall
pop
cld
icebp
xchg
mov
in
jae
inc
into
sbb
mov
push
mov
sbb
insb
andl
or
imul
and
mov
outsb
test
aaa
call
js
mov
mov
push
mov
sub
pop
or
mov
mov
xor
lea
mov
jnp
sub
das
mov
mov
ret
inc
in
cmp
or
and
ret
loope
xchg
mov
jo
jmp
test
mov
or
and
mov
rorb
xchg
mov
jecxz
out
add
cmp
aam
inc
enter
les
dec
test
shl
fwait
push
or
je
hlt
out
imul
xchg
subb
test
xchg
adc
lods
inc
insb
mov
shlb
dec
lcall
add
inc
pop
mov
scas
aaa
loopne
jno
aaa
push
idivl
xor
mov
jge
push
orl
pop
xchg
out
mov
js
insb
loop
sarl
scas
aam
lods
xchg
js
shlb
sub
pop
dec
or
outsl
movsb
lret
jle
xchg
imul
mov
mov
pop
add
sub
adc
dec
shl
je
lcall
sub
popf
sbbb
nop
fsubl
cmp
xchg
dec
ss
xchg
dec
clc
jmp
out
cltd
mov
mov
fstpt
and
push
mov
adc
mov
xor
adc
je
stc
repz
adc
xchg
lods
js
cli
or
bound
jnp
in
mov
fmull
mov
cli
inc
jnp
scas
inc
lea
xor
rorb
jbe
and
mov
andb
rorl
fldcw
add
push
push
stos
pop
pop
scas
shrb
clc
and
mov
mov
sub
push
cmp
push
push
mov
loopne
loop
jno
xor
cmp
movhps
cmp
adc
icebp
dec
and
xchg
push
mul
jle
imul
faddp
in
std
mov
cltd
loop
jp
dec
movsl
inc
cli
xlat
jb
mov
inc
push
jbe
rclb
push
xor
sarl
xlat
push
dec
xchg
mov
int3
jbe
sub
in
mov
test
pop
push
aaa
movsl
out
jg
pop
pushf
mov
sbb
push
sub
aaa
push
les
scas
jno
pop
arpl
dec
and
pop
add
jmp
fsubs
mov
fmull
hlt
adc
test
adc
fisttpll
lds
xchg
lret
jb
and
mov
push
and
push
mov
cmc
aaa
xchg
xchg
jge
icebp
pop
bound
adc
outsl
lcall
jo
lahf
sub
ret
std
bound
cmpsl
call
std
shl
enter
repz
adc
sbbl
les
ja
in
out
lods
mov
sbb
push
inc
sub
and
fsubl
adc
cmp
sbb
push
inc
lahf
jns
pop
xchg
push
dec
test
lock
jge
xchg
mov
pop
xor
or
outsb
ds
ljmp
pop
push
fs
mov
push
cltd
dec
fdivs
test
xchg
xor
xchg
pusha
push
fst
mov
popa
lods
dec
xor
push
and
sub
in
fimuls
mov
sahf
call
fistps
daa
std
jecxz
hlt
gs
adc
xor
dec
in
pop
dec
mov
xchg
into
lahf
pop
mov
pop
lcall
mov
push
fbld
ret
ret
mov
mov
sbb
mov
nop
outsl
dec
dec
jp
jno
dec
xchg
imul
cmp
mov
mov
add
jno
sti
xchg
gs
andl
add
dec
or
pop
pop
cs
adc
pop
test
imul
pop
cli
mov
out
insl
popa
in
push
cmc
push
or
xor
and
mov
popf
in
aam
loope
dec
in
push
rcrl
push
or
and
shll
ljmp
leave
ss
leave
ja
call
and
push
pop
mov
rcrl
ja
js
arpl
loope
mov
ror
push
inc
inc
inc
bnd
push
pop
out
cmpsb
popf
les
add
out
jb
divl
mov
loope
lret
out
cmpb
sub
into
jg
sti
sub
sub
jns
js
add
pop
xlat
imul
ret
mov
in
cmp
hlt
cmpsb
cmp
xchg
in
lcall
push
insl
adc
mov
lret
call
jae
dec
push
push
das
jns
stos
sbb
insl
pop
xor
fiadds
scas
add
out
or
fldcw
cld
nop
mov
jbe
dec
jne
popa
cmc
cmp
mov
test
push
jp
sub
pop
arpl
adc
ljmp
mov
sub
or
jb
in
pop
bound
cmpsl
ficoms
push
stc
mov
add
sar
nop
mov
je
fidivl
andl
dec
jle
pop
aas
adc
push
mov
outsl
inc
popf
in
ret
cli
add
push
add
dec
aam
fistps
jns
jle
inc
and
movsl
gs
mov
mov
and
xchg
out
pop
in
lock
aas
cmc
mov
orw
add
push
mov
in
int
lods
stos
or
adc
inc
jle
mov
ss
fidivs
mov
push
aad
sbb
mov
test
add
xchg
jp
mov
sub
sti
sbb
xchg
mov
int
ds
ds
pop
dec
psubsb
lea
loopew
cmp
dec
mov
mov
dec
enter
xor
xchg
faddl
inc
xor
outsl
pop
dec
add
jg
add
cwtl
mov
mov
loopne
xchg
fwait
lods
push
push
scas
lods
mov
mov
les
xchg
pop
and
sub
ret
sub
pop
maxps
xor
jns
pop
cld
andl
sbb
leave
pop
xchg
mov
jge
sub
aaa
push
cmp
mov
and
jp
mov
cmp
xchg
pop
mov
pusha
mov
mov
les
sub
popa
push
mov
lret
shlb
push
inc
xchg
push
cli
adc
push
in
sbbb
pop
cwtl
insl
pop
or
inc
cmp
fistpl
ficompl
inc
xor
jo
fldcw
pop
js
dec
push
pop
dec
int3
clc
arpl
loop
jl
sbb
mov
push
xor
movsb
and
xor
imul
mov
mov
cmp
xchg
pusha
cmpsb
stc
push
jb
sub
cs
xchg
mov
xchg
mov
or
or
loopne
dec
jae
xchg
adc
mov
dec
xor
adc
mov
lcall
xchg
loop
dec
repnz
mov
shl
mov
aas
shrb
imul
lret
add
lahf
sarl
xor
jl
jle
jbe
adc
push
xor
mov
fdivrs
stc
ret
and
movsb
push
stos
push
sub
sbb
shll
nop
out
push
or
jnp
sbbb
inc
daa
and
es
cmp
loop
ljmp
insb
incb
cmp
add
aas
push
dec
and
sahf
in
aad
pushf
jmp
inc
cmpsl
sahf
mov
pop
mov
jb
in
xor
lcall
cmp
jbe
das
rorb
cmp
cmpl
popa
push
shrb
pop
add
sub
pop
in
or
pop
imulb
fldt
sbb
xchg
jb
or
fs
daa
out
adc
and
stc
push
sub
jge
mov
fidivrs
fstpt
testb
cld
in
adc
sbb
das
mov
and
scas
pop
mov
call
cmc
les
mov
inc
roll
mov
je
add
ret
dec
pop
push
mov
mov
aas
bound
inc
dec
xchg
movsb
and
ret
pushl
sahf
mov
pop
lock
inc
sbb
iret
adc
shll
cli
mov
jmp
sti
mov
std
xchg
adc
pop
jnp
sbb
repnz
adc
fdivr
xchg
pop
sbb
inc
pop
xchg
fisubl
and
imul
loop
in
shl
movzbl
call
cmp
and
adc
repz
fmull
push
sub
push
adc
mov
sub
out
add
cltd
std
adc
inc
dec
inc
imul
addr16
cltd
rolb
push
pop
call
imul
pop
shl
lret
xor
out
adc
sub
std
pusha
mov
int
sub
mov
xchg
cwtl
push
jb
sub
sti
aam
xchg
push
loope
dec
jl
dec
sub
sbb
and
push
shll
xor
movsl
ret
out
xor
xlat
daa
lock
mov
stos
mov
cltd
adc
fstpl
cli
jo
sbb
pop
xchg
roll
iret
jnp
sbb
or
inc
outsl
jmp
push
loop
cmc
jp
pusha
sbb
adc
test
sub
enter
les
push
dec
jmp
inc
clc
fcmovne
adc
into
lods
or
push
dec
adc
push
adc
xlat
xor
mov
ss
dec
mov
sub
imul
clc
repnz
push
lods
jno
mov
fdivrp
loopne
negl
fcmovbe
imul
shlb
std
jbe
lods
dec
out
mull
jne
bound
fnstenv
xchg
pop
mov
in
repnz
and
testl
pop
pushf
call
lcall
shrb
cmp
xor
add
sbb
leave
inc
pop
into
pop
imul
inc
mov
clc
push
adc
or
test
aaa
or
sti
inc
adc
or
loop
sti
test
outsl
mov
and
popa
idivl
cmp
pop
cmpb
dec
sub
test
ja
cltd
sbb
sub
xor
incl
sbb
push
xchg
rolb
mov
mov
out
sbb
pop
jne
inc
fstpl
push
clc
adc
popf
rcrb
pop
add
mov
add
ljmp
push
hlt
cmp
stos
dec
jno
shlb
imul
incl
xchg
xor
addr16
and
push
adc
je
cmp
cmpsb
fbld
pop
movl
jmp
fs
mov
mov
add
xor
mov
icebp
notl
inc
lock
ret
push
fistps
cld
ret
imul
jp
adc
mov
push
jmp
pop
test
rol
mov
mov
dec
sbb
mov
sbb
test
sub
sbb
or
add
adc
bound
mov
das
sub
shll
pusha
adc
rclb
stos
enter
fnstcw
popf
dec
jne
xor
add
mov
mov
out
mov
ret
lds
inc
jmp
xor
inc
adc
out
rcrb
icebp
xchg
add
iret
dec
adc
adc
ret
or
mov
int3
mov
stc
mov
ret
push
mov
loope
mov
jmp
rcrb
or
pop
lret
out
ja
push
popa
es
out
test
test
fildll
fcmovbe
stos
cwtl
jno
xchg
mov
out
loop
jl
push
adc
cwtl
and
mov
sub
sub
inc
popf
xchg
js
jecxz
inc
xchg
dec
inc
ffree
cmc
cmp
or
js
xor
push
ret
sub
jmp
aam
inc
mov
xchg
sbb
cmc
test
cs
pop
adc
xchg
loopne
inc
and
imul
xchg
popf
nop
idiv
loope
mov
mov
inc
and
jo
repz
adc
adc
add
adc
iret
dec
adc
add
inc
icebp
cmp
dec
and
pop
mov
stos
dec
sbb
int3
and
jp
sbb
incl
test
les
je
xorb
bound
lods
daa
movsl
sbb
in
jnp
jge
xor
addb
scas
adc
push
mov
mov
inc
fmull
sbbb
test
xchg
addr16
dec
xchg
xchg
fcmovnbe
ror
mov
cmp
jmp
pop
out
shll
mov
push
lods
and
mov
outsl
outsl
sub
lcall
out
and
lods
in
dec
lcall
inc
ljmp
sbb
jl
adc
xchg
lcall
pop
subps
scas
mov
std
adc
xlat
cmpsb
cmp
out
fldln2
mov
or
bnd
leave
stc
pop
sti
push
bound
jge
mov
out
push
ljmp
notl
sbb
mov
jbe
loopne
test
shll
mov
sub
lods
test
fnsetpm(287
lret
in
pop
stos
push
ss
pop
ror
cmp
mov
push
jnp
rclb
lret
fsubrs
sbb
cli
pop
fistps
push
adc
dec
adc
sub
outsl
shl
xor
mov
addl
daa
call
sbb
push
inc
add
popf
idivl
icebp
rorl
shlb
and
or
dec
push
xchg
dec
and
sub
or
mov
pop
xor
mov
mov
fisubl
dec
outsl
adc
repz
jo
pop
bound
mov
sti
or
mov
cmpsb
mov
outsb
sar
xor
xchg
jb
in
mov
popf
mov
mov
cmpsb
jno
mov
insl
sub
loopne
icebp
push
lret
daa
fidivs
mov
je
jb
push
mov
cmpsb
xchg
xchg
or
and
movsb
and
mov
cli
cmpsl
pop
notb
adc
ret
jl
call
inc
into
push
xor
jecxz
mov
data16
les
movsl
cmpsb
imul
adcl
out
into
xor
mov
pop
or
mov
and
in
fs
or
ret
es
mov
dec
push
mov
bound
cmpb
fsubl
mov
imul
mov
or
andps
cmp
add
icebp
inc
insb
dec
enter
xor
pusha
mov
aam
cwtl
lret
out
pop
ret
stos
dec
loop
mov
adc
pop
icebp
inc
stc
inc
adcl
sti
sbb
bswap
fadds
push
push
mov
mov
data16
mov
xlat
loop
insl
xchg
add
fimuls
push
cmp
pusha
mov
movsb
push
stos
pop
add
loopne
xchg
pusha
push
inc
cld
aas
movsl
loopne
rorl
cmp
lods
jg
push
mov
push
out
test
adc
mov
int
fildl
mov
push
shlb
sub
call
push
pop
outsb
dec
cmp
mov
loop
pop
cmpsl
sbb
call
sub
jae
pop
fsubrs
and
mov
inc
dec
out
mov
je,pn
xorb
mov
loop
push
inc
sti
xlat
stos
xor
mov
and
push
adc
ficoms
mov
and
dec
loopne
xchg
inc
push
movsb
lret
pop
movsb
jb
mov
or
shl
push
and
leave
in
and
fimuls
inc
fucomp
cmpsl
sbb
fs
xor
lods
xor
jmp
xchg
shr
roll
aas
and
mov
xlat
fadds
and
or
shll
push
popf
mov
lods
pop
scas
xor
lods
movsb
xchg
dec
call
xor
push
jb
fcompp
int3
mov
inc
stos
xchg
sbb
aad
push
shrl
das
in
mov
ljmp
ret
push
ret
pop
cmp
jo
sahf
sbb
popa
test
add
dec
xchg
cmp
cmpsb
jae
movaps
int3
stc
jae
aaa
loop
mov
and
popf
mov
adc
push
ja
inc
stos
movsl
fisttpl
adc
fists
mov
insb
cmpsb
push
lret
push
lds
sti
adc
fnstsw
in
add
and
and
loopne
xchg
cli
inc
fisttpl
repnz
mov
mov
pop
shlb
mov
push
mov
daa
mov
cs
out
in
test
xchg
jecxz
inc
xor
sub
pop
jae
std
aad
add
arpl
dec
rclb
jo
lea
orl
iret
test
pusha
dec
scas
sub
sbbl
push
dec
cmp
xchg
repz
fdivs
xchg
imul
and
sub
daa
jb
pop
sarb
scas
adc
insl
lretw
ljmp
cmp
inc
roll
adc
dec
mov
push
mov
jmp
shll
cwtl
dec
jb
push
pop
loope
xor
cltd
lods
cli
cld
pop
push
jnp
mov
ja
ret
cmpsl
loopne
lret
adc
arpl
into
mov
xchg
cli
mov
inc
xor
mov
pop
mov
and
iret
jnp
xchg
mov
insb
pop
pop
inc
iret
shrb
icebp
xchg
out
pop
mov
sub
add
scas
xchg
mov
mov
mov
pop
dec
pushf
sub
call
cli
insl
jns
lods
dec
test
cmp
xchg
pop
inc
sub
leave
adc
mov
fdivl
mov
insb
push
sbb
pop
adc
xor
push
jp
rorl
mov
mov
lcall
int3
jns
movsb
and
into
je
insl
sar
inc
adc
in
pop
mov
pusha
lret
xor
inc
inc
sbb
jns
sbb
inc
sbb
pop
iret
bound
imull
dec
mov
jae
inc
cmp
sbb
jno
fucomp
jns
and
loopne
test
or
fs
sbb
sbb
movsl
rorb
dec
cwtl
call
stos
dec
and
lds
mov
cmpsb
je
mov
inc
addb
mov
sub
adc
stos
adcb
inc
jg
sahf
xchg
cmpsb
cbtw
test
sub
push
mov
xor
mov
adc
push
call
mov
mov
out
cmp
daa
pop
js
adc
cs
or
hlt
cmp
sti
jnp
pop
xchg
rolb
in
mov
out
pop
push
jl
arpl
or
ja
add
out
aam
in
inc
gs
dec
inc
inc
xlat
stos
and
aad
dec
add
ljmp
adc
mov
pop
jbe
aad
mov
cmp
sbb
xor
pop
outsb
roll
mov
std
jg
gs
aad
adc
dec
repz
mov
push
mov
sbb
dec
shlb
sub
sbb
xor
xchg
and
inc
outsl
xor
fists
lods
sbb
in
inc
jo
inc
or
movsb
xchg
pop
sub
jnp
pop
jg
popa
mov
xor
aas
fdiv
fisttpll
shl
and
or
mov
enter
xor
insl
dec
pop
lods
andb
lcall
shrb
jae
xlat
xchg
insl
mov
fcomip
pushf
inc
sub
sbb
adc
out
and
imul
push
lret
cmp
xor
jo
mov
push
add
dec
data16
icebp
dec
and
repz
fiadds
pop
push
jo
cmp
or
aas
repnz
lahf
inc
pop
aas
nop
push
aad
jle
mov
adc
dec
push
jp
mov
fdivl
int
fdivl
and
lret
lods
xor
pop
add
pop
in
ljmp
adc
aaa
xchg
fisttpll
sbb
subl
jp
cmp
inc
inc
adc
sahf
ret
fcmovb
sbbl
imul
lcall
xchg
sbb
cmp
or
mov
mov
xchg
hlt
bound
in
fdivrl
adc
pusha
das
mov
or
test
stos
notb
lods
pop
adc
adc
cwtl
mov
cltd
bnd
popa
shll
gs
clc
mov
ret
xchg
leave
pop
jno
inc
sub
subl
pop
xchg
lea
dec
rorl
or
lods
iret
cmp
test
scas
jbe
rclb
fdivrs
verw
xchg
lret
repz
es
dec
xchg
aad
lahf
sbb
jge
pop
iret
out
adc
loopne
test
ret
es
dec
and
movsb
jne
lcall
ljmp
ja
lcall
mov
sti
mov
mov
push
icebp
pop
adc
in
mov
mov
jno
push
enter
sub
in
or
ja
js
gs
hlt
push
mov
sub
xchg
or
ljmp
hlt
out
dec
inc
outsb
pop
frstor
jmp
fmul
adc
mov
aas
dec
xor
ret
cmp
xchg
aas
push
imull
push
fs
pusha
mov
mov
sub
movzwl
das
lods
aaa
dec
in
test
inc
sub
dec
push
aad
negl
xor
xchg
push
dec
mov
shlb
mov
gs
push
mov
sub
test
ljmp
jae
sbb
cmp
ds
stos
add
jle
andb
out
addr16
push
mov
dec
mov
shll
adc
sub
xchg
or
jle
repnz
or
inc
dec
lcall
lea
dec
outsb
xchg
jne
add
xchg
dec
das
cwtl
aaa
adc
lds
sti
fnsave
shrl
movsl
data16
ljmp
sti
imul
icebp
lret
sbbb
ror
mov
dec
fistl
xor
sbb
ret
in
sub
push
push
mov
nop
cmpsb
sub
loop
mov
mov
fidivrs
scas
test
ljmp
fdivs
or
add
xor
add
insb
push
out
cltd
sahf
subb
imul
and
push
movsl
push
sbb
mov
or
sub
sub
fisubrs
mov
mov
cmp
cld
sub
or
in
ret
pop
xor
push
cmp
ret
or
mov
lds
fs
sbb
ljmp
enter
adc
mull
cmc
xchg
sbb
enter
scas
and
cs
jecxz
fimull
mov
jl
push
in
test
and
arpl
int3
jecxz
xchg
in
mov
mov
mov
gs
cwtl
lods
andl
sub
lret
xchg
ljmp
ds
sbb
mov
arpl
mov
inc
imul
xor
mov
sub
jge
mov
adc
mov
adcl
lods
add
cmp
hlt
mov
rolb
mov
and
and
inc
mov
sub
cs
lcall
jp
aaa
dec
adc
cmpsl
xor
or
xchg
pop
fdivs
scas
ret
ljmp
push
jp
movsl
sahf
test
fwait
scas
das
cmp
sub
sub
and
mov
and
cwtl
in
lock
dec
xor
sti
pop
inc
filds
aad
mov
inc
push
jecxz
dec
mov
test
dec
mov
cmp
sub
cmp
push
push
jecxz
and
divl
adc
pusha
push
xor
stos
call
lahf
pop
stc
push
add
pop
or
add
push
cwtl
or
shrl
add
pop
push
mov
test
inc
xor
mov
aam
and
std
lock
cmp
out
xchg
fwait
fs
fs
fcoml
mov
neg
add
jmp
repnz
or
xchg
icebp
jp
imul
push
adc
pop
cmp
mov
outsb
repnz
fsub
lods
mov
push
xchg
stc
fistps
mov
test
inc
in
dec
pop
ds
cwtl
mov
jle
xchg
and
arpl
sbb
aas
std
imul
add
hlt
jnp
adc
dec
test
fiaddl
fdiv
adc
push
adc
mov
test
mov
sub
lret
and
add
shrb
dec
lret
push
stc
mov
sub
das
pop
sarl
push
jae
leave
mov
bound
lret
pop
xchg
dec
adc
inc
pusha
insl
clc
out
jb
sub
lods
sbb
movsb
imul
fisubs
popf
inc
push
sbb
mov
sbbl
cltd
jmp
xor
in
mov
push
adc
dec
sbb
out
xor
pusha
mov
les
push
scas
cmp
fs
cmp
inc
imul
addl
adc
xor
shll
movsl
push
and
sub
or
push
inc
pop
aas
xor
ret
and
xchg
and
push
inc
lods
xrelease
inc
std
cmp
pushw
xor
mov
xchg
sbb
cmpsb
or
mov
movsl
jle
jno
pop
lea
and
cld
and
icebp
test
adc
es
mov
addr16
outsb
test
mov
cmp
xor
sbb
mov
mov
mov
out
xchg
pushf
ljmp
xor
idivl
jecxz
push
bound
jns
xlat
jno
ss
and
sti
in
add
mov
add
cmp
mov
push
mov
push
ss
dec
jp
clc
lds
rolb
xchg
cmp
cmp
dec
sar
pop
and
rclb
rcr
push
aaa
fadds
jb
adc
jne
inc
movsb
dec
dec
pop
es
add
inc
stos
jns
inc
sub
cwtl
inc
test
pop
jbe
cltd
xchg
nop
fucomp
mov
ss
fwait
js
push
xchg
xchg
dec
push
and
mov
mov
add
dec
mov
test
push
lods
leave
sbb
adc
mov
add
cltd
mov
mov
push
lcall
mov
mov
mov
pop
je
fisttpll
mov
fbstp
xchg
aad
cmp
jmp
push
sub
mov
jb
jo
iret
jle
mov
push
js
out
popf
mov
jns
and
mov
cmp
jno
and
out
push
adc
push
in
test
mov
sub
dec
sub
mov
adc
adc
xlat
xchg
pop
sub
repnz
jmp
adc
stos
repnz
adc
pop
lret
nop
inc
cld
and
movsb
push
dec
pop
pop
push
mov
sti
ret
popa
sub
cmp
int3
sbb
mov
and
mov
outsl
pop
fwait
jae
pushf
dec
jl
xchg
imul
sub
add
enter
jg
push
imul
cmp
push
into
fwait
int
dec
aaa
jnp
dec
std
icebp
pop
or
pop
loope
cmpsb
push
mov
sub
lds
mov
out
lds
ret
push
insb
aas
mov
sahf
pop
cmp
mov
xchg
mov
test
xor
mov
add
cs
xlat
outsl
shr
cltd
out
push
sahf
aas
mov
cmpsl
push
pminsw
xchg
mov
mov
mov
das
inc
cs
ret
jl
sti
aas
out
mov
jae
push
add
call
jle
jns
lcall
inc
in
in
sub
cmp
dec
xlat
mov
or
cwtl
subb
mov
fiaddl
mov
js
push
pusha
stc
and
and
mov
and
js
xchg
movsl
mov
mov
sub
xchg
push
incl
ds
scas
fstps
or
fdivl
mov
in
jo
mov
xor
xchg
pusha
inc
mov
in
add
dec
dec
mov
pop
fs
push
xchg
push
clc
push
nop
ret
lods
cmc
fnstenv
jge
inc
je
bound
dec
nop
sbb
adc
add
mov
cltd
sbb
and
xor
rorb
xor
sub
adc
fsubrl
mov
lret
call
or
sub
xchg
pop
mov
pop
aaa
add
cmc
cmp
shll
rolb
insb
enter
lock
imull
mov
out
rcrb
inc
mov
xor
stc
cmp
or
mov
push
int3
jle
fs
xchg
insb
mov
sub
xor
call
adc
jp
fcoms
sub
test
or
pcmpgtd
sarl
adc
ja
cltd
lea
mov
pop
vpsubd
ret
ret
test
pop
or
push
mov
jp
sbb
addr16
repz
pop
inc
mov
jle,pn
pop
out
dec
flds
and
jmp
ja
test
ret
test
cltd
and
xchg
sbb
push
jle
mulb
mull
call
adc
inc
aas
dec
dec
mov
adc
or
jns
xor
iret
jne
rolb
add
ret
jl
jns
in
add
scas
dec
mov
mov
imul
sbb
int
jns
or
lret
jns
pushf
jne
mov
arpl
push
std
iret
in
dec
pop
push
push
cli
or
pop
push
cmpsb
xor
imul
cs
scas
push
inc
lret
adc
push
lock
fildll
vmread
dec
xor
adc
or
push
fcompl
jae
outsb
aad
shrb
test
pop
ret
dec
cmp
jl
scas
sub
in
pop
mov
aad
stos
mov
xchg
push
mov
ja
mov
lods
testb
push
test
add
f2xm1
inc
inc
mov
fwait
mov
in
mov
arpl
orb
scas
test
loopne
ss
lods
pop
data16
test
add
adc
int3
iret
jg
jle
adc
xchg
fisubrs
test
pop
xchg
pop
fmull
cli
push
lds
iret
ds
mov
imul
bound
insl
xchg
mov
dec
push
ds
push
cmc
adc
test
pop
mov
and
js
lret
icebp
sbb
in
insl
and
mov
stc
js
cmp
frstor
rclb
cmc
or
sbb
mov
xor
xchg
add
mov
dec
js
xorb
pop
xor
cmpsl
and
inc
push
mov
inc
adc
mov
outsb
mov
mov
mov
sub
dec
add
ja
add
xchg
outsl
push
test
js
jnp
adc
repz
xor
pop
mov
mov
pop
push
out
bound
ljmp
outsb
pop
or
or
pmulhuw
add
scas
call
out
sub
xlat
add
cld
je
adc
inc
loopne
scas
pop
sbb
xlat
mov
pop
dec
pop
gs
add
pop
and
mov
or
movl
or
add
ljmp
pop
xchg
inc
push
and
test
xlat
add
testl
sbb
aad
sbb
rorl
outsb
das
xchg
ja
and
in
dec
imul
cmp
mov
test
test
fnstsw
sbb
movsl
scas
mov
sub
adc
les
aad
jle
gs
int3
or
aaa
clc
addr16
popa
push
arpl
sub
ret
in
jnp
mov
fistpll
sti
cltd
xchg
mov
test
out
mov
test
sbb
add
mov
jne
add
std
movnti
jmp
movsl
addl
out
sub
pop
mov
sub
sub
mov
stos
add
push
shll
popf
rol
cld
ret
fsubl
push
fisubrl
lock
xor
aaa
filds
sub
lods
xor
or
pushf
lea
mov
cmp
repz
push
jb
mov
mov
cmpsl
das
mov
jne
mov
mov
xor
mov
int3
movsb
adcb
and
fdivl
cmp
lock
xchg
in
push
inc
inc
jle
hlt
insl
call
clc
in
or
push
mov
cmpsl
sub
sub
jp
lcall
add
ss
jns
sub
sarb
or
out
pop
stc
pop
add
cld
mov
xchg
jmp
out
fstl
jb
cmp
add
iret
adc
jnp
inc
adc
cli
sbb
mov
aas
ds
in
scas
sar
xchg
js
ss
pop
push
outsl
dec
movsl
rcrb
in
pusha
pusha
inc
repz
rorl
push
mov
sub
lret
test
out
or
mov
fisubs
call
ja
mov
lds
mov
test
fadds
leave
popf
in
movsl
out
fcoml
loopew
add
inc
or
and
sarb
leave
jno
outsl
push
testl
das
xor
pushf
js
xchg
mov
cmp
xchg
sbb
pop
jae
xor
sbb
pop
xchg
ds
repz
movsb
lods
repz
ss
out
bswap
xor
out
sub
inc
or
repnz
out
dec
stc
pushf
clc
in
aaa
ja
test
cmpb
out
pop
movsl
int3
adc
mov
leave
sti
xchg
push
pusha
push
jp
cmp
bound
inc
sti
jne
jnp
add
inc
and
fwait
in
add
xor
mov
lods
add
inc
mov
mov
adc
and
mov
or
out
dec
lea
jns
mov
xlat
jmp
test
out
xchg
add
movsb
cmp
ds
idivb
mov
adc
outsl
ficoml
xchg
sbb
inc
add
mov
icebp
jge
cmp
sbb
shl
jmp
lret
iret
push
sahf
inc
les
push
cmp
les
push
dec
add
insb
cmp
sbb
mov
adc
mov
aas
outsb
clc
in
into
mov
outsl
pop
cld
es
movsl
shlb
and
push
pop
cld
or
dec
jl
sarb
hlt
push
mov
xchg
jno
dec
mov
lret
lret
loopne
add
nop
lds
data16
test
aaa
inc
dec
cld
imul
xor
popw
push
fiaddl
test
lret
pusha
xchg
push
jns
cmc
dec
lret
aas
rcll
sbb
mov
int3
mov
sub
mov
jle
cltd
mov
push
dec
mov
fwait
lock
aaa
sti
imul
push
je
xchg
xor
mov
pop
xchg
subl
testl
lahf
jl
cmp
mov
push
daa
xor
ss
cwtl
jmp
icebp
mov
or
push
push
es
movl
ss
xchg
aam
cmpsb
daa
xchg
add
cs
jno
jl
rorb
repz
push
xchg
adc
leave
jge
jl
stos
and
outsb
push
dec
mov
dec
inc
aad
inc
and
std
jns
and
inc
xsaves
pop
cs
stc
das
mov
xchg
jae
pop
xchg
insb
ret
ret
in
add
lret
pushf
mull
js
lahf
xlat
addr16
sub
scas
ret
mov
imull
or
mov
stos
mov
cmp
push
std
fidivl
scas
arpl
mov
in
mov
sub
test
dec
hlt
sti
cmp
arpl
stos
mov
repnz
sbb
cmpsl
inc
mov
jp
mov
lcall
pop
imul
add
shr
pop
sarb
mov
sbb
loopne
cmp
inc
inc
ljmp
add
popa
fcoml
cmp
mov
push
mov
repz
test
and
adc
adc
push
aad
mov
in
shrb
ficompl
out
dec
jno
xor
gs
js
mov
int
jne
cmpsb
roll
push
inc
push
push
scas
cmp
mov
jp
sub
and
gs
jo
pop
dec
enter
test
mov
push
fldcw
testl
ss
push
mov
xor
neg
int3
mov
add
xchg
jg
mov
pop
fistps
sbb
cmp
cmpsb
mov
shrl
sub
jge
xchg
lods
xchg
mov
in
cmpsl
repnz
repz
fildll
cmp
psubsb
aad
insl
mov
mov
jno
jl
xchg
xchg
adc
ljmp
ja
aaa
call
aad
fisttpl
mov
imul
xchg
push
mov
xor
xchg
mov
lods
stc
pushf
xor
jnp
push
sbb
mov
lods
divb
push
xchg
lahf
test
out
shlb
sub
aas
cmp
hlt
mov
andb
push
incl
inc
jg
push
add
test
call
dec
cmpsl
xchg
mov
roll
orb
out
cmp
push
ljmp
jo
jp
popl
or
xor
mov
popa
adc
leave
pop
mov
lcall
or
adc
mov
fcompl
push
enter
dec
cmp
dec
pushf
out
cli
data16
pushf
inc
lahf
insb
mov
pop
jmp
push
lret
and
stos
rcll
fwait
cmpsb
stos
sbb
loope
pop
mov
js
imul
inc
add
mov
test
jnp
insb
push
lcall
inc
gs
std
std
or
mov
inc
test
push
test
roll
xor
mov
pop
sbb
popa
js
cwtl
sub
and
jge
mov
das
movd
loope
test
inc
jmp
lret
fwait
or
lahf
fistps
popf
int
push
sub
insl
arpl
lock
negb
out
xchg
add
xchg
cmc
int3
xor
xor
cmp
push
and
xchg
adc
pushf
stos
pop
aad
enter
push
xchg
scas
fcom
adc
xor
cmp
out
pop
push
sbb
dec
mov
test
xorl
mov
sub
cmp
cmc
loopne
push
iret
mov
jl
xlat
jmp
rorl
push
sbb
int3
fisttpl
sbb
lret
xchg
lahf
and
cmp
xor
or
push
and
lcall
adc
sbb
lea
push
loop
movsb
jmp
sbbb
in
jge
fbstp
jne
dec
adc
xor
std
push
shll
in
roll
cli
mov
adc
mov
and
xor
push
sbb
push
fucomip
lcall
std
lret
sub
outsl
ds
add
sbb
lea
ja
rcll
shrl
int
and
jecxz
mov
loopne
pop
cmpsb
xchg
outsl
pop
mov
jne
pop
push
and
mov
add
pushf
aas
shl
lret
cmp
scas
adc
jne
jo
fisubl
mov
push
xchg
test
stos
xor
or
add
cwtl
out
push
lea
mov
shlb
mov
test
cltd
sbb
push
sub
in
jl
xor
in
loope
fadds
scas
aad
in
jb
cmp
mov
bound
icebp
xor
add
js
sbb
loope
pusha
and
mov
imul
popf
popa
and
sti
push
push
jmp
movsl
mov
jle
cmp
into
pop
js
pop
ror
imul
insl
adc
daa
ss
pop
rcrl
sub
pop
stos
xor
jl
jbe
xchg
decl
nop
insl
cmc
sti
scas
jbe
adc
out
dec
pop
jns
xchg
nopl
out
clc
in
adc
bound
inc
mov
push
xorb
dec
fcmove
mov
dec
pop
fisttps
cltd
enter
sub
fstl
out
aad
lret
pusha
int
movsb
mov
scas
sbb
sti
adc
jmp
pushf
mov
jecxz
adc
sti
xor
push
imul
xchg
cmpsl
in
jle
sub
jnp
popf
dec
jo
mov
ror
loopne
mov
push
pop
inc
in
adc
leave
push
xor
push
lods
push
mov
jnp
sub
enter
in
adc
push
lret
xchg
movsl
and
cmp
and
clc
pop
and
adc
push
gs
add
add
fimuls
in
cmp
aaa
pop
add
pop
inc
hlt
cmp
push
repnz
pop
inc
cmp
lret
out
out
cmc
ljmp
adc
mov
jbe
test
adc
mov
mov
movsb
cmpsb
push
lods
adc
sbb
call
sub
sbbb
xchg
push
mov
and
test
imul
adc
lcall
add
ret
xor
mov
repz
imul
jb
xor
jecxz
dec
and
or
cmpsb
dec
ret
lcall
or
mov
mov
mov
sub
inc
mov
lret
jg
fcomp
clc
mov
mov
shll
push
cmc
outsl
nop
sub
pop
out
sub
test
dec
nop
roll
out
adc
popf
mov
fdiv
jecxz
sahf
push
xor
sbb
in
das
movb
outsl
push
js
loope
repnz
or
and
mov
stos
add
sar
jns
sub
jg
sti
jg
pop
sbb
push
pop
jb
or
loop
dec
arpl
repz
jbe
jae
mov
mov
aad
movsb
add
xor
push
insl
sub
inc
add
or
lret
lods
dec
sub
push
outsb
into
es
sbb
jbe
sbb
pushf
cmp
stc
adc
fstpt
sbb
mov
and
xchg
sbb
iret
jne
or
cld
shlb
jb
filds
jmp
fidivl
xchg
imul
xchg
rclb
adc
jmp
in
out
push
mov
mov
or
imul
push
sbb
test
in
push
ret
test
mov
xchg
ror
jbe
push
push
clc
pop
data16
stos
pop
into
fs
push
pop
sbb
xchg
mov
dec
out
outsl
scas
push
loopne
inc
jbe
cmp
jbe
imul
mov
fidivl
bound
movsl
je
icebp
add
iret
and
pop
rol
cmp
dec
icebp
jge
dec
mov
and
push
ljmp
fldl
inc
sbb
lods
aad
xorb
xchg
push
cs
dec
xlat
scas
loop
nop
aaa
outsb
inc
jle
xor
lods
inc
pusha
jnp
or
push
daa
lcallw
xor
jmp
xorb
cmc
imul
mov
pop
or
mov
or
lods
sub
adc
rcrb
cmp
jno
adc
imul
nop
js
xor
jno
dec
imul
xchg
sbb
aas
sar
test
cmp
leave
into
adc
and
cmp
test
adcl
ja
mov
xchg
icebp
inc
out
clc
sbb
mov
scas
or
dec
mov
loopne
xor
test
cmp
shll
pop
and
shlb
xlat
mov
inc
inc
stc
stos
test
mov
jle
jl
jge
lahf
repnz
and
loop
dec
mov
ds
rol
mov
push
sub
popa
or
pop
cwtl
les
and
mov
add
lods
xor
insb
les
imul
neg
inc
jnp
ss
std
je,pn
pop
inc
es
out
cmpsl
icebp
inc
adc
popf
pop
scas
popf
push
popa
shlb
es
aad
fsubp
xchg
js
sbb
fidivl
das
loopne
sahf
mov
loopne
jbe
insb
leave
outsl
cmc
and
test
xlat
fidivrl
pop
test
mov
xor
das
sbb
inc
xor
int3
push
fldt
inc
xlat
jae
in
fcoms
popa
aaa
dec
shlb
lea
test
aas
fldenv
decl
mov
push
cmp
js
test
mov
ret
dec
pop
fsubl
sbb
cmp
lods
push
and
push
iret
or
sbb
mov
xor
movsb
and
aam
gs
ljmp
dec
push
popf
lahf
or
stos
test
mov
mov
cmp
pushf
jmp
sbb
jge
sub
and
std
and
fsubrp
stc
cmp
jl
cmpsb
sbb
and
push
repz
cli
pop
sub
and
movsb
or
xchg
enter
aam
fisubl
pop
adc
lds
jns
iret
cmp
mov
xchg
out
xchg
movsl
push
sub
dec
mull
aas
notb
jg
jae
add
cmpsl
push
nop
or
addr16
push
repnz
mov
push
mov
mov
adc
rcll
loope
sbb
inc
movsl
cwtl
push
mov
ret
pop
mov
or
xlat
inc
out
pop
jbe
clc
psubsb
fwait
and
popa
xor
into
lods
lods
push
xchg
iret
popa
clc
in
or
push
fwait
shll
les
scas
sub
jb
pop
insb
xor
data16
and
fadd
rclb
mov
cs
and
mov
or
push
ret
mov
shll
pop
lods
sarb
es
xchg
js
mov
add
add
mov
cs
jae
and
or
jb
xchg
mov
popa
call
inc
dec
dec
mov
mov
cmp
movsb
jne
bound
loop
data16
push
movsb
cs
std
mov
adc
test
je
in
or
lods
notb
jle
aaa
js
insb
adc
lock
jo
test
pop
adc
mov
mov
inc
int
aam
cmpsl
sbb
mov
mov
sbbl
rorl
mov
sti
lahf
test
sti
stos
sarb
incb
imul
fsubrl
mov
pop
insl
leave
xchg
scas
pop
push
insl
cmp
insl
cli
stos
pop
fwait
insb
in
jns
out
xchg
test
and
out
mov
pop
inc
xor
adc
mov
pop
adc
jg
loopne
shrl
xchg
dec
loope
push
add
push
mov
insb
mov
lock
decl
jbe
stos
mov
aam
fucom
testb
mov
mov
clc
add
pop
ja
mov
lea
mov
mov
jmp
rcll
fdivrl
insb
xor
scas
xchg
out
sahf
mov
scas
jecxz
or
iret
xorb
nop
test
std
dec
pusha
add
lods
mov
outsb
mov
jb
es
addb
pop
in
mov
dec
add
mov
nop
mov
loopne
mov
sbb
dec
pop
testl
fisubl
in
fbstp
mov
pop
xor
add
add
pop
subb
ds
or
inc
dec
mov
outsb
and
mov
stos
pushf
push
push
dec
cmp
xchg
xchg
xchg
add
neg
mov
lret
addr16
mov
hlt
and
orl
cwtl
xchg
xor
mov
inc
insl
mov
call
mov
cmpsb
adc
mov
in
add
insb
pop
repz
xor
cmp
cmc
fidivl
sbb
mov
add
adc
jg
dec
jbe
ds
cmp
and
push
pop
shl
inc
cmp
xor
fsubrl
test
mov
ds
jle
les
testl
cmp
es
imul
mov
scas
pop
sbb
lret
jl
push
rcrb
inc
or
mov
or
jl
adc
cmc
dec
stc
adc
xor
hlt
and
or
xor
cmp
shll
lahf
cmpsb
add
jmp
mov
pop
pop
mov
cmp
and
mov
mov
and
test
or
add
mov
sbb
mulb
sub
pop
test
stos
xor
lods
push
idivb
xlat
inc
and
into
mov
sub
and
sbbl
outsl
leave
outsb
stos
xchg
cmp
sbb
mov
ss
mov
sahf
xchg
cltd
add
test
mov
bound
lcall
add
cwtl
inc
sub
pop
cmp
imul
notb
push
testb
cmpsb
mov
ja
dec
dec
mov
push
loopne
jl
aad
shr
pop
outsb
repz
push
and
popa
push
xor
mov
push
clc
and
and
shll
aaa
std
xor
mov
sbb
les
enter
inc
push
mulb
rclb
into
xor
push
int3
leave
dec
and
xchg
dec
icebp
mov
out
stos
mov
dec
sahf
adc
popf
and
jbe
sub
sub
dec
jg
clc
aad
jmp
sub
daa
sbb
push
jecxz
in
and
push
cmpsb
sub
cld
xchg
adc
mov
in
cmpb
push
mov
jp
pop
or
stos
xorl
jno
adc
mov
mov
push
add
inc
push
push
jnp
imul
mov
divb
movsb
cmp
outsl
fsub
insb
xlat
mov
mov
in
stos
inc
adc
cltd
mov
adc
inc
sbb
inc
inc
call
insl
movsb
aad
jae
inc
aam
aad
mov
and
scas
cmp
insl
icebp
pop
cs
int3
xchg
sbb
inc
push
push
into
shll
sbb
push
xor
fcomi
mov
inc
test
lea
cmpsl
xchg
std
sbb
int
loopne
pushf
cmp
lret
push
or
adc
pop
inc
xchg
insl
sbb
popf
out
push
test
lock
mov
popa
cmp
pop
mov
jmp
and
mov
dec
mov
popf
or
jmp
push
fnstenv
xorb
js
xchg
shl
repz
cld
shll
sub
lret
adc
inc
bound
pop
jmp
ret
xchg
sbb
sbb
inc
adc
dec
sub
inc
mov
out
cmp
add
movsl
jecxz
fs
fisttpl
xor
mov
and
ljmp
stos
shl
mov
mov
adc
popa
xor
movsl
inc
cmp
push
cltd
gs
cmovp
in
in
adc
xorl
insb
add
cmp
jmp
ja
cmp
xchg
or
and
xor
mov
shll
inc
fsubrl
mov
dec
jno
sbb
ja
out
fiadds
mov
loopne
jb
mov
sub
insb
xchg
adc
mov
xchg
jmp
outsb
cmp
mov
rorb
adc
repnz
and
inc
push
push
addr16
lea
mov
push
adc
icebp
mov
das
or
inc
adc
mov
xlat
inc
loope
cmp
sbb
inc
lock
stos
out
fs
pop
imul
add
dec
outsl
stos
push
jne
xchg
sub
jo
dec
in
imul
jmp
push
sbb
adc
loopne
out
in
jb
cmpl
or
jbe
xchg
inc
sbb
ret
inc
das
sbbb
jmp
dec
or
shll
iret
push
and
xchg
or
mov
int3
adc
mov
xchg
negl
scas
xor
xor
xchg
loop
cmpb
mov
push
dec
xor
arpl
xor
stos
icebp
dec
not
arpl
sub
mov
dec
or
arpl
or
pusha
push
test
xchg
cmc
icebp
cmp
inc
adc
sbb
dec
pop
push
xlat
fnstenv
xor
inc
int3
cli
cld
mov
lret
mov
pop
mov
es
fnstcw
in
push
sti
xchg
imul
repnz
cltd
adc
nop
xor
sub
in
or
mov
mov
pop
scas
xor
pop
jns
popf
pop
adc
das
outsl
mov
adc
mov
inc
sub
sahf
in
xorl
adc
adc
lahf
les
popa
test
xchg
das
lock
cmp
stos
mov
xor
subb
jmp
push
repnz
inc
mov
jbe
in
cmc
in
mov
stos
adc
dec
jmp
insb
pop
fstp
mov
ret
repnz
xchg
into
pop
mov
loopne
cli
cmp
lea
and
sub
xchg
dec
inc
xchg
push
push
repz
mov
mov
aas
xchg
ror
xor
ss
pop
jecxz
cmp
shll
nop
mov
nop
and
pop
lret
outsb
sub
push
lret
jb
loope
and
dec
popa
in
jb
jl
aaa
cmp
inc
pop
push
dec
out
mov
arpl
cmpsl
out
push
xor
hlt
inc
repnz
cmp
insl
movsb
push
test
inc
dec
inc
mov
ret
and
dec
pop
mov
imul
call
mov
sbb
mov
pop
xorl
jl
sub
sbb
out
test
fdivrs
test
jmp
ret
mov
scas
fwait
jae
jo
jae
mov
dec
and
jge
sub
lods
rorl
inc
pop
lcall
sbb
decl
into
inc
mov
jae
loop
cmp
mov
rcll
push
push
cmp
aas
test
clc
add
or
dec
incb
lahf
mov
incb
adc
iret
and
sahf
pop
dec
and
xchg
dec
sbb
orl
iret
push
leave
fiaddl
fmull
inc
cmc
and
pop
jmp
sub
ss
sarl
adc
repnz
sbb
add
mov
pop
mov
test
outsb
inc
xchg
test
addl
xchg
fildl
sahf
enter
mov
and
sahf
push
lods
push
jl
sub
ljmp
call
loopne
jo
lods
out
mov
and
add
out
repnz
insb
add
dec
jmp
push
sub
loope
loope
cmpsl
mov
das
fisttps
stos
cltd
push
mov
and
out
inc
sub
inc
sbb
mov
jno
std
or
xchg
mov
lahf
sbb
nop
mov
sub
bnd
fabs
mov
arpl
lods
in
sti
mov
add
sbb
mulb
inc
jo
or
loope
int3
sub
ret
mov
add
bound
outsb
aad
mov
inc
pusha
cmp
test
inc
shrl
pop
jg
or
out
inc
in
out
pop
and
repz
jo
fidivl
popa
inc
or
and
jbe
dec
faddl
pop
in
add
movsl
scas
or
into
jnp
rcl
adc
or
mov
mov
ret
xor
cwtl
stos
bound
pop
mov
imul
add
cmpb
pop
jmp
mov
lret
pop
addr16
add
fmull
rcrb
add
inc
aad
xor
int3
jp
sti
test
fildl
ret
sbb
mov
jmp
cltd
into
nop
sbb
jmp
repnz
mov
out
mov
in
pop
lods
add
scas
inc
or
xchg
pop
clc
imul
inc
nop
sub
push
out
stos
xor
mov
into
mov
mov
sub
dec
lods
pop
mov
sub
call
add
rcl
add
dec
push
leave
mov
lcall
and
add
divl
and
add
push
and
push
push
pop
jge
cltd
loope
or
iret
punpcklbw
push
mov
in
scas
lret
bound
les
stos
add
sahf
fiaddl
stos
shll
push
sahf
xchg
cmc
add
aam
stos
lods
rolb
test
adc
je
dec
lods
mov
je
out
pop
imulb
or
wrssd
repnz
das
mov
sbb
sahf
jmp
push
mov
sbb
push
ja
filds
pop
lahf
cmp
cmpsl
dec
not
pop
gs
test
add
adc
nop
lret
nop
pop
xor
fisubrl
mov
repnz
mov
lcall
and
in
cmpsb
lahf
cmp
jae
mov
or
xor
jmp
icebp
sbb
mov
jns
or
mov
pop
xor
sbb
jno
adc
idivb
mov
cwtl
cmc
jl
std
inc
pusha
pop
dec
cmpsl
dec
sbb
xor
push
lods
inc
add
push
jns
test
mov
dec
call
jmp
arpl
push
cmc
call
int3
and
dec
nop
lahf
loopne
mov
pop
xchg
or
data16
std
addl
mov
mov
xor
dec
fwait
les
jno
jg
aas
sub
in
aaa
repnz
inc
and
mov
jno
scas
inc
sbbl
inc
js
jo
pop
stos
cli
stos
jp
lock
ss
push
mov
cmpl
adc
test
insl
cmp
adc
pop
push
dec
cltd
push
xchg
mov
shlb
into
call
stos
push
mov
rcll
in
jo
sbb
dec
dec
arpl
adc
xor
fisubrs
mov
dec
lds
loope
hlt
pushf
movntq
adc
jmp
shl
loope
jl
lea
int
xor
aam
xchg
cmp
cltd
out
pop
imul
shl
push
xor
push
mov
mov
cmp
jecxz
add
es
cld
divl
pop
pushf
lcall
mov
imul
xlat
shr
jge
pop
jg
jno
mov
xor
dec
xchg
roll
sub
push
mov
iret
in
rcr
ss
fisubs
sahf
stc
or
or
ror
add
and
mul
cld
adcb
bound
int3
mov
es
test
movsb
sbb
xchg
xchg
mov
jp
rclb
cld
loop
sbb
sbb
xchg
data16
pushf
fsubl
sbb
pop
mov
nop
test
pop
test
pop
loop
icebp
pop
test
test
push
push
jle
cwtl
ret
dec
out
divb
scas
aas
or
aaa
push
xor
ftst
mov
shlb
test
test
mov
adc
mov
dec
sbb
ficomps
insl
test
sbbl
fildl
mov
or
sub
dec
and
pushf
adc
cmp
mov
scas
jp
mov
inc
inc
in
in
mov
push
test
cmpb
and
jp
loopne
adc
sti
shr
imul
cmp
pop
jae
faddl
inc
push
lods
xor
jl
enter
sub
cwtl
and
ret
jno
out
lcall
outsl
data16
sbb
lock
in
xchg
imul
mov
test
int3
int
aaa
add
shll
adc
and
in
outsl
xchg
outsb
ljmp
movsb
cld
jo
movsb
into
xor
mov
push
mov
jl
mov
fcompl
les
adcb
dec
mov
mov
push
lods
add
pop
xor
in
jo
daa
mov
jge
pop
ja
mov
mov
lock
jno
jp
insl
out
pop
jno
jecxz
jecxz
stc
jnp
gs
das
mov
sbb
jbe
adc
in
jecxz
je
jno
dec
hlt
xchg
mov
sub
pop
dec
add
loope
sti
xor
cld
sub
sub
sub
mov
mov
inc
lock
imul
es
pop
adc
lret
repnz
mov
sub
sahf
sti
cmpl
in
inc
inc
jbe
dec
jo
fldt
jno
fidivrs
xchg
mov
lret
stos
daa
and
or
mov
je
das
adc
rcr
pop
adc
or
outsl
and
jae
mov
adc
lods
ss
inc
ljmp
sbb
pop
mov
outsl
lcall
je
mov
jmp
ljmp
xor
xor
sarl
sub
cmp
and
jae
mov
pop
sbb
int3
mov
mov
sub
mov
fiaddl
pop
lret
icebp
ja
mov
in
mov
mov
or
js
or
mov
test
rcll
jg
andl
int3
mov
pop
mov
orb
push
mov
xor
shll
xor
es
xor
or
mov
les
aad
popl
mov
adcl
dec
loop
push
add
lods
sub
stos
pop
sub
test
xor
adc
sarb
adc
pop
mov
vmovq
mov
popa
lock
fisttpll
scas
arpl
hlt
mov
cmp
test
ret
test
sbb
aaa
pop
add
xor
sbb
aam
or
inc
not
mov
dec
loopne
lret
out
jo
mov
test
adc
mov
adc
loopne
or
and
cmp
sbb
sahf
fwait
pop
sub
aas
lret
fwait
arpl
and
mov
cmp
fisubs
pop
inc
mov
inc
iret
cmp
dec
fs
lcall
sti
popa
loope
pop
adc
and
mov
mov
xchg
outsb
mov
pop
pusha
push
orl
cld
inc
sbb
into
sub
pop
loope
xor
psubsw
mov
dec
scas
sub
rcrl
jl
dec
xorb
aas
sub
sahf
aas
aam
add
dec
sub
adc
sbb
mov
jp
nop
dec
cmp
enter
fldt
dec
cwtl
mov
dec
stc
je
aaa
push
mov
cwtl
jbe
mov
test
xor
sbb
fildl
scas
fwait
adc
loopne
xabort
mov
mov
push
mov
add
cmp
outsb
ret
sahf
jmp
roll
sbb
mov
repz
dec
inc
push
int
cmp
mov
lods
push
in
ja
inc
cmpl
push
loope
aaa
mov
movsb
pop
xor
pop
cmpsb
leave
inc
aaa
mov
jg
test
add
mull
mov
imulb
xchg
push
pop
or
push
addl
rorl
jo
data16
sub
scas
xchg
mov
sub
xor
pop
sbbb
push
jns
jo
push
in
inc
inc
out
xor
mov
or
push
setae
jg
add
or
loope
in
lret
cmp
movsb
lret
sub
dec
sbb
push
cmp
push
arpl
shll
es
cmp
sbb
add
aaa
sub
ret
inc
cmp
sub
push
cmpsl
pop
aam
jne
xor
loope
shl
icebp
and
pusha
dec
cmp
jnp
stos
cmp
int
xchg
pop
pusha
push
filds
adcb
add
inc
aaa
int3
jecxz
inc
jbe
push
xchg
xchg
outsl
fldt
test
insb
aam
sbb
insl
pop
ds
lods
jl
notl
lret
xor
or
aad
or
mov
jmp
ljmp
add
push
insl
int
jnp
rcl
shll
nop
ljmp
dec
add
lds
jmp
xchg
js
aaa
push
out
cmp
jge
jecxz
movsl
push
adc
arpl
mov
fnstenv
in
aaa
fsubp
in
sub
xchg
jmp
and
cmp
dec
outsb
fnstenv
lea
mov
jo
fldcw
pop
out
xchg
cs
scas
xor
inc
leave
xchg
xchg
cmpsb
negl
push
mov
sbb
jle
or
addb
add
dec
imul
in
shll
mov
pop
push
loop
xchg
movsb
xor
ja
les
bound
sbb
lcall
sbb
ljmp
gs
mov
daa
and
dec
xor
mov
push
push
add
xchg
pop
scas
hlt
xchg
vucomisd
ret
cmc
js
incb
daa
pop
mov
sbb
or
mov
sbb
les
and
shlb
jne
xor
adc
pop
scas
push
lds
mov
ljmp
clc
bound
lret
sub
sub
pop
je
negb
lret
fnstenv
loop
lcall
dec
xor
add
pusha
cmp
inc
test
cmpb
mov
mov
and
testl
addb
mov
xor
in
xlat
cmp
call
jmp
mov
ret
jae
call
adc
popa
pop
push
jo
cmp
and
or
je
imul
adc
push
mov
push
xor
push
lahf
mov
pop
lret
mov
push
pop
xchg
inc
jnp
mov
jle
outsb
xor
sahf
sbb
push
xchg
mov
subb
subb
test
cmc
push
incl
dec
andl
sub
sub
adc
jno
lret
adc
cmpsl
mov
pop
imul
adc
pop
hlt
js
and
cmp
adc
clc
jne
xchg
jbe
mov
inc
rcrl
lahf
lea
aaa
adc
jns
divl
cltd
dec
jg
in
jecxz
pop
cmp
and
adc
jge
repz
add
mov
push
scas
xchg
gs
fildl
dec
mov
popa
in
mov
iret
mov
sarb
pop
sbb
mov
xor
adc
mov
arpl
loope
ss
out
inc
lcall
dec
mov
lea
xchg
xchg
xor
pop
sbb
test
lds
mov
or
out
mov
imul
fldcw
jge
dec
adc
movsb
mov
jo
imul
cmpsl
jne
fisubrs
ret
cmpsb
test
fbld
mov
sbb
sbb
push
ljmp
subl
lret
mov
dec
jb
add
or
push
xchg
xchg
xor
mov
xchg
daa
sbbl
mov
shl
jns
inc
sbb
pop
xchg
cmp
fwait
push
push
mov
stos
dec
cmp
stc
add
sbb
loope
clc
aam
adc
sysenter
testl
jmp
in
add
scas
jp
nop
orl
xchg
push
push
setno
rclb
mov
mov
xor
xchg
aad
xchg
movsl
shlb
pop
test
dec
mov
jmp
lcall
dec
shrl
popf
insb
fildl
xlat
mov
dec
outsl
sti
outsb
xor
adc
xchg
and
lods
xorl
push
pop
dec
ss
in
aas
lea
xorb
and
ljmp
js
mov
adc
push
add
jae
fwait
xchg
shlb
dec
mul
in
adc
xor
test
lods
mov
cmpsl
add
test
inc
bound
bound
shl
fistps
cltd
mov
cmc
mov
adc
mov
ss
dec
cmp
scas
sahf
dec
stos
loopne
mov
test
cmp
repz
repnz
hlt
ss
jne
mov
and
mov
mov
dec
adc
cmpsl
shlb
pop
sub
inc
dec
jecxz
sti
xlat
adc
mov
insl
int3
pusha
mov
jle
and
inc
out
xchg
mov
pushf
stc
or
leave
pop
in
js
and
filds
push
jae
pop
pop
mov
sbb
adc
out
lds
jle
pop
mov
inc
outsl
aam
dec
pushl
cli
nop
pop
out
push
in
mov
push
call
sar
test
push
roll
in
pop
mov
add
mov
js
xor
mov
dec
jmp
mov
sbb
shrb
mov
mulb
inc
adc
adcb
int
mov
mov
out
push
pop
scas
pop
push
mov
rcll
lods
rorl
fisubl
sub
jo
decb
cltd
out
xor
sbb
push
sahf
jns
push
lods
push
push
shr
adc
subl
lods
mov
cmpb
pop
push
sbb
sbb
test
insl
pusha
add
sub
lock
loope
insl
sub
xchg
movsb
es
popa
xchg
or
loopne
push
jp
popa
insl
fdiv
xor
scas
add
rolb
aam
cwtl
pop
xchg
mov
add
xchg
xor
push
sbb
jmp
movsl
cmpsb
int
cltd
into
fstpt
xchg
jae
mov
xor
leave
mov
mov
repz
cltd
mov
xor
stc
sub
mov
inc
sbb
loope
xor
xor
fdivrp
mov
pop
iret
fimull
xor
and
and
pop
leave
adc
and
aaa
xchg
add
aas
xor
mov
inc
push
push
jg
into
pop
dec
enter
inc
push
std
jle
popa
lods
mov
arpl
arpl
jae
sbb
mov
cmp
insb
scas
jne
xchg
scas
pushf
and
sahf
sub
mov
popf
lret
xor
in
fmul
mov
pop
movups
and
out
jb
sbbl
mov
sbb
repnz
daa
xlat
or
mov
popl
push
adc
fwait
pop
movsl
push
xchg
cmpsl
mov
jae
dec
or
cmp
sbb
cmc
mov
and
inc
orl
dec
xchg
cmp
dec
push
dec
push
cvttps2pi
cld
sbb
mov
out
adc
xor
loopne
mov
mov
cmc
jg
lock
rcrl
out
movl
push
lahf
test
jecxz
lock
stc
icebp
xchg
nop
push
jb
outsl
inc
push
call
sbb
movsl
je
inc
adc
xchg
inc
mov
inc
add
bound
mov
lock
ja
xchg
add
out
push
repz
leave
pop
stos
data16
add
mov
sub
pusha
xor
mov
insb
inc
in
xchg
loop
and
ja
mov
pusha
popa
stos
lods
mov
mov
fldl
inc
pusha
xor
cli
lahf
lock
outsb
repnz
mov
xchg
gs
and
bound
mov
mov
lret
out
jne
cmpb
lahf
push
shlb
mov
jbe
add
ret
in
push
test
test
inc
imul
into
stos
out
dec
shlb
mov
mov
pop
add
stos
push
jb
sbb
test
ja
loope
ret
sub
cmp
push
sti
test
dec
in
in
mov
xor
and
add
jl
or
outsb
in
test
pop
mov
cmp
loope
mov
and
jb
cwtl
lock
sbb
xchg
push
call
cmpsb
xor
jo
stos
xor
int3
sahf
adc
pop
push
add
push
std
inc
enter
enter
or
lahf
pushf
jp
fstps
sahf
ja
dec
jno
stos
xchg
ja
push
and
int3
ds
mov
clc
adc
stos
lods
push
jae
hlt
sbb
cmpl
xor
jg
leave
mov
jge
pop
fwait
pop
pop
leave
and
movsl
repnz
jmp
test
cmp
xchg
dec
sub
lret
and
cmp
or
cmpsl
mov
cld
cltd
xor
pop
sub
jae
jne
inc
mov
in
sti
push
outsl
in
dec
add
clc
adc
je
xor
test
cmc
xchg
and
sub
jmp
push
jl
add
mov
rol
jne
nop
mov
dec
or
sub
sbb
lods
jp
aam
mov
daa
xor
cmpsl
iret
jno
push
xor
aaa
test
pop
push
stc
and
cmp
mov
add
sub
aad
push
inc
inc
pop
int3
int3
test
and
or
fldl2t
pop
outsb
in
sbb
push
aam
test
mov
xchg
jp
add
sti
lea
rorl
mov
std
mov
xor
mov
push
sub
and
or
jge
pop
cwtl
out
hlt
sbb
xchg
xchg
into
rclb
in
pop
dec
mov
push
or
cmpsl
aaa
push
cmc
mov
or
and
pop
dec
cmc
jmp
in
mov
js
mov
mov
aad
push
pushf
and
lcall
ja
jge
inc
mov
dec
mov
lea
repnz
pop
cmp
test
sub
adc
ja
push
aad
aas
pushl
ljmp
sub
aaa
pushf
sar
lock
mov
out
xor
movsl
popf
cmp
inc
dec
jne
std
out
cmp
sbb
jae
mov
sub
loope
sbb
insl
lds
gs
sub
or
inc
xchg
jmp
push
push
and
lret
test
push
loopne
dec
insb
aaa
xchg
push
dec
out
adc
lock
fs
data16
daa
das
out
and
push
jne
dec
dec
subl
adc
cmpsb
fbstp
cs
repnz
mov
mov
scas
lret
mov
adc
ljmp
adc
cwtl
outsl
enter
mov
fcompl
mov
cmpsl
mov
roll
shlb
mov
or
push
in
add
cmp
cmp
mov
adc
or
insl
push
lahf
ja
sub
mov
pop
je
enter
xchg
mov
sahf
push
lcall
lods
std
push
dec
movsl
aas
mov
xor
cmc
fbld
jecxz
fidivl
cmpl
in
das
mov
daa
dec
sbb
cmp
jae
fldl
pop
and
fiaddl
ss
xchg
mov
dec
ret
pop
daa
in
push
add
add
in
jae
outsb
hlt
mov
test
push
push
mov
pusha
cmp
mov
xchg
imul
arpl
clc
cmp
mov
xchg
xor
adc
ja
sub
mov
pop
inc
das
and
add
mov
aam
push
dec
mov
int3
pop
xchg
scas
inc
fcoml
std
lea
sahf
je
jb
push
push
jg
pop
adc
in
xor
pop
dec
ja
and
xchg
and
pop
sub
mov
jno
rcr
lret
ss
xchg
jbe
js
lahf
sahf
mov
movsl
mov
cmp
mov
xor
out
adc
rcll
out
sub
xorb
inc
push
pop
sbb
insl
inc
fmul
aaa
jnp
aam
arpl
ret
mov
mov
popf
jno
nop
and
out
test
adc
scas
rcrl
adc
test
inc
mov
jno
push
add
adc
fs
jno
cmpsl
movb
loopne
addl
mov
loope
dec
cltd
cmp
lods
push
lret
add
adc
xor
iret
jp
outsb
add
adc
xchg
jae
rcll
dec
movsb
inc
pop
jmp
cs
std
inc
cld
outsb
mov
push
decl
mov
xlat
inc
cwtl
call
pusha
repz
imul
out
pop
sbb
outsl
int3
mov
adc
int
aas
sub
fdivrl
fadd
or
gs
jo
push
xor
addr16
je
rolb
push
sbb
mov
sahf
xchg
movsb
stos
ljmp
cld
xchg
and
xor
xchg
or
fmulp
lock
xchg
cli
and
cmp
scas
and
imul
cld
pop
stos
dec
aam
stos
lahf
lock
push
rcll
and
outsb
mov
out
push
mov
sub
test
pop
push
jb
cmpsl
mov
mov
daa
mov
mov
lods
jge
mov
add
sub
add
in
jge
les
add
cpuid
ret
loopne
pusha
les
lods
mov
int3
fidivs
fsubrl
shlb
add
fildll
cmc
pop
add
pusha
loopne
je
pop
or
divb
mov
dec
fiadds
arpl
in
out
pop
out
cmpsl
mov
nop
test
ss
adc
lea
daa
mov
out
jmp
jl
xor
lock
and
sub
fisttpl
jle
lds
sbb
mov
mov
fsts
mov
imul
pop
ja
insl
ret
and
aad
mov
pop
data16
cli
pop
outsl
bound
jbe
fists
push
cs
sahf
jnp
fdivp
jnp
mov
adc
fcoml
mov
fimull
push
xor
negb
mov
je
cs
push
cmp
inc
push
lock
mov
cwtl
cltd
testl
and
dec
pop
xchg
mov
aas
mov
pop
xor
pop
mov
inc
bound
popf
aam
ss
sarb
in
test
push
loope
and
cmc
pop
add
jbe
out
push
mov
adc
jg
in
xor
adc
xor
iret
pop
mov
dec
loope
dec
pusha
movsb
lods
mov
push
pop
sub
xchg
shrl
rolb
push
sub
mov
mov
or
and
clc
pop
ret
pop
mov
iret
xchg
into
test
adc
repnz
scas
cmp
inc
sub
mov
mov
sbb
pop
fidivl
insb
fcomps
cmp
call
in
adc
aas
add
xchg
pop
sub
loope
mov
lods
lea
sub
in
stos
or
jmp
mov
push
add
fsubs
push
in
sbb
movsb
inc
inc
push
jns
jecxz
int
das
adc
cmp
ficoml
sahf
push
mov
pop
icebp
call
mov
pop
sbb
cwtl
and
pop
sarb
test
stos
cmpsl
mov
sub
lock
xchg
add
sahf
daa
dec
sbb
pop
jp
cmp
bound
arpl
testb
stos
mov
pop
fucom
call
add
test
sbb
pushf
sbb
outsl
lret
fistpl
popf
xchg
rcrl
addr16
scas
xchg
lcall
mov
and
add
dec
mov
es
xchg
add
lcall
push
loop
cmpsl
mov
cmp
sbb
test
aas
jbe
pop
xchg
cld
push
dec
into
ss
and
sbbw
sbb
std
repz
mov
test
int3
sbb
xor
in
xlat
jg
mov
int
ljmp
scas
mov
rcr
data16
cwtl
xor
jbe
sub
popa
jp
and
and
add
jecxz
lcall
pusha
aaa
icebp
fs
outsb
xor
xor
cmp
dec
mov
jmp
stc
fldl
lea
int3
push
add
pop
mov
mov
incb
xor
imul
dec
jbe
sarl
dec
pop
jnp
dec
js
stos
fneni(8087
pop
sbb
cmp
iret
subb
pop
add
mov
int
jnp
adc
hlt
pop
je
add
rcr
push
sub
test
sbb
push
adc
cld
mov
jmp
fsave
sub
imul
jno
int3
inc
fsubrs
push
movl
out
lgs
cli
inc
jo,pt
push
mov
push
mov
pushf
in
ss
std
push
aas
pop
adc
ret
xchg
lea
lret
pop
push
sbb
fcmovnbe
fbld
mov
mov
ss
push
xchg
xor
jg
push
es
das
adc
mov
pop
fistps
movsl
leave
lcall
pop
xchg
add
gs
push
sbb
test
scas
cmp
loopne
mov
push
jp
imul
decb
loopne
cs
mov
mov
sahf
xor
xchg
dec
pop
mov
call
mov
fsubrs
adc
pop
shrb
mov
cmpl
and
dec
iret
outsb
mov
addl
scas
and
roll
mov
dec
sbb
mov
pusha
and
jle
add
sbb
mov
dec
test
dec
insb
fucomip
popf
push
ja
push
sti
aam
jbe
push
mov
out
int3
scas
fstps
lods
fldt
xchg
push
mov
jne
ja
scas
adc
push
cs
xor
orl
iret
imul
sbb
inc
sahf
pop
xchg
fldcw
push
mov
lods
dec
pop
dec
pop
loopne
loop
mov
xor
xor
cs
xlat
hlt
sbb
imul
cmp
xchg
push
inc
xchg
scas
aad
outsb
out
std
cmp
pop
jmp
aad
cmc
push
pusha
clc
dec
jo
loopne
mov
sbb
xchg
aaa
push
dec
call
popa
lret
insb
xchg
movsb
mov
std
bound
jns
aas
lds
dec
imul
fcompl
and
jnp
adc
ret
mov
xor
jmp
sti
dec
jg
push
inc
pop
jno
sbb
inc
into
lahf
cwtl
hlt
xor
fwait
cmpsl
inc
rcrl
mov
xchg
sbb
adc
frstor
jmp
adc
pop
inc
out
rolb
int3
mov
jg
hlt
mov
cltd
xor
push
xchg
test
mov
xor
sub
pop
movsl
dec
and
in
adc
aad
decl
jb
push
pop
lcall
jbe
mov
pop
xchg
xlat
push
or
into
push
mov
add
cltd
in
pop
mov
mov
incl
lods
imul
dec
jecxz
popa
fldcw
sub
outsb
cmp
mov
fisubs
xchg
xor
push
fadd
xlat
lret
inc
mov
adc
test
xlat
jp
inc
xchg
repnz
fistps
xor
mov
nop
jns
filds
sub
cmpsl
rcrl
xor
mov
sbb
pop
repz
inc
dec
mov
sub
outsl
ret
sarb
hlt
and
fwait
cmpsl
mov
ja
xchg
jl
sbb
fcomps
jno
cmp
jno
push
push
mov
mov
xchg
sahf
and
sbb
shll
adc
and
xchg
mov
leave
hlt
pop
push
push
adc
mov
ret
cmp
and
shrl
dec
lcall
test
es
int3
sbb
add
jl
adc
adc
adc
pop
mov
pop
and
jbe
jmp
push
add
lods
mov
pop
sbb
arpl
icebp
outsb
arpl
insl
lret
ds
and
xchg
pop
mov
jp
enter
pop
out
je
inc
mov
scas
push
xorb
and
push
mov
jp
xor
cmp
pop
xor
imul
pop
lret
or
ljmp
out
mov
rorl
inc
adc
sti
push
pop
aas
push
rclb
sbb
rorb
add
cmc
mov
js
xchg
test
ljmp
stos
ficompl
or
popa
rcrl
ret
mov
imul
cmp
stc
sti
xchg
idivb
jmp
and
out
cmp
adc
sub
xchg
mov
popf
rclb
or
inc
lock
xchg
pop
xor
ja
mov
cld
push
or
cli
f2xm1
ret
pop
add
aas
push
stos
fnstenv
lock
pop
jno
arpl
mov
xchg
mov
dec
loopne
cmpl
or
jae
fstps
lcall
shlb
inc
pop
sbb
aas
rorb
push
insl
cmc
fs
stos
out
das
dec
adc
enter
ss
popa
add
mov
pop
fsub
pop
cmp
lahf
lods
cmp
ljmp
dec
jge
shlb
test
cmp
sub
outsl
mov
inc
rolb
rolb
add
fisttpll
sbb
push
movsl
pop
xchg
mov
or
push
and
xchg
xchg
add
ret
sbb
dec
push
daa
shl
inc
adcb
insl
nop
mov
je
popf
sbb
in
lcall
mov
mov
sbb
jae
stos
fxtract
add
cmp
clc
push
sbbb
mov
push
xchg
push
mov
dec
and
ret
popf
fistpl
jmp
ds
cmp
nop
push
fdivl
dec
cld
mov
andb
jae
xor
test
rcll
mov
or
dec
sbbl
pop
mov
dec
je
pop
jge
jmp
das
daa
daa
sbb
or
sub
dec
mov
js
repnz
mov
cmp
pop
sti
jne
jo
dec
das
lods
mov
xchg
sub
sub
cld
push
call
outsb
imul
xlat
adc
cld
cmp
aas
les
mov
sahf
push
xor
jg
pop
insb
or
cmp
cmp
test
cmp
ret
in
xchg
dec
push
mov
mov
cli
popf
dec
jno
add
lahf
cltd
sub
mov
add
jmp
jae
and
cltd
fs
or
scas
inc
mov
cmp
stos
or
les
sar
out
fisttps
xor
ja
iret
cmc
lock
mov
loope
popf
dec
ja
push
or
cwtl
jmp
pop
jmp
or
mov
cmpsl
imul
les
scas
pop
icebp
test
repz
and
dec
mov
pop
cld
mov
jg
mov
mov
lahf
inc
push
sbb
pop
ljmp
xor
aam
icebp
sbb
mov
pop
mov
sti
aam
imul
loop
xchg
rcrl
les
lds
mov
aaa
mov
adc
and
cld
dec
sarb
or
xor
out
popf
loop
mov
inc
imul
ja
mov
sbb
lock
nop
adc
jg
lea
repnz
xor
nop
addr16
adc
shr
scas
shl
xor
scas
xchg
sbb
rcrl
icebp
cmp
xor
fmul
cmp
das
and
insl
dec
jbe
adc
and
jecxz
out
or
outsl
or
iret
insl
xchg
cli
imul
mov
mov
inc
xchg
push
outsb
adc
hlt
dec
cld
xchg
and
int
and
and
and
jne
ljmp
mov
and
xor
rolb
mov
pop
sub
fstl
adc
popf
out
jo
mov
arpl
sbb
das
jns
push
mov
push
inc
cmp
minps
mov
mov
mov
dec
cmp
jne
adc
dec
clc
dec
mov
iret
lods
enter
mov
imul
cmova
pop
cmp
aad
out
icebp
fstpl
sub
imul
push
mov
jmp
jne
ljmp
xchg
lcall
sahf
xor
js
ja
mov
lret
ss
shlb
mov
xor
xchg
mov
mov
stc
inc
add
mov
stc
pop
out
add
sbb
jecxz
jg
iret
int3
inc
jge
sub
pop
or
pusha
push
mov
clc
mov
aad
loop
aaa
adc
int
jl
adc
mov
jp
push
fwait
mov
sbb
js
addr16
cmp
les
sahf
lock
bound
leave
arpl
cmp
fldl
push
and
inc
xchg
lods
insl
xchg
cmpsl
into
dec
stos
lock
int3
pop
jle
jp
or
cmp
inc
mov
sub
jp
cmp
lret
into
repnz
xchg
out
mulb
sbb
shlb
and
popa
test
hlt
nop
adc
adc
jge
pop
out
adc
fisubl
movsb
or
or
push
stc
mov
je
fcos
jge
dec
jmp
jne
mov
movsl
jl
in
mov
cmp
cmp
lcall
xchg
std
scas
xlat
addr16
pushf
inc
add
dec
mov
cmp
imul
push
pop
sbbl
test
inc
mov
jmp
jmp
add
icebp
adc
out
lock
cmp
sar
push
aas
and
icebp
or
mov
adc
popa
xor
mov
jecxz
jne
in
pop
xorb
xchg
adc
ss
pusha
xchg
xchg
xor
mov
stos
push
xor
pushf
jns
cmp
add
cmp
inc
mov
lea
dec
int3
dec
or
add
cmpl
sbb
loopne
out
fsts
repz
push
mov
cli
cld
fmull
and
dec
adc
cmp
xor
mov
mov
or
jo
or
mov
or
cmp
inc
ja
mull
jne
jne
jne
in
clc
jmp
outsl
or
cmp
arpl
xor
inc
int3
add
dec
shrb
cmp
gs
jg
addr16
adcl
outsb
movsb
sub
stc
add
jle
and
or
imul
mov
jl
fimuls
aas
push
mov
jne
cltd
pop
xor
jge
adc
jmp
fists
add
fmuls
imul
sbb
cwtl
jp
sbb
negl
push
in
add
call
loopne
xor
push
cs
sub
sub
call
xor
aad
mov
inc
cmp
movsb
pop
pushf
aam
cmpb
aas
jg
xor
test
adc
nop
cmpsl
testb
int3
in
daa
xchg
push
inc
add
cmp
mov
aas
xor
mov
popa
stos
stc
aad
enter
mov
jns
fcompl
orb
inc
push
cmc
out
hlt
test
addps
mov
ljmp
cmp
test
stos
das
adc
ss
lahf
xchg
push
and
in
fnstcw
adc
lock
mov
stc
stc
or
mov
add
je
cltd
add
dec
rcrl
cmp
outsl
addr16
arpl
lock
xchg
inc
xlat
sub
stos
ret
popf
or
lods
arpl
cmp
out
push
mov
push
and
xchg
pop
sti
or
lea
test
push
cmp
jl
iret
fmul
ds
test
js
mov
jmp
enter
push
fnstsw
movsl
div
pop
mov
int3
dec
jmp
imul
sbb
inc
cmp
pop
inc
rcll
movsb
icebp
fidivrs
out
ljmp
sub
adc
jns
push
arpl
mov
leave
lods
es
xchg
mov
xor
fldcw
fstpt
fwait
pop
jb
je
ficompl
cmp
pop
pop
imul
xor
add
adc
adc
inc
xchg
cltd
iret
outsb
ds
lods
xchg
loope
andl
mov
insl
outsb
jnp
outsb
cwtl
test
aam
fwait
rorl
cli
mov
rclb
mov
icebp
adc
dec
adc
in
add
jmp
loope
les
jno
popf
jbe
or
outsb
in
push
and
ss
jmp
xor
hlt
cs
cmp
push
jle
call
xchg
pop
sub
addb
ss
push
pop
test
pop
sbb
xor
clc
cmp
mov
add
adc
sbb
arpl
push
in
aaa
test
loop
icebp
inc
pusha
dec
loop
adc
lea
icebp
dec
pushf
stos
lds
dec
call
fidivs
jecxz
mov
stos
in
sbb
xchg
sub
push
dec
inc
negl
cmc
clc
movsb
xor
ss
and
in
push
sahf
sbb
test
mov
dec
cli
dec
pushf
ret
scas
mov
jge
xchg
mov
add
sti
jge
or
sub
cmp
sub
xchg
je
or
test
ja
shll
scas
or
test
pop
das
lcall
fmulp
clc
shlb
lods
int
jns
movsb
imul
jg
data16
cmp
mov
repnz
int3
adcb
jne
int3
into
test
xlat
roll
sti
shl
addr16
popa
arpl
mov
sbb
adc
es
xor
shlb
addr16
cmp
sti
cmp
fimuls
dec
add
sete
mov
sub
jnp
movsb
add
mov
xchg
sbb
xchg
gs
push
orb
bound
or
mov
jl
ret
dec
repz
add
xchg
jmp
push
mov
sbb
dec
add
adc
jmp
cmpsb
enter
pop
adc
sbb
adc
mov
add
push
ret
jmp
mov
ror
dec
aas
dec
sub
xchg
jp
and
xorb
xorb
sti
rol
mov
xchg
jns
sbb
or
nop
dec
dec
xchg
or
std
fistl
loop
cmc
cltd
loop
mov
rol
movb
loop
dec
mov
imul
inc
mov
movsl
int3
lret
mov
inc
inc
dec
cli
or
sbb
sahf
jmp
push
out
mov
dec
dec
xchg
pop
std
shll
in
aam
jae
pop
pop
mov
aad
das
mov
pop
das
in
lods
loopne
xor
mov
lcall
out
jmp
sbb
andl
gs
data16
test
xchg
push
test
push
imul
rcll
pop
or
cmp
mov
dec
rclb
call
clc
xchg
repnz
arpl
into
fistpll
cmp
push
fcomps
divl
mov
inc
add
fidivl
mov
std
and
jmp
sub
jbe
sub
cmp
dec
loope
xchg
icebp
aaa
push
push
sbb
lahf
mov
lods
daa
in
out
mov
arpl
xlat
and
push
push
mov
sub
call
jb
pop
push
jno
sub
adc
pop
inc
mov
dec
push
je
insl
repnz
aaa
jb
xchg
push
xchg
mov
ficoms
aaa
mov
aad
jo
xchg
or
loope
xchg
cmp
pop
das
jmp
push
fldl
sub
xchg
dec
or
and
outsb
les
mov
xor
mov
mov
dec
andb
or
cmp
test
inc
sbb
adc
int3
repnz
adc
adc
repz
in
jg
jle
das
sbb
mov
andl
inc
mov
xor
sti
push
and
adc
push
dec
sub
ret
cmp
jg
jnp
ds
dec
mov
iret
jmp
push
xor
push
rcrl
aas
pop
test
in
mov
into
cmpsl
into
push
xchg
inc
fisubrs
pop
sub
mov
push
dec
jge
adc
call
sbb
jle
add
sbb
xor
call
sarl
roll
popa
jae
lahf
test
cmpsl
in
notl
push
lcall
add
mov
cmp
daa
cmp
pop
dec
out
push
xlat
add
push
xchg
xlat
test
pop
jne
popf
hlt
loope
call
in
out
ret
adc
xor
or
dec
fidivl
inc
stos
xor
lods
jecxz
pop
inc
mov
ret
and
aad
addb
adcb
out
out
add
cld
mov
and
scas
arpl
cmp
xlat
push
add
inc
ror
ja
scas
inc
xor
pop
jge
fucomip
dec
out
je
pop
sbb
std
dec
movsl
mov
mov
xor
cld
sbb
push
lea
xchg
ss
xor
sub
sub
daa
pop
cmp
test
imul
loop
sub
mov
jnp
out
xchg
add
rcrb
fwait
ja
mov
pop
std
dec
cmp
pop
xchg
es
arpl
or
ret
fistps
sub
fildl
mov
mov
orl
rcrl
jmp
movsb
or
neg
add
arpl
mov
inc
push
dec
lock
add
in
or
sbb
call
aad
sbb
adc
xor
pop
or
jl
and
xchg
into
daa
mov
mov
xchg
push
adc
xor
xor
mov
inc
or
jns
cmp
xchg
ds
lahf
pusha
repz
and
cltd
mov
lret
dec
lods
pop
into
dec
roll
fistpll
lcall
jne
lods
jmp
out
lret
faddl
jle
pop
out
rolb
outsl
out
mov
mov
hlt
mov
repz
cld
cld
add
test
or
cmp
mov
cmp
or
stc
setp
inc
cmp
pop
push
push
dec
cmp
hlt
ficompl
test
daa
movsb
push
dec
jg
jne
repz
inc
pop
out
push
sub
mov
ret
ljmp
add
lods
mov
popf
aas
rcll
rorl
and
xor
sbb
inc
mov
push
or
jo
mov
add
mov
mov
and
mov
repz
test
jle
ficompl
std
out
or
addb
data16
push
cmp
loopne
js
aas
and
popa
inc
sub
cli
adc
pop
cmp
out
push
or
loope
xor
sub
mov
xchg
sbb
daa
mov
adc
ror
sbbb
push
rcl
inc
xor
aas
arpl
jp
cwtl
aas
xchg
jns
scas
push
loope
nop
dec
jnp
flds
xorb
jnp
adc
and
fwait
xchg
rorl
pop
cmp
inc
lea
ljmp
dec
xchg
movsb
and
in
int3
movsb
scas
and
inc
xchg
xor
mov
es
mov
je
mov
lods
mov
add
daa
ss
xor
not
lcall
xchg
das
xchg
xchg
out
fistps
movsl
dec
fidivrl
pushf
inc
and
xor
sarb
xchg
outsb
mov
dec
mov
aam
sbbb
shrl
test
dec
icebp
add
adc
or
cmp
sub
add
and
clc
movsb
cmpsl
jae
jne
dec
lahf
std
les
dec
or
pop
andb
push
sub
sbb
jb
inc
inc
xchg
ja
andl
call
add
sarb
in
add
and
jmp
xor
pop
loopne
xor
mov
pop
testl
pop
jae
pop
test
push
in
test
pusha
adc
imul
inc
rolb
ja
lcall
iret
or
sbb
cvtpi2ps
cltd
hlt
adc
arpl
fwait
adc
lret
in
pushf
lods
js
jnp
dec
xlat
jo
dec
lcall
jns
or
subl
in
and
movsb
dec
xchg
mov
ss
test
push
xchg
jge
sbb
ficomps
lods
xchg
xor
cs
dec
orl
ret
test
jne
mov
and
push
mov
push
xchg
xchg
arpl
xchg
mov
fildl
sbb
inc
ljmp
xor
add
imul
ds
xchg
mov
xorb
aam
adc
pop
push
dec
cmp
push
dec
pop
inc
mov
dec
cmpsb
test
pop
movsl
sub
or
pop
sub
fadds
out
adc
orl
jecxz
out
xor
mov
mov
subl
cwtl
loopne
and
pop
xchg
sub
out
xchg
ljmp
imul
pushf
inc
cmp
sbb
sub
outsb
call
sbb
xor
mov
or
les
loopne
enter
push
test
xchg
ss
test
mov
and
clc
div
cmpxchg
dec
jno
sub
xchg
movsb
mov
test
call
or
xchg
inc
push
push
sub
fwait
mov
adcl
xor
fstpl
mov
mov
shll
shl
push
pop
scas
pop
out
push
push
icebp
test
jg
rol
cli
imulb
jae,pn
lahf
pop
mov
aam
and
push
ds
mov
roll
lret
xor
jo
stos
ss
sbb
pop
xchg
mov
push
or
rorl
pop
push
adc
or
xchg
mov
sti
add
or
sub
pop
fdivl
cmp
imul
lods
scas
outsb
mov
dec
nop
push
add
sbb
push
mov
inc
jbe
out
sub
ficompl
adc
xchg
mov
scas
rol
out
add
mov
lcall
jle
movsl
mov
cld
cmp
mov
sbb
jp
bound
xchg
into
into
mov
jg
push
or
int
and
fwait
popf
sub
lock
cwtl
xor
sbb
push
repz
pusha
pop
rorb
mov
or
adc
out
xor
jo
into
cmc
mov
test
in
arpl
adc
jl
pop
enter
and
and
pop
adc
enter
and
rorl
xor
jecxz
sarb
popa
mov
jg
sbb
jns
xchg
or
mov
cmc
jae
xchg
jmp
shrb
push
or
divb
lds
mov
push
xlat
xor
dec
jbe
dec
inc
sub
or
mov
pop
scas
mov
stc
lods
ljmp
xor
call
add
aas
outsb
cmp
mov
xchg
xchg
loopne
pop
or
mov
lea
lock
test
addr16
cli
movsb
loop
mov
inc
pop
cmp
jb
les
and
lahf
mov
loope
imull
inc
mov
jmp
mov
mov
jnp
stc
test
xchg
cli
icebp
push
lcall
inc
adc
aam
sahf
sbb
pop
idiv
mov
xchg
loop
ret
mov
sbb
loope
loopne
mov
inc
jecxz
test
loopne
push
ljmp
das
mov
inc
scas
inc
xchg
gs
push
imull
mov
call
je
lods
xor
imul
xor
pop
repz
ss
xor
xor
dec
loopne
adc
jl
ds
arpl
sbb
push
std
sbb
xor
aaa
repnz
pusha
fmuls
pop
cmp
cmpb
xchg
cmp
cmp
push
mov
add
mov
and
push
push
adc
dec
aad
push
jge
pop
loop
push
adc
inc
jb
aam
pop
mov
push
in
inc
notb
bound
jne
xchg
mov
xchg
lahf
icebp
mov
mov
dec
push
mov
hlt
jnp
fwait
mov
add
mov
scas
cmp
rep
push
stos
mov
scas
push
xor
lret
push
push
jo
mov
aaa
cmpb
pop
into
xlat
xor
pop
bound
stos
dec
bound
stos
push
bound
push
xchg
cmpsl
int
fs
push
sbb
ret
insb
loop
inc
xor
push
mov
xchg
mov
pop
sbb
loop
push
addr16
pushl
sbb
daa
xchg
mov
jl
je
inc
mov
sub
mov
aaa
xchg
push
scas
rolb
xchg
insb
add
rcrb
inc
mov
mov
or
stos
ror
fldt
or
fimull
add
shrl
outsl
negb
sub
jnp
cmc
decb
jae
arpl
out
add
stc
xchg
and
add
gs
outsl
mov
cmp
inc
pop
lock
outsl
clc
inc
sti
scas
data16
mov
xchg
in
into
fnstsw
arpl
ror
mov
outsb
daa
push
lds
frstor
mov
cltd
ret
sub
jg
negb
jl
jne
adc
mov
dec
push
test
or
cmc
adc
xchg
in
outsl
push
ja
mov
test
test
in
iret
sub
jb
stos
clc
dec
push
add
and
shll
lcall
jo,pn
data16
mov
andl
loop
inc
xor
jno
jle
fimull
jle
insb
xor
dec
mov
fnstenv
out
bound
jnp
or
or
les
ret
jae,pn
fcoml
sbb
pushf
cld
out
mov
std
lret
sbb
or
stos
mov
lea
jo
addr16
mov
scas
xor
add
fimull
cld
inc
sbb
daa
jg
push
xchg
push
out
imul
xor
dec
arpl
adc
dec
cmp
outsb
icebp
inc
add
cwtl
pushf
rolb
mov
sbb
cmp
flds
pop
lods
mov
jmp
sbb
sbb
inc
or
xor
push
cmp
stos
stos
mov
or
xchg
lods
xchg
sbb
mov
jae
stos
pushf
pop
hlt
adc
data16
lods
and
mov
std
dec
sti
sub
jg
xchg
dec
aaa
sub
jns
out
repz
push
stos
fdiv
shlb
mov
aam
in
push
ss
call
loope
shr
push
adc
icebp
clc
push
push
push
jmp
adc
dec
stc
cwtl
test
push
fildll
insb
popa
or
mov
push
jle
jle
and
out
nop
inc
jmp
jl
xlat
xor
dec
clc
adc
xorl
std
jmp
das
and
bound
push
dec
rorb
cwtl
push
add
sub
fisubs
and
outsl
dec
shlb
insb
cmp
in
or
sti
sbb
loopne
outsl
or
jb
jo
xor
loopew
inc
ss
insl
or
pop
imul
pop
adc
xlat
mov
outsb
add
xor
int3
inc
cmp
push
cmc
push
scas
pop
push
fsubs
push
or
cwtl
cld
cwtl
popa
aad
or
movsl
cmp
icebp
ret
mov
xchg
scas
lods
sbb
inc
cmpb
inc
jae
fiaddl
test
jge
xchg
scas
jae
inc
jp
sbb
adc
shlb
scas
and
jo
pop
mov
dec
jge
jp
mov
or
aaa
mov
or
push
or
ret
sub
xchg
int
push
and
xor
inc
cmpsb
dec
insb
cs
aas
mov
lret
movsl
stos
mov
test
jecxz
aad
imul
xorl
push
jge
andb
orb
mov
insb
cmp
leave
mov
mov
cmp
jp
push
jb
jge
sbb
or
or
ja
inc
call
adc
xor
rorl
vpcmov
fmul
cmp
mov
fldl
popa
sti
or
ja
push
dec
jg
lret
pop
je
mov
push
enter
int3
mov
mov
ljmp
out
dec
xor
test
cmp
mov
cmp
imul
je
loopne
addb
pop
je
cmc
inc
jb
xchg
sbb
int3
add
mov
fiadds
cmp
jb
and
mov
and
fimuls
jecxz
nop
adcl
sub
and
inc
xor
xor
adc
jmp
mov
jb
pop
frstor
lods
pop
pop
adc
pop
mov
hlt
cmp
mov
push
loopne
fbstp
cwtl
lcall
lret
push
into
jmp
or
daa
xchg
aad
pop
mov
nop
ja
movsl
test
push
aad
push
das
ret
divb
adc
mov
and
icebp
inc
or
cmp
int
mov
out
lods
js
outsb
enter
aaa
xchg
rcrl
jo
iret
sbb
ret
inc
sub
int3
and
out
pop
mov
rcrb
hlt
pop
pop
jne
jmp
ja
jmp
pop
stos
dec
fdivrl
push
lret
mov
jnp
push
das
jle
in
jl
sub
aas
xor
jg
outsl
daa
lods
mov
xchg
add
mov
jns
fsubrs
hlt
mov
jecxz
es
pop
imul
shrb
mov
jecxz,pn
es
out
or
test
pop
add
inc
fs
outsb
xor
pop
into
addr16
jle
xor
dec
add
push
sub
lcall
and
dec
adcl
xchg
cltd
push
mov
jnp
dec
xchg
cmc
inc
sbb
cmc
mov
xchg
jns
sbb
xchg
stos
inc
rcrb
lret
add
aas
add
arpl
jnp
xchg
stc
fwait
xchg
lret
cs
dec
push
sbb
out
or
add
lds
and
mov
add
adcb
xchg
mov
aad
mov
inc
fiadds
sbb
dec
add
decl
popa
setle
incb
mov
mov
repz
adc
adc
popf
or
or
sbb
pop
fidivrl
xchg
cmp
lea
insl
mov
movntq
mov
jbe
xchg
xor
push
sbb
xchg
inc
test
insb
xor
sti
cmp
aad
aaa
mov
cmpw
pop
pop
mov
and
pop
fmuls
aam
mov
mov
popa
pusha
les
mov
xchg
stos
push
mov
cmp
cltd
iret
mov
mov
rorl
inc
rcrl
sahf
jo
lock
es
pop
or
ljmp
int3
adc
push
xchg
subl
xchg
gs
sub
js
ss
and
fldcw
inc
lds
imul
or
and
cmc
pushf
sahf
dec
in
sbb
aad
cwtl
sbb
subl
dec
sbb
jge
cmc
lea
imul
mov
xor
adc
imul
add
enter
push
test
mov
insb
pop
repnz
mov
fstl
mov
lock
jnp
pushl
mov
dec
test
pop
testb
jl
inc
add
dec
divb
mov
stc
mov
ljmp
mov
scas
int
adc
loopne
lret
sub
lods
insb
cmp
push
and
sub
movsl
xor
mov
add
xor
test
pusha
jns
lods
sahf
dec
mov
sbb
cwtl
mov
adc
imul
nop
es
js
add
push
jae
bound
faddl
ficoms
cmp
test
xchg
adc
pop
pop
sbb
mov
jl
xor
lahf
sbb
jmp
out
xchg
addr16
jns
pop
ficoms
xchg
imull
rolb
stos
mov
cmp
xor
mov
inc
notl
add
gs
lret
aas
or
or
push
fimuls
std
sub
out
jg
cmp
inc
sbbl
mov
adc
or
sbb
cmpsb
adc
adc
jne
mov
rcrl
mov
lret
dec
fdivl
out
cmc
popf
mov
mov
movsb
out
sbb
or
scas
inc
lods
loop
xchg
inc
inc
sub
jmp
dec
and
imul
lds
mov
cs
loopne
int
out
rol
xlat
fwait
shll
inc
fildl
mov
mov
lret
aad
outsl
or
xor
scas
imul
imull
in
sub
movsl
test
mov
sti
bound
mov
xlat
xchg
decb
stos
fldcw
popa
insb
push
dec
stos
in
stos
pop
outsb
dec
xchg
xchg
xchg
popf
std
das
fs
in
repnz
mov
pop
jne
or
adc
xchg
pop
filds
aas
jge
push
or
cmp
or
and
test
shll
ja
cld
adc
fldenv
pop
lcall
out
jecxz
popf
scas
je
fidivs
daa
jno
jle
and
push
cltd
ret
nop
adc
sub
jae
sahf
inc
sbb
loope
add
popa
mov
add
inc
sti
ljmp
scas
testl
pop
icebp
pusha
pop
dec
jmp
sahf
icebp
cmp
adc
out
icebp
adc
popa
xchg
xor
jns
sti
lcall
add
add
shrb
iret
cltd
xor
bound
sbb
shll
mov
out
push
push
scas
out
or
movsb
jmp
jp
and
xchg
add
test
sub
xor
mov
dec
adc
jnp
loope
test
dec
repnz
lret
xchg
inc
test
inc
loopne
xchg
scas
sahf
iret
adc
hlt
stos
add
inc
jns
sbb
in
push
in
xchg
mov
sti
lea
xchg
outsb
dec
inc
pop
mov
sbb
mov
into
fwait
jb
test
lods
jnp
cmp
lods
xchg
jge
daa
fs
push
dec
cmp
notb
jp
outsb
xor
mov
lods
cmp
repz
sub
inc
or
mov
dec
stos
jnp
popa
mov
imul
sbb
lods
enter
jl
and
aas
adc
lock
ja
xchg
ficomps
cmpsb
out
mov
fdivrl
jge
subl
call
mov
jg
sarl
cmp
sbb
or
jecxz
mov
or
aaa
popf
or
stos
cmpsl
pop
int3
cmp
outsb
push
push
or
lret
incb
sub
test
test
imul
inc
mov
or
movsl
int
xor
jb
mov
insb
test
mov
cmpsb
pop
dec
dec
ret
and
adc
js
or
pop
das
mov
push
fdivl
lock
mov
mov
pop
orb
mov
fisttps
jnp
xchg
sub
fisttpll
cmp
into
scas
and
icebp
rcrl
mov
xchg
stc
adc
sbb
sbb
aad
xor
xor
dec
sub
or
mov
jb
and
ret
sbb
imul
and
stc
jne
jnp
jne
cmp
xor
nop
shrb
int
sub
cmpsl
cmpsl
aam
nop
mov
push
repz
enter
add
mov
and
sbb
lods
cwtl
pusha
mov
into
sbb
mov
sbb
or
mov
xchg
sbb
cmp
sbb
fsubs
sbb
call
std
stos
pop
rcr
insl
sub
jle
xchg
fsubrp
add
mov
ret
cmp
es
or
rclb
xchg
outsb
ret
bound
ret
gs
loop
and
cmp
mov
test
xchg
adc
and
in
push
cltd
cwtl
lods
inc
mov
xor
aad
pop
sub
xor
dec
lods
imul
subl
pop
xor
scas
pushf
clc
cwtl
lea
fisttps
cmc
adc
sub
mov
or
and
jns
loop
jp
and
cmp
jne
test
adc
psrad
or
xchg
cmp
jb
fistl
mov
outsl
cmp
sub
fwait
test
xchg
in
mov
popa
int3
or
pop
ds
or
imul
out
adc
ja
cmp
mov
test
mov
lahf
callw
iret
mov
sub
mov
mov
sub
xchg
fdiv
fmuls
fs
push
pop
pop
movntq
inc
push
mov
sbb
mov
push
push
mov
and
fsubrs
imul
ficompl
dec
push
jbe
stos
sub
add
std
repz
sub
insb
movsl
add
or
mov
lods
jge
cld
push
mov
out
cwtl
sbb
and
jbe
js
xchg
lods
mov
rcl
shr
pop
pop
xor
push
insb
addr16
mov
lock
mov
stos
mov
das
iret
mov
mov
xor
push
mov
test
fs
fdivl
inc
add
sbb
mov
mov
sub
mov
sub
mov
pop
xor
and
jb
add
pop
aaa
mov
enter
jecxz
cli
lods
push
cwtl
jb
data16
shll
sbb
add
sbb
mov
mov
shlb
and
cmpb
mov
push
es
stos
push
and
sub
sub
push
aam
sub
push
out
out
jae
es
sbb
test
inc
loopne
stc
add
shll
and
loopne
leave
cwtl
pop
push
sbb
mov
push
push
loop
andb
or
pop
push
cmpsl
or
sbb
mov
daa
jle
andb
mov
push
stos
sub
aas
test
mov
and
push
sahf
pop
jl
cmp
mov
lods
cmc
jae
insl
pop
movsb
mov
popa
movsl
lret
fsubl
imulb
outsb
fldcw
sti
pop
push
popf
mov
cwtl
insb
lret
sub
cmp
cltd
insb
mov
mov
fimuls
mov
popa
out
and
fsub
je
loop
pop
xor
xchg
sbb
pop
mov
lcall
mov
cmp
jg
cmc
jg
push
sahf
jl
sub
xchg
mov
dec
mov
jno
add
inc
int3
clc
jg
insb
cmp
mov
and
xor
mov
sbb
and
push
iret
pop
aaa
cld
push
test
orl
insb
je
push
pop
clc
sbb
jno
pop
int
inc
xor
pop
mov
imul
and
mov
data16
and
xchg
pop
mov
dec
cmpsb
pop
xchg
les
in
sbb
inc
mov
sub
jae
repnz
mov
ret
fsubrs
jmp
cltd
mov
arpl
and
xor
popa
andl
mov
outsl
mov
cmp
pusha
adc
bound
or
jmp
dec
or
fimull
inc
and
sti
jle
aad
insb
fldl
mov
push
fwait
shll
push
out
pop
jo
lods
push
es
ret
mov
inc
dec
xchg
xor
lock
pop
xor
adcb
cmp
mov
mov
in
xchg
lods
adc
sbb
fsts
stos
jle
imul
xchg
mov
iret
insl
jns
mov
mov
nop
scas
orl
mov
inc
aas
pop
jle
jae
lahf
mov
cld
inc
idivb
jno
je
in
ficoms
cmp
aam
sub
addr16
sbb
ljmp
dec
mov
cltd
inc
scas
bound
mov
in
inc
sub
loop
cmpsl
stc
test
push
cli
mov
xor
dec
outsl
dec
outsl
add
es
mov
mov
dec
cmp
pop
subb
mov
sbb
xchg
mov
mov
or
sub
add
dec
mov
pop
int
or
lds
push
xchg
adc
adc
cmp
cmp
fdivl
aaa
pop
andb
add
jns
lret
mov
cmp
or
imul
dec
sbb
sub
mov
add
mov
outsb
cmp
test
jmp
in
sub
mov
inc
nop
xchg
pop
dec
jecxz
lcall
imul
fisttpll
and
imul
dec
add
cmp
pushw
mov
mov
ljmp
xlat
jb
cli
ss
dec
scas
repnz
sti
into
mov
loop
lock
inc
imul
js
jecxz
nop
in
fisttpl
sub
or
add
adc
cmc
and
ret
aas
mov
and
jns
mov
movsl
and
stc
lret
xor
cs
fsubr
enter
mov
fbstp
mov
ss
cmp
mov
repz
movsl
sub
xor
dec
push
movsl
xchg
jb
decb
dec
sbb
bound
lret
popf
push
popa
lahf
inc
and
stos
fisubrs
decb
jmp
mov
add
ja
clc
or
outsl
cwtl
or
in
in
jb
jmp
xlat
jmp
insb
cs
cmp
push
xor
test
iret
rcll
mov
or
in
insl
lret
push
stos
lods
xchg
xchg
push
pop
sub
xor
pushf
iret
dec
push
inc
lahf
ss
jns
fildll
jb
adc
mov
xchg
cmp
imul
sahf
adc
sbbb
adc
lods
pop
cli
xor
xor
pop
lods
pop
pop
cli
es
jp
in
mov
loope
mov
shll
shlb
fistps
inc
fimull
call
jnp
mov
pop
mov
insb
cltd
lods
adc
sub
ret
push
cmpsb
jns
movsb
xor
inc
inc
cmp
cmpsl
jp
inc
fstpt
mov
push
jb
daa
repnz
xor
cmp
jp
push
stos
xchg
mov
ljmp
push
mov
and
aad
sub
push
ljmp
jmp
push
push
pop
ror
add
mov
pop
dec
mov
and
pop
movsl
jmp
xchg
pop
push
or
sub
pop
sub
pop
loop
push
xor
jo
mov
lahf
bound
jbe
jno
xor
jno
stos
dec
popf
pop
mov
push
dec
mov
sarb
push
ret
jno
hlt
cld
ficompl
pushf
loopne
fimull
rcrl
cmc
mov
pop
movsl
notl
fimuls
xor
lret
shrb
icebp
ret
lret
stos
xchg
cmp
jmp
bnd
xor
adc
movsl
push
push
mov
or
dec
add
fildl
fs
fs
mov
xchg
je
and
xor
pop
fs
xor
cmp
bound
fs
mov
mov
cmp
mov
data16
and
jb
jb
out
inc
mov
and
imul
int3
lods
repnz
in
out
cli
es
pop
xchg
or
cltd
pop
sbb
pushl
mov
aaa
fnsave
jbe
mov
inc
ss
testb
ss
enter
pusha
sbb
es
inc
popf
out
lret
scas
fistpl
sub
cs
cld
xchg
enter
sbb
mov
adc
cwtl
jno
in
cs
lea
fidivl
cwtl
fstps
mov
insb
adc
cwtl
jp
insb
sbb
out
test
and
popl
inc
mov
mul
add
ljmp
subl
scas
inc
stos
xchg
mov
cmp
add
dec
movsb
fadds
test
cmp
rsm
ret
imull
cmp
iret
inc
xor
mov
shl
movsl
test
movsb
andb
jae
mov
cmp
pop
pop
adc
out
pop
mov
test
and
mov
lret
scas
cmpsb
inc
repnz
mov
cmpsb
loopne
xchg
repz
mov
mov
push
orl
ret
pop
pop
movsl
inc
mov
adc
mov
addr16
divb
ds
add
iret
push
jo
es
cld
jle
aas
cmc
mov
jno
mov
mov
ja
dec
outsb
add
xor
faddl
clc
or
sbb
add
jp
test
rclb
movsl
dec
out
xlat
gs
loopne
mov
sub
icebp
and
mov
jp
dec
popa
inc
ret
jnp
inc
enter
aaa
fisubl
bound
or
mov
cli
shlb
pusha
nop
clc
sbb
ss
pusha
mov
sahf
cmpsb
jb
shr
xorl
inc
sub
addr16
mov
add
out
cmp
xor
push
jns
adc
jbe
push
xor
mov
jae
jg
dec
lea
test
jg
out
subb
mov
cld
add
clc
xchg
shl
mov
sahf
lret
dec
cmp
mov
inc
add
shrb
in
repnz
mov
and
out
mov
and
jae
shrb
enter
or
mov
jne
pop
sarb
add
add
dec
or
aam
sub
aam
shrl
daa
add
cmc
hlt
popa
push
out
loope
mov
shlb
or
loope
aad
dec
dec
scas
mov
loop
in
or
dec
dec
nop
lods
pop
mov
movsl
jns
dec
cltd
inc
inc
mov
stc
or
data16
push
clc
mov
pop
push
xchg
jp
imul
mov
sti
les
jne
sbb
add
pop
cmc
fdivrs
test
shlb
mov
and
pop
and
adc
and
sarb
pop
fiadds
add
and
push
adc
cmp
sbb
rolb
aaa
inc
and
push
push
xor
mov
das
repz
ds
data16
adc
sub
aas
xchg
test
xlat
nop
adc
dec
ficomps
pop
out
fsubrs
pushf
neg
pop
movsl
dec
xor
mov
call
xchg
adc
inc
psubb
fwait
test
sub
pop
mov
push
pop
push
sub
test
jae
popa
and
stos
nop
pop
shll
mov
adc
in
scas
leave
scas
scas
jne,pn
aaa
shl
pop
mov
dec
xchg
int3
push
xlat
xor
cmp
call
mov
popf
rcll
pop
shll
mov
movsl
inc
stos
and
mov
sarb
fnstsw
and
pushf
mov
loope
in
jo
sahf
mov
loope
loopne
or
or
mov
push
dec
aad
and
inc
cli
jno
movsl
add
dec
jns
sub
loopne
cmp
jp
iret
jle
in
and
jg
adc
mov
insb
jecxz
mov
or
xchg
int
fisttpl
rcl
push
push
jg
int
mov
jo
sti
jmp
ja
mov
push
ret
cmp
int
xlat
gs
push
xchg
enter
xor
inc
inc
dec
mov
icebp
add
adc
data16
fstpl
loope
pop
int
inc
or
xchg
sbb
imul
xchg
add
je
xor
ljmp
add
outsl
mov
xor
and
push
out
bound
andb
test
fs
xchg
jmp
movsl
push
cwtl
cmp
mov
cmp
fwait
lock
add
cmp
mov
sub
adc
pop
xlat
out
cmp
cmp
sbb
les
les
push
or
cmc
mov
mov
jge
hlt
cmpl
and
xor
lds
inc
or
mov
push
fwait
jle
in
push
inc
xor
sbb
out
push
arpl
insl
jns
aaa
pusha
shrb
inc
stos
in
out
fcompl
sbb
jecxz
out
sub
hlt
pop
xor
sub
jge
cmp
or
or
xor
movsb
shrl
dec
sbb
or
repnz
xchg
mov
pop
fstpl
mov
inc
test
fidivrs
inc
loope
xlat
stos
out
lea
mov
xlat
lret
pop
iret
mov
dec
jp
mov
movsb
add
and
mov
push
movsl
mov
or
mov
pop
movsb
sti
insl
cmpsb
xchg
gs
nop
mov
repnz
sub
inc
orl
pop
inc
mov
aad
rcrb
add
dec
sub
push
subb
test
pop
pop
sub
pop
mov
push
xchg
xchg
iret
mov
lahf
pop
pop
adc
sahf
xchg
push
aam
cmc
arpl
dec
jb
mov
or
in
aad
fld
into
mov
xorb
jo
dec
push
repz
ds
pop
pushf
mov
jle
sbb
push
js
in
enter
sub
cmc
sbb
mov
pop
or
in
fadds
test
shl
subb
mov
jmp
pop
fwait
sti
cld
xchg
test
incl
xor
jp
sbb
mov
add
sbb
leave
loop
mov
pop
pop
sti
and
jle
aad
jno
jmp
mov
sbb
ret
fmull
xchg
and
add
imul
addr16
arpl
shll
ds
add
subb
mov
out
lret
add
xor
orb
in
inc
xchg
fwait
push
test
add
jns
adc
mov
xchg
pop
jp
sbb
add
xor
aaa
mov
nop
mov
pop
push
jmp
pop
dec
movsl
adc
adc
ret
sbb
loop
pop
jmp
push
mov
xchg
mov
mov
pop
aas
sub
jge
adc
fisttps
lcall
outsb
jmp
mov
sbb
add
sbb
aas
gs
mov
leave
sub
cmp
cld
dec
lds
call
ficoml
xchg
sub
ljmp
pusha
sbb
mov
push
lods
loop
jnp
jecxz
es
rcrl
dec
loopne
int
inc
sti
xor
std
lock
lea
cmpsb
out
lcall
mov
jns
add
push
or
cmpsb
sbbl
call
out
jns
sti
mov
mov
cld
movsl
xor
mov
int3
imul
cmp
mov
fwait
cmp
in
dec
mov
mov
pop
movsb
stos
jp
bound
mov
pop
xor
inc
or
jle
imul
push
push
movsb
cmp
lods
sbbb
cld
lea
xchg
lcall
xor
clc
adc
stc
push
pop
and
rcr
xor
or
push
ret
and
xor
cmp
mov
xor
inc
aam
fbstp
faddp
sbb
sbb
cltd
dec
mov
and
cmc
inc
leave
inc
mov
xor
sub
adc
xor
add
xchg
push
and
add
pop
or
icebp
add
lods
xchg
xchg
shrl
lret
or
stos
rorl
popf
push
idivb
sub
sub
cmove
jecxz
enter
jge
fisubs
inc
clc
mov
js
rclb
pop
fisubrs
call
adc
imul
mov
and
ss
into
xchg
adc
add
push
call
push
or
jbe
popf
dec
xchg
mov
jge
pop
adc
ss
loopne
mov
repz
adc
gs
sub
adcl
fdivp
arpl
adc
dec
jecxz
mov
sbb
lods
adc
push
pushf
mov
dec
fildl
mov
mov
add
adc
dec
add
insl
cs
xchg
por
frstor
dec
push
rcrb
fs
xor
adc
es
push
dec
xor
orb
lcall
dec
xor
test
add
rcl
jmp
jns
and
mov
fildll
into
push
sbb
sbb
in
in
mov
loope,pt
push
or
mov
les
psubw
popa
or
lret
xor
hlt
mov
leave
ret
xchg
pop
out
sub
pop
sbb
pop
cs
jle
xchg
sahf
ja
mull
scas
push
xor
bound
pop
loop
ret
mov
aaa
add
dec
pop
jle
adc
jns
adc
cmp
rcrl
adc
icebp
add
fsubrl
sbb
and
lods
out
bound
bound
pop
jne
into
adc
cmp
sbb
adc
cli
fdiv
cmp
and
or
fdiv
mov
aas
dec
add
fstl
mov
lret
mov
in
dec
push
out
icebp
popf
mov
sbb
cmp
jle
cmc
pop
jecxz
test
sbb
dec
stos
jbe
jnp
lods
popf
push
xchg
mov
lds
scas
jo
lret
lea
ds
pop
sub
pushl
add
cmp
nop
shrl
sbb
fs
push
jnp
jle
cmp
fiaddl
lods
xchg
sbb
jmp
cmp
stos
loopne
popf
sbb
dec
aad
cmp
pushf
scas
add
rclb
mov
push
lret
in
aam
mov
adc
loopne
call
jb
and
repnz
in
sub
cmp
into
and
xchg
dec
into
addl
xorl
in
and
xchg
fildl
adcl
add
sub
mov
subl
enter
pop
mov
sub
jmp
mov
call
mov
pusha
dec
hlt
mov
mov
fdivr
rcrl
shlb
push
orl
jns
sub
orb
jnp
in
out
mov
push
outsl
dec
sbb
jns
rol
or
sbb
push
leave
outsl
mov
notb
sarb
push
insl
sarb
mov
pop
jecxz
insl
mov
pop
pop
test
xchg
cmp
decl
or
sbb
insl
lds
inc
fsubs
xor
clc
sarb
daa
sbb
sbb
inc
dec
mov
and
sub
pop
stos
push
rdmsr
mov
clc
cwtl
dec
addr16
add
hlt
inc
arpl
rolb
push
std
jnp
cmp
pop
jnp
mov
cmpsl
and
test
inc
push
fs
dec
push
xlat
imul
jg
ljmp
xlat
mov
push
movsl
clc
jl
mov
test
fildll
in
loop
call
std
xchg
or
mov
js
out
js
les
cmp
lea
xlat
sbb
inc
leave
add
test
xor
adc
sub
out
ds
test
push
fprem1
ljmp
dec
dec
adc
out
cmc
in
dec
icebp
or
lds
sbb
jl
mov
jnp
test
pop
stos
clc
mov
jne
mov
fptan
sbb
test
es
test
repz
js
sbb
hlt
xor
inc
jne
or
jb
add
imul
mov
sbb
in
mov
shrb
lods
jb
jle
in
xchg
inc
mov
mov
mov
jne
out
mov
mov
out
into
aad
mov
rorl
sbb
arpl
mov
hlt
push
shrb
add
dec
push
add
leave
mov
cwtl
cli
nop
arpl
pop
loopne
or
add
mov
mov
lahf
add
sbbl
test
mov
pavgb
cmp
das
or
fidivrl
push
leave
cmp
dec
push
test
inc
mov
ret
dec
xor
push
adc
push
xchg
adc
sar
pop
pop
ret
enter
scas
in
lahf
push
imul
shlb
aam
hlt
and
mov
adc
sub
mov
mov
out
xchg
jl
call
adc
or
push
jle
and
stos
aad
int3
cmp
mov
jmp
adc
xchg
cmp
xchg
frstor
mov
pop
mov
in
stc
sbb
mov
mov
jmp
add
leave
insb
mov
jg
cmpsl
adc
mov
andl
fwait
xorl
and
jo
orl
pop
stos
ret
inc
test
leave
cwtl
test
test
or
movsb
add
xchg
pop
adc
sub
pop
add
aaa
sub
sbb
aad
cld
jg
sub
scas
and
mov
inc
push
push
mov
sub
test
iret
sti
arpl
cmp
mov
pop
lds
arpl
mov
mov
and
loope
in
and
imul
xor
add
frstor
js,pn
call
ljmp
addr16
repnz
dec
pop
vmovsd
cmc
and
fadds
rolb
test
test
cli
pop
mov
push
mov
stc
out
xchg
stc
aam
mov
roll
in
inc
push
insl
icebp
roll
mov
dec
mov
cltd
in
in
jbe
test
stc
mov
push
push
addr16
jb
dec
push
sub
adc
scas
imul
fiadds
sbb
pushf
int3
push
adc
cltd
or
cmp
cmp
cmpsl
and
out
pop
mov
jnp
jecxz
mov
pop
or
bound
xor
mov
sub
cs
mov
and
ret
sbb
xor
or
xor
push
sub
das
sbb
add
push
fiadds
imul
sahf
mov
stos
cbtw
jle
into
punpckhdq
mov
mov
cli
jg
add
test
gs
push
sub
jge
dec
loop
xchg
cmp
jns
add
mov
scas
adc
sub
adc
js
std
inc
lret
lret
xchg
adc
cmp
or
mov
add
fwait
addb
daa
jge
std
xchg
jl
push
dec
cmpsl
data16
jnp,pn
pop
push
loop
mov
sub
push
mov
dec
int3
or
adc
adc
call
mov
adc
dec
iret
jmp
repz
mov
cwtl
outsl
mov
or
sbb
mov
lret
cmp
pop
xchg
outsb
addr16
jmp
fwait
movsl
and
cs
sbb
outsl
xor
clc
int
cmp
adc
inc
pop
jp
push
adc
dec
mov
rcrl
int3
xchg
sbb
xchg
cmpsl
cwtl
shl
cwtl
aas
xor
shll
push
cmp
and
xchg
add
inc
lcall
mov
inc
push
test
jno
movsb
lret
stos
adc
add
sti
lock
mov
cwtl
enter
daa
inc
fs
cmp
and
loop
hlt
fsubrl
frstor
pushf
push
movsb
jae
aaa
mov
lods
and
popa
mov
cmp
pop
jno
push
movsb
and
or
xchg
mov
icebp
jns
cld
xor
outsb
sahf
lret
pop
dec
pop
sbb
sub
sbb
jnp
add
xchg
lock
xor
in
cwtl
xchg
and
les
dec
js
pop
out
mov
movsl
pop
iret
xor
cs
xchg
into
xchg
mov
xchg
or
in
mov
mov
jns
sbb
cmpsb
dec
cmpsl
adc
ja
xchg
mov
mov
and
and
test
xor
stos
mov
mov
xchg
rol
movsl
mov
xlat
pop
sarb
jae
imul
mov
jnp
cli
push
mov
mov
out
mov
das
pushf
push
mul
jne
pushf
or
popa
aam
nop
insb
add
jecxz
jnp
push
or
inc
xlat
push
sub
mov
xor
mov
xlat
out
mov
xchg
test
jno
int
cmp
ja
push
repz
mov
pop
in
ret
out
in
stc
jno
dec
clc
mov
mov
jl
scas
push
pop
mov
test
add
xchg
jge
call
xor
dec
push
insb
shl
adc
jnp
pop
push
add
cmp
pop
mov
mov
cwtl
mov
std
addb
sbb
in
jne,pn
pushf
into
out
popa
outsl
mov
push
xlat
fsubrl
push
xchg
scas
mov
cmp
mov
clc
nop
and
or
push
jae
pop
and
movl
cmp
push
push
dec
push
jmp
rol
mov
lds
adc
scas
cmp
add
mov
lds
out
push
adc
clc
inc
dec
ds
inc
inc
cmp
add
push
movb
inc
addl
cmp
dec
mov
cltd
fnstenv
inc
lcall
dec
xlat
jecxz
add
addl
test
int
ljmp
inc
cltd
cmc
dec
dec
sti
mov
aam
movsb
xor
mov
xor
enter
lds
push
bound
cmc
xor
in
lds
xchg
jo
xor
mov
rcrb
ficomps
dec
cmp
jns
xchg
xor
cmp
mov
imul
outsb
pop
fwait
stc
mov
xchg
jbe
sub
cmp
shll
lret
pop
fsubrp
pop
and
dec
in
iret
adc
xchg
mov
pop
fnstcw
leave
cld
ret
fisttpl
aas
cs
sbb
loopne
out
cmpsb
push
xchg
sbb
jno
clc
mov
inc
roll
cmp
xchg
jno
push
xchg
sti
pop
push
fsubs
clc
pop
cmc
or
mov
pop
js
lods
push
jg
or
pop
jmp
jae
pop
pusha
and
xorl
mov
pop
sbb
sbb
mov
mov
test
bound
loopne
fnsave
add
cmpl
cmpsl
je
mov
data16
scas
xor
add
addr16
pop
jge
jecxz
hlt
add
sub
ret
pop
ret
pmulhw
pop
push
ret
mov
lea
stos
and
add
sbb
sbb
mov
xor
pop
mov
push
cmc
xor
and
in
cli
push
sbb
arpl
push
loopne
cmp
cmpsb
and
lahf
sbb
sbb
aam
add
int
fs
mov
adc
mov
sub
paddsb
jecxz
jo
pop
push
adc
cs
xor
xor
or
idivb
add
add
rclb
pop
jae
mov
and
jno
inc
cmp
js
stos
jne
lods
mov
pop
inc
das
femms
loop
fstpl
cmpsl
hlt
test
popf
mov
je
iret
call
adc
scas
pop
repnz
dec
sbb
jge
je
out
pop
push
test
or
in
out
notb
cld
dec
data16
lret
lcall
fs
int
inc
scas
xchg
mov
mov
divl
cmp
sub
test
rep
add
jp
pop
cltd
mov
push
jns
clc
imulb
andl
mov
cmp
push
shll
inc
outsb
cli
icebp
or
adc
mov
mov
test
in
js
and
add
mov
ljmp
push
mov
mov
in
mov
adcb
imulb
or
pop
mov
add
push
dec
or
push
cld
and
xchg
sbb
jo
ret
xchg
cld
xchg
mov
test
lahf
cmpsl
in
sub
push
jnp
cmp
jp
jns
sbb
shlb
aas
movsb
ljmp
mov
pop
es
sub
adcb
inc
pop
pop
mov
loope
xor
pop
and
add
sbb
cltd
cli
lret
mov
loopne
xchg
inc
cmpsl
idiv
sub
mov
push
iret
ja
loopne
out
mov
jp
iret
hlt
loope
jle
das
mov
dec
clc
cmpb
mov
push
mov
pop
xchg
mov
pushf
pop
mov
inc
push
imul
inc
fisubrs
inc
sbb
xchg
in
sub
xchg
or
aam
xchg
dec
lds
mov
aaa
sbb
cs
sub
or
jl,pt
inc
call
das
idiv
shl
inc
push
dec
sbb
jecxz
jb
sub
arpl
xlat
sbb
jb
cmpsb
mov
out
fmul
ffree
fsts
mov
pusha
addl
xor
dec
dec
adc
lea
sub
dec
xchg
or
fldpi
test
xchg
aam
sbb
sub
adc
rcll
clc
mov
push
sub
jg
xor
cmpsl
push
test
and
shl
sbbl
sti
adc
addr16
fimuls
adc
imul
adc
in
nop
loop
pop
jno
aad
mov
mov
mov
cmpsb
mov
inc
out
in
loop
dec
dec
shlb
xor
std
out
xchg
xor
pop
push
fs
mov
fisubrl
xor
or
adc
dec
mov
add
lahf
call
pop
fiadds
push
pop
scas
addr16
outsb
push
jl
mov
pop
dec
fiaddl
dec
mov
or
push
add
sub
pop
fs
or
stos
sahf
push
mov
push
mov
movsl
les
out
mov
add
clc
pop
sub
and
repz
data16
jae
inc
xchg
aam
outsl
pop
lods
sub
les
leave
je
lahf
rcrl
push
fdivs
faddp
or
push
nop
in
push
pop
jecxz
jg
fwait
inc
stos
cmp
lret
sbb
jmp
or
jnp
movsb
dec
dec
sub
fisubs
mov
jns
or
fidivs
in
pop
mov
imul
outsb
or
int
and
inc
ret
push
dec
arpl
and
sub
sahf
pop
and
xlat
fadds
or
outsl
cltd
jle
mov
stc
dec
fisubl
sbb
sub
sbb
repnz
sbb
repz
pop
sbb
dec
icebp
push
lahf
arpl
xchg
mov
mov
mov
dec
std
xchg
and
pop
cmp
mov
xor
sbb
pushf
sbb
or
scas
imul
call
test
aam
pop
xchg
out
push
cwtl
clc
xor
cmp
adc
out
sub
cli
dec
imul
addr16
mov
cmc
rcrb
add
in
sub
mov
fs
inc
and
loope
add
scas
into
push
pop
test
sbb
mov
es
sub
jle
and
inc
push
sbb
dec
int
jno
adc
dec
sbb
push
mov
mov
cld
sbb
daa
jl
ret
mov
dec
daa
mov
mov
lret
pop
inc
shlb
cwtl
lret
movsl
stos
cmp
and
or
dec
filds
add
ret
pushf
or
fisubrl
test
ret
push
outsb
inc
addr16
std
mov
push
data16
jne
jecxz
and
leave
add
push
lret
cmp
fs
jecxz
sub
into
popf
add
test
cmpsl
sbb
inc
jnp
jmp
mov
movsl
bound
aad
repnz
loope
or
test
jmp
test
adc
in
or
ret
clc
mov
pop
ret
pop
outsl
mov
movsl
push
inc
mov
inc
xchg
aas
fisubrs
xchg
push
fstpl
push
stos
mov
inc
mov
shll
stc
sub
adc
je
scas
aas
aad
ljmp
and
jns
push
insb
pop
mov
jl
andb
stc
call
xchg
inc
les
test
push
mov
popf
bound
push
mov
cmp
aas
xor
out
inc
adc
push
mov
mov
jne
cmc
or
test
mov
inc
inc
fnstenv
out
mov
and
and
dec
cmp
and
lcall
and
or
out
pop
cltd
xchg
jns
lds
cmp
lahf
jp
je
mov
ret
mov
xor
divl
sbb
pop
lahf
push
stos
mov
fnsave
inc
fcoms
adc
fs
sahf
int3
adc
push
xor
cwtl
lods
out
ficomps
jno
sub
push
call
xchg
ffree
pop
add
stos
and
aad
in
bound
popa
pop
stc
sub
push
pop
xor
fs
int3
sub
mov
pop
lock
bound
cmp
into
xchg
xor
out
cmc
sbb
push
shrl
xor
cmp
hlt
jle
mov
mov
aam
lret
inc
ja
dec
jnp
dec
fisubrl
in
lea
mov
cld
ss
mov
add
sarl
aad
imull
mov
arpl
mov
sbb
xchg
add
jnp
dec
test
sbb
sbb
loope
pop
sub
xor
in
roll
xchg
imul
mull
fcomps
out
jl
pop
mov
push
sub
fs
fiadds
pop
enter
pop
incl
lret
cmpsb
and
inc
mov
lahf
and
out
jno
sti
pop
jmp
sti
pop
mov
stc
xlat
lea
mov
jle
jbe
nop
push
dec
cmpsb
cmc
bound
inc
xchg
xchg
arpl
in
xor
xor
sbb
mov
mov
mov
adc
cmp
lcall
xorl
fstps
dec
or
xor
mov
leave
testb
or
ss
je
mov
hlt
cld
cmp
pop
sti
xchg
loopne
cli
ss
or
mov
pop
sti
fistpl
cmpl
xchg
jp
rcrb
and
xchg
sub
jecxz
xor
mov
lahf
jmp
lahf
pushl
cli
addr16
cs
jo
xor
and
xchg
rorb
inc
jne
or
rcr
jae
lret
rcr
dec
bound
push
sbb
jo
mov
adc
imull
mov
jno
sahf
jnp
sbb
dec
push
mov
cmpsb
shr
movsl
mov
xor
sbb
rol
aam
pop
dec
push
pop
loope
ret
xchg
jg
cmpsl
jb
and
imul
push
jge
fstpt
push
fwait
hlt
dec
sub
dec
lret
dec
cmp
in
arpl
mov
xchg
inc
rol
lods
mov
xor
mov
pop
inc
add
roll
xchg
sub
pop
dec
add
mov
mov
push
arpl
lahf
ret
insl
xor
sbbl
pop
add
cmp
or
pop
or
movsl
fmulp
sub
insb
lret
mov
sarl
inc
movsl
push
jnp
push
or
or
repnz
jbe
mov
sub
sbb
cmp
ret
cli
push
inc
push
pop
popf
daa
imul
std
ret
inc
movsb
mov
xchg
mov
pushf
sbb
iret
out
mov
inc
or
lahf
ds
cs
leave
decl
push
jmp
gs
dec
sbb
fidivl
scas
xchg
outsl
arpl
xchg
stos
fstp
inc
or
xor
jge
mov
clc
mov
or
and
xchg
int3
clc
and
lea
lcall
das
data16
adc
imul
imul
gs
mov
jmp
and
mov
arpl
mov
js
pop
xor
ds
adc
movsb
pop
lahf
imul
mov
push
scas
add
sub
inc
push
in
mov
cmp
mov
sub
cmp
pop
popa
mov
or
daa
or
jo
int3
arpl
sub
cwtl
mov
mov
fbstp
xor
push
inc
ficoml
sbbb
push
mov
cmp
dec
cwtl
mov
and
stc
movsb
loope
push
mov
pop
fsts
add
popa
inc
mov
push
pop
xchg
mov
mov
pop
adc
aam
into
push
add
adc
cltd
sub
push
aad
push
push
pusha
imul
es
mov
int
push
adc
pop
xchg
add
sub
sbb
pop
in
inc
fldt
adc
cli
push
xchg
insl
add
pushw
pop
sub
leave
cmp
cmpsb
fucomip
or
add
repz
inc
sbb
xchg
xchg
fldt
in
push
inc
sarb
int3
cmp
nop
test
or
loop
cs
inc
enter
xlat
sub
lcall
scas
icebp
mov
andb
inc
add
sbb
loopne
xor
out
and
mov
mov
jmp
insb
loop
pop
sbb
faddp
pusha
add
inc
add
pop
je
into
push
dec
and
jp
fs
xor
jp
mov
int3
and
jl
pop
test
arpl
push
add
or
dec
add
add
jae
cltd
arpl
loopne
cltd
movsb
push
rcll
pop
and
scas
std
cmpsb
mov
out
loope
test
xchg
shl
std
push
shlb
loop
jae
shr
dec
adc
cmp
mov
mov
and
jecxz
mov
xor
xchg
out
cld
loope
dec
xor
mov
nop
push
sarl
push
int3
fsub
outsb
and
mov
push
mov
inc
ljmp
cmpb
les
push
cmp
je
and
leave
movsl
callw
or
mov
arpl
repnz
shlb
repz
xor
jae
push
pop
ret
sub
xor
jl
pop
pop
sbb
dec
inc
std
mov
cli
in
inc
sub
in
mov
out
aas
jne
jo
inc
dec
pop
lods
cld
jo
stos
cwtl
mov
lret
xor
cld
test
mov
mov
ret
loop
outsb
inc
cmp
mov
dec
andl
enter
xchg
cltd
add
mov
loope
pop
mov
cmp
pop
add
repnz
sub
mov
mov
pop
pusha
jb
adc
adc
popa
adc
dec
jl
mov
xchg
adc
mulb
faddl
adc
jecxz
cmp
std
adcl
add
loopne
popf
das
test
push
jb
sbb
or
addr16
mov
clc
add
ret
or
in
out
ret
push
rcrl
into
leave
lret
call
xor
outsl
push
movsb
push
ficoms
dec
stc
push
pop
cmp
sub
mov
jno
add
rorl
mov
out
sarl
out
xchg
jmp
jns
and
mov
ret
sbb
repnz
and
adc
das
mov
add
jo
cmp
jl
xchg
daa
or
push
outsl
rolb
lcall
lock
push
sub
sub
mov
dec
fistpll
cmp
xor
inc
call
fdivrl
sti
inc
stos
mov
push
adc
push
jo
cmp
addl
hlt
test
pop
jle
xchg
int
xchg
jno
ja
mov
jns
rcll
xorb
fbstp
nop
rcrb
out
sbb
fdivrl
out
xor
mov
cmp
fcomi
test
xchg
dec
loope
inc
repz
fistl
and
or
mov
and
cmp
lea
sar
cmp
mov
cmp
push
dec
dec
push
fs
dec
hlt
add
mov
xchg
and
cmp
jno
dec
jne
dec
mov
in
mov
dec
ja
inc
jbe
and
mov
sub
mov
push
int3
mov
jmp
mov
dec
popf
lds
jg
sub
jbe
arpl
lahf
pusha
mov
push
shrb
out
push
xchg
outsl
movsb
inc
xchg
leave
lcall
xchg
mov
pop
cmp
inc
fmul
sbb
mov
ss
int3
mov
xchg
je
adc
loop
cmpsl
mov
push
cs
pop
in
cmpsb
test
or
imul
arpl
movsl
daa
sbb
or
fsub
mov
xor
rclb
xchg
enter
pop
add
dec
insb
ja
sub
sbb
sub
test
mov
adc
pop
xor
push
lods
jge
shl
sbb
sub
mov
jbe
popf
cmc
pushf
sub
sub
gs
pop
mov
lock
loope
je
mov
sahf
inc
outsb
out
push
pop
add
jp
jp
cmpsb
in
decl
mov
mov
lret
into
mov
das
mov
iret
stos
inc
mov
rclb
jmp
scas
sub
scas
mov
inc
cmp
insl
out
roll
lret
cmp
cld
out
movsb
xchg
push
cmp
xchg
rorl
pop
jae
mov
ret
test
mov
insl
aad
loop
sbb
mov
inc
xchg
jne
ficompl
push
ljmp
aaa
loopne
in
pop
xchg
xchg
fidivrs
xor
repz
aas
and
les
lret
cld
in
mov
mov
mov
mov
cmp
ja
clc
bound
add
xchg
cmp
divb
jae
jno
add
cwtl
out
pop
lcall
xor
inc
mov
loopne
lahf
mov
cs
fdivl
push
xlat
cmp
enter
xchg
and
cmpsl
or
inc
cmp
js
call
mov
subb
fstps
rorb
push
push
pop
fsubrs
iret
inc
and
xor
xorb
sti
std
xchg
outsb
inc
push
cs
lods
jge
mov
gs
stc
mov
xor
jbe
or
shl
dec
cmpsl
fistl
outsb
xchg
mov
es
inc
scas
enter
outsl
nop
leave
and
jb
pandn
shl
mov
pop
popl
daa
jb
jbe
mov
lret
shrl
jle
scas
jge
je
sti
mov
jl
sbb
lahf
shlb
test
inc
sarl
dec
push
jo
fwait
pusha
into
clc
rorb
mov
push
int
pop
cld
movb
test
pop
adc
pop
stos
add
mov
xor
jmp
cmp
jecxz
subl
push
cmc
add
lock
sub
jle
lds
pop
sbb
add
fnsave
fistpl
inc
scas
mov
adc
and
dec
in
jo
scas
push
or
xchg
mov
arpl
sbb
jg
and
xchg
inc
fsubrl
mov
mov
mov
test
pop
scas
adc
mov
je
inc
popa
sub
mov
xchg
aaa
out
shll
adc
adc
cmp
les
fidivrl
decb
sbb
pop
in
or
mov
mov
add
xchg
xchg
lods
lcall
int3
adc
fsubl
push
mov
push
inc
and
jae
stos
jae
popf
dec
fs
adc
xor
or
shll
pop
ret
jae
mov
imul
mov
imul
inc
dec
aad
fisubs
jl
push
lea
test
aam
or
data16
push
jmp
je,pt
repnz
adc
cwtl
sub
pop
mov
lret
sarl
jmp
pop
mov
jle
int
push
clc
cmp
sbb
jle
loopne
std
xor
je
ret
add
bound
cmp
packsswb
aas
mov
sbb
jae
and
shlb
cmp
fucomip
mov
stos
inc
dec
cmp
adc
or
push
pop
push
dec
lret
shrb
dec
arpl
xorb
sub
popa
ja
or
insb
lret
fsubrs
mov
lahf
in
mov
loope
jg
pop
xor
orl
mov
addl
dec
and
or
adc
icebp
test
rcrl
lret
cmpsb
test
ja
stc
loopne
ret
pop
pop
mov
mov
das
sbb
cli
outsl
xlat
cmpl
cmp
cmp
cmp
jecxz
cmp
inc
shrb
jecxz
rol
in
lods
sbb
ret
push
sub
js
arpl
pushf
insb
lahf
clc
jo
in
hlt
jmp
mov
push
pop
lods
push
dec
ret
pop
out
jns
lock
hlt
jle
mov
scas
jg
mov
cltd
xchg
xchg
cwtl
jp
mov
mov
jnp
jle
testl
test
rolb
filds
inc
jae
xchg
scas
xor
ljmp
mov
jp
es
sbb
insl
mov
inc
xlat
dec
push
jo
xchg
or
mov
xlat
xchg
mov
scas
push
xchg
daa
in
int3
out
out
jns
dec
dec
shlw
mov
mov
test
loop
dec
mov
jle
adc
cmp
or
and
pop
cmp
dec
cmpsb
push
lcall
adc
inc
sub
lcall
daa
mov
lods
or
mov
fnstsw
or
into
sbb
sbb
xor
enter
mov
or
ret
in
das
loopne
sub
xchg
mov
rolb
popa
and
sbb
sbb
push
cmc
adc
xor
pop
dec
jae
mov
cli
in
ljmp
jmp
mov
movsl
ret
cld
repz
pop
andb
out
loop
jo
cmp
lods
sbb
fiadds
das
mov
ds
sbb
pop
jns
xor
mov
dec
mov
mov
out
sbb
cmpsb
add
fistpl
stos
xorb
test
xchg
push
data16
dec
jmp
icebp
push
jle
adc
push
mov
jne
ds
add
mov
movsb
push
or
pushf
sub
push
mov
repnz
cmp
ds
cmpsb
out
sub
rolb
sbb
cmpsb
xchg
add
push
mov
push
push
ljmp
push
and
jmp
ret
and
icebp
fldcw
add
mov
dec
loope
pop
in
cwtl
cld
xchg
pusha
neg
mov
push
icebp
and
pop
cmp
fsubs
jne
movsb
ja
nop
lahf
test
std
pusha
mov
xor
ret
dec
outsb
mov
xorl
push
fisttpll
mov
jns
stos
out
das
out
mov
cmpsb
push
adc
add
sub
jg
arpl
inc
sbb
stos
addr16
push
sbb
fs
out
das
fdiv
lret
xchg
mov
pop
jmp
repz
pop
stc
mov
fnstcw
push
gs
vprotd
into
movsb
cli
and
fldl
push
pop
aam
xchg
pop
into
out
xor
fcompl
cld
xchg
inc
and
out
fs
int3
adc
in
mov
js
ljmp
sub
push
mov
xor
pushf
inc
pop
out
scas
xor
sub
sarl
push
jne
dec
out
adc
les
mov
dec
adc
clc
in
nop
push
addr16
mov
jns
out
outsb
in
insb
push
xchg
push
mov
inc
push
jb
dec
cwtl
cmp
in
cmp
outsb
and
dec
hlt
mov
xor
fadds
jmp
jecxz
xchg
xchg
lret
sbb
mov
mov
xchg
mov
pop
jo
sbb
cmp
ret
sub
sub
mov
mov
push
add
ljmp
adc
cltd
and
stos
ret
std
dec
aam
nop
pop
xlat
enter
cli
inc
xor
cmpsl
ret
idivb
xchg
fidivrs
pop
jg
cmc
cmp
rcl
movsl
pop
mov
and
adc
stos
rcrl
xchg
es
inc
sbb
sbb
addr16
daa
xor
mov
pusha
lret
xor
xchg
add
ljmp
or
or
shll
mov
pop
sbb
arpl
repnz
adc
jmp
push
inc
cmc
cmp
out
stc
in
sbb
clc
mov
lods
mov
ljmp
mov
mov
cltd
adc
jbe
adc
ret
lods
dec
jbe
bound
repnz
movb
mov
test
loopne
aaa
pop
push
add
xchg
mov
popa
call
loopne
cltd
data16
xchg
data16
inc
out
xor
adcb
jl
fbstp
dec
mov
dec
jne
lahf
loop
pusha
pop
xor
adc
clc
adc
inc
popa
mov
mov
pop
pop
loope
sbb
cltd
cmp
sbbb
ret
xchg
xchg
rcl
scas
call
adc
insl
orl
mov
jmp
nop
mov
subl
lahf
push
mov
cmp
mov
iret
mov
lods
push
cltd
mov
std
in
xchg
into
xor
and
push
pop
sarb
sub
cmp
push
ftst
mov
iret
and
xorb
mov
stc
cmp
mov
add
adc
inc
sub
mov
pop
lcall
pop
push
enter
mov
sbb
in
aam
ljmp
in
out
cmp
rcrl
jns
jne
cmp
mov
or
xchg
lods
movsb
les
push
xor
mov
xor
popa
mov
sbb
sub
sti
ret
or
add
cmp
dec
push
enter
mov
test
jge
lods
or
sub
pop
xchg
adcb
lods
addr16
mov
cmp
lret
sbb
sti
test
xchg
not
aas
out
int
cmpsb
les
pop
lods
arpl
mov
add
outsb
mov
fisubrs
jg
mov
cmpsl
xchg
or
xor
or
mov
inc
jecxz
mov
push
shl
cmp
jg
sbb
push
jp
sti
aas
add
sub
sub
or
in
lods
or
mov
sub
mov
push
xlat
sarl
add
mov
mov
stc
xor
and
pop
and
shll
iret
xor
shlb
push
mov
push
jmp
inc
cmp
sub
mov
adc
movsl
lfence
push
call
pop
fcoms
repnz
iret
fwait
add
pop
stc
arpl
mov
jl
mov
out
ss
shll
test
lods
aam
jge
xchg
iret
or
jp
rcrb
and
ljmp
cltd
test
shl
addr16
pop
xchg
icebp
and
stos
rorb
psubw
mov
jp,pn
adc
mov
ficoms
jnp
dec
add
jbe
mov
xchg
inc
push
pop
out
xchg
pop
push
mov
sahf
adc
in
cmp
dec
sbb
mov
fwait
pop
outsl
xchg
lcall
push
filds
icebp
js
push
mov
push
mov
test
fisubl
pusha
xor
xor
in
inc
adc
loopne
sub
cli
jp
xor
push
sarb
mov
push
in
add
cld
push
or
adc
add
ss
sub
test
sbb
pop
xor
mov
out
adc
movsl
test
sub
xchg
sub
ret
lods
enter
push
dec
addl
cs
test
xchg
and
and
ja
not
jle
or
mov
aas
xchg
mov
add
jne
andl
cmpl
faddl
xlat
popa
pop
sbb
ss
mov
mov
dec
scas
dec
stos
jmp
xor
xchg
and
insl
movsb
inc
sahf
fwait
or
frstor
js
in
insl
add
add
mov
into
and
pushl
orl
notl
clc
sub
loope
jo
shlb
pop
or
mov
aaa
or
cmp
inc
sti
adc
pop
adc
fnstcw
cs
aaa
jge
mov
xlat
imul
mov
mov
or
or
push
aas
ret
xchg
fadds
xor
shrl
out
int3
xchg
mov
outsl
adcb
incb
sbb
add
adc
push
aad
sarl
jp
lret
and
push
add
insb
and
mov
mov
inc
enter
test
lds
adc
jge
pop
mov
pop
mov
xor
into
lock
cmp
inc
lret
and
cmp
pop
out
sub
adc
jl
jmp
or
fwait
out
loope
xabort
push
xchg
ljmp
ret
and
or
sar
aas
xchg
dec
test
mov
lods
shlb
cmpsl
fcmovnb
mov
mov
push
jge
add
stos
stos
xor
icebp
iret
sub
in
cmp
mov
mov
xchg
xchg
fidivrl
push
test
dec
xor
sahf
sub
adc
out
lret
dec
xchg
mov
mov
mov
imul
adc
mov
pop
enter
cmp
jnp
cmp
fbstp
movsl
lock
xchg
adc
sub
sbb
pop
pop
pusha
cmp
mov
add
mov
jae
cmp
dec
push
push
dec
fisttpl
mov
fwait
hlt
rorb
push
lods
fwait
pop
outsl
xor
xchg
orl
lock
inc
xchg
rcrl
loopne
dec
lods
pop
jle
add
sbb
xchg
mov
cmp
sub
fwait
shl
cmp
pop
mov
adc
dec
jne
clc
lock
je
lds
mov
idivb
int3
jle
stos
mov
xchg
sbb
mov
mov
pushf
in
sarb
mov
scas
push
shr
mov
test
dec
pop
mov
test
sub
dec
insb
nop
fwait
mov
icebp
jecxz
cmp
stos
pop
sbb
iret
cmp
je
inc
clc
lods
je
pop
xor
mov
popf
cmp
mov
push
xor
sbb
mov
xor
fnstsw
xchg
and
rorl
shll
movsl
incb
pop
push
mov
dec
fstp
movl
adcl
push
fdiv
add
std
jmp
pop
push
add
imul
dec
cmpsl
hlt
xor
es
stos
test
dec
inc
jp
sahf
shlb
movsb
add
ja
test
cmp
clc
addr16
mov
outsl
popa
inc
test
movl
lods
and
push
xchg
outsl
pop
sbb
outsb
imul
pop
sbb
pop
fs
je
xor
fwait
mov
dec
fs
push
inc
loopne
shrb
jge
repnz
pop
xor
lea
jl
inc
mov
mov
add
popf
andb
cmp
push
jle
in
cld
cld
sbb
xor
sbb
dec
imul
mov
push
mov
rcrb
sub
fnstcw
lock
jnp
mov
jbe
inc
jne
lods
jmp
add
dec
pop
and
mov
mov
movhlps
es
sbb
rcrb
adc
inc
loope
dec
in
shlb
inc
or
ljmp
shll
fadds
addr16
test
call
bound
mov
sub
dec
je
or
lahf
and
mov
jnp
xor
inc
nop
jl
insb
cmp
and
ficoml
int3
cmp
daa
call
push
sub
stc
fldz
lea
or
mov
mov
mov
dec
add
mov
lret
or
inc
mov
mov
pusha
or
test
mov
int3
xchg
pop
inc
jae
pop
xlat
jle
aam
out
mov
sbb
add
into
out
imul
stc
xor
nop
popf
jno
js
addr16
inc
sbb
testb
fidivrs
jne
or
inc
aaa
and
pop
sub
sbbl
add
outsb
fcoml
dec
or
aas
inc
ret
xor
pop
out
dec
aas
xchg
sub
xchg
imul
push
fildll
pop
je
fucom
cmc
sbb
in
into
jp
mov
leave
fildll
in
enter
test
imul
icebp
xchg
pop
jge
popf
bound
insb
mov
jae
daa
xor
mov
je
mov
add
mov
jbe
fwait
mov
pop
test
sub
dec
pop
dec
xchg
leave
sub
push
sub
xor
outsl
inc
add
addr16
add
ljmp
int
pop
ret
fsts
add
lret
shl
sahf
fiaddl
pop
leave
push
lea
cmp
push
lods
cmpsl
mov
lcall
repz
adc
jne
xor
mov
jb
addr16
cmp
outsl
imull
imul
test
fwait
fwait
sbb
inc
mov
bound
jge
ret
and
out
jp
sbb
aad
dec
jb
mov
jae
lock
bound
lea
cmp
xor
icebp
lret
imul
lahf
lods
mov
popf
nop
icebp
aad
stc
mov
xchg
test
pop
xor
pop
repnz
cmpsl
jp
or
pusha
pop
sti
stc
inc
mov
adc
inc
mov
es
fsubrp
out
sti
mov
sbb
call
jnp
mov
dec
mov
adc
add
orl
roll
sub
push
inc
pop
xchg
xor
or
sarl
push
sbb
mov
dec
add
mov
dec
leave
outsl
sub
or
adc
pop
or
out
adc
fmul
add
or
or
sbb
test
addb
push
rorb
jl
into
mov
inc
sub
push
ss
xlat
aam
loopne
call
cmp
push
mov
push
rcll
mov
mov
jo
xchg
or
in
leave
roll
mov
and
sbb
jb
jno,pt
call
mov
cmp
jae
push
outsb
mov
iret
test
cmp
cmp
push
jl
orl
mov
pop
repnz
cltd
shll
pop
mov
pop
cli
cmp
inc
rcrb
xchg
pop
movzwl
arpl
cmpb
lret
add
sbb
and
xchg
roll
mov
xor
pop
int
mov
stos
ss
mov
cwtl
cmp
jecxz
dec
xor
mov
xlat
addr16
fdivs
sbb
int3
xchg
xchg
mov
cmc
sub
subl
lods
popa
daa
adc
lds
fcompl
xor
nop
lcall
sbb
shl
and
pusha
cmc
xor
test
cmc
mov
dec
mov
xor
fs
cmpsl
scas
ljmp
rcr
xchg
pop
loopne
adc
ja
push
cwtl
adc
jo
or
adcl
cmc
cmp
fldt
jecxz
aas
pop
inc
or
push
shrl
rorl
dec
and
fiaddl
adc
movsl
fnstcw
xchg
and
scas
cmpsl
cwtl
lcall
pop
cmp
cmpsl
push
sub
cmpb
jno
cmp
jmp
insb
xchg
or
cld
cmp
arpl
dec
sub
js
cld
dec
and
cmc
push
imulb
dec
out
lods
push
mov
and
push
xor
mov
test
dec
ret
pop
pusha
xchg
mov
dec
int3
test
xchg
mov
adc
dec
inc
add
aam
mov
addr16
repnz
inc
dec
jecxz
inc
lods
dec
pushf
add
adc
and
scas
push
jg
jns
xor
push
jge
xchg
xor
ss
or
out
fucom
pop
mov
pop
pop
xchg
push
ficomps
js
repnz
fsubrl
or
lcall
in
xor
add
ret
add
sbb
sbb
pop
lahf
jnp
aad
gs
push
inc
cmp
pop
adc
ljmp
scas
dec
pusha
pushf
test
dec
sahf
aad
cmpsb
cmp
jl
ljmp
das
mov
or
leave
sub
xor
sbb
pop
divl
dec
jns
mov
pop
adc
pop
in
add
aas
bound
push
pushf
lods
mov
rclb
xchg
mov
cli
push
dec
dec
ret
pop
mov
push
fcoml
mov
add
jle
rcll
push
or
je
jmp
mov
xchg
pop
inc
mov
addb
stc
in
xor
mov
push
push
pop
cmp
jno
mov
out
pop
repz
inc
mov
insb
std
add
inc
jmp
out
clts
push
mov
pop
fld
sbb
push
inc
add
cltd
hlt
addr16
lahf
or
mov
fdivrl
push
hlt
ret
inc
cmp
jb
loop
sbb
mov
insl
inc
std
in
sub
xchg
jg
je
add
inc
jmp
sbb
add
sarb
scas
stos
pop
add
xchg
mov
push
imul
outsb
mov
jbe
and
fwait
pop
lock
cmpsl
inc
xchg
cmp
jns
push
stos
mov
mov
out
std
mov
pop
push
push
scas
lahf
iret
cld
xchg
add
addl
rcrl
push
push
movsl
arpl
push
data16
or
mov
xchg
push
and
xchg
fildl
pop
in
sub
test
aas
aam
mov
sbb
push
lods
push
add
cmp
mov
insl
scas
mov
adc
lds
push
je
popa
ret
pusha
pushf
fimuls
mov
inc
mov
xchg
mov
and
xor
pop
outsl
fstp
dec
fisubl
pushf
xchg
xchg
jmp
mov
ret
mov
add
or
mov
imul
mov
mov
in
and
ficoms
lock
pop
sbb
jo
shr
xchg
insb
fstp
lock
subl
mov
xchg
insb
movsb
or
fwait
push
and
lret
insb
bound
add
xor
iret
or
inc
aad
outsb
mov
mov
inc
pop
insb
push
jl
push
loop
sahf
jl
into
ss
aaa
call
mov
cmp
add
inc
jge
push
ret
jecxz
mov
ss
les
insl
aaa
xlat
and
lods
and
jo
xchg
mov
repnz
adc
jl
cli
cmp
cld
shll
mov
jo
or
mov
pushf
add
fisttpll
xor
mov
or
aas
fstpt
inc
adc
dec
sti
cld
mov
add
lahf
xor
xchg
repnz
lods
sub
cs
or
jge
stc
cmp
mov
pop
xchg
adc
in
repz
scas
mov
push
add
leave
mov
hlt
dec
lods
add
and
cmp
lock
sub
rcll
scas
nop
lcall
adc
jns
scas
inc
mull
mov
dec
es
in
or
dec
cld
mov
lods
fisttps
movl
push
stc
movsl
and
into
push
loope
je
sbb
fimuls
lods
dec
outsl
pop
inc
cwtl
cmpsb
loopne
cmp
ljmp
mov
xor
int3
pop
cmp
into
adc
out
mov
mov
push
and
loop
sub
std
sub
dec
cli
ret
add
xchg
and
popf
and
cmp
sbb
inc
jge
popf
lret
jge
in
pop
daa
lfs
and
inc
fstpt
and
ds
push
xchg
sbb
pop
sub
xor
stos
gs
fisubl
scas
xchg
push
mov
cmpsb
fcoml
and
pop
mov
loopne
fsubrs
mov
pushf
sub
jbe
cmpsb
outsb
xchg
rorb
cli
inc
scas
fstp
add
adc
adc
push
dec
push
or
outsl
or
fistps
fwait
popa
fidivrs
or
push
imulb
or
mov
jle
ja
add
mov
cmp
sbb
lock
jle
negb
cmc
sub
mov
jge
cltd
sub
shrb
cmp
dec
or
adc
js
jecxz
enter
loop
cmp
pop
cmc
das
in
int3
xor
dec
outsb
loope
iret
dec
xor
lret
mov
lret
fstp
sub
and
sub
xchg
xchg
out
jle
push
jno
cltd
daa
mov
mov
sahf
adc
jg
inc
and
mov
int3
jno
insl
test
mov
fwait
into
sbb
arpl
xchg
arpl
ss
mov
scas
dec
hlt
or
dec
movsl
jecxz
test
mov
decl
sbb
push
push
sub
cli
dec
pushf
out
fstpl
loop
fsubr
scas
inc
sbb
cmp
aad
fwait
cmc
inc
and
mov
cmpsl
lret
pop
div
das
or
sub
repnz
pop
mov
in
ret
mov
ja
ret
loopne
ficoms
and
mov
mov
and
sub
xor
mov
inc
pop
jg
xchg
daa
std
xchg
out
bound
js
jne
fwait
xchg
push
jbe
fstl
jmp
mov
jp
repz
add
or
pop
jmp
and
sbb
inc
mov
jecxz
test
xchg
test
pop
sub
mov
push
int
push
inc
cs
mov
insl
fsubs
xor
scas
repnz
movsb
lahf
andl
cmp
jns
xor
sarb
lea
shll
pop
arpl
std
fcmovbe
push
inc
xchg
mov
shlb
scas
cs
jge
enter
pop
mov
pop
fsubl
dec
shlb
pusha
mov
dec
arpl
mov
adc
push
xchg
cmp
aad
sbb
or
jno
inc
bound
insw
sub
inc
sbbb
dec
fwait
inc
cmpsb
ljmp
lods
mov
mov
mov
aad
shr
xor
adc
inc
call
add
add
negl
mov
mov
mov
xor
mov
call
add
adc
ds
dec
ja
mov
addr16
add
push
xor
cmp
rcrb
sub
jno
lock
pop
inc
mov
popf
mov
mov
jns
add
enter
test
xor
inc
pop
mov
pop
xor
std
jecxz
out
jnp
or
cmpb
sbb
arpl
shlb
push
clc
pop
scas
cmpl
pop
les
out
push
sarb
jle
fisubs
out
ret
out
mov
sub
lret
xor
ret
sbb
cwtl
push
addb
xor
rcr
jne
xor
icebp
mov
push
cmc
aas
stos
outsl
pop
mov
out
sub
jae
pop
aas
xor
pop
and
sub
out
ja
mov
out
test
xchg
jle
in
insb
daa
lahf
or
cmp
xlat
shlb
jl
jne
sti
inc
mov
cltd
cs
pop
xchg
cli
push
jl
xchg
push
add
mov
inc
dec
adc
out
rolb
cmpl
in
cmpsl
imul
popa
cmpsl
flds
outsl
insl
int3
lds
imul
inc
or
sarb
mov
xorb
dec
dec
popf
jb
dec
iret
cld
jecxz
pop
aas
and
dec
cmp
xchg
sub
call
xor
out
test
les
sbb
rep
fldcw
cmpsb
stc
dec
psadbw
mov
test
push
repz
mov
sahf
rorl
fwait
stos
mov
xchg
dec
adc
cltd
jg
je
imulb
ss
xor
pushf
setg
mov
and
repz
imul
sub
fs
sub
lds
or
cmp
outsl
and
int3
adc
add
rcrl
or
mov
cwtl
fisubrs
add
sbb
mov
xchg
fcomip
inc
imul
popl
and
jge
cmp
mov
cmp
aad
das
inc
or
adc
push
sub
pop
cmc
sbb
and
push
jp
mov
stos
pop
lcall
clc
rclb
ss
xlat
mov
jb
shrb
in
pop
xlat
cwtl
sbb
push
xor
leave
mov
pop
or
cmpsb
cmp
add
xchg
add
jb
xchg
cld
stc
stc
xlat
sub
sub
push
add
adcb
push
sub
pop
adc
mov
inc
sbb
lret
xchg
jp
sub
popl
out
or
inc
sti
sbb
aas
pop
mov
dec
lahf
in
add
cmc
dec
aaa
dec
xor
ljmp
xor
fdivrs
imul
fcoml
lods
dec
pushl
lahf
fcomps
int3
mov
dec
sar
jno
push
push
xchg
xchg
and
out
adc
xor
jae
xor
mov
cmpsl
mov
xchg
xor
pop
stc
push
hlt
insb
outsl
dec
jae
jae
mov
jg
inc
dec
clc
sub
and
mov
xchg
xorl
aad
xchg
and
dec
es
notl
ret
pusha
add
enter
sub
popf
xchg
dec
sub
adc
jmp
sbb
mov
iret
insb
cmp
and
das
jnp
stos
movb
push
adc
sub
imul
cmp
fildl
lods
mov
xor
cmp
xor
inc
inc
jl
and
push
xlat
orl
divl
dec
jl
int
in
dec
mov
das
jmp
fcoms
lods
popa
xor
lock
test
pop
dec
js
loop
stc
pop
xor
cltd
or
insb
adc
or
fsts
mov
push
mov
data16
push
jb
leave
les
add
aad
test
dec
outsl
sbb
adc
cmp
in
push
mov
mov
sbb
fs
mov
mov
stos
ss
jmp
imul
imul
dec
dec
jge
dec
adc
fstpl
cmpsl
sti
lds
mov
loop
xchg
int
pop
add
sti
push
mov
rolb
mov
insb
cmp
rcrl
lods
dec
mov
cmp
push
js
mov
jecxz
mov
frstor
and
dec
inc
loop
dec
rclb
pop
mov
sbb
mov
add
push
lds
jbe
add
and
jb
clc
scas
aam
or
shlb
sub
add
repz
cld
mov
popf
out
or
shrl
daa
outsb
imul
inc
jle
inc
sub
mov
lds
and
jmp
sub
adc
les
pop
mov
iret
test
and
add
mov
icebp
rorb
lret
mov
pop
daa
and
or
cmp
ss
and
xorb
mov
cmpsl
sub
mov
aam
xchg
jge
pop
das
into
sbb
mov
xchg
dec
xor
lods
jbe
jbe
loope
sbbl
jg
adc
lds
fiaddl
mov
pop
dec
js
sbb
pop
jmp
fdivr
out
aam
aam
xchg
xor
and
fiaddl
xlat
in
sahf
fsubs
sub
jmp
and
push
lock
test
push
mov
jae
outsl
movsl
mov
push
adc
push
adc
movsl
mov
aam
jno
pop
jno
ds
addr16
mov
call
ds
inc
sbb
out
insb
cmpsl
and
pop
stos
scas
cmpsb
icebp
cmp
jns
shlb
ja
outsl
mov
cmp
jns,pn
cmp
and
cltd
pop
add
dec
daa
and
bnd
lahf
add
dec
notb
lcall
ja
push
add
jo
ljmp
sbb
mov
into
jecxz
xchg
jbe
jg
pop
push
dec
test
jp
fldl
daa
test
jns
jg
xor
pop
mov
fisttpll
shll
in
lods
fwait
sub
mov
inc
dec
ror
addr16
in
sbb
xor
fmuls
stos
enter
aaa
mov
mov
out
pop
push
shlb
dec
shll
pop
frstor
test
imul
sub
test
pop
imul
or
xor
arpl
cmp
sar
mov
jecxz
scas
lcall
mov
cmp
and
lcall
into
xor
mov
dec
pusha
mov
int3
mov
add
cmp
dec
clc
add
xchg
push
mov
dec
jle
imulb
sti
sub
inc
sbb
fs
insb
mov
cmp
inc
lods
orl
and
and
xchg
and
out
roll
testl
push
mov
call
arpl
pop
ror
fildl
or
cwtl
fistpl
sub
stos
push
mov
not
fs
scas
pop
lea
ss
dec
xchg
imul
les
sti
stos
mov
repz
sbb
sbb
mov
out
pop
push
sti
and
push
inc
sub
addl
mov
cmp
ret
lds
cltd
sub
stc
popf
inc
mov
mov
mov
imul
les
add
dec
sti
std
adc
pop
add
iret
and
mov
xlat
lret
outsl
sub
lret
cmp
push
xor
adc
xor
aad
popa
mov
insl
mov
and
lret
mov
mov
imul
mov
stc
dec
xor
sub
faddl
addr16
xchg
jnp
add
test
jp
pop
outsb
iret
sub
xchg
push
daa
pop
aas
cmp
les
dec
data16
xchg
mov
mov
fcmovnu
std
jle
sub
shrl
and
xchg
pop
xor
paddb
das
roll
and
lods
mov
ret
sbb
movl
or
cmpsb
iret
ret
pushf
pop
sbb
jne
dec
mov
into
adc
cmpsb
mov
aam
cmp
mov
xchg
insl
xor
rcl
and
inc
or
movsl
and
fsubl
jae
ss
lock
jns
aam
scas
insl
add
xchg
movsb
jns
lret
neg
fbld
insb
repnz
xchg
cmp
pop
icebp
sti
enter
jecxz
negb
loope
fwait
or
pop
inc
push
and
test
cwtl
and
add
clc
lods
scas
jl
in
pop
cmp
shrl
fistpl
cmp
outsl
mov
xchg
jg
mov
test
arpl
adc
cmp
lret
fdivrl
adc
ss
ja
fnstsw
mov
shll
mov
push
cmp
out
add
and
in
daa
scas
lcall
jl
cmp
sahf
mov
stc
gs
daa
mov
rcr
cmp
scas
cwtl
aad
cwtl
sub
xchg
stos
xchg
pop
push
mov
inc
adc
jnp
jbe
mov
jmp
inc
mov
mov
or
mov
int
rorl
rolb
int3
loopne
fisttpll
dec
shrl
in
mov
inc
mov
xor
out
cmp
ljmp
in
lock
mov
insl
pusha
je
xchg
or
pmuludq
popf
dec
fcmovne
movsb
js
jle
pusha
int
mov
xchg
mov
aad
inc
and
shlb
xchg
aad
dec
add
dec
mov
or
int
xor
mov
and
push
or
call
dec
xor
sub
in
mov
aam
mov
inc
nop
lcall
cmc
inc
cli
or
sub
pop
imul
test
stos
int
outsl
xchg
mov
sub
rcrb
test
push
pushl
add
xlat
lret
push
sbb
mov
add
fistpll
test
stos
leave
repz
movsl
add
outsl
xchg
icebp
cltd
push
or
add
fdivp
mov
xchg
testl
xor
xchg
je
psrld
into
stc
data16
xor
pop
js
and
std
xchg
sbb
fwait
cmpl
push
lcall
scas
mov
adc
lods
xorl
xchg
pop
xchg
js
jge
jns
sub
adc
cld
dec
or
jb
insl
dec
push
inc
dec
adcl
mov
test
dec
shrl
cmpsb
movsl
cltd
daa
inc
sarl
cltd
adc
mov
xchg
cmc
jae
jecxz
jne
mov
aaa
sub
es
repz
mov
inc
mov
leave
dec
push
xchg
inc
test
aad
xchg
push
dec
and
fs
cwtl
pop
adc
jbe
cmpsl
call
mov
push
jecxz
int
sub
lahf
mov
sti
or
popa
or
pop
xor
enter
nopl
add
and
test
xor
mov
xor
fldl2t
rcl
gs
insb
sbb
fisttpl
sbb
inc
jle
jb
enter
jmp
fnstsw
cmp
or
xor
mov
jo
mov
dec
mov
insb
cwtl
add
or
mov
mov
dec
dec
or
arpl
xchg
sbb
gs
pop
add
jp
adc
push
nop
sub
test
xchg
leave
add
xchg
ljmp
sub
ljmp
inc
sti
fildll
outsb
mov
out
cli
sbb
push
js
or
cld
cs
sbb
and
xor
pop
subb
ljmp
xor
out
scas
dec
sbb
push
inc
aam
sbb
arpl
out
mov
jg
jecxz
adc
ficompl
shlb
test
movb
lret
xchg
sub
adc
pusha
adc
mov
add
subb
push
es
cmc
and
pop
sti
aas
cmpsb
pop
sub
idiv
ljmp
aaa
push
aad
popa
and
test
fisubl
stos
adc
and
jecxz
jg
add
scas
cmp
clc
mov
es
test
push
clc
sbb
mov
mov
xor
push
hlt
fdivrs
add
pusha
pop
cwtl
or
imul
cwtl
add
stc
push
mov
xchg
jmp
xchg
jg
mov
pushf
stc
stos
jmp
out
push
push
pop
test
pop
movsb
push
xchg
mov
mov
dec
movsb
movd
out
adc
pop
inc
xor
mov
movsl
jl
int3
mov
rol
outsb
mov
cmp
cmpsl
mov
mov
adc
cltd
scas
sbb
pop
lock
outsb
outsb
dec
push
lcall
sbb
sti
mov
aad
dec
mov
nop
xchg
add
or
pop
push
jge
push
sub
std
cmc
fs
sub
pop
in
adc
repz
jg
mov
out
mov
adc
pop
mov
dec
push
hlt
inc
dec
xlat
jl
cmp
ret
sub
xchg
push
adc
mov
into
mov
dec
xchg
clc
or
outsb
jne
repz
fs
xor
addl
mov
push
mov
pop
jmp
imul
and
xor
push
dec
push
cmp
mov
sbb
inc
cmp
cmp
es
addr16
mov
ret
push
add
dec
test
inc
mov
cltd
insl
fdivs
mov
daa
inc
js
sub
add
cltd
sbb
test
dec
cmp
push
enter
clc
out
jg
shrb
xchg
movsl
sarl
sbb
insb
out
pop
adc
cmpsl
stc
jle
push
or
fldt
dec
repz
jne
cmpsl
jp
push
fwait
fdivr
mov
mov
xchg
js
mov
mov
out
xchg
ret
jo
push
lahf
mov
sbb
jp
jb
sbb
subl
adc
fnsave
adc
rcrl
push
fcompl
inc
imul
push
addr16
push
shrl
or
loope
fbstp
ss
mov
xor
push
pop
nop
pop
xor
mov
repz
sub
scas
dec
or
cwtl
cmp
dec
mov
out
int
adc
mov
push
test
into
xor
arpl
sbb
imul
inc
add
arpl
pop
push
arpl
mov
mov
inc
nop
cmp
loop
mov
clc
gs
xchg
cmp
or
and
jae
dec
ljmp
or
in
mov
test
mov
cwtl
jnp
sbb
pop
xor
xchg
fnstenv
pushf
lock
cmc
cmpsb
and
loopne
mov
sbb
inc
jnp
mov
sub
and
mov
jp
aad
mov
mov
mov
pop
outsl
popf
aad
xor
in
sbb
lock
mov
rorl
das
xor
ret
mov
and
je
push
outsl
fst
xchg
lea
aas
fistpll
mov
orl
lahf
pop
cmp
scas
loopne
push
mov
loope
add
in
lods
xor
arpl
push
xor
pop
inc
daa
ret
out
jecxz
cmp
mov
imul
add
or
imul
std
and
pop
movsl
je
and
ss
and
cmp
or
add
fcomip
jno
into
test
pop
and
dec
rcr
das
dec
dec
cmp
and
cmp
jp
xor
mov
test
stos
popa
addl
and
lahf
fistpll
fs
mov
or
sub
push
pop
hlt
nop
in
xchg
nop
int3
fistl
stos
outsb
push
ret
cmpsb
sub
pushf
mov
mov
rcl
xchg
cmc
adc
dec
or
push
sub
out
jno
push
lods
test
cmp
pop
repz
dec
push
mov
jae
push
popf
push
fadds
ss
xchg
push
mov
imul
mov
pop
xchg
mov
sub
sbb
xchg
data16
xchg
ja
push
cmp
sbb
mov
inc
cmpb
stos
jnp
andb
shll
cmp
stos
push
pop
pop
in
xchg
hlt
xchg
stos
daa
insb
add
pop
lods
lcall
mov
adc
jns
andb
mov
mov
mov
xchg
mov
push
das
and
mov
xchg
bound
xchg
adc
and
mov
in
mov
push
mov
imul
dec
je
sub
test
insl
cli
mov
mov
in
push
mov
dec
xor
mov
dec
test
loop
or
push
pop
shrb
sbb
mov
lret
test
pop
das
mov
loope
mov
push
adc
jae
popa
roll
xchg
sub
and
lahf
pop
cmp
iret
add
mov
rorl
push
out
loop
jnp
insb
mov
inc
sub
jl
add
mov
adc
add
xchg
test
inc
std
mov
lret
jns
mov
sbbb
sbb
xchg
add
inc
inc
cwtl
aad
sub
nop
enter
adc
pop
lea
dec
and
jmp
xchg
cmp
andl
mov
pop
int3
sub
mov
jo
scas
mov
mov
mov
mov
sub
or
pusha
ljmp
lock
inc
hlt
adc
adc
in
roll
mov
sahf
sub
xor
jmp
sub
dec
mov
mov
aaa
jns
jnp
adc
xchg
ret
aaa
mov
dec
jno
inc
daa
mov
inc
roll
cmp
adc
mov
dec
pop
stos
dec
jmp
pusha
imull
or
aas
ficompl
adc
mov
jg
inc
loope
mov
add
gs
sbb
aad
jl
sbb
lea
lret
xchg
test
add
jbe
popf
push
xchg
out
xchg
lahf
sub
adc
jo
decb
jp
push
xchg
sub
int3
test
mov
xchg
das
popa
dec
mov
stc
arpl
mov
push
leave
sbb
aam
cmp
pop
adc
sahf
mov
inc
test
fildl
dec
dec
and
lret
adc
push
xor
popa
lods
es
ret
out
pop
push
imul
out
dec
xor
das
xchg
dec
sbb
in
add
pop
les
push
jg
adc
add
pop
inc
popf
test
fs
hlt
pop
sub
jp
mov
xchg
dec
loope
subb
ja
popf
fiadds
adc
cld
lcall
inc
inc
aaa
or
dec
push
xchg
cld
dec
pushf
movsb
mov
mov
imul
shrb
loope
pop
inc
pusha
push
stc
outsb
cli
pop
imul
push
xlat
inc
inc
xchg
adc
lret
or
mov
data16
jnp
push
xchg
pushf
js
mov
pop
aam
inc
lods
call
sbb
mov
scas
dec
es
pop
repz
std
shll
rcll
rcrb
jae
out
dec
lea
loopne
jno
out
push
mov
popa
fsubl
xor
les
xchg
incb
xor
aad
mov
imul
cmpsb
es
test
xorb
aad
mov
and
mov
fs
push
push
in
in
lret
xor
rorl
inc
jmp
ja
adc
leave
cld
xor
int
mov
mov
pop
orb
dec
dec
mov
stos
dec
push
jae
jg
rol
jmp
fidivs
mov
cmp
or
mov
clc
or
scas
pop
sub
push
out
pop
xlat
mov
in
adc
jno
mov
les
dec
sbb
ja
mov
or
pop
addr16
jnp
sbb
ss
mov
es
js
cmp
pop
addr16
or
inc
clc
pusha
fistpl
mov
insl
out
mov
insl
inc
pop
out
mov
add
pop
out
mov
sub
mov
jb
stos
sahf
xchg
or
ret
mov
fucomip
inc
inc
xchg
pop
or
bound
lret
lcall
push
pmaxub
shl
cmp
pop
pop
mov
xchg
mov
cmovl
inc
mov
mov
xchg
mov
fstps
sbb
pop
bound
inc
fbld
shrl
and
pop
xchg
nop
and
dec
test
and
cmc
cwtl
xor
cwtl
and
popf
test
pop
pop
sub
sbb
lods
inc
mov
call
xor
loopne
andb
or
out
inc
jne
jecxz
pop
or
xor
xchg
push
iret
pop
jnp
fnsave
sbb
xor
fcomps
add
xchg
out
popf
das
adc
cwtl
test
int
and
cltd
sub
test
nop
insl
call
movsb
je
lods
and
ret
pop
loopne
cli
lock
dec
dec
dec
dec
jbe
xchg
mov
pop
ffreep
arpl
fsubr
lock
outsl
stos
aas
inc
add
sbb
in
pusha
mov
out
bound
sbb
xor
jg
ljmp
mov
dec
pop
and
leave
pop
sub
cmovo
adc
popa
ret
cmp
in
sub
fstpt
and
rorl
lock
mov
sbb
ret
dec
xlat
dec
mov
cmp
push
xor
and
pop
repnz
sub
add
and
pop
inc
cmp
add
test
mov
jecxz
xchg
mov
or
out
inc
into
outsl
mov
inc
stos
inc
sahf
push
mov
or
xchg
jle
call
or
in
mov
popa
insl
sub
fistps
scas
cwtl
mov
xchg
fstpl
testl
mov
aam
lods
or
ds
mov
sub
dec
cmpsl
stos
addr16
mov
xor
std
rcrb
stc
ss
rcr
movsb
inc
add
pop
jne
mov
mov
dec
jecxz
decl
mov
jno
cmp
testb
sbb
pop
pop
adc
jecxz
sbb
cmpsb
in
mov
shlb
std
fdivrs
adc
sarb
std
gs
dec
or
pop
ja
test
imul
das
stos
mov
add
cmp
jno
jns
lock
dec
jbe
dec
inc
xchg
sub
dec
test
jle
cmc
push
jo
fxch
or
arpl
shlb
repnz
jg
add
sbb
out
mov
movsb
les
arpl
push
mov
arpl
push
ss
in
cmp
sbb
adc
outsl
add
adc
jle
nop
imul
orl
stos
int
js
sti
inc
mov
sahf
aaa
lahf
xor
and
out
sbb
cld
popf
lcall
push
add
push
xchg
cmpsb
in
xlat
lock
stc
not
sub
add
fadds
sbb
in
leave
leave
out
jno
enter
mov
mov
or
daa
div
arpl
pop
sbb
jl
arpl
les
fstps
and
xchg
lods
out
or
cmp
sahf
xor
popf
filds
mov
aaa
add
pop
test
xchg
push
pop
push
xchg
loopne
mov
sbb
add
push
jle
cmp
test
jle
xlat
jae
out
mov
lcall
stos
lret
add
notl
loopne
pop
test
mov
mov
data16
inc
push
cwtl
sub
pop
or
sub
ja
fiadds
jb
cmpsb
dec
push
cmp
loope
mov
xor
btrl
cs
cmp
sbb
pop
dec
imul
xor
add
push
xchg
jnp
mov
das
imul
adc
in
ds
imul
stos
and
jl
xchg
xchg
and
enter
mov
getsec
iret
pop
mov
mov
pop
fdiv
loopne
sbb
mov
adcl
and
fisubrs
xor
mov
sub
push
mov
or
mov
ds
scas
push
mov
xor
push
repz
adc
aad
imul
xchg
xlat
int3
jb
jb
mov
jbe
dec
sbb
jge
mov
jmp
ret
xchg
mov
call
or
lret
mov
mov
mov
repz
add
push
lahf
std
xchg
stc
aad
mov
fnstsw
jno
mov
pop
inc
pop
jno
push
mov
xor
jmp
dec
lods
cmp
fistpl
jecxz
pop
pop
xor
gs
sahf
cltd
stos
out
lock
in
jmp
into
cmpsb
dec
jbe
inc
xor
in
dec
paddsw
loope
pop
fidivl
lea
push
xchg
inc
addr16
mov
and
mov
or
mov
cmp
icebp
je
jg,pn
pop
jnp
mov
sbb
enter
sbb
jle
stos
int
and
shll
mov
or
adc
jecxz
test
int3
xchg
sbb
ret
or
cmp
jns
std
lods
push
dec
fwait
mov
shlb
lcall
sub
insb
test
cltd
xchg
in
fdivrl
and
jbe
lret
mov
imul
and
push
rcrl
jb
stos
loopne
loop
inc
mov
xor
pop
pop
in
pop
sti
push
xor
pop
pusha
daa
mov
out
cmpsl
stos
sub
rcrb
lods
push
and
mov
iret
lcall
mov
aam
push
lret
or
lods
arpl
rcrl
inc
lock
cld
dec
dec
icebp
push
mov
fs
popa
ljmp
adc
jl
bound
pop
pop
sbbb
or
aas
xor
lahf
or
or
jmp
xchg
ret
popa
outsl
mov
jae
cmc
dec
push
cwtl
pushf
fwait
mov
loope
mov
pop
cld
push
push
or
out
lods
stos
leave
xchg
pop
testl
sbb
ret
daa
inc
cltd
push
cmp
mov
xor
inc
call
test
jmp
sbbl
jbe
sub
es
sbb
cmp
scas
add
sub
xor
fmuls
cmpsb
sti
jmp
mov
idiv
shll
inc
imul
jb
pop
bnd
rclb
sbb
in
stc
cwtl
and
xchg
nop
jg
clc
iret
mov
cmovne
clc
push
aad
fstl
xchg
mov
inc
mov
imul
movb
mov
aas
pop
nop
bound
xchg
test
xor
inc
cli
and
bound
pop
cmp
into
les
outsl
lcall
mov
xlat
sbb
pop
mov
push
bound
ljmp
lds
cmpsb
test
or
addr16
sbb
push
iret
add
sub
adc
mov
sbb
dec
add
and
cmp
xlat
sub
mov
dec
ds
lea
add
and
push
stos
imul
jge
jl
cmpsl
xchg
mov
je
pop
cwtl
lea
mov
sbb
push
lahf
cmp
ds
jns
ss
xor
in
out
jno
lret
movsl
lods
sahf
je
sbb
add
xchg
pop
xchg
fimull
adc
mov
push
negl
fistpll
out
jmp
mov
out
jnp
pop
jno
mov
push
aaa
in
jne
jo
int3
inc
mov
push
push
dec
cmpsl
pop
ds
fdivrs
mov
adc
lods
push
pusha
cmpsb
mov
dec
dec
sbb
aad
js
cli
jmp
imul
js
xor
cmpsl
xor
les
push
lods
repz
std
push
dec
mov
mov
stos
dec
mov
cltd
mov
xchg
pop
bnd
mov
iret
mov
push
and
popf
int3
mov
adc
mov
flds
mov
xchg
fwait
sbb
ficoms
call
mov
xor
cli
dec
pcmpgtd
push
jl
cwtl
out
dec
int
mov
jbe
adc
pop
push
or
lcall
loop
shl
clc
inc
adc
sub
js
aam
xor
mov
sub
adc
ljmp
cltd
xchg
lcall
add
jge
imul
aas
inc
jecxz
mov
inc
es
mov
jnp
mov
sbb
movsb
and
mov
mov
rcrl
andb
mov
or
jns
cmp
pusha
cmp
pop
jl
std
fmuls
movsb
xchg
and
inc
out
sub
stc
xor
rolb
scas
hlt
jo
adc
in
fsubrl
fwait
shrl
add
arpl
loop
enter
or
lahf
lret
loopne
sbb
push
push
imul
hlt
jmp
neg
lret
clc
mov
push
pop
mov
in
mov
lock
outsb
cmp
and
jp
adc
cmpsl
fiadds
js
cmpsb
xor
stos
cwtl
add
outsl
movsb
push
pushf
fstpt
dec
xchg
loope
jge
mov
pop
rcrl
sub
lret
ljmp
jno
pop
mov
add
jl
lcall
std
mov
aad
jo
jle
add
rcpps
mov
jl
test
sarl
pushf
shr
inc
push
loop
es
test
call
popf
pop
in
sbb
cmpsb
xor
jmp
mov
gs
sahf
add
xor
sub
or
inc
add
xchg
add
cmp
mov
push
push
icebp
jns
and
mov
push
mov
pop
into
jns
cs
adc
dec
xor
loope
daa
imul
std
dec
cmp
add
or
mulb
lock
mov
mov
call
push
aad
cmp
mov
adc
fsub
mov
xlat
out
pop
cli
mov
fimull
add
jp
sub
pop
movsl
and
inc
es
fisubrs
idivb
and
sbbb
add
out
mov
adc
sub
mov
cmc
jecxz
lods
fistl
clc
add
push
xchg
in
add
xor
pop
cmp
loop
jecxz
push
mov
mov
sbb
inc
gs
cmp
mov
mov
loop
mov
jae
sbb
adc
push
in
shrb
rorl
divb
pop
rcll
cltd
cmp
js
dec
andl
mov
dec
push
aad
cmp
mov
add
or
insl
xorl
cltd
push
out
lods
in
jb
push
les
and
xor
sbb
sub
xchg
lock
mov
outsb
bound
ljmp
inc
mov
inc
je
ficompl
push
pop
filds
cwtl
insb
push
xor
gs
mov
inc
mov
jno
ret
push
pop
jb
leave
daa
nop
or
cli
add
and
stc
jnp
or
sbbl
push
enter
out
cs
jle
or
popf
enter
mov
addr16
add
lret
decl
sbb
icebp
mov
fmull
mul
push
pop
loope
xchg
popf
call
mov
jmp
aaa
jmp
pop
gs
imul
std
adc
dec
push
mov
xlat
ja
jnp
rorb
fnstsw
cwtl
push
dec
cmp
cs
enter
xor
inc
mov
out
jl
popa
lret
test
jmp
fmull
out
mov
call
jae
popf
call
sub
cld
push
inc
les
mov
mov
enter
into
push
push
call
mov
inc
int
add
and
adc
pushf
jmp
jno
xchg
xor
xchg
hlt
sub
fstl
les
lods
loop
hlt
sub
mov
and
push
bound
lret
shrb
sub
add
and
adc
je
ss
daa
out
xchg
mov
in
fistl
pop
cld
movzwl
js
in
adc
sub
cmpsl
mov
xlat
mov
shlb
shlb
xor
movsl
mov
enter
jecxz
inc
into
or
xchg
idivl
push
mov
push
mul
ss
jge
jb
pop
into
adc
jbe
movsb
or
in
loope
mov
push
daa
mov
mov
add
or
and
push
jg
inc
fiaddl
arpl
imul
idivb
cmp
xlat
push
cmp
xchg
stos
mov
add
es
sbb
and
mov
push
or
popa
cmp
xorb
or
cmp
inc
jo
or
cwtl
sbb
lods
pop
popa
sbb
mov
push
pop
xlat
std
movsl
sub
lret
in
divl
jb
push
mov
mov
add
ss
xchg
adc
or
ficoml
push
out
dec
push
jge
sub
out
or
in
add
rol
dec
test
cwtl
jb
push
add
jle
push
cwtl
or
cmpsl
pop
jle
mov
xor
sub
lods
mov
fnsave
aad
fcmovne
cmc
insl
dec
xorl
and
fildl
and
pop
xchg
lcall
adc
insl
push
aam
ja
xchg
add
sub
inc
sub
mov
adc
mov
dec
and
lea
push
adc
cmp
sbb
jl
push
adc
mov
in
add
push
lahf
inc
sbb
scas
xor
je
mov
loop
aas
sbb
xchg
popa
shll
sbb
jge
cmp
loop
jne
pop
sub
les
xchg
cmp
adc
pop
icebp
sbb
arpl
repnz
and
dec
xor
mov
fstl
push
mov
dec
xor
aam
adc
cld
sarb
sbb
xor
jo
push
sub
test
cmpl
mov
mov
rorl
ret
insb
cmpsb
int
jb
or
pusha
cmc
imul
jnp
mov
push
lahf
mov
sub
mov
mov
mov
pop
es
cmp
mov
or
inc
rolb
jnp,pn
mov
mov
pop
aaa
sub
cmp
movsb
jl
mov
xchg
repnz
sti
ret
mov
fwait
push
popf
xor
mov
and
lods
mov
mov
and
shll
or
inc
add
push
mov
adc
xchg
jg
add
push
loop
pop
dec
push
shll
std
push
movb
xor
pop
pushf
xchg
dec
ja
rclb
jo
pusha
and
dec
sub
arpl
or
sbb
leave
xor
sbb
loopne
dec
aad
pop
xor
in
xchg
sub
daa
xor
jecxz
inc
shll
popa
xor
adc
hlt
pushf
cmp
or
mov
sbb
mov
mov
fldenv
in
jmp
pop
lods
ss
add
mov
xor
dec
sub
adc
inc
lret
adc
fistpl
mov
jl
and
cmpsb
outsb
loope
ficoml
repz
pop
pop
icebp
dec
fs
pop
clc
mov
sbb
jg
cld
push
paddw
jmp
imull
sub
jmp
jle
popf
jle
xchg
fldcw
sbb
aas
mov
push
sbbl
jecxz
xchg
lahf
cld
fs
insb
addr16
sbb
push
icebp
pushf
popa
mov
mov
sbb
jne
cld
pop
bound
and
sub
js
sbb
sub
mov
cmc
js
push
in
arpl
xchg
out
js
jecxz
push
repnz
cmp
sbb
adc
insl
mov
movsb
lret
dec
nop
sbb
xchg
add
test
push
outsb
clc
ret
ljmp
add
or
mov
xor
mov
cmpsl
andb
frstor
push
mov
dec
inc
idivl
jl
xorb
push
pushf
mov
cmp
dec
mov
lods
or
mov
sub
cwtl
add
inc
pop
mov
jb
push
insb
shrb
ret
xor
cmc
in
loop
sub
es
adc
fdivrs
mov
mov
push
add
mov
sbb
repz
jns
and
test
jbe
xor
add
lahf
push
push
les
lods
xor
dec
gs
sbb
in
jno
sub
jae
mov
pop
popf
aad
sub
pop
aam
pop
jne
pop
dec
inc
pop
add
lret
mov
std
icebp
jge
test
sbb
mov
imul
xor
mov
pop
or
in
jg
das
test
cli
pop
mov
outsb
aad
and
popf
jl
test
or
push
cli
cs
rcr
les
mov
enter
jbe
or
movsl
push
loop
fimuls
loop
mov
mov
out
mov
xor
mov
loope
ret
cmp
push
xchg
ss
ss
daa
or
in
aas
int3
in
sahf
inc
sub
mov
jnp
js
jnp
xchg
jns
enter
lret
sbb
pop
jno
jmp
jg
mov
fadds
mov
lret
test
addr16
or
gs
aas
aas
pop
push
lea
dec
in
sub
js
lret
out
adc
daa
xor
ret
xchg
jb
sub
mov
idivb
dec
xor
add
clc
jo
adc
rclb
cmpxchg
or
pop
rclb
cwtl
popa
sub
repz
ficoml
adc
in
pushf
out
inc
stos
adc
mov
sub
and
pushf
inc
xlat
into
xchg
and
ret
in
xor
clc
xor
mov
sbb
repz
js
fimull
add
mov
aaa
scas
pushf
sahf
hlt
pop
pop
xor
adcb
lret
pop
adc
test
mov
fisubrs
jne
pusha
dec
fildll
sbb
push
cmpsb
xor
or
adc
movsb
cmp
iret
in
jl
ror
mov
bound
das
cli
mov
iret
arpl
iret
into
dec
mov
pop
jmp
loopne
pushf
pop
icebp
mov
movsl
lock
and
cwtl
sarb
cmpsl
xchg
lock
push
lock
insl
out
popw
jae
sbb
js
jg
out
adc
mov
adc
xchg
push
dec
rorl
das
ret
cmpsl
push
dec
mov
pushf
dec
test
js
inc
test
cwtl
mov
push
cmp
push
lret
fists
les
push
sbb
jg
popa
out
and
jo
lcall
jg
jp
nop
negb
xor
push
push
push
sub
ret
or
sub
mov
sbb
pop
push
mov
jb
pop
icebp
mov
cmp
ds
sub
inc
pop
xchg
inc
xor
cli
cli
add
jb
dec
outsl
jecxz
sbb
and
push
push
jp
pusha
std
daa
and
sbb
mov
stos
cmpsl
jns
aaa
aam
aas
pop
sahf
inc
inc
shlb
call
lock
lds
jecxz
clc
inc
and
xchg
cld
rcrl
mov
dec
adc
pop
inc
in
inc
lret
lcall
pop
pop
xchg
fisubrl
repnz
and
push
mov
add
mov
adc
lret
fidivl
jns
xchg
mov
iret
test
pop
pushl
or
jnp
repz
push
fistl
out
icebp
jmp
hlt
pop
bound
push
nop
adc
xor
mov
xchg
sub
out
xorb
xchg
bound
pushf
mov
cmc
adc
pusha
lods
notl
or
in
dec
lcall
xchg
xchg
fmull
in
xor
cmpsb
dec
dec
xor
ret
fimuls
dec
jne
xchg
push
ficoms
xor
push
fimull
cmp
in
sub
sbb
inc
fcom
scas
pushl
lret
out
test
subb
dec
clc
sbb
lret
sbb
rcrl
das
iret
dec
enter
xor
push
dec
sbb
or
je
cmc
pop
fiaddl
jl
fwait
inc
mov
ljmp
jne
mov
sbb
push
add
push
cwtl
xchg
adc
jo
mov
les
push
das
out
lods
es
stc
outsl
notb
dec
add
inc
sbb
repz
mov
jo
mov
repz
mull
push
int
push
repnz
dec
mov
dec
hlt
js
ja
pop
mov
cmpl
aaa
dec
push
fdivrl
adc
data16
dec
adc
adc
mov
jno
rcrb
inc
dec
jae
gs
aad
pop
stos
repz
pop
sub
sysenter
xlat
adc
iret
push
push
fistps
mov
aas
stos
push
sbb
sahf
push
cmp
and
pop
sub
dec
in
jbe
add
pop
pop
mov
mov
shr
imul
lds
cs
jae
popf
xchg
int
rol
je
dec
lods
push
sti
or
inc
mov
jp
xorl
outsl
mov
sub
das
ftst
and
insb
idiv
and
inc
jae
fs
es
dec
lock
test
push
jp
loope
xchg
dec
mov
loope
jnp
push
outsl
xchg
mov
jecxz
aam
lock
jnp
cmp
or
inc
xor
mov
icebp
xchg
sbb
sbb
pop
lock
or
aas
dec
cs
xor
pushf
push
test
shll
clc
xor
rcrb
aaa
adc
sub
push
add
mov
xchg
pop
pop
jns
popf
sub
push
pop
bound
fisubs
lea
adc
test
scas
sub
push
fsubrp
hlt
xor
lods
pop
shll
arpl
mov
adc
pop
enter
cmp
aam
pop
jmp
or
testl
inc
and
sbb
sub
ret
xor
inc
xchg
loopne
fistpll
jbe
cmp
mov
mov
and
sub
sbb
xor
mov
push
or
decb
sub
sbb
jmp
mov
filds
jle
adc
jg
into
adc
fisttpl
sbb
and
mov
bnd
sbb
sbb
testb
js
xor
push
std
cmp
and
xor
pop
sahf
sbbl
mov
sub
out
test
cld
or
popl
and
cmc
mov
sahf
movsb
inc
sub
adc
in
inc
into
je
cmp
sarb
mov
and
shll
mov
mov
sub
push
ret
sub
xor
orb
sub
push
xrelease
jne
inc
sbb
insl
or
or
aas
cmp
mov
jl
push
jge
popa
xlat
xor
mov
pusha
int3
cmp
jge
ds
adc
pop
sbb
adc
imul
adc
fisubl
and
push
aaa
mov
daa
lods
ljmp
ret
jmp
dec
cld
shlb
adc
mov
imul
cli
stc
enter
xchg
jg
mov
mov
push
or
leave
imul
add
jle
jo
testl
cmp
stos
js
and
rcrl
inc
xchg
cmp
jmp
jmp
pop
jb
into
out
push
ret
aam
loop
in
movsl
les
inc
out
dec
loop
aad
test
push
inc
sbb
adc
inc
call
sbb
sub
test
sub
ret
mov
sbb
inc
lcall
sti
je
in
adc
subb
adc
pop
std
mov
bound
pushl
inc
push
sub
clc
pop
pop
dec
call
loop
or
sbb
add
cmp
mov
loope
loop
inc
cmpsl
add
arpl
or
mov
sub
pop
xor
js
shll
lods
adc
jp
xchg
cmp
lcall
or
inc
inc
jl
mov
jnp
xchg
add
jp
mov
iret
xchg
lock
jge
jge
dec
test
cmpsl
xor
shrb
pop
mov
push
sbb
sar
push
cwtl
lahf
mov
mov
pop
xchg
push
cli
dec
sub
repz
sahf
ss
das
std
sub
sbb
cmp
sti
or
jo
call
sub
das
pusha
cmpsl
fldenv
and
xchg
xchg
repnz
test
js
sub
int
mov
or
add
or
mov
loop
jmp
lods
cmp
xchg
pand
les
inc
sahf
and
xor
or
popf
in
pushf
loope
sar
dec
enter
mov
shlb
and
lds
outsl
pop
shll
pop
lock
std
test
xlat
or
sub
xorl
icebp
cmp
js
mov
dec
addr16
adcl
adc
daa
jo
int
lret
xchg
and
in
jne
or
push
dec
fsubl
and
insl
jno
shll
dec
or
jne
cmovb
mov
dec
mov
loopne
out
and
push
xor
fs
jo
push
and
std
repz
loope
mov
cmp
test
jp
lahf
es
in
pmullw
scas
mov
outsb
xchg
xchg
mov
scas
nop
pusha
je
aas
ja
dec
add
cmpsl
push
inc
jbe
test
inc
sub
add
push
fdiv
and
mov
hlt
movsb
imul
jp
lret
cld
fidivl
sbbb
stc
scas
dec
cwtl
movl
push
repnz
mov
cmc
outsb
ljmp
cmpsb
mov
mov
cmp
es
dec
xchg
int
and
rcr
stos
push
sbb
mov
sbbl
shr
cli
and
pop
dec
jbe
xchg
or
cmp
orb
leave
stc
cld
cmp
hlt
jmp
fidivs
test
inc
inc
jbe
sub
push
mov
sub
popf
and
loop
or
mov
push
cld
jno
or
ljmp
aam
int
dec
and
add
sbbb
and
xlat
pop
jp
gs
mov
popa
pop
movsb
dec
ret
scas
fcom
xchg
mov
icebp
jns
fs
je
sar
sbb
out
lds
sbb
dec
push
imul
lcall
sti
mov
aam
mov
jle
xor
and
dec
int
outsb
test
mov
or
mov
and
jle
lcall
mov
fsubs
jns
push
cmp
jp
cmp
ja
mov
sbb
adc
lods
pop
icebp
jecxz
fs
sahf
jo
push
xchg
sub
sbb
out
mov
cmp
pop
or
mov
roll
jg
cmp
out
jo
cmpl
mov
adc
daa
sub
stc
xor
jg
inc
aad
imul
inc
test
pop
sbb
xor
pop
jns
pop
mov
aad
lea
sbb
mov
lret
mov
jo
mov
jg
jno
test
mov
popf
cmp
adc
cmp
inc
scas
fucomp
sarb
scas
outsl
imul
popf
push
inc
push
aaa
mov
mov
sbb
leave
inc
push
mov
aam
stos
mov
shll
dec
or
insb
jnp
sub
xlat
pop
mov
inc
lret
xchg
jl
mov
mov
and
in
jle
xlat
mov
movsb
xchg
push
inc
lcall
jo
dec
pusha
or
shll
mov
inc
pop
cmc
out
test
mov
pop
mov
and
inc
add
pop
mov
fcompl
idiv
push
push
push
sub
testl
pushf
xor
es
lret
sub
mov
test
js
test
or
and
push
and
insl
mov
jl
mov
sbb
shrl
ljmp
sbb
js
inc
in
mov
movsb
shlb
push
test
mov
enter
pop
cmpsl
pop
sub
lcall
lret
adc
fmuls
mov
sete
stos
inc
test
inc
and
sbb
cmp
jb
sbb
jmp
sbb
inc
in
sahf
jnp
imul
sbb
outsb
adcb
sub
pop
es
push
sub
xor
pop
pop
test
lds
mov
mov
out
js
dec
mov
dec
pop
lock
in
xrelease
jae
xchg
dec
out
push
ss
add
aam
rcrl
cmp
mov
loope
adc
sbbl
xchg
div
mov
rolb
sar
mov
dec
add
cmp
sbb
call
sub
ljmp
push
push
out
stos
repz
enter
movl
es
sbb
or
push
mov
sbb
xor
add
sub
xchg
inc
dec
insl
adc
xor
sahf
out
inc
stc
jmp
pop
inc
or
xchg
fnstsw
stos
jo
aaa
mov
push
aad
adc
mov
nop
insl
lods
mov
mov
mov
dec
dec
lahf
xchg
adc
xchg
inc
cmp
cmp
cvtps2pd
adc
insb
mov
jnp
pop
fst
inc
sbb
cwtl
xchg
pop
pop
ds
mov
mov
addb
sbb
movsb
pop
clc
test
pusha
sbb
cli
mov
adc
iret
push
fbstp
dec
or
or
xor
mov
dec
mov
mov
scas
insl
mov
jbe
pop
mov
scas
scas
pop
fdivrp
jecxz
rcl
enter
mov
push
aam
or
xlat
sbb
mov
cmp
push
xchg
add
ret
pusha
push
mov
sub
stos
mov
ja
xchg
and
adc
ds
sub
jo
and
push
jge
xchg
cmpsb
mov
gs
and
je
xchg
sarl
mov
mov
movl
xchg
jno
xchg
outsb
ficoml
cmc
orl
push
in
sub
je
sub
gs
pop
sub
jnp
pop
test
jl
inc
xor
adc
adc
xor
stos
add
imul
popa
mov
test
mov
cmp
sbb
mov
push
arpl
and
push
stc
popf
push
ds
jae
lret
mov
pop
dec
lods
lds
hlt
cmp
xor
test
push
ret
mov
lods
inc
pop
cltd
je
lret
mov
xchg
mov
fisubrs
or
rol
dec
push
pop
nop
dec
xor
fwait
adc
nop
sbb
sub
sbb
inc
lea
push
and
or
pop
clc
daa
in
inc
rorb
mov
mov
sub
inc
pop
push
imul
lods
push
sti
dec
xchg
and
cld
add
jl
cmp
rcrl
xchg
dec
pop
jo
push
dec
outsb
or
mov
adc
lahf
lret
cmp
mov
cmp
rolb
push
shrl
mov
sub
inc
xor
push
cmp
xchg
popa
xlat
sub
mov
jne
mov
into
mov
pop
adc
in
int3
fcmovnb
mov
xchg
inc
xlat
dec
into
and
mov
mov
or
test
add
out
repz
aam
mov
cwtl
data16
imul
pop
mov
jp
mov
add
pop
add
jns
popa
call
sti
xor
test
xor
notl
repnz
xor
or
outsl
leave
pop
push
push
dec
rcrl
lods
and
nop
out
or
in
outsl
push
dec
mov
pop
sbb
ret
push
cmpsl
popf
fbld
lea
xlat
lds
jg
cwtl
mov
setl
jo
arpl
enter
cmc
dec
push
mov
shlb
adc
xor
jmp
ret
aas
idivl
jne
in
popa
cmovg
pop
int
jecxz
jnp
out
and
add
cld
std
dec
mov
sbb
adcb
mov
rcll
jle
data16
jge
pop
out
or
aas
inc
scas
jecxz
adc
mov
out
sbb
cmp
fisubl
insb
insb
icebp
push
push
and
xchg
pop
sbb
adc
mov
xor
add
mov
lcall
xor
xor
jo
cld
cmp
and
scas
je
and
jnp
dec
dec
push
xor
jnp
imulb
mov
stc
cmp
pushf
adc
test
or
adc
mov
jbe
pop
jmp
dec
stc
sub
pop
cmc
cli
xor
ja
sbb
fsts
lret
negl
das
int3
sar
mov
ds
mov
push
push
jnp
xchg
ds
or
aam
push
andl
add
push
cmp
mov
and
nop
or
xchg
dec
nop
ret
lret
pop
push
testb
cwtl
pop
mov
out
out
subb
sbb
imull
icebp
xor
mov
sbb
inc
mov
jns
aad
scas
and
sti
push
xchg
test
mov
std
sub
iret
sbb
repz
cmpsb
insl
xor
add
or
fs
lret
mov
pop
cli
ljmp
xor
jae
mov
rclb
push
xor
int3
or
xor
jo
pop
push
fcmovbe
imul
xor
mov
add
add
mov
in
jbe
mov
fsts
sub
cmp
add
or
xchg
cmpsb
movb
add
pop
push
push
xor
shll
push
dec
imul
adc
xor
data16
jnp
xor
fmull
and
adc
lret
mov
adc
mov
fimuls
je
adc
sub
mov
fmul
stos
fxch
fisttps
jecxz
dec
pop
sti
imul
jecxz
xchg
outsb
xchg
xor
lcall
push
mov
mov
jg
dec
pop
cld
fucom
jecxz
jbe
lock
mov
aas
lret
out
insb
cmp
shrb
scas
rol
push
testl
cltd
mov
hlt
pop
fs
xchg
insl
stc
add
not
jbe
xchg
out
clc
push
lret
or
popf
js
sbb
fcompl
mov
and
cltd
incb
fistpll
pop
arpl
or
cmp
mov
jecxz
lods
loope
leave
or
lahf
cmp
sub
adc
inc
mov
pop
sahf
in
and
addr16
shl
or
inc
and
sti
push
imul
dec
fsts
push
outsb
out
fnsave
sbb
sti
loopne
aas
lods
hlt
sar
popf
push
xchg
test
push
je
fimuls
inc
pop
mov
sbb
pop
cld
imul
push
inc
mov
into
push
adc
shlb
xor
cmc
dec
in
mov
jl
add
dec
rol
inc
aaa
pop
lret
fidivl
lret
xor
xlat
imulb
pop
je
mov
jae
sbb
sub
mov
mov
in
inc
fcoml
leave
daa
add
add
push
cmp
lds
inc
test
jp
jmp
outsl
clc
daa
mov
in
push
sbb
xor
bound
add
xchg
sub
mov
std
mov
sarb
push
cmp
daa
out
mov
mov
inc
cs
cwtl
repnz
xchg
cli
aad
fcoms
inc
or
jge
popa
into
push
decb
sub
mov
sub
lcall
sbb
push
jns
push
mov
cmc
mov
xchg
gs
ret
mov
mov
sbb
mov
testl
orb
push
pop
or
push
test
inc
dec
ljmp
or
push
mov
push
sub
ret
sub
mov
pop
dec
xchg
data16
adc
loop
mov
xor
dec
lret
sbb
mov
aam
mov
shll
js
mul
movsl
mov
fnstcw
cmpsb
push
push
pop
repz
xchg
mov
push
mov
xor
ror
jge
xlat
imul
sbb
sub
rorb
dec
test
in
sub
add
loope
loope
stc
scas
cmp
lcall
shrb
outsb
lock
lds
adc
dec
sbb
jge
mov
test
sbb
daa
scas
push
out
mov
iret
rcrb
hlt
pop
fs
ljmp
xor
das
and
mov
sub
adc
dec
pop
aaa
sbb
call
xchg
femms
push
rcll
sub
push
xor
jg
jmp
pop
jb
push
cmp
jne
int
int
sbb
cs
cwtl
jl
xchg
inc
es
jle
ss
push
imul
inc
dec
mov
data16
insb
test
xorl
mov
stc
dec
jo
mov
rorl
dec
push
out
loopne
mov
lods
ficoms
jae
in
pop
add
es
pop
dec
xchg
loop
das
aaa
sbbb
xchg
sub
push
jmp
imul
cmc
adc
nop
pop
outsl
sub
mov
cs
arpl
mov
idivl
adc
cmp
xchg
mov
push
scas
push
addr16
adc
daa
sbb
std
in
sub
insl
push
dec
fstps
pop
into
cli
push
fsts
xor
xchg
jb
dec
xor
ja
adc
arpl
sti
test
xlat
fidivs
mov
sbb
lret
mov
mov
adc
arpl
push
mov
test
fimull
lds
sub
xchg
hlt
stos
xchg
push
rcll
cmpsb
pop
jecxz
inc
add
mov
cmp
sbb
add
out
fildll
push
fwait
call
fincstp
pusha
mov
lods
rcr
add
mulb
push
push
test
push
fsts
jge
push
fucom
jle
mov
rcl
mov
in
ss
sub
dec
int3
popf
femms
jg
or
push
lret
push
pop
or
push
in
movb
sarl
aam
ret
imul
mov
mov
pop
rclb
aam
push
xor
lods
push
aaa
inc
fldl
cli
gs
xor
xchg
jb
scas
pusha
stos
lahf
in
mov
pop
and
pusha
xchg
inc
fcmovnu
call
das
fidivl
stos
xchg
aas
lcall
and
shll
push
in
xchg
loopne
push
nop
aam
mov
dec
mov
js
sub
adc
push
adc
mov
mov
inc
jmp
cmp
fdivrs
fstpl
arpl
hlt
lods
jge
lods
sbb
dec
or
mov
jns
pushf
orl
jle
jge
mov
shrb
lock
push
hlt
sbb
cltd
flds
in
xor
push
dec
aaa
jp
test
add
popaw
and
jge
jg
sub
pop
mov
fs
sbb
in
out
cmp
outsb
pop
pop
jno
out
cltd
pop
mov
cs
lret
es
add
xchg
mov
scas
mov
fbld
xchg
ja
das
int
int
mov
xchg
fldenv
fcoml
lds
add
popf
jb
mov
add
mov
push
mov
fcmove
adc
aad
xor
enter
data16
cld
sbb
cwtl
push
movsb
ss
mov
cltd
ja
loop
jmp
daa
jge
mov
mov
loopne
add
cmp
and
fldt
shlb
sub
xor
or
scas
shlb
dec
push
or
jno
add
dec
sub
ds
or
pop
int3
sahf
call
fists
cmp
loopne
xchg
out
dec
fwait
jg
fwait
xorb
dec
jg
jg
cwtl
mov
filds
xor
add
and
and
xchg
jle
push
mov
sbb
fwait
in
jo
mov
rcrl
jmp
lea
insl
xchg
xchg
rolb
xor
jp
sti
jle
aaa
sbb
jo
repz
add
cmp
insl
lret
in
pop
mov
push
jo
jno
fsubrl
cmp
and
lahf
aas
xor
mov
outsb
hlt
sbb
test
mov
xchg
mov
mov
div
mov
pushf
cmpsb
rolb
ret
fdivr
mov
pop
dec
and
mov
inc
hlt
test
lods
loop
mov
sti
xchg
adc
insb
pop
std
cld
sbb
jns
and
lods
pop
dec
shlb
ds
fnstcw
pop
cmp
and
loopne
in
add
xchg
std
std
mov
scas
push
cmpsb
fs
lret
lret
push
in
and
test
jecxz
fwait
cmp
fld
pop
test
test
ret
jnp
mov
add
enter
vpcmpeqw
cmp
adc
out
jo
dec
ljmp
mov
sub
push
repnz
jb
clc
icebp
add
xor
es
ja
xchg
sti
rclb
mov
mov
mov
mov
enter
roll
add
pop
sbb
jl
rcl
std
fdivr
jle
xor
jecxz
dec
mov
ljmp
and
fldl
cmpsb
imul
mov
cmc
push
lock
dec
xchg
xor
inc
insl
ja
sahf
xchg
aas
das
mov
sub
call
mov
adc
sbbl
mov
mov
cmp
std
mov
lret
stc
adcl
adc
xor
jnp
out
jg
xchg
jl
or
sbb
or
mull
sbb
movsl
xorl
pop
pop
mov
incl
adcb
lods
stos
cmp
aam
mov
test
pushf
iret
popf
lcall
inc
sub
div
sbb
out
bound
sahf
sbb
arpl
pop
outsl
rcll
int
jno
ljmp
cmp
cmp
int3
sbb
mov
and
cld
loopne
cwtl
aad
sbb
ror
bound
add
cmp
xchg
inc
xchg
inc
adc
test
xor
xchg
dec
daa
ret
fbstp
aad
jecxz
mov
jo
orl
out
daa
pop
icebp
rcl
xor
xchg
out
lcall
fidivs
jno
xchg
jl
popa
cmp
push
push
aaa
pop
icebp
xor
loopne
das
mov
cmp
leave
sahf
push
rcll
sbb
popa
les
bound
push
pop
out
push
and
mov
mov
adc
movsl
xchg
jmp
jl
adc
and
mov
jle
cmp
lahf
outsl
xchg
xchg
stos
push
in
out
orl
mov
fistps
sbb
in
hlt
daa
cmp
cmp
cmpsb
sti
test
outsl
dec
ret
add
rcrb
pop
jp
lea
pop
add
hlt
lds
test
xlat
inc
inc
mov
pop
data16
nop
test
mov
push
out
push
jmp
add
in
push
mov
xor
jne
fadds
lret
adc
loope
xor
mov
xchg
mov
cmp
sub
and
fidivs
dec
inc
pop
jmp
or
add
adc
out
xchg
pop
dec
stc
pop
mov
or
xor
std
scas
popa
cmpsb
cli
mov
jecxz
mov
mov
sbb
pop
push
dec
fdivrl
dec
cli
ss
fstl
xchg
push
mov
aam
bound
fbstp
gs
xchg
daa
adc
into
sbb
pop
std
fidivl
pop
jne,pt
dec
je
in
cld
rcl
mov
inc
fisttpll
xchg
add
shl
and
xor
addr16
xchg
movsb
repz
or
mov
std
jns
xchg
and
jge
cld
jno
push
adc
call
movsb
jmp
and
mov
lret
inc
loop
aad
lea
adc
inc
pop
or
mov
repnz
sub
ret
sub
xchg
rorl
dec
aas
add
inc
mov
andl
and
test
jbe
mov
cmp
scas
add
clc
lcall
ret
iret
push
lds
mov
ds
movsl
lahf
dec
insb
dec
and
and
add
pop
jbe
adc
jbe
out
sbb
mov
sbb
mov
daa
add
rorb
je
mov
pop
xor
push
jb
pop
pop
les
sarb
adc
dec
lcall
insb
jno
jo
hlt
imul
out
ljmp
subl
jl
lahf
test
gs
fsub
mov
movsb
push
cltd
mov
mov
loop
jmp
push
adc
xor
inc
loope
divb
sbb
dec
inc
add
mov
mov
mov
or
hlt
xchg
xor
test
lods
sbb
pop
sub
das
push
das
inc
addb
in
mov
jmp
mov
clc
cmp
sbb
push
jno
insl
inc
int3
or
or
sarb
pop
sbb
mov
mov
lock
dec
and
cmpsl
les
jge
pop
mov
cmp
into
outsl
test
pop
test
mov
sbb
mov
add
ret
cmp
dec
cmp
or
fnstcw
push
arpl
ret
mov
cwtl
xor
out
iret
test
xchg
mov
and
ficompl
sbb
nop
mov
lea
pop
xorl
loopne
push
and
inc
mov
jp
popa
jns
xchg
outsl
mov
je
adc
lahf
sub
out
shl
adc
cli
ss
stc
mov
or
jge
mov
call
out
in
adcb
stos
xor
mov
sub
or
shrb
inc
cmp
test
fnstsw
mov
xchg
cmpsb
inc
sub
fneni(8087
dec
sub
or
int3
jl
sti
sbb
pushf
pop
aad
push
lods
fwait
leave
xor
xchg
pop
dec
das
repz
jmp
dec
jne
dec
pop
popa
jp
sbb
lea
lret
push
enter
imull
pop
bswap
xchg
mov
add
mov
or
lods
data16
mov
cmp
push
pop
aad
sbb
push
dec
das
jno
mov
mov
mov
sbb
inc
decb
outsl
jns
cmp
shlb
cld
fwait
arpl
push
test
jge
data16
inc
push
enter
filds
cld
movsb
dec
je
push
rcl
popf
fimull
das
pop
cld
jge
adc
lahf
aad
in
lret
stos
and
lods
sub
shlb
sbb
jge
pop
adc
and
pop
push
iret
loopne
or
xor
sbb
lock
fs
incl
mov
push
push
mov
adc
cmpsb
jae
and
jp
leave
xchg
mov
mov
shl
aad
stc
and
inc
or
inc
push
in
arpl
sbb
lods
push
cld
push
lea
or
dec
fsubp
jo
dec
fs
mov
fadd
lahf
push
and
jmp
enter
cmp
xchg
addl
stos
clc
sub
imul
jmp
sbb
mov
push
cwtl
xchg
sbb
sahf
mov
cli
shlb
movd
lea
push
pop
popf
xor
aaa
xor
sub
daa
aad
ja
xlat
scas
imul
int3
push
pop
imul
cli
or
adc
xchg
insl
in
xor
mov
jle
push
jge
sbb
push
mov
rcr
call
or
aaa
fdivrs
pop
loop
je
shrb
inc
shrl
rcrb
xor
loop
int3
sub
jmp
inc
and
mov
mov
std
pop
jno
sub
xchg
mov
fs
ja
inc
ds
dec
mov
enter
or
cmp
imul
rclb
mov
jns
or
adc
mov
jg
or
je
push
add
dec
or
adc
push
hlt
loope
shlb
ljmp
pop
xchg
pop
adc
jl
dec
sub
lods
jno
in
mov
mov
ret
jo
inc
adc
jbe
scas
into
lea
les
out
mov
adc
xchg
scas
orl
in
mov
js
and
sub
in
fnsave
aas
pop
out
imul
lahf
cmc
orb
mov
xlat
inc
sbb
cltd
sub
xchg
imul
cmpsl
enter
and
daa
aam
pop
sub
jno
test
push
or
sub
ljmp
add
clc
cmpsl
and
sub
ret
movl
out
loop
cltd
enter
jno
insb
jo
inc
push
loope
call
int3
dec
inc
mov
sbbl
leave
xor
ret
fnstsw
call
push
add
cmp
dec
mov
cwtl
jge
or
xor
pusha
xchg
pop
pop
or
icebp
in
in
outsl
push
pusha
hlt
inc
sub
pusha
fldenv
movsl
fimull
int
addr16
stos
loop
pop
mov
mov
in
or
repnz
sti
les
jno
add
ret
lds
adc
cld
dec
inc
ror
mov
sbb
sbb
xorb
add
cmp
push
inc
xchg
lea
add
xchg
mov
test
icebp
pop
mov
ret
pushw
out
adc
dec
or
xor
rol
mov
cwtl
push
and
jg
dec
outsl
es
cld
dec
cli
dec
push
enter
loopne
dec
rcll
imul
stos
pop
inc
jne
jle
xor
and
add
pop
push
es
mov
decb
jnp
cmp
inc
xlat
jns
and
sub
pop
add
ret
dec
pop
in
in
repnz
sub
mov
mov
and
insl
icebp
in
fisttps
cmp
or
sbb
dec
cmpsb
adc
add
jmp
sub
mov
add
insl
inc
rcr
mov
insl
xchg
scas
es
in
adc
mov
clc
xchg
in
or
mov
sti
fdivrs
frstor
in
es
mov
inc
lcall
out
subb
pushf
jo
mov
lret
mov
int3
or
xor
repz
adc
inc
xchg
sbb
bound
mov
sbb
std
or
sbb
lret
gs
lods
leave
push
arpl
pusha
and
adc
adc
fldcw
pop
mov
adc
shll
sbb
dec
int
mov
fcomps
jnp
loop
insl
jg
ror
mov
and
xchg
xor
xchg
sub
lods
cli
fstps
xorl
inc
scas
inc
adc
xor
push
rcrb
fwait
scas
and
push
adc
call
ret
int
pop
jb
loopne
jno,pn
mulb
jl
sahf
test
xchg
test
stc
jno
sbb
icebp
addr16
repnz
inc
mov
xchg
mov
std
mov
push
lahf
mov
icebp
jno
add
sti
jmp
lret
lret
mov
es
stos
or
or
and
adc
in
fs
cmp
add
push
cmc
push
sbb
inc
lods
scas
mov
push
and
stos
xchg
lret
and
out
test
mov
sub
mov
mov
es
jbe
xor
mov
lods
scas
mov
data16
xchg
cmp
mov
loope
lret
in
andl
dec
rcl
loope
xor
pop
shrb
mov
inc
scas
rolb
xchg
repz
jmp
rcrb
hlt
mov
xor
and
pop
inc
jp
addr16
sub
mov
rorl
inc
mov
and
pop
or
push
test
add
addr16
inc
cltd
push
imulb
xlat
cli
or
inc
pop
or
adc
mov
js
add
sub
or
ficomps
cmp
adc
push
cmpsl
adc
notb
and
imul
leave
sub
inc
cltd
inc
arpl
inc
cmp
or
fistpl
xchg
cltd
mov
in
inc
add
stc
jl
idivl
push
xor
mov
or
in
pop
outsb
nop
mov
ss
cmpsb
dec
daa
ret
fwait
mov
mov
insb
cmpsl
test
mov
outsb
jp
hlt
loope
imulb
sti
xor
outsl
scas
jnp
out
cli
xchg
jle
shlb
test
pop
mov
cwtl
sbb
and
sub
jo
pop
pop
mov
push
leave
mov
sub
pop
pop
mov
xchg
stc
xor
lods
cmp
popa
cmc
test
add
xchg
out
testb
int3
pop
pop
testb
xor
bound
lods
ret
loopne
mov
insl
jp
jge
mov
pop
push
sub
in
inc
dec
jle
fstl
dec
shrl
mov
jmp
add
ret
sti
cli
adcb
lcall
lahf
jmp
jbe
xor
dec
in
and
jge
mov
pop
mov
jbe
and
sub
jg
sti
sbb
adc
add
mov
out
xlat
js
fcoml
jge
vmwrite
mov
sbb
push
cmp
shrl
add
sub
add
loop
addr16
mov
mov
sahf
xor
nop
add
ss
jae
dec
xorb
jmp
ja
out
xor
dec
stos
inc
stos
lds
xchg
repnz
mov
lret
into
jns
jl
cmp
dec
data16
mov
es
inc
and
cli
les
stos
lret
jecxz
jnp
xchg
movsl
and
xor
and
jb
mov
lahf
nop
mov
adc
xor
in
fbstp
bound
pop
or
sbb
add
iret
std
mov
sub
add
jbe
ja
jns
mov
roll
jmp
insb
and
les
sbb
je
imul
loopne
in
scas
test
or
mov
bound
enter
aaa
mov
cld
and
push
test
and
mov
adc
push
mov
dec
jbe
stos
inc
sub
sbb
xchg
stos
cmp
addr16
stc
adc
stos
sbb
lret
cli
fstl
cwtl
hlt
lret
in
imul
ss
test
pop
int3
jg
push
bound
mov
mov
pop
pop
push
lahf
jmp
cs
add
pop
stos
dec
std
fdivs
xor
repz
gs
mov
mov
pop
inc
push
push
popf
lds
loopne
sbb
leave
add
ja
lock
cmp
mov
xor
int
inc
insb
es
xchg
or
shll
cmc
movsb
inc
mov
or
repz
lahf
sub
pop
fadds
or
push
push
mov
jl
bound
xchg
cmpsb
stos
fwait
mov
pop
jl
jle
cmc
cmp
test
fxch
inc
mov
scas
mov
or
and
daa
inc
push
imul
insb
aad
insl
into
fs
sub
les
das
repz
mov
jle
arpl
fmulp
lret
push
mov
xchg
mov
fiaddl
insl
xchg
mov
lcall
js
loopne
adc
lea
loopne
lods
outsl
dec
pop
push
mov
inc
jae
pop
cmp
popf
inc
sub
or
stos
mov
ficomps
sub
push
mov
mov
pop
fsubrs
fs
orb
rcr
rcl
dec
mov
mov
dec
pop
dec
or
push
js
fwait
cli
in
addr16
scas
addl
mov
adc
sbb
jge
dec
xchg
sbb
push
pushf
pop
inc
and
call
faddp
jo
cltd
xlat
mov
cs
and
je
mov
pop
fs
daa
pop
add
in
push
xchg
shrb
fisttps
mov
setg
mov
repnz
push
outsl
adc
mov
dec
and
in
dec
inc
mov
lret
movsl
sub
mov
lcall
fcomp
mov
xor
jnp
jp
pop
inc
shr
push
xor
gs
xchg
push
aad
loope
pop
shll
pop
lea
roll
adc
sbb
pop
dec
insl
mov
jmp
stos
pop
incl
arpl
xor
pop
enter
xor
leave
xor
test
pop
mov
mov
aas
cmpl
jb
adc
push
mov
jo
adc
test
inc
mov
xor
in
call
lock
repnz
pop
rolb
lret
push
daa
jne
mov
mov
jne
adc
bnd
mov
add
mov
fbstp
out
data16
pop
mov
daa
test
push
mov
mov
mov
jo
ror
cld
sub
pushf
add
ret
outsl
mov
xchg
in
pop
rcrl
pop
inc
dec
inc
dec
cmp
arpl
dec
pushl
dec
pop
jge
ficoml
pop
xor
adc
rorb
andl
popf
mov
sbb
jno
add
orb
lds
mov
jecxz
inc
pop
jnp
in
or
mov
sbb
mov
mov
cmp
gs
and
fmuls
ret
mov
sub
outsl
fidivrs
mov
mov
incb
pusha
mov
add
sti
jge
and
sbb
sub
xor
into
pop
pop
mov
mov
lcall
sub
xor
pushf
cmp
push
aaa
out
push
shll
repnz
inc
jge
aad
xor
nop
hlt
mov
cltd
and
push
dec
dec
sbb
cli
nop
xchg
add
pop
jo
mov
sbb
xchg
mov
test
inc
push
rorb
push
mov
inc
cmp
push
cmp
xlat
fbstp
sub
cld
fistpl
and
add
mov
xchg
mov
nop
mov
pushl
pop
jbe
aas
pop
arpl
les
idivl
std
inc
scas
xchg
xchg
mov
lcall
push
xchg
xchg
sub
adc
lret
ljmp
fsubl
pop
addb
inc
xchg
fs
int3
outsb
sbb
xchg
les
mov
lret
push
bound
fdivl
or
out
sub
xchg
in
imulb
or
sbb
mov
outsb
clc
inc
pusha
push
lods
adc
jmp
xor
pop
xchg
cmpsb
mov
insl
cmp
rcl
jnp
jecxz
cmp
adc
scas
fld
lods
mov
mov
dec
dec
pop
cli
dec
xchg
mov
popa
cmp
xor
inc
test
dec
addr16
int3
mov
or
icebp
inc
fldl
adcl
movsb
xchg
and
pop
pushf
in
bound
popf
loopne
push
sti
scas
dec
cld
mov
repnz
jge
xor
call
popa
sbb
jl
mov
cmp
test
leave
in
fidivl
cld
lret
in
jb
lea
es
push
fisubrs
fdivrp
pop
mov
push
daa
inc
testb
jbe
inc
fmull
test
jl
loope
movsb
mov
jmp
add
push
stos
sbb
jle
pop
repz
mov
es
mov
enter
and
adc
jg
call
imull
or
cmp
jae
or
jmp
and
pop
iret
lods
mov
cmp
push
out
cmp
jp
iret
pop
cmp
dec
push
jle
fwait
outsb
cmp
stc
jge
sub
fsts
pop
scas
leave
out
lret
dec
js
mov
aas
pop
scas
xchg
iret
pop
dec
les
and
xchg
movsl
andb
cmpsl
and
ret
mov
popa
xlat
jp
outsb
mov
mov
cmpsl
repnz
mov
xchg
lcall
mov
loope
sub
and
and
mov
or
les
iret
test
mov
jle
ror
mov
push
lods
pop
mov
test
aaa
sub
xor
lret
outsl
subl
js
aaa
sbb
ret
fisttpll
and
push
add
out
popa
inc
daa
sbb
mov
mov
call
insl
mov
outsb
mov
push
push
arpl
add
mov
or
push
jne
movsb
push
or
adc
xor
push
push
pop
jmp
lcall
add
jmp
outsb
es
push
rorb
aaa
mov
xchg
xor
and
in
lods
sbb
sarl
lcall
jp
cli
nop
call
push
push
daa
cmc
xchg
shrb
adc
nop
loop
aam
in
inc
sbb
pop
negl
jle
lahf
mov
xchg
mov
pop
push
mov
cmp
je
push
jo
int
dec
add
pop
in
std
push
in
mov
test
shl
pop
movsb
push
negb
or
dec
pop
call
das
cs
outsl
mov
shl
or
outsl
add
mov
jg
and
test
outsb
mov
or
mov
jp
sub
fldt
sbb
jmp
push
subl
add
pop
call
mov
pusha
cltd
cmp
popf
mov
in
daa
push
mov
cld
jbe
mov
jge
push
or
mov
push
push
popf
pop
xchg
repnz
popf
fdiv
xor
or
int
mov
ss
nop
xchg
lods
cmpsl
xor
shlb
jnp
dec
jle
and
icebp
cmpsl
divps
sbb
sarl
xlat
jge
xchg
cmp
cmp
lcall
mov
outsb
sahf
icebp
lcall
jns
test
push
hlt
pop
pop
inc
rorl
testb
add
ja
movsl
roll
ljmp
pop
pop
es
leave
push
arpl
push
inc
add
sub
in
mov
popf
sbb
nop
cmp
jecxz
mov
xor
push
enter
pop
sub
enter
jb
jge
jbe
lret
inc
stos
xchg
adc
pop
mov
ljmp
test
dec
and
jne
mov
xchg
cmp
in
data16
or
cld
lret
mov
mov
fldcw
adc
sub
adcb
cli
inc
int3
jp
lods
inc
nop
inc
testw
out
or
in
push
sub
loop
jnp
cwtl
je
adc
dec
mov
mov
push
mov
repnz
mov
mov
cld
enter
pop
stos
xor
push
sbb
dec
jne
lods
or
push
sbb
sub
mov
mov
inc
shl
adc
and
outsb
cwtl
pop
mov
std
fs
in
lea
lahf
cmpsb
mov
packuswb
mov
adc
arpl
lock
data16
clc
stc
jb
cmc
rorb
cmc
std
pop
mov
or
shl
divl
push
or
lds
aas
mov
adc
xchg
ret
and
add
icebp
scas
mov
xor
out
pop
cli
push
sbbl
and
hlt
iret
in
dec
leave
or
scas
add
add
movsb
mov
and
pop
mov
loope
mov
insb
and
pop
mov
mov
movl
push
and
sar
jo
insl
add
rorb
xor
mov
fucomp
pop
cmpsb
pop
lret
mov
mov
inc
add
mov
call
rcrb
add
popf
fs
clc
std
in
sub
pop
pop
xorb
push
lcall
mov
in
imul
add
mov
adc
pop
shlb
dec
in
dec
jle
dec
out
sbb
and
add
lahf
and
inc
stos
mov
xor
das
jmp
mov
das
mov
sbb
pop
xor
adcl
movsl
stos
popf
pop
int
out
icebp
rorl
popa
inc
testl
pop
stc
in
pop
mov
xchg
in
clc
and
mov
jns
mov
mov
out
jb
outsl
repz
stc
and
ficoms
mov
or
jne
and
and
popa
inc
xchg
xor
lret
pop
mov
int
pop
cmp
jge
xchg
push
test
ljmp
cltd
inc
call
sbb
les
leave
lcall
push
in
fildl
fistpl
xor
pop
lahf
jns
inc
jp
iret
out
or
fwait
fs
mov
dec
clc
insb
add
shll
mov
mov
push
outsb
mov
addr16
pop
mov
shlb
xor
mov
mov
dec
jmp
xchg
pop
lods
mov
push
shlb
mov
xor
insb
test
lret
ds
imul
lds
push
mov
mov
std
inc
fisubrl
fs
mov
ds
movsl
in
or
mov
in
and
in
or
js
dec
int
scas
js
sti
cmc
aas
jmp
mov
sub
xchg
mov
and
xlat
lret
testl
push
and
add
push
mov
push
cld
cmc
fmul
push
lock
xor
mov
jae
jbe
xchg
xchg
push
ja
dec
push
scas
repz
xor
test
loop
mov
lret
movsb
add
or
loope
ret
dec
imul
lea
add
out
sub
pop
push
and
xor
sub
add
icebp
cwtl
xchg
fadd
sub
arpl
fnstsw
cmp
test
ljmp
dec
out
lahf
inc
fisttpll
lret
jbe
sbb
data16
lods
push
lock
dec
pop
insl
or
dec
push
ds
inc
xor
loop
push
inc
loopne
pop
aam
mov
cwtl
fisttpl
xor
enter
push
in
xor
popf
inc
push
mov
imull
mov
enter
sbb
test
imul
fldt
inc
loopne
mov
mov
push
mov
mov
xor
and
out
lea
ss
clc
int
insb
push
leave
pop
jae
dec
push
pop
je
sbb
lods
push
sub
mov
sbb
repnz
adc
ret
scas
pop
int3
mov
add
mov
outsl
int3
mov
lds
dec
inc
mov
outsb
xor
pop
lods
xchg
shlb
dec
je
loopne
loope
xchg
mov
cmc
andl
jae
cmc
jb
inc
lds
lock
ss
adc
xchg
aam
out
ret
push
daa
jmp
movsb
dec
ret
shlb
call
icebp
rolb
or
lahf
push
add
jo
xchg
in
fisubrl
fsubl
push
mov
nop
add
in
stos
dec
addr16
push
lds
dec
xchg
mov
stos
push
xchg
fs
insb
add
movsl
xlat
mov
movsb
stos
mov
stos
mov
push
scas
fidivrs
push
out
add
iret
fnstsw
bound
jmp
push
mov
loope
or
jmp
outsl
push
sub
imul
inc
mov
pop
pop
xchg
mov
insb
insb
pop
aam
lret
inc
inc
dec
fs
sbb
sub
test
or
mov
test
pop
in
cmc
outsl
cmp
nop
fsubp
lds
adc
mov
dec
pusha
arpl
cmp
push
enter
adc
dec
mov
mov
xchg
cmp
shll
push
push
test
inc
sbb
ljmp
test
adc
pop
and
out
mov
xchg
or
movsb
es
test
ret
mov
pop
xor
jb
dec
or
in
inc
imul
imul
daa
push
out
test
and
inc
pop
adc
adc
loope
arpl
cmp
ljmp
lcall
es
cltd
stos
repz
xor
dec
cmpsb
jnp
rcr
loope
scas
shll
jne
std
fwait
sbb
aad
xchg
and
repz
pop
fucomp
dec
sahf
ret
gs
adc
insl
cwtl
lea
arpl
dec
daa
inc
lds
movsb
or
inc
fidivrs
mov
sub
add
pop
push
push
adc
insb
frstor
add
fistl
mov
fildl
inc
mov
push
or
into
icebp
xor
test
sbb
lcall
cs
mov
in
jae
adc
loope
jp
push
fdivrs
sbb
mov
pushf
outsb
pop
in
inc
dec
fmull
pop
cmp
sarl
dec
and
mov
nop
jmp
dec
es
aaa
mov
xchg
mov
or
subb
sub
pop
and
insl
add
sti
pop
cli
mov
push
push
xor
lds
stc
leave
lret
clc
mov
scas
cmp
adc
int
pop
mov
out
mov
xchg
adc
sti
lea
mov
pop
push
imul
dec
test
pop
lret
cmpsb
int
pusha
mov
xor
cwtl
sub
push
push
icebp
in
or
jmp
out
imul
int3
shl
lret
out
push
dec
adc
mov
mov
add
fdivrl
pop
clc
sub
in
js
sub
stc
or
jl
and
rolb
arpl
mov
add
mov
jg
xchg
movl
loope
sbb
pop
shlb
hlt
xor
dec
dec
mov
push
loop
cmp
and
jb
aaa
xchg
dec
movb
jns
or
adc
push
int3
cmp
orb
jbe
pushf
leave
ss
pop
loopne
dec
insl
hlt
lret
stos
mov
andl
and
loop
dec
mov
cmpl
inc
push
dec
roll
loope
adc
pop
ss
jb
movsl
invd
cmp
outsl
adc
stos
jns
jb
popa
outsl
jmp
les
sub
jmp
mov
nop
lods
ljmp
dec
out
dec
pop
out
mov
fidivs
mov
xchg
push
cmp
cmp
pop
out
inc
sub
pop
cltd
shll
movl
sub
push
mov
inc
jecxz
iret
or
hlt
in
mov
sub
mov
enter
sub
cmp
add
mov
aam
icebp
loop
pop
xchg
sub
in
popf
ret
cmp
jne
mov
cs
sbb
xor
aam
mov
stos
add
pushf
cli
icebp
xchg
dec
cmovp
and
scas
sub
push
hlt
bound
or
in
cmpl
fisubrl
mov
mov
ficomps
sub
fisubs
clc
or
inc
cmpsb
mov
push
jnp
jbe
lcall
mov
sub
subb
cmp
aaa
fistpll
xchg
fwait
mov
inc
mov
ss
jno
xor
movsl
push
or
push
xor
std
mov
jae
mov
jnp
rol
mov
push
cmp
push
or
into
sti
fistpl
fistl
and
adc
mov
xchg
xchg
dec
adc
hlt
sbb
mov
cmp
lcall
xchg
push
xchg
pop
cmp
jae
popa
mov
fs
fldcw
and
outsl
jb
fisubrs
add
pop
lea
mov
addr16
cmp
adc
sbb
cmpsl
inc
xor
jp
add
adc
loop
sbb
sbb
inc
pop
aas
pop
sub
in
xor
mulb
orb
je
jb
sub
loop
lods
in
push
gs
enter
int
sbb
jp
outsl
mov
addl
add
test
movhps
mov
lcall
imul
jge
daa
in
call
cmp
rol
or
daa
pushl
sbb
push
pop
lods
pop
decl
inc
lcall
imul
shlb
mov
pop
cmp
flds
cmpsb
rorb
fistpl
xchg
rorl
lcall
cmpsb
lret
cmp
popf
xchg
jp
ret
ljmp
sbb
dec
lahf
xchg
add
mov
xor
cs
roll
jae
fdivs
mov
leave
js
mov
lcall
mov
lret
insl
add
jb
sbb
scas
fsubrs
and
fldenv
movsl
add
sbb
xchg
arpl
data16
mov
lods
test
in
inc
mov
mov
cmpb
mov
push
cwtl
pop
and
mov
xchg
scas
mov
mov
lea
jae
xchg
xor
and
and
push
cmp
cmp
sahf
jmp
push
test
jno
sbb
pop
dec
push
jge
add
les
jno
sbb
iret
mov
adc
mul
int
pop
in
mov
loop
movb
jge
ret
dec
xchg
push
sbb
repz
mov
sarl
shll
or
clc
cltd
inc
mov
jae
rclb
stc
xor
out
js
push
fildll
xor
dec
imul
mov
aam
mov
in
ds
sub
cmp
fs
ss
jp
jb
and
push
jecxz
fnstcw
shlb
lret
aam
push
mov
sub
push
jne
rcl
inc
adc
sahf
and
dec
adc
mov
xor
insb
test
pop
les
ja
sub
pop
scas
std
lods
scas
and
lcall
add
sbb
push
ficomps
mov
push
lret
adc
jno
nop
movsb
push
popa
rorb
push
test
loop
sub
or
inc
lcall
cmp
fsubr
fnstsw
mov
les
lcall
or
iret
inc
out
fidivrl
ret
mov
push
dec
mov
shrb
in
xchg
fbld
mulb
test
inc
in
mov
mov
cmp
jbe
mov
ret
shll
in
or
out
sbb
jnp
pop
nop
sbb
fimuls
jp
sbb
arpl
xlat
aas
mov
xor
lahf
and
inc
icebp
cs
in
dec
cltd
and
cltd
pusha
cmp
test
and
xor
push
push
sub
mov
and
cmp
xchg
mov
jb
into
mov
add
adc
aad
xchg
arpl
dec
inc
fwait
xchg
jge
icebp
insl
sbb
sti
jno
loopne
mov
sahf
mov
sub
push
ret
dec
add
mov
xchg
cmp
icebp
cld
xchg
xor
pusha
outsb
push
mov
pop
mov
subb
sbb
aad
sub
push
shl
loop
add
adcb
gs
shlb
mov
pop
and
push
bound
orb
push
mov
mov
sub
ds
outsl
pop
push
jns
xlat
iret
test
xchg
int3
xchg
in
jl
pusha
adc
shrl
mov
xchg
cmp
inc
and
xchg
xor
cmp
sbb
xor
test
out
pop
mov
sbbb
out
repz
cld
inc
xchg
sbb
adc
into
fs
addr16
sar
decb
or
sub
das
bound
loop
jmp
loope
cmp
idivb
mov
lahf
jl
jnp
or
daa
or
dec
jge
xchg
mov
push
xor
decb
mov
pop
ss
fndisi(8087
sbb
inc
dec
jge
mov
mov
aaa
out
nop
mov
jmp
dec
hlt
xor
int
xchg
dec
cmp
xor
push
js
addr16
das
jmp
incb
jmp
dec
mov
outsb
sahf
mov
jae
push
sub
lods
mov
scas
adc
sbb
mov
add
std
inc
testb
insl
test
sub
stc
mov
jp
cmp
cmc
pop
sbb
pop
dec
push
fxtract
mov
adc
push
scas
popa
aaa
adcb
ret
out
sbbl
in
dec
fidivrl
aad
jne
jae
mov
leave
std
push
in
dec
add
loopne
jnp
mov
ret
sub
and
and
dec
outsb
cld
out
fadds
mov
or
std
jae
sub
pop
outsl
aad
lea
stos
push
ljmp
push
sahf
je
mov
ficoml
mov
daa
enter
jne
push
loopne
fbld
subl
and
iret
inc
pop
mov
mov
rclb
xchg
adc
cmpb
gs
lock
out
xor
sar
jo
icebp
les
inc
sub
lret
aam
and
movlps
call
test
fwait
movsl
stc
or
pop
and
jmp
xor
sahf
dec
mov
inc
jns
fidivrl
sahf
arpl
mov
jge
popf
arpl
dec
stc
in
add
jecxz
in
mov
sbb
inc
sbb
push
test
cmp
lock
lret
fdecstp
jne
sbb
jmp
loopne
lahf
mov
aad
fldl
jae
cmp
cltd
jg
cmp
add
inc
adc
pop
adc
jp
mov
or
mov
xor
mov
addl
mov
aas
and
ret
fildl
xor
xor
call
mov
add
loop
jnp
pushf
std
aam
imul
lods
pop
xchg
mov
xchg
dec
jg
test
ret
aaa
or
jmp
and
dec
iret
shrl
sub
cmp
pop
ret
stos
inc
mov
imul
cmp
sbb
jbe
dec
mov
test
push
mov
repz
lret
in
push
mov
daa
clc
cmpsl
xchg
mov
sbb
shrl
dec
pushf
sbb
sbb
test
lret
sub
sbbb
pushf
popf
sub
movsl
lods
es
les
mov
mov
and
or
adc
jnp
or
push
or
fildll
inc
out
js
stos
dec
fs
out
test
in
sbb
out
mov
push
sub
mov
add
xor
in
ja
push
lea
lock
cmp
xor
sub
ret
sbb
sub
xor
pop
lods
or
or
mov
mov
mov
mov
out
call
push
push
and
or
and
out
pop
hlt
xor
xchg
adc
mov
aad
push
xchg
mov
dec
daa
push
outsl
push
scas
stos
mov
stos
lret
aaa
ret
mov
cltd
or
add
inc
dec
add
xchg
shrb
test
imul
gs
popf
loopne
rcrl
sub
loope
jo
subb
aam
inc
aaa
push
or
lods
int3
sbb
adc
cmp
mov
mov
inc
cmp
mov
roll
pop
jl
test
call
sub
xchg
push
lds
jge
jne
sbb
adc
sti
pop
cmp
jecxz
outsl
fcoml
test
adc
and
out
push
mov
fisttpll
cwtl
data16
nop
leave
sahf
sahf
push
sbb
mov
test
fstpt
rorb
adc
sub
mov
and
cld
pop
inc
push
popl
icebp
cmp
xor
push
out
dec
lds
das
imul
pop
mov
lret
scas
cmpsb
call
outsb
jg
scas
rorl
lcall
stc
ror
loope
push
jb
mov
jmp
jo
call
add
pop
cmp
jge
in
xchg
cli
sub
cltd
scas
data16
ffreep
add
push
and
test
push
mov
pop
lret
lret
push
and
leave
dec
pop
mov
cli
inc
mov
xchg
call
lahf
lea
fistps
jno
fcoml
int3
imul
loopne
add
push
lds
dec
jmp
lods
xor
mov
fcoml
mov
push
mov
in
lock
es
ficomps
or
mov
add
dec
xor
clc
jp
mov
sti
xchg
dec
cmp
pop
outsb
dec
push
mov
inc
loopne
xchg
pop
lahf
jg
xor
je
pop
fxch
fwait
cmp
loop
push
idivl
mov
mov
subb
sub
das
adc
pop
add
fistpl
fistl
cmp
xchg
push
in
outsb
inc
hlt
xor
and
and
adc
cld
mov
outsl
lds
xor
adc
outsl
in
mov
lret
push
outsb
aad
jge
in
stc
or
and
sti
pop
imull
les
or
jge
jne
ficomps
dec
dec
pusha
add
imul
mov
lock
sbb
cli
jg
std
cld
lret
mov
cmp
xlat
jae
iret
mov
cs
shl
inc
lods
add
js
xor
sub
movsb
jne
xchg
mov
lahf
cmpsb
adc
adc
jb
ficoml
mov
repnz
dec
or
sub
push
inc
mov
lahf
mov
dec
into
and
mov
mov
sbb
ja
inc
fisttpll
nop
or
mov
clc
inc
lock
xor
in
sbb
insb
cmp
arpl
pop
xor
jge
stos
add
aam
dec
cmp
or
out
add
dec
dec
push
mov
mov
or
in
pop
hlt
nop
mov
popf
ja
and
cmpsb
jnp
ret
ss
adc
movsl
adc
sarl
jecxz
dec
out
enter
test
or
or
push
push
pop
pop
adc
js
xchg
jp
and
stc
addr16
or
sub
cmp
lock
sbb
mov
in
or
sbb
dec
inc
mov
stc
jle
lcall
push
adc
fwait
dec
xchg
sub
daa
decl
jmp
mov
mov
hlt
mov
push
inc
pop
imul
sarl
push
jnp
fwait
xchg
or
mov
xlat
push
divb
in
iret
notl
mov
lods
lds
mov
mov
jne
je
shl
loope
out
mov
xchg
xchg
fimuls
mov
fwait
mov
bound
mov
dec
or
mov
dec
jns
adc
adc
loop
in
sub
jo
inc
lcall
sub
pop
xor
shrl
shl
in
aaa
inc
cmpsb
mov
popa
pop
adc
jl
arpl
inc
cmc
xchg
daa
mov
leave
mov
sub
pop
repnz
scas
cmp
adc
cltd
lahf
xchg
xor
bnd
jns
xor
clc
mov
cwtl
and
cmp
addr16
sbb
mov
call
mov
cmp
fcompl
pushf
jb
rcll
push
adc
lods
out
pop
shll
cmp
les
aas
mov
call
dec
lods
mov
lea
push
fwait
inc
movsb
xor
orl
xor
mov
bound
jnp
xlat
or
mov
jo
jge
cmp
jnp
icebp
push
mov
les
xor
inc
jle
pop
and
pop
pop
mov
imul
ror
cmpl
fidivrl
mov
push
xchg
fcompl
loopne
xor
es
add
add
or
je
jne
out
cmp
pushf
jns
fcmove
xor
data16
push
icebp
fsubrl
nop
fwait
or
dec
mov
cmp
scas
inc
and
mov
into
cmc
push
xorl
and
mov
lea
inc
pop
lret
and
stc
jecxz
push
mov
push
add
jnp
adc
fwait
cmpsl
push
and
data16
sub
push
push
stos
sar
mov
outsb
jg
movsl
aas
ret
sub
shlb
jge
and
mov
shl
arpl
lods
jg
adc
fcompl
or
jno
test
movl
or
fwait
into
jmp
sti
call
cld
mov
cmp
negl
sub
jo
pop
rorb
in
repz
push
lea
mov
mov
xchg
imul
icebp
fistpl
inc
dec
out
out
push
push
shll
out
popa
in
mov
xchg
clc
cmp
cmpsl
mov
push
sbb
xchg
dec
adc
push
cltd
test
stos
jne
xlat
popf
cs
jmp
insb
sub
sub
popf
inc
xor
outsl
sbb
sbb
xchg
popa
leave
jae
add
pushf
hlt
lretw
hlt
cld
or
les
rclb
scas
cwtl
xor
inc
and
in
popa
fnstcw
sbb
repnz
push
or
cmpsb
dec
int3
jo
lods
fld
pop
pop
movl
pop
sarl
out
nop
sti
in
enter
cltd
add
jae
jbe
xchg
aam
mov
lds
movsl
test
push
fcomi
add
leave
int3
push
dec
jae
and
sub
pushf
mov
xlat
or
lcall
adc
pop
jns
jb
mov
push
sbb
and
lahf
insb
sahf
in
pop
inc
jecxz
movsb
scas
mov
xor
pop
cmpl
sahf
dec
js
push
add
stos
std
and
mov
adc
xor
xchg
lcall
nop
push
pop
ret
mov
fcomp
mov
mov
sbbb
rolb
scas
ret
mov
mov
cmp
loop
sbb
cmp
inc
cmpsb
ss
push
jge
dec
testb
jmp
loope
push
cwtl
daa
dec
push
xor
popf
pusha
jb
repnz
adc
push
add
dec
jno
adc
push
cmp
mov
add
mov
inc
dec
cmp
popf
lods
xchg
jg
xor
das
leave
int
les
jae
popa
leave
and
aaa
in
pop
push
push
xor
xchg
add
xchg
repz
in
ja
fs
mov
negl
test
aad
roll
add
mov
sbb
frstor
mov
in
cmpsb
adc
sarb
imul
enter
push
mov
shrl
add
test
add
fisttpl
int
mov
stc
notb
cmp
mov
add
cmpsb
jg
pop
push
jg
mov
and
xchg
cmp
cld
jo
lock
xchg
sub
cltd
jbe
es
mov
push
sbb
std
test
jmp
ja
fs
xchg
pop
data16
fs
shlb
and
mov
hlt
out
and
in
aaa
cmp
cmpl
insb
inc
xchg
fdivrs
mov
mov
fistps
pop
shl
cmpsl
cmp
out
popa
xchg
clc
adc
push
scas
rol
push
ljmp
ret
xchg
popf
pop
push
les
sti
inc
mov
fcomps
mov
pop
icebp
in
out
cmp
mov
mov
fisubrs
mov
adc
iret
loope
sbb
insl
sbb
push
aaa
cli
xor
jne
icebp
mov
pop
mov
cs
iret
lds
lahf
jb
lahf
jge
dec
mov
fs
enter
jae
lcall
iret
and
test
or
hlt
outsb
xor
push
jmp
pop
and
pop
mov
fildl
adc
cmpsb
test
mov
mov
fsubp
fldenv
int3
mov
in
leave
mov
roll
mov
shll
or
mov
es
cld
xor
mov
xchg
xchg
mov
jl
hlt
inc
in
jg
cmpsb
ret
into
fcoml
xchg
pop
loope
cld
add
jecxz
sbb
pop
aam
and
xor
cmpsl
or
inc
mov
pop
cld
je
adc
add
dec
sub
fstpt
jge
sti
shl
sarl
in
cmpsl
cmpl
add
sub
rol
lods
inc
into
xor
adc
cmp
jp
cmp
pop
inc
jo
loope
lods
sbb
mov
repz
xor
addr16
cmp
shlb
pop
addl
imul
xchg
adc
jnp
pop
or
add
sbb
inc
stos
arpl
push
and
pop
mov
inc
cld
adc
dec
mov
inc
ss
xor
imul
cmp
das
xor
loop
mov
and
aam
je
and
pop
dec
fdivrp
jb
jl
mov
hlt
push
push
jg
sbb
addb
out
insb
or
sbb
test
cmc
jno
inc
enter
jge
out
in
jae
pop
das
sub
rcr
jno
cmp
nop
mov
xchg
fildl
ret
xorb
add
mov
out
push
mov
call
clc
pushf
aas
std
or
scas
arpl
hlt
sbbl
mov
fcoml
xor
mov
hlt
addr16
mov
mov
cmc
out
adc
push
sub
in
adc
fnstcw
pop
add
out
lahf
enter
inc
mov
sti
adc
inc
mov
lds
sub
mov
sarl
outsb
lret
ja
insl
or
hlt
pop
lock
out
push
mov
stos
outsb
sarl
out
inc
dec
cs
dec
xchg
jnp
testl
add
mov
icebp
mov
repz
mov
xor
stos
add
jno
xchg
fistpll
jne
push
insb
popa
gs
fnstsw
mov
xor
pop
cmp
cs
cld
push
jnp
push
out
in
inc
push
mov
js
je
into
test
dec
push
xor
push
push
inc
flds
xor
scas
pusha
lret
jbe
sahf
or
xor
xlat
mov
cltd
and
pop
adc
mov
scas
shrb
call
jbe
testb
lahf
aaa
jne
push
jae
jae
jg
aam
xchg
nop
adc
and
and
mov
jne
adc
xchg
mov
pushl
arpl
adc
stos
mov
sub
mov
aaa
sbb
gs
fcompp
call
mov
cwtl
stos
ss
xchg
shl
repnz
stos
fcmovnu
les
popa
daa
in
or
or
mov
jae
xchg
sbb
clc
cld
jmp
int3
fsubp
sub
lret
pop
lcall
out
in
and
nop
mov
aad
jmp
nop
mov
gs
mov
dec
push
mov
jl
push
in
cmp
mov
popf
fnstsw
xchg
pop
xchg
es
outsb
sub
fistps
movsb
pop
sub
addl
test
xchg
mov
out
push
jmp
pop
mull
lcall
ss
xor
and
and
mov
imul
je
mov
ss
add
xchg
mov
stc
scas
mov
xor
inc
sub
fadds
lock
mov
lret
ret
mov
jns
ret
adc
push
lahf
jne
push
shlb
sub
imul
jecxz
xor
mov
and
jl
cmp
push
test
push
sub
repnz
cmc
or
sbb
jno
jno
es
inc
adc
fisttpll
or
pushf
push
adc
inc
mov
cli
cmpsb
add
inc
out
mov
inc
pusha
add
cltd
sbb
cmpb
fidivrs
sbb
cld
cli
mov
lods
sub
mov
sbb
sbb
in
sub
jg
mov
sub
mov
sub
mov
mov
negb
lahf
lods
adc
call
int
inc
call
sbb
push
xchg
mov
les
mov
fdivrs
ret
dec
fists
lret
lret
xor
mov
pop
xchg
xchg
clc
sbb
mov
dec
es
popa
mov
pop
jle
pop
popf
das
loop
loope
and
pop
test
dec
pop
stc
lds
imul
xchg
cmpb
out
cmpsb
jne
add
mov
cmpl
push
leave
jae
sahf
xlat
push
sbb
inc
stos
iret
jmp
stos
mov
pusha
or
push
inc
xchg
psrad
test
call
dec
jle
jl
in
aad
sub
xor
cli
or
addr16
jno
movsl
xchg
daa
inc
inc
jmp
test
jno
aad
ljmp
mov
dec
stc
jg
aad
add
shlb
ret
outsl
jo
lar
push
loopne
pushf
push
jnp
hlt
enter
cmpsb
push
push
fsubrp
das
or
sbb
inc
mov
adc
inc
and
ja
xchg
popa
mov
xchg
adc
mov
xchg
xchg
push
jbe
add
cmpsb
mov
es
pusha
mov
cli
jbe
shrb
jne
sub
sbb
jl
test
mov
aas
dec
data16
sub
adcl
bound
inc
int
jno
dec
fists
es
and
xchg
subl
std
nop
fwait
push
je
xor
sub
jl
lock
mov
add
ret
ret
test
sbb
sub
ljmp
fs
xlat
or
sub
ffree
movb
insl
adc
cwtl
inc
push
aaa
dec
push
dec
mov
jne
sarb
sub
in
xlat
add
imul
mov
das
push
inc
loope
ljmp
sbb
cs
fs
inc
faddp
xchg
in
jl
popl
sbb
inc
mov
data16
and
cmc
xchg
call
gs
clc
fdivs
call
cwtl
pop
mov
jmp
xchg
mov
xchg
mov
xchg
inc
fwait
sbbl
jmp
sub
js
icebp
aam
mov
xchg
out
push
cld
jmp
shr
add
inc
into
cltd
stos
push
rcrl
push
adc
adc
push
lea
arpl
sub
xor
sarl
pop
adc
jg
mov
xchg
cld
inc
outsl
pop
jb
dec
scas
pusha
pusha
addr16
xor
stos
out
dec
popf
inc
sbb
cmpsl
xchg
fwait
jl
add
addr16
mov
xor
cmpsl
xchg
mov
mov
and
jmp
mov
jbe
push
xor
jnp
sbb
xchg
cltd
xchg
push
fcmovu
push
inc
cmp
pop
or
xchg
cmp
jecxz
dec
popa
pushl
cmp
mov
push
mov
pop
dec
pushf
inc
and
stos
mov
push
aam
imul
aad
cmp
int
add
mov
mov
dec
insl
jnp
pusha
mov
stos
lods
ret
ffree
ljmp
in
cs
mov
je
push
xor
mov
jbe
mov
enter
jl
pop
or
cwtl
xor
fcmovbe
xchg
shl
or
daa
push
sbb
ss
stos
cmc
stc
push
and
push
aas
pop
out
out
pop
and
jecxz
fadd
sub
jl
testb
push
div
mov
push
sbb
out
jo
cwtl
inc
cmpsb
xchg
xchg
xchg
mov
sub
adc
mov
cmp
pop
ret
aad
mov
out
scas
dec
push
adc
pop
xchg
xchg
dec
xchg
mov
ja
in
inc
or
out
fimuls
add
les
mull
cmc
out
out
lgs
jle
and
xor
xor
cmp
sti
repnz
dec
jnp
xchg
loopne
out
adc
mov
xor
mov
pushf
aad
das
out
xchg
xchg
les
pushf
add
dec
add
sbbb
adc
mov
jmp
lea
and
icebp
add
cmpsl
xchg
push
aaa
xchg
jecxz
testb
jno
mov
or
cmp
and
aad
aad
push
nop
pusha
lods
push
jmp
imul
push
daa
shr
inc
xor
iret
out
fisubs
sbb
sub
inc
faddl
jbe
jle
push
cmp
sub
cmc
fcmovnb
add
mov
rorl
flds
loopne
in
adc
ret
mov
addl
dec
test
xchg
push
xchg
mov
decl
jbe
adc
sub
loop
cmp
popa
test
lds
jp
ret
jmp
mov
adc
dec
out
outsl
cmpsl
adc
enter
push
mov
push
mov
sahf
sbb
xor
aaa
mov
stos
push
add
repz
fistpll
fcom
mov
shlb
xchg
jp
mov
dec
inc
negl
sub
flds
jns
xchg
imul
ds
jge
int3
sbb
jae
cmp
out
cli
mov
clc
xor
cmp
lret
cmpsl
into
and
sbb
jo
shll
dec
aas
lahf
jbe
adc
sbb
cmc
inc
sbbl
addr16
cltd
cmc
pop
rorl
xchg
int
xlat
pop
test
mov
sahf
in
pusha
lock
and
cmpxchg
dec
mov
out
scas
dec
fmull
mov
cmp
rcrl
xchg
ret
jmp
movb
push
movsl
jb
lahf
sub
sbb
sbb
xchg
out
push
add
mov
pop
add
or
pusha
sbb
repz
ror
sti
and
test
ds
cmp
xchg
and
xlat
dec
or
mov
and
movsl
adc
ds
mov
xlat
add
jle
push
xor
mov
push
bound
jmp
mov
adcb
fs
mov
and
ds
mov
jnp
repz
test
ret
cs
ret
sub
inc
es
movsl
mov
sbb
movsb
push
aam
lret
push
mov
scas
cmpsb
fcoml
repz
push
xchg
fistps
sbb
daa
stos
sub
pop
dec
xchg
and
mov
imul
add
pop
jbe
incl
aam
mov
mov
outsb
mov
push
jns
imul
mov
pop
mov
adc
bound
xchg
repz
mov
cmpsl
cmc
iret
mov
xchg
dec
ret
cs
push
in
ljmp
test
xor
jp
pop
push
movsl
ss
sub
decb
add
mov
jle
call
lcall
pop
cmc
sbbb
push
lods
jae
fcmove
mov
inc
add
push
sub
xchg
int
inc
jne
adc
js
stos
add
jl
add
or
aaa
movsl
dec
jmp
jo
xor
cmp
pop
push
pop
push
cmp
sub
sub
imul
fmul
cli
scas
int
data16
dec
push
sub
xchg
pop
xor
rcrl
xchg
mov
add
test
fdivrl
sbbb
jl
xor
aas
cltd
jge
int
orl
les
push
or
jge
and
sbb
add
add
cmp
ja
dec
push
push
movsl
out
repnz
sbb
fdivrs
fidivl
mov
cld
push
dec
mov
repz
or
and
or
ffree
aas
mov
pop
in
sub
mov
cmpsb
and
loop
stos
sub
int3
shrl
xor
cmpb
adc
imul
movsb
xchg
enter
push
lret
adc
mov
mov
repz
pop
inc
out
aad
cmpsb
mov
and
fs
push
jae
clc
pop
sub
ss
into
mov
shrl
mov
jnp
ljmp
push
popf
inc
xchg
pop
sub
imul
xchg
cmpsl
lahf
mov
lahf
jl
mov
lea
xchg
mov
popf
pop
sub
xchg
jb
pop
dec
aam
mov
sti
mov
cltd
add
mov
xor
imul
ljmp
mov
push
mov
test
inc
outsb
rorl
add
loopne
test
outsl
push
jg
adc
imul
mov
inc
jle
jg
jl
outsb
cli
iret
sbb
or
jns
jb
enter
push
mov
adc
push
push
dec
leave
push
adc
mov
sub
stos
fldl
pop
add
pop
or
out
stos
xchg
xor
leave
jne
fstps
mov
mov
aas
pop
or
xor
bound
into
jg
shlb
out
int3
sbb
scas
fisubrl
adc
testb
scas
repz
popa
stos
sbb
jns
sbb
popa
das
sahf
mov
mov
inc
call
jns
call
sbb
jne
hlt
sti
and
scas
pop
sbb
daa
mov
xchg
outsb
ret
sbb
sahf
lahf
mov
shlb
mulb
dec
and
sub
sub
mov
mov
outsb
mov
or
in
scas
push
rclb
hlt
outsl
gs
dec
fdivrl
stos
imul
or
fmull
sbb
push
xchg
cld
xor
es
pop
mov
push
cmp
or
jno
and
xor
sub
int3
imul
push
jb
mov
outsb
xchg
in
test
and
nop
cmc
out
mov
sbbl
push
dec
fstpl
and
dec
inc
std
mov
lock
pop
mov
push
pop
xchg
inc
push
xor
and
cwtl
js
mov
xchg
mov
xlat
ja
fimull
jb
wbinvd
lock
lock
test
mov
jp
xor
or
sub
sbb
out
dec
imul
in
sub
and
popf
scas
add
pop
cld
sub
mov
pop
adc
mov
sbb
pop
mov
pop
adc
pushf
jecxz
mov
je
out
stc
mov
mov
ds
jge
cs
xchg
sbb
in
pop
xchg
push
cmp
inc
mov
std
or
mov
adc
cmp
mov
aaa
lcall
jnp
jae
push
adc
aaa
jge
xor
inc
inc
and
mov
inc
mov
push
outsl
ret
pushf
cld
push
aas
mov
adc
jecxz
sub
iret
xchg
pop
sbb
arpl
icebp
push
call
outsb
sahf
push
in
arpl
and
insl
sub
loop
inc
jbe
lcall
jl
or
ljmp
lret
mov
inc
jo
dec
mov
loopne
inc
mov
jp
scas
and
mov
jno
aaa
jns
popa
mov
aad
push
dec
iret
mov
xor
cld
sbb
movlps
dec
push
in
sub
push
sub
ja
outsb
mov
div
pop
pop
stc
dec
mov
out
aad
mov
clc
add
dec
xor
arpl
outsl
adc
mov
pop
push
sbb
fidivrs
loopne
cmpsb
data16
lcall
int3
mov
xchg
cmp
mov
and
pushf
mov
pop
mov
xchg
lods
sbb
out
fs
mov
movl
sti
loopne
aad
mov
pop
mov
daa
dec
push
sar
push
mov
pushf
rorl
cmp
cmp
push
jbe
ss
imul
jmp
inc
and
cmc
add
insb
cmp
inc
pop
sbb
pop
mov
leave
bsf
jl
push
push
pop
mov
xor
dec
bswap
sbb
mov
out
out
cwtl
inc
cmp
je
mov
les
pop
xchg
sub
mov
xchg
in
out
and
mov
or
rolb
dec
lods
cmc
mov
jmp
adc
and
in
fimuls
xor
neg
and
das
ja
jno
mov
jae
lret
jae
jnp
aas
mov
nop
jne
sub
and
dec
call
dec
lods
les
in
cmp
push
cltd
sbb
inc
lcall
notrack
fwait
or
ja
mov
lret
lods
outsb
mov
pop
cmpsl
imul
mov
dec
or
mov
inc
push
inc
lret
negl
mov
xchg
xchg
mov
pushf
pop
push
out
movsl
js
jae
add
pop
adc
fisubrl
addb
cmp
jge
sub
adc
dec
pop
add
xor
insl
inc
adc
int
jo
mov
std
sbb
fimull
clc
push
ss
lds
cmp
jp
pop
ljmp
adc
ret
xchg
add
adc
adc
mov
fnstenv
cltd
or
scas
rorb
add
repz
mov
pushf
lods
outsb
mov
sbb
adc
imul
sbbl
movsl
or
sub
shll
dec
inc
icebp
test
ret
imul
js
scas
jne
fdiv
adc
cmp
and
push
jnp
xchg
stc
mov
lcall
xor
decb
lcall
mov
fwait
push
xchg
arpl
daa
cmp
stc
jno
roll
outsb
inc
xchg
push
push
jecxz
sub
mov
loopne
jl
repz
add
or
mov
rcrb
adc
sub
or
and
jno
adc
imul
ja
mov
frstor
mov
mov
adc
icebp
lahf
pop
dec
lahf
jne
mov
mov
fiaddl
adc
mov
lds
jb
adc
dec
addr16
lods
jae
push
and
dec
test
inc
push
and
fcompl
bound
fnclex
jbe
inc
xchg
xchg
xchg
nop
negl
rorb
pop
arpl
das
fldt
mov
add
and
loope
pop
rclb
xchg
cmp
xchg
xor
add
cs
mov
fcmovbe
push
imul
push
mov
andl
or
sbb
cmc
clc
pushf
stc
test
sbb
icebp
arpl
jae
jns
push
cmp
cmc
mov
mov
fcomps
inc
and
inc
repnz
test
dec
cmp
arpl
dec
fstpl
xor
dec
adc
adc
scas
arpl
adc
subl
cmp
xor
adc
cmp
push
insl
repz
inc
sbb
mov
mov
push
lea
push
mov
lds
sarl
test
iret
add
inc
cld
aaa
test
repz
popf
sub
xchg
cld
insl
xor
popf
cmp
les
jmp
xchg
sbbl
adc
or
daa
mov
negl
addb
ljmp
mulps
jno
je
inc
dec
in
mov
scas
jle
xchg
xlat
inc
imul
pop
shrl
xchg
pop
je
clc
cmp
add
push
jno
outsl
cmp
adc
dec
in
cld
inc
dec
or
xor
fidivrl
pop
lock
pop
dec
push
sbb
inc
movsb
mov
push
cmp
mov
mov
insb
lret
shl
or
xor
push
and
cmpsb
xor
xchg
jl
pusha
shlb
and
push
mov
mov
xchg
leave
loope
mov
jne
fsubs
lea
and
ja
sti
dec
dec
lock
sbb
test
jl
hlt
bound
stc
mov
lret
add
pop
gs
or
mov
add
les
xchg
inc
adc
mov
cmp
cwtl
das
and
adc
stos
stos
lock
mov
into
sub
push
sub
jo
mov
and
mov
and
or
jge
jp
dec
aaa
cmpl
push
lock
imul
pop
ftst
pop
lds
outsb
mov
into
xchg
pop
leave
and
sbb
mov
or
jmp
negb
sub
mov
rclb
outsl
mov
cmp
xchg
and
cli
imul
inc
lods
loop
jns
sub
cmp
cli
adc
xchg
in
les
xor
movl
cltd
fstl
stos
mov
lock
pop
cld
mov
jbe
stos
jl
push
cmp
fiaddl
inc
push
dec
cmp
shll
in
dec
ret
mov
test
sub
sbb
stos
cltd
mov
pop
mov
mov
pushf
es
mov
mov
stos
out
xchg
sbb
add
push
and
xchg
insl
aad
jne
inc
sub
xchg
pcmpeqw
out
rcrl
mov
rorl
mov
and
in
push
mov
ret
pcmpeqw
push
fs
test
pop
pop
mov
mov
xchg
jmp
sbbl
adc
mov
pop
mov
dec
sub
xchg
dec
mov
clc
paddusw
and
sti
shl
inc
js
push
adc
out
dec
push
mov
cltd
fwait
or
xchg
push
aad
inc
fmull
shll
les
into
pop
mov
mull
ja
xlat
inc
cmc
cmpsl
nop
xchg
jg
iret
xchg
sub
adc
lahf
repz
push
cs
sub
pushf
jns
aam
out
xor
push
mov
sbb
test
in
add
or
pop
adc
xchg
pop
sub
std
dec
push
je
loopne
mov
ja
or
movsl
cmp
repz
dec
lods
mov
mov
xor
xchg
loop
js
xchg
xor
adc
and
dec
push
cmp
fistpll
or
clc
movsl
daa
imulb
shll
push
sbb
clc
push
stos
mov
pushf
ret
sbb
jmp
sbb
shrb
jmp
orl
add
negb
and
cltd
inc
mov
fimull
les
test
mov
xchg
pop
add
ret
or
mov
sbbl
mov
xlat
jecxz
js
mov
loope
in
aam
xchg
movsb
lea
push
jecxz
enter
lret
or
ficoml
aaa
jnp
cli
ja
mov
push
inc
les
fstpt
aad
or
addl
xor
adc
push
mov
hlt
imul
lcall
ret
scas
adc
sbb
dec
jo
shrb
das
call
push
adc
add
sbb
cmpb
popa
add
pop
sarl
inc
mov
int3
xlat
fdivrl
mov
inc
sub
test
cmpsb
es
push
cmp
aam
scas
scas
mov
xor
sbb
sbb
xchg
pop
sub
ret
mov
imul
sbbb
inc
lds
scas
mov
sbb
mov
cmp
push
adc
and
mov
push
and
fsubp
mov
shlb
cmpl
push
xor
fnstenv
cs
sbb
xor
pop
mov
push
or
loope
iret
and
je
mov
add
mov
test
adc
cmp
and
xor
sti
mov
lea
xchg
bound
add
mov
insl
outsl
lret
xchg
mov
cld
pop
sahf
and
pop
pop
add
data16
into
adc
inc
pop
jbe
fsubrp
or
stc
jl
cmp
add
negb
enter
int3
roll
push
jge
xchg
push
int
clc
aad
pop
push
movsb
into
jecxz
test
and
push
in
add
mov
pop
cmp
adc
cmp
lock
inc
ja
in
jno
cmp
or
add
int3
dec
jne
fwait
jb
icebp
inc
fistl
sbb
pop
and
push
mov
rcrb
xchg
call
jp
sub
mov
and
add
cli
subl
dec
xchg
jmp
js
pusha
push
inc
and
jp
scas
push
ficomps
scas
xor
bound
add
push
add
jnp
aad
loope
inc
mov
stc
out
add
lret
sti
fisttpll
or
subl
mov
pop
mov
dec
or
jo
jne
test
loop
dec
dec
mov
jne
pop
xchg
fcomps
adc
pop
jnp
jmp
outsl
jg
mov
cltd
call
lock
xor
xchg
ja
or
ljmp
or
pop
cmp
in
int3
xor
cmp
dec
xor
stos
inc
das
adc
jnp
push
adc
dec
adc
xchg
loop
mul
aam
fwait
dec
mov
call
cmp
es
dec
push
mov
and
and
mov
cmpsl
ret
inc
ret
pop
xchg
into
daa
das
cmp
divb
cmpsb
fwait
xchg
ret
xlat
and
xchg
mov
mov
sbb
out
jnp
push
or
pop
leave
push
adc
xor
sbb
inc
mov
and
xor
add
lock
in
pop
lock
sbb
and
into
push
mov
out
pop
xor
mov
add
das
orb
fidivs
out
cmp
sub
dec
or
push
xchg
adcl
jno
jl
mov
and
inc
mov
mov
sbb
pop
push
mov
in
push
xchg
lea
push
jo
dec
es
sbb
out
sub
push
mov
inc
pop
xchg
mov
jge
add
or
aaa
cmp
aad
jmp
test
insl
rcrl
pusha
ja
push
and
lcall
je
leave
push
and
movsb
int3
shll
mov
and
jg
mov
jo
cmp
popf
pop
mov
lods
mov
inc
clc
stc
inc
push
cli
lods
xchg
std
jne
cmp
int3
rcrl
mov
imul
xor
pop
jp
in
je
sbb
push
cmp
ret
and
mov
imul
push
sub
jl
fmul
mov
mov
adc
testl
dec
pushf
mov
addl
lret
xor
pusha
cmp
jle
push
sub
out
jno
mov
jo
into
fwait
dec
inc
mov
or
mov
xorl
or
sti
inc
fldt
mov
data16
jno
dec
and
shll
xchg
or
aad
push
popf
stc
int
and
or
sbb
jge
ss
ret
pop
fildl
xchg
mov
sbbl
scas
ss
pusha
loopne
cmp
sbb
xor
in
jge
xchg
jne
inc
lock
xchg
inc
push
lcall
jge
xchg
pop
popa
push
data16
dec
add
cmp
stos
push
push
in
das
js
mov
xor
sahf
icebp
mov
hlt
cs
mov
negl
aad
out
js
lret
xor
leave
clc
int3
arpl
xchg
std
lds
pop
xor
fs
jecxz
jge
mov
or
mov
je
push
daa
dec
xor
and
cmpsl
rcrb
stos
inc
add
js
push
jecxz
orb
inc
pusha
out
lock
jmp
pop
lret
out
in
cmp
lcall
jmp
push
scas
add
lds
stos
and
mov
add
fildl
adc
stos
vpmacssdd
stc
es
je
mov
repz
adc
push
pmullw
jo
mov
pop
imul
lea
ss
jnp
arpl
mov
int3
or
aad
and
popf
dec
jl
mov
test
xchg
jae
in
je,pt
inc
jb
popa
mov
or
imul
xor
sbb
add
jns
pop
lods
jge
and
lret
lcall
mov
lods
loopne
clc
dec
andl
add
push
and
pop
ficoms
das
aam
jecxz
data16
test
repnz
lods
xchg
ds
mov
adc
dec
lea
cmp
sub
pop
cs
sti
insb
lcall
dec
dec
mov
loope
fucomp
jno
cwtl
pusha
mov
xor
movsl
inc
pop
sbbl
xchg
mov
inc
mov
out
sbb
stc
dec
push
vpsrad
stos
jge
xchg
mov
mov
mov
ret
xchg
lret
sbb
jp
inc
js
std
fcoml
pop
mov
fadds
inc
cmp
mov
inc
xchg
mov
mov
cmp
ret
mov
sub
mov
xchg
dec
movl
jns
cld
mov
pusha
sahf
repnz
add
jne
inc
xor
nop
shlb
testb
xchg
shrl
sbb
dec
jge
cmp
testl
or
lods
gs
xchg
jbe
xlat
mov
sbb
movl
outsb
push
das
pop
daa
pop
loop
mov
in
in
mov
aad
fdivl
xor
push
lods
lods
push
mov
pop
xor
fsubrl
dec
imull
push
and
enter
je
push
cmp
sbb
outsl
jae
xchg
hlt
out
adc
push
stc
pop
pop
xchg
xchg
and
orb
aam
xor
push
cmp
insb
je
xor
jb
aas
push
mov
out
and
add
or
shll
and
or
push
sub
mov
mov
jl
inc
xchg
outsl
enter
sbb
arpl
pop
in
sti
movsb
cli
cmpsl
xchg
push
pop
aas
rolb
mov
daa
add
mov
lods
dec
icebp
dec
and
clc
jle
and
jle
aam
or
sub
cmp
scas
jno
scas
jns
jmp
imul
push
cmc
nop
movsl
or
repz
pop
ficoms
jne
repz
add
loopne
push
rol
xchg
por
inc
inc
and
mov
insl
jbe
out
push
sti
jmp
ficompl
pop
cmpsb
push
movsb
mov
pop
enter
and
mov
jecxz
or
jns
aaa
inc
push
xor
jp
push
sub
push
dec
ds
outsl
je
int
push
loopne
xchg
sbb
in
ret
xchg
in
fdivs
adc
out
pop
mov
push
stc
les
and
jo
lret
jne
in
adc
rolb
repnz
stos
push
push
or
and
or
fistps
subl
jmp
insb
mov
clc
lods
jbe
jbe
xor
jno
xchg
push
or
add
fldl
lock
jl
xchg
pop
dec
js
decb
lock
mov
ss
in
adc
push
mov
aas
xor
leave
and
insb
call
addr16
cltd
dec
cmpsl
mov
popa
lock
jge
sbb
ret
add
mov
sbb
outsl
sbb
outsb
mov
dec
and
fs
bound
push
push
movsl
filds
pop
dec
sub
and
cs
stos
sbb
shr
cmp
dec
fimull
cs
mov
loop
fsubs
dec
jnp
jnp
cltd
sti
scas
mov
js
sub
and
ss
push
mov
addr16
int3
mov
xchg
dec
popf
dec
pop
data16
addr16
je
xor
cmp
pop
iret
stos
in
or
mov
mov
inc
addr16
mov
jae
gs
and
adc
lcall
stos
test
sahf
je
cmpsl
adc
xchg
mov
data16
xlat
mov
fcompl
or
pop
cmc
pushf
jo
test
mov
loopne
adc
mov
mov
sub
pop
mov
pop
and
out
arpl
mov
subl
jae
xor
cmp
pop
xor
and
pop
sbb
inc
rorb
mov
lret
sub
bound
movsl
test
pushf
out
pop
inc
mov
out
sub
icebp
inc
stc
cltd
lcall
push
xchg
cmp
test
mov
mov
push
inc
inc
push
repnz
cmpsl
dec
sub
xchg
sub
out
popa
fadd
push
sbb
jo
lahf
pusha
scas
xchg
or
or
movsl
lret
dec
outsb
mov
pushf
popf
insb
ret
or
ret
sahf
cs
mov
aas
add
inc
enter
xchg
outsb
mov
movsl
loope
dec
mov
dec
arpl
orb
fs
or
int
roll
xchg
or
mov
xchg
stos
mov
mov
pop
pop
sti
std
das
in
add
push
popf
fs
mov
repz
push
xchg
into
adc
jno
xchg
push
pop
cwtl
and
into
jp
stos
cmc
iret
sbbl
idiv
fs
mov
gs
add
xlat
jmp
xor
sbb
xor
inc
adc
sub
mov
xchg
std
inc
dec
mov
rorl
mov
negl
sbbb
testl
outsb
sub
dec
out
lods
cltd
cmp
lods
rclb
fldl
jmp
iret
push
movl
sbb
pop
pushf
push
ljmp
xor
adc
shrl
scas
aas
mov
insb
push
mov
adc
shlb
pop
dec
cmp
stc
push
aas
mov
xor
push
movsb
mov
dec
in
dec
cmc
inc
bound
xchg
outsb
int3
mov
sub
sbb
cmpsb
sub
sbb
dec
xchg
inc
cwtl
lock
mov
sahf
mov
je
shrb
jge
int3
push
fbld
mov
push
jge
loopne
lret
and
js
cmp
clc
adc
cmpsl
cmp
subb
mov
gs
sub
cwtl
mov
mov
lea
push
xor
es
scas
test
xor
rcrb
lcall
adc
push
mov
push
inc
stc
fdivrp
movb
jnp
aaa
mov
push
aas
push
sbb
sti
dec
sbb
lods
adc
jbe
mov
imul
pop
sub
push
rcrb
mov
and
cmc
scas
iret
lock
dec
out
dec
stos
cmc
mov
insb
xchg
adc
adc
dec
mov
subl
rclb
mov
pop
adc
fiadds
cwtl
add
test
pop
je
es
jmp
test
dec
data16
sbb
jns
imul
loopne
dec
fisubs
lahf
mov
cmp
and
lds
gs
aad
lret
push
sahf
mov
cmovo
loop
xchg
jo
add
or
sbbl
repnz
jmp
push
cs
mov
xchg
lahf
std
loop
ja
jecxz
rcrb
jns
mov
rol
rolb
jo
subl
mov
and
out
cwtl
jno
dec
pop
popa
ficoml
cmp
xchg
pop
jno
or
mov
and
mov
fmulp
hlt
push
and
stc
and
lcall
cmc
mov
out
and
shl
lahf
xor
and
or
out
mov
mov
movaps
add
fisttpll
movsb
cmp
cs
push
ds
dec
dec
jb
fnstenv
sbb
out
mov
in
aas
xor
fcmovnb
jb
jne
packsswb
add
cmpsb
lahf
rcrb
ret
push
inc
xor
cmpsl
push
daa
add
mov
sbb
jbe
loopne
ljmp
mov
xor
enter
std
jnp
call
clc
aas
in
rolb
and
sub
imul
inc
sub
pop
and
adc
and
stc
jp
adc
inc
ljmp
or
rclb
and
std
jg
jecxz
dec
lret
in
adc
xor
test
sbb
int3
loop
outsb
dec
into
fwait
or
ja
and
mov
pop
adc
lock
popf
cmpsb
cmp
ja
dec
inc
fs
mov
mov
push
popf
jo
mov
pop
decl
sbb
out
xchg
outsl
les
enter
jnp
or
sub
inc
adc
cmpl
xchg
imul
pop
scas
push
sbb
cwtl
sahf
cmp
and
and
mov
xor
pop
pop
adc
icebp
sub
or
xor
jmp
xorb
movsb
and
mov
fs
dec
clc
mov
xchg
jg
mov
into
or
jecxz
in
out
sub
mov
sbbl
popf
orl
mov
outsl
popf
push
mov
add
cmpsl
sbb
xchg
lock
mulb
jae
shlb
cmc
ret
or
bnd
sub
pop
das
out
je
clc
jo
cmp
test
test
inc
mov
in
cmc
push
jmp
loope
mov
lock
stos
mov
in
adc
xchg
cmp
loop
lds
sahf
mov
fidivrl
cmpl
or
lds
lret
aam
sub
xor
push
les
pop
fstp
push
sub
xchg
cwtl
adc
mov
call
mov
pop
rcrl
mov
add
inc
mov
pop
and
stc
rcrl
adc
pop
cli
imul
and
sub
inc
test
cmovs
iret
xor
orl
fisttpll
andb
dec
shrb
sbb
xchg
lcall
pop
cmp
in
cltd
popf
lods
bound
hlt
call
xchg
push
pop
jmp
mov
mov
mov
je
mov
rcrb
clc
dec
int
sahf
and
inc
pop
cld
std
cmp
lea
adc
scas
and
aam
xor
aas
sti
cmp
push
mov
xchg
ret
adc
scas
in
adc
push
dec
std
sub
sbb
sub
and
das
test
adc
movsb
pop
xchg
inc
cmpsl
inc
cmp
js
mov
xchg
rcrl
and
lock
sbb
fisubrs
lods
outsl
je
lds
push
mov
mov
ret
das
push
enter
cwtl
or
sbb
cmpsb
add
adc
inc
xchg
mov
arpl
insl
ss
fimull
adc
enter
aad
adc
and
push
sbb
add
gs
fwait
cmpb
pop
sub
or
xchg
leave
mov
adc
js
iret
and
cmp
in
jo
pop
jae
xchg
mov
dec
test
pop
aad
lods
lods
xchg
dec
push
sbb
and
cltd
call
xor
dec
sbb
fisttps
jge
jbe
cli
sbb
and
sbb
leave
mov
ret
imul
daa
xchg
xchg
pop
stc
jbe
mov
or
dec
and
jle
push
lods
cmpsb
repnz
xchg
cmp
xor
xchg
loope
push
mov
inc
cwtl
movsl
ja
imul
inc
in
scas
outsl
mov
les
push
mov
in
add
xor
pop
mov
movsb
sub
mov
or
into
adc
adc
cmp
test
push
add
jp
mov
xor
aam
mov
cmp
bnd
insl
sbb
push
xor
insb
jns
ret
sub
icebp
or
push
fwait
xchg
push
fldt
inc
cmp
add
shl
add
sbb
loope
mov
test
fchs
stos
sahf
mov
sub
fadds
lret
jno
mov
jge
enter
inc
in
jns
aaa
fisubrl
ljmp
mov
pusha
adcl
xchg
cmp
inc
jnp
jle
inc
push
sub
mov
in
dec
pop
mov
pusha
pop
test
fs
xchg
push
push
cmp
into
jl
mov
repnz
adcl
and
lcall
sbb
aam
je
mov
inc
mov
popf
mov
inc
sub
ja
sub
push
adc
jnp
movsl
fstpl
dec
adcl
ret
push
loop
mov
xchg
pop
imull
xchg
jl
icebp
dec
fcomps
sub
out
add
jp
sbb
cs
jbe
je
sub
push
xlat
sti
dec
cld
jmp
cmp
push
shl
cltd
dec
repz
btsl
adc
add
xor
pop
push
jno
cwtl
outsl
insb
out
mov
jne
imul
mov
and
sub
sbb
pop
dec
js
scas
testl
test
lcall
popa
mov
fists
int3
out
movsb
cmpl
xchg
dec
sbb
andb
pop
cmp
xor
in
pop
stc
jns
fcom
push
inc
clc
lcall
pop
push
adc
add
adc
ds
xor
cmpsl
loopne
jbe
sahf
lods
cmp
sarb
or
shl
push
jmp
pop
xchg
push
pop
outsb
and
sbb
sub
xor
cmp
rcrb
sti
sub
stc
mov
mov
loop
imul
and
popf
jle
fxch
das
arpl
cltd
or
mov
ljmp
lret
xchg
dec
in
inc
sub
shlb
nop
pop
shlb
mov
xchg
inc
ret
mov
push
jae
sbb
fidivrs
addr16
sub
cmp
cmpsb
cmp
mov
and
daa
push
jbe
subb
dec
sub
or
stc
mov
jecxz
out
in
cmp
jp
or
leave
dec
xor
lea
inc
push
mov
ficoms
je
mov
daa
xchg
repz
js
rcl
or
fsubrs
sbb
in
mov
cmp
mov
cmpsb
mov
arpl
insl
addl
pop
xor
or
cmpsl
jle
repz
shll
cmpsl
push
testb
xchg
adc
xlat
mov
sbb
fldcw
jno,pn
adc
sbb
test
cli
sahf
fisttps
adcl
mov
mov
jno
sbb
imul
sub
nop
cmp
cld
lds
jle
cmpsl
insl
nop
es
ficompl
mov
fidivs
cmp
jmp
pop
mov
fsts
aam
mov
shl
in
lret
stos
es
sub
mov
and
and
push
sbb
int3
adc
daa
mov
iret
dec
xchg
mov
add
mov
xchg
outsb
stc
sbb
lret
inc
insl
lcall
xor
dec
sbb
test
xchg
jns
test
mov
xchg
cwtl
outsb
mov
enter
addb
data16
fwait
addr16
mov
xchg
aad
cwtl
rorl
loop
xchg
push
stos
jbe
test
inc
dec
jae
pop
sub
and
mov
fdivrs
mov
mov
jno
cld
cmc
mov
loop
in
rolb
ja
add
lods
lock
stos
push
xorl
icebp
jne
cmp
add
push
ljmp
outsl
imul
xchg
loope
ds
push
sub
dec
push
inc
out
jae
xlat
push
clc
mul
mov
movsl
adc
cli
sahf
cmpsb
dec
les
xorl
sbb
out
sub
rcll
mov
pop
pop
mov
lcall
scas
pop
fldt
pusha
jg
enter
xor
xlat
iret
orl
push
jnp
ret
push
and
cmp
xor
inc
push
xchg
les
sbbb
ret
cmp
jecxz
aas
fidivl
mov
jl
jns
jbe
lea
fidivs
lods
setae
shll
stos
inc
fidivrl
lcall
mov
loopne
cmp
fs
movsl
sbb
pusha
inc
mov
cltd
dec
add
jge
addl
sub
mov
inc
mov
cli
pop
roll
std
xor
ss
test
xchg
or
or
pop
cmc
test
mov
lds
dec
sbb
mov
shl
cmpl
pop
mov
jmp
enter
mov
mov
fdivrl
xor
adc
jg
xor
addr16
jo
clc
daa
or
ss
inc
movsb
xor
js
je
fwait
push
or
out
loop
adc
mov
in
cmp
aas
push
ret
add
lds
push
movsb
ss
sti
dec
popa
mov
movsb
movsl
jb
lds
rolb
ss
and
inc
mov
movsb
sarl
mov
push
aaa
fwait
pop
xor
test
leave
lret
cli
aaa
pushf
add
insl
test
inc
call
aam
jb
out
or
xchg
or
int3
aad
jmp
mov
test
movsb
add
fadds
inc
pushf
mov
mov
jl
cmp
test
pushf
pushl
clc
movl
cs
cmpsl
adc
fnsave
js
mov
and
test
inc
push
and
inc
aas
movsb
inc
repz
dec
push
arpl
std
jns
xor
cmc
cs
dec
scas
sbb
int
sahf
call
or
push
add
push
add
flds
cmp
add
dec
pusha
adc
dec
dec
xchg
mov
mov
test
iret
xor
out
insb
sub
stos
push
cmc
cltd
dec
sub
lea
lods
mov
scas
repnz
lds
jb
mov
jl
jne
sbb
popf
dec
jns
push
mov
jmp
mov
xchg
cs
sub
mov
lods
mov
test
xor
in
jge
mov
fisubs
test
ficompl
jg
mov
movsb
fcomp
cmpsl
push
jbe
ja
pop
popf
dec
out
adc
stos
negb
dec
das
jecxz
adcl
xor
pop
push
fwait
sbb
shll
jmp
insb
jns
lock
mov
lcall
rolb
jl
clc
push
sti
lahf
ds
fsubs
pop
pcmpgtd
sub
mov
lahf
jle
es
in
jp
loope
adc
sub
insb
mov
push
mov
ficoms
mov
xor
in
jmp
adc
jbe
arpl
or
inc
jecxz
pop
add
inc
jge
popa
subl
adc
dec
push
adc
adc
rcll
push
and
pop
repz
rol
xchg
push
xchg
arpl
push
sub
xor
imul
add
dec
push
xor
aaa
dec
add
nop
push
scas
sahf
fistps
gs
or
mov
shlb
fcmove
sbb
out
lea
adc
jne
cmp
cli
test
adc
sti
clc
das
mov
jge
push
pop
out
cli
insl
dec
aad
sbb
inc
or
sbb
enter
out
jmp
push
add
scas
stos
lods
movups
lods
test
in
inc
xor
test
xchg
lahf
lret
cmpsl
inc
repnz
cmp
lret
shlb
icebp
gs
imul
sub
mov
sub
or
and
and
mov
cmp
sti
scas
mov
lret
xchg
enter
std
xchg
rolb
adc
in
ss
fwait
cwtl
call
xor
xchg
movsb
loop
aas
push
in
jl
int3
test
mov
fiaddl
jge
jp
jo
mov
loop
inc
es
mul
popa
jb
rorl
flds
je
xchg
in
out
sarl
xchg
outsl
lahf
mov
hlt
test
pop
notb
and
inc
add
rcpps
add
or
test
and
pop
lods
mov
mov
jno
inc
cmpsl
icebp
jno
int3
popf
or
xor
pop
mov
add
aas
mov
or
cmpsb
xor
popf
add
rol
sbb
test
imul
ror
xorb
loope
lods
or
and
inc
es
fxtract
push
jmp
sbb
cmp
push
aaa
pusha
icebp
push
jg
push
sbb
insl
cs
and
aas
mov
cmp
aad
push
insl
mov
add
ss
inc
test
cmp
addb
inc
stos
add
pop
xchg
cmp
adc
lahf
xchg
or
fsubrl
fdivl
movsl
aam
mov
mov
pop
xor
sub
xor
xor
fs
xchg
dec
dec
sbb
lds
aas
fisubl
jle
repz
lods
loope
mov
inc
cmpsl
sbb
je
notb
lcall
push
mov
inc
adc
test
aad
mov
xchg
dec
mov
mov
pop
out
mov
xlat
cmpsb
shlb
xchg
enter
orl
sub
pushf
push
sbb
addr16
add
inc
test
fstpt
pop
insb
lods
push
in
jbe
data16
call
cli
stc
jnp
es
xchg
int
push
xchg
ret
pop
push
cmpsb
in
lods
scas
mov
xor
jae
aam
xor
roll
pop
push
in
pop
lret
or
fmull
sub
sub
mov
scas
fists
aaa
sbb
imul
mov
imul
push
sbb
bound
xor
mov
sub
loope
dec
xor
lret
xor
clc
pop
scas
nop
rcll
enter
pop
sbb
or
cmpsl
or
mov
mov
and
jg
int3
loop
test
mov
dec
lret
scas
mov
imul
fstpt
push
insb
dec
push
push
xlat
mov
or
popa
loope
aaa
mov
insb
dec
test
movsb
inc
adc
jb
inc
in
movsb
int
shlb
add
cli
adc
popf
dec
aaa
xchg
das
pop
insb
cwtl
inc
push
aam
adc
ret
xchg
pop
aad
lret
and
in
loop
cmc
inc
mov
scas
or
sbb
sub
jb
rcrb
das
and
jle
inc
inc
xchg
shll
pop
adc
cmp
mov
xor
ljmp
sub
add
mov
mov
or
add
cmp
fwait
fwait
xchg
fcompl
mov
sub
push
or
dec
rol
mov
rcrb
mov
push
jg
popf
push
add
xor
je
stc
out
js
loope
pop
ds
testb
enter
ss
mov
add
push
ret
push
pop
push
rcrb
xor
addr16
sbb
lods
cmp
add
ds
cli
test
outsl
jl
insl
jmp
sub
xchg
xchg
adc
cld
call
jns
adcb
inc
sbb
sbb
out
lods
sub
in
fwait
aaa
pop
push
sub
xchg
movsl
rcrl
mov
or
lods
arpl
adc
mov
xchg
sub
pusha
mov
in
xchg
pop
aad
inc
dec
sub
sbb
sbb
adc
mov
cmp
repz
xchg
dec
adcl
out
flds
lcall
sub
push
call
dec
pop
ret
insl
sarl
sub
mov
or
push
int3
mov
sbb
js
sbb
sti
ret
test
in
xchg
fcomps
jno
push
push
mov
call
mov
ja
lds
push
arpl
in
sbb
fwait
and
mov
sbb
imul
pop
push
stos
sbb
in
arpl
sbb
or
cmp
jns
subb
inc
and
out
jge
leave
bound
pop
jmp
and
ret
dec
pop
fucom
movsb
lcall
fcomp
aaa
pop
push
push
jp
or
lret
xchg
stos
outsb
mov
stc
daa
shrl
sbb
iret
pop
lods
and
int
adc
jecxz
push
subl
dec
inc
out
push
mov
mov
mov
ds
stc
mov
or
jecxz
pop
or
pusha
xor
inc
adc
imul
dec
das
pop
and
jp
mov
fstpt
xor
cli
mov
xchg
sbb
xchg
pushw
mov
cmc
fcomps
jnp
mov
pop
fmul
mov
ljmp
pop
ds
mov
xor
sub
push
outsl
pop
test
cwtl
jle
lock
fwait
gs
sbb
fnstenv
or
cmc
fistpll
sar
outsl
pop
jl
sub
add
cltd
ret
scas
insl
add
cmpb
pop
movsl
cs
stc
ja
cmp
imul
xchg
jnp
jno
mov
cmp
push
sti
aad
pop
aaa
pop
loopne
jno
ljmp
lahf
cmpsb
sbb
push
andl
fs
adc
or
jp
outsb
pushf
xlat
scas
mov
mov
xor
and
mov
cmp
fwait
cmc
cs
mov
scas
scas
adc
test
mov
push
aas
pop
stos
jle
ds
dec
insb
cmp
xchg
stc
notl
xchg
leave
leave
mov
flds
mov
jp
popa
cmp
push
cmpsb
xchg
arpl
ds
jno
sbb
cmpsb
jnp
xchg
sbb
rcrb
pushf
and
popf
xlat
cmp
mov
enter
and
cmpsl
mov
filds
imul
lret
push
mov
ja
lret
je
push
pop
xor
test
movsl
mov
pop
inc
gs
mov
call
aas
xchg
shll
mov
lds
scas
and
outsl
or
das
and
push
adc
popf
lea
imul
mov
jo
nop
jnp
mov
cmpsl
jp
and
bound
dec
or
push
sbb
lahf
movsl
adc
push
int3
mov
add
cmpsl
push
mov
inc
lock
inc
mov
arpl
mov
cmp
incb
test
mov
rcl
cmpsl
fwait
daa
repz
in
mov
test
sub
xchg
ror
test
fwait
lods
dec
adc
rcrb
daa
sarb
dec
aas
imul
adc
insb
cmpsb
inc
xorb
add
loope
sar
mov
shll
mov
xchg
mov
in
mov
inc
cmp
insb
cli
add
xor
lret
or
les
stos
xchg
push
jmp
aam
popa
xchg
in
adcb
scas
je
imull
dec
push
incl
insb
jmp
cltd
inc
in
test
pushf
mov
xor
sub
or
outsl
or
pop
xchg
cmp
push
cmpb
out
mov
xchg
fbstp
jbe
shlb
mov
pop
and
dec
inc
jge
test
movsl
rclb
jns
pop
jg
int3
insl
jno
es
pop
sub
rcrl
or
cmp
std
dec
rcrb
mov
jp
add
jle
sbb
bound
push
orps
mov
fs
aas
fs
cmp
outsb
jmp
fwait
mov
xchg
pop
jg
insl
mov
cwtl
pop
mov
out
gs
movsl
xor
add
sbb
sti
aad
addr16
pop
inc
xchg
jecxz
xchg
xchg
mov
inc
rcrb
subl
movsl
xchg
insb
lret
arpl
pop
aad
sbb
test
cmp
dec
repz
das
dec
sub
sahf
data16
push
sub
adc
add
fwait
loope
movsl
dec
adc
bound
pop
repnz
out
inc
mov
adc
fidivrs
paddsb
mov
data16
push
notl
adc
aaa
movsl
add
roll
cwtl
cmpsb
icebp
test
jne
mov
push
out
aam
fisttpll
arpl
push
stos
push
mov
jmp
test
int3
push
adc
cli
shl
test
aad
xchg
mov
cmp
pop
push
mov
cmpb
or
lea
scas
inc
sbb
push
lcall
sarl
imul
test
mov
cld
pop
aas
ljmp
fmull
or
and
dec
in
bound
sub
xor
test
les
inc
repnz
in
enter
xor
shll
int3
xchg
ja
aam
or
mov
pop
xchg
sbb
mov
bswap
xchg
clc
push
mov
scas
push
test
sti
pop
shrb
sub
add
mov
inc
test
and
or
xchg
aam
sti
sbb
push
les
jnp
xor
push
mov
lahf
mov
push
sbbb
cmp
std
inc
mov
arpl
dec
jno
jmp
sahf
sbbl
mov
mov
xchg
sub
or
jmp
add
movsl
loope
mov
pop
or
mov
adc
fsubr
ja
xor
ljmp
jae
addb
call
in
lock
in
inc
mov
jbe
pusha
jb
push
lock
mov
pusha
loop
lcall
les
negl
jo
lret
sti
mov
xchg
cmc
xchg
xchg
pop
sub
push
jae
mov
pop
out
jo
mov
les
sub
pop
stos
ss
test
or
dec
adc
push
shrl
lock
scas
cmp
mov
out
mov
in
mov
outsb
ror
cmovl
fcmove
push
pop
or
xor
out
mov
jecxz
ret
mov
insb
fs
insb
outsl
dec
int
lods
pop
push
mov
insb
mov
subb
pushf
loope
jo
cmp
xor
mov
aaa
out
outsl
and
pushaw
shll
lods
jmp
popf
adc
ds
into
gs
pop
adc
xchg
lods
fmul
cmp
fmul
and
mov
stos
pop
je
dec
test
fidivs
fsubrs
idivb
push
cmp
push
data16
cld
sub
push
mov
jo
lret
or
icebp
mov
cltd
xor
sub
xor
dec
inc
in
leave
mov
jo
mov
rcr
push
loope
or
rcpps
jb
jne
mov
orb
mov
cwtl
insb
jo
into
cmp
daa
in
test
sbb
std
cmp
mov
out
sub
mov
and
sarl
lret
out
test
jmp
in
fisubrs
js
int
movsb
out
leave
cwtl
enter
or
and
sahf
jle
mov
pop
cld
inc
icebp
jne
lret
aas
clc
arpl
xchg
lret
int3
sahf
push
dec
pop
pop
arpl
rorb
sbb
into
daa
xor
ret
shr
xor
lods
dec
jg
mov
sbb
or
xor
icebp
add
add
loopne
inc
or
sub
andb
outsl
push
or
imul
adc
ret
jnp
repnz
push
in
push
add
insl
cmp
mov
in
fwait
cwtl
sub
ret
data16
scas
jns
push
rorb
mov
lahf
sub
js
push
test
push
xor
ja
dec
push
lcall
lcall
push
mov
xlat
dec
clc
das
sub
rep
je
cwtl
mov
cwtl
sub
popa
rorb
leave
sbb
pop
lea
sub
jae
int3
hlt
es
popf
pop
sarb
ret
fwait
daa
out
cmp
mov
inc
sahf
xor
mov
arpl
or
test
and
into
cmp
arpl
cmp
xchg
xlat
jge
dec
mov
movsl
cld
mov
stc
adc
push
rorb
fdivl
out
xchg
or
outsb
ss
pop
xchg
mov
add
imul
pusha
dec
and
cmpsb
pop
pop
in
stc
push
sti
in
jge
xchg
shll
test
fidivl
sbb
arpl
push
dec
sbb
addl
loop
fisubl
push
push
jne
pop
sbb
test
add
imul
push
sbb
sbb
adc
mov
rcrb
xor
xchg
cmc
fs
es
movsb
lods
loope,pt
sbb
push
cmpsb
fwait
xor
or
add
outsb
dec
xor
cmpsb
push
insb
jg
pop
jbe
inc
orl
push
push
loopne
movsl
aaa
out
xor
cmp
popa
iret
enter
mov
std
and
xor
out
lock
pop
inc
out
popa
xchg
dec
mov
gs
jb
mov
adc
adcl
push
fldl
lock
push
dec
fwait
jg
popa
cmp
push
and
sub
xchg
sub
or
data16
sbb
test
and
rclb
jae
int
or
jmp
xchg
add
mov
stos
out
xorb
fstps
in
and
cli
jle
pop
sub
hlt
sbb
and
push
sahf
xchg
mov
je
insb
sbb
push
push
gs
ljmp
out
sbb
xchg
add
ret
sbb
je
push
rcr
jb
add
sbb
rorl
leave
push
iret
or
cltd
jl
jbe
jo
pop
cs
cmp
sahf
pop
dec
dec
jnp
gs
cwtl
rol
repz
and
and
andb
jmp
add
mov
inc
mov
push
insb
cltd
dec
mov
and
mov
in
in
fidivl
sub
inc
mov
push
mov
in
jbe
int
pop
cmp
sub
mov
outsb
mov
xchg
js
push
insl
pop
mov
test
psllq
sub
icebp
iret
ds
mov
adc
and
les
loope
iret
repnz
fcmove
jecxz
aam
fldl
icebp
mov
aaa
scas
clc
push
jns
shr
cmp
xor
sub
push
orl
cmp
dec
jmp
pusha
test
imul
add
jge
dec
dec
adc
movsb
mov
repnz
and
dec
and
mov
add
mov
daa
les
pop
into
lcall
aad
xor
clc
roll
sub
arpl
jl
mov
sbb
in
adc
hlt
inc
push
dec
xorl
outsl
call
bnd
leave
fidivrs
mov
push
and
cmpsb
xchg
add
dec
sbb
mov
xchg
inc
push
mov
add
call
sahf
and
jp,pn
adc
jne
loope
mov
dec
int
lods
xor
loope
idivb
push
sti
fisubrl
fldl
test
insl
imul
xor
fistps
sti
jno
icebp
rclb
mov
xchg
lret
pop
cli
jae
xor
xor
fcom
and
jo
xchg
mov
dec
dec
test
push
mov
jns
test
xor
sbb
sub
jle
sbb
xor
inc
lods
and
push
mov
sub
test
mov
xor
xlat
test
mov
add
mov
fbstp
inc
push
aaa
repz
out
cmp
inc
frstor
clc
cli
testb
xorl
or
mov
dec
push
out
jae
dec
push
mov
divb
xchg
sbb
fisttps
xlat
and
pusha
movsl
aam
mov
inc
outsl
arpl
int3
add
xchg
adc
lods
jge
inc
or
dec
xchg
dec
jo
sbb
push
inc
mov
inc
xchg
dec
dec
sub
scas
test
fs
and
orb
imul
mov
pop
pop
mov
push
aam
jns
hlt
sub
in
xchg
sbbb
sti
pop
addr16
xchg
sub
shr
dec
ss
mov
std
fdivrl
out
outsl
sti
mov
sub
xor
jecxz
xchg
clc
cltd
lods
inc
xor
xchg
lds
shl
lcall
cmp
int
or
dec
loop
adc
out
pop
mov
pop
mov
popf
cld
push
mov
lcall
adc
cli
addr16
push
icebp
inc
pop
mov
cmp
daa
ss
sub
adc
call
sbb
pop
xor
fcoms
cmc
loope
cmp
push
outsb
adc
xor
scas
xchg
mov
mov
imul
pop
stos
push
add
push
push
sbb
pop
mov
push
sbb
jmp
mov
sbbl
inc
pusha
mov
push
push
mov
out
aam
shrl
jl
lods
adc
mov
mov
push
lods
cmp
jecxz
stos
mov
ss
mov
jg
inc
inc
cmp
jbe
lds
fadds
fists
stos
jecxz
adc
sub
sti
mov
push
movsl
outsl
shll
mov
jb
leave
push
scas
jmp
push
mov
add
xchg
imul
rcrl
push
test
addr16
mov
lds
jb
and
sbb
jecxz
jne
sbb
int3
cmp
adc
mov
clts
sbb
cmp
lods
mov
mov
xchg
cld
aas
push
xor
cmc
mov
inc
outsl
je
pop
add
in
dec
xchg
out
aam
adc
data16
shrb
popa
cmp
or
and
pop
pusha
mov
dec
fisubrl
add
mov
in
push
xchg
leave
fwait
out
shlb
cmp
loop
enter
xor
pop
ds
shl
pop
push
aaa
mov
imul
sbb
shrb
or
mov
popa
sbb
hlt
sbb
popf
xor
sbb
lods
sub
ds
inc
pusha
jbe
pop
fcoml
cwtl
and
push
sub
sub
dec
cli
or
sub
xchg
xchg
test
cmp
movsl
mov
inc
aaa
imul
ret
fs
cmpsl
xchg
and
out
dec
lret
adc
ss
test
fstl
mov
mov
out
xor
sub
pop
fisttpll
lds
popf
push
xor
insl
lahf
cmp
mov
and
arpl
mov
xchg
outsb
loop
cwtl
xchg
jecxz
push
push
hlt
inc
sbb
jbe
scas
push
xor
inc
adc
rorb
stc
test
xchg
xor
add
outsw
mov
mov
mov
sbb
cmp
pop
xor
adc
gs
or
jno
or
frstor
data16
data16
xor
arpl
mov
nop
push
shl
xlat
pushf
aad
fs
stos
pop
lock
ret
dec
sub
pop
push
ficoml
mov
outsb
pushf
mov
push
ret
xchg
pop
jmp
fidivs
add
stos
shll
loop
sbb
into
sbb
int3
fisubl
mov
mov
jp
test
daa
imul
pop
ljmp
cli
mov
dec
aas
loopne
push
mov
sbb
push
out
fnsave
imul
in
sbb
adc
push
out
or
pop
xchg
xchg
add
mov
scas
sub
aam
divb
outsb
out
or
call
mov
sbb
call
inc
xor
aas
add
pop
mov
js
mov
jmp
in
xor
iret
repz
and
mov
clc
clc
ficompl
sub
adc
mov
xorb
cltd
aaa
int3
jae
mov
jb
add
xor
xchg
insl
je
sub
test
fidivrl
je
pop
sub
aad
add
sbb
cmp
push
pusha
mov
xor
mov
sahf
sbb
push
lcall
fcomp
cmp
xor
lds
push
fs
adc
mov
or
out
lret
inc
mov
clc
out
cld
std
int3
into
cli
sbb
inc
xchg
mov
je
xchg
testl
subl
push
sahf
dec
repnz
inc
cltd
jne
clc
adc
ljmp
lret
and
call
aad
std
and
push
mov
pusha
lock
dec
push
jp
push
push
mov
loop
jne
xor
jo
or
ret
dec
je
mov
mov
jae
cmp
cmp
nop
mov
jnp
cmp
inc
xchg
int
out
fwait
push
xchg
mov
fiadds
mov
gs
fwait
sub
inc
cmp
jge
mov
pop
dec
rorl
push
out
imul
push
push
fiaddl
stc
rcrb
or
imul
xor
inc
dec
fmulp
out
test
lahf
or
jb
cli
sbb
cmp
popf
dec
das
pop
jp
stos
cmp
jp
test
dec
int
and
xorl
leave
sub
lahf
cmc
inc
adc
jle
jb
mov
clc
sbb
mov
push
push
mov
adc
mov
sahf
fcmovnu
cmpsb
fisttpl
push
insl
fwait
jecxz
in
inc
mov
push
out
movsl
pusha
xor
lea
push
aaa
pop
or
das
arpl
rclb
pop
test
andb
sti
add
jecxz
xchg
pop
jnp
sub
xchg
sub
scas
out
push
ljmp
adc
inc
push
adc
add
ljmp
lret
idivb
fsubrs
shlb
jbe
jecxz
sti
mov
cs
enter
xor
scas
jbe
and
jns
xchg
aam
mov
xchg
sbb
jns
popf
fwait
xlat
cmp
mov
cmpl
jb
dec
sarl
adc
cmp
std
xor
add
sbb
dec
sub
stos
rolb
sti
pop
movsb
cmpsl
cmpsl
push
inc
or
xor
mov
cmp
testb
repnz
in
outsl
movsl
cli
pop
es
and
movsb
lds
mov
ss
add
xor
xor
popf
xchg
into
loopne
xchg
orb
aaa
adc
xor
xchg
ret
out
pop
cmp
dec
jo
scas
inc
mov
pop
shrl
aaa
insl
jno
mov
mov
jle
xchg
cli
xchg
mov
loop
mov
add
pop
int
in
cmp
sub
mov
int
fstl
sub
push
in
arpl
cmpsl
in
out
orl
push
addb
sub
insl
jno
shl
popa
arpl
mov
inc
or
xchg
cmp
out
mov
xchg
pop
sbb
ss
mov
inc
and
icebp
push
push
xchg
mov
push
and
pop
fnsetpm(287
mov
push
pop
jne
mov
subb
fisttps
int
test
out
aam
mov
inc
mov
scas
xchg
add
cmp
stc
mov
cmp
jb
add
or
pusha
adc
stos
bound
cwtl
xchg
loop
testl
mov
adc
in
stos
jb
adc
lahf
adc
mov
xchg
cltd
pusha
inc
pusha
stos
ret
mov
mov
dec
pop
es
stos
xchg
add
mov
sub
rcr
or
repz
lahf
icebp
inc
mov
mov
cs
fistpll
jns
movsb
mov
cmp
fiaddl
cmp
or
sub
aam
test
cmp
jmp
pop
cmp
jbe
pop
fbld
jo
decb
mov
xchg
into
in
popa
cmp
mov
mov
jmp
aas
xchg
cmp
shlb
stc
outsb
jmp
mov
jle
es
mov
and
push
cmp
mov
sbb
or
je
mov
sbb
jns
imul
mov
sbb
lods
xor
nop
jno
sti
or
sbb
cld
iret
jmp
inc
call
jo
sbb
insl
mov
push
push
xchg
jmp
xor
out
das
ret
loope
test
int3
inc
jecxz
xor
fdivl
les
mov
sahf
mov
lds
sub
ja
mov
test
fcoml
ljmp
pop
loopne
sub
insl
adc
xor
not
in
fistl
fldcw
xchg
xchg
mov
pusha
jecxz
imul
add
pushf
popf
jmp
in
xchg
xchg
lods
and
iret
pop
mov
nop
fisttps
and
int3
scas
lods
sub
push
pop
lock
jo
or
xchg
jge
int3
jg
jecxz
jbe
mov
bound
addl
xchg
mov
mov
push
nop
xor
sbb
or
inc
ss
iret
mov
sbb
pop
clc
sbb
in
sti
jmp
mov
jne
xor
lods
or
pusha
mov
push
lock
mov
pop
mov
pop
cmp
addl
fisubs
sbb
inc
jb
cmp
scas
or
sub
inc
sbb
cld
inc
loop
jg
adcb
out
lcall
add
repz
add
adc
dec
mov
adcl
and
jge
dec
sub
push
cmp
arpl
ret
push
loope
sbb
ret
dec
mov
adc
out
sbb
sub
jmp
std
mov
leave
int3
imul
neg
xchg
pop
scas
cld
aas
insb
pop
sub
add
xchg
or
xchg
dec
inc
pop
lock
cmpsb
inc
inc
cs
xchg
test
add
push
ljmp
or
fsub
dec
and
out
dec
push
loop
jp
rorb
inc
cli
cltd
aad
xchg
or
jl
fxch
aad
jge
insb
jne
cs
jo
pop
lcall
scas
stc
mov
xor
push
mov
int3
jecxz
sbb
into
mov
and
dec
hlt
and
mov
push
dec
mov
out
ds
rorb
cmp
jmp
xorb
insb
jns
int
fs
ficompl
mov
pop
out
ss
jb
out
sbb
or
fldcw
fwait
xor
or
js
mov
adc
pop
mov
jle
in
shll
out
dec
nop
clc
or
dec
arpl
jnp
adc
mov
pop
out
mov
cwtl
test
inc
sub
dec
mov
shl
mov
movsl
xchg
rdtsc
in
push
sahf
sbb
popa
jg
movsl
xor
pop
dec
jns
adc
ret
insb
pop
xorl
ret
pop
test
jns
jmp
push
outsb
test
pusha
mov
mov
cmp
faddl
out
fucomi
scas
jne
push
clc
jne
mov
addr16
xlat
xor
dec
sti
add
imul
mov
ljmp
cmpsb
dec
jmp
and
jno,pt
daa
in
daa
inc
addr16
push
sti
xor
sub
inc
repz
pop
mov
js
inc
jae
cmp
iret
das
sub
cmp
and
dec
lea
les
and
jle
test
repz
sbb
mov
pop
stos
jb
dec
jp
leave
pop
push
divl
lods
lock
cld
out
fcomip
or
cld
xor
jbe
stos
cmp
fisubrs
aaa
cmc
pop
xor
cmc
lret
mov
test
cmp
jle
scas
adc
xor
mov
add
jmp
ds
into
jnp
popa
pop
jbe
mov
xor
cmp
and
hlt
lcall
rorl
pand
out
cli
lock
xchg
stc
scas
and
clc
test
push
cmpb
rolb
dec
lock
ja
pusha
bound
push
lods
mov
call
pop
mov
lock
push
in
mov
lods
ret
push
shll
dec
mov
add
enter
push
and
andb
orb
inc
mov
and
push
add
push
cltd
mov
mov
add
and
cmp
jbe
insb
sbb
cmp
and
fld
sti
and
daa
sti
inc
xchg
scas
pusha
mov
push
ret
enter
mov
jnp
dec
and
push
cmpsb
dec
gs
cltd
push
repnz
ljmp
in
cmpl
ljmp
fstpl
out
rcll
cli
add
xorb
fimull
mov
push
push
sarb
adc
lea
fucomip
mov
mov
pop
fnsave
adc
das
das
dec
mov
mov
inc
scas
call
dec
mov
cwtl
add
inc
loope
push
push
test
adc
mov
xlat
add
jno
or
les
pop
aaa
add
rcr
mov
xchg
out
popa
fcmovb
das
jne
sbb
mov
push
lahf
jmp
and
pushf
and
jecxz
fcompl
mov
jmp
mov
push
push
sub
add
push
cmp
ss
sub
push
frstor
fnstcw
js
jmp
dec
add
fisttps
stc
in
stc
lret
jge
sbb
call
daa
sahf
jl
inc
dec
mov
inc
jge
jne
dec
ds
std
sub
scas
addb
push
out
das
and
push
dec
cmp
scas
mov
sub
mov
mov
das
xchg
inc
push
adc
jne
scas
sbb
scas
adc
adc
aam
adc
push
add
push
cli
insb
fs
in
jae
jge
xor
aam
test
movsl
inc
sbb
sbb
mov
pop
mov
ret
arpl
ss
in
push
pop
mov
mov
xor
pop
jecxz
ret
gs
mov
adc
and
xor
jmp
shrl
inc
ja
jnp
loopne
cmp
and
pop
cmpl
repnz
sub
or
jecxz
cmp
pop
cmp
gs
cmp
dec
pop
in
cmp
xor
enter
add
cmpsb
or
jbe
lock
sub
call
sbb
inc
movsb
cmpsb
dec
pop
pop
and
nop
dec
jecxz
fimuls
call
addl
das
fstl
mov
and
and
xchg
sbb
lock
xor
lods
out
sub
jns
lods
cld
and
cmc
push
cli
cmp
dec
ficoml
repz
mov
mov
movb
mov
pop
sub
pop
or
or
xlat
lcall
jle
push
lods
fiaddl
push
adc
inc
enter
inc
push
shl
or
hlt
cmp
mov
in
mov
xchg
daa
int
and
dec
cld
xchg
push
cld
out
sbb
xorl
ret
test
fdivrl
dec
cmpsb
sbb
sbb
push
popa
fnstcw
sub
cli
push
jb
jle
pop
add
ror
test
jle
sub
shlb
add
pop
pop
pushf
adc
nop
loop
xchg
shl
popa
js
add
mov
imul
sarl
push
mov
cmp
call
pop
cs
cmc
scas
fcoms
jecxz
nop
sbb
mov
add
inc
pop
mov
push
pcmpgtb
iret
lret
mov
cmp
jle
out
test
cmp
shll
in
jg
ja
mov
jecxz
clc
test
divl
mov
fisubrs
mov
cmp
pop
xchg
xchg
jo
push
leave
pop
cmp
fstpl
arpl
fstpl
mov
xchg
mov
dec
cmc
leave
stos
lods
ret
loope,pt
lret
dec
push
mov
pop
jg
sbb
pop
dec
dec
popa
jmp
xor
scas
notl
push
test
mov
mov
lcall
shlb
nop
push
dec
xor
mov
ss
inc
pop
pop
insl
mov
xor
mov
and
mov
data16
mov
call
inc
mov
pop
mov
mov
cmp
adc
xchg
dec
outsb
mov
pushf
jp
xchg
or
xchg
push
or
out
out
loope
cmp
add
dec
inc
push
je
inc
push
fisubrl
test
push
mov
dec
cmp
sahf
pop
jmp
out
test
push
jno
sub
ret
mov
adc
mov
divb
in
push
inc
loop
scas
add
ret
mov
sbb
vandnps
pop
rcll
xor
push
jbe
or
mov
pop
jmp
rolb
jno
in
outsl
and
mov
in
mov
into
adc
mov
pushf
outsl
add
xchg
popa
lods
fsub
jl
push
pop
mov
cmpsw
pop
adc
mov
xchg
cmpsl
pop
jne
cmp
dec
xor
inc
std
out
pop
inc
jnp
sub
shrl
in
pushf
cmp
xchg
mov
jecxz
das
lods
bound
fcomps
cmpsb
adc
jnp
leave
ret
sbb
in
add
pop
cli
add
rorb
fidivs
xor
in
fsts
imul
or
mov
ret
jb
jno
mov
outsb
mull
loopne
shll
ss
jecxz
arpl
insl
std
cli
lea
andb
mov
xor
inc
push
shl
pop
add
rcll
pusha
es
fiadds
dec
psubd
shr
mov
test
divl
sahf
cmp
jg
jle
jae
dec
xor
daa
dec
xchg
or
enter
into
sub
pop
repz
xlat
push
leave
je
mov
packssdw
sub
hlt
dec
mov
inc
cwtl
ficoms
jp
and
repnz
stc
dec
xor
stos
movsb
xor
jno
or
ret
insb
aam
aam
cltd
popl
pop
xchg
rorb
mov
roll
pop
pop
cli
push
push
push
add
adcl
jg
jns
popa
push
clc
xor
mov
mov
pop
rcrl
dec
xchg
jp
mov
stc
xchg
and
lods
iret
mov
rcl
sbb
adc
push
or
mov
enter
cli
in
pushf
ss
push
mov
lods
sbb
mov
mov
sub
xor
cmp
repz
lahf
mov
sbb
pop
dec
jp
fdivrp
jecxz
clc
mov
aas
negl
add
mov
lahf
inc
sub
outsl
fwait
xchg
xor
shll
arpl
sbb
cmp
jne
popa
je
pop
lret
pushl
pop
loopne
sub
mov
in
ljmp
lahf
in
adc
jbe
aas
lea
xchg
jbe
sarb
in
addr16
call
and
mov
je
imul
bound
xor
enter
out
cmp
mov
xorl
insb
fdivs
leave
incl
sbb
fst
ljmp
scas
push
lahf
popa
inc
scas
sub
lock
adc
dec
xchg
xchg
pop
add
cwtl
mov
mov
aas
mov
xchg
adc
cmc
popa
push
push
push
sarb
inc
mov
and
jp
mov
js
inc
inc
sub
xlat
push
ss
das
or
push
xchg
cmp
and
and
in
xchg
gs
xchg
mov
gs
push
cld
stos
repz
lret
xchg
js
push
lods
lea
notl
shlb
lds
pusha
popa
imul
lcall
loope
roll
add
lcall
push
stc
and
int
push
iret
ficompl
aad
mov
mov
sbb
repnz
fwait
push
or
outsl
je
xchg
pop
mov
js
and
or
ret
or
rcr
arpl
xor
pop
xor
fwait
ret
faddl
icebp
jmp
dec
mov
inc
add
jns
sbb
les
ds
in
fisubrl
aad
pop
sub
inc
mov
mov
jmp
frstor
imul
jb
and
lods
adc
sbbl
mov
push
mov
cmp
sub
lret
popf
test
mov
jb
inc
je
mov
mov
lea
test
xor
mov
hlt
inc
arpl
in
jnp
mov
scas
sbb
ret
out
sahf
adc
fisubrl
cmpsb
dec
cmc
xor
cmpsl
pushf
flds
sub
pop
mov
int
xor
out
cmp
mov
pop
das
mov
cmp
mov
daa
sub
xorb
daa
cltd
negb
xchg
inc
lock
rorl
insl
sbb
call
jp
sub
sbb
test
xchg
xor
cmpb
and
or
or
sbb
and
jge
cwtl
nop
add
xor
dec
push
stos
mov
mov
sbb
mov
mov
pop
adc
xor
out
insb
sbb
cld
pavgb
das
mov
cmp
out
cmp
addr16
js
fisubrs
add
imul
sbb
subb
lea
sub
loopne
jbe
les
mov
sub
push
mov
sar
and
ret
loope
mov
jmp
imul
mov
dec
inc
cmpsb
shlb
sbb
ret
or
std
repnz
test
ljmp
inc
sbb
adc
les
push
fisttpl
xor
out
mov
pop
mov
add
in
js
mov
cmp
push
dec
rcll
fs
outsb
xchg
dec
cmc
std
insb
push
pop
jb
imul
sbb
mov
xor
mov
mov
mulb
shll
into
frstor
add
cmpsb
mov
mov
jno
jecxz
and
stos
and
jmp
rolb
inc
fwait
xchg
daa
mov
sub
ljmp
mov
xchg
and
orb
cmc
jno
and
mov
das
cld
add
stc
xchg
int3
or
out
js
outsl
mov
xchg
lret
and
push
rcl
test
ds
xchg
sti
sub
fmul
jp
mov
outsl
in
sti
jg
xor
jmp
in
add
and
xchg
and
mov
orl
sub
cmpsl
sti
loopne
mov
mov
ja
push
mov
divb
and
lds
sub
movsb
ss
add
loope
negb
pop
sbb
insb
ljmp
push
and
add
mov
mov
std
mov
pop
xor
pop
int3
sarb
jp
mov
fcomi
add
test
mov
rolb
sbb
sub
pushf
adc
cld
xor
movsb
jne
sbb
jmp
fcmovne
sbb
sub
push
iret
aad
mov
add
test
adc
jns
pop
decl
loop
les
jo
jo
fwait
sbb
lret
fdivrp
or
xor
push
mov
mov
inc
ja
inc
mov
mov
cmp
push
sbb
sub
pop
cmpsb
xchg
mov
loope
shlb
mov
mov
mov
nop
jno
pop
jmp
push
mov
dec
mov
push
mov
inc
xor
js
sbb
icebp
mov
out
push
nop
lock
mov
xor
scas
test
mov
push
or
pop
seto
lahf
call
fidivrl
inc
mov
pop
insb
ret
pop
scas
cltd
pop
mov
jecxz
aas
idivl
test
lahf
rcrb
add
sub
inc
push
pop
test
popa
mov
fimuls
hlt
mov
pop
dec
jl
mov
test
adc
out
bound
jne
cmpsb
shrb
fidivs
push
cmp
into
fidivrs
mov
jl
adc
sahf
sbb
popf
arpl
lock
test
dec
fistps
xor
sub
aaa
inc
lods
mov
dec
sbb
xor
fcompl
adc
mull
mov
sub
das
ret
mov
setp
sbb
lds
clc
subl
fstpl
lock
mov
int3
xchg
lock
add
dec
push
test
movsb
insl
or
ja
mov
scas
jae
leave
jno
push
sbb
lock
cs
shrl
inc
cltd
jge
in
clc
cs
or
xchg
and
sub
pushf
scas
push
push
fimuls
andb
imul
mov
jg
shr
jne
sarl
rcll
or
out
lret
mov
xchg
lcall
mov
aam
push
pop
ds
inc
shll
scas
insb
dec
repnz
mov
int3
inc
sub
cwtl
sub
leave
xchg
rorb
and
loope
sub
xor
outsb
mov
cmp
icebp
mov
lods
pusha
jb
lahf
cmc
mov
popf
push
jae
push
repnz
fcmovnu
cmp
shl
push
and
dec
and
xor
jl
pop
aas
test
mov
dec
cmpsb
repz
roll
into
ja
call
outsb
mov
push
mov
push
out
inc
stos
adc
call
pop
jb
shll
stc
xor
sbb
jl
out
pop
push
je
bound
hlt
dec
xor
mov
out
das
movsl
out
fidivl
sbb
enter
xchg
test
xchg
push
outsl
repz
and
out
mov
xchg
pop
movsl
or
mov
scas
and
cmc
cmpsb
fistpl
fldenv
adc
jmp
or
push
cmpsl
ret
inc
clc
ja
lret
test
movsl
into
clc
aam
push
daa
es
cwtl
xchg
jp
fs
iret
in
int3
pop
out
aaa
jo
inc
into
int
cld
es
in
jle
in
mov
inc
in
inc
popf
sbb
xor
ret
pop
inc
xchg
sarl
call
mov
xor
lret
pop
outsb
and
cwtl
mov
call
lea
mov
pop
imul
mov
repz
dec
jo
mov
xlat
mov
pop
add
ljmp
jb
movsl
mov
gs
jge
loopne
push
mov
add
in
mov
stos
lods
int3
dec
int
repnz
pop
pop
loop
cmp
lock
xchg
fistl
jno
mov
fldcw
incb
jbe
das
or
insb
gs
subl
push
mov
adc
mov
mov
xor
out
dec
adc
sbb
mov
je
dec
insl
lahf
leave
mov
mov
xchg
jbe
arpl
das
jb
out
cmp
pop
inc
push
jns
test
and
mov
mov
mov
pusha
jns
addr16
add
adc
push
je
jae
aaa
jo
add
sub
adc
mov
lea
mov
cmp
mov
in
dec
cmp
push
jno
push
iret
sbbl
mov
test
push
outsb
fucomi
ret
dec
loopne
mov
shlb
loopne
mov
xor
jle
jmp
xor
ljmp
test
xchg
sbb
xchg
lock
test
mov
test
in
data16
sbb
es
ja
add
xor
adc
int3
mov
jl
ds
push
xor
xchg
mov
add
hlt
nop
mov
xchg
push
divl
sbb
inc
cld
shrl
fwait
shlb
jmp
inc
subb
icebp
fcmovb
cmp
sahf
mov
xor
scas
add
aas
mov
mov
test
rcll
int
leave
in
push
and
fnstcw
fyl2xp1
sti
mov
jl
push
or
xchg
jecxz
mov
test
push
xor
aas
mov
and
and
mov
gs
negl
cmpsl
std
or
mov
cld
add
repz
dec
mov
pop
pop
mov
lods
jmp
xchg
aam
xor
notl
or
inc
lods
stc
rorb
push
jmp
sbb
cmpsl
mov
push
fnstenv
pop
pop
call
dec
popa
sbb
ja
add
outsl
push
sub
and
mov
push
inc
xchg
adc
or
push
adcl
mov
out
pop
mov
insl
push
mov
dec
test
sub
das
sub
ljmp
jnp
mov
push
arpl
repnz
xchg
test
ret
pushf
stc
xor
mov
adc
push
jg
scas
stos
mov
js
adc
pop
push
outsl
pop
in
divb
js
ss
es
mov
adc
pop
dec
icebp
js
or
nop
aas
mov
jmp
cld
pushf
jns
adcb
rol
mov
mull
mov
pop
dec
xchg
leave
lea
popf
add
stos
ret
inc
jp
xadd
xor
test
or
cmpsl
jecxz
pop
mov
jl
push
dec
xor
sub
mov
inc
stos
mul
cmp
pop
mov
cmpsb
inc
mov
mov
and
loop
mov
and
gs
jns
idiv
push
xchg
jne
cmp
mov
lea
pop
lcall
and
adc
lcall
cmp
call
pop
jmp
push
cmp
pop
popf
or
add
into
xor
add
jle
es
or
mov
sub
into
inc
dec
in
inc
test
xor
aad
ret
rclb
xchg
cs
dec
or
xchg
add
out
fs
or
arpl
mov
sub
mov
push
and
dec
dec
mov
cltd
push
sub
lret
gs
cwtl
jl
and
mov
cmp
dec
bound
cld
adc
add
xchg
jg
cmp
int3
xor
mov
sbb
pusha
mov
aam
and
push
cmp
jne
insb
jo
inc
lock
repz
fcmovu
mov
js
insb
arpl
xchg
ss
pop
aam
mov
xchg
sti
icebp
cld
shrl
inc
mov
sbb
pop
mov
xchg
xlat
stc
aam
ljmp
sarl
pop
add
cltd
or
mov
rcrl
inc
inc
in
loopne
lods
js
xchg
in
outsb
add
xchg
imul
repnz
jne
cltd
cwtl
mov
nop
sysexit
mov
adc
add
cmp
pop
dec
pop
nop
jns
sub
movsb
popf
sbb
jne
repz
push
cmp
lods
mov
mov
mov
push
add
out
push
and
nop
divl
mov
push
insl
decl
cwtl
mov
inc
adc
mov
dec
sub
or
lods
and
mov
sbb
xlat
pop
fisubl
mov
sbb
mov
in
sarl
arpl
dec
hlt
je
xchg
sub
lahf
mov
xor
jg
rcrb
jo
cmpsb
fnstenv
dec
fsubrl
nop
mov
subb
mov
xchg
fdivrl
insl
jmp
mov
cwtl
push
in
out
dec
mov
jmp
outsl
or
pop
cmp
cmpsb
daa
xchg
nop
sarl
mov
aas
fmul
sti
fmull
dec
jne
push
jnp
fwait
jo
sbb
fcompp
into
mov
ret
xchg
sbb
xchg
mov
es
in
xchg
leave
pop
shll
add
imul
das
fcoml
add
jns
sti
jp
xor
lods
mov
shlb
jmp
jl
pop
lock
lods
mov
shl
fisubrl
arpl
lods
repz
nop
repz
mov
jg
fwait
dec
lahf
test
xchg
stos
and
movsl
frstor
inc
jns
inc
hlt
mov
sbb
shlb
dec
cwtl
aaa
xchg
jmp
loop
lods
and
popf
add
jle
sahf
cs
inc
aas
xor
mov
fwait
mov
shrl
push
sbb
xchg
or
leave
cmp
repnz
pop
aam
fcoms
inc
mov
mov
popf
add
jg
mov
in
cmp
pop
mov
into
push
sub
scas
push
cmc
push
cwtl
insb
clc
push
mov
mov
int
es
jg
pop
dec
or
mov
loopne
mov
jo
mov
lods
stos
mov
pop
sarl
mov
test
ds
jle
jae
fwait
enter
add
data16
fs
int3
cltd
test
loope
push
call
es
push
inc
xor
mov
mov
mov
dec
andb
push
imul
lods
jae
and
xor
stc
mov
cmp
in
adc
adc
jge
repz
pop
shll
rcl
daa
mov
mov
gs
mov
mov
sub
or
mov
xor
je
mov
xor
arpl
sub
leave
adc
test
arpl
pop
mov
adc
loopne
xchg
test
cmpsb
jp
mov
adc
jae
in
imul
int
popf
inc
pop
inc
mov
add
repnz
clc
stc
lds
push
cmp
lcall
mov
loopne
adc
ret
and
andb
inc
jp
aad
jp
decb
stc
jnp
es
or
imul
inc
cld
inc
push
loopne
data16
sbb
movsl
dec
add
mov
push
xchg
rcll
std
lods
mov
aam
pop
or
jl
jns
adcl
pushf
xchg
jmp
in
or
push
lods
jmp
jmp
xchg
in
aam
bound
repz
add
jg
or
push
dec
jge
jmp
lahf
cmp
lea
jmp
les
das
insl
adc
pop
sbb
enter
push
push
xor
lds
aas
dec
idivb
adc
pop
dec
xchg
fdivrl
add
fsubl
es
incb
jmp
ficomps
fisubl
mov
or
push
push
add
pop
cs
lahf
xchg
xchg
cmpsb
in
push
lods
into
mov
cmpl
sub
sub
movsb
dec
rorb
pushf
vpackssdw
jg
xor
test
outsl
loopne
or
mov
inc
xor
pop
push
dec
xor
cwtl
pop
insb
nop
or
cmpsb
add
or
jge
push
dec
inc
scas
aad
dec
sbb
xor
jno
mov
or
xor
xor
mov
push
mov
es
add
loope
cmp
test
fdiv
in
in
lcall
add
jno
roll
nop
mov
movsl
add
mov
outsb
mov
adc
cmpsb
repz
sub
out
out
jb
loop
in
cmp
add
mov
and
movsb
dec
js
inc
dec
aaa
and
or
rep
adc
sub
dec
lea
sbb
aas
loope
lea
sbb
xchg
xor
popf
cltd
dec
out
xchg
cmp
pop
gs
aad
shrd
mov
sbbl
pop
fstl
je
push
sbb
outsb
sbb
cmp
push
push
sar
and
dec
push
jns
and
add
and
add
add
mov
imul
mov
inc
dec
lods
test
test
out
mov
inc
jbe
push
mov
mov
jge
jmp
cmp
call
clc
xchg
xor
mov
mov
xor
mov
shrl
mov
enter
cmp
or
xchg
and
sbb
mov
push
out
mov
sarb
ja
and
mov
leave
mov
cmp
mov
sbbb
mov
or
shl
mov
add
sub
subl
nop
shl
pop
add
cmpsl
hlt
jno
xor
push
and
jp
sbb
inc
xchg
jb
adc
cmp
sub
out
repnz
jge
idiv
dec
xor
sub
pushw
pop
mulb
in
sti
fs
cmpsb
clc
or
dec
adc
sub
fcoms
dec
adc
mov
test
add
out
fs
pop
int3
push
sbb
xchg
repnz
sub
mov
sbb
out
inc
sbb
shrb
lret
movsl
int
pop
pop
adc
test
in
inc
jns
lea
xchg
stc
or
int3
cmp
shlb
mov
loopne,pt
lcall
imul
lcall
fdiv
lds
mov
ret
mov
in
sbb
jae
clc
aad
jle
sub
push
dec
mov
lret
mov
icebp
xor
push
sub
mov
dec
in
loop
xchg
ss
or
repnz
xor
push
cmp
sarb
push
push
int
test
add
rcrl
cmpsl
vmovups
lods
ret
add
bswap
adc
enter
xchg
out
adc
dec
xor
sbb
das
xor
sbb
stc
aad
mov
inc
xor
sub
push
and
pop
push
xorl
incl
inc
jge
iret
jge
jp
into
dec
loopne
imull
jno
jo
mov
cmc
lods
jno
push
jecxz
dec
dec
hlt
test
jnp
sahf
rclb
test
aaa
pusha
pop
mov
and
outsb
mov
mov
push
sub
mov
dec
cmp
inc
test
inc
ds
pop
lcall
and
or
addb
leave
int
int
into
enter
xchg
jb
pop
xchg
cmp
fwait
inc
clc
pop
adc
daa
std
jg
adc
lahf
arpl
push
ja
pop
cmp
xchg
push
or
dec
mov
lcall
add
outsl
jns,pn
dec
shl
icebp
or
pushf
pop
dec
rol
xor
mov
xchg
sbb
test
ss
loop
fldcw
gs
and
insb
pop
pop
iret
leave
jl
call
pop
lock
add
jecxz
add
in
jbe
dec
and
mov
lret
xlat
jmp
cld
push
out
sub
dec
in
out
jnp
outsl
jae
push
lret
nop
push
jnp
or
xchg
mov
mov
out
cmp
dec
sbb
push
in
adc
inc
inc
icebp
push
scas
lods
test
inc
jb
clc
mov
xor
leave
popf
adc
and
jge
inc
push
out
pop
leave
movsb
push
lcall
sbb
dec
lar
mov
fnstsw
push
mov
lret
enter
mov
adc
fstpt
call
sbb
mov
js
sub
sub
and
pop
subb
in
nop
lods
es
movsb
cmp
mov
mov
bound
fistpl
pop
sarb
insl
fisubrl
movsb
leave
shlb
jge
scas
xchg
outsl
pusha
in
mov
xchg
dec
xchg
aaa
or
xlat
enter
icebp
popa
lcall
and
push
imul
pop
pop
xchg
mov
sarb
dec
insl
fisubrl
insl
inc
outsl
jge
call
jns
scas
push
mov
push
dec
movhps
dec
inc
lock
push
mov
mov
scas
mov
test
aam
test
loope
enter
sub
arpl
push
jno
push
fcomps
or
push
das
mov
pop
pop
mov
sub
lret
dec
fldenv
out
jl
std
sbb
lock
popa
bound
aam
xor
lret
fcomi
sbb
loopne
sbb
iret
aaa
jmp
leave
shr
xor
lret
mov
out
add
cmpsb
lret
dec
shll
repnz
sti
pop
leave
imul
inc
xchg
scas
lods
adc
inc
les
dec
fisubrs
cmp
and
or
test
push
mov
ficompl
faddl
inc
push
aad
cltd
pop
push
into
outsb
push
mov
and
pop
orl
pop
icebp
pop
xchg
je
pop
into
xchg
in
pop
cmp
sbb
sbbl
test
rcl
mov
cld
or
sub
shlb
outsl
int
xchg
shll
xlat
cmpsb
and
push
insl
gs
cmp
mov
xchg
popa
popa
push
pop
push
pop
movsb
out
dec
ret
sbb
sbb
pop
cmpsl
cmpsb
mov
and
pushf
mov
xchg
fistpl
push
insb
in
lahf
cltd
or
addr16
mov
fcom
inc
xchg
sbb
movsl
pop
xchg
mov
jbe
pop
es
push
sub
sub
cli
mov
repz
mov
push
or
jnp
dec
out
jbe
sub
pop
daa
xlat
xor
repz
sbb
les
lods
cld
push
in
lods
in
dec
sbb
and
mov
out
das
mov
push
ficomps
lods
or
adc
flds
js
adc
pop
xor
cmp
cmp
pusha
int
mov
movsl
jl
nop
xchg
subl
inc
daa
mov
imul
mov
add
mov
mov
stc
cmp
push
pusha
rorl
dec
fs
pop
scas
or
xor
dec
stos
or
add
push
addr16
add
mov
push
sti
fiadds
cmp
add
fisttpll
add
mov
mov
insb
xor
cmc
dec
jne
mov
cmp
jns
in
aad
iret
push
out
fdiv
aad
call
iret
outsb
mov
inc
inc
rolb
mov
call
repnz
inc
xchg
in
cs
mov
mov
mov
sbb
and
jmp
jns
adcl
and
subb
addr16
mov
dec
pop
xchg
movsl
rol
faddl
sbb
xchg
lret
orb
pop
sarb
mov
pop
or
pop
stos
hlt
int3
in
jne
and
dec
aam
and
mov
inc
stos
cmc
mov
dec
inc
js
cmc
pop
rcr
sub
cmp
xchg
mov
pop
sub
cmp
push
adc
and
inc
cmp
pop
jp
adc
mov
ret
movsb
loopne
ret
pop
icebp
xchg
loopne
nop
xchg
mov
outsb
repnz
in
adc
lods
dec
test
sahf
adc
xor
ret
lahf
shlb
add
mov
push
loope
xlat
clc
dec
shrb
cmp
pusha
pop
jo
fldcw
mov
ljmp
jno
and
or
or
add
add
mov
repnz
mov
daa
push
add
lea
add
pop
fisttps
dec
cltd
sbbb
pop
and
fildl
js
into
push
sub
iret
fstl
jbe
paddd
movsb
cmp
lea
roll
in
sub
pop
fcom
ret
movsl
jns
ja
xor
xchg
mov
data16
xchg
andl
movsb
or
sbbl
insl
push
hlt
jp
pop
ficomps
and
lcall
xchg
mov
lcall
push
out
mov
pop
into
outsl
aam
movsb
add
and
vandnps
inc
and
and
pop
rclb
mov
pop
jl
mov
movsl
sub
lcall
sub
jbe
mov
jg
lahf
or
xchg
mov
adc
sbb
dec
cli
lea
mov
call
bound
add
dec
nop
or
sub
mov
fsts
ret
test
repnz
dec
in
pop
pop
mov
dec
add
dec
and
fs
dec
inc
jns
mov
push
cltd
push
inc
sub
xor
movsl
loopne
fcom
mov
ss
and
test
inc
mov
in
aam
sti
into
sbb
dec
mov
jno
inc
test
jae
jge
fstps
xor
xchg
inc
daa
dec
call
mov
sub
add
pop
sbb
insl
mov
leave
and
pop
pop
lds
imul
lret
fcompl
xor
push
out
lret
push
testl
test
in
in
out
inc
cmpsl
dec
loopne
sbb
mov
aam
xchg
push
add
ret
mov
cmp
lea
iret
sbb
mov
mov
inc
mov
sbb
int3
aam
xchg
fisttpl
sbb
stc
mov
jbe
sub
add
insl
push
or
outsl
dec
push
fwait
test
mov
aad
les
ljmp
inc
lods
jge
jno
jnp
dec
adc
dec
xor
dec
addb
in
leave
push
xchg
mov
mov
mov
insb
rol
xchg
in
adc
mov
mov
mov
sar
push
mov
lods
and
or
jg
jnp
icebp
popf
mov
and
jmp
shll
nop
imul
dec
mov
test
add
dec
stos
mov
mov
mov
std
mov
rcl
je
xor
mov
adc
ss
out
push
jno
loope
push
mov
xchg
pushf
dec
mov
sub
aad
jecxz
dec
rorb
test
pop
pop
mul
cld
lods
mov
dec
stos
in
movb
movsb
or
mov
ret
scas
cmp
add
pop
inc
insl
cmp
dec
add
jl
pop
aaa
push
arpl
in
dec
sbb
aas
dec
add
pop
and
popf
mov
cld
cmp
cmp
mov
xchg
push
loopne
push
inc
mov
fwait
stos
cmpsb
and
aam
xor
hlt
mov
mov
sbb
mov
push
rolb
or
add
lea
cmp
aam
xor
push
addr16
cmpsl
jle
pushf
imul
pop
cmp
xor
and
loop
ljmp
idiv
lods
and
mov
mov
push
mov
inc
test
and
push
cmc
call
filds
cltd
pop
jp
ret
pop
xchg
lret
insb
lcall
xchg
std
out
sbb
adc
jno
xchg
add
inc
fbstp
jb
je
pop
sbb
or
inc
movsl
sbb
dec
add
gs
insb
shrl
lcall
dec
sbb
jmp
mov
sub
push
leave
push
in
es
lea
fmul
and
cmpsl
cmp
xor
int3
and
cmp
leave
jge
push
mov
aam
call
out
xor
sbb
rol
in
push
dec
lahf
adc
arpl
jecxz
push
enter
push
pop
dec
cmp
sahf
push
insl
int3
sbb
sub
mov
in
lods
lock
and
cmp
arpl
add
mov
divl
jno
pop
mov
add
push
jb
ret
xchg
insl
mov
lea
fisttps
adcl
les
idivb
cmpsl
pop
inc
fisubrl
in
es
and
cwtl
out
ss
mov
test
mov
in
pop
das
dec
push
mov
xchg
add
mov
cmp
lcall
pop
bound
jge
mov
mov
fwait
mov
dec
cmp
je
inc
dec
aam
adc
je
divb
fs
inc
mov
mov
adc
dec
cmpsb
repnz
rcrl
xchg
lahf
push
push
ss
mov
scas
xchg
pusha
pusha
jecxz
test
fisubrl
adcl
jns
jg
mov
or
xor
adc
out
cli
mov
js
cld
out
or
rcr
pop
ret
or
and
aad
sbb
sub
xchg
scas
sbb
cmpsb
std
cmp
and
push
xor
fmuls
xchg
inc
pushf
jb
add
mov
mov
mov
mov
cmpsb
mov
add
mov
in
roll
aaa
xor
shll
push
mov
jbe
nop
sbb
cmc
xor
jl
pop
push
enter
sub
adc
popa
xchg
fdivrp
into
sub
loopne
push
mov
movsl
push
mov
in
popf
aam
mov
or
sub
jecxz
out
push
jl
aaa
mov
push
or
insb
arpl
mov
push
sti
test
int
js
push
daa
jg
dec
or
or
xchg
add
in
in
roll
bound
daa
inc
add
fs
mov
adc
outsl
mov
mov
and
lcall
imul
lds
sub
mov
push
fcomps
lock
xor
clc
and
jl
lods
movsb
pop
push
inc
xor
jbe
dec
sub
mov
enter
and
mov
cmc
push
adc
dec
sub
mov
arpl
mov
mov
pop
inc
dec
je
cld
mov
ret
clc
subb
cmpsl
mov
cs
sub
xor
pop
and
sbb
inc
addb
sahf
ds
sbb
xchg
out
js
shll
push
jns
test
mov
jae
inc
inc
jle
xchg
push
das
stc
shrb
out
mov
pop
es
or
mov
inc
repz
push
ljmp
fimuls
mov
movsl
loop
orb
test
xchg
xchg
cmp
aam
subl
data16
cmp
sti
cltd
test
pop
inc
mov
stc
ja
cwtl
push
xorb
lods
add
fldenv
cs
dec
rorb
xor
popf
cld
mov
fldcw
adc
xlat
adc
mov
fwait
mov
je
add
fidivs
adc
xchg
mov
loope
cmp
ret
or
push
push
mov
mov
shrb
cmc
es
pop
daa
pop
xor
movsb
push
push
and
add
mov
push
clc
adc
arpl
pusha
push
cmpsl
into
sbb
fsub
add
adc
call
ret
xchg
mov
lret
jmp
mov
std
bnd
int3
adc
jl
cmp
sub
xor
push
sub
jne
sbb
xchg
cmp
ja
insb
adc
mov
push
andl
dec
inc
dec
lods
xor
mov
inc
fildl
fisubrs
outsl
mov
cltd
xchg
mul
std
push
add
lods
cmpsl
lret
or
mov
repnz
cmp
dec
pusha
mov
movsb
idiv
mov
jg
xlat
xchg
fbstp
pop
xor
lods
lahf
cmp
sbb
or
and
xlat
popf
pop
stos
mov
push
call
das
jg
lods
push
inc
add
lds
cmp
jl,pt
arpl
adc
lock
push
sbb
insb
iret
jecxz
jecxz
enter
out
movsl
and
subl
movsl
pop
adc
sub
mov
mov
cli
xchg
push
aaa
shlb
add
xor
iret
movl
add
xor
aad
push
les
bound
loopne
cld
cmp
xor
xlat
push
lds
ljmp
cmp
dec
inc
mov
out
mov
pop
mov
in
mov
mov
xlat
aas
adc
cmp
lock
or
add
mov
test
aad
adc
call
dec
inc
hlt
pop
int3
dec
fmuls
int3
faddl
icebp
les
xchg
in
hlt
fstpl
inc
dec
sbb
mov
les
xchg
outsl
xchg
inc
ret
and
cmc
add
jne
push
fsubr
fwait
xchg
sbb
push
aam
sahf
mulb
decb
dec
xor
arpl
int
sub
js
add
call
jae
xor
fwait
or
sbbl
adc
cmp
inc
pop
mov
leave
shrb
push
sub
imul
mov
mov
or
xchg
inc
repz
stos
mov
fsubl
ret
in
mov
test
sub
mov
mov
inc
std
adc
stc
mov
into
jbe
stos
popa
lret
arpl
adc
sbb
pop
jnp
xchg
test
sub
insl
pop
lods
testb
inc
xor
cmp
pop
inc
mov
hlt
fistpl
popa
leave
dec
les
or
fidivrl
push
movsb
cmc
dec
aad
fimull
shlb
add
mov
movsb
inc
pop
sbbb
dec
adcb
dec
rorl
shl
jmp
jae
xor
pop
out
repnz
test
cmp
xlat
hlt
test
push
add
adc
jb
fstpt
in
inc
sub
lahf
sub
fnstsw
jp
pop
xchg
lock
xchg
arpl
das
test
and
in
test
in
hlt
or
dec
out
pop
jge
and
xor
sbb
cwtl
shrl
adc
sub
jl
aad
int3
xchg
neg
sahf
sbb
sbb
outsl
ss
iret
ds
push
enter
rcr
sbb
and
or
mov
and
jb
inc
lcall
out
or
sub
xor
aaa
ss
lods
mov
bound
cmpsl
cwtl
lcall
jns
adc
in
or
inc
push
jp
jbe
stos
jl
lcall
sub
and
mov
rolb
int3
fstpt
sti
push
cmc
push
sbb
xor
inc
lods
cmp
dec
lock
mov
fnsave
cs
push
shrl
jnp
xchg
stc
and
fbld
push
and
push
jecxz
test
jno
es
inc
xor
inc
out
iret
pushf
jp
cmp
dec
mov
xchg
sbb
les
cmpsl
mov
push
popw
dec
stos
sbb
lods
add
or
arpl
push
add
sahf
mov
jae
adcl
fwait
push
pushf
mov
in
and
out
xchg
mov
jns
push
ljmp
mov
fidivl
mov
hlt
movl
push
inc
outsl
out
iret
movsl
mov
aas
movsb
add
mov
loope
test
in
test
add
flds
and
mov
clc
fwait
inc
or
faddl
cmp
inc
lea
ret
imul
stos
mov
xchg
cmp
in
imul
push
dec
js
sahf
jle
sbb
insl
jbe
in
mov
pop
data16
shrl
xchg
xor
xlat
sbb
shll
mov
test
into
jl
repz
add
pop
lahf
and
cmpsb
xchg
not
call
imull
and
mov
add
sbb
sub
loopne
lods
push
inc
in
xlat
out
xchg
cmp
mov
mov
mov
aaa
aad
xor
xor
push
jno
mov
loope
and
xchg
fldenv
scas
fsubrs
fwait
outsl
out
push
sti
scas
mov
xor
test
dec
xchg
dec
aad
fmull
rorb
je
or
xchg
xchg
inc
repz
mov
test
loopne
pop
rol
negb
mov
sub
mov
arpl
jg
in
add
aaa
icebp
outsb
lcall
les
shlb
scas
mov
sub
das
mov
pop
jne
into
popf
ret
xchg
sbb
mov
sbb
push
scas
push
dec
cltd
push
dec
add
fisttpl
jg
test
xor
sbb
pop
mov
push
and
gs
loope
adcb
ret
mov
dec
insb
push
adc
mov
adc
mov
std
xchg
push
icebp
push
test
sbb
pop
mov
sahf
mov
push
or
cltd
lods
call
clc
jo,pt
push
sarl
stos
mov
and
out
jl
cli
shl
mov
pop
addb
jp
std
call
sbb
stos
in
pop
push
jne
mov
or
jp
cmp
mov
dec
std
lcall
stc
arpl
aad
xchg
and
cmpl
mov
je
jge
cmpsb
mov
inc
cltd
and
mov
add
pop
imul
in
xchg
mov
stc
pop
mov
leave
or
sahf
cmovo
cli
mov
mov
mov
push
leave
inc
pop
or
icebp
push
dec
or
aad
sub
mov
mov
imul
push
pop
add
cmc
lock
cmp
fldl
push
clc
mulb
push
daa
pop
sub
pop
les
popa
int3
xchg
mov
mov
dec
mov
shll
and
fnsave
pop
jae
ss
ljmp
nop
ja
cmpsb
mov
pop
pop
jne
fsub
push
sbb
enter
insb
jg
push
popa
pop
pop
mov
std
in
in
sbb
outsb
pushf
fdiv
rcrl
push
icebp
inc
hlt
lea
push
cmovle
rorb
mov
pop
iret
popf
and
ss
add
bound
fsubl
pop
adc
nop
mov
or
sub
je
inc
mov
lcall
repnz
data16
push
fmuls
mov
mov
repz
adc
xor
mov
push
and
mov
inc
sub
dec
lock
push
and
mov
leave
cmpsl
fcomi
xchg
cmp
adc
sub
push
and
test
int3
inc
jmp
repz
inc
sbb
and
mov
dec
std
popa
xchg
out
jb
adc
sqrtps
jne
imul
sbbb
dec
jo
sub
es
into
insl
roll
adc
cmp
dec
mov
das
cmp
dec
rorl
dec
adc
loopne
fdivrp
lea
loop
dec
lcall
push
mov
negb
xchg
push
jecxz
xchg
repz
mov
inc
fwait
lods
stc
jnp
xor
into
ss
mov
pop
hlt
sub
push
and
out
mov
add
clc
int
imul
cmpsl
lods
pusha
scas
scas
dec
push
jnp
push
scas
lock
inc
sub
clc
shll
mov
adc
mov
imul
mov
pop
fst
xchg
add
sub
fwait
push
jnp
enter
or
popa
xchg
mov
jno
xchg
inc
jae
mov
xor
mov
call
xor
int3
test
insl
xchg
mov
out
add
push
cli
lahf
cwtl
xchg
sbb
insl
adc
xchg
cs
rcl
sahf
rcpps
lcall
pop
xchg
cmc
jge
push
mov
and
jecxz
adc
mov
mov
inc
cmc
scas
mov
sub
and
aas
imul
jmp
mov
jl
push
pusha
loope
cli
ja
cwtl
pop
ficompl
push
jo
or
and
subl
cmpsb
pop
call
gs
sub
stos
data16
mov
jae
hlt
xor
aam
xchg
in
or
dec
mov
dec
mov
jmp
inc
adc
or
daa
sahf
js
xchg
and
jne
push
push
fstl
lcall
je
push
mov
mov
mov
jne
arpl
cmp
cmp
cld
aaa
orl
mov
sbb
xor
fcom
inc
add
cmp
push
and
xchg
dec
aam
dec
mov
cmp
xor
cwtl
out
jg
jle
or
cmp
jne
imul
and
lahf
fcoml
and
or
lods
push
or
bound
repz
inc
mov
mov
push
dec
loop
les
and
jo
push
inc
mov
loopne
inc
flds
push
mov
aaa
fldt
mov
xor
stos
adc
ljmp
imul
lods
jb
int
and
ret
sub
test
and
sbb
sbb
jp
adc
icebp
add
ftst
repnz
inc
lock
nop
sub
xor
push
mov
pop
pop
mov
int
sbb
push
jmp
jmp
in
inc
insb
xchg
push
mov
pop
call
mov
dec
out
or
and
mov
ret
addr16
rorl
loopne
mov
dec
sbb
sub
mov
stos
loopne
arpl
inc
lea
ljmp
push
pop
mov
push
push
addb
sbb
xchg
lret
cmpsl
cltd
dec
mov
push
stos
jbe
adc
mov
xchg
pop
mov
loop
pop
pop
cmp
mov
dec
and
xor
push
xor
jl
inc
push
push
outsb
xor
std
or
or
push
jne
lahf
cld
mov
dec
aas
push
cmp
xor
aad
fisubrl
and
adc
adc
jne
xchg
aam
cmp
xor
test
std
or
adc
enter
inc
fidivrs
imul
lea
cs
int
and
adc
lahf
rcll
test
test
mov
sbb
sbb
xor
dec
out
cs
in
in
mov
dec
add
je
dec
adc
shlb
sbb
add
jecxz
sarb
jne
xchg
jne
push
cs
jmp
cwtl
jmp
mov
je
lods
incl
mov
mov
dec
xor
mov
jae
loopne
ds
ds
insb
into
cwtl
push
insb
xor
hlt
dec
mov
cmpb
repz
mov
mov
mov
inc
lds
cmp
out
mov
mov
jo
mov
adcl
test
int
inc
cwtl
mov
mov
mov
call
jp
stos
fldenv
jl
adc
shlb
aad
fsubrs
aam
scas
jle
pop
mov
out
xor
push
mov
jg
mov
jnp
mov
jmp
pusha
push
and
mov
inc
cmpsb
cmp
ljmp
adc
xor
lds
push
repz
adc
call
orl
mov
or
mov
inc
sti
in
and
push
push
or
cmp
ds
sub
pusha
mov
adc
cli
and
stos
lcall
rol
popa
sarl
push
adc
out
cmpsb
sub
xor
xlat
mov
out
in
pop
int
cld
in
fisttpl
dec
in
inc
and
jp,pt
sbb
adc
push
insl
hlt
push
xor
jl
add
jg
xor
or
clc
push
xchg
fldenv
dec
pop
stc
lds
imul
mov
or
addr16
fistps
pop
xor
in
daa
in
or
mov
jecxz
in
jnp
arpl
test
out
sbb
jp
pop
xor
std
aaa
or
loopne
ja
pop
inc
pop
adc
or
dec
jl
jae
mov
leave
adc
add
sbb
cwtl
je
add
xorb
add
sbb
test
adc
mov
mov
mov
mov
pop
imul
fisubs
outsl
sub
mov
imul
lret
ds
test
cmp
ljmp
dec
addr16
jp
mov
sti
cmpsl
lret
cltd
je
inc
sbb
fstl
or
mov
jge
repz
sub
inc
mov
stc
or
push
leave
pop
lret
jl
sbb
outsb
aad
or
xchg
pusha
ret
or
dec
leave
mov
loopne
inc
mov
hlt
ss
jle
xchg
add
mov
stos
imul
stc
jp
pop
pop
loope
mov
shrb
mov
cmp
test
xor
jno
les
sbb
mov
icebp
pop
lret
sbb
sti
adc
pop
mov
dec
rcrl
neg
repz
enter
test
aad
gs
jb
add
lock
mov
mov
jmp
pop
sahf
in
dec
mov
xchg
mov
ja
pusha
push
ret
inc
mov
test
jae
or
neg
adc
fiaddl
imul
clc
lcall
aas
push
pusha
adc
xlat
lret
cmp
sti
lds
pop
jnp
rorl
dec
xor
rcl
pop
addr16
push
adc
in
imul
sbb
mov
mov
shlb
ret
mov
loope
outsb
adc
dec
mov
or
xchg
lcall
cwtl
xor
es
push
ja
out
aas
in
mov
sub
hlt
or
or
repz
test
shl
mov
arpl
insl
imul
mov
or
aad
lret
cmpsb
sti
xchg
andl
inc
repnz
flds
jl
ficoms
mov
pop
mov
xchg
in
lock
adc
hlt
scas
ljmp
sbb
cli
bound
lcall
xor
xor
fildl
in
gs
ret
jecxz
cli
add
mov
add
push
sub
mov
ja
jmp
rcrb
repnz
scas
xlat
adc
je
xor
add
adc
inc
jp
mov
les
add
xchg
add
into
fwait
int3
das
xlat
jg,pn
mov
into
lods
add
stc
xchg
xor
cmp
int3
aam
mov
mov
pop
mov
and
loop
enter
cmp
fidivrl
ror
cmpsl
push
adc
add
mov
inc
adc
pop
jno
frstor
xchg
stos
in
push
ret
push
mov
pop
arpl
push
lret
dec
fmuls
out
insl
ja
aam
mov
add
jmp
mov
mov
stos
inc
pop
icebp
mov
cmp
pusha
adc
lods
cltd
rorl
mov
pop
push
inc
jmp
loopne
faddl
aam
xor
in
cmpsl
adc
arpl
mov
or
insb
addr16
jne
and
mov
aas
jb
nop
insl
addr16
xor
cmp
add
xor
testb
cmp
dec
loopne
imul
jg
mov
push
aad
add
lods
push
push
and
jno
mov
popa
aaa
maxps
repz
and
jb
fildll
adc
movsl
cmp
adc
push
jecxz
jg
sub
cwtl
fld
inc
mov
ds
sbb
or
mov
test
jmp
and
mov
in
stos
mov
cmp
mov
or
ret
leave
fistl
das
and
push
or
pop
in
ljmp
push
jb
insb
push
sarb
aam
popa
cli
push
ds
cmp
sarl
dec
test
adc
stc
cltd
pop
lods
imul
lcall
addr16
or
leave
sub
imul
sbb
arpl
das
leave
popa
fwait
enter
cwtl
or
jnp
push
push
cmp
mov
add
std
adc
sub
cmp
push
pop
xor
adc
in
mov
xor
push
sahf
ret
xlat
nop
mov
fs
insl
dec
xor
aad
rcl
popa
cmc
xchg
imul
and
dec
sbb
sub
xchg
leave
or
sub
rclb
lock
imul
loop
or
dec
mov
ljmp
imul
dec
pop
cltd
loope
cmpsb
inc
stos
fs
sub
sbb
xlat
int3
es
mov
push
inc
iret
mov
cmp
ds
je
jns
sub
add
mov
xchg
arpl
add
mov
add
jge
mov
add
push
add
cmp
bound
mov
jmp
mov
rcr
sahf
and
hlt
pop
mov
xchg
jp
ds
sti
jle
cmpsl
leave
add
jbe
xor
es
inc
and
mov
test
in
and
cltd
outsl
dec
mov
mov
adc
jno
pop
adc
movsb
push
cmpsl
sbb
sbb
add
add
sub
or
aaa
nop
enter
ljmp
or
fs
xor
mov
arpl
lock
push
xchg
lret
inc
mulb
mov
imul
cmpsl
jb
jne
mov
jp
push
mov
imul
jae
iret
stc
stc
sub
add
cmp
mov
xchg
fnstcw
mov
dec
lret
jns
cmp
les
sbb
xor
xor
icebp
jo
dec
or
or
mov
mov
mov
shrb
ds
icebp
push
fsubrs
push
xchg
mov
cs
mov
and
sbb
dec
cs
push
shlb
in
scas
call
aad
cmc
pop
mov
xor
outsl
pextrw
stos
sub
bound
add
pop
pop
je
sub
repz
in
shr
mov
sub
hlt
dec
int
ds
lock
aam
add
add
aad
push
mov
mov
iret
and
cmpsl
repz
xchg
push
orl
mov
in
add
mov
mov
stos
or
jge
cmpsb
imul
shll
fldcw
dec
xlat
mov
push
rcrl
loope
cs
or
inc
jae
je
pop
xchg
push
add
inc
push
push
lods
nop
es
les
pop
in
inc
loope
push
mov
mov
xchg
int
xchg
test
dec
pop
sbb
pop
pop
negb
xor
sbb
xchg
rcr
or
pop
jnp
or
dec
push
jne
int3
or
or
mov
pop
sbb
leave
popl
lahf
fidivs
or
or
sub
faddl
push
and
arpl
aaa
mov
mov
pop
xchg
push
ret
xor
xor
andb
cmp
ljmp
adc
int3
cmpl
aam
push
rcrb
pop
xchg
mov
jno
xor
xor
in
decb
and
cmp
call
shll
hlt
add
mov
aad
mov
pop
popf
xor
cltd
daa
int3
int3
in
jne
aas
mov
inc
push
add
dec
jo
xlat
leave
arpl
mov
jno
stc
pushf
lea
push
xchg
in
and
loope
aad
fcmovnbe
xor
mov
arpl
lock
xor
out
or
dec
mov
popa
mov
shrl
xor
or
pop
xor
push
cmc
and
push
aad
inc
sbb
mov
clc
xor
loope
mov
mov
enter
fs
sub
jne
addl
lods
sbb
cmc
push
aam
pushf
cld
jl
adc
add
repz
adc
sarb
out
jg
pop
jl
xchg
lods
and
out
mov
imul
das
pop
outsb
mov
jge
je
push
ficoml
xor
mov
jo
aas
lcall
dec
les
push
imul
mov
and
pop
outsb
lea
in
pop
mov
iret
lret
jbe
and
cltd
loopne
xor
dec
and
test
roll
lods
xchg
scas
add
insl
mov
push
pop
ss
mov
inc
jnp
xchg
mov
jne
nop
pop
fst
sahf
sbb
xchg
xor
mov
dec
mov
lds
cmp
jecxz
pushf
fbld
lahf
fmull
addl
add
ss
jb
loopne
mov
xchg
push
jne
inc
mov
push
mov
int
or
hlt
lret
mov
nop
testb
sub
inc
scas
add
je
test
xor
cmp
or
sbb
flds
adc
lret
stc
or
push
xchg
cmc
scas
mov
imulb
adc
in
inc
cmc
or
dec
add
mov
ret
nop
sbb
cmp
or
add
int
xorl
arpl
and
mov
unpcklps
in
pop
xchg
test
sbb
xchg
wbinvd
arpl
mov
add
aad
or
mov
push
das
lods
ds
cltd
inc
push
test
xchg
roll
int3
aam
inc
or
or
push
das
mov
shlb
add
cltd
repnz
mov
aad
rcl
jl
xor
cmpsl
sar
mov
sarl
mov
mov
or
xchg
push
dec
inc
jb
and
cli
addb
pop
aad
mov
add
cmpsl
enter
lds
xchg
or
mov
lret
cmpsl
pushf
inc
in
imul
jo
daa
call
mov
jecxz
in
aas
ds
push
pop
test
cmp
into
mov
fidivrs
in
jge
arpl
xchg
xlat
jno
dec
cmp
inc
sub
add
pop
ss
insb
test
cltd
incl
test
scas
shl
das
lahf
cmp
mov
outsb
pusha
rcrb
pusha
jmp
sub
jle
subb
aas
scas
cmp
sarl
and
lahf
cwtl
adc
push
xor
into
dec
lret
add
decb
pop
es
jmp
bound
into
xchg
pusha
in
sahf
jne
mov
mov
ret
or
mov
sti
push
scas
mov
stos
movsl
dec
pop
jmp
sahf
pop
jl
xor
or
fldl
test
lret
pop
jmp
jb
enter
aas
subb
jne
mov
push
dec
xor
dec
mov
push
xorl
fmull
cwtl
mov
mov
or
popa
inc
test
jo
mov
das
and
mov
and
cmp
subl
and
ficoml
popa
adc
scas
jge
xchg
add
ret
push
cmp
mov
sbb
xor
push
xchg
or
push
sub
mov
dec
cli
push
cmp
sub
out
out
aam
push
aas
jb
fisubrs
mov
lret
inc
addl
insb
clc
push
xor
jg
dec
and
pop
adc
std
adc
pop
dec
push
outsl
insl
mov
ret
adc
dec
jl
xlat
dec
cmp
int3
aad
cs
aas
test
sbb
out
xchg
pop
andb
cmp
and
jl
sub
in
add
fcompl
sub
xchg
addr16
hlt
je
and
dec
fdivrs
xchg
mov
cmpsb
or
xor
push
lods
imul
sbb
popa
mov
sub
jmp
addb
ljmp
fistpl
mov
fwait
loopne
jp
iret
jp
and
lea
popa
stos
frstor
lock
or
sbb
dec
dec
mov
push
pop
shr
icebp
scas
mov
mov
negb
out
int3
cmp
or
and
lret
or
and
je
cmpsl
enter
inc
gs
sub
movsl
out
mov
mov
nop
out
sti
or
out
cmpsb
inc
mov
icebp
call
lods
bound
shrb
getsec
jmp
in
in
xor
frstor
insl
xchg
push
leave
push
add
hlt
add
mov
inc
xchg
fs
lods
out
mov
cmpsb
pusha
adc
jno
cmp
push
and
cmp
ss
fnstsw
sub
push
xor
inc
inc
cmp
mov
mov
mov
cld
das
jmp
ljmp
hlt
loop
dec
pop
pop
jne
cmc
sub
mov
xor
adc
lret
repnz
add
and
jbe
aam
xchg
pop
mov
mov
cmp
mov
add
mov
pop
subb
inc
and
inc
inc
pusha
add
pop
ffree
push
leave
cmp
or
jns
insl
push
pushf
xchg
inc
jnp
xchg
pop
lcall
fsincos
nop
push
xor
adc
test
lock
push
pop
imul
sub
mov
roll
pop
push
mov
push
int
fdivrp
push
movsl
mov
les
test
mov
shll
mov
mov
jl
insl
jo
push
in
sarl
sbb
sub
int3
hlt
xlat
ficomps
pop
or
stos
and
test
or
in
loope
mov
mov
add
mov
insl
lret
call
fidivrs
std
fisubs
mov
stc
stos
jle
push
es
xorl
sbb
ret
cld
dec
incb
xchg
dec
fwait
jg
or
dec
sbb
lods
dec
sub
movsl
lret
je
int3
pusha
scas
cltd
repnz
or
fnstcw
add
xchg
mov
gs
fidivrl
jb
loope
inc
inc
rcll
sahf
ljmp
cmp
cmc
outsl
mov
or
mov
push
xlat
lcall
dec
mov
sub
add
push
rolb
movd
mov
lea
jge
inc
mov
das
and
cltd
int
test
xchg
je
popf
mov
xchg
jno
xchg
mov
pop
mov
push
add
pop
int3
mov
and
push
sbb
and
dec
mov
and
lret
or
jnp
inc
test
or
into
mull
out
inc
movsl
idiv
adc
mov
mov
shl
add
xchg
jecxz
sub
jae
lret
cmp
pop
scas
mov
cmp
pop
gs
pop
jecxz
pop
es
push
or
dec
sub
sbb
lcall
xchg
lods
addb
aam
jbe
xor
adc
in
mov
in
mov
nop
test
mov
xor
cmp
orb
jle
cmp
into
sarl
into
leave
lea
cmp
rcrb
inc
dec
xor
je
ret
cltd
mov
add
les
push
and
push
popa
rorl
mov
inc
jl
stos
and
outsl
mov
push
add
cmp
std
xchg
dec
mov
cld
or
cmp
pop
xlat
jns
lods
push
cld
repnz
jle
add
scas
test
cmp
insl
sub
outsb
push
icebp
outsb
and
fsincos
testb
mov
push
scas
aam
in
scas
add
out
push
pop
lock
ja
popf
and
outsl
xchg
cmc
mov
jns
push
aad
cmp
cmpsl
in
cwtl
addb
and
imul
popf
jp
xor
adc
shl
stc
cmp
mov
leave
addr16
lds
movsl
inc
xor
cmp
hlt
inc
cmp
adc
cmpsl
fwait
sub
iret
lahf
adc
shrb
pop
scas
popf
and
and
test
sbb
mov
xchg
add
unpcklps
aam
popa
inc
daa
rclb
mov
loopne
fbstp
rol
jno
mov
push
pushf
mov
arpl
sbb
lods
dec
imull
cli
icebp
cmp
das
pop
add
lahf
mov
clts
std
ficoms
daa
sbb
add
adc
push
arpl
mov
out
xchg
test
jne
push
mov
fdivl
mov
sub
pushf
push
adc
push
sub
sbb
mov
into
add
push
and
and
test
mov
pop
js
xor
repz
pop
pop
jns
mov
or
mov
movsl
sub
push
test
sahf
or
test
nop
or
fcom
shr
shll
and
dec
xchg
call
fmull
in
movsb
add
or
cwtl
in
jnp
ja
xchg
jl,pn
cmp
rcl
popa
fidivrs
ret
les
nop
push
out
sbb
pop
mov
das
xchg
ret
dec
test
fs
sub
cwtl
add
jmp
add
or
ss
mov
std
add
dec
fstpl
ficompl
out
imul
push
rolb
pop
aaa
hlt
mov
cmp
cs
gs
jmp
orb
mov
jno
push
jae
leave
lds
ds
or
dec
hlt
xlat
mov
and
xchg
js
and
cmp
lcall
and
dec
push
mov
dec
pusha
idivb
cmp
or
icebp
lea
and
fisttpl
ficoms
jns
cmpsl
popa
pop
or
pop
ja
xor
sbb
orb
adc
les
fwait
pusha
inc
out
pop
lret
stc
adc
call
push
lret
push
js
pop
jmp
data16
outsl
cmp
movsb
cld
adc
out
cmpsl
mov
push
test
orl
stc
jl
data16
sub
test
addl
adc
xor
pop
cmpsl
outsl
fidivrs
sbb
ss
sti
mov
test
testl
cmp
sahf
fs
mov
shl
insl
ds
gs
cmp
xchg
sbb
ja
adc
sbb
adc
mov
dec
dec
in
jns
das
xor
push
popf
xchg
jo
inc
in
and
or
xchg
adc
xor
cwtl
cmpsb
ret
out
sub
pop
insl
mov
addr16
xchg
call
popa
aas
xchg
push
jae
sti
aad
data16
movsbl
repz
cmpsb
test
lods
cmp
jmp
int
stos
scas
aaa
outsl
mov
jae
add
dec
dec
push
mov
add
mov
out
nop
out
sub
jns
or
adc
jmp
pusha
fisubl
mov
ret
jns
adc
pushl
inc
adc
sub
in
dec
je
adc
jl
and
lds
or
cmp
sub
lock
pushl
clc
dec
mov
mov
and
dec
fisubl
mov
mov
rolb
mov
push
cmpsl
arpl
inc
rolb
daa
adc
add
rcrl
jge
xchg
int3
sub
adc
imulb
je
lret
pop
inc
ret
in
and
das
add
roll
push
in
push
arpl
stc
mov
mov
add
stos
in
pushf
dec
lods
out
in
or
sti
loopne
outsl
pop
into
and
cwtl
loop
xor
jle
lock
sub
pop
dec
out
push
icebp
pop
shll
pop
sub
jnp
mov
mov
daa
cmpsl
outsb
lret
sbb
fists
loop
mov
dec
jp
jbe
mov
mov
cmc
jns
sbb
scas
adc
inc
dec
test
add
dec
int
pop
dec
jmp
sahf
test
add
imul
xchg
add
sbb
sbb
cmpsl
imul
and
int3
nop
fsubrs
loopne
lock
or
mov
jbe
xchg
mov
loop
popf
pop
and
cmp
jmp
inc
xor
pop
inc
int
test
jne
ljmp
mov
xchg
dec
ffreep
jle
jle
cld
hlt
and
stos
les
gs
mov
jo
repnz
inc
adc
js
mov
cmp
pop
ret
hlt
call
out
ss
jg
mov
or
lret
jmp
nop
ret
push
inc
dec
jg
dec
movsb
push
lahf
dec
imul
sub
jae
movsl
mov
addr16
push
xchg
das
in
push
test
ret
push
ljmp
mov
push
lcall
mov
je
xor
xchg
jns
leave
and
mov
sahf
cmc
std
jns
ljmp
sbb
fmull
add
shll
push
cs
inc
and
cld
pop
lods
push
mov
jae
cltd
sub
mov
sti
lret
jmp
mov
shrb
ret
cmp
push
je
fldt
outsb
push
add
in
pop
je
xchg
pop
and
cmp
stc
ret
div
xchg
sub
scas
mov
mov
add
stc
pop
repnz
and
mov
push
lods
fs
lds
sarb
sub
inc
and
xchg
xorb
divl
inc
mov
loop
mov
mov
in
rcrb
rcl
pop
dec
addr16
out
lods
cs
movsl
mov
enter
imul
pop
mov
notl
dec
jl
in
xor
cli
sub
sub
in
and
mov
add
xlat
adc
fcom
pop
add
add
cs
dec
or
into
nop
jmp
sub
rcrl
or
insb
mov
add
inc
or
test
mov
outsb
mov
adc
mov
xor
cli
ret
int3
ljmp
cmc
inc
xor
mov
je
push
inc
add
push
mov
mov
inc
jnp
adc
inc
mov
sub
in
ljmp
js
repz
mov
mov
push
cmp
push
adc
pop
add
scas
push
pop
mov
aad
jns
loope
inc
popa
lret
repz
or
add
inc
pop
pop
loop
push
repz
and
add
sarb
push
pop
pusha
fists
jb
dec
mov
je
push
lds
jmp
dec
pushl
sbb
jb
jno
push
xchg
adc
mov
mov
jnp
cltd
sbbb
lods
jg
sub
jne
jp
in
repnz
fwait
xchg
jmp
daa
fwait
cmpsl
cmpsb
lcall
out
test
test
mov
sub
ljmp
push
and
data16
movsl
xchg
jle
xchg
lods
or
fucomip
aad
mov
xchg
cmp
sbb
mov
cmp
jecxz
and
inc
jmp
dec
int
orl
cmp
inc
mov
sub
cmp
jo
leave
out
lods
xchg
ljmp
mov
adc
jmp
scas
jmp
out
cmp
push
mov
pushl
enter
sub
shlb
mov
mov
mov
xor
inc
jle
sbb
xor
and
pop
mov
jle
arpl
lea
xchg
aas
loope
js
adc
out
mov
divl
sub
rcr
pop
clc
inc
lret
fsubrl
mov
jge
cmp
pop
push
cmp
or
inc
lahf
sbb
rorb
psllq
add
gs
push
push
les
clc
xchg
mov
and
mov
dec
iret
data16
rolb
call
jo
and
fs
rclb
fs
jge
mov
adc
push
nop
lret
mov
cmpl
cmp
jmp
xor
ja
addr16
andb
dec
daa
aas
cmp
in
insl
dec
fsubr
xor
sub
xchg
mov
jbe
xchg
or
in
sti
sub
data16
cmp
pop
andl
and
daa
repnz
xor
negl
inc
sub
mov
jnp
mov
cld
push
dec
insb
pop
xor
mov
pushf
lds
jno
cmp
cltd
mov
pop
lcall
loop
gs
icebp
das
leave
imul
call
test
or
das
daa
lret
mov
jb
cs
in
arpl
dec
and
mov
mov
mov
cmp
cmovnp
jo
inc
insb
ljmp
arpl
ss
rcr
xchg
dec
repz
imul
std
add
rcrl
js
mov
out
insl
lcall
imulb
cs
je
dec
jbe
mov
rcrl
adc
in
mov
xor
fcoms
inc
pop
mov
push
or
pop
fldenv
mulb
in
sarb
sahf
dec
jecxz
add
jge
inc
repnz
lods
mov
lret
mov
mov
js
jle
les
ja
add
lods
and
bound
jne
test
jmp
pop
jge
loope
dec
add
or
sub
lahf
inc
and
jecxz
data16
inc
adc
mov
dec
or
nop
into
fistps
mov
and
mov
push
push
and
adc
push
into
jmp
cmp
xchg
mov
fwait
add
dec
out
push
fbstp
pop
inc
insl
inc
movsl
stc
cmp
arpl
sub
inc
mov
add
gs
aaa
montmul
cmpsb
fmull
out
orb
cmp
cli
scas
push
pop
cwtl
mov
add
mov
cmc
out
sahf
cwtl
mov
lock
cmp
xchg
xchg
movsl
xor
repz
test
test
add
in
xchg
xor
cld
test
je
fnstsw
mov
push
scas
lcall
iret
push
or
enter
adc
fwait
call
fcoml
jl
imul
not
push
mov
jmp
xor
mov
leave
push
jl
mov
jo
aam
mov
lds
push
arpl
mov
movsb
push
push
rcrb
cmpsl
sbb
cs
push
dec
sbb
in
sbb
fwait
push
js
sbb
daa
decl
mov
dec
out
jbe
jmp
sub
out
inc
add
or
add
and
or
mov
cmp
xchg
inc
xchg
xchg
or
mov
xchg
iret
cmc
lods
cltd
loope
cmc
stc
out
fsubrl
scas
lcall
sub
push
pushf
mov
int3
dec
out
mov
inc
jl
fstpt
sarl
mov
enter
rol
and
cwtl
push
mov
outsb
or
ja
ljmp
cmpl
adc
mov
outsb
scas
insb
xor
es
mov
xchg
or
gs
or
mov
lahf
pop
push
and
cmpsb
cmp
mov
mov
adc
inc
lcall
clc
pop
les
enter
jp
push
dec
pop
sar
cmp
test
cmpsl
push
out
les
and
mov
psubsb
inc
ss
clc
and
lret
push
sbb
push
ret
rcll
xchg
pop
stc
ss
xor
es
rcrl
jne
pop
mov
test
mov
arpl
mov
fwait
subl
pusha
dec
loope
fisubl
cmpsl
stc
negl
outsb
mov
pushf
fwait
push
mov
cmp
addl
test
jae
cmpsb
in
movsl
mov
int3
xlat
addr16
test
xorl
enter
adc
inc
mov
sbb
cmp
insl
outsb
test
gs
ret
aad
ret
idivb
roll
test
jnp
lock
add
cmp
stos
push
push
and
push
push
jo
call
in
jmp
jmp
gs
jp
mov
or
sub
movsl
xchg
dec
stc
or
js
pusha
pop
aas
sbb
das
xchg
and
aas
jmp
jl
pop
pop
nop
mov
xchg
xchg
xchg
lahf
cltd
xchg
lret
std
sbb
jecxz
pop
pop
std
jnp
scas
dec
sub
ja
sti
arpl
inc
push
add
insl
push
sti
cs
jo
or
lret
jbe
sarb
daa
mov
gs
sbb
lret
push
inc
pop
jbe
popa
rcr
adc
stos
jp
xchg
stc
mov
mov
insl
fstpt
xchg
rorl
outsl
lods
leave
mov
pop
cwtl
imul
bound
and
in
dec
out
fnstenv
inc
in
mov
or
add
sti
sub
clc
sub
add
mov
icebp
aaa
lods
cltd
push
dec
test
cwtl
xchg
mov
mov
push
mov
adc
rclb
add
pop
test
les
clc
mov
xchg
xor
mov
out
push
xor
fcmovne
stos
std
subb
mov
mov
jns
cld
jg
fbld
inc
mov
stc
cmp
ja
cmpsl
scas
divb
pop
adc
lahf
nop
push
dec
push
inc
ret
mov
xor
faddl
xor
xor
sub
lcall
cmp
push
loope
test
rcrb
sbbl
inc
js
stos
leave
cs
dec
or
inc
addb
es
sub
lahf
cmc
xor
xchg
push
pop
mov
and
xor
xchg
psubd
and
leave
aaa
or
mov
test
scas
xor
jge
lea
add
push
inc
xor
mov
cmp
sub
cmpsb
imul
push
call
lret
popf
and
scas
and
insb
jl
push
scas
pop
test
inc
int3
cmp
fdivrp
fcomps
dec
jb
jo
push
jge,pn
stos
or
rcrb
lds
mov
imul
fistpl
mov
ss
into
clc
ficoms
sti
out
cmc
jae
insb
xchg
and
and
div
hlt
jne
or
xchg
or
iret
sbb
orl
nop
in
lcall
sbb
pop
inc
arpl
int
pop
adc
aas
adc
stos
lds
push
or
inc
mov
pop
or
xchg
out
lahf
adc
and
cld
sub
mov
and
xor
ja
outsl
dec
js
and
and
insb
fistps
dec
es
aas
out
cmc
fstpt
push
mov
jg
mov
fsub
fmuls
or
mov
lods
xor
lahf
pop
pushf
mov
in
arpl
gs
loope
jns
or
cmp
push
xchg
add
sbb
xchg
imul
push
xchg
outsl
pusha
rorl
push
cmp
lods
jnp
push
mov
mov
add
xchg
and
or
lcall
xor
test
in
or
repnz
insl
xchg
cs
out
popl
mov
fisttpll
insl
repnz
cmp
je
insb
mov
mov
inc
cmpsl
mov
iret
in
dec
lods
clc
mov
push
cltd
outsb
outsb
xchg
je
and
mov
mov
cltd
push
int
mov
lds
je
inc
adc
enter
jae
push
or
inc
movb
mov
add
jmp
adc
lahf
arpl
js
test
fsubrl
aam
cmpl
adc
std
jg
sbb
int3
lods
sub
rorl
fldcw
mov
int3
sbb
rolb
mov
xchg
test
jne
pop
inc
adc
imul
fbstp
lea
jo
mov
addr16
sbb
rolb
and
sub
int3
and
and
pop
insb
call
repnz
mov
dec
ret
std
cmp
sub
inc
mov
xchg
jne
andb
pop
add
add
lret
fdivl
xchg
cmp
lods
add
pusha
cmp
inc
ja
xchg
mov
out
movsl
add
add
lds
addb
fidivs
subb
push
mov
xor
or
rorb
or
adc
xchg
fcmovnbe
xchg
cmpl
aaa
sub
mov
scas
dec
mov
sbb
das
push
sbb
sub
xor
in
mov
subb
pop
je
fdivrs
adc
out
cmp
dec
add
pop
xchg
hlt
xlat
cmp
sbb
dec
mov
or
push
cld
push
lret
sbb
xor
mov
rcll
xchg
js
jbe
or
ret
xchg
mov
push
fldl
cltd
in
lds
mov
out
lods
mov
pop
push
lock
dec
xchg
subb
pop
adc
scas
pop
xchg
cmp
lret
sarb
xor
and
jo
push
movsb
sbb
jbe
enter
sub
inc
lods
clc
mov
pop
mov
dec
je
sbb
pop
mov
loopne
pop
dec
jae
cmpsb
mov
or
sub
std
lret
test
out
loop
sbb
sub
insb
lds
sbb
mov
mov
mov
pop
sbb
cmp
leave
outsl
data16
adc
pop
dec
mov
pop
divl
or
push
cltd
and
mov
jmp
and
adc
inc
jbe
inc
adc
mov
das
jne
sbb
add
rorb
xor
xchg
push
lret
mov
pop
and
notl
arpl
inc
push
mov
inc
rol
add
mov
mov
rclb
cwtl
pop
std
bnd
sub
pop
inc
adc
repz
fs
popf
xor
adc
xchg
cmp
lock
jecxz
jns
fwait
cltd
add
shrb
lock
notl
int3
mov
and
inc
xchg
push
loop
mov
dec
adc
aas
outsl
jmp
xor
push
lea
xchg
push
test
das
js
imul
popf
jg
repz
dec
aaa
jns
sarl
add
mov
push
shll
xor
jno
aad
jmp
and
outsb
into
lahf
test
sub
iret
outsb
mov
and
and
stc
sbb
jp
push
movsb
dec
lock
decl
sub
sahf
std
mov
imul
and
pop
jp
aam
mov
aas
inc
fldcw
cmp
mov
adc
or
xchg
jg
mov
jge
xor
out
lock
icebp
jb
or
mov
int
test
test
ret
add
les
adc
shl
inc
lea
mov
je
add
cmp
mov
xchg
mov
outsb
int
inc
in
ds
inc
xor
dec
sub
push
icebp
mov
push
mov
enter
push
dec
jl
xchg
ds
mov
addb
push
daa
mov
dec
push
xchg
imul
leave
in
sub
push
lret
sti
fdivrl
adc
inc
mov
rclb
ret
cmp
jae
jae,pt
pop
or
cmp
popf
frstor
lock
push
movsl
mov
cltd
sarb
push
mov
test
subl
xchg
add
fucom
iret
xchg
dec
sbb
add
lods
mov
fsubrs
jge
testb
push
mov
lret
sub
fsubrp
pop
push
in
pop
lcall
push
into
cmp
bound
push
into
adc
and
mov
push
in
in
sub
push
dec
mov
mov
sbb
or
mov
mov
mov
dec
rcrl
jnp
cmp
xchg
inc
inc
push
mov
mov
mov
jle
add
sub
popa
test
mov
fisubs
shlb
movsb
stc
lahf
push
data16
lods
inc
in
and
jne
aad
sub
sub
ds
jmp
out
sub
cltd
cltd
dec
push
adc
xchg
dec
pop
push
imul
xor
inc
scas
mov
adc
mov
mov
testl
inc
inc
addl
sbb
lds
push
lods
ljmp
fnstenv
push
or
sahf
shlb
mov
xchg
mov
lea
sbb
out
test
or
and
stos
inc
pop
lcall
sbb
jnp
mov
bnd
mov
lds
inc
mov
cmovl
in
dec
iret
loopne
adc
push
out
loope
dec
jo
and
fcoms
or
push
pusha
stos
sti
sbb
cs
ss
cli
jbe
daa
xor
dec
mov
pop
inc
push
adc
in
sub
sub
ds
push
mov
stos
mov
ud0
stos
imul
pop
inc
sub
scas
loope
pop
and
popa
inc
xlat
leave
mov
xchg
movsb
mov
push
mov
rorl
pop
mov
adc
xor
xchg
push
jp
mov
jnp
cs
test
xor
push
outsl
lock
mov
stc
leave
dec
xor
insb
jbe
or
pop
jp
xchg
mov
cmp
js
xor
or
nop
repnz
pop
lret
dec
cwtl
mov
sbb
add
inc
lds
addl
cmpsb
inc
int3
ret
test
repnz
jbe
subl
sbb
lock
jns
push
rcrb
add
call
adc
mov
orb
daa
add
je
cwtl
lret
pop
cmc
xchg
jp
test
je
or
xor
sbb
adc
mov
daa
cmpsl
movsb
sub
pusha
mov
test
js
adc
adc
xchg
shrb
mov
sub
and
shll
lods
add
je
mov
sbb
into
js
cmp
xor
jecxz
outsl
ljmp
mov
or
in
bndstx
xchg
xchg
icebp
ret
sbb
stc
adc
test
fmul
clc
xchg
inc
sbb
leave
pushf
fs
cli
xlat
mov
insl
aaa
lods
subl
jno
insb
das
sub
test
aam
gs
mov
jae
ds
loop
ret
xor
xor
jae
jmp
mov
dec
mov
js
adc
ret
mov
fists
adc
test
cmp
inc
mov
mov
mov
xchg
push
popa
push
ss
loopne
mov
in
dec
cmpsb
cmp
dec
add
mov
push
mov
cmc
in
cwtl
push
js
mov
mov
repz
dec
mov
xor
out
cld
mov
je
xlat
imul
push
outsb
adc
test
mov
sbb
enter
add
pop
adc
in
sub
jb
sbb
push
fistpll
mov
push
bound
or
and
ljmp
popa
xchg
dec
mov
sbb
mov
pop
cltd
mov
ficoml
sbb
add
int
mov
clc
xchg
cmc
lahf
in
and
inc
loope
hlt
outsl
mov
lret
jmp
bound
lret
repz
jle
inc
insl
add
push
push
and
rcl
cmp
dec
push
push
adc
pop
aas
adc
mov
data16
jp
inc
repz
repz
rcl
inc
cmp
dec
adc
fldenv
shrd
inc
out
cs
dec
adc
sbb
loop
pop
cmp
leave
cs
dec
inc
scas
jl
std
addr16
imul
add
sub
pop
cwtl
loopne
sti
fidivl
stos
dec
pop
adc
adc
push
test
lret
inc
fnsave
fisttpl
push
testb
sbb
mov
adc
negl
dec
jge
adc
mov
adc
jl
subl
mov
aad
test
test
push
add
dec
loope
mov
mov
dec
ss
add
cmp
int
out
xchg
jmp
cld
adc
stos
dec
mov
and
icebp
inc
setns
lret
push
aad
sub
and
push
jae
mov
jnp
cld
cli
gs
add
xchg
loop
cmpsb
jp
cmp
in
fildll
lea
enter
xchg
mov
push
mov
testb
sbb
fisubs
jg
mov
mov
scas
xor
mov
xchg
inc
scas
stc
cmpsb
inc
push
push
int3
inc
mov
sub
or
jbe
or
dec
jecxz
gs
xor
lods
cwtl
jb
mov
mov
sbb
fwait
enter
jnp
fstpl
cmc
dec
push
jg
fisttps
fucom
jp
mov
cmc
mov
mov
shrb
xor
mov
pop
sub
jae
pop
add
sub
mov
sbb
sti
jbe
dec
sub
das
int3
mov
movsb
shl
repnz
pop
movsb
inc
in
jp
xchg
popa
dec
pop
cmp
insb
out
cmp
push
das
xchg
inc
sbb
insl
xlat
jmp
or
stos
push
in
lods
jg
push
je
popa
xchg
loope
fxtract
mov
mov
adc
mov
pop
scas
fsubl
jo
dec
pusha
dec
push
push
inc
sbbb
dec
lods
dec
in
test
jb
mov
sub
dec
xchg
inc
outsb
addb
sub
cld
repnz
push
push
in
dec
add
inc
adc
subl
pushf
mov
push
xchg
popa
movsb
sbb
dec
add
or
popa
xor
adc
aaa
adc
imul
adc
clc
cmp
mov
rsqrtps
inc
mov
adc
add
enter
sti
dec
mov
adc
mov
mov
pop
mov
mov
iret
inc
jnp
pop
xchg
xor
xor
imul
push
push
dec
adc
push
pop
icebp
cli
adc
rep
repz
lods
inc
and
sbb
jne
pop
filds
mov
and
shl
aaa
loop
jbe
test
int3
jmp
adc
push
jmp
add
push
enter
adc
xchg
xorl
sbb
jecxz
xchg
inc
test
test
aas
sbb
inc
mov
je
andl
cmpsb
pop
repnz
fdivl
ret
adc
adc
orb
sub
dec
mov
into
pop
loopne
mov
pusha
mov
cmp
cmp
jns
push
test
mov
popf
xchg
jmp
clc
dec
xlat
sti
cld
pop
stc
insb
sbb
push
icebp
nop
xor
js
push
test
icebp
or
pop
jmp
jecxz
mov
push
mov
lret
jbe
sub
add
sbbb
or
mov
sbb
push
sub
pop
mov
stos
pop
adc
inc
push
xor
rolb
outsl
lcall
in
js
mov
ret
stos
aam
sbb
iret
pop
adc
addr16
aaa
jno
jge
push
adc
fcomps
add
xchg
push
test
loopne
or
inc
aaa
push
sbb
add
push
lret
push
mov
pushf
out
jbe
stc
pop
push
lea
adc
push
mov
jp
cmp
inc
push
inc
fwait
push
mov
arpl
xlat
in
fdivrl
xchg
mov
inc
insl
dec
stos
jne
loopne
and
repnz
fildl
stos
lock
pop
and
mov
push
jg
push
push
cmp
pop
and
ret
mull
pcmpeqw
in
mov
rorl
addr16
mov
into
fnsave
es
dec
sti
jmp
movsl
notl
mov
and
mov
cmp
jbe
cmc
popa
fidivrl
in
in
inc
add
cmp
out
loop
xor
out
pop
mov
imul
jl
add
test
mov
pop
shl
out
stc
insb
orl
mov
xchg
cmp
adc
xor
clc
dec
push
movsl
negl
push
aad
push
xorl
cmp
je
andl
dec
lret
xchg
lret
into
dec
daa
dec
xchg
push
pop
int
add
pop
add
scas
fcmovbe
xchg
pop
cmpsb
xlat
shrl
test
std
sub
sarl
es
int
cli
pop
andl
mov
adc
dec
lahf
pop
popf
sub
ljmp
mov
xor
call
mov
mov
dec
push
push
pop
lret
ds
outsl
push
sti
push
popa
call
ret
cmp
jecxz
sbbb
aad
stos
sub
sbb
cld
repnz
sbb
aad
mov
fdivs
inc
movsl
or
ljmp
dec
mov
push
jae
out
pop
cmp
sbb
add
cmc
adcl
mov
xchg
mov
pop
jno
sbb
jmp
aad
shrl
enter
enter
arpl
xchg
and
imul
sahf
pushf
mov
out
scas
lods
int3
pop
cmp
in
and
mov
lods
addr16
mov
dec
enter
inc
cld
cld
mov
pop
nop
aad
outsl
jg
mov
xchg
inc
dec
icebp
out
enter
shrl
popa
dec
pop
mov
mov
dec
xor
int
or
dec
sub
lds
mov
mov
pop
adcb
fists
pop
mov
add
xchg
dec
push
xchg
outsb
aam
mov
punpckldq
mov
adc
nop
in
jae
sub
add
scas
pop
dec
mov
es
insb
scas
mov
ds
std
and
push
lock
loopne
aam
icebp
leave
repz
outsl
dec
scas
pop
lret
jle
aam
mov
mov
push
jne
xlat
adc
in
mov
jmp
testb
jecxz
inc
push
mov
jbe
xor
sub
loope
call
cmp
stc
lods
aad
cli
jb
cmpsb
test
in
dec
leave
mov
fmull
je
add
push
and
mov
sarl
stos
shll
add
dec
inc
or
xor
mov
xor
xor
xor
dec
mov
in
add
in
xchg
inc
test
inc
lcall
enter
jnp
ret
pop
lahf
fdiv
bt
insb
divb
add
insl
xor
or
flds
test
test
lcall
adc
lods
adc
insl
js
ljmp
and
xchg
nop
inc
pop
push
jp
fisttpll
jo
cmpsb
aas
jo
shl
fisubl
out
cli
sbb
cmp
mov
mov
cmp
fwait
xchg
rcr
jb
or
fnsave
imul
out
cmp
sub
ljmp
mov
jb
fcmove
data16
jl
jbe
fimull
mov
and
rolb
push
inc
ljmp
hlt
pusha
xor
inc
lcall
push
adc
ficoml
fs
pop
push
es
imul
das
sbb
xchg
xor
add
insb
fnstsw
sbb
mov
orl
andb
es
pop
cmp
call
nop
xor
ret
sti
mov
imul
cmp
pop
in
aam
mov
jle
cmp
xchg
mov
sti
and
inc
or
push
jmp
popl
mov
cmp
es
fsubs
lea
mov
add
push
jmp
xchg
loop
push
mov
daa
mov
lcall
imul
sub
inc
outsl
mov
idivb
enter
pop
sub
cmp
jge
xor
daa
lcall
mov
scas
int3
mov
loope
lods
inc
aad
xchg
pop
jp
in
call
pop
aas
push
stos
pop
mov
mov
add
loop
popw
pop
stos
sbb
cmp
div
imul
dec
mov
mov
adc
push
pushf
pusha
icebp
negb
lods
and
lock
or
jb
add
stos
int
jne
js
inc
add
rclb
pop
lret
jne
fiaddl
cld
push
shrb
out
fadds
xchg
negl
xchg
mov
adc
and
push
ljmp
dec
push
fs
fimuls
cmp
and
je
mov
add
scas
ja
movsb
int
fstpt
jl
jecxz
add
sbb
stos
nop
dec
sub
ss
shl
das
ret
jecxz
sbb
in
lods
sbb
lock
inc
sti
jp
aam
sub
jae
cmp
fwait
add
aaa
int3
divb
cmp
sub
or
add
int3
lahf
jno
shlb
fldcw
loopne
dec
push
leave
push
sub
mov
jmp
sbb
bound
fisubrs
arpl
loop
in
test
push
push
hlt
test
insl
push
jle
add
jmp
fucom
inc
jnp
shrl
adc
jnp
dec
xchg
cli
bound
popl
lods
mov
dec
popl
or
mov
test
xor
mov
sbb
push
pop
jo
ljmp
xor
adc
push
sbb
rcrl
xor
push
loop
shl
and
jne
mov
xchg
cli
pushf
sbb
dec
xor
dec
cmc
sub
or
jns
stos
out
cmpsb
dec
mov
pop
insb
mov
aad
cltd
mov
insb
inc
daa
push
fs
dec
inc
xchg
stos
imul
sbb
loopne
into
rolb
imul
mov
mov
in
mov
and
sbb
js
ljmp
jmp
mov
jmp
sbb
ret
fs
leave
aam
and
jl
xchg
add
repz
cwtl
sbb
cld
ret
mov
flds
or
icebp
cmp
iret
dec
addr16
push
out
and
test
sbb
popf
add
cmpsb
and
int
mov
loope
stos
shrb
sub
lods
add
cwtl
push
stos
leave
mov
mov
aas
jg
mov
inc
cmp
push
xchg
or
mov
fildl
mov
aam
sub
mov
icebp
push
and
fimuls
push
aam
xchg
test
lret
pop
xchg
stos
xchg
sub
mov
lret
inc
and
xor
cmp
inc
pop
test
xchg
aad
fisttpl
fwait
rorl
adc
sbb
add
jmp
hlt
fwait
or
jg
stc
add
fs
dec
and
movl
push
and
hlt
in
and
dec
scas
imul
imul
icebp
flds
pop
push
je
movsl
mov
fs
lods
ja
scas
fs
and
in
xor
dec
jl
jns
mov
bound
popf
lods
es
xchg
dec
lcall
rcrl
mov
add
sbbb
sub
inc
push
mov
in
xchg
push
mov
mov
jecxz
cli
jbe
mov
rcrl
lret
sbb
jge
xchg
xchg
bound
scas
movlps
mov
shll
pusha
jle
js
jecxz
push
popf
ret
les
sti
out
jl
and
insl
mov
fwait
jg
pop
test
xor
test
pop
popa
adc
jge
pop
sbb
and
adc
fwait
xchg
ret
mov
push
cmp
mov
in
hlt
and
pushaw
mov
mov
xor
je
loope
repz
rolb
out
loop
cli
jb
pop
aad
mov
outsb
bnd
or
cmp
aad
fs
aas
insb
pop
adc
mulb
push
sub
arpl
xor
pop
shlb
or
scas
cwtl
inc
daa
sub
in
xchg
ja
push
jno
cmp
jno
xor
inc
pop
mov
sahf
jne
mov
repnz
fldt
sub
push
rorl
sbb
scas
adc
das
pop
leave
add
lret
mov
jl
in
sahf
mov
pushl
lock
inc
push
loopne
and
in
xlat
pop
or
das
lods
fwait
iret
mov
popf
xchg
imul
xchg
sti
xor
or
pop
in
cmp
cli
xor
jo
shrl
mov
pop
and
cmc
add
negb
jnp
dec
jo
jl
cmp
shl
push
gs
pop
sbb
outsl
shl
jne
sbb
nop
test
stos
jle
sbb
out
aad
fcoms
fildll
mov
sub
jecxz
bound
xchg
ljmp
xor
loop
std
push
or
pop
jl
fs
mov
repz
jmp
cwtl
adc
repz
out
pushf
add
fisubrs
je
dec
iret
inc
sbb
lock
mov
pop
or
xorb
in
jae
pusha
test
loop
xchg
test
aas
sub
xchg
sbb
cmp
rcl
jne
sub
add
fdivrl
stos
iret
jno
leave
sub
dec
add
addr16
rcrb
xor
lds
mov
jo
cltd
dec
fistpl
fwait
cld
push
das
fwait
negb
ljmp
cmc
or
cmc
ljmp
cmp
roll
repz
sbb
fcmovne
inc
mov
jmp
mov
loope
mov
gs
adc
sbb
xchg
xchg
test
pop
rcll
mov
cmpsl
cmp
inc
insb
js
cs
outsl
jno
xchg
push
clc
aaa
idiv
lods
xor
js
adc
aad
fisubs
mov
inc
in
pop
mov
fld
pushw
cli
mov
mov
fcoms
mov
sub
xor
cli
icebp
out
adc
shlb
cltd
test
ss
jg
and
jmp
jbe
sbb
adc
test
cmp
sbb
mov
jmp
fmull
pop
test
jl
dec
pop
inc
jne
sbb
aam
dec
imul
out
mov
outsl
adc
jp
inc
shrl
leave
mov
fst
lret
mov
xor
ret
loopne
pop
outsl
ficompl
pop
mov
ficoms
mov
mov
inc
and
test
aas
iret
iret
sub
fcompl
out
mov
sti
jbe
lock
cwtl
out
ljmp
sub
inc
jecxz
test
lahf
mov
jno
xchg
stc
mov
cmp
adc
mov
dec
jl
aas
cld
popa
xchg
cmp
xchg
repnz
sahf
pusha
inc
jle
test
and
das
add
ja
or
test
add
sub
add
or
ret
sbb
xchg
stos
adc
repz
bound
or
fs
pop
xchg
cwtl
mov
xor
icebp
lea
xor
stos
into
and
rolb
cmpsl
dec
push
out
mov
push
std
orb
arpl
movsb
int3
pop
in
lds
std
mov
movsb
pusha
cmp
outsb
sbb
test
or
push
push
outsl
rclb
add
addr16
test
jmp
dec
xor
mov
jg
mov
pop
cmc
fiadds
mov
pop
popf
cs
les
pop
lods
inc
xlat
leave
pusha
imul
pop
mov
pop
xchg
adc
imul
mov
mov
test
and
aaa
pushf
adc
dec
dec
fwait
xor
int
call
cmp
mov
rcrl
mov
test
or
xor
xchg
mov
daa
das
xchg
lret
cli
es
sti
add
xor
mov
xor
std
stos
and
shr
stc
test
push
cmpsb
das
aaa
jo
shlb
data16
and
ror
outsb
cwtl
popa
aad
in
rol
iret
mov
mov
lret
cmp
cmp
iret
cs
dec
mov
mov
xor
mov
daa
clc
out
sbb
lcall
int
in
inc
cld
add
sbb
ljmp
repnz
pop
popa
in
dec
out
push
xlat
adc
jne
lret
jno
dec
pop
cli
adc
pop
aaa
sub
mov
cmpsl
fwait
or
push
cmp
repz
push
mov
xor
test
fidivl
jne
fs
mov
push
push
xor
fmull
out
xchg
and
or
mov
outsl
sarb
icebp
gs
inc
rorb
cmc
xor
in
xchg
outsl
cs
xchg
imul
sbb
mov
in
xor
pop
cs
gs
lock
rcr
xlat
mov
outsb
imul
bswap
xor
mov
xor
add
mov
dec
cli
hlt
pop
je
sub
das
fsubs
lahf
sub
mov
xchg
xlat
ljmp
lods
adc
neg
inc
enter
jbe
pushf
adc
cmp
stc
xchg
jo
adc
cmp
lcall
jno
or
aam
ret
xlat
int
lods
jl
jno
add
mov
xchg
hlt
xchg
jp
pop
sbb
arpl
jnp
adc
adc
bound
shlb
fs
push
jnp
and
pop
popf
push
add
add
push
adc
mov
stos
push
cmpb
dec
and
jne
sti
sbb
and
jo
add
adc
mov
add
mov
mov
add
test
add
mov
es
not
ret
jmp
mov
lahf
movsb
jne
into
cli
and
imull
es
ja
incb
fwait
mov
mov
jbe
mov
loop
push
xor
mov
test
jp
cmp
cld
cmp
push
jbe
add
sub
mov
or
enter
aas
mov
in
iret
fistl
stc
jmp
pop
pop
sub
in
insb
push
ret
shll
das
fdivrl
movsl
lods
sub
es
and
pop
dec
lcall
pop
popf
add
sbb
sti
jg
pushf
mov
cltd
mov
push
sahf
stos
mov
fistps
int
icebp
adc
das
insl
cmp
xchg
push
sub
scas
dec
mov
lods
xchg
or
and
test
sub
xor
mov
inc
sahf
pushf
rcrb
push
lods
inc
js
fsubl
or
xor
xor
out
sbb
repnz
push
shll
jns
in
adc
mov
adc
sub
xchg
fbstp
xlat
leave
jo
fwait
jge
xchg
cmc
pushf
popf
sub
xchg
ja
jge
js
push
pop
fnstsw
lock
jae
mov
xchg
movsb
rcrb
mov
shlb
dec
shlb
lds
pop
push
adcl
xor
inc
outsl
xchg
dec
push
jnp
mov
pushf
repnz
insb
xchg
and
ror
mov
xor
bound
int3
jo
sbb
test
imul
pop
cli
loope
or
nop
jmp
test
inc
into
pop
or
jns
pop
add
int
fidivrl
aas
cltd
mov
frstor
cmp
pop
subb
jbe
cwtl
mov
xchg
xchg
lcall
cmp
dec
xlat
rclb
outsb
mov
jno
scas
jnp
fucomi
sbb
or
repnz
mov
test
in
push
xchg
mov
ret
repz
cmpsl
sub
es
and
in
imul
js
jnp
xor
and
lea
and
fwait
sbb
pusha
mov
aas
das
cmp
leave
and
add
push
jae
je
jg
out
scas
sub
ja
test
fadds
dec
test
in
add
stos
lcall
fs
ficompl
sbb
mov
xchg
popa
jnp
inc
adc
pop
jae
pop
ljmp
mov
inc
mov
add
in
aas
imul
adc
push
shl
and
push
ja
inc
lods
xor
sbb
push
cltd
cltd
push
sbb
xor
pop
js
mov
or
xor
lret
dec
adc
cmc
push
stc
fwait
repnz
mov
inc
add
mov
xchg
cwtl
test
fimull
lcall
inc
inc
je
rcrb
xchg
nop
inc
outsb
push
mov
test
jbe
ja
icebp
dec
clc
pop
dec
bound
mov
out
sub
in
cmp
xchg
in
xchg
push
cs
dec
mov
out
or
push
cmp
mov
inc
arpl
test
xchg
in
adc
lcall
insb
int
int
dec
mov
incb
repnz
sub
xchg
adc
aad
fstl
pop
cmp
mov
xor
hlt
pop
sbb
pop
inc
jle
sbb
out
or
push
sbb
dec
mov
shlb
lods
ret
and
jns
fidivl
mov
sahf
into
pushf
in
or
jns
mov
ljmp
loope
cmp
xchg
je
mov
lock
out
mov
fs
pusha
ss
dec
test
push
sbb
push
mov
push
xor
std
sahf
mov
cmp
dec
stc
cmp
mov
sbbb
jecxz
imul
aas
jbe
fwait
out
fistps
into
push
fs
or
out
lods
insb
fcoms
pop
jge
adc
xor
add
in
int
aam
fiaddl
lret
nop
repnz
stos
loop
xchg
jo
cli
inc
jge
push
mov
call
movsl
fsubr
mov
xchg
rcll
pop
js
mov
imull
jg
out
mov
and
movsl
fsubr
xchg
xchg
xchg
adc
mov
hlt
in
std
adc
leave
jle
xlat
repnz
es
add
adcl
fsubs
sbb
dec
jp
xor
dec
or
cs
les
mov
add
and
sub
je
sbb
mov
popa
lea
sub
jns
sbb
dec
cwtl
dec
wrmsr
cmc
cmp
les
je
cld
jmp
in
fwait
popf
cmp
js
loope
fnstcw
jbe
rolb
ret
xchg
stos
inc
pop
hlt
imul
and
sbb
lcall
frstor
mov
push
push
arpl
sahf
jp
lds
xlat
and
adc
sbb
ret
pusha
leave
movl
mov
out
mov
adc
jns
rorl
mov
or
xchg
sub
mov
dec
cmpsl
mov
jg
adc
out
mov
sub
out
push
out
lret
call
and
xchg
mov
or
in
aaa
push
adc
dec
cmp
shll
push
adc
jmp
shlb
ret
push
enter
mov
mov
xor
cld
sbb
lcall
aad
and
pop
xchg
divl
rorl
mov
push
mov
popa
pop
or
sbb
xor
test
push
mov
lret
fdivrs
test
adc
inc
popa
xor
push
out
or
cmp
imul
scas
lea
mov
mov
inc
mov
fcmovne
pop
jmp
add
sbbl
cmp
adc
and
sub
into
rcll
xchg
fistpl
dec
cmp
jae
jl
sar
jle
jp
loop
pop
dec
and
pusha
sbb
jg
dec
shlb
cmc
shll
jnp
sbb
rolb
push
ror
jns
int
mov
sbb
xlat
addr16
pop
inc
inc
cmp
cli
mov
out
and
xor
mov
fbstp
push
or
popf
cmpsl
arpl
sbbb
mov
xchg
subl
aas
decl
sbbl
cmpxchg8b
and
mov
mov
shll
push
cmp
mov
inc
push
dec
mov
ds
inc
xchg
add
inc
adc
test
fbstp
push
or
aaa
jnp
aaa
loope
xchg
dec
sbb
aad
mov
xchg
fs
movl
test
add
lods
ds
mov
add
add
sbbl
movsb
cmpsl
mov
test
das
mov
sub
leave
add
in
adc
inc
movsb
in
jnp
mov
int
inc
loop
sbb
stos
sbb
in
and
dec
push
scas
push
dec
sub
xchg
mov
je
fucompp
dec
lods
ret
push
xorb
mov
mov
push
cmpsb
push
fs
inc
clc
nop
imul
or
cs
inc
cli
mov
push
mov
or
or
and
or
aad
addr16
jo
push
xchg
ljmp
push
and
mov
mov
ljmp
or
shll
xor
popf
adc
enter
pop
enter
cmp
or
mov
cltd
mov
in
pop
add
popf
daa
lret
sbb
sub
mov
lret
cmp
dec
movsb
int3
or
int
adc
pop
push
icebp
mov
cmp
jle
mov
lret
inc
inc
aas
mov
imul
lahf
push
mov
fisubs
mov
sbb
jle
or
lret
mov
mov
or
aad
pop
outsl
gs
lret
stos
pop
cmp
test
das
or
scas
jo
insb
movsb
jge
repnz
cld
cli
and
pavgb
inc
lds
and
test
movntq
out
in
inc
sub
ljmp
loope
out
fs
aad
jno
adc
mov
jns
lds
rol
adc
sub
dec
movsl
rclb
js
outsb
cmp
movsl
mov
mov
fyl2xp1
add
iret
mov
jl
adc
push
shll
adc
mov
cmp
fistpll
stc
stos
dec
mov
sub
adc
pop
bound
jae
repnz
jecxz
mov
dec
ljmp
jnp
dec
jmp
lds
push
mov
pop
imul
jp
and
mov
mov
cmp
dec
fiaddl
lahf
aam
mov
ret
xor
lea
loope
repnz
cmc
pop
imul
ds
pop
mov
std
cmc
lds
cltd
xor
sbb
jge
sahf
xchg
cmpsl
rcrl
and
scas
mov
rorl
sbb
push
mov
dec
pusha
xchg
arpl
xchg
test
adc
mov
mov
adc
jp
mov
adc
mov
xchg
jbe
pushf
push
mov
clc
lret
xchg
test
out
sub
add
fdivrs
rorb
sub
lcall
xchg
xchg
cld
or
sub
jno
lock
cwtl
imul
popf
fwait
pop
pop
ja
jbe
pop
roll
mul
jp
lds
mov
imul
push
and
cli
jp
fbld
loope
movsl
fs
xchg
fisubrs
in
lret
outsl
int3
jne
loope
xor
adc
out
mov
mov
mov
dec
outsl
pop
pop
mov
scas
mov
cs
nop
pop
es
jmp
cmc
imulb
out
jno
cmp
push
mov
or
cmp
inc
pop
js
add
cld
fsubp
mov
mov
ss
or
lods
pop
jmp
adc
and
stos
loop
xor
adc
add
sub
negl
in
sarb
iret
or
out
add
dec
out
rolb
and
ss
fisubrs
sub
jle
fcomp
sbb
mov
pop
in
call
lods
ret
aaa
or
jecxz
fldcw
sbb
int
mov
sub
cmc
sub
jg
sbb
orb
scas
imul
stc
aaa
pop
mov
dec
neg
mov
fiadds
aas
sbb
mov
push
cmp
sahf
popaw
or
insl
mov
movsl
sbb
xor
ljmp
adc
xor
sbb
cmp
fisttpl
call
xchg
push
pop
inc
popf
test
xor
test
push
out
xorb
out
outsl
xchg
loope
stos
adc
and
inc
loop
xchg
flds
dec
iret
jns
push
out
push
test
shlb
inc
pusha
orb
out
inc
dec
push
movsl
ss
in
in
fdiv
cmpsl
or
pop
je
push
push
or
push
fucomi
rcll
add
out
mov
lods
and
dec
xor
imul
inc
jg
popa
shlb
mov
mov
inc
call
inc
inc
icebp
push
jecxz
subb
xchg
pop
sub
scas
dec
fstpt
lea
fidivrs
inc
int3
cld
sbb
pop
rorb
sub
dec
xorb
stos
outsb
mov
mov
mov
cmp
push
fcmovnu
leave
outsb
pop
jns
fiadds
scas
sbb
lcall
sub
jnp
mov
clc
into
arpl
out
std
movsb
pushf
clc
mov
psubb
sub
pop
fdivs
jg
mov
stos
sbb
outsl
pop
sub
fdivrl
inc
dec
adcl
loop
daa
dec
cmp
ror
out
dec
push
subb
out
pop
in
xchg
jb
inc
fcompl
int3
cli
pop
sub
movsl
fwait
xchg
cs
jne
outsl
xor
adc
movsb
push
nop
mov
mov
pop
sbb
lock
in
inc
hlt
clc
ljmp
insb
xor
insb
add
push
stos
xor
mov
jmp
stc
cmp
aad
scas
orb
xor
jg
aam
dec
out
mov
cli
and
imul
xchg
popf
lahf
push
cmp
and
out
lret
ds
add
cmp
fdivrs
cli
and
stc
loope
sub
xchg
or
add
fwait
stos
cmp
jno
jbe
dec
clc
ds
or
mov
jmp
les
fcoml
push
pop
push
loop
rorl
and
sub
mov
loope
sti
iret
insl
dec
sub
add
iret
dec
fdivs
pop
arpl
and
mov
fnstsw
out
add
fcompp
xchg
popa
or
lods
cmp
xor
adc
sarl
or
jne
sbb
rol
out
mov
or
mov
lahf
test
xchg
pusha
dec
pop
cld
cmp
adc
lcall
popl
dec
push
scas
repnz
jne
push
popa
push
inc
movsl
or
cmpl
stos
cld
fldt
out
in
or
lock
dec
call
sarb
push
mov
inc
cwtl
dec
and
dec
push
aam
push
shrl
or
cmp
mov
test
cmp
xchg
stos
xchg
add
bound
mov
fmull
cmc
jecxz
jg
imul
jg
xchg
mov
stos
outsl
insl
imul
rcrb
fldl
ds
add
cmpsb
rep
xchg
cwtl
roll
pop
sub
mov
insl
dec
sahf
mov
jbe
and
ss
and
jmp
mov
popa
pop
iret
pushf
pop
push
andl
outsl
sub
xor
sti
xor
dec
cmp
sti
sahf
dec
dec
shll
xor
repz
shrl
push
xlat
pushf
jbe
hlt
mov
pop
inc
in
xchg
fs
and
insb
pop
sbb
push
out
test
or
loop
ljmp
mov
idiv
sub
lods
cmp
lret
add
jge
outsl
pop
adc
in
in
or
or
je
into
es
lock
jl
ret
mov
lahf
or
out
mov
hlt
out
out
and
test
jno
xchg
movsb
lret
jno
ljmp
testb
xchg
movsl
stos
or
jo
iret
lods
cmpsl
bnd
inc
sti
lods
push
dec
sbb
mov
inc
sub
push
mov
insb
push
ja
mov
pop
push
add
sbb
dec
test
rcrb
lods
sbb
and
outsl
xchg
ljmp
sub
pushf
xchg
mov
mov
cmpsl
pop
sti
lods
sub
xchg
pop
rorl
or
inc
imul
loope
jp
loopne
jb
cs
loopne
and
lds
pop
sub
or
mov
and
das
inc
cld
xor
push
cmp
cld
sarb
push
mov
fwait
decb
out
pop
jo
fucomip
add
sti
repz
cltd
fucom
lds
loopne
fistps
jp
rolb
inc
pusha
gs
lret
push
mov
mov
pop
cmpsb
leave
cmpsb
xchg
out
addr16
int
and
out
cwtl
xchg
ret
scas
push
int
out
sub
push
jge
or
mov
or
add
aaa
sub
push
lock
loop
add
cmc
xchg
popa
scas
lock
jae
js
adc
mov
fstl
int
sti
fs
fnsave
push
fstpt
pusha
sub
jecxz
cmc
mov
es
rorb
jnp
dec
xchg
mov
cmp
hlt
mov
lods
xor
jbe
addr16
dec
and
inc
in
lahf
pop
iret
mov
xlat
cmp
jp
in
jmp
sbb
cld
pop
mov
je
addb
int3
popa
pop
lds
xor
iret
addl
pop
aaa
int
push
adcl
loope
mov
cmp
push
and
nopl
popl
cmp
mov
cwtl
stos
shr
je
jb
ja
lods
jae
and
sub
ret
inc
inc
xchg
push
mov
call
lcall
inc
movsb
out
push
mov
mov
inc
push
mov
dec
stc
mov
popf
sbb
lcall
lcall
add
mov
pop
lods
pop
mov
xor
es
jg,pt
pop
cwtl
cmp
mov
hlt
mov
fsubrl
outsb
adc
adc
subl
push
pop
imul
sub
lods
stos
and
cmp
mov
cmpl
mov
adc
lds
iret
mov
lahf
dec
jb
fwait
movsb
inc
sub
and
push
imul
in
push
inc
jns
adc
sub
out
cs
jp
test
pop
popf
ret
out
popa
fs
xor
push
add
out
inc
adc
mov
adc
xchg
jbe
pop
mov
sub
faddl
in
mov
dec
aaa
inc
cwtl
xor
mov
popa
mov
sti
fadd
mov
data16
cmp
pusha
cmp
mov
ret
push
fcomps
xchg
insl
xor
cwtl
push
in
lret
lds
test
fsub
cmpsb
push
pop
in
fxch
jecxz
sbb
sbb
push
rcrb
mov
fnsave
pop
push
icebp
cmp
xchg
cmp
pop
rcrb
aas
sub
frstor
cld
nop
pop
rol
repz
jl
cs
xchg
push
lea
cli
pop
nop
in
cli
adc
and
in
jo
dec
mov
popa
stc
fwait
test
push
sub
in
sbb
loope
outsb
arpl
xchg
ja
xchg
pop
inc
lock
les
movsb
testl
std
and
sbb
ret
xchg
push
sti
mov
jnp
andb
jae
stos
fsub
fldt
xchg
shr
scas
stos
push
sbb
sbb
rcrb
xchg
lahf
jns
pop
fcomps
xchg
into
mov
mov
in
mov
xor
mov
outsl
icebp
inc
sub
inc
sbb
add
and
sub
mov
push
jbe
or
jnp
cmp
xlat
fnstcw
cmp
mov
dec
xchg
mov
mov
fucomi
cld
pop
sub
or
repz
xchg
pop
push
adcb
adc
mov
and
mov
push
cmp
mov
daa
sub
pop
sub
std
push
jmp
lret
test
sub
aaa
test
sahf
cmp
xor
dec
cmpl
pop
mov
lods
repnz
mov
sub
lret
enter
mov
rclb
mov
jnp
shrb
sbb
rolb
sbb
add
and
sbb
hlt
std
jge
xor
xor
fidivs
pop
pop
mov
fwait
sbb
inc
dec
aam
jg
jp
sub
nop/reserved
xor
ss
push
mov
inc
dec
mov
and
ds
call
jns
adc
dec
jl
cmpsl
pop
push
fidivrs
push
shll
out
xor
pop
pop
or
mov
js
daa
mov
rcll
stos
or
fsubrs
push
cmp
or
lret
hlt
push
sub
jg
dec
loopne
pop
and
push
mov
or
imull
imul
aad
loope
fmull
mov
aas
add
jle
call
mov
add
push
jbe
gs
jb
pop
cmc
ja
ret
add
pushf
aam
roll
mov
mov
cmc
lods
ljmp
clc
cmpsl
jp
mov
pop
pop
repz
mov
push
flds
out
cmpsl
lret
cmp
inc
xor
icebp
mov
test
add
xchg
mov
repz
jmp
fldl
jo
stc
dec
mov
lcall
sti
adc
or
dec
lcall
ja
adc
shrl
mov
pop
mov
lea
in
mov
jbe
xlat
jecxz
adc
jmp
add
inc
pop
xlat
mov
sbb
add
and
ret
sbb
push
lods
xchg
icebp
xchg
dec
jno
cmpl
popa
lock
dec
or
jno,pn
stos
jb
sub
dec
gs
jbe
mov
mull
sbb
adc
jge
out
push
xchg
imul
sub
cwtl
cmpsb
fildll
add
sbb
in
scas
pushf
or
icebp
inc
or
rclb
add
repz
mov
dec
and
int
in
dec
lahf
push
sub
aaa
jmp
cmp
xchg
mov
das
arpl
loope
outsb
ljmp
pop
adc
fstpt
imul
mov
pop
cmp
mov
pop
sti
add
push
shlb
dec
in
push
fidivs
pop
mov
lahf
ficoms
xor
repnz
movhps
aaa
js
adc
roll
fisttps
sti
jmp
push
ja
ss
xchg
dec
mov
push
push
loop
fisttpl
repnz
cli
repnz
jae
jg
push
outsb
lahf
pusha
es
inc
cld
sbb
fsubr
jnp
sub
gs
inc
mov
mov
imulb
adcl
cli
rol
int
in
mov
or
mov
or
xchg
pusha
and
inc
add
fildll
stos
xchg
loop
lock
jno
iret
clc
outsl
mov
cmp
or
sub
addl
cwtl
dec
push
lods
cmp
and
xchg
sub
or
adc
lcall
insl
and
ja
fistpll
dec
shll
sub
das
test
shll
and
mov
neg
sbb
xor
xlat
pop
arpl
fs
in
test
ret
xchg
pop
mov
xor
sub
dec
cmp
jl
les
push
jb
adc
movsl
xchg
addr16
dec
repnz
stos
movsl
rorl
rcrb
push
loopne
stc
adc
enter
mov
mov
in
dec
fnsave
jle
sbb
xlat
sbb
mov
sbb
sbb
mov
push
push
je
and
les
call
jb
add
insb
gs
mov
adc
cs
and
add
repz
test
jnp
jmp
je
jmp
pop
js
lds
popa
adc
movsb
mov
sub
xorl
daa
out
mov
mov
xchg
cmpsl
fs
rclb
divb
jecxz
xlat
dec
cmpb
sbb
je
into
push
cmpsb
mov
aas
xchg
stos
clc
fsubrl
mov
inc
insb
lea
repnz
in
xchg
mov
decb
outsb
std
jo
loopne
mov
dec
cltd
mov
test
rolb
std
cmp
lods
lret
cmp
add
loopne
popa
jno
add
xor
cmpsb
aas
daa
les
push
add
insb
ret
dec
cmpb
pop
icebp
dec
enter
dec
jno
jp
mov
jecxz
dec
rorl
jmp
xchg
inc
mov
sub
out
push
fwait
inc
test
ljmp
dec
mov
inc
xchg
mov
mov
nop
pop
inc
or
out
add
ds
test
xchg
aaa
jl
repz
push
jns
cmp
jns
xchg
insl
mov
xchg
call
mov
xchg
mov
fdivrs
int3
ss
cs
xchg
ja
push
sbbl
data16
cwtl
push
leave
xor
jl
mov
lea
jmp
xor
cld
insl
cs
mulb
aas
push
jae
pop
ret
pop
inc
pop
iret
push
cltd
sbb
call
decb
rolb
fs
cmp
rcrb
dec
dec
arpl
cmp
repz
dec
push
int
test
jne
stc
cwtl
dec
shl
mov
outsb
inc
outsb
push
push
dec
cwtl
and
pop
dec
push
or
enter
not
lret
inc
enter
and
jmp
int3
cmp
mov
xor
dec
dec
cmp
push
lcall
out
dec
or
push
nop
nop
sub
push
mov
arpl
popa
sub
cmp
lcall
test
rol
add
movsb
push
jle
jmp
lods
cltd
pop
add
inc
lahf
sahf
iret
sbb
push
stos
ja
dec
jp
cmp
xor
mov
pop
push
fcmovne
fmuls
inc
cmpsl
cmp
add
jns
imul
lea
mov
xchg
sahf
ljmp
hlt
insb
adc
stos
pop
fidivrs
repnz
jp
insb
inc
std
push
iret
outsb
add
mov
add
pushf
mov
imul
mov
aam
outsb
cmp
xor
mov
pop
scas
popa
add
sub
cli
mov
test
xor
int3
stos
repnz
inc
pop
push
cmpsb
repnz
push
sbb
shlb
int
jns
std
push
mov
add
xchg
out
pop
xchg
push
fnstcw
in
mov
imul
and
adc
sahf
imul
mov
into
mov
and
arpl
shll
jne
rcrl
popf
mov
pusha
pop
pop
outsb
pusha
addr16
jp
xor
pop
push
mov
imul
lods
dec
push
and
loop
pop
pop
pop
sub
pop
cmp
adc
fldcw
das
add
rcll
loop
ret
test
push
stos
cmp
inc
ficoms
aaa
gs
movsb
sbb
jp
test
ss
jecxz
sarl
test
mov
leave
out
adc
jge
outsb
jle
inc
cmp
pop
pop
movsl
or
mov
xchg
les
pop
xchg
pop
pop
or
lcall
in
fadd
loope
aaa
stos
pusha
orb
mov
fldenv
rorb
into
cmpsl
dec
les
jge
cmp
xor
fucom
imul
loopne
jne
xchg
pop
jne
jl
lds
dec
stos
mov
adc
jmp
mov
jo
sbb
push
push
lods
sbb
test
lods
add
aaa
jmp
xchg
ret
xchg
imul
inc
sarl
xlat
push
or
mov
cmpsl
jg
jecxz
xor
xchg
and
cld
mov
mov
lds
inc
in
pop
mov
sub
lahf
dec
push
out
bound
test
xor
inc
rol
inc
popa
mov
adc
fcomi
xlat
xchg
loop
jl
cmp
fiadds
les
scas
sbb
xor
pop
out
out
insb
addl
mov
in
xchg
sbb
jno
add
xor
dec
imul
or
mov
xchg
inc
inc
mov
adc
shll
and
in
in
sbb
int3
ficomps
jl
mov
sub
hlt
lock
jl
fnstcw
mov
movsl
xchg
mov
push
jbe
mov
xor
cmp
daa
inc
mov
push
bound
jnp
push
out
lds
xchg
xchg
orl
cltd
fcompl
int
loop
es
cmp
rol
jne
ds
movsb
pop
mov
movsb
or
fmul
push
xchg
in
scas
xchg
js
pop
ds
and
push
fwait
hlt
dec
sbb
add
pushf
sbb
jge
aam
je
mov
inc
dec
push
xchg
lods
dec
pop
hlt
in
aam
pop
mov
fmull
aad
shl
or
mov
ljmp
stos
into
pop
movsb
or
jae
cli
pop
cmc
push
or
in
cmp
add
mov
lret
or
fldl
dec
mov
xchg
xchg
jecxz
jae
fs
bound
cltd
jmp
into
push
jo
add
frstor
xchg
bound
xchg
jo
jnp
pop
leavew
in
jno
pop
xor
lret
dec
outsl
ja
jb
icebp
outsb
lcall
lds
mov
jo
in
test
and
mov
cmpsb
mov
aad
push
int3
sbb
fadd
lea
dec
je
pop
in
in
sahf
xor
push
push
xlat
test
ror
inc
cli
addb
sbb
es
and
dec
inc
std
add
push
and
into
xchg
mov
sbb
or
or
int3
int
ret
ja
adc
and
shl
push
idivl
and
sub
jge
outsb
sub
jno
sbb
jns
adc
mov
xor
and
ljmp
mov
repz
inc
inc
pusha
test
pop
idivb
mov
add
aam
jno
jne
jge
jno
push
add
jno
jno
sbb
and
icebp
jo
inc
xor
imul
push
jo
inc
insl
sarl
adc
loope
jne
or
pop
scas
mov
and
das
daa
aaa
mov
sbb
std
inc
jg
fcmovnbe
jnp
addr16
xor
dec
mov
cmpsl
bound
add
mov
rcrb
arpl
push
pushf
sti
sahf
sub
es
sbb
enter
jg
pop
imul
jns
push
loope
push
pop
add
mov
ss
mov
fwait
xchg
das
pop
jno
jb
call
pusha
dec
mov
das
mull
xchg
and
outsl
pop
sub
cmp
jno
dec
ret
cmpsb
ret
mov
jmp
xchg
bound
add
sub
imul
sbb
popa
into
push
pop
mov
and
das
mov
and
leave
cmp
cmp
mov
into
inc
adc
ret
sti
jo
ret
imul
add
mov
inc
xor
imul
lds
push
mov
pop
insb
mov
mov
jno
xchg
rcrb
das
add
xchg
cld
push
inc
lods
add
jp
push
fwait
aaa
cmc
dec
cmpsl
test
out
mov
jae
psubsw
test
ret
xorl
sub
and
out
aas
rolb
loope
negb
orl
pusha
sub
sti
test
jge
hlt
notb
jo
mov
popf
int3
inc
fwait
jns
sub
pop
hlt
stc
outsl
adc
loopne
inc
and
lods
xchg
inc
push
jnp
mov
lret
mov
int
call
xor
es
jo
test
outsb
sub
add
pop
mov
insb
cmp
xor
dec
and
or
shl
mov
pop
repz
mov
enter
cmp
jg
mov
shrl
call
daa
dec
stos
insl
lret
adc
pop
mov
mov
lahf
jg
test
bound
xlat
decl
mov
cmp
mov
lds
mov
addb
nop
cltd
mov
jo
jno
jl
mov
pusha
inc
pop
add
sbb
cli
enter
je
xchg
insl
sub
dec
call
jb
mov
jp
iret
jmp
pop
mov
mov
pop
push
loopne
mov
mov
pop
or
mov
cltd
lods
test
out
je
sbb
lods
jb
mov
xchg
lods
movsl
aam
lea
mov
add
mov
test
mov
fs
push
push
mov
out
inc
in
pop
xchg
nop
xchg
mov
jp
or
xchg
mov
mov
std
sbb
xor
fimull
mov
and
jbe
iret
cmp
es
ret
aam
xlat
cwtl
stos
cmpsb
sbb
push
mov
sbb
push
cmpsb
push
add
sbb
ss
fwait
fwait
mov
push
inc
cmpsl
imul
xchg
out
or
enter
and
push
adc
mov
fistpll
xor
xor
ficomps
repnz
clc
ror
xchg
pusha
add
inc
enter
repz
iret
sbb
pop
mov
mov
dec
jb
pop
mov
sub
fwait
andl
or
inc
sti
cmp
fcmove
mov
pop
add
or
dec
dec
sti
cmp
sbb
movsl
pop
aam
std
int
jne
mov
adc
lahf
dec
pop
xchg
in
add
stc
nop
in
shrb
clc
sbb
mov
cmp
andl
or
icebp
jg
repz
add
rorl
push
into
sub
cmp
mov
shll
mov
shll
inc
out
or
push
sub
fldenv
jo
sbb
into
fwait
lret
pop
js
jle
xchg
rorb
insl
mov
pop
stc
ret
sti
sub
and
pop
lock
add
jns
sub
or
mov
fwait
sub
push
push
popa
out
repnz
push
jo
dec
jl
cmpsb
pop
je
mov
dec
lret
jle
push
repz
outsl
pop
or
lock
das
push
xchg
xchg
xlat
sub
aas
data16
xchg
cli
or
jg
or
inc
sbbb
fadd
clc
mov
movsl
repz
jp
sbb
push
mov
jmp
gs
cmpsb
dec
or
and
out
jo
jnp
lret
and
fsubr
notl
pop
inc
sbb
daa
push
mov
call
push
add
or
sub
in
sub
lods
scas
lds
mov
xchg
jle
fs
pop
ret
inc
or
add
adcb
fdivrl
xchg
or
bound
jo
jb
mov
in
into
jne
dec
sbb
add
data16
inc
pop
inc
imul
xlat
push
push
jnp
arpl
mov
cltd
fs
cltd
pop
out
mov
je
xchg
add
dec
ret
cmp
dec
clc
push
out
movsl
fwait
mov
mov
push
call
mov
lret
repz
popf
xor
sbb
sub
and
cmp
push
sbb
jecxz
fnop
jecxz
fld
into
out
inc
daa
cld
sub
mov
cld
daa
mov
hlt
xchg
cmp
addl
std
inc
push
jle
jbe
fidivrl
test
and
jo
es
mov
rcr
jb
je
fsubrl
xchg
leave
das
iret
cwtl
push
paddusw
fsts
icebp
lea
loop
mov
test
and
ret
jnp
decl
dec
movsl
jmp
mov
adc
or
sbb
cwtl
aaa
xchg
sti
and
and
bound
sbb
add
rorb
add
bound
les
sub
sahf
xchg
add
mov
mov
jno
pop
and
mov
xor
cmp
shl
fsubrs
push
sub
and
negb
shlb
repz
lcall
mov
hlt
cmpsl
mov
lret
in
push
jecxz
mov
inc
rorl
in
push
pop
or
sub
in
adc
ror
nop
hlt
fidivs
cmp
sbb
cmp
cmp
ss
scas
test
mov
mov
xchg
fcom
mov
movsl
imul
out
sub
adc
inc
adc
shlb
jmp
cwtl
or
mov
bound
adc
pop
lret
std
push
add
test
outsl
out
and
pop
jmp
fwait
ret
adc
mov
mov
mov
ffree
or
pop
sbb
dec
sub
aaa
push
adc
xchg
rorl
xchg
daa
pop
pop
cwtl
jne
pusha
lods
mov
popf
pop
repnz
push
fucomp
xchg
push
lock
in
adc
testl
xchg
push
ret
sahf
xchg
mov
cmpsb
popf
mov
mov
cwtl
and
pusha
and
or
int3
mov
adc
out
dec
or
mov
xchg
call
shl
push
xchg
loop
sub
adc
loopne
and
add
xor
cli
outsb
xchg
cmpb
lret
aad
lcall
sub
lahf
dec
pop
shll
jp
leave
popf
bound
test
cmpsl
pop
add
rolb
stos
xchg
out
xchg
mov
xchg
and
inc
ud1
mov
mov
mov
push
mov
cwtl
cld
scas
cmpl
cltd
imul
nop
insb
loopne
xchg
cmp
lahf
cvttps2pi
dec
jp
mov
fidivs
pop
loopne
adc
repnz
sbb
loop
cmc
mov
in
imul
cld
aad
addb
decl
push
scas
pop
bound
mov
sub
jecxz
fdivrs
or
outsb
mov
sbb
hlt
and
popa
call
test
js
hlt
add
ljmp
adc
or
xor
push
mov
lret
data16
loopne
idivl
pop
negl
dec
mov
shr
or
mov
aad
mov
adc
xchg
xchg
subl
popf
inc
enter
sbb
sub
sbb
popf
xchg
fwait
ja
insl
ss
cmp
or
push
sub
add
mov
mov
mov
jecxz
jp
inc
mov
xorb
push
enter
inc
lahf
aaa
call
ja
push
pop
jmp
mov
fldl
dec
test
add
ret
les
jae
xadd
inc
aaa
push
xchg
inc
fsubrl
mov
iret
and
push
std
popl
cmpw
sub
icebp
xchg
cmpsb
mov
clc
outsl
cltd
and
mov
or
cmp
jo
icebp
inc
mov
push
fiaddl
adc
jae
test
mov
arpl
jo
inc
nop
mov
arpl
inc
bound
push
ds
push
scas
inc
mov
fisttpl
sub
mov
sbb
xor
mov
add
pop
rolb
sbb
pop
xchg
pop
subb
cld
dec
dec
test
pusha
mov
jmp
test
insl
frstpm(287
dec
fcmovnb
insl
inc
jbe
mov
hlt
jno
mov
loope
xor
add
jae
out
or
mov
jecxz
repnz
xchg
jbe
outsl
xlat
nop
push
cld
xchg
in
hlt
les
dec
xchg
push
movsl
cwtl
pop
std
mov
add
or
push
mov
andb
out
sbb
mov
lahf
push
lret
dec
sahf
repz
int3
scas
push
adc
cli
jae
sub
arpl
aas
xchg
dec
test
cmp
mov
xlat
pop
fisttpl
ret
div
pop
pop
in
hlt
cmc
push
sahf
iret
xor
shll
aaa
fwait
push
lret
and
mov
mov
and
inc
push
push
cmp
mov
pop
icebp
popa
adc
mov
fiaddl
ja
xchg
pop
ret
pop
add
xor
pop
push
popa
fiaddl
mov
out
enter
es
or
or
jb
jns
testl
jmp
cld
les
sbb
pop
pop
mov
lods
sbb
popa
adc
repz
and
ret
das
ljmp
inc
pop
ss
or
mov
adcb
in
in
nop
cmpsb
cmpsl
fists
lods
mov
push
jnp
in
add
pushf
test
push
rorl
insb
cli
cmc
fs
pop
insl
repnz
mul
leave
add
xchg
into
jnp
insl
push
repnz
adc
xchg
sbb
test
repz
imul
pop
ljmp
jmp
out
sbb
jnp
int3
out
das
dec
xchg
dec
cmp
adc
sub
pop
jnp
loopne
testl
enter
mov
int
add
mov
aam
jp
pop
jle
push
loop
xchg
ret
cltd
lods
lods
es
int
pop
fcoml
shlb
dec
push
cmpsl
mov
mov
xchg
add
or
add
pop
fwait
cmp
xchg
ja
out
xchg
clc
ficompl
popf
cwtl
fisttps
sub
stos
cmp
push
outsl
pop
cwtl
test
pop
jl
lea
bound
sub
inc
cmpsb
adc
dec
outsl
ja
sbb
fcompl
and
bound
out
nop
in
stc
add
xchg
cmc
rorl
fwait
mov
pop
xor
or
pop
movsb
stos
xchg
popa
loope
cmc
jb
or
pusha
push
dec
xlat
movsb
dec
fwait
push
aaa
scas
orb
xchg
pop
xchg
gs
mov
arpl
mov
jl
les
push
push
xor
mov
and
add
mov
in
push
lahf
adc
std
ljmp
cli
dec
int
shlb
push
loopne
into
incl
ljmp
out
mov
cmp
mov
jl
add
push
cld
add
pushf
pop
xchg
inc
mov
cli
sbb
movsb
insb
mov
mov
mov
jo
sahf
jge
jle
cmc
out
lock
mov
jns
cmp
cs
jnp
inc
pop
std
pop
or
je
mov
inc
jl
test
mov
stos
mov
popa
push
imul
fwait
cwtl
push
or
mov
mov
leave
ret
sahf
push
inc
decb
sub
mov
xchg
sub
out
or
leave
mov
rorb
mov
jp
pop
ret
cmp
mov
xor
loope,pt
aad
jmp
mov
inc
movsb
mov
in
ret
adcb
jae
mov
pop
into
cmp
outsl
loopne
pop
mov
jle
jmp
int
inc
data16
or
insb
mov
xchg
stc
adc
mov
jo
mov
stos
arpl
ja
cltd
xchg
lea
into
ficoml
mov
xchg
push
aaa
sbb
imul
push
push
aas
xor
insb
adc
add
lret
inc
stos
pushf
cmp
shll
xchg
mov
dec
insb
xor
out
lds
sbb
jns
lods
aas
fbld
inc
mov
lcall
mov
push
push
xchg
fs
es
push
stc
imul
adcl
or
into
mov
insb
je
addr16
push
repnz
dec
xor
popa
adc
loopnew
insb
add
test
mov
aaa
jbe
xchg
mov
inc
testl
stos
imul
push
sub
xchg
add
mov
jl
jns
and
fildl
dec
aaa
xor
nop
mov
xor
adc
mov
add
sti
fstpt
bound
lds
out
push
inc
sub
mov
testb
ret
pop
sub
pop
aaa
cmp
lods
fstpt
aad
ljmp
test
or
dec
ss
shlb
mov
push
mov
and
push
sti
add
jne
mov
hlt
sbbl
lods
popf
xchg
jmp
inc
das
ret
or
sti
test
ret
dec
out
in
popa
mov
mov
or
cmpl
cld
mov
dec
loopne
bound
cmp
cmp
inc
dec
or
sbb
icebp
out
sti
into
js
pusha
repnz
xlat
mov
push
lea
adc
sub
lret
gs
ja
in
data16
jo
mov
add
jg
mov
insl
and
dec
popa
mov
outsl
outsb
cmp
cmc
mov
and
mov
cmp
dec
xor
push
mov
bound
pop
mov
pop
inc
mov
sbb
cld
mov
data16
enter
ds
wrmsr
pop
adc
mov
scas
inc
and
int3
jae
pop
inc
xchg
jno
xor
mov
in
jmp
cmc
add
and
pop
or
inc
jp
pop
cwtl
sub
jl
pop
divb
push
leave
insl
mov
jge
push
f2xm1
and
jge
pop
incb
add
mov
adc
inc
ret
or
xor
lock
icebp
out
imul
dec
mov
sub
shll
cmp
xor
inc
cs
cmp
call
cmc
mov
xchg
push
and
movsb
sub
dec
enter
cltd
push
add
in
mov
add
dec
ficoms
mov
mov
pmovmskb
add
ja
mov
sbb
ja
ja
adc
lcall
push
cmp
adc
bound
xchg
roll
je
out
or
aaa
roll
test
scas
pusha
fisubl
out
outsl
push
in
mov
popa
jne
aas
pop
push
cld
dec
xor
mov
jne
inc
bnd
stc
mov
xchg
pop
call
adc
outsl
or
loop
mov
loope
inc
xor
add
push
xchg
in
stos
lds
dec
hlt
jmp
mov
xor
pop
inc
add
sub
fcomip
hlt
or
movsb
enter
mov
ret
test
dec
cmpsb
les
sbb
push
es
out
pusha
xlat
xchg
push
iret
xor
cmpsb
jnp
add
or
and
adc
mov
pushf
in
imul
jmp
and
sub
lods
dec
lods
daa
fbstp
mov
addl
jecxz
mov
pop
into
push
es
cmp
xchg
xor
mov
jb
cwtl
clc
dec
mov
cmp
fcoms
aaa
test
sub
out
test
sbb
mov
std
in
lods
push
cmp
mov
push
stos
stos
ret
out
add
mov
push
cmp
sbb
pop
hlt
fcoml
sahf
sub
bound
imulb
pop
out
outsb
and
mov
push
mov
push
lock
int
addr16
jno
leave
jo
leave
xchg
dec
dec
push
inc
inc
jecxz
test
loope
push
test
repnz
adc
push
iret
fs
repnz
adc
mov
and
add
pop
mov
push
cmpsl
pushf
sub
test
push
cld
inc
and
mov
dec
jge
jle
ret
adc
add
fucomi
outsb
push
jb
vcvtss2si
mov
push
aas
aas
push
mov
and
std
decl
aam
imul
orb
or
aas
call
sub
dec
shl
or
cmpsl
lcall
xor
and
hlt
sbb
sbb
mov
mov
dec
push
pop
jg
or
inc
add
mov
or
hlt
shll
leave
mov
je
das
push
inc
sbb
insb
mov
repnz
incb
std
jl
push
inc
mov
jno
shll
push
loope
mov
push
adc
jnp
push
push
push
rcrb
mov
scas
cmp
clc
std
pusha
in
mov
jnp
loopne
fiaddl
jecxz
mov
pop
loop
push
daa
cmp
lods
cli
adc
push
or
test
xchg
jno
inc
sub
outsb
fcoml
push
std
jl
and
cmp
mov
mov
test
cmp
das
lea
roll
xor
sahf
xor
cwtl
cmp
jp
mov
add
jecxz
or
cmpsb
lock
ret
ficoms
push
pop
mov
and
jle
or
mov
mov
stos
into
pop
fldenv
lds
xchg
mov
lahf
jbe
dec
pop
fwait
pushf
fimuls
adc
jb
std
icebp
pop
stos
adc
dec
stos
push
pop
clc
cmp
sbb
and
push
or
adc
cmpsb
popa
jnp
inc
lds
dec
in
fldcw
shl
sti
push
lahf
cmp
sbb
xor
inc
push
or
test
daa
dec
dec
or
adc
mov
pop
sbb
jbe
and
mov
lret
mov
enterw
xchg
lods
sbb
fisttpll
jae
mov
movsb
adc
mov
mov
jge
inc
adc
insb
sahf
push
push
push
push
fwait
jle
inc
xchg
das
mov
cld
call
inc
jo
into
sub
pop
popf
arpl
adc
clc
pushl
rorl
xchg
lret
and
xor
int
and
jo
out
loope
push
or
push
rcll
cmp
stos
mov
jns
mov
js
iret
jl
fimuls
leave
mov
out
movsl
mov
clc
add
push
lret
adc
sbb
push
popf
mov
cli
adc
xor
dec
daa
popa
ljmp
and
pop
xor
mov
cld
dec
push
sub
add
lock
rol
cmp
pusha
in
icebp
shrb
push
iret
dec
out
shrb
dec
push
in
xchg
rcll
dec
jnp
mov
adc
jge
sbb
nop
sbb
out
fmull
pop
mov
pushf
lock
xchg
adc
sbb
test
inc
add
sbb
lds
shll
orl
cmp
and
scas
xchg
fisubl
popf
dec
lret
mov
lds
xchg
dec
inc
lret
mov
insb
jns
mov
in
xchg
dec
ret
jb
clc
dec
ss
sahf
lret
daa
inc
xchg
dec
lock
cmpsb
stc
mov
pop
jo
adc
lcall
inc
sub
adc
loope
imul
sbb
js
mov
xchg
inc
mov
shll
int3
dec
aam
test
mov
cmp
or
jnp
cmpsb
loope
add
jns
dec
mov
jge
mov
fbld
pushf
es
xor
pop
push
xchg
and
pop
add
adc
iret
movsb
jno
int3
lret
xchg
ret
aad
jae
jbe
push
sbb
jg
xor
imul
outsb
lods
push
cmp
or
popa
push
jbe
ljmp
mov
ja
ds
hlt
repz
ss
jle
sahf
fsubrs
push
xchg
dec
in
pusha
inc
popa
mov
inc
aad
test
dec
out
rorb
xor
add
pop
adc
cmp
lock
push
mov
jne
mov
sarl
negl
mov
mov
push
jg
and
mov
dec
stos
lock
add
mov
fiaddl
fisubrs
notb
int
pushl
sbb
mov
inc
cmp
addb
mov
push
enter
xchg
rcll
mov
sahf
fidivs
xchg
test
dec
or
lahf
adc
pop
add
aad
lret
mov
push
dec
out
add
enter
cmp
cmp
aam
dec
loope
xchg
flds
test
sub
lods
mov
test
pop
mov
or
inc
inc
pop
in
mov
cld
inc
lretw
jns
stc
jns
jb
aas
mov
into
cmp
shrl
push
lahf
mov
push
jnp
gs
out
hlt
mov
out
and
popa
outsb
sub
dec
xchg
and
sub
adcb
inc
or
fxch
rsqrtps
and
pusha
movsb
stos
sbb
and
out
mov
or
rcll
cmpsl
test
dec
jbe
fucomp
inc
sub
xor
sar
sbb
out
outsb
sub
lods
loop
call
js
cmpsl
pop
mov
xorb
push
xor
popa
cs
mov
jmp
pop
movsl
jge
or
adc
and
daa
sub
hlt
fucom
out
jb
icebp
mov
mov
test
and
hlt
xor
lahf
sbb
in
fbld
lods
pushf
imul
sbb
xor
pop
outsb
subb
popa
test
int3
in
inc
lea
xchg
xor
rcrb
ss
loopne
call
dec
insb
in
fs
pop
scas
mov
aaa
stc
add
cmp
mov
add
push
test
inc
mov
pop
popa
out
jae
pop
orl
jge
aam
bound
dec
add
fisubl
xor
call
add
inc
xor
mov
movsb
scas
fistl
and
adc
in
jns
ja
hlt
pop
orl
sub
and
jae
inc
lret
cmp
jbe
sbb
lret
pop
mov
jg
scas
mov
and
pop
clc
out
stos
clc
xchg
les
sub
xchg
roll
sbb
add
mov
cli
shrl
imul
sbb
xor
das
pop
outsb
lods
jecxz
loopne
int3
dec
cli
movsb
sub
rolb
xchg
lahf
sbb
insb
jmp
data16
aaa
lret
ljmp
xchg
cltd
jns
pop
or
mov
push
push
xchg
rolb
inc
mov
roll
xchg
out
stos
scas
dec
shrl
xor
adcb
jge
pop
int
sub
and
in
filds
cltd
mov
stos
add
cmp
cmp
aas
fwait
movb
ja
sub
sub
sub
jl
xchg
out
push
in
lods
mov
inc
loope
orl
cld
mov
fs
xchg
push
sbb
push
sti
dec
fiaddl
mov
mov
xor
dec
mov
fisttpll
xor
shlb
mov
add
jmp
pop
loop
push
fidivrl
add
xor
sbb
aad
sbb
lahf
clc
xlat
sbb
in
xor
jle
pop
push
jb
cmc
pop
dec
push
mov
data16
push
data16
daa
push
movsb
or
popf
dec
les
in
fs
jb
cs
pop
mov
mov
mov
cs
push
ljmp
ss
xchg
orl
mov
adc
mov
add
sbb
das
sarb
aad
loopne
adc
pop
lods
xchg
out
mov
fucomi
xorb
ja
rorb
push
orl
das
int3
mov
jbe
adc
int3
in
out
dec
outsl
std
shr
push
inc
push
push
push
nop
mov
mulb
mov
pop
aam
jo
nop
dec
dec
movsl
addr16
insl
mov
sbb
xchg
pushf
repnz
jge
aam
fldln2
iret
sub
jp
adcl
sub
mov
cmp
xor
adc
sub
repz
inc
into
je
ss
dec
daa
imul
pop
or
clc
push
ror
mov
jns
cmp
pop
mov
fdiv
in
dec
xchg
jmp
sub
sbb
add
hlt
push
pop
push
and
jge
in
sub
rcr
jae
xor
mov
or
xor
lcall
mov
sub
hlt
mov
clc
dec
cmp
jno
imul
xchg
test
test
inc
cltd
mov
xchg
shl
xor
lea
leave
sub
sub
fcmovne
insl
jo
cmp
inc
fisubrs
out
mov
outsb
ljmp
fnsave
and
push
ss
mov
cmp
shll
cmp
pop
mov
jp
dec
push
inc
and
mov
sub
inc
push
push
pusha
jo
push
stc
in
jecxz
test
jmp
lods
dec
loop
mov
or
psrlq
xchg
jle
rorl
cmp
cld
mov
sahf
mov
aam
inc
dec
loope
aaa
mov
clc
mov
pop
data16
movsb
inc
inc
cmc
aaa
out
sbb
inc
xlat
and
xor
ljmp
dec
test
sub
jmp
cmc
lds
jmp
sub
or
xchg
or
xor
outsb
test
jbe
nop
repz
test
int
outsb
xor
jg
mov
or
xchg
mov
jp
xchg
cli
scas
dec
adc
adc
lock
in
mov
push
pop
sbb
push
lret
sub
data16
or
mov
dec
cmp
inc
push
loope
sbb
insb
jo
dec
cltd
sbb
out
xor
dec
ljmp
push
fmull
push
sbb
or
clc
fcoms
inc
mov
xchg
xchg
sub
mov
movsb
push
rcrl
xchg
push
loope
outsl
lods
cmp
or
fcmovnu
lcall
ljmp
xor
enter
sbb
cmp
dec
and
pop
push
cltd
dec
dec
add
hlt
imul
pop
stos
out
push
or
jb
popf
out
add
push
popa
lock
add
xchg
mov
movsb
push
push
xchg
out
cltd
jmp
mov
aaa
insb
enter
adc
loopne
jg
add
add
addr16
dec
rclb
lods
sbb
lret
aaa
mov
repz
shrb
inc
dec
xlat
push
fs
test
les
fcomi
movswl
sti
sub
xor
cli
push
sti
jnp
repnz
sarl
pop
or
push
mov
mov
xchg
mov
into
add
sbb
or
movsb
sub
sub
cmpsb
fistl
hlt
jnp
fdivs
popf
loope
mov
jne
xchg
pusha
data16
push
dec
sbb
dec
push
sub
rclb
add
ss
mov
jle
pushf
repnz
cltd
rcrl
fdivrs
in
inc
sahf
dec
mov
mov
push
ds
push
and
rcrb
cltd
mov
mov
push
lahf
cli
inc
adc
adc
cli
sub
push
int3
push
pop
mov
sub
xor
mov
scas
lret
in
lods
mov
or
shrl
ss
mov
add
roll
shlb
out
dec
std
addr16
icebp
repz
xchg
int
mov
jg
stos
cmp
sbb
add
push
push
lret
dec
jmp
ljmp
in
cld
outsl
xlat
push
scas
fs
sbb
ljmp
imul
push
xor
push
push
out
shll
fldl2e
xchg
xor
mov
inc
or
jecxz
pop
mov
jmp
arpl
mov
out
xchg
push
inc
dec
mov
adc
push
fidivrl
andb
test
xchg
movsb
mov
arpl
pop
push
and
mov
pop
xchg
loop
jecxz
pop
add
stc
icebp
push
cmpsl
and
sahf
push
test
rcrb
pop
fistpl
sub
aad
push
cmp
test
add
outsl
cltd
pop
cmp
in
or
pop
mov
fldl2e
stos
pop
aaa
xchg
jp
xor
in
jmp
mov
fadds
outsl
cmpsl
dec
xor
cltd
les
or
pusha
adc
pop
cmpsl
adc
in
xor
push
lea
mov
in
xchg
mov
dec
mov
out
fcomip
inc
imul
pop
aad
lahf
fs
mov
loopne
inc
sub
loope
fcoms
sub
aaa
push
mov
push
das
mov
leave
add
add
pop
push
ja
push
mov
add
sti
dec
jb
xchg
mov
inc
aas
aas
mov
mov
leave
cli
pop
xchg
cmpsl
scas
test
mov
jmp
mov
pusha
loope
push
sbb
or
sub
jg
mov
bound
pop
adc
fdivrl
push
lods
xor
mov
push
fwait
cmpsb
fsub
js
aam
mov
mov
mov
into
fdivs
mov
js
lock
mov
dec
mov
xchg
sbb
xchg
push
push
imul
jecxz
cltd
in
mov
arpl
pop
mov
aam
ljmp
aaa
cmp
into
add
push
in
mov
xor
sub
push
mov
out
dec
cltd
popa
movl
sar
shl
cwtl
fimull
jmp
xorl
jnp
mov
inc
xlat
push
je
mov
daa
dec
shrl
ss
pushf
pop
mov
lret
ljmp
pop
mov
out
sbb
out
daa
push
lods
dec
adc
and
pushf
test
ss
test
dec
popa
dec
fstps
xor
icebp
cli
xchg
dec
pop
mov
pop
sub
notb
inc
add
mov
jne
int3
lret
adc
stos
fs
dec
xor
sbb
push
cli
sub
insl
fcoms
xchg
push
in
int3
and
and
sahf
nop
das
add
addr16
inc
or
daa
arpl
add
ret
int3
shl
fs
dec
lea
in
and
stc
sbb
mov
sbb
das
pop
andb
sbb
pop
lcall
or
test
lahf
push
push
dec
push
cmp
fchs
test
aas
dec
pushw
enter
leave
pop
icebp
sbb
loope
mov
inc
fldcw
insb
jmp
test
ja
or
in
xchg
mov
and
test
enter
addr16
mov
shll
enter
xchg
cmc
add
lahf
int3
rcrl
cld
add
lea
push
push
inc
inc
push
push
cmp
in
into
jl
sbb
or
xorl
xchg
out
mov
xor
sti
clc
lret
adc
mov
insb
xchg
outsl
jge
loop
and
aas
push
mov
aaa
cmp
xchg
movsb
jle
inc
sub
push
adc
inc
orb
sub
cltd
scas
mov
lahf
pop
xchg
sbb
mov
xlat
push
lret
and
jo
xchg
test
std
lcall
shr
pop
pop
mov
jp
ds
push
jp
leave
pop
leave
and
mov
lea
mov
into
xchg
adc
cmpsl
out
inc
and
sub
nop
js
inc
sbb
scas
xchg
pop
fwait
pop
gs
icebp
mov
lahf
lods
inc
das
pop
nop
push
xchg
cwtl
inc
adc
pushf
fmulp
repnz
movsb
out
pop
std
push
mov
or
jnp
lock
xor
repz
or
mov
call
pop
negb
push
dec
sbb
add
push
out
lds
xorl
xchg
popl
leave
lods
and
push
inc
mov
dec
gs
mov
fldenv
adc
sub
pop
push
jge
push
xchg
lret
ret
ljmp
dec
test
pushf
movsl
pop
call
sbb
xchg
xchg
add
cltd
and
pop
sbb
dec
rcrl
push
adc
xchg
hlt
test
out
mov
fbstp
cmpsl
hlt
outsl
and
or
mov
sahf
cli
fnstenv
mov
sub
fisubs
xchg
imul
les
xor
cmc
arpl
shlb
pop
subl
loop
dec
xchg
shll
sub
pop
jecxz
xchg
inc
sbb
aaa
mov
fsubrs
imul
sbb
call
addb
or
lock
rcll
cmpsl
sbb
jae
stos
inc
call
ja
dec
sub
adc
testl
sbb
int
sbb
xchg
stos
fs
outsb
and
outsl
mov
and
out
mov
adc
dec
insb
fiaddl
ljmp
or
js
push
xor
push
add
dec
push
inc
dec
dec
mov
shl
lret
and
idivb
pop
xchg
xchg
nop
mov
cmp
and
cmpsb
inc
xor
fcomi
xchg
or
hlt
or
stc
mov
or
or
xor
loope
or
loopne
lret
imul
jbe
cltd
sub
test
repz
adc
jno
inc
out
mov
nop
lret
dec
xor
cmpl
addr16
pop
ss
ja
pop
arpl
mov
in
xchg
aam
inc
pop
lods
adc
pop
adc
out
in
movsl
inc
inc
cmp
sub
arpl
cmp
dec
fdivl
sbb
fidivs
jl
repnz
dec
loopne
addr16
icebp
push
sbb
js
loopne
pop
leave
sub
into
in
cmp
push
insl
lock
push
jb
sub
dec
mov
adc
shll
sub
loope
arpl
cmpsl
inc
lret
push
jmp
lahf
sti
jo
daa
dec
shl
or
xchg
jmp
mov
or
lcall
in
in
mov
push
in
pop
mov
xor
sub
jae
fidivrs
je
sbb
or
jns
testb
pop
rcll
mov
jmp
sahf
je
fwait
sbb
mov
mov
xchg
pop
scas
les
out
icebp
enter
xchg
push
mov
shll
imul
out
sbbl
pop
adc
mov
cmp
ret
mov
mov
nop
or
mov
jp
outsl
cli
ds
scas
pop
int3
mov
addl
add
leave
out
jne
mov
jg
push
into
ffreep
outsb
popa
or
adc
pushf
in
inc
add
out
pop
cmpsl
mov
xchg
pop
inc
loop
jmp
lcall
insl
lods
sbb
adc
ss
and
mov
jnp
mov
imul
xchg
shrl
jno
cmp
es
and
jnp
dec
adc
xchg
xchg
in
xchg
jnp
cld
mov
cmp
jle
and
jg
call
stos
lret
pop
sbb
push
add
mov
outsb
mov
cmp
stc
fld1
pop
mov
test
nop
inc
out
loopne
pop
pop
jae
sub
enter
push
in
fs
push
iret
fucomi
sub
pop
fdivrl
pusha
jne
jb
mov
cmc
fisttps
ret
push
add
negb
inc
xchg
fistpl
adc
pop
xlat
and
fisttps
inc
sbb
sub
jbe
test
or
sub
and
nop
cmp
add
xchg
cs
mov
xor
mov
maxps
inc
lret
mov
lret
dec
xchg
adc
lret
outsb
repnz
push
cmp
mov
jb
push
jmp
std
out
push
pop
insl
jne
xor
test
aam
push
mov
ret
rcrb
lahf
mov
sahf
inc
inc
xchg
add
push
sbb
icebp
sbbb
jecxz
add
outsl
out
lea
in
out
mov
pop
pop
sub
inc
divl
push
test
leave
jle
adc
stos
cmp
out
loopne
rclb
inc
mov
mov
jb
xor
or
adc
in
and
clc
clc
and
mov
mov
test
mov
inc
outsb
leave
add
les
push
jge
outsb
lods
aad
mov
pop
stc
in
faddp
ljmp
inc
loop
and
jns
cmpsb
iret
adc
rol
sbb
ror
and
sub
cli
jmp
arpl
add
ret
outsl
jb
xchg
stos
and
fsqrt
movsb
mov
or
jns
xor
insb
insb
js
add
fxch
dec
lahf
nop
inc
cmpsb
xchg
imul
mov
push
push
push
or
jo
sub
dec
dec
push
ror
jno
add
and
outsb
sub
movsb
rclb
jle
mov
roll
aam
test
imul
xor
int
outsb
out
cmp
std
in
pop
test
cwtl
adc
nop
fwait
arpl
adc
in
push
adc
or
cmp
hlt
movsb
dec
mov
push
push
repnz
cltd
cmpsl
lret
aaa
test
sti
js
lds
rolb
idivb
jnp
xchg
pextrw
push
jg
outsb
dec
push
std
stos
pop
sbb
inc
mov
iret
mov
scas
in
insb
xor
movl
shl
sbb
cmpsb
out
inc
jecxz,pt
pop
sbb
out
ss
pop
ret
sbbl
loopne
popa
push
test
mov
cli
and
fdivs
sub
pushf
popl
add
xor
int3
push
pop
mov
sub
inc
sbb
xor
mov
jge
lea
add
dec
pusha
and
stc
test
pop
pop
imul
cli
cmp
imul
pop
icebp
lock
jl
dec
dec
xor
or
out
push
or
xchg
xchg
add
dec
rorb
lds
mov
or
scas
hlt
inc
inc
and
cmpsl
dec
ljmp
rcll
inc
or
sbb
mov
jno
pop
mov
fwait
rcrl
inc
mov
scas
mov
repz
jnp
mov
push
jp
add
push
xorl
sar
movsb
aas
imul
js
cmp
adc
cmpsl
lea
or
fnstcw
mov
push
mov
jns
ja
fimuls
mov
push
jge
xor
dec
dec
or
das
inc
cmpsl
cmp
imul
push
ret
lods
or
mov
cmp
xor
xor
xor
cmpsl
popf
jl
mov
movsb
lahf
shl
movsl
and
shl
mov
cmp
jg
and
mov
adc
fmuls
insl
mov
xchg
mov
gs
xchg
sbbl
xlat
lock
xor
aaa
fcmovne
pop
icebp
maxps
shlb
imul
test
adc
stos
mov
lea
