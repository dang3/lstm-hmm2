sbb
add
mov
dec
test
les
dec
unpcklps
sub
push
xchg
lret
sub
call
loope
sub
lods
lea
mov
push
dec
and
dec
fcmovu
out
jg
sbb
sbb
ja
cmp
shrl
dec
xchg
dec
mov
inc
mov
mov
imul
test
xchg
jmp
cmp
ficomps
xor
cmp
lock
mov
push
inc
cmc
add
mov
adc
test
out
push
inc
push
xchg
dec
mov
dec
negb
cmp
xor
or
and
inc
sub
dec
mov
jnp
push
jl
xchg
cmp
loope
movsb
in
jecxz
test
mov
push
push
loope
dec
fists
outsl
cmp
aas
ficoml
clc
call
or
or
jnp
dec
aad
jne
xor
mov
outsb
cmp
inc
xor
loop
cmc
mov
clc
test
loopne
cmpsb
pop
jmp
insb
ret
fstps
adc
xchg
add
mov
ja
jno
cmpsl
ljmp
je
insl
xor
insl
or
sbb
lret
cmp
out
aas
sub
cld
inc
pop
or
mov
popf
addr16
adc
imul
out
outsl
mov
aam
stos
sarb
test
aas
sarb
mov
mov
int
std
scas
jns
push
roll
fiaddl
ret
repz
sbb
push
jb
stc
sub
shrb
jnp
add
jns
xlat
das
outsl
xchg
dec
outsl
movsl
popa
out
leave
ljmp
cld
push
push
push
inc
ret
lea
arpl
fisubs
adcl
fdivs
push
adc
or
dec
xchg
push
imul
aaa
mov
jecxz
lods
imul
pop
add
bnd
adcl
out
lret
and
ja,pn
in
xor
inc
mov
adc
inc
sbbb
mov
pop
lea
repnz
pop
lret
pop
outsl
filds
mov
sbb
adc
add
push
adc
adc
jp
ss
push
adc
add
inc
inc
push
jge
xchg
test
or
pop
push
shll
pop
sub
inc
fwait
pop
mov
xchg
adc
fsubrs
adc
scas
imul
insb
lock
sti
mov
mov
ret
dec
mov
rcl
push
jbe
pop
stos
push
pusha
add
outsl
mov
mov
in
sarl
pop
mov
pop
test
push
in
aas
add
adc
cmp
outsb
fisubrs
add
cmpsl
mov
lret
mov
dec
out
into
popf
call
nop
sbb
inc
test
dec
mov
int
xchg
mov
xor
cmp
pop
fisubrs
sub
mul
cmpsl
adc
dec
movsl
lahf
je
movsbl
inc
mov
cli
test
shlb
jno
ret
rclb
pop
insb
cmp
cmpsl
cmp
adc
decb
dec
or
hlt
ficoml
ss
inc
push
jg
sbb
mov
mov
inc
data16
fldl
and
or
test
jns
or
sub
xchg
mov
dec
push
push
and
sbb
jmp
in
xor
mov
sub
addr16
sub
inc
stos
in
psllq
shl
or
popf
loopne
adc
and
stc
xchg
out
xlat
inc
and
or
loopne
les
dec
in
and
pop
or
les
imul
ret
dec
dec
into
mov
cmp
dec
insl
xor
iret
mov
add
dec
mov
stos
push
mov
sbb
insl
inc
pop
cmpsl
sti
rorb
mov
inc
call
mov
mov
in
hlt
jno
repz
fidivs
mov
sbb
dec
fwait
addr16
xlat
push
pop
mov
jns
fcompl
scas
shrb
repnz
dec
pusha
rcll
lds
jbe
adc
loopne
xchg
jno
out
sub
lret
repz
cmp
dec
sub
repnz
jno
push
hlt
aas
pop
jnp
jb
fwait
add
clc
jmp
push
pop
inc
dec
repz
add
jno
test
push
inc
iret
or
mov
and
int
inc
movsb
cltd
cs
ror
sub
inc
rolw
popf
mov
mov
xchg
sbb
inc
int3
fsubrl
or
int3
rol
clc
fbstp
cmc
and
loopne
xchg
and
sub
sbb
call
pop
mov
loope
loopne
fstpl
xor
out
outsb
mov
pusha
lahf
mov
jl
rcr
fstl
pop
cld
hlt
rolb
push
push
lea
dec
rcr
push
jg
inc
insl
and
cmpsb
lret
add
and
mov
mov
mulb
fnstcw
cmc
jbe
ja
adc
movsl
jb
xor
ficoms
mov
out
inc
insb
adc
popf
roll
test
push
ficompl
faddl
cmpsl
fwait
pop
jge
mov
dec
fimuls
xor
pop
xchg
in
add
mov
and
xchg
xor
mov
aad
rcrb
pushf
or
ficomps
mov
mov
sub
inc
aaa
xor
mov
xor
or
adc
cmp
mov
loope
fdivr
fwait
outsb
aam
sub
sahf
sbb
dec
rorl
adc
jp
movsb
sub
clc
sub
mov
xchg
xchg
pushl
dec
pop
sahf
imul
movsb
in
enter
insl
push
in
jmp
das
cltd
shlb
and
add
dec
cld
push
mov
jnp
add
fdivrs
lock
inc
gs
lret
ljmp
addb
fwait
mov
fwait
xchg
push
rorb
mov
mov
stos
pusha
lret
xor
daa
sub
scas
pop
mov
or
add
sbb
xchg
sub
cmpb
sbb
test
cmp
aas
in
fildll
mov
repnz
add
xchg
dec
dec
mov
aas
fisttpl
in
adc
inc
xor
pop
and
es
std
cs
scas
std
sbb
or
push
pop
xchg
add
mov
jb
push
mov
fdivrs
out
push
nop
out
out
mov
cmc
xor
loopne
mov
mov
dec
pop
loopne
and
xchg
mov
add
jg
lret
icebp
dec
mov
cltd
sbb
stos
dec
pop
or
pop
adc
jecxz
enter
adc
rolb
dec
inc
cmp
inc
in
and
mov
add
dec
arpl
lea
mov
jb
sbb
lret
call
jge,pn
mov
jecxz
adc
jns
add
dec
sub
ja
or
and
push
or
adc
fs
lahf
jbe
xchg
test
inc
pop
sub
fsubr
and
dec
xor
xchg
test
xor
cmpsb
jp
mov
imul
or
fcmovb
cwtl
mov
and
loop
push
aas
push
push
and
out
mov
adc
nop
adc
outsl
xchg
sub
stos
mov
mov
xor
and
mov
pop
nop
inc
jo
iret
add
add
mov
fsubrs
mov
add
lods
jbe
sahf
cwtl
test
add
test
ret
xor
pop
out
pop
mov
imul
enter
xor
sub
mov
jns
inc
aas
mov
push
dec
loope
out
mov
cwtl
fsubrl
cmp
mov
mov
loop
sub
pop
gs
ret
fcompl
je
loop
sarb
add
xor
xor
sub
or
mov
cli
aad
adc
test
testb
xchg
lcall
push
mov
push
out
cmp
mov
sbb
lods
dec
mov
dec
push
xor
dec
aad
std
outsb
mov
push
xchg
cmp
inc
and
lods
pushf
cli
out
add
mov
add
test
sub
push
adcb
xor
lahf
int3
mov
sbb
loope
cmp
lahf
in
cmp
adc
dec
sbb
js
push
mov
stos
dec
lret
jle
push
mov
adc
inc
bound
cmc
shlb
mov
sbb
aaa
hlt
add
clc
out
shrb
add
cmpsb
sub
ffreep
push
lods
dec
or
insl
test
and
enter
mov
fwait
adc
mov
push
add
or
imul
xor
inc
rcll
push
push
aam
jne
mov
mov
jb
notl
jle
pop
test
pop
outsl
addr16
mov
adcb
xchg
cmp
lret
mov
decb
insl
adc
shl
lea
lods
cmp
movsl
cmp
or
insl
pushf
aam
mov
shlb
out
mov
push
cld
ljmp
pop
and
lds
mov
imul
out
mov
jae
js
rcll
movsl
jae
lods
or
mov
sbb
outsl
enter
sti
test
lds
rcll
lcall
les
in
test
lret
sub
push
xor
test
push
jmp
sub
add
jmp
push
mov
mov
jnp
in
fstp
inc
roll
test
lahf
lods
movb
jmp
xor
lods
loop
pop
lahf
les
add
arpl
stos
and
jb
add
and
mov
call
enter
xor
mov
pop
sub
lret
mov
jne
fwait
mov
aad
fcmovnb
inc
and
lret
inc
push
cmp
dec
mov
push
dec
xchg
and
mov
js
jns
push
pop
pusha
xor
call
jmp
mov
push
adc
mov
fs
adcl
cmp
mov
sub
sti
mov
les
mov
mov
lahf
test
ret
fistpl
in
inc
adc
and
sbb
or
loopne
idivb
add
lock
lods
mov
push
jecxz
fcomps
rorb
jp
jnp
mov
sti
mov
jp
push
xor
ds
shrl
sub
add
dec
push
imul
xchg
pop
lods
mov
or
cld
fwait
ret
lret
add
push
adc
xor
aam
ret
sahf
leave
sarl
fimuls
testb
mov
cmp
xor
movb
repz
cmp
cmp
sub
xor
add
adc
adc
pcmpgtw
pushf
sbb
mov
nop
lods
mov
dec
dec
lods
cs
push
push
aam
decl
jns
and
push
xchg
jnp
pusha
insl
mov
adc
fwait
jmp
inc
addl
sub
out
mov
xor
and
fstpl
in
js
rolb
orl
sahf
lds
jo
cmpsb
mov
jg
push
ljmp
movsb
fwait
nop
inc
adc
fwait
stos
push
call
mov
cs
ja
mov
pop
push
jmp
and
mov
mov
loop
testb
jb
push
shll
repz
or
cs
cmp
cmp
jne
mov
test
jno
pop
jno
pop
lods
xchg
daa
out
mulb
xor
inc
hlt
imul
mov
push
pop
cmp
jae
xchg
dec
inc
dec
cmp
xchg
and
les
mov
daa
push
ss
in
and
mov
xorb
loope
ret
rcll
and
fmull
clc
roll
mov
cmp
pop
jmp
xor
adc
sbb
pusha
jp
inc
xchg
pop
nop
and
mov
lret
outsl
jg
jo
sti
jae
inc
dec
dec
xchg
xchg
push
popa
xchg
dec
pop
insb
jge
xorl
in
fisubrs
dec
outsb
nop
pop
imul
insl
pop
jmp
cli
inc
push
push
aam
mov
push
pop
xchg
pop
cmpsb
or
les
push
ret
or
cltd
sbb
inc
mov
movsl
add
jmp
xchg
mov
pop
inc
mov
rorl
cmp
jb
leave
add
ljmp
outsl
fsubp
add
clc
out
xor
push
ljmp
call
inc
dec
rcll
and
incl
push
push
inc
mov
and
sub
mov
pushf
fsubrs
fnstcw
std
xchg
and
adc
into
xchg
bound
sbb
mov
mov
aam
scas
std
xchg
jmp
jo
lahf
mov
int
push
popl
outsl
inc
orl
xlat
sub
js
std
jmp
pop
sbb
mov
pop
mov
fldcw
jg
cmp
ljmp
icebp
mov
fidivl
aad
cmc
clc
aad
sub
out
imul
pop
pop
dec
add
cmp
mov
bound
scas
faddl
out
lret
push
loope
loope
lods
jmp
mov
xor
lahf
lods
xor
cmc
mov
jnp
fcoms
lods
push
xor
out
imul
or
add
or
bound
int3
std
mov
inc
jle
cwtl
nop
jne
sbb
mov
xor
test
fnstenv
pop
xchg
loopne
dec
shlb
add
push
stc
pop
mov
cmpsb
fimuls
clc
dec
sbb
add
ljmp
xchg
add
mov
push
push
mov
adc
enter
mov
push
clc
jmp
mov
enter
stos
insb
mov
in
out
imul
int3
cmp
jbe
and
push
pop
pusha
jmp
fadds
ds
mov
pop
mov
leave
shrl
jmp
sbb
mov
insb
pusha
and
test
repz
xchg
dec
sbb
adc
xchg
mov
dec
fwait
xchg
jge
insl
roll
cmpsb
jmp
mov
ret
jecxz
fabs
cli
in
mov
in
push
or
pop
stc
mov
add
mov
mov
gs
and
out
mov
jns
cmpsl
sbb
push
jb
call
ss
add
fists
xor
jmp
adc
jns
mov
pop
repz
push
push
cs
int3
pop
enter
into
loope
loop
jno
fsubrs
in
leave
or
cli
pushf
pop
push
movsl
push
inc
cmpsb
dec
ljmp
fwait
pop
xor
sbb
xchg
leave
movsl
scas
insl
mov
andb
imul
in
outsb
fwait
mov
aad
push
cwtl
xor
xchg
xchg
cs
push
scas
clc
in
cmp
shll
pop
or
in
out
lods
mov
je
movsb
dec
cmc
je
push
out
in
mov
inc
int3
out
xchg
inc
jg
movsb
fs
lock
cmp
divl
inc
out
into
fwait
xor
ss
arpl
subl
aas
loop
mov
insl
inc
adc
gs
imul
pop
dec
lcall
mov
mov
mov
dec
mov
test
fmulp
or
inc
pop
mov
mov
lret
lret
test
or
mov
sub
pop
and
call
sbb
ja
pop
shll
test
push
sbb
rcrl
inc
stos
mov
lcall
lods
dec
jp
fdiv
mov
mov
loope
inc
fildll
push
mov
and
sub
mov
shl
cmp
adc
jns
lahf
mov
es
lret
arpl
decb
lcall
push
jnp
scas
pop
in
aaa
or
pusha
stos
ret
push
pop
cli
repnz
xchg
dec
adc
xchg
cld
int3
aaa
jmp
in
dec
push
push
or
push
push
outsl
call
cmpsl
aas
or
push
fistps
fildl
daa
int
sub
addr16
sbb
cltd
mov
mov
enter
sbb
jbe
test
cmp
dec
test
int
or
mov
mov
sbb
fbstp
mov
shrl
fldenv
push
lea
rorl
pop
sahf
addr16
dec
rorl
inc
sub
clc
and
test
mov
outsl
cs
sub
sbb
sbb
dec
mov
dec
push
adc
add
xor
mov
xor
mov
jecxz
ror
push
mov
in
mov
aam
int3
mov
pop
sbb
daa
push
add
outsl
js
jge
movsl
ss
cli
adc
cs
push
ret
bnd
scas
jns
int3
push
pop
and
mov
inc
lock
cwtl
mov
and
repz
jmp
rorl
aaa
repnz
jb
lods
pop
cmp
inc
or
and
lret
xor
in
sub
in
adcl
jge
int3
test
mov
jb
stos
mov
sub
loop
sbb
mov
jo
add
mov
scas
testb
aas
mov
out
scas
sub
stc
push
lea
sbb
mov
pop
addl
sbb
cs
push
incl
stos
mov
leave
adc
insl
or
imul
or
lock
adc
std
sbb
push
adc
int3
mul
mov
mov
mov
outsb
sub
xor
cmpsl
xchg
dec
xchg
rolb
mov
pop
mov
cmp
cmp
fiadds
shl
inc
scas
stos
mov
add
pop
roll
jge
loopne
jge
xlat
pusha
or
icebp
out
loope
cs
or
pop
xchg
and
and
xchg
push
push
push
jg
mov
dec
pop
fisttpl
das
or
mov
dec
cmc
and
out
std
add
add
xchg
shrl
outsl
xchg
in
lods
fidivrl
lcall
out
sbb
dec
addr16
repz
or
in
cmp
xorl
jle
roll
sub
push
popf
add
out
aam
and
or
div
insb
ret
pop
add
inc
repnz
andl
ret
xor
xor
decl
rep
xor
sub
leave
stc
pop
inc
mov
data16
jae
push
jnp
lret
jb
cli
arpl
add
movsl
add
leave
les
jp
pop
popa
mov
stos
xchg
cmp
push
pop
es
insb
push
js
mov
sub
mov
cmp
incl
sbbb
fldl
add
xor
je
push
fwait
and
adc
fisttps
or
data16
mov
hlt
adc
test
push
xor
test
or
jle
frstor
int
mov
lods
dec
adc
test
pop
in
lahf
adc
pop
cmpsb
inc
pop
cltd
cmp
loopne
mov
or
loopne
dec
adc
and
jo
mov
enter
sti
loope
push
scas
fxch
pop
shll
jl
pop
push
js
pop
push
lret
dec
xor
mov
dec
xchg
jnp
hlt
sbb
adc
mov
lock
and
scas
sbb
add
push
xor
dec
lahf
ss
fsubrs
outsb
jle
fcmovu
xchg
divl
cmp
icebp
fimull
cvttps2pi
stc
mov
sub
push
cmpsl
out
sbb
int
pop
fimull
ficompl
jb
pop
pop
mov
sar
ss
out
shlb
xchg
inc
stos
or
mov
xor
test
into
and
ljmp
sub
xchg
sbb
mov
enter
adc
jg
iret
sbb
fnstsw
inc
add
scas
add
cmp
insb
lds
adc
scas
push
dec
xor
mov
or
pop
sub
repz
adc
shr
cmpsb
lea
popf
push
xlat
and
cmp
jmp
repz
mov
jecxz
dec
loope
push
inc
bound
jecxz
cmc
pop
movsb
xlat
xor
jmp
push
push
mov
roll
dec
xchg
arpl
jmp
adc
scas
stc
cmpsl
enter
movsb
xorb
decb
mov
mov
bound
and
xchg
adc
lret
push
dec
jl
imul
mov
cmp
and
inc
pop
adc
add
add
adc
test
aad
sbbl
dec
sbbl
dec
bswap
ret
push
mov
push
mov
inc
mov
pop
pushf
repnz
xchg
daa
jno
push
sar
jecxz
in
inc
or
pushf
mov
out
and
fimuls
cs
aaa
leave
pushf
pop
push
pop
pop
adcb
rorl
push
stos
or
sbb
cli
lahf
or
add
jg
mov
inc
sbb
xchg
stos
pop
pop
fsubrp
and
rcrb
push
divb
jge
jge
xlat
jnp
outsb
push
pop
push
ret
mov
test
pop
push
dec
hlt
mov
imul
sbb
inc
test
das
ficompl
adc
stos
xchg
xor
sub
andb
sbb
fs
stos
sub
or
dec
lods
dec
pop
js
fs
or
push
test
shlb
push
int3
fildl
fxch
incb
sbb
fcmovu
ljmp
je
adc
cmp
cwtl
test
mov
inc
and
xor
clc
mov
cmp
or
movsb
jge
icebp
pop
mov
inc
jmp
cld
lea
push
add
mov
xchg
nop
adc
sub
das
stos
ds
xor
mov
out
xlat
aad
inc
dec
pushf
les
mov
cmp
dec
xor
xchg
inc
leave
add
fisttps
pusha
int
in
cmpsl
mov
lahf
push
loop
xor
js
sbb
jbe
gs
hlt
add
push
daa
adc
sbb
adcl
jnp
jno
xchg
xchg
insl
mov
sarl
jb
inc
xchg
and
mov
subb
lret
rcr
stos
pop
mov
cmp
orl
lret
aas
inc
or
dec
pop
enter
movsb
xor
rcrl
mov
imul
cmp
mov
sbb
sbb
mov
pop
ret
in
cmpsl
mov
pushf
rorb
xor
jmp
add
sarb
push
notl
sub
mov
nop
inc
mov
in
pop
push
call
dec
jb
sbb
ret
lock
out
mov
hlt
rcll
add
push
jno
mov
pop
insb
xor
and
adc
push
stos
fs
rcll
and
adc
sbb
mov
fsubs
mov
in
andb
pop
mov
in
xchg
repnz
mov
sub
decl
test
add
js
into
les
xchg
jne
pop
jnp
cmp
inc
or
sbb
es
jnp
push
add
pop
out
enter
inc
cmp
mov
xor
aad
sbb
dec
arpl
and
add
pop
dec
add
fldl
push
cmp
lret
dec
jb
outsb
mov
xor
sub
inc
and
movsb
pop
negb
les
inc
cwtl
pusha
ficomps
ret
jne
js
sub
stos
fs
cmp
and
test
push
push
addr16
fdivrs
and
sub
jmp
shrb
or
mov
ret
xchg
cmp
cmpsb
repz
jl
imul
jmp
dec
sub
insl
sti
or
or
lds
unpckhps
jmp
push
dec
add
jnp
inc
sub
mov
jno
nop
jp
mov
movsb
mov
mov
inc
ljmp
adc
les
or
ret
or
mov
cmc
cmp
scas
xor
xchg
icebp
inc
sub
out
jecxz
popl
dec
adcb
push
lds
jge
push
push
xor
dec
daa
dec
mov
push
cwtl
inc
adc
xor
mov
mov
loop
xchg
ficomps
inc
inc
jecxz
lods
insb
idivb
add
in
cmp
jmp
dec
lods
push
and
call
ficomps
pop
outsb
gs
mov
ss
fdivrl
loope
xlat
sbb
jo
jno
imul
sbb
add
stc
jnp
adc
inc
jb
repz
stos
pop
inc
add
test
xor
out
xchg
push
xadd
rclb
movsb
faddl
cmc
rorb
pcmpeqw
jbe
sbb
in
orl
pop
and
dec
scas
popf
mov
jno
cli
jbe
loop
std
fnsave
mov
ss
sbb
ljmp
cmpsl
in
enter
cmp
jecxz
lret
out
loopne
lods
xor
mov
dec
xlat
test
jge
lods
in
pop
jecxz
loope
inc
fsubrl
adc
adc
mov
dec
insb
jg
inc
ffree
adc
in
ret
add
push
aaa
xor
and
adc
lock
clc
sahf
cwtl
loopne
jge
popf
push
jno
xor
pop
fdivrp
sti
repz
jl
pushf
pop
add
cmp
and
shll
negl
out
cmp
inc
les
in
jo
cwtl
jecxz
rcrb
pop
sbb
push
ret
pop
fstl
sub
inc
adc
mov
addr16
shlb
adc
pop
pop
cltd
xacquire
fwait
and
sbb
add
inc
push
in
ret
inc
sub
push
or
add
fs
in
or
jmp
icebp
aas
into
clc
lret
fnstsw
stos
sbb
jl
jo
cmpsl
sbbl
hlt
cli
add
adc
pop
les
or
sub
add
cmp
mov
fsubs
cmpsl
mov
push
pop
mov
fsts
leave
sub
xchg
popa
into
in
insl
push
xor
xchg
sahf
mov
int3
gs
sbb
fidivl
out
xchg
jg
push
or
sbb
outsb
mov
push
and
mov
aas
dec
int3
jnp
sbb
in
popf
decb
lcall
push
or
insl
adc
add
mov
add
mov
xor
sbb
pop
mov
nop
inc
unpcklps
int3
or
mov
dec
mov
loop
bound
mov
pop
in
out
ss
cltd
loopne
sub
mov
icebp
clc
push
push
jbe
stos
adc
xchg
inc
cmp
push
mov
stc
jg
pop
adc
imull
ds
into
ret
jnp
mov
movsl
test
fiaddl
in
sbb
sub
int3
addr16
cwtl
dec
mov
stos
pop
sarb
popa
jo
out
addr16
lret
push
push
movsl
arpl
aad
jne
pushf
pop
dec
cwtl
jl
repnz
dec
fwait
jnp
das
fwait
and
push
adc
sub
outsl
aad
cmpb
inc
andl
sub
repz
mov
jecxz
mov
icebp
mov
push
scas
xorl
in
out
test
mov
mov
mov
dec
clc
push
rorb
lcall
mov
sub
cwtl
lock
stc
sbb
mov
popa
push
stos
enter
mov
stc
testb
and
mov
mov
cmpsb
and
adc
mov
int3
or
jmp
mov
cmp
add
cmp
stos
xchg
xchg
pushl
xor
in
ja
inc
shl
fstpl
out
pop
pop
faddl
sti
or
out
stos
push
cmp
mov
jle
xchg
mov
push
inc
inc
or
stos
shl
jo
cltd
pop
fistps
cmp
je,pn
clc
push
int
fldenv
or
jne
and
push
ljmp
stos
jo
mov
arpl
es
sbb
dec
nop
xchg
int3
mov
testl
gs
add
inc
jg
lds
inc
adc
jmp
inc
inc
sub
and
adc
xor
xlat
pop
testb
rep
inc
push
and
lods
rolb
hlt
out
jnp
inc
enter
jbe
rolb
sub
cmp
xor
loopne
fsubrl
test
jns
push
jmp
add
add
gs
int3
dec
xorl
dec
mov
push
daa
push
push
mov
pop
sti
test
mov
subl
jl
sub
lds
jl
popf
cmp
mov
frstor
dec
clc
lock
mov
push
mov
repz
jns
pop
xor
lcall
cmpsl
mov
dec
pop
jg
adcl
mov
mov
jp
cmpsb
mov
lods
mov
mov
dec
sbb
adc
int3
cmp
sbb
out
push
dec
push
add
sbb
jno
push
adc
addr16
dec
or
hlt
filds
test
inc
push
orb
movsb
enter
lcall
cmp
cmpsl
cmp
mov
movl
ds
lret
dec
jo
adcl
subl
jl
aaa
cli
adcl
sbb
inc
test
mov
scas
mov
dec
lret
xchg
inc
mov
xchg
fwait
hlt
mov
push
rcll
sbb
mov
mov
cli
xor
movsl
lods
shll
fcmovnb
mov
ret
lahf
mov
cld
pop
frstor
and
aad
xchg
out
aaa
hlt
inc
test
sbb
ja
jo
int3
mov
or
sbb
gs
xchg
imul
sbb
dec
lea
sub
out
fsub
mov
inc
push
stos
mov
mov
sbb
sub
loope
cmc
pop
or
out
sub
push
mov
mov
subb
pop
repz
data16
andb
rorb
cltd
cmp
es
stc
subb
cmpsl
push
hlt
fsubrs
xchg
outsl
bound
icebp
rcll
mov
pop
pushl
jl
mov
popa
xlat
lret
aaa
push
pop
test
xchg
mov
or
jns
aaa
push
ss
test
jo
pop
roll
sti
lret
cmp
mov
or
pop
or
repz
sar
sub
pop
dec
mov
lods
jns
ss
xor
mov
in
xor
ds
test
outsb
pop
icebp
sub
enter
fnsave
jp
xchg
cltd
pop
daa
pop
lret
or
push
shrl
shrb
fiaddl
in
dec
cmp
cmc
pop
sti
push
jl
sbb
lods
rcr
jbe
ret
sub
test
or
fistl
adc
clc
into
mov
es
mov
cmp
adc
sub
inc
cs
shlb
or
sar
out
jge
aam
ret
pop
lds
into
cwtl
pushf
cs
addb
int3
cmp
popa
imul
addr16
in
fwait
stos
call
pop
loop
push
push
insl
dec
adc
jno
jbe
rclb
jbe
fstpt
sub
mov
scas
sub
loop
jne
lods
iret
sub
push
cmpsb
mov
cmp
into
pop
pop
inc
lea
xlat
jae
ds
ror
mov
jbe
jo
jp
leave
pushf
loop
mov
jbe
jl
and
inc
pop
mov
mov
mov
dec
mov
pop
inc
stc
rcl
pop
test
iret
imull
pop
loop,pt
ror
repnz
or
inc
xor
fdivl
fnsave
into
xchg
dec
push
insl
or
cmp
xchg
or
mov
jne
xchg
loope
daa
aad
and
aad
sub
cmp
cld
lock
cmc
sub
mov
fwait
dec
and
add
mov
andb
fwait
jle
sub
mov
pop
dec
jnp
aaa
pop
dec
rcll
mov
xor
cmp
popa
pop
jp
lcall
sahf
push
mov
loop
dec
pop
sbb
ja
sub
cmp
push
add
and
pop
lea
push
push
movsb
adc
xor
dec
call
jl
je
scas
lods
stc
mov
stos
mov
mov
add
mov
cwtl
or
pop
out
movb
xor
test
mov
mov
cld
sub
jmp
aam
mov
js
mov
push
and
leave
ds
add
push
fstpt
cmp
add
cmpsb
imul
loope
aaa
and
aas
movsl
pop
cld
cwtl
jmp
pusha
pop
jo
cmp
cmp
addb
out
sub
mov
repnz
stos
mov
rolb
jmp
jo
jno
or
sub
out
mov
jae,pn
push
jmp
stc
xchg
gs
add
cmp
je
ja
repnz
mov
outsb
fnstenv
mov
push
orl
fldt
movsl
jb
or
insb
jns
add
and
pop
imulb
hlt
lock
pop
or
iret
cmp
ffreep
aam
ss
pushf
push
enter
ljmp
jge
pop
mov
mov
pop
loope
mov
outsb
xlat
and
ss
add
mov
mov
icebp
mov
add
jle
inc
adc
fldt
pop
scas
int3
push
push
dec
stos
test
adc
cmpsl
sub
and
sub
xlat
enter
movsb
jg
pop
test
adc
into
outsb
dec
movsl
lock
stos
cmpsl
nop
clc
cmpsb
ja
out
mov
mov
and
sahf
lock
xlat
mov
scas
fiaddl
add
pop
rorb
push
adc
jmp
fsubs
mov
push
xor
pop
inc
pusha
int
repz
gs
subb
leave
pop
popw
dec
inc
fidivrl
mov
imul
fidivrl
mov
les
or
mov
push
enter
inc
push
cmp
roll
cmpsl
jl
aas
mov
andl
scas
fiaddl
movsl
pop
add
sub
inc
ficomps
xchg
adc
and
mov
les
fdivr
incl
dec
push
xchg
or
mov
aad
dec
lods
inc
inc
cli
test
push
jb
andb
aas
sub
das
jbe
and
push
dec
jl
xor
mov
xor
clc
adc
ret
pop
outsb
add
shrb
in
jmp
arpl
int
adc
filds
xor
fidivrl
loopne
cmpb
mov
or
adc
xor
xlat
test
std
sbb
pop
leave
dec
int
fisttpll
xchg
mov
mov
and
xor
jmp
xor
add
mov
roll
xchg
sti
cmpsb
and
pop
xor
or
and
cmpsb
mov
add
mov
push
sub
inc
mov
or
nop
stc
and
fs
sti
xor
jle
je
in
sub
mov
imul
out
rcrb
jo
and
ljmp
pop
jp
nop
jns
imul
pop
fyl2xp1
xor
dec
repz
daa
insb
ret
das
test
testb
jecxz
ret
and
cmp
std
or
push
rolb
jge
loop
cmpsl
or
popf
cwtl
mov
inc
aam
and
jae
sub
push
dec
mov
nop
mov
add
or
enter
test
jae
mov
out
dec
sahf
dec
fwait
scas
sub
fld
mov
cmp
subb
sbb
jb
sbb
mov
add
inc
in
mov
mov
outsl
jns
test
int3
fldcw
pop
and
mov
adc
jle
add
pop
pop
imul
aas
lock
inc
mov
mov
xlat
sbb
mov
inc
lcall
bound
iret
pop
loopne
xchg
mov
in
popf
mov
cmpsl
out
xor
sahf
fsubrl
cwtl
stos
fucomp
andb
add
pop
xchg
push
insb
shll
outsb
lret
aam
fucomip
adc
shrb
sub
sbb
xor
cmp
sbb
sbb
or
dec
inc
aad
xchg
sub
mov
jge
pop
push
loope
fwait
lret
hlt
test
push
jl
adc
daa
and
jmp
sbb
pop
jns
sbb
add
cmpsl
xor
stc
mov
adc
scas
ljmp
mov
incl
mov
jmp
mov
call
adc
push
cmp
pop
cmp
cwtl
subl
pop
mov
adc
mov
in
jp
xor
fisubl
shlb
or
mov
ds
dec
movsl
xor
jne
hlt
outsb
inc
jbe
sbb
bound
push
mov
jbe
jne
test
inc
in
mov
xor
lahf
cld
ljmp
les
ret
mov
xchg
jne
push
jmp
cmp
imul
fs
addr16
mov
in
inc
pop
sbb
push
std
test
or
inc
ljmp
ja
dec
sahf
xor
jge
stc
xchg
push
sahf
cmp
mov
sub
stos
out
repnz
xor
outsb
sbb
into
data16
mov
inc
aad
fs
lods
es
mov
nop
clc
cmpsl
shll
rcrl
xchg
add
stc
mov
dec
imul
in
cmp
cmp
jle
push
test
orb
jg
pop
dec
xchg
loop
add
mov
fsub
add
and
aas
or
mov
andl
les
cmpsb
test
test
mov
dec
pop
pop
sahf
dec
lret
ds
fadd
mov
lods
push
lods
cmc
nop
jl
mov
dec
xchg
mov
and
or
stos
xchg
ret
cltd
inc
sub
loop
mov
movsb
jbe
sbb
mov
movsl
lcall
cmp
dec
pop
repnz
jno
iret
inc
js
adc
test
stos
lds
add
movsb
shrl
std
lds
ljmp
mov
lea
imul
out
std
xor
popa
jge
xor
popa
daa
push
adc
adc
and
mov
arpl
add
mov
adc
sahf
sub
and
mulb
in
pop
fs
sahf
mov
ja
in
push
sub
cmc
jle
sub
xor
cmp
scas
rclb
flds
and
cmp
rclb
addl
mov
test
outsl
xor
test
test
pop
sti
mov
lahf
mov
add
sub
les
mov
loope
sub
repz
pop
loop
or
cltd
and
hlt
jo
push
pop
push
inc
fisubrs
sti
movb
mov
movsl
adc
into
cmp
ds
shlb
es
shrb
cmp
mov
xchg
pop
cmp
inc
icebp
push
je
in
test
sbb
lods
pop
cmpsb
test
lret
xor
cmpsb
imul
pop
jbe
and
stc
sarb
cmp
out
in
mov
fisubl
mov
aas
rcr
add
scas
add
out
or
nop
mov
pop
pop
pop
dec
mov
mov
cmp
push
and
push
mov
cmp
stos
mov
insb
or
hlt
mov
fisttpl
push
sarl
es
movsl
add
bound
ds
pop
aaa
hlt
sub
jmp
roll
push
in
andnps
das
aam
in
es
cmp
cmpsb
mov
sub
or
shll
lret
test
xchg
aad
or
xchg
cmp
loop
test
test
adcb
add
lret
in
frstor
roll
aaa
gs
icebp
daa
mov
and
insl
outsb
sub
jl
pop
push
sub
shrl
mov
sarl
xor
mov
movsl
fisubrs
push
cmovbe
cwtl
into
lea
jne
test
xor
fildll
testl
lret
push
jae
in
call
fildll
adc
add
mov
mov
lret
mov
pop
fs
mov
push
sub
adc
das
out
xor
scas
aaa
inc
mov
movsl
scas
daa
movsl
add
sbb
cld
sbb
push
cs
mov
outsb
sbb
xchg
inc
adc
orl
mov
arpl
inc
imul
xor
or
mov
mov
fs
dec
inc
aas
add
pop
sub
fucomp
repz
insl
mov
jge
pop
aas
mov
cs
mov
push
cmp
fadd
dec
in
test
andl
push
in
adc
filds
out
leave
outsl
mov
mov
dec
ss
xchg
cmp
xor
mov
rol
movsb
add
movsb
push
or
stos
push
adc
outsb
push
negb
jne
ss
pop
insb
xchg
mov
jne
cwtl
adc
sub
pusha
pop
ja
inc
sbb
movsl
stos
push
xchg
icebp
jne
out
fistps
daa
sub
adc
rcrl
in
fdivrs
push
cmp
movsl
ret
push
lcall
or
and
es
or
stc
ljmp
xchg
jmp
mov
sub
lds
dec
lods
jge
clc
movsb
dec
lret
pop
push
fs
sbb
ja
int
mov
cld
lret
dec
xchg
mov
sbb
xchg
inc
xor
sub
cwtl
je
loopne
fisubl
add
subb
fisubrs
xchg
mov
jmp
sahf
mov
xor
test
pop
jecxz
icebp
out
sbb
xchg
mov
cmp
pop
xchg
xchg
stc
jb
sahf
add
inc
adc
mov
mov
push
arpl
aad
and
mov
ret
mov
xor
scas
inc
jecxz
inc
pop
aas
dec
icebp
mov
xchg
sbb
aam
xchg
cld
pop
popa
shlb
or
xchg
les
add
mov
sbb
xor
pusha
imull
lret
mov
scas
imul
push
sbb
fstl
jecxz
dec
mov
punpcklbw
mov
inc
push
shll
mov
push
lods
jo
aas
movsb
imul
jp
pop
jl
loopne
negl
push
add
fimull
pop
mov
fcoml
shl
int
and
xchg
mov
dec
sbb
lea
mov
jo
or
out
dec
icebp
js
dec
mov
cmp
loope
lea
xchg
stos
push
repnz
mov
ss
mov
jp
mov
test
ds
sub
cmp
pushl
cmp
mov
jo
sbb
int
adc
sahf
jge
adc
mov
add
loop
das
push
je
mov
jnp
mov
mov
and
dec
mov
nop
addr16
lcall
and
hlt
cmc
mov
jl
push
cmp
bound
sbb
push
xor
lea
sbb
push
subl
and
ja
in
and
mov
mov
adc
cmp
sub
hlt
jnp
int
fldt
psubb
fcomip
sub
dec
inc
sarb
sub
mov
test
pop
pop
inc
adc
xchg
ja
cltd
jo
cld
mov
pop
and
jecxz
test
mov
add
inc
loope
aam
dec
fisttps
in
ss
out
jmp
enter
insb
fucomp
sub
jge
mov
push
stos
sub
or
add
cmp
leave
fucomp
jbe
lods
xlat
pop
aam
out
iret
inc
scas
jne
and
ror
add
sbb
xor
loopne
rolb
cmp
test
aas
xor
push
xorl
test
cmp
aad
imul
adc
testl
jo
in
test
and
cs
cmpsb
cmc
ficompl
inc
lret
sub
adc
nop
pop
xchg
or
adc
rcrb
xor
pop
ja
mov
xor
outsl
pop
jae
negb
sub
test
pop
cmp
sbb
test
push
dec
dec
push
mov
adc
xor
cs
insb
sub
mov
mov
imull
xor
es
mov
mov
mov
into
ret
xor
insb
pop
pop
addl
xor
in
int
loope
pushf
mov
popa
pop
popa
fisubl
push
sbb
sub
jmp
sub
cmp
or
loopne
out
jo
lret
jo
insb
cwtl
ja
mov
shrl
dec
jge
adc
sbb
into
lea
adc
adc
enter
mov
fwait
adcb
out
imul
xor
xchg
mov
sti
daa
punpckldq
ljmp
daa
movsb
divl
cltd
test
xchg
jae
lea
inc
add
cli
daa
cltd
pop
jle
out
stos
push
roll
mov
xchg
movsl
ret
xchg
decb
cwtl
xchg
mov
je
sbb
popf
pop
imul
int
mov
mov
adc
add
lock
mov
cwtl
idivl
add
imul
jne
push
jp
and
addr16
ja
fcmovb
bound
pop
and
scas
lcall
pop
pop
cmp
sbb
idiv
les
nop
xchg
mov
call
and
je
fs
sbb
popa
xor
jo
mov
mov
xor
jp
xchg
inc
mov
jne
mov
cmp
adc
rcr
mov
sahf
jns
lods
iret
or
inc
ja
cmp
and
aad
mov
xchg
jp
jo
sbb
push
inc
outsl
addr16
hlt
push
mov
cmpsl
pop
push
cmpsb
jl
dec
push
lock
cmp
orl
lds
adc
pop
int3
mov
lret
aaa
popf
bound
sub
movsl
add
faddl
push
orb
dec
negb
xor
lahf
dec
sti
cwtl
push
push
lahf
mov
ror
sbb
shlb
adc
cmpsb
or
mov
fs
dec
add
ljmp
cmpsb
faddl
inc
cmp
cltd
pop
lock
andl
lea
mov
and
in
cli
adc
mov
cs
dec
push
popf
data16
mov
xchg
fcomps
fildll
pusha
push
mov
aam
mov
fxch
mov
sbb
lret
xchg
add
mov
inc
popa
xchg
xchg
enter
scas
or
adc
cmp
xchg
mov
js
sahf
cmp
or
xchg
pushf
cmp
cmp
jle
je
push
push
out
mov
sub
ja
mov
xor
push
sub
add
sub
je
dec
mov
outsb
cwtl
cmpsl
pop
inc
adc
mov
mov
pop
and
adc
sub
and
repnz
push
ret
sti
adc
shll
repz
push
sbb
sbb
jmp
mov
adc
das
xchg
xor
insl
dec
call
js
jp
lcall
cmp
adcl
pop
bound
inc
cld
pop
das
xor
pop
aaa
pop
jle
sarb
jae
push
ds
cmp
dec
pop
cmc
arpl
scas
ljmp
mov
mov
cmc
adc
mov
dec
aam
lcall
pop
dec
sbb
and
or
xlat
cltd
mov
ret
roll
xchg
and
or
jl
pop
cmc
sub
fistpll
xorl
push
sahf
sbb
push
jge
jae
pop
insb
lods
pop
testb
dec
movsl
aas
push
lahf
lea
ss
enter
jns
pop
pop
pop
adc
int3
sbb
add
incl
mov
mov
and
into
jo
les
dec
push
inc
pop
into
scas
mov
mov
data16
mov
cmpb
data16
test
ja
jge
lods
push
mov
add
shl
mov
cmp
mov
dec
or
inc
add
push
or
insb
push
lahf
adc
fldt
jg
std
call
dec
arpl
lods
adc
es
sub
jb
ljmp
insl
inc
adc
pusha
fs
ret
mov
xor
cmp
dec
pushf
and
loope
push
fs
mov
push
mov
sub
xchg
inc
cs
jne
sahf
inc
push
push
sbb
aad
dec
lods
loopne
or
scas
data16
mov
stos
js
mov
sub
cmp
fisubl
cmpl
mov
sub
push
jp
and
or
sub
sub
jle
std
jmp
and
lods
mov
pop
xchg
loop
dec
ds
enter
xor
cwtl
movsl
cli
int
and
outsl
les
lods
filds
mov
adc
scas
popa
daa
in
repz
push
cmp
cmc
std
cmp
dec
leave
call
movsb
and
jl
and
repz
movsl
jl
repz
movsl
ret
pop
andb
xchg
cmpl
pop
lahf
fs
sarl
adc
insl
fnsave
add
push
enter
jmp
sub
loope
mov
dec
xchg
lds
sbb
lret
movsl
icebp
mov
jl
xchg
mov
pop
pop
loop
xor
mov
pop
loope
sbb
aad
sbb
mov
adc
mov
jbe
das
pop
das
dec
sbb
ljmp
cmp
mov
mov
imul
xor
leave
jmp
fsubl
addl
push
dec
aad
xor
pusha
cmp
je
leave
or
stos
xchg
inc
lret
loop
pop
popa
xchg
xchg
and
div
mov
mov
push
mov
addr16
dec
lods
lret
jle
adc
or
sahf
mov
push
aas
fsubl
or
bound
and
push
mov
aas
pop
pop
adc
sbb
mov
xlat
sub
fwait
loope
xlat
jno
jo
dec
int
out
mov
and
ljmp
jo
pop
adc
jge
clc
mov
sub
push
push
scas
push
leave
ja
lds
inc
ds
insb
insb
outsb
mov
cmc
xchg
pop
and
fcomi
stos
lret
int3
int3
les
xor
xor
pop
lods
jecxz
ljmp
jp
popf
and
movl
jbe
movsb
cwtl
sbb
and
push
imul
pop
sub
enter
mov
inc
xchg
mov
in
cmpb
mov
nop
shll
xchg
fnstsw
jo
in
lods
xchg
les
pop
cmp
stc
mov
mov
clc
std
sarb
movsl
cmpl
out
mov
push
inc
mov
push
pop
inc
adc
repnz
mov
call
lds
mov
adc
and
dec
int3
punpckldq
imul
add
cmpsb
jno
lods
mov
and
xlat
sti
test
xor
out
repz
cli
jb
xchg
inc
jno
mov
inc
mov
jno
push
pop
xor
inc
loopne
mov
pop
clc
cmp
scas
jo
cltd
or
cmp
sti
lret
xchg
mov
shll
mov
fcmovnbe
addr16
inc
push
iret
int3
popa
sbb
jo
xor
dec
rcr
dec
push
adcl
pop
xchg
sub
pop
add
ss
dec
inc
dec
xchg
daa
imul
jo
inc
pop
sbb
and
mov
gs
xchg
mov
pop
inc
xchg
cmp
dec
mov
sbb
xchg
jmp
cli
insl
sub
pop
arpl
imul
mov
call
push
loopne
sub
stos
and
push
mov
pop
fistl
fcmove
pop
insl
clc
and
pushf
les
push
mov
sbb
add
sbb
fadds
mov
repz
mov
mov
test
dec
add
xchg
inc
mov
orb
loope
inc
popf
adc
int3
add
stos
cmp
and
shrb
dec
xchg
pop
and
testb
in
scas
shl
test
shll
sub
repz
repnz
dec
dec
aam
mov
ljmp
and
pop
dec
test
push
lcall
js
scas
xchg
mov
xor
push
in
and
xchg
jne
shl
add
cli
mov
xchg
mov
je
orl
pop
mov
push
fs
dec
and
sarl
mov
push
mov
es
in
repz
push
int3
mov
loope
pop
push
fadd
jae
mov
fcoms
mov
inc
inc
jp
shl
inc
fbstp
cwtl
movsb
decb
add
jns
pusha
shll
mov
cmp
icebp
jbe
loop
cmpsl
cmp
pop
adc
pmaxub
inc
inc
mov
int3
xor
lods
in
pusha
xor
mov
lret
adc
dec
mov
hlt
ret
mov
test
jg
cmp
enter
in
inc
fidivrl
mov
push
mov
es
call
sub
inc
add
lea
arpl
xchg
jno
lods
cmp
add
jo
push
xchg
mov
movsl
inc
movsl
cmpb
mov
into
fisubl
sbbl
stos
xchg
inc
ss
fidivrs
pop
fwait
push
gs
arpl
mov
sbb
clc
std
pop
mov
pop
inc
out
sbb
xorb
test
mov
cmp
fldcw
je
cmp
lahf
rcrl
notl
lock
or
in
sbb
rorl
jne
dec
dec
test
js
insb
dec
pop
fdiv
nop
dec
xchg
ret
push
icebp
or
rcrl
in
push
enter
in
xchg
cmp
and
adc
adc
push
add
xchg
xor
ret
dec
add
mov
xchg
rol
test
les
frstor
and
cmp
ljmp
mov
std
andl
sbb
fwait
and
out
jg
sbb
mov
mov
push
movsl
inc
jecxz
pop
mov
call
popa
rorl
fbld
sbb
push
mov
and
and
aam
mov
mov
call
call
sti
mov
cld
das
sbb
scas
sub
enter
movsl
jae
rorb
std
mov
dec
mov
bound
loop
out
xor
icebp
std
xchg
jg
cmp
fcoms
pop
jmp
jnp
scas
outsl
daa
daa
push
jbe
fsubp
cmp
push
cmp
fiadds
dec
jp
std
pop
mov
cmp
pop
pop
sti
cli
pop
sbb
in
xchg
pop
out
arpl
sbb
xchg
push
cmc
and
ss
sub
gs
mov
xor
paddq
hlt
dec
ficompl
in
lret
scas
sub
adc
jg
mov
out
add
lcall
in
inc
pop
cmp
call
cmp
lret
shlb
dec
lcall
pop
lret
and
js
lcall
lahf
stos
fistpll
jne
jns
or
add
scas
mov
inc
hlt
push
aad
cmc
mov
jecxz
in
sub
aad
sub
push
dec
adc
mov
call
push
fisttpll
es
or
idiv
cs
mov
aam
sbb
iret
xchg
pop
or
and
adc
sbb
call
adc
add
adc
sbb
das
pusha
push
mov
inc
mov
fstpl
xor
dec
mov
shlb
or
repz
jnp
pop
fisubrs
int
pop
jmp
adc
daa
arpl
pop
mov
int3
icebp
test
push
pop
outsb
mov
dec
and
cmpsb
sbbl
popa
sub
out
cltd
sti
pop
jns
inc
or
ss
mov
ja
fsub
push
inc
dec
xchg
shlb
xchg
jmp
stc
into
leave
cld
pushf
les
jno
stc
mov
cmc
ss
mov
addl
scas
mov
push
xchg
or
adc
pop
jne
call
adc
out
push
pop
daa
jl
inc
fld
clc
inc
xor
dec
cmp
rcll
repz
dec
adc
lahf
push
lcall
les
subl
mov
lods
loope
es
lret
addl
mov
out
cmp
add
pop
jno
mov
dec
outsl
add
shlb
outsl
addr16
pop
jecxz
push
movsb
fwait
sub
mov
fwait
arpl
jge
add
test
rorb
push
push
das
mov
sbb
filds
pop
mov
add
outsb
ficoms
gs
inc
add
not
imul
idivb
fldl2e
cmpsl
lods
sub
mov
test
daa
jb
cmp
lcall
sti
push
push
mov
test
pusha
mov
dec
leave
cwtl
pop
rcl
out
sbb
jbe
and
or
popl
mov
sbb
sub
enter
outsl
jmp
insl
sbb
and
adc
fnsave
mov
push
and
inc
aas
push
inc
shl
into
in
add
push
push
std
fucomp
xchg
lea
ret
sarl
and
pop
pop
jmp
movl
cmpsl
jp
dec
out
daa
xchg
clc
push
inc
pop
mov
jp
shlb
mov
sbb
push
mov
out
out
inc
test
popf
rcr
inc
mov
adc
insl
adc
fidivs
xor
cmpsb
in
daa
jae
mov
sbb
dec
sbb
jmp
shl
or
dec
lds
loop
stos
loop
mov
and
sarl
xor
inc
faddl
mov
xor
dec
jmp
or
jecxz
cmpsl
fcmovu
push
loopne
out
push
inc
int3
in
sbb
xor
cmp
shrl
dec
dec
adc
mov
popa
or
inc
test
mov
push
adc
sarl
sub
xchg
jno
iret
stos
out
sarb
sbb
rorb
popf
xchg
testl
inc
mov
fcoms
inc
and
pop
rorl
jae
lock
repz
sub
out
sbb
adc
push
imul
pop
add
enter
outsl
rcll
mov
lods
les
loop
add
js
aam
mov
pop
icebp
out
push
int
sbb
push
gs
icebp
stc
xchg
push
sbb
adc
stos
and
cmp
dec
inc
in
js
scas
mov
movsl
rcl
jno
jno
loop
dec
hlt
test
loop
sbb
lret
stos
sub
cmp
sub
movsb
dec
cmc
addl
adc
sub
push
outsl
test
fs
fucomi
das
push
int3
inc
push
and
dec
addr16
xor
ret
dec
in
jo
dec
sub
mov
stos
jo
test
xor
fstl
dec
test
jg
pop
mov
rol
cwtl
ljmp
adc
lods
and
loop
aas
dec
out
int
mov
rcl
pusha
bound
add
mov
jmp
je
or
sub
pushf
aad
decl
jmp
stc
dec
aaa
mov
dec
xor
jmp
fmull
fs
cmp
mov
mov
in
sbb
fsts
cli
and
mov
mov
js
sbb
test
sub
nop
outsb
or
mov
xor
lea
mov
sahf
gs
mov
jne
clc
and
inc
xchg
jo
out
outsb
scas
dec
push
ret
adc
pushf
adc
cmpsl
addl
jne
inc
sub
cmpsb
xchg
sub
mov
push
fucomip
ljmp
push
sbb
pushf
test
push
mov
push
jb
lods
into
mov
mulb
and
xor
hlt
imul
push
inc
sub
rcll
mov
shl
fldenv
cmp
fbstp
mov
mov
dec
std
mov
mov
push
popf
in
inc
aaa
sbbb
push
mov
in
and
loop
fsubl
mov
sti
mov
rolb
push
xor
jp
mov
inc
leave
dec
xor
testl
mov
fldenv
incl
xor
lret
test
or
pop
pop
leave
mov
adc
fcomip
xchg
int3
rcll
cmpl
sub
scas
fstpl
test
outsb
jp
test
mov
push
subb
lgs
pushl
dec
mov
add
mov
test
mov
imul
out
mov
cmp
ljmp
pop
aad
adc
int3
sbb
ja
aaa
outsl
pop
pop
in
dec
cld
cmp
add
cmp
xor
aaa
lea
add
xchg
test
loop
or
das
roll
jmp
pusha
scas
inc
xchg
lds
mov
neg
ds
xchg
in
mov
inc
jecxz
pop
insb
fstpl
mov
daa
mov
iret
pop
cmp
das
sub
jmp
scas
mov
jbe
daa
jns
addl
pop
fwait
es
cld
xchg
push
fcomp
cmp
clc
sub
into
xlat
xchg
jge
hlt
push
mov
push
aaa
fnstsw
js
ja
pop
rorl
aad
std
imul
movsl
and
popf
pusha
push
add
ret
xlat
xchg
test
pop
inc
cmp
aaa
fstp
out
inc
push
mov
lods
bound
jo
add
out
sub
fwait
aaa
cld
jns
jp
ficompl
dec
push
pop
pop
cld
test
add
mov
mov
sbb
xchg
dec
negl
in
xor
jge
and
xor
inc
jb
jno
cmp
nop
sub
pusha
mov
inc
insb
dec
pop
ss
push
data16
imul
lret
push
adc
inc
push
sbb
adc
test
in
sbb
mov
scas
cmpsl
sbb
xor
cmp
jg
mov
mov
hlt
sahf
pop
pop
repnz
mov
mov
xor
xor
loope
call
movsl
xchg
push
or
aam
loop
xchg
mov
mov
cs
adc
int3
sbb
mov
cs
pushf
mov
pop
loope
or
imul
mov
and
dec
arpl
add
cmp
fdivrp
sti
xchg
fildll
or
pop
or
or
or
aad
jmp
cmpsb
fwait
mov
in
fcompl
ret
ret
pop
lret
rorb
mov
std
add
jb
in
sbbl
cmpsb
xchg
mov
or
jp
cmc
xchg
xor
jg
sub
test
mov
test
add
push
leave
cwtl
jmp
dec
dec
and
insl
jo
in
sbb
in
pop
mov
lcall
lea
rcr
clc
push
jge
stos
mov
andl
in
mov
into
es
out
cs
and
pop
mov
jb
xchg
nop
test
dec
fs
lret
push
leave
pop
dec
push
xlat
mov
pop
xchg
iret
jle
xchg
repnz
neg
ss
and
imul
jle
adc
xor
dec
push
into
test
xchg
push
xchg
jge
decb
in
mov
cwtl
xchg
ror
inc
lret
pop
shrb
push
push
out
arpl
movsl
xchg
or
aaa
lret
gs
cli
mov
lret
push
pop
fisttpl
xchg
inc
fstl
enter
in
imul
sub
movsl
ds
loopne
cmp
dec
mov
pop
pop
xchg
cmc
out
cmpsl
pop
jg
test
jle
scas
mov
cmp
xor
cmp
fdivl
or
jne
adc
cltd
aad
nop
xchg
mov
mov
push
push
mov
push
out
dec
popaw
pop
push
mov
insb
ds
popl
outsl
pop
dec
fs
dec
adc
xlat
fisubrs
xor
and
out
pop
repz
lds
leave
cmc
lcall
and
push
and
mov
sahf
pop
add
pop
mov
pop
jl
mov
enter
iret
into
mov
cmp
xchg
aaa
push
mov
mov
in
inc
pop
lds
rolb
sub
mov
stos
mov
lcall
imul
sbb
add
xor
add
jmp
mov
jge
dec
movsb
push
lock
repnz
repnz
inc
mov
mov
sbb
cmp
ja
out
outsl
fsubrl
pop
shlb
outsb
inc
inc
loopne
insl
lcall
pop
cwtl
das
sbbl
out
xchg
scas
xor
mov
popf
xor
clc
jnp
outsb
xchg
lock
test
inc
xlat
cwtl
fisttpll
into
pop
lock
pop
lret
clc
pop
rolb
cld
out
xor
push
mov
mov
push
ljmp
add
and
dec
das
cld
bound
lret
mov
insl
fmul
jge
inc
fwait
push
fwait
jae
pop
mov
sub
arpl
mov
loop
inc
xorl
imul
addr16
mov
jge
stc
xchg
sbb
fdivl
in
ja
dec
rolb
or
pop
jle
push
sbb
mov
lods
out
xchg
aad
ja
mov
fcmovnb
out
mov
mov
scas
in
mov
insb
xchg
mov
or
xchg
add
outsb
pop
cld
or
lea
enter
loop,pn
ljmp
clc
mov
aad
xchg
and
mov
dec
push
inc
notb
sub
push
repz
adc
cmp
pop
les
mov
add
lods
or
jmp
mov
add
movsb
test
hlt
or
add
aaa
fmul
mov
and
cmp
les
test
sahf
add
jno
pop
add
and
daa
lahf
repz
cmpsl
add
fbstp
push
rcll
inc
aam
sub
cs
xlat
lds
add
adc
inc
repnz
jmp
shlb
xor
ja
add
dec
sub
shrb
and
jle
mov
mov
ljmp
sub
sti
and
enter
popf
insb
rorl
push
sub
push
lock
inc
push
aad
lds
adc
add
lds
ljmp
adc
push
sub
lcall
pop
shll
push
xchg
outsl
dec
fidivrs
dec
or
mov
xchg
mov
pop
cld
mov
insl
mov
xchg
adc
add
ja
data16
loop
lea
xor
xchg
jno
jle
and
loopne
adc
lods
fsubr
call
lahf
cs
jae
sti
lods
int3
fwait
jbe
mov
dec
and
in
out
add
mov
movsl
inc
sbb
outsl
daa
jne
ret
popf
popa
cmpsb
mov
addr16
adc
push
movsb
stos
or
pop
mov
sbbl
mov
das
or
jl
popl
ds
xor
outsb
sub
and
or
ret
jecxz
xchg
push
jns
repz
adc
movl
sahf
xchg
xorb
gs
aad
jp
cld
xchg
lods
or
fs
bound
adc
sub
mov
test
or
inc
jmp
add
outsl
pop
sub
or
aas
push
pop
sub
inc
push
jnp
out
call
bound
out
mov
xchg
and
jge
mov
sub
xchg
xor
inc
cmp
mov
or
pop
adc
sahf
in
shll
es
dec
aas
outsl
jmp
mov
mov
std
outsl
rclb
popa
ss
into
hlt
daa
xchg
sarl
pop
iret
daa
rol
mov
or
call
inc
cmp
lods
add
cmp
push
xlat
xchg
lods
cwtl
lock
push
mov
xchg
cli
inc
add
adc
pop
int3
test
mov
mov
lock
jmp
out
push
cmp
pop
sbb
jbe
inc
fdiv
xchg
lcall
inc
movsl
mov
sarb
mov
jns
jb
dec
sub
xor
pop
adc
jbe
lods
shr
out
gs
xchg
dec
cli
adc
iret
ja
sti
test
mov
scas
es
adc
add
adc
loopne
cmc
xchg
xor
fiaddl
popf
jle
imul
add
fwait
inc
std
ficoml
adc
dec
mov
int3
lods
and
sbb
imul
mov
imul
das
jp
inc
dec
mov
int
insb
xchg
std
ror
cmpsb
enter
xorl
outsb
dec
jbe
dec
adc
les
jle
iret
jnp
in
icebp
in
fstl
jp
or
sbb
sub
xor
fistpll
imul
rcr
cs
mov
cmp
cmp
sbbb
notb
std
xor
inc
cs
int3
es
sub
mov
lret
mov
mov
ret
lods
lret
cld
xchg
ja
jl
sub
or
mov
push
xor
stc
bound
cmp
aam
test
insl
shr
lods
addb
lahf
lret
sbb
lret
and
mov
mov
cltd
lods
adcb
push
mov
scas
filds
push
or
cld
addw
out
sbb
cld
mov
divb
mov
jmp
jg
pop
loopne
cwtl
mov
jbe
push
imul
adc
dec
bound
cltd
mov
adc
lock
loope
cmc
in
fisttpll
jp
mov
xor
jae
ss
push
aam
mov
and
push
rolb
dec
xchg
sahf
sub
bound
lods
lcall
push
pop
shr
add
push
mov
mov
repz
sbb
test
xlat
into
data16
movsl
jns
test
jle
movsl
mov
dec
mov
lock
scas
push
jne
sub
jbe
fsts
cmp
fnstcw
jae
push
jb
inc
mov
insb
iret
dec
faddp
mov
bound
mov
cmp
test
inc
repz
repnz
scas
add
inc
test
test
fcmove
popf
cmp
pop
sub
shlb
fstl
loopne
xchg
cmp
inc
xchg
fwait
and
clc
push
mov
cmp
cmp
cmp
scas
and
call
stc
repz
popa
cmp
pushf
add
jp
loop
mov
cmpsb
push
scas
cmpsb
mov
shrb
xchg
or
rolb
mov
sbb
lret
mov
outsb
xor
les
stos
fstl
adc
aaa
sbb
xchg
lret
xchg
xorb
mov
sub
cmp
sti
fcomip
pop
mov
sbb
add
mov
cmpsl
cmpsb
int3
mov
adc
jmp
mov
ljmp
dec
mov
mov
into
out
es
add
mov
outsl
push
mov
fiadds
nop
pop
bound
lahf
cmpsb
sbb
and
test
lcall
sub
sub
cwtl
dec
jecxz
dec
mov
popf
inc
lret
movq
push
xor
aaa
xor
mov
xor
lds
xchg
aam
das
pop
dec
xchg
mov
ret
xchg
xchg
popa
xlat
sub
outsb
xchg
push
inc
pop
inc
in
or
mov
and
push
movl
ret
push
iret
movsl
xor
pop
jg
data16
inc
out
repnz
lahf
test
popl
int3
jno
xchg
inc
aam
mov
lret
pop
mov
xor
or
push
aad
pop
lea
push
or
jbe
lahf
dec
sub
pop
loope
shlb
lock
pop
cltd
or
push
jg
std
sub
leave
repz
popa
cmp
mov
mov
sub
outsb
and
sahf
xor
ret
test
in
in
add
adc
jge
lea
stos
jne
lcall
iret
negb
dec
imulb
sti
push
in
cmp
cmpsb
lods
icebp
mov
add
mov
sub
cmp
data16
jle
xor
jne
mov
inc
jle
and
push
lahf
or
push
mov
cwtl
add
pop
es
cmp
out
push
dec
sub
push
jae
imul
dec
sub
mov
pop
or
insb
xchg
jecxz
fnsave
fistpll
and
dec
popf
int
pop
mov
xlat
cmp
push
jg
in
lock
mov
pusha
std
jecxz
arpl
xchg
sbb
adc
outsl
cmp
mov
aas
jmp
ja
mov
inc
mov
sub
inc
stc
outsl
mov
sti
hlt
inc
fisubl
outsl
adc
mov
xlat
stc
mov
inc
and
jo
filds
icebp
xchg
test
aam
das
sub
lret
cmp
test
in
sarb
shrb
inc
mov
stc
lock
and
inc
xchg
stc
cltd
dec
into
add
outsb
icebp
stos
cld
inc
inc
movsl
pop
lahf
or
sahf
lods
xlat
bound
cmp
cs
cwtl
dec
and
push
adc
loope
testb
fbstp
cld
inc
pop
mov
dec
in
pop
and
push
mov
cmpsl
adc
xor
push
add
mov
outsb
subb
movsl
movsl
in
test
stos
pop
shlb
sub
ja,pn
scas
data16
imul
and
sbb
aas
fld
sub
int
dec
addl
add
jecxz
pop
fnstenv
mov
ret
mov
ja
sti
je
pop
xor
addl
or
cltd
jb
ja
lock
mov
aam
dec
mov
js
ja
sub
out
cli
mov
push
inc
mov
test
scas
and
enter
jp
jl
fnstsw
scas
aad
xchg
mov
push
mov
lods
inc
jnp
xchg
sahf
adc
sarl
inc
arpl
pop
loope
enter
jecxz
add
rorb
xchg
fimuls
mov
rcrl
push
sbb
repz
call
mov
jns
jmp
out
mov
jge
test
arpl
in
add
push
stos
fxch
jl
xchg
adc
loope
lea
adc
inc
or
jae
mov
std
pop
outsb
stc
movsl
inc
xchg
mov
mov
push
in
pop
lahf
and
mov
incl
dec
aaa
cmp
pop
sahf
in
cs
fwait
add
in
mov
xlat
inc
sti
cli
out
dec
jbe
jl
mov
push
push
xchg
sbb
sbb
jmp
adcl
cmp
or
lahf
sbb
mov
imul
aam
lcall
add
into
es
dec
outsl
push
enter
movsb
push
pop
std
out
cmp
hlt
cmp
lods
xchg
sarb
test
add
adc
dec
mov
dec
std
outsl
or
cmc
pop
dec
insl
roll
jg
cmpsl
adc
mov
cli
inc
pop
sti
call
ret
fmulp
sbb
ret
xchg
lret
mov
xchg
shr
jecxz
enter
clc
and
ret
or
mov
movsb
inc
loopne
insl
push
int3
mov
iret
jo
repz
cmp
test
rcrl
jo
pop
test
cmpsb
ret
push
sub
or
lret
lret
fnstcw
mov
ret
push
rcll
push
push
mov
inc
bound
das
cltd
aam
jae
inc
jle
stos
js
fidivs
imul
fwait
addb
enter
pop
dec
xor
mov
jle
jo
or
lods
push
movsl
sti
inc
push
fwait
inc
jbe
iret
jne
inc
mov
xor
xchg
loope
orl
in
sbb
movsb
sub
cmp
sbb
and
das
and
scas
sbb
adc
adc
jp
dec
addr16
and
and
push
subl
fistl
cs
fldcw
pop
xor
ljmp
sub
sbb
in
maskmovq
imull
je
scas
aam
fldt
jne
cmp
test
push
and
inc
je
pop
mov
cwtl
ljmp
and
mov
push
leave
xchg
jo
cmp
shl
add
push
pop
bound
cmp
inc
repz
xor
xchg
sahf
sub
dec
mov
or
xchg
and
mov
dec
ja
add
outsl
shll
push
mov
ss
sbb
pop
add
and
stc
mov
imul
sti
lods
xchg
insl
mov
ljmp
ljmp
lret
xchg
or
out
je
popf
imul
out
das
jmp
jmp
int
int3
lret
aam
xchg
ficomps
lahf
dec
jge
aas
popf
lock
jae
xor
jno
fdivrs
call
jg
mov
popf
fsts
pop
rolb
sbb
fs
pop
enter
stos
rcl
imul
mov
cltd
leave
dec
pop
pop
xor
movsl
dec
testl
in
call
loopne
arpl
or
mov
sbb
aas
fsubs
outsb
mov
push
in
loope
add
repz
mov
mov
fimull
or
pop
xlat
hlt
iret
mov
nop
lds
fmull
dec
push
mov
lahf
cmc
js
xchg
sbb
inc
dec
xchg
fidivl
inc
jle
xor
or
adc
out
test
out
mov
aam
push
cmc
gs
js
xlat
mov
mov
jecxz
popa
push
iret
inc
xor
out
adc
cmc
or
je
jmp
adc
repz
and
call
shll
pop
xlat
pop
and
subb
movsb
ret
push
in
outsb
xor
adcb
fcoml
incl
sbb
xlat
arpl
xor
lcall
insb
pop
rolb
xchg
xorl
jne
loopne
iret
xor
mov
stos
push
nop
inc
outsb
ljmp
jmp
sbb
and
mov
sbb
call
jae
mov
push
and
push
gs
gs
lea
idivb
mov
push
mov
jg
pop
outsb
iret
lods
pop
push
sbb
fsub
dec
inc
lret
inc
adc
jle
inc
fcmovnu
push
mov
test
mov
out
cs
out
popa
les
out
imul
dec
mov
test
repnz
pop
add
inc
stos
ja
inc
pusha
ficompl
xchg
mov
arpl
scas
add
nop
scas
je
and
mov
aad
out
push
inc
jp
or
mov
cmp
pop
sub
imul
out
lods
lea
dec
mov
add
test
imul
mov
into
inc
in
lret
loop
pop
cmp
sbbl
and
repz
jb
mov
mov
call
inc
in
add
repnz
inc
loopne
repnz
sub
gs
sbb
iret
push
add
jnp
incb
dec
out
testl
sub
in
iret
sbb
mov
and
jmp
es
pop
movb
and
filds
cmp
jno
jg
mov
sbb
call
mov
lods
or
inc
jmp
pop
aam
enter
xchg
adc
or
adc
scas
cli
cmp
ljmp
je
test
das
jp
loope
mov
xchg
add
shll
das
or
jae
hlt
sub
sbb
sbb
push
daa
push
mov
jmp
sub
jg
pop
xor
cmc
aam
cmp
push
xor
mov
out
mov
nop
mov
and
fs
clc
icebp
pop
xor
lahf
lods
sbb
sbb
fs
cltd
cli
lock
pop
lock
gs
fsubl
mov
and
std
test
sbb
mov
popf
jno,pn
clc
sahf
sub
insb
sbb
dec
push
adc
pusha
hlt
mov
push
sub
jmp
ret
sbb
in
or
xchg
addr16
add
jl
sub
lods
testl
jno
xchg
aas
pop
andb
call
fmuls
cs
jns
lret
stos
pop
push
xchg
jge
xchg
shr
fsubrs
scas
jb
pop
jb
sbb
sub
pop
repz
jmp
push
addl
mov
mov
loope
ja
jns
pop
mov
fstl
jae
dec
in
mov
lret
es
dec
push
and
mov
cwtl
aaa
cltd
in
push
popf
sub
dec
xchg
shlb
cmp
divb
test
mov
xchg
divb
cmp
inc
test
in
loopne
das
sub
or
mov
mov
xchg
xor
mov
lea
add
sub
outsb
lods
sbb
in
sub
pop
bound
orb
in
pop
push
push
sarl
cmpl
int3
push
addb
lcall
test
push
sub
pop
into
cmp
stos
outsl
dec
mov
out
sub
adc
cli
xchg
ret
push
adc
in
sbb
cmp
mov
hlt
in
or
mov
sub
xchg
jg
add
imul
pop
movsl
gs
cmp
sub
rclb
lods
in
xor
repnz
pop
jle
cmc
push
jns
or
sbbb
pop
adc
repz
sbb
xchg
jns
xchg
and
mov
ficompl
inc
xor
aam
mov
mov
out
jns
data16
imul
mov
pop
imul
ljmp
cmp
dec
mov
insl
mov
fucomi
sub
mov
cmp
xchg
lea
push
ss
ficoml
sub
mov
movsb
add
lea
inc
fs
mov
ja
or
dec
ja
xchg
fsubs
mov
pop
jle
mov
xorl
imul
jecxz
out
mov
ficompl
sub
or
pop
cmp
test
pop
sahf
mov
jbe
mov
sub
dec
lods
aaa
sbb
jge
in
das
cs
cmp
or
mov
testb
pusha
cmp
mov
lcall
lock
andb
rorb
dec
push
mov
call
dec
pop
inc
daa
addb
into
outsb
imul
adc
pushf
hlt
or
imul
or
adc
nop
dec
nop
in
xchg
lods
xchg
sbb
or
fs
add
adc
ficoms
sar
cltd
add
mov
pop
addr16
pop
pop
fsubrs
inc
lret
mov
test
cld
adc
xchg
mov
repz
inc
sbb
loope
jp
hlt
mov
lock
pop
clc
orb
mov
xchg
xchg
pop
adc
call
sub
mov
ja
sahf
jae
pop
lret
jb
push
xchg
hlt
add
pop
lcall
xchg
xor
mov
push
fidivl
nop
adc
and
cmp
cmp
xor
mov
dec
cmp
push
fiaddl
sub
dec
insl
out
xor
dec
scas
lret
inc
xchg
push
push
in
cmpsl
cmp
mov
jns
inc
out
imul
xor
xchg
xchg
in
mov
jnp
jae
and
and
xchg
je
fadds
pushf
jbe
jo
push
cmp
dec
push
xchg
cld
call
jl
inc
repz
lds
fiaddl
insl
mov
add
stc
sub
jp
out
and
cmpsb
add
pop
pushl
push
jecxz
mov
call
dec
cltd
subb
push
pushf
dec
cs
cmpsb
lcall
clc
sbb
shr
popf
cmp
cmp
xchg
pop
pop
jno
outsb
movsl
xchg
or
or
lcall
mov
mov
test
jmp
jmp
cwtl
jp
decb
cmc
and
sub
mov
fcompl
aaa
outsl
fildl
mov
cmpsb
xchg
cmp
imul
xchg
mov
cmp
call
popa
pop
or
add
es
loope
cld
aaa
mov
sbb
rcll
mov
add
sub
addb
inc
in
push
add
scas
scas
push
inc
jge
jns
fidivl
mov
push
jbe
and
in
js
push
jnp
lods
push
sub
lcall
fucomp
mov
jbe
daa
jp
outsb
stos
pop
dec
and
rcr
add
cmp
sub
push
das
xchg
mov
faddl
cwtl
jp
out
clc
cmp
out
inc
std
pushl
aad
mov
jmp
mov
pop
xor
ja
pop
cmc
rol
push
cmp
shlb
pop
idivl
mov
ret
lds
mov
test
sub
imul
pop
mov
scas
in
mov
xchg
dec
xor
mov
cmpb
xchg
out
out
jno
loopne
and
sub
sbb
cs
or
fimull
cmp
xor
cmp
movsl
and
and
mov
sbb
pushf
xchg
fnstcw
js
gs
mov
lcall
ret
dec
ret
ret
cmp
rcrb
loopne
in
rcr
nop
mov
das
pop
nop
mov
cltd
and
movsb
in
stc
jne
test
mov
push
call
xchg
repnz
mov
jl
das
std
add
lret
loope
stc
mov
lcall
cltd
mov
fs
jg
inc
test
fcoms
fwait
aad
mov
vorps
mov
imul
fldenv
jne
inc
sbb
xor
xchg
cmp
xchg
in
fnsave
pop
adc
imul
push
xchg
pop
sub
fwait
loop
xchg
aam
fcomps
mov
pop
push
xor
xchg
xor
lods
rolb
cld
stos
outsl
movsb
jmp
ret
ljmp
mov
aas
loopne
jmp
push
int
je
out
xchg
add
xchg
or
int3
adc
lock
cs
push
and
jl
icebp
jo
push
iret
push
cltd
and
aam
in
mov
enter
xor
jmp
ds
mov
fildl
pop
sbb
xchg
sti
sbb
mov
imul
test
lea
bound
cmp
into
adc
mov
sub
mov
outsl
shrl
or
imul
add
mov
lret
leave
push
cmp
aam
out
dec
sub
push
imul
pop
ret
fwait
pop
in
pop
imul
loopne
cld
sub
out
or
fs
xchg
jg
lods
pop
lcall
fwait
pop
dec
push
popa
fs
rolb
mov
ret
mov
aad
neg
pop
mov
pop
test
mov
xchg
sub
mov
movsbl
sub
mov
xchg
daa
xor
dec
inc
ja
mov
call
mov
mov
push
in
imul
xor
cmpsb
fimuls
call
std
iret
cmp
sti
enter
ss
jg
adc
sarl
mov
push
mov
jae
mov
scas
sub
outsl
sbb
adc
mov
dec
movsl
xor
mov
xchg
in
sbb
and
repz
mov
in
fisubrs
insl
stos
mov
jg
pop
push
ja
inc
mov
pop
imul
daa
movsb
sbb
pop
fisubs
adc
fwait
pop
mov
sbbb
cltd
nop
fsin
xchg
fs
jb
pop
sahf
popf
scas
ds
xchg
ljmp
dec
or
in
dec
jge
jbe
je
xlat
add
fdivr
push
xchg
js
push
mov
in
sub
xchg
sub
pop
scas
in
mov
and
test
aad
sti
xchg
fdivl
mov
mov
inc
mov
xchg
stos
cwtl
mov
ss
push
sahf
cmpsb
out
je
xchg
in
test
out
test
popf
lock
lock
imul
xor
inc
cmc
ret
enter
gs
adc
fdivr
sbb
xchg
lret
popf
popa
adcb
add
mov
ficomps
cmpsb
outsl
mov
into
test
bound
inc
mov
lock
ss
dec
and
lds
sbb
loop
lods
scas
popaw
dec
xchg
sub
push
xchg
rcrl
xchg
sarl
bound
inc
stos
mov
add
sbb
push
xor
bound
insl
mov
in
into
jl
and
pop
in
enter
dec
ret
lret
mov
mov
repnz
pop
jne
adc
dec
push
push
inc
fwait
mov
enter
mov
cmc
jecxz
in
jge
popa
pop
in
dec
jmp
es
call
ljmp
and
fwait
shll
aas
mov
dec
scas
jbe
push
popf
insl
dec
fimuls
popf
pushf
in
fildl
es
pop
push
push
mov
sti
push
repnz
out
cwtl
pop
mov
cmc
xchg
mov
mov
daa
jl
xchg
popa
mov
rolb
lds
xchg
xchg
xchg
shrl
pop
loopne
mov
push
dec
jecxz
pop
cli
rcrl
xor
dec
jge
dec
mov
sub
test
add
sbb
mov
sub
jb
push
sbb
inc
jno
pop
xor
ljmp
daa
sahf
outsb
pop
pop
or
add
lea
repz
cmp
mov
pop
daa
mov
mov
cmp
mov
in
xchg
mov
jmp
add
popl
inc
in
push
je
sub
jo
xorb
iret
aam
xor
mov
fld
sub
clc
pop
pop
cmp
and
sub
pop
in
sub
imul
mov
push
xor
fucomi
bound
xchg
aad
dec
push
fbld
or
push
inc
out
cmp
arpl
repz
push
sbb
out
or
pusha
lret
lret
pop
decb
cmpl
or
xlat
pop
aad
popa
lds
mov
mov
mov
mov
mov
addr16
mov
popf
push
inc
adc
lds
xor
mov
pop
out
mov
xchg
out
vphadddq
nop
negl
stos
int
mov
dec
bnd
mov
movsl
popa
lds
movsl
add
pusha
dec
inc
mov
cltd
mov
jmp
jg
rcr
rorb
lock
xorl
jne
jo
add
dec
rcrl
push
and
adc
or
insb
popf
cltd
and
jno
and
xor
jg
mov
mov
popf
mov
sti
js
and
mov
xchg
mov
mov
adc
pushf
sbb
mov
jge
jno
push
fisubrl
movsl
inc
push
and
push
fs
in
adc
mov
test
loop
lods
xchg
inc
push
adc
push
into
repz
push
pop
sbb
sub
jae
cmp
sub
xor
add
mov
fs
adc
arpl
stos
jmp
fmuls
outsb
cmp
shll
movsb
cmp
or
fwait
cltd
xchg
sub
jl
xchg
and
fsubrl
add
cli
nop
xor
mov
jnp
gs
add
adc
jmp
test
lock
sub
pop
gs
mov
pusha
dec
pop
pushf
movsb
cmp
jmp
push
mov
xchg
inc
push
sbb
pop
popa
dec
inc
aad
push
in
cmpsl
lea
loopne
cld
lcall
or
daa
jp
sti
and
sbb
jge
fstpl
repz
ud2
push
repz
dec
ja
jge
fisubl
in
mov
cmp
mov
sub
scas
add
mov
sbb
pushf
rorl
cs
sub
fcomps
iret
icebp
add
lcall
stos
xchg
lahf
push
psrld
mov
sbb
sbb
cli
lret
jecxz
fldt
testb
dec
xchg
popf
inc
das
sarw
shlb
or
and
sub
jl
cmp
int
mov
push
xor
outsl
ret
pushl
mov
imul
sbb
inc
sub
imulb
popa
cmp
dec
sbb
jns
ret
mov
fninit
and
xor
testl
and
jge
mov
ds
scas
dec
inc
mov
shr
xchg
dec
pop
xor
shlb
xchg
loopne
cltd
lods
push
gs
push
andl
adc
shll
mov
add
stos
lret
repnz
data16
jno
add
cmp
adc
push
push
adc
xor
mov
mov
in
mov
scas
pop
popl
mov
pop
rcrb
lock
std
jne
cmc
div
addr16
popf
cmp
push
push
cli
gs
xor
push
jecxz
hlt
and
repnz
decl
push
cmp
fsts
aas
add
data16
dec
cmc
sbb
sarb
sahf
cltd
insl
sub
jno
add
sub
lds
gs
jne
test
jg
sbb
xlat
add
in
mov
xor
dec
dec
mov
xchg
filds
aas
repz
es
jb
xor
xchg
pop
jg
mov
xacquire
ret
movsb
xlat
ja
push
sub
jae
push
sub
push
jb
cld
cmp
lret
lret
filds
and
mov
test
into
xchg
inc
add
cltd
jno
mov
cli
cmp
cli
mov
pop
sub
lret
repnz
cltd
or
or
shr
jl
xor
push
idiv
orl
jp
ret
aaa
test
sub
jg
cwtl
pop
outsl
mov
mov
lret
pop
in
addr16
dec
lds
outsl
or
iret
fidivs
daa
ja
repnz
insb
push
gs
or
cmpl
mov
ljmp
xor
fmuls
es
adc
ja
icebp
mov
fiaddl
mov
inc
mov
mov
jge
xor
jmp
xor
fisttps
push
ja
cltd
push
sub
addr16
and
movsl
add
cmp
imul
dec
inc
stc
jno
jge
sub
cltd
dec
or
fldenv
stos
push
sti
scas
push
arpl
mov
mov
out
jmp
repz
mov
nop
inc
or
sub
push
jb
popa
je
test
cmc
pushf
mov
mov
dec
push
fnstsw
subl
adc
aas
mov
xchg
pop
orl
sub
push
inc
mov
insl
adc
ljmp
movsb
sbb
cs
bound
pop
add
push
dec
add
cmp
insb
jno
cmpsb
push
lods
jne
call
and
adc
mov
xchg
rolb
mov
and
cmpsl
enter
sbb
inc
jb
mov
pop
push
cli
in
xchg
into
je
cld
mov
cmc
in
insl
adc
lret
pop
outsb
dec
inc
ret
aaa
dec
daa
fucomi
pop
cs
mov
sarb
xorl
or
sbb
xor
call
imul
mov
xchg
jns
xchg
mov
pandn
faddp
xor
push
aas
stos
cli
push
in
add
lds
mov
outsb
sbb
cmpb
dec
ljmp
das
aad
adc
test
hlt
xchg
je
ss
insb
lret
addr16
dec
inc
pop
pop
sbb
xor
into
push
sub
or
mov
std
or
fdivrp
pop
rolb
scas
mov
scas
mov
ret
insl
fwait
out
xor
fidivs
sbbb
mov
jns
jns
sub
cli
popf
out
or
xor
fmull
out
fmuls
or
jno
imul
xchg
lcall
stos
mov
pop
je
fldcw
cmpps
xor
cltd
in
add
insl
pop
push
int3
out
adc
and
dec
mov
mov
je
jmp
jmp
push
mov
jp
mov
xchg
filds
xor
dec
or
int3
stc
mov
add
xchg
iret
or
iret
push
add
hlt
cmc
out
pop
cmp
xchg
sti
sub
movsb
mov
dec
sbb
push
stos
xchg
ja
fdivl
mov
jmp
insl
xchg
jno
out
mov
data16
xchg
ds
inc
add
inc
ret
mov
or
sub
lods
xchg
ret
mov
xor
push
xchg
lahf
and
subb
fisttpl
adc
pop
test
fldcw
push
sub
outsl
cmp
test
push
scas
outsb
add
loopne
mov
pop
fsubp
test
mov
outsl
out
xor
jae
inc
and
in
fwait
and
mov
andl
jle
inc
mov
rcrl
mov
push
jecxz
dec
jle
fwait
push
mov
mov
aad
dec
addr16
jmp
outsb
rcrb
jo
sahf
aam
lahf
sbb
out
pop
rorb
andb
divb
and
call
jg
push
in
cmp
rcl
mov
cld
setb
gs
push
out
ret
fistl
test
jmp
sti
add
jmp
jmp
push
out
repz
or
out
or
cltd
loopne
mov
das
notl
fsub
js
negb
ficompl
jl
shll
sahf
lcall
loop
std
add
stc
push
mov
pop
int
mov
lock
shlb
cmp
dec
movsl
adc
fdivrp
imul
mov
sub
jo
xchg
aas
nop
push
loopne
sub
xchg
sahf
std
nop
sbb
xchg
std
mov
lahf
dec
fs
dec
aam
jp
stos
out
mov
insb
inc
mov
rclb
dec
add
loop
or
arpl
pop
dec
daa
scas
add
jecxz
test
lock
imul
jmp
ret
and
inc
add
shll
mov
push
lcall
ret
inc
push
mov
out
dec
adc
or
sub
push
ret
adc
pop
add
pushf
mov
xor
sbb
test
or
int3
imul
cmp
cmp
add
xchg
insl
lods
mov
sub
add
mov
aaa
jbe
xchg
push
sbb
test
or
and
stos
add
adc
jne
xchg
sbb
iret
and
pop
nop
ljmp
into
cltd
xchg
jg
inc
dec
xlat
pop
dec
xchg
cwtl
adc
ss
mov
lods
inc
outsb
adc
mov
call
adc
dec
dec
mov
repz
mov
std
xchg
jmp
mov
or
inc
icebp
jg
mov
xor
adc
inc
push
mov
pop
mov
jmp
pop
adc
add
jp
sahf
cmc
gs
lret
mov
int3
xchg
sbb
mov
and
dec
pop
lcall
test
mov
xchg
pop
sbb
in
mov
test
cmp
jnp
shlb
jp
cli
les
xor
aaa
rcrb
mov
xor
xchg
sbb
fdivrl
push
cmp
fbld
xchg
std
das
out
test
sti
orb
sbb
pop
xorb
jecxz
out
popf
je
andl
mov
lahf
pop
push
movsb
xchg
rcrl
popa
lcall
leave
movsl
pusha
cs
outsb
sub
push
mov
insb
dec
jge
mov
jbe
jns
dec
neg
idiv
lods
nop
xchg
aam
cmc
xchg
xchg
dec
fcomps
out
xchg
jecxz
scas
add
push
sbb
shlb
mov
ds
sbb
lods
popf
in
xor
xor
pop
mov
icebp
mov
mov
call
sbbl
dec
sub
lcall
mov
jbe
push
jae
jb
dec
out
out
sub
push
mov
cmpsl
sbb
fs
mov
rcrb
arpl
jae
mov
pop
mov
bnd
in
push
or
or
jae
xchg
sbb
xor
push
addr16
mov
pop
inc
idiv
push
lods
hlt
ret
daa
xor
jmp
daa
fs
lret
aaa
pop
pushf
or
push
mov
cwtl
pop
inc
test
inc
je
xchg
arpl
mov
jle
jle
xlat
daa
insb
insl
aas
sbb
mov
iret
cwtl
inc
sti
cli
clc
mov
push
outsb
mov
lock
orb
stos
aaa
jne
mov
mov
outsb
out
xchg
bnd
lar
rorb
push
testb
jo
sahf
stos
mov
sbb
push
cmp
in
ljmp
mov
sbbb
inc
mov
mov
cld
es
cltd
cmp
fisubl
popa
xchg
out
xor
sub
jo
mov
adc
fcompl
jae
add
aam
es
rcr
cmp
cmp
rorb
aas
bound
cmp
xchg
mov
mov
xchg
xchg
mov
pop
bound
inc
mov
or
mov
jmp
jnp
inc
jl
aaa
or
cmp
lahf
das
mov
sub
mov
jg
jno
repnz
cmp
daa
stos
divb
ret
mov
out
bound
cli
add
mov
dec
dec
es
scas
int
scas
or
aad
or
jl
cli
pop
jo
push
cmp
pop
mov
adc
dec
in
dec
xchg
xor
xchg
pop
dec
sbb
xchg
mov
in
subb
sbb
negl
stos
loop
loop
cmpsl
je
push
hlt
jns
int
enter
out
mov
dec
lcall
and
adc
ja
bound
leave
neg
pop
cwtl
cwtl
das
xor
and
loopne
loope
pushf
sub
pop
out
les
sbb
dec
in
lea
inc
mov
dec
out
es
inc
push
jb
xchg
aaa
aaa
inc
and
and
push
lods
mov
push
rcrb
cmp
dec
imul
fmuls
cmc
repnz
stos
lock
loope
and
filds
scas
mov
movsb
daa
jbe
xlat
mov
ret
cmpsb
std
mov
push
adc
and
cld
push
push
dec
lcall
into
push
sbb
mov
sbb
mov
aas
enter
adc
sti
adc
hlt
ret
xor
lcall
adc
adc
or
push
cmp
repz
pop
popa
lock
push
mov
pop
sarl
jno
jge
arpl
sbbl
insb
loope
jbe
and
pop
xlat
push
jmp
xchg
cmp
or
mov
rclb
fs
cltd
push
adc
cli
pop
rcrl
test
jns
add
lret
call
dec
movsl
sbb
dec
and
test
leave
fidivl
cli
pop
cmpsl
test
adcl
xor
lea
mov
xchg
adc
push
pop
mov
sub
adc
aaa
popf
sbb
test
aad
inc
push
dec
cmpsb
ljmp
mov
scas
mov
orl
inc
rorb
aaa
scas
fbld
enter
adc
xor
stos
mov
addr16
movl
cmpb
mov
daa
xchg
pop
xlat
or
inc
sub
push
outsb
push
test
jecxz
mov
ficoms
test
jle
loop
xchg
or
ret
dec
mov
pushf
ret
icebp
sbb
bound
inc
popf
stc
rolb
push
xchg
and
cli
xchg
pop
movsb
or
or
cmp
jl
sbb
mov
dec
test
cmp
scas
and
sub
in
mov
sub
fcomip
jg
sbb
imul
mov
jl
dec
sbb
lahf
dec
roll
stos
mov
xor
gs
fmuls
sar
ljmp
mov
cmp
inc
das
data16
fs
outsb
or
xlat
icebp
scas
cld
jg
imul
add
test
into
cmp
dec
outsb
xor
push
jns
push
sub
cld
mov
mov
stc
jnp
lcall
dec
faddl
imul
dec
xchg
mov
mov
inc
xchg
push
mov
xor
scas
bound
mov
push
adc
jbe
movsl
xchg
pop
rcrb
or
fiaddl
test
imul
fisubrl
out
pop
inc
sbb
xchg
into
pcmpgtw
pop
adc
add
in
xlat
cmp
loopne
lahf
idiv
rol
or
mov
cmp
push
js
fildl
xor
mov
push
shrl
sahf
scas
stos
clc
pop
sub
mov
xchg
adc
mov
rol
repnz
add
aad
add
jbe
cmp
push
sub
dec
cld
int
and
xor
fistpl
jmp
add
mov
test
push
mov
jg
inc
jbe
daa
mov
std
sbb
mov
ljmp
xor
ljmp
add
xlat
bnd
das
sbb
in
xchg
adc
pushf
cmp
pop
push
mov
test
aaa
cmp
fadds
ret
mov
gs
iret
test
fwait
out
mov
sahf
jle
fcmovnb
fdivrl
mov
push
leave
cmp
cmc
scas
popf
data16
in
sub
loopne
call
lods
or
and
adc
mov
stos
pminsw
sbbb
outsl
mov
and
and
xchg
cld
ljmp
andb
mov
mov
fwait
jbe
jg
inc
jmp
cld
mov
ja
ljmp
arpl
or
aas
shlb
jle
iret
jae
jne
repz
fstpl
sti
imul
mov
dec
pop
xchg
pop
aad
bound
insb
dec
loop
sbb
mov
fwait
jbe
pop
sub
or
mov
adc
xor
mov
rclb
out
adc
adc
aas
add
xor
jmp
sbb
stos
mov
mov
dec
inc
adcl
sub
xor
mov
or
insl
xchg
add
mov
dec
outsl
in
xor
pop
mov
adcl
into
fnstenv
pop
mov
mov
popa
xor
dec
jmp
loope
movsb
jl
sub
in
push
mov
xor
cmp
fnstenv
sub
mov
dec
push
mov
add
daa
sub
inc
fildll
push
push
sbb
stos
movsb
xchg
sar
aad
xor
push
mov
cmp
and
insl
mov
icebp
les
cld
push
jnp
aas
jp
cs
push
push
sub
pop
adc
mov
and
mov
je
adcl
fldcw
adc
pop
enter
adc
cmp
inc
cmp
sbb
scas
pop
pop
lds
push
mov
mov
and
jg
mov
mov
movsl
lret
scas
dec
or
movsl
insl
jp
pop
std
fildll
sub
mov
dec
dec
dec
outsb
cmc
out
inc
mov
gs
or
inc
stc
and
pop
and
mov
or
push
fstpt
movsb
sub
shll
aas
mov
xor
aaa
jp
test
mov
cli
andl
insl
pop
jl
jo
fmuls
scas
pop
decb
hlt
lret
sarl
jp
test
mov
cld
cmp
push
mov
adc
or
subb
daa
xchg
enter
movsl
or
into
mov
sub
test
xor
shll
push
and
xchg
out
or
outsl
jecxz,pn
ja
shr
xchg
or
xchg
sbb
pop
lcall
or
and
cli
sub
cmc
in
daa
lods
ja
and
movl
pop
adc
lret
aam
in
cmc
push
mov
dec
jl
sbb
mov
push
mov
or
stos
jne
mov
jg
sbb
repz
jge
gs
pop
lea
std
std
aam
repz
movsl
fsubrp
je
es
fildl
mov
sub
pop
and
and
add
mov
jne
lods
jno
push
and
mov
sbb
dec
dec
test
mov
pushf
in
dec
xlat
jp
outsl
xor
or
in
sub
dec
jp
fisubs
gs
add
jbe
ret
jp
dec
mov
cmp
adcl
out
scas
cmp
cld
fs
call
ja
cmp
in
rcl
pusha
aaa
ja
imul
jnp
rorl
hlt
pavgw
adc
or
jo
jmp
inc
aaa
pop
mov
mov
repnz
cmp
sbb
dec
nop
mov
mov
or
sbb
fs
mov
xchg
into
sbb
pop
gs
rcll
push
cld
mov
adc
repz
stos
push
pop
mov
pop
lods
adc
icebp
ljmp
push
stos
aad
enter
push
out
ret
add
dec
loope
sub
or
sbb
mov
push
fidivrs
out
or
xchg
lock
mov
in
mov
xor
rclb
test
add
aam
movsb
lock
jg
in
push
and
and
scas
ds
mov
dec
and
jg
add
push
pop
xor
and
mov
fldl
push
fisttpll
sub
inc
stos
cmpsl
inc
ds
cwtl
test
lahf
jecxz
adc
fdivrl
rolb
push
xchg
loopne
leave
out
xchg
movups
mov
xchg
loopne
mov
dec
dec
ljmp
jns
cmpsb
dec
sbb
jne
add
rclb
xor
sub
in
add
in
jmp
ret
inc
pop
jp
mov
inc
int
std
call
jnp
outsb
ret
cmp
mov
add
mov
cmp
ljmp
adc
sbb
jl
neg
mov
inc
lahf
shrl
shl
jmp
add
jg
divl
int3
inc
lock
inc
and
dec
into
test
push
lahf
movsb
cmp
push
and
scas
mov
mov
lcall
jo
lahf
cltd
aaa
mov
imul
out
sbb
sbb
dec
jle
mov
mov
adc
jg
sti
xor
push
mov
int
fisubrl
fnsave
aam
mov
or
dec
aad
pop
push
lcall
cmp
adc
mov
mov
add
insb
mov
mov
xlat
pop
repz
pop
les
mov
pop
shlb
andb
jae
pop
and
xchg
sbb
pusha
rcll
or
xor
xor
divl
dec
outsb
xor
es
lahf
cmc
mov
pop
dec
jbe
xchg
test
in
in
sbb
fwait
insb
out
ja
negb
and
xor
mov
xor
aam
jno
ljmp
push
mov
or
xchg
mov
mov
int
push
ds
movsl
lock
mov
or
mov
repnz
ss
aas
jle
push
jb
outsb
jne
out
jl
mov
and
sub
inc
rorb
popa
push
fcmovnb
push
icebp
in
inc
aad
out
loope
movsb
mov
inc
jne
stc
aad
scas
xor
xchg
inc
insl
lods
xor
push
imul
es
sbb
dec
aad
xor
lds
or
jg
or
jecxz
repz
add
add
mov
test
ret
pop
xor
andl
icebp
fst
icebp
loopne
sahf
mov
mov
pop
enter
arpl
or
mov
movsl
push
mov
call
lea
arpl
push
notl
xor
cmp
cmp
out
xchg
push
in
jmp
fstl
inc
rcrl
sub
ljmp
push
insb
xchg
insb
test
mov
shll
jae
xchg
sbb
push
fisubrs
ds
sbbb
fldl
test
xor
int
mov
jns
outsl
mov
sub
jns
and
seta
xor
fisubrs
mov
pop
pop
lds
aaa
jns
and
andl
mov
sbb
push
rolb
mov
xchg
mov
in
mov
jmp
cld
shrl
mov
and
mov
pop
testb
mov
imul
and
mov
pop
or
repz
test
inc
mov
pushf
fiaddl
mov
fiadds
inc
or
jno
cmpl
dec
xchg
sub
mov
outsb
ret
insl
xchg
and
adc
lock
or
cmpsl
cmp
fdiv
imul
je
movsl
mov
mov
insb
sbb
out
lret
mov
sub
in
fsub
int3
lret
fwait
inc
stc
lods
pop
gs
adcb
and
cmp
sub
xor
lods
sub
das
das
loope
xchg
cmc
add
dec
mov
or
inc
data16
and
xchg
xchg
jp
nop
leave
mov
out
adc
test
enter
xchg
mov
mov
jbe
xchg
lahf
loop
pushf
adc
adc
mov
rol
mov
push
sub
dec
push
xor
fisubl
cmp
push
inc
adc
pop
xor
cs
or
cs
cmp
iret
sbb
in
jcxz
push
mov
sbb
sbb
dec
cmpsb
imul
out
jno
rcr
loope
xchg
mov
movsl
ljmp
test
notb
sub
call
fiadds
jl
test
ret
pop
int3
xchg
jae
ret
ljmp
add
jmp
pop
mov
outsl
ds
push
pusha
dec
inc
lods
mov
stos
mov
mov
pop
pop
fcoms
pusha
loopne
mov
sub
mov
xor
jb
aam
enter
sbbl
movsb
adc
inc
arpl
int3
jbe
out
scas
xchg
out
cltd
lock
dec
std
xor
fs
out
rcll
jne
pop
dec
ja
call
pushf
mov
adc
jle
fwait
adc
lock
sbb
and
cmp
movsl
lahf
push
out
add
mov
sbbl
call
push
imul
inc
and
jmp
push
push
fistpll
jbe
xchg
lea
stc
jmp
push
mov
movsl
out
push
daa
arpl
pop
and
add
and
sub
int3
ficompl
push
push
enter
frstor
cli
enter
inc
sub
xchg
add
and
pop
sbb
sub
scas
push
rorb
dec
mov
mov
cmp
loopne
ja
sub
je
adc
mov
daa
xchg
movsb
xlat
sub
mov
inc
pop
adc
or
imul
xor
scas
xor
mov
xor
jb
pusha
in
mov
test
jecxz
add
adc
sub
jmp
pop
test
flds
adc
outsl
xor
test
xchg
test
sub
cmpsl
dec
cli
cmp
mov
mov
clc
add
sub
push
jp
mov
jge
or
mov
and
psubsb
arpl
sbb
sbb
iret
imul
lret
and
mov
clc
dec
cltd
in
jmp
sub
lcall
and
faddp
das
out
cld
es
mov
shll
dec
lods
in
adcl
add
add
inc
into
push
cltd
loope
jg
inc
das
and
mov
out
push
std
out
jl
scas
push
fiadds
mov
push
repz
mov
inc
add
bound
or
adc
shlb
mov
xchg
mov
ret
adcl
mov
stos
jb
shlb
fstpt
jns
inc
in
out
lcall
clc
std
or
movb
inc
leave
hlt
movsb
xor
shll
call
inc
jns
js
and
push
lahf
es
mov
xchg
dec
gs
stos
mov
push
aas
jae
loope
cli
rcrl
sbb
add
rolb
in
pop
sbb
fisubs
hlt
mov
pushf
negb
adc
jbe
int
inc
loope
push
jne
clc
fdivrs
inc
pop
pop
xor
dec
test
sub
mov
add
jmp
jo
cwtl
sbb
repz
lock
fcompl
sbb
push
call
jecxz
xlat
icebp
arpl
sar
cmp
and
insb
cli
and
cmp
insl
push
popa
dec
mov
fdivs
cmc
enter
out
fadds
adc
mov
xchg
mov
xchg
jmp
xorl
cmp
mov
imul
repnz
xchg
scas
imul
mov
je
or
xor
jecxz
lret
mov
orb
out
test
aaa
sbb
cmp
xlat
pop
jle
cmp
andl
pop
in
mov
inc
ss
mov
sub
add
int
pop
mov
pop
xchg
push
movsl
cmp
mov
ret
div
and
jge
pop
push
push
add
cmc
and
ljmp
int
fucomp
shrl
adc
xor
clc
adc
adc
mov
cs
popa
pop
inc
pop
pop
jo
lahf
pop
cmpsl
inc
push
rcrl
mov
in
jg
add
sti
imul
jge
sbb
sub
pop
movsl
lea
sub
and
dec
sahf
loop
add
aam
pop
mov
daa
push
icebp
xor
data16
xchg
inc
xchg
in
btc
cld
in
and
mov
lret
fidivrs
negl
inc
cmp
inc
lds
dec
push
xchg
rorb
fxch
cltd
pop
aas
in
dec
fldt
jmp
fistps
jg
mov
pop
pop
mov
add
push
ds
xor
insl
xchg
jp
nop
mov
hlt
sbb
push
jl
loop
sub
ss
pop
xchg
lret
ficoms
arpl
mov
test
into
xor
push
lods
jns
outsl
ficoms
aaa
les
jge
lret
xchg
mov
shrd
add
mov
push
in
stc
pop
fbld
or
and
xorl
sahf
incb
aad
imul
movsl
xchg
push
ficompl
mov
mov
lods
insl
out
out
inc
push
aad
fiaddl
in
loopne
mov
test
mov
sub
push
cltd
xor
nop
pop
aas
xchg
sbb
incl
xor
out
push
push
mov
movsbl
out
jnp
fistps
mov
jge
addb
sti
xor
mov
jecxz
sub
mov
enter
push
push
jbe
mov
and
out
les
jle
imull
shr
repz
and
cmp
sbb
xchg
dec
sbb
xchg
stc
sbb
fs
or
jae
fdivrs
jb
mov
mov
je
sbb
lods
xchg
and
sub
adc
fisubs
xor
cmp
push
jno
gs
daa
xchg
test
pop
jle
push
xor
je
bound
push
dec
ss
cmp
shr
out
xlat
dec
jmp
pop
jne
jge
sub
pop
nop
jb
ret
popf
fsubrs
arpl
mov
push
dec
push
fsub
or
je
cmpsb
cmp
dec
mov
rcll
scas
cmp
icebp
ljmp
pop
test
push
cmpsl
insb
push
add
jl
mov
xor
out
xchg
leave
xchg
xor
stos
xor
rcl
scas
pusha
mov
leave
out
jl
lahf
mov
lods
pop
aas
mov
shll
je
push
scas
clc
xchg
jns
into
lods
xor
pop
loope
or
shl
pop
fisubrs
lock
and
inc
repz
mov
jo
stos
aaa
mov
inc
or
jge
pop
call
test
inc
and
dec
rorb
fcomps
and
xchg
mov
ret
stos
pop
test
cmpsb
insl
in
sarl
stc
add
inc
cli
pop
inc
jmp
or
ss
aas
das
mov
jns
adcl
imul
adc
les
jg
jae
incl
je
cmp
repnz
xchg
sbb
add
repz
lcall
pop
call
pop
movsl
iret
out
loope
sub
jmp
and
adc
or
mov
ds
mov
mov
jne
jo
scas
lcall
dec
test
out
pop
or
jecxz
mov
movsl
inc
pop
mov
pop
jg
lds
mov
xor
lcall
xor
into
in
pushf
fcompl
sti
rcl
sbb
inc
push
dec
dec
xchg
mov
push
pop
ret
sub
imul
lock
push
std
jg
dec
mov
sahf
ja
in
testl
or
mov
push
xchg
dec
push
sub
jb
test
push
jb
mov
add
or
push
jge
jno
nop
aaa
sub
mov
sahf
loope
es
lds
out
or
rclb
fidivrs
xchg
jns
scas
inc
aam
pop
mov
clc
cmp
jmp
lods
adc
jo
adc
loopne
sbb
dec
xor
mov
jns
mov
hlt
xor
or
xchg
push
sti
cltd
or
mov
icebp
mov
ret
xor
jecxz
scas
rcll
mov
shll
or
stc
pop
dec
loopne
sub
int
xchg
fdivl
sub
call
fld
mov
inc
pop
push
cmp
lret
cmp
mov
out
int3
push
mov
inc
jne
pop
nop
xchg
inc
ret
jb
out
test
pop
addr16
fldcw
lahf
mov
scas
outsb
pop
adc
cmp
out
adc
mov
stos
dec
xor
out
cli
int3
sarl
bound
jbe
sahf
sbb
pushf
movsb
jmp
fwait
sbb
sbb
lcall
dec
mov
rolb
push
and
adc
jle
in
aas
sub
sahf
mov
in
lock
imul
aas
inc
add
inc
sub
mov
or
popf
ret
dec
push
lods
scas
push
dec
inc
mov
mov
add
hlt
js
lods
or
adc
cmpxchg
push
lds
sub
xor
clc
das
gs
add
lcall
movsb
bound
gs
mov
lds
sbb
push
push
movsl
out
mov
pop
cmpsl
les
cmp
fiaddl
mov
xchg
jnp
xor
adc
ret
or
dec
sub
xchg
in
xchg
loop
sarb
ss
loop
stc
bound
and
jp
repnz
mov
scas
mov
xor
push
adc
mov
inc
mov
pop
int
loop
repnz
cli
sub
inc
cmp
fdivrp
jmp
shl
pop
xchg
ret
sbbb
popf
loopne
or
dec
mov
in
daa
push
cmp
pop
imul
adc
xor
test
dec
scas
iret
loopne
jne
jp
xor
or
jno
dec
inc
scas
or
into
iret
add
and
adc
inc
ja
adcb
ss
jae
ss
insb
add
cmp
aaa
lock
out
lds
loope
xchg
and
leave
jae
nop
cli
dec
xor
xchg
mov
cmpsl
mov
sub
inc
adc
cli
jg
shll
std
notl
and
test
ds
jp
imul
or
fdivs
inc
mov
jne
cmp
pop
loope
pusha
scas
and
jnp
sbb
fimull
mov
loop
sub
shll
imul
inc
out
das
pop
fwait
out
inc
and
sti
adc
xor
cmovo
scas
dec
or
es
in
hlt
and
pop
mov
jb
push
sub
or
inc
into
or
sbb
inc
add
in
add
sub
popa
mov
sti
push
test
insb
mov
pop
dec
mov
leave
lods
pop
sub
outsb
out
xchg
cmc
mov
bnd
subb
cmp
movsl
imul
pop
sbb
nop
repz
mov
cli
fistpll
xor
sbb
nop
sbb
sbb
jnp
jb
iret
and
les
pop
jmp
xor
inc
push
jae
insl
sbb
cmp
rorl
xchg
rolb
sub
inc
mov
ljmp
and
xchg
shlb
jmp
xorl
dec
scas
mov
jge
insl
mov
stc
add
shll
mov
pop
pop
testb
push
mov
int3
lahf
mov
fdivrl
add
inc
mov
iret
adc
and
cmp
cmp
cwtl
insb
dec
aaa
sbb
xor
pop
lret
jge
pushf
mov
and
and
xchg
cltd
add
stos
lods
add
adc
sub
dec
leave
add
sub
sti
add
xchg
js
das
jle
pop
xacquire
leave
push
add
sarl
icebp
push
fidivrl
clc
jnp
add
or
mov
add
lahf
ffree
push
test
sub
push
mov
pop
stc
push
adc
and
cmp
jns
inc
sbb
insb
and
sarb
pop
stos
or
and
rcrb
and
fcompl
jnp
inc
inc
mov
clc
in
jae
cmpsl
fstl
jo
inc
icebp
add
push
roll
cmp
repz
push
stos
add
fcoms
cmp
lods
push
pop
sbb
shlb
push
pop
mov
sub
cld
cmc
pop
loop
and
ss
lds
cli
push
mov
cli
lds
sbb
adc
ss
test
popf
sahf
cli
sahf
push
stos
popf
dec
ljmp
sbb
into
or
mov
xor
jno
dec
aaa
test
int3
mov
sarl
cmpsl
shlb
into
push
xor
mov
inc
sbb
pushf
jbe
sbb
mov
in
movb
inc
cmp
pop
adc
cs
mov
jne
mov
sbb
jge
pop
mov
push
shl
pop
pop
cmpsl
mov
clc
mov
sbb
cltd
jae
ljmp
push
sbb
sub
imul
mov
sub
cwtl
pusha
sbb
call
pop
ss
mov
xchg
loope
repnz
sbb
stc
adc
jg
jno
push
insl
inc
out
inc
jns
aad
js
push
outsb
repnz
test
leave
pushf
stos
mov
jl
in
int3
mov
mov
or
mov
ds
jnp
inc
imul
cmp
aas
dec
sub
mov
aam
mov
adc
ret
inc
cli
xchg
dec
into
adc
adc
dec
not
xor
inc
sbb
divl
add
pop
adc
idivb
xchg
xchg
adc
add
push
cmp
aad
loopne
or
pop
or
xchg
xor
lock
push
push
sbbb
out
inc
sub
insl
or
pop
sub
daa
pop
push
dec
mov
inc
fistpl
xor
repnz
mov
jg
rorl
jmp
jno
push
sahf
jbe
test
pop
or
outsb
sub
repnz
lcall
fcmovnb
movl
mov
dec
ret
pop
add
ja
push
lea
push
dec
mov
add
jae
daa
inc
arpl
loope
inc
xor
loopne
jns
push
mov
fwait
pushf
jl
movsl
mov
in
mov
xlat
xchg
fmuls
mov
movb
xchg
cmp
cmpsb
int
mov
hlt
sbb
sbb
popa
adc
hlt
dec
sbb
fiadds
stos
xchg
mov
jl
hlt
xchg
or
and
fcompl
cli
gs
cwtl
add
sbb
xor
xlat
mov
cmc
sub
pop
shrl
mov
fs
add
and
mov
or
pop
cwtl
pop
xor
inc
xor
es
or
lahf
std
dec
sahf
and
dec
jle
jae
cmp
ljmp
das
xor
iret
pop
das
test
pop
push
insb
and
shr
ja
pop
inc
lret
sbbb
out
call
inc
or
cmp
inc
mov
adc
sar
inc
fsubrl
stc
cmpsb
pop
bound
loopne
cmp
inc
aas
cwtl
movsb
das
push
add
outsl
mov
out
call
jns
fucomi
shr
fimuls
pop
and
stc
adcl
rclb
xor
cmp
fld
cli
int
jne
cmpsl
std
mov
push
jbe
lods
mul
lahf
hlt
jl
leave
push
bound
jmp
ja
and
movsb
inc
xchg
rolb
jbe
dec
adc
dec
mov
addr16
loope
push
sub
inc
mov
add
out
xor
or
out
sbb
loope
xor
jnp
std
mov
mov
cli
hlt
jle
mov
addb
mov
enter
roll
or
sbb
mov
sub
shrl
cmp
sub
mov
mov
push
push
lea
lods
lods
clc
xchg
mov
fwait
call
in
mov
rcrb
out
dec
jb
stos
xor
lds
and
push
outsl
popf
je
pop
popf
cmp
dec
pop
pop
add
pop
push
dec
sub
mov
popa
push
imul
mov
rcll
lds
jle
inc
lret
jnp
jb
in
repz
or
xchg
push
cli
mov
jl
inc
mov
stc
scas
mov
fildll
dec
push
test
jmp
or
mov
jp
popf
mov
xor
add
mov
not
mov
sbb
adc
roll
jecxz
cs
inc
sbb
clc
test
int
push
sbb
lcall
adc
mov
sbb
pop
in
dec
mov
shlb
xchg
cmpsb
ljmp
arpl
in
flds
jne
dec
shrl
in
mov
pop
mov
cli
mov
adc
lock
inc
xor
rorl
jmp
jecxz
or
inc
sarw
jmp
pop
rol
lret
lock
jmp
btr
iret
pusha
je
cld
dec
push
cmp
ret
mov
pop
xchg
nop
mov
xorb
cmp
aaa
add
ss
aad
imul
mov
push
and
rclb
pop
jl
xor
inc
daa
or
pop
lret
insl
xor
scas
jge
cmpsb
sti
jg
jp
pop
lret
idivl
push
xor
or
xchg
cltd
pop
xchg
mov
lea
pop
int
popa
into
decb
pop
adc
adc
jb
imul
sbb
cltd
mov
push
xchg
enter
pop
sub
pushf
xchg
arpl
shrb
pop
enter
push
rcrb
xchg
push
pop
incl
addb
push
add
popf
bound
int3
negl
cld
jno
lods
and
ret
aaa
cmpsb
enter
inc
push
sbb
enter
sti
mov
movb
pop
dec
push
idivb
xor
je
sub
mov
sar
sahf
add
popa
xchg
jno
lock
inc
div
je
mov
test
sbb
in
sbb
mov
pushf
test
dec
sub
and
cmpsb
fidivl
rcl
out
fwait
push
sbb
inc
mov
push
sub
pushf
and
hlt
jne
clc
addr16
xlat
movsl
jmp
add
push
add
adc
nop
or
mov
lahf
insl
dec
daa
lds
int3
sub
jo
hlt
xor
inc
lret
test
mov
xchg
inc
inc
leave
sbb
mov
ror
and
lds
lret
and
shll
addr16
mov
push
pop
jmp
mov
sbb
mov
mov
stos
arpl
cld
imul
fmuls
imul
fndisi(8087
mov
push
movsl
jno
leave
sbb
jo
fnstenv
popa
mov
jo
mov
pop
ljmp
push
xor
mov
and
mov
imul
popf
adc
jb
faddl
daa
roll
imul
xchg
les
scas
xor
ss
aas
mov
pop
out
sub
pop
sub
dec
add
sahf
and
push
sti
testl
inc
push
jg
pusha
pop
loop
sub
mov
lods
pop
or
pop
stos
fucomi
xorl
clc
jmp
cmp
outsl
outsb
orb
jp
push
push
cmp
fsubr
mov
stos
fidivs
loopne
je
jmp
mov
or
jo
cs
lahf
mov
xor
pop
mov
xchg
daa
mov
pop
rcl
xchg
adc
pop
mov
ljmp
movsl
das
adc
jg
sub
xor
addl
jmp
inc
jecxz
das
into
out
jnp
xlat
and
mov
scas
jne
cmp
pop
scas
cmpl
xor
push
pop
xor
fdivrs
ret
orl
push
das
div
mov
sarl
popf
in
sbb
sbb
xchg
push
mov
daa
xchg
mov
shlb
pop
cmp
sarl
push
cmp
scas
mov
sub
push
test
add
xor
test
mov
mov
orl
xchg
shrb
xor
adc
sub
mov
inc
aad
mov
dec
dec
xchg
sar
cmp
inc
orb
jmp
test
sub
adc
mov
xchg
stos
push
addl
leave
jne
sbb
dec
xchg
cltd
jl
inc
cmp
add
movsl
stos
lret
cltd
dec
xorb
loop
outsb
cwtl
xchg
in
pusha
cmp
dec
fimull
jecxz
pop
loop
jge
xor
fisubl
inc
jecxz
test
shlb
cli
mov
mov
stos
jl
ja
rorl
lcall
push
xabort
push
mov
mov
pop
mov
xor
lret
in
data16
popf
xor
scas
fdivr
shr
das
push
xchg
add
in
xor
fldl
sbb
or
aad
sbb
dec
into
or
or
iret
idivb
popf
shll
nop
jg
xchg
mov
div
cmpsb
sbb
cmp
mov
gs
insb
pop
mov
addr16
add
in
lcall
cld
jnp
movsb
scas
mov
ds
mov
cmpsb
cltd
mov
pop
adc
xchg
jb
imul
sbb
js
fsts
xor
jne
sub
btr
jp
out
add
hlt
and
movsb
xlat
cli
daa
mov
pop
and
outsb
cld
inc
cltd
dec
jecxz
aas
fidivrl
out
in
pop
xchg
loop
rolb
xor
jbe
mov
clc
sbb
movsb
test
addb
cld
mov
sub
or
imul
pop
das
cmp
insl
inc
popf
mov
adc
xchg
push
je
out
fldl
xchg
addr16
repz
gs
add
dec
fxch
int
and
mov
insl
xorb
inc
shl
fs
lods
or
cmpsl
sub
pop
jmp
mov
arpl
mov
sub
outsl
pop
add
push
scas
pop
mov
shld
push
or
arpl
xor
mov
mov
or
in
push
bound
ret
push
and
xor
or
xor
int3
mov
out
pop
sbb
lcall
fs
testb
ds
inc
lea
cmp
out
xchg
pop
mov
pop
outsl
cmc
and
stos
adcl
xchg
mov
adc
xchg
push
add
pop
mov
push
add
pop
rcr
ljmp
jl
pop
push
fildll
xor
dec
add
fisubl
movsb
in
lock
xorb
iret
fcoms
lods
int3
cmp
xchg
pushf
and
pusha
push
mov
xchg
and
jmp
pushf
lds
or
jle
das
add
dec
shr
inc
test
adc
mov
and
scas
push
mov
std
xchg
dec
push
cmpsb
pop
pop
daa
wbinvd
mov
cltd
mov
pop
ret
mov
fsubl
cmpsb
in
aam
jge
xor
mov
dec
sbb
push
push
ljmp
jge
cmp
stos
int
lahf
fwait
out
and
into
mov
jae
push
mov
subb
iret
pushf
dec
mov
ljmp
movsl
outsl
jl,pn
inc
add
add
jno
xor
push
or
dec
sbb
repz
fstpl
mov
adc
mov
lds
mov
sahf
mov
jecxz
icebp
cwtl
cmpb
add
push
in
cs
dec
xor
sbbl
sahf
mov
pop
add
shlb
lds
jno
dec
les
test
mov
dec
scas
out
lret
adc
inc
inc
xchg
imul
adc
movsl
jbe
ret
xlat
mov
mov
or
inc
or
cmpsl
pushf
cmp
cmpsl
push
add
lahf
hlt
or
pop
cld
cld
mov
lret
push
mov
adc
sub
add
dec
imul
jecxz
or
daa
in
scas
cmc
sbb
cld
dec
flds
and
ja
mov
xchg
push
and
sub
dec
and
mov
mov
mov
cltd
shl
in
rcr
cwtl
pop
mov
repz
ficomps
cmp
cmp
insb
inc
inc
push
aam
jbe
enter
jp
xor
push
mov
stos
pop
push
mov
repz
mov
test
insb
fidivrl
xor
push
xor
fisttpll
inc
or
aam
push
inc
fisubrl
pop
in
xor
inc
lods
in
push
mov
cmp
pop
aaa
sbb
mov
cltd
test
xor
outsb
outsb
jecxz
inc
into
popa
pop
add
incl
rolb
popa
int3
enter
movsb
mov
jo
inc
mov
xlat
movsb
nop
cs
repz
and
mov
leave
mov
adc
mov
cmp
inc
dec
icebp
jmp
imul
inc
pop
cmc
fistpll
mov
dec
cli
xchg
ret
add
cltd
jae
xor
movsl
jmp
testb
shl
andl
jp
mov
sahf
jnp
mov
ret
mov
cwtl
and
mov
cmp
imul
icebp
or
inc
stos
or
andb
fdivrl
call
sbb
sbb
loop
cltd
ljmp
mov
sbb
daa
inc
lret
xchg
out
iret
sbb
mov
xchg
adc
call
scas
fdiv
cmc
stc
inc
shlb
test
sarb
sub
cmp
cmpsb
int3
pop
cmpsl
in
addl
push
out
or
add
ret
lods
cmp
pop
lret
out
dec
into
mov
jg
push
inc
arpl
dec
sbb
dec
insb
jmp
sti
push
mov
jmp
push
adc
shl
jl
inc
xor
sbb
or
push
fcompl
pop
xchg
mov
lret
jp
adcb
xor
lds
jmp
adc
data16
out
push
adc
aas
push
mull
inc
sbb
inc
jl
xor
push
je
sub
mov
js
ret
or
sti
mov
or
push
sub
push
add
mov
pop
jmp
xchg
mov
dec
dec
xlat
dec
jns
ficomps
sbb
cli
nop
xchg
mov
addr16
sbb
push
push
sbb
dec
add
add
insb
xor
fcomps
pop
stc
inc
shrl
les
sbb
and
lahf
push
ret
mov
mov
cmp
sub
or
test
xchg
stos
lahf
inc
leave
es
add
pusha
mov
in
les
lcall
stos
sub
mov
scas
cli
sub
inc
fwait
scas
sbb
jmp
jg
inc
sarl
shlb
jmp
cltd
mov
push
mov
add
aam
or
outsb
call
pop
in
clc
arpl
mov
xor
outsb
movsl
cmc
ss
pop
in
dec
mov
flds
arpl
or
repz
pop
in
enter
jge
cs
hlt
add
push
mov
add
outsb
into
jg
ljmp
fadd
ljmp
pusha
cmpsb
repnz
mov
jbe
adc
push
add
push
mov
xor
filds
aad
clc
lock
pop
or
shlb
icebp
cli
je
jo
jbe
dec
cmp
dec
inc
mov
mov
mov
adc
push
inc
scas
adc
and
push
xor
out
add
or
lret
and
and
mov
mulb
jns
in
into
and
jno
inc
leave
adc
pop
add
xor
mov
fsts
cmp
sub
inc
add
out
cmp
negl
shlb
fstps
repnz
testb
std
mov
mov
add
lret
jns
rcl
lret
pushf
dec
aas
or
in
adc
je
outsb
ret
repz
insl
js
sub
mov
sahf
or
dec
stos
xchg
aad
mov
ljmp
xchg
push
cwtl
pop
xchg
push
or
lea
notl
fists
subb
hlt
push
jle
sub
fisttpll
es
pop
cwtl
popa
movsl
mov
push
inc
adc
cmp
stc
fs
into
in
mov
mov
repnz
xlat
lock
loope
pop
std
fistl
pop
dec
push
sbbb
push
adc
sahf
scas
adc
mov
jae
pop
sub
jge
inc
insb
or
mov
hlt
test
nop
sarl
stos
adc
dec
dec
aaa
insl
imul
out
ja
inc
or
xchg
jb
xchg
nop
add
fldl
orb
out
cmpsb
push
xchg
xchg
dec
and
sar
dec
add
jns
bound
jo
cs
fwait
das
int
call
pushf
adc
hlt
sub
jp
cltd
adc
pop
and
jbe
push
xchg
loopne
jecxz
scas
loop
pop
mov
fucomip
icebp
bound
or
popa
imul
mov
sbb
cmc
inc
xor
pop
je
sbb
xor
lods
ret
inc
lret
mov
mov
mov
test
pop
aas
cmc
int3
mov
fidivl
insl
enter
imull
pop
pop
sub
or
sti
daa
inc
and
add
sbb
push
and
repnz
pop
lea
push
cmp
jo
rcrb
in
aas
pop
sbb
js
lods
push
fidivrs
dec
xor
cmp
mov
xlat
pop
add
dec
scas
test
iret
aas
lcall
lea
xchg
fisttpl
outsb
nop
test
cmp
ljmp
mov
mov
inc
popa
adc
data16
jle
mov
in
sub
cwtl
and
mov
movsb
insl
xlat
addr16
jecxz
cmp
inc
imul
hlt
dec
lock
mov
sahf
das
in
pop
lahf
push
lods
sub
stos
fsub
inc
lds
push
inc
push
fimull
cmpb
push
push
mov
or
add
arpl
add
out
or
and
out
add
cmp
mov
mov
cltd
in
in
cmp
pop
mov
push
push
je
mov
adc
call
sbb
aaa
test
sbb
push
ss
or
popa
shll
std
mov
into
scas
dec
rol
mov
add
imul
daa
scas
mov
push
int3
cmc
popa
jbe
daa
inc
imulb
movsl
sahf
ja,pn
or
jg
adc
lods
push
scas
pop
lea
enter
mov
jg
jmp
pop
ds
xchg
push
mov
fisubl
jnp
inc
add
movsl
xchg
mov
push
fwait
sbb
add
lret
cmpsb
jne
mov
mov
add
loop
repnz
mov
test
sbb
iret
in
dec
test
push
fdivs
loope
mov
xor
mov
cmpsb
pop
int
lret
test
mov
mov
mov
and
ret
fstpl
mov
arpl
mov
adc
sahf
jmp
jne
push
add
gs
sbbb
dec
test
outsb
mov
add
arpl
or
je
nop
mov
push
xchg
adc
add
pop
mov
dec
dec
mov
lds
push
and
and
pop
adc
aam
arpl
test
les
gs
ljmp
adc
ja
pop
mov
mov
xchg
shrd
mov
insb
inc
jns
scas
dec
sub
mov
cltd
inc
sbb
jno
test
sbbl
test
dec
sbb
xor
jge
push
cs
push
enter
dec
test
fmuls
sub
sub
lcall
and
repnz
aam
jo
and
std
xchg
jbe
aaa
shr
nop
lcall
xchg
push
inc
movsb
divl
jecxz
cli
mov
je
jbe
mov
sub
push
movsl
inc
cltd
mov
out
enter
xor
leave
pop
jmp
sarb
pushw
xchg
pop
pusha
jmp
adc
orl
es
push
jns
jl
aad
inc
inc
repnz
pop
scas
sbb
mov
loop
sbb
lods
or
lret
mov
es
push
gs
out
insl
test
shrb
leave
xchg
mov
ja
movsl
cmpb
es
lock
sti
sbb
int
loopne
addr16
push
jb
adc
bound
sub
mov
sub
xchg
dec
icebp
repz
je
adc
mov
adc
xor
lea
cltd
adc
lret
fdivrl
push
lcall
mov
or
loopne
mov
lea
mov
lret
sbb
xchg
cmp
pop
cs
lods
add
pop
fldcw
and
lds
cmp
dec
stos
add
test
mov
rorl
out
les
pop
push
or
outsl
cmpsb
iret
out
scas
int
mov
nop
add
punpckhdq
les
clc
js
outsl
loope
cs
mov
adc
lea
in
push
fbstp
bnd
dec
and
mov
adcl
pop
pop
add
ficoms
dec
aam
push
jp
fwait
pop
mov
mov
mov
sbb
mov
pop
cmpsb
cmp
sbb
aad
incb
ja
inc
movsb
popl
pop
push
jnp
pop
inc
xchg
into
das
jl
mov
fsts
std
leave
cli
xor
loopne
pop
test
movsb
dec
xor
sub
stc
insl
push
scas
fcompp
sub
aaa
bound
aaa
pop
push
fwait
mov
or
push
ret
mov
mov
pusha
sbb
and
inc
inc
repz
jno
jo
and
mov
jns
jg
sub
mov
arpl
insl
mov
xchg
lods
xchg
stc
enter
mov
popa
mov
and
add
stos
repnz
scas
jbe
pop
sub
dec
sub
push
das
into
out
sbb
add
push
outsl
push
cmp
fiadds
sbb
leave
jg
dec
push
sub
mov
push
mov
mov
js
nop
nop
inc
roll
mov
cltd
xchg
mov
ror
leave
adc
aas
mov
rcrb
imul
or
pop
pop
cmp
stos
in
into
xor
movsl
xor
push
testl
jmp
pushf
fisttpll
sbbl
into
mov
mov
stc
mov
inc
shlb
mov
rorb
notl
mov
dec
std
fstp
mov
std
es
stos
into
enter
push
loop
mov
push
lods
sub
cmp
pop
jmp
push
out
ja
adc
and
inc
sub
nop
inc
mov
jo
mov
xchg
js
add
mov
mov
mov
data16
cmp
scas
rcrb
push
pop
movlps
adcb
shll
ret
add
cmp
xchg
push
xor
add
test
sbb
sbb
lahf
sbb
mov
in
in
mov
push
out
scas
inc
aam
mov
enter
addr16
jb
repz
inc
jbe
in
pop
pop
sbb
push
sarl
out
mov
mov
das
mov
sahf
lret
jbe
fld
jo
jp
cs
scas
sbb
inc
pop
sarb
push
enter
mov
pop
lea
imul
lahf
mov
and
int3
cmp
pop
and
inc
ja
xor
ljmp
test
ret
mov
and
mov
dec
mull
jae
cmp
fstps
or
mov
das
add
and
leave
jo
mov
jmp
clc
inc
sbb
cmc
mov
iret
xor
or
scas
mov
test
mov
cmp
stos
adc
xor
insl
outsb
push
inc
pop
pushf
fsts
jp
scas
fsubs
add
fwait
lahf
pop
mov
shrl
jo
int3
movb
test
inc
js
cmovle
ret
jmp
mov
rclb
loope
mov
push
inc
push
das
insl
roll
pop
mov
add
loop
and
insb
test
sahf
and
enter
call
mov
dec
push
test
lret
jns
shll
sbb
jbe
fcmovnb
out
loop
scas
insb
nop
imul
daa
out
lds
or
mov
negb
dec
mov
rcr
outsb
sbb
pop
out
inc
xor
jnp
mov
loopne
scas
inc
mov
lock
mov
orb
cmp
xchg
das
push
fdiv
into
and
cmp
inc
cmpsl
mov
sarb
fcmovb
sub
pusha
xchg
xchg
mov
popw
std
js
nop
adc
push
rclb
mov
xchg
xchg
mov
dec
jne
pushf
mov
push
jecxz
fildll
bound
cmpsb
pop
repnz
cltd
incb
sub
or
push
sub
fcomps
mov
inc
addr16
sbb
mov
lods
imul
rcll
mov
mov
and
push
adc
pop
dec
loope
xchg
sbb
add
adc
popa
out
mov
test
repz
jecxz
xchg
lret
int
pop
push
into
xchg
inc
mov
push
add
sbb
adc
popa
cmpsb
dec
dec
lret
adc
xor
ss
in
xor
dec
bound
pop
sub
pop
lods
jnp
mov
stc
pop
cli
xor
jb
xchg
push
push
jg
mov
mov
loope
cmpsb
lds
cmp
jl
pop
inc
daa
cwtl
call
mov
shrl
repz
dec
xor
push
not
leave
orb
insb
scas
fwait
mov
xor
pop
test
lods
jae
add
in
gs
xchg
cmpsb
push
mov
push
cmc
ljmp
pop
rcl
add
or
adc
and
movsb
stos
xchg
ret
sbb
mov
lea
jo
mov
lea
sarb
mov
in
jp
fiadds
dec
jg
push
lret
es
pushl
inc
mov
sbb
scas
xor
addr16
movsl
xchg
loope
ss
cmp
push
ljmp
dec
loope
dec
jle
loope
ficoms
lcall
or
mulps
pop
jl
mov
shlb
lods
rcrb
ss
sub
sbb
adc
or
ja
testb
push
cmp
scas
inc
rorb
out
inc
cmp
lret
and
or
jns
dec
xchg
xorl
or
jo
pusha
pusha
inc
push
ss
dec
and
push
lock
jmp
adcb
imul
shlb
clc
or
and
inc
jge
sbb
push
jns
aaa
sub
inc
push
dec
mov
cmp
daa
sbb
pop
jne
xor
mov
cmp
icebp
jno
std
fistl
push
outsl
cmp
movsb
into
or
into
aaa
sarb
outsl
loope
fildll
roll
repnz
ljmp
pushf
xor
mov
icebp
sub
push
cld
fstl
lret
cld
adc
imul
jp
lcall
pop
lds
inc
sbb
outsb
jns
scas
lods
mov
enter
int3
jg
xchg
clc
push
out
add
sarb
insl
jo
hlt
fmulp
xor
mov
fstpl
lahf
xor
out
bound
xchg
adc
jo
push
daa
cmp
lods
cmp
inc
xor
popa
jg
cmp
fidivrs
test
xchg
and
scas
mov
mov
mov
sbb
movsl
dec
out
sub
cmp
xor
in
fisttps
and
add
or
insb
data16
fsubs
jb
sub
cmp
mov
mov
dec
inc
out
scas
pushf
lods
fsubr
inc
jno
cmp
loopne
ret
mov
jno
mov
imul
inc
insb
sahf
push
sub
jns
jno
mov
shl
add
cltd
xchg
jl
or
push
sbb
imulb
cs
mov
in
pop
sahf
ret
xlat
jns
mov
sti
pop
sbb
sbb
stc
or
nop
into
jmp
scas
std
popf
pop
in
arpl
jge
out
ja
cli
jbe
out
push
lods
xor
adc
lret
movsbl
aas
xchg
pop
push
mov
dec
cld
lahf
sbbl
sbb
push
outsl
stc
jecxz
inc
add
sahf
scas
dec
pop
sbb
adc
mov
fdivrl
lock
push
and
sti
add
popa
das
pop
xlat
mov
or
inc
cltd
andl
fdivs
mov
pushf
stos
and
jmp
lret
xchg
daa
arpl
bound
and
add
cmp
adc
loopne
dec
dec
dec
scas
cli
pop
mov
lret
jecxz
leave
mov
mov
aaa
adc
mov
pushfw
jg
and
out
xchg
sti
pminub
inc
int
adc
fucomip
mov
mov
add
data16
push
fdivp
sbb
cli
xchg
ret
inc
or
xor
js
pop
faddl
mov
mov
jnp
xchg
lret
ficomps
popf
repnz
jae
sbbl
jmp
stos
movb
add
xchg
das
mov
data16
aad
fsubr
fs
scas
sar
push
jle
sbb
stos
push
cmp
les
test
dec
adc
dec
cmp
jnp
adc
or
negb
filds
punpcklbw
popf
jl
and
mov
rcl
out
mov
sbb
aad
jmp
andl
pop
push
inc
inc
mov
inc
int
xor
addr16
loope
arpl
mov
lahf
jnp
cmc
stos
push
jge
push
icebp
ss
cld
sahf
lods
sbb
or
repnz
imul
cmp
aam
and
inc
cmpsl
add
xor
mov
mov
pop
and
push
xorb
mov
mov
into
nop
push
xor
or
add
mulb
sbb
push
lret
mov
int3
dec
jmp
ljmp
fwait
xlat
inc
pop
pusha
mov
outsl
ret
cmp
add
gs
or
in
lods
scas
ds
outsb
dec
add
addr16
push
int
and
dec
or
dec
adc
ds
jno
rorl
mov
jnp
es
es
mov
lds
xlat
out
xchg
lock
cmc
push
mov
inc
xchg
fwait
rcrl
add
sar
xor
xlat
stos
je
jmp
lahf
mov
inc
mov
andl
stc
mov
divl
add
in
stos
out
out
cmc
jg
mov
dec
xor
js
mov
mov
cmp
inc
cwtl
inc
adc
push
popf
jae
repnz
sub
fsubrl
cld
xchg
cmc
scas
popf
pop
sub
mov
adc
xlat
pusha
dec
out
or
movsb
mov
popa
push
scas
ss
sbb
in
xchg
jo
imul
cltd
dec
jne
lret
lds
cmp
out
sub
pushf
jle
ret
mov
mov
sub
cmp
icebp
and
jl
xor
mov
cmp
insl
mov
ffreep
lock
sub
xor
xorb
push
fistpll
mov
movsb
fiadds
push
push
sub
outsl
cmpsl
xchg
fwait
lret
jbe
mov
aam
and
std
fiaddl
cmc
cmp
mov
lret
xchg
test
xchg
sti
mov
pop
les
push
add
aaa
lods
mov
push
fsubl
sti
pop
lds
int
jo
jge
cltd
imul
add
test
lods
and
dec
dec
sti
mov
sbb
pop
mov
xor
mov
sbb
adc
cmp
movsb
out
add
test
out
cs
cmp
push
cmp
mov
pop
leave
sbb
addl
aas
pop
mov
push
aaa
in
jo
or
insb
sti
movsb
loop
std
cmp
fwait
or
jo
and
mov
in
inc
mov
push
lahf
jp
lock
test
les
and
sbb
inc
rolb
call
xor
add
int3
mov
fs
sub
cmpb
mov
cmc
adc
lcall
jno
jae
push
mov
pop
inc
mov
adcl
scas
div
inc
ss
sti
fcoml
add
daa
out
stc
add
inc
sub
stos
pusha
inc
adc
pop
sbb
jmp
lahf
divl
cmpl
push
arpl
mov
jecxz
divl
stos
or
pusha
int3
ret
push
popa
mov
enter
xchg
inc
mov
sub
outsl
push
rclb
jno
leave
xchg
adc
jbe
pop
aas
stos
push
push
xchg
cld
fistpll
out
daa
jb
xchg
pop
mov
in
cmpsl
push
sbb
loop
mov
inc
and
sahf
dec
jne
sbb
les
dec
loope
aam
stos
mov
xchg
outsb
and
imul
fcmovu
adc
lock
insb
aas
cmp
dec
xor
cmp
sbb
inc
int
mov
hlt
sbb
jns
lods
test
ffree
ja
fcmove
push
fnstsw
pushf
fildl
jp
out
andl
and
call
jo
push
fwait
mov
aam
mov
jmp
mov
jle
nop
cwtl
in
cmpsl
lcall
or
jmp
pusha
pop
jb
pop
out
xchg
mov
ret
push
sub
cli
and
lcall
cltd
add
mov
fst
icebp
add
sbb
stos
add
cld
mov
cmp
mov
pop
fcmove
popa
sbb
pop
out
int3
mov
xchg
dec
xchg
push
pop
xor
adc
dec
movsl
push
bound
ficomps
pop
or
mov
adc
mov
xor
ret
loop
or
and
mov
fs
xor
pop
mov
adc
ret
cmpsb
rorb
adc
adc
xchg
imulb
sub
cmc
mov
ja
lea
test
movl
and
daa
jnp
aad
push
mov
clc
sbbl
or
push
popf
scas
addr16
mov
ret
mov
jp
sbb
or
and
jle
insb
xchg
pop
and
fmull
in
mov
popl
push
mov
in
xchg
mov
cmp
mov
cmp
imul
push
out
popf
mov
cmpsb
int
pop
aad
jg
es
mov
mov
sti
stos
rorb
frstor
xchg
xor
cmp
mov
sbb
test
mov
push
push
imul
xor
xor
shrb
mov
gs
cmp
sbb
movsl
or
and
pop
cld
cmp
cmp
test
mov
and
or
sbb
outsb
pop
adc
pusha
and
pop
decb
in
jmp
jo
lahf
shrb
xchg
xchg
pop
push
lock
mov
mov
out
mov
lcall
sbb
int3
cmp
and
movb
adcl
jb
mov
cmpsb
je
sub
adc
fldt
out
sub
add
mov
roll
inc
xor
cld
out
add
dec
popf
int
insl
iret
jae
mov
je
dec
add
adc
ss
inc
es
clc
xchg
ljmp
jl
xchg
ss
xchg
scas
inc
insl
lods
and
and
lods
mov
shlb
mov
out
cmp
jge
cmp
popf
fists
xor
mov
push
inc
fucom
or
cmpsb
pop
aaa
aas
mov
jle
jo
push
lds
push
cmp
xchg
into
pushf
add
xchg
fsubrl
arpl
xor
movsb
test
or
push
sub
repnz
shlb
xor
mov
sbb
lret
out
clc
jl
inc
ret
idivl
mov
pop
xlat
jl
pop
and
popa
aam
fincstp
in
mov
test
stos
xor
pop
dec
jmp
mov
inc
cmp
mov
pusha
xlat
rcll
mov
sub
push
enter
dec
fnsave
aaa
orl
fs
adc
xor
aas
ret
shll
in
out
cmpb
lods
and
les
xor
dec
push
idivb
cwtl
ja
int
loopne
ljmp
sub
xchg
ljmp
pop
cs
mov
sub
out
mov
lea
scas
movsl
pushl
cs
add
ja
sbb
mov
enter
popf
jae
std
push
cmpl
adc
dec
jns
mov
mov
mov
out
cwtl
jo
pop
sbb
loopne
ja
out
into
inc
in
push
xchg
mov
bound
shl
scas
mov
mov
sub
xlat
ljmp
or
cltd
lahf
repnz
test
dec
aas
call
adc
shlb
or
sahf
aad
sbb
mov
lods
std
dec
pop
in
stos
test
fdivs
push
sub
iretw
enter
xchg
dec
outsl
andb
lret
push
sub
jge
mov
iret
inc
jmp
addr16
std
sti
orb
es
ror
pop
popl
inc
sarl
xchg
and
arpl
clc
cmpsl
jnp
jmp
imul
push
push
addr16
sub
inc
pop
mov
int3
movsb
pusha
and
or
xlat
push
movsb
and
pop
xorb
sub
lret
lcall
and
mov
ja
xchg
call
sbb
out
cwtl
mov
jo
ret
sbb
cmpl
or
pop
push
mov
pop
fistps
js
sub
xchg
neg
adc
adc
nop
jns
add
cmp
fists
mov
mov
cmp
stc
loop
ffreep
mov
xchg
push
xor
movsb
test
push
into
minps
fimuls
xchg
test
cltd
pop
jne
cmp
sahf
push
fsts
jae
loop
cmp
lea
aam
loope
jg
in
adc
movsl
dec
inc
cmp
fidivrs
dec
or
outsl
inc
add
and
aas
sub
sub
lcall
in
push
lret
push
pushl
mov
xor
das
sub
pop
mov
xor
cltd
popf
jne
ret
xlat
jno
cs
pop
enter
adc
sub
hlt
leave
cwtl
das
mov
psrlw
push
iret
scas
pop
movsl
jnp
mov
xor
cmp
add
lods
outsb
mov
mov
and
and
jb
xchg
hlt
jae
cmp
mov
rclb
xor
testb
add
filds
nop
rolb
mov
ja
pop
mov
xchg
stos
out
or
fcoml
js
arpl
or
add
xor
aas
xlat
cmpsb
mov
movb
popa
sbb
or
pop
dec
jge
cmc
xchg
aaa
leave
push
xor
add
lods
lcall
mov
cmpl
loop
cs
out
jne
test
std
movsb
mov
jmp
add
loop
insb
les
ss
jmp
int
lahf
sbb
pop
clc
jge
sub
dec
in
out
jge
cmp
ret
push
xor
pop
sub
jmp
ds
stos
dec
nop
mov
sbb
roll
mov
nop
aaa
jg
mov
push
and
je
add
adc
jg
idivb
pop
jbe
sbbl
gs
fnstenv
shll
mov
push
ljmp
mov
mov
jecxz
dec
mov
push
insl
loop
ss
add
sub
push
cmpsl
icebp
mov
in
lahf
ss
out
ret
and
jbe
subl
mov
outsl
hlt
pop
xchg
imul
push
stos
clc
push
mov
ss
je
cs
ficoml
jnp
rcll
and
mov
ret
out
or
and
and
xchg
add
pop
jmp
insb
sub
fildll
int
cltd
daa
add
mov
adc
test
cmpsb
in
add
cmp
imul
push
and
and
adc
nop
dec
ret
dec
outsl
hlt
aam
scas
adc
add
aas
lret
fimull
jb
out
rcl
add
lahf
push
sbb
outsb
xor
dec
xchg
subb
test
mov
jnp
jmp
mov
sbb
bound
fdivp
das
inc
test
cmp
sbb
sub
push
aas
adc
jo
adc
push
cmp
xchg
push
push
cltd
call
das
xlat
lods
dec
and
pusha
jmp
adc
sbb
jle
ficomps
je
movsb
pop
adc
xlat
mov
hlt
jbe
pushf
shrb
and
xor
jnp
mov
leave
pop
push
lds
dec
leave
mov
lret
adc
dec
stc
add
js
push
lcall
jp
adc
ss
scas
enter
mov
jecxz
mov
jnp
xor
leave
loope
loop
out
mov
test
aam
mov
and
cwtl
add
fwait
xchg
cmp
in
test
ret
inc
adc
dec
daa
jecxz
std
mov
repnz
ja
fmul
sbb
adc
and
test
addr16
or
aad
pop
add
xchg
or
loop
addr16
pop
dec
pop
mov
imul
jno
lret
dec
mov
lods
mov
fadd
push
loopne
int
popf
iret
and
arpl
pop
xor
sbb
je
in
push
mov
jbe
add
cli
mov
dec
in
cld
cmpl
mov
adc
cmp
filds
cmp
pop
fstps
push
jecxz
aaa
mov
mov
cmpsl
scas
mov
pop
push
call
out
pop
xor
mov
lret
dec
pop
jns
fmuls
imul
lcall
xor
cmp
out
imul
push
testl
cwtl
out
int3
add
sbb
pop
jne
mov
add
test
cmp
sahf
jbe
add
sbb
lret
sub
jbe
pop
pop
dec
adc
mov
jg
test
mov
adc
stos
cli
cld
mov
popf
ret
push
outsb
cmp
pop
xchg
jle
cmpxchg
clc
pop
int
bound
loopne
mov
inc
fdivrs
push
ret
out
lods
incb
mov
mov
or
pop
cmpsb
pop
test
pmullw
xchg
out
fwait
decl
ljmp
mov
shrb
and
fmuls
sub
fsub
ljmp
sbbl
clc
fstps
or
adc
out
push
les
in
ljmp
mov
outsl
fiadds
cmc
inc
mov
sbb
fstpt
cmp
nop
push
rorb
gs
add
adc
not
xor
mov
ljmp
dec
mov
lcall
in
pop
cmp
push
sahf
ds
lret
cwtl
lds
fiadds
or
imul
inc
or
test
es
fs
dec
scas
jno
jae
imul
idivl
mov
mov
mov
xor
das
cmpsb
je
dec
imul
xlat
xchg
dec
pop
dec
leave
xchg
mov
pop
icebp
sub
mov
jbe
bound
or
jp
inc
push
inc
andl
add
aaa
aad
lock
sub
cmpsb
adc
or
mov
pushf
push
mov
lret
fcmovbe
mov
je
mov
lods
mov
dec
jnp
fcmove
stc
pop
test
pusha
mov
nop
aaa
jbe
push
negl
test
cmp
addb
add
inc
aas
add
ret
inc
lahf
aaa
aas
add
jecxz
dec
mov
inc
test
insb
jg
mov
xchg
dec
xchg
fadds
xchg
pop
xor
cmpsl
mov
pop
fldt
das
jno
insl
mov
js
adc
and
adc
aaa
iret
jo
daa
arpl
sbb
mov
cmp
roll
xorb
push
adc
aad
add
jge
in
stc
jg
pop
xlat
push
xchg
loop
jae
push
test
push
lock
xchg
ss
cmp
jo
or
mov
imul
mov
mov
push
or
mov
out
cmp
sarb
mov
std
nop
mov
dec
ljmp
aad
hlt
mov
popf
mov
repz
ret
sub
inc
mov
sbb
sub
movsb
insl
xor
adc
inc
or
neg
pop
in
mov
imull
cmpsb
push
imul
call
pop
inc
xor
jp
mov
adc
repnz
cmc
sarl
sub
scas
pusha
jmp
ficoms
shl
jge
pop
cltd
and
jae
jecxz
in
and
cmp
sub
dec
inc
je
cmpsl
add
xorl
mov
bound
es
jecxz
pop
leave
xchg
mov
dec
rorl
jp
dec
inc
or
es
and
in
std
lock
adc
mov
xor
repz
jb
mov
sbb
jl
cmp
inc
je
popa
add
es
xchg
jbe
loop
repnz
mov
ret
sbb
out
sub
mov
fdivs
pusha
inc
cwtl
repz
outsl
sahf
jp
inc
cmpsl
pop
xlat
test
std
add
sbb
ja
jae
pusha
mov
pop
add
and
popa
inc
out
jmp
fidivrs
jns
ljmp
jle
jmp
mov
mov
and
mov
and
fstps
inc
and
sbb
sbb
mov
sub
and
push
inc
je
in
frstor
sub
push
mov
repnz
cmp
inc
cwtl
push
pop
xchg
jg
outsb
or
push
sbb
sub
mov
add
outsb
push
cli
js
pop
dec
fdivrs
loop
jecxz
scas
ja
xchg
mov
scas
ds
fs
fsubr
mov
into
mov
cmpb
cmpl
mov
inc
or
pop
nop
cmpsl
add
pusha
cld
int3
leave
dec
std
rcr
mov
pop
mov
sub
adc
pop
inc
loope
xchg
cmp
rorl
mov
dec
clc
cmp
jmp
aas
xchg
daa
iret
and
imul
jl
sbb
fnstenv
loope
sub
cmp
add
pop
mov
xchg
xorl
inc
sti
mov
pop
push
popf
inc
nop
jb
or
inc
dec
cmp
mov
fildl
xchg
jnp
outsb
xor
pusha
test
fistpll
dec
xor
or
jmp
push
lea
lock
or
pop
fisubrl
push
mov
mov
sbb
sahf
cmpsb
repz
xchg
xchg
mov
arpl
ret
mov
sub
inc
mov
pop
xlat
pop
xor
push
xor
mov
frstor
lea
sub
push
xor
sub
fidivl
lret
sti
xchg
jmp
push
adc
dec
test
insl
xchg
out
or
dec
dec
fwait
cli
mov
insb
pop
in
shrl
sub
cmpsb
pop
inc
fwait
xchg
add
lret
jnp
push
push
mov
pop
int3
iret
mov
idiv
icebp
nop
lea
mov
dec
inc
sbb
ljmp
test
mov
dec
lret
inc
ds
mov
and
mov
sbb
cli
xor
pop
mov
adc
inc
leave
inc
lcall
ds
dec
addr16
loop
jo
lret
mov
int
enter
mov
fisttps
icebp
or
adc
stos
jle
out
aaa
mov
nop
sbb
mov
clc
jb
xor
or
pop
std
jg
out
or
and
dec
insb
cwtl
push
jno
push
jg
jg
lea
pop
imul
xchg
fcoml
xor
idivl
mov
loope
mov
dec
popa
nop
jmp
cmp
popf
mov
scas
xchg
and
movsl
mov
dec
fisubs
ds
adcb
jns
rol
fdivl
fsubp
add
cmp
sub
aas
sti
cmp
shrl
in
test
cwtl
addr16
fistl
cmc
push
push
lock
jae,pn
pop
add
jp
aaa
lcall
cmp
dec
andl
dec
shll
mov
add
sub
xchg
outsl
ror
adc
pop
adc
aad
adc
stos
iret
inc
out
cltd
xchg
sub
outsl
add
add
iret
cmc
pop
mov
orb
and
sub
push
cmp
mov
ljmp
mov
lods
jo
lea
lret
es
jl
nop
das
out
fucom
or
sti
adc
lea
pop
insl
in
int3
jmp
test
xor
stos
icebp
or
cmp
jp
loope
insl
jae
jne
mov
idiv
mov
stc
adc
adcb
js
push
addl
adc
data16
fsubrs
xor
jno
test
push
pop
repz
push
leave
inc
call
rolb
cmp
xchg
ljmp
mov
sbb
sub
mov
stc
fsubrl
les
xor
push
sub
ljmp
orl
pop
jge
sbb
push
es
jle
push
xchg
pop
aam
xchg
xchg
hlt
inc
nop
insl
push
jns
xchg
jmp
bound
push
xchg
out
imul
mov
sbb
popa
mov
out
daa
or
sub
je
mov
mov
xlat
inc
mov
lcall
lahf
sbb
push
in
shrb
add
out
nop
ss
call
mov
nop
in
sub
push
inc
punpckhdq
iret
mov
or
in
fsubrs
xor
icebp
mov
mov
jg
stos
xchg
sarl
pop
pop
sbb
test
add
mov
or
inc
lods
push
mov
daa
pop
jnp
cmpsl
dec
or
sbbb
frstor
cltd
in
dec
jg
mov
in
sub
push
cmp
sbb
and
sbb
loopne
push
xchg
mov
cmp
enter
sub
mov
scas
test
inc
or
lods
movsl
dec
push
gs
scas
cmovo
add
cmp
and
iret
icebp
and
lahf
sahf
subl
xor
loop
stc
mov
add
xchg
xchg
icebp
pop
push
es
xor
jbe
scas
jno
aas
dec
addr16
dec
cmp
fsts
mov
dec
int3
mov
out
jle
rorl
rcrl
test
adc
je
movsl
je
push
ljmp
sub
jge
fisttps
mov
es
xor
mov
mov
jmp
jbe
outsb
jb
std
mov
sbb
push
push
loop
jnp
xor
inc
movsl
sahf
xor
xlat
loope
sbb
inc
mov
icebp
outsl
sbb
dec
sbb
test
int3
insl
add
pop
shll
wrmsr
cmp
cld
sub
mov
sub
jnp
pop
add
hlt
inc
lock
aad
mov
cmp
add
lret
gs
or
push
mov
scas
and
xor
rcr
idivb
sbb
mov
cmp
sbb
cmp
lods
test
mov
out
mov
pushf
xor
mov
sbb
cmp
movsb
add
add
sbb
mov
or
or
pop
mov
test
xchg
push
les
mull
adc
fwait
sahf
stos
clc
pushf
ljmp
and
out
xchg
push
push
loop
test
mov
cli
and
xor
jbe
out
icebp
lret
xchg
pop
mov
lds
or
ss
cwtl
xchg
xchg
jno
test
xchg
test
out
inc
fbld
test
dec
or
add
out
fwait
data16
pop
cmp
shll
jl
xor
cwtl
pop
push
sub
test
mov
push
sub
icebp
insl
fdivs
adc
mov
decb
xor
cmp
pop
xchg
inc
or
xor
xor
out
ficoms
insb
sbb
pop
stos
pop
jl
mov
mov
xchg
xorl
test
out
mov
lea
aaa
fsubrs
pop
adc
or
inc
cmp
imul
das
int
xor
mov
das
inc
mov
sub
mov
je
push
inc
in
sub
dec
stos
dec
mov
ret
gs
test
sbb
popa
lock
stc
int3
sub
out
push
xor
inc
push
je
mov
mov
outsl
sbb
clc
bnd
ffree
std
inc
test
negl
inc
iret
cbtw
mov
stos
les
lods
std
mov
push
call
pop
dec
add
test
pop
hlt
and
sbb
fnstcw
xor
out
mov
add
sbb
fwait
and
lea
mov
dec
or
aad
pop
hlt
test
push
mov
push
push
data16
clc
shlb
repnz
stc
dec
dec
mov
push
dec
xchg
ja
je
les
filds
cmpsl
xchg
cmp
xchg
pusha
inc
xchg
das
dec
or
pop
and
je
push
xorl
push
push
cld
sub
ret
xchg
xchg
jmp
scas
xor
test
lods
enterw
in
mov
aad
inc
into
lcall
inc
repz
dec
jo
xor
dec
loopne
or
pop
sbb
in
xchg
xor
inc
or
pop
pop
loopne
loope
sub
and
mov
dec
in
sbb
in
test
shll
sbb
dec
sarb
divl
push
cmpb
and
or
push
es
mov
dec
sbb
push
sub
stos
xor
lock
xchg
jbe
scas
pop
imul
jo
repnz
mov
push
loop
dec
dec
test
loopne,pt
mov
lods
mov
inc
mov
push
xchg
inc
xor
cmp
lret
js
aas
inc
scas
insb
stos
mov
das
push
ljmp
mov
fimull
mov
push
adc
ja
lcall
test
push
inc
imul
cmpl
les
xor
leave
add
xchg
jl
lea
mov
imul
xchg
xorl
sbb
rcr
aad
xchg
inc
int3
adc
dec
test
out
sub
jbe
mov
lret
negl
jnp
sti
jp
xlat
fs
dec
je
fwait
je
aam
or
rcrl
add
pop
jae
adc
or
insb
mov
sbb
imul
data16
push
xchg
lahf
out
adc
ja
adc
orb
jecxz
lds
dec
jge
pop
nop
sti
pop
aam
and
out
in
sbb
sub
adc
pop
cmp
pop
scas
cmp
xor
bound
cmpsb
cld
adc
sub
dec
cs
jno
xor
mov
fwait
jl
imul
lods
cmp
adc
lds
and
pop
cmc
lret
out
pushf
stos
repz
sub
mov
jno
pop
xchg
dec
mov
cltd
cs
pusha
xor
jg
xchg
cmpsb
in
outsb
call
std
inc
bts
sbbb
push
sbb
adc
xor
shll
inc
push
testb
hlt
andl
xchg
sub
cmp
mov
cmp
xchg
icebp
rol
push
ljmp
inc
dec
mov
xor
pop
mov
lea
in
mov
dec
adc
mov
pop
mov
movsb
movsl
mov
out
sbb
cltd
dec
dec
mov
or
xchg
hlt
xchg
fldln2
mov
mov
shlb
and
out
aad
push
mov
xchg
push
mov
jp
mov
xchg
or
or
arpl
push
lods
aas
jp,pn
fs
mov
and
ret
xlat
push
inc
mov
rorl
cmpsl
jae
or
xchg
xchg
pop
lock
lcall
or
mov
lcall
cwtl
fmull
jp
scas
cmp
and
sbb
sbb
outsl
add
movsb
xchg
es
pop
cmp
pop
ret
mov
pop
inc
pop
lock
jo,pt
aas
xchg
idivl
mov
sub
das
adc
test
pop
shl
pop
lcall
pop
push
out
sbb
jge
ret
bound
fwait
inc
pop
mov
dec
cs
call
mov
xlat
xchg
mov
rcll
fs
fldl
dec
mov
lahf
push
adc
test
mov
mov
pop
mov
or
shlb
out
mov
int
fsqrt
pop
mov
and
gs
mov
addl
add
jl
xor
jnp
je
mov
xor
xlat
rorb
cs
mov
lea
rcl
mov
aaa
inc
cs
sub
pop
test
jns
jno
or
lds
rclb
jge
fs
jle
push
pop
cmp
sbb
js
xor
cmp
jne
and
pop
daa
sbb
adc
push
imul
push
js
in
mov
xor
out
ljmp
test
add
lcall
push
mov
push
ret
ffreep
stos
imul
jns
pop
into
jne
xor
movsb
imul
daa
js
xorb
lret
add
push
mov
pop
insb
mov
push
pop
cmpsb
aas
mov
fsubp
mov
les
mov
or
imul
mov
nop
mov
jle
adc
das
add
sbb
loop
out
jg
cmp
jle
out
push
js
mov
pop
or
in
mov
mov
adc
jecxz
fisttpl
jecxz
cmc
xor
push
push
mov
pusha
cmp
rorl
stc
sbb
or
sbb
outsl
jle
add
in
movsl
push
lret
daa
popa
and
gs
into
imul
mov
mov
mov
inc
adc
or
cmc
adc
xor
fimull
jns
cmpb
js
inc
mov
push
mov
jns
push
jg
imul
sub
movsb
push
cmp
mov
or
mov
lret
hlt
add
sub
mov
sub
mov
push
pop
add
mov
scas
test
pop
ret
cmc
xchg
xchg
stc
or
cmp
fs
rolb
xchg
adc
imul
push
xor
data16
pop
cmpsl
sub
incl
push
xor
push
repz
lret
mov
cmpsl
hlt
lahf
loop
ds
out
sbb
lret
scas
call
sbb
xor
push
imul
test
in
rcl
sti
addl
push
sub
and
pushf
cmp
xor
cmpsb
inc
sub
dec
pop
mov
lods
sub
sbb
push
dec
mov
lahf
jmp
mov
outsl
hlt
pop
push
ja
add
mov
and
add
and
xlat
adc
mov
push
shrb
xor
popa
dec
repz
push
mov
out
or
pop
mov
mov
cmpsl
push
mov
jg
cmp
xchg
or
pop
push
pop
pop
nop
pop
xor
fistpl
push
lock
sarb
and
lods
xchg
in
xor
jg
movl
sbb
out
sbb
and
insl
cli
pop
insl
movb
js
les
in
jecxz
clc
ret
lds
cmp
jnp
and
aam
mov
test
jmp
scas
shlb
out
daa
mov
add
sbb
aaa
leave
push
stos
mov
scas
cs
push
jo
lret
pop
cs
dec
mov
adc
addr16
cmovns
mov
imul
mov
jl
mov
push
mov
mov
scas
mov
xchg
mov
rcrb
and
jo
lds
into
call
arpl
xchg
loopne
scas
nop
mov
dec
icebp
ret
mov
inc
mov
push
inc
add
xor
js
and
lahf
pop
push
lods
in
fcoms
add
fsubl
sti
cmp
inc
flds
dec
scas
sub
add
adc
xor
imul
xor
rorl
jge
lret
mov
jns
hlt
dec
jo
shrl
push
sub
adc
ss
pop
and
loop
lahf
loope
stos
out
pop
cmp
mov
xor
fnstcw
xlat
gs
xor
xchg
xchg
xorb
sar
xchg
hlt
jmp
mov
fstpt
or
mov
sub
andl
aas
insl
fsubp
loopne
pop
test
jnp
xor
testl
adc
rol
out
cs
add
daa
xchg
jg
cmp
test
data16
lahf
adc
stc
cltd
stos
or
pop
les
test
jnp
addr16
jle
cmp
outsl
cmp
push
dec
mov
xor
ficomps
lock
sbb
test
sub
mov
and
cmp
test
pop
xchg
rclb
or
dec
rolb
incl
jp
sarb
repnz
pop
adc
dec
pop
xlat
cmp
loopne
data16
jg
fxtract
xor
inc
pop
out
inc
repz
and
adc
push
xchg
xor
out
jns
cli
sbb
popf
insb
xchg
add
test
mov
sub
jne
and
add
xchg
into
or
stos
dec
out
pop
dec
xor
shl
lret
inc
sbb
orl
outsl
push
cs
imul
fiaddl
add
xchg
movsb
jle
jl
outsl
nop
xchg
dec
leave
inc
add
cli
insb
xchg
mov
mov
popl
pop
xchg
pop
push
pop
add
jno
push
add
jno
cld
ror
add
scas
movsb
test
adc
sbb
inc
clc
push
repnz
cs
sub
lcall
gs
arpl
movsb
add
jne
dec
leave
xchg
test
mov
ja
pop
or
push
daa
jl
je
lock
rorw
mov
ja
add
mov
jle
out
outsl
jae
imul
push
jns
sub
mov
aas
jge
push
xchg
xlat
lret
cltd
inc
lods
dec
test
xchg
fsubs
sbb
lret
push
cmp
iret
jge
int3
adc
push
xchg
xchg
icebp
mov
lods
popf
fldcw
loope
jp
ljmp
dec
cmp
dec
arpl
das
dec
mov
mov
addr16
xchg
xchg
sahf
aad
cmp
or
pop
fadds
flds
out
shll
ficoms
lds
enterw
test
arpl
jl
add
adc
xor
rcl
ret
aam
fimull
test
out
mov
pusha
inc
mov
and
or
sub
add
sub
and
in
rorb
inc
popf
outsl
jle
mov
push
or
lret
adc
cmp
sbb
xorb
loop
mov
jb
les
inc
pop
xchg
stc
mov
push
pop
in
loop
jne
and
dec
aad
dec
mov
lods
push
mov
push
inc
mov
xchg
jno
mov
mov
rorb
test
repnz
adc
ret
cmpsb
add
test
ficoml
pop
adc
pop
dec
mov
xor
sbbb
pop
sub
push
xchg
lret
pop
jl
shll
adc
out
arpl
push
ljmp
pushf
inc
dec
fs
jmp
pusha
lcall
mov
sub
cmp
loop
fst
or
fisttpl
imul
cmpsb
xor
and
ficompl
pusha
cltd
fnstcw
pop
xchg
cld
push
popa
cmc
jge
test
sbb
inc
mov
adc
std
xchg
xcrypt-ofb
cmpsl
sub
lret
mov
pop
pop
into
inc
into
rcrl
pop
xlat
jmp
aaa
add
fwait
mov
jb
aaa
lock
jg
popf
rorl
addr16
rclb
pop
pop
sbbb
ret
test
adc
aam
les
fimull
lret
les
repz
sahf
mov
mov
push
test
jno
adc
push
lock
adc
into
inc
lods
les
jg
dec
mov
jae
pop
xchg
xor
movsl
or
xchg
mov
ret
in
in
into
sysexit
pop
xchg
and
xchg
push
std
jbe
mov
in
mov
sbb
mov
jmp
rolb
jbe
sub
mov
jmp
lret
push
mov
mov
mov
mov
insl
mov
insl
pop
sub
xchg
xchg
out
pop
imul
sub
mov
xchg
dec
popa
std
sbb
fiaddl
fldl
das
and
insl
jbe
or
or
std
enter
or
sub
mov
dec
and
sahf
in
xor
loope
pop
xchg
enterw
mov
popa
mov
and
jns
divb
xchg
cwtl
push
adc
push
cltd
fdivl
sub
and
cmpsb
inc
ret
cltd
mov
jbe
sub
fiaddl
xchg
jmp
or
adc
jne
and
scas
mov
push
jle
mov
add
popf
div
adc
int
mov
cmpsb
mov
in
mov
mov
or
fstpt
inc
mov
cltd
out
xor
fadds
cld
xchg
push
mov
add
rcll
adc
and
sarl
push
imul
adc
fnstenv
xchg
mov
fsubrs
jmp
icebp
andb
movsl
cmp
cmp
imul
insl
add
pusha
aad
mov
mov
mov
enter
inc
mov
pushf
aaa
mov
jmp
outsb
stc
pop
ljmp
or
testl
fidivrl
dec
add
inc
adc
add
pop
cmc
jno
fistpl
dec
cmp
push
mov
loop
sbb
lahf
add
mov
jae
inc
jmp
xlat
xrelease
js
sub
stos
and
push
pushl
sbb
popa
call
mov
hlt
rol
test
mov
pop
push
xor
sti
inc
lcall
pop
pop
xchg
movsb
push
pextrw
push
je
imul
stos
insb
mov
sbb
xchg
push
sti
pop
int
lods
mov
xchg
push
outsb
and
adc
in
das
push
jno
stos
inc
and
sbb
push
outsl
push
jne
or
clc
lcall
cmp
scas
aas
ss
scas
movsb
movq
sbb
and
sub
out
mov
mov
stos
sbb
push
addr16
stos
jmp
hlt
js
pop
cld
inc
iret
mov
xchg
repz
inc
out
mov
lods
aaa
test
jb
cmp
cmp
cmpsl
or
in
lea
mov
push
test
push
cli
cmp
shlb
pop
fwait
jmp
stc
mov
es
insb
lret
outsb
cmp
push
xor
subl
push
inc
sbb
imul
lcall
iret
adc
inc
mov
lahf
push
lods
mov
lock
mov
pop
cmpsb
sbb
inc
in
fildl
ja
adc
scas
ror
sbb
dec
add
push
aas
nop
loop
pop
in
mov
jno
arpl
jno
or
ret
mov
sub
test
rcll
cmpsl
jne
jne
jecxz
pop
mov
stos
in
push
xor
or
mov
sub
pop
jl
sbb
loop
jle
loope
dec
aas
ds
in
push
in
lret
pop
inc
push
pushf
jne
add
sub
ja
cwtl
add
mov
lret
enter
dec
stos
movsb
ljmp
not
or
lahf
jbe
pop
loop
mov
adc
jne
xchg
pop
rcll
int3
adc
ret
mov
in
inc
icebp
inc
sbb
div
sbb
insl
outsb
adcb
scas
movsl
push
cmpsb
int
push
xor
xchg
out
gs
inc
sub
push
pop
sahf
or
sbb
xchg
ss
xorb
cwtl
mov
stc
out
movsb
jmp
cmp
mov
adc
and
pop
cmp
add
outsb
xor
push
mov
cmpsb
adc
adc
mov
lcall
clc
test
mov
pop
fistl
nop
add
jp
sbb
inc
jnp
push
jle
pop
xor
jge
daa
xchg
stos
cmp
cmc
lds
loop
jp
lcall
enter
sub
test
pushl
rorl
dec
push
sar
rorb
dec
dec
push
test
jne
cmpl
pop
aaa
jno
sub
pop
or
jbe
push
xlat
fsincos
xor
add
test
push
jne
out
cltd
insb
cs
jnp
imul
popf
add
cld
inc
pop
movsl
movzbl
adc
lret
cmpsb
xchg
cmpsl
sub
arpl
ret
or
bound
notl
sti
clc
cwtl
in
push
shll
andb
dec
cld
inc
dec
shr
cmpsb
ljmp
out
testl
scas
popa
ret
inc
cli
sub
out
and
push
fs
sub
jecxz
loope
sbb
adc
movsb
shl
jnp
push
icebp
push
mov
mov
pop
cmpsl
adc
pop
inc
cwtl
push
test
clc
xor
mov
movsl
mov
in
dec
aas
je
lock
sbb
jnp
mov
aad
inc
inc
sub
inc
lret
fisttpll
decl
cmpsb
xchg
sbb
xchg
adc
fcomps
lods
mov
add
fadds
sbb
ficoml
inc
int
rorb
outsl
shlb
sbb
dec
jbe
out
and
lock
lahf
push
imul
xor
xchg
incb
fwait
imul
into
shr
cmovne
dec
mov
jp
ffree
rolb
and
test
cwtl
pushf
jne
cmpsl
inc
pop
jmp
mov
jns
adc
shll
repz
inc
fstpt
enter
push
jns
adc
out
or
imul
cli
inc
lret
jmp
xchg
pushf
ja
jmp
sbb
fwait
lock
push
sub
lahf
std
mov
sub
faddp
fnsave
xchg
push
xchg
ja
pop
jle
es
pop
fcomps
mov
popf
and
ja
mov
or
test
jo
int3
mov
daa
pop
stos
fwait
fistpll
cmpsb
add
jbe
mov
push
mov
mov
jecxz
leave
jb
fsubrp
xor
sti
roll
dec
insb
cwtl
mov
enter
xchg
adc
int3
idiv
pushf
sahf
push
mov
jp
iret
mov
or
sub
in
div
jge
aad
sub
dec
mov
scas
and
pop
inc
mov
cli
pop
jmp
rcrb
adc
jecxz
aam
scas
dec
movsl
xchg
fdivrl
xlat
inc
mov
roll
mov
push
inc
pop
clc
dec
jg
push
add
mov
dec
xchg
mov
das
inc
sbb
adc
std
xchg
jmp
inc
cwtl
loopne
scas
sti
mov
ret
xchg
cmpb
xor
xchg
inc
add
js
push
or
jnp
pop
stos
dec
push
stos
stc
sbb
bound
cmp
mov
push
ds
cmpsb
sub
lret
push
adc
ja
outsb
mov
sahf
fstps
stos
cmp
hlt
int3
jae
inc
outsb
xchg
testb
std
mov
rorb
xor
xchg
inc
adc
in
adc
jbe
mov
fisttpll
aam
in
adc
in
shll
mov
or
and
pop
loopne
fmul
push
fcompl
sbb
mov
and
xchg
xlat
imul
and
jae
sub
js
sahf
jg
rcl
outsl
lds
sbb
shlb
push
arpl
fisttpl
mul
les
mov
or
jl
aas
or
adc
pop
inc
ds
bound
daa
lahf
cmp
pop
jge
hlt
jno
aad
movsb
je
in
pop
divl
sub
inc
test
lds
dec
out
imul
into
mov
cwtl
dec
add
call
insl
jg
dec
mov
adc
das
sbb
push
xchg
or
pushf
xor
mov
out
mov
jo
inc
popf
mov
jge
fcompl
pop
mov
mov
out
int3
xor
dec
xchg
ja
mull
ds
xchg
in
push
add
mov
repz
outsb
out
fstpl
adc
popa
xchg
push
bound
notl
mov
push
sbb
pop
push
ret
jo
repnz
cmp
or
cwtl
jo
pop
mov
dec
fisttpll
xor
arpl
push
ljmp
xchg
pop
repz
lahf
pop
ljmp
shl
mov
push
jbe
les
pushf
testb
sbb
mov
cvtpi2ps
add
and
and
pop
les
aad
fs
mov
jb
add
js
push
sahf
lock
dec
mov
jae
std
in
lahf
mov
mov
clc
arpl
mov
mov
dec
mov
in
push
lods
test
nop
movsb
inc
sub
mov
lret
sti
pop
xchg
xlat
xor
sbb
jle
std
push
nop
sbb
mov
fnstenv
in
arpl
adc
out
pop
call
xchg
pop
test
adc
daa
ds
das
and
pop
pop
ror
fwait
inc
scas
pop
and
out
lret
or
dec
repz
stos
js
push
mov
loope
int
dec
mov
xchg
cmove
mov
ljmp
outsl
xor
mov
clc
outsb
jno
fiadds
scas
das
out
add
sbb
dec
fisubl
xor
hlt
fistl
adc
sbb
and
cmp
push
sbb
pop
out
les
stc
jae
adcb
push
pushf
xchg
dec
sub
adc
fs
mov
adc
push
fdiv
and
add
popa
jne
xlat
pop
fcoml
and
aam
aas
pop
in
pusha
fwait
shr
cmpl
mov
outsb
sub
mov
pop
and
pop
jno
nop
fs
fld
in
les
jecxz
cs
pop
mov
hlt
call
stos
test
bound
pop
jns,pn
cld
aas
ret
sbb
and
inc
cmp
div
add
jmp
fsts
sahf
fwait
or
pop
mov
enter
pop
rolb
xor
jg
fdivl
mov
orb
mov
push
pop
mov
and
add
cmc
or
xlat
pop
mov
xor
enter
pop
cmp
inc
hlt
mov
jmp
pushf
in
iret
jae
adc
scas
mov
jno
jns
push
fcoms
mov
jmp
or
andb
xor
aam
adc
dec
lea
mov
pop
aad
cmp
jnp
sahf
adc
ret
jg
add
in
jl
mov
inc
call
xchg
pop
push
es
add
jne
pop
sarl
cmc
and
outsl
in
jo
push
imul
daa
adc
push
push
pop
enter
push
push
je
and
cld
stos
negl
test
mov
mov
inc
push
out
sub
inc
mov
sub
dec
ja
dec
dec
not
jg
test
mov
mov
cmpl
cwtl
dec
or
cmp
xchg
scas
adc
rclb
arpl
xchg
cmp
insl
std
lahf
pop
jge
roll
mov
les
mov
xchg
in
sbb
xchg
shll
cwtl
lret
sub
xchg
mov
js
jnp
pop
fwait
push
ret
fcompl
xchg
inc
int3
dec
aaa
jmp
pop
cmp
scas
testl
leave
pop
add
jp
imul
dec
outsl
add
enter
adc
fs
repz
lock
je
shrl
xor
xchg
inc
int3
es
bnd
sbb
sub
add
mov
lcall
push
andb
mov
jo
stos
lods
stos
imul
mov
pop
jmp
lret
xchg
cltd
movsl
and
testl
or
mov
test
and
imul
xor
xchg
pop
ljmp
and
xchg
or
test
ret
pop
roll
jnp
xchg
mov
xchg
mov
push
loop
out
push
mov
mov
cmpsl
jmp
push
ret
push
out
adcl
dec
inc
adc
loop
sbb
sbb
inc
inc
xchg
fwait
es
test
mov
lcall
bound
cmp
std
cwtl
and
imul
loopne
cmp
inc
jp
jbe
xlat
xchg
sub
dec
scas
lahf
sub
cmp
imul
flds
and
scas
lods
push
jl
test
clc
xchg
xor
push
mov
jo
adc
ret
leave
cs
popf
ljmp
enter
mov
mov
add
lea
fwait
push
adc
xlat
jp
data16
repnz
nop
jp
inc
jmp
call
fisubrs
adc
and
leave
cmpsl
inc
cmp
mov
mov
gs
cltd
add
inc
pop
pusha
cs
insl
add
xchg
into
pop
dec
mov
or
and
cmp
xchg
hlt
iret
inc
pusha
inc
call
sub
bound
add
jo
pop
test
adc
mov
ljmp
lcall
or
adc
push
pop
push
pop
xchg
xor
mov
imul
xchg
repz
test
inc
push
jmp
imul
mov
fsubrl
lahf
scas
mov
addl
cmpl
fs
cmpsl
repnz
shrb
mov
cld
dec
aas
push
fsts
stos
fbstp
repnz
mov
hlt
mov
inc
movsl
fdiv
out
sti
cmp
icebp
repz
in
cli
std
in
xchg
fcmovu
pop
cltd
jmp
mov
icebp
dec
mov
add
cmpb
fidivrs
dec
jg
mov
mov
xor
scas
movsb
sub
in
add
mov
mov
out
ljmp
pop
mov
imul
int3
daa
xor
mov
xchg
nop
mov
mov
mov
lea
sti
pop
jle
push
jne
and
pop
cmp
sbb
cmp
add
ret
repz
lds
popf
arpl
jo
int3
fimull
lods
xchg
cmp
aas
cli
or
int
orl
out
cmp
js
ret
mov
std
adc
loope
xchg
mov
mov
adc
dec
sar
nop
push
pop
pushf
notb
jl
inc
lahf
popf
mov
inc
and
sub
dec
in
mov
cmp
jbe
mov
imul
pop
adc
pop
dec
fisttpl
enter
int
idiv
fldcw
fwait
outsl
cmc
inc
sub
cmp
mov
in
adc
mov
insl
sub
pop
xor
push
addr16
mov
addr16
sbb
pop
sbb
test
aas
pop
test
cmp
cmp
ret
pop
rcll
adc
jb
into
cmp
sbb
jo
xor
shll
outsb
adc
mov
dec
sahf
lock
xlat
jecxz
pop
fisttpl
cltd
inc
cs
ljmp
sahf
jne
cmp
int
mov
pop
adc
sbb
pop
cld
inc
das
jecxz
stos
jle
cmpsl
sahf
rcrb
ret
sbb
jbe
mov
mov
ret
ret
jnp
mov
mov
stos
out
test
pop
jge
push
lea
addl
xchg
ljmp
test
sub
jecxz
ja
adc
mov
jo
cmpsl
roll
scas
mov
sub
inc
cmpsl
popf
xchg
push
sti
pop
pusha
cld
xchg
out
jge
aam
dec
sbb
iret
fiaddl
pop
or
mov
push
inc
test
or
fldcw
push
into
sti
mov
pusha
jae,pt
cld
mov
flds
push
js
dec
arpl
jbe
mov
jmp
imulb
xor
loop
lret
test
mov
dec
jbe
jle
js
sti
test
out
mov
cwtl
push
xchg
cmp
movsl
test
aad
mov
add
jg
dec
sub
sub
xor
sbb
or
cmp
push
popf
sarl
jae
fmull
std
sti
sbb
dec
mov
mov
mov
cmp
mov
push
icebp
add
lret
or
sbb
mov
fdivs
dec
repz
xchg
mov
mov
sbb
push
add
movsl
movsb
push
ja
mov
ret
jnp
outsl
xchg
cwtl
stos
test
push
icebp
sbb
cs
pop
pop
xchg
lret
stos
jmp
jecxz
jge
xchg
in
add
xor
in
inc
mov
scas
jnp
lret
or
mov
fst
jge
out
lret
sub
ret
mov
rorb
jne
cld
ss
xorb
call
and
mov
inc
cmpsb
out
xchg
cld
and
pop
and
lret
jbe
push
fisubs
ja
xor
adc
cmp
push
lock
mov
ss
or
xchg
add
sbb
xor
dec
imul
pop
les
mov
mov
adc
dec
xor
cs
and
and
dec
push
cmp
and
mov
and
call
repz
clc
jmp
fst
adc
testb
jge
xor
add
movsb
sarl
mov
mov
xchg
jno
jne
pusha
out
dec
pop
lret
push
addr16
mov
xor
and
add
add
inc
xchg
xchg
inc
jo
mov
ja
stos
pop
rcl
sub
aas
add
jne
dec
jle
sti
sub
xchg
sarl
lds
sti
sub
xchg
mov
cmc
cmp
xor
jle
inc
cld
popa
xor
lods
hlt
jns
movsl
repz
xchg
dec
lods
xor
pop
mov
mov
jb
pop
movsl
push
mov
push
xchg
jae
lock
push
test
dec
in
iret
std
aam
cli
pusha
fisubl
xchg
out
add
and
push
xor
in
xor
mov
xor
aaa
inc
jae
cmc
arpl
dec
jp
fcmovnu
scas
xchg
push
xor
mov
aaa
mov
or
xor
jg
cli
and
xlat
sbb
popa
cltd
jmp
push
jp
and
adcb
pop
jl
imul
clc
mov
test
sub
outsb
arpl
loope
ja
mov
inc
add
pushf
xor
out
mov
pop
push
rep
and
jmp
cli
add
data16
sbb
adc
mov
mov
cmpl
clc
jecxz
push
in
lahf
lods
int3
ret
pop
pushf
mov
cli
dec
insl
xchg
push
pop
mov
mov
in
xchg
adc
push
aam
gs
xlat
cltd
scas
mov
sub
scas
pop
nop
int3
or
call
sub
fs
orl
mov
shlb
rcrb
iret
inc
std
xchg
repz
in
call
outsb
shlb
xchg
add
xchg
arpl
std
insl
mov
adcl
xchg
push
jo
in
push
pop
sbb
mov
dec
lret
push
sub
in
sbbl
xor
aas
mov
mov
sbb
clc
fdivr
jmp
nop
ja
jae
jecxz
or
sbb
mov
imul
in
inc
js
add
orb
in
push
or
fsubrs
add
mov
push
nop
and
mov
sub
cmp
pop
clc
fdivp
fwait
mov
mov
in
xor
dec
or
in
xchg
or
ret
jecxz
push
dec
cmpb
loope
pop
inc
xchg
push
hlt
or
repz
dec
pop
fdivrs
sbb
lea
cmp
repz
push
imul
lret
out
pop
xor
xlat
repz
jecxz
lock
pop
jge
cmpsl
dec
div
and
sarl
pop
scas
push
jge
push
lea
fs
mov
jnp
fistl
inc
in
push
jp
dec
fiadds
mov
dec
test
xchg
adcb
jne
cmp
lret
in
xchg
aam
push
nop
es
rcl
and
mov
out
pop
mov
cltd
cwtl
xor
mov
push
enter
mov
in
mov
mov
es
push
xchg
mov
aad
gs
into
shlb
stos
push
push
mov
out
and
cmp
insb
mov
jecxz
xchg
scas
imul
mov
pop
and
xchg
sub
inc
sbb
aas
lods
test
pop
cld
xchg
pop
dec
sub
loop
xchg
cmpsb
in
sub
pop
neg
adc
mov
sahf
int3
js
mov
dec
and
xchg
jmp
daa
inc
push
mov
popa
jp
addr16
or
lea
add
xchg
mov
fnstsw
push
fmuls
scas
inc
movsb
jne
outsb
fsubs
and
mov
jne
inc
rcrb
mov
push
and
or
mov
int3
inc
scas
cmp
pusha
sbb
inc
jae
mulb
pop
mov
sbb
imul
mov
mov
popa
cmp
mov
cmpsl
xchg
outsb
test
inc
jbe
jnp
insb
mov
add
cmp
mov
lods
enter
orl
cmpsl
sbb
jmp
jno
mov
mov
nop
jo
cmp
pop
xchg
mov
out
icebp
dec
jmp
dec
imul
mov
int
or
ret
repnz
pop
lret
cli
addr16
cmp
inc
push
std
mov
or
push
les
mov
and
sub
jae
in
stc
xchg
jl
mov
add
adc
cmpl
roll
test
adc
ja
gs
jg
sbb
sub
inc
cmp
add
movsl
and
push
loopne
lds
pop
gs
nop
cwtl
dec
mov
lret
movsb
pop
arpl
repz
inc
jp
shrl
jns
jp
inc
cmp
xchg
jbe
je
mov
shlb
sbb
rolb
cmc
jbe
imul
aaa
and
push
dec
cmp
movsl
imul
dec
pop
lret
cmp
ret
pop
out
int3
mov
pusha
cmp
xor
rolb
iret
jo
fdivrl
orb
cmpsb
mov
mov
xchg
push
fsts
lds
lods
sbb
and
jne
sub
xor
push
jge
rolb
stos
stos
add
xor
cmp
jg
cltd
dec
fldenv
sbb
xchg
shrb
mov
popf
pop
sbb
jl
nop
lods
adc
inc
jle
stc
push
cmc
mov
aas
sub
lods
pop
xchg
xchg
cs
cs
xchg
sbb
mov
popa
iret
gs
stos
icebp
jl
pushf
movsb
jge
sub
insb
bnd
mov
sahf
lahf
xorl
ja
add
cs
push
xchg
mov
mov
pop
scas
dec
insb
push
dec
in
shl
xor
shlb
xchg
mov
cltd
mov
cmp
adc
sbb
inc
les
in
mov
mov
mov
jge
sub
es
sti
and
cmp
nop
fwait
ja
ss
push
loopne
test
and
hlt
es
or
add
in
xor
push
scas
or
sub
in
dec
sahf
scas
jo
add
or
xor
dec
add
and
repz
mov
fcmovnbe
filds
sbb
xor
push
ud0
jbe
ret
mov
jae
into
push
pop
mov
sub
imul
sbb
repnz
push
push
daa
pop
push
nop
push
xor
pop
cli
inc
lcall
lods
stc
call
or
dec
sub
or
cmp
sti
mov
fldcw
push
insl
dec
cmp
shl
jae
mov
pop
shl
jmp
dec
sti
mov
inc
lods
fidivl
inc
add
mov
mov
and
arpl
in
call
shl
ss
ja
jnp
movsb
mov
cmp
push
jmp
jg
and
mov
pop
xchg
jl
mov
jp
mov
cmp
cmp
arpl
jle
or
je
cmp
ja
xor
and
and
jmp
insb
mov
nop
mov
fsubp
sbb
icebp
test
jne
addr16
mov
mov
sbb
or
stos
in
mov
insl
xor
adc
mov
shrb
out
inc
mov
xor
dec
cli
push
daa
push
xchg
loopne
repz
cmc
mov
jecxz
lret
xchg
inc
lret
repnz
and
ret
leave
ret
insb
sub
hlt
fwait
stc
ja
jp
push
mov
rol
mov
shlb
and
lcall
jmp
push
test
imul
pusha
repnz
pextrw
sbb
mov
nop
scas
outsb
push
leave
xor
stos
cld
xchg
inc
cmpsb
stc
fistl
jmp
cmpsb
lea
pop
and
lds
mov
inc
fldl
int
push
aaa
out
pushf
push
or
fisttps
mov
or
inc
add
shrb
lock
outsb
hlt
pop
cmpsl
testb
pop
add
movsl
dec
repz
rcrb
movsl
sub
ja
xor
cmc
sbb
dec
xchg
pusha
rclb
push
jmp
push
mov
fmull
dec
ret
push
mov
mov
mov
sbb
mov
aam
pop
arpl
inc
aad
das
jecxz
jecxz
inc
repnz
xor
mov
jb
ficoms
fists
mov
bound
rcrb
enter
mov
daa
cmp
and
sbb
mov
mov
insb
xchg
mov
es
fcoml
test
dec
loopne
pop
gs
xor
jle
xor
scas
cmpl
rcl
push
rsqrtps
cmc
sub
lods
pop
cmpsl
push
xchg
mov
cmp
inc
sbbb
mov
lods
lahf
sub
or
stos
cmp
cmp
mov
icebp
scas
roll
lahf
arpl
mov
and
scas
dec
test
lds
inc
xchg
jmp
subl
cld
push
adc
inc
dec
sub
cmp
test
and
jnp
inc
incl
push
cmpsl
mov
aas
xor
sub
ja
cmp
jcxz
cmc
jp
cltd
mov
add
scas
and
push
dec
jbe
test
inc
into
pop
jne
dec
inc
xchg
inc
in
mov
call
call
ret
adc
pop
mov
out
sbb
ret
mov
adc
and
test
mov
rcll
jne
test
and
jp
fdivr
loopne
sbb
push
stos
and
fisttpl
outsb
sub
and
sub
sub
stc
push
xchg
sti
lock
push
fistpll
pop
imul
ja
cmp
and
outsb
ss
xchg
hlt
orl
ss
lea
lds
in
enter
cmp
les
jge
test
ja
stc
rcr
and
sbbb
and
mov
leave
mov
or
adc
aaa
les
int3
data16
xchg
inc
push
rol
int3
sahf
sbb
into
test
or
add
ds
in
call
cmc
cld
mov
sub
push
inc
mov
jb
pop
andb
mov
push
sarb
inc
in
inc
int
sbbb
icebp
lret
test
mov
mov
gs
mov
add
repz
xchg
outsl
push
int3
mov
ljmp
mov
sahf
clc
repz
cmp
xor
xlat
sbb
bound
das
jne
mov
loopne
jb
sub
cmp
stos
cmpsl
ret
mov
push
mov
bound
inc
dec
addl
shrl
xchg
adc
mov
bound
add
adc
arpl
arpl
sub
pusha
loop
bound
addr16
sarl
dec
les
inc
int
mov
cld
inc
mov
pushfw
jne
sub
outsb
dec
lea
sti
sbb
shll
jmp
stos
shll
ret
fists
movsl
sbb
cmp
add
stos
lock
mov
stos
add
ficoms
adc
flds
cwtl
sbb
inc
push
cmc
out
jae
imul
jns
add
pop
dec
out
stc
jge
sbbl
outsb
xchg
dec
and
sbb
adc
mov
sbb
xor
leave
jecxz
pop
vpandn
addb
lods
js
mov
cmc
mov
and
mov
xor
int
adc
dec
ds
xchg
fdivrp
test
inc
popa
or
cmp
gs
cs
jb
cmp
pop
inc
push
xor
ror
xchg
clc
dec
mov
add
inc
xor
aad
lahf
push
sbb
inc
clc
mov
push
xor
lcall
inc
in
push
dec
mov
pop
stos
sti
ret
jno,pn
out
xlat
jb
push
adc
cltd
cltd
outsb
inc
bound
sub
cli
cmpsl
test
lret
jl
xchg
inc
mov
sbb
test
lods
frstor
dec
iret
pop
sbb
jg
xchg
sahf
sahf
mov
shrb
mov
and
int3
imul
lods
jmp
imul
pushf
rorb
shll
lods
cli
out
and
inc
sub
xor
sti
mov
dec
cmpsl
sbb
inc
iret
out
cs
jmpw
imul
ret
jb
cmp
push
sub
cltd
imul
adc
sti
dec
adc
ret
add
stos
sbb
shrb
test
sub
and
inc
xor
jne
lods
fxch
lds
jb
rorb
or
ret
pop
mov
fisttpl
sub
or
cmpsb
repnz
adc
adc
sahf
push
adc
out
or
lahf
dec
and
and
cwtl
divl
mov
xor
add
xlat
les
push
hlt
jp
aas
adc
mov
sbb
lcall
lret
xor
cmp
out
xchg
faddl
testb
stos
imul
mov
and
loopne
xchg
xor
mov
movsb
insb
scas
dec
push
mov
test
cli
aad
mov
lret
pop
std
pushf
nop
push
lret
and
jge
cmp
lret
popa
sub
out
cltd
add
out
mov
xchg
pop
xor
cld
jmp
and
mov
inc
mov
jl
into
sbb
cmp
add
xorb
mov
cmpsb
rcl
cmc
pop
pop
emms
xor
bnd
mov
mov
mov
dec
xchg
mov
sbb
xchg
inc
outsb
fistl
pop
sbb
or
jno
mov
mov
xchg
add
cli
mov
popf
xor
ss
push
frstor
jecxz
loope
scas
js
pop
push
jb
xor
mov
lods
jge
cmc
movsl
pop
xor
out
jbe
or
and
cmp
cli
je
pop
invd
adc
xorb
and
cmp
arpl
pop
mov
xchg
xchg
sbb
sub
sarl
adc
inc
dec
cmp
mov
sti
test
loope
out
int
popf
popl
arpl
jle
xchg
fdiv
mov
push
std
cld
mov
pop
negb
js
sarb
movsl
cs
push
fbld
repnz
dec
subl
movsl
mov
mov
pop
jnp
jne
pop
pop
jnp
xor
test
mov
insb
mov
ficompl
xchg
xor
movsl
icebp
pusha
push
inc
hlt
ficomps
mov
enter
cli
inc
mov
fwait
adc
out
mov
inc
scas
mov
imul
cmp
mov
mov
jnp
or
cmp
adc
mov
sahf
push
fs
mov
dec
pop
dec
push
xchg
push
sbb
ret
divb
enter
icebp
mov
lcall
scas
fsts
aas
jle
and
inc
pop
add
mov
cmpl
jo
pop
cmp
stos
push
in
icebp
addr16
or
cmp
outsb
iret
pushl
and
shrb
cld
jne
nop
sub
std
popf
or
call
sbb
fidivl
mov
sub
dec
mov
mov
shll
fadds
sub
leave
call
fs
xchg
aad
addr16
and
sbb
aam
cmc
push
fldenv
and
insl
jp
jns
out
stos
mov
test
fcoml
ja
das
shll
cmp
jno
xchg
sub
mov
push
push
jg
sahf
xor
jmp
cmpsl
loop
adc
insb
sti
adc
call
lods
clc
and
or
lahf
stos
add
sbb
inc
add
test
jmp
aaa
std
and
sbb
xchg
inc
dec
pop
jbe
lea
in
dec
dec
jl
mov
and
jae
inc
jns
add
and
gs
xor
in
and
outsl
xor
mov
cltd
out
mov
icebp
sbb
fs
and
pop
stos
adc
cs
jno
ret
add
xorps
push
pop
addb
sarb
inc
jns
lret
and
mov
loop
jmp
pusha
faddl
lahf
ret
cmp
ds
and
cmp
jo
pop
mov
mov
rolb
pop
inc
xlat
out
out
add
or
or
mov
xchg
jns
push
lea
loop
les
jmp
xlat
in
js
adc
bound
mov
fcmovnu
int
mov
inc
mov
repnz
fsubl
inc
push
dec
imul
xlat
xor
mov
mov
scas
mov
pop
clc
xor
ljmp
xorb
dec
stos
sub
clc
sub
jae
pop
aad
or
mov
push
and
std
mov
into
add
jecxz
es
jmp
out
xor
mov
mov
ss
or
sub
loope
shlb
cli
cmp
mov
inc
int3
mov
xlat
jnp
into
xor
repz
mov
push
push
stos
adc
inc
fstpl
decb
mov
fistl
loope
jne
scas
cwtl
and
xchg
bound
push
sub
xor
or
inc
fmul
pop
aad
leave
outsb
mov
imul
inc
and
pop
mov
daa
test
push
rorl
jno
das
lea
addr16
mov
cmp
mov
add
fsts
dec
test
and
mov
mov
fmull
pop
lcall
mov
stc
xchg
and
mov
outsb
sub
insl
inc
aas
sub
push
inc
add
cmp
xor
test
mov
test
icebp
or
aas
mov
adc
ds
sbb
lock
mov
jmp
cmp
mov
movsb
fdivl
add
mov
xlat
adc
loopne
push
push
fistps
jno
inc
inc
lret
mov
fbld
int3
add
shld
dec
and
movsb
dec
dec
adc
clc
adc
jge
cld
mov
mov
daa
or
into
lea
inc
cmp
pushl
jbe
jb
dec
test
push
push
sub
mov
ja
xchg
test
mov
movsb
mov
sarl
rcll
aas
inc
cmp
das
ss
cld
imul
mov
out
add
inc
sahf
push
cmp
clc
enter
inc
push
lahf
sbb
or
push
sahf
inc
pop
insb
mov
repz
imul
imul
mov
call
or
and
in
mov
cli
out
xchg
pop
fnstsw
jb
sub
add
test
mov
rcrb
lea
mov
test
sub
dec
int3
mov
insb
xchg
iret
adc
and
sub
hlt
xchg
imul
add
dec
inc
je
in
arpl
out
rolb
iret
call
or
mov
inc
aas
mov
pop
orl
les
orl
sbb
jmp
adc
addr16
mov
lods
ljmp
mov
and
fidivs
push
ret
movsb
xor
xchg
and
mov
sub
cmpl
sbb
cmpsl
sbb
push
orb
inc
pop
cmp
jle
sar
iret
push
rcl
and
ljmp
lods
mov
xorl
jbe
jnp
cmpsb
jecxz
fadds
in
sar
inc
popa
cmpsl
pop
test
push
inc
jns
jmp
cmp
xor
or
jg
mov
lock
shl
outsb
inc
cmc
lods
lods
inc
xchg
outsl
inc
into
js
push
sub
pop
pop
dec
pop
imul
mov
mov
out
insb
cmp
mov
mov
jb
jo
jl
movsb
pushf
cmpsl
inc
fs
ret
mov
sub
loope
in
cmp
adc
imul
mov
or
hlt
pop
fcmove
dec
repnz
xlat
xor
xor
mov
std
mov
xor
daa
adc
pop
adc
loop
decl
out
pop
loopne
and
rcrl
push
sbb
pushl
decl
push
in
stc
outsb
sbb
jo
dec
or
inc
dec
mov
popa
cli
push
pop
mov
popf
cld
ret
rcrb
mov
jg
lods
jecxz
mov
aaa
push
cld
push
fcoms
dec
jb
adc
hlt
insl
stc
add
inc
into
mov
jle
out
add
lock
daa
mov
shl
inc
sbb
jne
xor
jbe
adc
rcrl
fwait
mov
or
aad
scas
push
sti
sub
dec
or
mov
sub
rorb
stos
push
js
lds
or
repnz
push
repz
push
jp
mov
movsb
mov
ja
add
mov
cmp
mov
stos
xor
sbb
mov
mov
ret
movsl
dec
adc
xchg
insb
mov
cmp
sbb
loop
pop
or
loopne
test
fnstcw
in
jp
add
xchg
xchg
in
idiv
mov
fidivs
pushf
dec
shrl
andb
cltd
adc
dec
sbb
fists
xchg
cmp
in
mov
outsl
jle
mov
imul
cmp
jle,pn
ret
fbld
or
loope
inc
popa
or
mov
add
pop
lret
cmpsb
sbb
lahf
jge
xchg
inc
ja
xor
jmp
fildl
pusha
mul
dec
mov
and
sub
imul
idiv
out
jo
arpl
pushf
cld
jmp
adc
lahf
nop
jns
int3
icebp
push
clc
outsb
jp
out
mov
push
mov
and
xor
push
iret
dec
shl
fldt
xor
out
lods
pop
sub
dec
xor
or
mov
addr16
ror
sbb
out
xchg
and
test
dec
icebp
daa
jmp
sahf
jmp
push
test
adc
cmpsb
cli
xor
push
stos
sub
jp
or
insl
add
nop
pop
fldcw
xchg
lcall
jp
out
adc
scas
enter
xchg
imul
or
pop
loope
sub
cmp
mov
and
lret
and
iret
dec
out
xchg
xchg
aaa
push
xor
and
and
idivb
lret
idiv
xor
lods
lds
xor
mov
sahf
mov
pop
xor
frstor
jg
adc
imul
or
aad
cmp
jge
lcall
xlat
stos
in
sbb
mov
rcl
data16
scas
cmp
leave
and
push
adcb
ss
stos
inc
inc
rcll
jbe
sub
pop
hlt
mov
movb
and
dec
and
addr16
int
mov
push
adcb
xchg
stos
mov
shl
mov
andb
psubq
outsl
xchg
dec
mov
jo
add
aad
adcl
ror
in
imul
int
xchg
icebp
in
mov
push
adc
adc
rorb
sub
inc
inc
nop
mov
inc
loope
sub
cld
adc
out
inc
dec
sahf
and
and
xchg
push
xchg
lock
jmp
dec
subl
fidivrl
sahf
cmpsb
fcmovne
shlb
pop
outsb
jne
das
call
push
push
mov
add
mov
mov
push
arpl
cmpsl
push
in
ret
sub
xor
test
adc
mov
mov
sub
aad
repz
imul
cltd
add
or
js
pusha
cmp
bound
cmpsb
inc
mov
cmc
inc
adc
adc
mov
xor
cmp
cli
cmp
xchg
sub
js
mov
mov
test
fcom
aam
push
mov
and
in
jns
cld
xor
mov
or
lret
mov
bound
mov
ljmp
add
xchg
pushl
je
xchg
mov
iret
out
or
scas
xor
idiv
dec
or
fnstsw
subb
add
sbb
scas
popf
inc
pop
xor
add
dec
stos
mov
cmp
dec
inc
rcrl
fnstcw
loope
jno
adc
mov
adc
enter
subb
dec
add
jns
xchg
jg
jbe
popl
mov
outsb
subl
stos
dec
aas
cmpsb
cmp
icebp
cld
out
mov
xchg
xor
idiv
int
pop
xchg
ss
cmc
enter
aas
hlt
lds
rolb
ljmp
mov
jmp
xchg
push
adc
jb
call
dec
mov
ds
jmp
filds
les
or
das
lret
xor
mov
fidivl
outsb
mov
mov
rcrl
mov
inc
cltd
cs
or
adc
jns
ret
loope
adc
daa
sbb
aas
sbb
je
js
mov
inc
dec
mov
ds
push
xlat
outsl
outsb
and
fwait
sbb
cli
inc
pop
pop
jl
leave
test
les
push
lds
mov
and
lcall
jmp
jle
dec
inc
bound
subb
jl
mov
clc
repnz
jne
imul
gs
sbb
data16
test
xor
mov
jns
jbe
dec
notb
mov
pop
mov
pop
jl
xor
jnp
mov
nop
jo
cmp
mov
dec
pop
leave
push
mov
out
xor
mov
outsb
stc
outsl
push
jg
mov
jns
insl
cmpsl
mov
test
pusha
push
inc
lock
mov
and
popf
mov
in
pop
les
mov
mov
mov
mov
dec
push
sbb
ss
inc
adc
pop
shll
and
push
push
cmp
js
mov
mov
lret
add
mov
cmpsb
mov
imul
pop
and
mov
cmpl
adc
add
add
nop
sub
sbbl
jno
jl
fcoml
sti
xchg
mov
sub
aam
mov
add
test
subb
jg
pop
xchg
sbb
jl
lret
or
sahf
lea
jns
jecxz
push
test
lods
in
ss
call
sub
add
hlt
jbe
and
adc
sub
xchg
jbe
dec
xor
lods
scas
scas
xorl
into
in
ret
push
sbb
xchg
mov
addr16
dec
mov
shrb
fidivs
xor
fst
and
add
into
outsb
outsb
lods
add
add
sub
and
lds
or
pop
mov
and
add
andb
cld
testb
jg
xchg
lret
js
ljmp
xor
sbb
in
mov
xor
test
jne
mov
es
mov
mov
jno
movsl
cmpsb
fsub
das
add
popa
out
pop
mov
push
pop
shlb
leave
dec
cmp
push
je
cmpsb
jae
mov
mov
ds
inc
sub
bound
sub
adc
sbb
jmp
pop
adc
out
mov
push
addr16
pusha
daa
andb
jmp
movsb
sub
adc
xchg
out
jo
mov
adc
sahf
add
shll
bound
mov
std
stc
or
cmpsl
mov
adc
out
or
les
pop
xlat
arpl
insl
test
cmp
add
add
loope
ffreep
push
shrb
daa
mov
movsl
mov
jae
popf
xchg
popf
adc
mov
jbe
push
lahf
and
cmp
fldcw
std
jnp
adc
dec
or
inc
xor
push
cli
cwtl
sub
or
lret
adc
gs
data16
xor
arpl
repz
mov
popa
mov
xor
cmp
addr16
xor
jmp
adc
ljmp
or
xchg
and
jge
mov
les
adc
ret
add
mov
sbb
mov
repnz
mov
sbb
mulb
pop
loop
jle
mov
add
inc
out
mov
cmc
rdtsc
mov
loopne
xlat
mov
add
adc
mov
sbbl
mov
daa
push
or
scas
xor
sbb
insb
repz
insb
adc
cmpsb
ficompl
cmc
and
adc
sbbb
clc
pop
xor
inc
and
or
scas
lret
push
mov
or
je
aad
loopne
dec
jne
pop
sub
ss
aas
insb
int
lock
mov
add
sbb
inc
clc
mov
or
lods
pop
or
jp
test
clc
adc
and
enter
jle
sub
mov
mov
insb
xor
pop
leave
push
fistpll
cli
in
gs
push
leave
mov
in
jbe
imul
lcall
pop
sbb
adc
xchg
in
mov
shlb
xchg
sub
popa
insl
cwtl
mov
inc
inc
popa
loope
loop
bound
testb
xor
es
xchg
sar
dec
insl
xor
jb
shlb
outsl
dec
rorb
sbb
bound
loope
fwait
jae
jecxz
jnp
icebp
mov
ud2
jno
imul
push
sbb
push
inc
sbb
jae
inc
imul
jnp
xchg
sub
sub
into
les
outsb
scas
stc
sbb
jp
scas
push
mov
in
add
gs
cmpb
push
out
jle
mov
pop
out
bound
or
lcall
sub
or
idivl
daa
in
vpaddusb
and
jno
es
mov
add
or
cmpsl
inc
jmp
or
mov
mov
mov
ja
add
mov
push
cli
cmp
cmpsl
loopne
mov
sub
or
mov
test
lds
mov
stc
inc
dec
int
push
nop
cmpsb
pop
mov
sahf
xchg
pop
jae
xor
mov
loopne
xchg
movsl
fidivrl
jg
xchg
lods
inc
js
dec
sarb
mov
xor
mov
adc
jbe
or
es
push
mov
jecxz
fidivrs
aam
xor
and
int
mov
jle
mov
mov
add
into
roll
ret
push
clc
pop
push
pushf
in
fneni(8087
cwtl
sub
sarb
dec
jne
test
mov
in
js
mov
xchg
push
xor
inc
insb
pop
scas
setbe
cmp
in
test
push
push
xchg
js
idivb
aam
fdivl
loop
out
int
movsl
cli
xlat
push
sbb
dec
or
sahf
out
icebp
pusha
push
les
push
jmp
stos
ds
test
inc
ds
jae
popl
sbb
lods
xchg
add
xchg
push
jb
test
mov
gs
in
out
mov
xchg
movsb
and
outsb
xor
push
adc
cmp
dec
cs
arpl
pop
imul
clts
mov
xchg
mov
sbb
les
pop
xchg
test
jae
frstor
iret
inc
add
mov
sbb
sbb
mov
sbb
fs
mov
addl
inc
mov
pop
dec
lcall
or
push
add
push
add
idivb
sti
in
cmp
loop
in
aas
push
sbb
mov
aas
xor
xchg
mov
addl
and
loope
push
ljmp
out
in
outsl
adc
lret
jnp
mov
ja
inc
mov
outsl
xor
mov
pop
test
jmp
xor
sbb
mov
mov
pop
outsb
mov
out
cmpsl
fsubl
in
stc
jecxz
into
add
or
jg
push
ret
bound
daa
outsb
jge
sub
movsb
add
or
into
jecxz
dec
sub
and
adc
insb
int3
shrb
and
repnz
dec
std
xor
mov
inc
ja
aad
jae
out
sbb
fcmovne
cltd
into
add
pop
outsl
xor
pushf
add
adc
mov
test
add
aaa
iret
scas
fnsave
xchg
fsubl
imul
jp
inc
and
test
jnp
xor
jecxz
inc
mov
push
roll
sbb
hlt
fsub
lods
frstor
jno
fistpll
hlt
loope
pop
inc
mov
mov
pop
outsl
sbb
loopne
jle
ret
imul
add
xchg
daa
insb
cmp
out
and
outsb
fdivrs
xchg
sbb
jg
outsb
sti
mov
xchg
mov
cmp
pop
insl
sub
and
loope
add
xchg
pop
dec
inc
inc
xor
inc
add
cmp
lods
mov
fmull
or
dec
mov
pop
mov
cwtl
mov
xor
or
int
data16
add
test
mov
cld
iret
sbb
add
aaa
pop
sub
inc
or
outsb
cmp
in
dec
mov
daa
add
int
inc
mov
push
xchg
ljmp
jb
addr16
inc
cmc
jle
xor
push
sahf
decb
leave
lds
cmp
mov
mov
lret
mov
arpl
xor
pop
mov
ja
adc
sub
dec
nop
bound
sarl
cmp
or
fstpt
cli
mov
lea
daa
pop
mov
das
pop
shrb
mov
ret
xchg
add
jno
mov
jp
pop
enter
daa
in
arpl
js
cs
cli
sbbb
mov
pop
mov
negb
add
push
aad
xchg
shll
mov
lods
pop
pushf
daa
push
pmaddwd
les
mov
push
or
mov
and
frstor
xchg
inc
adcl
dec
mov
sub
imul
ja
int3
sbbb
icebp
xchg
mov
xchg
fs
arpl
repz
fldt
popa
jge
insb
cmpsl
pop
mov
rcl
cltd
sbb
add
mov
push
or
mov
dec
mov
fxch
lea
push
scas
mov
insl
bound
mov
cmp
rcl
jecxz
and
cmp
xchg
add
int
pop
jecxz
cmp
add
fldl
into
pop
fwait
stos
mov
sbb
jecxz
pop
mov
mov
push
ljmp
or
sbb
leave
insl
inc
jb
insb
cmpsb
lods
sbb
je
and
mov
into
inc
shll
aas
int
cli
mov
xchg
ljmp
xorb
cmp
out
enter
fdivp
sbbl
add
push
dec
jbe
fstl
inc
stos
xchg
out
outsl
cmp
insb
notl
cmp
xor
dec
enter
mov
mov
pop
or
pop
xchg
int
fistl
add
daa
lahf
adc
mov
repnz
clc
jp
xor
repnz
pop
push
loopne
mov
rcll
adc
das
add
xor
xchg
and
movsl
iret
test
scas
loope
in
sub
jo
inc
jmp
cli
rcrb
out
in
lds
ljmp
inc
jp
push
movsb
pop
mov
hlt
or
mov
push
test
mov
push
test
stc
enter
xchg
arpl
data16
pop
adc
push
repnz
lahf
femms
add
mov
loopne
sarb
js
nop
test
cmp
ret
ret
int
js
mov
push
cmpb
notb
cwtl
lea
mov
inc
fs
sahf
popf
adc
adc
push
mov
cli
jne
mov
mov
iret
inc
stos
nop
arpl
in
jb
lret
inc
inc
negb
fs
pop
dec
fcoms
or
dec
lea
cmp
into
insb
arpl
mull
sbb
movb
cmp
in
xor
dec
insl
cmp
pop
ret
call
aas
ret
push
sbb
pop
jno
stc
mov
pushf
pmuludq
dec
xor
sub
cltd
dec
js
cmc
mov
test
clc
and
or
push
addr16
jecxz
mov
imul
sbb
daa
ljmp
lret
movsb
aaa
mov
inc
pop
xchg
rolb
shl
les
fdivp
add
ret
mov
popf
test
rolb
push
sti
daa
hlt
inc
pop
cli
fsts
dec
lcall
mov
pop
lcall
xchg
negb
fsubr
aas
aas
popa
mov
cwtl
aad
adc
xor
dec
scas
mov
sub
not
adc
cwtl
ja
rorb
push
sarb
dec
mov
loopne
das
jmp
mov
adc
std
xor
mov
call
xchg
and
in
sbb
jo
pop
ret
push
mov
lods
stos
xor
aaa
lret
addr16
test
movsl
std
inc
sub
sub
data16
jb
mov
xor
je
int3
shr
mov
mov
fimuls
out
push
push
shll
sub
dec
jb
sbb
sub
or
adc
xchg
mov
jle
push
repz
in
xchg
orb
lds
sub
nop
jge
adcb
insl
jb
jp
fsubrs
xor
icebp
jle
dec
mov
jge
ds
test
imul
mov
fstpt
popa
inc
pop
lock
test
inc
in
inc
cmovl
test
sbb
push
lahf
shrl
fcomps
ja
int
loop
mov
test
pop
xor
mov
bnd
and
and
in
mov
movsl
adc
push
pop
loop
mov
push
push
pushf
adc
inc
lahf
xchg
fidivl
in
jbe
stos
dec
rcll
pop
sbb
out
inc
addb
enter
pop
fwait
push
or
jns
fisttpll
jnp
sbb
mov
std
subb
addl
sbb
xor
seta
and
dec
xchg
jge
dec
adc
arpl
mov
pop
das
bound
shrl
cmp
in
sbbb
int
jecxz
lgs
cmp
adc
int3
jo
daa
movsl
jmp
cmp
jp
jnp
enter
push
or
in
pop
daa
sbb
inc
popa
sti
rcl
push
mov
sti
sbb
mov
jecxz
sar
sub
add
cli
pop
jae
xchg
outsb
add
mov
mov
les
les
cwtl
mov
cmp
hlt
xor
rcrb
adc
ds
xchg
repz
lahf
sbb
fsubs
popa
sub
sbb
pop
push
add
outsb
mov
mov
push
sti
stc
sbb
shlb
rcl
and
notl
push
leave
movsl
jne
outsb
test
in
ss
sarb
cld
sub
and
popa
and
insb
ud0
inc
sub
or
cmp
pushf
jge
xor
sbb
add
cmc
inc
sbb
mov
cli
push
aaa
mov
dec
dec
dec
inc
std
icebp
in
std
push
fsubl
and
outsl
into
out
pop
iret
xchg
jns
mov
mov
push
adc
xor
dec
cmpl
xor
ja
mov
lods
mov
sti
lods
and
imul
xor
mov
jo
pop
xor
shll
addb
jmp
pop
ret
scas
ljmp
fcoms
mov
mov
dec
mov
pop
pop
push
in
popf
xor
add
and
mov
push
or
sub
sbb
push
pop
cmp
adc
pop
xchg
repnz
in
test
xchg
dec
push
sahf
jno
lret
lret
addr16
mov
sub
fmull
js
out
jno
andl
xchg
loop
sbb
repnz
les
or
xchg
pushf
sbb
cs
outsb
enter
xchg
cmpsb
mov
dec
je
add
je
dec
mov
cmp
popf
mov
lds
sbb
and
movsl
cmpsb
push
jge
pop
je
mov
rcr
dec
add
sbb
imul
sahf
mov
ljmp
cmp
stos
scas
mov
aas
in
stos
test
or
jmp
rclb
insb
xchg
mov
pop
in
cmpl
pusha
sub
mov
stos
in
ljmp
mov
pop
addr16
outsb
neg
loopne
aad
mov
dec
push
push
xchg
pop
push
sub
mov
or
add
pop
mov
insb
enter
mov
enter
pop
jnp
pop
jb
shlb
push
or
sub
icebp
mov
sbb
sub
pop
sbb
jno
cmp
and
stos
lods
sbb
xor
cmp
repz
imul
movsl
es
sub
addr16
mov
xchg
rcl
gs
int3
mov
adc
adc
test
daa
mov
fwait
jns
cli
fsubr
jno
pop
xchg
pop
and
jmp
and
mov
lcall
fwait
or
adc
sub
loopne
push
dec
aaa
lahf
and
ficoml
iret
nop
sub
fucomip
mov
rclb
ds
test
out
adc
addb
push
lds
push
pop
inc
cs
mov
push
insb
mov
dec
dec
xchg
cmpsl
dec
xor
inc
inc
xor
xchg
rcrb
and
clc
lcall
data16
jno,pn
push
dec
mov
adc
mov
mov
cmp
cwtl
arpl
sbb
lcall
adc
mov
pop
in
cltd
xchg
and
lock
cli
nop
lods
jmp
fdivr
gs
aad
shl
aam
cmp
add
arpl
mov
cli
pop
mov
mov
test
dec
ret
ljmp
rep
loop
push
pop
scas
dec
outsl
pop
rcll
cmc
out
je
xchg
mov
inc
gs
sbb
fstpl
cmp
lret
dec
or
pushf
mov
lahf
sbb
mov
and
lcall
mov
add
xorb
cmp
in
fstps
fnstenv
cmpsb
ret
mov
movsl
xor
sub
lahf
insb
mov
sbb
idivl
bound
sub
mov
sub
ret
pop
mov
mov
pop
pop
addr16
data16
xchg
xchg
inc
popf
mov
lods
addr16
inc
ret
push
mov
mov
mov
jbe
orb
fsubrs
hlt
mov
and
cld
insl
jmp
adc
push
shlb
stos
mov
mov
xchg
mov
je
pop
lods
stc
ret
imulb
add
inc
mov
xchg
mov
and
push
sub
add
pop
popf
mov
shll
cld
repz
push
es
jb
imul
popa
jbe
mov
add
cli
xchg
cld
xor
fnstsw
pop
div
int3
xchg
loope
pop
mov
jp
repz
add
sub
cmp
jae
jne
inc
mov
add
mov
je
icebp
and
fyl2xp1
ljmp
push
lods
mov
lods
cmpsl
adc
rclb
xchg
pop
arpl
push
pop
pushf
testb
mov
out
shll
mov
mov
pop
ds
in
ret
cmc
or
pop
xchg
pushf
outsb
out
rorl
sti
adc
lea
test
flds
out
cmp
int3
mov
fsub
sbbl
add
aas
dec
mov
into
in
lahf
insl
jbe
and
pop
sub
ret
or
sbb
mov
out
mov
data16
push
cltd
or
lds
sti
xchg
xor
add
insb
loope
and
nop
jle
cmp
inc
jo
sbb
orl
push
shrl
mov
cmpsl
dec
jo
fsubrs
int
lret
mov
test
popf
mov
mov
mov
add
test
mov
xchg
repz
in
icebp
js
sti
loopne
ds
outsl
aas
das
mov
cmpsb
lods
adc
and
sub
add
dec
jnp
pop
gs
mov
push
ret
loop
pop
push
pop
cmpsl
out
cmp
or
lret
push
sbb
mov
imul
xchg
push
inc
jl
push
inc
mov
adc
not
fstl
pop
mov
aas
ljmp
cmp
push
imul
mov
dec
insl
pop
add
inc
clc
fimull
je
mov
cmpsl
mov
dec
mov
mov
roll
push
push
leave
orb
fsubrl
push
js
and
xor
out
iret
xchg
fimull
rep
ljmp
pop
mov
cltd
inc
shlb
sub
mov
les
fidivl
dec
push
loop
mov
dec
imul
int
addb
mov
jg
ret
pop
push
cmp
dec
ret
xor
sub
cmp
mov
sahf
les
pop
jl
cli
out
cmp
test
and
mov
jle
xor
enter
out
shlb
out
push
xlat
mov
js
arpl
cld
ja
mov
je
or
imul
inc
cmp
jnp
fsubrs
mov
add
push
inc
fldcw
hlt
loopne
inc
adc
nop
dec
in
std
dec
pop
jp
add
sub
push
inc
daa
cli
jns
pusha
lea
lret
inc
xchg
mov
cld
jg
jnp
adc
pop
dec
test
nop
imul
shl
cmp
arpl
add
pop
or
xor
xor
and
push
sbb
mov
and
hlt
xor
adc
xor
fisubrs
xor
sti
enter
mov
ficoms
fucomi
or
test
cmc
hlt
or
dec
push
sub
lahf
dec
cld
arpl
push
push
xorb
xchg
sarb
push
out
dec
cltd
sbb
imul
cmp
mov
add
mov
stos
mov
sub
mov
lahf
xchg
inc
enter
xor
mov
call
xor
pop
jb
gs
pop
gs
insl
jp
ror
imul
mov
xchg
leave
mov
lods
aaa
lahf
cld
mov
jbe
cmp
xchg
inc
cmc
mov
fdivrs
ror
pusha
lods
cli
rcrl
stos
fisubl
pop
push
cmp
xor
movsl
add
daa
xor
dec
mov
les
push
insl
nop
rcr
lea
mov
mov
enter
test
push
test
pop
nop
mov
mov
in
sbb
cmp
xor
add
push
mov
pop
rcr
jns
je
lea
jg
sbb
mulb
shll
lods
out
cmp
nop
cmp
sub
mov
daa
or
enter
mov
cmc
sub
ror
xchg
in
sbb
lcall
dec
inc
sbb
inc
xor
jns
inc
shlb
jg
inc
sbb
push
lea
adc
out
enter
imul
lods
xor
divb
cmp
adc
lods
shrb
stos
add
mov
ret
hlt
or
fidivrs
sarl
mov
aas
inc
popf
push
push
sub
or
inc
xchg
ret
jle
fs
sbb
add
jmp
ja
ret
ljmp
popf
and
or
ss
cltd
add
imul
ds
cmp
pop
push
out
lret
pop
sub
insl
std
jle
and
mov
sub
pop
jl
lds
popf
outsl
aas
mov
mov
mov
rolb
shlb
ret
xchg
adc
adc
push
aam
enter
push
pop
mov
xchg
mov
ljmp
pop
mov
lds
push
inc
dec
popa
add
jmp
js
cwtl
outsb
dec
icebp
mov
mov
sahf
mov
test
es
scas
mov
pop
lret
xor
ds
push
jge
push
cli
mov
hlt
push
or
test
or
push
iret
sub
std
shrl
and
jb
xor
mov
popa
adc
addr16
mov
inc
aas
jne
xchg
and
int
push
nop
gs
cli
leave
sbb
sub
hlt
jo
addl
into
push
fistps
iret
jae
xor
xlat
jb
or
sbb
cmpsb
mov
cmp
push
jne
xor
int
in
pusha
ds
roll
popa
iret
aam
mov
mov
rclb
lds
les
das
jl
jo
jns
push
mov
push
dec
add
je
test
pop
int3
addr16
jecxz
ja
bound
sbb
dec
cmpsb
and
xchg
int3
xchg
mov
stc
jge
xchg
imul
idivb
pop
outsb
out
push
xchg
mov
je
xchg
icebp
inc
nop
push
mov
into
sbb
cmp
in
sbb
pop
cmp
out
lret
inc
sbb
imul
testb
adc
inc
ss
and
jo
mov
aad
mov
jne
call
imul
xor
fstpt
shlb
cmc
push
icebp
stc
cmp
pusha
and
and
and
lahf
push
enter
out
pop
jg
dec
inc
sub
mov
sar
push
push
mov
fnstcw
add
stc
nop
shrb
repnz
cld
sub
fucomi
mov
mov
cmpsl
sub
cmp
dec
out
pop
ss
ss
jmp
cmp
cld
push
cmp
shr
out
and
test
stos
cld
xchg
cmp
mov
push
inc
std
aad
sahf
rcl
mov
mov
dec
xor
mov
dec
sbb
jle
loope
mov
mov
mov
call
mov
or
jg
xor
aaa
mov
mov
gs
pusha
mov
ds
cmp
subl
mov
pop
or
xchg
jo
into
and
imul
sub
sbb
add
xor
push
push
out
rcrb
dec
pop
outsl
aas
and
pop
aaa
push
xor
stc
rcrb
lea
xchg
or
dec
scas
jb
gs
lds
mov
mov
mov
xor
cmp
adc
mov
popa
sti
mov
andl
in
lock
stos
sbb
mov
and
mov
iret
mov
dec
das
ljmp
add
push
rol
cltd
shld
push
ja
daa
es
sbb
add
mov
jae
imul
mov
pop
rcrb
les
pop
es
loop
push
sbb
cli
cli
or
lcall
int
fs
insl
fwait
jle
popa
mov
movsb
push
arpl
test
adc
lds
cs
push
inc
andb
mov
ss
adc
inc
fs
push
sub
and
sub
cmpsb
mov
subl
mov
sub
mov
lea
inc
flds
decb
jle
pop
cmp
shr
push
repz
and
sub
or
cmpsb
iret
fdivrl
sbb
test
add
adc
cmpsb
bsf
cli
iret
jmp
mov
xchg
xchg
mov
sbb
adcb
sbb
dec
out
loop
pop
stos
lods
data16
inc
xchg
test
jo
adc
sub
test
sub
outsb
adc
repz
pop
or
push
test
mov
data16
js
out
inc
in
mov
dec
dec
cmp
mov
push
sarl
into
js
push
jno
nop
in
jecxz
cmp
int3
fldenv
inc
mov
pop
mov
popf
cli
mov
mov
orb
or
add
aaa
icebp
dec
sbb
fs
add
or
mov
jae
pop
getsec
jnp
jbe
arpl
stos
mov
adc
push
call
xchg
sub
call
call
jns
push
scas
mov
cwtl
xorb
cs
mov
push
fs
pop
andl
fcom
and
mov
rcll
or
int3
mov
int
pop
mov
stos
jg
std
mov
and
add
jno
in
stc
adc
jecxz
jmp
lock
mov
xor
ret
mov
cmp
inc
imul
jle
ret
or
lds
or
or
mov
or
pop
test
gs
into
or
clc
icebp
sbb
cmp
cmp
cmc
int3
push
test
sub
dec
and
mov
mov
sbb
testb
in
repz
mov
or
test
ja
fbld
sub
shl
stos
mov
xor
cwtl
movsl
mov
call
jecxz
mov
or
cmp
jbe
or
mov
cltd
push
sbb
icebp
aad
xchg
movsb
push
inc
mov
pop
jge
js
popf
dec
int3
add
sub
jo
jmp
add
call
lds
jae
mov
cwtl
pop
jge
in
pop
lods
push
int3
movsb
or
loopne
sub
call
jbe
jecxz
cmp
xor
iret
jbe
cmp
pusha
push
nop
add
and
daa
mov
mov
adc
outsb
sti
cmp
xchg
call
movsl
jae
mov
xchg
push
imul
loopne
and
sub
jecxz
dec
sbb
mov
jnp
pop
stos
cmp
fldt
dec
orl
push
punpckhdq
mov
and
hlt
cmp
lcall
out
add
adc
popa
loop
xor
inc
lock
or
sub
fistpll
shlb
std
addl
jg
js
ds
push
sahf
andb
outsb
mov
add
gs
jns
insl
cltd
frstor
or
jo
jne
mov
aaa
cs
andl
aam
adc
pop
mov
cwtl
movsl
lea
lods
pop
mov
and
push
mov
xchg
jns
repz
aaa
imull
jb
lock
push
in
adc
repz
push
pushl
shlb
xchg
mov
movsb
sub
mov
out
or
push
cmp
cmp
or
mov
push
cmp
jns
mov
pop
xchg
sub
pop
call
pop
mov
and
cmp
lea
in
mov
dec
outsb
nop
rcll
scas
lods
shrb
sub
push
sbb
jle
mov
push
scas
jmp
inc
mov
inc
push
leave
outsb
orb
mov
push
lret
aaa
js
dec
pop
sahf
mov
es
movsb
xchg
push
popf
and
loop
cmpl
pop
mov
loop
hlt
mov
fimuls
mov
gs
jg
arpl
mov
mov
push
divl
mov
and
mov
xorl
or
push
mov
xchg
fsqrt
xchg
fcomps
sahf
nop
pusha
ret
push
adc
add
add
pop
nop
lcall
call
flds
mov
stc
cmpsl
lret
cmp
out
push
xchg
cli
cmc
push
out
mov
mov
ljmp
xchg
sbb
cmpl
or
loopne
cmp
sbb
je
jne
stc
cmp
sbb
sti
or
pop
mov
enter
cmpsb
xchg
lea
in
sub
pop
pusha
pop
sbb
lds
xor
sbb
fildll
sahf
in
mov
inc
mov
idivb
iret
xchg
xchg
ficoml
fstp
inc
inc
jp
rolb
sub
bound
repnz
insl
mov
and
or
push
and
movl
jns
out
adc
int3
sbb
rclb
cmp
xchg
mov
xchg
cli
mov
add
movsl
pop
jmp
lods
cld
mov
jo
pushl
mov
mov
xchg
sbb
popf
jae
mov
cmp
test
pushf
xchg
aas
mov
inc
push
pop
fcoms
sbb
mov
dec
in
dec
xchg
sbb
stos
cmp
int
xchg
jnp
jne
add
pop
je
leave
sbb
cld
scas
data16
pop
or
cmc
mov
sub
add
subl
test
xor
fcompl
jge
cmpsb
jmp
test
pop
add
cmc
std
jl
call
mov
movl
repnz
dec
or
out
xlat
sub
je
outsb
mov
ret
add
xor
daa
roll
testl
testb
pop
push
or
into
les
dec
leave
push
and
shrl
jae
adc
cmpsl
jmp
or
xor
inc
cmp
subb
in
gs
repnz
stos
clc
and
mov
add
incl
test
test
adc
stos
sub
lret
fcmovnbe
lock
mov
or
push
pop
cmp
and
testb
adc
mov
xor
sbb
mov
xor
fisubs
xor
scas
push
adc
in
mov
xchg
xor
popa
out
sbb
jno
inc
cmpsl
add
aaa
jae
pusha
mov
andl
sub
xchg
cltd
lock
call
lret
mov
pop
jge
adc
repz
repnz
xchg
add
jge
xchg
xchg
inc
daa
lret
cld
shrb
loop
dec
cmp
sub
je
sbb
or
loop
xchg
pop
icebp
ds
in
arpl
xchg
jo
cld
adc
hlt
cmp
sbb
mov
pop
addb
xor
ret
and
mov
std
pop
jmp
test
imulb
jmp
sbb
mov
faddl
nop
out
pop
xor
jecxz
out
in
or
faddl
rolb
imul
push
dec
and
xchg
mov
subl
sub
cmpsb
xor
mov
jg
aas
shl
insl
xor
sbb
dec
in
add
adc
push
repnz
icebp
ficoms
cmp
outsb
fstpt
inc
xor
xchg
and
jp
inc
ss
cmp
sti
hlt
lahf
aam
in
mov
dec
and
add
lahf
mov
cmp
pop
pop
out
mov
lods
dec
loop
add
xchg
jle
add
mov
push
test
push
ss
mov
mov
mov
pop
mov
sub
adc
push
and
call
int3
mov
sub
lret
pop
pop
in
nop
call
mov
jmp
jmp
stos
dec
repz
lods
adc
out
mov
shll
adc
lcall
pop
test
inc
xor
xor
daa
adc
pop
ja
es
cld
inc
inc
cmp
add
in
in
cmpl
fnstenv
dec
inc
ret
jmp
adc
xor
pop
imul
and
xlat
and
add
dec
push
adc
pop
bound
pusha
xor
call
adc
push
pmullw
bound
movsb
pop
loop
icebp
mov
pop
testl
adc
insl
stc
arpl
ljmp
jg
push
fldcw
out
sub
pop
fsubrl
jl
shrl
test
pop
push
cld
inc
je
push
adc
or
in
icebp
pop
xor
xor
xor
ret
cmc
cmp
stc
cwtl
scas
cwtl
incb
mov
push
cmp
lods
popa
inc
push
sti
cmp
mov
js
iret
push
push
hlt
sti
test
pop
sbb
cs
pop
push
inc
aam
push
rolb
ja
movsl
jne
sub
lds
mov
fsubrl
outsb
jb
xchg
mov
aaa
jle
mov
or
cli
fsubrl
imul
incl
imulb
push
aas
andl
sbb
add
sbb
popa
jo
inc
push
aam
jo
fmulp
dec
ficompl
in
ja
popa
add
jg
jl
xor
test
mov
jmp
insl
xchg
ljmp
ds
and
pop
pop
outsl
js
inc
mov
das
dec
scas
jno
outsb
cmp
pushf
mov
sahf
or
lret
arpl
or
inc
rorl
test
scas
pop
jns
and
or
jno
nop
inc
inc
mov
jae
push
arpl
push
pop
sub
inc
mov
loopne
push
in
shll
sbb
xorl
dec
subl
jmp
test
inc
shll
jae
out
push
jmp
jp
scas
inc
inc
mov
jne
aaa
fadds
sub
roll
jbe
test
sbb
and
and
and
and
inc
pop
sbb
addr16
loop
cwtl
int3
insl
lods
in
sub
cmp
fdivl
dec
add
mov
add
sbb
mov
shlb
mov
and
lea
inc
insb
and
pop
cmpsb
sahf
mov
in
push
add
jmp
add
loope
add
mov
add
push
xchg
adc
in
lds
cltd
data16
adc
data16
jl
mov
idiv
es
cwtl
mov
adcl
mov
dec
bt
adc
insb
sub
dec
inc
push
and
call
push
addr16
sti
sub
ficomps
aaa
insl
sub
lcall
ds
pop
add
in
inc
gs
jns
repz
sbb
cltd
push
sub
mov
push
lahf
subb
stos
lods
or
out
testl
mov
inc
mov
loop
adcb
xor
sub
clc
jno
mov
lods
sub
vcvtss2si
addr16
dec
fists
les
jmp
dec
jge
push
sbb
xor
pop
cmp
mov
movl
clc
out
fdivs
in
xor
mov
test
xor
dec
in
andb
icebp
push
fistpl
lods
jl
xlat
mov
fimull
aas
adc
xor
sbb
dec
xchg
ret
mulb
push
mov
orl
inc
pop
dec
xchg
fs
dec
aas
cmovne
repz
inc
scas
mov
ret
xchg
mov
xor
push
jl
sbb
push
mov
xchg
idivl
jae
popf
loope
jno
pop
mov
cmpsb
xchg
cli
jb
jle
cmpsb
mov
cltd
mov
lods
adc
mov
dec
dec
outsl
gs
popa
dec
mov
jb
push
dec
nop
lods
sbb
out
mov
popa
pusha
dec
dec
inc
mov
mov
push
push
int
and
push
nop
arpl
daa
add
sub
lods
lea
jb
or
pop
pop
jmp
jl
test
out
jmp
cmp
dec
aad
imul
push
mov
pushf
cmp
or
ret
shlb
loop
outsl
jbe
mov
mov
or
xchg
sbb
pop
ljmp
inc
adc
mov
and
mov
add
test
cli
adc
jae
sbb
repnz
cmpsb
and
pusha
sbb
mov
jae
je
loop
or
push
test
lock
mov
mov
mov
iret
jne
adc
ret
out
inc
rcr
or
cwtl
out
scas
cmp
push
int
lods
dec
cwtl
and
xchg
sub
mov
add
gs
divb
fwait
or
push
stos
push
loop
lea
cmp
jl
into
fsubl
test
repz
fsubl
cmp
cld
pop
fs
leave
call
cmpsb
scas
sahf
push
fsubr
cmp
dec
fs
je
data16
cmp
cmpsl
adc
outsb
test
jmp
xor
lahf
inc
push
enter
pop
cli
jecxz
adc
or
aaa
loope
outsb
cmc
jb
ficoms
add
lock
out
roll
test
and
sti
xor
pop
push
in
test
je
xlat
loop
repz
jle
jmp
sbb
push
jbe
cmp
fsub
mov
mov
add
sbb
rcrb
sti
jne
jp
pop
jmp
push
loopne
xor
scas
ds
mov
sbb
andb
movsl
std
sub
xlat
int3
mov
push
mov
adc
sub
pushf
jns
std
lahf
data16
and
sub
pop
sub
imul
in
mov
dec
in
aam
sbbl
mov
shrb
repz
or
push
or
and
xor
mov
sbbb
pop
jecxz
repnz
nop
push
xor
xor
cmp
jne
xor
push
pop
cmc
jo
mov
xor
mov
addr16
xchg
dec
fldl2e
pop
dec
ret
insl
js
and
into
lret
adc
test
sbb
inc
das
cmpsl
dec
ss
mov
add
lcall
psubsb
mov
pop
cs
cmp
sbb
mov
repnz
cwtl
pop
inc
fbstp
shl
popa
jbe
pop
xchg
push
add
sub
imul
xor
mov
xchg
lahf
movsb
les
testb
addb
jecxz
jbe
cmp
xchg
scas
js
push
pop
mov
sub
push
push
insb
jbe
sub
mov
das
jge
xchg
jge
insl
mov
dec
pop
mov
xor
popl
repz
movsl
cmc
pop
iret
mov
testl
mov
daa
mov
out
dec
out
xchg
fiaddl
or
mov
mov
sub
sbb
negl
sub
sarb
cmp
into
repnz
jns
mov
pop
sub
pop
add
out
cmp
repz
and
pusha
pop
adc
cltd
adc
lret
adc
inc
mov
adc
daa
add
sahf
outsb
jne
mov
hlt
jne
divl
mov
rcrb
push
pusha
pop
xlat
add
pop
xchg
mov
in
mov
xchg
sbb
loope
jecxz
in
mov
in
sub
imul
repz
jo
and
jmp
ss
or
loop
jb
dec
hlt
xor
push
fildll
inc
aaa
out
ret
in
ret
pop
fmuls
ljmp
push
pushf
gs
push
popf
in
adc
loope
mov
mov
sahf
xor
jo
lds
aam
mov
jns
into
jl
push
imulb
lcall
jg
sti
fbstp
mov
ja
fbld
or
inc
and
imul
jns
jns
cmp
jne
bound
add
repnz
push
push
xor
fiadds
sbb
pop
xor
mov
add
mov
xor
fidivl
repz
gs
jecxz
aaa
sub
ds
sbb
adc
and
cmp
pop
lock
jmp
scas
mov
cmp
dec
mov
jge
xlat
pop
dec
mov
clc
iret
in
sbb
orb
cmp
cmp
sbb
aas
add
and
add
xchg
sbb
outsb
stc
sti
cwtl
aaa
ja
and
dec
jne
movsb
mov
push
lret
test
flds
xor
mov
jo
mov
xor
mov
pop
jge
les
mov
popa
insb
mov
aad
lock
enter
and
iret
pop
pop
jg
out
or
lret
xor
or
mov
pop
iret
xchg
lret
or
out
fmuls
leave
sub
lea
push
aad
xchg
ss
inc
negl
xor
mov
push
add
inc
test
cmp
daa
sub
lahf
dec
or
repnz
xlat
xor
xchg
cwtl
xor
pop
pop
cmpsb
out
mov
xor
loop
aaa
fsubr
jecxz
cmpsb
movsb
sub
cmp
xchg
cmp
sub
pop
dec
xor
jg
xor
cmp
aas
pushf
push
movsl
repnz
add
pushf
es
scas
xor
loop
fildl
or
or
sub
stos
frstor
insb
add
jae
xchg
xchg
popf
push
xchg
fcoms
mov
jmp
scas
jp
inc
fcmovne
mov
into
scas
mov
aaa
popa
xorb
jne
lock
and
adc
outsl
jne
ret
lds
sarb
mov
fidivrs
push
push
movsb
scas
cmp
xor
mov
cmpsl
movsl
push
movsl
lcall
xor
arpl
int3
sub
imulb
ret
or
and
jne
xor
xor
dec
or
fsincos
cmp
adc
test
mov
mov
test
push
xchg
xchg
movsl
jnp
fwait
aam
and
fimuls
dec
or
stos
hlt
push
adc
loop
nop
sahf
mov
or
xchg
xchg
ret
jb
push
cmp
jl
out
into
ds
jnp
or
outsb
rorb
inc
scas
mov
adc
hlt
cmpsb
movsb
dec
xchg
rcll
add
and
lods
and
or
ja
xor
cltd
loopne
test
shrb
mov
mov
nop
inc
cs
in
gs
pop
mov
pop
aas
or
push
mov
add
test
test
les
pop
dec
inc
leave
sti
or
sub
lret
dec
inc
pop
xor
dec
cli
fsubs
js
fiadds
hlt
movb
pop
sub
adc
orl
sbb
pop
scas
adc
ljmp
xchg
or
leave
scas
sub
adc
xchg
push
inc
mov
and
in
sub
xchg
jns
fcoms
jno
cmp
scas
insb
pop
repnz
negb
mov
jno
stc
add
cld
sub
sub
sahf
loope
movd
pushf
adc
shrb
jle
mov
sbb
lods
add
lea
cmp
ret
xchg
sub
or
sbb
jo
xchg
mov
mov
into
ja
cmp
mov
mov
jmp
icebp
jb
lcall
or
cmp
push
jp
pusha
into
dec
or
jne
pop
adc
xchg
aad
xchg
jb
mov
imul
pop
hlt
add
sbb
sbb
fstp
mov
dec
jle
push
movl
mov
pop
xor
addl
fadds
ret
jp
lods
cltd
addb
dec
outsb
filds
in
lods
adc
push
inc
jmp
xor
add
mull
mov
push
mov
dec
jl,pt
xor
sbb
jne
shlb
adc
test
pop
enter
jl
daa
and
xor
lahf
xchg
dec
mov
stos
jmp
in
popf
jno
call
aaa
push
dec
pop
dec
repz
pop
add
pop
add
add
adc
cmp
pop
sbb
sbb
or
sbb
mov
and
dec
jp
fcoml
xor
mov
adc
lret
pop
adc
ret
insb
outsl
shrl
rcrb
imul
pop
xchg
xor
fiaddl
sub
test
std
pop
xor
and
xor
ret
dec
sub
push
fadds
mov
out
pop
out
fists
enter
pop
lahf
fs
aaa
push
fdivrl
loop
add
rcll
repz
add
push
test
loope
sub
clc
inc
stc
jae
loop
insl
test
mov
sub
mov
jae
add
add
adc
ja
cmp
lock
and
mov
jle
and
mov
outsb
jae
mov
aad
jp
in
dec
enter
mov
imul
in
aam
or
ljmp
std
push
jg
movsb
out
test
ds
mov
fcom
xchg
push
pop
ljmp
sub
xorl
inc
test
lret
cmp
inc
fcmovbe
push
inc
std
gs
jno
fimuls
insb
push
cmp
dec
push
jecxz
and
je
fimuls
cmp
loop
pop
cmp
insl
cmpl
ja
or
mov
into
int3
lahf
mov
mov
pop
xor
std
mov
mov
loope
shll
mov
jb
movl
inc
lods
les
xor
jg
and
lock
outsl
push
mov
int
fdivrs
sub
inc
out
push
mov
pop
addr16
mov
pop
enter
ss
cmpsl
cli
lea
fwait
mov
lock
sbb
outsb
adc
mov
jo
sub
adcl
cmp
adcb
xor
adc
add
cmpb
mov
iret
xchg
sub
dec
sahf
inc
xor
loopne
int
jl
in
mov
in
xchg
fistpl
shll
dec
pop
mov
popf
loop
in
lcall
insl
iret
xor
cmp
shlb
mov
pop
mov
or
mov
por
std
lcall
xchg
dec
rorl
rorb
dec
cmp
and
or
inc
fstps
pop
das
clc
dec
cmpsl
mov
sbbb
push
pop
xor
sbb
ret
fidivrs
mov
iret
mov
mov
pusha
aaa
add
dec
dec
xor
mov
repnz
push
stos
jp
add
mov
aad
jmp
sbb
adc
or
adc
mov
fsubs
mov
and
xchg
pop
sti
xor
and
ret
int
setp
or
shrb
sub
pop
fwait
data16
cs
cmp
pusha
push
dec
sbb
push
or
in
stc
aaa
add
cmp
or
push
sbb
adc
inc
and
pop
mov
inc
cmp
jg
stc
data16
fistps
dec
addb
cmp
mov
subl
xor
push
mull
lret
ds
in
sbb
add
outsb
xorl
es
pop
jg
dec
ljmp
lea
js
jmp
pop
in
add
jnp
push
jno
xor
into
push
pop
push
push
jge
scas
xor
in
adc
jne
fimuls
leave
incb
push
lea
roll
seto
pushf
cmp
mov
sub
sbb
adc
aaa
dec
lea
mov
dec
faddl
icebp
stos
loope
mov
inc
jb
xorl
scas
mull
xor
xchg
pop
ret
sbb
pop
rcr
mov
sti
jnp
leave
cmp
sbb
or
lods
in
imul
inc
icebp
jno
pop
enter
jge
mov
mov
xor
repz
xor
sub
jbe
sbb
and
inc
out
clc
mov
dec
movsl
mov
dec
imul
loopne
daa
idivl
push
xor
mov
cltd
or
dec
jp
loopne
pop
repz
jl
adc
test
ss
sbb
popa
icebp
pop
pop
mov
push
insb
xchg
inc
imul
cmp
daa
or
daa
icebp
nop
cs
inc
add
ss
push
push
push
xchg
cmc
xchg
repz
jle
mov
sub
and
mov
sbb
out
sub
push
cmpsl
xchg
les
cmp
xchg
jecxz
js
pop
adc
push
mov
lods
pushf
je
jmp
xor
adc
lods
mov
out
or
xchg
add
xchg
dec
mull
jo
fiaddl
bound
push
je
or
or
sub
scas
xor
pop
mov
ja
and
mov
fsubrs
mov
movsl
clc
call
scas
int
xor
test
popa
xchg
push
mov
cld
lret
ret
xchg
mov
mov
sub
xchg
loopne
arpl
push
cmpl
mov
mov
mov
clc
fwait
pop
mov
xlat
test
testb
js
fmuls
push
sub
jp
in
test
ret
jge
xor
adc
fstpt
adcb
mov
cmc
and
pop
stc
orb
int
ret
popa
xor
mov
mov
int
aad
rclb
int
popa
scas
iret
rolb
mov
jb
dec
imul
mov
pop
or
and
je
shlb
adc
and
int3
inc
cli
xrelease
mov
sbb
daa
jb
pop
fldt
notb
int3
mov
inc
cmpsl
push
frstor
hlt
int
xchg
and
out
adc
add
aaa
cli
dec
xchg
sub
loopne
out
stc
inc
or
or
lea
lret
cs
mov
loope
dec
cmp
cmp
xchg
push
jge
dec
sahf
xor
jno
pop
rorb
lret
clc
xchg
mov
inc
popf
ror
cld
mov
mov
jnp
in
fistpll
fsts
fwait
loope
inc
adc
repz
inc
aaa
mov
jge
js
shrl
jge
fists
dec
stos
shlb
ss
enter
aaa
and
pusha
sahf
mov
cwtl
sub
insl
dec
ret
dec
pop
push
cmpsl
push
sbb
mov
xlat
fisubs
mov
stos
mov
jecxz
movsb
data16
xchg
inc
outsb
fwait
pop
add
mov
xchg
nop
inc
add
ds
adc
mov
sbb
fcoms
bswap
out
mov
push
jge
std
mov
jecxz
xchg
loope
or
add
loop
cli
cwtl
xor
int3
mov
jmp
push
fs
xor
xor
sbb
sbb
mov
xchg
fnstsw
jb
cltd
xor
cld
xlat
std
iret
adc
insl
sbb
rorl
fisubl
fstpl
pushf
xor
sub
adc
outsb
jbe
out
sub
test
shlb
insl
pop
vmwrite
dec
inc
sbb
test
mov
xor
mov
icebp
xchg
mov
icebp
inc
jnp
and
pusha
mov
aas
repz
sbb
or
lods
lods
popa
mov
outsl
dec
xor
pop
pop
out
fwait
add
add
add
out
add
sbb
sub
in
adc
xchg
and
adc
daa
mov
or
out
adc
addr16
ja
xchg
ja
outsb
adc
insl
mov
insl
cmp
fisubrl
add
jmp
xor
test
shlb
inc
scas
sti
les
stos
jnp
pop
cli
cmp
rclb
arpl
add
daa
call
clc
je
mov
push
dec
add
mov
xchg
xchg
mov
sbb
cltd
mov
cmp
cmc
mov
jns
popa
and
adc
adc
int3
adc
and
mov
add
lea
es
cwtl
cmp
mov
std
mov
enter
jl
adcb
dec
sub
sub
pop
push
fnstenv
loopne
and
push
sub
sub
mov
scas
aam
cmc
ds
lock
out
add
fdiv
mov
int
jmp
cmp
xchg
and
das
dec
mov
xchg
push
leave
iret
inc
xor
mov
frstor
pop
lret
dec
xchg
jb
mov
out
in
pop
xor
and
mov
pop
push
mov
jle
aam
jg
clc
mov
fcomps
cs
pop
and
and
jbe
ds
mov
adc
rcl
stc
push
adc
fcmovne
adc
sbb
add
mov
icebp
mov
adc
cmp
outsb
sarb
jo
ss
in
mov
pop
lods
in
xchg
push
cmc
sbb
sarl
adc
and
enter
or
pushf
xor
xchg
jp
sbb
ret
add
fadd
xlat
mov
cmp
hlt
jo
cmp
mov
push
cmp
sbb
or
cld
outsb
xor
ds
push
clc
cltd
inc
push
dec
loop
fdivrl
cmp
or
shll
sub
iret
loope
aas
mov
lret
or
add
shlb
mov
adc
xchg
sub
ss
or
xchg
adc
ret
inc
mov
add
dec
add
mov
pop
adc
mov
mov
repz
mov
xchg
mov
clc
icebp
fldcw
aas
mov
repnz
bnd
xor
imul
sbb
or
mov
inc
inc
in
aas
push
cs
repnz
iret
lods
xor
test
enter
xchg
in
movsl
movsb
push
sbb
add
sub
dec
sub
out
push
xor
out
push
out
call
xchg
mov
aam
push
add
shl
and
ljmp
fwait
cwtl
jno
scas
or
popf
inc
in
lods
cltd
inc
rorl
fwait
jl
idivl
mov
gs
mov
imul
inc
dec
negb
xlat
lods
imul
jmp
outsl
mov
or
jp
mov
inc
mov
inc
add
mov
adc
push
mov
lea
jbe
mov
mov
push
jne
dec
rorb
push
repnz
bnd
inc
jg
outsl
xor
pop
daa
mulb
push
loop
das
mov
jl
jbe
fists
arpl
mov
aaa
in
das
testb
sbb
mov
add
dec
jl
or
xchg
loopne
addr16
xchg
xor
mov
bound
mov
xlat
fsubrl
push
jl
dec
test
sbb
int
jno
lret
adc
cmc
pop
push
int3
out
cmp
loopne
inc
pop
inc
xor
push
mov
xor
sbb
fcompl
pop
xchg
pop
je
jbe
les
xchg
push
nop
mov
xchg
frstor
cs
into
movsl
jne
pop
bound
rcll
loop
add
data16
and
cltd
mov
out
xchg
push
pusha
stos
push
pop
adc
xlat
pop
test
mov
int
cwtl
push
inc
out
xor
add
insl
mov
mov
pop
fcoml
orl
mov
div
mov
jmp
cmp
sahf
out
int
das
inc
and
jl
mov
jns
mov
mov
push
es
sbb
mov
lock
outsb
lret
push
sbb
hlt
aas
push
lahf
jmp
mov
jne
add
shlb
aam
dec
fdivs
cmp
lret
xor
hlt
pushf
adc
popf
add
jae
sahf
mov
sub
insl
cmp
inc
xchg
data16
iret
adc
sub
push
cltd
jne
mov
mov
sub
fcmovnbe
mov
les
out
xor
push
imul
imul
mov
incb
mov
inc
fidivs
fistpll
jne
mov
push
ljmp
lret
mov
in
push
and
xor
aad
rolb
mov
or
mov
mov
orb
inc
inc
mov
adc
xchg
jecxz
shrl
cltd
out
mov
out
not
adc
in
icebp
dec
mov
dec
fwait
jno
test
sub
into
stos
shlb
ljmp
push
inc
mov
ss
sub
xor
mov
mov
js
out
pop
fs
adc
sbb
xor
popf
add
fistpl
xchg
pop
and
outsb
arpl
mov
hlt
outsb
les
mov
mov
inc
jmp
mov
adc
outsb
nop
outsb
push
jne
insl
sbb
imul
fistpll
pop
mov
jecxz
or
movsl
fwait
xor
cmpsb
cmpsl
cwtl
push
sbb
in
inc
fildl
aad
pop
ret
jae
mov
mov
push
add
sbbl
rorl
repz
out
xchg
mov
stos
jge
xor
dec
xor
pop
insb
adc
inc
sahf
sub
add
xchg
and
out
adc
or
aas
cmp
ljmp
sbbl
pusha
push
and
repnz
inc
mov
notl
adc
jecxz
push
lret
scas
add
icebp
dec
cmp
and
mov
call
cmc
sub
ja
mov
stos
aaa
int3
dec
ds
mov
nop
inc
divb
jno
stos
hlt
dec
inc
and
mov
hlt
sub
jl
cli
mov
pushf
jae
add
lcall
mov
add
imul
daa
popf
jbe
mov
cmp
ret
push
test
push
adc
dec
fidivl
loop
pop
jmp
push
insl
test
dec
push
dec
add
sub
and
mov
in
lock
dec
inc
sub
dec
fidivrs
cmp
mov
ljmp
scas
and
or
in
rorb
int
jg
adc
mov
jle
outsb
insl
pop
cmp
pop
sub
scas
mov
insl
popa
mov
add
cli
mov
adc
gs
pop
sub
lods
icebp
das
insl
movsw
xorl
into
fwait
or
xor
int3
xor
es
in
xchg
jp
sbb
bound
push
cmpsl
inc
cmp
pop
mov
fstps
call
loopne
loop
daa
inc
jbe
xor
adc
or
sub
nop
jne
sub
imul
lret
jmp
hlt
sbb
mov
rorl
mov
mov
and
lahf
inc
call
fiaddl
jb
fscale
es
sahf
sti
das
sbb
pusha
pop
imul
mov
jnp
mov
fsubs
dec
mov
sub
cmpsl
mov
lock
jmp
jmp
add
addb
cli
push
pop
push
push
inc
repnz
lret
js
adcl
adc
popa
xor
addr16
xchg
cmpsl
test
xchg
movsb
fnstcw
add
xlat
push
ret
dec
or
loope
in
fiaddl
mov
test
mov
mov
xor
jge
jns
xchg
jb
cmpsb
push
in
insl
sub
jge
cmp
loopne
into
imul
test
cmpl
icebp
bound
test
xchg
repnz
sub
adc
jne
and
mov
sbb
pop
shlb
iret
push
dec
push
jl
inc
mov
mov
mov
push
inc
mov
icebp
mov
aas
je
xchg
jmp
mov
repz
shll
or
fsts
and
sub
mov
jle
xchg
add
inc
cmp
jne
or
xor
lock
mov
pusha
xor
shrl
push
mov
fisubs
pop
xorb
push
mov
cmp
aad
mov
cmp
cmp
testl
xchg
xchg
mov
xchg
dec
mov
stc
or
sbb
cmp
cmpsb
in
popa
mov
pop
fmuls
jne
cld
sub
pop
push
pushf
insb
iret
inc
enter
push
aaa
push
push
and
addb
dec
test
xchg
cwtl
cmp
out
test
fists
inc
hlt
out
data16
imul
xor
pop
push
lret
addr16
xchg
pushf
add
jne
jmp
pop
add
xchg
pop
adc
aas
int
clc
pop
aaa
fcomps
mov
orb
aas
sub
mov
cmpsb
or
icebp
mov
aas
fcmovu
cmc
test
out
pop
mov
xor
and
fs
sahf
mov
xor
add
outsl
in
jno
sbb
cmp
incl
in
mov
loope
jno
mov
mov
xchg
dec
mov
push
push
call
push
movsb
mov
push
stos
sbb
data16
fcompl
adc
add
addr16
mov
and
pop
fstpt
mov
dec
add
push
test
mov
in
shrb
cld
sbb
aad
pop
aam
scas
dec
in
pop
addr16
sub
rcr
xbegin
inc
sbbl
in
pop
iret
rolb
stc
addr16
loopne
ljmp
and
adcb
or
mov
insl
cli
lret
add
lods
add
or
mov
add
push
mov
lret
stos
sub
mov
ret
lea
mov
fisttps
ret
call
dec
daa
dec
movsl
jno
shr
add
xchg
and
xor
js
test
xor
leave
pop
xorl
xchg
cmp
mov
faddl
sub
je
xlat
lret
daa
dec
stos
push
pop
and
out
pop
dec
stc
nop
dec
movsb
dec
stos
out
xchg
inc
outsl
mov
out
mov
lds
into
popf
ds
fucomip
adc
cmp
incl
xchg
pop
mov
sub
jo
fbstp
dec
xchg
xlat
push
iret
xchg
hlt
add
jg
out
sbb
xorb
test
mov
leave
testb
jmp
mov
imul
vpcmpeqb
clc
mov
lret
ret
pop
xchg
dec
jns
ja
push
into
pop
mov
scas
xchg
lods
push
cwtl
cmc
sbb
pushf
adc
inc
add
lahf
mov
xlat
mov
pop
repz
or
cld
ljmp
sbb
push
clc
aas
add
insl
adc
lcall
inc
js
mov
out
dec
xor
mov
pushf
mov
xlat
test
or
aad
and
add
xor
cltd
dec
add
adc
outsl
in
fcmovu
loope
rorb
mov
xchg
jg
lds
jnp
addr16
repz
mov
cmp
nop
mov
shrb
sahf
je
out
cli
out
sahf
pop
or
mov
out
add
xlat
inc
push
sbb
js
dec
pusha
and
mov
movsl
and
stos
pop
mov
sbb
mov
mov
mov
sub
test
les
adc
and
jo
stos
xchg
popf
or
push
jb
and
push
aad
jo
push
xchg
in
push
pop
push
or
out
sbb
push
fs
adc
jb
cwtl
sub
loopne
lret
mov
pop
int3
stos
jmp
pop
ffreep
and
dec
xchg
mov
pop
shl
popa
add
cmp
jp
xor
std
mov
aad
cmpsb
lea
aad
lahf
cmp
adc
imul
enter
jmp
insl
fcoml
nop
or
xchg
rclb
stos
xor
pushl
lret
mov
fldt
sub
or
add
pop
ds
dec
pop
fldl
xchg
lahf
out
mov
jg
pop
js
push
sub
fnsave
sahf
pop
cld
je
fstl
dec
add
je
int3
incb
and
mov
cwtl
or
push
hlt
xchg
arpl
popa
xchg
inc
sbb
sub
xchg
mov
mov
and
cmp
sub
mov
pop
xor
ficoms
or
or
xchg
fs
mov
lcall
hlt
sarb
push
data16
sbbb
popa
or
movsb
movsb
xor
pop
jmp
dec
inc
lock
mov
fcmove
nop
inc
pop
fadds
cli
cltd
mov
aas
lods
mov
push
or
jg
loop
gs
scas
lahf
sub
iret
inc
jno
jne
jle
nop
cwtl
divl
ja
fcoms
inc
mov
test
mov
aad
sti
push
add
adc
sbb
loope
jg
jl
adc
or
js
lods
push
push
pop
xchg
push
loopne
push
sbb
mov
cmp
sub
iret
adc
rcr
call
or
xchg
mov
cmp
arpl
in
xor
and
js
dec
loope
or
outsb
nop
inc
or
das
mov
xlat
push
in
mov
lds
inc
jne
push
pop
test
loope
sarl
out
pop
sti
divl
sub
sbb
dec
fs
popa
enter
push
jmp
push
cmc
ret
cmpsb
cmp
mov
dec
or
inc
sub
dec
insb
int
adc
jno
jl
adc
mov
sahf
mov
fldt
nop
pusha
or
repnz
xchg
push
jge
dec
repz
mulps
xchg
sbb
inc
sub
ljmp
jle
aam
xchg
push
je
shl
push
test
sarb
pop
jle
sub
lods
push
push
mov
adc
aad
jae
jb
int
mov
pushf
and
rcr
push
shlb
ds
cmp
negb
add
or
pop
inc
sar
dec
ss
arpl
loop
dec
mov
mov
jbe
sbb
or
ja
push
stc
mov
xchg
jmp
rclb
ds
popa
sahf
scas
pop
dec
mov
sbb
push
jno
sgdtl
jmp
addr16
inc
loopne
xor
dec
jl
in
or
fidivrs
fs
jno
vpsubb
loope
pop
dec
xchg
mov
outsb
push
jp
dec
or
cmp
inc
ds
leave
pop
loop
jae
pop
pop
lcall
lea
inc
xor
lds
and
xchg
mov
gs
adc
in
sub
xchg
imul
int3
inc
movsl
jno
jmp
sbb
outsl
inc
jnp
cltd
fcmovnu
cmp
xor
fwait
and
push
fs
pushf
cli
inc
ds
pop
in
loop
or
and
loope
in
enter
lea
pop
dec
mov
mov
push
sub
insb
pop
stos
cli
push
enter
jecxz
lods
les
test
subb
mov
fisttpl
jp
push
xor
jno
shll
xchg
push
fwait
lahf
xorl
popl
mov
inc
xor
out
adc
push
ljmp
add
sub
lahf
mov
cli
fsubrp
out
dec
add
mov
xchg
fidivrl
sbb
xor
push
rclb
nop
insb
adc
pop
in
enter
gs
daa
in
popf
js
roll
dec
inc
mov
fildl
ret
ret
lcall
inc
in
shlb
out
add
xor
xor
decl
push
mov
in
mov
adc
outsl
test
sbb
js
les
lcall
push
push
mov
movsl
outsl
adc
dec
jne
lods
ret
mov
lock
add
nop
popa
fwait
or
imulb
xchg
or
mov
push
jnp
sub
popa
dec
dec
lret
mov
mov
sbb
jle
out
andl
aad
cmp
mov
mov
roll
dec
push
rsm
lods
lahf
lret
outsb
push
sub
xor
out
dec
or
jae
inc
push
jle
cli
mov
jo
add
dec
dec
dec
cs
fcmovnb
test
imul
clc
ret
data16
lds
mov
movsb
add
repz
jbe
in
push
decl
push
jl
aas
lods
lods
mov
or
cmp
lret
or
movsl
mov
imul
push
and
inc
adc
les
mov
inc
cld
movsb
mov
mov
dec
push
cmpsl
roll
pop
sbb
or
test
mov
push
push
adc
nop
leave
and
imul
and
stos
inc
push
inc
mov
jmp
sti
into
xor
into
aam
add
lcall
cmpsl
mov
jbe
lods
pushf
dec
push
mov
stos
mov
iret
rclb
ss
sbb
sbbb
lods
inc
rcrb
and
cmp
mov
and
je
cmp
popa
out
and
push
lahf
pop
fs
add
out
or
sub
cmpsb
jle
pop
pop
add
mov
loop
sbb
jns
dec
es
pop
ret
sbb
jno
scas
xchg
and
pusha
jp
push
mov
orl
mov
xchg
adc
push
add
imul
lret
add
outsb
cs
rcrl
xor
xor
add
cltd
dec
mov
ficoms
scas
push
dec
lret
iret
mov
mov
cld
pop
sarb
rcll
jecxz
xchg
mov
daa
mov
push
aad
sub
popa
xor
popf
loopne
movsl
lock
adc
push
adc
sub
jecxz
cmpsb
frstor
jmp
xor
inc
jnp
jg
add
push
mov
xor
push
add
and
xor
or
inc
mov
xor
lock
fmul
aas
or
push
push
pop
bound
cmp
sub
adc
cli
xchg
push
push
mov
out
sar
stos
mov
int3
xorl
or
mov
mov
or
stc
sub
in
inc
push
pop
ja
push
aas
push
popf
dec
out
dec
rclb
dec
loope
or
int3
add
pop
mov
loopne
or
lock
arpl
jbe
scas
addr16
dec
and
stos
jl
jecxz
or
push
pop
sbb
inc
xor
jns
push
jb
inc
mov
stc
cmp
mov
inc
fdivs
add
imul
enter
data16
dec
cmpsl
pop
add
mov
jge
xor
rorl
adc
test
testl
inc
daa
shrl
scas
push
pop
mov
jl
and
and
push
je
loop
add
dec
or
dec
mov
in
pop
jg
jo
call
dec
lods
mov
fbstp
les
sti
mov
and
push
rcl
and
mov
fidivs
hlt
das
or
fsubl
out
xchg
adc
clc
and
mov
loop
out
das
push
pop
add
pop
push
inc
and
dec
pop
jl
mov
fmuls
gs
movsb
mov
sbb
xor
lock
in
mov
push
dec
sbb
xchg
aam
xchg
and
das
andnps
dec
scas
int3
shl
sbb
into
mov
mov
mov
sub
push
add
jecxz
cmpsl
loopne
cmp
dec
xor
or
cmp
add
fcmovbe
dec
icebp
mov
mov
shll
mov
cmp
andl
jo
pop
mov
adc
pop
cmp
popf
adc
repnz
iret
mov
addb
adc
pop
pop
pop
sub
inc
cmpsb
das
pushf
dec
add
jb
xchg
mov
adc
pop
loope
push
sub
sti
inc
cmp
in
jg
iret
ljmp
rorb
jne
xchg
pop
add
add
adc
sbb
xchg
pop
dec
lret
les
pop
lock
outsb
sbb
cmp
xlat
outsb
fsubl
fsubr
stos
test
scas
xor
mov
sub
arpl
push
fs
xchg
pushf
mov
add
repz
movsl
test
mov
stc
lods
repnz
sahf
and
pop
arpl
and
mov
and
fwait
call
add
cmc
lock
repz
cmp
xor
pop
aas
push
xchg
add
sti
pop
repz
pushf
stc
sbb
xchg
xor
pop
sahf
test
leave
aas
dec
out
cs
in
inc
inc
movsb
pop
push
sub
adc
mov
paddsb
lods
loopne
lret
shrb
pop
lds
cli
in
sbb
add
mov
cli
les
xchg
fistl
mov
inc
dec
cmpsb
pop
mov
dec
jnp
in
add
xchg
imul
sbbb
or
int3
or
mov
adc
or
imul
push
inc
pop
add
jl
rol
mov
and
mov
adc
in
jg
mov
sbb
call
fxch
mov
push
or
movsl
mov
inc
popf
ja
sub
add
movsb
inc
add
lock
imulb
rorl
and
mov
sarb
jp
int
cmpsl
iret
xchg
fdivrs
mov
pop
decb
out
adc
adc
jb
cmpsb
xchg
popl
bound
int
pop
inc
movsb
stos
out
cltd
fs
push
jecxz
out
push
daa
jl
leave
popf
mov
dec
inc
dec
push
inc
imul
inc
adc
xchg
fisubrl
call
mov
faddp
sbb
fs
in
xor
das
cmp
outsl
or
mov
xor
dec
out
pop
mov
sbbb
add
dec
js
adc
dec
aaa
jmp
adc
adc
aam
pop
inc
cmp
adc
adc
mov
xor
add
out
cltd
sbb
mov
adc
ja
arpl
inc
push
rorl
lock
jl
jle
dec
push
notb
pop
icebp
mov
jne
add
aam
xchg
lret
pusha
mov
lret
add
inc
shll
lret
loope
add
cs
imulb
adc
fnsave
scas
sub
testl
pop
sbb
and
jo
ret
rorb
adc
scas
xchg
inc
sub
dec
inc
dec
pop
aam
cmp
xor
enter
xchg
sub
mov
adc
inc
data16
loop
pop
cmc
adc
push
std
cmp
cmp
sub
outsb
test
das
inc
lea
push
fnstenvs
test
xchg
xchg
xchg
lret
mov
xchg
sub
push
movb
inc
pop
out
jbe
fwait
rorb
mov
mov
ret
int
inc
mov
cmp
shll
xor
clc
ret
lret
push
dec
das
mov
pushf
repnz
add
xchg
nop
daa
push
ds
or
sub
insb
clc
dec
pop
popf
out
popf
ja
jnp
iret
rcr
aas
subb
aas
mov
lea
aam
mov
sub
fstpl
ret
pop
add
xor
mov
xor
push
stos
sub
ret
sbb
mov
xchg
pop
int
mov
push
rorl
or
and
mov
jne
lret
xor
push
add
mov
dec
pop
xchg
sti
mov
or
mov
ljmp
push
nop
fnsave
xor
inc
jmp
fstp
hlt
in
das
sbb
clc
adc
mov
mov
cmc
lret
in
enter
scas
fcmovne
stos
inc
lods
sub
mov
push
mov
pusha
cmp
inc
outsl
xor
fnstcw
dec
loope
xchg
dec
les
loope
cmp
inc
fldcw
or
push
sub
lock
in
mov
imul
lret
xor
cmpsb
inc
hlt
cs
xchg
jbe
mov
inc
lret
add
fwait
sub
int
in
lods
jle
into
sbb
add
xchg
push
inc
movsb
stos
fmull
cmp
xchg
scas
icebp
xor
cmovb
out
lock
pusha
cwtl
or
sub
pop
push
movb
cli
push
sbb
push
xchg
pop
mov
jecxz
das
subb
loop
add
sub
jp
dec
jo
in
das
jb
imul
jne
push
and
lcall
movsb
or
push
add
fst
push
ret
cs
sub
push
dec
jecxz
xor
pop
aad
hlt
das
in
rorl
inc
or
in
jne
xor
test
stos
in
roll
xchg
in
mov
out
and
sub
fcoms
fiadds
mov
pop
xchg
scas
adc
or
inc
imul
pop
push
push
mov
push
xor
ret
pop
fdivrl
aam
xchg
lcall
fisubl
out
inc
movsb
pop
ret
icebp
xchg
mov
hlt
repz
shrb
xchg
jl
push
sbb
nop
adc
inc
add
inc
or
mov
xlat
ret
pop
das
les
cli
cmp
lods
icebp
sti
loopne
data16
sbbb
jg
repnz
push
mov
outsl
rorl
pop
and
out
in
or
scas
js
mov
add
push
aas
xor
mov
and
stc
cwtl
or
mov
inc
xchg
add
push
pop
movsb
xchg
cmc
cli
rcrb
pop
aad
stos
cmp
cmpb
mov
and
cmp
subb
jmp
mov
jns
dec
mov
lods
bound
sbb
jg
jae
sub
sub
sahf
inc
pop
mov
mov
mov
or
insb
imull
stos
mov
jp
ja
and
xchg
mov
mov
in
test
into
pop
roll
movsl
xor
xchg
and
mull
enter
dec
xlat
mov
inc
sbb
inc
fsubp
dec
pusha
dec
dec
imul
int
dec
jae
xchg
push
pusha
div
test
loop
push
mov
dec
or
out
iret
testl
ficoms
sti
scas
ja
ds
cwtl
in
int3
loopne
ds
bound
lret
cwtl
dec
mov
cmp
jmp
push
push
fbld
subb
scas
sbb
test
dec
push
pop
sbb
push
pop
test
imul
jmp
notb
pop
cli
and
pushf
inc
jge
xlat
pop
jmp
jns
lods
repnz
leave
cld
push
cmp
jnp
push
stc
push
fadds
test
and
and
inc
andl
jne
stos
sub
mov
jle
jp
les
and
dec
mov
pcmpgtw
pop
les
scas
int
cld
mov
jns
cmpsb
iret
jg
or
jmp
push
ret
cmp
pop
add
mov
mov
add
add
das
pop
mov
outsl
fs
cmp
movsb
sbb
jl
and
sahf
sub
push
into
inc
mov
mov
fdivr
sbb
movsb
into
cmpl
movsl
lds
jno
sbb
jmp
push
cs
ljmp
repnz
adc
insb
fdivl
rorl
xchg
xor
into
mov
pusha
pop
cli
test
cmp
scas
dec
pop
pop
outsl
inc
rcl
es
icebp
pop
pop
xchg
and
push
sarb
addr16
xchg
xchg
push
test
jne
jo
push
sti
fstps
shrl
mov
fnsave
xchg
in
insl
cmp
mov
lods
inc
test
inc
push
adc
divb
push
lahf
int3
inc
jne
inc
call
mov
inc
lret
fists
fbstp
jae
stc
aaa
outsl
dec
pop
and
out
hlt
mov
loop
into
cmc
test
aaa
add
push
adc
jle
cltd
and
add
push
xor
sti
data16
pop
add
int3
sbb
xchg
pop
jg
lods
sbb
scas
adcl
or
and
out
js
mov
daa
aaa
xchg
loope
icebp
adc
or
pop
add
je
push
push
fcmovne
fwait
cmpsl
push
cmp
jle
inc
push
out
mov
ret
lods
adc
sub
mov
inc
arpl
aam
cwtl
xchg
loope
roll
jl
cmpsl
inc
inc
dec
stos
scas
int3
mov
sti
fildl
call
pushf
lds
popa
inc
add
jp
jno
clc
out
inc
pop
mov
iret
gs
pop
not
idivb
jecxz
scas
or
icebp
push
jle
sub
loop
jg
out
xchg
andb
push
loopne
pop
pop
into
ljmp
subl
pop
ljmp
fs
add
dec
pop
jne
mov
mov
adc
jne
dec
pop
popa
xchg
inc
push
mul
lret
enter
push
stc
fwait
push
lods
sub
ffreep
fisubs
mov
cli
data16
frstor
sbb
pop
mov
mov
sbbb
stos
and
out
inc
mov
je
xor
imul
pop
les
fucom
sub
add
loope
xchg
push
xchg
int
pop
fwait
pusha
mov
mov
ljmp
dec
push
fnstenv
push
adcl
in
pop
enter
leave
dec
xchg
xor
gs
sub
pusha
mov
xor
fldt
outsl
mov
ja
mov
push
or
stos
outsb
or
popa
mov
aam
pop
in
mov
arpl
jo
aad
xchg
push
lods
test
movsb
sub
jge
ret
cmp
push
xorl
pop
pop
cmp
push
movb
add
xchg
scas
insl
push
cmpsb
test
mov
push
cmp
push
fcoms
push
or
xor
inc
insl
into
int
scas
ret
and
jb
mov
mov
loopne
jne
rclb
mov
mov
push
jmp
stos
mov
hlt
jo
jmp
shll
arpl
add
sbb
aas
rclb
sub
lock
and
adc
xchg
fsubrl
adc
pop
std
cmp
sbb
jl
jno
bound
push
scas
cmpl
sub
cli
sbb
mov
xchg
xor
arpl
mov
insb
jns
push
or
aad
repnz
fdiv
ljmp
dec
push
or
sti
add
icebp
push
pop
pop
mov
xchg
jnp
es
inc
xchg
or
push
mov
mov
jb
sub
das
adc
add
cwtl
scas
sbb
xor
test
xchg
ficomps
adc
xor
xchg
mov
pop
sub
and
shlb
lea
es
sbb
addr16
jo
push
xchg
mov
leave
lock
pop
jmp
rorb
shlb
push
cmp
scas
adc
mov
movsl
jmp
mov
lods
lahf
out
dec
jo
daa
mov
push
rorl
movsl
popa
movntq
out
jb
pop
arpl
jecxz
push
nop
push
arpl
push
es
enter
cmp
jmp
data16
jnp
mov
sbb
push
sbb
cltd
mov
pop
ljmp
push
pop
jbe
in
inc
leave
jo
in
xor
and
cld
mov
jb
call
sub
push
mov
stc
inc
sahf
ds
adc
xchg
jle
sti
das
fwait
out
dec
adc
or
cmp
pop
iret
scas
pop
mov
and
mov
inc
imul
dec
sahf
ret
into
enter
in
jp
jns
adc
mov
shl
orb
in
lret
mov
leave
icebp
add
outsl
pop
loopne
push
inc
int3
vrsqrtss
jnp
sbb
andb
dec
scas
jae
mov
enter
fdivl
cmp
sub
lret
sbb
add
cwtl
aaa
push
stos
aam
jmp
icebp
inc
push
mov
arpl
js
jecxz
lret
movsb
add
in
and
insb
add
icebp
jnp
pusha
adc
stos
mov
mov
sbb
fdivr
pop
fs
add
fs
mov
push
pop
mov
and
xchg
and
ror
or
lcall
shl
jns
jge
push
mov
fwait
push
movsb
test
ret
in
outsb
push
sub
inc
stos
pop
cmc
mov
sahf
mov
lea
mov
sbb
imul
inc
roll
call
xchg
hlt
push
fsts
dec
sahf
mov
idivl
gs
adc
add
add
bound
xchg
fdivrl
mov
inc
shrb
pop
sub
and
pusha
mov
out
outsb
je
xorl
push
movsb
cwtl
test
lods
stos
dec
int3
enter
or
adc
cltd
mov
dec
add
clc
xor
std
sbb
add
aam
sub
rcr
int
fwait
sbb
adcl
xchg
jg
mov
sbb
in
cld
outsl
xor
lcall
pushf
fists
mov
pop
xor
setp
out
mov
inc
inc
stc
push
adc
push
push
ljmp
outsl
sahf
sbb
stos
inc
adc
dec
out
jmp
jecxz
pop
pop
sub
js
xor
xlat
mov
cmp
or
sahf
or
mov
jns
xchg
add
push
cmp
insb
lcall
pop
sbb
xchg
insl
popf
pop
cmp
add
xor
stc
clc
push
pop
outsb
cmp
jbe
scas
arpl
ret
fsubs
jecxz
push
jne
push
add
jne
and
js
setne
inc
inc
nop
jne
push
add
bound
inc
jg
pushf
lahf
loopne
adc
and
push
sub
jo
and
leave
outsl
xor
loop
popf
ficompl
pop
dec
aam
fildl
mov
andb
or
or
cs
call
aad
xchg
push
testb
fstp
mov
sbbb
les
enter
mov
popa
xchg
gs
mov
push
jmp
mov
inc
int
sbb
adc
nop
xchg
int
cltd
incb
lcall
cli
imul
lcall
xor
pop
sbb
je
or
push
push
xchg
or
enter
mov
inc
and
add
inc
std
or
ss
sub
shll
fxch
enter
jb
and
mov
rcrl
sbb
sub
or
push
mov
inc
or
je
das
adc
and
repz
dec
arpl
pop
out
xchg
xchg
out
mov
push
cmp
push
xor
repz
jae
imul
add
add
cwtl
xor
mov
adc
xchg
jnp
imul
int3
movsl
lock
test
jns
push
movsb
rclb
test
xchg
lods
out
push
lock
and
add
mov
add
ljmp
push
cmp
and
in
sub
lods
or
add
sub
mov
mov
outsl
cmc
adc
jle
aam
sarb
inc
jp
mov
cmp
jne
pop
leave
test
sub
jns
test
dec
jnp
sbb
add
jbe
cmp
mov
pusha
cmpsb
lret
jge
dec
pop
add
test
adc
mov
cwtl
in
setae
aam
sbbl
cmp
lods
xchg
xchg
stos
popf
insl
sbb
fidivrl
test
jg
push
cmpsb
mov
sub
lea
pushf
rcrb
lcall
cwtl
add
add
jbe
aam
pop
ret
movsb
cli
into
insb
lock
data16
xchg
or
add
jns
shll
sbb
popf
jp
aaa
test
push
in
dec
pop
enter
sub
out
jg
push
sub
add
sbb
sbb
inc
test
movsb
lahf
gs
push
xorb
int
aam
cltd
addr16
push
gs
jb
jmp
xchg
jle
mov
rcll
pushf
inc
push
sub
jecxz
or
xchg
and
sbb
adc
dec
inc
inc
imul
mov
lea
jp
popa
daa
adc
lds
flds
enter
mov
test
and
and
mov
push
xchg
jp
popf
sub
fidivs
cmc
dec
mov
adc
pushf
mov
push
inc
ja
jno
mov
aas
faddl
ficomps
test
mov
or
in
lcall
daa
or
mov
xchg
mov
aaa
cmp
cmp
shrl
inc
mov
mov
int
mov
imul
in
sbb
icebp
mov
mov
ja
mov
mov
xchg
addr16
clc
pusha
popl
and
shll
sbb
sbb
jbe
jecxz
stos
inc
pop
cwtl
push
mov
or
out
inc
xchg
push
or
call
sarb
xchg
inc
gs
call
dec
sub
add
xchg
mov
cmp
inc
sbb
fdivrs
pop
clc
repnz
aas
idivl
sub
popf
and
xchg
jmp
test
sbb
inc
xor
inc
stc
sbb
dec
xchg
test
scas
outsl
jge
insl
mov
aaa
mov
xchg
in
push
div
in
xor
cmp
je
in
aad
sti
or
das
fbld
sbb
ret
cmp
std
ss
sbb
mov
stos
push
push
sub
push
imul
scas
inc
cmp
xor
fisubl
xchg
jle
fistpll
lea
shr
testb
xorb
mov
das
inc
push
push
push
fs
adc
movaps
sub
subl
jo
cli
jp
add
ret
inc
test
out
mov
xlat
arpl
push
test
inc
inc
push
xor
cmpsb
xchg
mov
aam
pop
and
add
iret
imul
push
sahf
shll
push
push
add
jg
out
push
xor
cld
je
in
add
cmpsb
or
addr16
inc
dec
sub
movsl
in
cmp
inc
arpl
mull
jmp
adc
cmpl
andb
jle
xor
dec
lret
fnstenv
std
dec
adc
test
lds
jmp
out
mov
adc
jb
addr16
sub
pushf
ss
cmc
aas
adc
bound
jno
fs
dec
mov
movsb
loope
cld
push
cmp
ljmp
call
out
xchg
ds
int
inc
xchg
aam
dec
mov
dec
frndint
cmp
test
rcll
movq
outsl
inc
movsb
dec
xor
cwtl
cvtps2pd
pop
dec
lods
shrb
jl
jno
mov
fistl
cmp
dec
push
adc
rcll
jle
lds
push
loopne
js
jns
scas
mov
push
mov
xchg
jbe
mov
lds
xchg
pop
sbb
adc
popa
addb
mov
sub
cwtl
push
push
inc
repz
inc
lods
loope
fcmovnb
dec
dec
xor
rcr
add
add
mov
or
sbb
add
addb
stc
adc
inc
addr16
shrb
cmp
rcll
popf
enter
rcll
out
shlb
xlat
popa
imul
xor
pop
call
arpl
les
data16
in
jle
dec
scas
shl
rorb
jnp
out
lods
mov
fnstsw
pop
sub
jo
inc
jl
pop
ret
jge
push
std
in
mov
pop
fistpll
push
mov
pop
in
jbe
or
push
push
mov
cmp
daa
mov
fwait
cmpsb
push
cmp
jb
jge
push
xor
mov
cmp
xchg
ret
add
xor
xor
jb
outsl
jb
xchg
sarl
cmpsl
aad
scas
push
xchg
push
mov
xchg
adc
lahf
jo
sbb
push
mov
or
jg
or
mov
out
cs
addr16
pusha
dec
addb
leave
mov
add
cmp
or
pop
outsb
mov
jecxz
cmc
inc
ss
cmp
in
test
nop
push
mov
outsl
xlat
mov
sbb
push
jo
roll
fsubrl
sbb
mov
xchg
pop
ficoms
lcall
push
shrb
aas
xchg
out
rolb
stc
mov
dec
mov
mov
cmp
mov
orl
lods
in
in
or
xchg
or
dec
ds
dec
cmpsl
adc
jecxz
pop
mov
insb
lret
add
add
aam
scas
add
icebp
mov
pop
pop
popa
arpl
pop
sbb
sub
cld
or
out
ficoms
rorl
mov
cli
addl
mov
jecxz
cld
and
ja
and
enter
sub
sub
leave
pop
pop
shrb
or
pop
popa
stos
inc
push
std
hlt
or
mov
push
push
in
es
cltd
jne
out
push
push
rcrl
mov
in
mov
cli
int3
adc
fs
adcb
cmpsb
push
aas
fs
mov
inc
movsb
dec
push
out
cld
and
mov
sbb
lcall
mov
orb
xor
jle
stos
mov
cli
mov
bound
fimull
out
dec
ret
and
pop
add
in
test
inc
mov
fwait
scas
jecxz
cmpsl
gs
inc
rcrb
jl
pushl
jnp
inc
push
out
imul
xchg
dec
mov
int
xor
add
push
jp
sub
test
and
daa
loope
inc
scas
pop
and
push
gs
push
repz
xchg
fwait
and
fistps
inc
shll
adc
ss
dec
sahf
and
pop
inc
mov
in
pusha
or
add
movsl
mov
pop
addb
mov
mov
subb
ds
leave
mov
pop
repz
in
sub
test
pop
adc
dec
insl
call
cltd
ja
and
cld
cmp
repnz
rcll
push
lock
movsl
loope
pusha
mov
cmc
popa
push
out
das
iret
pusha
sub
adc
cmp
mov
mov
iret
movsl
xchg
sarl
sbb
xchg
add
jg
sub
jle
mov
pop
xor
inc
out
cmp
lret
in
in
or
jg
fisubrl
push
cli
cmp
adc
cmp
push
int
test
xchg
aam
sub
mov
shlb
push
cmpsb
dec
jge
xor
pextrw
mov
ljmp
cmp
or
test
aaa
pop
dec
push
sahf
fcompl
aam
decl
enter
rcrl
or
pop
sub
cmp
push
lcall
xor
mov
pop
sub
mov
and
push
inc
mov
lret
xchg
inc
sub
mov
ds
push
add
add
gs
dec
or
add
nop
mov
scas
mov
push
ljmp
jbe
push
test
sub
js
jnp
test
sbb
xor
sub
insb
test
and
pop
subl
sbb
addr16
mov
xor
enter
leave
fstpt
fdiv
inc
cld
das
xor
xchg
popf
gs
shll
dec
cwtl
jecxz
fcompl
jns
bound
pop
cmp
or
sbb
aas
mov
xorl
addb
push
movsl
or
push
inc
out
pop
or
lahf
xor
stos
lods
std
out
imul
imul
cld
mov
push
jns
mov
fisubrs
xchg
jge
dec
cmpsl
lret
int3
push
jg
mov
xchg
push
pop
xor
mov
adc
xlat
mov
pusha
add
nop
in
fwait
and
cmp
xorb
scas
cmpsb
insb
mov
lods
and
dec
test
data16
and
adcb
cld
add
cmp
idivl
sub
int
xchg
adc
imul
movsl
mov
cmp
or
scas
xor
cmc
repnz
dec
fldl
xchg
stos
push
sahf
xchg
fs
dec
cmp
fiadds
mov
dec
or
shlb
mov
add
jmp
fimull
into
add
adc
mov
push
leave
adc
rcr
imul
push
push
fwait
std
push
arpl
stos
xchg
test
pop
adc
mov
iret
jg
cmp
jnp
mov
pop
mov
adc
pop
sbb
mov
aam
test
jp
xlat
and
pusha
rcll
fisttpl
jg
xchg
push
or
pop
lea
dec
adc
add
leave
jbe
push
andb
mov
icebp
nop
ja
adc
or
popa
xor
inc
call
cwtl
adc
add
mov
cmpb
mov
push
push
fucomi
cmc
ja
and
sti
outsb
mov
jne
fisubrs
mov
ds
das
inc
les
sbb
arpl
and
pop
pop
mov
gs
je
pop
mov
pop
adc
mov
push
sahf
mov
test
and
outsb
cmp
xchg
lds
dec
rcr
out
xorps
ljmp
xor
pextrw
lods
jne
negb
mov
fcom
add
out
aam
adc
fsub
pop
fmuls
jbe
rorl
notl
fwait
sub
mov
mov
stos
fwait
test
xchg
jge
xor
mov
adcl
leave
push
mulb
dec
cmp
fidivrs
adc
push
and
andb
dec
sbbb
loop
cmpl
and
insl
sub
ja
add
dec
aaa
mov
faddl
mov
cltd
and
out
ds
xchg
int
adc
sbb
stc
jle
pop
sahf
jle
xchg
popa
cltd
fsubp
ret
xchg
enter
or
inc
fadds
es
repz
fcomp
adc
jne
stc
adc
decl
das
dec
and
push
mov
subb
pop
xchg
ja
and
imul
movsl
loopne
add
mov
mov
rclb
xor
fdivl
sub
jae
mov
stos
dec
sbb
xchg
inc
shlb
push
and
sub
inc
int
je
and
jle
leave
iret
mov
xchg
inc
jb
pop
addr16
sarb
cld
fisubrs
ret
jo
scas
fisttps
pushf
dec
mov
xor
xor
jno
jb
pop
xchg
xor
rolb
mov
mov
imul
mov
popf
sahf
xor
lock
call
cli
xor
subb
mov
out
sbb
aaa
jne
lods
aas
mov
and
fidivl
sub
mov
mov
fildll
lret
adc
inc
fstps
adc
cmpl
pop
mov
xchg
pop
mov
push
and
push
enter
jne
daa
add
cmp
push
stos
mov
jbe
daa
mov
cwtl
jae
in
ficompl
lods
jmp
inc
aad
jle
leave
loopne
call
inc
and
fcompl
leave
ss
sbb
jle
or
and
mov
loope
clc
nop
mov
aad
call
mov
lds
mov
mov
es
sahf
ja
adc
add
mov
or
xchg
rol
inc
push
and
lret
lea
push
out
pusha
xor
stos
push
jne
push
xor
inc
push
cmp
pop
loope
mov
push
pop
dec
rcrl
adc
xchg
add
mov
sbb
aad
or
insl
cli
fstp
stos
sbb
imul
out
mov
das
push
and
smsw
lea
je
out
xchg
sbb
int3
in
dec
and
lock
ljmp
add
sub
xchg
add
fld
add
jmp
mov
jle
add
loope
mov
jbe
ret
repnz
popa
movsl
xor
mov
fisubs
and
int
xchg
or
inc
imul
cmp
cli
jbe
out
xchg
sub
addr16
dec
daa
adc
fwait
jnp
jg
sub
test
mov
aas
bound
aas
iret
fnstsw
xchg
dec
add
fstps
pop
or
fstps
pop
xor
out
out
adc
mov
imul
xchg
test
mov
sarb
je
fiaddl
das
aas
xor
mov
dec
test
sti
iret
sub
je
in
scas
repnz
jmp
inc
mov
daa
aas
sub
dec
xchg
xor
fs
sub
mov
icebp
mov
rcl
imul
daa
sahf
xchg
into
icebp
jno
ss
jnp
subl
inc
lahf
and
cmp
dec
notl
push
mov
dec
in
lods
stos
xor
addl
mov
mov
lcallw
push
mov
imull
je
fidivrl
inc
jl
hlt
arpl
mov
mov
popa
cmp
push
cld
fistpll
je
imul
and
orl
loop
xchg
rclb
dec
outsl
fsub
xor
mov
mov
sub
daa
inc
or
les
lret
jmp
mulb
inc
pusha
in
mov
inc
fildll
ds
push
xchg
sbb
repz
jne
inc
sub
loop
add
scas
adc
popf
xor
into
sbb
sub
scas
push
or
rol
push
mov
xchg
jno
stos
mul
or
pop
dec
sbb
jecxz
lahf
sub
jbe
mov
jg
imul
xlat
mov
inc
sbb
jle
sub
test
inc
jnp
fwait
mov
gs
push
scas
cmp
into
jge
mov
add
or
fcomps
call
sbb
sbb
outsl
xor
cwtl
xchg
dec
push
enter
stos
cmp
jge
les
vxorps
adc
mov
outsl
sarb
add
mov
ret
sbb
je
out
imul
pop
xor
sub
shr
into
fcoms
arpl
ss
mov
jp
cmp
mov
cmp
dec
sti
mov
and
scas
iret
mov
mov
mov
push
cmc
jmp
jo
pop
repnz
lret
cli
or
mov
jecxz
imul
outsw
inc
or
mov
iret
lret
and
mov
das
dec
fcoml
jno
pop
cmpsb
push
jnp
xchg
sbb
mov
dec
sbb
repnz
enter
sti
push
push
cmpsb
rcl
push
fnstcw
cs
push
mov
sub
ss
pop
enter
aam
jo
jle
lds
xchg
xor
cld
mov
movsl
mov
sub
aaa
cmp
pop
out
or
loop
mov
icebp
jbe
ds
lods
mov
scas
xor
dec
out
dec
mov
dec
or
test
je
xor
sbb
call
inc
orl
or
mov
iret
jge
adc
orb
cmp
jns
aas
sub
clc
jno
cltd
out
and
or
imul
fs
dec
dec
aaa
push
insl
rclb
push
lcall
orl
xor
lods
push
out
das
scas
mov
ljmp
cli
in
jnp
negl
js
sbb
test
jle
loopne
inc
fisubrl
mov
xor
in
xor
inc
xchg
clc
pop
insb
rorb
leave
into
mov
pop
xchg
dec
pusha
or
popf
mov
xor
and
cmp
ss
popf
leave
test
rcr
dec
and
into
popa
mov
adc
jb
repnz
or
mov
cmpsb
jp
test
jne
aas
mov
pushf
leave
or
inc
test
xor
and
mov
pop
or
sub
pop
mov
pop
jecxz
xlat
mov
lahf
icebp
insb
loopne
inc
imul
inc
movsb
adc
mov
subb
sbb
xchg
cmp
aad
pop
out
push
test
shl
and
lea
mov
bound
pop
je
mov
lods
or
aad
adc
lahf
sahf
push
dec
adc
imul
mov
xchg
mov
mov
or
ret
mov
or
scas
ss
in
mov
lahf
icebp
aam
dec
leave
push
or
add
dec
cld
rolb
leave
roll
enter
dec
jno
cmp
hlt
sbb
into
jns
out
and
xchg
xor
icebp
mov
or
mov
lea
lret
ja
or
dec
loopne
or
cwtl
push
mov
cli
fwait
pop
add
stos
cmp
imul
sub
mov
push
xchg
adc
int3
cltd
lret
out
pop
adc
enter
cs
lret
dec
out
fnstcw
dec
mov
add
lock
daa
stos
adc
in
stos
xchg
and
mov
mov
mov
and
movsb
test
or
stos
cmp
popf
iret
cmp
inc
out
push
pavgw
sbb
lock
mov
repnz
or
setg
in
push
lret
mov
pop
sbb
inc
subl
mov
lcall
cmpsb
scas
jb
xor
cwtl
ja
mov
inc
loope
mov
xchg
cmp
outsl
push
out
cmpsb
ds
ret
in
xor
lret
inc
pop
sub
repz
or
mov
push
xchg
and
inc
es
mov
fidivl
inc
fwait
sahf
push
fbld
mov
je
stos
inc
lea
out
movsl
rcll
test
test
aam
dec
js
dec
scas
dec
mov
add
adc
loopne
mov
xchg
addr16
out
pop
js
pop
in
lahf
xor
dec
push
pop
sub
mov
or
adc
and
in
xchg
icebp
mov
cmp
lahf
cmp
push
and
mov
jae
pop
sub
in
or
dec
mov
adcl
rorb
out
outsb
xchg
add
pusha
dec
xlat
leave
or
movsl
fdivrp
cmp
je
mov
mov
shll
jnp
mov
packsswb
pop
inc
add
ret
xchg
and
pusha
jl
mov
push
test
insl
push
cmc
insb
sbb
push
adc
inc
shlb
cmp
mov
inc
xor
int
out
sbb
mov
arpl
leave
int
loopne
jmpw
push
std
mov
jl
xchg
adc
sbb
movsb
jo
jmp
xor
mov
inc
dec
mov
xchg
outsl
out
push
push
jmp
ficoms
test
xor
or
push
sarl
or
jns
rol
pop
lret
addr16
int3
lods
in
fwait
imul
ret
outsl
push
jge
in
jo
dec
loope
out
mov
xchg
mov
sti
mov
push
lahf
jle
push
push
or
mov
or
fs
and
jnp
cmp
dec
xchg
add
jbe
or
fidivs
or
jmp
inc
xchg
stos
popf
sahf
popf
jbe
adc
icebp
push
icebp
repnz
les
ljmp
mov
jno
mov
stos
xchg
jp
dec
icebp
lock
add
push
lods
and
xchg
pop
pop
test
push
jmp
test
lock
hlt
push
aad
pop
jmp
aaa
cmpsb
iret
popf
ds
mov
scas
and
arpl
stos
or
add
bound
jns
jns
mov
rcrl
dec
mov
std
aad
in
sub
loopne
mov
int3
xor
scas
pop
cli
inc
popf
rcll
add
shll
push
and
lock
mov
iret
ljmp
int
outsb
call
bound
rclb
leave
paddsw
in
cmpsl
loopne
adc
nop
jbe
add
pop
cmp
test
cmp
jg
cmp
mov
and
cld
adc
lock
mov
pop
cmpsb
repz
fcmove
rorb
dec
inc
push
dec
int
jl
aaa
push
out
push
xchg
loop
in
loop
or
popf
jl
xchg
xchg
dec
loope
addr16
bound
mov
std
sub
not
xorl
or
pop
and
iret
or
dec
sub
loopne
pop
mov
ljmp
in
aam
imulb
inc
push
frstor
fisttpll
sti
ret
dec
dec
rorl
aad
cmpsl
enter
pop
hlt
mov
call
daa
xchg
test
mov
or
int
rorl
or
push
sbb
gs
out
mov
test
decb
mov
push
jb
add
in
dec
hlt
and
jns
int
cli
cli
cmpsb
movsb
dec
adc
pop
pushf
pusha
clc
shlb
clc
dec
shrl
adc
lahf
xchg
enter
stos
out
loope
cmp
xchg
or
icebp
int
fisttpll
js
sbb
popf
dec
addr16
jno
negb
loope
js
mov
ret
fidivs
push
ss
lods
sub
push
mov
call
pusha
or
or
and
dec
xchg
sbbl
bound
into
mov
fcoms
dec
and
fwait
mov
jmp
xchg
ss
sub
das
imul
cmpsb
cmpsl
rclb
fidivrs
cmp
mov
cwtl
jbe
mov
lods
call
jp
enter
lods
in
jmp
jl
and
push
push
arpl
sub
mov
stc
xor
sub
adc
mov
inc
ja
add
push
insb
xchg
movsb
pop
mov
ljmp
add
jle
push
sub
adc
loope
movsb
xor
dec
pop
fs
xor
adc
push
adc
stos
rcrb
das
cmp
call
pop
lods
cmp
pop
mov
mov
cwtl
mov
pop
cs
stc
lahf
pop
gs
mov
sahf
scas
iret
gs
rcrl
xor
movsl
inc
in
jp
jbe
cwtl
popa
test
out
imul
push
push
jmp
inc
dec
ds
add
jp
lcall
jp
test
cwtl
pop
jecxz
addr16
arpl
sub
pop
aam
stos
and
push
sub
pop
aad
mov
lock
jo
cwtl
cmpb
jnp
and
mov
xchg
pushf
xor
mov
ret
mov
in
pop
std
push
jmp
movsb
cmp
sbb
jbe
cltd
cld
mov
inc
pop
ja
bswap
push
in
movsl
push
sub
mov
inc
or
outsb
mov
mov
jbe
xor
pop
pop
test
add
push
aaa
sub
or
add
loope
cmpb
sub
lds
add
add
rcll
cmp
cmp
mov
mov
stc
rcr
xchg
mov
out
pop
fwait
add
test
dec
bound
je
vzeroall
pushf
xchg
push
mov
push
cmp
and
fwait
arpl
leave
xchg
in
or
mov
cwtl
sub
adc
add
test
xchg
push
pusha
add
sub
pop
daa
xor
lahf
fstps
push
cmp
adc
lock
mov
mull
lret
icebp
or
or
andl
mov
fisttps
popa
mov
mov
mov
dec
mov
lods
mov
cmpl
fsubr
jp
imul
xchg
mov
mov
jg
ss
out
mov
mov
mov
push
xchg
not
jbe
shrl
mov
or
insb
into
hlt
shll
jle
push
ljmp
lret
imul
mov
and
sbb
fiaddl
ficoml
add
adc
mov
inc
or
mov
adc
xchg
scas
add
mul
dec
and
fcmovne
sub
cmp
enter
insb
jno
jb
cmp
add
stos
or
out
daa
mov
lods
into
sbb
mov
repnz
or
ja
cltd
out
js
je
sub
inc
pop
lods
add
ss
xor
jbe
jl
bound
jo
xor
add
add
fcmove
ror
mov
psllw
adc
pop
xchg
aaa
icebp
push
imul
xor
int3
or
cld
pop
pushf
fidivs
inc
test
hlt
sahf
stos
push
orl
xchg
fildll
das
jl
ljmp
popa
push
rorb
das
imul
imul
add
add
inc
push
xchg
jmp
ss
mov
sbb
xchg
mov
in
test
js
push
xchg
push
sbb
mov
push
cmpsb
and
sub
push
mov
loop
add
repnz
inc
repnz
mov
jbe
scas
inc
inc
mov
sahf
sbb
inc
push
cmp
mov
push
ret
xlat
add
and
jecxz
cmc
inc
fnstsw
cld
mov
inc
inc
pop
das
js
dec
jno
sbb
cmp
lds
ret
jecxz
fimull
out
jp
mov
repz
mov
es
mov
faddl
push
out
sbb
hlt
mov
pop
push
lret
fists
lods
cld
mov
pop
insl
insl
xchg
das
fcomps
push
push
ret
inc
cmpsb
fcoms
pop
cmp
cmp
stc
inc
imul
stc
arpl
or
orb
mov
push
sbb
data16
or
lods
push
jmp
fcoms
and
fcmovb
sub
das
pop
mov
shl
push
jge
push
mov
sar
mov
mov
inc
lcall
jno
cmp
jno
leave
ret
enter
bsf
lahf
arpl
xchg
fistpl
xor
push
sbb
mov
mov
dec
nop
lret
pop
mov
faddl
lret
daa
iret
pusha
hlt
shrb
inc
ret
in
mov
imul
push
cli
lea
and
cmp
add
dec
push
mov
mov
dec
and
sbb
xor
push
push
in
jl
in
jns
jp
sbb
add
sbb
mov
ret
pushf
xor
add
dec
popf
dec
mov
icebp
inc
sahf
pop
jl
iret
jecxz
mov
sub
xchg
mov
sbbb
outsb
sub
inc
xor
pop
movsb
addr16
outsb
into
das
test
xchg
push
fcoms
pop
lea
out
in
and
into
inc
cmp
push
out
shrl
xor
mov
jp
push
popa
inc
mov
push
xchg
mov
sbb
mov
popa
push
adc
mov
not
jmp
jno
jb
in
and
rcrl
scas
dec
fimuls
dec
outsb
cmp
adc
lret
mov
push
push
mov
mov
je
dec
and
sets
out
scas
add
push
jg
fimuls
or
jno
je
fmuls
mov
mov
mov
outsb
cs
mov
test
mov
adc
mov
scas
in
pop
add
mov
scas
and
outsb
stos
cltd
fcomi
or
cmp
add
jo
mov
addr16
mov
adc
mov
int
mov
pop
pop
cmp
fsubl
sub
add
jnp
out
xor
adc
xor
adc
pop
jae
loopne
sti
pop
push
cmp
sub
pop
ja
push
push
push
jp
testl
sti
mov
loop
mov
xor
sub
lahf
fadds
loope
arpl
fwait
push
jge
dec
stc
adc
lods
add
pop
pop
jl
or
jmp
mov
ljmp
mov
out
int
aaa
loope
dec
leave
cmp
out
notb
cmc
mov
dec
leave
ljmp
dec
test
mov
jno
mov
dec
mov
xchg
add
lcall
xchg
ljmp
out
icebp
outsl
dec
push
lahf
je
and
stc
cwtl
cs
movsb
daa
jp
jne
xchg
aas
xor
or
test
roll
popa
adc
inc
insb
xchg
ja
xor
dec
adc
mov
idivb
and
sbb
sbb
jbe
or
xchg
les
in
cltd
popa
loopne
xchg
pop
jnp
cmp
aaa
push
stos
dec
xchg
lret
dec
adc
sti
push
pushf
aaa
inc
sbb
in
fisubrs
push
xor
and
inc
out
xchg
lea
mov
sbb
sub
add
and
lea
andl
and
adc
arpl
xchg
add
xchg
and
dec
mov
sbb
add
pop
sbb
mov
dec
pusha
cltd
pop
pop
incb
push
lods
fwait
and
and
or
or
sbb
js
hlt
mov
in
arpl
xchg
mov
jns
pop
mov
jno
or
mov
adc
xlat
sarl
xorl
ret
xlat
imul
sbb
fldenv
push
xor
and
shrb
push
xchg
cmp
and
and
inc
imul
or
adc
call
out
jmp
inc
mov
pop
jnp
push
scas
pusha
add
push
jnp
pop
out
imul
push
sub
xchg
and
mov
mov
aaa
iret
inc
pop
add
sub
sub
xchg
aaa
cli
sub
adc
add
inc
pop
jp
or
mov
lock
out
mov
pop
mov
test
xchg
push
fildl
dec
fsubl
dec
movsl
popa
es
mov
xchg
out
ret
mov
jo
aad
out
adc
rol
imul
ds
dec
aaa
xchg
or
or
fsubrs
xchg
xchg
dec
and
pop
insl
divl
rcrl
pop
mov
insb
shll
jns
cmp
jp
push
lock
push
xchg
daa
pushf
or
pop
inc
jl
rorb
sbb
and
loop
mov
movsl
pop
das
hlt
lods
arpl
ss
dec
sbb
and
lahf
cmpl
icebp
xor
in
frstor
inc
jbe
cmp
mov
fsts
xor
fadd
in
jmp
bound
jae
cmpsl
call
int
xchg
icebp
add
xor
sar
inc
xchg
jb
repz
pop
or
fldt
insb
nop
cmp
xlat
leave
lods
inc
xchg
cmp
insb
repnz
jns
jo
je
jne
and
xorb
mov
or
and
sub
repz
add
fcmovb
lret
or
fbstp
push
jg
addb
inc
xchg
or
out
cmp
sub
and
rorl
mov
repnz
sub
pop
stc
push
andb
orl
xchg
mov
pusha
mov
subb
push
mov
mov
push
ljmp
inc
les
aas
push
inc
mov
cwtl
mov
ficoms
mov
les
push
jge
push
mov
dec
out
lods
bound
sbb
sub
into
das
ret
repnz
fldcw
aaa
dec
xlat
popa
push
lods
sbb
push
xor
mov
dec
inc
jnp
popf
pop
sar
imul
ljmp
inc
add
sub
pop
ja
jae
pop
int3
fbstp
pop
pop
lcall
mov
scas
setl
adc
mov
push
mov
inc
mov
add
sahf
andb
pop
popa
push
xchg
lods
jno
xor
dec
in
sahf
in
dec
push
add
es
rol
sbb
push
push
les
std
lea
dec
xchg
sub
stos
in
icebp
daa
pop
sar
adc
es
int3
xchg
sbb
enter
pop
xlat
inc
dec
jae
push
push
mov
cli
sarl
shll
push
push
sbb
inc
add
bound
cmp
or
and
fidivrl
dec
mov
and
sbb
jecxz
or
movl
ljmp
dec
and
cmpb
xor
mov
cmpsl
push
in
sub
gs
xor
sarb
outsb
les
or
orb
fidivl
test
leave
scas
sub
adc
retw
adc
pushf
lock
in
je
loopne
rcrb
insl
rorl
mov
mov
push
pusha
cmp
mov
ret
lret
xor
fucompp
mov
imul
xchg
mov
push
ficoms
movsb
scas
push
xchg
rcr
js
and
lea
ficoms
lods
pop
jg
xlat
divb
xor
adc
ja
mov
jns
jge
sbb
and
scas
int
ss
idivb
jge
pop
sbb
mov
fwait
outsl
aad
out
frstor
inc
dec
lahf
xor
aas
repz
push
mov
mov
xchg
push
in
icebp
add
add
xchg
incl
add
cmpsl
xchg
je
mov
stos
mov
test
lcall
seta
pop
fisttpl
inc
bound
out
gs
push
jecxz
mov
icebp
hlt
out
hlt
push
pop
sub
bnd
xchg
outsl
loopne
fists
pop
sbb
sub
mov
xor
pop
aam
imul
pop
inc
ficompl
decb
aam
negb
sub
mov
mov
cltd
sub
cli
insb
and
inc
sbb
fcomp
jmp
mov
mov
xor
std
jmp
xlat
icebp
pop
bound
and
xchg
mov
je
incl
repz
pop
cmp
sti
sbb
or
loop
xor
das
inc
movsl
fwait
jns
in
aam
xlat
mov
je
rcrl
fwait
push
inc
xorl
dec
aad
pusha
int
push
fcmovbe
sbb
out
or
das
add
outsb
sub
cmp
sub
cmp
cli
ja
dec
inc
and
sbb
pop
sahf
and
jb
dec
orl
xchg
dec
inc
xchg
hlt
push
outsl
int
imul
ficompl
mov
pop
dec
and
sub
push
data16
mov
or
repz
inc
inc
mov
fsubr
lds
daa
adc
jmp
movsl
push
imul
lods
daa
test
ljmp
adc
fidivs
outsl
jge
push
adc
dec
mov
mov
loope
pop
push
push
jge
in
icebp
or
dec
mov
adc
push
fcmovne
push
add
in
add
cmp
mov
push
cmp
and
jae
out
xchg
data16
loop
xor
clc
xchg
jle
rorb
idivl
nop
push
xor
mov
or
std
adc
pop
int
lret
addr16
inc
mov
dec
xor
arpl
cmp
idivb
inc
pop
in
pop
mov
movsb
lret
adc
fisttps
stc
dec
mov
push
and
lods
push
xchg
inc
mov
xchg
dec
dec
shr
rcrl
outsl
sub
pushf
add
js
in
test
and
or
push
xchg
push
lahf
outsl
dec
and
push
inc
adcb
js
mov
stc
cltd
cmp
dec
jg
pop
sahf
test
cmp
out
inc
enter
xorl
pop
outsb
fs
dec
aas
adc
ret
sbb
outsb
push
adc
or
fistl
add
mov
adc
leave
and
jp
enter
ret
out
mov
mov
add
sub
testb
test
cmp
push
xchg
ss
gs
cmp
jo
fwait
dec
push
in
push
inc
lods
loope
cmp
ds
je
cmp
fidivl
inc
mov
lret
pop
jbe
jecxz
test
ja
pop
pop
mov
inc
dec
loopne
cmp
or
movsl
and
adc
mov
add
out
xchg
adc
es
and
add
pop
iret
pop
inc
mov
jb
dec
xor
sub
scas
or
pop
pop
cmp
fcmovnbe
jg
popa
dec
repz
or
in
adc
loope
mov
stos
jmp
rorb
xchg
sub
push
mov
stos
gs
fsub
enter
xlat
add
in
scas
ret
jecxz
bound
ret
jp
outsb
xchg
xor
clc
xchg
sub
stc
cmp
mov
push
leave
gs
outsb
imul
out
mov
std
sbb
ljmp
aas
pushf
jmp
push
push
aas
mov
push
stc
mov
stc
adc
add
and
hlt
dec
pcmpgtb
imul
xchg
test
xchg
roll
jbe
das
dec
sub
jle
mov
inc
xchg
lods
push
dec
push
out
cmp
shrl
mov
cli
adc
lds
insl
mov
xor
lret
and
bound
cmp
pop
mov
cmc
imul
lahf
mov
cmpsb
pop
pusha
addr16
sub
outsl
xchg
lods
jo
call
lds
out
push
sbb
xlat
cwtl
jbe
cli
sti
xor
mov
outsb
jo
lcall
pop
out
cltd
xchg
mov
das
push
cmpsl
outsl
insb
or
mov
imul
or
or
xchg
test
enter
push
enter
pop
and
leave
jmp
fcoms
xor
adc
clc
xor
leavew
js
inc
mov
daa
hlt
insb
mov
hlt
and
dec
sbb
adc
xor
rcr
xor
xor
pop
adc
cwtl
sub
adc
int
int3
js
jo
or
aad
add
adc
cmp
cli
mov
cmp
in
mov
or
xlat
loope
cmc
cmp
in
shll
ds
mov
vmovapd
loopne
aaa
dec
jle
adc
push
xchg
mov
mov
mov
lret
push
scas
sbb
scas
sbb
xchg
fstpt
addb
pop
mov
scas
movsl
fdivl
sub
out
pop
roll
sub
test
les
in
lods
mov
and
adc
pop
loopne
dec
mulb
lret
pop
push
repnz
scas
lods
push
hlt
mov
shlb
pushf
pop
lods
ret
cmc
jae
jno
adc
mov
mov
jb
popa
repz
adc
and
mov
out
je
mov
lret
scas
pusha
pop
cmp
fisttpll
cmp
jmp
xchg
mov
or
mov
pop
xlat
in
enter
int3
and
cmpl
or
ret
movsb
jno
scas
cmc
inc
mov
push
inc
mov
pop
add
push
pop
sbb
xchg
fcmove
lods
daa
mov
mov
sbb
shr
or
stc
loopne
out
cwtl
cmp
adc
and
sarb
sbb
sbb
mov
cmp
jno
lods
jecxz
std
jb
aas
add
mov
out
test
mov
sti
push
inc
outsl
mov
shlb
call
fistpl
sti
xchg
in
in
pop
or
iret
push
imul
jg
es
dec
int3
icebp
inc
xchg
fisttpll
push
clc
rolb
ja
jge
mov
ret
push
push
int3
mov
loop
mov
aam
add
cmp
or
xchg
pop
ss
sbb
and
lcall
lahf
inc
push
jp
outsl
xor
insl
out
loope
add
fisubl
in
out
stos
xchg
ljmp
pop
cmp
add
in
js
iret
lahf
es
pushf
push
fcoml
call
sbbb
adc
dec
ret
mov
push
or
movsb
add
mov
inc
repz
adcl
cld
mov
mulb
mov
mov
or
jne
mov
cld
repz
xor
add
mov
ds
int3
xchg
sbb
pop
popa
stos
add
data16
jmp
scas
es
sti
sar
scas
cmp
jns
int
aaa
call
outsb
dec
dec
loopne
xlat
jmp
outsb
fld
mov
push
aaa
push
xchg
cmpsb
jae
and
xor
cmc
cld
mov
lock
jmp
out
mov
insl
mov
mov
outsb
pop
rcl
push
in
test
mov
cli
add
jne
pop
inc
pop
sti
popf
and
scas
outsb
lds
xor
or
xor
mov
lds
push
push
add
adcb
dec
lods
inc
ret
lret
jb
xchg
icebp
stos
leave
jno
xor
cmp
filds
loopne
fidivl
mov
das
inc
sbb
lea
out
into
lds
repz
add
jge
iret
jecxz
fcom
sbb
pop
mov
fs
rclb
out
sti
push
int
jle
xor
xchg
cmp
dec
pusha
push
mov
dec
xlat
loopne
xchg
out
jae
sub
mov
xchg
adc
daa
inc
dec
arpl
pop
shrb
aas
out
pop
sub
sub
or
mov
sub
sub
popf
sub
fisubs
mov
push
xchg
jmp
adc
adc
not
sub
cmc
push
or
cmp
dec
xchg
cmp
daa
mov
lcall
ret
lret
into
js
mov
jmp
movsb
shlb
jle
push
cli
jno
adc
mov
lret
ret
cli
fisubrl
lock
mov
cmpsb
test
rorb
mov
mov
jle
mov
stos
popa
mov
xor
ret
dec
mov
mov
aaa
add
mov
pop
icebp
stos
push
cmp
jl
mov
mov
mov
stos
sbb
arpl
fwait
shlb
mov
dec
ret
cmp
outsb
adc
sbb
andb
inc
mov
push
aad
paddusw
fucomi
jmp
pusha
icebp
xor
jb
sub
jnp
shll
cmp
nop
sub
fwait
into
mov
cmp
jg
mov
dec
das
cmp
inc
xor
jae
jg
cmp
or
outsb
test
xchg
add
cmc
sbb
inc
mov
out
dec
ds
cmp
inc
sar
pop
inc
push
orb
lods
xor
lock
adc
fcmovnbe
mov
jno
cmpsb
xchg
test
sbb
cmpsb
outsb
cmp
inc
in
jb
test
incb
lret
dec
aas
inc
mov
test
dec
fsub
cwtl
mov
mov
ss
ljmp
inc
mov
mov
imul
popa
inc
ljmp
jae
pop
lods
push
or
mov
inc
jecxz
mov
in
aaa
int
push
mov
shrl
dec
call
push
mov
lods
js
int3
lea
mov
cmp
add
sahf
jne
dec
mov
mov
pop
add
mov
pushf
dec
mov
sbb
mov
repz
push
test
xlat
dec
ss
pop
lret
xchg
xor
adc
stos
stos
or
or
xchg
xchg
mov
xor
push
sub
lods
movsl
dec
out
ret
or
mov
xor
xor
dec
leave
cltd
les
cld
jnp
cs
stos
js
test
pop
iret
ret
repnz
inc
pop
aam
into
sbb
scas
das
pop
push
inc
mov
xchg
dec
jg
fs
icebp
imul
pop
nop
xchg
out
pop
outsb
jne
stos
mov
xor
test
es
sahf
shll
mov
sbb
test
cmp
test
adc
dec
jmp
rcrb
push
stos
test
out
test
dec
mov
push
outsl
stos
movsb
jne
gs
adcb
adc
out
jecxz
rclb
push
jecxz
cmpsl
sahf
sbb
loopne
cmpl
add
mov
sahf
pushf
or
pusha
push
out
cmp
pop
out
stos
fiaddl
jbe
mov
rcrl
ss
imul
nop
xor
fadds
jl
cld
pop
and
call
and
test
test
sbb
in
notb
daa
js
jbe
or
xchg
mov
mov
pushf
xor
ja
add
lret
psrld
loope
ljmp
push
mov
movsb
sub
push
lods
fbld
or
shl
jo
dec
or
or
pop
test
ss
xor
outsl
cmpsl
out
cmp
pop
cmp
cbtw
pop
xchg
cmpl
rorb
inc
stc
outsb
inc
mov
mov
cmp
sub
aam
mov
dec
mov
lock
int3
push
pavgw
loopne
mov
popa
out
imul
ja
sbb
sbb
icebp
inc
add
pushf
cld
sub
int3
andb
and
jmp
sbb
rorb
mov
int
aam
inc
movsl
ret
push
ljmp
out
cmpsl
mov
sub
aaa
add
push
mov
mov
adc
sarb
push
shll
stos
or
jl
into
insl
cwtl
scas
jg
inc
ss
cmp
dec
rcr
rcr
lods
sbb
loop
orl
mov
push
aaa
xor
and
pushf
repnz
cs
in
sbb
inc
mov
pop
adc
out
mov
sub
xor
adc
mov
movsl
cli
xchg
push
idivb
cmp
stc
loop
xchg
and
lcall
or
fildl
sbb
xor
jle
jb
sarb
out
or
jge
sub
into
sub
mov
pusha
sub
push
cmp
sbb
sub
orb
idivb
push
arpl
adc
out
pop
push
cmp
addr16
pop
sub
mov
push
and
repz
test
in
adc
aaa
sbb
xor
jne
test
add
push
js
sbb
push
ljmp
pop
pop
jmp
mov
in
inc
inc
pop
xor
pop
pop
ss
sub
mov
or
add
add
mov
sbb
push
mov
dec
popa
movsb
push
out
add
iret
bound
push
das
sbb
fdivl
dec
sbb
cwtl
test
or
and
sub
rcrb
mov
fsubrl
sbb
pop
cld
mov
test
in
or
in
jae
xchg
fidivrl
in
pop
sbb
icebp
jno
repz
cmp
fadd
xchg
add
jne
sti
inc
pop
or
ret
ss
les
jmp
xchg
rcrl
add
push
mov
xor
push
nop
lea
mov
aas
movsl
shrb
aas
fildl
jnp
push
and
push
cltd
fsubr
fcmovnb
popa
xor
mov
push
push
sbb
mov
outsl
dec
xchg
add
ljmp
jno
fwait
xchg
push
into
push
push
inc
lret
mov
cmp
xor
push
hlt
add
ja
sbb
xor
fstps
shl
jl
aam
mov
fsubs
sbb
pop
repz
mov
jne
xchg
adcl
stos
pop
loop
sahf
pop
fstpl
ja
jno
push
adc
inc
or
add
std
sbb
aad
or
and
mov
mov
inc
bound
call
jnp
jnp
shlb
mov
ret
or
dec
outsb
rorl
lods
sbb
add
in
xlat
imul
pop
cwtl
test
dec
ljmp
fsubrl
bound
ljmp
inc
roll
xor
mov
mov
pop
enter
sub
test
mov
out
aad
ficomps
std
testb
inc
dec
sbb
dec
xor
push
pop
cmpsb
xor
inc
mov
imul
xchg
xor
gs
pop
mov
xchg
push
push
cmpsb
push
lret
pop
mov
lret
lret
out
add
aad
lods
and
fs
in
incl
stos
arpl
xor
cmpsl
jb
sbb
pop
mov
and
fidivl
rclb
push
stos
mov
mov
xor
jnp
add
adc
outsl
rolb
mov
sub
div
xor
cwtl
pushf
std
scas
outsb
jl
or
lock
jecxz
sbb
pop
fimull
mov
imul
ret
shlb
sub
fstpt
imul
test
addr16
cmp
push
push
lods
sbb
and
mov
pminub
mov
sbbb
addl
cwtl
in
sub
jecxz
test
sahf
mov
gs
cltd
fistl
jo
mov
mov
mov
enter
int3
popf
dec
push
pop
push
ds
stc
xchg
pushf
push
pop
jecxz
shll
mov
jl
mov
mov
fsubs
dec
lods
pop
out
push
jb
in
cmc
mov
repz
sbbl
or
cmp
outsl
inc
loopne
outsl
out
push
test
lret
xchg
sbbl
sub
repnz
xor
add
out
sarb
push
les
mov
popa
movsb
xor
das
dec
cmpsb
or
std
jae
das
les
mov
inc
or
aas
and
pop
mov
sub
aam
fstps
call
pop
inc
test
hlt
enter
mov
jmp
adc
sub
push
fwait
cmp
jns
mov
mov
pavgw
push
pop
int3
repz
out
mov
in
repz
ja
aam
jnp
dec
neg
imul
inc
mov
jp
ret
mov
and
filds
xchg
insl
inc
inc
xor
in
insb
jb
lret
fs
test
je
ds
pop
xchg
fs
cwtl
daa
js
negb
daa
mov
divl
xchg
loope
push
testb
push
js
jns
test
push
in
mov
inc
rclb
imul
mull
inc
mov
loop
roll
cmpsl
ret
push
and
sbb
aas
push
lahf
dec
out
fsubrs
leave
mov
xchg
out
mov
cmovs
out
lret
jg
dec
mov
in
push
outsl
mov
ret
clc
idivl
jge,pt
cmp
add
mov
fwait
sarb
and
scas
cmpsl
roll
cmpsl
ss
repnz
fucomp
rcll
loopne
ds
adc
popa
adc
bound
jle
shlb
push
mov
imul
dec
ret
sub
fs
fs
mov
and
pop
icebp
icebp
sub
inc
int
mov
sahf
fimuls
and
sbb
mov
stc
mov
cmp
adc
sbb
stos
push
std
in
and
add
lods
jle
xor
push
xchg
je
jg
pop
cmp
mov
nop
shl
inc
mov
lock
js
dec
enter
xchg
lods
or
fldcw
imul
push
pushf
leave
adc
subb
mov
push
sub
movl
lea
lock
cld
sahf
jp
lods
stc
pop
push
icebp
cmp
xchg
inc
or
fmull
mov
mov
jns
ja
cmp
mov
pop
and
test
das
mov
push
jae
clc
and
bnd
divb
jae
ljmp
fidivrs
subl
mov
adc
sbb
pop
cmp
xlat
lret
adc
lea
fs
mov
xchg
sti
pop
or
jge
add
fisttpl
push
push
sbb
jg
sub
ss
push
sub
xor
iret
sub
xor
nop
xor
lods
lock
inc
pop
lret
icebp
push
int3
mov
push
loope
inc
addr16
jle
stos
imul
and
stos
test
mov
mov
test
inc
mov
jl
inc
ret
jne
mov
xchg
jno
lahf
dec
mov
enter
inc
call
sub
or
enter
testb
outsb
add
cmp
mov
cmp
gs
mov
mov
inc
loope
xchg
sbb
mov
or
aas
ret
inc
xlat
hlt
arpl
mov
mov
lods
in
lods
imul
push
fisubrs
mov
mov
js
jb
pop
idivl
sbb
dec
cmp
pop
dec
xlat
dec
mov
ret
xchg
jae
subl
mov
in
das
mov
outsl
lods
sbb
adc
mov
cmpsl
dec
test
ret
jo
sub
aam
in
and
mov
das
xchg
jp
test
mov
imul
and
out
xor
gs
mov
stos
clc
mov
imul
mov
cmp
in
push
insb
negl
daa
insb
xchg
inc
pop
scas
lcall
fsub
imul
jns
rcrb
or
ret
jg
jnp
pop
pushf
lods
push
stos
jge
clc
fsubs
push
cmp
bound
ret
sub
pop
out
subb
in
pop
fs
fistpl
stc
je
aad
mov
jmp
and
ljmp
inc
mov
retw
loopne
dec
movsb
lods
sbb
add
jno
fistpll
adc
mov
jno
push
cmp
cmc
and
outsb
out
in
inc
adc
or
stos
cmp
add
ret
jl
outsb
dec
rorb
jle
dec
sbb
jb
outsl
mov
mov
pop
leave
in
mov
sahf
hlt
fwait
dec
sub
cmpsb
insl
jmp
inc
xchg
das
push
xor
cmp
iret
sub
jnp
push
call
xchg
pop
shlb
mov
push
shrl
lods
pop
pushf
roll
adc
arpl
mov
jle
inc
roll
jl
mov
mov
mov
mov
cmc
inc
aad
xor
outsb
jmp
test
dec
and
inc
push
je
fisubl
out
adc
pusha
dec
test
and
ret
jno
pop
sarl
cld
push
out
inc
mulb
loope
push
pop
decb
ds
pop
cmp
in
and
adc
sahf
lea
xor
loope
xchg
xor
rclb
in
pop
cmc
repz
xlat
data16
aaa
ret
lds
insb
cltd
xor
insb
inc
fmull
mov
clc
in
negl
pop
enter
daa
negl
fdiv
xchg
cld
xchg
or
xchg
aas
aam
stos
cmp
jmp
fs
aad
xorb
push
fwait
inc
push
jne
xchg
loope
mov
dec
aas
mov
test
jg
pusha
outsb
mov
lahf
add
int3
and
push
sub
rcl
pop
xor
pop
mov
cmc
lahf
fwait
fs
pop
adc
sbb
mov
pop
aas
inc
fs
xor
inc
es
jae
stos
jg
xor
add
repz
pop
push
aaa
jecxz
inc
mov
fcos
fwait
mov
pop
inc
mov
mov
mov
iret
dec
in
sarb
fwait
or
test
mov
arpl
adc
lret
and
rorb
leave
and
test
pop
leave
andl
lcall
mov
adc
adc
xlat
sbb
rol
test
std
push
mov
popa
xor
xchg
aas
leave
inc
sahf
aad
arpl
inc
repnz
mov
or
mov
addr16
pop
movsb
mov
lret
testb
add
in
bound
sbb
fbstp
popa
movsl
cltd
xchg
out
add
mov
add
sub
ret
xchg
push
fidivl
xchg
cmp
mov
stos
push
rorb
push
test
addr16
mov
dec
subb
cmpsb
pop
cmp
cmpsl
mov
inc
mov
inc
popf
lea
add
mov
jnp
sarb
jns
cs
je
popf
loop
add
enter
aaa
pusha
xchg
fdiv
cli
insb
gs
std
cmpsl
lds
addr16
testl
and
mov
jl
pop
sbb
std
test
jne
shl
test
fcomps
inc
push
test
sub
or
stos
mov
xchg
cmp
ds
loope
and
add
xor
xor
aad
push
mov
cld
movsb
std
pusha
xchg
movsl
icebp
add
hlt
lds
adcl
idivb
cmpsl
xchg
pop
cmp
jge
movsb
inc
fwait
jge
cli
imul
aaa
jo
decb
mov
enter
jbe
call
sahf
fwait
popf
mov
popf
lret
jle
add
call
and
inc
inc
push
cltd
push
xor
ror
xor
lret
mov
mov
push
inc
lcall
push
in
arpl
js
push
pushf
mov
pop
shl
mov
std
iret
lods
out
addb
and
dec
cwtl
addl
orb
push
int
xchg
loopne
aas
imulb
mov
cwtl
jb
or
dec
fs
mov
std
mov
add
inc
mov
inc
add
fs
aaa
mov
cmpsl
popf
sub
aam
mov
push
je
mov
js
lret
iret
xchg
ljmp
xchg
xchg
repz
fs
test
and
push
xor
mov
lods
gs
add
int3
inc
movsb
sbb
push
aam
adc
sub
and
loope
sbb
test
leave
mov
cltd
push
pop
ljmp
add
cs
sub
rcl
pop
add
cwtl
stc
mov
ror
push
aam
movl
and
addr16
and
sarb
jmp
negl
lahf
xchg
or
inc
dec
xor
fcmovnb
mov
jae
cli
aaa
mov
jl
lcall
jns
loope
inc
xor
shrl
lcall
xor
dec
loopne
in
or
mov
jnp
dec
pop
cmp
push
mov
push
mov
and
pop
repz
xor
popa
in
into
xor
push
jno
dec
testl
or
int3
or
stos
fwait
mov
sbbb
mov
xchg
cmpsb
jae
mov
pop
fldl
cmc
mov
ror
popf
mov
aas
test
xlat
aad
xchg
adc
test
sbb
dec
dec
lods
repnz
inc
in
stos
mov
adc
daa
push
cmp
popf
add
call
jbe
sahf
cmp
cmp
test
xchg
and
mov
out
mov
mov
push
int3
sahf
sahf
jnp
cltd
or
jno
cltd
inc
pop
pop
adc
fistpl
jl
add
xchg
bound
jb
add
cmp
dec
emms
xchg
jne
and
xor
cmp
push
mov
clc
jb
mov
xchg
mov
iret
out
inc
inc
hlt
sbb
loopne
ljmp
daa
inc
jb
add
std
shl
push
mov
push
in
insl
imul
xlat
jmp
cmpl
cmp
and
aas
mov
add
pop
inc
or
sbb
subl
stos
call
push
pop
push
fisttpll
test
add
test
adc
leave
outsb
xor
rcr
and
mov
mov
lock
xor
cs
iret
dec
adc
rcrl
iret
stos
and
xor
imul
bound
dec
or
pop
sbb
xchg
imul
xabort
or
inc
jmp
repz
rcll
adc
int
outsl
sbb
andb
inc
cld
pop
jg
cmp
sti
imul
repnz
push
sbb
hlt
cmp
dec
nop
sbb
popf
or
rolb
xor
mov
sahf
mov
cli
add
dec
xor
cld
cli
add
xchg
gs
jge
mov
push
loop
xchg
mov
dec
iret
pop
sub
mov
mov
sbb
outsb
cmp
xor
scas
ljmp
jae
rcll
or
aaa
push
sub
divl
out
aad
jns
push
and
lds
dec
fcoml
test
mov
movsl
xchg
mov
rorb
sbb
cmpsl
adc
pop
sub
out
fisttpll
mov
fmull
lds
mov
pop
fucomi
sbb
pop
cwtl
pusha
in
adc
xlat
sbb
dec
fmul
scas
fnstcw
repnz
cmp
inc
lods
push
jno
out
shll
lret
call
rol
sbb
shlb
out
sti
pop
sar
inc
imul
popf
test
aam
and
add
or
test
dec
outsl
pop
test
pop
inc
lock
sbb
xor
cmc
jecxz
dec
movsb
ficomps
mov
xor
out
push
push
and
dec
inc
stc
push
mov
je
adc
dec
sbb
addr16
and
jp
inc
jg
stos
pop
mov
shll
and
ret
fwait
push
cmpsb
ret
in
add
add
pop
mov
inc
push
pusha
sbb
jp
dec
icebp
out
pop
scas
fadds
aad
xchg
mov
imul
test
loop
xor
sbb
push
stos
pop
jae
out
xlat
or
xchg
cmp
jns
push
stos
sahf
dec
adc
repnz
jnp
addl
mov
jmp
mov
outsl
xchg
and
pushf
dec
lods
popf
jmp
mov
cmp
das
insl
mov
loop
addl
popf
mov
push
sub
mov
sar
mov
pop
sbb
cli
bound
pop
aad
xchg
rcl
dec
mov
ret
sbb
xlat
xchg
pop
xor
mov
mov
and
repz
ds
ret
rclb
sahf
in
sbb
ret
stos
dec
lea
sbb
mov
aad
push
xchg
test
repnz
or
jne
fbld
adc
lock
xor
sti
push
shrl
addr16
loope
lcall
sbb
std
pop
repz
mov
mov
jb
mov
enter
push
mov
mov
mov
pop
push
repz
mov
out
fstps
push
repz
sub
mov
fdivs
call
inc
dec
push
push
jo
mov
push
or
sbb
pop
fsub
enter
iret
fs
aam
stos
adc
fs
and
aaa
jp
xchg
lcall
adc
mov
xchg
lret
adc
pop
pop
decb
jp
cli
dec
dec
jecxz
inc
jl
pop
xchg
vmread
cmp
cmp
repz
gs
loopne
popa
je
sub
sbb
or
stos
cmc
int
fidivl
in
xor
les
mov
mov
pop
mov
outsb
sti
sub
push
pop
add
push
fisubs
jbe
imul
test
push
mov
adc
pop
dec
or
dec
lcall
cld
lret
and
jno
add
sbb
push
jmp
repz
std
xchg
inc
scas
aad
dec
or
cmc
cli
cmp
fwait
call
xchg
jle
aam
xchg
imul
sbb
adc
xor
and
pop
inc
mov
out
jmp
inc
push
test
xchg
or
incl
push
mov
cld
xorb
adc
mov
dec
push
xchg
and
pop
mov
dec
jge
or
test
pop
pop
ds
fwait
jl
cmp
cmp
sbb
inc
scas
push
sarl
aaa
nop
mov
cwtl
and
outsl
jg
adc
jbe
dec
xor
bound
push
and
add
jecxz
call
push
or
test
cmp
aad
mov
adc
cmp
inc
dec
fcmovbe
jae
cltd
xchg
and
dec
sti
mov
xchg
add
jbe
ljmp
xchg
mov
loope
jp
xor
pop
iret
mov
lods
xchg
add
mov
jne
dec
add
xlat
lea
mov
imul
aam
mov
cmp
add
or
inc
xor
shll
jp
aad
sub
inc
dec
jecxz
pop
inc
and
mov
xlat
dec
insl
ljmp
inc
pcmpgtb
push
push
pop
push
movsb
or
pushf
imul
mov
jnp
cld
lcall
movsb
cwtl
inc
mov
xchg
stos
fbld
sahf
movsb
push
int
inc
rorl
fdivs
add
lock
into
and
lods
pop
stos
push
mov
lods
outsb
and
int
pop
mov
sbb
pop
in
mov
dec
shlb
inc
jne
mov
xchg
adc
test
mov
lea
icebp
mov
jg
jns
push
lret
pop
subl
fs
decl
test
and
jbe
push
cmp
xchg
outsl
sahf
out
or
outsl
mov
aad
cltd
ljmp
inc
in
inc
adc
mov
and
cltd
ja
aas
pusha
insb
gs
inc
fs
mov
push
repnz
add
pop
add
ds
cmp
add
xor
outsb
clc
iret
sub
mov
or
mov
adc
daa
jmp
cmp
in
dec
mov
adc
bound
mov
std
fists
or
pop
cmp
sub
andl
mov
or
dec
in
xorl
hlt
icebp
pop
bound
and
lcall
nop
pop
push
or
insb
push
test
jp
or
add
aas
lret
popa
lret
add
out
lods
adc
dec
ss
leave
scas
fwait
jno
loop
mov
mov
idiv
lods
and
les
imul
enter
ret
rcrl
push
inc
lret
popa
insb
pusha
sub
repz
pusha
adc
push
adc
enter
in
cmp
test
inc
xor
xchg
fmuls
xchg
mov
cmpsb
add
orb
cmpsl
mov
xor
inc
dec
dec
adc
sti
popf
xor
jmp
cmpsl
mov
mov
test
mov
movsl
insl
clc
pop
into
scas
mov
das
call
jns
pop
mov
sbb
sub
pop
cmp
call
push
cmp
mov
adc
and
das
hlt
popa
inc
inc
and
pop
mov
sbb
jne
jns
add
xor
pop
mov
out
inc
lahf
sub
jnp
mov
aaa
adc
bound
addr16
in
mov
push
mov
jge
and
push
push
in
dec
loope
push
addr16
xor
push
mov
xchg
and
xchg
cmp
or
lahf
push
cmpsl
or
pop
fiaddl
dec
insl
sub
ret
movsl
or
cmc
pop
out
mov
adc
dec
dec
fcompl
add
leave
mov
enter
mov
hlt
inc
insl
mov
popa
es
andb
mov
and
jle
fdivrl
cmp
outsb
jnp
mov
pop
cs
out
jns
lret
xor
aam
orb
jnp
mov
daa
add
outsl
int3
cmp
adc
sbb
aaa
subl
add
in
ds
cwtl
fsubr
push
imul
aam
loope
cmpsb
aad
cwtl
jle
test
dec
inc
cmp
addr16
insl
out
or
pusha
call
xchg
rol
mov
fidivs
dec
sbb
jecxz
jne
ret
into
mov
xlat
mov
lcall
insb
xchg
ljmp
dec
mov
cmp
ss
ret
je
pop
aas
xor
in
cwtl
adc
pop
stos
or
lahf
jb
mov
add
push
push
inc
sub
push
aad
icebp
mov
lret
mov
xchg
and
sub
movsl
inc
movsb
mov
pop
jae
inc
pop
mov
outsl
jl
dec
jmp
and
pop
insl
sarl
sub
les
jmp
enter
mov
jo
lahf
notb
sub
xchg
mov
and
and
adc
aaa
push
scas
lods
js
lret
jb
mov
xchg
repnz
hlt
in
mov
cltd
stc
leave
sub
fistpll
hlt
sbb
test
lret
or
or
and
jge
hlt
pop
xchg
pop
sbbl
out
adc
aaa
pop
out
stos
out
sub
and
mov
add
aas
int3
shrl
jge
pop
nop
mov
imul
aas
ljmp
icebp
gs
shrl
sahf
pop
push
popa
xchg
add
push
pusha
cwtl
xchg
outsb
fbstp
jg
repnz
cmpb
jno
mov
test
or
sbb
cwtl
les
mov
xchg
repnz
cmp
ss
aad
lret
mov
inc
sbb
jecxz
pushf
cwtl
jmp
arpl
cltd
xchg
mov
or
pop
mov
dec
ds
scas
cmc
aad
daa
add
xchg
testb
cltd
push
mov
mov
hlt
adc
and
popa
call
fs
adc
ficoms
sbb
sti
adc
int3
push
pop
and
and
ficompl
dec
es
cmpsb
jl
mov
lods
or
push
mov
mov
pop
mov
push
ds
mov
xchg
adcb
repz
popa
int
mov
test
add
and
or
outsl
xor
sahf
repz
xchg
pop
jb
inc
stos
xor
movsb
jp
mov
or
xchg
shll
popa
lea
mov
nop
ret
add
or
xchg
scas
das
xor
add
xor
jmp
mov
add
pop
dec
sbb
fs
adc
test
icebp
jl
xchg
pop
test
xchg
mov
push
nop
push
and
sub
std
xor
inc
mov
out
mov
add
sbb
lds
jg
sahf
ds
pop
inc
jno
push
cmc
add
pop
scas
add
cltd
sbb
mov
mov
dec
mov
push
push
sub
push
shl
sub
rclb
sbb
sbb
dec
repnz
adc
mov
and
cmp
mov
mov
hlt
into
dec
mov
shl
faddl
mov
inc
and
jp
aad
lret
fs
adc
push
mov
in
fsubrl
ljmp
cmovs
and
add
xchg
sub
insb
mov
gs
ret
jno
fabs
pop
inc
mov
mov
push
add
test
sbb
and
leave
and
jbe
or
mov
pop
lods
xchg
aaa
cmpl
xchg
sbb
or
pop
test
add
fcoml
arpl
xor
fcmovne
repz
cmpsl
divl
jne
movsb
pop
in
mov
xchg
push
adc
fcompl
pop
sub
mov
cmp
xchg
clc
pop
ss
fbstp
insl
adc
mov
aam
test
lods
cmp
pop
scas
jge
leave
jecxz
mov
jl
dec
repz
mov
enter
mov
mov
flds
xor
mov
aas
jb
sti
xchg
pop
or
inc
push
imul
in
loopne
cwtl
jmp
mov
dec
cmp
pop
decl
pop
dec
lahf
out
packuswb
addr16
testl
jecxz
xchg
dec
pop
into
leave
adc
jbe
fstpl
ja
lods
jo
lea
pop
pop
popf
mov
rcl
add
add
pop
inc
push
lcall
add
scas
xor
cmp
nop
jge
jnp
insl
lret
sti
movsb
sahf
sbb
cld
imul
hlt
push
lcall
divl
test
push
cmpsl
shll
mov
call
in
es
lret
push
jne
push
clc
mov
movlps
enter
cmpsl
fidivrs
xchg
aas
lods
jo
jecxz
jbe
test
aas
into
fiadds
sldt
ret
pop
mov
adc
and
out
push
jae
pop
mov
cld
rorb
mov
lods
frstor
add
scas
icebp
xchg
lock
test
push
out
gs
sbb
xchg
pop
xlat
fnstcw
pop
xchg
pop
test
test
lret
shl
ljmp
mov
jbe
cwtl
mov
in
mov
popa
xlat
adc
xor
dec
mov
lret
add
call
shrl
iret
jb
xchg
icebp
loope
ss
push
loop
xor
pop
push
test
sbbl
mov
popa
and
inc
je
sub
sbb
adc
inc
cltd
lea
pop
ret
inc
sub
testb
mov
in
lret
lock
test
jo
cmp
sbb
xorw
mov
test
and
dec
add
mov
push
jg
ds
inc
mov
xor
fldenv
adc
jmp
adc
bnd
jl
outsb
add
or
sbb
fstl
pushf
inc
and
aad
add
mov
jae
out
dec
xchg
pop
repnz
sti
ds
int
push
movsb
lds
int
push
cmc
ss
ljmp
ds
aas
rcl
and
pusha
scas
out
lock
loope
xchg
scas
pop
sbb
ljmp
dec
sbb
and
cld
sar
xchg
mov
dec
push
sub
cli
loopne
inc
adc
xchg
stos
mov
jecxz
ja
jle
fwait
jl
mov
or
gs
mov
sbb
push
jl
std
or
and
push
jg
mov
sub
out
cli
push
lods
cmp
int
cmc
mov
ret
pop
ljmp
or
dec
std
rcrb
mov
rorb
push
mov
hlt
inc
adc
lcall
pop
mov
ja
jno
dec
sub
sub
out
aaa
push
mov
sbb
jbe
lcall
dec
sub
arpl
je
fstl
pushf
clc
cwtl
call
adc
jnp
dec
aas
push
in
out
sarl
incb
inc
sub
mov
cmp
int
xor
mov
shl
or
ficoml
cmp
mov
mov
sarl
or
data16
or
pop
loopne
stc
add
pop
cmpsl
mov
push
pop
or
push
imul
push
les
movsl
ja
icebp
and
add
pushf
iret
push
js
jl
or
fimuls
repnz
mov
ret
dec
icebp
mov
je
enter
les
aaa
dec
jno
ja
pop
push
sub
sub
or
and
emms
mov
push
int3
dec
mov
hlt
lahf
aas
xor
dec
fwait
mov
ds
mov
xor
lods
out
idiv
aaa
fimuls
xor
sub
cmp
mov
dec
imul
jmp
inc
cmp
sub
ret
stc
int3
repz
inc
ja
ljmp
sbb
sub
ja
andb
lock
dec
icebp
dec
aad
push
jo
sbb
test
cli
cmp
das
movsb
mov
in
pusha
cmpsl
add
sti
adc
sub
mov
dec
sbb
pusha
push
jns
sbb
push
imul
push
call
pushf
incb
inc
imul
jae
outsl
dec
mov
and
jle
lret
mov
loop
ljmp
lds
icebp
pop
aam
jo
movsl
mov
insb
pop
adc
mov
jne
shll
jg
popa
mov
sub
mov
lds
cmp
shrb
or
arpl
repz
in
cmp
add
inc
pop
dec
cmp
inc
push
sbb
fistpl
in
mov
out
push
push
push
sub
pop
mulb
adcb
ljmp
rcrb
in
jg
test
cmp
fldt
out
add
sbb
xchg
and
repz
cmp
add
dec
xchg
jmp
aad
stos
dec
adc
pop
subb
insb
js
stos
sbb
scas
icebp
and
dec
jns
cmpsb
loopne
jl
loope
idiv
jae
das
popa
push
add
repnz
int
cmp
mov
lock
sbb
addr16
into
jb
jo
in
inc
lea
pop
bnd
andl
lods
in
lds
xchg
in
lret
arpl
imul
mov
out
ja
cmp
mov
and
daa
cs
or
cwtl
pop
filds
mov
cltd
and
and
stos
outsb
xchg
add
aaa
add
jns
inc
scas
cmp
cmp
movsb
daa
cmpsb
fimuls
sub
aaa
sbb
push
mov
dec
cmp
cmp
mov
xorl
vpslld
mov
jns
cwtl
das
rol
sbb
xchg
mov
push
xor
jbe
sbb
sbb
fdiv
cmp
mov
insb
cmc
subl
stos
xlat
or
mov
lods
push
cs
std
fcompl
and
cmpsb
adc
bnd
out
insl
aaa
pop
adcl
cmp
sub
cmp
iret
lret
xchg
xor
repnz
repnz
pop
xchg
inc
insb
dec
insb
dec
clc
mov
aad
push
push
sar
pop
sarl
pop
sbbl
or
out
jo
clc
add
sarl
pop
pushw
add
pushf
aaa
pop
into
pop
or
dec
cmp
jae
xchg
sbb
icebp
xchg
mov
pop
xchg
ret
xchg
sub
imul
mov
mov
mov
iret
ret
in
test
gs
xor
pop
shll
test
aaa
cmpsl
roll
std
inc
mov
pop
jno
add
jg
cltd
fs
jae
adc
imul
sub
cmp
ljmp
mov
push
dec
push
sbb
daa
sub
jg
sbb
sub
jge
and
mov
adc
test
je
fistpll
testl
loopne
aas
repz
xchg
cmp
pop
stos
sti
push
push
cltd
mov
mov
mov
mov
pushf
cmpsb
cwtl
sub
pop
push
pop
mov
aas
lret
fisubs
rcrl
movsb
push
adc
loopne
pop
jb
aaa
mov
adc
dec
or
or
imul
test
mov
pop
xchg
adc
pop
js
movsl
xor
cmp
repz
add
mov
xor
xchg
insb
mov
cli
mov
es
popa
shll
test
pop
mov
lds
stos
pop
and
cmp
ja
dec
dec
xor
in
pop
mov
mov
mov
add
adc
dec
lea
test
cwtl
ror
sbb
lods
cltd
push
add
movsl
aas
aaa
popf
xor
push
mov
cmp
fidivl
cld
xchg
fimuls
push
and
sbb
pushf
mov
pop
add
out
pop
data16
pop
pop
add
jmp
pop
or
sub
mov
fsubrl
dec
sbb
xor
add
imul
inc
xchg
adc
or
lcall
adc
in
pop
je
aaa
push
cltd
sbb
fcoms
xor
iret
jno
sub
cmp
mov
inc
rcrl
lods
fmuls
xor
and
sbb
inc
cmpb
xchg
decl
push
mov
fcmovne
arpl
adc
push
or
ret
push
data16
xlat
mov
fisubs
test
in
mov
std
cld
mov
shll
cltd
sub
notl
loopne
xchg
cmp
push
into
or
push
ja
dec
repz
mov
sub
imul
mov
pop
or
mov
js
xchg
add
ja
push
mov
dec
repnz
push
and
stc
out
inc
xchg
cmp
lahf
adc
mov
aam
adc
andb
in
pop
or
dec
out
addr16
dec
ficompl
xor
mul
stc
gs
jae
adc
inc
stos
out
fdivr
sbb
nop
out
xchg
andb
hlt
in
rolb
xor
repnz
fiaddl
leave
inc
adc
lcall
inc
gs
push
xchg
ffreep
rcr
lcall
or
lock
xor
push
cmp
cli
pop
jbe
imul
mov
adcl
ret
jl
mov
movsl
inc
pop
cmp
mov
repnz
test
xchg
mov
mov
mov
xchg
mov
lcall
xchg
clc
sbb
in
jne
faddl
in
daa
cmpsl
add
push
mov
mov
mov
xchg
cmp
rcrl
mov
adc
jo
push
and
or
add
lock
xor
mov
daa
sub
inc
ds
cmp
or
inc
movsb
into
pop
mov
or
jno
dec
incb
cmp
popf
xchg
subb
stc
movsb
push
mov
pushw
jg,pn
mov
xchg
jns
mov
jge
movl
cwtl
loopne
aam
push
sbb
xchg
stc
dec
sub
mov
mov
in
xchg
mov
gs
orb
jae
push
imul
int
dec
jmp
test
lahf
cltd
mov
xor
cwtl
xor
imul
loopne
sub
mov
lock
out
jae
jecxz
imul
jge
jae
ret
mov
or
add
std
shlb
addr16
or
mov
int3
fs
insb
in
or
hlt
movsl
out
insl
add
pop
jns
outsb
add
adc
pusha
js
movsb
pop
cmc
cmpsl
fwait
dec
inc
test
push
mov
mov
inc
daa
push
mov
sub
pop
cmp
lcall
mov
xchg
fwait
add
addb
xchg
sahf
sbbl
sti
and
and
mov
jo
repz
pop
bound
aas
fnstsw
or
in
adc
aam
adc
out
mov
mov
mov
jb
pop
loop
push
mov
pop
fisubl
pusha
pop
jnp
les
insl
add
sub
jge
mov
lahf
jmp
xchg
addr16
fwait
jbe
add
shlb
xchg
cld
add
fucompp
les
loop
cmp
lahf
outsl
es
sbb
addb
insb
int3
outsb
sub
shrl
mov
aam
rcr
movsl
cld
mov
ret
insb
xlat
stos
jno
mov
mov
cmp
fabs
sbb
push
mov
ficomps
mov
or
mov
lods
sbb
int3
ficoms
sbbl
in
mov
cmp
bound
ret
in
jl
cli
xchg
addr16
cs
stc
add
mov
outsl
sbb
pop
test
cli
je
xor
fisubs
scas
mov
lods
mov
idivl
jp
xchg
repnz
inc
sbb
popf
xchg
and
or
xorb
xor
or
cltd
mov
pop
sbb
out
scas
mov
xor
test
in
pop
mov
push
push
mov
sub
jo
addl
mov
cmpsb
pop
rorl
das
jb
mov
fisubl
mov
cmp
mov
shlb
les
mov
imul
fstpl
fidivrs
cmp
dec
std
rorb
cltd
jae
jp
add
cltd
cmp
adc
testb
mov
rcll
in
mov
adc
cltd
adc
push
imul
cmpsl
mov
jecxz
aam
xchg
imul
shlb
lods
insl
xchg
mov
sahf
enter
mov
pop
adc
popa
adc
mov
popf
xor
jmp
imul
cs
and
mov
and
mov
fildl
pop
jns
outsl
or
cmpsl
push
xlat
rcr
stos
push
into
ret
imul
jmp
jmp
cmp
and
mov
hlt
inc
pop
cmpsl
jbe
sub
scas
pop
xchg
psllq
mov
leave
rep
mov
fdivr
mov
jle
testb
adc
cmp
push
in
and
enter
mov
mov
int3
test
lods
out
aaa
aad
xchg
mov
lret
inc
push
adc
mov
lcall
and
lods
push
std
leave
adc
cmp
push
mov
mov
add
arpl
stc
cmp
movsb
jnp
imul
je
sti
lea
mov
mov
xchg
push
xor
syscall
inc
mov
data16
xchg
repnz
flds
lret
xlat
add
outsl
cmc
or
xor
mov
inc
jne
dec
mov
es
pop
ds
cmp
pop
movsl
cmp
sbb
fmuls
adc
inc
int3
add
lock
or
inc
xchg
sub
pop
mov
push
sbb
jg
out
xor
fdivs
mov
cmp
int3
imul
add
leave
inc
and
inc
outsl
dec
test
loope
stos
daa
adc
jp
enter
jnp
leave
sbb
and
test
adc
out
xchg
cmpsl
lods
js
xchg
sub
xchg
aad
lock
jae
aad
lea
es
xor
mov
fnsave
pushl
mov
and
sbb
inc
mov
fsubr
adc
leave
ljmp
into
mov
mov
mov
xchg
insl
push
stos
aam
fmull
jbe
popf
sub
and
in
enter
sbb
movsl
pop
pop
sarl
cmp
lea
ret
stos
fsubrs
sbb
or
stc
rclb
adc
push
cmp
fsubrl
jp
push
shrl
mov
fstp
mov
mov
cmp
and
jnp
xchg
nop
cmpsb
dec
lods
lcall
in
out
cmp
movups
mov
bound
cmpsb
repnz
cmp
mov
fldenv
jge
push
mov
add
sub
dec
push
out
add
sarb
shrl
dec
lret
fnstcw
shlb
xor
into
and
push
enter
jg
aam
lret
add
jmp
jnp
mov
mov
addr16
addb
int3
in
inc
testb
mov
dec
scas
aaa
rcrl
insl
gs
xchg
pop
mov
scas
repz
dec
xor
pushf
test
fucomp
js
dec
sbb
lcall
add
add
das
enter
push
or
mov
pushf
xor
mov
push
inc
rcr
rcl
mov
in
sub
iret
shrb
cmp
int
mov
mov
or
jb
das
in
mov
and
adc
mov
pop
fldenv
xchg
out
fldt
dec
pushf
dec
clc
imul
lods
jne
rolb
pop
cmp
movsl
push
mov
mov
xchg
adc
nop
ss
xchg
push
sub
lea
ja
dec
or
out
loopne
mov
and
pusha
mov
dec
jecxz
mov
add
mov
mov
pop
add
mov
movsl
and
div
fcompl
lods
cmp
lods
std
aam
push
idivb
ljmp
cli
sbb
sub
movsb
outsl
std
arpl
adc
es
sbb
push
cmp
stos
in
bound
mov
and
movsb
pop
ret
adc
push
inc
dec
clc
lcall
mov
rsm
insb
ja
mov
lds
mov
push
inc
stos
test
xlat
inc
pop
lods
push
ficomps
push
xchg
std
sub
adc
push
cli
gs
mov
push
mov
mov
jo
or
mov
lock
cmpsb
mov
iret
jo
xor
mov
mov
pop
dec
jne
adc
or
jmp
sahf
and
dec
xor
mov
movb
imul
and
daa
push
pusha
clc
leave
mov
pop
aad
dec
pop
and
into
xchg
xchg
scas
pushf
add
popf
xor
sbb
fwait
inc
sti
popf
push
insl
push
adc
sub
jge
or
call
pop
rcrl
fcomps
imul
fimull
xor
inc
iret
addr16
pop
cmp
out
dec
cmp
mov
lahf
js
add
cmp
push
scas
test
or
mov
add
adc
in
in
cmpsl
in
je
ja
lret
and
stos
push
cmp
cmp
or
mov
fwait
ljmp
mov
aam
mov
pop
inc
mov
aam
out
dec
fdivrs
pop
cltd
and
ror
jecxz
mov
test
xor
sbb
sbb
adc
dec
inc
push
movsl
lods
mov
pop
dec
xchg
adc
call
cmp
cmp
out
or
rcll
inc
enter
push
push
xchg
push
jge
jecxz
pop
test
jg
pop
int
jl
cmpsb
pop
mov
mov
or
mov
mov
mov
cwtl
clc
bound
cmp
mov
push
in
notl
loope
out
out
out
dec
mov
mov
jnp
and
mov
push
pop
jb
push
jle
cmpsb
js
ja
xchg
dec
jb
enter
outsl
loope
mov
cmp
js
and
pop
sbb
sub
sbb
test
mov
icebp
inc
fisubrl
add
jp
out
loopne
test
cmp
ss
jle
push
add
push
ds
add
cmp
stos
insl
stos
push
cmpsb
xchg
imul
push
dec
andb
popa
jp
inc
ds
mov
pop
lea
addl
mov
fwait
ret
outsl
pop
out
cmp
rcrb
lods
loope
add
pop
lcall
jo
mov
and
mov
sub
scas
test
rorl
imul
rsm
mov
test
and
add
fidivrl
pushf
lret
lods
int3
test
sti
fldl
rorb
insl
mov
cmp
add
stc
test
xor
sub
sbb
adc
les
jge
ficompl
mov
or
mov
leave
sbb
cmp
and
pop
jp
sarl
adc
dec
mov
jg
inc
stc
jnp
pusha
and
testb
jnp
inc
insb
lret
imul
mov
push
test
cmpsb
sbb
inc
and
ret
add
test
sbb
sahf
inc
lret
dec
cmpsb
shll
aad
sub
mov
leave
inc
jbe
lods
repz
pop
cmc
push
xchg
sar
jbe
adc
push
sbb
decb
mov
daa
add
arpl
es
je
test
xorb
jmp
sbb
das
jnp
js
in
adc
lahf
jge
inc
mov
test
mov
shrl
mov
daa
mov
and
sbb
movsl
fwait
out
add
lahf
push
icebp
inc
shrb
test
sub
popf
ds
push
jo
ljmp
outsb
aam
dec
movsl
shr
mov
cmpsl
movsb
fcomi
shll
loopne
pop
sbb
fisubrl
lea
and
fists
dec
fidivl
adc
out
push
popa
nop
xor
xchg
sbb
fucomip
xor
add
mov
xchg
xor
mov
aas
sub
js
jns
cli
push
stc
out
iret
cmpl
ret
in
popa
lret
inc
cltd
inc
pop
sbb
cli
add
mov
sbb
mov
dec
hlt
sbb
sbb
in
push
lret
xchg
or
cmp
jg
lcall
mov
dec
mov
pop
push
nop
jmp
inc
mov
jae
mov
cld
cwtl
xchg
sahf
inc
pop
sahf
es
pop
leave
and
push
gs
loope
scas
leave
cli
or
or
loop
pop
and
int
inc
xor
and
popa
scas
das
and
sub
test
je
adc
pop
daa
ljmp
xchg
and
sbb
pop
movsb
out
gs
inc
cmpsl
loop
pop
xchg
clc
arpl
fists
mov
xor
cmpsl
or
and
cltd
sahf
jmp
adc
sbb
push
mov
inc
popf
dec
mov
xor
fs
fisubl
in
fbstp
sub
jl
rorl
lret
inc
leave
cmp
cmp
repz
push
mov
adc
cld
jp
shll
cmp
cmc
aaa
fwait
in
adc
insl
popa
cmp
shl
cs
add
cli
bound
jo
out
out
sarb
sbb
mov
data16
mov
cmp
lods
push
push
inc
cmp
mov
mov
imulb
cs
lock
inc
mov
cmp
jmp
insl
cmp
xor
sub
push
mov
push
aas
lret
pushf
dec
sti
pop
and
add
stos
mov
dec
mov
inc
ret
sub
mov
adc
adc
sbb
hlt
stos
clc
mov
mov
xchg
in
sbb
inc
inc
sti
sub
xorl
dec
shl
imul
xchg
pop
int3
xchg
sbbb
push
nop
xchg
cli
rcll
cli
sub
mov
imul
xchg
scas
push
inc
add
push
test
xor
jo
test
notl
pop
xor
adc
add
popl
adc
dec
int3
rcrb
jmp
mov
adc
push
aaa
mov
lcall
ret
in
dec
je
gs
inc
in
rcrb
test
cmp
jns
aaa
xor
fcompl
test
mov
xchg
cwtl
hlt
jb
mov
jg
or
out
fists
inc
arpl
dec
cmp
mov
xor
add
jecxz
out
stos
xor
lcall
mov
nop
pop
pop
stos
lret
add
inc
repnz
popa
pop
loop
sbb
push
xor
mov
rol
outsl
daa
movntq
out
insb
inc
sub
add
in
pop
hlt
outsb
repz
sbb
cli
cmpsl
sarb
mov
mov
xchg
xor
mov
push
fildl
dec
push
and
mov
pop
ret
test
add
push
push
fwait
sbb
and
insl
cmp
aas
sbbl
mov
call
int3
jns
leave
lcall
test
jns
mov
ret
icebp
rcl
outsb
cmc
mov
negl
loope
aam
int
out
outsl
pop
mov
sbb
jmp
jge
js
pop
out
cli
inc
xor
inc
arpl
sub
ret
cmp
test
adc
stos
pop
adc
jns
and
movsb
movsb
sub
dec
mov
add
mov
stc
push
leave
cltd
add
pop
jbe
mov
outsb
fisubs
insb
mov
sub
lcall
insb
pop
mov
jno
xchg
mov
lcall
and
pop
ja
hlt
xchg
ljmp
mov
cld
mov
xchg
addr16
sbb
jbe
dec
xchg
stos
daa
cs
hlt
or
movsl
xchg
mov
push
adc
mov
pop
mov
in
sbb
fcom
movsl
repz
rcll
ja
mov
test
daa
out
shl
adc
stc
mov
xchg
loopne
cs
bswap
jge
ret
int3
pop
add
out
inc
xchg
pop
dec
push
call
sbb
and
xlat
shlb
jbe
scas
frstor
fildll
aad
daa
fsubrl
sti
mov
in
jmp
lods
mov
ds
pop
daa
fwait
xchg
cltd
lcall
addr16
sbb
adc
dec
imul
xor
or
arpl
cmp
ja
push
inc
and
push
in
and
enter
cmpsl
lret
outsl
mov
js
xor
jns
jo
mov
dec
push
push
adc
jecxz
test
das
pop
or
in
mov
jle
popl
lahf
test
es
xor
push
imul
add
cmpsb
jne
cmp
add
jmp
pop
fidivrs
in
dec
mov
pop
jge
cmc
mov
insb
repz
lods
in
xor
mov
xchg
outsb
mov
ds
jns
jbe
ss
sbb
mov
jo
sub
roll
cmp
xor
jne
aas
jg
fdiv
pusha
or
fs
sub
iret
ljmp
mov
test
xchg
pusha
fst
sahf
int
cmpb
imul
lret
ret
insb
int3
dec
or
adc
mov
pop
es
or
lea
jbe
fucomi
mov
fldenv
add
imul
pop
pop
jbe
lret
jno
daa
aad
adc
and
dec
int3
cmp
inc
cmpsb
out
adc
int3
cmp
cld
rorb
jp
lahf
mov
push
xchg
mov
inc
dec
jo
scas
push
insl
mov
ja
cmp
adc
or
jb
pop
inc
add
out
adc
leave
add
aaa
mov
xor
lock
out
sbb
cmc
enter
fs
in
enter
stos
bound
dec
jecxz
jle
sbb
xchg
mov
or
neg
jne
popa
por
repnz
cmpsl
push
or
cltd
sbb
xor
lea
test
leave
pushl
xchg
sbb
mov
sbb
shr
jbe
sbb
xchg
pop
xor
mov
sub
into
out
or
inc
jmp
adc
or
scas
into
jne
push
jl
jb
mov
mov
int3
insl
sub
loop
mov
cli
shrb
adc
sbb
mov
daa
ret
mov
lds
in
mov
cmp
ja
pusha
scas
and
xor
insb
cmpsl
fs
jnp
or
sbb
lret
ret
mov
sbb
adc
es
insl
das
mov
mov
jg
bnd
push
xchg
fs
out
jno
cli
int
push
imull
cmpsb
data16
shll
aad
lret
adc
pop
mov
iret
aad
dec
not
adc
mulb
sti
sti
ficomps
mov
int
jecxz
and
push
or
xor
loop
popa
pop
mov
test
push
fmull
and
xor
jmp
rcrl
in
aam
je
daa
pusha
test
stos
or
cli
xor
test
add
ret
xchg
outsb
cmpsl
inc
xchg
and
lahf
addr16
and
ljmp
or
lret
clc
xor
mov
sub
movl
cld
inc
rorl
clc
inc
fadd
dec
insl
and
xchg
cmp
pop
pop
push
dec
jle
sbb
cmpsb
jno
jno
mov
mov
pop
testb
stos
in
aas
call
mov
lea
loop
and
sub
sub
aad
sar
add
and
or
xchg
pslld
fprem
div
push
aas
shll
int
pop
add
mov
jmp
nop
add
aad
and
aad
xor
sbb
add
mov
je
ret
fsubrl
pop
jae
lds
jne
and
push
add
cmc
int
xlat
repnz
pop
ret
sbb
mov
lods
and
jns
clc
xor
shl
push
inc
rol
scas
mov
dec
fisubrl
pop
sbb
cmpsb
push
out
dec
ss
popa
push
gs
sbb
scas
js
nop
andl
rorb
shlb
sbb
add
out
out
push
lret
and
pop
lds
push
test
fisubrl
push
sbb
sub
inc
leave
out
push
cmp
add
mov
add
inc
push
out
or
pop
outsl
shrb
push
cmp
out
push
mov
es
adc
mov
dec
cmp
ljmp
push
adc
cs
mov
jmp
push
sahf
fstl
and
int
and
xchg
mov
adc
loope
sbb
arpl
dec
xor
test
sub
cmp
push
cltd
out
cmpsb
push
cltd
shl
mov
arpl
scas
lcall
xchg
mov
mov
jno
in
xchg
sbb
pop
rorb
xchg
fcmovbe
xor
test
xor
jp
imul
xor
cmp
int3
mov
push
iret
lods
rorb
scas
test
pushl
sarl
pop
aad
fstpl
into
push
mov
inc
in
sbb
push
fwait
jo
xchg
or
sub
or
push
jle
and
xchg
scas
mov
mov
hlt
je
add
cmp
mov
add
out
sbb
mov
imul
jae
rcrl
cmp
mov
in
call
loopne
mov
hlt
and
inc
repnz
mov
into
repz
cld
inc
rol
pop
cmp
xchg
les
xchg
aaa
mov
rcrb
xchg
popf
bound
cmp
loopne
or
icebp
xchg
adc
push
fmuls
rclb
popa
jmp
jle
fnstsw
out
aas
mov
and
sub
mov
xchg
xor
push
mov
and
adc
jecxz
std
pop
imul
push
and
mov
enter
add
dec
bound
ljmp
fstpl
jmp
jecxz
lock
lcall
xchg
push
add
stos
aad
mov
jbe
aaa
imul
ds
dec
int3
test
ljmp
mov
data16
and
fbstp
xlat
mov
repnz
lahf
out
jno
jl
sti
not
or
and
dec
out
sub
ror
sub
call
shll
adc
test
outsb
imul
xor
repz
cmp
ljmp
jne
dec
cs
test
jmp
js
push
lea
push
clc
sahf
mov
add
push
pop
push
mull
push
add
popf
inc
xor
int3
sub
cmc
jmp
popa
daa
jle
aam
imul
gs
scas
clc
popa
sub
push
scas
repz
sti
and
sub
mov
aam
mov
leave
or
daa
push
mov
je
cld
xor
inc
mov
xor
into
adc
lcall
arpl
ja
push
cld
mov
inc
pushf
ss
mov
shlb
push
cld
push
popa
nopl
xor
andb
fwait
inc
test
out
and
mov
push
inc
mov
int3
push
or
jmp
mov
call
jns
mov
mov
mov
mov
out
fsts
gs
loope
outsb
adc
into
mov
mov
or
fsubrp
jo
loope
jmp
frstor
sub
xchg
inc
adc
inc
gs
jae
mov
test
add
rcl
pop
cltd
stos
cmp
xchg
mov
jno
push
cmp
clc
pop
adc
test
or
mov
dec
leave
clc
aaa
popa
lock
in
pop
and
rorl
push
ret
lahf
mov
sbb
in
pop
pushf
adc
gs
pop
sbb
scas
mov
fnsave
repnz
insb
movsb
sub
insl
in
mov
dec
jo
xchg
outsl
lods
in
lds
jmp
dec
push
and
mov
cltd
fs
xchg
and
jecxz
pop
push
cmp
cwtl
xchg
fsubs
fadd
and
cmpsl
jmp
sti
mov
cmpb
push
and
add
push
pop
mov
ret
xchg
mov
lcall
add
adc
or
xchg
scas
add
cmp
xchg
js
push
mov
in
aam
addr16
inc
dec
ret
mov
push
icebp
jmp
test
stos
sbb
jns
mov
shll
das
lods
movsb
fldcw
adc
ds
pop
cmp
ss
cld
mov
xor
jne
pop
cmp
pop
adcb
es
mov
cwtl
orl
xchg
mov
add
addr16
mov
mov
mov
mov
leave
scas
inc
gs
faddl
dec
xor
adc
or
sub
or
and
call
mov
scas
adc
ja
sbb
cld
push
add
jmp
ret
rcl
mov
rcrl
jp
mov
pop
cmpsl
pop
pop
cld
mov
jmp
xor
ret
cmp
sub
jnp
mov
mov
mov
popf
mov
in
scas
mov
in
into
das
dec
cmc
pusha
mov
or
leave
or
idivb
pop
push
shrb
push
push
out
testl
push
fwait
dec
int
xorb
nop
shll
scas
xchg
push
pop
mov
aam
mov
decl
push
repnz
rclb
push
xor
add
rcrl
rcrl
mov
mov
push
daa
insl
fidivl
mov
jae
cmp
fildll
data16
sbbl
bound
lahf
in
xor
pop
sbb
jmp
push
in
sub
fisttpll
xchg
orl
cmpsb
rolb
enter
jg
mov
clc
jns
pusha
jne
out
dec
xchg
fisttpll
fsubs
dec
sti
daa
mov
sbb
negb
mov
cwtl
cmpsl
xchg
cmp
lds
enter
push
fstps
cmp
imul
push
int
adc
jo
cmp
mov
addr16
mov
cmp
scas
ljmp
int
hlt
inc
fidivrs
and
out
jne
xor
pop
mov
mov
mov
xor
lahf
cld
dec
sbb
rcrb
push
jb
sbb
fiadds
sbb
jle
cwtl
dec
jo
aam
in
dec
add
int
pop
movsl
fiadds
in
pop
rorl
cmpb
push
lret
neg
out
xchg
lods
mov
fwait
bound
cmpsl
push
jo
inc
mov
lods
rcl
mov
orb
fwait
dec
mov
pusha
mov
iret
xchg
mov
out
xchg
pop
iret
sbb
pop
testb
jo
stc
stos
insl
aas
jne
loopne
ja,pn
andb
xor
jmp
rorb
pop
jl
cmc
dec
scas
mov
sti
rcll
cltd
mov
notl
mov
inc
pusha
sbb
xchg
jo
lods
aas
cld
movsb
xlat
sub
xchg
push
inc
fnstenv
cmpsl
xchg
ret
cmp
cmp
sub
inc
cmc
push
jmp
bswap
push
in
fistps
rorb
and
sarl
nop
aam
mov
repz
or
sub
xlat
std
mov
out
add
or
imul
adc
jecxz
es
ret
lretw
sbb
scas
aad
and
push
sub
add
out
xchg
arpl
pusha
iret
cli
xor
repz
mov
dec
cmp
add
push
outsl
dec
in
pop
mov
clc
shl
repz
mov
dec
push
xor
stc
not
mov
sbb
pushf
cwtl
mov
je
xchg
loop
scas
cmp
sahf
mov
pop
mov
pushf
lea
adc
pop
in
mov
add
and
jno
pusha
mov
jns
and
fldcw
mov
loope
or
or
adc
test
data16
pop
push
xchg
mov
scas
insb
or
push
je
mov
mov
ret
addl
shll
movsl
aam
mov
test
jmp
movsb
xchg
out
shrb
fld
jb
je
pop
inc
add
cli
int
adc
rcrb
cmc
and
out
dec
mov
sbb
push
loope
add
mov
nop
push
insl
pop
lea
lret
jl
dec
imul
sti
xchg
mov
pop
mov
inc
or
ja
and
fisttpl
in
sub
dec
loopne
mov
xor
push
pop
rcll
out
inc
pusha
cs
outsl
ja
pop
into
dec
je
inc
testl
mov
ret
sarb
xor
cmp
dec
out
jbe
sub
lods
hlt
add
and
xchg
dec
push
shll
mov
mov
sub
enter
cwtl
arpl
add
sbb
pop
shll
test
push
push
mov
rorb
stos
andl
pop
imul
mov
ret
jl
xchg
jle
adc
push
push
and
xor
xor
mov
or
std
push
adc
or
mov
sub
jecxz
ret
sub
add
sbb
movsb
sub
inc
cli
shll
inc
aad
add
adc
std
imul
xchg
insl
ret
jge
cltd
shr
mov
outsl
cmp
cmp
sbb
xchg
xor
sub
lock
nop
repz
dec
sbb
sbb
or
cwtl
pop
mov
push
int3
sub
mov
std
loop
cmpl
je
mov
cmc
popf
mull
mov
lcall
cmp
pop
push
adc
push
xchg
cmp
mov
out
fdivs
push
lock
jle
lods
cmp
arpl
push
and
pop
mov
cmp
dec
sbb
cwtl
cmp
cmp
daa
inc
dec
xchg
fsubrs
into
dec
xchg
rclb
mov
mov
fadds
imul
fs
imul
adc
into
addl
insl
mov
sbb
mov
imul
dec
jbe
imul
or
aas
xchg
fwait
ror
lock
jge
mov
gs
push
addr16
test
js
jmp
inc
fildll
sub
jne
dec
fsubl
jns
jnp
adcb
call
sti
pusha
cli
iret
jge
mov
mov
mov
mov
shll
add
xchg
cmp
in
in
cmpsb
repnz
mov
pop
inc
roll
mov
js
repz
xchg
push
into
and
arpl
push
xor
cmpsl
sub
imul
scas
fdiv
mov
mov
mov
popa
incl
cmp
pushf
mov
in
aas
jle
cs
dec
xor
jne
adc
mov
mov
sbb
push
sbb
fldcw
push
cmp
xor
test
scas
pop
sbb
pop
dec
test
mov
daa
jl
into
xchg
or
addr16
movsb
cmp
mov
adc
insl
aad
mov
add
test
push
inc
cld
test
lea
int
stos
pop
es
shll
or
popa
fsubl
popa
sarb
aas
repnz
pop
xor
cwtl
out
add
push
int
mov
pushf
cmp
sbb
add
cmpsb
movsb
dec
std
les
das
and
pop
mov
sub
lcall
jb
sarl
leave
cli
or
test
in
or
test
or
stos
sub
inc
pop
mov
dec
mov
ret
faddp
cmp
insl
sbbb
insl
pop
out
movsl
dec
jne
aaa
cmp
lods
in
pop
sbb
or
fwait
dec
sbb
dec
inc
dec
scas
cltd
out
add
repz
push
fidivrl
movl
loop
and
inc
sub
mov
push
pop
out
xchg
out
insl
xchg
ret
xchg
mov
jg
sbb
mov
push
jb
int
lret
or
xchg
clc
jb
fiaddl
fimuls
orb
cmp
push
or
sahf
insb
dec
push
dec
jae
adc
inc
xor
lahf
lea
push
adc
mov
shll
cmc
pop
xchg
sahf
aaa
dec
dec
ret
adcb
fimull
enter
pop
add
adcl
out
insb
adc
out
loope
push
jg
enter
jo
mov
je
and
nop
or
and
mov
adc
adc
sahf
add
and
pusha
mov
ret
insl
mov
xor
call
inc
and
loope
xchg
pop
pop
cmp
mov
jnp
mov
divb
aad
insb
push
mov
sbb
ljmp
arpl
push
and
mov
mov
xor
sub
pop
mov
sub
fsubrs
pop
pop
mov
sub
and
add
adc
lods
lret
mov
ret
ror
add
add
in
mov
mov
movsb
lods
fs
stos
mov
jecxz
out
repnz
out
shll
daa
sbb
sub
lds
mov
cmp
orb
adc
mov
fisubrs
mov
in
nop
fsts
add
bound
jge
xorb
inc
loopne
xor
imulb
lahf
or
push
cmp
je
jns
call
testb
sbb
repnz
leave
sbb
or
xchg
add
sub
nop
out
rorb
std
jle
or
xchg
sahf
addr16
mov
movzbl
xor
push
clc
or
leave
jbe
or
dec
fs
into
loope
in
ljmp
ljmp
sbbl
pop
dec
icebp
jmp
fsubrl
sub
cmp
push
xchg
dec
inc
inc
inc
adc
jg
imul
icebp
call
arpl
test
aas
or
pop
aam
clc
scas
pushf
aaa
and
dec
rcl
xchg
or
or
orb
lods
ja
ret
popl
add
inc
and
mov
mov
push
dec
push
mov
in
insl
mov
imul
inc
sarl
pop
ljmp
jp
inc
sub
jle
jmp
mov
sub
nop
dec
outsb
std
jmp
sbb
jnp
jae
scas
cmp
pusha
sub
insl
pushf
sub
dec
rclb
xchg
call
dec
xchg
popa
shl
decb
imul
inc
dec
pop
mov
adc
popf
cmc
stc
shll
pushf
rep
pop
rolb
mov
pop
mov
xlat
enter
jle
adc
int3
shl
sub
sbb
nop
jno
testl
jnp
sbb
sarb
jmp
fiaddl
filds
sarl
stos
xor
push
ftst
mov
pushf
or
pop
push
cmpsl
jmp
test
fidivrs
pop
iret
insl
subb
mov
xor
mov
ljmp
outsb
movsb
les
out
sbb
fistl
ret
cmp
mov
in
pop
mov
ljmp
push
push
dec
inc
mov
xchg
std
mov
daa
out
and
cmp
mov
inc
cmp
mov
mov
xor
and
xchg
js
mov
into
jl
jbe
mulb
mov
cmp
in
adc
dec
out
inc
aam
sub
popa
mov
fucomp
sbb
jp
lcall
inc
cmp
mov
test
mov
lds
lcall
fsubp
and
das
xor
add
xchg
cmp
xor
sti
cmpsl
adc
dec
cs
xchg
jmp
test
mov
mov
sbb
dec
add
and
mov
add
loope
add
icebp
cmp
xchg
fadds
add
jge
mov
bound
mov
mov
inc
stos
jl
test
cld
push
cmp
mov
das
fwait
mov
js
xchg
mov
lock
pop
mov
rclb
dec
movsl
pop
cwtl
xchg
fistps
pop
jle
dec
xchg
jmp
ret
out
or
rcrb
popw
leave
aaa
and
mov
movsl
inc
lret
rolb
ret
or
cwtl
lea
mov
cmp
int
shrl
or
cmpsl
add
scas
push
cmp
jmp
xor
pusha
add
ja
mov
roll
lret
jo
adc
repnz
jae
in
sbb
loop
cmpb
or
fcoms
dec
mov
pop
rcr
scas
adc
movsb
mov
mov
or
or
inc
insl
and
or
jns
stos
sti
mov
das
mov
into
movsl
push
inc
cmpsl
fildll
mov
std
leave
add
test
xor
pop
loop
incl
dec
mov
xchg
mov
dec
outsb
in
leave
add
sub
nop
js
stc
adc
pop
cmc
aas
or
mov
cmp
mov
ss
cltd
in
in
push
test
fiaddl
or
push
or
xlat
mov
mov
into
lret
out
in
lds
in
cmpsb
dec
ljmp
icebp
addr16
sbb
mov
filds
cmp
loopne
mov
fmull
adc
movsl
bound
movsb
jb
add
aam
aaa
adc
mov
bound
addl
int3
mov
cmp
lods
push
xchg
jnp
jnp
sbb
dec
inc
les
pop
ror
and
and
pop
xor
les
popf
pop
lcall
inc
adc
mov
jl
icebp
mov
enter
and
aam
dec
xor
pop
pusha
add
cmp
aad
lock
cmp
movsl
sbb
xchg
mov
push
movsl
mov
sahf
xchg
jg
push
jge
xor
sub
mov
je
push
insb
dec
cwtl
mov
loopne
ljmp
mov
fnstenv
aaa
roll
std
int3
cmp
imul
std
mov
and
cld
mov
clc
add
push
subl
cmpps
leave
into
add
pop
loopne
pop
lods
sar
lret
or
add
jle
sub
sbb
lret
lods
ljmp
sub
xor
mov
and
dec
lods
mov
cmp
mov
mov
sub
cmp
jg
out
add
out
roll
loopne
mov
lcall
cmpsl
jmp
js
mov
add
fists
adc
jg
stos
mov
jmp
dec
int3
and
fdiv
sbb
xlat
stos
outsl
cmp
pop
mov
movb
stc
xor
xor
repnz
imul
nop
or
in
push
fnsave
repz
xor
ja
mov
jmp
icebp
xor
popf
pop
sub
and
xchg
int3
jne
lret
sbbb
sub
cmc
cmpsb
xchg
mov
in
popa
xchg
loopne
inc
mov
stos
jb
and
mov
push
jmp
xchg
test
xchg
cmpsb
sbb
mov
sbb
ljmp
sbb
dec
out
cli
lods
sti
xlat
outsb
mov
mov
pop
push
call
stos
imul
add
icebp
dec
aas
lahf
gs
daa
loopne
les
pusha
xchg
mov
mov
push
fmuls
outsl
push
int
jno
les
xlat
dec
sbb
ds
xorl
xorb
adc
in
lods
inc
adc
sahf
add
mov
xchg
ja
fsubl
xlat
scas
push
popa
pop
loope
lret
js
daa
mov
fwait
cmp
mov
dec
jmp
push
rclb
sub
mov
in
div
lods
imul
fs
sub
sarl
icebp
divb
add
std
mov
ja
repz
pop
sbb
dec
and
mov
pop
xor
xlat
dec
fstpt
mov
nop
ret
in
aaa
inc
xchg
add
sub
in
addr16
shrb
popf
xor
in
inc
xlat
ud0
xchg
inc
mov
aad
imul
xchg
loopne
sbb
mov
add
ds
add
adc
add
sub
lret
jo
jle
call
lods
and
mov
jge
adc
push
enter
jmp
cmc
inc
jg
xchg
mov
insl
fdivp
mov
pushf
push
frstor
cmpsl
push
repnz
xchg
jne
xor
lods
stc
js
sbb
push
aad
and
int
cmp
popf
jo
dec
loop
je
in
test
ficompl
shlb
sarl
sub
pop
cwtl
nop
out
mov
cmp
cs
andl
add
jns
lahf
xchg
fadds
xchg
dec
les
lods
popa
sub
aaa
lock
in
ficomps
cltd
jp
sahf
cmp
aam
hlt
jmp
stc
test
xor
xchg
jle
or
int3
jecxz
adc
movsl
xchg
insb
lahf
pop
jne
daa
loopne
or
mov
fidivs
xchg
cmc
popf
sti
ret
mov
xchg
into
daa
das
xchg
sub
out
mov
mov
jge
hlt
add
dec
adc
xlat
jb
adc
pop
pop
xchg
jg
sub
xchg
or
repz
push
push
and
nop
dec
adc
add
addr16
out
adc
push
leave
cmpsb
pop
dec
addr16
xor
fistpll
mov
xlat
and
xlat
mov
loopne
and
pop
pop
inc
stos
add
xchg
stc
jecxz
push
cmpsb
push
push
cmpsb
adc
pop
loop
mov
xchg
cmp
jmp
adcb
cmp
popa
stos
hlt
cli
add
js
pop
pop
push
fsts
inc
dec
mov
fsubp
jne
cmc
incb
repnz
icebp
mov
lds
push
and
aaa
in
add
push
xchg
shlb
xor
mov
and
pusha
ljmp
and
gs
dec
es
fisubrs
xchg
sub
lcall
lcall
pop
fwait
pop
das
pushl
mov
lahf
clc
in
jae
xor
shlb
adc
lds
imul
arpl
pop
lcall
shl
inc
jno
or
mov
or
cmp
jecxz
mov
mov
in
ds
add
adc
mov
je
popf
pushf
jl
lock
push
testb
xchg
dec
in
gs
add
adc
sbb
test
sarl
push
dec
repnz
rolb
adc
xor
insl
lods
cltd
dec
iret
imul
and
push
mov
fildl
push
mov
iret
in
cld
xlat
das
sbb
popf
std
sbb
fwait
cmp
push
repnz
mov
mov
nop
xor
mov
in
jo
pop
jg
jl
fs
loope
je
jg
mov
or
test
lahf
cmpsb
rcr
jno
adc
imul
dec
dec
dec
mov
decb
jmp
roll
mov
roll
xchg
ljmp
hlt
lahf
pop
inc
adc
enter
in
sti
jp
lret
div
test
nop
and
test
loopne
dec
push
decl
push
sbb
test
sahf
gs
cmp
pushf
sbb
inc
sub
inc
mov
pushf
addl
in
mov
xor
adc
stos
std
in
cs
dec
lcall
jmp
inc
ss
pop
insl
mov
xchg
shl
icebp
cmp
jo
mov
sub
xchg
out
xchg
or
jae
xchg
jne
or
bnd
jg
call
xchg
add
sub
push
adc
push
je
daa
xchg
lcall
imul
pushf
popf
dec
xchg
inc
sti
sub
push
lcall
jnp
jnp
jbe
int
ljmp
pop
or
cmpsl
xor
dec
hlt
lea
ret
add
xchg
pop
jno
xchg
call
fwait
inc
mov
ss
lods
clc
xchg
inc
ror
ja
mov
popf
es
lret
mov
scas
iret
out
sub
aam
push
dec
fidivrs
mov
mov
or
push
js
shr
popf
inc
cmp
push
adc
lret
pop
out
mov
mov
lcall
int3
mov
adc
repnz
out
je
push
out
push
add
cwtl
stc
xlat
fwait
nop
cmp
pushl
mov
call
movsl
into
or
add
lret
sbb
pop
xchg
inc
mov
fs
loop
mov
cmp
lods
lcall
repz
and
sub
xchg
dec
or
lret
mov
stc
mov
lret
aam
icebp
lds
lcall
push
icebp
jns
pushl
jb
fists
push
pop
ja
insl
dec
or
inc
adc
lcall
faddl
jle
mov
add
inc
sbb
loop
mov
lret
insl
lods
outsl
enter
pop
dec
mov
xor
jp
sub
sub
inc
jbe
imul
in
inc
lret
cmp
or
dec
sbb
jae
mov
inc
sub
pop
cwtl
cmp
into
push
push
clc
jbe
es
into
push
push
mov
mov
test
fnsave
aaa
pop
and
out
or
xchg
test
test
loopne
jb
leave
mov
iret
pop
stos
shl
std
cmp
data16
in
sub
dec
fsubs
sub
sbb
mov
sub
inc
and
jge
xor
movsl
dec
das
movsl
mov
push
imul
push
imul
mov
fnsave
xchg
xchg
xchg
pop
or
cmpsb
idivl
push
scas
sti
jo
ds
lock
jo
leave
pop
sahf
bound
sbb
or
sbb
loop
aam
aad
and
xorl
scas
pop
lcall
add
leave
mov
cmp
and
adc
xchg
lcall
popf
jge
lock
daa
inc
xchg
js
mov
xor
fisubrl
push
lahf
xchg
sub
jecxz
adc
lds
jge
jne
mov
scas
test
test
xchg
ret
jmp
lock
sti
aaa
dec
iret
mov
mov
dec
add
insb
cmp
sub
adc
inc
and
and
pop
popa
ljmp
xorb
lods
jb
or
pop
out
xchg
cwtl
jae
push
lea
mov
dec
pop
orl
cmp
or
gs
scas
jbe
rcrb
adcl
shr
ss
fbld
testb
fs
xor
out
jle
sahf
jge
outsl
test
jl
sbb
and
in
xor
add
sahf
add
push
inc
stc
pop
mov
cmc
sbb
adc
mov
addr16
xchg
sub
out
in
add
inc
mov
inc
dec
fsub
popf
lea
popf
xchg
pop
es
popf
xchg
lret
test
mov
shrb
scas
xor
movsb
xorb
dec
hlt
push
xchg
repz
pop
rcll
inc
jnp
aam
aad
imull
mov
fstpl
loop
lods
dec
lahf
push
sbb
jle
mov
adc
in
lds
and
jns
ss
push
sbb
or
stos
dec
cmp
fldenv
mov
inc
mov
loopne
add
sub
aaa
mov
mov
jbe
out
rcrb
leave
xchg
mov
ss
and
shrb
mov
and
push
incb
mov
sti
mov
gs
mov
ja
insl
sahf
iret
popa
clc
into
leave
mov
jl
sbb
jmp
jmp
jge
mov
mov
stos
fsubs
std
sub
mov
mov
jmp
fsubrp
pop
mov
adc
fidivs
notb
subl
addr16
mov
xor
mov
mov
dec
sbb
int
add
movsl
stc
loope
mov
loope
sub
in
rclb
cmp
aam
cwtl
dec
add
daa
loopne
lcall
add
mov
es
ja
out
int
cmpsl
xor
jmp
shll
test
mov
pop
scas
imul
cmp
mov
insb
daa
mov
test
enter
insl
int3
mov
or
xor
test
adc
aaa
fwait
bound
xchg
lcall
stc
movsb
sub
add
nop
cmp
test
test
orl
push
adc
xor
lsl
in
lahf
jmp
pop
dec
in
ret
std
dec
jo
mov
repz
je
pop
and
cmp
test
movsb
adcb
adc
jge
adc
insl
add
test
ret
pop
dec
jb
mov
nop
clc
cmp
popa
lods
xchg
pop
mov
dec
adc
sbb
jp
sbb
xchg
ror
adc
cmp
inc
jmp
insb
jo
pop
in
imul
ss
lret
lret
je
test
pop
in
or
sbb
insl
adc
cmp
fsubs
out
sub
cmp
cmc
adc
out
and
xchg
imul
cmp
mov
push
insb
pop
rcrb
push
mov
loopne
push
aad
dec
and
ljmp
les
fldenv
pop
lds
pop
mov
orb
call
repnz
inc
xchg
loop
mov
jnp
xor
inc
xchg
add
lcall
or
push
pop
mov
loopnew
test
ja
rcr
clc
xor
stc
arpl
je
or
ret
jmp
and
inc
adc
std
xchg
mov
mov
add
cs
xor
out
push
push
movsl
push
xchg
adc
push
xchg
mov
push
int3
sub
push
dec
in
jg
mov
add
leave
pop
jnp
add
pop
adc
mov
xor
out
and
sbb
cltd
test
adc
push
mov
ret
push
push
jnp
mov
mov
xchg
adc
pop
inc
mov
enter
adc
pop
mov
imul
jg
std
cmp
mov
sbb
inc
jecxz
mov
fucompp
sarl
fimull
push
dec
mov
or
mov
add
je
ljmp
fmul
pop
cmp
push
iret
test
cwtl
jecxz
leave
xor
mov
pop
arpl
jmp
xchg
sbb
lcall
sub
into
out
jg
add
and
lret
subl
mov
jae
shrl
lods
fimull
or
scas
decb
dec
inc
pop
pusha
sub
cmp
das
inc
cmpsb
in
rcrb
mov
jmp
std
sub
add
cmpl
push
cmpl
std
scas
adc
adcl
int
push
or
push
int
push
mov
clc
cmp
dec
pop
jns
and
xor
fsubrs
add
rcl
aam
adc
xchg
mov
jmp
dec
and
jle
popf
jno
das
ret
lret
repnz
dec
push
push
mov
sbb
add
inc
mov
cmp
inc
addl
ds
test
popf
popa
int
nop
data16
fcomi
aam
xchg
loop
fsubrl
xchg
mov
and
jns
jnp
pop
xchg
and
jbe
aaa
add
popa
sub
fidivrs
mov
push
add
inc
repnz
sub
xchg
stos
add
sbb
pop
out
int
and
and
and
fnstcw
cmc
jae
dec
in
add
stos
mov
out
into
test
sub
sub
sbb
pop
ret
fbstp
fwait
or
mov
pushf
loopne
clc
insb
bound
push
fnstcw
cld
sub
out
mov
mov
mov
jp
dec
mov
jg
inc
mov
cmp
stos
push
adc
cmp
rol
inc
push
stos
and
aam
call
and
std
scas
push
adc
mov
push
icebp
inc
cmc
loope
lds
jp
cwtl
push
in
add
mov
movsb
shl
shrb
mov
je
push
add
cmpb
xchg
jbe
loopne
shll
fcompl
loopne
fwait
add
and
repz
mov
mov
movsb
xchg
pusha
sbbl
cli
pusha
or
imul
test
cmp
jge
cmp
inc
and
ja
aaa
push
jp
inc
mov
fs
sbb
in
in
jp
xchg
jb
sti
mov
mov
cmc
aaa
add
repnz
fistps
pop
adc
fwait
push
xchg
stos
xor
aad
inc
jno
jle
shll
and
xchg
or
push
ret
push
repz
sbb
lahf
jne
stc
hlt
inc
dec
test
movsl
sbb
push
ljmp
sub
cli
or
rolb
popa
cld
push
ret
ret
push
nop
dec
orl
daa
fiaddl
popa
sub
loope
lret
sbb
xlat
jnp
popf
pop
mov
ret
or
pop
lret
int
inc
lds
xchg
inc
ljmp
rclb
jp
fsub
xor
xor
clc
popl
inc
add
pop
push
add
and
ja
movsl
test
jbe
mov
ret
add
xor
and
out
mov
mov
loope
pop
mov
sbb
or
shrb
popf
scas
or
fiaddl
mov
add
repnz
push
movsl
xchg
sbb
aam
sub
inc
xor
xor
push
popa
popf
inc
mov
sarb
fcmove
inc
pop
pop
data16
sbb
push
pop
je
xchg
cmp
push
mull
imul
into
xchg
jmp
in
movsb
imull
sahf
push
mov
mov
test
add
repz
adc
mov
mov
gs
add
xchg
jecxz
dec
test
mov
faddl
stos
lods
fwait
and
push
fstpt
pushf
mov
inc
lret
loope
mov
xor
rcr
inc
lahf
mov
mov
les
sti
jmp
mov
mov
mov
xlat
je
sub
push
sti
or
dec
inc
stos
jnp
fmull
cmpsl
jecxz
xor
bound
in
int
insb
sbb
js
out
and
push
in
stos
mov
cli
and
call
fmuls
mov
cmp
mov
sbb
mov
inc
inc
scas
cmc
insb
mul
jge
pushf
int3
and
or
aam
mov
arpl
hlt
push
fs
and
xchg
les
cli
aas
scas
mov
iret
mull
dec
add
inc
mov
loope
subb
pop
inc
pop
in
mov
out
push
stc
lock
adc
inc
dec
subb
mov
negb
cli
push
xlat
jp
or
testb
movsl
cmp
in
imul
mov
arpl
pop
in
call
push
gs
sbb
mov
fiaddl
push
inc
sahf
in
push
mov
lods
push
ret
cli
push
in
lea
jns
push
pusha
int
sub
test
mov
xchg
jge
mov
jne
xor
or
pushf
jmp
jmp
jle
mov
pop
dec
loop
lock
adc
or
pop
jno
fstpl
xchg
and
test
push
mov
cltd
nop
adc
push
rcl
std
subb
jns
push
xchg
jo
jbe
inc
inc
add
add
mov
js
xor
mov
push
jae
inc
roll
jle
dec
pop
movnti
imul
sub
sbb
sbb
or
cmpsb
cmpsl
ljmp
mov
mov
and
mov
fstp
xchg
pop
dec
xorl
jns
pop
mov
incb
push
out
mov
dec
sti
pushf
mov
ja
jns
mov
fcompl
loop
fildll
pop
sahf
sub
in
inc
mov
mov
add
xchg
repnz
dec
and
popf
push
mov
sbb
in
adc
pop
mov
stc
cli
xchg
out
ja
fbstp
push
pushf
mov
int
cli
push
into
jne
rolb
daa
or
dec
loope
jg
add
daa
mov
aam
addl
cmpsb
sbbl
dec
jbe
mulb
ret
nopl
mov
and
out
nop
xchg
pushf
cld
push
pop
enter
dec
add
mull
pop
addr16
out
mov
sbb
dec
cs
lock
dec
fmul
mov
lods
cmc
pop
xor
xlat
out
jo
daa
mov
or
stos
pop
mov
jo
jl
jmp
inc
sub
aad
xchg
lock
call
test
mov
jmp
lret
add
and
push
out
clc
mov
lock
pusha
dec
mov
out
xchg
xchg
push
mov
mov
cmp
xlat
lds
add
or
ret
sti
sbb
sbb
cmpb
aaa
cmpsl
push
inc
les
or
sahf
repnz
out
push
popa
pop
push
push
cmp
sub
inc
ds
sub
mov
inc
inc
ret
pop
or
adcl
add
in
xor
out
int3
fldl2t
or
into
adc
std
test
jbe
dec
mov
popa
mov
dec
jmp
loop
pop
pop
and
pop
mov
cmpsl
repz
xlat
inc
xchg
sbb
pop
sbb
mov
inc
xor
or
mov
shll
testl
fsubrl
dec
in
lds
repnz
lock
xor
mov
lret
mov
adc
outsb
outsb
push
loopne
mulb
incb
sbbl
loope
les
or
cmpb
add
lret
mov
xor
call
dec
ja
repnz
call
movsl
outsb
movsb
cld
aad
cmp
mov
or
mov
xor
jmp
mov
and
es
jg
cli
scas
inc
mov
mov
int
cmp
jbe
and
mov
jno
fsts
push
jge
sub
push
jnp
pop
inc
je
inc
outsb
neg
jle
pop
push
movsb
xchg
cmp
jno
jge
je
dec
xchg
mov
mov
inc
shll
movsb
sarl
pop
mov
mov
out
int3
imul
imul
ss
fnstcw
dec
cmpl
test
sub
adc
mov
push
adc
daa
shl
push
lods
cltd
jne
mov
loop
or
icebp
andl
or
addl
mov
push
sub
lret
int
ds
cmc
cmp
shlb
mov
add
dec
stos
aas
xlat
pusha
adc
js
fmull
jae
mov
push
jg
inc
out
pop
and
pop
test
jnp
sbb
adc
cmc
cmp
scas
in
or
or
mov
in
adc
arpl
insl
les
hlt
xor
aad
data16
orb
jnp
fs
or
cwtl
sahf
shl
cmpl
sub
sti
sti
mov
push
mov
fcom
jno
insb
cld
jbe
mov
xchg
dec
fldt
notb
mov
mov
mov
or
xchg
or
shll
mov
je
pushf
sub
inc
push
adc
pop
push
test
ret
es
lcall
and
xchg
sub
mov
test
popa
xor
mov
mov
xchg
adc
test
sub
push
xor
repz
jns
mov
lret
cmc
dec
xor
ss
jo
in
scas
sub
add
loopne
dec
jg
jmp
cmp
loopne
add
xor
mov
mov
xor
dec
sbb
mov
addb
lret
mov
lock
cmc
mov
mov
inc
pop
js
push
dec
popa
inc
filds
popf
mov
xlat
fisttpl
jb
sub
je
pop
std
inc
jns
xor
mov
arpl
fwait
hlt
xchg
xchg
movsl
inc
jnp
rcr
jne
adc
les
sahf
push
sub
adc
mov
xchg
addr16
stc
mov
pop
stc
div
mov
jp
insl
jle
cwtl
jae
dec
loopne
push
inc
push
jge
mov
xchg
movsl
outsl
aas
es
add
hlt
lods
roll
dec
outsl
fists
inc
cld
dec
iret
sbb
pop
push
in
repnz
sub
shr
push
sbb
out
hlt
repz
add
mov
popf
ljmp
or
mov
ja
mov
ret
nop
call
jo
cmp
xchg
inc
popf
hlt
movsb
lock
fdivs
xchg
push
cmpsl
mov
mov
sbb
ljmp
out
mov
andb
inc
dec
pop
sub
xchg
fildl
mov
mov
dec
sbb
or
or
into
inc
pop
or
fstl
pushf
negb
das
std
dec
out
incl
test
je
mov
lock
lods
xchg
mov
lahf
lock
imul
cs
test
repz
adc
arpl
ljmp
jl
inc
sbb
sub
ret
les
outsl
iret
int
jecxz
popa
cmp
push
mov
stos
mov
sahf
fisttpll
push
sub
mov
dec
mov
sub
mov
js
pushf
cmpsl
loop
cmpsb
mov
out
out
push
sbb
xchg
mov
cmp
pop
fst
into
int3
icebp
sub
push
jne
push
xor
gs
or
xor
insb
jmp
jmp
jl
sub
stos
jne
inc
add
in
addr16
call
sub
sbb
sarl
popa
cmpsb
or
push
repz
sbb
aaa
push
test
sti
add
xchg
push
cmp
sti
adc
or
xor
mov
pop
inc
inc
jmp
lods
pusha
dec
cli
add
jae
add
scas
or
sbb
hlt
jg
pushf
push
repz
pop
mov
ret
repnz
push
rcrl
jg
xor
cmp
adc
xchg
mov
mov
movsl
dec
mov
push
pop
loopne
push
pop
call
fldcw
and
pop
insb
mov
sbb
jle
cltd
cmpsl
jnp
je
push
loope
into
and
aad
mov
fsubrs
scas
pop
ds
sub
push
jns
aam
das
cltd
sbb
mov
inc
push
outsb
movsb
clc
dec
mov
and
cmp
ficomps
sbb
loope
cld
fiadds
fcompl
cmp
addr16
pushf
pop
adc
adc
mov
dec
push
rorb
jae
add
daa
test
pusha
stos
mov
adc
psrld
popf
arpl
and
and
mov
shrb
mov
xor
jl
sbb
pop
or
inc
lods
stc
cwtl
out
call
or
sub
sti
cmpsl
and
jecxz
mov
out
pop
sub
loope
push
lods
and
fildl
xchg
xchg
insl
push
inc
push
sub
xor
jb
sti
xchg
out
sarb
in
and
jae
sahf
ret
aam
and
imul
mov
lea
jmp
xchg
inc
aaa
cmp
add
aad
lahf
mov
jle
cmp
cmpsl
lods
add
mov
inc
mov
pop
mov
cmp
add
into
ret
daa
jge
jo
mov
rorl
push
mov
out
push
xchg
dec
test
out
push
cmp
add
jl
cmpsb
or
dec
cmpsb
xchg
xor
std
mov
sbb
push
and
cld
push
pop
movsb
icebp
pop
inc
les
pop
pop
mov
scas
notl
push
shll
add
push
pop
sbb
in
mov
hlt
iret
jnp
adc
pop
mov
mov
leave
cmpsl
fimuls
aas
xor
fnstenv
cmp
shrl
dec
mov
pop
and
das
xor
sbb
sbb
in
mov
test
or
push
cmpb
jbe
sub
jg
mov
and
fsubs
cli
into
arpl
das
cwtl
xchg
leave
shlb
mov
sti
push
ret
xor
arpl
loop
jge
mov
mov
jno
shll
inc
fists
jg
lcall
call
mov
sahf
lcall
movsb
xchg
sahf
lock
leave
fsub
push
adc
inc
call
lds
sbb
mov
sahf
jne
dec
inc
in
aam
sbb
inc
xor
sbb
inc
adc
mov
xor
mov
sub
push
leave
std
in
mov
in
jle
sbb
mov
mov
or
add
into
insl
adc
mov
adc
fs
insl
test
mov
lea
fsubrl
adc
les
jp
cli
pop
push
imul
mov
fisubrl
sbb
enter
xor
mov
xor
shl
pop
repnz
jae
jecxz
clc
mov
mov
inc
push
out
lret
add
arpl
inc
cmpsb
or
popa
mov
sub
sahf
mov
push
icebp
outsb
lock
inc
insl
xchg
mov
add
jns
push
xchg
ret
xchg
insl
pop
rorb
dec
fstp
lea
dec
fldenv
xor
int3
push
repz
sbb
dec
ret
cmp
sub
sbb
sub
cwtl
divl
stos
add
pop
sbb
xchg
fsub
and
stc
dec
fbld
sub
scas
gs
sti
sub
xor
jns
and
sti
xor
dec
inc
popf
aad
fwait
inc
push
lea
push
adc
mov
cli
inc
idivl
aam
or
cmpsl
push
repz
iret
loope
in
jle
xchg
push
jle
fstpt
sbb
push
sub
addr16
mov
adc
mov
sbb
adc
and
lds
int
or
push
dec
lret
scas
dec
mov
shlb
jo
sarb
and
test
or
mov
in
movsb
cmpsb
mov
pop
push
movsb
pop
subl
scas
xor
sub
mov
sub
int3
sbb
and
rclb
les
decl
mov
ljmp
out
cs
mov
adc
jecxz
outsl
test
out
cli
test
ss
inc
mul
xchg
sbb
push
shl
out
fadds
lahf
xchg
int
xor
mov
outsl
data16
scas
enter
xor
jnp
add
adc
int3
iret
xchg
lret
mov
pop
mov
loop
enter
xor
jg
add
or
data16
pop
outsb
outsl
movsl
nop
mov
out
mov
fidivl
xor
out
mov
pusha
inc
xor
mov
push
loop
inc
pop
jno
xor
cld
clc
clc
mov
leave
push
push
pushf
out
mulb
mov
inc
mov
test
mov
incb
hlt
test
adc
cmp
and
add
es
subl
inc
das
ja
stos
es
iret
pop
or
xor
add
les
add
mov
xchg
mov
stos
mov
lcall
test
sbb
push
pop
xor
sub
add
sahf
es
pop
xchg
pop
sub
inc
mov
fstps
ds
int3
incl
clc
mull
test
push
out
loope
mov
dec
push
sbb
ljmp
clc
iret
clc
mov
je
enter
jge
pushf
mov
xor
cmp
mov
ds
pushf
mov
flds
adc
jo
cli
mov
pushf
jle
jno
out
test
call
aas
or
xchg
and
pop
insl
stos
pop
nop
mov
std
and
test
lea
or
sarl
mov
imul
in
mov
stc
ljmp
cld
xor
xchg
fwait
add
pop
imul
pushf
add
fwait
ljmp
add
mov
pop
out
mov
aas
jno
push
ss
cmpl
daa
inc
inc
jecxz
arpl
jl
cmp
jns
mov
addb
and
jne
int
cltd
xchg
mov
xor
lock
sub
fs
movl
sbb
mov
mov
lahf
fldt
inc
mov
fs
mov
and
inc
mov
outsb
or
scas
xor
pop
xor
push
mov
int3
pop
std
and
mov
int
enter
lods
ss
push
mov
getsec
inc
call
xchg
cli
sahf
pop
hlt
mov
mov
and
jno
imul
ret
mov
addr16
js
sbb
daa
inc
push
icebp
or
cli
mov
push
cmp
xor
push
xchg
dec
jb
and
imul
add
or
and
sub
sarl
cmc
push
or
and
push
enter
push
dec
add
cwtl
loope
push
and
pop
mov
loope
or
cmpsl
fwait
push
repz
sub
stc
jne
mov
mov
roll
jl
cmp
out
jnp
adc
repz
test
fadds
jmp
cmpsl
push
je
mull
mov
aaa
clc
outsl
iret
in
sbb
push
movsb
pusha
aad
jmp
cmpsl
dec
pop
adc
mov
mov
push
xor
mov
pushf
lcall
into
das
push
push
inc
xor
lret
add
fdivl
and
aaa
and
repnz
sbb
cwtl
jmp
jne
pop
call
cmp
and
xchg
std
push
pop
call
sub
pop
jmp
push
outsl
clc
aad
inc
movsl
ja
adc
and
lock
mov
push
pop
cmp
movsl
jae
aas
sub
in
cwtl
xchg
sbb
je
das
fcoms
lret
fisttpll
loope
out
std
mov
push
and
cmpsl
sub
dec
test
mov
fidivl
xor
pop
or
shrl
dec
xchg
jns
dec
dec
or
add
daa
jp
mov
dec
orl
sbb
dec
pop
xor
lods
push
mov
add
adc
and
jns
repnz
sahf
pop
mov
mov
push
imul
jge
inc
lods
push
pop
pop
jle
sbb
mov
daa
and
xchg
mov
mov
std
sub
xlat
movsl
mov
adc
pop
in
add
inc
mov
popf
sub
mov
push
mov
pop
mov
adc
jl
sub
add
inc
insb
xchg
add
mov
fists
add
loopne
and
pop
sbb
mov
sub
mov
and
shrl
xor
xor
ja
add
movsl
or
loop
sub
dec
xchg
xchg
cmpsl
or
rorl
xchg
cmpsl
inc
mov
xor
mov
popa
inc
push
jge
repnz
mov
imul
bound
inc
push
clc
aaa
fists
mov
fstl
pop
mov
cmp
and
or
adc
mov
dec
sbb
adc
stc
and
mov
dec
mov
test
fsubl
and
push
or
xor
pop
push
mov
repnz
jns
jl
retw
je
or
xchg
fistps
inc
movsb
ja
jp
out
call
xchg
push
ljmp
xchg
jge
fstl
pop
and
pop
cmc
test
dec
jl
int3
jo
xor
push
push
mov
adc
cmp
add
xor
xchg
cmpsb
jae
jb
jae
iret
addr16
add
lods
shlb
dec
dec
cltd
or
dec
mov
sub
les
mov
or
sti
cltd
pop
sub
lock
ret
loopne
cmp
sub
inc
hlt
ja
pop
enter
xchg
mov
xor
adc
clc
lret
lret
test
sub
sti
test
jmp
inc
fistpll
sbb
adc
xor
inc
push
lret
pop
mov
add
popf
jl
aam
addl
mov
jb
dec
xchg
sbb
out
outsl
call
jp
movsb
dec
cmpsl
sbb
mov
jmp
inc
xor
sbb
lds
fsubrl
push
test
fdivl
adc
cmp
cmpsl
adc
cli
insl
jno
inc
mov
gs
call
cmp
sub
push
mov
mov
in
cmpsb
push
xchg
nop
adc
sbb
out
cmpsb
call
popf
cmc
jle
xchg
xor
xor
xchg
lret
test
cmp
fwait
jo
fistl
scas
pop
jne
or
pop
in
xchg
dec
out
mov
mov
sbb
gs
lock
shrl
dec
pop
push
jne
and
pop
xchg
lods
mov
push
loop
notl
mov
das
sbb
push
scas
xchg
out
aam
enter
icebp
sub
cmp
push
add
sbb
fistps
pop
loopne
shl
in
jo
cmpsl
fstps
popl
mov
dec
dec
loope
aas
dec
push
sbb
mov
scas
rcll
scas
insl
iret
push
or
imul
jnp
mov
gs
in
adc
test
sbb
fprem
pop
xor
cmp
push
sub
jne
mov
jp
rcrl
popa
inc
aaa
mov
add
out
dec
xor
sar
js
popf
push
mov
and
fsubs
test
dec
push
inc
subb
hlt
mov
mov
stc
scas
icebp
inc
push
ret
daa
int3
aas
pop
fbstp
mov
adc
sahf
inc
cmpsl
inc
fstl
jb
mov
mov
test
mov
fildl
rcrl
inc
pop
aaa
call
hlt
cmpsl
push
jg
mov
clc
sub
and
outsl
movsl
mov
not
pop
and
pop
addr16
mov
mov
in
xchg
cmc
xchg
es
xor
jo
mov
push
out
sub
adc
testb
dec
test
mov
and
scas
sub
aas
xchg
lods
ss
fimull
jbe
arpl
sub
ja
fs
and
test
add
jle
mov
enter
lea
cwtl
in
mov
jno
jle
cs
pop
dec
out
inc
insb
inc
jno
aaa
stc
adc
sbb
sub
jg
sbb
and
shlb
mov
loope
add
stos
out
sbb
repz
and
fwait
and
ds
scas
inc
stos
jge
mov
bound
stc
test
pop
mov
dec
lret
xchg
rcrl
shlb
std
fsubrl
mov
cmpsb
dec
push
iret
jns
jge
ljmp
out
and
xor
leave
mov
movsbl
pop
scas
outsb
in
je
popf
std
cmp
sub
ret
cwtl
lock
jbe
sbb
and
shll
and
fisubs
add
flds
es
test
mov
lahf
pop
das
jb
push
fucom
push
jnp
aaa
xchg
mov
jne
jge
fcomps
or
add
cmp
dec
cmpsl
inc
js
inc
and
repz
imulb
or
add
add
xchg
es
pop
dec
jge
dec
roll
push
imulb
pextrw
mov
push
mov
xchg
popf
sbb
jbe
inc
out
jnp
dec
pusha
pusha
adc
jo
pop
pop
adc
inc
iret
mov
insb
mov
pop
xor
lret
mov
dec
jl
fnstsw
jb
fucomp
mov
out
sbb
dec
into
daa
jae
decl
adc
js
mulb
shlb
xchg
mov
cmpsb
in
lock
decb
ret
outsl
xchg
mov
cmp
popa
les
data16
loop
fwait
jb
int3
icebp
push
imul
xchg
inc
sbb
cmc
mov
mov
pop
cmp
cwtl
inc
sub
sub
fwait
and
rclb
sub
cmpsb
dec
cmp
push
dec
mov
ret
fnsave
mov
jp
dec
push
or
or
mov
xchg
push
sarl
sbb
sarb
mov
add
popa
insb
dec
hlt
mov
jecxz
movsl
push
je
dec
or
add
shr
dec
mov
add
lahf
lods
rclb
out
adc
mov
jg
mov
sbb
int
inc
testl
push
dec
js
sahf
cmp
xchg
jae
in
or
sbb
ljmp
xor
fs
outsl
sbb
les
inc
jnp
add
mov
out
icebp
mov
movsl
ret
adc
pop
jae
fwait
cwtl
dec
jb
mov
mov
dec
jbe
mov
inc
addr16
nop
int
xchg
cs
hlt
sub
push
xchg
stc
cmpsb
sbb
insb
ds
mov
xchg
mov
mov
xor
test
jnp
xor
fimull
xchg
divb
pop
xchg
xchg
xlat
mov
mov
push
xchg
hlt
andl
push
add
jo
sbb
sbb
add
icebp
and
out
pop
and
std
fcomps
cmp
repz
mov
sbb
dec
lcall
add
aas
sahf
test
jns
icebp
popf
fdivp
pop
or
mov
call
addl
or
jle
jl
sbb
fimuls
loopne
cmpsb
mov
loope
jmp
mov
and
inc
xchg
loopne
stc
movsb
ret
int
or
jge
stos
in
stc
cmp
pop
mov
cmp
repz
mov
js
mov
leave
les
mov
ljmp
lea
mov
mov
imul
mov
jbe
pop
jo
popf
mov
adc
clc
adc
je
shl
insl
mov
and
mov
mov
aas
pop
in
rcrb
daa
push
icebp
push
dec
outsb
dec
jb
fdivrl
mov
cli
add
out
repnz
aaa
dec
xchg
fnstenv
je
xor
insl
popa
push
mov
mov
shrb
popf
add
pushf
mulb
mov
adc
pop
cmp
ja
sub
cli
xor
push
cmpsl
dec
movsb
ds
fsubrs
das
mov
pop
in
insb
ss
lock
sarl
rcll
loop
in
test
fisubrs
les
in
loope
lcall
shll
das
xchg
push
daa
out
mov
ss
xchg
std
int3
arpl
sub
sub
dec
sub
mov
mov
cmp
xchg
lcall
xor
cld
pop
sub
jo
inc
mov
lret
dec
push
pushf
jae
mov
push
ret
dec
in
icebp
and
sti
mov
loop
pusha
shr
sub
insl
pushf
call
jnp
and
iret
subb
popf
or
inc
paddb
push
ret
jg
mov
push
iret
pop
mov
in
push
mov
in
inc
lret
pop
mov
xchg
or
repnz
mov
fimuls
mov
jge
xlat
cmp
dec
and
inc
inc
mov
xchg
pop
test
mov
inc
xchg
pop
xchg
xor
hlt
les
lret
dec
outsl
push
outsl
cmpl
add
ret
cmp
adc
xchg
stc
adc
clc
ja
xor
cli
adc
dec
xchg
notb
sbbl
jl
dec
push
inc
lahf
aad
xchg
push
mov
adc
cmp
dec
roll
mov
shrb
xchg
push
repnz
and
jno
jp
xchg
adc
or
shr
aaa
mov
or
and
nop
fwait
in
pop
sbbl
cmp
leave
ljmp
pop
test
dec
push
and
arpl
popf
fildl
sbb
xchg
add
aam
adc
sbb
pop
sbb
mov
sbbb
out
fnop
cli
xlat
inc
in
loopne
sbb
arpl
into
test
test
pop
sub
aad
scas
jae
sub
pop
dec
sbb
pop
ror
add
out
in
push
aam
jge
shl
mov
mov
mov
lods
sub
fdivrs
hlt
pop
hlt
jg
insb
push
and
imul
movd
mov
nop
push
jo
mov
dec
and
lahf
js
repz
mov
repz
xor
push
mov
iret
cmp
jns
sbb
shrl
lahf
mov
mov
mov
shlb
addr16
clts
ret
inc
in
loop
lret
cmp
xchg
xchg
dec
ljmp
popf
xchg
jns
jo
fdivrs
aaa
or
sub
fidivs
mov
and
int
adc
mov
inc
cmp
jmp
push
cs
sbb
test
inc
inc
mov
cwtl
cmpb
push
xchg
fildll
or
mov
pop
pop
lock
sbb
fcoms
add
sbb
pop
xlat
jle
xor
out
ret
cmp
pop
sbb
pushl
lods
mov
or
jmp
jg
nop
inc
mov
fdivrs
push
bnd
stos
ljmp
inc
lea
and
push
dec
xor
cli
popf
mov
xchg
mov
pop
cmpsb
push
aad
lahf
inc
jmp
mov
fldcw
add
sbb
jge
add
cs
sbb
stos
xlat
inc
pop
outsb
pusha
jg
movsl
adc
imul
cmp
fsubrs
stc
pop
icebp
ret
adc
mov
std
aam
jne
add
hlt
std
adc
mov
subb
add
js
call
inc
sub
xor
or
add
bnd
fnstcw
orl
ljmp
into
loope
cld
mov
pop
cmpl
fbld
cmp
push
inc
popf
jo
mov
inc
mov
loop
out
repz
jnp
jns
jnp
cltd
cltd
cmp
out
mov
mov
ss
dec
cmp
fmuls
pop
loop
or
dec
jae
xchg
mov
and
jbe
rcll
jle
adc
mov
dec
jge
shrl
shll
mov
insb
or
fcomip
js
sub
add
jb
and
jle
pop
adc
arpl
scas
adc
test
mov
jge
in
mov
pop
aas
sub
push
subl
mov
xor
inc
mov
mov
lea
out
cmpsl
cmp
jae
mov
adc
push
fisttpl
mov
sbb
jb
xor
daa
lds
int
inc
shll
push
in
mov
lods
sub
and
repz
jne
fstpl
jp
in
lcall
int
push
pop
divl
mov
into
loop
pop
cmc
xchg
jb
xorl
int
ds
outsl
repz
cmpsb
mov
in
fcomps
loopne
mov
fildll
fistl
ud1
inc
aam
sub
ljmp
iret
push
cmp
add
call
adcb
outsb
test
in
push
loopne
rolb
or
sarb
ds
push
in
mov
mov
lret
push
and
leave
in
sub
add
lret
repnz
call
push
jb
fisttpll
in
push
mov
repnz
jbe
aaa
adc
xchg
mov
xor
cmp
pusha
test
test
negb
dec
xchg
pop
mov
filds
jbe
jg
flds
push
cmpsb
cli
pop
push
pop
mov
movsb
sub
sub
push
insl
xor
cmp
aam
fimuls
push
jmp
mov
adc
mov
inc
xor
mov
pop
xchg
cmp
pop
scas
ljmp
push
mov
mov
xchg
push
jmp
xchg
push
in
mov
pop
jg
in
es
out
adc
xor
movsb
ss
ret
dec
in
cltd
xchg
mov
cs
sub
sub
sub
sub
cli
sbb
mov
pop
call
and
push
cltd
or
popf
arpl
xchg
adc
es
sar
sbb
rcrb
scas
popa
lret
pop
aam
xchg
pop
sbb
fadds
xchg
lcall
mov
pusha
in
mov
mov
push
aad
outsl
scas
movups
cmp
push
outsb
dec
inc
sbb
mov
shll
pop
sarl
sub
repz
loop
add
jecxz
mov
mov
adc
push
loop
test
test
fbstp
je
mov
mov
jle
and
xor
int3
idivb
daa
jg
push
and
ja
cmpsl
cmp
inc
popa
push
pop
outsb
dec
addr16
sub
sub
imull
popa
in
inc
adc
ret
pusha
cmp
push
cmp
std
sbb
mov
dec
out
arpl
ret
clc
and
arpl
aad
in
aas
arpl
bound
push
or
mov
nop
or
cmp
pop
insl
iret
popa
std
dec
popa
mov
cli
mov
xchg
jne
fmull
es
push
push
sbbb
pop
jae
push
sub
sub
cltd
nop
xor
sbb
fcoms
cmp
ret
enter
lods
sbb
pop
dec
insb
insb
out
shlb
add
add
sub
adc
mov
test
pop
cld
in
aas
loop
ret
mov
arpl
mov
xlat
daa
jbe
xchg
ret
pop
in
or
and
insl
and
cmp
dec
popl
aad
push
push
push
push
dec
dec
stc
xor
outsb
inc
imul
adc
inc
lock
outsl
jmp
js
sub
push
hlt
out
sbb
stc
repz
sahf
cmp
clc
stos
sub
xor
mov
dec
adc
xchg
xchg
mov
push
in
in
imulb
sub
stos
dec
rcrl
pushf
or
xchg
test
rorb
cmp
aas
fstl
popa
lods
push
mov
in
sbb
aas
lods
sub
or
add
adc
push
push
mov
lods
pop
and
sti
mov
movsl
fwait
int3
lds
pop
xchg
dec
sbb
xchg
pop
fadd
xor
iret
push
adc
jnp
xor
loope
iret
gs
lmsw
adcl
shl
cmpb
aaa
cmp
test
inc
in
or
lods
std
mov
dec
in
scas
jnp
push
sbb
cmc
js
jp
inc
or
arpl
pop
orb
adc
push
dec
inc
rdtsc
push
sub
stc
out
cmp
pop
push
lods
icebp
jge
cli
adcb
jo
in
mov
push
std
add
subl
mov
and
inc
mov
sub
sbb
jns
jle
jo
icebp
inc
push
add
cltd
fildll
adc
ja
or
enter
in
fmuls
aaa
jg
rcll
mov
daa
sti
ret
sub
mov
mov
stos
mov
ja
xchg
add
jnp
mov
in
idivb
lcall
sarb
or
pop
xchg
scas
test
dec
mov
insl
outsl
sbb
pop
bnd
cmp
outsl
pop
daa
push
xchg
out
cmpsl
popa
add
loope
add
mov
push
mov
aas
dec
xchg
enter
fsubs
out
cmp
das
mov
aaa
lahf
cld
imul
cmp
xchg
mov
inc
popf
adc
add
loop
call
iret
in
xchg
xchg
sub
shlb
mov
sbb
in
shlb
test
mov
mov
inc
and
enter
mov
push
ficompl
inc
adc
lahf
les
out
arpl
push
std
push
ds
sub
std
mov
aaa
in
inc
mov
push
mov
mov
fwait
push
sub
popa
or
je
jo
sbb
xor
cs
cs
sub
lea
js
es
mov
icebp
mov
inc
ja
dec
jle
icebp
fisubrl
hlt
mov
push
aaa
jmp
mov
adc
dec
and
outsl
in
add
cmpsb
xor
fldl
aaa
nop
sbb
sbb
jl
add
lods
push
and
lea
shll
mov
shlb
add
jbe
test
jmp
inc
lea
icebp
push
popf
insb
orb
pusha
dec
or
adc
xchg
inc
insb
call
dec
cmp
push
mov
sbb
cmp
push
push
sbb
push
adc
sub
cld
adc
das
insb
cmpsb
mov
test
fsts
jmp
cmp
xchg
test
mov
pop
fdivp
cld
addr16
xor
enter
dec
cmp
push
sub
outsb
lahf
popf
push
xchg
or
iret
cltd
loopne
jge
inc
push
negb
xchg
popf
cmp
sub
mov
inc
das
push
xor
cli
aas
add
jno
aad
stos
or
push
add
dec
jecxz
add
ja
mov
mov
pop
mov
inc
mov
sub
fstpl
inc
cmp
mov
hlt
mov
cmp
repz
aas
jmp
cli
dec
jp
push
negb
shll
ss
pop
cmp
pop
jae
pusha
ja
les
sub
lock
imul
mov
jb
xchg
xor
stc
xchg
jnp
ss
inc
sub
pop
data16
in
lret
cmpb
jne
mov
call
jmp
sub
xor
mov
cld
cmp
push
aaa
or
xor
xor
pop
mov
cltd
inc
fcoms
fwait
test
icebp
xchg
mull
adc
pop
xchg
cmpsb
out
ds
loopne
jnp
enter
int3
out
cmp
lahf
jp
enter
cs
scas
inc
or
lret
les
shll
adc
cld
hlt
xchg
enter
mov
xorb
ljmp
daa
jmp
int
test
daa
mov
outsb
xchg
dec
in
fwait
test
push
cwtl
lcall
mulb
cmpsl
mov
repnz
dec
inc
mull
jo
sbb
pop
arpl
pop
lds
and
mov
scas
sbb
mov
add
mov
inc
jge
mov
inc
sarl
push
dec
mov
mov
mov
enter
jp
pop
popf
jns
cmp
mov
mov
negl
push
movsl
jge
lahf
jg
sub
jecxz
jge
add
mov
jmp
push
out
pop
push
gs
in
ss
call
jno
xchg
lcall
dec
mov
xchg
sarl
out
cltd
mov
cmp
rorl
cmp
add
pop
xchg
jno
jecxz
insl
xor
cs
in
orl
out
ret
pop
mov
andl
lods
sbb
aad
loopne
sbb
nop
add
jecxz
pop
cmp
sub
cltd
sbb
cwtl
cmp
fisubl
or
test
push
mov
iret
pop
dec
and
push
sub
or
xchg
fwait
mov
jb
adc
sbb
imul
jbe
loope
mov
mov
pop
jb
push
lret
xchg
stc
xor
pusha
jmp
inc
pop
mov
arpl
pop
mov
or
push
cli
ljmp
push
cli
cmpsb
test
sub
cmp
or
xchg
jmp
pop
cmpsl
mov
xchg
cs
mov
shrb
push
mov
fdiv
push
mov
mov
aad
cmp
mov
pop
fyl2xp1
mov
mov
inc
pop
jbe
push
sbb
pop
pop
pop
call
aad
inc
repnz
adc
jno
movsb
add
xor
lcall
mov
sbb
xchg
outsb
ret
and
sub
movsl
cld
rcrb
imul
daa
inc
jb
vaddps
mov
cli
push
in
or
out
mov
in
xchg
mov
jg
popa
imul
shrb
dec
test
sbb
gs
jle
ds
add
jecxz
outsb
rorl
pop
xor
sbb
gs
outsl
ret
repz
push
xchg
sub
pushf
insb
je
xchg
repz
jle
mov
add
mov
out
out
test
ljmp
test
cmp
jle
pop
cmp
jb
cli
stos
lock
cmp
js
ret
sbb
aad
cmc
mov
pop
icebp
shlb
mov
xor
xchg
mov
icebp
jno
pop
stc
bound
jg
fsubrp
test
cmpsb
stos
nop
out
sbb
jl
test
jne
dec
hlt
and
data16
fdivrl
push
add
out
int3
bound
jmp
lret
out
push
nop
xchg
outsb
cli
repnz
addr16
xorl
inc
test
and
add
popf
cmpb
pushf
adc
and
call
shrb
mov
mov
push
mov
or
mov
adc
popf
repz
lods
fdivr
pop
jge
pop
xor
inc
sbb
repz
loop
cmc
mov
in
jge
jno
aad
repz
cs
sbb
inc
or
jecxz
xor
out
push
mov
faddl
arpl
xor
xchg
and
enter
push
pop
cmp
stos
and
dec
fldenv
xchg
adc
cli
fld
clc
pop
popa
or
push
pop
add
in
mov
testl
and
sub
dec
xchg
jge
loopne
mov
xor
xchg
pop
jmp
pop
cs
mov
pushf
imul
push
cmp
test
add
mov
nop
push
movswl
fcmovbe
sub
lds
jne
pop
sbb
push
push
stc
loopne
popa
jle
and
jbe
jmp
adc
lea
pusha
xchg
aad
into
es
or
adc
lods
xchg
mov
ret
js
out
mov
and
or
mov
sbb
xor
repz
mov
and
push
adc
sub
mov
xchg
insb
add
cmp
or
fisttpl
daa
in
orb
add
enter
mov
std
ss
scas
test
xor
lcall
cwtl
inc
repz
testb
mov
dec
jbe
sub
aad
push
pop
testb
inc
lahf
arpl
jnp
out
mov
mov
and
and
jmp
and
hlt
ficoms
pop
push
sti
repnz
hlt
dec
adc
sarl
dec
dec
dec
nop
idivb
sbbb
xor
sbb
pop
xchg
insb
xchg
movb
push
scas
aad
pop
les
push
push
jmp
dec
loopne
hlt
lods
jne
and
ss
adcb
sbb
mov
jbe
xorb
adc
in
es
js
lea
scas
fbld
mov
data16
subl
sub
mov
enter
pop
xor
out
mov
rorl
loope
xorl
and
enter
pop
stos
add
push
pop
stc
imul
mov
jle
dec
xor
sbb
sbb
cli
jge
jbe
sbb
int3
xor
adc
clc
add
fbstp
sbb
aas
cmp
sub
push
outsb
mov
iret
leave
out
push
daa
pop
sbb
inc
push
stos
repnz
inc
push
pop
mov
je
add
sub
outsl
sub
call
aas
xor
sbb
xchg
scas
xor
cmpsl
sub
mov
sbb
ss
mov
cmp
adc
xor
imul
cwtl
iret
mov
std
jb
lock
cmpb
fstps
sub
ret
aaa
pavgw
out
or
add
iret
pop
or
mov
pop
sbb
je
fistl
dec
mov
jo
sub
loopne
cmp
inc
pop
out
cwtl
fcoms
clc
loope
or
cmp
mov
rcr
pop
jge
ds
loop
and
into
mov
mov
stos
stc
outsl
test
jo
push
pop
cs
clc
daa
cmp
mov
fdivr
icebp
ss
inc
into
clc
dec
out
lret
push
and
sbb
jle
popf
adc
outsl
mov
and
xor
xchg
pop
fldenv
insb
dec
imul
mov
jae
in
fldl
dec
call
and
repz
pop
dec
add
cltd
das
sub
leave
cltd
sub
aad
mov
add
sbb
dec
lds
shlb
call
pop
aaa
and
xchg
test
std
aas
imull
in
xchg
xchg
mov
lods
xor
add
and
pop
imul
mov
out
pop
or
or
sub
inc
hlt
xor
je
fcompl
stos
push
pusha
sbb
cmp
fs
lret
jge
or
push
aam
mov
mov
xchg
mov
inc
xchg
cs
into
out
push
lahf
mov
jno
rolb
push
mov
insl
adc
and
dec
rorb
shll
cmp
test
inc
call
js
mov
stc
loop
idivl
adc
loopne
test
std
sub
xchg
adc
arpl
js
jp
sti
test
dec
cmpsb
dec
xor
xchg
iret
jne
pop
call
xchg
test
mov
xor
js
mov
adc
jns
push
mov
add
dec
mov
push
lds
mov
inc
dec
mov
mov
in
mov
cmpb
xchg
leave
daa
xchg
arpl
dec
xchg
and
mov
add
popf
inc
and
call
xor
nop
and
aas
fcoml
push
xchg
in
jne
mov
iret
pop
lods
lds
mov
loope
xchg
xchg
mov
and
xor
dec
lahf
mov
push
mov
pop
xor
ret
inc
mov
cs
sbb
xor
test
sti
push
scas
inc
xchg
sub
push
int3
out
fndisi(8087
inc
mov
in
inc
jno
pop
out
lea
mov
mov
lock
mov
sbb
pop
int
imul
dec
inc
cltd
movsb
jle
cs
jmp
js,pt
mov
or
popa
push
push
fimull
cs
enter
xor
fidivs
ss
mov
out
dec
add
jno
popf
in
outsl
movsl
inc
lods
lcall
fsubrl
movsb
pop
adc
int3
or
sbb
mov
and
sti
insb
ds
mov
inc
push
idivb
adc
insl
jecxz
cltd
lret
lods
and
xchg
and
and
sbb
mov
xor
divl
dec
test
cltd
test
clc
int3
pop
jne
and
ja
adc
xor
mov
dec
push
out
mov
adc
push
in
mov
js
pop
cmpsb
cmpsb
add
fldcw
insb
push
adc
jns
mov
and
int3
fcmovu
fmul
mov
insl
dec
and
rclb
pop
ja
scas
add
fldenv
leave
jbe
mov
stc
inc
xchg
in
jne
inc
jg
pusha
ror
push
shlb
daa
into
jl
cmpsl
hlt
arpl
pcmpeqw
dec
mov
jle
jg
test
push
fdivrl
movsl
scas
fs
cwtl
cmovno
out
adc
mov
js
cwtl
test
lcall
mov
mov
ss
outsb
push
pop
jle
sbb
mov
aad
jns
in
jge
mov
test
fildll
fwait
ret
pop
stos
mov
xor
cmp
insl
inc
push
arpl
test
adc
mov
mov
loope
cmp
sub
call
scas
scas
push
sub
cmp
push
scas
add
dec
mov
pusha
cltd
mov
cmp
pusha
and
scas
leave
clc
jl
mov
push
sub
xchg
or
out
addr16
jae
dec
xchg
lock
aam
pop
dec
jmp
pop
iret
imul
sub
inc
dec
pop
add
xchg
testb
xchg
jno
cmc
jg
es
pop
scas
sahf
adc
sbb
add
stos
iret
pop
out
pop
lds
xchg
sti
xor
jg
jo
ljmp
fnstenv
mov
push
loop
imul
mov
repnz
cmpsl
push
or
movsb
push
imul
mov
xchg
add
je
cld
xchg
mov
adc
mov
scas
mov
push
mov
sbb
and
in
xor
adc
hlt
je
dec
push
pop
inc
testb
daa
xchg
lret
lock
inc
and
jmp
pop
data16
popa
in
mov
fnstenv
dec
push
ret
lods
repz
and
xchg
lods
addr16
add
cmpl
add
sub
xor
movsl
lods
xchg
or
jg
jno
insb
jecxz
xchg
pop
in
pushf
push
lcall
xchg
movsl
ds
mov
iret
xchg
repnz
rol
xchg
test
inc
cmp
test
call
cmp
cmp
ljmp
loope
addl
adc
jbe
jnp
mov
push
cmpb
pop
push
cmpsl
xor
movsl
insl
adc
pop
mov
jno
adc
cltd
jbe
mov
movsl
xchg
icebp
dec
mov
int3
jns
pop
push
jo
cmp
std
loopne
inc
mov
fistl
push
add
cmpl
jmp
cmpsb
je
arpl
dec
pusha
cltd
or
jns
mov
xchg
push
mov
jno
in
ret
and
push
xor
insl
pusha
out
fsubs
jno
cmpsb
aad
xchg
mov
ret
cmpl
jle
shlb
cmc
ds
icebp
push
fidivs
repz
jmp
xchg
sub
ds
sbb
sbb
pop
pop
push
fstl
lret
jne
pushf
fs
mov
clc
lods
pusha
sti
fdivs
push
xor
daa
jp
jmp
dec
lods
scas
inc
lcall
nop
inc
popa
jbe
pop
lods
outsb
pop
and
mov
aas
and
sub
lods
repnz
mov
mov
ss
test
loope
sub
ret
test
std
in
sbb
or
jg
xchg
inc
sub
and
pop
clc
loopne
movsl
mov
or
iret
jp
xlat
push
call
test
and
or
in
jb
xchg
pop
popa
sbb
push
cmp
pop
mov
jnp
sub
inc
flds
lods
sbb
xor
sbb
mov
gs
jmp
xchg
data16
cwtl
rorl
fwait
jnp
dec
lahf
in
das
xchg
cwtl
jbe
jo
loop
ret
ficomps
adc
je
int3
lcall
daa
xlat
movsl
loopne
jno
loopne
in
and
cmp
dec
jae
mov
ja
shl
mov
mov
pop
cmpl
mov
std
stos
adc
cmpsb
add
adc
mov
andb
cmpsl
jle
imul
mov
xor
popa
mov
outsb
push
in
cmp
fnstcw
sub
sbb
cmc
xor
das
jnp
int3
jns
mov
aad
pop
push
lret
les
das
mov
push
sub
sahf
inc
movsb
movsb
in
cs
test
inc
movsl
sbb
sti
jnp
mov
mov
push
insl
cld
js
inc
stc
inc
outsb
call
ss
mov
push
repz
fdivr
dec
cmp
pop
out
and
aaa
jbe
insb
or
pop
or
enter
sub
mov
sub
add
hlt
addl
mov
loopne
mov
cwtl
outsl
lret
cwtl
push
xchg
sbb
je
lahf
push
or
fisubl
and
leave
loope
cs
ljmp
push
out
leave
jg
and
sbb
in
or
fildl
mov
test
cmovns
push
ljmp
or
flds
sub
aam
stos
mov
lock
dec
mov
pusha
jl
movsl
sbb
mov
test
jo
push
inc
jns
test
gs
cmp
adc
pop
mov
arpl
cs
cmp
lea
mov
dec
and
push
pushf
xchg
pop
jnp
sub
add
adc
rcl
add
dec
adc
and
xor
rorb
clts
mov
push
nop
mov
mov
adc
cltd
xchg
xchg
test
xchg
push
lcall
jns
repnz
test
out
negl
xor
pop
mov
xor
pop
adc
lods
lahf
hlt
sub
push
in
mov
cmp
notl
xchg
jne
data16
jmp
pop
adc
xor
push
insl
daa
dec
mov
aaa
in
sbb
psadbw
fistpll
adc
and
movsl
outsb
inc
or
leave
push
fdivrl
lret
aad
mov
mov
out
movsl
or
dec
jnp
cmp
daa
dec
xchg
cltd
xchg
xlat
sub
mov
loopne
ret
popf
mov
add
cmp
jg
lahf
faddl
pop
int
xchg
pop
icebp
incb
inc
jle
pop
lock
popf
clc
push
push
and
push
repnz
shl
mov
negb
dec
outsb
lds
loop
leave
inc
test
repnz
out
xor
mov
mov
jae
push
mov
loopne
mov
dec
imul
mov
stos
inc
sbb
push
leave
push
jge
xor
cs
or
movsl
xor
or
pop
scas
adc
inc
mov
and
lea
ret
lods
out
dec
or
outsb
in
dec
pop
or
js
jne
daa
jb
movsb
adc
scas
push
jno
push
mov
pop
mov
popf
push
rcrl
push
jnp
dec
lods
sets
divb
popa
cmp
dec
andb
adc
cmp
pop
mov
cwtl
and
jne
or
push
addb
or
jne
movsb
cwtl
insl
sbb
cs
pop
roll
adc
ret
rorl
movsl
popa
jecxz
push
stc
loope
popa
mov
int
lret
jecxz
ss
lahf
pop
test
fisubrl
iret
pop
pop
dec
inc
pop
aam
push
xchg
xlat
xor
add
and
ljmp
jno
repz
mov
or
pop
and
push
fs
mov
push
push
cld
pop
push
test
inc
insl
test
inc
sub
jmp
xchg
dec
cli
push
sti
mov
jp
mov
ss
pop
testb
repnz
mov
lds
sbb
mov
xchg
pop
pop
out
xor
cmpsb
call
ret
adc
xchg
pushl
arpl
cmp
sbb
pop
jmp
dec
sbb
inc
push
test
adc
lret
push
and
pop
enter
lret
sub
lds
cmp
lea
in
mov
cmp
mov
es
test
xchg
cli
pop
stc
loope
xchg
jno
cwtd
shl
ret
enter
mov
add
pusha
inc
xchg
imul
mov
in
jp
cwtl
das
in
add
hlt
sti
addb
xchg
int
ret
mov
or
pop
adcb
adc
xor
cld
std
jb
pop
stos
mov
imul
xor
push
into
xchg
mov
popa
popl
mov
leave
andb
mov
pusha
lods
ret
xchg
pop
fsubr
adc
jge
sahf
mov
sti
mov
cmp
sub
jbe
jl
adc
cmp
sbb
cmp
jae
and
jb
into
movsb
es
inc
xchg
outsl
sub
out
cmpb
stc
test
xchg
in
movsb
xor
rcl
lods
xor
int3
jns
ja
push
jmp
std
dec
sub
test
sbb
cmc
sbb
insl
pop
pushf
fdivrs
ds
daa
loopne
xorb
or
arpl
out
xor
pushl
pushf
push
inc
mov
push
loope
fiadds
dec
sbb
stos
push
js
jnp
jne
and
or
pusha
xor
enter
jb
iret
adc
sub
lret
loop
mov
push
cmp
adc
inc
dec
pop
xchg
repnz
clc
insl
arpl
sarb
fistpl
xorps
fidivrs
std
or
fstpt
mov
stc
dec
xor
cmpsb
sbb
nop
scas
inc
or
mov
lods
mov
pusha
add
pop
shl
mov
sbb
lcall
jecxz
cmp
stos
jg
shl
cmpsb
clc
aad
fistl
outsb
les
jb
xchg
lcall
mov
sub
imul
iret
test
mov
imul
pop
xchg
repz
popa
xor
lret
inc
jne
inc
and
int3
pop
movsb
es
or
pushf
xchg
movsl
das
xchg
cmpl
popa
sahf
test
js
jge
and
jl
and
jae
pop
push
cmp
insb
loopne
dec
repz
lds
inc
jge
lcall
outsb
andl
mov
push
cmp
xor
and
or
hlt
adc
movsb
or
aas
mul
not
add
inc
push
jecxz
xchg
dec
sub
ljmp
pop
add
sub
data16
fdivl
lds
rorl
jbe
mov
dec
mov
imul
and
mov
stos
add
or
jle
mov
daa
paddsw
bound
dec
push
daa
sahf
jecxz
or
xor
mov
shrb
jl
fdivs
call
das
lds
mov
clc
inc
mov
cmp
sbb
das
xlat
fnstenv
mov
mov
pushf
push
mov
data16
jle
iret
mov
mov
test
subb
cmpsl
and
and
mov
lock
and
cmp
mov
data16
scas
cmp
xor
mov
clc
pop
das
mov
mov
add
adc
fsts
cmp
bound
sbb
in
fnstcw
mov
faddl
add
add
lret
jle
sbb
push
in
jnp
cld
imul
insl
push
les
lret
sub
mov
mov
scas
jb
addr16
push
stos
les
and
xchg
mov
xchg
mov
jl
or
std
jmp
out
aam
jp
push
dec
jns
cmp
cmp
cmp
cmpsl
jno
push
mov
pushf
or
stc
arpl
cli
insb
fcomps
outsl
sbb
cli
clc
mov
xchg
jge
loopne
sbb
cmp
out
notl
or
xchg
cmp
dec
gs
in
mov
mov
sbb
nop
xchg
push
sub
icebp
mov
pushf
data16
jae
ret
ror
dec
sub
lock
out
hlt
xchg
pushf
jecxz
loope
popf
xor
sub
dec
ret
jp
mov
pop
inc
imul
jg
bound
popa
scas
mov
push
lea
add
das
push
call
popf
jno
add
cltd
sbb
lret
gs
call
xchg
loop
cmp
daa
adc
and
pop
scas
pop
sub
test
inc
loope
addr16
add
cmpsl
les
add
dec
jmp
adc
imul
push
mov
sbb
aad
pop
aaa
mov
xchg
jge
cltd
out
sbb
stos
fyl2x
jbe
mov
test
adc
mov
f2xm1
aam
fldcw
clc
cmp
xchg
stos
lret
pop
stos
js
dec
xlat
xchg
in
add
shl
push
lret
loop
or
xchg
pop
adc
rcl
dec
div
inc
cmpsb
mov
fidivl
lret
inc
sarb
call
fcoms
negl
add
mov
lods
jmp
mov
in
adc
jnp
shlb
push
jg
mov
repz
mov
pop
and
int3
jnp
and
push
pop
test
push
lret
inc
mov
and
add
pop
push
inc
adc
fisttps
lret
xchg
jo
js
cld
cwtl
inc
and
add
test
sub
loopne
pop
stc
add
cwtl
inc
dec
xor
arpl
imul
imul
sub
and
and
mov
iret
cmp
ds
mov
xor
lds
addr16
loope
xchg
pop
js
std
cs
or
lea
ljmp
adc
scas
push
and
ret
mov
pop
xchg
int3
rcr
aas
mov
push
orl
dec
adc
add
push
push
in
add
leave
rorb
cmc
rcll
push
outsl
lock
lea
out
mov
sbb
adcl
xor
inc
scas
inc
mov
cli
pop
test
add
movsl
sti
xor
mov
arpl
mov
xor
mov
test
lods
mov
aam
and
or
ficoml
icebp
movsb
out
or
mov
push
popa
enter
out
movsl
cld
arpl
in
insb
sahf
sub
adc
stc
mov
pop
fdivrp
jbe
dec
cwtl
xchg
jp
out
xchg
xlat
scas
fsubp
sti
pop
sti
pushf
sbb
pop
push
cmp
shrb
test
jbe
pusha
outsl
lods
jbe
sahf
stos
fs
add
pusha
inc
xchg
sub
and
lock
or
xchg
inc
sub
sub
dec
das
jb
pop
insb
sbbb
jo
push
addb
sbb
xchg
xchg
sbb
mov
mov
add
shll
or
xchg
cmp
cmp
xchg
fistpl
mov
mov
imul
adc
ret
xor
cmp
mov
jno
fsubrl
outsl
cli
stc
add
sbb
insb
out
call
je
mov
adc
aad
adc
lods
sbb
push
out
pop
xorl
cmp
dec
cld
jl
xchg
xchg
sub
lahf
das
inc
icebp
lock
mov
in
dec
std
sahf
sbb
mov
cmp
clc
xchg
in
xor
movsb
push
inc
jns
xor
incb
push
xor
jno
sub
shrb
arpl
sbb
insb
push
lret
xlat
int
ret
cmc
add
jecxz
push
sbb
pop
mov
loopne
mov
out
push
cmp
xor
mov
ss
test
push
out
mov
test
sbb
lret
jbe
mov
mov
stos
dec
aaa
mov
movsb
mov
mov
adc
fwait
loopne
insl
out
lea
loope,pn
fimuls
xchg
xchg
or
add
nop
rcr
push
loopne
add
adc
in
lahf
xchg
sbb
cmp
aam
mov
les
stc
add
repz
and
jnp,pt
insl
out
in
push
popa
test
stc
repnz
es
jne
movsl
and
outsl
or
sub
icebp
mov
pop
dec
pop
sub
cmp
out
add
sub
mov
jg
dec
push
enter
test
shr
sbb
pop
mov
dec
loopne
mov
jae
loope
and
fs
jl
pop
lcall
repz
push
sbb
xchg
sbb
mov
ljmp
orl
cmp
jecxz
and
and
mov
addb
mov
popf
pop
sbb
test
enter
xlat
stos
ret
test
mov
adc
bnd
mov
dec
in
jnp
fadd
lret
cmp
in
push
lcall
roll
pop
loope
or
add
out
out
jae
ret
dec
out
fdivl
xor
lods
outsl
or
xor
xor
scas
js
lds
movsl
dec
mov
das
sbb
push
sbb
sub
out
ds
into
data16
ror
xchg
xchg
sbb
sub
inc
mov
ss
jge
push
xorb
and
or
call
jg
gs
int
and
mov
inc
aaa
cld
mov
scas
das
inc
pop
xor
popa
cmc
cli
cmp
mov
cwtl
push
adc
std
push
push
xchg
pop
or
xor
stos
lcall
fadd
loopne
xchg
test
mov
rcll
and
cld
lods
push
in
sahf
enter
inc
cld
popf
nop
int3
inc
push
ja
scas
push
xor
fiaddl
imul
fsubrl
in
jmp
mov
fwait
std
les
sbb
out
or
xchg
mov
adc
push
inc
push
xchg
or
enter
in
jno
fbstp
imul
leave
enter
dec
xchg
pusha
and
cmpsb
pop
sbb
lret
or
pop
sarl
and
lods
and
arpl
jp
sub
arpl
or
cmp
cltd
sti
or
rolb
cmp
les
mov
mov
mov
pop
nop
cmpsl
fldt
jmp
add
sahf
aam
in
imul
mov
add
aam
mov
dec
jecxz
add
sub
adc
test
in
shrb
es
sbb
adc
movsl
xchg
in
lods
jns
inc
scas
xchg
cli
enter
aam
orl
shll
push
jnp
ret
pusha
in
xor
call
xor
imul
scas
ficomps
push
pop
jbe
mov
inc
into
adc
inc
insl
cmp
scas
scas
dec
rcll
pop
mov
mov
stc
mov
lods
aaa
cmpsl
repnz
out
ds
sub
ds
mov
dec
xchg
idivb
clc
mov
mov
aad
adc
in
mov
sbb
xchg
dec
push
inc
pushf
lods
xor
cmp
mov
push
mov
fidivrs
loopne
sbb
dec
cmp
mov
cltd
xor
mov
dec
rol
stc
cwtl
sbb
sarl
call
jmp
and
sti
fwait
dec
gs
or
push
pop
mov
pop
xor
push
push
pop
aas
js
imul
out
jnp
mov
adc
je
adc
adc
jg
lahf
in
mov
and
add
arpl
adc
sub
lods
push
inc
jne
push
insl
push
les
das
pop
ja
jmp
leave
arpl
cwtl
cmp
mov
xor
cltd
loopne
pop
test
lcall
mov
test
mov
mov
lods
adc
mov
and
add
pop
mov
cmpsl
sbb
sbb
mov
xor
call
mov
clc
pop
dec
iret
inc
scas
mov
stos
aas
mov
mov
sub
jbe
cmp
xor
xor
cld
ret
stc
stos
adc
adc
cmp
into
in
mov
push
hlt
xchg
push
mov
push
inc
pop
mov
mov
xchg
fstps
inc
hlt
loop
stc
xor
fldt
mov
push
lret
add
cmp
cmp
push
ja
jbe
idivb
repz
ffreep
scas
mov
arpl
fbld
arpl
shl
mov
cmp
dec
pop
jl
das
sub
pop
je
or
pop
inc
lods
clc
jo
pop
and
mov
and
push
xlat
sbb
fcmovu
and
es
stc
test
sahf
mov
outsb
or
jno
popf
out
cs
orb
cwtl
xchg
test
ljmp
test
xchg
xor
push
cld
add
aad
jl
pop
adc
add
mov
dec
out
aaa
jno
les
dec
mov
push
pusha
ss
jmp
addr16
stc
or
out
sbbl
push
inc
xchg
fs
xchg
out
or
or
inc
cmpsl
in
test
mov
xlat
dec
leave
xor
sbb
push
ljmp
dec
push
pushf
movsb
in
into
ret
bound
cwtl
xchg
or
dec
cltd
xor
leave
or
test
fsubl
mov
pop
les
inc
mov
loop
cltd
mov
jl
ret
and
jno
dec
adc
sbb
aam
dec
mov
jno
daa
aad
xchg
push
cmp
or
ljmp
imul
pop
dec
dec
add
fsubrs
dec
mov
maxps
push
idivb
xor
jbe
aas
or
cmpsl
mov
inc
push
int3
fnstenv
or
out
mov
jae
mov
out
xor
xor
push
repz
dec
dec
in
sub
push
mov
or
xor
lret
scas
test
pop
jae
fsubs
leave
inc
lea
cwtl
jne
jecxz
mov
lock
repz
mov
mov
shlb
arpl
fsubl
in
lret
sbb
dec
mov
mul
lahf
daa
mov
ret
mov
jle
in
jbe
sti
dec
jl
bound
aaa
lea
add
jg
mov
aam
mov
lahf
mov
loope
aad
lds
lods
loop
jecxz
mulps
add
insb
push
mov
push
out
sub
mov
in
and
nop
or
out
sbb
insb
jae
push
xor
test
xor
mov
add
mov
dec
in
pop
lret
rorl
and
inc
mov
xchg
movsb
xchg
pop
or
pop
int
gs
inc
jo
shlb
push
out
icebp
add
out
movsl
out
insl
add
xchg
mov
and
inc
insl
les
mul
in
std
mov
push
dec
filds
fs
fisubrl
xchg
ss
jns,pn
out
sarb
jecxz
pop
pshufw
lds
popf
popf
into
loope
jge
jne
inc
pop
mov
ficoms
or
rolb
movsl
mov
icebp
xchg
push
cmp
sbb
fcoml
insl
ljmp
cmp
hlt
or
pop
out
in
je
add
jb
test
bound
mov
push
mov
enter
push
mov
jg
or
mov
cs
push
out
and
cli
mov
outsb
sub
mov
sbb
lock
xor
scas
leave
xor
repz
cmp
mov
inc
imul
pop
sahf
fcoml
test
test
test
ljmp
ds
iret
loop
test
lahf
gs
push
xor
jmp
xor
pop
jnp
pop
addr16
cmp
loopne
mov
xchg
mov
js
leave
lret
sbbl
add
sahf
aam
mov
or
inc
enter
xchg
js
ljmp
arpl
cmp
ss
xor
ds
xchg
cmp
jb
dec
clc
mov
les
testl
jmp
mov
xchg
push
lock
xchg
dec
insb
rorb
mov
add
adc
pop
rcll
inc
cmp
push
pop
mov
in
call
xor
mov
xchg
cmp
pusha
xchg
ret
neg
add
push
fs
mov
into
popf
mov
sbb
jnp
sarl
dec
shll
aaa
dec
shll
sbb
jle
push
adc
inc
jns
jmp
sar
mov
adc
repz
in
ja
adc
mov
pushl
clc
and
dec
cmp
pop
imul
mov
push
jae
push
scas
inc
sub
or
mov
stos
or
mov
addr16
iret
sub
cmp
iret
gs
xchg
dec
inc
cmp
xchg
add
js
cmp
and
aad
and
xchg
sbb
scas
xor
enter
push
movsl
xchg
stc
mull
repz
pop
mov
aad
ljmp
jg
nop
dec
sbb
jl
clc
cli
movl
icebp
xchg
push
jl
out
and
jnp
push
nop
bound
jnp
xchg
inc
mov
inc
stos
sub
es
or
arpl
push
mov
es
cmpsb
mov
push
lea
add
popa
push
imul
push
mov
test
add
aad
add
mov
adc
push
xor
mov
adc
fisubrs
sub
push
lea
sbb
icebp
in
dec
jmp
imul
and
js
jmp
std
fistpl
stc
sbb
dec
mov
js
orl
jmp
mov
cmp
call
aam
outsl
fsubs
ret
pushf
mov
hlt
pushf
mov
pop
shrl
mov
inc
inc
sub
mov
jl
inc
out
test
mov
mov
pop
lea
xchg
mov
fcmovbe
std
jo
fists
xor
out
daa
ja
fidivrl
cli
dec
fimull
inc
dec
dec
inc
push
mov
imul
int
push
adc
cmp
pop
sub
pop
mov
pop
add
call
ss
fistl
lcall
pop
xor
popa
mov
lock
dec
push
lea
das
stos
leave
sub
call
enter
mov
jnp
inc
push
mov
mov
repnz
jno
imul
add
sub
clc
jbe
mov
pop
xlat
adc
add
stc
sbb
sbb
mov
and
out
cmpsl
or
daa
sbbb
ret
ja
jnp
enter
push
mov
cmpsb
aad
outsl
pop
test
xor
out
hlt
movsl
xor
stc
inc
ror
push
jns
add
std
lret
and
pop
mov
xchg
loope
sahf
mov
fdivrp
xchg
sti
lahf
jl
filds
cmp
jge
iret
out
ffree
fidivl
and
outsl
andl
in
dec
adc
push
outsl
mov
adc
lcall
lcall
js
adc
mov
ja
stos
and
mov
push
cwtl
insb
aaa
aam
jle
sub
lods
aam
or
add
and
push
mov
dec
into
xchg
or
pop
fcmovnbe
ffree
cmp
out
std
movsb
jb
stos
xchg
scas
mov
mov
xorb
cmp
mov
xor
jge
fwait
rcrl
xchg
leave
or
sub
mov
push
in
add
ret
pop
cs
and
xor
imul
or
sbb
or
push
pop
imul
push
dec
add
jge
pop
roll
ret
ret
jmp
and
xlat
jmp
or
icebp
xor
add
enter
out
adc
gs
loopne
adcb
push
jo
out
scas
stc
cs
xchg
int3
cs
nop
out
pusha
cs
sbbl
pop
out
mov
loopne
sti
ss
pop
loopne
xchg
pop
out
pop
mov
add
stos
pop
push
stos
jns
je
rcrb
push
mov
cli
bound
ret
or
mov
addr16
push
daa
insl
pop
xchg
call
and
adc
add
sbbb
or
fdivr
mov
pop
aas
es
jne
xor
xor
negb
and
in
lock
mov
rol
pop
cmp
inc
lods
popa
int
mov
mov
lret
and
dec
shrb
sbb
xchg
shlb
xor
shl
jne
push
xchg
mov
pop
stc
xchg
clc
xchg
sub
cmp
data16
xchg
jae
jge
mov
orb
clc
out
out
scas
pop
test
notb
push
inc
dec
sub
xchg
lods
dec
outsb
xor
and
push
inc
dec
inc
mov
xchg
in
jno
ljmp
sub
adc
js
scas
ds
add
jecxz
xchg
lea
sub
mov
dec
stc
xor
movsl
jns
inc
popl
lods
xchg
movsl
lods
arpl
lahf
mov
test
lret
lahf
fcompl
popf
push
movsb
push
icebp
pop
imul
push
fstpl
mov
mov
ficoml
test
sbb
fstpt
mov
or
sbb
xchg
or
mov
es
cmp
jo
pop
sti
test
and
sarb
dec
aaa
enter
dec
dec
push
jp
jae
cltd
xlat
cmpsl
rcrb
mov
jbe
mov
rcl
popf
adc
mov
hlt
mov
mov
aas
or
mul
add
pushf
rorl
inc
sub
dec
scas
inc
sahf
sbb
add
das
dec
das
test
xor
add
adc
cmpsb
cmp
cmp
cmp
push
cmp
cmp
call
add
xchg
fidivl
sbb
incl
add
pusha
mov
aad
inc
std
mov
mov
mov
test
xor
lret
pop
mov
push
xor
dec
push
and
push
push
aam
rol
xchg
sub
inc
aaa
mov
dec
sub
mov
mov
cltd
repz
cmp
mov
sbb
int3
scas
add
mov
push
cmp
mov
mov
popa
mov
mov
test
jnp
xor
fndisi(8087
ja
stos
in
xor
inc
xchg
jmp
int3
xchg
movsb
add
jns
addr16
ret
stc
ss
sbb
fiaddl
es
pop
pusha
shl
fsubl
js
popf
or
ret
adc
push
arpl
xchg
sarl
sbb
fwait
jne
xlat
sbb
fs
ret
scas
pop
scas
addb
es
pop
jge
scas
pop
xor
dec
sbb
add
dec
outsl
mov
loop
ds
ret
jg
xor
push
cld
dec
fmul
xor
or
pop
mov
mov
or
sahf
das
adc
mov
sub
xor
gs
das
xchg
xchg
mov
in
mov
add
cmp
dec
xchg
jb
dec
pushf
pop
mov
test
out
out
sbb
jge
imul
xchg
orl
stos
jg
jns
lret
pop
addb
mov
stc
ss
cli
sub
cmp
setl
fisttpll
movb
xchg
stos
pop
rcl
out
cli
addr16
cmp
pop
adc
out
hlt
notb
test
fs
aad
add
mov
dec
pop
jl
mov
dec
xlat
jmp
jb
xchg
sti
or
test
adc
scas
adc
insl
insl
cmp
pushf
lret
adc
xchg
push
mov
jo
pop
mov
and
jns
jne
pusha
lcall
nop
cmc
mov
xor
pop
push
add
cvtdq2ps
mov
xchg
in
pmulhuw
pop
push
mov
addr16
sub
pop
xor
mov
jmp
xchg
daa
xor
xor
ret
push
cmp
aam
xchg
icebp
and
lds
cmp
push
lea
adc
aad
xchg
mov
call
xchg
mov
lds
imul
or
insl
imul
mov
in
or
scas
rol
rol
sbb
sbb
mov
ret
shrb
lahf
add
add
imulb
cmc
cs
pop
enter
cmp
cs
mov
xor
pop
push
cmp
iret
adc
pop
js
loope
outsb
jge
push
adc
mov
pop
jle
cld
cltd
jbe
mov
rolb
dec
jb
mov
jbe
js
mov
stos
outsl
xchg
cwtl
jae
sbb
repz
pop
fs
push
jp
arpl
fwait
in
int3
ud0
or
push
outsl
sarb
rcr
jns
and
pop
xchg
lods
pop
cmpsb
xchg
loop
cmpsl
sbb
push
sbb
xchg
nop
loope
dec
mov
fbstp
cmc
pop
pop
into
test
shlb
sahf
dec
es
adc
sahf
outsl
xchg
push
add
mov
imul
js
insb
call
sbb
cmc
mov
mov
xor
aaa
outsb
xor
sbbl
dec
lahf
pop
dec
fidivs
lahf
js
jecxz
xchg
call
adc
stos
aaa
push
jmp
push
inc
insb
cwtl
in
rol
xor
dec
push
fidivrl
stc
cs
mov
adc
scas
pop
dec
pop
xor
sub
bound
add
cmp
mov
loop
addb
mov
mulb
mov
imul
sbb
jae
push
inc
insb
push
and
lret
pop
cmp
mov
flds
cmp
in
insb
jns
xchg
sbb
out
inc
pop
or
int3
imul
sub
dec
mov
mov
mov
icebp
sub
adc
mov
add
adc
mov
mov
push
movsb
push
fwait
pop
jbe
es
push
fcompl
ret
mov
push
sub
sbb
jnp
dec
test
sub
rcr
mov
cwtl
mov
mov
outsb
xor
inc
lea
jne
adc
cmp
gs
inc
gs
jb
icebp
into
push
dec
bswap
pop
out
jmp
aad
and
cmpsl
shrw
std
xchg
push
xor
shrb
rcrb
shrl
ffreep
jbe
sbb
jle
fldenv
or
mov
pop
jge
bound
mov
and
outsl
xor
mov
scas
stc
and
lahf
ja
cltd
cmp
mov
lods
fcompl
clc
in
out
inc
outsb
mov
add
cmc
sub
add
push
dec
mov
imul
popf
jecxz
and
jecxz
int
scas
imul
mov
xor
adc
btsl
sub
push
ja
jl
int3
clc
or
adc
bswap
push
sarb
push
adc
icebp
mov
insl
bound
fs
add
pop
add
inc
gs
mov
bound
xor
lds
and
imul
jno
aas
mov
mov
and
aaa
cld
inc
fildll
and
adc
mov
leave
out
fcomi
mov
mov
gs
and
inc
jmp
std
mov
shl
enter
pusha
movb
inc
mov
das
inc
mov
je
jns
dec
mov
push
jecxz
push
loope
lahf
jb
int
or
rorb
and
jge
stos
mov
inc
test
je
mov
sahf
popf
mov
dec
jb
add
test
adc
adc
scas
jp
sub
inc
int3
and
lds
push
and
push
iret
scas
dec
mov
xlat
mov
jmp
inc
ja
xor
fwait
push
cmp
imul
out
mov
dec
xchg
sarl
lret
push
mov
fwait
lret
sbb
xor
aas
scas
fisttps
stos
scas
mov
fwait
mov
mov
xor
cld
test
mov
pushf
inc
pop
lods
out
ss
lret
mov
test
and
sub
je
std
add
test
lahf
cmpsb
sbb
movsb
add
and
adc
cwtl
lods
pop
jno
jb
sub
xor
pop
dec
xchg
and
pusha
ret
movsl
sub
or
or
iret
test
xor
decl
mov
jnp
add
movsb
scas
gs
pop
pop
pusha
xchg
xlat
dec
jo
sub
add
xor
xchg
push
leave
mov
sbb
jg
movsl
popa
cmpsb
xor
cltd
popf
jge
mov
sbb
int3
push
and
out
pop
pop
xchg
push
adc
xor
aaa
test
cmp
jecxz
lret
testb
in
jge
aad
xchg
psrld
mov
ljmp
add
mov
pop
xor
jbe
pop
and
pop
xor
push
rolb
cs
mov
call
lds
ds
dec
test
mov
xor
lret
adc
in
gs
push
xchg
pop
outsl
gs
repnz
push
mov
mov
jb
sbb
test
fsubrl
dec
mov
lcall
daa
add
je
ja
arpl
xor
push
cmp
xor
popa
pop
popa
rcrl
adc
mov
cmpsl
xchg
test
cmpsl
shll
stc
sahf
insb
jno
and
and
test
stc
xlat
adc
imul
adc
or
lds
sub
push
fcmovb
scas
out
mov
imul
inc
add
mov
lret
inc
ds
mov
mov
add
cwtl
sub
mov
sub
in
xchg
push
sbb
fsubl
subb
jbe
xchg
mov
loop
push
in
push
and
inc
jo
lret
push
push
dec
push
push
push
stos
aad
mov
jbe
fcoml
xchg
mov
adcb
loopne
stos
popf
xor
mov
leave
je
xchg
jl
sub
mov
mov
iret
jb
mov
scas
push
xchg
cmp
adc
mov
pop
mov
mov
imul
lcall
stos
mov
sub
push
scas
jno
jmp
sahf
xchg
out
icebp
dec
jg
mov
push
cmp
add
push
leave
adc
push
out
mov
xchg
lds
pusha
inc
lods
in
push
mov
sub
add
bound
fldt
xchg
mov
push
jno
ret
insb
icebp
hlt
adc
push
out
or
daa
cmp
in
mov
and
push
and
mov
mov
divb
ffreep
stos
push
sbb
push
xor
push
into
les
cmp
es
pushf
and
repnz
icebp
lcall
loopne
push
leave
insb
push
xor
cmp
insl
imul
inc
in
scas
lods
jg
imul
dec
mov
fimuls
call
shrb
sub
mov
cmp
cmpsl
jle
xchg
sub
gs
jle
enter
mov
ja
sub
mov
mov
mov
shll
xchg
cmovne
push
sar
mov
shrl
orb
fldcw
in
imul
test
push
sub
insb
cmpsb
mov
mov
mov
jo
inc
jno
xor
xchg
sub
pop
push
shrl
sbb
rorl
mov
test
pusha
out
mov
and
clc
cltd
ds
notb
jno
arpl
xor
test
pop
lret
add
push
mov
lds
lret
pop
jnp
push
mov
es
pop
fldl
dec
in
jmp
sahf
fcoml
pop
adc
lds
hlt
push
and
mov
cmp
hlt
mov
xchg
xchg
inc
cld
mov
dec
and
aam
push
enter
mov
iret
nop
aam
push
cltd
sub
bnd
and
call
int3
xor
jo
test
ret
lcall
orb
pop
jge
push
xor
sub
fnstcw
daa
or
mov
jnp
or
push
fcmovb
cmp
rorb
lea
hlt
ret
sbb
outsb
mov
lock
je
push
or
loope
loopne
jo
mov
sub
jp
cmpsl
test
insb
mov
test
icebp
or
fldt
or
aaa
out
and
sbb
dec
sbb
iret
popa
loope
add
mov
dec
jns
frstor
push
jo
data16
out
lds
jl
sarl
add
or
pushf
mov
scas
sahf
add
mov
je
xchg
fisubl
lds
cmp
js
sarl
cmp
or
xor
test
lret
scas
xchg
jp
loope
xchg
jmp
or
mov
push
sub
cmc
rcrb
push
dec
sbb
lcall
cld
jb
lods
xor
in
ss
push
jmp
xchg
sub
xor
add
add
into
jge
push
mov
jmp
fs
mov
jg
mov
dec
imul
shrl
sub
jecxz
mov
mov
pop
pop
lret
icebp
insb
popa
xchg
pop
fidivs
int3
and
leave
aam
loopne
push
jne
ret
hlt
jns
push
jecxz
incb
cmpsb
stos
inc
setne
add
cmp
or
stc
cmc
and
test
lock
pushf
or
jo
mov
rorl
add
dec
xor
and
insl
inc
ret
dec
or
loop
pop
leave
bound
lcall
dec
jae
les
lret
dec
adc
test
mov
lret
loopne
out
add
ffree
into
xchg
cs
push
inc
add
ret
adc
mov
push
lea
std
jecxz
xor
add
adc
aam
out
outsl
sahf
lahf
jb
mov
insl
add
popf
jne
dec
in
add
or
sbb
dec
ds
sahf
dec
push
clc
adc
in
xchg
push
xor
loope
in
cs
lds
cmp
xchg
les
cmpsl
add
pop
scas
test
aam
dec
pop
push
xchg
sub
sub
loopne
test
lods
jecxz
jmp
sbb
push
pop
mov
sub
add
pop
xor
int
sti
sub
mov
ljmp
in
sbb
aaa
sub
add
mov
pop
lds
cwtl
sbb
jle
adc
push
scas
std
dec
inc
dec
xchg
gs
fwait
sbb
bnd
pop
mov
shrb
mov
inc
outsl
in
ds
es
ss
lret
addr16
or
repnz
and
into
sbb
cmp
pop
adc
add
das
out
clc
inc
xchg
sti
or
adc
mov
cmp
add
mov
push
cmp
or
inc
jno,pt
pop
leave
mov
imul
xor
sub
push
add
out
jecxz
in
loopne
cmp
stos
mov
hlt
sub
jl
sbb
into
pop
and
sub
in
jns
rcrl
jmp
fmuls
sub
and
mov
pusha
jg
adc
lret
dec
dec
mov
in
adc
lock
insb
sub
mov
daa
push
lcall
stc
lods
xorl
push
das
sti
xor
pop
insl
pop
adcl
dec
int
sbb
loop
add
cmp
mov
cs
xchg
rclb
pminub
stc
incb
imul
jle
fsubs
sub
jnp
push
pop
fsubrs
mov
mov
lea
and
mov
ret
jo
add
cltd
imul
xor
jo
add
and
loope
mov
mov
jae
stos
xchg
jmp
out
scas
repz
out
sub
inc
popf
daa
mov
push
mov
sbb
mov
pop
imul
mov
pop
jbe
jno
dec
xchg
fbstp
xlat
sub
xchg
clc
add
lods
xorb
fildll
lods
andb
aad
push
or
cs
xor
cld
mov
or
inc
jno
pushf
test
fiadds
fsubl
arpl
dec
fbstp
out
mov
loop
in
addr16
mov
push
mov
ljmp
jle
cmp
int3
mov
mov
mov
push
aad
ja
xorb
adc
lret
dec
jecxz
aas
lods
test
shlb
dec
mov
sbbl
ret
jle
xchg
push
jnp
nop
or
repnz
mov
sbb
xor
push
add
mov
rcrb
pop
jg
not
mov
loope
sti
push
imul
xchg
dec
and
movb
dec
mov
insb
xchg
cmp
xchg
mov
xchg
inc
cmpsl
stos
out
loope
imul
movsl
addb
or
xchg
fildl
sbb
adc
pop
dec
jbe
popf
lea
out
int3
or
cwtl
mov
or
add
popf
pop
es
shrl
call
push
or
sub
jae
mov
and
fdivs
mov
loop
mov
aaa
mov
fidivl
xchg
sbb
add
std
pop
push
ret
jo
mov
jp
jno
in
mov
int3
lods
stos
cmp
clc
movsl
lret
mull
leave
inc
or
mov
jg
dec
lock
inc
jle
or
jl
pop
add
cmp
sbb
inc
mov
adc
icebp
jbe
les
lcall
xor
out
cmp
xchg
or
dec
aam
jns
inc
xchg
mov
call
repz
in
inc
lcall
cmpsb
cld
sub
imul
jmp
lock
inc
iret
rcrb
mov
push
pop
pop
mov
loopne
cli
xlat
xor
xor
push
cmpsl
sbb
xor
mov
sbb
xorl
mov
sub
push
fldcw
mov
movb
movsl
sub
jle
bound
cli
mov
sub
out
ficomps
pop
cli
adc
idivb
adc
xor
rorb
in
xor
mov
call
stos
call
xor
repnz
pop
dec
movsb
aad
out
and
mov
mov
stos
pop
fcomps
in
and
test
out
cmp
ljmp
outsb
mov
jo
jne
xchg
cmp
mov
leave
sbbb
and
leave
addr16
loope
sbb
in
push
xchg
imul
pop
test
jns
jae
dec
pop
adc
sub
push
pop
push
repz
ret
test
insl
jge
xchg
cs
xlat
fildll
and
clc
popf
rcrl
jl,pn
ds
inc
push
cmp
int3
pop
mov
imul
enter
adc
inc
addr16
shlb
ret
pop
adc
loope
xor
hlt
pop
cmpsl
pushl
pushf
xchg
cwtl
and
daa
push
data16
ds
inc
pushf
outsb
mov
jecxz
or
les
dec
cld
in
leave
push
push
frstor
mov
or
xor
mov
iret
sbb
fisttpll
fldt
insb
test
shl
xor
test
cmp
add
std
movsb
sub
lahf
mov
cmp
mov
jecxz
jp
rorl
jecxz
jo
imul
sti
in
xchg
cmp
dec
mov
shlb
dec
pop
add
or
jl
jbe
mov
mov
push
int3
xchg
xor
fldt
jae
fstl
lret
and
test
cmp
jge
cmp
test
xor
dec
rorb
pop
or
jne
sti
jmp
out
addb
movsb
xchg
insb
mov
popa
mov
inc
xchg
imul
dec
rolb
mov
test
sub
xchg
mov
in
pushl
outsb
in
push
fsubr
mov
fdivrp
in
es
or
aaa
inc
pop
pop
sub
lret
jmp
pop
xchg
divl
lcall
testl
iret
cwtl
inc
imul
mov
notb
ljmp
or
sbb
lods
and
jmp
rcrb
imul
push
imul
loop
sub
adc
in
loope
pop
and
mov
ja
enter
int3
lret
dec
mov
mov
dec
out
ja
divl
mov
popa
ret
and
sbb
stc
or
mov
push
and
and
outsl
sub
hlt
xchg
jne
cmp
mov
cmpsb
loopne
ss
cmp
jb
jl
faddl
lahf
mov
jnp
jnp
xchg
rcrl
inc
scas
adc
ss
sub
in
push
or
inc
jecxz
cwtl
leave
push
rcr
mov
int3
and
xor
repz
add
mov
xchg
cmp
aas
mov
cli
sub
mov
ret
mov
add
jl
icebp
inc
dec
scas
mov
push
int
mov
lods
jns
rorb
insl
pop
mov
or
imul
adc
imul
and
fs
inc
fstpt
mov
push
or
pop
mov
mov
rorl
add
popf
insl
mov
cmpsb
out
inc
adc
mov
push
or
jge
jl
scas
gs
mov
cmp
std
push
cltd
pop
cmp
shl
out
xchg
into
xchg
xlat
clc
push
ja
inc
pop
popf
dec
mov
pop
cmpsl
lahf
daa
push
push
test
test
xchg
cli
ljmp
aad
imulb
shrl
dec
out
rcl
cwtl
xlat
inc
cld
jbe
and
push
xchg
push
pop
ljmp
adc
pop
inc
mov
xchg
or
das
push
out
dec
or
fs
loop
jp
mov
gs
mov
jno
jl
shr
popf
sti
jecxz
insb
add
ret
adc
popf
xor
add
sbbl
and
in
mov
rclb
mov
aam
jnp
cli
add
or
mov
push
js
xchg
stc
jae
mov
push
fs
mov
aas
xchg
ret
lods
push
sub
sub
mov
jecxz
jb
xchg
push
lock
inc
notl
ret
mov
mov
pop
enter
sub
cmpb
push
jmp
cwtl
xorl
call
gs
pop
sbb
jns
testb
add
jns
arpl
out
add
loope
loope
pop
sbb
in
push
scas
repz
ss
pusha
in
mov
lea
fwait
aaa
fidivrs
xchg
arpl
movsl
push
fwait
jb
js
loopne
data16
mov
and
dec
mov
lock
pop
pop
dec
enter
shl
sub
jmp
sahf
and
ja
push
mov
cs
adc
xor
loop
cltd
out
mov
je
jg
leave
ljmp
das
cmp
mov
mov
rclb
sub
and
mov
sub
add
xor
enter
call
push
aad
cld
call
repnz
repz
ret
jbe
pop
mov
test
sbb
cmp
pop
mov
and
sarl
scas
pop
int
in
push
fdivr
push
add
pop
cld
lods
stc
daa
scas
inc
gs
test
jb
sub
and
jle
insl
cmp
rcl
push
sub
sbb
xor
inc
pusha
adc
fwait
nop
fldt
push
mov
add
lcall
xchg
addb
xor
mov
pop
inc
xchg
sbb
sub
je
mov
fnstsw
pop
mov
insl
psllw
jmp
je
mov
add
inc
mov
data16
mov
int
popa
pop
lock
mov
sbb
mov
or
lods
imul
mov
mov
mov
cmp
cmpsb
pop
xorb
sbb
and
xchg
cmp
pop
pop
ljmp
push
pcmpgtd
mov
pop
cmpb
movsl
pop
xchg
pushf
into
cmp
sbb
loope
xchg
xchg
rolb
xchg
repz
loopne,pt
stos
add
divl
mov
sub
fldl
mov
frstor
adc
push
lret
and
cmp
adc
int
fsincos
push
mov
jle
dec
rorb
add
mov
xchg
mov
mov
arpl
femms
mov
pop
dec
xor
pop
jp
mov
mov
mov
push
inc
addl
jns
lret
imul
sbb
inc
pop
inc
into
jnp
dec
and
xor
ficompl
mov
syscall
lcall
sti
lea
and
mov
xchg
jo
cmp
sbb
mov
nop
cmpsb
sub
ljmp
pop
mov
shlb
sub
inc
imul
out
jecxz,pt
inc
lds
sahf
push
pop
lods
vpsubsb
insb
iret
in
aas
xchg
cwtl
pop
cmp
xor
cwtl
shlb
popf
fstps
adc
scas
jo
pop
pop
ficoml
hlt
fwait
dec
xor
insl
gs
jg
jae
mov
mov
or
in
scas
add
ja
pop
nop
jo
lahf
jae
rol
lods
enter
out
nop
push
cli
and
xchg
pop
or
imul
and
outsb
int
out
push
pushf
popa
nop
sub
imul
out
aam
mov
lods
push
mov
mov
fnstenv
ret
dec
inc
pop
adc
inc
or
stos
scas
mov
or
sbb
sub
ficompl
push
scas
sbb
stos
cmp
cmpsl
inc
lahf
mov
pop
xchg
ljmp
insl
repnz
sub
lods
inc
xor
push
scas
repz
das
gs
sbb
push
movsb
jmp
lcall
das
lcall
sub
aas
sbb
ret
lret
lret
int3
lds
pusha
mov
push
dec
mov
jmp
xchg
adc
mov
jo
sub
dec
ds
jmp
jge
mov
add
gs
adc
into
jbe
je
and
loopne
jns
enter
inc
mov
ror
out
push
xor
or
add
in
mov
mov
ret
stos
mov
into
mov
xor
into
js
test
aaa
sub
ds
jp
mov
mov
iret
popa
xchg
mov
xchg
mov
daa
loopne
js
test
mov
sbb
sub
loop
mov
sub
stos
arpl
mov
jmp
jle,pn
mov
mov
in
cmc
dec
push
lods
jnp
push
jle
je
js
xchg
sbb
fwait
xchg
xor
xor
jne
dec
sub
pop
repz
and
mov
out
outsb
imulb
push
inc
mov
shl
inc
jae
test
mul
fwait
inc
xchg
push
jbe
cmp
lock
flds
jns
dec
xor
pop
ret
loopne
jp
dec
data16
dec
inc
fs
aam
mov
dec
in
je
sub
pop
jmp
jmp
in
mov
inc
mov
xchg
xor
repnz
jne
pop
stos
sub
sbb
cmp
cmpsl
xchg
mov
sahf
mov
cmp
cmp
addr16
cmp
lock
pop
mov
xor
test
jmp
cltd
ud0
into
fsubrs
outsl
pop
mov
shll
or
xchg
push
mov
js
or
mov
lods
push
fisttps
daa
test
sub
sub
cs
icebp
mov
cmpsb
shl
cmp
cmpb
aaa
cmp
mov
lock
lcall
pop
xchg
mov
rcl
shrb
hlt
or
pop
adc
push
lods
out
inc
in
mov
dec
and
sahf
pop
lods
jae
fisubl
and
ret
roll
jns
loop
imul
ds
rorb
cltd
cs
mov
inc
jge
lods
push
addl
pop
mov
lods
jne
and
and
jno
push
dec
mov
shlb
jmp
mov
aad
rcll
adc
inc
dec
movsl
ldmxcsr
adc
sbb
loope
xchg
jns
nop
push
sub
sbb
outsl
aaa
xchg
sub
add
lock
jo
xor
sbb
xchg
jne
mov
push
divb
ja
mov
dec
or
or
lods
jmp
dec
imul
loop
mov
inc
adc
push
inc
pusha
arpl
adc
adc
cs
pushf
fdivrl
add
scas
outsb
hlt
leave
mov
mov
test
stos
stos
or
in
pusha
arpl
cmovae
out
les
clc
mov
sbb
and
orl
mov
out
mov
xlat
mov
mov
out
add
jecxz
enter
pop
push
inc
xchg
cld
mov
sbb
imul
div
subl
pop
sahf
hlt
aas
movsb
testb
push
mov
jnp
lods
pop
push
je
cltd
cmp
lock
jae
daa
das
enter
cmp
bound
and
add
sahf
lea
icebp
js
dec
or
jbe
popf
aad
dec
cltd
stos
sbb
out
mov
push
pop
iret
pop
xchg
fisubs
mov
dec
mov
or
push
cmp
sub
push
mov
sub
xchg
div
inc
in
inc
out
add
test
xchg
push
lret
xchg
rorb
loope
sahf
jge
mov
clc
cli
inc
lds
insb
nop
cld
adc
or
test
sub
inc
addl
scas
into
cmp
std
call
ljmp
pop
repnz
lret
int
jl
mov
frndint
fildll
mov
lods
dec
cli
enter
dec
adc
pop
or
mov
sub
lret
mov
mov
cs
popf
jp
cs
mov
lods
pop
jb
test
sub
lods
mov
std
cltd
psubq
cmp
xchg
adc
cli
pop
dec
xor
pop
cmp
fiadds
mov
push
insl
aas
push
ja
fs
cmp
xchg
cs
loope
in
sbb
adc
pop
inc
in
pop
push
add
xchg
in
imul
in
stos
add
loopne
js
insl
inc
movsl
and
cmp
push
out
fwait
push
pop
pop
xchg
pop
insl
sbb
outsb
shlb
cmc
mov
xor
jo
mov
push
mov
filds
add
test
mov
push
lret
inc
dec
mov
and
call
in
cwtl
and
cmpsl
movsb
jbe
dec
pop
pushf
inc
cwtl
mov
mov
les
ss
popa
ret
inc
shlb
jmp
add
addr16
nop/reserved
dec
out
repz
mov
scas
sub
out
xchg
cmp
xchg
pop
mov
sbb
gs
jle
xchg
pop
rol
cmp
sub
cli
in
push
div
imul
mov
xchg
mov
push
dec
subb
xchg
fildll
repz
shll
push
test
or
mov
mov
outsl
pop
int
push
clc
cwtl
push
js
or
jl
orl
push
and
xor
cmp
lcall
shrl
negb
mov
ret
xchg
in
cld
lods
lar
add
addb
fstl
mov
inc
lahf
or
leave
cmp
js
addr16
jge
sbb
fildll
mov
in
jg
ljmp
loopne
fs
andl
lea
xor
pop
jmp
mov
ss
cmpsb
std
jge
out
adc
mov
loop
insl
sbb
push
scas
xor
cmp
mov
pop
js
push
push
pop
mov
popa
scas
cmpsb
mov
push
push
frstor
scas
sbb
gs
xchg
in
lock
jb
loopne
xchg
mov
cmp
rcrb
dec
ljmp
lahf
insb
and
jbe
fmull
and
ds
stos
sbb
jno
dec
sahf
sbb
sbb
data16
jno
popf
sub
mov
call
hlt
push
add
pcmpgtw
sub
pop
lods
stc
lds
inc
push
scas
sbb
adc
loop
jmp
filds
pop
in
mov
mov
into
pop
xchg
int
xchg
stos
add
leave
pushf
movsb
jae
fistpll
mov
mov
rcll
cmp
jg
jecxz
repz
ret
pop
into
and
out
and
mov
enter
lahf
in
jp
das
scas
notb
daa
cmp
fsts
mov
mov
loope
adc
cmp
scas
popl
rcl
lret
sti
xor
hlt
lds
xchg
or
adc
addr16
outsl
div
xor
jo
xlat
mov
or
in
cmp
push
daa
xorb
cmp
repz
dec
lods
fimull
and
xlat
push
test
rcrl
xchg
xchg
cmp
adc
mov
pushl
mov
ret
test
jb
lahf
cmpsl
pop
jns
outsl
rcll
aad
sahf
sbb
mov
adc
jp
out
pop
mov
or
mov
mov
xor
and
aas
mov
inc
lret
outsl
and
jp
xlat
or
ds
sub
pop
pop
test
mov
filds
movsl
mov
std
xchg
ret
aaa
push
push
cmpsb
out
pusha
stos
subl
je
enter
lea
xor
cmp
rol
sbb
cs
ret
and
jge
out
icebp
sub
push
gs
iret
hlt
adc
add
jmp
rclb
lret
push
jmp
iret
mov
rcrl
sbb
arpl
shrl
sub
mov
mov
or
adc
adc
mull
mull
and
loopne
ret
stos
xor
mov
and
or
dec
mov
sbb
in
subb
loope
mov
in
rorl
mov
or
dec
xor
add
es
xor
sahf
shlb
push
dec
nop
imul
pop
in
push
add
pop
les
pop
stc
fsincos
fidivs
dec
add
inc
imulb
pop
jl
jg
insl
jge
xchg
mov
cmp
sub
shl
negb
add
push
sar
out
jecxz
sub
xchg
jg
sbb
mov
sub
pop
out
daa
cmpsl
aas
sbb
xor
cmp
pop
fs
popf
scas
adc
and
std
jecxz
insb
dec
sahf
add
loopne
ljmp
cmp
jae
cmp
xor
loope
adc
ja
and
jnp
test
das
in
cmp
xor
loop
loopne
icebp
jge
mov
push
push
mov
xchg
push
mov
ljmp
stos
lock
inc
cmp
push
mov
push
insl
ljmp
or
stos
repnz
push
shlb
pop
sub
cmpsb
ds
out
lods
andb
mov
sbb
shl
popf
add
std
jnp
in
fadd
and
pop
sti
inc
cwtl
sbb
stos
popa
imul
outsl
cmpsb
dec
mov
fbstp
sbb
dec
pop
cmp
movsb
mov
adc
pop
lea
xchg
cmp
sbb
mov
or
imul
rcl
lods
push
scas
mov
ret
inc
popa
dec
gs
dec
int
xchg
push
std
push
push
int
fs
aad
mov
cmp
mov
add
test
push
mov
push
movsb
imul
ret
andb
mov
and
aad
vxorps
or
in
cmp
or
ljmp
xchg
adc
arpl
loop
xchg
push
std
xor
cwtl
push
subb
add
jecxz
pop
rclb
pop
sbb
push
js
cli
cld
insb
mov
rcrl
adc
ja
lret
test
mov
pop
mov
add
iret
adcl
fidivrl
adc
mov
and
outsb
inc
mov
les
inc
sub
xchg
push
pop
leave
stos
sbb
dec
mov
sarb
call
movsl
ret
sub
mov
xor
sub
mov
push
aam
jns
nop
imul
add
or
push
adc
dec
cmp
cmp
add
or
dec
push
mov
test
ss
out
popa
data16
jne
mov
sbb
test
gs
fst
sbb
aam
and
or
outsb
mov
mov
pop
xor
push
sarl
test
test
push
xchg
or
test
sarb
add
rcll
add
ljmp
add
mov
inc
jge
cwtl
pop
and
shrb
mov
push
out
gs
ret
cltd
push
sub
mov
add
inc
or
dec
push
cmp
sti
es
rol
push
cmc
inc
xor
fidivs
push
dec
xor
sar
aad
stos
hlt
ret
insl
int3
aaa
sbb
lcall
scas
ja
xchg
jne
sti
dec
call
sarl
or
inc
jb
or
leave
xchg
leave
push
loop
push
pop
jnp
adc
xchg
add
dec
mov
loop
dec
pop
sbb
jns
call
outsb
or
dec
mov
pop
test
jae
jo
je
mov
xchg
adc
dec
push
test
dec
pop
mov
nop
adc
mov
icebp
jno
dec
out
xchg
mov
dec
mov
inc
lods
and
lret
aad
pop
adc
pop
lret
jbe
cwtl
jg
xchg
xchg
jnp
or
push
stos
nop
lcall
mov
pusha
push
lea
lods
push
mov
daa
sahf
or
repz
pop
fsubp
lcall
faddl
stc
mov
sub
pop
out
gs
pop
cmp
adc
ss
mov
sub
inc
shll
cmp
inc
rcl
aas
and
nop
movsb
rdpmc
in
adc
fidivs
data16
xor
or
mov
push
mov
int3
lret
sbb
mov
pop
ret
mov
xchg
icebp
jne
ret
scas
dec
repz
mov
add
push
in
push
push
push
movsb
fiaddl
dec
xor
ss
jns
cmp
nop
mov
cmp
sbb
and
call
rclb
aam
das
std
fdivrl
inc
in
xor
lret
dec
into
andb
xchg
xor
xlat
adc
push
rcrl
xor
enter
test
add
pop
das
fsubs
jo
shlb
lahf
scas
adc
scas
int
sbb
std
ds
inc
lret
adc
mov
sub
dec
ja
xor
cmp
lods
stc
jns
sar
add
js
and
adc
in
cltd
mov
inc
xchg
fs
pop
loopne
rcrl
cmp
ret
mov
aas
push
xor
push
lahf
jecxz
mov
scas
xlat
inc
push
incl
adc
push
push
mov
pop
xchg
js
pop
push
scas
adc
and
cmp
pop
xchg
dec
or
nop
fs
dec
adc
xchg
imul
pop
ret
sbb
dec
cli
push
mov
sbb
lods
mov
lret
shlb
xchg
dec
icebp
cmp
adc
mov
mov
repnz
ret
xchg
lahf
mov
pop
aaa
adc
xchg
loopne
xchg
test
mov
jmp
rcrb
insl
pop
mov
mov
push
es
sbb
push
pop
mov
cmpsb
and
movsb
mov
movsl
stos
pop
sbb
pop
daa
lea
inc
add
sbb
adc
imul
popa
call
and
sarb
into
jmp
and
mov
push
and
xchg
jnp
push
and
mov
mov
mov
pop
aad
lds
jl
pop
mov
insl
rcr
mov
inc
ds
xchg
and
mov
movsb
fimuls
ljmp
dec
mov
sti
pop
aas
push
inc
fldcw
out
lock
sbbl
xchg
scas
in
push
sbb
sub
je
pushl
insl
repz
add
add
xor
in
inc
jl
pop
mov
pop
pop
imul
xor
sub
or
mov
or
jae
ja
cld
fwait
addb
sbb
iret
adc
lahf
adc
in
mov
fs
jb
mov
icebp
xor
add
pop
movsl
in
jns
enter
mov
lahf
stc
dec
je
jns
mov
cmp
out
mov
roll
cmp
fdivs
aad
and
ret
push
inc
jecxz
dec
and
leave
loopne
jne
ret
ficoms
cmp
lahf
jge
jle
cmp
push
mov
out
stc
push
add
mov
sar
mov
and
insl
inc
cmp
jb
mov
out
pop
mov
adc
and
mov
pop
imul
mov
std
and
das
push
in
into
sbb
fwait
jne
leave
sahf
xchg
fcompl
sub
add
and
mov
fdivl
cmpsb
sbb
jae
fidivs
lcall
pop
fmull
ljmp
pop
mov
test
stos
fsub
int
mov
xor
sub
loopne
outsb
xor
push
cmp
xchg
das
imul
mov
daa
jb
jnp
xchg
aam
lret
mov
jmp
mov
and
cmpsb
lret
mov
lods
in
pmullw
cwtl
in
popf
dec
aam
mov
pop
xor
stos
push
and
and
push
movsb
aam
mov
pop
mov
pop
adc
mov
in
and
js
ret
or
outsl
clc
in
int3
sbb
dec
faddl
fbld
rcr
add
xor
icebp
or
out
sub
mov
and
add
test
inc
psrad
mov
push
or
cmp
jl
sub
dec
cmp
stos
andl
jecxz
mov
jbe
fdiv
pop
adcb
js
fmul
in
dec
inc
lret
pop
js
push
es
mov
ds
rcll
xchg
addr16
test
int
pop
clc
pop
jecxz
clc
mov
int
xor
jbe
push
xor
in
jl
xchg
mov
fimull
cmp
pop
mov
jnp
sub
pop
ss
rorb
push
stos
sahf
cmp
inc
cmp
mov
mov
jbe
adc
pop
stos
scas
adc
xorl
je
std
add
imul
xchg
sbb
xor
add
mov
add
dec
jo
lahf
cmp
aad
xchg
mov
mov
int
adc
or
jge
push
insb
js
cmpsb
mov
inc
adc
sbb
ss
divl
or
xor
adc
fwait
pop
fstl
repnz
mov
aam
loop
dec
xor
les
and
push
outsl
out
jno
inc
fildl
add
lea
into
and
rclb
pop
cmp
shll
xor
dec
sub
cmp
push
frstor
inc
sbb
jge
adc
dec
jecxz
jp
mov
lret
adc
out
jne
fs
pop
sbb
xchg
adc
add
pushf
lret
mov
sbb
imul
mov
leave
xlat
xlat
and
mov
xorb
iret
jl
cmp
pushf
xor
les
inc
ss
test
jmp
jnp
cmpsl
mov
or
inc
mov
test
dec
pop
popa
inc
pop
out
push
or
stos
xor
push
inc
pushf
icebp
test
loopne
push
push
lret
pop
mov
sbb
mov
fcompl
and
mov
dec
pop
pusha
push
les
outsb
test
lods
add
adc
ret
push
out
dec
mov
cmp
in
out
cwtl
dec
mov
xor
daa
aad
dec
imul
test
ds
lods
mov
imul
ljmp
fs
leave
rclb
scas
fcoms
aaa
mov
push
pop
sub
lret
jmp
call
les
lods
push
jbe
sbbb
gs
or
pop
test
mov
ljmp
pushl
in
gs
lcall
sub
insl
aam
daa
xor
sahf
or
repz
xchg
out
mov
pop
or
fwait
test
xchg
sub
shrl
stos
andl
clc
fiadds
xchg
xchg
loopne
and
mov
pop
adc
pusha
jae
jo
insl
rorb
cld
pop
add
inc
loope
call
pop
sbb
test
scas
adc
mov
mov
lret
push
outsl
inc
stos
into
and
rcrl
sub
push
cmpsl
sub
lea
addr16
lcall
xor
xchg
pop
cmp
sarb
xor
dec
aaa
aaa
cld
and
mov
add
mov
shrb
das
jg
scas
xor
xor
aas
mov
repnz
aas
jno
adc
insb
and
jge
jnp
into
cli
push
lods
dec
fstps
push
jle
std
pop
mov
mov
push
cwtl
imul
fists
inc
push
inc
mov
ret
xor
pop
movsl
or
pop
loop
in
out
push
cmp
push
js
sahf
cli
pusha
popa
mov
ret
into
aas
jle
jmp
push
mov
and
out
dec
adc
jbe
mov
popf
ss
cld
adc
inc
aad
dec
or
xor
sbb
push
sub
ja
fs
add
or
test
mov
pusha
adc
les
cmpsl
mov
jmp
dec
iret
cmp
push
xchg
ret
or
outsb
cld
in
xchg
xor
ret
orl
daa
outsb
daa
lcall
mov
xor
je
adc
fidivs
jmp
loop
out
in
fisubrs
adc
xor
fldt
sub
sub
fdivrs
stos
in
test
dec
mov
or
push
cmpsl
or
aam
adc
jne
stos
movsb
outsl
xor
movsb
cli
and
mov
cld
stos
mov
leave
mov
adc
and
les
test
lret
sub
sub
xchg
dec
in
aas
int
sbbl
xor
pop
jns
cwtl
cli
repnz
and
pusha
arpl
mov
or
sbb
int
cwtl
sbb
int3
lods
out
subb
sbb
pushf
pop
js
xchg
pop
xchg
rorb
mov
add
dec
inc
xorl
push
movsl
aaa
pop
outsl
pop
push
fucomp
in
xchg
sbb
and
inc
out
lret
roll
pop
lods
push
and
clc
xor
fs
aad
ds
pop
pop
pop
mov
adc
fisubs
sub
xor
adc
sub
jbe
idivb
mov
or
test
pop
or
cs
sub
sahf
mov
sbb
lahf
add
inc
ljmp
push
jp
scas
outsl
call
insb
pop
xchg
insl
cmp
movb
test
jmp
dec
mov
popf
sti
sub
xchg
andb
add
aaa
leave
in
rcrb
shll
sbb
lcall
sub
shl
jnp
jmp
cli
out
daa
shrl
or
mov
les
mov
pop
dec
dec
mov
notb
fnstsw
lock
leave
dec
cmp
jge
lods
lret
jmp
push
cmpb
ss
cmp
mov
aas
repz
push
aam
jecxz
xchg
fs
pop
popf
adc
rorb
into
and
xchg
pop
ss
xor
loope
pop
xchg
dec
or
fistpll
fwait
cmp
jecxz
dec
inc
xchg
test
pop
scas
call
xchg
inc
jae
lret
push
data16
fidivs
out
xor
bnd
mov
cltd
andb
in
test
mov
mov
imul
add
push
int3
add
cmp
in
in
adc
cwtl
adc
in
adc
mov
rclb
sbb
stos
punpcklbw
loope
push
adc
adcl
pushf
xlat
or
or
dec
insb
jae
test
lock
fnsave
xor
pusha
jne
arpl
inc
sub
or
add
mov
xchg
add
pop
adc
aad
sbb
jle
dec
in
scas
movsl
mov
inc
ds
mov
xchg
jl
xor
sbb
push
lahf
andl
mov
call
mov
test
lret
and
push
push
push
and
or
xor
ss
inc
pop
gs
sub
jmp
dec
push
test
xor
adc
pop
and
fisubrl
pop
mov
jb
mulb
mov
decl
cmp
xor
lock
loopne
inc
inc
enter
cmpsb
stos
and
out
xor
mov
scas
cli
inc
xchg
daa
js
stos
pop
test
and
xor
ja
jnp
mov
mov
ds
inc
sarl
lds
dec
ss
fcoms
repz
or
pop
cmpsb
in
pop
cwtl
fs
xlat
push
xorl
inc
fdivrs
cld
das
hlt
cmp
push
pop
stos
aaa
rclb
mov
int
or
pusha
dec
aas
xchg
xlat
mov
cltd
mov
jnp
mov
mov
ds
mov
scas
inc
mov
nop
scas
in
jnp
inc
mov
mov
xor
loopne,pn
jnp
xor
fisubrl
xchg
cmpsl
push
jnp
and
pop
fsubl
jnp
add
push
lods
test
ljmp
pusha
push
aam
xchg
sbb
xlat
mov
fs
int
popa
and
std
cmp
pop
lret
sahf
cld
sub
dec
push
lods
out
mov
adc
lcall
and
inc
mov
mov
ret
push
aad
mov
cmp
sbb
or
sub
inc
adc
ds
jg
xchg
pop
roll
sbb
sbb
jbe
push
scas
in
popa
loop
rol
lock
clc
stos
shl
push
hlt
jnp
sarb
jmp
dec
fbstp
or
inc
xchg
arpl
scas
fisubl
rolb
repnz
xor
ret
jno
mov
cmp
dec
jae
bound
and
dec
jp
cmp
inc
jne
jns
lock
xor
and
xchg
mov
das
xor
fcomi
rol
icebp
xchg
mov
stos
push
jb
sub
sbb
popf
or
jmp
ss
in
pop
insl
adc
pushf
in
test
cli
dec
scas
xchg
push
add
cmpsl
clc
cmpsl
xchg
and
dec
jge
xchg
fcoml
cmp
mov
adc
or
inc
dec
les
repnz
inc
arpl
and
lahf
inc
add
pushf
popa
mov
add
lea
loop
xchg
lea
call
pop
int
mov
aas
xor
aas
and
clc
or
mov
imul
ret
jnp
jg
xor
out
fs
outsl
es
add
out
pop
gs
mov
push
push
jae
sub
movsb
gs
mov
movsl
cs
hlt
shlb
cwtl
sahf
push
mov
push
pushf
ret
inc
sub
test
sbb
jp
ja
cmp
lahf
loopne
dec
out
push
sti
xchg
lcall
xor
call
add
fldt
sub
mov
repz
fnstcw
sub
lock
scas
movsl
mov
and
sbb
inc
leave
lret
xchg
or
mov
leave
cmp
pushf
inc
inc
inc
std
push
or
mov
pop
mov
rcrb
call
test
cmc
pop
ljmp
inc
mov
divb
jge
or
divb
inc
and
xchg
addr16
dec
pop
cmp
addr16
xor
push
mov
and
pop
adc
movsb
mov
imul
stc
dec
addr16
and
dec
mov
test
push
call
insb
ss
int3
adc
push
popf
test
pop
das
adc
push
inc
inc
jle
sti
adc
adcl
push
dec
push
sbb
negb
jne
adc
xor
inc
add
les
add
and
lcall
iret
push
mov
sub
jmp
data16
adcl
mov
adc
pushf
fistl
lret
scas
jg
mov
fisubs
fs
bound
cmpb
lea
imul
or
dec
or
mov
mov
jmp
push
ds
hlt
in
jmp
fistpl
enter
es
mov
inc
sbb
fdivrs
mov
and
out
sub
push
push
xor
pop
jae
mov
and
mov
or
inc
mov
fwait
jnp
pop
dec
xchg
call
mov
sbb
aas
pop
mov
mov
xchg
xchg
xor
dec
daa
pop
mov
inc
adc
lods
hlt
rcll
push
adc
push
xor
jno
data16
int3
mov
js
imul
add
cs
es
sahf
imul
mov
inc
fcmove
mov
mov
ja
mov
fdivrs
sahf
sti
adc
push
xchg
jns
aam
shrl
rcll
add
jbe
cmpsl
jo
cmp
push
mov
sbb
xchg
orl
xchg
inc
cmp
ja
sub
popf
lock
adc
sub
dec
lret
fucomp
jb
mov
push
push
xchg
xchg
pop
sub
push
rolb
pop
jmp
dec
into
scas
test
loopne
sbb
xor
movsb
push
dec
xchg
rorb
add
test
test
mov
push
push
pop
push
scas
and
ret
pmaxub
pop
xor
in
es
adc
in
call
or
mov
insl
enter
aam
cltd
xorl
nop
cld
dec
cld
jae
dec
and
sbb
fcoml
mov
or
je
jg
lods
mov
rcr
mov
out
sahf
gs
lods
dec
mov
sbb
jns
cmp
cs
and
sbb
les
pop
fwait
scas
dec
lea
mov
into
arpl
or
mov
sbb
mov
rcll
loope
test
jl
gs
inc
sbb
xor
xor
and
in
inc
adc
pop
fsubrs
enter
sub
cli
push
je
popa
mov
leave
xor
mov
adc
aaa
nop
cld
mov
mov
insl
push
xchg
lahf
fimuls
dec
adc
push
int
inc
inc
and
or
xchg
xorl
sub
mov
imul
pusha
add
mov
dec
sbb
push
mov
sub
mov
cs
in
mov
adc
dec
or
xor
insl
aad
cwtl
fdivp
sub
dec
mov
popf
jle
pop
and
fninit
inc
add
mov
in
cmp
pusha
xor
pusha
push
popl
push
pushf
js
dec
ds
minps
push
xchg
fsubrp
or
cmp
clc
inc
mov
clc
lcall
cwtl
test
fiadds
stos
lea
mov
add
shrb
xchg
loop
aad
enter
repz
arpl
adc
adc
pop
cld
cmpsb
arpl
lods
test
or
ret
pop
dec
stos
cmp
mov
hlt
ljmp
inc
andl
mov
loopne
cmpsb
fdivs
pop
push
adc
insl
ljmp
mov
push
xor
cmp
outsb
jmp
inc
and
into
mov
mov
cld
dec
or
sub
push
xor
jns
ret
jbe
sbb
or
mov
or
sbb
pusha
mov
add
sub
jne
pop
xchg
cli
sbb
or
ret
adc
scas
mov
cmpsl
adc
popa
add
xor
aas
fistps
das
test
arpl
mov
and
push
arpl
lods
sub
mov
mov
lret
push
sbb
out
pop
and
sub
dec
std
lcall
cwtl
andb
sbb
pop
les
sub
fdivrs
popa
add
int3
pop
adc
and
in
aaa
je
mov
mov
in
outsb
cmp
adc
jb,pn
jecxz
or
bound
jbe
and
clc
and
cmpsb
xchg
xchg
mov
leave
mov
sbb
popa
into
dec
mov
repnz
sub
xor
add
lret
popf
mov
and
test
leave
sbb
ss
mov
push
push
pop
push
sbb
andb
mov
mov
push
call
jae
lods
push
adc
cmc
fcomip
cmc
cmp
popa
sbb
movsl
pop
mov
sub
jmp
mov
adc
aam
fldt
out
je
cld
inc
lret
mov
sahf
xchg
mov
xor
leave
rolb
sar
daa
outsb
inc
loop
int
inc
cwtl
sub
dec
in
movsl
aad
pop
sub
repz
ret
inc
adc
xchg
mov
xor
xor
mov
loopne
gs
int3
adc
test
enter
in
scas
sub
add
adc
inc
adc
fcmovbe
fmull
jo
and
mov
sti
fcmovu
mov
add
lret
lea
repnz
out
mov
in
bound
adc
adc
leave
das
pop
test
xchg
adc
push
movsl
xor
ret
call
and
jl
jmp
cli
sbbb
adc
cmpsl
out
cmpb
dec
mov
mov
cwtl
out
push
mulb
cvttps2pi
pop
clc
or
mov
pop
testl
jb
or
xor
lock
icebp
arpl
cmc
js
mov
dec
les
dec
jl
vmovupd
addr16
mov
xchg
xor
sbb
push
mov
dec
xchg
mov
pop
scas
mov
aaa
aam
pop
xlat
add
nop
das
rorb
daa
jecxz
out
dec
jmp
jg
lock
lahf
insl
dec
jbe
inc
xchg
or
imul
cmp
hlt
test
push
lods
and
pop
sub
in
ret
mov
mov
push
mov
test
and
lahf
sbb
add
dec
sarl
iret
and
sub
inc
ficoml
cmpsb
lret
push
leave
mov
xchg
jnp
sbbb
aas
sub
aaa
movsb
addr16
movl
xchg
mov
jno
out
xor
xchg
pop
mov
addr16
push
icebp
nop
xor
pop
or
jno
pop
orl
sbb
adc
pop
cmpsb
sbb
outsb
clc
xor
lcall
pop
sahf
dec
rcl
xchg
movsl
cmp
pop
out
sahf
or
lods
and
or
stos
mov
mov
push
cmpl
mov
mov
fcomi
mov
xchg
dec
xlat
daa
addr16
es
insl
and
sbbb
out
xor
pushf
jne
pop
call
add
es
mov
push
aas
add
jbe
pop
pop
mov
adcl
popa
stos
jno
xchg
mov
pop
stos
inc
sub
fwait
lods
dec
lds
jge
inc
sub
cmovge
cmp
lods
mov
mov
addr16
and
cmpsl
jp
inc
inc
out
add
iret
pop
mov
and
inc
faddl
es
inc
loop
mov
icebp
jnp
dec
rclb
cld
add
ret
inc
and
test
xchg
add
pop
insl
mov
lcall
aam
cmp
dec
repnz
cwtl
xchg
inc
push
xchg
jmp
push
shr
lcall
aad
xchg
test
ljmp
popf
mov
mov
lods
cltd
push
dec
cmp
inc
adc
loope
cmp
xchg
sub
std
mov
fstpt
dec
std
js
mov
lea
daa
push
push
and
leave
add
out
out
ja
or
mov
mov
sub
jg
cld
incb
xchg
imul
adc
sarb
jge
inc
pop
mov
cmp
scas
dec
ljmp
xor
nop
push
movb
dec
sbb
push
and
stc
fs
adc
push
inc
inc
cwtl
mov
sub
fisttpl
sarl
test
or
loope
pushf
jnp
xchg
cltd
dec
sbb
fistps
cltd
aad
cmp
stos
mov
fsubrs
int3
inc
fisttpll
xor
sbb
xchg
cmpsl
ret
addr16
das
sbb
push
mov
cs
lret
xchg
dec
xchg
mov
in
repnz
in
xchg
sub
es
adc
arpl
scas
inc
fldenv
inc
pusha
xchg
mov
cld
hlt
int3
cmp
push
push
cli
cld
ret
movsl
and
and
dec
mulb
sub
jle
es
popa
push
or
je
xlat
or
jae
pop
dec
jmp
cmp
lds
sub
imul
ss
ret
xchg
lret
movsl
sbb
loop
insb
sub
jmp
sarl
adc
addb
jae
push
pop
xor
ret
outsb
add
jb
pop
jmp
mov
or
jnp
jmp
sub
andl
mov
fisubrs
mov
mov
nop
cmovg
adc
cmp
push
int
sarl
adc
pop
fsubs
jg
movsb
push
mov
dec
mov
lahf
jge
testb
nop
push
lcall
push
push
loope
mov
mov
popf
pop
and
rcrb
mov
pop
xor
dec
cwtl
pop
sub
cmc
pop
inc
xchg
ret
pop
fcomps
imul
cs
aas
xchg
cmp
leave
hlt
into
imul
ret
jecxz
mov
xor
sbb
jns
pop
insl
dec
loop
sub
imul
xchg
fs
pop
aam
or
sti
inc
push
fstps
mov
iret
das
jg
ret
int3
jecxz
sti
xchg
add
adc
sti
pop
idivb
addr16
fs
jle
adc
cmp
push
cmp
xlat
jb
dec
pop
js
clc
mov
sub
xchg
adc
push
sbb
jmp
cwtl
push
outsl
dec
fstpl
les
testl
in
sahf
adc
out
into
sub
dec
lea
push
add
xor
icebp
push
and
imul
xor
push
xchg
mov
pop
mov
push
or
arpl
pop
sarb
in
fsubl
clc
insl
pop
xchg
jnp
dec
inc
fs
mov
mov
pop
add
mov
aas
push
fiadds
cmp
fcoms
loopne
cwtl
push
lods
pop
jns
push
in
jne
xlat
dec
adc
fdivs
pop
jp
xchg
js
jg
inc
imul
ss
and
and
sbb
push
aaa
inc
xchg
shrl
inc
mov
mov
xor
loopne
fadd
in
inc
mov
sbb
fisubs
hlt
loop
fdivp
adc
xchg
es
shll
mov
or
pop
jne
idiv
mov
aas
pop
cmp
pop
push
orb
ja
and
push
ss
and
je
add
ja
dec
rcll
sub
repz
outsb
xor
fdivrl
loope
clc
push
mov
dec
orb
mov
sub
rorb
out
imul
adc
mov
bound
sahf
ljmp
sbb
or
xchg
loope
pop
xor
sahf
mov
cmp
mov
clc
loope
xchg
insb
es
lock
xorl
jb
mov
ds
and
jns
jg
test
fisubl
dec
dec
xchg
add
push
lea
cwtl
in
clc
pop
sbb
xchg
sub
or
jle
loopne
loope
addr16
add
xor
push
adc
sbb
push
mov
cltd
and
push
into
jno
mov
mov
push
sbb
out
icebp
sarb
arpl
sbb
jo
push
roll
xchg
mov
or
adc
mov
out
mov
mov
add
cmp
sub
test
or
testl
adc
inc
mov
inc
mov
sub
mov
clc
addr16
add
xchg
in
std
cmpsb
add
loop
into
mov
mov
jne
lcall
repnz
jecxz
add
cmpsl
test
mov
or
add
jecxz
nop
stos
ret
cwtl
jle
test
sub
mov
pop
add
mov
shlb
push
jns
out
jge
xor
std
mov
inc
in
add
lcall
adc
movsb
js
mov
adc
adc
push
cli
and
mov
xchg
mov
loopne
jge
jbe
adc
scas
lds
xor
cmp
incl
push
andl
inc
enter
xchg
lahf
sub
dec
xchg
mov
in
and
cmp
sahf
outsb
into
adc
pop
fs
add
in
xor
loop
add
je
into
add
call
push
sub
sub
sbb
nop
data16
and
sub
adc
sbb
pushf
pop
pop
adc
cmpsb
inc
sahf
mov
sub
leave
add
cmp
fistpll
insl
dec
fidivrl
lret
gs
test
mov
sub
pop
mov
mov
and
and
sbb
and
gs
les
mov
loope
enter
ret
cld
es
add
xor
mov
mov
jae
jb
sub
mov
dec
push
sarl
and
dec
sbb
addl
dec
push
mov
push
clc
ficoml
mov
jmp
cmpl
or
pop
into
jae
pop
mov
cld
imul
lret
mov
and
enter
sub
shll
cmp
xchg
jp
lods
sbb
mov
dec
lcall
clc
xor
mov
xor
adc
std
dec
rol
call
inc
jp
mov
popf
mov
icebp
js
mov
iret
push
xlat
fidivs
cmp
lods
push
aas
adc
xor
xchg
loopne
sub
mov
cs
and
mov
ss
jmp
imul
xor
mov
dec
lock
or
sub
dec
and
adc
scas
jg
pushf
dec
sbb
sub
jle
hlt
out
jecxz
sti
push
jg
or
movsl
repz
jb
xor
fs
repz
out
movsl
shr
inc
imul
imull
cmp
jb
pushf
or
out
cmpsl
test
mov
cld
mov
cmc
mov
mov
mov
jno
pop
mov
std
std
add
inc
data16
push
out
or
pop
push
cmp
jae,pn
jns
inc
dec
dec
push
push
dec
xchg
idivl
daa
cmpsb
xchg
pop
mov
mov
nop
dec
add
sbb
das
or
into
or
test
daa
lsl
push
cmp
add
aam
cmp
xor
out
lock
movsl
pushf
loopne
push
cmp
cmp
das
clc
or
data16
cs
scas
inc
inc
pop
out
xchg
xchg
xor
gs
loopne
jmp
dec
sub
pop
lock
mov
aaa
aad
scas
inc
aad
pushf
cmpsb
mov
ss
loop
adc
dec
dec
rorl
xchg
inc
fnsave
inc
ja
push
hlt
xor
test
insb
mov
mov
jecxz,pn
add
xor
sbb
sub
add
fisttps
cli
push
inc
cld
jle
pop
das
dec
fisubl
outsl
inc
mov
movsl
loop
movsl
and
add
aaa
adc
xchg
subb
jle
push
imul
and
sbb
insl
out
out
xchg
adc
mov
inc
lret
dec
cmpsb
inc
xlat
shr
jb
ror
out
mov
mov
outsl
mov
sbb
std
pop
aam
adc
sbb
adc
add
sarl
cs
inc
sub
ja
das
std
cli
push
mov
xor
fdivl
jb
hlt
cltd
add
cmc
in
xchg
dec
stc
fs
data16
pop
test
das
cmp
pop
testl
lcall
fstps
int
out
inc
jne
sbb
fisubrs
ret
or
xchg
dec
push
test
pop
push
sub
sbb
mov
js
mov
pop
inc
push
fidivrs
sub
leave
subl
sahf
scas
and
nop
imul
fisubs
mov
movsl
jmp
sbb
xchg
notb
call
mov
aaa
adc
lods
dec
push
xor
outsb
cmpsl
fdivp
jecxz
mov
fdivl
sbb
pop
push
add
pop
mov
mov
mov
pop
enter
cltd
mov
xor
sub
sub
adc
rcrl
sbb
dec
mov
jne
cmp
adc
sti
fs
mov
mov
loop
dec
xchg
les
mov
lcall
or
jmp
ss
mov
cmp
test
shrb
repnz
inc
rorb
data16
in
dec
mov
mov
xchg
jae
int3
jne
sub
insl
mov
sub
and
sbb
mov
jl
into
mov
repnz
mov
dec
test
xchg
mov
sub
cmp
cmp
rorl
inc
call
adc
cmp
mov
sub
mov
add
in
call
mov
insl
out
test
mov
mov
leave
sbb
out
cmp
js
mov
adc
mov
and
iret
jnp
ja
dec
daa
or
je
stc
int
adc
push
test
jg
mov
mov
or
daa
cld
jb
dec
cmp
testb
test
dec
dec
fistpll
sub
test
shl
std
xlat
fs
cmp
jp
push
repz
inc
inc
scas
lahf
fcom
addr16
jge
pop
inc
jecxz
jmp
push
loope
std
into
mov
jle
lret
cmpsl
cmc
repnz
pop
mov
ret
push
jecxz
daa
xchg
push
jl
in
pushf
mov
ret
in
hlt
inc
pop
das
and
loope
cltd
aad
push
into
aam
adc
cltd
dec
lahf
or
rorl
std
sub
mov
aam
push
fimull
dec
insb
inc
cmp
inc
pop
or
gs
ret
pop
mov
xor
xchg
call
pop
icebp
sub
sbb
xor
xor
add
popf
out
aaa
or
ljmp
scas
push
pop
inc
cmp
test
add
mov
jns
sbb
sub
sub
fiadds
sbb
push
mov
dec
imul
mov
sub
std
or
outsl
lcall
outsl
imul
inc
ljmp
push
jb
pop
iret
cmp
xor
mov
popa
xchg
jno
loop
cmp
in
jg
jg
dec
pop
jno
inc
and
sbb
xor
pop
enter
add
in
and
pop
add
xchg
sub
arpl
addr16
dec
decl
push
jae
es
std
and
arpl
adc
dec
hlt
test
cld
insb
pop
pop
sbb
fisubrl
imul
or
pop
xchg
test
call
mov
dec
jl
jge
add
xor
dec
popf
xor
mov
iret
repz
adc
loope
mov
movsb
je
daa
mov
fldl2e
int
dec
cmp
adc
shll
push
mov
jecxz
test
ss
fistps
xchg
mov
push
cld
cmpsl
mov
mov
vmulss
sub
jl
pushf
lahf
mov
out
hlt
rorl
and
rcrl
and
xor
les
sub
icebp
stc
jbe
lds
push
loope
mov
notl
xor
pop
iret
outsb
out
pusha
stc
sub
jbe
xor
out
pop
sub
sbb
jo
push
jbe
rcrl
icebp
mov
dec
pop
push
xchg
jmp
add
cwtl
gs
jbe
add
int
push
inc
loop
mov
inc
cld
inc
jle
add
nop
sbb
stos
cmpsb
in
das
cmc
sysexit
movsl
jnp
cmc
out
push
cwtl
fwait
ja
xchg
jb
movsb
stos
rcrb
stc
and
sbb
incl
leave
dec
pop
sub
daa
push
inc
add
jnp
mov
sbb
mov
push
repz
cmc
xchg
add
mov
rolb
cli
dec
subl
aas
pop
pop
sbb
out
call
shlb
cmp
mov
jae
sbb
lahf
and
sub
hlt
mov
fucomp
cmp
lahf
and
fcoml
push
cmp
mov
jne
in
pop
mov
xlat
inc
dec
int3
inc
cmp
cmp
stc
les
insl
jmp
scas
or
loop
aas
loopne
clc
movsl
push
in
repnz
lcall
dec
nop
aaa
ja
loope
mov
lods
or
pop
aas
fnstcw
push
addr16
incl
xor
pop
lret
sbb
push
jg
stos
daa
add
and
and
stos
fs
int3
adc
outsl
mov
fisubs
add
enter
jbe
adc
inc
mov
fists
jb
cmp
sub
mov
mov
push
lret
xlat
aad
repz
sbb
inc
pop
push
push
mov
dec
xor
jle
xchg
adc
jp
adc
lcall
mov
sub
xlat
xchg
in
xor
pop
mov
ror
je
sbb
xchg
and
jbe
inc
adcb
jno
xor
inc
test
cmc
and
mov
pop
or
inc
add
xchg
es
repz
test
jmp
loopne
cmp
sarb
mov
jge
push
push
lods
aas
lods
int3
and
arpl
mov
cmpsb
or
mov
dec
dec
test
and
mov
imul
push
repz
pop
scas
cmp
movsl
and
lcall
xchg
subl
cmp
xchg
or
call
cli
out
mov
cmp
or
nop
es
aad
or
pop
not
mov
xchg
xorb
mov
xor
or
push
push
je
inc
pop
adc
adc
push
sbb
adc
fnstenv
aam
int3
jne
mov
sub
jg
mov
inc
sub
pusha
push
test
or
sub
pop
mov
lret
mov
or
adc
adc
call
jne
cmp
xchg
dec
or
and
pushf
or
pop
out
sbb
sbb
pop
loopne
ss
jb
sub
xchg
out
out
iret
inc
pusha
inc
das
xor
xchg
push
xlat
sub
push
sbb
jecxz
add
dec
hlt
adc
inc
adc
arpl
clc
mov
xchg
aas
or
cld
movsb
pop
xchg
stos
inc
jg
sarl
xchg
xor
push
nop
xor
lods
dec
dec
cmpsw
lock
pop
sahf
icebp
jnp
data16
jo
aaa
jb
cmp
clc
loop
cmpl
popl
push
push
int
mov
lods
in
fiaddl
outsl
mov
lahf
gs
test
les
lcall
cltd
mov
push
xchg
xchg
adc
mov
rolb
inc
sbb
jne
mov
test
sub
cmpb
and
push
fs
imul
pop
and
dec
push
pop
or
push
cmpsl
push
sbb
push
aad
mov
xchg
mov
es
icebp
dec
or
clc
or
push
add
inc
arpl
sahf
cmp
loopne
mov
push
rclb
rorb
cmpsl
jp
in
add
sbb
pop
mov
sbbl
mov
dec
leave
inc
cmpb
or
adc
repz
pop
outsl
mov
and
ss
shr
dec
popl
idivb
push
testl
lock
aas
sub
stos
xchg
xor
xchg
dec
nop
push
xchg
hlt
movsb
imul
cli
inc
mov
add
fsubrs
add
dec
fldcw
jnp
xchg
jnp
dec
insb
cld
imul
mov
mov
sahf
jns
jnp
sahf
mov
mov
in
pop
testl
stc
scas
sub
mov
xchg
in
mov
negb
push
jae
mov
jns
out
jo
sbb
pusha
cli
sbb
aas
cmpsb
ret
push
jmp
inc
imul
xor
xor
rep
lods
pop
lret
in
mov
push
jmpw
pop
add
or
inc
add
fstpl
mov
loop
sahf
es
add
scas
test
test
imul
cmpsl
nop
std
ret
mov
adc
je
mov
daa
dec
xchg
arpl
mov
rcll
jae
adc
or
add
inc
push
lret
stos
ds
or
pop
xchg
xchg
lahf
fldl
add
dec
cmpb
shl
mov
mov
aad
jo
jnp
mov
movsb
popa
mov
enter
mov
imul
push
push
or
adc
add
cmp
dec
add
push
mov
les
in
push
fistps
in
mov
xor
xchg
aad
in
test
ror
push
sub
out
cli
cmp
mov
xor
jb
cltd
push
data16
lods
xchg
cmp
xor
mov
mov
stc
lods
sbb
insl
push
int
das
scas
ja
sub
imul
mov
mov
xchg
or
push
js
push
lret
aam
cmpsb
shl
repz
ds
movsb
outsb
pushf
mov
int
add
mov
jno
lahf
insl
pop
jo
push
cmc
in
gs
jge
mov
andb
rolb
pop
and
push
add
inc
jge
cwtl
jne
jb
loope
repz
test
fst
mov
or
in
shlb
arpl
cmp
cmpsl
lret
jns
fmul
xlat
jae
test
iret
mov
test
das
sub
push
lock
fwait
sarl
jbe
fwait
ret
push
fisubrl
mov
jns
dec
inc
in
inc
add
arpl
repz
int3
pop
lds
in
lods
jmp
outsb
fldl
adc
push
out
icebp
insb
gs
adc
mov
dec
mov
jge
shlb
shll
dec
mov
dec
adc
push
dec
mov
pop
adc
rcr
adc
lods
and
jmp
lahf
pop
test
outsl
dec
enter
repz
push
mov
cmp
pop
jae
shlb
test
mov
adc
dec
leave
cmp
loopne
inc
scas
mov
push
cmpsb
clc
sti
rcrb
or
push
jo
xchg
inc
jle
sub
mov
or
push
cmp
insb
push
xchg
fwait
cmp
fimuls
cmpsb
fcmovu
xor
inc
rolb
and
lret
xchg
iret
lahf
fcmovu
cmp
mov
add
jns
xlat
inc
popf
ljmp
jo
lods
or
jo
push
adc
fwait
ds
inc
mov
stos
push
push
pop
push
push
and
cmpsb
rorb
pop
orb
sub
subl
jmp
enterw
enter
mov
adc
ljmp
insb
pop
and
pinsrw
and
fwait
pusha
cmp
jb
ret
cltd
cmp
sbb
mov
sti
lods
jb
mov
dec
idiv
jmp
jns
add
push
dec
aaa
hlt
ret
and
test
outsl
daa
repnz
xor
mov
mov
or
imul
mov
cmc
xchg
clc
nop/reserved
pop
mov
or
daa
imul
std
out
test
push
sub
or
into
jns
iret
or
adc
fisubrl
cmp
pusha
movsl
sub
jo
movsb
test
push
lods
fsubs
int3
adc
popf
push
mov
daa
push
lret
cwtl
add
les
mov
push
mov
pop
test
mov
pusha
test
data16
ja
push
les
testb
sub
dec
jp
xor
pusha
pop
testl
mov
sub
cmpb
push
sbb
test
loopne
mov
adc
cmp
and
fldt
mov
pop
ret
cmpsb
movsb
outsb
aam
je
sarl
lahf
stos
push
mov
push
xor
movsb
jecxz
jmp
mov
jl
das
sub
int3
add
or
push
dec
adc
xorl
add
ret
fucomip
pop
lret
adc
or
adc
cmpsb
pop
dec
aam
test
insb
sub
cmp
sbb
rcrl
mov
mov
cmp
loopne
or
enter
pop
decl
rolb
loope
inc
ja
clc
or
xchg
xchg
ja
inc
lret
push
hlt
xor
mov
lahf
push
in
and
fildll
push
fisubrl
fstps
push
outsb
fimuls
fildll
fs
iret
arpl
dec
jns
sbb
jg
sbb
das
imul
sub
in
lret
fwait
jo
pop
std
test
pop
stos
adc
dec
cmp
jge
and
and
insl
push
hlt
xchg
scas
xchg
sub
frstor
stos
mov
mov
mov
jp
xor
notl
sahf
sbb
imul
inc
push
sbb
shll
insl
push
cmove
fdiv
and
sub
inc
jmp
int3
sti
and
cmp
mov
aam
es
fcoml
std
mov
xchg
loope
xor
mov
inc
jmp
fidivrl
cmp
xchg
test
int
push
fwait
cmp
cmp
xchg
xor
sbb
and
frstor
imul
add
mov
cld
cmp
ret
pop
or
in
xor
mov
lock
inc
push
fildl
in
mov
out
xor
pop
icebp
adc
imul
dec
cmp
and
aaa
xlat
sbb
xchg
and
fdivrs
ljmp
pop
pop
or
je,pn
pop
sbb
inc
xchg
add
pause
fcmovnu
loope
sub
flds
and
leave
repnz
cmc
popf
add
cld
xor
cmp
xchg
aam
inc
xorl
imul
xor
mov
and
jecxz
test
pop
ljmp
imul
es
lods
push
dec
inc
sub
sbb
enter
adc
mov
add
pop
mov
add
cmp
or
jecxz
lahf
jmp
aaa
fists
gs
aam
bound
inc
or
sub
jmp
lods
fistpll
insl
jne
adcb
bound
outsb
stos
or
xchg
xchg
sbb
cmp
lods
xchg
jo
push
jno
cwtl
and
add
pushf
shll
mov
outsl
xchg
lods
dec
push
arpl
js
das
outsl
mov
mov
xchg
ret
sub
xchg
cld
sti
xor
dec
mov
pcmpeqb
sub
cs
mov
data16
pop
push
jae
pop
fucomi
jo
sub
repnz
repnz
ret
xchg
xchg
xchg
lods
mov
push
sub
fldl
mov
or
je
rcrb
dec
sub
adcb
add
mov
mov
mov
push
jecxz
mov
or
rorb
jg
mov
fcoml
sbb
stc
ret
sbb
pusha
push
inc
push
sarl
dec
mov
jb
add
and
inc
in
scas
cli
xlat
sti
test
jmp
push
and
sub
pop
repnz
sarb
dec
and
js
and
and
jmp
add
mov
xchg
test
test
mov
scas
mov
or
xor
insb
lcall
int
fdivrl
sbb
inc
push
pop
ret
sub
push
dec
fidivl
xchg
lret
iret
dec
popf
test
ret
shlb
jb
movl
add
repz
cs
cmpb
mov
adc
jmp
loope
dec
mov
and
data16
imul
cmp
mov
aaa
rcl
cltd
or
mov
pop
jno
in
cltd
jnp
dec
rclb
cmpsl
mov
jo
cmp
lods
mov
push
jmp
sahf
aas
xchg
xchg
out
movsl
out
aaa
inc
xorb
dec
les
rorl
repnz
insl
test
repz
dec
ja
out
mov
pushf
popa
cmp
ljmp
sbb
out
test
cmp
xchg
or
scas
clc
aaa
lock
jmp
shlb
jle
adc
lods
lock
xchg
push
pushf
test
dec
mov
or
cmp
pop
jno
sub
mov
loope
jp
sbb
mov
js
pop
pop
push
cmp
insb
sbb
pop
outsl
add
pop
push
cli
out
or
mov
xor
not
lods
gs
sahf
mov
lcall
pop
mov
movsb
dec
lret
iret
test
call
mov
sbb
jno
lea
sbb
xor
add
jne
dec
inc
sbbl
ss
mulb
pop
clc
pushf
cmp
sub
add
int
test
data16
xor
and
popa
fmull
push
xchg
mov
fiadds
jo
mov
loope
aad
xchg
js
mov
daa
cwtl
lahf
stc
push
and
rsqrtps
cmp
jge
xor
in
jne
inc
mov
fdivr
lret
ljmp
das
and
sub
iret
push
fsubp
pop
sbb
iret
fisubrl
fs
jg
and
inc
test
add
nop
push
mov
xor
xor
push
xchg
bound
or
xor
inc
inc
mov
dec
pushf
sub
aad
or
xchg
inc
jle
cmpsb
sub
leave
sar
int3
adc
in
jmp
sub
das
push
ljmp
fidivrs
cmp
orl
or
fsts
je
daa
aam
shrl
mov
cmpsl
xchg
into
sub
mov
stc
adc
dec
inc
jge
push
xchg
push
fildll
enter
mov
orb
ss
bound
mov
fmuls
dec
sub
cmp
jnp
xor
loop
cmp
fs
fucomi
lods
add
fcmovb
sub
xchg
add
inc
adc
mov
and
jbe
mov
loope
jle
shl
test
jo
push
repnz
sbb
add
adc
data16
jb
aam
inc
xor
sbb
test
in
and
fdivr
repnz
xor
pop
cs
or
nop
into
mov
pop
jecxz
add
int3
pop
mov
ja
iret
les
cltd
mov
adc
out
xchg
sub
iret
ret
pop
pop
mov
fisubrl
test
pop
in
loopne
mov
lcall
inc
repnz
leave
inc
xor
dec
xor
ffree
jnp
cmpsb
jbe
add
outsl
push
and
add
mov
xor
nop
sub
icebp
ret
push
xor
dec
and
sub
pop
push
lahf
add
fisttpll
nop
cmp
sbb
sbb
mov
pushf
idivb
nop
gs
mov
mov
sub
hlt
js
lea
jne
dec
shld
inc
pop
sbb
iret
lcall
pusha
push
xor
mov
data16
jmp
das
sub
inc
xlat
or
push
mov
enter
insb
inc
loopne
add
stos
in
test
pinsrw
pop
das
adc
mov
lods
lret
enter
loope
test
cmp
repnz
or
stc
fidivrl
xchg
push
leave
jb
aaa
ffree
pusha
aaa
inc
and
test
lahf
lock
mov
jp
stos
jo
adc
mov
cmp
rclb
repz
push
scas
and
out
pusha
or
inc
cmc
push
iret
xchg
popf
or
jo
push
cmc
jo
xor
mov
push
les
ljmp
inc
fldl
push
push
cmpsl
lock
xchg
inc
jne
scas
fildll
mov
add
mov
daa
outsl
hlt
inc
sti
xor
xchg
nop
jmp
jae
sub
pop
mov
inc
xlat
push
lret
push
mov
int
mov
push
push
or
clc
popf
popf
adc
pop
lret
rcll
add
fidivrl
mov
xor
sahf
mov
repz
mov
mov
loop
push
icebp
and
xchg
inc
adc
int3
dec
cmp
xchg
popf
out
arpl
sub
je
dec
aaa
mov
jns
test
fldl2e
mov
xor
inc
dec
jno
or
aam
gs
scas
adc
ret
mov
js
mov
jge
mov
ret
icebp
stos
push
rcl
aas
xchg
push
jb
adc
sti
sti
jg
std
arpl
adc
in
lock
loop
mov
cmpsl
sbb
xor
add
pop
sbb
mov
lea
andb
add
jmp
outsl
fcomp
adc
gs
ds
leave
leave
es
pop
push
mov
xchg
loopne
push
mov
lret
imul
sub
and
enter
icebp
and
and
pop
jae
fucomi
dec
mov
dec
cmpsl
iret
push
cmp
das
mov
dec
pushf
jno
out
mov
push
in
sbbl
push
jns
jo
fwait
notb
repnz
aaa
sbb
and
sub
adc
add
mov
jbe
mov
sub
jge
pop
cmpsb
inc
dec
insl
adc
dec
mov
imul
scas
aaa
repz
mov
jnp
sbb
push
inc
jecxz
jns
adc
mov
xor
sbb
push
sbb
add
lret
jecxz
int3
adc
mov
or
sub
scas
test
add
add
ja
aas
sub
jl
inc
clc
outsb
sub
addr16
mov
pop
sbb
int3
push
pushf
adc
pop
add
or
stos
xor
mov
inc
mov
push
jae
push
mov
cmp
cmp
adc
cmpsb
in
dec
in
sarl
stc
fistl
into
data16
jae
sub
jecxz
aaa
shrb
orb
gs
push
mov
jb
xor
dec
adc
mov
push
out
ds
sub
sub
call
in
mov
bound
fwait
mov
adc
in
fdivs
pandn
stc
pop
sbb
jo
movsb
sbb
mov
dec
loope
mull
mov
push
sub
lret
push
pop
add
sbb
popf
mov
ja
jp
jne
sub
out
out
or
fsubp
addr16
mov
and
lcall
ljmp
lcall
pop
adc
sub
jno
in
inc
jbe
test
sub
pop
push
mov
fistl
out
jae
mov
sbb
cli
cmc
jbe
cmp
popa
push
gs
popf
loopne
mov
idiv
loop
xchg
rorb
stos
imul
pop
call
je
insl
loop
or
test
xor
mov
adc
jmp
mov
sbb
int3
insl
mov
addr16
repz
aaa
aad
loopne
fs
inc
or
rcl
add
mov
cmpl
mov
pop
or
cltd
mov
popf
push
call
mov
xchg
xchg
in
mov
aaa
pop
dec
or
mov
mov
sahf
ljmp
sahf
sarl
je
in
mov
hlt
xchg
pop
mov
andb
mov
and
cmpsl
push
add
jmp
mov
cmpsl
fisttps
push
inc
jecxz
jno
rcl
cmp
fwait
dec
lret
aam
fstpl
xchg
push
jne
ljmp
fs
cli
add
stos
scas
xchg
push
icebp
sti
dec
inc
icebp
rolb
xchg
fwait
pop
mov
addr16
out
jg
xchg
sbb
cmp
mov
mov
and
dec
cmp
imul
test
push
icebp
pop
mov
loopne
mov
and
push
lods
jl
cli
orb
push
xor
popa
add
mov
les
dec
in
ret
bound
sarl
sub
xor
xor
push
xlat
sbb
pop
push
in
adc
jmp
mov
push
cmc
aas
xchg
or
fwait
test
subl
xchg
add
push
imul
out
add
jae
or
cltd
test
clc
xor
push
scas
out
mov
jb
cwtl
xchg
sar
out
aam
call
pop
idivl
in
lds
in
dec
test
fcmovu
dec
inc
dec
mov
mov
cwtl
fdiv
fwait
cmp
adc
daa
and
inc
inc
rclb
xchg
xor
jo
mov
ljmp
push
sti
and
loop
dec
xchg
pop
fsubrl
lret
pop
mov
lods
pushf
in
dec
inc
pop
inc
push
repnz
xchg
sbb
leave
jle
lret
jo
mov
adc
xchg
out
int3
mov
popf
iret
mov
pop
jmp
ss
and
rolb
out
xchg
push
or
scas
int3
jg
mov
lods
xchg
mov
stc
or
mov
adc
out
sbb
mov
sbb
adc
sbb
xchg
push
and
scas
imul
push
push
cltd
pop
push
mov
repnz
cmpsb
outsb
cli
cmp
pop
stc
push
pop
add
and
fimull
fcomip
adc
push
sub
cmp
in
in
or
stos
add
push
stc
dec
fs
orl
ja
sbb
xchg
mov
shrb
ljmp
xlat
jecxz
nop
repnz
xchg
jecxz
xlat
enter
add
or
int3
ss
das
shrl
and
les
iret
ror
dec
add
bound
xchg
popa
xor
cld
arpl
fisttpl
xor
push
imul
ficomps
ljmp
negl
jp
cmp
pusha
cmpsb
sbb
cs
pop
adc
ja
xchg
cltd
bnd
dec
je
cld
jp
sbb
lret
loop,pn
push
pop
loop
adc
and
in
add
mov
jecxz
enter
mov
stos
nop
fimuls
lcall
jb
int3
pop
inc
std
cmpsb
or
shrl
jg
sarb
mov
jns
mov
dec
xchg
xor
sbb
fisubl
aam
cli
ffree
xlat
jae
mov
loopne
andl
mov
add
shr
cmpsl
aam
imul
in
push
scas
dec
es
mov
xor
sub
or
mov
inc
divl
nop
push
or
push
add
or
cs
xchg
xor
insl
cmpsb
rol
jl
jle
and
clc
fiadds
aas
dec
cmp
inc
lahf
call
jae
movb
sub
mov
popf
and
sub
mov
dec
data16
or
icebp
stos
test
sbb
mov
pusha
adc
add
inc
dec
jb
scas
sub
jb
mov
adc
pop
outsl
int
into
push
out
inc
mov
pusha
mov
dec
clc
xor
push
repz
aas
jg
sbb
addr16
or
lret
call
sbb
and
fidivl
jecxz
push
cltd
je
in
jns
push
push
inc
xchg
xlat
jbe
jno
xor
dec
xor
sarl
cld
jbe
add
dec
leave
out
out
jge
sti
fidivrl
cmp
jb
daa
enter
out
ss
fstl
btsl
test
pop
int3
cmpb
xor
cmp
aad
outsb
push
mov
inc
xor
lret
lods
fdivs
je
xchg
pop
fmuls
vpbroadcastq
pop
test
mov
lcall
push
mov
lods
mov
in
xor
xchg
fsts
testb
out
popf
cmpsb
fcomps
add
and
push
cmpsl
jb
gs
jae
sahf
stos
cmpsb
push
ja
ds
sbb
mov
notb
inc
test
jnp
lea
cmpsb
int3
mov
nop
sbb
or
sbb
ljmp
repz
sbb
sub
xor
sub
pusha
ja
inc
into
mov
push
les
int
std
fldcw
je
adc
test
jno
inc
sbb
loop
in
in
xchg
dec
leave
xchg
push
push
out
inc
fsubl
fstpl
dec
add
test
mov
dec
std
sahf
scas
xor
sub
fst
pop
sbb
jbe
pop
or
push
repz
insl
cmpsl
scas
sub
scas
ret
es
rolb
loope
add
mov
pusha
sbb
push
insl
jne
fwait
inc
lock
push
fistps
icebp
dec
stc
jge
xchg
movsl
push
adc
shr
mov
sbb
mov
fs
sbb
js
sub
jb
cmpsb
movsb
loop
sub
xchg
pop
adc
and
pushf
cltd
icebp
int
mov
mov
clc
add
loopne
cmp
push
mov
popf
imul
sub
add
dec
sahf
sub
mov
mov
mov
test
stos
mov
jno
xor
mov
sarb
cmpsl
mov
sub
sbb
lea
inc
fstps
movsb
adc
hlt
rcll
dec
sub
jp
jmp
out
push
inc
nop
pop
cld
mov
int
push
std
xor
clc
cmp
js
call
adc
pop
and
inc
test
bound
fbld
inc
sub
loop
jmp
push
xorl
movsl
and
ret
mov
pop
ljmp
xor
loopne
jo
adc
mov
movsl
push
xchg
es
adc
inc
lds
aad
pop
or
jp
or
jno
loope
fadd
cltd
cli
sub
gs
sahf
sbbb
add
mov
push
xchg
lods
cmp
add
gs
mov
popa
sbb
add
xor
sbb
cmp
fidivl
cs
dec
adc
sahf
scas
xor
and
mov
adc
std
mov
push
jp
js
mov
cmc
jle
fldt
sbb
negl
stc
cmp
cmc
mov
add
mov
add
inc
mov
rcrb
clc
fwait
loop
aaa
cmp
sub
jo
pop
add
jnp
clc
movsl
add
loop
insb
jmp
push
xor
out
jo
inc
mov
xchg
cmpb
mov
or
sub
or
cmp
test
rcll
adc
push
cmpsb
loop
sub
pop
sarb
fldl2t
jae
cmpsb
push
pusha
jp
aas
add
and
cs
pushf
or
sbb
rcll
call
lock
inc
stos
push
and
in
inc
les
dec
mov
pop
fistl
cmp
dec
add
test
dec
stos
std
rolb
add
ja
inc
pop
lock
stos
push
xlat
sub
imul
cmp
add
jb
xchg
ret
insb
jne
je
fisttps
push
cltd
jnp
test
dec
jno
scas
mov
inc
nop
pushf
jnp
stc
daa
rcrl
ret
rcl
lods
adc
pop
insl
fidivs
and
out
push
dec
int
mov
pop
inc
in
inc
push
out
add
xlat
into
mov
mov
pop
xor
push
dec
in
jge
loopne
jmp
pop
mov
jmp
js
lds
cltd
test
cmp
cmpsb
sbb
in
cmpb
dec
sub
jno
pop
jnp
pop
ss
dec
gs
fistpl
push
xchg
bound
int3
stos
pop
outsb
mov
bnd
insb
test
sbb
add
lods
mov
push
lret
lret
cmp
lea
mov
into
sub
dec
repnz
dec
add
inc
sbb
movsb
into
fbld
mov
mov
mov
scas
cltd
inc
or
mov
cmpsl
mov
popa
shl
pop
pop
fs
daa
or
pusha
add
shrb
stos
imul
mov
mov
jle
jle
mov
jbe
popf
lods
int3
and
fwait
pop
xchg
mov
out
fisttps
xchg
cmp
sahf
mov
xor
or
xchg
ret
out
dec
testb
loopne
xchg
mov
ljmp
scas
arpl
fbstp
adc
mov
xchg
enter
inc
xor
movsl
fsubl
cli
push
lret
imul
icebp
fcompl
lods
mov
sar
ljmp
or
mov
int3
orb
xchg
cmpsl
pop
mov
pop
jge
lret
jae
cmp
in
mov
mov
rorl
cwtl
ret
push
lahf
call
adc
xchg
mov
fs
out
mov
sub
vsqrtsd
mov
insl
sbb
inc
fdivs
sbb
int
push
movsb
faddl
leave
ja
or
lret
lock
lret
scas
loopne
xchg
lret
cmp
sbb
cwtl
cmpsb
jg
mov
ljmp
push
mov
ja
in
test
add
imul
push
mov
xchg
lret
dec
jo
add
aaa
push
rep
cmp
cwtl
js
pop
dec
addl
and
inc
mov
test
jmp
fisubs
sub
cmp
xor
push
adc
inc
push
insl
inc
pop
cmc
xor
cwtl
or
add
xor
push
jo
sbb
in
aad
push
and
lcall
push
int3
mov
stos
out
adcb
fimull
xor
mov
jle
inc
lods
add
ljmp
rcl
lahf
test
push
dec
sub
test
je
xor
fstpt
push
iret
sub
cmp
ret
loop
mov
sbb
sbb
push
clc
add
jb
pushf
pop
leave
int3
in
jle
xor
out
xchg
lret
mov
pop
mov
jno
or
mov
mov
leave
mov
addr16
pusha
lret
cmc
and
call
adc
mov
leave
andl
stc
outsb
outsl
xor
mov
scas
push
fsubl
pop
jmp
scas
or
sbb
push
cmp
inc
outsl
in
xor
jbe
adc
std
or
jle
cmp
negb
and
jmp
sbb
dec
fnsave
iret
jbe
rorb
mov
jae
cld
addl
xchg
mov
adc
cmp
xchg
outsl
fsubl
sbb
sbb
pop
shrl
xor
movsb
cltd
add
adc
mov
es
cltd
jge
leave
pop
and
xchg
icebp
pop
stos
rol
in
cli
or
adc
and
das
xchg
push
mull
xorb
and
pop
sbb
les
mov
shrl
mov
imul
icebp
push
mov
insb
outsl
test
pop
fsts
sub
dec
scas
fwait
xchg
lret
push
cwtl
push
jp
in
lds
mov
mov
bndldx
push
jle
mull
flds
bound
test
imul
and
lods
iret
push
push
jne
movsb
cli
pop
add
add
xchg
xchg
mov
imul
scas
pop
into
mov
aaa
inc
mov
jg
ss
push
out
imul
into
inc
push
repz
ja
repz
inc
mov
sub
cmpsb
jl
xor
test
jae
mov
fwait
hlt
or
xchg
pop
iret
andl
jnp
inc
lds
mov
aam
cmp
in
cmpsl
xorb
or
loop
xor
addl
cld
pop
cmpsb
out
mov
lret
movd
xchg
mov
sbb
bound
jb
inc
lret
clc
xor
push
test
jno
xor
dec
into
mov
test
mov
add
cmpsl
insb
in
lea
cmc
sahf
sbb
sbb
jno
test
repnz
xchg
push
ret
rorb
andl
or
in
bound
add
xlat
sub
mov
stc
sahf
jns
outsb
stc
sub
hlt
in
mov
iret
mov
add
push
cmp
outsl
aad
out
lods
xor
mov
sahf
mov
pop
pop
or
cmp
jecxz
shll
cmp
iret
int
ror
mov
test
popa
sbb
iret
mov
jnp
cmp
sbb
pop
mov
jmp
test
push
fwait
xchg
sti
mov
xchg
test
or
mov
jle
int3
js
add
loope
nop
push
cli
stos
roll
stc
pop
iret
bound
cmp
lods
adc
sub
testl
or
das
jecxz
cmpsl
movsl
jmp
dec
loop
dec
mov
shlb
mov
add
fadds
xor
jge
sti
sbb
das
in
mov
inc
or
arpl
sub
push
push
int
cmp
sbbl
sbb
addr16
insl
push
scas
sub
inc
test
cmp
sub
pop
clc
fsubrs
jns
xor
loope
dec
and
inc
lret
and
arpl
popa
test
aaa
xchg
sub
cmp
push
xchg
out
daa
mov
pop
and
addb
ljmp
pop
and
scas
test
mov
xchg
adc
and
fsubrl
ret
in
mov
mov
xchg
jb
mov
outsl
mov
dec
out
clc
dec
outsb
jnp
push
lods
popf
jno
add
inc
inc
jne
lods
fwait
mov
adc
xor
aam
pop
or
shll
cli
cmp
insb
dec
aad
cmpsb
ret
rolb
testl
mov
repz
adc
cmp
pop
sbb
jo
or
loope
mov
inc
fs
xchg
adcb
lcall
inc
mov
out
pop
jae
push
dec
push
inc
ljmp
cmp
loopne
xchg
aaa
outsb
sbb
popa
movsl
lahf
mul
test
sub
mov
pop
in
jb
dec
sbb
jmp
mov
filds
xchg
sbb
mov
lcall
lods
xlat
or
jg
lods
in
arpl
je
pusha
xlat
sbb
mov
xor
jp
push
mov
mov
push
sbb
mov
mov
pop
fimull
ror
nop
stos
or
icebp
stc
fcompl
aaa
pop
shlb
inc
cmp
aam
fs
aas
stos
mov
je
and
push
jg
repz
mov
std
cli
popa
mov
arpl
jbe
pop
push
shlb
mov
cltd
sbb
sub
xor
icebp
mov
lds
mov
pushf
jae
fcoms
lods
cmp
jecxz
mov
es
ret
imul
addr16
push
sbb
add
repz
ja
out
in
push
mov
addl
fbld
and
popa
dec
pop
test
xchg
inc
scas
aad
ret
inc
test
je
movb
or
lahf
xor
scas
ss
mov
jmp
std
mov
inc
test
jnp
rcrl
xor
adc
fsubrs
or
xor
loope
je
cld
notl
test
sbb
loopne
mov
xor
lock
xchg
mov
repnz
inc
xchg
mov
repnz
mov
aaa
int3
sahf
xchg
scas
out
jg
pop
das
or
movsb
cwtl
or
sbb
push
rorl
jecxz
sub
dec
cmp
rcrl
out
xchg
pop
mov
mov
adc
jbe
addb
lret
or
and
cmp
lods
fcmove
adc
adc
stos
push
push
mov
mov
in
dec
jecxz
push
loopne
jnp
adc
jmp
xchg
jb
push
lods
push
xchg
cli
test
arpl
bound
mov
pop
mov
cli
stc
add
in
dec
repz
jmp
sub
mov
and
mov
ret
or
push
enter
mov
jbe
pop
jbe
pop
mov
xor
xor
jge
mov
sbb
dec
add
int
test
decb
stos
sbb
fdivl
add
jnp
leave
repnz
add
mov
adc
into
iret
aam
aam
mov
movl
enter
add
mov
push
rorb
cmpsb
arpl
push
sub
rolb
sub
stc
adc
mov
push
mov
mov
sub
fcom
stos
movsb
jae
cmp
mov
mov
jb
push
repz
lcall
icebp
sbb
les
cmp
xchg
add
add
push
les
ss
sbb
sub
push
jle
fildll
ret
loopne
test
in
fidivrs
mov
in
add
pop
sub
or
sbb
pop
cmp
out
cwtl
mov
scas
pusha
dec
sbb
sub
scas
pop
inc
repnz
jp
pop
and
rorl
and
jno
push
push
pushf
jge
in
sbb
cmp
jns
cwtl
in
jl
sarl
lret
popa
cmp
lea
jg
call
push
dec
xor
push
xchg
inc
sub
lret
out
cli
cmp
push
and
and
push
mov
xchg
aam
pop
dec
jbe
je
jle
or
imul
adc
lock
add
les
cmp
cld
pop
movsl
mov
enter
lret
and
push
mov
adc
mov
movsl
hlt
mov
or
test
ljmp
cmp
fstpl
ret
repnz
roll
cld
dec
xorb
dec
in
push
jl
sahf
mov
mov
div
push
divb
add
dec
das
fs
push
pop
cmp
mov
fcomip
cld
xlat
mov
adc
in
les
and
push
les
lret
ds
pop
sub
inc
pop
push
jle
add
aad
jl
in
adc
push
test
and
xchg
stc
mov
ds
imul
inc
shrl
jae
cmp
pop
out
push
popf
bound
fdivp
in
and
or
popa
in
cli
cwtl
sub
sbb
js
dec
add
pop
and
cmpsb
pushl
repz
adc
or
mov
dec
dec
xchg
mov
fcmovb
daa
mov
xchg
lods
inc
outsb
mov
jle
xchg
lret
push
in
dec
ds
sbb
sbb
add
cmp
aam
or
jp
test
das
cs
sub
icebp
das
mov
enter
enter
dec
ficoms
test
mov
pushf
lcall
jge
add
fwait
xor
adc
call
sub
cs
adc
out
or
aam
aad
cmp
out
xchg
std
cld
mov
push
xor
add
leave
sub
stc
aad
or
sbb
pop
adc
mov
xchg
mov
jo
inc
lret
cmp
test
inc
push
cmpsb
cld
xchg
stc
cmovle
xor
xlat
cmp
aaa
inc
xchg
add
mov
add
fcmovnu
push
rolb
sbb
imul
in
hlt
in
lock
adc
sahf
inc
ja
outsb
aam
pop
pop
jecxz
call
jmp
arpl
add
ss
in
sub
mov
in
mov
pop
arpl
pop
inc
aas
add
inc
jmp
hlt
mov
sbb
hlt
loopne
imul
xor
push
hlt
lds
fmull
push
lods
xchg
jg
in
mov
dec
stos
mov
pop
add
push
xor
mov
adc
mov
inc
push
pusha
lods
xor
jmp
pop
popf
in
mov
mov
or
pop
sbb
test
loopne
push
jecxz
pop
mov
cmp
js
call
adc
cld
test
cs
lahf
mov
testl
inc
pop
test
dec
lods
hlt
movb
mov
fadd
xor
mov
mov
pop
pop
cltd
test
lahf
repz
add
jp
fdivs
pushf
mov
inc
push
imul
sbb
lcall
mov
adcb
push
gs
push
pop
mov
sti
push
inc
leave
out
gs
in
out
rorb
push
out
push
test
inc
arpl
xor
loope
xor
push
bswap
movsb
jb
xor
push
adc
mov
movsb
into
movsb
test
jne
clc
mov
and
clc
and
in
fsts
popf
xchg
dec
jae
test
push
pushf
rorl
ret
or
lahf
push
ret
push
cmp
add
sbb
in
jnp
xchg
nop
outsb
adc
pop
bound
adc
cld
jg
mov
ret
repz
rcrl
cltd
sub
insl
add
pop
and
aaa
std
cmp
js
pop
leave
das
int3
cmpsl
jmp
mov
fiadds
and
stos
sbb
push
insl
inc
dec
and
mov
push
mov
add
and
sbb
insb
mov
sbb
bnd
rcrl
jl
xor
mov
std
out
and
imul
pop
dec
imull
mov
mov
mov
jbe
nop
sarb
sbb
dec
lret
addr16
or
sub
nop
mov
sub
xor
fadds
sbb
pop
loope
or
lods
lahf
popa
dec
jb
pop
dec
adc
int
clc
mov
repz
gs
lods
scas
sub
dec
enter
xor
mov
dec
cmc
and
sbb
fldenv
shrl
sbb
cmpsl
xor
vphsubbw
aad
jecxz
and
mov
sub
std
cmp
mov
mov
inc
addl
push
lcall
push
push
ret
cmp
repnz
or
aas
and
in
mov
xchg
cs
cmp
shr
sbb
loope
call
ja
pop
mov
or
pop
jbe
jl
movsb
jg
daa
pop
jns
cmp
and
sahf
mov
mov
and
mov
pop
sbb
add
add
inc
cmp
gs
xchg
std
xchg
dec
xchg
call
push
mov
repz
insb
fadd
pop
xor
mov
rcrl
adc
mov
add
inc
ss
jnp
mov
jbe
and
push
inc
aad
out
mov
stc
inc
test
sub
inc
mov
or
ljmp
or
faddl
push
rolb
cmc
fcomps
aaa
mov
aaa
enter
loop
mov
addr16
cltd
jnp
pop
insl
gs
lret
int
push
imul
lea
xor
push
jmp
mov
mov
fs
pop
and
idivl
mov
inc
pop
sub
in
adc
aad
hlt
fidivl
stc
repz
dec
jae
xlat
lret
cs
or
mov
test
addl
lods
cmp
pop
add
push
sub
cld
xchg
and
test
sbb
iret
rcll
dec
push
push
aas
or
jbe
scas
aad
aas
cmpsb
outsl
mov
push
and
jo
inc
push
and
add
add
mov
rclb
or
popa
inc
pop
add
adc
adc
shll
lds
cmpsl
xlat
mov
jp
ret
mov
imul
and
jecxz
stos
mov
std
mov
into
adc
out
jmp
icebp
lret
jns
xchg
or
out
hlt
pusha
cwtl
mov
xchg
sub
inc
out
outsb
loop
add
sahf
or
xchg
or
pop
mov
add
mov
xchg
adc
mov
sti
enter
jmp
mov
in
jnp
int
adc
les
insb
dec
or
lahf
mov
cmc
cmpsb
hlt
dec
xchg
or
push
inc
sub
pop
xor
out
movsb
lods
ret
adc
pushf
mov
loope
dec
jl
into
dec
sub
sti
push
inc
inc
or
aam
inc
pop
test
push
or
lret
rorb
subb
jecxz
lods
adc
add
pop
cmp
dec
sbb
ljmp
add
jmp
dec
pop
and
inc
fnstcw
lods
adc
shlb
cwtl
or
les
mov
mov
jno
fldl
filds
fidivs
push
arpl
xchg
dec
daa
xor
outsl
and
xchg
in
cmp
xor
dec
lds
lods
dec
in
sub
mov
ljmp
xor
int3
mov
mov
sarb
push
xor
rorb
cwtl
mov
adc
xchg
es
push
jnp
data16
shr
fsubrl
jbe
jb
dec
push
dec
loop
jbe
into
pop
pop
jnp
mov
xchg
mov
test
mov
js
insl
and
bound
jne
movsl
mov
jp
mov
mov
inc
cmp
mov
adcl
out
xchg
dec
or
fstp
clc
mov
vmovsldup
repz
cmpsb
sahf
add
push
imul
lcall
ret
mov
mov
jnp
popa
jo
lea
addb
outsl
lret
test
mov
loopne
adcl
pop
cwtl
movsl
and
jg
pushf
cmp
sub
addl
lods
repz
xor
daa
mov
ds
ret
add
ficompl
pop
ja
xor
ljmp
xchg
push
mov
pop
mov
idivl
sbbb
repz
adc
xchg
adc
ljmp
jno
push
sbbb
mov
inc
ljmp
sub
imul
not
pop
mov
int
mov
dec
addb
cmpsb
or
xchg
pop
sahf
or
and
stos
setp
jns
mov
int
jg
mov
out
stos
xchg
std
xor
inc
sbb
es
adc
pop
jp
icebp
lods
mov
or
loopne
push
sbb
es
pop
ficoml
sbb
push
mov
scas
add
cmp
scas
jae
repnz
mov
inc
cltd
inc
scas
add
or
ljmp
aam
mov
push
test
mov
add
test
rcl
js
je
int3
mov
pop
xor
pop
mov
jno
xorl
pop
fisubl
enter
and
xor
push
jae
jecxz
scas
lret
fisubs
imul
sbb
push
lret
pop
xor
jne
out
mov
adc
ljmp
icebp
xchg
sub
and
or
and
jecxz
mov
test
push
fmul
push
sub
es
mov
enter
subb
gs
cltd
aam
addr16
and
jmp
outsb
sarl
sub
pop
xchg
mov
lret
lret
fldl
jns
push
lahf
inc
enter
imul
cli
add
dec
xor
jg
xchg
xor
fiaddl
adc
sbb
jne
inc
pop
adc
jae
xchg
jno
into
js
aas
mov
outsl
mov
push
add
xchg
fsubl
add
lcall
imul
cli
dec
sarb
js
push
mov
push
inc
dec
xor
rcl
das
in
mov
mov
loopne
mov
bound
add
mov
cmp
xchg
test
xchg
popa
cmp
pop
mov
in
xchg
cwtl
jmp
mov
xor
mov
sahf
mov
mov
fwait
dec
push
mov
ret
xor
sub
pusha
cmp
frstor
iret
jae
dec
xorl
jo
out
cmp
mov
sub
aaa
mov
sub
xchg
in
lcall
push
jecxz
or
xchg
loop
pop
iret
test
fbstp
and
ret
jp
xchg
sbb
xlat
repnz
imul
dec
shl
push
insl
fmuls
cwtl
mov
inc
movsl
inc
repz
mov
dec
adc
test
sub
out
or
mov
repz
mov
cwtl
mov
mov
mov
out
cmp
ljmp
xchg
inc
in
add
popa
pop
push
or
fwait
xchg
cmpsl
or
push
cmp
push
jae
dec
insb
mov
shlb
adc
dec
xchg
mov
jl
sbb
dec
iret
inc
mov
test
cmp
loope
out
mov
scas
aaa
cli
fcomps
sbb
andl
xchg
ds
iret
out
and
adc
bound
lds
jae
mov
push
inc
movsb
adcl
orb
mov
test
inc
in
stos
cmp
fmull
lea
into
std
pop
sbb
or
js
fidivl
addr16
cmp
stos
loopne
mov
jno
sbb
jge
mov
sahf
pandn
popa
lret
adc
test
addr16
sbb
push
jnp
inc
sub
sub
loop
in
cmp
add
repz
xor
clc
pop
mov
int
popf
sbb
push
pushf
sub
call
daa
sub
das
into
addb
adc
in
sarb
sub
jmp
push
push
test
scas
push
jo
and
bound
fnsave
andb
push
stc
xchg
push
jmp
xchg
push
repz
xchg
arpl
cmp
add
push
sbb
sbb
mov
pushl
insl
sbb
sub
adc
aam
inc
inc
mov
or
dec
dec
aas
pop
shrb
jae
outsb
popf
enter
jl
add
jmp
std
mov
fidivrs
adc
cmp
dec
in
mov
iret
lcall
xchg
dec
cs
lock
add
mov
sbb
inc
jg
and
mov
or
shr
lea
in
push
or
addb
sbb
add
mov
or
sar
pop
sbb
xor
push
inc
cmp
ficoms
add
pop
and
in
cld
add
pop
les
movsl
dec
subb
cmpsb
out
pop
ret
mov
das
add
dec
es
pop
xchg
out
test
gs
fiadds
ja
jno
dec
adc
setbe
add
add
scas
or
inc
sub
out
push
leave
and
sarb
sub
movsl
add
cli
loope
rclb
inc
test
add
clc
mov
push
pusha
pop
mov
aas
and
pop
sahf
mov
cmpsb
movsb
sub
cld
fsubrs
and
movsb
xchg
pop
je
push
insb
sub
fidivrl
jbe
push
push
push
outsb
xlat
mov
add
or
cmp
lds
mov
inc
pinsrw
xor
and
push
call
je
inc
popf
addl
test
mov
cmpsl
add
imul
test
xchg
js
in
je
fiaddl
loopne
mov
aam
out
mov
adc
shr
sbb
push
xchg
ljmp
push
aas
xlat
and
xchg
fdivrs
push
int
xchg
mul
lahf
jg
sarl
sbb
outsl
dec
cmp
xor
inc
mov
ret
daa
mov
fiaddl
jne
sub
and
or
mov
mov
xchg
or
test
mov
pop
sub
push
lret
jb
orb
addr16
negb
and
sarb
mov
sub
push
inc
xor
jbe
fs
sub
pop
movsb
mov
repz
es
or
xlat
lea
js
fstpt
pop
push
int3
lds
cmp
adc
mov
push
sahf
or
popf
xor
test
push
ret
fs
stos
repnz
cs
rcll
popf
mov
repnz
out
sbb
sub
xor
scas
sub
and
cwtl
adc
jle
inc
xchg
int3
mov
shr
mov
xor
mov
insl
mov
iret
sub
jbe
or
push
or
call
push
push
fwait
mov
out
fidivrl
movsb
repz
sbb
pusha
shlb
pop
fnstenv
out
lds
rcl
pop
lea
add
ret
aad
adc
int3
xor
or
aaa
outsl
inc
fiadds
test
subl
fldt
sahf
mov
loopne
inc
pop
fsubrp
push
push
xor
sbbb
vpminsw
pop
sbb
pop
stos
jg
xchg
outsb
pop
xor
pusha
dec
into
loop
data16
adc
call
cmc
stos
sbb
push
xchg
pop
aaa
and
adcl
mov
stos
dec
add
mov
testl
add
push
je
push
adc
xor
sub
ret
adc
pop
aad
subb
push
sub
mov
mov
or
jae
ds
mov
cli
popa
int
mov
mov
cmc
ret
cmp
das
es
push
imul
adc
pop
ret
loope
movsl
cli
and
lret
dec
fisttpl
pop
jl
push
adc
inc
daa
sarl
fdivrl
mov
hlt
sub
xlat
pop
inc
pop
xchg
shr
adcl
addl
mov
add
leave
jb
movsb
dec
mov
arpl
push
cld
int
xchg
subb
mov
lcall
shr
add
inc
test
shl
cmpsb
pop
jbe
xor
into
leave
add
jno
js
mov
imul
push
ret
in
mov
outsl
scas
mov
and
ret
add
mov
jecxz
jmp
enter
xor
adc
int
test
ds
jno
movsb
mov
jmp
cltd
je
inc
cmp
in
dec
and
mov
inc
ja
dec
push
movsb
mov
dec
mov
mov
shrl
dec
lcall
sbb
cmp
test
bound
mov
insb
pushf
cs
mov
jmp
mov
sub
jl
xchg
push
cmc
inc
dec
or
lock
mov
sbb
jno
lahf
jle
ret
test
pusha
hlt
push
inc
jle
pop
shrl
mov
test
jnp
stos
call
mov
sbb
or
or
test
call
cmp
call
sbb
cli
inc
add
mov
aas
fucomp
push
lcall
xor
cmp
loop
xlat
xor
xchg
jne
leave
mov
jmp
add
movsl
dec
inc
jne
inc
fninit
pop
jns
repnz
xlat
jl
add
pop
inc
test
xchg
shll
js
les
ficoms
mov
add
mov
or
xor
add
and
dec
jmp
sahf
mov
rolb
andb
add
fists
popf
sarb
or
in
and
testb
mov
js
andb
xchg
outsl
dec
dec
enter
jecxz
xchg
jp
mov
sub
in
fnstenv
mov
sub
cmp
popf
lret
pop
imul
xor
rorl
jno
sbb
mov
xlat
test
lds
pop
sbb
lret
push
mov
lods
or
mov
mov
lahf
pop
and
dec
cli
pop
mov
filds
lods
rolb
add
fwait
mov
mov
push
adc
inc
int3
scas
mov
popa
sbb
sbb
pusha
inc
call
cmp
std
jb
sub
aas
test
pusha
scas
push
inc
inc
scas
add
xor
lea
pushf
fnstenv
push
rorb
shll
stos
addr16
in
js
fwait
cs
pop
xor
sbb
dec
data16
mov
mov
push
mov
sti
sbb
sbb
push
out
mov
ja
out
cwtl
in
test
cmpsb
push
xor
mov
pop
pop
popf
mov
adc
adc
cmp
cmpsb
push
int3
or
pop
and
xor
pusha
fldcw
jl
fwait
sbb
imul
mov
push
sahf
cltd
xor
cs
test
iret
iret
cltd
lods
into
sbb
sub
add
aad
inc
mov
push
fcompl
xor
pop
mov
jmp
das
sbb
push
sbb
cs
faddl
sahf
pop
pop
mov
mov
sbb
fcmovnu
xchg
xor
adc
jmp
bnd
imul
adc
sub
mov
push
in
jae
mov
in
loope
inc
xchg
iret
jmp
hlt
jo
dec
shlb
sub
xor
add
mov
sarl
ss
ret
lock
push
insl
pop
and
sahf
es
sbb
lcall
pop
mov
sahf
push
jmp
rorb
or
cmp
in
scas
jmp
inc
mov
jmp
or
push
shlb
adc
dec
lahf
or
xchg
mov
ret
inc
and
ss
aad
or
dec
int3
aaa
and
es
adc
xchg
xchg
pop
adc
pop
add
pop
dec
cmp
mov
addr16
addr16
push
popa
jmp
js
sbb
das
push
iret
xlat
movsb
or
cli
dec
push
inc
ret
dec
ss
insl
cmp
in
mov
cld
cmp
ret
add
push
jp
ljmp
mov
and
imul
dec
outsl
sbb
pop
sub
push
xchg
rcll
mov
test
lods
sbb
ret
testb
pusha
xor
pushf
orl
cltd
or
xchg
cli
incl
je
les
in
lods
aas
add
rclb
fistpll
cmp
push
pop
iret
lahf
je
scas
outsl
cmp
xor
sti
rcr
push
cmp
fiadds
adcl
into
popfw
cli
in
mov
push
mov
lret
pop
push
inc
clc
in
add
inc
andl
mov
rcl
int3
mov
fdivp
dec
cmp
sub
js
addr16
or
fidivrl
aaa
mov
pop
test
ucomiss
cmpl
das
mov
mov
mov
stc
or
mov
pushf
sbb
push
mov
ljmp
cmpsl
mov
lret
enter
lcall
xchg
add
lret
dec
mov
mov
cltd
ret
xor
rcrl
sub
leave
loop
addr16
push
mov
mov
xor
stc
jge
cwtl
mov
addr16
aas
inc
xchg
rorb
fcom
scas
and
clc
xor
xchg
in
int3
push
je
xor
orb
jne
in
mov
sbbl
aas
cmp
nop
xor
cmp
repnz
lcall
int
das
pushf
bndstx
mov
and
xor
hlt
add
inc
xor
mulb
and
xchg
fisubl
xchg
mov
mov
dec
fimuls
or
sar
lar
fs
pop
jecxz
gs
jbe
pop
arpl
es
repz
aas
fcmovnbe
je
jmp
imul
iret
xchg
rorl
add
sub
lea
and
gs
imul
ljmp
xchg
xchg
into
orb
jmp
movsl
pop
add
mov
xor
mov
sub
scas
mov
mov
mov
push
cmp
xor
sbb
mov
ds
adc
lret
lret
push
iret
scas
scas
js
movsb
mov
enter
adc
call
cld
imul
shlb
ret
shl
pop
cmp
mov
pop
stos
hlt
iret
mov
push
fdivp
sub
es
scas
test
scas
add
gs
popf
mov
out
jnp
jle
stos
add
and
fsub
subl
push
adc
lahf
jnp
jbe
fidivrs
mov
popf
dec
dec
mov
xor
adc
sar
iret
xor
jp
mov
hlt
rcll
test
and
lds
out
popf
inc
subl
mulb
outsb
cli
push
push
bound
mov
mov
mov
cld
test
cli
aas
lea
and
fnstenv
and
ret
fbstp
mov
and
lods
adc
stc
sahf
and
mov
mov
cmpsl
jno
dec
mov
mov
imul
loop
scas
mov
iret
lods
xlat
int3
clc
jns
or
popa
jl
xlat
lret
shll
cmpsb
xor
jns
loope
mov
sti
xor
and
mov
xchg
push
or
push
push
xlat
mov
push
pop
add
cmp
sbb
aaa
xchg
add
aaa
sbb
jl
xchg
add
lahf
pop
xlat
push
rcrl
popa
xor
dec
dec
outsb
pop
add
xor
adc
imul
aas
dec
or
lret
push
mov
inc
sub
cli
cmp
fnstcw
cmp
mov
xor
sbb
jne
fs
xor
stos
sbb
into
jb
mov
test
std
jl
lahf
lcall
stos
iret
loopne
aam
mov
ret
adc
jae
insl
mov
pop
sbb
and
outsl
sbb
and
sub
add
and
or
push
adc
int3
cmc
inc
rolb
lea
aaa
push
fsubrl
inc
test
out
adc
sub
clc
call
pop
and
incl
adc
les
mov
xchg
mov
call
mov
pop
sub
in
push
xor
lret
xorl
inc
pop
mov
jmp
bound
fisubl
xor
push
or
mov
cmpsl
jg
mov
call
sarb
dec
lahf
je
aas
pop
sbb
cmp
dec
sbb
imul
das
fstl
sbb
js
add
cmp
out
int3
std
adc
arpl
lcall
in
sub
sub
sub
jmp
lret
clc
sub
aad
sub
bound
sub
xchg
in
lods
or
mov
or
adc
push
cs
pushf
test
pop
sub
cmp
xor
sbb
sbb
fisttps
mov
aad
popl
fisttps
enter
push
mov
jmp
jnp
mov
adc
cmc
in
xchg
inc
sub
popa
loope,pt
bnd
fadd
arpl
dec
sti
adc
cwtl
leave
dec
enter
aam
mov
xor
jae
inc
jge
sub
or
mov
int
test
mov
xchg
pusha
xor
orl
cmp
mov
and
out
mov
ret
mov
sbb
inc
mov
add
add
shlb
cmc
inc
push
push
sub
pop
mov
nop
inc
push
mov
stc
stc
and
sbb
sub
jne
and
iret
mov
mov
adc
mov
xlat
shlb
mov
push
mov
mov
frstor
or
xor
jo
cmp
pop
enter
lds
xchg
outsb
out
sbb
test
adc
add
pop
and
cmpsl
inc
popf
mov
push
adc
jmp
popf
mov
inc
arpl
xchg
pop
jb
fwait
pop
movsb
pop
xor
out
loopne
jnp
imul
lock
rcr
xchg
sarl
imulb
out
leave
mov
je
push
mov
rorl
inc
scas
or
je
jmp
xchg
lea
packuswb
dec
sti
xlat
aad
mov
mov
sub
jge
or
cmp
mov
xchg
iret
hlt
cmpsl
int
mov
int3
clc
cmpb
push
dec
fildll
jae
das
and
cmp
mov
xorb
inc
and
jo
aaa
rcl
fstpt
pop
lret
inc
mov
imul
push
scas
push
scas
xchg
out
stos
inc
dec
fcomps
mov
mov
imul
repnz
arpl
cmp
xchg
jbe
sti
insl
push
test
ss
flds
lea
test
cltd
sbb
or
in
repz
ss
adc
sbb
sti
test
call
xor
mov
outsb
xor
jne
pop
ds
dec
jecxz
mov
lahf
adc
andl
aas
and
pushf
outsl
movsl
jo
and
push
fsubrs
stos
dec
and
cmp
push
adc
dec
sub
dec
movsb
adcb
push
into
jge
adc
cli
cmp
sub
jno
inc
outsb
repnz
addr16
mov
mov
jb
or
rcrb
dec
mov
loope
adc
jl
sub
dec
int3
and
in
push
repz
sbb
add
jmp
dec
inc
jno
shlb
ds
xor
and
cmp
test
inc
js
cmp
inc
add
push
push
and
dec
xor
adc
xchg
les
push
mov
int3
jb
mov
stc
cmp
lret
add
add
mov
loop
and
movsl
or
stos
fstpl
push
lcall
pop
ss
push
movsb
and
dec
stc
mov
mov
stc
sti
sbb
cld
mov
outsl
imul
sbbl
test
arpl
test
adc
mov
in
iret
xchg
icebp
or
jae
lahf
adcl
xor
aam
cli
lahf
clc
cwtl
pop
push
mov
cli
dec
and
dec
imul
inc
outsl
cli
cmp
add
adcb
xor
jnp
imul
mov
ret
add
lods
call
scas
adc
out
and
nop
push
add
xchg
dec
pop
pop
shl
imulb
arpl
mul
bound
jge
pop
insl
adc
inc
push
loopne
insl
add
jle
sub
popa
xlat
lahf
add
lods
mov
lods
adcb
andl
aad
jl
sbb
and
fisttpl
lahf
cmp
arpl
cld
fimuls
stos
jo
lret
sbb
and
cmc
das
jnp
mov
ds
lcall
or
mov
xor
xor
or
pop
cmp
push
imul
xlat
jle
test
clc
loopne
jp
div
imul
and
pop
dec
xchg
cs
jno
in
cli
pop
and
lret
ds
fidivrl
popf
and
jno
xchg
add
out
dec
nop
mov
jecxz
loope
dec
enter
addr16
int3
push
lods
add
fdivrs
mov
ljmp
adc
push
mov
or
sbb
add
cs
pop
cmp
cmpsb
lahf
or
push
adc
or
scas
pop
and
pusha
lock
pop
les
repz
dec
pop
mov
mov
fstps
inc
or
xchg
pop
pusha
xchg
pusha
sub
ja
jb
negb
xchg
push
sarl
lods
fidivrs
icebp
shlb
pushf
adc
xchg
das
mov
mov
data16
inc
dec
je
push
and
je
mov
and
sub
pop
xor
cmpsb
mov
push
cld
or
jg
ss
add
add
mov
cmpsb
aas
icebp
lret
jmp
inc
push
adc
lret
inc
arpl
push
fidivl
adc
std
adc
xchg
cmp
xchg
enter
xchg
icebp
in
adc
in
aad
sbb
jle
jne
dec
push
mov
mov
les
repnz
loope
js
mov
mov
lea
rcrl
mov
pop
mov
fbstp
je
sub
movsb
arpl
jns
cmpl
push
jno
adc
addr16
xor
xchg
mov
mov
insl
jle
mov
in
test
outsl
mov
dec
mov
mov
jmp
pop
fidivl
push
xor
pop
pop
xchg
push
lcall
imul
mov
or
mov
jno
dec
lahf
mov
inc
adc
add
ss
ret
mov
stos
jnp
push
mov
mov
sub
repnz
outsb
ljmp
pop
mov
aam
fcmovnu
pushf
mov
outsb
cmp
pop
cld
cmp
mov
movsb
stos
sub
cld
cmp
clc
mov
dec
adc
in
or
int
sbb
mov
in
sbb
cmp
out
jnp
mov
jmp
loopne
sbb
nop
daa
pop
fs
push
lods
sub
lret
popa
sbb
and
cld
jecxz
add
mov
push
xchg
xlat
das
cwtl
mull
iret
jle
fdivrs
movsl
cltd
mov
daa
pop
pop
int3
call
inc
hlt
mov
arpl
gs
cmp
lret
fdivl
notl
mov
pop
adc
addl
xchg
adc
mov
mov
push
in
cmp
ds
push
add
mov
leave
cltd
out
andl
shrl
inc
scas
lods
push
dec
dec
aas
addr16
push
pop
sbb
push
movsb
jae
into
pop
pushf
xchg
leave
lahf
pop
outsl
sbb
xchg
mov
push
lods
cmp
xchg
push
pop
mov
sbb
sbb
nop
xchg
rclb
pop
mov
in
push
mov
aaa
and
mov
sub
imul
lcall
pop
inc
jg
icebp
cmpsl
push
loope
pop
mov
cmpb
out
push
inc
inc
scas
pop
jp
pop
leave
add
out
mov
jp
add
mov
xrelease
cmp
pop
mov
add
sarl
pop
xor
mov
fdivl
cld
dec
es
in
sbb
dec
sar
xchg
mov
divl
xchg
jle
bound
cmpsl
jmp
mov
mov
movsl
jns
sub
loop
inc
cld
loopne
clc
add
mov
outsl
xchg
xor
or
add
and
jmp
je
in
mov
dec
paddd
jmp
xchg
jne
dec
stos
popa
push
shrl
js
and
dec
push
jne
leave
movsb
or
xchg
jecxz
js
pop
lret
nop
push
sbb
popf
sbb
call
lods
cmc
scas
sti
jns
jmp
lods
inc
cmpsl
push
outsl
jle
ljmp
sub
mov
add
loope
pop
fisttps
mov
xchg
adc
testl
jae
dec
jae
dec
sub
adc
push
jp
js
sbb
mov
pusha
lret
jnp
lahf
outsb
movsb
add
sub
lcall
rcll
shlb
sbb
xor
xchg
adc
fists
inc
cltd
scas
add
out
add
notl
fwait
xor
add
xchg
ljmp
cltd
ds
popa
pushf
popa
ljmp
and
jl
jno
mov
jge
mul
icebp
cwtl
adc
scas
insl
aam
pop
leave
or
scas
ja
ret
inc
inc
nop
push
stos
test
pop
int3
jp
dec
mov
fldt
mov
repnz
aad
mov
and
orb
mov
dec
mov
movsl
dec
or
cmpsl
inc
dec
add
mov
ja
pop
and
or
in
ret
lds
mov
test
jmp
jl
or
fldt
movsb
mov
dec
and
ja
sub
pop
sub
cli
frstor
mov
clc
ret
jno
jb
aaa
nop
or
mov
jb
sbb
inc
xor
addr16
stos
sti
aad
jo
das
fistl
cmpl
call
or
lods
ljmp
adc
iret
popa
xor
sbbb
fisttpll
mov
mov
lds
les
out
mov
add
rcrl
test
je
ss
repz
xchg
ficoms
and
shlb
sbb
jb
inc
or
imul
inc
dec
xlat
sub
cmp
orl
sub
push
gs
mov
jb
cmp
xchg
push
add
jbe
movsl
pop
or
adc
out
or
imul
dec
xchg
cmp
and
repz
adc
sbb
mov
rcrl
sub
insb
xchg
sbb
out
cmp
std
xor
sub
out
or
aad
xchg
mov
dec
insb
or
nop
mov
adc
fisubs
xchg
test
push
lods
scas
adc
fisttps
cmp
gs
push
pushw
clc
sub
push
imul
cmp
sub
push
stos
pop
dec
into
add
jp
movsl
cld
ljmp
fldt
and
jg
ljmp
negb
and
mov
sub
mov
xchg
dec
rcrb
mov
ljmp
fstl
lcall
xor
lret
jmp
adc
subl
push
scas
jmp
mov
popf
add
pop
inc
adc
mov
jo
arpl
dec
in
mov
mov
in
and
push
jno
dec
xchg
andl
dec
push
sbb
lea
clc
sbb
in
inc
adc
or
mov
xchg
out
add
ret
or
sbb
push
sbb
push
or
int3
jo
sub
ret
in
cmp
jecxz
int3
add
imul
push
rcrb
sub
stc
pop
testl
sbb
add
mov
sub
lahf
call
insb
fs
jb
push
or
pop
add
out
jmp
lret
inc
dec
dec
daa
repnz
jae
stos
jo
popa
add
sbb
sahf
ja
xlat
xchg
rcrb
lods
popf
loopne
or
cmp
jo
dec
mov
or
je
and
out
add
add
mov
lock
pop
add
add
pop
mov
pop
inc
dec
arpl
hlt
cmp
lret
mov
dec
jae
lret
movsl
sti
pop
push
outsl
jo
jecxz
pop
sub
xchg
add
icebp
cmpsl
pop
mov
mov
mov
jno
lahf
daa
and
daa
movb
cmp
hlt
xchg
and
adc
jns
inc
into
ret
outsl
jecxz
mov
js
mov
pop
addr16
add
inc
ret
adc
add
dec
inc
jne
add
int
movsl
jmp
cs
xor
ficoml
movsb
aaa
push
inc
ss
mov
add
ss
push
lahf
jae
jno
xlat
sub
in
push
arpl
ficompl
stc
xchg
popa
je
mov
pop
mov
xchg
lret
sub
or
push
mov
call
sti
dec
push
dec
stos
sub
in
notb
add
ret
inc
cltd
outsl
loop
sub
ja
fsubl
jns
movsb
adc
sub
or
cmc
lret
scas
jae
cmp
cmp
call
pop
out
add
push
push
aaa
lret
movb
xor
pop
out
xchg
movsb
xchg
mov
mov
xchg
jnp
sbb
mov
aad
and
or
mov
xchg
in
insl
lret
inc
inc
mov
xor
adc
xchg
add
pop
inc
test
mov
sbb
insb
rorl
stos
out
ret
dec
xchg
push
fwait
push
loopne
or
fdivp
jo
jp
xacquire
xchg
sub
xchg
xchg
cmp
sbb
je
dec
jb
inc
jno
test
xchg
cld
int
cs
aad
xor
vfrczss
sub
dec
or
mov
int
imul
add
xor
jns
jle
jg
filds
xchg
pop
mov
jg
test
out
pop
lret
sub
push
int3
and
mov
and
push
mov
xchg
ss
cmp
xchg
repnz
fildll
std
and
or
pop
mov
inc
imul
jns
movsb
sub
in
cld
test
jns
or
cli
xchg
mov
call
movsl
pop
push
lcall
fcmovnu
or
bound
dec
clc
inc
jecxz
fldenv
mov
ja
cmp
mov
sub
xchg
and
or
adc
jmp
jbe
fbld
mov
movsl
stos
paddq
loopne
cmpsb
ret
sti
jnp
repnz
mov
sbb
les
ret
mov
data16
addb
cmpsb
mov
lods
and
test
xchg
cs
fnstsw
mov
lret
test
xor
inc
fcmovnu
fsubr
fisttps
sbb
stc
popa
in
inc
in
or
mov
adc
jle
in
lods
ljmp
jno
push
iret
stos
push
sbb
cmp
sbb
push
mov
lods
sahf
mov
fdiv
mov
aam
xchg
movsb
test
outsl
push
pop
mov
xor
mov
and
dec
push
movsb
lods
pusha
jno
out
dec
add
pop
and
add
inc
repz
std
pushf
ja
or
aaa
aaa
pop
jp
inc
pop
fmull
out
ret
test
mov
or
mov
ret
mov
cmpsl
pop
fadds
mov
imul
fisubrl
xor
and
add
rorb
xor
cli
clc
mov
add
push
arpl
sub
mov
jo
stc
fsubp
es
lds
mov
loop
icebp
sub
cmp
test
fcompl
fimull
shr
dec
sub
int
pop
sub
inc
mov
hlt
jno
outsl
adc
aas
sbb
cmc
jbe
push
ljmp
lret
out
xchg
loop
push
mov
outsb
sub
add
dec
xor
outsl
test
xchg
in
aaa
arpl
or
and
cmp
fisttps
xchg
push
jle
xor
push
lds
incb
xor
enter
mov
or
lea
xchg
mov
rcr
mov
scas
roll
fistl
arpl
xchg
push
mov
xor
pusha
insl
test
movsl
mov
pop
inc
mov
and
cld
push
inc
or
jp
out
jl
repz
std
pop
outsb
pop
cmp
xchg
xchg
cmpsl
nop
mov
mov
shlb
out
push
ficoml
jbe
movsl
fdivr
enter
int3
or
or
inc
lcall
leave
icebp
push
out
inc
xor
pop
dec
mov
pop
incb
addr16
mov
xchg
fidivl
or
cmpl
daa
setno
fisttps
out
sub
rcll
or
out
test
ret
xor
pop
pop
xchg
int
mov
int3
or
dec
mov
aas
mov
pop
mov
filds
or
or
mov
and
je
in
idivl
ljmp
es
je
or
movsb
lahf
cmc
lock
add
je
imul
xor
pop
lret
jo
imul
je
cmpsl
test
push
inc
add
and
or
push
mov
lret
mov
je
jae
xor
push
pop
xchg
inc
jecxz
sub
jmp
jecxz
push
mov
xchg
sub
xor
mov
mov
shrb
push
mov
sbb
jns
nop
sub
dec
xchg
xor
cmp
mov
mov
mov
shll
cltd
jb
sub
fisttpll
pop
std
bound
and
sbb
aaa
pop
sbb
lock
add
push
dec
pusha
mov
rcl
fsubl
xor
fs
aas
dec
sbb
cmp
cs
xchg
xchg
pop
aam
frstor
je
test
cmp
dec
repnz
mov
mov
bound
mov
dec
lcall
xchg
push
scas
mov
fsubl
add
jns
arpl
inc
mov
or
push
xchg
mov
ret
fiadds
fstp
pushf
test
push
daa
cwtl
mov
fadds
xlat
mov
out
or
dec
flds
mov
xchg
aad
icebp
mov
imul
call
push
jp
or
mov
lret
pop
ljmp
stos
iret
mov
roll
fucomp
xor
mov
andl
mov
lahf
mov
xchg
jl
and
pop
xchg
sub
and
push
mov
sub
push
enter
out
xor
fdivrs
js
jbe
dec
xor
cmpb
sub
jmp
sbb
mov
dec
lret
xchg
cmp
int3
shl
xor
jo
and
popl
xchg
dec
and
mov
pop
out
jp
shlb
cli
ds
dec
sub
mov
in
out
mov
fwait
pop
jno
mov
movsb
jo
adc
and
inc
pop
xchg
push
jae
and
push
adc
not
ret
nop
fdivs
ret
pop
lea
lret
inc
mov
xor
and
mov
dec
and
cltd
add
mov
xchg
outsb
int
lcall
add
lret
aaa
fidivrs
or
xor
add
xchg
cmpsb
ds
cwtl
xor
push
jno
xor
mov
inc
fistl
mov
es
es
jg
inc
adc
add
sbb
pop
adcb
lds
jg
mov
inc
fucomp
cmp
adc
sbb
or
pop
add
adc
xchg
sub
add
mov
fsubs
lds
cmpsl
das
adc
gs
inc
xorw
jae
addl
dec
mov
cmp
lods
and
hlt
xchg
jmp
push
inc
pop
xlat
sbb
add
jb
ret
ror
clc
jmp
jp
mov
stc
push
ljmp
dec
mov
mov
dec
xor
into
xor
add
lcall
aaa
fimull
out
adc
mov
shr
push
lock
frstor
stc
xchg
movsb
inc
cmp
adc
sbb
stc
sub
pop
lock
in
sarl
jo
rorb
and
imul
movsl
mov
pop
sahf
lahf
sbb
xor
mov
xlat
aas
aas
and
mov
cmp
ss
sbb
icebp
popf
cmpsb
sbb
mov
aaa
add
or
icebp
cltd
jns
shll
mov
stos
and
sub
ds
popa
pop
dec
aad
xor
aaa
add
shl
mov
js
nop
lahf
iret
jo
adc
mov
insl
leave
mov
sub
stc
ret
jb
sub
jl
mov
fs
orl
dec
xchg
sub
sub
out
push
mov
fcoml
cmpsl
jne
xchg
sbb
mov
pop
test
ret
out
mov
std
cmc
cld
dec
ljmp
mov
sub
cmp
inc
jo
mov
inc
push
js
mov
std
mov
rorb
sarb
jo
nop
sub
aas
movsb
push
out
mov
fs
mov
mov
loope
xchg
add
jg,pt
xor
outsl
cmp
adc
xchg
adc
pop
pop
ret
sbb
stc
adc
stos
mov
inc
mov
sbb
inc
dec
fmul
mov
adc
jmp
sbb
pop
daa
push
lds
sub
and
mov
xchg
cs
addr16
cmpsb
sbb
icebp
daa
leave
sub
mov
xor
lea
sbbl
fs
gs
fldenv
mov
adcb
lods
push
fisttps
int3
lds
jge
jge
or
push
mov
cmp
and
adc
fldenv
in
sar
adc
movl
test
shlb
bound
test
mov
aas
in
push
or
dec
loop
pop
pop
jge
cmp
dec
jg
call
stos
and
jl
cmp
leave
xor
mov
adc
dec
cmpsl
xchg
push
shrb
imul
lds
dec
mov
inc
push
loopne
xchg
movsb
loope
xor
xchg
mov
dec
js
xchg
loopne
adc
push
hlt
lret
rcrl
imul
adc
xchg
fbld
xchg
test
jno
push
std
sbb
lods
lock
mov
call
cmc
inc
clc
push
inc
xor
orb
outsb
fimull
sub
mov
jle
cmpsb
adc
jle
in
sbb
les
lret
xor
std
andl
inc
aas
out
adc
leave
add
mov
xchg
mov
ret
adc
sbb
xchg
inc
pop
xchg
mov
mov
jno
push
xor
push
jb
negb
icebp
int
pop
bound
lahf
sahf
adc
mov
repz
daa
mov
icebp
xchg
imulb
xor
and
imul
lea
or
stos
lods
in
mov
pop
sub
int
mov
imul
es
arpl
repnz
loopne
sub
cmpsb
dec
cld
int
iret
xchg
mov
push
leave
adc
mov
and
nop
out
cmp
add
inc
jno
add
inc
pop
lods
scas
xor
ror
xchg
push
cmp
fildl
rolb
jmp
push
into
mov
fs
mov
mov
int3
out
out
mov
jbe
mov
ljmp
cwtl
fistpll
xchg
pop
nop
jo
sub
outsl
fprem
shrb
xchg
push
cmp
test
dec
rclb
aas
mov
sbb
xchg
inc
adc
out
or
lahf
sahf
mov
sahf
jle
fnstenv
mov
lods
push
pop
enter
mov
mov
or
ret
add
mov
xor
dec
insl
mov
loop
cmpsb
test
repz
cmc
push
push
lret
jp
hlt
pop
fwait
roll
adc
rcrb
add
gs
mov
mov
jge
je
aas
mov
jae
sbb
mov
dec
fcomp
ja
aas
push
sub
cmc
pop
mov
jns
mov
bnd
cltd
test
push
mov
mov
addl
mov
cmpsb
in
lock
xor
add
xor
fmull
mov
push
cmpsb
stos
push
jns
cmc
mov
data16
mov
pop
mov
jno
xchg
push
adc
xor
sbb
xor
outsb
test
xchg
aaa
push
daa
adc
mov
pop
dec
mov
rcrb
insl
repz
mov
test
ljmp
and
lds
rol
cmp
mov
xchg
xchg
push
cmpsl
inc
loope
stos
sub
sbb
lret
leave
dec
mov
lret
push
mov
cmc
sub
fdivrs
sbb
dec
mov
aam
adc
pop
into
mov
push
jle
jo
mov
push
mov
xor
aam
jno
cmp
sub
aam
aam
data16
stos
add
sub
in
inc
test
fimull
dec
lret
ljmp
xchg
call
sbb
xchg
cmp
add
popa
pop
es
adc
sti
inc
mov
xchg
push
addr16
xchg
loopne
and
cmp
stos
bound
sbb
scas
add
ljmp
popa
jecxz
icebp
add
push
fisttpll
out
arpl
mov
inc
inc
adc
or
lret
pushf
arpl
cmp
pop
dec
inc
loope
dec
xchg
je
push
cmp
ret
jae
flds
jo,pt
mov
pop
sub
and
push
dec
ds
arpl
loope
push
outsl
dec
out
das
mov
sub
push
add
insl
cmp
adc
inc
mov
cmp
mov
add
negl
jg
adc
xchg
adc
sbbb
into
gs
lret
pusha
xor
outsb
dec
cmp
loopne
pop
int
add
xchg
shlb
lds
bound
fwait
int3
mov
and
cmp
stc
push
inc
cmp
jne
cwtl
fcmovne
rolb
fwait
aam
xor
push
lods
sbb
out
sbbb
pushf
fldl
test
into
push
outsb
mov
mov
pop
xchg
add
mov
pop
adc
dec
add
sbb
ja
jbe
loopne
inc
idivb
loopne
push
jbe
jle
out
adc
sbb
xchg
mov
jo
imul
add
cmp
jg
pop
jmp
shl
mov
out
xchg
and
cmpsb
enter
jmp
push
add
fbstp
mov
and
push
or
or
pop
pop
imul
and
inc
lods
push
cmp
xlat
sbb
sahf
out
mov
jge
mov
sub
dec
push
mov
pop
mov
outsl
or
mov
daa
cmpsb
and
daa
aaa
in
aad
clc
out
outsb
adc
sbb
daa
aaa
or
fimull
adc
mov
pusha
pop
repnz
dec
add
mov
int
mov
pop
or
pop
xor
push
jmp
push
mov
mov
nop
mov
pop
stos
jns
mov
add
mov
popf
ljmp
add
sahf
je
pop
imul
sbb
push
mov
cmp
xchg
flds
push
jp
fbstp
loope
add
push
int
fisubrs
dec
add
sbb
or
xchg
aaa
and
inc
lea
pop
sub
sbb
movsb
or
jae
shll
popf
adc
add
out
mov
in
inc
call
pop
test
inc
arpl
fwait
xor
shlb
out
rorl
jae
and
jne
nop
mov
nop
enter
xor
les
jp
and
pop
mov
cmp
dec
mov
stc
clc
leave
xchg
mov
sbbb
inc
aaa
ljmp
loopne
mov
push
push
rcr
and
andl
xorb
mov
add
scas
or
xchg
popa
push
outsl
jge
dec
cmc
stos
gs
sbb
jecxz
and
push
jmp
mov
inc
stos
push
cmp
mov
dec
push
pusha
enter
mov
push
push
jg
sbb
fisubrs
cmp
or
nop
push
je
or
ss
mov
lret
das
iret
inc
add
rcrb
jae
popf
js
adc
mov
cmpsb
loope
stc
add
cwtl
ret
int
lock
pop
push
lcall
add
lods
sub
push
mov
cmp
xor
mov
dec
sub
out
adc
fimull
cmp
fwait
out
test
insl
or
jb
jnp
push
adc
pavgw
jbe
lock
aam
xchg
pop
cli
or
jno
rorb
lret
jne
add
pop
lock
mov
push
mov
xor
data16
jle
sti
push
pusha
xor
out
jbe
dec
xor
repnz
cmc
imul
xor
mov
cmp
fwait
out
lret
pop
test
pop
fwait
xlat
addr16
add
mov
scas
icebp
xor
or
mov
cli
adc
in
inc
mov
pop
rcrl
jo
xchg
jo
stos
rorb
in
and
movsl
mov
jecxz
jnp
ret
popa
jmp
ljmp
andl
inc
cmp
push
cmp
xlat
jecxz
and
dec
mov
and
cmp
and
mov
repz
out
loopne
aad
sub
push
sbb
and
cwtl
dec
in
push
in
test
pop
cmpsl
movsl
lds
bound
mov
ret
or
cmp
imul
lret
into
cmp
les
test
data16
mov
dec
xor
sbb
sub
fisttpl
int3
lahf
sub
loope
mov
xor
orb
loopne
mov
shl
pop
cld
aaa
push
loopne
and
inc
scas
ja
jnp
outsl
mov
fcompl
je
adc
xor
inc
sub
and
push
inc
insb
push
xor
lods
and
dec
dec
clc
sti
jl
stc
pop
dec
sbb
push
or
aam
sub
sahf
loope
and
and
mov
loope
dec
je
adc
lcall
in
and
adc
and
adc
nop
cmp
mov
stos
stc
cwtl
cmp
xchg
test
cmp
addr16
jecxz
pop
scas
inc
insb
sbb
les
cmp
je
in
sbb
push
inc
js
out
sti
or
jno
cmp
rcrl
into
adc
mov
cmp
outsl
cli
inc
popf
nop
outsb
les
mov
shr
mov
lock
xchg
gs
cmp
sti
orl
mov
and
pusha
jg
pop
clc
aam
jp
in
imul
mov
leave
xchg
xlat
push
popf
pop
aas
push
fs
fwait
jae
jae
popf
sbb
sbb
hlt
adc
cmp
xchg
fisttpll
sub
lea
movsl
xor
pushf
ljmp
lret
dec
lock
cmp
add
iret
mov
sub
sub
scas
adc
push
aaa
xor
pop
dec
addr16
xor
fcompl
ror
push
push
repz
divps
lds
lods
adc
in
imul
aad
in
stos
and
jge
pop
in
mov
ljmp
dec
and
das
pop
push
xchg
stos
xchg
shll
clc
iret
add
test
aam
xchg
out
inc
or
inc
pop
and
cmc
cmp
addr16
icebp
cmp
xor
pop
push
ja
jg
sub
cmp
out
ret
test
xor
jo
xchg
js
mov
or
cmpsb
in
aad
es
push
fbld
or
and
mov
lock
ljmp
cwtl
addr16
sbb
dec
inc
cmpsl
loopne
push
fsqrt
mov
insl
xor
pop
addr16
dec
mov
add
or
cmp
andl
pop
fnstenv
repnz
jp
or
rcrb
ljmp
mov
hlt
inc
pushf
cmp
sub
ret
aaa
xchg
xchg
adc
dec
xor
shll
test
push
insl
clc
rorl
in
jp
push
aam
inc
arpl
fdivl
pop
sbb
mov
bound
hlt
mov
sti
cld
int3
add
in
push
sbb
testl
dec
cmp
das
inc
mov
out
jp
dec
test
fistpl
test
xor
ret
mov
enter
testl
jns
sub
sub
push
dec
stos
add
sbb
cltd
push
mov
pusha
pop
inc
pop
addr16
sarl
fadds
aad
mov
mov
andl
test
lret
cmp
sbbb
xchg
outsb
lcall
fstpt
mov
shrl
mov
imul
and
sbbb
or
shlb
xor
imul
je
and
cmc
mov
mov
push
mov
je
icebp
pop
xor
jle
ds
or
fistl
nop
lock
jne
ja
jl
push
fsubrp
pop
loop
xchg
repz
outsl
fwait
out
nop
loopne
xor
bound
mov
add
add
inc
stc
pop
sbb
or
lock
xor
dec
mov
dec
out
sbb
leave
or
lret
enter
xchg
sbb
icebp
addr16
loope
andl
xchg
adc
mov
lahf
xchg
mov
xchg
xor
not
out
fdivrl
pop
add
pop
xchg
movsl
pop
or
cmc
jl
jnp
movsl
int
mov
mov
xchg
ficompl
clc
or
ja
xor
or
aam
das
pop
loopne
pushf
dec
push
stc
sub
ljmp
inc
adc
lock
test
sub
aaa
daa
push
scas
push
loopne
aaa
cwtl
mov
ja
test
daa
push
scas
shll
fcoms
std
jnp
stc
sbbb
adc
fbld
sbb
cmp
mov
xchg
dec
add
push
or
test
jns
push
xchg
cmpsb
scas
pop
cmpsb
lahf
jns
add
dec
fistpl
push
mov
clc
ds
cs
cmpsb
mov
push
in
repnz
scas
fcmove
mov
ja
test
pop
jnp
scas
inc
pop
iret
sti
xlat
or
inc
mov
incl
leave
lret
aam
mov
inc
mov
lcall
or
int3
shlb
mov
inc
call
out
push
xor
push
jl
mov
je
mov
mov
cmp
out
icebp
into
add
cmp
out
ret
jmp
shlb
arpl
fbld
and
je
sub
jl
push
push
insl
inc
imul
pop
hlt
cli
mov
push
sbb
inc
lcall
imul
inc
test
dec
lahf
pop
das
lcall
std
aam
add
stc
jecxz
scas
pop
pop
mov
xchg
mov
out
xchg
mov
leave
jns
addb
mov
lock
sbb
push
or
pop
push
ret
dec
mov
in
loopne
mov
insl
ficoms
pop
iret
jle
cmpsb
fnstenv
and
mov
add
sub
add
fisubs
aas
test
adc
jmp
xor
cmpl
in
test
cmpsl
sub
fistl
sub
sub
roll
push
inc
cltd
fiaddl
dec
xlat
lock
jns
push
cmp
repz
or
push
rcrl
pop
mov
adc
xor
cs
inc
dec
lahf
outsl
mov
into
push
mov
xchg
sahf
pop
ds
and
push
jge
inc
push
outsb
lods
lret
jbe
insb
mov
push
or
mov
mov
out
int3
xchg
adc
sbb
adc
xlat
aaa
cmp
sub
scas
out
add
inc
lock
jge
pop
mov
pop
js
ljmp
aas
stos
push
inc
adc
push
adc
mov
and
js
inc
ljmp
sub
je
xchg
mov
and
ss
leavew
ljmp
inc
jo
sub
or
out
mov
ljmp
testl
in
gs
test
jne
add
sti
ss
jp
popf
outsl
cmp
std
lock
out
cmp
inc
mov
mov
jmp
inc
cmp
xchg
xchg
test
adc
in
aaa
jnp
repnz
imul
test
sub
mov
add
push
jecxz
push
mov
lock
mov
sub
jne
das
jbe
fsubrl
or
xor
leave
or
shll
int
add
shrb
aad
xchg
inc
jns
jmp
mov
cmp
cmc
insl
xor
xchg
push
cmp
pop
sub
push
outsb
sahf
jge
test
popf
mov
adc
mov
mov
out
pop
cmp
cld
jge
push
pop
and
mull
xor
push
jne
cmpsl
mov
movsl
fs
cmp
lret
push
dec
or
or
pop
das
xor
push
jno
cmpsl
cmc
imul
test
mov
fiadds
lods
cmc
movsl
add
xor
mov
mov
pop
sti
addr16
xchg
jp,pt
out
pop
dec
lea
ja
aam
lds
mov
sub
push
dec
mov
mov
insl
es
aam
mov
aaa
xchg
mulb
pop
pop
dec
xchg
ret
rcrl
cmp
mov
pop
jae
cld
rol
inc
outsb
mov
xchg
ja
push
mov
xchg
leave
adc
pop
xor
outsb
ds
or
imul
fnsave
add
leave
pop
gs
stos
mov
addr16
dec
hlt
lret
insb
stos
nop
mov
add
out
push
data16
mov
and
jle
repnz
ds
ljmp
mov
ja
push
jne
dec
mov
aaa
imul
stc
dec
mov
jae
insb
jg
sub
out
push
call
add
shl
or
sarb
push
sub
test
sub
jb
outsl
jno,pn
aas
cmp
je
mov
insl
popa
push
lock
daa
sub
sub
sbb
aam
push
lahf
mov
xchg
push
repnz
dec
lret
mov
xchg
push
xlat
ja
mov
add
test
sbb
in
imul
mov
xor
cmp
cld
rcr
sub
aam
shrb
leave
dec
es
sub
pushf
mov
mov
push
inc
out
or
sub
jbe
shll
adc
gs
sbbb
mov
lret
dec
ljmp
imul
add
and
cmp
jmp
inc
scas
repz
lods
xor
testl
sahf
mov
daa
adc
enter
stos
les
pop
inc
mov
shlb
inc
cmp
add
dec
pop
adc
jp
into
xchg
in
add
adcl
rcpps
or
push
fcmovbe
sahf
jp
sbb
jg
fstps
dec
clc
inc
mov
sub
cltd
xor
adc
xchg
inc
xchg
pop
adc
shrb
sub
mov
js
mov
push
cltd
jbe
call
cltd
mov
pop
dec
mov
xor
adc
fldenv
jl
jecxz
cmpsb
test
scas
aam
adc
add
gs
les
jp
cmp
insb
mov
pop
cmp
sbb
inc
inc
cmp
inc
and
cwtl
cwtl
aaa
push
les
add
pop
xchg
push
lret
and
or
or
cmpsl
pop
push
les
lds
push
lcall
xchg
insb
bnd
je
jecxz
mov
xchg
aad
sbb
cmp
mov
es
pusha
loope
mov
sbb
lods
or
ljmp
test
inc
cmp
cmp
inc
push
lret
push
shr
jp
loope
cmp
icebp
cmp
in
dec
push
jo
aas
xor
and
mov
adc
lea
xor
sub
aad
loop
mov
stos
iret
mov
shl
mov
push
sbbl
jl
xorl
shll
sbb
pop
stos
movsb
iret
push
xchg
cmp
mov
ds
fistl
fnstsw
aad
jle
mov
inc
xchg
lds
bound
in
jbe
fiaddl
ret
imul
dec
vunpckhpd
divb
imul
or
push
fistl
mov
mov
sbb
pop
inc
out
pop
push
dec
push
stos
cld
xchg
mov
cmpsb
cmp
out
pop
pop
je
ret
xlat
mov
and
push
popa
sbb
push
mov
scas
sub
std
addr16
pop
jl
adc
in
or
dec
mov
icebp
rol
jl
sub
push
ja
jae
stos
pushl
xchg
dec
dec
out
fwait
gs
int
add
add
out
jl
dec
sti
sti
sub
xchg
icebp
mov
mov
pop
and
clc
push
add
pop
subl
nop
lods
cld
int
dec
lahf
mov
sub
adcl
mov
cmp
cmc
sahf
into
mov
push
popf
int3
in
and
xchg
mov
aas
push
xchg
mov
xchg
jg
adc
loope
and
fstp
pop
and
push
jg
lcall
cli
pop
push
mov
scas
mov
pop
lods
xchg
mov
clc
jge
mov
or
roll
pop
cmp
push
or
push
dec
push
xchg
dec
call
or
sbb
inc
arpl
jl
push
es
mov
shl
pop
mov
mov
mov
inc
xor
cmpsb
push
push
shlb
mov
fsts
test
cmp
ja
add
cmc
dec
push
outsb
dec
and
pop
pop
jb
sahf
or
mov
push
adc
inc
and
or
jno
js
dec
mov
dec
sbb
aad
xchg
jns
enter
lock
jnp
mov
cwtl
ja
icebp
stos
ja
in
rcr
jp
flds
push
jg
sbb
ficoms
ja
test
call
scas
iret
fwait
jge
insb
push
jno
popf
es
fsubrs
sbb
jns
gs
or
je
mov
popf
jne
mov
xor
sbb
mov
addb
pop
mov
hlt
or
ret
jno
andb
test
jbe
adc
fdivl
and
push
sub
and
rorl
stos
mov
adc
jno
test
cli
push
mov
cmc
rcr
sbb
sub
in
adc
adc
and
xor
sbbb
mov
inc
je
push
mov
jmp
or
shl
aam
testl
pop
jno
cmc
outsb
sub
dec
mov
leave
fisubrs
and
xor
adc
movsl
mov
bound
lahf
add
jl
leave
call
lret
mov
negl
loop
add
inc
pop
cmpsl
int
leave
fsts
inc
jl
add
push
xchg
pop
cmp
movsb
popf
data16
sbb
mov
adc
bound
stos
mov
pop
fmulp
jl
mov
lea
mov
aas
cmpsl
mov
add
shlb
sub
in
push
movsl
jbe
fadd
subb
stc
mov
das
ljmp
cmp
rcl
ja
jg
mov
sbb
shr
popa
sub
cld
daa
cmp
pop
pop
push
mov
sbb
ds
push
loop
mov
cltd
andl
repnz
mov
jb
mov
aad
xor
mov
out
dec
mov
sbb
daa
outsl
mov
jg
sbb
pushf
inc
mov
out
pop
push
lods
and
outsb
ret
leave
mov
adc
sub
mov
xchg
fstpt
jb
insl
fdivr
aad
sbb
sub
xchg
stos
adc
les
fstpt
sbb
sbb
jbe
mov
sbb
out
cmp
ds
hlt
xor
xchg
mov
call
decl
pop
adc
mov
mov
in
xchg
mov
sarl
pushf
repnz
mov
or
fdivrs
pushf
push
call
sbb
loop
cmp
out
icebp
sbb
jb
shl
dec
pop
lcall
aad
and
mov
pop
pop
sbb
int3
sbbb
addr16
subl
pusha
ss
jp
dec
jge
imul
icebp
sbb
mov
push
add
iret
fs
jp
imul
call
fwait
push
inc
mov
bnd
xchg
add
jne
mov
mov
fistl
pop
jbe
mov
es
jmp
xchg
nop
ja
stos
jmp
insl
xor
sub
negb
or
add
fdivl
mulb
mov
out
in
mov
and
in
addl
sbb
inc
and
dec
sqrtps
outsl
test
push
js
test
xor
xor
in
lea
fimuls
fs
out
sub
adc
xor
outsl
mov
push
push
lods
insl
mov
lock
int
mov
dec
cli
shrl
mov
inc
mov
in
dec
push
scas
xor
add
mov
dec
fs
adc
mov
popf
lods
cmp
and
jno
xchg
pop
jae
loopne
add
cmp
mov
and
inc
dec
mov
pusha
sbb
in
adc
aad
mov
push
pop
adcl
in
pusha
sub
outsb
shll
test
dec
data16
pop
nop
neg
clc
enter
jg
inc
jp
ret
mov
pop
dec
popa
push
sti
and
dec
fsubs
cmp
ret
shrl
xchg
or
pop
ret
pop
fs
mov
cmp
cld
lcall
fadd
andb
inc
clc
outsl
sub
pusha
inc
in
sub
mov
fs
repz
push
out
push
jbe
into
cmp
sub
xor
mov
and
add
fildll
jno
cmc
int3
fisttps
int3
cmp
js
dec
sbb
mov
movsl
lahf
sub
xor
adc
shlb
cltd
xor
lcall
outsl
fidivl
arpl
in
or
mov
in
inc
xor
sbb
iret
mov
and
jne
int
adc
xchg
cmp
push
sub
dec
hlt
nop
pushf
ja
dec
jo
mov
lahf
xchg
push
fsubrp
mov
add
or
popf
add
inc
into
sub
lods
xchg
push
fidivl
add
sbb
cld
icebp
sbb
jne
xchg
ss
aaa
loop
cmpsl
or
jnp
cmpl
imul
inc
outsl
cs
ficoml
lods
sti
out
xor
fiadds
cmp
test
hlt
cld
mov
das
fsubrl
mov
cmp
jnp
xor
add
sbb
xor
fisubs
hlt
push
cmpsl
push
pop
ja
scas
mov
inc
aad
add
pusha
fimuls
lahf
sar
loope
sub
lea
or
ret
dec
xchg
es
ja
daa
pop
push
sbb
or
mov
stos
sub
xor
lods
inc
sub
mov
fcomps
push
ret
cld
mov
stos
je
jp
and
xchg
xor
mov
out
pop
bound
mov
mov
es
pop
pop
aaa
leave
mov
sahf
leave
pop
and
divb
jp
xor
mov
mov
add
jo
lret
mov
loop
dec
xor
sub
and
cmp
inc
push
cmpsb
insb
push
cmp
mov
jecxz
inc
sub
adc
cmc
sub
loop
lcall
adc
or
ss
subb
sti
popf
pop
mov
and
js
out
push
adc
fbld
add
imul
popf
adc
mov
and
pop
rol
call
jecxz
fisttpll
inc
push
xor
sbb
es
xchg
lea
fmull
leave
imul
push
leave
popa
lods
iret
pop
lods
pop
fimull
clc
sbb
jmp
jb
cmpsb
ljmp
dec
je
lcall
pop
or
mov
cltd
popf
or
pop
test
lods
dec
mov
adc
insl
adc
mov
sub
mov
ret
int
aad
out
adc
mov
push
add
and
sub
out
cmc
pop
fyl2x
and
push
mov
ds
xchg
inc
sbb
and
inc
out
sbb
inc
les
jns
adc
bound
mov
scas
push
adcl
fisubrl
aas
test
jb
jns
loop
cld
cmp
es
js
pop
add
int
pop
ja
pop
mov
cli
shl
pop
add
mov
xchg
lds
cs
es
rcll
test
cmpsl
push
mov
pop
fiadds
and
ror
mov
mov
fisubs
mov
xchg
jle
xchg
push
es
adc
std
or
mov
sub
das
jl
pop
push
mov
mov
mov
adc
das
jb
mulb
std
jno
inc
repnz
sbb
cmp
or
scas
xchg
adc
movzwl
sarb
sbb
and
mov
jp
dec
sbb
mov
jg
mov
rcl
add
out
loope
clc
outsl
out
icebp
sbb
sbb
pusha
daa
cmp
aad
jae
lret
outsb
inc
int3
mov
mov
push
cld
pusha
adc
ss
fcoms
mov
mov
push
inc
ffreep
rclb
lods
lock
stos
jp
sub
enter
push
decb
xchg
inc
cmp
pop
hlt
xchg
ret
jg
xchg
enter
jle
mov
mov
xor
or
xor
stos
mov
popf
push
iret
repnz
in
fdiv
adc
xchg
loop
lcall
jb
movsb
or
mov
loopne
dec
mov
cmp
popf
jecxz
mov
dec
aam
out
pop
bound
scas
cmp
mov
inc
hlt
dec
or
lods
cmp
lods
xchg
jns
aas
repz
dec
rorl
sub
or
or
jp
enter
test
pop
fstl
nop
inc
dec
sar
cmp
sub
fidivrs
jle
jle
lods
outsb
lods
add
and
adc
jmp
pop
push
lock
mov
dec
mov
bndldx
fsubrl
or
clc
xchg
inc
pop
cmpsl
mov
int
jp
add
aam
mov
sub
sbb
in
subb
sub
inc
movsl
pop
lret
xchg
enter
ds
ds
mov
and
xchg
sbb
jo
adc
sub
xchg
mov
adc
icebp
iret
inc
pop
sub
dec
out
imul
add
out
rorb
sub
cmp
out
jne
cld
mov
xor
jge
xor
mov
mov
sbb
jns
das
roll
adc
test
shrb
lods
mov
xor
and
imul
and
ss
inc
pop
in
pop
adc
std
mov
jb
shlb
inc
lock
mov
fidivs
jne
add
andb
xchg
sbb
xor
lret
and
rcll
cmp
imul
rclb
mov
in
stos
xchg
inc
jns
inc
out
lcall
adc
xchg
push
sub
in
enter
cld
push
imul
cmp
insl
mov
dec
sbb
mov
and
push
in
jl
popa
xchg
in
sub
or
xchg
sbb
mov
cld
sub
aas
cs
negl
sub
ja
mov
movb
in
xchg
fldt
pusha
push
rol
fistpl
dec
insl
cmp
insb
xchg
xchg
fwait
xor
pop
loop
and
jno
push
sti
movsl
xchg
decl
clc
jo
inc
pop
rol
xor
iret
sub
jmp
dec
and
mov
out
in
or
repz
divl
bnd
push
es
push
push
mov
pushf
sbb
rolb
jns
subl
jns
outsb
push
int3
arpl
popf
daa
mov
shlb
push
in
arpl
test
sbb
lds
mov
shll
aad
js
outsb
popa
insl
sbb
leave
xchg
xor
push
push
add
ss
loop
lret
fstp
gs
jo
mov
cmp
push
call
dec
imul
cwtl
xchg
scas
push
xor
xchg
les
fisttpll
push
pop
aaa
cmc
push
sbb
sub
rdmsr
pop
lds
jg
and
xchg
fsubl
cli
bound
fs
mov
mov
pop
cmp
jmp
xchg
and
test
mov
push
dec
xor
cmp
lret
popf
into
cltd
mov
ss
faddp
cmpsb
xor
daa
jnp
push
stc
repnz
or
jo
adc
sbb
mov
push
cmpsl
mov
add
cmp
repnz
stc
test
push
sbbb
popa
mov
movsl
hlt
mov
jnp
pop
push
aas
in
inc
hlt
loopne
ficomps
ret
je
fidivl
xchg
fists
iret
push
sbbl
fldl
push
add
rcll
pop
jns
sti
les
and
int3
pop
aas
jl
mov
sub
add
loopne
adc
sbb
ss
xchg
inc
or
or
mov
and
mov
sbb
and
adc
mov
sbb
sbb
xor
xchg
daa
lret
idivl
sti
mov
fistps
jmp
fldt
in
or
sbb
cmp
jbe
cli
test
es
mov
pop
xchg
jo
test
mov
stc
fstl
jge
ja
ds
aam
lret
inc
out
mov
dec
aaa
push
in
sub
push
and
in
add
in
inc
add
cli
adc
lds
dec
xor
imul
sbb
outsl
mov
xchg
mov
iret
lcall
jns
mov
or
inc
ljmp
cmp
push
mov
mov
mov
jae
aad
mov
scas
or
xchg
divl
push
push
or
and
jecxz
push
push
mov
inc
add
lods
repz
jns
sbb
out
xchg
jno
ljmp
pop
lods
orl
add
inc
jge
fcoml
ret
lock
push
push
fldenv
rcrl
sahf
xchg
mov
fs
jbe
cld
loope
jl
sbbb
or
cli
adc
rorl
rorl
lcall
mov
test
aam
aas
into
mov
hlt
add
sub
scas
push
fwait
in
addr16
outsl
add
sub
arpl
jmp
cmpsb
stos
jl
addr16
scas
xor
lret
pop
ja
mov
ljmp
xchg
outsl
mov
loope
es
push
inc
sbb
shlb
sbb
push
sbb
jmp
shll
and
addb
stc
inc
and
mov
fs
lock
popf
stos
jl
and
jmp
orl
arpl
lret
jno
and
arpl
stos
sbb
ret
pop
outsb
sbb
shrb
or
addr16
cmp
repnz
adc
push
inc
outsb
popf
jmp
inc
out
stos
pop
ss
test
mov
fstpl
jmp
leave
mov
rolb
mov
or
pop
or
mov
enter
xor
in
xchg
jg
sub
cmp
adc
cmp
cli
mov
bound
and
test
sahf
cmpb
lahf
xchg
sbb
int3
hlt
xchg
pusha
inc
mov
cmp
cvtpi2ps
insl
dec
stos
cs
push
arpl
outsl
add
dec
or
sbb
cmpl
arpl
rcll
adc
jb
in
loop
cld
ja
mov
or
lcall
icebp
loop
loope
mov
jne
in
out
xor
fucomip
out
mov
pop
mov
loope
aas
out
jle
dec
pop
inc
es
push
add
ffreep
xor
icebp
push
rolb
iret
cmp
insb
lcall
ret
and
jl
movnti
fwait
mov
adc
imul
stos
pushl
cwtl
dec
jns
lds
fcomps
push
mov
xchg
lea
lcall
bound
sbb
adc
dec
and
mov
lds
pinsrw
push
dec
mov
cmp
outsb
adc
jecxz
test
jmp
adc
add
lods
cmpsl
jbe
mov
mov
fildl
add
cmp
dec
mov
and
inc
imul
rol
cmp
push
cmpl
enter
push
lcall
xor
fadds
ds
int
dec
leave
movsl
pop
std
rolb
fwait
and
pop
movsl
fdivrl
dec
lret
movsl
insl
mov
arpl
mov
mov
mov
cmp
push
push
daa
out
jae
xor
adc
mov
push
sub
lea
mov
pop
xchg
xchg
adc
adcl
adc
addr16
hlt
in
and
push
js
not
xor
mov
cmp
sbb
scas
bound
adc
xor
mov
in
roll
pop
rcrb
jae
test
std
out
fwait
mov
xchg
fisubs
ja
inc
into
lods
mov
leave
std
dec
jmp
lods
test
mov
es
mov
aas
outsb
add
iret
pop
enter
mov
or
pop
jne
and
pop
icebp
sarl
test
jae
mov
fists
dec
adc
sub
push
movsb
popf
int3
pop
adc
sbb
push
or
sti
out
aad
addb
jg
sub
sbbb
xlat
ror
pusha
stos
lahf
leave
lret
inc
inc
psubd
je
jns,pn
inc
or
push
jbe
or
mov
cli
xchg
sbbb
xchg
xor
sbb
push
popa
ds
xchg
or
jns
hlt
out
sbb
push
mov
ss
ficompl
jae
das
call
push
loopne
in
rcll
lret
dec
fwait
aam
xor
popa
dec
les
lahf
insl
pop
movsb
lahf
mov
popa
jle
fs
inc
enter
sub
sarb
inc
gs
test
outsl
push
vxorpd
xor
mov
inc
inc
movsb
push
pop
lods
dec
stc
inc
cmp
cmc
or
add
pop
mov
xor
repnz
gs
loopne
xchg
int3
dec
scas
sub
dec
dec
in
out
add
dec
pop
inc
xchg
inc
cli
subb
xor
in
push
cwtl
ja
fisubrs
cmpsb
sti
lcall
xchg
pop
stos
rolb
mov
jg
in
aam
lret
jno
je
imul
insb
insb
jge
push
divl
jo
repz
rorb
rorl
ja
inc
mov
in
das
clc
loop
push
and
xor
std
dec
aas
adc
aaa
jnp
hlt
inc
lods
mov
push
and
mov
addr16
lcall
xchg
lock
mov
jle
adc
mov
dec
loopne
mov
xlat
clc
loopne
push
js
pop
push
mov
orb
ljmp
scas
hlt
dec
cmp
inc
bt
dec
and
stos
xchg
gs
sub
mov
sub
pop
xor
sub
and
or
test
dec
pop
adc
icebp
xchg
cwtl
mov
insl
call
mov
sub
scas
jp
ds
aam
inc
mov
fwait
mov
ljmp
int3
xchg
add
mov
xchg
lahf
cmp
add
mov
mov
negb
out
bswap
sub
leave
fdivrs
jmp
mov
jle
mov
cmp
test
pop
insl
fmull
and
test
pusha
and
int3
rcrl
cli
mov
repnz
dec
lahf
repz
sbb
pop
pop
or
pop
mov
jp
mov
xchg
test
ret
mov
push
cmp
mov
imul
jns
sbb
sub
dec
sbb
in
mov
xor
add
leave
in
jnp
mov
pop
daa
adc
xchg
sahf
inc
jns
push
push
mov
loopne
xor
xor
das
add
push
mov
dec
movsb
pop
jns
or
xor
or
mov
push
in
adc
cs
xchg
jl
std
fwait
jno
jnp
adc
repnz
jae
shll
sbb
ret
mov
adc
xor
test
stos
lret
mov
push
outsb
mov
xchg
jg
xchg
sub
loopne
mov
mov
cmp
push
add
out
or
into
or
inc
inc
std
lods
inc
jo
sbb
in
lret
dec
adc
jb
repnz
pop
in
pusha
inc
push
scas
addr16
xorl
ja
ret
push
jge
mov
fs
addr16
pop
mov
int
inc
imul
scas
pop
sbb
int3
and
push
xchg
hlt
jl
ret
jg
push
outsl
and
call
scas
rorl
xchg
mov
xor
jae
dec
iret
fisttps
les
pop
clc
mov
js
or
mov
adc
or
jmp
popf
gs
sti
pop
wbinvd
mov
fildl
cmc
pop
nop
jecxz
add
imul
imull
movsl
sbb
mov
push
or
mov
in
pop
loopne
pop
lcall
mov
aam
mov
stos
or
ds
and
movsb
add
rclb
mov
ss
sbb
enter
jo
sti
stc
jno
scas
inc
lcall
mov
fnsave
push
insb
je
or
pavgb
pop
and
js
pop
jb
mov
adc
sub
in
cmp
fwait
gs
pop
cmp
loope
mov
pop
sbb
inc
lcall
or
pop
ss
jmp
mov
rcrb
lea
cld
jp
push
pop
add
pusha
mov
push
dec
or
aad
sub
inc
jbe
daa
lret
cmpsb
jge
inc
out
dec
stc
push
lock
bound
call
sbb
cld
test
je
in
cmc
xchg
ljmp
test
lds
lods
inc
or
sarb
repnz
cmp
xchg
dec
add
xor
stos
int3
xchg
insb
jbe
pop
test
mov
pop
cmpsl
sbb
lahf
arpl
and
out
jmp
mov
and
aad
test
push
push
jae,pn
iret
fxch
sti
or
and
repnz
and
ljmp
insb
popa
sub
fmulp
ret
dec
scas
sub
call
cmpsl
fwait
add
push
push
dec
out
sbb
std
xchg
cmp
xor
loopne
xor
imul
jl
mov
lock
daa
xor
push
jmp
fisubl
xlat
xor
mov
pop
mov
into
jg
enter
sbb
push
sub
mov
cmp
nop
xor
shll
mov
adc
xchg
adc
xchg
jl
and
inc
lahf
ret
ret
xchg
lret
mov
xor
das
xor
in
loopne
mov
sti
xchg
dec
mov
daa
xchg
jnp
sub
andl
movsb
fs
push
adcl
sub
cs
or
xor
push
scas
jbe
fwait
mov
dec
and
xchg
xchg
bound
mov
outsl
pop
out
mov
push
lahf
push
adc
out
stc
aad
scas
mov
cmpsb
mov
cwtl
or
in
sbb
outsb
sbb
sub
adc
push
mov
cs
jnp
xchg
add
push
pusha
and
add
adc
xchg
adc
mov
mov
push
in
out
fwait
xchg
sbb
mov
xchg
movsl
sbb
mov
dec
insl
jno
repnz
insb
dec
pop
cmp
pop
sbb
fildl
pop
dec
stos
stos
cmp
add
gs
and
aas
mov
xchg
jl
pop
in
xchg
sti
adc
push
mov
mov
iret
push
fsubp
fidivs
dec
cmp
pop
lret
adc
outsl
jns
loopne
pop
out
fcoml
pushf
xchg
jno
cmpl
jg
push
shrl
sbb
cli
pop
mov
xchg
shrl
mov
js
out
dec
orb
pop
jns
lret
icebp
stc
mov
mov
adc
push
aas
mov
js
imul
jg
into
lock
lods
lods
scas
mov
xchg
in
ljmp
mov
mov
xor
mov
mov
xor
arpl
xchg
lds
jno
movsb
xorb
inc
pop
ds
and
xor
lcall
mov
insb
shlb
cmp
sub
scas
gs
jne
cmc
xor
or
fisubl
sbb
mov
in
push
popa
xor
imul
push
pop
mov
inc
mov
and
out
popf
add
es
cmp
sbb
jns
adc
fcmovb
mov
les
push
sbb
cmp
arpl
out
push
dec
xchg
mov
cmpsb
inc
jno
pop
stc
fistps
sub
mov
mov
mov
or
call
pusha
add
imul
dec
in
out
dec
js
adc
inc
xorb
xor
test
mov
sub
add
and
jl
pop
in
aad
pop
or
push
dec
bound
test
cmp
jp
test
jg
pop
adc
in
push
cmp
fsubs
push
jb
xchg
jo
sub
out
add
adc
xchg
mov
aaa
nop
fcoms
push
test
xor
ljmp
subl
loope
les
iret
xchg
test
xchg
xor
je
sbb
outsl
jl
mov
pop
repnz
and
inc
push
adc
mulb
es
inc
push
out
pop
dec
std
mov
hlt
pop
jno
out
sub
sub
sbb
filds
loop
nop
fsubrs
sbb
test
mov
dec
and
pop
fstpt
jae
aas
fwait
jae
popa
inc
fistl
repz
sti
pusha
repz
pushl
adcb
out
cmpsl
cld
lahf
das
nop
push
jmp
mov
imul
leave
and
xor
rorl
je
and
mov
lahf
pusha
cltd
out
xchg
sub
mov
sahf
loopne
mov
test
lcall
mov
test
xlat
ljmp
sub
push
popf
sub
mov
xor
jno
jle
jl
or
ret
push
pusha
jmp
add
adc
dec
pop
pop
cmp
mov
lcall
popa
hlt
out
aas
data16
and
mov
lods
mov
cwtl
sarb
dec
sub
push
jecxz
ss
call
loopne
testl
mov
in
out
jae
addr16
in
mov
cmp
xchg
push
sbb
pop
and
aas
jg
cmpsb
mov
nop
std
pop
mov
aas
mov
inc
test
dec
fwait
imul
add
ja
or
inc
and
jp
add
mov
roll
push
loopne
inc
xor
pushf
inc
mov
push
sub
mov
in
adc
adc
sbbb
xchg
cmp
xchg
dec
pop
filds
and
or
test
mov
add
or
lea
and
fsubrl
sahf
mov
fstl
cmp
xchg
or
bound
add
scas
cld
sbb
jo
add
repz
and
push
shl
hlt
inc
or
mov
nop
jnp
les
inc
inc
fadd
sysenter
movsl
push
jns
mov
in
popa
jns
cmp
mov
stos
sbb
cs
and
int
jne
xchg
mov
jle
into
sahf
xor
in
jbe
cs
or
dec
or
scas
dec
and
mov
inc
sub
bound
addr16
ret
push
mov
jmp
jp
enter
sahf
ret
mov
sub
repz
test
cmp
mulb
push
cmc
int3
scas
mov
pushf
adc
mov
adc
insb
outsb
dec
testl
out
push
push
mov
mov
and
inc
pop
mov
xor
mov
push
and
cs
ret
in
xor
push
jp
insl
push
xchg
lahf
dec
mov
lahf
xchg
inc
popa
xor
fdivrs
add
adc
mov
in
dec
pop
out
sahf
jcxz
jb
dec
scas
mov
test
inc
push
and
jge
imul
push
scas
mov
xor
sbb
imul
bound
adc
test
or
adc
jne
jmp
inc
jecxz
incl
xor
fists
out
rclb
mov
lret
hlt
mov
testb
jns
pop
jb
add
imul
sub
dec
add
in
insb
push
insl
pop
fdivrl
mov
ds
sub
clc
push
sbb
sub
call
xchg
repz
mov
ret
cmpps
pop
scas
test
push
cmp
inc
data16
mov
dec
mov
and
shrd
add
fnstenv
dec
aas
dec
or
cmp
xlat
xchg
jbe
mov
cmp
pop
push
xor
decl
in
mov
loop
jb
je
imul
push
ret
mov
repz
sub
jb
das
test
fsubrs
rorb
enter
sbb
jne
pop
or
test
loopne
les
cmpsl
xchg
aaa
mov
sub
mov
popa
mov
pop
mov
cmp
pop
dec
ja
shll
cli
jae
add
cmp
bnd
lahf
movsl
inc
sbb
jns
outsl
leave
lds
mov
aam
xchg
rorb
push
mov
pop
imul
imul
sub
loope
into
cmp
lock
pushf
mov
adc
mov
inc
sub
sbb
jne
cmp
xor
sti
hlt
ds
jne
push
sbb
pusha
into
pop
faddl
fwait
call
inc
popa
lock
sbb
cmp
pop
mov
pop
in
sarl
clc
lahf
add
bound
pusha
jbe
inc
mov
scas
lea
inc
and
cmp
repnz
test
outsb
hlt
shl
andb
or
test
mov
cmp
push
insb
cmp
sub
jns
out
inc
inc
adc
dec
sub
ss
sbb
push
iret
decb
ja
lcall
xchg
sbb
shll
std
push
pushf
jecxz
jmp
hlt
dec
add
fildl
lahf
scas
lods
mov
into
sbb
leave
inc
push
adc
jl
jge
popa
nop
mov
inc
cmp
push
xchg
xchg
push
xor
cs
outsb
dec
daa
leave
scas
repnz
idivb
sahf
int3
sub
push
add
dec
jnp
adc
push
mov
xchg
and
cld
add
enter
arpl
cmp
xor
mov
neg
pushf
adc
or
xor
cltd
push
cmp
mov
fcompl
mov
arpl
ret
cwtl
sysret
push
mov
sti
mov
pushw
pop
addr16
imul
stos
cmpsb
out
pop
movsl
push
sahf
lock
popf
stc
xchg
mov
mov
inc
daa
xchg
fisttps
xchg
stc
xor
add
fists
adc
push
jbe
adcb
incl
or
xor
and
movsl
inc
inc
jmp
pop
in
push
test
mov
push
pop
std
daa
push
mov
out
jp
fstpt
in
movsb
js
mov
insb
jns
push
loopne
sbb
xor
push
cmp
loop
inc
pop
inc
test
inc
fists
cmpsb
sbb
sahf
cwtl
fcmovnb
mov
mov
outsb
sarb
fs
fidivl
scas
pop
enter
in
cmc
xchg
xor
out
jbe
xchg
add
push
je
pop
xchg
enter
sub
sub
loopne
inc
mov
stos
xor
mov
hlt
mov
aad
pop
cmp
jle
cmp
push
fidivl
xchg
sbb
dec
jmp
add
cmp
push
push
pop
mov
cltd
cmp
jne
loop
jo
call
mov
push
pop
aaa
or
jns
fists
mov
das
jne
inc
stos
imulb
aam
mov
lods
es
punpckhdq
push
out
shr
or
dec
jge
sub
shl
stos
xor
test
pop
mov
cltd
xchg
cs
mov
pusha
jmp
cmp
shlb
jnp
jl
xchg
sahf
sub
sub
in
lahf
dec
fists
jbe
repnz
or
mov
add
inc
sti
mov
add
mov
call
sbb
dec
out
push
inc
jo
in
jne
in
icebp
mov
inc
pop
aad
daa
pop
in
inc
shll
fisttps
leave
mov
outsl
addr16
lods
test
xor
mov
jecxz
or
out
inc
aaa
int
stc
sahf
adc
int3
mov
cmc
or
imul
jmp
jl
repz
jne
lods
das
cmp
rcrb
stc
stc
aaa
dec
cmp
outsb
enter
call
faddl
xor
sub
pop
rorl
mov
not
shrl
imul
movsl
out
mov
push
andl
jge
mov
nop
and
push
adc
int3
out
imul
jne
shrl
add
shlb
es
ja
dec
mov
cmp
jle
out
dec
dec
sub
mov
cmp
jmp
mov
jae
icebp
jge
popa
pop
or
div
leave
push
loope
cld
mov
mov
xchg
or
mov
cmp
aad
mov
pop
jmp
lret
inc
pop
xor
lods
into
xor
cmp
cmp
fildl
cwtl
jecxz
ret
adc
dec
fwait
sbb
scas
pop
repnz
in
outsb
scas
cmp
sub
pop
fsubrl
cmp
inc
in
cs
mov
lret
push
rclb
add
cmp
inc
shrb
rcll
adc
out
jl
fidivrs
add
dec
imul
ficoms
push
adc
lods
dec
aaa
repnz
pop
adc
pop
insl
cmp
mov
call
dec
fwait
mov
mov
arpl
pop
pop
cmp
mov
daa
jecxz
inc
xor
cld
rcl
in
mov
hlt
out
inc
mov
inc
mov
stos
movsb
popa
cmp
int3
mov
jo
out
outsl
fstpl
xchg
and
call
aas
jp
int
mov
idivb
aad
rcl
out
decb
xor
inc
into
push
xor
mov
mov
insl
cmpsb
es
and
mov
scas
mov
xor
daa
mov
lret
xor
mov
in
test
push
adc
mov
sbb
adc
popf
and
sub
insb
imul
push
inc
jns
add
js
push
lret
repz
sub
test
popf
dec
mov
movsb
inc
mov
push
sbb
or
xor
push
filds
ds
int3
jo
add
push
icebp
push
lock
idivl
mov
inc
fstp
cli
les
out
bsr
std
jge
xor
lds
aad
xchg
test
nop
pop
dec
xchg
je
mov
lds
les
mov
dec
bound
call
sub
lods
sbb
and
xor
mov
cmpsb
cmpsl
mov
cmpsb
stc
sbb
outsl
lret
inc
pop
push
jo
pusha
adc
push
push
jmp
loop
sbb
dec
aaa
inc
shll
pop
out
aam
je
aas
call
push
mov
push
das
fs
mov
cmp
fdivrs
loope
in
mov
or
cmp
inc
dec
inc
mov
push
push
inc
push
test
cmpsl
lods
out
add
std
popa
dec
push
jp
addr16
fimuls
mov
pop
arpl
xchg
stc
je
adc
push
shlb
popa
je
int3
jmp
insb
neg
ret
rcll
cmpsl
cli
mov
in
movsl
sub
clc
adc
or
push
stos
xchg
jbe
out
outsl
sbbb
pop
mov
movsb
adc
cltd
lret
dec
jae
out
jno
iret
int
xor
push
or
sti
xor
pop
dec
or
divb
xchg
inc
addr16
int
cmp
or
add
cli
and
pop
scas
scas
aaa
pop
mov
fiadds
push
fistpl
test
xcrypt-cbc
cmpsl
xlat
faddl
xor
fwait
inc
add
xlat
pushf
xor
cwtl
add
xor
jno
cmp
pop
das
jp
aas
jg
push
shlb
mov
add
and
jge
sub
sti
pop
aaa
repnz
push
mov
push
stos
aaa
push
mov
mov
fnstcw
mov
shr
jl
sub
scas
mov
pushf
aam
in
insb
jecxz
inc
mov
adc
mov
xchg
out
pop
jno
stos
mov
adc
out
mov
gs
xor
jnp
loop
adc
std
shrl
leave
aam
arpl
scas
jecxz
cwtl
bound
mov
ficompl
xchg
xchg
fdivl
sti
xor
xchg
inc
sti
scas
leave
insb
imul
daa
sbb
adc
add
arpl
lret
adcb
mov
xchg
push
out
or
aam
hlt
pop
cmp
pop
cmp
cmp
inc
xor
stos
pop
dec
mov
xor
jmp
and
ret
pusha
sbb
mov
jp
ficoms
ljmp
pop
cmp
lods
xchg
xor
pop
jmp
fsubp
ja
test
mov
jg
inc
jl
clc
jnp
adc
adc
fwait
add
lea
and
lods
loope
jae
xchg
outsb
xlat
sbb
xchg
push
xor
push
jnp
sbb
mov
cmp
sarb
movsl
mov
xchg
sbb
xor
repnz
inc
inc
pop
xlat
mov
dec
cmp
dec
cltd
pop
sub
pop
movsb
out
cltd
stc
das
nop
xor
xor
mov
adc
dec
and
es
mov
scas
pop
data16
inc
das
sub
ret
sbb
das
in
jbe
cwtl
data16
jle
outsl
adc
lea
fisubrl
xchg
ljmp
inc
push
mov
cmpsb
sbb
int3
push
inc
sbb
mov
jbe
and
mov
pusha
gs
mov
pop
cmp
jb
fptan
xchg
add
shrb
add
mov
jne
or
in
popa
adc
aaa
cmp
mov
push
or
push
or
mov
pop
mov
add
and
pop
fisttpll
mov
repz
les
test
rcrl
js
loopne
addr16
sbb
adc
aam
clc
outsb
rcrl
pop
jge
int3
sbbl
in
mov
es
pop
inc
inc
jno
mov
dec
adc
cld
sub
sahf
sbb
xchg
mov
les
jb
out
mov
push
mov
testl
mov
ds
aam
xchg
mov
pand
or
sti
and
out
jnp
add
out
or
mov
stos
push
xchg
pop
push
mov
ret
test
push
sbb
aad
inc
mov
rorl
mov
insl
cmp
repnz
pop
push
pop
jmp
pushf
and
mov
popf
cmp
imul
and
fucomip
ret
int3
repz
rcrl
mov
inc
int3
ljmp
imul
jp
cmp
adc
pop
add
dec
sub
cmp
imul
iret
dec
jae
mov
mov
lret
rcll
test
out
sub
or
insl
mov
insb
dec
push
outsl
pop
lea
jle
out
test
rolb
or
leave
cmp
pop
fcmovbe
jmp
aam
leave
rcl
movl
lds
pop
jp
scas
pop
test
fcmove
sub
mov
mull
addr16
cmc
dec
dec
cmp
fstpl
add
cmp
sub
mov
out
ret
addr16
std
lcall
ror
dec
into
daa
cmp
popf
xchg
pop
jmp
dec
cltd
aas
cmc
out
stc
dec
push
xor
mov
test
lahf
movsb
test
jae
mov
mov
pop
fsubs
inc
ret
ror
pop
mov
ret
lret
shlb
cmc
les
or
shlb
scas
mov
pop
sbb
in
add
sbb
adc
pop
jns
cld
addr16
jge
icebp
xor
cmp
ss
ret
gs
ds
cltd
mov
loop
mov
arpl
testl
xchg
inc
inc
pop
js
inc
xchg
jl
push
rolb
scas
dec
jl
lcall
adc
and
dec
scas
dec
scas
std
data16
cli
int
scas
ja
pushf
ljmp
sbb
mov
mov
out
aaa
ss
xchg
aad
push
mov
int3
les
sbb
lret
out
aaa
adc
loopne
pop
dec
lea
test
push
lcall
addb
xchg
idivl
push
adc
lret
subl
in
imul
and
pop
mov
pop
in
mov
dec
cmp
xchg
or
or
iret
iret
add
mov
cmp
aas
lret
ja
xlat
jle
xor
lds
and
stc
stos
pop
mov
dec
push
adc
call
pushf
add
add
sub
adc
rolb
pop
inc
xchg
cmp
aas
sbb
adc
iret
add
jne
sbb
lret
mov
and
fcoml
mov
push
addb
sarb
clc
jne
out
mov
das
push
jmp
jge
and
sub
add
out
mov
push
loope
inc
mov
pop
xchg
popa
jne
mov
roll
rcrl
xchg
mov
lods
or
ljmp
in
cmp
lds
in
sub
adc
and
dec
lahf
pop
enter
jnp
xchg
mov
ljmp
int3
jae
push
sub
xor
fisubl
hlt
mov
in
xor
xchg
aas
in
leave
and
inc
imul
mov
xor
jg
inc
int
sbb
fbstp
xchg
dec
sbb
inc
clc
std
ss
pop
movsl
outsl
bound
movsl
mov
cmp
inc
mov
pop
add
mov
jae
xchg
fsubrl
pop
or
and
mov
add
xor
inc
sub
inc
int
ss
arpl
fld
inc
sbb
xchg
popf
push
and
jns
nop
jns
mov
xchg
lock
pop
or
enter
jge
xchg
sub
sti
mov
js
push
mov
push
notl
int3
mov
in
add
xchg
outsb
int3
xchg
mov
imul
adc
iret
and
std
stc
movsl
stc
push
jne
fs
stos
xor
ljmp
loopne
mov
rorb
pusha
scas
sub
inc
aad
push
xchg
test
gs
jo
sti
scas
jp
add
push
insb
lds
jmp
movsl
fdivs
xchg
cmc
scas
fildl
cmp
inc
push
dec
lret
or
mov
jmp
mov
pusha
loopne
stos
aam
stos
aaa
shr
mov
lock
cmp
outsb
sbb
ret
xor
aas
cmpb
or
sahf
jmp
xor
jno
sub
mov
mov
push
sbb
inc
aam
push
mov
push
xor
sbb
sub
fmull
add
mov
dec
xor
cmpsl
and
hlt
js
test
test
mov
icebp
daa
dec
mov
xor
rolb
push
inc
mov
xchg
sub
aam
jbe
jp
inc
jg
or
repnz
pop
data16
repnz
and
push
gs
jnp
xchg
cmp
cmp
loop
jmpw
jbe
pop
add
pop
movsl
pop
pop
pop
shlb
lock
ds
aaa
jle
and
xchg
add
xor
or
mov
in
dec
xchg
std
icebp
data16
pop
mov
icebp
outsb
outsb
xchg
jecxz
call
pop
dec
cld
push
mov
mov
fwait
andl
or
xchg
sbbl
scas
pop
inc
pushf
adc
inc
sbb
xor
jbe
lods
das
mov
xor
idivl
push
dec
roll
sub
pop
sbb
or
xor
lods
mov
popf
mov
add
lock
pop
aam
data16
cmpsb
in
cltd
sbbb
push
and
in
add
pop
inc
pop
andl
mov
fwait
outsl
nop
xlat
mov
lods
xchg
call
push
ret
adc
cmc
in
ljmp
shrl
inc
mov
pop
or
dec
xor
enter
arpl
dec
leave
mov
jo
pop
movsl
inc
dec
ljmp
mov
ja
add
cli
clc
xchg
out
mov
movb
push
ljmp
dec
outsb
mov
xchg
enter
cmp
sub
imul
repnz
cs
das
mov
js
dec
pusha
mov
loop
inc
push
ljmp
xchg
cltd
jge
daa
xor
fucom
fidivs
push
lret
and
dec
loopne
sbb
cmovg
in
mov
fsubrl
sub
in
scas
int3
mov
inc
or
cmp
leave
aad
add
lods
mov
not
push
pushf
sub
mov
and
lock
in
fcoms
add
jo
and
inc
xchg
jmp
dec
mov
dec
mov
and
pusha
and
arpl
mov
adc
push
dec
push
pop
xchg
out
xchg
xchg
or
movsb
loope
scas
les
fdivl
mov
sub
pop
nop
fcomip
lcall
add
jmp
out
dec
aad
ds
sub
je
cld
leave
lock
sub
mov
imul
shl
shl
test
out
mov
and
imul
clc
scas
push
inc
out
mov
int3
stc
outsl
adc
out
push
fmull
push
jecxz
mov
addr16
mov
addl
cmpsb
fcompl
pop
sub
add
pop
pop
aaa
pop
imul
aad
mov
les
or
pop
push
out
jp
addr16
adc
jbe
sbb
xor
or
fsts
sbbb
lcall
xchg
aam
mov
jmp
aam
pop
push
imul
or
add
push
sbb
lock
call
cmp
adc
and
sbb
mov
rolb
push
mov
sbb
dec
ret
push
pop
jg
imulb
push
add
jecxz
pop
repz
and
and
test
dec
imul
and
sbb
xor
cmp
pop
push
lret
pop
rorl
dec
jle
and
mov
push
jp
out
push
in
mov
xchg
or
ret
add
xchg
jl
push
sbb
mov
out
and
lcall
or
arpl
shlb
divl
sbb
int
or
mov
sbb
daa
mov
mov
jnp
shl
dec
xor
pop
add
jp
test
mov
sub
adc
lods
xchg
out
sub
notl
push
and
mov
andl
xor
dec
ljmp
and
add
cmpsb
insl
adc
jge
mov
scas
ds
sbb
cs
cltd
pop
insl
push
add
inc
pop
jns
pop
add
sar
mov
fmuls
mov
jns
cmp
lods
outsb
scas
call
xchg
inc
call
andl
daa
das
aam
sub
xor
mov
cs
mov
clc
mov
sub
mov
pop
ja
jbe
inc
push
cmp
mov
xchg
add
into
mov
cmpsb
aas
in
aad
scas
imul
xchg
sahf
push
mov
stos
and
jne
jb
mov
xor
cmp
ja
nop
and
xchg
pop
sbb
add
sbb
xchg
jbe
out
in
leave
insl
lods
lcall
add
es
xor
aam
fldt
mov
icebp
lea
scas
test
cmc
adc
or
lret
cmp
add
adc
bound
decl
ljmp
out
and
or
adc
lods
jmp
ss
out
sbb
or
sbb
fs
inc
mov
ret
stos
push
ljmp
jg
bound
popf
je
shrb
out
mov
jp
add
enter
and
loop
mov
mov
jle
movsl
das
sarb
and
sbb
add
push
insb
and
xchg
mov
in
icebp
in
mov
xchg
shrl
lcall
dec
jle
cmp
and
sbb
xor
pusha
imul
cmp
inc
ret
icebp
dec
xchg
sahf
repnz
mov
aaa
movsl
repz
cmpsl
xchg
ja
out
arpl
xlat
rorb
or
pop
rclb
push
std
out
out
aam
repnz
gs
pop
and
push
pop
and
scas
push
shl
arpl
or
push
daa
mov
add
mov
or
pop
push
test
add
int
js
movsb
ljmp
mov
sbbl
lahf
xchg
popf
imulb
push
test
ror
outsb
push
inc
mov
pusha
pop
mov
mov
test
in
inc
sub
fldl
jmp
in
and
mul
sbb
sbb
fcmovne
jmp
cmp
mov
lods
jmp
cmp
jmp
pop
xor
adc
lods
and
xor
out
fidivs
clc
or
mov
icebp
adc
add
adc
sbb
cmp
lock
sti
test
insl
xor
daa
push
jge
add
in
fisubl
sub
mov
fwait
push
mov
call
int
or
lcall
jo
push
cmp
ss
sub
push
xchg
rorb
jbe
fisubrs
ja
mov
xor
jmp
dec
stc
push
or
ljmp
faddp
xlat
sub
adc
or
mov
push
arpl
push
test
dec
inc
mov
mov
jne
and
out
std
cmp
jno
popa
nop
mov
subl
xchg
xor
dec
xlat
lods
xchg
jge
sbb
mov
push
add
cmpsb
inc
xchg
or
sarb
les
pop
adc
push
mov
enter
add
fdivl
push
sbb
sbb
inc
or
jmp
std
mov
add
mov
test
sahf
sbb
and
jle
pop
cmp
addl
pusha
pop
adc
push
int
pusha
pop
mov
pop
cmp
xchg
js
jg
emms
mov
pusha
dec
addr16
bound
ljmp
shll
imul
aas
daa
pop
push
pushf
scas
lock
mov
in
nop
out
into
stc
cmpsb
inc
or
inc
mov
rcrl
adc
add
xchg
and
in
addr16
aaa
sbb
dec
mov
push
sub
or
cmpsb
adc
out
mov
faddl
nop
jp
hlt
jno
inc
adc
sahf
xchg
lret
jp
mov
push
mov
jno
push
movsl
xchg
movsb
outsl
adc
jbe
pop
enter
pop
mov
shll
dec
test
testb
xor
sbb
sub
fists
jecxz
xor
xchg
dec
mov
push
push
insb
or
add
cld
loop
mov
jge
imul
int3
cmp
sub
xor
stos
adc
cmpsl
inc
pop
jb
jle
dec
push
int3
idivl
das
push
xchg
adc
rolb
ret
addb
je
push
fs
sysenter
cmp
bound
mov
dec
mov
jbe
imul
cli
or
aam
daa
inc
sub
mov
rcr
cld
jle
or
sub
test
lret
inc
jae
stc
lock
gs
jmp
pop
sub
or
pushf
cmc
aaa
cld
sub
sub
dec
pop
lods
inc
pop
std
or
clc
xlat
fistps
jmp
push
jb
testl
jno
xlat
arpl
scas
xlat
addb
adc
sub
out
stc
push
in
fmul
in
js
xor
push
sti
push
add
jp
aad
mov
dec
push
rorl
pop
iret
jmp
dec
add
adc
cmp
or
inc
std
call
mov
push
stos
lds
je
fidivs
cmp
shll
sub
push
mov
stos
sub
push
cmp
mov
or
std
fidivs
pop
call
popf
es
cld
xchg
cltd
mov
and
leave
and
mov
or
push
fs
jnp
xor
ljmp
jmp
stc
aaa
imul
or
and
hlt
cld
cmpsb
cmp
rcr
aas
call
repz
push
dec
repnz
fsubl
mov
sbb
sbb
test
mov
push
movsb
sbb
sbb
add
inc
push
sub
and
cmp
mov
inc
xor
rol
movaps
or
adc
aad
lcall
lahf
ss
insl
xor
aam
dec
mov
jbe
jecxz
frstor
inc
cmp
dec
adc
loope
fs
xchg
mov
mov
icebp
incl
sbb
dec
add
push
or
add
call
out
adc
hlt
dec
or
in
mov
ror
sbb
cmp
push
xchg
mov
mov
popa
push
push
stc
or
or
sub
mov
cs
cmpsb
rclb
loope
push
stos
cwtl
sub
adc
fcoms
mov
daa
icebp
mov
cmp
pop
jle
jmp
jle
mov
popa
icebp
aad
mov
fnstsw
aad
inc
inc
sbb
jbe
and
hlt
int3
jecxz
sti
aas
mov
loope
mov
xchg
sbb
adcb
movsb
psrlw
rclb
ja
jo
sahf
and
and
test
pop
push
jle
or
or
lret
loope
mov
or
sub
aam
pop
ja
mov
cmp
add
add
sbb
mov
xchg
jp
cs
shll
cli
sub
mov
std
inc
ja
lods
adc
in
jo
mov
push
imul
pusha
sub
pop
or
or
push
push
sti
aad
test
add
jle
pushf
pop
cmp
xorl
in
test
mov
mov
aam
aas
dec
popa
push
out
xlat
fsubs
call
and
orps
mov
adc
stos
test
adc
fdivl
inc
pushf
adc
sti
mov
add
mov
push
insb
fisttpl
int3
mov
testb
les
loope
xchg
adc
loope
popa
xor
aad
test
and
pop
in
jge
jmp
push
xor
stos
hlt
mov
mov
int3
xchg
pop
jne
or
mov
js
mov
incb
pop
stos
sbb
xchg
imull
xor
ror
mov
pusha
rclb
lds
cmpb
jns
aam
mov
js
iret
push
fisubrs
adc
cld
test
ret
fstl
sbb
aas
cmp
nop
jp
mov
js
mov
ret
faddl
lahf
movsb
sbb
jne
dec
sub
in
sbb
je
mov
mov
mov
or
test
mov
pushf
mov
scas
scas
fisubrs
jne
pop
cmp
pop
test
xor
mov
shrb
lock
das
aaa
add
add
adc
mov
cmpsb
xor
jecxz
shr
repnz
lock
test
add
jle
je
aas
and
xlat
inc
ds
jns
or
nop
dec
jnp
nop
leave
jnp
in
outsb
or
jno
stos
lahf
std
add
adc
cmp
lods
and
and
dec
fildl
add
pop
cwtl
pop
leave
inc
cmpl
int3
gs
add
or
add
ret
leave
and
bound
aad
hlt
inc
lods
mov
jmp
jp
sbbb
out
fdivrl
scas
push
out
pop
push
fldl
insl
leave
xchg
cld
movsl
sahf
jnp
mov
mov
adc
lret
pushf
xchg
mov
mov
jno
divl
xchg
lret
adc
cmp
inc
lock
fsubl
cmpsl
scas
jecxz
loope
flds
lahf
xor
loop
cmp
lods
jbe
fcomps
icebp
mov
jns
jne
push
mov
addr16
or
adc
lcall
mov
or
jne
inc
aad
push
adc
rcl
rorl
loopne
sbb
stos
mov
subb
mov
xor
scas
in
mov
leave
dec
jecxz
test
sbb
jbe
cmp
ficomps
mov
add
cmp
mov
or
fsub
stc
aad
cmp
sbbb
test
daa
xor
push
mov
mov
out
mov
and
mov
jo
popf
xor
inc
rorb
inc
test
arpl
jnp
xlat
int
cmc
adcl
pop
xor
aaa
xchg
loope
clc
enter
inc
divps
and
pop
pop
daa
test
idivb
sar
xchg
inc
and
inc
xchg
insb
add
js
mov
pop
in
or
and
ja
das
xchg
sarb
mov
fcoml
cmp
rcrl
mov
cmp
rorl
push
sub
daa
sbb
adc
or
xchg
loopne
dec
je
test
pop
shrb
ljmp
fildll
or
adc
xor
sbb
mov
mov
pop
or
push
fs
jge
shll
cmp
or
in
or
lds
rcll
out
push
mov
aad
outsl
pop
pop
inc
push
cwtl
push
adc
js
push
ss
and
idivl
lods
push
int
fiadds
rorl
adc
nop
dec
in
lahf
jb
or
adc
gs
and
push
in
imul
pop
mov
ss
mov
leave
mov
push
shrl
mulb
cmp
in
lds
and
pop
and
jo
add
push
negb
sub
inc
add
or
push
adc
xor
bound
fdivs
pop
gs
push
sbb
popl
jne
xchg
dec
jb
xchg
jl
lahf
jbe
sub
in
fcomip
dec
jle
inc
pop
fwait
cmc
xchg
neg
int3
shll
pop
ret
insl
and
mov
ret
lea
ss
push
ljmp
push
cld
out
add
xchg
adc
pop
insl
cmc
xor
pop
shlb
imul
outsb
ds
fs
dec
call
shl
inc
cmpb
cmp
and
sbb
pop
xchg
lret
pushl
add
loop
mov
and
xor
xchg
gs
jmp
add
call
cmp
int
test
and
jbe
lret
mov
xchg
mov
mov
adc
into
leave
xor
jne
rclb
mov
dec
mov
dec
lock
mov
or
and
and
mov
add
push
xchg
mov
sub
ficomps
popf
sbb
test
add
jae
xchg
movswl
iret
jl
add
cltd
iret
cli
inc
test
sbb
stos
pop
mov
std
fistpll
pop
inc
dec
loope
mov
pop
in
sub
pushf
lds
and
mov
lret
in
dec
adc
and
sub
mov
repnz
shl
dec
popa
nop
inc
lret
subb
jl
lods
sbb
sti
mov
mov
xchg
mov
mov
stos
jecxz
daa
mov
adc
in
mov
xor
and
mov
lahf
cmp
mov
cmp
outsl
adc
xor
aaa
out
notb
xor
ret
decl
jecxz
stc
jp
adc
rcrb
add
xchg
and
and
imul
out
mov
dec
mov
and
aad
dec
testb
or
adc
sub
inc
sub
lods
pop
push
pop
stos
jge
xor
sub
pop
cmpsb
push
movd
cs
aas
mov
cmpsl
jne
jns
cmp
das
test
insl
jb
ljmp
pop
rol
test
fistpl
clts
lea
cltd
dec
orl
cmp
mov
cld
jne
popf
jmp
pop
mov
inc
pop
sub
dec
pop
stc
je
adc
ja
lret
mov
mov
shl
cld
lock
inc
adc
pusha
loopne
test
mov
and
movsl
ljmp
imul
hlt
ljmp
jp
jl
mov
subb
xor
xor
inc
test
add
out
shrl
and
fcmovne
sti
adc
mov
adc
mov
or
lock
in
adc
xor
mov
push
fwait
leave
pop
sbb
repnz
pop
aaa
addb
iret
inc
shl
jmp
inc
inc
cmpsb
idivl
inc
jo
push
cli
pop
shr
in
mov
mov
sub
xor
dec
pop
or
adc
jno
jle
mov
push
or
and
sub
and
inc
push
add
in
dec
push
fildll
jmp
inc
dec
fdivrl
mov
xor
pop
fdivrl
clc
sbb
ja
and
nop
jno
inc
hlt
shll
repz
cmp
sbbl
mov
lods
stos
cmp
not
test
insb
mov
cmpsb
dec
push
lret
dec
adc
add
jl
xchg
mov
scas
dec
xor
mov
push
lock
jg
lods
loop
push
cli
loope
cmp
test
out
mov
sbb
arpl
mov
mov
jno
es
xor
xlat
add
inc
lods
scas
sbb
ja
cmp
mov
in
lock
std
and
mov
mov
jns
lcall
push
jb
xchg
add
mov
push
idivb
and
dec
iret
cwtl
in
fidivl
push
or
loop
in
jmp
adc
mov
jge
cmpsl
pop
dec
aas
sub
xchg
xor
call
xchg
andl
inc
mov
inc
xor
pushf
pop
or
arpl
out
sbb
push
imul
cmpsb
idivb
loopne
jge
and
jecxz
mov
jbe
imul
mov
mov
leave
dec
pop
jge
loop
mov
xor
and
mov
into
lcall
or
jle
mov
cwtl
iret
add
addr16
mov
inc
mov
lcall
jb
or
mov
lret
loope
dec
movsb
mov
leave
icebp
pop
push
hlt
xchg
push
inc
pop
cmp
inc
lds
xchg
xchg
lcall
xchg
xchg
shl
push
push
les
aad
cmc
push
mov
and
test
fidivs
add
and
mov
rorb
sub
rolb
repnz
in
fbstp
out
in
loop
mov
sub
adc
jnp
mov
dec
mov
inc
lret
enter
cmp
div
mov
fdivrl
adc
mov
test
xchg
or
dec
adcl
call
jmp
pushf
fisubrs
push
lods
dec
dec
cmp
fdivrl
mov
mov
data16
js
push
mov
arpl
shll
pop
outsb
insl
insl
test
cmp
fsts
movsb
pop
sti
sar
addb
fists
add
push
pop
movsb
adc
cmp
mov
push
pop
add
fsubp
xor
cli
lock
mov
data16
sbb
mov
notb
cmp
sbb
lds
rcrl
pushf
cmc
cmc
sti
push
mov
sub
pop
dec
dec
sbb
mov
xor
iret
ds
movsb
mov
out
shlb
repz
pop
sahf
push
xor
stc
pop
ds
and
gs
fbstp
stos
add
mov
dec
push
pop
sarb
pusha
leave
movsl
shll
fisttps
pushf
roll
ret
std
popa
sub
in
jg
xchg
sbb
cmp
xchg
les
ret
ljmp
mov
and
push
xor
gs
and
mov
push
pop
shlb
pop
mov
prefetcht1
inc
and
inc
pop
out
xchg
jo
or
fs
movsb
sub
pop
inc
loop
cli
mov
fwait
lea
mov
scas
aad
xlat
dec
mov
pop
jo
cld
inc
rol
sahf
inc
lret
stos
inc
sub
int3
sarb
push
inc
cli
pusha
mov
fwait
jge
adc
or
cmp
mov
inc
dec
bound
sub
cld
adc
push
mov
jle
ja
adc
jl
jmp
xorb
bt
mov
cmpsb
mov
dec
jle
sahf
out
pusha
ror
xor
cmpsl
adc
cld
movsb
pop
mov
xlat
mov
popf
adc
mov
out
or
out
mov
ret
cwtl
cld
stc
xchg
orb
out
movsl
mov
ret
ret
and
fcoml
push
push
xor
jle
mov
mov
pop
pop
push
jne
xlat
inc
stc
adc
push
popf
sub
mov
fadds
mov
inc
jns
movsl
push
jbe
pop
int3
push
insb
push
fidivrl
hlt
inc
cmp
fwait
add
mov
and
mov
jg
adc
std
ret
aaa
popa
int
or
leave
rcr
inc
sub
addr16
in
mov
lret
push
ds
inc
sub
je
mov
add
dec
mov
cmp
movb
loopne
ljmp
fwait
cmp
xor
addb
jno
push
cmp
inc
or
or
arpl
test
pop
xchg
xor
add
bound
lret
mov
repnz
andb
and
mov
jno
cmpsl
push
sti
and
and
in
mov
jle
mov
inc
and
push
mov
gs
into
mov
loope
adc
adc
mov
lock
inc
std
sbb
adc
xor
sbb
sub
scas
mov
xchg
push
repnz
pop
outsl
leave
lret
inc
dec
adc
int
in
addr16
pushf
push
fldcw
lret
in
test
orb
dec
scas
out
or
or
add
clc
dec
dec
fidivrl
ja
adc
scas
stc
xor
je
or
addr16
sarl
add
xorl
xor
jp
je
mov
adc
shlb
xor
push
inc
and
jle
movsb
xchg
and
mov
sbb
cmpsb
mov
xchg
fdivs
push
pop
iret
lock
scas
into
popf
test
sbb
sub
ficompl
and
dec
sub
push
xlat
nop
imul
sbb
sahf
out
out
mov
xor
out
testl
adc
adc
xor
sti
in
data16
out
push
imul
push
subb
xor
cltd
inc
mov
push
mov
cwtl
mov
mov
lret
dec
int
test
or
jae
sbb
fisubrl
enter
out
xchg
add
dec
dec
out
adc
mov
push
std
dec
test
push
and
dec
add
mov
xor
add
dec
bound
push
cmpsb
shl
pop
in
ds
popf
mov
cmp
inc
ret
jo
add
mov
shll
shlb
adc
rclb
adc
adc
in
mov
int3
xor
loopne
sub
lret
int
inc
adc
lea
scas
sbb
jg
sbb
pop
icebp
jae
mov
mov
ror
push
scas
shrb
lock
push
es
iret
inc
out
lock
in
xorb
in
jl
adc
fisttpl
and
sub
cltd
or
jg
ljmp
lods
dec
cmc
jno
inc
and
dec
imul
jmp
stos
sub
out
add
and
test
sbbl
jae
fs
leave
cmc
xchg
jmp
adc
daa
sub
jo
arpl
jbe
push
xchg
aaa
dec
js
xchg
stos
outsl
push
cltd
dec
cmc
inc
mov
push
aas
adc
je
mov
push
cltd
fadds
sub
jnp
sub
dec
out
inc
dec
aam
pop
jmp
cmp
mov
jbe
test
push
stos
adc
pop
pop
push
mov
xor
ror
xlat
cltd
xor
mov
jmp
les
xchg
push
scas
dec
loopne
pop
xchg
lds
dec
or
jl
sysret
loope
or
adc
pop
insl
cmpsl
jno
jae
ss
jae
cmp
enter
xchg
daa
movsb
lret
adc
sbb
arpl
popf
cli
outsb
lods
imul
mov
outsl
test
fnsave
insb
gs
mov
movsb
push
push
test
jne
adc
sub
or
shrb
mov
mov
scas
pusha
shlb
fiaddl
add
dec
jbe
dec
out
adc
jge
lcall
mov
mov
bound
jecxz
inc
int
repnz
cmpsl
insb
sti
fdivrl
cld
sbb
mov
je
or
adc
mov
mov
loop
mov
push
mov
cmp
add
sbb
pusha
push
clc
ss
std
lcall
mov
push
jecxz
push
jmp
out
push
mov
inc
ret
xor
mov
in
gs
and
test
shll
mov
mov
xchg
aam
das
adc
loop
nop
sbb
ret
shrb
jb
rolb
out
ret
mov
lods
popf
and
xor
mov
pop
and
ret
movsb
into
pop
jp
dec
shlb
dec
daa
push
mov
ja
jmp
mov
inc
mov
push
xchg
xchg
jb
jl
dec
iret
lods
dec
lcall
stos
icebp
mov
iret
jno
mov
test
scas
add
mov
cwtl
test
sbb
loop
imul
pop
adc
imul
cmp
inc
jmp
lret
cmpsl
add
mov
fisttpll
outsb
leave
and
xor
sub
mov
cwtl
jb
enter
lret
popl
inc
sub
cwtl
and
dec
xchg
mov
push
mov
lahf
cmc
test
repz
dec
rolb
pop
bound
les
mov
push
mov
movsb
mov
stc
and
int3
data16
orl
mov
gs
ja
mov
push
pop
mov
pop
mov
or
pop
inc
int
cld
mov
pop
mov
cld
test
mov
pop
pop
xor
and
mov
stos
xchg
xor
test
flds
arpl
push
xor
jmp
mulb
or
inc
xchg
mov
out
lods
mov
xchg
lahf
leave
nop
pop
xchg
cwtl
cwtl
push
sbb
leave
cmpsl
clc
cmpsb
add
jno
inc
ja
mov
pop
xchg
lea
jmp
icebp
push
stos
cmp
pop
and
int
pop
inc
jne
jg
ret
add
cmp
sub
pop
add
in
inc
repz
jno
stc
negb
shr
cmpsl
dec
cwtl
push
cmp
xor
pextrw
xchg
imul
rorl
jle
cli
xchg
sbb
and
scas
and
je
lret
mov
ret
add
enter
dec
jge
sbb
out
dec
dec
popa
ret
dec
fcmovbe
jmp
pop
add
xor
imul
jno
cmp
lea
jns
in
sub
adc
int3
arpl
inc
lret
in
in
pop
sub
add
mov
cmp
mov
sti
cmpsl
push
cmp
push
repz
mov
repnz
mov
adc
jno
pop
xchg
fwait
adc
push
insl
cltd
mov
xor
xorb
mov
inc
fstpl
jg
mov
or
or
cltd
js
sbb
pop
lock
mov
inc
adc
sarb
aam
mov
cmpsb
sub
shrl
ret
nop
cmp
fisubrl
mov
jmp
addr16
les
xor
sar
pushf
out
cmp
movsl
pop
data16
mov
add
push
mov
pop
mov
loope
je
adc
je
imul
int3
add
xchg
mov
in
leave
test
and
dec
insb
inc
adc
imul
fldt
push
inc
and
repz
stos
out
and
dec
loop
mov
jae
insb
cs
jae
mov
xor
int3
leave
mov
cmp
rcll
sub
push
and
mov
xchg
js
inc
jge
aaa
mov
mov
adc
inc
scas
das
add
mov
std
mov
jns
sti
and
cmp
inc
add
dec
sarb
mov
inc
shl
mov
lea
aam
in
or
xlat
xor
ja
cmp
pop
push
cmp
lcall
daa
push
mov
jge
jmp
and
mov
xchg
lahf
rcrl
xchg
inc
jb
lret
fwait
arpl
pop
test
mov
enter
mov
xchg
andl
pusha
sti
outsl
fists
xor
dec
inc
adc
push
inc
jecxz
pop
imul
je
adc
push
xchg
sbb
mov
arpl
mov
ja
popa
and
jmp
andb
or
mov
fsubrl
pop
mov
mov
sbb
cmp
ljmp
sbbb
les
push
xor
adc
add
rolb
xor
movsl
and
add
mov
xor
fdiv
je
jp
dec
out
test
rcrb
fisubrl
cld
or
push
dec
sar
hlt
mov
es
or
ljmp
sub
xchg
lods
ds
mov
rcrb
js
shlb
lds
mov
lds
imul
or
movsb
jge
pop
aaa
push
rorl
jae
pop
ficompl
jmp
inc
in
add
adc
mov
pushf
popf
test
scas
xchg
jne
inc
ficompl
movzwl
loope
fists
cmpsb
adc
push
jo
pop
adc
sahf
jae
pop
and
sub
jecxz
cmpsl
mov
ret
popf
sub
into
sbb
ja
pop
lcall
adc
jl
scas
mov
push
xchg
mov
ret
out
in
jle
xor
pop
adc
int
into
and
pop
bound
maskmovq
testl
add
and
jg
dec
jne
sbb
xor
in
mov
push
notl
push
ret
clc
pop
cmp
mov
leave
sbb
out
mov
imul
mov
adc
popf
ljmp
fisttps
jl
lret
mov
dec
push
or
cmp
nop
mov
jl
stc
push
daa
push
adc
adc
sti
loop
xchg
icebp
test
sbb
xchg
testl
add
jmp
testb
or
cli
mov
pop
push
shl
and
test
xor
pop
xchg
pop
jmp
lcall
mov
pop
movsb
imul
mov
add
xchg
jnp
adc
mov
inc
sti
and
inc
or
dec
sbb
sbb
or
sub
mov
sbb
jl
pop
movsb
int
imull
ror
sbb
pop
xchg
lcall
and
fidivl
test
iret
pop
inc
aad
jne
out
test
sub
mov
enter
cmp
hlt
leave
insb
mov
jp
test
out
filds
ss
lahf
dec
insb
mov
dec
jns
xor
pop
jb
test
movntps
sbb
add
cmp
mov
jo
lods
or
sub
cld
daa
sbb
and
sub
pop
mov
sbb
push
into
mov
sub
iret
js
push
repz
cmp
xchg
clc
mov
stos
lods
dec
test
iret
shrb
aad
adc
ja
jbe
ja
int
cmpl
inc
dec
push
and
add
cld
les
divl
xchg
xor
loope
shll
inc
mov
adc
jge
in
and
xchg
leave
dec
lea
mov
cmpsl
xlat
push
adc
and
xor
bound
pop
push
push
mov
rcll
cltd
sbb
int3
ss
or
or
inc
dec
xor
dec
mov
xor
jmp
nop
fwait
mov
add
cltd
repnz
cwtl
adc
dec
ljmp
iret
js
push
dec
cmp
in
adc
in
add
test
cmp
mov
jmp
pop
cld
adc
sbb
mov
mov
xchg
popf
xor
cmp
mov
fadds
cmpsb
cld
xor
sbb
push
and
repnz
or
pop
mov
sub
mov
or
in
mov
push
push
xor
ljmp
js
int3
inc
pop
mov
imul
sbb
imul
push
loopne
call
call
cs
jo
js
push
pop
call
adc
out
add
lret
cli
in
pop
push
push
fmull
das
pop
popa
rcl
insl
movb
push
add
lods
leave
xchg
pop
sub
shll
lock
lretw
fnstenv
push
push
std
stos
xor
mov
sahf
mov
imul
mov
add
pop
insb
orb
shrb
lret
push
insb
inc
movsb
loopne
mov
shll
cltd
push
fcoml
cmp
jae
xchg
and
scas
fstps
loop
sarl
insb
adc
rol
dec
inc
inc
mov
xor
imul
and
movsb
popl
mov
out
mov
push
mov
sbb
jecxz
jg
sbb
cmp
movsb
mov
push
fstpl
dec
inc
jno
fldcw
daa
and
push
leave
gs
mov
test
add
outsb
pop
jp
aas
pop
fwait
leave
adcb
xor
in
jge
leave
xor
cld
out
mov
lret
jnp
outsb
stos
rorb
push
insb
push
icebp
push
mov
repnz
push
sbb
rorl
sbb
out
cmp
and
pop
fwait
pop
or
imul
notb
pop
es
mov
pusha
mov
idivb
and
mov
dec
mov
push
sub
addr16
cmpsl
into
push
mov
iret
cmp
push
sbb
lock
inc
jo
out
sbb
or
popf
cmp
add
push
mul
inc
stc
mov
push
ret
iret
icebp
mov
stc
out
aam
push
movsl
cpuid
outsl
pop
aas
push
and
std
jmp
mov
iret
and
fstpt
imul
dec
sbbb
mov
sti
inc
int3
in
pop
outsb
xchg
mov
push
outsb
or
xor
sbb
mov
pushf
add
cmp
xchg
shl
jo
outsb
into
out
inc
sbb
popf
out
fildll
cmp
push
jmp
push
pusha
lods
mov
pop
sub
mov
dec
add
mov
loop
stos
insl
dec
dec
mov
movsb
cmp
int
dec
jno
ljmp
or
sub
imull
inc
or
lret
or
and
out
pop
aaa
shrl
jb
inc
in
push
sub
aad
mov
test
inc
lret
arpl
lods
js
mov
jno
addr16
lock
outsb
push
xor
aam
sbb
push
scas
call
or
inc
mov
test
jle
inc
push
cmc
xchg
jo
imul
xor
sub
enter
pop
cmp
out
bnd
or
add
jne
shrl
adc
cmp
repz
daa
aaa
adc
out
in
aam
fists
icebp
dec
das
insl
test
aam
sub
add
and
outsb
xor
ret
sub
jmp
pop
fldt
xchg
nop
xchg
mov
sbb
jle
mov
mov
push
push
insb
sti
insl
ljmp
nop
jnp
dec
mov
pop
dec
rcrl
clc
repnz
push
jb
mov
push
imul
pop
cmp
mov
or
push
xchg
out
sub
popfw
pop
pop
pop
fstpl
sbb
mov
fbld
cmp
call
cmpsb
shll
lods
rcll
mov
cwtl
push
jnp
xchg
or
or
pop
pop
jp
push
fidivl
push
xchg
aaa
arpl
loop
pop
jmp
xchg
push
jbe
mov
sbb
repnz
jmp
sbb
imul
aas
lret
pop
insl
push
adc
repnz
mov
mov
addl
cwtl
push
mov
ds
sub
scas
mov
cli
mov
dec
mov
aaa
fnstenv
adc
test
cmp
lret
jge
inc
gs
mov
mov
call
iret
add
es
xchg
aaa
adc
rorb
std
in
insb
dec
push
cwtl
adc
mov
fildl
test
scas
push
addr16
mov
cmp
rcrl
out
sbb
into
mov
sub
popf
cmpsb
daa
xor
push
out
xchg
mov
inc
pop
or
jnp
lods
std
mov
jg
xchg
pop
and
movsb
iret
pop
lret
mov
pushf
xor
mov
pop
fwait
xchg
mov
shll
or
or
punpcklbw
dec
aam
and
andb
xchg
sbb
call
es
dec
fisttpll
inc
adc
and
orb
or
mov
push
push
into
int
lea
test
push
push
sbbl
fisubrs
mov
movsl
mov
and
cwtl
xchg
int
and
int
xlat
push
repz
filds
add
pop
stos
mov
push
mov
mov
test
int3
loopne
cmp
cmp
ret
enter
push
jnp
in
daa
sub
mov
sti
das
das
sub
jno
lcall
test
lods
movsl
jp
int3
jns
sub
loope
mov
lret
lods
sbb
pushf
push
int3
add
sahf
or
pushf
xchg
and
data16
ja
push
mov
mov
jmp
fdivp
cmp
dec
cli
inc
cmp
lea
popf
pop
xor
xor
outsb
stos
jns
scas
jg
int3
cltd
ficompl
scas
jb
jg
xchg
cmpsb
push
dec
popa
popf
addb
test
or
pop
mov
arpl
jl
or
push
cmp
ss
aas
cmp
insb
dec
xchg
in
imul
and
sub
sti
cmpsb
mov
pushf
mov
pushl
or
das
test
jns
jmp
dec
fstps
mov
daa
mov
into
pushf
sub
xor
mov
mov
mov
jae
fdivl
orl
jecxz
push
lods
xor
in
pop
sbbb
aas
mov
xchg
xor
test
std
stos
adcb
stos
fs
xchg
push
sub
das
mov
insl
leave
sub
cld
fs
xchg
scas
movsb
adc
jnp
xchg
push
ds
notl
and
add
dec
jmp
lods
js
add
mov
movsl
pop
leave
repnz
xchg
pop
ret
js
cwtl
in
hlt
mov
out
lret
xchg
test
sahf
jo
and
jg
out
cmpsl
popa
in
adcl
sbb
jnp
push
xchg
pop
xchg
fstp
hlt
insb
push
ja
xchg
mov
cld
and
arpl
or
hlt
push
cs
push
loopne
xor
leave
mov
repz
dec
ret
inc
ja
mov
inc
pop
add
adc
sub
popa
pop
jge
dec
cli
cltd
cld
sub
cmp
push
rorl
dec
movsl
pop
pop
test
pop
mov
cli
sub
ss
jge
push
jg
inc
adc
push
sbb
repnz
pop
push
lods
xchg
sbb
repz
movl
mov
pop
pop
cltd
push
aad
mov
xor
movsl
push
hlt
lahf
mov
mov
or
ret
jns
dec
inc
sti
cmc
mov
adc
and
lcall
cmpsl
lcall
mov
xor
mov
xchg
and
sub
add
sbb
stos
adc
fcoms
ret
sub
jmp
mov
dec
xor
daa
lock
mov
int
lret
xchg
cltd
repnz
mov
mov
fcoms
imull
popa
xor
cmpsb
cmpl
lcall
cltd
clc
xchg
cmc
jg
dec
add
jbe
and
ja
jbe
add
rcr
in
pop
aam
lods
int
cld
pop
add
and
add
das
xchg
xor
loop
jg
fcomi
cmpb
push
push
aas
je
mov
test
addb
fisubs
push
mov
push
jle
arpl
jecxz
lock
arpl
inc
movl
sbb
fnstsw
mov
add
xchg
je
inc
mov
mov
or
fs
lds
mov
vaddpd
ror
stos
dec
lock
fs
insb
and
stos
adc
push
out
popa
jmp
int
popf
insl
pusha
and
jbe
mov
cmp
cmc
jmp
fists
xchg
aaa
daa
mov
mov
nop
nop
jno
sbb
dec
push
and
cmp
and
inc
sbb
roll
insl
adc
mov
cmp
xchg
push
xlat
call
bound
pop
and
sub
mov
push
inc
in
stc
lret
outsl
sub
push
cmp
sbb
repnz
adc
jno
es
inc
int3
out
enter
mov
loopne
sbb
nop
inc
in
cmpsb
xor
cmp
xchg
sbb
or
movsb
pop
ret
in
pop
filds
fisubrs
cmpsb
sbb
subb
and
jb
or
pop
cmovge
mov
out
sub
pop
gs
sbb
xor
in
cmp
ss
test
icebp
push
and
dec
bound
mov
mov
cmp
shlb
movl
push
jae
call
xchg
out
movsb
or
ret
fs
jo
lods
push
add
xchg
divl
push
in
sahf
pop
notb
dec
mov
and
test
ja
das
adc
lock
pop
rcrb
jmp
cld
push
sti
int
scas
adc
jno
sub
add
das
bswap
pop
jne
repz
dec
lods
mov
mov
and
mov
mov
adc
out
fs
test
outsb
cmp
pop
test
ljmp
mov
ret
pop
out
outsb
popf
cmp
mov
ss
outsl
movsl
and
stos
addr16
arpl
xor
pop
inc
cs
inc
iret
and
loop
jae
rorl
adc
fwait
repz
inc
cmp
sub
add
stos
push
in
mov
mov
push
daa
lea
lods
aas
cld
mov
adc
das
in
cmp
hlt
mov
stos
and
mov
ds
adc
aam
dec
jl
mov
push
adc
cmp
in
rcl
jmp
xor
mov
scas
lret
scas
jo
pmulhw
mov
push
test
dec
mov
and
jns
fs
aaa
push
dec
movsl
inc
mov
jnp
movsl
shll
ljmp
inc
xlat
pusha
mov
iret
xor
es
sarb
data16
fldt
or
mov
ror
lret
sahf
push
cmp
add
movsb
int
jg
sti
push
test
dec
jo
mov
cld
inc
inc
les
add
fbld
add
push
mov
mov
mov
adc
lds
xor
fwait
testl
lahf
setbe
pop
cmp
adc
loop
shl
jnp
clc
cld
test
int3
xchg
pop
inc
jne
and
insl
idivl
std
jle
xchg
insb
jnp
movsb
je
add
test
mov
repz
add
sub
jge
sub
push
es
cli
cwtl
test
pop
push
sub
push
aam
push
fsubs
cltd
sub
mov
xchg
xchg
movsb
cwtl
dec
dec
fwait
pusha
insb
loope
dec
or
icebp
mov
call
notl
xor
clc
jae
lret
inc
ja
outsb
cmpsl
dec
repnz
lcall
xchg
jmp
adc
jge
sub
adc
xchg
mov
arpl
scas
jnp
inc
sub
push
sub
add
clc
inc
inc
mov
out
sbb
pop
in
aad
iret
push
mov
sub
add
pop
cmpsb
dec
andb
rcrl
loope
incb
imul
out
shrl
sub
jns
xchg
fnstenv
jmp
stc
sbb
jmp
inc
lea
das
push
xchg
xor
imul
repz
xor
imul
and
cmp
pop
push
mov
mov
xor
fadd
and
adc
popf
je
xor
aas
movb
push
pop
lods
cmc
rolb
cli
stc
jne
shl
popa
push
mov
outsl
out
mov
mov
scas
ja
lods
mov
repnz
int
js
mov
or
out
aam
add
pusha
in
lret
add
mov
stos
faddl
xchg
outsb
rcll
mov
sub
loope
cmp
jnp
add
push
pusha
scas
es
stos
gs
fcoms
lods
out
mov
js
dec
cmp
sub
lret
adcl
and
daa
sarl
stos
in
add
adc
and
push
scas
push
jle
mov
mov
sbb
mov
adc
pop
mov
out
xchg
adc
inc
js
in
cmpsb
sbb
xor
jecxz
push
sub
inc
mov
enter
popf
jp
out
aas
pop
adc
mov
inc
fwait
mov
mov
xlat
loope
jmp
and
roll
loopne
and
daa
xor
xchg
jnp
push
out
cmpsb
push
lods
jmp
mov
bound
push
iret
int
scas
mov
cmc
mov
cmp
jns
mov
and
cmp
test
jb
jne
pop
nop
jbe
rcr
sub
jbe
repz
lods
in
or
jo
pop
loopne
jle
in
enter
adc
jns
ljmp
js
fidivrs
out
jl
pop
xchg
mov
loop
mov
pop
adc
sub
movsb
jecxz
mov
add
push
jb
es
mov
lret
push
pop
fnstsw
scas
dec
scas
out
in
mov
sti
and
adc
jo
cli
test
sub
std
mov
popf
xor
jmp
rcr
xchg
mov
xchg
ret
sub
jmp
dec
dec
sub
and
add
arpl
icebp
add
pop
out
hlt
orb
dec
lcall
cld
dec
frstor
pop
ljmp
mov
imul
movsb
cmc
pop
ds
adc
xor
das
icebp
mov
xchg
sub
sbb
sahf
insl
adc
jmp
cmp
or
sarl
filds
lea
imul
loope
inc
mov
jns
ret
or
push
faddl
cmp
lods
pusha
pop
and
aaa
imul
mov
cwtl
pop
lods
lods
dec
push
lods
cmpl
add
adc
mov
loope
lcall
cmc
xchg
cmp
adc
shr
gs
inc
or
arpl
mov
les
clc
movsb
jg
pop
ror
test
pop
add
lods
or
in
sbb
sub
imul
lea
cs
and
es
ret
divl
aaa
push
xor
stos
in
fwait
divw
push
aas
fcomip
sahf
push
out
clc
rolb
call
int
mov
mov
scas
daa
adc
inc
cmp
inc
mov
cli
ret
jge
mov
pop
iret
dec
in
push
mov
stc
fidivrs
fcmovnbe
movsl
in
dec
stc
inc
insb
arpl
test
subl
shlb
jge
adc
jecxz
pop
in
xchg
ret
lds
cmc
pop
mov
aam
jecxz
addb
push
cvttps2pi
les
inc
add
dec
push
test
cmpsl
xlat
jg
mov
jg
add
xchg
cmp
jle
inc
adc
cld
mov
outsb
or
xchg
lcall
aaa
mov
push
pop
addr16
rcrl
jmp
jmp
icebp
addl
iret
mov
cwtl
loop
enter
add
scas
call
in
mov
pop
ret
mov
shld
jecxz
enter
mov
std
ja
dec
out
inc
ss
and
inc
sbb
jo
sub
and
and
mov
sbb
jle
cmp
dec
fstpt
cmpsl
jle
les
pop
pushf
jle
fcom
cmp
scas
sbb
aam
mov
pop
xor
aad
pop
xor
dec
inc
xchg
mov
mov
sahf
and
sbb
mov
dec
mov
roll
popf
idivb
lods
pop
adcl
cmp
pop
jae
push
into
loop
sub
sar
ljmp
inc
arpl
pusha
idivl
stos
sti
lret
mov
mov
xchg
inc
pop
and
loope
jb
jb
loop
mov
popf
xchg
inc
popa
jmp
icebp
xchg
jne
es
mov
mov
and
int
les
in
mov
movsb
push
push
lahf
or
mov
das
push
movsb
jl
cltd
push
stos
daa
dec
sub
and
cld
adcb
push
pop
insb
outsl
inc
push
jo
mov
jge
push
add
or
dec
mov
push
push
add
ret
push
xlat
insl
add
scas
cli
mov
or
fnstsw
sub
mov
xor
push
pop
stos
cmp
push
cmp
out
inc
and
pop
mov
stc
cmp
pusha
rcrl
sbb
mov
lcall
mov
push
inc
je
dec
aaa
mov
in
mov
xlat
sahf
pop
out
mov
inc
jns,pn
shrl
bound
in
cs
or
mov
or
add
pop
jns
adc
ljmp
lea
iret
aas
stc
jb
rcrb
lret
mov
or
pop
and
daa
mov
xor
arpl
movsb
rorl
mov
repz
int3
rorl
scas
aas
mov
push
or
psubq
sbb
jp
push
jmp
imul
pop
pop
inc
sbb
lods
mov
mov
mov
sbb
mov
adcb
cmp
hlt
loope
xor
dec
jecxz
inc
ds
adc
jnp
cmp
and
cmp
or
pop
insl
sbb
push
pop
dec
sbb
add
cmp
bound
ret
std
add
adc
jl
adc
bound
cmp
gs
test
mov
pushf
cmp
xchg
aas
sbb
push
and
xorl
jp
push
lret
mov
mov
mov
inc
pop
xorl
mov
mov
cwtl
dec
dec
adc
outsl
ja
or
adc
notl
and
pop
leave
stos
ss
adc
mov
movb
and
stos
outsl
add
inc
loope
cld
mov
scas
icebp
adc
dec
mov
cmp
int
sbb
mov
cld
aad
pop
loopne
stos
scas
lds
out
pop
jne
jl
jmp
cmpl
pop
inc
jp
push
stos
lock
clc
xor
push
lret
dec
je
push
mov
fistpl
sbb
aaa
sbbl
pop
out
xlat
shlb
movsb
cmp
pop
xchg
inc
mov
adc
add
sub
xchg
imul
xorb
jns
out
mov
cltd
sbb
faddp
sbbb
daa
sub
roll
clc
mov
xchg
xchg
cmp
cmp
lods
lret
jae
dec
add
or
mov
in
into
fstps
or
ret
xlat
subb
add
mov
rcrl
cli
or
cmp
mov
test
pop
lahf
push
or
mov
jb
mov
ret
push
jnp
cmp
mov
and
and
mov
gs
cwtl
or
mov
notb
mov
and
rcrb
xor
adc
mov
clc
jae
xchg
add
or
push
mov
mov
add
cmp
aam
mov
sub
push
insb
sbb
insb
adc
ret
aaa
shll
std
jno
dec
inc
xor
sub
cli
mov
popf
mov
sbb
push
lods
sbb
testb
ss
in
ret
or
lods
pushf
movsb
movsb
inc
fsubr
push
mov
cmpsb
cli
data16
int
mull
lahf
insl
push
mov
les
mov
sbb
leave
lahf
mov
clc
pop
fdivs
ds
cmp
test
loop
pusha
cmpsb
scas
fstpl
mulb
xchg
cmp
mov
lock
inc
adc
mov
adc
push
dec
imul
hlt
add
shll
mov
sbbl
pop
pop
xchg
push
jge
cltd
push
inc
mov
iret
insl
stc
dec
adc
je
mov
pmuludq
popf
adc
mov
mov
in
repnz
dec
dec
inc
jne
or
dec
mov
cmpsb
cmp
jl
jecxz
mov
sub
lods
cmp
xor
movsl
jmp
adcl
mov
inc
test
dec
sbb
dec
dec
call
roll
and
loopne
ret
out
mov
rcl
mov
jno
addr16
lcall
cli
push
dec
cmp
std
rclb
mov
adc
or
jg
xor
pusha
popf
ja
mov
scas
push
jecxz
std
jmp
scas
call
fs
mov
inc
lods
cmp
xchg
lock
cmp
add
mov
and
mov
push
icebp
pop
add
push
subb
push
push
adc
ljmp
outsl
jecxz
in
imul
xchg
cld
das
andb
add
or
xchg
push
mov
dec
cld
jbe
shll
outsb
lcall
push
sbb
daa
out
rolb
popa
pusha
jp
mov
lods
adc
jbe
and
push
idivb
decb
cmp
sbb
ja
fidivrl
gs
mov
push
in
mov
dec
pop
cmpl
mov
pop
mov
jmp
js
jecxz
test
or
pop
inc
into
add
and
mov
cld
add
arpl
inc
push
pop
mov
clc
xor
xchg
testb
imul
sbb
or
out
add
movb
lahf
ret
dec
lock
inc
lods
sub
xor
nop
and
mov
js
push
ret
and
gs
dec
push
ja
arpl
fwait
pop
fdivrs
adc
or
sbb
stos
xchg
mov
sub
jno
and
jmp
and
xchg
jl
push
ret
fldl
test
daa
sahf
pop
hlt
dec
mov
arpl
cmp
fistps
rorb
adc
es
imul
mov
pushf
add
add
fwait
in
push
inc
jl
arpl
fwait
xchg
dec
xor
stc
and
outsl
mov
aaa
cmp
pop
insl
enter
cmp
in
sbb
xor
int
aam
xchg
lea
dec
stos
pop
lret
call
push
inc
aad
mov
jmp
jp
leave
jbe
loop
rclb
hlt
mov
mov
push
sub
sar
je
sbb
adc
adc
add
pop
xor
stos
mov
xchg
pop
lods
cmp
push
vpsubq
push
mov
jae
add
out
cmp
push
sub
dec
mov
pop
push
sbb
mov
jnp
mov
mov
push
movsb
mov
adc
xorb
sti
jo
xchg
adc
sub
das
daa
xor
jge
pusha
sub
and
or
or
add
mov
loope
jge
or
cmpl
in
mov
bound
pop
push
xchg
jbe
hlt
xchg
pop
fwait
in
cli
jmp
pop
aaa
in
lods
ret
loope
shrb
cmp
mov
arpl
ficoms
int
xchg
add
test
and
fistpl
into
add
xchg
mov
jne
cs
int3
pop
rclb
notl
cmp
fsave
sbb
jae
popf
mov
xchg
dec
lea
xlat
outsb
cmpl
in
adc
inc
cmp
or
rcll
mov
or
push
aaa
mov
in
or
cmovl
lcall
pusha
jae
mov
mov
pop
scas
jns
or
jp
cltd
xlat
shlb
sbb
sti
dec
sub
push
jp
dec
push
out
jne
push
imul
mov
jae
lahf
sub
lea
dec
pop
pop
ret
jl
add
das
pop
pop
push
or
mov
aam
es
adc
in
pushf
mov
fnstcw
in
in
and
clc
mov
or
in
push
xchg
sub
xchg
lea
xor
in
clc
inc
fucomip
dec
ja
int3
lea
sbb
aad
inc
stos
popa
jl
mov
fdivrs
push
test
cld
out
mov
lcall
inc
push
inc
push
sahf
sbb
lock
xchg
bound
mov
xchg
mov
mov
shl
fisttpl
les
pop
jae
push
mov
jb
cmp
pop
dec
mov
dec
add
jp
mov
dec
push
outsb
mov
in
ss
cmp
push
fiaddl
das
popf
add
xlat
lret
adc
cmp
je
mov
fwait
int3
test
movsb
dec
lds
sbb
fiaddl
push
std
adc
or
into
scas
loopne
push
frstor
cwtl
repz
popa
pop
test
dec
or
mov
daa
add
push
sub
pop
fisttps
push
fwait
cwtl
dec
arpl
xlat
decl
xor
cmp
das
lods
jb
xchg
xchg
sbb
dec
push
stos
cmp
in
mov
js
into
add
test
iret
jne
push
xchg
xor
dec
ret
sbb
mov
or
orb
push
aam
xor
mov
sti
enter
jnp
jle
jl
call
mov
daa
xchg
shrb
je
mov
mov
add
adc
out
cs
sub
rcrl
pop
repz
rorb
push
jecxz
jecxz
and
adc
and
jno
dec
aaa
test
call
jl
add
shrb
sbb
push
movl
mov
push
lahf
dec
cltd
les
sbb
inc
adc
ret
imul
pop
and
pop
sbb
jle
and
jg
jle
push
sub
data16
lahf
xchg
jnp
sub
pusha
dec
fs
lds
jns
cmp
fcoml
push
cltd
sub
xor
mov
and
fucomi
and
and
pop
or
in
test
enter
push
jb
insl
mov
jge
mov
push
pop
dec
lret
sub
shr
xchg
jae
adc
jne
jp
ficompl
pop
fstpl
and
shll
pusha
rolb
or
sub
push
pop
push
test
or
sub
add
cwtl
ljmp
aaa
sub
je
lret
mov
sahf
insb
jecxz
mov
faddl
frstor
push
dec
push
cwtl
push
mov
shll
loop
outsl
xchg
mull
or
cmp
and
push
jmp
jno
aad
fucomip
gs
loopne
sbb
add
xor
lea
cmpl
dec
cwtl
adc
gs
faddl
sbb
pop
xchg
sbb
out
mov
cmovns
push
mov
inc
push
pop
mov
out
rorb
inc
pop
aam
in
jl
aad
jmp
push
shll
push
dec
cmp
out
dec
rolb
int3
adc
test
neg
inc
xchg
jecxz
and
cmp
outsb
pop
loope
inc
insl
inc
jle
scas
add
ret
jp
mov
fstl
and
shll
adc
inc
push
xchg
lret
push
mov
mov
mov
mov
sbb
int3
cmpsb
mov
jnp
and
flds
test
mov
push
enter
push
fdivs
mov
sub
jmp
push
test
ds
push
lock
lock
xchg
mov
add
lock
popf
adc
or
push
or
push
fld
xchg
test
fs
arpl
out
pop
in
arpl
stos
aam
lods
adc
inc
movl
and
jne
mov
mov
pop
dec
xor
pusha
loopne
push
cltd
inc
test
inc
sub
inc
adc
ljmp
loope
xchg
jno
add
sub
xor
mov
dec
sub
push
jbe
xchg
mov
xor
loope
mov
push
enter
js
mov
dec
bound
stos
mov
arpl
or
sub
xchg
mov
add
scas
sahf
add
ljmp
into
ret
pop
aaa
sub
iret
popf
cmpb
xchg
popa
sbb
mov
stos
std
movsb
rclw
out
mov
cmp
lret
or
inc
mov
jno
pop
out
inc
add
fistps
fldcw
or
pop
in
mov
xchg
jge
mov
sahf
add
aam
imul
adc
mov
sbb
addr16
inc
sbb
jmp
mov
pop
pop
sub
iret
mov
scas
sbb
jg
test
test
xor
mov
out
es
fcmovne
mov
stos
cmp
push
adc
leave
mov
divb
subl
mov
adc
mov
push
mov
movsb
fisubrl
mov
fldl
stc
add
mov
push
dec
cmpsb
sub
add
adc
push
outsl
and
in
inc
jle
pushl
fsubrs
into
jecxz
push
xlat
cmp
adc
aam
sub
add
test
push
sub
pop
or
adc
aad
adc
adc
fdivs
and
mov
add
movb
iret
pop
outsb
add
and
xorl
mov
push
dec
in
push
push
dec
dec
inc
nop
loop
jnp
test
jb
add
inc
sbb
adc
xlat
in
add
xchg
xchg
rol
jge
fmuls
imulb
mov
mov
push
xchg
leave
sbb
pop
int
inc
mov
pop
scas
mov
pop
jg
incl
mov
jne
in
popa
mov
jmp
push
push
jae
lock
inc
cmp
and
out
rcr
and
out
xchg
arpl
rorb
filds
lret
push
push
and
clc
sbb
add
fstpl
mov
xchg
mov
push
mov
lods
popa
inc
rcrb
fisttpll
push
jns
cmp
test
inc
ror
sbb
lods
lods
imul
xor
flds
add
inc
mov
cli
adc
pop
fwait
mov
pop
lret
outsb
bound
mov
das
fisubrs
jmp
lock
and
mov
out
pop
cmp
cmpl
push
xchg
outsl
fisttpl
arpl
xchg
loopne
loope
mov
dec
gs
addl
push
ficomps
pop
mov
clc
ror
adc
sar
jne
sbb
or
cld
aam
sti
sbb
jecxz
lock
xor
and
fsubrs
call
sbb
adc
es
and
push
test
nop
xchg
push
loopne
push
subl
add
cmp
adc
gs
aaa
std
push
and
fadds
insb
ljmp
pop
js
mov
fadd
pop
mov
daa
xor
in
cld
cmp
mov
adc
in
imul
jmp
ljmp
mov
addr16
lods
addb
xor
rcll
dec
mov
aas
repnz
push
in
xor
fnsave
aad
push
inc
and
aad
cmp
js
pop
pop
or
push
in
orb
lahf
pop
int3
and
jmp
iret
sbb
mov
mov
daa
push
xchg
das
sbb
add
shrl
mov
iret
push
sub
mov
xchg
movsb
ja
xchg
xor
jb
sbb
jecxz,pt
mov
outsb
repnz
inc
mov
push
adc
clc
ds
add
scas
inc
int3
jb
jae
fwait
je
adc
and
bswap
xlat
push
out
adc
movsl
push
or
adc
inc
movsb
mov
sub
imul
jecxz
mov
outsb
mov
pop
pop
jle
aad
or
mov
popf
loope
ss
ret
push
push
xlat
stc
cmp
jecxz
sbb
das
fcmovnu
and
sub
xchg
lea
jo
test
or
int3
adc
aas
push
lock
adc
push
js
dec
fmulp
xchg
inc
xchg
pushf
mov
xchg
repz
movsb
jp
shl
insb
loop
sub
sbb
shll
cmp
xchg
inc
xchg
inc
js
xchg
cmc
test
repz
inc
jle
or
cmp
mov
pop
ficompl
cmpsl
xlat
jbe
mov
mov
push
fnstcw
mov
add
add
push
and
pop
pop
cmpsl
insl
repz
pusha
adc
push
xchg
lock
xchg
mov
lcall
cmc
sub
cmp
mov
jo
icebp
out
cmc
push
lahf
jg
and
fcomps
outsl
mov
test
mov
sahf
pop
aad
arpl
xor
xor
xor
mov
jo
gs
call
aaa
mov
fnsave
jge
insl
hlt
shlb
iret
out
adcl
mov
imul
and
and
dec
imul
movsb
mov
push
repz
cmc
fs
mov
lcall
mov
insl
rcrb
clc
or
dec
mov
jp
mov
arpl
inc
lock
scas
mov
bound
fcoms
scas
mov
jbe
pop
aas
stos
mov
and
sub
aaa
fcomps
fiadds
xor
call
stc
or
into
add
mov
and
in
jb
pop
shlb
jno
push
lahf
xchg
das
jge
jecxz
scas
fdivr
shlb
jns
jne
fs
mov
insb
or
lds
adc
add
or
mov
sbb
mov
popf
lock
outsb
push
xchg
dec
scas
pop
lahf
adcl
icebp
pop
cwtl
mov
xor
xchg
or
lock
inc
movsb
cld
arpl
add
mov
or
int3
outsb
fistpll
mov
aam
sarb
insb
stos
inc
inc
addr16
scas
insl
into
xor
mov
dec
popa
popf
mov
pop
inc
mov
sbb
stos
hlt
dec
pop
push
cwtl
lods
xchg
cmp
xor
int3
jno
nop
cmpsl
sub
sbb
imul
adc
lods
pop
insl
or
js
pop
enter
add
mov
adc
std
ljmp
int3
adc
sub
dec
mov
xchg
nop
stc
mov
lods
int
xchg
xor
aam
jae
cmp
in
push
xor
in
xchg
adc
jle
sbb
push
inc
xlat
mov
mov
push
aam
lock
add
or
loop
mov
fisttps
mov
adc
stos
lahf
int3
jge
dec
pushf
loopne
repz
out
jle
sarl
inc
add
outsl
push
push
inc
jle
mov
ljmp
ss
call
xor
cltd
and
xor
push
add
and
push
movb
loop
dec
subb
in
cmp
cltd
in
negl
dec
sub
cmp
imul
sub
mov
dec
idivl
push
ret
jae
aas
scas
adc
add
or
mov
pop
popa
sub
test
call
add
out
hlt
lock
adc
adc
pop
mov
inc
push
scas
repnz
dec
xchg
mulb
mov
aad
pop
mov
cltd
push
cmp
mov
inc
cmp
in
dec
out
dec
in
cmp
pop
xor
jnp
dec
insb
sub
xchg
mov
and
ljmp
pop
xchg
sub
lret
fwait
insl
xchg
lods
mov
mov
jae
roll
insl
movsl
addr16
int3
pop
outsl
or
sub
cmp
add
mov
fwait
int3
lods
movsb
mov
dec
pop
fdivl
add
pushf
testl
mov
or
sbb
hlt
jb
ds
xchg
icebp
jnp
inc
pop
jmp
imul
pop
push
mov
jo
dec
add
sbbl
stc
sub
cmpsb
jno
pop
stc
icebp
out
sub
sub
dec
hlt
rcll
lods
mov
adcl
fisttpll
ljmp
mov
push
ljmp
fs
mov
push
leave
xchg
lret
cs
sbb
push
test
adc
sbb
xchg
sar
inc
jecxz
sti
adc
xchg
ret
adc
push
mov
andb
paddsw
jne
std
leave
jecxz
xor
inc
bnd
sub
enter
cltd
pop
jae
faddl
fimull
enter
dec
loope
in
int
inc
or
sbb
bound
push
mov
jae
fnstcw
and
xor
or
adc
js
dec
div
das
arpl
cmpsl
cmp
jns
lret
cmp
repnz
outsl
adcl
stc
js
mov
sub
push
mov
jp
add
add
and
pop
pusha
jne
push
xchg
jno
jns
fucom
cmp
xor
lahf
sbb
mov
sub
clc
sbb
inc
pop
sbb
bound
pushl
inc
jl
clc
xor
adc
mov
xchg
sbb
or
imul
xchg
ja
jae
dec
dec
insb
or
xor
or
enter
xor
cmp
or
insb
jmp
pop
mov
or
sbb
movsb
mov
jle
in
fidivrs
sti
popf
xchg
mov
adc
cs
sbbb
sbb
mov
test
ret
or
xor
sbb
das
mov
cmc
jnp
in
sub
add
add
xor
pop
or
outsl
lret
add
rclb
test
cmpsl
es
xchg
idivw
int3
repnz
pop
lret
inc
ficompl
nop
adc
imul
add
mov
mov
in
mov
sub
loope
ret
push
lods
xlat
pusha
cwtl
lds
cmp
push
adc
call
mov
mov
je
mov
push
or
pop
jge
iret
add
sub
out
jnp
aad
jne
sub
push
and
sbb
popa
cmpsb
or
jno
aas
addr16
fildl
mov
mov
push
popa
roll
neg
into
add
adc
jnp
shl
dec
jae
sarb
cmp
test
daa
aam
xchg
addr16
xor
xor
das
fisubs
pop
or
or
testb
popf
jae
icebp
add
out
jnp
dec
push
adc
shrl
int3
loopne
bound
cld
mov
adc
xor
inc
fisttpll
jae
das
js
stos
lcall
into
push
hlt
cmp
stc
adc
fidivrs
cmp
inc
in
xor
push
adc
or
adc
adc
in
fwait
mov
das
add
sbb
pop
and
jne
xchg
xor
add
js
dec
dec
add
sarl
mov
je
test
adc
cmc
lret
jg
inc
and
shlb
in
or
lods
fildll
clc
pusha
movsb
bound
jmp
scas
or
sub
repz
xchg
and
mov
call
leave
push
dec
xchg
ds
xor
xor
jb
daa
mov
push
shl
sti
ret
in
mov
jle
fcoml
jns
jp
sub
push
mov
or
mov
or
push
or
and
sbb
into
cmp
iret
sar
cmovp
add
push
mov
insl
sub
adc
xlat
stos
aam
jae
dec
xchg
or
and
push
out
mov
adc
testl
movsl
or
jp
into
mov
or
testb
xchg
sbb
hlt
shrb
subl
dec
inc
ret
xchg
and
mov
inc
jne
dec
stos
add
int
pop
mov
pop
ret
cmpl
imul
and
or
pop
icebp
dec
jecxz
insl
gs
or
mov
and
loope
sbb
stc
sub
xor
dec
out
inc
jae
pop
stc
cmp
inc
cld
xchg
cmp
mov
pop
jns
inc
xchg
daa
add
std
sti
push
cld
xchg
sub
sahf
mov
and
cmp
dec
orb
sub
insb
cmpsl
pop
jnp
call
loopne
cmp
jae
loop
push
mov
shlb
ret
test
mov
push
dec
mov
add
in
mov
mov
xchg
cmpsb
xlat
cmp
inc
push
push
fdiv
mov
dec
sbb
lahf
xchg
inc
adcl
pop
mov
pop
pop
dec
imul
mov
ret
xchg
iret
mov
adc
stos
dec
or
and
aaa
add
adc
repz
pop
cmpsb
test
adc
and
aas
lods
enter
sub
and
inc
gs
fnsave
push
negl
icebp
cmp
inc
imul
shlb
mov
add
ja
add
ljmp
xlat
xchg
push
push
jne
and
add
push
mov
gs
addr16
sub
mov
adc
mov
and
mov
push
outsl
add
imul
or
mov
lret
push
arpl
xchg
mov
push
cmp
imul
in
pop
push
punpcklbw
adc
test
mov
stos
jecxz
in
scas
pop
lock
int
lods
js
into
push
mov
add
repz
xlat
test
jmp
inc
cmp
aad
and
daa
and
mov
xor
nop
jbe
xchg
mov
out
sub
loop
repz
lea
pop
fisttpll
inc
lret
mov
push
mov
cmp
sbb
pusha
nop
dec
in
jnp
in
dec
jle
xchg
inc
ljmp
arpl
test
jg
sbbl
call
inc
stos
adc
push
outsb
mov
add
aaa
out
mov
xchg
xor
mov
push
xchg
xor
push
outsb
pop
xlat
pusha
jae
loopne
out
cmpsl
jge
lock
dec
int
pusha
dec
and
in
push
in
js
repz
xchg
jne
daa
sub
pop
xchg
popa
add
inc
xor
dec
lcall
mov
jae
jno
popa
xchg
aad
push
fadds
sbb
inc
xchg
xchg
cmp
mov
test
aam
push
test
mov
negb
inc
and
stos
pop
mov
pop
push
cmpsl
scas
in
testl
and
js
inc
icebp
test
pop
lea
adc
pop
pop
sarl
sub
repz
call
ds
xchg
hlt
cmp
fists
jg
xchg
scas
lahf
jecxz
std
adc
test
mov
xchg
iret
outsl
fsub
into
adc
mov
flds
sti
aam
mov
mov
xchg
push
push
loope
sets
js
in
jne
popf
in
sub
and
pop
push
popf
shll
mov
and
jle
push
push
mov
xor
mov
jbe
bsf
xchg
sub
mov
cltd
pop
jge
sbb
aad
cmp
xchg
xor
int3
xor
or
enter
fisubl
gs
test
pusha
ret
dec
or
aas
mov
loop
jge
outsl
adc
mov
or
je
lahf
aam
jecxz
mov
jbe
sbb
mov
popf
sbb
cmpl
nop
imul
jb
ret
cld
push
push
sub
push
aaa
cwtl
pop
hlt
lock
mov
jb
mov
test
xchg
imulb
push
scas
gs
mov
inc
mov
nop
push
leave
lods
in
ret
js
or
into
sarl
stc
cld
mov
stc
sar
cmp
cs
and
xchg
adc
shrl
leave
ja
je
inc
outsl
xor
addr16
repnz
sbb
pop
fwait
or
inc
fs
pop
cmp
push
cmc
popa
fistps
pusha
scas
prefetcht0
int
or
adc
sub
icebp
push
xchg
and
pop
mov
insb
sahf
cmp
push
lods
mov
lds
enter
sub
cltd
dec
xchg
xor
jnp
mov
push
icebp
pusha
inc
cmp
lods
jp
fcmovnb
dec
jnp
and
stos
and
outsb
nop
jns
jl
and
or
shr
push
cwtl
data16
subb
ret
call
out
push
jo
sbb
push
js
arpl
aad
mov
popf
push
pop
int3
jae
add
adc
jl
pop
mov
sbb
aaa
push
mov
xchg
add
in
roll
lret
push
mov
inc
rorl
dec
push
pop
xor
or
xor
xor
jno
jnp
adc
push
repz
test
or
sbb
xor
int3
ss
test
hlt
je
hlt
subb
aaa
mov
pushf
add
cli
lods
xchg
jmp
push
outsb
sti
cli
in
movsl
ds
repz
mov
addr16
cld
out
insl
jbe
test
mov
je
repnz
sub
push
sbb
mov
xor
in
stc
sti
cmc
cmp
mov
mov
sub
sub
inc
mov
ljmp
cmp
lods
mov
aaa
mov
xchg
pusha
or
push
lea
mov
dec
js
mov
insb
jle
adc
add
sbb
xor
lahf
push
lret
jl
insb
insl
mov
sbb
dec
sarb
bound
mov
inc
xchg
add
aam
ja
mov
xchg
push
or
pop
sahf
cmpsl
push
shll
lahf
jg
fcoml
sti
lds
in
mov
pop
mov
cltd
lock
mov
xor
lret
cmpsb
mov
sbb
mov
adc
insb
inc
stos
and
adc
sub
stos
push
pushf
jg
or
and
inc
push
mov
ds
adc
outsl
jle
push
fwait
out
arpl
pop
xor
adc
mov
mov
shll
sarb
jno
icebp
lods
mov
sbb
jno
xor
pop
push
into
cmp
lea
roll
pop
cmp
xor
pop
out
jnp
dec
loopne
dec
add
push
daa
fdivrl
aas
lret
mov
mov
pushf
clc
sahf
push
orb
mov
lret
scas
add
xchg
xchg
xchg
and
int
and
popa
or
lods
cmpsl
mov
cli
add
dec
pop
inc
fcmovb
mov
mov
jp
xlat
jae
xchg
add
mov
jle
lods
lods
test
jle
sbb
xchg
dec
cmp
imul
add
je
jl
icebp
mov
int
fiaddl
fwait
mov
cwtl
es
or
cmp
nop
fdiv
out
out
mov
xor
push
stos
out
mov
imul
int
imul
mov
jne
xor
and
and
out
xlat
ret
mov
mov
iret
mov
or
cmp
xorl
push
aam
pop
xor
popf
mov
or
mov
fisubrs
jnp
dec
imul
adc
push
mov
pop
filds
mov
shll
lret
sti
sarb
xchg
inc
jb
push
push
push
fildl
aam
loopne
push
sbb
addr16
enter
push
inc
rcrl
je
adc
ljmp
jge
fwait
mov
inc
shlb
xor
or
aam
inc
add
push
jp
push
rcrb
rorb
mov
or
lea
out
arpl
stos
cs
add
cmp
outsl
popa
in
es
or
adc
cmp
cmp
and
iret
dec
insl
addl
jecxz
xchg
cmp
xor
fnstenv
mov
xor
adc
and
or
add
lret
jle
pop
add
dec
adc
mov
sub
jmp
fsubr
aaa
orb
add
cld
cld
rcl
std
mov
adc
ja
lcall
outsl
sti
add
dec
mov
popf
or
les
sbb
jns
dec
nop
iret
int
frstor
sbb
cmp
sbbb
mov
insl
sub
or
aad
adc
cmp
imul
aaa
cmp
outsl
jne
mov
andb
test
pop
cmp
int
loopne
xchg
sbb
fldcw
loope
xor
decl
add
jecxz
jo
pop
aad
insl
movsb
or
lcall
xor
out
test
or
xchg
inc
adc
pop
pop
dec
adc
sub
lock
mov
sbb
cmp
test
cs
lods
push
aad
adc
inc
xor
xchg
negb
pop
cmc
jmp
adc
and
sahf
dec
add
cmpsb
push
mov
ds
add
bound
push
mov
call
cmp
inc
insl
outsb
mov
push
jmp
jo
lahf
sub
inc
pop
aas
push
sbb
sub
inc
enter
xor
fwait
adc
divps
in
insl
scas
mov
fiadds
std
cs
cmpsb
lods
jo
cmp
mov
sbb
jae
or
movhps
xor
lcall
clc
ficoml
mov
jmp
movsb
jns
frstor
adc
jae
jle
enter
push
stos
sub
inc
xor
fildl
cmp
dec
in
pop
cmc
jl
xchg
xlat
dec
xchg
fisubrl
mov
jmp
pop
cwtl
pop
pop
sbb
xchg
and
subl
in
repz
sarl
xchg
jns
mov
pop
sbb
inc
adc
mov
push
shl
push
and
mov
mov
in
mov
dec
fistl
cmp
cmpb
and
inc
mov
lock
jle
xor
jb
jle
cmp
test
push
enter
repnz
arpl
push
fimuls
rcrl
jns
out
lods
cwtl
insl
sub
sub
sbb
lret
and
pop
inc
pop
mov
pop
add
xor
mov
cmpl
insb
sbb
mov
jae
ja
ret
int
pop
loopne
inc
jmp
push
leave
mov
jg
pop
fwait
push
add
xor
mov
daa
int3
hlt
push
repz
fimull
hlt
icebp
movsb
movsl
loop
mov
loop
popa
popf
mov
js
push
pop
push
xchg
pop
jg
jle
cmp
cltd
and
testl
xor
push
iret
mov
pop
mov
dec
sub
mov
es
out
xchg
test
jns
into
jb
jle
cwtl
mov
mov
inc
lods
mov
push
xchg
ret
add
cmp
add
jae
into
xchg
sbb
dec
cltd
lret
push
mov
jno
cmpl
and
sahf
shl
sbb
jns
mov
stos
scas
jns
lcall
xchg
ja
mov
push
loopne
arpl
movsl
dec
stos
xchg
cmpsl
cwtl
jne
xchg
jge
aam
and
data16
imul
xor
adc
loope
adc
testl
jns
cmpsb
dec
out
and
bound
xchg
cmpsb
mov
outsl
mov
loopne
jns
repz
insb
aam
push
xor
inc
subl
out
test
dec
push
in
inc
jnp
inc
mov
mov
mov
cmp
push
lods
jecxz,pt
lods
call
in
xor
mov
iret
test
pop
sbb
jae
int
inc
stc
jp
rclb
out
push
mov
imul
icebp
subb
mov
jo
inc
cld
mov
mov
xchg
xor
lods
push
mov
jl
ret
or
pop
pop
sbb
sbb
outsl
pop
sub
inc
scas
fidivrl
gs
scas
xchg
xchg
lahf
mov
lea
sub
pop
or
push
out
sub
sub
fistps
std
jbe
cwtl
sbb
mov
negl
in
sub
jbe
out
sub
and
jmp
ret
or
stos
adc
out
inc
in
data16
inc
rcl
mov
xor
xchg
sub
adc
fldl
ret
hlt
pop
imul
sbb
fisttpll
add
jmp
mov
or
mov
js
and
loopne
mov
mov
sbb
mov
mov
mov
aaa
dec
dec
cltd
or
test
fldl
icebp
lret
xchg
add
mov
adc
push
dec
test
std
ss
xor
out
test
inc
xor
iret
test
jmp
into
add
fwait
cmp
mov
fimull
push
or
stos
and
movsb
sbb
push
mov
dec
jae
mov
pop
icebp
cwtl
add
push
mov
jb
imul
pop
cmp
jbe
jnp
sub
jae
push
cmp
aaa
dec
repnz
inc
mov
mov
push
mov
inc
loop
mov
dec
dec
xchg
sub
xchg
je
outsl
add
xor
xchg
inc
push
leave
fs
or
inc
addl
enter
inc
cmp
cmp
mov
mov
dec
adc
loopne
push
pop
jecxz
or
push
imulb
roll
lcall
out
std
push
lock
sbb
mov
xor
xchg
jae
or
cs
pop
adc
mov
xchg
insl
ja
cmp
ficompl
lea
jae
jo
sub
push
push
jb
mov
lahf
xchg
rcrb
cmp
add
pushw
add
sub
and
sub
rorb
cmp
adc
mov
xorb
repz
cmp
clc
in
pop
lret
and
aas
addr16
add
push
lret
cltd
or
data16
pop
insb
lcall
jo
in
fistpl
dec
fimull
cmp
inc
mov
add
jns,pn
inc
jmp
push
aad
aaa
pop
enter
pop
push
jb
aam
dec
pop
pushf
mov
mov
inc
arpl
sub
adc
mov
ljmp
lahf
loope
ss
jae
test
ja
and
lods
adc
fwait
ret
hlt
mov
jae
test
imul
push
xchg
mov
outsl
pop
add
movsl
jo
imul
inc
les
pop
inc
sub
scas
out
jae
add
jo
mov
cmovle
test
hlt
clc
sti
clc
jl
and
js
and
inc
mov
ds
push
xchg
outsb
and
jmp
loop
xor
or
xchg
xchg
cli
ja
pop
mov
cmp
add
mov
std
fcompl
xchg
mov
daa
loop
dec
mov
mov
and
xchg
and
xchg
or
hlt
in
mov
loope
rcll
jge
js,pt
xor
sbb
loope
dec
test
pop
mov
sbb
xor
jmp
pop
cmpsl
orl
jno
sub
mov
jb
inc
push
or
mov
inc
in
cs
pusha
mov
fdivrl
push
js
jo
arpl
outsl
xchg
stos
add
xor
aam
inc
loopw
lods
adc
sarb
clc
xchg
add
jl
mov
ds
sub
cwtl
or
adc
daa
test
filds
sarb
nop
jg
mov
push
mov
ljmp
call
sbb
popf
add
out
add
out
insl
push
sub
ljmp
sub
or
cmp
movsb
inc
ja
test
ss
test
sub
enter
sbb
in
cmp
into
lahf
out
cmp
pop
shlb
mov
or
pop
cmpsb
jg
cmp
mov
dec
mov
push
leave
cwtl
push
xor
mov
pop
mov
add
popf
inc
sbb
xor
pop
add
xchg
mov
dec
push
sub
loop
lahf
fdivl
cwtl
repz
cmp
fs
out
jo
test
dec
or
mov
mov
sti
sub
imul
adc
inc
pop
cltd
daa
push
cld
in
fiaddl
lock
ljmp
cmpsb
jnp
mov
adc
pop
mov
test
mov
in
das
mov
scas
and
addr16
mov
movsb
notl
jecxz
pop
mov
jle
jno
out
sub
push
sbb
jmp
lret
test
lds
mov
xor
inc
push
sbb
js
pop
mov
cmp
pop
jns
sbb
les
ret
dec
xor
lea
adc
cmp
lret
fisubrl
sub
adc
hlt
bsr
xchg
fsubrl
and
sbb
sarb
test
sbb
mov
hlt
inc
out
sbb
out
aas
out
adc
stos
fldt
out
or
movsl
loope
sub
or
ljmp
cmp
add
sbb
mov
leave
cmp
push
mov
xlat
mov
mov
out
push
sbb
and
bound
push
popl
ret
rcll
cmc
jge
adc
repnz
dec
push
lahf
ret
xchg
fadd
orb
xchg
stos
pop
fs
push
xor
add
and
and
shll
mov
pop
push
push
push
add
testl
sub
add
xchg
or
push
push
mov
jns
stos
dec
subb
out
clc
imul
xchg
aas
pop
icebp
daa
xchg
out
faddl
jmp
fsubs
pop
xchg
mov
cmp
aam
loopne
xchg
lret
mov
mov
jmp
mov
adc
mov
addr16
dec
push
xchg
mov
mov
cli
jb
rclb
aaa
leave
xor
pop
push
dec
sbb
jbe
aam
ja
ret
vphsubwd
repz
cwtl
cld
and
push
sbb
movsl
mov
mov
pop
ljmp
jmp
jno
outsb
push
shr
cmpsb
hlt
mov
inc
mov
mov
jmp
test
fidivl
sub
mov
out
lods
out
clc
movsl
push
mov
dec
fisubl
xor
out
daa
pop
shlb
mov
push
in
scas
cwtl
in
push
ffree
sbb
nop
rorb
lea
jl
clc
xor
xor
das
pusha
sahf
mov
je
inc
push
jbe
out
daa
loop
cmc
fdivs
or
or
cmp
push
jecxz
shll
adc
xchg
fdivs
mov
pop
outsl
pop
dec
imul
rorb
push
js
out
inc
fiaddl
jg
push
jecxz
sub
jmp
daa
test
lret
push
dec
leave
fs
or
and
adc
dec
pop
movsb
xor
int
movsl
ret
rolb
jnp
je
push
xor
dec
fidivrs
es
mov
pop
xchg
clc
and
es
iret
mov
repz
insl
jge
adc
sub
mov
pop
sub
adc
icebp
adc
lea
mov
inc
pop
fucomp
adc
adc
ljmp
in
loope
stos
flds
aam
fldl
jo
mov
daa
dec
cmp
sbbb
mov
insl
ja
mov
mov
jnp
jb
inc
outsl
inc
inc
aad
mov
mov
repnz
jns
mov
xchg
in
cmp
add
mov
ljmp
mov
mov
int
push
cs
rcr
lods
jg
mov
stos
pop
std
jnp
out
data16
mov
jns
push
mov
cmp
or
xorb
and
xchg
xlat
pop
jge
or
int
fadd
cld
fwait
jb
imul
or
loope
mov
fucomip
mov
clc
outsb
push
out
les
fisttpll
add
inc
jno
testb
lock
testl
mov
rorl
push
push
loope
stos
push
out
ljmp
pop
adc
cmc
mov
jns
roll
jbe
adcl
pushf
lods
and
repnz
add
dec
lahf
push
sub
sarb
xchg
imul
pop
sbb
outsl
sahf
fdiv
push
xchg
add
sub
jl
mov
jno
ss
cmp
aad
push
push
addl
pusha
or
or
rclb
inc
push
xor
sub
dec
mov
or
aad
push
or
xchg
mov
push
aaa
std
test
push
lcall
cmpb
ficoms
ja
cmpsb
push
add
pop
sbb
jo
jp
pop
lret
aad
inc
mulb
sbb
data16
into
dec
fcoms
data16
cwtl
jb
ds
adc
push
mov
ljmp
adc
mov
pmulhuw
mov
dec
adc
xor
andl
jg
mov
aas
test
lock
adc
loop
dec
pop
bnd
test
inc
out
mov
mov
movzwl
imul
pop
shl
and
push
mov
jb
inc
call
cmp
add
cmp
lahf
pushw
shrb
repz
sbb
adc
loope
pop
outsl
out
aam
popa
rol
mov
push
jno
sbb
ss
imul
adc
mov
stos
push
adc
dec
loopne
out
iret
mov
fists
lret
inc
jmp
or
mov
gs
lock
cmp
cmp
hlt
inc
enter
fimuls
pop
adc
push
std
cmp
imul
mov
lahf
push
divb
iret
lods
jne
mov
scas
je
push
mov
cmpsl
cmovo
shrb
and
mov
inc
pop
nop
les
mov
test
aam
shr
mov
mov
sbb
lcall
mov
push
mov
push
add
aaa
leave
addb
adc
leave
xchg
inc
mov
sar
pop
push
sbb
std
mov
cs
push
idivb
jno
dec
in
push
lret
pop
leave
add
sti
cmpl
push
fnsave
jecxz
push
jb
and
cld
or
mov
addr16
fisttpl
jmp
sbb
sub
stos
jge
and
inc
xor
mov
int3
testl
jns
mov
in
out
mov
orb
pusha
adc
ret
aam
aaa
pop
fwait
inc
nop
in
mov
xor
inc
add
test
dec
jle
les
or
test
incb
jns
les
hlt
subb
loop
and
jg
ja
mull
add
sbb
mov
pop
add
mov
sub
jne
xchg
pop
iret
inc
fnstenv
scas
xor
pop
pop
incl
repz
int
sub
dec
imulb
sub
sbb
add
jle
jo
add
inc
hlt
inc
jg
jge
sbbb
and
out
fwait
pop
dec
sub
std
xchg
mov
cli
mov
mov
mov
jb
nop
das
ret
xor
pusha
mov
and
out
cmp
jle
cmp
sti
loope
inc
ljmp
and
dec
int
inc
pop
xor
push
and
pop
repz
mov
into
ret
add
insb
dec
mov
icebp
or
xor
mov
push
cs
pop
std
test
cmpsb
pop
inc
pop
mov
xchg
lds
sahf
add
adc
and
sbb
lods
ret
dec
cmc
icebp
jae
dec
movsl
or
scas
int
or
lcall
add
mov
mov
out
add
xchg
imul
fistpll
jne
in
call
cmpl
and
cmp
xchg
ret
int3
iret
ret
popa
or
lahf
sbb
add
cmp
aas
daa
xchg
and
push
mov
lds
inc
adc
andl
out
cmp
es
xchg
cmp
std
pop
dec
scas
movsb
mov
ret
jbe
adc
push
xor
lea
inc
pusha
lds
xlat
jne
enter
in
mov
push
out
jb
push
or
dec
cmp
pop
fldt
mov
mov
cmp
inc
mov
out
std
lcall
jl
xor
bound
push
jp
adc
mov
push
xlat
pop
scas
ss
cltd
sub
sahf
movsb
xor
jnp
mov
test
imul
add
aas
lahf
pop
cmp
jno
loopne
xor
es
aam
and
pop
xchg
mov
adc
outsb
mov
divb
lods
mov
push
add
stos
push
aas
popa
outsb
fwait
pop
push
push
inc
stos
cmp
mov
lret
mov
loope
shlb
inc
into
mov
push
xchg
inc
or
js
adc
loopne
aaa
mov
inc
pop
out
fdivrs
jg
push
push
push
repnz
push
popf
jge
imul
shlb
mov
inc
xlat
les
fs
and
adc
testl
push
push
push
test
pop
sub
dec
outsl
jae
xchg
dec
mov
add
xor
pop
add
jbe
ficomps
jb
jbe
mov
or
ja
sbb
or
xor
cmp
data16
aas
iret
push
push
xchg
aam
push
out
sarb
add
cmp
push
mov
popa
jp
cmc
dec
nop
cwtl
in
mov
ds
addb
aaa
add
dec
sti
xor
mov
adcl
cmpsl
mov
mov
jno
dec
loop
mov
adc
inc
mov
jmp
testl
iret
or
gs
sbb
movsb
pop
in
out
or
dec
shll
dec
cli
in
pop
xor
xlat
insl
add
sbb
push
out
or
push
inc
mov
pop
xor
scas
outsb
lods
and
cld
mov
and
test
pop
or
mov
stc
adc
insl
js
cmp
or
xor
mov
xchg
cmp
fsubs
pop
pop
data16
enter
std
sti
leave
mov
sub
stos
mov
outsb
outsb
or
xor
lret
cmp
das
orl
sub
mov
pusha
inc
popa
push
push
in
scas
adc
xchg
loop
inc
inc
hlt
and
push
in
push
mov
int
mov
in
push
hlt
movsl
bound
jmp
pop
pushf
mov
stos
jb
loopne
pusha
inc
insb
fsubp
ds
sahf
mov
mov
in
pop
aaa
fs
jno
mov
adc
lock
ret
lret
cmpsl
loopne
mov
jl
fstpl
mov
jp
push
test
out
mov
mov
movsb
ja
dec
jb
ror
push
scas
outsb
pop
push
es
dec
pop
push
or
imul
xchg
push
cmc
jnp
or
mov
insl
sbb
sub
in
stos
add
mov
fildll
inc
xlat
jne
shll
inc
dec
xor
and
jl
add
adc
sub
dec
push
and
mov
sub
test
pop
adc
cmp
lds
test
xor
xchg
or
and
int3
mov
jg
test
push
out
shll
mov
mov
lcall
mov
or
mul
adc
shr
movsl
adc
add
add
adc
cs
pop
mov
jmp
cmp
inc
inc
cmc
mov
ret
lret
cwtl
popa
rclb
mov
adc
sbb
icebp
xor
xor
fimull
fs
xchg
pop
daa
lahf
mov
add
push
xchg
push
xchg
cmp
inc
adc
xchg
inc
xchg
hlt
xchg
shlb
ret
mov
imul
dec
aad
jl
mov
or
cld
ret
pop
into
cld
scas
nop
or
arpl
shrl
or
xor
dec
jae
cwtl
and
mov
jbe
jmp
fiaddl
popf
pop
jmp
fwait
aas
pushf
sub
push
popa
fists
out
lahf
ds
xor
cs
out
jecxz
negb
fadds
iret
aaa
xor
cmp
mov
repnz
mov
add
dec
pop
cmpsb
mov
xchg
xchg
lret
push
aad
mov
in
dec
xchg
pop
jo
cmc
xchg
cld
mov
rcl
push
mov
out
or
inc
pop
cli
rolb
fmulp
out
mov
test
or
pop
jo
es
std
popf
dec
cmpb
pushf
sbb
jl
ljmp
test
pushf
mov
push
icebp
nop
incl
xor
fmulp
aam
cs
imul
and
and
or
fsub
mov
jnp
xor
cmp
and
add
sbb
pop
das
outsl
aaa
xchg
mov
iret
repz
in
inc
lods
sub
sbb
sahf
pushf
jl
fildl
inc
xor
mov
sahf
jb
imulb
jb
std
mov
sbb
popa
fdivl
push
fdivl
sar
mov
in
pop
mov
les
ljmp
movsb
in
inc
pop
mov
stos
and
push
dec
jp
add
inc
or
mov
ficoml
cltd
int3
mov
xchg
int
cmp
outsl
ror
xchg
test
push
test
int
mov
fdivs
loope
inc
mov
aam
adc
pushf
imul
loop
mov
mov
cmc
ja
pop
fwait
push
xchg
into
mov
xor
jg,pt
mov
sub
push
jo
fnsave
int3
sbb
xchg
sbb
xchg
jns
imul
aas
adc
outsl
adc
jge
ljmp
mov
mov
fistpl
jl
inc
xchg
inc
add
in
es
dec
lahf
ds
scas
daa
arpl
jmp
neg
sub
test
push
sub
mov
inc
adc
mov
mov
cmpsl
jge
jmp
in
jnp
in
mov
imulb
add
mov
stos
push
test
decl
mov
out
mov
repnz
cmp
es
adc
mov
pop
push
pop
arpl
sub
loopne
fwait
inc
or
jae
test
fiaddl
jge
lret
add
jp
xor
cmp
lds
test
add
sub
sbb
lahf
fstl
fwait
cltd
iret
adc
loope
fisubl
cmpb
gs
scas
shl
push
cwtl
cmp
mov
pusha
stos
dec
aam
lret
xchg
xchg
dec
push
inc
inc
rorl
jmp
sbb
sub
imul
mov
ret
mov
sbb
mov
mov
ret
jnp
data16
loopne
mov
lods
push
negl
add
out
pop
dec
mov
out
jge
push
subl
outsl
scas
lea
pop
add
dec
mov
and
cmpsb
idiv
or
and
lock
icebp
pop
mov
dec
daa
insb
push
mov
fcomps
add
push
and
or
jg
and
aaa
repnz
repnz
bound
inc
ss
dec
scas
sub
sbb
cli
xchg
divb
shll
int
sbb
sti
cmc
insb
leave
or
mov
lds
je
mov
inc
jmp
in
or
jno
cmc
cmp
ret
rol
adc
fiadds
int
das
add
jecxz
cmpl
sbb
movsl
test
pop
loop
bound
add
dec
adc
xchg
out
inc
cmpsl
gs
jae
aam
mov
iret
xor
cmpsl
sahf
mov
and
jmp
ret
dec
lods
sbb
mov
xor
and
repnz
dec
and
insl
dec
int
push
mov
idiv
pop
jb
push
cs
xor
movsb
adc
ret
push
lcall
push
mov
jle
xor
xchg
loope
cmp
lahf
dec
fidivs
lock
ljmp
pop
repz
aad
dec
xor
ss
sub
cwtl
jg
push
mov
inc
xor
xchg
sbb
js
sbb
mov
xor
push
mov
loope
sub
push
lods
mov
mov
push
mov
jnp
sub
push
cmc
leave
stos
mov
add
or
xor
sub
in
pop
mov
jmp
lea
imul
jbe
push
or
lods
ret
sub
sub
es
xor
into
pop
cmpsl
sbb
pushf
xchg
faddl
mov
test
mov
mov
xchg
std
decb
outsb
loop
xchg
jle
outsb
push
push
fsub
sbb
scas
dec
dec
ds
sbb
cmpsb
fstpl
push
jae
imul
xchg
lods
in
jmp
inc
stos
xor
add
adc
cmp
insl
mov
mov
cmpsl
cmp
sbb
mov
lds
cmp
shlb
xor
pushf
loop
sbb
push
xor
pop
imul
jns
push
movsb
sub
fucom
fwait
stos
mov
xor
mov
je
out
pop
xchg
mov
popf
cmp
inc
andb
adc
jle
xor
ja
mov
pop
mov
jne
or
mov
cs
pop
and
scas
jnp
pop
add
push
icebp
loope
cld
push
nop
mov
add
stos
scas
lea
test
loopne
test
dec
mov
pop
movsb
das
push
xor
mov
rcrl
push
xor
xchg
loope
dec
mov
inc
push
addb
sub
fisubl
test
pusha
rclb
inc
sbb
mull
cmp
fiadds
xchg
ss
je
imul
pop
inc
nop
lcall
or
pop
mov
test
outsl
lock
leave
pop
shll
inc
mov
sahf
lods
js
sub
dec
dec
out
lcall
or
pop
xchg
jg
pushw
movb
add
mov
addr16
mov
in
jle
into
or
and
cmp
cmpsb
jg
xor
mov
icebp
jno
push
sbb
mov
and
idiv
aad
repnz
outsw
cwtl
fdivl
idivl
aas
scas
loope
out
xor
int3
push
lods
mov
push
out
enter
pcmpeqw
add
cmp
xor
leave
cwtl
lock
sbb
pop
and
adc
pushf
jnp
sbb
jp
cmp
shlb
stos
mov
in
popf
in
in
mov
dec
mov
mov
in
and
push
aas
fsts
scas
xchg
mov
pop
aam
cmc
sbb
mov
stos
mov
jb
jns
sahf
mov
push
xor
xor
push
cmp
js
lds
mov
push
imul
sbb
imul
loope
cmp
pop
fwait
inc
push
pop
sbb
cltd
adc
ja
testl
mov
les
or
lea
inc
in
jne
fcompl
sarl
lcall
addb
test
mov
cmp
testl
cltd
pop
dec
add
dec
adc
insb
push
popa
and
out
testl
inc
outsl
loop
pop
sub
mov
adc
jecxz
fs
in
adc
xor
inc
xlat
jae
xchg
je
cmp
es
fistpll
pop
mov
in
push
adc
and
hlt
bound
addr16
xchg
sub
lahf
mov
rcrb
movsl
xor
mov
push
fcomps
int
pop
dec
add
and
fimull
hlt
lcall
std
out
pop
xlat
pop
pop
inc
in
into
jle
loop
rcrl
js
rcr
mov
mov
lret
ljmp
add
stos
mov
xchg
mov
dec
ds
decl
mov
pusha
imul
dec
outsl
push
ret
aad
lret
or
pop
xor
mov
cltd
popf
pop
pop
push
jnp
mov
pop
lret
and
xchg
xchg
les
push
push
pop
pop
outsl
xchg
sbb
xchg
loop
inc
int
lret
dec
cs
mov
mov
addr16
mov
mov
inc
loop
cmp
add
mov
pop
dec
push
out
movsl
out
push
cmp
in
sub
fmul
lret
shll
and
adc
cmp
imul
or
and
jle
clc
lcall
pushf
sbb
dec
leave
scas
pop
jmp
mov
add
lahf
sub
cli
jl
in
ja
cwtl
mov
and
mov
mov
mov
aad
push
adc
fs
insl
leave
jns
repnz
mov
push
in
js
cld
punpckhbw
popf
es
jns
inc
mov
mov
pop
and
and
pop
out
mov
mov
mov
cmpsb
xchg
lahf
jne
stos
sbb
cmp
xchg
sub
clc
cmp
leave
imul
daa
sahf
cmpsb
lret
and
into
sub
imul
inc
mov
imul
fwait
sub
pop
xchg
xor
out
in
incb
scas
push
mov
push
dec
scas
cld
mov
inc
mov
test
push
push
unpckhps
jae
outsb
lcall
sbb
jno
push
leave
sbb
adc
and
lods
push
adc
push
leave
rcll
sbbl
mov
in
and
rolb
fists
pop
adc
das
and
movsl
das
cmp
sub
inc
fldl
or
mov
lods
pusha
inc
rcll
roll
scas
pop
pop
std
adc
insb
shrl
adc
dec
movsl
cli
and
movsb
mov
movntps
or
pop
test
test
in
xchg
cs
inc
cmp
fadd
pop
cmp
add
push
test
mov
out
inc
mov
add
movsb
fists
push
fldl
mov
in
loope
sbb
dec
insb
aaa
jle
jp
jle
push
cmp
jnp
ss
test
mov
mov
repz
int3
xchg
mov
xchg
insb
xor
mov
leave
pop
lods
pop
push
mulb
cmp
fs
sbb
xor
xchg
adc
mov
jge
xor
stos
int
push
cltd
nop
sub
es
mov
shll
clc
negb
into
mov
cmp
mov
pop
bound
fdiv
leave
test
or
mov
jge
cmp
or
cmpsb
into
bound
sahf
dec
cmp
sub
out
lods
cli
sahf
jae
cld
adc
aad
pusha
inc
mov
mov
inc
or
movsl
aam
jb
add
scas
sub
xchg
jo
dec
mov
cmpsb
gs
or
dec
cltd
mov
jle
stc
orl
clc
jb
or
jle
iret
fisubs
push
pop
mov
xor
mov
and
mov
movsl
fs
lahf
scas
div
lock
gs
push
bound
cli
push
dec
jne
lcall
clc
imull
mov
push
aam
into
mov
mov
loopne
in
adc
rclb
outsl
or
xor
aad
inc
dec
xchg
xchg
repnz
pop
push
out
rolb
fadds
mov
test
or
jbe
insl
test
push
clc
mov
jmp
dec
and
inc
imul
or
mov
sar
mov
shrb
aad
jg
and
testl
sbb
mov
icebp
cmp
push
and
mov
int3
hlt
rorl
adc
cmp
push
das
or
jp
sbb
insl
imul
jge
mov
pop
mov
sub
inc
mov
jg
mov
int3
dec
pop
cli
in
pop
inc
adc
pop
movsl
sub
std
shll
arpl
ficompl
js
xchg
xchg
daa
jmp
imul
cmp
int3
enter
ljmp
jo
sbb
popa
or
inc
fs
jno
mov
ja
mov
les
xchg
sbb
pop
out
sub
mull
xor
and
jo
sbb
pop
push
push
sub
int3
loopne
andl
idivl
sub
jnp
test
lcall
mov
pop
popa
xlat
adc
cmp
ljmp
in
dec
pushf
shlb
and
inc
ret
xchg
adc
int
arpl
xor
jns
inc
fndisi(8087
cmp
jmp
cmpsb
cmpsb
hlt
xor
push
or
xchg
inc
or
xor
movsb
adc
insb
out
or
fldenv
cmova
pusha
fisttps
inc
push
arpl
movsl
sub
int3
popf
push
mov
mov
xchg
adc
lods
sub
sub
and
loope
jl
sti
add
sub
out
or
mov
dec
jge
pop
daa
jbe
pushf
xchg
mov
ret
ficompl
pop
int3
sub
cltd
ficoml
dec
jp
mov
mov
push
or
cltd
or
shrl
and
arpl
sub
cs
cmp
fdivrs
aam
cwtl
repz
xor
add
loopne
ret
lcall
ffree
leave
sub
lret
ljmp
ret
ja
lcall
lea
cmp
pop
jne
in
pop
xchg
rorl
push
nop
pop
xor
aaa
int3
xchg
push
mov
or
lahf
push
or
cld
inc
or
jp
inc
push
iret
fsts
leave
outsl
rorl
inc
call
push
adc
jecxz
xor
lock
push
popa
cld
adc
jp
mov
mov
iret
inc
cmc
mov
push
cmc
gs
movsl
mov
sub
jle
inc
add
adc
adc
pop
scas
jno
lods
sti
and
push
int3
mov
mov
aas
arpl
push
leave
pop
sbbl
lock
jns
out
mov
push
pop
push
sub
stc
hlt
sbb
ljmp
cmp
arpl
mov
xchg
dec
int3
jle
sub
gs
sub
test
jge,pn
movsl
cltd
pusha
jo
sti
xor
and
cmp
mov
sarb
sub
into
es
loop
xor
cld
jl
cmpsb
bound
ficoml
popf
xor
adc
lcall
nop
testl
xor
mov
bnd
out
outsl
dec
ds
iret
or
ret
fdivrs
or
aaa
rorl
xchg
jnp
add
out
cmpsl
cmp
in
mov
jle
popf
mov
push
dec
insl
ret
mov
cmp
pop
pop
push
adc
xorb
fistpll
and
cmp
movsl
mov
mov
push
stc
dec
mov
xor
xor
addr16
out
in
sbb
es
ret
xlat
dec
loopne
xchg
push
lcall
sti
testb
jge
pusha
and
cmpsb
pop
push
mov
pop
push
cltd
outsb
sub
sbb
gs
shl
in
pop
cmp
notb
stc
sahf
xchg
fisttpll
xchg
fiadds
adc
mov
loop
and
ret
lret
fisttps
mov
mov
cmp
clc
nop
sub
mov
xchg
and
pop
outsb
shrb
fisubrs
inc
dec
loop
xor
pop
das
push
dec
or
pusha
add
mov
mov
cmp
xor
outsl
pop
mov
aad
jnp
sub
pop
jp
test
fwait
in
in
jl
push
dec
inc
inc
mov
arpl
ret
mov
jae
jge
call
sahf
and
cmp
outsl
test
testb
xchg
test
jbe
addr16
cmp
fsts
dec
push
sbb
insb
mov
outsb
outsb
xchg
inc
pop
xchg
jmp
inc
xor
inc
xchg
fildll
cmpsl
in
sub
mov
xchg
ret
mov
add
mov
jecxz
cld
mov
xor
jge
insl
clc
mov
mov
sub
mov
push
mov
adc
ds
in
lds
mov
pop
ret
push
adc
mov
push
sub
pusha
jae
or
fsubrs
out
add
rcrl
dec
loopne
scas
cmp
lods
loop
pop
or
fiadds
pushf
testb
push
clc
ss
testl
rorl
into
mov
and
mov
xchg
imul
aaa
mov
sahf
cmp
inc
ds
jne
xor
xchg
mov
xrelease
popf
sahf
push
iret
sbb
pop
jo
push
sub
gs
cmp
nop
pop
into
mov
lahf
sub
out
inc
dec
or
mov
jle
and
insb
and
popa
push
cwtl
cmc
loopne
sbb
mov
pop
sbb
add
push
out
orb
std
ljmpw
xchg
out
mov
pop
adc
repz
shlb
xchg
and
int
dec
cmpb
adc
dec
add
arpl
outsb
imul
adc
jp
cli
pop
and
jmp
mov
jb
add
inc
adc
shrl
mov
jge
mov
cltd
or
push
test
push
out
int3
pop
stos
mov
jg
icebp
jle,pt
daa
test
adcb
push
push
adc
das
scas
sbb
push
mov
testb
lcall
jo
idiv
mov
sbb
sbb
icebp
sbb
inc
mov
jg
ret
mov
dec
lret
lods
outsb
cmp
mov
cmp
das
mov
outsl
sub
lock
sbb
xchg
dec
stc
sbb
jnp
push
clc
scas
sub
cwtl
mov
outsb
mov
pop
fstps
jmp
mov
pop
mov
sub
int
fs
fnsave
dec
dec
mov
jae
fwait
add
sti
push
shrb
js
cmp
in
add
pop
call
out
in
outsl
mov
sarb
jl
pop
call
mov
pop
aam
arpl
push
push
push
xchg
aaa
inc
fwait
insb
mov
adc
push
rclb
test
add
or
dec
stos
out
mov
jne
aaa
mov
mov
fdivs
cs
gs
fiadds
mov
fwait
jle
repz
mov
pusha
mov
pop
scas
in
into
adc
sub
out
test
xchg
outsb
add
test
ljmp
loop
cmc
push
xor
and
fs
xor
imul
cld
mov
lret
cmp
imul
test
jecxz
xchg
in
push
testb
push
cmp
xchg
xlat
arpl
add
sarl
adc
out
inc
movsb
xchg
cs
mov
mov
push
cs
or
pop
and
cmc
sub
mov
xorl
movsb
or
mov
jg
dec
xchg
pusha
int3
jle
or
sbb
push
push
js
and
scas
and
out
call
in
jp
xor
movsb
fstps
cwtl
ficompl
les
in
push
enter
fcmove
mov
ss
int
inc
add
inc
sbb
cmp
and
hlt
dec
ficoml
pop
mov
dec
or
inc
repz
ret
cmc
test
dec
inc
rolb
pop
cld
call
cs
lret
test
aad
shl
mov
push
adc
mov
pop
roll
fildll
mov
pop
push
mov
push
xchg
iret
hlt
stos
xchg
lea
and
hlt
sti
fidivs
xor
pop
data16
shrb
lcall
jns,pt
mov
aad
pop
fwait
push
xchg
pop
mov
xchg
push
les
push
jle
adc
sbb
add
mov
xchg
mov
mov
mov
sbb
icebp
cld
cmpl
push
lock
sarl
jl
sub
negb
fisubs
mov
lcall
and
and
dec
mov
jecxz
jns
repz
lahf
or
into
push
testb
dec
xor
jg
int
jl
inc
cmp
dec
in
scas
nop
std
das
dec
cltd
jne
mov
and
sub
nop
dec
ja
mov
xor
std
mov
pop
outsl
js
jne
mov
xchg
add
dec
add
cmp
push
cmpl
xor
notb
cmp
sar
popf
out
mov
call
cwtl
dec
xor
aad
adc
les
outsb
sub
pop
jns
xchg
mov
fdivrl
adc
adcl
xchg
xlat
or
mov
xlat
or
sub
add
scas
int3
mov
push
mov
mov
jae
xor
sub
scas
out
mov
ret
add
or
test
icebp
mov
jne
out
sahf
xchg
scas
jbe
mov
add
cmp
add
cwtl
shl
jno
dec
adc
stos
pop
jge
daa
pop
jno
stos
xor
ljmp
xchg
push
stos
adc
dec
jo
xor
or
push
cmp
add
mov
andl
inc
adcl
mov
dec
push
fstl
or
sbb
hlt
add
imul
out
ficompl
aaa
xorb
cmpsb
push
or
sahf
and
mov
sbb
jb
inc
jnp
xor
or
mov
xor
in
shrb
mov
fistl
movsb
pop
cmp
sbb
pop
fnstcw
in
enter
jo
xor
imul
mov
inc
dec
jmp
test
in
xor
shrl
add
xchg
movsb
mov
sub
into
pop
xchg
mov
xor
loopne
repz
pop
jle
add
mov
test
sbb
std
out
jecxz
stos
lret
data16
mov
xchg
sub
mov
or
jg
sbb
outsb
pusha
xor
in
lods
mov
pop
mov
xchg
adc
lods
mov
push
cmpsb
mov
sbb
mov
or
sub
outsl
xor
cmp
push
xchg
pop
jnp
jge
sub
daa
jle
adc
in
cwtl
xor
repnz
aas
inc
dec
idiv
loop
mov
xchg
incb
cmp
jns
lods
pop
add
popa
stos
mov
fs
mov
adc
ret
test
or
cmpsb
icebp
jmp
jl
mov
jmp
dec
inc
mov
leave
xchg
stc
dec
xor
cli
xor
mov
pop
xor
xor
out
jle
pop
out
iret
jmp
outsl
sahf
jnp
imul
in
add
mov
xor
out
es
adc
lds
inc
xchg
xor
push
bts
lahf
and
xchg
dec
sub
lods
enter
cs
xchg
int
sbb
ficoms
lds
pop
pop
adc
mov
mov
test
pop
mov
test
arpl
aam
fnstenv
sbb
cs
jb
call
int
xor
inc
das
mov
cmp
push
addr16
call
jl
adc
mov
dec
hlt
stos
subl
mov
aad
imulb
mov
dec
adc
ds
pop
aam
movsb
pusha
cmpsb
pop
pop
int
lock
push
nop
xor
jnp
dec
push
lea
gs
shl
cmp
pop
dec
das
dec
adc
and
adc
loope
xchg
pop
fwait
and
jp
or
mov
and
mov
jecxz
lods
mov
or
test
xor
pop
pop
sbb
sbb
dec
lcall
sarb
sub
pop
icebp
stos
xor
or
dec
into
pop
mov
adc
rcr
mov
ja
das
ret
scas
xchg
sub
mov
inc
repz
add
sub
mov
and
fdivp
mov
sbb
std
jge
push
jno
xchg
push
or
in
dec
es
fs
fidivs
daa
in
xor
inc
scas
mov
test
addr16
ret
or
mov
sbb
fwait
out
or
out
xor
pop
scas
jecxz
xor
push
pushf
cmp
movsl
pop
jp
insl
cwtl
out
xchg
bnd
fstpl
adc
xchg
std
add
mov
das
or
aam
sbb
lret
mov
mov
mov
mov
push
sti
les
adc
sub
fsub
mov
arpl
xchg
popf
clc
mov
cmc
arpl
ret
jle
pushf
pop
lahf
inc
test
jg
mov
daa
lods
pop
call
sub
fcom
cwtl
mov
je
in
cmp
subl
cltd
outsb
mov
jl
fld
cmp
lret
adc
popf
sub
dec
fdivl
daa
ljmp
pushf
loopne
pop
or
fdivs
repnz
inc
xchg
sub
fwait
sub
movsb
outsl
mov
rclb
leave
pop
das
pop
fldenv
mov
xlat
dec
fdivr
movsb
jno
out
cmp
test
lcall
jl
shrl
loop
stc
lcall
jge
je
imul
pop
rolb
mov
cld
dec
xchg
push
dec
cmp
aas
cwtl
or
mov
ret
push
push
xlat
push
nop
insb
loope
sub
fiadds
js
sbb
and
stos
int3
mov
out
pop
or
mov
clc
push
ret
lahf
testb
negb
call
jbe
mov
mov
cmp
mov
inc
dec
test
loop
iret
mov
and
insb
test
imul
xchg
cmpsb
in
inc
cmp
push
roll
jp
loopne
sahf
add
jg
cmp
aaa
mov
mov
movsl
pop
cmp
bound
mov
adc
ficomps
test
mov
int
sub
sub
repz
es
sbb
into
ss
fldenv
js
mov
insb
or
repz
fwait
cmpsb
shll
inc
adc
in
xchg
xchg
leave
out
cmpsb
mov
aam
lahf
test
cmp
clc
push
repz
mov
push
mov
mov
lds
stc
call
jo
push
cs
fs
test
xchg
roll
sahf
xchg
push
adcl
fdivs
mov
sub
xchg
and
fisubrl
add
add
outsl
inc
and
push
sbb
test
jae
dec
js
test
xchg
cltd
clc
subl
jg
fdivp
mov
pop
pop
jae
push
leave
ljmp
outsb
fstpt
cmp
cmc
ror
jno
mov
lahf
in
pop
sub
jne
push
mov
pop
icebp
adc
dec
inc
push
test
jno
inc
ret
cmp
sbb
jge
lret
clc
pop
xchg
dec
int
sub
ret
insb
inc
cmp
lret
adc
testl
imul
inc
inc
and
out
int3
lret
dec
cmp
xchg
push
repnz
jb
shlb
sbb
out
insl
test
dec
stos
in
push
inc
pop
push
cld
lea
push
dec
mov
lds
add
xor
pop
lret
mov
inc
stos
out
insl
lret
int
xor
cmp
mov
push
mov
sbb
cld
hlt
repnz
cmp
jne
lds
dec
push
loopne
push
and
jbe
mov
push
cmpsb
lods
fsubrs
adc
ds
negb
popa
sbbl
stos
or
xor
lock
cmpsb
xchg
xchg
rolb
mov
out
aad
popa
nop
dec
pop
std
rolb
cmp
dec
std
cmp
jae
stos
jb
mov
sub
mov
cmpsl
test
ja
int3
arpl
mov
call
fisttpl
repnz
xchg
int
rorb
dec
pop
negl
ds
mov
ret
out
xchg
and
shlb
push
mov
jge
dec
ljmp
cmp
xlat
gs
jns
movsb
mov
sbb
dec
sbb
dec
test
fdivrl
fildl
in
mov
sbb
in
push
rclb
sarb
lock
andb
pusha
mov
sbb
pusha
shrb
nop
fwait
pusha
aaa
ret
adc
pop
fsubrp
jmp
and
popa
test
jb
push
adc
mov
bound
fldenv
in
cwtl
cld
mov
add
cmp
sbb
mov
sub
je
testb
xchg
or
stc
xchg
push
call
aas
cmp
cmp
mov
mov
sbbb
push
cld
shll
in
ret
test
sbb
xor
mov
dec
movsl
inc
insl
pop
mov
pop
cmpsl
jmp
lods
aam
shll
xor
cmp
sbb
and
add
xchg
in
out
outsb
pop
xchg
adc
mov
jmp
xchg
jl
je
stc
imull
out
adc
mov
pusha
adc
les
jb
scas
dec
lcall
repz
negl
cmpps
mov
jnp,pt
lock
and
sti
out
mov
test
loopne
cmp
push
ljmp
mov
das
fistl
outsl
lds
dec
rcrb
mov
pusha
sbb
mov
push
nop
lods
repnz
ret
js
cmc
cmp
mov
mov
aas
xchg
pop
bound
es
pop
mov
push
adc
adc
mov
pop
scas
sbb
jns
mov
jno
stc
sub
call
nop
inc
mov
loop
push
mov
stos
testb
mov
inc
daa
mov
ror
fsub
or
jp
jo
lods
popl
xor
out
push
jns
cltd
fdivr
pop
adc
out
adc
aaa
cwtl
push
addr16
pop
dec
aaa
xor
lods
sub
push
jmp
cmp
jae
imul
jae
mov
push
sbb
jle
in
push
cmp
iret
fdivrl
dec
mov
and
dec
xchg
lcall
add
mov
jmp
pop
rorb
rcr
aad
dec
clc
sub
cs
push
outsl
push
cmp
xchg
cmp
mov
leave
mov
cmp
sbb
filds
inc
clc
test
xchg
push
lea
add
and
js
and
push
sub
jno
ret
in
in
jecxz
xchg
aad
push
pop
cmovg
aas
jp
popa
lret
adcl
gs
aam
lods
sbb
mov
pop
jbe
in
push
push
aam
rorb
scas
imul
sbbl
add
shl
mov
rorl
jns
push
lcall
pop
adc
cmp
out
pop
into
call
out
outsb
xor
bound
mov
mov
mov
movsl
pop
pop
fnstcw
orb
fisubs
pop
xchg
or
add
push
jecxz
or
arpl
es
les
push
dec
xorb
int
ss
nop
push
jo
popf
adc
cmp
inc
dec
mov
aas
ret
call
mov
pop
mov
jnp
stc
and
mov
arpl
jns
cld
fimull
xor
push
or
and
lds
jle
mov
xchg
icebp
lods
decb
repz
sahf
stos
icebp
add
mov
das
dec
lcall
add
loope
fucomip
mov
or
mov
call
add
adc
icebp
or
or
daa
ss
stc
adc
pop
std
or
push
sub
divl
cmc
push
ds
mov
push
dec
push
dec
les
jns
lds
adc
insb
xor
std
pop
stc
push
inc
or
mov
jnp
mov
sub
push
jg
jno
xchg
sbb
aad
or
push
pop
add
subb
dec
and
repz
cmpsb
mov
sub
scas
rolb
stc
ds
and
pusha
jge
imul
xor
dec
fildll
nop
lds
mov
ljmp
mov
mov
xor
xor
into
mov
and
testb
mov
add
sahf
scas
je
jo
xor
mov
in
pop
incb
sbbb
lret
lods
lretw
add
inc
dec
push
mov
adcb
adc
pop
aad
sti
repnz
lea
popa
loope
insl
loope
daa
incb
cltd
pushl
push
scas
scas
fcomps
cmpb
push
inc
or
lods
faddp
or
loop
arpl
mov
in
xor
add
loope
stc
mov
fstpl
sub
lcall
pop
insl
cmpsb
or
mov
mull
iret
sbb
jns
inc
ljmp
jmp
pop
lcall
enter
or
sbb
das
xor
incb
xlat
aaa
jecxz
mov
mov
mov
mov
std
out
mov
inc
rcrb
pop
mov
push
push
rolb
lahf
loop
mov
push
mov
hlt
mov
push
cmp
cmpsb
xchg
pop
ljmp
call
movsl
stc
mov
mov
add
push
mov
popl
add
inc
rdtsc
call
sti
call
std
push
push
dec
push
inc
stos
sub
add
cmp
sub
popf
inc
pushf
shl
rol
inc
sbb
in
push
push
rcrb
cmp
dec
aam
xor
mov
or
jle
push
mov
cmp
stos
lods
pop
xor
xor
sbb
or
fs
ds
leave
daa
repz
bound
mov
iret
lcall
lds
and
cmp
out
cmp
push
js
clc
insl
and
dec
lds
dec
push
push
in
in
add
daa
or
push
aaa
xchg
inc
cmp
inc
add
ficompl
cmpsl
dec
jecxz
cwtl
sbb
inc
inc
in
ljmp
lahf
or
push
notb
leave
inc
les
scas
lods
sbb
mov
std
aas
adc
lea
mov
adcb
rcll
lea
push
cmp
insb
sbb
fiadds
lret
nop
xchg
int3
jo
xchg
mov
mov
pop
jnp
cmc
push
mov
enter
push
pop
push
out
and
sub
lds
cmp
aam
insl
ds
lock
mov
insl
pop
aas
mov
add
pop
imul
inc
adc
or
pop
negl
leave
int3
pop
inc
dec
jl
dec
mov
push
lods
inc
xchg
push
ja
cmp
dec
ja
and
aam
lods
or
stc
fisubl
pusha
outsb
faddl
xchg
outsb
dec
push
fwait
aas
loop
sbb
loop
out
or
fimuls
ret
lcall
test
pop
xor
inc
push
out
ret
addb
cmp
popa
inc
out
jnp
adc
adc
out
cmp
and
adc
and
mov
inc
cmp
adc
sti
push
jle
adc
int
push
push
addr16
adc
sub
mov
sbb
cmp
push
sub
popf
sub
dec
je
xchg
clc
es
xlat
or
aam
sub
pop
push
aas
mov
add
sahf
add
xchg
sbb
mov
lods
xlat
sub
or
and
push
in
mov
mov
rcl
push
lret
insl
test
ja
out
xchg
je
adc
xchg
cmp
scas
out
push
cmc
ret
test
pop
sbb
push
movsb
sub
jge
fwait
mov
xor
and
sti
out
or
mov
jb
push
xchg
and
sub
adc
sub
lahf
mov
sarb
loopne
outsb
jle
scas
sub
mov
sbb
addr16
xor
mov
jmp
xor
push
pop
cmp
jge
repz
mov
mul
lret
mov
out
pop
cmp
in
and
out
pop
lods
loopne
fcmove
int
adc
into
xor
mov
jmp
cltd
mov
mov
out
lcall
insl
outsl
mov
push
xor
cmp
js
stos
sar
lods
mov
and
daa
xchg
mov
xchg
dec
pop
dec
and
add
or
dec
xchg
mov
mov
mov
nop
test
xor
mov
adc
iret
rorl
scas
and
dec
int3
mov
int3
jae
ret
push
pop
cmp
cmp
add
js
dec
sahf
cmpsb
sub
mov
lahf
mov
push
push
je
inc
adcb
inc
fldt
mov
insl
mov
pop
xor
inc
cmp
push
lret
dec
shlb
shll
dec
jp
lock
addb
dec
cmp
push
in
arpl
sub
add
aaa
add
dec
mov
push
ret
cs
dec
sbb
popf
add
imul
imull
xchg
sub
mov
dec
adc
test
loopne
ds
cmc
loope
inc
test
push
sti
daa
je
setb
decb
jmp
shll
pop
pop
insb
push
dec
mov
shlb
xchg
sbb
mov
fisttpl
mov
jg
out
ret
xchg
sbb
cmpb
jb
ret
in
test
test
add
push
lea
popf
mov
popa
popf
jae
movsb
lret
cld
cmp
jmp
ljmp
add
pop
push
pusha
add
sub
enter
roll
dec
les
rclb
mov
dec
andl
call
jb
cs
jb
jp
rcll
add
jle
sti
ja
jmp
sbb
scas
pop
imul
cmp
sub
leave
daa
addps
rcrl
and
xor
adc
pop
jne
sbb
in
or
mov
mov
xor
ret
and
insl
pop
bnd
inc
mov
bound
ljmp
mov
pop
lret
jle
data16
shlb
mov
cmpl
js
xor
and
xchg
mov
fsubrs
ss
cmpsl
mull
jecxz
ja
dec
dec
push
icebp
ljmp
and
sub
mov
push
jno
call
lods
cs
stc
out
xchg
dec
pushf
push
insl
mov
cltd
add
pop
aas
iret
clc
mulb
mov
mov
fldenv
lahf
into
xor
jnp
cwtl
jne
cmp
lods
test
mov
ja
push
aad
stc
dec
mov
insl
jns
mov
adc
mov
adc
push
test
or
push
scas
jnp
fwait
push
fstl
fstpt
filds
jb
sbb
pop
or
xchg
lds
push
mov
rol
mov
jae
aas
sub
xchg
lea
push
repnz
xchg
xor
lea
int
mov
mov
cwtl
dec
add
and
adc
out
xchg
cmc
xchg
and
inc
mov
mov
adc
or
mov
jno
mov
cmp
out
mov
cmp
mov
dec
imul
sbb
dec
inc
inc
or
dec
or
add
and
test
add
bnd
mov
mov
pushf
or
movsb
imul
xor
jb
je
lahf
or
shrl
push
xchg
fadd
test
sarl
xchg
repz
xchg
mov
out
inc
push
ret
inc
loopne
fiadds
bound
cmp
lret
pop
je
mov
inc
imul
sbb
sub
pop
mov
imul
scas
push
mov
xor
das
or
rorb
into
sbb
cmp
aaa
dec
shr
sub
pop
jbe
lret
insb
mov
adc
and
or
andl
jp
sbb
cli
pop
int3
sbb
mov
pop
mov
mov
jmp
cmp
push
lea
mov
test
lahf
out
xor
inc
xchg
jbe
and
jbe
inc
inc
add
test
inc
call
iret
dec
mov
dec
and
xor
in
push
inc
xchg
arpl
and
fimull
and
daa
or
cmp
xor
jno
sub
xor
xlat
lcall
dec
xor
pop
cli
aaa
and
sbb
enter
repz
mov
push
jle
out
pusha
stc
movsb
cmp
inc
pusha
imul
bound
fnstsw
lret
push
dec
xor
ds
out
stos
inc
dec
adc
mov
insl
pushf
or
xchg
aad
jnp
xchg
ljmp
push
sbb
addr16
lea
adc
testb
insb
sahf
dec
testb
inc
dec
ja
xchg
ja
push
std
roll
pusha
addr16
xlat
int3
lea
sub
mov
loop
mov
aaa
inc
int
pushf
cmpsl
or
sahf
jnp
punpcklbw
inc
test
lds
xchg
jp
bound
orl
stc
jg
stos
mov
icebp
jno
sti
rcrb
xor
push
pop
adc
or
mov
push
stos
inc
out
pop
push
inc
mov
fldt
je
xor
dec
sbb
or
mov
sub
mov
sub
xor
push
sub
insl
inc
jns
pop
out
xchg
loopne
pop
add
ss
jmp
push
ret
aad
lahf
mov
sub
mov
push
push
mov
add
or
adc
jle
mov
cmp
push
jne
mov
dec
add
pusha
xor
sahf
pop
int
js
pop
stos
loopne
or
mov
lcall
jo
lret
in
cmp
stos
push
mov
inc
test
cmp
sar
testb
or
mov
das
mov
jns
push
mov
aaa
add
in
ljmp
push
inc
push
aas
and
imul
and
test
cmp
lock
nop
sete
mov
inc
in
inc
jae
adc
fdivr
adc
sahf
sub
xchg
outsb
add
inc
pop
sbb
or
add
jne
and
out
pop
call
js
or
push
add
fsub
add
js
xchg
jle
cld
hlt
inc
fisubrl
fidivrs
mov
mov
xlat
aad
mov
jmp
pushf
enter
jecxz
and
jge
push
pop
mov
popf
idivl
fucomp
nop
daa
dec
cmpsl
lret
mov
xor
sbb
adc
sub
xor
mov
mov
das
nop
subb
mov
js
mov
mov
sub
dec
fs
xor
jge
imul
cltd
out
addb
fldl
push
pop
out
push
aaa
xchg
out
lock
xchg
insb
out
cltd
push
notb
jbe
push
jnp
adc
aam
or
dec
cmp
pop
xor
and
imul
mov
fistl
mov
bound
cli
xor
mov
push
jmp
sti
das
les
dec
mov
push
sbb
mov
rcll
rcrb
mov
mov
mov
mov
sbb
nop
adc
lods
xor
inc
mov
frstor
imul
add
or
push
pushf
pop
shlb
call
es
ficoml
sbb
and
adcb
out
xor
iret
hlt
in
add
or
sahf
dec
pop
mov
jge
fwait
ret
and
lret
test
das
shll
xor
sahf
cwtl
test
mov
xchg
fs
popf
int
adc
cwtl
lock
js
outsl
push
fs
jb
mov
jb
orb
leave
mov
and
mov
mov
adc
add
sbb
pop
push
stos
add
mov
add
xchg
or
xor
ret
or
mov
cld
mov
inc
push
jmp
sbb
mov
cmp
push
js
sub
adc
adc
push
sub
add
sub
arpl
xchg
loop
lock
xchg
dec
adc
jl
dec
pop
testb
in
lret
jle
dec
aas
cwtl
xchg
jmp
mov
dec
cmp
lcall
mov
shlb
mov
iret
or
in
std
sbb
lods
adc
xchg
xlat
clc
jb
mov
subb
and
push
adc
dec
adc
ror
xor
and
xchg
jle
clc
push
or
push
shlb
xchg
mov
outsb
test
xchg
xor
cs
add
aam
inc
loop
and
mov
cmc
mov
pop
scas
inc
xor
test
lahf
dec
adcl
push
mov
jge
call
repz
cmc
dec
and
les
movsl
sbb
mov
pop
jo
out
nop
adc
in
cmp
pusha
ret
addr16
mov
mov
dec
loopne
sbb
add
sub
out
shr
stc
xorb
adc
jae
jns
jecxz
imul
sub
or
cli
bound
stos
dec
enter
adc
aad
mov
and
xchg
enter
cmp
mov
daa
cltd
loopne
jne
jecxz
sub
cmpsb
jecxz
or
pop
divl
jo
sahf
stc
out
jg
lcall
cwtl
fiadds
mov
mov
sub
xchg
xchg
hlt
cmp
insl
adc
insb
dec
stos
sbb
std
mov
jmp
aas
xor
test
mov
stc
das
xor
xchg
xlat
pop
xchg
or
inc
in
jle
pop
jge
pusha
dec
stc
out
ret
add
mov
mov
dec
adc
pop
shl
outsb
pushf
jmp
gs
xor
insl
rcrb
ja
mov
xor
push
xchg
jp,pt
clc
push
add
pop
jecxz
out
or
fsubp
push
push
nop
pop
ret
insb
into
pop
and
jmp
bound
pushf
scas
subl
sbb
and
jg
jne
movsb
jl
negl
mov
cmp
cli
into
mov
vmovq
mov
xchg
jmp
shr
jo
orl
jp
xchg
jg
push
push
add
dec
pop
mov
test
push
mov
std
popf
test
and
dec
sub
mov
mov
pop
mov
sbb
jge
adc
cmp
inc
jecxz
fiadds
lods
imul
iret
lods
jne
jnp
xchg
jp
fs
shl
out
mov
andl
dec
push
ja
mov
pop
and
xchg
repz
fdivl
sbb
sbb
std
nop
ds
mov
dec
sub
rcr
fisubl
add
popa
push
ret
jo
mov
jge
dec
cld
lds
adc
test
dec
or
xchg
or
dec
insl
dec
sub
mov
test
imul
cmc
sar
stc
and
loope
adc
xchg
sub
outsl
in
ret
sub
and
cmp
or
movsb
push
push
cmp
test
jge
sti
jl
scas
adc
mov
divb
sbb
or
outsb
arpl
sub
cmpl
jb
notl
mov
or
movsl
pop
adc
jg
stos
and
stos
mov
ret
xchg
stos
movsl
cld
sub
std
enter
ja
cmp
movsb
aam
cmpl
mov
sbb
jo
cmp
test
cwtl
inc
incl
xor
adc
add
inc
xchg
daa
mov
add
fwait
push
ja
add
repnz
cmpsb
lahf
or
loope
pop
hlt
test
imul
pusha
das
das
pop
cmp
dec
mov
mov
mov
jb
aaa
and
imul
adc
sbb
nop
jge
push
test
xor
inc
pop
inc
sbb
outsb
movb
cwtl
push
and
inc
push
lds
std
inc
rcrl
dec
out
cmpsb
jb
or
dec
adc
inc
lock
jge
shl
push
mov
mov
iret
das
inc
lret
inc
inc
inc
stos
ss
jmp
scas
jl
ds
push
aaa
push
sti
call
rorl
inc
sbb
sub
add
std
pushf
rcrb
pop
or
loopne
inc
outsl
xor
push
and
out
int
add
mov
scas
roll
test
mov
mov
xchg
mov
xor
inc
push
mov
in
sub
iret
sbb
push
mov
cmp
inc
adc
and
jb
ret
xor
jle
mov
ja
mov
dec
inc
dec
and
pop
mov
pop
call
xorb
sbb
addr16
cmpsb
mov
dec
int3
movsb
sub
sub
xchg
and
cmp
sub
jo
pushf
fs
jge
dec
pop
ficompl
or
push
data16
iret
adc
push
imull
jp
inc
cmp
pop
cmp
or
ja
dec
mov
sbb
jo
mov
loopne
inc
xorl
mov
hlt
xchg
xor
lcall
lods
pop
inc
dec
hlt
lods
fstl
jg
popa
std
imul
mov
and
mov
and
push
sub
inc
dec
mov
xorb
divb
mov
jle
and
add
cmp
mov
mov
pop
daa
sbb
aad
sbb
je
and
lods
sub
mov
lret
inc
mov
lcall
leave
mov
pushf
push
mov
popf
jge
mov
inc
mov
out
fildll
mov
and
imul
cli
imul
mov
les
mov
jae
dec
add
mov
dec
rcr
adc
int3
test
hlt
repnz
incb
int3
dec
push
mov
scas
and
clc
sub
fldt
bound
inc
sub
mov
mov
inc
dec
cmp
mov
inc
orl
out
cmp
pop
adc
lahf
fidivs
rorl
dec
sub
daa
imul
out
bswap
test
push
xchg
mov
aas
ja
lahf
js
mov
pop
adc
inc
cmpsl
pop
mov
jg
push
ds
push
push
dec
jbe
scas
dec
sbb
adc
and
lcall
jmp
outsb
outsl
mov
mov
push
and
fwait
cmp
into
xor
mov
inc
mov
mov
jmp
sbbb
mov
push
nop
shll
ficoms
inc
mov
std
clc
jp
mov
cli
inc
mov
and
mov
adc
xchg
aaa
movsl
fwait
mov
add
and
movsl
div
dec
xor
pop
jo
inc
sub
out
sub
cltd
pop
dec
ret
mov
rolb
clc
jo
mov
les
mov
xchg
int3
mov
cli
push
pop
pop
push
or
and
xor
loopne
rorb
add
fsubrl
adc
cld
inc
push
into
inc
jb
inc
lcall
sahf
mov
sahf
movsl
pop
js
xchg
repnz
mov
jle
scas
call
dec
cmpl
loopne
cmpsb
das
jmp
clc
and
pusha
pop
andl
addr16
shll
mov
inc
sub
fmuls
pop
sub
mov
pop
mov
add
loopne
insl
iret
mov
loope
sub
outsl
insl
fld
cld
add
sbb
nop
mov
stos
aam
xor
or
loope
stos
jbe
int
jmp
insl
push
pop
xchg
xchg
ret
mov
mov
dec
cli
aas
test
xchg
adc
and
inc
pop
and
lcall
leave
jb
xchg
mov
stos
ret
cmpsb
or
or
ficomps
xchg
jno
pop
jle
sti
push
insl
sbb
push
jecxz
xlat
dec
xchg
jne
in
nop
xchg
je
dec
je
int3
inc
repz
nop
arpl
stos
push
push
sbb
je
aad
mov
divl
aaa
aaa
jb
out
ret
jg
mov
fsqrt
or
add
push
call
jg
push
test
sbb
pop
push
mov
jo
push
out
cmp
lret
xchg
mov
les
lods
dec
cmp
out
daa
fsubs
imul
xchg
shll
test
je
movsb
insl
mov
sbb
push
in
loopne
add
outsb
inc
dec
int
mov
cmp
mov
enter
add
nop
ret
fadds
xor
cmp
lock
inc
jb
push
pop
out
pop
ja
aas
dec
fwait
xor
jp
dec
pop
cmp
subb
cwtl
sub
pop
xchg
lods
pop
sbb
mov
insl
inc
push
cmpsl
mov
lahf
popa
aas
or
fistl
jne
add
xchg
mov
or
movsb
xchg
sbb
out
sbb
and
int3
or
stos
and
insl
scas
sub
adc
cmp
mov
jnp
mov
jg
popf
sbb
fs
insl
mov
push
lret
rclb
or
pop
loopne
shr
jno
ds
pop
sub
cli
jbe
outsl
insl
and
testl
dec
xor
lds
mov
sbb
push
shlb
inc
mov
les
test
fdivrl
lret
stos
xor
or
scas
jp
out
dec
or
stos
loopne
push
imul
inc
cmp
ret
lea
jmp
and
iret
inc
or
aad
ljmp
ljmp
and
lahf
fisttps
icebp
popf
dec
daa
inc
pop
data16
aas
jns
mov
pusha
jns
xchg
adc
mov
sub
push
cmp
inc
adc
icebp
sbb
adc
add
mov
cmp
repz
mov
das
xor
es
test
push
sub
out
mov
sahf
sbb
dec
movsb
xchg
xchg
or
mov
sets
push
jmp
std
sbb
mov
or
pop
ret
dec
and
out
mov
dec
fsubrl
xorl
cld
int3
lret
cmp
inc
loop
inc
aad
movsb
bound
call
inc
jb
cmp
xor
inc
or
sbb
cmc
inc
leave
mov
sub
or
or
jge
pusha
adc
stos
pushf
stos
jmp
xchg
pop
jb
and
sbb
sub
pop
mov
in
cmp
xor
fisttpl
sub
rorb
movsl
xchg
sub
add
xlat
loopne
cltd
lahf
jb
daa
bound
cmp
popa
popf
adc
ret
jl
xor
cld
add
jb
cmp
or
push
xor
xchg
call
mov
xchg
mov
jecxz
mov
lock
inc
xchg
push
mov
jge
xchg
out
aas
fimuls
cmp
sub
mov
jp
dec
les
and
orb
imul
int
xor
dec
pop
rorb
xchg
scas
or
and
lock
xor
sub
xchg
mov
sub
cli
mov
or
repnz
fstpl
xchg
or
cmp
sub
jecxz
cmc
popf
jae
xor
rcrb
fiadds
inc
push
stos
imul
and
lret
xor
dec
push
nop
xchg
incb
or
xchg
in
jg
iret
mov
adc
loop
ja
xchg
aad
xchg
dec
fmuls
fidivrl
pushf
les
push
stos
or
pop
pop
sub
mov
xchg
push
mov
into
out
shll
sbb
into
xlat
adc
sub
shlb
mov
inc
outsb
mov
mov
loope
arpl
pushf
push
mov
jbe
orb
lcall
divl
sbb
mov
ror
xchg
and
jae
sbb
cmc
andl
jge
push
aas
lret
pushf
push
mov
xlat
push
out
xor
pop
loopne
loope
cmp
adcl
sub
and
call
xchg
xchg
sbb
mov
add
pop
dec
out
mov
jb
jno
fs
rol
cmpsl
fisubl
push
sbb
adc
dec
fcmovnb
arpl
sub
sbb
ror
aam
lods
jbe
in
cld
xor
pop
ss
mov
push
mov
cmp
out
ljmp
ret
mov
ret
cwtl
dec
sbb
push
cmp
test
cmp
jmp
xchg
sub
jmp
adc
inc
sahf
push
sub
adc
int3
lods
test
sahf
jne
inc
fnstsw
xchg
xor
and
ja
dec
sub
sub
sahf
popf
das
loopne
lods
lahf
call
addr16
and
xor
dec
xchg
mov
jge
loope
inc
das
inc
xchg
das
sbb
outsl
push
es
shll
std
jne
jmp
push
mov
add
push
test
push
jp
mov
pop
int
xor
sbb
and
xchg
xchg
in
fs
dec
fsubs
mov
add
mov
lock
aad
ja
lcall
sarb
or
mov
cmpsl
lret
cli
sarl
inc
push
pusha
jl
insb
add
sbb
mov
xchg
je
mov
lock
insb
mov
jg
cmpsl
aad
cmp
pop
pop
xor
inc
jnp
mov
jmp
lahf
fwait
jecxz
out
jno
pusha
rorb
mov
adc
cmc
mov
decb
outsl
mov
arpl
sti
icebp
mov
jmp
lods
add
push
or
push
sbb
push
jge
xor
rol
fdiv
ss
insb
dec
in
xchg
mov
mov
add
rep
mov
repz
int3
sub
push
fsubrl
cld
pop
in
mov
mov
xchg
jnp
in
inc
in
sub
jecxz
aad
mov
notl
sahf
sbb
mov
sbb
data16
insl
enter
mov
fisubrl
add
jae
lds
dec
add
add
dec
loop
cmpsb
pop
scas
add
add
push
jne
inc
add
or
mov
fcmovnu
dec
xchg
ret
mov
inc
and
ja
xchg
xor
fsubrp
popa
lds
sub
arpl
mov
pop
push
and
fwait
push
nop
lds
shll
and
sub
cs
sbb
in
incb
orb
sub
dec
insb
xchg
imul
xchg
movb
pop
push
mov
sbb
mov
mov
sbb
adc
outsb
or
stc
int3
test
dec
dec
mov
and
push
insb
pop
rorb
fnsave
cltd
aam
mov
xor
mov
add
inc
icebp
sbb
xor
fcmovbe
mov
or
std
flds
test
add
cmpsb
add
pop
jmp
arpl
ja
push
sbb
jle
jmp
lret
mov
mov
lret
pop
and
jno
lock
imul
pop
and
js
xor
insb
xlat
sub
sbb
jae
xchg
dec
insl
cmp
dec
jg
adc
loop
out
bound
dec
adc
sub
ja
add
clc
and
gs
push
cmp
loopne
pop
jle
ja
int
fcomps
xchg
ss
dec
xchg
push
fwait
jne
mov
cmc
jge
in
test
mov
pop
mov
sub
clc
cmc
sbb
mov
ficoml
adc
aam
and
cmpsb
adc
pop
loop
sub
mov
loope
cld
adc
popa
pop
xchg
addr16
xchg
mov
fwait
dec
push
or
mov
mov
or
pop
jo
rcr
inc
cmpsb
sti
mov
xchg
pop
imul
cmpsb
cmp
test
je
and
jge
test
add
push
dec
loop
mov
ljmp
aas
push
jl
or
inc
and
test
movsb
test
push
imul
jmp
nop
mov
mov
js
push
pop
xchg
inc
lcall
fisttps
out
push
std
mov
aam
cmpb
dec
lret
stc
cmp
jne
xchg
or
lcall
xor
jge
xchg
push
xchg
shr
xor
repz
mov
mov
scas
pushf
pop
rcr
pop
stos
pop
stos
rorl
mov
test
xor
rcrl
pushf
daa
insl
lods
adc
sbb
pop
pop
mov
popf
xchg
bound
adcb
jge
arpl
jecxz
dec
pop
pop
mov
test
cmp
pop
adc
xlat
enter
jne
pop
lock
clc
repz
mov
inc
pop
pop
cmpsb
gs
lods
sub
ss
adc
into
push
mov
or
dec
xor
or
lret
jl
cmp
mov
mul
xor
psubusw
or
test
cltd
mov
dec
cwtl
mov
xor
imul
das
aas
mov
inc
ffree
ret
shlb
sub
xchg
std
push
sbb
adc
scas
aaa
mov
adc
int3
es
mov
xor
add
pop
xchg
imul
sti
sub
pop
add
ds
data16
aaa
cli
adcl
ja
jle
je
arpl
imull
lea
fdivl
push
addr16
out
mov
testl
push
sbb
divl
data16
push
add
divb
mov
and
xchg
xor
mov
lods
test
push
fbstp
inc
xor
aaa
dec
fbld
xor
cmpsl
pop
adc
add
jg
sub
mov
xor
add
out
adc
add
mov
push
nop
aam
cs
repnz
cmp
loop
ds
add
add
sti
fidivrl
arpl
loop
clc
outsb
lock
repnz
test
mov
adc
xchg
mov
cmp
lret
sub
cmp
mov
js
mov
pop
out
mov
andl
adcb
outsb
push
jmp
pop
testb
cld
or
pandn
adc
pushf
jecxz
add
call
dec
push
add
and
xor
aaa
mov
mov
sub
stos
test
push
or
xor
pop
loope
sbb
and
ljmp
mov
xchg
incl
xor
hlt
std
add
rclb
sbb
out
frstor
sub
cld
fs
mov
mov
imul
mov
test
dec
ss
pop
call
adc
jmp
adc
xchg
test
xchg
cmpsb
xchg
data16
es
test
test
inc
dec
jmp
or
ret
int
pop
or
inc
hlt
xchg
or
movsl
push
maxps
loopne
xor
mov
hlt
push
dec
in
sbb
mov
cmp
push
mov
aaa
popf
mov
stc
int3
pusha
adc
aaa
push
sti
movsb
mov
inc
xor
xor
push
xchg
dec
movsl
or
fidivrs
inc
popa
or
push
aad
dec
stos
cmpsl
imul
push
loopne
es
leave
pop
std
pop
neg
add
int
fistpll
xor
dec
into
jp
aad
cltd
inc
jmp
push
imul
mov
lock
cmp
jl
int3
inc
dec
jo
xchg
add
push
cmc
mov
idivb
push
lods
shll
push
mov
adc
xor
daa
cwtl
xchg
sbb
cli
mov
cmp
cmpsl
pop
pop
fidivrl
insl
mov
stos
push
jae
pop
shll
scas
sbb
cmc
dec
arpl
jnp
xor
shll
stos
sub
mov
out
dec
ss
ljmp
mov
add
xlat
xchg
mov
xor
pop
nop
sarl
lret
dec
or
xchg
rolb
stos
ljmp
sbb
jle
jns
push
in
addr16
push
cltd
daa
jbe
add
lcall
push
xor
lcall
jae
aas
lret
xchg
lret
jl
push
mov
jp
and
iret
and
scas
test
sbb
sub
add
fistps
jp
mov
aad
insb
push
jns
loope
add
cmp
in
inc
inc
add
addl
dec
inc
xchg
pop
shll
das
mov
sub
mov
mov
movsl
insl
xor
fmull
push
in
ret
and
mov
mov
data16
sbb
pcmpeqw
insb
sub
or
or
inc
push
pop
ds
mov
xchg
pop
push
cmc
aas
xchg
jo
and
ret
pushf
std
bndstx
rorb
xchg
out
das
sti
icebp
addr16
or
cmc
stos
popa
sbb
xchg
or
sub
icebp
mov
or
nop
pop
push
push
jb
std
adc
loopne
adc
stos
or
push
cli
aaa
mov
shll
jmp
add
push
or
test
jne
cmc
mov
mov
push
es
outsb
pop
je
pop
cmp
lcall
les
cmc
mov
xor
vdivpd
movsb
mov
dec
iret
ret
leave
mov
sbb
cli
lret
add
inc
mov
cmp
cmp
mov
jnp
mov
or
mov
incb
sbb
cmp
dec
jl
sub
pop
push
xchg
rorl
mov
jg
pop
jnp
cmc
iret
scas
mov
add
adc
mov
xor
mov
out
push
iret
icebp
in
add
pushf
mov
or
sbb
in
clc
cmp
push
push
dec
sbb
mov
nop
mov
or
sbb
outsb
add
sbb
and
inc
dec
in
push
or
repz
mov
hlt
adc
ja
test
mov
adc
lods
arpl
pop
in
mov
mov
add
push
stos
insb
mov
inc
shl
adc
popf
es
mov
inc
sbb
in
inc
cmp
or
popf
cmpsb
filds
fs
loopne
cmp
negb
jns
mov
imul
pop
int3
pushf
pop
sbb
rorl
or
and
pop
pop
pop
inc
mov
ret
js
int
dec
sub
jmp
cwtl
in
sti
gs
and
mov
add
adc
test
adc
add
aas
xor
lret
or
adc
mov
mov
mov
stos
bound
pop
cmp
out
scas
mov
add
imul
mov
pop
cltd
add
mov
int
sbb
ret
out
push
jle
mov
push
cltd
push
cltd
movl
mov
sub
lret
or
movl
aas
pop
mov
pop
and
push
push
pop
je
sub
sti
mov
ret
sbb
inc
xchg
push
push
sbb
mov
rcll
cmp
movsl
gs
shll
scas
rcl
pop
fiadds
cwtl
pop
mov
mov
mov
outsw
pop
clc
dec
inc
dec
mov
sarl
mov
pusha
lret
push
cmpsl
mov
or
lret
test
imul
sbb
mov
and
pop
movb
cmp
lcall
pop
xor
cmp
test
pop
scas
insb
or
xor
mov
addr16
or
pusha
add
add
lods
fs
push
fcompl
loope
into
nop
in
pop
jp
mov
ret
mov
push
adc
push
data16
add
sbb
out
jnp
bound
or
mov
push
frstor
bswap
mov
lret
idivb
cmp
mov
xrelease
jl
push
push
xor
cmp
xor
mov
scas
cwtl
imul
xchg
cli
negb
ficoms
xor
mov
xchg
aas
cltd
xor
jg
add
arpl
decl
sbb
in
fcmovnu
ljmp
inc
sub
fs
add
adc
popa
mov
imul
lods
adc
sysenter
int3
mov
div
xchg
push
cmpsl
mov
movsb
or
jb
or
aaa
sub
cli
jecxz
add
insl
lock
mov
or
cltd
int
fistpl
xchg
call
cmp
jo
jecxz
add
pop
xor
jp
out
and
mov
xchg
push
add
jge
int
sarb
scas
lds
aaa
xchg
inc
rorl
sbb
cmp
dec
popa
clc
inc
adc
mov
or
daa
sub
jb
shl
pop
lcall
jmp
jle
ds
mov
and
add
inc
xor
jno
fimuls
or
xor
and
mov
ret
stc
test
stos
lods
cmp
inc
dec
inc
fildl
mov
js
push
push
jno
lcall
jp
push
xor
xchg
xor
sbb
scas
and
xchg
aaa
fsubrp
dec
dec
xchg
les
das
pop
cmp
pop
les
pop
pop
mov
pusha
loopne
enter
pop
pop
jle
in
scas
adc
push
mov
sbb
in
loopne
or
sub
add
lahf
push
push
in
mov
adc
cmc
test
jae
lods
out
dec
pop
jb
inc
aaa
dec
arpl
scas
mov
cmp
inc
push
loope
sub
popa
inc
lea
nop
push
lods
adc
rcrl
rol
add
js
inc
ja
mov
jns
shrb
in
adcl
leave
inc
mov
shll
jbe
icebp
cmp
cs
jg
imul
imul
jmp
jmp
lea
rorb
in
scas
jle
roll
mov
popa
jp
aad
mov
sub
mov
mov
inc
test
mov
adc
xchg
aam
test
imul
and
mov
rolb
add
mov
dec
rol
testb
mov
mov
fst
fisttpll
jp
popf
sbb
dec
add
int3
dec
sub
push
inc
push
jnp
cmc
out
add
add
pop
jb
lds
mov
loope
loope
pop
xchg
lds
push
xlat
out
jmp
pop
push
loopne
packssdw
int
fmul
push
mov
mov
scas
lahf
lods
mov
or
test
lock
cmpsl
out
call
jl
test
push
mov
xchg
xchg
stos
pop
jnp
sbb
push
fsubrs
dec
sbb
jg
cld
pop
pop
sbb
repnz
fisubrs
mov
mov
ffreep
lods
xchg
sbb
lahf
mov
or
xchg
pop
fiaddl
pop
cmp
out
out
xlat
xchg
and
inc
pop
sahf
aam
xchg
sub
xor
mov
lods
sub
lcall
jnp
xchg
cmpsb
cmp
imulb
lcall
mov
pop
cmp
mov
sbb
xor
lret
sti
push
hlt
fdivp
xchg
inc
add
sub
aad
je
leave
mov
icebp
insb
lock
jae
mov
and
mov
cmc
shr
cmp
ja
rcll
pushf
pop
arpl
sbb
popf
push
xor
aam
insb
jns
cltd
inc
cltd
les
rcrl
rorl
and
ja
loop
dec
add
mov
xchg
cli
sub
cmp
sbb
ret
add
cmpsl
lret
mov
in
mov
sbb
mov
pop
sub
call
jno
jmp
lods
ja
sti
lret
sub
pop
push
xlat
lcall
fdivrp
rclb
mov
adc
lods
mov
pusha
cmp
cwtl
mov
and
dec
sub
push
iret
inc
pop
xchg
shlb
xchg
add
push
popa
sub
push
es
adc
mov
xor
or
inc
push
or
sbb
add
jge
sub
mov
inc
xchg
adc
mov
add
mov
adc
inc
and
push
fisttpll
roll
cmpsl
xor
mov
mov
cmp
xor
mov
fcoms
jle
test
mov
subps
bound
jns
cmp
push
sub
dec
loop
je
or
sub
fdivp
jmp
sarb
xchg
mov
push
and
adc
adcl
fwait
adc
cmp
inc
notl
mov
rcll
jb
add
and
mov
xchg
cmc
rcrb
imul
mov
fdivl
cmp
insl
xchg
outsl
push
lds
cmp
mov
cmc
sub
xchg
jb
ljmp
or
lods
shlb
sbbl
mov
pushf
lcall
je
ret
lods
fs
sbb
outsb
fwait
add
jg
dec
push
ja
mov
movsl
hlt
xchg
xlat
cmp
leave
push
push
pop
jne
dec
dec
pushaw
gs
repz
push
xor
scas
inc
cmpsb
sarb
es
dec
insb
mov
popl
lods
mov
insb
std
mov
push
cmp
adcl
call
and
sub
inc
aad
fistpll
scas
cltd
cmp
jbe
push
xor
push
add
xchg
push
fcomps
mov
xchg
xor
cmpsb
pop
dec
inc
jbe
fwait
jns
jle
shrb
ficoml
enter
xchg
iret
std
out
pop
test
sub
setns
je
mov
push
or
fs
cmpsl
jbe
pop
push
inc
fisttpll
adc
mov
sbb
inc
cmpsl
xlat
xor
stc
and
inc
xor
xchg
loopne
lahf
cmpsb
xor
mov
std
iret
or
jge
add
je
enter
add
dec
push
jb
je
mov
mov
mov
fcmovnb
xchg
popf
mov
call
push
mov
cmpsb
into
jns
je
or
in
dec
fldl
lret
mov
or
jp
imul
adc
clc
jne
cld
imul
dec
jno
dec
stc
imul
mov
xor
push
inc
add
out
mov
outsl
in
pusha
cli
sbb
xchg
adc
stos
aas
aaa
cld
mov
sti
cwtl
mov
arpl
test
mov
jbe
xor
cmp
dec
insl
cli
pushaw
mov
hlt
push
cmp
test
addr16
mov
mov
cli
mov
dec
int
push
xchg
jge
icebp
jae
mov
jl
aad
xor
out
es
mov
aaa
lea
es
les
ss
lea
lahf
jecxz
and
imul
mov
je
xor
hlt
filds
and
in
xor
pop
mov
sti
insl
sbbl
lcall
in
shlb
out
inc
leave
cltd
jecxz
cli
xor
les
lock
mov
add
pop
fcoml
push
aam
jns
push
test
loopne
inc
add
mov
mov
adc
inc
fs
xchg
aas
scas
push
mov
mov
lret
gs
clc
sub
scas
ljmp
mov
mov
push
aam
fldz
jo
in
mov
hlt
sub
xchg
inc
es
je
rcr
push
dec
xlat
cmp
and
mov
sbb
xor
cmp
in
sub
sub
add
mov
jmp
into
in
add
mov
and
pop
cmp
enter
sbbb
mov
add
repnz
xchg
adc
ret
mov
repz
mov
and
icebp
jne
mov
dec
push
mov
icebp
adc
cs
xor
xchg
lods
shrl
adc
sub
faddp
test
in
or
dec
mov
or
mov
testb
inc
in
add
std
jnp
push
lahf
fs
pop
in
negl
sub
loope
repz
ret
sahf
jns
adc
ja
insl
iret
popa
fstl
stos
mov
imul
sub
push
ss
mov
jp
inc
inc
enter
mov
inc
adc
data16
mov
mov
jge
jne
mov
sbb
fsubrs
sub
jae
sub
inc
scas
stos
scas
leave
fsubrl
imul
stc
loope
test
shrl
daa
fidivrl
mov
inc
out
and
jne
pop
inc
mov
pop
jb
dec
pushf
sarl
and
outsb
pop
sbb
fnsave
insl
and
mov
jbe
cld
adc
push
fisttpll
js
lcall
jnp
xchg
jecxz
movsl
xlat
sbb
jno
call
lods
or
or
sub
test
jl
mov
call
pop
fistpl
repnz
pop
and
push
push
cld
gs
fldt
call
js
mov
cmp
sub
pop
and
fisubrl
out
mov
inc
mov
lods
mov
or
push
aaa
rcr
cmp
xchg
push
pusha
adc
cmp
sbb
push
pop
sar
mov
pusha
mov
inc
rolb
mov
inc
pop
sti
inc
repnz
cld
in
nop
popa
adc
hlt
adc
pop
cmc
jne
iret
out
lds
cmp
mov
xor
sub
mov
jns
adc
adc
sahf
fnsave
aad
pop
scas
in
jbe
out
add
xor
sahf
or
sahf
cs
cmp
dec
sbb
mov
and
xor
gs
jo
js
pop
adc
pop
test
cld
jno
mov
pop
loope
pop
jbe
cmp
cmp
rcrl
pusha
sti
mov
sub
add
jge
in
fnstcw
pop
hlt
sub
xlat
andb
dec
and
mov
movsl
fistpll
ficompl
mov
sbb
bound
in
inc
xor
stos
aam
or
dec
shrb
fcoms
popf
int3
ret
mov
js
add
push
into
inc
mov
int
ljmp
ja
xor
movsb
or
mov
dec
mov
jg
xchg
inc
jb
aad
outsb
dec
xchg
sub
inc
cmp
js
int
stos
fcoms
mov
mov
loop
andb
xchg
rcrb
sub
jl
mov
arpl
xor
mov
jl
pusha
or
cmpsl
mov
movsl
out
imul
nop
lret
adc
pop
cmpsb
in
lds
pop
cmp
sbb
push
shrl
sbb
or
mov
and
cwtl
frstor
jo
dec
pop
test
push
cmpl
push
stos
pop
out
or
mov
xorb
jb
mov
mov
loope
inc
xor
ljmp
iret
and
adc
or
fnstenv
inc
mov
and
out
gs
sbb
sub
cmp
loopne
call
mov
pushl
mov
xlat
out
xchg
sub
movsb
add
popa
jno
add
add
mov
dec
xchg
mov
shlb
dec
push
or
rcr
test
and
faddl
push
sbb
mov
outsb
dec
mov
mov
jno
test
pop
sub
mov
out
xchg
xchg
adc
push
sub
add
dec
cltd
gs
jo
sbb
sbb
out
mov
out
pop
or
addr16
addb
adc
cmc
cmc
cmp
jbe
mov
shr
push
mov
add
idivl
cmp
adc
xchg
jl
js
mov
gs
jne
jg
push
sbb
inc
mov
and
hlt
rol
popa
and
int3
xor
rcrl
push
jnp
gs
sbb
or
push
xchg
pop
pushf
loopne
add
adc
es
clc
dec
and
repz
aam
movsb
dec
stos
movsb
cltd
lock
mov
jmp
pop
rcll
lds
aaa
cmpsl
fidivrl
and
pusha
push
jecxz
loopne
rcll
scas
ds
dec
pop
cmpsb
into
mov
lcall
mov
xchg
sti
push
add
data16
dec
jge
push
push
dec
in
imul
movsb
mov
loop
inc
or
mov
add
cld
aaa
inc
pop
xor
pop
sub
add
lods
pop
sbb
lret
loopne
jns
or
cmpsl
jne
cmp
pushl
ja
in
adcb
dec
pop
mov
jg
cmp
and
mov
add
add
dec
adc
in
mov
getsec
inc
in
sti
aad
les
mov
popa
xor
mov
push
lcall
push
cwtl
enter
faddp
xor
adc
outsl
push
call
bound
pop
andb
mov
add
pop
fs
inc
and
adcb
aad
fstl
push
mov
push
fsubrs
aaa
je
test
mov
push
dec
fbstp
fnstcw
repnz
cs
mov
jecxz
fnstenv
cmovnp
cld
cmp
lret
or
jmp
aas
push
xor
pop
cld
mov
ret
test
xlat
sbb
xchg
pop
out
scas
subl
faddl
in
cmp
lret
stc
mov
or
add
movsb
push
icebp
in
std
lahf
adc
popf
sahf
mov
ja
adcl
mov
cmp
push
xchg
and
into
add
test
mov
xchg
ljmp
adc
pop
pushf
add
int
push
or
push
js
pop
aam
movsb
sbb
dec
pop
test
fldl2t
fnsave
add
ds
inc
sbb
pop
into
jnp
dec
sub
and
data16
mov
adc
xchg
outsl
ffree
enter
dec
arpl
xchg
inc
push
jle
pop
stc
push
hlt
scas
cs
mov
or
loopne
cltd
jno
pop
fcomp
adc
xor
mov
mov
and
mov
popa
into
xor
mov
std
sbb
adc
enter
or
outsb
jbe
inc
testb
gs
mov
fs
mov
sbb
out
jae
jmp
aad
filds
popa
test
push
lock
out
mov
pop
mov
movsl
dec
fistpl
test
pop
xchg
pusha
movsl
out
pop
push
lret
sub
cmp
adc
jns
daa
jg
rorb
push
mov
jb
mov
test
mov
cmpsl
mov
xchg
xchg
jno
out
hlt
or
sbb
pop
pop
add
lods
dec
or
insl
jnp
xchg
sub
nop
jmp
cmp
fbstp
cli
jnp
dec
int3
push
or
mov
imul
xor
leave
inc
jg
fstps
adc
mov
stc
mov
dec
bound
add
add
movnti
test
mov
xchg
addr16
out
adc
pop
fidivs
mov
dec
sbb
into
push
inc
pop
push
fwait
ret
cmp
sarl
cmp
out
das
movsl
push
leave
push
data16
push
xlat
push
lret
pop
cmp
cld
stc
xor
push
sbb
pop
addr16
cltd
push
shr
stos
div
popa
or
mov
dec
adc
nop
ljmp
and
and
aas
pop
mov
aaa
fsubl
and
addr16
or
movsb
push
shl
movsb
lret
sub
push
subb
lret
aas
or
in
pop
cmpsl
ds
vpcmpgtd
loop
test
xor
pop
inc
and
out
rol
adc
mov
cwtl
mov
popa
jns
imul
adc
or
clc
test
fsubrl
or
and
loop
movsb
cmc
lods
aad
cmc
cmp
test
sbb
sarb
dec
lods
adc
cmp
or
push
mov
xor
push
mov
lahf
popf
mov
test
out
add
mov
in
mov
sub
push
leave
xchg
loop
jb
sti
stos
jno
sbb
sbb
mov
cmc
fwait
or
sbb
out
cld
inc
fstl
jae
pop
in
and
js
pop
jmp
arpl
fs
loopne
cwtl
pop
xor
push
mov
cli
pop
mov
fisubrl
mov
out
pushf
or
jl
cld
jne
cmc
outsl
push
test
cmpsb
scas
and
jg
add
sbb
or
lds
insb
jg
cltd
xor
je
cmpsb
dec
js
cmpsl
jg
xor
jno
cmp
jbe
movsl
aad
jmpw
les
test
pop
pushf
add
sub
imul
inc
xor
bound
out
mov
or
les
push
outsl
jl
push
hlt
shll
jae
fisttpll
cmpsl
dec
lret
mov
into
cmpsl
lahf
lea
dec
js
into
stc
std
mov
cli
jle
int
lret
lods
sub
mov
sub
mov
int3
push
inc
jnp
jg
aam
pextrw
pop
mov
push
jbe
cli
jbe
enter
jg
std
pop
scas
bound
push
lahf
pop
mov
scas
add
dec
sahf
test
shll
add
call
imul
lock
jne
mov
pop
int
mov
rcl
push
mov
push
out
add
jg
nop
je
aam
push
notl
lds
notb
aam
mov
nop
pop
ss
repnz
fldenv
add
mov
or
sub
push
mov
pushf
cmp
stos
or
jnp
test
xor
mov
out
jae
mov
repnz
lss
in
xor
cltd
or
dec
sbb
sub
cmpb
mov
sarb
loopne
and
iret
jns
ljmp
lds
fisttpl
inc
loopne
pop
or
cmpsb
and
mov
xchg
sbb
test
xchg
js
mov
repnz
fcmovbe
aaa
daa
lret
inc
cmovnp
cmp
into
and
dec
imul
jb
lods
or
sbb
cs
adc
daa
push
inc
popa
and
sbb
rolb
call
scas
inc
add
push
aam
es
bound
dec
dec
ds
je
lds
ja
insl
or
mov
inc
mov
jmp
push
bound
sarl
sbb
shll
mov
fcomps
xchg
cli
pop
popa
and
mov
lock
lock
or
divb
cmpsl
xor
mov
imul
dec
aam
lret
pop
enter
lock
sahf
or
shl
fisubrl
mov
sti
pop
rclb
push
test
inc
xchg
cli
lock
cmp
loope
xchg
rcl
sti
add
jmp
addb
cmc
mull
cmp
sub
dec
pop
inc
jbe
out
mov
daa
stos
pop
push
mov
dec
cwtl
fnstenv
scas
mov
xchg
sbb
push
jnp
sub
ret
addr16
xchg
test
nop
nop
cmpsl
je
das
loopne
fadd
jecxz
sub
add
inc
loop
mov
push
sbb
negb
inc
mov
cmp
dec
aad
rorb
sub
jl
add
inc
rclb
push
pop
lds
jb
imul
notl
jo
lcall
add
pop
xor
ret
mov
cmc
movsl
sub
stos
adc
adc
push
lret
pop
loop
dec
movsl
dec
icebp
cwtl
add
test
psrlw
add
repz
hlt
scas
leave
or
jno
sar
or
icebp
imul
das
or
mov
jne
lret
ss
or
adc
sbb
mov
leave
nop
cwtl
mov
cmp
inc
adc
sbb
cmpsl
cmpsl
jo
movq
xlat
loop
sti
out
jle
jge
sbb
cmp
or
rcr
stos
jl
enter
cmp
or
jb
movsl
inc
aam
sbb
sub
adc
sbbl
data16
sbb
ret
rcr
jl
and
iret
add
daa
pop
push
les
mov
je
cs
leave
call
bound
stc
xor
popa
jg
adcl
pop
xchg
mov
xchg
aas
or
pop
icebp
fidivrs
mov
test
inc
fsubl
xor
pop
mov
pushf
aaa
in
xlat
ret
outsl
push
sahf
popf
arpl
pop
movsl
jle
and
mov
inc
cmp
icebp
mov
ficoms
xchg
mov
pop
incl
incl
xor
jp
push
mov
loopne
test
aam
sbb
lock
movsb
imul
pop
fldenv
incl
add
in
cwtl
out
mov
imul
jns
stos
pop
or
cltd
xchg
rcr
mov
add
idivb
stos
sahf
arpl
sub
mov
cwtl
icebp
repz
xchg
shll
cs
mov
mov
pop
jo
test
add
ds
cmc
imul
stos
cmp
mov
sub
jecxz
sbbl
add
aad
inc
stos
shrb
cs
data16
jecxz
pop
or
push
sahf
mov
jne
pusha
push
xor
mov
jle
jl
bound
out
pmulhuw
sub
out
mov
mov
jb
cs
jmp
push
pop
mov
xor
rorb
jmp
aad
xchg
or
sbb
sbb
out
aaa
mov
pop
push
pop
ds
push
les
xchg
xchg
testb
rcrb
lret
fs
sub
aam
xor
stc
jno
adc
inc
test
xchg
push
iret
dec
lret
pop
icebp
daa
int3
push
pop
pop
mov
xchg
pop
or
push
push
mov
adc
hlt
xlat
in
or
les
pop
mov
scas
in
dec
jo
les
je
jle
sbb
shrb
jnp
sti
xchg
mov
ja
cltd
aas
xchg
popf
mov
jbe
hlt
mov
cmp
jge
test
cltd
jmp
xlat
sbb
pop
sub
lock
dec
mov
inc
sub
inc
jo
lods
ffreep
icebp
push
arpl
loope
mov
ret
leave
cmp
fidivrl
mov
push
sub
daa
mov
mov
mov
sbb
ja
loop
insl
adc
mov
loop
mov
pop
outsl
and
stos
clc
or
dec
pop
pop
std
test
inc
lods
int3
addb
mov
mov
jle
mov
adc
stos
subl
xor
gs
mov
push
jl
inc
and
jecxz
sub
in
jle
in
pop
mov
mov
inc
mov
in
lods
or
fcomps
push
sbb
pop
and
push
mov
xor
lods
mov
leave
out
pop
mov
mov
enter
add
inc
sbb
inc
mov
adc
sar
sub
hlt
and
stc
callw
and
mov
mov
push
inc
cwtl
dec
add
mov
jle
jl
cmp
dec
push
jg
mov
adc
and
dec
stos
adc
adc
push
sbb
data16
sti
test
xchg
movsl
fcomps
mov
loop
ret
lds
std
orl
rolb
rorl
xor
dec
sbb
inc
and
add
lret
adc
jns
xchg
sahf
jle
xor
fwait
int
adc
les
out
mov
aad
push
pop
xchg
add
jb
shll
mov
fdivs
pusha
rcrb
or
push
cmpsl
int
mov
arpl
dec
sub
inc
cld
push
cmpb
sub
mov
les
fs
test
adc
rol
bnd
mov
cwtl
push
data16
xor
mov
stc
aaa
or
subl
sub
in
lods
or
adc
int
das
pusha
pop
cmpsb
icebp
pop
adc
add
add
gs
inc
loopne
mov
adc
bound
sbbl
push
ljmp
sti
mov
mov
xchg
push
ljmp
rol
jb
jecxz
push
ss
dec
cmp
or
fwait
mov
mov
scas
sub
jmp
jp
repz
pop
mov
ss
loopne
mov
xchg
gs
lret
ljmp
ret
les
pop
mov
test
mov
jmp
xor
mov
xchg
js
sbb
repnz
xchg
mov
pop
repz
mov
pop
test
cmpsl
xor
std
jl
lods
mov
cltd
or
movsl
adc
mov
cmc
push
mov
loop
push
je
adc
fcomps
xor
test
stos
push
loope
xor
mov
push
enter
rorb
iret
xchg
fisttps
ffree
insl
into
std
cmp
pop
outsl
rorb
sti
sub
dec
mov
xchg
sbb
cld
jnp
xchg
mov
sbb
push
popf
xchg
sti
mov
les
and
mov
cld
push
jae
andl
arpl
adc
pop
fists
orl
loope
enter
lahf
icebp
mov
xchg
in
test
pop
pushw
sub
xor
hlt
xchg
rcrl
jns
dec
loope
dec
into
cmc
test
repnz
or
sbb
cmpl
sbbl
lahf
iret
jge
jge
ret
xor
nop
mov
movsl
int3
rorl
test
stos
xchg
lahf
xor
data16
daa
sti
adc
in
je
and
shll
fildl
ds
and
push
jge
jle
xchg
lea
fsts
test
aad
mov
ljmp
out
push
xchg
fimull
mov
push
mov
fsubrl
int3
add
dec
insb
mov
pusha
push
mov
mov
xchg
mov
aam
into
frstor
and
push
xor
repnz
mov
dec
jecxz
in
add
or
ret
xor
jbe
mov
movsl
mov
popa
xor
nop
jl
mov
mov
fwait
ret
xor
xorb
xor
lahf
push
push
jp
aas
cmp
dec
jns
jecxz
std
lret
shlb
imul
pop
and
jmp
sub
jae
mov
xchg
and
out
in
ficomps
outsb
jecxz
test
jne
sbb
movsl
jmp
js
add
cli
pusha
add
push
inc
sub
imul
js
xchg
push
push
jns
and
inc
in
in
or
fnsave
out
mov
leave
jnp
out
lods
mov
jno
pop
rolb
push
das
add
jmp
fiadds
sub
ja
xchg
imul
dec
rorl
lcall
xorb
int
dec
pop
inc
jae
cwtl
out
movsl
jne
int
or
pop
repz
inc
push
or
into
rorb
rorb
ficoms
adc
fcomi
lods
xor
std
ljmp
andb
loop
inc
dec
adc
cltd
cmc
sbb
add
push
arpl
lahf
gs
movsl
fistl
xor
enter
mov
inc
jl
aad
inc
dec
mov
addl
scas
out
push
adc
in
clc
ljmp
sbb
inc
and
movsl
call
movsl
sbb
adc
or
push
loop
push
add
inc
negl
inc
inc
in
inc
jp
out
jl
or
and
aad
out
ss
lret
sbb
sub
mov
or
lock
dec
mov
sbb
imul
mov
leave
sub
dec
push
mov
mov
cli
fwait
mov
push
roll
push
adc
repnz
dec
and
fs
mov
jb
mov
sbb
in
stos
scas
dec
sub
fst
adc
fadds
mov
xchg
xchg
mov
addr16
push
mov
inc
cwtl
pop
adc
jecxz
stc
cmp
ret
test
jnp
mov
jecxz
js
add
imul
xor
fnstcw
in
cwtl
test
data16
jns
or
je
push
lods
xor
sub
jae
jbe
js
clc
mov
adc
fimull
scas
push
aas
mov
sbb
jno
xor
fimuls
jge
inc
push
clc
hlt
jmp
iret
push
sbb
dec
js
mov
push
scas
xorl
push
and
sub
scas
fwait
push
imul
and
loope
sahf
or
cmp
stos
ljmp
fsubrp
fmuls
int
gs
mov
pop
push
jb
lret
mov
push
add
or
rolb
push
fs
cwtl
repnz
arpl
cmp
pop
mov
pop
in
dec
or
jno
jb
pop
adc
daa
gs
push
cmp
mov
cmp
jmp
movsb
mov
xchg
and
mov
popf
cmp
lock
cmpsl
sub
testl
scas
jnp
cltd
out
mov
jns
jne
xor
dec
jl
inc
jg
xchg
popf
loopne
mov
lds
repnz
shll
insb
and
pop
cmp
iret
push
and
leave
pop
mov
in
mov
mov
push
js
bound
dec
imul
or
icebp
inc
rclb
lds
and
cs
fistpll
jo
mov
lcall
xchg
xchg
mov
push
xchg
push
imul
pop
push
in
inc
mov
pop
mov
pop
xor
mov
jb
and
out
cmp
dec
sar
xchg
adc
negb
pop
and
scas
mov
jbe
mov
roll
push
ds
loope
int3
add
arpl
ljmp
adc
dec
xchg
pop
xchg
push
inc
sub
bound
pop
mov
cwtl
jg
mov
ljmp
mov
cs
mov
dec
stos
inc
mov
mov
mov
or
push
rcrb
push
pop
sbb
fidivrs
jne
adc
in
xchg
inc
cmpsb
gs
pop
stos
loope
fwait
mov
or
add
mov
add
insl
leave
scas
and
outsl
jno
movsl
cmp
pop
divl
jg
es
pop
cmpsb
push
clc
pop
in
and
jae
test
gs
xor
repz
add
test
cld
flds
pop
test
call
dec
lahf
test
xchg
divb
mov
shrl
enter
jge
daa
inc
xor
mov
aas
repz
test
dec
mov
int
out
and
cmp
cmp
insl
sar
orl
sbb
stos
rclb
ds
arpl
sbb
mov
dec
xchg
clc
pop
push
jns
xchg
push
out
or
scas
outsb
adc
cmp
fcmovb
shr
push
icebp
mov
fwait
in
scas
mov
cs
adc
xchg
adc
push
rcll
mov
jbe
je
pop
push
push
mov
mov
clc
movsl
das
inc
jno
adc
adc
fsubl
jb
adc
jge
push
or
ljmp
jae
push
je
pop
sub
push
sub
push
jo
xor
and
sub
or
jg
enter
lret
jae
mov
adc
xchg
aad
int3
pushf
fbld
sbb
push
mov
jmp
aaa
into
jb
or
adc
jge
or
pushf
mov
and
add
jo
or
jae
dec
jnp
fldcw
test
shrl
push
lock
cmpsl
jg
mov
sbb
jecxz
mov
in
aas
outsl
pop
cmc
xchg
popa
sub
jge
mov
mov
bound
dec
pop
push
xchg
push
mov
push
cmpb
pop
or
inc
mov
push
mov
cwtl
and
mov
testb
dec
mov
push
jp
ds
movsb
rcrb
add
imul
sarl
rcll
ret
inc
adc
lock
daa
mov
popa
jb
lahf
mov
xchg
shll
cmpsl
fidivrs
sub
out
incb
push
rorl
out
dec
repz
or
inc
or
jns
dec
cmc
insl
sbb
lock
inc
cmp
es
sti
adc
push
mov
lds
xchg
flds
xor
int
dec
cmpsb
ja
jae
sub
shll
scas
push
mov
mov
stc
subl
pop
js
test
ja
xchg
stos
adc
sahf
push
jns
jmp
stc
mov
pop
cmp
add
add
ja
dec
ficoms
mov
inc
push
out
inc
dec
xchg
and
stos
mov
pushl
arpl
xor
out
jg
test
jns
pop
aad
sub
cmp
jp
push
dec
les
or
pop
push
push
imul
leave
dec
lds
rorb
jge
mov
fs
dec
out
cmpsl
decl
inc
cli
jge
andb
shll
jmp
push
cmc
mov
mov
push
jl
js
bound
loope
mov
add
pop
inc
sbb
ret
adcl
add
cmpb
lret
imul
sub
in
inc
popf
aas
stos
mov
rcr
add
xor
pushf
es
dec
push
adc
mov
sti
outsl
sbb
or
mov
cld
inc
add
insl
enter
out
pop
dec
mov
leave
sbbb
sub
mov
and
xor
and
adc
fsubrs
jmp
sbb
call
cmp
fadd
rcr
sarb
lods
bnd
push
outsb
cwtl
jg
sub
inc
fnstsw
lds
pop
xlat
cmpl
add
xchg
adc
inc
mov
adc
ds
stc
arpl
sbb
jle
int
iret
hlt
cmp
dec
repz
out
subb
fisubrs
int3
aam
cmpsb
stos
xchg
pop
add
scas
add
fs
mov
cmpsl
jle,pn
push
sbb
iret
or
add
pusha
rcrb
mov
xor
mov
outsl
xor
lock
xor
jbe
ficomps
adc
mov
push
sbb
sub
in
adc
mov
cmpsb
sbb
insb
movsb
pop
dec
mov
ljmp
fwait
sub
or
xchg
inc
and
mov
popa
loopne
in
jp
jnp
out
lods
cmp
lock
mov
adc
mov
mov
jo
das
repnz
stc
mov
loop
dec
test
push
pushf
fsubp
xchg
dec
mov
push
xchg
rorb
sbb
das
mov
jnp
mov
les
bound
iret
jb
stos
into
out
lods
sbb
or
fwait
and
or
sub
or
sbb
fisubs
movsb
fsubrp
xor
inc
int
sub
pop
es
repz
daa
aas
or
imul
mov
lret
shl
inc
test
iret
mov
push
test
sub
dec
xchg
cmp
mov
fcomp
cmp
int
and
jne
sbb
sbb
xor
insl
xchg
push
andl
sub
lods
sarl
enter
loop
cmp
rcrb
rcrb
xlat
cli
scas
sbb
int
rcrb
jmp
inc
xor
nop
mov
nop
push
xchg
push
pusha
es
insb
pushf
pop
mov
in
sub
shrl
inc
aad
arpl
les
pop
adc
popa
popa
mov
bound
xchg
jo
in
into
out
sbb
sub
fistpll
popa
add
lret
sbb
inc
push
popa
cmpsb
mov
lcall
add
xchg
je
xor
or
mov
fcmovnu
push
repz
test
mov
mov
mov
cmp
nop
sub
pop
adc
xchg
fcoml
adc
call
rep
bound
jne
ret
dec
xchg
aaa
adc
mov
aad
push
data16
jae
popf
sub
push
mov
cltd
mov
jp
mov
mov
subl
ret
fcompl
mov
xchg
pop
aas
aas
daa
pop
fnstcw
in
stos
push
je
imul
sub
bound
notb
rcrl
cwtl
sbb
call
sub
stc
pop
leave
jae
xchg
subl
or
and
mov
add
mov
out
mov
adc
and
loop
mov
cmpsl
mov
add
pop
std
sbb
inc
xor
dec
rolb
xchg
push
xchg
fildll
and
sub
jb
push
pop
dec
sbb
scas
cli
dec
mov
inc
test
mov
cli
mov
xchg
int3
push
cmp
dec
jne
or
mov
mov
ret
fisttpll
stos
pop
daa
sbb
cmp
pop
jne
in
mov
icebp
mov
cwtl
jns
mov
lret
jno
fwait
add
out
jb
pop
cmp
outsl
mov
in
fimull
pop
iret
cmp
fcomip
mov
incb
repnz
imul
cmp
jle
stos
addr16
lods
movsb
ret
mov
jmp
or
aad
lods
nop
cwtl
push
je
lret
pop
jo
dec
outsb
pop
xchg
cmp
int
je
shll
fistps
inc
add
lret
xor
ja
jp
sbb
and
jge
xor
inc
xchg
mov
mov
push
xor
fst
dec
or
or
push
insb
or
repnz
imul
fldt
popf
sbb
mov
add
mov
or
fisubrl
dec
adc
cmp
ljmp
pop
shlb
and
movb
sub
pop
adc
pop
pop
mov
sub
mov
xchg
jo
adc
cmpsb
fcoml
inc
pop
xchg
cmp
mov
imul
pop
add
sbb
mov
es
push
out
sbb
jne
fisubrl
pop
adc
int3
adc
mov
dec
repz
sahf
jb
xor
cmc
inc
shl
sarl
cmovle
mov
hlt
xor
ds
das
out
mov
icebp
addr16
mov
inc
adc
insb
scas
push
mov
mov
jg
das
xchg
data16
push
jmp
sbb
inc
inc
push
mov
jno
cmp
mov
lods
inc
inc
jl
adc
xor
bound
cmp
and
sbb
std
jg
mov
adc
and
cmpsb
push
pop
cmp
andb
push
ficomps
clc
loope,pt
pusha
js
mov
in
jp
sbb
xor
es
popa
adc
popf
adc
imull
dec
popf
jle
cmpsb
lahf
scas
or
xchg
xor
pop
dec
xlat
mov
and
inc
xchg
iret
stc
repnz
sbb
imul
int3
pop
pop
cmpsb
movsl
in
xor
mov
testb
dec
mov
cs
jo
daa
sub
repz
dec
inc
cld
mov
cmp
imul
sbb
push
insl
push
push
or
mov
mov
fldln2
ret
int
fs
mov
lods
insl
nop
lea
push
push
jns
jle
push
mov
cmp
push
add
cmp
mov
fiadds
notb
mov
stos
dec
cli
scas
dec
lods
cwtl
iret
les
dec
mov
pop
jp
mov
xchg
loop
pop
inc
xchg
clc
mov
sub
xor
adc
xlat
sahf
and
mov
dec
ss
xchg
pop
sub
sbb
adc
or
sub
xor
push
sahf
cmc
inc
addr16
ss
int
lea
in
pop
stc
and
cmp
inc
stos
clc
rcrl
jmp
loopne
korb
cmpsl
mov
sub
cmp
mov
fnstcw
cmp
xor
fmuls
mov
jbe
pop
nop
mov
jl
xchg
mov
mov
rcrb
adc
sahf
out
loopne
xor
cltd
fcmove
cltd
jmp
in
and
push
je
push
call
fwait
inc
add
shlb
in
cmp
popf
sbb
push
jp
clc
clc
testb
mov
test
xchg
jp
lcall
jp
sbb
push
lock
shll
dec
je
movsb
or
mov
mov
or
jl
loope
jmp
lock
dec
inc
mov
mov
insb
inc
xor
neg
scas
and
in
xchg
or
mov
or
jmp
lret
or
push
adc
sahf
or
int3
pop
inc
int3
or
xor
mov
mov
leave
and
cli
mov
fadds
aad
pop
dec
push
rep
xor
ret
cs
push
inc
data16
sub
jnp
or
cmp
push
ret
dec
cmpsl
mov
mov
addr16
loopne
fistpl
imul
mov
sub
jle
inc
mov
cld
jno
dec
je
pop
lods
hlt
lret
out
push
push
shlb
add
sub
out
lods
mov
out
jae
arpl
jmp
xor
cmpsb
push
sbb
pop
es
adc
shrl
pop
js
xchg
aad
insb
rorb
ret
cmp
les
imul
hlt
push
pop
inc
dec
sub
int
sbb
or
adc
sar
dec
popf
inc
lods
cltd
out
insb
aad
jns
aam
mov
inc
pop
shrl
sysexit
stos
lcall
adc
pushl
repnz
jnp
cmp
cmp
add
fstp
push
mov
add
mov
std
insl
jae
cld
adc
and
mov
xchg
popa
xchg
or
inc
stos
inc
notb
dec
movsb
adc
or
es
in
pop
sahf
ljmp
xor
or
sub
sbb
pop
xchg
into
aas
mov
jmp
sti
mov
and
or
sub
test
lret
pop
cld
in
lcall
cmp
sbb
mov
ljmp
xchg
rclb
jmp
mov
ret
fiadds
movsl
scas
lret
or
cld
xchg
lods
sub
add
push
shl
add
out
daa
mov
dec
ds
adc
aas
cmp
pop
or
push
jns
pop
test
or
xchg
sahf
fistps
mov
push
ss
and
arpl
out
cmp
pop
loopne
mov
xor
xor
std
pop
out
gs
xor
movsl
in
adc
bnd
popa
mov
loop
push
inc
fnstcw
or
lds
std
or
pop
mov
pop
push
cwtl
dec
movsl
mov
imul
loope
add
mov
inc
pop
xor
rcrl
loop
mov
pop
pop
pop
icebp
add
out
iret
ret
and
mov
clc
jo
pop
fnstsw
lds
mov
popa
or
inc
iret
test
pop
and
xor
in
arpl
aam
rcl
mov
xchg
push
aam
pop
sti
mov
std
fisttpll
push
das
fs
mov
sub
dec
popf
mov
imul
lods
mov
xlat
inc
shlb
lret
fidivrs
test
xor
add
repnz
into
pop
or
dec
and
push
in
dec
or
out
sbb
mov
and
xor
xor
adc
push
pop
mov
xchg
jns
stos
cwtl
or
pop
pop
jmp
iret
add
cmp
pop
das
sub
add
leave
or
ds
cwtl
fiadds
stos
mov
nop
lret
outsb
dec
or
out
subl
push
xor
movsb
in
mov
mov
insb
into
adc
fcompl
out
pop
xor
adc
cltd
push
out
fnsave
rclb
bound
xor
xor
mov
fcomps
push
int
jne
xor
lret
pop
out
adcb
in
or
repz
adc
inc
loopne
add
pop
in
push
pop
mov
xor
int
sub
jns
xor
out
out
cmpsb
mov
mov
testb
add
pop
lea
sahf
or
inc
subb
mov
and
mov
lret
cmp
sub
xchg
pop
inc
xchg
cmp
shll
inc
cmp
in
aam
enter
shlb
push
jg
hlt
sub
sub
insl
test
or
cmp
js
mov
jno,pt
dec
dec
inc
adc
pop
aas
bound
push
xchg
sbb
jns
mov
insl
dec
stc
stos
cmp
out
xor
je
inc
or
cmpsl
cmpsl
fmull
mov
int
jp
cmp
fists
mov
push
jle
sub
loopne
lret
insb
push
and
add
or
cs
sbb
push
adc
inc
lods
test
sbb
pop
sti
dec
std
xchg
into
push
add
pop
mov
adc
xlat
rcll
lods
xchg
jnp
fwait
scas
hlt
out
adc
add
or
add
out
lret
mov
cltd
dec
lret
inc
push
lock
scas
ljmp
inc
mov
and
push
push
idiv
mov
pop
push
popa
movsb
xchg
cmpsl
sahf
or
adc
js
cli
mov
pop
pop
or
flds
fildl
movl
cld
clc
mov
or
sub
inc
out
lock
jne
add
inc
and
mov
add
andb
or
cmp
mov
out
dec
inc
rorb
lods
jmp
movsl
outsb
int3
jo
xor
pop
inc
dec
or
stos
push
cli
loopne
add
aam
stc
ja
xor
adc
hlt
jge
add
pop
ja
fsubrs
jae
shl
mov
or
inc
lret
push
loop
in
into
lock
mov
add
rcr
and
pop
mov
cs
scas
test
imul
pop
std
push
mov
mov
jl
xchg
aam
push
mov
xor
xlat
xlat
in
mov
add
inc
mov
leave
and
sti
push
ret
les
xor
cwtl
mov
jns
jle
mov
fsubl
push
in
sbb
dec
lret
cmc
ret
cmp
shrl
or
popa
sub
out
pop
xchg
push
cmp
int
mov
idivb
sub
scas
sbb
popa
sahf
mov
add
fucomp
sbb
lret
jns
mov
js
or
push
jo
jno
push
cwtl
or
cmp
out
mov
sub
inc
inc
insl
adc
out
xchg
adc
jg
xchg
xchg
popf
js
mov
mov
and
lods
or
mov
lcall
mov
popa
aas
jge
sbb
pop
andb
inc
das
scas
dec
add
dec
cmp
fisubrs
sti
cli
int3
iret
xor
jo
sub
cmp
std
lea
int
das
xor
cltd
cmp
dec
out
xchg
cmc
and
jl
js
jne
mov
and
or
adc
and
sub
std
fsubrs
imul
sub
cmpsb
push
sbbl
push
popl
repnz
jns
lock
adc
mov
mov
jle
movsb
iret
cmovge
sub
jno
ds
cmp
test
push
stc
cmp
and
cmp
in
lret
sub
and
jecxz
aad
mov
jae
clc
jae
cmc
inc
lds
pop
decl
lods
cmpsl
out
adc
jmp
lods
int3
mov
mov
push
stos
sbb
mov
and
push
outsb
lods
dec
cltd
lret
loopne
dec
je
leave
dec
in
sub
sbb
and
mov
in
pushf
mov
dec
adc
outsb
shl
lret
movsl
add
xchg
aaa
fimull
gs
aam
mov
dec
sub
inc
test
popf
jle
xchg
jecxz
add
jecxz
xchg
cltd
btc
jae
neg
jne
nop
mov
xor
xchg
lods
mov
loop
jmp
jnp
sub
sbb
loope
add
outsw
stos
lret
add
mov
xor
inc
pop
in
rclb
sub
mov
mov
out
mov
mov
daa
mov
cltd
dec
rcll
lds
mov
or
and
mov
cmp
in
and
and
enter
sbb
mov
decb
xchg
xor
jl
jne
add
in
repnz
push
stos
cmp
mov
mov
xchg
lahf
dec
aam
repz
cwtl
pop
add
mov
std
es
jp
mov
jb
xlat
ficoml
xchg
test
in
imul
pop
sbb
sbb
cltd
cs
andb
mov
xchg
jnp
lret
movsl
insl
out
dec
dec
sahf
cmp
inc
inc
popa
lret
pusha
push
call
add
rorl
cmc
shlb
iret
dec
push
mov
cmp
xor
pop
mov
in
lcall
push
lret
cmp
mov
dec
mov
sbb
lret
xor
sahf
cmp
in
dec
mov
mov
scas
jne
dec
loope
int
dec
fsubrl
fdivp
sub
push
ret
cmpsl
jne
add
pushl
test
or
push
dec
cmc
daa
in
mov
xor
jns
xor
fcmovnbe
adc
mov
cmpsl
stos
mov
inc
repnz
pop
inc
out
inc
mov
and
mov
shll
cmp
cmc
xchg
arpl
test
inc
nop
int
test
cmp
xchg
pop
push
sbb
dec
insb
lds
js
and
pop
mov
mov
js
repz
scas
lret
jne
stos
and
inc
in
insb
pop
arpl
roll
fsts
push
push
aad
cmp
std
mov
mov
fstp
daa
push
mov
divl
sub
cmpsl
adcb
or
out
xchg
cmp
lret
bound
jne
test
xor
mov
sahf
rolb
clc
xchg
mov
mov
sbbb
outsl
sbb
sub
jne
outsb
hlt
pop
rcll
dec
xchg
ja
aam
in
jne
ja
mov
cld
mov
in
jbe
shlb
fbld
adc
addb
mov
push
sar
inc
xchg
inc
jne,pn
push
jmp
setnp
push
xor
inc
aam
test
mov
pop
call
cmpb
mov
gs
push
fs
xor
insl
xchg
outsb
add
sar
shll
pop
bound
dec
mov
enter
xor
loop
push
lea
lods
call
rclb
ja
mov
out
test
sub
pusha
mov
shlb
push
loope
pop
out
clc
fistl
dec
xor
push
xor
ja
sbb
push
cli
int
add
push
das
test
push
pusha
jmp
xor
and
outsb
enter
jmp
in
xchg
fsubs
sbb
xchg
sub
dec
fdivr
mov
aam
fwait
stc
imul
push
scas
repnz
out
push
push
pop
jg
add
inc
test
test
mov
out
cld
jo
mov
in
mov
pop
add
loopne
call
lcall
and
mov
dec
or
fwait
daa
aad
call
jl
lea
add
mov
or
scas
mov
dec
arpl
int3
sbb
addl
pop
imul
cltd
add
xlat
pushaw
mov
mov
ss
addr16
push
sbb
imul
pushf
sub
enter
pop
dec
jp
fidivrs
cmp
xchg
leave
adc
adc
shl
sarb
movsl
xor
xchg
sbb
add
pop
mov
fcmovnu
sub
fldcw
inc
and
std
push
or
jle
push
shlb
push
pusha
dec
push
fbld
mov
cmp
pop
jecxz
gs
xor
lcall
dec
rolb
dec
dec
fcmovb
inc
lock
xor
test
test
ds
imul
int3
mov
in
mov
aam
mov
sysret
cmp
jmp
mov
lret
cmc
in
cs
lret
push
cmp
mov
gs
ds
inc
mov
add
sti
popa
mov
cmpsl
stos
fs
cmp
inc
cmp
jae
addb
pop
inc
jnp
insb
cmp
int
jae
out
loope
add
or
push
shll
cmp
xor
fst
add
lock
mov
or
idivb
stos
int3
scas
idivl
jb
push
dec
push
aaa
imul
jnp
xchg
or
ja
jbe
lahf
push
push
mov
mov
test
ljmp
mov
inc
cli
lea
mov
sti
outsl
cli
sub
fcoms
ja
int
in
push
add
jno
xor
and
roll
jbe
dec
lret
sbb
aam
or
sbb
push
inc
mov
mov
fmul
sbb
push
rep
lods
mov
scas
dec
mov
fs
jmp
std
icebp
pop
sub
cmpsl
mov
jge
and
inc
aas
adc
push
xor
mov
insb
aaa
xchg
repnz
jnp
fbld
inc
push
pop
or
je
xchg
std
sti
daa
sbb
jecxz
loope
call
mov
mov
add
aad
cwtl
pop
cli
cli
pop
stos
ljmp
fwait
enter
push
mov
cmp
out
cmp
or
ds
sahf
push
sahf
faddp
xchg
call
lahf
sbb
insl
call
adc
icebp
mov
test
push
sub
or
jecxz
into
xor
mov
cmp
sub
rcrb
push
fsub
and
sub
pop
loop
add
and
push
movsb
cmpsl
cmp
cmc
cld
outsl
test
fstpl
mov
cmpsb
es
jbe
lcall
fisubl
push
mov
out
jbe
sub
stos
loope
cmp
lcall
das
dec
lds
aaa
aam
xor
and
sbb
jg
aad
pop
fidivrl
repz
mov
cld
fnstcw
das
inc
clc
fwait
insl
ds
mov
out
mov
and
jmp
mov
rclb
cmp
dec
ja
mov
divl
fidivl
mov
cltd
add
mov
and
lret
pop
and
test
out
pop
sbb
andb
push
out
arpl
scas
jb
sbbb
dec
orb
lods
push
jns
sub
dec
aas
fsubrl
add
mov
mov
push
inc
mov
movsb
add
pop
dec
loope
jp
in
lock
cmpb
int
push
in
clc
enter
xchg
xchg
add
adc
adc
mov
imul
add
mov
pop
out
dec
cmpl
pusha
sbb
mov
cmp
pop
pop
or
inc
scas
cmp
iret
xor
add
stc
dec
cmp
stc
push
pop
pop
inc
sahf
loop
mov
mov
es
push
inc
mov
lds
out
jmp
or
or
mov
inc
aad
xlat
pop
stc
sub
arpl
sbb
enter
pop
and
je
adc
adc
pop
adcb
out
adc
int
pop
pop
into
xor
es
push
mov
stos
sbb
orl
test
cmp
mov
orl
xchg
dec
jg
cli
insb
mov
fidivl
lock
lahf
add
push
dec
add
ljmp
lods
or
das
hlt
xchg
mov
xchg
add
mov
aam
jae
push
popa
inc
data16
ja
jle
cmpsb
lods
fistpl
test
mov
int3
push
les
je
pxor
dec
pop
or
push
lret
mov
inc
insb
rcll
cmp
inc
jae
xor
cs
or
pushf
xchg
push
xor
inc
sbb
push
sub
stos
lret
ds
popa
sub
into
shll
fsubrl
daa
xchg
pop
cmpsb
xchg
dec
xchg
push
fwait
sbb
insb
fwait
mov
add
pop
movsl
sbbb
cmp
jge
test
add
hlt
fldl
das
loop
fs
test
das
iret
nop
jmp
loop
gs
popa
sbb
add
and
jl
out
jecxz
pop
mov
icebp
fidivrs
arpl
dec
or
lcall
std
and
push
std
xchg
mov
cmpsl
fsubl
arpl
or
stos
jmp
dec
jae
bnd
loope
inc
imul
xchg
imul
sbb
sub
push
subl
dec
mov
das
gs
jp
xor
sbb
mov
rclb
pusha
inc
outsb
or
bound
gs
cmp
js
fstl
pop
fisttpll
rolb
jnp
pop
mov
push
add
xor
sub
sub
xor
scas
shll
jp
pop
push
mov
dec
mov
arpl
cltd
sub
xchg
cli
inc
push
mov
addr16
xchg
rorl
push
add
call
push
mov
or
dec
ljmp
in
test
add
dec
pop
das
imull
push
ret
dec
enter
dec
or
mov
and
clc
pushf
in
pusha
ffreep
inc
cmpsb
scas
addb
push
mov
mov
push
or
cmp
std
stos
adc
mov
rorl
popf
aaa
fdivrl
fidivrl
mov
xor
xor
in
divl
int
xorl
mov
cltd
jbe
cs
xor
dec
aaa
popw
dec
xor
out
mov
test
pushl
adc
out
daa
ret
push
add
testb
xchg
fidivrs
adc
dec
testl
scas
inc
enter
jns
test
xchg
jp
lret
pop
ljmp
imul
add
movsb
lods
ja
pop
outsl
fimull
dec
imul
sbb
sub
cmp
test
sahf
lods
nop
inc
ret
or
sbb
add
lea
xor
sti
sub
ss
scas
cmc
inc
clc
mov
repnz
and
loope
aam
jge
sub
sub
stos
xor
cmp
out
shlb
cli
mov
jo
push
inc
dec
icebp
jge
ljmp
cmp
fisubl
push
mov
test
push
or
outsb
add
js
ret
les
mov
lods
cli
jns
in
cmp
mov
pop
addr16
jle
push
inc
xchg
dec
mov
pusha
push
inc
xchg
lret
fcomps
stc
push
xchg
leave
inc
push
adc
push
jge
dec
inc
xchg
out
mov
fwait
insb
dec
cwtl
sub
push
mov
xor
mov
and
sub
and
sti
xchg
and
loope
dec
pop
and
jg
xor
loop
and
lods
pop
pushf
push
je
sbb
test
orl
add
and
jnp
mov
scas
icebp
sti
add
popa
jg
sub
jg
cmpl
testl
dec
ret
push
mov
out
fbld
ljmp
lods
mov
and
sbb
pop
sbb
les
inc
push
filds
rclb
lds
or
aam
add
sahf
js
inc
mov
subb
dec
in
outsl
xor
aaa
lahf
test
insl
mov
outsl
sub
mov
xchg
or
dec
lahf
jg
cmp
movsb
daa
out
jbe
xor
pop
sbb
aas
inc
or
jl
std
or
xchg
mov
inc
scas
mov
lret
add
push
pop
loop
int
pop
pusha
cwtl
fcoml
out
insl
pushl
stos
and
jl
sub
pop
push
sbb
lods
xchg
fwait
pushf
fnstcw
inc
xchg
paddd
insl
sub
ficoms
jle
push
adc
outsl
or
xor
out
lods
stc
pop
push
lds
pop
gs
xchg
xchg
adc
loope
outsb
push
fwait
add
imul
ja
es
fisttpl
dec
add
push
adc
popf
pop
imul
rcrl
or
inc
out
xor
sub
clc
and
lret
pop
xchg
ret
mov
test
loopne
orb
cmp
cld
sbb
fwait
jp
push
mov
inc
mov
aad
loop
xor
lahf
fisubrl
xchg
repz
iret
lods
scas
dec
outsl
imul
rcrl
cmp
add
fdivrs
cmc
jmp
sbb
test
stos
pop
cltd
into
dec
call
mov
fisttpl
out
inc
push
lahf
jecxz
mov
mov
addr16
lret
idivb
dec
aas
loopne
adc
inc
icebp
loopne
das
or
aas
nop
cs
aaa
leave
jg
stos
dec
pop
pop
pushf
push
adc
adc
adc
pop
arpl
and
cmp
ret
lea
cli
and
pushf
push
xchg
sti
add
jne
dec
pop
xor
pop
sub
imul
or
xchg
xor
pop
jne
jp
cld
sbb
insb
cmp
lahf
stos
rorl
cmp
rorl
daa
aas
jmp
movsl
and
and
das
xchg
mov
shll
mov
addr16
and
icebp
and
test
aas
mov
xchg
xor
loopne
orl
es
scas
or
sub
pop
sbb
loopne
movsb
pop
shr
aam
jmp
xor
push
add
mov
sub
nop
popf
push
or
mov
int3
jle
jnp
adc
popf
int3
xor
out
mov
imul
stc
dec
fnsave
movsb
ficoms
in
out
ret
mov
push
dec
repnz
xchg
mov
xchg
inc
push
loop
push
adc
loop
je
std
pusha
push
mul
rcrl
mov
fwait
inc
xlat
stc
scas
mov
les
push
cmp
jmp
popf
sub
movsl
mov
push
mov
jl
std
jmp
rcll
test
fcompl
sub
mov
faddl
sub
ja
cmp
lock
out
xchg
test
int
add
bound
add
insl
sahf
jb
push
dec
sub
ficoml
ret
push
add
xor
sbb
daa
mov
loope
or
mov
or
adc
loopne
and
popf
in
and
sbb
mov
popa
adc
pop
pop
sub
fistpll
cmpsb
add
js
add
fsubrl
pop
movl
jno
insb
fsubrs
fidivrs
sub
pushf
dec
add
jns
fcom
cmp
out
mov
sub
sbb
out
sti
movsb
test
lods
aaa
in
dec
ja
sub
repz
xchg
add
and
je
mov
pop
and
jo
orb
xor
pop
int3
mov
rcrb
inc
in
cmc
int
ljmp
xor
xchg
xor
sub
lcall
out
xor
mov
jnp
mov
dec
mov
pop
repnz
inc
stos
shl
daa
jge
mov
mov
int3
cmp
or
out
mov
jno
cmp
daa
in
add
pushf
or
dec
xchg
into
movsl
in
nop
test
out
std
fdivrl
pop
fisubrl
ljmp
dec
arpl
cmp
pop
adc
pop
cltd
test
dec
cs
je
jo
mov
sbb
push
imulb
push
jbe
out
aad
test
dec
pop
dec
cmp
pop
in
sub
pop
aam
sbb
stos
ss
out
jae
xchg
jp
xchg
lcall
mov
mov
dec
fldt
sbb
test
int3
notl
xor
lds
enter
imul
aad
fwait
test
orb
ds
cld
mov
push
sbb
xor
dec
sub
dec
lods
fcompl
aaa
xor
insl
adc
mov
mov
jne
mov
movsb
dec
int
ljmp
das
cld
sub
into
lea
mov
in
xchg
sbb
cltd
or
repz
sub
xchg
jne
adc
xchg
sti
and
icebp
jne
ja
lret
inc
fstpl
cwtl
icebp
mov
dec
inc
sub
dec
xchg
pop
add
fbstp
stos
pop
shll
or
mov
cmc
in
or
sub
gs
mov
add
rcl
outsb
lret
call
ss
xor
mov
sarl
scas
cs
jnp
je
int3
pop
jl
jae
dec
cmpsb
or
hlt
or
cmc
xor
subl
cmpsb
fwait
mov
push
aas
jne
ret
loopne
ljmp
lret
inc
mov
std
sbb
movsb
pop
pop
add
cld
out
sbb
das
sub
aad
call
aas
cmp
push
movsb
aam
std
and
xchg
xor
in
inc
adc
ret
inc
sbb
mov
xchg
push
adc
or
scas
and
mov
mov
ret
ror
jecxz
imul
into
mov
inc
cmpsl
add
fdivs
xor
repz
sub
gs
push
fwait
xchg
pop
push
scas
mov
dec
push
cmc
sti
pop
out
jg
and
sub
addb
dec
mov
mov
cmp
xchg
mov
in
or
popf
pop
ret
inc
sub
cwtl
popl
sbb
xor
xchg
jnp
xchg
mov
inc
int
xchg
add
or
sub
clc
imul
addb
sarl
in
out
adc
pop
in
test
add
jmp
or
pop
adc
in
push
push
push
cmp
fnclex
in
jno
pusha
mov
scas
jo
aas
xchg
dec
jmp
ljmp
les
sbb
scas
add
addr16
cmc
scas
movsl
ljmp
or
sbb
ficoms
jno
mov
pop
mov
mov
lret
sahf
cwtl
add
xor
notl
cmp
insl
fxch
fwait
cld
jb
arpl
mov
sub
mov
inc
fld
clc
aam
mov
aas
xor
mov
and
outsl
jmp
cmp
sar
cltd
mov
hlt
and
lret
add
mov
inc
rcl
sbb
xor
imul
jae
jg
movsb
arpl
pop
iret
xchg
hlt
pop
dec
dec
mov
mov
stos
pop
das
ljmp
add
add
xlat
mov
stos
push
outsb
sbbb
cs
dec
jne
add
inc
jns
les
jo
xor
ja
movsb
jae
sbb
imul
rclb
mov
mov
and
pop
ret
rcl
in
pop
or
and
xchg
jge
cmpsb
mov
pop
push
push
cmc
mov
idivl
out
xor
lret
xchg
push
sbb
cmp
or
popf
clc
xchg
dec
lcall
mov
sub
xchg
int3
push
cld
dec
jecxz
mov
sub
add
inc
cmc
add
sub
test
sub
das
sbb
fnstenv
popa
pop
lret
jg
jnp
push
fs
xchg
add
cwtl
xor
or
mov
jmp
sbb
std
xchg
dec
and
pop
and
es
dec
dec
into
inc
call
out
add
stc
test
imul
mov
mov
mov
add
into
fistps
imul
mov
loop
bound
ret
shlb
and
sbb
lods
subb
push
cltd
add
sub
mov
lea
jnp
push
shr
xor
movsb
lods
adc
push
mov
shll
sub
mov
sbb
jl
aaa
test
mov
mov
mov
loop
mov
push
out
dec
push
repz
add
jl
icebp
loope
xchg
inc
nop
jb
xchg
std
xchg
mov
mov
in
push
mov
cwtl
add
hlt
out
jge
mov
cmp
jle
les
imul
popa
sbb
aas
adc
push
sbb
leave
in
js
cmp
test
loop
jne
xor
pop
test
test
xorb
and
inc
adc
outsl
cmp
dec
sti
cmp
pushf
mov
jg
pushf
cmp
test
js
dec
rcll
in
mov
scas
pop
pop
xor
pop
inc
inc
ja
mov
test
cli
pop
mov
ss
dec
xchg
enter
cmp
pop
rcrl
data16
ss
int3
push
mov
dec
aas
jge
pop
pushf
mov
rcl
lret
test
outsb
jne
cs
or
dec
lods
dec
push
jmp
test
inc
fistl
int3
pop
mov
add
push
mov
and
call
jnp
sub
lret
mov
adc
out
sub
sahf
pop
jno
ficomps
rorl
aad
data16
add
inc
xor
out
sub
sarl
pop
dec
jns
leave
das
pop
test
lods
cmpl
inc
dec
and
je
dec
pop
mov
sub
mov
mov
push
push
imul
ror
mov
dec
daa
pop
sbb
in
and
mov
imul
cmp
mov
mov
or
hlt
dec
cmpb
jp
pop
sub
pop
rorb
outsb
push
pop
repz
out
imul
stc
mov
rcr
ja
cmp
pop
call
subl
psrlw
nop
repz
ret
mov
or
lsl
in
sub
and
inc
ds
xchg
xor
into
push
sbb
into
stos
cwtl
cmp
sbb
lods
leave
mov
sub
mov
mov
fstp
data16
cmpsl
mov
jp
test
add
scas
jmp
iret
pop
in
cmp
ljmp
adc
test
jbe
test
mov
movsb
lret
sub
int3
shrb
mov
and
leave
dec
jno
addr16
and
jg
pop
stos
test
xchg
push
push
add
pop
mov
je
adc
cmc
lock
dec
js
pop
jb
push
add
cmpsb
in
fs
clc
xor
lods
lret
jo
and
enter
dec
pop
dec
and
addl
xchg
mov
pop
xchg
scas
mov
adc
sub
lds
jno
and
into
fcmovbe
jl
and
xchg
fimull
fists
popl
lahf
jb
push
ljmp
cli
call
mov
and
iret
push
cltd
mov
cmp
out
fstps
pop
mov
xchg
mov
jecxz
fimuls
sbb
je
and
pop
jo
jno
push
ret
sub
xchg
mov
mov
into
jmp
jmp
push
repnz
mov
cmc
and
jle
cmc
pop
inc
lahf
and
dec
in
loop
out
mov
sbb
xor
das
insl
xchg
adc
sbb
in
or
loop
or
adc
dec
mov
pop
jbe
dec
arpl
addr16
arpl
add
xchg
lcall
mov
je
clc
or
xor
jae
mov
xchg
cltd
es
dec
lods
ret
call
xchg
mov
mov
xchg
test
mov
int3
mov
xor
push
sbb
aas
stc
sti
daa
inc
sub
inc
lods
mov
movb
jno
mov
popf
pop
xchg
insb
jno
test
sbb
jge
xor
sbb
test
xchg
pop
in
pop
fwait
addb
movsl
xor
push
and
push
add
test
out
mov
jmp
add
sbb
std
jl
in
sub
lock
imul
push
imul
xlat
pushf
adc
rclb
jbe
stc
mov
mov
sahf
out
mov
adc
js
shlb
xor
add
sbb
add
adc
inc
icebp
js
inc
outsb
add
mov
jg
xchg
sbb
stos
push
das
dec
jns
dec
std
xor
or
inc
cwtl
push
loop
sub
out
lret
std
fs
mov
insb
add
stos
jmp
cld
fsubrp
or
mov
stc
cmp
out
xchg
lret
push
dec
stos
push
and
mov
dec
leave
or
loop
mov
int
mov
rolb
adc
adc
test
xchg
xchg
push
mov
in
xchg
push
iret
dec
aaa
ds
sub
in
or
add
mov
cmp
bound
mov
inc
mov
mov
mov
xchg
push
adc
mov
testl
ret
or
inc
mov
jecxz
loop
mov
js
mov
jmp
inc
xchg
adc
lock
cltd
pushf
imul
aam
and
pop
test
ja
pushf
xchg
xchg
lods
cmpsb
cli
push
push
loopne
pusha
mov
ret
cli
rolb
dec
into
and
mov
repz
jmp
rcll
scas
mov
dec
leave
rol
cmp
outsb
nop
push
insl
or
inc
adcl
call
dec
mov
sub
test
lods
adc
fcompl
dec
clc
add
adc
pop
mov
and
push
aam
push
jno
dec
mov
sub
jno
pop
lock
sbb
imul
mov
in
sbbb
rcll
dec
movsb
rcll
lcall
add
sbbl
cs
adc
mov
cmp
aad
dec
adc
fcomps
stc
pusha
mov
stos
lahf
cwtl
fs
push
pop
pop
das
inc
les
das
pop
xchg
cmp
jge
lds
jge
cmpl
cwtl
sbb
lcall
jle
arpl
inc
sbb
mov
les
outsb
sub
inc
mov
dec
pusha
mov
nop
dec
in
int3
neg
addr16
pop
and
adc
sbb
test
push
sub
subb
daa
cmp
aad
stc
push
adc
insl
inc
cmc
dec
je
pop
jg
inc
bound
xchg
and
sahf
sub
and
and
sub
sahf
outsb
inc
pop
sbb
fisubrs
pop
xor
dec
loop
sti
ss
stc
sub
cs
sub
and
repz
fcmovnb
outsb
fwait
ds
jecxz
and
std
stc
or
aam
lcall
and
cmp
popa
in
push
bound
add
cmp
push
daa
sar
fmuls
mov
xor
mov
fidivl
jl
mov
fmull
jmp
xchg
and
mov
int
mov
outsl
test
repz
pop
sbb
movsb
sbb
push
mov
sub
sbb
loop
test
outsb
pop
mov
in
sbb
mov
jmp
shrb
cli
shl
mov
add
ds
mov
mov
xchg
cmc
imul
cmc
mov
cmp
or
pop
sbbl
mov
lods
insl
test
dec
repnz
or
arpl
fwait
ljmp
cmp
es
cvttps2pi
repnz
pusha
mov
cwtl
pushf
hlt
sbb
cmp
add
popa
xor
fildll
out
cmp
js
cmp
xor
pop
cmp
gs
mov
mov
pop
jge
into
cmp
and
daa
pusha
jp
mov
mov
cmpsb
jle
jo
int3
sti
das
sbb
or
xchg
push
sbb
push
sbb
je
clc
daa
call
imul
ret
aaa
mov
lret
push
cmp
inc
out
mov
cmpsb
push
gs
add
bnd
jns
mov
xchg
lds
xor
and
and
out
imul
movsb
int
stos
pop
mov
sub
cmovo
call
loopne
outsb
and
fs
daa
es
cltd
nop
cmp
adc
pushf
mov
or
pop
ror
xchg
hlt
in
cld
xor
shl
sahf
add
mov
mov
lock
out
add
inc
cwtl
fidivrl
jae
subl
dec
sahf
adcl
popf
lds
dec
adc
cmpsb
jae
jmp
pop
add
and
mov
xor
pop
dec
inc
movsl
sbb
ret
in
mov
fstpl
add
fwait
int3
in
and
in
pop
std
hlt
jl
cli
cld
dec
out
fs
push
cmpsb
stos
jno
add
rcl
aad
out
xchg
sahf
ret
push
sbb
addr16
pop
cmp
ljmp
push
pop
into
xchg
mov
pop
sbb
test
lock
adc
mov
aad
cli
add
dec
fdivs
aad
out
and
test
adc
push
cmp
cmp
out
push
pop
and
xlat
cltd
dec
push
sbb
cli
adc
ljmp
das
jne
or
push
mov
add
movsb
sbb
pop
data16
inc
ljmp
jg
repnz
or
loop
inc
cmp
or
lret
jecxz
lods
in
jne
idivl
sub
fstps
insb
aas
in
push
adc
subl
xchg
outsl
sub
add
test
dec
dec
call
or
adc
lods
movsb
outsb
or
cmpsb
dec
xchg
sbbl
push
xor
test
and
mov
or
sbb
nop
cwtl
scas
jae
mov
or
scas
cld
loop
fnsave
je
loop
pusha
mov
inc
adc
rolb
jecxz
rcr
sbb
in
call
clc
mov
jg,pt
xchg
clc
movsl
dec
into
mov
pop
sub
std
xchg
add
or
ss
sbb
push
mov
or
xchg
push
outsl
cld
or
inc
or
inc
subb
pop
cltd
mov
jmp
pop
jmp
sbb
rorb
out
scas
mov
stc
loop
or
mov
sub
shll
cmp
and
dec
jmp
adc
std
xchg
mov
jg
es
out
jp
aas
les
pop
adc
movsl
mov
fnstsw
inc
out
adc
push
das
pusha
cmp
dec
lret
mov
pusha
leave
out
ret
mov
rorb
shl
pop
nop
out
xchg
jmp
mov
xchg
sub
xor
fldl
pop
idivl
sub
mov
dec
mov
ja
or
arpl
push
lods
and
cwtl
stos
fadds
fprem
pop
pop
fbld
data16
cmp
dec
pop
fs
mov
cmp
jp
jp
ds
xchg
add
jge
ror
add
and
sti
mov
lcall
repnz
adc
and
add
mov
sub
sub
inc
subl
inc
cwtl
loope
push
out
div
xor
jg
fsubrs
and
dec
fstps
add
sbb
iret
adc
nop
xor
bound
aas
movsl
pop
dec
lret
loope
dec
lret
push
insb
sub
ds
mov
and
xchg
mov
aad
xchg
push
dec
dec
dec
loopew
cltd
adc
nop
pop
test
pop
push
divb
xchg
and
jmp
jg
or
repnz
inc
xchg
cmp
mov
jnp
and
mov
shr
adc
fcomps
dec
cltd
or
pop
adc
xor
leave
ja
cli
inc
mov
in
addr16
mov
xor
imul
cmp
xor
and
repnz
rcr
addl
push
add
out
xchg
pop
outsl
fdivr
loope
out
mov
push
mov
pop
sbb
pop
stos
dec
faddl
xchg
movsb
ja
inc
sub
ret
movsl
add
or
daa
sub
jmp
sub
push
xor
stos
push
inc
enter
and
jl
decb
pushl
mov
int
int
fidivs
mov
inc
aad
mov
sbb
sub
sub
or
shl
dec
jge
mov
aaa
jns,pt
or
jmp
push
xchg
jo
loope
popf
jne
cli
aas
in
cmp
rolb
adc
sub
push
jl
mov
sbb
xor
loopne
daa
and
sub
incb
sub
inc
xchg
andb
push
pop
pop
ret
orl
notb
fidivl
adc
add
lds
cwtl
fistps
int3
jge
jmp
iret
pop
push
add
cmp
fs
stos
sbb
lds
cmpsb
push
pushf
bound
push
setns
adc
inc
insl
adc
in
les
mov
repz
add
js
cltd
sbb
mov
jg
add
dec
or
fwait
xchg
inc
adc
mov
mov
bound
leave
inc
mov
mov
icebp
xchg
add
jbe
push
pop
data16
mov
xchg
and
sbb
ss
les
imul
lock
ret
stc
adc
cmpsb
jne
jb
aam
and
lcall
jmp
imul
push
cmc
jb
or
push
jb
mov
outsb
je
jmp
aad
sbb
lea
std
xchg
cmp
jb
xor
cmpsl
lds
shlb
dec
stc
leave
mov
inc
mov
mov
repz
ss
in
fcomip
add
mov
push
pop
ljmp
adc
cs
xor
cwtl
push
cmp
add
shlb
fisubl
aaa
or
mov
mov
push
fcoms
shrl
in
xor
mov
cmpsb
sub
sti
xor
jbe
cmp
in
testb
inc
or
fdivrs
insb
ret
insl
xchg
jecxz
in
aaa
mov
out
xor
ja
xor
inc
mov
mov
or
adc
push
shr
movzwl
xor
sub
lret
in
js
mov
mov
cmp
mov
add
fdivrl
jno
clc
int3
push
xchg
test
insl
fucomp
jg
movb
xorl
lock
loope
or
inc
cmp
es
adc
adc
out
xor
int
arpl
out
dec
std
fcmovnbe
xchg
pop
xchg
or
out
stos
inc
ficoml
lret
xchg
inc
es
xor
inc
mov
pop
ret
mov
inc
jmp
xchg
iret
mov
cmpb
ret
in
mov
push
sub
push
mov
xchg
pop
mov
jmp
jae
push
sub
mov
out
cmp
lret
pusha
addr16
inc
push
ds
enter
int3
cmp
dec
je
pop
fimull
hlt
mov
jg
andb
jo
or
pop
add
mov
adc
insb
pusha
pusha
andb
fldl
addl
sbb
in
cmpsb
sbb
push
mov
cmpsl
cmpsl
int
ss
jne
test
jo
ds
cli
sbb
xor
in
mov
jg
enter
jecxz
mov
mov
and
into
ss
rcrb
lods
nop
and
icebp
cmp
add
dec
cmc
xor
push
mov
xchg
lods
hlt
dec
sbb
and
stc
cltd
icebp
cmpsl
fsubl
mov
jecxz
dec
les
cld
and
jmp
out
popa
incl
or
sub
dec
dec
mov
aam
inc
add
mov
daa
mov
int3
xchg
jne
pusha
addl
jnp
sbb
cs
cld
outsl
cmpsb
jno
cmpsb
mov
repnz
xor
int
sbb
cmpsl
outsb
nop
xchg
dec
or
pop
leave
add
rcrb
lock
in
dec
sub
shlb
je
loope
sub
lock
fsub
sub
imul
xor
inc
incb
cmp
cld
jp
mov
push
in
push
into
dec
addr16
sub
pop
xlat
in
mov
dec
in
cmpsl
sub
fmuls
repz
pop
pop
sbbl
stos
dec
ds
jno
jno
int3
add
int
lock
xor
mov
push
mov
cmpsl
sbb
jo
stos
ja
maxps
xor
test
xor
dec
ljmp
jle
push
push
aam
aaa
jnp
pop
mov
or
ja
or
mov
cli
mov
pusha
popf
dec
sbb
sarb
mov
in
ret
les
fadds
sbbl
into
fdivl
jnp
dec
pushf
or
outsb
outsl
mov
out
in
in
xor
dec
sbb
push
test
pushf
sar
sahf
sbb
aas
jg
rorl
jae
jmp
iret
pop
cmc
subb
stc
out
or
nop
sbb
mov
daa
lock
fwait
imul
out
fwait
xor
and
mov
mov
inc
popa
cwtl
cwtl
daa
or
or
jnp
cs
ret
std
push
in
sub
mov
mov
out
out
inc
lss
jno
inc
push
mov
movsl
imul
jge
mov
mov
adc
add
pop
inc
mov
mov
and
pop
mov
cmovge
test
push
lret
mov
je
scas
fnstenv
jae
mov
arpl
scas
xor
sbb
cwtl
cmp
jp
cmp
jg
je
ja
push
lds
pop
xchg
fs
sub
mov
xchg
xlat
jp
lcall
cs
shrl
scas
xchg
add
dec
jbe
push
pop
push
test
jl
push
repz
jns
lock
jmp
lods
and
leave
xchg
push
test
fcom
sub
mov
push
shrb
and
sahf
mov
push
mov
clc
frstor
mov
push
rorl
push
das
test
jmp
sbb
sbb
add
jp
scas
cmp
outsb
pop
jecxz
test
dec
pop
loop
xchg
mov
mov
jae
test
pop
sti
and
jle
add
call
pop
dec
stc
pop
cmpsl
adc
sub
iret
sbb
pop
inc
movsl
pushl
xor
fcomp
testb
adc
rorb
sbb
dec
scas
lods
mov
lcall
xchg
mov
lret
jg
xchg
xorl
push
stos
mov
cltd
aas
jecxz
aad
sbb
xor
lahf
aam
push
jp
cmp
les
push
shl
cmc
or
out
jns
std
sti
addr16
jp
push
lods
mov
test
ja
mov
cld
repnz
lods
push
jp
ret
sbb
test
mov
stos
mov
jnp
add
iret
xor
cltd
and
adc
sub
clc
fimuls
flds
lret
mov
test
jg
cmp
xchg
daa
into
das
push
cli
mov
cmp
rorl
ss
and
or
je
ret
mov
pop
stos
lret
imul
loopne
cmp
jp
mov
dec
jne
inc
neg
push
push
insb
pop
pop
sarb
imul
cmp
mov
dec
cmp
in
enter
inc
push
xor
lcall
imul
fimull
xchg
insl
mov
cmpsb
fwait
add
lds
sbb
push
fisttpl
push
push
push
xchg
rcll
shrb
adcb
inc
xor
popf
adc
cmp
es
pop
movsl
ror
lods
imul
dec
cli
xchg
dec
jle
nop
add
sub
push
andb
xchg
mov
fidivs
ja
adc
dec
sbbl
mov
jo
push
js
mov
loope
push
or
sbb
loop
fbld
jl,pn
jns
or
mov
mov
mov
adc
scas
mov
sub
sarl
iret
and
and
add
fcmovnb
mov
pop
and
pop
bound
xchg
fdivrs
lock
lods
je
nop
push
adcb
sub
cs
inc
xchg
movsb
test
push
fnsave
xchg
in
mov
dec
push
inc
in
pop
bound
mov
leave
jnp
mov
and
int
imul
sub
push
and
xchg
mov
vmovdqu
push
inc
and
ljmp
adc
sub
std
pop
sahf
dec
rclb
cwtl
xor
arpl
rcrb
in
jle
xor
xchg
and
xor
mov
mov
xchg
add
ror
ds
mov
imul
rcll
and
push
add
cmpsl
sar
jp
sbbb
mov
mov
daa
inc
jne
insl
in
aad
mov
hlt
cmp
ret
inc
test
jmp
ret
lods
or
push
push
call
jne
adc
sbb
and
mov
jg
jge
rcrl
repnz
sub
lea
mov
jbe
mov
pop
out
fimuls
aam
nop
aad
xchg
lahf
jl
loope
negl
pop
push
sahf
out
movsl
mov
or
scas
dec
stos
jne
mov
cmp
fs
inc
les
mov
pop
xchg
sbb
in
cmc
jns
popf
pop
xchg
mov
fstps
ja
rcl
mov
ret
daa
insl
pop
fwait
jns
mov
loope
lock
push
jge
stos
push
xor
rol
jns
jo
call
cmp
outsl
mov
jmp
neg
dec
xchg
sbb
daa
and
inc
and
or
mov
data16
push
pop
cmp
pusha
rcrl
fcmovbe
mov
mov
movswl
adc
pop
scas
es
adc
dec
pop
sbb
xchg
dec
enter
fidivl
mov
inc
pop
lock
test
cltd
clc
lock
les
or
mov
push
daa
scas
test
mov
pop
fs
or
xchg
mov
imul
in
mov
fisttpll
decl
xchg
add
pop
pusha
mov
mov
cltd
sbb
aas
inc
push
dec
loope
aad
mov
ret
adc
insb
loopne
inc
stos
arpl
divl
xchg
mov
dec
add
aad
repnz
in
int
out
push
clc
int3
popa
out
sbb
add
sbb
xchg
cld
add
jge
cs
cs
xchg
nop
dec
inc
aas
loope
sti
push
mov
jnp
push
mov
test
xchg
xchg
ja
fiadds
dec
jmp
and
sub
fsub
popf
fidivs
out
stos
aaa
mov
xchg
bound
jae
stc
inc
add
xchg
add
decb
jae
test
std
iret
pop
jg
sbb
xchg
and
test
stc
das
sub
fucomp
jne
and
mov
ret
repz
enter
js
inc
insb
in
aas
mov
pop
xchg
aam
cmpsb
mov
das
clc
xchg
lret
test
lds
push
pop
jne
outsl
cmp
jo
stos
inc
and
in
int3
or
push
jno
int3
repnz
jmp
or
xchg
mov
xchg
ja
jae
xor
xor
mull
push
outsl
rclb
es
mov
sub
ja
shrl
add
or
call
sbb
and
or
lock
xchg
xor
sbb
scas
mov
and
andl
xchg
jp
loope
mov
rolb
mov
mov
inc
out
pop
scas
test
dec
subl
xchg
jmp
fnstsw
mov
push
cs
inc
push
outsl
pop
out
imul
cmpsl
xchg
aam
dec
mov
add
mov
xor
orb
sahf
push
pop
jge
aas
push
pop
pand
dec
mov
fists
cmpsl
ret
movsb
cs
fidivs
fnstsw
pusha
sub
jl
aad
aad
lret
mov
imul
inc
or
dec
add
iret
das
out
sub
push
xor
loopne
mov
ss
aam
ss
inc
nop
sahf
mov
shlb
pop
cmpsb
adc
dec
mov
pop
out
stos
jecxz
add
hlt
ja
ja
pusha
xor
daa
stc
imul
cmpsb
mov
hlt
inc
adc
xchg
lret
or
mov
push
cmp
mov
out
push
ror
insb
lahf
mov
clc
push
frstor
enter
push
pop
roll
sub
jmp
in
or
fimull
out
cwtl
cltd
dec
sbb
mov
adc
cmc
outsl
in
dec
testb
pop
out
imul
sahf
jge
mov
jne
or
subb
cmp
inc
es
imul
jns
shr
push
repnz
cmp
int
mov
sbb
pop
jge
test
sub
rcr
cmpl
pop
outsb
inc
lret
or
fiadds
stos
jae
cs
inc
in
leave
fnstsw
notb
jecxz
mov
inc
adc
sub
add
dec
push
lds
aam
adc
shr
xor
sub
in
inc
dec
loope
pop
jns
jne
sbb
sbb
les
movsb
outsb
cmpl
lcall
sub
mov
in
push
push
and
or
ss
dec
mov
pop
ror
movsb
cmp
scas
xor
sub
inc
or
aas
daa
dec
dec
lret
jl
lds
aaa
cmp
add
lahf
shr
fstps
and
aam
dec
ret
cmp
cmp
xchg
mov
adc
jne
lret
lds
or
or
mov
adc
and
pop
mov
pusha
test
cmp
mov
adc
pushf
js
rolb
push
clc
sbb
jb
xchg
enter
test
lcall
and
pop
jno
fs
inc
out
cmp
insl
jg
out
loop
mov
and
cmp
cmp
pop
popf
mov
nop
pop
add
xchg
popa
jbe
mov
ljmp
dec
out
aam
push
shlb
jg
xchg
xor
mov
popa
sbb
push
lea
push
cmp
mov
push
and
les
ficoms
and
or
cmpb
rorl
pop
jp
cmpsl
xor
jo
sub
xchg
lods
ds
sub
je
sub
imulb
pushf
pop
mov
pop
pop
repnz
sbb
jns
push
sbb
daa
scas
xchg
cltd
mov
enter
pextrw
adc
sbb
popa
push
mov
mov
and
lcall
xlat
or
mov
mov
mulb
push
je
std
sub
add
dec
jno
out
mov
push
adc
jns
add
sti
js
iret
jge
stos
adc
xchg
mov
add
fbstp
pusha
push
add
dec
jno
mov
sub
add
inc
sub
sbb
stos
pop
outsl
sti
cli
dec
cmp
mov
dec
xlat
mov
mov
insb
or
add
mov
mov
call
clc
or
push
mov
outsb
xor
data16
or
add
xchg
xlat
mov
inc
dec
ja
jl
dec
bound
sub
ds
call
sbb
cmpsl
push
bound
jle
aas
scas
jns
jp
xchg
xor
loope
xchg
cmp
in
scas
inc
xor
fadd
lds
mov
sbb
mov
adc
cli
jns
pop
sbb
cmp
add
and
pop
inc
jmp
in
pop
cmpsb
cmp
push
lods
sub
sbb
mov
jno
daa
lds
inc
jp
sub
cmp
jp
and
xchg
and
push
leave
xchg
pushf
sti
or
cld
idiv
add
jmp
mov
or
sub
mov
mov
adc
shll
leave
cmp
sub
xchg
pop
mov
lret
lock
add
ret
cmpsl
push
scas
addr16
pusha
xor
jbe
sub
in
movsb
sub
test
iret
and
push
mov
or
cmp
adc
mov
int3
inc
jb
out
mov
repz
dec
fstpt
lret
mov
sbbb
mov
fstl
jnp
mov
jmp
cmc
push
aas
mov
mov
mov
jle
dec
lods
arpl
clc
jo
mov
adc
dec
movsl
add
call
fdivr
pop
enter
adc
xchg
es
mov
ror
ret
ljmp
aaa
mov
xlat
inc
xor
test
push
pop
call
or
clc
insl
addr16
add
mov
out
mov
mov
push
inc
cmpsb
scas
adc
sub
adc
push
mov
pop
test
imull
into
adc
cmp
or
in
mov
enter
ljmp
push
xor
or
pusha
movsb
push
mov
or
xchg
fldenv
rcrb
push
adc
mov
mov
inc
iret
ljmp
insb
cmp
push
sub
xchg
cmp
mov
push
pop
outsl
mov
pushf
inc
cmp
sbbl
push
ljmp
jno
loop
pop
mov
cmpsl
sbb
add
mov
xchg
mov
fwait
mov
adc
cmc
in
test
sub
insb
ficoml
in
or
inc
dec
cld
fidivl
or
negb
enter
lds
adc
sub
push
xor
and
xor
int
xor
dec
lea
mov
cwtl
mov
or
inc
rorb
adcl
aas
mov
mov
enter
xor
mov
mov
mov
adc
and
hlt
push
inc
sahf
mov
icebp
sbb
mov
rcll
sbb
jge
subl
fwait
ss
mov
add
mov
bound
and
mov
push
jg
mov
int3
lods
xchg
lahf
add
loop
mov
lea
add
push
xchg
rclb
or
push
and
stc
out
cmc
mov
popf
ljmp
daa
mov
mov
out
xchg
push
scas
push
pop
or
xchg
and
mov
enter
aam
dec
add
mov
dec
mov
and
repz
jecxz
insb
aas
jno
and
sahf
xor
mov
mov
stos
into
cmp
ss
sbb
addb
je
cmp
inc
flds
out
sbb
aam
aaa
or
repz
pop
mov
aad
lock
ds
sbb
xchg
xchg
call
imul
push
jne
inc
xchg
fistpl
loopne
insb
pop
add
pop
push
inc
fs
inc
cltd
xor
pop
xor
jg
repnz
bound
loop
or
ror
in
leave
adc
std
aam
divl
out
mov
mov
sbb
mov
adc
add
or
bound
jns
jge
and
mov
xor
add
hlt
mov
retw
int3
insb
adc
fsubrl
ljmp
imul
fcoms
sub
cmp
push
sbb
inc
aad
xchg
scas
jne
leave
or
xor
lods
cmp
rorb
sub
stos
cltd
ret
lods
mov
cwtl
sub
jmp
popf
xchg
and
pop
mov
ljmp
out
xchg
nop
cli
and
fwait
push
xchg
scas
and
fwait
aaa
ja
loop
cmp
test
xchg
jg
daa
out
push
push
shlb
adc
cmp
das
icebp
or
mov
xchg
dec
stos
fdivs
push
dec
in
cld
jno
dec
ret
pusha
cld
sub
add
add
movsl
dec
cmp
lods
push
pop
pop
jle
icebp
in
mov
jle
cmpsb
scas
or
jb
pop
mov
dec
mov
mov
sub
inc
ficoms
adc
pop
cmp
xchg
cmp
jge
lock
mov
mov
fildll
jnp
adc
xor
ss
shl
lods
les
faddl
mov
pop
cltd
daa
int3
insb
lret
mov
out
xor
dec
sbb
cmpsl
dec
scas
push
fstpl
sbb
ss
sbb
in
out
pop
sti
stos
add
push
das
clc
sub
inc
inc
pop
mov
dec
lcall
dec
push
shrb
xor
inc
push
loopne
add
push
dec
lahf
pop
jno
mov
dec
arpl
fs
test
aaa
das
add
repz
mov
aad
insl
xchg
fucomp
dec
or
xlat
fstpt
mov
fcmovbe
iret
addb
inc
aaa
cli
inc
xlat
mov
xor
mov
add
jne
dec
add
cltd
cmp
das
das
mov
stos
sub
ljmp
je
repz
mov
test
out
mov
add
adc
scas
lret
call
cmp
outsb
mov
add
mov
mov
sbb
movsb
shr
sti
mov
mov
add
icebp
push
and
rcll
adc
cmp
jl
sbbb
dec
mov
subl
addr16
ds
cmc
imul
pop
das
test
gs
rolb
inc
add
xchg
cwtl
data16
fs
aaa
mov
xor
dec
pushf
push
decb
or
jg
and
ds
inc
ds
jb
stos
aas
imul
rorl
and
popf
inc
lods
jbe
mov
pop
or
scas
adc
and
mov
and
jl
or
fcmovne
fxch
pop
repz
dec
mov
nop
lods
cmp
pop
xor
insb
daa
or
shrb
dec
repnz
cmp
add
insl
dec
cld
aad
mov
leave
or
inc
xchg
aas
outsl
fadds
ja
psllq
clc
pushf
or
rolb
pop
mov
mov
cmc
jae
orl
mov
jns
pop
stos
cwtl
mov
dec
push
cmc
xchg
movsb
pop
shlb
in
ljmp
ljmp
and
scas
test
mov
push
dec
in
shrl
and
int3
push
mov
popf
ror
push
or
cld
pop
cmp
gs
mov
mov
ret
js
adc
pop
xchg
jecxz
jmp
fadds
out
pop
in
cmpsb
repnz
sub
mov
dec
add
das
daa
pop
inc
dec
sub
push
cltd
mov
pop
cvtdq2ps
jmp
ljmp
loop
jo
adc
jmp
clc
dec
pop
mov
repnz
sti
inc
sbb
je
cli
pop
pop
mov
jge
sub
push
push
sbb
sti
add
imul
ret
push
andb
sub
cmp
push
and
lret
jecxz
pop
dec
shl
xor
pop
sub
shrl
pop
sub
lret
cmp
sbb
xchg
pop
dec
aas
or
aas
outsl
test
inc
push
pop
sahf
dec
dec
jno
lret
dec
rcrb
fnsave
push
fwait
aam
out
pop
pop
in
sbbb
sub
ljmp
adc
lret
add
aad
pop
loopne
xor
push
jle
mov
les
int3
xor
sbb
mov
sub
push
fnsetpm(287
dec
in
xor
jo
loopne
push
stos
adc
test
loopne
add
inc
add
test
daa
imul
shl
js
lcall
movsl
outsl
rorb
jg
and
push
fcomp
out
pop
stos
push
jae,pn
cltd
jb
cmp
jmp
jbe
ds
jecxz
or
pop
aaa
jo
repnz
sub
dec
das
outsl
xor
enter
aaa
pop
jnp
and
in
push
dec
test
add
xchg
jo
adc
movsb
add
sarb
jns
out
pushf
xchg
xchg
insb
int3
ljmp
ds
sbb
sub
inc
inc
sbb
add
bound
sbb
cs
out
sub
inc
sub
fsts
and
pop
neg
jns
movsb
xor
or
push
ror
stos
dec
mov
mov
sti
pop
sub
inc
arpl
ljmp
mov
jne
push
jae
inc
rclb
and
addr16
inc
pop
inc
sub
es
sbb
lock
mov
push
addb
addb
mov
daa
mov
push
fildl
repnz
dec
adcb
js
xlat
or
mov
fnstcw
ss
fisttpll
loopne
mov
fs
sti
adc
lea
dec
xor
xchg
mov
mov
or
out
pop
mov
jmp
lahf
or
pop
mov
invd
arpl
sub
dec
sbb
mov
shlb
std
mov
inc
inc
mov
inc
ret
dec
push
xchg
lods
rorl
fwait
mov
and
sub
pop
lahf
add
mov
inc
clc
pushf
sbb
push
je
adc
xor
mov
loope
mov
mov
jne
mov
pop
or
gs
dec
rcrl
jnp
mov
mov
dec
scas
jnp
push
popf
out
insl
cmc
push
pushf
dec
mov
mov
add
addr16
mov
adc
mov
cmc
push
int3
jle
sbb
adc
mov
pop
pop
and
inc
or
push
ss
inc
jl
cmp
cmp
push
push
js
pop
aam
ret
ret
xor
rcl
ror
repz
std
sub
mov
push
loop
push
xchg
cwtl
ss
add
addr16
mov
jnp
mov
push
mov
arpl
add
jns
inc
rol
xor
add
xor
sahf
cmc
pop
shl
ss
outsl
adc
aam
pop
push
les
mov
pop
mov
mov
inc
adcl
or
push
mov
test
std
push
filds
js
jbe
mov
push
add
xor
shll
xor
dec
stos
adc
adc
sbb
adc
pop
jne
cmpsl
add
shlb
jae
je
inc
call
hlt
mov
xchg
mov
sub
lock
mov
cmp
jb
lahf
sbb
mov
and
and
ror
mov
inc
fcomp
fidivl
lods
add
push
add
pop
push
pop
jne
push
cwtl
mov
jmp
cmp
sbb
fisubs
push
test
mov
int3
scas
adc
dec
call
faddl
cmp
cltd
inc
mov
jne
stos
xchg
adc
push
dec
sbb
lods
out
stc
jb
push
test
sbb
lock
fcomi
jne
jno
dec
xchg
jmp
imul
mov
clc
rorb
push
sbb
call
pop
pop
ljmp
addr16
gs
jbe
pop
mov
rclb
stos
sub
es
call
jns
or
les
cld
ljmp
cmpsl
sub
outsb
adc
sbb
aas
pop
das
mov
jnp
scas
clc
dec
adc
into
ja
sbb
sub
ds
jne
xor
sub
fcoml
push
sub
cli
aam
jge
jp
xchg
pop
bound
jge
and
lea
dec
push
mov
jp
xchg
dec
aad
inc
inc
fsubrs
xor
notb
mov
clc
outsb
and
xchg
add
xlat
les
fucomi
fsubr
out
and
sbb
das
int
dec
inc
mov
fimuls
mov
popf
mov
outsl
andb
ja
add
clc
dec
xor
mov
push
stos
daa
xor
vsqrtps
out
sbb
fimull
fmull
mov
pop
jnp
push
xchg
pop
outsb
and
popa
xor
movl
mov
in
jbe
dec
dec
into
xlat
imul
movsl
dec
mov
lods
dec
les
mov
dec
popl
mov
mov
pop
xor
nop
hlt
mov
or
sub
sub
mov
cmp
mov
addr16
dec
jg
mov
fucomi
dec
mov
pop
add
fs
jb
dec
mov
cli
ret
js
dec
leave
sub
push
pop
push
bound
push
mov
fnstenv
loop
pop
packssdw
repnz
and
ret
add
jno
out
mov
lea
or
scas
pop
mov
mov
or
pop
push
popf
fsubr
jnp
jmp
mov
fidivl
push
cmp
mov
push
mov
mov
mov
icebp
loopne
call
mov
imul
popa
sbb
or
cmp
cld
test
pusha
xchg
xor
loop
jae
xchg
push
nop
fcoms
add
movsb
negl
inc
mov
scas
scas
and
inc
out
cmp
push
pusha
cmpsl
push
shll
dec
jb
lcall
out
xchg
pop
cmp
out
dec
hlt
in
fsubs
cltd
add
push
inc
aad
out
popf
stos
jns
outsl
out
rclb
stos
loop
sub
js
js
pop
push
icebp
push
xchg
adc
ss
jle
cld
xchg
cmpsl
js
fnstsw
int3
or
pop
pop
cwtl
pop
dec
adc
sub
sbb
movsb
jae
cld
xchg
sub
lods
pop
ret
xchg
repnz
mov
xlat
cli
mov
jle
and
cmp
pop
xor
adc
adc
nop
jmp
addr16
in
in
cmp
inc
pop
adc
popa
cmc
outsb
mov
xchg
bound
xor
mov
sbb
stos
inc
mov
out
push
sub
push
bound
cmp
test
fwait
scas
push
fdivp
or
jns
sahf
mov
ret
jecxz
mov
pop
ret
rol
xor
sbb
ds
pop
xchg
mov
cmp
psubd
into
inc
pop
jno
cli
clc
xor
push
fs
mov
mov
mov
arpl
pop
sbb
loop
lods
rcl
stos
pop
fs
ret
clc
ud0
adc
sub
mov
je
xor
scas
jg
xor
in
mov
clc
lret
pushf
pop
jae
xor
jnp
cmp
or
add
aam
cmp
mov
out
pop
push
xor
fwait
aas
jae
inc
shr
pushf
inc
rdpmc
and
inc
add
pop
jb
adc
push
mov
push
sub
jae
fxch
or
mov
mov
into
cwtl
dec
dec
xchg
push
xchg
in
std
pop
fs
in
shr
sti
shll
push
dec
push
cs
mov
repz
pop
push
popf
and
sbb
xchg
push
adc
inc
pop
stos
fcomps
cmp
jmp
mov
jnp
cmp
inc
outsb
movzwl
mov
sbb
mov
xor
pop
inc
add
inc
nop
xchg
leave
in
stc
jbe
dec
inc
les
push
mov
xor
fisubl
stc
sti
sbb
dec
fstps
in
jp
mov
jl
and
stos
mov
pop
jge
inc
cltd
jb
inc
call
int
stos
cmc
jno
mull
stos
sbb
ds
loopne
gs
mov
adc
sbb
push
xor
jl
in
notl
sub
inc
lcall
add
mov
inc
movsb
push
cmp
rcrb
adc
and
nop
pop
dec
sub
fwait
cwtl
push
mov
dec
imul
roll
jecxz
push
dec
mov
mov
mulb
cmpsl
out
mov
shrb
sub
repz
pop
push
test
stos
outsl
add
mov
rcrb
sbb
ds
repz
inc
test
xchg
xor
rcr
sbb
loopne
lahf
iret
ss
push
dec
sahf
dec
negl
fwait
or
jne
add
inc
adc
mov
sub
sahf
stos
add
mov
stos
pop
lds
aam
sbb
add
push
loop
cmp
inc
nop
sahf
lds
mov
xor
mov
xchg
sbb
push
xlat
jge
mov
cli
jg
mov
lods
adc
jge
xor
subl
mov
insb
insb
adc
fdivl
ds
jne
sbb
xchg
in
sub
out
gs
push
push
fstpt
xchg
rol
leave
pop
out
sbb
punpckhwd
ds
or
inc
test
jae
sbb
js
jb
aaa
test
adc
rcl
sbb
rep
or
jp
mov
mov
xchg
and
clc
jno
adc
and
lds
cmp
sbb
fimuls
nop
inc
pop
stc
clc
lock
ja
out
dec
add
push
jecxz
dec
dec
pop
sub
cmp
push
stos
mov
shrb
jecxz
lds
jl
add
sbb
in
mov
sub
lret
push
xchg
mov
inc
cmp
or
jbe
lcall
test
pushf
mov
push
in
lret
mov
data16
call
test
outsb
insb
test
popa
adc
pop
lods
filds
lret
les
mov
push
fisubrl
stos
push
pusha
mov
pop
shl
lods
ret
sbb
jbe
imul
in
stc
mov
mov
scas
fiadds
cmpb
cmpsb
test
and
jb
push
xchg
lock
rcll
ja
mov
movsl
loope
int
lods
movsl
std
jns
outsl
cmp
dec
movsl
pop
xchg
into
lea
lods
inc
mov
fistpll
icebp
sahf
cmp
lret
add
iret
negl
js
mov
push
mov
fnstsw
imul
loope
or
iret
adc
sbb
fbstp
lds
jmp
jne
dec
xchg
icebp
inc
mov
aam
dec
push
gs
cmp
sbb
pop
dec
mov
data16
cwtl
xchg
fwait
dec
mov
cmp
mov
hlt
push
pop
ds
ret
inc
cmp
mov
dec
insb
and
mov
pop
mov
inc
xchg
push
push
ret
pop
or
call
lret
call
imul
xchg
stc
xchg
cli
ja
ss
fwait
adcb
pusha
cli
setp
jmp
or
dec
fs
push
push
sub
cli
push
pop
cmp
mov
xor
mov
xchg
jne
fwait
mov
mov
sar
mov
test
rcll
adc
mov
xchg
sub
mov
aaa
icebp
jecxz
rcll
or
stc
xlat
int
pop
pop
xor
inc
les
mov
jns
in
sbb
gs
push
push
jae
testl
out
adc
or
je
push
loop
dec
jmp
in
lds
sbb
mov
sub
cs
push
lcall
xchg
fisubs
test
lds
rorl
iret
mov
rclb
orl
mov
mov
xchg
add
mov
int3
fbstp
out
enter
pusha
sbb
cmpb
loop
movsl
cmc
inc
xor
scas
xchg
rolb
sbb
sbb
lret
xchg
xchg
filds
or
scas
mov
iret
xchg
pop
ds
xchg
mov
sbb
mov
mov
out
mov
icebp
mov
dec
les
push
leave
sbbl
movsl
jne
sub
cmp
les
dec
mov
andb
xchg
aaa
pop
xchg
mov
sbbb
clc
push
gs
lcall
shrl
xchg
stc
sbb
or
sub
dec
sti
int3
mov
or
add
mov
aad
aad
adcl
and
sbb
lock
xor
stos
je
pop
imul
mov
sub
fsubrl
sub
push
dec
hlt
movsb
dec
and
es
std
leave
push
xlat
jmp
push
dec
xchg
cld
sahf
adc
push
repnz
sub
cmp
xor
lods
jl
rep
push
addl
pop
inc
mov
sbb
negb
in
or
scas
mov
mov
ljmp
dec
in
decl
jnp
pop
cmp
mov
lahf
cmpsb
arpl
nop
or
data16
mov
adc
xor
leave
sbb
mov
pop
jns
xor
cmp
cli
lret
jae
lcall
test
add
scas
push
cld
jae
add
mov
lret
mov
int
enter
clc
addr16
mov
pusha
jne
loop
mov
ds
std
or
push
inc
scas
pop
dec
xchg
xchg
lret
test
cmp
inc
shlb
add
sbb
movsl
test
lret
pop
jp
lahf
cmp
imul
or
icebp
test
add
sub
mov
pop
out
and
dec
test
das
add
inc
push
xor
mov
or
add
ljmp
xchg
pop
ret
xor
push
mov
mov
xor
or
jbe
ljmp
imul
leave
sahf
mov
adc
xchg
push
pushf
and
ret
sbb
mov
jne
push
jp
xchg
je
sub
test
repnz
ficomps
hlt
xchg
jecxz
int
imulb
orb
fimuls
or
adc
jno
and
cli
aaa
pusha
jns
dec
push
push
or
subl
or
nop
daa
outsl
hlt
ss
fsts
sub
pop
jg
mov
mov
jge
dec
dec
jle
jbe
inc
xor
xor
push
pop
add
xchg
dec
mov
jns
fsts
out
out
es
cmp
das
add
js
scas
mov
inc
fwait
int3
and
ret
jle
adc
frstor
aas
pusha
push
or
mov
add
sbb
mov
bswap
push
icebp
push
test
inc
xchg
rcrb
cmp
add
add
jns
push
adc
imull
shrl
adc
cmp
sti
data16
shl
aad
pushf
test
xor
rcrl
cmp
xchg
push
cmc
mov
int
jbe
xchg
dec
add
push
cmp
xor
mov
std
lret
adcb
std
mov
jle
frstor
add
mov
fildl
arpl
scas
js
imulb
mov
rolb
jg
pop
add
ss
stos
adc
stc
imul
mov
add
lcall
pushf
pop
repz
icebp
sbb
add
xchg
data16
das
decl
mov
out
rclb
fs
add
cltd
push
int3
clc
sbb
js
jp
lret
test
xchg
mov
loope
int
shrb
in
aaa
fs
ss
nop
push
push
ds
mov
mov
mov
jle
adc
loop
xchg
cmp
mov
sub
scas
inc
or
gs
cmp
mul
scas
inc
fs
sbb
loop
and
and
jno
das
loop
jmp
cwtl
mov
call
lahf
les
dec
shlb
mov
xchg
and
out
xchg
ret
je
leave
out
shrl
outsl
mov
sti
jbe
jae
test
fnstsw
mov
mov
scas
pop
adc
pop
cmpsb
push
xchg
pop
or
xchg
xlat
cli
jb
push
insl
sarl
enter
xchg
shl
sbb
push
rcrl
ficompl
xchg
dec
lods
and
cmc
push
cli
lea
shlb
test
aam
ret
push
out
repz
insb
xchg
fisttpl
and
gs
add
mov
push
xlat
testb
cld
and
mov
add
jb
rolb
mov
lret
xor
into
loop
or
sub
jne
inc
dec
add
std
stc
dec
fmul
jo
adc
pop
and
mov
aad
jecxz
xor
mov
nop
shl
adc
mov
je
jge
mov
in
lds
xchg
sub
mov
add
lods
and
shll
movsl
fisttps
push
cltd
cmp
shr
outsl
xchg
mov
enter
inc
push
mov
int3
adc
jp,pn
in
xchg
sbb
cli
jo
fsts
decb
mov
test
mov
incb
pop
clc
gs
ror
jge
ficoml
xlat
and
addr16
rcrl
mov
jp
dec
lock
mov
dec
cmpsl
cs
xor
pushf
xchg
sub
cmp
fsts
into
stos
aam
lods
pop
pop
iret
mov
mov
addl
mov
or
xchg
dec
faddl
xchg
adc
mov
rolb
jo
add
aaa
dec
adc
je
insl
stc
inc
outsl
idivl
insl
imul
outsb
in
xchg
lahf
sbbl
test
enter
pop
mov
out
insb
jb
arpl
mov
addb
adc
test
sbb
pop
pop
outsb
mov
adc
jo
out
std
ljmp
cli
std
jns
mov
shl
movsl
mov
adc
gs
xchg
jno
imul
stc
inc
add
and
xlat
std
sbb
stos
fnstcw
sub
xor
jl
jmp
push
or
inc
movl
je
cs
push
rcrl
jp
push
adc
or
leave
dec
adc
xor
inc
mov
lret
es
dec
je
dec
push
xor
pop
and
not
pop
mov
stos
test
rolb
rorb
fwait
nop
iret
in
arpl
mov
fs
dec
and
dec
gs
jecxz
ja
inc
dec
aaa
mov
xlat
inc
call
lcall
fnsave
inc
jge
into
testl
mov
push
je
push
mov
test
mov
or
cmp
inc
jne
pop
pop
dec
pusha
mov
cli
or
sub
pop
or
shlb
inc
xor
cmpsl
clc
dec
jns
xlat
mov
jmp
incl
mov
leave
les
sarl
push
setge
in
jb
sub
push
arpl
add
stos
mov
arpl
cwtl
arpl
xor
loop
xchg
xchg
daa
insb
mov
imull
loop
addr16
mov
test
rcl
pop
jmp
sbb
flds
insl
xchg
xor
movsl
cltd
in
inc
xchg
inc
and
leave
inc
xchg
shr
lcall
aaa
daa
repz
fisubrs
pop
push
pusha
push
mov
push
and
sarl
inc
les
movsb
inc
sbb
and
rorl
fnsave
sub
mov
push
js
je
fisubl
popf
push
or
xor
into
adc
int3
dec
xchg
mov
sub
pop
into
xor
into
fsubl
mov
sub
pusha
fisubrs
jp
fsubrp
lds
or
repz
jns
das
mov
push
out
les
das
int
shlb
push
sub
popf
outsl
cmp
mov
sbb
mov
xchg
ja
sbb
iret
mov
outsl
outsb
pop
push
call
ficoml
add
inc
add
jmp
out
push
adc
add
inc
xchg
lret
jno
cmpl
xchg
outsb
popf
push
int
dec
icebp
push
xor
jo
dec
push
gs
adc
lods
push
xor
aas
mov
jecxz
orl
pop
mov
push
in
nop
stos
fsubs
fcmovnbe
push
loope
pop
movsb
and
popf
int3
leave
ficoms
mulb
sbb
call
pop
adc
add
sahf
hlt
aaa
shr
lret
in
and
cmp
in
xor
ret
ljmp
and
std
mov
mov
sbb
push
mov
pop
cltd
or
fbstp
je
lock
push
jl
clc
insl
inc
popf
jne
jmp
rcll
xchg
push
popa
mov
pushf
mov
inc
add
in
icebp
dec
in
mov
in
jnp
xchg
dec
add
and
loope
jmp
shll
adc
push
sub
mov
sub
sbb
or
test
mov
nop
mov
add
xor
xor
pop
in
in
or
mov
mov
mov
sbb
mov
idiv
int3
aaa
lahf
or
pop
daa
mov
int
add
sub
and
jmp
int3
lret
inc
imul
gs
in
mov
sbb
lahf
add
dec
andb
sbb
push
or
test
ds
or
xor
lods
pop
adc
jae
pop
jmp
jne
ss
adc
movsb
rorl
pop
rcll
fldenv
insb
jb
sub
repz
ljmp
cmp
xchg
push
mov
aad
lea
lret
aam
sub
inc
ficoml
sub
push
cmp
sbb
addr16
or
push
testb
mov
stc
dec
arpl
pop
dec
sahf
int
es
adc
out
rcrl
jle
cmpsl
mov
rep
jle
out
inc
inc
lds
movsl
adc
les
pushf
insb
sub
push
sbb
cwtl
jo
hlt
addl
sarb
sti
aaa
sahf
insb
roll
dec
push
fcompl
ljmp
sub
pusha
mov
cmpsl
jmp
adc
out
out
jns
xchg
clc
push
sbb
insb
out
push
sub
dec
popa
test
cs
lahf
sub
cmpb
jg
imul
aad
nop
add
cld
or
and
cwtl
mov
xchg
roll
dec
mov
sub
andb
imul
or
imulb
aas
sbb
sbb
xor
push
push
push
xchg
sbb
addr16
cmp
adcb
jmp
dec
mov
fs
mov
jl
test
mov
adc
out
into
sahf
add
imul
add
lahf
or
rcll
jae
ss
testl
out
sub
notl
xchg
insb
cmpb
out
icebp
aad
sub
in
lcall
xorl
sbb
inc
in
push
jb
xchg
or
or
sti
test
notb
fsubrs
fs
sub
daa
rcll
cmp
stc
jg
sbb
rorl
insb
mov
scas
pusha
xor
adc
leave
test
out
pop
mov
stos
dec
dec
adc
ss
or
fdivs
pop
jecxz
out
mov
mov
fidivrl
xchg
fildll
jge
fiaddl
or
xor
mov
mov
imul
mov
mov
hlt
jns
xor
xchg
sti
cli
mov
mov
and
les
clc
clc
sbb
pusha
pusha
jecxz
out
addb
stos
inc
bound
xchg
aas
stos
inc
jecxz
adc
pop
ficoms
cs
mov
fs
mov
dec
fisubrl
dec
xlat
mov
inc
mov
xchg
sete
cmp
mov
fidivrs
lcall
push
inc
cli
loope
mov
mov
pop
push
nop
sub
iret
adc
fwait
sahf
data16
movsb
adc
fbld
push
cmp
cmp
add
pop
inc
insl
mov
je
dec
push
inc
cmc
inc
cld
xchg
mov
mov
jp
pop
mov
lods
jo
loop
add
fwait
call
dec
fldcw
mov
mov
or
pop
in
dec
popf
dec
imul
xchg
bound
cli
mov
fcmovne
xchg
fidivs
dec
loop
mov
cmp
sbb
cmpsb
mov
jge
es
jge
out
fisubl
jns
push
and
aam
repnz
jno
add
adc
mov
pop
and
mov
mov
nop
aad
in
cltd
stos
in
mov
ljmp
lret
pop
pop
inc
rorb
loopne
mov
stos
scas
lock
pop
negb
cmpsb
scas
adc
dec
mov
dec
in
pop
sub
add
cli
sub
mov
pop
or
xchg
inc
inc
jo
cmp
push
mov
enter
fs
roll
pop
les
fsubrs
fmull
jecxz
jo
adc
lret
or
aad
xchg
mov
fmul
clc
in
stos
inc
and
adc
sub
test
mov
mov
cld
xorl
or
adc
in
inc
lea
ja
inc
and
mov
push
enter
iret
cmp
jbe
sub
adc
adc
push
xchg
push
loop
push
mov
add
mov
lret
jne
dec
push
lock
cli
push
dec
int
cltd
clc
cmp
int
test
mov
jmp
xchg
ds
lret
addr16
out
xlat
or
inc
adc
sbb
and
in
inc
and
in
adc
fs
inc
sbb
subl
ds
dec
mov
call
add
ret
ss
in
xchg
dec
andl
sub
jmp
stos
enter
cli
push
cs
mov
popa
mov
aam
or
xchg
pop
jae
push
adc
adc
mov
push
push
cmpsb
inc
and
cld
imul
fadd
sub
les
jno
shll
add
mov
jb
sub
cmc
repnz
stos
mov
push
sarl
outsl
cvtps2pi
adc
mov
insl
jmp
jb
xor
mov
imul
mov
inc
xchg
mov
jbe
push
cmp
sbb
push
icebp
or
jle
push
lret
loope
fcoms
mov
sbbb
in
movsl
add
fiaddl
jno
lds
cwtl
sbb
cmp
mov
cmp
inc
push
xchg
or
push
imul
cs
testl
or
sbb
cmpsl
sbb
and
imul
mov
jl
jp
mov
mov
and
adc
or
mov
fists
add
nop
mov
loopne
lea
push
inc
js
inc
iret
pop
lods
pop
stc
xchg
and
imul
jg
fwait
xchg
popf
dec
ficoml
sahf
fisubrl
adc
pop
xlat
pop
popa
sub
lock
inc
cmp
or
into
test
jge
sub
lock
sbbl
ficoml
les
shrl
add
mov
sarl
inc
push
jp
ficoms
sub
push
push
sub
pop
sbb
dec
lret
or
inc
jns
pushf
jne
push
push
int3
sub
aaa
call
add
sbb
in
mov
inc
mov
ss
mov
rcrb
add
rorl
sub
mov
outsl
popa
nop
and
fdivrl
sbb
mov
es
lret
testl
jne
xor
pop
lods
inc
mov
xor
fsubrl
in
cmp
inc
hlt
pop
xor
mov
jge
sub
sbb
push
xor
pop
aam
xor
lock
push
popf
mov
pop
call
cmp
jmp
pop
and
pop
and
sbb
pop
lock
divb
les
sbb
pop
dec
xor
sub
cmp
mov
xchg
int3
stos
lret
mov
pop
adc
mov
adc
mov
cli
jo
in
jecxz
pop
cmpsl
jg
outsb
jne
insb
pop
pop
and
dec
and
mov
aam
scas
lods
fsubs
jae
fildl
loopne
xor
xchg
xchg
daa
pop
jo
repz
mov
adc
dec
fdivr
jae
mov
sti
sbb
test
repz
test
sti
data16
xchg
leave
adc
ds
cmp
aas
add
and
scas
pop
lcall
xchg
sub
aas
sub
dec
mov
dec
dec
movsl
sub
cmp
aad
lock
jp
clc
adc
sti
adc
dec
rcrl
push
out
mov
cmp
ja
mov
inc
or
jl,pt
enter
jle
pop
stos
mov
inc
push
xchg
xor
xchg
daa
or
push
std
fists
outsb
in
aaa
dec
movsb
jae
mov
repz
ljmp
and
fistl
sbb
in
jo
daa
jecxz
lock
inc
cmc
fs
fnsave
clc
mov
imul
sbb
lock
fs
cmp
xor
fldlg2
xor
inc
dec
call
out
mov
or
sub
orl
add
sbb
inc
rorl
sbb
lret
int3
sub
adc
pop
mov
lods
scas
cld
outsb
mov
subb
pushf
inc
lahf
pusha
add
fs
fsubrl
pop
faddl
test
popa
pop
adc
add
pop
adc
cmp
xchg
jns
stos
or
mov
cld
test
xor
sbb
xor
fsubl
xorb
sbb
push
and
mov
call
push
ss
scas
repnz
dec
jnp
test
xor
and
js
cli
movsb
xchg
mov
dec
add
mov
xchg
loopne
mov
push
sbb
mov
jp
inc
xchg
sub
inc
out
aam
in
dec
ret
cmp
or
and
mov
adc
lret
es
xor
ror
mov
xor
fldl
mov
ret
imul
repz
pop
insb
or
and
inc
negl
cwtl
pop
ds
add
pop
in
or
and
ljmp
and
push
mov
bound
shlb
push
fstl
fs
cli
sbb
pop
cvtps2pd
aam
aad
rolb
inc
out
mov
roll
cwtl
push
fsin
cmc
pop
stos
sub
insl
cmpsl
sub
aam
jo
mov
iret
ja
insb
out
sar
sbb
stos
sub
mov
stos
sahf
xchg
lea
adc
pop
mov
inc
cmp
or
lret
mov
jns
lret
pop
outsl
enter
loop
dec
sar
and
imul
std
cmc
scas
mov
jb
mov
inc
mov
repz
sbb
push
rorb
cwtl
adc
pop
jb
add
add
add
jecxz
push
sysexit
inc
stos
stos
sbb
mov
pop
out
push
out
dec
pop
xor
out
shlb
jno
or
adc
adc
adc
mov
add
inc
xchg
inc
fmuls
or
dec
popa
sub
shlb
and
adc
sbb
and
mov
ds
or
leave
bound
sub
xchg
movsl
fidivrl
jp
cltd
inc
mov
jp
ja
lods
xchg
int3
xor
mov
adc
inc
push
or
lods
insb
push
out
sub
fsubr
mov
je
mov
hlt
mov
inc
ret
xor
dec
xchg
xchg
popa
mov
cmp
les
jp
int3
movsb
jno
sub
mov
imul
das
push
mov
jl
cmp
repz
mov
sbb
lret
rcr
fcoml
arpl
iret
out
and
pop
scas
repz
out
cmpb
fisttpll
insl
and
push
iret
ja
cmp
mov
testl
mov
sbb
sub
fildl
cmpsl
jl
or
imul
inc
and
pop
jae
in
inc
in
pop
int
ss
mull
pop
ss
xchg
ud1
xor
sub
push
mov
push
out
jns
dec
insb
test
jo
pop
jne
shll
add
js
loopne
fcomps
xchg
push
pop
rolb
jo
mov
jbe
test
ljmp
fsubrl
scas
sti
insl
push
inc
mov
cmp
ss
aad
sbb
jle
xchg
sbb
cld
ficompl
and
mov
and
test
int3
shl
idiv
sub
sbb
mov
mov
cmp
jns
jle
pop
mov
icebp
outsl
test
loope
pop
dec
push
inc
into
push
add
call
cld
mov
js
fnsave
adc
or
ficompl
xor
xchg
inc
dec
mov
push
insb
fisubl
cld
movsl
inc
clc
dec
jl
cmp
xor
cmp
or
daa
push
test
int
gs
lods
shll
hlt
cwtl
sahf
mov
idivb
push
cmp
cwtl
and
push
jns
fwait
das
aas
dec
sbb
xor
insl
mov
mov
push
mov
fmull
dec
sub
xchg
and
sub
ficoml
mov
push
adc
push
and
pop
mov
mov
fst
addr16
jno
pop
sub
fcompl
xor
sbb
push
jge
jle
push
sti
mov
push
lock
sarb
inc
lea
int
sahf
adc
incb
jno
mov
pushf
hlt
orl
cli
icebp
dec
arpl
mov
cli
mov
jno
in
mov
insl
cwtl
xchg
jle
pop
push
insl
and
push
cmpsl
xchg
rcrb
insb
test
push
arpl
lea
mov
mov
or
test
add
xchg
addb
insb
pop
mov
jg
out
scas
pop
popf
rcl
test
lods
insl
push
ljmp
adcb
scas
or
into
sbb
dec
add
mov
insb
lods
imul
fildl
and
popf
or
or
loope
push
dec
jl
mov
cli
dec
addl
and
pop
and
or
jo
hlt
mov
add
lret
cmp
ss
xchg
pop
or
adc
vmaxpd
insl
push
fwait
push
pop
and
lock
xlat
sub
stos
hlt
dec
push
scas
in
cld
fistpl
je
add
xlat
cli
fst
or
xor
pusha
fsts
bound
and
mov
xchg
mov
push
addb
stc
out
mov
out
push
or
jo
dec
ja
add
mov
or
push
pop
cmpb
ret
je
out
in
adc
aam
insl
cmpsb
mov
fsubr
pop
and
jge
mov
sub
ret
pop
lock
fdivl
push
xchg
pop
cli
mov
mov
sbb
mov
outsb
adc
sbb
out
pop
mov
pop
fs
cmpsl
inc
aam
call
pop
bound
push
mov
or
sub
pop
xor
pop
mov
iret
inc
cmp
lods
sbb
ljmp
and
pop
andb
cmp
fwait
dec
insb
push
pop
roll
xchg
insb
add
repz
mov
addr16
dec
push
add
addr16
mov
and
pop
jo
or
cld
pop
cmp
sbb
mov
pop
cli
enter
mov
and
loop
push
mov
inc
in
aam
addb
mov
nop
inc
fdivrl
leave
fcmovnb
cmc
ret
test
jnp
adc
pushf
daa
mov
mov
std
daa
push
cmp
push
scas
dec
and
stos
mov
mov
and
lar
jns
jo
sub
outsb
setg
cs
inc
pop
ret
cmpsl
add
daa
xchg
inc
mov
mov
cmpsl
imul
push
rcrb
pop
inc
mov
mov
pop
xor
sbb
cmp
cmp
pop
dec
mov
jl
xchg
push
jne
out
subb
aaa
push
insb
stos
notb
cmp
inc
or
scas
cmp
dec
inc
ljmp
hlt
jnp
cmpl
jns
lods
sub
push
jl,pt
or
iret
cmp
cld
mov
xlat
jb
inc
notb
push
mov
les
int
pop
scas
sbb
fstp
cmc
jb
xchg
mov
sahf
mov
mov
testb
push
andl
inc
ffree
push
and
insl
vphadddq
repnz
call
popa
xchg
jle
mov
jae
jl
fcmovne
sub
out
movsb
daa
leave
pop
mov
pop
leave
lret
jmp
adc
push
jbe
clc
mov
notb
pop
push
push
cmp
mov
cmpsb
pop
cmp
rdpmc
cli
leave
orb
or
aas
xchg
lret
mov
popf
js
enter
movsl
xchg
lea
in
cmp
das
in
dec
aad
jle
xor
or
cld
xchg
ret
insb
lds
mov
mov
mov
fcmovbe
add
dec
push
xchg
jl
dec
call
xchg
movsb
xchg
cmp
and
or
cmpsl
cltd
mov
pop
mov
mov
pop
int
jle
decl
pop
ljmp
pushf
icebp
aad
sbb
ret
inc
jle
bswap
lods
sahf
je
mov
mov
mov
call
fistps
xchg
cmpb
arpl
add
sahf
or
add
xchg
inc
mov
mov
push
mov
ja
jae
and
push
cmc
imul
jo
jl
sub
rcl
popf
adc
lods
ja
cmp
out
jg
out
dec
jno
std
mov
sarl
xor
js
xor
sub
jno
and
inc
pushf
cmpsb
jo
sub
cmovbe
leave
inc
mov
sbbl
mov
or
cwtl
enter
add
or
xor
add
rclb
pushf
ret
sbb
fwait
cltd
pop
adcl
out
cwtl
push
jp
loopne
loopne
scas
enter
push
xchg
lret
imul
jp
mov
enter
push
fistpl
and
xor
lock
cld
fisubs
dec
into
ret
cs
das
mov
sub
stos
inc
frstor
stc
daa
mov
scas
and
pop
stc
and
dec
dec
aam
ret
jno
pop
ja
pop
inc
test
test
inc
adc
leave
repnz
add
push
aas
cli
xor
cmpsl
das
shrl
mov
inc
lahf
pop
les
test
clc
mov
imul
clc
push
ss
test
push
adcl
bound
mov
sbb
xor
push
rcr
lret
loopne
mov
or
mov
insb
rorb
ficoms
xchg
dec
mov
dec
adc
stos
fcomi
or
cmp
imul
push
into
rcl
mov
lcall
jge
aas
jecxz
push
and
nop
mov
negb
cmp
fs
dec
sub
jbe
rorb
cmc
repz
test
pop
in
adc
dec
aas
repz
outsb
inc
lcall
insb
add
add
jecxz
je
shl
sub
inc
test
xor
xchg
iret
sbbl
cmpsl
movsb
add
sbb
fiadds
pop
inc
cmp
dec
xchg
lods
adc
int3
fs
scas
mov
jns
jecxz
popa
mov
add
data16
xor
xchg
aad
push
and
dec
sub
stos
xchg
fists
and
popf
xlat
fs
rdpmc
enter
jno
imul
cwtl
cmpb
dec
sbb
into
lcall
ljmp
stc
scas
gs
andb
sahf
lcall
ja
mov
mov
repz
push
cs
inc
test
mov
and
mov
popf
pop
push
xor
out
mov
pop
in
adc
mov
nop
das
enter
sarb
mov
aam
pop
mov
dec
mov
push
sti
in
inc
sub
imul
fcompl
cmp
fwait
inc
sbb
push
sub
mov
xchg
fstpt
stos
xchg
sub
popf
aam
fcomi
jno
jl
sahf
call
lods
loopne
repz
pop
adc
int3
out
inc
and
lret
mov
dec
pop
add
xchg
mov
lret
xchg
fcmovne
mov
insl
lret
mov
dec
dec
xchg
loope
push
jl
xchg
clc
fs
clc
push
loop
movsl
adc
lds
cmpsb
jno
insl
outsb
cli
push
insb
lret
rolb
ficoml
jp
or
fisttpll
je
xchg
aad
push
mov
inc
aad
push
das
cmp
es
and
cmp
icebp
cld
repz
mov
pushf
fs
clc
push
jge
jb
xor
pusha
cmpsb
movb
sub
shr
jae
lea
jmp
push
iret
push
or
mov
and
cmp
test
add
jl
sahf
jp
pop
in
or
inc
lcall
xor
leave
cli
fs
or
scas
jb
sbb
cmp
rolb
cmp
pop
push
lds
and
inc
and
mov
xor
sub
pop
outsb
cs
sbb
sarl
or
xlat
in
cmpsb
aad
pop
lcall
loop
jb
pop
jne
loop
fildl
xor
dec
mov
repnz
sti
jg
in
in
into
je
and
dec
push
popl
ja
pop
mov
sub
mov
adc
cmp
add
mov
imul
push
adc
ss
and
cmp
push
sbb
push
pop
jne
xor
scas
xchg
xchg
ljmp
push
xor
enter
mov
lds
and
push
daa
pop
xor
xor
std
push
dec
sub
fisttps
mov
pop
int
xchg
pop
jl
scas
insl
sbb
aad
jge
adc
add
adc
xchg
cmc
hlt
sarb
push
xchg
sbb
dec
push
jge
jb
pop
fstl
repnz
fwait
inc
movsb
dec
mov
addr16
pushf
dec
mov
insb
mov
cmc
mov
iret
jg
cs
mov
fists
pmulhuw
lret
jg
arpl
testl
leave
jbe
adc
and
ja
pop
aad
adc
cmovp
push
scas
inc
ljmp
fdivs
adc
add
out
rcrl
imul
loope
leave
sub
in
bound
mov
lock
cltd
cmp
jp
rolb
sbbb
xor
loope
addr16
jge
imul
stos
pop
push
adc
and
jmp
xchg
add
add
jl
cmc
mov
mov
add
cld
and
xchg
push
pop
xor
addr16
ja
rorl
mov
sub
pop
mov
inc
test
mov
xchg
push
cmp
outsl
pop
xchg
xchg
inc
mov
mov
dec
and
sbb
xor
fcomps
add
insl
adc
es
cs
inc
xchg
jae
mov
fildll
mov
aaa
cmp
pop
daa
mov
mov
dec
sti
stos
in
mov
xchg
mov
scas
inc
insb
jno,pt
jmp
jmp
inc
sub
xor
xchg
out
dec
xchg
lods
rcrb
ret
jle
rolb
mov
adc
xchg
inc
jne
pop
loop
nop
xchg
imul
ljmp
in
cmp
inc
push
or
hlt
mov
mov
sub
repnz
fs
mov
sub
adc
cmp
lcall
ja
fnstcw
add
pop
inc
sbb
sbb
dec
cmp
in
jp
jmp
jno
sbb
sbbl
call
fwait
clc
popf
cmp
mov
jo
or
inc
insl
test
cbtw
inc
jg
inc
fcmovbe
dec
adc
stc
cmc
aad
fistpll
fidivs
push
in
loopne
jo
mov
jnp
test
xchg
jl
xchg
or
fidivrl
cli
cmp
mov
push
int
sbb
popa
and
in
push
popf
rolb
push
ret
push
pop
iret
xlat
pop
cli
dec
js
lds
push
in
push
mov
popf
insl
push
fdivrs
iret
push
mov
push
cmp
fsubrl
jmp
ret
cmpsb
jbe
or
cmp
fistpll
push
ror
or
sbb
xchg
pushf
jne
stos
clc
push
out
stos
sub
xor
sbb
pop
mov
mov
adc
mov
pop
mov
mov
std
lds
and
arpl
leave
pop
out
mov
jmp
arpl
out
cmp
out
sti
out
push
hlt
inc
stos
mov
xor
out
jb
jnp
push
cli
xchg
out
in
mov
pop
pop
jl
mov
mov
in
pop
sub
test
dec
cmp
dec
or
adc
push
add
mov
mov
mov
movsb
jo
dec
ds
aam
ret
into
les
xchg
or
repz
and
sub
pop
inc
lret
mov
js
cmpl
cs
inc
cmp
cmpsl
push
jo
inc
adc
mov
cmpsl
add
dec
arpl
scas
bound
jns
inc
cli
outsb
pop
sbb
xor
imul
pop
fwait
daa
jbe
and
hlt
enter
scas
nop
inc
sahf
sbb
add
push
sub
std
or
sbb
xchg
outsb
loopne
sbb
icebp
imul
ret
push
lret
mov
sbb
mov
scas
push
xchg
jo
arpl
int3
sarl
dec
test
test
inc
mov
dec
add
lods
xchg
xor
push
mov
pop
pop
adc
cld
sbb
and
sub
jnp
inc
dec
and
sti
outsb
ss
lcall
nop
loope
sub
or
outsb
les
pop
lea
sbb
push
dec
sub
data16
enter
sets
nop
imul
pop
sub
adc
sbb
and
add
mov
frstor
pusha
lcall
loope
in
mov
and
and
inc
pushf
mov
lock
ljmp
jle
push
cltd
xchg
mov
xor
mov
sahf
mov
xchg
jle
loopne
stos
jb
in
mov
int3
dec
in
cld
test
cmp
dec
fcomps
sub
jle
mov
sbb
jp
cmp
scas
clc
sbb
fisubl
xchg
jg
jae
aad
imul
jge
cli
addr16
xchg
sub
jecxz
push
bswap
jb
or
aas
pusha
pandn
jmp
xor
cmc
inc
xchg
cmc
lock
daa
into
jp
pop
inc
shrb
cmp
xor
ud1
adc
fists
xchg
pop
cmc
jge
xchg
xor
adcb
cwtl
sbb
sbb
adc
adc
jne
adc
or
jnp
dec
lods
pop
lret
aas
lock
dec
push
mov
lret
rcpps
js
pop
mov
or
lret
fisttpl
jmp
and
stos
dec
dec
adc
dec
pop
imul
fcoms
xor
sahf
jo
inc
xor
stos
pop
pusha
loop
sbb
push
sub
dec
add
mov
movsb
inc
xchg
or
mov
mov
dec
loope
in
int
mov
and
adc
push
ss
lahf
lods
push
ds
inc
mov
push
and
jo
scas
push
in
xlat
inc
std
xchg
loopne
out
push
jae
or
cli
fsubs
call
push
test
cwtl
push
add
cmp
arpl
dec
cmpl
jmp
mov
bound
sbb
xchg
push
add
mov
ret
test
inc
push
add
insb
out
mov
imul
xor
test
insb
loopne
in
xor
push
mov
xchg
and
sbb
pop
stos
xchg
lea
pop
imul
loop
lcall
sub
inc
inc
lds
or
adc
add
stos
out
mov
or
movsb
xor
outsb
das
fmull
xchg
jecxz
out
mov
or
dec
cld
add
ja
adcb
mov
imul
inc
fs
in
ss
leave
push
adc
mov
or
pop
data16
shl
pop
add
andb
lahf
xor
aad
fiaddl
push
push
inc
mov
sbb
mov
imul
std
js
dec
pop
or
cmc
inc
movsl
add
add
fs
sub
mov
dec
insb
ss
mov
enter
mov
in
dec
mov
mov
xor
sti
add
jg
mov
movsb
out
sub
xor
das
lods
stc
xchg
push
xlat
sbb
mov
or
pop
pop
pop
pop
out
imul
lahf
hlt
insl
movsb
jne
insb
mov
inc
push
mov
sub
scas
clc
mov
lods
dec
int3
push
lods
cmp
inc
ja
push
mov
push
imull
std
mov
mov
jo
push
fbstp
and
mov
gs
out
mov
int
repnz
test
jmp
fldenv
push
es
insl
or
popl
loop
xchg
scas
in
cli
rol
xchg
xor
mov
in
mov
mov
push
ja
insl
pop
sti
sub
cmp
pop
mov
dec
xor
popf
pop
cmp
jl
push
sti
cld
sbb
xor
shl
dec
mov
int3
ret
jno
pop
cmp
out
cs
cli
test
pushl
clc
fmuls
scas
inc
sub
cwtd
std
jno
sub
xor
lods
into
or
mulb
and
lods
sub
xchg
inc
add
mov
jbe
or
xchg
pop
xchg
push
add
cld
inc
popf
and
clc
xchg
enter
jge
inc
int3
icebp
cmp
sbb
xchg
je
mov
fildl
jl
ja
jle
cwtl
mov
mov
cmp
in
add
sbb
lock
pop
gs
dec
mov
mov
xor
test
in
ret
cwtl
andl
outsl
jp
loop
and
popa
aaa
mov
add
je
push
xchg
outsb
in
xchg
push
stc
outsb
inc
jge
xor
mov
jmp
sbb
aas
je
jmp
mov
mov
pop
dec
xchg
in
sbb
stos
ljmp
xor
clc
loop
stos
and
push
cmpl
outsb
or
xor
lock
jecxz
aad
lds
lea
cltd
push
mov
mov
fs
outsb
dec
or
arpl
inc
sbb
jno,pn
pop
and
ja
mov
xchg
inc
mov
inc
inc
bound
xchg
cmp
nop
add
mov
daa
sbb
sbb
bound
mov
into
mov
xchg
sbb
clc
or
fisttpl
nopl
xor
adcl
test
mov
fwait
and
mov
test
push
xor
nop
stos
inc
pop
mov
push
lds
dec
or
mov
xor
out
mov
test
push
mov
xor
mov
fcom
sahf
push
or
dec
inc
mov
mulb
mov
aam
pusha
jnp
pop
jns
mov
shlb
mov
push
mov
shll
rorb
fmull
add
mov
enter
rcrb
in
imul
cltd
pushf
shr
mov
pop
and
add
imul
push
out
jl
hlt
sbb
lds
inc
bound
jg
mov
inc
cli
adc
mov
fcomp
icebp
les
push
lds
dec
sbb
mov
jo
movsl
push
repnz
cmp
cmp
mov
cmp
add
out
push
dec
mov
jecxz
jle
dec
mov
push
popf
ds
pop
lea
sub
test
adc
xchg
cmp
arpl
cmpb
jmp
fisubrs
hlt
into
adc
inc
push
xchg
lds
jg
icebp
fcomip
ss
jno
jb
push
aam
mov
int
out
dec
clc
les
add
iret
adc
push
fsubrs
mov
or
inc
repnz
add
iret
je
icebp
in
sub
adc
mov
pop
inc
int
push
jbe
jo
into
xchg
gs
and
xor
add
inc
nop
cmp
mov
xor
inc
push
pop
lret
sub
sti
cltd
ja
mov
xor
fstl
push
jo
sub
xor
stc
cmp
addr16
pop
dec
push
pop
test
mov
fistpll
lea
jecxz
repz
inc
fildll
and
jo
cmc
lock
or
pop
sub
pop
jp
fistps
lahf
hlt
mov
inc
jo
fsubs
lahf
adc
mov
rcr
dec
mov
mov
dec
std
loop
popa
add
or
ret
aad
xor
ret
lret
fwait
sahf
aam
mov
repnz
and
jmp
stos
aaa
jo
lret
int
mov
jae
mov
in
int
mov
bound
inc
test
sub
int3
add
push
int
push
js
push
fwait
sub
push
into
movsb
aad
pop
shrl
jns
inc
test
xchg
pop
lcall
xchg
mov
xchg
push
or
rcr
dec
cmp
mov
jnp
mov
cmp
cmpsb
cwtl
aaa
ficoms
jmp
out
cmp
or
inc
or
in
xor
leave
movsl
adc
lret
or
push
push
jbe
ds
pusha
add
xchg
or
inc
pusha
jno
and
sub
dec
push
mov
cmp
std
lds
mov
pop
jbe
cmp
sub
rclb
xor
int
mov
shl
test
add
mov
lock
fsts
mov
aad
cld
xchg
pop
int
fsts
inc
loopne
sbb
sub
aam
push
adc
ret
shufps
push
adc
sarl
mov
cmp
sub
push
lods
push
jge
and
std
jo
push
bound
cld
xchg
xor
xor
iret
and
xchg
sahf
and
push
sbb
xchg
push
fsubrl
add
insb
outsl
call
pop
mov
mov
jg
push
lods
jg
divl
jmp
out
xchg
fisttps
mov
lock
jmp
fcomp
push
mov
adc
sbb
ja
cmp
jae
mov
push
inc
pop
call
adc
inc
push
lock
or
stos
sub
insl
sbb
and
int
cmc
jl
dec
dec
jg
call
imul
dec
pusha
sub
mov
mov
add
jp
push
movb
in
cwtl
cmp
or
cmpsl
jbe
push
xlat
fsts
sahf
push
jmp
shl
faddl
lods
xchg
jge,pn
cmp
movsb
or
lods
loop
gs
mov
fstl
push
and
or
push
mov
mov
shlb
clc
ds
lods
cmp
in
push
mov
and
fidivrl
aad
push
adc
pop
and
mov
shll
inc
ja
dec
jl
xor
and
sbb
movsl
push
inc
lahf
daa
bound
inc
iret
out
in
rcrb
repnz
out
ljmp
inc
add
sub
push
cmp
sub
dec
dec
mov
sub
ror
jbe
add
das
and
test
mov
cmp
int3
cmpsl
lods
fisubs
mov
and
jmp
and
popa
loop
sub
inc
push
ljmp
mov
repnz
push
pop
inc
mov
fstsw
int3
xchg
lods
xchg
dec
xchg
lea
out
and
pop
jle
popa
push
aaa
and
xchg
mov
mov
int
sarl
pop
adc
inc
lea
xchg
ret
mov
jo
lds
pop
mov
jecxz
mov
ret
adcb
jae
scas
adc
into
adc
dec
mov
fcoml
aaa
inc
mov
push
inc
daa
mov
shll
push
rolb
push
inc
push
mov
cmp
add
sarl
sub
mov
sbb
fistpll
xlat
andb
adc
lahf
ror
mov
adc
sbbb
xchg
cwtl
push
lods
cmpsl
jl
cmp
jbe
mov
or
pusha
and
nop
cmpsb
fbld
xlat
cmpsl
loop
out
sbb
test
aam
icebp
adc
push
jno
ds
adc
xor
rcll
aam
mov
loopne
and
push
loope
call
test
loop
out
insl
xor
add
xchg
sub
in
aad
leave
dec
jae
mov
movsb
ret
pop
outsb
in
cmp
mov
push
andb
sbb
mov
popf
int3
push
inc
mov
scas
fsubrl
push
dec
cmpsl
dec
pop
mov
push
out
cmp
neg
in
cmp
or
or
pop
arpl
mov
mov
jp
cmp
mov
rol
mov
data16
inc
imul
xchg
mov
dec
fdivs
cli
lahf
test
out
test
or
pushf
pop
outsb
int3
fstps
into
or
xor
push
jle
xorb
lahf
pop
popf
mov
call
mov
jnp
pop
pop
shlb
lahf
xchg
cmp
hlt
scas
out
xchg
dec
addr16
xor
shl
divb
imul
addr16
fwait
lea
mov
xchg
inc
push
and
push
test
pop
rorl
pop
mov
in
addl
mov
cli
shll
js
out
in
cwtl
dec
mov
sahf
push
fisttpll
jb
and
push
nop
and
xchg
jecxz
cmc
sub
push
xor
cmpsl
add
and
push
fildl
cli
dec
mov
lock
popa
mov
aam
mov
sbb
lods
xor
mov
outsl
lods
or
gs
scas
xor
adc
cmp
movsl
push
imul
push
adc
notl
inc
xlat
mov
mov
in
ss
aas
movsl
sti
movsb
test
pop
aam
iret
adc
mov
out
test
and
mov
sbb
mov
outsl
push
inc
out
rol
inc
shrl
popf
push
adc
in
dec
pop
sbb
jno
ss
stos
fldl
jmp
jg
add
mov
mov
mov
add
push
nop
shl
jmp
in
icebp
sub
aaa
rcll
dec
pushf
xchg
sbb
insl
mov
in
and
mov
sbb
push
xchg
imul
sbb
push
rcll
sub
push
add
or
sahf
jb
add
stos
dec
in
jno
cmpsb
pop
pusha
adc
xchg
gs
cltd
ljmp
or
sbb
mov
or
lods
out
mov
data16
adc
push
add
sahf
pusha
pop
xchg
ljmp
test
inc
std
xchg
inc
cld
or
outsb
xchg
xchg
pop
sbb
jne
repz
scas
lods
xor
push
adc
pop
inc
aaa
push
loope
insl
mov
outsl
out
addr16
mov
sarb
movsb
jne
pop
out
xchg
sub
push
out
repz
jle
and
fidivl
ss
mov
inc
mov
xchg
ss
rcrl
cmc
mov
dec
cmp
icebp
mov
mov
inc
sti
in
daa
mov
xchg
mov
xor
insl
jmp
adcl
sbb
cmc
pushf
cltd
add
imul
sbb
ficomps
mov
mov
xlat
cmp
popa
jns
outsb
in
mov
fwait
pop
popa
sbb
inc
sub
pop
push
xchg
shr
mov
push
inc
add
aaa
mov
add
popl
inc
mov
mov
and
push
pop
ror
lahf
in
dec
flds
scas
lea
mov
jo
or
rclb
sbb
pushw
lods
lret
jb
test
mov
push
mov
mov
gs
mov
xorb
test
add
lods
loopne
push
outsl
into
cwtl
inc
rorb
scas
into
or
mov
movsl
xor
das
call
add
pushf
adc
jbe
adc
sub
stc
movsb
lea
mov
in
push
fwait
test
cld
fldcw
fcmovnbe
jge
sahf
xor
push
orb
xchg
pusha
mov
jbe
pushf
insb
test
mov
je
or
loopne
xchg
adc
cld
push
mov
test
lcall
or
cmp
lods
hlt
leave
ja
sbb
pop
lahf
cmp
add
fmuls
cmp
jno
jae
movsb
push
aad
jae
movsb
pop
adc
es
fidivs
imul
cmpsl
dec
push
jo
push
test
dec
jae
cli
cli
sbb
das
pop
ss
xorl
pop
subl
jb
add
and
inc
int
mov
inc
test
into
ds
int
scas
loope
xor
sbb
adc
jne
adcl
inc
aaa
push
fdiv
inc
cltd
mov
xlat
mov
inc
mov
xlat
lea
push
jl
icebp
pusha
jecxz
pop
jg
inc
xor
pop
repz
mov
jno
pop
xor
mov
mov
lcall
mov
push
test
cmc
or
ficoml
push
mov
shr
aaa
mov
inc
lahf
adc
sub
fsubrp
mov
xchg
sbb
jmp
push
repz
insl
popa
das
mov
mov
test
xchg
mov
loopne
add
out
fists
inc
xchg
dec
pop
out
mov
and
test
mov
mov
jo
into
test
cmpsb
andl
pop
jb
dec
lret
and
cli
out
mov
loop
arpl
and
push
loope
call
push
add
rorb
dec
add
mov
shl
andb
sbb
push
push
dec
std
cmp
or
sbb
inc
mov
imul
mov
push
scas
out
mov
out
add
sar
hlt
xor
xchg
mov
add
daa
cmp
popf
jle
add
or
in
addr16
jns
outsl
ret
cmpsb
mov
xchg
xor
cltd
ss
push
pop
mov
mov
jp
sbb
enter
push
jno
sbb
fucomp
fidivrs
mov
test
jl
cld
pop
xchg
dec
fsubs
call
adc
fisttpl
mov
icebp
pop
sub
sahf
mov
add
pop
out
stos
lods
sbb
jns
xlat
sti
dec
inc
cmpsl
fstl
jb
js
outsl
jne
out
pusha
or
mov
jb
into
inc
test
adc
sbb
cltd
enter
mov
adc
jle,pt
enter
int
test
mov
push
push
or
and
loop
test
mov
fistl
ret
lret
lods
adc
add
mov
inc
aas
outsb
sbb
jg
stos
fistl
xchg
inc
out
jae
jg
jge
jb
call
outsb
dec
arpl
and
mov
shll
imul
es
dec
loop
lret
add
stos
movsl
cli
push
divl
or
cmc
neg
pop
add
mov
or
test
je,pt
mov
loop
jno
xchg
or
cli
leave
jae
mov
jecxz
push
je
jb
int3
push
dec
popf
enter
mov
outsl
subb
jg
dec
sbb
dec
pop
mov
sbb
add
jp
inc
push
inc
xchg
jns
cmp
or
pop
rcl
xor
call
pop
call
out
arpl
fcmovne
sbb
mov
scas
xchg
idivl
mov
and
rcrl
xchg
sub
cmp
fs
adc
ret
add
nop
fucomi
aad
es
rorl
shlb
jae
movsl
xchg
mov
rcr
cmp
pop
xchg
jp
jae
shrb
pusha
lods
repz
daa
iret
xlat
scas
jnp
inc
popf
fwait
movsl
push
iret
out
movsl
adc
movsl
stos
add
xchg
test
mov
or
pop
cwtl
add
adc
push
and
xchg
pop
test
pop
movb
lahf
or
aam
sbb
cmp
aaa
rcrl
test
lcall
pop
enter
jns
dec
xchg
pusha
lds
int
pop
cmp
test
pop
scas
mov
aam
push
lcall
loop
mov
into
adc
sub
mov
ss
mov
lahf
adc
jg
lods
push
lret
jge
sbb
pop
dec
inc
gs
push
insb
lret
jae
lcall
test
dec
mov
sub
push
pop
xor
and
sub
outsl
and
std
aas
rorb
cltd
xor
or
rcrl
cmp
fisubrl
fwait
leave
sbb
cmp
ffreep
xor
repnz
ffreep
cmp
adc
rorb
aas
pop
cltd
add
mov
popf
lds
jg
lret
pop
inc
in
insl
leave
push
cmp
adc
mov
int
incb
hlt
ror
leave
ret
psubsw
into
rcrb
orl
sbb
out
cld
push
or
loop
dec
dec
mov
insb
inc
icebp
inc
dec
enter
insb
mov
and
adc
or
pop
xor
popf
and
imul
icebp
fwait
push
ret
scas
mov
add
sbb
mov
mov
push
aad
mov
inc
lock
arpl
push
pop
mov
mov
pop
mov
xor
adc
sbb
out
sti
dec
dec
call
cmp
and
lahf
cmp
data16
jge
fsubrl
das
or
loopne
out
out
in
and
push
dec
fwait
pop
and
cmp
gs
in
negb
fisubrs
pusha
mov
push
jo
sub
scas
test
or
mov
and
add
sub
insb
rcl
mov
loopne
mov
sub
ret
mov
push
sbb
push
dec
sbbb
cli
pop
cmp
push
inc
sbb
inc
inc
insl
popf
inc
mov
xchg
mov
leave
cmp
push
or
out
sbb
test
je
imull
cmpsl
out
sbb
sub
mov
cmpsl
ss
ja
nop
mov
add
xchg
pushf
xchg
cltd
push
scas
mov
das
cmp
mov
ss
xchg
jno
cs
out
push
jecxz
test
adc
out
sbb
cld
js
mov
mov
leave
mov
sub
loope
fsts
push
mov
xchg
aaa
mov
outsb
es
stos
imul
dec
repz
jae
pop
lods
push
pop
leave
and
mov
sbb
insl
pop
fistps
push
fnstsw
push
jne
or
rclb
lret
enter
ja
lds
pop
popf
ljmp
dec
cmp
je
icebp
or
repz
push
cmp
imul
popa
dec
push
dec
push
cmp
flds
aad
fsubs
scas
sub
or
and
jg
push
icebp
not
js
jmp
xchg
xchg
mov
adc
mov
imul
inc
stos
and
sarl
cmpsl
jno
mov
insl
dec
repnz
ljmp
xchg
jbe
scas
push
mov
push
mov
aam
cmp
mov
xor
aad
xchg
mov
xlat
clc
xchg
inc
cmp
jbe
and
idivb
pop
sub
or
insl
leave
test
fucompp
pop
xor
ficoms
sarb
inc
mov
call
cld
and
pop
sub
ljmp
sub
mov
cmp
mov
subb
jae
stos
rcll
add
cmpl
shl
push
lahf
and
inc
inc
fsubrs
insb
stos
das
enter
aaa
testl
rol
adc
jns
ret
pop
mov
or
filds
scas
mov
fcmovb
adc
jae
shl
xchg
testb
and
movsl
movsl
sbb
lret
adc
mov
dec
filds
ficoml
shrb
decb
dec
rcr
or
mov
loop
jle
sub
or
pop
pop
pop
iret
lods
cmpl
xor
pop
or
mov
push
dec
fadd
xchg
push
ret
popa
sub
call
push
stos
push
movsl
fwait
inc
or
hlt
add
pushf
shlb
push
push
in
push
or
push
inc
leave
mov
pop
shl
add
outsb
adc
xchg
loope
data16
out
cli
out
sti
jae
adc
push
std
mov
push
in
push
lcall
xchg
je
and
cmp
pusha
mov
push
imul
arpl
setge
js
mov
push
lret
mov
jne
fiadds
xchg
iret
clc
jle
test
icebp
pop
mov
push
fbld
and
push
repz
pop
xchg
push
std
sbbl
and
insb
outsb
sbb
fdivrl
inc
mov
xchg
cld
mov
movsb
pushf
daa
pop
sbb
cmpsl
xchg
cmpsb
mov
loope
xchg
jmp
or
add
pop
or
push
xchg
scas
dec
jl
ljmp
jbe
mov
mov
movsb
xor
fdiv
or
mov
imul
rorl
loope
mov
add
fistl
add
pop
pop
push
arpl
push
sbb
cmp
xor
sarb
mov
aad
inc
cmp
fstps
mov
repz
addr16
fadds
dec
sub
adc
icebp
and
ljmp
decl
std
pushf
jne
jno
jbe
ret
pop
pop
mov
jne
or
outsl
aad
out
dec
jge
xchg
push
adcb
lock
mov
mov
push
lock
inc
subb
insl
mov
nop
lods
sbb
or
insb
jmp
std
dec
xchg
out
cmp
dec
and
jae
sub
pop
in
pop
dec
push
popa
pop
jge
out
je
sbb
lret
mov
add
arpl
jg
out
push
pusha
jae
push
test
inc
mov
inc
mov
xor
mov
dec
loop
push
inc
out
imul
loopne
cmp
call
add
ljmp
ja
cmpl
add
mov
lods
lahf
mov
push
mov
gs
scas
or
fcomi
xchg
add
aaa
cmpb
xchg
mov
dec
add
scas
xor
push
mov
mov
es
aas
in
loop
sub
insb
mov
mov
add
pusha
aam
ljmp
inc
imul
leave
cmpsl
rcrl
mov
and
sbb
cmpsb
dec
jae
mov
dec
sub
xor
popa
fstpl
jb
test
mov
icebp
adc
or
test
or
adc
inc
jl
sub
sub
adc
adc
jp
jno
call
pop
orl
pop
imulb
lods
jecxz
ret
push
mov
add
stc
xor
aaa
std
add
cmc
mov
xor
test
imul
aad
sbb
enter
insb
mov
mov
std
xor
inc
adc
jp
cmovne
inc
iret
loopne
pop
fdivrs
sub
add
testl
adc
dec
jb
or
push
mov
jb
stos
inc
lret
or
xchg
push
fcmove
mov
nop
ljmp
xchg
push
and
adc
pop
cmp
adc
pushf
mov
and
cwtl
jb
push
stos
inc
stos
test
pop
mov
outsl
mov
popf
sub
stos
cli
push
push
cmp
dec
hlt
mov
aam
cmpsl
pop
mov
cmp
jmp
insl
frstor
stos
mov
or
push
dec
test
nopl
xor
xchg
sbb
cmp
das
sub
call
in
fadd
pop
insb
sub
out
fs
iret
or
pop
out
fildll
stos
inc
and
rcr
mov
mov
mov
xchg
jl
push
ss
and
add
fs
pop
clc
xor
icebp
in
ss
call
pop
popa
or
fsubrl
movsb
into
sbb
and
or
cmp
in
es
ss
pop
fsubr
sbb
ja
pop
sbb
pop
sbb
movsl
and
aaa
mov
mov
mov
aam
test
cli
xlat
push
mov
dec
xchg
mov
movb
lahf
mov
in
mov
xor
rcrl
iret
jo
out
jge
cli
mov
add
mov
jns
sub
sub
lods
sahf
gs
mov
mov
add
js
mov
add
cld
loop
cmpsb
dec
pop
outsl
inc
jecxz
cmpsb
mov
imul
sbb
aad
inc
dec
daa
or
fs
arpl
mov
jno
es
xchg
popl
aas
xchg
pop
jno
cmpb
mov
or
scas
imul
xchg
cmpsb
lret
icebp
lea
pushf
sbb
notb
push
bound
sbb
fstps
mov
mov
lds
sub
pop
test
sub
inc
lds
aad
sbb
adc
hlt
fs
pusha
cmpsb
scas
dec
imul
int
mov
xchg
subl
cmp
nop
dec
lods
andl
cmp
aad
jns,pt
and
movb
push
int
arpl
xor
nop
push
pop
jecxz
scas
testb
rorb
sbb
sbb
nop
xchg
call
pmaxub
sbb
or
and
insb
sti
lods
lods
xchg
jns
push
enter
loop
popf
add
iret
and
or
cld
addb
sbb
sub
add
icebp
pop
addr16
mov
inc
inc
or
jae
stos
jg
adcb
jg
test
mov
sti
fsub
out
inc
aam
cli
mov
in
jp
xor
popa
sub
sub
addr16
cmpsb
push
jo
push
cmp
lea
pop
cmc
cmpsl
dec
es
lods
mov
and
nop
sbb
mov
adc
sbb
mov
sub
push
int3
jnp
aam
inc
adc
repnz
aaa
imul
adc
inc
aam
pop
sbb
inc
cmp
pop
adc
movsl
dec
jns
push
arpl
mov
xchg
ljmp
lock
inc
and
addr16
pop
pop
sbb
pop
push
fstpl
les
push
sbb
ljmp
out
out
mov
out
lock
cmp
stos
les
sarb
xchg
daa
mov
mov
mov
fiadds
cmp
push
add
push
inc
push
icebp
mov
cld
cmpsb
test
mov
out
icebp
scas
aad
stc
sub
lods
stos
mov
mov
add
loope
fcmovne
insb
insb
icebp
jle
jl
jno
cmpb
jecxz
popf
into
outsb
in
jle
loop
or
jb
int3
mov
sbb
push
js
aas
bound
or
scas
out
fmuls
jge
aaa
jl
jbe
imul
jmp
and
fildll
lods
inc
or
xor
out
fldcw
out
inc
lods
cmpsb
mov
daa
mov
nop
fwait
lcall
cmpsl
fisubrl
stos
shl
xchg
add
sti
dec
mov
loop
outsl
pop
mov
int
test
pop
andb
cld
enter
push
or
in
mov
leave
mov
sbb
mov
mov
lret
hlt
adc
and
addr16
cmp
adc
xor
or
or
insl
mov
cli
xchg
fisubs
pop
mov
popf
test
add
cmp
scas
fs
add
ret
dec
push
xor
enter
jl
dec
xchg
int
jge
push
leave
mov
addl
and
pop
mov
fimull
lods
pop
dec
ret
mov
cmc
fildl
cwtl
xor
popa
clc
fwait
xor
push
mov
cmp
mov
ja
pushf
xlat
xor
lret
iret
call
fwait
rclb
mov
xchg
sub
cmp
cmpsb
out
or
cmp
pop
mov
loope
into
xchg
std
jmp
inc
rolb
aad
insb
hlt
enter
das
ret
cmp
jl
dec
rcll
sarl
mov
sti
bound
incb
mov
jl
outsb
ljmp
jecxz
pop
inc
push
mov
or
pop
cmp
inc
jecxz
cmp
dec
xchg
cmpsl
and
push
cmpsl
pushf
aas
scas
dec
mov
jb
mov
cmp
add
jns
add
insb
and
shlb
lock
lret
insl
xchg
out
popa
mov
stc
out
gs
out
mov
add
inc
ja
fcoml
scas
ds
mov
fisubs
jmp
sub
inc
mov
mov
mov
dec
fldcw
pop
fisttps
popa
cmp
xor
xchg
dec
imul
and
push
xchg
negl
push
dec
inc
pop
mov
or
loopne
repnz
sqrtps
std
and
push
pop
mov
jle
xchg
repnz
cwtl
jns
test
or
dec
mov
ja
sub
adc
dec
lods
pushf
shrb
repnz
xchg
mov
data16
lea
cltd
mov
ja
jns
xchg
xchg
lds
mov
cmp
jae
jecxz
adc
and
add
scas
xor
push
jno
mov
int3
aad
ret
dec
inc
dec
pusha
cmc
mov
rcll
or
adc
sub
aas
sub
cmp
faddl
stos
dec
inc
pop
mov
pop
or
imul
push
loope
mov
push
and
mov
xchg
mov
out
sbbl
push
inc
test
out
lret
iret
xchg
sbb
cwtl
orb
or
sbb
out
xchg
and
xor
jae
mov
mov
rsm
sub
bound
xor
push
loop
movsl
jge
movsl
sub
pushf
scas
imulb
sahf
mov
ss
adc
pop
leave
or
dec
inc
push
dec
fs
leave
fwait
leave
fcoms
hlt
call
mov
shll
adc
rorb
inc
rcr
shr
fs
mov
es
xor
xchg
ret
fbld
mov
jecxz
das
mov
dec
xchg
andl
xchg
mov
add
outsl
iret
xor
icebp
xor
push
cmpsl
cmp
and
cmp
ja
jg
adc
jp
xchg
or
dec
add
pop
cmp
dec
adc
mov
jb
mov
popa
lock
mov
daa
add
arpl
int3
outsl
jbe
enter
repnz
movsl
in
insl
dec
or
shlb
ss
adc
data16
mov
daa
xchg
hlt
mov
sbb
mov
and
and
inc
call
and
cltd
xchg
sbb
jno
pop
xor
test
mov
ret
ret
dec
push
mov
cli
push
xchg
les
xchg
lods
push
popa
pop
and
adc
sarl
shll
jne
add
dec
mov
insl
daa
or
mov
push
dec
testb
mov
popa
movsl
dec
add
inc
xor
fs
enter
nop
mov
stos
jecxz
scas
mov
inc
hlt
sbb
push
das
sub
mov
or
ljmp
aas
movsl
sahf
insl
push
outsl
dec
fstpt
mov
les
cs
test
mov
cmp
data16
loop
aam
mov
pushf
or
mov
lods
sbb
adc
push
mov
in
ss
mov
jbe
lods
pop
and
adc
arpl
jg
gs
xchg
xlat
push
mov
mov
sub
call
loop
and
jmp
repz
pop
and
addr16
and
jmp
push
mov
mov
mov
xchg
or
xor
jno
adc
sbb
push
fcoms
das
xchg
fs
test
push
jne
mov
pop
jnp
pop
lcall
sbb
dec
pop
xor
mov
cld
dec
lcall
cmp
addb
cwtl
fisubrs
fsubrs
xchg
aam
pop
xchg
gs
add
push
das
aam
adc
sarb
bound
ret
push
xorl
je
adc
fdivr
cmp
das
fucomp
push
fcoms
push
cmpsl
jmp
push
jns
push
popa
sahf
addr16
out
inc
cmp
mov
fdivrs
mov
lcall
outsl
das
push
pop
push
mov
loopne
jecxz
jmp
lock
lret
xlat
fcomps
xor
in
sbb
or
lea
repz
add
lods
sbb
mov
bound
test
xchg
mov
xchg
fcom
popa
add
ja
inc
cmp
add
pushf
ja
insb
mov
ret
inc
hlt
push
popf
xchg
addr16
pop
push
sbb
cmp
icebp
jle
cs
mov
aad
dec
daa
jmp
jb
pop
lds
and
sbb
push
push
mov
pop
arpl
push
cmpsl
popf
adc
imul
imul
or
mov
in
or
xchg
adc
mov
xor
jnp
dec
out
sub
mov
dec
ds
sub
jle
dec
lret
mov
xor
daa
subl
jmp
cs
xchg
xchg
add
cltd
sub
out
gs
cwtl
arpl
mov
jl
cwtl
sbb
inc
cmp
mov
or
test
pushf
aaa
stc
popa
mov
das
shll
addl
ret
mov
ret
divb
sbb
inc
popa
psubusw
imul
xchg
inc
out
movsb
cmp
mov
inc
mov
lea
mov
pop
popa
sti
jge
daa
pop
mov
cvtpi2ps
outsb
inc
loop
jp
sub
jg
daa
scas
lahf
cmpsl
inc
fsubr
leave
lahf
cmp
pop
xchg
in
inc
and
xor
pop
in
imul
dec
or
scas
inc
push
mov
jmp
or
stos
jo
sbb
sbb
jle
mov
loope
fildll
inc
mov
push
aam
inc
mov
leave
int
jmp
push
mov
pop
or
mov
cmp
dec
cmpl
mov
in
adc
icebp
and
sbb
aaa
into
out
aaa
lods
inc
sub
and
sti
dec
xor
aam
popf
dec
loope
mov
fcoml
push
shl
or
add
dec
and
mov
or
xchg
pop
or
xchg
pushf
aam
clc
in
and
fwait
or
adc
call
aas
dec
xor
das
ficompl
mov
mov
mov
rcll
imul
mov
icebp
xor
in
mov
and
idivb
test
pushf
ret
jo
sub
mov
jno
or
addps
xchg
ja
daa
add
xor
xor
mov
or
push
mov
dec
lea
cmc
testb
gs
cmp
jp
enter
xchg
adc
lret
cmp
add
into
sti
mov
divl
jmp
and
mov
mov
mull
mov
fisttpll
and
pushf
mov
aam
stos
pop
or
cs
testl
daa
lds
jg
pop
jne
leave
movsl
sbbb
xor
movsl
fildl
xchg
out
dec
in
fildll
dec
sti
add
mov
fwait
add
inc
cmpsl
fwait
mov
jnp
hlt
fmul
in
cmp
mov
cmp
adc
stos
push
iret
push
dec
js
xchg
add
rcrl
mov
int
int
push
xchg
fldt
enter
mov
sbb
sub
jge
pushl
pop
dec
lcall
xor
mov
imul
adc
lock
dec
int3
lret
push
mov
push
cmp
repz
repnz
lret
dec
xchg
push
jns
lahf
jle
mov
push
cmp
jecxz
adc
arpl
fisubs
enter
sub
sub
push
mov
xor
dec
push
jns
xchg
fstpl
and
push
dec
loop
pop
push
int
xlat
cmc
mov
jnp
test
stc
lods
mov
fldt
add
call
xor
dec
mov
lahf
sahf
cmp
adc
es
and
pop
scas
rol
popa
shrb
inc
sbb
repnz
ret
movsl
cmp
push
sbb
inc
jl
ds
push
inc
mov
xor
andl
mov
jno
and
jo
in
movsl
cwtl
sbb
inc
ret
in
popa
arpl
call
insb
insl
ficoml
imul
mov
imul
sbb
xorl
sbb
and
adc
dec
pop
sbb
jae
xchg
in
setp
fisubrs
in
or
int3
xor
nop
ja
and
mov
mov
push
int3
sbb
and
enter
mov
ss
scas
scas
cmp
sub
add
push
pop
ds
adc
movsl
cmp
dec
sub
or
cld
pop
cs
sub
sub
add
jo
adc
xor
pop
sub
mov
ret
jae
mov
leave
mov
repnz
test
push
ss
fnstenv
aas
jne
pop
or
jmp
clc
xorl
aad
fadd
aas
and
mov
std
cld
xchg
add
jge
rep
cmp
pop
int
sbb
jae
xor
inc
sbb
jnp
and
fnstenv
inc
pop
aam
jp
jbe
orl
xor
sti
popf
mov
bound
test
aad
push
dec
adc
lock
inc
sub
pop
roll
ror
mov
sub
faddp
ja
adc
decl
dec
push
and
fs
scas
fdivrs
outsb
fidivl
mov
out
ficomps
into
and
nop
pop
in
cltd
fwait
or
adc
push
les
jns
rcll
insb
push
mov
mov
pop
aam
add
dec
adc
imul
cwtl
ss
lods
xor
push
mov
sub
and
push
ret
and
cmp
and
add
xor
cmpsb
ljmp
lock
ss
ja
xor
stos
push
sahf
mov
shrb
arpl
push
mov
inc
push
mov
in
push
pusha
xor
sarl
and
daa
cld
xchg
sbbl
push
inc
push
xchg
cmpsb
in
pusha
inc
movsb
mov
jno
sahf
shrb
mov
fadd
and
lods
pop
sbb
mov
aas
xor
mov
pmaxub
mull
movsl
jae
dec
subps
scas
sbb
sub
push
jle
fsubrp
push
push
int
xor
ss
mov
mov
test
and
notl
es
jp
jge
cmp
push
insb
addb
cmpsl
insb
inc
fwait
add
inc
ss
cs
cmpsl
cltd
xacquire
lock
shrb
and
adc
mov
mov
insb
test
arpl
adc
xor
cmpb
sbb
outsl
jne
popa
orl
cmpsb
jb
mull
je
dec
pop
insb
add
add
push
fcompl
fisttpl
cmpsb
mov
pop
push
push
fwait
cltd
dec
jg
push
stc
add
pop
mov
lahf
mov
pop
jge
sub
or
mov
bound
fsubrl
sbb
cmp
jg
sbb
int3
movsl
pop
daa
push
divb
fbld
mov
insl
mov
mov
hlt
pusha
ss
xchg
mov
lods
push
sub
fiaddl
popf
lret
mov
js,pn
or
sbb
or
negl
add
pusha
sti
es
in
inc
loope
jne
or
nop
or
leave
push
imul
lods
jne
stos
adc
das
cmpsl
and
adc
xor
jb
sarl
shll
dec
jae
mov
xchg
fidivs
call
cmpsb
jns
jmp
push
out
aaa
mov
out
cs
inc
andl
xchg
push
add
sub
fldenv
adc
mov
jecxz
iret
or
bound
out
mov
les
fxch
sub
ficoml
nop
adc
lods
mov
jns
sub
lret
int
mov
add
pop
outsl
inc
in
jl
xchg
and
stos
out
cmp
repnz
hlt
sahf
push
shll
mov
sti
dec
in
in
js
xor
cld
stos
jecxz
stos
adcb
gs
add
sbb
in
push
repnz
inc
mov
divl
cmp
mov
in
loopne
jnp
cmp
cmpsl
leave
and
in
adc
lods
push
pop
flds
sub
pop
xchg
and
daa
je
pop
inc
add
test
add
jp
das
jge
sub
movsb
test
test
mov
jl
jge
sub
and
fistpl
loop
outsl
jg
push
add
mov
ret
adc
shl
push
movsb
jb
lahf
push
inc
jge
clc
aaa
pop
push
repz
mov
in
imull
xchg
push
imul
pop
xor
push
addb
mov
daa
scas
jno
jnp
add
cmpsb
stos
xchg
fwait
int3
lds
mov
jg
pop
pop
test
or
aad
or
ret
mov
dec
mov
push
jge
sub
popa
cmpsb
in
pop
addr16
sub
icebp
and
dec
addr16
mov
outsb
jb
jns
rcll
xor
add
jl
push
xchg
fs
jnp
xor
jle
inc
in
pop
mov
imul
add
or
dec
push
es
push
int3
popf
lods
stos
lea
pop
adc
jecxz
lods
mov
rclb
scas
dec
xchg
ret
xchg
xor
imul
sbb
cmp
lods
mov
fsubl
and
ficompl
call
lds
adc
lds
nop
cmp
sti
jge
inc
mov
fsubl
incb
adc
xor
cmpsl
popl
inc
int
cmp
mov
aam
repz
mov
pop
ja
je
cmc
nop
jg
scas
test
inc
movsl
or
xchg
cmpl
pop
mov
int3
sarb
or
insl
out
stos
xor
loopne
ret
out
in
dec
les
rorb
sub
arpl
mov
divl
mov
cmp
out
int3
cs
divb
imull
daa
mov
rep
xor
sub
sbb
shl
pop
ss
rcll
mov
sub
sbb
bnd
into
out
inc
inc
ds
outsl
lods
pop
test
ret
inc
ds
xor
lahf
and
cmp
sbb
test
or
popf
mov
mov
xchg
push
sbbb
movsb
pop
add
sub
or
xor
in
cmp
sbb
lea
push
jg
mov
xor
scas
stos
sub
or
ljmp
je
push
out
mov
pop
jge
and
jle
movsl
fistps
int3
cmc
ret
fstl
mov
repnz
jbe
and
and
fildl
cld
test
xorb
pusha
std
outsb
mov
scas
adc
push
inc
iret
jae
jbe
cmp
lods
adc
and
mov
lahf
sbb
mov
hlt
test
jle
cmp
scas
inc
es
hlt
scas
jecxz
sbb
out
push
fisubrl
mov
inc
cltd
sub
mov
dec
push
rclb
cwtl
mov
push
inc
or
xchg
pop
mov
jge
es
sbb
call
iret
and
roll
xchg
lcall
inc
iret
ljmp
xlat
scas
jo
inc
mov
pop
lds
inc
mov
adc
sahf
movsl
mov
mov
fwait
sub
fdivl
lcall
jecxz
xor
pop
pop
sbb
pop
popa
mov
dec
adc
push
pop
jb
mov
push
push
push
pusha
pop
pop
xor
push
stos
pop
aad
sarl
mov
adc
lods
inc
shr
cmp
out
mov
lret
sbb
fstpl
imul
cmp
adc
fldt
cmp
cli
inc
idiv
iret
int3
push
scas
insb
dec
inc
mov
cmp
pop
roll
insb
jbe
aaa
sub
outsl
stc
ss
or
adc
add
fimull
push
pusha
cmp
shll
lret
push
daa
cmc
sub
call
jle
inc
sti
jb
cld
test
xor
push
fwait
dec
enter
cmp
xor
and
inc
sahf
fisubrs
loope
mov
scas
jp
testb
jnp
cmp
sub
popl
push
negl
jno
dec
inc
xchg
xor
es
aam
faddl
ljmp
roll
xchg
dec
out
adc
stos
mov
out
popa
popf
jp
xchg
lods
popa
fstpl
sbb
sbb
jle
movsb
lods
mov
mov
cli
movsl
dec
aaa
mov
imul
adc
fcomi
cmpb
dec
jle
jp
lods
lret
inc
jle
ja
int
adc
ret
jmp
loopne
icebp
sub
bound
stc
mov
pop
fwait
aas
mov
adcl
adc
mov
popa
shrl
dec
je
mov
std
sarb
inc
xchg
adc
or
mov
arpl
adc
in
dec
pop
fisttpl
push
out
sbb
test
clc
jbe
jle
mov
xchg
or
xchg
cli
pmulhw
jno
incl
xchg
in
sbb
add
sbb
lea
cmpl
ljmp
sbb
push
xor
adc
incl
jns
jae
out
jmp
in
inc
push
mov
addr16
not
int
fdiv
pop
test
call
lods
dec
or
sub
sub
outsb
jle
in
lods
fstps
jb
mov
leave
or
pop
ds
and
stc
push
bound
sarb
inc
imul
int
aas
dec
stos
repnz
repnz
hlt
lods
sti
adc
pop
jae
popa
cmp
dec
shll
push
jecxz
shll
xchg
loop
aaa
push
movsl
add
iret
inc
push
jle
push
stc
ret
jmp
sarb
or
mulb
jbe
jl
fimuls
sub
add
xchg
mov
mov
mov
je
call
fs
stos
dec
cmp
daa
mov
ret
rclb
push
jmp
xor
cli
mov
ljmp
pop
lds
xor
in
and
pop
jne
es
mov
jno
lea
cmp
xchg
mov
sub
in
or
sbb
push
jno
sub
add
insb
or
sbb
or
mov
mov
inc
mov
jmp
je
lahf
push
push
cmp
xchg
es
cmp
xchg
cs
movsl
and
xchg
add
dec
ficoml
lcall
call
fistps
xchg
cwtl
fistpll
outsl
add
xchg
xor
dec
bound
jmp
jle
stos
add
frstor
les
jnp
jbe
scas
in
xchg
addr16
je
dec
lds
sarb
lcall
mov
mov
fimull
fwait
cmp
lock
and
sub
test
xchg
jae
mov
ret
sub
fistps
jno
jae
push
frstor
jmp
test
mov
sub
mov
add
mov
sar
test
repz
dec
notb
xlat
cmp
sbb
add
mov
push
mov
push
scas
mov
inc
movsl
pop
mov
mov
xor
scas
out
cmpsb
repz
adc
cli
shl
push
push
jb
jo
inc
dec
pushf
leave
push
sub
push
dec
push
cmp
xlat
pop
push
int3
sub
ja
push
pop
xchg
mov
pop
mov
or
dec
lcall
jb
xlat
jmp
jbe
mov
cmp
sub
cld
bound
and
test
xor
jge
outsl
jg
into
fsubl
out
pop
xlat
test
leave
js
ficomps
pop
stos
mov
into
test
add
test
push
into
jno
push
movsl
add
inc
fs
cwtl
jge
cltd
lock
aas
jl
nop
xor
xchg
adc
data16
aam
dec
dec
daa
dec
mov
clc
sub
lock
stc
nop
filds
scas
out
mov
mov
call
xchg
and
gs
jns
push
and
sahf
mov
in
lea
lea
cltd
sarb
xor
loopne
mov
fwait
add
push
cmp
push
rcr
push
in
inc
mov
loop
mov
push
or
mov
jno
inc
xor
ja
and
xor
cltd
outsl
pusha
lods
sub
pushf
shl
cli
jmp
iret
movsl
scas
sbb
and
cwtl
fcmovnu
adc
ljmp
out
mov
push
out
gs
addr16
pop
add
rorb
movsl
imul
inc
pop
add
adc
dec
clc
leave
insb
sbb
fidivrl
scas
mov
pop
stos
pop
rorb
popa
xor
jle
add
pop
jnp
xchg
lea
adc
out
xchg
add
iret
dec
ljmp
ljmp
out
sub
popa
stos
jae
push
mov
mov
sub
mov
test
fwait
add
ss
cltd
inc
lcall
hlt
push
xorl
mov
subb
inc
mov
sub
sbb
iret
jne
shl
fcomps
xor
mov
cmpsb
popf
mov
mov
mov
lret
inc
mov
pop
in
test
mov
das
xchg
sbb
inc
add
mov
xor
scas
add
ja
mov
fs
and
or
jbe
in
fcmovnu
pop
mov
xor
pushf
sbb
lret
pop
xor
aaa
mov
fsubp
push
jecxz
mov
pop
inc
movsb
aas
movsb
sahf
mov
testb
pop
or
push
mov
xor
ret
fisubl
and
aas
inc
iret
std
icebp
outsb
mov
aaa
add
mov
adcb
stos
adc
aam
cmp
xor
icebp
mov
scas
sbb
pusha
lret
movsb
pop
dec
push
and
push
add
push
mov
xor
fsubp
xchg
cltd
lcall
mov
je
mull
jno
sub
ja
popf
inc
test
xorl
mov
pop
adc
loop
push
xchg
xchg
xor
aaa
mov
sub
and
icebp
or
lds
lret
dec
mov
mov
and
cmp
jge
cld
std
loop
add
mov
push
mov
aad
subl
stc
pushf
imul
pusha
je
push
cmpsb
cmp
cmp
hlt
imul
xor
ja
test
jmp
push
imul
ss
lods
aas
lea
aaa
push
setns
adc
mov
mov
ret
mul
push
fwait
enter
xchg
mov
adc
mov
hlt
outsl
mov
jae
inc
mov
in
or
or
or
cmpsl
or
aaa
and
xchg
adc
cmc
dec
scas
mov
jbe
and
repz
or
cmpsl
loope
mov
fbld
mov
pop
mov
ret
and
inc
imul
xchg
sbb
lret
jge
fcomps
adc
hlt
fwait
xchg
js
xchg
or
and
cmp
into
xchg
fcompl
das
push
movsl
add
pop
jb
lods
out
hlt
mov
mulb
shll
aaa
clc
mov
js
jp
outsb
jle
xor
out
stos
sbb
mov
sub
pop
cmp
sub
out
mov
lcall
dec
popa
fimull
loopne
pop
xor
lret
and
sub
sub
inc
aaa
cmpsl
sub
icebp
pop
iret
and
clc
jno
lahf
or
shlb
out
push
psrad
enter
dec
cmp
pop
push
jmp
outsl
pop
add
sti
inc
inc
xchg
hlt
push
scas
xchg
adc
hlt
mov
pop
cmp
push
sub
inc
sub
jmp
iret
mov
lret
pop
pop
xorb
add
lds
jnp
pushf
test
inc
ret
stos
out
push
ret
adc
and
sub
out
lock
xor
mov
loopne
out
push
aam
rcll
cmp
push
cmp
icebp
sbb
cs
xchg
ret
fs
fxsave
ja
mov
lock
push
lods
mov
pushf
mov
js
out
imul
fldcw
in
rol
xchg
dec
jge
bound
shrl
mov
cli
cmpsb
or
or
out
in
fdivs
enter
jae
cmp
inc
lcall
sub
cmc
leave
sub
add
adc
pushf
or
push
mov
je
cmpsb
lahf
jno
adc
repnz
mov
cmp
enter
mov
repz
pop
sbb
in
sahf
mov
xchg
cmc
xchg
or
mov
or
hlt
jecxz
out
cmp
push
shl
jns
arpl
into
into
and
adc
xor
imul
push
mov
shrb
rcrl
xchg
int
out
outsb
flds
adc
stos
mov
aam
fisubrl
testl
or
pusha
fbld
jb
jle
aaa
sub
xchg
movsb
sub
int
lret
adc
jg
dec
ja
sub
pop
pop
int
clc
stos
mov
jne
rcrl
movsb
mov
cmp
add
adc
jne
fldcw
xchg
push
xor
sbb
mov
sar
dec
pusha
mov
jecxz
test
lds
or
repz
iret
push
mov
insb
mov
xor
mov
mov
test
daa
inc
dec
inc
jmp
pop
mov
xchg
jae
ljmp
pop
add
sti
lock
and
push
pop
pop
push
push
sbb
jae
mov
cmp
loop
adc
sbb
push
cmp
sub
test
mov
or
push
lock
push
cltd
fcmovnbe
inc
adc
add
or
fistpl
aaa
pop
push
dec
cmp
imul
mov
xor
inc
imul
xchg
cltd
xorb
loope
push
or
xlat
adc
bound
xchg
pushf
outsl
pop
stos
mov
push
mov
fdivrl
ret
ret
cmp
mov
dec
jns
jnp
inc
push
adc
jno
or
inc
adc
pushaw
in
ret
sbb
jge
push
jle
lock
inc
iret
inc
insl
jl
mov
bound
jnp
xchg
loopw
iret
xchg
xchg
sbb
stc
nop
lret
xchg
cmpb
jbe
scas
cwtl
mov
pop
subps
loopne
test
mov
aas
aaa
sbb
testb
jne
test
adc
ficompl
loope
sbb
cmp
mov
int
lea
xor
loopne
scas
mull
jle
icebp
mov
and
cmp
jae
sar
imul
stc
pop
adc
leave
inc
push
pop
stos
dec
pop
cltd
xchg
jb
cmpsl
mov
pusha
sbb
out
xchg
or
hlt
mov
popa
dec
lods
fdivl
adc
loope
mov
and
loopne
push
xchg
orl
scas
cmp
mov
pop
idivl
jbe
mov
pop
call
mov
inc
insb
dec
jl
xor
xchg
cmp
xchg
xor
das
test
xchg
out
mov
packsswb
in
test
jp,pt
test
icebp
bound
lahf
movsl
jl
mov
dec
adcb
cld
fs
ret
mov
jg
adc
add
leave
push
lods
pop
mov
ret
mov
shr
sbb
in
xchg
fcoml
fucomi
out
fnstenv
std
insl
scas
out
xor
add
dec
test
or
adc
mov
push
loop
lahf
jmp
shrb
cld
push
je
mov
arpl
daa
jnp
enter
ja
mov
aam
bound
or
pop
mov
jo
cmp
loop
mov
cli
nop
stc
popf
push
fiadds
inc
and
pop
xchg
push
int3
ljmp
rorb
in
cli
stos
ficomps
js
lret
pop
dec
iret
in
leave
fmuls
nop
lods
pusha
add
push
jle
mov
jb
mov
or
int
imul
jmp
rcrb
adc
mov
and
dec
push
popa
loope
jnp
add
testb
xor
in
out
daa
cltd
sub
or
inc
dec
fwait
das
push
or
mov
sbb
fdivl
xor
sub
movb
dec
test
mov
aas
jae
gs
insb
push
lea
loope
sbb
mov
lret
push
pop
dec
fldl
sbb
rclb
sbb
out
cmp
enter
xchg
pop
mov
insb
lret
fwait
out
and
adc
and
std
or
add
sub
aam
lahf
cmpsl
jp
mov
cmc
mov
mov
js
push
push
mov
fcoml
cld
pop
mov
sub
xchg
push
ss
orl
sbb
inc
or
lds
int
inc
mov
jmp
std
xor
dec
das
xchg
ss
pop
in
xor
pop
sbb
lods
cmp
dec
and
ljmp
test
scas
push
aam
testb
mov
cwtl
jnp
popf
pop
jmp
xor
outsb
stos
inc
aad
sub
xchg
lds
jle
or
mov
sub
aas
pop
xchg
fnsave
or
notl
xchg
inc
push
das
pop
imul
lcall
mov
sbb
sbb
and
shl
push
jmp
jns
idiv
ret
test
jmp
pushf
popa
push
pop
ror
mov
jno
jne
mov
xchg
xchg
lods
jb
add
xlat
sub
mov
jle
movsl
lods
pop
cmpsl
jecxz
inc
fistpl
sub
pop
fnstcw
and
push
sbb
mov
shll
add
popa
push
loop
cmc
mov
das
icebp
mov
or
jnp
inc
push
out
push
inc
mov
xor
push
jge
xor
dec
imul
pop
inc
cmc
or
loop
dec
xchg
int
aas
sub
jle
sbb
pop
popa
inc
mov
cmpsb
inc
or
dec
mov
cli
in
adc
mov
insl
sub
or
adc
shl
int
dec
sbb
pop
mov
push
inc
push
daa
dec
push
dec
inc
cli
int
sahf
cmpsl
cmp
pop
mov
xchg
jnp
ret
les
pop
push
pop
sub
rcrb
xchg
popf
sarb
shrl
sbb
pusha
gs
lahf
pop
mov
aaa
jecxz
mov
or
and
and
dec
imul
pop
sbb
or
loopne
add
insb
cmc
into
mov
fmull
ficomps
call
jo
and
fs
dec
into
repnz
cmp
popa
xchg
loope
cmpsb
pusha
and
pop
or
imul
pop
sub
pop
dec
mov
imul
lret
dec
int3
xchg
out
arpl
mov
cmp
es
xor
xlat
dec
and
pusha
gs
xor
stos
dec
stos
dec
fildll
and
scas
and
iret
inc
pushf
mov
ljmp
xchg
xor
jge
push
jno
sub
inc
ljmp
push
sub
push
xor
add
bound
nop
xchg
adc
das
les
test
imul
bndmov
hlt
adc
scas
push
sahf
pop
xchg
pop
js
stos
lock
mov
hlt
dec
mov
push
sub
arpl
sub
mov
loope
adc
fwait
mov
ss
sbb
rorl
pop
xor
pop
adc
cli
pop
lcall
mov
rcl
lods
inc
jl
addr16
out
xchg
fsub
push
je
add
and
add
inc
pop
stos
fdiv
sub
add
and
repnz
fwait
shlb
lret
popf
pop
xchg
push
scas
inc
mov
lret
sub
mov
adc
inc
out
sahf
adc
das
pop
mov
sub
sar
mov
adc
inc
addr16
shlb
ja
cmpsb
fisttps
xchg
sbb
loopne
fnstsw
jns
mov
mov
cmp
pop
ja
jg
xor
jle
push
mov
movsl
xchg
and
mov
movsl
sub
pop
mul
stos
push
cs
add
push
pop
cld
lcall
sbb
dec
pop
mov
andl
jae
jl
pop
jo
xchg
xor
scas
lea
push
push
fisubs
sub
add
xor
sub
pushf
into
inc
fs
std
add
popa
lock
mov
mov
jmp
outsl
dec
jl
pop
loope
inc
and
mov
lea
mov
or
leave
pop
mov
scas
xor
cli
loope
pop
add
or
loopne
xchg
sub
lods
rorl
cs
dec
mov
fnsave
inc
sbb
arpl
rclb
outsb
popa
add
adc
xchg
jp
mov
adc
adc
imul
sbb
mov
xchg
jne
mov
and
enter
sbb
xchg
xchg
out
push
in
mov
test
push
push
or
lahf
mov
and
mov
jg
stos
in
or
mov
push
sub
cmp
out
xchg
push
jae
add
sahf
cli
mov
push
repnz
fwait
mov
cmp
jo
jb
fmull
adc
add
mov
repz
push
mov
push
mov
in
lea
sub
mull
dec
push
out
popf
es
push
shlb
rorl
xchg
aaa
sbb
lds
fsubrl
sub
pushf
push
aad
int3
xlat
jmp
cli
pop
arpl
jle
inc
loop
dec
fldt
xchg
cmp
xchg
std
inc
pushf
cmpsb
cmp
lahf
in
or
test
and
mov
or
test
aas
lds
add
and
test
dec
sub
fwait
jmp
add
leave
sbb
mov
or
sub
inc
sub
inc
scas
jns
add
sbb
test
dec
adc
or
sub
outsb
inc
jl
insl
xchg
scas
div
adc
fsubr
mov
cmp
sbb
inc
push
test
call
jne
mov
or
out
add
inc
adc
icebp
clc
scas
lahf
pop
pop
adc
mov
mov
sti
aam
inc
push
jmp
jae
repz
inc
mov
test
imul
sub
pop
out
fs
mov
mov
mov
mov
scas
sbb
lock
mov
into
and
jle
mov
jo
shrl
push
pushf
pushf
bound
stos
jb
fmuls
jl
out
addr16
cltd
sub
pop
cmp
jbe
arpl
mov
fildl
repz
xchg
mov
jno
stos
arpl
xchg
pop
or
orl
lods
push
and
test
sub
clc
inc
and
cltd
nop
call
xor
rcrb
sti
xchg
std
mov
arpl
call
ficompl
push
cmp
adc
inc
jb
sub
xor
mov
pushf
arpl
insb
test
in
lods
xor
outsb
and
and
inc
jae
adc
repz
xchg
xor
cmp
decb
aad
and
jle
pusha
adc
loopne
inc
jae
lea
jns
mov
gs
and
sbb
inc
sahf
cmp
pop
and
mov
fwait
push
das
mov
fs
mov
jle
mov
jns
cmp
lods
and
enter
adc
int3
adc
mov
test
xchg
fpatan
popa
lahf
xor
popf
jb
push
aas
inc
pop
cmp
mov
mov
and
jb
nop
mov
jb
add
add
fmuls
aad
daa
ja
aad
pushf
lcall
aam
xchg
push
pop
xor
popa
and
xlat
sti
cltd
cmp
or
push
cmc
inc
mov
mov
jno
cmp
pusha
sub
push
stos
mov
cmc
lret
in
dec
jle
mov
rolb
lea
and
and
dec
imul
in
cmpsl
mov
jge
lea
shrl
or
add
xchg
xor
icebp
or
pop
add
enter
pop
test
jno
mov
cwtl
xor
lds
sub
je
xchg
fwait
addr16
mov
xor
fcompl
jbe
out
xchg
cmp
jmp
arpl
insl
sbb
iret
sbb
fs
add
pop
cmc
in
xor
adc
push
sbb
shlb
shll
in
fdivrs
push
inc
sahf
les
test
inc
int3
call
dec
and
jbe
outsb
test
int3
ds
out
cmp
das
leave
cmp
outsb
clc
sub
cmpb
aad
sub
mov
pusha
cmp
jmp
lret
inc
mov
popa
mov
sub
cmpb
mov
xchg
sbb
adc
push
sbb
repnz
leave
addr16
repnz
inc
xchg
cmp
dec
aaa
call
shll
movsb
imul
in
inc
ret
or
dec
sarb
mov
in
call
repz
xchg
push
loopne
lret
fs
adc
out
sbb
shlb
push
mov
mov
rorb
jns
fisubs
out
pop
div
mov
sbb
mov
in
pushf
xchg
sbbb
or
or
adc
push
sub
push
lcall
sbb
push
xor
icebp
inc
cmp
ja
lret
pop
push
leave
int
lret
popf
mov
nop
in
push
dec
addb
cmp
mov
sub
outsl
out
nop
mov
dec
push
dec
jl
nop
mov
mov
pop
cmp
cmp
push
fcoms
lea
pop
adc
lods
imul
push
into
jl
dec
push
pop
xor
jne
in
push
inc
jbe
dec
fldl
into
je
push
stc
and
mov
or
inc
jbe
pop
out
lods
jns
jae
iret
call
xchg
movl
or
sbb
xchg
ja
adc
repz
mov
push
sub
sbb
scas
cmp
mov
cmc
xchg
cli
add
sbb
ss
movsl
fistps
jb
call
pop
xchg
movsl
clc
gs
jg
add
sub
outsl
test
mov
mov
dec
mov
cmp
in
int3
jae
cmp
lods
xchg
pop
hlt
xorl
push
xchg
roll
cmpl
and
faddp
stos
xor
sarb
sub
out
cmp
sub
je
mov
into
adc
scas
dec
addl
scas
inc
mov
rorb
jo
stos
push
inc
rcrl
xchg
cmp
dec
jbe
fcoml
test
xchg
cmp
xor
mov
cmp
aam
and
xchg
push
cmpsl
pop
push
sub
pop
out
push
insl
out
adc
lahf
jle
sub
sti
mov
daa
ds
mov
add
jp
lret
roll
mov
jmp
pop
inc
xchg
pusha
jge
sub
pop
or
imul
or
dec
es
pop
popf
pop
ss
pop
les
aam
lods
push
or
inc
jnp
pop
inc
lret
jbe
adc
pop
and
pop
push
out
or
xor
int3
test
mov
imulb
push
rcll
cmpb
xchg
aas
lods
les
xchg
dec
popf
add
and
pop
xchg
movsl
add
push
push
inc
sub
lods
inc
push
sti
sbb
sti
scas
push
rorl
mov
cltd
stos
addb
add
leave
pushf
negl
scas
inc
mov
aas
pusha
push
mov
out
addb
add
sub
sub
lods
clc
sbb
xor
mov
lret
and
push
sbb
push
scas
rorb
jg
mov
ret
mov
push
stos
dec
shl
jns
imul
out
sbb
xor
adc
adc
neg
cwtl
dec
insl
pop
mov
popf
jo
cmp
addr16
in
divl
rcll
movsb
arpl
push
dec
ret
nop
sub
jg
lcall
jbe
xchg
imul
movsl
dec
out
cmp
cs
and
cmp
xor
es
or
xor
cmpsl
loop
jecxz
ficoml
inc
add
xor
mov
sbb
and
int
fcmovb
fists
lods
mov
sbb
pop
aam
cmpsb
incl
add
aaa
repz
jl
jne
in
rcrb
scas
inc
ret
adc
pop
jne
mov
inc
sahf
or
gs
push
jae
in
jne
pop
imul
cmp
loop
mov
inc
stos
sub
psrlq
mov
sbb
or
shl
xchg
and
popf
nop
pop
arpl
stos
mov
dec
pushl
pop
daa
shr
push
stc
or
sub
sub
test
inc
push
jo
adc
pop
add
leave
int
hlt
add
or
gs
cmp
add
dec
cmpb
loopne
outsl
xor
sub
cmp
std
pop
sti
inc
ss
scas
outsb
xchg
xor
ret
in
lret
push
xchg
jmp
pop
jge
add
inc
mov
add
pop
pop
data16
and
daa
movl
in
pop
xchg
sub
sbb
push
add
push
hlt
or
add
in
xor
adc
mov
aad
dec
insb
bsr
jb
mov
mov
dec
sbb
add
neg
mov
mov
ljmp
xlat
mov
push
adc
jns
sarl
insl
popf
xor
lret
fistl
sahf
push
shrl
pop
repnz
vucomiss
inc
std
push
jno
das
jl
xchg
dec
mov
push
testl
push
and
pop
mov
cmpsb
aaa
insb
push
mov
push
nop
fs
jl
adc
fmul
jno
add
sbb
fbld
jmp
sahf
mov
scas
cmc
mov
sbb
shll
pop
test
jge
fcmovbe
outsl
addl
dec
cli
sbb
shl
fsubl
test
lds
imul
lds
mov
and
push
test
jo
ror
test
scas
xor
sbb
mov
and
pop
data16
push
pop
mov
adcb
jmp
pop
fdivrl
dec
ja
rcll
aas
cmpsl
add
shll
mov
ja
subb
leave
and
into
shll
mov
lcall
mov
mov
jae
lcall
out
dec
imul
pop
lods
sbb
mov
test
xlat
inc
movsl
mov
pop
outsb
das
icebp
fs
xchg
mov
xchg
dec
xor
pop
into
xor
imul
mov
enter
sti
jb
adcb
adc
rolb
cmp
insl
xor
pop
push
jg
pop
jp
popa
sub
mov
fildll
stc
aad
push
mov
es
repz
add
cmp
subl
psllw
test
mov
lods
fdiv
sub
push
aas
jo
ja
fdivrp
stos
dec
faddl
xchg
and
sbb
pop
jno
in
sub
out
bound
inc
cwtl
dec
cmp
cmp
inc
dec
test
cmpl
idivb
push
idivl
jns
out
addb
js
push
mov
mov
insb
mov
rcrb
xor
pop
xor
es
mov
add
push
xlat
lock
iret
ljmp
mov
jecxz
xchg
jo
and
mov
mov
sbb
stos
test
jbe
dec
test
fldl
fnstsw
mov
sbb
repnz
lock
clc
aad
dec
cmp
mov
sahf
jmp
xchg
pop
dec
mov
fbld
mov
cld
rolb
mov
push
xchg
xchg
cmp
push
jecxz
sbb
lods
das
jg
aas
movsb
jle
adc
in
pop
int
insl
xchg
rorb
pushf
sbb
jo
sub
cmpsb
xrelease
jmp
fwait
xchg
movsl
dec
mov
push
inc
pop
outsb
mov
sbb
or
shrb
data16
or
lea
add
push
leave
mov
mov
insb
jmp
cmp
hlt
jnp
inc
sahf
xor
xchg
push
mov
add
icebp
ret
jnp
insl
mov
or
dec
stc
std
mov
repnz
xor
and
push
pushf
mov
leave
int3
ljmp
jg
mov
xchg
sub
out
cmp
negb
sbb
daa
lds
or
push
and
dec
dec
sbb
outsb
add
mov
mov
cli
dec
mov
dec
add
fsubrp
jno
xchg
mov
cmc
loope
hlt
cmp
and
sti
jb
fidivrl
lods
mov
push
inc
and
fmuls
dec
out
push
out
mov
mov
out
sub
inc
xor
and
xor
ficomps
nop
insb
jmp
sahf
mov
sub
xchg
dec
cmpsl
dec
jbe
pop
mov
xor
fucom
xchg
aad
push
push
mov
and
xor
dec
mov
pop
jo
inc
fldt
mov
sub
hlt
orl
sti
xchg
or
divl
jns
pop
push
pop
mulb
cltd
mov
cmp
std
dec
inc
shrl
xchg
or
jp
lahf
mov
repz
mov
outsl
mov
repnz
sbbb
into
pusha
mov
dec
out
xchg
lcall
stos
aaa
sahf
dec
movl
out
test
push
test
cmpsl
nop
jno
scas
ret
mov
test
add
mov
jle
cli
mov
mov
jno
xor
in
dec
cmp
mov
stc
jno
sub
xor
cld
pop
mov
sbb
dec
sub
das
negb
outsl
sub
push
xchg
jne
push
gs
scas
lds
aad
out
jnp
roll
gs
mov
mov
jg
and
mov
outsl
shlb
icebp
push
aam
pop
test
mov
inc
aam
imul
inc
xor
leave
and
mov
mov
mov
pop
xchg
mov
dec
sbbl
mov
mov
adc
mov
xchg
fwait
lret
out
xchg
js
mov
pusha
mov
or
test
adc
and
ret
pop
inc
adc
xlat
mov
push
mov
adc
add
and
jae
or
test
mov
jmp
dec
int
mov
ret
push
sub
dec
fistl
leave
pusha
inc
js
sbb
cli
mov
fs
mov
dec
fst
mov
inc
hlt
xchg
aaa
pop
sahf
shl
inc
dec
cmp
sbbl
mov
jg
or
addb
add
and
repnz
mov
ss
scas
jl
pusha
je
inc
or
insb
pushf
leave
nop
or
rol
andl
movaps
add
inc
xor
pop
mov
hlt
mov
in
fsubl
sub
jge
ret
daa
lret
lret
loop
lret
mov
dec
in
daa
leave
into
sbb
push
and
aaa
add
push
adc
sbb
jge
shl
arpl
add
push
inc
and
add
fisubrl
cmp
out
sahf
pop
hlt
xor
cmp
out
dec
push
decb
mov
test
or
mov
imul
adc
push
xor
mov
dec
icebp
xlat
dec
adc
lret
aas
mov
jns
fs
insb
repz
scas
push
sahf
bound
rcrl
jbe
inc
call
testl
out
mov
pop
jb
jno
in
xchg
add
jle
int
add
jo
rcrl
lods
xchg
or
lcall
adcb
aam
mov
pop
lds
jbe
lcallw
cmp
pop
dec
dec
out
fs
jb
test
arpl
cmpl
cwtl
inc
nop
cmp
sub
fwait
mov
sub
out
xchg
jno
add
or
jl
xchg
out
inc
je
and
xor
lods
jecxz
cmpsl
and
scas
scas
jecxz
sub
movb
or
test
xor
cmp
jg
xchg
xchg
call
cmpsl
addr16
fisubrs
add
jg
shll
repnz
je
ret
sub
das
ja
and
in
jbe
repz
jno
cwtl
mov
popa
xchg
pop
sub
loop
sbb
loop
or
ja
xchg
clc
and
or
inc
xor
xor
cli
cmp
rolb
pop
jl
adc
adc
jne
push
xlat
into
adc
aam
jle
push
inc
mov
adc
pushf
mov
inc
into
pop
stc
inc
lret
shrl
mov
cmp
scas
pop
or
adc
jae
mov
and
ss
rorb
icebp
pop
inc
dec
push
mov
mov
mov
pop
loop
ret
xchg
jge
xor
cli
cmp
popf
cld
or
cwtl
mov
movsb
out
faddp
pusha
cmp
leave
aad
inc
mov
xchg
add
sbb
cli
flds
lock
inc
mov
inc
in
cmp
scas
inc
shl
dec
mov
lret
or
cmpb
mov
enter
mov
lock
jo
testl
xchg
mov
int
pop
mov
ret
cld
push
popf
out
into
jmp
jo
sahf
mov
sbb
mov
mov
adc
mov
xor
sbb
mov
bound
push
jge
rorb
arpl
inc
hlt
addr16
andb
cltd
lret
dec
lods
xchg
xchg
mov
roll
mov
js
jne
mov
pop
fcmovnb
mov
sub
ffree
mov
test
les
iret
popf
pop
pop
shlb
mov
xchg
cmp
insl
and
xor
and
fistl
lods
cli
push
leave
iret
inc
lds
mov
inc
mov
mov
out
sbb
fmull
es
and
mov
inc
add
or
mov
inc
or
mov
loop
mov
aam
or
mov
xor
jns
mov
addr16
cmpsb
shlb
mov
bound
jl
xchg
and
leave
lock
xlat
pushf
adc
adc
adc
lcall
mov
mov
mov
fcmove
ret
aas
test
int
loope
cmp
sbb
pusha
ljmp
add
jb
sbb
xchg
lcall
add
pop
test
les
imulb
in
adc
sub
cmp
jge
adc
jg
lods
daa
insl
jg
daa
cmp
cmp
stos
lret
mov
sbb
fadd
or
arpl
add
or
add
xchg
mov
add
repz
repz
ficoml
loopne
mov
nop
mov
data16
fidivrs
repz
cmp
sahf
and
inc
cmp
psubb
xlat
das
dec
or
sbb
sbb
jmp
mov
imul
adc
inc
movsl
jo
mov
stc
or
js
xchg
test
pop
cmp
and
mov
add
stc
in
outsl
push
cltd
mov
mov
mov
xchg
test
add
inc
mov
xor
push
xor
fstpt
test
jmp
or
adc
lcall
jne
adc
and
outsb
sub
int
stos
jge
pop
cmp
dec
xor
jg
movsl
inc
mov
dec
xchg
push
mov
xor
mov
xor
ja
popf
or
cli
in
jecxz
sub
push
push
jb
fsubr
inc
pop
and
jae
hlt
test
push
sahf
mov
dec
outsl
fnstcw
jl
pop
data16
xor
xor
sbb
mov
aaa
shr
inc
xchg
cmp
loop
mov
movsb
mov
es
or
call
jge
shr
adc
xor
inc
test
hlt
jbe
inc
sub
ja
call
adc
pushf
adc
test
mov
push
xor
or
cmp
fcom
xchg
adc
push
iret
les
test
dec
and
ret
jmp
push
test
inc
pusha
imul
rcr
mov
mov
mov
add
fdivrs
dec
inc
or
out
aam
fadd
push
out
stc
mov
repnz
inc
mov
jecxz
rcrl
outsb
sahf
bound
cmovnp
xchg
or
ja
xchg
and
out
incl
test
pushf
lods
jle
inc
idivb
sbb
mov
repnz
dec
sarl
loope
mov
or
sub
cmpb
and
adc
cmp
sbb
pusha
sub
rcr
push
or
mov
push
pop
or
sbb
ja
push
jle
dec
adc
outsb
mov
mov
lahf
sub
jb
hlt
fs
cwtl
bound
push
cmp
pop
ja
jo
jp
out
addb
inc
mov
stos
mov
pop
pop
into
or
push
negb
push
inc
mov
lret
icebp
dec
dec
add
testb
mov
insb
adc
addb
rcrl
pop
jl
pop
xchg
ret
add
sbb
in
stos
adc
out
sahf
or
pushf
xchg
jl
pusha
adc
fwait
test
lea
std
sarl
mov
pop
xchg
jg
pop
adc
xlat
dec
popa
fsubrs
sbb
jmp
dec
sbb
aad
mov
inc
jle
xor
jle
dec
lock
rorl
mov
or
and
xor
push
pop
addr16
jmp
push
mov
lret
nop
mov
sbb
pop
out
xchg
adc
push
mov
mov
push
shl
shll
mov
adc
ljmp
ss
inc
subb
in
or
iret
aas
pop
iret
cld
movsb
sarb
iret
mov
inc
and
mov
adc
jmp
sbb
adc
push
loop
cmc
jl
fsubr
xor
adc
xchg
and
push
insb
lahf
inc
rcl
and
mov
sbbb
jl
dec
fstpl
mov
cmpsl
pop
inc
in
subb
dec
icebp
cs
adc
lock
add
nop
test
not
mov
out
cmp
cli
jmp
loop
pop
insl
xor
lea
xor
adc
pop
cwtl
and
add
push
adc
dec
jno
mov
fndisi(8087
testl
lret
cli
shl
out
lcall
daa
pop
mov
sub
xor
pop
rcl
and
dec
mov
jmp
popf
jge
aad
sub
mov
add
cs
call
jno
sbb
push
dec
dec
and
push
add
adc
mov
mov
jecxz
fdiv
pop
popa
lret
cmp
notl
outsl
jo
daa
and
call
loopne
cmp
xor
scas
pusha
fdivr
fidivrl
mov
popf
sbb
fildl
jne
aaa
and
jo
sub
or
pop
sub
addl
rcl
jbe
mov
sbb
add
nop
outsb
in
popa
shlb
inc
and
mov
cmpsb
and
push
stc
push
sub
addr16
clc
xchg
jp
andb
pop
inc
dec
cld
jns
push
sbb
lods
push
int3
jle
ds
and
popf
pop
ror
test
inc
loopne
pusha
sub
xchg
fcmovb
xor
lods
scas
pop
pop
pop
les
fistpll
lock
lret
stos
repnz
scas
imul
bound
cmp
or
lods
fs
add
insb
call
sub
xor
jo
xor
pop
pop
sub
cmp
pop
inc
insl
sbbl
dec
imul
mov
int
push
aas
push
aaa
jbe
jp
icebp
sub
dec
clc
inc
adc
ss
and
jle
adc
add
xor
push
ret
repz
sub
dec
imul
imul
sbb
mov
push
pop
orl
pop
mov
pop
repnz
insl
iret
subb
xchg
lock
test
mov
mov
pop
adc
outsb
mov
rcrb
sub
imul
shll
daa
data16
pop
sbb
sbb
sbb
cmp
imul
aad
cld
pop
inc
or
into
dec
inc
mov
push
push
faddl
mov
mov
iret
call
cld
push
sbb
aam
iret
add
mov
xchg
mov
les
sahf
sbb
leave
push
jl
push
cld
cwtl
scas
stc
adc
xlat
test
in
pop
ds
push
inc
into
mov
fistpll
stos
out
push
jp
jmp
pop
mov
xchg
pusha
sub
lods
inc
movsl
mov
add
mov
ds
adc
mov
jmp
lahf
jo
clc
fwait
iret
mov
push
mov
loopne
movsb
mov
adc
fwait
cs
fsts
fs
jnp
xchg
cmp
pop
sbb
lcall
fsub
out
xorb
add
fcmovb
pop
inc
mov
push
xchg
or
aam
mov
popf
pusha
push
stc
int
adc
repz
inc
sub
jno
cmpsl
sbb
in
jl
testl
les
sub
lret
add
hlt
or
sub
sbb
ja
xchg
or
dec
lock
aas
jo
fldt
fists
push
addr16
jno
popa
adc
clc
adcb
adc
jne
movb
stc
es
mov
pop
inc
insl
push
sbb
add
stos
insb
inc
pop
lahf
jp
dec
movb
pop
pop
in
cmp
jl
dec
leave
popf
and
fs
scas
mov
movsl
cld
shll
sbb
add
insl
sbb
dec
in
stc
icebp
enter
out
xor
call
xor
pop
mov
out
jl
insl
movl
pop
es
xor
inc
lret
call
cmpl
jp
js
mov
push
imulb
fiaddl
loopne
add
test
push
fdivr
adc
mov
push
pop
fistpl
add
pop
adc
fcoml
lds
push
jbe
mov
cmpsb
scas
out
mov
lea
sbb
adc
mov
je
ja
pop
je
dec
in
rcrb
pop
inc
int
movsl
push
adc
les
pop
shrb
mov
mov
mov
rorb
loop
push
xchg
out
adc
std
xlat
roll
dec
sbb
addl
push
test
lock
lds
lahf
xchg
dec
shll
iret
in
mov
mov
jge
cld
mov
dec
loope
jbe
add
ret
aaa
mov
xor
cmpb
or
stc
sbb
dec
mov
movsl
mov
sub
stc
in
add
jb
mov
add
jle
out
lcall
insl
xor
movsb
stc
iret
repz
popf
xchg
hlt
ljmp
jns
mov
sub
ret
ret
pusha
push
mov
jmp
fmuls
pop
outsl
cld
jb
in
fadd
mov
lds
bound
jo
stc
shr
push
adc
das
dec
lds
push
inc
add
cld
jne
mov
xchg
aaa
jle
cmpsb
sarl
imul
in
and
orb
mov
sbb
cld
andl
push
mov
data16
cmp
pop
xorl
test
lret
add
and
adc
test
or
fs
jge
jbe
lahf
xchg
test
xor
fdivrs
adc
sbb
es
lcall
imul
sub
mov
mov
dec
les
inc
sub
and
pop
mov
inc
cld
adc
mull
jno
sti
fdivrp
lahf
insb
lock
mov
xchg
std
push
stc
movl
adc
jne,pt
daa
shl
call
pop
mov
jbe
and
jp
cli
or
bound
cltd
fstl
push
jb
mov
and
fwait
sub
add
jno
push
xchg
xchg
pushf
outsb
jae
xchg
xor
sub
shlb
xorb
xchg
aam
jmp
stos
dec
and
adc
jp
sbb
mov
fiaddl
xchg
and
aas
jp
loope
inc
push
push
xchg
hlt
lock
xchg
xlat
aas
popa
andl
ds
ret
xor
push
sbb
imul
addr16
lcall
lock
cs
jo,pn
jo
test
pop
sub
jo
mov
xchg
or
pop
pop
fldt
pop
pop
xor
inc
mov
rorl
pop
push
mov
pop
clc
jl
test
cmp
jns
aam
aas
fucomip
add
mov
jecxz
mov
ja
mov
sub
mov
loopne
mov
out
scas
add
les
aam
pushf
pop
and
scas
lret
pusha
jae
lahf
dec
cli
xchg
cs
mov
xchg
call
mov
sub
mov
mov
adc
pop
insl
lock
mov
filds
cmpsl
pop
push
daa
or
mov
pop
sbb
cmp
insb
sub
push
and
pushf
and
or
xchg
lahf
std
in
shl
cmpsb
push
inc
push
push
or
daa
in
fisubl
pop
aad
cwtl
pop
jbe
int
cld
insb
mov
add
outsb
in
fcoml
push
mov
push
je
daa
sbb
fdivrs
test
aaa
int3
inc
imul
ret
push
cmp
inc
in
stos
test
aam
mov
sub
lret
das
dec
mov
popf
xchg
mov
inc
jmp
cmp
pop
test
rclb
nop
lcall
mov
sbb
rorb
call
lods
inc
mov
cli
xchg
call
pop
popf
adc
leave
enter
ss
fwait
xor
into
sbb
dec
in
ror
push
dec
cmp
or
sbb
adc
mov
lret
shll
add
lret
hlt
push
and
mov
sub
xor
cmc
mov
mov
mov
outsl
xor
into
lcall
and
or
notb
mov
mov
test
ret
or
jo
sbb
push
int
lret
sbb
testl
inc
cmp
jg
les
loop
sbb
jmp
and
stos
cmpsl
and
and
sub
cmp
cmpsl
add
imul
push
cmp
fwait
ja
sahf
mov
cmp
or
pop
test
insl
mov
xlat
loopne
or
in
push
bound
xchg
xor
dec
sbb
leave
rcrl
pop
mov
jge
or
in
mov
pop
jle
dec
xchg
daa
imul
push
push
fbld
and
sub
into
jae
or
adc
mov
jne
push
iret
jne
flds
sbb
dec
ror
pop
inc
cld
and
pop
pop
jecxz
cltd
or
lret
add
out
pusha
shll
mov
fdivs
sub
cmp
test
mov
lds
push
pushf
add
dec
es
dec
jg
sti
and
data16
addr16
in
jo
push
dec
les
xor
sbb
push
xor
mov
mov
jp
mov
and
mov
or
testb
mov
in
sti
or
sbb
roll
or
ret
sub
xor
js
mov
inc
ljmp
jecxz
mov
and
cld
push
imulb
mov
mov
mov
add
and
jge
fs
ljmp
mov
add
fs
pop
inc
mov
mov
aas
iret
jmp
rcl
ret
movsl
xor
adc
mov
fucomi
xor
push
daa
sbb
loop
loop
hlt
notb
fwait
je
jns
movswl
inc
inc
stos
out
sbb
std
sub
les
mov
sbb
xchg
imul
sbb
cmp
mov
dec
arpl
cmp
adc
fsin
jne
mov
adc
xor
cwtl
movsb
fwait
gs
push
cltd
orl
add
xor
lods
adc
inc
add
daa
or
xor
in
lahf
adc
and
xlat
cmpb
dec
pushf
adc
dec
dec
lret
repz
out
push
jp
mov
push
aam
add
rcl
cmp
dec
push
and
and
dec
cld
inc
incl
mov
daa
test
out
sbb
into
mov
fistps
inc
js
insl
jb
fldcw
rcrl
addr16
dec
popf
lret
pop
push
out
mov
push
dec
andb
add
scas
sbbb
dec
mov
ljmp
sub
jl
sub
add
jbe
test
adc
mov
inc
stos
xchg
stos
mov
scas
arpl
dec
mov
lods
jo
cmp
data16
sub
jne
xor
cltd
stos
inc
movsl
xchg
dec
bound
addr16
inc
sbb
fwait
jae
mov
imul
test
out
enter
push
inc
xchg
sub
fldt
cli
outsl
cwtl
inc
push
push
inc
stc
or
int
dec
xchg
xchg
enter
outsl
clc
xor
fnstenv
push
sti
sahf
dec
lods
xchg
daa
or
mov
add
mov
rcll
insl
out
sbb
mov
push
xlat
je
pusha
sub
in
test
data16
lea
ss
pop
shlb
sub
push
arpl
xchg
cmc
or
mov
fwait
dec
mov
inc
ret
and
mov
xchg
ret
je
aam
fwait
lahf
sub
outsl
sti
movsl
sbb
push
sub
cmp
xchg
flds
cmc
and
repnz
push
sub
loope
add
popa
pop
pop
sub
or
add
mov
dec
mov
jle
jae
repz
fmuls
push
les
ffree
inc
lret
or
outsl
xlat
cmp
jae
cs
xbegin
lahf
cs
ret
mov
int
inc
and
mov
scas
sbb
lcall
xor
hlt
sub
jge
hlt
xchg
movsb
inc
add
imul
pop
mov
mov
pop
adc
push
mov
pusha
xchg
outsl
in
pusha
jmp
cltd
filds
je
jno
inc
sub
add
aam
mov
cmp
xor
jb
sbb
shll
or
push
je
lods
xchg
push
mov
test
push
jb,pn
mov
or
scas
mov
fcoms
push
aad
sti
stos
out
cmp
xchg
xor
jmp
out
mov
or
inc
and
push
mov
inc
clc
or
lret
pop
int3
cli
jge
xchg
inc
mov
mov
scas
jbe
stc
rolb
mov
loopne
dec
cmpsl
inc
or
in
lret
sbb
in
jecxz
in
mov
sub
movsb
int
mov
int3
cmpb
jnp
ret
out
lea
insl
inc
xchg
adc
and
addb
xlat
jo
cmpsb
f2xm1
subb
lock
dec
in
cs
nop
test
stos
mov
imul
test
hlt
movb
adc
push
inc
shl
pop
es
je
jbe
jo
pop
mov
dec
jp
cmpsb
je
ret
arpl
xorl
xlat
and
lahf
mov
pop
push
and
xor
int
int
aas
dec
pop
and
push
lds
mov
imul
or
test
mov
jecxz
das
push
fldcw
mov
mov
pop
out
push
shrb
jp
cs
adcb
pop
ljmp
aaa
cmp
cmc
or
cmpsl
into
fadds
mov
dec
pop
adc
fiaddl
int3
filds
shll
pop
push
je
fadds
or
sbb
jno
mov
push
outsl
cld
mov
inc
pop
nop
nop
inc
ljmp
iret
dec
inc
loope
dec
lock
inc
insl
mov
aam
xchg
stos
sbb
adc
add
xlat
cli
in
adcb
addr16
mov
push
loope
imul
pusha
xchg
mov
push
popf
pop
jg
jb
insb
sbb
jo
jne
mov
push
sti
shrb
cmc
stos
mov
sub
negl
sub
dec
or
sub
sub
insb
out
sti
std
les
ret
sbb
mov
xlat
or
cmp
jg
xor
add
fs
jmp
inc
inc
push
notl
mov
adc
repz
fcmovu
jl
mov
lret
notb
rorl
jl
imulb
lods
clc
mov
sbb
sbb
lea
mov
or
shl
ljmp
lret
jo
sub
or
pop
fwait
mov
inc
jle
adc
loop
dec
insb
pop
sbb
ljmp
push
lret
loop
jle
inc
cmc
mov
xchg
fildl
sbb
roll
jns
xor
push
push
pop
sub
cmp
inc
cmc
hlt
xchg
aad
push
pop
sbb
das
xchg
inc
jp
ljmp
jmp
xor
les
jg
test
and
or
jp
fwait
gs
insl
stc
int
in
adc
loopne
xchg
mov
push
insl
cwtl
negb
adc
stos
psrlq
xchg
inc
dec
insb
les
cmp
pop
push
mov
pop
sbb
repz
mov
add
scas
mov
xor
jge
fwait
xchg
rcl
enter
imul
out
mov
and
cmp
sub
into
adc
ljmp
gs
push
gs
inc
inc
add
loope
and
decb
pop
xor
nop
aaa
xchg
jnp
mov
int
pop
fmulp
loop
pop
popf
jns
mov
mov
xor
push
sbb
daa
cmp
mov
adc
push
aas
mov
jmp
mov
jb
rcrl
ss
fcomip
jb
sub
jnp
jg
rcl
outsl
xor
cltd
cmp
mov
xor
push
ljmp
cmp
popa
int3
and
xchg
sbb
xor
dec
shlb
sbb
int3
push
and
dec
scas
or
jns
dec
sub
cmp
out
dec
andl
shll
adc
add
fdivr
popa
out
std
nop
ds
fidivrl
mov
mov
stos
xlat
push
mov
push
loopne
pop
dec
movb
mov
jmp
cmp
sbb
xor
outsl
icebp
imul
xchg
lea
sbb
mov
sub
or
inc
aam
sub
push
ret
pop
cld
adc
lods
aam
jbe
cmpsb
xorb
mov
fs
inc
dec
pop
xchg
imul
das
mov
loop
int
jne
cmpsl
or
lea
xor
pushf
cmp
adc
sti
cmp
push
ss
js
or
ret
mov
lds
sub
outsl
outsl
push
and
repnz
xor
push
jno
iret
or
sub
mov
mov
xchg
sub
movsl
ss
test
test
sub
aaa
mov
or
and
jae
xor
gs
aaa
push
lret
push
push
xchg
in
pop
xchg
mov
dec
mov
xor
das
negb
xchg
cmpsl
cmpb
jmp
mov
rclb
jo
pop
fsub
imul
cwtl
hlt
pusha
daa
shlb
stos
in
inc
xor
mov
jnp
mov
dec
mov
pop
arpl
popa
pop
fiadds
fisttps
aaa
and
inc
adc
xchg
sbb
xchg
movsb
xchg
lea
sub
sbb
adc
pop
xor
decl
aaa
sbb
test
mov
pushw
xchg
out
sti
mov
fnsave
outsl
lret
cmp
cld
add
cmpsl
mov
push
cld
dec
pop
out
mov
and
test
negl
aaa
iret
stos
push
iret
andb
js
push
test
out
into
push
push
pop
adcb
xchg
sub
into
and
dec
mov
lds
pop
ljmp
xchg
mov
lods
jecxz
test
jp
fucomp
lods
cmpsb
jo
add
arpl
pusha
lret
or
fidivrs
push
imul
scas
cmp
movsl
sub
daa
cmp
fsubrl
inc
jp
dec
enter
popf
and
sbb
dec
sbb
pop
das
push
rolb
cli
mov
call
add
xchg
lret
add
inc
sub
imul
push
jl
dec
stc
aas
sbb
int
test
cltd
pop
mov
loop
pop
pushf
leave
mov
mov
daa
push
sarl
push
pushf
and
mov
daa
in
xchg
sub
mov
push
mov
sub
aad
sahf
cli
daa
dec
lods
jmp
ds
xchg
mov
popa
cmp
stc
push
aas
sahf
xor
rclb
mov
sbb
jns
lahf
pop
mov
lods
push
fisttps
sarb
loopne
aas
leave
cld
pop
cmp
bound
out
sbb
fdivl
mov
mov
rol
fildl
or
insb
cltd
pop
cmp
cmp
sar
repz
push
clc
test
jae
fdiv
and
std
insb
push
mov
cwtl
fnstenv
fisubl
or
and
sbb
iret
pushf
pop
out
xchg
push
pop
aad
mov
sub
xor
xchg
xchg
pop
add
mov
das
inc
push
cmp
repnz
fnstcw
shlb
push
cmp
or
hlt
dec
sub
or
jnp
and
aas
shll
and
jne
cld
scas
fadds
ret
arpl
sbb
es
fisubs
scas
push
or
arpl
daa
add
xchg
jg
push
add
add
scas
jg
out
sub
inc
das
cmp
or
xor
es
testl
mov
jnp
cli
cli
cli
dec
leave
pop
scas
push
mov
add
mov
and
repnz
subb
cltd
jl
orb
lret
mov
addr16
inc
outsl
das
cmp
lock
inc
mov
xor
cmp
xchg
cwtl
push
ljmp
or
lods
mov
mov
fildll
cmp
das
push
dec
and
pop
ja
sarl
lahf
sahf
xor
stc
mov
mov
adc
call
aam
jns
fidivs
out
adc
sbb
movsb
dec
pusha
add
in
xchg
das
int3
mov
adc
repnz
aad
mov
jg
add
cmpsb
test
add
xor
cs
ror
sub
xchg
cmp
dec
in
mov
stc
into
mov
or
mov
imul
jbe
cld
push
mov
inc
jle
mov
arpl
sbb
rorl
into
sbb
mov
sub
sub
stc
inc
push
cs
jmp
mov
test
mov
xchg
push
push
mov
mov
cmc
rolb
sub
shlb
lret
arpl
mov
idivb
sbb
icebp
aaa
pop
jbe
pop
pusha
pop
pop
iret
jp
inc
out
sub
scas
sub
mov
and
xor
or
cmpsl
xlat
push
cmp
dec
and
jbe
jmp
aam
adc
aas
adc
or
push
rcr
xor
int3
xchg
add
or
xor
mov
shlb
rcrl
dec
mov
push
push
mov
lds
sti
in
scas
lds
mov
or
lea
scas
lret
cld
nop
scas
stos
cltd
dec
mov
push
cmp
mov
ret
ficomps
dec
add
cmp
pop
movsb
outsb
inc
mov
dec
sahf
pop
test
jne
adc
cmc
cmc
shlb
into
cli
sbb
xor
mov
xor
cmp
xor
roll
xor
data16
mov
imul
in
add
sarl
out
xchg
or
sub
mov
nop
loopne
inc
mov
in
test
lcall
dec
pop
sbb
xor
pop
arpl
rcr
add
sbb
push
xor
in
jnp
adc
loope
mov
je
out
testb
test
rcr
push
jecxz
das
mov
cmpsl
xor
mov
pop
and
sahf
loopne
dec
sub
jae
sub
subl
and
in
je
jecxz
call
repz
add
shrl
jl
sbb
imul
pusha
fimuls
pusha
sarl
out
xchg
adc
movsl
dec
and
loop
call
sbb
jnp
mov
lods
stos
pop
cmpsb
or
sbb
jns
mov
das
push
hlt
mov
pusha
bound
add
and
repnz
sub
lock
jmp
mov
cwtl
movsw
and
icebp
mov
or
inc
dec
addr16
pop
fwait
jae
insb
adc
pop
jge
enter
sti
stos
ficoms
das
mov
or
ss
fs
push
jae
jmp
cmp
push
dec
push
xor
aaa
pop
js
xadd
fs
xor
sub
xchg
mov
subl
cmc
xchg
outsb
mov
shl
ja
call
fdivrl
mov
in
mov
dec
cltd
push
outsl
scas
or
cltd
xor
andl
sbb
fsubl
mov
jns
push
add
scas
sti
int3
pop
insl
inc
xchg
aad
fildll
sbb
pop
or
dec
mov
or
pop
les
xchg
test
hlt
pop
dec
shlb
aad
fisttpll
nop
pop
out
inc
lahf
fst
xor
mov
movsb
push
pop
lcall
pop
add
jge
mov
mov
fnstsw
mov
xlat
ss
adc
call
or
movsl
gs
fcoms
push
in
cli
xchg
sub
scas
mov
cmc
cmp
adcb
mov
rcll
push
pop
mov
fmuls
fnstsw
shlb
cmp
sub
jae
jae
mov
out
mov
cli
pop
movsl
mov
dec
jb
xor
sbb
loope
and
sub
mov
repnz
out
fcoms
mov
sbb
xchg
pusha
imul
push
fbld
mov
aaa
mov
or
ret
mov
sub
adc
popf
push
push
push
aad
cwtl
push
inc
sub
cltd
ret
jg
setle
inc
sbb
in
scas
inc
inc
insb
not
lea
loop
xor
pop
in
psllq
js,pt
rcl
ret
jbe
xchg
adc
lret
dec
cli
test
sbb
les
sbb
icebp
negb
push
pop
mov
js
or
jl
insl
shrl
push
sub
lds
test
out
inc
int
pop
shll
test
xlat
in
fsub
cmpsl
xchg
test
stos
mov
daa
jnp
xchg
inc
add
roll
cmp
clc
sbb
iret
sub
sub
mov
mov
pop
int3
lds
mov
xlat
bound
push
jnp
loope
clc
leave
lods
xchg
inc
into
mov
jae
xchg
sti
mov
fldenv
cmpl
ficompl
pushf
sbb
jge
lock
rorb
mov
ljmp
cs
and
or
sarb
roll
adc
inc
fwait
lock
fnstenv
mov
in
movb
jne
xlat
mov
and
jmp
jo
in
leave
push
push
les
mov
mov
loop
jle
jecxz
imul
out
mov
repz
mov
xorl
shrb
push
insb
add
inc
lods
fmull
jge
push
addr16
jg
dec
cmp
inc
aaa
jae
add
mov
sti
addr16
jmp
or
movlhps
xchg
push
inc
dec
pop
js
lahf
pusha
es
pop
sub
mov
scas
dec
add
add
jl
adc
int
mov
mov
or
arpl
mov
aad
subl
test
mov
clc
push
dec
xlat
movsl
or
sub
push
daa
roll
jno
mov
stos
xchg
fldt
jg
mov
stc
aas
mov
daa
jbe
clc
shlb
sub
cmp
add
xchg
inc
jg
adcb
nop
dec
dec
jbe
std
dec
dec
lds
hlt
xchg
mov
sbb
decb
jecxz
sti
dec
sahf
mov
lahf
pop
adc
xchg
cmp
add
cmp
nop
xor
mov
xor
mov
dec
cmc
aam
mov
xor
int
aam
gs
push
in
test
adc
inc
xchg
push
insl
mov
fistps
cmpsb
stos
popf
inc
jae
sub
sarl
or
mov
jecxz
adc
cltd
jmp
fldcw
das
push
popf
mov
dec
outsb
js
jnp
xchg
adc
mov
add
mov
sub
loop
popf
mov
repz
jle
cmc
xlat
hlt
xchg
fs
sbb
int3
push
aaa
icebp
pop
rolb
mov
ret
mov
and
test
stc
inc
pushf
sti
jae
xor
shr
es
data16
movsb
mov
ljmp
xchg
cld
call
loopne
mov
lods
and
cmp
aaa
out
xor
jmp
fwait
add
fisubl
pop
adc
push
mov
cli
or
aaa
movb
cmp
push
push
outsb
mov
out
jns
cmp
lahf
sbb
sub
mov
xchg
aad
inc
mov
adc
outsb
mov
fwait
push
pop
push
jl
push
test
or
mov
in
outsb
fmuls
stc
test
movl
mov
addr16
pushf
and
inc
add
in
push
insl
jge
mov
in
or
xchg
pop
call
mov
push
sub
jg
repnz
ret
loopne
out
xchg
xchg
iret
repnz
pop
pop
gs
push
mov
call
in
jae
repnz
idiv
shlb
ficompl
cmp
sbb
sub
lcall
movsl
dec
adc
jne
push
mov
xor
mov
cld
stos
cmpb
addr16
fldlg2
ljmp
pop
push
and
shll
fst
in
mov
push
stos
fdivrl
sub
mov
xor
out
into
push
cs
lcall
adc
jecxz
jno
imul
lds
mov
data16
mov
ficompl
dec
fmuls
mov
mov
lcall
jp
mov
or
mov
sub
mov
nop
push
cwtl
out
sub
and
sbb
ror
mov
in
jl
lods
icebp
sub
jnp
cli
pop
lods
xor
dec
mov
roll
xchg
cmp
enter
pop
testb
cli
pushf
movsb
lret
xor
test
ds
fs
stos
mov
mov
xchg
in
jge
jae
mov
sbb
mov
jno
cmp
jecxz
mov
or
loop
mov
popf
imul
pushl
push
or
loopne
ljmp
jmp
pop
stos
inc
xchg
mov
push
in
jb
xchg
pop
xlat
dec
lds
xchg
fidivl
rcrb
sub
adc
stos
push
xchg
gs
fistpll
pop
out
je
in
out
outsl
stos
pmaddwd
xor
sbb
les
je
mov
sbb
shlb
xchg
arpl
xchg
addr16
lret
imul
fsts
hlt
push
cltd
dec
divl
insb
inc
mov
pop
ror
lahf
test
loope
pop
mov
dec
outsl
and
les
mov
inc
repnz
jecxz
fbstp
hlt
jg
push
test
int3
data16
jg
jle
test
shrb
mov
pop
or
adc
or
fiadds
xor
fbstp
hlt
adc
lahf
inc
and
mov
inc
shlb
jecxz
icebp
ja
clc
shl
lcall
js
jecxz
in
and
inc
mov
mov
adc
fsubrs
xor
jno
jae
mov
mov
aad
or
jne
test
hlt
movsl
ds
movsl
ljmp
mov
or
in
lds
inc
es
push
add
das
or
stos
sub
cltd
add
mov
or
jg
adc
hlt
pop
and
push
sarb
pop
sub
xor
fld
sti
jp
cs
imul
push
xchg
cmp
cmpsb
sahf
into
xor
pusha
stos
xor
sbb
or
call
adc
jmp
push
xchg
mov
cmc
adc
dec
or
in
push
fld
aas
pop
jg
add
adc
jbe
fisubl
scas
and
xchg
mov
xchg
mov
xor
or
push
loopne
and
cs
xlat
rorb
xchg
dec
shrb
in
cmp
sbbl
sub
arpl
sahf
mov
xchg
mov
mov
cmp
cld
dec
sbb
mov
xchg
test
jmp
mov
fistps
xor
scas
jmp
sub
xchg
insb
sarb
or
dec
leave
int3
mov
subb
xor
or
pushl
pop
iret
mov
sarl
or
adc
subl
les
nop
or
in
pop
decl
fsub
sub
pop
fidivl
add
or
popf
or
xlat
les
push
out
or
jmp
cltd
lods
xchg
sub
dec
push
in
jmp
push
test
ret
imul
test
cmp
sbb
and
xor
dec
xchg
adc
xchg
mov
loopne
in
xor
insl
dec
inc
xchg
jg
pop
sbb
push
aad
mov
push
lahf
in
pop
scas
jmp
cltd
xor
and
lods
jb
fs
imul
in
inc
imull
inc
pop
dec
sarl
cmp
and
int3
push
cmpsb
in
jl
add
mov
ror
pop
mov
mov
insl
mov
add
addl
pop
jbe
fidivrl
jbe
add
push
out
cmc
jg
lea
enter
imul
add
and
sbb
addr16
and
xchg
cmc
push
push
jmp
sbb
or
push
push
push
andb
fsubrl
sbb
dec
push
and
mov
loopne
push
cmp
sbb
pop
sub
into
int3
gs
addl
mov
sti
and
and
sti
inc
xchg
jno
in
lods
pop
shlb
fstpt
daa
and
mov
adc
jmp
movsl
dec
rcrb
sub
leave
pop
and
dec
xchg
push
subl
mov
dec
dec
pop
int3
xlat
jne
bound
test
push
and
inc
hlt
repz
inc
fsts
xchg
or
mov
test
test
lret
leave
mov
mov
in
ja
cmp
dec
aas
mov
mov
jmp
std
iret
cmp
test
push
sub
dec
into
sbb
mov
sbb
orl
jae
add
cli
jle
cltd
jp
adc
enter
mov
int3
sbb
push
shll
stos
sub
insb
inc
idivl
xchg
push
fisubrs
cmp
push
mov
mov
inc
xchg
pop
cmp
ret
sub
jb
inc
int
mov
jbe
mov
test
loopne
pop
dec
int3
jmp
inc
add
dec
xchg
and
jno
imul
inc
dec
faddl
xor
je
sarl
add
adc
dec
xchg
mov
jae
sub
idivl
mov
jns
pop
mov
cmpsl
lcall
push
mov
pop
xor
push
xchg
inc
xchg
stc
lock
outsl
mov
cmp
xor
or
test
testl
mov
out
adc
cmp
js
push
xlat
out
insb
xlat
and
imul
jp
arpl
or
cmp
pop
shrl
mov
sub
and
push
imul
jno
enter
outsb
or
imul
negb
mov
dec
cmp
bound
jo
xchg
adcl
jno
and
mov
imul
sbb
sub
sti
lods
and
ds
popa
jmp
xchg
fcmovnbe
jb
dec
nop
add
jns
mov
adcl
ds
or
jg
mov
cmp
mov
jmp
sub
or
aam
add
out
adc
in
dec
es
aaa
pop
in
pop
mov
add
cmp
es
push
fnstcw
push
mov
mov
add
addl
nop
mov
add
ret
jae
dec
sub
jp
lds
push
dec
inc
mov
adc
mov
rclb
dec
fs
or
mov
add
lds
mov
mov
push
jo
inc
mov
push
out
and
sahf
hlt
pop
jl
pop
adc
and
sbb
pop
xlat
pop
lret
ljmp
ficoml
mov
lahf
adc
sbb
int3
fadds
repnz
ret
jp
fsubp
loopne
jle
sub
dec
jg
push
pop
cld
sti
dec
lds
sub
pop
repz
inc
das
mov
jbe
cmpsb
popa
cs
sub
lods
in
das
daa
pop
push
movsb
leave
pop
pop
out
dec
inc
jge
stos
je
lret
jne
int3
jbe
or
dec
adc
inc
mov
sub
gs
add
add
jne
cli
dec
lods
pop
jecxz
cmp
cmpb
aam
adc
pop
test
or
ljmp
mov
es
jbe
and
movsl
jae
mov
aaa
cwtl
ja
adc
dec
mov
mov
push
jne
and
stos
shrb
add
xor
push
dec
rorb
test
mov
inc
bnd
inc
cmpsl
push
pop
jmp
xchg
xchg
test
add
add
lods
mov
out
call
pop
arpl
dec
int3
jno
ja
outsl
mov
sarb
mov
mov
icebp
cmp
shll
shlb
divps
cmp
aad
jl
and
cmp
pop
push
xor
and
or
shlb
dec
addb
jmp
fwait
jl
and
sub
and
into
out
jne
movsl
push
xor
dec
xchg
aad
or
in
mov
jle
into
add
sbb
adc
divl
jb
mov
or
mov
sbb
pop
dec
fnstenv
icebp
hlt
mov
mov
cs
cmp
cmp
jae
add
sarl
xor
cmp
inc
mov
xor
add
inc
jmp
das
pop
jbe
add
cmp
sahf
and
adc
push
pop
mov
call
fdivl
xor
mov
roll
pop
adc
daa
sbb
inc
fwait
and
inc
or
fldcw
stos
cmp
and
je
add
ja
pop
xchg
pop
fdivrs
in
das
xor
jge
outsb
shll
and
mov
sub
mov
push
imul
add
or
test
adc
sub
xor
add
in
sbb
imul
int
pop
jbe
loopne
adc
int
mov
scas
pop
fwait
mov
arpl
push
or
hlt
ss
mov
or
add
daa
aad
fcomip
rorl
cmp
jmp
int3
adc
or
rolb
jns
gs
shll
or
pop
jbe
icebp
jbe
push
icebp
repnz
xchg
mov
xchg
cmc
mov
mov
fucomp
mov
pop
mov
mov
inc
jbe
xchg
and
shlb
xchg
arpl
and
in
jp
mov
jge
out
dec
mov
repz
divl
mov
jae
cld
out
add
sub
js
push
lea
lahf
ret
test
lock
aad
mov
cmp
mov
fucomip
push
or
adcb
shl
rorb
sbbl
mov
and
adc
ss
out
ljmp
adc
jnp
cmp
jnp
mov
inc
adc
xchg
mov
xchg
sbbl
pop
mov
push
mull
je
dec
test
popf
sub
insb
cmp
test
sub
xchg
mov
outsb
mov
in
dec
and
fsubrs
and
ja
rcl
cmpsb
push
add
push
jmp
clc
sbb
lret
dec
dec
jnp
or
sbb
jo
dec
repz
jecxz
cmp
or
jne
jp
mov
xchg
rcrl
sbb
xchg
push
push
ds
test
aas
scas
es
je
dec
insb
cmpsl
xchg
pusha
jl
insb
std
fcomps
sub
jnp
push
ret
test
jbe
hlt
add
sbb
orb
mov
mov
imul
loope
insb
dec
je
mov
cmp
test
xor
adc
std
imul
push
imul
test
popa
lret
dec
pop
sub
das
out
sub
sub
pop
insb
and
lret
hlt
sbb
mov
pushl
cmp
scas
fcoml
daa
xor
add
lahf
out
push
mov
mov
push
sub
out
jmp
filds
lahf
ljmp
adc
jno
or
add
add
stos
ds
push
ret
lods
int
pusha
jmp
fisubrs
shrl
cli
test
add
push
hlt
xchg
ficoms
mov
cmpsl
into
add
push
or
lahf
jge
test
dec
jb
xor
cli
in
xor
pop
mov
and
lds
or
insb
pusha
mov
ret
lcall
fxtract
scas
mov
or
daa
fisubl
dec
push
movsb
bound
push
int3
es
adc
push
mov
dec
mov
sub
mov
es
xlat
mov
pushf
push
movsb
sub
inc
mov
mov
es
mov
data16
addr16
mov
dec
mov
cwtl
mov
sub
xchg
xor
and
or
in
adc
push
adc
mov
aas
scas
cmp
in
push
xchg
mov
je
jmp
arpl
in
xor
scas
fadds
push
mov
sub
push
jns
jne
std
lods
sar
mov
xor
pop
cmc
add
cmc
push
lcall
fwait
popa
std
mov
stos
das
xchg
data16
mov
add
sti
ret
in
sub
pushf
xlat
std
movsl
xlat
push
cmc
shl
xor
repz
inc
and
ss
and
sbb
fdivl
test
sbb
pop
mov
outsb
jno
add
mov
push
sahf
repnz
ja
adc
cmp
xchg
pop
fs
sbb
mov
dec
and
lock
cld
out
pop
jmp
addr16
jns
lods
jle
mov
fsubr
iret
popa
lea
mov
imul
hlt
outsb
faddl
inc
ljmp
stos
or
bound
jbe
inc
js
xor
dec
mov
adc
push
call
repz
adc
lods
cmp
repz
cld
add
out
sbb
cwtl
inc
dec
dec
out
call
ljmp
xchg
imul
sbb
test
sbb
fidivrs
inc
pushf
fidivrl
sub
push
mov
pop
pop
imulb
mov
jbe
push
cld
xlat
repnz
aad
jecxz
outsl
into
or
aam
xchg
sub
xchg
std
inc
lods
pop
mul
shl
sbb
imull
data16
insb
aad
arpl
shlb
mov
push
adc
cmp
es
data16
push
pop
ror
mov
or
mov
sbbl
sub
mov
repz
jl
lret
xor
add
sti
pop
ljmp
and
xor
clc
jmp
mov
jnp
inc
hlt
test
cltd
frstor
jp
jecxz,pn
xchg
and
sub
hlt
repz
dec
mov
push
f2xm1
jne
xor
mov
add
dec
mov
cli
push
out
jbe
push
outsb
mov
add
stos
mov
je
lods
push
mov
pop
fnstcw
adc
dec
int3
popf
xchg
jno
push
jb
push
pop
mov
push
or
mov
ds
xchg
adcb
jns
sub
mov
adc
and
inc
lock
insl
pop
jle
sub
jmp
mov
jns
xor
adc
add
push
xor
xchg
fimull
mov
mov
out
push
fwait
cltd
mov
cmpb
mov
ljmp
lret
and
add
jmp
or
pop
dec
sar
fwait
ret
std
cmp
mov
cld
pop
dec
push
mov
inc
xor
xchg
push
lods
mov
dec
rclb
into
daa
data16
ret
bound
and
std
pop
sti
test
adc
mov
dec
pop
cltd
popf
jns
push
jmp
cmp
popa
and
cmc
test
jle
mov
push
push
addr16
xchg
and
inc
and
sub
xchg
fisttps
xor
adc
pusha
data16
arpl
sbbb
pop
rolb
lcall
sub
sarb
mov
sub
lods
cmp
cmpsb
jns
test
lods
adc
data16
push
repz
adc
fcmovu
gs
orb
fs
jno
dec
lahf
cmp
stc
fdivrs
push
hlt
std
jg
icebp
push
or
inc
inc
lea
cmp
lds
fwait
mov
enter
test
sbb
xchg
and
stos
outsl
mov
movsb
xor
dec
out
cmpsb
pop
adc
sbb
mov
shrl
stos
out
popf
add
nop
ficoml
ja
pop
popa
aaa
dec
xor
leave
shll
imul
test
fmuls
adc
out
dec
mov
out
add
test
mov
insb
jo
enter
test
in
sub
and
out
outsb
fisttpl
insb
pop
jg
jg
and
sti
pusha
sbb
jmp
sub
sbb
sub
adc
lea
jno
mov
jnp
scas
inc
test
adc
cmp
and
jbe
test
daa
mov
daa
sub
xlat
rorb
sub
into
jp
aad
roll
fists
ja
mov
xor
mov
pop
xor
out
psubb
enter
adc
mov
loope
mov
dec
push
inc
inc
mov
pop
xor
call
xchg
adc
cmp
xchg
popa
hlt
int3
cs
dec
xchg
out
pop
and
ja
and
pop
xchg
jle
orl
mov
stos
das
inc
inc
dec
pop
cmp
gs
sbb
data16
testb
ljmp
mov
sub
jae
jne
iret
mov
mov
cmp
mov
lds
push
and
mov
sar
repz
and
sbb
mov
clc
fiadds
jmp
xchg
data16
mov
das
repz
fs
loope
adc
daa
lea
fistl
mov
sub
stc
mov
lds
dec
call
inc
xchg
push
rcrb
cmp
dec
jbe
dec
aaa
sub
loope
add
js
pop
fcompl
nop
dec
bnd
mov
lods
out
xor
xchg
and
int
jns
fdivrl
cmp
mov
cli
dec
adc
testl
jo
push
adc
andb
jb
cmp
dec
gs
lahf
inc
pop
or
cmp
xchg
int3
jp
inc
cmp
shlw
dec
popl
inc
and
aas
leave
ret
cmp
mov
dec
fs
adc
jp
movsb
pop
scas
jle
loopne
cmp
in
out
adc
dec
lods
xor
scas
scas
sbb
mov
stos
inc
pop
ss
cmp
mov
js
adc
or
mov
lods
xor
push
arpl
test
scas
nop
add
faddp
popf
loope
lock
push
bound
add
lods
push
call
je
jns
pop
cmp
popa
imul
fistpl
jg
daa
xchg
ret
jl
aas
cs
int
mov
dec
mov
dec
ret
cmp
or
push
add
test
pop
enter
mov
jne
bound
adc
xor
cmp
inc
cmp
push
push
add
mov
or
dec
mov
les
jle
xchg
fidivs
sbb
lret
jno
xlat
xchg
or
sub
add
aam
push
inc
jecxz
fistpl
fimuls
jmp
or
mov
dec
roll
fiaddl
mov
fidivrs
inc
inc
lret
icebp
in
mov
mov
pop
pusha
pop
test
cltd
int
xor
sub
jae
out
xor
fiaddl
cmp
stos
inc
jmp
repz
jmp
xor
inc
out
jbe
in
incb
cmp
rorl
test
mov
xchg
sbb
lret
arpl
in
xchg
and
bound
in
xor
cmp
mov
and
xlat
nop
shlb
js
sub
add
sbb
adc
daa
gs
fdivs
mov
inc
and
jnp
sbb
cmp
sub
dec
jno
shlb
jno
sbb
imul
xor
scas
aas
fstpt
pop
les
scas
ftst
fwait
adc
jl
sub
dec
shrb
hlt
out
sti
das
call
sahf
js
add
mov
adc
ds
lods
cmpsb
dec
shll
add
clc
mov
in
cmc
ds
xchg
outsl
pop
adc
lock
xor
and
in
inc
je
jle
add
or
mov
lcall
and
xor
xor
pop
and
jl
or
fcmovne
mov
jne
pop
rcr
dec
mov
mov
pop
or
mov
jge
jp
cmp
test
dec
out
push
ja
lds
mov
lcall
xor
xor
push
jnp
or
sbb
adc
iret
or
push
outsl
pop
mov
or
sub
out
pop
movsb
loop
and
sbb
fs
jmp
pop
sti
sti
popa
jns
xchg
inc
cmp
xchg
fsubrl
push
std
hlt
jbe
add
mov
nop
add
sarb
mov
push
fldenv
xchg
mov
cli
ret
mov
sub
ja
mov
lret
adc
mov
mov
add
inc
js
mov
and
add
and
inc
add
mov
mov
adc
mov
shlb
mov
and
test
pushl
mov
js
dec
mov
lret
loopne
mov
sub
cmp
dec
dec
cltd
sub
insl
lock
outsb
pop
jb
pop
pushf
cs
addr16
es
test
or
pop
lahf
repz
bound
mov
jp
and
jl
jo
in
rcll
pop
push
aaa
adc
inc
imul
push
add
shl
and
pop
mov
jecxz
dec
fstps
test
scas
xlat
idivl
xchg
mov
test
lods
and
sub
ret
inc
xor
mov
mov
xlat
mov
inc
and
adc
xchg
mov
dec
sti
aaa
cmp
bound
dec
add
jmp
loope
push
shrb
adc
sub
adcb
fsubl
adc
sarl
and
pavgb
fsubl
fidivrl
jg
clc
inc
pop
mov
nop
add
ds
xor
pop
mov
adc
or
jbe
or
mov
popf
sbb
push
sub
mov
or
sub
jno
cmp
into
sti
xchg
addl
cwtl
push
leave
sahf
in
mov
mov
sub
clc
push
pop
xchg
pop
gs
sub
adc
add
test
pop
and
mov
enter
mov
daa
inc
push
xor
mov
add
push
imul
jg
or
push
mov
fucomip
mov
sbb
orl
cmpb
mov
outsl
aad
push
dec
ss
insb
cmp
push
adc
mov
ficoms
or
xchg
and
jg
xchg
push
leave
mov
sub
repz
inc
xchg
sub
aam
popf
js
jns
call
adc
sbb
in
dec
xchg
push
xor
invd
jmp
incb
and
add
cmp
cld
jns
cmp
xchg
mov
xchg
inc
ret
cli
dec
add
mov
mov
push
insl
sbb
int
push
add
or
and
push
lods
xchg
adc
add
add
lods
jns
inc
popa
mov
fistps
ljmp
jno
xchg
sub
out
jg
xchg
loope
mov
loop
pop
js
mov
inc
jae
ret
dec
dec
cmp
sarl
mov
test
cli
rorl
stos
into
inc
mov
sub
dec
aad
movsl
pop
or
sbb
xchg
jnp
fidivl
es
dec
xlat
add
mov
add
mov
xor
inc
jae
xchg
mov
lret
imul
mov
test
pop
das
sti
or
push
call
sbb
sub
fsubp
add
jecxz
cmc
data16
adc
insl
enter
cmp
inc
ret
and
repz
shrb
pop
subl
sbb
lahf
f2xm1
mov
xchg
in
xor
in
sbb
and
fbstp
aad
jae
out
cmp
dec
and
xor
shl
out
mov
jae
mov
pop
mov
es
pop
outsb
idivb
push
stos
mov
adc
adc
call
push
call
movsb
pop
push
imul
push
xor
xchg
fisubs
or
jnp
fcmovnbe
jle
xchg
adc
int3
aaa
or
xor
xor
push
dec
popf
in
xchg
stos
loop
sarl
addr16
sub
cmp
cmpsb
aaa
mov
push
sti
lahf
ljmp
mov
mov
lahf
xor
shlb
mov
in
inc
push
mov
jge
sub
cmp
xor
pop
jge
mov
icebp
mov
mov
pop
call
out
sbb
pop
sub
jle
xlat
mov
scas
mov
sub
push
out
add
fmull
mov
ret
addb
jnp
aad
inc
xchg
pop
out
fmul
pop
push
inc
jbe
enter
lahf
cs
ja
push
xchg
xchg
std
test
adc
or
pop
or
cmpsb
push
fs
add
notb
stos
adc
mov
pushf
sbbb
std
mov
into
and
or
idiv
add
lods
xchg
dec
mov
or
sbb
lds
xor
xor
lahf
test
adc
ret
mov
cmp
lods
adc
scas
aam
out
insl
jecxz
hlt
scas
xor
mov
jnp
jnp
mov
rclb
cltd
push
and
xchg
rorl
pop
lds
outsl
push
out
cmpsb
cmp
fisttpll
enter
int
insb
pusha
lret
ds
subb
jnp
jle
inc
std
sbb
pop
cmpsl
adc
jno
push
test
arpl
xchg
icebp
jmp
pop
out
xchg
mov
mov
jp
ret
or
movb
or
xor
out
decl
sbb
rclb
mov
add
out
push
fstpl
xor
stos
mov
mov
pop
enter
adc
sub
dec
nop
insl
and
and
enter
data16
ljmp
adc
shlb
sbb
sub
xchg
inc
lret
mov
test
outsl
leave
cmp
nop
jg
sbb
stc
leave
out
je
test
add
push
sti
sub
cmpsb
and
sub
xchg
dec
or
jecxz
or
sti
lea
sub
xchg
xchg
mov
push
adcb
fimuls
cmp
jl
test
in
inc
pop
fisubs
mov
leave
mov
xor
pop
orl
nop
movsb
fimull
adc
inc
into
xor
lock
xchg
ljmp
fisubrl
clc
fisttpl
mov
sbb
mov
bound
jmp
dec
mov
int
into
pusha
into
mov
push
lock
cmpsb
fistpll
xchg
mov
fmull
mov
mov
inc
rcrb
adc
cmp
lret
sbb
mov
xor
sub
mov
sbb
movsb
icebp
test
stos
and
imul
je
ds
hlt
xchg
inc
pop
sbb
aaa
push
shlb
pop
xlat
arpl
push
and
out
add
mov
mov
xor
or
bound
add
mov
daa
call
stos
add
movsl
stos
xchg
mov
sub
inc
jne
adc
cmpsl
cld
test
dec
xor
test
xor
mov
mov
stc
adc
into
scas
lea
jge
es
les
lock
repz
push
call
icebp
adc
mov
inc
test
lret
fisttpll
add
divb
cmp
fsub
push
inc
cwtl
sub
pop
xor
mov
in
lods
fwait
shl
in
sbb
jb
xchg
out
icebp
sub
sbb
fs
aaa
sub
lods
mov
addl
add
stos
adc
stos
nop
in
pusha
mov
mov
loopne
out
stos
dec
ret
xor
test
fucomi
jl
fucom
add
dec
push
xor
fs
flds
hlt
push
andl
in
and
push
movsl
push
imul
in
add
mov
imul
insl
jp
andb
int3
sar
jge
xchg
outsl
pop
cmp
xorl
movsl
loop
fisubl
adc
aam
clc
add
inc
or
popa
mov
repz
or
jge
out
xchg
lcall
cld
icebp
and
sarl
cmp
ja
repnz
xor
insb
sub
adc
js
cmpsb
stos
add
push
mov
push
sbb
lret
pop
aad
adc
sub
inc
aas
clc
cmpl
push
aam
loop
mov
popa
sahf
mov
or
or
sbb
cmc
movsb
rcrb
testb
std
lahf
inc
mov
sbb
mov
ljmp
mulb
push
dec
int
and
sbb
push
out
xorl
jmp
int3
fwait
clc
add
pusha
push
adc
jno
mov
sub
push
push
dec
xchg
mov
mov
pop
cs
pop
cld
jge
xchg
xorb
leave
outsb
stos
out
fmuls
cmp
mov
and
popa
insb
arpl
push
or
test
jbe
sub
mov
push
cmp
outsb
imul
lods
addr16
and
es
pop
adc
rcll
cltd
stos
fwait
xchg
push
and
std
adc
pop
jp
mov
cmp
dec
inc
xor
adc
lret
cmp
ljmp
mov
and
adcb
enter
mov
in
fisubs
outsb
stos
or
jo
adc
into
sti
ret
adc
pop
cmp
sub
xchg
pop
jle
sahf
adc
pop
adc
fildll
dec
loope
loop
ret
cmp
fldcw
mov
fwait
dec
lds
or
add
xor
xchg
add
mov
bound
lods
loop
and
leave
or
adc
mov
and
mov
leave
add
jge
xchg
iret
jae
pop
iret
imul
movsl
push
pop
cltd
stos
dec
daa
cwtl
enter
fs
ficoml
jo
sti
sub
mov
or
movl
iret
xor
icebp
loope
std
stos
lods
pop
dec
cmpsb
out
fdivs
sbb
enter
test
test
lods
icebp
push
jp
sub
mov
in
and
sub
xlat
hlt
loopne
lods
stos
dec
pop
add
aam
pop
dec
pusha
addr16
fcom
repnz
and
jnp
int3
jb
outsb
dec
test
dec
ds
pop
add
sub
fbld
leave
push
xor
push
enter
xor
adc
fnstcw
or
mov
mov
cltd
test
das
add
sub
daa
mov
testb
rcll
cs
lds
mov
fiaddl
mov
mov
rcrl
mov
insl
xchg
jo
adc
mov
lea
mov
cltd
out
jnp
pop
repz
push
or
and
pop
xchg
pop
jmp
insl
or
mov
fisubs
out
hlt
idivl
push
cs
stc
iret
adc
mov
test
notl
pop
pop
xchg
fwait
arpl
inc
cmp
fdivs
lcall
pop
in
mov
push
mov
decl
fadd
in
pop
jo
mov
arpl
jecxz
jle
sbb
add
xor
mov
jecxz
loop
iret
xor
daa
addr16
ficompl
adcl
push
aaa
cmp
movsl
adc
lods
jl
push
clc
repz
sbb
arpl
mov
pop
iret
and
push
arpl
shll
mov
jnp
pop
sbb
imul
test
cld
or
int3
cwtl
lahf
rorb
in
out
les
cmp
popf
fstpt
cmp
jmp
daa
sub
into
subb
add
rol
mov
pop
pop
push
es
test
dec
cmp
adc
mov
pop
mov
jne
les
les
xchg
mov
mov
fsubrs
mov
xor
movq
or
sub
sbb
fnstcw
mov
lods
sbb
ret
mov
mov
mov
std
popa
aad
pop
inc
lods
jnp
jns
sub
xchg
ljmp
and
pushf
das
and
repz
pop
or
lock
decl
insb
stos
lods
cs
ror
in
push
mov
mov
lock
je
pop
out
xchg
lds
jg
mov
sub
gs
and
subb
inc
xchg
jl
test
aad
cmpsl
adc
dec
std
jae
sbb
lods
dec
and
stos
out
push
mov
mov
iret
das
fsubs
std
or
adc
lea
loopne
push
cld
pop
ljmp
cmp
push
and
sbb
mov
push
in
data16
mov
in
add
cmp
cmp
sti
bound
and
push
cmc
push
sub
sub
sbb
jne
push
stc
fucomip
push
push
push
add
leave
pop
data16
push
xchg
jecxz
pop
dec
cmc
loopne
pop
outsb
adc
inc
test
or
pop
xchg
jg
inc
imul
aad
arpl
lds
enter
into
and
incb
cmp
daa
mov
movl
lret
inc
es
int
inc
sbb
mov
push
push
mov
pop
pop
aas
adc
mov
push
jle
adc
pushf
sahf
sbb
jl
sub
add
lock
popf
add
mov
ss
mov
jmp
jle
xlat
aad
rorl
out
adc
jbe
in
es
in
in
cmpsl
push
dec
mov
in
pop
inc
adc
or
push
and
sbb
filds
xchg
rcrl
xchg
and
mov
jge
scas
ret
sbb
sbb
lods
pop
in
mov
xor
push
in
adc
pop
lret
sbb
and
shlb
mov
pop
mov
mov
xor
mov
lcall
in
icebp
add
jae
data16
lock
cld
fcoms
iret
addr16
je
addb
inc
outsb
xorl
add
inc
cmp
or
push
aaa
out
xchg
push
es
mov
push
pop
ja
dec
jo
cmpl
dec
mov
iret
and
mov
insl
lahf
pop
ror
fimuls
sbb
mov
xchg
mov
cmc
sbb
xchg
sbb
mov
cmp
inc
mov
std
or
rsm
in
sub
or
hlt
dec
iret
push
popf
cmp
lock
mov
std
imul
lods
dec
jg
stc
pmuludq
testl
jp
cmp
aas
lods
and
or
pop
outsb
xor
fisubrs
sarl
ja
ficoms
and
pcmpgtw
loope
rcr
outsb
dec
mov
pusha
lods
and
mov
cmp
cmp
mov
pop
data16
and
fisttpl
mov
cmp
jo
dec
mov
rorb
sbb
outsl
pmulhuw
popl
sarl
adc
in
mov
sub
pop
insl
sbb
xchg
and
xchg
push
dec
jg
pop
shlb
and
enter
jo
add
repz
aas
mov
into
fwait
fwait
jle
aad
sar
subl
out
xchg
sub
daa
mulb
jno
push
out
fld
in
pop
in
adc
jnp
pop
subl
ret
bndstx
pop
fdivs
push
daa
mov
inc
jno
dec
mov
jb
lods
push
jb
ret
imul
out
outsb
and
and
leave
xor
push
call
aaa
fstpt
jb
out
jle
popf
push
popf
imul
jl
cmpsb
jmp
repz
insw
push
fwait
mov
xor
ret
jb
ljmp
js
mov
nop
add
pop
cli
mov
inc
mov
cmp
dec
adc
or
sub
std
sbb
xor
pop
call
sbb
mov
push
scas
ret
std
pop
lds
push
and
jne
ljmp
daa
dec
push
sub
and
mov
mov
add
std
fcoml
xchg
mov
jg
movsb
pop
jp
scas
stos
pop
mov
pop
jecxz
jl
inc
shlb
rcr
mov
scas
test
jo
fiadds
insb
sub
stos
xlat
sub
popf
loope
push
inc
mov
rcl
in
xor
mov
jbe
add
cmp
gs
lahf
out
cld
rolb
in
ja
repnz
sbb
or
je
daa
popl
mov
lea
data16
fidivrl
test
xor
cltd
insb
popa
jbe
xchg
xorb
popf
movsb
jle
adc
enter
rcrl
sub
pop
imul
push
out
xor
mov
adc
xchg
rorl
xchg
ret
out
shl
imul
mov
test
out
cmpsb
dec
test
xor
pop
add
adc
sub
adc
push
pop
inc
loope
pop
pand
repnz
test
movsb
sar
mov
sub
mov
xchg
into
mov
pusha
stos
push
inc
test
dec
aam
push
call
inc
mov
test
aam
inc
jecxz
andnps
sbbb
popf
test
repnz
xor
xor
cltd
imul
in
scas
push
jb
pop
loop
loop
mov
push
ss
fcomp
scas
sub
pop
dec
or
push
sub
cwtl
int3
notl
repnz
xor
hlt
mov
es
xor
hlt
popf
into
rorl
xor
fsubrs
inc
xor
jle
nop
cli
xor
push
push
scas
jno
add
or
dec
mov
leave
test
stos
and
push
xor
cmpsl
clc
out
mov
cwtl
adc
jbe
sarl
sbb
adc
in
js
aaa
cld
loopne
xor
adc
sbb
mov
mov
outsl
dec
clc
mov
mov
lahf
sub
add
lods
leave
lea
cmp
dec
daa
mov
xchg
mov
ja
mov
andl
pop
cli
push
fdivs
popf
mov
sbb
jae
xchg
adc
or
lods
inc
mov
test
rcrb
sbb
cs
popa
xor
sbb
push
mov
das
mov
rorl
xchg
scas
repz
sub
shlb
iret
stos
loop
stc
mov
adc
jae,pn
test
push
push
mov
xor
les
out
pop
sbb
popf
ret
xchg
sub
push
jnp
push
pop
adc
xor
cld
addr16
lock
pop
cmp
outsl
fisttpl
adc
dec
push
stos
fnstsw
cmpsl
jmp
sub
mov
dec
mov
aam
lea
sahf
adc
test
shlb
push
fstp
mov
mov
insl
push
jbe
push
and
cmp
outsl
add
pop
xchg
gs
shl
loopne
ljmp
lret
test
push
addr16
popf
test
test
aam
cmp
loopne
pop
faddp
int3
pusha
pusha
pop
push
pop
fs
repz
dec
dec
push
scas
negb
sbb
and
cwtl
sahf
ret
inc
pop
insb
mov
and
out
cld
or
je
jp
lods
scas
adc
stos
dec
mov
in
add
insl
jae
sub
push
js
mov
daa
jns
and
rcl
mov
sub
jmp
adc
lea
stos
jl
sub
cli
mov
fdivrs
push
adc
lret
lods
push
push
xor
mov
and
or
xchg
mov
mov
add
mov
js
ds
jae
jmp
and
or
fwait
mov
ja
mov
mov
out
or
in
xchg
sub
and
sbb
pop
fs
shl
in
sarb
daa
push
dec
push
sbb
adc
scas
lds
sbb
xor
fdivs
mov
lret
mov
leave
jae
xor
xchg
jno
jmp
sub
stos
or
and
mov
into
cli
inc
cmp
pop
mov
cmpsb
negb
fistps
daa
xor
or
xchg
jmp
lret
test
imul
inc
aam
icebp
sbb
jmp
fidivrs
adc
push
aaa
pop
jbe
mov
adcl
icebp
cmp
dec
fsubs
outsb
push
idiv
rcl
mov
push
xchg
jbe
imul
shrl
mov
and
mov
outsl
xlat
imul
into
inc
les
clc
mov
xor
pop
mov
test
add
ret
aad
movsl
in
adc
mov
mov
and
in
in
xorl
inc
xor
cmp
lds
xchg
das
out
mov
rorl
int3
into
mov
cmp
pop
das
xor
mov
push
pop
js
jns
fildl
lock
sbb
lret
or
jmp
adc
icebp
test
movsl
xor
ja
cmp
push
adc
test
or
daa
cli
pop
in
bound
sbb
mov
pop
xchg
fwait
ds
pop
and
or
jmp
scas
test
mov
test
mov
int3
fiaddl
pop
and
xchg
mov
aaa
loopne
mov
mov
sub
xchg
xor
jae
cmp
xchg
fistpl
rorl
mov
xor
cmc
xor
bound
cmp
mov
cmpsl
lret
lret
test
mov
or
cmpsl
lock
scas
bound
inc
or
mov
inc
or
jbe
pop
ss
pop
xchg
shll
xchg
loope
push
pushl
daa
fsts
add
mov
inc
hlt
xchg
pop
dec
gs
mov
or
sbb
aas
and
xchg
stc
fimuls
imul
and
std
xchg
pop
shrb
movsb
lea
xchg
iret
jo
stc
xor
adc
xchg
aaa
arpl
jecxz
or
pop
jo
mov
test
mov
and
cmp
mov
adc
add
addr16
lahf
xor
repnz
jae
test
lea
call
dec
lds
in
cmp
mov
mov
sub
fmuls
dec
and
or
sbb
movsl
or
cmpsb
mov
inc
add
push
push
push
shll
addb
push
xchg
imul
add
lret
mov
xchg
sahf
mov
jmp
or
mov
pop
push
test
and
fstps
jle
pop
xchg
popa
mulb
and
lcall
cli
lahf
movsb
lods
add
push
push
stos
pop
pop
addr16
lods
mov
je
lret
fstp
jo
iret
adc
fistl
mov
push
ljmp
js
fwait
pop
xchg
and
inc
mov
jo
jae
cmp
mov
push
popf
jp
mov
pop
gs
or
cwtl
jno
cmpsl
sbb
jge
xchg
push
stc
pop
int
in
and
popf
fmull
out
movsb
hlt
add
xchg
movsl
mov
dec
push
lea
out
loope
and
les
push
aas
fstl
lods
or
shl
loopne
rcl
repnz
lret
and
in
je
add
sahf
xchg
pop
mov
mov
mov
push
fwait
push
test
in
xor
insb
xchg
cmpsl
dec
js
cmc
mov
jecxz
ret
lods
push
lock
jg
fstl
lretw
std
lock
mov
adc
adc
lods
aaa
jp
mov
bound
je
test
setl
or
ja
movsl
adc
dec
pop
push
jp
inc
dec
sbb
sarl
pop
loopnew
inc
lahf
out
sti
pop
mov
pop
mov
fdivl
je
xchg
stos
imul
mov
cli
das
sub
mov
cli
sbb
adc
scas
push
push
stos
test
jp
jne
lcall
or
sub
jmp
or
lcall
and
call
ds
xor
adc
jecxz
cmp
push
cmp
sub
push
hlt
lret
inc
xchg
adcb
je
aaa
es
sub
push
or
cmpl
bound
cli
insl
cwtl
fnstenv
shlb
data16
xchg
es
lahf
and
out
inc
adc
aam
imul
or
cmp
xor
mov
sub
sbb
loopne
in
pushf
stc
pop
or
and
repz
stos
jp
xor
pop
add
inc
fwait
icebp
cli
mov
and
dec
xor
xor
mov
lea
push
sbb
in
lret
js
mov
pop
add
adc
addl
clc
adc
cmp
and
pop
sub
dec
or
dec
mov
das
xlat
xor
sahf
dec
insl
lret
popa
fstpt
or
push
sub
call
cwtl
loopne
sbb
xchg
lcall
imul
sahf
dec
push
adc
dec
pop
clc
xchg
daa
mov
fstpl
pop
xor
mov
mov
pop
pop
mov
fcompl
std
cmp
in
xlat
jbe
add
xor
push
fldt
testl
push
popf
xlat
loop
dec
inc
ret
fnstcw
aad
ljmp
ror
sbb
or
or
mov
divps
aaa
inc
fdivrs
scas
lock
pop
and
mov
add
sub
cld
or
sbb
loopne
insl
repz
movsb
mov
int3
sub
dec
test
pusha
inc
sbb
je
cltd
das
call
inc
pop
pop
js
jae
mov
scas
mulb
ficomps
fs
hlt
cmp
or
int3
sbb
call
loope
jno
sahf
pop
push
xlat
inc
inc
and
loopne
rol
dec
aam
movsl
lea
lods
push
leave
inc
push
out
cwtl
into
movsb
es
add
test
jo
scas
jno
icebp
push
jle
mov
xchg
je
std
jnp
add
imul
stos
jae,pt
call
pop
outsb
cwtl
xor
dec
mov
dec
sub
hlt
repz
stc
mov
cwtl
push
in
mov
fucomi
pop
xchg
sub
repz
enter
andb
push
sbb
in
ljmp
xchg
and
xchg
fcomps
pop
mov
ds
inc
xchg
fbstp
in
arpl
mov
push
cld
cs
icebp
pop
gs
insb
pop
stc
clc
mov
fwait
scas
mov
mov
in
xor
push
or
stc
xchg
jge
mov
pop
or
loopne
dec
orl
popa
xchg
out
imul
pop
and
in
mov
movsl
pop
mov
dec
cmp
pop
sbb
cmc
cmp
into
sbb
insl
and
shrl
dec
and
addr16
imul
jbe
jns,pn
fwait
xchg
mov
sbb
imul
pop
pop
mov
test
cmp
mov
mov
fdivr
fidivs
and
or
push
jns
sub
iret
data16
mov
mov
add
adc
enter
lods
lock
mov
sub
adc
shr
or
mov
mov
stc
fcomi
fiadds
jb
xor
popf
push
ret
adc
hlt
les
cmc
pop
inc
inc
xchg
mov
cwtl
cli
stc
loope
and
aam
and
movsb
decb
sahf
aam
push
int3
cmp
mov
cmp
add
repnz
push
and
xor
shll
cli
cmp
inc
aas
push
dec
loope
leave
jmp
int3
cmp
jge
push
jae
sbb
pop
mov
mov
scas
sbb
lock
adc
call
xor
mov
xchg
push
sub
and
loop
inc
jb
push
loop
cmp
or
dec
xchg
repz
push
jp
pusha
mov
inc
or
adc
movsb
sbb
jmp
imulb
rcrb
orl
adc
loopne
dec
lods
push
dec
inc
inc
shrb
mov
ja
hlt
cmp
rcrb
mov
icebp
aas
repz
inc
sub
push
pop
inc
clc
and
sub
push
mov
movsb
sbb
inc
push
push
dec
rcll
push
adc
jne
push
cli
sub
shlb
mov
push
pushf
lcall
xor
cmp
sub
xor
dec
mov
push
test
adc
or
incl
lods
xchg
pusha
push
dec
imul
fidivrl
dec
add
fidivs
test
mov
and
push
jbe
ss
sub
add
dec
jne
out
mov
es
adc
jl
lret
or
lret
ja
cmpl
repz
xchg
dec
dec
jp
cmpsb
popa
repnz
ljmp
int
les
sbb
pop
sbb
pop
dec
imul
cld
xor
or
pop
jo
shll
jnp
icebp
xlat
mov
dec
jbe
jmp
mov
cmp
push
sbb
aaa
ret
mov
stos
js
sbb
jge
pop
fstpl
mov
adc
sbbb
stc
pop
divb
mov
outsl
loopne
mov
mov
xor
mov
hlt
inc
sbb
pop
xor
jecxz
xor
aas
jl
xchg
jle
imul
sbbl
dec
add
scas
notb
xchg
pop
mov
jne
jae
cli
cmpsl
push
leave
mov
push
lds
sbb
add
add
adc
arpl
or
dec
xchg
and
outsb
sub
mov
adc
and
fisttps
out
push
int3
cmpsb
fsubrl
push
movsb
mov
pop
arpl
push
mov
outsl
mov
popf
mov
pop
in
in
fmulp
add
leave
add
aad
push
jns
inc
push
and
mov
xchg
inc
test
in
pop
xchg
dec
mov
negl
inc
or
and
mov
mov
xor
pop
in
dec
call
pop
cmpsb
aaa
adc
frstor
daa
sbb
xchg
es
push
testl
pushf
cmpb
jne
cwtl
out
adc
stc
xchg
xlat
xchg
ljmp
add
adc
sbbl
inc
push
push
sbb
enter
scas
push
mov
out
sub
iret
jo
das
repz
xchg
sub
sub
dec
pop
add
lcall
enter
leave
aas
xchg
sub
cmc
cld
outsb
xchg
and
aam
lret
adc
pop
popa
jb
xchg
mov
xchg
dec
fimull
cwtl
or
sbb
pop
adc
scas
arpl
cmp
shl
mov
xor
sbb
xor
lock
dec
push
lods
int
imul
inc
fisubs
push
mov
jle
jb
mov
xor
cmc
loope
sub
xchg
lcall
mov
mov
fidivs
jl
ret
enter
test
cmp
addb
int3
int
jl
fimull
push
and
cmp
push
push
inc
fsub
icebp
xchg
lcall
insl
dec
adc
cmp
addr16
mov
dec
rolb
adc
sub
in
in
dec
out
fneni(8087
faddl
loopne
push
repz
mov
ss
and
inc
cs
test
cmp
stos
push
mov
lods
pop
movsl
cs
lods
pop
andl
hlt
xor
dec
sar
jns
inc
sub
notl
daa
adc
lods
jae
ljmp
ja
jg
and
dec
hlt
jg
pop
js
imul
mov
out
stc
pop
adc
push
fstpt
adc
jp
and
sbb
sbb
or
rorb
push
jle
in
int
ja
ja
adc
scas
cmp
push
lods
loopne
push
xchg
adcl
cmp
cmp
jmp
ret
push
mov
pop
lahf
sbb
adc
push
mov
pop
pusha
lcall
outsb
push
es
jnp
dec
dec
jns
mov
pop
jns
out
sbb
aas
aam
out
sub
xchg
outsb
negl
pop
sub
pusha
mov
push
pushf
fistpl
movsb
pop
sub
testl
fisttpll
push
insl
xorl
ja
mov
lret
stos
or
fwait
ja
pop
out
add
nop
aas
int
pop
push
sbb
and
push
ljmp
shl
std
rorl
lock
dec
sti
jbe
adc
sub
xor
xchg
filds
or
add
and
lods
pop
scas
movsl
into
in
shrl
jg
push
enter
int
sub
test
stos
pop
and
adcb
pop
jecxz
in
mov
or
and
imul
mov
imul
divb
xchg
in
inc
in
fsubrs
mov
sub
das
shrb
or
inc
repnz
sub
orb
scas
xchg
push
testl
jae
dec
aad
jecxz
fcompl
jnp
outsb
inc
mov
movsb
test
loop
jns
or
fsubrl
xor
push
daa
xchg
and
xchg
add
dec
nop
cmpsl
pop
xchg
or
sub
popa
push
out
add
jle
cli
push
pushl
dec
std
lret
push
xchg
popa
dec
leave
sub
cmpsl
pop
mov
add
subl
add
push
stc
icebp
sarb
inc
icebp
inc
and
sti
xor
je
sub
into
fdivrp
imul
pushf
inc
pop
pushf
jns
fstps
adc
sbb
jg
aam
cmpsl
pusha
pusha
in
inc
loope
inc
loop
or
sub
stos
gs
add
aaa
and
mov
dec
mov
or
pop
sahf
orb
mov
inc
mov
cmp
ds
xor
shlb
jbe
xor
and
or
mov
adc
pop
rcll
loop
cmp
outsl
mov
sub
sti
adc
push
mov
aad
mov
jecxz
jecxz
ljmp
aas
dec
mov
xchg
or
xor
or
jp
aam
adc
ss
xlat
and
or
shrl
sbb
mov
mov
and
aad
cmp
mov
jne
out
xlat
inc
or
jbe
iret
mov
aaa
int3
and
aad
aas
popf
call
lock
cmpsl
jbe
fimull
lods
sub
xchg
and
lret
into
repnz
cmp
adc
jmp
lds
test
cli
adc
in
cmpsl
or
test
pop
mov
sub
xor
mov
xchg
jo
std
gs
dec
xchg
stos
roll
ja
pop
cmp
add
imul
insl
mov
jne
xor
dec
mov
int3
inc
inc
xchg
xor
and
cmp
cmpsl
loop
mov
xor
and
mov
aam
inc
jecxz
aaa
xchg
enter
mov
loope
mov
sub
dec
and
mov
repnz
inc
inc
stos
and
adc
xor
xchg
shr
push
es
fsubl
mov
ret
sub
mov
push
ss
push
jnp
push
xlat
mov
frstor
out
push
scas
gs
pop
pop
mov
cwtl
add
lret
pop
dec
test
sti
call
pop
test
sub
xor
insb
jge
mov
int3
cmp
lcall
js
sub
into
sbb
neg
sbb
ret
es
cmp
cmc
cmpsl
mov
cmpsb
lea
ja
lds
ret
dec
scas
xor
fimull
mov
jmp
add
lock
icebp
cmpsb
loop
mov
jecxz
rclb
adc
xchg
imul
es
inc
jne
pop
mov
mov
movsl
push
cmpsb
orb
mov
daa
imul
fisubrl
adc
lds
pop
push
js
sub
imul
mul
sbb
add
sub
push
mov
out
or
jae
iret
mov
or
push
out
dec
and
scas
mov
addr16
incb
mov
lret
mov
mov
pop
sbb
pop
ret
mov
mov
daa
aad
adc
mov
sub
scas
inc
in
mov
or
fsts
sub
popa
dec
cmc
push
xchg
fwait
je
std
cmc
cmc
adc
repnz
cmp
ss
add
xor
les
cmpsl
push
sub
std
and
call
stc
mov
adc
add
out
inc
shlb
inc
mov
call
and
mov
aaa
sub
inc
scas
loopne
adc
dec
xchg
pop
or
cmc
call
cltd
test
or
mov
cltd
dec
push
sub
and
cltd
movsl
aad
pop
push
push
ret
loope
push
mov
jmp
shlb
in
out
cmp
ret
inc
sub
sbb
shlb
adc
sub
lcall
jns
mov
std
sbb
ljmp
xchg
ss
imul
or
test
lods
ret
xchg
aam
sbb
xchg
cmp
fdiv
imul
mov
sbb
lret
scas
adc
enter
pop
ret
or
mov
cwtl
pop
sub
in
xor
fldt
mov
cmp
push
and
data16
push
daa
into
loopne
sub
rclb
lds
test
enter
mov
xchg
inc
or
iret
shr
and
inc
or
dec
adc
leave
sbb
stc
lcall
icebp
cmc
inc
add
es
test
pushf
mov
xchg
sub
mov
pusha
int3
lcall
stc
cmp
pop
scas
sbb
out
push
jle
dec
lods
addb
fstps
and
add
cmc
mov
dec
dec
hlt
xchg
les
das
aam
and
movsb
pop
jg
xchg
inc
cmc
mov
les
mov
add
add
in
les
popf
jmp
ret
push
hlt
outsl
push
ja
stc
fildll
and
cld
leave
xchg
in
mov
xchg
ds
sbb
jnp
xchg
js
andb
fmuls
dec
stos
cmp
jmp
fucomip
mov
fmull
imulb
cwtl
aaa
fdivrl
xor
ss
mov
test
imul
iret
inc
cmp
jbe
inc
push
jne
push
adc
addr16
cmp
adc
xor
imul
xchg
aam
cmp
mov
push
das
dec
inc
xchg
into
cmc
call
cli
pop
pop
or
xor
push
push
jnp
or
push
inc
jno
roll
jmp
add
push
out
clc
fs
pop
xorl
loopne,pt
dec
xlat
jnp
cmc
or
add
mov
jo
sbb
cmp
jnp
loopne
ja
cmpsb
call
stos
mov
mov
cwtl
xorl
dec
sahf
in
cli
sbb
ret
rorb
es
imul
jge
icebp
push
call
pop
popa
int3
mov
xor
into
insl
jae
xchg
pop
cmp
mov
ret
and
arpl
sub
fnstsw
xchg
cs
ja
xchg
movsl
mov
fidivs
imul
cmp
nop
aas
mov
or
cs
cmpsl
stc
mov
jl
push
test
pop
out
rcl
test
movsl
mov
sub
bound
xchg
or
out
movsl
dec
lds
jmp
in
sbb
int3
fnop
xor
cmp
xor
xchg
in
xor
or
push
mull
mov
lret
popf
adc
xor
push
cmpsb
adc
out
movsl
clc
testb
lods
lret
or
adc
scas
jne
cmpl
mov
insb
ret
fmuls
sub
andl
sti
aaa
rclb
sarl
inc
or
and
ds
rep
daa
in
mov
shl
lods
repz
stc
pop
lds
pop
dec
lret
enter
pushf
dec
add
jbe
lcall
lea
lcall
push
jl
cltd
sub
sub
cmp
mov
imul
jne
adc
mov
out
cmc
js
pop
sahf
cld
cmp
dec
mov
lret
and
mov
fnsave
cld
movsl
push
xor
push
stc
stos
xchg
mov
test
popl
mov
lret
enter
mov
cmc
test
inc
out
das
mov
add
and
mov
sbb
gs
mov
sbb
xchg
add
orl
imul
add
aam
gs
out
aaa
std
int3
add
out
jp
std
xchg
test
leave
scas
push
insb
fdivrs
enter
cld
icebp
jmp
lea
sbb
pop
roll
and
shrl
daa
pop
push
push
mov
cmp
ds
loop
xor
dec
test
and
loop
push
and
or
xchg
cmp
je
push
sbb
cvtpi2ps
sahf
mov
fstl
pop
bound
xlat
leave
mov
fisubl
push
add
jmp
aam
in
dec
aaa
imul
mov
add
ja
adc
rcl
sbb
in
xor
shl
cmp
or
jge
pop
aaa
jo
jne
add
cmpsl
aad
jnp
adc
mov
sub
mov
pop
nop
mov
mov
inc
fstps
push
mov
movsl
in
lcall
mov
xchg
pop
xchg
add
pop
cmp
pop
jbe
mov
push
not
aam
xor
ret
cmp
dec
dec
dec
out
sub
xchg
ret
jmp
jle
scas
fabs
test
cltd
cmp
xchg
jmp
and
aam
and
pop
std
ja
jmp
in
push
adc
ja
lock
sub
push
lret
dec
dec
pop
mov
je
mov
repz
aaa
mov
sbb
out
or
xchg
or
int
cs
gs
xchg
pushf
aas
repnz
and
mov
in
mov
mov
loop
std
daa
xchg
and
xchg
fdivrl
sbb
cmp
aaa
jecxz
adc
and
mov
outsb
sub
and
je
pop
push
scas
mov
pop
fdivp
out
lret
inc
ret
lret
sti
into
call
loope
dec
jmp
cmp
int
out
outsb
add
shrb
push
hlt
and
jle
divb
cmpl
xchg
iret
xchg
jbe
xchg
fstpt
aas
and
dec
inc
fnstsw
adc
mov
and
out
mov
and
out
leave
imul
shll
cs
push
xchg
jl
scas
fcompl
mov
sahf
aaa
xor
adc
gs
loopne
jecxz
push
es
or
cltd
mov
add
pop
inc
sbb
rcrl
pop
push
stos
mov
inc
gs
or
leave
pushf
mov
inc
jmp
push
or
and
jno
and
cmp
in
rcl
jmp
add
mov
xchg
mov
pusha
insb
and
mov
adc
add
add
fwait
xchg
sbb
cmp
test
dec
lahf
test
lock
sub
mov
movsb
int3
mov
jl
cmp
mov
xchg
dec
or
inc
rcrl
mov
shl
push
xchg
jb
xor
mov
je
adc
cmp
addb
xchg
inc
add
fs
inc
mov
int
in
insb
ds
lret
jo
xchg
xchg
fdivrl
out
enter
jne
adc
repnz
pop
pop
in
jne
out
push
iret
push
add
push
mov
cmc
cmpsb
sahf
shlb
pushl
push
test
sbb
pop
jg
les
add
and
outsl
jg
in
dec
adc
mov
xor
rcl
xchg
enter
cwtl
add
pop
jbe
cmpl
enter
mov
test
adc
mov
cmc
cmpsb
std
push
jns
mov
sbb
adcl
das
push
je
iret
out
and
fimuls
mov
lds
shll
pushf
add
cmc
stc
and
jle
cmpsl
repz
sbb
cltd
adcb
sbb
cld
lds
out
and
inc
mov
adc
test
sub
dec
fwait
sbb
inc
mov
lcall
pushf
sbb
stos
pop
outsb
sar
fcmovnbe
and
cltd
lock
lcall
and
lods
cld
pop
test
mov
jno
test
xchg
enter
inc
and
sub
mov
xor
stos
jmp
in
iret
push
mov
stos
and
cmp
insl
loop
mov
xor
std
mov
push
jmp
sub
mov
and
cmpsl
ds
push
push
xchg
sbbl
incl
mov
mov
fsubrp
and
jl
shlb
mov
pushf
incb
and
repnz
clc
mov
lcall
cmpsb
jb
jb
pop
mov
adc
test
mov
add
shl
xlat
dec
mov
lahf
in
xchg
icebp
dec
sub
pop
add
mov
mov
adc
stos
lcall
jns
or
mov
pop
add
cmpsl
xor
pushf
mov
mov
and
dec
jno
fsts
fadds
push
cmp
jne
sbb
dec
sbb
xor
ret
cwtl
gs
dec
and
icebp
lock
dec
mov
mov
ret
icebp
pop
add
pop
jmp
push
loope
mov
add
jns
dec
or
dec
lock
dec
or
sub
in
xchg
data16
cmp
push
pushl
xchg
adc
mov
sub
jno
es
call
or
sub
or
aam
nop
jmp
ja
call
push
shrb
movsl
push
sahf
jb
fwait
aaa
inc
or
inc
icebp
xor
push
jp
ds
shlb
addb
addr16
mov
mov
daa
inc
ss
xchg
and
xchg
cmp
dec
out
inc
aas
xchg
fnstenv
jge
mov
lahf
and
fnsave
cs
dec
xlat
test
call
mov
dec
mov
jns
mov
test
sbb
and
mov
cltd
and
jle
in
add
sub
cli
lock
fisubrs
add
loop
loop
es
pop
fmul
jns
enter
sbb
and
rcll
mov
mov
inc
or
dec
xor
fnstsw
mov
mov
cwtl
ret
adc
pushf
mov
movsb
in
mov
sub
daa
popa
lods
iret
inc
addr16
cmovne
lea
push
xchg
test
ret
les
mov
or
add
push
cmp
xchg
mov
cwtl
outsb
in
mov
hlt
ss
push
dec
int3
mov
xchg
mov
out
xor
add
mov
adc
jecxz
inc
shll
jp
js
and
push
sbb
jmp
push
nop
out
out
inc
pop
mov
loopne
rorl
lcall
jg
jmp
jmp
repnz
xchg
popf
int
cltd
dec
or
orb
inc
jmp
xor
lret
jmp
and
mov
hlt
xor
xchg
sub
out
sub
push
mov
daa
pop
dec
mov
rcrb
and
rcll
pop
mov
cmp
jnp
and
inc
popa
ds
cmc
sahf
rolb
aaa
clc
popa
imul
or
and
pop
xor
and
lcall
mov
xor
jae
xor
ficomps
adc
mov
imul
xlat
andb
fdivl
repnz
jl
in
mov
xchg
sbb
popa
fcmovne
or
sub
ljmp
or
sbb
jno
js
sub
addr16
jl
pop
aad
stc
scas
jp
cmp
int
inc
lahf
rorb
cli
in
insl
add
push
add
mov
pushf
mov
xchg
cmp
movsb
pop
xor
dec
lcall
cmp
sbb
jne
and
pusha
stos
subl
adc
sub
or
out
icebp
sub
push
jne
adc
ds
xlat
dec
dec
or
stc
mov
repz
fildll
scas
pop
dec
mov
mov
and
repnz
rcrl
ja
iret
lcall
inc
fbstp
pmulhw
jmp
ret
cmpsl
divb
orb
pusha
jg
mov
stc
cmp
les
packuswb
out
mov
out
ss
stos
jnp
cmp
dec
or
cmp
pop
movsl
jb
adc
mov
mov
fcom
sub
fsubrp
jb
fcmove
jne
leave
jl
push
pop
hlt
lds
imul
lahf
iret
mov
pop
dec
cld
or
inc
pop
xchg
push
sub
sahf
pop
sti
cmovno
pop
xchg
out
inc
push
push
scas
gs
inc
pusha
mov
scas
xchg
cmp
ss
push
xchg
pop
mov
xor
out
subb
cwtl
bound
push
xor
lret
cmpsb
mov
mov
das
scas
mov
bound
pop
mov
cli
push
add
cli
sti
cmp
andl
cmp
cmc
sub
lea
in
int
lahf
test
loopne
jb
sub
push
les
inc
stos
scas
xchg
dec
cli
fdivr
movsb
les
push
jl,pt
sbb
add
sbbb
ss
pop
insl
pop
aam
push
movsb
popf
or
push
jne
jne
lods
xor
pop
mov
cltd
jmp
inc
out
xchg
jae
stos
fidivrs
cmp
or
jbe
subl
testb
xchg
gs
or
dec
push
mov
adc
stc
insl
push
lock
mov
int
stc
lods
inc
dec
xor
dec
mov
and
outsb
test
mov
add
or
loopne
xchg
mov
dec
push
popf
fsubp
adc
movlps
or
popa
and
pop
cmp
arpl
out
pushf
lods
jg
daa
fwait
into
cmp
inc
cmp
sub
mov
std
mov
push
sbb
sub
fldcw
push
or
orl
jo
sbb
data16
std
jb
mov
cmc
jp
arpl
loopne
xor
lea
lods
push
jbe
das
adc
fldt
fwait
repnz
orl
fwait
int3
imul
jp
fidivrs
mov
dec
cmpsl
popf
push
mov
or
mov
xor
jl
repnz
cmc
mov
jb
or
sub
lds
xor
fcompl
addr16
add
push
push
das
ljmp
scas
mov
and
shrb
mov
lea
movsl
pop
lahf
lret
xlat
sub
and
xchg
shrb
test
xchg
rcr
and
add
xor
push
test
add
sub
add
stc
addr16
cs
dec
scas
ret
movsb
adc
mov
pmullw
imul
sti
test
push
mov
aas
int
add
sbb
and
les
and
loop
add
xchg
push
push
mov
add
mov
sti
mov
dec
and
inc
out
lea
dec
push
mov
js
pop
sub
outsb
lahf
mov
xchg
arpl
popf
sub
fs
das
loop
out
push
xchg
out
leave
hlt
mov
dec
lods
repz
jmp
xor
mov
push
jnp
fnsave
sbb
push
xchg
pop
push
pop
mov
mov
mov
pop
or
or
loopne
fnstcw
stos
mov
fadds
push
mov
mov
xor
cs
lods
add
mov
adc
lcall
pop
shll
js
jne
mov
adc
mov
push
stos
adc
push
pop
cmp
stc
push
clc
push
jo
push
das
xor
pop
xchg
cld
jp
jl
cli
adc
and
popf
add
push
xor
add
popf
lcall
sbb
sub
int
dec
repz
imul
push
push
jns
mov
sahf
fwait
push
pop
adc
push
jp
xchg
push
mov
das
xchg
mov
mov
in
stc
jae
xchg
std
fsubl
xchg
addr16
push
adc
mov
add
fs
out
lods
stos
jl
shll
jg
dec
std
das
ret
cmp
ret
addr16
fnstenv
jp
sub
std
bound
cmp
ret
int3
jae
lds
push
lock
add
add
sti
jno
rorb
xchg
movsl
add
sub
fmuls
ja
aad
mov
leave
not
imul
fcmovnbe
repnz
and
je
rorl
scas
nop
les
or
pop
or
lock
sbb
or
sub
push
out
clc
push
or
dec
sub
mov
movsl
insb
push
aaa
mov
movsb
xchg
iret
imull
xchg
adc
dec
or
xchg
sub
fwait
cmp
lahf
daa
jp
popf
pop
sahf
jle
mov
into
mov
mov
sub
cmpsl
push
cld
iret
loop
adc
fbld
std
adcb
in
push
add
addl
sbb
imul
in
sub
test
mov
mov
inc
outsb
ficompl
loopne
push
mulb
je
out
out
negl
mov
mov
sti
and
add
cmpsl
loopne
push
arpl
stos
or
pop
xchg
inc
push
pop
or
push
imulb
scas
mov
ss
clc
fisubrs
xchg
out
xor
icebp
xor
pop
adc
int
cwtl
or
dec
inc
mov
call
xchg
imul
sbb
cli
pusha
cli
out
mov
aas
es
imul
fdivs
pop
ja
les
adc
mov
dec
mov
lock
fsubs
movsl
loope
xchg
out
pusha
and
pop
ljmp
mov
lods
out
sbb
mov
xchg
pop
adc
add
mov
pop
aad
mov
mov
div
xchg
inc
jle
enter
xchg
jae
and
call
pop
aaa
insl
mov
jg
data16
inc
nop
gs
testb
pop
imul
dec
mov
cmpl
outsl
aad
cmp
or
sub
mov
add
xchg
addr16
sub
jmp
pop
inc
jo
into
jno
adc
cwtl
cltd
pusha
mov
les
mov
adc
movsb
inc
push
mov
dec
aad
mov
xor
ficoml
rorb
jnp
mov
add
sub
stc
outsb
mov
dec
lret
jg
xchg
nop
cs
xchg
mov
jbe
stos
dec
mov
push
fwait
xchg
loop
push
cmp
adc
in
ds
sub
fimuls
stc
int3
insb
out
clc
int
cmp
filds
sub
fisubrl
gs
fildl
xor
jle
pusha
cmp
test
sub
jl
sub
ror
xchg
adc
loopne
icebp
lahf
and
lea
fnsave
xchg
mov
sbb
test
push
mov
mov
cmp
push
imul
mov
dec
sbb
push
pop
push
sbb
rorb
inc
shll
inc
iret
cmp
test
fmull
xor
mov
arpl
mov
xchg
mov
adc
test
jp
scas
mov
mov
outsb
inc
subb
outsb
sbb
push
shl
push
scas
xchg
jns
sbb
xchg
mov
imul
repnz
test
inc
xchg
pop
cltd
mov
sbb
ret
lcall
sarb
xor
fcomps
outsl
push
sbb
daa
in
outsb
xor
mov
lods
pusha
sub
sub
xchg
and
call
arpl
outsl
inc
or
subb
mov
das
insb
movsl
negb
add
testb
jmp
add
add
adc
and
imul
insb
inc
sti
out
cmpsb
std
fdivl
fisubrs
rcr
pop
imul
lods
jne
sti
es
movsb
or
add
mov
cmp
push
cmpsb
loopne
cmp
mov
push
out
and
xor
sub
push
clc
test
gs
inc
mov
in
mov
xchg
pop
dec
jge
jp
fadd
pop
xchg
cmp
cli
lds
or
shr
adc
jmp
stos
push
xor
cwtl
jle
pop
push
ss
jge
test
insb
sub
daa
push
add
cmpsl
inc
sbb
call
mov
ds
insl
mov
jg
or
dec
movsl
jl
das
in
std
fwait
sub
dec
rcl
inc
xor
inc
jnp
xor
jo
jno
cmp
or
shlb
cmp
jg
inc
mov
jl
push
xchg
xchg
lods
lods
shll
fucom
stos
js
inc
add
adc
mov
cs
and
push
adcl
sti
cmp
test
dec
iret
push
shll
popa
add
stc
xchg
add
xor
jnp
psubw
int
rol
mov
adc
addr16
inc
mov
in
leave
jg
push
sub
jb
push
lahf
scas
pop
insl
push
pop
sub
or
jo
mov
cld
xor
outsb
pushf
mov
push
iret
dec
test
inc
stos
jnp
jmp
pop
push
jmp
pop
std
pop
mov
jl
fimull
push
in
mov
leave
loop
pop
loopne
stos
fcoml
push
or
imul
or
jle
cmp
inc
test
mov
mov
sub
sahf
leave
fs
scas
jle
sub
add
and
out
rorl
mov
jp
insl
setns
cmovge
dec
push
aad
enter
dec
popa
int
mov
out
xorb
mov
sarl
hlt
add
sub
es
js
mov
xchg
xlat
cmp
mov
push
xchg
bound
mov
dec
aaa
push
jbe
sub
pop
notb
push
add
aas
subb
pop
xlat
cli
adc
rcrl
test
mov
testl
das
cld
ret
imul
sub
xchg
dec
loope
jmp
leave
imul
add
shlb
cs
ljmp
mov
icebp
xor
push
inc
scas
push
cs
imul
loope
lret
mov
ret
dec
addr16
mov
dec
lods
inc
cmp
dec
and
mov
rcll
xchg
lret
jmp
and
dec
pop
jmp
pop
rcll
nop
enter
cltd
ss
jno
or
pop
outsl
inc
xor
jne
enter
xor
mov
mov
movntps
cltd
pop
enter
std
call
into
rcl
push
push
lret
cmc
dec
add
imul
aam
sub
imul
or
leave
fsubs
shll
aad
mov
inc
movl
test
outsb
inc
push
outsb
cwtl
les
arpl
pop
ret
ljmp
hlt
xor
lcall
xor
fdivl
dec
mov
fists
inc
jno
clc
mov
leave
add
shlb
incl
vpperm
push
imul
aaa
cmp
xor
dec
mov
je
leave
pop
push
sbb
dec
inc
pop
mov
mov
fstpl
sub
mov
jb
sbb
repnz
dec
push
push
psubw
push
sub
sub
jg
int
inc
sbb
or
jmp
adc
les
or
mov
out
inc
stos
add
inc
mov
push
iret
push
popf
icebp
jge
push
xchg
aam
pop
fs
sub
push
jl
mov
bound
mov
andl
xor
rcrl
stc
xchg
stc
cmpl
pop
push
fldl
push
adc
cwtl
das
mov
adc
cmp
out
or
shlb
je
pop
cwtl
test
rorl
or
nop
divl
shrb
cmp
cmp
or
ficoml
out
out
std
mov
xor
xchg
nop
testl
inc
mov
adc
and
mov
jg
lcall
xchg
jg
add
pop
sarb
inc
cmp
push
and
and
inc
sub
call
inc
inc
dec
jp
xchg
loopne
mov
cli
or
or
stc
addr16
inc
cltd
pop
jb
and
adc
pop
mov
adc
or
lahf
call
sbb
into
jecxz
idivb
incb
mov
mov
fucomi
cltd
push
test
sti
fsubs
dec
cmp
mov
rolb
js
mov
cld
jmp
mov
push
in
pushf
add
push
xchg
mov
fwait
bound
jle
sbb
mov
xor
inc
push
in
xor
mov
and
pop
mov
enter
pushf
leave
inc
mov
xchg
in
and
push
push
push
push
test
outsl
loope
negb
mov
mov
pop
xor
jns
pop
mov
lret
sbb
cmp
enter
out
cmpl
in
add
push
mov
ret
js
pop
jo
cmp
xor
xchg
xor
bound
jl
or
and
xor
sub
mov
xchg
jbe
jb
push
stc
mov
xchg
icebp
pop
add
shlb
and
push
mov
jnp
shrb
aas
push
xchg
pop
or
aam
push
sbb
mov
lret
popa
mov
and
and
std
scas
xchg
mov
test
cmpsl
sbb
lea
pop
cmp
movw
lods
and
xor
adc
inc
adc
cmp
dec
pop
jp
jne
andb
clc
cmpb
pop
lds
sbb
shlb
lahf
mov
aas
cmp
lahf
mov
jb
aam
out
sbb
aaa
mov
pop
fisubs
or
dec
push
movsb
dec
jnp
mov
pop
xor
inc
or
movsb
add
ja
inc
jmp
mov
sub
loopne
cmp
ret
jb
inc
xchg
js
lods
mov
testl
jge
jne
out
pop
insl
lods
xor
adc
es
pop
aaa
lods
mov
sti
addb
lods
dec
lahf
fwait
das
in
test
and
sar
xchg
cmp
test
cmp
fisubl
pop
pop
sbb
xor
cli
cmpsl
lock
push
adc
mov
mov
xchg
jg
add
add
loop
adc
push
xchg
mov
xchg
loopne
xor
push
dec
push
jb
mov
cmpsl
test
shrb
push
dec
addr16
mov
or
jl
dec
jae
push
clc
sbb
aam
cmp
add
jbe
push
ret
mov
jae
lea
dec
movsl
pop
dec
arpl
xchg
aas
cmp
push
sub
cmpl
add
jmp
xchg
lret
pop
mov
sti
cld
push
or
movsl
fcmovu
push
scas
lods
mov
jp
mov
mov
push
or
pusha
jo
push
mov
or
mov
mov
orb
sub
cmp
add
pop
push
sub
mov
adc
xchg
scas
push
or
dec
dec
cld
pushf
inc
inc
mov
pop
fldcw
cld
jbe
inc
jns
bound
or
or
xchg
and
jle
jb
push
xor
adcl
mov
and
iret
cmp
lret
cwtl
add
pop
pop
jnp
add
dec
adc
cmpsl
xchg
ds
xchg
pushf
notb
mov
mov
call
inc
cmpsb
out
xchg
mov
mov
popf
or
mov
mov
jle
pop
jne
push
sbb
sub
cli
enter
incl
mov
jle
in
iret
jl
push
push
xchg
outsb
cmc
mov
and
imul
pop
jno
movsb
xor
imul
loope
and
adc
push
popf
jbe
lea
lea
sub
sbb
xor
mov
jno
jae
mov
add
inc
loopne
ficompl
lret
or
sbb
push
les
iret
cmp
or
lds
int
cmp
dec
pop
cwtl
mov
push
jbe
imull
es
inc
xchg
pop
mov
lret
jbe
xor
cltd
shrl
mov
addb
scas
in
jmp
dec
aad
ret
inc
int3
lret
adc
adc
xor
test
cltd
cltd
scas
in
fildll
cmc
ret
inc
les
lret
mov
mov
bound
add
add
jge
xor
xchg
inc
hlt
cmp
jae
test
sub
aaa
int
test
jmp
xor
lock
add
cmp
mov
lods
lahf
push
sub
out
jg
xchg
and
lock
paddd
addl
adc
adc
nop
daa
mov
mov
or
outsb
ret
inc
shlb
ss
mov
and
jmp
adc
mov
jle
sub
mov
stos
sub
test
aas
add
jno
jecxz
enter
lahf
inc
ficomps
xor
or
jns
lret
int3
inc
xor
lds
and
mov
inc
or
mov
shlb
lret
negb
mov
xchg
jne
and
inc
sarb
inc
cmp
nop
out
in
in
lret
add
adc
mov
in
imul
pop
jecxz
es
mov
outsb
adc
dec
fmul
sub
addb
cli
movsb
inc
lretw
hlt
movsl
pop
js
rclb
xchg
rcrl
scas
fiadds
mov
cli
popf
outsb
scas
mov
sbb
cmp
jae
repnz
jno
inc
and
cli
jp
rcll
lods
add
jae
lahf
push
mul
ret
adc
cs
sbbb
aas
nop
call
cmc
jne
or
sub
lock
addr16
and
cs
xor
mov
ror
inc
add
cmpsl
outsb
test
adc
pop
ret
fsub
jle
jle
adc
sub
dec
arpl
fcomps
aad
in
dec
fs
sbb
shl
ficoml
inc
inc
inc
inc
repnz
and
jns
or
pop
xchg
jno
add
out
call
cs
mov
hlt
stos
and
cmp
addr16
push
dec
lock
fwait
dec
adc
cwtl
in
push
xchg
aaa
cmp
push
sub
stc
mov
sbb
dec
sti
fwait
xor
fbld
mov
int3
movsl
dec
mov
inc
pop
add
daa
add
mov
fimull
lret
lahf
fldcw
push
push
mov
ds
imul
cli
lahf
lods
adcb
or
sbb
sub
mov
mov
lods
enter
xchg
fdivs
mov
in
pop
lods
jnp
popa
jne
xorb
pop
sbb
aad
jl
jp
fstpl
out
mov
sbb
pusha
cmp
aad
mov
sub
in
mov
aaa
out
rcll
sahf
int
pop
hlt
add
mov
imul
xor
adc
cmp
popf
lret
addr16
pop
popf
dec
jmp
ljmp
repz
leave
ret
movsl
movsl
add
jne
test
ss
and
xchg
sbb
popf
inc
push
fs
mov
inc
xchg
faddl
les
psadbw
into
sub
test
push
add
ret
popa
aam
mov
aam
sahf
mov
xchg
xor
fld
push
push
dec
cmp
stos
jp
xchg
push
mov
rolb
cwtl
push
test
addr16
xor
lea
mov
dec
push
push
add
push
lods
fldcw
lret
push
mov
in
in
outsl
insl
xor
mov
cltd
outsb
scas
mov
out
jmp
shrl
jg
scas
inc
mov
pop
rclb
out
sub
xor
test
scas
cld
xor
scas
icebp
aam
jne
lret
cs
jle
test
pop
in
xchg
mov
inc
in
in
sahf
pop
mov
xchg
rcrb
pop
inc
fildll
lds
push
movsl
aam
mov
dec
popf
fistps
xchg
jecxz
call
adc
sub
fucom
or
mov
sar
das
or
in
push
pop
lock
cld
mov
orb
and
or
icebp
ds
mov
mov
mov
dec
les
into
xlat
leave
negl
sub
sub
pop
imulb
test
adc
sbb
icebp
pop
in
popf
cs
pop
jecxz
fdivl
fiadds
or
shll
test
inc
xor
sbb
popa
adc
push
fwait
cmpsl
loope
or
or
sbb
inc
push
add
or
stos
ret
mov
dec
mov
jg
adc
mov
shlb
out
fstpl
mov
stos
jle
pusha
adc
out
mov
push
adcb
xchg
mov
xlat
inc
cmc
pop
sbb
push
and
dec
mov
sbb
cltd
push
lahf
jbe
decb
or
mov
sub
sbb
add
adc
dec
ror
scas
aam
inc
cs
or
roll
mov
out
jg
cmc
cmpsb
cmp
adc
and
ljmp
mov
shll
xchg
and
mov
and
xor
movsb
mov
flds
mov
lods
adc
aad
es
jge
inc
mov
outsb
jl
iret
in
cmp
cmc
fmull
cmp
cmc
test
sbb
xchg
loope
or
enter
dec
aam
add
push
into
mov
fstpt
cmp
lods
or
jns
mov
imul
imul
or
cmpsb
popf
sbb
fcoms
push
xor
es
cmp
int
std
insb
pop
int3
xchg
mov
dec
or
mov
xor
inc
cld
adc
sub
pop
divb
insl
shlb
jns
popf
sahf
aaa
mov
out
cli
sbb
lret
clc
adc
outsb
jle
rorb
push
stos
mov
xchg
shlb
xchg
pop
lock
dec
fnstenv
ficoml
sub
out
or
sbb
push
insl
icebp
xor
sub
push
lahf
mov
mov
es
in
cld
add
ror
cmp
icebp
xchg
dec
pop
dec
and
mov
inc
in
inc
adc
es
mov
pusha
push
jno
and
ss
data16
movsb
xor
pop
cltd
or
dec
jg
rclb
pop
bound
inc
int
test
scas
pop
sbb
cmp
push
push
xlat
cmp
xor
dec
and
xchg
or
outsb
jo
notb
and
lret
mov
dec
sub
out
pop
aam
sbb
fwait
xor
movb
ja
fwait
arpl
add
loop
ds
mov
lahf
xchg
rorb
pop
or
pop
mov
cmp
cmp
mov
xchg
sbb
xchg
or
daa
lret
ja
test
pop
cmc
xchg
jl
or
sub
sub
cmpsb
sub
add
aad
das
push
stos
je
jge
sbb
and
cmp
outsb
add
push
sbb
sti
dec
ret
sub
jns
loopne
add
daa
adc
inc
mov
add
adc
push
insl
test
in
add
ret
cld
push
out
inc
jmp
mov
fisttpll
pop
in
movsl
and
rcl
lock
icebp
in
rolb
inc
jb
scas
add
pop
jecxz
mov
in
pop
pop
xor
lds
jl
out
jg
xchg
sti
inc
sbb
mov
pop
sbb
aam
cwtl
push
xchg
ds
inc
mov
sub
ja
outsb
mov
and
jo
adc
pusha
sub
mov
dec
sbb
cmp
notb
inc
mov
test
fsubl
mov
add
out
and
xchg
cmpsl
mov
push
fcomps
pop
sub
je
int3
inc
cmp
fisubrl
or
mov
sub
in
sub
add
fldt
xchg
adc
add
sub
mov
leave
mov
pop
jbe
xchg
push
or
pop
add
push
push
in
rcr
jae
mov
xor
out
xchg
or
cwtl
push
jbe
add
inc
xchg
mov
or
jge
mov
sub
pop
xchg
imull
sub
sbb
in
pop
jne
jecxz
sub
aad
hlt
jne
aas
out
movsb
cs
inc
das
inc
popf
adc
dec
or
push
push
add
mov
mov
pop
and
mov
push
clc
sahf
in
inc
dec
jno
or
xchg
imul
inc
mov
mov
fsubr
out
sub
inc
inc
cmp
pop
sub
adc
test
aas
xchg
bound
aad
cld
mov
sub
or
mov
push
subl
mov
xchg
outsb
xchg
sbb
mov
or
sbb
inc
xor
aaa
inc
and
mov
pop
cli
jae
lods
sbb
xor
out
push
push
sub
stc
lret
xorl
add
fidivs
sub
ret
dec
and
and
sub
xor
subb
fsubrl
xor
mov
mov
imul
mov
xchg
jne
or
stos
stos
imul
ficoms
icebp
mov
inc
mov
pop
mov
ret
fnstcw
and
pop
dec
mov
sbb
pop
aad
into
push
or
in
cmp
andb
xchg
call
cltd
cltd
repz
mov
sub
mov
jo
mov
and
xchg
xchg
sub
insl
mov
imul
xor
cmpsb
inc
dec
mov
hlt
cmp
mov
js
cmc
mov
ret
stos
mov
mov
add
pop
ja
imul
mov
idivb
inc
lcall
std
in
lcall
inc
inc
test
and
movsl
iret
imul
add
xor
xchg
addr16
sti
xlat
jl
popa
push
pop
aaa
leave
pop
sbb
lods
bound
cltd
xchg
call
enter
jbe
leave
arpl
aam
pop
mov
mov
out
xor
push
inc
xchg
mov
sbb
sahf
pop
add
outsl
sbb
cmp
call
sbb
int3
data16
mov
mov
lods
lds
xchg
ret
push
icebp
and
add
popl
adc
repz
push
out
xlat
push
jmpw
xchg
test
mov
es
daa
cmp
fsubrs
push
inc
popf
iret
jmp
jecxz
mov
cmp
aas
insb
xlat
mov
and
in
es
pusha
mov
out
addr16
inc
int3
xchg
mov
push
sbb
xchg
stc
daa
hlt
ret
roll
xor
idivl
cli
aad
mov
lret
adc
es
vpcomq
ret
movsb
xor
dec
mov
push
int3
lods
fwait
xor
push
movsl
pop
inc
pop
pop
cmp
ret
push
pop
xchg
push
psubq
fstps
stos
jno
int
sbb
dec
loope
repnz
jb
out
pop
fcmovnbe
addr16
sbbl
flds
push
or
lret
das
sub
sbb
mov
dec
daa
outsl
gs
data16
dec
fsubrs
xor
pop
jb
test
xor
pop
sbb
or
and
jmp
push
daa
and
pop
hlt
insl
mov
mov
lret
mov
mov
lods
adc
scas
xchg
dec
and
repz
xor
jl
cmpb
fidivs
adc
xchg
pop
addr16
mov
out
sbb
mov
addl
adc
fwait
sbb
xorb
jae
xor
jno
or
fs
das
mov
mov
mov
stos
push
ja
xchg
adc
daa
subb
and
inc
add
mov
push
sbb
sbb
outsb
lock
mov
xor
dec
xor
in
dec
mov
and
fstps
push
jge
shll
mov
xchg
stos
les
dec
fiadds
dec
addr16
sub
dec
sub
outsl
pop
xlat
es
lahf
mov
fdivrl
in
cs
xor
fstpt
aaa
leave
or
mul
in
dec
mov
stos
mov
jbe
xchg
das
pop
or
push
scas
mov
sbb
lcall
jmp
nop
pusha
cltd
sti
mov
bound
mov
jnp
pop
jg
or
scas
mov
dec
push
cs
fiaddl
repz
pusha
es
xlat
fsubrl
push
int
loopne
dec
mov
mov
fdivr
mov
pusha
outsl
add
arpl
adc
int3
test
xlat
inc
add
loop
xchg
mov
and
push
in
into
adc
pop
push
sub
xchg
jmp
cmp
push
and
data16
and
xor
adc
and
xor
addl
test
xchg
nop
mov
mov
cmp
test
fidivs
xlat
insb
out
in
cmp
mov
sbb
ljmp
imul
sub
add
push
int
xlat
xor
repnz
lds
jecxz
movsl
or
xchg
mov
inc
iret
inc
cltd
cmp
jnp
cmpsl
dec
sarl
cwtl
mov
mov
je
sub
cwtl
inc
mov
addr16
les
xor
push
in
cmpb
bound
jle
push
repz
jb
fcoml
mov
inc
adcb
std
fidivrl
bound
mov
loopne,pn
cmp
sub
addl
loop
xor
sub
shll
sub
cmp
aaa
insl
popa
add
push
nop
cwtl
push
mov
jbe
pop
dec
xchg
lods
mov
fbld
push
mov
rorb
out
xor
inc
dec
mov
dec
push
dec
xor
enter
icebp
fwait
aas
adc
jno
mov
cmpsb
rorb
lahf
ret
mov
pop
lcall
jp
cld
popf
test
pop
sbb
and
aaa
xchg
jae
ja
scas
and
movl
xchg
mov
sub
dec
scas
lret
sbb
add
mov
in
or
je
inc
or
stc
fxch
cmp
jns
push
xchg
outsl
sahf
rcl
mov
movsl
outsl
cltd
and
mov
pop
push
nop
mov
jns
pop
mov
adc
les
and
add
mov
or
mov
insb
mov
push
xor
mov
jae
loopne
jecxz
mov
add
jbe
inc
daa
iret
push
inc
int
lahf
cmpsb
dec
xor
sub
jbe
jnp
cmp
dec
adc
jo
push
sbb
or
jg
cmp
mov
fistl
xchg
out
mov
sub
lods
mov
mov
hlt
fildl
adc
in
testb
xchg
ret
mov
or
cmpsl
mov
sbb
repz
ljmp
jp
or
jge
fstps
push
icebp
adc
push
mov
jle
pop
cs
stc
lahf
mov
xchg
fs
push
and
cltd
ja
sahf
push
adc
in
test
mov
xor
xchg
add
xchg
push
out
sub
fcoml
push
mov
add
loope
in
arpl
cmp
xchg
aaa
test
fisubrl
pop
pop
dec
cmp
adc
mov
fildll
add
and
sbb
lahf
out
and
push
lea
loop
cmp
mov
jl
mov
xchg
lock
mov
fsts
dec
aaa
xchg
pop
lcall
test
clc
cmp
fimuls
jbe
cs
push
rep
or
cltd
xor
add
xchg
insb
les
ret
jo
sbb
imul
insb
insl
sbb
inc
jo
int3
push
and
out
xchg
sahf
outsb
push
or
push
popf
pop
pushf
lods
inc
mov
mov
ret
xor
cs
cltd
rdpmc
mov
mov
add
jg
ljmp
in
cmp
jae
mov
rol
insb
int
push
xor
push
pop
ffreep
pushf
out
jle
or
mov
sub
mov
outsb
add
ficomps
cmpsl
jle
sub
mov
inc
xor
cltd
movsb
ret
aas
adc
or
mov
xor
push
xchg
hlt
cmp
dec
mov
orb
decl
pop
jns
fists
add
not
push
xchg
pop
pop
popl
loope
and
out
and
fstps
mov
in
jbe
mov
out
inc
mov
xor
mov
dec
icebp
nop
fstps
or
cli
and
lods
lret
jge
mov
mov
insb
int3
aaa
mov
inc
mov
dec
xor
insl
add
adc
mov
cmpsl
xchg
and
pop
fucompp
jns
pop
mov
and
or
dec
mov
out
pop
push
cmp
arpl
lahf
dec
js
and
xor
scas
in
jns
or
fcompl
push
xchg
int3
div
mov
arpl
shlb
dec
dec
jge
or
scas
jmp
and
rclb
shlb
cmpsl
shlb
repz
and
fimull
sahf
mov
call
lret
jge
inc
mov
test
test
mov
push
push
js
dec
loope
int3
push
lods
jl
adc
xor
pop
arpl
mov
dec
addr16
std
sub
and
iret
sbb
push
into
jg
cmpsb
mov
nop
cmc
and
insl
pop
push
pushf
cmpsl
adc
bound
adc
es
sbb
outsl
xchg
fldl
scas
cli
scas
ja
imul
lcall
jno
ljmp
mov
xor
insl
or
xorl
mov
push
rcrl
jae
cmp
inc
std
cmp
lds
pop
mov
inc
sbb
jmp
inc
sbb
mov
jle
and
mov
mov
cmp
ficomps
inc
cltd
fisubl
icebp
xchg
add
hlt
in
xor
ds
sbb
or
je
seto
mov
dec
cmpsl
dec
pop
jo
sub
lret
dec
push
addr16
test
sahf
inc
pop
jp
jne
jb
add
popa
ljmp
int3
jecxz
sahf
and
adc
sub
dec
lods
clc
push
xchg
jle
pushf
test
inc
or
adc
shrb
push
shlb
inc
or
lods
ljmp
xor
mov
jnp
inc
in
addr16
xor
inc
hlt
sbb
loop
fnsave
cmp
cmp
stc
ss
jmp
in
pop
lods
leave
jg
std
push
mov
dec
lock
pop
fnstsw
jo
and
in
sub
or
inc
pusha
push
push
sub
jl
jle
mov
mov
pop
mov
mov
cmp
pop
and
jecxz
jae
mov
jecxz
mov
dec
enter
enter
cmp
mov
lea
aad
jne
clc
orl
sub
cmp
stos
or
addr16
nop
insb
sbb
sahf
xchg
mov
scas
mov
mov
int
inc
aad
fisubl
and
xchg
cli
cmpsb
mov
imul
xor
or
jnp
or
cmp
dec
repz
imul
aam
ljmp
cli
push
push
mov
shrl
popf
icebp
mov
insb
movsl
xor
mov
pop
xchg
xor
push
push
jmp
and
clc
aad
leave
es
into
out
repz
or
or
sti
js
daa
push
outsl
enter
ljmp
jo
dec
xor
dec
in
pusha
imull
push
out
adc
mov
es
push
add
jns
mov
and
repz
lret
xor
and
cmpsb
std
hlt
lds
mov
xorl
sbb
das
sub
cli
mov
je
sub
rcrl
ret
movsb
mov
pop
jb
add
lods
popa
in
add
nop
xchg
arpl
mov
cld
add
push
outsl
xlat
shll
imul
or
insb
xor
pmaxub
sti
push
mov
adc
add
sbb
stc
inc
sbb
popf
add
outsb
pop
shrl
cltd
add
stos
xor
std
xor
arpl
jnp
mov
cli
outsl
xchg
cmp
sbb
xor
fistps
xor
dec
mov
dec
loope
pmulhw
outsl
jmp
int
mov
fisubl
aam
sub
add
popf
and
pop
and
lahf
addr16
lods
or
out
cli
dec
jne
loop
repz
std
lcall
push
aaa
and
nop
inc
adc
xor
movl
xor
ja
xlat
hlt
and
bound
jl
loope
loopne
lret
leave
popa
lcall
pop
in
loop
std
ret
xor
or
mov
subl
insb
insl
stos
xchg
inc
aad
lret
jle
leave
cmp
icebp
sub
aad
lock
dec
pop
imul
fbstp
and
jae
popf
sub
mov
jns
out
cs
mov
inc
icebp
push
pusha
push
testl
cmp
push
mov
mov
jnp
faddl
sbb
mov
lods
jns
inc
push
lcall
enter
mov
cs
jg
sarl
pop
inc
push
inc
into
clc
push
cmp
or
pop
imul
adc
inc
aam
rcll
xor
lret
popf
rorl
test
out
mov
dec
dec
imull
sub
sub
test
lods
pop
adc
sbb
jp
mov
mov
jne
add
stos
jne
lcall
sbb
jg
cld
in
inc
jb
mov
or
fidivl
std
dec
es
push
scas
jns
out
mov
movsb
sub
lods
sti
testb
rcl
adc
jo
clc
sti
mov
ja
pop
sub
mov
ss
or
pop
mov
or
dec
mov
lds
lea
sub
arpl
pslld
cmc
cmp
in
lds
or
lret
scas
inc
push
mov
pop
pusha
push
mov
dec
das
out
push
push
out
inc
repnz
mov
ret
sub
sub
inc
or
lea
lea
shlb
mov
scas
mov
mov
dec
loop
lods
add
fiadds
lds
mov
lds
push
cmp
cmp
adc
add
sbb
or
or
mov
xchg
out
xchg
into
sbb
cmp
sbb
loop
xor
jbe
test
cmp
loop
test
jle
and
in
jno
push
add
inc
or
pop
stos
rcrb
dec
add
pop
js
aas
nop
push
aam
xchg
int3
lock
or
adc
hlt
aaa
daa
into
sbb
pop
shrb
mov
or
or
aam
frstor
dec
jae
push
push
and
xor
icebp
dec
jmp
sub
xchg
in
mov
shl
cmp
dec
push
loope
sub
jmp
push
divl
aad
push
icebp
rol
enter
cltd
xor
push
jbe
fsubrs
adc
mov
stos
daa
aas
stos
mov
pusha
and
inc
int3
dec
mov
jp
addr16
sub
or
and
adc
sarb
int3
inc
ds
jne
fcomps
enter
fs
mov
fwait
dec
aaa
lods
stos
loopne
lods
sbb
movsb
xor
popf
imul
jge
push
pusha
push
cltd
inc
pop
add
mov
mov
mov
fucomi
mov
hlt
enter
mov
stos
dec
cmp
pop
mov
lds
test
cmp
and
aad
adc
and
xchg
je
imul
xor
cltd
cltd
lods
repz
jnp
mov
mov
test
imul
inc
mov
adc
mov
mov
jns
xor
imul
ret
aam
and
ret
rcl
out
test
arpl
daa
jmp
popa
and
ficomps
cmpsb
jecxz
jl
dec
test
push
in
mov
js
pop
jge
gs
mov
xlat
cli
xlat
adc
mov
hlt
add
imul
iret
or
push
inc
push
pop
jmp
xor
lret
push
and
mov
dec
nop
sbb
stos
out
fwait
xlat
adc
dec
je
add
xlat
loop
pop
test
into
lods
mov
stc
ja
jae
fs
inc
clc
sub
cmp
jg
dec
mov
movsl
mov
inc
repz
mov
out
pushf
and
fcomi
loopne
pop
sub
loop
ljmp
dec
in
lock
rcr
xchg
xor
int3
cs
jmp
shrb
popf
lods
mov
in
jecxz
mov
push
xor
and
icebp
loopne
int3
out
mov
insb
xor
or
mov
jp
and
je
ja
outsb
or
fisubrl
lock
jle
cs
lds
pop
sbb
xor
int
push
push
movb
scas
bound
add
lahf
mov
je
fistpll
rcll
jo
mov
movsb
int3
sub
jp
mov
inc
push
mov
into
mov
sbb
testl
bound
adc
pop
jns
mov
je
inc
cmp
jne
dec
pop
inc
fdivs
adc
push
fwait
lods
jo
pusha
icebp
add
rclb
pandn
adc
inc
inc
or
inc
mov
cs
lcall
add
mov
pop
dec
xchg
sbb
sub
idiv
test
xchg
stc
adc
xlat
je
or
pop
xchg
loope
jbe
orl
dec
mov
test
loopne
fldl
test
jle
mov
dec
pop
push
inc
xchg
cmp
mov
rol
jns
cltd
push
push
or
test
add
lcall
jb
mov
leave
scas
jge
sti
incb
sbb
and
pop
fld
pop
push
mov
mov
cwtl
add
add
inc
aaa
add
ja
pop
inc
push
and
mov
outsb
xor
xchg
cmp
loope
or
xlat
push
jb,pt
jno
mov
out
scas
fldcw
mov
pop
cli
xchg
jns
gs
ja
pop
aad
cltd
mov
xchg
stos
fstpt
or
and
push
cmp
outsl
pop
stc
or
xchg
mov
fs
popf
or
imul
pusha
shlb
mull
or
xchg
repnz
mov
aas
fbstp
aas
adc
and
ljmp
repz
adc
popa
ss
inc
mov
xor
mov
popf
adc
ss
sub
xor
mov
dec
out
cli
stc
xor
jbe
arpl
lods
add
jns
jne
mov
stc
add
push
xchg
sbb
and
gs
insl
icebp
pop
test
pop
adcb
xchg
shll
add
loope
pop
jns
cld
cwtl
das
sbb
fcompp
adc
rclb
cld
fdivrp
mov
ficoms
push
mov
jmp
js
mov
stos
xchg
adc
pop
jns
adc
adc
inc
js
push
rolb
icebp
popf
scas
aad
inc
cmpb
mov
gs
outsb
roll
fnstenv
nop
inc
add
subb
icebp
mov
cwtl
xor
and
mov
cmp
mov
push
sub
xlat
pop
enter
movsb
push
xlat
jae
lret
cli
ss
lock
push
outsb
push
inc
loope
jmp
mov
clc
test
imul
or
dec
mov
cli
xchg
cmp
fnstcw
mov
add
jge
jl
xor
dec
nopl
mov
jle
mov
jne
cwtl
fidivs
iret
mov
enter
mov
mov
movsl
insl
fsubr
insb
inc
push
out
aas
add
mov
push
mov
cmp
mov
sbb
out
add
push
and
mov
sti
icebp
pushf
and
sub
aad
repnz
jae
adc
icebp
lods
mov
pop
mov
ret
jg
and
or
stos
jp
push
jo
jne
xorl
pusha
jbe
fildll
cmp
dec
adc
jle
in
scas
and
and
xchg
or
xchg
push
sub
push
scas
gs
testb
adc
adc
push
into
repz
dec
rcrb
mov
xchg
fisubs
jecxz
ret
xor
ret
aaa
pushl
addr16
shrb
sbb
je
push
outsb
scas
int
fwait
mov
gs
dec
adc
ja
call
inc
xor
sub
stos
lods
push
jecxz
stos
adc
xchg
mov
daa
ret
push
and
ja
add
xchg
xchg
shrl
add
mov
and
mov
add
das
scas
sbb
push
pop
cmpsb
push
cli
aad
inc
fmull
cmpsb
test
outsb
das
xlat
ljmp
inc
cmp
aas
pop
sbb
lods
pop
cli
fsub
jle
add
pop
pop
and
mov
push
hlt
cmp
dec
push
pusha
mov
out
test
mov
xchg
pop
push
and
sbb
add
inc
mov
adc
pop
int
adc
mov
mov
add
call
aad
in
pop
repz
ljmp
les
pop
cmp
sub
add
out
jl
xchg
mov
mov
xor
mov
sbb
or
adc
gs
add
lret
lret
roll
aam
add
xor
fbld
cmp
and
cmc
and
push
add
mov
imull
or
xchg
jns
xchg
xchg
xchg
xchg
test
cmp
or
ja
out
ljmp
sbb
mov
int
jmp
shll
icebp
lds
sbb
mov
int
sub
cmp
lret
inc
sbb
sub
push
jno
xchg
jne
repz
jecxz
hlt
out
xchg
fs
out
repnz
movb
data16
sub
aas
xchg
scas
mov
sbb
loopne
andl
xor
xor
and
xor
or
aas
jmp
push
fwait
push
aaa
mov
cwtl
push
je
arpl
add
adc
jmp
test
out
add
fiadds
movsl
push
jo
inc
out
xchg
mov
pop
xor
cli
pusha
xor
adc
das
jle
test
sub
addr16
hlt
and
xor
ljmp
inc
cld
adc
adc
xchg
push
mov
pop
repz
cmp
mov
out
sbb
jle
call
jae
xchg
mov
adc
pop
xor
nop
and
lret
bound
xchg
sbb
aaa
int3
mov
in
aaa
sbb
insb
out
push
cmp
je
xchg
xlat
adc
test
fwait
bnd
xchg
in
mov
mov
add
and
ds
cld
xchg
pop
inc
pusha
hlt
out
cmpl
rorb
xor
adc
mov
and
jmp
cmp
icebp
pop
pop
mov
adc
outsl
cs
iret
call
mov
inc
sahf
jb
movsl
in
out
mov
sahf
mov
andl
or
and
push
or
popf
mov
or
lcall
mov
mov
inc
dec
lret
dec
push
je
scas
jne
fisubl
scas
push
cmp
push
pusha
lods
clc
xchg
movsb
repnz
subl
add
jae
add
iret
jae
inc
pop
in
sub
cmpsb
push
adc
cmp
shlb
imul
dec
sbb
pusha
push
fcomp
mov
mov
pop
cmpsb
outsb
sbbl
pop
xor
test
cli
inc
loop
jg
pop
cmp
ret
jle
pop
shl
adcl
mov
mov
int3
clc
stc
in
inc
stos
mov
fidivl
or
xor
out
jns
lret
jae
and
fwait
push
xchg
pop
jno
mulb
rorb
dec
shll
stos
adc
aaa
pop
fwait
sub
jno
pushf
out
jns
cmp
xchg
std
and
pop
stc
leave
inc
or
imul
jmp
ficompl
mov
inc
cli
std
pop
push
push
xchg
mov
stos
and
xchg
cs
xor
dec
xchg
mov
sub
adc
pop
sbb
arpl
xchg
jl
xchg
fldenv
adc
sarb
or
scas
lret
fs
shrl
mov
shrb
popa
push
scas
pop
xchg
test
or
cmp
add
test
and
push
repnz
xchg
cld
int
ja
fildll
lcall
nop
ret
movsb
stos
push
lcall
lret
inc
scas
es
add
cmp
inc
push
sbb
mov
pusha
imul
lods
dec
jmp
inc
push
adc
rcl
inc
popf
xor
inc
push
shll
repz
das
and
shl
rolb
call
xlat
test
mov
sub
repnz
mov
aas
lock
push
sub
push
push
fcomip
sbb
adc
jno
int
das
inc
or
dec
fcompl
cmpsb
in
icebp
jmp
add
fstpl
je
cmp
es
mov
dec
sub
mov
aas
mov
cmpsb
mov
outsb
mov
les
ja
inc
or
call
push
cs
push
lods
nop
cmp
jl
adc
sub
loopne
sbbl
mov
out
test
pusha
add
outsl
arpl
mov
mov
pop
movsb
xor
lcall
and
cmc
lret
dec
dec
pop
jl
or
clc
sub
icebp
mov
pop
leave
scas
push
das
addl
dec
jl
cmp
mov
jnp
mov
cmp
das
jo
lret
mov
inc
rorb
xchg
mov
shrl
data16
fcomip
fidivs
rolb
inc
ret
hlt
pop
stos
aad
inc
or
aad
test
pop
adc
pop
sarb
test
jno
fmull
mov
jae
dec
cwtl
cmp
sbb
daa
fmul
int3
dec
add
movsl
adc
pop
fimuls
leave
ds
arpl
jmp
xchg
pop
ror
aad
and
sbb
dec
stos
jmp
inc
mov
and
stos
std
shll
into
inc
js
lcall
dec
js
aas
testb
data16
mov
call
adc
lods
insb
test
dec
sub
jo
dec
push
lods
ss
jno
hlt
fsubl
pop
pop
sbb
add
sub
popa
ljmp
xchg
iret
int
dec
lret
inc
ja
inc
lret
fcoms
xor
jbe
popf
test
adc
cmp
int
and
dec
hlt
test
lcall
rcr
loope
movsl
mov
mov
out
leave
lcall
inc
jnp
mov
cmp
mov
sub
stos
sarb
out
arpl
adc
and
or
nop
movsl
in
or
inc
mov
mov
gs
pop
mov
inc
sbb
inc
dec
ret
adc
pop
push
jmp
popf
push
int
sub
dec
imul
jp,pn
push
sti
cmp
stos
scas
jl
adc
popa
or
sti
insb
in
aam
xchg
in
pop
sbb
aas
fldt
sbb
rcr
sbb
xchg
mov
jno
or
lock
lods
pop
mov
jbe
test
sbbb
sub
jbe
sub
xchg
jns
dec
xchg
cmp
jb
add
pop
or
ja
xor
sarb
adc
pop
iret
push
cwtl
fwait
aad
pusha
inc
jbe
shr
les
lret
lret
insb
out
shrl
es
dec
mov
clc
push
gs
xlat
test
call
dec
fsubrs
push
stos
and
cltd
shlb
or
mov
pushf
ret
das
out
lea
mov
int3
cld
call
add
lods
cwtl
and
movsl
pop
clc
and
push
push
sbb
outsb
sahf
mov
ss
call
sub
mov
leave
ret
fwait
mov
lock
lods
xchg
ret
paddw
aad
dec
rorb
inc
andb
dec
ss
or
ja
int3
pop
sub
movsl
call
jnp
dec
in
out
xorl
mov
adc
sbb
mov
mov
imull
fstps
push
aam
and
sbb
xchg
lret
gs
inc
sub
xchg
outsb
push
cmp
inc
push
push
daa
loope
iret
fldcw
pusha
movsl
sbb
cmp
add
jl
inc
fwait
into
mov
sbb
sti
cmc
xchg
jmp
mov
sbb
jb
imul
mov
xor
test
xchg
inc
shl
adc
xchg
ret
rclb
scas
fiaddl
outsb
popf
add
lret
sub
fisttpll
sub
mov
leave
shll
mov
jmp
xor
mov
or
mov
sbb
in
or
dec
sub
push
arpl
pop
mov
cmpsb
xor
cmp
mov
aaa
jne
sbb
out
sti
dec
rcll
ret
mov
sbb
cmp
in
cmp
push
adc
and
adc
lock
in
mov
add
loopne
pop
icebp
mov
rcll
push
inc
lcall
cmp
xor
xor
add
imull
cmc
lret
fwait
push
pop
aaa
mov
pop
dec
in
jne
cmp
mov
mov
add
daa
inc
loop
mov
out
jl
js,pn
imul
pushf
add
int
mov
sub
or
repz
jne
jl
and
aaa
push
cwtl
cmove
xor
mov
pusha
out
push
jb
sbb
jp
adc
gs
dec
lahf
pop
fistl
std
or
pop
cmp
mov
aas
lds
nop
mov
gs
add
jl
pop
ficoms
push
jb
rclb
xchg
xchg
push
add
cmp
lods
daa
hlt
mov
je
and
sbb
mov
out
aam
sti
nop
sbb
add
es
popa
pop
fcomp
shlb
xchg
dec
stos
aas
jns
shlb
ja
jb
out
sti
or
imul
insb
loop
fists
mov
lds
movsb
scas
jno
cmpsl
mov
sbb
push
lds
sub
xchg
sti
or
cmp
xor
dec
sbb
push
cmpsb
adc
daa
inc
bound
dec
outsl
mov
cmpsb
jne
mov
mov
les
xchg
inc
lcall
stos
pop
mov
pop
mov
lock
xorl
clc
sub
mov
loop
push
push
push
or
add
stc
sbb
addr16
fcmovnb
sbb
es
cmp
jnp
filds
adc
mov
xchg
aas
cmc
outsb
jle
lods
pushf
sub
test
add
sbb
cmpsb
lahf
aam
sub
dec
inc
add
and
jmp
shlb
cmpsl
push
cmpsl
fcmove
repz
icebp
pop
adc
add
add
nop
pushf
test
sbb
aas
mov
enter
aaa
ss
jle
loop
sub
adc
mov
cmp
mov
test
lret
pop
dec
fisttpll
xor
mov
or
movsl
sbb
rcrl
daa
sub
sub
inc
fnsave
inc
jo
inc
in
rclb
mov
inc
xchg
movsl
sbb
lods
rcrl
jno
add
adc
test
pop
xor
jecxz
in
cwtl
fisubrl
mov
pop
jno
int3
dec
and
into
aaa
mov
jge
dec
jnp
xchg
aam
shlb
cmp
xlat
adc
lcall
xchg
pop
imull
mov
out
push
pop
jno
enter
cmpsb
test
clc
sti
adc
jg
push
jle
scas
sub
xchg
loop
xor
pop
xchg
xchg
xchg
ret
jg
push
fsubl
call
addr16
adc
fxtract
jmp
cltd
cmp
out
jb
mov
gs
outsb
sub
cmp
push
es
filds
in
enter
and
mov
addr16
jecxz
and
xor
arpl
push
sbb
repz
and
pop
scas
test
dec
cli
stc
jns
imul
push
push
cmpsl
mulb
pcmpgtd
popf
cld
push
xor
inc
js
xchg
cmp
mov
daa
sbb
into
int
leave
stos
mov
sub
jg
popf
cmp
mov
pop
sbb
inc
lahf
push
test
mov
adc
mov
ja
or
das
mov
cld
mov
xorb
xchg
mov
push
mov
add
xchg
mov
faddl
mov
imul
sbb
push
push
aas
add
cmp
es
add
sarl
inc
das
jge
xor
enter
fwait
leave
rorb
test
mov
sbb
cmp
js
xlat
pop
icebp
rclb
in
cs
cmp
shl
xchg
test
js
jmp
movsb
bound
jecxz
test
xchg
sahf
or
iret
scas
xchg
les
out
dec
adc
js
pop
cli
fidivrl
jae
shl
ror
jbe
mov
pusha
addr16
sub
mov
cmp
lods
mov
fldt
xorb
sahf
jnp
shrb
push
mov
jo
or
int3
add
add
mov
shrl
push
or
cmp
in
mov
insl
sarb
enter
xor
mov
mov
mov
lock
xor
pop
int
stc
ja
or
push
cwtl
outsb
fcompl
fcompp
iret
and
clc
push
xchg
dec
loope
fldt
adc
or
mov
push
icebp
cmp
add
rorl
push
fidivrs
mov
out
xor
sbb
int3
xor
rcrb
lcall
dec
add
pusha
lret
out
add
xchg
repnz
call
lods
cmp
in
pop
dec
out
cli
lahf
stos
xchg
adc
into
xchg
sbb
xchg
iret
in
sub
outsb
and
scas
das
in
shll
data16
inc
aaa
int
jo
dec
test
cld
sub
xor
xorb
dec
pop
push
fdivrl
je
push
sbb
adc
mov
mov
in
test
out
cs
pop
cmpsl
cmp
lock
call
addr16
xor
cmp
out
jo
jns
jno
stos
pop
mov
mov
cwtl
loop
push
push
dec
movsl
repz
add
add
imul
dec
in
cmpsb
aam
mov
push
lock
scas
jmp
je
addr16
jne
test
das
fcmovnu
clc
cs
das
lret
cltd
sub
jl
jl
pop
ds
xchg
mov
repnz
fcoms
push
push
shrl
jo
sahf
mov
lahf
loope
stos
push
dec
rcrl
cmp
je
push
daa
fmuls
push
sbb
mov
ss
aad
or
lea
adcl
sub
repz
sub
inc
xchg
mov
ss
out
orl
pop
sbb
fmull
sahf
mov
es
mov
js
pop
in
out
cmpb
mov
popa
cs
out
mov
insl
out
and
mov
add
lret
repnz
mov
mov
dec
jp
mov
or
mov
mov
imul
mov
das
cmpsb
sarl
dec
test
inc
push
stos
push
push
shr
out
dec
lock
call
aaa
cmp
lds
push
pop
iret
cli
jnp
sub
add
jbe
jp
lret
out
rcll
or
lcall
imul
js
clc
pop
push
xchg
xchg
push
adc
cmovno
mov
orb
and
loope
dec
mov
jne
push
xlat
testb
push
fwait
lahf
jmp
pop
or
and
in
arpl
jbe
mov
mov
call
pop
out
adcb
mov
sarl
or
fiaddl
mov
aas
imul
mov
aad
push
jne
jno
adc
ja
mov
dec
lods
hlt
cmpsl
pop
xor
mov
cmc
inc
mov
cmp
data16
scas
xchg
xchg
or
push
and
adc
nop
xor
mov
dec
jle
mov
inc
push
or
sbb
sbb
sbb
cmp
test
push
jg
gs
aam
loop
pop
cmpl
and
pop
push
int3
aam
or
inc
rcrb
adc
aas
stos
inc
jbe
inc
test
mov
inc
in
out
push
scas
cmp
jge
mov
xchg
xchg
lea
div
cmpsl
scas
or
cld
inc
shll
stos
pop
xchg
cmpsb
pop
xchg
fsubrl
pop
pop
call
sti
addr16
mov
aaa
repnz
aad
lcall
mov
lar
std
jo
xchg
xorl
mov
or
mov
or
incl
in
sbb
cltd
sub
outsb
mov
mov
icebp
insb
pop
out
movl
fwait
jo
fsts
fwait
aad
mov
xchg
lret
cli
das
addr16
sub
popa
cli
fs
mov
cmp
push
out
adc
into
inc
adc
and
and
mov
mov
mov
jmp
add
push
or
aaa
loope
mov
inc
mov
lock
dec
add
stc
test
pusha
pop
and
aas
jl
stos
iret
jmp
fidivl
cmp
ljmp
cwtl
xchg
push
loope
ret
out
push
fs
and
mov
stos
mov
icebp
or
cmp
xchg
add
sub
fcoml
push
pop
or
jb
cmp
sbb
or
xchg
pop
je
push
fwait
bound
aaa
inc
mov
test
inc
mov
scas
mov
fldl
adc
jno
dec
push
inc
iret
or
pop
clc
in
das
xchg
cmpsb
cmp
xor
push
and
mov
inc
sub
aaa
scas
lea
cmp
fyl2xp1
lret
inc
mov
add
mov
push
ret
lods
mov
push
xor
and
pop
mov
call
mov
sub
fs
mov
les
pop
jno
inc
or
lret
push
push
mov
lcall
xor
dec
pop
mov
adc
jo
pop
jnp
ljmp
dec
push
das
mov
lock
xchg
sbb
jmp
and
mov
movsl
fbld
idivb
jge
cmp
into
adc
cmp
jne
inc
mov
mov
fnstsw
fisttpll
sub
fucomp
orl
pop
lods
and
mov
ds
arpl
mov
repz
leave
ret
imul
lret
add
lret
decb
cs
and
add
mov
mov
and
adc
fwait
sti
aad
add
xchg
push
cmp
bound
or
int
imull
dec
xor
dec
adcb
sub
movsb
lock
cld
jg
ret
sarl
sbb
enter
in
cmp
arpl
mov
nop
xchg
repnz
movsl
xchg
out
mov
les
mov
insl
xchg
and
rcrb
jns
inc
cmp
test
inc
jmp
xor
mov
das
movsl
jae
in
and
add
inc
stos
pop
jno
scas
filds
shl
cmpsl
cmovnp
icebp
das
insb
or
and
arpl
fadds
mov
cltd
pop
dec
push
adc
jnp
stos
fs
aaa
arpl
mov
roll
jmp
loop
sbb
and
insl
ja
or
jl
lret
inc
mov
dec
lcall
jmp
dec
pop
add
gs
lret
rcrl
cmp
cs
jns
ljmp
push
ret
inc
loopne
repz
push
cmpsb
or
sbb
pop
mov
cmp
mov
adc
ret
int3
sbb
out
mov
fldl
or
add
movsl
addr16
push
pop
xor
pushf
mov
sbb
xchg
mov
xchg
cmc
rol
pop
sbb
out
das
xchg
lods
test
jmp
sbb
cmp
loopne
xchg
mov
out
xor
shrb
xchg
inc
pop
sub
repnz
sbb
out
jl
in
lods
xorb
add
mov
mov
sub
lock
into
adc
mov
dec
movsb
and
outsl
ds
inc
les
push
fldcw
and
std
mov
in
and
shl
mov
dec
mov
loopne
dec
jmp
test
ficompl
cmpsb
cmc
jb
add
add
push
sub
mov
push
sti
or
jns
mov
sbb
xor
xor
jle
rcll
dec
pop
outsl
nop
jnp
mov
pop
bound
sbb
mov
xchg
in
ja
and
movsl
xchg
aaa
int3
js
std
fidivrl
xor
and
movsb
das
and
in
movsb
lock
jmp
jecxz
mov
mov
sub
sbbb
pop
jmp
shlb
shrb
dec
into
popf
lcall
or
das
ret
outsl
add
mov
xchg
push
and
fldcw
mov
xchg
lods
sub
xchg
mov
inc
push
je
addr16
or
ss
int3
push
sbb
in
mov
dec
ss
test
adc
adc
or
fsubs
and
mov
add
sub
push
stos
mov
xor
fwait
loop
add
fwait
push
mov
out
pop
cmp
mov
mov
nop
pop
jle
fadd
je
adc
std
cmp
sub
push
bt
mov
jmp
mov
out
push
or
ja
mov
fnsave
sub
xchg
mov
subb
ljmp
rcr
mov
inc
mov
imul
daa
pop
push
sbb
test
xchg
in
dec
mov
xor
jne
push
sub
arpl
stos
and
and
and
or
sub
inc
jno
scas
push
mov
cld
xor
in
sub
or
fnstcw
fcoml
test
jge
add
jge
push
cmp
xchg
cs
jb
popa
out
in
jo
dec
pop
jbe
scas
loope
xor
mov
add
pop
test
push
fimull
inc
call
sahf
xor
pusha
pushl
sbb
out
test
sub
lret
inc
xchg
popf
push
mov
push
cwtl
sarb
mov
add
imul
stos
adc
jb
pop
push
je
cmc
mov
jle
outsl
inc
sub
xlat
repnz
pop
and
jo
cmp
fwait
xor
jno
cmp
sbb
dec
jb
aad
inc
int3
cmpsl
dec
imul
add
mov
xchg
or
fidivl
adc
outsl
popa
pop
das
in
jns
mov
cld
testb
mov
pop
notb
movsl
bound
pop
and
xchg
pushf
mov
test
mov
xchg
cmpsl
adcb
movsb
adc
mov
movsb
inc
ja
mov
dec
xor
jns
xor
movb
mov
and
ljmp
loopne
icebp
test
ret
cmp
jne
nop
loope
scas
jge
and
add
out
std
sbb
negl
scas
sbb
pop
adc
lret
lods
and
test
sub
repz
lods
inc
stos
daa
adc
push
mov
jae
bound
sahf
xchg
test
icebp
in
mov
icebp
fadds
push
push
fadd
adc
mov
arpl
testb
lcall
mov
xor
mov
mov
cmp
cmp
shll
call
jae
inc
dec
pop
arpl
icebp
iret
and
out
mov
jmp
adc
fisubl
mov
pop
loop
push
es
stos
pop
xchg
cs
and
add
rol
xchg
cwtl
je
fists
push
add
adc
sbb
mov
std
pop
lods
and
mov
xor
in
in
les
daa
pop
jp
dec
test
lret
xor
stos
mov
mov
fdivl
outsb
mov
push
sarl
push
int
pop
and
xchg
pop
mov
sub
cmpl
and
inc
lret
rorl
test
movsb
es
cld
je
adc
mov
outsl
jl
add
pusha
ss
jp
mov
pop
aad
int3
xor
lods
jle
popf
insb
add
and
adc
or
out
mov
dec
xor
jge
aam
adc
lock
cld
add
sub
and
dec
into
cli
sbb
add
clc
sarl
icebp
loopne
orl
mov
call
stos
sbb
ljmp
pop
xchg
js
push
cmp
popa
wbinvd
stc
jmp
pop
dec
cmp
jmp
in
mov
cmp
adc
cld
dec
shlb
ds
mov
add
outsl
dec
cwtl
xchg
incl
sub
je
inc
andb
cld
xchg
pop
into
test
pop
test
mov
or
lods
push
fucomi
das
gs
inc
inc
dec
push
jne
jl
adc
std
divb
scas
push
scas
pop
aad
pop
mov
les
dec
fprem
jae
pushf
arpl
dec
repnz
add
movb
add
imul
push
fstl
shrb
or
xor
jp
mov
add
mov
pop
push
inc
pop
dec
cmpb
shll
cwtl
jae
and
xchg
pop
mov
or
add
andb
jne
pop
hlt
nop
mov
scas
out
les
dec
pop
hlt
add
push
push
call
out
leave
pushf
lret
push
ja
sub
insl
lret
andl
dec
mov
sbb
iret
sub
popf
xchg
jno
cltd
fldl
jg
mov
into
stc
cmp
mov
xlat
jmp
adc
mov
add
adcb
cli
lcall
jbe
xchg
ds
xchg
es
jne
fnstenv
jns
xchg
add
xlat
test
or
inc
mov
xor
jge
cmp
mov
movsl
adc
in
lods
fs
pop
xchg
fsub
mov
adc
popf
inc
adc
xlat
dec
rolb
stos
push
xor
xchg
sti
loope
lret
jle
aam
mov
cmp
mov
sbb
int3
sbb
dec
add
and
movsl
mov
mov
mov
fnstsw
pop
lock
push
int
fwait
ss
cltd
dec
xor
call
xchg
mov
lods
dec
push
jae
fistpll
lret
shll
test
popf
xor
cwtl
inc
cmpsl
adc
and
or
push
imul
lahf
movl
mov
fnsave
das
lahf
iret
xchg
mov
xor
xchg
test
shll
jae
push
xchg
outsl
lcall
rcll
cmpsb
adc
jo
jle
inc
fimuls
push
sti
pop
mov
pop
push
jle
jg
fdiv
cmp
sub
test
xchg
jne
mov
aas
inc
test
cmp
cmc
jne
sbb
xchg
test
push
push
xor
or
xor
xor
lea
aas
pop
out
add
mov
and
jbe
cld
add
lods
orl
or
cmp
jnp
insb
sbb
cmp
xor
int
jae
lea
call
xchg
push
pop
jmp
psubusw
and
sub
sub
mov
mov
rcrb
jp
mov
mov
jp
js
or
or
lret
xchg
mov
lcall
loope
inc
movl
fnstenv
insl
adc
push
ss
ret
addr16
sti
mov
mov
dec
mov
inc
jecxz
je
les
push
lret
out
jmp
loope
dec
adc
xor
lcall
xchg
fiadds
xchg
or
fwait
clc
or
sahf
jns
arpl
mov
jns
cmc
cmp
cld
pop
movsb
ja
cmc
imul
jnp
lahf
inc
shr
jo
dec
sub
sbb
sub
jmp
in
pop
fnstcw
inc
pop
sub
std
xchg
or
jo
push
movsl
jecxz
or
or
cmp
mov
xchg
popf
outsb
push
jp
sub
gs
xchg
mov
jmp
fmul
mov
lock
pop
pop
sbbb
mov
in
push
xor
and
cmp
xchg
repz
shll
fldln2
jbe
loope
pop
lock
xor
in
scas
dec
push
mov
lahf
mov
adcb
sub
adc
dec
mov
loopne
movb
ret
repz
jnp
xor
mov
stos
mov
aam
or
pop
or
fsubrl
or
add
out
fs
or
aas
or
jl
mov
dec
xor
xor
fisttps
xor
movsl
sub
xor
loope
loope
pop
xchg
push
cmpsb
mov
xlat
inc
nop
mov
aaa
mov
lods
aaa
mov
mov
sub
inc
xchg
adc
cmc
mov
test
adc
adc
push
pop
lcall
and
dec
adcb
int
xchg
pop
jb
or
mov
std
push
fwait
les
push
push
aad
push
mov
inc
sarb
sbb
fmulp
iret
pusha
jne
pop
pop
mov
cld
ds
mov
jge
dec
sub
jge
scas
sub
inc
mov
pop
dec
sarb
xchg
fcmovnb
dec
rcll
xchg
idiv
inc
jne
sub
push
jne
js
lds
xchg
into
dec
subb
cli
dec
stc
xorb
xor
loope
mov
outsb
pop
jmp
pop
pusha
add
sbb
pop
sub
test
push
jne
or
jbe
in
cmp
push
and
stos
jbe
mov
jae
xchg
push
inc
mov
xchg
rolb
cs
sti
add
push
xchg
cmp
push
leave
inc
enter
inc
in
je
cmp
jecxz
push
stc
adc
stos
out
dec
clc
push
and
and
jg
adc
cmp
mov
sub
int3
add
orb
pop
cmp
repz
push
hlt
jmp
dec
pop
imul
inc
jecxz
lock
lock
sbb
imull
cmp
mov
push
cs
pop
pop
rcl
outsl
movsl
push
inc
pop
out
inc
into
jmp
mov
ljmp
sub
push
sbb
adc
dec
imul
cmp
in
repz
mov
fwait
jg
loope
mov
pop
xchg
mov
dec
cli
mov
iret
lahf
les
pop
xor
push
int
or
or
loop
adc
mov
mov
cltd
sbb
sub
ret
adc
and
cmc
pushf
fwait
outsb
test
pop
rorb
rorb
cwtl
inc
dec
into
scas
add
push
mov
sub
push
push
fdivrp
and
out
js
dec
std
add
ss
pop
mov
testb
mul
or
pop
mov
popa
sub
in
mov
or
lea
push
sub
ret
push
sbb
dec
xchg
jg
in
mov
sub
daa
push
mov
pusha
pusha
xchg
aam
sbb
xor
jno
mov
jmp
dec
cmp
mov
cmp
mov
es
xor
nop
in
and
mov
xor
bound
ljmp
fldcw
fcomi
xor
adc
out
jmp
dec
cmp
cwtl
repz
fnstsw
and
lret
ret
mov
ja
cs
cmpsb
test
pop
mov
ja
mov
data16
cmp
andb
sbb
jb
xchg
in
lret
inc
fbstp
inc
jb
sbb
cld
jnp
loopne
pusha
push
ficomps
inc
aad
push
sti
add
sti
mov
lea
jbe
push
aam
stos
push
fldl2t
ljmp
ret
cli
jb
sbb
out
pusha
in
cltd
je
fs
cmp
sti
sbb
jbe
mov
test
es
js
xchg
ret
out
aaa
sbb
movl
sbb
daa
sbb
loopne
xor
popa
push
cmc
add
icebp
cld
cmovl
pop
jge
int
fwait
pushf
stos
hlt
in
out
les
cmpl
lret
cltd
shlb
add
stc
sbb
test
jge
int3
fadd
pop
ja
mov
inc
jae
in
subl
xor
lcall
lock
je
jle
jle
out
or
dec
dec
pop
mov
jl
cmc
mov
fisubl
cli
or
adc
mov
jo
pop
ret
out
pop
inc
mov
xor
imul
clc
cs
mov
sahf
cmpsb
ss
mov
in
push
xchg
mov
dec
ds
xchg
fmul
xchg
jo
sub
cmp
lock
ds
adc
rorl
enter
inc
mov
ljmp
add
or
mov
icebp
push
adc
pop
test
add
ja
sub
mov
inc
cmp
xchg
pop
iret
push
sbb
aas
out
mov
sub
or
test
lea
push
cwtl
repz
in
push
add
inc
sub
pop
daa
pop
or
mov
lods
lds
or
or
pusha
les
cmp
add
pop
and
xor
cmpsl
or
fs
xchg
mov
or
cmp
das
jae
sbb
mov
mov
jae
imul
push
movsl
adc
inc
dec
popa
cmp
jbe
lret
inc
popf
bound
adc
cmp
repnz
sbb
fstpl
inc
js
xchg
test
ret
iret
pop
jle
loope
jp
mov
hlt
fcmove
negb
mov
or
and
jb
add
or
adc
mov
cmp
jb
addr16
aas
pop
dec
fdiv
repnz
shrl
fldt
stos
loopne
fwait
sub
xlat
mov
fistps
and
jle
cmc
lahf
mov
es
out
dec
lahf
sub
add
dec
es
lock
cli
loope
push
add
rclb
adc
push
fmulp
lods
push
and
jo
push
insb
jmp
or
mov
inc
pusha
into
xchg
or
pop
mov
fsub
jae
ror
scas
ljmp
out
mov
add
mov
pop
mov
add
push
sbb
int
mov
cmp
insl
mov
sbb
inc
cmp
movb
fldenv
and
movsb
dec
das
pop
test
push
aam
jno
into
mov
shlb
or
and
add
iret
jg
test
mov
icebp
push
std
jo
jg
inc
push
test
mov
adc
xchg
cmpsb
sarl
pop
out
into
cmpsb
jae
aam
scas
movl
in
adc
int
inc
push
xor
cmpsb
dec
mov
dec
sbb
pop
in
jb
cli
int
mov
push
pop
fucomp
fisubrs
pop
daa
push
fnstcw
nop
rclb
arpl
lods
addr16
sbb
xchg
out
mov
imul
push
mov
enter
subb
or
jne
adc
jmp
icebp
rcr
in
sti
loope
data16
jnp
into
adc
aam
addr16
mov
loope
sub
int3
pop
lods
jle
or
xor
andl
push
add
sbb
stos
ret
or
sub
jle
dec
xchg
cmp
les
std
shrl
lret
inc
sbb
fnstenv
hlt
mov
mov
dec
shrl
inc
xchg
sahf
push
sub
or
sbb
inc
sub
adc
sahf
or
aaa
clc
clc
adc
cmp
mov
fsub
or
push
movsb
pop
pmullw
jmp
pop
jno
mov
jo
jno
xchg
cmp
push
popf
jl
icebp
clc
mov
lods
ret
movsb
cmc
sbbb
inc
pusha
aad
orl
lods
ja
dec
mov
push
sbb
mov
fidivs
add
subb
cmp
stos
mov
mov
data16
mov
in
clc
jecxz
int3
adc
dec
inc
sub
das
mov
mov
bound
jle
dec
xor
arpl
divl
pop
adc
leave
cwtl
sbb
adc
insl
aas
iret
lret
add
pop
test
jle
out
stos
dec
dec
clc
sub
aad
xor
xor
sub
lcall
push
mov
aaa
popf
scas
push
dec
popa
insl
xor
pop
xchg
add
nop
mov
scas
push
sub
cltd
add
pushf
push
in
out
pop
rorb
dec
mov
pop
mov
push
inc
ds
lods
cmp
adc
sub
or
push
pop
frstor
das
in
insl
pop
imul
mov
jge
inc
stc
divl
movb
cmp
pop
and
mov
sub
dec
jle
jno
adc
add
mov
jnp
mov
dec
lods
push
ret
inc
ret
push
fs
imul
in
xorb
add
mov
mov
sub
fcmovnbe
xorb
and
insl
and
xor
pushf
jmp
stos
sub
mov
repz
jae
xor
sub
mov
aam
shll
in
stos
pop
ret
daa
xchg
push
xor
fisubrl
aad
adc
fsubrp
arpl
cs
sahf
mov
mov
inc
jbe
push
fildl
jne
or
inc
mov
push
jmp
adc
ret
jl
popa
jo
js
sbb
std
rolb
lret
fadd
jo
imul
or
roll
jae
adc
lcall
and
pusha
fidivl
jb
sbb
mov
mov
push
cwtl
or
and
cmpsb
xor
out
jae
jg
and
repnz
jnp
cmp
pop
mov
push
gs
push
ds
leave
subb
mov
filds
pop
fsubp
enter
pop
rcll
push
lahf
jp
das
enter
jg
jbe
jge
cmp
shlb
pop
scas
fwait
scas
push
dec
cmpsl
xchg
fucomip
stos
faddl
scas
test
pop
lahf
or
xorl
mov
push
xchg
movsl
xor
inc
nop
push
testb
jne
outsl
and
ret
push
sbb
adc
and
and
mov
stos
push
jb
cmpb
jb
jl
in
bound
mov
push
push
das
scas
std
xchg
xor
push
aam
ja
and
daa
lea
mov
dec
dec
jno
mov
movl
jp
call
movsb
cmp
cli
ss
xor
iret
dec
cmp
fmuls
aam
mov
fsubl
sbb
cmc
fldcw
and
push
sti
jmp
mov
mov
dec
and
push
inc
cmp
sbb
mov
sub
cmp
add
test
pop
push
and
cmpsl
mov
stc
mov
sbb
into
sarl
cs
clc
sub
mov
lods
lock
pop
arpl
or
enter
pop
xchg
prefetchw
cmp
lret
add
cld
aaa
lock
mov
scas
xor
popa
mov
int3
fistps
sub
hlt
and
cmpsb
mov
jo
das
movsb
jmp
stos
in
inc
dec
jo
xorl
and
test
rorb
lock
sbb
mov
out
ljmp
cmp
dec
xor
mov
movsl
sti
dec
or
mov
popa
dec
leave
dec
test
pop
addb
cmpsb
xor
mov
cli
icebp
std
repnz
dec
push
pop
push
dec
es
loope
cmpsb
jmp
lds
jmp
inc
cmp
or
add
xchg
movsl
test
pop
cmp
xchg
xchg
mov
mov
jae
jae
sub
mov
push
iret
jp
es
enter
cmp
js
inc
lea
nop
icebp
sarb
into
fmull
xor
loope
mov
or
lahf
mov
or
and
into
lahf
mov
shl
inc
cmc
add
shll
leave
xchg
and
imul
xchg
mov
pop
add
xor
orl
or
test
arpl
xor
fdiv
xchg
icebp
jbe
pushf
jne
iret
in
pop
sub
xchg
lock
add
or
in
pop
pushf
mov
add
leave
insl
push
pushl
lcall
addb
jl
mov
inc
push
jge
mov
cmpsb
adc
std
pop
in
or
or
mov
sub
shlb
sbb
xchg
xchg
lods
das
arpl
or
call
sub
mov
loope
jmp
stc
mov
ljmp
mov
or
int3
ss
mov
push
je
and
shl
cmpsl
es
imul
stc
xchg
rcrb
test
and
imul
inc
pushf
jmp
and
inc
jge
mov
add
xchg
cmp
fldt
repz
sbb
mov
dec
sahf
je
xor
les
sub
xor
cmp
jecxz
ds
push
test
jns
adcb
int
add
push
enter
sub
xchg
push
ljmp
ss
push
test
sbb
or
inc
ja
mov
cmp
mov
mov
or
in
mov
cmpsl
aas
lods
sub
xor
sar
pop
nop
pop
mov
shll
dec
jae
jo,pt
push
cmp
push
jbe
test
pusha
loop
outsl
hlt
xor
mov
stc
cmpl
dec
dec
and
leave
add
cwtl
add
xchg
stos
fdivrs
stos
inc
pop
pop
and
fwait
mov
mov
jmp
int3
bound
sti
mov
test
lahf
push
faddp
add
imul
dec
mov
mov
adc
fldcw
push
movsl
int
dec
adc
scas
xchg
cld
lods
pop
add
movsb
cs
xor
dec
adc
dec
add
pop
cltd
mov
xchg
ja
and
shrb
sti
rol
addr16
xor
jae
cli
aam
mov
mov
jnp
or
fimuls
arpl
shrl
in
outsb
cmp
jl
jne
sub
push
leave
push
dec
inc
into
out
xchg
popa
pop
insb
mov
add
jl
push
out
jae
ja
sub
iret
xor
popf
inc
ja
imul
test
pop
sbb
cmp
xor
push
cmp
cmc
and
aam
lds
mov
dec
lods
cwtl
jno
ja
and
rcl
cmp
ficoms
xchg
sub
int
mov
movsl
out
cmp
add
rcll
sbb
or
mov
aaa
movl
xor
cmpsb
sti
sub
add
jp
adc
out
xchg
lcall
mov
js
add
push
xor
inc
xor
out
ret
jge
sbb
out
pop
in
push
adc
lds
lret
in
outsb
lods
mov
push
or
jecxz
movsb
cltd
dec
jmp
test
frstor
push
cmp
mov
mov
dec
mov
push
adc
icebp
push
cs
sbb
fst
pop
insl
cs
jmp
xchg
in
fwait
push
mov
cmp
cmp
incb
mov
xchg
in
scas
adc
mov
movsb
mov
adc
pusha
pushl
pop
scas
aam
pop
xlat
in
fs
mov
lds
ja
stos
cmpsl
fisubrl
insb
ret
push
mov
imul
jnp
lods
sub
lods
mov
mov
aaa
inc
push
mov
jnp
out
js
test
sub
push
xor
xchg
cmpsb
sbb
or
clc
notl
popf
jb
sbb
jg
lret
or
push
test
push
enter
jnp
cmp
xchg
xor
dec
push
adc
pop
js
xor
in
je
cwtl
mov
or
pushl
lahf
push
or
jecxz
cmp
ss
sbb
mov
mov
nop
hlt
les
int3
sbb
mov
lahf
stos
mov
and
std
push
test
add
xchg
dec
xchg
clc
fwait
popa
mov
add
notl
mov
test
xor
aaa
and
fwait
lds
es
das
std
shufps
inc
cli
mov
adc
std
mov
sti
lcall
push
cmp
xchg
jnp
out
cmp
addl
xor
and
icebp
mov
aad
gs
popf
pop
movsl
jl
mov
mov
cwtl
popf
sub
inc
mov
call
push
jnp
mov
faddl
mov
ffree
xor
pop
xchg
subl
mov
jnp
xor
std
mov
fbstp
jecxz
aas
clc
push
mov
addl
sbb
es
ss
push
mov
arpl
call
stc
mov
mov
xor
jbe
rorl
sbb
daa
and
test
sbb
xor
sahf
cmp
inc
jns
loopne
inc
mov
jmp
pop
out
scas
sti
or
int3
lret
xchg
pop
cmp
add
cmp
mov
repz
lret
das
jno
ret
jmp
xor
sbb
idivb
adc
xor
leave
push
arpl
dec
xor
je
enter
or
push
cmpsb
div
lea
jl
jnp
test
ja
cmpsl
cmp
sub
fsubs
sbb
movsb
pop
cmp
pop
cmpb
ficompl
mov
nop
lods
sub
mov
adc
jbe
xchg
stos
push
pop
jmp
popa
push
mov
inc
roll
subb
push
or
sub
push
das
jle
lea
cld
xchg
sarb
stos
or
sarl
loopne
cmp
jae
aaa
arpl
and
xchg
fmulp
mov
mov
call
inc
sti
jmp
bound
shlb
shlb
fs
test
xor
cmp
out
push
in
ljmp
and
mov
mov
daa
pop
sahf
iret
jns
icebp
mov
das
sub
sahf
mov
lret
repz
add
pop
mov
jo
jl
pop
mov
jecxz
ja
xchg
adc
stos
mov
repnz
jnp
ss
lcall
movsb
jnp
xchg
cmc
mov
stos
sets
stos
cmp
sbb
das
jmp
xor
std
xor
imul
push
xchg
xchg
mov
test
enter
mov
mov
xor
loopne
pop
adc
jne
adc
push
xchg
mov
sub
cli
test
dec
and
add
add
inc
ficoms
sbb
jo
addb
nop
jo
leave
add
sbb
push
stos
xchg
cwtl
sbb
xchg
cltd
dec
lods
adc
push
push
jge
or
inc
push
out
ljmp
lret
insb
push
dec
pop
push
cmpl
push
dec
xchg
decl
jp
mov
mov
sbb
xor
adc
mull
jns
dec
fs
mov
clc
mov
cmpsl
ljmp
pop
push
bound
pop
inc
pop
xor
loopne,pn
rolb
clc
bound
mov
jns
jb
es
fcompl
mov
shl
test
and
jo
push
pop
out
dec
mov
pop
inc
repnz
adc
jbe
rol
mov
cli
xchg
pop
loopne
test
call
xlat
rcrb
imul
lods
fsubp
inc
or
jns
xchg
xor
mov
adc
xor
cmp
mov
enter
pop
in
aad
jo
mov
xor
hlt
xchg
loop
faddp
mov
out
push
sti
cwtl
pop
es
xorb
popf
push
and
push
add
xor
mov
push
icebp
or
push
dec
jnp
aas
fs
cmpsl
xchg
jae
pop
aaa
sub
add
lea
cmpsb
aaa
ret
cmp
dec
icebp
cmpsb
pop
fucomp
cmp
pop
mov
enter
add
cmpsl
in
leave
data16
fisttpl
out
jb
data16
cmp
out
sbb
and
mov
fwait
mov
jp
xlat
xor
call
repnz
int
negl
adc
push
lods
sbbb
push
pop
pop
pop
lret
xchg
xchg
movb
xchg
int
sub
mov
loopne
pop
mov
jle
cli
and
ret
inc
lds
mov
and
xchg
pusha
inc
testb
mov
push
add
mov
iret
or
shl
aaa
push
sbb
sub
outsl
sub
cmp
imul
sub
jbe
inc
lcall
insl
scas
repz
sbb
bound
ljmp
xor
loope
aad
hlt
push
ror
mov
push
les
push
inc
popa
pop
sbb
mov
xchg
mov
pusha
add
add
sbb
cmp
and
xchg
data16
pop
test
xchg
out
pop
pop
pop
inc
cmpsb
lock
repz
rorb
mov
mov
jno
dec
stos
ret
dec
int3
and
cmp
jg
sbb
pop
es
xorb
dec
jne
into
push
daa
inc
jl
and
adc
pop
out
inc
jge
xchg
cmp
and
xchg
push
stos
mov
sbb
pop
cmpsl
test
fwait
adc
ret
jo
subl
cld
mov
xor
or
repz
jae
add
sub
xor
jl
sub
cwtl
lods
pop
roll
xchg
push
enter
mov
sbb
cmc
inc
fs
hlt
movsb
xorb
fdivrl
call
lock
mov
aad
pop
adc
and
mov
or
add
and
ret
ja
xchg
jmp
xor
pop
insl
jecxz
sbb
push
cmpsl
dec
push
sbb
leave
push
pop
stc
push
arpl
aas
loope
push
adc
sub
pushl
aas
movsl
ja
mov
xor
sbb
in
cmpsl
push
jle
pop
daa
xchg
test
enter
xchg
fimuls
cmp
insl
jno
jle
add
sbb
push
mov
and
push
or
sbb
or
pop
loopne
pop
xchg
sbb
or
lods
addb
test
mov
icebp
jmp
and
cs
insl
inc
leave
lret
fimuls
lret
es
negb
cltd
fmuls
add
int
aas
aam
scas
and
or
jmp
addl
xor
dec
add
repz
mov
bound
arpl
mov
outsb
push
mov
mov
mov
push
jmp
lods
push
ljmp
push
xlat
sahf
jecxz
pop
movsl
jle
xchg
test
push
popf
jne
inc
out
ror
cmp
cs
and
loop
sbb
lret
add
cltd
push
jno
pop
popf
mov
into
into
push
mov
cmp
rol
push
cmp
js
je
add
pop
cmp
popf
mov
js
lret
neg
ds
out
dec
cltd
push
push
movsl
cmp
in
xchg
mov
mov
sub
xlat
ret
sarl
mov
cs
push
sbb
call
sub
aas
adc
push
sub
push
int
add
lods
or
lcall
inc
fdiv
sub
or
adc
xor
loope
xor
add
divl
rcrb
aam
out
out
mov
fs
jnp
es
fdivs
mov
orl
aad
and
jnp
add
xor
push
mov
push
add
fidivrs
jb
sti
xor
lcall
dec
push
jle
mov
subl
jne
xchg
cmp
xor
adc
sbb
mov
jle
mov
adc
adc
mov
movsb
push
xor
pop
call
xchg
pop
cmp
xchg
js
lahf
cmp
fisubrs
sub
push
adc
fwait
and
or
dec
scas
push
ret
js
and
or
ds
inc
movsl
mov
mov
mov
fs
js
bound
mov
pop
cltd
lds
ret
int
aad
jno
push
add
add
std
sbb
mov
xor
cmc
jge
xchg
mov
movsl
mov
pop
mov
inc
inc
movsb
arpl
pop
push
add
xor
das
pop
cmp
and
mov
push
aas
cld
sbb
push
jns
jmp
sub
add
xlat
lea
loopne
cmp
stc
jle
push
xchg
gs
mov
pop
fimull
clc
mov
mov
dec
sbb
int
xor
xor
push
sahf
dec
lea
adc
into
ret
mov
fidivrs
sub
xchg
jne
cwtl
mov
jnp
stos
fstps
cmp
mov
fimuls
and
data16
mov
mov
pop
sbb
loop
xchg
pop
imul
inc
fimuls
mov
pop
lahf
pop
or
and
lret
pop
nop
mov
arpl
cli
push
jae
pop
lods
stos
fistpl
xchg
adcl
enter
mov
ljmp
imul
fimull
ret
mov
jnp
addr16
mov
stos
fisubs
jbe
mov
daa
adc
push
inc
xor
jg
fwait
mov
popf
neg
mov
xchg
loopne
mov
push
mov
mov
sahf
push
cli
sbb
jp
stc
pushf
loop
cmpsb
out
mov
vhsubpd
fidivs
nop
lea
dec
popf
pushf
jno
orl
mov
mov
fisubrs
loopne
movsl
sub
jmp
add
out
in
cltd
in
outsb
les
xchg
dec
or
and
mov
popa
or
stos
adc
pcmpgtb
pop
inc
adc
xchg
sbb
xlat
adc
and
xchg
add
xor
pop
ds
xchg
scas
cmp
push
cwtl
pop
leave
inc
outsl
shlb
popa
out
mov
sbb
mov
loope
shrb
imul
push
setle
add
inc
jbe
shrl
andb
stos
dec
or
jae
push
loopne
lods
leave
pop
ret
push
xchg
push
cmp
mov
dec
mov
dec
inc
and
pop
xor
pop
xlat
jge
scas
dec
push
les
mov
or
and
stc
xor
jbe
outsb
jmp
sub
adcb
mov
xchg
and
insl
dec
pop
sbb
cwtl
jge
fsubl
outsb
out
xchg
ret
push
add
mov
ds
xlat
popa
lods
push
inc
jge
xor
sbb
sub
insb
xor
std
out
xchg
mov
movsl
adc
push
popf
jmp
repnz
cmp
out
aaa
fldenv
lods
loop
mov
adc
dec
jge
sub
push
cwtl
mov
cs
bound
loopne
or
inc
cmp
mov
sub
adc
divl
adc
or
push
xor
adc
lret
sub
mov
idivl
push
xchg
rcrb
mov
inc
dec
mov
push
cmpsl
jno
cmp
inc
mov
jno
rcl
mov
insb
xchg
scas
adc
or
pop
sub
or
lods
mulb
insl
adc
ret
jno
lret
addr16
mov
mov
pop
cltd
mov
insb
shrl
mov
stos
dec
xchg
lods
jg
loopne
sbb
sbb
shrb
jle
and
pop
cs
push
neg
lods
lods
sarb
ret
adc
outsl
cmp
mov
cmp
pop
pop
shrl
sub
jno
sub
xchg
fwait
imul
jae
iret
xor
roll
push
pop
push
jae
mov
loopne
loopne
dec
add
fistpl
fs
jno
mov
in
fdivrs
lcall
orb
jmp
mov
or
test
dec
dec
fisubrl
push
pop
push
popl
jne
or
dec
and
fwait
pop
mov
subb
shl
stc
jge
inc
dec
sub
add
xor
lret
inc
push
or
push
in
gs
testl
cmovns
xchg
cmc
call
fbld
adc
pop
inc
xor
sub
mov
adc
icebp
pop
mov
je
sbbl
mov
lret
xor
test
xlat
cwtl
ficoms
mov
jp
inc
aas
sub
repnz
cld
scas
dec
adc
push
and
cmp
add
xchg
mov
out
leave
jns
movsl
mov
push
xchg
add
pushw
testb
out
orl
fidivl
cwtl
dec
shrb
rolb
mov
sbb
enter
sahf
pop
les
xor
inc
es
sbb
jbe
int3
jl
jle
cmp
mov
test
lock
mov
cmpsb
lock
and
insl
xchg
loop
mov
test
scas
push
pop
inc
test
cmc
pop
sbb
dec
adc
and
leave
sbb
add
mov
ret
xlat
pop
jl
sbb
xor
xchg
into
adc
dec
daa
pop
into
jle
jb
push
pop
adc
jne
loope
inc
xchg
shlb
fucomip
int3
in
pop
stos
pushf
cmp
negl
lret
mov
in
inc
imul
add
jge
testb
sti
push
arpl
movsl
adc
mov
pop
pusha
xchg
test
mov
add
or
mov
cwtl
dec
ret
jp
inc
adc
add
and
ret
push
imul
insb
pop
fcmovu
add
and
loopne
inc
rorl
push
ja
std
lods
mov
insb
mov
push
aam
and
xchg
jge
cld
push
adc
test
lcall
lods
jbe
sets
ss
fstps
mov
pop
sub
jns
ret
movsb
push
mov
lods
xchg
jp
or
dec
jge
leave
ret
mov
popa
mov
push
jno
lock
aas
pop
mov
iret
adc
clc
jns
jge
push
mov
fstl
cs
sbb
aas
xchg
sbb
cmp
out
add
fisubs
mov
les
ljmp
int3
jmp
xor
push
mov
insb
dec
adc
and
jo
call
insb
test
pop
iret
add
aam
push
xchg
jl
pop
mov
loopne
cmp
sub
mov
xor
mov
ret
dec
imul
dec
jo
and
jno
inc
fsubs
add
arpl
xchg
dec
sahf
xor
cmc
addr16
sbb
aad
popf
xchg
lock
cmc
lods
pop
aad
mov
jmp
or
repnz
and
mov
ljmp
or
cs
lock
xchg
sub
jmp
fsts
aad
bound
sub
cmpsb
and
ss
fistpll
sbb
ret
sub
push
jae
movb
sbbb
cmpsl
ret
sub
fdiv
leave
sbb
movsl
jno
pushf
lahf
sub
test
movsl
mov
rcl
ror
mov
adc
mov
in
das
xchg
inc
loope
mov
idivl
int
xchg
mov
or
mov
jl
scas
cwtl
push
adc
push
and
adc
mov
push
adc
sub
outsl
dec
jmp
xchg
repz
fidivs
mov
xor
test
sub
iret
aam
lcall
mov
inc
shld
imul
sbbb
ret
push
xchg
aam
mov
mov
gs
mov
mov
out
mov
fwait
movsl
rcll
ds
or
popa
pop
and
inc
repz
aad
mov
mov
sahf
add
jnp
jb
or
ljmp
add
in
sbb
cmpsl
rcrb
push
lea
movsl
seto
ds
mov
sbb
add
and
cmp
cld
test
cmc
loopne
sbbl
imull
jae
sub
xchg
xor
jg
inc
enter
or
dec
mov
mov
jo
inc
xchg
mov
push
jecxz
or
jl
mov
out
popa
fcmovne
pop
sbb
and
hlt
adc
scas
notb
outsl
lods
daa
mov
fstpt
ja
hlt
out
mov
mov
dec
stos
dec
call
xchg
daa
sub
dec
aad
mov
leave
adc
xorb
sub
insb
xor
shrb
dec
fdivp
dec
ss
rorl
mov
pop
pushl
call
jnp
jo
cmc
popa
sbb
sbbl
cmc
pop
mov
inc
outsl
adc
test
iret
lret
add
cmp
fsubl
imul
push
mov
loope
addr16
int3
xor
inc
in
bound
icebp
sets
jbe
push
jne
rolb
rcr
jb
roll
loope
ret
xchg
adc
cmp
inc
pop
lock
cmp
lock
jmp
push
cltd
fldl2t
data16
cs
movsb
adc
je
jb
or
jg
xor
jns
push
jae
ret
pop
add
lahf
jnp
jne
out
sti
inc
xor
jle
lret
push
xchg
mov
sub
mov
adcl
mov
push
int3
fistps
and
jo
jns
aam
adc
out
add
inc
jmp
stos
popl
imul
loopne
cwtl
ja
mov
testb
mov
add
inc
stos
dec
sub
insl
int
jle
xchg
mov
add
add
add
jge
inc
lret
imul
jle
arpl
mov
popa
mov
pop
mov
div
jo
sbb
adc
adc
hlt
push
jle
xor
xchg
ret
in
inc
je
std
lahf
hlt
mov
and
xchg
insb
loop
cwtl
xor
and
xchg
or
pop
stc
push
pop
ja
sub
pop
xor
lret
inc
add
ds
sti
push
add
lds
clc
inc
outsb
jle
ljmp
and
movsl
adc
mov
push
jge
lret
xor
pop
ret
sub
push
jmp
mov
sbb
cmp
dec
leave
pop
mov
dec
hlt
rol
hlt
xchg
cmp
fcmovnu
xchg
sbb
jl
and
mov
adc
lods
clc
fsub
mov
leave
jbe
or
jbe
cwtl
in
mov
dec
xchg
mov
xchg
leave
vmaxsd
cmc
scas
int
jp
popa
sbb
pop
out
mov
mov
xor
dec
add
push
inc
iret
and
fmull
or
sbb
inc
ja
sbbb
sbb
jecxz
mov
mov
pusha
mov
push
xor
les
or
adc
jo
test
mov
fmuls
mov
aam
mov
sub
sbb
sub
imul
lock
dec
aas
adc
dec
xchg
repz
push
fdivs
cli
mov
fbstp
or
inc
push
into
sub
call
push
push
inc
cs
int
jbe
inc
push
orb
mov
jmp
jnp
idiv
cld
popf
test
test
push
xchg
test
lret
ficoms
inc
popf
inc
nop
cltd
test
push
jp
and
push
mov
push
xchg
push
ds
dec
or
leave
out
pop
xor
out
fldcw
xchg
push
mov
sbb
pop
sub
push
add
and
mov
push
leave
adc
dec
or
lcall
in
fbstp
inc
movsb
lahf
stc
jno
sub
enter
in
cmp
or
xchg
jns
mov
enter
or
sbb
test
adc
sbb
push
mov
jmp
add
inc
xor
dec
pushf
mov
repz
aaa
sbb
movsl
cld
fnstenv
nop
popa
movsl
pop
or
jecxz
xlat
dec
pop
mov
mov
jmp
mov
xor
mov
lcall
leave
outsb
jg
inc
push
mov
imul
popa
or
ficoml
daa
sub
outsb
dec
enter
getsec
sbb
mov
push
push
daa
adc
push
mov
aaa
pop
xor
lea
lods
js
iret
popa
std
adc
outsb
repz
adc
and
loopne
andl
int
mov
aaa
shrb
jb
sbb
or
xor
pop
xor
fbld
clc
mov
lods
into
stc
and
dec
insl
adc
call
bndstx
repnz
aas
push
cmp
int
add
mov
mov
scas
in
push
xor
and
dec
sub
sbb
mov
dec
das
pop
stos
rolb
call
push
pop
add
sbb
mov
mov
cli
mov
add
mov
lock
cwtl
fstl
push
mov
inc
rorl
cmp
scas
inc
mov
mov
fldt
imul
mov
ret
testb
and
movsl
divl
push
pop
jmp
push
data16
jns
dec
xor
adc
mov
js
ret
setne
xor
dec
sub
and
xor
insb
pop
add
mov
cmp
inc
gs
fimull
xchg
cmp
dec
xor
xor
mov
in
aas
cmp
js
pop
xor
pop
cltd
pop
dec
dec
jg
andb
jg
lea
jne
jo
dec
ret
sub
cmp
push
dec
push
pusha
ret
dec
int
dec
outsl
pop
fdivrl
in
cmpsl
mov
inc
sbb
or
pop
int
fisttps
push
mov
mov
sub
lret
pusha
cwtl
pop
and
xchg
aas
cwtl
lods
pop
repnz
adc
xor
sub
xor
lcall
jp
out
ja
lret
mov
in
stos
pop
imul
mov
mov
cmp
pop
mulb
iret
or
je
jmp
rclb
jns
dec
les
std
rorb
ljmp
imul
stc
jb
mov
adc
clc
ds
add
xchg
lock
cmc
push
sarb
add
pop
or
cld
sar
inc
js
loop
sub
test
rcll
lahf
and
jb
cmp
add
cmp
cmp
dec
movsl
sub
dec
es
mov
fs
stos
jecxz
xorb
mov
arpl
popl
pop
ss
xlat
jge
push
into
xor
mov
cmp
pop
mov
xchg
es
icebp
addr16
cld
mov
test
scas
cmp
in
and
cltd
fs
inc
mov
push
mov
int
into
push
insb
enter
adc
sti
jl
icebp
test
mov
insb
jbe
in
int
aaa
xchg
hlt
xor
sahf
pushf
or
mov
mov
sbb
mov
adc
sbb
xchg
adc
ret
cli
lret
pop
iret
loopne
add
mov
add
or
scas
or
push
gs
pop
jae
stc
sbb
lret
lock
fmuls
mov
push
xor
lds
pushf
test
hlt
dec
fwait
inc
sahf
push
js
mov
sub
jno
loop
fstl
adc
jp
lods
pop
push
scas
fisttpll
aas
dec
test
pop
loope
mov
scas
dec
push
imulb
push
ss
cltd
cmp
inc
fistl
jl
out
aad
lea
and
je
or
dec
dec
shlb
xchg
add
add
jae
push
leave
xchg
sahf
sbb
mov
xor
stos
jmp
daa
mov
mov
es
ret
je
cmp
sbb
xor
add
je
js
jae
push
inc
add
xchg
push
cmp
adc
push
xor
jp
in
push
mov
jmp
or
test
dec
jecxz
fmul
lea
cmpsb
inc
cmovs
adc
stc
dec
jne
rorl
mov
hlt
dec
cmc
in
and
xlat
inc
imul
imul
mov
fstl
mul
imul
jle
test
adc
jb
jae
shlb
sub
repnz
rorb
push
add
mov
mov
push
inc
les
aas
clc
dec
scas
mov
dec
and
cmp
mov
cli
enter
cmpsl
xchg
mov
push
dec
fistps
jne
leave
dec
jo
xchg
cwtl
je
xor
cli
jnp
mov
mov
test
movl
add
xor
cmp
or
jp
aam
xchg
jne
cmp
pushl
mov
and
into
xor
mov
inc
leave
sub
push
push
mov
dec
cmp
js
push
stc
and
mov
dec
pop
dec
dec
inc
dec
jg
movsl
cwtl
test
mov
enter
xchg
xchg
and
xchg
hlt
push
ret
in
sarl
xor
cmc
sbb
mov
sub
imul
mov
fdivrs
mov
mov
or
rorl
add
arpl
insl
jle
add
jns
outsl
addb
xor
add
movsl
fistpll
mov
sahf
jnp
js
xor
jmp
sbb
fdivrp
ret
stc
shlb
mov
or
es
xor
and
shlb
xorl
push
pop
ret
dec
enter
cmp
das
sahf
addr16
insb
ror
mov
sar
shlb
mov
sti
xchg
mov
ds
int
or
rcpps
aas
adcb
insl
je
sti
mov
je
dec
cmp
xchg
aaa
xchg
ja
ja
testl
mov
lret
jnp
mov
sub
ds
dec
sahf
push
push
mov
jmp
inc
sti
add
popa
inc
xchg
jg
mov
xor
or
jne
cld
adc
orb
jae
fisttpll
dec
mov
imul
dec
add
fisubrs
pop
add
jge
mov
xchg
adc
pop
test
rcrb
sub
test
subb
sti
sarb
pusha
or
fidivrl
mov
mov
jne
daa
cltd
inc
pop
bound
ss
or
lahf
mov
or
cld
fmull
xor
loope
popf
xchg
mov
xchg
jg
pop
xor
fs
adc
jmp
inc
xor
xchg
addl
jmp
inc
jnp
mov
push
pop
cli
adc
mov
lcall
dec
push
xchg
cmp
cmp
sub
jo
push
sub
mov
push
push
test
dec
icebp
dec
test
ds
mov
and
je
dec
in
popf
adc
xchg
in
ret
ret
add
in
mov
dec
add
loope
inc
int3
insl
sarl
mov
bound
cmpsb
js
mov
mov
jecxz
mov
icebp
testl
jl
push
jp
pop
enter
mov
js
jne
fldl
mov
mov
or
xor
dec
push
pop
in
jle
cmp
jno
mov
inc
mov
outsb
jmp
sarl
pop
add
mov
mov
jmp
sahf
leave
lods
cmp
xchg
pop
jne
fldl
xchg
dec
mov
mov
cs
stc
scas
mov
push
dec
mov
inc
adc
je
sbb
or
jp
repz
leave
mov
cltd
inc
mov
lcall
fildll
and
es
mul
test
mov
addl
loope
cld
lods
sbb
loope
adc
nop
inc
stc
jae
xchg
sahf
mov
mov
cli
sti
cmp
and
inc
stc
scas
xor
push
fistps
xchg
jnp
enter
jb
hlt
inc
jbe
mov
mov
repnz
xor
imulb
imul
push
loopne
mov
movsl
cwtl
dec
xchg
pop
mov
int
cmp
aad
dec
cmpsl
and
mov
mov
dec
cmp
jg
pop
leave
xlat
dec
mov
out
push
insb
sub
fldenv
cmp
out
stos
mov
les
das
stos
push
sbb
add
lret
sbb
cs
xchg
push
cmc
sbb
test
mov
fnstsw
pop
dec
nop
mov
shl
cmp
mov
sbb
and
rcrl
addr16
mov
pop
push
push
cwtl
mov
xchg
sub
push
xchg
mov
fwait
outsl
xchg
mov
mov
lock
stos
int
arpl
adc
sti
xor
cmc
shll
les
pop
das
mov
xor
test
push
push
hlt
cmp
mov
sar
mov
mov
pop
call
pop
dec
mov
fimuls
mov
imul
bound
sub
fisttpll
ret
mov
mov
cmc
xchg
cmpsl
lds
push
mov
mov
loope
outsb
in
mov
inc
sub
xchg
shlb
dec
lea
inc
int3
push
jns
in
imul
pop
or
xchg
mov
sub
std
mov
mov
xor
dec
add
adc
or
inc
sti
rcrl
push
fidivrs
dec
or
pop
scas
sbb
addl
mov
out
lret
cwtl
mov
lcall
dec
jmp
pop
mov
stc
mov
lea
test
dec
lods
gs
movsb
pop
or
cltd
mov
pop
out
and
addr16
adc
jbe
cld
stc
push
xchg
sub
inc
call
bound
int3
push
std
dec
lea
enter
iret
sub
inc
test
pop
pusha
adc
movsl
xchg
xor
adc
pusha
xchg
outsl
ret
dec
repnz
jb
or
gs
xlat
nop
pop
xor
leave
subb
data16
push
lds
sbb
jo
test
daa
xchg
dec
popa
fldl
dec
dec
imul
push
outsl
in
ficoms
push
cmpsb
repnz
mov
push
fisubs
jmp
mov
push
sbb
push
dec
ljmp
cmc
jl
mov
push
and
dec
adc
ret
mov
or
cli
wrmsr
pop
sbb
sub
sub
nop
ds
sbb
sbbb
cs
popf
pushf
jecxz
adc
das
insb
xor
pusha
aaa
iret
mov
lret
out
and
inc
adc
lret
or
or
popa
cld
mov
cmpsl
mov
sub
lea
pop
xlat
test
adc
or
sbb
imul
dec
and
pop
xchg
insl
mov
call
popf
pop
std
push
push
pop
sbb
jb
cmp
rcl
inc
in
lret
push
popa
mov
push
and
pusha
pop
or
out
pop
adc
mov
std
je
sbb
nop
or
xor
popa
add
xorl
shlb
pusha
push
sub
jmp
int3
ffree
xchg
fiaddl
or
sub
pop
out
mov
mov
fcoml
ja
sbb
xor
jg
int3
xchg
aad
sub
mov
aaa
add
mov
sti
pop
jbe
jb
test
iret
pop
rcl
in
xor
daa
ljmp
dec
dec
jp
add
mov
daa
aaa
or
sbb
xchg
addl
lds
mov
xor
mov
inc
gs
inc
push
sbb
adc
nop
add
in
lahf
adc
push
push
mov
mov
int3
mov
push
xor
cli
std
out
rcrb
cmpl
loop
add
jbe
popf
jmp
dec
jecxz
add
adc
ret
sbb
out
jecxz
ret
ret
cli
in
mov
push
and
mov
push
mov
xchg
cmpsl
insl
pop
mov
push
mov
mov
imull
jge
int3
cmpsl
lods
jne
mov
jmp
stc
pop
or
pop
jl
adc
testl
lods
or
test
aaa
out
mov
cltd
inc
ss
cmp
mov
pop
hlt
lahf
ljmp
fidivl
insl
jecxz
loop
mov
popf
and
xchg
repz
xchg
xor
repnz
fisttpll
pop
out
stos
scas
cmp
adc
mov
push
in
fsubrp
adc
mov
arpl
int3
shl
mov
mov
outsl
sti
jo
and
sbb
inc
shlb
imul
addr16
lret
cmpsl
ds
mov
inc
xor
xchg
in
cmp
xor
mov
mov
sub
fimull
mov
or
shlb
xchg
mov
sti
ss
adc
jae
fsubl
lcall
dec
int
std
mov
out
adc
and
lods
pushf
inc
sub
or
pop
mov
sub
and
jp
adc
scas
xchg
jns
fstp
in
and
push
xchg
mov
ret
subb
push
sbb
enter
and
sub
jnp
dec
push
push
je
repnz
pop
std
cmpl
inc
ljmp
iret
hlt
push
popa
popa
fcoml
dec
pop
jge
gs
xchg
push
push
ss
loop
fidivl
das
rol
arpl
adcb
mov
fcomi
and
stos
and
xchg
pop
jecxz
pop
dec
push
nop
mov
loope
mov
std
repz
adc
mov
xchg
in
int
ret
iret
outsb
xchg
cmp
cmc
test
rolb
push
sbb
call
and
dec
cmp
mov
add
mov
mov
xchg
mov
dec
mov
mov
pusha
mov
push
xchg
aad
mov
ss
pushf
or
mov
mov
ffreep
jmp
dec
push
cmp
out
aam
mov
aad
jg
test
sahf
jae
sub
shrb
dec
mov
sub
pop
jb
pop
and
inc
push
add
adc
stos
je
mov
push
mov
clc
adc
inc
xlat
add
jmp
fisttpll
adc
jns
imul
jl
cld
repz
mov
fcomp
fistpl
jp
hlt
movsl
insb
rol
sub
or
addb
lcall
xor
jmp
adc
add
jo
cltd
xor
iret
jmp
lods
sub
dec
mov
cmpsb
call
fstpt
inc
outsl
fldt
stc
mov
sbb
jmp
js
orb
pop
cmp
shll
inc
cmp
shl
int3
sub
inc
mov
icebp
stos
loop
jp
scas
test
mov
dec
mov
jne
push
cmpsl
std
xlat
mov
in
xchg
test
mov
mov
mov
sbb
cmp
repz
lods
lret
jle
aas
sbb
xor
jns
testl
fisubs
inc
lds
jae
xor
in
pusha
icebp
jg
mov
mov
aas
loope
mov
es
cmpsl
pusha
adc
stc
xor
and
mov
mov
mov
stos
repz
cmp
in
jo
pop
jle
or
sub
loopne
aad
add
mov
sub
push
xchg
dec
pop
add
stos
out
negl
aad
and
cmp
pop
ljmp
dec
or
les
test
in
stc
sahf
movsl
mov
and
inc
xchg
shlb
lahf
mov
cmp
inc
jnp
cmpsb
stos
out
dec
sbb
sub
arpl
jecxz
ss
xchg
jecxz
and
ss
add
sbb
fildll
push
in
stos
rcl
out
xlat
xor
mov
mov
iret
out
push
jp
out
mov
negb
and
ret
and
in
push
add
cmp
leave
mov
jecxz
pop
roll
aaa
cmp
scas
pop
jns
jmp
cmpsb
sbb
mov
iret
lods
sub
fcomps
fs
xchg
stos
fcoms
in
lock
jo
cltd
pop
and
inc
pusha
jle,pt
mov
test
ss
dec
pop
insl
lock
or
rorl
jmp
out
ja
push
jecxz
inc
adc
aas
jbe
test
inc
lock
jecxz
sub
xchg
jg
pop
imull
push
xchg
and
inc
pop
jl
mov
push
cmp
insb
add
mov
daa
inc
inc
push
shrb
xchg
les
hlt
mov
int3
push
or
xchg
cmp
mov
dec
jmp
fs
je
in
aad
cmpl
sub
call
add
pop
mov
ja
in
faddl
jno
lock
fisubs
icebp
mov
and
bnd
mov
call
popf
sbb
mov
xchg
sbb
loope
bswap
or
imul
dec
insl
mov
or
outsb
movsb
fsubrl
or
xchg
jle
jle
incb
push
jbe
sarb
push
jne
add
inc
xor
stos
nop
test
pop
mov
push
mov
sub
jmp
cli
or
subb
jb
lahf
fldenv
adc
addr16
xchg
loop
push
cld
fildll
xchg
or
dec
jb
lods
mov
scas
xor
sti
dec
clc
loop
and
in
aas
test
jmp
and
lret
mov
push
sub
jbe
adc
cmp
imul
cmp
lret
push
mov
stos
or
mov
inc
jmp
scas
and
xor
inc
mov
movsb
cmpsb
insl
and
insl
add
into
sbb
adc
cmpb
pusha
leave
xchg
int3
inc
loop
add
aaa
addps
dec
imul
rcrb
aaa
or
add
pusha
pushf
je
outsb
adc
jmp
testl
idivl
popf
xchg
cmp
cmpsb
xchg
orb
jmp
adc
test
pop
dec
mov
pop
rorb
rorb
andl
jns
loop
jns
addr16
push
in
push
ljmp
in
jle
add
xor
ret
inc
jecxz
xor
aaa
adc
cltd
std
jecxz
xchg
sbb
orl
into
jne
in
jge
fisubrs
leave
dec
in
es
call
push
test
and
sbb
mov
outsb
test
lret
insb
adc
cmpsl
and
cs
mov
mov
push
inc
adc
xorb
or
outsb
shlb
notb
sub
cmc
mov
inc
lds
pop
int3
and
in
xchg
ret
pop
mov
xchg
rcrl
mov
stos
mov
mov
mov
popa
and
xor
enter
rcl
dec
movsl
jl
loope
pop
push
lds
mov
sub
fsubs
sub
sahf
push
outsl
outsl
mov
push
adcl
outsl
add
cmpsl
cmp
mov
rcrl
push
sbbl
ret
flds
icebp
xchg
sbb
movsl
dec
lret
mov
divl
inc
das
xor
fs
add
xchg
add
ret
mov
sub
mov
out
inc
xor
jge
int3
ficompl
mov
daa
or
mov
and
popf
push
ret
xor
cs
mul
gs
jecxz
and
pop
adc
mov
shl
sub
adc
xor
popf
test
aaa
enter
pop
xor
mov
fwait
pop
pop
mov
jp
dec
pop
shlb
cwtl
inc
outsl
cmp
xor
or
xor
sbb
mov
into
loopne
mov
xor
mov
aad
roll
pop
xchg
fwait
lahf
xchg
das
jmp
or
mov
idivb
sub
cmpsb
sbb
mov
push
pop
pushf
popf
xor
sub
or
lahf
stc
jo
les
xor
mov
cmpsb
out
push
xchg
dec
in
mov
jns
andb
jb
adc
repz
ficomps
push
sub
xchg
xlat
xchg
in
in
lods
popf
xor
sti
add
shrl
nop
andb
or
adc
imul
dec
les
out
xor
test
icebp
pop
es
sub
inc
jp
mov
ficomps
fstpl
fstps
leave
mov
imul
xchg
test
add
and
pop
inc
jmp
pushf
mov
xchg
sub
mov
push
inc
sub
jge
fistl
sub
fldt
xchg
push
aas
adc
shll
adc
int3
pop
adc
or
negl
mov
push
push
dec
and
in
lcall
pop
mov
push
cmp
mov
lcall
ficoms
orl
mov
jb
mov
dec
lods
jbe
mov
lock
repz
xor
sbb
call
arpl
jmp
pop
inc
xchg
pop
inc
xor
mov
mov
xchg
add
loopne
cmp
popf
imul
inc
adc
imul
or
jmp
or
mov
shlb
std
jp
sbb
aaa
inc
clc
mov
mov
inc
es
add
shll
sub
mov
aaa
mov
repnz
cmpsl
mov
or
out
ret
mov
push
mov
aaa
pop
jl
lahf
lock
bound
scas
out
fcompl
jp
movsl
inc
add
int
loope
into
mov
mov
mov
mov
in
shlb
and
xor
lahf
add
test
in
adc
push
scas
or
dec
sbb
sbb
fimuls
cs
push
notb
add
add
jg
mov
imul
pusha
ret
sti
pop
daa
in
inc
shlb
pop
pop
or
sbb
fsubrs
pop
and
cld
leave
ss
xor
pop
mov
mov
xchg
clc
sub
test
popf
je
xor
data16
sbb
push
enter
mov
sbb
and
sbb
mov
xlat
jb
sub
scas
movsl
sub
std
rcll
mov
add
xlat
inc
add
test
adc
cli
inc
jo
arpl
push
pop
dec
lret
cltd
jle
aad
or
cmp
dec
xchg
loopne
push
jne
and
call
push
sahf
mov
sbb
outsb
jno
fisubrl
mov
loopne
outsl
or
pop
sbb
fisttpll
add
into
cmp
les
icebp
cs
push
jnp
sbb
lock
outsl
jno
cmp
lods
add
mov
shrl
js
mov
ljmp
xchg
test
sarl
int3
stos
jge
movsb
cmp
rclb
mov
sbb
adc
mov
push
pusha
push
in
mov
jl
mov
rol
mov
push
cltd
jp
or
es
cmp
mov
int3
mov
sub
xchg
or
loope
push
rorl
jle
mov
xchg
or
test
adc
xchg
push
jne
lods
stos
mov
or
lcall
dec
rolb
and
fucomi
inc
push
pop
inc
bound
popf
adc
das
mov
notb
fcmovnbe
sarb
sbb
sbbl
les
std
fidivl
call
scas
inc
popa
lock
int3
xor
cmp
push
scas
out
push
cmpsl
out
in
jmp
pop
add
sbb
push
dec
jp
mov
into
mov
clc
or
jnp
repz
pushf
outsb
cmpb
inc
roll
lock
ljmp
test
adc
cmp
fadd
jb
popf
xlat
adc
imul
adc
cmpsb
rcr
iret
cmp
aam
adc
xchg
adc
es
push
insl
jl
xchg
sub
lods
fimuls
sub
je
shlb
aaa
pop
mov
jno
in
push
xchg
mov
mov
xchg
cli
sbb
or
cmpsl
push
movsb
cmp
mov
inc
add
ror
pop
push
lods
xchg
insl
hlt
loopne
cld
faddl
push
xlat
js
es
mov
outsl
jg
jle
gs
cld
and
sti
sbb
cmc
lret
fwait
adc
mov
bound
rcll
jae
sbb
addb
adc
icebp
mov
cmc
dec
adc
push
dec
pop
dec
aaa
and
push
stos
pop
mov
aam
sbb
scas
add
stos
out
pop
nop
mov
into
dec
divl
mov
pop
jns
pop
pushf
dec
push
fnstsw
insl
or
xchg
in
fdivrs
lret
mov
mov
les
lret
arpl
inc
lods
mov
out
sbb
mov
lret
fbstp
sbb
das
pop
stc
bound
outsl
pop
js
sub
js
and
pop
dec
pop
mov
jae,pt
arpl
and
push
sub
and
push
ficompl
mov
in
mov
cltd
ret
cli
pminsw
sbb
mov
in
ss
fs
mov
jo
xor
pop
pop
dec
out
and
sub
pop
adcl
popa
fs
add
pusha
xor
into
mov
and
xor
outsl
mov
dec
cmp
fstp
inc
lock
mov
jmp
shll
dec
sbb
add
fs
cmp
jbe
sub
sbb
rolb
pushf
arpl
or
jo
test
jo
cld
test
and
shlb
lea
imul
fimuls
xchg
or
adc
xchg
adc
lcall
dec
and
ret
out
jbe
mov
jmp
fdivr
xchg
adc
cmpsl
jl
cmp
aam
sahf
inc
adc
movsb
add
and
inc
mov
mov
fsubrl
sbb
xor
adc
jae
mov
shrb
mov
jle
add
call
mov
cmp
and
adc
lods
pop
stc
repz
cmpsb
or
ret
mov
popf
aas
cmc
inc
pop
mov
sub
add
pop
xor
notb
cli
test
cld
inc
fdiv
cld
dec
fldenv
inc
or
movsb
push
sbb
dec
setge
cli
clc
roll
pop
fcmovu
adc
cwtl
push
jecxz
insb
rcll
pop
mov
stos
fnstsw
imul
add
mov
push
push
ficomps
pop
stos
subl
or
adc
ljmp
dec
int
jae
add
mov
jecxz
mov
das
xor
adc
imul
int3
out
pushf
lret
jae
mov
mov
movsl
loopne
pop
sub
aaa
pop
scas
dec
jge
cmc
test
or
in
data16
mov
mov
shlb
xchg
loope
pop
xchg
jns
test
add
and
test
sbb
lret
test
leave
lret
dec
insl
pop
ja
jns
addr16
das
outsb
shrl
xor
stos
or
mov
test
popa
into
sbb
mov
and
mov
sti
lds
xchg
adc
sbb
mov
clc
or
mov
lea
add
mov
pop
cwtl
jmp
push
sbb
or
inc
xor
adc
push
cs
imul
add
mov
push
push
jo
imul
xor
mov
sub
add
xor
cmc
inc
mov
int3
fisubl
jmp
cmp
sbb
sbb
jne
sub
jno
or
pop
mov
cmpsl
imul
pop
js
push
test
test
inc
loop
pop
fistl
xor
hlt
addb
mov
mov
in
repnz
and
stc
jecxz
pusha
mov
mov
rol
jp
inc
sti
scas
rcr
push
test
mov
cmp
add
ret
xor
mulb
or
or
fnstcw
adc
and
dec
mov
bound
xorb
pop
movsl
repz
repz
cmp
mov
fdivrp
lret
fisttpll
ret
mov
mov
xorb
loopne
add
sbbb
cmp
mov
or
mov
sbb
push
or
pop
pop
cmp
leave
mov
inc
fstl
push
and
test
xchg
ds
fucompp
fadds
lock
adc
cmp
mov
sbb
scas
jo
movsl
xchg
imul
sbb
jne
inc
dec
mov
pushf
lcall
decb
mov
fs
dec
adc
pusha
call
cmc
mov
inc
xor
stos
movd
popf
jle
test
stos
or
xchg
jl
sbb
or
stos
xchg
outsb
ss
shrl
aad
iret
les
mov
lret
sbb
out
lahf
pushf
mov
imul
dec
notb
xchg
cmp
mov
cwtl
sarl
pop
inc
mov
sub
out
xor
or
out
xor
stc
cmpsb
sbb
sarb
pop
in
out
lock
cmp
ds
shll
test
mov
jno
sub
les
les
xor
scas
mov
in
and
out
xor
and
movsl
sub
adc
in
aaa
fcoms
sub
sahf
push
pop
ret
enter
pop
out
jp
xor
and
jg
push
dec
cmpsl
frstor
jmp
fisubrs
andl
idivb
fisubs
add
fistl
push
inc
pusha
imul
aad
sti
cli
sbb
loopne
jg
pop
lret
jge
stc
mov
lock
lods
mov
cmp
dec
sub
ljmp
and
insb
ret
xchg
xchg
mov
cmpsb
push
cmove
clc
jg
aas
cmp
sub
jbe
pop
cmpsl
into
test
repnz
sub
call
addr16
mov
fistps
cmp
fnsave
daa
imul
fcomip
mov
and
or
rcrb
aaa
sub
jns
or
test
jb
loop
xchg
push
negl
sbb
dec
andl
clc
xchg
mov
std
les
cmp
or
mov
ja
cs
loopne
shl
xchg
orb
sbb
test
or
call
test
pop
hlt
mov
test
daa
aad
in
in
sub
sbb
jge
push
lcall
fs
jno
inc
jmp
inc
lds
lcall
icebp
scas
cmp
mov
andl
fstps
mov
int
xchg
xchg
stos
cmp
adc
or
cld
test
jmp
outsl
mov
hlt
aas
xor
aas
daa
xchg
jge
sub
xchg
mov
add
ss
pop
stc
xchg
icebp
add
into
push
mov
mov
mov
dec
aas
decb
jmp
mov
dec
mov
mov
pop
sbb
outsl
and
adc
jbe
sub
cwtl
inc
mov
mov
push
loope
jnp
fildl
and
inc
test
popa
leave
push
push
jp
push
adc
clc
pop
lock
inc
cmp
push
mov
dec
cs
xchg
or
lea
ret
inc
sub
adc
push
sbb
push
add
cmpl
lahf
inc
cld
xchg
push
mov
in
mov
nop
inc
test
repnz
push
je
addr16
cmpsb
hlt
ficomps
mov
lds
cwtl
movsl
arpl
jle
lcall
decl
and
xlat
pop
and
push
rolb
nop
adc
add
into
js
adc
sub
les
cmp
xchg
pop
fwait
add
mov
gs
and
imul
lea
rcrb
fwait
popa
jmp
loop
mov
daa
out
cwtl
or
push
in
pop
add
inc
fs
fcoml
sbb
and
jle
push
rcll
xor
push
add
dec
mov
shl
push
inc
dec
test
fmuls
mov
and
arpl
push
pop
scas
sub
push
sub
out
cmp
divb
out
mov
jl
test
lock
enter
push
les
pop
adc
push
shrl
test
dec
imul
jecxz
imul
out
ds
scas
push
shl
sbb
xor
jns
les
mov
outsb
push
test
jae
and
fstl
sub
cmp
dec
dec
mov
push
pop
movsl
loop
xchg
sbb
pop
daa
inc
push
hlt
mov
sbb
push
lods
inc
aaa
fdivrs
mov
pop
les
or
mov
add
gs
in
fisttpl
fnstsw
cmp
mov
fnstcw
mov
pop
sub
movsl
stos
xor
mov
cmp
lea
loop
jae
sbb
jle
lahf
mov
add
push
cltd
lds
xchg
push
push
xor
inc
arpl
push
test
icebp
shlb
cmpsl
push
jnp
prefetchnta
test
xchg
and
leave
push
push
movsl
cmp
adc
push
rclb
test
adc
mov
pop
fidivl
fcompl
mov
int
faddl
jno
cmp
int
lds
cmpsl
bound
xor
stos
mov
lahf
jmp
lret
xchg
pop
jns
data16
lcall
arpl
or
movsb
push
std
out
loop
aam
cmp
int
pusha
lock
fstpt
das
orb
jge
hlt
add
xlat
sbb
push
je
pusha
push
fadd
pop
jecxz
dec
sub
std
push
pop
shrl
push
jns
sbb
ret
jo
jo
sub
sti
xchg
lods
mov
add
add
es
jg
jne
jb
mov
jmp
insl
pop
jae
in
adc
or
push
fs
iret
pop
out
out
in
jl
push
jmp
ja
or
sub
sub
or
mov
nop
adc
shrl
xor
jmp
gs
enter
add
ss
mov
ds
sbb
ss
out
leave
subl
or
mov
mov
fcompl
push
mov
cmpsl
arpl
mov
insl
push
loope
cltd
mov
or
push
shl
or
clc
xor
stc
jmp
out
xchg
mov
daa
jge
xor
sub
popa
prefetchnta
mov
jbe
insb
sub
repnz
pushf
sub
jo
and
aaa
leave
in
and
sbb
icebp
add
sub
mov
add
mov
in
push
mov
and
fbstp
out
mov
add
lret
movsb
adc
inc
mov
les
push
or
dec
fwait
out
les
enter
push
mov
sbb
jbe
or
xor
sbb
pop
lea
daa
mov
ds
adc
push
std
fsts
and
xchg
mov
adc
sub
loopne
das
cmp
test
jne
sahf
cmp
loop
add
sti
repz
enter
xchg
in
stc
std
ja
push
nop
cmc
mov
aam
outsb
fildl
scas
sahf
repnz
in
push
cmp
scas
push
or
leave
cmpl
mov
call
and
xor
add
adc
rcll
hlt
xchg
fistps
gs
movsb
jnp
inc
jge
fidivrs
xchg
fwait
sti
or
shlb
mov
push
xchg
push
mov
pop
frstpm(287
pop
sahf
mov
xchg
mov
lcall
xor
pop
lcall
jp
incb
xor
inc
loope
mov
fbld
enter
loope
jno
mov
call
repnz
bound
js
cld
fimull
iret
cld
pusha
pop
sbbl
inc
push
popa
jg
icebp
fildll
call
fs
testl
aad
and
mov
mov
sarb
cmp
jo
lret
movsl
mov
sti
lea
and
sbb
mov
call
loop
jae
call
and
cmp
orb
pop
or
popa
sahf
or
std
shl
or
pusha
pop
shll
inc
push
add
mov
pop
pop
sahf
inc
call
inc
jb
dec
mov
fsubp
jmp
andb
sbb
jg
add
setns
loop
hlt
sbbb
add
scas
outsb
cmp
cmp
push
jmp
mov
inc
adc
lcall
aad
lods
push
mov
and
lods
ja
sub
mov
pop
push
pop
or
xor
push
mov
cmp
lcall
pop
mov
in
bound
adc
jae
xchg
bnd
out
mov
lret
cmp
push
mov
pushf
sub
lret
es
push
outsl
jo
xor
and
das
mov
sub
sub
mov
repz
jo
xchg
dec
pop
mov
clc
fdivrl
add
int3
test
rcrl
mov
pop
push
xor
and
ds
cmpsb
in
fwait
ret
cmpsb
inc
cmp
insb
outsb
sbb
ror
jge
add
sarl
lea
mov
sbb
dec
xorl
fcoml
or
push
sub
out
adc
push
pop
xor
pushf
mov
lods
cmc
cld
mov
add
mov
and
adc
test
push
cmpsb
pusha
xor
lcall
cmpsb
add
push
inc
lds
mov
imul
mov
mov
cmpsb
sub
call
lcall
in
mov
iret
iret
mov
int
movsl
add
push
and
cltd
and
clc
fwait
insb
push
stos
fisubl
out
mov
cwtl
outsb
mov
mov
mov
fwait
inc
lcall
or
inc
add
movsl
js
xor
mov
sbb
in
jecxz
arpl
push
call
and
in
out
ljmp
out
fwait
dec
cwtl
iret
arpl
ret
inc
pop
cld
rorl
xor
mov
mov
xor
ljmp
fcom
ret
cmp
sub
repnz
add
and
subl
ret
push
enter
and
push
jecxz
fstps
pop
gs
mov
adc
insl
bound
ror
and
and
movb
pop
ja
push
push
arpl
icebp
cmp
loopne
cmp
sub
xor
sar
or
pop
fdivrs
push
dec
mov
cmp
jns
aaa
in
ljmp
push
addr16
js
mov
push
stos
pop
adc
jbe
loope
xor
das
dec
sub
pushf
xor
pop
inc
mov
jl
and
xlat
ret
pop
push
inc
shlb
shrb
sbb
popf
jno
prefetchwt1
das
movsl
iret
lcall
push
xchg
movsl
adc
mov
lock
jae
jmp
mov
notb
bound
mov
pushf
ffree
sub
push
and
stc
insl
dec
inc
push
call
test
mov
jnp
push
cmp
xor
jle
push
call
xchg
sbb
fdivr
and
mov
call
dec
hlt
arpl
push
out
popf
aaa
imul
jne
daa
adc
fwait
outsb
mov
and
movsl
push
clc
pusha
testl
inc
adc
mov
jl
xchg
mov
test
iret
sub
imul
lea
cmp
out
xchg
imul
and
mov
cmp
shrl
sbb
gs
shlb
adc
mov
sbb
pop
sbb
ja
aas
push
adc
daa
push
lret
jmp
andb
xor
pop
cmpsb
push
repz
mov
mov
jp
jnp
stos
imul
and
outsl
add
movsl
cld
mov
mov
pop
movsl
fwait
sub
icebp
andb
gs
cmpsl
push
fcmovb
mov
rol
mov
dec
sbb
mov
and
and
and
pushf
subb
push
cmp
mov
lods
or
adc
test
and
cmpsb
test
iret
mov
jbe
icebp
lods
cmpsl
inc
hlt
sbb
cs
insb
inc
outsl
jno
andl
push
pusha
mov
or
stos
cmpsl
test
clc
mov
add
insb
movsl
inc
or
xlat
repz
dec
sbb
cmp
jo
jno
loope
push
cmpsb
out
cltd
xor
adcb
xchg
xor
xchg
fwait
adc
popa
sbb
imul
jp
cltd
xchg
add
adc
ret
stc
mov
pop
push
sub
sbb
pmulhw
mov
or
dec
jmp
inc
adc
ss
cmpb
xchg
mov
xchg
in
sbb
and
sub
sbb
dec
movsb
pop
stos
xlat
xlat
enter
xor
inc
dec
pop
mov
fstpl
das
mov
mov
lods
test
push
iret
inc
test
lock
in
mov
cwtl
and
pop
pop
dec
and
outsb
pop
out
jo
pop
mov
jmp
stos
adc
fstl
in
pop
inc
gs
loop
xor
mov
push
out
mov
ja
jno
jb
adc
xchg
xchg
and
mov
addr16
test
rorb
out
mov
fistpll
jle
mov
push
fwait
sbb
inc
ret
jnp
inc
mov
scas
dec
and
rolb
mov
and
or
xor
in
xchg
int3
xchg
sub
and
popa
inc
icebp
jno
in
bound
out
into
pop
pop
int
push
std
sti
mov
add
incb
inc
lods
jnp
or
mov
pop
lret
ja
mov
fadds
lds
stc
jmp
mov
mov
inc
shlb
xor
dec
xor
outsb
or
jbe
jmp
or
inc
fldenv
repnz
and
icebp
mov
ret
addr16
bound
xchg
jbe
add
scas
sub
mov
push
les
pop
lock
cld
or
ret
jo
xchg
cmp
dec
clc
fildll
push
push
or
add
dec
xchg
out
shl
js
test
inc
imul
xlat
fistpll
test
jno
dec
push
mov
adc
or
sti
push
and
addr16
add
cmpb
pop
adc
cmp
lea
jae
sbb
movsl
mov
pop
add
je
mov
iret
outsb
lock
xchg
ror
lcall
cmc
idivb
fs
push
xor
fbstp
aam
add
cmp
mov
repz
push
out
outsb
mov
shlb
or
out
es
ljmp
jns
or
jns
mov
sub
loop
push
ret
pop
xor
out
dec
mov
std
js
adc
iret
cltd
xor
popa
addb
addl
xor
movsl
out
push
sbb
xchg
bound
xchg
add
pop
adc
xor
pop
jmp
sub
sbb
fldt
sbb
test
mov
inc
pop
cmpsb
and
mov
dec
sbb
lock
std
lods
jmp
movsb
sub
mov
add
out
enter
mov
dec
call
or
add
insb
sub
loope
fldenv
loope
pop
rorb
and
add
nop
or
sub
lahf
mov
popf
mov
and
pop
xlat
inc
dec
adc
mov
xor
adc
cwtl
add
call
inc
push
jp
dec
fstpl
outsb
inc
pop
dec
hlt
inc
xchg
xchg
mov
lods
data16
sbb
idivl
or
mov
es
push
imul
push
sub
in
in
mov
add
in
daa
push
test
mov
fwait
pop
je
dec
dec
fldl
sbb
push
ficoms
sbb
pop
or
sbb
pop
shll
rorb
pop
push
xlat
adc
cwtl
test
sub
das
inc
xchg
aam
loop
push
gs
cmp
cmpsl
out
lods
clc
sbb
sub
xchg
js
stos
jo
pop
mov
xor
daa
pop
pop
jo
in
push
pop
sub
sti
xchg
sarb
dec
into
scas
inc
insb
les
popl
sbb
mov
sub
stos
mov
adc
push
jge
in
jle
mov
lret
mov
lds
pushf
dec
in
cli
repz
dec
adc
mov
mov
pop
loopne
dec
push
insb
imul
stos
xchg
push
es
fistps
push
fs
clts
jp
xchg
mov
outsl
push
sub
sbb
out
dec
dec
mov
add
loope
or
or
and
inc
sahf
add
push
loop
push
outsb
insb
aad
pop
cli
push
jnp
sbb
sbb
fildl
mov
test
jp
push
push
ss
stc
xchg
cmp
in
lahf
fisubrl
ss
pop
push
jnp
scas
xor
sbb
xchg
inc
xchg
lock
daa
jle
add
mov
mov
inc
xor
cmp
out
fidivl
dec
cmpsb
sbb
add
lcall
cld
cmp
push
sub
ljmp
or
xor
pop
inc
jl
lret
mov
loop
inc
sets
or
or
cmp
sub
loop
dec
scas
nop
sub
jl
loop
push
jp
cld
mov
and
cli
daa
inc
pop
leave
cltd
and
pop
shll
dec
or
sbb
push
stos
and
push
xchg
mov
std
insb
jl
lods
and
std
dec
dec
leave
xor
mov
pop
sarl
sub
xor
daa
ret
push
pop
cmp
shrl
pusha
rcr
sti
push
jge
arpl
jae
pop
insl
xor
pusha
in
add
xor
sbb
xor
fwait
into
in
fcmovnu
mov
sbb
out
rorl
addb
outsb
dec
and
jle
push
push
mov
call
outsb
mov
xchg
pop
inc
xchg
push
add
or
pop
lea
cs
push
pop
loope
icebp
xchg
lock
test
je
ljmp
fists
jbe
mov
cltd
xor
fidivrl
es
std
mov
mov
mov
mov
dec
dec
adc
test
movsl
jae
jg
mov
aam
lret
mov
aaa
int3
pop
es
add
xor
push
xchg
clc
negl
repz
mov
dec
out
pushf
mov
scas
into
or
jns
gs
and
pop
cwtl
scas
clc
sbb
and
pusha
xor
cld
pop
adc
fbld
push
adc
push
popa
sub
push
or
mov
daa
mov
inc
cld
lods
js
add
daa
inc
pushf
stc
cmpsl
pop
aad
xchg
int3
and
mov
bound
shrb
mov
and
jae
stos
or
sub
clc
mov
and
adcl
add
insl
aad
xchg
xor
mov
xchg
dec
xor
jbe
andb
push
ja
rcr
cmpsb
in
and
inc
into
pop
dec
arpl
jb
cmp
xor
cli
mov
xchg
and
aas
daa
cld
adc
loopne
fdivrs
sub
or
cmp
cmp
push
jl
aas
popa
mov
sbb
inc
sbb
out
fwait
ja
jnp
xor
adc
mov
je
dec
fbld
mov
jnp
mov
jp
dec
out
lock
fnstsw
movsl
pop
in
mov
scas
cmp
sahf
xor
or
sahf
rcrl
xlat
repz
add
movsl
inc
mov
mov
push
dec
das
js
or
mov
ret
pushf
fidivrl
push
test
in
aam
cmp
rep
loope
jae
push
add
xchg
test
movsb
rolb
cmp
push
cmp
sub
nop
lret
psrlq
push
adc
xchg
dec
gs
dec
sbb
in
hlt
push
pop
xorb
dec
int
js
cld
dec
fisubrl
fisttpl
pop
sub
add
and
cmp
adc
adc
push
cmp
adc
int3
ficoms
or
ds
in
add
into
daa
ja
pop
push
jge
inc
adc
dec
dec
mov
add
xorb
aas
movsl
iret
cmp
mov
call
xchg
fnstcw
mov
popf
inc
add
sbb
sbb
call
gs
leave
and
loope
xchg
xor
movsl
jnp
xor
fistps
xor
push
pop
mov
mov
inc
add
sbb
add
jb
push
mov
lods
jnp
call
sbb
jae
mov
aam
jns
inc
fsubs
sbb
mov
subb
dec
lret
push
jmp
xor
sarb
loop
adc
incl
xor
or
sub
xor
call
cmp
ret
inc
lahf
cld
out
lea
cli
cmp
mov
sbb
inc
xchg
push
lret
push
in
mov
or
das
call
push
in
movl
and
pop
outsb
push
movsb
xchg
sub
jb
negb
jecxz
xlat
inc
icebp
adc
dec
inc
in
fwait
stc
mov
inc
test
dec
or
mov
adc
lahf
inc
push
jge
xchg
adc
pop
outsl
paddq
xchg
test
pop
add
inc
out
lahf
push
repnz
jnp
aam
inc
mov
stos
dec
shr
pop
pop
adc
mov
mov
dec
sarl
sti
repz
mov
orl
dec
jns
inc
ds
add
pop
outsb
adc
stos
fcmovbe
inc
xor
add
aaa
pop
adc
mov
loope
xor
lods
jo
cld
sahf
and
pop
les
add
movsl
sub
insl
mov
sbb
pop
mov
call
outsb
pop
fcoml
adc
loop
fwait
and
or
scas
jge
inc
adc
je
aam
sbb
fcmovb
iret
xor
insl
shrb
sbb
fadd
sub
fsubrs
dec
lahf
cmp
sti
pop
dec
mov
popf
lret
mov
inc
jb
cli
sar
sbb
mov
sahf
add
stc
sbb
movsb
ror
pop
inc
adc
mov
int3
jl
add
test
fdivp
rcrb
and
xor
add
pop
jo
cmp
sbb
daa
xchg
in
rclb
arpl
mov
lods
xchg
xor
lds
jge
mov
mov
pushf
test
cmp
ficomps
jbe
jb
pop
iret
cmp
push
or
pop
mov
mov
mov
popa
ljmp
sub
jecxz
lea
lahf
aam
testb
cs
test
ret
mov
and
mov
xor
loopne
push
push
in
push
ficompl
lock
div
push
fists
pop
outsl
mov
and
or
adc
movsl
and
xor
or
popa
dec
les
jnp
mov
or
mov
pop
scas
loop
and
inc
jg
dec
sahf
dec
cltd
dec
js
push
in
pop
xchg
sbb
or
sub
mov
push
in
jp
test
movsl
iret
adc
or
sub
xchg
sarl
sbb
enter
popf
mov
rol
sbb
iret
std
push
push
or
repz
icebp
ret
int3
cmp
sub
popf
leave
ret
jecxz
popl
mov
jle
mov
lret
pop
lea
mov
test
out
js
nop
in
mov
les
stos
push
pop
or
cmp
stc
popf
xchg
mov
fildl
push
aam
cli
pop
push
mov
shrl
or
cli
cmpl
in
pop
or
faddl
or
xchg
inc
ret
jns
sbb
std
cmp
jno
pop
mov
cmp
ret
and
mov
orb
add
mov
push
scas
push
aad
adc
mov
push
pop
push
xlat
lret
xchg
dec
pop
ret
jno
mov
inc
xor
adc
add
sbb
pop
xchg
adc
fwait
mov
cmpsb
add
call
fistpl
sti
icebp
hlt
push
and
cmp
xchg
out
push
xchg
push
aam
jb
fidivrs
and
mov
lock
xchg
daa
lods
jne
mov
sbbw
std
in
fisubs
cmp
inc
dec
and
int
jmp
sub
das
xchg
enter
negl
popa
into
mov
decl
dec
sub
and
testb
pop
add
jno
xchg
and
loop
in
and
jb
sub
jne
insb
divps
push
add
mov
fstpl
fnstcw
cmp
inc
xchg
and
dec
loopne
dec
dec
into
lret
mov
sub
adc
lahf
fcmove
inc
xchg
xor
or
imul
sti
in
bound
and
cmp
jnp
inc
xchg
pop
out
mov
add
inc
mov
dec
cli
dec
adc
stc
sahf
jae
scas
adc
add
decb
ja
notb
pop
movsl
sub
popf
push
imul
mov
mov
adc
es
out
sbb
mov
jnp
or
jnp
push
and
insb
dec
push
test
sbb
pop
ljmp
mov
imul
fwait
pusha
adc
cmc
leave
stc
iret
pop
push
mov
in
mov
ja
cld
pop
fildl
xchg
es
pop
repnz
jl
sub
jge
adc
sbb
inc
cmpsl
lret
ret
enter
das
dec
sahf
cmp
sub
test
push
out
outsl
popa
push
jns
cld
addr16
sarb
addr16
int
or
outsb
pop
xchg
sbb
cmpsl
mov
inc
add
clc
cmp
add
into
jl
fcomps
push
mov
inc
lret
mov
movsl
jg
arpl
and
call
mov
jge
or
or
lock
js
movsl
sub
mov
in
fisttpll
test
andl
rcrb
adc
xor
jne
int
xchg
je
dec
cmp
ret
gs
and
push
ss
iret
pop
sub
dec
aas
je
xor
pop
pop
ja
sub
in
xor
rcr
cs
mov
icebp
xor
cmc
ret
jg
shll
push
jle
push
cld
mov
pop
test
and
ss
outsl
inc
jle
dec
pop
cmp
jbe
out
jle
stos
imul
sbb
xor
inc
popa
add
loopne
pop
jbe
jp
js
dec
into
xchg
outsb
outsb
negb
bound
add
popf
test
jle
lds
jnp
xchg
or
lret
mov
pop
mov
push
int3
addr16
sahf
add
mov
mov
mov
jae
inc
mov
jns
inc
mov
rcrb
dec
sbb
lret
icebp
movsb
adc
dec
sbb
lods
mov
dec
xchg
leave
es
xor
push
or
or
pop
addr16
hlt
lret
mov
xchg
xor
xchg
jo
cmp
mov
sub
cld
jae
pop
inc
xchg
ret
cmp
xchg
adc
sbb
jbe
cmpsb
ret
and
add
cwtl
pop
imul
fnstenv
lods
std
testb
add
jns
xor
stc
push
es
ja
mov
mov
xchg
pop
outsb
pusha
jmp
jecxz
cmpsl
daa
mov
inc
jne
cmp
mov
sbb
js
jl
popf
jl
loopne
popa
scas
xor
mov
pop
scas
test
test
mul
in
js
sbb
mov
jl
scas
sbb
out
mov
lock
jbe
stos
stc
jl
sub
fiadds
jae
lods
iret
xlat
bound
pop
fiaddl
movl
shll
notb
add
sarb
sbb
cmc
mov
dec
dec
stc
jge
xor
sbb
test
xor
outsl
mov
shr
cmpl
adc
cmp
fucomi
mov
ja
or
popf
pop
jno
xor
call
sub
popa
jo
push
data16
sbb
push
xor
mov
ffreep
cmp
sub
decl
popf
xchg
fs
movsb
xchg
inc
dec
pop
cmpsb
jnp
ret
je
ljmp
pop
pop
pop
in
movsb
push
sbb
push
mov
scas
fmul
lock
es
adc
adc
not
mov
pop
fdivl
and
hlt
ret
sti
jmp
cltd
lods
int3
repz
xor
into
mov
ffreep
add
lahf
xor
ja
xchg
mov
sar
and
mov
aam
cmp
mov
and
sub
mov
in
out
shlb
sub
ja
cli
aam
call
and
bound
mov
cld
popf
sbbb
xchg
ss
xor
mov
lods
fnstcw
out
lahf
sub
push
xchg
cli
dec
ret
xchg
fildl
jno
addr16
sbb
iret
inc
cmc
arpl
mov
sub
or
sub
ret
fisttpl
pop
insb
push
mov
push
mov
jecxz
js
test
mov
push
fs
loop
xchg
fdivs
cli
les
or
test
lds
ss
xlat
push
mov
jns
jg
nop
cld
xchg
lock
mov
imul
inc
movsb
push
scas
test
or
sahf
cs
ret
cwtl
aam
out
jg
inc
xchg
mov
outsl
xchg
inc
mov
pop
pusha
sub
enter
in
outsb
insb
add
jl
fs
aad
lods
sub
je
nop
or
loopne
inc
inc
sub
iret
shlb
pop
in
sub
inc
and
jo
cmpsl
enter
jg
lods
xchg
mov
rcll
mov
in
sbb
mov
repz
fcoml
insb
jecxz
fcmovbe
jg
stos
faddl
pushf
mov
fstl
and
jbe
sbb
mov
clc
xor
jg
mov
sub
pop
push
cmp
out
jb
xchg
inc
fstpt
std
sbb
push
shrl
data16
cs
repz
and
bound
push
jno
inc
shll
jbe
mov
jo
ret
insb
je
and
aam
pop
bound
jb
and
call
fimull
jp
inc
jp
mov
jp
shlb
std
call
or
xchg
mov
jp
loopne
lock
in
cmpsl
or
pop
cmp
mov
nop
cmp
lock
adc
pop
xchg
out
in
iret
sbb
in
je,pt
das
cs
sbb
test
mov
xor
js
imul
cmp
mov
fdivp
lea
push
jno
mov
mov
bound
inc
jle
call
xchg
cmp
fnstenv
addr16
push
js
jb
mov
sarl
jl
xchg
icebp
lret
xor
mov
inc
and
gs
cltd
ss
stos
aaa
std
inc
mov
fwait
pop
dec
insl
sbb
data16
cmp
cli
test
fistpl
or
cmp
xor
call
test
movsb
imul
add
push
popf
imul
cmp
cmp
sbb
mov
lods
inc
pop
sbb
and
into
and
push
mov
jo
lds
repz
enter
push
cmp
or
lret
in
ljmp
pop
jae
jecxz
jge
test
stos
cld
pop
push
push
dec
mov
rcl
iret
xor
popf
inc
scas
imul
push
xorb
adc
mov
cltd
stc
cld
dec
push
push
mov
and
sbb
mov
dec
jb
jno
jae
in
aam
insl
xor
inc
outsl
je
adc
mov
test
mov
jmp
scas
ljmp
mov
push
inc
push
jo
pop
adc
fwait
int3
rolb
std
aam
cmpb
rorl
bound
stos
arpl
mov
sub
sahf
shld
inc
or
adc
dec
movsl
xchg
dec
lea
js
test
jge
mov
pop
add
add
imul
sbb
jmp
mov
pop
mov
scas
push
subb
adc
ja
add
or
mov
cwtl
mov
lea
enter
xchg
sbb
fldt
sbb
mov
push
call
jmp
pop
stc
call
fbld
xchg
adc
pop
xchg
adc
sbb
mov
lods
frstor
in
loop
adc
xchg
push
fdivr
enter
xor
mov
loope
sbb
out
dec
pusha
dec
pop
jns
pop
leave
sbb
addr16
jo
xor
mov
push
lods
fsubr
inc
bound
int
rol
mov
loop
push
xchg
insb
xchg
sub
inc
and
adc
loopne
jo
shrb
cli
cmpsl
push
out
imul
sbb
test
gs
test
mov
mov
push
mov
dec
inc
pop
add
push
jg
xchg
test
cs
lahf
jnp
or
pminsw
push
imul
adc
int3
clc
cmp
mov
sub
jns
mov
fninit
sub
sbb
test
xchg
push
jecxz
fs
mov
movsb
xor
push
fs
out
mov
sbb
mov
adc
cmp
aam
pop
shl
push
pop
adc
mov
clc
cmp
lea
pop
mov
movsb
scas
xor
or
push
jmp
loop
out
sub
push
and
jb
or
insb
daa
mov
add
jbe
cmpsl
pusha
inc
sub
shrb
jne
arpl
es
xchg
and
dec
adc
test
mov
xchg
pushf
gs
push
jns
fnstsw
mov
xchg
popf
ret
jbe,pn
xor
lret
daa
adc
insl
mov
iret
pop
ror
or
dec
adc
mov
aad
lea
jnp
bound
cli
mov
rol
inc
cmc
jge
jmp
sbb
outsl
aam
and
mov
int3
mov
pop
pushf
xchg
mov
pop
lret
pop
out
nop
jp
jmp
shlb
cmpsb
push
jno
outsb
mov
frstor
scas
push
scas
inc
mov
gs
push
push
push
push
push
xlat
enter
jb
inc
loop
loope
adc
xor
dec
in
inc
adc
cmp
or
lds
adc
dec
icebp
mov
repnz
imul
into
sbb
jae
insb
add
xor
jno
fdivr
int
out
mov
fst
sub
cs
mov
sarl
sub
lds
dec
js
ds
jmp
sub
imul
mov
lds
adc
cli
and
jne
push
jno
movsl
std
xor
insb
jbe
andl
lret
push
aaa
sub
mov
shlb
cmp
xchg
and
stos
mov
mov
push
dec
jae
adc
mov
outsl
fsubrl
dec
mov
sub
mov
dec
push
push
cld
lods
fiaddl
add
cmpsb
ja
push
mov
lret
pop
sub
mov
cwtl
cli
sbb
sbb
insb
sbb
fiaddl
dec
xchg
mov
cmp
dec
iret
mov
adc
mov
dec
mov
xlat
clc
jle
mov
iret
xchg
outsl
movsb
cmpsl
into
mov
pushf
stc
xor
push
enter
adc
sub
jb
movsl
xor
jmp
fcomps
cmp
or
loop
ljmp
loopne
mov
jno
movsb
push
dec
dec
outsl
rolb
filds
imul
out
test
lods
xchg
xor
cmp
jno
adc
in
mov
mov
std
inc
add
adc
xor
scas
adc
hlt
in
jno
popa
mov
in
jb
sbb
push
leave
cli
das
xor
negb
sbb
or
outsl
movsl
nop
ljmp
fstps
ljmp
push
add
xor
inc
aaa
sahf
popf
inc
or
dec
inc
pusha
test
les
mov
xor
fwait
and
fistpl
popa
into
test
clc
jecxz
movsl
add
add
sub
in
and
dec
xchg
jns
xor
mov
clc
gs
or
rcrb
sbb
push
insb
xchg
jecxz
sbb
dec
movb
movsb
repnz
out
mov
cltd
mov
xchg
xchg
iret
decb
inc
jmp
jnp
pop
lods
mov
mov
aas
shrb
loope
cwtl
mov
xchg
icebp
cld
xchg
cmp
push
ja
mov
jne
and
fwait
sub
push
and
mov
jbe
test
inc
movsb
push
in
inc
pop
adc
cmc
inc
arpl
lcall
xchg
adc
mov
adc
push
add
xchg
mov
xchg
cmc
outsl
adc
hlt
mov
cmp
jg
ja
fnsave
cmp
mov
push
movsl
inc
xchg
or
icebp
lcall
je
add
jecxz
mov
add
test
jno
loopne
rcl
cltd
out
lahf
sbb
mov
lea
lds
inc
mov
cli
mov
or
jg
jecxz
cmp
mov
push
xchg
adc
xchg
les
mov
cmc
scas
shll
hlt
add
jecxz
sti
jmp
sub
pop
lock
dec
pushf
aaa
gs
sahf
jecxz
test
xchg
sbbl
fs
xchg
pop
lret
cmpsl
push
loopne
das
in
push
jno
push
ret
cmp
pop
das
jl
pop
push
stos
sub
mov
jnp
push
faddl
insl
ss
xor
lods
mov
sub
lds
jae
loopne
push
mov
ljmp
xchg
aas
mov
out
popa
xlat
push
xchg
or
rorb
movsb
lods
testb
addb
popf
inc
aad
mov
pop
sbb
aad
rorl
hlt
push
xor
pop
jecxz
sbb
test
test
nop
mov
scas
lcall
sub
insl
cltd
icebp
push
iret
sahf
xchg
in
inc
bound
in
jle
push
mov
shr
sub
sub
sarb
cmpsl
pushf
pop
in
jno
sub
sub
add
icebp
loopne
stos
xchg
sbb
cli
jecxz
mov
sahf
cmpsl
mov
dec
jnp
fistpl
sub
cmpsl
pusha
dec
test
dec
fdivp
sbb
xchg
sti
push
popf
push
mov
jmp
in
sbb
mov
jbe
sahf
inc
inc
out
xchg
jno
mov
add
sarb
test
iret
dec
mov
mov
mov
sti
mov
and
popa
or
xlat
xchg
rcll
lcall
sbbb
sbb
daa
mov
or
cli
je
outsl
js
push
or
sbb
aas
push
lcall
std
outsl
js
js
inc
cmc
lcall
or
sub
out
and
roll
and
mov
mov
xchg
loop
shll
cmp
or
cmp
psrlq
push
sub
sarl
or
adc
loop
push
push
push
inc
push
dec
orl
sbb
dec
dec
sub
sarl
push
mov
sub
frstor
arpl
je
sbb
mov
sbb
sub
test
sbbb
bnd
dec
jmp
pop
aas
pop
jbe
mov
lret
cmpsb
outsl
fnsave
pop
sub
mov
add
lods
mov
xchg
mov
xor
repnz
xor
dec
push
ljmp
jp
dec
in
pop
dec
inc
loopne
rcrb
hlt
lret
cld
das
outsb
arpl
sub
push
dec
aad
mov
inc
xor
scas
pusha
xchg
shlb
cs
jmp
push
dec
mov
sub
sub
mov
das
in
jnp
add
loope
sbb
mov
test
xchg
mov
pop
lds
mov
pop
insb
xor
hlt
xor
cmp
test
insl
pop
aad
or
call
push
pushl
and
andb
sbb
mov
ljmp
push
stc
mov
xchg
dec
and
pop
push
pop
adc
adc
xchg
test
inc
xchg
jb
addr16
cmp
andl
xor
sub
mov
popa
fisubs
jecxz
xchg
jno
fcmovne
add
or
aaa
out
jb
cmp
in
mov
cmp
lea
push
pop
push
xchg
mov
lahf
and
lret
dec
cmpsb
mov
jle
sbb
or
dec
mov
cmp
xor
out
jg
push
push
push
sbb
sbb
inc
data16
in
shll
push
sbb
test
push
dec
cmpsl
pop
xchg
mov
dec
sub
push
iret
lds
shll
das
cmp
leavew
add
nop
incl
push
jl
jne
shll
dec
cmpsl
inc
adc
mov
ret
gs
popf
dec
fsts
lret
inc
push
ret
cmc
jns
sbb
mov
lods
cmp
sbb
mov
hlt
push
daa
scas
jle
sbb
mov
mov
sarl
jae
or
xchg
lods
in
mov
and
out
fwait
into
pop
and
orb
adc
int3
dec
lret
inc
dec
pop
sub
ret
out
pop
add
adc
stc
or
mov
and
cld
mov
pop
mov
btl
xlat
loopne
mov
mov
jb
cmpb
sbb
loope
popa
pop
mov
repz
std
jmp
cli
adcl
in
adc
xchg
pop
ja
and
fsubrs
pushf
decl
negb
fdivrl
dec
xchg
mov
push
dec
sub
sub
jg
mov
xchg
jecxz
push
jecxz
movsl
je
les
loope
aam
std
dec
stc
fucomip
jmp
mov
leave
cmp
cmpsl
adc
mov
std
push
push
mov
ret
negb
adc
lcall
cmpsb
jge
nop
mov
fxch
lea
pop
dec
jp
repnz
sbb
out
popa
orl
ds
or
pop
mov
or
in
adc
adc
mov
pop
pop
sbb
dec
jecxz
or
xor
in
scas
shll
xchg
shll
sub
js
jne
das
pusha
aaa
hlt
test
arpl
mov
push
mov
pop
or
xor
pop
ds
bound
adc
push
jns
xchg
cs
out
clc
cmc
add
insl
pop
mov
decl
or
lret
adc
mov
nop
xchg
daa
sub
or
mov
lret
or
testb
fwait
push
into
mov
das
jnp
imul
cmp
push
ret
outsb
cmp
imul
shll
jbe
nop
int
pop
rclb
ret
sbb
push
mov
in
fadds
and
jbe
mov
cld
or
daa
xor
int
lods
add
cmp
pop
and
inc
decb
xor
ljmp
add
aad
fwait
and
lds
mov
push
lcall
ljmp
and
loopne
fnstsw
push
stos
dec
cmp
xor
dec
xor
shrl
pop
or
mov
jmp
mov
loopne
jge
mov
sbb
pop
pop
js
jmp
xchg
push
insb
cmpsl
ss
fistpl
rol
sub
mov
pop
dec
cmpsb
jmp
inc
bound
scas
cwtl
mov
jns
idivl
xchg
repnz
test
iret
cwtl
mov
shrl
movaps
sbb
test
pop
js
repnz
sbb
repz
test
les
inc
lds
push
mov
or
orb
add
jbe
sub
xor
and
cmp
fwait
inc
xor
inc
outsl
pop
dec
sbb
and
leave
sub
jo
fldcw
movsl
lods
sarb
add
dec
push
jbe
xor
sub
xchg
negl
push
adc
mov
sbb
or
mov
or
stos
dec
inc
xchg
jp
scas
cmp
add
adc
fnsave
or
and
ja
lcall
xor
mov
push
adc
mov
mov
xor
jecxz
out
jle
pusha
outsb
data16
ret
mov
pop
mov
loopne
adc
and
pop
pop
xor
out
or
stos
dec
pop
mov
ljmp
mov
lret
xchg
in
cltd
sub
and
sti
cld
inc
stos
daa
xorl
xchg
xchg
xchg
mov
pusha
repnz
hlt
mov
fadds
negl
add
dec
jle
sub
add
outsb
in
aam
lods
push
and
inc
jae
pop
pusha
aaa
in
lea
push
fmulp
inc
sarl
sub
or
push
adc
sbb
xchg
xchg
popa
sbb
sub
mov
xor
stos
xor
xor
mov
mov
inc
cmpsb
mov
sbb
jle
inc
dec
lcall
mov
das
mov
pop
mov
into
or
shll
push
cwtl
inc
pop
ret
in
fs
xor
shlb
mov
stos
cmp
fsubrs
push
shlb
push
fstps
jge
and
lahf
aad
push
sbb
adc
sbb
add
sub
xor
pop
pop
or
in
out
push
pop
mov
cmp
cwtl
cmp
roll
in
or
jae
loopne
xlat
orb
mov
scas
test
xor
jae
mov
push
mov
mov
cmpsl
xchg
movsb
sbb
xchg
jmp
mov
jle
hlt
jmp
pop
js
in
xchg
cmpl
inc
lahf
dec
insb
push
cmp
mov
sti
arpl
push
shlb
nop
dec
pop
and
xor
stos
sbb
push
or
mov
cs
rcrl
in
push
mov
out
loop
inc
push
stos
lods
xor
adc
push
inc
ds
xchg
rorl
stc
and
mov
pop
or
xlat
push
scas
stc
or
jp
rclb
movb
pop
jecxz
and
movsl
and
sbb
gs
int
outsl
movsb
hlt
or
xchg
notl
lret
dec
push
and
dec
and
inc
sub
aam
cs
lock
cmp
xor
pop
adc
rclb
addr16
add
inc
std
dec
dec
mov
in
sub
inc
cld
dec
push
leave
xor
fiaddl
mov
arpl
fstps
scas
inc
cmpsl
das
lea
ljmp
mov
inc
aad
dec
push
lahf
dec
add
fldenv
cld
addr16
cmp
xor
pop
pop
adc
pop
cltd
hlt
cltd
scas
sbb
sbb
mov
lods
nop
or
add
js
push
push
out
int3
repnz
pop
nop
shrl
and
cld
mov
mov
lods
cmp
push
push
loop
ljmp
pop
sbb
jnp
daa
testb
sbb
mov
or
seta
sti
xchg
push
pop
ret
addr16
pop
jno
sbb
dec
daa
mulb
mov
shr
sbb
test
scas
sub
in
mov
pop
out
and
dec
ds
clc
jmp
add
arpl
repz
xor
xlat
xor
xor
push
mov
inc
xchg
dec
add
xchg
insb
dec
movsl
orb
jne
push
les
xor
inc
jns
lret
ret
sbb
repnz
popf
xchg
ficoms
pop
xor
sarl
sub
mov
or
pop
xor
rorl
cmp
clc
dec
push
inc
int3
dec
daa
lds
inc
out
xchg
dec
iret
out
lods
inc
dec
leave
or
inc
icebp
fwait
mov
sub
decl
add
out
in
loop
jge
mov
pop
repnz
enter
push
pop
dec
xchg
jle
lods
mov
jecxz
or
mov
push
insl
pop
dec
add
or
cmp
cmp
pop
jmp
push
pushf
out
mov
jmp
jmp
xchg
popf
lret
cmc
fisubrl
and
inc
mov
insb
daa
lea
xchg
mov
sbb
jmp
adcb
ljmp
daa
xchg
int
popf
loop
xchg
stc
es
mov
adc
lret
push
inc
aad
adc
jg
pop
push
xchg
clc
arpl
xor
lods
std
iret
std
popa
int
adc
aam
jge
dec
fadd
mov
inc
push
adc
push
adc
fwait
in
movsl
push
mov
imul
jg
mov
shr
in
popf
cs
sbb
fsqrt
icebp
mov
adcl
js
or
into
jbe
fmull
mov
test
mov
lods
movsb
outsb
sub
test
into
icebp
xor
mov
adcl
jmp
pop
cmc
das
push
xor
inc
pop
and
mov
push
sub
scas
addl
cmc
int
fcomp
add
and
jnp
push
out
adc
sub
mov
jle
dec
mov
push
ljmp
incb
jecxz
xchg
sub
addr16
inc
add
aam
and
jmp
dec
add
or
cmpsb
xchg
imul
mov
dec
fsubr
dec
imul
jle
std
movaps
imul
insl
xchg
xchg
int3
xchg
je
mov
les
mov
aam
out
push
mov
imul
repnz
pop
jmp
xor
xchg
xchg
mov
or
repz
sub
mov
repz
cltd
pop
pushf
jp
mov
mov
bound
shll
hlt
xchg
push
std
jne
mulb
jae
shrb
pop
sti
iret
call
pop
jle
mov
fnstcw
pusha
xchg
sbb
add
push
daa
inc
pushf
jmp
notl
jo
push
psrlq
test
movaps
sub
pusha
inc
iret
xchg
mov
sub
mov
hlt
arpl
push
adc
inc
jle
ficoml
adc
push
jns
int
cltd
popa
add
push
or
je
hlt
jge
notb
sbb
scas
jmp
pop
lret
out
test
and
cmp
fisttpll
push
inc
stc
and
ds
out
pop
add
int
jo
aam
jae
in
popf
hlt
cmpb
xor
jle
inc
mov
imul
fdivs
call
mov
or
cmpsl
test
jl
inc
pcmpeqb
dec
test
sub
mov
push
jge
jne
dec
mov
lods
mov
cmp
insb
and
clc
xor
dec
pop
mov
hlt
in
jp
addl
xchg
sahf
mov
aad
leave
call
pop
jno
jo
jmp
mov
loop
flds
mov
sub
xchg
cmpl
xor
js
fidivs
pop
fldt
dec
xchg
inc
mov
jmp
dec
stc
test
lret
push
test
push
rcl
js
pop
adc
lret
enter
addb
mov
mov
enter
xchg
rep
add
sbb
adc
push
addr16
fnstsw
aad
mov
ds
dec
xchg
push
data16
xor
dec
and
push
sti
lahf
lcall
orb
or
gs
das
in
sub
mov
aam
jno
xor
adc
sub
test
lcall
push
movsb
xor
push
pop
dec
push
pushl
mul
dec
pop
je
mov
sahf
leave
clc
lea
and
dec
mov
push
cmp
sbb
jmp
mov
push
in
mov
popa
das
add
leave
cmpsl
cmovg
test
pop
mov
xchg
jl
push
jnp
nop
lods
shl
cld
into
loope
cld
inc
shlb
push
jne
push
xchg
mov
mov
movb
push
add
js
in
cld
or
dec
adc
mov
mov
or
push
jnp
jbe
je
in
push
xor
jmp
and
inc
pop
dec
bound
jge
pop
jl
jnp
push
xor
sbb
lea
aam
fs
es
jmp
std
cmp
mov
stos
mov
sbb
jnp
sbb
adc
int3
not
ret
gs
fsubs
cli
cwtl
data16
jb
sbb
popf
gs
mov
rol
push
mov
shlb
dec
inc
stos
sarl
test
shll
je
cmp
mov
bound
insb
xor
into
xor
dec
cmp
dec
inc
rolb
pop
inc
cmpsb
add
arpl
inc
xor
inc
inc
jno
in
push
nop
and
call
movsb
or
inc
cmp
xor
aam
negb
inc
sub
out
popa
dec
xchg
sbb
dec
ffree
or
sbb
jge
ret
loop
or
mov
les
sbb
pop
adc
jge
xchg
int
stos
test
pushl
int
push
adc
dec
adc
add
decl
sahf
cmpl
push
push
pop
idivb
addl
jbe
mov
mov
pushl
sti
adc
xchg
cmp
jo
inc
pop
cmp
push
xchg
fidivs
aad
mov
pop
mov
addl
xchg
pop
rcll
push
lds
clc
adc
dec
stc
lret
sub
cmpsb
loopne
sbb
hlt
mov
push
lret
add
ds
mov
clc
push
out
and
fcomp
subl
adc
push
xor
jge
mov
movsl
and
shrb
cli
in
fs
cmpsl
outsb
fidivrl
imul
jne
push
xor
mov
push
mov
fs
cmp
or
daa
lret
push
and
xchg
push
ja
imulb
xchg
cltd
mull
xchg
subb
mov
sub
mov
inc
pop
adc
loop
outsl
shl
inc
pop
jns
jge
inc
dec
sahf
test
cli
dec
ds
int3
pop
mov
jmp
filds
insb
inc
pop
pop
xor
fsubl
aad
push
je
or
sbb
pop
jecxz
push
call
shl
pop
mov
sarl
jae
loopne
xor
mov
pushf
xchg
fistl
das
fidivrs
ds
push
ret
pop
push
inc
call
push
sub
fbld
sti
arpl
mov
push
mov
inc
dec
xchg
dec
xor
in
push
sbb
or
dec
lahf
push
sbb
outsl
inc
mov
add
push
jge
push
fwait
push
dec
inc
les
negl
sbb
out
xchg
push
jl
je
and
aas
and
shrb
push
push
xor
pop
jg
push
mov
stos
outsl
fsubl
push
out
sahf
sbb
adc
outsl
lods
jb
rcll
pushf
jp
adc
fs
xor
and
sub
mov
int
mov
xor
dec
dec
fwait
ret
xchg
clc
fbld
rcll
jb
push
enter
fidivl
fimull
or
add
adc
rcrl
icebp
inc
sbb
mov
cmpsb
cmp
xlat
call
inc
inc
sbb
movsb
or
es
test
aaa
add
js
cmp
push
push
add
sub
dec
cmp
dec
xchg
je
cmp
sub
inc
aaa
and
xchg
cs
out
push
jnp
sahf
sbb
xchg
jns
imul
fldpi
pop
adc
sub
sub
sbb
enter
pop
sbb
aas
fimull
lret
fwait
add
or
icebp
mov
adc
lds
pop
or
push
mov
xchg
pop
int
shll
jne
mov
popa
sbb
dec
xor
inc
jne
fsts
adc
and
adc
xchg
addr16
xor
jecxz
test
xchg
cld
jo
rcrb
std
jb
mov
dec
dec
popf
mov
insb
stc
out
sub
and
sub
mov
outsl
sarb
or
andl
jae
and
or
daa
imul
push
push
cld
push
aaa
mov
inc
sahf
jbe
stos
insl
out
scas
adc
pop
out
push
in
pop
jmp
pop
adc
setl
sub
xchg
pop
cltd
jns
int
jo
xchg
dec
es
mov
orb
mov
lcall
js
mov
push
jle
into
out
daa
in
inc
add
push
aas
leave
arpl
lods
jle
add
inc
cmp
sub
dec
cmp
push
das
loope
sub
test
ret
addl
test
push
arpl
mov
ja
es
out
cltd
in
icebp
dec
pop
jl
cmp
mov
or
push
gs
push
sub
lahf
pop
sub
loop,pt
mov
pop
cmpsl
fs
aad
ljmp
fsubr
cmp
or
hlt
mov
dec
shlb
sub
xchg
adc
imul
push
notl
ret
fldenv
cwtl
sub
sbb
in
clc
push
dec
movsb
or
sti
pop
das
cmp
inc
mov
mov
and
test
outsl
sub
int3
fwait
out
aaa
xchg
movsl
mov
aas
and
xchg
adc
sbb
dec
adc
mov
je
and
adc
pop
test
mov
outsb
mov
push
jns
jno
jnp
add
orb
imul
bound
xlat
sub
shrl
mov
mov
mov
addb
add
mov
cli
aaa
repz
mov
mov
add
jle
cmp
mov
add
clts
scas
add
jne
iret
and
movsl
mov
outsb
mov
aaa
pop
gs
fcomip
xor
pop
dec
rcll
sub
jae
dec
jp
cmp
adc
pop
cwtl
jae
inc
pop
inc
lret
push
mov
mov
adc
std
mov
mov
in
enter
aas
loopne
mov
rolb
jno,pn
sbb
ret
dec
adc
xchg
in
or
test
mov
clc
xchg
sbb
and
mov
push
int
test
fstl
pop
int
xor
popf
les
dec
xor
adc
xchg
movsl
cwtl
jno
ss
push
mov
sub
mov
fcompl
or
icebp
mov
xchg
fcmovu
call
cmp
fstps
or
xor
cmpsl
aam
mov
mov
imul
sbb
mov
push
hlt
mov
popf
sub
enter
sub
stmxcsr
sarl
add
push
rcrl
test
push
inc
xchg
mov
pusha
rcrl
inc
jle
sub
push
mov
lcall
mov
xor
pushw
mov
imul
ja
pop
movsb
inc
dec
sbb
aam
ss
std
cmp
adc
xchg
loop
push
jmp
int3
pop
add
xchg
fcmovnb
repz
mov
push
dec
fmuls
orb
ds
mov
scas
pop
movsb
xchg
test
jns
pop
rorb
outsl
dec
sbb
addb
xor
mov
mov
or
std
mov
jbe
xor
mov
jmp
call
outsb
dec
or
addr16
sbb
push
add
stc
fdivrs
out
jbe
jo
dec
pop
iret
inc
push
or
fmulp
fiaddl
insl
and
add
mov
aas
mov
inc
jle
daa
mov
js
and
in
in
adc
pop
inc
cmc
int3
sahf
xchg
les
inc
fcoml
and
jl
mov
lock
sub
jmp
aad
les
pop
imul
mov
fst
pop
add
or
enter
jo
pop
or
incl
mov
insb
popa
sbb
mov
mov
popf
xchg
xchg
adc
fnsave
or
and
int3
rcr
jge
jp
cmp
les
push
ucomiss
inc
dec
les
lds
pop
jnp
lock
fwait
mov
add
mov
or
loopne
or
mov
insl
fisubs
addr16
jmp
dec
xchg
xchg
iret
addr16
lods
lds
stc
sub
push
out
loopne
and
mov
test
lea
jge
mov
jecxz
aaa
pop
inc
xlat
or
dec
popf
pop
adc
and
out
jmp
inc
outsl
xor
stos
xchg
and
sar
out
je
mov
cmp
lods
push
cmp
xor
lods
xchg
sahf
adc
notb
sti
mov
sbb
mov
enter
sahf
mov
sti
pop
lock
pop
fstpt
lret
or
jge
mov
test
pushf
sub
fs
inc
aad
and
cmp
mov
ret
mov
leave
dec
in
repz
or
scas
clc
out
mov
mov
ret
jp
std
add
popa
inc
sub
leave
imul
jge
jl
jno
or
xchg
aad
inc
cmp
into
xchg
sub
mov
ljmp
sub
add
jecxz
addb
js
mov
xor
push
xchg
ss
push
gs
jmp
jp
sbb
pop
push
jle
or
outsl
xor
leave
mov
mov
adcb
test
bound
pop
into
fs
das
xchg
inc
mov
test
jp
test
movsl
mov
jle
sbb
mov
shlb
or
sub
in
repnz
shrb
mov
inc
sahf
xor
mov
inc
push
xor
mov
jle
test
daa
xor
stos
sbb
sub
out
sbb
pop
xchg
sub
lahf
adc
aas
shlb
pop
sub
dec
or
lret
sbb
aaa
test
jne
xor
rorb
int3
lret
ss
sbb
pushf
mov
push
mov
js
pushf
xchg
leave
jns
arpl
pop
ret
mov
push
xchg
movsl
sub
sahf
sti
sub
test
shlb
adc
fists
stos
push
adc
inc
sub
xor
mov
add
push
sahf
push
push
add
push
pop
imul
lods
enter
push
pop
repnz
xor
dec
stos
test
mov
ss
sarb
or
mov
mov
lock
mov
lea
sub
outsb
mov
stos
adc
mov
cmp
mov
jmp
mov
or
cmp
outsb
xor
pop
inc
pop
cmp
sub
repz
lods
jb
subb
sub
lcall
pop
push
xor
inc
adc
sbb
xchg
popa
add
jle
dec
pop
add
and
mov
mov
iret
ja
mov
imul
push
pop
scas
sbbl
cmp
ss
xlat
push
and
xchg
lock
push
les
jnp
lahf
pop
xchg
sbb
inc
jno
dec
and
jmp
sahf
insb
push
sbb
push
sub
dec
aad
mov
je
adc
inc
mov
fcmovnbe
data16
leave
mov
loop
add
loope
lcall
adc
mov
data16
or
jo
dec
out
mov
fbstp
iret
mov
inc
rcrl
sti
mov
xchg
fwait
xchg
mov
jle
xor
cltd
orl
xor
rol
clc
cwtl
popf
and
adc
arpl
cmp
and
bound
cmp
sbb
mov
lcall
mov
xor
lea
inc
or
ljmp
out
or
popf
test
fildl
cmpb
enter
ja
cltd
movsl
addr16
int
arpl
stos
jns
in
xchg
lods
jo
flds
bound
mov
sbb
xchg
dec
jmp
and
dec
and
ss
dec
iret
lret
pusha
subb
add
in
mov
sub
sti
lock
sbb
fisubrl
fnsave
jecxz
call
add
and
incb
ljmp
add
xchg
push
or
mov
sbb
loope
jecxz
push
sbb
movsb
cmpxchg
xchg
xchg
xchg
cmp
push
xor
les
or
jo
aad
dec
or
xor
mov
pushf
int3
pusha
inc
and
push
dec
stc
in
das
fnsave
cmp
fsts
add
push
sbb
adc
dec
lcall
test
mov
xor
adc
inc
ret
mov
fnstcw
test
or
sub
add
fidivrs
pop
jne
push
leave
jne
sarb
and
fmuls
les
dec
scas
push
aas
hlt
out
clc
dec
roll
sahf
in
dec
mov
fistl
sbb
inc
adc
push
loop
or
aaa
adc
and
dec
adc
jecxz
loop
xor
aas
std
sbb
into
sbbb
push
push
pushf
xor
sbb
push
xchg
xchg
fistps
xor
xor
in
pop
or
pop
xchg
cs
test
pop
faddl
jne
mov
jmp
test
jns
add
pop
or
int3
jnp
loope
fdivl
popa
scas
and
mov
jbe
sbb
rcll
xchg
out
aaa
nop
jge
lock
push
scas
cmp
rcrl
cmpsl
popf
inc
js
lcall
leave
jmp
insl
xor
mov
daa
jg
xorb
int3
push
das
push
pushf
mov
enter
ljmp
jb
or
ror
dec
cmpl
push
into
dec
add
test
jns
je
fimuls
mov
lea
das
mov
xchg
dec
stos
inc
sti
sbb
aas
mov
add
adc
dec
lds
jae
lea
repnz
sub
add
pop
addr16
xchg
pop
adc
lods
xlat
std
xor
rcr
dec
mov
and
iret
push
lahf
jns
xor
cmp
cltd
fnstsw
flds
rorl
mov
arpl
push
add
stc
jp
xchg
adc
or
or
incb
dec
lds
les
imulb
inc
and
mov
xchg
test
cmp
out
loope
cli
inc
jmp
mov
subl
addr16
addr16
icebp
rclb
scas
or
push
jno
add
insl
out
and
push
xor
mov
orl
call
sub
setp
scas
loop
push
adc
lods
or
or
sub
pop
cmpb
sbb
jns
push
fists
xchg
aaa
or
jge
adc
mov
popf
int3
std
and
jbe
mov
into
cmp
cli
jg
cmp
and
sub
inc
cmp
xchg
xor
arpl
test
sti
cmp
loope
mov
mov
es
adc
sub
sbb
out
ds
repnz
rclb
in
sub
sti
mov
repnz
ljmp
dec
jp
add
mov
push
sahf
repz
orb
pop
dec
lcall
loope
pushf
push
cmpsb
pop
sbb
lock
imul
sub
adc
icebp
push
cli
fucomip
inc
fs
nop
fmull
outsl
jp
push
xor
mov
or
and
pop
mov
pop
xor
mov
xor
cmp
hlt
xor
push
lahf
loop
jne
jmp
fdivrs
xor
mov
pushf
fcoml
repnz
jecxz
xor
fwait
xchg
jbe
stos
push
jae
repnz
xor
imul
les
pushf
rclb
dec
cwtl
push
pop
cmp
jno
sbb
sub
push
pop
sub
test
dec
test
adc
add
jno
or
pop
jp
pop
ficomps
fsubl
inc
mov
andb
jg
jae
imul
fldenv
mov
in
repnz
es
je
pop
mov
aad
leavew
dec
test
inc
push
insl
jbe
repnz
jle
mov
stos
rcrb
xor
jecxz,pt
arpl
scas
addr16
adc
cmpsl
shl
test
int
sbb
pop
sahf
out
adc
lods
mov
test
push
mov
push
push
fxch
out
push
test
cmpsl
add
adc
dec
bound
xchg
mov
add
xor
iret
lahf
cmp
or
push
jns
into
sub
in
mov
xor
fdivs
mov
push
sub
and
inc
pop
js
das
sub
pusha
xchg
and
xchg
pop
leave
push
and
pop
dec
rsm
cmp
dec
arpl
add
cmpsl
imul
imul
test
cmp
sub
loope
mov
scas
push
mov
jno
sti
movsl
cmp
out
ret
mov
pusha
mov
mov
add
sbb
adc
dec
cmp
xchg
xchg
sub
adc
sbb
inc
js
push
pop
lea
cld
fwait
ss
jo
repnz
mov
pushf
push
push
sub
inc
clc
cmc
sub
cmp
popf
push
jb
out
ja
out
lods
xchg
jmp
inc
adc
xor
in
push
stos
test
inc
inc
inc
pop
movb
adc
in
or
pop
and
mov
xlat
int
icebp
lods
cwtl
jp
loope
and
cwtl
mov
adc
mov
setnp
ret
xchg
pop
push
fidivrs
and
aam
out
loopne
xchg
es
or
push
cmp
fwait
xchg
mov
mov
cmp
in
movsb
push
push
pop
jmp
push
mov
adcl
test
aaa
gs
inc
lds
sarl
inc
movsl
or
mov
mov
popf
cld
jbe
shrb
add
or
lret
mov
jno
dec
xchg
add
ja,pt
mov
and
insb
or
in
inc
and
movsl
mull
js
push
pop
ss
movups
addb
adc
and
lcall
and
mov
mov
xchg
cltd
xor
das
imul
inc
test
jbe
leave
inc
test
xchg
iret
xor
cmp
adc
cld
xchg
dec
cltd
loop
mov
pop
inc
jecxz
dec
gs
es
inc
hlt
rolb
mov
sbb
push
mov
pop
inc
nop
and
shrb
enter
and
scas
push
ljmp
xor
add
dec
xlat
jo
add
sbb
arpl
sar
mov
test
push
jecxz
mov
mov
icebp
or
fnstcw
add
jl
jno
ja
sahf
xchg
shll
enter
pop
dec
outsl
inc
mov
xor
movsb
imul
dec
xchg
pop
xor
test
pusha
in
outsl
stos
jmp
push
xchg
pop
push
push
ret
jmp
outsb
stc
adc
les
push
mov
mov
mov
xor
add
sbb
jae
mov
mov
cld
jmp
int3
inc
inc
push
push
lods
test
mov
pusha
cmp
ffreep
nop
fdivl
cmp
push
notb
or
aaa
loope
dec
sub
nop
adc
lcall
mov
scas
jg
out
aas
lds
cli
lds
nop
xchg
mov
xchg
inc
push
dec
aas
or
outsl
mov
lret
add
cmp
aaa
pop
cltd
mov
in
and
adc
xor
add
mov
inc
fstl
dec
test
out
imul
lea
inc
outsl
scas
and
dec
stc
and
rcrb
mov
push
lea
sbb
aaa
pop
mov
movsl
push
test
popa
rcrl
jbe
in
ja
stos
pop
xorb
int3
inc
gs
test
xlat
pop
icebp
movsb
mov
clc
mov
gs
xor
mov
cmpsb
jnp
hlt
dec
pop
inc
in
push
in
dec
cs
insb
xchg
loop
pop
in
mov
or
stc
lahf
fimull
mov
pop
pop
dec
mov
jne
stos
in
sbb
push
mov
xchg
into
lahf
sbb
adc
sub
sub
dec
or
rorb
ljmp
xchg
or
jmp
mov
jp
aaa
jno
jo
jae
ljmp
sbb
sub
pop
add
add
dec
pop
sbb
fwait
loop
pop
xor
out
sbb
cmp
cmpsb
adc
adc
fildl
sub
sbb
xor
movsb
dec
cs
and
pop
jo
daa
call
out
xchg
out
push
sbb
push
inc
imul
lret
xchg
fidivl
xor
aam
pop
cli
mov
flds
inc
and
sbb
push
push
xlat
xchg
mov
jno
xor
jbe
in
out
push
jmp
scas
out
or
sbb
cmc
inc
data16
inc
xchg
clc
mov
inc
mov
movsb
sbb
cmp
jp
pop
popf
fdivrl
sbb
sub
test
iret
rcr
fists
mov
add
enter
cwtl
sti
dec
or
loop
cmp
fdivs
and
stos
jge
push
out
out
in
rorl
add
les
ljmp
pop
rorb
mov
stc
icebp
mov
mov
sub
mov
ret
sub
addr16
lcall
movsl
push
add
pop
lret
stos
xorb
popa
or
and
add
loop
mov
sbb
js
jmp
inc
mov
xor
inc
push
pop
subl
add
bound
outsb
test
in
into
cli
sbb
or
inc
lret
jp
cli
rep
push
notb
rcl
les
movsl
inc
ja
pop
hlt
leave
cmpsl
lahf
mov
das
arpl
call
mov
in
adc
fs
and
aam
push
mov
nop
xlat
stos
movsl
mov
pop
test
hlt
dec
mulb
jg
popa
mov
notb
pusha
cltd
stos
inc
xchg
lret
inc
in
pop
aam
xor
and
jbe
stos
inc
and
mov
fbstp
aaa
sub
jns
sub
jp
add
xchg
fnsave
jo
sub
lock
jb
adcb
jae
dec
add
pop
aas
sti
or
mov
mov
lret
push
fsubrl
xchg
jae
es
test
outsb
add
mov
aad
jp
bound
lods
push
aam
inc
ljmp
fistpll
into
addb
fisubrs
push
jnp
mov
cmc
popa
shl
fs
loop
and
jge
ja
imul
sub
sub
sti
rol
or
fists
js
shll
mov
bound
mov
push
test
cmc
xlat
loop
sub
jb
jae
ret
loopne
enter
xchg
lods
or
push
and
cwtl
ret
xor
fistpll
jne
push
push
pop
stos
gs
xor
clc
inc
jl
shlb
mov
popf
dec
jmp
push
lods
or
inc
test
pop
std
cmc
popf
xorl
cmp
dec
jle
push
outsl
movsb
cwtl
push
add
shl
cmp
add
ss
ret
dec
shl
push
movsl
xchg
cmp
mov
lcall
xlat
mov
hlt
faddl
bnd
or
in
inc
aaa
gs
cmpsb
aaa
scas
or
lcall
mov
test
loop
jl
ficomps
sub
hlt
jno
inc
push
nop
test
std
aas
pop
ret
xchg
andl
and
mov
stos
push
sub
gs
xchg
jno
ja
push
and
fs
mov
pop
jns
out
sbb
mov
rcr
sti
cmc
fldl
mov
addr16
xchg
imul
out
mov
sub
xchg
sub
mov
pushf
sbb
pop
sbbl
jmp
stos
mov
mov
sbb
ljmp
daa
pop
cmp
lahf
jge
xor
xchg
inc
cmp
rclb
das
test
mov
mov
adc
push
adc
out
lahf
adc
outsl
dec
dec
inc
imul
sbb
adc
data16
incb
call
xchg
out
inc
rol
cmpsb
cmp
pop
iret
or
in
roll
lea
cmp
or
inc
loope
mov
ret
sbb
pop
xor
shrb
movsl
andl
dec
jle
fstpt
ret
mov
sub
lea
sbb
fimull
je
adc
mov
xchg
fidivs
loop
outsl
fucomp
push
cmpb
outsb
xchg
mov
mov
xchg
dec
inc
scas
icebp
fwait
jecxz
mov
mov
aaa
jns
fdivrl
and
push
inc
and
or
push
int
scas
pop
cmp
orb
push
lock
jmp
xchg
fwait
movsl
stos
jg
pop
add
call
mov
pop
mov
dec
lea
es
les
mov
gs
cmp
inc
pop
xchg
sbb
ret
sub
mov
loope
addr16
pushl
push
pop
push
add
push
mov
hlt
inc
mov
lea
and
push
push
add
and
dec
sub
imul
int
or
mov
subl
mov
push
scas
jge
adc
inc
mov
pop
adc
pop
cwtl
sti
fldl
repz
stc
xchg
addb
cmp
add
push
out
fildl
mov
repnz
rorb
push
icebp
outsb
int
inc
mov
ret
dec
repz
xor
push
mov
mov
movsl
ret
push
in
rcll
outsb
rcr
aas
mov
add
jo
push
pop
xor
test
sahf
repz
push
int3
xor
jge
dec
fmuls
mov
jbe
into
jb
sub
adc
mov
mov
or
jl
jo
aas
push
out
mov
popf
imul
fstp
adc
idivb
jp
jmp
xchg
jno
cmp
push
in
mov
pop
cmp
inc
adcl
in
sub
xor
xor
scas
xchg
lods
shll
lock
aaa
ret
adc
xor
divl
adc
icebp
ljmp
add
in
out
stc
xor
sbb
cmpsl
inc
xchg
sbb
xchg
test
ss
clc
pop
out
aad
jns
xlat
and
data16
and
cltd
sub
xor
sub
sub
sti
lret
cwtl
xchg
int3
int
ucomiss
dec
sahf
xor
fs
cmp
mov
out
les
mov
xchg
fisttpll
mov
ljmp
out
xor
jcxz
sub
int3
xlat
or
mov
jg
out
into
les
sbb
sub
shrl
loopne
lds
mov
shll
adcb
pop
pushf
mov
and
xchg
or
imul
fcomps
arpl
jmp
push
js
sarb
sub
jb
dec
outsb
add
mov
adc
testl
push
jb
push
or
hlt
dec
xor
pushf
sub
cmp
bound
ret
lahf
xchg
nop
mov
adc
jbe
in
movsb
pop
daa
pop
inc
sub
lahf
movsl
push
push
dec
cmp
adc
cld
mov
arpl
fdivr
push
fiaddl
xor
mov
shlb
mov
ret
loopne
mov
inc
mov
aaa
iret
dec
rolb
sub
xchg
sbb
lret
in
jae
dec
arpl
sbb
loop
cwtl
stc
and
mov
mov
fnstenv
dec
fnstenv
cld
mov
inc
inc
and
xchg
adc
je
mov
jne
loopne
shlb
push
test
push
sub
repnz
xor
pop
add
adc
xor
mov
clc
or
mov
xor
movsl
mov
mov
cmc
xor
sar
sti
jmp
pop
xor
mov
inc
xchg
mov
cmp
sti
lret
xchg
pusha
ss
adc
nop
outsb
xlat
or
mov
push
iret
or
xor
imul
push
xchg
call
xchg
nop
das
jl
adc
je
insl
aad
sub
cmp
jno
es
or
jno
int
out
mov
popa
cmp
and
cmc
mov
pop
test
mov
aad
js
test
rolb
lods
insb
push
insl
gs
cmc
mov
and
push
bound
rclb
clc
imul
mov
pop
shll
aam
dec
or
imul
sbbb
dec
jnp
sti
pop
test
out
mov
xchg
mov
fdivrl
mov
test
movlps
stos
out
notl
sub
mov
mov
repnz
inc
popl
mov
push
jo
lods
xchg
nop
loopne
dec
pop
mov
repz
mov
shlb
dec
pusha
pop
scas
mov
movsb
lcall
sti
les
ret
mov
out
lea
mov
adc
cmp
sbb
test
or
ficoms
jmp
in
movsb
xchg
xor
add
in
or
xchg
pop
inc
xchg
add
or
rcrb
lods
and
and
lods
xor
pop
jae
test
xchg
ja
adc
test
in
push
push
mov
pop
insb
and
lea
arpl
loop
mov
jno
push
jns
pop
or
mov
inc
pop
daa
inc
pushf
js
movsb
popa
hlt
cs
mov
xlat
dec
pop
stos
pop
cmp
sbb
fwait
pusha
subl
lcall
mov
push
lods
icebp
cs
je
sbbb
call
xchg
push
cmp
cmpsb
xchg
xchg
push
cld
pop
andl
sub
leave
pusha
xchg
xor
push
ds
jb
ss
sbb
and
mov
jecxz
or
add
lock
jg
shrl
movsb
jb
ret
clc
arpl
insl
insb
adc
jg
or
je
repz
cltd
cmp
push
cltd
add
cmp
push
stos
aam
out
pop
mov
inc
pop
das
std
subl
stos
jnp
mov
xchg
xchg
ljmp
stos
pop
or
pop
jne
repz
mov
and
inc
jns
mov
ret
jbe
jae
adc
ror
mov
lock
or
push
fidivrs
into
fstpl
cmpsl
mov
stc
decl
or
ja
ss
mov
sbb
lcall
fistpl
mov
shlb
in
inc
jae
inc
daa
mov
cwtl
hlt
sbb
push
xchg
add
inc
xchg
sub
mov
mov
fldenv
jecxz
push
lret
dec
sub
jp
outsb
je
cmc
ficoms
mov
adc
outsb
push
fistpll
int3
push
mov
cmc
idiv
es
scas
cmp
push
scas
inc
imul
cltd
mov
push
xchg
mov
xorb
jge
fsubrs
cmp
imul
mov
mov
pop
mov
lret
gs
int
es
rorl
or
pop
cmp
mov
mov
inc
mov
push
sbb
das
adc
push
jge
add
xor
xrelease
cmp
sbb
inc
je
inc
dec
in
jno
nop
inc
sar
fldln2
jb
int
fdivs
sub
and
insl
mov
js
cmp
inc
pop
aam
inc
or
or
arpl
ficoml
add
mov
or
scas
xchg
pop
mov
adc
out
bound
jne
pop
movsl
sbb
insl
fdivr
jecxz
int
mov
jae
fld
inc
sub
sahf
in
popf
bndldx
flds
js
push
inc
std
ds
daa
test
push
adc
mov
xchg
fildl
cmpsb
fdivrs
push
jmp
clc
leave
daa
adc
cmp
daa
lret
sbb
in
shll
sub
fnstsw
push
enter
xor
jae
dec
test
test
gs
add
lods
rorb
int3
loop
xlat
mov
sbb
and
lock
push
daa
outsl
cmpsl
scas
ja
mov
into
sub
arpl
into
je
mov
or
and
or
orb
jl
icebp
rcll
mov
sub
add
mov
pop
or
xchg
jne
ret
sbb
inc
and
push
jl
lret
jg
pop
xchg
bound
and
jo
sahf
sbb
xor
fadd
in
cmp
and
dec
inc
out
sbb
sub
add
test
loope
es
xor
in
add
xor
mov
xor
clc
fistl
inc
or
addr16
pop
pop
popa
and
jl
or
clc
push
or
and
push
fdivrp
xor
ss
mov
subps
out
or
fisubrl
jne
lds
cld
aad
sti
test
and
pop
xchg
xchg
dec
mov
negb
cmp
add
pusha
in
cs
sub
roll
fcmovnbe
inc
xchg
xor
ret
inc
leave
push
in
mov
mov
dec
negl
xchg
inc
cmpsb
pop
test
or
js
std
movsl
das
jle
cmp
js
and
test
push
adcb
sar
mov
stos
fidivrl
add
ja
minps
pop
xchg
sbb
xchg
loop
mov
into
and
pop
test
out
shlb
dec
cld
sub
inc
out
rcrl
and
inc
pop
jnp
sbb
movsb
or
jns
mov
jmp
inc
imul
adc
stc
adc
push
pushf
mov
dec
je
xchg
iret
leave
out
and
and
mov
pop
mov
fcomi
popl
adc
mov
cmp
pop
popa
cmp
mov
jle
jb
mov
mov
xlat
jns
rclb
mov
xchg
xchg
pop
pop
fwait
xlat
push
and
or
adc
rcrl
into
arpl
sub
xchg
add
gs
addr16
sbb
dec
push
jbe
dec
xchg
outsl
or
jno
jbe
mov
test
sbb
cli
enter
jp
adc
jmp
repnz
in
nop
push
repnz
or
mov
aam
jge
mov
or
lret
pop
enter
push
jmp
push
outsl
dec
pop
and
xchg
bound
add
outsb
lods
mov
insb
add
sarb
pop
inc
xor
out
mov
rclb
mov
fxch
je
hlt
dec
xor
js
cli
mov
xor
aas
push
aad
push
dec
fdivs
sbbl
clc
jnp
dec
mov
push
cmp
lret
dec
cmp
enter
in
jmp
xchg
push
ret
cwtl
repnz
or
xor
push
arpl
mov
cmpsl
mov
aam
out
jb
push
push
xchg
xchg
mov
subb
inc
cmp
mov
or
xchg
push
jne
iret
aam
or
mov
add
jb
cmp
sbbb
call
movsl
xchg
jge
into
movsl
lds
mov
xchg
gs
or
cwtl
repz
sbb
movsb
fidivl
call
scas
mov
pushf
movsl
or
adc
gs
div
inc
mov
stc
cmpsb
leave
push
scas
lahf
fisttpll
xor
xlat
inc
les
arpl
test
jl
push
icebp
mov
and
xor
adc
mov
mov
xor
test
js
clc
or
mov
fildll
mov
push
push
jecxz
xor
xlat
add
test
pop
fnstenv
test
dec
xchg
cli
mov
sbbb
adc
jmp
and
mov
pushf
enter
test
cltd
loopne
pop
lods
sub
fidivrs
nop
test
lds
cmc
shlb
fs
outsb
add
xor
inc
mov
out
xchg
mov
inc
add
in
dec
lret
xlat
add
jmp
cmp
loopne
in
in
fsts
cmp
cmpsb
cmp
or
enter
fnsave
xchg
jbe
int
testl
paddd
add
fdivrp
rcrb
dec
dec
xchg
add
clc
aaa
jl
in
lock
ss
aam
in
sti
enter
movsl
dec
or
arpl
sbb
arpl
aad
cld
por
faddl
packssdw
iret
sti
idivl
xor
pop
mov
pop
imul
sub
ret
fwait
jl
movsb
jo
ret
dec
jno
jecxz
cmp
mov
push
mov
push
and
and
and
jg
and
dec
loopne
ret
pop
and
and
push
and
mov
xchg
insl
xor
add
inc
or
dec
pop
add
and
insb
mov
or
and
cmp
or
subb
jns
xor
xor
ds
insl
dec
adc
test
mov
jmp
testb
in
movsb
mov
pop
xchg
shrl
mov
pop
repz
or
pop
outsb
ss
repnz
je
inc
sahf
xchg
popf
xor
popf
cmp
mov
sub
rolb
push
pushf
mov
dec
mov
pop
jecxz
cmpsl
lods
xor
lcallw
dec
pop
shl
loopne
ss
add
sarl
int
jns
and
rcl
pop
xor
xor
adc
mov
in
mov
roll
add
mov
mov
ljmp
rorl
adc
movsl
mov
sub
sbb
loop
stos
add
jmp
mov
xor
mov
pop
push
iret
and
cld
in
xchg
ret
test
sub
clc
push
dec
dec
mov
mov
and
or
loope
loope
pop
out
pop
push
repnz
xor
mov
movsl
dec
or
push
mov
test
mov
jg
xchg
adc
pop
rclb
push
gs
jp
outsl
lea
jbe
repz
aad
das
ss
je
lods
int3
mov
adc
lea
jae
xchg
repnz
popf
xchg
push
mov
pop
fsubrs
xor
jbe,pt
mov
jmp
js
rolb
test
adc
sahf
add
je
das
repz
stc
test
jmp
add
pop
jns
xchg
cmc
lea
inc
dec
mov
out
incb
mov
ds
push
pop
adc
dec
loope
and
jge
es
shrb
jnp
mov
roll
pop
cvtsd2ss
sarl
pushf
and
dec
mov
stos
inc
dec
fidivs
mov
xchg
or
iret
lods
movsl
cwtl
inc
mov
imul
inc
rcrl
out
xor
dec
scas
sub
dec
lcall
jo
ja
js
dec
inc
adc
and
adc
xchg
into
in
cmp
dec
cmpsl
xchg
xchg
push
in
add
pop
sub
test
outsb
rcrb
xchg
repz
rcl
xor
add
sbb
pop
in
hlt
pop
call
mov
repz
pop
movsb
push
sbb
sub
jg
xchg
in
lds
out
push
hlt
jl
pop
gs
je
pop
mov
mov
sbb
js
pushf
mov
in
mul
xorl
adc
xchg
sbb
and
jbe
dec
enter
icebp
jo
cmpsb
cltd
pop
xlat
incl
insl
rcl
and
fnstenv
add
sbb
ljmp
fwait
or
or
sub
lods
xchg
cmp
mov
pop
cmp
orl
dec
loopne
mov
sbb
push
xchg
orl
mov
dec
mov
dec
gs
notl
mov
scas
je
and
jne
mov
mov
daa
inc
pop
jmp
pop
jb
call
cwtl
pop
jle
mov
sub
mov
jp
mov
into
mov
neg
out
test
in
pop
jbe
xchg
lods
fnsave
mov
popa
fwait
dec
test
fwait
or
pop
xchg
xor
ljmp
rcll
aaa
push
xchg
push
out
sti
jecxz
push
les
ja
push
jg
mov
push
and
mov
sbb
push
mov
bound
cmp
pushf
push
stos
test
jmp
outsl
enter
test
imull
or
rorl
adc
jbe
stos
push
fdivs
stos
xchg
cmp
int3
idiv
push
pop
popf
fidivrs
dec
jne
fidivs
mov
negl
adc
fsts
mov
notl
inc
cmp
add
outsl
lahf
add
add
xchg
mov
mov
mov
push
ret
or
dec
push
adc
pop
or
outsb
sub
aad
push
std
stos
mov
mov
xor
lret
push
cmp
add
inc
sbb
sbbb
das
xor
and
movsl
cmc
jne
sbb
pop
jg
divl
in
fidivl
ficoml
push
or
out
aas
rclb
and
mov
jno
arpl
push
xchg
pop
or
pop
mov
push
add
inc
jle
in
mov
fisubrl
adc
rcrb
stos
add
ljmp
pop
lret
and
mov
bound
add
clc
sub
sub
mov
repnz
lret
sarb
adcl
fldenv
jo
mov
fdivrp
cmc
mov
stc
mov
sub
mov
jmp
loop
jno
adc
enter
add
add
dec
push
or
xor
mov
add
xor
jg
sub
cltd
ret
sub
js
mov
test
stos
and
shll
xchg
mov
cmp
mov
lret
jne
adc
fdivl
fildl
fmul
sbb
jae
and
int3
sbb
cmc
rcll
mov
test
add
ficoms
adc
pop
adc
movl
pop
outsl
push
pop
xor
sbb
mov
scas
push
movsl
shrl
aam
xchg
push
dec
push
push
adc
negb
sbb
or
dec
mov
sub
loop
call
push
xchg
mov
adc
dec
aam
mov
adc
mov
ss
dec
jmp
xchg
test
fmulp
mov
ss
sub
js
fdivs
loop
ljmp
out
lar
in
incl
pop
and
pop
ret
add
mov
jbe
xchg
xchg
stc
mov
adc
push
inc
test
sub
push
inc
ja
daa
hlt
push
out
and
cmp
push
xchg
in
mov
xchg
stc
insb
xchg
jecxz
aad
pop
fs
and
repz
pop
push
xlat
mov
or
and
addr16
aam
faddl
outsl
xchg
sub
pop
mov
adc
bound
adc
jl
rclb
pop
int3
bound
xor
dec
and
sbb
out
lret
cmp
out
sub
mov
fildll
or
and
xchg
stc
mov
cli
sbb
and
test
in
lds
outsb
dec
mov
out
lret
imul
sahf
test
sub
stc
cmp
inc
add
jns
or
scas
xchg
ds
dec
loop
inc
sbb
push
push
xor
test
cmp
xor
int
cld
lcall
push
sarb
inc
shll
aad
xchg
sbb
sub
sub
jp
shrb
bound
xchg
mov
or
aad
mov
jle
int3
out
negb
push
jns
push
xchg
stc
movsl
out
hlt
mov
mov
inc
mov
pop
inc
jnp
jno
int3
sub
sbb
add
mov
mov
mov
xchg
dec
mov
cmpsl
adc
mov
xchg
pop
lret
aad
cmp
aam
divb
add
out
ljmp
or
or
inc
lcall
cmp
pop
sub
mov
cltd
in
dec
rolb
mov
xchg
inc
enter
xor
nop
mull
xchg
mov
jne
cmp
mov
xor
mov
adc
adc
mov
mov
lock
and
pop
dec
mov
nop
mov
push
mov
mov
dec
fldt
jecxz
das
aad
stos
rorl
iret
and
lods
lods
mov
rclb
pushf
fmull
or
and
and
das
jnp
pop
fwait
div
mov
jb
mov
stos
iret
sub
les
adc
add
push
xlat
push
fdivs
add
push
lods
add
lods
outsl
pop
or
xor
je
pop
aas
dec
cltd
leave
dec
xchg
lds
pop
cmp
sbb
in
repz
inc
push
sbb
sub
mov
dec
sub
inc
xchg
aaa
jne
out
cmp
in
gs
je
fwait
sbb
ljmp
and
insl
in
mov
stos
adc
dec
call
mov
mulb
sub
mov
inc
lret
sbb
sbb
subb
jmp
xchg
jne
xchg
mov
jne
fsubr
bound
ds
xor
or
mov
rcrl
mov
pop
cmp
loopne
in
mov
stc
dec
push
pop
cli
fsubrs
test
aas
sbb
test
sbb
cmc
and
pop
xchg
gs
add
popl
lahf
fadds
cmp
pop
cltd
dec
arpl
cmpsb
sti
push
or
dec
dec
lock
outsb
stos
rcrb
lret
jae
sub
out
pusha
ud1
or
adc
push
xor
sbb
xor
pop
aas
push
ret
adc
jl
push
lods
dec
cld
lcall
inc
lcall
and
adc
movsl
bound
fdivs
or
cmp
jle
rcll
test
loopne
insb
sarb
ret
sub
sarb
mov
inc
xor
cmc
in
push
or
imul
rcl
mov
imul
rorl
ds
sarb
in
fs
testb
jmp
mov
add
xchg
out
aaa
mov
mov
inc
out
pavgw
nop
mov
cli
add
mov
or
xchg
leave
inc
mov
inc
dec
lods
movsl
jg
sub
popa
xor
or
test
dec
sub
out
push
gs
jge
lret
mov
fucomip
nop
popa
mov
adc
mov
cmp
cwtl
push
cmp
sti
notl
sbb
in
or
push
cmpsb
jno
dec
mov
repnz
cmpsb
repz
add
dec
ret
push
xor
xor
out
push
push
xchg
jb
lret
pop
stos
xlat
movsl
insb
cmp
inc
cmpsb
or
subb
dec
dec
in
sbb
das
aas
enter
jge
call
mov
fldlg2
aaa
mov
shll
dec
insl
rcr
and
inc
andl
pop
out
insb
jns
mov
jbe
mov
inc
out
orl
xchg
pop
out
hlt
loope
add
jp
pop
push
cmp
sbbl
in
dec
jmp
ss
jno
lcall
dec
dec
scas
adc
stos
frstor
inc
stos
in
add
nop
adc
cmp
int
or
aam
imul
sti
repz
addl
int
sub
mov
or
add
xchg
sbb
out
mov
lods
dec
mov
jp
jle
add
xchg
mov
lds
dec
mov
fldl
fadd
jecxz
xchg
adc
xorl
mov
jne
mov
sub
inc
push
and
inc
pushf
cmp
call
imul
lret
dec
pop
and
scas
and
pushf
xlat
fcomi
jo
cld
push
mov
pusha
and
les
or
pop
inc
mov
pop
out
gs
push
or
out
adc
iret
xor
jno
sub
loopne
xlat
adc
fcompl
test
xchg
fdiv
dec
mov
movsb
ficompl
pop
mov
cmp
lods
jae
or
mov
outsb
loope
push
xor
mov
cltd
push
mov
loopne
cmp
call
pop
jno
pushaw
cmpsl
imul
dec
cmp
dec
pop
sub
xor
add
test
nop
ror
cmc
sub
jp
and
shll
out
rorb
mov
loope
in
jge
sbb
decb
mov
shr
adc
jg
dec
lcall
test
mov
mov
add
mov
stos
xchg
pop
leave
sub
subl
add
sbb
sub
dec
insl
and
xor
jb
inc
lods
es
pop
push
stos
movsb
pop
shrl
mov
bound
push
nop
cmp
inc
movsl
test
sub
sarl
inc
add
push
sub
mov
xchg
mov
sti
fwait
notl
and
cmp
stos
sbb
in
shlb
inc
sub
mov
add
adc
outsl
adc
jecxz
cmp
xchg
pop
aad
mov
inc
add
push
negl
cmpsl
mov
push
adc
leave
sub
dec
stc
fcmovnb
xor
repnz
mov
into
rclb
push
and
mov
xlat
jne
loop
pop
adc
xchg
sbb
mov
and
cmpsl
fwait
enter
fsubl
aaa
pop
lock
loop
sub
pop
outsl
add
cmpsl
pop
cmp
add
push
test
jecxz
inc
popf
inc
mov
je
mov
sti
cmp
mov
div
pop
fldcw
data16
lret
cltd
jne
loopne
jb
jl
or
mov
push
sahf
lahf
inc
mov
lcall
testl
or
ret
out
aas
jge
inc
sub
pop
clc
inc
adc
enter
add
imul
icebp
leave
mov
insl
mov
dec
adcb
jge
fisttps
pop
fnstsw
test
or
ror
cli
mov
popaw
mov
ficompl
test
int
adc
jg
dec
dec
xchg
ret
lret
ret
jle
sahf
xor
fldenv
push
stos
pushf
mov
aas
fwait
mov
sub
mov
into
in
dec
movsb
push
pop
dec
push
mov
lock
lock
inc
xor
cld
cmc
movsb
or
sbb
sub
pop
mov
lock
lods
adc
fimull
mov
mov
ljmp
mov
dec
jl
or
push
mov
popa
push
sub
icebp
scas
cmp
mov
inc
xor
shl
dec
fildl
loop
jge
stos
pop
push
mov
loopne
out
test
or
pop
test
js
lret
and
xchg
jp
aas
mov
lods
jecxz
ljmp
cmc
mov
outsl
es
sbb
add
enter
dec
loop
jmp
push
and
xor
fsubr
mov
daa
pop
dec
push
sub
inc
adc
in
xor
pop
xor
or
sbb
cs
lahf
add
pop
lcall
inc
cmpsl
push
dec
inc
aas
inc
loop
inc
int3
adc
inc
lods
add
mov
into
ljmp
fcmovnbe
rorb
jns
iret
and
cwtl
sub
int3
mov
xor
out
out
aas
pop
push
adc
out
or
shl
cmp
into
xchg
push
cs
mov
push
mov
sub
adc
inc
jnp
arpl
and
mov
ret
xchg
mov
lods
inc
es
insl
ret
xchg
push
cmp
shrb
inc
lea
jecxz
clc
fildl
repnz
jg
xchg
test
jmp
xor
jmp
cmp
jns
jge
arpl
sbb
in
mov
cmp
icebp
push
arpl
and
jmp
iret
movsl
pop
mov
push
xchg
xor
xchg
pop
fisttps
xchg
lret
or
cmp
adc
inc
mov
inc
mov
push
jecxz
jnp
xchg
dec
and
add
arpl
sub
mov
bound
std
test
xchg
push
paddw
pusha
stc
ret
inc
lcall
int
xchg
dec
popa
fistpll
lds
sub
repz
cmp
add
sub
mov
sub
push
push
hlt
mov
out
sahf
cmpb
or
pop
stos
scas
ja
jnp
mov
xchg
or
xchg
mov
cmp
mov
es
push
jbe
sti
aas
pushl
jle
mov
jmp
bound
push
movsl
loop
jl
xor
lret
or
lds
inc
push
ret
out
lcall
mov
andb
loope
hlt
or
inc
inc
stos
ficoms
mov
push
js
xor
jmp
cmp
jae
negb
in
bound
mov
inc
jge
out
xor
cld
sub
std
fdivl
addr16
mov
jp
popf
pop
pop
or
inc
cmp
mov
aaa
push
inc
pusha
push
ja
sarb
add
lds
lret
inc
fs
test
addr16
iret
mull
inc
outsl
mov
mov
pop
mov
jl
fsubrl
bound
xor
ja
pusha
mov
jp
push
outsl
rcll
lods
push
mov
inc
popa
into
in
je
jmp
adc
into
and
testb
sti
std
push
into
addr16
jae
cmp
and
retw
or
das
mov
cwtl
in
ds
jae
test
xorl
adc
jmp
cltd
in
movsb
pushf
mov
pop
adc
es
in
repnz
push
pop
lock
pop
je
jl
hlt
out
aam
je
icebp
lcall
in
push
add
sub
jg
mov
loope
icebp
inc
dec
test
xchg
lret
aad
rcrl
or
loopne
mov
xchg
mov
movsl
incl
push
and
cmc
push
sub
lret
pop
adc
cwtl
sub
in
loope
mov
push
adc
aaa
push
dec
xchg
xchg
dec
fwait
out
addb
inc
and
xchg
call
xchg
sbb
cmp
push
sahf
pop
dec
cli
adcb
push
pop
pop
sub
push
adc
or
jecxz
xchg
jle
out
sbb
sub
xchg
adc
adc
pop
out
xor
fistl
xor
lds
test
push
push
outsl
cwtl
sbb
inc
flds
adc
sbb
push
in
std
rep
arpl
jb
fldt
mov
pop
pusha
adc
cmpsb
mov
cld
addl
imul
rclb
test
lahf
dec
fwait
vphaddwq
and
mov
adc
es
cmp
sbb
sub
out
shrb
into
out
in
shll
mov
clc
sbb
in
xor
or
jnp
stos
call
mov
mov
pop
push
shl
cmp
push
pop
adc
pop
pop
iret
fistpl
jne
aas
xor
sbb
fdivrs
xchg
sbb
mov
and
jbe
fisttpll
shl
lret
cs
ja
xchg
sub
pop
bnd
xchg
out
scas
push
sbb
mov
or
pop
jb
cli
sub
and
pop
xchg
or
mov
fnsave
leavew
insl
add
or
cmp
out
pop
or
rcr
dec
mov
mov
dec
shl
mov
imulb
xchg
mov
fsubrp
push
mov
push
std
jmp
mov
nopl
pop
imul
dec
les
adcb
xchg
test
mov
repnz
jno
pop
das
daa
mov
nop
test
out
orl
xchg
shrd
push
das
xchg
push
jge
mov
cmp
cmp
sti
mov
jae
lea
mov
enter
jl
addr16
jl
or
jbe
popa
xchg
adc
fstl
lcall
sbb
ja
inc
imul
mov
mov
lds
imul
lods
scas
into
rcll
xchg
outsl
push
push
gs
xor
in
jge
cmpsl
mov
data16
dec
mov
and
sub
imul
ficompl
je
xchg
lcall
gs
hlt
std
les
ja
cmp
hlt
add
in
stos
mov
test
loopne
int
pop
mov
es
jnp
dec
adc
xor
insl
push
je
add
test
bound
adc
je
sbb
ljmp
das
rcl
int
popa
jb
je
sbb
das
loopne
xchg
imul
cmp
sti
pop
cmp
dec
mov
and
imul
mov
pop
stc
jl
mov
aad
jg
out
inc
push
dec
mov
adc
repz
adc
sbb
and
cwtl
inc
mov
xchg
ret
sbb
adc
mov
pop
pushf
xor
jo
lds
lods
mov
ja
clc
and
vaddsubps
jo
enter
ret
lcall
xor
cmp
rcrb
add
jno
out
xor
imul
add
or
repz
jl
subb
cld
push
ret
test
js
aad
int3
or
mov
pusha
test
jle
sub
loopne
fildl
mov
mov
lds
popa
stos
push
into
outsl
dec
pop
mov
sub
ret
lcall
mov
mov
jbe
ljmp
test
inc
ret
push
mov
inc
pop
movsb
jo
cli
dec
or
cmp
nop
mov
loope
je
lods
sub
xor
jmp
clc
xchg
lahf
ret
and
inc
mov
jns
cmp
pop
nop
icebp
inc
je
test
inc
gs
test
imul
call
sbb
cmc
pop
ffreep
cs
loope
push
test
and
mov
daa
stos
loope
and
int3
pop
fidivrl
nop
jmp
nopl
lcall
pop
mov
xor
jp
lret
lea
mov
lock
sti
into
push
addb
add
test
dec
pop
les
push
mov
into
popa
xor
gs
lret
repz
jns
jne
stc
shlb
mov
fwait
aaa
fs
pop
lret
mov
pop
adc
xor
add
xor
cltd
jg
inc
scas
mov
in
popf
movb
inc
or
sahf
add
cli
add
mov
sbb
repz
es
pop
mov
mov
ja
arpl
xchg
mov
jg
arpl
dec
xbegin
sti
shlb
sbb
and
shrb
add
outsl
xchg
and
xor
add
insb
je
out
sarl
aam
lahf
mov
in
nop
cmp
push
pop
out
jle
stc
inc
cmp
xchg
and
popf
jnp
push
lcall
sbbb
mov
sar
aaa
cli
sarl
xchg
or
xchg
into
dec
inc
xchg
mov
and
sti
push
loop
scas
jmp
mov
pop
into
dec
fisubrs
mov
mov
fcomps
daa
inc
mov
test
je
mov
mov
pusha
fstps
pop
pusha
out
cmp
adc
push
std
adc
mov
xchg
outsl
push
xchg
and
push
btsl
cmpsb
sub
loop
pop
hlt
rcl
mov
sub
xchg
sub
idivl
fiadds
cmc
shrl
mov
sub
stos
les
filds
mov
or
push
mov
rolb
cmp
jnp
push
shr
popf
insb
out
jmp
mov
push
iret
aas
push
cwtl
jp
pop
pop
or
jl
or
lods
ret
inc
push
cmp
cmp
cmpsl
inc
sahf
xchg
add
rcrb
jns
xchg
stos
pop
mov
loope
nop
pop
int
fistl
loop
or
fwait
push
add
sub
mov
sarb
loop
dec
stc
je
cmpb
pop
fists
lea
mov
cmc
aaa
test
xlat
out
dec
shrb
mov
mov
inc
outsl
or
scas
cmc
inc
add
sub
repnz
mov
xchg
xchg
loop
movsl
hlt
ss
mov
sbb
xchg
cli
jmp
or
rorl
and
mov
arpl
push
adc
loopne
mov
xchg
xchg
xor
adc
inc
or
mov
fmulp
push
aaa
cmp
hlt
inc
shlb
out
into
mov
popf
pop
push
xchg
xchg
nop
movntps
out
movsl
push
cmp
scas
test
jp
push
cs
imul
push
scas
aas
dec
add
and
dec
test
sub
arpl
mov
dec
insl
cpuid
adc
loopne
push
jmp
sbb
test
pusha
rorl
dec
and
xor
push
ds
push
test
je
aaa
push
mov
push
mov
and
dec
mov
test
jnp
lods
pop
gs
je
sbb
push
dec
cmp
stos
aam
ss
or
sbb
je
mov
fisttps
dec
mov
dec
xchg
push
out
push
gs
sti
movsb
dec
or
add
icebp
ss
test
lret
mov
lds
cli
in
stc
or
inc
push
ja
out
push
ret
clc
jno
ja
sti
xor
imulb
aad
inc
pop
lret
push
jmp
adcb
scas
pusha
fsubl
roll
jg
iret
dec
das
pop
ret
inc
cmp
fnstenv
ljmp
mov
push
jecxz
in
mov
loop
pop
add
out
xchg
das
in
rcl
jo
push
or
int3
cld
xchg
mov
cmpsl
cmp
call
lcall
ret
cwtl
test
inc
daa
dec
sbb
xor
jbe
pop
ja
shlb
jg
or
out
lret
sti
xchg
imul
insb
data16
les
pop
add
mov
adc
gs
mov
cli
rorb
mov
fdivp
xor
gs
cs
and
push
push
fwait
or
push
in
rclb
add
jno
imul
add
push
cmp
cwtl
adc
jo
icebp
mov
adc
aam
loop
cmp
and
pushf
cltd
jae
aas
iret
rclb
and
out
dec
mov
mov
mov
sub
test
xchg
inc
inc
and
push
bnd
sbb
mov
mov
mov
mov
xor
mov
aad
fs
into
movntps
dec
cmc
addr16
jp
leave
roll
insl
clc
insl
imul
jecxz
in
clc
pusha
ljmp
mov
mov
cmp
cmp
fs
call
js
idiv
xor
cli
mov
ljmp
inc
cmp
into
movsl
jb
sub
add
sub
hlt
shrl
pop
jle
and
mov
xorl
mov
push
dec
iret
clc
push
mov
shl
xor
push
icebp
fs
sbb
inc
push
cltd
int
or
enter
loope
jae
call
cmp
fcomps
mov
push
xor
das
mov
orb
cmp
notb
dec
jg
outsl
in
daa
pop
adc
jge
aam
push
stos
in
jge
scas
lret
mov
test
sbb
loop
mov
jns
cmc
es
out
gs
add
adc
add
out
mov
pop
outsl
pusha
repz
push
cs
mov
push
or
nop
imul
sub
sbb
cmp
adc
in
sbb
scas
call
popa
mov
adc
in
and
imul
in
and
loopne
sbb
mov
lret
ficompl
pop
ja
fxam
aas
xor
in
pop
add
mov
sbb
pushf
dec
mov
out
push
xor
andl
mov
icebp
js
sub
xor
inc
sbb
inc
leave
and
dec
scas
stc
dec
fs
ss
rclb
les
sti
or
adc
add
cmp
clc
lods
pop
jnp
jge
mov
rorb
mov
js
les
xorl
sub
cltd
inc
in
adc
jg
sarl
lods
shlb
popa
pop
mov
in
adc
mov
lds
int3
adc
pop
aas
cmp
push
hlt
push
rol
lahf
gs
loop
lock
fldenv
movsb
cmpsl
sbb
sub
jge
mov
sub
adc
mov
jae
add
xchg
mov
push
arpl
and
jge
jbe
dec
popf
enter
inc
push
mov
rcr
das
les
sbb
outsb
stos
and
cmpsb
jb
clc
or
mov
jp
imul
enter
sub
inc
lea
and
adc
pop
mov
xchg
cs
inc
lods
sti
sub
loopne
std
xor
sub
add
mov
pop
sub
or
jp
fisubs
xchg
and
mov
fbld
cmp
or
push
push
xchg
ljmp
dec
in
shrb
aas
cmp
cmpsl
insl
push
sbb
lock
push
aas
sbb
jge
icebp
cmc
ja
cmp
xchg
dec
leave
mov
iret
aas
xchg
repz
pop
outsl
frstor
xor
outsb
mov
popa
scas
jp
push
jnp
mov
add
stos
aaa
adc
push
fimull
push
stos
jmp
push
les
pop
std
jno
mov
scas
push
adc
mov
sbb
mov
xor
dec
rcr
loopne
js
movsl
hlt
fisttpl
pop
call
push
mov
call
mov
adc
lods
push
mov
mull
mov
mov
cmp
inc
bound
inc
out
cmpsl
jns
mov
cmp
mov
or
mov
stos
fstpl
dec
inc
imul
shl
hlt
outsb
pop
sub
push
out
xor
jge
out
je
push
loopne
jb
call
or
cmp
add
test
movsl
or
xor
arpl
add
arpl
scas
jle
add
push
mov
sub
mov
andl
jl
fwait
into
aas
clc
jge
fidivl
ret
fsubrl
mov
or
rclb
repz
in
cmp
xchg
movsl
arpl
addr16
es
and
lods
xchg
out
cmpsb
mov
add
adc
fimuls
ror
xchg
out
pinsrw
xchg
sub
xorb
movsl
push
into
sbb
test
rcl
add
sub
inc
mov
iret
outsb
cmp
dec
ja
mov
xor
pop
pusha
xorb
add
xor
repnz
repnz
jmp
xchg
bound
daa
mov
repz
stc
sahf
stos
mov
mov
imul
movsl
mov
jecxz
mov
mov
jo
dec
pop
fs
int
push
popa
cmp
stc
jnp
sti
dec
push
adc
pop
les
insb
rcrb
mov
inc
out
and
xchg
outsl
ljmp
mov
std
into
test
inc
jno
lahf
and
ret
xor
pop
xor
leave
jnp
adc
lods
push
test
and
sahf
mov
dec
iret
insb
into
test
ss
push
aam
out
cmp
cmp
xor
rcrb
sbb
mov
mov
insl
dec
jne
in
stos
add
add
fnstcw
and
lock
jl
jg
stc
sbb
mov
movsb
movsb
and
out
outsb
pop
jp
mov
xchg
imul
dec
inc
dec
notrack
fwait
sub
loop
push
mov
into
into
mov
stc
in
in
sbb
jecxz
aaa
pop
mov
mov
scas
cmp
in
mov
and
inc
mov
enter
outsb
dec
mov
dec
fdivl
insb
or
testb
pop
push
int3
mov
fdiv
out
mov
sub
aam
mov
mov
cmp
out
sti
es
out
icebp
gs
movsb
mov
shll
add
pushf
sub
clc
dec
push
sbb
pop
out
xchg
mov
add
jne
xchg
push
pop
sub
test
sub
into
or
pextrw
outsb
xchg
fcom
shl
enter
fs
jnp
or
out
ret
push
or
sub
fs
lcall
lcall
shll
xchg
jl
adc
cmpsb
test
movsl
mov
pushf
dec
mov
dec
ja
ror
pop
pop
insb
push
adc
xor
adc
mov
adc
aas
mov
xor
jecxz
test
mov
cs
rclb
je
inc
inc
call
sub
jle
sbb
push
sbb
sbb
pusha
addr16
enter
js
lcall
sbb
jge
mov
lock
xchg
mov
lahf
jnp
mov
jl
pop
mov
cs
into
and
or
xchg
sbbl
test
fmull
xor
inc
stc
cmp
and
outsl
add
or
sbb
mov
xchg
enter
push
and
aad
ret
and
add
mov
cmp
mov
and
xor
jbe
jmp
push
pushf
cmpsl
pop
mov
ss
or
dec
dec
cmp
xchg
sbb
fwait
hlt
add
mov
pop
push
incb
inc
jge
sbb
shll
add
add
out
inc
dec
hlt
outsl
xchg
setg
mov
cmp
mov
mov
jb
mov
pop
inc
dec
mov
adc
data16
mov
sbb
mov
sub
sub
sbb
and
push
or
cmp
subl
enter
jnp
insl
test
xchg
mov
sti
hlt
je
adc
jns
inc
inc
pushl
mov
ret
orb
int
cmc
pop
dec
pop
pop
or
fs
cwtl
in
cmc
jecxz,pn
loopne
pop
scas
and
and
popa
sub
xchg
dec
sbb
jge
in
in
sbb
xchg
inc
mov
jne
jmp
inc
rcrl
jno
loope
push
cmp
xchg
jno
inc
mov
movsl
inc
mov
mov
repnz
fwait
and
pop
cmp
dec
and
sub
dec
dec
cld
pop
cmpsl
push
mov
movsl
lret
dec
lahf
cmp
stos
mov
movsb
sub
inc
in
push
mov
add
aas
pop
int3
mov
test
xor
daa
jne
jp
push
mov
add
test
lret
mov
add
sub
shlb
or
fdivl
faddl
aad
in
pop
and
nop
jmp
int3
mov
pop
call
lahf
mov
idivl
mov
cld
daa
fs
jmp
sbb
fsubrs
mov
push
cmp
movl
cmp
js
sbb
nop
and
sbb
or
fst
jae
xor
mov
imull
mov
ret
sbb
sti
or
inc
pop
cmpsl
dec
test
shlb
mov
lods
or
mov
jp
jb
movsl
push
dec
xchg
inc
adc
mov
cmc
cmp
fimull
pop
jno
fisubs
ja
jge
jnp
mov
addr16
jp
js
shll
jae
sbbb
and
aad
dec
sti
mov
shrb
shrb
inc
push
sbb
fsubrs
clc
cwtl
out
lret
ja
sbb
cld
pop
icebp
inc
mov
lret
sbb
stos
lcall
pop
roll
jmp
pop
mov
pop
jbe
push
negb
lods
xchg
popf
mov
loopne
mov
out
je
add
xchg
cmp
clc
inc
ljmp
lahf
jmp
rcrb
jae
mov
mov
std
test
test
dec
mov
movsb
xchg
fiaddl
mov
or
lods
in
push
orb
dec
pushf
jo
in
cmp
stc
in
daa
dec
mov
cmpb
push
rorl
sub
in
lahf
cmpsb
jne
cmpsb
mov
ret
push
mull
loop
fs
xchg
xchg
inc
rclb
nop
sbb
sahf
nop
mov
outsb
add
pusha
xchg
popa
jle
xlat
adc
lahf
rcr
mov
dec
cmp
push
or
xchg
dec
sub
sbb
cmp
jmp
jg
ljmp
adcl
xlat
xchg
imul
test
push
out
mov
mov
add
scas
fnstenv
xchg
fisubl
mov
ljmp
out
cwtl
call
cltd
lcall
hlt
in
movsl
xchg
sbb
mov
arpl
jo
daa
fists
adc
cmp
faddl
push
cs
adc
les
jle
aam
stc
mov
cmpsl
popa
cld
imul
inc
push
out
addb
mov
js
or
xlat
sub
ljmp
pop
fisubs
daa
cmp
mov
mov
mov
jle
popa
cmpsl
dec
ret
adc
xor
pop
xchg
cwtl
inc
sti
sti
test
xchg
sbb
aam
adc
inc
stos
dec
xor
rcrl
xor
je
xchg
pop
inc
mov
cmpsl
in
inc
ret
mov
add
nop
mov
cmc
nop
fistpll
lods
push
aaa
stos
xchg
jmp
decb
sbb
mov
sbb
mul
dec
fcompl
cltd
mov
in
jbe
repz
call
mov
andb
subb
mov
or
nop
cs
sahf
les
je
push
jl
xchg
xor
ret
add
arpl
jns
and
pop
push
stos
loop
mov
gs
and
pusha
aad
and
mov
mov
int
gs
jge
sbb
inc
test
inc
shlb
mov
imul
js
push
in
cmp
stos
pop
clc
mov
cwtl
pop
push
mov
xor
fidivrl
inc
stos
pop
pop
out
das
pusha
repnz
daa
cltd
inc
shl
lret
add
mov
stos
pop
nop
fcmovnb
sbb
jp
or
xor
cmp
leave
movsb
sti
inc
roll
xor
sub
jge
push
or
push
shrl
jecxz
mov
lock
jo
pop
adc
fidivrs
xlat
rcll
in
adc
repz
mov
mov
xchg
into
cwtl
push
out
sbb
fdivr
test
mov
aas
mov
mov
mov
arpl
rcr
mov
add
test
mov
xor
das
cmp
jmp
shr
aas
xor
lret
in
inc
jp
jae
adc
in
or
pop
xor
es
sub
push
adc
sbb
sti
fistpl
push
int
sub
sub
xchg
push
xor
mov
xchg
or
xchg
inc
adc
xchg
adc
scas
push
sbb
sub
push
into
fldenv
push
adc
xor
mov
xchg
xor
jecxz
push
mov
pusha
out
dec
inc
lods
adc
stos
repnz
sub
dec
out
popa
mov
pop
clc
jmp
mov
stc
pop
das
int
xchg
test
aad
loope
iret
xchg
aaa
es
filds
mov
test
sbb
stos
jg
adcb
iret
shll
fsubl
test
adc
or
pusha
or
clc
jl
jmp
ret
aas
sbb
xchg
fnstcw
test
stos
mov
insl
scas
xor
mov
mov
test
or
push
push
cld
cmp
shlb
mov
mov
add
adc
and
sti
std
or
test
jge
loope
aaa
daa
add
lock
inc
sbb
daa
fmuls
pop
sbb
sbb
and
push
or
mov
loopne
pusha
out
xchg
jge
push
cmp
jae
cmp
mov
push
or
cmp
cs
jecxz
stos
jp
pop
xchg
jne
pop
adc
pop
dec
lock
imul
out
sbb
hlt
push
neg
sbb
push
xchg
mov
mov
and
loopne
mov
dec
aad
mov
dec
pop
inc
jb
leave
push
test
cmp
pop
cwtl
push
aas
test
and
dec
lret
add
dec
lds
sub
incb
movsl
pop
inc
sub
mov
orl
xchg
push
fistpl
push
cmp
or
dec
in
aas
jl
mov
or
jp
cmpb
je
mov
pop
sub
jb
xchg
jae
lea
add
push
jmp
xchg
imul
fwait
and
xchg
add
push
ret
push
rcll
aas
rclb
sbb
repz
inc
popa
jg
xchg
push
fldl
dec
js
fisttpll
imul
enter
test
xorb
xlat
aaa
aam
dec
sbb
ret
movsl
pusha
mov
push
ds
adc
into
adc
scas
dec
mov
jne
test
ljmp
mov
les
sub
stos
inc
cmp
or
push
insl
sub
sarl
dec
mov
mov
push
out
call
outsl
test
ret
push
iret
aam
arpl
push
jae
inc
pop
js
push
or
pusha
mov
cmp
adc
cmpsb
mov
jg
imul
jp
cld
mov
test
xorb
inc
cmpsb
sbb
sub
mov
mov
es
sbb
xchg
out
pop
scas
adc
das
pop
cmp
jno
in
cs
lret
inc
pop
adc
or
push
fwait
pop
adc
mov
jge
add
jp
imul
mov
pop
div
and
rcrb
push
ficoml
xor
neg
cmp
stc
xchg
stc
mov
inc
jo
xchg
les
fimuls
lahf
lret
sbb
subl
xchg
sbb
sbbl
add
in
fistpl
ficoml
lods
push
push
push
rcrb
dec
adc
xchg
in
mov
je
test
loop
inc
pop
sahf
out
mov
cld
pushf
fs
push
jg
jle
mov
push
mov
push
ds
xchg
hlt
xchg
cmpsb
ds
idivb
add
sub
lods
xlat
dec
movsb
push
add
and
lret
enter
aad
mov
jbe
icebp
mov
outsl
inc
dec
cmp
jae
cmp
test
or
xchg
in
jmp
push
arpl
sbb
dec
lret
dec
push
or
sub
mov
lods
pushf
outsb
insb
jp
inc
cmp
xor
outsl
xor
sub
push
pop
xor
cltd
mov
ficomps
mov
lcall
mov
into
dec
aad
or
fcomps
cmp
mov
lds
push
test
loope
sub
push
push
lock
xor
cmp
mov
mov
inc
stos
push
mov
and
lea
or
add
aam
xchg
out
sar
in
aas
fdiv
xor
mov
mov
adc
mov
ret
pop
fildl
jnp
inc
pop
cmpl
add
adc
lret
cmp
in
pop
mov
and
adc
inc
lret
popf
adc
repz
jg
sar
pop
mov
pop
mov
mov
sbb
sbb
imul
push
push
push
imul
lahf
ljmp
repnz
std
dec
dec
mov
pop
cs
test
cs
jbe
xchg
fimuls
loopne
jns
pusha
adc
hlt
mov
pop
imul
xchg
add
cmp
mov
add
sbb
aas
mov
push
dec
mov
inc
or
shll
arpl
push
stos
dec
xchg
divb
pop
and
and
mov
mov
leave
sbb
dec
lcall
or
sbb
pop
inc
in
insl
cmp
roll
add
mov
dec
dec
cmc
fwait
in
mov
xchg
repnz
mov
inc
push
insl
xor
lcall
scas
ljmp
cld
xor
sbb
jns
stos
or
enter
fsubrl
inc
hlt
cmp
xor
cmp
mov
addr16
outsl
cltd
mov
jo
clc
or
pop
mov
mov
repz
data16
xchg
out
jbe
shrl
jae
or
dec
nop
ret
push
push
repnz
push
or
jnp
xlat
outsl
shrl
ljmp
cmp
sub
in
sub
pop
push
daa
jmp
aad
jp
call
out
shl
xchg
call
mov
notl
mov
rcl
or
add
mov
fisubrs
sub
mov
inc
push
nop
mov
fdivs
sbb
pop
bound
roll
out
movsb
inc
jae
popf
ret
push
into
ret
lcall
mov
popf
mov
jae
repnz
adc
and
cmp
stos
sbb
xor
insb
mov
dec
inc
out
mov
push
xlat
xor
or
in
aam
and
clc
lds
cmp
adc
pop
mov
xchg
or
add
sub
adc
cmp
mov
test
xchg
xor
cmp
ja
and
push
cmpsl
xor
mov
sub
inc
pop
adc
inc
aaa
daa
popf
clc
stos
add
stc
pop
xorl
mov
jbe
ret
dec
dec
test
sbb
pop
mov
pop
imul
xchg
fdivl
jno
std
sbb
push
mov
mov
pop
xchg
cmpl
mov
pop
inc
gs
ljmp
inc
out
pop
es
cmp
sti
adc
xchg
inc
into
push
sub
xchg
xor
cmp
jle
or
js
sub
add
aaa
cs
jle
mov
adc
jae
ja
pop
arpl
mov
inc
gs
rcll
adc
jecxz
cmp
ficompl
out
gs
jg
push
nop
out
movsb
cmp
enter
int
cmc
fs
dec
cwtl
add
sub
repz
jmp
fcomps
inc
cmp
adc
cmpsb
pop
mov
dec
rol
mov
xor
in
bound
mov
mov
pop
jno
add
xor
pop
jo
test
and
xor
pop
std
xor
dec
imul
mov
fnop
sub
pushf
mov
and
inc
pop
mov
mov
mov
or
ljmp
xchg
scas
insl
and
mov
subb
pop
cmp
mov
dec
push
sbb
lret
pop
data16
jle
je
les
jb
push
aaa
loop
sub
ret
or
shl
icebp
adc
xchg
xor
mov
out
loop
xchg
dec
fidivs
xor
dec
mov
rcll
cli
loope
fistpl
add
xor
sub
adcl
mov
out
addb
and
aaa
outsb
sti
add
mov
sarb
out
adc
dec
cli
pop
negl
xor
ja
enter
shl
scas
mov
stos
ret
mov
jecxz
cmp
sbbl
test
sub
dec
icebp
shlb
in
jp
sbb
mov
inc
xorl
loop
inc
cmc
icebp
mov
rsqrtps
js
outsb
or
cltd
inc
push
ret
sbb
imul
stos
outsl
inc
xchg
out
cmp
pop
lods
mov
test
jmp
mov
cli
in
xorl
fidivrl
ret
pop
es
mov
jo
loope
ljmp
jb
sar
cmpsl
pop
sbb
dec
lcall
cmp
jp
xchg
ds
dec
mov
std
into
mov
fsubrs
and
gs
dec
pop
push
mov
mov
mov
cwtl
popf
ficoml
mov
and
add
xor
mov
mov
movsb
push
push
shll
xor
mov
or
push
mov
repnz
fs
pop
out
mov
push
ljmp
cmpsl
cmp
insl
jle
les
ret
pop
cli
or
lcall
insl
or
cmp
jg
popa
push
test
inc
aaa
adc
fidivl
adc
out
add
mov
inc
jecxz
cmc
jb
pop
fimuls
adc
mov
lods
fldl
es
jle
loope
aam
int3
movb
mov
arpl
xchg
cmp
xchg
pop
and
sbbb
pop
xchg
xchg
and
test
andb
cmc
jge
imul
dec
inc
inc
xchg
xor
xchg
rorb
ret
xchg
adc
mov
add
xchg
js
mov
cmpsb
addr16
mov
add
jnp
repz
pop
test
sbb
push
pop
xlat
std
call
popf
int
cmp
outsl
cmp
pop
imulb
clc
inc
mov
int
es
sbb
call
dec
outsl
out
incb
test
aas
loopne
decl
fimuls
das
cmc
test
loop
inc
pop
inc
mov
xchg
imul
lcall
test
sbb
push
movsl
data16
repnz
add
add
cmpsl
or
xchg
dec
addb
dec
mov
mov
lret
sbb
jne
scas
cmp
and
lock
flds
lock
iret
cld
or
out
sbb
loopne
cmp
test
pop
in
mov
imul
jne
sub
cmp
ret
push
insb
push
xor
stos
pushf
pop
jge
int3
mov
imul
icebp
mov
jne
push
mov
push
popf
adc
cmp
push
sub
xchg
inc
std
mov
jp
push
sbb
cmp
mov
dec
popf
fs
or
mov
inc
stos
lret
push
sbb
xchg
mov
gs
mov
cmc
sbb
cld
stc
fstps
psraw
sti
ret
sbb
scas
das
pop
mov
sti
mov
push
inc
lock
aam
mov
sarl
notb
mov
das
cmp
inc
out
cmp
icebp
sbb
sbb
xor
add
xchg
xchg
mov
jns
cmp
add
aaa
jb
push
fisttpl
cmp
arpl
mov
push
fmuls
mov
inc
ficompl
sub
test
dec
jo
cmpb
or
dec
jge,pn
ficoml
lret
fs
mov
dec
mov
push
cmp
enter
out
add
or
loope
mov
push
sbb
and
ja
test
leave
insb
push
rcll
arpl
in
lock
cli
push
push
ds
imul
pop
loopne
sub
or
xchg
inc
jl
inc
fsts
sbb
imul
and
adc
sbb
lods
stos
cmc
cwtl
adc
iret
ret
call
call
fxch
lods
and
adc
mov
mov
jae
ljmp
push
mov
aaa
xorb
dec
push
cmpsl
mov
mov
pop
lods
inc
xchg
mov
sub
mov
inc
sub
cmp
jno
push
cmpsl
aam
push
adc
ffreep
and
outsl
dec
push
jne
andb
and
jne
push
pop
pushf
pop
sub
loope
into
aad
imul
and
jl
mov
je
and
pusha
std
in
push
jmp
aam
shr
add
push
sub
jnp
mov
les
sbb
inc
push
pusha
mov
pop
movsl
and
je
in
or
movsb
mov
sahf
jg
adc
sub
pop
cltd
fisubrs
fs
sbb
adcl
or
xchg
lea
mov
je
mov
js
jmp
jmp
cltd
jnp
mov
jmp
das
mov
negl
repz
std
lods
and
loopne
push
nop
lcall
scas
cmp
jge
push
test
sub
ljmp
les
xchg
pop
inc
push
xor
pop
loope
sub
add
mov
sbb
lret
pop
outsl
dec
cli
dec
aam
gs
jb
dec
jo
xchg
xchg
lret
sub
cmp
jg
test
cli
adc
cmp
xor
ljmp
inc
mov
call
rcrb
movsl
in
sbb
mov
lret
jl
into
or
stc
add
aaa
cli
insb
fidivrs
mov
je
dec
rolb
bound
push
add
js
sub
in
pop
mov
mov
or
cli
inc
scas
or
inc
and
dec
sub
sub
daa
sbb
filds
jb
in
sub
mov
cmp
mov
mov
cwtl
loop
mov
jecxz
jge
xchg
jno
add
xor
pop
lret
jnp
jmp
stos
xor
pop
sub
inc
xchg
mov
pop
sbb
test
adc
mov
iret
mov
jno
cvttps2pi
ret
jle
std
or
test
push
andl
dec
cmpsl
scas
testb
ds
out
xor
jg
inc
push
mov
clc
pop
pop
pop
mov
jmp
test
inc
cmp
sub
stos
repz
rcrb
or
mov
dec
xchg
imul
jge
leave
test
lcall
ret
cmp
push
pop
sarb
or
xchg
pop
and
stos
shlb
dec
xchg
or
xor
mov
pop
jns
mov
add
sbb
test
mov
mov
rclb
repz
lds
cmc
loop
jb
mov
insl
lods
push
dec
xchg
jo
iret
mov
mov
push
movsb
cmpsl
mov
lods
es
ret
jmp
clc
leave
lahf
mov
mov
cmpb
insl
fmull
push
cwtl
push
dec
arpl
inc
push
inc
adc
sub
sub
mov
outsl
push
push
mov
jbe
pop
inc
mov
pop
jl
cmpsb
jo
rcrl
lcall
pop
cld
xchg
push
ss
pop
popa
cmp
or
lock
test
xchg
push
add
lea
sahf
cli
xor
xchg
stc
mov
lods
inc
inc
jl
outsb
movsb
jecxz
icebp
mov
mov
cwtl
sbb
fwait
ret
xchg
int
xchg
ja
sub
andl
mov
add
push
enter
cmpsb
ljmp
mov
clc
inc
or
sub
flds
jb
ja
and
sbb
sub
mov
mov
lret
imul
mov
in
cld
xor
xchg
dec
shl
cmp
dec
inc
mov
pushl
fbstp
jg
xchg
test
popf
sti
mov
frstor
mov
add
lods
and
jmp
add
cltd
xorl
push
imul
cmp
out
push
add
enter
jae
adcl
cmc
je
cmp
gs
or
scas
ljmp
mov
add
test
loopne
or
push
int
shlb
aam
or
in
adc
bound
cwtl
ljmp
out
testl
mov
jl
test
js
gs
fidivrs
in
daa
dec
out
mov
icebp
adc
lods
jmp
imul
or
hlt
push
popf
clc
lahf
xchg
add
push
rcll
out
leave
and
cmp
mov
jnp
lret
push
sbb
pop
pandn
sti
lods
test
inc
push
mov
fucomp
fsubl
rorl
scas
mov
push
jle
in
xor
ljmp
push
rcl
daa
subb
adc
ret
sub
mov
cmp
notl
xor
psubw
jbe
mov
and
out
sub
stos
fwait
shlb
fildl
and
jmp
or
push
jmp
pop
push
mov
imulb
add
pop
aad
sub
mov
pop
sbb
lea
mov
or
mov
ljmp
fcmovne
adc
shlb
mov
test
iret
push
pop
sub
push
add
lea
rcll
inc
xchg
sbb
push
stos
xchg
jns
add
popf
push
and
imul
pop
loop
scas
push
adc
int3
mov
inc
lds
ret
xor
push
sar
ja
lahf
dec
and
cld
pop
cmpsb
ss
es
pop
repz
stc
fisubrs
and
cmc
inc
js
cs
and
adc
push
sahf
inc
std
xchg
mov
cmp
testb
cli
xchg
cmp
sbb
rolb
or
movsl
pop
shrb
sar
stos
aad
jnp
aaa
add
cmp
aaa
push
mov
xchg
and
sub
mov
call
pop
data16
data16
es
int3
push
mov
arpl
ljmp
nop
or
cmp
imul
cmp
push
rclb
mov
fsts
xchg
mov
add
push
dec
and
xchg
or
lods
int
push
mov
fcom
pop
dec
lret
adc
std
lods
push
scas
lods
push
mov
ret
sub
les
cmp
sub
sbb
xchg
pushf
aaa
lock
outsb
insl
mov
xor
pop
cmp
adc
mov
cmc
pop
pop
mov
cmp
pop
pop
in
xor
xlat
xor
jecxz
push
push
jnp
xchg
add
sti
adc
pusha
push
inc
js
aad
lds
jb
xchg
out
add
ja
ret
cmp
leave
in
popf
dec
movzbl
test
idiv
jle
cmp
arpl
cmp
cmpsl
daa
mov
push
or
jl
push
and
mov
xor
aad
test
pop
lea
loop
mov
mov
je
mov
jecxz
daa
js
mov
mov
mov
fldenv
pop
xchg
cltd
adc
mov
xchg
aaa
repz
dec
or
add
inc
je
sub
cmp
movsb
mov
jb
cmp
ja
mov
mov
or
popf
dec
sub
pop
mov
lea
adcb
cmpsl
pushf
mov
divb
adc
jp
repnz
out
scas
ja
sbb
addr16
adc
popa
outsb
dec
stos
sub
inc
cmp
outsb
fbstp
js
cmp
xor
cmpb
add
mov
lock
xor
cli
in
fisttps
mov
imul
or
or
daa
push
les
and
dec
mov
xchg
jmp
int
push
xchg
int
stos
hlt
xchg
jecxz
pop
pop
mov
cltd
iret
xchg
add
jb
mov
lods
sbb
leave
push
in
pushf
sti
mov
cmp
lea
int
push
rolb
cmp
les
mov
mov
adc
xchg
xchg
call
mov
ss
fdivrs
ret
ja
xor
arpl
push
cld
cmp
dec
inc
and
xor
repnz
lock
mov
stc
imulb
out
xlat
ss
cltd
js
shl
ficompl
and
sbb
pop
mov
loop
jb
mov
xchg
lret
lahf
jmp
cmp
test
push
subb
loopne
dec
cs
inc
push
cmc
sti
mov
mov
mov
fisttpl
aaa
test
push
adc
and
inc
int3
cmp
xor
lds
cli
or
ds
sub
dec
in
lret
fimull
mov
mov
pop
or
jmp
xchg
and
stos
pop
movsb
mov
and
add
cmp
ret
inc
xchg
sbb
or
dec
dec
pop
decl
inc
leave
lods
and
add
adc
aad
push
lahf
je
mov
cltd
sbb
dec
add
xlat
mov
ror
mov
rcr
popf
scas
jmp
mov
jne
test
stos
mov
jns
in
repz
mov
cmc
fsubrl
faddl
sub
scas
cmpsb
mov
sub
imul
jnp
dec
bound
jo,pt
sub
cmp
lea
rorb
mov
sbb
cwtl
cmp
arpl
movsb
arpl
arpl
sahf
xor
jno
pop
loop
popf
dec
test
or
test
sbbb
cmp
and
leave
fimull
mov
mov
mov
xor
inc
jbe
jbe
dec
fistl
mov
cmp
pop
add
pop
xchg
mov
sub
push
sub
rclb
or
std
das
std
lahf
daa
data16
or
pop
icebp
mov
cmpb
and
inc
dec
sbb
arpl
jnp
sub
mov
mov
xchg
cld
int3
jp
ja
enter
jp
add
jnp
pop
ss
pop
je
push
ds
add
cwtl
divl
out
out
es
in
bound
lock
imul
movsl
jecxz
icebp
inc
decb
bound
or
loop
pop
xchg
mov
outsb
pop
cwtl
sub
mov
enter
xchg
imul
lods
jno
jmp
test
aam
sub
bswap
les
mov
js
aam
jne
sub
test
jg
push
pop
cmp
lea
adc
pusha
in
jne
jns
sti
dec
sbb
notl
pop
das
add
add
mov
sbb
mov
mov
popa
mov
cmp
adc
pop
xor
push
enter
daa
dec
pop
adc
or
dec
in
lds
ds
lahf
or
and
inc
es
imul
in
fistpl
dec
add
lock
test
into
dec
add
loopne
or
mov
or
scas
sub
xor
mull
fcomps
jle
jbe
xor
mov
mov
mov
pop
and
icebp
push
inc
xor
scas
bound
lcall
sbb
int3
cmp
cs
decl
jl
sbb
in
and
stos
add
shlb
in
dec
mov
xlat
push
stc
cli
jmp
es
xchg
clc
pop
out
ljmp
xor
lea
inc
jb
pop
xchg
ret
xor
dec
pusha
fisubrl
dec
call
add
or
mov
dec
aad
fsubs
cmp
sub
inc
dec
testb
sub
mov
xor
inc
loop
xchg
mov
adc
pop
cs
pop
es
mov
jne
xchg
sub
loop
fwait
add
sub
or
cmp
loope
sub
sbb
inc
fmuls
add
cmp
push
mov
scas
add
or
cmp
mov
or
push
push
or
xchg
push
pop
iret
jb
jno
bound
jno
int
push
adc
movsb
sti
ss
mov
rolb
sub
mov
int
enter
push
sub
sub
flds
add
repz
clc
cmpsl
jl
xor
mov
lods
xchg
pop
icebp
rolb
adc
sub
lcall
test
adc
das
mov
scas
push
adc
arpl
outsb
jo
xchg
test
xchg
repz
cs
push
xor
fidivl
dec
and
cmp
mov
adc
adc
stos
mov
adc
sti
or
or
jl
push
scas
addl
std
fiadds
cs
idivb
fists
mov
mov
lds
add
xchg
pop
mov
outsl
lea
fs
xchg
mov
jns
je
add
test
jo
testl
push
imul
cmp
mov
dec
leave
and
lods
sub
ja
or
lcall
and
xchg
stos
lret
push
mov
sub
inc
cmc
push
dec
fldenv
jmp
add
lods
adc
cli
mov
dec
lahf
cmp
xchg
mov
call
or
mov
out
inc
dec
das
cli
push
aas
inc
mov
mov
aaa
add
sbb
and
cmc
leave
xor
cmp
lods
stos
addr16
ss
cli
cmp
cmc
lods
je
jp
mov
mov
add
hlt
dec
mov
imul
cmpsl
mov
std
pusha
jmp
push
out
pop
jo
iret
sub
pop
rcrb
clc
outsl
lds
fldl
or
sete
in
add
int3
lret
fcom
popf
leave
pop
ret
faddl
push
or
adc
cmc
push
mov
xor
push
into
pop
sbb
fwait
dec
mov
iret
inc
xor
cli
test
mov
ds
adc
pop
sub
rcrb
pop
lds
xor
inc
mov
lods
lret
rclb
dec
icebp
stos
sub
and
or
xlat
inc
adc
sub
add
pmaddwd
xchg
lock
jbe
leave
and
lret
ficomps
mov
out
sub
nop
ss
cltd
roll
jo
cmp
stos
or
cmp
leave
pushf
inc
scas
pop
cld
mov
cmc
pop
icebp
jb
test
or
mov
xchg
or
ljmp
add
test
sahf
sbbb
mov
fbstp
testb
xchg
sbb
lcall
stc
fs
push
add
mov
jmp
jp
dec
fdivr
push
sub
xor
aad
iret
mov
pusha
subb
ret
add
ss
add
in
sub
fisttps
fs
ja
sbb
out
cmp
popa
aaa
ffreep
cmp
cmpb
push
add
fscale
and
sahf
es
pop
pop
fistpll
cmpsl
pop
mov
xor
test
xchg
dec
inc
adc
daa
cs
sub
aam
push
ljmp
adc
scas
repnz
popa
and
sahf
insl
inc
jb
mov
dec
sub
enter
mov
dec
popa
fmuls
idivl
popf
sarb
cmp
jno
add
dec
out
mov
ljmp
leave
xchg
pushf
leave
cmp
mov
xchg
andl
mov
cmp
ret
fsubrs
sbb
std
mov
or
jl
rcll
and
mov
xchg
xchg
cltd
in
sbb
add
cmp
shrb
lods
shll
inc
stos
push
stos
adc
or
pushf
cli
and
jmp
push
in
push
sub
xor
and
ret
in
jp
das
clc
mov
dec
imul
mov
mov
cmc
and
cmpl
xcrypt-cbc
cmpsl
test
jg
addr16
mov
daa
cmpsl
mov
dec
and
rcll
mov
adc
sbb
cltd
jmp
sbbl
int3
inc
adc
lahf
or
add
jb
nop
jb
outsl
xor
push
add
mov
jnp
lret
rcl
jmp
jns
daa
test
ret
test
mov
lds
aaa
mov
movntps
sti
daa
or
jo
or
xlat
cld
lahf
or
cli
jmp
loopne
movsb
pop
aad
dec
xlat
push
arpl
cmpsl
hlt
mov
pop
add
test
sbb
jns
jbe
lock
js
xchg
lret
push
jmp
sar
xor
jecxz
pop
mov
add
in
mov
add
or
inc
sub
sbb
cs
mov
ljmp
mov
or
in
xor
mov
xchg
mov
jp
jo
push
push
out
cmp
testb
add
lods
push
push
jbe
inc
addr16
popf
stos
cwtl
cmp
inc
call
inc
out
test
xor
jmp
fstp
pop
fnstenv
inc
jns
or
ja
add
and
and
sbb
jle
lcall
pop
xor
lcall
out
xchg
dec
mov
add
xchg
add
xor
mov
jo
rcrb
mov
or
pop
cmp
ds
dec
inc
or
mov
mov
je
jg
ret
jle
mov
jmp
jo
shl
xchg
inc
or
jg
xlat
movl
aas
jl
repnz
mov
jle
xor
sti
cmp
mov
jle
xlat
pop
rclb
dec
pop
mov
fwait
popl
add
int
test
imul
in
xor
out
mov
jle
sti
call
ror
dec
icebp
adc
add
fcompl
repnz
add
popa
adc
xchg
das
popf
and
and
adc
cmp
outsl
aad
popf
jle
mov
sub
inc
into
inc
jp
add
scas
or
pop
fmul
jbe
popf
dec
sbbl
shr
jns
xor
sti
orl
cmp
or
and
popa
out
ss
je
inc
xchg
loope
cmpsl
add
or
xchg
push
mov
in
loopne
test
xchg
ret
imul
idivb
mov
sbbl
mov
or
push
daa
in
xchg
inc
stos
icebp
test
subl
mov
push
push
int3
push
xor
and
mov
ficoms
xchg
jl
cmp
dec
mov
adc
jg
call
xchg
add
or
add
cmpsl
loopne
mov
jb,pn
in
xchg
or
xor
and
dec
insb
sbb
xor
inc
test
push
daa
popa
jle
inc
sbb
mov
out
sub
aaa
cmpl
scas
jge
dec
loop
icebp
xchg
adc
lcall
adc
in
cld
xor
and
push
or
inc
mov
mov
dec
add
loope
repz
scas
sub
push
xor
or
int
mov
in
xchg
insb
leave
xchg
mov
into
pop
jp
inc
mov
loop
fsubrs
hlt
and
sbbb
inc
scas
ja
out
cld
jns
pop
ja
mov
out
or
cmp
push
xor
das
popf
loop
push
jbe
loop
jp
adc
scas
roll
jo
insl
data16
add
push
sub
mov
jp
jge
incb
add
push
mov
int
lret
dec
out
add
filds
push
xchg
inc
lahf
mov
dec
pop
jmp
dec
sbb
inc
icebp
subl
jmp
shl
lcall
fmuls
mov
jecxz
jne
add
fs
mov
pop
js
lret
fadd
in
xor
inc
iret
xor
inc
loopne
pop
cld
gs
clc
imul
add
in
adc
lods
addr16
cmp
test
js
lret
ss
fdivrl
xchg
in
jp
mov
pop
xchg
fs
movsl
xor
testb
and
stos
push
add
outsl
out
ss
adc
jmp
movsb
xchg
sub
jae
fisubrl
sbb
cs
es
mov
mov
push
into
mov
test
jno
cwtl
aam
and
in
push
ret
inc
xor
xchg
sahf
dec
fcomps
pusha
das
mov
adc
shrb
mov
mov
int
repz
lret
mov
popa
sti
dec
lea
scas
push
or
jbe
push
lret
or
inc
imul
cmpsl
or
ret
lds
dec
xchg
lea
mov
cmp
scas
fs
ljmp
ficoms
lds
fwait
cmpsl
or
adc
mov
cmp
insl
and
pop
aad
push
loope
cli
inc
dec
loopew
mov
pop
mov
shrb
test
ror
jae
pop
and
sbbb
inc
rcll
push
mov
sbb
mov
inc
and
out
push
jns
mov
inc
jmp
pop
jae
dec
data16
imul
dec
cmp
adc
jl
inc
fildll
sbb
cli
daa
add
imul
jg
jl
jbe
jecxz
pop
push
xchg
mov
mov
test
add
jae
pop
lcall
fnstsw
rcl
jnp
aad
sub
test
adc
dec
stos
mov
cmp
push
testb
stc
add
popf
lret
mov
loop
test
mov
mov
jle
fildll
xchg
out
arpl
jae
pop
mov
jb
outsl
in
dec
imul
xor
mov
and
add
add
sbb
pop
arpl
xor
les
icebp
das
fildll
in
rclb
mov
push
and
sbb
mov
or
dec
mov
jle
cmp
pop
add
das
xchg
add
mov
cmp
xor
test
push
xchg
imul
jecxz
addl
dec
inc
out
ds
mov
xorb
mov
clc
dec
mov
setbe
movsl
shll
cli
in
sbb
jmp
mov
mov
mov
das
xchg
push
xchg
pop
aam
pop
imul
jg
jmp
mov
in
stos
pop
dec
gs
mov
cmp
fnstenv
insb
repz
push
dec
mov
decl
out
mov
cmp
jnp
jae
js
cmpb
xor
adc
mov
fsubl
test
call
lcall
arpl
inc
mov
outsl
pop
cmp
mov
jle
stos
sbb
dec
cli
mov
jbe
rol
mov
faddl
stos
addr16
mov
aam
in
iret
mov
and
sub
mov
inc
cvttps2pi
push
jg
mov
jmp
mov
lcall
add
mov
add
add
fbld
jmp
jmp
dec
std
test
in
stos
xor
lods
xchg
pusha
mov
pushf
or
testl
sbb
dec
mov
or
inc
divl
lret
aam
mov
cmpsb
inc
xchg
imul
dec
pop
andl
mov
loope
addr16
cli
adc
test
movsb
and
and
cltd
inc
xor
loope
loop
xchg
aas
dec
in
push
xor
jle
ficoms
mov
dec
cli
gs
sti
mov
cwtl
enter
push
movsb
fldl
mov
aaa
dec
int
aas
nop
cmp
gs
mov
dec
inc
jno
out
push
lds
pop
inc
pop
gs
jp
scas
nop
mov
mov
jecxz
sub
insb
lods
dec
and
cmpsl
lock
std
adc
or
mov
pop
clc
inc
or
bound
gs
push
cltd
mov
inc
sbb
and
mov
out
inc
scas
mov
sbb
adc
add
dec
inc
and
xchg
xor
or
inc
mov
jno
push
stos
sub
mov
push
test
std
or
dec
mov
jae
out
cmpsb
ret
aad
dec
mov
dec
mov
fldenv
dec
adc
push
jb
mov
jg
das
mov
inc
lds
faddl
mov
jb
sub
sbb
mov
test
mov
int3
mov
addr16
sub
adc
es
sahf
cld
mov
pop
in
fstpt
push
and
mov
mov
pop
pop
into
add
aas
sbb
call
aaa
mov
cmp
xor
push
repz
jo
or
inc
jmp
sbb
aam
and
add
cmc
sub
shr
ss
stos
lahf
arpl
push
cmpsl
inc
pop
add
xor
movb
hlt
cmp
dec
jae
das
out
cld
popf
insl
xchg
dec
jg
ss
lret
dec
out
xchg
ret
fstp
paddusb
and
mov
xor
stos
imul
mov
sub
sti
dec
sub
addr16
test
sub
lahf
sbb
out
js
xchg
std
lret
add
sbbb
shrb
mov
movsl
pop
adc
js
or
cltd
push
sti
lds
into
bound
add
rcrb
daa
ja
cmp
mov
fadds
and
cmp
mov
call
push
inc
pop
sub
shl
and
dec
fldcw
jmp
or
xchg
pop
mov
ja
mov
jb
lds
das
sbb
popa
inc
mov
xchg
mov
in
repnz
ret
and
fcoms
nop
pop
mov
mov
mov
js
mov
sbb
mov
inc
subb
subl
pop
dec
add
mov
std
sbb
lret
jno
dec
stc
mov
xlat
ljmp
inc
dec
mov
mov
cmpsl
sbb
xor
inc
repnz
jns
notl
add
psadbw
mov
xchg
cmp
cmpsl
nop
adc
ja
push
outsb
pop
aad
aad
adc
out
xchg
inc
in
mov
xchg
dec
adc
sub
shrl
inc
aad
jae
push
push
aad
jb
mov
dec
mov
push
in
jno
test
push
push
lahf
loop
cltd
and
push
loop
stos
jmp
scas
pushf
dec
pusha
dec
mov
pushf
rolb
gs
adc
mov
dec
mov
jge
sahf
les
xchg
test
cld
stos
jge
xlat
dec
jg
and
cmp
or
lcall
xor
xchg
mov
out
dec
jl
xor
fldt
cmpsl
xchg
fisttps
in
inc
sub
fdivl
les
lret
jns
stos
in
lahf
push
push
data16
fnstenv
jne
push
sub
inc
or
cmp
cli
xlat
mov
mov
cmc
pushf
inc
pop
pop
pop
cmp
andl
xchg
xor
add
daa
loopne
inc
sti
push
adc
inc
cltd
ss
sub
subb
movsl
add
pop
sub
mov
test
sahf
cmp
or
sbb
jne
inc
sbb
inc
test
fnstcw
jmp
inc
cmpsl
cmpsl
add
stc
cmpb
pop
xchg
or
mov
and
mov
les
inc
fwait
not
jmp
inc
pop
or
dec
movsb
pop
mov
jno
in
testb
or
std
cwtl
jae
and
inc
into
faddl
mov
shll
jb
movsl
out
mov
es
push
dec
push
pushf
bound
xlat
lds
ja
popf
fwait
stos
push
mov
sbb
ljmp
push
jae
loope
mov
std
hlt
xchg
mov
add
dec
or
cmp
js
cmp
mov
mov
ficompl
dec
sub
inc
loop
mov
pop
aam
repz
dec
xchg
adc
loope
push
adc
in
or
pop
mov
ffree
bound
xchg
mov
repz
mov
cmp
imul
sbb
cmp
mov
iret
jle
scas
mov
nopl
and
popa
fimuls
adc
inc
jg
idiv
lahf
xorl
loope
push
mov
call
mov
and
fs
inc
sub
insb
into
sub
fdivrl
int3
aad
fs
push
xchg
ficoml
cmp
inc
xchg
jl
jo
xor
loope
pop
jg
dec
pop
inc
mov
dec
dec
cmpsb
jne
jo
fyl2x
sub
jmp
xchg
mov
daa
out
mov
jmp
and
out
in
icebp
sub
lds
cmp
cmpsb
pop
daa
adc
jae
cmc
test
insl
in
sub
push
pop
mov
popf
gs
int
xlat
jns
out
jno
xor
inc
xchg
fistl
mov
mov
mov
test
jnp
push
adc
das
xor
sbb
popa
hlt
sbb
or
mov
push
and
or
out
negb
push
push
fdivrp
hlt
ret
scas
shlb
rclb
add
dec
aad
pop
mov
int
xor
push
jo
outsb
insb
cli
popf
jnp
or
inc
and
sub
sub
sti
test
enter
jns
in
xchg
fnstcw
push
cmc
lret
cmc
push
mov
adc
in
iret
xor
cmp
and
jecxz
pushl
test
hlt
pop
loope
pop
cmc
iret
cltd
or
mov
mov
scas
xor
nop
add
mov
mov
push
outsl
mov
lret
insb
sub
popf
dec
mov
clc
cs
dec
jl
jnp
inc
mov
cmp
lods
jl
daa
cmp
or
pop
test
pop
lea
xchg
in
pop
mov
sbb
sar
ja
pusha
scas
dec
mov
idivl
pop
lds
stos
adc
sahf
movsb
rorl
std
add
test
jmp
mov
mov
test
mov
repnz
test
sarb
outsb
lret
cmp
pop
push
xchg
xor
je
cwtl
dec
and
mov
mov
jmp
sahf
mov
dec
xchg
xchg
mov
sbb
pusha
aad
fsts
push
int
insb
cld
push
sub
xorb
push
iret
and
aas
adc
arpl
sub
pop
icebp
stos
jne
pusha
and
xchg
movsl
insl
negl
sub
sbbl
into
mov
pop
xchg
jo
movsb
inc
aaa
je
mov
and
xchg
lret
cwtl
mov
mov
shlb
mov
inc
roll
mov
push
mov
lds
ret
or
insl
mov
outsl
pop
fimuls
jb
cmp
out
pushf
sub
jns
sub
icebp
pop
test
cmp
ffreep
add
push
xor
mov
dec
inc
inc
sbb
lahf
dec
jle
es
xor
rol
in
leave
cmp
idivl
lods
sarl
loopne
pop
mov
jnp
sbb
dec
jae
pop
popf
cmp
je
cmp
or
test
adc
cmpl
pop
test
push
inc
xor
adc
sub
in
cmpsl
ds
sbb
ds
mov
mov
out
xor
push
dec
stos
ret
dec
add
sbb
jmp
movsb
inc
dec
daa
dec
iret
imul
sub
sbb
ds
add
sbb
xchg
xor
and
shr
xor
pop
push
stos
or
movsl
sarb
sbb
mov
insb
loopne
enter
lret
sub
sbb
mov
cld
scas
hlt
je
xchg
loope
fimuls
stos
lea
dec
lahf
bound
cmp
fnstcw
inc
cmp
mov
jne
icebp
and
push
scas
push
popf
addr16
jl
inc
push
test
fsts
or
imul
push
nop
jmp
mov
push
aad
pop
sub
mov
cli
mov
icebp
lahf
popf
mov
imul
lahf
xor
add
pop
cmp
fucom
enter
or
dec
cmp
push
or
lret
xlat
inc
fstpl
xchg
mov
add
enter
test
jg
arpl
gs
cli
pop
in
pop
dec
jne
out
adc
pushl
popf
adc
outsb
into
sbb
loopne
mov
push
subb
cmp
in
or
das
sub
cmp
sub
dec
push
add
cmpl
ja
shll
sbb
outsb
xchg
pop
nop
inc
xchg
adc
mov
sti
int
jge
adc
ja
push
imul
test
mov
scas
dec
fdivr
cmpl
daa
add
in
sbb
and
cmpsl
adc
or
pop
mov
lahf
inc
sti
cld
popf
add
sbb
xor
jbe
rorb
ret
pop
pop
lea
test
lock
cli
jno
ret
lea
mov
or
repnz
mov
push
cmpb
test
out
dec
sbb
rcrb
cwtl
sarb
addr16
inc
push
push
dec
fdiv
out
jb
cmp
push
cld
ret
aaa
int
mov
or
xchg
or
add
xchg
jmp
ret
iret
dec
or
idivb
xchg
mov
aam
fs
sub
mov
add
push
jno
rorl
jns
lret
and
add
mov
int3
pop
mov
jae
in
mov
in
test
decb
mov
in
xchg
cwtl
inc
test
jecxz
sarl
cmp
aam
daa
dec
popf
in
jno
pop
fisubrs
test
jle
and
jne
or
inc
test
sbb
aam
or
mov
jne,pt
adc
push
xchg
fildl
add
sub
xor
repnz
cli
js
cmp
push
mov
jns
std
mov
test
js
mov
jb
stos
daa
adc
push
xorl
hlt
dec
arpl
stc
sti
and
das
shrd
xor
lcall
js
icebp
cwtl
bound
push
jle
nop
pop
sarb
push
push
mov
addr16
sbb
push
aad
arpl
jge,pt
mov
aam
xor
inc
outsl
or
jbe
clc
mov
jno
outsl
xorl
test
lea
cmc
inc
pop
sub
adc
gs
jbe
jp
xor
icebp
andl
jae
mov
add
repz
dec
mov
and
mov
lods
xor
test
xchg
aad
dec
xchg
push
mul
mov
adc
aaa
imul
add
add
ds
mov
xchg
adc
adc
hlt
or
daa
iret
cmpsb
jae
push
jne
jns
stos
mov
sub
lods
pop
rorb
sbb
push
jge
cmc
ss
cld
push
enter
dec
cwtl
sub
mov
push
cltd
sbb
or
daa
mov
add
xor
fwait
and
lcall
mov
dec
lods
pop
imul
xlat
xchg
add
andb
scas
jp
shrl
xor
test
aam
out
inc
pop
xor
xor
fnstsw
enter
test
int3
mov
mov
mov
test
push
inc
or
jbe
cmp
sub
outsb
andb
fld
add
in
pop
xor
in
xor
and
xlat
mov
je
jmp
push
adc
mov
in
mov
adc
jg
out
sub
sbb
mov
mov
enter
addb
or
mov
mov
pop
inc
shll
fwait
xchg
ficompl
ret
pusha
pusha
mov
push
loope
add
repnz
mull
gs
push
push
je
cs
mov
and
push
loope
pushl
pop
push
jns
sbb
jae
repz
ss
mov
out
cmp
scas
popa
pop
xchg
inc
add
scas
shrb
add
mov
jl
cltd
xchg
inc
imul
or
sub
cwtl
or
jb
jp
stos
jge
rcrb
aas
sbb
les
dec
in
xor
and
add
cmpb
mov
cmpsl
lret
pop
or
inc
ja
cli
pushf
nop
fnsave
fcoml
rcrb
xchg
sub
jo
xchg
pop
push
ret
mov
inc
test
sub
sbb
and
repnz
xor
cs
negb
out
pop
shlb
jp
arpl
sbb
pop
int3
adc
popl
adc
jg
fstpt
adc
and
in
mov
enter
aam
pop
sbb
stc
dec
mov
push
sub
aas
pop
xor
add
shll
fcoms
ficomps
insl
es
cmp
mov
push
xor
jae
rcr
dec
jbe
in
les
inc
pop
dec
jecxz
mov
fnsave
data16
movsl
cs
int
scas
movsb
sub
adcb
aas
push
decb
dec
ret
iret
gs
xchg
arpl
jbe
lds
jge
mov
fsubrl
hlt
shll
jae
push
inc
jo
mov
push
out
xorb
push
mov
lahf
adc
dec
xchg
cmpsl
xchg
pop
sbb
pusha
lds
testb
inc
pop
sbb
ret
out
ss
shrl
xor
or
lea
aas
daa
inc
fnstcw
pusha
push
hlt
daa
mov
mov
mov
int3
mov
mov
fisubrl
mov
inc
scas
bound
mov
sahf
add
push
jne
popf
fs
pop
push
sub
cmp
lds
fiaddl
dec
into
or
mov
xchg
pop
xorl
jge
in
ret
rclb
jae
inc
push
nop
or
in
stos
into
aad
dec
jns
or
inc
sbb
imul
mov
dec
adc
and
jno
dec
mov
adc
push
aam
inc
push
mov
inc
pop
out
xorl
dec
cmp
test
push
push
push
scas
flds
ljmp
call
fistpl
icebp
int
push
inc
call
pushf
rolb
mov
inc
xor
sbb
inc
scas
and
cltd
adc
or
lahf
ja
inc
xchg
and
sti
mov
mov
div
pusha
jecxz
mov
out
iret
sbb
sbb
popf
sbb
subb
jae
lret
jle
push
jecxz
sbbl
sub
arpl
jbe
push
lea
push
inc
int3
sbb
and
fidivrl
adc
mov
js
cmp
and
inc
out
and
and
fsubrl
cmp
pop
movsl
lds
stc
popa
add
out
or
cmpsl
repz
shrb
mov
inc
out
sbb
daa
push
add
mov
or
mov
xor
pusha
adc
fdivrs
imull
ljmp
leave
les
pop
pop
add
jge
int3
neg
lds
xchg
sub
movsl
cmp
and
hlt
in
and
cmp
jp
das
sbb
jge
int
add
repz
imull
mov
lds
cmpsl
outsl
sbb
mov
and
shl
inc
stc
push
add
cmc
pop
jns
lcall
and
jb
jmp
cld
mov
inc
xchg
push
ljmp
push
push
fldl
icebp
divl
xor
pop
popf
and
test
mov
and
jp
ljmp
lods
xchg
rcr
lea
sbb
sahf
lret
push
adc
outsl
jle
jns
icebp
clc
cmp
idivb
es
jge
mov
pop
stc
add
push
adc
mov
add
mov
xor
int
shlb
lea
es
leave
push
out
add
test
insl
fbstp
add
mov
sub
aaa
xor
jno
scas
xlat
push
jp
pop
adc
mov
jns
cwtl
sub
rorl
and
stos
sub
lea
in
lods
pop
jecxz
test
mov
movsl
rorl
pop
pop
arpl
and
adcb
mov
imul
stos
adc
xchg
jge
ret
outsl
mov
cld
or
imull
incb
std
dec
sbb
scas
rorl
pop
inc
jge
lds
jne
rolb
in
sub
out
push
xchg
sbb
inc
inc
rorb
stos
jmp
sub
rcl
imul
cwtl
mov
loopne
in
dec
std
jle
jecxz
test
cld
daa
push
push
sarl
push
push
or
mov
lock
rcl
pop
testb
sahf
cli
sbb
mov
adc
ss
out
roll
add
push
dec
mov
test
push
lods
adc
cld
push
daa
xor
xchg
add
loopne
mov
dec
popa
pop
fwait
xchg
pop
rcl
inc
push
add
out
mov
fcomi
popa
in
icebp
adc
iret
cli
cltd
stc
jbe
cwtl
dec
cli
mov
out
mov
dec
mov
jle
out
inc
addr16
lcall
mov
push
jecxz
jge
fbld
clc
mov
fdivl
inc
mov
mov
jl
mov
ret
inc
scas
lahf
ja
lcall
inc
lret
jae
or
ss
push
or
arpl
add
pop
cmpl
bound
daa
cmp
push
xor
jmp
inc
mov
mov
inc
shl
and
or
imul
xchg
fisubl
repnz
xorb
mov
inc
jo
lret
cmp
add
push
lret
cmp
mulb
mul
lret
dec
and
dec
mov
aam
aam
push
sbb
xchg
mov
jbe
lods
rcrl
inc
inc
movsb
testb
out
aad
sti
aas
movsl
mov
mov
and
mov
outsl
dec
lret
daa
push
mov
jo
xor
adc
pusha
and
enter
sbb
mov
daa
adcl
add
push
adc
pop
inc
loope
aaa
mov
jge
ret
repz
xchg
jge
push
adc
mov
imul
xchg
test
mov
jge
adc
mov
xlat
mov
psllw
nop
jb
adc
lahf
jne
inc
ret
dec
lret
clc
incl
lret
faddl
mov
int3
push
jecxz
dec
divb
sbb
clc
rolb
stc
xchg
stos
fwait
xchg
dec
add
cmp
lret
ds
cmp
xchg
pop
cmp
sbb
repz
or
push
xchg
mov
sbb
push
popf
fiaddl
mov
mov
push
ret
incb
or
pop
ss
pop
jno
sub
or
ret
pop
nop
adc
cmp
pusha
int
jne
sub
orl
mov
ljmp
jno
cltd
adc
sub
ds
repnz
adc
sub
movsb
dec
clc
mov
dec
sbb
and
stc
push
mov
mov
inc
ljmp
mov
icebp
jno
sub
mov
mov
icebp
je
dec
mov
test
outsb
fdivrl
dec
fwait
or
or
sbb
xor
adc
pop
lahf
aad
sbb
popf
imul
push
jecxz
scas
and
lret
push
dec
xor
pop
jbe
mov
xchg
sub
jbe
lcall
out
andb
mov
xchg
out
ret
leave
and
outsb
inc
aad
in
sbb
bound
cld
dec
cli
jp
dec
sbb
lods
jmp
fwait
ret
mov
cmpsb
sbb
adc
mov
sbb
or
jmp
insl
sbb
fwait
xchg
ja
pop
push
nop
mov
xlat
and
sbb
mov
mov
jge,pt
fwait
ret
jae
movsl
das
cwtl
dec
mov
and
sbb
mov
call
clc
outsb
xchg
pop
cmp
in
xor
push
and
xorb
aam
scas
pop
pop
inc
movsb
pop
jge
enter
pop
imul
and
cltd
push
add
es
jb
mov
push
inc
es
arpl
mov
adcb
mov
or
callw
jns
sti
pop
fnstsw
and
push
ja
std
and
shll
test
ret
pushf
ds
je
fidivrs
mulb
test
popf
fldl
test
sbb
mov
jae
jmp
sbb
sbb
cltd
jno
int
lret
jne
dec
xchg
cmp
rcll
das
pop
sbb
xlat
cmp
ss
push
push
mov
testl
stos
aaa
mov
sub
je
lret
movsb
shlb
clc
jnp
pop
nop
loope
inc
and
mov
sub
jecxz
enter
dec
clc
jmp
fimull
aas
jmp
mov
shlb
adc
loop
mov
popa
cli
jnp
xchg
mov
movsl
hlt
out
push
jo
cmp
push
addr16
add
negb
jo
lods
mov
jae
mov
jmp
dec
loop
push
jae
stc
lods
iret
bound
xor
mov
leave
lods
cmpsb
lock
fxch
arpl
andb
dec
push
es
mov
inc
in
cmp
fsubrs
sahf
ljmp
mov
test
int
in
adc
stos
xor
ret
push
pop
cmp
arpl
jnp
mov
pop
ftst
and
jmp
ficompl
rorb
fs
ja
popf
dec
mov
sbb
lahf
and
enter
std
pusha
inc
fwait
stos
cltd
xchg
popa
xor
lcall
stos
fldl
call
insb
scas
xor
sub
xchg
dec
mov
cmp
out
hlt
sahf
test
mov
addr16
sarl
mov
data16
cli
repnz
cmp
xor
push
lods
call
sbb
xchg
adc
mov
cmp
repz
aaa
mov
ja
and
cld
adc
xor
xor
xchg
and
push
xor
daa
mov
std
testb
inc
jo
mov
shrb
inc
sbb
test
and
or
add
mov
out
xchg
and
push
loope
es
and
insb
cwtl
xchg
adc
adc
mov
stc
pop
stos
fidivrs
frstor
jae
inc
or
das
rclb
xor
pop
lds
jns
add
sub
fidivl
dec
add
lods
push
jmp
mov
outsl
aad
mov
rclb
mov
out
and
imul
xchg
in
sbb
dec
ds
loopne
mov
aaa
mov
pop
sbb
leave
push
mov
mov
sbb
gs
mov
outsl
sti
fists
cmc
imul
lret
pushf
icebp
das
clc
jne
mov
out
push
sti
push
add
push
lret
push
mov
pop
jle
adc
stos
sub
sbb
andb
inc
or
jl
xchg
aam
dec
ljmp
inc
mov
fistpl
xor
dec
test
add
inc
fs
fdivrl
xchg
aas
and
in
or
push
mov
out
and
add
jge
push
mov
jb
or
scas
jle
sub
dec
insl
divl
fstpl
add
jns
sub
aad
lret
repz
and
ret
jne
cmp
into
loopne
mov
xorl
mov
ss
xchg
data16
and
mov
jno
push
push
pop
or
xor
rol
push
adc
push
andl
es
xchg
flds
fisubrl
mov
pop
sbb
iret
mov
xor
lahf
fidivs
add
jo
and
lods
insl
pop
jae
ljmp
aaa
and
mulb
xor
idiv
in
mov
rcrb
loope
daa
lret
pop
sub
inc
fwait
mov
jns
xor
loop
in
pop
mov
aam
add
mov
lahf
xchg
cmp
fsub
cmp
mov
pop
movsl
jl
xchg
push
mov
testb
gs
mov
mov
mov
enter
sub
pop
adc
in
mov
mov
pop
jl
mov
enter
dec
lds
pop
pop
testb
and
stos
lds
sbb
and
jo
mov
cli
shll
loop
pop
jle
mov
add
dec
out
sub
lds
outsl
xor
add
pop
stos
pop
add
stc
jl
adc
les
adc
das
lret
add
push
bound
cmpb
ss
fdivrp
push
roll
outsl
fs
loope
test
fs
outsb
rclb
xor
gs
dec
xor
add
push
xchg
addl
jbe
or
adc
test
pop
lds
out
das
out
inc
data16
std
pop
sub
in
push
lahf
jae
cmpsl
push
jle
popa
xchg
aad
dec
out
dec
divb
or
push
jb
pop
data16
sub
divl
test
popf
push
or
call
sub
shrl
jp
adc
mov
mov
iret
decl
icebp
jge
xorl
mul
cmp
mov
push
scas
fs
cmp
cmp
mov
pop
mov
scas
fwait
xor
jge
insb
or
fsubs
out
pop
movsl
fcmovu
ret
jnp
insb
xchg
test
outsb
cmovne
test
in
arpl
sbb
mov
or
inc
xlat
inc
or
and
dec
shll
or
stos
ficoms
add
add
push
cmp
xchg
adc
fmuls
int
or
gs
or
repz
mov
js
fistps
in
inc
in
jecxz
xchg
xor
outsb
inc
pop
loope
push
ret
sbb
subl
ret
fcompl
or
sub
out
out
insb
out
stc
test
xlat
movl
mov
adc
outsl
push
jbe
call
mov
pop
sbb
add
testl
sti
lds
cli
jnp
jnp
jnp
arpl
adc
dec
pop
mov
mov
mov
test
cld
cmc
jg
mov
inc
pop
mov
mov
loope
pop
ja
jmp
lock
mov
std
inc
sub
xchg
mov
and
enter
lea
aas
push
cmp
sbb
loop
cmp
loopne
shlb
jmp
add
dec
pop
xor
sbb
cmp
lock
adc
jp
pop
test
es
pop
repz
shll
es
push
lods
stos
jmp
loop
push
aam
pushf
push
dec
mov
xchg
sbb
sbb
cmpsb
scas
cmc
push
outsl
jge
shl
out
pop
or
dec
and
push
lods
xor
loope
into
mov
enter
mov
insl
call
cltd
shr
jnp
xchg
add
pop
add
les
insl
stos
repnz
mov
dec
je
fildll
popa
outsl
fistpll
bound
sahf
divb
adc
push
movsb
and
fcmovne
pusha
inc
jne
dec
pop
add
data16
div
bndstx
cmp
stos
xor
loope
fdivr
inc
jp
lock
lcall
xchg
jp
mov
pushf
xor
mov
cmp
scas
dec
or
cwtl
mov
fs
mov
inc
lea
movsl
or
pop
jg
repz
loopne
bound
mov
movsb
gs
test
sahf
xor
inc
out
xlat
fldl
mov
push
aad
inc
sahf
lahf
xor
aas
lret
xor
sub
mov
add
push
divl
ja
adc
push
mov
mov
shlb
lock
lcall
out
cmp
lds
stos
stos
scas
add
sbb
or
cwtl
sbb
push
out
and
jno,pt
pop
inc
pusha
mov
jnp
pop
jl
xchg
push
push
jno
jl
inc
sub
fisttps
xchg
xchg
arpl
xchg
movsb
sarl
mov
and
insl
mov
dec
sub
outsl
sub
or
fiadds
pop
jmp
and
or
mov
jmp
lahf
jge
add
int3
sbb
dec
mov
ret
jmp
insl
pop
xchg
clc
imul
mov
dec
or
adc
xchg
sbb
sbb
idivb
push
lcall
mov
addr16
movsl
int3
aaa
add
fwait
out
lcall
enter
pop
out
jb
mov
sbb
rorl
pop
cs
adc
adc
mov
je
lahf
loope
mov
pop
or
inc
imul
cmp
xchg
or
push
fwait
xchg
cmp
push
call
mov
jno
mov
adc
lods
js
ret
aas
pop
sub
sbb
cmp
push
mov
in
mov
sub
popa
aas
sti
adc
sub
dec
xchg
jne
adc
jp
pop
idivl
leave
adc
mov
mov
test
andb
jl
orb
jge
je
jae
add
pop
dec
jb
call
mov
pop
pop
cmp
push
push
mov
adc
in
jne
xor
push
cmp
mov
jmp
repz
dec
jne
ret
push
test
xchg
adc
pop
pop
lret
outsl
insb
xchg
push
sub
xor
adc
arpl
aaa
lcall
rorb
sbb
into
mov
xchg
hlt
mov
ja
inc
lret
inc
fistpl
push
sub
mov
mov
xchg
lret
pusha
insl
hlt
rcr
cs
fisttpl
push
jo
test
cld
cmp
add
out
pop
insb
outsb
clc
mov
cs
popl
mov
loopne
mov
int3
int
sub
fistpll
mov
add
pop
or
sbb
lcall
and
xchg
adc
iret
pop
jo
dec
or
stos
rclb
and
repz
rcll
pop
arpl
adc
xchg
out
sahf
mov
out
das
cmp
lea
in
adc
xchg
out
push
into
adc
sbb
popa
dec
into
fidivs
add
scas
mov
int3
mov
xlat
ret
jl
setg
pop
rcl
ret
xchg
or
push
fldl
in
insb
nop
adc
pop
jge
jo
mov
or
cmpb
push
int
ljmp
pop
pop
out
out
pusha
cmp
andb
cld
scas
sbbl
xchg
test
stc
xor
fidivrs
cli
add
sub
mov
push
push
loop
dec
data16
push
jp
adc
mov
mov
dec
adc
and
push
sub
push
stos
fcom
adc
mov
arpl
nop
mov
ja
or
cltd
test
push
ret
fwait
add
jb
dec
xchg
jbe
sarl
xor
lock
leave
push
xchg
mov
xor
xor
dec
mov
pop
cltd
inc
cmc
jb
push
jbe
jl
mov
mov
dec
cmp
das
sbb
jbe
and
aad
mov
cmc
imul
fldt
or
sub
lods
mov
sbb
cs
mov
int3
ljmp
jno
neg
movsb
mov
enter
mov
mov
push
insb
lock
inc
fwait
scas
dec
ret
sbb
lds
insb
cmp
pop
mov
mov
xchg
jl
jl
int3
pop
addr16
xor
sbb
cld
adc
and
mov
mov
mov
cmpsl
fsin
fldcw
mov
sub
adc
pop
fstpt
jnp
mov
sub
mov
fcoml
mov
je
sbb
cmc
adc
jae
cmp
adc
loopne
or
and
dec
lret
cmpsb
or
push
sub
int3
sbb
sbb
addb
sarb
push
jmp
data16
je
fldl
mov
sub
mov
and
shll
xchg
das
loop
ja
mov
mov
or
dec
add
mov
inc
sbb
dec
jb
pop
cmp
fstpl
sub
sub
sti
cmc
sbb
push
pusha
add
pop
mov
fcoml
call
div
insl
call
push
mov
sub
inc
inc
mov
popf
call
imul
add
movsl
fcmove
cld
add
fbld
xchg
arpl
xchg
inc
repnz
fsubl
scas
pop
aaa
lea
and
mov
sub
sub
pop
adc
push
add
mov
icebp
or
cmpsl
sar
data16
js
ret
mov
mov
or
add
shlb
cvtdq2ps
cmp
xor
mov
sub
mov
inc
adc
shrd
pop
lahf
mov
push
ror
pop
scas
xchg
add
sbb
pop
shlb
push
xchg
jg
in
pop
inc
sbb
lahf
popf
rcrb
daa
sub
imul
push
xor
xor
aam
mov
js
outsl
pop
movsb
or
mov
xlat
jae
push
adc
mov
jge
movl
lret
fisttpll
xor
jle
out
sbb
mov
nop
inc
push
or
push
sub
or
cli
dec
dec
ret
adc
js
xor
xchg
out
int
sar
fistps
jno
out
scas
shlb
dec
dec
mov
in
mov
movsb
imul
and
les
add
sub
mov
xchg
sub
xchg
stos
lods
mov
mov
xor
dec
add
mov
out
sub
sbb
mov
xchg
add
pop
sbb
adc
adc
inc
lret
out
testb
mov
pop
mov
xor
mov
aaa
mov
adc
ret
ljmp
loop
sub
sbb
push
testb
fmul
mov
movsb
out
cld
js
add
xor
cmp
icebp
adc
dec
pop
dec
sub
pop
daa
imul
mov
xchg
notb
mov
mov
dec
inc
pop
cmpb
hlt
leave
fbld
pop
std
cmpsl
arpl
ljmp
mov
pop
stc
mov
and
pop
in
stc
call
and
push
pop
lds
testb
in
leave
nop
add
popa
ss
loop
push
inc
pop
inc
push
subl
ds
fs
in
push
cmpsb
inc
xor
cmp
scas
jno
mov
jp
ret
lcall
xor
movsl
inc
sub
test
stos
mov
in
or
daa
fisubrl
push
rorl
add
inc
mov
aad
jb
lea
testl
addr16
dec
faddl
scas
xlat
mov
dec
cmpsl
mov
jo
ds
or
cmpsl
ja
ror
or
or
push
js
out
ljmp
jae
add
aad
push
dec
stos
es
sbbl
loop
clc
out
dec
sbbl
sbb
cmp
mov
xchg
and
aas
cmpsb
pop
test
push
cmp
mov
push
and
mov
jbe
rcrb
dec
mov
push
stos
daa
ret
or
cmp
ficoms
loop
cltd
cmp
fwait
mov
mov
pop
mov
shll
push
sbb
scas
fidivl
dec
fucomip
xchg
jnp
arpl
clc
js
aaa
out
daa
test
add
jp
jno
add
and
scas
pop
cmp
inc
in
cmp
sahf
or
jns
push
pop
ljmp
js
js
cltd
adc
jns
das
lods
ljmp
dec
sbbb
aas
dec
mov
or
repnz
cmp
pop
push
movsl
sbb
sub
fidivrl
add
xchg
inc
out
mov
pop
pop
add
mov
hlt
mov
push
cmp
scas
sub
mov
imul
cmpsl
jbe
out
dec
ret
xchg
push
int3
mov
scas
and
cwtl
pushf
cmp
sahf
cld
in
mov
push
ljmp
jl
cmp
inc
and
es
inc
ret
pop
cmp
push
add
cltd
jo
dec
pop
inc
inc
test
xchg
mov
imul
fcomps
cmpb
sub
out
pop
dec
cmp
in
stos
xchg
or
jbe
pop
outsb
mov
clc
mov
jecxz
push
sbb
sub
stos
add
dec
sbb
pop
fidivs
mov
stos
rcrb
pop
or
add
roll
fisttps
mov
and
ror
je
pop
mov
xor
lret
mov
test
pushf
mov
into
shl
jns
jg
xlat
popl
sub
inc
xchg
pop
int3
out
inc
sbb
push
cmpsb
or
int
fbstp
pop
sub
das
sub
dec
and
mov
lahf
pop
cmp
dec
lea
pop
and
jo
cltd
mov
add
pushl
scas
dec
rol
push
add
push
int
aas
test
lods
jge
mov
pop
pop
out
adc
xchg
repz
ret
push
decb
shlb
dec
inc
lock
or
xchg
cltd
lret
mov
xchg
push
or
sbb
cwtl
test
scas
fldlg2
cmp
jmp
mov
mov
jp
fsubp
pushf
inc
ret
movsb
mov
inc
rcrl
mov
or
and
inc
mulb
push
sub
stc
enter
sub
into
mov
sti
lahf
call
pushf
pop
daa
mov
scas
mov
inc
mov
mov
outsb
push
bound
mov
adc
cmc
arpl
sub
aad
jmp
inc
inc
clc
cltd
sbb
ret
cld
jnp
jns
cmpsb
test
cmp
lods
dec
int
pop
enter
xorb
data16
push
addr16
hlt
push
ds
inc
jp
cmp
xor
sbb
and
mov
lcall
xchg
rorl
xchg
rol
ret
stos
fisubrs
add
jbe
pop
xlat
fcomp
pusha
mov
out
mov
mov
addr16
or
adcb
mov
xchg
pop
mov
jl
fisttpll
jnp
andb
test
inc
pop
and
pop
push
js
push
fistps
aaa
bound
sub
push
inc
in
jmp
scas
dec
lock
dec
imul
test
test
or
dec
sbb
push
lret
xchg
aam
mov
xchg
in
mov
shlb
sbb
xlat
cmp
sub
sub
fimuls
pop
js
push
push
xchg
out
dec
fwait
sbb
lret
push
mov
add
addr16
ja
mov
divl
dec
mov
mov
or
ss
xchg
aam
test
in
pop
iret
shrb
pop
cmc
xchg
inc
mov
js
and
adc
mov
test
cmp
inc
and
jnp
das
test
cmp
fistpl
cmpl
pop
popf
sub
inc
add
pop
iret
mov
xlat
mov
and
nop
mov
mov
jnp
aaa
test
sub
scas
sub
xlat
cmp
pop
sahf
sbb
jg
sbb
mov
test
sbb
int
je
dec
lcall
popf
xchg
lods
imul
fwait
lock
dec
dec
sbb
stos
gs
mov
fisubrl
in
ucomiss
add
in
or
mov
mov
jnp
int3
cmpsb
or
xchg
pop
xchg
shlb
cli
shrl
adc
sub
test
rcr
popf
add
pop
arpl
push
pop
call
jge
bound
or
lret
test
sub
add
cmp
lret
push
inc
inc
cmpsl
push
adc
jno
lcall
pushf
test
das
clc
mov
mov
jg
out
pop
xor
repnz
pop
movsb
pop
lret
aaa
ljmp
inc
adc
or
fnsave
movq
push
inc
sub
cwtl
push
sbbl
cmp
xor
in
pop
sbb
jnp
daa
pop
sub
lret
sub
add
movsl
pop
dec
pop
mov
push
pop
idiv
ss
mov
repnz
fildll
xor
daa
aaa
mov
xchg
sub
test
shl
inc
sarb
push
xor
mov
test
mov
out
adc
jle
lahf
test
xor
daa
push
ret
je
push
out
addb
aaa
shlb
fldcw
and
int
mov
xchg
pop
fstpt
es
push
iret
rcl
xor
add
mov
or
dec
shlb
push
popf
xchg
cmp
lea
push
mov
sbb
dec
pop
lahf
lea
ret
sbb
int3
int
jp
or
xchg
pop
pop
stc
or
sub
jno
fsub
insl
pop
dec
pop
mov
call
mov
sub
push
insl
in
mov
push
push
stos
je
pop
sbb
aaa
xchg
cmpsb
lds
sbbl
cmp
mov
mov
ja
inc
repz
bound
push
or
add
mov
sahf
push
rclb
out
mov
push
orb
sbb
cmpsl
out
insl
popf
aas
cmpsb
sti
cli
jmp
nop
movsb
push
xor
sub
sbb
jae
push
daa
fdivrs
mov
add
mov
inc
cltd
call
adc
jge
inc
outsl
in
pop
dec
dec
sbb
repz
repnz
adc
and
cmc
stc
mov
xor
or
lods
cld
lods
cld
lret
lock
imul
xor
mov
je
cmp
stos
leave
pop
mov
xchg
les
sarl
fcomps
cmp
jmp
adc
jle
jb
les
add
xchg
push
ret
int
movsl
loop
jne
and
jno
in
sub
mov
mov
xlat
dec
sbb
js
stos
push
stos
mov
divb
repz
mov
test
push
push
outsl
add
ret
mov
add
add
outsl
dec
and
xchg
in
push
pop
test
cmp
test
jg
in
imul
or
mov
pop
add
cmpsl
and
dec
sub
and
out
fdivl
push
push
or
in
iret
dec
mov
test
mov
push
data16
mov
push
aaa
pop
xchg
push
jle
pop
or
scas
sbb
dec
cmp
neg
and
sub
shlb
xor
mov
and
xchg
push
pop
add
std
repz
out
dec
rcr
push
sub
out
sarl
fwait
popf
adc
pusha
dec
and
adc
fmull
aam
mov
cmp
xchg
fsubl
pop
xchg
mov
sbb
push
inc
scas
je
jo
fldenv
rolb
popa
sbbb
sub
inc
adc
and
jnp
sbb
cmpsb
inc
cmp
jge
push
lods
imul
movsl
mov
or
add
in
les
dec
popl
fildll
push
and
push
or
adc
nop
test
aas
mov
adc
inc
mov
mov
ds
pop
add
jnp
xchg
and
popf
add
jmp
mov
push
dec
outsb
push
sarl
and
js
idivb
stos
lea
push
jl
push
jnp
in
rcr
xchg
jb
inc
sub
adcl
fistl
mov
jge
leave
test
mov
or
inc
sbb
adc
cli
mov
jecxz
xchg
popa
lds
movsb
inc
push
jle
xchg
roll
xchg
dec
push
popf
clc
mov
shlb
rol
addl
and
std
xchg
cmp
in
mov
outsb
call
mov
outsb
out
cmpsl
fwait
push
mov
mov
inc
push
pop
aad
push
pop
ret
lret
push
out
call
fistpll
push
fldl
xchg
mov
dec
mov
lock
mov
fnstsw
fsubrs
roll
pop
sub
mov
inc
add
notl
ja
cs
mov
ret
xor
lahf
fiadds
test
lods
orl
ja
inc
loopne
and
xchg
mov
fnsave
or
xor
sub
aam
mov
aaa
insb
fsubr
pop
scas
and
sarl
cmp
mov
xchg
cmpsl
icebp
mov
aas
repnz
push
test
add
mov
xor
xor
and
mov
negl
push
shl
rorb
mov
mov
mov
pop
pop
adc
push
jecxz
stos
sbb
cmp
out
xchg
xorl
loope
enter
cmpsl
or
cmpsl
cmpsl
sub
bound
mov
mov
js
lea
insb
pop
push
idivl
ds
cmp
mov
aad
mov
jnp
imul
xchg
jo
mov
rcll
mov
mov
mov
jne
cmp
add
dec
pusha
xor
push
dec
dec
jmp
enter
loope
xor
push
and
fidivrs
fwait
adc
pop
int
mov
outsl
mov
and
inc
sbb
cmpsl
jmp
or
out
adc
pusha
jno
jb
data16
sub
pop
roll
xchg
push
addl
cmp
xchg
or
sub
addr16
ljmp
pop
mov
sbb
push
test
pop
out
or
fcoms
adc
push
ret
dec
ja
cltd
out
incl
sbb
add
jbe
xchg
xchg
adc
stc
int3
jne
mov
or
les
mov
leave
test
adc
out
arpl
sbb
and
add
xor
sti
dec
ds
jo
or
add
lret
aad
xor
rcr
call
dec
mov
mov
repnz
xlat
pusha
push
jl
aas
cmp
clc
cmp
in
ret
jle
add
rclb
das
or
xchg
xchg
in
and
cmp
cmp
in
mov
sbb
lods
inc
movq
dec
inc
push
jmp
lret
push
mov
fwait
xor
add
or
push
xchg
std
and
and
dec
mov
dec
xor
mov
or
dec
cmp
enter
add
dec
sbb
cmp
jnp
ret
arpl
add
ret
jno
mov
daa
jne
push
adc
dec
mov
mov
fidivrs
cmp
sub
dec
fisttpl
adc
jo
adc
rcrb
leave
add
in
mov
sbb
pushf
pop
lods
inc
movsb
mov
or
mov
jnp
sub
inc
xchg
or
arpl
ljmp
mov
jle
popf
aam
mov
mov
ja
cmpsb
fnstenv
stos
js
inc
jae
in
cmp
mov
and
mov
adc
add
popf
jno
mov
fabs
fs
dec
xchg
sti
adc
cld
dec
ss
aas
mov
fsubrs
imul
clc
dec
psllq
cmp
fnstcw
shlb
xchg
mov
mov
xchg
sub
jb
jle
dec
push
push
inc
mov
xchg
push
fcmovnu
das
sub
clc
cmp
pop
js
mov
or
pcmpgtd
push
inc
out
xchg
mov
inc
mulps
test
leave
mov
sub
lods
es
push
sbb
lock
push
ljmp
fbstp
lods
mov
mov
inc
mov
ja
or
push
mov
dec
fstpl
aaa
sub
jbe
mov
adc
dec
in
cmp
insl
and
and
xchg
fcomps
es
pop
push
fists
mov
into
cmp
pop
jnp
sbb
lret
push
jns
daa
pop
jne
mov
in
movsl
shrl
shlb
out
mov
shll
out
insb
push
inc
movl
stos
loopne
mov
call
insl
aaa
ss
pop
mov
and
or
mov
rclb
in
testb
jmp
add
icebp
dec
push
das
arpl
push
push
out
or
das
rcl
sbb
push
and
adc
pop
je
sbb
outsl
sahf
adc
leave
xchg
in
sub
cmp
jo
dec
fidivrs
xchg
xchg
sub
int3
dec
inc
pop
in
adc
loopne
ficompl
push
sbb
inc
rcr
cmp
pop
fsubs
inc
data16
push
mov
jl
insl
pushl
cmpsl
sub
pop
popa
lret
daa
jns
leave
insb
xchg
adc
movsb
stos
inc
mov
cltd
fcmovnb
and
movsl
cmp
sub
aaa
jle
xor
mov
rcrl
sub
lahf
adc
push
push
add
jp
mov
push
xchg
movsb
ja
sbbl
shrb
loope
pop
push
jno
cmp
gs
ds
pop
jge
pop
jl
pop
mov
lods
cmp
je
aas
stc
cmp
test
xchg
iret
sbb
fnsave
scas
arpl
push
test
mov
addl
sub
inc
push
cmp
sbb
sub
jb
ja
push
sub
dec
and
xor
xchg
movsl
fisubrs
mov
mov
mov
test
inc
inc
xor
jmp
jle
and
jne
dec
shr
pop
outsb
cmp
mov
sub
jne
xchg
testl
xor
cs
andb
adc
dec
ret
or
sbb
hlt
xchg
subb
addl
jo
cmp
test
leave
sub
testb
xchg
or
add
pop
lods
mov
dec
xchg
mov
out
in
shl
aas
jnp
adc
int3
mov
fwait
jb
cmp
jge
or
cwtl
adc
jmp
popa
dec
xchg
stos
es
fistps
mov
movsl
pushf
fwait
pop
mov
adc
xchg
lret
adc
cmpsb
inc
imul
addb
push
cmp
xchg
or
data16
cmp
jecxz
or
std
pop
cltd
out
mov
jge
cwtl
sahf
xor
in
lods
mov
testl
cmp
or
mov
pop
sub
cs
or
xchg
jmp
aam
sbb
dec
xchg
sbb
pop
hlt
iret
and
imul
adc
mov
mov
imul
mov
push
out
jae
dec
dec
push
ja
incb
fldl
sbb
sbb
add
dec
test
xor
xchg
dec
in
and
hlt
mov
cltd
or
mov
and
shlb
hlt
pop
loopne
addr16
ret
jne
stos
xchg
gs
mov
fistl
shr
aas
sub
xor
mov
xor
stos
and
add
stc
punpcklbw
push
inc
dec
movsl
sarl
pop
jecxz
push
or
push
sarl
test
mov
aas
je
xchg
mov
inc
or
icebp
popf
cmpsb
sub
pusha
pop
pop
adc
jle
dec
stc
cld
js
shrb
jecxz
add
mov
mov
jo
adc
xor
lahf
pop
fsts
mov
cmp
loopne
push
sbb
push
push
leave
xchg
add
push
add
sub
lea
dec
dec
and
mov
add
dec
jecxz
lock
and
aad
int3
adc
rcr
imul
lock
and
loopne
stc
and
std
jge
sub
dec
jmp
mov
loope
imul
jge
push
xor
mov
paddq
dec
xor
cmpsl
aaa
inc
mov
mov
jnp
sub
pop
aas
inc
insb
sub
pop
mov
cmpsl
shll
in
push
push
mov
xchg
repz
mov
cwtl
bound
jg
add
dec
pop
lret
or
scas
add
mov
mov
dec
cs
cwtl
lret
fisttpl
je
sub
sbb
and
cmp
scas
addb
xor
mov
popa
ja
xlat
cmpb
xchg
xchg
into
dec
nop
ss
pusha
idivl
xchg
int
xchg
or
mov
jge
sub
sub
lcall
sbb
xchg
nop
push
outsb
inc
pop
jmp
jge
sub
adc
xchg
popa
dec
pop
mov
inc
jge
cwtl
sub
lods
mov
ljmp
aam
jmp
enter
jge
mov
inc
out
into
adc
mov
into
mov
push
roll
mov
and
lods
ja
pop
shll
inc
mov
mov
sti
sarl
scas
jno
stos
jb
rolb
sub
bound
scas
scas
enter
mov
sub
cmp
sub
cld
into
lahf
stc
mov
das
icebp
sbb
dec
dec
pop
mov
cld
sbb
mov
mov
andl
mov
add
mov
mov
and
jp
imul
or
mov
push
xor
fwait
rcl
and
insb
cmp
mov
je
mov
loope
imul
movsb
jmp
aas
fidivs
dec
subl
jb
xor
insl
push
jo
jo
movsb
push
int
jl
out
les
cmp
pop
push
push
and
push
xchg
add
out
int3
stc
pop
cmp
stos
orb
pop
subb
adc
inc
add
enter
xor
inc
ljmp
pop
pusha
mov
adc
imul
mov
or
cld
hlt
cld
repz
mov
sbb
int
mov
xor
dec
ds
fsts
int3
clc
je
sarl
inc
mov
movsl
in
adc
mov
mov
lods
movsb
icebp
fstps
jnp
ret
movsl
xchg
mov
sub
outsb
out
mov
lds
out
aas
mov
pop
mov
sbb
in
add
sub
cwtl
adc
jle
ja
icebp
incb
out
in
inc
cmpsb
sbb
fisubrs
mov
mov
ret
pop
xchg
or
cmp
lret
mov
rorb
sub
clc
addr16
imul
in
adc
int
cwtl
lock
sub
jge
popa
fisttps
xchg
mov
mov
repnz
jbe
aas
dec
neg
dec
pop
push
adc
jbe
pmaddwd
pop
mov
test
or
fnstsw
pop
aaa
pop
lret
xchg
xchg
mov
cmc
add
jnp
mov
mov
ljmp
insl
stos
stos
test
test
dec
test
or
cmp
xchg
sbb
or
fisubl
test
rcll
push
int
adc
mov
arpl
fdivrs
dec
aas
pop
cmp
mov
ret
sti
dec
cs
xchg
mov
in
mov
enter
adc
inc
out
mov
pop
add
fcmovnbe
jo
lods
sub
xchg
sub
rolb
stos
pop
out
out
ja
push
bound
stos
shl
dec
dec
dec
xor
clc
xabort
sti
push
and
jno
jns
jnp
dec
mov
mov
inc
mov
pop
and
pop
push
mov
or
mov
mov
int3
enter
cmp
cmp
push
cmp
rol
cmpsb
mov
add
dec
pop
aaa
inc
lret
mov
loopne
int3
js
inc
aam
in
insb
cmp
jbe
out
and
or
sbb
lea
outsb
mov
mov
inc
sub
out
jae
xchg
or
in
arpl
sub
inc
mov
subb
sub
jb
pop
repz
dec
mov
xchg
dec
dec
fucomi
or
test
adc
xchg
stos
xchg
mov
sub
pop
bnd
sti
push
inc
fcompl
mov
push
xlat
loopne
ja
mull
pop
hlt
mov
xchg
mull
shl
sbb
jns
fidivrl
std
mov
jp
and
jmp
cmpsb
adc
mov
cmp
adc
mov
xchg
cli
ret
pop
cmp
adc
inc
xchg
xchg
xchg
iret
jl
fs
add
cmp
sbb
add
in
mov
into
int3
mov
mov
in
mov
mov
pop
push
mov
popf
mov
jno
cs
fsub
mov
push
cmpsb
mov
sub
lea
sbb
stos
popf
rcrb
jmp
push
call
xchg
push
insb
mov
fldt
xchg
or
xchg
mov
cmc
fcoms
add
loope
sbb
adcl
mov
fcompl
hlt
inc
cmp
push
xlat
fnsave
iret
pop
sub
sbb
aam
gs
fcoms
or
mov
loop
push
sbbl
push
mov
popa
sub
test
in
test
inc
out
jns
mov
in
pop
in
das
push
js
loope
dec
std
repz
dec
mov
jne
stos
sub
insb
or
imul
int3
ror
dec
fbstp
test
rcll
sbb
adc
out
jb
xchg
push
fadds
js
mov
test
aaa
jnp
enter
xor
xchg
and
cmp
addl
ss
jns
adc
std
faddp
sub
daa
data16
ja
loopne
out
imul
dec
xchg
pop
or
dec
movsb
push
sub
fidivrs
mov
adc
sbb
push
and
cld
adc
inc
cs
popa
outsb
push
mov
jns
fistl
sbb
sarl
mov
jbe
out
push
xor
sub
jo
pop
loop
sub
xchg
jbe
mov
inc
jge
dec
into
sbb
push
mov
jl
pusha
in
pop
popf
adc
mov
ficomps
test
mov
and
aad
test
dec
mov
loop
mov
mov
scas
leave
jbe
inc
add
push
and
addr16
cwtl
lock
xlat
test
frstor
mov
pop
pushf
sub
shlb
in
ja
inc
add
add
jnp
mov
mov
fs
xchg
or
sti
int
out
dec
dec
xor
int3
in
fisubl
adc
or
sbb
pop
push
mov
fnstcw
scas
jge
adc
xlat
xchg
push
jno
mov
fdiv
mov
mov
adcb
sub
aas
scas
fnstsw
adc
in
xor
pop
ja
inc
lret
dec
xor
lret
into
aam
popf
scas
xchg
mov
mov
push
loop
ficoms
arpl
fwait
jb
pop
ret
hlt
xor
cmpsb
xchg
scas
pop
push
sub
mov
mov
or
jbe
imul
mov
call
and
es
clc
dec
das
addr16
mov
aad
jne
in
ja
jp
lods
jae
and
sub
in
sub
mov
push
inc
mov
xchg
dec
imul
mov
arpl
and
int
leave
out
and
lea
push
inc
sub
cld
lock
insl
xor
ja
lcall
jae
lret
and
jo
push
std
jbe
sub
xchg
fcom
inc
imul
pop
outsl
notb
adc
ret
pop
jmp
pushf
mov
orb
or
xor
cmpsl
fisubrl
pushl
cmpsb
mov
js
pop
test
mov
pushf
xor
scas
insl
mov
xlat
in
sub
mov
imul
movsl
and
push
out
ret
xor
pushl
push
stc
xor
jl
out
fcoms
push
arpl
dec
adc
cmpsl
xchg
pop
add
fstl
and
and
cmpsl
ja
pop
enter
push
cmp
cmpsb
xor
test
das
es
repnz
data16
xchg
faddl
adc
add
aam
mov
cmp
das
push
fdivr
mov
jbe
stc
xlat
and
jge
sub
movq
clc
aad
testl
cmp
mov
das
jo
adc
sbb
dec
xor
scas
xor
sbb
sbb
je
mov
jns
xchg
cmp
hlt
ds
movsl
xor
shlb
xchg
pop
ja
addr16
and
fs
test
mov
loopne
or
xchg
push
mov
outsb
jbe
or
pop
in
jge
mov
sub
ror
jmp
repz
in
lock
pop
popa
dec
and
and
loopne
lahf
inc
add
stc
mov
xor
mov
ss
daa
cmp
out
jo
sub
or
roll
flds
icebp
adc
mov
daa
in
adc
cmpsb
fnstcw
add
mov
jle
inc
xchg
push
imul
push
fsubrs
cmp
sarb
adc
push
fiadds
and
out
scas
mov
cmp
dec
adc
inc
out
mov
ds
mov
cmp
cmp
or
aaa
scas
gs
out
jae
addl
mov
jge
adc
insb
fimuls
bnd
andb
xchg
sub
inc
outsl
push
mov
add
rcll
lds
sub
rclb
in
test
pause
ja
sar
pop
ljmp
xchg
jmp
jl,pn
jb
mov
bound
fs
add
and
cmp
outsb
xor
sahf
adcb
sbb
xchg
nop
sbb
jns
shll
or
mov
mov
mov
loope
int3
pop
iret
push
and
fcoml
test
shlb
add
jp
add
test
cltd
jge
mov
cld
push
pushf
fstpt
sub
sarl
adc
pop
stos
lea
lret
scas
push
adcb
push
dec
popf
mov
sub
call
xchg
and
aam
lcall
xlat
jne
int3
aaa
je
jne
enter
into
pusha
mov
adc
sub
or
negb
adc
test
scas
int3
movsl
adc
mov
leave
insl
push
push
jecxz
pop
xor
add
fcomps
inc
lods
sahf
fistps
pop
arpl
daa
stos
cmp
roll
xor
push
fisubs
data16
add
push
loope
xchg
push
pop
shll
push
xchg
inc
lock
mov
xor
lods
add
inc
les
pop
add
sbb
loope
jg
push
sbb
ljmp
jbe
xor
scas
pop
mov
gs
sub
dec
and
mov
loop
add
xlat
rcl
lds
test
or
mov
scas
push
popa
push
popf
outsl
add
repz
add
jae
mov
xor
jp
jge
subl
jnp
add
fsubr
pushf
jle
shl
repz
sbb
mov
sub
scas
call
or
lds
ds
loopne
sbb
adc
les
outsb
ljmp
loopne
ret
fsubs
mov
ds
test
xchg
adcb
aaa
adc
push
stc
sbb
xlat
cmp
insl
mov
mov
jmp
pop
mov
scas
dec
fidivl
sub
popa
mov
out
sbb
dec
pop
push
jbe
sbb
push
sbb
sahf
push
iret
dec
inc
inc
fists
cmp
sub
jg
sbb
pusha
insl
cs
frstor
inc
into
pop
jl
call
push
cwtl
aaa
sub
sbb
jge
dec
inc
push
sbb
xchg
mov
mov
jb
xor
xchg
mov
lahf
lea
les
jns
dec
dec
cs
int3
dec
pop
xchg
pop
outsl
je
dec
and
lret
je
pusha
xchg
and
test
jp
add
sahf
daa
daa
inc
push
js
sbb
cmp
adc
es
cmpsl
jo
add
testb
fs
in
test
pushf
fisttpll
in
repnz
neg
sbb
pop
into
les
mov
mov
arpl
sbb
adc
lret
mov
xorl
icebp
dec
js
inc
xor
aam
push
xor
pop
sti
xchg
dec
fs
ljmp
fisubrl
flds
dec
mov
dec
dec
int3
sbb
dec
push
clc
and
or
nop
xor
dec
jp
scas
jb
sahf
outsl
ds
sahf
insl
add
sub
rorb
adc
push
shrb
movb
inc
add
out
pop
imul
lcall
push
mov
test
int3
cmp
lds
push
neg
lcall
mov
jnp
ds
imul
mov
push
or
lret
aaa
ret
sub
mov
fdivrl
mov
js
push
pop
xchg
leave
jne
sbb
lods
fisubrs
jae
xor
and
into
cltd
ret
fisttpl
out
inc
xor
or
xorl
pop
nop
xchg
adc
es
xchg
cmpsb
ret
push
loopne
sub
fildll
call
pop
out
jbe
ss
test
arpl
inc
pusha
mov
xor
test
and
jne
add
js
inc
add
add
add
scas
push
or
jns
aaa
adc
pusha
pop
decl
mov
repnz
arpl
dec
xor
pop
aam
mov
push
mull
in
ja
rcrw
xchg
andl
int3
mov
out
xor
cltd
mov
pop
in
pop
cmp
das
test
or
pop
lahf
mov
pop
xchg
adc
and
cld
scas
or
adc
outsl
hlt
test
clc
fwait
js
jo
je
push
inc
aas
sarb
and
or
and
or
stos
mov
xchg
pop
or
enter
popa
or
dec
mov
add
sub
pcmpeqb
pop
jne
jo
jne
add
mov
stos
lods
lods
sub
movsb
dec
push
jo
jecxz
shlb
movl
mov
insb
jae
psubw
inc
fcmovnb
stos
jbe
mov
sti
dec
push
std
das
cmp
mov
jb
in
xchg
arpl
ss
das
or
push
fstl
push
cld
and
add
adc
addl
jns
push
cmp
inc
rcrl
pop
mov
sbb
push
fucomi
test
mov
fdivrs
outsl
dec
aam
lret
push
nop
aad
daa
out
outsb
lret
xor
clc
inc
rclb
mov
adc
and
int3
in
imul
pop
pop
sub
jb
and
dec
add
adc
pop
or
mov
jne
jbe
xor
ret
or
push
push
sub
or
jmp
cmpsb
xor
lods
es
xchg
xchg
stc
pop
stos
cmc
data16
mov
xor
sub
fwait
adc
into
fidivrs
pusha
jb
xchg
dec
push
xchg
cmpsl
outsl
pop
xchg
pop
pop
jnp
xorl
fisubs
push
std
pushf
stos
rclb
mov
sub
mov
ja
das
sar
sub
andb
mov
xlat
repz
jmp
insb
cmpsb
mov
mov
stos
mov
add
movsb
stos
mov
mov
lcall
cmp
cmp
inc
lods
cli
mov
cmpsl
cmc
push
or
stos
lret
ret
inc
xor
pop
data16
ljmp
xor
leave
addb
loopne
mov
gs
nop
hlt
fldt
push
jmp
push
dec
or
loope
or
bound
jbe
jb
or
cmpsl
cs
mov
iret
xlat
mov
int
test
jae
xor
je
sbb
mov
or
mov
imul
loopne
mov
out
bnd
sub
and
shll
add
pop
rcl
mov
push
lods
ret
mov
hlt
add
mov
mov
loopne
xor
out
andl
xor
inc
es
push
add
stc
fimull
andl
sbb
inc
cmc
loop
sarb
cmc
mov
pop
xor
aam
mov
int3
pusha
jg
fwait
jle
pushf
mov
or
lahf
fwait
cmpsb
add
repz
in
mov
mov
xor
cmp
std
out
stc
or
je
adc
fcom
adc
add
dec
xor
test
jnp
outsb
or
aaa
xchg
movsl
repz
mov
cmp
fistpl
jp
int3
sbb
mov
stc
cs
and
fldt
sbb
sar
faddl
repnz
popa
imul
xlat
add
test
pop
fwait
lock
sbb
mov
sub
xor
or
outsl
jl
shr
cmp
fisttpl
lret
xor
shl
clc
jmp
fnsave
add
push
push
xlat
js
fsubl
sub
add
loope
mov
pop
daa
sub
sbb
cmp
pop
dec
das
stc
cmp
idiv
xor
in
stos
sbb
test
add
imul
add
push
xor
mov
sub
and
leave
testl
loopne
sbb
or
jl
clc
sub
or
push
sub
mov
mov
xchg
outsl
mov
xor
or
dec
subl
mov
test
fs
mov
dec
cmp
sub
push
out
sub
xor
xorl
mov
push
shl
out
idiv
pop
mov
jae
and
shll
mov
daa
inc
daa
out
add
sub
lds
sub
jb
pop
pop
bound
mov
pop
cmp
incl
repnz
xchg
stos
add
add
mov
or
xor
mov
in
push
out
cs
push
lcall
pop
dec
jne
in
xor
or
cmp
clc
add
mov
xchg
or
daa
jne
push
int
lret
insl
mov
mov
adc
pusha
pushf
ret
mov
pop
hlt
mov
in
or
sub
inc
inc
sbb
and
divl
decl
rcr
mov
lods
ret
flds
push
mov
pop
cmpsl
jb
pop
sti
cwtl
daa
ljmp
and
loop
popa
es
movsl
jl
jns
scas
xchg
pop
xor
jns
inc
dec
aaa
ds
stos
inc
repnz
sub
fcomps
push
and
loope
movsb
jmp
enter
pop
sbb
lea
mov
hlt
dec
xchg
sbbb
mov
pop
lea
ja
scas
pop
xor
and
stc
bound
and
loopne
dec
loope
shrl
subb
adc
mov
sub
pop
cmp
push
and
inc
icebp
out
inc
mov
scas
mov
xor
xlat
insb
call
push
push
scas
mov
cltd
add
test
in
sub
fstpl
cmp
arpl
stos
jle
in
popf
adc
daa
das
and
movsb
imul
or
loopne
fld
pop
aam
pop
outsb
punpcklwd
xlat
int3
xchg
repnz
jbe
push
fmul
mov
loope
lds
outsl
mov
cmc
mov
jb
arpl
fsubl
ljmp
loopne
xor
ret
or
lods
cmp
aas
pop
in
xchg
mov
rcrb
and
push
test
clc
adc
xchg
cs
xchg
popf
loop
pusha
mov
push
inc
xchg
movsb
pop
xchg
sbbl
aam
cmp
lods
sti
mov
insl
jp
cmp
mov
push
xor
hlt
cld
inc
push
xor
cmpsb
daa
add
pop
insb
sbb
sbbl
outsb
ficomps
stc
push
sub
xor
cmp
out
adc
or
int
int
and
ljmp
add
or
jb
in
std
dec
add
sub
fidivrl
cmp
cmp
lret
push
jnp
insl
and
inc
push
jo
ror
enter
pop
inc
adc
mov
sti
std
cmpsl
mov
pop
ja
sub
push
mov
cmc
mov
jmp
mov
mov
adc
sbb
stos
mov
cmp
pop
xchg
xchg
clc
mov
cmpsb
sbb
push
mov
pop
imul
add
or
leave
push
in
xchg
and
cmc
or
fnsave
jg
insl
mov
xor
mov
idivl
mov
adc
shlb
fistl
aas
or
rolb
js
adc
std
add
iret
jmp
and
loope
in
pop
loopne
gs
fstps
mov
cmp
arpl
std
xchg
pop
imul
and
adc
sub
mov
push
jae
sti
decb
mov
jecxz
adc
jb
int
gs
in
cmp
clc
xor
mov
loop
cs
mov
dec
mov
ficoml
dec
push
std
adcl
mov
in
pop
xchg
mov
les
lods
outsl
or
fmuls
stos
int3
dec
cmp
pop
psrad
xchg
imul
pop
jo
ds
clc
sub
cld
ss
xchg
add
cmpsb
pushf
add
rorl
addr16
lret
loope
daa
push
adc
or
or
jno
xor
mov
jge
ljmp
ljmp
es
mov
pop
jg
or
lret
mov
insl
pop
lds
enter
and
aaa
jbe
dec
xor
dec
jae
subb
shrb
push
mov
cmp
aad
ss
sbb
pop
cld
pop
xchg
in
sbb
test
pop
mov
sub
jae
subb
insb
inc
movsb
inc
leave
adc
movsb
inc
mov
sub
jo
in
ror
in
adc
and
lahf
fidivrl
ds
adc
lock
scas
push
adc
stos
ja
pop
int3
xchg
sarl
push
sub
pop
adc
pop
int
inc
imul
xchg
adc
and
ret
pop
xchg
ds
ds
jb
sbb
orl
mov
mov
std
jo
fcomps
repz
xchg
aam
adc
jne
hlt
repnz
inc
push
inc
pop
or
mov
dec
push
ljmp
test
jbe
dec
mov
cmp
js
in
les
push
xchg
xor
outsb
xor
xor
int
fisubl
inc
jae
xor
les
test
cmp
rcll
jmp
cmp
jnp
bound
std
xchg
sub
call
sub
sub
insb
outsb
pop
pop
leave
pop
cmpb
xchg
ss
dec
push
push
enter
les
adc
mov
jmp
dec
add
das
imul
js
jge
or
cmc
pop
inc
sahf
xor
aam
out
ds
loop
or
jmp
orb
jns
jo
js
or
in
mov
inc
cld
push
insb
add
mov
stc
fidivs
dec
pop
xor
xlat
pop
dec
inc
adc
aaa
cmp
pusha
mov
ret
mov
aas
mov
icebp
aam
lss
sub
jnp
fisubrs
xchg
sub
int
imul
pop
lea
sbb
test
in
imul
outsl
adc
leave
arpl
cmc
cmpsl
mov
mov
clc
push
repz
mov
ret
and
loope
rol
cltd
movsl
fldenv
lods
mov
sub
dec
xlat
xchg
sub
or
push
repnz
xor
pop
dec
enter
pop
test
fcoms
mov
cld
cmp
outsl
scas
push
jecxz
adc
mov
push
lods
mov
jb
cld
pop
cltd
xchg
pop
js
gs
sub
sbb
mov
ret
addl
jp
orl
dec
sbb
dec
stos
xchg
jo
push
adc
inc
pop
inc
sub
sbb
ret
xor
mov
xchg
subl
loopne
fisttpl
mov
or
frstor
daa
or
inc
int3
dec
xlat
lret
sub
pop
pop
or
and
mov
and
daa
push
mov
or
pop
inc
sub
shrl
xor
or
loop
cmp
xchg
dec
ja
mov
cmpsb
mov
testl
in
shll
mov
adc
xchg
aad
mov
stos
pop
outsl
in
push
sarb
je
out
adc
mov
xadd
jg
lock
mov
sbb
in
mov
pop
mov
aad
cmp
shrb
xor
das
mov
pushf
add
jmp
outsl
or
movsb
ss
sbb
call
jb
inc
push
sub
mov
push
and
test
mov
fdivrs
iret
clc
push
mov
xchg
or
popf
hlt
pop
cmpsb
outsl
inc
jno
jge
out
and
and
mov
xchg
mulb
div
icebp
add
sahf
dec
jno
lcall
fisttpl
jmp
add
push
and
or
loop
push
daa
sbb
cmp
iret
popa
cli
test
test
add
popf
jge
push
mov
mov
imul
xchg
pop
test
fmuls
dec
xorl
pop
xchg
clc
xchg
add
stos
dec
xchg
outsl
lods
mov
addb
in
insl
je
push
jl
pop
sbb
push
add
add
sbbb
aaa
xchg
rolb
fscale
ja
inc
repnz
sbb
sub
nop
mulb
xchg
lock
scas
lods
rcrl
arpl
jo
daa
push
insl
xor
or
dec
movsb
clc
jo
hlt
xchg
jecxz
stos
dec
cs
xor
rcrl
mov
cld
xchg
aaa
push
js
movsl
leave
or
mov
push
push
pop
mov
divl
dec
adc
mov
adc
insb
inc
idivl
push
push
daa
dec
neg
in
icebp
jge
arpl
in
inc
dec
push
jp
jae
int3
lods
sbbl
icebp
add
push
xlat
adc
push
mov
dec
ljmp
lds
mov
decb
clc
addb
enter
cmp
pop
inc
and
jle
mov
in
repnz
mov
std
test
push
std
inc
in
insl
xchg
push
shlb
adc
push
sbbb
cmp
adc
stc
cmpsb
jb
inc
and
pop
xchg
loop
mov
and
repnz
testb
outsl
sbb
repz
sbb
cld
lahf
pop
std
ljmp
cmp
sub
jo
sub
ret
and
push
inc
sbb
pop
popf
inc
or
xor
jbe
and
mov
mov
ja
adc
dec
dec
scas
cs
sub
cwtl
ljmp
fnstcw
sbb
lcall
or
and
mov
mov
sbb
push
push
xor
mov
cwtl
call
add
aam
cmp
out
cmp
inc
jbe
dec
add
xchg
and
call
sbb
shlb
cmp
ret
fidivl
sub
fdivs
scas
xor
sbb
aad
pop
in
mov
mov
pop
test
negl
pop
jno
push
outsl
xchg
fcoml
cmp
sahf
inc
xor
bound
push
sti
int3
cmc
lret
sti
rcll
sarb
imul
insb
or
sar
jnp
cmp
es
cwtl
ds
loopne
mov
sbb
cmpl
or
push
cmpsb
cmp
mov
push
fsub
inc
mov
test
mov
stos
fsubs
scas
mov
fbstp
sti
enter
gs
test
or
push
pop
xor
lods
inc
xlat
enter
jns
and
sbb
int
out
mov
pop
add
sub
push
loope
out
call
ret
dec
push
lea
insl
mov
in
adc
aam
inc
rolb
in
sbb
jmp
stc
or
xchg
push
mov
lret
sbb
shrl
jb
lock
fisttps
ret
ret
mov
sbb
mov
or
je
lds
out
xchg
outsb
dec
mov
lea
scas
pop
add
stc
pushf
lods
jb
push
outsb
add
sbb
add
cmpb
push
inc
or
jne
sbb
in
fistps
sub
outsl
fcom
pop
cmpsl
xor
in
imul
adc
cmp
pusha
mov
in
cmp
lds
arpl
sbb
fwait
dec
out
idivb
mov
imul
inc
mov
push
outsb
pop
cmpsl
ljmp
cmc
fwait
out
subl
jnp
mov
pop
pop
outsb
mov
mov
sbb
imul
mov
xchg
and
test
pop
scas
adc
out
enter
imul
mov
pop
pop
or
loope
xchg
pop
sub
lret
test
mov
mov
xchg
cs
mov
movsl
xor
mov
mov
mov
cs
adc
imul
arpl
xor
pushf
inc
gs
ret
scas
mov
cltd
jb
call
test
adc
adc
outsb
lcall
sbb
sub
xchg
jmp
inc
xchg
icebp
xor
subl
imull
fcomps
aaa
inc
add
movsl
jae
inc
inc
or
pop
mov
or
xchg
inc
adc
rclb
outsl
cmpsl
mov
sub
fmuls
add
pop
sbb
adc
push
jg
out
xchg
fnsave
incl
xorb
aas
mov
lock
aas
scas
clc
lds
adc
dec
mov
shlb
test
mov
sbb
cmpb
ss
sub
lods
and
cmp
mov
add
xor
es
add
outsb
push
pop
mov
inc
lea
mov
jns
out
xchg
mov
jecxz
daa
test
arpl
int3
lcall
pop
test
cmp
mov
push
iret
mov
mov
loopne
xorl
jl
jns
sub
pop
push
sbb
in
scas
sub
rcll
inc
mov
mov
icebp
add
std
mov
push
mov
pushf
jo
push
into
test
je
inc
aaa
ljmp
std
mov
or
mov
push
aad
mov
adcb
movl
ss
and
jo
out
aas
je
out
xchg
jnp
xchg
jp
and
xchg
bound
push
scas
xchg
scas
push
pusha
sbb
adc
dec
inc
ja
mov
call
scas
push
dec
jnp
shrb
movsl
or
sarl
imul
adc
outsb
dec
add
fwait
or
aam
xlat
lds
std
data16
sti
mov
sub
inc
out
je
repz
sub
pop
pop
adc
jl
aas
add
mov
scas
pop
cli
jb
cmp
sub
sbb
arpl
jne
adc
popa
lcall
mov
xchg
sbb
and
xor
ds
rorb
and
ja
pop
pop
mov
mov
xchg
cltd
dec
fs
fidivrl
pop
out
jmp
or
shrl
enter
jl
jnp
push
xor
mov
dec
dec
xchg
std
jno
xchg
rolb
aas
xor
in
gs
in
inc
push
scas
mov
jns
insb
hlt
cmp
push
add
or
std
sbb
dec
fwait
push
inc
mov
push
pop
add
rclb
mov
sub
or
sbbb
sbb
jg
jg
into
jmp
gs
jb
or
jno
stos
xchg
and
jmp
cmp
pop
es
ss
bound
dec
les
out
jbe
jg
pop
dec
cmpsb
cwtl
lock
jecxz,pt
mov
popf
lock
fildll
imul
stos
mov
popa
add
dec
pop
fiaddl
cmp
pop
sub
push
jp
jo
push
test
insb
xadd
mov
lcall
shl
adc
out
or
cltd
inc
sub
sbb
out
jl
lds
or
mov
jecxz
les
fcoms
fcomi
xchg
adc
sbb
and
pop
or
out
pop
int3
pop
out
mov
in
fwait
sbb
xchg
jns
dec
add
xchg
mov
push
mov
jmp
loope
das
mov
outsl
std
lock
sub
pusha
push
fs
psubusw
out
pop
in
lock
xor
nop
jns
mov
xchg
mov
cmp
jne
push
push
push
cwtl
pop
jnp
lahf
sbb
fcomps
fcomps
dec
rcrb
or
fucomip
fildll
mov
mov
pop
loop
add
rolb
mov
out
shrb
cmp
mov
pop
push
push
mov
mov
lret
imul
int
jb
sar
inc
fadd
cmp
sub
and
test
mov
mov
jp
es
or
jnp
imul
pop
stos
nop
pop
jle
mov
cmp
add
inc
jle
jns
mov
mov
mov
sub
mov
pop
das
jbe
mov
dec
js
inc
xchg
jbe
je
pop
stos
dec
adc
gs
jb
xor
cmp
lret
lahf
jg
sbb
repnz
in
clc
mov
or
fisttpll
loopne
popa
sub
adc
jmp
gs
jp
xchg
pop
cld
imul
repnz
stc
mov
and
push
cmp
and
xchg
cli
mov
jnp
outsb
add
push
or
hlt
int
and
push
sub
fisttpl
ljmp
add
sbb
or
into
xor
jns
in
imul
xor
sarl
scas
push
inc
jge
and
mov
cld
movsl
testb
pop
jns
lcall
push
inc
leave
addl
in
ja
mov
push
mov
xchg
mull
sti
mull
sbb
pop
pusha
jp
clc
and
jno
push
and
pop
js
or
out
adc
xchg
arpl
pushf
inc
movsb
adc
out
or
rcll
xor
cwtl
fxtract
mov
or
add
pop
jb
xor
mov
inc
jnp
sbb
daa
aas
rcll
aaa
push
hlt
push
and
adc
loopne
xor
mov
stc
popa
scas
add
mov
push
insl
popa
pop
pusha
jno
dec
dec
mov
push
out
aaa
inc
pop
cmp
cmpsb
mov
out
sarl
push
call
jl
adc
mov
and
mov
pop
push
push
mov
jle
jbe
lcall
jle
push
sbb
push
or
nop
adc
push
pop
int
aam
push
aas
pop
jmp
shl
leave
push
push
scas
testl
dec
sbb
mov
lods
and
dec
aad
fidivrl
push
ds
adc
stc
jl
xlat
sbb
lds
out
pop
aaa
add
cwtl
jno
frstor
shlb
jb
mov
pop
test
loop
cmp
ljmp
aas
push
scas
addr16
fildll
inc
imul
or
mov
out
mov
pop
or
push
push
xor
je
push
mov
dec
cwtl
jbe
jp
sbb
pop
jae
xor
jg
mov
mov
loopne
repnz
and
shl
jmp
cs
sbb
adc
add
gs
icebp
sub
das
out
sub
add
mov
scas
sti
lahf
stc
movb
enter
cltd
pop
xorb
and
jb
popa
ja
rclb
inc
adc
mov
repz
imul
cmp
mov
dec
mov
mov
or
popa
push
xchg
sub
pop
fcoml
mov
ror
daa
lcall
xchg
fbld
inc
scas
insb
mov
data16
loop
fsubrs
or
pop
xlat
lahf
fistpl
shl
dec
cmp
jmp
popf
and
xlat
xchg
xchg
pop
jbe
mov
cld
jl
xchg
mov
mov
jb
pop
push
fwait
inc
inc
lcall
or
dec
test
lea
fs
xor
divl
xor
stos
and
loope
outsb
mov
pop
jge
xor
es
leave
aam
xor
xor
dec
and
je
les
jl
int3
test
shll
or
xchg
push
pop
cmp
sub
orb
inc
ds
xor
mov
sub
and
dec
jg
push
mov
mov
lret
enter
jne
out
sti
or
fimull
shlb
loopne
cmp
push
jmp
xchg
ja
sub
adc
data16
xor
pop
xchg
incl
gs
scas
mov
repnz
icebp
mov
rcr
mov
fsub
fildl
cmpsb
ds
mov
mov
cmp
cmpl
mov
push
je
daa
pop
mov
adc
inc
sbb
push
xor
fisubl
rol
shll
push
insl
dec
lret
dec
roll
inc
cld
push
jl
jmp
mov
icebp
cmpsb
out
mov
cmp
cmpsl
aaa
xchg
mov
data16
stc
mov
pop
rcll
imul
pop
lods
or
mov
dec
je
insb
fdivl
xchg
adc
mov
lret
lock
xchg
cld
in
fs
fcomip
push
jno
leave
sub
mov
mov
lock
mov
mov
call
sub
push
dec
inc
mov
pop
cld
mov
pop
cmp
sti
mov
out
shlb
in
ret
dec
cld
push
ds
add
sahf
fcomp
mov
adc
cmc
add
dec
inc
xchg
push
sub
fcmove
xlat
out
std
dec
mov
ret
lret
push
ret
fs
icebp
sub
jnp
rorb
push
js
fsubp
les
jmp
ret
insb
repnz
bound
xchg
mov
push
stc
stc
push
push
pop
inc
int3
fsts
adc
enter
addr16
pop
and
stos
jmp
or
orb
and
push
aad
mov
and
and
pop
das
aam
add
aas
dec
push
data16
mov
iret
jnp
add
fs
mov
aad
push
cwtl
fsubl
sbb
xor
sbb
loope
xor
push
out
xchg
mov
inc
mov
fsts
lahf
sti
rclb
mov
jle
inc
inc
es
or
sub
pop
lret
mov
adcl
arpl
cli
lea
sti
adc
lock
outsl
sahf
movsb
pop
or
sub
into
and
dec
repnz
mov
push
popa
adc
in
fisttps
jb,pt
mov
push
push
jmp
and
pop
add
add
xlat
lds
lcall
dec
mov
adc
clc
jmp
xchg
inc
sbb
xor
push
repnz
pop
iret
pop
repnz
xor
mov
push
popf
ss
dec
jg
data16
adc
push
out
je
or
sbb
cli
ror
aas
aaa
cmp
sbb
outsl
out
out
lahf
in
pop
sbb
insb
test
jnp
or
call
addr16
adc
or
imul
scas
cmpsb
add
mov
pop
das
adc
outsl
lret
dec
jne
add
repz
mov
inc
lods
movsb
push
push
call
insb
add
in
jne
jl
mov
pop
adc
cmpsl
jbe
mov
dec
cmp
ficoml
call
mov
xchg
mov
adc
outsl
sbb
pushf
xlat
mov
loope
xchg
pop
pop
gs
cwtl
rcll
sar
jo
mov
adc
lahf
cwtl
cmp
out
jnp
xchg
dec
out
mov
ljmp
sbb
lds
dec
outsb
filds
pushf
iret
dec
fdivs
pusha
inc
cmp
or
xlat
out
adcb
mov
test
filds
xor
push
ja
xchg
cmp
sti
xchg
xchg
sub
lds
mov
icebp
dec
stos
pusha
insb
gs
dec
flds
add
shll
jmp
dec
mov
pop
xor
adc
mov
inc
mov
in
or
or
lds
subl
inc
data16
cli
push
leave
sub
xor
inc
push
out
and
push
das
jecxz
sbb
lahf
sbb
pop
xor
xchg
inc
sub
jnp
bnd
sahf
inc
mov
xor
sbb
gs
xchg
and
rcll
add
sub
adc
mov
jmp
or
into
adc
inc
or
mov
into
cmp
sbb
and
mov
std
xor
mov
test
out
xor
dec
and
aaa
rorb
pop
or
test
dec
push
mov
pop
inc
loopne
roll
pop
cmp
mov
mov
iret
addr16
fidivs
xchg
sbbb
int
imul
cmpsl
scas
jns
ja
rcrl
push
les
ficomps
adc
int3
pop
adc
popf
jmp
loopne
out
mov
add
adc
aas
mov
shrb
movl
sbb
incb
adc
sub
fs
lods
movsb
jp
sbb
mov
lret
and
jns
enter
pop
fs
mov
cwtl
les
mov
ss
das
inc
xor
movsb
inc
pop
enter
cmp
mov
daa
jbe
aas
mov
mov
cmp
popf
pusha
jae
xor
aas
mov
icebp
jl
out
inc
dec
and
loope
fdivrs
push
pop
lahf
out
sub
mov
loopne
imul
cmc
sub
cmpsb
ja
enter
out
xor
repz
int
sti
jg
push
out
mov
sub
jae
add
mov
out
mov
xchg
lods
enter
es
or
sbb
sti
jp
test
xchg
adcl
jne
adc
scas
add
lea
adc
pop
push
xlat
mov
add
cs
fnstenv
mov
lds
dec
movsl
mov
lods
and
lahf
cmp
insb
je
ss
or
ljmp
and
dec
cmp
rorl
xor
cmp
push
dec
bound
dec
ret
sbb
sbb
lods
aaa
sub
fisttpll
inc
cmpsl
xor
add
push
int3
mov
scas
adc
cmp
sub
cmpsl
dec
scas
sbb
jns
cmc
sahf
dec
adc
mov
add
mov
lods
test
inc
add
xchg
pop
stc
mov
and
scas
jo
jecxz
sbb
push
fwait
add
jle
in
inc
inc
push
inc
jno
data16
push
rolb
cmp
stos
test
scas
jge
cld
inc
xchg
int3
mov
dec
test
add
jecxz
stos
lret
pop
cmp
shll
cmp
adc
ljmp
aad
cmp
icebp
sub
mov
dec
dec
cmpsl
ja
inc
mov
xchg
insl
clc
bound
stos
hlt
push
add
adc
repz
movsl
cmp
fdivrs
mov
pop
mov
fidivrs
mov
add
pop
pop
push
dec
call
sbb
pop
cs
push
xchg
ds
or
lea
jbe
dec
dec
xlat
loope
mul
inc
addr16
sbb
adc
leave
sbb
imul
fisttpl
inc
or
dec
mov
loopne
dec
insl
sti
jae
mov
jg
dec
dec
daa
test
mov
roll
sub
fstps
or
js
add
cmpl
jl
test
fsubs
pop
test
pop
fistpll
mov
fwait
adc
fdivs
cmp
in
add
add
lods
mov
sub
and
in
jbe
jle
cmp
fnstenvs
inc
adc
mov
iret
jne
and
xor
inc
insb
sbb
shrl
xchg
gs
ror
lret
and
js
sbb
cwtl
jp
pop
dec
mov
fsubs
jae
add
mov
jne
mov
sub
jge
add
and
xchg
out
out
pop
ficomps
cmp
sti
pop
or
sahf
in
incl
and
push
mov
ja
jbe
jne
mov
nopl
mull
and
es
mov
test
loopne
inc
inc
mov
push
insb
xchg
sub
inc
pop
pop
dec
push
pop
into
dec
hlt
cmp
cli
xchg
bound
icebp
in
mov
jns
or
outsb
add
or
and
mov
movsb
xchg
hlt
xor
mov
pop
popf
das
cmp
xor
test
jne
call
push
or
cltd
sahf
imul
push
jns
jg
inc
adcl
or
or
sub
jae
nop
cmp
int
dec
mov
loopne
popf
xchg
loop
into
push
notb
adc
pop
gs
stos
out
jo
movsb
xchg
cmp
lods
cmp
lods
mov
push
rorb
add
cmp
inc
repz
stos
rcr
mov
int
clc
aaa
sahf
inc
aaa
or
adc
pop
add
into
dec
into
in
sbb
pop
ljmp
icebp
sbb
les
jnp
mov
cltd
or
sahf
mov
lea
test
iret
cmp
ss
xor
sbb
rclb
and
pop
loopne
and
addr16
jl
pop
sbb
je
rorl
mov
dec
xor
mov
sub
fisubrl
jecxz
loopne
pop
xchg
lock
sub
out
ret
mov
cmpb
push
insb
inc
jmp
cltd
sub
ret
call
fildl
and
stos
ljmp
pop
mov
xor
xchg
dec
mov
insb
jo
inc
rclb
fstpl
fidivrs
out
add
mov
shll
mov
jp
orb
mov
xor
sti
sahf
jl
and
cli
stos
in
jbe
cli
in
dec
shr
mov
dec
popf
popa
add
pop
xchg
fdivrl
jo
push
fcomps
push
lods
pop
cmp
enter
imul
cmp
fisttps
sbbl
sbbl
sti
test
dec
fs
daa
jbe
aaa
aam
movl
or
imul
mov
les
inc
jp
mov
mov
push
lods
inc
in
pop
sbb
repz
jmp
cmp
scas
and
test
pop
movsb
inc
xor
mov
xorb
mov
movsb
jge
or
push
jnp
sbb
sub
repz
or
mov
pop
xchg
add
xchg
sub
sbb
ficoml
incb
sbbb
mov
pop
or
dec
icebp
xor
aam
xlat
cmp
adc
rcll
repnz
add
jle
push
pop
mov
inc
sub
mov
leave
dec
stos
xor
ret
jp
and
dec
dec
jo
nop
fnstsw
jo
fidivl
fbld
add
inc
jl
fcoml
push
or
dec
subb
in
cwtl
sbb
clc
out
ja
cmpsb
mov
xor
call
jne
inc
aam
rcrl
cmpsb
sub
fwait
popf
dec
icebp
icebp
ficompl
movsb
mov
add
fisubrl
cmp
push
cmp
jnp
xchg
or
ror
ret
inc
dec
or
int
cltd
jl
jbe
pusha
dec
insb
fcom
inc
adc
jno
sub
dec
movsb
cmpsb
test
sarb
pop
dec
vmovaps
cmp
and
pusha
add
out
xor
jecxz
or
pushf
mov
loop
loope
imul
cmc
sub
or
ss
mov
sub
test
sub
sbb
inc
ljmp
fimuls
fbstp
jg
ja
das
test
out
or
scas
cmpl
and
outsl
mov
test
or
iret
pop
fcompl
je
xor
xchg
xor
loope
mov
xor
inc
mov
shr
cmp
push
inc
push
inc
adc
scas
dec
xlat
add
and
pop
adc
aaa
add
test
testl
pop
loop
inc
mov
add
popa
bnd
xchg
out
jno
pusha
frstor
hlt
pop
xor
xchg
cltd
scas
mov
lcall
inc
adc
insb
adc
mov
dec
popf
in
jb
int3
iret
xchg
inc
adc
adc
mov
sbb
xor
std
aam
push
mov
test
insb
cltd
aaa
inc
and
xchg
addr16
movsl
mov
xchg
mov
mov
leave
test
mov
pop
rclb
gs
sbb
add
ja
sub
adc
xchg
pop
dec
pop
in
jno
fmull
or
xlat
mov
jle
xor
mov
ja
cmp
sti
jo
jnp
repz
sub
jmp
fsts
outsl
mov
mov
jmp
cmp
scas
xor
testl
xchg
sbb
sbb
dec
adc
sahf
add
jo
and
bnd
repnz
push
dec
or
push
ds
jl
and
jne
push
mov
js
aas
xor
add
aaa
or
cmpl
call
jecxz
dec
pop
or
std
and
mov
aad
arpl
loop
ret
jmp
and
int3
push
sbb
sbbl
cmp
pushf
pusha
push
imul
js
lods
mov
push
jno
cmp
pushf
push
jle
orl
mov
fwait
push
mov
imul
addr16
cmpl
mov
ljmp
scas
sbb
daa
in
shrb
pop
aaa
dec
sub
or
dec
mov
jmp
dec
mov
fnstenv
xor
addr16
std
xor
aas
xor
dec
aas
cmp
sbb
jns
inc
xor
stc
daa
outsl
or
sub
push
sub
rorb
iret
pop
add
insl
fnstsw
mov
mov
xchg
loopne
xor
dec
das
out
xchg
xchg
pop
clc
mov
popa
mov
movb
addr16
lds
dec
dec
mov
pop
mov
dec
in
pop
out
pop
dec
iret
imul
leave
xchg
int3
outsb
xchg
cwtl
push
inc
xor
lods
jnp
and
imul
je
addl
add
mov
xlat
pop
adc
mov
mov
sbb
jl
sbb
test
pop
loope
negb
mov
fimull
dec
jecxz
add
in
xchg
jg
pop
int
icebp
in
ret
fldcw
jge
adc
loopne
inc
out
mov
subb
jne
jbe
gs
mov
adc
sub
stc
or
popf
mov
push
push
fcmove
test
jbe
pushf
xchg
mov
add
addl
out
jecxz
scas
fcmovnu
cmpb
mov
push
xchg
fwait
icebp
shrb
sub
sbb
pop
xor
sbb
out
adc
sar
cmp
fisttpl
insb
inc
xlat
and
clc
pop
mov
mov
mov
icebp
xor
lock
repnz
mov
sti
jo
xor
jmp
insl
call
stos
or
pusha
mov
adc
int
mov
fidivl
dec
jg
je
mov
mov
loop
lret
push
dec
idiv
shl
stos
std
ja
mov
dec
inc
test
sbb
int3
mov
mov
fstp
push
pop
sbb
add
mov
call
aam
movsl
inc
and
add
popf
sahf
or
repnz
lret
add
push
je
pusha
movb
pusha
aaa
test
inc
push
jo
xchg
ror
in
add
cwtl
cltd
data16
fistl
test
dec
stos
cmc
pop
mov
lea
mov
jne
or
pop
cli
push
inc
jle
mov
iret
fisubrs
mov
idivl
jae
fs
jmp
enter
int3
adc
push
xchg
imul
pop
xor
or
ret
push
aad
test
cmpsl
sbb
push
dec
cltd
iret
jae
jmp
sub
adc
loope
sub
xor
cmpsb
ret
xchg
push
sahf
imul
movups
lods
and
cmpsl
jns
push
lock
adc
mov
xchg
out
test
out
lds
cmpl
adc
nop
addr16
shrb
cli
jmp
cmp
aaa
scas
lods
lcall
push
pop
dec
adc
int3
and
fstpl
inc
cltd
in
shlb
adc
imul
and
shll
lret
add
jno
mov
fists
jge
adc
imul
mov
and
imul
push
add
movsb
push
lds
inc
popf
fstps
mov
jns
cmc
adc
test
xchg
or
cmp
aaa
xor
stc
fdiv
jae
pushf
nop
fildll
adc
sahf
mov
cmpsb
mov
in
popf
jb
shrl
push
push
aas
push
fs
xchg
imul
add
jne
cmp
cmp
mov
lock
aaa
dec
aas
cmp
sub
aas
push
pop
mov
jg
mov
jl
jbe
mov
repz
dec
push
adc
andb
int
or
push
cmp
fadd
mov
enter
cwtl
sub
xchg
mov
push
and
inc
dec
adc
or
aam
pop
or
xchg
ss
movsl
ds
push
ret
mov
addb
mov
inc
or
shll
sbb
xchg
adc
outsb
sub
mov
rolb
stc
mov
aaa
shrl
sub
mov
out
mov
scas
scas
jo
and
popf
lahf
mov
jmp
sbb
inc
xchg
ds
inc
dec
push
add
fwait
cmp
pop
nop
daa
xorb
aaa
adc
mov
stos
add
lods
lret
aaa
daa
dec
in
or
pop
mov
push
mov
add
pop
sub
sub
scas
push
adc
call
adc
out
into
pop
in
ss
stc
lahf
xor
cmp
add
mov
scas
sbb
cltd
dec
clc
xchg
mov
outsb
fstps
in
popa
repnz
inc
pop
inc
xor
notl
xchg
xor
mov
shlb
or
inc
movsb
mov
and
test
and
adc
xchg
push
icebp
add
lahf
cmp
dec
sbb
sub
in
enter
out
sbb
ret
int3
test
xor
mov
andl
fwait
jne
icebp
pop
loopne
mov
loopne
push
das
and
lods
loope
lret
pushf
lret
repz
lds
mov
cld
bound
data16
add
inc
pop
in
dec
jae
imull
pop
mov
test
jecxz
mov
adc
adc
aad
mov
rolw
mov
cmpl
testb
das
inc
mov
leave
push
imul
in
and
loopne
cmp
popa
aas
fstl
jnp
mov
enter
movsb
ffreep
cmp
in
pxor
push
cmp
mov
mov
repnz
mov
out
and
repz
arpl
mov
aad
aas
lret
in
jecxz
inc
mov
sbb
sub
mov
push
andb
mov
mov
in
call
out
fstl
mov
and
push
int
arpl
jp
jno
xchg
mov
xor
push
xor
movsb
jge
mov
dec
loopne
push
inc
scas
xor
cmp
adc
jle
xor
mov
dec
mov
mov
loopne
stc
in
push
in
push
pop
push
and
inc
push
xor
push
or
push
xor
pop
add
inc
xor
es
sbbl
psubusw
inc
inc
aaa
jge
insl
pop
arpl
mov
mov
pop
dec
jns
frstor
pop
inc
dec
test
ss
add
dec
xchg
cli
sub
icebp
ret
adc
and
iret
dec
imul
out
push
sub
data16
ja
pop
pop
mov
js
lret
mov
pop
mov
pop
cmpsb
inc
fsubl
repz
repnz
cwtl
xor
fcompl
adc
jbe
pop
jl
cmpsb
ss
adc
xchg
xchg
loop
xchg
sbb
aas
mov
mov
push
cwtl
or
jae
xor
lret
cmpsl
mov
adc
pop
inc
jo
rclb
repnz
jmp
xchg
cmp
scas
xlat
clc
jp
xchg
test
movb
rcrl
jno
fstpl
jge
std
or
ret
aas
shrb
add
lahf
bound
and
mov
fiadds
mov
outsl
jl
sbb
mov
pop
mov
int3
sahf
sbb
inc
mov
fstps
mov
ret
es
lds
jl
data16
scas
sbb
adc
pop
scas
pushf
adc
movsl
pop
sbbb
push
inc
ret
arpl
push
cmp
or
aaa
adc
xor
cmpsb
or
ds
inc
ja
xchg
fs
shl
ret
push
shlb
int
dec
sbb
jmp
das
push
jb
insb
dec
mov
push
aad
daa
hlt
xchg
fwait
add
scas
lret
rcll
hlt
mov
jnp
ret
lock
stos
clc
adc
outsl
outsl
cmpsb
sbb
or
jbe
cld
mov
xchg
cmp
adc
mov
xor
or
lcall
std
xlat
insl
adc
mov
xchg
dec
fs
mov
into
nop
dec
lods
push
adc
shlb
or
mov
aam
fwait
outsl
mov
subb
xlat
mov
pop
ds
fs
jo
jns
imulb
mov
push
sub
scas
arpl
in
xor
sahf
inc
lcall
jl
jle
pop
aad
aaa
or
sub
gs
leave
iret
mov
cld
test
sub
repz
addr16
lahf
push
dec
and
mov
xchg
mov
fs
jmp
in
mov
xor
jb
in
adc
loop
push
or
aaa
mov
shl
insl
mov
in
ret
xchg
inc
int
icebp
cmp
sub
cli
lock
ja
adc
add
in
out
sub
movsb
mov
pop
push
xchg
mov
hlt
aas
mov
sahf
sbb
icebp
sbb
sarl
mov
call
jnp
sub
cmp
mov
cmc
mov
out
fucomi
push
scas
mov
gs
and
sbb
push
out
xchg
lods
inc
stc
adc
jle
repz
mov
cmp
lahf
inc
dec
loope
arpl
insb
jo
aas
dec
xchg
push
mov
mov
cmp
mov
hlt
jecxz
hlt
sbb
jb
add
imul
ljmp
es
pop
inc
ja
loope
into
or
jge
jae
sahf
inc
jb
mov
inc
ds
adc
ror
lret
push
pop
test
pop
jmp
rolb
jle
mov
mov
adc
idivb
stc
pop
sbb
push
push
loopne
push
fisttps
jnp
jae
outsb
inc
test
aad
ficomps
sbb
mov
mov
aaa
inc
lret
jns
mov
jo
cmc
out
clc
lret
roll
xchg
and
mov
jo
xchg
or
push
cs
sbb
dec
mov
sub
movsb
stc
notb
xchg
popa
popa
rcrl
cld
std
push
xchg
test
mov
sti
in
repnz
jns
in
pop
shrl
enter
adc
sub
arpl
push
cmp
mov
aas
lahf
das
xor
clc
xchg
fbstp
push
punpckhdq
xchg
or
xor
jg
out
aad
sti
push
xchg
add
jg
outsb
pop
mov
xchg
sub
dec
shr
dec
lods
sub
pop
out
mov
sub
jmp
push
adc
or
or
pop
mov
push
cltd
pop
movb
lea
nop
enter
inc
jp
outsb
mov
test
insb
mov
test
or
sbb
pop
sbb
adc
pop
adc
lcall
push
jno
jb
adc
inc
mov
rolb
into
pop
and
mov
or
imul
sbb
jecxz
into
xchg
xor
rclb
mov
ss
or
leave
jb
icebp
test
test
aas
mov
ljmp
aaa
jge
push
popf
pop
das
int
nop
je
or
sbb
dec
insl
cwtl
sub
cmpsl
out
xchg
jp
lock
in
imulb
mov
sbb
or
or
push
lock
mov
repnz
and
and
lret
mov
and
mov
frstor
in
push
jge
push
push
stos
pop
xchg
xor
gs
xor
ret
outsb
or
xor
rcr
and
push
push
mov
addl
sbb
shrl
ljmp
sub
pop
mov
push
sub
jle
in
les
push
out
cs
mov
xor
insb
xor
mov
jl
cmpsb
mov
and
or
mov
fldt
sub
aas
mov
pusha
cmp
add
aas
cmpsl
stos
xchg
cmpl
xchg
daa
hlt
testl
outsb
cmpsb
jo
and
push
sbb
jle
sub
in
cmp
in
test
loope
in
lods
stos
hlt
dec
in
xchg
ja
dec
inc
or
das
jge
ret
std
rcrb
outsl
jo
dec
out
fwait
jo
mov
loopne
cld
mov
adc
inc
lret
das
insb
or
cmp
and
aas
mov
gs
dec
pop
shrb
stos
push
lret
jge
data16
jmp
and
arpl
pop
mov
popf
lahf
rcl
div
cmp
pushf
rcll
sbb
xchg
icebp
jno
sti
mov
xor
mov
mov
test
int
adc
dec
and
in
dec
mov
sahf
mov
jecxz
dec
decb
fstps
push
adc
and
xchg
lods
xchg
jbe
data16
sti
adc
dec
pop
ret
dec
dec
jecxz
out
sbb
ret
scas
jge
ret
mov
outsl
adc
test
imul
shrl
lcall
sub
dec
sub
mov
mov
mov
inc
fs
adc
xchg
icebp
adc
and
sbb
inc
pushf
push
xchg
ficoms
or
xchg
jbe
pushf
cmp
pop
addl
sbb
jae
mov
dec
mov
sub
add
test
inc
pop
mov
cmp
sarl
enter
push
sbb
sbb
sbb
ja
jne
mov
mov
or
out
or
in
mov
movsb
sahf
shrb
inc
cmp
pop
push
xchg
adc
inc
gs
adc
pop
into
in
aad
je
cli
mov
int3
rclb
inc
rorl
jp
adc
loopne
mov
mov
pop
inc
insb
loopne
pxor
jl
push
loop
pop
ljmp
fimuls
push
pusha
mov
and
jl
enter
jb
insb
popa
adc
mov
fwait
jnp
xchg
cltd
or
repz
or
test
mov
pop
shrl
add
sbb
mov
adc
jmp
push
sub
adc
adc
or
in
cmpl
cmp
jl
ror
cmc
jge
mov
mov
in
jb
mov
arpl
sarl
fcoml
es
cmp
add
repz
inc
pop
xlat
fdivr
or
mov
scas
mov
pop
fstl
pop
lock
sbb
jns
push
jge
mov
jmp
rcrl
lcall
gs
mov
inc
jmp
xchg
cmp
adc
outsb
and
sub
jp
mov
mov
jmp
mov
push
mov
repnz
out
iret
xlat
xchg
imul
rcll
xchg
cmp
int3
jg
out
xchg
ss
sub
rcrl
test
adc
xchg
cmc
add
out
addr16
push
cmpsl
jge
add
dec
leave
insl
inc
pop
icebp
leave
push
test
dec
jo
arpl
or
mov
or
add
xor
adc
stos
insb
sti
cmp
fwait
movd
push
loop
xchg
xor
lds
cmpsb
mov
loopne
leave
push
adc
arpl
lahf
mov
js
or
repnz
push
aad
ljmp
mov
sbb
lods
test
lahf
mov
loop
imul
ficoms
fcompl
push
sub
fbstp
into
inc
fsubl
xchg
add
in
stc
aas
mov
mov
mov
cmc
outsl
mov
dec
popf
imul
dec
in
addb
or
in
sub
jo
out
fildl
in
jo
into
and
dec
sbb
sahf
xchg
pop
sub
cmp
push
outsl
adc
sub
call
or
pop
aas
inc
push
inc
dec
pop
cli
xlat
add
push
xchg
rcrl
jo
mov
mov
cmovnp
push
inc
and
ljmp
rcrl
inc
xor
inc
lahf
scas
lods
inc
dec
cltd
jno
fdivr
and
arpl
cmp
or
cmpsl
out
mov
adc
mov
out
out
push
xorb
in
jb
mov
ss
inc
pusha
imul
or
xchg
movsb
push
ds
mov
jnp
movsb
outsl
rclb
inc
mov
stos
sbb
inc
in
aaa
pushf
xchg
int3
inc
mov
mov
test
jmp
add
and
cwtl
pop
jmp
pop
push
pop
fisubl
cmp
dec
pop
adc
or
mov
xchg
stos
in
mov
divb
cltd
outsl
sbb
out
xchg
lret
adc
and
xchg
xchg
mov
cmp
sbb
pop
mov
push
imul
cmp
jl
jl
notl
and
vcvtsi2ss
and
arpl
bound
imul
mov
pop
pushf
inc
mov
test
pop
repz
int
hlt
mov
in
hlt
loop
mov
sub
xor
mov
push
sarb
xorb
popa
mov
cmp
cli
pop
dec
bound
dec
jbe
ret
pop
cltd
jl
iret
rolb
lahf
sub
cmp
sarb
sub
popf
arpl
ja
jmp
pop
xchg
adc
sbbb
xlat
mov
sahf
cmp
aam
jbe
add
call
loope
and
dec
push
push
daa
std
fsubp
or
fstl
cltd
xor
lea
mov
cmpsl
ficoml
stc
testl
cltd
testb
lock
push
mov
cmp
in
js
loopne
mov
xchg
xchg
lods
insl
pop
push
sbb
popa
or
mov
pop
inc
cmp
sbb
movsb
arpl
mov
int
push
test
push
or
mov
mov
mov
add
bound
insb
outsb
negl
mov
sub
scas
pop
cs
cmova
add
jnp
repnz
push
dec
sahf
js
cmpsb
mov
sub
shrb
popa
and
inc
inc
push
mov
sarl
iret
dec
xchg
push
insb
loope
inc
jno
xor
push
popl
mov
divl
mov
inc
xchg
xchg
iret
lret
sub
jecxz
rcrb
add
sbb
data16
mov
cmp
jl
and
cli
push
push
daa
xchg
cmp
insb
ja
add
test
sbb
js
cmp
xor
xor
adc
out
jp
filds
jge
mov
xor
dec
add
out
xlat
xchg
es
ja
in
mov
mov
push
rcll
sub
mov
jb
push
or
xchg
and
aas
push
ja
mov
push
mov
pop
jnp
sbb
push
push
xchg
inc
int
loopne
js
pop
pop
pop
mov
int3
bound
shl
test
jmp
sbb
push
ljmp
or
xchg
and
add
adc
loope
xchg
cli
sub
pop
mov
xlat
and
jmp
cs
jo
jle
jmp
loopne
jecxz
pop
xor
xor
mov
dec
inc
sbb
xchg
pop
mov
cmp
cmp
mov
ret
cmpsl
rolb
sarb
aaa
adcl
jo
sahf
lahf
pop
pop
push
pop
sub
push
dec
lds
jle
dec
mov
xchg
out
mov
mov
cltd
jmp
pop
popf
lret
in
adc
jno
lret
inc
mov
movsl
std
test
cmp
ret
jecxz
enter
add
mov
cmp
inc
push
cs
inc
js
nop
out
xchg
sub
adc
pop
pop
mov
daa
pop
repz
push
test
xchg
pop
repnz
outsl
mov
int3
xchg
shlb
jae
or
and
mov
dec
dec
dec
loop
and
ljmp
inc
push
mov
fisubl
or
sbb
adc
jmp
mov
push
mov
imul
pop
and
xchg
push
out
lods
mov
push
adc
stc
mov
and
mov
jge
insb
cmp
stc
call
mov
cwtl
stc
pop
es
test
xlat
icebp
jmp
jecxz
sub
jno
into
push
mov
gs
mov
shrl
ds
sub
dec
dec
insl
push
add
push
iret
push
fwait
jmp
xchg
adc
cli
add
xchg
adc
sbb
cwtl
fisttpll
mov
jp
sbb
fwait
pop
scas
aam
inc
test
mov
jno
jno
jge
icebp
xor
mov
sbb
ss
leave
dec
push
mov
xchg
clc
ljmp
push
xor
add
mov
divl
test
inc
add
fs
xor
mov
sysenter
jnp
sub
inc
jecxz
or
mov
popa
leave
sub
outsl
mov
push
shrl
jb
out
js
js
inc
int3
aam
int3
sbb
sbb
in
cmpsb
mov
sub
cmp
popa
add
pop
mov
int3
sbb
iret
aam
cld
inc
or
popf
cvtdq2ps
arpl
or
dec
push
cld
lcall
hlt
movsl
loop
xchg
dec
outsb
lds
jno
movl
add
mov
cmc
xchg
lock
addr16
xchg
mov
in
stos
shl
dec
xor
sbb
test
adc
lock
mov
mov
cmp
fs
and
mov
mov
mov
xor
xor
sub
pop
jb
aad
int
sbb
cmpl
shl
imul
into
pop
xor
outsl
pop
ja
cmp
or
lods
popa
sti
data16
push
mov
sub
mov
cmp
push
xchg
addr16
test
inc
and
cmp
int
jae
adc
pop
dec
jecxz
scas
mov
push
aad
es
addr16
in
call
hlt
test
adc
add
xchg
cld
popf
test
gs
fildl
pop
fldenv
mov
fdivrs
mov
inc
dec
jmp
lods
jp
push
pop
add
stc
out
add
data16
mov
adc
insl
fnstenv
pop
pushf
popa
fwait
xorb
lods
aad
aaa
xchg
add
ljmp
outsl
hlt
mov
and
outsb
ret
mov
or
cltd
clc
outsb
int3
mov
popa
push
sub
add
ja
and
mov
cwtl
das
dec
pop
jecxz
lret
rcl
push
push
mov
mov
pop
xchg
mov
pop
inc
lock
push
jge
movsb
mov
mov
xor
adc
ja
jnp
repz
rcr
mov
imul
out
lahf
inc
pop
jae
pop
jle
jno
sbb
jb
xor
in
push
cmp
adc
fists
pop
mov
cmp
mov
cwtl
and
inc
bndstx
xor
in
iret
pop
fld1
mov
adcl
scas
and
xlat
sti
jno
in
repnz
out
jb
sub
cli
xacquire
mov
aaa
pop
std
adc
cmp
movsb
cmp
es
cmp
push
xor
sbb
les
jecxz
mov
or
jle
push
and
paddw
lea
pop
and
fdivr
or
sbb
in
cmc
sahf
addb
jge
enter
cmp
and
sub
and
js
mov
cmc
in
arpl
sub
cli
push
incb
mov
inc
cmpl
jb
inc
push
and
into
xchg
jg
insb
sbb
push
stos
aam
pop
sbb
js
push
ljmp
rcl
add
sub
jg
je
loope
push
xor
test
dec
push
xchg
inc
pop
test
pop
incl
push
lahf
fisubrs
dec
fs
outsl
ljmp
cmp
mov
stos
inc
sbb
push
or
je
jns
outsl
sbb
add
hlt
mov
out
or
fwait
and
sbb
jp
sub
aas
fwait
push
mov
orb
mov
pop
mov
sti
jbe
jae
vpavgw
call
in
sbb
xor
leave
jno
bound
inc
inc
fildl
test
mov
pop
or
add
cwtl
into
idiv
or
sbb
adcb
std
adcl
not
popa
or
pushf
lds
push
aas
xchg
movsb
or
test
mov
test
or
arpl
pusha
int
repnz
xchg
mov
and
sub
loop
hlt
fs
scas
inc
mov
or
adc
sub
repz
sahf
pop
in
dec
mov
xor
cmpsb
pushf
mov
mov
xor
jo
pop
xor
cld
fimull
aaa
stc
in
popl
leave
push
xchg
jno
call
sbbb
loopne
adc
in
sub
ror
cmpsb
inc
gs
adc
repnz
pop
test
sub
push
ds
int
mov
push
movsl
jg
xor
jbe
sub
arpl
xchg
rolb
fsubr
push
test
and
pop
mov
enter
or
das
ja
sbb
pop
iret
push
cmp
das
shll
jg
sub
imul
sti
xchg
leave
jb
sbb
lahf
mov
cmc
xor
mov
sub
mov
stc
xchg
mov
xlat
call
out
in
shlb
mov
popf
sub
mov
sbb
and
sbb
out
xchg
mov
sti
add
xchg
dec
outsb
or
dec
nop
xor
mov
xor
cwtl
dec
add
scas
movsb
sahf
insb
fidivs
out
jl
les
and
fiadds
cmpsl
push
push
dec
jo
push
mov
push
fsubs
fsubrl
or
mov
aam
jns
ret
je
pmulhuw
nop
cmpsb
mov
out
mov
inc
incb
movsl
sub
test
shll
ja
sbb
clc
pop
into
mov
jge
aam
xchg
adc
dec
and
sub
in
mov
or
jle
cmp
push
mov
lcall
xchg
lret
lcall
scas
popf
sub
daa
or
and
aas
std
mov
imul
adc
stos
lock
or
andb
mov
insl
and
imul
mov
mov
cltd
sub
jp
aas
fwait
xor
dec
cli
xor
mov
cmp
dec
repz
test
in
pop
sbb
sub
cmpsb
inc
int
cmp
xor
push
lcall
loope
or
mov
jp
mov
pop
rcll
pusha
mov
mov
xor
xchg
sbb
lea
dec
push
imul
cmpl
leave
xchg
in
xchg
in
insl
push
imul
mov
sub
fimull
dec
fdivl
xchg
in
ret
popf
fs
cmp
inc
jne
dec
jle
cmpsl
rclb
pop
pmulhw
dec
adc
pop
jecxz
les
push
xor
nop
mov
stc
lret
loopne
xor
loope
sub
push
push
fldcw
adc
leave
out
mov
push
cmp
and
dec
pop
sub
imul
scas
jnp
adc
in
ret
lret
pusha
inc
jae
sti
jle
cmp
jge
icebp
out
sbb
aaa
pushf
add
lcall
mov
and
push
jle
add
out
outsl
xchg
cld
pop
push
std
mov
ljmp
iret
js
lcall
mov
mov
xlat
or
jnp
add
sbb
subl
movsb
repz
roll
fwait
int3
xchg
imul
lret
xchg
mov
inc
jo
test
push
jae
loop
xchg
mov
cmpsl
push
nop
call
fidivl
xchg
or
ffreep
aam
fstps
add
in
out
in
or
rcrb
cs
xchg
divb
loope
test
jne
notb
lea
add
push
xor
arpl
not
sarl
mov
mov
rorb
add
je
jle
inc
push
jmp
add
nop
ds
mov
enter
nop
sub
or
xchg
test
movsl
push
stc
cwtl
pushf
dec
inc
shll
outsb
je
push
repnz
jbe
or
inc
in
xchg
push
cmp
data16
add
mov
sub
push
inc
add
jp
and
cmp
repz
gs
call
sbb
add
scas
or
fwait
nop
push
inc
lock
insl
loope
jecxz
aam
sbb
xor
fdivs
fstpt
icebp
mov
pop
xchg
sahf
inc
enter
mov
ja
xchg
sub
int3
mov
das
lcall
movsb
mov
ss
call
sub
dec
mov
and
call
enter
mov
cwtl
inc
cli
test
sarb
xchg
jb
ret
ljmp
and
mov
sub
push
mov
jb
enter
into
lock
xor
push
nop
push
dec
mov
inc
mov
aad
adcb
pushl
dec
test
mov
popf
adc
xor
inc
cmc
xchg
cltd
outsb
in
or
shlb
adc
fs
sub
or
and
push
ret
ffreep
mov
ret
sahf
cmpsb
scas
fldt
aas
mov
mov
dec
jl
adc
pop
sbb
inc
mov
cmp
inc
lea
mov
xor
cltd
pushf
arpl
call
mov
dec
mov
inc
int3
data16
mov
push
add
imul
ss
ljmp
pop
jno
jp
cltd
mov
mov
jnp
push
jmp
xor
imul
fcompl
lahf
aaa
lods
xchg
mov
push
adc
sbb
insl
jecxz
mov
gs
mov
mov
dec
lea
ret
imulb
into
cmpsl
outsb
and
mov
mov
cmp
daa
sbb
nop
test
fdivs
dec
add
inc
jne
mov
and
aas
push
cli
mov
mov
dec
mov
push
loopne
or
or
pop
mov
insl
adc
sbb
adc
add
in
call
mov
dec
push
das
dec
cmp
mov
fmul
mov
cmpsb
in
mov
add
mov
clc
sbb
ret
int3
add
lahf
push
dec
sti
cltd
and
pop
jbe
jl
jl
add
pop
mov
push
inc
mov
push
mov
cmc
aam
dec
shll
push
lods
mov
sbb
inc
fcoms
mov
iret
sahf
or
mov
xchg
push
mov
iret
inc
scas
nop
mov
xorb
movsl
pop
push
sub
mov
negb
stos
adc
adc
add
push
push
sub
pop
call
inc
icebp
cmp
mov
fiaddl
fsubrs
adc
lret
inc
les
adc
insl
shl
syscall
add
or
addl
xchg
sahf
test
int
mov
pop
int3
jecxz
jmp
mov
orb
add
or
xor
les
fcoms
mov
hlt
out
or
call
arpl
insb
jge
enter
dec
je
mov
cwtl
mov
mov
push
ficoml
lahf
xor
popf
pop
dec
insl
mov
rol
push
outsb
fstpl
and
lds
fiadds
inc
cmp
test
xor
sti
adc
loope
clc
mov
in
pop
insb
and
out
aad
in
inc
push
roll
add
pushf
lcall
les
dec
fwait
sub
ret
out
in
add
cmpsw
push
imul
loope
insl
dec
fsubrs
mov
outsb
cmp
inc
bound
mov
or
cmp
and
pop
cmp
pop
aas
add
cmpsb
jmp
cmp
cltd
push
clc
mov
xchg
jmp
add
sbb
fdivl
aaa
and
mov
movsl
pop
cli
leave
test
shll
sti
and
add
jae
pop
aam
sub
jo
inc
in
mov
cli
add
loop
int3
enter
cmpsl
pop
push
xorl
ljmp
sbb
mov
dec
notl
gs
jo
test
mov
popf
mov
adc
add
icebp
frstor
cltd
mov
filds
clc
bound
jnp
fsubrl
shl
icebp
jp
pop
fs
ljmp
sub
pop
les
lods
loope
pop
scas
mov
mov
mov
icebp
xchg
adc
jmp
push
sahf
adc
sbb
cltd
jmp
stos
mov
push
sbb
pop
jne
scas
jo
ret
movsl
insl
fldt
dec
les
mov
popf
or
xor
mov
add
jb
mov
imul
decb
outsb
fildl
pop
sub
lods
xchg
push
loop
mov
cmpsl
pop
lea
mulb
xor
xor
sub
imul
push
lods
xor
jno
mov
insl
sub
in
icebp
xor
outsb
push
addr16
lock
cli
int
loop
sbb
int3
das
xchg
imulb
and
mov
mov
inc
xchg
push
jno
or
and
fcomi
fwait
hlt
dec
sub
loopne
fwait
inc
xchg
mov
imull
into
jmp
sbb
sbb
xchg
pop
lret
andl
pop
icebp
jg
cmp
scas
gs
or
cmp
or
gs
push
add
stos
cmpsl
jbe
cli
pop
shlb
mov
stc
mov
int
fisubl
dec
push
dec
fildll
pop
and
xlat
xor
negb
jmp
lds
mov
inc
popa
sti
call
ss
push
or
fcmovb
push
popf
add
int3
shll
insb
pop
mov
jne
and
sti
and
fdivrl
sarb
jae
fwait
or
xchg
mov
idiv
inc
inc
pmaxsw
mov
or
pop
sar
ds
jns
cmp
push
repnz
and
fwait
jb
leave
inc
dec
es
aaa
aam
scas
cmp
ud1
sub
call
jbe
xor
fwait
jg
push
subb
in
nop
jecxz
pusha
add
or
mov
and
nop
xor
clc
add
add
pop
xor
loope
sbb
cmc
fwait
and
push
adc
xchg
repz
jo
inc
jle
xor
repz
les
fldlg2
sbb
mov
xchg
test
or
or
push
mov
push
jle
pop
mov
pushf
adc
push
fcmovnu
push
jnp
aad
divb
shr
inc
repz
imul
jge
or
test
nop
movsb
fwait
cmpsb
dec
add
loopne
repz
or
mov
and
push
imul
push
aad
pop
pop
scas
mov
xchg
and
pop
movl
push
xor
daa
divl
inc
movsl
outsb
push
shlb
mov
xchg
push
and
jge
es
rcpps
nop
mov
add
popf
repnz
sbb
cmp
mov
stos
xchg
add
mov
xor
je
sti
imul
loopne
in
cmp
and
pop
stc
subb
push
jb
loope
loopne
repnz
inc
xor
in
mov
orb
cmc
stos
push
adc
adc
xor
imul
pop
xor
scas
lea
sbb
cmpsl
dec
sub
sub
pop
imul
loope
cmp
incb
ss
decl
cmp
movsb
repnz
push
movsl
dec
cli
mov
in
faddl
jecxz
and
cli
lret
mov
in
add
loopne
jecxz
inc
push
cmpsb
dec
fists
mov
shrb
sbb
data16
stos
sbb
jge
fsubs
cmpl
lcall
dec
sub
std
sahf
mov
aas
and
push
xor
mov
pop
stc
inc
aam
pusha
add
scas
mov
xor
sbb
movsl
aad
push
pop
into
push
fs
mov
add
mov
jbe
sbb
shl
xor
mov
int
xor
inc
orb
mov
popf
inc
aas
nopl
cmpsb
pushf
cmpsl
lret
orb
xor
jp
shlb
dec
mov
in
sbb
sub
fists
test
int3
push
movb
pushl
movsb
dec
mov
clc
repz
mov
dec
in
movsl
ljmp
mov
scas
mov
cmpl
mov
jge
test
loopne
dec
bound
push
jge
sub
and
in
cld
dec
lods
mov
cmp
or
and
jmp
push
fwait
pop
xor
sub
adc
sti
out
jg
add
jnp
pop
stos
loope
xor
testb
mov
push
xchg
push
fdivl
outsl
gs
xchg
sahf
or
mov
jnp
les
ljmp
subb
dec
loope
les
jbe
stos
stos
int3
stos
cs
cmpsl
into
mov
cmp
outsl
push
xor
inc
jnp
hlt
push
mov
rorb
into
call
popa
add
int
mov
dec
push
stos
xchg
push
dec
cmp
pop
pop
int3
rolb
mov
movsb
test
mov
pop
jne
pusha
mov
fwait
cmp
jmp
insb
mov
repz
test
test
inc
pop
mov
in
xchg
stos
xor
pop
cli
adc
xchg
stos
pop
xor
or
or
jnp
sbb
popa
sahf
mov
hlt
xor
jg
imulb
call
adc
xor
dec
loop
bound
jg
dec
inc
mov
je
and
push
jnp
inc
xchg
jl
pop
hlt
jge
call
pcmpeqd
cmp
fs
ffreep
pop
out
and
cli
ret
or
sbb
sbb
push
sbb
cmp
movsl
inc
loop
test
and
call
mov
adc
dec
cwtl
inc
test
add
sbb
mov
or
xor
push
mov
adc
rcl
pop
pop
xchg
repz
fsubrl
xor
inc
or
cs
in
pop
or
mov
adcl
sbb
push
xor
pop
jb
stos
pop
mov
pop
jae
cmp
add
dec
mov
aad
imul
in
in
xchg
icebp
repz
xchg
fiadds
rclb
xorb
sbb
sarl
inc
and
mov
xor
cmp
inc
int3
cmp
test
mov
mov
ja
adc
mov
int3
and
dec
lcall
push
int3
add
lods
test
mov
cld
cmpl
fistps
adc
jbe
xchg
std
shlb
repnz
mov
pop
sub
lds
in
ret
iret
out
rorb
sub
adc
push
stc
dec
or
shrb
dec
cmpsl
lock
cmp
dec
dec
imul
or
iret
scas
loopne
adc
into
pop
je
xchg
xlat
mov
je
jle
inc
in
scas
jns
mov
ljmp
xchg
mov
xlat
mov
mov
stos
dec
fistpll
sbb
in
xor
add
rorl
pop
lea
flds
and
pop
jb
cwtl
icebp
fistpl
push
std
pop
pop
fsubl
sbb
iret
mov
out
aad
jl
mov
jno
cmpsl
mov
xor
push
dec
mov
dec
iret
pop
sti
dec
mov
pop
sub
xor
push
add
jne
call
pop
loopne
xchg
addr16
test
lcall
ds
insb
loop
xor
adc
lods
test
cmp
sti
or
ds
sub
mov
int3
mov
cmp
mov
push
xchg
cmc
shr
stos
mov
jae
stc
mov
mov
jns
xchg
dec
and
int
je
xor
mov
mov
and
cmp
mov
cli
or
lods
jb
mov
out
cmp
rcl
mov
adc
loopne
push
pop
xchg
sub
jle
loop
pop
pusha
push
scas
sub
jmp
stos
sbb
cmp
lock
jg
cmp
push
mov
stc
mov
pusha
ja
jmp
and
dec
xchg
cltd
orl
push
aaa
cmp
jne
in
adc
add
push
pop
cmp
push
rorl
dec
jbe
aam
mov
in
mov
cmp
call
fisubs
ret
add
movl
sbb
mov
cmp
push
ret
gs
cmp
pop
call
adc
xchg
mov
sub
lahf
test
test
pusha
lret
or
outsb
pop
dec
xchg
mov
or
outsl
cmp
movsb
ss
add
and
xchg
stc
dec
xchg
scas
xchg
push
sbbb
push
rcrb
popf
in
mov
andl
dec
mov
lret
ret
dec
pop
mov
or
mov
cli
cmp
inc
mov
sub
test
scas
pushf
out
ss
xchg
xor
pop
push
push
cli
and
jecxz
stos
repz
loop
sub
lds
push
pop
insl
push
mov
or
dec
inc
vpunpckhwd
imul
push
xor
insb
out
jo
out
add
test
xor
mull
push
andl
fcomp
add
cmc
lock
mov
or
push
and
fwait
lcall
add
push
cmp
repz
lcall
jmp
sub
push
test
xchg
cmc
xor
add
sahf
pusha
test
adc
cmp
xor
inc
out
fdivr
xchg
xchg
test
in
fs
mov
xchg
cmc
dec
sbb
scas
jnp
imul
ljmp
pop
rorl
mull
push
daa
out
cmp
jb
fisubrl
std
call
push
mov
out
mov
sub
mov
out
xchg
bound
pavgw
sbb
outsl
mov
fxch
daa
push
push
arpl
jecxz
mov
jmp
test
pop
or
mov
cmc
add
cwtl
mov
xchg
in
pop
lahf
loop
sub
enter
icebp
popa
iret
xchg
das
or
mov
push
std
adc
mov
test
jg
fdivrl
insl
hlt
loopne
in
mov
rclb
push
out
pop
loop
inc
in
mov
xor
in
pop
lahf
mov
inc
in
push
and
mov
cs
sti
cld
ja
pop
ja
pop
adc
fiaddl
mov
jp
and
mov
xlat
push
call
or
sub
sti
or
push
mov
mov
orb
push
adc
mov
adc
inc
aas
lret
inc
inc
pop
adc
sub
subl
into
out
bound
mov
pop
repz
jge
cmp
and
shl
cmovnp
in
jo
enter
dec
mov
push
xchg
int3
sub
jnp
xchg
jp
cli
loopne
jmp
lret
lods
pop
mov
ret
inc
cmc
jle
sub
insb
rolb
mov
aam
rorb
icebp
enter
ret
adc
or
push
push
xor
lds
dec
xchg
adc
dec
or
cltd
loope
inc
arpl
mov
mov
jbe
outsl
gs
rcrl
sbb
inc
scas
jo
dec
or
in
lock
out
jge
xchg
je
in
xor
pusha
xor
lahf
out
mov
fwait
pop
mov
sbbb
push
and
mov
pop
push
xor
cld
fsubrs
lods
pop
popf
mov
push
das
add
roll
cmp
jecxz
mov
addl
sti
jb
dec
sub
mov
cwtl
enter
pusha
loope
cmp
and
mov
sub
sti
sarl
jp
mov
or
or
rcl
stos
mov
jmp
dec
stos
pop
cmpb
leave
pop
sub
push
xchg
testb
nop
push
mov
or
lods
and
cmp
hlt
cld
dec
cmovbe
xor
testb
adc
jp
ret
out
inc
ds
rol
das
out
loopne
inc
dec
in
pop
push
or
push
mov
and
sar
data16
out
xor
in
sub
cmp
dec
loopne
jno
mov
fistl
sti
cmp
inc
shlb
fldt
mov
call
ss
popf
xchg
or
xchg
xor
shlb
mov
fsubrp
scas
xchg
sbb
jecxz
repz
subb
pusha
jp
push
ss
mov
sti
cld
mov
out
es
fsubrp
xchg
stc
mov
lret
mov
xor
xchg
js
push
pushf
and
pusha
pop
push
pop
jle
jnp
lcall
add
sub
dec
lods
out
jl
jae
or
mov
fidivrs
pop
xor
je
mov
jg
in
pushw
push
add
dec
push
shr
inc
cmp
jl
test
dec
fsubp
or
sub
add
insb
xchg
in
shrb
scas
scas
out
sbb
std
cwtl
rolb
mov
lret
aaa
bound
xlat
and
outsl
pop
stos
mov
mov
and
adc
sbb
sbb
cmp
add
mov
ja
adc
jne
cmp
movsb
data16
and
jecxz
mov
push
and
sbb
cmp
lock
mov
or
sbb
gs
outsb
mov
sti
inc
test
in
xchg
push
xchg
inc
jbe
repnz
dec
es
jbe
xchg
xor
call
sbb
jnp
mov
mov
jge
pop
xchg
jb
sub
ja
or
or
in
xchg
pop
pushf
insl
aaa
test
lods
mul
mov
cmp
cmp
or
jl
fimuls
fldt
outsl
mov
ficoms
pop
cmpxchg
mov
pop
cwtl
std
and
inc
push
push
mov
sub
sbb
inc
and
sub
mov
and
add
leave
add
mov
arpl
adc
lret
mov
jle
pop
pop
mov
lock
add
in
call
sub
insb
lcall
jmp
xor
rorl
pusha
dec
movsl
mov
out
or
std
xor
fs
cwtl
and
addr16
btc
adc
js
mov
mov
sub
jo
inc
fwait
imul
insl
filds
addb
mov
adc
adc
aas
movsb
push
xchg
cmp
sbb
jmp
inc
cltd
jbe
sbb
es
aad
cli
rcl
sub
mov
mov
pop
out
push
fimuls
sarb
xchg
cltd
or
cmp
sub
sub
enter
call
loop
int3
push
xorb
push
sub
scas
push
das
out
ss
repnz
std
cli
inc
repnz
cld
ret
xchg
ljmp
mov
nop
push
adc
hlt
fs
dec
pop
lahf
out
cwtl
jae
int
dec
lret
inc
lea
adc
sub
ret
sti
inc
sahf
rcrl
scas
xchg
push
shll
fninit
call
mov
cli
hlt
sbb
shlb
loope
hlt
adc
mov
xchg
inc
pop
push
ficompl
or
gs
pop
sub
aas
fwait
push
pop
jmp
push
xchg
cmp
out
leave
adc
out
sbb
sbb
sbb
xor
dec
xor
cmc
inc
in
or
es
or
sbb
adc
push
lret
cli
add
insb
scas
mov
jne
jae
loopne
push
inc
sub
xor
push
pop
mov
xor
and
cli
loope
je
push
loope
test
in
fcoms
hlt
leave
daa
std
popf
mov
xor
inc
mov
andb
mov
cmp
aaa
jns
scas
lods
push
int3
push
inc
lahf
add
sub
sbb
fwait
pop
leave
inc
pusha
shll
out
movb
jno
loope
pop
test
mov
test
cmp
sub
cmp
aad
xchg
and
test
pusha
shlb
mov
rcr
jmp
jo
fists
test
jno
out
fwait
jg
cmp
and
and
mov
pop
mov
sti
inc
mov
push
pusha
daa
inc
repnz
arpl
fsub
enter
fidivs
push
mov
xchg
add
bound
mov
sub
fisubrl
aad
js
pop
mov
dec
push
mov
xchg
scas
jno
outsl
mov
test
int
addr16
into
mov
inc
cmp
outsl
test
xchg
imul
bound
shll
mov
sub
xchg
jnp
or
int
loope
hlt
call
pop
pop
dec
mov
cmc
outsl
mov
dec
sbb
pop
mov
mov
dec
fisubrs
lret
ss
lret
pandn
stc
jno
mov
jge
cs
popa
sub
imul
jns
jns
test
and
cmp
push
call
pop
cmp
lret
mov
orb
push
and
test
aam
add
push
nop
pop
jmp
mov
push
mov
mov
fs
pushf
aam
sub
pop
cmp
pushl
pop
xchg
les
shrb
adc
adc
add
adc
fmul
popf
pop
fs
aas
mov
ss
jle
jl
xchg
xor
icebp
pop
dec
ss
add
dec
mov
dec
test
cmp
bound
fwait
cmp
je
lret
xchg
cmpl
jg
out
lcall
pop
adc
mov
pextrw
lods
das
rcll
cltd
in
push
nop
int3
add
cld
scas
mov
in
xorb
outsl
and
jne
mov
cmpsl
and
add
adc
or
xchg
pop
shll
jmp
mov
add
fpatan
movsb
dec
out
lret
inc
das
lock
or
rcrl
mov
cmp
rorl
and
cld
inc
testb
mov
ja
jp
and
cmp
or
xor
mov
xchg
adc
shlb
movsb
mov
jecxz
das
mov
cmp
leave
ljmp
push
fistpl
mov
fldt
hlt
out
imul
mov
mov
adc
sti
insb
hlt
mov
lods
lret
into
sub
pushf
xchg
loope
out
ljmp
pop
xor
jb
fwait
loop
fldl
cltd
sbb
lahf
clc
push
jl
lds
test
or
movsl
dec
pop
jge
cmp
pop
mov
fistl
jle
push
mov
jge
xchg
cmpsl
icebp
sbb
pop
into
mov
add
sub
jle
add
push
pop
dec
ror
mov
mov
adc
in
sbb
pop
enter
mov
add
rcr
push
test
fcmovb
in
mov
xor
lock
xchg
jnp
or
repnz
jae
xchg
push
roll
add
pop
rolb
xor
or
cld
test
xchg
clc
in
adc
cmp
mov
cmp
xchg
aas
ljmp
inc
mov
xchg
testl
f2xm1
or
popa
mov
push
jp
lds
or
adc
jbe
jmp
cld
and
fisubl
mov
add
or
inc
rdmsr
outsb
flds
xor
stos
inc
sbb
lock
cmp
pop
frstor
xchg
push
inc
rcrb
push
mov
fcomps
cmp
mov
sbb
sahf
scas
push
sti
lods
aaa
insl
subb
push
nop
and
jb
fsub
jmp
idiv
and
add
rcrl
push
push
in
scas
xchg
int3
jb
movsl
add
push
add
test
call
fs
pop
out
std
xor
cmpsl
push
or
stos
iret
insb
movsl
pop
mov
stc
and
test
ss
xchg
sbb
push
xor
btcl
aam
dec
cmpsl
and
jae
into
rcrb
adc
add
pop
lea
in
out
cs
adc
dec
xchg
mov
scas
xor
ds
mov
push
lock
aad
pop
clc
insb
dec
pop
xor
ficoml
add
jo
sbb
dec
push
adc
in
push
mov
sub
sbb
loope
cmc
movsb
je
hlt
xchg
in
or
fisubl
and
push
imull
adc
xor
mov
imul
aaa
add
movq
jns
and
outsb
inc
ss
aad
lcall
dec
imul
out
jnp
adc
aam
dec
lock
imul
enter
adc
push
xchg
add
adc
addr16
inc
loopne
pop
and
inc
enter
mov
sbb
lret
adc
sub
sbb
lret
mov
aaa
mov
sbb
pop
mov
cmp
mov
xor
xchg
mov
and
loope
das
jb
push
xchg
inc
cltd
adc
mov
mov
mov
mov
jbe
mov
or
fcmove
push
sbb
sti
mov
fmuls
daa
mov
mov
sbb
test
fldt
repnz
push
push
adc
dec
dec
out
pop
lods
repz
add
xor
mov
cli
std
cwtl
outsl
and
fs
push
or
or
dec
inc
jne
out
pop
stos
into
pop
or
inc
call
lea
lock
pop
jns
lret
mov
notl
loop
add
fdivrl
or
sahf
mov
mov
shrl
push
fnstsw
jb
rcrl
imul
push
mov
mov
mov
outsl
inc
cmp
gs
sbb
and
inc
sub
lds
adc
inc
mov
movaps
mov
ljmp
push
dec
cmp
popa
jecxz
jnp
pop
push
das
fnstcw
sub
xor
cmp
mov
je
lods
iret
lds
add
dec
aam
enter
test
fld
insb
fdivrs
aas
mov
into
orl
loope
xor
push
mov
cmp
shl
lcall
cmp
jns
xor
sub
fisubrl
xor
movsl
inc
sti
pop
jl
and
sub
push
mov
and
mov
btc
mov
scas
xor
inc
adc
push
shlb
insb
scas
or
scas
ret
sbb
test
and
add
fwait
sbb
scas
inc
out
adc
sub
jp
xor
rcl
jle
ljmp
cmp
push
hlt
data16
stos
add
ret
test
mov
idivl
jae
sub
stc
clc
sti
addl
js,pt
add
outsl
inc
sub
and
jnp
add
lods
negl
stc
iret
mov
sbb
nop
jno
xor
stc
add
xchg
adc
scas
push
ss
outsb
imul
jo
cmp
cmp
cmp
add
pusha
cmp
and
mov
push
lods
das
test
xchg
cmp
ret
notb
les
cmpsb
aas
lcall
iret
in
add
lret
arpl
inc
rep
cmp
ljmp
add
mov
jo
jnp
mov
iret
lret
or
xchg
jg
mov
out
sub
int
xor
push
outsl
movsl
popf
testb
cmc
mov
add
insb
pop
xchg
mov
jbe
test
les
aaa
and
lea
or
jl
clc
xor
pop
ret
cmp
sahf
cli
jg
mov
addr16
cli
mov
cmpsb
push
xor
push
lcall
int3
fs
shlb
pusha
sub
icebp
xor
xchg
cmp
imul
and
jecxz
loop
pop
or
scas
pop
inc
test
clc
cld
pop
fs
jae
gs
adc
aam
and
mov
pop
dec
jmp
cmp
mov
insl
xlat
push
ror
stos
int3
iret
in
sub
testl
fs
das
pop
imulb
mov
mov
fists
ds
cmpsl
adc
or
pop
xor
mov
lock
lods
mov
lret
xchg
pop
mov
jecxz
inc
ljmp
adc
inc
icebp
nop
and
subb
outsb
lcall
sub
cmp
iret
pop
cmp
sbbb
aaa
scas
divl
sbb
aam
test
and
add
aam
js
sbb
adc
daa
inc
jo
daa
lods
lea
xor
out
jae
xor
mov
inc
shl
dec
in
gs
lock
scas
gs
movsl
push
enter
jbe
cmpsl
insl
pushf
test
dec
fs
ljmp
pop
adc
adc
shrl
push
cmpb
int
push
sahf
xor
icebp
mov
xlat
scas
sbb
mov
or
mov
pop
sahf
stos
ljmp
aas
mov
push
inc
fwait
jecxz
mov
push
out
inc
ret
sbb
pop
out
xor
mov
inc
mov
mov
adc
and
es
mov
fiaddl
xchg
stos
mov
mov
sub
cmc
xor
xor
xor
aaa
mov
sub
rcl
in
inc
pop
jno
xor
repz
iret
mov
pop
xchg
mov
fildll
pop
xchg
mov
or
nop
sbb
movsl
inc
and
repz
push
test
loopne
and
or
std
sbb
add
lret
push
rcll
or
f2xm1
mov
mov
mov
negl
imul
mov
scas
jl
adc
clc
cwtl
sub
push
add
push
les
daa
imul
mov
xlat
or
jle
adc
push
popf
adc
mov
jbe
pop
popf
mov
int
mov
stos
ret
adcl
sahf
mov
jo
aam
and
mov
addb
sub
add
popf
push
sub
mov
sub
ret
lcall
xchg
das
out
jmp
aam
test
cmc
pop
add
fdecstp
sbb
xchg
sbb
mov
cmpsl
int3
dec
inc
sub
push
popa
mov
les
or
cmc
lret
mov
cmpsb
jp
addl
mov
daa
ja
add
jo
cmpsl
cli
mov
aam
sarb
in
call
and
add
bound
lcall
mov
jl
cmp
and
pop
mov
lret
mov
inc
movsb
mov
cmpl
ret
subl
int3
push
sbb
enter
in
sub
lods
or
leave
je
sbb
mov
mov
js
dec
jecxz
and
pop
sarb
sub
mov
daa
lret
aad
es
jg
mov
loop
push
xor
cmp
adc
clc
pop
or
inc
mov
mov
iret
std
hlt
adc
dec
arpl
rorl
pop
mov
push
xchg
inc
jo
sti
add
and
cltd
mov
mov
jno
adc
shll
pop
xor
adcl
push
daa
in
inc
dec
scas
sub
pop
mov
add
adc
inc
xchg
and
cmp
insb
dec
scas
lcall
xchg
sbb
dec
adc
hlt
stos
and
mov
jmp
stos
ret
icebp
aas
cmp
mov
xor
mov
jmp
loop
push
lret
mov
mov
and
in
stos
sbb
mov
mov
mov
sub
mov
pop
sub
pusha
and
in
fstpt
or
into
push
mov
xor
and
cmp
mov
std
add
inc
cmp
pop
ret
faddl
std
rep
jb
fistpll
mov
sar
mov
in
subb
mov
ret
pop
xchg
mov
out
arpl
jns
sbb
mov
cltd
shll
sbb
jno
jbe
push
add
mov
and
stos
ja
in
xor
lods
cli
lret
xchg
pop
pop
shl
out
jmp
cmp
and
and
scas
lret
out
mov
sbb
mov
dec
pop
lds
pop
push
cmp
or
in
adc
fidivrs
mov
dec
lea
popf
adc
push
cmp
jbe
sub
xchg
test
rcl
out
mov
adc
aas
insb
sbb
nop
pop
imul
mov
insb
fimull
add
add
xchg
cmpsl
push
xor
xor
adc
popa
mov
inc
push
sahf
int3
jns
and
pop
push
mov
pop
decl
jmp
arpl
sti
scas
mov
jg
insl
stos
inc
sub
mov
jp
push
arpl
loop
out
jae
push
lods
stos
mov
cmp
adc
xchg
lcall
add
repz
jmp
xchg
sub
xor
xor
sbb
inc
sbb
mov
cwtl
or
insl
push
inc
and
popa
sbb
inc
fwait
sbb
sub
inc
cli
mov
sarb
sub
xchg
adc
js
xchg
xchg
fs
cmp
mov
lods
mov
mov
pop
js
lods
test
mov
adc
lcall
inc
dec
ret
xchg
jne
pop
xchg
mov
adc
lret
andb
and
mov
push
fmulp
inc
lahf
in
sbb
xlat
out
fbstp
pop
inc
fstps
nop
popl
cmp
fwait
dec
and
mov
sahf
or
sbb
mov
sbb
add
lcall
jne
icebp
movsb
mov
cltd
mov
xchg
sbb
push
fs
int3
dec
pop
adc
pop
or
ljmp
mov
negl
or
cmp
frstor
vpaddusw
mov
and
xchg
aas
call
rcrb
dec
push
clc
cmp
mov
cltd
stc
push
cmc
sbb
mov
cmp
repz
and
mov
outsb
sub
popf
dec
and
xchg
mov
lds
loop
mov
dec
rcll
push
ljmp
sbb
pushf
sti
int3
lahf
sub
xor
mov
xor
push
shlb
or
rcl
add
out
xchg
les
push
popl
or
rcrb
ds
test
cmp
push
loope
into
sub
insb
insb
cmp
out
outsl
emms
test
xchg
jnp
sbb
inc
int
xor
movsb
pushf
mov
rcll
arpl
mov
ja
cwtl
in
scas
sbb
sub
xchg
mov
call
ret
and
push
inc
rcrl
addl
and
cmp
gs
pusha
inc
pushw
jle
dec
mov
fimuls
out
jmp
sahf
cwtl
and
jo
js
or
cmp
jbe
lods
test
inc
add
add
inc
sbb
jno
mov
mov
mulb
xchg
in
mov
int3
ja
jae
into
mov
mov
pop
xchg
ret
gs
fistps
inc
pushf
cmp
call
and
aam
call
clc
sub
cs
and
xlat
test
adc
xchg
dec
jae
sahf
pusha
sti
test
cli
ret
or
mov
jno
xor
into
and
stos
cmc
or
or
addl
stc
ja
push
aad
out
mov
adc
repnz
jmp
movsl
push
push
fsubrs
fsts
push
inc
cmp
std
int
out
scas
movsw
xchg
or
mov
enter
adc
fcomps
sub
scas
mov
ror
lea
xchg
into
xor
add
push
pop
pop
fwait
shll
sbb
inc
push
pop
cmp
ljmp
out
in
pusha
outsb
loop
xchg
test
mov
sti
clc
dec
je
call
cmp
out
cmc
iret
pop
pop
add
popa
cmp
popf
arpl
js
outsb
das
cmpsl
scas
or
xor
mov
pop
pop
ss
ljmp
jp
jo
adc
dec
out
lock
mov
or
and
xchg
mov
adc
push
nop
cltd
les
jae
insl
test
pop
mov
jb
popa
rorl
jae
push
sahf
into
xchg
sti
sarl
lds
sbb
aaa
sub
add
mov
push
rcr
les
je
xor
das
js
int3
fcompl
imul
pop
sub
jmp
out
ds
pop
sub
incb
mov
pop
or
movsb
mov
jne
sub
inc
fucomp
inc
push
mov
push
pop
mov
xchg
leave
mov
cmc
sbb
subl
loope
insl
mov
lods
out
dec
pop
push
jo
add
out
shll
imul
call
push
cmp
mov
mov
ret
les
sub
es
nop
in
call
cld
adc
nop
xchg
jecxz
dec
test
add
ret
test
sahf
cmp
ret
xor
or
int
shll
xor
sub
inc
inc
sbb
cmp
das
xchg
enter
aas
in
fcompl
and
rcl
push
pushf
mov
jmp
les
nop
mov
mov
fcompl
imul
lods
adc
pop
arpl
jg
sti
wrmsr
jmp
stos
data16
pop
xchg
rcll
dec
and
sbb
mov
addr16
mov
sub
dec
inc
inc
xchg
jnp
cwtl
out
push
jne
pop
sbb
xchg
jg
sarl
mov
mov
fldt
pop
leave
aas
mov
fsubr
testb
mov
bnd
xchg
mov
pop
std
xor
rcrb
ds
test
pop
leave
add
inc
stc
mov
add
stos
xor
in
dec
pop
and
imul
jnp
adc
and
sub
cmp
mov
rorb
aam
xlat
ljmp
jecxz
rcr
sahf
xchg
push
imul
aas
movsl
repnz
test
cmp
outsl
iret
repnz
dec
inc
test
ds
inc
sbb
xor
push
iret
push
es
sbb
aas
adc
mov
mov
daa
sbb
and
add
xchg
jae
decb
stc
push
aaa
xchg
test
adc
ds
jb
jae
xor
lahf
jmp
or
nop
lahf
push
mov
stos
sbb
int3
sub
add
ss
sub
push
add
pop
sbb
cs
fs
and
xchg
mov
mov
jnp
in
mov
mov
das
imul
sbb
mov
sahf
in
or
int
add
repz
pop
int
jns
lret
cmc
js
sub
test
ror
test
aam
mov
hlt
mov
xchg
mov
enter
cwtl
and
pop
dec
sar
jge
push
testl
mov
insb
sbb
sahf
cmpsl
cmp
pusha
rorb
fistl
das
ljmp
add
adc
adc
inc
adc
out
mov
ficompl
clc
push
in
xor
dec
shlb
xchg
xor
mov
adc
dec
rolb
push
cmp
lcall
dec
adc
test
sti
rcll
ret
and
or
in
or
lret
cmp
mov
lahf
mov
aas
loope
xlat
pop
push
jmp
iret
mov
mov
frstor
in
mov
rcrl
clc
pop
mov
in
arpl
sub
sub
mov
jmp
das
sub
sub
pop
call
sahf
out
or
and
aad
mulb
fiaddl
popf
or
adc
push
pop
outsl
sti
dec
rcrb
sub
aas
or
icebp
bound
push
cltd
mov
aaa
rcrl
pusha
or
push
adc
pop
insl
aad
cmc
nop
data16
lods
lock
xlat
and
mov
xchg
shrl
jno
pop
in
aas
aam
pop
push
fisubl
addl
lahf
lock
ret
arpl
lret
orb
mov
mov
inc
enter
out
cmpsb
leave
inc
pop
or
pop
lret
pop
pop
jmp
repnz
ret
add
and
in
dec
insb
test
add
subb
pop
in
into
daa
call
jg
xor
mov
ljmp
outsb
es
and
addl
int3
mov
into
xchg
stc
or
inc
add
arpl
addl
mov
or
sbb
xchg
fsub
adc
daa
dec
flds
ficoml
aam
loop
stc
pop
xor
cmp
and
xchg
jl
mov
pop
xorl
sbb
xor
dec
je
cli
roll
fcomps
aad
ds
cli
dec
jmp
jo
bound
mov
out
dec
hlt
dec
ffreep
mov
mov
jae
xorb
cmpsl
in
adc
cmp
fcoms
cmpsw
push
mov
aas
loop
mov
jne
movsb
js
and
mov
dec
mov
std
or
jg
fwait
jo
cmpsb
popf
cmp
adc
fcomps
ss
fistpl
cmp
xchg
daa
push
and
mov
sbb
add
roll
insl
cmp
adc
lea
jno
mov
movsl
dec
out
add
mov
push
pop
push
sbb
outsb
xor
sub
mov
test
xor
in
push
jnp
pusha
cmp
sbb
fs
sub
and
sub
popa
mov
or
push
push
mov
imul
push
insb
mov
and
stc
je,pt
mov
sub
push
add
pop
and
cmp
ljmp
test
sbb
out
cmp
inc
lock
popfw
andb
inc
xlat
sbb
mov
mov
jns
xchg
adc
jge
pop
call
lahf
xchg
idiv
adc
sbb
nop
mov
repz
insb
test
fs
pop
xchg
int
imul
xchg
sub
cmpsl
add
pop
mov
dec
pop
jl
mov
push
pop
mov
cltd
je
jl
cmp
daa
repnz
subb
jnp
leave
sbb
test
push
inc
sub
sub
test
rcll
adc
test
cmp
data16
mov
pop
rol
mov
enter
xchg
sahf
cltd
xor
dec
fwait
jmp
shl
out
jns
aad
cmpsb
xchg
aas
clc
dec
pop
jbe
mov
scas
inc
jmp
and
mulb
daa
jmp
add
jae
or
pop
cmp
push
jl
insl
xor
sahf
sub
out
push
mov
inc
and
rclb
aas
into
add
movsb
jne
sahf
scas
push
and
inc
mov
popa
pop
fwait
push
sub
push
out
in
jae
insb
adc
addl
mov
sbb
xchg
sahf
rcrl
jbe
aaa
test
and
jg
cltd
add
jle
inc
lock
dec
pop
xor
test
push
pop
ret
jne
loopne
das
ficompl
dec
mov
inc
cmp
fdivp
mov
stos
sti
lods
movsl
jae
and
out
cld
mov
je
jp
dec
mov
lahf
add
jne
jbe
divb
xchg
int3
mov
out
call
fbstp
cmpsb
or
add
loope
scas
cmp
fisttpll
dec
test
dec
out
mov
filds
mov
test
pop
mov
addr16
movsb
sub
ljmp
mov
and
dec
push
cmp
loop
mov
lods
fadd
popa
inc
push
add
jb
or
and
cmpsb
movsl
lahf
cmp
sbb
cmpsl
jmp
push
adc
std
mov
mov
incb
shlb
and
mov
std
movaps
cmp
jns
pop
xchg
xor
xchg
jns
fsub
adc
subl
adc
dec
xchg
iret
stos
add
sti
orb
sub
inc
sub
mov
jg
inc
pop
call
nop
add
shlb
cmp
test
mov
test
mov
jp
rolb
mov
adc
xor
jnp
das
adc
sbb
sub
push
add
sub
shll
loope
xor
sbb
inc
mov
lea
cmc
pop
aaa
ret
ja
es
lods
mov
ss
adc
mov
in
push
xorl
or
ficoml
jmp
std
fnstenvs
movsl
cmpsl
cmpsb
cmp
fmuls
pop
dec
fcomip
int
shll
mov
inc
cmp
mov
jns
daa
fnstsw
mul
dec
into
imul
inc
pop
jo
and
icebp
hlt
pop
ljmp
cli
or
sbb
xchg
jp
add
inc
shlb
pop
cwtl
push
orl
lds
xchg
testl
pop
sti
gs
scas
mov
out
mov
sarb
fiadds
cwtl
int3
ret
jle
cld
ds
mov
imul
adc
cmpsb
push
xor
sbb
shrb
jmp
or
adc
fstpl
xor
mov
push
cmpsl
iret
jle
int
test
fdivr
push
mov
icebp
frstor
insb
popa
dec
xchg
inc
xchg
inc
mov
cmp
fwait
push
fcmovb
cmpsl
pop
and
jl
jbe
daa
xor
jno
pop
sub
mov
ret
outsl
and
add
cmpsb
int3
xor
xor
fistps
rcrb
xor
and
inc
std
test
gs
push
lods
popf
xchg
loop
pop
mov
lahf
test
xchg
popa
rcll
icebp
int
and
mov
test
or
rclb
sub
outsl
cmp
fwait
test
arpl
sub
subps
dec
inc
ja
add
cmc
ficomps
andl
aas
pusha
or
das
xlat
jmp
inc
xor
and
iret
stos
jl
add
jb
insl
iret
psubb
adc
cmpl
xor
es
fistpl
add
lret
aad
xor
int
outsb
notb
cmp
xchg
pop
ja
out
cmp
out
hlt
push
out
pop
xlat
sbb
cmpsb
jmp
lcall
mulps
and
sbb
cmc
mov
outsl
cli
mov
jnp
arpl
or
or
imul
dec
fwait
shl
jecxz
pop
insb
ds
and
les
dec
out
dec
cmp
xchg
pop
dec
xchg
lret
jbe
iret
xchg
in
lret
lsl
andl
iret
push
jne
sarl
js
mov
pop
daa
dec
scas
fs
addr16
push
scas
lret
add
inc
jmp
fwait
mulb
in
inc
movsl
and
jecxz,pn
test
mov
mov
and
inc
mov
sub
mov
mov
pusha
jmp
dec
aam
jnp
je
pop
test
fs
lock
or
cmp
out
insb
xor
pusha
xchg
mov
orb
dec
and
xorl
xorl
xlat
mov
js
mov
cmp
outsb
xlat
sbb
pop
push
jae
mov
stos
ret
cmpsl
mov
scas
cli
std
pushf
in
mov
cld
bound
xor
pop
clc
push
add
jmp
lods
aad
jns
gs
jae
push
stc
test
cmp
cmp
pop
push
xchg
or
lds
jl
pop
fildll
hlt
inc
lcall
adc
mov
mov
rcrb
jmp
movsb
xchg
sbb
or
xchg
lret
stos
pop
int
jno
idivb
jp
add
fstp
jge
mov
xorb
cwtl
in
mov
xor
inc
push
ds
push
repnz
xlat
xlat
imul
pop
shlb
mov
out
cmc
push
int
cmp
fistps
push
xchg
sbb
or
push
or
lcall
pop
xor
pop
aaa
mov
iret
dec
and
cmc
sbb
add
xlat
adc
mov
dec
push
xchg
ja
lods
mov
dec
cmp
push
mov
mov
popf
movsb
jg
push
push
push
push
iret
sub
jne
or
dec
mov
pop
rcr
rclb
sbb
add
ret
cmpl
mov
inc
fiadds
and
je
and
test
cld
dec
lods
push
jge
mov
sub
mov
pop
or
mov
cmp
mov
push
mov
fisttps
jns
int3
sahf
stos
add
adc
dec
cs
xchg
cld
fldcw
lret
adc
inc
push
in
adc
mov
aaa
sub
fwait
test
push
mov
add
or
lods
add
sub
pushf
stos
stc
in
popa
sti
jl
cld
xor
rcrb
and
jl
aam
xchg
xchg
mov
negl
push
sbb
stos
loopne
fcmovb
pop
mov
inc
fistpl
xchg
lahf
in
icebp
shlb
xlat
lret
in
dec
mov
mov
or
jo
and
adc
mov
mov
jp
scas
xchg
push
mov
push
lock
cltd
pop
pop
jmp
jb
xchg
mov
movl
sti
lea
lea
stos
bound
xchg
mov
imul
mov
stos
push
lahf
les
xor
push
pop
lcall
jno
scas
repz
push
push
lods
scas
adc
repz
inc
mov
mov
scas
cwtl
lock
or
jl
xchg
xchg
inc
push
rclb
push
ret
iret
ret
fidivrs
cmp
mov
mov
int
fimull
cli
mov
fisubl
mov
test
push
xor
cmpsl
jb
in
test
orb
fists
lods
mov
fistpll
mov
dec
jg
pop
fnstcw
jb
xor
mov
add
mov
jl
cld
je
adcl
dec
fidivl
sub
push
or
adc
pop
adc
xchg
hlt
outsl
test
lret
mov
bound
lods
repnz
xchg
addl
mov
xchg
push
mov
scas
dec
cli
lar
xlat
pop
sub
cmpsl
adc
fwait
stos
or
push
movsb
sbb
mov
test
bound
xchg
fimuls
push
mov
push
add
nop
nop
hlt
gs
sbb
xchg
dec
ja
sti
cmpsl
sbb
ds
imul
jmp
cli
aad
sbb
sub
aaa
add
aam
cmp
jne
adc
pop
mov
xchg
jmp
inc
dec
cs
cmpl
cltd
icebp
arpl
int3
iret
cs
repz
int
pop
mov
stc
dec
sub
out
stos
rorl
cld
jno
push
pusha
xorl
fs
and
shl
mov
stc
fwait
fimull
mov
pop
pop
scas
xor
inc
sahf
sahf
movsb
add
jmp
or
vmwrite
pop
loopne
rcr
dec
test
dec
pop
imul
in
daa
and
ljmp
jmp
or
call
pusha
and
div
dec
iret
in
daa
dec
out
pop
cli
sbb
xor
mov
mov
imull
xor
out
pop
lock
in
mov
xor
ds
sbb
andl
cmp
push
scas
fsts
mov
add
lods
inc
scas
lods
test
push
jmp
push
mov
push
adc
in
loope
push
aam
sub
mov
mov
cmp
mov
jbe
push
fbstp
jbe
test
dec
and
cmpsb
mov
mov
pop
adc
sbb
loope
push
mov
inc
push
dec
bswap
jbe
mov
out
push
jnp
out
xchg
pop
push
popa
or
or
scas
pusha
mov
pop
jmp
sub
jb
fcoml
filds
clc
mov
mov
xchg
add
inc
imul
lds
pop
push
fcmovnu
or
rclb
aam
pusha
lds
fldenv
imul
test
inc
imul
ficoms
addr16
push
gs
mov
adc
mov
test
arpl
jle
mov
add
jg
push
icebp
xor
sbb
lock
jecxz
lods
pop
iret
out
mov
adc
fldt
shl
jae
into
cltd
outsb
faddl
je
in
lret
inc
pop
scas
mov
adc
pushaw
sub
mov
mov
aam
imul
xchg
mov
divl
lods
fs
in
pop
push
lea
xchg
inc
cmp
jmp
inc
jae
out
sub
add
xor
js
data16
lcall
sbb
stos
addl
movb
xlat
rcl
stc
pop
ret
shll
stc
push
repz
xchg
xchg
scas
mov
rolb
or
shll
inc
dec
into
insb
pop
lods
je
pop
mov
fwait
ljmp
cmp
xor
fwait
out
sbb
jno
fstps
ja,pn
test
in
aas
jae
and
out
nop
sub
mov
mov
fwait
ret
lret
lods
inc
clc
or
dec
lss
inc
cmpsl
insl
lods
or
inc
xor
stos
inc
mov
cmp
cmpsb
scas
xlat
inc
pop
xchg
ret
call
movsb
push
dec
inc
les
cmp
mov
dec
xor
aaa
icebp
mov
push
and
dec
inc
testb
dec
sub
xchg
mov
test
mov
adc
dec
sub
movsl
pushf
adc
lods
lret
sub
adc
psubsw
out
ds
adc
les
pop
dec
mov
mov
movl
jecxz
pop
inc
jl
mov
pushf
mov
xchg
stos
shr
insl
inc
lret
inc
stc
ret
jne
or
test
sub
sbb
loope
fnstcw
data16
aaa
push
cmpb
inc
leave
ret
cmc
pop
cld
scas
lods
insb
push
outsl
nop
iret
lea
pop
iret
inc
les
jg
cmpsb
mov
cltd
mov
dec
fbstp
pcmpeqb
aas
cltd
mov
mov
mov
mov
pop
out
test
out
stc
push
nop
mov
cmp
fidivrs
rol
jo
in
jno
div
imul
fdivs
dec
hlt
out
lret
cmc
fsubrl
insb
cmp
and
cwtl
repz
popf
call
out
push
idivl
add
arpl
sbb
lret
int3
adcb
cli
orl
mov
jecxz
pushf
and
sbb
lcall
jo
inc
inc
fwait
jns
into
flds
ss
xor
mov
iret
xchg
rcr
dec
jle
into
aad
jns
imul
push
es
fwait
cmpsb
insl
and
lea
loop
shll
daa
xlat
bound
addb
imul
pop
and
repz
popa
lcall
test
sbb
mov
ss
add
ss
push
sub
or
cmp
fsubrl
push
pushf
inc
mov
and
in
xor
add
jo
cli
rorb
jmp
pop
pop
or
adc
sbb
mov
inc
push
jne
xlat
push
cltd
xchg
mov
stos
jbe
gs
into
lock
cltd
mov
push
push
sub
cmp
popf
sbb
cwtl
gs
mov
cmc
stos
insl
shrl
aaa
fdivrl
lahf
enter
inc
lret
xchg
lahf
rorl
dec
lock
or
scas
sar
xchg
shll
lods
inc
rorb
mov
nop
lea
pop
sub
shrl
dec
xchg
dec
jmp
mov
or
pop
shlb
mov
rclb
fbstp
jne
insb
inc
cmp
and
dec
fmulp
or
push
adc
fucomp
adc
inc
or
mov
xor
sbb
cmpsl
jmp
pop
push
cli
popa
fdivrs
mov
sub
jb
out
shl
in
sub
aas
or
mov
xor
fnstsw
sbb
dec
outsl
or
aaa
jecxz
sub
push
test
cmp
repz
mov
push
scas
lcall
or
in
push
jle
cmp
fcoms
cmp
lock
jg
xchg
push
sbb
pop
ja
push
mov
std
scas
cmp
sti
call
nop
movsl
mov
lcall
push
adc
and
outsl
cmp
test
cmpl
out
pop
pop
or
clc
pop
stos
arpl
sbb
insl
push
insb
lods
xor
fnstcw
in
and
mov
xchg
jb
mov
cmp
out
in
inc
xor
add
popa
sbb
mull
hlt
xlat
push
rclb
in
es
addr16
pop
push
sub
lods
push
jmp
inc
hlt
sub
pop
sub
sar
xchg
and
into
aam
or
push
xchg
inc
andb
scas
cli
leave
addl
mov
lods
add
xchg
add
dec
mov
mov
hlt
mov
jb
inc
in
loope
cmp
out
data16
ret
jb
push
sub
push
movsb
test
hlt
pop
jl
mov
mov
sbbb
or
jae
mov
loop
mov
cmp
mov
incb
inc
sub
sbb
xchg
cmpsl
pushf
lahf
lods
out
xor
lods
or
cmc
pop
sub
ja
repnz
and
pop
outsl
jb
cld
xchg
add
test
inc
sub
pop
sbb
out
cmp
jecxz
int3
rcl
icebp
pop
pop
jmp
dec
mov
ja
loopne
xchg
xchg
cli
popa
add
adc
push
adc
iret
call
jmp
sub
sbb
jo
or
xor
jmp
cmp
lock
push
test
xor
mov
sub
push
push
test
and
sbb
cmp
inc
int
adc
jae
pop
mov
jns
out
push
aas
xor
fldt
jecxz
fidivl
cltd
pop
pop
daa
jp
push
aad
fwait
xor
clc
test
push
mov
mov
push
adc
cmp
call
adcb
leave
add
stos
sub
rclb
push
rcrb
pop
pop
faddl
fsubs
mov
lods
bound
mov
pop
pop
or
ret
or
fdivs
imul
mov
shl
dec
xor
jmp
aad
xchg
push
je
mov
lret
pop
add
sbb
gs
arpl
ficoms
addl
leave
cwtl
adc
sub
mov
pop
es
push
mov
inc
ret
fiadds
out
or
dec
sahf
fwait
scas
cmp
mov
insb
int3
lods
add
out
ljmp
mov
xchg
call
jmp
andb
mov
scas
add
push
push
add
sbb
lret
inc
js
aam
sarb
cs
in
mov
adc
jl
repnz
jmp
push
outsb
aam
jno
into
add
jecxz
xchg
or
stos
jb
cmp
movsl
adc
stos
out
xchg
mov
cs
stos
push
mov
xor
mov
dec
movsl
mov
loope
push
test
sti
mov
ficomps
jno
cmp
test
test
cmp
pop
and
fnstenv
cld
jno
pop
imul
mov
fcmovnu
rorl
lea
stos
daa
adc
adc
testb
ss
cmp
sub
enter
bound
cli
cs
adc
lock
xor
cs
jmp
pushf
sbb
mov
cs
stos
cmp
add
mov
jp
hlt
mov
lea
popa
push
or
push
adc
movsb
pop
daa
cs
add
daa
int
cs
lret
sbb
jle
pop
and
inc
scas
sub
xchg
and
add
rcrb
outsl
cwtl
xchg
or
in
mov
dec
pop
dec
push
stos
adc
mov
xor
es
pop
jb
dec
push
das
jb
jae
nop
inc
shr
fs
or
enter
int3
mov
sbb
push
sbb
nop
cmp
jnp
jno
lahf
xchg
push
cmpl
xor
push
mov
data16
adc
sbb
push
pop
mov
dec
adc
lods
ss
test
lods
fists
mov
jns
adc
sarl
neg
mov
mov
outsb
in
les
mov
jecxz
mov
out
jnp
and
dec
push
pop
mov
loopne
pop
jmp
sbb
arpl
dec
enter
dec
and
cltd
or
pop
std
scas
dec
push
fwait
cli
jne
push
sbb
jne
cli
mov
inc
xchg
in
test
movsb
das
cmpsl
out
loop
fisttps
leave
mov
mov
lds
aam
jnp
addr16
sub
jge
or
loop
or
mov
cmp
divl
jbe
jae
push
and
pusha
xor
xchg
mov
pop
lret
jmp
adc
inc
cmc
test
xor
pop
lods
bound
pusha
lds
fstp
xchg
adc
ret
xchg
mull
adc
dec
in
xchg
cltd
mov
xchg
addr16
push
outsl
shl
loop
clc
mov
aaa
cltd
inc
xor
jge,pn
hlt
cmpsb
aas
int
sub
fistl
sub
dec
stos
sarb
sbb
or
incl
test
adc
inc
xchg
or
fwait
xor
mov
outsl
cmp
dec
aaa
or
adc
hlt
cli
mov
jmp
pop
shrl
sbb
mov
sub
enter
add
and
repnz
mov
adc
loop
push
add
pop
sbb
pushf
xor
push
push
sub
das
mov
cmp
aas
lret
aam
sarl
stc
push
sub
sbb
rcrl
bound
addr16
sbb
jp
out
and
mov
adc
jne
cld
mov
divb
int
push
leave
push
xchg
push
je
aas
adc
and
sub
adc
mov
jle
pop
xor
test
arpl
test
test
cltd
jmp
std
loop
inc
movsl
jecxz
imul
or
orps
push
push
jne
mov
mov
xchg
or
push
adc
fsubl
into
mov
mov
jl
xor
sbb
sahf
out
sub
aad
scas
rcr
push
jne
sub
mov
hlt
mov
sub
sbb
fwait
addl
iret
icebp
push
lods
sub
mov
push
mov
add
into
mov
add
je
rcr
clc
scas
insb
in
icebp
pop
push
addl
in
imul
test
sub
xchg
mov
xchg
daa
mov
int
xor
cmp
and
xor
int
cmpsl
inc
xor
and
repnz
inc
das
mov
xor
cmpsl
dec
adc
add
add
pop
xchg
popa
or
gs
or
mov
popf
inc
stc
and
mov
mov
pop
fidivs
loope
sbb
add
call
loopne
pop
add
faddl
sub
nop
aad
jge
xor
mov
sqrtps
out
fcompl
test
adc
adc
inc
pop
iret
rol
stos
mov
rcl
and
push
sub
push
es
es
test
jbe
mov
pop
jbe
sbb
pop
lds
dec
xchg
dec
mov
ja
call
xor
fwait
pop
outsl
sub
add
push
adcb
out
add
lret
jo
sbb
or
roll
fisttpll
and
out
mov
cmp
mov
push
jl
repnz
inc
mov
lahf
sub
inc
sub
jp
dec
add
stos
int3
mov
inc
dec
imul
jecxz
outsb
lods
outsb
fdivr
mov
in
aaa
rorb
sbb
mov
inc
pop
dec
jge
fwait
xlat
push
ss
int3
mov
inc
fistpll
add
dec
in
jae
jmp
xor
inc
shl
push
inc
mov
mov
inc
dec
sarl
fbld
ds
nop
cli
fwait
and
sbb
aad
pop
daa
pop
mov
xchg
cld
xor
out
out
scas
stc
cs
and
aaa
movsb
inc
jecxz
xadd
int3
loope
sub
pop
xor
mov
das
jb
xchg
rolb
push
rclb
and
and
fldl
jmp
ja
mov
loopne
fwait
dec
int
jle
mov
pop
movsl
jb
push
add
adc
and
inc
xor
js
es
fistl
and
push
std
mov
pop
out
mov
lea
ljmp
es
es
pusha
or
adc
in
fstpl
ret
dec
ja
push
movsl
enter
sbb
pop
cmp
xor
cwtl
js
xchg
out
adc
dec
fldt
add
mov
xorl
rolb
or
and
jbe
mov
inc
push
cmp
test
pop
sub
loope
mov
cmp
enter
xor
pop
out
iret
out
dec
movsb
pop
cmp
cwtl
popf
add
inc
scas
push
jle
stos
lret
rcll
les
dec
xor
sbb
xor
push
cmp
popf
jbe
cmpsb
adc
mov
dec
ret
or
in
sub
push
mov
xchg
ja
xor
add
push
sti
lret
push
add
sub
or
sub
rcrb
iret
je
popf
cld
add
fnsave
mov
movsb
outsl
sub
inc
lahf
daa
pop
xchg
mov
mov
outsl
inc
push
stos
mov
pop
sbb
icebp
add
in
or
adc
lea
cltd
mov
addr16
repnz
movsb
stos
mov
stc
and
andb
call
push
xor
pop
push
and
cmp
jne
or
add
movsb
mov
jo
ss
jle
mov
insl
cs
xchg
outsl
mov
jmp
pop
shrl
sti
outsl
adcl
pop
punpckldq
adc
loope
push
jb
outsl
dec
inc
mov
orl
lds
outsb
push
and
out
test
mov
cmpsb
adc
loop
or
and
sbb
movsl
insb
dec
cmpsb
lcall
mov
jo
xor
mov
jne
adc
sub
and
cmp
xor
jl
adc
jno
lea
jmp
xchg
iret
es
push
sub
dec
out
inc
pop
push
sub
mov
ja
adcl
pop
lea
mov
xchg
data16
outsb
bound
inc
pop
je
pop
xchg
xorb
ret
js
addr16
and
xchg
ja
xor
jbe
or
add
fs
add
dec
cltd
jle
mov
xchg
pop
xchg
lds
es
or
pop
push
call
sbbb
cld
test
fdivrl
xor
push
mov
cmp
addl
mov
pop
jae
push
mov
add
push
pop
dec
xor
clc
or
lock
inc
and
insl
out
stc
dec
lock
sbb
dec
or
push
lcall
or
add
mov
pop
push
lea
add
and
fistps
mov
jbe
dec
mov
jmp
push
loopne
scas
jne
popa
push
mov
jl,pn
add
xor
dec
gs
xchg
mov
xchg
mov
nop
mov
sub
push
mov
stos
add
in
aaa
outsb
adc
lock
icebp
loop
xchg
in
push
and
loop
mov
push
push
inc
pop
or
into
sbb
fcompl
stos
roll
mov
jns
lahf
rcrl
std
lock
shll
out
dec
push
test
or
xchg
mov
jo
cld
icebp
mov
jecxz
xchg
add
or
ds
xchg
lret
adc
push
mov
clc
jno
lcall
sahf
mov
mov
shrb
sub
mov
dec
call
xor
sbb
cmp
test
sbb
mov
shlb
and
pushf
lock
test
mov
or
or
or
or
cmpps
out
pop
test
call
in
mov
call
leave
aaa
xabort
pop
xor
lods
enter
jg
addl
popf
fstpt
pushf
add
dec
or
or
cmp
add
in
ljmp
cmp
popf
push
lret
int3
lods
xor
or
ds
pop
lahf
jnp
out
mov
mov
push
push
sti
daa
ficoms
cmpsl
push
cwtl
sti
notl
fldln2
imul
unpcklps
cs
cmp
pop
dec
fwait
mov
loope
aam
sahf
sbb
and
xchg
and
or
daa
sub
inc
jge
mov
jo
jae
stos
jae
je
xor
rorl
mov
sbb
ds
icebp
mov
mov
push
dec
inc
pusha
imul
inc
mov
cmp
mov
dec
shr
inc
mov
or
pop
mov
repz
lahf
repz
aas
aas
jae
imul
push
cmp
lock
aaa
mull
push
pop
stos
ficoms
fistpl
pop
cmp
hlt
fs
aaa
mov
jns
and
mov
out
scas
jae
ds
leave
xchg
jl
push
pop
jecxz
cmpsl
shl
pop
test
xchg
sbbl
xchg
push
fidivs
mov
sub
aam
xor
jmp
xchg
movsb
pop
adcl
repz
xor
rcrb
mov
addl
push
mov
xor
fcoms
je
mov
lds
mov
xchg
cmpsb
sbb
leave
hlt
xchg
divps
insb
in
and
pop
jg
push
pop
push
adc
jne
inc
insl
pop
test
dec
inc
xchg
mov
sub
movsb
lahf
icebp
lods
mov
jb
xchg
xchg
lret
add
sbb
in
mov
arpl
in
outsb
sub
cwtl
mov
in
stos
xchg
and
movsl
loope
ficoml
cmp
shl
mov
xchg
adc
push
scas
sbb
loopne
aam
inc
mov
and
repz
fstps
adc
iret
icebp
xchg
in
sub
mov
jne
xchg
leave
and
mov
out
inc
test
xor
xor
imull
leave
ud0
mov
jge
mov
into
xchg
aam
stos
sub
nop
cmp
adc
add
andb
cwtl
adc
daa
dec
test
pop
mov
scas
test
dec
loop
lods
andb
pop
int
mov
xor
dec
test
andb
push
sti
mov
adc
nop
outsl
pop
mov
data16
push
imul
pop
in
push
mov
int
mov
icebp
movups
aas
push
rcrl
cmc
insb
ret
mov
mov
jno
loope
and
es
xor
sbb
push
cs
hlt
std
mov
mov
loop
inc
mov
jg
aaa
fdivrp
cmp
inc
daa
ret
or
cld
and
arpl
xchg
jne
push
stos
ljmp
jge
xor
das
bound
push
testl
nop
push
sub
lock
xlat
shlb
jle
adc
jecxz
pop
or
jecxz
gs
mov
andb
outsb
lret
sub
ret
in
jge
inc
sbb
xor
xor
jns
jmp
push
add
adc
aad
mov
sub
int
sub
fs
cmp
pop
and
jge
in
das
std
pop
push
xchg
push
xlat
jge
out
adc
lret
xchg
mov
clc
cltd
aam
push
lret
xor
rorl
sub
rolb
scas
inc
mov
ret
mov
cltd
pop
cmp
cmp
loopne
mov
add
pop
sub
jge
push
cwtl
fcomip
sbb
divb
inc
pop
push
js
jp
mov
lcall
cli
ror
jns
fs
mov
cmp
cmp
dec
leave
add
push
aad
bound
subl
js
stc
test
push
sarl
out
sbb
jo
mov
sub
adc
cmp
jecxz
cmp
lret
cli
rcrb
popf
add
pop
lock
adc
add
cmpb
negb
scas
sbb
mov
scas
jle
sbb
scas
jns
pop
sbb
mov
test
int
lods
test
dec
mov
inc
pop
leave
mov
add
push
out
int3
in
scas
mov
mov
ss
es
sbb
jno
out
push
mov
andl
add
mov
mov
movsb
add
sahf
stc
fsubs
xorl
mov
cmp
pushf
and
cmp
push
rclb
push
sub
in
and
int
fildll
xchg
sub
enter
add
adc
insl
ret
xor
aaa
mov
in
mov
mov
xchg
mov
cmp
fcomps
xchg
icebp
sub
mov
iret
inc
cmp
add
xchg
nop
ret
dec
mov
cmp
mov
pop
stos
sub
fbstp
jmp
sbb
xchg
into
pusha
out
sbb
or
mov
mov
lcall
scas
push
inc
inc
dec
or
push
lret
inc
and
mov
adc
xlat
push
mov
stos
push
and
mov
add
aas
aam
adcb
popf
testb
pop
push
add
lods
jnp
in
mov
out
xchg
sub
cmp
dec
inc
mov
in
xlat
mov
mov
jecxz
lods
cmp
mov
xchg
sub
insl
lods
in
fisttpl
repnz
cs
fsubrs
pushf
hlt
ja
dec
lret
mov
mov
jne
sub
jne
jp
lret
ljmp
push
xor
mov
mov
xchg
popa
dec
dec
xchg
or
inc
sbb
cld
dec
insl
dec
inc
test
out
movsl
add
pop
and
insb
fbld
push
into
stos
inc
mov
ss
loop
jnp
test
lods
lods
cwtl
pop
xor
and
mov
mov
push
sub
pop
movsb
xor
adc
loope
lods
bound
cmc
js
imul
mov
cmp
or
cmpsb
rclb
repz
cmp
gs
pusha
cwtl
aam
inc
fwait
and
fistpl
push
cmc
outsl
into
test
adc
lds
lods
and
mov
and
sub
or
divl
add
jmp
in
and
xorb
push
jmp
mov
int
push
lcall
jecxz
cmp
adc
mov
adc
cmp
lcall
pop
mov
pop
ljmp
sub
shl
push
in
xchg
xorb
inc
arpl
mov
or
pushf
repz
cli
les
fsub
jecxz
sti
mov
or
loopne
push
std
xlat
cltd
lret
out
adc
imul
in
or
pop
sub
aaa
pop
sarb
gs
mov
mov
pop
sbbl
loop
xchg
push
adc
or
out
cltd
adc
push
dec
xchg
rolb
cmpb
adc
xor
inc
fidivrl
sub
sahf
mov
xor
cmpsb
push
xor
int
jnp
lret
lods
mov
bound
mov
aad
sbb
jbe
inc
mov
test
jle
fisttpl
inc
out
imull
inc
xchg
pushf
sbb
pshufw
outsb
pop
cltd
xlat
push
add
daa
loopne
fldcw
or
sub
dec
adc
xorb
jb
ret
push
sub
aas
cmpsl
jp
test
rcrl
cmc
lock
popa
pop
xor
adc
lcall
gs
jae
daa
mov
or
stos
jnp
pop
mov
mov
dec
and
ret
adc
shlb
sahf
int
sbbl
aaa
shlb
sbb
fldt
jae,pn
jg
ljmp
cmpsb
out
pop
fidivl
cltd
or
fldt
dec
and
or
inc
inc
dec
in
add
and
fisubrl
adc
inc
js
sub
int3
leave
mov
xchg
outsl
mov
or
dec
daa
insl
lods
xadd
jmp
arpl
mov
cmp
insb
mov
sbb
movntq
imul
mov
aas
cwtl
aad
inc
mov
and
and
push
push
shl
lods
dec
sbb
idiv
add
insl
or
jmp
sub
lret
xchg
sub
sub
jle
cmp
mov
adc
mov
cmc
insl
xchg
loope
or
out
int3
test
in
ret
sub
jno
sbb
out
adc
sbb
inc
mov
out
and
xor
outsb
imul
movsb
xchg
mov
xor
popf
add
cmp
fdivl
xor
jae
loope
sbb
aam
and
aas
cli
pushf
dec
push
stos
jl
insb
adc
or
and
xor
ret
adc
push
sahf
mov
das
ds
add
ret
and
push
pop
mov
dec
add
into
hlt
pop
xor
gs
in
pop
jmp
mov
jge
addr16
xchg
imul
cmp
and
in
ljmp
fcmovnbe
fmull
fildl
aad
out
mov
scas
dec
cmp
cmp
xor
movsl
pop
lods
int
xchg
sub
push
cmp
sbbl
adc
mov
sahf
pop
adc
jae
pop
adc
test
js
sub
pop
stos
cwtl
jae
mov
pushf
push
xchg
push
mov
push
mov
stc
xchg
outsl
ret
jbe
ret
push
pop
das
push
leave
aam
outsl
dec
adc
popl
lds
js
sti
ret
and
dec
mov
sbb
and
and
mov
cmp
mov
out
sub
mov
adc
es
push
cli
je
adc
les
xor
jle
sahf
push
jno
loope
mov
in
cmp
jg
nop
cli
pop
lahf
gs
cmp
outsb
das
and
enter
adc
push
shrb
mov
int3
fs
jg
inc
jle
inc
mov
scas
jp
sbb
or
andl
jb
inc
xor
push
das
push
mov
or
inc
and
sbb
sub
ret
lret
daa
xor
sbb
xchg
cmpsb
mov
mov
mov
ljmp
jae
mov
sub
add
mov
insl
or
arpl
arpl
test
cmc
stos
arpl
xchg
xchg
sbb
cltd
ds
into
iret
lahf
mov
es
inc
repz
inc
or
imul
dec
or
stc
xor
xlat
movsl
xor
ja
in
fstpl
std
mov
sbb
out
in
jmp
out
sahf
inc
lock
lret
out
repnz
test
adc
fwait
sub
push
pusha
shll
xor
xlat
cmp
lahf
jle
subl
push
test
sub
fldcw
and
cmp
loope
xor
out
in
xor
pop
dec
fadds
cli
aas
movl
xchg
adc
imul
or
mov
lds
popf
jae
fstl
mov
adc
cmpsl
add
jecxz
fidivrl
ljmp
fistpl
in
push
je
adc
cmpsl
inc
dec
xchg
cmpsl
mov
loopne
mov
fidivl
fisubrl
dec
jle
scas
mov
ret
pop
stc
jb
cmp
sbb
ret
je
fsub
jnp
ds
xchg
mov
arpl
out
xchg
lahf
iret
add
xorb
into
fs
fldt
cmpsb
jecxz
pop
mov
dec
mov
stos
mov
mov
imul
and
push
xchg
add
dec
daa
jns
or
mov
sbb
and
dec
cmpsl
push
pop
pop
rcr
lock
adc
cld
repnz
or
cmc
outsl
cmc
add
int3
das
test
pop
push
mov
addr16
sub
xchg
push
cwtl
pop
in
inc
mov
pop
fisttps
sbb
adc
mov
jb
and
xchg
sub
add
andl
push
loope
fsubrp
push
mov
inc
mov
jns
mov
xor
pusha
push
les
add
push
shrl
adcb
jnp
xlat
rcrb
adc
cmp
or
sbb
cltd
mov
cld
imull
xchg
mov
pop
mov
mov
pop
out
lock
ss
into
std
adc
fldt
and
test
pushf
mov
pop
cmp
cmp
xor
fmulp
pop
cmp
inc
notl
insl
jmp
sub
lcall
or
push
jmp
mov
inc
mov
sub
ljmp
mov
sbb
jne
test
cmp
mov
iret
popa
div
push
push
push
leave
push
pop
call
outsb
cmc
push
loop
push
loop
sub
sub
pop
inc
outsb
ja
js
mov
movl
clc
jae
addb
leave
pop
push
lahf
cmpsb
test
push
sub
push
sbb
sbb
pop
daa
inc
sub
xchg
scas
in
push
xorb
outsl
andl
pop
mov
jp
push
adc
sbb
xchg
out
data16
push
mov
push
mov
mov
insl
jb
or
mov
cli
hlt
lock
iret
and
mov
xchg
dec
lret
pop
mov
fisttps
aaa
les
or
add
mov
cltd
sub
cmp
adc
aad
hlt
or
inc
popf
imul
or
cmp
and
dec
push
push
pop
nop
xchg
aaa
xchg
xor
or
jae
mov
cld
lods
jmp
and
bound
sbb
sahf
test
add
fcomi
in
adc
movsl
dec
stos
jne
imul
int
icebp
add
cmp
jge
push
roll
push
xchg
dec
pop
mov
jle
adc
xchg
adc
jns
insl
clc
fists
pop
xor
cmp
enter
xchg
int3
lret
out
xchg
into
stc
pop
scas
shlb
jbe
dec
add
js
leave
xchg
fst
xchg
adc
notl
and
clc
call
inc
subl
lret
notb
xlat
sub
add
jae
in
cmp
sbb
mov
pop
insb
xchg
arpl
fadd
jl
xchg
addr16
js
addb
inc
and
loope
dec
scas
pusha
push
lock
jp
and
pop
push
icebp
mov
inc
js
dec
iret
lods
mov
clc
ror
ret
jns
jo
add
out
mov
gs
dec
jbe
mov
jmp
ret
lret
pop
push
in
mov
dec
lods
adc
js
push
add
pop
adc
fcoms
xchg
rorl
dec
test
out
mov
pop
popf
fcos
xchg
out
jmp
fcoms
loopne
sbb
idiv
push
push
push
fcomps
jp
sub
inc
pop
dec
mov
xlat
pop
push
int3
jecxz
sarl
fnstenv
sub
jb
notl
fidivrs
xor
sbb
imul
mov
sub
in
push
movntps
sub
out
cmpsb
push
push
repz
add
pop
xchg
into
add
push
jo
jae
adc
das
and
or
ret
dec
andb
int3
rorl
jmp
int3
cmp
jecxz
mov
minps
xchg
gs
and
pop
push
mov
xchg
mov
or
xchg
int
out
adc
rcll
les
push
leave
lcall
or
daa
mov
mov
dec
mov
movsb
mov
adc
in
cmp
mov
push
outsl
jp
sub
jnp
into
inc
pop
in
xchg
xor
into
out
movsb
xor
rcr
jmp
jle
or
dec
jmp
out
js
fwait
aam
insl
scas
movsb
jmp
lahf
std
xchg
inc
inc
push
shll
push
gs
push
imul
push
push
push
js
pop
sub
pop
sbb
into
rolb
addb
mov
mov
decb
gs
sub
iret
aad
mov
jmp
xor
or
mov
fwait
jns
push
sbb
loopne
add
scas
mov
arpl
enter
sub
imull
lret
popf
mulb
jns
xchg
sbb
xor
or
cmc
xor
int3
inc
add
pushf
jne
xor
js
sbb
pop
das
mov
or
push
adc
xchg
sub
test
dec
jae
sbb
jl
movsl
pop
cmc
das
or
pop
aam
mov
ss
insb
fwait
push
push
xchg
lea
rolb
es
pusha
push
imul
or
xchg
stos
leave
testl
inc
scas
adc
inc
ror
dec
add
push
add
sti
bound
inc
decb
xor
dec
enter
or
shrb
mov
mov
mov
jb
pushf
aas
cmp
rorl
push
ret
fbld
int
adc
shrl
xchg
pop
out
test
or
insb
in
pop
adc
ret
inc
call
aaa
leave
and
and
push
sbb
shrl
cmp
inc
xor
pop
jnp
insb
dec
mov
push
xor
out
fcmovne
test
test
inc
in
aam
and
enter
or
or
imulb
jbe
xchg
or
jae
les
push
xlat
xlat
and
adcb
mov
in
out
xlat
in
mov
and
cwtl
fadd
jge
pushl
insl
fcompl
jmp
mov
xor
test
xor
ret
stos
out
mov
mov
inc
fisubrs
mov
popa
mov
out
je
aas
testl
arpl
dec
mov
lcall
push
popf
xor
dec
or
sub
fcoms
cmp
popf
dec
lret
xchg
les
mov
lahf
jge
jle
or
mov
loopne
dec
adc
fisubl
imul
sar
rcrb
ss
jno
orl
pop
cmp
and
sbb
xchg
sahf
loopne
ja
ss
sub
nop
data16
push
das
lods
inc
xchg
fsubs
push
in
out
or
jne
adc
imul
jl
xor
cmpsb
enter
ret
dec
lods
dec
mov
pop
stos
mov
sub
or
inc
addr16
adc
out
dec
sub
xchg
shlb
sub
sbb
or
jl
shlb
or
shlb
data16
out
push
push
outsl
xchg
fucomp
dec
addl
mov
ret
push
adc
sbb
repnz
push
add
fidivl
adc
xchg
xor
fwait
sub
and
mov
pop
cmpsl
cmp
inc
ds
add
fsubs
mov
cli
fildll
xlat
sub
jmp
mov
into
pop
aas
int3
or
add
daa
xchg
pop
pop
xorb
outsb
repnz
cs
push
xor
ds
fistl
fcoml
dec
repnz
ret
mov
fistps
mov
add
dec
ljmp
sbb
xlat
dec
loop
pop
sub
jg
pop
mulb
push
sbb
sub
mov
cltd
pop
cmp
addl
xchg
adc
mov
and
inc
ljmp
out
popf
loopne
ret
mov
jge
lret
inc
push
cld
aas
icebp
fsts
pop
xor
mov
inc
flds
mov
movsl
scas
ret
out
adc
int3
cmp
dec
mov
add
mov
leave
push
adcb
sarb
dec
lods
lock
xor
pusha
xchg
pop
out
add
cld
outsb
dec
add
je
sbb
xchg
jae
leave
mov
or
mov
in
sbb
xchg
and
sbb
test
test
xor
inc
arpl
je
dec
add
out
loope
sbbl
pop
arpl
add
test
mov
xlat
mov
imul
fbld
mov
frstor
or
movsl
jl
imul
popa
hlt
inc
push
outsb
mov
aam
lahf
pop
pop
cli
imul
jp
ror
lss
sub
vmaxpd
inc
aad
xor
iret
sti
jae
scas
mov
and
sbb
out
ret
je
out
and
sbb
cmp
mov
pop
sbb
add
movsb
out
push
insb
clc
popa
and
dec
aaa
ret
pop
jge
xchg
push
fst
mov
jmp
or
adc
mov
pusha
or
jecxz
fnsave
jge
pop
xor
xchg
adc
inc
mov
mov
lock
and
xor
xchg
aad
mov
push
clc
mov
sbb
ficoml
pop
sub
push
fdivs
adc
out
rcrb
pushl
cwtl
and
lahf
sarl
push
push
in
mov
cwtl
rol
cs
jbe
fsub
sub
xor
ret
ret
push
je
je
cltd
scas
jbe
dec
dec
cmp
pop
mov
adc
loope
cmp
enter
fs
orb
add
or
dec
pop
lcall
mov
or
lahf
in
fcmovb
xor
adc
aas
xor
popa
ret
push
in
mov
push
add
pop
test
or
nop
push
shl
lret
insb
jae
jb
out
mov
scas
out
aad
int
sbb
insb
hlt
xor
call
leave
pop
sub
aam
pop
fadds
arpl
and
sti
dec
adc
repz
stc
stc
jp
push
sbb
xor
pushf
push
pop
and
clc
inc
lss
es
mov
mov
pop
cs
xchg
mov
sbb
gs
dec
stos
imul
cmc
xlat
push
adcl
xlat
insb
jmp
sarl
mov
xchg
pop
inc
icebp
sti
in
ljmp
jae
mov
outsl
xorb
test
mov
loop
setl
jp
rolb
popa
adc
ljmp
jmp
adc
popa
aad
dec
mov
cmp
push
dec
adc
je
xor
leave
xchg
js
enter
cmp
push
in
push
push
add
imul
sub
mov
jns
jmp
sahf
pushl
mov
mov
add
sahf
flds
aas
pop
cmpsl
mov
fisubrs
lods
add
sbb
vmovlpd
or
adc
out
sub
in
push
sub
mov
add
adc
pop
or
enter
syscall
and
aaa
lret
in
mov
divl
mov
lods
popf
int
dec
popf
xchg
inc
pop
ljmp
jnp
sub
push
cmp
or
mov
inc
mov
mov
dec
sbb
inc
fs
cld
je
mov
jmp
sahf
push
sub
dec
jecxz
mov
icebp
or
adc
jmp
fdivrs
mov
outsb
call
dec
inc
outsb
push
shlb
aas
xchg
inc
pop
jge
cltd
sahf
cmp
cmp
push
xchg
pop
pop
add
cmpsb
dec
cmp
mov
sbb
fsubs
add
and
daa
cmp
aaa
jns
jp
sub
or
adc
and
mov
ljmp
xlat
xor
mov
pushf
movsb
mov
sarl
push
xchg
scas
jno
dec
sub
popf
clc
scas
push
or
mov
jbe
loop
bound
sbb
scas
out
xchg
pop
jg
fmul
cmpsl
lds
or
dec
mov
inc
rcrl
mov
jb
leave
inc
mov
ret
sbb
ss
push
adc
pop
gs
lcall
rol
cld
sub
daa
jle
mov
xor
ds
xor
outsl
or
xchg
mov
gs
xchg
jo
rcrl
ds
movsb
repnz
lret
jge
jbe
lret
push
in
push
mov
cmp
xchg
xchg
inc
aad
jno
mov
inc
add
sbb
cmp
mov
xchg
jns
repnz
xchg
cmpsl
es
inc
pop
mov
adc
push
in
movsl
sbb
mov
mov
mov
shll
stc
cmp
sub
in
mov
pop
mov
in
test
lea
ret
and
test
dec
mov
or
jnp
xchg
and
sbb
rorl
dec
inc
test
testb
inc
aad
jp
int
inc
mov
daa
mov
out
add
or
fwait
idivb
mov
mov
shr
xchg
ret
fiaddl
int
inc
iret
test
shrl
out
xor
movsb
daa
ja
xchg
arpl
and
insb
iret
cld
dec
or
xchg
daa
stos
sub
mov
ja
xchg
dec
dec
add
pop
cmp
jnp
and
or
jmp
pop
int3
push
or
pop
jp
inc
xor
scas
or
push
or
mov
scas
sbb
sub
mov
ret
jbe
bound
dec
jae
cmp
dec
mov
xchg
add
and
sub
cmp
int3
and
mov
and
ss
mov
mov
and
push
and
add
pop
adc
addr16
xchg
adc
dec
mov
pop
mov
mov
sub
inc
outsb
inc
jne
mov
cwtl
sub
xor
xchg
iret
jae
lock
adc
arpl
dec
rcr
mov
outsl
and
mov
push
lods
in
es
cli
aaa
insb
push
loope
mov
sub
popa
stc
gs
jg
vpminub
adc
daa
xor
lock
jns
pop
xchg
ds
inc
aam
push
xor
push
icebp
pop
mov
xchg
call
out
lcall
lahf
jo
fs
and
add
add
cld
lcall
int
and
dec
orl
subb
in
pushl
lcall
mov
cmpsl
jle
pop
cld
insb
stos
or
dec
js
jb
mov
in
inc
dec
movsb
out
loope
mov
cmpsl
fsubrs
mov
dec
scas
dec
in
das
mov
mov
movsl
ljmp
adc
xor
xchg
int3
xchg
rorl
mov
mov
dec
mov
cmp
adc
sub
insl
xlat
aaa
inc
out
inc
inc
fadd
fildl
jl
adc
sti
scas
cmp
popf
adc
xchg
cmp
adc
pop
and
sub
xor
add
jg
jmp
mov
jae
cmp
shr
ljmp
shll
insb
je
rcrl
lock
or
pop
inc
push
inc
movsb
sbb
xor
add
shll
mov
add
xchg
dec
js
push
xor
inc
movsl
sub
fwait
shl
cs
and
sbb
push
icebp
jge
rcl
lcall
aam
adc
nop
notl
dec
nop
mov
stos
sbb
lds
js
sbb
lods
mov
in
dec
fcmovu
inc
sbb
or
mov
push
out
out
xchg
sbb
jp
sub
cmpsb
je
push
mov
or
ret
movl
sub
sub
jb
jbe
dec
xchg
add
mov
cmp
inc
pop
jmp
or
or
pop
cmpsb
lret
cmpsb
mov
mov
push
and
add
or
xor
rorl
pop
adc
int
inc
clc
adc
push
call
cmp
sti
push
in
mov
fsubs
adc
and
and
xchg
inc
shrb
fsts
fwait
ja
inc
and
pop
stos
shrl
sbb
loopne
shll
sbbb
out
enter
push
icebp
je
movsl
xchg
mov
das
aam
and
mov
popa
shrb
xor
icebp
mov
pop
jne
dec
das
mov
adc
aam
mov
push
mov
fists
mov
addl
cld
ja
imul
shrl
mov
cmp
mov
stos
xchg
test
aam
loopne
jns
aaa
xchg
xor
std
mov
test
shrl
xor
std
adc
arpl
mov
pop
sbb
mov
shlb
push
and
pop
cmp
jge
xor
loope
jne
movsb
movsl
popf
push
add
xchg
xchg
mov
in
outsl
and
cld
inc
or
sub
stc
push
arpl
rol
pop
pop
movsb
lahf
stos
scas
or
jecxz
xchg
push
xorl
inc
outsl
fistl
adc
decl
stc
imull
mov
push
mov
inc
fxtract
mov
out
or
out
orb
add
xchg
negl
sti
ret
sbb
sub
fucomip
add
rcl
data16
int
lds
enter
lds
lods
mov
fcompl
xchg
and
movsb
cltd
xchg
or
adc
ljmp
jecxz
inc
sti
inc
rorb
test
inc
repnz
push
mov
add
popf
add
aad
or
sbb
divl
adc
outsb
lret
or
and
addr16
mov
adc
xor
sahf
mulb
add
jmp
inc
mov
les
pusha
fistps
inc
xor
pop
jle
pop
mov
cwtl
sti
adc
push
hlt
push
xor
cmp
mov
mov
mov
mov
imul
jo
sarl
jge
in
sub
das
sbb
mov
push
dec
cmp
dec
scas
sub
mull
sub
push
sti
mov
fwait
adc
push
mov
ljmp
stos
cmp
xchg
pop
mov
jecxz
jg
stos
test
cmc
pop
popa
test
fs
enter
and
fbstp
cld
push
jo
dec
push
and
repz
jbe
push
ret
sti
push
sub
outsb
or
nop
jg
stc
fwait
sti
clc
and
fdivp
filds
inc
mov
data16
mov
out
add
addr16
nop
add
hlt
and
cmpsl
xchg
adc
mov
aam
pop
stos
out
jne
lea
adc
sbb
jne
arpl
in
aad
inc
nop
adc
cmp
sub
add
int
sub
sub
nop
jp
std
push
push
cltd
jno
loope
hlt
jecxz
adc
popf
pop
ds
cmp
not
insb
outsl
stos
insl
stos
push
mov
pop
sbb
or
fisubrl
push
and
fwait
clc
insl
push
mov
scas
sbb
shr
movsl
pop
mov
mov
jnp
mov
pop
inc
rcrb
stos
xchg
mov
aam
ret
push
clc
push
mov
xchg
jnp
sub
cld
cmp
lahf
sub
cmp
pop
sbb
std
sarb
mov
adc
pop
lods
push
push
sti
out
stos
rorb
add
bound
ja
adc
roll
xor
and
mov
dec
mov
repz
sub
mov
and
sub
inc
ljmp
fdivrl
inc
inc
aad
pop
add
aam
dec
sbb
xchg
outsl
dec
loope
push
cli
pop
push
mov
shl
jg
sub
mov
out
aaa
jmp
sbb
cmp
insb
adc
jg
mov
nop
mov
repnz
repz
mov
sahf
inc
scas
mov
sahf
cmp
das
cmp
insb
shr
leave
insb
adc
arpl
sbb
rolb
dec
fdivrs
mov
adcb
xor
jae
mov
jns
cmpsb
div
xchg
sbb
scas
jecxz
loope
push
pop
inc
lcall
cltd
loopne
xchg
sub
jge
testl
xchg
sbb
bound
out
loope
repnz
jb
clc
lret
mov
inc
js
dec
ret
lret
mov
pop
enter
mov
sahf
cs
add
pop
cs
push
sarl
mov
cmpsb
jae
mov
sub
insb
comiss
js
xchg
lock
adcl
std
popa
pop
pop
loop
push
dec
jo
insl
out
out
xor
sub
push
pushf
lahf
ret
jns
adc
or
fadds
decl
out
jp
lret
out
ror
loope
jo
inc
mov
ret
jge
jne
jecxz
into
add
loop
repz
push
stos
and
jbe
lock
or
rcll
xchg
adc
ss
cmp
stos
testl
mov
nop
xchg
pop
in
sti
inc
out
or
add
cs
std
ret
js
add
xchg
pop
addr16
sub
icebp
movsl
shlb
loopne
jbe
out
or
outsb
hlt
movsl
xchg
mov
and
cmc
mov
mov
pushf
testb
xor
mov
add
out
icebp
push
adc
ljmp
adc
jmp
popa
shll
dec
push
cwtl
es
xchg
push
add
mov
dec
push
xchg
jae
aaa
les
add
dec
and
sbb
mov
dec
xchg
mov
cli
or
sub
imul
dec
je
and
sti
loopne
sub
popa
inc
icebp
dec
or
push
cwtl
scas
leave
inc
stos
add
icebp
pusha
leave
add
and
addl
sbb
ds
ficoms
jo
test
adc
movsb
push
stc
push
and
mov
push
add
sbb
cmpsb
fisttpl
fildl
in
out
push
cld
xchg
adc
lock
test
sub
xchg
in
dec
mov
insb
roll
cmp
push
xor
mov
lds
cmp
fistps
xchg
scas
sub
xor
mov
sbbb
ficoml
bound
mov
in
clc
mov
add
pop
inc
push
dec
out
dec
js
xchg
mov
add
jge
pop
popa
bound
or
jnp
xchg
sbb
sub
ljmp
imul
xor
push
sbb
xchg
lods
dec
dec
sub
mov
jnp
push
inc
inc
int3
cmp
jecxz
xchg
bound
mov
insb
xor
icebp
adc
mov
movsb
push
cmp
dec
out
cltd
int3
mov
push
fists
mov
mov
ftst
neg
fldpi
jno
mov
lods
add
sbb
test
xor
mov
in
shrb
in
lahf
outsl
enter
shll
jle
inc
stc
dec
adc
mov
mov
and
daa
sub
dec
movq
stos
std
fxch
js
cmp
and
in
popa
pop
mov
sub
lea
fnstcw
rolb
and
jg
inc
dec
cmp
and
data16
ss
inc
fistpl
lea
fwait
cmp
mov
mov
sub
pop
std
out
scas
cmpsl
scas
aas
or
out
mov
in
shll
jo
dec
test
repz
push
fcompl
xor
inc
test
ljmp
out
jp
sub
xor
aas
stc
jne
or
ja
xchg
shlb
idivl
cmp
mov
imul
in
or
test
rclb
dec
adc
pushf
test
rcrl
cmpsl
je
cwtl
and
imul
mov
push
mov
jns
fisubl
fadds
xchg
stos
push
push
pop
frstor
push
xor
push
pop
out
rcrl
adc
sbb
xchg
es
lods
ret
imul
mov
in
dec
fsubrl
jno
push
fwait
push
icebp
pushf
pop
pop
js
mov
mov
xor
aas
lods
scas
xchg
sbb
imulb
mov
out
test
clc
push
test
mov
inc
push
or
cli
mov
pop
out
out
jo
ss
push
push
imul
sub
fnstenv
xor
and
enter
rol
imul
call
dec
in
lret
in
dec
cltd
mov
cmp
push
popa
mov
pop
xchg
mov
nop
mov
xor
cmc
stc
jge
test
mov
mov
mov
lods
cmp
das
or
xor
sbb
inc
iret
push
mov
pshufw
fists
test
sub
fwait
push
lock
or
iret
sub
outsl
test
in
xlat
int3
mov
lods
cld
js
sbb
adc
notl
inc
es
mov
daa
fisttpl
call
xchg
mov
jns
inc
push
in
mov
and
cmpsb
scas
inc
rcrb
push
aam
lods
xor
inc
push
jne
icebp
xchg
movsl
popf
xchg
fidivrl
jnp
sbb
arpl
out
cltd
mov
push
sbb
into
frstor
mov
jb
xchg
jb
addb
dec
push
negl
xor
pop
push
je
imul
daa
pop
shlb
dec
aas
ljmp
subb
mov
lds
add
iret
mov
adc
sub
mov
outsb
sub
add
insl
ljmp
xor
inc
sub
inc
inc
fwait
out
cmpsb
imul
pop
outsl
cwtl
cltd
cmpsb
jo
and
xchg
push
jno
dec
or
mov
cmc
adc
jg
inc
cli
lcall
add
or
pop
aad
hlt
push
sbbl
cltd
sahf
cmpsb
fstpt
shll
pushf
leave
lea
fstpl
pop
pop
pop
xchg
in
in
test
je
or
xor
push
cwtd
pop
ja
xchg
mov
mov
bound
and
xor
xor
fwait
outsb
xchg
fidivl
inc
push
mov
sub
xchg
inc
movsb
xor
ds
out
lods
push
push
pusha
inc
inc
neg
notl
scas
push
push
lods
adc
mov
dec
dec
aam
jno
dec
sbb
clc
rclb
filds
cmp
or
std
cmp
jmp
mov
jge
test
sub
adc
push
jge
iret
xchg
fdivs
sbb
cmp
pop
sub
jge
daa
add
fcomps
mov
cmovns
push
lret
mov
jg
or
dec
int
pop
gs
insb
mov
outsb
gs
pop
pop
jmp
lods
xchg
cmp
stos
addr16
cwtl
outsl
les
shrl
xchg
vzeroall
std
xchg
cs
mov
repz
and
in
negb
lcallw
aas
adc
cmpsb
fs
jecxz
hlt
jo
sbb
dec
fistl
rolb
cmpsb
mov
lds
mov
outsl
int
loop
shrl
out
sbb
popf
adc
cs
cmpsl
pusha
add
cltd
and
jge
sbb
lods
aaa
cwtl
das
cwtl
adc
sbb
shll
js
bound
icebp
pop
xlat
jo
mov
out
cmp
push
lcall
inc
lods
andl
mov
ffreep
sbbl
adc
test
leave
cld
sub
imul
dec
dec
dec
ds
into
clc
rcrl
fs
and
iret
ja
push
mov
or
mov
popf
pop
nop
cmp
inc
ss
push
add
stos
or
jecxz
adc
fcmovu
or
pop
pop
out
dec
aam
or
jle
pop
lahf
xchg
push
scas
xchg
pop
pop
iret
loopne,pn
inc
mov
or
mov
mov
arpl
dec
pop
int3
mov
int
push
sbb
fistpll
mov
cmp
shlb
jge
jmp
fucomp
sbb
xchg
cld
inc
aad
shll
mov
sar
push
jo
cmp
mov
xchg
xchg
adc
and
pusha
dec
add
mov
or
movsb
test
sti
or
shl
jno
add
sub
xchg
sub
in
xor
mov
push
movl
rorb
push
mov
scas
mov
pusha
push
repz
or
sbb
and
mov
cmp
xchg
cmpsb
ret
mov
or
or
cmp
xchg
pop
jl
mov
lea
sbb
movsb
jg
scas
inc
mov
fcmovnbe
sub
jmp
pop
pop
jg
lcall
ret
jae
stos
test
orb
xchg
sub
push
pop
hlt
cmp
xorb
cli
addr16
in
xchg
sti
mov
pop
test
bound
inc
push
out
aam
push
pop
or
sbb
pusha
mov
mov
ret
enter
xor
shlb
int3
jmp
inc
or
push
or
out
icebp
jecxz
in
inc
mov
test
insl
and
out
push
or
mov
xchg
sbb
es
notb
out
hlt
cld
dec
imul
jmp
ljmp
xchg
add
cmp
scas
shl
call
adc
mov
mov
sti
add
push
dec
repz
jbe
es
out
or
call
pop
push
cmp
call
leave
popf
jnp
fldt
in
gs
inc
enter
nop
gs
insb
cmpsl
mov
fidivrl
sbb
in
ficomps
sbb
gs
jae
mov
jl
lods
stos
mov
ljmp
in
add
jns
cmp
imul
sbb
aam
fildll
leave
adc
pop
xor
add
cmp
aam
xor
lock
stc
mov
movsb
jecxz
sub
pop
or
push
in
mov
mov
mov
cmp
dec
test
mov
push
je
add
bound
or
jle
and
ljmp
xchg
mov
leave
shrl
cmp
sub
lods
in
push
inc
and
cs
cmp
pop
xchg
insb
call
lods
inc
sbb
sahf
aaa
inc
insl
dec
pushf
aad
fbstp
add
mov
mov
mov
jl
mov
xor
dec
scas
movsl
loopne
jnp
xchg
dec
testl
cmc
in
cmp
cmp
cltd
imul
mov
adc
arpl
pushf
aas
mov
imul
and
mov
movsl
es
lret
sti
lahf
into
stos
mov
inc
popf
pusha
mov
xchg
sbb
or
dec
movl
test
sbb
jecxz
mov
int
iret
outsl
or
roll
mov
and
xchg
es
sbb
push
imul
ret
lods
inc
jl
xor
dec
stos
dec
mov
or
jnp
push
and
sbb
cli
fs
mov
push
xor
xor
xorl
cmpsl
scas
imul
jnp
xchg
divb
xor
cmp
xor
inc
pop
fwait
subb
leave
add
adc
jl
xor
lret
inc
jb
sub
mov
roll
dec
inc
cmp
adc
js
in
fisubs
pop
pop
adc
mov
xor
cwtl
sub
cwtl
das
aam
xchg
mov
xchg
leave
jp
int
ret
jns
adc
lods
inc
das
mov
imul
cli
fistl
out
inc
dec
push
adc
sub
or
cwtl
dec
sbb
adc
cmp
cltd
movsb
dec
xchg
xchg
cmp
mov
or
mov
aad
cmp
data16
xchg
pop
jne
out
jp
bnd
scas
jae
push
mov
loope
call
add
pop
in
lcall
mov
push
pop
sbb
imul
cmpsl
aam
subl
sub
roll
stos
nop
roll
xor
push
fbstp
push
jae
rcll
sahf
mov
sbb
sbb
pop
push
jbe
inc
pop
scas
or
ds
mov
pop
fwait
outsb
mov
adc
add
jb
lret
mov
mov
sbbb
mov
adc
mov
in
mov
clc
repz
ss
mov
and
mov
int3
sbbl
out
xchg
lcall
xlat
enter
add
mov
std
pushf
lea
out
mov
idivb
jb
adc
pushf
shlb
outsl
add
xchg
sub
mov
mov
fdivs
sub
mov
ja
xchg
add
xor
popl
xor
shr
jecxz
inc
adc
adc
insb
xor
add
pop
lcall
mov
cmp
in
cli
nop
popa
push
xchg
cmp
cmpsl
out
fists
js
ja
cltd
into
jns
test
div
outsb
pushf
cmp
xchg
test
stos
mov
pop
movsb
mov
jge
je
push
mov
cs
add
pop
roll
sti
adc
test
ds
mov
inc
inc
movsb
pop
daa
mov
int
je
or
push
aad
dec
andb
pushf
adc
int
sbb
mov
mov
adc
test
jne
push
dec
mov
mov
enter
lods
cmp
mov
mov
inc
push
sub
or
shll
xor
adc
lahf
xor
xchg
xchg
int
insb
pop
pop
pushf
xor
xchg
mov
or
mov
add
fdivl
cmpsb
std
outsb
sub
mov
mov
fiadds
mov
out
movsb
push
xchg
sbb
mov
neg
repnz
test
pop
adc
push
out
push
sub
sub
push
jno
add
stos
xchg
cmp
pop
jecxz
lods
mov
pop
and
lret
shrl
fistpll
cmp
repnz
cmp
mov
dec
sbb
xchg
les
ret
fnstenv
lea
inc
imul
add
sub
repz
aad
push
push
daa
cmc
mov
insl
jle
into
mov
lds
aam
mov
xchg
cltd
sbb
out
lret
xchg
adc
es
mov
cmp
dec
arpl
test
sub
push
je
cmp
clc
lahf
out
scas
es
jl
mov
mov
stos
mov
aas
push
mov
jp
mov
xchg
sbb
aad
jmp
xchg
push
mov
stc
lods
jnp
imul
pop
add
mov
mov
int3
mov
inc
scas
out
xor
dec
mov
out
mov
loope
pop
push
fxch
in
cmp
mov
dec
std
xor
bound
rclb
cld
addb
inc
lods
iret
aad
mov
and
dec
test
call
jmp
mov
mov
inc
lahf
fcoml
ret
push
cltd
cli
cltd
enter
cmc
xchg
aaa
adc
mov
ljmp
push
stos
addb
scas
and
xor
xchg
stc
mov
stc
pop
xchg
sbb
inc
add
mov
fstpl
insl
loopne
clc
add
rorl
mov
adc
push
mov
or
sbb
je
lret
lods
xor
xor
add
mov
sbb
add
mov
push
cmp
push
jb
xchg
in
les
jno
lods
repnz
scas
jp
xor
icebp
sbb
jg
mov
pop
in
push
lret
jbe
imul
xchg
addb
xor
sbb
xor
ja
mov
scas
mov
stos
mov
outsl
lods
enter
cmpsl
ret
nop
cmp
mov
ljmp
cmpsl
fwait
and
sub
dec
push
or
inc
jmp
ljmp
mov
in
loopne
lods
shrb
in
insl
nop
shl
cmc
fdivrs
hlt
sbb
stc
mov
mov
add
loope
out
out
fs
aaa
dec
mov
rclb
mov
pop
aas
xchg
and
lret
add
call
sbb
pushf
sbb
clc
stos
ds
mov
push
daa
fidivrl
pop
jl
stos
jl
lret
cmp
test
jb
pusha
jnp
pop
js
sbb
or
imul
lret
aad
dec
mov
mov
sbb
push
push
int3
int
int
lods
jl
mov
cs
pop
mov
data16
push
test
lahf
in
jo
mov
mov
jnp
stc
in
fsubrs
subb
inc
push
fcomps
push
mov
pop
imul
mov
xlat
jl
cmp
imul
pop
jns
mov
push
loop
add
or
in
aam
inc
lds
sub
xchg
pop
pop
je
jecxz
bound
mov
xor
aad
mov
sbb
loope
leave
fs
fwait
into
int
jecxz
arpl
inc
or
jo
pusha
push
outsb
mov
rcll
jecxz
outsl
push
int
sahf
xchg
cld
popa
pop
lock
mov
xor
or
cmc
sub
data16
push
sbb
das
fcmovnbe
stos
cltd
roll
hlt
aad
ss
out
nop
std
leave
jl
push
mov
mov
inc
mov
mov
push
mov
rcl
dec
addl
hlt
xchg
pop
bound
pop
inc
xor
push
mov
iret
xchg
mov
and
leave
in
popa
dec
dec
push
insl
movsl
cmp
sub
in
pop
imul
and
push
or
adc
movsb
adc
ja
sbb
outsl
cmp
dec
vmovntps
mov
push
mov
mov
les
mov
movsb
imul
add
push
jno
jbe
test
out
push
aas
fbld
popl
call
jecxz
xor
push
ja
sub
ja
push
js
movsl
xchg
pop
repz
inc
pop
cmc
aam
loope
lret
dec
and
rorb
mov
adc
pushf
mov
jo
ret
repnz
adcb
fwait
push
out
jo
inc
add
pushf
pop
and
lret
xchg
mov
popf
aas
mov
mov
popa
pusha
out
pop
dec
jbe
push
ja
pop
sub
jmp
jbe
sti
pop
adc
or
jp
push
and
or
daa
mov
dec
sub
adc
inc
test
xor
mov
arpl
mov
mov
outsl
add
mov
pop
sahf
mov
dec
jo
xchg
dec
ret
add
outsl
jp
insl
in
rol
xchg
outsb
xor
mov
aas
roll
cmp
lret
jmp
jecxz
decb
xor
nop
push
fcoml
jge
cmp
adc
xor
out
jp
jae
or
sub
loop
mov
leave
imul
sbb
test
jge
cmc
cwtl
dec
cmp
mov
jo
ficoms
and
bound
pusha
sbb
mov
cmp
test
xchg
sub
mov
into
sahf
flds
dec
and
cmp
pusha
wbinvd
xchg
aaa
mov
adc
out
mov
addss
inc
popa
andl
lds
mov
push
or
xchg
pop
cmp
and
inc
ljmp
or
mov
shlb
data16
icebp
dec
or
pop
subb
push
or
inc
roll
dec
je
jmp
mov
test
loopne
add
and
and
ja
mov
es
jmp
jle
sub
out
jmp
sub
or
ss
jnp
fsub
sub
mov
mov
je
call
push
sub
fs
lods
mov
dec
push
cmp
push
jg
xor
sbb
mov
in
adc
dec
insb
aam
push
adc
in
ror
ret
push
sbb
xchg
cmp
sub
jle
scas
aad
add
inc
sbb
push
cmp
xor
outsl
cli
pop
push
mov
and
pop
int3
ficompl
inc
ljmp
out
cli
aaa
test
mov
gs
lret
cmpb
mov
pop
aad
adc
cmp
scas
mov
xchg
outsl
dec
xor
sti
stos
or
push
push
sub
pusha
mov
lock
mov
shl
outsl
inc
cs
and
pop
cmp
cld
push
mov
fsubrl
mov
xchg
ja
xchg
or
pop
xchg
cwtl
adc
clc
shl
xchg
lds
jge
fsubr
xchg
xchg
orb
mov
cld
mov
and
jno
shlb
push
mov
push
jge
aad
xor
inc
cs
mov
xor
out
inc
mov
pop
xorl
push
inc
mov
push
scas
cmpsl
push
ljmp
mov
jmp
mov
lret
enter
pmulhuw
mov
xor
test
nop
lea
cld
jl
jp
jg
xor
movsl
shll
add
fwait
mov
jne
unpcklps
mov
adcb
cmp
lret
xor
and
iret
fsubrs
xor
xor
enter
sbb
sbb
imulb
ror
sti
mov
push
imul
adc
ss
push
aam
pop
inc
outsl
out
push
inc
fcmovnu
jne
sub
dec
cmpsl
in
xor
mov
mov
and
js
or
mov
test
popa
adc
xor
sti
add
pushf
add
xor
inc
mov
pop
shrb
push
stos
push
rcr
ror
imulb
add
mov
andl
xchg
sahf
and
pop
rcrb
dec
clc
es
popf
xchg
jb
xor
jecxz
mov
sub
sahf
or
jle
popa
in
nop
or
fcoms
mov
jae
push
cmp
stos
xchg
into
jnp
cs
pop
lret
or
lock
in
fnsave
and
arpl
jb
testb
hlt
call
mov
or
dec
xor
or
out
pushf
lds
aad
or
inc
arpl
xchg
movsb
mov
push
add
aad
out
push
jmp
jbe
sti
sbb
lret
std
xor
add
mov
jb
inc
fisubrl
repz
inc
aas
mov
push
dec
push
push
inc
cmpb
dec
jp
in
mov
xchg
and
dec
xchg
pop
dec
lods
cwtl
ljmp
lcall
outsb
loopne
push
mov
adc
lods
xchg
out
mov
int
push
loopne
push
mov
push
enter
jl
sbb
lods
icebp
imul
mov
scas
adc
sbb
mov
mov
ljmp
mov
aas
push
loop
sarb
mov
xchg
shl
int3
fcoms
fs
jp
xor
arpl
or
or
jge
bound
sub
mov
pop
lret
std
sbb
mov
pop
fimuls
dec
cmp
push
inc
sbb
add
xchg
addb
enter
out
jne
clc
dec
mov
mov
push
out
aas
aam
or
mov
lahf
arpl
pop
rcrb
lcall
cmp
mov
adc
repz
dec
adc
jecxz
cmp
repnz
push
mov
imul
xlat
arpl
jmp
push
inc
addb
bound
add
imul
xchg
and
fsubrl
push
scas
loopne
mov
rolb
mov
xchg
and
push
inc
lods
cmp
nop
repz
and
loopne
mov
mov
push
jae
adc
xchg
mov
mov
in
iret
std
lret
sbb
sti
cmp
inc
push
xor
data16
scas
or
dec
add
pop
sbb
mov
sti
lods
addr16
ss
int3
adc
ret
nop
test
dec
push
inc
pushf
and
xlat
and
hlt
jmp
jne
push
inc
stc
out
push
push
arpl
adc
cmp
jbe
je
fisubrl
jne
mov
mov
sbb
int
jb
cmp
pusha
jne
and
adc
scas
inc
je
ds
dec
lock
mov
loope
xchg
mov
fsts
icebp
xchg
stos
outsb
jo
push
inc
in
pusha
int
gs
test
lods
loopne
dec
bound
pop
fidivs
xchg
jp
movsl
jecxz
int
ret
add
lahf
and
mov
adc
das
sbb
hlt
xchg
arpl
inc
ss
add
mov
push
mov
mov
sub
lock
aaa
adc
fwait
pop
dec
sti
mov
pop
mov
push
inc
call
outsl
sar
xchg
lock
mov
pop
aaa
popf
nop
jb
fistpll
push
xchg
pop
mov
outsb
dec
cli
xchg
mov
or
lcall
mov
jns
aaa
xor
mov
mov
insl
add
cmc
cmp
cmp
mov
push
sub
push
mov
jne
jmp
cltd
adc
mov
testl
mov
mov
arpl
inc
jl
in
inc
pop
sub
xor
dec
andb
ja
mov
iret
aad
mov
lods
push
cld
nop
imul
pop
repz
sarl
or
test
cmp
push
push
loope
xor
push
mov
mov
ds
mov
outsl
inc
aas
lods
stc
lret
fsubrp
push
inc
lahf
clc
or
xlat
cmp
cmpb
inc
pop
or
jne
daa
dec
out
fs
repnz
mov
lret
imul
in
loope
nop
cmp
and
pushf
test
xor
pop
inc
cmc
cwtl
popl
pop
icebp
fwait
push
pop
inc
addr16
dec
cmc
je
or
jns
std
pop
repnz
arpl
mov
cmpsl
insl
dec
stos
or
push
bound
and
je,pn
sub
and
orb
sub
ret
jp
xchg
sbb
jnp
je
scas
repnz
sbb
stc
or
xchg
shlb
and
in
and
shrb
or
pop
aam
jne
sahf
dec
jbe
ja
or
or
sbb
sub
add
scas
adc
lock
cmp
cmpsl
dec
push
cmp
and
lret
leave
cltd
push
mov
inc
shrl
mov
call
xlat
pop
flds
sub
fwait
mov
or
incb
inc
xor
loope
int3
cmp
stos
mov
out
stos
jecxz
sub
repz
sub
in
dec
sub
inc
fsts
xchg
stos
mov
insl
shll
inc
addb
testl
xchg
hlt
mov
adc
repnz
sbb
xchg
add
push
sub
aam
cmp
mov
js
xor
imul
cmp
enter
jge
mov
mov
add
in
imul
fstps
sahf
sub
imul
jae,pn
lea
adcb
in
sbbb
test
jp
mov
jbe
ror
jecxz
jg
addr16
mov
xchg
mov
or
sahf
lods
mov
enter
aas
dec
xchg
and
mov
and
sbb
dec
fs
pop
stos
out
cwtl
popa
add
xchg
and
pop
push
lcall
aam
stos
add
popf
dec
shl
fistps
sbb
and
les
shrb
and
int3
bound
lret
mov
rolb
popf
xor
fnclex
inc
repnz
or
fdivrs
push
push
ret
data16
mov
jge
orl
sbbb
filds
mov
addr16
popa
andb
sarb
test
dec
add
ret
pop
sbb
jns,pt
push
loopne
xor
xchg
or
pusha
outsb
push
lods
cmp
enter
sbb
nop
mov
inc
ror
push
fisubrl
sub
sbb
outsl
movsl
jo
and
dec
movsb
push
mov
hlt
inc
xor
jle
sbb
fldcw
sbb
in
cmpsb
daa
shlb
mov
push
test
fcomi
inc
adc
push
dec
mov
aaa
movsb
sbb
ret
pushf
in
fsubs
loop
dec
add
jo
jno
in
mov
loopne
cmp
add
cmp
xchg
dec
adc
ljmp
out
lods
cltd
stos
movsb
cs
rcrl
enter
repz
or
ja
dec
test
add
jne
aad
iret
rorl
dec
cmpsl
jge
movsl
dec
into
pop
outsl
dec
sbb
mov
mov
or
xor
test
pop
stc
and
or
mov
push
pop
mov
dec
mov
push
mov
push
fisttpl
sbb
pop
movsb
add
pushf
repnz
adc
in
jl
leave
dec
sbb
popw
lret
mov
loopne
lret
jnp
add
pop
jb
cmp
push
pop
movups
movsb
pop
mov
xlat
sub
sti
jo
jle
and
jae
into
xchg
pop
cmc
cld
cmp
outsb
xor
cmp
pop
orb
enter
cmp
pop
xchg
push
es
mov
sbb
sbb
shlb
and
sub
inc
dec
jmp
lods
dec
stos
xchg
arpl
test
test
scas
es
les
xchg
push
int3
mov
fsubs
rol
jne
out
push
dec
mov
inc
push
out
cmp
loopne
jge
push
stc
xchg
jge
sub
int
lret
clc
xchg
cmpsl
pop
pusha
mov
loop
aad
jle
push
mov
and
rcrl
ret
sbb
imul
mov
and
aad
inc
inc
xchg
or
pop
adc
sub
pop
in
fbstp
push
call
outsl
mov
push
addr16
mov
frstor
cmc
xchg
add
sarb
divl
add
sbb
shl
mov
inc
out
loop
push
or
outsl
pop
push
imul
in
ret
sbb
imul
stos
enter
in
push
jg
in
adc
push
sub
out
insb
out
mov
mov
mov
mov
lods
cmp
xchg
xor
cmp
sbb
cld
ja
mov
jge
and
js
push
call
inc
jl
xor
into
mov
mov
pop
mov
dec
dec
adc
ds
xor
fldt
sbb
jp
dec
mov
push
aam
jmp
mov
and
repnz
out
fstl
jns
fmull
ret
ret
mov
mov
cltd
cltd
add
shl
lret
push
jnp
xchg
hlt
shlb
push
aam
test
in
js
mov
xlat
or
add
jbe
jns
imul
mov
cmpsb
inc
into
call
popf
ret
or
and
lcall
scas
stos
bound
enter
mov
in
adc
sub
cmp
push
jg
test
and
or
sub
lds
xor
jno
cs
movsb
jmp
sti
add
mov
lea
push
shll
and
stc
stc
jbe
xchg
push
stos
fistl
push
cld
inc
insb
xor
or
fadd
loopne
xchg
cmpsl
push
or
and
dec
mov
out
ret
xor
icebp
add
aas
pop
int3
lea
loop
lea
lods
dec
jbe
aaa
sbb
adc
mov
out
in
add
repnz
pop
pushl
push
int3
mov
imul
jl
jo
mov
maxps
cwtl
jno
flds
sbb
adc
mov
int3
mov
pop
jno
subl
pop
std
jg
push
xor
cmp
and
cmp
ds
sub
rclb
lcall
mov
mov
roll
mov
out
in
ret
push
out
xchg
or
mov
in
movsl
inc
int3
in
sbb
push
and
xchg
cmpsl
push
outsb
pop
shll
cwtl
mov
or
cmp
lea
xor
repnz
insb
fiadds
dec
ljmp
rcrb
jae
mov
les
jecxz
testb
and
adc
sub
jecxz
adc
imul
jbe
mov
sub
xor
mov
push
pop
sub
mov
lods
cwtl
mov
pop
jo
inc
ja
data16
mov
push
ljmp
push
dec
or
insl
cmpsb
dec
gs
push
pop
jecxz
push
scas
test
mov
xchg
lret
inc
inc
ror
cmpsl
mov
shl
setle
addr16
lods
inc
pushf
xor
les
enter
sbb
push
cmp
inc
mov
mov
loop
ret
aad
mov
sarb
subl
mov
out
dec
lock
mov
push
mov
add
jae
pop
xor
mov
gs
fnstcw
xor
repz
adc
inc
cmp
movsb
push
es
pop
addr16
cmp
xchg
cmpxchg
xchg
sub
mov
jae
adc
mov
adc
mov
dec
dec
lods
outsl
lret
fildll
mov
cli
inc
icebp
add
cmp
jo
mov
xchg
xchg
js
fsubs
xlat
cmp
test
push
test
imulb
fbstp
sub
push
aam
lret
add
inc
pop
scas
or
push
jbe
cmpl
pop
das
pop
xchg
pop
pop
xchg
add
push
dec
push
inc
lret
mov
aad
mov
jecxz
and
ficompl
and
cld
pop
mov
iret
xor
nop
int3
pop
sub
add
xorl
mov
sti
faddl
nop
or
test
push
add
cli
or
inc
popa
mov
es
ficompl
cmp
add
push
sub
mov
mov
pop
cmpsb
jecxz
ljmp
sub
in
cmc
jle
adc
adc
testb
jbe
movsb
js
insb
mov
or
in
movsl
mov
inc
pop
out
pushf
imul
sbb
mov
push
jmp
dec
or
add
hlt
or
inc
or
cmc
xchg
rolb
push
sub
jo
pop
sti
out
iret
setge
ret
dec
jp
add
mov
sbb
insb
add
add
or
jno
fs
jl
jne
adc
cmp
sahf
xor
nop
mov
inc
xchg
inc
jno
lea
push
cmc
mov
cmp
ret
xchg
push
out
xchg
insb
dec
jmp
mov
pop
in
insb
cs
gs
add
das
cmc
fnstcw
sbb
sub
out
cmp
inc
mov
mov
push
push
jno
sti
xchg
mov
lea
test
bound
clc
mov
test
into
ret
aam
mov
dec
add
jmp
sub
mov
aam
lods
jp
mov
stc
out
dec
ds
push
sbb
stc
push
lods
and
jmp
lahf
mov
sub
pop
xchg
xor
dec
rcll
or
jo
fsubrs
push
push
cld
lahf
insl
aaa
jp
jb
mov
mov
push
push
mov
push
jp
push
xchg
data16
shrb
or
icebp
stos
dec
int3
fwait
xchg
xchg
call
lea
mov
mov
add
pusha
in
mov
mov
icebp
push
repnz
mov
xor
pop
dec
add
cmp
xor
xchg
pop
push
push
cmc
lret
das
dec
jb
mov
ret
in
adc
popa
cwtl
call
test
inc
mov
sub
cmpsl
in
cltd
mov
push
fs
loopne
and
mov
mov
xchg
mov
mov
gs
cmp
pop
adc
pop
adc
inc
add
push
test
loope
xchg
mov
pop
js
sarb
push
xorl
mov
jle
lret
jecxz
inc
data16
jmp
push
add
jnp
lds
aad
dec
es
cmp
orl
and
nop
and
cmpsl
and
inc
je
mov
jmp
cmp
call
out
mov
loope
mov
pop
popf
aas
out
shrl
xchg
mov
push
inc
arpl
xchg
mov
test
jp
je
xchg
cltd
int
fcmovb
jno
push
addb
andb
sub
movsb
pop
xchg
jo
cmp
gs
loopne
xchg
cmpsl
push
mov
inc
pop
leave
cwtl
pop
ret
sub
cmp
cmpsb
xchg
adc
xor
stos
xchg
mov
dec
jecxz
imul
adc
test
les
mov
fistpl
jno
jne
lret
shlb
mov
cmpl
daa
mov
inc
sti
sti
lcall
or
int3
push
jo
sahf
pop
gs
imul
xlat
scas
push
pop
and
notb
or
aas
je
jns
sub
loopne
jno
cltd
or
jnp
lcall
imul
lret
add
lcall
mov
mov
clc
jns
sbb
lahf
les
pop
nop
mov
add
adc
aas
xlat
ds
loop
ja
imul
sbb
sbb
cs
mov
or
aam
push
aaa
jnp
mov
mov
cmp
enter
ja
push
mov
mov
jns
rcl
lea
add
mov
fmul
jmp
pop
fistpll
in
jae
inc
addr16
and
push
jbe
mov
cmp
es
pop
test
mov
test
jne
xlat
sub
xchg
xchg
jle
or
adc
test
cmp
jle
jne
jecxz
mov
jo
push
mov
popa
fdivrs
or
and
inc
daa
bound
jmp
inc
jle
xchg
mov
arpl
jb
xor
add
mov
fsubs
inc
leave
jo
jmp
bound
mov
xchg
and
imul
arpl
js
inc
sbb
cmp
push
xchg
lds
adc
out
bt
and
loop
imulb
and
xor
divl
adc
les
mov
ljmp
rclb
pop
lods
test
lret
insb
xchg
repz
jnp
das
lods
pop
cmp
sub
sbb
pop
test
jge
mov
jecxz
popf
jns
mov
sbb
leave
int3
pushf
push
jb
adc
test
lahf
out
test
in
jmp
mov
loope
jnp
dec
sbb
popa
outsl
movsl
stc
sbb
mov
shr
aaa
andb
in
cmp
cmp
in
gs
cmpsl
test
fistpll
push
rcr
xor
or
mov
int
js
inc
adc
es
pop
xchg
aaa
sarb
cmpsl
adc
mov
mov
dec
push
in
add
push
pop
push
jp
stos
jl
adc
mov
pop
bnd
mov
mov
mov
xchg
jp
test
std
in
sub
sbb
sbb
adc
mov
aam
push
pop
and
xor
clc
mov
jl
int3
jmp
lret
pop
mov
sub
inc
subb
mov
push
cmpl
jnp
inc
adc
add
jle
lret
icebp
sbb
andb
mov
popf
test
mov
cmc
jecxz
dec
jge
jb
push
testb
mov
das
pop
scas
adc
mov
jb
sahf
addl
ret
mov
push
filds
sbb
dec
xchg
adc
je
cmc
push
adc
dec
mov
test
insb
shlb
out
dec
setp
fistpll
outsl
adcl
mov
fldenv
sti
arpl
mov
fsubs
dec
xor
aas
mov
sbbb
ljmp
ds
stos
ret
sbbl
arpl
pop
mov
inc
adc
stos
pop
mov
or
jl
cmpsb
xor
loopne
jl
xchg
inc
and
xchg
mov
mov
sub
xchg
ja
into
adc
clc
mov
dec
pop
int3
adc
in
jecxz
sbb
das
cmp
xor
loop
cmp
repnz
jl
push
mov
fldenv
push
aas
out
les
movsb
sub
pop
loop
sbb
mov
enter
shll
mov
add
ds
out
jae
je
cmp
fldl
mov
gs
ss
lret
cmpsl
aad
fsubrl
mov
xchg
outsb
incb
lahf
lods
repnz
filds
out
push
aad
in
and
clc
dec
ret
push
cmp
inc
inc
arpl
loop
adc
mov
jmp
clc
dec
call
jne
pop
add
outsl
pop
scas
hlt
and
in
add
fwait
inc
sub
popf
stos
push
add
sahf
dec
jb
int
or
iret
popa
dec
mov
sub
lods
mov
cltd
faddl
sbbl
out
adc
sbb
ret
pop
imul
in
inc
mov
push
jl
mov
pop
xchg
inc
sub
push
xchg
cmp
pop
std
or
push
xchg
js
cmpsb
ljmp
push
std
push
xor
xchg
lret
and
cmpsl
imul
push
popf
ss
in
xor
add
lcall
or
cmp
cmpb
inc
fmull
je
test
jo
lods
cmpsl
inc
in
enter
mov
xor
xor
xor
int3
out
xor
mov
pop
in
adc
shl
pop
pop
xchg
enter
mulb
ja
out
inc
sbb
cmp
dec
ret
mov
cmp
cmc
loopne
and
js
fldcw
in
xor
loop,pt
inc
inc
xchg
dec
jmp
data16
js
add
jmp
cmc
imul
movsl
add
xchg
sub
xchg
pop
sbb
lahf
es
sbb
xchg
adc
loop
lods
mov
ret
cltd
xchg
inc
js
add
mov
adc
std
xor
adc
shll
pop
stos
in
cmp
cmp
jl
inc
pushf
lret
flds
les
pop
mov
mov
daa
fbstp
push
push
bound
sar
outsl
push
sahf
mov
popa
out
es
add
sbb
xor
push
dec
lcall
cmp
mov
fwait
xchg
into
push
inc
out
mov
enter
iret
into
movsl
cmpl
stos
lock
es
jbe
repnz
test
lcall
jo
shld
pop
pop
jae
jae
ficompl
dec
sahf
jecxz
adc
mov
pop
js
enter
test
sahf
sub
addr16
jg
ret
lcall
je
mov
jno
sub
xor
jbe
add
insl
xchg
int3
lret
ljmp
jp
mov
jo
adc
es
sahf
and
mov
add
sahf
mov
mov
aad
inc
pop
push
jmp
pop
cmp
dec
or
fldenv
shll
fsubrs
mov
shrb
mov
hlt
inc
add
pusha
sbb
clc
cld
mov
lret
fistpl
adc
cld
dec
pop
xchg
sub
sbb
mov
sbb
nop
push
je
loop
cwtl
xor
ja
lods
or
inc
mov
xor
lods
mov
mov
dec
cmc
cli
mov
cmpsb
outsb
adc
loopne
into
test
scas
sub
es
stos
clc
cmp
push
bound
push
jle
push
inc
fldenv
fbld
mov
pop
adc
jmp
cmp
push
or
or
aam
fs
cmp
out
inc
xor
mov
cmp
jge
mov
orl
repz
dec
or
inc
push
in
scas
shll
xchg
add
out
popf
stos
ret
jae
add
adc
scas
cld
fmuls
adc
xchg
ja
cmpl
mov
in
cmp
sub
mov
sbbl
pop
mov
cmp
cwtl
fwait
mov
mov
xor
ja
jb
mov
jcxz
clc
mov
movsb
insl
or
sub
call
sub
xchg
movsl
mov
dec
or
mov
push
sbb
mov
cmpsl
mov
adc
push
inc
and
mov
xchg
xchg
int
repz
fdivrp
mov
adc
sbb
add
imul
mov
jne
adc
pop
add
into
fnstsw
sti
lahf
pop
mov
movl
aaa
mov
push
and
adc
jecxz
adc
nop
sub
mov
shl
lds
sbbl
out
divl
scas
pushw
inc
mov
call
mov
pop
dec
pop
cmpsl
xor
adc
popa
jnp
bswap
jae
xchg
pop
shl
out
pushf
sub
fldt
mov
xor
stc
rcl
xchg
xor
push
jae
das
dec
ss
lods
push
mov
and
xchg
push
cld
inc
dec
jge
pop
adc
adc
sub
lods
sub
orb
mov
cmp
or
fs
clc
cmc
mov
cmc
add
sbb
ljmp
mov
pusha
mov
push
sub
push
out
cltd
jbe
mov
je
pop
pop
stos
xor
je
aad
dec
outsl
or
iret
aad
sbb
out
cmpsl
test
imull
stc
bound
stos
std
lods
in
lods
mov
push
cmp
jp
mov
mov
mov
push
or
dec
rorl
inc
add
scas
pop
mov
insl
cmpsl
test
std
loope
mov
addl
jecxz
cs
lret
lret
jmp
sbb
push
cwtl
xor
cli
iret
inc
sbb
sub
sub
je
mov
dec
jne
out
mov
cmp
pop
mov
push
pop
sahf
xor
jg
pushf
push
jns
rcl
call
loopne
and
xchg
cmovs
negb
fdivrs
stos
inc
push
bound
repnz
add
xor
cwtl
cmpb
jae
and
pop
and
dec
inc
jns
lea
dec
cwtl
inc
out
in
or
jg
xor
xchg
jl
in
jge
das
stos
add
pop
enter
lea
inc
xlat
jbe
push
sub
mov
mov
cli
lret
push
int3
subl
insl
stc
pop
mov
mov
pop
mov
mov
ja
test
nop
mov
jle
lahf
mov
adc
or
and
and
fsts
ljmp
es
incb
add
mov
cmp
sub
jg
test
jne
repz
rcrl
int
lret
movsl
stc
dec
es
addr16
push
mov
and
jp
mov
iret
imul
xchg
fwait
sbb
mov
sub
nop
fwait
xchg
jb
clc
sbb
mov
adc
in
and
xlat
mov
mov
cmp
out
fs
fwait
xor
pop
mov
in
test
cmp
sub
pushl
xor
in
or
xor
inc
leave
bndstx
mov
inc
adc
push
sub
pop
mov
pusha
jl
sbb
mov
es
push
fwait
mov
inc
xchg
fwait
mov
push
mov
movsb
dec
into
cmp
mov
add
mov
inc
lods
out
push
xor
push
lret
fisubrl
pop
cmp
xor
mov
pop
jecxz
mov
loope
push
jnp
cltd
pop
loope
out
jmp
sub
incb
lods
orl
add
std
loopne
ficompl
sub
mov
adc
sbb
xchg
xor
stos
out
movsb
cmp
xor
mov
jge
rorl
sti
das
mov
lods
aaa
xchg
arpl
rep
inc
arpl
cwtl
hlt
adc
loope
aas
push
iret
nop
sub
das
fidivrs
paddsw
sbb
loope
pop
pop
push
cmp
sarb
ja
lcall
bound
aaa
jg
mov
dec
add
xor
cwtl
int
pop
mov
test
mov
scas
frstor
and
pop
inc
ret
cmpsl
mov
scas
or
pop
clc
mov
bound
jp
mulb
lahf
mov
cld
shll
mov
push
in
sub
xor
mov
in
mov
repnz
call
sub
jg
sbb
jbe
dec
xchg
inc
sbb
mov
jg
fwait
xchg
cs
mov
out
pop
icebp
xchg
sub
or
pop
imull
adc
or
fdivrs
scas
add
pop
mov
mov
dec
mov
lds
fldl
sub
add
mov
and
pop
xchg
push
test
int
lds
pop
cmp
in
fisttpl
push
mov
sub
add
imul
iret
sub
xchg
add
or
xchg
arpl
lods
loope
pop
jnp
jne
repz
cmpsl
inc
lahf
roll
inc
call
stos
scas
push
sahf
lret
in
maskmovq
divl
rorl
into
icebp
clc
rcll
cltd
jb
movsl
mov
or
pop
int3
in
cmpsl
or
imul
push
imul
lods
xor
clc
jp
lds
mov
lahf
out
shrb
or
push
jmp
jbe
xlat
or
sub
addr16
add
shlb
push
arpl
ror
mov
imul
lds
test
mov
cwtl
not
mov
daa
add
push
and
addb
xor
mov
push
pop
jno
adc
movsb
inc
addr16
gs
popf
jo
imulb
mov
pop
loop
mov
sarl
xchg
dec
dec
movsb
adc
mov
pusha
loop
jmp
or
cld
push
add
push
outsl
not
mov
pop
in
xchg
add
adc
call
xchg
dec
cli
sbb
imul
jmp
add
push
push
xchg
sub
mov
jnp
cli
pop
repnz
clc
mov
mov
pop
xlat
lods
xchg
xor
scas
jb
xorb
sub
xchg
negb
push
inc
mov
fucom
lds
test
push
cld
mov
ss
xor
popa
cmp
out
das
jmp
jmp
mov
jo
pop
inc
adc
or
adc
cmpl
mov
loop
xor
jp
dec
xchg
adc
insl
clc
or
inc
jge
jl
push
dec
pop
pop
sub
xor
lcall
jae
jae
xchg
addl
roll
ljmp
xchg
and
dec
adc
push
data16
adc
sbb
outsb
fldl
pop
jle
int3
imul
test
inc
sbb
or
push
push
mov
xlat
jo
dec
ret
leave
nop
lahf
inc
in
jge
lea
out
dec
mov
mov
cmp
fsubrl
jns
jmp
fcoms
fidivrs
divb
mov
stc
cmp
cmpsb
pop
addr16
dec
cmp
jae
xchg
and
sub
cmp
or
jecxz
in
lock
out
dec
push
inc
mov
ret
or
xchg
cmp
loopne
adc
insb
scas
sbb
sub
imul
lea
ffree
aaa
sbb
mov
mov
mov
mov
sub
pop
pusha
nop
mov
mov
add
je
add
aad
into
imul
and
and
decl
jns
xor
add
fcmovbe
adc
test
pop
fmull
ljmp
dec
outsb
jbe
arpl
jns
inc
or
push
xlat
aaa
dec
add
ljmp
fsubl
sub
pop
into
add
jg
icebp
dec
adc
xor
mov
pop
mov
and
out
jbe
popf
lea
insl
into
cmp
cmp
mov
pop
mov
lock
mov
mov
mov
ret
out
or
mov
xor
call
fimull
push
sbb
ja
lods
mov
or
sub
jmp
xchg
out
test
mov
leave
push
ja
fmull
dec
pop
sub
mov
and
out
adc
fdivl
or
jl
fcmovnu
addl
out
gs
fbstp
les
mov
jmp
xchg
lea
outsl
xchg
outsl
mov
push
xor
aad
in
mov
shlb
ja
dec
inc
xchg
in
in
dec
adc
imul
les
ljmp
xor
ss
mov
addl
push
test
cmp
shll
inc
fs
mov
std
pop
mov
add
pop
jmp
push
mov
scas
ret
and
mov
xchg
xlat
addr16
mov
scas
xchg
add
cmpsb
fwait
inc
mov
dec
imul
pop
adc
adc
fnstcw
insl
push
mov
imul
orb
out
jne
aam
mull
and
int
add
mov
int3
ret
xchg
sub
dec
and
adc
iret
adc
jge
add
pop
hlt
pushf
xchg
divb
call
mov
mov
scas
ljmp
xor
sub
orb
or
and
xchg
incl
inc
std
cmpl
lods
aas
cmc
enter
jo
iret
adc
mov
xchg
lret
mov
mov
pop
or
or
aaa
out
mov
inc
jle
dec
xchg
adc
das
divb
cmpsb
inc
mov
pop
mov
and
adc
dec
mov
mov
ja
pusha
int
sbb
call
mov
push
test
loopne
inc
jbe
mov
sub
popa
xchg
adc
pop
jl
iret
addl
cmc
iret
mov
cltd
mov
adc
lods
or
test
adcl
into
stc
cmp
sahf
xor
or
sar
outsb
ja
cmc
pop
pop
scas
ja
aaa
dec
lods
clc
and
push
fstps
mov
in
jge
mov
aas
and
rcrb
push
mov
sbb
cmpsw
scas
mov
pop
or
cmp
dec
pop
shlb
adc
dec
jb
dec
pop
repz
or
mov
push
enter
xor
cli
sub
repz
call
push
mov
lods
jbe
bound
xor
ds
ret
jb
and
xor
lcall
negb
xchg
push
pop
mov
data16
mov
pop
xor
daa
aas
xor
dec
adcb
js
push
push
in
mov
stos
fisttpl
pop
xor
inc
sbb
pop
lods
inc
add
stc
push
xor
sti
dec
xor
scas
lea
pop
sbb
out
in
ja
je
or
leave
cmpl
sub
and
jle
mov
dec
ss
dec
enter
test
mov
or
sti
leave
jmp
push
jp
addr16
add
cmp
xchg
mov
jg
mov
xchg
inc
lea
or
fistpl
xchg
push
stc
cmpsl
dec
jbe
jle
daa
jmp
push
in
sub
pop
out
stc
mov
int3
subl
orl
mov
repz
jo
int
or
mov
pushf
in
cwtl
mov
lods
inc
sbb
cld
ds
sahf
divl
xchg
sar
cmp
aas
lahf
ror
fdivrl
xor
push
in
out
mov
xchg
mov
mov
pusha
inc
adc
sbb
pop
sub
outsb
pop
pop
push
int
xchg
sbb
pushf
xchg
mov
aam
fcompl
aam
add
pop
mov
add
popl
mov
jno
inc
mov
enter
fiadds
jge
or
mov
imul
xchg
jg
fcoms
decb
test
fdivrs
and
mov
push
adc
pop
jb
icebp
lret
int
pminub
push
mov
aas
and
jg
cmp
icebp
dec
pop
cwtl
mov
push
dec
xchg
push
into
ljmp
stos
push
popf
and
cmp
inc
jg
xchg
pop
insb
and
and
push
mov
push
bound
mov
dec
push
dec
aas
dec
sbb
sub
adc
out
in
cli
outsb
ljmp
ret
cld
push
shll
jg
lret
xchg
lret
shrb
mov
push
xor
push
lret
jbe
rolb
mov
cmp
cmpsl
and
fwait
in
clc
sub
inc
icebp
ljmp
adc
in
scas
frstor
jp
and
stos
push
mov
test
int
sub
fdivs
xchg
loop
gs
sar
xlat
idivl
jb
push
movsb
sub
arpl
icebp
nop
lods
cwtl
add
lret
insl
inc
xor
into
push
inc
adc
add
lock
sti
sub
cli
push
add
cmp
or
cmpsl
add
lock
and
loop
mov
mov
pop
rol
lds
inc
push
inc
sub
mov
xchg
xlat
add
ss
pop
repnz
es
test
adc
push
sbb
ja
test
cmp
rcll
xchg
cmc
fists
icebp
sbb
ficompl
dec
push
popa
xchg
test
sbb
jb
jae
loop
xchg
push
xor
inc
push
icebp
mov
xor
out
lods
nop
dec
cmp
push
cmp
add
sahf
xchg
fsubrl
sarb
and
and
mov
pop
aas
addr16
mov
ljmp
ds
cs
neg
cmp
int
add
adc
dec
outsb
xchg
pop
aaa
sub
out
movsb
cmp
loop
lods
push
icebp
jp
lahf
lods
sbb
sbb
movsb
xlat
or
pop
dec
cwtl
in
loope
xchg
and
adc
mov
pop
imul
cmp
lret
sub
lahf
test
pop
mov
lahf
adc
ja
pop
repnz
mov
jmp
inc
push
cld
inc
mov
jle
adc
push
mov
in
jge
add
push
xor
stos
ja
loope
jne
mov
mov
mov
or
test
add
cmpsl
push
dec
dec
je
mov
cmpb
xor
push
jmp
fidivl
lret
mov
jae
push
shrl
dec
hlt
test
jecxz
in
movsl
jmp
mov
test
push
pusha
fstp
stos
dec
sbb
pop
loope
push
aam
xor
loopne
cmp
dec
xchg
mov
lahf
adc
push
push
pop
mov
cmp
lcall
fwait
push
je
or
sbb
sbb
fwait
lds
sbb
and
sarb
or
addr16
into
sbb
fstl
pop
push
fldt
addr16
incl
repnz
xor
or
in
mov
f2xm1
xorl
lcall
adc
ljmp
es
mov
xor
pop
shrb
xor
sbb
scas
pop
mov
lahf
das
loope
inc
jle
xchg
jp
push
mov
xchg
stc
mov
push
cmpsb
push
pop
mov
and
in
ds
mov
fnsave
ret
jb
fwait
jno
rorb
imul
jnp
pop
arpl
repnz
fsub
adc
pop
adc
mov
dec
cltd
out
outsl
and
fidivl
cmp
mov
cmpsb
adc
lahf
in
addr16
arpl
leave
lods
xorl
xor
in
sub
cmp
sbb
mov
cmpsb
out
inc
and
add
push
jne
mov
add
push
mov
mov
iret
xlat
into
jb
pusha
insl
add
inc
xchg
dec
int3
shlb
sti
test
push
iret
xchg
pusha
cmp
mov
sub
pop
ret
adc
mov
rcll
sti
xchg
xchg
sub
mov
jbe
mov
and
hlt
push
mov
inc
jne
dec
mov
test
sbb
xor
fcompl
pop
push
adc
arpl
dec
lret
fnclex
dec
xor
jecxz
xor
fmull
test
lock
sbb
ljmp
or
out
lds
repnz
and
xchg
lea
jae
fdivr
rol
enter
or
mov
fcoms
add
into
mov
mov
cmp
cmc
das
sahf
push
js
call
inc
xchg
push
dec
lock
ret
inc
mov
nop
adc
push
es
test
sti
and
addl
cmp
movsb
insl
scas
mov
hlt
adc
push
in
popa
hlt
add
inc
mov
xchg
xchg
sbb
mov
mov
or
cs
ds
push
and
dec
push
cmc
in
imul
pop
ljmp
mov
out
xor
lss
aaa
and
pop
je
fwait
lret
dec
arpl
gs
insb
cmp
pop
push
mov
inc
subb
fwait
outsl
push
sub
movsb
xor
inc
xor
or
es
and
sbb
lods
inc
cmp
dec
out
or
test
ss
rol
popf
jecxz
xor
mov
mov
loope
lret
jge
adc
xlat
pop
xor
mov
and
xchg
gs
mov
inc
cmpsb
push
lds
pop
pop
data16
pop
insb
xlat
cmp
fcmovnu
add
and
jle
orb
in
data16
jnp
jmp
ss
push
or
mov
fwait
outsb
fistpll
mov
pop
dec
or
jle
xor
sbb
dec
lods
xlat
aas
adc
push
mov
popa
mov
pop
ja
aas
dec
insl
xor
cmpsl
sub
mov
inc
cwtl
mov
push
imul
mov
adc
insl
ss
xchg
ficomps
stc
sbb
jbe
mov
lahf
lret
jl
add
sub
stos
xor
add
inc
and
movzwl
fdivrs
stos
pop
sub
stos
sub
cmp
mov
aad
mov
jae
jne
push
push
dec
push
lcall
jns
das
mov
xor
jp
mov
stos
in
inc
sti
sahf
add
inc
ficomps
imul
ds
dec
fst
add
loop
clc
das
dec
fidivrl
pusha
mov
jg
int
fxch
xchg
shlb
push
inc
dec
fcoml
outsl
mov
enter
pop
js
std
popl
fs
idivb
aad
nop
jecxz
cld
jnp
jnp
imulb
inc
cmp
lods
pop
pusha
push
sti
ljmp
rorb
dec
pop
jge
adc
push
or
jl
mov
movsb
icebp
lret
pop
pop
imull
mov
xlat
in
mov
lret
jp
xor
jo
xor
rcr
sbb
loopne
orb
jge
jb
or
jecxz
aas
movsb
xchg
gs
pop
out
ja
into
lods
add
stos
sub
and
mov
iret
push
dec
in
dec
jg
stos
or
sbb
jle
loope
mov
outsb
mov
dec
pop
rcll
cmp
cmp
into
sbb
cmp
ret
rcr
fldl
dec
popf
lds
addl
push
pop
inc
dec
push
and
or
inc
nop
pop
and
in
lret
dec
mov
push
pop
sbb
jno
data16
out
addr16
mov
bound
xchg
or
clc
xlat
hlt
pop
push
test
push
xchg
cld
mov
and
std
sub
jg
aas
ja
inc
lret
aam
cmp
or
inc
pop
pop
int3
mov
jmp
aam
inc
mov
inc
add
rcll
xor
mov
jb
jne
sbb
xorb
cmp
add
sbb
ds
std
cmp
push
std
pop
repnz
ss
mov
addb
pmaxub
test
scas
es
dec
insb
repnz
jge
idivl
jg
jno
fisttpl
dec
aam
fnstenv
popf
cltd
inc
pushf
addr16
jnp
pop
lret
repnz
xchg
pop
ds
and
push
loope
and
sti
sbb
loop
pop
iret
or
dec
or
jle
lcall
pop
enter
mov
test
mov
shl
and
loopne
pushf
sbb
push
repz
pop
mov
adc
or
pop
insb
pextrw
outsb
in
dec
fst
cs
into
fcoml
in
je
push
lock
fildll
gs
mov
cmc
push
pop
imul
in
jnp
lea
push
jo
pop
arpl
insb
das
loope
popa
xor
push
movsb
push
leave
ss
sbb
cli
stos
clc
fnstenv
sub
mov
dec
or
es
adc
adc
mov
ljmp
sbb
dec
in
push
inc
loop
fs
adc
sub
imul
xor
dec
inc
stos
hlt
mov
inc
ja
cmp
mov
sub
mov
imul
push
dec
xor
and
ljmp
xlat
pop
mov
lock
in
jo
and
rcl
pop
or
lcall
adc
xchg
inc
xor
loop
out
pop
adc
mov
jmp
rcl
and
and
xchg
adc
int3
enter
mov
inc
pop
std
loope
test
cmc
mov
push
dec
adc
jge
call
lock
ficompl
mull
add
inc
in
pop
icebp
shlb
ss
test
xchg
inc
adc
push
test
and
add
dec
xchg
push
or
out
adc
mov
inc
sub
cmp
sub
jmp
lahf
sub
xorl
aaa
lahf
xchg
lds
test
pop
dec
adcb
in
cltd
subb
inc
mov
push
cmp
leave
mov
stos
cmpl
das
dec
je
movsl
bound
or
imul
das
xchg
int3
dec
jle
or
clc
mul
pop
mov
inc
imul
int
xchg
sub
xlat
mov
ret
inc
mov
xchg
jg
xlat
fidivs
sbb
mov
lret
cmp
mov
fistps
leave
ljmp
or
loop
mov
scas
push
mov
sti
cmp
aas
dec
call
repnz
push
and
mov
lods
jp
stos
fadds
xor
sti
mov
push
fmull
dec
dec
fildl
pop
adc
mov
cld
imul
rep
imul
lds
push
xorl
ret
into
xchg
mov
adc
fmul
movsb
das
xor
sub
das
roll
loope
adc
stos
cmpsl
push
mov
call
shll
clc
push
mov
cmp
jg
gs
cltd
xchg
test
inc
cmpsb
sbb
mov
lret
sti
rolb
movsb
dec
push
fwait
add
push
cmp
xlat
repz
mov
fnstenv
sbb
inc
lods
or
mov
repnz
xor
rol
push
repnz
cmp
or
test
pushf
jmp
mov
daa
cltd
dec
and
pop
rcrb
or
jl
into
or
roll
icebp
int3
add
add
call
mov
std
shlb
xchg
sub
sub
mov
jge
scas
xchg
daa
and
jnp
lret
push
add
out
mov
imul
aam
fstps
and
stc
fnstsw
xchg
leave
sub
lea
rcll
frstor
fsubr
sub
cmp
in
imul
push
jns
add
add
jae
inc
movsl
pop
lahf
cmp
sub
roll
out
in
mov
dec
push
sub
popf
ret
sub
pop
addr16
mov
es
jge
jbe
in
jg
xchg
jae
pushf
mov
ret
cmp
mov
pop
pop
decb
popa
mov
sub
xchg
into
pop
push
jno
adc
test
int3
cmpl
in
lods
dec
negb
packssdw
adc
xchg
ret
enter
stos
pop
xchg
xchg
jb
or
xchg
add
lock
cli
mov
and
jns
or
add
mov
movsb
enter
loop
xor
push
testl
out
inc
fs
adc
push
adc
dec
rclb
sbb
out
pop
rcl
mov
pop
loopne
adc
cs
pop
inc
jb
lods
out
mov
fidivl
pop
ds
popa
sub
push
xor
jnp
mov
fsub
sti
xchg
adc
popa
push
int3
xor
jns
and
gs
cltd
cli
sahf
mov
add
ja
push
call
gs
imul
addr16
fcoms
jp
xchg
dec
jecxz
xlat
fdivp
out
jmp
mov
xchg
in
mov
fnstsw
or
int
std
pop
mov
dec
sub
pop
out
sbb
and
adc
mov
mov
sbb
and
push
cmp
adc
movl
push
popf
repz
lds
xchg
in
dec
ljmp
push
ss
jns
inc
xchg
ret
adc
push
cmpsb
pop
mov
lock
xor
fcmovu
mov
mov
add
jge
mov
and
push
and
add
sub
and
mov
fs
mov
sbb
popf
add
lcall
dec
and
sbb
gs
out
push
jns
notl
inc
cld
ljmp
movsl
jo
cmp
and
ret
fildl
sbb
test
mov
push
mov
cmpl
cmp
ds
cmp
je
fdivrs
stos
push
into
xchg
test
xor
in
xor
sub
jo
mov
dec
jbe
andb
pop
cltd
jae
lock
mov
sbb
ja
sbb
movsl
test
dec
lods
jns
and
sub
dec
data16
mov
cmpl
loope
sbbb
sbb
je
push
cmp
xor
inc
and
mov
cli
add
loop
das
repnz
cmp
aaa
shlb
das
mov
ficoms
jnp
pop
mov
lds
or
out
cwtl
in
movsl
int
adc
adc
push
xor
fmul
call
mov
xor
add
mov
pushf
leave
js
aad
imulb
adc
idivl
fimuls
out
and
inc
in
or
xchg
cmp
rcrl
inc
popa
in
dec
mov
aaa
sbb
xchg
pop
sti
jp
and
push
xor
repnz
out
insb
pop
rcr
add
shrl
out
scas
adcb
lret
cmp
inc
fdivs
andb
out
aam
xor
mov
lahf
stc
test
push
loope
les
pop
xchg
or
and
testb
mov
xor
inc
lcall
insl
mov
mov
stos
arpl
inc
mov
fsubrp
or
mov
xlat
dec
insb
mov
pop
scas
je
and
mov
mov
mov
icebp
push
pop
and
inc
cmpsl
adc
jb
lods
clc
add
adc
and
cmpsb
jns
sbb
jns
gs
ret
adc
or
add
xor
shlb
add
inc
mov
fbstp
and
mov
icebp
out
pop
jecxz
ss
xchg
inc
arpl
in
repz
addr16
jle
xor
mov
mov
bound
enter
add
mov
les
fsubl
ja
pop
enter
and
pop
inc
and
cmp
mov
pop
cmpb
mov
or
xchg
mov
dec
mov
loope
out
incl
adc
insl
mov
jge
int3
xor
ja
pop
ds
jne
loope
mov
cmp
jnp
leave
stos
cmp
lret
cmp
sar
test
add
lods
mov
sub
adc
mov
xchg
nop
stos
cmp
xor
lcall
pop
nop
or
fsubrl
hlt
jae
push
ret
sub
movsb
inc
inc
dec
leave
loopne
push
push
pop
push
lahf
mov
aad
aaa
fcomps
push
xchg
scas
jge
dec
xor
adc
sub
lcall
push
fnstcw
mov
sti
inc
enter
mov
mov
jns
into
fists
xchg
dec
mov
xor
mov
inc
pop
hlt
pop
sbb
lods
adc
testb
jl
adc
pop
frstpm(287
jb
lds
mov
cmp
inc
cli
add
sbb
mov
xchg
jns
outsl
cmpsb
stos
add
mov
cltd
std
aad
lock
xchg
imul
int3
sub
jmp
scas
sub
mov
pop
sar
popa
sub
lea
lods
push
pop
xsha256
cmpsb
push
inc
repz
jo
jbe
mov
cs
je
mov
pop
imul
inc
arpl
loope
xchg
data16
fbstp
cmp
in
les
adc
pop
loope
mov
push
xchg
xchg
lahf
and
push
xor
push
pushf
push
jno
pushf
mov
xchg
pop
mov
xor
enter
fucomp
xchg
cld
or
cs
push
mov
sub
fwait
mov
cmpsl
mov
popf
xchg
xchg
and
sub
jecxz
sbb
fildll
xor
cmp
add
mov
ret
and
out
mov
fs
and
leave
and
enter
mov
add
push
add
out
fwait
mov
lret
mov
mov
hlt
sub
xchg
push
cmpsl
sbb
pop
sahf
stos
and
cmpsl
imul
add
imul
mov
jecxz
push
fsubl
add
mov
lea
push
ret
std
xchg
arpl
popf
xlat
sbb
cmp
push
rorl
fiadds
into
pushf
out
push
jne
pop
jbe
mov
or
fs
and
mov
push
sub
pop
cld
jnp
or
inc
jmp
rorb
add
mov
insl
stc
cld
lds
push
pop
push
dec
testl
push
jle
xor
or
into
jne
ja
and
cmpsl
cmpsl
insb
adcb
je
lods
andb
xchg
mov
inc
push
in
cli
daa
std
test
lahf
add
ret
or
sub
cmpsl
out
mov
imull
xor
sbb
sub
movsl
das
popf
inc
shlb
pop
dec
int3
dec
mov
pop
jg
jl
mov
movsb
mov
and
inc
fmull
daa
out
inc
dec
cmp
sbb
mov
push
mov
or
pushw
int
pop
lret
inc
xchg
arpl
movsb
inc
sub
inc
jmp
imul
pmulhuw
jne
rorb
cmpsb
adc
pop
popf
out
imul
inc
add
fwait
jl
push
add
rcr
add
mov
rolb
outsb
jecxz
stc
dec
mov
add
mov
inc
sahf
out
in
sub
addr16
shll
pushf
in
pop
in
add
jecxz
fidivs
adc
add
out
pop
inc
add
out
mov
out
xchg
adcl
lret
int
xchg
std
les
stos
adc
cmc
push
mov
push
dec
cmp
mov
pop
out
orl
or
push
jo
mov
sarb
or
and
cmp
adc
fisubrs
scas
imull
fwait
and
xchg
das
jg
aaa
imul
repz
xchg
fwait
lds
insl
dec
push
cli
mov
or
sub
pop
mov
xchg
cwtl
xorl
xchg
into
sub
into
jne
jns
jg
out
cmpsb
leave
test
bound
sub
sbb
fsub
lods
xchg
jp
mov
cld
insl
add
jl
test
inc
and
cmp
mov
and
xchg
lahf
or
lahf
jmp
repnz
js
out
sbb
jmp
xchg
mov
mov
out
in
mov
test
aam
mov
fdivrl
xchg
cmpsb
jbe
adc
jge
loope
in
insb
push
addb
push
fs
fwait
fs
pop
in
in
negb
jo
test
or
inc
cmpsl
and
stc
ja
lcall
and
adc
call
popf
sbb
sbbl
test
jne
daa
jecxz
inc
jge
out
adc
add
xchg
jno
sahf
imul
or
mov
xor
or
inc
add
jecxz
mov
inc
sub
jnp
mov
adc
xor
loope
out
dec
xorl
jmp
pop
adc
jne
push
and
or
mov
or
or
fnsave
push
or
scas
fsubr
sub
inc
cli
pop
jae
test
mov
rorl
ret
out
sti
arpl
jnp
shrb
call
dec
mov
sbb
enter
scas
ds
stos
push
mov
xchg
jmp
test
sahf
add
gs
je
sub
pop
cmpsl
adc
push
mov
in
loopne
xchg
lret
mov
les
or
jo
stos
out
mov
mov
jns
xor
xor
clc
mov
lock
insl
xchg
lret
adc
addr16
xor
ret
andb
adc
or
inc
mov
pop
in
int
dec
out
ja
mov
repnz
mov
fs
push
push
sti
inc
mov
movsb
add
lea
sbb
sub
loop
push
add
xor
mov
es
mov
jl
mov
fsub
rcrl
hlt
lahf
and
lea
or
and
es
mov
popa
shlb
cli
or
shll
dec
adc
cmpsb
rorb
sbb
mov
pusha
out
insb
mov
sub
mov
mov
jbe
mov
mov
jmp
adc
sbb
add
and
xlat
into
fnstsw
fcomps
xor
movsl
push
push
int3
rol
data16
in
lahf
cs
icebp
jecxz
iret
xor
cli
cld
inc
test
xor
rorb
jle
mov
push
jecxz
das
jnp
mov
in
jno
lahf
notl
sbb
icebp
outsb
rolb
lea
rep
out
sti
cld
sbb
mov
xchg
dec
add
pop
jp
test
and
jmp
movsb
sub
push
xor
jp
lock
jb
test
adc
sub
and
arpl
mov
cmp
mov
xchg
cmp
mov
jle
aas
arpl
mov
out
inc
mov
inc
aam
xor
xor
jle
cmpsb
pushf
mov
jl
pop
scas
push
decb
pop
movb
adc
inc
sbb
int3
pop
cmp
out
cwtl
adc
stc
jl
out
setp
icebp
or
add
inc
pop
mov
pop
das
and
sbb
add
lds
jns
xor
fwait
mov
cmp
andl
push
lret
cwtl
inc
push
test
push
stos
sub
sub
push
adc
dec
jb
ds
aad
pop
jbe,pn
ss
jle
pop
jno
pop
mov
aas
cmp
add
and
pop
je
ljmp
xchg
mov
push
loope
call
outsb
mov
test
lret
inc
xchg
dec
sub
popf
mov
clc
cmp
sbb
scas
sub
sti
cmp
frndint
ljmp
push
add
xchg
or
push
pop
cld
sbbb
das
dec
fs
loope
js
movsb
out
jne
xchg
imul
dec
mov
iret
cmp
ljmp
add
sub
lds
push
pop
or
rcr
lods
xchg
lods
mov
pop
fildl
inc
sub
mov
fs
xor
movsl
lods
or
push
add
jp
and
push
cmp
sub
movl
mov
dec
cmp
imull
insb
inc
push
notl
sub
fisttps
push
inc
enter
push
inc
push
lea
out
fucomp
lahf
mov
int3
xor
mov
in
popf
and
repz
and
paddd
sub
push
mov
cltd
jp
jo
xor
push
in
loop
imul
lret
loop
scas
fdivrl
lods
ds
push
fucomp
fwait
and
int3
mov
stos
push
inc
add
out
push
dec
jno
mov
out
jb
pop
pop
sarb
push
pushf
movsb
push
xchg
adc
aas
sbb
mov
sub
mov
cmp
mov
popa
aas
fstpt
jl
jne
and
repnz
mov
mov
fsubrl
inc
mov
inc
insb
adc
es
gs
mov
push
orb
sti
cmp
push
inc
sbbl
adc
pop
out
sbb
cmp
out
test
or
sub
call
ret
cld
cmp
sub
shlb
nop
dec
or
ret
ja
int3
mov
pop
mov
mov
cltd
mov
cmp
imul
dec
pop
xchg
pushf
mov
and
iret
nop
fildll
lret
mov
push
push
pop
cli
aaa
pop
cld
add
fwait
or
subb
mov
mov
jp
dec
mov
popf
sahf
mov
ret
int3
mov
enter
pop
pop
sbb
imul
daa
cmp
call
icebp
or
mov
xchg
js
subb
stos
mov
in
jmp
mov
out
sbb
lea
fwait
lahf
mov
mov
mov
test
pop
leave
cmpsb
iret
lods
cvtdq2ps
push
fs
lret
or
mov
stos
push
mov
inc
push
and
loop
out
xchg
jl
into
and
mov
insb
dec
scas
hlt
stos
pop
fstpl
sub
loope
mov
repnz
fists
cltd
push
icebp
mov
test
mov
mov
sub
shrb
xchg
xor
in
xchg
xchg
jae
mov
xor
xor
push
lret
popf
roll
sub
movsb
jb
lods
mov
inc
jns
aam
mov
cs
negb
lock
jle
insl
popw
enter
or
mov
in
or
xchg
mov
pusha
movsl
adc
bound
jne
or
mov
mov
sub
jno
ret
mov
stc
pop
add
sub
xor
push
push
inc
mov
scas
je
mov
mov
mov
std
bound
jb
add
std
cli
int3
xchg
mov
ljmp
movl
fistps
adc
sti
push
adc
mov
out
push
movsl
clc
jae
test
cmpsl
je
outsl
push
out
jle
dec
fwait
iret
sub
daa
movsb
mov
imull
mov
idivb
adc
push
cwtl
push
and
inc
xor
adc
pop
jmp
out
out
sahf
imul
jbe
ja
gs
pop
adc
push
adc
insl
ret
das
cmp
inc
xor
mov
rol
mov
stc
jbe
push
repz
lret
outsb
sub
cmp
call
xchg
jmp
cmp
gs
or
ret
inc
loopne
bound
lret
addl
imul
add
rol
xor
in
jbe
mov
inc
test
dec
add
mov
mov
pop
aam
jnp
nop
adc
movsl
pop
adc
sbb
adc
mov
fsubl
fsubrl
mov
mov
inc
das
dec
ss
mov
mov
adc
xor
sbb
call
and
cmp
pusha
push
xchg
lahf
xlat
cwtl
in
in
sub
push
lods
push
ss
fnstsw
lsl
fcmovnu
iret
leave
pusha
int
sub
ss
cli
dec
cmp
rcrb
cld
imul
bound
pop
jl
daa
clc
sti
dec
mov
jecxz
ljmp
data16
pusha
int
dec
xor
lock
lret
xchg
jo
pop
mov
mov
inc
mov
iret
and
add
int
scas
ret
mov
bound
icebp
cmp
insl
pop
jae
outsl
mov
repz
nop
xor
sbb
inc
jbe
scas
inc
cmp
cwtl
sub
xchg
cmpsb
fstps
push
mov
jge
ds
fdivs
mov
insb
shlb
dec
std
jmp
hlt
test
mov
push
ret
pop
sub
sub
lods
xor
sbb
notb
sub
sbb
push
jle
movsb
dec
mov
mov
cmp
add
in
mov
or
sbb
mov
xchg
push
xchg
jne
testl
pop
mov
pop
sbb
lock
loop
cmp
or
scas
hlt
bound
xor
js
inc
push
out
mov
and
ret
jb
insb
push
xor
mov
pop
repz
in
daa
and
bound
xchg
arpl
add
xlat
cmp
cmpsb
aas
popf
mov
clc
dec
ja
mov
jecxz
test
insl
insl
sub
mov
lods
push
sbb
sti
adc
pusha
jp
lock
push
xor
and
and
mov
test
nop
out
pop
dec
arpl
xchg
notb
fwait
stos
dec
cltd
lret
fsub
jne
ret
stc
cwtl
addl
pop
ja
sbb
adc
inc
fisttpll
pop
mov
xor
add
sbb
mov
mov
int
xchg
xchg
sar
cmc
into
xchg
push
in
std
loopne
xlat
test
dec
imul
push
aas
adc
add
imul
cld
sti
sub
add
cmp
arpl
push
push
dec
push
cmp
outsb
xchg
stc
scas
adcl
mov
add
cld
andl
loopne
or
xchg
jo
fcoms
bound
push
nop
add
imul
aad
jnp
or
dec
jns
add
jl
ja
mov
xor
pushf
hlt
andb
sbb
insb
int
dec
cmp
and
rcl
lods
jge
xchg
ds
jne
notb
mov
or
push
cmpsl
inc
in
popa
xor
and
or
cmp
inc
aam
mov
int
push
fiaddl
cmp
push
cmp
cmp
popa
fiaddl
mov
inc
icebp
sub
sahf
int
jnp
and
push
push
lret
jne
or
jge
sbb
or
lock
out
fcompl
cmovs
xchg
enter
insb
xchg
rcl
rclb
ljmp
daa
inc
xor
test
push
fisubrs
popf
stos
xor
mov
rorb
mov
ret
inc
jo
sbb
aad
sarb
xor
sarl
rorl
mov
pop
in
shrb
fwait
or
xchg
push
fldl
fsubrp
cld
lods
push
lahf
inc
dec
and
sbb
js
push
out
jnp
xchg
fisttpll
or
inc
xchg
je
ljmp
nop
add
jmp
mov
push
mov
jle
sub
sbb
mov
and
mov
push
pop
inc
sub
jle
das
lods
shr
pusha
and
cmpsb
nop
xor
das
repnz
sub
push
add
mov
inc
jnp
sbb
popl
push
push
mov
cmc
lods
push
pop
das
jno
push
out
or
ret
or
sub
mov
ss
cmp
iret
es
adc
arpl
dec
push
inc
loopne
fisubrl
dec
push
test
mov
xlat
mov
scas
mov
test
fnstcw
cmpsl
push
subb
xchg
sub
push
pushf
loopne
leavew
push
ret
cmp
fneni(8087
orb
mov
push
and
out
dec
push
add
or
rorb
jmp
dec
or
lods
add
shrd
and
call
lea
push
cmp
sub
jg
pop
push
pop
sub
cmpsb
mov
dec
push
jo
insl
xchg
outsb
iret
nop
in
mov
jle
jg
push
int3
adc
inc
mov
mov
scas
lods
adcb
jne
ret
push
flds
sub
pop
loopne
mov
cmp
mov
int
cli
lods
das
lret
inc
leave
jne
jo
idivl
add
clc
icebp
mov
xor
out
jg
js
cmp
cmpsl
jne
push
mov
inc
test
icebp
push
or
and
cmp
and
in
int3
pop
mov
jbe
mov
cld
mov
mov
or
sbb
lds
push
inc
out
pop
insb
jne
movsb
addb
sarb
sub
mov
sub
mov
or
mov
xor
fs
push
gs
and
jae
jle
test
or
xchg
clc
pop
sar
ss
xchg
cmp
jl
mov
test
loope
das
push
pop
push
sub
subl
iret
cmp
inc
movsb
enter
popa
cld
cli
arpl
cmp
and
xchg
in
xchg
mov
dec
insb
inc
jmp
testl
insl
lods
inc
scas
test
and
jp
es
dec
xchg
or
push
push
xor
movsl
adc
das
clc
or
jnp
ficoms
inc
pushf
dec
popa
jp
cs
bound
cmp
into
push
cmp
sbb
jp
fsub
mov
out
push
das
sbb
fdivrs
outsl
cltd
stc
xor
mov
adc
add
cld
inc
ret
or
mov
outsb
std
cwtl
ret
cltd
fcomps
insl
cmp
jo
cmp
aam
mov
xor
lock
mov
lea
lahf
test
cwtl
mov
dec
inc
faddl
inc
xor
lods
in
iret
xor
and
into
jae
lds
das
jle
negb
inc
out
jae
xchg
inc
sub
loop
mov
pop
lock
xchg
pop
xchg
in
stos
pop
xchg
add
cmp
jns
jns
add
movsl
xchg
outsb
subb
pop
roll
jbe
in
fcomps
sahf
dec
adc
nop
pop
int3
rolb
mov
shll
push
js
ffreep
jg
mov
xlat
sub
mov
addl
mov
cmp
pusha
cli
push
les
movsl
pop
xor
jns
jno
das
fsubrs
movsl
test
sub
loopne
adc
sbb
push
lret
icebp
cltd
mov
dec
inc
std
fs
fwait
imul
mul
mov
je
inc
mov
out
sub
adc
inc
cmc
inc
gs
repz
ret
in
push
push
inc
in
adc
mov
insb
xor
push
ljmp
xchg
std
iret
and
sbb
mov
adc
inc
loop
sti
mov
fcomps
cwtl
or
or
cmp
add
adc
mov
mov
sti
rol
adc
cmp
ret
pop
or
sbb
inc
aaa
sub
sbb
or
and
add
push
mov
sbb
insl
add
lods
pop
cmpsb
xor
xchg
inc
movl
jmp
cmpsl
mov
aam
fs
inc
sub
sbb
andl
or
mov
aaa
aam
loopne
js
xchg
sub
jbe
jns
bound
fwait
daa
pop
xchg
and
rclb
push
daa
addr16
add
jle
cli
sub
mov
in
lock
lock
orb
stc
adc
sahf
cmpsl
andnps
ds
out
test
push
sbb
xchg
aad
in
push
in
ret
int3
lret
aas
rorl
mov
adc
iret
pop
sti
sbb
push
or
repz
sub
icebp
sbb
shrb
mov
inc
cs
dec
adc
out
in
cwtl
push
mov
xchg
fnstsw
push
adc
add
pop
mov
imul
loope
insb
xlat
pop
scas
adc
repnz
or
stc
subb
pop
and
lahf
mov
test
cs
sbb
andb
or
xor
mov
aaa
cmp
imul
sub
adc
push
aad
adc
inc
push
aad
or
and
mov
jb
sub
xlat
xlat
jmp
data16
or
jne
add
or
cmp
shll
dec
insl
add
cmpsb
fistpl
ss
add
mov
or
xchg
movsl
inc
loope
dec
cltd
cld
or
mov
push
xor
lea
decb
xor
xchg
testb
xchg
sarl
push
push
stos
push
pusha
imulb
jnp
cmp
roll
or
cmp
int3
shlb
dec
cmp
sti
adc
pop
pop
jb
rclb
iret
mov
arpl
adc
add
mov
or
push
fldcw
xchg
roll
jo
sub
xchg
or
cmp
jne
cmc
mov
ds
mov
ret
leave
daa
inc
sub
fsubrs
and
inc
jno
cmp
out
dec
add
jmp
lret
fists
mov
mov
hlt
cmp
pusha
inc
push
sbb
aaa
scas
and
pop
jno
hlt
out
inc
aam
stos
jle
data16
cmpsl
inc
or
pop
mov
jle
cld
addl
dec
mov
popf
dec
dec
lea
jmp
cltd
test
mov
or
xchg
out
lods
je
rol
or
sarb
out
pop
jle
cmc
fdivrl
cmp
lock
fcmovnu
dec
gs
or
adc
fwait
jo
rorb
cltd
lods
aam
mov
jb
lret
jecxz
aad
adcl
adc
test
dec
pop
mov
cmp
lahf
lds
sti
adc
cmp
xchg
mov
cs
gs
adc
lret
jnp
clc
test
rorl
xor
pop
aam
jnp
int
sub
out
and
movsl
xor
xor
inc
inc
inc
xchg
inc
mov
lock
int
and
decl
add
fists
jp
xchg
push
mov
addr16
xor
rclb
sbb
stos
movsl
sar
movsb
push
adc
and
cmp
sub
inc
inc
stos
sti
push
mov
mov
incb
das
jnp
and
add
ret
and
xchg
mov
inc
dec
rorb
or
push
mov
cs
inc
mov
arpl
scas
bound
jns
pusha
mov
xor
dec
jb
and
sbb
sub
dec
mov
lret
lret
sub
nop
jmp
arpl
ss
dec
fsubl
out
adc
das
xlat
push
aam
dec
lret
imul
fistl
and
adcb
jge
and
ficompl
sbb
adc
ds
add
sbb
test
ljmp
test
arpl
mov
movsb
imul
xchg
rorb
out
scas
jnp
in
mov
negl
lahf
gs
negl
add
daa
jle
inc
fmull
xor
int3
pop
aaa
push
xor
push
dec
push
add
inc
mov
movsl
pop
or
push
std
adc
pop
mov
aad
and
mov
pop
js
pushl
adcl
xchg
lcall
jle
push
push
pop
xor
fdivs
negb
pop
mov
shrl
in
ret
insb
popf
sbb
inc
int
mov
dec
ret
data16
inc
mov
pop
es
int
pop
aam
out
xchg
ljmp
pop
inc
jp
mov
mov
testl
cmp
mov
hlt
sub
loopne
cli
iret
fcompl
jecxz,pt
enter
cltd
cmp
fstp
rclb
dec
imul
cmp
ja
inc
fldcw
jo
fs
dec
shrl
int3
stos
or
in
dec
std
ljmp
mov
fdivrs
insl
xor
xchg
or
push
jne
mov
jmp
cmp
xchg
dec
mov
adc
cmp
push
mov
nop
fistpll
or
or
icebp
popa
testl
shll
xor
xchg
push
sbb
jmp
mov
bound
andb
jno
popl
cli
pop
jno
dec
and
fldenv
cmpl
loope
in
in
loope
add
in
mov
std
sub
in
mov
xchg
mov
addb
js
cmpl
sbb
pop
mov
and
inc
rcrb
jb
clc
pop
scas
js
add
or
fcoml
adc
nop
mov
pop
test
dec
dec
push
mov
add
shlb
test
dec
mov
cmpsl
push
js
imul
fsts
mov
adcb
push
mov
sti
aaa
aaa
insl
and
jns
daa
shll
out
inc
arpl
out
and
rclb
insb
int
inc
mov
mov
add
daa
es
cmp
in
jbe,pt
pop
jl
enter
lret
sti
stos
jle
add
mov
insb
inc
jecxz
jmp
push
dec
and
jmp
shll
mov
ja
or
mov
lds
das
jnp,pt
cli
push
ret
insb
dec
jb
jnp
fwait
int
cmp
mov
sahf
popf
fwait
mov
sub
aas
les
pop
pushf
pop
loopne
mov
rcl
pop
mov
and
imul
and
pop
or
test
inc
je
sub
mov
mov
cmp
adc
int3
gs
adc
sbb
lods
out
ret
std
ret
call
lods
imul
or
fcompl
loop
inc
pop
fdivl
jmp
int
inc
hlt
in
xchg
xchg
mov
and
jl
and
jle
loop
negb
push
stos
test
cmp
pop
inc
out
jmp
ret
cmpsb
push
or
or
movl
aad
xchg
in
mov
test
jp
or
push
xorb
shrl
rep
mov
ds
cltd
push
in
scas
mov
jns
jmp
sub
dec
sbb
sub
sbb
jp
cmpsb
mov
outsb
test
push
sar
sbbb
pop
mov
xchg
rcr
push
dec
dec
scas
pop
js
arpl
fmul
cld
push
mov
je
repz
out
sub
mov
jmp
out
call
es
cltd
adc
mov
popa
loope
inc
sahf
add
adc
cld
fdivl
rorb
outsl
adc
mov
add
aaa
mov
rorb
or
mov
mov
gs
mov
mov
leave
xor
cmp
enter
ja
push
inc
sbb
aas
sbb
fisubrs
cmp
and
aaa
mov
test
test
sbb
or
aaa
scas
pop
mov
fnstsw
ret
and
out
sbb
out
cmp
jo
js
int
sub
stc
and
mov
movl
mov
fdivl
cmpsl
push
shrl
out
mov
test
push
icebp
arpl
mov
fistpll
pushf
push
push
shl
rcl
push
cmp
in
arpl
and
loopne
fisubs
stos
bsf
xchg
fwait
mov
out
imul
out
loopne
mov
data16
inc
popa
mov
add
cmp
sub
test
adc
mov
pop
decb
mov
mov
iret
push
and
cltd
adcl
xor
test
jecxz
das
cltd
stos
sbb
shlb
and
mov
arpl
bound
adc
shll
sti
mov
aas
popf
test
fsubl
inc
loopne
stos
jns
ret
mov
popf
lcall
loope
iret
pop
pop
imulb
xor
and
stos
sbb
fcoml
cltd
adc
icebp
mov
mov
loope
sti
and
inc
fs
mov
push
aaa
and
cli
popa
nop
lcall
sbb
rcrl
jo
inc
sub
iret
cltd
fadds
or
cs
push
out
push
pop
mov
shll
mov
sbb
frstor
jecxz
out
lret
xlat
test
xor
int3
movsl
push
jl
div
fmull
inc
out
aaa
int
jne
sbb
push
sbb
test
or
push
daa
jle
lods
scas
sub
inc
cmp
mov
lret
push
cmp
stos
or
mov
xor
ds
loopne
push
sahf
pushf
inc
and
pop
cmp
cmp
pushf
add
mov
iret
ret
icebp
adc
iret
sub
ljmp
pop
lods
jns
inc
int3
jnp
rorl
data16
pop
adc
mov
sahf
pushf
es
sub
je
add
push
dec
xchg
adc
pop
pushf
insb
xor
aas
and
adc
arpl
test
mov
pop
push
jae
hlt
dec
or
mov
lret
cmc
mov
mov
sbbl
nop
lds
jmp
fs
mov
lret
inc
cmp
inc
cwtl
sbb
xchg
xor
mov
jbe
test
mov
pop
fisubrs
push
mov
cmpsl
cmc
mov
enter
adcb
xlat
xchg
dec
daa
mov
xchg
into
lods
xchg
cs
lcall
mov
inc
mov
and
int
aas
mov
sbb
lods
xchg
sbb
adc
pop
cwtl
dec
sub
stos
pushf
mov
insb
xchg
xchg
xor
out
dec
lods
stc
inc
xor
mov
mov
sbb
or
stos
inc
sub
test
dec
imul
das
sbb
mov
dec
les
js
mov
ljmp
jae
shll
das
ljmp
std
out
jne
mov
or
movsb
rorb
mov
iret
cmp
add
das
xor
sub
cli
nop
loopne
xor
mov
inc
out
orl
or
loope
cli
jns
add
sbb
sub
ret
pop
mov
dec
insb
ret
icebp
or
mov
adc
and
mov
jge
fwait
push
divb
shr
cmp
movsb
and
xchg
xor
cs
mov
sub
imul
pop
aaa
jp
pop
shl
sbb
lods
stc
cwtl
sub
sub
mov
cwtl
add
sbb
ja
xor
adc
adc
mov
mov
lods
adc
sub
movsb
in
aas
pop
mov
scas
dec
push
or
jmp
push
sbb
xchg
and
and
pop
jbe
mov
scas
jg
lret
add
xchg
nop
and
divl
push
pop
or
movl
ljmp
ds
test
ficoms
jl
int
nop
inc
inc
outsl
jecxz
movsl
cltd
add
cmpsb
popa
mov
pop
mov
xor
cltd
add
stos
lea
jns
add
mov
push
lods
mov
insb
les
mov
cmp
adc
or
dec
repnz
mov
ret
setb
lods
mov
nop
mov
xchg
rclb
out
xor
clc
pop
jns
and
add
loop
jb
mov
xlat
test
nop
adc
jno
aad
sbb
lcall
lods
les
mov
adc
adc
movsl
xchg
mulb
lcall
lods
mov
test
cltd
mov
and
mov
lret
out
lret
rcrb
inc
inc
test
pop
cs
mov
xorb
stc
call
add
outsl
dec
xlat
sahf
xchg
lock
mov
out
sub
dec
cmp
dec
lcall
movsb
xor
pop
data16
out
add
fdivrl
sbbb
sbb
sbb
sub
add
dec
out
movsb
adc
pop
in
and
in
gs
fcmove
jo
daa
out
sub
sbb
fwait
cwtl
jp
jg
lret
leave
push
insb
xchg
or
push
dec
push
pop
push
push
jne
cmp
push
dec
stc
mov
sbb
ds
shll
adc
adc
pop
mov
pop
jle
das
mov
lret
addr16
out
frstor
pop
push
dec
jecxz
mov
or
cs
sub
dec
test
push
leave
fdivrl
test
mov
call
rcrl
mov
jns
xchg
iret
leave
sti
inc
mov
insl
scas
pop
ret
aad
cmpb
andb
dec
incw
mov
mov
sub
rorl
or
xor
sbb
inc
pop
sbb
jae
loope
xchg
scas
inc
pop
and
fdivp
les
mov
dec
stos
xlat
cltd
ror
jp
lahf
push
inc
xchg
cli
jle
data16
outsb
xor
sub
jbe
sub
push
mov
movsb
xor
das
mov
lret
mov
push
xchg
push
dec
and
adc
add
or
shlb
leave
out
in
mov
add
dec
testl
cs
popf
lods
cmp
push
cmpsl
jae
mov
cmpb
sbb
or
add
xor
xchg
hlt
mov
push
roll
pop
nop
rcr
int3
cmp
jge
inc
enter
lods
pop
cwtl
sbb
iret
aaa
jle
mov
xchg
ljmp
imul
rclb
mov
mov
stc
cmpl
cmp
or
mov
xor
insb
push
jnp
lock
stos
ja
nop
lds
loope
enter
mov
jmp
mov
shr
sbb
mov
in
jbe
cmpsb
inc
cmp
lds
in
fwait
mov
stc
xchg
pop
int3
notb
mov
cmpsl
pusha
xchg
insb
jmp
int
fnstenv
insl
xor
mov
cs
shrb
dec
mov
sub
xor
or
or
push
push
sbb
mov
aam
sbb
lret
les
inc
mov
pop
mov
inc
cld
jg
lock
arpl
cmovp
jo
lret
pusha
out
in
clc
arpl
fs
insl
jae
pop
pop
pop
mov
inc
adc
outsl
push
out
aad
sub
adc
mov
cwtl
adc
out
outsb
inc
sub
repnz
arpl
ds
jl
sub
stos
adc
out
rcl
push
add
jae
and
gs
aas
aam
fwait
repz
add
mov
cmovbe
in
mov
ss
insl
and
lahf
and
push
pop
inc
and
lcall
cld
and
rcrb
add
adc
mov
lret
add
mov
adc
jg
shrb
dec
jle
cmp
movsb
xor
cmp
adc
repnz
cmp
outsb
lcall
mov
add
test
pushf
scas
push
sub
cmc
adc
add
xchg
jp
jge
inc
and
push
dec
les
xchg
pop
xchg
in
daa
outsl
mov
int
sub
or
sti
sub
cld
addr16
xchg
lock
dec
rcll
xchg
sbb
cmp
mov
lds
and
xor
test
or
fadds
popf
and
aad
ja
aas
cmp
clc
xchg
inc
fdivrs
jmp
bound
cwtl
sub
imul
dec
dec
jno
call
mov
fdivrs
xchg
dec
insl
adc
in
adc
and
dec
sbb
loop
mov
imul
test
mov
icebp
jae
and
cmp
mov
add
test
out
scas
subb
add
inc
lcall
les
mov
cmc
aaa
test
mov
fldenv
jnp
adc
or
xchg
jmp
jg
pop
adc
xor
ljmp
sbb
jo
ficomps
ret
in
scas
sahf
sbb
mov
sub
leave
xchg
outsb
es
jmp
or
dec
dec
inc
fisubs
cmc
add
mov
xchg
mov
aam
mul
sub
push
ds
fisubs
cmp
pop
imul
and
adc
cmp
push
cmpl
jle
sahf
mov
mov
pop
movsb
mov
ret
inc
or
xor
xor
cltd
sti
mov
mov
jge
mov
addb
ds
jmp
inc
fldt
mov
fdivs
shrl
enter
mov
sbb
shrl
ja
cmc
push
and
xchg
push
shlb
mov
mov
mov
in
sahf
out
push
or
cltd
jnp
aam
push
repnz
into
sub
scas
fildll
addr16
sar
lahf
add
dec
out
and
imul
cmp
push
in
lea
push
mov
xchg
pop
ret
cwtl
add
enter
aaa
scas
mov
cmp
bound
or
repnz
stos
add
pop
scas
push
dec
inc
xor
vpor
mov
inc
inc
sbb
pop
mov
jo
mov
and
jo
sahf
jo
mov
and
or
repnz
pop
push
repz
xchg
imul
cmp
inc
cmp
ret
mov
dec
ds
aas
jecxz
adc
push
subl
cmp
or
add
outsl
mov
jns
mov
adc
popa
add
dec
lods
push
mov
dec
pop
fbld
or
inc
dec
dec
jne
shrb
lds
jo
dec
scas
or
test
pop
sbb
lret
mov
pop
and
pusha
add
mov
xorb
pop
dec
fiadds
adc
hlt
mov
pushf
lea
int
inc
test
popa
mov
jmp
fnstenv
mov
clc
sub
in
pop
xchg
mov
xchg
cli
imulb
inc
mov
mov
push
cmp
xchg
mov
jns
or
xor
repz
dec
mov
inc
imul
cmc
popa
jbe
pop
mov
test
or
lods
ss
rcl
pop
xor
xchg
adc
sarb
dec
aas
xchg
cld
dec
mov
mov
cmc
test
sarb
imul
sub
sbb
jg
outsl
nop
push
into
xor
xchg
out
pusha
out
in
into
dec
lret
mov
push
pushf
or
loopne
sbb
ja
cmp
fwait
add
cmp
insb
shrb
fildll
adc
xchg
sub
or
mov
test
xor
xchg
mov
sbb
nop
mov
hlt
pop
notb
sbb
cmp
stos
dec
push
xlat
fnstenv
fldcw
roll
lret
push
add
insl
pop
jl
stos
negb
gs
int3
adc
cmp
mov
dec
lcall
idiv
out
mov
out
adc
mov
in
jg
push
sti
aas
sbb
mulb
mov
push
push
popf
arpl
and
or
lds
sbb
sub
inc
jg
jle
push
or
adc
sub
mov
cmp
scas
lods
stc
jns
xor
adc
adc
push
or
idivl
inc
xor
dec
out
subps
lods
sub
jg
repz
stc
shll
add
jge
dec
and
and
test
nop
ret
xchg
mov
imul
adc
cltd
inc
add
dec
ja
or
or
sub
or
cmp
negl
outsl
pop
aas
outsl
add
add
dec
mov
popa
lods
ds
pushl
dec
ret
xchg
mov
cmp
xchg
pop
jae
inc
xchg
push
or
call
fnsave
jg
xchg
cmp
push
daa
lahf
pop
bound
cli
mov
xor
repz
inc
jg
push
sti
sub
mov
mov
and
inc
jge
lret
shrl
pop
sbb
sbb
insl
mov
shll
cmp
lret
or
mov
mov
mov
inc
daa
or
scas
xchg
pusha
add
dec
xchg
add
xchg
jp
movsb
je
xchg
pop
dec
jg
sbbb
xor
mov
and
clc
pop
repz
or
daa
lcall
lcall
lods
leave
pop
pop
aam
popa
insl
jle
data16
push
and
dec
adc
sbb
pushf
inc
lods
cwtl
push
mov
fbstp
adcb
sbb
xchg
or
cli
pop
es
push
imul
mov
mov
adc
addb
mov
inc
shrl
cmp
lahf
out
sbb
sbb
jns
push
xchg
cmp
jo,pt
repnz
push
repz
cmpsl
mov
jne
pop
daa
xchg
inc
push
mov
outsl
rcrb
add
lods
stos
push
repz
cmp
sarl
ljmp
push
push
cmp
stc
pop
scas
jae
sbb
pop
pop
mov
dec
jne
popf
mov
ljmp
cltd
bound
aam
fwait
test
in
filds
jg
push
sbb
cmpsl
sbb
xor
mov
jnp
push
mov
scas
add
fsts
setl
aaa
sar
sub
adc
idivb
jmp
lcall
jecxz
xor
dec
out
loopne
ret
xor
mov
xor
adc
sbb
push
and
xor
mul
mov
mov
imul
add
and
adc
mov
add
sub
inc
inc
adc
mov
je
scas
cwtl
jge
add
pop
cmp
or
scas
fmuls
sbb
fbstp
vorps
sub
scas
bound
cli
mov
jnp
mov
mov
jle
xchg
jle
and
or
xor
popf
jae
push
jg
pop
dec
adc
cmp
mov
movsl
add
dec
or
scas
mov
jmp
or
xor
push
xor
lock
and
fsts
cmp
xchg
cmc
jecxz
push
incl
daa
js
mov
andl
or
out
inc
jmp
in
push
pop
xchg
mov
pop
sub
cwtl
dec
push
push
lock
loope
cmpsl
push
push
and
or
mov
add
push
mov
dec
int3
xor
frstor
into
leave
icebp
out
sub
int3
lods
or
lret
fdivl
in
adc
es
lahf
push
mov
popf
sub
fsub
fidivl
inc
or
popf
pushf
js
mov
cmp
xchg
and
cld
in
icebp
xor
sub
mov
fstl
in
jno
mov
mov
lret
lret
cld
adc
insb
adc
ss
xor
mov
cmpsl
ja
fldcw
xor
xchg
xor
iret
and
addb
daa
js
mov
es
sub
idiv
xor
subb
loope
test
icebp
lret
cmpsl
jg
add
out
sbb
flds
mov
mov
mov
cmp
mov
jno
dec
mov
dec
mov
xor
mov
or
pop
mov
fst
sub
roll
popf
fcoms
xor
int
sbb
sbb
adc
lds
repnz
jmp
jne
jne
xchg
popf
xor
cmp
xchg
movsb
ljmp
popa
cmpsl
mov
or
sbb
xor
popf
mov
loopne
xchg
test
sahf
es
stos
shlb
jge
subl
cltd
fldenv
cwtl
ret
jmp
mov
sbb
mov
or
idivb
arpl
jecxz
test
inc
test
arpl
push
or
in
int
xlat
aam
test
ss
cld
movsb
mov
sub
das
xchg
mov
xor
negl
fldenv
aaa
push
rcr
xor
les
adc
inc
push
flds
movsb
cmc
pop
outsl
cli
pop
push
pop
xor
cwtl
pop
or
mov
lods
mov
cmpsl
cs
negb
in
mov
cwtl
dec
fldenv
test
or
jl
fcmovnb
dec
lret
push
test
and
cmp
inc
pop
imull
cmp
mov
sub
movsb
and
sbb
or
scas
repnz
push
repnz
xor
iret
lcall
fs
aas
mov
cli
cwtl
cmp
mov
inc
movsl
jmp
mov
in
mov
or
movsb
call
xor
in
or
adc
mov
stos
test
gs
jne
adc
out
jg
cmp
sbb
pop
fdivrl
jae
jns
cmp
sbb
mov
and
sti
sub
lods
arpl
xlat
rolb
iret
push
loopne
jmp
jae
jl
mov
or
mov
imul
jo
pop
insb
inc
stos
pushl
jnp
test
repz
jmp
push
xchg
insl
cmp
idivb
repz
push
lods
gs
fidivl
popa
sub
pop
popa
call
bound
jmp
sub
notl
mov
or
out
mov
pop
inc
dec
loopne
xchg
enter
movsb
ficoml
into
xorl
xchg
inc
dec
mov
cmc
pop
int3
sbb
or
test
js
lahf
enter
pushf
sar
addb
and
add
pop
mov
sbb
fisubrl
sti
rcrl
push
and
adc
shll
ljmp
inc
pop
movsl
sub
fwait
xchg
jo
pusha
xor
lods
mov
xchg
in
fnsave
fcom
rclb
sub
into
and
sub
xlat
dec
pushaw
fwait
dec
adc
lds
mov
and
aam
lahf
xor
inc
shll
fmull
loopne
lcall
adc
xor
push
das
enter
fbld
popf
repz
repz
je
rep
lahf
arpl
mov
les
pop
pop
lret
adc
scas
mov
mull
hlt
in
sahf
es
aad
fisttpll
fs
push
push
ljmp
xchg
lahf
out
mov
mov
roll
enter
xor
add
cli
ficomps
andb
sub
imull
scas
push
shl
test
sbb
or
cmc
xor
or
mov
xchg
mov
xchg
scas
adc
adc
mov
lcall
push
ss
es
pop
cmp
cmp
das
adc
iret
jg
push
inc
shlb
jecxz
pop
and
pushf
arpl
push
out
lahf
mov
mov
dec
fstpt
in
int
pop
mov
dec
mov
ret
or
das
mov
mov
fmul
jecxz
lahf
sbb
movsl
ja
add
ficomps
mov
dec
cmpsb
stos
dec
pop
repnz
lds
inc
adcb
in
push
ret
sub
pop
push
mov
lret
mov
sub
xchg
cltd
mov
andl
xor
pushf
xor
jge
push
add
fstpl
jbe
jmp
dec
and
dec
popl
push
jl
js
mov
add
adc
lret
jmp
inc
xor
dec
out
jne
jg
jns
pop
outsl
scas
loop
mov
mov
cwtl
nop
fwait
popf
stos
pop
bound
sub
lods
jo
icebp
mov
stos
xchg
jmp
insl
repnz
aam
adc
jno
sbb
lcall
lea
aad
mov
mov
xchg
mov
testl
or
pop
jns
mov
dec
xchg
cmp
out
sub
nop
jge
les
push
iret
out
push
pushf
outsb
out
shrb
pop
jmp
jg
jl
pop
fadd
out
jle
cs
mov
scas
sahf
les
jge
and
sar
jle
sbb
adc
aaa
lods
iret
jp
insb
dec
or
cmp
movsb
sbb
fwait
sti
mov
daa
sub
in
jle
dec
xchg
xchg
bound
lds
fwait
dec
jb
inc
test
pop
outsl
xor
cmp
fscale
mov
popa
xchg
clc
xor
lcall
call
addl
stos
call
subb
cmp
and
xchg
cmp
clc
stos
outsb
jg
pop
scas
xor
daa
jp
pop
sbb
adcb
aam
and
adc
les
mov
fsubs
dec
in
add
pusha
les
pop
push
mov
push
fsubs
int3
call
sbb
insl
mov
inc
jb
scas
sbb
push
addl
mov
pop
push
ss
inc
jecxz
repnz
pop
scas
dec
shrl
push
lret
inc
cvtpi2ps
add
cmc
mov
shrb
test
lcall
add
mov
mov
faddl
sbb
sbb
mov
imul
mov
stc
mov
frstor
ja
orb
lcall
push
cmc
jns
mov
mov
add
fadds
lods
idiv
out
sbb
imul
das
ds
cmpb
test
or
stos
jl
test
cmp
mov
dec
gs
mov
stos
push
roll
xchg
pop
push
push
std
pop
fcoml
aad
sub
sub
pop
dec
out
lock
inc
pop
xor
fsin
aas
xor
ljmp
sbb
incl
cli
in
add
xchg
sbb
inc
sbb
cltd
jp
push
mov
rorl
dec
ja
pop
out
xchg
mov
lcall
std
and
sbb
neg
cmp
cmpsb
cmp
daa
ja
push
mov
lds
cwtl
xchg
xorb
dec
int3
leave
mov
or
pop
inc
or
rorl
popf
loope
adc
add
imul
inc
push
imul
gs
aad
stos
aad
mov
inc
test
adc
inc
adc
leave
dec
mov
adc
inc
sbb
jl
sti
cmp
fwait
sar
je
in
leave
imul
push
pop
pop
mov
dec
cli
xchg
mov
push
sub
jbe
lea
or
push
pop
scas
mov
divl
std
mov
xchg
adc
pop
lock
dec
cmp
and
sub
mov
or
push
out
xchg
stos
imul
scas
pop
lods
and
push
test
pop
mov
mov
ffree
out
shll
sbb
push
pop
in
add
into
and
fistl
mov
mov
sub
mov
popf
adc
pop
push
imull
pop
adc
repnz
mov
into
movsl
les
rcrl
clc
fs
jb
xchg
sbb
lcall
test
insb
rorb
insb
and
lret
js
out
mov
pop
cmpsl
aas
cs
push
int
ret
adc
orb
sub
mov
cmpsl
loope
sbb
mov
std
push
pop
test
mov
mov
push
cmp
adc
inc
push
jno
dec
add
insb
lods
push
push
stos
aam
lret
jmp
sbb
scas
or
inc
push
insb
add
add
outsb
push
cli
outsb
inc
pop
cwtl
jno
inc
xchg
mov
push
pop
push
sub
cld
mov
or
or
rorb
pop
xor
sarb
jno
ret
jbe
pop
jmp
mov
je
cmpb
or
in
inc
insb
xchg
or
pop
movsl
and
daa
adc
fwait
lret
mov
add
dec
sub
call
aam
ja
dec
or
mov
into
pop
lds
or
mov
sub
cmp
pop
leave
ja
or
cmp
shrb
aad
mov
in
inc
clc
push
mov
mov
divl
dec
test
adc
movsl
lea
inc
loop
lods
mov
mov
das
repnz
pop
add
cmpsl
cmpsl
push
test
push
imul
sbb
dec
call
ljmp
mov
addb
fisttps
mov
inc
dec
add
mov
jnp
and
sbb
push
mov
pop
test
xor
fsubrs
xor
sahf
xchg
cmp
sbb
fcoms
fwait
push
cmp
lods
mov
pop
out
adc
ljmp
lea
jbe
or
loopne
in
call
ret
and
pop
or
or
addl
sub
sub
mov
mov
sub
fisubrl
in
sub
and
pop
jle
jae
lcall
cmpsl
jmp
xor
or
inc
ja
popf
add
test
test
pushf
or
repnz
idivb
pop
sbb
xor
std
in
stc
mov
stc
add
out
aas
out
stc
push
sbb
push
adc
xor
adc
inc
testl
cmp
cmc
mov
mov
pop
mov
subl
pop
dec
pop
fimull
pusha
mov
ret
test
xchg
dec
pop
push
mov
mov
es
or
insb
pusha
inc
cmp
sub
cwtl
xchg
pop
inc
sahf
pop
add
mov
cmc
fsubs
mov
mov
in
int
repnz
testb
movsl
mov
mov
jnp
lods
or
sbb
out
pusha
jno
dec
sbb
mov
cmp
cmpsb
cs
or
sbb
and
sub
cmp
cli
mov
js
imul
enter
lahf
cli
adc
incl
mov
and
aas
push
mov
sub
inc
lcall
mov
arpl
ja
lea
dec
fimull
int3
sub
jae
les
fimuls
cmpsb
bound
mov
push
add
inc
sbb
and
lods
js
push
sarb
imul
mov
mov
mov
pop
cltd
int
add
or
aam
jb
xchg
gs
popa
or
cmp
mov
subb
cmp
scas
adc
insl
bound
pop
test
repnz
jns
rcrb
jge
cmp
scas
mov
in
mov
pop
imul
mov
xchg
dec
testl
loope
push
cltd
js
adc
popf
shll
mov
ss
imul
push
adc
inc
rorl
and
into
xchg
test
iret
pop
cmp
inc
pushf
cmp
jmp
push
jge
lods
push
adc
lods
jae
cmp
jp
pop
sub
jae
adc
add
push
test
das
sarb
or
adc
inc
jno
inc
or
mov
sar
xchg
jns
data16
lahf
sub
inc
pushf
mov
scas
imul
adc
and
loop
fldenv
add
imul
bound
mov
sar
ljmp
sub
jg
nop
xor
xor
repnz
incb
stos
insb
and
pop
pop
cmp
cli
add
aaa
pop
push
dec
cmp
scas
rolb
add
mov
ja
fidivs
jo
or
add
and
popf
jl
cs
cld
jne
push
cwtl
arpl
push
mov
repnz
adcb
xor
lock
pop
xlat
je
icebp
cwtl
call
stc
bndstx
inc
subb
jbe
pop
mov
and
add
in
push
mov
jns
cli
loope
push
fmul
cmp
cwtl
and
adc
dec
rcll
out
mov
das
xor
out
adc
rolb
sbb
pop
data16
movsw
clc
repnz
mov
je
mov
sbb
subl
pop
mov
ficoms
mov
fistpll
mov
faddl
dec
ret
addr16
mov
lahf
imul
jnp
mov
fwait
cld
and
push
cmp
jnp
pop
popa
xchg
xor
sub
in
mov
dec
push
dec
mov
fnstsw
mov
jge
add
adc
xchg
das
fwait
add
cwtl
sbb
jno
cmp
push
lea
aas
mov
xchg
mov
xchg
shlb
dec
cmp
jp
jge
out
mov
into
xchg
add
and
xchg
movsb
hlt
or
cmpsb
arpl
mov
out
jg
mov
sub
js
sbb
mov
mov
mov
inc
push
push
xchg
lock
out
fisubs
insb
pop
stc
jge
push
mov
cmc
jmp
xchg
aad
push
pop
sbb
into
roll
aas
mov
pusha
add
dec
lods
repz
loopne
pop
jnp
xchg
addb
and
jnp
push
mov
dec
jno
push
ljmp
push
das
in
aaa
xor
pop
js
idiv
outsl
fsts
dec
cld
xchg
rcll
pop
outsl
xchg
test
cmp
xor
cmp
cmp
pushf
movsl
adc
adc
inc
mov
mov
rclb
pop
imul
mov
fistpl
int
and
cmc
in
pop
jo
int3
outsb
in
cltd
out
inc
dec
lcall
fadd
add
mov
cmp
jns
addr16
mov
xor
or
or
mov
fbld
adc
jae
mov
cld
sti
and
sub
pop
jo
or
add
cli
ficomps
in
or
ret
lret
sbb
pop
loopne
jmp
push
imul
push
pushf
iret
sbb
jb
ret
adc
out
sub
into
cmp
ja
jns
sbb
inc
faddl
mov
push
sbb
push
cwtl
pop
ret
xorl
jne
push
fimull
aam
xchg
xor
stc
jnp
dec
lahf
pop
lods
mul
mov
negb
lods
mov
nop
push
or
adc
cmp
negb
in
dec
mov
mov
movsl
lret
stc
mov
imul
mov
and
jno,pt
sbb
int
push
jno
xchg
adc
out
out
repz
mov
inc
aaa
xchg
bound
mov
dec
pop
inc
stos
aas
cmc
jbe
sub
in
jae
add
push
cmpsl
in
inc
jbe
subb
xchg
xor
push
mov
lods
data16
xchg
push
push
movsb
dec
xor
fcmovnu
bound
push
sarl
insl
les
movsb
hlt
pop
testb
jmp
inc
out
mov
xchg
sub
mov
cmp
imul
scas
inc
or
out
rolb
insl
pushf
sub
jne
std
inc
sahf
mov
mov
fsub
xchg
dec
int3
mov
out
cs
icebp
scas
push
cli
stc
cmp
scas
sbb
add
sbbl
jno
mov
cmp
sbb
mov
jbe
lds
loop
jle
aas
cmp
dec
mov
in
mov
data16
push
jns
push
pushf
sub
cmp
xor
add
inc
jno
fisttps
xor
lret
jnp
inc
mov
ret
or
lret
sbb
xchg
pusha
pop
loope
add
pop
xlat
adc
sbb
xchg
adc
sub
out
lods
and
add
icebp
sbb
inc
push
scas
notl
sbb
bnd
dec
pushf
stos
and
jl
jns
mov
outsb
ja
or
pop
xor
in
lock
and
test
add
stc
dec
incl
cltd
insb
sub
rcrb
mov
xor
cld
clc
cld
mov
stc
xorl
addr16
inc
sub
and
pop
xor
lret
mov
mov
lods
lret
cmp
or
fsubl
out
movsb
cmc
clc
hlt
inc
or
cmpb
addr16
std
int3
xchg
fnsave
roll
sbb
jge
iret
mov
inc
negb
jp
or
add
bound
test
add
mov
popf
and
jg
popf
or
mov
jbe
nop
jecxz
into
mov
repnz
inc
movsb
cmp
popa
rolb
ljmp
or
cmpsb
arpl
add
lcall
xchg
inc
push
xor
roll
and
push
outsb
inc
jne
push
dec
std
aam
test
addr16
lods
sbb
addr16
shl
cwtl
loop
aas
xchg
mov
xchg
pop
es
jp
orb
cmp
repnz
lods
fimuls
cltd
add
lret
pop
or
pushf
ljmp
fistl
sub
inc
test
adc
inc
sub
ljmp
sahf
adc
sahf
push
inc
fucomp
repz
outsl
pushl
inc
iret
cmp
xchg
xor
daa
andl
xchg
in
jp
mov
dec
nop
adcl
jns
js
sub
mov
cltd
jle
inc
rcll
xor
push
xchg
inc
repnz
cmp
sahf
xchg
or
inc
dec
repz
adc
das
fsubl
push
dec
jnp
pushf
pop
push
jl
loopne
sbb
pop
sbb
cmp
int
jo
shl
scas
sbb
ss
pop
in
push
decl
inc
push
stos
cmp
addr16
dec
stos
push
es
pop
xchg
arpl
lret
push
or
cmp
in
gs
aaa
inc
mov
out
pop
dec
testb
adc
je
lcall
adc
imul
sub
enter
aas
sub
mov
add
jns
loopne
or
cmp
popf
push
xor
imul
cltd
cmp
sub
inc
fmull
ror
test
sub
mov
xor
push
fwait
inc
repnz
stos
pop
out
push
push
int
add
jne
xor
dec
int
dec
cld
mov
mov
push
inc
andl
lahf
dec
in
rolb
ret
sub
mov
mov
mov
addr16
push
sbbb
mov
stos
or
jl
aas
push
mov
cwtl
fiaddl
push
jmp
push
mov
mov
inc
xchg
push
xchg
xchg
out
ja
jo
stc
xor
scas
andl
sub
in
or
mov
pmulhw
mov
in
add
data16
inc
es
mov
nop
push
int3
dec
inc
loopne
cli
es
aad
sub
jb
gs
or
pop
mov
cld
es
mov
push
inc
ja
bound
aas
clc
sub
mov
or
cmc
sub
jns
jl
adc
std
mov
and
adc
inc
jp
cli
imul
pop
xchg
mov
mov
adc
dec
mov
ljmp
stc
or
dec
in
cmc
fiadds
lcall
repnz
mov
xor
xlat
push
jbe
jge
lahf
mov
lret
shll
pushf
push
xchg
sub
pushf
pop
or
push
fldcw
mov
movsl
pop
jp
pop
icebp
xor
jno
and
mov
sub
jo
pop
mov
orb
nop
stos
push
mov
jge
insl
std
out
mov
bound
jo
ds
and
mov
out
popa
inc
mov
inc
mov
mov
mov
xchg
inc
mov
xor
pop
daa
and
jle
mov
mov
and
rolb
mov
lahf
mov
repz
and
das
leave
and
inc
or
scas
test
cld
arpl
add
mov
sbb
pushf
int
icebp
sub
fdiv
loop
jg
fwait
inc
adc
popl
and
lret
loope
jbe
ss
aaa
sub
sub
sbb
jns
push
sub
pop
fimull
pop
mov
lcall
push
xchg
arpl
or
push
stos
movsl
clc
add
mov
jbe
int
mov
lock
jecxz
sub
xor
imulb
sbbl
jp
enter
and
mov
mov
imul
rolb
sahf
sti
jg
push
jmp
sub
mov
lret
sbb
popf
or
xor
xchg
inc
sbb
mov
jne
pop
arpl
pop
shll
push
outsb
movsb
movsl
xchg
and
inc
out
xor
in
clc
pushf
pop
sbb
popa
pop
cmp
insb
add
mov
push
adc
mov
outsb
das
movsl
pop
icebp
jnp
adc
sub
adc
mov
std
loopne
or
test
xchg
jle
sbb
inc
inc
mov
xor
lods
push
sbb
xor
cmp
or
mov
data16
sbb
aad
stos
jb
cmp
cld
pop
or
dec
fsubl
les
sub
mov
test
xor
test
movsb
icebp
mov
sub
jno
inc
out
dec
dec
mov
fcmovb
push
je
ss
call
dec
stos
mov
mov
pushf
mov
testl
test
mov
xchg
pop
mov
clc
inc
xchg
mov
das
sbb
xchg
or
aad
xchg
gs
dec
pop
dec
les
outsl
pop
out
xchg
xlat
and
xchg
fidivs
add
push
mov
stos
pop
movzbl
fadds
fiadds
addr16
cmp
inc
in
out
jbe
fwait
lods
stos
pop
aaa
pop
or
out
bound
pop
call
aas
cwtl
mov
fisttps
adc
cmp
rolb
hlt
vcvtsi2sdl
adc
lea
lods
mov
test
divb
and
inc
pop
test
stos
xchg
pop
xor
test
sbb
xor
add
lret
movsb
or
test
inc
dec
imul
stc
cltd
mov
lods
repz
sahf
adc
mov
pusha
pop
js
push
xor
idivl
sar
mov
dec
sub
sti
xor
mov
mov
dec
stos
xchg
xorb
lea
jbe
xor
mov
push
push
jl
sbb
enter
xor
hlt
jno
mov
jg
fwait
add
jbe
add
ret
dec
pushf
cmp
mov
cmpsb
out
adc
in
repnz
popf
cmp
jne
aad
outsl
xchg
call
sbb
add
xchg
sub
dec
fcompl
adc
outsl
pop
adc
jne
add
aad
das
lahf
clc
into
rorb
inc
into
cmc
sbb
jnp
jb
and
mov
mov
mov
xchg
sbb
stos
negb
xor
loope
outsb
or
out
pop
mov
jl
test
testb
cmp
bound
outsb
cmpsb
cmp
push
insb
xchg
sahf
mov
cmpl
and
movsl
jge
cmpsb
fsubrs
push
dec
sbb
or
xchg
or
mov
aad
mov
or
scas
std
sbb
adc
mov
lods
into
cmpsb
lock
mov
mov
xor
into
add
xchg
push
add
xchg
push
adc
sbb
mov
mov
pop
mov
ja
pop
mov
mov
push
stc
ret
lods
jne
mov
cwtl
cmp
xchg
mov
and
test
pop
ljmp
jns
fadd
mov
lahf
pop
scas
mov
fucomi
sub
cmc
mov
and
in
imul
decb
xchg
cmc
inc
xor
add
jne
lds
lds
xchg
cmp
lret
cltd
sahf
mov
scas
inc
or
push
mov
mov
push
cmp
dec
jecxz
xchg
dec
inc
mov
ljmp
jno
neg
push
dec
and
xchg
cmp
adc
jp
cmp
out
fnstenv
dec
lahf
jne
dec
cmc
mov
xor
ss
rolb
mov
out
repz
cmp
mov
cmp
mov
xor
xchg
dec
sub
push
mov
jl
inc
add
std
xchg
cmpsl
inc
mov
repz
sbb
ret
std
push
inc
dec
stos
dec
push
arpl
pop
add
jno,pt
xchg
xor
pop
imul
mov
aas
es
xor
and
leave
mov
xchg
mov
push
cmpsl
inc
enter
movsl
jae
sub
push
mov
mov
sti
cmpsb
push
or
pop
call
pop
add
lret
push
and
sbb
xor
lret
push
fdivs
gs
sbb
test
push
cli
push
notb
scas
xor
andb
inc
cmp
fwait
mov
dec
sti
test
jno
pop
cmpsb
pop
sti
dec
xchg
jg
std
test
adc
cmp
imul
and
sbb
loope
mov
les
push
add
dec
and
inc
popa
mov
push
add
cmp
call
push
ret
jns
imul
mov
popf
add
test
jns
fs
push
push
sbb
fdivrs
adc
inc
push
inc
push
and
dec
in
push
test
pop
and
or
xchg
inc
ds
dec
push
mov
test
test
iret
fadds
pop
icebp
pushw
les
out
enter
lret
inc
mov
int3
mov
aam
pop
loop
push
lods
mov
jbe
pop
adc
sub
xchg
push
inc
js
and
cmc
cmpsb
xchg
icebp
es
dec
cmp
scas
cmp
pop
xchg
inc
dec
popa
sub
xchg
push
les
cmpsb
jg
jo
fcmovnb
push
loope
push
push
aad
jle
cmp
inc
xchg
mov
sub
int
push
hlt
or
in
jl
mov
pop
sub
movb
fistpl
pop
mov
cld
imul
aam
mov
push
and
scas
sbb
mov
xchg
mov
pop
loopne
mov
jae
sub
mov
dec
setp
cmp
push
hlt
jl
aas
xor
and
adc
outsb
sub
fisubs
mov
iret
and
inc
jle
jmp
mov
cmp
mov
cmp
stc
mov
rorl
outsb
xchg
mov
pop
dec
ja
jo
jmp
and
pusha
xchg
scas
nop
stos
rclb
rcll
jo
or
fs
and
ss
mov
lret
cs
cmpsl
scas
repz
int
bound
scas
jecxz
popf
xor
inc
jg
sbb
add
stc
lea
mov
jecxz
sub
push
sub
lods
int3
inc
sub
cltd
ret
cmp
out
and
jp
lds
xor
add
sub
fidivrl
hlt
bound
inc
pop
inc
out
jp
add
pop
test
pusha
push
and
xor
into
pop
sbb
mov
pop
aas
mov
jno
popf
pop
jmp
push
icebp
fisttps
mov
jge,pn
xchg
or
inc
jno
popf
aad
mov
adc
test
jg
lods
sbb
xor
push
cmp
ljmp
imul
and
push
imul
mov
jmp
les
pop
sti
and
pop
pop
loop
mov
add
add
enter
cmpsl
mov
lea
cmp
lahf
cmc
xchg
mov
aas
jle
xor
pop
mov
inc
add
jp
inc
pop
and
add
pop
iret
jp
rorb
mov
mov
icebp
lods
inc
xchg
pop
or
pop
push
out
jns
lret
cmp
lds
dec
clc
add
inc
jbe
mov
out
jmp
xchg
inc
lcall
jmp
push
les
and
xchg
popa
jne
xor
arpl
mov
cmp
aas
cmp
dec
lods
adc
outsb
in
pop
mov
dec
cwtl
sbb
subl
repz
push
lcall
jne
fstpl
push
cmp
and
adc
dec
fldl
cld
cli
lods
nop
loope
ja
sahf
add
pop
scas
mov
jg
add
stos
stc
js
jge
push
ss
dec
in
mov
or
pop
xor
and
fldcw
cmc
or
arpl
leave
push
lock
mov
sahf
pusha
push
xchg
mov
jnp
in
cmp
lea
loope
ljmp
or
imull
xchg
sub
mov
pop
mov
test
dec
out
and
movl
or
xchg
inc
testb
enter
pop
js
adc
idiv
test
sbb
insl
std
fincstp
je
lods
dec
pop
sub
test
adc
insb
sar
cli
clc
clc
add
mov
jae
pminub
icebp
cmp
sub
xor
lcall
cwtl
test
fcomi
das
or
cli
mov
inc
push
fidivl
xchg
loop
aas
mov
aas
xor
test
pop
xor
ljmp
sahf
clc
stos
outsb
add
dec
bnd
sbb
cmp
shll
xchg
ljmp
cmp
jbe
pop
ret
fidivl
enter
in
push
dec
mov
pop
lea
cli
push
sub
xchg
xchg
ret
dec
cmp
repz
mov
lock
pop
push
jmp
sahf
rclb
mov
pop
movsb
mov
cmpsl
mov
leave
in
or
jae
or
stc
lea
les
pop
push
fs
or
pop
pop
movsb
and
ja
fiadds
xchg
or
jge
les
cwtl
push
ret
push
jns
add
mov
subl
push
lods
jmp
dec
mov
dec
into
push
mov
xchg
ficoms
lds
mov
test
or
inc
ret
lret
out
or
cmp
out
xchg
testb
ds
mov
insb
rcll
add
out
loop
cmp
inc
jg
mov
and
cmpsl
pop
mov
andb
stos
lods
pop
scas
and
addr16
xchg
aad
lcall
push
dec
test
icebp
inc
add
pop
and
out
nop
movsb
dec
cmp
jl
pop
jbe
jle
xor
cmp
pop
movsl
pop
fstpl
lret
push
iret
mov
or
sar
and
mov
dec
out
mov
push
jg
cs
cmp
jns
sub
ret
testl
or
roll
stc
lcall
imul
dec
pop
cmc
lods
pop
ds
add
xchg
fisubrs
push
call
into
icebp
mov
mov
pop
pop
cmp
cmp
mov
decb
bound
mov
arpl
in
ucomiss
mov
add
xchg
pop
insl
cmpsl
out
xchg
jmp
push
and
sub
fildl
lret
sbb
mov
in
add
pushf
ds
sbb
das
shll
push
loope
loop
adc
and
xchg
cmp
xchg
push
sbb
push
out
jae
imul
fldcw
mov
cltd
fldl
ds
push
into
lret
or
push
loop
sub
jecxz
lcall
push
jecxz
inc
in
add
sahf
std
push
inc
into
adc
adc
scas
sbb
xlat
cmp
imul
sbb
test
adc
push
test
insl
ds
jge
mov
dec
jg
mov
mov
xchg
fmuls
push
in
mov
sbb
mov
inc
mov
popa
xlat
cmp
mov
add
mov
in
mov
es
add
push
cmpl
xchg
cmp
lock
pop
cmp
xor
xor
inc
xor
in
sbb
mov
insb
fmull
mov
mov
and
stos
jle
sub
bound
ret
mov
pop
flds
push
cmp
dec
stos
pop
mov
mov
loop
jns
ss
mov
adc
fimuls
or
xchg
mov
inc
je
loop
jecxz
add
jmp
push
xlat
pusha
stos
das
out
lds
sbb
fidivs
inc
repz
xchg
shrl
mov
cltd
fwait
fisttps
pop
adc
and
jne
sahf
sti
jp
xor
and
xor
in
and
adc
mov
cltd
mov
repnz
jecxz
mov
aas
lods
and
clc
and
mov
mov
pop
stos
mov
adc
stos
xor
std
lahf
mov
das
xor
xchg
test
or
insl
insb
fs
xor
or
outsb
push
xor
pop
leave
int
in
iret
leave
jo
jnp
ss
cwtl
movsl
jl
movsl
cld
nop
add
mov
mov
insl
iret
add
lock
and
sbb
movsl
and
xchg
push
scas
jns
mov
push
cmp
mov
and
mov
out
sbb
shll
ss
sbbb
push
dec
adc
aaa
inc
sti
in
xor
sbb
xor
shrb
pop
imul
and
xor
push
pushf
dec
aam
aad
xor
cld
mov
fcmovb
stos
out
adc
and
pop
les
mov
push
xor
dec
call
or
mov
add
adcl
xor
es
jp
mov
mov
xlat
push
std
std
fbld
fcompl
sti
sbb
daa
int3
pop
stos
push
pop
xor
mov
adc
mov
mov
pop
and
sbb
mov
aaa
jns
add
pop
loop
push
icebp
push
pop
jg
out
insb
int3
xor
in
sub
rcl
addb
push
shlb
sarl
ss
mov
movsl
fbld
nop
jne
cmp
out
inc
popa
or
out
xor
popa
jg
sub
arpl
push
into
shrl
mov
xor
mov
push
cs
aas
bound
das
mov
pop
orb
xor
loop
xchg
lcall
cmp
clc
xlat
adc
pop
xor
pop
icebp
pop
xlat
sbb
movsb
add
enter
sbb
inc
jne
lock
fsubl
mov
es
sbb
mov
dec
pop
andb
stc
pop
mov
mov
push
daa
push
pop
add
out
sub
xchg
out
sbb
adc
cmp
enter
test
jae
sbb
add
dec
fucom
jg
outsb
in
pop
mov
shrb
out
clc
pop
insb
hlt
incl
jo
js
data16
add
js
xor
and
mov
subps
adc
inc
cld
cmpsl
iret
jmp
dec
out
lods
shr
fbstp
xor
imulb
or
adc
mov
lret
fwait
adc
xchg
ds
xor
and
pop
dec
loop
jns
lds
pop
rclb
aaa
je
dec
or
push
mov
lock
leave
jge
std
xor
dec
inc
cs
cmpsb
xchg
push
in
jp
cld
mov
ret
icebp
fiaddl
std
fbld
and
add
mov
or
pop
out
pop
insb
adc
sahf
cmc
xchg
cli
rcrb
jbe
daa
push
imul
or
mov
test
call
sti
ret
cmpsb
dec
sub
int3
xchg
mov
jp
mov
stos
mov
pop
pop
push
sub
dec
nop
cmp
xlat
pop
sbb
les
adc
cmp
sub
adc
sbb
pop
and
mov
in
cs
adc
add
adc
out
jecxz
in
hlt
je
dec
int3
out
inc
test
pushf
inc
ljmp
ret
fwait
mov
and
jns
cli
in
jo
xor
add
add
mov
adc
js
es
cmc
fmuls
pusha
sahf
rcr
inc
loopne
push
push
lea
lret
cmp
mov
fistpll
mov
sahf
movsb
jb
inc
arpl
dec
rclb
ja
inc
mov
xor
jl
sbb
lea
cmpsl
outsb
je
xor
mov
inc
push
xchg
push
popa
sub
testb
pop
adc
sub
add
outsb
pop
dec
shll
jp
fistps
test
add
xchg
xor
aam
mov
iret
jo
movsl
jmp
jo
sub
bound
ja
js
incl
stos
or
or
mov
cmc
inc
scas
out
or
sbb
and
insb
scas
mov
xorb
rclb
push
push
cmp
cltd
xchg
roll
sub
push
imul
and
cmpsb
lods
or
lds
cmpsb
jo
gs
jecxz
add
data16
call
aas
xadd
xor
cmpsb
subl
xor
mov
enter
fmul
test
dec
ljmp
and
sub
jo
mov
movb
loop
js
jg
dec
pop
mov
lret
fidivl
lahf
push
dec
adc
mov
lock
xchg
sti
xor
ret
mov
add
out
fstpt
es
es
outsb
cmp
imul
mov
or
or
insb
hlt
mov
scas
imul
stos
mov
or
in
or
decb
add
jp
fwait
das
mov
cmp
xchg
popf
bound
lahf
dec
mov
mov
repz
shlb
and
insb
aad
push
test
push
sarl
xor
gs
add
sbb
jg
xor
lcall
adc
movsl
and
cltd
jl
repz
pusha
arpl
scas
mov
cmp
inc
sbb
pop
cmp
push
mov
out
push
jl
mov
and
mov
jns
jmp
xor
dec
enterw
pop
dec
popa
andb
adc
mov
es
pop
ds
mov
mov
je
pop
mov
sbb
add
mov
nop
and
pop
out
inc
dec
mov
sahf
aad
fnsave
and
push
mov
loope
lret
lock
adc
add
push
mov
mov
xchg
or
xor
jo
loop
jb
movq
cmp
aad
hlt
es
add
dec
jbe
nop
sbb
mov
fwait
popf
jb
adc
sub
sti
pusha
rorb
mov
push
loop
and
imul
mov
xlat
rcll
pop
loopne
out
sarb
pop
lea
xchg
je
test
inc
popf
sbb
es
xchg
aas
or
mov
pop
mov
adc
adc
xchg
push
daa
cld
or
sti
mov
test
fcompl
mov
aas
je
sbb
cmc
inc
jnp
cmpb
sbb
movsb
popf
pushl
loop
mov
test
jno
mov
or
aaa
loop
mov
push
ja
mov
jns
repnz
jmp
jo
outsb
push
fmuls
adc
push
imul
or
shll
mov
pushf
mov
das
les
adc
push
adc
loope
test
mov
xchg
repz
jb
pop
xor
xor
add
xlat
shrb
mov
out
cmp
jl
lret
mov
shlb
pop
js
aaa
push
stos
dec
addr16
xchg
xchg
stc
inc
pop
or
dec
mov
addr16
rclb
mov
jl
out
xor
adc
aad
mov
xchg
pop
shlb
xchg
mov
inc
clc
mov
jmp
dec
cld
adc
std
push
addl
ja
xchg
rorb
and
or
ret
int
mov
nop
lock
inc
int3
or
jnp
inc
push
pop
push
js
inc
daa
push
mov
adcb
push
pushf
aas
ljmp
insl
pop
cmp
mov
push
mov
mov
and
call
cmp
xor
lds
mov
test
push
mov
outsl
lcall
int3
adc
pop
jae
fisubs
jne
test
adc
mov
add
mov
mov
xor
dec
push
and
out
into
ljmp
pop
aas
pop
xchg
cmpsl
mov
int3
arpl
dec
push
sub
flds
push
or
stos
cmpsl
shrl
jge
stos
fsin
orb
imul
shrb
out
adc
mov
lods
lcall
add
cmp
std
xchg
lea
imul
out
out
cmp
lret
test
ficoms
pop
jl
adc
fsubrp
sub
xchg
add
pop
shrl
ja
insl
roll
je
test
imul
call
jo
lods
mov
pop
lds
cmc
scas
cwtl
movsl
les
mov
push
outsb
xchg
das
js
push
out
or
data16
or
stc
in
in
adc
pop
push
inc
xchg
mov
add
xlat
and
aad
sub
jp
sbb
xor
cwtl
dec
outsb
repnz
sbb
ss
jecxz
insb
pop
cmp
xlat
imul
pop
mov
add
cmp
cmp
xchg
mov
xchg
les
mov
push
ss
lret
scas
adc
or
inc
xchg
in
fmuls
out
mov
mov
and
movsb
rcll
inc
sbb
and
and
scas
ret
repz
pop
or
js
lret
jecxz
xlat
std
lods
pusha
jno
loope
movsl
sbb
xchg
int
arpl
inc
fiaddl
push
jne
mov
or
mov
inc
sti
and
mov
aas
aaa
testl
shll
inc
dec
aas
mov
lret
sti
pop
mov
and
push
cmp
jle
inc
xor
pop
add
mov
lds
dec
jae
test
dec
jmp
xchg
icebp
add
inc
mov
adc
mov
subb
mov
dec
sub
jge
sub
push
jmp
sbb
xlat
ret
lds
dec
pop
mov
pop
rcll
inc
fsubl
ds
sub
out
sbb
rolb
js
insb
dec
movsl
cmpsl
pop
daa
cld
cmp
sub
dec
push
iret
add
inc
xchg
out
xor
dec
mov
and
aas
xchg
or
pop
mov
cli
pop
insb
mul
adc
mov
push
mov
push
mov
fucom
fucom
adc
lods
pop
adc
rcrb
cmp
mov
dec
or
mov
loop
sbb
push
jns
outsb
ljmp
fistps
repnz
dec
pop
std
in
and
mov
rcll
out
lods
sbb
popf
sub
sbb
lds
xor
jne
cmp
mov
inc
mov
fucomi
pop
ljmp
sub
push
outsb
nop
movsl
pop
cmp
mov
push
loop
sbb
movsb
mov
je
into
sub
sbb
stos
sahf
das
or
xor
test
jno
lahf
add
adc
fucompp
add
in
jns
fisttpll
adc
das
andl
cmp
in
inc
mov
mov
pop
fcompl
sbb
mov
push
jl
aad
or
js
popa
aam
or
xchg
es
rcll
jae
sahf
imul
mov
mov
pop
hlt
xor
mov
jp
cmpsl
pushf
fwait
push
xchg
clc
test
dec
jecxz
les
sarb
mov
push
cli
icebp
bound
xor
pop
xchg
xor
mov
cmc
std
and
mov
cltd
ds
das
sarl
cmp
cmp
mov
fistpll
fwait
or
aam
stc
shl
mov
push
xchg
sarb
leave
stc
fadds
or
aad
cltd
mov
bnd
adc
pop
jge
js
pop
loopne
sub
or
xchg
addr16
sub
mov
insl
pop
mov
movsb
outsl
fbld
test
cs
stos
notb
or
sbb
mov
or
fstpl
sti
aam
je
push
pop
sbb
cmpsl
in
mov
push
lds
mov
hlt
loope
addr16
sub
cmp
pop
adc
stos
into
inc
jle
inc
add
repz
xchg
das
jmp
jecxz
mul
and
sbb
pop
sbb
xchg
pop
dec
xchg
pop
sbb
adc
mov
add
icebp
mov
lret
sti
sbb
mov
xchg
jle
sub
test
stc
jge
xchg
dec
push
dec
adc
adc
loop
xor
xor
pop
fwait
add
sbb
popf
cmp
xor
mov
xchg
je
out
xchg
fs
adc
bound
fidivs
mov
pop
adc
adc
inc
jo
mov
pop
push
in
xor
sub
add
xchg
mov
mov
mov
mov
sub
hlt
cmp
insb
inc
int
je
movb
sbb
dec
and
mov
sbb
adc
and
ret
xor
sub
adc
inc
dec
popa
lret
inc
xor
pop
pop
or
pop
mov
xor
mov
cmp
mov
lret
or
jno
movsl
push
adc
mov
insb
or
scas
bound
cmc
sbb
out
shrb
dec
mov
mov
pusha
out
mov
icebp
lahf
push
jecxz
mov
sbb
inc
bound
mov
lahf
dec
in
into
cmpsb
mov
aas
dec
push
pop
out
dec
adc
ficoms
popa
test
in
pop
jge
hlt
push
imul
scas
flds
loopne
jae
rcrl
push
mov
mov
testl
pop
fsub
fidivrl
les
adc
movsl
mov
mov
shl
sub
jmp
in
lea
or
scas
sti
cs
hlt
das
cmpsb
dec
pop
jmp
ret
shl
mov
jb
lret
fs
xor
jne
cmpsb
and
lahf
add
pop
mov
leave
mov
push
adc
faddl
lahf
dec
push
out
jne
and
out
scas
push
fdivr
cmp
xchg
rep
inc
sbb
jns
sbb
scas
xor
aam
call
cmpsl
addl
mov
mov
and
inc
into
pop
lahf
daa
add
movsl
push
push
cwtl
jnp
cmc
mov
call
and
out
cmp
add
mov
dec
mov
push
cmp
add
cmp
pusha
pop
mov
movsb
xor
or
movsb
sbb
popf
jne
daa
insb
les
lods
mov
xor
fdivrl
int3
mov
rol
mov
mov
xor
add
sub
adc
jge
iret
pop
lods
and
xchg
and
lret
out
pusha
testb
fistpl
sbb
jge
jle
dec
mov
cmp
enter
sbb
dec
leave
lods
fs
xor
add
inc
fdivp
scas
pop
and
mov
ret
inc
cmp
pop
inc
sbbb
das
sub
jo
rolb
gs
adcl
sbb
or
inc
stos
jne
adc
mov
cli
das
popf
fs
cmp
push
ret
mov
mov
push
dec
mov
or
ret
out
mov
sbb
fists
pop
das
scas
mov
aaa
out
adc
jmp
pop
inc
test
jp
pop
mov
dec
pusha
loop
pop
std
and
arpl
push
mov
daa
imul
inc
dec
sub
repnz
and
jmp
cwtl
scas
xor
sbb
cmp
fsubl
ret
cmp
rcll
xchg
setle
mov
fsubrs
fisttpl
pop
xchg
jns
fadds
and
jo
cmp
shrl
cs
or
in
lea
mov
sbb
or
and
jl
psubw
dec
outsb
cmp
jnp
test
out
test
aas
out
mov
adc
js
and
rorb
rcr
nop
lock
cmpsb
xor
cmp
in
sbb
loop
adc
cmp
fdiv
out
mov
xorl
jp
xor
mov
test
push
cmp
sbb
popa
adc
jge
mov
clc
jle
shlb
sbb
sub
repz
xchg
fisubs
sbb
lahf
bound
sub
push
jp
mov
adc
repz
lret
jecxz
dec
mulb
lods
pop
leave
push
insb
mov
adc
and
mov
mov
xor
inc
sti
mov
push
js
cwtl
push
fimuls
lea
ja
push
jae
cmp
or
dec
dec
mov
mov
inc
mov
orl
xlat
out
cltd
xor
jo
push
dec
lcall
icebp
pop
popf
hlt
sbb
mov
or
out
fisubl
popl
lret
push
inc
daa
xor
pop
jl
or
xor
bound
mov
cld
add
push
les
jno
shr
adc
xchg
test
jl
pushf
mov
push
push
movaps
add
clc
jl
add
pop
ljmp
cmpsl
testb
into
cmp
shrl
jg
pop
push
imul
icebp
inc
shlb
cmp
cmc
cltd
pop
dec
ljmp
fucomp
xor
mov
mov
adcl
xor
xchg
dec
inc
test
pop
fwait
jo
add
inc
enter
xchg
sbb
idivl
inc
inc
int3
not
sub
jg
xchg
mov
lock
sub
ret
jnp
dec
mov
add
test
mov
test
je
in
lret
xor
popa
mov
pop
xchg
bound
lret
push
xor
sub
cmc
mov
ljmp
mov
lods
pop
and
das
mov
fistpll
xchg
pusha
pushf
mov
jne
aad
out
popf
rclb
and
pusha
inc
clc
cmp
dec
and
mov
mov
jecxz
lods
mov
mov
xchg
xorl
lods
push
sub
sub
or
sub
sub
adc
sbb
lret
mov
jne
sub
or
das
ljmp
faddp
lods
or
pop
mov
mov
pop
mov
and
js
fidivs
test
lahf
xor
mov
mov
jl
into
mov
lock
popa
shrd
out
mov
sbb
inc
xorl
mov
dec
out
insb
xchg
loopne
out
addr16
imul
xchg
test
xchg
cmc
jecxz
pop
jbe
dec
mov
or
ret
or
sbb
dec
test
mov
lods
arpl
lds
jp
xor
pop
fimull
int
adc
and
getsec
pop
outsb
dec
ret
out
fistpll
xchg
push
pop
sbb
jae
aam
cs
adc
add
fnstenv
mov
shll
lea
mov
jo
cmpsb
sbb
int3
test
imul
loope
jnp
popf
fcoms
test
mov
add
and
lret
push
push
fistl
repnz
fidivrs
js
sub
jle
mov
pushf
jo
mov
shl
mov
push
shrb
pop
and
cli
push
add
jmp
mov
insl
call
and
jb
addr16
clc
dec
fidivrl
inc
enter
shlb
push
push
push
xchg
stos
ficompl
in
test
pop
js
leave
pop
out
jbe
lret
js
mov
xor
cs
das
ja
sub
rclb
push
mov
rorl
aaa
push
dec
mov
add
iret
setnp
cmp
shll
pop
xchg
xchg
jae
push
jnp
pop
xchg
adc
dec
lahf
out
test
dec
push
mov
popa
and
cmp
or
jno
pop
repz
pushf
pop
stos
and
sti
sbb
jne,pt
lods
insl
mov
xchg
add
mov
push
addr16
movsb
mov
pop
fmul
aaa
jmp
js
sbb
jae
adc
dec
daa
lahf
cmp
mov
mov
dec
in
push
push
cmpsl
lods
pusha
add
rclb
xor
subb
pusha
je
add
mov
cs
xor
mov
or
leave
jns
lret
pop
jbe
sbb
xor
bound
into
cmpsl
lahf
jmp
mov
sub
mov
dec
sbb
mov
push
push
pop
insb
pop
mov
and
test
lods
out
or
ret
imul
and
add
leave
out
mov
imul
insb
nop
push
cltd
push
sti
lds
pop
gs
ficoms
jnp
sub
push
clc
sbb
cmpsb
pop
dec
call
sbb
cmc
mov
ja
stos
test
lret
jp
jg
and
ljmp
je
in
and
sub
mov
mov
popf
lock
jg
and
imul
jns
push
push
push
sbb
mov
fwait
arpl
clc
out
ret
fs
pop
dec
push
or
fadd
ret
outsl
or
add
subb
pop
add
push
int
filds
jle
test
mov
scas
mov
test
mov
push
pop
mov
cmp
insl
cwtl
jmp
mov
mov
bound
cmpb
pop
fdivrp
push
inc
sub
popa
in
xor
mov
je
bound
jl
or
jnp
repnz
pop
nop
aad
out
xchg
loopne
and
xor
xor
cmc
add
jl
mov
addr16
int3
mov
adc
ret
xchg
enter
repz
mov
pushf
repz
xor
dec
inc
sub
add
inc
adc
das
gs
rcrl
fdivl
ljmp
sbb
xchg
lret
std
ret
inc
and
sub
mov
das
sti
sarb
pop
xchg
pop
xchg
ret
push
xchg
inc
aas
xor
dec
daa
mov
pop
sub
jp
sub
outsb
int3
add
shrl
sbb
outsb
aas
pusha
add
xlat
add
sub
negl
ljmp
pop
sahf
mov
or
jno
and
pop
cld
into
imul
jmp
movsb
stos
rolb
pop
jo
stos
cmpb
xchg
sub
jo
insl
lret
iret
mov
xchg
daa
xor
call
xor
adc
pushf
jmp
sbb
jp
pop
les
sarb
mov
scas
leave
out
ret
rcll
inc
sub
or
popa
and
xor
scas
int3
aam
fnsave
dec
add
lcall
or
push
mov
std
jmp
sub
int
test
mov
fistpll
push
call
dec
cmp
and
and
sub
call
mov
jno
jno
push
dec
pop
pop
mov
fstpl
fiaddl
xor
btc
jl
ja
call
cli
sbb
ret
int3
mov
mov
sarl
loopne
adc
mov
aaa
les
pop
mov
push
mov
jmp
mov
push
or
mov
mov
inc
pop
sub
out
jecxz
sub
sbb
lcall
leave
lret
mov
jmp
mov
or
mov
pop
pop
stos
mov
mov
cmpsl
rcr
loope
sbb
cmc
inc
push
stos
daa
mov
dec
sbb
sbb
and
mov
sub
mov
dec
push
lahf
sbb
rcrl
cmp
es
push
push
xor
sub
aas
fldl
in
add
jecxz
mov
mov
lret
mov
dec
mov
pop
pop
jge
and
adc
roll
mov
and
xor
ja
mov
test
shll
fnsave
das
call
loope
je
pop
add
int3
shll
xchg
push
loop
lock
add
sbb
push
cwtl
sbb
mov
addr16
sbb
lods
andl
and
adc
cmc
int
test
jle
pop
pushf
ret
cld
testl
xchg
ret
pop
sar
or
pushf
ja
xor
popf
inc
sub
ret
add
aam
insb
push
jmp
dec
out
scas
push
push
xor
push
mov
js
insb
dec
mov
lods
icebp
adc
and
jnp
shl
stos
mov
push
imul
fbstp
jns
out
movsb
and
mov
dec
dec
daa
jnp
jmp
addr16
gs
xor
xchg
and
ja
dec
insl
jg
faddl
xor
and
sub
mov
adc
jno
lods
imul
pop
sub
xor
cmp
in
xor
cld
push
nop
push
mov
jge
aam
cs
adc
mov
es
mov
pop
push
inc
insl
mov
lods
divb
jb
subb
adc
stc
les
nop
out
cmp
test
fdivrl
lock
inc
popa
lret
fwait
sub
ja
add
sbb
sub
cwtl
js
push
mov
pop
cmpsb
sbb
xor
jns
out
jge
outsb
adc
scas
mov
push
enter
mov
sub
push
jl
inc
aaa
adc
jge
lahf
sbb
jmp
ss
xchg
push
mov
ret
stos
xchg
cwtl
fldenv
push
xchg
sti
pop
loopne
mov
lock
mov
mov
cmp
xlat
cmp
testl
iret
fdivrl
or
and
xchg
loopne
dec
mov
pop
push
lcall
xor
mov
ss
jg
push
push
bnd
jns
mov
sar
jl
inc
push
andl
dec
inc
pushf
xchg
or
pop
jmp
ret
out
addb
push
lret
scas
inc
aas
int
shrb
pop
inc
mov
adc
clc
add
mov
push
mov
aaa
fcoms
bswap
jae
mov
dec
push
dec
mov
cmpl
int
mov
in
dec
fstpl
sbb
push
cwtl
loop
inc
adc
inc
lcall
mov
in
fdivr
int3
sub
pop
in
out
xchg
mov
and
mov
test
in
lods
imul
faddl
lret
push
inc
negb
decl
mov
adc
sbb
and
stc
not
jns
push
sub
fidivrl
sbb
dec
in
mov
stc
stos
push
arpl
notb
fcoml
xchg
push
stos
xor
out
xchg
dec
push
mov
or
ss
es
daa
fcomps
inc
popf
jg
in
je
jo
js
fs
cld
cmp
mov
push
negb
ss
aaa
jp
xchg
popa
push
cmpb
pushf
cs
mov
jb
movsb
inc
pop
mov
push
and
jb
xchg
sbb
mulb
mov
fisubl
fdivl
js
inc
out
pop
mov
fst
xor
push
int
mov
push
jo
and
pusha
fwait
inc
sbb
clc
sub
mov
loopne
mov
js
test
setno
out
test
repnz
mov
xlat
add
andb
mov
add
push
and
or
and
icebp
or
pop
rcr
xchg
out
dec
push
or
repnz
add
outsb
dec
and
rcrb
pop
or
jmp
sbb
mov
add
pushf
adc
xchg
into
add
xor
cmpsb
adc
push
bnd
pop
rcrb
push
mov
jmp
mov
in
sub
stc
cmp
push
xchg
or
loopne
lock
adc
lods
hlt
jbe
xor
dec
xchg
mov
into
cs
xchg
lahf
xor
xor
inc
sti
pusha
fnstcw
mov
and
push
testb
repnz
insb
push
lods
mov
sarl
pop
cmpsl
sbb
lods
pusha
mov
push
pushf
popf
pop
cmc
inc
mov
cmp
lods
jp
xor
jns
sti
imul
xor
xorb
sbb
int3
adc
pusha
outsb
or
adc
nop
leave
std
ret
or
mov
inc
fbld
fs
adc
mov
insl
sub
cmp
push
sar
inc
cmpsb
mov
add
das
xchg
movsb
xchg
add
fidivrs
jne
mov
inc
lods
fnstsw
xchg
andb
pusha
test
adc
rolb
push
das
loopne
shlb
test
sbb
jmp
mov
push
loope
and
mov
mov
jle
or
adc
shr
inc
dec
mov
mov
pop
loop
and
lds
inc
pop
daa
xor
adc
enter
movsl
fcmove
jns
sub
dec
push
pop
cltd
xchg
dec
or
mov
push
xchg
lea
push
mov
xlat
jl
sbb
xchg
scas
lcall
popf
jp
mov
xchg
aam
repnz
fsts
sbb
sub
adc
jbe
cvtps2pi
das
hlt
pop
dec
mov
fs
mov
loopne
scas
std
jle
decb
jbe
lahf
add
scas
mov
gs
mov
pop
movsb
sub
mov
inc
pop
sbb
das
inc
outsl
out
sahf
mov
cmp
lahf
fildl
fstps
cs
cmp
dec
pop
je
jne
jne
pop
dec
loope
movsb
dec
push
pop
and
js,pt
push
cmp
ljmp
mov
push
mov
mov
and
pusha
arpl
addl
imul
outsb
pop
fucomip
fsubrl
mov
xor
outsb
adc
xchg
xchg
mov
rorb
xor
scas
ret
out
inc
in
mov
aad
mov
iret
lcall
xchg
lahf
mov
daa
not
data16
inc
mov
dec
fwait
cmc
call
fdivp
enter
ljmp
ret
lcall
faddp
mov
xor
push
mov
out
and
repz
add
mov
mov
movsl
pushf
dec
jns
push
mov
test
das
fldl2e
repnz
sub
test
adcb
sbb
and
les
lret
fildl
jecxz
and
jne
push
popf
lods
cmp
push
or
fsubrs
testl
jmp
dec
mov
add
addl
hlt
out
fcomps
ljmp
adc
cwtl
dec
xor
ret
mov
sub
dec
aaa
insl
cmc
pusha
aam
jl
imulb
inc
mov
pop
lcall
ret
ljmp
ret
shlb
push
push
ret
cmp
ror
ret
rcl
movsl
fdivl
mov
mov
loopne
roll
pop
andl
iret
rcl
daa
sub
cmpsb
xor
outsb
or
mov
xor
mov
mov
or
xor
subb
dec
jecxz
adcl
cmpsl
pop
mov
fcmovnb
test
lea
out
jmp
in
imul
shlb
movsb
sahf
push
loope
jle
lock
loop
enter
ficoms
mov
mov
ret
push
sbb
movsl
push
mov
adcl
lods
bound
add
push
adc
jg
ficoml
sti
outsl
pop
sbb
and
xchg
jbe
cmovle
xor
call
push
add
pop
sahf
outsb
sub
insl
and
popf
xor
fcoms
sahf
sbb
dec
jns
xor
clc
or
push
pop
and
insl
clc
fldt
and
pop
mov
rol
js
loop
adc
pop
mov
ficompl
pushf
out
mov
dec
push
mov
and
add
outsb
add
cmp
stos
jno
dec
gs
es
cld
dec
std
mov
out
rorb
adc
jecxz
pop
xlat
add
out
outsl
insb
and
mov
jns
jg
sbb
sbb
xor
mov
rcrl
add
repz
jns
dec
lock
icebp
inc
outsl
testl
jecxz
cs
dec
lret
outsb
pop
mov
push
xchg
pusha
loopne
xor
add
mov
and
addb
push
in
jns
mov
dec
in
cmpsl
arpl
lock
cmp
das
lea
jnp
mov
shr
scas
pop
inc
lret
inc
aas
icebp
add
sub
or
and
add
mov
push
repnz
xor
fs
cmp
mov
imul
in
mov
rcrl
lahf
push
push
or
data16
sbb
rcll
xor
pop
xor
fdivrl
cld
cmp
mov
fxsave
cmp
push
sahf
xor
xlat
cmp
je
leave
mov
jp
mov
fstp
or
psllw
mov
fnstcw
inc
adcb
jg
mov
mov
popa
push
sub
int3
ljmp
popa
scas
movsb
leave
sub
jae
bound
lret
hlt
lock
jo
and
jmp
mov
mov
adc
push
sbb
les
lea
pop
push
outsl
and
in
aas
mov
xchg
sub
push
stos
scas
test
push
xor
sub
or
sbb
inc
clc
mov
scas
sbb
mov
mov
fsubp
loopne
and
push
js
xchg
inc
jecxz
cwtl
inc
mov
sbb
add
aas
xor
das
repnz
inc
in
mov
or
add
ljmp
sub
lahf
or
data16
push
mov
dec
dec
pop
adc
xor
fwait
inc
push
cmpsb
sbb
add
in
leave
push
pusha
jbe
fdivr
sub
push
jno
rolb
xorb
repz
int
sbb
aas
and
push
jno
push
jns
dec
push
push
sub
fwait
add
sub
inc
test
push
cmp
dec
rolb
adc
mov
insb
inc
cmpsb
pop
rorb
out
cmpsb
mov
push
mov
xlat
mov
sub
sahf
out
mov
mov
loopne
movsl
fadds
mov
cli
aaa
movsb
into
andb
inc
leave
cmpsl
loop
or
add
jb
push
scas
aas
sti
adc
mov
mov
loop
scas
xchg
ficomps
gs
scas
pusha
daa
add
fadds
test
popa
es
adc
pop
push
xor
mov
pop
sub
das
adc
repz
adc
std
les
mov
sub
xchg
js
jnp
push
inc
rol
dec
xchg
jg
sarb
sbb
sti
cwtl
pop
in
loop
stos
mov
int3
cwtl
and
pushf
xor
cltd
inc
xor
les
leave
mov
daa
inc
sbb
inc
xor
inc
xchg
mov
ja
pushf
jl
jbe
fyl2x
popa
icebp
scas
dec
cld
jb
lret
xchg
test
and
sub
ror
push
scas
popa
jo
arpl
mov
sub
mov
mov
fcomip
sub
mov
push
stos
cmp
sarb
ret
and
rcl
sbb
mov
cmp
addl
js
clc
sbb
mov
outsb
addr16
lret
movsl
and
sub
out
popa
pop
sbb
sar
or
sbbb
lds
pop
pop
inc
nop
xor
lret
pop
gs
or
dec
jb
fstl
fistps
mov
flds
cwtl
mov
or
pop
mov
dec
cmp
adc
aas
aam
xchg
dec
xchg
call
call
pop
inc
jne
lds
subl
daa
rcrb
jl
stc
inc
jns
sub
mov
fs
and
pushl
xorb
icebp
sbb
fs
xchg
sub
push
loopne
inc
xor
lahf
cmpsb
enter
stc
cld
push
sbb
ljmp
movsl
mov
mov
movsb
add
xor
adc
sbb
into
dec
push
mov
add
xor
jl
movl
xlat
pop
mov
cld
shl
pop
push
out
cmp
add
aam
aad
pop
mov
sbb
adc
sti
scas
add
ja
dec
xor
dec
je
loop
pop
jns
aam
sbb
dec
push
mov
cmp
xor
dec
ret
push
mov
stc
ja
jmp
adc
and
aam
pop
and
inc
dec
ret
jbe
out
adc
push
out
mov
sbb
or
gs
push
das
stc
mov
mov
loopne
xchg
sbb
mov
lret
cmpsl
sub
cmpsb
cmovl
inc
rorb
int
cmp
ret
in
rcl
int3
pop
out
lods
push
ljmp
aam
mull
push
push
mov
inc
loope
cmp
jg
jge
xchg
jno
or
add
out
popa
push
cwtl
xchg
aad
shrl
repnz
int3
jp
fstpt
adc
sahf
xor
enter
jp
jecxz
pop
adc
test
shll
icebp
xor
fcompl
pop
cmpsl
mov
sbb
lds
inc
stos
mov
mov
inc
movsl
popf
int
fs
push
jne
cltd
inc
cmp
sub
das
pop
aas
sbb
ficoml
xor
mov
scas
mov
pop
add
cmp
in
je
jo
pusha
pop
xor
dec
xchg
jb
push
dec
fimull
pop
mov
pop
inc
mov
shrb
jo
popl
hlt
cltd
mov
bound
xchg
negb
mov
aad
movsb
gs
dec
jnp
xchg
push
ficoms
xchg
addr16
inc
or
arpl
inc
xor
popf
mov
out
nop
xchg
and
stos
insb
iret
mov
and
in
imul
es
mov
xorl
add
mov
in
add
xchg
movsl
into
add
repnz
es
into
pop
mov
mov
sub
xor
stc
pop
ds
mov
fistpl
cmpb
les
mov
xlat
shll
mov
jl
fnstenv
pop
aad
test
cltd
push
pushf
fiaddl
jb
leave
jne
aas
push
pop
xor
pop
jl
pop
outsl
adc
jo
data16
imul
push
add
pop
jb
jnp
sbb
mov
mov
ja
xchg
int
inc
lret
add
dec
lret
push
sub
rolb
ljmp
insl
jecxz
and
push
dec
sub
sbb
fdiv
das
mov
push
xchg
cwtl
lahf
pop
xchg
movsl
popf
outsb
pop
and
mov
mov
mov
rorl
or
mov
stc
mov
xchg
jae
scas
xchg
int
lds
inc
xchg
add
xor
dec
sbb
ror
movsl
push
adc
mov
push
inc
adc
cmp
clc
js
das
inc
jecxz
or
mov
sahf
and
je
mov
add
aaa
dec
sbb
jmp
int
jo
es
mov
int
popf
outsb
cltd
push
aam
push
loop
pop
mov
xor
sbb
and
jbe
stc
iret
mov
repz
xchg
ljmp
or
cmp
ror
mov
cmpsb
cmp
jle
imul
mov
and
scas
cmp
ss
inc
adc
fadds
push
dec
je
pop
test
cli
sbb
dec
xor
xor
xchg
xor
inc
pop
lea
enter
adc
adc
out
xor
pushf
addr16
push
arpl
inc
and
int3
jns
inc
jg
dec
or
or
adc
cwtl
insl
jecxz
movsl
mov
or
cmp
outsl
dec
fcmovne
aad
xor
btr
sub
cmp
movsl
data16
sub
in
int3
mov
jb
xchg
loop
mov
aad
adc
cmp
cmp
fwait
push
pop
in
pop
mov
aas
jno
sub
ds
xlat
fs
inc
mov
call
mov
iret
mov
mov
lret
adc
fdivrl
and
sbb
icebp
lds
mov
loopne
adc
add
inc
decb
fs
inc
or
insb
jbe
jecxz
stos
int3
inc
add
add
rcrl
ds
lea
movsl
add
inc
jp
movsb
mov
into
inc
adc
push
xor
push
les
pushf
fstl
mov
in
mov
notb
push
cmc
sbb
into
scas
push
and
inc
or
mov
lock
sbb
jl
and
push
repnz
lea
jecxz
lea
repz
lock
xor
mov
div
adc
dec
mov
pop
ljmp
and
jmp
add
adc
mov
out
and
fstl
adc
outsl
or
add
add
or
xchg
inc
fmull
sbb
fs
in
xchg
mov
in
inc
ss
fildl
mov
out
sahf
pushf
cli
jno
es
dec
lcall
out
dec
mov
lcall
mov
lret
mov
adc
mov
mov
arpl
pusha
fisttpl
lock
xor
repz
addr16
fldl
in
xchg
test
sbb
jo
pop
xchg
pop
jne
cmpsl
and
aam
pop
or
in
mov
insl
fsubrp
add
xchg
adc
sti
insl
lahf
push
push
scas
divb
in
shl
das
or
scas
jle
data16
aam
push
mov
es
sbbb
sbb
xchg
cmpsl
xor
jp
fcmovnb
or
jg
xchg
mov
js
decb
jecxz
adc
xchg
mov
lret
pushf
push
inc
lret
mov
inc
repz
xchg
loopne
mov
in
pusha
dec
xchg
xchg
xor
fistl
out
fdivrl
inc
cmp
ret
ret
lods
push
ret
and
pop
and
arpl
lds
sub
inc
xchg
addl
out
xchg
or
pop
movsl
mov
or
inc
mov
jp
lods
ljmp
loope
call
inc
loopne
push
pop
loopne
mov
mov
add
dec
fmuls
inc
adc
and
adc
pop
xchg
sti
int3
xor
inc
fldl
fidivrs
cmc
fmulp
jo
into
dec
data16
mull
icebp
sub
fcmovne
jae
int3
into
divb
bound
les
mov
popf
data16
sub
push
imul
cmp
test
fwait
push
lods
sbb
xchg
outsl
xchg
or
dec
adc
loopne
data16
jg
test
pusha
cmpsb
push
inc
xchg
xchg
sbb
testb
jns
sahf
ja
lods
js
shrb
lea
pop
xchg
ret
xchg
and
rcrb
cltd
dec
pop
scas
ljmp
inc
add
shll
and
addr16
push
decb
jbe
add
sub
cmp
sub
lds
xchg
aaa
shr
lea
cmp
aaa
dec
jne
out
xchg
fdivl
push
xchg
pop
xchg
test
outsl
xchg
and
pop
cmp
sub
bound
dec
ja
sub
mov
xchg
and
push
and
inc
data16
adc
movsb
aam
mov
adc
jmp
cli
pop
dec
cmp
les
popa
andb
sbb
mov
mov
dec
out
adc
sbb
mov
dec
int3
push
notb
sbb
pop
rcrb
stos
aam
dec
aaa
inc
jo
dec
cli
and
shll
xor
and
fistps
mov
cltd
sub
mulb
mov
mov
lock
jo
je
bound
or
push
and
test
call
cltd
jp
sub
popa
or
xchg
or
ljmp
rcrb
xchg
ljmp
addr16
xchg
arpl
jmp
repnz
pop
lock
sbb
lret
jecxz
adc
clc
mov
pop
mov
cmp
stos
andb
jno
cmp
pop
fucomp
xor
jne
cmp
dec
popf
add
jns
rorb
xor
mov
inc
or
je
fidivl
in
add
cmp
shr
add
sub
dec
es
jno
clc
test
xor
dec
sub
push
mov
pop
sti
jecxz
pop
fistps
xchg
lcall
addl
push
push
xor
xor
sbb
ja
sahf
filds
outsb
push
pusha
test
pop
js
mov
loopne
ds
xor
es
mov
sbbb
sbb
mov
lret
js
mov
hlt
mov
mov
ja
inc
test
sbb
sbb
repz
out
push
in
bound
sbb
jle
mov
or
cld
pop
rol
inc
jae
pop
repnz
in
repnz
pop
ret
fcompl
jbe
movsl
aad
cmpsl
mov
xor
in
outsb
mov
jo
loopne
add
pop
push
mov
mov
dec
int
mov
mov
rorb
test
add
out
push
push
mov
sbb
xlat
int3
inc
xor
fcmovnbe
pop
jg
pop
sbb
popf
push
and
jns
das
dec
xchg
movsb
insl
dec
addr16
jae
fsubrs
fsts
aam
and
arpl
jg
andb
xor
sub
jne
dec
ret
jle
inc
xchg
aaa
loopne
push
pop
stos
dec
pop
arpl
or
inc
arpl
xor
pop
lea
jo
and
pop
mov
pushf
or
or
aaa
pop
fists
adc
mov
push
mov
mov
and
ljmp
mov
cwtl
xchg
loop
fisttpl
in
lods
push
jl
daa
pop
push
movsl
shll
jb
dec
inc
popa
inc
and
test
js
test
jmp
dec
in
lods
lret
inc
jb
int
lahf
shll
lea
mov
aas
push
push
aam
mov
pop
push
push
leave
in
mov
popl
addr16
and
push
out
into
imul
sub
xor
pusha
adc
dec
mov
adc
inc
test
stc
sbb
dec
or
push
sbb
xchg
andl
enter
adc
cmp
sbb
cld
xor
adc
push
movsb
daa
out
fisubrs
jne
pushf
sti
jmp
fstp
dec
add
pop
in
hlt
test
xchg
js
pop
inc
xchg
jmp
aad
add
data16
enter
adc
mov
dec
lds
push
dec
enter
push
xor
ss
or
mov
mov
aaa
inc
jnp
jae
dec
lods
mov
sbb
jbe
mov
inc
pop
jns
add
divb
add
jl
fcompl
cmp
insb
out
rorb
cmp
into
int3
and
sbb
icebp
out
mov
sub
jns
pop
repnz
cmp
sbb
cmp
jecxz
jns
pop
add
mov
push
int
sarl
gs
bound
cli
adc
lahf
lcall
insb
loop
mov
in
je
scas
and
lcall
mov
xlat
adc
daa
sarb
test
orl
mov
pop
mov
mov
mov
mov
cmp
sbb
jmp
iret
mov
out
scas
nop
imulb
mov
or
mov
sahf
lods
in
adc
and
dec
scas
outsb
les
pusha
pop
pop
cld
mov
or
jae
mov
dec
js
clc
ret
xor
cltd
idiv
cmp
or
mov
inc
addps
dec
mov
or
push
cld
cmp
imul
fs
in
test
adc
cmp
pop
and
mov
add
scas
fistpl
push
cmp
jmp
mov
sub
movsl
push
aas
add
mov
stos
sahf
mov
test
pop
or
adcb
mov
mov
subb
out
cmp
cld
and
mov
jae
gs
cwtl
add
sbb
pop
push
xor
xchg
arpl
loope
dec
fistps
xlat
mov
dec
out
std
xchg
inc
mov
xchg
ds
ds
or
jb
mov
das
push
and
sub
es
jo
lret
aam
ss
hlt
insl
sub
addr16
icebp
jno,pt
lock
adc
pusha
andl
aas
aam
add
div
popf
jecxz
cs
incb
mov
ss
std
addl
das
test
sbb
jns
adcl
cmp
ror
push
sbb
or
xchg
sub
repnz
ret
inc
mov
rcll
add
and
jns
repz
xor
mov
cmp
clc
mov
jo,pn
push
aaa
xchg
cmp
add
movsl
imul
imul
iret
stc
adc
int
or
iret
fimuls
push
mov
fmulp
and
add
daa
sub
aaa
dec
fbstp
mov
jae
out
and
sbb
clc
inc
scas
outsl
pop
cwtl
push
fnstenv
pop
insl
fdivs
mov
and
jb
lods
jno
test
pop
pop
dec
je
ret
shlb
jle
cltd
jle
push
stc
dec
jmp
adc
loopne
cld
lods
popf
icebp
mov
xchg
shlb
loope
into
sbb
outsb
cmp
dec
add
movsb
adc
jbe
jno
jno
mov
hlt
aas
clc
jmp
xchg
add
jp
push
in
scas
and
aaa
xchg
aam
mov
add
imul
bound
adc
inc
or
sbb
and
or
push
mov
adc
xchg
jp
xchg
pop
mov
imul
outsb
int
xor
xchg
lods
sbb
push
sbb
std
ret
movl
jmp
dec
cmp
mov
stos
daa
push
cmpsl
insl
std
adc
comiss
sar
imul
sarl
pop
inc
push
test
cmp
and
and
add
add
out
mov
adcl
lahf
addr16
movsb
movsb
xchg
pop
shr
out
in
push
dec
pop
cwtl
push
inc
push
outsl
je
cmp
mov
in
stc
push
add
sbb
imul
xchg
movsb
call
fstl
add
and
jae
mov
lret
xlat
in
dec
int3
xor
cmpsb
in
int3
mov
jle
adc
mov
test
fs
cmp
mov
idivb
dec
xchg
cwtl
in
mov
fnstcw
sbb
cmp
inc
addr16
aas
stos
imul
pop
daa
pushf
add
inc
inc
cs
iret
mov
lahf
aas
iret
fildl
xor
jo
xlat
stc
and
pushf
xchg
and
inc
and
stos
xchg
ret
mov
xor
mov
xchg
lahf
xor
mov
adcl
enter
outsl
mov
lds
aaa
ja
lds
ja
test
jg
pushf
pushf
je
mov
insl
pop
push
fs
scas
inc
jns
lcall
sbb
mov
outsl
mov
cs
data16
pop
enter
cmp
andb
xor
mov
xchg
xchg
cwtl
sub
xor
repnz
outsl
movsl
lds
pop
stos
shll
jge
daa
jl
xchg
cmp
and
pop
pushf
jle
push
xchg
mov
test
push
std
loope
cli
dec
int3
jle
jecxz
fwait
call
jns
insb
jge
jge
xchg
mov
mov
sbb
dec
adc
lock
cmpsb
and
ret
sti
in
jbe
sub
lock
insb
inc
adc
jp
lret
dec
sub
out
int
xor
lret
fcmovnbe
sub
adc
js,pt
test
push
popf
add
stos
xor
imul
jns
std
sbb
jae
js
aam
loopne
jb
jo
sbb
shlb
sub
dec
jo
js
cmpsl
aam
mov
inc
pop
fidivs
pop
rcll
bt
xor
orl
cld
fistps
sahf
dec
and
les
inc
imul
xor
lcall
ret
sbb
cli
jg
inc
lret
push
ds
cld
sub
sqrtps
enter
dec
xlat
sub
or
jmp
pop
mov
out
les
adc
mov
mov
jmp
cli
push
lods
xchg
pop
subb
inc
dec
dec
mov
pinsrw
loopne
pop
sarb
aas
adc
aaa
test
movsb
mov
pop
cmpsl
mov
stc
ret
cmp
push
lock
pop
scas
or
mov
mov
mov
sub
hlt
out
pop
imul
add
pop
pushf
jb
daa
addb
push
mov
dec
cmp
mov
loopne
inc
xor
sbb
outsb
jmp
rol
push
lds
cmp
push
fwait
add
fiadds
lods
repnz
push
call
sub
sahf
inc
clc
ret
outsb
push
xchg
ret
dec
xor
into
paddusb
mov
and
cmp
dec
mov
test
dec
movsl
enter
insb
adc
call
sbb
jne
pop
mov
cmpl
xor
pop
lods
cmp
xchg
sbb
test
pop
or
mov
rcrl
jp
cltd
and
outsl
aaa
or
adc
or
push
push
jle
pop
mov
fimull
gs
ror
movsl
ds
mov
ss
or
add
jnp
imul
jbe
iret
jl
sarb
cmp
xchg
cltd
push
lea
dec
xchg
cmc
mull
aas
mov
bound
xchg
std
push
lcall
sbb
enter
clc
lea
aaa
scas
mov
insl
mov
mov
mov
dec
lods
mov
inc
sub
or
cmp
xor
cmp
xchg
and
das
mov
cmp
pop
and
inc
or
ja
lret
rcrb
cltd
test
imul
dec
inc
test
mov
cmp
cmp
fistl
xor
aam
fs
lret
or
in
cmp
xchg
stos
enter
sub
mov
cmp
add
pop
fimuls
cmpsb
addr16
add
xchg
and
xorl
pop
rorl
or
je
sub
push
out
cmp
and
es
jecxz
cs
clc
sub
mov
outsb
xchg
arpl
test
or
dec
mov
lods
popl
cltd
or
ja
dec
sbb
mov
and
xor
sub
jns
cmp
dec
push
mov
or
fidivrs
insl
jle
movsl
xchg
jp
push
daa
push
in
mov
daa
dec
cmpsb
insb
nop
cmp
pop
scas
xchg
fsubrs
pop
push
in
push
jb
cmp
sub
push
jg
adcl
mov
scas
push
popa
test
out
cmp
in
mov
pop
orb
and
xor
dec
mov
and
data16
in
lods
xchg
inc
into
pop
push
dec
pop
je
mov
int
push
jne
or
imul
ds
mov
and
add
shll
pop
dec
pusha
dec
pop
rcl
insb
add
into
sbbl
mov
pop
dec
shrl
es
in
add
mov
fbld
iret
shlb
push
pop
test
pop
cmpsl
loopne
repz
mov
cs
xchg
test
add
clc
rclb
scas
insl
mov
test
not
pop
dec
pop
pop
int3
mov
pop
pop
test
popf
xor
xchg
repz
scas
xchg
cwtl
push
das
inc
pushf
jno
push
scas
and
jg
push
mov
mov
mov
and
dec
popa
imul
xchg
mov
movaps
in
xlat
jg
rep
and
lea
dec
mulb
jmp
in
cmpsl
pop
inc
movsb
inc
inc
xchg
mov
dec
xor
ret
xor
mov
or
sbb
jbe
dec
or
test
push
sub
stc
mov
push
and
or
loop
push
aad
mov
mov
loopne
inc
and
jle
jg
jg
jns
mov
mov
les
cmp
ja
mov
pop
stos
mov
dec
push
pop
ds
adc
pop
add
push
adc
in
adc
pusha
insl
movsl
pop
dec
cmpsb
or
lcall
mov
ljmp
push
int
cmpsl
inc
cmp
je
notb
sbbl
lahf
fs
xchg
pop
and
lods
test
lock
push
fcmove
inc
push
int
repz
push
cmpsb
sbb
jns
fs
xor
es
inc
rcrl
sub
loopne
sub
mov
xor
ja
cmp
data16
push
adc
or
xlat
stos
inc
push
sbb
cwtl
shll
aam
cmp
mov
cltd
aad
pop
jecxz
pop
mov
jp
push
mov
insl
call
rcrb
inc
pop
shll
push
pcmpgtb
rorb
push
clc
xor
aad
movsl
dec
inc
push
push
jge
int3
cmpsb
and
push
sub
sbb
adc
mov
and
ljmp
dec
mov
ja
sub
or
mov
lea
outsl
in
mov
push
js
mov
test
dec
lods
out
in
xchg
xchg
iret
repz
imulb
pop
cmp
clc
imul
jae
nop
lock
rcrl
enter
push
int3
push
int3
cmp
add
or
stc
sub
arpl
insl
loop
fcompl
cli
sbb
test
fadds
push
jmp
in
xor
jle
fs
sbbb
or
push
rorl
mov
nop
or
mov
gs
fsubs
add
dec
and
daa
adcb
int3
adc
loope
mov
js
sub
jo
mov
sub
jmp
mov
hlt
xor
fcomps
mov
push
cmovae
or
sub
je
mov
push
pavgw
fsts
dec
lret
das
push
jp
popa
or
das
jo
sbbb
pop
imul
inc
and
pop
testb
jne
sub
dec
pop
jmp
lods
sbb
es
or
mov
xor
ja
dec
mov
nop
int
inc
cmp
hlt
mov
mov
lea
sub
and
sub
inc
push
cli
sbb
and
mov
aam
and
sbb
sub
mov
adc
lret
mov
rolb
pop
popf
add
iret
les
sub
pusha
stos
xor
xor
cmpsb
mov
out
push
mov
jbe
pop
sbb
or
js
cmc
cmpsl
mov
push
xchg
mov
inc
movsb
jbe
adc
out
repz
xchg
push
xchg
xchg
jne
mov
out
sub
out
or
sarl
cmp
push
pop
push
mov
mov
cmp
sbb
xor
out
inc
xchg
roll
incb
xor
mov
out
inc
mov
xor
jl
pusha
pop
mov
inc
into
pop
stc
cmpsb
adc
cmp
fildll
sbb
mov
pushl
bound
adc
js
mov
popa
xorl
lret
lahf
aas
lret
scas
sbb
outsl
push
in
cmp
fwait
lods
jmp
push
stos
mov
mov
divb
jle
lcall
daa
mov
fadds
adc
adc
imul
mov
sbb
xchg
lods
cmp
lahf
jl
pop
xchg
xchg
out
push
pop
stc
push
cmp
lods
out
fisubrl
jp
pop
push
sbb
or
xor
mov
pop
lock
xor
aas
mov
inc
or
pop
movsl
out
jg
std
fistps
out
sbb
cmpl
icebp
adc
lret
mov
cmp
cmp
xchg
mov
xorl
ss
inc
and
lds
lods
int
aaa
xchg
dec
jb
ficomps
xchg
sarb
movsl
mov
dec
push
add
sbb
lock
adc
into
sub
arpl
cmp
dec
dec
cs
cmp
xchg
sub
lahf
sbb
mov
cmpsb
cmp
pop
ret
push
pushf
push
repnz
cmp
jecxz
pop
insb
inc
addl
add
adc
into
adc
push
in
dec
imul
std
push
pop
pushf
lods
xchg
mov
sbb
icebp
dec
test
mov
and
mov
dec
fsubrl
pop
mov
call
test
mov
dec
jge
xchg
sti
lret
nop
lret
lahf
mov
cmp
es
cmpsl
xor
test
mov
or
rol
dec
ljmp
enter
pop
jb
dec
outsb
or
fwait
sub
mov
inc
or
mov
sub
test
fcomp
dec
mov
cmc
and
adc
cld
lds
stos
int
push
sbbb
cli
or
out
mov
mov
mov
lock
cld
and
insl
xor
scas
sbb
cmp
mov
call
mov
jecxz
mov
int
daa
adc
loop
cmp
dec
or
jg
fimull
mov
fistpll
and
popf
add
mov
hlt
sbb
sub
add
push
fldt
clc
nop
xchg
frstor
daa
loope
stc
and
sub
jns
xchg
mov
sub
test
iret
mov
mov
aaa
adc
and
adc
movsl
xor
fidivrl
pop
clc
pop
xchg
shlb
jno
mov
add
inc
push
popa
loopne
loope
lock
scas
cmp
lret
add
js
push
loopne
shll
idivb
aaa
mov
and
adc
push
add
sbb
loop
cmpl
jnp
rcl
scas
mov
sub
into
jne
lds
imul
xchg
or
cmp
adc
dec
add
xchg
jno
cmp
ds
jecxz
icebp
shl
iret
xchg
shlb
dec
shl
xlat
mov
fsubr
or
add
ja
pop
into
mov
outsb
push
adc
gs
mov
pop
mov
xchg
pusha
cld
inc
jne
addl
sub
shl
xchg
iret
mov
push
jg
jno
ret
push
xor
xor
mov
stc
xchg
loopne
dec
iret
mov
js
xor
loopne
aaa
pop
sbb
leave
adc
lds
loope
mov
cmpsb
clc
and
cmovl
sbb
mov
je
cmp
push
das
out
fdivrs
shlb
xchg
and
inc
mov
xchg
dec
mov
mov
mov
push
data16
lock
test
lods
pop
mov
movsb
mov
mov
mov
imul
or
jae
sti
stos
test
inc
push
or
mov
in
adc
xchg
fsubl
iret
inc
in
fcmovb
push
jo
shlb
icebp
jle
push
sarl
add
lods
pop
sbb
jb
gs
mov
push
and
lock
sarl
mov
sbb
sub
mov
fadds
stc
fwait
mov
inc
popa
jno
sub
adc
sbb
out
xchg
pop
hlt
or
adc
aam
in
xor
push
or
xchg
mov
stos
jg
rclb
imul
lock
sbb
sbb
cld
cmp
popf
pop
sbbl
mov
inc
enter
ja
int
and
mov
dec
lock
clc
aas
cmp
inc
aaa
jl
cmc
imul
push
test
mov
pop
mov
pop
cmp
ds
dec
xor
dec
hlt
shll
push
repz
fidivs
mov
adc
mov
push
adc
pop
aas
les
adc
rolb
int3
dec
dec
adc
inc
jbe
xlat
pop
adc
repz
or
fistpl
dec
jg
push
adc
cld
mov
cmp
jne
cwtl
out
pop
adc
pop
add
imul
repnz
pop
out
out
push
popf
in
push
scas
ffree
pop
cmp
pop
ja
fdivs
add
pushf
cmpsb
mov
test
pop
push
imul
sbb
cmp
and
iret
hlt
movsb
outsl
mov
dec
je
mov
sbb
fstpt
push
sub
pop
ficomps
sub
je
mov
or
pop
lahf
jo
mov
out
jp
clc
push
call
cmpsb
push
add
lahf
stc
add
into
mov
enter
xchg
add
mov
unpckhps
push
jmp
orl
push
call
repnz
daa
and
adc
data16
lret
hlt
xor
push
in
fs
mov
repnz
jb
sti
jnp
movsl
aaa
lret
cmp
pop
dec
in
test
mov
mov
mov
jg,pt
xchg
mov
jl
or
xchg
xchg
enter
push
jl
mov
gs
adc
ja
push
and
dec
andl
mov
leave
xor
xchg
sahf
jge
push
lret
shl
xchg
mov
pop
out
jle
adc
add
inc
xor
add
and
mov
inc
push
test
pop
mov
pop
mov
stos
bound
nop
pop
mov
jae
lods
sub
push
adc
flds
dec
jp
fildl
pop
jbe
aad
cmp
add
ljmp
scas
popf
movsb
daa
daa
leave
cmc
add
jl
leave
adc
adc
add
mov
dec
jo
or
jae
adc
mov
das
xor
lock
incl
mov
int
ret
or
or
add
mov
sbbl
mov
inc
negb
xor
inc
rcr
push
jns
inc
or
cwtl
sbb
sub
push
das
pusha
and
fwait
adc
popf
or
inc
insl
or
repnz
test
rcr
dec
cmp
repz
ljmp
jns
daa
dec
inc
aas
loope
xchg
daa
hlt
das
jp
ffree
inc
jmp
mov
inc
mov
pop
mov
or
loopne
stc
jg
push
and
add
cmp
xlat
mov
call
xchg
lret
popf
out
sub
push
iret
in
fcoms
and
cmp
outsl
push
add
mov
js
and
xchg
cwtl
popf
mov
aas
and
fldcw
mov
aam
test
ds
test
mov
mov
rorb
and
lock
addr16
movsl
in
sub
test
sarl
fwait
mov
negb
outsb
xchg
mov
orb
cmpsb
adc
xor
jo
xorb
in
arpl
js
inc
mov
inc
stc
lea
cwtl
xchg
lods
push
and
mov
clc
clc
push
test
ret
and
xor
xchg
xchg
cs
sub
cs
xchg
adc
bound
or
out
xchg
mov
and
icebp
adc
repnz
in
xchg
sbb
xchg
out
pop
cltd
popa
jg
lods
pop
or
cltd
pop
cmp
or
dec
pop
lock
lahf
aas
imul
inc
shlb
cmc
ret
mov
leave
mov
dec
orl
push
nop
aam
mov
push
cmc
mov
loop
out
fistl
add
jl
adc
cmpl
pop
cli
pop
in
in
negl
dec
cld
add
or
adc
fiaddl
iret
and
call
push
andl
cmp
add
sub
xchg
mov
decb
jns
xlat
fistpl
xor
shr
dec
xchg
sti
rcll
add
daa
addl
adc
xor
repz
cmp
mov
imul
adc
loope
cmc
mov
inc
cmpsb
dec
adc
sub
sub
xor
fcmovnbe
or
push
lret
sub
mov
sbb
aad
inc
lock
loope
lahf
stc
pop
inc
jae
push
pushf
mov
in
pop
fldl
cmpsl
fisttpl
mov
jp
dec
loopne
mov
pop
fisubl
sbb
mov
adc
cld
aaa
xchg
dec
mov
sbb
sub
leave
icebp
arpl
pop
add
mov
ret
push
push
jg
aad
jnp
and
mov
mov
fcoml
jo
add
imulb
pushf
fidivrl
gs
test
int
jmp
das
xchg
fmuls
enter
in
je
arpl
and
pop
push
arpl
mov
stc
int3
repz
jns
in
fcoml
rorl
aam
dec
into
xchg
mov
test
push
xchg
sbb
das
call
ror
mov
lock
out
in
sbb
outsb
imul
stos
mov
jne
cmp
mov
cltd
xor
xchg
repnz
dec
push
orl
stos
dec
jnp
mov
xchg
and
xchg
jbe
das
xchg
add
jb
or
and
dec
jle
fcmovb
es
mov
pop
daa
or
rolb
xchg
push
int3
lret
call
out
xchg
fimuls
cmp
neg
ret
cmpsb
pusha
dec
mov
or
adc
jmp
cmp
gs
int3
test
mov
mov
stos
notl
pop
sbb
pop
inc
or
shl
rclb
lods
add
fs
jl
jg
cmpsl
and
loopne
pop
cmp
out
bound
push
xchg
pop
mov
pusha
jno
daa
sbb
xchg
inc
iret
sbb
adc
out
pop
lds
add
shl
cmpxchg
sub
lods
mov
int
pop
mov
test
lds
movsl
add
jecxz
out
adc
loope
mov
dec
xor
ja
insb
scas
addr16
push
clc
mov
adc
push
mov
imul
jmp
cmpb
pop
scas
jg
aas
mov
or
lods
dec
arpl
cs
js
dec
call
jecxz
and
fnstenv
shr
fildl
push
mov
inc
nop
mov
adc
pushf
insl
fldl2e
add
cmp
xchg
pop
dec
push
popf
sahf
test
cwtl
aad
sahf
mov
mov
iret
adc
xchg
int
lahf
push
lret
imul
pusha
cmc
pop
jnp
xor
mov
jae
imulb
mov
cmovge
aad
sarb
mov
ror
cmpsl
jl
mov
lret
add
cwtl
aad
iret
iret
jbe
push
jp
pop
fimull
fsts
loop
cmp
pop
das
mov
sbb
mov
xor
pop
sahf
das
cmp
add
mov
lods
mov
lret
push
fildll
decb
push
add
aam
daa
cmp
test
scas
push
outsl
xchg
fimull
push
mov
daa
mov
std
xchg
gs
aas
xchg
dec
jo
push
daa
sub
dec
or
xchg
cmp
into
icebp
fbld
mov
or
mov
push
xor
sub
fldcw
mov
pop
shl
xchg
std
into
stos
shrl
loop
push
jl
and
cmp
jb
jmp
jns
loope
pop
call
mov
or
pop
int3
lds
push
lea
push
sbb
add
mov
mov
inc
or
test
jno
int
mov
xor
mov
and
pop
lahf
xchg
lods
cmp
xchg
and
inc
xor
jecxz
insl
out
clc
add
out
sub
jp
jnp
pop
das
jbe
mov
subb
ja
lahf
xor
clc
repz
pop
call
adc
scas
fstp
pop
cmpsb
pop
fucompp
stc
mov
sbb
iret
mov
sbb
add
push
adc
or
cwtl
adc
jbe
daa
sub
lahf
and
mov
adc
lods
mov
jnp
mov
scas
sarb
loop
je
or
repnz
inc
pop
shl
mov
jle
dec
mov
and
jbe
sub
xchg
sub
jns
mov
adc
shll
push
popa
cmp
jnp
ret
xchg
push
mov
push
std
or
inc
pop
gs
mov
inc
and
jbe
add
xor
sub
jge
sbb
or
cmp
xchg
daa
test
hlt
push
movsb
das
pop
adcb
sub
dec
mov
repz
movsl
inc
lahf
stos
cmc
ficoml
int3
sbbb
sarb
mov
jo
jp
addb
pop
nop
loop
lea
sub
cmp
cltd
cs
cwtl
popf
pop
test
sbb
pop
int3
jecxz
pop
outsb
adc
dec
rcrl
xor
ja
scas
imul
les
lahf
stos
rclb
push
pushf
inc
or
loop
jl
pusha
cmp
xchg
aas
pop
out
sub
fnstenv
mov
mov
and
mov
push
mov
cmp
stos
cld
xor
dec
fdivs
push
mov
dec
pop
icebp
or
sub
rcrl
into
ljmp
out
add
inc
aas
loop
jmp
or
ljmp
cmpsb
xor
cmp
ffreep
pop
bound
push
in
fs
mov
push
jg
cmpsl
repz
and
int3
sub
push
nop
mov
ret
xor
aam
sahf
mov
iret
lds
jge
loope
dec
in
xchg
cmp
outsl
push
ja
sub
call
push
in
inc
cmpsl
mov
lcall
cmp
push
cld
out
scas
or
mov
sbb
pop
movsl
out
xchg
mov
or
pop
mov
push
adc
les
adc
push
mov
xchg
pop
add
cli
mov
pusha
and
addr16
shlb
sti
jb
cmp
stos
sahf
or
and
xchg
push
and
xchg
jle
cs
adc
stos
and
sub
pop
subl
or
rol
cld
outsl
lret
pushf
out
arpl
mov
add
jl
mov
push
in
lods
mov
dec
arpl
rcrb
add
mov
sub
xchg
imul
cmp
ret
or
or
pop
sbb
int3
mov
popa
cmc
cmp
xor
xlat
add
add
pop
inc
insb
ja
mov
jmp
jb
outsb
in
adc
xor
shrl
pop
inc
push
or
jno
lea
orl
mov
xchg
mov
aas
inc
xchg
xchg
arpl
stos
in
cmpsb
cmc
jnp
cli
outsl
dec
jns
fisttps
push
sbb
dec
fiaddl
adc
xchg
inc
inc
dec
mov
mov
cs
cmc
lods
jp
xchg
adc
mov
dec
ret
movaps
test
xchg
lods
sbb
ss
in
lds
ds
cmpsl
push
push
es
xchg
out
pop
pushf
sbb
mov
add
fsubrs
inc
loop
fisubs
xor
imul
scas
add
jge
mov
cmp
rcl
add
movsl
pop
adc
pusha
dec
fucomp
mov
test
pop
mov
gs
movsl
out
push
jns
push
and
icebp
int
in
mov
rcrl
mov
xor
lds
sub
scas
or
dec
fcomi
sub
test
jns
xor
enter
jmp
sti
popf
clc
xchg
mov
mov
sbb
das
jle
rol
out
inc
call
mov
cli
adc
lret
adc
push
add
mull
je
push
dec
movsl
daa
push
jle,pt
pop
lods
es
fnstsw
push
cmpsb
pop
pop
inc
xor
notb
fucom
and
in
xchg
dec
mov
es
out
add
pop
pop
cmp
jne
mov
das
fcmovne
fwait
sbb
shl
fidivs
into
testl
sub
or
push
add
or
lods
add
jp
inc
add
inc
inc
push
jl
jmp
mov
or
int3
dec
shl
and
xor
ja
mov
dec
mov
stos
out
xor
sub
jo
mov
sbb
mov
loop
in
stos
mov
shlb
mov
repz
and
xchg
es
movsl
pop
ljmp
xchg
and
stos
movsb
dec
jne
adc
pushl
mov
push
lahf
ret
adc
imul
xor
clc
pop
sbb
and
hlt
inc
in
inc
mov
jl
call
push
jp
je
cmp
mov
mov
repnz
inc
into
jnp
xchg
add
sub
leave
movsl
nop
mov
adc
pop
mov
out
sbb
addb
adc
call
call
icebp
xor
arpl
pop
aaa
cmp
mov
push
xor
mov
gs
lock
fdivrs
pop
pop
sub
aad
jmp
andb
inc
out
lahf
in
push
stos
jl
xchg
int3
push
js
jecxz
cmp
jne
inc
jmp
or
stc
inc
cwtl
lods
xor
jae
dec
sbb
sub
loop
xchg
cmp
into
jmp
jmp
pop
xchg
bsf
loop
xor
jmp
or
scas
dec
jae
sbb
shrb
pop
es
add
mov
sarl
sub
xlat
arpl
mov
mov
daa
ljmp
sub
daa
arpl
sub
nop
lea
mov
rcl
jmp
pop
int
dec
aaa
out
punpcklwd
cs
mov
sub
inc
xor
gs
adc
jne
cmp
ss
cmp
jle
sbb
gs
insb
shll
add
cmp
jle
mul
inc
stos
pop
inc
xchg
push
or
sbb
and
xchg
push
xchg
cmp
jp
ljmp
ret
sbb
outsl
mov
popa
ffreep
scas
insb
clc
or
xchg
adc
out
sub
jb
lcall
mov
sbb
xchg
xor
fnstsw
cmp
push
fldenv
sub
addb
lods
outsl
les
sub
fistps
scas
sub
inc
inc
push
jns
add
adc
call
cmp
cmc
mov
xchg
and
sbb
out
in
ja
imul
out
loop
movsb
dec
inc
sub
xlat
adc
adc
jp,pn
out
and
cmp
mov
movsl
insl
ror
mov
bound
jae
in
xorb
or
add
sarb
xchg
pop
mov
push
fdivs
xchg
mov
push
mov
push
imulb
aaa
inc
addr16
das
inc
fcmove
stc
enter
xchg
cmp
inc
imul
pop
test
sti
push
mov
jecxz
cmc
mov
dec
daa
in
outsb
jp
adc
sub
sahf
subps
mov
fadds
movsb
dec
sbbl
outsb
iret
and
xor
outsl
arpl
xor
jne
or
aad
inc
shlb
adc
addr16
and
lahf
mov
jns
jbe
into
cmp
cmp
jbe
lret
pop
and
outsb
les
clc
jecxz
ffree
and
in
loop
mov
sbb
in
es
daa
and
add
pushf
and
cltd
repz
mov
ds
pushf
pop
push
shr
in
fisubrl
addr16
fimuls
fwait
push
scas
stc
push
sbb
inc
sub
xor
in
pop
jne
push
pusha
mov
stc
fiaddl
aaa
stos
insb
int3
lcall
sahf
sub
in
push
lock
nop
jecxz
ret
sub
fcomps
faddl
add
fwait
stos
shlb
iret
daa
mov
push
mov
mov
dec
add
gs
das
neg
pop
cwtl
repz
test
mov
xorl
inc
fistps
push
aas
mov
lahf
ret
xchg
in
ret
push
outsl
mov
icebp
int3
loop
push
cwtl
fwait
and
orb
hlt
sub
lgs
fildll
inc
sbb
lds
xchg
aas
aam
js
sbb
dec
gs
jg
daa
push
sbb
sahf
mov
cmpsl
xchg
test
out
je
out
arpl
pop
mov
scas
jne
mov
cmovne
loope
mov
and
or
imul
mov
mov
mov
ds
mov
xchg
mov
cltd
or
aas
es
fs
cwtl
out
dec
leave
sbb
jae
add
xchg
inc
dec
clc
sub
mov
xlat
inc
pop
jge
lahf
dec
cmp
dec
lds
int3
iret
xor
std
cmp
xchg
bound
les
dec
ret
lret
and
mov
test
sub
xlat
aas
popf
sbb
out
lret
in
push
and
lcall
movsb
test
test
mov
push
cmc
adc
ficoml
and
call
xchg
xchg
data16
jp
xlat
xchg
cmp
ja
xchg
adc
sub
dec
pusha
pop
gs
shlb
rol
movsb
into
sbb
mov
jg
jb
adc
dec
imul
gs
fcomps
lcallw
and
call
lcall
sti
cmp
ja
jne
stc
cmp
inc
out
jge
pop
or
mov
hlt
shrl
out
icebp
xchg
sub
int
add
negl
out
mov
push
xchg
lahf
pusha
push
cmp
cs
imul
cmp
xchg
stos
mov
push
pop
push
shrb
dec
and
mov
fiadds
loope
pop
hlt
fdivl
cmpsb
aas
cmp
push
lods
in
daa
mov
dec
mov
mov
fsubrp
sbb
push
sbb
jne
outsl
push
fisttps
daa
cmpsl
xchg
cmp
xchg
insl
jns
sbb
jnp
rep
mov
cmp
dec
inc
ljmp
jmp
std
fisubrs
mov
nop
xor
js
in
jo,pt
cwtl
mov
or
inc
lret
dec
out
lods
and
fwait
cli
test
pop
adc
pop
sub
mov
jp
cs
push
adc
pop
mov
fidivs
sub
pop
daa
popf
sub
add
stc
pop
mov
push
stc
push
push
test
sbb
test
sbb
mov
jb
sahf
icebp
xor
mov
mulb
jno
rclb
pop
or
mov
xchg
das
push
mov
cld
leave
xchg
shl
push
ja
fidivs
roll
lods
xchg
pop
mov
cmp
das
mov
mov
pop
mov
fisttps
dec
push
jge
imul
cmp
mov
lods
jp
cmp
or
add
repz
test
and
mov
sub
orl
into
inc
testb
push
push
aam
cmp
sub
mov
push
sbb
pushf
add
mov
lahf
xlat
mov
hlt
insl
clc
mov
add
nop
stos
loopne
es
or
jo
lock
ds
push
xchg
jne
pop
test
add
jmp
movsb
in
and
cmp
daa
mov
fisttpll
add
pop
xchg
sub
xchg
mov
mov
jne
and
in
outsb
jg
inc
insl
inc
repz
mov
sub
cmc
cmp
ret
in
mov
xlat
push
scas
mov
xchg
pop
pop
int3
cmc
push
jnp
imulb
pusha
pavgw
popf
mov
adc
insl
ret
lret
scas
lea
imul
mov
sub
enter
adc
and
cmp
pop
arpl
xor
mov
and
rol
lahf
das
jecxz
adc
add
shlb
add
inc
gs
dec
pushf
or
nop
or
add
shlb
popa
mulb
out
push
fisttpll
inc
jbe
les
out
sub
push
xorb
cli
xor
clc
fcompl
xchg
imul
add
lcall
cmpb
dec
inc
and
popf
gs
pop
fwait
mov
loopne
push
add
es
mov
jp
xchg
int3
jb
in
int
rorb
dec
clc
sub
xorb
jno
shlb
push
or
andb
cmp
sar
dec
insl
lods
hlt
scas
mov
gs
cld
iret
inc
negb
add
leave
lds
cmp
push
lret
test
push
adc
es
mov
mov
scas
dec
dec
cld
shrl
rolb
lahf
ja
sbb
lock
lods
fisubrs
fbld
sti
lock
test
xchg
mov
shlb
stos
js
sub
jne
out
xor
movsl
fmull
stos
rorl
jae
mov
add
sbb
inc
jp
aad
add
jecxz
inc
sti
ljmp
inc
sub
dec
in
lret
ja
sbb
xchg
mov
adc
call
iret
bound
sbb
xlat
imul
mov
jb
int3
or
sbb
fcompl
ficomps
mov
lds
in
xchg
or
cmp
rol
loopne
sub
mov
xorl
cmp
adc
loopne
sub
jb
mov
fiaddl
push
lret
ficoml
cs
cmp
stos
bound
xor
mov
and
mov
addr16
sarb
jns
je
mov
fcmovnu
mov
jnp
fsts
push
sbb
add
mov
add
ror
mov
jmp
cmp
subb
pop
sahf
adc
das
ret
add
cmpsb
mov
hlt
iret
aam
mov
add
adc
jno
fs
lahf
dec
dec
jp
cmp
std
add
and
cmp
xlat
rcr
pop
pop
jp
mov
aas
sbb
cmp
jmp
pop
push
rcrb
add
adc
pop
negb
imul
add
xchg
subl
pop
cltd
dec
jmp
push
repnz
add
xchg
mov
jae
cmp
push
addb
or
rorb
mov
insb
mov
add
shlb
fimull
mov
or
or
orb
cmpsb
pop
cmp
faddl
dec
xchg
mov
push
xchg
mov
mov
mov
push
cli
push
repnz
sbb
inc
pop
xchg
jne
dec
fcmove
fbld
loopne
data16
jmp
pop
jmp
pop
std
shl
add
enter
daa
iret
push
repz
icebp
push
lret
mov
orb
pop
cmp
shll
repz
cmp
push
adc
add
jecxz
loop
sahf
xchg
jae
ss
loope
pop
xchg
cli
jl
nop
cs
mov
mov
lret
inc
inc
stos
inc
scas
push
sbb
pushf
xor
sbb
call
and
sarl
rolb
push
add
scas
in
sbb
xchg
movsl
xadd
sbb
and
add
shl
imul
stc
dec
cmp
test
and
pop
mov
add
xor
ja
pushl
mov
add
inc
push
sbb
andb
sub
sub
int3
les
scas
mov
ret
imul
sbb
ja
out
cld
sub
fistpl
sbb
fs
test
adc
and
fisubl
addr16
add
fistl
push
lea
mov
add
hlt
sbb
dec
aad
pop
add
xchg
scas
cmp
push
mov
sub
pop
sub
lea
nop
loop
push
cltd
ret
cmc
xor
xchg
jbe
add
fistps
jp
out
stc
shll
sti
xchg
or
sub
cmpsb
shll
jo
daa
outsb
lods
in
leave
rorb
inc
pop
cli
test
xor
jne
push
arpl
mov
mov
lret
cltd
push
lods
adc
pop
lea
cld
cld
cltd
into
pop
xchg
xor
lods
aaa
fwait
clc
ja
test
hlt
sub
pop
imul
or
pop
icebp
dec
out
mov
movsb
cmc
addb
add
xchg
fmuls
sbb
sahf
aaa
mov
jmp
shr
sbbl
jne
lcall
pushf
inc
xchg
cmpsb
push
out
aad
lcall
jb
cmp
insb
xor
ljmp
sbb
lcall
scas
jmp
out
mov
push
lock
xchg
movsb
sbb
add
mov
sub
loopne
jge
add
stc
fsubl
mov
dec
pop
sarl
out
gs
shr
je
xchg
stos
ss
and
mov
pop
add
mov
pop
cs
jno
pop
push
mov
sbb
and
loop
jmp
jno
push
imul
and
sbb
imul
mov
push
fsubl
dec
sti
inc
cli
push
cmc
jb
leave
xchg
xlat
cmc
mov
lods
or
ret
add
xchg
es
jl
sub
push
inc
pop
inc
sub
adc
sub
lahf
push
jmp
inc
lds
xor
das
ficompl
xchg
test
fwait
scas
in
mov
movl
inc
pop
or
loop
mov
push
faddp
lcall
aaa
mov
cmp
sub
sbb
iret
mov
hlt
or
xor
bound
push
popa
push
xchg
pop
stos
mov
ds
adc
loopne
loopne
ja
mov
call
cwtl
sub
mov
shrl
xchg
xlat
push
mov
push
dec
xor
sti
cmp
stos
daa
push
lret
fisubrl
jb
xchg
xchg
sbb
adc
push
push
jne
pop
jp
mov
pusha
or
mov
imul
xor
cltd
inc
mov
sbb
push
push
sbbl
adc
push
mov
in
adc
adc
inc
mov
lret
jge
mull
ret
push
xor
std
andl
cs
pop
loop
mov
ljmp
test
mov
andl
adc
mov
cmc
fwait
mov
add
adc
loopne
mov
mov
xor
je
or
js
int3
ss
or
cmpsb
jle
rcll
jb
xchg
pop
rolb
test
aam
clc
or
aad
mov
inc
mov
cmovle
mov
lcall
stc
mov
les
jecxz
jle
mov
pop
jb
jns
inc
cli
fcmovb
aam
dec
dec
pusha
lock
pop
int3
fimuls
xor
pop
dec
xlat
sbb
cmp
movsl
inc
pushf
push
in
cmc
aaa
mov
and
insb
jg
pop
pop
or
adc
insb
pushf
xor
dec
fs
aaa
jmp
cmp
jg
je
mov
mov
xor
pop
mov
dec
js
lret
out
inc
jle
and
bound
int
dec
xor
dec
cmp
adc
cmpsl
cld
in
pop
add
int
adc
decb
fnsave
and
mov
pop
int
sub
cmp
cltd
ret
test
jl
mov
lcall
stos
movb
and
cld
and
movsb
mov
mov
xlat
out
inc
push
dec
mov
jns
outsb
mov
push
loop
aaa
sub
mov
add
inc
add
mov
push
pop
push
dec
mov
jge
movb
mov
and
and
dec
sbb
and
or
scas
cwtl
fldl
xchg
push
stc
cmp
faddl
push
lds
out
inc
push
jae
out
ret
or
andl
leave
popa
daa
mov
sbb
sbb
lock
fildll
adc
scas
pop
addb
and
mov
pop
or
lock
fisubrl
pop
xor
dec
dec
or
out
mov
lret
dec
lods
cli
outsl
push
lahf
or
xchg
aaa
pop
stos
repz
pop
mov
mov
loopne
rcrb
pop
popl
clc
loope
and
sub
dec
scas
jb
loopne
cmp
jns
pop
and
testb
add
clc
cmpsl
mov
repz
mov
stos
outsb
and
stos
sub
sub
and
mov
and
adc
and
xlat
mov
pop
dec
mov
cli
add
es
dec
ss
enter
jnp
stc
jb
lods
push
scas
iret
xchg
mov
sbb
jb
cltd
pop
jg
ret
ss
popf
push
call
sbb
cmp
out
int3
or
xchg
ljmp
cmp
cmc
test
das
leave
nop
dec
cmpsl
decb
repnz
lcall
xchg
sub
xor
test
stc
add
mov
aad
inc
jmp
adc
dec
mov
popf
xor
mov
cmp
cmp
ljmp
je
int
pop
icebp
rcrb
mov
jl
sub
mov
and
pop
inc
das
push
xor
jge
inc
mov
adc
daa
pushf
sti
xor
fnsave
cmp
nop
push
adc
jle
jnp
repz
push
lock
dec
add
ja
xchg
cmpsl
adc
jo
mov
xor
add
xchg
and
sbb
popf
jno
mov
es
in
mov
mov
repz
sbbb
leave
cmpsl
testl
into
dec
movl
popf
pop
push
inc
cmp
adc
daa
mov
aaa
xchg
pop
ficompl
imul
cs
gs
roll
pop
testl
popa
xor
jbe
lods
xor
aam
andb
inc
mov
mov
addb
mov
les
lret
jmp
ja
or
pop
std
sti
sub
lcall
hlt
and
inc
pop
ret
jns
leave
xchg
ja
inc
pop
divps
out
mov
and
out
test
sti
mov
filds
sbbb
fisttpl
pop
out
enter
cmp
add
sbb
sarb
aas
mov
xor
jne
push
xadd
cmpsb
sub
and
push
std
pop
or
popf
pop
xchg
and
dec
xor
jbe
xor
sbb
mov
or
leave
sti
pop
mov
inc
ret
out
cmpb
aad
push
subb
mov
aas
ds
gs
mov
xor
add
xchg
repnz
and
cmpsl
xchg
sub
jmp
jmp
cwtl
cli
or
mov
pop
rcrl
aad
jecxz
adc
pop
ds
fwait
push
jge
add
or
mov
scas
add
and
inc
insb
pop
add
jae
mov
push
fistpll
adc
mov
cmp
xchg
jnp
loope
mov
fstpl
dec
int3
bound
mov
adc
test
outsl
std
inc
les
xor
cmc
shlb
xchg
imul
das
shl
xor
idivb
or
sbb
add
dec
shll
sti
jecxz
sbb
dec
pop
std
push
outsb
adc
lret
into
xor
inc
xor
push
jmp
lds
aam
bound
push
push
into
and
test
add
data16
stc
push
sub
in
sbb
loop
inc
mov
stc
out
jae
add
sahf
sub
xchg
dec
mov
shufps
mov
clc
ljmp
sbb
jg
inc
mov
fbstp
xchg
jecxz
jmp
mov
icebp
sti
sub
mov
mov
inc
cmpsl
jno
scas
test
call
jb
imul
inc
xchg
dec
shl
push
pop
out
mov
mov
xchg
and
lahf
stos
jmp
loop
cmp
popl
decb
push
mov
lds
daa
jb
pop
icebp
rcrl
lds
inc
cwtl
outsl
jns
adc
leave
jp
sbb
imul
pop
xchg
adc
mov
mov
in
ss
add
dec
rorl
cmc
xchg
leave
mov
mov
fcmovnbe
sub
pop
jbe
push
clc
mov
dec
pop
jecxz
sub
lock
xor
push
arpl
cs
rcrb
mov
iret
movsl
nop
pop
enter
inc
adc
aaa
sbb
mov
insb
pusha
out
rsqrtps
add
sub
adc
lods
dec
mov
aas
inc
test
hlt
or
jle
mov
movsb
test
call
pmulhuw
and
out
xor
xchg
cmpsl
fistpll
fs
cld
pop
jmp
idiv
mov
mov
sbb
lds
mov
fistps
sub
outsb
lcall
add
pop
cmp
fisubl
cmpsl
mov
clc
and
cmp
scas
lock
shlb
dec
fdivp
in
pop
call
lret
add
adc
shr
mov
pop
mov
insl
gs
sub
les
jb
cmpsl
push
arpl
test
ret
setnp
mov
fcoms
push
jmp
mov
dec
ud0
push
je
lahf
cli
aad
and
insl
fstpt
mov
lods
add
lods
in
call
inc
negb
int3
jecxz
sbb
repz
jb
pop
test
imul
in
adc
cltd
movsb
cmp
xor
aas
add
cmp
xchg
addl
jmp
push
leave
xchg
sub
call
dec
jecxz
pop
or
cmp
pop
stos
xchg
add
or
scas
dec
movsb
negl
nop
rcrb
cmp
push
nop
mov
in
popf
push
sub
and
mov
jbe
lds
mov
jnp
nop
pop
stos
jns
insb
out
mov
mov
aas
icebp
imul
sahf
mov
xor
sahf
test
cmp
not
arpl
pop
mov
mov
addr16
jl
imul
pop
aaa
adc
xchg
fstl
inc
xchg
setae
sub
mov
imul
popf
lret
fwait
push
int
shr
cwtl
push
outsl
data16
jp
shrb
ret
call
pop
sbb
dec
in
lret
or
arpl
jle
in
and
cmp
or
jno
fsubrl
insl
dec
fildl
push
or
cli
nop
lock
jae
sub
sbb
mov
jg
test
fisubrs
mov
shl
popf
repnz
loope
loope
adc
push
das
mov
ljmp
jo
ja
aas
bound
ja
call
enter
jle
xlat
aad
push
dec
aad
jmp
dec
cld
dec
lds
cli
add
xchg
adc
bound
aaa
loopne
add
int
push
shll
xchg
jge
sub
rcll
sbb
sub
fsts
xchg
out
imul
sbb
cli
xlat
in
cmp
ret
pop
cmp
lret
jmp
jnp
push
ljmp
and
enter
ds
xor
mov
mov
mov
xor
sbb
fcoms
iret
or
add
test
push
sbb
sub
xchg
inc
scas
push
mov
out
xchg
jge
jae
dec
fcomps
sub
ja
dec
and
std
scas
outsl
cmp
xchg
hlt
loop
fwait
leave
decl
mov
in
adc
jle
mov
andl
mov
sub
fstpt
mov
icebp
enter
int3
cld
sahf
loope
jnp
je
hlt
push
mov
xor
data16
daa
inc
pop
mov
aad
lret
pop
scas
mov
in
movsl
aad
pop
xchg
cli
cs
fistps
sti
mov
mov
jbe
mov
mov
test
xchg
and
arpl
cmp
push
dec
popf
lods
sub
lods
dec
cmpl
mov
lea
ss
and
hlt
and
stos
pop
fadd
jne
scas
xor
out
call
lods
lret
mov
cs
mov
mov
cmp
sub
loop
sbb
and
push
cmp
ljmp
pop
xchg
mov
lock
orb
xor
push
int
icebp
cmp
bound
notl
add
or
sarb
stc
sbb
fbstp
or
jecxz
cmovl
pop
loope
add
xchg
imul
mulb
lods
adc
inc
scas
fldcw
mov
mov
pushf
sub
stos
scas
div
mov
cld
fisubrl
aad
aam
cld
rorl
mov
rorl
cmpsl
sub
push
push
test
icebp
cli
adcl
and
or
in
adc
xor
insl
int3
rcpps
cmp
fcmovnb
pop
mov
fiaddl
dec
mov
test
hlt
das
sbb
pop
std
cmpsl
or
psrad
push
fldt
imull
into
mov
xor
hlt
mov
pop
jb
cmp
and
cltd
pusha
sbb
pop
js
jns
sti
sbb
addr16
lret
pop
mov
nop
push
aad
pop
sub
mov
daa
rolb
and
or
enter
outsb
cmp
and
push
xor
xor
xchg
sbb
cmp
add
leave
mov
push
mov
imul
xchg
or
int3
mov
add
aaa
ljmp
cwtl
ficomps
sti
loope
cmp
sub
lahf
out
test
dec
push
inc
jg
jmp
hlt
mov
sahf
mov
pop
jbe
jl
pop
mov
sub
imul
js
stos
vfrczsd
xchg
mov
adc
mov
xor
in
mov
fldenv
cmp
out
sub
add
cmp
mov
xchg
imul
je
in
inc
loop
mov
inc
leave
icebp
adc
jb
iret
aaa
cltd
lock
push
aas
ja
int3
sub
inc
out
sub
push
mov
fdiv
xchg
notb
pop
es
jo
jo
enter
inc
cli
and
pop
inc
or
mov
pop
data16
jns
lock
adc
mov
mov
and
ss
stos
int
jecxz
pop
xor
test
inc
cmp
push
xor
ss
pop
lods
jl
cwtl
cmp
inc
jle
pop
cltd
ja
imul
cmc
push
std
dec
int3
pop
cmc
jb
movsl
in
inc
dec
sarb
dec
inc
call
stos
add
ret
fisubl
test
and
push
movsl
fiaddl
adc
sub
test
sbb
mov
ja
inc
mov
push
cwtl
push
dec
popa
insl
mov
cmp
jae
xor
cltd
out
movsl
bound
xlat
push
jno
stc
dec
push
cwtl
sbb
add
xchg
addr16
pusha
cli
mov
mov
or
jae
smsw
pop
mov
jecxz
insb
mov
scas
xor
call
jl
cwtl
mov
xor
fwait
mov
ds
dec
jno
fstpl
fsts
nop
mov
cmpsb
iret
addr16
cmp
fdivs
movsb
pop
insb
ja
inc
xchg
sub
std
test
inc
pop
shlb
adc
mov
aam
push
bound
sbb
loopne
cmpsl
iret
lahf
xchg
fwait
dec
loope
or
test
or
movsb
add
lcall
pop
jp
pop
sub
sahf
shrl
ret
inc
push
outsb
aaa
bound
fcmovnbe
lcall
add
sbb
in
pop
mov
mov
insl
add
sahf
xor
ja
jp
push
mov
mov
lcall
lcall
ja
xor
dec
inc
cwtl
xchg
cmp
push
xchg
sbb
sub
inc
aaa
fcompl
stos
ret
fcoms
or
sub
xor
pop
rcr
or
in
push
out
fisttpll
movl
cmp
aaa
dec
dec
in
pop
or
dec
mov
shrl
cmp
xor
sbb
pusha
jnp
sti
stos
jo
push
repz
mov
pop
sub
jae
mov
loope
pop
lret
andb
leave
sti
mov
daa
cmp
xor
xor
cmp
movsl
sarb
xchg
pusha
mov
jnp
push
fldt
fdivrs
sub
lret
cwtl
sbb
scas
cmp
xchg
sarl
imul
sub
adc
pop
sub
jae
adc
mov
or
mov
xchg
mov
loope
fcmovb
pmuludq
pop
jnp
xor
inc
icebp
and
xchg
push
dec
xor
pop
adc
push
js
int
push
sarl
scas
cltd
test
add
pop
stos
insl
xchg
sbb
dec
xlat
loope
xchg
aas
jp
xlat
in
xchg
cmp
xchg
test
xor
adc
rorb
test
mov
jl
sub
pop
sub
sbb
xchg
fcomi
xor
imul
mul
fists
push
jl
sbb
aaa
imul
push
mov
pcmpeqb
mov
sbb
mov
imul
mov
addr16
es
lods
popa
enter
mov
jne
cmp
ror
mov
iret
shll
pop
cs
ss
icebp
mov
iret
pop
mov
pop
add
sub
inc
pop
mov
add
movsb
icebp
inc
imul
sub
mov
xchg
push
xchg
mov
mov
addr16
sti
lahf
mov
mov
lock
mov
sub
outsb
nop
scas
pushf
mov
sbb
jge
or
sub
ret
out
and
cmpsb
pop
lea
fdivl
int3
jnp
cmpsl
addr16
mov
sub
hlt
test
inc
loopne
or
scas
cli
push
test
jne
pop
jp
fldt
subl
adc
adc
push
pop
inc
mov
fcompl
cwtl
jae
loopne
jbe
imul
test
cmc
mov
out
xchg
sbb
ja
adc
stos
hlt
aad
mov
xor
dec
mov
jnp
repnz
add
les
dec
xlat
sbb
mov
sbb
add
shrl
shr
xor
pop
hlt
loope
aad
push
lods
jo
addr16
bound
aaa
jae
dec
push
movsb
cmp
jae
jo
es
loope
mov
fsubs
xchg
rorl
xchg
mov
or
jbe
jle
inc
popf
es
pop
jle
lcall
orl
push
cmp
stc
dec
cmp
sub
sub
out
clc
sub
loope
movsl
mov
cmp
mov
into
mov
scas
mov
insb
sub
add
add
pop
repnz
mov
jns
dec
sub
lea
sub
in
fstl
fs
int
cmp
adc
adc
and
jne
sahf
test
pop
shrl
mov
ss
push
mov
xchg
xor
ljmp
mov
pop
adc
jmp
xor
lods
jno
fnstenv
inc
cmp
jge
sub
push
roll
sbb
in
jno
popa
add
adc
and
ja
xor
push
jecxz
das
jge
pop
or
or
mov
jle
mov
hlt
inc
lret
loope
stos
outsl
popf
pop
add
cmpsb
mov
push
pop
add
cwtl
and
fsincos
push
rcr
jmp
push
cmp
mov
loop
cmc
cld
add
mov
fstpl
push
in
sti
movsb
ljmp
cmp
popl
test
fbld
loopne
cli
incl
push
sti
adc
lods
dec
loop
push
in
cmp
addr16
mov
adc
shl
fidivrl
mov
add
push
bswap
sbb
jae
mov
icebp
mov
xchg
mov
add
loop
dec
fimull
test
stos
mov
jl
idivl
out
in
mov
mov
lret
sbb
dec
test
ss
cli
xchg
add
inc
fstl
imul
popa
mull
xor
aaa
push
adc
xor
rcr
ret
imul
push
mov
jbe
imul
pushf
fwait
or
mov
test
add
into
push
addr16
dec
inc
lahf
xor
xchg
push
and
adc
add
ljmp
cmp
and
mov
sub
aaa
in
lahf
push
fwait
xchg
jecxz
xchg
jge
and
and
mov
sahf
imul
mov
mov
jmp
lods
xchg
xchg
lds
sbb
pop
jge
addr16
mov
jmp
xlat
js
jle
sub
repnz
mov
adc
pop
add
dec
and
fsqrt
sub
pop
and
add
lahf
inc
call
xor
mov
test
fists
call
and
xchg
push
cs
dec
inc
daa
xchg
insl
lcall
jo
cmc
or
mov
or
out
test
lahf
aam
adc
jg
dec
inc
enter
jl
sbb
or
les
in
test
adc
das
test
xchg
jae
jo
scas
pop
fadds
inc
xchg
xchg
outsl
jae
inc
mov
jno
in
inc
ss
sub
or
jle
xlat
and
or
xor
mov
out
mov
inc
jmp
mov
test
adc
cltd
jb
daa
inc
dec
push
fs
jle
pop
movsb
xchg
mov
adc
leave
mov
pop
pushf
lahf
test
bound
push
adc
dec
icebp
xchg
test
pop
sbb
push
cmpsb
sub
testb
adc
pop
adc
push
dec
hlt
inc
mov
mov
stos
aam
mov
mov
sbb
cmp
test
arpl
xchg
popw
xchg
sub
fldt
adc
xchg
add
ret
xchg
test
dec
test
hlt
shrl
jb
lahf
sbb
addl
xchg
push
insl
loop
movsb
outsl
sbb
xchg
lock
aad
jp
mov
mov
fsubp
cmp
pop
fbld
push
push
sub
adc
sub
inc
cltd
mov
sub
addr16
xchg
fisttps
addr16
mov
xor
add
sbb
adc
jno
push
idivb
adc
movsb
in
pop
push
mov
fisttpl
dec
out
pushf
aas
mov
out
xor
popf
xchg
xorl
in
xor
xlat
insl
into
xchg
inc
ja
rclb
lock
int3
mov
mov
mov
cwtl
test
out
ds
mov
ja
xchg
mov
lcall
sti
xchg
dec
cmp
cmp
and
xchg
inc
andb
inc
pop
bound
fwait
push
arpl
in
mov
mov
push
es
cld
jg
mov
hlt
xor
imul
xchg
dec
int3
aam
mov
iret
or
push
nop
fdivrl
sbbl
inc
xchg
adc
std
lret
out
inc
adc
pop
mov
xchg
and
enter
xchg
repz
or
mov
sub
stc
or
or
loope
inc
sbb
mov
mov
cmpsb
sub
xchg
adc
test
jecxz
gs
xlat
cmpsb
shrl
xchg
push
cmp
mull
std
sub
shlb
shl
push
dec
js
and
inc
imul
mov
push
int
mov
lock
push
test
movl
cmp
sbb
dec
adc
mov
adc
pop
mov
mov
test
nop
lods
or
iret
pop
or
std
xchg
loopne
out
and
fldenv
add
cld
push
loopne
add
mov
push
pop
pop
mov
push
inc
jmp
add
push
cld
call
add
push
stc
add
mov
loop
enter
dec
xchg
jl
insl
push
aas
xchg
inc
cmp
lcall
divl
pop
in
push
adc
or
shrl
fldl
mov
lret
xchg
inc
cli
mov
inc
adc
int
test
jmp
subb
scas
test
jnp
aas
scas
sub
nop
pop
clc
fs
lods
sahf
push
cld
ja
mov
mov
rclb
adc
jnp
out
ja
pop
repz
dec
fcmovnu
mov
mov
call
mov
popa
cwtl
dec
rcrl
movsl
aaa
cltd
mov
mov
sbb
repnz
push
fidivrl
mov
dec
sarl
decb
insb
mov
fsubrl
lds
js
data16
cltd
sbbl
sbb
and
xor
jl
push
jo
pop
adc
and
insb
cmp
in
subl
clc
push
sub
xor
jns
ficompl
sub
jne
fsts
int3
jns
lret
dec
push
lcall
jb
in
into
adc
lods
sti
mov
sbbl
out
ret
xchg
xor
movsb
jg
addr16
mov
icebp
sahf
push
xchg
mov
addr16
rcr
insb
fdivrl
ds
cld
std
cwtl
ret
sbb
mov
std
daa
leave
pop
fcmovbe
testl
jo
fstpt
sbb
mov
test
jl
mov
outsl
sbb
xchg
arpl
outsl
and
ret
test
adc
loop
sub
push
mov
loope
or
in
pop
jmp
js
call
sar
imul
lahf
xchg
or
fildl
shl
cli
mov
or
filds
aaa
data16
mov
xchg
mov
mov
add
dec
xchg
roll
jp
and
mov
push
jne
and
mov
push
add
out
sbb
xchg
dec
and
xor
mov
pop
cli
enter
pop
mov
adc
ret
shlb
scas
outsb
or
ficomps
adc
sar
mov
movsl
fwait
and
mov
aad
jmp
call
movsl
fimull
jge
and
and
push
sti
lock
jae
test
fsts
and
js
lods
mov
inc
loopne
in
scas
cli
push
int
in
dec
sub
mov
call
mov
sbb
mov
js
js
rorl
sub
and
mov
out
cli
stos
fwait
xchg
dec
mov
pop
out
inc
leave
jbe
ret
mov
or
mov
xchg
mov
cmpsb
movsl
cmp
fstpl
mov
pop
mov
adc
sub
iret
lret
pop
pop
addr16
add
lcall
push
fdivr
mov
push
lret
or
push
es
or
add
xchg
mov
xchg
out
outsb
cmp
sti
and
add
push
scas
adc
out
in
sub
push
int
sub
rolb
dec
xor
dec
sahf
sahf
out
inc
orb
mov
mov
sarb
add
mov
cmp
out
scas
cmp
jp
insl
xchg
xlat
sub
std
xchg
fldcw
push
out
xchg
std
sub
mov
pushf
aas
jg
addr16
sbb
or
cmc
ljmp
mov
jnp
push
dec
jg
adc
jmp
push
std
jp
jae
ret
iret
insl
cltd
cwtl
insb
shr
push
into
lock
push
testl
data16
leave
jb
and
shl
dec
out
pop
inc
popa
popf
pop
icebp
outsl
sbb
sbb
mov
dec
add
pop
ljmp
mov
ljmp
push
jg
ss
jecxz
dec
jo
pop
stos
ret
int3
push
mov
mov
push
test
mov
dec
mov
dec
pop
call
add
dec
gs
adc
jae
shl
cltd
repnz
mov
out
dec
mulps
fimull
lret
sbb
icebp
sbb
xchg
mov
fdivs
in
leave
gs
or
and
cmp
lcall
loope
js
xchg
jns
pop
lcall
mov
loopne
push
imul
mov
shr
adc
pop
cmp
das
ss
mov
mov
ror
stc
shlb
xchg
or
popf
mov
pop
in
decb
andb
int3
enter
sahf
pop
daa
mov
nop
and
mov
pop
bound
mov
or
jmp
dec
popl
stos
jmp
xchg
lcall
fildl
imul
xor
js
sarb
cmpsl
add
sbb
lds
pop
jo
outsb
es
push
and
cld
and
jecxz
iret
fidivl
mov
cltd
dec
pshufw
ficompl
rorl
in
mov
sub
es
jle
mov
sub
out
arpl
or
sbb
ss
push
movsb
loop
aad
sub
push
mov
jg,pt
inc
loop
in
loop
mov
jne
mov
pop
dec
adc
or
push
push
shll
mov
push
cmp
pop
pop
sahf
or
and
inc
add
jbe
pop
dec
dec
inc
ja
rep
enter
fsubrs
or
bswap
mov
mov
jae
mov
aaa
push
or
or
out
sub
mov
adc
xor
lahf
insl
xchg
std
mov
ret
fnstsw
fldt
xorl
lods
jge
repnz
int3
repnz
sub
mov
cmp
shrb
dec
lods
and
push
or
fmul
inc
jecxz
fbstp
out
push
mov
adc
jno
imul
ret
int3
rcrb
sub
push
or
into
in
call
and
inc
xchg
sub
add
cmp
mov
adc
rcll
js
shl
and
xchg
sub
negb
in
jo
mov
xchg
jae
std
stos
mov
js
inc
sbb
adc
cmp
add
cmpb
icebp
mov
fnstenv
adcb
scas
and
push
xor
ffree
mov
push
mov
mov
mov
mov
pop
mov
std
inc
in
pop
adc
sarl
test
xchg
test
and
outsl
test
push
das
mov
in
mov
cmp
movsl
xchg
dec
iret
pusha
mov
add
and
sub
xchg
cmp
loopne
push
fcompl
add
jl
sbbb
and
stos
lcall
test
aaa
xchg
shll
bound
pop
mov
add
sbb
adc
mov
sub
addr16
jno
push
xchg
popa
push
dec
ja
test
test
lods
imul
add
mov
jo
cmp
jg
leave
mov
rorb
jecxz
sub
mov
rsm
jl
mov
ret
mov
clc
mov
dec
xor
mov
shl
and
xor
jbe
or
and
jo
add
xor
test
sbb
mov
orl
sub
sbb
clc
rcrl
jmp
inc
inc
popf
test
call
jbe
mov
and
lret
xchg
mov
mov
mov
dec
mov
dec
push
sbb
pop
xorb
dec
aaa
into
popa
jle
loopne
xchg
test
mov
aam
mov
int
pusha
test
mov
push
gs
push
cmp
inc
cli
push
out
cmc
in
xor
push
jnp
push
mov
add
clc
push
mov
xchg
stc
rorl
sti
sbb
pop
push
mov
mov
inc
popa
push
jae
push
in
les
into
jmp
cmp
icebp
push
pushf
inc
pop
sub
jp
lods
cli
and
jg
mov
loop
and
xor
jno
xchg
fstpt
aaa
mov
lods
pop
loopne
push
fs
js
xor
or
sahf
lret
ss
aaa
xchg
jmp
mov
push
xchg
popf
dec
sub
in
out
or
add
popf
push
add
inc
xor
or
or
jae
idivb
jmp
push
fdivl
xor
jnp
push
cmpsb
imul
stos
push
push
test
jmp
mov
sbb
in
adc
adc
aas
jmp
or
ss
sbb
je
loop
adc
jae
cs
mov
movsl
xchg
aad
loopne
jecxz
mov
into
ljmp
arpl
xor
sub
sbb
cs
jns
fisubrs
xor
popf
inc
jns
mov
pop
jo
pop
shrb
pop
or
mov
push
jnp
pop
mov
push
xor
stc
sub
pushf
les
in
push
or
mov
mov
pop
sub
enter
xlat
cmp
pop
inc
mov
push
push
pop
and
pop
movsb
add
cmp
mov
sub
lahf
xchg
aaa
bsf
pop
or
out
les
pop
shll
imul
imul
test
dec
push
addb
cli
or
test
xchg
imul
cltd
push
mov
pop
cmp
adc
dec
in
mov
jle
push
scas
jae
jge
sbb
or
or
icebp
and
enter
push
repz
in
dec
lcall
rcrl
notb
call
mov
or
mov
dec
scas
sub
adc
fstpt
insl
xchg
in
xchg
push
cli
jg
leave
lahf
shll
std
cli
or
adc
test
subb
adc
sub
adcl
xchg
cmp
rclb
repz
lea
dec
mov
pop
xor
or
addr16
lock
jle
xchg
fwait
cmp
in
xorl
sbb
cmpsl
add
push
bound
xchg
pop
loope
mov
imulb
cmp
cmp
test
in
and
push
rclb
push
jns
je
scas
pop
ret
lock
inc
add
into
fdivrl
xor
cmc
cwtl
es
pop
mov
mov
xor
pop
mov
inc
adc
xor
fcompl
add
sbb
cmp
imull
sti
repnz
in
pop
push
xor
dec
jns
in
clc
push
mov
push
inc
and
leave
cmp
adc
lock
jo
insl
cmp
jbe
imul
mov
inc
lcall
cmpsb
bound
je
push
les
mov
test
sbb
xchg
mov
or
jo
push
out
fnstenv
movl
ret
sbb
jne
fnstenv
in
ffree
and
popa
adc
inc
dec
and
inc
and
pushf
push
jecxz
imul
ftst
or
cwtl
shr
and
aad
mov
jge
mov
add
jg
and
movsl
xchg
pop
push
ja
add
cmp
fisubl
out
mov
in
mov
gs
sahf
ljmp
and
dec
std
das
push
lods
push
aas
cmp
cmp
sub
lods
pop
jg
mov
adc
aam
xor
les
lods
aad
ret
aad
xor
dec
jge
dec
and
push
sub
cmovae
or
daa
push
leave
xor
cltd
popa
daa
mov
addl
aad
ja
test
jae
dec
aam
pushf
sub
and
cmp
iret
xchg
or
jl
test
or
stos
je
pop
negb
pop
fwait
sbb
test
mov
arpl
cmp
cmp
ss
pop
outsl
dec
imul
imul
aad
rorl
pop
mov
cmpsl
aad
int
ret
xor
sub
pop
test
and
jp
pop
lods
and
mov
jnp
pop
lret
mov
cmp
push
out
jl
negl
cli
mov
cmc
dec
sbb
mov
pop
or
out
gs
cld
or
push
mov
push
mov
mov
mov
hlt
pop
mov
mov
xchg
cmp
mov
aaa
lret
dec
idivb
xlat
sbb
fiaddl
mov
sbb
in
mov
xor
lods
test
mov
daa
mov
inc
out
cs
testl
or
or
mov
jl
enter
rcll
lret
mov
pop
dec
adc
cmpl
pop
jns
cmp
pop
pop
mov
or
cmp
xchg
and
subb
sub
out
mov
sti
or
gs
jle
lret
iret
jno
add
xchg
xlat
enter
out
clc
mov
mov
add
push
aam
inc
push
mov
fwait
xchg
jl
lret
les
lcall
xchg
popf
sub
aas
imul
insl
xchg
or
into
lcall
rol
or
push
pop
pop
inc
mov
xchg
subb
ss
cmpsb
inc
insl
ss
fisttpl
jmp
mov
repnz
cvtps2pi
test
dec
jno
stc
int
sub
adc
test
pop
outsb
jp
ja
mov
stc
lcall
xor
pop
push
punpckhwd
mov
hlt
xor
inc
insl
div
jae
mov
inc
int3
sub
insb
lock
sbb
imul
mov
out
stos
pop
icebp
xor
call
jbe
add
sahf
pop
push
or
fldt
repnz
lcall
gs
dec
or
std
and
cmp
mov
subb
ds
stc
popf
daa
mov
lock
xorb
xchg
add
addl
popa
jae
mov
cmp
mov
jg
cmp
hlt
insb
fisubrs
sahf
cmpsl
rcrb
push
arpl
movsl
out
pop
dec
mov
jle
out
push
iret
in
xchg
dec
je
aas
arpl
push
add
rol
push
imul
fistpll
mov
lds
mov
xchg
ljmp
mov
sub
add
xorl
mov
adc
ss
push
nop
mov
int
xor
mov
pop
lcall
call
push
nop
mov
inc
jle
repnz
fstpl
ljmp
mov
push
and
pushf
mov
clc
pop
push
sub
mov
xchg
dec
cmp
aaa
cmpsl
dec
sbb
stc
dec
sahf
mov
push
push
push
shrl
loop
scas
mov
cmp
mov
cmp
fcompl
mov
lock
pop
pop
sbb
inc
pop
add
jle
pushf
mov
or
xchg
ret
mov
in
in
adc
or
xor
push
and
lods
sub
stos
pushf
fldt
fidivs
or
mov
xchg
pop
jle
inc
out
rclb
cmp
dec
sbb
adc
jle
inc
add
stos
sub
imul
push
cmp
inc
cli
fldz
cmpsb
in
xchg
xor
mov
xchg
add
scas
imul
push
push
pop
jb
ret
sbb
in
jmp
pop
lds
mov
decb
mov
pop
clc
sbb
or
call
inc
pusha
js
mov
shll
test
imul
test
je
lret
mov
pop
jle
rolb
enter
mov
in
pushf
xchg
inc
cmp
test
mov
insl
xor
jge
xor
push
or
lea
xor
es
test
cld
or
sbb
inc
push
shlb
icebp
setne
mov
imul
les
aam
pop
out
mov
lods
lahf
aas
daa
cmp
aad
cwtl
push
xchg
je
fwait
es
jecxz
dec
mov
das
mov
fidivs
jbe
data16
cmp
stc
mov
or
sub
push
fdivl
or
sbb
int3
xchg
mov
xchg
or
xor
cmp
stc
lock
push
sbb
int
jl
mov
out
jbe
mov
int3
inc
or
les
add
lcall
sub
mov
jne
fdiv
nop
xor
push
xchg
in
ljmp
out
or
adc
rcrl
lock
add
pop
lods
adc
aas
xchg
mov
mov
ja
dec
xchg
pushf
jne
in
test
dec
and
sub
xor
ljmp
flds
xor
mov
and
scas
adc
mov
cmp
or
sbb
add
cli
mov
hlt
nop
xor
out
cli
out
lret
mov
shrl
dec
in
loop
mov
cltd
addb
push
inc
dec
push
rcrb
xor
nop
push
mov
dec
xchg
mov
sbbl
lock
add
sbb
mov
cmpsl
adc
cltd
cmp
push
jnp
mov
aaa
idiv
test
cmc
push
lcall
push
je
add
sub
insb
jno
addr16
xlat
ss
rolb
out
mov
lahf
call
fsubl
xor
pop
mov
mov
popf
cwtl
jle
pop
add
push
sbbl
in
fmul
sbb
cmc
fiadds
xchg
mov
xchg
movsb
or
in
int
insb
xlat
fdivs
xchg
into
lret
pop
cmp
lcall
mov
rcll
and
add
movsb
push
out
out
add
xor
fs
outsl
test
sti
fisubl
jge
aas
imul
into
pop
adc
cmp
dec
rorl
pop
sub
mov
xor
popa
adc
fldcw
adcl
das
fdivs
push
pop
jge
pusha
es
pop
jns
and
sti
insl
jns
sbb
frstor
mov
xchg
jmp
jle
push
lahf
push
pop
xchg
push
xchg
rcll
out
cmp
bound
add
test
or
push
insl
out
pop
or
out
inc
je
repz
jae
shl
sub
sbb
lock
cmpsb
inc
jp
push
jb
and
flds
xor
sbb
call
mov
push
ja
mov
je
sbb
arpl
arpl
mov
push
ds
in
call
mov
or
jne
sbb
adc
clc
mov
or
or
lea
push
pushf
fcmove
rol
nop
repz
dec
cld
gs
mov
and
cmpsb
inc
push
popa
cmp
push
jl
fsubrp
pop
sti
out
popf
lods
jno
dec
cmpsb
mov
and
insl
mov
mov
pop
test
push
pop
movswl
push
jo
daa
gs
jbe
test
pusha
jns
daa
pop
sub
sbb
ljmp
fsubp
fstpt
ficompl
repz
xchg
pop
loopne
mov
xchg
rolb
sub
cmp
fnclex
addr16
insl
jp
inc
cmp
lret
jge
sub
sbb
hlt
imul
repz
sbb
movl
sbb
imul
cmp
add
mov
sti
mulb
sub
les
jbe
dec
jne
fsubl
leave
push
xchg
xor
lds
faddl
push
pop
mov
pop
dec
dec
or
xor
scas
mov
lret
dec
inc
cli
mov
mov
daa
mov
mov
int
out
xchg
out
ljmp
jl
fbstp
pushf
cmp
pop
add
je
sub
testb
xlat
ss
push
arpl
mov
mov
jmp
push
mov
jae
xor
push
mov
fcmovbe
inc
scas
push
sub
in
mov
popl
push
pop
inc
in
pop
pop
ret
inc
call
pop
loop
cltd
jecxz
add
inc
sbb
fstpl
icebp
pop
mov
or
cltd
sbb
adc
xchg
scas
in
adc
lds
into
mov
push
mov
lods
mov
inc
jp
fdivl
sbb
les
push
lcall
rcl
clc
pop
daa
add
mov
xchg
ja
repnz
jle
sub
ficoms
jmp
std
out
decb
pop
xor
or
xchg
pop
enter
inc
andl
and
push
sub
fcoms
bound
push
enter
mov
lods
jnp
sarb
stc
mov
or
andb
scas
jecxz
pop
aad
adc
push
lea
sbb
cs
add
mov
pop
mov
sbb
insb
popa
int
bound
arpl
test
daa
test
ds
idivb
dec
xchg
mov
dec
fisubrs
dec
dec
rol
test
xlat
xor
in
ret
pop
inc
xchg
hlt
mov
mov
rdpmc
push
scas
sbb
lahf
aas
add
adc
jmp
mov
cmc
sub
rolb
outsl
je,pt
pop
pop
xorb
jb
popf
mov
ret
fnstenv
sub
jecxz
data16
jmp
mov
lods
push
fstl
ror
adc
aas
mov
pusha
hlt
jno
jp
ficoml
mov
lret
jbe
and
bound
insb
inc
jp
sbb
into
inc
pop
int3
lock
push
je
fdivrs
xor
jmp
jecxz
lcall
inc
mov
lods
xor
sub
sub
out
lods
ja
je
in
jle
sbb
jae
mov
cmp
adc
push
test
iret
push
pop
inc
push
push
cmpsl
cmp
xlat
mul
clc
push
add
pusha
mov
es
lods
jbe
inc
sbb
mov
pop
pop
aam
outsb
jg
iret
jge
test
jo
push
dec
mov
in
lods
leave
and
lods
int
cmpsl
xlat
out
xchg
push
pushf
inc
cmpb
jno
repz
insl
int3
or
imull
fcmovb
pop
lret
inc
ja
or
stc
nop
sbb
push
push
mov
adc
inc
ja
pop
imul
repnz
jbe
pop
sahf
pop
fidivrl
out
iret
and
rcrb
xchg
sbb
mov
push
out
or
sub
mov
cmp
outsl
add
xorl
xor
lret
aaa
sbb
in
cmovle
mov
enter
fistps
pop
leave
inc
loope
push
jl
je
jnp
in
cmp
add
jg
div
sub
iret
mov
push
push
mov
dec
mov
hlt
lods
cmpsl
adc
mov
sbb
loop
push
cltd
dec
mov
mov
addr16
dec
sti
xor
stos
shll
mov
jmp
pop
add
push
ret
add
cmp
inc
xchg
lret
inc
pushf
or
rorb
sub
fcmove
test
addr16
push
stos
sub
loopne
bound
mov
mov
sub
or
push
out
cli
mov
movl
mov
ror
scas
adcb
lea
mov
dec
xchg
push
mov
cmp
sti
push
and
xchg
fs
and
adc
xchg
sub
mov
mov
pusha
insl
xor
sub
jns
ja,pn
sub
enter
or
fildl
stos
xchg
or
dec
jle
jg
sbb
mov
dec
jno
xchg
mov
mov
jge
jbe
push
and
mov
dec
jne
jo
stos
jecxz
inc
pusha
hlt
shll
cmp
int3
imul
adc
notl
xchg
sub
imul
adc
xlat
cwtl
mov
fwait
cmovnp
daa
or
inc
out
movsw
int
and
mov
cltd
into
inc
inc
inc
xor
xchg
mov
ljmp
fbstp
not
ret
loopne
push
mov
lcall
sbb
shrb
out
dec
jb
stc
mov
out
ja
fidivrl
xchg
sbb
push
pushf
push
cmp
out
out
lods
fstps
movsb
xchg
outsl
imul
in
mul
scas
xor
push
push
push
cmp
dec
xchg
icebp
pop
push
push
ret
inc
mov
cld
inc
enter
dec
push
lods
rclb
lret
push
push
pop
daa
outsb
inc
loop
jmp
lea
flds
adc
push
in
xchg
bound
btc
pushl
lret
jne
shl
pushf
lret
inc
into
and
jne
mov
orb
cmp
and
mov
lds
dec
adcb
xor
add
push
lods
iret
aaa
adc
mov
mov
cmp
fs
movl
in
ret
daa
adc
mov
loope
pop
push
lahf
jne
mov
cmp
fisttpll
hlt
fmuls
loopne
call
and
pop
sub
cmpsb
aam
jmp
adc
in
cltd
and
push
mov
sti
sub
ret
je
adc
xchg
out
dec
out
mov
clc
addr16
adc
or
fldl
inc
imul
sub
push
xor
jg
adc
lods
shrb
test
repz
outsl
mov
cld
xchg
fcoml
ret
cs
mov
cmp
int
pop
jae
and
inc
subb
lods
xor
in
shll
dec
scas
push
mov
jmp
je
ljmp
adc
adc
push
lret
jge
mov
cmp
scas
pop
cs
jl
scas
and
adc
imul
aas
imul
scas
push
adc
jbe
aad
lcall
adc
dec
xchg
xchg
mov
add
je
inc
ret
sub
xor
sub
test
fbstp
mov
sub
test
repz
ret
fimuls
sub
or
clc
xor
jecxz
js
mov
xchg
push
mov
lahf
inc
pop
mov
inc
sbb
adc
aas
pop
sub
jnp
xchg
notl
jle
add
shr
aad
jns
jmp
idiv
ror
fs
cmp
mov
xor
pop
push
out
xor
in
sarl
push
ss
cmp
cmc
movsb
jmp
and
xor
scas
shr
les
mov
insb
lret
pushf
add
bound
xchg
xor
sahf
xlat
scas
jle
xchg
loope
mov
sub
out
and
cwtl
into
das
sbb
inc
mov
or
jg
ficoms
push
and
stos
add
data16
xor
daa
insb
call
mov
xchg
pop
insl
jne
mov
stc
ds
add
push
icebp
mov
mov
sahf
dec
mov
mov
add
xor
iret
int
cmc
xor
add
add
dec
or
push
pop
xchg
lods
jecxz
mov
mov
rcl
enter
or
fwait
inc
add
lret
add
fucom
or
stos
mov
cmp
bound
cmp
jmp
xor
outsb
or
jle
popf
aad
mov
or
in
mov
jecxz
lods
daa
jnp
xlat
or
or
stos
ret
cmp
shr
call
out
cmp
xlat
pop
addr16
movsb
dec
mov
movsl
adc
jl,pn
fsubs
loop
iret
cltd
or
cmpsl
aam
xor
je
xor
ficomps
sbb
adc
cltd
mov
imul
aam
loopne
xor
xchg
xor
push
and
add
es
adc
daa
in
push
add
xor
adc
push
mov
sti
dec
ss
mov
sub
test
cmp
cmp
in
and
lods
jns
rcrl
xchg
xchg
cmp
fsubrl
mov
mov
cwtl
xchg
pop
push
clc
pop
negl
sub
imul
jno
mov
jae
shlb
xor
js
out
movsb
cmp
mov
mov
sbb
aas
xchg
call
push
int
push
repnz
mov
dec
sub
adc
cli
outsb
mov
inc
xchg
mov
cmpl
inc
stos
or
sbb
ja,pn
or
sahf
and
aam
add
sbb
in
adc
xchg
sarl
dec
inc
xchg
and
sub
aas
hlt
or
rolb
dec
sti
jg
pop
frstor
fildll
cmp
push
pop
xlat
sahf
and
sahf
inc
push
les
testb
inc
test
pop
lock
pop
ds
and
aam
nop
fnsave
rcrb
enter
jo
lds
shlb
movsl
cmp
cmpb
jecxz
rorl
add
add
stos
inc
in
js
adc
add
jp
add
addr16
aam
lods
mov
leave
push
divl
add
in
mov
pop
hlt
jle
outsb
pop
cmp
add
add
mov
xor
xor
bound
mov
mov
imul
fs
fistpl
clc
shl
mov
outsb
dec
shll
adc
xor
clc
addl
mov
jle
les
loop
dec
jo
arpl
add
imul
jg
pop
lret
and
mov
sbb
dec
cltd
jle
dec
inc
mov
das
test
mov
sub
popa
arpl
inc
call
clc
rcl
or
call
push
je
divb
into
call
add
fstpt
lock
lds
adc
or
inc
addr16
xchg
iret
sbb
xchg
and
xchg
pushf
adc
push
daa
cmp
xchg
test
adc
xorl
and
and
jo
push
mov
inc
jns
scas
mov
adc
mov
xor
imul
or
sbb
add
in
vpmuludq
inc
and
imul
xor
jl
push
or
into
addr16
pop
xchg
leave
jb
add
sub
dec
cmp
push
jnp
insb
lret
mov
iret
dec
int
sbb
jae
orl
in
aam
pop
and
cmp
mov
fcoms
test
dec
sbb
cmpsl
xor
gs
add
cmp
insb
jmp
pop
add
movsl
arpl
ds
into
add
jne
mov
mov
fwait
or
outsb
cmpl
stos
bound
cld
dec
lcall
lahf
xchg
cltd
in
cmp
shrl
clc
shl
hlt
push
in
les
xor
adc
lahf
pop
pop
and
push
cld
fs
mov
dec
mov
pop
jecxz
cmpsl
push
xor
sub
xchg
add
or
cmpsb
popa
push
sbb
out
push
hlt
ret
cld
cmc
shlb
xchg
xchg
sub
jecxz
ret
xor
mov
adc
fs
shlb
scas
jge
stos
inc
mov
ljmp
and
pop
int3
or
out
adc
add
popa
add
dec
jb
pop
inc
movsb
fbld
insl
cmpsb
jbe
sub
xchg
mov
pusha
int
fs
cld
sbb
sub
mov
xchg
push
ffree
push
sub
pushf
jno
cmp
lods
adc
jne
xchg
lret
mov
adc
mov
sarl
adc
ss
and
testl
cwtl
outsl
inc
fistl
ss
cld
lret
or
insb
hlt
inc
leave
mov
repnz
pop
push
mov
xor
xchg
rorb
jo
and
in
inc
movsl
loope
popf
xlat
mov
sbb
fbstp
sbb
jno
lret
sub
lods
dec
xchg
stos
lea
popf
hlt
shlb
rorl
lods
in
sbb
roll
xchg
ror
mov
inc
push
add
idivl
or
cmp
dec
mov
xor
arpl
xor
bound
test
cmpsb
imul
popf
xor
idivl
paddb
int3
or
mov
faddl
stc
sbb
sahf
lcall
in
int
pop
inc
ret
idiv
mov
or
lret
and
and
push
out
inc
imul
fldenv
imul
sub
ret
lea
mov
dec
fwait
outsb
pop
out
mov
cmp
cmp
addr16
out
mov
aas
mov
dec
push
repz
fisubs
mov
and
or
outsb
xor
shlb
cmpsb
rcrb
jl
movsl
sarl
ljmp
mov
sub
mov
shrb
sti
adc
test
cmpsb
enter
or
add
pushf
imul
push
lea
push
bt
data16
push
das
push
cmc
mov
jp
test
adc
in
loope
jo
mov
and
ror
mov
clc
mov
cs
sub
pop
add
cmpsb
dec
xor
xor
test
sbb
jb
ljmp
scas
jno
mov
ret
sbb
ret
loope
sub
addr16
jae
cmp
mov
push
fistpll
dec
xchg
inc
jb
jmp
add
sbb
pop
test
add
rcrl
ljmp
stos
inc
xchg
std
inc
inc
xchg
dec
scas
lock
or
insb
pop
pop
dec
or
daa
mov
movsl
xor
fnstcw
pop
clc
sbb
adc
mov
sub
and
jnp
adc
test
leave
nop
outsl
pop
insb
in
mov
int3
fucomip
push
call
or
pop
out
ret
sti
pop
cmpb
lods
insl
push
jbe
clc
arpl
xchg
stc
mov
lahf
push
jp
jg
xchg
movsb
mov
xor
insl
das
dec
repnz
mov
xor
arpl
or
les
hlt
push
es
popa
popl
push
insl
loopne
xor
mov
xchg
and
sub
shlb
sub
popa
fildll
cmp
adc
iret
cltd
int
mov
jbe
fcomi
xor
mov
shrb
lods
dec
mov
mov
adc
adc
nop
sbb
ficoms
das
insb
imul
loope
add
lds
ljmp
xchg
and
inc
decl
in
add
insb
mov
xlat
hlt
sub
je
and
jecxz
pop
ljmp
fsubrs
mov
pusha
mov
pop
xchg
outsl
push
iret
ss
fwait
xor
stos
mov
mov
jg
push
sub
dec
std
inc
pop
cmp
cli
mov
aas
mov
leave
xlat
pop
es
push
add
out
js
add
pusha
popf
mov
adc
addl
mov
mov
cmpsl
arpl
jle
test
pop
iret
mov
sahf
ficoml
scas
add
repnz
cltd
cwtl
mov
add
test
fisttps
mov
out
movsl
mov
push
mov
cld
repz
cltd
cmpsl
cmp
pop
jo
inc
add
xlat
popf
das
sub
jl
push
jno
inc
insl
pushw
and
pop
adcl
in
js
pusha
push
shlb
je
pop
sahf
sbbb
jecxz
ret
neg
mov
mov
and
xchg
mov
lret
dec
call
cwtl
xor
mov
push
sub
movb
sbb
mov
inc
xor
lret
mov
and
shr
jb
adc
mov
imul
xor
pop
mov
mov
adc
dec
repnz
cltd
cwtl
jnp
sti
inc
int
dec
mov
scas
js
mov
mov
js
mov
orl
fs
or
xor
jnp
add
inc
and
jg
shrl
in
mov
mov
pop
mov
fwait
in
fsubrl
aad
movsl
inc
xchg
aam
aad
add
mov
mov
sbbb
lods
jg
mov
fnstsw
pushf
int3
test
cltd
repnz
scas
lods
frstor
push
adc
and
les
add
xor
pop
inc
mov
inc
jnp
mov
jbe
sar
imul
xlat
add
sbb
sbb
pop
dec
adc
iret
cs
sar
jmp
cmp
xor
adc
test
sbb
ja
cltd
dec
js
mov
lret
pusha
jg
ja
icebp
cmc
loopne
into
sub
pop
pop
sahf
cltd
dec
js
lcall
movsl
fldl
pushf
inc
cmc
sub
cmpsb
sub
pop
jge
pusha
test
xchg
lcall
xchg
dec
push
jae
cmp
insb
lret
cmp
adc
push
int
dec
popf
mov
movsl
fisubrs
lcall
mov
push
fidivrs
arpl
mov
pop
into
mov
xor
xchg
leave
cmp
out
push
loope
or
sbb
ljmp
call
movsl
mov
arpl
xchg
sub
nop
pushf
repnz
mov
sbb
add
dec
cld
loope
push
data16
imul
pop
fisubrl
call
add
push
stc
sbb
mov
sarl
xchg
jo
push
hlt
mov
ja
push
xchg
push
or
popa
roll
popa
mov
xchg
adc
xlat
inc
or
je
aas
repnz
std
aas
xchg
outsl
mov
insb
shr
sbb
adc
mov
das
sub
je
push
aad
and
rcrb
shld
insb
pop
sar
jno
lds
push
std
cmp
test
outsb
inc
xor
pop
ja
dec
movsb
ret
sub
out
pop
xchg
pop
mov
aam
movsl
pop
dec
jns
add
add
pop
bound
aad
es
dec
or
mov
xor
jp
xchg
adc
ja
xchg
push
push
les
call
mov
popf
test
cld
push
pusha
jg
dec
dec
sti
daa
jae
in
nop
lret
mov
dec
cmp
inc
jle
ds
and
stc
int
pop
cmp
jb
xor
xlat
pop
mov
pop
jno
jb
roll
jno
push
dec
adc
push
inc
cmp
nop
dec
jg
inc
insb
inc
bnd
inc
popa
aad
popa
sbb
cmp
mov
pop
ret
leave
add
xchg
out
pop
gs
divb
mov
test
pop
add
fldl
iret
xchg
repz
mov
and
or
add
cmp
mov
or
fcmovb
push
repz
lods
rol
ror
xor
bound
adc
test
xor
aas
sub
lock
outsb
and
lcall
jae
pushl
clc
cmpsb
mov
rorb
add
xchg
test
xchg
rorl
orl
loop
ja
adc
xlat
jmp
mov
lds
push
ficoms
ljmp
push
aam
sbb
and
add
cmpsl
mov
insb
xchg
lret
mov
mov
data16
test
xchg
sub
push
clc
mov
push
stos
xchg
sti
loope
inc
jl
mov
pushf
adc
mov
jo
arpl
daa
lds
cltd
pop
mov
mov
mov
in
sbb
pop
sub
testb
leave
enter
pop
mov
pop
push
pop
add
pop
and
lock
push
cmp
inc
aas
xor
std
cs
push
js
mov
xchg
cmp
out
std
popf
bswap
std
arpl
sub
pushf
test
sub
inc
xchg
lods
dec
lret
sub
mov
dec
fwait
pop
sub
cmp
lahf
jp
inc
and
loope
push
in
inc
stos
bound
cmp
xchg
orb
aaa
sub
mov
and
sub
test
inc
imul
testb
popf
incb
and
testl
pop
and
mov
jg
or
xor
cmpsl
dec
xchg
push
mov
cli
lods
stos
push
cmp
or
and
sbb
sub
or
pop
sub
sarb
rcrl
out
inc
lret
push
inc
fs
nop
arpl
sbb
insb
mov
pop
mov
ss
out
insl
aad
data16
stos
fisubs
sub
inc
sbb
sbb
sarb
movsl
jle
push
lock
mov
rclb
cmp
and
lcall
push
adc
jae
cli
xor
cmpsb
push
dec
jbe
push
aaa
cmp
int3
dec
in
jg
inc
aas
cmp
pop
and
fbld
dec
lods
add
xor
in
sbb
test
repnz
mov
repnz
out
pop
dec
inc
das
sarb
pop
out
xchg
adc
int
jnp
push
in
or
sti
ds
dec
test
mov
jge
mov
repz
jb
addr16
mov
push
fcomip
mov
sbb
push
in
jg
dec
add
lea
incl
mov
fstpl
add
enter
inc
lds
outsl
fbld
sbb
xor
pop
lret
or
cmp
jo
push
sub
loopne
mov
div
enter
mov
push
lock
int
fidivrs
mov
dec
mov
xchg
inc
sbbb
add
mov
inc
in
pop
insl
notb
mov
mov
test
sti
and
mov
sbb
pop
sar
pop
sub
shl
pop
cltd
xlat
or
push
add
sub
xchg
pusha
sbb
das
xor
repz
mov
inc
mov
sbb
bound
bound
mov
out
lock
push
cmp
lock
xor
fcom
in
pop
aam
jle
or
pop
das
add
and
and
adcb
and
adc
xchg
ss
insb
fs
in
xchg
sbb
mov
ret
push
repnz
popl
addr16
ja
or
lods
inc
in
fwait
xchg
inc
mov
push
sbb
jo
ds
ret
mov
or
mov
xlat
loopne
sbb
sub
stc
test
outsl
shll
sbbb
mov
hlt
leave
jg
mov
enterw
jno
and
mov
cmp
adc
dec
sbb
aad
sbb
pop
das
aam
xorb
popa
cmpsb
out
add
aas
sub
dec
inc
fmuls
jo
pop
cwtl
lahf
push
insl
and
clc
mov
ljmp
xchg
lds
stos
out
push
push
xchg
loopne
or
fisttpll
jp
das
mulb
lcall
pop
outsb
js
shl
mov
mov
xlat
call
push
jno
xchg
div
call
xor
lret
cmp
push
mov
decb
mov
push
sub
sbb
rolb
adc
pop
mov
sarb
fxch
sbb
jecxz
inc
sub
aas
cmp
jns
adc
or
shll
inc
aam
imul
sahf
cli
inc
decb
xor
add
mov
mov
sbb
mov
test
insb
cld
jbe
int
mov
mov
lods
inc
or
js
ss
sub
mov
cmp
je
cmp
mov
or
int3
je
out
fstl
insl
mov
cltd
xor
lods
mov
int
mov
cmp
cmp
mov
arpl
out
push
popf
dec
inc
pop
sbb
mov
int3
push
sbb
push
aas
fiadds
ficoml
inc
xchg
imul
pop
es
dec
or
out
sarb
addps
aas
shlb
xor
into
pop
push
mov
fidivs
and
sahf
pop
out
inc
inc
icebp
xchg
fsts
xchg
out
addr16
pop
xlat
stc
sti
cltd
mov
jns
out
xchg
and
ljmp
jmp
test
dec
pop
and
stos
xchg
shr
or
call
fnstsw
sbb
ljmp
ss
int3
out
jp
jns
or
cmpsl
jp
inc
fsubrp
mov
or
lods
aas
and
fmull
test
js
shrb
fldcw
xchg
lcall
leave
sub
sub
mov
outsb
jo
sub
cmpsb
iret
mov
mov
or
cwtl
jmp
mov
test
and
lret
shll
into
pop
cmp
inc
mov
and
lods
psrlq
dec
push
clc
adc
cmp
pop
nop
ret
std
sub
lods
mov
inc
ljmp
xchg
sbb
dec
int3
jno
or
push
inc
inc
mov
sbb
loopne
push
rol
rol
cmpb
test
sbb
lds
push
in
stos
decl
cld
mov
mov
mov
out
fs
push
push
or
add
in
jecxz
push
ja
pop
es
inc
js
push
pop
aad
dec
pextrw
popf
imul
enter
cmovno
leave
xor
pop
mov
cmpsb
int
mov
fwait
pop
lods
mov
inc
dec
and
imul
sub
insl
xor
and
mov
cmp
scas
icebp
and
sahf
fwait
push
outsl
push
pop
xor
loopne
mov
cwtl
mov
scas
stc
rorl
stos
sbb
adc
mov
xor
mov
fsubrs
scas
aam
push
stc
lods
fyl2xp1
daa
sub
sahf
fwait
sub
inc
mov
lods
jg
jo
inc
jl
push
jecxz
or
lret
jl
push
jl
pop
int3
mov
fwait
cs
jae
leave
fisubl
xor
sub
mov
divb
jno
out
mov
jbe
addr16
and
mov
aaa
fadds
mov
xor
push
mov
sti
mov
or
cmp
sub
mov
fs
push
add
xor
fstpt
sbb
dec
xchg
scas
lret
das
ljmp
inc
hlt
arpl
push
fndisi(8087
mov
xchg
popf
fnstcw
jno
adc
fadds
fsubs
aaa
xor
sbb
cmp
fwait
push
xor
jo
bnd
aam
sbb
fsubrl
pop
data16
aam
inc
xor
aam
pop
das
aam
mov
cltd
push
mov
mov
pop
lret
inc
test
push
adc
pop
cmpsb
sub
out
arpl
mov
ja
adc
lcall
jae
test
in
out
cmpsb
rcrl
add
xchg
cli
loop
cmp
push
decb
jns
adc
ja
sub
daa
pop
out
push
fs
push
dec
cmp
cmp
popa
pop
into
xor
lock
cld
pop
fcoml
mov
xchg
push
cmp
jg
sub
ror
sbb
push
push
pop
mov
sbb
or
add
or
lahf
and
lahf
loope
xlat
sub
push
movsl
mov
jnp
icebp
lods
movsb
mov
inc
dec
or
inc
mov
inc
fwait
pop
movsb
push
cwtl
cmc
scas
cmp
test
mov
fcmovne
orl
pop
out
adc
into
into
and
or
aam
pop
imul
lea
stos
aam
je
ret
dec
jl
and
je
mov
pushf
in
movsb
and
js
and
je
loopne
sub
and
js
out
out
aam
shll
and
sub
sub
imul
lods
out
pop
call
inc
mov
xor
jno
dec
ror
bnd
jecxz
je
fadd
or
mov
and
push
dec
jnp
or
sub
mov
sub
mov
scas
jg
call
sub
fiadds
adc
test
sub
in
addr16
jno
xor
lret
rolb
scas
and
adc
dec
add
lock
or
inc
ret
int3
cld
lcall
fnstcw
jnp
pop
add
push
fistps
out
lret
xchg
daa
mov
fimull
xchg
push
or
pop
in
iret
test
xlat
push
cmp
loope
mov
out
shlb
fsubrl
mov
inc
xchg
ret
repnz
idivl
xor
sub
or
cmpsb
cmp
ljmp
dec
push
and
push
xchg
cmpb
xchg
fs
dec
mov
add
dec
movsb
lcall
loopne
mov
or
pop
and
fisubrs
imul
sub
repnz
fidivrs
mov
jle
test
ret
mov
icebp
movsl
stos
fwait
aaa
mov
in
mov
addr16
insb
lret
movsl
lret
in
es
cmp
xor
or
mov
dec
and
dec
aaa
or
mov
inc
call
in
mov
mov
fadds
or
push
les
jl
shl
movsb
jno
inc
mov
jns
mov
ja
leave
sub
or
scas
mov
insl
rcl
adc
bound
gs
push
std
hlt
cmpsb
or
adc
pop
push
notl
push
arpl
mov
js
in
mov
cltd
mov
js
popa
push
popf
fsubp
push
notl
negl
fldenv
xor
jge
dec
sbb
adc
inc
stc
xor
xor
pop
and
add
push
inc
push
mov
xchg
rcl
lret
hlt
in
add
dec
push
addr16
mov
inc
xor
loopne
jns
test
dec
or
dec
jae
sub
pop
test
es
mov
push
aad
ret
inc
lahf
nop
stos
mov
icebp
lock
imul
loop
push
push
lahf
cmc
pop
ja
xlat
in
xchg
imul
sbb
pop
vmread
out
inc
movsb
xchg
jno
movsl
cli
das
mov
inc
lock
dec
jg
inc
rorl
stos
hlt
lds
test
fldt
shl
cmp
cwtl
add
sub
inc
es
hlt
jo
jo
aam
xor
add
js
fisttpll
add
sbb
xchg
push
xor
xor
jl
mov
repz
addb
push
mov
adcb
test
jg
aam
mov
rolb
out
mov
mov
test
std
jb
xor
imull
arpl
dec
rcrl
decl
push
les
xor
jo
jbe
xlat
mov
js
push
xorl
and
mov
cmp
mov
xorl
and
inc
and
jmp
lods
sbb
sub
push
push
inc
ret
mov
rol
mov
inc
inc
cmp
scas
fcoms
dec
repnz
sahf
mov
popa
in
xor
jl
mov
pop
push
pop
int
int3
out
jne
mov
push
and
fucomi
add
mov
lods
or
dec
mov
rcrb
rcr
testl
and
push
repz
enter
js
cmp
push
mov
push
sbb
push
imul
push
add
into
xchg
push
enter
push
sub
adc
shrl
arpl
mov
scas
mov
sub
fadds
repnz
cld
push
nop
ret
jle
iret
fwait
jae
xor
pop
adc
lea
insl
pop
hlt
inc
dec
cmp
and
into
pop
aaa
stos
scas
mov
in
xor
data16
dec
dec
sar
sahf
imul
xchg
es
lods
aad
mov
mov
andl
push
push
fwait
jns
test
mov
jo
pop
in
xor
mov
xlat
push
jbe
xchg
or
rcrb
or
stc
loope
jle
cmpsb
lcall
mov
pop
adc
push
inc
ljmp
adc
adc
addr16
lret
jp
out
add
xchg
js
mov
aam
fsubrs
inc
xchg
jecxz
in
in
insl
adc
test
jne
cwtl
outsb
popf
inc
mov
inc
mov
bound
les
aam
test
push
push
aam
mov
add
sbb
sub
xchg
jno
or
push
pop
jb
mov
roll
addr16
jns
ficompl
or
sbb
sbb
mov
mov
ficoml
into
push
cmp
nopl
mov
call
mov
or
cltd
cmp
add
add
add
and
inc
aad
insl
pop
add
adc
adc
pop
int
or
inc
popa
pop
or
aas
adc
xchg
lds
mov
sbb
xchg
xor
sub
adc
jns
cmpsl
sub
les
or
cmp
popf
jae
mov
iret
or
mov
stos
daa
popa
dec
mov
cmp
cmp
insl
mov
lea
in
inc
cmp
cmp
pusha
mov
mov
imul
mov
sub
nop
cmp
mov
xchg
out
insb
push
pop
push
cmp
les
test
push
sub
jno
repz
add
add
push
movsb
mov
sbb
ds
lods
mov
cltd
fisttps
shl
sbb
test
orl
add
adc
mov
addl
pop
push
add
push
std
dec
mov
daa
jno
jge
hlt
jl
fadds
arpl
sbb
push
mov
push
sbbb
addr16
enter
jo
jo
into
push
jmp
lods
out
cli
jp
or
daa
inc
mov
popf
cmc
test
mov
loope
lods
mov
push
out
or
or
and
aam
lods
int3
mov
lcall
addr16
leave
outsl
push
jne
dec
cld
sub
xchg
idivl
cmp
shrb
inc
push
inc
lock
imul
pushf
push
inc
outsl
popf
data16
and
cltd
and
inc
inc
add
fwait
lds
or
outsb
icebp
adc
pop
xchg
jmp
cmpsl
mov
addr16
sbb
fdivrl
mov
test
and
subb
pusha
xchg
loopne
mov
movsl
icebp
pop
or
outsb
das
faddl
aaa
mov
and
dec
ss
mov
fcmovbe
adc
fadds
inc
add
in
fstpt
adc
loop
call
sub
jbe
stc
enter
sahf
lods
pop
or
pop
iret
test
decb
sub
mov
bnd
pusha
jae
nop
dec
ljmp
push
sub
hlt
xchg
shll
push
popl
cmpsb
ret
in
fisubs
pop
push
jecxz
pop
pop
shlb
cmp
or
inc
xchg
adc
movsw
jb
loopne
out
outsb
cli
ret
test
adc
sbb
arpl
ja
mov
or
xor
mov
leave
inc
and
loopne
cld
cmp
dec
aas
mov
cwtl
jle
pop
out
lret
xchg
xor
dec
jo
movsb
lods
jb
fstl
sub
aas
movsl
fscale
cmp
sbb
lock
jp
adc
push
aas
xor
cmova
adc
int3
mov
sbb
movsb
test
pop
in
pushl
repnz
lods
pop
in
push
stc
call
add
lcall
mov
loop
push
push
sub
mov
leave
fcom
mov
loop
jae
cmp
push
cmp
mul
sub
popf
mov
fwait
iret
popf
hlt
aad
mov
gs
mov
loop
loop
rorb
out
pop
sbb
xchg
add
push
setbe
dec
push
push
pop
test
pop
js
sbb
adc
push
cld
or
fdivrl
mov
or
or
or
test
stos
lret
mov
push
mov
add
xchg
stos
mov
shr
ljmp
adc
cmpsb
fisubl
push
xchg
mov
or
xchg
mov
or
popf
outsl
pop
and
cmc
sbb
fiadds
pop
in
dec
ret
fsubr
test
test
cmp
popa
push
aad
jae
xor
andb
cpuid
incl
add
ljmp
test
outsb
dec
jg
scas
adcl
xchg
aas
in
sub
fadd
lds
imul
inc
stos
xchg
add
int
and
jo
cmpsl
and
push
lds
or
les
ficoml
enter
dec
and
fiadds
xchg
cli
imul
data16
movsl
mov
inc
stc
mov
or
sub
inc
scas
cltd
add
cmp
push
call
add
popa
jl
or
stc
mov
mov
mov
clc
in
icebp
push
mov
xor
xor
jmp
fdivs
mov
cwtl
adcb
addr16
nop
ljmp
pusha
xchg
mov
pop
pop
xchg
xchg
jecxz
xor
or
jmp
pop
in
repz
bound
mov
push
sbb
ficompl
sahf
dec
xor
stos
aas
or
xchg
insl
push
and
or
enter
jnp
scas
aad
lods
jmp
or
aad
adc
fmull
les
and
jg
push
sbbb
ljmp
cmp
fwait
mov
dec
xchg
fcmovu
ds
popa
es
mov
push
sbb
jno
subl
gs
fildll
push
fiaddl
pop
test
xchg
push
adc
fwait
xor
popf
mov
mov
xchg
lret
subl
push
ret
in
adc
inc
aas
add
xorl
mov
sti
test
pop
stos
push
sbb
jb
cli
cmp
add
popa
addr16
push
stc
push
mov
sub
xchg
insl
aas
rorb
inc
jns
mov
push
adc
and
and
mov
mov
fildl
mov
dec
jl
push
cltd
xor
mov
lret
xchg
jecxz
ficomps
cld
cli
pop
sub
fistpll
adcl
pusha
lods
lret
sub
repnz
lret
xor
cli
scas
adc
or
fstp
pop
outsl
cmp
sub
inc
js,pn
jl
add
ret
arpl
dec
loope
mov
neg
inc
out
sahf
int
fildl
inc
imulb
sub
jns
pop
nop
xchg
cmc
xor
mov
push
xor
cs
inc
push
and
push
lret
mov
popf
or
fsubrl
adc
gs
pop
mov
jl
jae
out
xchg
insl
ret
repnz
push
es
jmp
repnz
test
push
push
pop
leave
mov
hlt
pop
jg
add
mov
in
aam
inc
sahf
outsl
jmp
outsb
push
das
subb
jmp
mov
repnz
push
mov
gs
add
push
xchg
es
add
sub
pop
mov
and
cmp
xchg
sbb
cmpsl
adc
mov
pop
popf
mov
adc
mov
push
mov
adc
or
or
les
movsl
jge
in
sub
xlat
out
add
psrad
and
stos
adc
out
stc
mov
sbb
or
mov
int
sbb
cs
mov
xlat
pop
sub
lods
das
repnz
out
lods
arpl
mov
cmpl
outsl
pop
cs
std
push
adc
and
push
and
js
outsb
les
insb
fs
pop
fldt
movsb
push
mov
testl
push
push
cmp
xchg
xor
jg
add
gs
jl
xlat
pop
mov
sub
push
shlb
cmc
sbb
aad
jmp
stos
stc
js
fbld
scas
dec
jno
push
jmp
fiadds
pop
jmp
and
stos
loopne
xchg
push
xlat
pop
iret
stos
movsb
mov
xor
fdivrl
sub
ret
fsts
pop
dec
fnstsw
inc
mov
mov
sti
push
aad
cmp
movb
push
mov
fwait
adc
sbb
cmp
les
jnp
sub
xor
xchg
jge
aam
sub
push
cmpsl
stos
mov
mov
lret
add
sbb
xchg
or
mov
jecxz
test
jno
aam
jnp
xor
mov
cmpsb
shrb
sub
lods
addl
pop
leave
iret
bound
and
xor
imul
and
push
mov
dec
lea
lcall
testl
lret
sahf
and
xor
ficoml
mov
imul
mul
add
mov
cmp
in
rcrl
dec
ret
dec
inc
push
movb
mov
jl
pushf
cmovp
fbld
pop
std
fs
cld
cmp
stos
leave
and
cmp
call
cwtl
imul
adc
push
filds
out
adc
dec
imul
push
inc
xchg
inc
dec
jnp
xchg
cmp
and
enter
ret
mov
and
sub
mov
xor
mov
pop
lret
dec
adc
test
dec
xchg
sti
sarb
xchg
dec
into
lods
add
jae
sbb
cmp
add
mov
sbb
ds
inc
clc
popf
add
aad
cltd
insb
push
repz
lods
imul
mov
lahf
popa
or
fstpl
jnp
adc
add
or
push
inc
cmp
dec
xor
or
mov
and
jl
pop
push
enter
adc
nop
add
les
mov
ljmp
js
cli
pop
jl
pop
mov
pop
xor
sub
or
push
fsubrl
pop
push
arpl
outsb
daa
adc
cli
adc
xor
jge
lahf
add
gs
inc
ret
adc
pop
out
mov
inc
nop
adc
xchg
sub
dec
push
js
les
and
inc
fwait
out
pop
xchg
xchg
push
adcl
les
ss
inc
enter
dec
dec
sub
mov
lahf
adc
movsl
out
inc
add
cmpsl
mov
pop
loope
push
icebp
js
push
push
adc
mull
addr16
stc
lods
cmp
rcr
outsb
mov
rcll
repnz
xchg
push
cmp
ret
rorl
sub
lahf
test
push
data16
sarb
jae
push
in
mov
mov
pop
icebp
adc
dec
pop
and
fs
inc
jecxz
sti
push
pop
dec
movsb
bound
orl
inc
mov
int
ret
dec
scas
jae
std
pop
cld
out
testl
adc
xchg
lock
jns
add
pop
sbb
and
adc
imul
rcrb
loopne
adc
or
sbbl
les
pop
loope
mov
jbe
and
or
gs
push
jne
mov
mov
jb
xchg
in
test
dec
or
pusha
insb
cmpsb
ds
shll
xor
xor
fwait
inc
pop
and
xor
dec
fsubrp
in
lcall
mov
and
lret
mov
gs
pusha
cmp
ss
mov
stc
fimuls
dec
scas
ret
pop
cld
dec
jne
push
push
lcall
in
sub
or
enter
push
testl
icebp
outsl
addl
mov
in
es
cmp
fcmovbe
add
mov
outsl
adc
pushf
mov
movsl
jl
nop
pop
lret
and
inc
out
addr16
cwtl
xlat
fcmovbe
xor
push
mov
roll
in
lret
or
push
cmpsl
mov
repz
mov
test
and
or
jge
daa
pmaddwd
dec
scas
imul
push
xorb
xor
dec
rcr
cmp
repnz
cmp
xchg
ljmp
addr16
xor
adc
lcall
bound
mov
into
dec
cmp
loopne
cmp
cmp
add
xor
jae
in
pop
cmp
sbb
decb
imul
repnz
or
xchg
in
cmc
icebp
loopne
jne
jnp
add
xlat
jae
pop
and
test
push
pop
incb
or
ja
lods
inc
jns
loop
push
or
adc
mov
sbb
enter
lahf
mov
repnz
mov
add
inc
insl
pushf
ljmp
call
subb
and
jbe
push
testb
dec
pusha
daa
pop
dec
adc
mov
mov
cmp
xchg
out
into
mov
jnp
ret
mov
inc
push
sbbb
shrl
js
xchg
mov
dec
in
outsb
dec
gs
scas
push
test
lcall
out
mov
arpl
lods
mov
mul
test
ljmp
aas
mov
mov
hlt
mov
adc
fidivs
cmp
mov
nop
ljmp
push
test
pop
mov
xor
sbb
int
pop
clc
pop
push
pop
jnp
ljmp
es
mov
lock
fidivs
and
movsl
xchg
cli
lock
fcomps
sub
repz
imul
flds
sub
adc
out
push
jno
xor
pop
xchg
adc
sarl
test
xor
xchg
xchg
fwait
sub
push
ss
inc
adc
sub
rcrb
adc
in
sub
int3
mov
sub
dec
pushf
movsb
out
hlt
push
and
cmp
in
sti
or
cmp
jb
ljmp
stos
jge
rorl
push
xchg
or
outsb
or
loop
inc
pop
add
ds
dec
in
push
dec
testl
xchg
push
out
jnp
cld
jns
enter
mov
pop
and
scas
shl
inc
mov
or
cld
dec
cmpsl
or
jge
add
cltd
jmp
mov
daa
inc
pop
bound
adc
inc
sbb
scas
cmp
jno
cltd
hlt
or
das
pop
dec
cmpsb
jnp
mov
add
xchg
xchg
scas
mov
stos
sub
cmp
sub
xchg
dec
mov
dec
rcr
mov
fs
sub
inc
mov
lcall
dec
xchg
repz
xchg
mov
stos
and
fldl
sub
adc
lods
rcll
inc
movsb
inc
sub
nop
int3
push
adc
mov
mull
xchg
xor
aaa
xor
jns
out
ficoms
inc
loopne,pt
dec
pop
inc
es
inc
sub
push
sub
mov
and
xor
inc
jno
clc
xor
adc
xor
int
adcl
cmp
add
inc
adc
jmp
jp
mov
test
inc
pop
sub
fs
rol
ja
in
subb
insl
push
call
lods
push
sub
lret
jmp
movsb
jne
or
andb
gs
arpl
pushf
sub
dec
or
loop
jb
xchg
mov
wbinvd
aas
ds
jae
in
dec
enter
mov
sub
ja
cmp
mov
jge
cmp
xor
jmp
push
mov
push
rcrl
hlt
out
lods
pop
popa
jb
mov
xchg
and
cmc
inc
mov
sub
movsl
or
sbb
enter
push
dec
dec
push
dec
xlat
rcl
in
popa
fs
addb
jbe
dec
hlt
mov
jl
jno
fcomi
inc
pop
mov
outsl
sub
mov
and
into
sub
addr16
sbb
and
mul
push
cwtl
jnp,pn
pop
div
xchg
mov
sbb
adc
pop
ja
stc
dec
lea
fsub
xchg
add
pop
inc
or
mov
xor
mov
pusha
xchg
cmc
fstps
dec
mov
dec
stos
pop
xchg
pop
fsubl
imul
xchg
sub
push
jns
cmc
fdivl
dec
hlt
jb
icebp
outsl
pop
mov
add
sub
lock
mov
fldcw
int
testl
xchg
call
mov
jnp
imul
sti
imul
mov
mov
out
sbb
cmpl
rorl
mov
xlat
ljmp
mov
por
test
lds
mov
inc
mov
test
push
cmpxchg
cmp
mov
es
sarb
fs
or
daa
xor
inc
pushl
lock
and
les
jl
mov
xlat
ds
divl
pop
imul
shl
out
gs
and
hlt
ss
lahf
popa
adc
lds
push
add
dec
add
jne
inc
mov
push
loopne
and
movups
mov
outsb
mov
hlt
fs
and
lahf
sbb
ret
cltd
and
popa
jne
or
push
jae
mov
push
test
or
fildl
popf
fistpl
mov
aad
in
mov
dec
inc
in
pusha
insb
inc
mov
add
aam
or
push
popf
mov
jb
mov
xchg
mov
gs
ret
add
ret
pop
dec
xor
imul
adc
inc
out
sub
mov
sub
scas
mov
cmp
mov
mov
jecxz
mov
inc
mov
rcl
out
or
mov
or
scas
loope
cmp
xchg
out
mov
add
mov
je
call
cmc
mov
popa
mov
inc
mov
ret
inc
enter
cmp
jp
cmp
dec
aaa
push
adc
pop
arpl
push
mov
lcall
jb
cmp
xor
in
or
dec
xor
pop
lods
sarb
idivl
sahf
cltd
push
repnz
mov
push
in
push
push
scas
in
aam
push
xchg
add
mov
lods
push
sbb
xlat
stos
clc
sbb
jnp
jge
jns
xor
cmp
jb
sbb
iret
fistpl
out
int3
fidivrl
mov
mov
bound
sti
adcb
sbb
in
das
js
mov
sbb
jno
push
xor
fdivr
xlat
icebp
push
test
inc
sub
jle
fbstp
pop
ja
rclb
fwait
mov
jae
jmp
jmp
inc
int3
adc
mov
or
enter
push
adc
cmp
jecxz
int3
idivb
inc
pop
push
stos
mov
pop
imul
adc
imul
test
in
xor
and
mov
shll
mov
stc
cmp
call
mov
jbe
lods
mov
mov
cwtl
add
pop
aam
and
or
cmpsl
xchg
dec
adc
cmpb
rorb
out
daa
xchg
push
fcmovb
test
push
pusha
pop
jbe
lret
xlat
xorl
mov
out
jno
rol
sub
rolb
ret
call
sbbl
out
push
outsl
in
ret
cmc
in
movsb
inc
pop
insb
test
sub
inc
xchg
mov
and
pop
call
insl
loop
arpl
adc
jns
fwait
jns
repnz
mov
or
pop
hlt
push
test
fimuls
mov
ret
divb
dec
pop
andl
or
fdivl
pop
faddl
mov
mov
mov
sbb
loope
xchg
inc
cmp
mov
shrl
xor
adc
imul
inc
jns
movsl
movsl
jmp
sbb
rorl
jmp
sbb
push
ljmp
popa
adc
cld
xor
xchg
mov
notb
int3
mov
loope
int
es
pop
inc
repz
sub
xorb
jne
bound
push
es
xchg
push
and
fwait
mov
icebp
and
pop
daa
cmp
out
aaa
cld
std
aad
pop
push
enter
pop
xor
add
std
and
cmc
lods
pusha
out
mov
outsl
and
sbb
sbb
jle
lahf
test
rol
movsb
les
leave
push
pop
push
repz
fistps
rcll
insb
add
cltd
das
and
dec
adc
push
cmp
sbb
xchg
fisubrs
xchg
outsl
lret
lahf
or
ret
out
sub
cwtl
push
stos
out
adc
dec
xor
dec
add
aaa
xchg
test
aaa
lods
loopne
bound
je
stc
ficomps
push
mov
mov
inc
push
add
adc
call
and
mov
mov
add
xorl
push
pop
jno
iret
fbld
gs
pop
imull
pop
pop
test
push
ret
out
je
xor
enter
in
pop
mov
sti
xor
push
fidivrs
rorb
arpl
call
adc
mov
sbb
mov
push
xlat
jno
add
xor
repnz
fisttpl
enter
test
jno
cmp
popf
aaa
xor
cmp
adc
xor
mov
loop
fcmove
inc
adc
fcmovnb
sahf
xchg
mov
movsl
hlt
dec
lods
fimuls
cmp
hlt
push
filds
pushf
cmpb
imul
cs
sbb
shrb
cld
xorl
pop
clc
je
mov
mov
jle
into
mov
int3
leave
pushf
sbb
dec
mov
movsl
loope
or
fisubrs
pop
xchg
cld
jge
mov
dec
cwtl
movsb
jl
sbb
sbb
pop
cs
addr16
xchg
les
adc
pushf
pop
stc
out
fmuls
or
cwtl
xor
adc
cmp
jns
enter
cmp
dec
stc
rcl
push
repz
or
outsl
lods
sub
or
jmp
adc
cmp
nop
into
mov
movsl
cwtl
add
inc
lods
cmp
aaa
adc
cmp
fwait
add
call
ss
in
fdiv
cmp
enter
stos
insb
push
dec
push
add
xor
ret
sbb
pop
insb
outsl
sub
adc
add
jb
test
shll
pop
mov
mov
sub
outsl
mov
ljmp
xchg
dec
hlt
sub
sub
mov
lret
ret
mov
xchg
push
dec
out
mov
lret
sbb
hlt
xlat
sbb
xlat
aam
sti
dec
jle
jge
xchg
cmpsb
hlt
arpl
mov
mov
mov
aad
pop
rorb
jle
js
pop
je
mov
out
sti
mov
scas
mov
js
mov
adc
push
aam
scas
fdivrl
inc
adc
clc
jg
and
cwtl
push
sbb
push
adc
lods
ret
nop
cmp
sbb
xchg
icebp
xor
sarb
clc
aam
fwait
cli
add
mov
fidivrs
mul
test
sahf
ret
loop
pop
js
jo
fs
sti
xor
jo
out
push
mov
aas
shr
sub
pop
nop
dec
xchg
fildl
addb
leave
lea
sub
addb
mov
arpl
xor
lcall
bound
cmp
or
popf
rorb
ss
iret
popa
in
and
mov
out
jle
stos
ljmp
mov
jbe
adc
gs
adc
sub
inc
add
push
adc
fwait
cli
aas
loope
jl
testb
inc
push
inc
and
inc
mov
mov
mov
out
xchg
mov
lahf
mov
jo
xor
cmp
int3
imul
movsl
cld
inc
popa
rcll
mov
inc
gs
mov
sbb
xchg
gs
mov
fmul
jmp
mov
in
shlb
testb
jp
arpl
inc
data16
push
adc
fcomip
inc
sub
adc
std
out
jno
fbstp
cmp
mov
pop
xor
stos
xchg
movsb
mov
rcr
xchg
cmp
iret
jne
xchg
xor
fucomi
adc
cmpsb
inc
cmp
aas
cltd
push
cmp
repnz
ja
mov
rcrb
xchg
sbb
mov
xchg
mov
movzwl
inc
arpl
outsb
adc
imul
xchg
fs
mov
inc
rcr
mov
inc
adc
cmp
and
inc
jp
scas
gs
enter
xor
das
mov
mov
push
aas
aad
scas
stc
xchg
fisubs
in
lahf
into
fwait
dec
daa
ja
cmpsl
pushf
sahf
sbb
adc
jecxz
shr
mov
mov
and
in
cmp
jno
gs
and
insb
pop
ret
adc
sbb
pop
fldl
push
and
arpl
lea
or
xor
or
lret
pop
mov
les
inc
add
arpl
out
push
ss
cmpl
add
dec
mov
lret
inc
negl
outsb
mov
and
xor
jbe
sub
xchg
jbe
xor
inc
push
push
jmp
mov
cli
cmp
push
jae
js
mov
sub
add
xchg
cmp
sbb
mov
cmp
sahf
fildl
pop
es
aam
xor
fistpl
or
sbb
xor
call
and
fldcw
inc
ss
jp
andb
xchg
mov
dec
mov
xor
push
cld
leave
inc
enter
ror
hlt
push
add
push
push
sub
ror
fdiv
cmp
adc
xchg
dec
cld
mov
int3
dec
push
loop
jl
in
add
mov
xchg
stos
lahf
push
or
das
lret
out
stos
mov
aad
test
lret
cmpl
fidivrs
or
xor
icebp
mov
mov
xchg
cmc
scas
or
mov
and
fsub
rcr
xor
sbb
pop
mov
lea
cltd
mov
in
xchg
push
sbb
wrmsr
sub
repz
sahf
pusha
sbb
add
pop
mov
push
aam
and
dec
iret
xchg
sbb
inc
imul
hlt
and
adc
inc
fidivrl
sub
gs
lret
retw
jp
leave
jno
sbb
out
dec
push
sahf
les
mov
jmp
dec
gs
fiadds
fstps
jns
pop
out
idivb
mov
push
loope
sub
and
test
mov
push
or
ss
sbb
sbbl
sub
inc
ret
add
test
sti
popaw
mov
sbb
add
dec
or
push
into
ret
lret
sbb
aad
adc
ret
sbb
stos
adc
es
pop
pop
fadds
mov
pop
xchg
ret
scas
adc
mov
pop
call
ret
adc
mov
adcl
xchg
ficoms
shll
cmp
stc
push
mov
lea
inc
xor
sbb
mov
push
push
lods
jmp
aam
outsb
or
cmpsl
or
pop
pop
xor
mov
push
xor
stos
xlat
aaa
pusha
scas
mov
lds
mov
jmp
fiadds
mov
in
mov
inc
push
and
and
ja
adc
xor
and
stos
and
sub
imul
test
push
jno
outsl
cwtl
lds
xor
idivl
fst
dec
sbb
je
mul
dec
jge
iret
xchg
fiadds
ljmp
int
lahf
push
cmp
iret
xor
nop
mov
cmc
xchg
cmp
adc
shlb
pop
out
pop
nop
gs
movsb
mov
fsubrl
push
or
sti
push
mov
idivb
sbb
daa
subb
push
adc
or
out
mov
imull
mov
sbbb
stc
fisttps
mov
out
out
adc
or
xor
inc
mulb
ljmp
inc
pop
dec
push
sbb
cli
sub
sarl
adc
jne
pop
rcr
pop
cwtl
inc
mov
ds
jge
dec
aaa
test
push
aad
jnp
mov
lret
icebp
cmp
std
in
pop
cltd
jp
shlb
and
out
loopne
jge
rclb
ret
xlat
and
dec
mov
jne
add
jo
nop
sub
dec
rcr
push
and
and
sarb
fs
xor
xlat
sub
inc
dec
mov
sub
cli
loop
lds
in
cltd
or
mov
stos
xchg
mov
out
aaa
push
adc
data16
adc
repnz
rolb
rorl
das
les
xchg
mov
stc
bound
sbb
and
xchg
imulb
lods
sbb
adcb
xchg
cld
lea
sub
sbb
lods
or
lods
pop
pop
dec
cli
stos
add
hlt
pop
incl
subb
fwait
fwait
testl
mov
popa
cli
icebp
outsb
inc
mov
sbb
mov
push
push
cwtl
loop
mov
and
cmpsb
jno
jbe
aad
roll
and
jno
ret
sub
leave
cli
push
or
xor
iret
and
fs
xor
cmpsl
and
outsl
out
cltd
stc
mov
test
push
adc
add
sar
imull
sbb
test
fiaddl
mov
xor
or
int3
xchg
xor
jp
push
sbb
jge
iret
negb
roll
into
mov
push
sti
xchg
mov
xorb
out
movsl
xor
jb
lods
dec
repz
incl
stos
out
mov
sahf
inc
fstps
xor
sbbl
mov
sti
out
inc
ficoml
mov
mov
jg
pop
or
jbe
mov
arpl
sti
out
cmp
movsl
push
cmpsl
push
cld
into
xor
jmp
cmp
jne
cld
jb
push
and
jne
lods
out
shll
cmc
inc
out
cmp
shlb
mov
mov
aam
xor
fnstenv
in
cmp
xchg
roll
mov
xchg
shrl
add
push
xchg
dec
pop
add
inc
cmp
pop
inc
or
push
push
cmp
pop
push
aad
xchg
jno
cmpsb
aaa
jbe
call
jnp
mov
push
or
popf
jl
fwait
inc
icebp
scas
sub
xchg
jno
fs
cltd
shrb
movsl
cmpb
push
mov
add
std
xorb
test
dec
push
add
jb
dec
pop
imul
div
cmpsb
bound
in
jno
das
or
inc
sub
jno
sub
mov
cmp
aas
test
mov
mov
inc
fstps
mov
fiaddl
dec
cmp
daa
jp
push
dec
sub
scas
jge
add
fisubl
mov
dec
sub
ret
mov
inc
xor
mov
xchg
sub
fwait
sbb
rcrb
push
jmp
les
pop
xlat
inc
and
sbb
clc
fcompl
push
mov
jle
lods
jno
test
pop
popf
dec
dec
scas
cmp
sub
xchg
or
std
sbb
inc
or
jo
sub
gs
sub
push
jno
jl
dec
cmp
std
or
insb
cmp
push
iret
aaa
movsb
add
cmpsb
outsb
mov
cmc
jge
sub
adc
ret
cs
pusha
test
xchg
cmp
sbb
or
cli
cmp
jmp
xchg
fcmovnbe
pop
fistpl
pop
adc
xchg
das
jmp
pop
cmc
jle
unpckhps
mov
movsb
aad
jp
jl
push
pop
aaa
ds
int
dec
fbld
ret
add
jp
cmp
mov
or
mov
mov
or
jns
dec
cmpsl
jns
negl
mov
and
je
xchg
loop
mov
ljmp
cmp
cs
xor
in
fcom
out
xor
push
and
sub
outsl
out
mov
sbb
mov
pop
not
in
fcompl
push
movsl
shl
pop
pop
inc
leave
and
push
lods
push
dec
imull
push
push
adc
mov
es
aad
in
mov
sarl
cmpb
push
iret
out
jg
sbb
and
mov
push
push
lods
cmp
ds
fidivrs
cmpsb
lret
leave
and
clc
pushf
mov
aam
mov
dec
call
mov
pop
in
cli
ja
ficomps
daa
push
lock
ret
jl
fwait
xor
push
xor
testl
sbb
movsb
inc
insb
or
adc
push
movsl
xchg
imul
xorl
into
and
pusha
pop
lahf
add
fs
outsl
stos
fxch
sub
mov
loope
popf
sbb
cmc
xchg
jle
fcmovnu
add
fnstsw
or
sbb
sub
pop
iret
ja
data16
and
data16
iret
pop
fwait
jp
std
sbb
fisubl
ret
inc
mov
push
mov
xchg
dec
mov
fwait
sti
xchg
movsb
int
dec
insl
call
scas
xchg
mov
outsl
lock
shll
loope
fld
stc
pop
divl
mov
aaa
or
pop
push
cmc
pusha
jmp
stc
scas
mov
xchg
ja
inc
add
jno
push
mov
stos
lret
jmp
jg
mov
push
xchg
stos
xchg
ljmp
ja
in
push
aad
xchg
xor
sub
lret
add
mov
or
add
pop
push
fists
das
cmp
imul
mov
das
lret
int3
repz
fisttps
jge
jns
jbe
push
jbe
fimuls
jne
pop
add
pop
data16
outsb
jmp
sbb
inc
out
int3
sbb
jbe
mov
shll
in
imul
adc
xor
push
add
aam
into
xor
sub
jae
adc
inc
incb
xchg
test
out
enter
xor
adc
dec
dec
dec
dec
inc
sub
fsubrs
andl
in
imul
lcall
cmp
mov
int
push
push
ret
daa
xor
or
repz
cmpsb
and
or
xor
cmp
lock
xor
popa
ljmp
dec
xor
xchg
mov
loop
out
sbb
push
int3
and
mov
adc
push
mov
xor
cmp
pushf
inc
xor
outsl
cltd
xchg
out
daa
ljmp
ffree
test
imul
inc
adc
mov
js
and
or
shlb
mov
pop
xchg
mov
jecxz
mov
add
insl
mov
xchg
out
insb
cmp
cmc
out
fwait
popf
stos
in
dec
pop
call
test
pop
enter
imul
fs
int3
dec
cmp
jae
jecxz
dec
repz
and
or
fmull
xor
rorb
xorl
sbb
test
mov
mov
lcall
dec
pop
push
dec
sub
lahf
arpl
outsb
or
aaa
jne
mov
xor
jmp
mov
loopne
in
sbb
inc
cmpl
shlb
cwtl
pop
cli
cmp
sti
jb
cld
dec
mov
jp
jno
mov
mov
sbb
sbb
add
jp
mov
xsaves
xchg
mov
sub
adc
mov
jmp
sub
jnp
cmp
cwtl
imul
filds
xchg
std
aas
mov
je
add
push
or
jo
sub
or
add
mov
ljmp
cwtl
cmpsb
jge
lods
ds
inc
and
fiadds
scas
stos
rol
in
mov
and
sbbb
sbb
or
outsl
xor
ja
mov
mov
ja
popa
iret
and
das
jb
in
in
ret
mov
lret
sbbb
mov
xor
inc
mov
lds
subl
sarb
sti
pop
inc
pop
adc
gs
add
jg
mov
iret
test
xlat
test
fdivs
ja
shl
scas
cmpsl
and
imul
jecxz
and
arpl
mov
ja
xor
add
dec
cmpsl
loopne
fmul
xor
pop
jae
mov
inc
pop
test
push
lds
xchg
adc
jp
sub
xor
xchg
scas
rorb
leave
jae
push
mov
inc
pop
fwait
xlat
jge
outsl
add
push
cmp
add
xchg
adc
jl
sub
dec
xor
es
lea
sub
push
pop
je
das
subb
sub
sbb
int3
repz
cmp
std
xchg
and
fsubr
pop
xchg
lcall
hlt
cwtl
pusha
dec
mov
lods
aam
jne
add
or
out
out
push
cmp
dec
lahf
pop
mov
xchg
arpl
lds
fs
adc
sahf
dec
sub
push
or
movsb
insb
xchg
push
nop
out
into
or
inc
cmp
sbb
push
adc
xchg
ss
dec
shlb
dec
dec
aas
lret
xchg
xchg
push
dec
iret
popa
lea
lods
add
adc
das
stc
ret
jle
in
mov
ret
idivb
es
inc
bound
fs
fistps
test
xchg
mov
mov
sbb
pop
in
mov
sbb
push
dec
mov
daa
insl
adc
dec
inc
cmpsb
ss
cmpsb
sub
sahf
dec
xor
test
fsubrl
cmpsb
adc
dec
and
sub
xor
mov
adc
xor
clc
pop
xchg
sub
sbb
sbb
mov
sub
sbb
or
test
sub
mov
lahf
pop
dec
dec
inc
inc
ret
int3
xchg
les
inc
ljmp
movsl
std
fmul
inc
adc
inc
iret
jmp
dec
jge
mov
add
pop
mov
or
push
mov
push
insb
leave
das
loop
or
jb
fucomip
cmp
xchg
mov
mov
cmp
imul
inc
cwtl
and
inc
mov
push
pusha
aas
pop
fwait
cmc
cwtl
aas
movsl
adc
ljmp
sub
dec
push
insb
xor
jmp
fsubrs
adc
inc
xchg
push
and
mov
in
sbb
fs
loope
jae
test
adc
std
add
imul
inc
out
cwtl
pop
xchg
fisubrs
cmpb
ljmp
mov
jl
jne
push
cmp
sbb
push
sbb
shl
dec
sbb
pop
leave
push
pop
repz
mov
into
push
jle
xchg
jbe
cmp
add
xchg
jecxz
jbe
rolb
ja
and
lods
clc
outsl
cmpsl
push
test
lods
push
sub
daa
xchg
mov
inc
sbb
lcall
ss
mov
push
loopne
out
arpl
imul
in
jge
pop
sahf
add
cmp
pop
jecxz
push
shr
fldenv
cli
movsb
mov
fisttpll
roll
or
bound
and
mov
ret
cmpl
bound
loope
mov
dec
and
push
sbb
xchg
dec
in
jle
xchg
repnz
lods
adc
mov
test
mov
xor
in
cli
sub
les
mov
mov
dec
sbbl
out
nop
jns
adc
adc
fadds
fidivrs
jg
sbb
jecxz
sub
jle
push
cmp
sarl
inc
shll
in
jae
mov
xchg
and
arpl
add
shlb
in
inc
insb
push
js
jle
pop
jge
jbe
es
add
fcoml
jnp
jno
xchg
jg
repnz
push
inc
xor
aaa
sbb
adc
outsb
imul
add
mov
xor
fistps
lret
out
sbbl
ficoms
add
ret
lret
lret
fs
xchg
mov
jp
daa
lret
cmp
mov
push
sbb
test
lahf
lcall
xchg
scas
push
stos
inc
daa
push
add
push
add
lahf
jle
cmp
push
xor
ficoml
cli
insl
out
jge
fldcw
inc
adc
rcrb
adc
das
imul
arpl
sahf
test
insl
jl
lock
arpl
sbb
sub
mov
sub
mov
adc
sub
sbb
jae
ret
call
insb
add
jge
ds
jns
jle
gs
je
xor
xor
pop
mov
sub
cmp
jbe
mov
lock
mov
sahf
jnp
pop
mov
xor
lock
bound
stos
xchg
movsb
inc
sbb
xchg
inc
mov
int
push
jmp
or
movsl
mov
fildl
std
mov
das
or
xchg
or
out
cmp
jne
insl
dec
dec
dec
icebp
inc
mov
out
pop
enter
data16
sub
aad
or
clc
fsubl
push
dec
jl
sbbb
popa
push
das
hlt
mov
push
xlat
test
loope
dec
arpl
pop
adc
and
jbe
in
stos
mov
stos
scas
mov
fs
cmp
sahf
and
enter
xlat
pop
pop
mov
cld
push
push
in
jmp
rcll
mov
fisttps
lods
lret
mov
mov
mov
push
jl
mulb
jl
test
mov
inc
or
fmull
enter
in
ret
test
xchg
sbb
negl
lds
ficoms
push
pop
sbb
popf
dec
mov
fwait
pop
movsl
popf
jle
inc
inc
pop
lahf
movb
popf
sti
das
lcall
mov
and
stos
pop
dec
leave
cmp
dec
dec
imul
stos
mov
xchg
sbb
dec
ret
repz
imul
or
sub
pop
dec
cwtl
mov
xchg
out
jle
in
movsl
adc
adc
pusha
pop
addr16
push
pusha
mov
sbb
add
ja
ss
and
fwait
push
int3
leave
scas
popa
push
sbb
push
jge
cmp
push
dec
rcl
jns
loopne
or
std
fincstp
and
sub
in
es
pushf
cmpsb
mov
adc
and
xchg
gs
inc
popf
adc
jbe
inc
ret
sahf
in
cmc
adc
test
mov
sub
or
pop
adc
lcall
push
sbb
repz
adc
pop
mov
or
fisubrl
movsb
out
fs
add
in
jle
sbb
mov
add
sbb
sub
orl
cwtl
in
loop
loope
or
add
data16
sub
aam
fs
sub
fldt
fcoml
aam
lods
push
add
sbb
sar
mov
popl
and
or
sbb
lret
sbb
aas
imul
jmp
mov
jmp
add
pop
jle
mov
add
inc
sub
add
out
push
fisubrs
xchg
mov
xor
cmc
gs
add
xchg
pop
xchg
fisttpl
iret
mov
int
aaa
shll
mov
add
push
pop
mov
sbb
mov
call
jecxz,pn
inc
mov
call
arpl
pusha
jp,pt
push
and
mull
sub
dec
cmc
cmc
test
pusha
jnp
cmpsl
das
lds
xor
xchg
inc
rclb
push
dec
insl
and
mov
push
andb
cltd
xor
xchg
mov
sbb
das
or
inc
lahf
aas
mov
jno
lods
sti
rorl
out
add
jmp
lods
sbb
pop
js
pop
pop
mov
inc
inc
arpl
in
test
lea
and
outsl
cmp
xlat
mov
mov
stos
jne
imul
push
mov
or
inc
in
pop
push
pusha
add
test
add
sub
or
jp
pop
add
sbb
shrl
inc
cltd
lret
push
fcoms
cli
inc
int3
and
inc
push
ss
adc
dec
in
dec
xor
push
and
outsl
or
cmp
aad
data16
cmp
inc
or
lock
out
popf
jnp
shl
xor
scas
lea
jg
push
test
mov
cmc
push
mov
les
push
rclb
sbb
or
call
xor
pop
movsl
test
ret
pop
mov
or
cwtl
add
jg
xor
mov
cli
xlat
pop
aad
sub
lods
sub
mov
call
test
scas
out
inc
jo
push
iret
cmp
lods
or
xchg
mov
stos
mov
outsl
das
das
mov
enter
and
pop
cli
xor
or
arpl
ret
cmpl
push
pop
push
leave
in
xchg
cmp
sub
jne
jb
stc
add
movsb
sub
arpl
in
mov
dec
xchg
fmull
xchg
dec
dec
mov
mov
lret
jmp
cmp
pusha
and
sub
or
or
ret
mov
sbbl
pop
mov
and
pop
bsr
jmp
add
mov
jo
jg
jmp
addr16
mov
sbb
movzbl
inc
js
cmp
out
dec
cmpsb
roll
push
fsubr
pusha
pop
jnp
push
data16
push
insl
pushf
sub
xchg
lret
cld
int
pop
xchg
inc
lods
cmpsb
dec
rclb
mov
rcll
popa
fnstenv
jl
repz
mov
shr
dec
test
mov
jl
inc
mov
jg
sub
addr16
test
and
shll
clc
inc
iret
jno
xchg
loop
call
stc
imul
int
enter
xchg
adc
fdivrl
mov
insb
mov
adc
mov
mov
add
mov
pop
mov
lock
aaa
xor
mov
adc
or
pop
and
dec
sub
mov
pusha
pop
dec
test
imul
pushf
add
xorb
jbe
mov
push
inc
xor
std
imul
iret
pushf
in
imul
xor
aas
and
repnz
cmpsb
loop
push
mov
xchg
pop
movsl
insl
rorl
lea
das
lods
cld
lock
pop
add
mov
imul
jbe
add
and
mov
aas
cmp
jecxz
out
cmc
enter
pop
ds
push
and
cmp
pop
or
call
cmp
lret
ret
push
addr16
imul
inc
inc
and
addr16
dec
or
outsb
pushl
cmp
xor
mov
fcompp
dec
jnp
jle
pop
outsb
cld
std
leave
sbb
into
aad
clc
push
dec
mov
cmp
pushf
push
cmp
nop
jl
pop
mov
clc
or
xor
cmc
iret
jnp
aas
cs
scas
mov
inc
mov
pop
xchg
ret
pusha
insl
or
cmpsl
div
fcompl
push
ret
aas
add
xchg
cli
shll
xchg
mov
add
xlat
cli
popa
mov
push
mov
mov
shll
adc
mov
jle
cmp
push
mov
sbb
add
imul
lea
loop
add
and
sbb
cs
pop
xor
mov
xchg
loope
xor
pop
lods
stc
cld
idivb
adc
cld
rcrl
mov
adc
ret
jmp
cmpsb
cmp
xchg
mov
lds
icebp
pop
mov
lea
mov
test
iret
in
push
or
imul
dec
xchg
dec
out
inc
mov
mov
cmp
fwait
aas
jo
push
mov
dec
insb
outsb
pushf
or
lahf
outsb
lcall
mov
xchg
pop
lea
push
loope
lea
mov
and
cmp
jns
sbb
hlt
push
xchg
ds
xchg
mov
and
mov
aam
sbb
jno
pop
fldcw
mov
stos
ret
pop
push
clc
mov
lds
mov
hlt
fwait
add
lcall
fidivrl
pop
cltd
ret
insl
mov
mov
gs
jo
and
test
repz
stos
pop
sarb
addr16
out
cltd
sbb
lea
xor
test
out
dec
lds
or
in
std
or
fdivrs
adc
in
scas
or
test
shll
sti
jecxz
mov
daa
add
ja
stos
pop
jae
into
add
push
add
icebp
aad
jle
adc
cmp
push
ret
fdivs
in
shl
push
inc
rclb
add
adc
jae
out
xchg
fidivrl
fsts
push
push
dec
push
mov
jle
push
enter
add
jne
andl
orb
mov
and
repnz
push
cmp
imul
jmp
and
pop
dec
mov
je
in
jge
out
mov
sub
xchg
jmp
repz
sub
cmp
data16
xor
ss
in
adc
or
out
cs
mov
inc
ja
mov
rolb
cs
mov
inc
cwtl
sbb
fidivrl
aas
mov
sub
nop
add
jns
xlat
sti
cmpsb
aas
and
jl
aaa
out
in
cmp
ja
jg
into
sub
and
inc
mov
das
in
es
rorl
cmpsl
inc
pop
mov
cli
xor
lret
js
stc
fstps
mov
ja
mov
xchg
ret
aaa
inc
mov
pop
loop
mov
insb
adc
jne
test
pusha
aam
mov
xor
das
mov
xor
cmpsb
pop
jnp
xor
ljmp
jo
test
adc
das
add
js
inc
mov
pop
mov
sbb
int
jecxz
jne
mov
test
and
pop
adcl
dec
rolb
addb
out
sub
inc
es
jb
adc
divl
or
inc
adc
into
lcall
mov
lock
imul
outsl
sbb
or
in
jl
jbe
or
push
jne
sbb
push
pop
je
aam
jecxz
and
repnz
and
scas
icebp
aas
jge
sarl
int
mov
filds
sti
dec
fdivr
fldl
jo
mov
add
or
adc
inc
pop
sbb
jecxz
dec
ja
sub
pop
jo
or
insl
cmp
ljmp
and
mov
and
lods
mov
popa
pop
decl
pop
lods
movsl
movsb
loopne
aaa
push
in
fwait
mov
mov
xchg
add
cmc
add
iret
jmp
daa
mov
push
idivb
cmp
dec
and
cli
push
jno
or
push
pop
in
lods
mov
lret
adc
hlt
push
daa
or
out
jmp
ljmp
mov
xchg
cmpsl
scas
mov
rcrl
enter
in
cli
cltd
stos
ja
mov
push
mov
cmpsb
fbld
sub
add
leave
stos
cmc
jb
push
xchg
jmp
mov
jno
push
pop
rolb
jo
jmp
into
xchg
adc
ret
sbb
mov
out
scas
mov
mov
mov
test
jae
sahf
xor
sbb
jne
push
sub
or
adc
mov
cld
test
in
add
dec
fsubs
jle
or
or
dec
divl
jmp
call
dec
push
js
and
in
fcmovne
inc
js
or
xor
mov
iret
mov
inc
scas
dec
fwait
lcall
push
shlb
mov
push
push
xchg
pop
stc
test
mov
scas
inc
push
sub
jge
popf
lods
imul
sub
pop
xchg
sub
sbbl
add
push
in
dec
hlt
dec
xchg
xor
orl
cmp
push
mov
or
shll
xor
jge
inc
lahf
ss
cmp
movl
mov
jmp
adc
push
data16
scas
flds
or
insl
cltd
ret
cwtl
loopne
ds
test
pop
sbb
fdivs
and
or
fs
xor
mov
lea
pushf
je
mov
sahf
outsb
fs
xchg
dec
lahf
pop
outsl
mov
pop
inc
dec
call
mov
fsubp
addr16
insb
ss
mov
ss
aaa
xor
xchg
mov
pop
scas
pop
jbe
cmp
dec
cwtl
lock
mov
sahf
jno
mov
mov
mov
cmc
imul
push
sub
in
fwait
xchg
mov
mov
mov
add
pop
sub
mov
push
jbe
jg
inc
mov
adc
mov
inc
ja
and
divb
ljmp
std
inc
sar
push
subb
or
sbb
xchg
mov
or
incl
or
js
xchg
jo
icebp
dec
mov
sbb
adc
mov
sub
fs
pushf
popa
repz
adc
push
cmp
pop
aaa
pop
rcll
out
ds
adc
sub
adc
or
aad
or
pop
into
in
pop
cwtl
or
pop
cmp
lods
test
adc
adc
arpl
cmpsl
mov
push
das
dec
xlat
cld
and
insl
mov
test
outsl
xlat
sbb
insl
sub
cmp
movsl
mov
pop
je
inc
cmp
mov
rcrb
daa
sbb
jge
das
ficoms
testl
jo
mov
push
mov
pop
jo
xchg
adc
xor
push
jl
xlat
fistl
stos
scas
jle
inc
push
dec
cmpl
dec
bound
outsb
dec
push
ficompl
pop
inc
sbb
push
jp
jae
shl
movsb
mov
jge
sub
andl
push
ss
insl
lret
fwait
mov
cld
lcall
loopne
imul
ret
shlb
psubusw
dec
or
pop
adc
adc
xchg
faddl
sub
scas
inc
cltd
cmc
mov
sbb
xor
mov
xor
mov
xlat
idivl
xchg
or
out
or
push
mov
pop
sub
dec
lret
mov
inc
ret
and
movsl
sar
sbb
andb
jb
lea
outsb
int
and
imul
sbb
push
out
jo
inc
leave
xor
jnp
imul
dec
pop
push
push
int
shlb
cltd
vmovss
dec
inc
ds
mov
mov
mov
loopne
test
push
mov
loope
repnz
in
repz
mov
std
adc
emms
and
xor
out
sub
stc
mov
xchg
lahf
xor
add
adc
dec
dec
xor
cmc
ret
mov
or
pop
push
je
or
test
testb
dec
negb
aad
push
mov
inc
lods
inc
ds
xchg
movsl
jle
fdivrl
xorl
sbb
das
lea
bound
and
hlt
sbb
lds
xor
mov
scas
sbb
push
mov
scas
ss
push
xchg
in
ss
xchg
jp
test
mov
xor
or
testl
dec
roll
filds
rcr
sarl
xchg
mov
fs
ljmp
ficoms
push
inc
ss
pop
lods
cmp
sub
in
das
or
pop
mov
cmp
orl
repnz
mov
imul
dec
pop
inc
mov
int
cli
stos
inc
pop
jp
mov
mov
mov
cmpsl
bound
push
sub
insb
fisttps
icebp
stos
inc
pushf
cmp
xchg
push
or
jno
pop
mov
sub
pop
mov
popf
add
repz
cwtl
std
jnp
cmp
not
xchg
adc
imul
add
stos
xchg
pop
int3
add
inc
inc
mov
sbbl
fcompl
decl
mov
scas
in
fisttpl
data16
arpl
add
pop
data16
out
icebp
js
add
in
adc
iret
ljmp
and
aaa
cltd
ret
daa
in
push
ret
sbb
mov
icebp
mov
dec
shlb
xor
dec
push
sbb
mov
cmp
push
mov
or
mov
adc
xlat
mov
pop
sbb
adc
mov
cld
imul
stos
mov
push
mov
call
adc
xor
inc
gs
sbb
sub
mov
test
mov
cs
out
scas
test
lock
push
jmp
leave
pop
aas
in
pop
enter
jne
jne
mov
jl
sbb
push
inc
xchg
adc
inc
mov
xor
ret
nop
lds
dec
pushf
sbb
sbb
idivl
adc
data16
push
mov
sub
rclb
mov
fstps
cltd
das
int
lea
lods
js
or
xorb
std
aam
or
out
insb
adc
lds
xor
dec
jmp
adc
pop
mov
in
lahf
out
adc
cld
cmpsb
jns
enter
dec
jg
xor
dec
mov
mov
leave
jne
xor
mov
clc
fimull
xchg
iretw
popf
xchg
mov
repz
xchg
lds
dec
jmp
jo
insl
xchg
dec
imul
outsl
and
int3
clc
jecxz
mov
hlt
pop
xor
cmp
in
push
xor
ret
jo
gs
mov
push
xchg
test
mov
cli
out
pop
dec
insb
pop
lret
pop
adc
pop
std
dec
lds
push
leave
lea
dec
push
mov
push
pop
push
hlt
cmpsl
dec
rcrb
dec
dec
rcr
push
pop
pop
in
jnp
in
cmp
cmc
push
jne
sbb
leave
dec
xor
and
lods
jns
sub
pop
push
sub
repz
sbb
mov
xchg
out
add
bnd
unpcklps
loop
push
xor
mov
mov
mov
jae
sahf
jl
femms
push
fwait
sbb
hlt
xchg
into
cli
nop
mov
jb
pushf
xchg
mov
adc
not
rcrl
dec
xor
repnz
push
aad
icebp
lea
push
mov
or
add
lds
push
adc
ljmp
stos
jne
and
jo
mov
repnz
push
adc
sbb
xor
inc
pop
sub
adc
sbb
jg
insb
iret
adc
fldl
fistpl
aad
rclb
in
dec
xchg
dec
adc
inc
filds
jae
adcb
dec
mov
in
cmp
lock
cltd
mov
in
fldl
mov
movsl
rorl
mov
push
pop
mov
shr
xor
mov
leave
lods
add
and
cwtl
add
adc
add
movzwl
stos
arpl
inc
paddw
add
icebp
add
call
lret
pop
subb
fnstcw
xor
ficompl
mov
test
mov
xchg
add
sub
sbb
das
xchg
dec
mov
test
adc
inc
push
outsl
jmp
imul
inc
jl
push
popa
mov
push
mov
mov
inc
adcl
loopne
adc
xchg
dec
jg
add
jecxz
into
push
dec
inc
ret
dec
jb
xchg
pop
pushf
iret
fs
sbb
insl
add
or
add
into
xor
mov
sbb
jnp
adc
mov
add
add
lret
js
mov
jne
mov
out
inc
pop
cmp
xlat
shrb
mov
jb
sahf
jnp
stc
outsb
shrb
stc
loope
mov
out
mov
push
stc
repz
bound
and
movsb
pop
test
mov
mov
mov
push
popa
icebp
fimull
mov
stos
mov
cmp
faddl
repz
cli
fnsave
push
add
mov
sbb
xchg
mov
rorb
or
mov
jo
mov
mov
jecxz
inc
cmp
cmp
out
cmp
int
cmp
xlat
mov
jmp
cmpsl
xchg
jg
mov
aad
inc
imul
mov
mov
xlat
pop
hlt
lret
cmpsb
push
adc
dec
setae
jns
pop
mov
sar
sbb
aam
inc
mov
mov
lea
mov
movsl
dec
popf
inc
mov
adcb
pop
shll
sub
out
arpl
push
mov
push
nop
idivl
mov
and
xchg
pop
subb
aam
mov
stc
test
inc
inc
push
fnsave
incb
xor
pop
pop
mov
sti
fnsave
sbb
mov
adc
std
inc
cld
lcall
jno
out
into
sbbl
ret
in
movsl
stc
mov
mov
and
xchg
call
pop
push
xchg
xor
xor
dec
repnz
orl
mov
divb
gs
jne
xchg
cmp
fs
hlt
ror
pop
xchg
repz
xor
push
or
andb
sbb
xchg
jns
xchg
loopne
outsb
inc
push
jns
and
ret
ja
cmpsl
push
add
cmpsb
sbb
les
rorl
adc
jbe
aaa
push
inc
cmp
xchg
dec
popa
repnz
xchg
inc
xchg
adc
psubsw
add
push
sub
pushf
pop
jae
test
add
sub
xchg
or
shll
mov
in
lds
cmp
in
test
cltd
hlt
loope
fiadds
inc
add
js
repnz
sbb
std
add
sbb
fisttps
jnp
and
xchg
fcomps
test
xchg
mov
cltd
aam
bound
inc
push
mov
and
push
sub
or
fstl
into
cld
js
jnp
push
js
push
mov
sub
cwtl
fisttps
mov
add
bound
lcall
in
icebp
fidivrs
adc
inc
rcl
dec
rol
test
xchg
inc
cmp
subl
xor
and
or
stos
cli
negl
push
mov
outsb
ja
jge
mov
popl
lea
std
push
das
inc
pop
test
dec
shrb
cmp
outsb
lea
dec
sbb
pop
mov
pop
shll
stos
inc
insb
in
insb
leave
sbb
xor
lods
or
repz
cld
into
sub
inc
fisttpl
inc
mov
imul
dec
add
aad
inc
mov
fucomp
shlb
rolb
or
es
loop
fwait
xchg
push
cmpb
cmp
out
sbb
xchg
and
xor
repz
inc
mov
and
xchg
inc
nop
push
push
cmp
inc
fisubrs
lahf
jae
arpl
mov
das
shlb
mov
adc
and
dec
mov
dec
shll
incb
inc
test
in
shlb
push
decl
or
fcompl
inc
in
les
inc
rep
imull
popf
loopne
das
push
and
enter
mov
mov
addb
loopne
dec
fs
xor
mulb
pusha
push
stos
icebp
ljmp
ljmp
fdivrs
push
fimull
lds
sti
aad
adc
jns
dec
or
subb
jmp
mul
call
cltd
pop
push
add
mov
sub
dec
inc
je
sbb
test
push
subb
adc
dec
scas
iret
sbb
sti
add
inc
mov
mov
adc
scas
lcall
mov
xchg
dec
out
mov
xor
jae
xchg
ret
out
push
cltd
sbb
fbld
dec
movsl
pop
mov
fwait
inc
pmaxub
call
sub
stos
out
mov
mov
enter
ss
or
fsubrl
mov
mov
loope
adc
push
pop
sbb
pop
out
jmp
sub
mov
push
gs
xor
je
mov
lahf
mov
mov
and
mov
add
sarb
jnp
dec
dec
sbb
mov
lret
cmp
push
or
out
xchg
pop
sti
cmpsl
insb
jno
sbb
mul
clc
imul
rcrl
adc
sbb
dec
inc
xor
inc
mov
xlat
in
call
inc
cmp
test
xchg
jle
sarl
mov
fnstcw
int3
lcall
jae
jne
add
imul
lods
ss
sub
inc
mov
into
das
mov
call
les
leave
mov
dec
cmc
cmpsb
scas
loope
fildll
test
add
movsb
mov
popa
jb
and
xchg
mov
imul
add
xchg
cmpsb
popf
or
mov
dec
sbb
lret
test
iret
addr16
movsb
and
jne
sub
and
mov
sub
dec
sub
enter
ss
cmp
or
jbe
pop
sub
aad
and
adc
sub
adc
in
incb
repnz
xchg
xor
dec
leavew
xchg
dec
aad
aaa
mov
push
jnp
hlt
mov
mov
add
sbb
xorps
or
lret
xor
cmp
xchg
rcrl
repz
mov
leave
test
jmp
stos
mov
mov
inc
adc
lods
pop
pop
xor
pop
dec
sti
adc
hlt
pop
in
vcvttsd2si
adc
in
or
pushf
stos
xor
into
aam
mov
or
xchg
orb
sbb
ret
cmp
mov
cmp
dec
mov
sbbl
dec
xor
mov
jmp
enter
pusha
mov
addr16
leave
xchg
aas
mov
fwait
adc
ret
scas
mov
or
cmp
out
cld
sub
icebp
mov
xor
imul
sub
incb
aas
addr16
dec
sub
or
dec
cli
mov
sub
or
fucom
xchg
sub
inc
movsb
mov
xor
sbb
jg
ret
jb
aad
in
test
sbb
pop
add
lods
dec
out
and
lcall
mov
mov
mov
add
jmp
adcb
pop
or
or
and
mov
inc
push
sbb
les
xchg
jo
dec
jp
aas
inc
adc
jge
add
mov
jecxz
cmp
mov
jge
adc
or
test
dec
scas
popa
jb
adc
jae
inc
push
stos
cli
inc
int3
cmp
pop
jo
mov
sbb
rcr
loope
in
movsb
xchg
ret
clc
dec
pushf
ret
jp
xchg
cmpsl
mov
cmp
xchg
mov
stc
xor
lcall
or
inc
ds
loope
into
dec
dec
pop
orb
shr
jmp
xor
add
pop
adc
pop
addr16
icebp
jge
pop
mov
xor
loopne
stos
cmp
lods
and
inc
inc
xchg
addb
enter
aas
dec
xor
shlb
xor
test
inc
jecxz
test
arpl
stc
cli
faddl
inc
daa
and
or
mov
shrl
ss
mov
push
lcall
iret
out
negl
mov
enter
sbb
and
sbb
add
imul
pushw
push
push
inc
push
stos
enter
scas
lock
or
outsl
lds
cmp
add
sti
mov
lret
lods
int
dec
sti
mov
cmpsb
sub
and
adc
cltd
sub
popf
dec
push
mov
add
or
cltd
mov
sti
loopne
nop
or
cld
sti
into
mov
mov
xchg
inc
mov
or
mov
sub
call
xchg
xor
call
dec
fisubs
sbb
xor
rcr
into
xchg
xor
mov
shll
jle
dec
cmp
lods
cmp
sbb
mov
dec
scas
stc
fdivrs
xor
out
rolb
cmpb
inc
mov
push
inc
sub
outsb
test
daa
ret
stos
cwtl
push
ret
xor
into
inc
add
push
shlb
cmp
cmp
mov
out
and
cld
movsb
mov
dec
scas
in
sti
pop
push
jns
inc
loope
sbb
xchg
shl
and
cmpsb
push
in
sub
cmp
lods
push
mov
cli
xchg
shll
inc
pusha
sub
push
sbb
fldenv
and
and
clc
fwait
and
push
mov
sbb
xchg
filds
lea
cmc
insl
fidivl
adc
xchg
gs
or
out
aad
adcb
push
js
mov
sbb
cmp
int3
adc
sahf
sbb
xchg
dec
pop
sbb
sbb
or
cmpsb
cmc
sbb
pop
out
loopne
mov
int
ror
push
inc
lds
shl
push
cmc
mov
mov
push
cli
scas
pop
inc
mov
ja
mov
shll
mov
lods
ret
cmpsl
add
dec
test
shl
fidivrl
ja
mov
aaa
cmpsl
jg
sub
push
sbb
mov
mov
lret
test
jge
and
lods
in
or
popf
pop
pop
push
xchg
inc
mov
lea
popf
mov
out
iret
mov
shl
sarl
cmp
arpl
pop
push
mov
mov
add
xor
pop
cwtl
aas
cmp
mov
movsb
clc
xorb
jno
sbb
fucomip
mov
pop
lods
dec
sub
test
inc
aad
lods
push
lds
dec
inc
inc
repnz
mov
push
outsb
cltd
je
sbb
gs
enter
repz
lods
and
xchg
and
ja
pusha
and
fcomi
lods
push
add
stc
pop
xchg
icebp
sarl
repz
shl
int3
daa
negl
mov
in
js
jb
cmp
xchg
xchg
mov
popf
aaa
mov
frstor
cmp
loope
scas
pop
out
loop
aam
ret
ror
pop
mov
mov
fdiv
hlt
pop
sbb
out
or
cmp
shll
mov
outsl
int
js
dec
mov
or
daa
aaa
icebp
jae
shll
mov
push
fdivr
mov
push
mov
lcall
pop
jb
scas
adc
imul
jae
fs
lret
mov
add
mov
sub
mov
test
mov
jl
or
mov
jnp
insl
imul
les
lods
mov
incb
inc
das
loopne
sub
leave
xor
and
sub
enter
adc
in
pop
and
mov
fistps
imul
push
mov
dec
aas
dec
mov
sbb
mov
xchg
pop
mov
inc
loope
sbb
jge
pusha
fcoml
add
loopne
inc
notl
pop
mov
jo
and
mov
mov
sub
dec
test
lret
jl
dec
adc
inc
xor
push
mov
jnp
cmp
jge
push
cmp
mov
add
lock
cli
cltd
mov
mov
bound
push
and
or
test
cmp
push
cmp
mov
fidivrs
push
popa
lock
pop
ret
inc
push
xchg
loopne
ja
pop
ret
push
lcall
das
adc
mov
pop
mov
subl
jmp
xchg
xchg
arpl
pop
jmp
jle
push
fnstenv
vpsubsw
lea
xor
shrb
sbb
add
pop
sbb
adc
xor
jmp
mov
cld
adc
movsl
std
lods
add
xor
jbe
sbb
push
outsl
stos
sbb
icebp
mulb
push
cltd
fisttpll
pop
or
iret
int3
mov
test
cwtl
add
inc
in
mov
icebp
into
sub
and
jle
js
rcrb
jle
sahf
pop
sbb
fimuls
cmp
mov
pop
mov
push
iret
sbb
aas
xchg
jbe
insl
lock
adc
pop
sbb
loopne
shr
sub
insl
xchg
add
adc
push
push
jp
xchg
es
imulb
fldenv
outsl
sbb
dec
ds
mov
aam
inc
fmuls
mov
loopne
out
lret
pop
mov
mov
cld
lea
pop
jmp
sub
out
stos
jnp
ja
or
xor
push
ficoms
xor
lods
movsb
mov
adc
hlt
or
sub
and
ljmp
xor
add
mov
nop
xor
cmc
imul
repnz
sbb
pop
popf
xchg
sub
out
adc
dec
jnp
daa
bound
mov
jp
insb
and
add
xchg
xchg
adc
mov
scas
mov
shlb
out
xchg
mov
inc
push
pop
into
outsb
push
xchg
sbb
mov
mov
pop
sub
shr
cwtl
xchg
sub
pop
idivl
fwait
jbe
or
lcall
pop
dec
or
push
addr16
in
jg
inc
adc
fistps
xchg
test
cmc
jl
and
and
ds
ljmp
std
xchg
xchg
cwtl
je
or
inc
fwait
mov
cmp
sbb
xchg
call
mov
sysret
ja
clc
or
jecxz
adc
jne
lea
fists
jb
popf
cmp
or
sti
lock
fwait
cltd
sahf
fcmovb
stos
push
repnz
pop
push
pop
call
dec
fwait
jle
jae
inc
mov
mov
sbb
adc
push
lds
outsb
repz
mov
fmull
xor
inc
jo
dec
dec
push
dec
movsb
testl
mov
aam
insl
cmp
lahf
fdivs
ret
xchg
xchg
add
hlt
sub
xchg
in
xchg
xchg
addr16
cli
mov
leave
jb
ss
sbbl
or
in
push
mov
jecxz
xor
lret
jo
adc
lods
imull
addl
push
push
push
dec
cmpsl
data16
mov
sub
adc
nop
pop
mov
cmpsb
call
sbb
add
mov
inc
mov
adc
ror
mov
js
add
jmp
pop
loope
gs
dec
inc
rcl
fdivrp
dec
fiaddl
rcll
push
push
mov
mov
or
mov
fsubl
ds
jp
push
aas
lcall
ds
lds
rorl
ret
test
or
sbbb
sbb
mov
stos
enter
add
fldenv
inc
and
cmpsb
scas
loopne
xor
inc
and
pop
mov
fbstp
push
loopne
push
push
ret
xchg
ljmp
cmp
mov
or
add
adc
int3
clc
cmc
shrl
lcall
cmc
mov
or
add
lods
jle
jae
arpl
and
out
push
repz
std
cmp
ss
es
lock
dec
fdiv
dec
jne
add
sub
dec
xor
mov
andb
inc
lret
repz
pop
adc
leave
data16
inc
adc
push
js
jmp
mov
jecxz
push
lock
and
stos
mov
mov
cmpsl
sub
xchg
sub
iret
jecxz
arpl
decl
icebp
out
mov
call
ret
sub
xchg
enter
adc
and
addr16
fcompl
and
dec
sar
adc
cmpsl
ja
cmpsl
xor
jge
scas
sub
out
leave
fwait
push
push
adc
xlat
sbb
and
add
push
cmc
adcl
push
jae
cmp
or
add
popf
cmpb
hlt
int
lods
cltd
dec
cld
rorb
popf
mov
outsl
dec
mov
push
test
add
ret
imul
fs
fdivl
testl
inc
mov
mov
cmpsl
and
scas
add
cli
adc
push
add
jp
bnd
xchg
gs
into
push
addb
lods
adc
mov
adc
push
cmp
xchg
mov
sub
jecxz
mov
mov
cmp
jne
pop
push
out
popf
xor
aas
sbb
inc
lea
sbb
xchg
jo
pop
inc
pop
jmp
pop
cmp
out
sub
clc
dec
cmpb
xchg
xchg
movsb
adc
iret
scas
lcall
mov
arpl
xchg
insl
out
or
fs
jge
sbb
sub
into
inc
and
clc
mov
push
cmp
clc
push
inc
push
in
ret
and
daa
pop
mov
stos
loop
and
or
jp
pop
adc
xchg
stc
icebp
mov
sub
int
or
add
shl
xchg
dec
jbe
pop
in
into
jnp
cmp
icebp
sub
data16
adc
ret
sub
mov
lret
mov
scas
ret
mov
call
repz
int3
cmp
dec
and
or
movsl
popl
cmpsl
call
test
lds
hlt
or
adc
ja
js
fwait
rolb
cmp
inc
repnz
add
aad
adc
dec
lcall
mov
cmp
xchg
dec
add
pop
and
dec
push
xor
incl
loopne
or
push
test
push
jge
pushf
or
jns
sbb
inc
xchg
mov
push
add
push
test
push
sbbb
movsb
mov
pop
push
shll
push
loopne
mov
sbb
add
xchg
sahf
xlat
subl
rclb
or
icebp
fnsave
jbe
cltd
data16
mov
push
int3
xchg
dec
movb
fimull
xchg
imul
inc
mov
push
mov
insb
roll
jns
add
add
pop
test
outsb
pop
dec
lods
xchg
lret
dec
stos
enter
aaa
add
xor
negb
adc
fwait
sub
int3
imul
sarl
add
cmp
ror
int3
out
loope
repnz
mov
inc
jecxz
dec
jb
sar
cld
add
stc
js
shufps
sub
cmc
push
in
cmp
divl
dec
stos
push
gs
cmp
aas
dec
iret
xor
cmp
cs
xor
pop
jae
loop
ljmp
or
inc
push
sahf
xchg
and
inc
insl
sbb
fwait
mov
xchg
scas
fidivl
dec
mov
mov
xchg
xchg
lahf
push
aas
ds
mov
push
loop
mov
in
sub
nopl
jge
push
loopne
aaa
mov
inc
push
adc
adc
mov
dec
adc
stos
int3
dec
add
filds
adc
out
push
aas
das
inc
mov
pop
fsubl
pop
push
insl
sbb
xchg
gs
xchg
add
je
adc
inc
push
jge
fs
jmp
mov
lret
cwtl
sub
mov
xor
push
pop
xlat
push
sbb
mov
mov
inc
adc
pushf
cs
push
inc
inc
push
mov
lahf
fstl
jp
xchg
jecxz
jecxz
adc
cld
jmp
mov
mov
aas
clc
xor
ret
daa
test
jg
or
aas
jae
jle
call
dec
xor
adc
fs
cmpsb
sub
sub
push
inc
pop
pop
stos
and
or
imul
insl
es
cmp
jbe
enter
mov
js
lock
outsl
push
in
inc
bound
in
test
repnz
cmp
sub
mov
sbb
pop
jbe
inc
shrb
fnstcw
lds
lret
dec
nop
lret
popf
dec
inc
mov
adc
ret
push
jg
lret
iret
push
xor
jge
aad
xchg
xchg
cmp
dec
adc
cmpl
in
sbb
jmp
cltd
mov
adc
ljmp
and
push
aam
or
mov
inc
mov
sub
xlat
das
fninit
sbbl
bound
jge
std
sar
ds
fdivs
mov
adc
aaa
imull
inc
jl
loopne
lds
mov
xchg
xlat
lods
in
orb
push
mov
icebp
insb
cmpsb
jmp
xchg
dec
mov
into
mov
jl
sarl
mov
cli
push
xchg
mov
jb
lret
xchg
jmp
mov
test
cmp
xchg
nop
dec
std
and
or
in
in
daa
adc
cmc
out
sti
pop
mov
cmp
rcrl
pop
mov
sub
ss
pop
icebp
xor
lahf
daa
xlat
shlb
std
or
push
or
sti
subl
pop
mov
xor
sbb
dec
or
out
or
cltd
and
adc
rorl
ret
dec
test
mov
jb
jno
xchg
push
xchg
dec
inc
xor
dec
inc
call
dec
jno
aad
scas
test
sbb
cmp
out
dec
idiv
int
test
add
mov
test
mov
mov
jl
int
lahf
jae
xchg
adc
cli
dec
push
loop
jl
gs
mov
lds
or
icebp
inc
push
mov
pop
fs
lods
ss
int
xor
jp
dec
inc
shll
dec
xchg
mov
fwait
in
or
xor
sbb
outsl
outsb
mov
and
mov
int
orb
into
adc
das
xchg
mov
xchg
mov
test
bound
lret
add
jbe
and
lret
dec
and
push
cs
inc
jge
cs
js
xor
mov
and
notb
jo
je
pop
mov
mov
pop
mov
les
and
pop
arpl
rcr
pop
icebp
cmp
pop
bound
jbe
jae
cmpsb
js
jne,pt
fsub
in
test
ja
daa
mov
outsb
std
xor
mov
cmp
nop
push
lds
push
push
jne
jns
jae
xchg
or
popa
nop
idivl
mov
shlb
dec
test
cwtl
imull
mov
aam
ja
cmp
test
lret
pop
jo
xlat
lea
sub
frstor
fcmovbe
push
ffree
out
enter
pop
shlb
push
xorl
loop
in
aaa
cli
xchg
subl
mov
sahf
data16
mov
loope
test
sbb
sub
dec
outsl
fsubr
popa
inc
and
cmp
add
add
das
mov
scas
popf
test
jmp
add
std
sbb
pop
mull
shll
xor
stos
pusha
push
dec
jbe
xchg
out
sbb
xor
cmp
and
cld
mov
lds
ret
cld
and
in
repnz
pop
scas
xor
mov
std
pop
mov
popa
test
mov
fcmovbe
popf
push
mov
jno
mov
mov
xchg
mov
lea
cs
mov
mov
cmp
adc
inc
mov
xor
inc
inc
inc
in
mov
sbb
sub
es
ss
xchg
stos
dec
fwait
sub
lret
adc
ds
dec
rcrl
mov
push
xor
inc
adc
xchg
inc
xchg
into
sub
stc
mov
addl
pop
ja
push
pop
test
bound
pop
xor
sbb
jne
cmp
fldl
idivl
cmc
jecxz
inc
cmp
pop
aad
jns
mov
mov
jbe
xor
lret
aaa
stc
xchg
sub
sbbl
stc
sub
sub
in
out
jecxz
subb
push
pop
jmp
leave
cmpb
xchg
jbe
pop
mov
dec
jmp
push
frstor
push
test
rcrl
iret
sub
sbb
in
cmpsl
movsl
aas
scas
dec
sub
pop
loopne
and
sti
idivb
jne
arpl
push
and
pop
or
inc
push
dec
cmp
bound
rol
push
stos
mov
aam
sub
pop
jb
push
push
test
and
mov
dec
adc
pop
push
jecxz
lret
push
cld
push
dec
mov
addr16
sarb
sbb
lcall
xchg
daa
int3
or
dec
ss
push
sub
lock
repz
mov
pop
fstpt
stos
jmp
cmp
push
mov
nop
mov
pop
in
stc
cltd
cld
imul
jmp
fldenv
xor
sub
lock
dec
cmc
pusha
shll
stos
add
xorl
or
pop
lds
or
add
std
add
xor
dec
add
jne
mov
hlt
dec
mov
xchg
adc
push
inc
jg
jo
sub
imulb
leave
imul
sub
mov
fwait
mov
mov
pop
cmc
sbb
shlb
icebp
fwait
mov
xor
and
xor
adc
mov
daa
dec
popa
push
inc
into
out
mov
xchg
add
stc
rcr
loopne
mov
es
inc
jns
sbb
or
lcall
loopne
roll
lahf
push
mov
push
movsl
lds
or
pop
das
adc
xor
call
cwtl
lahf
cmp
test
ds
gs
ds
cmp
mov
outsb
or
ja
cmp
mov
lahf
push
xor
enter
sbb
jp
test
adc
jb
mov
xchg
dec
dec
in
out
bound
sarb
sbb
loopne
fadds
or
add
mov
orl
fiaddl
pop
adc
ret
inc
or
jg
pop
xlat
out
or
lock
insl
rolb
enter
stos
fildl
movsl
xor
out
loop
cmp
dec
imul
pop
mov
fwait
subl
sbb
lret
cmp
jle
sub
int
rcll
cmp
mov
lret
push
mov
pop
scas
jb
stc
bound
jnp
and
int3
pushf
xor
jbe
lret
push
leave
add
sbb
push
int
test
push
inc
jbe
add
cs
in
sbb
mov
push
fcmovne
sbb
dec
and
dec
stc
sub
jnp
or
ficoms
push
jmp
clc
lret
arpl
xchg
xchg
lcall
ret
mov
xchg
jae
inc
mov
pop
fs
push
cmc
and
bound
out
sbb
cs
notl
lds
out
in
mov
mov
sbb
jge
fsts
aas
std
lret
push
fidivrl
loop
mov
jmp
idiv
icebp
mov
in
fdiv
mov
and
inc
mov
push
iret
lods
adc
test
push
out
mov
hlt
cmpsl
push
out
testl
jns
jne
sub
leave
dec
cvttps2pi
insb
enter
mov
repz
sub
adc
jl
div
push
mov
jp
div
push
std
sbb
lea
push
insl
ds
fbstp
int
push
dec
xchg
mov
es
or
jnp
sahf
cmp
jo
clc
orb
add
mov
into
fsqrt
ficomps
or
xchg
xchg
and
jge
std
cmp
cs
fisttps
push
clc
es
adc
fsubrl
sbb
pop
bsr
add
outsb
mov
push
sbb
stc
xor
enter
and
mov
sbb
outsl
pop
cmpsl
sub
stc
es
mov
scas
push
or
adc
cltd
sbb
or
hlt
out
sbb
mov
push
insl
fldl
xor
inc
cmp
cwtl
mov
aam
arpl
lods
sub
mov
dec
pop
sbb
call
mov
push
repnz
inc
rcll
push
push
sahf
jg
push
or
xchg
es
jne
movsb
test
fs
jecxz
aad
stc
sub
or
adc
add
lock
ds
xchg
or
lods
int3
xchg
das
scas
dec
stc
das
shll
dec
fldcw
fucomip
repz
or
repnz
mov
cmp
lods
mov
clc
insb
out
cltd
arpl
shr
movsl
icebp
rorl
bound
xchg
mov
push
pop
in
pop
or
cmc
ds
testb
jmp
mov
in
cmp
mov
xchg
sbb
and
sbb
out
ret
sub
movsl
std
xchg
out
mov
bound
inc
pop
std
jo
lret
pop
sbb
mov
adc
push
pop
nop
xchg
aas
pop
aaa
aam
fmul
dec
add
aam
push
out
out
mov
push
stos
iret
push
into
fidivrl
pop
ficompl
aaa
push
loop
push
cmp
pop
pop
jmp
sub
cmc
fdivrs
add
dec
push
jae
adcl
cmp
rolb
test
jo
mov
repnz
sub
mov
add
ror
fmul
negl
inc
inc
ss
aaa
test
testb
add
shr
mov
in
leave
mov
mov
sbb
sar
xorb
pop
fimuls
or
sub
mov
fdivrl
or
call
ljmp
xor
repnz
xor
mov
sbb
loop
mov
mov
inc
inc
xor
movzbl
pop
cmpb
sub
roll
scas
xor
icebp
js
test
jl
push
fs
pop
ret
cmpb
inc
add
push
daa
cmp
mov
adc
aam
mov
push
cld
inc
add
dec
mov
pop
je
subl
fistps
sbb
push
push
inc
push
inc
mov
in
dec
in
inc
jae
int
or
repz
and
fsubs
and
cwtl
je
test
inc
ds
aas
sbb
sub
mov
mov
add
loope
lret
xor
incb
popf
push
dec
inc
jp
adc
lret
daa
je
subl
ret
enter
mov
jecxz
jns
sbb
ss
cmp
pop
pop
frstor
pop
pop
push
insl
les
add
mov
popf
clc
xchg
movsl
shr
mov
adc
dec
xor
subb
push
fsub
sbb
and
lds
xor
ret
shlb
idivb
add
jne
sub
divb
pop
dec
push
push
repnz
mov
push
loopne
pop
mov
lea
jecxz
add
xlat
sbb
dec
dec
pop
dec
scas
imul
adc
cwtl
fiadds
inc
mov
push
out
lods
and
cmp
push
mov
je
push
mov
insb
mov
lret
ljmp
jbe
movsb
out
pop
and
or
xor
in
xchg
sahf
mov
mov
push
les
or
mov
enter
js
mov
popa
jb
outsb
adc
fsubrl
cs
mov
int
js
xor
mov
adc
lcall
sbb
cltd
fs
mov
add
and
inc
notb
xchg
dec
adc
jae
lods
cmp
lcall
vpsubq
and
sbbl
dec
leave
pop
jb
popf
fisttpll
or
arpl
aaa
fnstsw
or
sbb
pushf
fsubrs
movsb
cwtl
dec
mov
push
xor
imul
out
insb
aaa
outsl
lret
dec
mov
cltd
insb
jno
test
pop
orb
shrb
shll
push
test
push
rorb
fcmovnb
adc
or
scas
jbe
out
add
push
fwait
xor
aas
test
shll
clc
push
je
inc
and
sub
push
inc
ja
imul
push
jb
aaa
pushf
xchg
out
push
pop
pop
fstl
icebp
je
shll
dec
inc
ljmp
xchg
stos
jg
xchg
mov
dec
adc
jae
fs
lcall
shlb
stos
andb
stos
push
or
iret
stos
shrl
sub
mov
xor
notb
aaa
jb
leave
push
xchg
mov
inc
fs
icebp
sbb
gs
xchg
iret
push
xchg
xlat
push
or
aaa
inc
add
dec
dec
icebp
xchg
bnd
dec
ret
repz
xchg
in
enter
add
jl
sbb
xchg
jle
sub
aas
test
xchg
lock
fnstcw
sub
mov
cmc
xchg
add
dec
out
and
push
mov
cmp
mov
imul
lock
xchg
jnp
adc
les
jno
fsts
adc
imul
cmp
flds
hlt
jl
push
dec
fwait
jmp
xchg
int
xchg
ffree
push
mov
imul
mov
or
fwait
lea
nop
mov
cmpsb
push
push
pop
push
aas
nop
fucom
push
push
mov
lea
pop
push
cmp
icebp
and
lahf
sbb
push
rolb
xor
push
xchg
and
popf
or
cmp
pop
cld
lea
push
push
sub
or
xor
jge
add
mov
jo
fs
out
or
xlat
pop
test
or
aaa
std
or
push
ret
fidivs
rcrl
leave
or
mov
leave
imul
sbb
sub
enter
dec
addr16
pop
mov
out
lock
jns
pop
insl
movsl
fdiv
or
sbb
pop
and
push
lods
jbe
xchg
jno
add
and
or
cwtl
xor
lods
mov
mov
sbb
out
pop
mov
lods
stos
pop
test
jmp
or
add
push
std
sub
adc
into
orb
pushf
and
sbb
lods
mov
mov
xchg
xchg
loopne
xchg
mov
dec
xor
mov
jo
dec
scas
mov
xchg
dec
outsb
ret
in
dec
pop
or
xlat
flds
sbb
mov
xchg
rolb
nop
or
add
jns
dec
xor
jno
test
mov
sti
ss
push
les
dec
test
int3
rorl
outsl
fs
roll
xchg
inc
push
and
or
push
or
call
lahf
cld
sub
es
and
jge
daa
shrb
adc
or
jg
adc
shlb
mov
bt
pop
jg
shrl
add
ret
gs
sti
sbb
and
mov
test
imul
scas
push
ja
cmp
test
clc
loopne
in
mov
bound
dec
mov
movsb
mov
shrb
push
loop
pop
jge
mov
sbb
shll
and
xor
lods
ss
repnz
add
mov
mov
fldenv
xchg
insl
shlb
pushf
lret
or
fadd
push
aad
mov
xchg
mov
cmpsl
mov
rol
ja
push
ljmp
pop
cmc
xchg
ljmp
ret
mov
out
jno
outsb
or
jle
lods
in
mov
xchg
mov
mov
popf
push
push
shlb
addr16
xor
cmp
mov
jg
lret
test
sbb
pop
shl
ret
xor
and
or
imul
xchg
cmp
adc
mov
mov
xchg
repz
sub
scas
daa
and
pusha
mov
pop
pop
add
add
adc
jp
xor
pusha
adc
addb
aam
cmp
and
xor
push
outsb
cld
cmp
sarb
lea
or
std
cmc
dec
imul
add
sbb
lret
sbb
imul
js
push
sahf
and
jnp
jns
and
movsl
dec
mov
lods
repnz
and
add
mov
adc
lds
mov
mov
mov
dec
sti
jp
std
pop
out
call
mov
fs
push
jge
mov
and
icebp
pop
mov
loop
pop
insb
sbb
dec
mov
mov
popf
cmp
pop
dec
cmp
ret
in
cwtl
fidivs
inc
pop
xor
mov
jecxz
cmpsl
push
mov
jecxz
sub
mov
push
lret
jle
out
sub
negb
mov
cli
nop
ret
iret
icebp
jno
movsl
lds
les
pop
sub
add
add
xlat
sqrtps
push
adc
mov
or
cmpsl
or
stos
arpl
or
mov
repz
fisubrs
jb
popf
mov
xchg
jb
dec
divb
or
decb
mov
scas
mov
cmp
dec
aas
cltd
adc
stos
mov
xor
das
inc
repz
sarl
push
popa
call
mov
jae
cmc
test
enter
jb
sarl
stos
fdivrs
mov
jmp
pop
fisubrs
push
mov
lds
jbe
pop
stc
lret
or
sbbl
push
lret
cli
sub
adc
loopne
jno
and
in
fdivl
popa
add
or
or
mov
aaa
add
sbb
mov
adc
imulb
mov
inc
jmp
sub
pusha
les
mov
push
pop
push
mov
dec
push
fcmovne
sbb
scas
pop
sbbl
es
jge
ret
mov
and
sbb
pop
popa
popa
jbe
xchg
adc
inc
je
xchg
ret
pop
xchg
das
filds
lods
dec
mov
dec
jmp
sub
out
in
mov
lahf
dec
mov
xlat
and
ret
std
xchg
movups
pushf
rcl
test
push
arpl
rol
scas
ror
add
xor
sub
mov
pop
std
mov
adc
popa
fisttps
loope
xchg
les
icebp
daa
mov
divl
pop
xchg
xor
and
stos
jge
loope
enter
sbb
lahf
test
test
jb
or
daa
orb
or
sbb
mov
inc
adcl
cmpb
dec
sub
add
mov
jnp
lock
push
cmp
rol
and
and
add
aas
cmp
pop
cmp
dec
sahf
xchg
xchg
cmp
ljmp
sub
mov
ret
jns
push
lds
sub
rcll
or
nop
nop
into
fsts
lahf
mov
or
into
xchg
pop
or
test
pop
fs
push
mov
test
mov
sub
test
inc
cmp
arpl
scas
popf
add
mov
pop
add
jne
sarb
jmp
add
cmp
push
mov
sarb
cmp
sbb
sti
jge
xor
xor
mov
mov
sbb
cmp
adcb
lret
adc
jae
mov
int3
adc
inc
add
inc
xlat
jae
iret
jae
pop
sahf
aaa
dec
add
push
inc
repz
icebp
cwtl
enter
or
inc
push
stos
or
bound
dec
repz
mov
daa
pop
push
sarb
shll
repz
mov
xchg
inc
in
outsl
mov
rolb
add
ficompl
mov
push
lods
mov
cli
fisttps
mov
scas
adc
push
adc
mov
or
sbb
fadd
call
jg
int
pushf
hlt
inc
jo
adc
fimull
das
sub
push
cltd
inc
inc
out
dec
clc
std
pop
mov
push
cmc
mov
neg
bound
sti
nop
mov
mov
sbb
push
cmp
stc
insb
and
pop
push
insl
add
out
cmp
push
std
std
out
cltd
push
xor
rcrb
mov
xchg
out
int3
mov
es
mov
pop
shlb
aaa
aaa
adc
call
std
js
rorb
or
enter
loop
clc
sbb
and
adc
lret
ljmp
call
adc
push
decl
ljmp
rorb
adc
cmp
mov
loop
rcrb
popa
xchg
jb
adc
pop
pop
ret
enter
sub
aad
sub
pushf
mov
xor
ljmp
jecxz
push
repnz
insl
push
in
push
push
in
movsl
jne
sbb
stc
cmp
fmuls
cmp
mov
xor
sub
jbe
sub
loope
stc
insl
mov
and
add
lahf
sbb
mov
sbb
aas
pop
xorb
sub
jne
jae
jbe
pop
and
sub
xchg
enter
cmp
stos
push
jae
fs
xor
movsb
cld
addr16
jl
xchg
jmp
fdivrs
idiv
or
enter
icebp
insb
jecxz
push
sbb
aad
xorb
repnz
ret
xchg
push
mov
mov
push
js
repnz
sti
das
adc
imul
add
inc
das
sarb
add
outsb
push
shrb
dec
mov
outsb
into
or
push
call
jecxz
xchg
arpl
pop
aad
push
sahf
inc
nop
or
cmpsl
data16
dec
mov
or
inc
jle
sub
mov
jno
inc
movsb
mov
test
mov
das
adc
shll
cmp
mov
dec
nop
sub
or
ret
fbstp
add
fiadds
fisubrl
jnp
data16
push
scas
dec
outsb
add
xchg
xor
out
mov
and
lock
insl
and
or
notb
pusha
mov
lea
pop
cmp
add
ss
outsl
inc
stos
add
inc
pushf
xchg
jo
es
dec
call
and
aas
jge
pushf
hlt
jne
xchg
sbb
aad
fwait
push
je
std
fidivrs
sbb
jl
fldl
adcb
aas
mov
pushf
inc
push
cmp
cmp
xchg
hlt
lret
lock
push
scas
loopne
sbb
add
ja
inc
xor
insl
or
dec
lahf
xchg
dec
dec
clc
push
xchg
fcmovnbe
push
ret
int
into
test
stos
mov
ja
lea
dec
sub
mov
nop
xchg
jl
gs
mov
stc
mov
lahf
popf
sbb
lds
loop
test
push
xor
jae
lahf
mov
std
lret
mov
data16
push
push
ljmp
std
stos
push
lods
in
xor
in
inc
orl
std
sbb
and
enter
jecxz
adc
lret
ljmp
adc
ljmp
push
sub
adc
clc
stos
adc
xchg
pop
add
mov
lahf
xchg
mov
push
std
pusha
shrb
repnz
iret
jne
xchg
int3
and
pop
fldt
test
pop
out
push
lods
stos
mov
sbbb
sbb
dec
push
cwtl
mov
xor
and
sbb
loopne
and
push
loopne
sub
fsubl
loopne
loope
mov
dec
adc
inc
dec
ret
jle
inc
pop
or
cmp
lahf
jnp
sbb
push
pop
and
jle
lds
inc
aad
cli
mov
call
adc
xchg
lock
add
mov
xchg
in
and
mov
mov
out
shrb
addr16
js
ficomps
adc
clc
push
pop
add
leave
mov
push
mov
inc
rorl
push
and
mov
ret
pop
arpl
out
das
mov
and
gs
in
and
add
jo
lods
adcb
xor
or
fnstenv
xchg
push
stos
and
cmp
mov
shl
rol
daa
fistl
push
xchg
mov
pop
loope
or
lds
movsl
out
xor
test
imul
inc
pushf
or
lahf
cmp
xchg
mov
ret
repz
xlat
xor
pop
push
stos
int
mov
and
cmp
dec
outsb
push
test
les
pop
orb
push
enter
mov
add
fmuls
dec
cmp
jnp
shlb
je
negl
aas
movsl
adc
out
test
cld
cmp
fucom
inc
mov
into
cmc
lahf
arpl
pop
lret
rcll
lret
xchg
and
xchg
adc
jle
es
int
addr16
scas
and
into
test
and
repz
fistps
push
add
bound
test
or
mov
dec
lcall
shll
xor
das
pop
push
insl
add
pop
insl
mov
test
add
cld
hlt
sbb
pop
xchg
or
cltd
insl
test
or
or
and
and
jp
mov
pop
push
add
or
cwtl
sbb
out
rorl
cmpsb
aaa
loope
push
aaa
sahf
fldl
fisubl
pop
cltd
jb
xchg
push
sub
mov
lods
pop
ja
xlat
je
cmp
dec
sti
mov
loop
daa
jl
data16
pushf
pop
sbb
cmpsb
lret
inc
lods
fistl
rol
xor
out
loope
leave
adc
push
xchg
scas
repnz
xchg
pusha
cli
sub
inc
sub
and
outsl
pop
mov
pop
imul
cmp
mov
xchg
mov
inc
int
dec
mov
xchg
and
hlt
dec
cld
pop
pushf
lds
fadds
xor
mov
xor
decb
insb
sub
mov
sbb
mov
mov
lock
pop
idivl
das
clc
xchg
add
lret
subl
pop
mov
mov
iret
jle
cltd
call
add
and
popa
lcall
fmulp
in
popa
out
lods
jl
sbb
mov
outsl
jecxz
inc
pop
push
out
mov
sub
sub
rol
mov
pop
xor
lahf
ds
fwait
sub
push
and
aam
dec
xor
std
jl
pusha
xchg
jle
push
mov
pop
or
dec
dec
in
sti
xor
jle
stc
fwait
and
scas
dec
in
mov
lods
fbstp
rolb
jne
push
fidivrl
jns
mov
jae
js
mov
push
cmp
jmp
popf
sub
cmp
jne
fimull
aas
sbb
or
cmpsl
rclb
test
and
in
mov
or
mov
dec
sub
aas
cmpl
push
xchg
sbb
insb
pusha
push
inc
in
xor
cli
cltd
add
push
bound
iret
rorl
jns
jbe
xchg
xor
jle
out
fdivrl
jecxz
jl
push
js
sub
xor
loope
into
stc
fidivl
push
repz
leave
sbb
mov
push
imul
push
ficompl
fs
cltd
jle
jle
jb
pop
add
jl
cli
test
dec
addr16
inc
lahf
dec
sub
inc
sbb
xchg
inc
mov
cmp
mov
movsl
out
push
shlb
lcall
mov
cmp
fisubrl
ja
aaa
das
sub
pop
lods
je
jo
xchg
lea
add
lea
sti
sub
mov
sub
inc
jb
and
lret
xor
sbb
sub
mov
test
out
sub
dec
icebp
jo
jmp
clc
xchg
ret
xchg
cld
sbb
xor
or
rcrl
int3
mov
jmp
xchg
mov
pushf
xor
jg
sub
cltd
mov
shll
lahf
ss
sub
adc
cmp
sbb
xchg
clc
push
cs
je
fldcw
mov
cmp
ret
push
rorb
push
push
movsb
fisubl
mov
sbb
scas
inc
cmpl
shlb
mov
jns
fbld
jb
pop
mov
dec
add
mov
mov
cmpsl
and
pop
and
das
mov
or
and
push
imul
adc
pop
mov
and
lret
pop
or
inc
dec
dec
lret
out
push
out
xor
pop
fbstp
fwait
jp
push
dec
mov
jo
jno
fisubrl
jge,pt
or
sub
push
lods
and
sbb
sbb
ja
push
push
jecxz
mov
or
mov
sbb
sub
push
cwtl
mov
cmp
mov
mov
xor
add
push
xchg
add
pop
jnp
xor
push
jecxz
dec
xor
sahf
nop
into
idivb
xchg
push
mov
ss
dec
jp
and
loopne
push
sbb
cwtl
inc
add
or
int
daa
aad
push
cwtl
cltd
or
stos
jg
daa
cli
pusha
mov
inc
push
mov
sarl
xchg
imul
loope
xchg
xchg
jno
and
jo
imul
jge
pusha
sub
sarl
aam
cmp
jl
call
daa
adc
out
int3
out
iret
or
or
movsl
lock
je
inc
mov
ret
ret
push
sbb
pop
jb
and
notb
mov
inc
or
inc
ret
inc
dec
ret
fimull
mov
add
xor
imul
popa
push
cmp
pop
and
pop
cld
fcomps
adc
mov
nop
add
jb
xchg
js
add
adcb
test
xchg
dec
adc
mov
cmp
mov
das
stos
inc
test
lret
dec
movsb
movsb
sub
push
or
test
jnp
inc
std
test
jnp
cmpsb
jns
mov
cwtl
data16
popa
and
sbb
jb
or
mul
imul
jge
mov
out
dec
mov
add
dec
js
and
aas
jns
outsl
push
inc
jns
mov
mov
push
icebp
arpl
enter
and
dec
stc
pxor
test
mov
dec
sbb
popa
xchg
adc
arpl
cmp
popf
inc
xchg
pop
add
push
xor
clc
cld
mov
jle
loopne
pop
xor
xchg
pop
cmc
insl
cmp
mov
nop
xchg
test
imul
ror
movsb
jno
out
add
lods
sbb
aaa
jo
bound
add
shlb
xchg
addr16
dec
ss
or
repnz
aad
fcompl
addl
mov
in
in
movsb
lcall
decl
pop
add
pop
mov
jbe
jae
imul
mov
mov
lret
sub
cmp
ret
sahf
pusha
lahf
lcall
dec
sub
inc
jne
cmp
mov
mov
sbb
les
clc
inc
fisubs
sahf
ss
pop
ret
dec
jp
fildl
ret
sbb
stc
sub
xor
jg
or
add
mov
outsb
xor
aaa
adc
or
inc
pop
xchg
je
push
pop
inc
ret
xchg
add
jl
loopne
ja,pt
or
aaa
jo
xor
push
shrl
popf
mov
add
movsb
jecxz
and
sbb
aam
mov
jno
adc
xor
push
mov
or
pop
call
xlat
push
xor
in
std
pop
cmp
lcall
lret
popf
lret
rolb
cmp
dec
lock
mov
sarl
pusha
stos
icebp
jo
push
ret
inc
mov
cmp
jno
sbb
push
add
test
sbb
aaa
cmc
dec
sbb
sub
subl
lock
sub
in
pop
cmp
or
lcall
jp
add
inc
jg
jb
shlb
roll
cmp
data16
ds
rol
pushf
iret
mov
aad
ss
cmp
test
ds
dec
xchg
in
shll
mov
xchg
cwtl
mov
lret
and
adc
fidivrs
and
xor
mov
sub
dec
in
aaa
mov
mov
js
lock
mov
push
fldcw
mov
sbb
sub
mov
adc
and
lcall
cltd
adc
cmc
xor
mov
mov
cmpsb
push
inc
loop
mull
ficompl
das
ret
jmp
and
jne
and
cmc
xlat
sub
adc
out
int3
add
mov
dec
cmc
arpl
fldpi
or
loopne
cld
pop
or
std
lret
mov
fxch
lods
sbb
bound
inc
push
aaa
mov
sahf
xor
dec
sbb
mov
add
js
jne
shll
test
cmpsl
repnz
mov
or
cli
mov
mov
call
sbb
out
shll
int
cmp
push
jle
imul
gs
jle
dec
mov
imul
fsubs
popa
rorb
inc
test
popf
inc
or
in
sbb
icebp
js
adc
jg
pop
xchg
pop
and
popf
imul
lret
fwait
jp
imul
sbb
outsl
imul
and
jl
cs
in
add
jecxz
ljmp
add
sbb
cmpl
pop
js
mov
inc
shll
xor
shrl
mov
outsl
xchg
outsl
int3
icebp
rolb
pop
dec
adc
int
sbb
fwait
mov
mov
out
mov
and
jmp
lods
outsl
aas
insl
mov
dec
jno
mov
lds
lods
dec
into
adc
jecxz
xorl
jle
or
jo
xchg
mov
mov
jl
cld
add
aaa
push
xor
mov
movsb
lret
and
sbb
push
outsb
outsl
inc
daa
lahf
pop
in
sbb
cmp
fiaddl
lahf
cltd
movsl
in
sub
aas
scas
add
cmpsb
mov
loopne
fs
sub
mov
daa
xlat
imul
in
sub
dec
icebp
cmpl
movsb
mov
or
nop
lret
insl
inc
adc
sbb
daa
bound
movb
shrw
cmpsb
sbb
or
ds
or
jb
mov
mov
dec
cmpsb
xchg
xchg
push
in
xchg
xlat
dec
pop
or
popa
and
sbb
jae
xor
in
xor
loope
xor
sbb
lahf
xchg
in
jecxz
adc
scas
aam
mov
push
mov
adc
xchg
mov
test
jae
xchg
movsl
sti
cmpsl
add
js
or
loope
or
sub
push
pop
pop
jbe
cmp
aas
mov
clc
shrl
std
adc
jp
repz
sbb
xor
movsb
in
aam
fistl
jbe
inc
jb
daa
int3
in
dec
inc
push
and
adc
adc
loop
sti
inc
incb
cwtl
insb
test
jle
jg
sub
cmp
lods
pand
jge
cmp
sbb
mov
pushf
pushf
ja
iret
mov
push
std
pop
pushf
or
xchg
insb
mov
fwait
les
ja
jae
negb
pop
mov
out
jnp
add
fwait
mov
xorb
inc
xchg
mov
mov
or
mov
lods
fs
pop
mov
mov
adcb
dec
mov
xchg
jmp
les
jl
dec
xor
sbb
adc
mov
add
jp
sbb
out
aaa
mov
rolb
fsubrs
or
nop
in
xchg
push
imul
fimuls
cmpb
dec
push
inc
test
loop
push
js
cmp
dec
dec
sub
andl
inc
fstps
bound
repnz
pop
movsl
xlat
int3
pop
dec
nop
cmp
outsl
xor
cmp
mov
add
insl
cli
or
cmc
mov
push
fisubrl
push
mov
dec
xor
sub
fcoml
cmp
cwtl
sahf
ffreep
push
cmp
pusha
pop
sub
pop
push
push
or
cmp
pushf
push
xor
add
ret
cs
ffreep
inc
mov
lods
mov
xchg
cmpsb
repnz
sub
insl
mov
mov
xchg
fwait
ret
retw
mov
daa
rorl
loope
mov
add
add
cld
sub
jmp
into
cmp
lock
out
inc
jg
cld
in
shlb
insb
jg
pop
and
movsb
mov
fwait
or
and
dec
sub
pop
mov
shlb
sub
xor
fidivrl
jle,pn
lahf
push
in
nop
clc
out
inc
adc
fistpl
cmp
outsl
fs
scas
decl
sbbl
inc
dec
cs
pop
cmpb
adc
jo
jmp
js
imul
shrb
lret
inc
jb
push
dec
mov
adc
pop
stc
fstl
sahf
out
cmpsl
fcmovb
sbb
sbb
mov
sahf
aaa
jg
mov
xchg
stos
arpl
mov
aad
cmp
cmc
std
inc
fsts
out
push
dec
pop
push
fldenvs
fwait
je
mov
pop
xchg
imul
jle
int
pop
int
call
lcall
inc
pusha
xchg
inc
mov
ss
dec
rcll
lock
aad
mov
test
ret
into
movsl
pop
test
cld
push
imul
mov
push
jecxz
pop
hlt
or
xlat
xchg
insb
ljmp
jge
bound
lods
decb
xchg
lsl
loop
and
pop
rcrb
add
push
pop
rolb
jae
jge
fcoms
fwait
jns
inc
mov
pop
jb
jne
pop
cs
shrb
cmp
je
out
mov
repnz
in
inc
clc
test
add
ljmp
jbe
aaa
adcl
pop
dec
sub
adc
gs
les
cmp
push
sar
mov
xor
inc
pop
mov
mov
mov
pop
fnstcw
movsb
sbb
outsl
popa
jae
aam
and
jle
and
insl
scas
mov
inc
lds
jmp
test
and
xchg
inc
and
xchg
mov
sbb
jmp
sub
test
mov
add
in
jne
cwtl
xchg
dec
push
cmp
and
pop
dec
hlt
arpl
and
es
adc
out
mov
mov
xchg
mov
aas
into
pop
je
dec
xchg
fimull
int3
mov
and
sub
jge
push
mov
xchg
xlat
fcmovb
loope
mov
lock
cmp
scas
sbb
subl
mov
jno,pt
inc
sarb
sti
movsl
int3
outsb
xchg
and
push
xor
xlat
lock
push
popa
lahf
cwtl
jle
push
push
mov
xchg
xor
or
fs
push
push
leave
jp
outsb
std
adc
les
fsubl
aas
sar
stc
pushf
xorb
dec
test
xchg
mov
xor
cmp
cmpsl
pop
pop
or
jnp
mov
pop
in
and
idivl
jp
xchg
cld
xchg
and
lods
imull
xlat
push
pop
pop
add
mov
into
lret
sbb
mov
jnp
in
decl
jae
stc
out
xchg
pop
aam
mov
lahf
repnz
dec
xchg
incl
jo
cwtl
sub
int
scas
xor
inc
ror
stc
les
out
sti
push
inc
lea
mov
and
enter
ljmp
pop
mov
mov
and
rcr
out
or
movsb
daa
lahf
mov
mov
push
pop
ret
cmpsl
and
xor
cmp
mov
aas
jbe
addr16
repz
dec
pop
or
xchg
push
repz
loopne
shlb
daa
push
stos
add
int
cmp
out
out
jne
inc
and
mov
out
sti
daa
fstpl
and
jg
inc
or
jp
xchg
sahf
movb
cmpsb
imul
mov
mov
mov
clc
filds
shlb
sti
loop
daa
aas
push
xchg
ret
mov
xchg
inc
xlat
add
jmp
cs
mov
pushf
jp
dec
xlat
xor
xor
mov
sub
adc
mov
shl
push
push
cmpsb
jmp
xchg
xchg
push
pop
xorl
lods
mov
imul
dec
dec
dec
scas
push
jo
ja
arpl
jbe
and
arpl
stc
push
mov
xor
dec
fnstcw
and
lods
nop
test
mov
cld
sub
loop
sub
pop
ficoms
and
or
pop
xor
lds
jp
sbbl
fwait
aam
mov
mov
dec
je
add
adc
push
popa
jns
pop
pop
popl
and
mov
jo
and
stos
mov
icebp
aam
sti
xchg
xchg
and
adc
into
xchg
mov
dec
shr
mov
adc
adc
or
jno
or
mov
scas
mov
fdivrl
test
push
pop
ja
into
add
mov
aam
aaa
test
negb
roll
dec
fstl
data16
push
mov
fs
bnd
mov
aas
mov
shll
xor
inc
setno
xchg
and
push
movsb
jmp
xor
nop
mov
js
movsb
jnp
out
fldl
xchg
adc
xchg
dec
sub
push
imulb
mov
rcr
aam
lods
xchg
and
test
mov
or
inc
mov
sub
pop
out
pushf
lahf
stos
adc
enter
std
ds
popf
and
xchg
xor
xchg
mov
fdivrs
xchg
xchg
push
mov
mov
sbb
and
push
mov
mov
mov
iret
enter
add
inc
call
xchg
and
sti
ja
pop
ret
loopne
hlt
popa
mov
subl
mov
pminsw
dec
imulb
jle
cmp
ret
sti
gs
scas
pop
add
wrmsr
adc
cwtl
out
xchg
aas
mov
imul
insl
and
or
fsubrs
xchg
pop
jne
mov
pop
xchg
cmp
shll
jecxz
mov
addr16
lods
xor
jno
dec
lcall
loope
mov
adc
jns
lods
js
inc
push
enter
jmp
xor
lock
scas
faddl
iret
stos
cli
rclb
mov
loope
sbb
push
fnsave
sbb
rorl
nop
push
stos
cmp
jecxz
insl
and
xchg
jl
fistpl
mov
mov
mov
mov
clc
bound
int
push
cmp
add
mov
lcall
push
sub
pushw
sahf
jo
adc
fidivrl
stc
sub
pop
or
fisubrs
inc
dec
adc
imul
in
pop
psubusw
jecxz
enter
nop
mov
push
pop
cmc
ds
ret
sti
inc
cli
push
pop
pop
mov
adcl
in
mov
push
arpl
call
sbb
ret
aam
test
push
icebp
push
stos
jno
out
rolb
or
outsl
les
mov
dec
insb
pop
stos
cwtl
dec
sub
inc
mov
mov
sub
int
jno
outsl
rcl
sub
pusha
test
repz
mov
les
rcll
inc
sub
insl
xchg
imul
dec
stc
fiadds
sub
jbe
lods
mov
pop
jnp
je
pop
pop
jno
insb
xor
pushw
and
xchg
divb
lret
jmp
and
das
push
cltd
lea
and
or
pop
rcll
test
or
popa
mov
adc
xchg
jmp
leave
or
bndldx
dec
aad
jle
push
lea
jmp
ljmp
dec
and
mov
enter
andb
ss
in
fcmovbe
clc
nop
mov
hlt
xor
popf
mov
xor
jl
sbb
push
pop
push
mov
xor
mov
addb
push
rorl
adc
nop
icebp
ret
adc
xchg
shrb
cwtl
push
rol
lds
jns
jno
incb
push
push
outsb
mov
xchg
sarl
xchg
pop
es
mov
fildl
mov
insb
lret
int3
lock
or
mov
sti
loop
push
inc
adc
mov
add
or
push
cmp
mov
loope
aas
ds
repnz
not
push
inc
xor
aaa
negb
xchg
or
clc
jle
arpl
adc
setno
std
pop
imul
outsb
outsb
rclb
scas
sahf
addr16
xor
movsb
sbb
adc
sbb
cwtl
jp
lock
add
js
add
mov
fwait
pop
subl
adc
adc
and
lods
setg
and
sub
xchg
mov
mov
ja
sub
ret
scas
xor
cmpsb
loopne
test
popa
cmpsl
push
mov
popa
enter
pop
sub
mov
push
repnz
jg
and
mov
jns
adcb
push
dec
clc
loope
mov
aaa
add
add
inc
dec
mov
or
mov
roll
lods
cwtl
std
add
inc
cmp
or
aad
inc
aas
popa
rclw
pop
mov
sub
int
ret
or
xor
mov
push
mov
add
pusha
inc
ret
inc
sub
xorl
jmp
pop
inc
out
insl
xchg
iret
cmp
popf
sub
rcl
std
rcll
xlat
mov
call
mov
jmp
imul
fdivs
pop
ja
sbb
push
xchg
arpl
decb
imul
push
mov
adc
cmp
dec
or
xchg
imul
les
push
inc
dec
adc
mov
sti
cmp
cltd
adc
dec
xchg
dec
inc
insb
mov
loope
xchg
pop
arpl
into
stc
xchg
dec
lcall
das
add
xor
pop
test
jno
sti
dec
mov
dec
pop
in
scas
push
outsb
dec
jl
insb
mov
dec
mov
mov
dec
stos
pushf
stc
and
mov
pop
xchg
mov
clc
push
testl
sub
add
inc
pop
scas
cmp
cmp
xlat
dec
push
imul
js
xchg
inc
jbe
js
lea
cmp
mov
mov
inc
mov
lods
adc
pop
push
ljmp
int
adc
lret
jne
mov
fdivrl
push
andl
jne
test
nop
add
mov
push
push
mov
test
cmpsb
mov
push
mov
addr16
xchg
das
sbb
fmull
cs
out
xchg
rorl
movb
or
mov
sbb
xchg
xor
push
jg
pushf
loope
cmp
faddp
push
push
div
pop
sarl
and
inc
outsb
repnz
xchg
mov
cmp
or
add
pop
sbb
aam
xchg
push
jmp
cmp
outsb
sub
lret
cmpsb
inc
add
pop
jmp
or
leave
int3
dec
jge
jae
imul
lods
xchg
stos
add
cmc
mov
dec
mov
pop
rcrb
xchg
jecxz
xchg
inc
mov
test
pop
lahf
mov
test
dec
pop
mov
mov
sbb
push
out
ret
aad
rcrb
or
je
nop
mov
cs
mov
push
push
dec
into
inc
jge
fs
in
imul
mov
xchg
imul
movsl
xchg
imul
push
scas
jb
enter
push
push
mov
popa
jl
mov
lcall
dec
ja
cli
cwtl
pop
test
and
ja
xchg
push
nop
sub
int
push
inc
scas
jbe
repz
ljmp
test
sbb
outsl
inc
out
into
addr16
push
push
js
clc
aam
je
inc
cmpsl
inc
in
call
sbb
stos
pop
push
cli
xor
arpl
xchg
adc
jb
mov
lret
xlat
mov
cmp
push
mov
inc
pop
xchg
and
bound
in
dec
jmp
pop
xchg
sub
dec
les
loop
or
jecxz
push
push
ja
cmpsl
test
xor
and
aas
in
sahf
xchg
nop
pushf
sbb
xchg
and
inc
mov
pop
fsts
xchg
xor
jmp
out
xlat
pop
xor
mov
leave
sbbl
adc
add
lret
movsb
lcall
stos
adc
and
pop
and
pop
pop
pop
cltd
jmp
add
push
lret
add
pushf
leave
mov
pop
xchg
daa
push
add
pusha
or
push
jge
incl
or
mov
sub
in
xorb
add
fsubr
push
lock
movsw
scas
addr16
imul
lods
sub
dec
sub
pop
ret
clc
mov
sub
adc
mov
mov
out
xchg
push
cwtl
push
mov
aam
dec
ds
cs
mov
les
call
jmp
cltd
popf
in
shlb
ds
or
fstpt
out
mov
add
in
movsb
sbbb
add
xchg
xor
mov
out
pushf
sub
repnz
dec
int3
sub
sub
js
mov
adc
dec
pop
jnp
ja
jl
or
cwtl
out
je
pop
sub
stos
cld
stc
fistl
mov
add
push
int3
dec
or
jmp
mov
pop
pop
cli
mov
pop
fisubl
arpl
xchg
xchg
idivl
adc
and
and
sbbl
js
fs
sub
sbb
sbb
push
mov
sub
shl
enter
push
ljmp
and
orl
cld
incb
xchg
arpl
add
jbe
stc
insl
xchg
fldenv
jae
popf
xchg
int
stos
mov
popf
inc
or
add
xchg
sbb
cli
xchg
jmp
imul
ljmp
sub
roll
rcrb
sub
add
push
or
xchg
cmp
pop
push
outsl
jne
pushf
repnz
mov
jmp
cmc
clc
add
mov
cmp
mov
test
sub
xor
jo
hlt
xorb
aaa
xor
push
sbb
mov
jo
lock
pushf
mov
ret
inc
cmp
pop
lahf
lret
lahf
faddl
daa
sarb
repnz
xchg
scas
test
sarl
inc
xor
sub
nop
cmpsl
call
divl
arpl
loopne
lea
adc
inc
jo
xor
or
mov
int
scas
std
subb
xlat
in
push
sbb
dec
lret
out
mov
imul
insb
hlt
push
rcl
ret
out
popf
insb
shr
iret
adc
ret
inc
in
addb
mov
adc
sub
ljmp
mov
lret
xor
xor
mov
pushf
arpl
mov
sbb
and
inc
cmpsl
xor
mov
mov
mov
adc
dec
sbb
sbb
cld
movsl
inc
mov
sbb
mov
outsb
test
push
ja
shll
jbe
cwtl
push
rorl
inc
add
cmp
fs
sub
xchg
cmpsl
nop
jle
mov
add
pop
pushf
fadds
mov
pop
cmp
mov
mov
outsb
pop
xchg
push
pop
xor
pop
jle
cmpsb
mov
and
punpckldq
mov
push
pop
push
pop
xor
in
sub
pop
lret
lods
outsb
aad
andb
and
mov
push
ljmp
fisubrs
and
out
leave
or
test
iret
pop
popa
fs
stos
or
adc
outsl
sbb
adc
mov
jo
into
push
popa
mov
ret
std
daa
add
lods
into
outsb
adc
or
adc
pslld
popa
test
les
mov
loopne
loope
xor
movsl
xor
mov
lds
data16
test
sti
pop
andl
test
enter
mov
out
call
movsl
or
mov
sbb
ret
stos
divb
or
call
ret
fwait
ljmp
decb
and
ja
loope
pop
mov
push
sbb
jae
add
push
pop
adc
iret
mov
xor
mov
lods
pop
dec
push
mov
scas
sub
cmp
cmp
int3
or
ds
fidivrl
pop
inc
js,pt
cmp
cmp
hlt
add
xchg
fstps
or
pop
inc
sbb
jbe
inc
lds
aas
or
fs
lahf
mov
xchg
push
daa
sbb
xchg
in
fdivrs
xchg
dec
hlt
mov
mov
lods
or
pushl
sub
enter
imul
and
lahf
rorl
adc
xchg
inc
scas
xchg
xor
mov
test
cmp
pop
lods
je
dec
sbb
ss
xor
inc
bound
sub
mov
aam
jb
push
out
push
enter
in
cmpsb
xor
xlat
int
cmpsb
rcrb
in
movsl
shr
stos
lods
scas
in
repnz
scas
out
mov
cltd
mov
mov
pushf
push
pop
test
cmp
scas
iret
out
jge
mov
push
sub
push
cmp
mov
es
mov
adc
lds
sub
cmp
cwtl
sbb
mov
ficomps
scas
das
outsl
cmp
data16
push
sub
or
lods
cmc
inc
sahf
ret
xchg
clc
inc
jno
mov
int3
xor
pushf
je
xchg
xchg
inc
ret
testb
jnp
and
sbb
in
lock
aaa
aam
jne
call
jge
sahf
mov
pop
popa
or
or
sarl
push
adc
mov
push
sub
cmp
cli
shrl
lock
sbb
nop
repz
xchg
xor
sbb
fnstenv
jbe
adc
or
mov
cmp
xchg
outsb
pop
sbb
add
cmp
add
dec
fldl
sub
scas
mov
rcrb
add
xor
xchg
pop
test
jbe
loopne
lock
lret
dec
xchg
stos
jb
and
cmp
push
cltd
jecxz
in
push
cmp
mov
jmp
xchg
and
mov
mov
scas
cmc
fimuls
ss
shrl
jno
cmp
inc
mov
mov
jns
push
sub
out
or
jge
dec
jbe
out
loope
aam
arpl
leave
popa
int3
jne
inc
je
sub
fwait
pop
rcrb
cmp
jnp
adc
iret
pop
add
fnstenv
dec
test
decl
dec
popf
push
mov
sbb
push
sbb
jle
sbbl
cmp
lahf
mov
mov
push
outsl
mov
mov
loop
jle
js
pop
sbb
dec
cmp
jo
daa
lret
outsl
and
push
dec
dec
cmc
lds
sub
add
or
sbb
xor
daa
mov
enter
jp
mov
je
mov
sub
lds
cwtl
xor
sbb
es
aam
sub
mov
push
jo
mov
dec
push
loop
lods
jb
pop
lcall
jecxz
cmp
fdivs
adc
mov
pop
fwait
cmpsl
xlat
enter
lahf
mov
push
or
and
loope
xchg
xchg
jmp
push
xchg
mov
enter
xor
cltd
fcompl
addl
or
out
stos
insb
fcomps
mov
mov
mov
pop
negb
push
mov
iret
jge
lahf
clc
xchg
int3
xor
in
mov
fwait
mov
aad
fiaddl
outsl
push
fs
mov
cmp
inc
pop
lahf
cmp
push
sub
inc
inc
xchg
icebp
sahf
arpl
add
push
mov
es
je
mov
out
mov
mov
out
dec
out
pop
js
xor
out
or
loopne
jo
and
inc
pop
ror
push
push
fwait
push
stc
mov
and
fsubs
repz
dec
aam
mov
lret
push
repz
jnp
push
cli
cmp
pop
aas
cmpsb
cmp
xor
push
out
lcall
gs
in
mov
mov
sub
dec
mov
mov
enter
mov
xor
or
test
es
mov
aam
lds
sbb
lret
icebp
xlat
or
shrb
push
cmp
and
sahf
sti
ljmp
aad
outsb
lock
jle
cmp
or
push
sahf
or
scas
mov
stc
xchg
test
mov
and
test
add
jge
daa
sbb
pop
fucom
shld
mov
popf
aad
sbb
outsb
add
cmp
push
repnz
xchg
xor
sbb
iret
das
xchg
mov
dec
sub
hlt
movsl
xchg
xchg
xor
pop
lret
xor
aam
add
xor
xchg
push
into
xor
ja
mov
movsb
add
aaa
movsl
add
imul
pop
xchg
push
xchg
mov
inc
jg
stos
nop
insb
hlt
cmp
inc
aad
inc
jns
push
cmp
xchg
cmp
xchg
jmp
mov
rclb
sti
and
and
mov
adc
mov
scas
outsl
repnz
jg
out
in
repz
cmc
aad
rorl
adc
pop
mov
shll
fstpl
dec
daa
and
into
jbe
repz
stos
lods
pusha
fstl
xchg
push
mov
sbb
fs
nop
jecxz
in
gs
fsubrs
add
add
jns
ret
dec
mov
dec
loop
aaa
cmp
aam
rcl
int
cmc
in
mov
mov
xchg
ds
pop
inc
je
fcmovnbe
mov
ret
xchg
pusha
popfw
mov
std
jecxz
sub
xchg
inc
xor
sub
fcoml
add
adc
cmp
inc
out
adc
mov
xor
iret
fidivrs
mov
jne,pt
fcmovu
push
out
mov
xchg
cwtl
inc
jl
ret
int
xchg
mov
pop
test
and
in
xor
xchg
xor
xor
inc
mov
sbb
xchg
pop
jg
popa
adc
and
lret
or
shll
orl
jmp
gs
clc
leave
int
rorl
sub
pusha
cmpsl
inc
or
sub
xchg
mov
sub
fstpt
mov
fwait
int3
xchg
popf
and
scas
add
jg
xchg
mov
inc
push
mov
mov
shll
or
lcall
add
out
cmp
aaa
push
popl
mov
shrb
fistl
inc
and
or
push
pop
pop
mov
outsl
loope
jmp
arpl
add
test
and
in
mov
stc
pusha
movd
dec
sub
push
push
dec
ss
mov
repz
dec
add
adc
int3
push
jle
mov
dec
mov
je
push
je
dec
jg
cmp
mov
lods
pop
pop
es
out
pop
pop
mov
fistl
sti
arpl
nop
or
out
adc
jbe
sbb
sbbl
mov
out
and
push
nop
and
in
lea
lcall
push
fisubl
xchg
dec
push
shl
jle
mov
aad
movsl
xlat
adc
sahf
scas
int3
jo
stos
cmp
test
dec
pop
xor
jecxz
stc
imul
shrl
and
int
jns
xchg
inc
in
das
int
mov
int3
popf
test
divb
fwait
mov
ja
fnsave
cli
cmpsb
lock
int3
int3
fistpl
call
jne
and
mov
loope
test
jmp
test
addr16
mov
rcrl
jg
mov
das
xchg
and
enter
xor
dec
mov
adc
jmp
sbb
movsl
aam
cld
xor
repz
adc
cmc
sbb
movsb
cmc
movsl
je
fstp
pop
aaa
pushf
lret
andl
fsubl
lret
popa
fistps
pop
das
dec
ljmp
adc
mov
and
xor
out
add
inc
dec
sbb
lock
fists
idivl
push
mov
shr
stos
dec
jno
add
xor
xchg
lcall
sahf
xchg
push
mov
out
ljmp
mov
scas
out
push
cli
xchg
xchg
dec
dec
mov
and
adc
movsl
dec
int
jmp
or
dec
lock
ds
fidivrl
in
jbe
aaa
leave
in
mov
lahf
imul
push
fmuls
aaa
dec
adc
je
rcr
or
rol
mov
jne
mov
mov
or
xchg
iret
sbb
xchg
cli
mov
out
and
ja
inc
loopne
aam
and
cmp
sub
sahf
or
inc
out
mov
push
fimuls
loope
jae
push
js
xlat
or
push
mul
jg
inc
sub
add
insb
or
adc
punpckhbw
sub
mov
in
and
in
jno
sub
push
jp
adcl
push
in
js
icebp
cmp
sti
mov
mov
jecxz
cmp
jo
and
mov
popf
mov
push
dec
dec
add
jbe
pop
and
mov
das
pusha
push
xor
pop
clc
push
push
push
pop
push
inc
daa
pop
mov
out
popf
inc
mov
add
mov
sbb
mov
inc
pop
aas
xor
sbb
test
adc
mov
pop
and
xchg
adc
mov
repz
push
enter
sub
int
mov
pop
xor
pushf
pusha
and
mov
push
and
ret
mov
mov
sbb
xor
pushf
xchg
xchg
test
dec
jne
ret
jnp
and
lcall
pop
sub
push
sahf
outsl
inc
lds
or
ds
and
in
cmpsb
mov
add
xlat
stos
mov
xor
xor
test
loope
das
stos
or
insl
cli
dec
aas
jp
jb
in
add
mov
mov
je
inc
lds
and
or
frstor
cmp
jnp
nop
dec
fwait
incl
aam
add
mov
jmp
xor
ficomps
fcoms
mov
idiv
mov
pop
cs
xlat
adc
icebp
xor
pop
mov
pop
hlt
adc
lahf
jmp
sub
push
lret
push
xor
aam
testb
loopne
out
xor
sub
repz
and
sahf
and
and
mov
push
mov
inc
incb
imul
mov
cmp
or
pusha
rcr
or
adcb
lea
xor
jb
idiv
leave
fcmovbe
jmp
push
pop
push
or
lods
xor
iret
jp
dec
idivl
push
test
roll
fidivrl
sbb
fs
or
jge
sbb
out
adc
insl
mov
mov
jo
push
enter
pop
test
mov
xor
push
mov
mov
pop
dec
sbb
pop
movsb
shll
cmp
das
popa
cs
xchg
out
js
mov
clc
lock
sbb
ret
test
jo
push
mov
push
scas
push
test
jl
test
incl
mov
in
jecxz
in
call
negl
cmp
mov
loopne
sub
jne
mov
inc
cmpsb
pop
push
enter
push
jne
and
imul
es
and
ljmp
jno
test
sub
std
or
or
das
cmpsb
xchg
lret
test
ret
incb
dec
xor
clc
insb
dec
shll
push
xorb
stc
addb
jno
and
outsl
jp
cmpsb
or
mov
test
mov
mov
aam
cmpsl
cmp
sub
movsb
out
mov
mov
dec
mov
add
and
fidivrs
cmpsl
inc
push
scas
mov
fildl
fs
mov
in
out
or
fsubrl
pop
std
movsl
jecxz
mov
rolb
push
icebp
lret
movsb
pushf
scas
sub
orl
pushf
fistl
leave
xchg
pop
add
xchg
and
je
es
xor
fcmove
mov
cmp
lds
in
call
mov
divl
repz
shll
fisubl
xor
stos
fistl
push
in
hlt
pop
cmpsl
lcall
and
sar
arpl
mov
ljmp
mov
sahf
cs
cltd
call
jmp
cmc
add
add
ret
repz
scas
jns
mov
and
cmp
pusha
mov
out
lcall
jp
dec
roll
bound
or
mov
aam
sub
movsb
mov
out
jbe
dec
mov
loope
jae
xchg
pop
test
clc
mov
and
xchg
fstpt
out
movsl
lea
mov
ja
pop
sub
xor
popa
in
or
sbb
or
xchg
inc
push
dec
push
stos
nop
popa
pusha
cltd
dec
xor
out
jmp
inc
sbb
push
or
sar
jbe
pop
mov
sbb
jb
cs
adc
lahf
cltd
repnz
movsl
adc
jo
mov
enter
and
inc
orl
mov
xchg
pop
in
push
add
in
sbb
sbb
cs
pusha
mov
ljmp
push
mov
mov
mov
sub
das
push
push
mov
xchg
lods
mov
std
loope
sbb
dec
cld
inc
xchg
sub
xchg
push
cmp
imul
adc
out
leave
mov
stos
jno
aad
sub
mov
add
push
mov
in
sbb
pushf
sti
rclb
mov
or
or
pusha
xor
enter
and
loopne
xlat
jmp
mov
inc
repnz
push
les
fsubs
jb
and
out
add
es
popa
sub
cmpsl
fimuls
imul
cmp
xor
cmp
inc
sub
sbb
cwtl
outsb
fs
push
mov
cmc
push
push
sbb
sbb
into
cmp
cmp
xchg
mov
xlat
mov
cwtl
js
mov
pop
adc
inc
jb
movsb
icebp
ret
ss
mov
push
gs
adc
mov
adc
sahf
push
jae
jns
pop
add
rcrb
cld
xlat
mov
loop
sbb
mov
orb
popa
xchg
cmp
pop
push
sbb
push
xor
jmp
push
xchg
ret
xlat
pushf
mov
sub
push
cmc
cwtl
loopne
lahf
sarl
cwtl
scas
xor
stc
sti
sub
test
jmp
sub
dec
xlat
repz
cs
cmp
ja
lods
movsb
jb
es
jl
sar
pop
inc
cmpsb
cmp
idivl
xchg
insb
into
jae
jae
jp
add
mov
inc
adc
mov
loopne
xchg
test
mov
fwait
sub
dec
jno
cmp
hlt
inc
rol
movsl
das
adc
pusha
test
fbstp
adc
cmp
lahf
into
scas
push
jecxz
cmpsl
std
inc
fs
in
les
pop
mov
xchg
subb
mov
xchg
cmpsb
cmpsb
mov
sub
jbe
test
daa
lret
loopne
arpl
dec
fadds
ds
push
cwtl
jo
or
call
movsb
cmp
out
stc
mov
push
cmpsb
icebp
insb
paddw
push
cld
lods
xor
add
push
pop
repz
mov
inc
sub
pop
movsl
sbb
mov
sbb
jecxz
sub
je
mov
jbe
arpl
out
aaa
mov
cmp
into
cltd
dec
cmp
jp
adc
loope
js
movnti
sub
cmpsl
dec
lcall
sub
addr16
push
mov
stos
jne
aam
and
pop
xchg
dec
push
les
and
ljmp
outsl
out
icebp
push
or
jmpw
in
ljmp
push
sbb
and
mov
xchg
movsl
jae
pop
out
ds
inc
out
xchg
adc
repz
push
das
out
lcall
hlt
inc
cmpsl
cmc
mov
sbb
leave
ficoml
cmpsb
std
scas
cli
mov
xor
jp
clc
sbb
je
gs
ljmp
adc
jnp
pop
add
xchg
sub
inc
jb
adc
mov
pop
jo
pop
push
xchg
insl
add
cli
sbb
arpl
iret
jae
filds
shrb
jp
cmp
push
out
mov
jnp
or
sbb
pop
mov
and
and
mov
cmpsl
int
dec
pop
xchg
add
mov
stc
das
jno
xchg
enter
sub
mov
cs
xor
dec
dec
mov
pop
xor
leave
cwtl
sarl
icebp
mov
dec
mov
push
cli
push
cmp
sbb
sub
mov
push
test
cmp
pusha
cld
lods
out
icebp
push
sbb
add
pop
push
dec
cli
rolb
mov
jge
sub
leave
or
je
cmp
push
inc
loop
or
cmp
clc
add
imul
push
in
cmpsl
mov
xor
dec
mov
push
roll
cmp
inc
cmc
cmp
push
pop
stos
push
dec
mov
xchg
inc
rcll
push
inc
movsb
gs
push
xchg
andl
mov
pop
int
scas
insb
xorl
test
xchg
mov
and
adc
sub
mov
cmp
int3
ss
out
pop
divl
xchg
fcomi
fptan
cmp
mov
out
loopne
je
fistpll
jmp
cltd
xchg
fimull
mov
xor
ds
mov
jns
and
int
push
or
jl
bound
cmp
pop
push
pop
pop
xchg
cwtl
ret
cwtl
fs
pop
adc
aam
lods
repz
in
repz
les
xor
adc
popa
mov
fs
inc
aad
jns
decb
jge
nop
inc
insl
jbe
mov
lahf
pop
sub
xlat
lret
sahf
adc
ficomps
push
aam
inc
sti
add
cmp
pop
aaa
popf
push
orl
insb
jle
pop
mov
jg
arpl
push
call
insl
fs
sarb
jbe
mov
mov
mov
mov
cmpsl
fisttpll
je
popf
pop
imul
rcl
dec
lret
push
ret
jae
mov
or
mov
jae
jbe
sarl
inc
mov
daa
lds
sub
mov
ret
adc
fdivl
loope
sti
mov
shrb
sti
inc
sbb
out
fsubrl
push
mov
jmp
add
and
scas
xor
test
in
data16
mov
rcrl
push
mov
dec
ficoml
in
cltd
mov
jmp
divl
jns
sbbb
sbb
mov
mov
sub
dec
and
repz
lods
push
in
cmc
xor
mov
pop
fldenv
sub
lea
push
xor
shrb
popa
aam
adc
pop
mov
cli
jmp
sarb
jo
loopne
mov
movsl
mov
add
adc
andl
or
adc
mov
imul
nop
icebp
pop
test
mov
fs
int3
add
push
pop
add
inc
xchg
jmp
pop
inc
bound
jle
jg
push
mov
xlat
lahf
adc
jge
inc
mov
lock
jnp
push
mov
popa
stc
jne
repnz
mov
adc
insl
add
push
testb
jl
jmp
js
dec
lahf
aad
bnd
mov
lods
mov
lock
ror
pop
cltd
daa
loopne,pt
jg
mov
lahf
movsb
xchg
test
xlat
ret
jmp
push
es
xchg
push
fcoml
push
sbb
adc
push
cmc
aas
outsl
imul
mov
mov
push
xor
mov
pop
inc
or
jp
xchg
adc
clc
dec
shll
int3
imul
cmp
xchg
mov
cmp
sbb
xor
inc
jae
int3
or
jb
sti
and
fsubrl
test
xor
in
lds
mov
ss
popa
mov
in
adc
cli
and
cmp
stc
cltd
xor
mov
mov
adc
popf
jge
sub
jp
push
dec
cltd
xor
push
cli
pop
xor
testb
test
push
add
icebp
mov
or
lock
jbe
lods
jge
mov
ret
ret
mov
mov
aad
imul
outsl
pop
scas
dec
jbe
xlat
mov
arpl
loopne
test
push
cwtl
call
sub
cmp
jge
cmp
cli
mov
inc
test
jno
ffree
jp
roll
rolb
out
xor
lods
push
mov
fnstenv
pusha
or
into
cmc
pop
pop
dec
inc
dec
mov
push
icebp
sub
xor
adc
clc
jns
cmpxchg
mov
in
mov
aas
mov
sahf
data16
in
arpl
sarl
push
in
jmp
imul
inc
test
sbb
stos
cld
mov
dec
mov
push
cmp
sbb
push
fidivs
leave
fdivs
aam
jg
movl
cmc
xchg
subb
cltd
xor
push
dec
testb
jl
mov
insb
outsb
mov
lret
add
sub
adc
mov
rcrb
jb
inc
xchg
cmp
adc
xchg
fsubrl
pushf
fs
and
or
and
rcrb
pushf
repz
dec
stos
les
jno
dec
sub
out
sub
mov
xor
aas
dec
pop
cmp
test
in
das
xor
jmp
aaa
xlat
outsb
lcall
add
sbb
push
imul
sbb
or
push
push
into
xchg
loopne
jae
cwtl
dec
sti
sub
inc
mov
xlat
and
movsb
out
xor
testl
jb
dec
xchg
outsl
stc
mov
xchg
mov
pop
jp
loopne
add
fmulp
rorb
imul
fbstp
movsb
mov
ret
lcall
addr16
filds
loope
pop
xlat
and
mov
mov
outsl
ss
test
lcall
push
sarl
mov
or
daa
add
dec
pushf
inc
sbb
fnstsw
lea
iret
js
in
and
out
cs
xchg
nop
fstl
stos
popf
mov
lahf
xor
xchg
xchg
insb
sahf
cmpsl
lods
scas
scas
adc
je
out
pop
add
adc
mov
jo
fists
jmp
xchg
xchg
insl
mov
sub
xchg
je
xor
jae
dec
cmp
mov
xchg
loopne
pop
adc
sbb
jmp
push
test
rep
int
insl
mov
cmp
mov
sub
jne
adc
mov
adc
into
adc
pop
adc
cmpsl
xor
aad
lods
bound
cld
and
push
jecxz
mov
and
jns
leave
pushf
add
into
shl
dec
jp
movsl
mov
div
fs
mov
iret
or
mov
inc
andb
inc
outsb
arpl
icebp
mov
xor
aaa
adc
inc
sub
sbb
pop
divl
mov
test
mov
cmpsl
movsb
mov
dec
jbe
xlat
push
subb
xchg
mov
cmp
jl
pop
pop
jmp
stos
xchg
mov
push
inc
mov
sub
cmp
mov
xchg
dec
mov
mov
cmpsb
xchg
outsb
addr16
lods
cmp
bound
or
orl
fcmovb
call
and
push
cmc
mov
mov
vprotw
pop
jle
jbe
mov
and
inc
pop
push
loop
ljmp
cs
dec
cmp
cmc
adc
cmp
mov
cwtl
movb
outsb
mov
or
shll
enter
pop
xchg
movl
jae
stc
pop
jno
popf
std
sbb
and
push
jle
mov
sub
cmp
sbb
push
xor
divb
out
sub
aad
pop
fisttpll
xchg
cmc
js
push
jge
inc
fucomp
fdivl
adc
test
dec
sub
test
xor
inc
jae
sbb
movsl
xchg
dec
in
and
push
push
pop
pusha
lods
cmp
push
nop
jae
mull
adc
add
jmp
ss
mov
test
adc
int3
pop
jb
adc
outsl
xchg
mov
insl
pop
fsubrs
mov
xor
pushf
xchg
fs
andl
aam
dec
mov
ljmp
inc
mov
or
adc
jge
cli
xor
xlat
lret
mov
sub
mov
and
lret
sbb
mov
popa
lcall
jl
loop
cs
xchg
aam
call
dec
xchg
mov
and
sbb
lods
insl
push
imulb
cmp
fcoms
cmpsb
cmp
ret
sub
js
xchg
in
jae
insl
pop
test
xor
lock
insb
mov
cwtl
clc
jb
daa
test
mov
sub
adc
pop
aaa
fisubrs
xchg
and
lods
aas
scas
loopne
pop
jg
dec
add
pop
or
cltd
lret
inc
pop
aas
fs
and
cltd
pop
pop
data16
and
pop
inc
cmp
test
dec
cmpsb
mov
mov
jmp
jns
and
movl
fstpl
loopne
in
jge
xchg
call
int3
or
jg
add
out
jp
adcl
aad
xchg
fisttpl
inc
sti
jae
movsb
inc
pop
ret
popa
mov
push
pop
pop
mov
pop
jecxz
mov
inc
jmp
and
pop
push
pop
lret
mov
and
jp
int3
jl
mov
inc
adc
mov
cmp
sbb
cmp
outsb
xrelease
arpl
mov
leave
aaa
push
repz
pop
xor
mov
sub
cmp
cmpsb
popf
scas
pop
jp
xchg
sub
adc
loopne
sarb
pop
and
rclb
adc
or
adc
popa
enter
inc
repnz
push
rsqrtps
mov
jge
or
mull
out
inc
ljmp
jne
leave
fcomip
adc
aad
sub
xor
test
scas
cmp
aad
outsl
xor
in
bound
arpl
adc
insb
fistps
xchg
inc
scas
jle
mov
push
loop
stos
jp
imul
adc
andl
mov
aam
jnp
and
and
test
mov
xchg
or
push
xchg
leave
jle
and
ret
and
mov
cmpsl
jno
xor
test
pop
jno
xor
push
jns
mov
subl
cs
jecxz
cmova
dec
out
int
loope
icebp
xor
pop
inc
push
jno
sub
jg
fldenv
dec
xchg
xchg
push
push
ret
mov
cmp
fisttpl
popa
adc
aaa
xchg
xchg
pop
mov
loopne
mov
push
adc
aaa
imul
cmp
dec
int
repz
lock
popa
inc
xor
sar
push
pop
lods
shll
mov
or
int
pop
push
test
lcall
shl
or
mov
rolb
std
jmp
cmp
jb
add
jge
lret
imul
sbb
add
mov
les
xchg
fs
jno
add
add
adc
add
das
movsl
les
push
cmp
xchg
insb
lret
sarl
push
lret
mov
mov
pushf
iret
pop
cwtl
movsb
sub
fcoml
mov
xchg
xchg
cld
or
jb
jae
loope
push
roll
outsl
aaa
lret
lock
sub
push
fbstp
call
stos
enter
out
push
sbb
aad
fcmovu
in
push
ja
pop
imul
dec
insl
pop
stos
popf
push
cmpsl
dec
lahf
stos
or
mov
inc
outsb
xorb
addb
cmpsb
add
inc
pop
mov
push
in
jmp
mov
sbb
lods
aas
imul
mov
popa
or
lret
add
xchg
imul
sti
sub
fcompl
repz
and
jle
lods
int3
cmpsl
push
rorb
push
ds
cmp
pusha
vrsqrtss
push
adc
push
push
test
lock
adc
mov
imul
cs
ret
test
cli
jne
outsb
or
mov
icebp
cld
push
push
ss
aaa
mov
lret
test
loopne
cld
loopne
or
adc
call
fwait
mov
adc
or
mov
mov
adc
mov
repnz
sub
sub
jp
fmuls
jmp
js
pop
sub
pop
jge
imul
repnz
int3
repnz
aas
sub
xor
mov
xor
fidivrs
gs
sbb
fcomps
mov
and
or
repz
ja
inc
call
nop
adc
xchg
pop
mov
cmp
mov
jmp
fidivl
call
stos
and
lcall
mov
dec
and
xor
popf
xor
xor
mov
jmp
aaa
out
js,pn
lea
xchg
mov
dec
sub
inc
imul
jo
lods
lock
loopne
mov
movb
dec
sub
ss
mov
or
ret
pushf
push
cmpsb
cmp
mov
lds
in
aaa
out
pop
mov
rorl
inc
sbb
addr16
add
jno
xor
dec
xchg
loopne
adc
jo
sbb
bound
insl
cvtpi2ps
mov
xchg
xor
inc
jmp
ja
xlat
sub
imul
add
mov
mov
sahf
rcl
ss
pop
sahf
out
in
pop
cmp
xchg
sub
outsl
leave
jp
pop
insl
dec
shl
leave
mov
test
mov
mov
sarb
pushl
imul
ds
mov
push
mov
xor
ret
sub
xchg
not
and
outsb
add
push
sbb
testb
lods
pop
rcrb
push
mov
xor
scas
push
cmp
movsl
rcrb
xchg
sub
cmpsb
ds
repz
test
mov
insl
subb
add
addb
in
add
mov
adc
into
or
push
popa
push
sub
push
stc
xor
sub
mov
inc
imul
cli
pop
in
dec
in
and
rcrb
pop
in
mov
aad
jne
aad
and
shl
outsb
mov
or
pop
notl
cld
fdivs
pop
xchg
gs
dec
mov
cmp
pop
and
cmp
pop
inc
xor
cmpsl
dec
add
or
cmp
loop
out
mov
icebp
and
inc
and
push
cli
mov
test
mov
clc
fisubrl
int
scas
popf
mov
sbb
ljmp
pushf
mov
jne
add
mov
mull
repz
mov
add
inc
and
dec
xor
mov
fmuls
push
or
jno
jb
cmp
aam
loopne
sarb
insl
jo
insb
idivb
xor
movsb
sub
sbb
adc
xchg
sarl
and
or
pop
out
sub
or
sbb
out
das
in
pushf
lea
mov
dec
stos
jns
enter
out
mov
mov
adc
in
stos
jg
push
loope
outsl
pop
pop
scas
and
jb
jne
jg
jl
lret
std
inc
mov
daa
dec
sub
xchg
mov
push
mov
cs
adc
pop
cmpsl
push
sbb
ret
add
or
dec
push
inc
mov
push
fs
jno
jbe
repnz
mov
sub
loope
in
or
std
xor
enter
dec
inc
inc
push
xchg
push
in
dec
fs
dec
inc
mov
loop
pop
sub
inc
xor
jb
notl
cmpsb
lock
adc
repz
cltd
mov
inc
out
push
mov
leave
movsb
arpl
jg
sub
push
int
jle
daa
cld
pop
fs
sub
add
cli
lock
outsb
dec
push
jne
mov
sbb
sub
cs
dec
xchg
leave
add
xlat
ret
xlat
pop
and
rcll
nop
rclb
pop
push
adc
mov
insb
xchg
orb
pop
cltd
gs
jns
jne
jp
out
adc
fsubrs
jle
bound
xchg
test
enter
sub
test
jmp
jg
dec
stc
push
or
sbb
aam
sub
xor
add
lcall
aam
mov
test
mov
mov
push
and
sub
jbe
xor
pop
push
hlt
mov
xchg
orl
sub
in
xor
fdivr
arpl
sbb
movsl
adc
and
maskmovq
testl
aas
mov
shl
imul
outsl
adc
movsl
lods
lods
fidivl
fsts
test
lret
sub
data16
lods
mov
hlt
or
mov
dec
adc
or
daa
mov
orb
fnsave
fnsave
fcomip
dec
fsubrp
lahf
test
push
xor
mov
in
push
cmc
scas
mov
xor
fldenv
in
dec
fldcw
repz
pop
arpl
loop
push
insl
pop
out
add
and
xlat
push
pop
dec
cmp
dec
lcall
movsl
sub
fldl
test
ljmp
fsubs
repnz
pop
data16
pop
in
push
fwait
pusha
mov
push
push
lock
jo
push
dec
add
dec
lock
sub
jnp
sbb
push
lods
adc
jl
repz
sub
sbbb
cmpsb
loop
stos
in
cmp
dec
arpl
hlt
mov
cmp
in
pushf
jp
adc
add
nop
adc
pop
xchg
cltd
jnp
mov
dec
xor
mov
cmp
out
enter
clc
mov
fnstenv
mov
ss
stos
or
ret
pop
sarl
mov
sti
in
arpl
lods
fcom
inc
cmpsb
adc
loopne
and
cs
inc
xchg
xchg
pop
push
outsb
mov
icebp
ljmp
in
mov
push
in
or
mov
push
sti
in
dec
outsb
testb
pop
hlt
out
cs
data16
iret
jmp
lahf
mov
call
fsubl
adc
lret
ss
mov
xchg
xor
push
push
mov
mov
dec
in
inc
cmc
out
jno
jne
sbb
pop
ljmp
pusha
mov
jecxz
mov
adc
insb
pop
cmp
std
push
out
pop
jb
inc
pop
nop
in
cld
dec
cltd
xchg
test
add
lds
movb
push
stos
jmp
mov
scas
mov
mov
xlat
xor
mov
xchg
lock
mov
sarb
in
shll
sbb
dec
dec
jge
fstl
cmp
jp
add
hlt
xlat
push
pop
je
out
dec
icebp
mov
rcrb
xchg
nop
test
or
shlb
outsb
or
testb
aas
fcoms
lods
cld
inc
jle
pop
and
movsb
insl
fidivs
jno
dec
jecxz
mov
sbb
test
mov
or
stc
sub
dec
xchg
insb
sub
jecxz
ret
mov
push
pop
sar
inc
mov
lcall
ret
push
mov
xchg
pop
dec
dec
inc
jge
cmp
lods
cmp
adc
movsl
push
repz
xchg
ja
aam
mov
gs
dec
inc
sahf
loop
adc
pop
sub
subb
cmpsl
inc
mov
dec
jg
xchg
cmp
pop
mov
stos
mov
xchg
and
mov
mov
das
orb
adc
scas
lret
fadds
pop
pop
lods
shll
jae
js
lock
dec
arpl
test
faddl
arpl
push
in
ret
loop
clc
mov
sub
mov
aaa
mov
ljmp
mov
lods
int
cmp
inc
or
xor
pop
rcrl
loope
dec
subb
jl
daa
and
or
dec
push
mov
xor
ja
adc
test
add
xor
jno
out
mov
pusha
test
dec
repnz
jno
jmp
mov
shrb
adc
icebp
fdivp
out
inc
sbb
push
das
mov
mov
outsl
stos
fisubrs
dec
ja
jle
xchg
into
repnz
rcll
or
sbb
xchg
sub
jo
push
mov
lret
jo
mov
mov
dec
inc
add
test
xchg
xor
adc
pop
aaa
ss
enter
and
ss
mov
rclb
xlat
push
sbb
sub
outsl
or
adc
addb
mov
lcall
bound
sahf
mov
or
fadds
shl
add
inc
add
mov
int3
xorl
pop
push
cmp
std
rolb
jl
fldcw
xlat
mov
cmpsb
mov
and
add
loope
inc
dec
sbb
test
ret
hlt
lods
cmp
mov
sub
or
and
ss
pop
xlat
xchg
mov
cwtl
lods
jbe
inc
inc
enter
and
mov
loop
pop
pop
jp
aad
fucomi
mov
imul
call
xchg
xchg
dec
in
fsubl
jmp
imul
out
mov
sbb
xor
inc
xor
in
push
push
xor
leave
cltd
jnp
dec
push
js
repz
xchg
dec
mov
mov
out
rolb
int3
add
sarb
mov
mov
fisttpl
inc
test
mov
shlb
popw
sub
mov
lds
push
jbe
in
sar
jne
push
popf
mov
xchg
cs
jnp
mov
fiadds
enter
es
xchg
sbb
fmull
adc
popa
or
cld
and
inc
mov
mov
out
mov
jne
out
xor
int
ficoml
mov
or
mov
sub
cmc
xchg
mov
or
lret
jae
pop
inc
sbb
jo
bnd
mov
aam
pop
sbb
or
call
in
pushf
pop
or
xchg
pop
pusha
mov
adc
out
outsl
sub
sub
cltd
fwait
rcrl
out
xchg
or
es
cltd
cmp
in
ret
ficoml
pop
stc
mov
push
sahf
cli
ja
daa
jns
shlb
lea
sarb
inc
loopne
shll
xchg
mov
shr
mov
fisttpl
mov
cmp
cmp
mov
rcrb
cs
lahf
movsl
lret
lahf
add
idivb
es
xchg
xor
fstpt
add
sti
aam
popf
mov
push
and
aam
mov
cmp
shll
das
leave
pop
xchg
lock
add
cmp
repnz
add
sti
xor
pop
sbb
jp
movsb
daa
inc
xchg
adc
cmpsl
mov
dec
xchg
shl
cmpsb
mov
daa
out
rolb
or
imul
pop
mov
inc
add
mov
cmp
lcall
sti
jmp
sub
mov
data16
add
je
inc
push
cwtl
je
out
xor
jae
sub
ljmp
ret
repnz
pop
dec
mov
ret
mov
or
jp
call
xchg
cmp
test
push
pop
jb
and
push
mov
ss
sbbl
sbb
push
stos
sub
mov
xor
mov
inc
add
adc
pop
dec
ljmp
leave
in
xchg
xor
bnd
sub
repnz
out
dec
aad
bound
js
outsl
nop
pop
push
sub
dec
out
arpl
sub
ret
xor
ljmp
push
inc
repz
inc
sbb
les
adc
mov
lahf
cltd
xchg
push
adc
movsl
push
gs
out
je
push
gs
into
pop
add
test
out
push
nop
ds
push
aas
jge
gs
shll
lds
pushf
xchg
mov
mov
out
jle
mov
mov
mov
pop
xor
pop
arpl
add
fdivr
movsl
movsl
fs
push
xchg
movb
inc
mov
das
push
or
add
or
dec
out
jge
test
incb
sbb
pop
inc
stc
fistps
or
push
aas
call
negb
mov
mov
idivl
inc
mov
outsl
jp
mov
popa
bound
rcrb
xchg
push
jo
xchg
sub
jg
push
test
pop
pop
mov
dec
adc
ret
add
test
data16
xchg
outsl
jecxz
jnp
imul
sub
push
jecxz
xor
or
lcall
xor
lcall
adc
mov
sub
adc
pop
shrl
mov
int3
mov
ljmp
les
aam
test
and
mov
cld
mov
cmpsl
and
outsl
int
jae
popf
rcll
inc
mov
push
dec
adc
fs
rcrb
rcr
mov
mov
adcl
ret
popa
int
ja,pt
jae
pop
into
xor
ret
adc
in
scas
inc
xchg
add
inc
push
fisubrs
cmp
jbe
subb
sub
push
test
sbb
mov
cmp
sbb
sarb
mov
bound
inc
dec
dec
ljmp
push
mov
cwtl
dec
std
inc
xchg
jbe
add
fcompl
xchg
mov
das
xor
cmp
imul
lahf
xorb
push
xor
cmpsl
shll
jb
outsl
lods
mov
popf
out
sub
rolb
jmp
dec
std
pop
sbb
mov
mov
mov
in
pop
cmpl
mov
push
push
mov
inc
xlat
je
mov
sbb
or
in
sbb
lods
movsl
mov
dec
dec
cmp
rolb
loope
mov
leave
arpl
push
frstpm(287
cmp
adcb
fcmovne
cmp
cmp
enter
leave
pop
ret
sbb
cltd
jne
ljmp
repnz
inc
ljmp
cld
pop
and
cmp
dec
subb
loopne
pushf
in
out
mov
mov
cli
iret
inc
inc
scas
xchg
subb
out
shrb
aas
mov
negb
sbb
test
cmp
pusha
pusha
xor
jno
sub
cwtl
push
add
adc
dec
jnp
cli
fidivs
cmp
inc
inc
sub
jno
sbb
mov
fsubrl
adc
add
mov
inc
mov
xchg
or
loop
push
push
pop
enter
lods
mov
outsl
pop
adc
rcll
test
push
movb
mov
mov
sti
xchg
xchg
add
or
aam
repnz
arpl
cmpsb
jns
xorl
sti
mov
les
faddl
int
decl
mov
inc
pushf
enter
jg
xor
flds
out
ss
jbe
pushf
test
cmp
in
in
ss
cld
nop
mov
add
add
out
push
rcl
sahf
xor
out
outsl
aas
cmp
ret
es
add
add
pop
push
sti
fsub
js
mov
lahf
pusha
add
ja
pop
icebp
mov
into
clc
outsb
data16
push
test
incl
xchg
push
sbb
in
dec
test
adc
adc
and
pop
popf
mov
xlat
jnp
pusha
mov
mov
cmp
mov
cmp
cmp
bound
sbb
add
pop
aam
cli
and
in
stc
popf
mov
pop
pop
rdmsr
rolb
mov
ret
xchg
jne
jmp
xchg
jge
adc
push
mov
inc
jbe
xchg
inc
dec
cmp
mov
inc
adc
push
stc
sar
icebp
pop
pop
push
push
fucomip
xor
sub
sub
and
popa
cwtl
sbb
scas
adc
xchg
jp
or
ror
push
push
dec
lods
cmp
test
sub
popa
int3
sub
pop
push
imul
add
xor
les
mov
xchg
xchg
inc
mov
mov
pop
les
and
add
push
mov
ret
and
adc
stos
mov
pop
or
pop
rorb
shrl
outsl
sahf
mov
rorl
insb
sbb
mov
sub
push
mov
lock
or
lcall
mov
xchg
in
mov
in
dec
sbb
add
call
in
jns
iret
out
mov
negb
sbb
repz
data16
dec
mov
leave
mov
xorl
stc
pop
pop
lahf
data16
cmpsl
cmp
xor
sub
jnp
inc
loopne
or
test
movsl
mov
xchg
jl
pop
outsl
aas
cmp
cltd
lods
add
in
into
cs
add
pop
nop
push
mov
insb
add
fcompl
stos
jg
and
xchg
mov
cmpsb
xchg
mov
lds
or
cmpsb
andl
jnp
add
push
jb
xor
push
and
pop
dec
scas
push
hlt
lods
stc
and
xchg
and
pop
sub
sub
jle
jo
inc
outsl
push
jnp
inc
mov
das
pop
pop
mov
cmp
dec
mov
cmp
mov
pop
lret
dec
mov
clc
mov
outsl
push
or
adc
insl
popa
push
out
gs
and
push
pop
add
xor
cmp
mov
repnz
jmp
test
scas
test
adc
ret
fnstcw
add
add
test
clc
sti
dec
fwait
cmpb
fisubl
fisubl
sbb
add
pop
mov
jns
not
or
mov
sahf
sbb
stos
pop
mov
lock
cmp
sbb
push
insl
xor
adc
adc
adc
scas
adc
jnp
rcr
push
mov
jae
cmp
mov
mov
push
cmp
and
xor
push
inc
and
int
loopne
adc
fnsave
push
inc
data16
mov
dec
outsl
rcll
mov
int
sub
mov
lods
adcl
inc
push
xor
rclb
jbe
or
ja
imul
fsin
insl
and
jmp
arpl
add
lds
iret
and
lcall
popf
out
jo
mov
lahf
or
xor
cmp
bound
lock
not
adc
mov
add
push
je
lahf
lock
mov
daa
scas
xor
sbb
jae
sub
xchg
loope
xchg
jae
xchg
ss
sti
and
add
sbb
lock
jecxz
out
sbb
jecxz
clc
and
cmp
xchg
aad
pop
data16
inc
enter
xlat
sbb
mov
or
pop
loopne
lcall
jb
pop
jl
mov
dec
sub
call
test
das
xchg
mov
aas
stc
xchg
jnp
decl
jnp
cmp
mov
sbb
mov
add
lods
imul
subl
stos
mov
movsb
dec
jnp
xchg
std
lret
fidivl
cmp
ljmp
stos
aam
cld
movsb
aaa
mov
ljmp
mov
xor
mov
cmpsl
repnz
test
mov
lret
dec
lret
fs
push
aad
and
jnp
in
xor
ficompl
jae
jnp
in
adc
hlt
cmp
nop
adc
js
aam
mov
add
cmp
dec
scas
add
jno
sbb
aaa
push
cmp
sub
xlat
push
push
sbb
enter
cmp
addl
dec
and
push
rorb
test
jge
ret
mov
test
enter
fdivl
jbe
mov
mov
incl
sub
mov
ja
cmpl
jae
cmp
outsb
cltd
mov
xchg
loop
cmp
daa
test
xor
dec
daa
ja
std
shll
xlat
xlat
imul
inc
jno
and
out
repnz
ljmp
mov
ror
xorb
sbb
data16
inc
dec
outsl
in
push
rcll
lods
adc
movsl
jo
sub
dec
stos
loop
xchg
pushf
dec
xchg
ds
sub
and
adc
sub
decb
cmp
push
popl
jns
xchg
jg
mov
pop
mov
adc
sub
push
shrl
fisubrs
adc
pop
rcl
mov
mov
cmp
inc
or
iret
and
and
aaa
and
xor
ffreep
xlat
push
in
pusha
jo
adc
jns
repz
shll
push
xchg
test
jmp
fucom
mov
ficoms
lods
lds
adc
sub
pop
jge
addr16
mov
add
sahf
or
adc
das
out
sbb
stc
stos
mov
push
inc
sahf
jmp
loop
cwtl
shrb
call
mov
adc
in
cmc
rclb
in
out
ljmp
pop
mov
pop
xor
jle
stos
pop
loope
test
adc
or
mov
lods
jge
mov
inc
push
jb
jmp
xchg
cmp
xchg
xchg
imul
stc
imul
das
dec
push
std
std
gs
idivl
mov
add
rcrb
and
out
mov
push
je
push
loope
movl
sahf
and
mov
pop
pop
aad
ljmp
dec
rcll
cmpsb
insb
xchg
rcll
shl
pop
mov
push
adc
lock
dec
sub
ja
movl
icebp
and
mov
js
lret
cld
aas
pop
mov
rclb
ja
mov
movsb
jb
aas
mov
sahf
add
lahf
int3
push
adc
dec
jno
out
xor
cmpb
push
outsl
or
fnstenv
mov
bound
mov
push
add
insl
sub
mov
outsl
and
notl
ret
nop
in
pslld
rep
or
arpl
push
aad
sub
sbb
add
inc
aaa
dec
push
and
sub
push
shrb
lods
incl
sub
mov
or
sbb
jo
shl
push
inc
mov
test
add
mov
mov
fstp
or
imul
test
jle
mov
ret
rclb
push
cli
mov
push
clc
push
je
ds
pop
loopne
and
mov
dec
mov
push
loope
popa
mov
xor
jno
adc
dec
dec
lret
aad
push
adc
add
sbb
call
jae
xorb
and
repnz
mov
cld
push
xor
stc
test
and
pop
arpl
jg
repz
lahf
pop
mov
repnz
int
inc
fimull
mov
or
out
push
lock
lahf
es
in
movsb
rorl
xchg
cwtl
daa
cmpsb
int3
hlt
adc
push
inc
test
bound
sbb
inc
mov
out
push
xor
pop
iret
sub
hlt
ret
pop
mov
fwait
in
jecxz
sbb
mov
adc
or
inc
push
cmp
adc
mov
int
scas
shll
xor
adc
stos
rcll
jg
xchg
aad
sub
mov
cmp
in
enter
add
iret
loope
fisttpl
decl
jb
ljmp
repnz
mov
in
sub
insl
aas
push
lcall
sbb
test
imul
lcall
add
adc
push
pop
xor
pop
out
push
ficomps
sbb
inc
mov
lock
sub
mov
and
call
push
mov
fstl
shl
sub
mov
inc
repz
sub
aam
push
cli
sbb
stos
das
jb
jp
dec
gs
xor
sbb
xor
int
or
cmp
push
je
call
shll
fstpt
ret
mov
jp
filds
push
cli
fwait
push
fnstsw
lahf
jno
in
cwtl
incb
sub
cmc
call
cmpl
cltd
xorl
ja
pop
or
lahf
sub
xchg
push
add
movsb
mov
pop
inc
lea
hlt
cld
mov
sbb
mov
fsubrs
std
mov
popf
and
call
pushf
test
mov
jbe
imul
faddl
into
iret
out
inc
in
jnp
push
stc
mov
mov
or
push
push
cmpsb
iret
loope
popa
mov
and
or
sub
lret
aam
xor
jl
sub
call
test
xor
lret
rcrb
sub
pop
jb
xchg
sub
ret
mov
cltd
addr16
scas
cltd
pop
and
adc
js
rclb
xor
out
sub
push
xor
loopne
int
in
cmpsl
cld
add
inc
shrl
je
xchg
cmp
mulb
or
pop
sti
aam
push
imul
lcall
inc
lahf
jmp
roll
push
cmp
out
idivl
shl
jno
dec
inc
cltd
loope
fwait
sub
or
lods
int3
mov
mov
mov
or
add
fbstp
xchg
test
fnsave
mov
popf
jl
lods
push
ljmp
mov
outsl
xchg
fadds
and
xchg
insb
fildll
mov
enter
jmp
repnz
lret
fisttpl
push
xchg
mov
bswap
imul
mov
mov
ret
lcall
adc
pop
enter
pop
and
xor
mov
fs
inc
fistps
out
push
sti
notl
jmp
jb
addl
push
push
add
jno
jb
push
ret
sub
push
cmp
cmp
lahf
stos
fcomps
cmpsb
insl
stc
sahf
out
out
scas
xchg
jno
js
xchg
adc
sbb
and
shrb
inc
bound
in
iret
sbb
sbb
xchg
sub
scas
xor
push
jbe
pusha
lods
cmp
insb
cmpsl
inc
pop
repnz
iret
and
fdivp
in
push
push
dec
inc
push
stc
out
xor
orl
fxch
les
arpl
int3
cmpsl
mov
test
mov
xor
mov
and
jo
xor
pushf
or
mov
arpl
dec
adc
or
orb
outsl
mov
push
in
add
pop
sub
sbb
adc
daa
mov
jge
mov
ljmp
rcrb
xchg
sub
fidivrs
insb
xchg
and
loope
out
sbb
jns
mov
pop
mov
out
push
dec
jge
pop
into
xlat
inc
and
jge
inc
pop
mov
sub
ljmp
cmp
cmp
cmp
divl
in
adc
xor
push
in
loope
or
push
lds
jbe
lods
dec
or
sar
mov
push
repz
xchg
shlb
or
std
mov
xchg
int3
out
out
jno
rcl
xchg
fwait
jne
cmpl
or
add
call
repnz
out
lds
mulb
sbb
fisttps
pop
pusha
jg
mov
mov
mov
cs
out
pop
xchg
push
icebp
jg
pop
mov
rcr
jo
repz
test
test
cmp
outsb
fstps
lods
dec
cmpsb
fnstsw
fnsave
add
mul
ror
ds
cmc
scas
dec
sti
and
mov
aaa
fucomi
aaa
in
jmp
aas
mov
cmp
inc
aaa
cmpsb
gs
xchg
scas
outsl
jae
loopne
popf
xchg
daa
sbb
fdivrs
sbb
popa
pop
rcrb
shrl
leave
sahf
subl
repz
xchg
mov
push
popf
test
dec
jb
jmp
into
add
iret
test
adc
cld
mov
push
das
pop
inc
out
dec
rcrb
dec
dec
jp
xchg
push
sub
cmpl
popa
mov
mov
shrl
and
push
cmpsl
imul
xor
int
imul
nopl
in
repz
ret
jmp
inc
lods
cmp
push
jns
or
push
repnz
inc
out
repnz
aam
in
cmp
orl
fsts
xor
test
mov
pop
dec
xor
lret
int
xchg
stos
xchg
mov
leave
pop
mov
adcl
in
test
mov
repnz
xor
push
test
stc
mov
rcrl
mov
insb
loopne
stos
fistl
push
imulb
and
cmp
fcmovnb
outsl
inc
es
add
and
xor
jne
sub
inc
stos
std
shr
jecxz
xor
xchg
test
dec
outsl
hlt
pop
loope
add
lahf
js
or
cltd
rorl
sub
xor
jp
fs
outsb
inc
sub
inc
inc
cmp
sub
mov
xchg
inc
dec
mov
movsl
mov
test
or
mov
ret
cmc
inc
aaa
pushf
std
mov
ja
cmp
or
jbe
mov
pop
sbb
das
in
push
dec
add
lcall
rorb
jp
add
fcoms
daa
push
dec
cmp
ret
xor
stos
andb
push
out
ss
mov
jg
cld
sub
insl
ret
mov
mov
push
adc
cmp
js
stos
inc
sbb
cli
inc
push
sub
inc
add
and
ret
outsb
mov
fwait
cs
leave
popa
enter
push
hlt
mov
mov
stos
cmpsl
fisubl
imul
sbb
fildl
fstpl
xchg
sub
fwait
inc
sbb
insb
xor
pop
lahf
in
iret
out
movsl
and
and
lret
pushf
imul
push
xchg
mov
dec
loopne
movsl
je
test
push
into
lock
or
push
xchg
lret
jge
mov
cli
clc
push
les
in
xor
cmp
cs
adc
pop
aaa
fsts
in
sbb
loope
adc
push
shrl
dec
dec
or
add
sbb
inc
dec
or
lock
or
mov
int
or
sbb
loope
mov
fdivl
mov
gs
xchg
mov
push
daa
pop
add
dec
or
repz
mov
cmp
mov
fistpll
jle
xchg
repnz
imul
mov
ret
pop
sub
into
mov
rcrb
push
xchg
fnsave
jmp
mov
sub
pop
sub
subl
cmp
repnz
lods
insb
int
hlt
or
nop
push
jecxz
dec
mov
std
pop
outsl
scas
or
leave
sbb
and
mov
pop
stos
cli
jmp
sbb
sub
enter
dec
mov
pop
data16
mov
push
pop
xchg
loope
push
dec
xchg
popa
cmpsl
push
add
sti
mov
loop
cltd
sbb
push
stos
adc
cmp
into
xchg
addb
pop
and
fstpl
jns
xor
push
cmp
or
mov
push
dec
roll
lcall
imul
adc
xchg
shrl
inc
sbb
jmp
xchg
sti
repz
and
xchg
in
pop
sti
data16
jb
and
lea
repz
aaa
aaa
mov
pop
jnp
imulb
jnp
test
imul
ret
js
jo
jl
inc
push
mov
mov
shlb
push
sbbb
lock
or
cli
add
dec
test
or
adc
push
push
rcrl
cltd
add
mov
cmp
dec
cmpsl
stos
fldt
or
popl
or
sub
int3
push
mov
mov
jae
fimuls
xchg
fistpll
scas
test
popf
std
fdivrs
jp
ret
xchg
pop
pop
add
sbb
sub
cmpb
pop
jmp
cmpsb
pop
fsubs
lret
call
jmp
cmc
jge
xchg
xor
sub
imulb
cmp
nop
or
or
mov
lea
stos
mov
subl
out
out
or
pusha
cltd
lods
je
jl
les
mov
sub
push
jg
mov
inc
lock
lods
inc
xchg
pop
pop
adc
jl
push
mov
ret
push
stos
mov
xchg
adc
adc
mov
and
jmp
sub
jecxz
lea
sahf
mov
jnp
jge
arpl
inc
sbb
mov
aad
or
or
mov
pop
push
ljmp
adc
xor
popa
push
sub
test
sbb
adc
adc
lahf
iret
movsb
cmp
cmp
cmp
inc
xchg
into
xchg
sub
sbb
stos
loop
and
add
xor
mov
ror
rclb
mov
xor
movsb
sbb
jp
gs
xlat
mov
adc
das
out
cli
ja
dec
mov
scas
clc
mov
test
test
sarl
fbld
sbb
or
lods
jnp
aaa
mov
cs
mov
dec
jp
cmc
or
sbb
outsb
mov
enter
outsl
mov
dec
aaa
cli
pop
lea
imul
loope
out
loopne
mov
cmc
lods
or
xor
mov
and
fwait
insl
clc
mov
cmpl
jge
cmp
aaa
test
cli
push
iret
mov
into
cmc
lea
mulb
in
mov
sub
mov
xchg
and
movsb
cmp
fwait
xchg
mov
dec
pop
ficoms
cmpb
sbb
and
cltd
stc
mov
pop
add
fadds
mov
out
ljmp
sbb
pusha
mov
inc
sub
or
cltd
mov
stos
pop
and
add
sbbb
pop
jne
in
popf
cmp
fwait
popa
add
cmp
mov
subb
movsb
dec
outsl
out
and
mov
push
cmp
adc
aaa
call
pop
mov
cmpsl
int
or
sbb
adc
jno
mov
xor
popf
lret
leave
fsts
scas
jae
xchg
test
or
pop
das
jmp
push
fs
mov
cmp
mov
movsl
mov
and
ljmp
mov
mov
addr16
adc
sub
and
jg
imul
out
sub
sarb
aaa
mov
cmp
mov
mov
stos
shll
andl
push
jmp
pop
sub
pop
mov
pop
pop
dec
int
push
pop
sub
jmp
mov
pop
push
sbb
add
cmpl
in
shll
inc
outsl
shlb
or
cltd
ret
adc
jns
xor
add
dec
in
imul
adc
push
dec
pop
imul
cld
insb
xor
or
movsl
out
ja
shrl
cmp
test
dec
cmpsl
loopne
adc
push
imul
xchg
mov
and
adc
inc
repnz
icebp
es
lds
idivb
pop
ret
pop
jl
fcomps
sbb
add
mov
and
xchg
lret
jp
xor
into
cmp
jno
mov
push
xor
sbb
jbe
mov
mov
jge
mov
repz
pop
bound
scas
cmp
fcompl
imul
dec
cmpsl
pusha
ja
insl
jae
dec
daa
dec
adc
inc
mov
push
cs
mov
shrl
cld
out
sub
ffree
gs
cltd
mov
les
add
mov
push
xor
cmpsb
and
cmpb
mov
loop
notb
lret
sub
dec
outsl
xchg
mov
fwait
mov
cmpsl
push
loope
mov
mov
out
fiadds
ljmp
add
dec
or
jae
orl
dec
cmp
cmc
dec
jmp
mov
adc
cmp
mov
popa
rcll
in
ret
dec
hlt
mov
mov
or
adc
lea
sub
inc
ret
pop
xchg
push
jl
or
es
jmp
outsl
mov
xor
out
or
insl
push
xchg
xchg
inc
mov
lods
daa
and
xor
add
lcall
cmp
mov
into
dec
sbb
arpl
fisttps
icebp
int3
mov
adc
popa
scas
lret
sbb
and
jns
push
lahf
inc
outsl
ja
cmp
dec
dec
sbb
mov
mov
or
push
cld
lret
add
data16
cli
xor
cmp
mov
inc
pop
mov
sbb
jo
in
stc
repnz
jl
imul
add
xchg
data16
data16
dec
test
repz
xorb
and
push
adc
add
stos
pushf
shl
pop
shrb
loopne
dec
jnp
sbb
xlat
fldenv
in
loopne
or
inc
sarl
fdivrs
jecxz
aad
out
cs
pop
stos
int3
and
cmc
sbb
or
push
aaa
mov
mov
out
mov
push
cld
pop
enter
sbb
iret
dec
pop
repnz
popa
sub
or
xor
inc
and
stos
xchg
sub
jge
dec
leave
mov
int3
sbb
sbb
push
or
ret
dec
mov
mov
xchg
popf
jmp
mov
mov
sbb
test
inc
outsb
adc
jns
cmpb
sarb
jb
cs
or
in
xchg
push
inc
mov
add
push
sbbl
dec
insl
dec
dec
sbb
data16
fistl
xor
cmp
push
test
sti
jno
inc
xchg
shl
cli
sbb
loop
cmp
adc
mov
mov
mov
sub
fwait
incb
retw
out
and
out
fbld
icebp
xor
fsub
jnp
jg
adc
mov
rcrb
mov
pop
idivb
fiaddl
dec
enter
push
leave
shll
mov
mov
jle
adc
sub
pop
xchg
mov
and
or
xchg
fucomi
insl
inc
mov
stos
in
jne
shrl
sbb
sub
inc
cmpsb
js
xor
cmp
mov
imul
sub
cmp
push
sbb
fstl
or
dec
pop
mov
pop
stos
push
xor
mov
mov
nop
jl
mov
fldt
xor
imul
fisttpll
mov
test
adc
and
mov
jl
andb
xchg
xor
push
sbb
xchg
pop
xchg
ret
push
adc
push
cmc
lock
enter
js
fwait
sub
mov
add
jp
nop
add
inc
nop
sbb
out
cmp
or
fdivrs
mov
fiadds
cli
xchg
pop
mov
adc
test
and
push
cli
in
ret
jl
sbb
repz
pop
daa
repz
push
cmp
stos
xchg
jb
push
add
xchg
pusha
div
out
inc
out
fld1
mov
rol
leave
aaa
scas
enter
pop
xchg
rcrb
ljmp
or
push
mov
cli
sbbl
xor
mov
cltd
xchg
pop
mov
gs
xchg
loope
inc
jl
mov
hlt
mov
insl
lods
dec
orl
scas
sbb
data16
push
div
pop
fildl
popf
les
push
jp
push
or
adc
pop
sub
inc
fbld
push
cli
mov
iret
loopne
add
movsb
jae
mov
mov
pop
sbb
or
and
loope
lahf
inc
lea
cmp
and
push
sub
add
mov
sub
fimull
dec
or
testb
dec
fsubrp
cmc
les
pop
fdiv
cltd
stc
mov
sbb
je
jns
pop
fisttpll
data16
or
jns
dec
and
push
sub
icebp
cltd
sub
mov
mov
adc
push
cmp
jnp
in
mov
mov
imul
and
incl
outsl
adc
xchg
jle
mov
inc
aam
xchg
or
test
cli
movsl
aaa
loope
inc
push
scas
pop
cli
repz
pop
add
xor
xor
mov
jnp
sbb
mov
fadd
mov
mov
inc
or
jae
mov
lcall
and
or
xchg
mov
xchg
sbb
movsl
enter
cmp
ss
rcrb
fisubl
push
rorb
and
ljmp
xlat
sbb
notl
jo
gs
idivb
pop
das
enter
clc
cld
js
fs
fistps
xor
int3
cli
pop
push
cmp
nop
fstps
xlat
inc
push
cmpsl
push
mov
push
movsl
stc
lret
repz
repnz
push
mov
or
jge
fsubl
adc
mov
or
mov
and
fisttps
jp
or
mov
aaa
or
cwtl
fists
mov
lds
push
xlat
fildl
cmp
jmp
push
fdivs
cmp
je
js
adc
and
les
insl
bound
and
loop
mov
popf
fstpl
xor
sbb
call
mov
sarb
pop
mov
popf
popf
les
mov
mov
mov
sbb
mov
pop
fisubl
xchg
sarl
or
inc
and
stc
fs
jno
sbb
bound
aad
bound
arpl
mov
repz
movsb
lock
imul
imul
mov
pop
test
inc
out
pop
movq
repnz
fcoms
loopne
andl
mov
fistpl
test
test
mov
fstpt
scas
push
notb
and
xchg
xchg
push
pop
dec
ss
xor
sbb
jp
leave
mov
out
pop
sub
ja
jnp
cwtl
icebp
jmp
jbe
in
xor
call
pushf
fistpll
lods
fidivrs
jae
sahf
iret
hlt
dec
outsb
imull
sub
sbb
cmc
xor
lahf
xchg
fdiv
imul
mov
ja
aaa
fdivl
push
xlat
cmp
push
xchg
lcall
mov
movsl
bound
jmp
xorl
pop
ret
inc
clc
movsl
cli
fdivrs
ljmp
adcb
ret
dec
data16
dec
lahf
ret
jl
push
pushf
add
loopne
inc
pop
or
xchg
xchg
test
mov
dec
lret
push
mov
test
or
sarb
bound
popa
cmp
aaa
sbb
lcall
jmp
aaa
hlt
fcmovu
lods
lret
mov
hlt
enter
cld
lods
enter
sub
popf
imul
loopne
jno
dec
sbb
inc
push
mov
sarl
cmpsb
push
mov
mov
les
mov
call
repnz
outsl
jnp
jns
jnp
mov
sti
je
cmpsl
mov
arpl
jae
push
mov
lret
and
jg
out
mov
adc
ljmp
mov
sbb
in
xor
or
ljmp
ret
mov
jns
adc
xchg
test
sub
andb
stos
dec
mov
push
repnz
shll
cmpsb
cltd
jbe
sar
adc
xchg
ret
test
test
cmpsb
xchg
pop
aaa
repnz
negl
cmpsb
sub
xchg
xor
loop
es
and
sbb
pop
in
js
lock
idivl
stos
mov
dec
movsl
xchg
add
push
and
jno
sbb
shr
xlat
mov
aam
rcll
out
and
lcall
ljmp
hlt
mov
les
outsb
aam
lods
sub
out
pushf
hlt
jae
pop
jae
inc
loop
call
add
jne
icebp
mov
pop
lahf
push
inc
pusha
jle
cmp
ljmp
sti
cmp
lods
and
pop
xor
lods
pushf
out
in
fwait
cmp
adc
js
arpl
dec
jmp
add
dec
add
push
dec
cltd
cmc
clc
cmp
add
rcll
jae
push
xchg
mov
test
gs
push
mov
mov
mov
mov
xchg
pop
xor
or
jns
push
out
shll
arpl
push
and
in
cmp
mov
arpl
out
sub
js
and
sub
stos
inc
cmpsl
push
push
jge
insb
movsb
adc
mov
and
add
mov
pushf
pop
lock
pop
mov
ss
fldt
mov
push
call
rorb
ss
ficompl
dec
xor
adc
out
pop
rcrl
rol
mov
insb
loope
cmp
aad
mov
and
inc
mov
push
inc
or
xrelease
imul
pop
bound
sub
aam
sbb
aas
pop
jne
lds
cmp
inc
cmpsl
gs
jecxz
mov
jecxz
mov
je
repnz
cmp
and
sub
cmc
or
sub
sbb
clc
xor
push
dec
mov
movb
data16
and
test
and
test
mov
add
inc
dec
iret
jnp
lds
jno
pop
push
mov
repz
pop
aas
push
aad
push
in
loopne
jge
and
sbb
cs
pop
ret
jmp
mov
jl
stc
pushf
das
cs
dec
leave
jmp
pop
push
jecxz
dec
shl
xchg
ret
or
push
cmp
aas
push
or
pop
sub
jnp
insb
cli
inc
shr
xchg
je
jmp
or
movsl
or
or
add
scas
cmc
jne
scas
mov
hlt
jp
mov
mov
add
scas
pop
mov
sbbl
fisubl
aam
fistps
inc
dec
rclb
inc
sahf
mov
arpl
inc
cmp
inc
jp
out
fdivrs
popa
mov
xlat
push
fsubl
jecxz
aas
cmp
in
icebp
mov
sub
fwait
dec
xchg
xchg
subb
int
imul
adc
cmp
fsubrl
inc
pop
jp
mov
mov
nop
lods
adc
push
jne
mov
fiaddl
mov
pop
inc
adcl
repnz
pop
sahf
xor
fwait
dec
int3
mov
ret
dec
sub
add
inc
pop
pop
add
add
pop
fnsave
push
push
push
pop
sub
sbb
or
sbb
mov
push
scas
jle
std
mov
jae
jbe
enter
sbb
pop
jns
or
or
arpl
insl
icebp
sub
shlb
adc
jo
adc
jp
jmp
dec
dec
aam
ljmp
jno
inc
aad
in
push
cld
cmp
sub
scas
jmp
jno
pop
addr16
lock
stos
pop
mov
dec
push
jl
jns
lret
cmp
add
leave
imul
idivl
cmpsl
xor
dec
ljmp
clc
push
loop
out
xchg
push
and
repnz
ret
pop
pop
push
pop
pop
aad
daa
sub
push
mov
mov
repz
lods
mov
leave
xchg
mov
fnstenv
bound
pop
addr16
dec
rcr
cmp
inc
mov
fidivrl
test
jae
fstps
pop
or
add
inc
das
iret
inc
pushf
mov
lods
mov
mov
int
push
or
ss
js
push
xchg
inc
shrl
cwtl
jmp
out
mov
inc
sub
aad
fldcw
pop
mov
cmpsl
mov
test
add
mov
test
mov
mov
out
movsb
decb
lods
sbb
sub
decl
jg
xor
push
jl
cmp
cli
inc
pop
bound
loope
shl
test
dec
ror
inc
xorl
push
push
aas
repnz
loopne
popf
stos
cmovb
insb
sub
xchg
rclb
inc
sub
mov
mov
popa
setns
outsb
inc
aad
mov
push
or
test
push
jle
stos
and
push
mov
data16
push
fst
daa
adc
insb
loop
fstpl
lods
jb
push
sbb
xor
punpckldq
inc
data16
and
xor
add
sbb
xlat
mov
loop
jmp
movsb
adc
cwtl
dec
scas
add
add
nop
fcomps
jge
movsb
les
std
rcr
mov
lret
adc
cli
aas
fisubrs
mov
and
sbb
jo
sbb
leave
lret
out
push
outsl
mov
or
sub
push
in
fldenv
pop
testl
xchg
inc
pop
stos
xchg
and
std
adc
adc
jnp
xor
dec
sub
leave
xor
push
stos
lods
lods
mov
jle
sbb
sbbl
xchg
imul
add
xchg
insl
or
mov
cmp
out
xchg
fsubrl
or
in
and
bound
icebp
cld
inc
jno
xchg
cmp
and
imul
es
lds
rolb
not
sbb
sub
fnstsw
mov
xor
inc
mov
dec
ret
fildll
test
lods
and
sub
jl
add
push
daa
xchg
adc
sub
incb
mov
dec
cmp
icebp
jge
jo
mov
lods
push
test
stc
pop
jnp
adc
in
pop
leave
mov
push
or
pop
xor
lods
ja
inc
mov
fadds
pop
rcrl
mov
sbb
add
mov
je
rolb
cs
and
or
imul
nop
mov
jmp
int
scas
mov
jns
arpl
cmp
fldenv
into
decl
sbb
dec
mov
lret
int3
leave
leave
dec
add
repnz
icebp
mov
or
inc
push
das
or
xchg
dec
repz
sbb
inc
push
out
aas
jmp
jl
xor
xchg
jae
stos
vmptrst
xchg
inc
xchg
lahf
sub
sbb
jo
jns
shl
int3
add
pushf
ja
jne
fidivrs
int3
xchg
testl
in
loop
jp
push
pop
lds
insl
xchg
es
insb
int3
cld
test
ds
nop
iret
cwtl
pop
dec
xchg
jmp
push
addb
mov
in
shlb
test
js
inc
adc
fs
in
in
shll
jno
xor
cmpsb
sbb
push
xchg
push
xchg
jle
enter
pushf
iret
lea
jb
jle
push
dec
cmp
xor
insb
nop
sbb
push
and
xor
xlat
mov
iret
js
stc
cld
add
cmp
fldcw
dec
push
sarl
arpl
aaa
jmp
aaa
sbb
push
neg
rol
sbb
or
and
sub
push
push
mov
test
cmp
in
shll
outsl
sub
mov
movsl
cmp
add
andb
sub
sub
in
sub
xchg
mov
mov
sub
mov
mov
or
ret
fsubs
adcl
out
loop
es
lcall
lahf
inc
pop
dec
xchg
notb
cmpsl
addr16
mov
lahf
cmpsl
hlt
pop
add
add
sbb
lret
lods
jbe
pop
xchg
sub
filds
imul
aam
loopne
add
loop
cltd
push
addl
jo
cld
std
cmpsl
xor
test
sbb
repz
sbb
aaa
scas
xor
mov
xchg
cmpl
out
lret
xor
fdivrl
mov
rcll
mov
add
xchg
in
leave
xchg
daa
mov
jmp
jmp
cli
cmp
bound
jbe
mov
pop
cld
shlb
push
test
das
popa
stos
gs
insl
out
cs
pop
cmpsb
js
inc
ret
decb
push
mov
jg
sti
xlat
fwait
loopne
mov
pop
sbb
push
cmp
xchg
mov
insb
in
sub
stos
js
push
sbb
lea
imul
sahf
lods
arpl
mov
movsl
add
push
add
std
jp
xor
push
int3
lret
roll
push
outsb
addr16
jl
adc
nop
rcll
add
imul
inc
fildll
push
les
test
inc
jno
inc
das
andl
xor
movsl
and
push
popf
lret
or
sti
fs
push
cmp
cmc
cmp
inc
mull
inc
inc
fmuls
push
inc
pop
sub
filds
scas
cmp
test
divb
leave
mov
fs
jae
lahf
sbb
iret
ret
or
inc
pop
and
push
ja
sbb
and
jmp
inc
mov
stos
xor
adc
hlt
adc
pop
stos
stos
jg
xchg
in
or
pop
lock
out
adc
push
mov
cmp
pusha
xchg
push
add
icebp
ret
dec
hlt
shll
xor
popf
jbe
fcmovnu
in
jecxz
add
ja
cltd
sbb
es
test
loope
dec
dec
shll
movsb
fidivrs
sub
es
aad
lds
adc
xor
ja
jg
jge
or
push
repnz
rol
sahf
xchg
mov
xchg
mov
in
cmp
imull
jbe
jno
xorb
jg
adc
adc
dec
inc
jo
jns
push
movsl
xor
jmp
dec
inc
orb
in
xor
or
lcall
fistl
push
fsubrl
in
jns
add
sub
sti
push
cmp
sub
ss
or
je
test
adcb
sub
xchg
xchg
arpl
rorb
in
sti
dec
add
repnz
in
and
or
or
inc
jle
lods
fyl2x
cmc
pop
leave
add
loop
sub
cmpsl
inc
adcb
jmp
xchg
insl
sub
lcall
cmp
hlt
adc
jb
or
add
cmc
jae
add
and
sti
dec
inc
and
mov
mov
adc
fwait
pop
lgs
int
imul
cmp
jle
out
sbb
mov
in
aam
jp
or
or
xchg
icebp
movsb
sarl
bound
inc
inc
sahf
mov
xchg
xorb
vmulps
test
or
in
into
xchg
pop
xchg
outsb
popf
and
sub
pop
out
mov
push
push
mov
sahf
and
push
adc
xchg
fdivrs
mov
lret
xchg
insb
mov
mov
push
nop
addr16
aad
or
lock
sub
mov
xchg
in
xchg
sbb
and
add
xorl
cltd
ret
in
loope
push
sbb
pop
in
movsl
sub
test
bound
cmpsl
push
les
mov
sarl
or
xor
int
int3
mov
pop
sub
mov
rcrb
pop
loopne
aad
shl
jb
jne
mov
and
cld
mov
inc
shlb
bound
popf
xchg
jmp
or
mov
mov
inc
mov
jne
xchg
or
fwait
out
xchg
sub
cltd
enter
xchg
fnstcw
dec
xorl
push
adc
shrb
fmuls
jo
mov
cmpsl
cmp
cmc
jo
cmp
mov
movsb
inc
rcll
aaa
mov
or
jbe
addr16
orl
inc
dec
fcmovnbe
mov
jnp
or
add
pop
add
xor
imul
mov
dec
icebp
dec
nop
cmp
pop
add
dec
data16
dec
cmp
icebp
xlat
mov
inc
idivb
imul
adc
sub
and
mov
jns
pop
sbb
loop
loopne
subb
sti
dec
fsubl
and
imul
out
pop
xor
xlat
cltd
or
mov
push
cwtl
scas
test
lods
out
out
imul
cmp
mov
jle
arpl
mov
clc
jo
sub
fs
pop
jne
enter
push
in
push
js
mov
and
jnp
repz
js
test
jge
mov
adcb
in
out
sbb
mov
and
mov
cld
mov
jp
push
cmp
xlat
push
clc
pop
push
inc
push
int
lea
pusha
cmp
les
sub
xorb
jmp
int
adc
pop
add
lds
or
xorb
pusha
cmp
cmc
cmp
add
ja
and
push
add
stc
ret
mov
mov
xor
adc
jb
icebp
cmpsb
les
mov
sarl
test
rcrl
fsubs
popf
rcrl
cmp
cmpsl
rcrb
xchg
jmp
xchg
test
sub
bound
adc
inc
sbb
pop
in
push
stc
fsub
push
cli
out
icebp
in
xchg
imul
inc
jge
cltd
fs
pmaddwd
std
dec
xchg
dec
loopne
xchg
push
and
sarb
push
nop
jno
push
outsb
cwtl
loopne
nop
or
int3
sti
cmp
mov
stc
inc
sub
sbb
jmp
xchg
mov
and
arpl
sub
pop
out
xor
or
sub
push
dec
jecxz
sub
subl
adc
mov
add
in
stc
es
mov
test
push
scas
cwtl
mov
or
xor
jecxz
and
sbbb
dec
dec
cmp
jae
shll
cmp
icebp
mov
push
aam
outsb
ljmp
rcll
iret
cmp
fidivrl
xor
in
or
xchg
mov
aas
fisttpll
rolb
mov
test
lods
and
adc
sbb
sbbb
dec
subl
jnp
push
pop
in
inc
xchg
adc
sub
jb
sti
sti
xchg
mov
xor
pop
sub
mov
xor
add
add
cmpsb
inc
mov
daa
cwtl
or
mov
jno
pop
mov
add
addr16
xchg
pusha
int
fsqrt
jno
popa
mov
pop
fmull
filds
xchg
test
fisubs
xor
add
es
loop
and
adc
jo
fcoms
mov
mov
mov
add
and
fcmovnbe
adc
cld
outsl
stc
fldenv
shlb
ss
dec
mov
insl
fisubrl
or
pop
test
or
roll
adc
out
mov
cli
pop
or
add
xchg
dec
into
cmp
call
mov
out
stos
dec
dec
dec
mov
mov
fwait
clc
xor
jecxz
fdivl
adc
ss
hlt
push
adc
mov
or
inc
shl
mov
adc
test
xor
inc
rol
call
into
push
test
jae
mov
dec
xor
pop
aaa
nop
aad
out
mov
adc
sbb
and
add
je
sub
xor
test
popf
loop
inc
rorl
testb
cmp
repnz
pop
imul
adc
enter
in
faddl
add
fmuls
fwait
push
push
hlt
nop
inc
xor
xchg
scas
adc
lret
mov
xor
mov
pop
jp
and
inc
xchg
mov
mov
mov
cltd
cmp
mov
xor
cmc
push
cmp
jns,pt
int
popf
out
cli
mov
xchg
lds
adc
jge
pop
jl
pop
cld
jns
iret
clc
inc
dec
lea
xchg
xchg
and
nop
mov
in
repz
std
xchg
push
xchg
outsb
mov
test
mov
in
xchg
das
mov
xor
push
xor
or
or
aad
rcll
xor
sti
inc
xchg
adc
mov
ds
nop
sbb
mov
outsl
sub
cmp
stos
daa
add
add
cmp
mov
sub
fwait
mov
jbe
addr16
mov
addr16
push
daa
lock
mov
in
insb
sbb
sarl
repz
lods
dec
pop
xor
add
loopne
mov
in
pushf
movsl
aad
xor
insl
pop
ja
sub
hlt
adc
pop
push
jno
add
rol
leave
xchg
scas
and
addr16
in
aas
mov
lcall
stos
mov
mov
ss
inc
mov
inc
jb
cmp
lock
adc
or
xor
xor
fdiv
jg
jl
xchg
jns
cmp
int
fisubrs
insl
and
arpl
mov
jle
dec
add
out
mov
or
adc
mov
icebp
int3
fiaddl
scas
fmuls
mov
js
inc
pop
test
int3
pop
add
daa
pusha
hlt
xor
xor
js
xor
inc
adc
add
inc
adc
cmp
call
arpl
jo
js
gs
sub
inc
jae
mov
xchg
and
mov
lock
scas
dec
fs
sti
cmp
aam
xchg
test
adc
out
pushf
les
int3
bound
sub
inc
rorl
enter
test
ja
sub
xchg
pop
outsb
jnp
xor
push
mov
jne
or
push
stos
mov
lods
icebp
popl
inc
dec
push
mov
xor
pop
imul
test
and
mov
out
xor
xchg
xchg
mov
repz
or
pusha
mov
push
sub
xchg
push
pop
dec
push
mov
or
mov
std
fisttps
in
push
into
mov
adc
sbb
cmpsb
xlat
xchg
fisubs
sbb
jae
cltd
std
fcomps
scas
inc
call
les
fisttpl
inc
popf
js
push
add
and
jp
ljmp
test
mov
ds
inc
lret
addb
addr16
mov
and
xchg
test
mov
inc
jle
xchg
clc
cmp
push
lea
mov
test
mov
mov
sub
addb
xchg
lahf
pop
push
popf
aad
call
lret
test
cmp
xchg
xor
mov
jle
pushf
sub
je
cmpsl
fwait
lcall
in
jbe
in
or
add
mov
mov
jmp
cmp
jl
cwtl
hlt
cmpsl
inc
popa
call
fcmovne
cmp
std
sub
clc
cli
or
or
jae
pop
xor
adc
test
pop
push
and
xlat
scas
pop
jne
fnsave
pusha
cmp
jge
fdivp
ret
mov
iret
daa
ret
leave
and
sbb
pop
jecxz
cmpsl
cmovg
add
sbb
mov
int
loopne
and
or
mov
in
popf
sarb
pop
mov
sbb
or
pop
pop
sti
daa
cmpsl
mov
cmp
in
shrb
xor
adc
xchg
mov
loopne
mov
mov
inc
jl
pushf
movsl
mov
push
jmp
clc
mov
or
dec
call
fsts
jmp
and
imul
lea
cs
out
int3
repnz
xchg
dec
data16
jg
cltd
lahf
outsl
mov
aam
roll
mov
sub
std
dec
inc
fdiv
cmp
xor
mov
jecxz
outsb
xchg
lea
into
dec
rorb
pop
sbb
push
jle
shrb
gs
pop
scas
stos
out
mov
xlat
or
adc
xchg
sbb
or
scas
scas
scas
xchg
mov
or
call
mov
inc
inc
and
jne
xchg
ret
dec
pop
out
fs
scas
cmp
cld
or
mov
fidivrl
push
mov
test
hlt
outsb
adc
lods
movsb
mov
jecxz
les
jae
xor
mov
cmc
cmp
mov
lcall
dec
out
adc
nop
mov
out
scas
les
cli
fsub
rcr
xlat
adc
aas
mov
mov
imulb
push
jl
fsubrs
popa
in
mov
pop
neg
stos
add
lods
jle
xor
pop
iret
out
add
and
aas
sub
xchg
xor
cmp
fisttps
dec
int
mov
or
pop
testl
nop
jle
inc
leave
xor
or
iret
sahf
push
shrl
xor
out
mov
mov
out
repz
aaa
int
test
or
inc
dec
mov
push
push
mov
daa
adc
mov
mov
nop
movsl
or
das
or
mov
pusha
cmpsb
push
push
inc
stc
jnp
cmp
lcall
ret
icebp
inc
pop
cwtl
pop
inc
and
push
cli
cld
popa
sbb
inc
decl
pop
test
ss
jae
movsl
lret
sarb
mov
adc
xor
loopne
jne
lahf
mov
inc
adc
inc
mov
inc
or
inc
aas
inc
popw
rcl
mov
jmp
imul
or
jbe
fnstenv
xor
popa
mov
lret
arpl
mov
imul
xchg
xor
dec
cwtl
mov
mov
vmovsd
shlb
cmpsb
ss
adcb
push
or
xchg
xor
jae
xlat
insl
mov
test
stos
cmp
dec
jp
xor
movsl
or
mov
jno
jge
or
stc
adc
and
pop
sbb
jne
adc
jge
mov
aas
push
cmp
xchg
stos
push
lcall
rorl
shl
fwait
cmp
pop
mov
jae
icebp
out
sub
icebp
cld
and
xor
out
fcom
jecxz
call
inc
insl
push
aam
rolb
imul
ret
and
ss
add
imul
xchg
inc
pop
dec
or
or
jns
lock
sub
nop
int
add
or
ret
jo
inc
mov
pop
cmp
or
es
mov
sub
xchg
insb
icebp
mov
fsubrl
movsl
sub
xor
jnp
mov
push
adc
and
mov
test
push
addr16
popa
frstor
out
and
xor
or
jns
mov
and
dec
fidivs
mov
mov
cmp
imul
dec
fmull
out
cs
cmp
jmp
aam
iret
shlb
dec
and
sub
mov
test
cmp
shrb
add
enter
pushf
push
cli
js
je
aad
cmp
ljmp
dec
aaa
mov
jo
xchg
shrb
jb
add
mov
popf
ret
ret
scas
fsts
xchg
pop
insb
or
cmovb
cmp
mov
in
pop
mov
addb
sahf
nop
clc
ror
push
or
fwait
popf
cmp
insb
dec
rorb
jae
fisubrl
pop
sahf
int3
or
adc
sbb
enter
pop
out
mov
in
xor
dec
call
sub
dec
pop
nop
dec
cmp
fwait
stos
push
and
cmp
das
hlt
inc
cld
mov
ret
add
les
repnz
jle
call
xchg
shrb
mov
cmp
fstl
and
mov
adc
loop
daa
in
mov
cmp
stc
movsl
out
or
hlt
xor
sbb
aam
ret
or
sub
xor
inc
call
add
cmp
mov
enter
lds
pop
addl
aaa
test
mov
or
lcall
push
pusha
imul
xchg
mov
xorb
mov
dec
xchg
adc
xor
and
jp
or
shlb
ret
leave
cmpsl
cmp
xor
lret
cmp
test
mov
fdivl
mov
mov
fsubrs
pop
shll
jle
scas
lds
cmpsb
cmpsl
arpl
jp
cmp
cltd
pusha
mov
in
xlat
mov
xchg
dec
and
bound
aas
out
pop
mov
inc
lock
std
xor
sahf
popa
not
inc
mov
loopne
rcrb
loopne
in
pop
add
mov
jno
cld
mov
loop
or
xlat
jle
dec
push
xchg
aas
xor
inc
mov
push
sub
push
pop
movsb
jecxz
push
in
pop
cmpb
aad
xchg
sub
sbb
sbb
sbb
les
add
or
gs
mov
lret
mov
lret
repz
fdiv
mov
cmpsb
and
stos
decl
pop
jno
in
movsl
stos
lret
in
cli
xlat
lea
shrb
stos
rcrl
mov
gs
or
enter
inc
aam
jp
lods
cld
or
jle
in
ds
mov
sti
inc
clc
add
js
lods
add
in
xchg
or
jg
pop
cs
sbb
xchg
mov
sub
in
xor
dec
cltd
sbb
gs
iret
cmp
cmc
mov
cmpsl
cmc
cmpl
shl
and
inc
rol
cltd
rcrb
mov
mov
mov
xlat
outsb
cmp
xchg
lods
or
js
and
and
out
mov
ljmp
cmp
push
popl
andl
pop
ret
stos
andb
insb
ffreep
popa
jae
lods
jb
icebp
pop
imul
call
cmp
or
or
stos
div
hlt
pop
or
mov
movsb
movsl
mov
sub
xchg
mov
mov
sbb
mov
mov
push
scas
adc
xor
sub
lret
pop
popa
dec
pop
scas
in
push
sub
or
add
call
sub
pop
push
mov
test
jns
sti
xchg
cmp
pop
es
dec
inc
adc
lret
repnz
adc
xchg
popf
push
dec
xchg
pushf
lret
sbb
add
mov
cmp
xchg
push
inc
lock
lds
mov
cmc
mov
add
adc
sbb
jb
push
push
cltd
inc
sbb
test
inc
sbb
jp
out
xchg
xchg
aas
stc
xchg
cli
leave
xor
dec
mov
ss
mov
pop
lods
inc
insl
bound
pop
mov
jno
xchg
int3
pop
or
cmp
sbb
outsb
imul
test
mov
in
loope
loopne
jb
mov
lock
adc
popa
sbb
pop
jle
ds
lods
test
lods
jmp
lock
imul
or
mov
fwait
sub
leave
dec
mov
xchg
inc
mov
add
lock
cmp
mov
inc
xchg
pop
xchg
loope
add
pop
push
and
jae
dec
jl
xor
notb
int3
pop
fcoms
adc
lods
jmp
xchg
andl
js
jns
push
adc
ret
popf
bound
lods
lcall
jg
pop
xchg
sti
add
inc
push
push
jmp
push
iret
push
and
mov
push
cmp
sarl
add
pop
cmp
scas
inc
mov
xor
subb
cmp
data16
push
scas
pop
shll
rorb
sbb
sahf
xchg
and
clc
leave
repnz
mov
enter
incl
test
sbb
pop
mov
dec
js
pop
insl
in
mov
scas
in
xchg
or
js
sbb
cli
add
fdivr
sub
aam
jg
lcall
mov
mov
icebp
inc
imul
add
and
inc
scas
cmpsb
shll
enter
test
mov
fdivrs
and
in
dec
sbb
push
pop
push
jnp
in
push
adc
fwait
mov
aad
bnd
jecxz
mov
out
lock
mov
out
cmpl
es
push
js
cld
or
mov
idivl
repz
mov
sbb
mov
lret
out
mov
fidivrl
pop
mov
hlt
mov
cmp
dec
shl
fwait
xor
jne
or
xor
mov
push
or
ljmp
dec
sub
idiv
or
add
pop
dec
testb
test
stc
loopne
fs
jns
mov
je
or
insl
adc
daa
ret
cld
repz
outsb
es
fidivl
xor
aaa
pop
pop
jge
add
or
sbb
addb
xchg
pop
js
or
aaa
testb
cltd
jle
mov
xchg
inc
xchg
cld
inc
in
nop
xchg
ret
mov
and
add
sahf
out
push
in
xchg
push
dec
jle
scas
sub
in
mov
rclb
mov
mov
rolb
rol
into
test
add
push
xchg
int
cwtl
andl
add
mov
push
in
xor
sub
enter
loope
fmull
sbb
sbb
push
sbb
dec
lahf
xchg
xor
adc
ss
in
mov
ljmp
mov
add
fnsave
aaa
cmp
gs
enter
stos
add
dec
xor
lcall
fimull
pusha
and
scas
fwait
shlb
xor
in
xchg
xchg
inc
xchg
icebp
cmp
inc
jmp
mov
cltd
mov
ljmp
jae
andb
pusha
xor
push
ja
jns
mov
cltd
int3
rcr
into
movsl
pop
and
jno
fdivrs
xor
pop
xor
pushf
or
push
int
out
xchg
mov
repz
pop
cmpsb
jb
leave
mov
pop
aaa
popa
adc
adc
mov
mov
fmulp
subb
sbb
movsl
in
ss
add
mov
jle
mov
and
xchg
aas
cmpsb
xor
xchg
cmp
scas
std
mov
add
loop
sub
bound
jae
pop
xchg
outsl
iret
pop
lcall
mov
sub
dec
fiadds
lds
mov
into
repz
adc
repz
insb
xchg
sbb
push
inc
mov
rorl
rorl
pop
test
sub
pop
or
dec
repz
scas
movsb
mov
out
fsubrs
in
xchg
push
jg
aad
mov
dec
xor
push
fldl
sbb
sbb
inc
push
aas
je
out
mov
fistpll
je
pop
ret
push
sbb
fldenv
sbb
cmp
movsb
adc
add
xor
push
jnp
pop
add
dec
xchg
js
add
mov
push
cs
mov
push
jne
jecxz
stc
inc
adc
and
cmp
aam
test
mov
pop
inc
dec
fildl
mov
loop
xchg
out
test
shlb
fs
fucomip
nop
jb
jns
sub
xlat
jge
xor
mov
bound
and
mov
scas
xchg
xchg
xchg
loop
push
jle
in
or
test
psrld
jmp
xchg
sbb
scas
xchg
sub
nop
outsl
std
std
cwtl
popf
movsb
push
add
jnp
pushf
stc
ja
das
outsb
xchg
std
js,pt
xor
add
add
jae
andb
jo
jl
sub
popf
xchg
les
mov
sbb
outsl
push
sbb
push
sub
dec
scas
push
cmc
mov
xlat
xchg
add
mov
pop
mov
sub
sbb
orb
xchg
lock
jecxz
jge
jmp
mov
mov
aam
shl
orb
ss
hlt
jae
cmp
int3
into
cld
orb
dec
pushf
xor
stos
mov
rcrl
inc
out
push
cwtl
gs
adc
cltd
ds
sarb
aas
cmp
mov
int3
xchg
adc
jle
cld
jge
in
add
sbb
xor
ss
dec
cmp
xchg
push
inc
sti
aas
ret
test
fcmovnbe
fdivrs
xor
mov
xchg
pushf
cld
sub
sub
push
je
imul
in
std
out
mov
out
outsl
test
push
sub
hlt
std
sbb
sbb
or
into
xchg
fisubs
out
lret
add
xchg
int3
sbb
dec
sahf
outsb
test
out
sub
mov
stos
enter
or
hlt
icebp
pop
sbb
or
lds
fwait
sbb
cmpsl
xchg
jae
xor
pushl
inc
sti
insl
mov
jne
andb
dec
shl
out
fwait
dec
xchg
aas
movsb
sub
sub
xchg
test
das
mov
in
fcompl
add
nop
js
and
pop
das
repz
dec
add
loopne
push
jne
lea
and
pop
push
jnp
and
hlt
cmpsb
in
shlb
xchg
roll
dec
ja
xlat
lret
mov
cltd
sub
js
jl
mov
cld
scas
inc
popa
das
int
insl
fucomip
push
loope
aas
pop
sub
add
gs
mov
divl
xchg
sbb
xchg
and
adc
or
fcompl
mov
leave
cmpsb
out
pop
xor
mov
xchg
stos
scas
jle
inc
xor
pop
std
sbb
lds
lcall
mov
mov
or
aaa
sbb
mov
aas
ja
test
icebp
mov
mov
push
xor
mov
sbb
sub
dec
or
cmpsl
xchg
je
pusha
aaa
push
orps
mov
sbb
fiaddl
inc
inc
pushl
inc
dec
mov
xor
fldl
aad
clc
dec
sti
sub
and
and
fiaddl
or
lret
ljmp
adc
cmc
stos
lods
mov
repz
pushf
call
es
push
pop
icebp
mov
cmp
movsl
jno
xlat
popf
out
inc
cmp
js
mov
ret
das
fisttpll
inc
jbe
dec
insb
sub
in
cmpsb
and
aad
pop
outsb
aam
lret
popl
push
cltd
mov
adc
add
jl
adc
xchg
outsb
sbb
pusha
jbe
loopne
lcall
imul
mov
int3
sub
lret
mov
cld
sbb
and
xchg
out
inc
imul
jle
outsl
out
push
aam
test
lahf
xlat
push
xchg
out
cmpsl
pop
jae
push
fbstp
mov
mov
and
loope
addr16
or
mov
mov
into
xchg
imul
fldcw
sbb
xchg
pop
sub
cmpsb
fmul
jl
das
push
xlat
sbb
sti
insb
jg
push
push
add
and
and
xor
lret
out
icebp
shlb
add
popf
movsl
dec
ss
mov
cmp
sarb
pop
pushf
mov
mov
fisttpl
add
xchg
mov
push
push
pop
mov
pop
push
aad
sub
or
shlb
lock
xchg
repnz
testb
leave
out
mul
rcl
sub
stc
cmp
test
shrb
xor
aad
in
push
sub
cmpl
in
xchg
xor
inc
or
push
imul
popa
jns
roll
mov
mov
cs
jle
adc
and
test
outsb
idiv
mov
aas
cmp
pop
and
test
lods
jp
ljmp
aas
mov
mov
cmpl
add
ficoms
dec
arpl
pop
jo
imul
enter
js
jnp
imul
stos
jb
cld
fistl
dec
cmp
push
inc
dec
inc
das
leave
dec
and
shrl
std
aad
fwait
imul
sbb
and
addr16
inc
mov
pop
test
pop
je
aaa
lar
insl
mov
cmp
pop
cmp
fwait
out
sbb
aaa
fdiv
leave
mov
fwait
std
shrl
jne
add
jnp
insb
dec
lahf
ja
push
hlt
mov
nop
sub
sub
mov
adc
xchg
icebp
inc
ffree
icebp
mov
fdiv
clc
insl
dec
inc
nop
add
sub
push
rclb
js
pusha
adc
call
or
lret
mov
dec
pushf
inc
jae
mov
dec
aas
jo
sub
inc
icebp
push
or
sub
and
aaa
and
jb
inc
or
rorb
lcall
lea
cmp
add
arpl
pop
hlt
push
adc
mov
push
stos
cmp
mov
jp
stos
push
and
ljmp
dec
push
cli
shlb
add
or
fldenv
push
or
addr16
dec
dec
cwtl
mov
mov
xlat
cmc
mov
mov
adc
inc
shlb
or
cld
fwait
loop
pusha
push
es
shll
out
out
inc
in
pop
lods
add
addb
fs
sub
lahf
es
das
aaa
pop
movsb
rclb
mov
loop
pushf
imul
cmp
adc
pop
mov
int
sub
or
roll
add
in
ret
push
xchg
inc
push
rorl
mov
mov
dec
cmp
xor
out
mov
insb
sub
out
sub
pusha
jp
pop
sarb
or
cmp
mov
pop
adc
addr16
mov
lock
pop
pop
dec
adc
mov
imul
popa
out
pop
or
add
push
jle
pop
cmp
js
dec
sahf
in
mov
js
aam
cli
lret
test
jo
inc
push
mov
xchg
add
add
mov
cmp
shrb
jno
xor
enter
adc
push
jg
add
pop
stos
outsl
cld
sahf
xor
loop
push
cmc
testb
outsl
adc
jno
loope
clc
int
mov
ret
xchg
stos
sub
arpl
inc
lahf
jecxz
mov
and
add
outsl
sub
insb
sbb
jge
sub
push
lret
adc
mov
incl
psadbw
push
cmp
aaa
push
sub
subl
and
jo
push
out
xchg
xchg
shr
andb
dec
cli
pop
cmp
daa
es
cwtl
icebp
push
cmp
lahf
mov
jnp
das
aas
jno
adc
add
loope
add
add
flds
jg
push
fcomps
sub
dec
dec
cld
adc
imul
fs
mov
insl
pop
cmp
fwait
or
int
mov
mov
pusha
popa
sub
rcrl
out
movl
popf
cmpsl
jg
mov
lea
lretw
mov
mov
scas
nop
cltd
sub
sbb
xchg
adc
cmpsb
and
jmp
xor
cmp
mov
pop
inc
adc
in
mov
sub
mov
pop
mov
or
pusha
sub
dec
inc
shll
pop
mov
push
or
xor
mov
adc
sub
inc
and
jle
jle
and
adc
cwtl
dec
mov
ret
sbb
out
pop
fcoml
jb
neg
test
xchg
cmpsb
xchg
inc
xchg
loop
andl
jne
fwait
out
rorl
and
adc
mov
mov
mov
fists
ja
mov
or
test
push
fisttpl
sub
mov
inc
mov
xor
pop
out
orb
mov
in
inc
loop
pop
pop
mov
loope
ljmp
sbb
outsl
lods
ljmp
lock
mov
lods
cmc
jbe
inc
fcmovnb
scas
cmpsb
das
call
adc
add
add
xor
fs
mov
rcrb
sbb
out
and
ja
pop
in
mov
das
cwtl
or
lock
or
test
ja
jmp
lret
loope
cmpsb
popf
mov
insl
rol
movsb
push
mov
jp
mov
push
pusha
shr
dec
push
xor
jbe
iret
xchg
xchg
dec
adc
jmp
sub
call
xor
push
xchg
movsb
xor
push
xchg
jecxz
out
jmp
ret
sub
int
lahf
sbb
fcoms
jnp
test
and
inc
jb
mov
dec
xchg
loop
or
or
test
sub
mov
adc
mov
mov
sub
scas
add
mov
sub
jne
sbb
cwtl
and
mov
pop
sub
outsb
pop
inc
loop
push
fnstcw
fcoms
or
mov
std
xor
jle
je
in
xor
cmp
sbb
xor
imul
jmp
xor
lcall
test
int3
leave
dec
cmpsl
fisttpl
sub
sbb
ljmp
mov
sbb
mov
lahf
jmp
mov
std
mov
inc
cmp
mov
lret
idivb
fiaddl
into
dec
mov
push
mov
addr16
scas
lahf
shl
push
sti
sbb
out
lret
dec
in
les
fcmovnu
sub
imul
cmp
xchg
jno
and
ja
sub
dec
sbb
inc
xchg
lret
repnz
subb
jne
pop
cmp
outsb
test
lds
les
and
and
aaa
cmp
rcll
shlb
repnz
jg
lcall
mov
test
mov
and
gs
dec
aam
ljmp
pop
inc
add
push
xchg
iret
ret
andl
in
sbb
mov
jbe
aaa
jo
shll
mov
repnz
dec
addl
mov
imul
xor
cmpb
lahf
scas
test
bswap
stos
dec
sub
rorl
mov
xor
outsl
sub
loopne
mov
hlt
cli
mov
adc
cltd
negl
or
push
push
pop
xchg
mov
add
xchg
lcall
push
dec
icebp
jae
fs
xchg
xor
jne
arpl
sbb
xchg
xor
out
into
ficoms
loope
mov
xchg
xor
mov
out
fistl
pop
xchg
sbb
or
int
add
lods
std
cwtl
int
adc
cmc
cmp
xor
and
pop
sbb
into
push
mov
sahf
xchg
mov
mov
jmp
pusha
add
in
mov
aaa
dec
fs
jbe
lret
mov
xor
push
sbb
jno
ret
jns
add
out
xor
dec
pop
repnz
mov
cmp
cmp
dec
or
mov
pusha
fistl
pop
mov
fsts
mov
scas
movsl
add
inc
add
sbb
iret
sub
mov
ret
pushl
xchg
jb
test
shll
xchg
mov
decl
shrl
xchg
ret
add
cmp
sbb
lret
data16
add
insl
mov
pop
shr
pushf
push
mov
std
scas
and
nop
adc
nop
mov
nop
adc
test
daa
pop
push
push
pop
or
dec
in
push
aaa
xor
inc
dec
add
sub
and
scas
mov
jae
add
jno
mov
pusha
lock
imull
mov
idivl
sbb
std
mov
in
jge
das
fists
sub
add
or
and
jnp
inc
lea
adc
insb
xchg
sbb
lock
inc
cmpsl
lods
jmp
subl
push
aam
push
rclb
aas
outsb
mov
lcall
ljmp
dec
rorl
mov
cmp
lahf
and
sahf
sbb
push
gs
and
push
jae
ret
pop
and
mov
jg
inc
aam
enter
rcll
cmp
dec
xor
lret
jnp
stos
add
cli
add
imulb
xor
lcall
sbb
pusha
in
or
sbb
les
idivl
jmp
or
inc
insl
lods
mov
dec
aad
adc
and
aad
xchg
jno
test
icebp
xlat
push
push
mov
stos
add
lcallw
jnp
inc
and
imul
pop
and
jmp
lds
into
int
sbb
jae
lret
stos
pop
mov
xor
std
push
ljmp
push
aas
pop
push
jl
fdivrl
sub
xchg
xlat
sahf
mov
lds
xorb
cmpsb
mov
outsl
cmc
outsl
adc
cmp
cwtl
dec
push
mov
inc
mov
pop
dec
ss
popf
pop
mov
push
or
inc
nop
xor
addl
les
push
cmp
add
inc
cmp
inc
enter
push
lret
cmpsb
xchg
cmp
add
dec
scas
jnp
jb
add
cmp
lret
add
test
push
rol
sti
in
cmp
hlt
and
sub
lods
adc
mov
in
movsl
cmpsb
mov
lods
lret
leave
jb
mov
fldl
cs
dec
orb
mov
outsb
scas
andl
xchg
arpl
stc
xchg
sbb
mov
rorl
fisttpl
popf
ret
jne
cmp
jno
xor
aas
push
ja
jg
shll
mov
mov
mov
push
or
subb
cmp
aaa
add
jnp
decl
scas
subb
movsl
dec
jge
jnp
and
and
and
xchg
push
push
jne
fsincos
cli
jp
loop
scas
adc
sti
aam
push
cli
stos
ljmp
sbb
mov
jecxz
arpl
jmp
out
std
cmp
xlat
push
pop
pop
jae
cli
jl
inc
push
insb
lret
push
mov
sbb
js
std
xchg
aam
add
test
in
mov
jb
and
adc
mov
lods
mov
xor
pop
xor
pushf
jg
dec
fistps
mov
fnstcw
outsl
jne
lcall
test
xchg
pop
in
ljmp
sarb
sbb
imul
pop
sahf
loop
ret
fstpl
loopne
ja
add
and
inc
ret
loop
sub
push
mov
fisubrs
adcl
clc
out
xchg
incl
nop
push
xchg
jnp
andb
xor
std
test
sub
add
aas
cwtl
cltd
fmuls
add
mov
mov
in
out
leave
mov
lods
sbb
sbb
sbb
movsl
lahf
mov
xor
push
aad
xor
adc
sub
rcll
push
mov
pop
add
ret
dec
xchg
in
sbb
fdivrs
sbb
push
add
push
dec
mov
jb
adc
outsb
bound
and
jmp
mov
lock
cli
pop
das
and
push
pushf
ss
leave
movsl
cmp
testb
fnstenv
fistps
cmpl
mov
scas
arpl
iret
test
mov
rclb
push
sbb
outsl
test
cmpsl
aaa
test
fsubrl
sbb
mov
or
jnp
cld
xorb
cmpsl
sti
clc
movsl
dec
je
mov
jb
in
mov
js
lcall
add
inc
inc
dec
sbb
cmp
add
sub
addl
push
setge
fstps
imul
aad
mov
sti
add
out
mov
adc
or
test
movsb
out
loop
leave
jns
mov
xorb
cmp
jge
mov
in
in
cltd
aas
bound
insb
jne
es
iret
repnz
sbb
mov
rclb
movsb
dec
movsl
push
push
popa
aaa
aam
xchg
insl
cmp
ret
sbb
fwait
cmp
aam
or
outsl
out
pop
enter
out
cli
mov
mov
fldl
gs
xchg
mov
add
das
lcall
add
xchg
inc
jl
ljmp
das
mov
daa
lcall
in
fiadds
mov
mov
icebp
cmp
mov
movsl
xor
subl
daa
inc
leave
fisttpll
mov
nop
push
pop
lea
add
cmp
mov
xor
sbb
mov
orb
in
push
mov
out
jo
push
sbb
mov
outsb
addr16
sub
xchg
adc
mov
imul
mov
sbb
and
roll
cmpsb
jns
push
or
jnp
sub
ror
jp
ljmp
lods
inc
mov
jbe
in
pop
jge
jb
add
xchg
add
into
arpl
xorl
lret
in
popa
dec
popa
fdiv
sbb
xchg
xchg
jl
fcoms
scas
mov
pop
shl
aaa
scas
and
js
fs
mov
push
push
fmuls
inc
int
pop
imul
jb
cmp
sbb
fnsave
into
mov
cmp
push
pop
test
add
inc
roll
popf
movl
and
je
push
mov
dec
testl
inc
pusha
mov
pcmpeqw
xor
mov
push
mov
jno
mov
xchg
pop
test
mov
mov
cmp
mov
jns
insb
pop
push
or
jle
pusha
mov
push
cmpb
cmpsb
cmp
inc
pop
rcrl
xchg
lret
xchg
mov
cli
and
hlt
cwtl
pop
aaa
mov
cmpsb
lcall
div
dec
and
push
cltd
repz
sarb
mov
inc
mul
mov
popf
xchg
sub
mov
popa
xchg
aam
dec
out
jb
push
test
and
pop
shll
adc
rcll
mov
in
sbb
pop
dec
mov
rolb
xor
movsb
in
xchg
dec
pop
inc
fcoml
pop
xchg
pop
push
lret
loop
sbb
adc
ds
and
sbb
lret
mov
fstpl
cld
add
movsl
jp
mov
jmp
mov
aad
fmuls
jns
pop
in
mov
fcoml
mov
scas
inc
jb
lahf
scas
xchg
ficompl
inc
aas
call
fimull
mov
dec
into
fstl
jb
fstpl
jbe
push
cmp
mov
out
lds
fstpt
xor
pop
mov
or
movd
jns
in
fisubrl
inc
mov
xchg
notl
xor
cld
movsl
adc
mov
out
inc
push
xchg
outsb
push
addr16
int
xchg
mov
hlt
push
bound
push
pop
fwait
xor
out
lods
sbb
inc
push
repnz
mov
outsl
add
mov
fs
pop
cwtl
lahf
push
sub
mov
sub
jmp
or
pushf
notl
int
les
mov
popa
rcrb
rcrb
xlat
rcrl
push
dec
pushf
xchg
clc
or
imul
lahf
aam
stos
ja
push
dec
and
cld
clc
pop
inc
mov
mov
ss
aaa
push
push
addr16
push
cmp
xor
pop
xchg
daa
add
insb
add
push
arpl
fimuls
cmpsb
xchg
push
dec
jecxz
iret
out
in
nop
pop
loope
stc
push
loopne
clc
dec
sbb
pop
dec
sti
nop
or
shll
aaa
addr16
movswl
mov
mov
mov
stos
ret
mov
lock
int3
sti
xor
xlat
push
cmpsl
mov
out
fmull
lret
inc
mov
xor
js
ljmp
sbb
pop
dec
jecxz
outsl
imul
mov
jle
int
int
push
mov
in
pusha
and
jg
cmp
jmp
lcall
mov
xor
pop
xchg
sub
sbb
sbb
mov
push
mov
pop
xchg
mov
daa
adcl
mov
sub
xchg
outsl
sbb
stos
and
call
sub
sub
in
call
pop
push
mov
jae
sbb
scas
sbbl
xor
in
setl
cmp
in
ljmp
fbld
jecxz
mov
dec
dec
lods
jg
popa
and
sbb
sub
push
mov
push
scas
mov
inc
xchg
mov
pop
sti
xchg
push
bound
jge
loopne
jb
dec
fsubl
aas
mov
inc
shlb
cmp
jecxz
mov
jl
aas
or
repz
pop
ss
add
in
add
leave
pop
mov
xchg
inc
xor
inc
outsl
test
sub
lea
imulb
std
adc
dec
shll
add
xchg
push
add
fists
movsb
cmp
bound
push
cld
mov
pusha
lcall
inc
jae
sbb
or
fadds
or
xor
je
cmpsb
push
imul
mov
inc
popa
or
aam
fnsave
push
xor
sar
enter
fld
xor
pop
mov
stos
add
repz
dec
xlat
icebp
mov
sahf
fdivl
pop
jns
test
cmp
cmp
je
fs
cmp
inc
inc
and
and
inc
lret
aam
xor
loope
lds
xchg
ficoml
out
test
and
pop
ret
shlb
movsb
and
outsl
sbb
push
gs
xor
cmp
test
and
popf
fdivrs
push
mov
flds
lea
mov
gs
or
shl
popa
dec
mov
push
fucompp
mov
insl
or
mov
xor
lea
rorb
mov
pop
xor
push
ret
icebp
pop
xchg
ds
mov
xor
cmp
xchg
inc
std
movsl
sbb
push
es
jbe
sbb
adcl
pop
sbb
arpl
pushl
jno
pop
and
js
sub
push
in
cmp
jmp
xor
test
inc
cmpsl
jecxz
lret
xchg
lretw
into
mov
xchg
pop
fadds
les
testl
inc
test
sarl
pop
pushf
ljmp
out
push
pop
decl
ja
aas
xchg
fisubl
ds
lds
sar
xchg
and
aaa
das
adc
maxps
mov
push
sbb
sub
xlat
xor
xchg
xchg
test
mov
cmp
and
pop
andl
test
mov
mov
inc
adc
jb
out
shll
aaa
jecxz
lret
test
jge
test
push
or
faddl
insb
shr
inc
imul
sbb
cmpsl
inc
loop
lret
into
shlb
dec
mov
fidivl
lods
push
lcall
lds
mov
mov
lret
xor
lret
jecxz
push
jae
dec
or
mov
rclb
movsl
or
fwait
pop
or
fmull
test
test
mov
cli
xor
push
aaa
fs
lock
mov
enter
xchg
loope
jecxz
pop
fbstp
fwait
lods
in
iret
xchg
and
sarb
push
ljmp
xchg
mov
shlb
fwait
push
cmpsb
aam
jno
js
cmpsb
mov
stos
mov
aam
popa
rol
aam
pop
in
scas
cmpsl
mov
shrb
xor
xorl
inc
int3
stc
xor
add
cmovb
fidivrl
les
aad
push
mov
or
je
dec
fidivrl
enter
into
xor
sub
call
add
mov
ret
lcall
add
xchg
pop
dec
iret
test
inc
leave
jmp
sub
nop
mov
xor
cmpsb
add
jne
mov
add
jle
lcall
sahf
dec
adc
jae
rolb
mov
lds
jno
sahf
sub
inc
xchg
inc
xchg
rorb
cltd
loope
pop
test
inc
mov
cmp
stos
aas
inc
in
subl
mov
arpl
jnp
inc
imul
lods
std
jmp
add
push
je
xchg
mov
lret
cld
sbb
imul
fimuls
call
lret
dec
inc
idivl
push
cli
shrl
or
lods
lcall
sub
fcoms
enter
scas
imul
cmpsb
test
sbb
js
xchg
sbb
sub
xlat
pop
in
ffreep
or
data16
aad
out
ror
fldenv
jmp
cmp
cmp
pushw
sub
push
mov
loopne
daa
daa
inc
xor
scas
div
inc
popf
mov
jecxz
lods
mov
pusha
sub
pop
pop
mov
push
adc
and
push
push
ja
and
out
push
jne
and
cmpsb
mov
shll
fstpt
pushf
cmp
mov
xor
jg
jno
in
mov
or
mov
or
sub
jne
push
lds
lret
jbe
and
lods
sbb
mov
xchg
notl
add
out
and
inc
xor
mov
leave
into
cltd
cmp
out
dec
push
xchg
int3
loopne
inc
scas
sbb
lods
test
adc
shrb
mov
and
inc
push
aam
push
sbb
pop
iret
xorl
or
mov
insl
daa
fcomps
bound
lret
xchg
std
jae
xor
inc
sbb
push
cmp
flds
add
inc
mov
dec
mov
movl
subb
push
mov
inc
pop
xor
xlat
mov
mov
fcom
sarl
repz
push
shl
icebp
test
inc
fildl
not
or
lods
std
scas
in
push
push
loopne
cwtl
xor
dec
mov
cmc
repnz
jb
cmpsb
hlt
pop
cwtl
jae
movsl
fwait
idivb
leave
imul
es
mov
cmp
icebp
cmp
dec
stos
iret
inc
mov
pop
mov
xchg
jp
dec
clc
fdivl
dec
icebp
cmc
jl
or
cwtl
xor
xor
pop
mov
ret
adc
pop
add
out
aam
sarl
inc
xor
sub
mov
int
mov
outsl
lret
or
insl
cmp
adc
jecxz
inc
dec
arpl
nop
inc
test
mov
cmp
adc
mov
or
jge
xor
sbb
das
and
cmp
xchg
add
xor
inc
and
stos
pop
fwait
xor
push
loope
add
xchg
out
jb
pop
and
or
ror
imul
fstpt
stos
mov
dec
add
pop
iret
bnd
sahf
int3
jnp
cmp
rcrb
push
dec
dec
orb
in
cmp
movsl
shll
iret
loopne
mov
xchg
shlb
mov
popa
movsb
out
mov
mov
sub
jecxz
ja
xchg
inc
cmpb
xchg
adc
cmp
xlat
mov
lret
clc
jmp
unpckhps
mov
ds
sub
mov
pushf
pand
inc
and
test
out
repnz
call
rcrl
je
arpl
mov
lods
cmp
cwtl
fimuls
in
and
sti
and
push
ret
xor
js
cmp
ret
mov
or
sub
xchg
fldenv
mov
jno
mov
mov
test
stc
push
jle
mov
push
mov
filds
or
inc
ljmp
xor
add
push
pop
cs
inc
lcall
mov
gs
lret
into
aam
adc
adc
shlb
mov
movsl
or
ss
lds
ja
sbb
jns
lds
push
sbb
or
mov
test
xchg
stos
in
jmp
jbe
dec
in
add
stos
xchg
mov
ljmp
sbb
leave
cwtl
jae
out
iret
mov
call
or
incb
jmp
cmp
jp
and
in
add
add
pop
xor
out
inc
push
int
add
dec
lret
bound
xor
lea
pop
pop
out
add
mov
xchg
dec
iret
and
bound
dec
ljmp
out
and
pop
cmp
xor
cmp
push
pop
lds
and
cmpsb
inc
mov
pop
push
or
push
add
adc
jg
fnclex
add
outsb
mov
mov
cmpsb
jae
xchg
fs
inc
and
adc
std
int
out
fnstcw
imul
push
mov
xchg
push
stc
pop
gs
adc
xor
das
pop
pop
xchg
xchg
jge
jl
lods
xchg
mov
mov
sbb
dec
popf
push
test
xor
scas
xchg
ljmp
jae
xor
mov
aaa
addl
das
sub
pop
add
mov
inc
aad
xchg
mov
xor
cmp
mov
ja
pop
inc
ret
push
sahf
ja
inc
ret
adc
iret
lock
out
or
jmp
xchg
jns
push
adc
lea
dec
lcall
clc
stos
push
jnp
aas
loop
add
or
mov
adc
mov
out
mov
push
jns
sub
pop
dec
and
push
dec
sub
stos
and
sub
aad
push
adcb
adcb
xchg
les
lret
pop
mov
outsb
jnp
jo
lods
out
and
pop
jo
ret
jg
test
shl
aaa
lods
test
icebp
add
jnp
xchg
inc
mov
add
lods
sti
inc
fcomps
jecxz
xchg
mov
sbb
pusha
sarl
adc
shll
inc
stos
dec
xor
cs
fwait
scas
pop
cmc
outsb
cltd
pushf
mov
insl
mov
clc
je
mov
in
pop
dec
push
push
jne
dec
bound
test
pushf
insl
popl
gs
ss
mov
out
fsubrs
xlat
xchg
repz
sub
inc
int
dec
adc
das
cmpsl
popa
xor
push
xlat
add
push
je
sahf
lahf
out
inc
jbe
mov
cmp
xchg
inc
cmp
dec
dec
pop
cs
xchg
or
mov
insb
lahf
jg
add
xchg
jbe
sarl
sti
mov
bound
leave
nop
aad
fs
ss
frstor
fwait
aas
pop
les
pop
xchg
jnp
data16
pushf
xchg
and
stos
push
lock
bound
int
je
xchg
lds
call
or
iret
adc
mov
dec
sti
test
arpl
jmp
subb
scas
pushf
add
inc
xor
mov
jnp
cs
jecxz
js
cmp
sbbl
shrb
add
xorl
mov
movsl
insl
jge
mov
xchg
sbb
jns
inc
scas
xchg
jno
xorl
jns
xlat
adc
inc
adc
sbb
xor
pop
push
test
lahf
sbb
popf
cmp
add
insb
sub
sbb
and
inc
hlt
addb
inc
out
repz
xchg
adc
push
mov
out
jns
cmp
scas
aaa
outsl
enter
int
out
push
sbb
fstpt
dec
stos
jl
lret
mov
aas
xchg
in
xchg
mov
dec
fisubrl
mov
push
cmp
inc
inc
imul
cmpsl
pop
iret
adc
cld
or
shlb
fldenv
cmp
shll
pop
xchg
jbe
lret
je
out
inc
mov
repz
cmp
jae
loope
loop
xchg
das
push
jno
loopne
int
xchg
jl
rsqrtps
and
xor
xor
pop
xchg
popf
pusha
add
shrl
sub
push
in
testl
and
lahf
call
dec
mov
leave
sub
push
fdivrs
xchg
hlt
ret
lods
mov
add
stos
push
out
or
cwtl
ficompl
pusha
add
int3
sub
lea
popf
mov
out
adc
mov
divl
dec
add
mov
push
fidivrs
inc
icebp
xor
sub
imul
add
mov
fdivrl
pop
fs
clc
mov
xchg
jno
or
push
mov
mov
push
sahf
pop
xchg
sti
mov
xlat
jnp
in
mov
mov
sbb
repnz
xchg
push
push
or
mov
movsb
or
mov
int3
mov
fimull
cmp
mov
mov
ja
sbb
pusha
adc
inc
xchg
cmp
mov
test
and
push
add
out
pop
push
mov
cmp
dec
adc
nop
sbb
mov
in
pop
stos
lock
push
dec
fcom
mov
movsb
stos
mov
jae
outsl
js
das
lahf
jbe
ds
adc
fisubs
xlat
ljmp
fstl
xor
rcrl
not
push
bound
lds
jl
cmpsl
mov
ja
jecxz
int
jg
aas
aad
xor
and
ret
inc
ds
ss
sbb
dec
int3
jno
in
pop
xchg
and
mov
jp
jnp
cwtl
pop
xor
sub
jecxz
mov
pop
inc
gs
sarl
clc
xor
inc
push
pop
test
inc
mov
gs
sar
mov
lock
call
inc
mov
cmp
adc
push
and
fwait
and
ja
fiadds
imul
add
adc
sbb
and
dec
std
dec
pop
imulb
imul
sbb
cmp
xchg
xor
scas
cmpsl
stc
loop
leave
push
mov
addr16
push
mov
cmpsb
xchg
lods
sbb
adc
jns
xchg
xor
lock
jecxz
sbb
mov
pop
jecxz
repz
adc
dec
out
lret
push
iret
ja
mov
pop
cmp
in
out
imul
repnz
add
stos
fistps
cmc
inc
jnp
lock
pop
xchg
fidivrl
adc
inc
out
cli
insb
jecxz
out
aaa
jb
xor
enter
cmp
notl
cli
dec
fdiv
xchg
mov
arpl
xchg
mov
pop
xchg
sub
std
adc
in
stc
jne
push
stos
fs
test
lret
add
loop
fisttps
je
je
pop
push
stos
cmp
mov
dec
adcb
lods
dec
add
dec
or
ds
in
shll
push
lahf
pop
scas
fmulp
inc
cmp
inc
rol
lcall
xor
sub
enter
nop
push
mov
sub
out
push
adc
sub
pop
dec
test
or
clc
push
xchg
push
dec
mov
push
jne
push
hlt
adc
jnp
pop
sbb
int
test
jno
pop
fmuls
push
xchg
add
cmp
out
jns
loope
mov
jg
fstps
scas
pop
or
jno
push
push
dec
pop
in
mov
out
in
fwait
or
rcrl
decl
inc
cmp
arpl
sub
cmp
lock
into
stos
mov
pusha
sub
mov
fmull
pop
rclb
cmp
add
and
push
and
cmp
xor
xchg
jp
add
loope
pushl
jns
jns
mov
cmpsb
inc
xchg
arpl
mov
sub
mov
lock
inc
idiv
inc
dec
dec
inc
push
cs
lea
lock
lret
mov
jbe
xchg
clc
imul
std
pop
xchg
push
andl
cli
cmp
fstpt
arpl
cmp
mov
adc
push
std
loop
outsb
push
bound
int3
les
xchg
push
pop
jle
ret
loopne
mov
adc
leave
clc
shl
fsubl
cwtl
aam
mov
lret
rcll
xor
inc
lret
jl
cmc
xchg
imul
push
rcr
fnstcw
js
pusha
and
xchg
xchg
js
js
icebp
mov
iret
dec
mov
mov
and
push
aaa
and
cmp
xchg
mov
xchg
pop
adc
push
xor
scas
shll
lea
sub
and
xor
cli
mov
les
lods
es
xchg
cmpsb
pop
test
mov
sarl
xlat
pop
sub
adcl
xlat
cmpsl
xchg
mov
sbb
mov
das
push
or
repnz
and
xchg
cli
lods
inc
and
in
xor
inc
daa
jne
fadd
pop
jno
mov
jp
mov
fmuls
cmpsb
outsb
mov
push
and
lret
mov
pop
aaa
leave
ss
daa
mov
fsubl
add
arpl
test
sbb
sub
pop
cmp
jg
mov
decl
xchg
nop
or
adc
movl
cmp
div
aas
add
shll
sbb
xlat
cmp
pop
fbstp
cwtl
dec
sbb
mov
jl
std
in
push
mov
cmp
xor
inc
outsb
pop
or
addr16
jmp
cmp
cmp
gs
sahf
adc
xor
cmp
popf
xor
inc
add
push
add
dec
add
jno
into
dec
mov
mov
jnp
or
pop
fcompl
mov
cmpsb
cli
in
loope
jg
and
jno
push
mov
shrl
sbb
aas
mov
fs
mov
and
mov
lds
imul
lods
mov
aad
testb
mov
notrack
addl
add
cmovne
push
cmpsb
andl
sub
pushf
ret
in
or
fnstsw
jne,pn
push
cmp
leave
lods
xchg
or
out
in
inc
jb
mov
clc
addb
or
dec
clc
in
xchg
jne
sub
lock
movsl
or
cmp
mov
sahf
cmp
fmuls
pop
cmp
push
out
cli
loopne
pop
dec
jge
push
lahf
lods
fst
mov
popf
aam
cwtl
cmp
inc
addr16
add
sub
cmpsl
xchg
into
cmp
std
jbe
push
mov
pop
mov
adc
push
sbb
outsl
add
daa
mov
push
jg
lret
inc
mov
std
xor
imul
inc
jne
out
sbb
test
out
rcrl
xchg
jle
sti
cs
dec
out
sbb
in
rcrl
xlat
pop
test
push
mov
jb
sbb
inc
loopne
xchg
cmp
mov
dec
stc
fst
fwait
leave
sub
popa
mov
inc
ret
out
fldt
out
aad
cmp
pop
test
cmp
inc
xchg
repnz
mov
cs
jl
sbb
or
jne
sub
sahf
pop
or
ja
mov
data16
push
cmp
inc
imul
daa
cmpsl
addl
mov
and
enter
lds
cltd
or
inc
mov
mov
in
and
in
hlt
xchg
push
push
mov
je
add
push
jmp
or
inc
pop
mov
movsb
push
and
push
push
dec
cmp
adc
stos
flds
xchg
aad
test
nop
test
daa
xor
jo
fwait
push
cld
sub
pop
dec
test
mov
pop
mov
sbb
mov
cmp
enter
cli
je
lea
insl
hlt
push
iret
out
addr16
cmp
insl
jbe
and
mov
jne
insb
xor
xor
imull
stos
sub
mov
jg
push
out
fnstsw
xor
mov
cmc
xchg
cli
pop
adc
data16
add
xor
cmpsb
or
bound
dec
cmp
mov
mov
fildl
xchg
adc
add
mov
xchg
addr16
ja
fnstsw
pop
shr
cli
and
std
mov
inc
js
movsb
fdivl
pop
insl
jp
orl
hlt
fs
mov
pop
adc
and
fisubrs
enter
outsl
adc
sub
stc
adc
dec
shrl
imul
cmpsl
ja
push
test
xchg
pop
or
sub
and
fwait
push
dec
dec
mov
pop
mov
inc
push
jecxz
daa
or
inc
fs
mov
jne
push
push
jb
nop
lahf
dec
jbe
negl
mov
push
fwait
mov
aad
cmpsl
dec
icebp
mov
adc
ss
add
mov
notl
hlt
lds
push
mov
push
rorb
adc
iretw
fcmovu
fidivl
icebp
bound
push
dec
push
stos
mov
cltd
fs
outsb
inc
cld
mov
adc
shrb
inc
lock
add
jp
mov
and
cmp
sbb
cmpsb
and
push
mov
ljmp
aaa
addr16
adc
xor
ljmp
aam
outsb
cmpl
mov
test
and
outsb
sbb
scas
dec
inc
or
movb
data16
pop
mov
inc
fs
pop
sub
outsl
fcoms
push
addb
mov
fst
rcr
jb
add
iret
lcall
pusha
dec
push
je
xchg
pop
shlb
xor
faddp
sbb
mov
sbb
inc
inc
lds
adc
jg
lahf
imul
mov
cmpsl
or
add
jle
and
fcompl
inc
in
push
pop
xchg
fwait
sub
stos
loopne
scas
and
bound
inc
les
pop
roll
add
jne
pusha
mov
dec
add
dec
clc
test
mov
xor
dec
sahf
fwait
mov
lods
notl
dec
pop
insb
sub
roll
xor
cmpsl
mov
push
out
out
dec
xchg
jne
adc
clc
sub
ss
mov
and
xchg
add
rorb
lods
sbb
repz
aas
mov
stos
adc
pop
lret
int
mov
lret
jp
adc
lods
int
stos
jnp
fldcw
mov
mov
daa
clc
jbe
sbb
or
les
adc
push
cmp
xor
hlt
sub
imul
and
mov
sbb
jl
fisubrs
adc
mov
gs
cwtl
lods
jno
ret
rcrb
mov
jb
rcl
es
mov
fmuls
dec
xchg
enter
pop
mov
add
and
push
push
in
push
sub
mov
jbe
dec
out
movsb
outsb
cs
js
mov
add
jecxz
cltd
aam
xlat
test
push
add
sub
jmp
and
pop
jmp
repz
pop
mov
scas
xchg
js
mov
rorb
mov
data16
inc
hlt
or
pop
cmp
das
and
cmp
jle
sbb
loope
cmpsb
mov
arpl
stc
lea
hlt
push
jp
inc
sbb
aaa
aaa
pop
adc
rcll
mov
xchg
adc
jno
popf
or
lret
push
inc
mov
lea
adc
lret
movsb
push
and
shlb
push
popf
mov
mov
dec
push
scas
mov
inc
fiadds
dec
in
popf
jecxz
jb
test
leave
mov
lods
sbb
loopne
adc
in
cmp
sbb
fs
lea
into
cltd
mov
icebp
and
dec
adc
pop
stos
xor
mov
cmp
je
call
jnp
cmp
leave
cmp
adc
cmp
adc
enter
sub
push
mov
mov
push
push
repz
sbb
icebp
out
xchg
xchg
mov
aas
and
out
repnz
popf
cmc
scas
out
fucomip
clc
je
adc
inc
dec
jecxz
adc
inc
jge
aam
push
mov
add
jp
in
subl
push
push
test
or
cmpsb
stos
in
mov
dec
mov
outsl
ds
imulb
and
pop
jmp
shrl
in
int3
lea
lret
fs
lock
mov
pop
in
add
lret
roll
ljmp
pop
jb
and
mov
fmull
push
arpl
cs
mov
dec
das
sbb
sub
fidivrs
setl
jmp
nop
loop
pop
int3
pop
scas
push
ret
pop
mov
mov
shlb
mov
lret
pusha
shr
mov
cmova
cmp
xchg
daa
and
out
inc
repnz
cmpsb
cmp
cmp
push
out
ret
outsl
sub
mov
insb
loop
pop
pushf
inc
stc
lds
pushf
or
ret
cmp
fldt
sbbb
fs
lret
push
inc
into
mov
sti
pop
jo
icebp
lret
push
lods
or
and
stos
dec
inc
stos
xor
fwait
ss
push
inc
sbb
dec
adc
mov
add
bound
js
aaa
adc
and
popf
push
pop
fsubrl
pop
outsb
push
xchg
jb
mov
xchg
cmpl
add
fsubr
mov
push
push
insb
xor
push
movsb
xor
xor
inc
or
into
pusha
jne
orb
dec
std
jns
xchg
ror
pop
fwait
cwtl
popa
fistpl
or
mov
or
inc
add
sub
and
mov
rcrl
leave
dec
add
repnz
adc
fstl
call
sbb
mov
gs
cltd
cmp
xor
sti
cmp
scas
jmp
stos
xchg
aam
sub
or
xor
popa
push
lds
lcall
mov
inc
jbe
loopne
mov
push
inc
jns
imul
mov
cmp
shlb
xchg
sub
mov
iret
inc
repnz
fiadds
dec
lods
repnz
xor
jb
or
popf
pop
add
sbb
mov
pop
js
sbb
out
cli
ret
pop
pop
loope
push
cs
divb
in
sbb
daa
stos
adc
add
mov
pop
das
sbb
sub
cwtl
dec
sarb
int3
sarl
sbb
testl
inc
sbb
inc
out
sahf
mov
lock
push
jecxz
add
xchg
jl
cwtl
sbb
push
jle
int
in
pop
mov
fcompl
pushf
and
les
or
or
mov
inc
lret
jno
sahf
adc
jnp
inc
jl
lods
xchg
push
jl
lcall
icebp
js
inc
andb
in
ds
cmp
test
jae
mov
imul
pop
lds
sub
xor
mov
jmp
loope
add
loop
xchg
cs
sub
mov
ds
pop
sub
xor
fists
mov
add
adc
and
cld
mov
xchg
sub
pop
cmp
cmpsb
stos
das
mov
sub
mov
jge
cmc
cwtl
into
xor
and
cmp
sbb
out
ja
mov
leave
jbe
cmp
mov
inc
pusha
mov
int3
leave
push
push
sbb
movsl
cltd
enter
mov
inc
push
jbe
push
call
inc
or
xor
and
shll
aad
xor
mov
les
leave
clc
scas
incb
and
lret
pop
mov
out
pop
push
jno
dec
movsb
pop
mov
pmullw
fnstsw
add
push
inc
and
add
mov
std
dec
cmpsl
ret
enter
push
lock
adc
das
cmp
mov
in
dec
and
lock
outsl
mov
cmc
sub
lods
push
jl
imul
arpl
lahf
lea
outsl
addb
jg
addl
mov
jg
ret
stc
or
loope
mov
roll
add
and
push
inc
push
jmp
sub
mov
mov
std
enter
stos
out
fildll
loop
mov
lods
arpl
ljmp
daa
add
add
pop
bound
jbe
inc
movsb
scas
pop
insb
jecxz
dec
adc
jae
cld
loope
ret
cmp
mov
aaa
movsb
popf
pop
adc
test
pop
cmp
mov
dec
mov
orl
sti
sbb
cmpsb
insl
fistl
xchg
les
inc
dec
jo
mov
and
jecxz
adc
mov
cs
or
imul
int3
mov
and
and
xor
and
xlat
cmp
cs
aaa
jle
jmp
push
fiadds
mov
mov
rolb
call
push
sbb
and
leave
pop
sbb
add
adc
mov
jbe
push
stos
cmp
rorl
adc
push
subl
nop
mov
push
inc
sub
sbb
fbld
shll
push
add
sub
push
jbe
mov
push
and
popf
mov
cmp
sub
int
cmpl
test
inc
andl
jno
imul
push
pop
rep
cmp
push
std
popf
sbb
ss
pop
into
push
sub
lahf
adcl
mov
bound
loop
jno
xlat
loope
movsb
mov
cltd
push
cltd
jae
cmp
mov
lcall
add
imul
mov
out
out
cmc
int3
jne
or
imulb
xor
nopl
iret
daa
stos
push
xchg
pop
mov
inc
cmp
shl
push
mov
sub
test
stos
xchg
push
lea
orl
rcl
sub
push
xor
xchg
push
or
hlt
jle
pop
add
cmpsb
jns
out
dec
and
push
xor
xchg
cli
push
aaa
pop
pop
imul
adc
sub
or
bound
dec
inc
inc
pop
jle
arpl
fs
pop
cmpsb
pushf
mov
pushf
add
icebp
imul
add
test
push
fwait
clc
loop
andb
sbb
mov
pop
aas
add
loopne
push
aam
add
bound
sbb
mov
jecxz
icebp
pusha
inc
nop
inc
jge
sub
adc
ja
in
cmpsl
sti
jae
xor
in
jno
push
xor
out
xchg
dec
nop
xchg
cli
lock
xchg
int3
sti
ljmp
pop
xor
xchg
cmp
icebp
xor
shlb
sbb
adc
into
lea
or
pop
or
jo
fidivl
ffreep
add
add
cmp
push
repnz
jne
nop
cmp
insb
mov
cld
xor
or
mov
pop
add
call
sbb
testb
lds
jp
xchg
bound
inc
stos
popf
cmpsb
rcll
add
data16
nop
je
jle
nop
add
cmp
lds
out
outsb
cmp
inc
push
inc
lock
rorl
test
mov
jp
into
icebp
mov
sub
out
aam
lods
cmp
out
sub
sub
push
jno
daa
shrl
and
sarb
ret
dec
or
cmc
hlt
in
and
cli
repz
outsl
cwtl
mov
dec
js
into
or
pusha
ret
sub
pop
fsts
mov
add
insl
or
scas
fnsave
sub
cmc
dec
mov
hlt
push
icebp
sahf
push
fs
lcall
repz
push
rolb
int3
hlt
aaa
adc
lds
ret
call
cmp
insb
cmpsl
mov
fdivrl
pop
or
mov
dec
arpl
add
cmp
cwtl
fnsave
push
cmp
ljmp
mov
popf
mov
mov
in
dec
subl
daa
sti
rcrl
lcall
cmp
gs
jo
cmc
inc
adc
vmwrite
xchg
movsb
add
pop
jb
jge
jb
mov
add
cmp
imul
dec
inc
stos
into
dec
xchg
pop
mov
test
adc
or
mov
adc
lock
and
lods
enter
movsl
xor
lods
fisttpll
lcall
cmp
or
ja
cmp
lock
cmp
dec
mov
and
lods
pop
aas
inc
dec
std
movsl
mov
and
dec
jecxz
push
push
xchg
push
iret
jmp
sbb
sub
sub
pop
rcll
into
cld
jl
dec
lods
test
add
jo
in
pop
aaa
nop
shlb
push
mov
lret
cmc
leave
shrd
adc
pop
mov
mov
popw
jle
mov
jno
push
bound
je
push
inc
add
inc
js
repnz
mov
mov
dec
mov
dec
pop
and
pop
ret
fldenv
mov
adc
das
stos
sbb
imul
cld
xor
xor
push
and
hlt
cltd
loope
mov
inc
sub
leave
lret
jns
es
test
xor
sbb
loop
adc
lock
divb
mov
inc
lret
pop
std
into
cwtl
dec
jns
imul
jle
add
and
daa
rorb
mov
xchg
jmp
xchg
mov
in
lret
mov
dec
mov
inc
mov
jne
or
inc
js
outsb
or
push
test
fsts
cmp
mov
mov
popf
popf
add
out
shll
push
xlat
mov
dec
insl
sbbb
inc
rcll
lock
sub
dec
repnz
adc
ret
and
xor
inc
rorl
movsb
push
or
lcall
aad
sbb
cmc
in
cmp
roll
mov
imul
ret
adc
lds
popf
jns
fmul
in
mov
lahf
mov
js
sub
je
fstl
or
js
imulb
add
mov
bound
sti
inc
xorb
push
push
inc
cmpsb
ljmp
push
clc
aaa
bound
push
sbb
sbb
scas
mov
loopne
add
xor
jae
ja
add
rorl
cmpsb
cs
sub
add
cmpsb
mov
daa
mov
outsb
or
fwait
dec
int
and
loope
cld
aam
mov
dec
jno
pop
adc
loopne
adcl
add
ficoms
lods
andb
out
lds
mov
push
mov
cmp
push
insl
insb
mulb
rcrb
wbinvd
xor
out
iret
jg
mov
add
dec
out
lcall
xchg
mov
mov
or
xor
sub
shlb
push
dec
jns
outsb
push
dec
and
clc
aad
and
xor
idivb
out
add
lret
and
ret
cmp
jae
push
and
rclb
or
ficompl
jecxz
into
sbb
repz
jb
ljmp
stc
inc
cmp
negb
jp
sub
push
xchg
ljmp
dec
js
dec
testl
sub
add
jp
test
add
les
pop
lea
add
xchg
into
mov
sub
jns
cmc
popl
popa
rcr
push
rcll
popa
pop
push
out
pop
inc
in
cmpsl
fwait
inc
inc
xchg
jno
pop
stc
lds
xchg
enter
sub
bound
faddp
xor
shrb
xlat
or
or
dec
add
jmp
filds
mov
nop
pop
and
or
dec
and
das
in
push
cmpsl
rsm
mov
or
dec
push
scas
arpl
push
rcrb
xorl
push
mov
aam
xchg
or
je
add
mov
cltd
mov
bound
mov
outsb
pop
das
add
out
mov
inc
inc
mov
sbb
mov
andl
sub
xor
iret
in
hlt
gs
data16
pop
outsb
iret
cmpsb
xchg
in
fnstsw
jae
push
and
lods
cld
adc
adc
lock
or
add
cld
inc
or
xor
dec
mov
inc
or
mov
jg
in
lods
mov
sbb
pop
scas
aas
push
ss
or
jmp
jns
pop
sub
xchg
add
fbstp
daa
insb
mov
test
mov
cmp
rep
mov
cs
cmpsb
cli
sub
ret
dec
push
xor
and
je
test
ds
push
and
outsb
repnz
sbb
lret
push
je
ror
and
xorw
test
mov
testl
lock
sbb
insl
jp
push
in
pop
mov
mov
inc
inc
je
jge
mov
jmp
std
mov
sbb
jmp
test
mov
sub
cld
fidivrl
pop
sub
add
stos
jg
add
cmc
mov
and
iret
aaa
cmp
movsl
mov
xor
cli
or
jmp
movsb
or
xchg
adc
shll
imul
mov
add
xchg
push
lods
and
fldt
cmp
adc
test
cmp
mov
bswap
xor
cmp
mov
test
sub
shrl
dec
mov
ret
cmp
cli
fnstcw
xor
jle
fsubrs
shrl
xlat
stc
jne
subb
mov
dec
mov
jb
icebp
test
into
enter
sbb
pop
jnp
cmpsl
fistl
scas
in
mov
shr
js
jbe
push
and
in
fs
ja
jge
movsb
aaa
dec
adc
jo
inc
sahf
mov
fdivl
xlat
insl
jnp
popf
mov
and
xchg
test
not
lds
out
int3
push
mov
cli
pop
shr
jp
push
jae
daa
and
test
add
ds
nop
movsl
scas
std
xlat
imul
xor
lcall
out
test
mov
rsqrtps
das
and
repnz
adc
scas
sbb
add
or
adc
dec
sbb
jmp
jae
outsl
adc
daa
test
int3
in
orl
arpl
fwait
or
daa
int
push
sbb
stos
cmp
mov
cmpsl
adc
dec
jno
xor
lods
adc
or
xchg
mov
cwtl
mov
fisubrl
push
loope
sbb
out
push
lret
inc
cmpsb
in
adc
cld
arpl
std
mov
or
push
and
mov
push
xchg
out
rcrb
fnclex
fisttpll
mov
scas
adc
pop
pop
aad
mov
inc
imul
test
dec
int3
cmp
push
sbb
scas
pop
mov
push
mov
cs
xlat
sub
scas
dec
xchg
fisttpll
or
push
outsb
or
add
add
add
and
imul
sbb
and
in
and
les
dec
sbb
lds
in
shlb
in
and
cltd
jnp
cmpl
adc
xchg
pop
call
push
ja
xchg
data16
stc
mov
lods
pop
jl
pop
out
movsl
pop
and
adc
or
fisubs
arpl
xor
sub
adc
cld
adc
or
sarl
jg
ja
adc
icebp
sbb
fwait
popa
and
inc
ds
xchg
push
adc
icebp
adc
jno
adc
icebp
lret
imul
xor
and
lods
repz
dec
xchg
push
pop
ss
leave
sub
pop
popa
insb
popa
lret
hlt
push
and
movsl
outsl
add
push
test
xchg
add
data16
inc
mov
repz
sbb
mov
mov
adc
mov
xchg
cld
pop
sbb
aad
push
shll
mov
mov
xchg
jb
popf
mov
mov
loope
pop
mov
inc
and
pop
mov
repz
jbe
xchg
pop
cmc
outsl
adc
pop
xor
outsl
leave
xor
out
shlb
incb
mov
out
dec
roll
push
xchg
out
xchg
mov
lea
jecxz
fdiv
xor
jecxz
clc
jbe
push
cli
mov
fstl
add
sub
pop
shrl
aas
push
aad
movsl
or
imull
pushf
ficoml
out
enter
adc
ljmp
cmpsb
mov
mov
es
testl
cmp
xor
push
movsl
cmp
mov
add
xchg
mov
sub
pop
push
jb
push
test
cmp
fmuls
repz
push
shll
insb
scas
and
lret
hlt
out
fnsave
mov
sub
jg
stc
sub
adc
and
sub
adc
mov
fnsave
fwait
push
ja
xchg
sub
aam
data16
and
ret
jecxz
push
cli
out
addr16
sub
dec
xorb
xor
sub
iret
mov
jbe
sub
jle
test
push
loop
popa
push
js
stos
add
jno
sarl
out
rorl
lods
lock
dec
movl
arpl
fs
push
jmp
int3
lea
adc
push
jmp
out
fisubrl
xor
sbb
fbstp
ror
jae,pt
ljmp
aas
sub
jno
xchg
test
scas
mov
ret
xchg
lcall
fwait
or
mov
scas
clc
xor
lret
jnp
cwtl
push
inc
jns
mov
sbb
je
or
and
cld
cmpsl
les
inc
dec
pop
dec
sbb
inc
adc
mov
mov
mov
cmp
pop
cs
xchg
shr
into
sbb
fstl
outsb
add
fildl
cmp
sub
and
sbb
sub
call
jle
push
and
push
jg
push
daa
pop
pop
roll
add
mov
jecxz
subb
test
out
mov
stos
or
mov
nop
add
dec
adc
int3
lea
and
pop
mov
daa
out
mov
filds
shll
mov
add
mov
test
daa
mov
fwait
and
cmp
mov
xchg
ss
cmp
mov
push
es
xchg
outsb
mov
out
gs
inc
mov
or
mov
or
jmp
or
imul
hlt
orl
pop
test
cmp
flds
test
movl
push
sub
fisubs
inc
stc
add
rcrl
and
jmp
out
push
sbb
in
mov
dec
xchg
js
jmp
xchg
popa
add
push
xchg
jne
iret
mov
adc
xchg
mov
movhps
dec
movsl
mov
inc
repnz
add
fs
jp
lret
jecxz
cmpsb
or
pop
mov
pop
mov
inc
push
sub
mov
cmpsb
sub
bound
pop
lds
adcl
xchg
orb
xor
cli
es
cli
or
and
sar
movsl
adc
push
lods
sbb
cmpsl
das
gs
out
js
std
jle
std
inc
add
daa
xchg
xchg
ss
sarl
ficomps
fistpll
dec
gs
mov
dec
rep
lock
jb
add
clc
js
push
adc
dec
ljmp
dec
mov
inc
fcoms
test
out
popf
test
dec
fstpt
xchg
sbb
int3
dec
outsb
movsb
sub
and
cmc
inc
xchg
xlat
mov
sarb
jmp
iret
iret
subb
stc
fsubl
mov
rolb
aad
fmuls
sub
sbb
xor
xorl
or
sub
mov
aaa
cmp
mov
pop
lea
bound
sub
lods
push
push
add
xchg
add
bound
mov
inc
mov
lret
push
mov
cmp
and
push
stos
aam
jno
sarl
adc
popa
jmp
daa
lret
dec
out
mov
jmp
ret
jns
push
movaps
push
jle
dec
mov
push
aad
lods
enter
mov
stos
jb
pop
lcall
jg
cs
push
jnp
sub
pop
mov
pop
pop
dec
pop
cltd
add
orb
jmp
popf
aam
mov
mov
jns
std
ss
mov
mov
sub
xchg
mov
insb
jl
stc
push
inc
incl
or
sub
cmp
ret
lds
int
int
stos
push
and
inc
sub
mov
shll
loop
int
lea
add
pop
ljmp
cld
sahf
lods
xor
and
in
cli
rorl
ljmp
add
cmp
push
lret
inc
sbb
mov
sub
cmc
jp
jo
cs
pop
xchg
pushf
out
mov
js
adc
sbb
pop
andb
insl
cmp
imul
and
jp
xlat
arpl
ret
cs
sbb
add
mov
add
mov
pop
fcmovne
pop
rcrb
mov
xlat
fsubs
push
out
dec
push
insl
mov
jl
and
int
and
cmp
adc
sbb
inc
aam
ret
pusha
scas
push
popf
add
js,pn
fbstp
pop
stos
pop
es
pop
js
enter
push
jge
sbb
aas
xchg
cld
jecxz
lcall
lcall
jbe,pt
pop
xor
aaa
test
xor
lret
mov
cmp
jmp
imul
cmp
cmp
dec
lcall
jecxz
xor
addr16
cltd
js
rclb
xchg
fdivs
stc
add
and
in
jno
pusha
inc
fildll
sub
sbb
mov
inc
cltd
loope
stc
cmp
cmp
jecxz
fstpt
pop
pop
or
test
sbb
xchg
fcmovu
fcoms
mov
mov
jle
and
xor
loope
movsb
insb
inc
jl
jns
dec
mov
lret
push
sbbb
push
outsb
sahf
in
mov
scas
add
mov
ds
pop
mov
or
cmpb
xchg
and
push
inc
add
and
dec
cmp
loope
cmpb
xchg
repnz
jb
popl
aaa
or
lods
insb
adcl
push
pop
mov
or
sahf
or
add
adc
cmp
dec
or
js
adc
xchg
adc
push
outsl
dec
mov
imul
xchg
fildl
stos
cmp
mov
lods
push
xchg
popa
lret
mulb
mov
add
sbb
test
stc
push
jmp
mov
lds
in
inc
pop
lea
push
and
cmp
addb
pop
xchg
daa
aas
call
subl
cmpsl
outsb
mov
xor
call
lea
loope
pop
das
xchg
mov
jb
sbb
lods
mov
mov
insl
jne
imul
mov
sbb
jnp
lds
sbb
int3
mov
push
sbb
mov
pop
pop
jg
shl
popf
adc
lods
ss
sbb
ds
mov
mov
sub
push
cmp
rcrl
fildl
fwait
out
jo
mov
push
xor
jbe
push
enter
pop
xchg
inc
xchg
fimull
cmp
shl
ljmp
ud0
fucomp
inc
jns
out
leave
adc
jns
rcll
jg
pushf
dec
or
dec
and
aad
mov
mov
xchg
les
lods
sbbl
or
idivb
lret
je
bound
mov
popa
cli
insb
mov
jg
cwtl
std
pop
sbb
mov
mov
lret
out
loope
fsts
jb
bound
test
outsb
push
mov
dec
movsl
int
push
lcall
lods
mov
mov
jl
in
mov
outsb
fsubl
adcb
adc
rcll
xchg
lret
imul
push
cltd
js
push
push
in
in
lahf
repz
push
cmc
pop
insl
insb
lods
mov
ds
cltd
aaa
and
movq
shlb
sbbl
push
xchg
mov
xchg
aam
and
nop
out
inc
mov
aam
gs
sub
and
mov
jg
ret
cwtl
xor
std
dec
xchg
sahf
mov
stos
daa
sub
roll
test
jp
arpl
jno
mov
loop
add
aas
das
inc
lds
lds
jne
xor
cwtl
ds
and
js
andb
sbb
pop
gs
cmp
pop
aas
sub
sarb
lods
push
xchg
sub
lahf
xchg
add
pop
and
je
xorl
pop
mov
push
fnstsw
cs
lret
pop
mov
mov
xor
jle
jo
xchg
jbe
pop
cmp
or
sti
fsub
xor
dec
fstpt
or
shrb
aaa
xchg
movsl
lahf
pop
movsl
cmp
cmp
sbb
dec
dec
stos
add
lods
xor
xor
js
jo
test
xchg
stc
fidivs
lret
xor
std
decb
sub
jle
push
ss
in
es
sti
loope
sbb
mov
jle
ret
sti
lcall
fsubr
xor
fs
xorb
inc
aam
adc
or
mov
push
icebp
add
fimull
sar
stos
dec
xchg
nop
pusha
inc
mov
addps
xor
push
push
push
add
daa
xchg
push
xchg
scas
mov
sub
mov
lahf
lea
sarb
add
jns
or
je
push
pop
int3
ja
jp
mov
inc
lahf
ljmp
into
xorl
lret
or
mov
in
cwtl
and
inc
test
mov
mov
pop
or
jge
sahf
cmpl
push
xor
mov
fcoms
sub
repnz
shr
cli
mov
cld
ja
sbb
outsb
addb
dec
inc
push
xor
cld
xchg
in
and
sarl
push
xchg
cmp
call
out
andps
xchg
out
neg
mov
adc
add
aam
ffreep
in
and
stos
fs
adc
mov
lods
addr16
add
dec
push
mov
dec
sbb
fucomp
dec
ret
sub
sbb
or
enter
addb
in
test
sub
push
ja
xor
outsb
insl
icebp
mov
lcall
mov
inc
ss
imul
and
adcl
xorb
mov
adc
xchg
outsb
lods
in
mov
xor
adc
xchg
aam
mov
xor
xor
push
adc
aaa
mov
push
mov
stos
shll
pop
divl
sbb
in
jno
push
lcall
jns
mov
push
or
das
xlat
or
fidivrl
pop
roll
pop
adcl
mov
and
inc
jo
or
pop
stos
out
sbb
lods
sarl
jne
repz
fcoml
adc
pop
call
nop
adc
adc
lea
decb
stos
rclb
mov
push
or
dec
iret
sbb
inc
mov
lea
xchg
mov
mov
xchg
mov
pusha
in
fldl2e
rolb
test
jne
movsb
movsb
xchg
xor
mov
test
ja
test
cld
arpl
pop
jo
pop
adc
stos
or
aad
mov
mov
dec
enter
jp
pop
xchg
sub
pop
mov
adc
xchg
test
ret
lahf
fidivs
xchg
jl
adcl
movl
outsl
cs
add
jnp
outsl
jbe
cmc
test
jg
stos
and
lods
mulb
daa
pusha
push
sub
imul
push
and
incb
fldt
adc
insl
sbb
flds
sbb
sahf
test
cmp
dec
and
fldl2t
and
cmpl
lahf
scas
mov
iret
pusha
pop
sbb
jb
inc
push
std
sahf
jne
add
loopne
inc
cs
jae
push
sti
or
aas
cmp
addr16
add
xor
and
lods
pop
je
inc
xor
and
pop
rorb
adc
dec
jae
cld
xor
inc
pop
call
mov
and
xchg
inc
je
insl
lret
ds
sar
andl
int3
lds
aaa
fbstp
shl
mov
xchg
hlt
jbe
enter
sbb
hlt
jl
and
orl
nop
fsubs
mov
mov
push
jg
sbb
mov
in
lcall
movb
ljmp
loopne
shl
mov
jbe
je
faddl
jg
mov
jb
pop
pop
je
xchg
in
xchg
push
xchg
insl
lock
mov
popa
cmp
mov
hlt
or
xor
jmp
fwait
dec
xor
xchg
ret
out
add
add
jb
test
push
aad
pop
jbe
jmp
pop
stc
sub
push
scas
fwait
xor
sbb
addl
cmpl
mov
ret
std
sbb
ret
xor
hlt
xlat
jg
adc
movsb
je
push
aam
pop
mov
jmp
mov
jmp
out
cmp
mov
inc
xchg
stc
xlat
xor
fld
int
fbstp
cmp
cli
and
ss
mov
dec
sbb
add
or
mov
daa
fisubrl
testb
xchg
sub
insb
mov
cmp
cmp
dec
insb
jb
lock
movsb
adc
push
xor
xor
movsl
sahf
int
data16
mov
enter
and
enter
mov
push
test
push
jbe
and
and
push
ds
mov
xor
test
sbb
mov
pushf
jns
inc
push
scas
push
xor
fsubrs
enter
push
out
pop
sarl
adc
icebp
and
adc
decl
test
inc
or
jns
cld
or
enter
mov
and
cld
jbe
in
hlt
push
pop
pop
aad
jp
xor
pop
repnz
inc
call
sub
push
fwait
dec
rol
loop
adc
es
push
insb
shr
add
xor
or
mov
lea
sub
rorl
js
xor
sub
cltd
mov
pop
jp
nop
ljmp
int
cmp
jnp
and
js
aaa
divl
mov
xor
fs
cmc
xor
insl
xor
jp
decl
push
inc
jge
xchg
xchg
fbld
js
xor
pop
outsb
out
mov
xchg
daa
das
fsts
stos
dec
lea
xor
add
jno
incl
stos
push
data16
in
inc
and
in
test
jl
scas
repnz
in
ja
js
dec
insl
fwait
mov
inc
lds
subl
out
inc
push
test
pop
mov
sub
cmpl
push
ficomps
faddl
jno
mov
xchg
mov
push
out
dec
mov
sbb
pop
mov
push
mov
xlat
mov
push
push
and
sbb
or
movsb
fdivrs
push
dec
adc
push
enter
jns
fwait
push
lods
jae
push
sub
inc
addr16
inc
or
ds
mov
and
insl
outsb
or
out
cltd
mov
mov
push
xchg
jne
mov
cmpsl
mov
fwait
dec
cmpsb
jae
incw
arpl
aad
mov
mov
xchg
lahf
std
push
fcoms
mov
xor
jecxz
and
xor
pop
xor
sarb
dec
popa
aaa
shrb
int
lds
inc
and
in
leave
test
insb
mov
testb
out
out
js
sub
pop
aas
movsb
ljmp
xor
mov
mov
sti
mov
push
xchg
rcr
xchg
cmpsb
cmpsl
out
push
shll
mov
jb
cmp
cwtl
dec
imul
mov
cmpsb
pop
inc
test
fdivrp
push
bound
loop
lds
jne
xchg
addr16
jge
test
repz
push
sbb
fcomip
add
repz
dec
aas
mov
mov
pusha
add
orl
pop
push
gs
loopne
jl
aaa
adc
xchg
pop
add
xchg
mov
mov
mov
cmp
sarl
xor
mov
aas
mov
mov
xor
int
cmp
mov
jo
dec
stos
scas
popf
lock
aaa
outsb
mov
cmc
popa
xchg
push
inc
out
dec
mov
test
jmp
xchg
aaa
stc
bound
ljmp
add
jg
fs
cmp
dec
mov
sub
jnp
add
push
pop
outsb
or
jne
sbb
mov
jmp
jmp
cmp
inc
setp
mov
in
adcb
adc
cltd
push
add
aam
data16
cmp
jae
fmull
jno
xchg
shll
sub
push
mov
mov
fnsave
jb
repnz
sar
mov
out
loop
mov
pop
and
pushf
imul
add
xchg
jne
mov
mov
cli
inc
mov
mov
push
inc
out
mov
fdivrs
inc
imul
jbe
or
mov
push
sub
jle
in
dec
mov
insb
cmp
outsb
add
lds
lods
cmpsl
pop
pushf
ret
int
xor
daa
adc
sbb
jge
inc
fcmovb
xor
or
out
jle
ds
mov
inc
mov
jp
dec
jbe
sbb
ja
xor
dec
arpl
imul
sub
or
dec
or
add
sbb
jo
shlb
lahf
pop
ljmp
test
or
push
int3
fstl
cmp
xor
pop
ficomps
xor
mov
filds
fincstp
in
push
fstps
mov
mov
pop
push
dec
cmc
mov
stos
pop
push
loope
rcl
cli
mov
mov
mov
jl
jl
jbe
mov
mov
mov
ficomps
enter
mov
insl
mov
ja
mov
dec
sbb
inc
movsb
cmp
gs
mov
and
sbb
insb
sahf
push
fdivp
lock
jmp
insb
pop
in
movsl
sbb
push
orb
or
jl
add
xchg
sahf
mov
inc
lahf
out
fsubs
inc
lds
out
xchg
xor
adc
fldenv
cmp
sub
mov
sub
xor
xor
rcll
mov
xchg
movsl
jne
mov
lds
sarl
pop
jle
xor
xlat
cmp
hlt
push
mov
enter
mov
xchg
decb
push
xor
addr16
dec
out
rcrb
popa
mov
sbb
aaa
mov
jp
sbb
pusha
jnp
cmp
xchg
imul
sbb
sub
out
ljmp
sub
repz
xchg
jo
in
inc
jno
or
scas
cmpsl
in
sbbb
pop
sbb
dec
popa
xchg
dec
adc
ds
repnz
cmpsb
pop
std
cld
mov
mov
popa
jne
das
imul
sub
push
test
dec
imul
push
lcall
adc
xchg
sub
mov
jmp
lock
push
dec
jmp
sbb
xchg
mov
fldl
aaa
int3
jl
lods
call
daa
lock
and
pop
nop
sub
test
and
add
imul
cli
imul
fisubl
lods
mov
and
push
and
inc
xchg
inc
push
cmp
outsl
xchg
mov
out
mov
cmp
mov
aam
mov
inc
xor
ror
pop
or
xor
ljmp
lret
cmp
pop
in
loope
jmp
fs
cmp
sub
pop
int
ljmp
inc
sbb
mov
out
jmp
in
popf
mov
aam
fistps
sti
loop
in
add
cmp
adc
jmp
sbb
mov
jbe
sbb
mov
cltd
jge
xor
sbb
pop
add
lcall
mov
lods
push
or
adc
jbe
es
mov
cltd
arpl
lret
jp
jb
jne
out
ja
lea
pop
rcrl
leave
inc
clc
sbb
std
xlat
pop
dec
and
mov
mov
push
movsl
cmp
jl
idiv
mov
xchg
jle
or
mov
or
mov
or
mov
or
dec
hlt
cmp
popa
aad
jns
adc
addr16
jl
insb
push
fmulp
jge
lret
mov
cld
fsubl
and
mov
adc
or
scas
daa
cmpsl
inc
movsl
add
mov
mov
sub
outsb
es
dec
js
out
hlt
pop
aad
in
add
lods
sub
cmpsb
add
mov
add
insb
filds
inc
stc
pop
outsb
fxtract
mov
cli
inc
iret
sbb
pop
dec
sub
loope
mov
push
push
jne
mov
cli
cmp
mov
sbb
mov
add
out
dec
and
int
lahf
adc
pop
je
call
stos
into
jmp
cmpsb
xor
sbb
jle
shl
sti
into
mov
xchg
lahf
arpl
repnz
mov
push
inc
add
in
pop
insb
sub
jae
jno
and
enter
popa
jb
stos
negl
push
stc
mov
negb
int3
in
out
dec
jg
cmp
jg
or
mov
inc
lods
xchg
inc
in
jno
scas
or
imulb
into
in
adc
jae
jnp
call
xchg
mov
mov
mov
sti
test
or
cld
aad
xchg
jmp
aad
nop
adcl
push
sbb
mov
mov
push
jle
xchg
cmp
push
sub
sbb
and
xor
cmp
xor
fcomi
push
cmp
stc
dec
js
mov
inc
test
ljmp
out
push
add
fistpl
xchg
cmc
or
inc
jae
sti
in
fmul
pop
int
or
fists
stos
mov
or
daa
cltd
aad
lds
jg
loope
movsl
inc
adcb
mov
idivl
repnz
imul
xor
sti
inc
mov
ljmp
jg
jbe
sti
cmp
popf
clc
arpl
cmp
mov
insb
pop
pop
xchg
push
mov
sbbl
lock
sarl
fistl
inc
aad
pushf
jl
lret
or
std
jmp
adc
imul
jp
in
out
jmp
jp
rcrb
push
in
mov
outsl
lock
inc
sbb
icebp
or
mov
pop
xchg
test
xchg
cmp
add
imul
jecxz
out
leave
cs
xchg
xor
addr16
xor
mov
pushf
jp
loop
sbbb
dec
mov
lcall
dec
push
jnp
add
push
xchg
or
mov
xor
and
rorl
imul
mov
stos
xchg
sbb
ss
xlat
inc
xchg
and
leave
repz
mov
sub
sub
dec
mov
jmp
into
xor
push
popa
mov
daa
outsl
out
insb
decb
push
jns
int3
xchg
std
xor
xor
out
add
aam
stos
div
mov
xor
mov
xchg
or
roll
jo
pushf
lahf
out
dec
imul
ficompl
cmpsl
mov
std
cmpl
add
sarl
repnz
fbstp
cld
std
cli
xchg
out
jb
jno
pop
in
dec
ret
cmc
cld
and
testl
gs
xor
xor
popa
mov
adc
dec
mov
xchg
dec
jb
inc
jp
fcmovnbe
xchg
imul
in
aaa
inc
cs
stos
pop
jmp
or
pop
fcmovnbe
add
in
es
pop
pop
add
xchg
popa
ss
fdivrl
and
mov
js
popa
movsl
in
mov
sbb
inc
push
mov
pop
or
cld
jecxz
imul
lret
int
cs
ds
iret
or
rclb
cli
xchg
outsb
clc
inc
xchg
lcall
adc
pusha
pop
in
sbb
push
outsb
jb
mov
enter
xchg
loop
movsl
dec
lea
ljmp
mov
aad
insl
data16
adc
mov
or
xor
jno
movsl
xchg
insl
ss
call
in
add
push
aam
in
sbb
jg
mov
aas
jno
rcll
cmp
push
add
gs
sub
adc
into
cli
inc
sbb
mov
sbb
cmp
xor
cwtl
rcl
add
stc
cltd
xorl
rclb
jno
repnz
push
fiadds
shrb
push
pop
repnz
cmp
outsb
mov
jnp
daa
sbb
jecxz
outsb
daa
sub
sub
xor
mov
lahf
inc
aaa
out
fistpll
out
repz
add
mov
inc
out
sub
inc
jge
xlat
push
arpl
mov
mov
ljmp
and
xor
mov
xor
popf
sarl
shll
in
shll
imulb
shll
push
int
mov
popf
pop
mov
add
cmp
mov
movsb
arpl
pop
jle
and
ret
fsubs
ret
addl
pop
out
enter
cld
pop
jno
xor
xor
pop
adc
dec
push
sbb
pop
mov
sub
cmp
jno
es
push
jbe
call
xchg
adc
jb
arpl
rcrl
repz
jns
inc
nop
xchg
adc
out
pop
stos
and
inc
imul
jmp
pop
js
int3
add
mov
hlt
adc
sahf
rorb
pop
inc
and
enter
and
mov
scas
mov
dec
ja
xor
adc
lds
xor
pushf
push
std
xor
or
mov
inc
ret
fsubrs
jns
xlat
js
bnd
aas
lods
mov
cmp
add
pop
lret
or
pop
mov
mov
dec
cmp
cmp
imulb
sub
xlat
mov
rcl
lahf
mov
rclb
push
test
jnp
lret
cmc
or
mov
ds
mov
adc
das
leave
and
ret
or
test
push
pop
int
jle
mov
div
pop
pop
and
dec
push
mov
loopne
cwtl
fsub
dec
repnz
call
and
aam
cmp
cmpsl
out
stos
sub
jbe
rclb
inc
xchg
aad
int3
data16
insl
das
aas
jnp
mov
sbb
aam
insb
jge
insl
lret
repnz
mov
sarb
pop
and
jl
inc
mov
push
popf
stc
cs
in
icebp
filds
in
inc
jno
scas
or
movsl
inc
jmp
arpl
mov
cmp
shll
cwtl
loopne
jecxz
or
fnstsw
add
add
inc
cmpb
mov
add
mov
cmc
loop
pop
cmp
jle
push
mov
xlat
lods
fcoms
xchg
das
and
or
out
loop
test
ss
mov
push
shr
pop
sbb
mov
stos
sbb
and
sbb
in
sbbb
lea
add
jl
incb
push
mov
xchg
int
push
fisubrl
clc
fwait
sub
loopne
outsb
adc
xor
or
add
lret
mov
outsl
xchg
ret
or
stc
pop
mov
pop
popf
inc
push
and
mov
and
mov
mulb
adc
ret
jbe
cli
push
xor
insb
shlb
mov
mov
cmp
fsub
int
pop
sbb
test
dec
mov
cs
pop
daa
or
adc
popa
and
shlb
repz
push
or
mov
mov
stc
or
movsb
clc
loop
mov
les
pop
cltd
or
mull
push
xor
scas
xor
fisubs
cs
gs
inc
outsb
adc
mov
ret
insl
gs
adc
rcll
xor
xor
add
xlat
cmp
jge
mov
daa
fistpll
xor
push
sub
mov
jb
push
hlt
aaa
imul
sub
dec
sti
inc
adc
daa
sbb
mov
int
enter
jle
mov
in
push
cli
and
dec
into
popa
ret
pop
loopne
pop
in
shrb
cmc
pop
shlb
pop
dec
mov
pushl
jb
and
xchg
fcompl
jb
sarb
loopne
fwait
cmpsb
sbb
xor
lods
mov
sbb
data16
mov
cli
clc
sbb
ja
cs
sbb
adc
fwait
insl
jo
sbb
fisubrl
sub
mov
mov
ds
sub
and
push
out
aaa
mov
mov
sbb
jle
aam
cmp
dec
dec
stos
sbbb
mov
and
icebp
cwtl
and
add
lods
sub
mov
xlat
xchg
xor
and
lcall
add
mov
or
lods
or
mov
adc
mov
insl
dec
adc
push
pop
test
leave
adc
sub
lea
arpl
bound
les
xchg
cmp
les
fisubrl
enter
scas
cmp
pop
out
xchg
and
popf
shll
rcll
jae
stos
test
inc
xchg
dec
in
adc
hlt
jns
mov
pop
repz
mov
mov
call
sub
std
add
sbb
add
aas
push
idivl
movsl
sub
pushf
pop
xchg
xchg
cmp
jns
jmp
xchg
cmp
dec
pop
sub
ja
cmp
sub
mov
daa
push
fcmovb
fs
inc
fists
subb
xchg
es
pop
hlt
push
fcoml
dec
mov
fs
push
cwtl
nop
xor
movsb
mov
jo
testb
pop
xchg
and
jne
adc
incl
shr
sbb
adc
imul
mov
gs
fs
inc
divl
in
or
shl
std
pop
pushf
movb
jp
jge
test
sbb
test
aam
cmc
push
inc
pop
adc
leave
mov
mov
rorb
or
jnp
incb
sbb
jae
fidivs
mov
push
enter
mov
aam
pusha
orl
xchg
dec
xchg
lods
jmp
mov
dec
jge
adc
mov
pop
cmpb
fldcw
xor
aas
fidivrs
pop
adc
sti
stos
inc
mov
dec
xchg
cmpsb
enter
inc
mov
pop
sbb
mov
mov
push
cmp
jnp
adc
testb
inc
xchg
aaa
leave
scas
add
repnz
testl
adc
sbb
cmc
and
sbb
test
cwtl
sbb
popf
call
rcll
aam
in
daa
addr16
mov
cmpb
ficoms
cltd
xchg
out
mov
leave
pop
sarb
cwtl
testb
je
push
xor
jmp
add
rcrb
mov
jp
jnp
inc
pop
pop
stos
stos
adc
sbb
fwait
mov
mov
or
dec
pop
adc
adc
stos
shl
ja
sti
or
arpl
je
mov
sbb
in
mov
xchg
or
xchg
pop
sti
mov
pop
cmp
and
stos
mov
sbb
pusha
imul
and
pop
filds
movsb
leave
dec
dec
out
pop
push
cmp
xchg
fsubs
adc
int3
add
xor
dec
xlat
cs
xchg
dec
and
cmp
jge
test
into
addb
cmc
xor
xchg
push
aam
out
sub
pop
mov
sti
shlb
call
lock
cmp
mov
les
xchg
xchg
mov
enter
pop
mov
std
pop
outsl
lahf
fcomps
test
cmpsb
xchg
mov
lds
jge
stos
push
lods
sub
iret
or
inc
pop
inc
outsb
sbb
jnp
cltd
push
cmc
into
pop
pop
dec
add
shll
mov
mov
rcrl
mov
xor
outsb
dec
cmc
sbb
pop
jno
and
mov
cmp
hlt
imul
cwtl
mov
outsl
int3
dec
add
fwait
leave
push
pushf
sbb
pusha
data16
adc
or
xor
inc
es
adc
imul
dec
and
push
inc
loopne
cmpsl
push
jmp
and
pushf
push
movsl
sbb
lds
sbb
pop
movb
cmpsl
xor
xor
fimuls
add
sbb
cmp
xchg
xchg
and
std
adc
inc
in
cs
imull
ljmp
push
iret
jp
push
lods
inc
adc
dec
mov
daa
xchg
fucomip
icebp
add
cmp
leave
loopne
push
mov
pop
sub
pop
xorl
in
mov
das
adc
movsb
loopne
pop
pop
sarl
loop
sbb
pop
sub
cmp
lock
adc
dec
adc
adc
int
jg
mov
in
imul
ret
jmp
inc
shl
jno
add
mov
jmp
int3
enter
dec
or
loopne
addr16
lds
mov
bound
xchg
mov
stos
pop
pop
and
sbb
fists
or
sbb
mov
xchg
mov
data16
jnp
test
pop
cmpsl
sub
and
repnz
in
cmpsl
add
adc
cs
push
mov
outsl
imul
mov
xchg
cmp
sub
xchg
sahf
cmpsl
orl
movsl
fidivrl
or
pusha
je
cmpsb
fldl
mov
pop
idiv
imul
loop
mov
adc
daa
ss
pop
fdivr
pop
in
pop
lock
push
cld
mov
mov
sub
in
push
sub
cmp
mov
push
or
sbb
rcrb
inc
je
lea
adc
shrb
inc
ds
lods
xor
repnz
jle
add
mov
fldlg2
dec
mov
and
cmp
push
mov
dec
imul
inc
xchg
dec
inc
cmpsl
mov
add
mov
fidivrl
inc
aaa
loopne
push
rol
xchg
outsb
out
enter
adc
fwait
jge
stos
jne
loopne
into
loope
ljmp
sub
notl
mov
adc
adc
pop
adc
xchg
mov
dec
ja
scas
repnz
add
ret
pop
jns
out
lock
fbld
inc
out
insb
imul
outsb
adc
push
adc
xchg
mov
lret
adc
fsubrs
leave
outsl
mov
cmpsl
pop
test
lods
es
sub
or
sahf
mov
dec
lock
mov
pop
outsl
inc
fwait
nop
pop
jg
jl
gs
jns
or
xor
stos
pop
push
jns
mov
sub
adc
rcrl
out
repnz
loop
loop
enter
das
ret
pop
xchg
mov
xlat
rorb
xchg
test
push
adc
sahf
gs
dec
xor
dec
fisubs
test
repnz
xchg
dec
lods
jge
mov
jecxz
mov
ljmp
dec
mov
lods
outsl
pop
cmc
inc
cli
int3
and
sbb
cmp
and
push
pushf
add
sub
jl
mov
inc
and
add
ret
dec
push
mov
sub
and
lods
lods
repnz
fs
mov
js
push
repnz
mov
gs
rcr
neg
inc
push
dec
jb
scas
stos
aam
ljmp
andb
or
pop
sbb
push
sub
or
add
ljmp
cmp
or
stc
mov
insl
fiaddl
test
mov
imul
and
push
imul
les
xchg
and
addb
adc
mov
xchg
fisubrs
sti
jno
dec
stc
leave
cmpsb
cwtl
iret
adc
data16
and
outsb
loope
or
test
push
in
add
loope
mov
mov
icebp
adc
jg
lret
adc
mov
mov
cmpb
lock
sub
mov
cmp
mov
push
jl
stos
das
inc
inc
arpl
js
and
and
push
aam
add
adc
ljmp
fmuls
and
adc
push
sub
mov
mov
test
jl
xor
mov
mov
jo
std
insb
cmpsb
xchg
je
lods
popf
add
push
pop
std
or
je
ret
xchg
add
mov
push
cmpsl
sub
scas
xchg
loop
test
imul
in
push
cmp
xor
xchg
out
ja
and
add
inc
cmc
adc
add
xchg
dec
mov
rolb
fsubl
jo
dec
and
jp
stos
mov
push
dec
lahf
sti
aaa
gs
pop
in
cwtl
xchg
in
sbb
fwait
jae
jne
shlb
pop
frstpm(287
pop
lea
mov
cwtl
out
add
call
mov
mov
lds
inc
mov
xchg
ljmp
int3
test
xor
adc
add
or
or
and
daa
jecxz
cld
mov
insl
push
shlb
stos
mov
jae
fmull
cmp
push
lea
out
add
or
dec
int3
lock
in
cltd
xlat
xchg
mov
and
or
insl
je
mov
lret
cmpsl
rcll
mov
test
andl
enter
loope
cld
repz
pop
and
push
fisubs
pop
xor
daa
hlt
popf
in
cmp
sbb
or
pavgb
mov
or
sub
push
mov
pop
xor
lahf
int3
mov
popa
jmp
cmpsb
out
fwait
push
jnp
mov
mov
dec
sahf
mov
pop
cmp
roll
mov
jne
cli
cli
xchg
mov
cmp
cmp
xchg
sub
xchg
or
aas
add
rclb
mov
jp
shll
adc
arpl
sarl
push
cmpsb
decl
iret
mov
push
xor
xchg
cwtl
out
loopne
inc
mov
mov
adc
daa
sbb
jp
adc
pushf
xlat
imul
dec
push
push
cmp
aad
int3
movsl
pusha
adc
sbb
adc
or
popf
push
lret
sub
lcall
and
dec
cli
cld
stos
or
push
popf
inc
aam
push
movsl
mov
loopne
arpl
in
int3
inc
cmp
movsl
adc
int
sbbb
push
sbb
xor
dec
movb
stc
inc
pop
les
ljmp
inc
push
in
fdivp
push
test
arpl
mov
sahf
aas
push
mov
xchg
in
push
fistps
lds
xchg
pop
or
lea
incb
sub
mov
mov
pusha
xchg
mov
test
xchg
jno
mov
bound
pop
mov
mov
push
mov
inc
dec
push
and
pushf
push
xchg
or
nop
push
add
xchg
mov
sti
add
mov
std
and
dec
enter
lods
lret
movsl
shl
ror
cmp
adc
and
mov
mov
inc
dec
push
cs
les
push
cwtl
aam
outsl
xchg
inc
data16
add
inc
mov
in
movsb
fcmovbe
sahf
shrl
dec
push
mov
mov
cmpl
cmpl
lea
scas
jg
fxtract
dec
pop
inc
jge
jp
out
cmc
adc
andb
xchg
jmp
int
add
pusha
xchg
test
pop
dec
sbb
cld
and
scas
mov
adc
gs
leave
jg
jae
mov
xor
out
fucomi
stos
xchg
cwtl
push
enter
pop
shll
jns
push
lds
addl
cld
aam
sub
add
push
sarl
mov
add
inc
std
dec
stos
aam
sbb
dec
jae
pop
jne
pop
imul
or
mov
aaa
mov
test
dec
rcll
mov
imul
insb
loopne
idiv
jbe
sbb
mov
or
and
push
bound
enter
lret
insl
mov
sbb
cmp
xor
lret
xor
shl
stos
rolb
es
dec
mov
push
inc
in
icebp
notl
and
btc
cmp
inc
cmp
adcb
cmp
sbb
aas
and
aad
out
push
push
pop
mov
sbb
imul
add
sahf
popa
mov
nop
xchg
mov
mov
test
pop
cmp
jno
xchg
stos
shl
outsb
add
pop
daa
sub
inc
js
cs
inc
jne
adc
ret
cmpb
pusha
xchg
inc
dec
xor
cmp
jae
mov
sub
jns
rcl
pop
fwait
inc
iret
cld
mov
xchg
dec
scas
mov
pushf
sbb
or
cmc
push
ja
mov
xchg
push
gs
cmp
fdivr
and
loopne
push
and
jmp
or
outsb
adc
test
mov
mov
mov
testl
and
outsb
les
sub
push
push
in
push
lret
test
fildl
sarl
inc
fdivl
sub
lea
shr
cmp
pop
pop
jp
aas
lea
jp
ljmp
icebp
daa
insl
sbb
test
mov
fwait
mov
xchg
jae
das
mov
nop
in
jl
or
jp
add
pop
movsb
adc
xlat
mov
fs
rcl
adc
xor
sub
mov
sbb
hlt
xor
ja
jg
jp
rcrl
push
add
test
or
sub
fdivrs
adc
loop
or
dec
orb
jne
cs
adc
in
repnz
ds
arpl
push
stc
mov
repnz
hlt
stc
and
mov
sbb
or
in
data16
int3
das
mov
xchg
mov
jb
outsl
or
sbb
adc
addb
xchg
notb
xchg
push
pop
out
es
jp
jns
sub
xlat
popa
pop
xor
mov
jns
js
or
loope
add
or
pop
movsl
test
icebp
sbb
fsts
out
xor
mov
mov
xor
dec
jne
lds
xchg
test
push
testl
stc
push
cmp
int
pop
push
dec
sub
sub
xchg
jne
add
test
inc
adc
bound
ret
mov
push
mov
add
mov
inc
add
push
out
mov
loopne
or
xor
pop
pop
in
loop
shlb
les
es
fldenv
stc
push
adc
repz
xor
lret
in
pop
sarl
call
rol
jne
mov
sub
jae
push
popa
dec
cltd
sub
out
push
out
fimull
lahf
adcb
jno
push
jbe
jp
int3
sarb
mov
mov
fdivrl
loopne
sbb
mov
pop
jno
jge
into
js
and
jne
popa
lods
enter
clc
adc
repz
add
xlat
cmp
add
inc
push
inc
cmp
xor
fnsave
dec
xor
aad
std
jno
or
addr16
out
add
aad
cmp
jp
dec
in
xlat
loopne
xchg
jbe
rorb
mov
push
and
es
xor
sub
dec
shll
shll
pusha
dec
inc
add
mov
mov
sbb
lods
jecxz
bound
or
daa
mov
or
cli
add
jle
sub
out
mov
mov
mov
pop
push
dec
out
fwait
jmp
cmpsb
push
mov
pop
push
sub
out
adc
out
js
adc
imulb
sbb
add
fwait
dec
mov
lods
jns
push
and
cmp
mov
out
clc
mov
jo
inc
clc
xchg
mov
inc
mov
fiaddl
lret
movsb
bound
cwtl
cld
xchg
and
fstl
inc
xor
stos
dec
and
mov
lods
sbb
out
pushf
scas
add
inc
ret
xor
cmp
sub
cld
nop
adc
or
inc
mov
je
mov
arpl
mov
pop
push
lcall
loope
xchg
jbe
add
jmp
fs
aaa
inc
jne
movsb
pop
adc
gs
shll
sbb
mov
mov
hlt
and
insb
test
push
push
aas
aad
std
arpl
aam
or
inc
fcmovbe
aam
xor
dec
or
cli
push
push
mov
imul
lds
cld
scas
inc
mov
sahf
mov
inc
orb
add
cmpsb
lret
leave
lret
inc
inc
je
and
sbb
jle
js
fucomi
or
mov
pop
cmp
lea
sub
xchg
or
out
pop
test
mov
xor
lds
outsl
mov
sbb
dec
push
setl
push
pushf
mov
icebp
out
jmp
cltd
leave
mov
lods
mov
pop
adc
repz
dec
scas
shll
mov
imul
push
lock
lret
or
ljmp
and
sub
int3
cmp
xorb
mov
dec
xchg
mov
inc
xchg
pop
sub
sub
xchg
sub
xchg
ja
pop
jnp
test
fildll
mov
xchg
jmp
dec
ficompl
pop
cld
sub
out
std
jp
cmpsl
gs
lods
int
enter
push
nop
in
jecxz
test
in
arpl
xorb
jo
pop
mov
or
divl
hlt
cmpsb
movsl
xchg
fcmovnb
sbb
adc
mov
sub
das
mov
xchg
xchg
shrb
jl
sbb
jl
stos
imul
arpl
inc
jbe
hlt
lret
nop
call
add
aas
or
sub
lods
lret
cltd
jp
jl
push
sbbl
enter
scas
loope
inc
arpl
idiv
mov
mov
cld
sub
xchg
mov
rcll
in
in
add
xchg
push
rcr
dec
pushf
sbb
add
xlat
movsb
or
push
scas
add
cmp
outsl
jb
pop
sub
mov
xchg
call
dec
xor
sbb
xorb
aad
daa
pop
adc
xchg
pusha
push
cltd
cs
das
push
jne
cwtl
mov
insb
adc
jl
ret
out
adc
cmp
imul
int3
lahf
push
pop
daa
fisubrs
popa
jns
gs
push
ret
rcrb
aas
repz
cli
push
adc
daa
cltd
push
and
lret
mov
aad
push
adc
arpl
xor
gs
push
add
ja
and
add
xchg
push
daa
mov
push
add
scas
test
cmp
arpl
and
mov
ficompl
jmp
jge
mov
or
insb
out
je
mov
ret
mov
out
and
test
roll
cmpsb
push
pop
mov
and
mov
enter
outsl
xchg
push
mov
xor
rcrl
mov
mov
lahf
cwtl
jne
inc
sub
mov
jns,pn
iret
imulb
imul
jmp
loop
adc
das
or
push
mov
cltd
cld
jge
les
add
addr16
incb
jl
imul
sub
repnz
in
test
popa
jecxz
jne
adc
jne
and
xchg
push
mov
incl
mov
pusha
imul
mov
mov
jl
or
stos
shl
pop
ljmp
mov
pop
xlat
test
addr16
std
sar
in
cmp
jmp
dec
orl
int3
mov
pop
rcrl
sarb
push
mov
jb
ret
cmp
gs
xchg
add
sub
xor
mov
and
loop
and
sbb
xchg
mov
xchg
negb
mov
fdivp
dec
inc
cmp
and
xor
cmpl
fcomps
fxam
imul
addr16
xchg
jns
inc
jo
imul
dec
rorb
jb
dec
or
adc
mov
ret
pop
fs
jo
adc
repnz
add
inc
xchg
imul
dec
lret
fldl
xchg
and
pop
jns
lods
adc
cli
jecxz
enter
mul
loop
adc
mov
sub
mov
mov
ja
imul
mov
xor
in
clc
mov
pop
ficompl
dec
mov
xor
sbb
sbb
sahf
ja
insb
push
xor
ret
pop
andl
loope
int
nop
push
mov
mov
mov
imul
push
dec
loopne
jo
dec
icebp
mov
into
or
sub
cmp
inc
xchg
fidivrl
test
test
lahf
add
jb
mov
jbe
aaa
pusha
adc
and
sbb
mov
jb
add
outsb
andl
sar
gs
push
test
push
add
cmpb
aad
in
mov
cmp
inc
xchg
push
cmpsl
aam
mov
ret
rclb
jns,pt
popf
mov
outsl
push
imul
jo
push
xchg
pop
imul
int3
cmp
dec
leave
cmpsl
jg
cmpsl
push
jp
std
cmc
adc
fbld
int3
lods
push
add
sbb
xchg
shll
je
inc
inc
or
jg
cmp
aaa
xchg
mov
punpckldq
loope
les
jl
out
aaa
iret
add
loop
lea
inc
loopne
test
mov
enter
dec
xchg
aaa
sub
pushf
pop
fadd
outsl
mov
out
pushf
mov
xor
mov
ds
cmpsl
lods
push
and
bound
lahf
sub
xchg
inc
pmulhw
push
lahf
adc
pop
stos
sbb
insb
mov
and
xor
mov
xor
gs
lds
mov
cmpsl
jne
xchg
mov
jge
dec
outsb
cwtl
mov
adc
std
and
jno
test
into
cmp
lahf
adc
or
sarl
sbb
shr
sub
and
les
addr16
imul
sbb
mov
and
jno
sub
popl
stos
push
push
fs
sbb
pop
sbb
js
enter
add
hlt
rcrl
nop
add
jg
and
hlt
mov
jb
pop
fcoml
jg
dec
imul
scas
fildll
cmpsb
lds
lods
xor
jb
adc
jecxz
mov
faddp
add
ret
ja,pt
add
pmuludq
das
loop
out
cmpsl
sub
xchg
jb
mov
and
sbb
lods
mov
lock
xorb
bnd
ljmp
insb
cmp
jbe
std
xlat
fnsave
dec
fldl
inc
cmp
cmp
mov
addr16
xor
xlat
push
xchg
mov
je
or
pop
in
xchg
jp
adc
stc
sbb
aad
add
mov
adc
xor
imul
ficompl
cwtl
daa
and
and
push
and
loopne
cmp
mov
and
add
push
inc
cmp
ds
inc
and
jno
out
aaa
push
mov
and
and
test
sbb
ret
nop
das
pushf
ljmp
pusha
subl
insb
lock
adcb
cmp
stc
in
jp
sub
dec
scas
lretw
js
lock
lahf
pusha
std
dec
sti
sub
and
imul
sbb
push
xchg
push
dec
sbb
cmpb
imul
lods
xchg
jp
inc
xor
stos
in
fwait
imul
cli
mov
mov
push
and
push
enter
mov
sahf
push
movsb
adc
out
xchg
movsb
sti
test
imul
mull
gs
std
lock
or
test
jmp
sbb
pop
movsb
popf
sub
lcall
jmp
aaa
inc
push
mov
pop
jg,pn
je
pop
mov
or
int
scas
pop
ret
sub
lret
dec
jl
lahf
adc
pop
inc
outsl
lods
js
movsb
ja
ret
lret
cmc
xchg
out
dec
test
jbe
fstl
mov
fistpl
cltd
xlat
push
add
stos
xchg
mov
in
ds
mov
call
fwait
xchg
rcl
cli
mov
sti
jecxz
jno
xchg
add
std
add
jl
cmp
inc
sub
subl
jmp
movsb
cld
es
addb
jl
mov
cmpsl
js
call
sub
inc
bound
cmpsb
cmp
dec
xchg
and
cmp
jmp
into
movsl
out
pop
gs
aaa
leave
xchg
sub
aaa
push
push
mov
nop
pop
divl
xchg
push
cmpsb
mov
fisubl
int3
mov
xor
shrl
cmpsb
pop
rcrb
push
mov
push
mov
enter
loop
outsl
jg
sub
xor
jnp
push
jl
ficompl
daa
insl
fistpl
inc
aaa
push
push
in
aaa
and
fmul
add
icebp
sub
les
clc
dec
xchg
ficompl
xchg
lret
stos
popa
xchg
rcrl
dec
ljmp
sub
sbb
xor
aaa
mov
dec
dec
cmc
daa
mov
jecxz
push
cmp
mov
ljmp
jp
in
adc
ds
jge
addl
push
shrb
cmp
sbb
push
xchg
das
mov
repz
shr
sbbb
push
mov
mov
lds
adc
scas
cmpb
movsl
stos
sbb
imul
and
jns
aaa
xchg
mov
dec
outsl
adc
mov
rcl
bound
pop
stc
sahf
inc
out
jge
add
pop
inc
test
mov
or
mov
xchg
ja
and
roll
jmp
orb
mov
inc
sbbl
sub
jo
xchg
jnp
mov
mov
cmp
mov
add
pop
lahf
fcompl
js
mov
dec
push
scas
pop
mov
pop
mov
repnz
pop
jno
inc
mov
xchg
imul
xchg
es
outsb
jae
stc
inc
pop
add
pop
test
inc
pushf
lret
push
lret
ljmp
jge
sbb
movsb
mov
cwtl
in
mov
mov
pcmpgtb
arpl
dec
sbb
push
or
adc
mov
ljmp
in
clc
push
mov
flds
inc
sbb
out
jg
mov
pushf
push
adc
pop
iret
jo
stos
sub
inc
xchg
adcb
int3
mov
sub
repnz
inc
mov
sbb
popf
pop
jp
fwait
cmp
inc
enter
call
cltd
push
add
add
outsb
movsl
dec
push
adc
or
mov
add
icebp
into
stc
mov
les
inc
aas
and
mov
inc
cmp
pop
hlt
jb
push
inc
and
shll
sti
scas
push
popf
and
popa
xchg
mov
mov
int3
jge
mov
test
mov
cltd
lods
test
addr16
stos
xorb
mov
jmp
xchg
rclb
push
fiadds
cltd
lock
jecxz
cmpsb
xchg
and
lods
add
adc
cmp
push
sub
mov
push
mov
mov
mov
adc
imul
or
jbe
jnp
jp
sti
cltd
mov
lcall
xchg
test
dec
test
addr16
into
mov
cmc
or
adc
repnz
ds
test
pop
incl
xor
mov
mov
add
aas
push
rolb
mov
fnstcw
jbe
leave
pop
cmp
lds
in
push
nop
sub
inc
roll
pushf
cwtl
je
in
das
std
out
pop
lea
out
pop
inc
out
sar
clc
fidivs
cs
fdiv
jecxz
fucomi
lahf
inc
push
push
fnsave
jmp
mov
pushf
sub
sar
mov
push
sub
push
pop
test
or
sub
ss
jmp
cmpsb
add
pop
adc
frstor
fs
dec
pop
and
cmp
add
add
xor
mov
xor
test
mov
cmp
cmpsl
pop
lret
xlat
cmpsb
out
imul
repz
add
enter
popf
aad
push
and
pmaxsw
xchg
sbb
aas
ret
jle
xor
push
sub
sub
jne
mov
lcall
lcall
mov
das
dec
test
shlb
or
cmp
push
pusha
lret
add
push
pop
and
mov
imul
pop
pop
xchg
call
and
loop,pn
jle
mov
push
pop
stc
ss
jo
loop
mov
push
or
jg
hlt
add
test
imul
das
sahf
repz
scas
cmp
sbb
rcrb
mov
or
pushf
mov
mov
mov
xchg
addr16
mov
icebp
inc
fwait
and
ljmp
lock
ja
xchg
and
inc
mov
inc
cltd
inc
xor
pushf
dec
shr
mov
add
inc
mov
repz
sbb
cs
push
xchg
mov
fldcw
je
je
cmp
jns
inc
mov
xor
out
in
jbe
lret
pushf
movsb
xor
inc
aam
jns
sahf
data16
out
sbb
push
mov
inc
adc
pop
mov
imul
js
xchg
fcomps
and
inc
xchg
xor
sub
aas
orl
int
fisttps
ss
jae
push
pop
jg
dec
lahf
mov
dec
xchg
movsl
xor
repnz
cmpsb
idivl
jno
adc
mov
subb
inc
iret
sbb
adc
les
mov
inc
xor
lcall
mov
test
imul
lods
dec
outsb
jae
enter
ljmp
std
mov
and
iret
outsl
pop
leave
sbb
jp
shll
xorl
idivb
popf
sbb
dec
dec
int
cmp
pusha
pop
or
mov
loope,pn
push
push
testb
jb
push
and
inc
xchg
sub
jno
adc
cmpsl
add
fdivl
in
lea
push
lahf
scas
fcomip
je
sub
std
ret
mov
jae
roll
pushf
xchg
push
je
movsb
xchg
fstl
adc
inc
sti
stos
dec
test
les
sub
cmp
pop
jno
pusha
repnz
mov
das
sahf
pop
filds
or
cmpb
push
push
sar
notl
add
leave
ret
xor
cld
shlb
div
push
idivl
arpl
movsl
into
rol
sub
and
inc
mov
inc
sbb
aas
push
lods
mov
xchg
jl
pop
adc
mov
shll
out
cmc
mov
sbb
call
insl
rcrl
adc
inc
lea
xchg
add
sub
push
pop
push
add
into
es
xlat
cmpsb
jns
outsb
adc
lret
sbb
in
arpl
or
add
pop
jp
mov
pushf
sbb
loope
aaa
pop
mov
or
jecxz
movsl
sbb
sub
cmp
sub
add
mov
stos
xor
push
fmuls
lds
adc
sbbb
push
dec
addr16
mov
js
rol
stos
cmp
imul
pop
inc
pop
mov
or
jp
jecxz
cmc
mov
inc
insb
fstpt
out
aad
mov
nop
rcr
xor
or
mov
stos
daa
aas
sub
dec
inc
xchg
lahf
out
push
jp
enter
fstpl
testl
cmp
pop
sbb
dec
jb
ds
or
mov
cmp
adc
fwait
lret
inc
lcall
sub
nop
jg
mov
cmp
mov
test
incb
add
cli
dec
es
mov
clc
pop
rclb
hlt
jg
push
mov
lea
mov
lods
or
inc
mov
sbb
jnp
ds
mov
ja
movsb
mov
mov
jae
lods
cmp
or
mov
loopne
fbstp
mov
ficoms
pop
stos
in
mov
ja
iret
and
mov
mov
int
fidivrs
lods
inc
fisubrs
sbb
cmpb
popf
fs
jmp
and
cltd
pop
shlb
xlat
and
test
mull
cs
pop
cmp
mov
ret
add
in
xor
adc
incl
ljmp
mov
js
std
fidivl
inc
mov
pop
add
lcall
cli
jae
mov
pop
mov
dec
dec
test
mov
adc
stos
imul
mov
in
aam
lock
adc
fiaddl
xor
scas
daa
mov
xchg
jge
push
pusha
daa
and
inc
dec
jle
fisttpll
cmp
add
out
push
xchg
nop
mov
std
test
cmp
inc
lret
xor
sub
pop
jbe
cmpsb
test
mov
mov
adc
or
in
in
push
shrl
xlat
scas
xlat
popf
xchg
loope
xchg
sbb
mov
cmp
into
or
lods
xor
jge
push
pusha
popf
int3
mov
fadd
or
fsubl
sarb
pop
ret
jle
inc
sub
sbb
adc
add
fcomi
jl
cmp
cmp
lock
stos
jne
mov
loop
mov
call
pop
pop
push
and
rcr
das
pop
xchg
js
xor
lea
mov
aaa
cltd
jne
in
lret
in
mov
outsl
mov
sub
jmp
in
sub
stos
mov
cli
mov
lahf
mov
into
stos
lods
das
adc
push
pop
pop
cmp
cmc
stc
jmp
in
xor
cmpsb
dec
pop
mov
loopne
cmpsl
lds
cwtl
mov
pushl
rorl
negl
js
push
mov
dec
push
icebp
inc
hlt
mov
arpl
stc
popf
mov
sar
inc
repnz
fstl
xor
popa
test
mov
lcall
into
cltd
outsb
mov
fildll
mov
call
mov
lcall
adc
jmp
sub
fisubrl
mov
xchg
test
mov
jp
push
enter
insb
xor
loope
adc
inc
inc
aas
xchg
in
in
ljmp
mov
sarb
xchg
ljmp
push
in
xchg
repz
mov
insb
das
repz
ror
cmpsb
lcall
lea
mov
jnp
sbb
push
loopne
and
push
aas
adc
in
cli
xchg
jno
in
jb
cmp
inc
dec
bound
mov
imul
cmp
xchg
sbb
cwtl
lods
into
and
jnp
mov
adc
lods
mov
lds
xchg
or
movsl
push
add
cmovns
push
lret
cmc
or
repz
xor
inc
popf
mov
or
sub
ss
insl
xchg
in
insl
jnp
adc
es
pusha
addr16
outsl
stc
fiadds
add
add
xor
cmc
push
mov
loop
sbb
jo
mov
rolb
xor
push
and
xor
ret
mov
out
jne
je
cmp
lcall
sub
lahf
adc
adc
enter
jge
mov
pop
outsb
scas
cmp
repnz
stc
insb
stos
xchg
aad
sub
data16
enter
mov
out
mov
push
mov
cmpb
sbb
lea
test
fisubs
jmp
outsb
mov
cmc
in
ss
roll
or
pop
cmpsl
pop
sub
rclb
movsb
sbb
xchg
and
push
xor
mov
in
mov
push
or
xchg
dec
push
or
es
push
inc
mov
inc
adc
push
cli
outsb
insb
xchg
lods
inc
bound
pushf
add
fidivl
insb
mov
push
jl
insl
jle
addb
push
jl
sarb
popf
mov
cmp
les
hlt
jbe
repz
mov
leave
jo
aam
das
int3
outsl
ds
jle
dec
mov
ret
xor
mov
or
loope
addr16
sub
daa
mov
inc
and
xor
add
pop
scas
ljmp
cltd
mov
les
adc
dec
adc
lock
jae
xchg
dec
or
mov
fcoml
fistps
stc
lods
pop
jb
push
jp
and
ret
aad
pop
dec
test
inc
mov
test
movsl
or
jbe
imul
mov
mov
push
pop
mov
loopne
mov
test
mov
fistpl
in
incb
adc
das
mov
adc
push
xor
arpl
loope
and
cli
mov
lcall
out
adc
out
cmp
push
pop
mov
push
std
fdivrs
jo
push
jne
shr
in
out
cmpsb
cmp
add
movsb
sub
inc
fldenv
pop
push
push
pop
aam
pop
mov
mov
push
dec
lcall
dec
add
and
push
or
leave
or
dec
repnz
out
subl
and
sbb
push
jns
jne
iret
enter
negb
testl
repnz
and
test
sub
cld
adc
mov
adc
ret
addr16
sbb
adc
les
stc
sub
push
xchg
out
xlat
push
sbb
xchg
outsl
cmpsl
mov
or
cmp
jbe
add
in
and
adc
hlt
rclb
filds
xor
iret
ja
leave
add
inc
dec
jp
adc
repnz
cwtl
and
mov
xchg
xchg
insb
mov
out
xchg
fadd
add
pop
and
dec
push
lods
and
xchg
mov
push
fbstp
imul
enter
mov
sbb
mov
ret
insb
int
adc
mov
je
ss
push
adc
adc
ss
mov
inc
sbb
inc
test
cld
and
mov
jl
mov
into
jns
lret
xchg
mov
aas
add
popa
cmpsl
cmp
push
push
dec
pop
cltd
mov
rcll
add
ds
std
dec
iret
shrb
daa
je
add
roll
imul
mov
in
sub
out
mov
xchg
jno
test
les
and
mov
lock
or
das
mov
pop
test
stos
test
rcll
xor
popa
adc
mov
shll
sbb
cmp
mov
enter
xchg
add
scas
jl
jb
dec
in
bswap
arpl
inc
iret
xchg
xchg
add
cmc
repz
scas
push
xchg
repnz
pop
sbb
xchg
stc
sbb
mov
dec
adc
sti
inc
notb
lods
inc
xchg
shlb
cmpsb
jo
xor
jl
fs
dec
and
aaa
call
lods
sub
or
fisttpll
ja
mov
pop
ret
xor
sub
adcb
sarl
outsb
lds
enter
or
push
sti
sarl
xchg
jge
pop
xchg
jae
andl
dec
or
mov
lods
inc
add
js
inc
shll
adc
pop
push
mov
push
int3
outsb
pop
mov
mov
scas
push
arpl
push
xor
sarl
jp
mov
mov
push
inc
loopne
scas
lock
pop
inc
std
mov
cmc
es
and
insl
xchg
outsl
out
jae
add
loope
icebp
cmp
call
inc
pop
or
cmpsb
adc
in
aas
xor
inc
ret
pushf
cwtl
jae
push
lea
push
add
xchg
js
mov
sbb
fwait
dec
imul
jecxz
pop
int3
xor
insb
loope
xchg
mov
mov
popa
out
push
hlt
lock
ds
gs
and
mov
shll
punpckldq
xor
fisttpl
dec
sub
push
stc
dec
add
or
push
vcvttpd2dq
or
jne
mov
mov
cmp
push
pushf
pushf
push
mov
or
push
xlat
dec
insl
jg
xor
mov
pop
xchg
int3
jnp
aad
sub
test
stos
aam
dec
adc
popf
sbb
out
fnstenv
out
cld
xor
adc
lock
icebp
cmp
test
jmp
test
imul
add
aaa
pop
scas
movl
cmp
push
cmc
push
push
cmp
je
cmp
xor
je
imul
mov
aad
lret
pop
cmp
lcall
repnz
mov
negl
pop
int3
les
dec
cwtl
mov
cmpsb
aaa
shld
mov
fwait
in
and
inc
jb
push
mov
loopne
xchg
int
insl
or
arpl
les
inc
mov
jnp
movsl
xchg
call
sbb
sub
and
cmp
jmp
adc
hlt
and
into
movsl
pop
lcall
sti
mov
gs
push
inc
out
pop
popa
xor
pop
xor
push
push
cmc
dec
mov
cmp
jge
fnstcw
sbb
iret
and
mov
lock
notl
adc
test
cwtl
outsb
data16
sbb
jb
test
and
sbb
mov
mov
les
inc
or
push
fimull
in
ja
std
mov
je
xor
mov
adc
or
jmp
mov
or
dec
in
and
lea
dec
push
sub
ss
lds
jne
jecxz
std
out
lds
push
inc
xor
outsl
cmpsl
pop
movsl
push
jecxz
fmuls
enter
mov
push
out
popa
cmp
pop
pop
sub
jmp
inc
push
xor
repnz
rolb
mov
sbb
sbb
add
push
dec
push
mov
les
mov
inc
ljmp
push
call
aad
sbb
inc
jbe
rol
jno
pop
fs
fmuls
cmpsl
in
mov
jnp
in
push
mov
inc
inc
pop
pop
cmp
mov
roll
sub
pop
in
lcall
repz
fnstenv
clc
frstor
ret
cmp
fs
mov
pop
xor
xchg
sub
push
mov
hlt
jmp
xor
adc
mov
loope
mov
out
lret
xor
adc
jl
rorl
insl
daa
stos
and
pop
in
leave
jae
jmp
icebp
ljmp
jb
push
cmp
insl
xchg
call
fwait
cmpxchg
aaa
xchg
sub
shlb
out
inc
imul
in
fsub
jecxz
add
lret
dec
jnp
int
cmc
jg
dec
fisubrl
dec
jmp
push
cmp
pop
sbb
pop
push
push
lret
hlt
dec
push
stos
repnz
sub
or
mov
orb
cmc
repz
outsl
adc
mov
mov
repz
xchg
or
xchg
and
mov
outsl
pop
cmp
pop
in
shrb
sbb
push
xor
lea
cmp
jle
dec
js,pn
stos
in
jae
inc
ss
mov
xor
jl
mov
int3
jbe
test
addr16
test
push
mov
cmpsl
push
outsb
cs
xchg
or
nop
mov
and
sub
lret
pushf
pop
arpl
pop
dec
sbb
std
push
xchg
or
cmpsb
scas
adc
fisubs
movl
inc
jbe
sub
ficoms
push
cmc
push
inc
mov
test
mov
dec
imul
mov
xlat
in
fildll
sub
movsl
push
cmp
mov
rorl
outsl
into
inc
mov
addb
or
mov
push
ret
mov
mov
movsl
mov
lret
mov
pop
mov
mov
inc
repnz
les
sahf
arpl
les
push
adc
int
sub
popf
fmulp
fwait
loope
insl
push
dec
dec
adc
sti
dec
xlat
push
vcvttpd2dq
xchg
mov
mov
mov
ds
ss
outsl
dec
mov
xchg
mov
mov
imul
push
sarl
loop
test
or
lcall
ss
or
lret
roll
sub
inc
jb
lods
sar
fstpl
mov
rdmsr
push
lods
push
mov
dec
sar
sbb
test
dec
subl
cs
xor
rolb
pop
lods
dec
mov
pop
and
add
jle
pop
mov
mov
mov
test
and
cltd
popa
int3
cmc
xchg
dec
adc
jp
je
xchg
dec
test
lret
icebp
movsl
pop
setb
xor
ret
mov
jg
gs
mov
mov
xchg
call
and
ffree
sbb
bound
lcall
ja
test
shrl
adc
adc
inc
mov
sub
or
push
leave
add
jno
repnz
push
testb
arpl
sarb
and
out
jns
cmp
or
sub
pushf
pop
pop
jmp
jo
mov
in
call
cwtl
add
fildl
cmp
xor
cmp
jne
mov
sub
or
pop
jno
flds
and
fldl
pushf
push
inc
rorl
sub
push
leave
pop
in
aam
xchg
lahf
inc
stos
xchg
lahf
push
and
push
jle
loopne
leave
push
mov
lcall
mov
out
pushf
arpl
leave
jg
mov
jnp
sbb
push
std
xlat
into
mov
mov
popa
addr16
out
pushf
jb
jbe
dec
adc
inc
pop
sbb
adc
lcall
sti
or
adc
mov
xchg
movsb
pop
enter
data16
sbb
arpl
call
or
dec
and
xor
jg
adc
mov
repz
sbb
icebp
sbb
incb
pop
ret
and
fs
shll
sbb
clc
call
or
popa
mov
add
mov
dec
ret
fwait
aas
or
call
pop
push
pushf
ret
mov
mov
and
jmp
decb
add
and
xor
aaa
push
cmpsl
dec
aad
in
loope
pop
fistl
adc
mov
adc
add
adc
jge
push
andb
loopne
pushf
adc
cmpsl
inc
dec
mov
mov
pop
sub
pop
icebp
jp
push
pop
cmpsl
gs
pushf
sbb
adc
mov
push
lcall
xor
cmpps
sbb
jnp
outsb
addl
or
in
inc
stos
pop
lods
cmp
sub
mov
int3
pop
inc
xor
lcall
or
sub
pop
test
add
fcoms
int3
xchg
inc
int3
mov
jmp
loopne
test
mov
aad
push
mov
outsl
das
pushf
bound
cmpsl
loope
stos
ficomps
push
clc
test
shll
mov
pop
enter
and
sbbb
lret
imul
cmp
into
repnz
mull
or
fwait
xchg
jp
popf
add
and
cld
std
subl
sbb
sbb
pushf
pop
push
xor
jno
int3
dec
mov
mov
push
jmp
imul
jo
loope
cmp
sub
mov
adc
add
cmp
mov
bound
arpl
jg
ss
movsb
les
daa
orl
xor
fadds
js
cmp
int
aam
es
mov
popf
popa
cmp
or
call
xor
add
jb
xchg
and
xchg
cmp
movsb
ds
inc
in
cmpsl
cmp
pop
outsl
jne
popa
scas
sbb
dec
lods
pop
mov
es
daa
and
cmp
adc
fwait
cwtl
xor
cmc
fists
out
xor
inc
mov
and
mov
into
aam
xchg
add
sbb
das
movsl
mov
push
lods
mov
inc
mov
lock
clc
bound
and
inc
cmp
pop
aas
add
aas
iret
rorb
inc
out
fucomi
cmpsl
and
jmp
out
in
push
testl
and
stos
icebp
fnsave
ds
sub
popa
lock
cltd
mov
cmp
aaa
jg
pop
lret
cmovb
xor
fisubrl
add
jmp
call
in
push
push
imul
inc
pop
jnp
cs
or
std
mov
jbe
insl
mulb
inc
push
adc
push
shl
sub
mov
out
push
dec
mov
push
mov
test
xchg
cmpsb
add
pop
rcrb
add
sarl
xchg
in
ljmp
repz
fwait
sbb
test
int3
mov
mov
popa
pop
scas
pusha
jae
jae
jnp
lds
mov
add
and
xor
dec
add
pop
test
push
cmc
and
jno
sti
inc
xchg
notb
push
dec
es
and
inc
loop
popa
jb
outsl
inc
lahf
lret
movsb
ret
xchg
pop
int3
mov
inc
stos
and
adc
loopne
in
mov
mov
outsb
outsl
outsb
sbb
aad
xor
sbb
sbb
mov
or
xorl
in
dec
and
mov
pop
jmp
mov
icebp
push
and
mov
decl
dec
push
or
mov
ret
xchg
inc
or
or
fs
fnstcw
xchg
mov
jp
xchg
outsb
orb
fsubrl
negb
mov
mov
out
fisubrl
filds
mov
shll
cmp
cmp
stos
pop
rdtsc
cli
xchg
jb
fidivrl
or
xchg
stc
pop
or
sub
mov
jg
sub
add
push
rcrl
xor
inc
cmpsb
mov
mov
push
cmp
lret
dec
or
out
aam
adc
popa
or
dec
sub
xchg
dec
andl
andb
inc
mov
ljmp
testb
pop
iret
insb
clc
inc
imul
scas
adc
aas
data16
dec
enter
xchg
fcompl
or
cmp
jl
js
test
js
sbb
cmp
movsb
xchg
fsubrl
mov
test
or
cltd
out
and
or
add
daa
push
pop
mul
jmp
loopne
addr16
lds
or
cmpsl
jnp
shrl
xor
pop
fmull
mov
pop
jbe
outsl
jge
lcall
nop
inc
testl
mov
jecxz
aas
les
pop
inc
xor
cmc
cmc
pop
jo
sti
mov
mov
std
cmp
xlat
xor
out
pop
mov
int3
dec
sahf
dec
sbb
les
and
sbb
or
call
in
xlat
outsb
push
dec
ret
sbb
fists
mov
imull
sub
in
mov
adc
aas
cmpb
std
sub
movsl
mov
mov
dec
inc
fstps
mov
shlb
xchg
adc
neg
cmc
xchg
bound
pop
mov
jns
cmc
leave
roll
pop
in
lret
and
cs
in
psrad
mov
aaa
das
aaa
mov
das
dec
or
iret
pop
rcr
fcoms
int
pusha
outsb
jnp
leave
test
imul
lea
outsb
enter
mov
add
cli
mov
fcompl
mov
push
je
fimull
mov
or
test
cld
cmp
cmp
adc
mov
dec
bound
rol
mov
xchg
xchg
shrb
roll
sbb
out
add
cwtl
shlb
lds
mov
or
les
xor
das
into
sbb
ret
push
lods
and
sub
inc
and
cs
xchg
ds
or
ret
xchg
aas
or
bound
fwait
dec
inc
and
jg
hlt
mov
mov
into
xor
les
repz
pop
jge
testb
xor
jbe
jg
test
dec
push
jp
sbbb
subb
and
or
stos
cmp
push
add
jbe
test
das
xor
nop
aam
pushf
arpl
jne
mov
mov
xor
sbb
ds
jnp
push
cmp
sbb
push
xorl
test
cli
xchg
into
jbe
sbb
or
movsl
dec
and
sbb
pop
es
dec
sbb
jne
and
xor
or
add
and
xor
lods
mov
dec
dec
or
push
icebp
mov
jg
popa
inc
aas
push
out
push
mov
scas
inc
dec
scas
xchg
sub
xchg
pop
rclb
fstl
fidivrl
sub
pushf
or
push
mov
push
inc
or
fistpll
test
mov
les
stos
push
orb
mov
ret
pop
jp
pop
mov
xchg
cs
and
ss
and
in
push
shrb
sub
xorl
push
mov
mov
mov
or
xchg
sub
push
je
imul
xchg
mov
sbb
fdivrl
xchg
test
mov
mov
push
pop
adc
mov
mov
jno
rcrl
aaa
sahf
ror
or
out
fisubl
jp
and
or
aam
inc
je
int
xchg
imul
fidivrl
mov
lds
fists
mov
scas
push
mov
cmp
mov
test
clc
and
ljmp
pop
sti
test
hlt
dec
pusha
mov
inc
cmp
fstps
sahf
mov
ss
jno
and
mov
lea
xchg
repnz
int3
outsb
imul
in
adc
cmp
xor
scas
addr16
movb
outsl
cmp
add
dec
jp
popf
mov
mov
nop
dec
rcr
mov
jb
js
jge,pn
test
gs
dec
or
cs
pop
ja
out
and
nop
push
jo
mov
mov
push
lock
rep
aam
sub
dec
cmp
rorl
cld
je
jbe
and
test
mov
loop
jl
imul
mov
jbe
inc
mov
and
cmp
orb
movsb
cmp
and
pop
inc
imul
jecxz
jge
push
mov
xor
pop
sbb
cltd
mov
mov
iret
xchg
pop
outsl
imull
and
lret
mov
or
fs
in
std
mov
aam
bound
pop
ds
mov
add
fs
push
push
dec
cwtl
fnstcw
dec
leave
imul
xor
mov
jno
pop
test
incb
mov
orb
lea
xchg
aad
enter
sbb
lods
push
arpl
mov
push
stc
rcrl
cltd
mov
rcrl
loope
dec
jge
add
and
lods
sbb
jno
mov
add
inc
pusha
cmp
lcall
gs
loope
xchg
vmwrite
imul
push
jl
popa
fwait
inc
or
push
or
sbb
outsl
mov
mov
or
xchg
and
lcall
pop
and
mov
popf
jmp
and
mov
popl
mov
lods
add
fisttpl
cmp
lea
inc
clc
icebp
sbb
mov
std
hlt
add
or
adc
dec
xchg
shll
out
or
fdivrl
add
outsl
jp
sbb
and
mov
ficoml
bound
pop
insl
out
sub
mov
cmpb
xor
mov
in
int3
lret
cmpsl
push
inc
push
add
inc
addr16
jno
adc
outsb
adc
sbb
jo
mov
cmp
and
and
movsb
dec
dec
mov
cmc
iret
call
jo
dec
jne
push
fwait
jecxz
ficomps
into
jle
mov
xor
xchg
shlb
lods
add
xor
jbe,pt
sub
xor
hlt
xor
dec
int3
mov
push
jae
iret
inc
mov
sbb
and
adc
jmp
loop
shl
test
adc
jle
jb
mov
out
loopne
and
sbb
ficompl
imul
scas
or
cs
xor
mov
shrb
scas
push
pusha
inc
xor
push
fsub
xor
scas
movsl
jae
insb
mov
test
inc
or
pop
lcall
mov
and
cmpsl
lods
std
out
sub
push
sti
xor
cld
pop
jns
adc
add
mov
lret
inc
ffree
and
lret
pop
and
xchg
shlb
jle
pop
shrl
cltd
adc
sub
mov
push
pop
push
jns
fsts
nop
pop
pusha
sbb
xor
mov
jo
clc
repnz
or
int3
mov
jecxz
and
adc
int
dec
fnstsw
cmp
stos
aad
mov
or
outsb
mov
push
push
scas
xor
scas
ds
inc
hlt
shrw
gs
sbb
xor
mov
jae
jo
jo
adcl
cmp
pop
sbbb
add
ret
pop
pusha
lret
xlat
cli
xchg
push
imul
adc
shl
push
xchg
popf
outsb
mov
repnz
loop
jmp
shl
and
xor
and
adc
pop
mov
rcrl
push
fcoms
pop
mov
cld
ret
popa
cli
ficompl
lods
cmp
movsb
ret
pop
cmp
mov
push
repz
jmp
pop
popl
cmp
aaa
lahf
inc
dec
dec
scas
jecxz
mov
scas
and
lods
cmp
shrb
inc
jl
in
lds
and
fstps
popa
xchg
je
adc
lock
and
addr16
jne
in
mov
cli
wrmsr
lcall
push
cmp
ds
outsb
adc
sbb
gs
scas
addr16
add
gs
imul
ss
fmull
push
in
fildll
iret
addr16
insb
shll
fildl
xlat
sub
fcmovbe
test
add
jmp
jnp
das
or
lcall
adc
stos
or
cmp
loope
std
xorb
mov
sub
jge
gs
test
adc
rolb
xchg
add
push
xchg
inc
repnz
ret
lret
jl
imul
repz
stc
xlat
clc
push
imul
ljmp
addr16
out
mov
dec
test
sub
js
xor
jbe
xor
ljmp
ja
sub
cmpsl
add
fs
jo
dec
add
mov
f2xm1
mov
push
xchg
push
jae
scas
cmp
push
cld
xchg
aad
icebp
out
jl
mov
lret
jbe
les
es
add
stos
push
outsl
mov
xor
cmpsb
jp
mov
xchg
mov
bound
std
aas
scas
lret
lds
inc
dec
push
or
icebp
push
ret
test
jge
mov
test
fnstcw
sub
in
aad
jmp
add
dec
or
mov
push
jne
arpl
xchg
pop
fstpt
gs
bound
mov
lcall
ja
add
loop
sbb
cmpsb
jnp
jbe
in
out
inc
pop
push
subb
lock
cmc
mov
daa
jmp
mov
sbb
test
rcll
push
cwtl
mov
hlt
push
jl
addl
sarl
dec
jl
sbbl
pusha
test
cmp
scas
lcall
xchg
cmp
jmp
push
or
out
loopne
lret
push
pop
iret
fbstp
shl
jecxz
pop
mov
insl
mov
pop
mov
sub
aas
jle
fsubrs
fsubs
cmc
inc
and
std
stc
aam
incb
mov
imul
add
or
ret
xchg
mov
adc
mov
add
fdivs
mov
or
fs
int
dec
out
test
dec
fs
pop
sub
and
test
inc
mov
mov
mov
movsl
xor
push
xor
xchg
mov
roll
popa
repz
gs
cmpsl
mov
xchg
std
jp
bound
aaa
aam
imul
xchg
out
mov
ljmp
dec
js
adc
hlt
fs
rcrb
push
int
xchg
and
loopne
jno
cld
xor
out
sbb
add
xor
cli
cwtl
or
pop
sub
cmp
xchg
imul
add
jnp
xchg
push
mov
add
jge
jae
mov
push
sarl
push
outsl
jo
les
jb
and
int
mov
leave
jg
aam
xchg
inc
popf
jo
jo
lret
adc
mov
and
pop
in
add
push
shlb
jae
xor
pop
add
insb
lcall
outsl
shr
cs
je
xor
jl
outsb
movsb
or
cmpl
testl
jae
fildl
ja
jnp
mov
sahf
std
notb
repz
inc
call
in
mov
sbb
dec
aaa
mov
mov
jmp
out
xchg
lock
mov
scas
sbb
mov
and
inc
xor
cmp
pushf
test
add
push
gs
xor
stc
ret
pop
mov
xor
lret
fiaddl
test
aad
stos
add
adc
lret
jo
push
cmp
scas
pushf
std
shll
push
in
cltd
rorl
mov
jbe
mov
pop
add
addr16
and
aas
das
jno
js
push
dec
mov
or
in
test
fistl
mov
push
lock
mov
sub
xchg
es
jle
jge
inc
xchg
dec
adc
sub
in
shll
and
inc
test
xorb
pusha
fmull
lahf
xchg
popf
jne
es
nop
les
loop
and
adcl
pop
adc
sbb
filds
rcrb
jecxz
push
cmpsb
mov
int3
add
xchg
xor
jmp
inc
mov
call
adc
mov
adc
pop
inc
ret
ficomps
jne
cmp
push
lea
enter
add
rclb
aad
sbb
stos
dec
sbb
or
and
add
dec
jl
rorl
pop
enter
xchg
mov
adc
cltd
cmpsb
fsub
out
pop
push
sub
jecxz
xchg
lahf
aad
int
xchg
jnp
in
test
sub
mov
xchg
sbb
pop
outsb
lahf
insl
icebp
dec
adc
popf
sub
or
gs
stos
pop
cwtl
push
xor
incl
sub
into
sub
mov
inc
iret
jae
mov
je
mov
inc
or
testl
push
aad
dec
lea
xchg
sub
cmc
dec
repnz
stos
lret
test
add
loopne
leave
scas
not
fs
pmaxub
cmp
hlt
movsl
loop
xchg
adc
or
xchg
mov
jp
mov
adc
sub
xlat
sbb
push
dec
sti
cmp
lock
pop
repnz
int3
cmp
push
adc
lea
outsl
sbb
cmpsb
fldt
jnp
or
pop
std
in
mov
and
out
mov
push
repnz
cmp
lods
sub
and
push
inc
xor
aad
insb
ljmp
jnp
rcll
dec
push
in
dec
jp
sbb
adc
lret
adc
enter
pop
sub
nop
jp
pop
sbb
jmp
cltd
push
sub
xchg
gs
nop
fldt
xchg
cwtl
xchg
dec
es
repnz
bound
jno
sbb
xchg
cltd
push
pushf
cli
fisttpl
lahf
ficompl
cli
push
and
fs
push
mov
sbb
xchg
pusha
movsb
pop
scas
aas
fcomi
out
out
gs
adc
in
repz
insb
addr16
in
popf
roll
xchg
test
cmp
cvtdq2ps
dec
or
jmp
lds
data16
xor
repz
test
xor
and
and
lock
stos
xor
sub
push
scas
mov
in
push
ja
and
testb
subl
sbb
adcb
in
in
push
lods
add
dec
sub
aad
xchg
dec
bound
shll
mov
cmp
popf
arpl
mov
add
lock
xchg
jae
sbb
nop
insb
jb
mov
inc
scas
aad
popa
mov
mov
or
or
leave
pop
cld
daa
push
leave
mov
movsb
mov
test
add
mov
test
xor
movsl
pop
mov
insb
mov
cmp
pop
jle
loope
scas
or
outsl
call
adc
mov
bound
sarl
scas
cld
xchg
es
aam
stos
mov
shlb
into
jg
mov
iret
fistpl
cltd
test
mull
pop
dec
movsl
ret
mov
xlat
test
sbbl
push
pop
iret
mov
in
jmp
roll
lcall
inc
ret
xchg
ss
mov
or
ja
xor
loop
inc
shr
push
dec
mov
js
mov
test
out
add
sbb
mov
retw
fstps
fadd
mov
pop
lods
mov
fisttpl
adc
icebp
loop
dec
ds
sbb
dec
and
dec
icebp
stos
lahf
mov
pop
sbb
mov
push
adc
xor
push
and
insb
pop
push
pop
nop
insl
ljmp
mov
addl
addl
pop
pminub
andb
lods
cmp
jb
clc
les
xadd
mov
sbb
addr16
xchg
lea
mov
sbb
xchg
and
or
test
inc
fdiv
sub
subl
pop
adc
icebp
dec
sbb
iret
pop
int3
mov
adc
shrb
sub
fwait
mov
dec
mov
mov
rorb
insl
notl
xchg
xlat
in
dec
scas
loop
inc
mov
in
cmp
mov
mov
inc
jnp
jo,pn
add
sub
sub
dec
and
dec
out
jp
push
movsb
and
das
std
inc
pushl
stos
cmp
lea
cmp
into
cmc
pop
cwtl
mov
xchg
xchg
cs
scas
jmp
test
gs
fcomip
data16
lcall
cmp
xchg
dec
pop
mov
pop
sub
ja
adc
jne
test
xorb
lret
cwtl
pop
insb
push
idiv
lods
jns
mov
rclb
push
fisubrs
ret
in
inc
mov
push
clc
cmp
or
cmc
sbb
out
or
xchg
sbb
dec
pop
sub
push
iret
add
in
fists
and
jg
mov
and
mov
or
push
ja
jg
stos
or
jbe
adc
icebp
sbb
aaa
stc
or
jle
or
mull
dec
pushf
pop
addr16
ret
cmp
mov
add
and
jns
aam
add
or
pop
pop
daa
aaa
daa
pop
push
fstl
daa
jecxz
dec
pusha
sub
leave
ficoml
mov
fstpt
outsl
popf
xor
xor
aad
stos
ftst
sbb
adc
sti
push
push
mov
fsubrl
fidivrs
mov
or
sti
inc
cmp
sub
jnp
pop
pop
and
fcoms
shlb
sub
lcallw
mov
sub
dec
popa
out
test
dec
xor
jle
push
cmc
cli
mov
movsb
les
mov
orl
pushf
lock
pop
inc
imul
or
inc
imul
mov
fdiv
cmp
inc
inc
inc
cwtl
in
sti
inc
je
sahf
mov
cmp
shll
movsb
mov
ljmp
inc
sub
popa
repz
sarb
cmpsb
xor
jp
sub
xor
push
int
dec
mov
fcmovne
lods
adc
shl
jb
cmp
sub
jo
xor
stos
iret
xor
cmpsb
cmp
int
stc
dec
xchg
mov
xor
jle
inc
out
and
ds
pop
mov
int
decb
pop
sbb
ss
push
pop
xlat
adc
xchg
cmpsb
xchg
mov
sub
dec
xchg
xor
popl
outsl
orb
rcrl
pop
les
cltd
mov
das
outsb
fwait
int
mov
int
cs
imul
rorl
pop
jae,pt
pop
enter
and
arpl
or
enter
and
into
sbb
add
rclb
xchg
sub
ja
add
or
sbbl
test
cmc
pop
outsl
inc
outsl
cmp
push
into
das
icebp
ljmp
mov
jno
mov
pop
nop
mov
test
sarb
and
ficompl
test
scas
lods
inc
and
xor
inc
adc
out
outsb
inc
jns
mov
dec
xchg
mov
insl
repz
mov
dec
pusha
pop
cwtl
cmp
inc
sub
xchg
mov
mov
ds
mov
jp
das
jbe
dec
dec
add
add
adc
adc
cmp
leave
mov
lock
mov
lahf
cli
push
testb
aas
scas
aas
cmpsb
xchg
mov
xchg
sti
mov
decb
dec
stc
shl
lock
arpl
xchg
pop
sbb
pop
inc
cmpsl
aam
adc
test
inc
jnp
mov
adc
adc
into
fdivrp
cmpsb
mov
lea
insl
xor
adc
push
xor
dec
jp
lcall
int3
imul
add
jl
jo
ret
cmp
in
iret
mov
clc
leave
int3
insb
inc
lods
jg
inc
imul
mov
pop
mov
jp
mov
filds
stos
jo
fdivs
fildll
mov
mov
call
and
mov
cmp
in
dec
stos
aad
je
lods
fchs
fwait
push
ja
outsb
adc
test
les
daa
stos
gs
sub
dec
fstps
sahf
ret
ficompl
and
es
cmp
ljmp
enter
fcmovbe
xchg
adc
popa
mov
or
add
and
loope
push
lret
flds
shlb
subl
ret
jmp
mov
xlat
fbstp
aaa
jno
cld
es
insb
adc
fs
daa
jnp
sbb
cmp
add
loope
arpl
test
popa
pop
dec
negb
push
out
push
pop
iret
popa
enter
cmp
dec
xor
mov
push
jne
xchg
sub
outsl
xor
dec
test
loopne
jnp
or
push
cmpsl
sbb
repnz
mov
xchg
fcmovne
push
cmc
xchg
cwtl
push
jmp
lock
pop
punpckhbw
in
lods
icebp
fstpl
jno
xor
mov
mov
bound
movsb
icebp
xchg
pop
cltd
aaa
inc
mov
daa
sbb
and
add
xchg
sbb
cld
jl
addr16
push
push
sub
lea
loope
jb
mov
pop
ljmp
inc
jb
xor
push
push
fistl
dec
outsb
outsb
cmc
es
mov
shll
add
js
leave
mov
inc
lcall
fsubrp
scas
imul
loop
imul
mov
push
lret
incb
loope
imul
inc
data16
xor
dec
je
std
push
cltd
andnps
int
out
fisttpll
push
add
and
xchg
jge
cmc
mov
cmpb
inc
pop
pop
mov
adc
je
sub
gs
movsl
les
ret
ja
inc
dec
jo
adc
into
cs
fwait
test
enter
cwtl
js
sbb
jle
mov
inc
scas
scas
inc
cmpsl
mov
pop
fidivl
and
xor
in
clc
ret
xchg
mov
icebp
xor
fucom
mov
mov
or
addr16
notl
ror
xor
popa
lods
mov
es
mov
mov
not
push
cltd
mov
jbe
push
insb
cltd
jecxz
push
outsl
arpl
les
fldt
fdivs
xor
aad
or
mov
jecxz
sbb
inc
js
dec
lods
xor
xchg
aad
leave
push
idiv
xchg
mov
mov
sarl
out
bound
stc
clc
ror
or
push
in
fwait
daa
daa
add
pusha
pop
cmpsl
cmp
sub
clc
push
or
popf
les
lret
je
adc
push
jnp
mov
clc
jne
pop
or
jbe
add
lret
subb
ret
ss
dec
out
jne
mov
fstpl
cltd
and
aam
roll
pushf
xor
inc
shl
mov
mov
xchg
andl
enter
jne
dec
fnstsw
and
mov
hlt
jbe
jmp
lahf
daa
outsb
xor
arpl
add
push
add
or
dec
dec
sub
xchg
jno
mov
adc
pop
mov
loop
mov
loopne
sahf
cmp
in
or
popa
push
lock
pop
mov
int3
sub
mov
shrl
fs
pushf
sub
outsb
pusha
mov
mov
ja
outsl
inc
adc
dec
stc
or
lock
xchg
out
xor
loop
in
btc
fdivs
push
mov
dec
pop
mov
pop
pusha
sub
push
jno
inc
or
sbbl
xor
sbb
jb
pop
jl
pop
scas
inc
lods
push
ja
mov
inc
mov
rcll
xor
outsl
push
add
out
lea
das
js
leave
inc
out
or
cmp
out
sahf
mov
cmpsb
or
adc
enter
pop
test
push
std
cmpsb
jg
push
lock
push
push
jo
cmp
xlat
pop
lock
sbb
xor
lods
in
or
insl
js
push
pop
push
sub
and
mov
jp
jnp
fwait
pusha
inc
cli
lods
in
imul
jecxz
inc
ret
out
xor
jne
repz
in
hlt
rcrb
pusha
add
adc
cwtl
aaa
mov
fmul
mov
jno
mov
mov
inc
inc
adc
push
dec
mov
and
jp
stos
imul
shrl
aaa
adcl
in
dec
shl
cltd
cmp
pusha
inc
mov
xchg
or
test
dec
xchg
addb
clc
cmpsb
sub
subps
jnp
imul
sub
repnz
and
int3
stc
mov
mov
xor
gs
mov
mov
push
loope
jl
adc
xor
adc
jecxz
repnz
mov
or
sti
ja
mov
inc
xchg
xlat
inc
les
aas
mov
into
ret
insb
in
mov
push
shll
iret
lret
mov
out
xchg
dec
loope
jae
jge
sbb
nop
repnz
aam
mov
jns
sbb
js
cmpsl
test
add
mov
sbbl
mov
scas
xorl
pop
or
inc
push
sub
das
mov
scas
push
xlat
jns
xor
shll
sbbb
inc
fildll
push
rcrb
popa
sbb
inc
jae
in
mov
jnp
push
hlt
cltd
arpl
pushf
xchg
repnz
stc
sub
jno
mov
outsl
gs
jbe
cwtl
xor
std
mov
cmp
cmpsb
mov
cmp
sub
call
push
xchg
xor
mov
push
movsb
inc
jp
mov
stos
jl
lock
movb
mov
cli
or
scas
inc
rolb
les
push
xor
pop
xchg
push
cs
dec
inc
sbb
bound
pushf
enter
mov
rorb
gs
or
das
test
mov
mov
gs
mov
mov
mov
push
cmpsl
pop
lret
icebp
or
inc
mov
mov
addb
ja
adc
into
cmp
mov
dec
pusha
xor
in
negl
pop
mov
xor
stos
lcall
push
push
mov
and
push
pop
cmp
stos
sub
stos
pop
lock
dec
pop
in
mov
adc
adc
inc
cmp
jmp
fsubrl
data16
repnz
dec
dec
or
nop
dec
imul
je
xchg
jge
sar
incb
out
xor
popf
imul
int3
cmp
inc
mov
mov
pop
ss
xor
add
out
push
adcb
mov
pop
pop
sbb
jno
inc
and
mov
test
in
push
cmc
dec
adc
in
ret
jns
mov
mov
sarl
out
push
jmp
sub
aam
dec
add
pop
jp
cld
sub
cs
jle
or
inc
or
jmp
and
rcrb
sti
pop
sar
pusha
sub
sub
cld
cwtl
repnz
xchg
lahf
movsl
push
pop
pop
in
stos
out
mov
inc
and
xchg
lahf
and
mov
negb
sbb
push
sbb
jl
fwait
pusha
xor
mov
out
lret
jnp
out
mov
dec
dec
leave
aad
adc
push
adc
mov
and
or
mov
movsl
sub
int3
jge
scas
cmp
lcall
test
cmp
or
mov
repnz
arpl
inc
or
dec
lods
les
pop
mov
leave
popf
mov
adc
xor
pop
outsb
add
adc
aam
popf
cwtl
mov
sti
inc
adc
ficoml
sub
repnz
in
int3
hlt
aas
inc
push
aad
notl
xor
iret
mov
ret
push
mov
xchg
ret
sbb
fidivl
scas
fmuls
daa
sbb
adc
int
xchg
and
push
xchg
push
and
stc
out
lea
add
push
dec
pop
pusha
mov
inc
fidivrl
mov
pop
cmp
xor
mov
sub
in
aaa
addr16
adc
enter
dec
and
push
movsl
mov
mov
aad
stos
ret
icebp
or
push
mov
test
mov
mov
mov
jmp
mov
push
aad
adc
pop
push
pop
xchg
mov
jge
outsb
fists
cmpsl
sarl
adc
jecxz
daa
shrl
pop
mov
or
adc
mov
inc
cmp
ljmp
stos
ficoms
mov
dec
sub
aam
cmpsl
xor
mov
inc
fs
mov
insb
jmp
mov
cmp
adc
lock
pop
cmp
in
xor
adc
out
cmp
adc
fcompl
fcmovb
push
dec
out
dec
sbb
mov
jne
std
cli
jb
push
enter
push
push
sahf
scas
test
ja
out
push
mov
push
test
adc
scas
sub
sahf
inc
mov
pop
dec
loope
iret
jnp
pop
mov
mov
xchg
jbe
and
loope
lret
xchg
mov
dec
push
or
mov
cwtl
xchg
lock
movsb
xor
repnz
rcr
mov
out
cmpsl
sub
sub
push
push
in
cmpsl
add
mov
call
sub
cmpl
int3
xlat
and
inc
cmp
pusha
jo
pop
fsub
or
pop
inc
rcl
es
mov
push
fs
cmp
imul
iret
dec
add
inc
inc
dec
mov
stos
xchg
bound
xchg
imul
nop
leave
mov
and
or
repnz
pop
scas
pop
cmpsb
sub
ss
bound
daa
lock
mov
lea
lods
push
rcrl
mov
jmp
xor
mov
mov
repz
jns
loopne
lret
push
out
and
cltd
rolb
repnz
push
jecxz
mov
je,pt
and
mov
adc
data16
add
push
jl
dec
or
loop
sub
push
daa
lret
inc
cs
xor
pop
bnd
dec
ss
mov
popa
gs
je
jno
push
out
daa
lods
fistpl
test
add
adc
ljmp
pop
mov
test
inc
lret
or
clc
jp
xor
outsl
call
xor
movsl
xor
push
in
fucom
pusha
pop
sub
ffreep
outsb
jl
inc
sbb
fsubrl
test
fmuls
push
xchg
fcoml
mov
stc
aas
roll
lods
pusha
push
jns
sub
mov
scas
stos
clc
cmc
adc
inc
push
sbb
lea
dec
aaa
sarb
out
call
fnstsw
push
adc
and
call
shll
push
mov
sarb
mov
cltd
shrd
xchg
xchg
test
and
lods
jbe
mov
push
into
mov
fld
dec
jne
adcl
in
sbb
pop
fwait
repz
cmp
int3
popa
or
fldl
movq
aas
xor
xor
inc
sarb
mov
daa
lds
jge
aaa
dec
inc
mov
lock
out
sbb
mov
or
xor
dec
pop
cmpsb
jo
aas
mov
cmp
lock
loopne
jne
push
or
mov
xchg
or
dec
in
mov
xchg
inc
mov
ljmp
cmp
ljmp
test
dec
mov
in
stos
lods
jnp
lahf
leave
jo
repz
dec
into
cmp
xor
aaa
or
lods
dec
clc
xor
or
push
sbb
ja
sbb
push
stc
cmp
and
ret
push
xor
iret
std
movsl
push
adc
push
pop
mov
dec
clc
jmp
mov
dec
data16
sbb
xlat
mov
push
cmp
sbb
sbb
pushf
xchg
dec
in
sub
xchg
xor
or
insl
cs
sbb
lret
aam
dec
push
inc
fsts
xor
and
aam
push
jb
loope
fisubrs
pusha
mov
incl
and
aad
jle
outsl
dec
and
dec
cmp
xchg
pusha
imulb
lds
pop
push
or
pop
fldln2
sbb
sub
outsb
pop
lret
dec
mov
sarl
dec
sub
es
dec
xor
cmc
or
bound
lcall
in
pusha
dec
or
mov
cmpsb
or
dec
fwait
push
fs
pop
pop
xor
mov
es
pop
mov
nop
stos
or
xor
xchg
push
aad
jo
adcb
add
push
cmp
mov
xor
aam
mov
mov
int3
mov
fmuls
das
sub
and
sar
cmp
cmp
xor
xlat
mov
jl
push
cs
fcomip
sti
mov
icebp
xchg
cld
mov
and
leave
pop
sub
and
sub
add
push
shll
inc
loope
or
mov
push
inc
fstl
inc
sarl
imul
lret
imul
movl
mov
jmp
inc
shl
mov
inc
hlt
sbb
cltd
and
fsubs
cmp
mov
bound
cli
push
pop
and
fstpt
or
outsl
bound
xchg
mov
jb
adc
or
mov
test
add
mov
loope
fdivrl
in
fadds
inc
mov
jno
imul
js
mov
xlat
nop
pop
push
int
mov
das
test
mov
jnp
xor
mov
mov
dec
leave
mov
lods
or
pop
jno
ret
cs
fwait
jae
jnp
vmwrite
dec
in
aam
imul
xchg
cli
add
cmpsb
jp
sahf
sbb
add
nop
test
pop
mov
aas
dec
sbb
out
in
mov
jecxz
adc
mov
cli
dec
xor
ss
jl
jbe
js
push
mov
cs
cmp
movsb
inc
loopne
movsb
call
inc
das
fisttpll
pop
push
je
jle
std
inc
fimuls
ja
inc
sub
out
mov
sub
add
inc
sub
insl
jl
movsl
adc
sub
inc
push
out
pop
rorb
jb
push
ljmp
mov
dec
out
push
mov
jp
repz
arpl
mov
xchg
jecxz
jo
mov
orl
test
sbb
push
nop
jmp
ljmp
xor
cmp
outsl
pop
out
lret
mov
in
pop
stos
aam
cmc
sbb
movsb
loopne
jle
push
aam
or
sbb
mov
lock
sub
push
insl
loop
sahf
fidivs
dec
sahf
pop
adc
mov
jg
jns
sahf
cli
xchg
mov
out
xchg
mov
inc
lods
out
cld
lods
out
jo
ljmp
adc
jns
fldcw
pop
out
mov
lret
mov
lret
cmp
xor
dec
jae
xor
push
pusha
leave
mov
outsl
push
enter
jp
jno
xchg
lret
loope
stc
push
push
lcall
icebp
rcrl
pop
fdivrs
or
adc
movd
repz
scas
pushf
push
push
cmp
mov
mov
outsl
mov
inc
std
or
mov
or
sti
add
cmp
subb
or
add
cmp
in
mov
out
fcompl
jnp
paddq
leave
in
pop
jo
dec
jmp
js
repz
add
push
addb
icebp
rcrl
and
dec
int3
or
sarb
lea
cmp
in
call
popf
push
push
shrl
bound
mov
stos
dec
pop
add
icebp
gs
das
xor
mov
adc
xor
mulps
mov
shrb
jbe
xlat
fs
push
repz
ret
nop
xrelease
jmp
xchg
mov
jb
cwtl
inc
sbbb
fucomp
push
xchg
add
loopne
fsts
fsts
insl
cmp
lods
mov
lods
enter
dec
push
jae
aas
outsl
inc
adc
fisubs
adc
sub
push
push
jae
xor
sub
mov
in
rolb
or
test
sub
subl
pop
lock
cmp
scas
cmc
test
sub
mov
cmp
jno
ret
jne
ljmp
sbb
inc
pop
mov
addr16
jl
test
iret
das
jp
add
in
mov
mov
cltd
ret
mov
repz
jg
arpl
movsl
mov
xchg
mov
fdivrl
pop
testl
mov
aad
scas
outsb
in
inc
mulb
pushf
mov
loop
lods
adcb
cli
gs
fs
js
pop
lahf
jb
pop
arpl
pop
mov
adc
push
mov
mov
ss
pop
popa
jmp
popf
sub
xchg
or
mov
or
cmp
jnp
dec
mov
lret
hlt
mov
mov
cwtl
sbb
ds
testb
pusha
stos
add
call
inc
imul
xchg
adc
shlb
sub
or
inc
cmp
outsb
push
jae
psadbw
ret
mov
sbb
push
test
mov
ss
scas
movsw
std
sbb
scas
mov
das
mov
mov
int3
imul
jbe
mov
movsb
pop
dec
add
decl
mov
cmpsl
cs
inc
mov
cmp
rcr
pushl
test
hlt
iret
inc
cmp
jge
or
sbb
push
gs
scas
clc
or
stos
push
or
cmp
mov
movsb
scas
scas
inc
negb
pop
sbb
movsl
xlat
int
jb
mov
in
out
ficomps
outsb
xchg
adc
stos
pop
das
inc
popf
pop
aad
sbb
jg
lret
movsb
movsb
jmp
aad
shr
xchg
mov
mov
testb
adcl
xchg
push
icebp
sub
insl
incb
xlat
jge
shll
pop
ds
es
pop
or
xchg
sar
jb
pop
pop
xor
lcall
mov
sbb
jno
push
xor
iret
sub
xor
sbb
imul
adc
jbe
jecxz
incl
mov
mov
into
and
ljmp
loope
push
and
add
lods
adc
shll
in
mov
or
dec
int3
insb
or
addr16
movsb
dec
movsb
mov
test
fwait
movsl
mov
popf
in
ds
sbb
cld
mov
cld
xchg
out
mov
lret
rcr
movsb
divl
jl
stos
ss
enter
dec
cmpb
out
xor
fndisi(8087
mov
xor
mov
ss
xchg
fisubs
ret
out
pushfw
cs
mov
dec
fimull
or
inc
stos
imul
int
cld
and
and
mov
mov
or
mov
adc
lcall
mov
mov
mov
jbe,pn
hlt
dec
mov
lret
je
int
sbb
or
imul
xchg
test
es
inc
inc
push
dec
jle
sbb
shrb
mov
enter
xchg
clc
sti
out
cmp
addb
roll
or
sub
and
lea
enter
cmc
int3
movb
push
pop
or
xor
jae
jg
push
decl
or
inc
jb
sub
bound
sbb
sahf
sub
mov
xchg
fwait
sub
add
test
push
xchg
leave
repz
and
in
fdivl
dec
xchg
and
insl
imul
xor
stos
or
mov
sbb
dec
lea
mov
xor
gs
and
mov
das
pop
adc
xorl
imul
xchg
lods
xor
imul
push
filds
cld
dec
or
inc
popf
jmp
push
fiaddl
xchg
stos
lahf
add
fwait
adc
jo
add
fucom
xor
or
add
xchg
fistpl
mov
mov
push
push
cmpsb
inc
call
xchg
pop
js
sub
pop
or
shlb
pushl
notl
push
je
test
ss
rorl
inc
jp
jo
ret
push
movsl
push
fisttpl
dec
lods
mov
add
test
mov
push
adc
fs
call
sbbl
adc
mov
jl
popf
mov
bt
and
inc
mov
ljmp
rcl
ficoms
push
and
adc
mov
pop
les
out
mov
mov
cmc
decb
movsb
mov
inc
dec
mov
inc
test
xchg
mov
dec
and
cli
xor
bswap
push
test
sub
nop
cmpsl
rcrl
mov
pop
or
and
jne
insl
lock
mov
daa
or
repnz
xor
shlb
inc
jecxz
imul
test
sub
xor
sbbb
xchg
cmp
lcall
aas
in
call
cwtl
or
cmp
sarb
cld
sbb
push
js
out
sub
jmp
test
movsb
sbb
pushf
sbb
cmpsl
push
into
stc
add
lds
lahf
rolb
out
jne
cli
dec
jno
out
aas
dec
shlb
and
aas
mov
jnp
sbb
sbb
mov
xchg
leave
insl
ret
or
xchg
adc
in
out
fsub
jb
lahf
imul
and
repnz
dec
mov
push
movsb
cltd
aaa
jne
movsl
mov
jae
je
js
xchg
gs
imul
jno
data16
mov
lock
jmp
insl
daa
andl
pusha
ja
or
iret
mov
adc
lods
sbb
xor
cli
xchg
fistl
jge
sub
or
jnp
xor
mull
jmp
adc
cltd
cmp
jp
rcl
push
lods
and
mov
rclb
adc
sahf
arpl
dec
imul
cwtl
int
and
xor
push
pop
pop
inc
sub
add
sbb
outsl
jbe
and
add
pop
and
loopne
mov
xor
sbb
inc
ret
scas
in
orl
mov
xchg
daa
mov
xor
inc
arpl
and
inc
test
mov
out
out
popa
out
mov
data16
enter
scas
imul
fucomp
adc
gs
jle
out
or
push
mov
mov
test
shrl
adc
lret
popf
xlat
daa
rcrb
inc
decl
jg
mov
mov
int
mov
int3
andl
xorl
fdivr
std
fisubrl
test
pushf
fs
or
lds
inc
inc
fimull
scas
pop
xchg
adc
add
outsb
enter
add
or
sub
cmp
cs
lock
stc
jg
cmp
stc
aam
pop
sbb
sub
and
mov
cmp
mov
xchg
jnp
pcmpeqb
add
adc
pop
rcrl
xor
or
jmp
shlb
mov
and
jae
ficomps
pop
cs
ss
xorb
rorb
mov
aaa
nop
fldl
add
loop
push
adc
or
mov
in
push
movsb
loop
xchg
push
gs
lock
test
sbb
addb
jb
mov
push
mov
fldcw
popf
repz
pop
js
leave
jl
orb
add
pop
fiadds
enter
mov
jl
mov
add
pushf
mov
jl
sbb
push
xchg
xor
movsl
mov
insb
aad
cmp
mov
dec
jg
enter
dec
shll
jb
into
dec
dec
add
mov
jmp
arpl
fldenv
das
cld
jae
inc
adc
add
movsb
popa
jle
dec
cs
mov
xchg
inc
dec
daa
out
and
cmp
mov
xchg
push
dec
pop
dec
mov
push
jnp
jae
pushf
hlt
cmpb
sub
sarb
addr16
dec
sbb
and
fsub
icebp
aam
into
das
movsl
mov
cli
ljmp
enter
rorb
dec
mov
cmp
scas
or
or
cmp
mov
mov
cmp
out
xchg
stc
addl
hlt
or
add
lret
dec
or
mov
ja
pop
repz
pop
test
mov
xchg
imul
dec
nop
test
repnz
jle
jnp
loope
sub
in
dec
sahf
pushf
xor
in
lea
xor
xchg
jae
loope
ja
in
ljmp
adc
scas
mov
icebp
push
xor
push
jp
jg
mov
push
add
jecxz
mov
push
cmpsl
jecxz
ljmp
xlat
mov
sti
sub
fiaddl
in
call
sub
ja
test
sub
jecxz
mov
call
xchg
js
and
or
leave
movsl
stos
movsb
cmp
test
mov
sub
inc
in
mov
inc
pusha
loopne
xchg
int3
out
xchg
outsl
push
jle
inc
fistpl
iret
clc
sahf
dec
mov
test
fs
sub
mov
lahf
fistps
cmpsl
pop
loopne
xlat
mov
insl
fimuls
aas
mov
cmp
iret
cmp
mov
inc
test
std
cli
scas
out
adc
pop
pop
pop
fs
fdivrs
test
sti
inc
sti
cmpsb
lds
or
jb
xchg
mov
cltd
jmp
int
sbb
in
ds
mov
jge
cld
movsb
push
adc
aaa
add
mov
mov
test
inc
ja
addb
sub
xor
insl
les
int
sbb
test
jbe
inc
or
sub
pop
int
sub
add
in
lcall
sub
xchg
push
jnp
xchg
push
adc
gs
movsb
lods
xor
jae
aam
test
sti
dec
push
or
mov
int
psubusb
ja
jecxz
insb
fcoms
or
jne
xchg
stc
out
push
lret
in
and
sbb
dec
push
leave
je
ret
movsb
sbb
mov
jno
fcoms
lea
stos
cmp
mov
sbb
pop
and
inc
push
xor
xor
and
cmp
pop
inc
test
lahf
xchg
dec
push
imul
repnz
loop
xlat
and
ds
sub
aas
sbb
scas
mov
cmp
in
cli
insb
push
sti
add
xor
pop
stos
sbb
out
and
sbb
adc
pusha
sbb
test
xchg
dec
sub
jb
push
js
push
lcall
push
mov
cltd
dec
loopne
pusha
mov
jnp
xchg
mov
cmp
sbb
jle
mov
int3
push
addr16
add
dec
std
inc
inc
push
push
mov
lock
andl
mov
bound
pmulhw
out
cmpsb
xor
fs
lea
rorl
stos
mov
inc
sub
cmp
inc
flds
mov
insl
push
cmp
loope
inc
push
mov
js
lds
fidivl
xchg
or
sbb
ficomps
xchg
outsl
mov
imul
pop
ljmp
mov
mov
mov
push
jbe
aam
pop
mov
mov
xchg
pop
mov
loopne
out
call
clc
adc
adc
fchs
and
adc
imul
dec
loope
xchg
lcall
call
inc
ret
adc
repnz
lds
add
mov
dec
fistps
mov
fistps
stc
xor
or
mov
les
stos
pop
dec
jnp
test
repz
mov
and
hlt
fsubr
cld
xor
mov
iret
ret
fldt
add
and
and
push
js
and
inc
sbbb
arpl
daa
shlb
out
cmp
cmp
sahf
insl
shlb
fwait
cmp
test
test
cmp
push
outsb
mov
scas
push
repz
ret
fisttpll
mov
daa
shll
add
inc
xchg
sahf
inc
sbb
xchg
popf
fcoms
dec
cmp
and
sub
dec
ja
cltd
push
std
sub
call
fldt
sub
jbe
enter
xchg
sahf
jae
push
int
lret
inc
or
es
aad
mov
add
mov
fstl
loope
inc
sub
stc
movsb
or
dec
dec
mov
add
ja
out
cmpb
inc
outsl
rcl
out
xchg
fists
lea
jmp
les
and
pop
jmp
in
decl
dec
xor
mov
pop
mov
nop
icebp
adc
sub
adc
rorl
inc
xchg
mov
or
inc
adcb
shll
mov
xchg
push
jmp
pop
pop
xchg
daa
jne
sub
jle
add
clc
cmp
iret
dec
ljmp
imul
cmp
cld
cld
pushl
mov
add
js
cmp
js
and
or
mov
fstp
stos
in
and
jae
xchg
push
fwait
addps
fs
lret
cmp
push
scas
jmp
dec
adc
push
xchg
jne
inc
idivb
pop
and
je
mov
cmp
pop
mov
pop
insl
je
pop
iret
and
inc
xchg
pop
lods
sub
fs
cld
mov
push
leave
or
sbb
stos
pop
mov
mov
inc
xchg
rclb
mov
mov
sub
scas
popf
cmpsl
insb
fldt
push
ja
xorb
mov
adc
push
xchg
push
jno
xor
push
iret
pop
and
jnp
in
leave
fisubs
push
push
mov
cli
mov
aam
shr
sti
nop
adc
and
aaa
cltd
dec
cmp
not
mov
lea
iret
dec
repz
cld
shll
loopne
pop
sbb
stos
dec
sbb
les
sbb
mov
int
push
jbe
inc
dec
test
xchg
out
cmp
test
fsubrs
les
shlb
pop
mov
sub
mov
mov
xlat
pop
fdivrl
sub
jno
in
call
lds
sub
test
push
orb
mov
dec
sub
and
repnz
pop
gs
ficoms
jbe
cmp
hlt
repz
mov
pop
jmp
mov
jge
add
outsb
cmpsb
mov
adc
in
pop
adc
mov
lods
fwait
dec
push
push
lds
pop
xlat
jns
pop
jle
sub
popf
adc
inc
mov
sub
mov
outsl
sbb
sub
inc
shrb
jno
push
in
scas
or
aas
outsb
cwtl
rorl
stos
lods
mov
mov
push
icebp
negl
mov
das
sti
filds
fwait
in
rcrl
pop
lcall
jne
lret
cmpb
xchg
mov
xchg
dec
and
insb
or
cmp
rorl
stc
push
aad
shlb
test
push
ret
sub
jecxz
cmp
mov
cmpsb
jno
movsl
lock
mov
rcrb
in
into
mov
sbb
and
cwtl
sbbl
push
ljmp
pop
inc
adc
icebp
repnz
and
pusha
cld
icebp
fldt
xchg
cmpsb
xchg
test
out
adc
sarb
sub
ficompl
mov
and
pop
popa
std
sbb
push
lcall
jmp
cltd
out
and
imul
inc
add
cmpsb
add
pop
mov
ss
mov
jns
rolb
jnp
sub
fisttps
inc
sub
jl
scas
push
out
sub
inc
dec
inc
pop
mov
sbb
fisubrl
cmp
cmp
mov
or
jmp
pop
nop
push
scas
loope
jae
inc
dec
dec
inc
sahf
push
iret
push
ret
push
ret
push
or
or
bound
fstps
rorb
insl
fwait
or
es
out
fdiv
xchg
cmp
mov
pushw
mov
mov
mov
sbb
daa
xchg
add
stos
outsl
jl
xchg
je
es
je
mov
mov
rolb
inc
shlb
or
loopne
sub
imul
pop
mov
hlt
jl
jg
jecxz
jbe
adc
fisubrs
dec
fisubl
jle
enter
push
mov
ja
push
jo
je
das
mov
call
test
popa
dec
fdivrl
push
mov
jg
dec
adc
in
push
lods
shr
add
out
int3
test
pop
mov
mov
out
dec
and
xor
adc
int3
mov
push
ret
add
je
mov
orl
movsl
shll
and
les
pusha
jae
lret
fucomp
jbe
pusha
push
cmc
out
daa
int
sbb
jne
push
jle
clc
lret
lahf
or
loop
or
push
and
mov
cwtl
inc
push
leave
add
inc
incb
pop
aaa
pusha
outsl
lods
das
sbb
movsl
lods
or
ret
cwtl
fdivrp
xchg
mov
dec
inc
arpl
cmp
lods
in
xchg
ss
cwtl
nop
add
mov
mov
arpl
xchg
xchg
out
dec
repnz
into
loopne
int
out
mov
mov
jmp
jo
dec
sbb
ret
js
xchg
jnp
mov
call
iret
sbb
mov
cmpsl
in
jmp
lock
inc
outsl
cld
xchg
imul
fcomps
out
pop
out
pushf
pop
push
mov
xchg
sbb
ja
fwait
inc
addr16
lds
js
pusha
lret
add
adc
aaa
leave
imul
sub
insb
test
insl
arpl
cmp
dec
add
loope
cli
ds
ud2
lahf
pop
inc
test
ds
dec
rclb
mov
into
mov
sbb
jmp
stos
clc
out
jecxz
add
xchg
fdivr
and
pusha
sbb
and
and
cmpsl
nop
daa
sti
in
stc
mov
mov
mov
fs
sub
or
mov
jmp
pop
jb
mov
and
mov
jb
xchg
lods
outsb
mov
out
cs
cmp
dec
push
push
in
lods
mov
insl
lds
lahf
pop
iret
push
ret
xor
clc
jb
xchg
roll
je
mov
outsl
and
cs
movsb
inc
mov
xlat
mov
addb
cltd
inc
add
hlt
cmp
xor
dec
mov
push
jb
bnd
aam
inc
pop
push
inc
aas
outsl
adcl
sbb
mov
fs
mov
shll
or
imul
xor
imul
push
cli
rcll
mov
fisttpll
push
fiaddl
faddl
loope
mov
sbbb
pop
fmuls
insl
mov
pop
jg
arpl
add
pop
dec
cltd
or
cmp
and
pop
sbb
adc
xchg
ror
lods
lea
ss
sub
push
mov
inc
sbb
mov
gs
mov
jge
daa
stos
stc
imul
pop
push
mov
inc
inc
inc
push
fstl
sbb
pop
pop
sbb
leave
mov
xlat
in
pop
lcall
das
jmp
jge
xchg
shlb
test
pop
jb
or
or
jl
test
lds
leave
push
sub
jl
xor
push
in
ret
xchg
adc
pusha
stc
push
mov
repnz
movsb
scas
fs
xor
xchg
push
push
loop
mov
roll
jb
mov
push
fistl
and
add
leave
xchg
mov
popf
out
out
mov
outsl
lods
mov
mov
xor
ret
add
jle
out
nop
jle
js
lret
and
mov
mov
rcl
add
loopne
push
int3
sahf
jl
aam
cmpl
rclb
jae
xchg
mov
imul
insl
lcall
inc
cmp
jl
out
fs
lcall
in
cwtl
cmpsl
mov
jge
cmpsl
add
xchg
cs
testl
push
out
mov
cmp
mov
mov
mov
dec
imul
cmp
loop
sub
lret
sbb
ret
push
in
sbb
inc
add
cmc
add
or
dec
fiaddl
daa
adc
imul
xchg
shll
push
and
inc
ss
mov
jp
mov
outsl
repnz
mov
pop
scas
inc
jnp
addr16
aaa
fiadds
push
ljmp
out
neg
pop
push
jle
pop
rorb
sub
out
jmp
adc
call
adc
dec
fcmovbe
sub
pop
and
stos
mov
dec
sbb
mov
lahf
jno
scas
sbb
jmp
push
stc
movsl
jmp
lds
push
add
sti
outsb
fildll
jne
cmpsl
test
icebp
cmc
inc
inc
add
ror
inc
outsl
loop
cmc
fstps
mov
jmp
bound
pop
or
jge
xor
xor
push
in
xor
sub
cmp
cmpsl
cmp
push
ljmp
in
jecxz
push
es
sub
inc
outsb
push
adc
imulb
clc
jnp
push
test
sub
jb
push
imul
adc
das
ret
xchg
add
pop
inc
std
xor
add
fs
adc
fidivrs
data16
bound
iret
dec
cmp
daa
pop
mov
fbstp
cmp
add
enter
cmp
or
push
pop
or
sti
fwait
lock
in
mov
mov
sub
mov
jae
dec
loop
js
dec
stos
dec
cmc
push
shll
roll
push
push
inc
xchg
loopne
insl
dec
mov
add
or
dec
out
idivl
push
cmc
jbe
dec
popf
outsb
cmpsl
or
shlb
enter
scas
cmp
push
dec
jne
insb
pop
out
jno
iret
loope
or
jge
stc
std
pop
cmp
aad
adc
push
adc
in
dec
jnp
mov
xor
jp
into
daa
or
xor
lock
pushf
dec
cmpsl
ret
pop
fwait
or
movsb
out
jecxz
movsb
fcoms
push
push
add
repz
rcll
xchg
cmp
div
leave
jmp
and
fisubrs
mov
insl
and
in
pop
pop
iret
inc
data16
sub
lea
xor
mov
sarb
sub
push
into
pop
mov
iret
call
dec
jl
fsubr
jmp
repnz
test
push
pop
out
fisttpl
mov
sub
lods
pop
lea
push
add
aas
jmp
shll
in
xor
xchg
cli
js
cmp
imul
mov
fcoms
insl
push
pminsw
out
mov
test
ret
in
and
adc
mov
xor
sbb
aaa
pusha
popa
push
add
xor
or
sub
sbb
push
icebp
mov
sarb
inc
xor
lds
rorl
leave
mov
fcoml
das
enter
mov
cmp
push
or
aas
xchg
adc
rep
cmp
push
mov
psrld
push
push
mov
push
dec
push
je
pop
adc
or
mov
fwait
adc
mov
xlat
cs
cmpsl
iret
and
mov
lcall
mov
mov
movsb
test
mov
ds
lcall
jle
jo
mov
pop
hlt
sub
jmp
notl
insl
pop
mov
inc
push
jns
mov
or
adc
push
cmpl
adcb
imul
adc
les
js
cli
and
mov
in
inc
loopne
sub
outsl
sarl
mov
std
push
inc
movsb
add
call
leave
xor
loop
cld
dec
sub
add
cld
jl
out
es
add
test
mov
sub
sahf
rclb
and
fmuls
mov
mov
sub
hlt
cmp
stc
and
jne
cs
test
loop
inc
scas
bound
sti
pop
xchg
push
mov
lcall
pop
xchg
clc
scas
and
inc
xor
popa
xor
add
mov
sub
mov
push
cmp
rcrb
nop
xor
sub
add
icebp
imul
shrl
fwait
pop
ja
mov
mov
or
das
mov
sahf
shlb
dec
adc
test
sarb
push
cmp
imul
decb
push
addr16
insl
insl
adc
out
das
dec
test
pushf
insb
bound
mov
jbe
pop
jo
xchg
loope
inc
lods
xor
into
or
sub
and
sub
imul
int
or
inc
scas
and
aad
xor
lds
arpl
mov
jle
jne
sub
outsb
loop
adc
fistpll
dec
pop
adc
fildl
fimull
mov
das
lret
xchg
clc
pop
rcl
es
repnz
jo
add
sbb
mov
jno
xchg
pop
pushf
adcl
in
dec
cmc
or
mov
pop
xor
add
mov
idivb
jb
cmc
nop
sti
mov
pop
jl
inc
mov
bound
pop
jp
test
lret
push
mov
ret
icebp
and
std
dec
out
aaa
inc
repnz
repz
js
cmp
pop
outsb
mov
aaa
push
mov
jnp
cmpsl
sbb
cmp
add
push
cmp
xchg
ljmp
aaa
and
sbb
out
cld
xor
icebp
xchg
cld
pop
outsl
or
xor
out
mov
pop
jne
enter
mov
out
ljmp
or
insl
xchg
mov
mov
or
adc
cli
sti
loope
pop
jns
in
mov
sbb
cmpsl
out
inc
mov
cs
movl
test
popf
fdivrl
xor
or
into
lea
add
or
lea
or
push
sbb
fisubrl
and
pop
push
fcoms
insb
jl
mov
push
push
lahf
or
dec
inc
sbb
mov
lods
bound
mov
xor
test
dec
iret
adc
mov
xchg
lds
mov
das
xchg
push
xchg
int3
ficoml
inc
shl
and
sub
lcall
add
pop
fcmovbe
jb
push
shrb
cmp
xor
mov
inc
pop
jne
test
and
dec
lods
mov
addr16
sub
ss
fndisi(8087
mov
movl
fwait
je
cmpsb
or
cmp
sub
mov
out
xor
cmc
sbb
and
push
push
outsb
fistpl
clc
sqrtps
aam
arpl
sbb
test
sub
add
outsb
push
xchg
and
adc
loop
jl
adc
scas
push
cmpsl
jl
cwtl
sub
rclb
lcall
shlb
outsl
push
loop
push
jae
jnp
ljmp
mov
mov
out
mov
ljmp
add
sbb
and
adc
xchg
lcall
xchg
dec
les
rcr
fs
mov
inc
cs
add
lret
and
stc
rol
cmc
hlt
inc
fisubs
pop
jae
js
cli
or
add
pop
mov
loope
std
mov
pop
arpl
dec
dec
adc
jno
mov
mov
mov
add
dec
dec
lahf
je
pop
imul
push
add
arpl
and
pop
je
adc
ds
xchg
sldt
mov
out
push
mov
sub
dec
adc
repnz
insb
rorb
sub
cmc
mov
ret
pop
ret
les
mov
imul
or
mov
pop
jle
or
mov
sub
std
popa
scas
fildll
sub
out
mov
es
xor
imul
or
sub
lods
nop
ja
jle
dec
lret
or
or
mov
mov
sub
testl
clc
ja
lea
and
std
cmp
repnz
xchg
pop
in
jno
pop
cs
ffreep
pop
call
mov
scas
jle
fdivrs
enter
add
jnp
dec
std
fwait
add
mov
mov
mov
cmp
je
xchg
lods
fnstsw
inc
pop
push
das
das
sti
adc
cmpsl
sbb
rcll
lods
ret
mov
test
push
cld
int
cmpsl
fs
adc
repnz
fbld
das
lods
pop
add
js
and
sarb
cmpsb
cmovge
inc
test
adc
jae
xor
mov
inc
leave
push
push
mov
popa
dec
mov
xchg
fistpll
xchg
es
mov
jmp
ds
mov
cs
sub
and
stos
or
int
adc
or
push
inc
xor
pop
fwait
aas
icebp
cmp
sbb
movsb
scas
inc
or
sbbb
test
andl
incl
loopne
ret
cmpsb
int
outsb
sbb
mov
int3
data16
pop
fsts
cs
cli
and
jb
out
pop
add
jnp
fnsave
fidivrl
int
imul
or
adc
push
cmc
test
fnstenv
adcb
cmc
mov
movsl
popa
insl
fld1
repz
leave
lret
out
cmp
ljmp
xor
or
daa
ds
test
imul
push
aas
shlb
fs
or
push
mov
leave
xor
mov
add
adc
or
mov
push
jns
sbb
ret
xchg
test
mov
sahf
ret
mov
xchg
insl
pushf
stos
pop
std
rcrl
stos
sbb
push
adc
mov
sub
xor
jle
in
in
std
out
xchg
sbb
and
movsb
push
cli
fiadds
pusha
in
cmc
xchg
and
rclb
pushf
or
cmp
xchg
int
jns
lret
pusha
cmp
test
sub
rorb
in
sub
add
sub
scas
ja
cmp
pop
sub
lods
data16
xchg
test
dec
shlb
sub
test
lret
jno
mov
andl
out
cmpsb
mov
adc
mov
fs
and
mov
les
mov
xor
mov
pushf
fsts
test
push
cli
or
pop
testb
movsb
aam
pop
cmp
pop
or
ret
xor
pop
pop
inc
pop
jg
fadd
jle
cltd
sub
and
addr16
pusha
pop
pop
inc
xchg
mov
xchg
sub
pop
push
stos
fbld
ja
cmp
pop
lret
pop
nop
dec
or
je
mov
sbb
in
out
jbe
and
inc
xor
fsts
mov
jb
enter
lds
mov
mov
out
loopew
mov
arpl
imul
cli
lret
xchg
cmpsl
push
jmp
iret
test
add
jne
or
mov
addr16
mov
ret
push
aad
ds
sarl
ret
jp
adc
popa
push
pop
push
loope
cltd
jb
pop
aad
or
leave
mov
xor
add
insb
jno,pn
stc
xchg
jp
xchg
clc
fistps
fisttps
gs
ret
lret
jecxz
ret
andl
loope
inc
shlb
pop
pop
aas
mov
sub
pop
push
jno
dec
jbe
lahf
push
push
sub
pop
stc
aad
mov
rclb
push
adc
lret
and
std
fisubs
addb
inc
dec
movsl
jp
jl
mov
jbe
lret
lret
jo
dec
jne
popa
daa
jo
popf
sub
daa
mov
js
neg
dec
pop
repz
cmp
enter
out
mov
ja
test
mov
jne
mov
and
in
popa
jns
pop
xlat
lods
sub
lods
adc
or
pop
int
xchg
int
popf
jne
sar
jecxz
sahf
test
and
jmp
sub
sbb
cmc
bound
cmp
mov
xor
push
inc
imul
jne
adc
stc
decl
cld
or
es
push
in
sub
adc
xchg
in
iret
pop
sub
sbb
fidivrl
pop
push
daa
push
xchg
subb
mov
pushf
xor
fsubr
and
lods
adc
out
outsl
xor
test
xchg
mov
add
adc
jnp
xor
mov
adc
sub
mov
in
scas
fsubl
push
inc
insb
sub
and
jb
mov
icebp
fs
scas
lods
nop
lret
iret
in
fists
mov
and
mov
lock
xchg
ds
cli
jb
popa
fnsave
out
mov
ret
and
sbb
aaa
push
xlat
mov
inc
aad
ljmp
mov
pusha
sbb
insl
scas
fdiv
sub
ja
and
sbb
aaa
jne
push
in
jp
int
pushf
cld
xor
outsl
test
xchg
lods
pop
in
lods
lods
hlt
cltd
cmp
rcrb
outsl
rcll
loope
add
add
scas
aaa
aam
xchg
call
mov
lods
fimuls
inc
ret
push
sub
sbb
inc
loopne
std
mov
jmp
push
pusha
inc
out
out
and
fsub
mov
xchg
push
mov
insl
pop
fsub
enter
into
xor
xor
jge
xlat
fbld
dec
sahf
sbb
xor
inc
lods
shll
inc
mov
fldl
mov
mov
insl
mov
std
mov
data16
sbb
dec
std
iret
mov
test
add
lods
xchg
xchg
push
xchg
mov
and
push
aam
subb
mov
inc
mov
cmp
pop
mov
inc
sbb
ret
dec
and
and
and
mov
push
mov
mov
jle
fs
jmp
into
push
in
adc
out
dec
and
dec
xchg
test
jbe
pop
shl
sbb
xchg
sbb
dec
aam
decb
jns
scas
scas
and
std
jns
mov
imul
xchg
xor
cli
in
cmp
pop
mov
faddl
or
pop
pop
xchg
mov
cmp
push
gs
iret
fxtract
sbb
lock
sahf
mov
dec
cmp
std
mov
in
sti
call
or
hlt
jns
outsl
pop
adc
es
lea
xor
roll
mov
repnz
mov
inc
loop
and
dec
or
dec
jg
jae
sub
sbb
push
mov
and
imul
dec
loop
push
pop
es
xchg
sbb
pop
or
insb
outsb
repz
sub
and
jae
inc
movsl
cmp
sub
sbb
in
push
mov
push
dec
push
sub
arpl
int
cmp
mov
mov
push
and
cmp
mov
dec
xchg
cwtl
scas
lcall
outsl
mov
add
insl
mov
roll
jecxz
xlat
xor
add
fstp
or
push
push
int3
push
lret
test
jns
aad
adc
test
stos
mov
mov
xor
stos
into
cmpsl
sub
push
sub
pop
cmp
out
es
aaa
mov
ds
addr16
imulb
lea
test
popf
lahf
lea
inc
push
aaa
mov
rorb
sbb
es
pop
pop
inc
xchg
mul
xor
inc
dec
pop
dec
cs
call
add
cwtl
into
xor
dec
mov
pop
or
mov
push
push
inc
pop
dec
pop
das
into
js
mov
xor
mov
sub
pop
cmp
fs
inc
fstpt
mov
sub
push
adc
into
pop
jne
cmp
dec
gs
cmp
fisubl
out
js
inc
sahf
sbbl
push
sub
mov
out
pop
or
sahf
and
cmp
jmp
xor
test
call
xchg
sbb
add
and
xchg
mov
rorb
mov
inc
scas
in
mov
call
dec
ljmp
pop
ljmp
mov
adc
ret
mov
mov
stos
fcmovu
xor
aaa
adc
cld
add
jge
stos
fbld
inc
fcoml
testb
divb
les
sbb
scas
add
ret
lahf
pop
jo
aas
outsb
dec
mov
pop
fwait
ja
and
mov
mov
fbld
mov
pop
add
leave
pop
and
jp
mov
mov
add
cmp
sbb
das
mov
inc
es
jnp
inc
jo
inc
adc
rcll
mov
sub
xchg
mov
ja
fstpl
shlb
insb
add
lahf
push
adc
add
adc
pop
stc
popf
fiadds
imul
cwtl
inc
shl
fdivrs
cmp
shr
jle
enter
mov
jge
cmp
jo
push
xor
das
fidivl
and
sub
popf
fstpl
sub
jb
jle
pop
popf
jle
xor
mov
icebp
aam
imul
fs
aad
rorb
jmp
in
sbb
push
fnstenv
sub
repnz
pop
inc
xlat
xchg
sahf
dec
nop
pushf
jp
arpl
push
aad
xchg
jl
into
pop
mov
stos
push
mov
cmc
xchg
mov
cmp
xor
call
push
loopne
mov
popf
push
pop
jge
fstl
sbb
and
outsl
fidivl
mov
adc
mov
jno
inc
outsb
movsb
sbbb
pop
push
push
out
out
inc
cld
sbb
bound
sbb
lahf
test
sbb
sarl
push
adc
lahf
pushf
fstpl
shll
pop
adc
adc
test
sbb
clts
dec
ja
fdivs
and
fcmovnbe
jae
xchg
mov
cs
lahf
fcoml
pop
mov
call
sbb
shlb
mov
xchg
clc
push
int3
dec
movb
outsb
mov
xor
mov
sub
xchg
mov
data16
fiadds
bound
inc
mov
pop
mov
pop
call
mov
rol
pusha
bound
int
push
mov
jno
imul
std
cmp
mov
popf
pop
addr16
jle
das
push
sub
push
outsb
pop
loop
pop
imul
insl
dec
je
movsl
je
int
aam
cs
iret
adc
ljmp
lcall
cltd
cld
inc
xchg
xchg
iret
in
pop
or
ljmp
dec
xchg
xor
cmpsb
sub
ljmp
add
and
pop
inc
loope
pop
shrb
lcallw
aaa
es
sbb
jmp
dec
and
adc
cmp
loop
rolb
mov
in
mov
pop
xchg
scas
dec
mov
add
dec
imul
inc
mov
scas
sbb
loopne
or
xchg
jbe
ficoml
dec
push
pushf
mov
push
decl
push
mov
add
ljmp
push
lcall
or
or
or
loop
add
ds
sbb
sahf
xchg
xchg
fwait
xor
ss
scas
sahf
adc
xchg
xchg
ret
pop
inc
lods
sub
ss
jle
lock
push
mov
iret
mov
push
sub
dec
pop
sub
aaa
sub
sti
xor
mov
movntq
into
pop
stos
mov
xor
cmc
test
nop
sub
sti
ficoms
cli
out
aaa
pop
xchg
add
sbb
add
ret
pop
mov
dec
cmpsb
xor
lds
std
xor
ret
mov
cmpsl
jmp
fdivs
adc
aaa
mov
iret
arpl
sahf
mov
dec
leave
xor
outsb
cmp
negl
push
sub
js
test
pop
jg
test
fnstcw
sbb
adc
mov
shr
push
outsb
pop
mov
lret
cmc
mov
subb
adc
or
or
mov
popf
je
inc
pop
aaa
sub
leave
mov
and
xchg
jbe
and
jmp
xlat
in
cmc
insl
mov
stos
dec
lods
add
mov
orl
loope
jno
enter
divl
push
push
int
out
jno
xchg
inc
into
out
inc
ret
xor
jge
arpl
dec
jg
sti
push
enter
aaa
add
nop
xor
cmpsb
or
inc
in
jno
fs
std
fidivs
push
push
lods
inc
dec
push
push
and
push
or
icebp
mov
jb
push
shll
sbb
inc
dec
aad
mov
jbe
pusha
orl
clc
lret
fsubl
adc
add
cmp
dec
cmc
les
jl
inc
pop
push
iret
stos
or
adc
inc
add
aas
icebp
adc
or
stc
cwtl
mov
xchg
pop
mov
or
movsl
or
ret
aas
hlt
sarb
into
lods
repnz
cltd
aaa
test
dec
ret
rorb
loop
push
xchg
fwait
outsl
inc
sub
xlat
dec
stc
xchg
data16
adc
adc
notb
pop
inc
mov
pop
jo
xchg
fdivrl
xchg
mov
or
std
pop
mov
pop
fisttps
cmpl
orl
into
shrb
mov
hlt
xchg
push
es
stc
cmp
ljmp
sahf
cmovle
adc
jb
mov
cwtl
push
clc
cmp
test
insb
cmp
iret
push
jl
xchg
jle
dec
rcrl
movsl
mov
jnp
insb
loope
lcall
cmp
scas
mov
jmp
xchg
and
push
xchg
ja
mov
icebp
sbb
and
xor
cmp
inc
push
pop
pop
divl
rcl
fs
xchg
push
xorl
mov
xor
repz
add
mov
pusha
pushf
lahf
xor
shlb
adc
xor
sbb
lds
mov
adc
cmp
enter
aaa
popa
dec
dec
fwait
jno
call
mov
insl
idiv
loopne
mov
mov
fidivrl
add
jbe
cmp
mov
sub
xchg
adc
inc
ret
negb
movsl
inc
xlat
out
movl
dec
and
sbb
pop
mov
testl
mov
xor
and
fmul
es
scas
mov
xor
fwait
push
pop
sbb
insb
mov
jmp
testb
movsb
jp
or
outsb
ret
fldcw
sti
mov
mov
adc
ficompl
mov
cli
shl
push
ss
repz
mov
push
int
push
pop
xchg
lods
jmp
enter
je
sub
in
cmp
aas
cmp
out
jno
mov
fistpll
scas
add
lret
les
outsb
dec
ds
dec
lret
ret
inc
dec
rol
call
aad
push
jp
jnp
dec
int3
sbb
dec
test
jo
sbb
inc
ret
jge
push
jg
dec
icebp
stc
pushf
adc
les
out
push
pop
into
faddl
jle
or
sub
jo
and
shl
pop
shrb
loop
ss
add
clc
xor
movsb
xchg
pop
jnp
clc
xchg
leave
and
cmp
inc
and
loop
popa
xor
xchg
sub
mov
xchg
xchg
imul
mov
push
and
sbb
push
and
pop
stos
ljmp
jle
or
push
insb
jns
hlt
push
inc
mov
scas
sub
imulb
xor
lds
pusha
daa
leave
pusha
outsl
pop
jmp
inc
cmpsl
movsb
and
rolb
in
fcoml
leave
fwait
repnz
jg
xchg
sub
imul
sbb
jecxz
mov
lock
dec
cld
addr16
mov
push
inc
adc
lcall
sub
lcall
out
fisubs
stc
jl
mov
jl
jns
jbe
insb
cmp
cld
insb
lea
sbb
cld
dec
mov
mov
cmpsl
dec
gs
sbb
sbb
lcall
les
ret
or
push
and
stc
pop
and
leave
fldt
cmp
out
xchg
adc
xor
xor
fcompl
mov
xchg
dec
repz
dec
mov
imul
pop
jb
adc
test
inc
xor
pop
jno
mov
ficoms
inc
xchg
xor
and
push
or
outsl
out
push
fwait
pop
mov
adc
or
outsb
std
gs
mov
gs
enter
push
sahf
mov
pop
jmp
stc
nop
xchg
pop
adc
xchg
add
and
insl
les
ss
enter
push
arpl
mov
and
jmp
cwtl
les
xor
outsb
xchg
jb
ljmp
das
push
daa
fwait
ja
cld
sbb
fisubl
mov
cltd
push
ret
xchg
aaa
or
and
ja
leave
sbb
out
jns
ds
cs
out
adc
pushl
inc
cmp
add
inc
fwait
rcrb
mov
or
notl
dec
or
shrl
inc
fsubrp
je
mov
mov
jbe
lods
jl
enter
cmp
jnp
push
loope
or
cli
test
or
andb
or
fisttps
mov
cmpsl
add
insb
mov
pop
addr16
fnstcw
and
lret
xor
inc
out
xchg
mov
fs
enter
lods
rcll
ficoms
mov
loop
jno
adc
mov
inc
fiadds
clc
leave
andb
inc
mov
inc
add
and
rolb
push
nop
dec
push
jmp
pop
dec
lret
add
jb
mov
or
and
lock
jae
xor
test
sbb
test
aaa
out
and
test
sbb
xor
sub
inc
lret
fs
push
xchg
arpl
addr16
addr16
int
sub
add
jo
test
sahf
push
or
mov
mov
je
mov
dec
mulb
inc
in
jge
sbb
lea
sub
xor
xchg
and
icebp
pop
xlat
jmp
insb
sub
push
mov
jnp
lods
test
dec
pop
int3
mov
mov
mov
rcll
cmc
mov
mov
into
jo
movsl
add
out
mov
jecxz
mov
add
enter
adc
sub
lcall
inc
adc
cwtl
fisttpl
sarl
iret
xchg
out
xrelease
inc
dec
test
jns
shrb
pop
dec
mov
icebp
lods
xor
stc
mov
inc
scas
add
imulb
and
into
push
pop
jg
popa
jbe
mov
and
push
imul
lret
mov
jnp
fs
mov
xchg
ffreep
sbb
cmp
leave
aaa
test
fst
les
std
shrl
imul
jns
lods
hlt
mov
repz
xor
je
jmp
gs
mov
lahf
fs
cmp
cmpsl
cmpsb
pop
addr16
push
movsl
jecxz
outsl
inc
mov
subb
into
insb
bound
stc
fisttpl
cltd
push
pop
push
sub
insb
add
fdivs
stos
ret
enter
or
push
sub
leave
push
sub
cmp
xor
test
adc
divb
and
jno
imul
jns
pop
or
push
cmc
fsubl
vcvtsi2sd
out
in
pushf
leave
ja
inc
fldt
and
pop
mov
lods
mov
mov
mov
in
fdivs
cmp
das
mov
jae
andb
xchg
test
sbb
jno
inc
inc
sbb
inc
repnz
jmp
cmp
fwait
test
jb
mov
fs
dec
push
repnz
dec
and
mov
cld
lret
inc
pop
mov
movsl
mov
pop
inc
int
lret
pop
pop
pop
jmp
add
sub
add
fsubs
ret
ja
mov
test
test
xchg
dec
cmpsb
mov
fbld
push
jae
mov
mov
aas
sbb
lds
icebp
out
test
xor
adc
sub
les
mov
jmp
mov
into
lret
in
je
insb
movsl
fdivp
inc
out
push
and
ja
loope
lock
sub
lret
dec
fisttpl
mov
jge
push
mov
cmpsl
movsb
cmp
jecxz
ret
or
or
lods
loope
loop
rcrl
cmpb
mov
and
imul
xorb
enter
arpl
add
hlt
repz
adcl
out
imul
popf
loope
scas
cmpsl
lret
int3
out
xor
insb
and
xchg
pop
mov
andl
rep
xchg
mov
out
or
int
adc
inc
mov
test
push
push
dec
cmp
inc
test
sbb
inc
mov
xchg
fwait
test
enter
fistl
movsl
sub
test
sahf
aad
lcall
into
xor
push
mov
fs
in
fisubs
pop
cmc
xchg
sub
shrb
xor
mov
bound
dec
lea
int3
cmpsl
mov
adc
jo
push
insb
pushf
jmp
movsl
adc
xchg
es
and
inc
jbe
mov
jmp
or
lret
pminsw
xorl
sbb
scas
imul
aam
sub
xor
dec
mov
shlb
int
and
cmp
xchg
and
mov
and
cmpsl
or
in
and
sbb
pop
mov
gs
inc
xor
popf
popa
xor
jl
mull
call
sti
mov
inc
outsl
out
sar
enter
jle
andl
mov
fistpll
lods
dec
jle,pt
sub
sbb
and
jnp
or
lds
pop
stc
add
or
xchg
mov
into
sbb
mov
fmull
jne
aam
pop
stos
fwait
sub
insb
xor
push
sbb
mov
lcall
and
mov
xchg
mov
rorb
push
jge
and
test
adc
xchg
cmp
mov
rcrb
cmp
test
mov
inc
call
divb
jno
dec
cmp
dec
cmp
push
pop
outsl
mov
mov
test
testb
test
test
add
popa
dec
lds
push
insl
pop
and
aam
pop
pop
stos
add
pop
jp
jns
sub
outsl
or
mov
cmpsl
pop
dec
inc
stc
loop
repz
jle
xchg
lds
cwtl
rcr
inc
inc
ret
cmp
push
sub
inc
mov
mov
or
adc
mov
es
bound
mov
sti
sarb
inc
and
int3
adc
outsb
lods
xor
iret
fmull
loop
andl
and
xchg
int3
stc
stc
push
and
mov
adc
cmc
shll
ret
sbb
ret
sbbb
movsl
jb
fwait
mul
sub
add
xor
out
inc
ret
cld
cs
xor
in
iret
mov
and
jg
in
xorl
mov
adc
pop
icebp
outsl
je
rcrl
fimuls
cmp
mov
mov
fidivl
cmpsb
scas
mov
sbb
xchg
sub
ds
pop
mov
mov
sub
xor
fmuls
cwtl
fcomps
inc
jbe
outsb
adc
aaa
cmp
lds
arpl
rclb
lods
push
xchg
push
inc
inc
aas
jle
cmp
es
andl
das
sub
cld
cmpl
clc
pop
in
out
imul
dec
fimull
xchg
and
cli
inc
jge
std
pop
mov
mov
pushf
sub
sub
test
cltd
fadds
leave
inc
jnp
stos
mov
movsb
fcmovnb
fst
mov
xor
pop
cwtl
dec
lahf
jmp
adc
push
repz
fsubrs
ficoms
push
call
add
movsl
xchg
inc
aaa
jo
cmove
xchg
subb
mov
jns
adcl
in
mov
pop
sbb
lods
dec
je
xor
cs
in
loope
icebp
fsubl
outsb
jnp
addl
insb
lcall
aaa
jecxz
cmpsl
lret
adc
add
sbb
push
repz
sbb
test
fisttpl
push
mov
ret
add
lret
xor
scas
pop
outsl
xor
add
xchg
xchg
push
or
xchg
add
add
cs
dec
jmp
cmp
outsb
nop
data16
ret
addr16
les
into
mov
lret
jmp
pop
rep
into
jno
dec
cmp
shl
cmp
mov
push
pop
push
jae
test
and
and
enter
push
sahf
inc
es
and
mov
data16
jbe
jge
and
movsl
fcomps
imul
sub
daa
sbb
loopne
loop
jecxz
add
add
pop
sub
test
movsl
xchg
cltd
bndldx
mov
mov
pop
int
cmc
int3
dec
push
pop
pop
adc
cltd
insl
xlat
sub
fdivrs
mov
data16
pop
add
pushf
pushf
addr16
sbb
aaa
and
add
cmp
mov
cli
mov
xor
cmc
sbb
fdivs
imul
mov
mov
popf
fs
orb
jo
adc
and
push
adc
sahf
ljmp
sub
or
sbb
sbb
push
les
ljmp
pushf
call
mov
or
or
rcrl
jne
leave
test
stc
pop
inc
push
xor
pushf
into
push
dec
sbb
jb
and
sbb
xchg
pushl
adc
aas
sub
xchg
aaa
and
ljmp
jb
repnz
inc
push
ficoml
js
mov
je
mov
stc
enter
ret
xor
pop
jb
inc
jb
dec
cli
dec
movsl
roll
push
or
cltd
cmpsb
xchg
xchg
scas
aaa
aaa
into
loopne
out
les
mov
ljmp
mov
mov
je
add
scas
pop
sbb
adc
mov
jnp
jmp
mov
fwait
es
repz
sub
sub
dec
cmp
fdivs
lds
test
icebp
shrl
ret
pusha
pop
clc
pop
sbb
xor
xor
mov
xchg
pop
insl
ficompl
jb
and
iret
mov
sahf
sti
cmpsl
cmp
push
bound
push
inc
push
xor
xchg
call
cmp
jge
mov
sbb
jno
aam
loopne
sahf
cmc
or
mov
mov
lods
jb
scas
xor
in
cmpsl
shr
pop
fiaddl
or
push
test
call
mov
add
into
ja
cmpsl
lods
iret
out
mov
fstl
test
mov
iret
add
sbb
mov
movsb
mov
shlb
insb
or
cmc
je
dec
xor
mov
cmp
sbb
aad
mov
and
pop
aas
dec
sub
and
nop
cwtl
adc
jp
in
or
fimull
daa
fldcw
rolb
or
ret
xor
or
push
das
adc
sub
out
pop
cmp
cld
sbb
cmp
repz
mov
sub
xor
cmp
cmc
cmp
or
mov
mov
les
lds
sub
movsb
pop
pushf
inc
mov
aas
pusha
push
rcrb
mov
xor
add
nop
xor
add
pop
push
push
adc
loop
ret
insl
inc
ja
and
add
inc
sub
inc
imul
hlt
idivl
fwait
xor
pushf
int
jecxz
jno
mov
popl
pusha
popf
mov
fmull
mov
in
repz
movsb
push
fsubrp
ss
inc
ljmp
pop
and
push
adc
cli
sti
sub
cmp
add
fwait
pop
test
rorl
fnstenv
movl
sub
call
xchg
xor
mov
push
add
push
stos
sub
fidivl
outsb
jno
mov
in
jg
xchg
mov
mov
mov
inc
daa
dec
pop
aam
in
and
cmp
pop
out
movsl
insl
sub
fdivs
sub
jnp
mov
cmp
enter
js
pop
and
mov
stos
js
mov
aam
xchg
mov
add
lcall
add
mov
test
fwait
jb
outsb
or
cmp
pop
test
mov
jmp
xor
fcmovnbe
pop
xchg
imull
aas
hlt
aas
idivl
in
hlt
fcmovu
xor
push
xchg
outsb
stos
sbb
divl
mov
lahf
pop
sbb
inc
inc
xor
int
xor
je
mov
iret
or
jg
sub
inc
stc
mov
repnz
mov
ds
pop
cmp
pop
mov
xchg
cli
into
fdivr
mov
sub
add
adc
xor
decl
cmp
int
xor
jnp
dec
bound
pop
cmpsb
or
in
add
mov
mov
gs
hlt
push
or
dec
insl
repnz
xchg
lock
rcll
in
outsl
aad
fwait
cli
aas
dec
adc
in
jmp
push
xor
adc
mov
aas
je
fs
inc
repz
lods
jmp
faddl
and
inc
inc
mov
adc
xchg
xchg
jge
mov
iret
inc
xor
inc
dec
xchg
dec
inc
xor
jo
out
or
int3
cmpsb
aam
and
jbe
lods
stc
aad
and
push
aaa
les
adc
push
insl
dec
js
add
adc
aaa
and
stc
lcall
xor
and
push
inc
ret
sub
shrl
pop
sub
or
lea
and
sti
iret
jp
leave
inc
jle
clc
xchg
mov
jne
repz
andb
jo
pop
pop
fidivs
cltd
neg
daa
test
inc
imul
in
adc
sub
fbstp
mov
xchg
lret
xor
repnz
adc
out
test
cmc
cltd
outsl
fisubrl
mov
loope
xchg
dec
addr16
movsl
pop
add
nop
push
pop
add
xchg
jae
sbb
and
scas
or
ds
movsl
push
lds
dec
mov
sbb
lods
out
and
enter
and
andl
out
loopne
mov
insl
aam
cmp
imul
outsb
adc
lods
lea
test
fcompl
dec
pop
add
insl
push
sbb
popa
push
cltd
in
cmp
sbb
in
push
mov
in
out
into
sub
push
in
sbb
mov
nop
adc
in
lds
ss
or
loopne
push
test
bound
adc
xchg
inc
lcall
inc
or
outsb
out
ficompl
test
scas
std
insl
cwtl
iret
daa
stos
jg
mov
add
pushf
loope
int
and
pusha
mov
out
xchg
cltd
call
and
testb
adcl
jo
xor
or
and
sub
popf
mov
ljmp
push
xchg
xchg
cmp
mov
and
sub
sub
add
cwtl
mov
inc
xchg
inc
repz
xor
lret
ljmp
cmp
shlb
and
fnstsw
sbb
pop
addr16
dec
jmp
inc
pop
aas
inc
in
pusha
inc
sub
sbb
lret
xor
xor
sub
fcompl
mov
fcomps
xchg
ret
pop
icebp
rcrb
or
ja
fidivrl
xchg
cmpsb
fwait
sarl
imul
cmc
inc
mov
out
out
push
lods
test
sbb
stc
sub
insl
or
mov
mov
in
push
test
jne
and
stos
outsb
xlat
push
out
cmp
jp
fdiv
mov
adc
cmp
xor
rcr
xor
rorl
mov
inc
dec
adc
sub
fwait
pop
stos
xchg
cs
sub
sbb
insl
mov
fsubl
test
adc
stos
mov
ljmp
out
or
mov
fadds
mov
jnp
xchg
jae,pn
cltd
mov
push
out
out
lds
rorl
nop
pop
aaa
or
out
dec
das
xlat
out
lock
add
sbb
and
movsb
insb
paddsb
leave
js
loopne
mov
jae
out
and
lcall
fmuls
mov
mov
enter
cmc
inc
jge
loopnew
in
imul
cwtl
mov
ret
push
jno
es
xor
lods
popa
pop
btr
pop
ja
xor
dec
jno
imul
jp
addr16
insl
cmpsl
pop
shr
fmul
out
push
in
test
ret
out
mov
popa
xchg
xchg
adc
test
sbb
adc
push
or
inc
jne
int
adc
ss
fwait
cwtl
dec
inc
das
push
mov
dec
sub
or
jmp
push
xorb
push
pop
sbb
push
jae
xor
or
add
mov
add
adc
imul
fs
inc
int3
mov
test
mov
mov
fadds
pop
rcll
out
mov
pop
repnz
mov
xlat
inc
cmp
into
shrl
inc
adc
mov
sbb
sub
decb
cld
jb
outsb
cmp
sub
mov
shl
and
jbe
add
cmp
pop
imul
push
es
jno
fdivrs
mov
js
xchg
pusha
jg
and
subl
shl
adc
out
mov
enter
sbb
add
je
mov
lret
mov
jge
clc
adc
lds
mov
dec
inc
xchg
xor
cwtl
cmc
and
divb
dec
das
leave
jl
dec
cmp
ljmp
ja
push
or
mov
ja
daa
popa
ficomps
xchg
add
push
pop
ljmp
cli
push
mov
fildll
in
lea
imul
sub
shlb
sahf
insl
iret
test
adc
inc
jae
mov
pop
cmp
jns
push
fisubl
cmp
sub
lock
pop
mov
mov
stos
shrb
mov
lods
and
out
insl
push
cmp
dec
sahf
jp
imul
cltd
mov
pop
aad
and
in
dec
arpl
pop
lock
mov
or
test
aad
pop
mov
jae
mov
xor
fists
sbb
mov
sbb
lahf
mov
daa
lods
cmp
shlb
push
or
mulb
sarl
add
mov
scas
inc
sbb
sbb
loopne
call
pop
xchg
xor
lahf
pusha
ja
stos
jb
mov
pop
dec
test
add
xlat
dec
std
mov
ret
mov
mov
lods
test
data16
adc
dec
and
stc
nop
fstps
mov
aam
pop
dec
jae
cmp
mov
loop
push
ds
jg
addb
fs
jb
mov
xlat
or
mov
stos
dec
sub
mov
out
outsl
xor
adc
fwait
mov
fistpl
in
add
cmp
lahf
inc
fcoms
imulb
mov
push
mov
fwait
sub
lret
pop
fimuls
rcrl
dec
es
or
ret
jb
in
iret
clc
fucomip
jae
addb
sub
aas
in
and
dec
jmp
cmpsl
int3
sbb
sbb
rolb
sub
inc
pop
or
mov
sub
mov
add
sti
or
push
mov
scas
lods
cmp
ja
cld
mov
push
scas
mov
dec
inc
xchg
jmp
dec
enter
cmovge
iret
push
leave
push
mov
pop
push
dec
jb
xorb
insl
int3
adc
into
mov
out
mov
loop
jo
cmpsl
fbld
ja
outsl
aam
lret
push
cli
xchg
test
outsb
imul
leave
orl
fwait
stos
and
xorl
lahf
fbstp
jbe
inc
inc
rclb
outsb
daa
adc
xchg
and
sbb
pop
mov
test
xor
sub
push
mov
adc
xor
imul
mov
arpl
loop
push
int3
xor
int
sbb
fistpll
in
in
dec
mov
mov
int3
mov
push
mov
jno
pop
inc
shlb
cwtl
es
mull
and
fadds
adc
push
mov
out
ja
in
mov
in
outsl
mov
sub
and
pop
cwtl
pop
pop
inc
out
jmp
sub
mov
mov
jecxz
pop
dec
mov
cltd
pop
shll
daa
adc
test
lahf
out
xor
pop
xor
push
mov
sub
test
or
scas
dec
int3
scas
leave
jecxz
push
sub
loope
cmpsb
mov
mov
rorb
push
or
inc
scas
cmp
push
pusha
outsb
mov
and
orl
sbb
xchg
icebp
arpl
jp
pop
das
cltd
stos
or
pop
mov
and
inc
dec
mov
les
xchg
movsl
add
aam
xor
push
dec
xor
js
xchg
mov
adc
inc
scas
jg
xchg
call
sub
pushf
xchg
jmp
add
or
dec
xchg
and
push
push
ljmp
dec
mov
mov
lahf
jnp
lret
cmovnp
jb
jb
clc
mov
loopne
cmp
or
dec
mov
filds
stc
push
push
neg
test
fwait
lcall
rclb
lock
lea
int3
inc
push
imul
push
shl
push
mov
pop
fs
clc
out
sti
sahf
dec
mov
data16
repnz
icebp
jg
cmp
faddl
jnp
out
jns
in
mov
outsl
jne
adc
mov
sub
adc
popf
dec
adc
dec
push
loope
mov
mov
mov
std
scas
sahf
in
add
adc
mov
imul
mov
xor
pop
mov
cs
xor
fcomip
dec
jns
out
jns
and
movsb
jbe
loopne
fsubl
jno
loopne
rcrl
sbb
mov
ret
xchg
lret
push
xor
bound
lret
mov
sarb
incb
or
pushf
pushf
in
jge
pop
or
push
cmp
hlt
nop
aad
in
sbb
stos
sub
ret
adc
icebp
xchg
movsb
aam
or
int
das
xchg
filds
data16
test
cwtl
pushf
shr
loopne
arpl
dec
add
mov
dec
mov
mov
push
lds
mov
int
sub
sbb
outsb
xor
icebp
das
fsts
lahf
pushf
icebp
fisubrl
dec
sbb
int3
popa
dec
lret
or
dec
push
xchg
cmp
enter
sbb
js
mov
mov
xor
insl
aam
adc
int
xchg
or
mov
in
mov
push
imul
push
mov
lods
loop
data16
mov
into
outsb
sbb
pop
xacquire
inc
mov
jo
int3
fnsave
roll
or
mov
sbb
push
pop
daa
xor
xchg
inc
in
xchg
out
lea
cwtl
lcallw
lock
fistpll
out
xor
inc
hlt
push
cmp
in
pop
xchg
aas
cltd
movsb
mov
ljmp
test
jno
repnz
sub
pop
dec
stc
insb
mov
jae
clc
scas
dec
cs
sahf
aad
stos
mov
test
jp
stc
push
lea
cmp
lret
sub
sar
jle
jp
hlt
mov
mov
repz
pop
outsb
mov
jmp
movsb
pop
jnp
push
mov
imul
call
xor
pop
sarl
aaa
and
jle
xchg
sub
scas
adc
imul
cld
mov
adc
sub
inc
cli
or
jl
mov
sbb
leave
loope
jecxz
imull
or
fisttpll
push
mov
dec
imul
std
mov
mov
rolb
pop
in
std
xchg
mov
xor
mov
sub
lret
in
mov
roll
dec
fwait
sbb
cld
dec
sarl
push
es
clc
adc
xor
pop
jle
ljmp
ss
das
scas
jl
dec
iret
mov
xor
xor
aas
sbb
pop
test
pop
sbb
or
test
adc
lret
adc
sti
jnp
lods
jo
in
cmp
jns
lahf
mov
fistl
lea
xor
imul
jbe
aad
mov
dec
xchg
push
shl
subl
outsl
mov
mov
outsl
add
push
add
int3
fstpl
jb
cltd
cmpsl
mov
test
mov
cmpsl
ret
jecxz
pop
inc
mov
pop
jle
das
hlt
pusha
sti
add
je
hlt
dec
mov
push
aad
idivb
push
xchg
cltd
jo
bound
loope
jns
push
fucomi
lds
mov
pop
cmpsl
push
cmpsb
xchg
sub
int
add
mov
jg
mov
ss
es
int
aam
data16
insb
or
or
cmp
jecxz
inc
or
push
ret
ja
mov
bound
fxch
mov
mov
inc
push
ret
outsl
ficoms
dec
mov
hlt
in
mov
cmpsb
inc
fsubrs
sub
mov
xor
shl
aad
pop
mov
or
decl
sbb
repz
pop
push
push
shrl
cmp
sub
loop
mov
nop
push
pop
icebp
mov
dec
xchg
xor
aas
int
push
mov
sub
sbb
mov
xchg
loopne
das
inc
sti
jge
sbb
in
pop
gs
lods
push
adc
pop
push
mov
ret
aaa
xchg
pop
mov
fldt
push
nop
jne
in
adc
mov
inc
cs
daa
nop
dec
out
fdivl
xlat
mov
mov
stos
hlt
ficomps
int
cmpsl
stos
addr16
mov
and
pop
xchg
cmpsl
sbb
sub
xchg
imull
xor
cltd
dec
data16
das
cli
inc
les
movsb
mov
push
shlb
mov
push
into
insb
jmp
and
xor
xchg
andl
mov
and
cmp
xchg
subl
shlb
in
xchg
add
adc
lods
xor
in
jno
dec
dec
adc
pop
xchg
popa
sbb
lea
cli
sbb
sub
imul
sbb
das
dec
jns
scas
stos
adc
stc
lret
outsl
test
inc
int
in
inc
aad
cmp
jns
mov
fiaddl
cmc
xchg
movsl
cmp
cmc
scas
mov
insb
bound
xchg
icebp
push
insb
test
dec
xchg
xor
fisubrl
psrad
stc
mov
pop
push
std
pop
out
add
cmc
sub
or
add
pusha
popf
mov
pusha
adc
adcl
xchg
test
fstps
jbe
push
js
lahf
mov
es
mov
push
sbb
jecxz
adc
cltd
scas
inc
int3
std
mov
cmpb
in
lret
cs
dec
stc
scas
jnp
xor
xchg
pop
sbb
mov
rolb
mov
inc
mov
adc
shl
fwait
adc
dec
add
add
push
ss
addb
das
es
adc
int
jl
fnsave
cltd
sub
add
in
ljmp
lahf
repz
and
sbb
mov
lcall
dec
push
outsl
lock
in
mov
push
xchg
les
xor
fisubl
ret
xchg
jo
fsub
mov
jg
cmp
js
repnz
arpl
fs
pusha
scas
outsl
xlat
data16
fcompl
mov
mov
xor
cmpsl
xlat
jecxz
lds
jnp
out
ja
pop
das
and
icebp
es
inc
fidivrl
or
inc
xlat
imul
mov
popf
sub
out
cmp
inc
mov
inc
je
jl
adc
mov
ficoms
invd
jns
idiv
mov
jo
mov
cmp
or
out
cwtl
pushf
insl
loopne
rep
mov
lods
or
in
mov
mov
sbb
add
cmpb
push
into
cmpsb
jle
je
scas
and
push
lods
aad
enter
mov
cld
adc
xchg
pop
loop
add
inc
cltd
push
inc
add
ljmp
sahf
pushf
stos
adc
pop
sbb
lods
stos
dec
cmp
pop
sbb
push
and
frstor
in
lret
xchg
rclb
jmp
jp
lea
decb
sahf
jecxz
and
fildl
pop
popa
lods
dec
popa
mov
dec
sbb
les
sbb
jnp
insb
sbb
push
push
jecxz
push
mov
int3
rorb
pop
cmp
sbb
pop
sahf
scas
mov
adc
sub
aam
push
lret
loope
subl
sub
lods
inc
inc
or
inc
pop
mov
inc
test
and
aas
or
xor
popa
lods
mov
in
xlat
ljmp
inc
popa
push
fsubrs
imul
mov
adc
xor
jl
mov
jmp
jnp
mov
xchg
cmp
mov
and
fs
or
adc
adcl
add
jno
icebp
sbb
out
push
sbb
mov
jb
adc
or
hlt
imul
aam
mov
lods
pop
sub
ss
xchg
insl
pop
int3
fistpll
push
test
stc
mov
and
mov
pusha
xchg
fs
dec
push
pop
pusha
or
and
js
ja
das
adc
nop
xor
pop
xor
lods
lret
cwtl
iret
fnstenv
mov
int3
scas
inc
scas
mov
bound
popf
sub
dec
and
cmp
mov
add
icebp
mov
pop
pushl
xchg
and
mov
ljmp
push
adc
jno
sub
push
das
movsb
call
dec
int
adc
and
xor
mov
lods
jns
fsubrs
cld
dec
xchg
imul
push
in
cmp
cmp
mov
shlb
lods
inc
hlt
cmpsb
scas
xchg
mov
loope
ds
repnz
lock
imull
aad
in
xor
dec
cltd
mov
adc
into
or
cld
ja
mov
push
dec
cmp
lahf
lock
pushf
dec
jb
xchg
arpl
mov
out
mov
mov
rclb
fnsave
pop
jae
push
jns
pop
fwait
adc
cli
mov
push
pop
pop
mov
notl
xchg
shrl
subb
mov
jae
sbb
test
mov
inc
jno
loope
push
icebp
je
frstor
ljmp
mov
or
enter
clc
pop
rcrb
in
ret
loopne
mov
or
adc
sub
mov
subb
fisttpl
je
sbb
mov
cmp
mov
adc
out
test
xchg
jl
and
in
adc
in
sub
mov
popf
mov
decl
sub
jns
jmp
push
mov
mov
std
sbbb
lods
clc
or
arpl
jbe
stc
lcall
xchg
jnp
stos
sub
mov
lcall
sarl
outsb
hlt
mov
mov
mov
clc
xor
stos
dec
cli
push
xor
lret
pop
push
in
enter
test
pop
rclb
sub
xor
cmp
push
nop
je
pop
imul
fisubrs
lret
sub
daa
jno
fcompl
out
and
push
cmp
mov
push
and
jge
or
pop
xchg
add
mov
pop
fsts
and
imul
pop
int
xchg
cmp
mov
clc
mov
inc
ret
sub
xchg
ds
nop
bound
mov
insb
outsb
movsl
and
addl
or
jo
mov
dec
mov
outsl
addr16
scas
inc
jne
jl
sbb
adc
loop
js
dec
lret
jmp
nop
dec
mov
addl
xchg
cmp
cmc
cmp
test
cld
jns
xor
push
fstpl
in
es
out
mov
or
sbb
fldcw
int
scas
stos
mov
negl
cmp
push
sbb
sahf
pop
sub
dec
lret
dec
jno
xchg
xor
pop
outsl
cmp
pusha
aad
out
push
ficomps
push
pslld
dec
in
js
ja
in
xchg
std
fldcw
pop
mov
fcoms
xchg
and
cmc
push
ficoml
mov
call
out
cmp
and
jo
jmp
xchg
mov
int
mov
adc
dec
push
pop
adc
pop
dec
mov
arpl
inc
dec
fnstenv
xchg
mov
push
inc
jle
jl
in
xor
mov
aaa
lret
sti
int
jge
fwait
adc
or
cwtl
cwtl
mov
add
lods
stc
insb
mov
lods
repnz
icebp
cmp
daa
sub
sti
inc
mov
mov
or
and
lds
sbb
aad
sbb
mov
and
cmp
fs
inc
and
in
test
sub
add
inc
shl
mov
loop
sti
adc
push
mov
fcompl
std
cmc
inc
mov
mov
adc
out
sbb
mov
aad
jns
cmp
cmp
push
mov
inc
mov
stos
rorl
lea
cmpxchg
jecxz
shl
adc
fs
sbb
inc
fsts
jg
les
addr16
xor
push
repz
cltd
sub
dec
inc
cld
jo
push
xor
pop
push
leave
cmp
sub
stc
jmp
subl
adc
pop
mov
sbb
xchg
sti
or
or
inc
lea
and
idiv
in
adc
gs
mov
jmp
ret
mov
jo
jne
cmp
adc
sbb
rcll
jnp
adc
insb
bound
xchg
pop
push
mov
dec
jmp
mov
aam
push
or
into
xor
mov
loopne
mov
test
leave
xor
ss
jmp
dec
pop
sbb
add
lret
outsb
std
icebp
jbe
xor
shlb
test
jnp
loop
xchg
sbb
push
and
rorb
mov
aam
dec
lcall
scas
das
insl
push
insb
cmc
or
ret
leave
lods
pusha
rcrl
into
sbb
and
xchg
or
lret
add
xor
popf
and
sub
add
sub
lods
lret
stos
and
push
and
addr16
lods
jnp
ss
pushf
xchg
xchg
int
rorb
mov
xor
push
add
ret
lock
xchg
sub
enter
push
aaa
stc
mov
bound
jg
movsl
xlat
in
enter
sbb
xchg
lock
pop
dec
cmc
or
clc
subb
add
cmc
mov
aas
mov
jge
lret
dec
sub
rcll
aaa
mov
xchg
pop
outsb
add
xor
fs
bound
sar
leave
mov
cmp
fldenv
test
fsubrl
mov
fldt
sbb
mov
and
add
in
add
or
out
mov
into
xor
mov
adc
xlat
test
rolb
jno
bound
scas
xchg
std
cld
push
adc
fsts
outsb
loopne
movsl
xchg
iret
pusha
aas
rorl
ret
test
das
cmp
ret
mov
jae
inc
xchg
mov
mov
add
mov
lahf
in
adc
cmp
push
cmp
sbb
ljmp
xchg
clc
repz
push
addr16
mov
add
push
cli
ficompl
cwtl
adc
push
cmp
arpl
push
pop
inc
cld
and
push
mov
int
mov
test
lahf
std
dec
jecxz
inc
sub
jle
xchg
lcall
xor
dec
pop
add
cltd
cmpsb
xor
test
push
clc
jne
fsubrl
in
in
movsl
pop
sbb
lea
jp
add
fwait
jnp
mov
cld
ret
mov
cwtl
cli
push
int3
sub
pop
shl
outsb
call
jmp
push
pop
lods
cmpl
cmp
stos
popa
fstpt
test
adc
add
inc
or
test
sub
rcl
push
fldcw
ret
jle
xchg
popa
ret
stc
aad
xlat
xchg
mov
in
imul
inc
xor
push
int
xor
aas
add
dec
or
insl
sbb
add
add
push
aas
mov
sahf
and
jle
xchg
flds
addr16
popf
dec
xchg
push
and
dec
loop
add
jecxz
andl
rcr
cmc
and
jl
lods
test
scas
push
push
ret
mov
mov
xchg
or
adc
nop
rol
repnz
dec
ja
insb
fidivl
add
jecxz
pop
pop
jmp
adc
lret
ljmp
sti
shrb
and
jo
movsb
push
mov
aaa
aam
mov
out
push
enter
mov
xchg
add
lahf
sbb
mov
pop
dec
pop
and
in
xchg
addr16
mov
pop
pop
sbb
add
jmp
ret
jg
push
sbb
andl
xchg
mov
jecxz
sbb
mov
rorb
or
ret
leave
mov
aad
loope
pop
mov
pushf
fsubl
aam
test
in
sbb
rorl
vpunpcklwd
xchg
out
inc
xchg
inc
and
mov
inc
xor
jmp
pop
lret
scas
dec
mov
push
jmp
adc
pcmpgtd
testb
out
push
jmp
cmp
mov
and
dec
push
xorb
jnp
add
pusha
ret
jno
call
mov
adc
push
mov
scas
daa
xchg
mov
arpl
in
jae
dec
mov
insl
inc
sbb
xchg
imul
add
das
push
andl
nop
fnstcw
dec
iret
pop
in
mov
loopne
cmp
cld
push
idiv
in
add
lock
jmp
sub
in
mov
sti
mov
mov
push
add
sbb
insl
or
repz
fildll
mov
fsubrl
cmp
jae
subb
call
leave
fs
fldcw
data16
inc
out
adc
lds
sub
je
push
in
adc
push
data16
mov
insb
filds
sub
in
pop
dec
notb
aas
sub
dec
pop
sub
dec
mov
jmp
shlb
xchg
pusha
adc
std
ret
ret
cmp
pop
js
test
push
ljmp
xchg
push
icebp
push
mov
inc
push
sbb
jno
sub
adc
dec
and
cwtl
jnp
or
iret
dec
mov
adc
fdivr
iret
js
in
inc
test
add
xor
mov
pop
dec
es
aaa
test
inc
out
cmp
xchg
mov
mov
dec
jb
or
int
jne
lods
inc
cmc
sbb
orl
add
mov
add
or
pushf
cwtl
ret
out
adc
cld
cmp
cmp
mov
daa
xchg
shl
add
jo
aas
jne
sbb
pop
pop
xchg
popf
test
lahf
sub
adc
test
jl
call
ret
packuswb
lds
xchg
in
stos
rcrl
mov
aaa
lret
lret
nop
rcl
mov
adc
jge
pop
push
mov
cmp
cltd
stc
xor
arpl
cmp
sub
inc
xchg
mov
inc
sbb
aaa
bound
dec
mov
push
shll
adc
jge
mov
dec
cmp
les
outsb
scas
arpl
mov
jbe
and
mov
adcb
jle
adc
and
lcall
xor
cltd
pop
and
pop
jo
jge
xlat
mov
hlt
ret
movsl
or
scas
inc
xor
in
mov
arpl
add
sub
mov
jp
cmp
leave
in
mov
mov
jo
int3
sti
cmc
mov
ja
jle
js
push
pushf
dec
add
fisttpl
arpl
mov
icebp
mov
dec
mov
ret
xchg
xor
icebp
jae
adc
lea
xchg
fcom
dec
pusha
lods
jne
or
mov
dec
ss
fmuls
push
xchg
mov
jae
inc
fdivs
push
cmp
sbbl
gs
repz
iret
nop
ret
cmp
xor
push
bound
jb
lcall
dec
into
mov
test
and
inc
repnz
shrl
ret
jp
push
stos
push
and
or
mov
adc
xchg
xchg
pop
dec
and
in
add
orl
lds
iret
pop
aaa
dec
movsl
notb
xchg
incl
cli
sbb
mov
ljmp
lds
inc
xchg
std
inc
mov
push
and
or
inc
xor
scas
jp
push
cli
arpl
in
push
enter
pop
mov
xchg
cli
sub
adc
inc
xor
xor
mov
push
pop
mov
mov
or
jp
mov
mov
pop
jnp
dec
or
into
xchg
adc
arpl
lods
pop
pop
ja
and
leave
mov
sbb
pop
int3
in
shll
inc
mov
insl
pop
sub
push
subb
lods
xor
jno
cmp
sub
js
in
out
scas
xchg
fmull
les
xor
dec
jl
add
jmp
das
imul
inc
call
xchg
inc
mov
mov
lods
pop
incb
data16
xchg
mov
lea
add
or
into
pop
mov
scas
jbe
jmp
xlat
mov
dec
in
nop
lcall
pop
xor
pop
ret
and
inc
xchg
jmp
jmp
xchg
jmp
insb
mov
sbb
sub
and
mov
jge
sub
xchg
rcrb
jno
cld
mov
sub
sti
dec
out
sub
and
sbb
std
mov
pop
repnz
frstor
xchg
inc
add
push
stos
inc
add
sub
das
test
cmc
pop
cli
mov
pop
mov
dec
adc
and
jns
clc
dec
or
push
mov
js
cmp
out
mov
loope
lcall
and
jae
dec
adc
popa
push
inc
lods
fwait
aam
sbb
xchg
push
out
fcoml
mov
cmp
fbld
cmc
cmp
pusha
outsl
pop
or
dec
and
dec
std
or
sti
in
push
mov
pop
push
jns
jecxz
imul
ret
and
mov
push
int3
mov
inc
sub
mov
push
lret
add
aaa
jb
and
cmp
mov
clc
rcrb
sub
dec
addr16
push
stos
xchg
pop
pop
in
test
loop
scas
int
out
pusha
fbstp
pop
adc
popa
ret
lahf
push
cmp
aas
cmp
sbb
lret
cmp
clc
push
mov
xchg
or
mov
jno
adc
and
iret
cmc
rolb
jne
sub
mov
fsubl
jne
push
rorl
dec
xchg
push
adc
sub
clc
add
xor
mov
out
and
out
fcmovb
icebp
arpl
or
aas
aaa
ret
sbb
xchg
fs
cmp
es
xor
sbb
aaa
js
nop
mov
mov
inc
sub
push
xchg
mov
xor
mov
xlat
cwtl
adc
mov
jmp
scas
cmp
loope
out
cwtl
sar
aas
inc
mov
push
out
out
mov
push
push
stc
jno
test
loope
notb
push
sti
stos
lods
dec
and
imul
or
pop
adc
insb
call
into
adc
xor
or
imul
mov
push
out
es
cltd
sbb
enter
lds
or
orl
cs
mov
stos
mov
xlat
repnz
in
cmp
outsb
imul
jmp
jnp
stos
out
in
icebp
push
mov
jecxz
pop
lret
jo
bound
and
xor
cmp
inc
out
inc
sbb
cmpsb
sbb
dec
push
imull
pop
loope
cmpsb
repz
clc
jbe
jle
popf
lahf
xor
sub
mov
or
xor
lret
mov
inc
cmpsl
sub
push
push
int3
xchg
push
sbb
mov
repz
outsl
xlat
cwtl
mov
daa
arpl
xor
inc
pop
mov
rclb
push
cwtl
inc
cmp
aas
jl
mov
mov
xchg
pop
pusha
fstl
add
dec
pop
jns
popa
repnz
cpuid
add
or
push
popf
jmp
rclb
jle
pop
stos
pop
adc
or
data16
das
jge
pop
int
ds
mov
sti
stos
xor
dec
dec
dec
mov
shrl
icebp
add
clc
test
sti
stc
jp
and
add
popa
loope
jno
mov
adc
adc
adcb
jb
dec
sbb
xchg
jb
sbb
nop
test
rorb
in
sarl
push
pop
dec
mov
dec
leave
sub
and
aaa
sbb
enter
inc
sbb
cmp
sub
xchg
push
xor
adc
push
stos
movsl
shrl
ljmp
fs
fildl
pop
adc
push
jge
in
push
xchg
daa
out
jae
cmp
push
jp
jmp
cmp
stos
fildll
push
dec
jb
ds
jg
shr
cmp
mov
xchg
xchg
mov
inc
sbb
pop
xor
and
arpl
adc
or
or
insb
dec
mov
xchg
loopne
cld
pop
repz
adc
mov
inc
push
inc
dec
lds
jmp
jp
repz
test
fsubrp
push
xlat
cmp
mov
mov
test
movsb
jns
or
sti
push
inc
dec
mov
je
mov
add
repnz
aad
repz
cmpsb
outsl
sahf
xchg
pop
sub
sti
mov
xchg
sbb
inc
jnp
int3
xor
sub
in
popf
xchg
pop
mull
adc
push
ror
dec
out
lret
inc
dec
sub
std
adcl
movsl
stc
pushf
lret
daa
ret
adc
std
repz
movsb
lock
arpl
pop
mov
xor
dec
out
cld
push
cli
imul
sub
popl
xchg
jmp
mov
adc
push
mov
ds
sbb
and
repz
dec
xchg
daa
js
std
ret
fwait
push
dec
rcll
loopne
pop
movsb
dec
mov
movl
jbe
xor
pop
push
xchg
and
int3
icebp
sub
jns
test
ss
sbb
jge
or
push
cmpsl
sarb
ljmp
xchg
push
mov
lret
pop
dec
js
in
jne
scas
mov
jmp
xor
in
cmp
mov
push
inc
pop
inc
xor
and
sbb
stc
hlt
pop
lds
mov
outsl
or
out
jg
shll
mov
mov
push
push
or
pop
cmp
daa
pop
sub
mov
lea
push
mov
je
lock
jae
pop
sub
and
cli
cmp
mov
les
sub
jno
loop
call
ljmp
orb
daa
movsb
popf
xor
xor
fnstcw
je
inc
fisttpll
test
inc
dec
test
test
loope
lcall
push
push
jnp
out
sub
mov
pop
push
xor
push
jg
incb
push
shll
cmp
mov
lret
mov
add
sbb
pop
push
cmp
mov
mov
gs
cs
adc
lret
mov
xlat
dec
insl
inc
cs
dec
fldl
and
jnp
sbb
push
fs
loope
std
or
pop
sbb
or
jae
in
lea
mov
lea
test
push
sub
fisttps
arpl
repnz
mov
xchg
shll
sbb
jmp
lea
and
jmp
jmp
push
stc
adc
pop
push
jo
cli
dec
pop
mov
jmp
push
jnp
mov
bnd
shlb
mov
or
dec
add
jge
cmp
xchg
inc
andb
or
or
fnsave
cmp
and
out
push
clc
jae
push
lods
test
cli
push
clc
ficompl
movsb
repz
pop
jmp
mov
xchg
dec
orl
sub
js
popl
mov
sbb
decl
inc
call
mov
jge
and
sub
xchg
arpl
jge
inc
or
sbb
test
call
add
mov
subb
arpl
data16
std
mov
mov
or
outsl
mov
comiss
aaa
add
dec
lea
cs
mov
js
mov
sbb
inc
repz
fildll
pop
add
rcrl
movsl
imul
xlat
das
enter
test
pusha
daa
cmp
std
mov
pop
in
xor
push
sar
and
jae
adc
xor
push
movsl
ret
or
in
lcall
push
jo
xor
jecxz
test
push
aas
mov
jp
inc
dec
rcr
push
or
fistps
add
xorl
leave
mov
aam
mov
loop
inc
jb
xor
gs
lahf
mov
mov
fcmovnb
add
jbe
shl
inc
push
inc
fistl
jg
jns
icebp
push
mov
mov
mov
and
out
and
repnz
mov
scas
out
loope
dec
cmpsb
test
adc
stos
jo
inc
xchg
popf
fcmovnu
les
jg
sbb
fstpt
mov
sbbb
and
jnp
scas
call
jmp
int
xor
in
jb
push
jbe
cld
pusha
xchg
roll
out
jo
data16
xor
mov
jo
xor
push
jge
sub
mov
pushf
pop
loope
dec
pop
fistps
or
adc
lcall
aad
sbb
out
rorb
xchg
lods
jle
xchg
fimuls
dec
fcmovne
out
or
mov
fidivl
cmp
aad
cltd
call
das
pop
cli
sbb
sbb
adc
jb
xchg
sbb
dec
shll
lahf
mov
inc
das
stc
stos
cmp
or
test
les
jmp
jns
sbb
pop
test
sbb
xchg
sub
xchg
lock
enter
cmp
decl
inc
outsb
dec
push
xchg
or
mov
add
shr
inc
push
xlat
dec
xchg
cltd
mov
sub
dec
fs
push
mull
xchg
cmp
or
xor
xor
orb
loop
push
and
ja
pop
popf
clc
lret
mov
inc
push
push
shr
repz
or
stos
add
jnp
sti
jle
pop
sarl
push
and
cwtl
jmp
xor
pop
jl
aad
shl
nop
sbb
in
mov
iret
pop
dec
dec
add
mov
pop
mov
cmpb
dec
and
std
sub
outsb
rolb
sub
sbb
sub
popa
adc
data16
sub
mov
inc
lea
icebp
cmp
ret
push
mov
hlt
aad
addr16
inc
ljmp
push
test
out
or
fidivl
popf
add
rcrl
push
cltd
adc
test
add
mov
inc
inc
psrad
jns
add
xor
leave
arpl
movsl
sub
push
out
popf
jnp
pusha
xor
dec
jno
repnz
push
cwtl
or
mov
imul
clc
dec
mov
sbb
push
shll
dec
ret
add
xchg
cmp
jmp
xchg
or
gs
fadd
jnp
sahf
pop
dec
jecxz
xlat
aas
pop
lret
into
insl
adc
pop
jns
imul
or
pop
pop
cmp
add
pop
cs
and
xor
jg
jge
call
pop
test
ja
inc
add
pop
aas
imul
mov
popf
stc
pop
gs
add
clc
sbb
aam
sbb
mov
add
cmp
loopne
dec
sub
in
xchg
mov
addr16
hlt
or
in
mov
out
jo
dec
dec
cltd
mov
shll
add
mov
xchg
gs
jnp,pn
in
xchg
inc
call
js
arpl
mov
inc
inc
enter
lret
pop
bound
xor
push
mov
jge
dec
adc
data16
pushf
outsb
xchg
inc
xor
mov
mov
movsl
jns
xchg
popa
pop
pop
aaa
fldl
cmp
addr16
insb
mov
cld
pop
cmpsb
out
sbb
add
mov
mov
aad
enter
mov
out
sub
lods
dec
lods
push
lcall
jbe
leave
push
imul
loopne
cmpsl
orl
aas
mov
pop
mov
pop
jbe
xor
or
lcall
loope
cli
inc
push
mov
inc
ret
nop
iret
lods
mov
in
out
dec
test
stc
aad
shlb
mov
add
push
lea
test
pop
jnp
push
je
iret
inc
out
das
arpl
mov
inc
std
cmc
push
jecxz
ss
mov
pop
sbb
adc
insb
pop
cmp
jmp
mov
mov
jmp
sbb
mov
fwait
je
push
mov
adc
and
cmc
cltd
sbb
mov
sbb
rcl
sbb
into
jge
pop
push
aaa
xchg
pop
pop
jnp
nop
xchg
cli
idiv
cmpsb
mov
test
xlat
mov
jmp
negl
imull
sbb
dec
cld
jg
ret
xlat
push
and
addr16
ret
mov
dec
je
lret
mov
inc
add
cmc
dec
movsl
imul
add
loop
mov
out
fnstsw
hlt
fidivrl
add
cltd
mov
movsl
sarl
adc
stos
adc
int3
sahf
icebp
cmpsb
icebp
xchg
sub
es
enter
or
lret
pop
andl
sub
aam
jge
sub
mov
inc
xor
jge
iret
mov
add
add
bound
or
scas
ja
adc
loop
mov
cmpsl
xchg
jae
xchg
outsb
dec
mov
clc
data16
cltd
mov
cmp
stc
mov
lods
mov
mov
add
xchg
outsb
mov
repnz
inc
cmpsl
jl
push
mov
inc
inc
lock
add
pop
adc
xor
push
incb
jns
dec
cli
and
clc
mov
jbe
xchg
pop
pushf
mov
lret
dec
ficomps
in
pop
cld
lcall
xchg
test
push
mov
or
xchg
jmp
pop
popf
pop
lcall
cmc
fistpl
xchg
insl
popa
pop
add
fsts
cmpsl
or
pop
and
sub
cwtl
fmuls
or
xchg
out
orb
repnz
push
es
or
in
pop
xchg
or
xlat
loopne
cmp
jnp
xchg
and
ret
sub
and
xchg
mov
sub
mov
out
xor
dec
loop
sbb
sbb
in
or
clc
adc
fdivrl
sbb
push
xor
mov
lcall
jae
cld
xchg
jecxz
iret
cmp
in
and
add
popa
mov
lea
jecxz
pop
push
sub
add
in
ds
adc
out
adc
pop
mov
sarl
cmpsl
jmp
nop
scas
dec
cwtl
cmp
pop
cmpsl
xchg
fwait
inc
pop
jmp
inc
fidivrs
mov
and
jae
xchg
dec
xor
ret
movsb
sbb
jg
and
pop
and
lahf
jmp
mov
dec
inc
push
shl
in
jno
popa
nop
pop
push
lock
mov
bnd
jbe
arpl
inc
dec
lret
in
mov
fists
rol
jb
ficompl
pusha
fsts
dec
ljmp
call
loop
cmovns
fcoml
imulb
mov
mov
jle
add
loope
xchg
jmp
xchg
and
pushf
pushf
mov
out
lcall
dec
and
or
imulb
push
loope
jl
sub
loope
sub
dec
popa
fcomps
mov
lds
rcrl
shr
bound
cli
mov
sub
mov
imul
lret
and
jae
dec
push
fs
fcomp
in
xor
cld
cld
ss
xorb
push
push
sti
in
hlt
jl
aaa
jle
pop
lret
jno
int
mov
cmpsl
xchg
add
popa
mov
popa
out
lret
aaa
mov
cs
sub
dec
cli
lds
daa
sbb
mov
lahf
dec
mov
call
sub
push
mov
outsl
xor
icebp
and
sub
pop
daa
das
dec
xchg
mul
inc
pop
test
push
cmp
or
enter
jns
pop
pop
test
aam
in
mov
shl
push
xacquire
cmp
jp
xor
sbb
mov
movsl
and
and
push
jnp
add
add
cmpsb
inc
subl
enter
mov
push
pop
scas
mov
pop
les
dec
pop
cmp
or
or
in
mov
aas
cmc
or
adc
fdivl
cltd
push
jne
out
rcl
ficompl
das
popa
mov
pop
adc
aad
cmp
movb
lea
rorb
mov
in
jno
sti
clc
rcrl
aaa
dec
sbb
sbb
ret
and
daa
int
fs
cltd
into
or
jne
and
cwtl
dec
fs
mov
xchg
cli
test
add
mov
add
popa
xchg
hlt
mov
or
mov
mov
or
cmc
sbb
jb
inc
jp
mov
gs
xor
add
push
fistps
mov
sbb
fmull
jmp
ss
sarl
xchg
sti
pop
std
mov
cmp
lods
xor
sbb
and
insb
and
mov
in
je
mov
fidivrl
fucomi
call
adc
enter
in
mov
push
and
in
mov
xchg
pop
and
neg
pop
push
jae
cmc
rcr
int3
lahf
loopne
dec
pop
xchg
jns
or
stc
jmp
data16
xor
sbb
mov
lret
rclb
rcll
aad
cwtl
gs
jnp
lret
stos
mov
jmp
popa
rcr
jp
sbb
pop
or
xchg
jb
cli
mov
fstps
pop
mov
pushf
pop
rcl
loope
inc
cmp
xchg
mov
pop
xchg
push
push
cmp
les
scas
mov
fs
fcompl
push
jg
aad
loopne
jge
dec
outsb
mov
mov
cmc
push
jns
cmc
push
sahf
gs
cmp
and
dec
arpl
xor
adc
fmull
mov
xchg
arpl
mov
jno
repz
mov
in
mov
jg
stos
stos
dec
adc
pop
dec
scas
inc
lock
pop
dec
pop
fiaddl
cltd
lods
jg
inc
and
cmc
sub
pop
mov
pushl
jno
jns
pop
mov
rorb
mov
dec
push
mov
loopne
sbb
cltd
rorb
xor
or
mov
dec
push
push
xchg
lahf
pusha
aam
insl
pop
mov
in
scas
mov
jle
pushf
add
mov
ljmp
jl
push
stos
push
push
clc
hlt
or
cli
push
push
mov
scas
lcall
sub
or
mov
dec
clc
mov
fwait
sahf
ss
add
pop
adc
mov
fidivl
shlb
push
loopne
or
jle
cmc
pop
in
cld
leave
bound
mov
push
inc
mov
pop
lret
jnp
mov
hlt
int3
adc
leave
xor
push
shrl
adc
outsb
dec
jle
push
aaa
jns
jb
push
dec
mov
add
imul
xchg
xchg
loopne
sbb
scas
pop
insb
gs
cmp
sbb
adc
xor
int3
mov
inc
loopne
enter
push
das
add
mov
popf
mov
mov
into
mov
imull
int
hlt
loop
push
sub
mov
dec
jmp
jns
loopne
dec
out
fldcw
xchg
adc
loop,pt
or
cmp
mov
repnz
gs
imul
hlt
call
mov
outsb
lods
xor
outsl
daa
and
adc
xor
into
clc
xorb
inc
lea
inc
lods
ret
inc
add
ja
xchg
fucom
ret
push
scas
repz
push
adc
int
fbstp
fdivrl
xchg
test
pop
lock
cmpsl
movsl
xchg
add
test
loopne
lds
inc
out
add
cwtl
stos
inc
scas
xchg
cmpsb
iret
pop
shl
imul
lock
imul
sti
adcb
add
add
daa
std
out
bound
test
jmp
lds
es
sbb
or
cmp
shrl
sub
fwait
sbb
popf
sub
lods
cmp
cwtl
or
sbbl
imul
sub
ds
in
fistl
in
int3
arpl
pop
push
sub
add
push
fsubl
push
push
mov
testb
test
mov
xor
mov
test
jl
adc
clc
sbb
dec
mul
in
outsl
add
xor
ret
jge
ja
mov
lret
jl
mov
fcmovu
jp
xchg
movsb
jp
and
push
cmp
mov
push
inc
jle
xchg
pop
jmp
out
sarl
nop
sbb
cmc
sub
fidivrl
pop
insb
mov
sub
enter
sub
je
cld
dec
jne
jl
add
sbb
test
push
inc
mov
sub
adc
enter
sub
lods
xor
sbbl
scas
push
pushf
adc
loopne
mov
push
mov
push
pop
lds
enter
xchg
xchg
repnz
pop
inc
push
in
lods
xchg
fisttpll
iret
push
rcl
mov
mov
aaa
cmp
adc
hlt
inc
rorl
or
jne
add
and
mov
dec
adc
push
arpl
mov
not
xchg
ja
push
adc
jge
out
jne
inc
xor
aaa
pop
dec
mov
arpl
fnsave
loopne
add
xor
pop
or
and
cmp
mov
aaa
sti
stos
xchg
mov
jmp
fdivr
mov
push
mov
mov
mov
and
jge
mov
mov
inc
mov
in
in
lock
adc
add
inc
sub
inc
rcl
imul
sbb
add
jb
fwait
mov
mov
inc
ret
push
sahf
dec
pop
movsl
ja
mov
test
idivl
push
aas
push
add
cmp
or
push
mov
sbb
add
psrad
fdivrp
cmp
jns
sahf
inc
popa
push
jb
loope
stos
adcl
stos
jo
pusha
fldenv
jno
xor
mov
jb
ss
cmp
sahf
xor
ficompl
aaa
xor
adc
mov
iret
add
js
mov
adc
cmp
lret
lock
add
cmc
xor
dec
sbb
negb
mov
pop
les
xlat
add
add
das
cmp
imul
repz
inc
in
stc
add
cmpsb
sub
repz
jmp
popa
cmpsl
fisubl
je
scas
roll
mov
sbb
jns
std
roll
mov
fwait
cld
aad
inc
cmp
cwtl
xchg
jl
aas
mov
lds
add
popa
inc
dec
mov
ljmp
cmp
popf
mov
jae
mov
popf
movl
xchg
cmpsl
mov
insl
les
cmp
mov
xchg
iret
pop
fmull
filds
stos
leave
lcall
adc
mov
sti
int3
xchg
cmpsb
out
xchg
test
mov
adc
pop
scas
ds
mov
xchg
lcall
or
pop
out
popf
sbb
ljmp
ret
ljmp
sub
push
shrb
jb
push
in
jge
loope
and
dec
hlt
adc
sbb
leave
pop
scas
fcmovu
cmp
mov
mov
daa
mov
xchg
xchg
cmp
adc
fistl
mov
icebp
out
push
outsb
cmpl
sbb
in
xchg
lods
test
outsl
pop
xchg
enter
test
or
stc
sbb
lea
out
imul
mov
add
stc
pushf
xchg
lock
lock
ret
cltd
clc
pop
outsb
or
aad
rcr
std
fs
or
mov
mov
jl
mov
cli
imul
inc
cltd
movsb
adc
push
add
push
sub
push
test
jp
push
lea
rorl
insb
sti
cli
cwtl
inc
cli
adc
dec
sbb
xor
xor
xor
push
fistl
dec
insl
dec
pop
mov
xchg
sub
lock
jb
add
loop
or
aam
lret
push
or
aad
mov
sbb
sbb
sub
dec
inc
ja
mov
mov
cmp
fistl
out
cmpsb
jmp
fcomps
pop
nop
es
sahf
orb
mov
leave
daa
iret
movsb
out
ds
popa
adc
mov
fadds
pop
mov
fs
lods
inc
lods
popf
cmp
outsb
pop
and
les
xor
or
sub
push
xor
push
add
jae
test
sub
xchg
mov
add
jne
mov
test
or
enter
cltd
jg
xchg
lret
lods
xchg
jbe
mov
dec
jbe
repz
add
repnz
adc
push
ficoms
or
pop
push
add
fsubr
mov
cmpsl
mov
push
mov
sub
dec
fisttpll
lods
jno
jg
adc
cmp
mov
icebp
stc
xchg
xor
or
add
call
aaa
ss
push
enter
mov
push
pop
dec
ljmp
je
push
jl
jbe
sub
pusha
jp
iret
xor
mov
loopne
bound
xchg
ret
fdivrs
mov
arpl
imul
fdivp
dec
add
aas
out
les
push
incb
push
fs
sbb
sbb
and
scas
xlat
test
push
sti
push
push
das
sbb
adc
dec
inc
bound
push
fisubrs
pop
add
lods
pop
shrb
pop
mov
pusha
mov
sub
adc
mov
or
js
push
rcr
mov
popf
ret
psrlq
loope
sbb
popa
repz
jbe
and
xchg
je
xchg
movsb
sbb
sbb
call
cmp
pslld
dec
xor
and
repz
aas
int3
int
xchg
out
fisubl
scas
clc
iret
ljmp
push
mov
fs
leave
in
dec
push
bound
or
pop
icebp
or
add
in
out
xlat
mov
jbe
shll
pop
dec
fld
inc
xlat
stc
shlb
ds
or
leave
stos
lahf
test
mov
mov
cwtl
ret
sub
movsl
and
pop
je
or
cmc
shlb
stos
adc
movsb
cmp
into
bound
jmp
aas
sahf
lahf
xlat
or
fcmovbe
dec
mov
inc
xchg
xor
pop
sbb
sahf
sbb
outsl
rorl
add
xchg
dec
mov
mov
xchg
inc
cwtl
sbb
xchg
pop
div
js
mov
ret
dec
ljmp
mov
add
daa
test
xor
out
int
lods
xor
inc
pop
out
push
data16
sbb
jmp
cmp
inc
adc
stc
in
mov
sub
dec
and
bound
jae
mov
stc
in
jb
dec
jno
shlb
jns
daa
sti
sub
add
dec
adc
int3
mov
fdivl
add
mov
xor
adc
or
rcrl
outsl
push
pop
movb
out
repnz
push
pop
sub
ja
or
nop
clc
call
mov
jo
sahf
inc
pop
pusha
mov
sub
out
jo,pn
repz
push
or
fwait
cltd
push
push
cwtl
mov
clc
pop
test
sub
or
push
jge
adc
sets
rcrl
dec
scas
jmp
inc
dec
inc
mov
out
call
fsubrs
inc
push
lock
xchg
push
dec
test
cwtl
pop
nop
adc
adc
xchg
and
rcll
pop
cld
call
push
inc
cmpsl
aas
fmull
jnp
call
cli
dec
xchg
inc
aam
jmp
jns
outsl
inc
int
loopne
je
cli
lret
lea
insl
pop
pushf
repz
xchg
cs
push
xchg
mov
adc
jecxz
pop
adc
mov
jae
stos
cmpb
pop
sub
leave
dec
popa
scas
push
jne
push
xchg
fisubrl
adc
and
add
sbb
das
addl
lods
cwtl
pop
mov
stos
fsubrs
adcl
mov
test
rorb
jb
ret
sbb
xor
sti
das
and
out
mov
inc
cmp
and
xchg
mov
leave
jbe
fdiv
cltd
lods
mov
dec
pmuludq
inc
imul
sub
subl
mov
mov
pop
and
jbe
ljmp
jns
das
out
mov
loope
jbe
push
mov
adc
and
int
mov
shrb
in
xlat
inc
ret
roll
mov
faddl
or
cs
insl
test
jmp
jno
xorl
pop
pop
mov
mov
jb
sarb
push
mov
leave
sbb
ud2
shlb
aad
add
test
cli
cmp
cwtl
push
xor
imul
mov
std
mov
pop
inc
xor
mov
cmpl
mov
push
scas
loopne
sbb
dec
push
cwtl
dec
add
pop
fs
lds
xchg
aam
sub
push
pop
jle
int
lret
pop
je
loopne
xor
rclb
add
mov
push
inc
inc
cmp
lods
leave
mov
pop
bound
mov
test
jl
scas
xor
pop
ret
rol
pushf
lock
mov
adc
in
jns
lahf
mov
orb
mov
add
imul
or
push
mov
jl
std
xchg
dec
mov
es
notl
sbb
pop
loop
push
xor
dec
xor
xchg
test
adc
cmp
mov
out
loopne
fsubs
test
shrb
movsb
mov
gs
mov
notb
mov
fisttps
mov
shrl
add
imul
sahf
cmc
jne
lea
hlt
aam
fsts
imul
xchg
subl
or
cmovbe
or
xchg
rolb
xchg
in
fcoml
clc
mov
pop
call
mov
cmp
cmp
mov
xchg
mov
sub
movsl
cld
sbb
pop
cmp
loopne
aaa
mov
mov
addr16
dec
frstor
add
cwtl
jns
rorl
sub
mov
fmuls
push
xchg
pushf
sub
sbbb
xlat
pop
outsb
sbb
cmp
jl
xor
fldl2e
in
push
inc
shrb
fsubrp
or
push
pop
pop
push
or
repnz
adc
xchg
jp
fcmovne
xor
xlat
popa
addr16
rolb
pushf
jmp
mov
xor
or
jne
sub
pop
pop
fidivrs
dec
pop
mov
adc
jmp
cwtl
push
inc
int3
push
inc
jae
clc
scas
xchg
movsl
inc
dec
mov
pop
fildll
pop
iret
in
ja
in
jbe
dec
sub
cmp
push
push
lret
inc
popf
aad
inc
mov
add
cld
rcl
jmp
dec
aaa
jmp
cmp
es
arpl
mov
sub
xor
ret
aas
cmpsl
jl
mov
into
lahf
mov
mov
inc
mov
xor
inc
bound
inc
loope
jnp
cwtl
cmp
ret
inc
dec
mov
cmp
sbb
fs
fidivrl
push
push
out
jb
sub
and
fsubl
xchg
add
bound
push
lret
fsts
jb
pop
fdivs
sbbl
sub
movb
scas
cmp
add
pop
mov
ret
test
cmp
lds
mov
hlt
jns
mov
cli
pop
std
lret
adc
hlt
inc
ret
jnp
mov
or
dec
cmp
insl
or
inc
xor
adc
inc
insl
inc
push
pop
das
cli
mov
movsb
lea
dec
ljmp
mov
and
add
inc
jb
lret
inc
pusha
mulb
rol
lret
les
pop
pop
add
cltd
dec
popf
aaa
add
leave
or
jp
or
adc
shl
stc
cwtl
shl
push
aad
sub
inc
pop
nop
fneni(8087
pusha
jne
cmp
dec
cmpsl
sub
mov
inc
aad
sbb
in
adc
jge
popa
in
adc
rcr
push
push
cmp
xlat
adc
jge
adc
xor
and
mov
movb
mov
imul
push
arpl
fsubs
sbb
jp
cmpsb
outsb
jle
clc
popa
sahf
sub
xchg
sbb
pop
cmp
push
xchg
shl
hlt
adc
dec
sahf
xchg
or
les
pusha
fs
mov
xorb
xchg
pusha
mov
enter
push
in
inc
das
xchg
bound
test
aaa
inc
jle
js
addb
fcoms
xchg
pop
inc
mov
movsb
scas
in
les
movsb
sbb
add
dec
mov
fldl
inc
popl
daa
cmp
inc
movsb
dec
push
adc
ljmp
sarb
testb
cmpsl
ss
or
adc
adc
lds
push
mov
test
dec
lret
and
mov
sbb
stos
jnp
lahf
shlb
pop
test
jmp
inc
sub
sub
cwtl
xchg
mov
pushf
adc
and
data16
pusha
pushl
mov
mov
mov
push
and
mov
pop
movsl
aaa
repz
cmp
sub
out
dec
lcall
cmc
push
dec
shl
je
adc
jge
lds
dec
pop
cltd
sbb
add
lods
cmp
das
cmpsb
dec
mull
roll
or
jmp
mov
and
dec
cltd
pop
inc
xor
test
les
xchg
lods
fsubl
into
lahf
adc
jl
and
cmp
das
pop
ret
push
inc
dec
fsubrs
ljmp
dec
mov
xchg
cwtl
test
mov
daa
in
push
mov
loopne
int
adc
adc
sbb
ficoml
outsl
repz
shlb
sbb
aas
push
shlb
jno
mov
and
popa
ds
movsb
cwtl
fsubp
or
push
pop
jge
mov
xchg
pop
pushf
mov
adc
xor
mov
ds
sbb
je
pop
daa
out
call
inc
in
adc
mov
iret
stos
not
lods
xor
in
es
adc
inc
ljmp
or
insb
sahf
mov
pop
xchg
jl
mov
mov
add
in
lcall
idivb
xchg
sbb
in
mov
imul
push
rorl
repnz
clc
je
lahf
sub
pop
repz
call
out
xchg
repnz
or
and
decl
mov
in
andb
xor
pop
sub
mov
inc
mov
sbb
repnz
xchg
mov
and
insb
mov
call
aas
ss
out
adc
sbb
ret
jecxz
lds
mov
addl
sahf
or
aas
mov
jp
and
jp
push
xor
das
add
aas
loope
ja
mov
outsl
pop
dec
lcall
add
mov
cs
repz
div
dec
repnz
ds
dec
or
xchg
lahf
inc
mov
adc
cmp
push
test
add
jmp
test
out
stos
add
ss
mov
pop
in
mov
xlat
pop
cmp
stos
cld
movsl
and
add
jnp
ljmp
sub
cwtl
cli
jb
jl
add
add
clc
fwait
outsl
aam
ss
shrl
jg
out
push
xchg
inc
xor
iret
loopne
imul
test
outsl
sahf
ss
ficoms
mov
das
xchg
xchg
jb
pop
test
sbb
notb
iret
sub
cmp
bound
ret
pop
mov
sub
imul
aas
lods
fmuls
push
in
cmc
xchg
ret
mov
push
or
push
jg
pushf
call
or
xor
mov
stos
sub
jp
jge
cmpsb
mov
pop
mov
cmp
cwtl
jns
mov
push
aam
cmp
loope
jo
fidivl
mov
lahf
popf
daa
ret
push
hlt
loopne
hlt
ret
pop
rolb
in
icebp
jle
sti
and
cwtl
js
xor
in
sub
arpl
test
mov
std
sti
cmc
mov
and
dec
fsts
push
test
xchg
nop
pop
int3
stc
inc
xchg
xchg
or
push
cli
xchg
into
add
outsl
insl
fcomps
sbb
pop
mov
adc
pop
ficomps
rcrb
in
pop
insb
push
inc
sahf
popf
scas
inc
ret
and
fsubrs
mov
popf
fildl
mov
adc
push
push
jecxz
loope
lret
outsb
mov
cmp
inc
add
fxch
or
jne
int
call
out
xchg
daa
popf
xor
or
decb
mov
test
aas
lods
fisttps
lcall
sbb
dec
data16
or
cmp
mov
pop
in
cmc
sub
test
adc
push
push
stc
imul
mov
push
add
fnsave
setns
cmpsl
xor
f2xm1
xlat
mov
xor
mov
pop
jg
out
mov
inc
repz
xchg
inc
push
push
repnz
or
loopne
outsl
out
daa
sbb
mov
in
xchg
add
mov
dec
sub
push
popa
push
loop
adc
push
enter
cmp
inc
arpl
test
daa
jp
pop
ja
pop
dec
cmp
jp
fimull
mov
push
sbb
cmpsl
pop
mov
adc
jle
ljmp
xchg
sbb
fnsave
pop
scas
out
xchg
pop
xor
jle
mov
inc
lcall
pop
mov
pop
daa
jle
sbb
out
sub
out
push
pushf
dec
jmp
jecxz
je
jne
out
push
mov
mov
data16
push
mov
dec
sahf
data16
data16
arpl
or
jae
imul
int
arpl
scas
cwtl
sub
das
xchg
cmc
das
popf
xlat
leave
adc
les
sub
and
insb
xor
lcall
mov
es
ret
fbld
add
inc
imull
das
ss
push
mov
hlt
mov
xor
adc
jnp
xor
sub
inc
mov
and
xlat
mov
push
jge
int3
sub
lods
pop
or
inc
fdivl
in
dec
push
jo
mov
xchg
in
andb
rcl
out
test
pushf
ja
aas
mov
out
insb
int3
iret
xchg
in
rcl
ret
or
xchg
push
dec
mov
push
pand
xlat
cmp
adc
aas
xchg
movsb
loopne
sarl
insb
mov
mov
mov
xor
pop
fisttpl
push
pop
adc
into
daa
lea
fcoms
and
aas
or
add
jle
dec
adc
mov
adc
sbb
sub
add
lret
nop
data16
mov
test
movsb
and
dec
mov
dec
pop
push
test
pop
add
push
sbb
pop
out
daa
and
test
push
inc
enter
imulb
pop
pop
push
scas
jae
pusha
or
out
xchg
jne
dec
test
cmpsb
fcmovbe
pop
mov
lock
sub
jecxz
mov
lods
sub
daa
sub
or
push
pop
pusha
adc
jl,pt
push
xor
into
mov
int
out
add
cltd
or
int
push
sbb
test
inc
push
jo
outsb
jecxz
sub
lea
inc
outsl
out
mov
test
or
sub
sub
les
in
cmpsb
das
add
jbe
xorl
imul
mov
pop
inc
mull
xor
cmp
fnstcw
bound
or
nop
xchg
shl
fstl
xchg
inc
pop
jg
sub
jmp
cmpsb
push
call
mov
sbb
stos
add
jne
ret
mov
mov
call
data16
repnz
jae
pop
inc
xorb
push
fnstsw
sbb
out
arpl
fnstcw
or
fcomps
rolb
jp
and
dec
jmp
cmpsl
xchg
xchg
mov
jae
and
sub
ret
mov
fistps
lret
push
pushf
mov
int3
xchg
lret
mov
repz
jbe
stos
fst
sahf
push
mov
fcomps
xor
xchg
push
adc
mov
nop
cmp
loope
stos
and
jne
sub
stc
pop
sbbb
flds
lret
cmpsb
cwtl
shll
popa
mov
rolb
pusha
fidivrl
push
test
pop
xor
js
cmp
adcl
aaa
das
xchg
in
scas
sub
stos
inc
inc
and
shll
pop
mov
adc
pop
rcrl
sbb
sub
inc
xor
aam
or
lods
popf
lcall
cltd
into
test
sbb
pop
mov
leave
inc
push
popf
rcrl
pop
jo
cmp
cmpl
pop
movsb
cltd
jecxz
mov
mov
jae
mov
out
mov
int
jl
test
icebp
mov
dec
clc
jmp
mov
cmp
push
sub
pop
rcrl
cmp
push
sbb
jbe
cs
pop
loopne
push
and
sub
cld
xor
cltd
jne
hlt
jbe
popf
jo
mov
int
push
shll
mov
loopne
mov
mov
push
cld
and
sbb
dec
sub
xchg
leave
int3
sar
and
sub
or
push
shlb
cmp
sbb
dec
mov
cmp
push
xchg
jmp
xorl
out
scas
add
mov
test
outsl
cltd
ss
jnp
mov
stc
mov
mov
cltd
mov
imul
clc
stos
xchg
jmp
push
int
out
mov
adc
mov
cld
movsb
xchg
jecxz
jb
xor
popa
jg
sti
pushf
cmc
xchg
pop
hlt
cwtl
fisubs
cld
sbb
sarl
jae
add
inc
dec
sti
popf
add
fxch
sub
mov
jnp
add
xor
xor
cmpsl
insb
movsl
mov
jp
xor
jmp
push
pop
sbb
daa
jmp
jo
sahf
lea
xor
popf
cmp
mov
xorl
push
subl
loope
stc
xchg
leave
fs
dec
in
call
mov
jmp
repz
adc
lods
test
dec
jne
sub
gs
in
fcmovne
stc
cmp
and
sbb
cmp
xchg
cmp
cmp
lds
or
test
les
fimull
repz
xchg
bound
mov
inc
adc
call
add
push
push
ljmp
or
cmpsl
das
gs
arpl
jns
test
pop
xor
fldenv
psubq
mov
popf
mov
mov
fidivrs
ret
shrb
in
cmp
lds
loopne
fs
fbstp
pop
mov
and
cmpsb
and
notb
mov
and
dec
dec
out
push
sbb
inc
in
cmp
mov
pop
insb
loope
jnp
mov
mov
test
repnz
or
pop
dec
jp
cltd
jb
fsubrl
rclb
inc
mov
sbb
sbb
in
insl
sbb
dec
jmp
mov
jno
jge
jmp
icebp
clc
xor
inc
clc
cmp
inc
inc
cmc
cmp
mov
ret
xor
inc
cmp
push
in
push
xor
mov
rorl
push
add
pop
mov
cmpsl
push
out
push
and
pop
pop
jae
mov
adc
inc
push
or
mov
adc
sub
cwtl
incl
int
sub
dec
and
fwait
lret
push
shr
jle
and
js
xchg
loope
lret
sub
adc
dec
lds
xchg
push
pop
mov
xor
stc
nop
mov
sbb
cmc
push
xorb
rcrb
xor
pop
fcmove
xor
pop
dec
xchg
cmpsl
xchg
ss
hlt
sbb
mov
mov
dec
insb
fisttps
push
inc
fmul
pop
ljmp
aam
bound
fcmovnb
out
cmp
inc
pop
icebp
and
nop
or
movsl
lret
arpl
repz
cltd
cli
push
rorb
dec
hlt
stc
mov
jmp
dec
jmp
lret
pop
add
inc
fimull
dec
std
cli
loope
mov
rcl
jb
add
add
loopne
icebp
lock
pop
mov
jns
sub
rol
cs
hlt
adc
jb
xor
push
xor
jne
jbe
out
jo
gs
lods
idivb
and
jle
cli
shlb
cmpsb
int
cmpsb
cmpsb
mov
adc
add
cmp
gs
cltd
pusha
dec
insl
sbb
in
xchg
mov
cmp
leave
not
fldl
ret
jmp
js
mov
mov
outsl
out
movsb
push
or
cmp
xor
xchg
add
cmc
fwait
inc
lea
xor
das
fs
stos
inc
lds
mov
mov
out
xor
mov
mov
stos
sti
pop
xchg
add
jns
scas
js
mov
clc
pop
pop
rorl
jecxz
jo
fisttps
mov
cwtl
add
mov
gs
push
rcrl
popf
sbb
fldl2t
lds
lock
ret
mov
iret
pop
xlat
mov
stos
xor
sbb
ret
out
push
mov
jle
in
xchg
sbb
insb
mov
ja
pop
xorl
and
sbb
jge
xchg
test
inc
and
aaa
es
outsl
leave
aaa
mov
movsb
jg
adc
cmpl
cmpsl
loopne
jge
inc
fiadds
mov
or
inc
inc
and
pop
outsb
mov
mov
adc
xchg
cmp
inc
movsb
mov
cmp
jae
pop
leave
jp
cltd
pop
dec
outsb
inc
sahf
mov
rorl
in
in
dec
mov
xchg
mov
fs
adc
sbb
cmc
sbbb
data16
inc
xchg
jl
inc
inc
mov
cmp
inc
and
push
addb
mov
pop
jp
ss
repnz
mov
cmp
js
cmc
test
lock
ds
cld
mov
stos
mov
pusha
loop
sbb
and
or
mov
into
loope
into
nop
aam
outsl
nop
test
out
dec
ja
pop
call
dec
mov
je
cltd
rcrb
sub
or
cltd
lahf
enter
out
test
cltd
mov
sub
cmpsl
sub
mov
scas
or
inc
leave
cmc
inc
hlt
dec
out
push
jae
xor
outsl
test
ret
outsb
addr16
cwtl
pop
pop
loope
inc
ror
movsl
ss
adc
mov
push
add
movsl
iret
leave
sbb
les
sub
xor
or
or
addl
mov
call
cltd
sbb
push
je
sub
jecxz
add
dec
push
xchg
out
int
arpl
jb
ret
pop
xchg
pop
dec
and
std
in
pop
clc
lods
pop
jne
stc
aam
sbbl
mov
xor
mov
add
lds
inc
fs
mov
loope
in
pop
and
fisubrl
out
bnd
imul
sarb
pop
pop
sub
rcl
jp
sub
std
insb
push
jnp
lods
into
mov
ss
lret
add
jg
sbb
fwait
das
daa
xor
push
and
movsl
dec
adc
or
jnp
jne
push
and
int
fdiv
add
in
pushf
pop
test
test
stc
stc
pop
mov
add
xchg
xchg
sub
xlat
in
xchg
shrl
shr
sbb
ds
adcl
loop
out
xchg
sbb
mov
out
out
jp
sub
ret
mov
xor
and
rep
rcll
cmp
inc
dec
scas
sub
sbb
dec
mov
sbb
cltd
iret
ja
fisubs
sbbl
cmp
mov
aam
fiaddl
rolb
lret
clc
cmp
mov
repnz
xchg
push
test
adc
insb
cld
movsb
int
adc
jecxz
out
lret
mov
sbb
mov
sub
into
xchg
aad
roll
icebp
jmp
or
lds
push
mov
or
repz
sub
dec
aas
test
iret
push
repz
sti
aad
cmpsl
mov
sbb
dec
hlt
rcrb
hlt
bound
bound
lret
ret
jbe
daa
pop
xchg
mov
pop
xchg
xchg
adc
jne
sub
and
imul
adc
out
push
test
and
sbb
push
cltd
sub
daa
xchg
inc
sbb
dec
out
aam
mov
mov
js
mov
sub
in
adc
fsubl
push
fs
movsb
and
test
sbb
je
mulb
scas
or
shll
and
sbb
xorb
fmull
push
lret
pushf
pop
cmpb
push
arpl
sahf
sub
cli
stos
push
fs
xchg
xor
decl
mov
cli
mov
je
pop
cs
sub
add
jb
cwtl
insb
insb
sub
das
jns
inc
jle
mov
repz
ret
inc
es
aaa
loope
aad
fsts
loopne
incb
adc
fmull
pop
fistpll
addb
ffree
dec
lretw
mov
in
cmpsb
mov
std
iret
xchg
pop
ss
fimuls
nop
aam
push
loope
pop
in
cmpsb
insl
add
jb
out
fwait
and
lahf
lcall
movsb
ss
decl
adc
out
mov
movsb
cmp
sbb
and
mov
jl
outsl
mov
js
adc
aam
es
daa
sbb
icebp
jns
std
push
ja
dec
cmpsb
add
orl
adc
aad
mov
fstl
outsl
or
mov
test
popf
ret
out
push
jl
stc
and
mov
out
adc
bswap
scas
jnp
jl
mov
and
mov
add
pop
pop
add
add
rorb
ljmp
and
mov
mov
cmp
shlb
fs
out
mov
jp
into
pop
aaa
scas
pop
add
in
stos
cwtl
xor
xchg
xchg
arpl
test
mov
and
inc
xchg
popf
clc
sarb
pop
in
imul
sub
xchg
test
dec
cltd
in
sub
fsubr
sbb
dec
stos
cwtl
xlat
and
add
icebp
push
popf
pusha
push
xchg
divb
xor
sub
mov
xchg
fs
outsl
int3
aam
es
idivb
or
cwtl
out
xchg
mov
mov
imul
or
pop
rorl
pop
pushf
xor
push
ficoml
orb
push
testl
fs
hlt
sahf
pop
jl
jnp
pop
daa
es
pop
cmp
lcall
sahf
mov
call
mov
mov
add
pop
adc
orb
mov
fiaddl
sbb
sbb
or
rcrb
fs
inc
adc
or
aad
arpl
mov
insl
cmc
xchg
popa
leave
mov
hlt
lahf
sub
rolb
inc
imul
mov
sub
push
adc
movsl
ds
and
mov
sbb
mov
out
or
std
mov
jmp
mov
xor
mov
cmpsl
js
xor
adc
fdivrs
sbb
sub
clc
inc
ds
sbb
ficompl
call
pop
push
inc
xor
push
and
and
out
inc
stc
aad
mov
jno
xor
cs
jmp
ret
pop
and
or
ja
pop
divl
xor
mov
sbb
add
fstps
aam
jne
mov
xlat
lcall
call
xchg
popa
outsb
adcl
cltd
rcll
jecxz
es
jns
xor
dec
mov
loope
sub
mov
inc
sti
fldcw
std
mov
fcmovu
mov
add
lcall
push
cld
addb
add
insb
rcrb
inc
clc
insl
int
ja
addr16
lret
xchg
xor
in
fildl
int
and
cmpsl
cmp
ja
adc
push
ljmp
push
cli
mov
xchg
jno
stos
jecxz
or
aas
mov
aam
mov
mov
leave
jae
cmpsl
rcll
jg
fists
inc
daa
pusha
jmp
pusha
scas
dec
fptan
aam
add
incl
movsb
cmc
or
push
mov
mov
pusha
cmp
jns
xchg
into
daa
and
sub
lods
cmp
jp
mov
and
in
das
inc
sti
xchg
stc
das
adc
arpl
stos
sbb
ja
mov
loopne
or
adc
in
pop
scas
mov
outsb
mov
adc
add
mov
test
lds
lahf
arpl
mov
nop
jg
pusha
add
ret
sub
popf
leave
neg
mov
fdivr
and
cmpsl
nop
int
mov
sahf
mov
sbb
out
jne
cmp
fldl
jl
jmp
pop
push
ljmp
lds
jge
mov
bswap
out
mov
push
decl
push
test
cmp
sbb
out
jmp
shr
push
sbb
cmp
push
shrl
mov
push
pop
xor
inc
lret
cld
pop
call
aas
adcl
mov
loop
sbb
jno
jns
pop
xchg
inc
cmp
out
jmp
adc
mov
cmpb
xchg
jb
pop
sub
rol
test
cmp
repz
jmp
sbbb
stc
dec
xchg
lds
xchg
add
sub
into
xor
stos
jbe
incb
mov
sub
xchg
sahf
cmpsl
test
push
cld
or
cmp
loope
nop
addr16
push
fdivr
xlat
idivb
ljmp
dec
outsl
add
outsl
cmpsl
push
and
ja
add
fistps
shrl
outsb
in
and
stos
mov
addr16
mov
movsl
inc
lret
xchg
xchg
aas
movsb
outsl
cmc
jne
or
mov
jle
mov
ljmp
popa
lods
frstor
push
add
sbb
mov
mov
test
lret
mov
inc
and
xor
lea
mov
xchg
mov
adc
popa
sub
addl
jno
pop
outsb
iret
mov
nop
lret
mov
lcall
add
test
jns
arpl
push
jmp
jo
lahf
loop
into
icebp
je
and
xchg
or
lds
lock
sahf
inc
push
dec
jae
mov
pop
and
cmp
js
call
enter
cmp
test
xor
loope
xlat
outsl
nop
mov
out
lcall
lock
adc
xor
add
dec
push
pop
or
jmp
mov
and
and
or
pushf
adc
xchg
subb
imul
cli
stc
out
add
mov
inc
ljmp
repz
das
mov
icebp
std
mov
mov
add
movsb
rcll
ficoms
in
mov
jge
fcmovbe
aam
enter
aad
push
in
xor
inc
push
push
pusha
sbb
in
add
and
dec
out
data16
fwait
jns
and
push
cs
xchg
jmp
add
leave
xchg
mov
mov
leave
aam
jo
mov
sbb
fbstp
xchg
sub
push
pop
xchg
jle
ja
test
push
mov
cmpl
leave
out
sbb
xor
lds
ljmp
inc
pop
sbb
mov
pop
scas
icebp
adc
xchg
xor
and
pop
mov
cmpsb
int3
insb
call
call
das
dec
rolb
js
movsb
ret
push
xor
dec
or
jae
and
push
jecxz
cmp
xchg
aam
sbb
adc
stos
sub
mov
aas
add
int
dec
inc
insl
push
pushl
pop
scas
jmp
inc
jg
mov
push
mov
mov
loope
cmp
mov
cmp
fwait
xchg
sbb
push
and
xchg
pop
mov
dec
add
subb
push
stos
test
jno
mov
sub
leave
mov
mov
test
gs
bound
pop
lock
in
les
pop
add
sahf
xchg
scas
mov
sub
imul
or
inc
lds
js
ljmp
xchg
jno
std
push
fsts
fucom
push
cwtl
mov
adc
daa
outsb
inc
loopne
cmp
xor
jl
dec
xlat
call
stos
ja
xchg
cmp
pop
int
mov
adc
or
je
fimuls
xor
pop
icebp
bound
das
sbb
or
leave
push
cwtl
sbb
mov
mov
mov
sbb
and
stos
pop
or
popf
dec
mov
rolb
cli
add
sbb
mov
xchg
mov
loop
ret
xchg
push
mov
mov
xor
xorb
jg
jmp
mov
jle
add
test
inc
xor
sbb
in
or
and
adc
sbb
xchg
xor
mov
int
leave
xor
jne
xchg
mov
xlat
icebp
add
sbb
lcall
loop
jecxz
pop
sub
sub
dec
les
dec
outsl
hlt
in
xchg
lret
cmpsb
sbb
add
jbe
dec
mov
iret
rol
cld
dec
in
fwait
repz
jne
lcall
mov
rorl
dec
rcrl
fsubrl
cli
jle
in
mov
pop
aad
daa
mov
repz
pop
push
pop
es
push
arpl
mov
xchg
push
lea
jb
int
clc
test
lds
mov
mov
out
nop
jp
movsl
sbb
int3
or
mov
sti
or
mov
mov
lea
repz
jge
xchg
pop
and
push
inc
aaa
out
mov
dec
cmovno
shr
mov
icebp
fistpll
inc
push
lods
mov
out
movsl
mov
les
add
or
test
cmc
jbe
jne
xor
or
jmp
int
xchg
pop
movsl
clc
jp
je
out
xor
push
mov
cmp
jbe
pop
adc
out
inc
sbbb
subb
add
mov
imul
dec
enter
bound
jns
in
pop
jbe
sbb
rcl
daa
test
not
jmp
push
cmp
stos
fisubl
sub
cmp
aas
pop
xor
push
pop
xorb
fstp
js
inc
mov
push
pop
xlat
or
jne
pop
dec
adc
inc
rorl
addl
cld
cmp
je,pn
push
fistl
pop
shlb
hlt
inc
shlb
inc
mov
push
or
lods
inc
push
imul
add
and
les
jecxz
push
xor
inc
pop
inc
adc
shll
push
das
cmp
xchg
hlt
in
dec
popa
fsubrs
xchg
sbbb
mov
ds
xlat
mulb
das
cmp
or
lret
pop
loope
call
cld
fldt
pushf
rolb
aaa
mov
dec
xor
notb
and
mov
pop
test
cmp
push
test
xchg
int3
pusha
lcall
lea
sbb
pop
or
lahf
xor
data16
cmp
cwtl
int
ret
fstp
pop
cltd
rcll
andb
jl
xchg
xchg
xchg
clc
or
gs
mov
push
and
add
xor
sub
xchg
or
out
pop
xlat
mov
xchg
arpl
mov
sub
mov
push
pushf
inc
inc
js
mov
and
push
xlat
data16
dec
div
rsm
int
cmp
pop
cltd
add
or
adc
adc
ljmp
lock
or
outsl
mov
jmp
insb
sti
mov
dec
adc
fs
dec
mov
jecxz
ret
push
adc
mov
jecxz
inc
sub
lret
rol
inc
xchg
out
bound
lods
mov
jb
in
movsb
jo
mov
or
dec
inc
std
or
and
out
fmul
mov
xor
mov
sbb
xchg
mov
test
xchg
jp
adc
and
push
aam
cmpsl
sbb
addr16
sub
ret
arpl
dec
scas
cmpb
xchg
inc
inc
stos
mov
add
and
ss
and
in
xor
mulb
cmc
mov
ja
cmp
or
push
ret
adc
inc
push
xchg
push
and
add
lret
loop
fs
mov
in
cs
jnp
xorb
xor
or
mov
sti
shll
sub
lods
push
outsl
in
mov
lahf
imul
lods
movsl
inc
inc
mov
or
imul
cmp
shrl
inc
insb
xchg
adc
fmuls
je
mov
lahf
insl
push
mov
sbb
cmpsl
fwait
movsl
and
push
push
negb
stos
cltd
mov
insl
mov
inc
dec
bound
and
imul
fimuls
and
dec
ds
dec
imul
pop
mov
jle
xchg
xlat
in
xchg
scas
incl
inc
pusha
mov
popf
test
adc
enter
and
incb
jmp
pop
sub
mov
jp
aaa
test
outsb
cmp
test
arpl
pushf
push
lea
mov
bnd
mov
push
test
shl
mov
roll
add
adcb
sub
xor
inc
and
jecxz
push
daa
inc
fnsave
enter
jl
adc
xchg
ret
lods
dec
inc
leave
fisubs
mov
sub
imul
adc
cmp
jo
xor
testl
xlat
inc
push
cs
ret
push
in
popa
pop
sbb
loopne
push
sub
rolb
pushf
ds
shl
dec
nop
idivl
shl
xchg
jne
mov
inc
test
bound
inc
mov
adc
pop
add
mulb
mov
or
sub
clc
add
push
dec
fisubl
lcall
mov
sbb
mov
sbb
adc
icebp
push
jnp
mov
lock
or
push
mov
shl
fcompl
dec
mov
fiaddl
xor
xchg
sub
jns
icebp
loope
lock
push
fidivl
iret
aam
and
repnz
arpl
sahf
add
pusha
imul
or
inc
cmp
mov
test
and
out
aas
loope
shrb
int
cwtl
adc
test
mov
aam
outsl
aam
mov
aam
hlt
out
cmp
push
rorl
mov
or
fs
mov
push
push
sbb
xchg
sub
adc
mov
arpl
ficomps
ret
lahf
shl
cmp
icebp
xchg
aaa
sti
jecxz
xor
inc
mov
leave
outsl
push
mov
dec
and
mov
nop
and
adcl
mov
sbb
dec
andb
sub
loop
mov
cli
sbb
push
ljmp
adc
cwtl
mov
mulb
repz
dec
push
sbb
add
fwait
jge
das
sahf
or
push
test
imulb
push
leave
add
shrb
rorb
jg
das
imulb
xchg
mov
movsl
cmp
into
or
and
mov
movsl
imul
inc
sub
add
out
inc
lock
movsb
dec
or
sbb
or
pcmpeqw
push
mov
mov
xorb
ret
push
pop
out
cmc
add
daa
cmpsl
lcall
add
xchg
ja
call
lahf
stos
dec
cltd
sub
mov
mov
mov
pop
jl
lret
sbb
call
int
mov
or
mov
xchg
test
pop
cmp
jo,pt
dec
ds
xchg
mov
test
or
repnz
xchg
jb
hlt
jne
pop
pop
popa
fdivr
ret
xor
arpl
popa
push
shrb
pop
in
adc
int
mov
jbe
xchg
push
mov
cmpsb
pminub
and
or
jle
sti
mov
hlt
pusha
pop
and
adc
or
and
sbbb
jbe
test
data16
es
arpl
push
jae
incb
addr16
call
inc
xor
scas
dec
pop
or
cmpsb
sbb
dec
and
scas
xchg
in
int
add
jbe
push
cmc
jp
xchg
cwtl
rcrb
data16
arpl
cmp
clc
push
rorl
jp
scas
jle
out
mov
inc
into
sub
paddsw
fiaddl
inc
dec
adc
outsb
pusha
lret
cs
jl
jo
mov
fdiv
ret
push
outsl
push
cmpsl
int3
mov
lods
lea
jmp
scas
std
push
test
out
test
inc
pop
fdivs
jle
xchg
mov
dec
push
mov
int
stos
push
jbe
inc
or
in
mov
nop
int3
pop
idivl
push
inc
or
and
mov
dec
fcomps
stc
xchg
fst
ss
push
inc
sub
mov
mov
aas
jo
xor
pop
mov
and
daa
outsl
fdivr
push
xor
dec
push
pop
xor
pop
pop
mov
popa
cmp
aam
loope
xchg
in
mov
fcomp
xchg
rorl
adc
and
xor
pop
xor
sti
sbb
mov
or
cld
sbb
ja
lock
jmp
das
or
or
push
loopne
repnz
scas
mov
cmp
pop
adcb
test
mov
cmc
mov
aad
loope
pop
bound
call
fnstcw
add
jp
sub
jp
mov
loope
xlat
rcrb
or
in
fnstsw
xchg
mov
jg
or
mov
pop
test
lock
aad
push
sbb
jmp
and
xchg
or
add
lods
xchg
push
xor
insl
inc
jmp
out
mov
xchg
gs
pop
and
icebp
lret
ret
cli
cmpl
mov
loope
stos
mov
mov
loop
ret
pop
mov
daa
movsl
ss
das
pop
cmp
cs
iret
and
fwait
bound
js
dec
or
js
xlat
and
sbb
lahf
popa
mov
scas
xchg
mov
inc
stos
push
out
scas
lret
jb
int
popa
xchg
dec
sbb
adc
dec
and
add
pop
mov
paddsw
jmp
outsb
test
cmp
fldcw
or
jl
ss
add
mov
loope
in
incl
or
icebp
leave
nop
inc
jne
clc
jb
sbb
pop
imul
pop
cld
push
pop
popa
push
mov
gs
lock
xchg
aam
inc
pop
inc
popa
push
and
pop
xor
sub
cmc
ds
lcall
ds
add
xchg
das
pop
and
inc
in
sahf
pusha
loope
jae
shlb
cmp
repz
mov
iret
dec
jo
or
cs
jcxz
xchg
adc
and
loopne
ret
je,pn
loop
push
xor
les
inc
jnp
out
ljmp
leave
loopne
cmp
dec
add
in
loopne
fdivl
out
xchg
mov
xchg
adc
shr
xchg
adc
cld
xorb
push
xor
mov
dec
mov
sarl
add
push
pop
sahf
shlb
lea
cmpsb
xchg
mov
mov
pmaxsw
cmp
loop
lods
jg
ds
lods
xchg
mov
fsubr
adc
push
xchg
in
push
add
push
push
ljmp
xchg
pop
mov
les
loope
pop
ja
es
cmp
pop
sahf
out
fdivl
pop
jp
dec
push
and
add
push
mov
adc
sbb
ds
add
xchg
push
dec
mov
mov
jge
jae
or
stos
out
adc
add
repz
lds
sbb
daa
jge
cwtl
pop
add
pop
in
aas
cld
sahf
xchg
xchg
add
mov
add
pop
test
mov
out
je
fisubl
in
pop
repz
dec
std
lea
hlt
xchg
cmc
pop
rorl
cltd
mov
mov
out
aas
push
in
lea
mov
cmp
and
and
mov
push
adc
push
add
out
jp
sbb
jb
bound
lahf
push
inc
shlb
push
and
mov
sbb
rcl
and
mov
push
mov
and
dec
popa
aas
lea
mov
lock
add
cli
cli
ret
sbb
or
in
dec
mov
inc
push
movsl
push
fstl
lcall
fbld
push
mov
jne
push
mov
lret
dec
mov
les
mov
cmp
fnstsw
sub
scas
cmpsb
push
outsb
ja
imul
psrld
test
shll
dec
adc
jge
jo
in
mov
xchg
cmc
mull
orl
or
sbb
push
mov
adc
loope
cltd
shrb
xchg
in
dec
xor
or
jo
sub
mov
pop
pop
and
add
fnstenv
adc
addr16
iret
enter
cmp
out
cld
hlt
test
sbb
sbb
push
dec
in
xchg
dec
adc
and
xchg
cs
jo
test
cmp
sbb
add
push
fnsave
inc
imul
adc
movsl
lahf
mov
into
enter
aad
or
orb
movsl
fimull
mov
and
rcrb
pop
mov
xor
mov
push
js
mov
add
inc
pop
imul
xor
mov
ds
daa
sbb
clc
sub
xor
adc
xchg
sub
xchg
aam
xor
not
cmp
pop
jecxz
xchg
xor
sub
ret
cmp
cltd
stos
or
pop
xor
push
int
loope
or
pop
aaa
cmpb
lahf
xchg
jge
shlb
xor
mov
lea
push
mov
push
sbb
lahf
leave
cltd
stc
and
cmp
loop
or
outsl
xor
cmp
mov
shrb
lock
mov
incl
push
cmp
out
movlps
xor
std
popf
cmp
inc
sbb
cmp
cwtl
dec
orl
imul
mov
js
dec
mov
test
cs
dec
aas
and
jo
pop
push
and
push
add
bound
mov
cmpb
or
scas
sub
imul
lahf
ja
mov
pop
adc
jle
mov
and
enter
jno
mov
add
mov
lods
mov
xchg
lcall
int
cs
rolb
jb
mov
aaa
jbe
mov
movsl
aaa
div
inc
loopne
sbb
fcmovne
cmpsl
cmp
push
fimull
fucom
addb
mov
repz
pusha
add
add
xchg
mov
gs
mov
mov
push
stos
loope
jecxz
cltd
mov
nop
js
or
add
mov
and
ja
int
pop
dec
jb
insb
pusha
movsb
mov
and
xchg
xchg
cs
ret
xchg
aas
pop
cmp
mov
mov
pop
mov
icebp
mov
loopew
dec
pushf
inc
testl
out
mov
cmc
sbb
stc
push
lret
ja
punpckldq
mov
in
leave
mov
loopne
sahf
subb
pop
pop
mov
adc
inc
mov
aam
iret
dec
push
int3
xchg
push
testl
jnp
scas
cli
mov
fwait
lods
sbb
fs
pop
xchg
sahf
repnz
faddp
mov
inc
push
shld
dec
sub
or
stos
mov
lock
int
icebp
jge
cmp
stc
test
cli
sub
cltd
or
adc
pop
pop
pop
lret
stos
or
or
xor
lods
sbb
dec
dec
sub
push
cwtl
xchg
inc
jno
sahf
es
pop
ja
xor
or
xchg
add
mov
shl
cmp
and
rorb
inc
pop
scas
pushl
imul
mov
mov
into
cld
sub
jg
jb
push
push
cs
out
mov
jp
scas
inc
js
in
gs
in
mov
sbb
mov
adc
inc
and
std
imul
jae
orl
jno
jno
mov
add
adc
pop
stos
cmp
jo
fnstcw
pop
push
outsb
jae
nop
cmp
push
es
insb
add
push
cli
pop
fimull
cltd
xor
stos
ljmp
popf
mov
push
daa
mov
mov
ds
xchg
scas
call
insb
adc
js
int3
push
sub
inc
in
mov
aam
lods
sub
test
movsb
leave
mov
inc
pusha
lock
pop
cmp
fsubs
push
push
fs
pushf
push
xchg
loopne
dec
fsubr
mov
xchg
mov
sub
xchg
test
insb
test
mov
cmc
cmpsb
ffreep
cmp
push
ja
sti
inc
lods
sbb
data16
mov
add
or
js
mov
pop
xor
cmp
mov
adc
dec
cmpsb
insb
outsb
test
inc
ret
mov
jg
xchg
scas
daa
sub
cmpsl
add
popf
or
adc
mov
test
imul
dec
divb
stc
in
adc
xchg
in
imul
fidivrl
sbb
mov
cltd
shll
push
push
and
mov
add
add
add
dec
xrelease
mov
sub
pushf
lret
or
push
insl
in
lret
push
lock
xchg
or
rclb
mov
sub
xchg
mov
mov
orb
pop
adc
push
add
xor
xor
pop
mov
push
out
lds
adc
push
jbe
pushf
rol
sub
jecxz
in
insl
cmp
loopne
and
fmuls
jg
mov
cli
aad
pop
out
imul
jmp
in
into
mov
popl
je
sub
cmp
mov
inc
orb
dec
lock
mov
repz
out
cwtl
imul
stos
icebp
sbb
sbb
ffreep
mov
mov
enter
in
xor
or
or
pop
xchg
mul
jns
add
and
hlt
mov
into
jmp
mov
es
push
hlt
sahf
je
js
mov
xchg
cmp
add
xchg
sbb
dec
xor
push
lahf
pushf
xor
mov
and
sub
jmp
insl
lods
pop
adc
add
imul
out
push
cs
jo
imul
bndstx
in
imul
arpl
inc
cmp
jmp
jmp
hlt
int3
push
lahf
addr16
adc
or
pop
sub
das
insb
sti
je
mov
xlat
and
adc
add
test
mov
call
lret
jmp
xchg
in
lret
cwtl
dec
out
je
dec
mov
in
inc
insb
scas
adcb
mov
cmp
xchg
inc
jecxz
cld
outsb
mov
jge
xlat
roll
inc
adc
sub
enter
push
push
mov
in
int3
fdivrs
cmc
xor
or
pop
sub
jne
jge
pop
mov
or
das
pop
arpl
out
loopne
jb
outsb
mov
pop
sbb
sbb
mov
dec
shll
je
mov
pushf
cs
mov
sub
sub
push
mov
xchg
xchg
shlb
dec
sbbb
std
dec
xor
lods
in
mov
cltd
sub
pop
fwait
push
shlb
push
cmc
filds
out
ret
push
jbe
or
jecxz
popf
inc
in
arpl
ja
push
je
test
pop
mov
sub
popa
lea
into
dec
jge
jo
icebp
or
add
fistpll
mov
adc
shl
sbb
ret
push
mov
insb
inc
adc
or
pop
mov
push
xchg
or
mov
and
and
push
mov
push
jp
call
cmp
lea
push
xchg
and
inc
insl
sbb
or
imul
imul
fldcw
mov
dec
stos
dec
mov
add
or
xchg
sub
cmpsl
dec
lret
test
pop
adc
fs
psubsb
push
pop
or
pop
hlt
sbb
fsubl
dec
in
sbb
xchg
add
stc
jo
mov
lock
sbb
scas
rorl
jb
dec
out
fidivs
iret
loope
push
in
xor
sub
xchg
mov
adc
inc
sbb
xchg
pusha
mov
jge
lds
hlt
xor
lods
lret
pop
int3
mov
repnz
adc
lods
jno
fstpl
out
inc
insb
and
aad
stos
mov
mov
mov
cltd
adcl
dec
inc
fdivl
daa
inc
mov
or
jbe
jl
ret
jp
test
mov
xchg
inc
or
xchg
xchg
stos
in
mov
into
fidivl
sbb
jbe
pop
dec
call
test
mov
movsl
xchg
dec
int
repz
mov
aaa
out
dec
jle
push
cmp
movsl
rcrl
loop
jle
cmp
sub
lea
int3
pop
inc
cs
scas
cmpsb
in
gs
push
pop
js
aaa
jecxz
test
xor
adc
inc
push
mov
nop
push
add
push
je
out
lods
inc
out
or
fcoms
sub
loope
sbb
add
mov
push
mov
movsb
testl
adc
jbe
lcall
call
and
in
fsubr
repnz
loope
lea
int3
push
xchg
cmpsb
lcall
insb
sub
xor
cmp
jmp
cmpsb
xchg
inc
xchg
lea
jnp
dec
mov
or
orb
mov
rcrb
dec
cmc
add
sbb
xor
fs
lahf
sub
lock
ljmp
test
xchg
push
xchg
aaa
or
ret
or
push
cmp
push
jg
lea
fdivp
test
adc
icebp
mov
sub
ljmp
mov
lea
dec
and
adcb
shll
cmp
xchg
outsb
shl
movsl
ss
mov
and
push
adc
fimull
pusha
clc
test
pop
mov
lret
out
lahf
dec
fmulp
test
filds
dec
mov
shlb
out
mov
pop
movsl
pushl
scas
add
ds
in
or
inc
iret
dec
mov
pop
ficoms
push
jle
jl
test
dec
fisttpl
loopne
jno
bound
ds
xor
dec
mov
ret
stc
jne
xchg
sub
scas
stos
pop
xchg
and
repz
popl
add
lea
inc
jno
je
add
dec
mov
cmpsl
xchg
mov
lock
jle
inc
jbe
sahf
dec
or
call
out
js
rclb
cmpl
aaa
ja
outsl
stos
lret
dec
in
push
shll
adc
loop
popa
test
sbb
add
in
pop
xor
add
cs
aam
cmpsl
push
push
jmp
shll
or
and
scas
jbe
shlb
lods
push
repnz
lds
pop
push
pop
lods
cwtl
mov
popf
xchg
lock
popa
mov
xchg
inc
out
inc
aas
in
cwtl
cmp
lea
push
pop
sub
mov
inc
ret
fwait
sbb
xchg
aad
roll
loop
aad
xor
inc
and
sbb
into
int
lcall
iret
pushf
testb
fs
and
xchg
sbb
adc
roll
icebp
sbb
int3
ret
ds
ja
dec
sub
outsb
lcall
mov
jmp
mov
les
jo
nop
push
xchg
and
mov
out
mov
push
jae
scas
push
insb
inc
popf
push
inc
lock
mov
in
or
loop
mov
mov
dec
sbb
out
xchg
push
test
neg
out
arpl
les
neg
sbb
add
ljmp
pop
mov
lods
add
mov
test
nop
ljmp
pusha
or
repz
clc
add
inc
cmpsb
call
test
sahf
or
orl
or
sub
pop
test
mov
movsl
or
xor
xor
notb
pop
lock
rorl
ja
movsl
xor
cmp
sar
das
in
shrl
lea
sbb
push
cltd
adc
fstpl
scas
dec
stos
mov
cli
mov
pop
mov
sahf
sub
les
outsb
adc
pop
jmp
lret
ja
test
imul
cli
jo
mov
sub
push
sbb
scas
sahf
aas
adc
dec
xchg
cli
mov
sbb
inc
dec
push
mov
test
and
repnz
xchg
pop
mov
lea
daa
loope
test
pop
pop
sub
jae
add
loopne
sbbl
das
xchg
jbe
pop
xlat
push
xchg
cmpsl
dec
addl
std
addl
add
jb
addl
push
cmp
divl
movsl
data16
jge
fsub
cmc
pop
pop
add
dec
mov
push
mov
and
jno
dec
fisubl
lahf
xchg
xchg
lods
mov
cmp
mov
sbb
cmp
sbb
add
icebp
mov
dec
cmp
mov
pop
push
pop
testb
jl
arpl
or
insl
cmp
int
cmc
outsl
repnz
xor
test
stos
test
push
or
jge
repnz
popa
popa
xchg
add
dec
out
jp
sub
push
and
stc
ljmp
adc
ss
ljmp
mov
test
shlb
ljmp
lods
mov
sahf
dec
jl
je
hlt
inc
pop
testl
mov
ljmp
cmpsl
cmc
push
xor
cmp
mov
jbe
lods
add
push
mov
orl
mov
jae
aas
lahf
int
mov
test
xchg
frstor
es
sbbl
cld
or
xchg
repz
mov
fwait
dec
cwtl
or
dec
push
fs
into
movsb
test
cmc
mov
push
pusha
mov
xor
xchg
cli
cmp
lret
jecxz
sub
shlb
das
and
or
xchg
das
push
pop
push
pop
ret
lret
dec
stos
movsb
xchg
loopne
sub
ja
jl
lahf
pop
add
cmp
jmp
jle
cmp
out
ror
cmc
mov
shlb
das
aad
xchg
shll
fld
add
testl
insb
xor
js
jno
xchg
xor
clc
loopne
jo
fistps
sub
lret
icebp
lea
sub
inc
inc
mov
jmp
sbb
daa
push
rcll
test
xchg
shr
adc
jecxz
movsb
adc
shlb
and
pop
mov
gs
mov
nop
mov
adc
out
push
mov
ja
inc
dec
sbb
jo
imul
cmpb
push
and
sub
cltd
push
insl
pushf
dec
pop
popf
and
and
shrl
xor
aaa
std
cmp
jne
hlt
add
out
sarb
out
lret
lock
nop
lods
std
jb
pushf
push
into
pop
aas
cmpsl
inc
add
or
jle
movsl
jno
jae
mov
xchg
cmp
push
push
lods
inc
in
add
fbld
xorl
lods
cmpsb
js
adc
insl
cmp
and
cltd
or
shll
adc
mov
jmp
dec
xor
and
repnz
jno
sub
out
cmp
stc
xor
std
dec
fstl
out
rolb
mov
pop
push
ljmp
scas
jns
adc
stc
arpl
dec
mov
sbb
xchg
int3
and
add
jns
loopne
add
outsb
movsb
pusha
jno
icebp
or
sbb
mov
jp
cmpsl
stos
mov
movsl
xchg
inc
push
decb
out
sbb
and
das
aas
dec
in
mov
inc
aaa
sar
mov
pop
fidivl
arpl
inc
mov
dec
dec
pop
popf
cld
or
lea
stos
jmp
sub
xchg
sub
fdivp
cmpsb
cmp
outsl
scas
mov
adc
mov
add
and
jmp
mov
adc
pushf
mov
pop
loope
negb
sbb
push
bound
xchg
jle
push
mov
ret
outsb
and
aas
adc
lds
lds
adc
orb
mov
dec
gs
scas
cmp
in
stos
pop
cli
lahf
mov
ja
and
inc
stos
xorb
test
pop
inc
data16
adc
test
mov
int3
cmp
fld
aaa
repz
arpl
cmp
mov
cmovo
test
orl
pop
pop
cli
clc
lcall
push
cld
adc
cwtl
xchg
enter
iret
push
inc
push
push
cltd
inc
pop
jle
insb
adcb
ss
repnz
xor
outsb
dec
in
out
mov
int3
fs
push
into
add
push
sub
into
fidivs
inc
xchg
cmc
adc
fxch
lahf
or
pop
ds
rcll
xchg
outsb
sbb
ffreep
jbe
cmp
sti
pop
pushf
dec
cltd
cmp
push
stos
scas
testb
fscale
ja
pop
add
xchg
fidivl
ss
add
and
aad
icebp
xchg
cmpsl
scas
push
xor
incb
imul
outsb
notb
mov
popa
sbb
mov
sarb
xchg
cmp
pop
pop
or
insl
mov
cs
sub
test
and
popf
cmp
sbb
xor
mov
fstl
cmc
daa
xor
sub
fistpll
test
loop
push
dec
popa
inc
imul
js
jb
or
adc
mov
inc
pusha
mov
xchg
pop
push
pop
cltd
mov
test
push
pop
and
into
stos
aas
mov
add
in
popa
outsl
fwait
gs
inc
das
dec
mov
daa
cmc
sbb
mov
lret
shrl
negl
xor
sub
ss
push
add
sub
pop
jno
das
push
imul
imul
cmpsl
cmc
fdivs
dec
dec
ljmp
out
shll
pop
setle
cs
jp
sbb
shll
dec
adc
adc
popa
mov
pop
std
cmp
test
jmp
gs
inc
andl
test
cmc
shl
or
notl
cmp
xchg
mov
mov
lret
lods
sub
aad
mov
push
popf
xorl
mov
xchg
xor
popa
call
inc
lea
xchg
hlt
jge
clc
int
sti
cmp
push
mov
xchg
ljmp
sbb
and
shr
jne
jp
inc
xor
je
dec
mov
mull
jle
cmp
repz
xor
xchg
xchg
bound
sbb
jmp
outsb
jge
mov
pop
lods
movsl
cwtl
xchg
std
pop
cmp
jge
cmp
cld
inc
lea
and
push
push
scas
push
dec
pop
shlb
inc
pop
out
add
rclb
test
add
clc
cmpsb
xchg
mov
sbb
jne
push
mov
push
cmpsb
orl
cwtl
les
ffree
inc
in
pop
sub
bound
daa
mov
int3
push
jle
mov
dec
dec
or
popf
pop
pop
dec
dec
and
movsb
rorb
dec
pop
push
sbb
push
push
sub
rcrb
sbb
idivb
inc
jnp
mov
jnp
and
jmp
lock
out
xor
mov
mov
mov
fs
jmp
sbbb
shrl
inc
into
pusha
ret
or
es
pop
and
jns
jle
std
sti
nop
sbb
lods
adc
inc
imul
pop
xor
add
push
push
fidivrs
jb
cmp
and
xorb
pop
and
dec
out
into
out
and
js
push
ja
xchg
push
out
mov
mov
add
shll
mov
jno
mov
cmpb
xor
gs
adc
jo
iret
call
or
stc
xchg
add
mov
adc
rcrb
ss
mov
dec
ret
mov
mov
js
mov
mov
daa
lahf
cmp
call
rep
js
data16
sahf
mov
mov
fiaddl
push
gs
mov
neg
inc
mov
mov
jo
int
sub
sbb
push
insb
jg
popa
nop
fucomi
mov
mov
push
sbb
fdivs
lods
lds
mov
stos
push
mov
adc
rcll
imul
test
inc
mov
nop
push
clc
lock
and
mov
repnz
negb
xchg
jnp
clc
lds
andl
jl
or
lock
lock
jno
into
test
fwait
shrl
sub
test
jmp
fcomps
mov
inc
mov
mov
xchg
shrl
insl
xchg
pop
xchg
cmpsl
xchg
cltd
out
or
aam
rorb
ret
cmp
mov
push
ss
outsl
push
stc
lahf
ret
xchg
sbb
jb
ds
jae
cwtl
push
or
add
xchg
insb
add
push
jno
xchg
or
mov
xchg
ja
popf
sub
jecxz
mov
mov
xchg
insb
rclb
xchg
clc
mov
sti
hlt
lret
sbb
xlat
mov
and
mov
subb
cmp
xor
out
mov
shrl
je
push
int
into
ss
cmp
fidivrl
xchg
sahf
out
je
and
push
and
jp
sbb
add
xor
es
cmp
movsl
cmp
rorl
inc
add
mov
test
xor
sbb
repz
or
out
movsb
sub
and
aas
cmc
inc
inc
xchg
push
loope
add
push
or
std
xchg
xor
mov
push
daa
pusha
xor
test
jg
lret
das
cmpsb
cltd
or
mov
push
add
scas
push
push
mov
add
mov
sub
jne
fsts
pop
ja
popa
aaa
xor
int
sahf
inc
das
xchg
push
bound
lods
xchg
bound
push
sbb
inc
in
pop
mov
add
mov
jp
add
adc
xor
das
aam
inc
pop
pop
mov
es
test
xlat
push
jmp
sub
out
in
mov
xchg
stos
iret
loop
jg
aad
or
lahf
dec
decb
outsl
dec
pop
pop
add
push
lock
gs
lcall
add
mov
jle
xlat
gs
sub
scas
mov
gs
add
lea
orl
mov
aad
lret
clc
pop
sbb
pop
cmp
mov
cmp
addr16
xchg
and
call
pop
imul
xchg
sub
xor
in
dec
pop
mov
cmp
lods
adc
sub
sbbl
dec
jnp
mov
cmpsl
out
sahf
xchg
adc
sbb
out
adc
cmp
loope
decl
add
pushf
lock
dec
out
xchg
jmp
inc
mov
popf
out
daa
jecxz
jnp
xor
sub
mov
jge
mov
or
repnz
in
sub
mov
xchg
data16
xchg
daa
xchg
lret
adc
shlb
mov
lret
jg
scas
or
sub
clc
lret
pop
mov
cltd
lahf
push
adc
sbb
fsubrl
mov
mov
shll
jl
xchg
push
xchg
insb
pop
jbe
outsl
les
sbb
daa
inc
push
adc
mov
sub
push
jne
sbb
je
dec
push
roll
sar
xchg
pop
ret
jb
dec
gs
pushf
pop
dec
sub
lods
fstpl
aam
scas
jnp
aaa
or
jge
fisttps
leave
mov
sbb
xor
jl
mov
rcrb
outsl
mov
mov
incb
cmc
xchg
adc
xor
aad
push
or
push
push
imul
xor
or
inc
in
outsb
push
fisubl
or
push
mov
fidivl
cmp
insl
push
inc
iret
ficoms
insl
sub
daa
adc
add
mov
decl
cmp
jo
add
jecxz
negb
mov
cltd
repz
xlat
push
xor
jp
inc
jno
cmp
xor
clc
jno
add
inc
lret
rcrl
cmpb
stos
lret
cmc
push
iret
mov
push
idivl
aad
int
cmp
cmp
stc
int3
push
and
xchg
or
pop
rcrl
lahf
mov
inc
push
jno
jge
outsb
jne
sbb
fstps
movl
punpcklbw
loop
subb
jae
es
cli
fst
out
insl
xor
or
add
sahf
test
dec
fdivs
pop
fsubrl
jnp
cltd
push
cmpsl
mov
mov
lret
dec
push
push
sbb
mov
stos
sbb
pusha
xor
mov
push
inc
roll
addb
mov
mov
rorb
inc
push
cwtl
jbe
add
jae
cmp
test
in
cld
xchg
loope
add
sti
fnstenv
cli
add
cmpsb
mov
dec
hlt
sahf
jecxz
jl
lret
std
stos
rcrb
aad
dec
int
xor
pusha
sbb
test
out
out
hlt
and
mov
popa
flds
sbb
in
fimuls
dec
dec
xchg
xchg
mov
push
shlb
int
mov
inc
movb
lcall
fs
int3
fwait
iret
push
in
add
pop
cmp
test
aaa
mov
repnz
ss
inc
inc
mov
adc
push
xchg
push
cs
pop
xchg
fisttps
push
adc
lcall
add
sub
sahf
sub
add
mov
adc
out
jmp
jb
mov
sahf
mov
lea
test
xchg
xchg
mov
push
xor
sbb
nop
cmp
adc
or
test
sbb
add
aad
adc
adc
cld
and
sbb
js
push
dec
mov
sub
xor
jns
push
fistps
mov
sbb
pmaddwd
mov
ret
or
pop
cmp
ja
jnp
xchg
sarb
jmp
ljmp
push
sub
inc
mov
inc
dec
push
test
and
mov
das
adc
sub
daa
je
inc
inc
add
les
mov
cld
inc
clc
sub
inc
mov
sti
enter
or
xchg
jns
scas
cmp
push
and
shll
imul
sub
or
or
xor
push
jg
jae
sub
cld
fxch
addr16
dec
push
jbe
cwtl
mov
je
sub
pop
add
mov
pop
lods
sbb
adc
pop
fsubrl
insb
pop
insl
outsl
cmp
nop
push
fsub
adc
and
push
lgs
fidivs
mov
aam
les
shll
mov
ja
mov
sub
lea
pushf
and
pop
pop
test
stos
rcl
cmp
int
xchg
cltd
dec
icebp
daa
arpl
mov
push
pop
movsb
test
add
cmp
test
daa
and
jp
hlt
sti
nop
jno
aad
xchg
and
fisubl
cmc
test
pop
push
adc
mov
icebp
add
jp
stc
aaa
bound
mov
mov
sub
stos
test
inc
pop
lods
or
inc
aaa
aad
xlat
mov
mov
jle
adc
adc
adc
icebp
pop
sbb
jae
dec
add
daa
popf
add
adc
insb
and
test
dec
dec
stos
dec
dec
push
and
inc
push
scas
jns
mov
mov
aaa
rcrl
das
js
xchg
test
pop
and
pop
pushf
add
inc
jge
inc
jmp
enter
or
inc
jns
dec
push
mov
mov
sbb
xor
mov
negb
pop
xor
or
xchg
xchg
popf
imul
pop
cltd
imul
pop
mov
ficomps
sub
int
xor
cmpsl
add
sub
test
dec
mov
push
sbb
sarl
lret
mov
ja
xor
fiadds
enter
mov
test
cli
in
mov
mov
push
repz
mov
ja
pop
lods
aas
data16
jns
lds
decl
aaa
insl
xlat
add
loopne
je
mov
loop
sub
aas
mov
pop
addl
mov
imul
hlt
sub
fcomip
aas
pop
fsts
stos
jb
imul
fcompl
movsb
cmc
pushf
inc
shl
lret
test
aam
jmp
icebp
pop
call
arpl
rcr
popa
inc
fwait
jl
cs
xorl
cmc
and
sbb
cwtl
and
add
push
sbb
mov
imul
stc
ss
mov
mov
xor
and
out
xor
sbb
jae
inc
js
inc
cs
mov
mov
in
adc
pop
dec
mov
dec
outsl
jl
sub
ret
cmp
or
clc
push
rorl
inc
out
mov
imul
sbb
sbb
in
inc
jg
ret
stos
fcomp
push
sti
shr
mov
mov
fstl
adc
insl
pop
or
pop
mov
notl
cmp
dec
outsl
fimuls
cmpl
add
or
lea
pusha
mov
jecxz
bound
push
pop
sbb
push
mov
dec
lock
adc
insb
jae
adc
and
mov
sub
and
fdivrl
pop
in
stos
and
adc
or
ret
jo
fs
les
dec
sbb
and
dec
push
mov
mov
ja
push
in
lahf
adc
cmpl
cmpsl
repnz
test
push
in
xchg
cld
cmp
imull
inc
xchg
inc
lahf
jecxz
mov
or
ret
xchg
insl
in
jne
pop
xchg
jg
insb
add
cmp
mov
movsl
xor
js
mov
loop
xor
es
inc
mov
inc
ljmp
pop
mov
xchg
aas
sbb
and
popa
es
insb
ds
fdivl
movsb
ja
loop
and
sbb
xor
pop
mov
inc
shll
pop
stc
mov
iret
or
push
rclb
repnz
jae
adc
jae
mov
sbb
adc
nop
dec
push
addr16
cmpsb
pop
aam
addr16
inc
push
pushf
out
sbb
lretw
lahf
lea
dec
pop
jl
test
xor
pop
sub
test
stc
adc
xor
add
out
dec
int
mov
iret
orl
test
fnstenv
js
sub
aad
fisttps
mov
push
loopne
cmp
add
mov
mov
pushf
sub
out
arpl
mov
repz
cmp
imul
loopne
push
mov
push
dec
insb
daa
clc
cmp
inc
je
stos
adc
jae
dec
mov
pop
add
in
cwtl
in
call
mov
push
std
arpl
and
xchg
xchg
xchg
and
sub
rcrb
daa
mov
jbe
xor
aas
push
es
inc
pop
inc
push
stc
gs
test
pop
mov
xor
std
xchg
pop
pop
fwait
cmpsl
push
xchg
add
rcrl
sarb
cmpsl
dec
loop
add
imul
decl
cmp
aas
lahf
or
or
adc
adcl
lahf
mov
addl
lahf
sub
mov
jecxz
imul
inc
adc
push
cld
sub
push
lds
leave
or
movsl
dec
bound
mov
testb
push
scas
mov
fcoml
in
jnp
test
hlt
adc
xchg
lahf
cmp
cmp
test
inc
fsubr
lret
fmull
sbb
sbb
dec
push
push
pop
sbb
dec
add
repnz
inc
popl
aam
cwtl
inc
jmp
lods
test
enter
jns
into
call
hlt
js
xchg
xchg
jne
ds
mov
jb
aas
xor
jl
into
sbb
movsb
and
xchg
mov
scas
pop
roll
pop
ja
or
stos
xchg
pop
popf
inc
lds
push
mov
lret
jp
enter
inc
out
cli
pop
fcmovbe
xchg
add
repnz
pop
xlat
cmp
inc
in
mov
pushf
add
sub
inc
scas
insb
mov
fwait
loope
cltd
push
cmp
leave
pop
xor
stos
push
jb
xchg
sub
jbe
sub
stos
js
out
xlat
icebp
popf
out
xor
xchg
mov
cmp
mov
sub
mov
jl
jbe
xor
cmp
push
jmp
loopne
and
push
or
push
add
out
and
and
sub
pusha
popa
std
test
daa
insl
or
adc
jo
subb
bound
push
and
and
or
sbb
mov
mov
dec
lods
xlat
lods
fiaddl
inc
and
mov
inc
xchg
and
add
mov
xor
lea
cmp
mov
mov
push
ljmp
in
mov
mov
hlt
test
sbb
pop
in
mov
je
out
cmp
pop
sbb
cs
mov
add
icebp
add
imul
mov
push
repnz
fimuls
out
fcmovnbe
push
dec
push
add
jmp
imul
xor
sbb
icebp
dec
je
inc
adc
cwtl
adc
orl
push
or
es
xchg
iret
rolb
rcrb
push
decb
dec
and
neg
insb
cmp
loope
push
stos
in
stos
push
xchg
sti
jnp
iret
popa
rorl
sbbl
repz
lods
mov
sbbb
outsb
mov
jb
jo
psubusw
or
mov
mov
jp
sbb
push
xchg
sahf
sti
add
jg
cwtl
add
arpl
andl
jle
inc
test
test
daa
add
sub
jb
jnp
leave
sbb
sbb
pusha
mov
lret
ss
mov
xor
pop
add
cmpsb
cli
outsb
cmp
ret
xorl
sub
jp
lock
inc
inc
sub
or
or
lods
cltd
mov
and
push
push
mov
jae
adc
lock
dec
mov
imul
dec
jb
cmc
lret
xor
sbb
mov
gs
lret
movsb
aad
pop
ljmp
push
and
push
mov
scas
xor
repz
sti
cmp
dec
push
test
push
sbb
pop
rcrl
dec
fnstsw
push
testl
sbbl
push
je
jbe
xorl
jns
cmc
mov
fisubl
fstpl
aas
pop
mov
outsb
out
sub
out
xor
jne
dec
mov
cli
or
scas
cmp
inc
xor
xchg
sub
out
mov
sub
jecxz
adc
jae
sub
inc
pop
mov
mov
fnstcw
out
pop
or
jp
test
imul
mov
cmc
mov
add
push
xor
dec
push
scas
xchg
pop
adcb
mov
lds
push
fisubrs
mov
dec
das
or
xchg
jne
sbb
or
enter
inc
add
jle
and
pop
lods
movsb
or
loop
mov
stc
test
pop
popf
imul
popf
ss
stc
push
push
ds
or
stc
arpl
ss
push
pop
mov
jle
out
adc
or
pop
popa
or
sbb
jne
ret
into
mov
jnp
in
cltd
jl
leave
add
das
and
ds
repz
in
cmpsl
sub
mov
or
push
ja
jmp
jo
outsl
jle
mov
sub
test
xlat
rclb
out
lods
leave
dec
sar
int3
jle
ret
aam
outsb
cld
insl
in
jmp
and
pop
sahf
ret
arpl
lret
aad
fidivl
sahf
stos
test
mov
sbb
enter
cmpsl
aam
xor
stos
in
pop
loopne
push
out
into
pop
xor
in
jle
or
gs
pop
or
xor
mov
and
sbb
add
js
xchg
js
mov
lods
jo
andl
adc
in
push
dec
mov
bndldx
in
cmp
pop
or
icebp
xchg
sbb
or
dec
sbb
cmc
idivl
push
xchg
mov
jb
xor
pop
pop
xor
and
jns
cli
xor
cmp
jecxz
sub
repz
mov
xlat
lds
call
je
aam
popf
push
adc
out
mov
and
movsb
xor
cmp
sti
adc
and
jo
mov
jns
jp
repz
aad
xchg
inc
sbb
js
cli
les
fs
inc
clc
mov
lock
or
andl
leave
lret
call
rolb
xchg
int
sarl
inc
dec
rcrl
aam
push
aam
pop
sbb
loope
ja
add
leave
loopne
arpl
ds
notl
mov
dec
fcoms
scas
fimull
sub
das
add
mov
adc
sub
push
xchg
sub
test
ss
fdivs
jp
mov
rcrl
push
test
jg
scas
jnp
jge
outsl
jb
sbb
sbb
pop
sbb
repz
je
arpl
daa
in
movsl
leave
sub
sarl
push
sbb
movsb
xchg
scas
pop
inc
jp
pop
and
insb
jns
sahf
popl
stc
stos
insb
ljmp
int3
mov
loop
mov
stos
cmp
mov
ljmp
push
sbb
adc
in
pop
nop
mov
fcmove
jnp
or
out
xchg
insb
dec
mov
fucomip
std
nop
out
or
jb
inc
cmp
daa
mov
arpl
or
add
movl
dec
fsubrl
cld
sub
pop
jecxz
push
aaa
dec
dec
into
sub
std
movsb
push
jp
cmpsb
adc
mov
add
jae
idivl
daa
and
and
jne
mov
mov
es
and
out
sahf
repnz
pinsrw
add
dec
xlat
mov
leave
xlat
notl
into
xchg
shl
inc
test
hlt
push
lea
fs
aam
aas
stos
jl
jmp
xor
cmp
mov
mov
push
pop
stos
adc
xchg
imul
or
or
pop
shrb
jge
outsb
xor
in
jle
xchg
push
or
push
negl
loope
and
mov
enter
outsb
push
push
jecxz
mov
scas
push
add
xchg
mov
add
xchg
jno
push
jle
out
and
mov
mov
aas
adc
or
inc
into
fs
scas
in
pop
nop
into
mov
cmp
adc
andb
or
xchg
mov
fsubrs
ds
fidivl
mov
dec
shll
dec
in
sbb
jnp
push
sbb
add
inc
cmp
pop
and
int3
jno
das
es
sbb
jl
lret
or
and
stos
mov
iret
call
push
and
test
pop
int3
or
int
cli
cmp
xchg
push
mov
jbe
test
ss
dec
shll
scas
dec
pop
push
pop
ss
ret
pop
repz
rolb
test
in
pop
inc
inc
shrb
es
ret
add
push
fldcw
testl
cmp
adc
lods
out
lea
fistpll
and
daa
pop
jo
rorl
in
out
enter
fndisi(8087
adc
stos
or
movsl
and
aas
negl
hlt
movsb
add
pop
sub
pop
lds
loope
mov
sub
cmp
mov
sbb
inc
out
mov
in
dec
int
push
imul
fxch
sub
mov
push
cld
cmp
jge
mov
sub
repnz
pop
sub
loopne
addr16
pop
pop
dec
add
into
and
ja
outsb
test
push
fdivr
or
in
and
pop
xchg
cmp
adc
jnp
nop
pushf
cmpb
lret
adcl
push
sub
pop
mov
nop
xchg
mov
es
sub
fwait
sbb
cmp
xchg
mov
movsl
out
pop
push
add
popa
jp
test
cld
test
out
cmp
adc
adc
mov
scas
jnp
xchg
jg
int
pop
test
testl
sbb
dec
adc
in
pop
cmpsl
nop
sbb
pop
add
mov
es
inc
or
cmp
xchg
xor
loope
adc
or
xlat
cmp
jo
or
mov
mov
es
jo
adc
pushf
sbb
xor
mov
fdivs
clc
pop
aad
sbb
push
mov
arpl
cmpl
enter
inc
idiv
sti
mov
pop
out
adc
mov
xchg
dec
fwait
imul
sbb
mov
add
movsb
mov
jmp
adc
push
cmp
call
sti
sbb
push
test
aam
jb
adc
dec
imul
jle
sbbb
cs
aas
loope
subb
sub
fiadds
mov
push
into
pop
push
dec
xor
rolb
int3
dec
cmp
outsl
pop
addr16
jb
je
bound
loop
jecxz
mov
and
sbb
cli
addr16
fdivs
push
ja
addr16
or
shrl
test
lahf
jb
shrl
pop
pushf
lds
in
mov
cmp
pushf
xorl
addb
push
xchg
sbb
cmc
pop
pop
or
psubq
jae
negb
lock
mov
iret
jp
push
es
mov
sbb
adc
aas
pop
sahf
int
cmp
std
add
or
fisttpl
data16
test
mov
sbb
ss
adc
add
aam
outsl
mov
fwait
or
pop
mov
test
sbb
incl
movsl
push
movsl
stos
dec
enter
ret
jnp
xchg
cli
mov
push
loope
adc
jp
mov
out
scas
loope
jo
xor
lods
fsubs
add
sbb
jg
stos
mov
rcrl
cli
dec
cmc
movsl
rol
loope
pop
std
testb
les
stos
dec
pop
fwait
icebp
lock
jae
bound
sbb
aad
push
pop
rorl
jnp
repnz
push
pusha
sub
divl
fcompl
sub
xor
xor
fildll
sub
scas
test
std
xchg
mov
push
out
test
into
sub
test
jmp
mulb
adc
lock
jbe
fs
mov
ss
imul
jle
out
mov
test
pop
adc
adc
pop
push
fstpl
cmp
mov
fsubrl
or
jo
and
cmp
xchg
cmp
push
aad
stos
aam
shrb
sar
dec
rol
xchg
mov
in
mov
pop
inc
subl
je
jnp
mov
xchg
test
mov
shld
lret
std
addr16
hlt
inc
pop
jmp
or
out
mov
ds
imul
pop
es
out
or
or
cmp
cmp
nop
xchg
xor
sub
sbb
sub
stos
ljmp
add
jg
sbb
in
lea
sub
or
add
arpl
cmp
cmp
jmp
cmp
into
mov
ret
or
sub
push
lcall
mov
imul
cs
sar
in
mov
jle
sub
nop
rcr
nop
mov
pop
xchg
inc
lret
sub
int
mov
dec
orl
sub
cmp
and
dec
outsl
mov
loope
mov
or
adc
mov
stos
js
ffreep
push
push
xchg
xchg
je
clc
test
adc
jne
fnsave
mov
loop
movsl
lock
out
adc
mov
dec
mov
aaa
mov
inc
mov
sbbl
sar
xchg
stos
add
imul
loop
aam
ds
fimull
mov
hlt
dec
inc
dec
arpl
movsl
je
cs
inc
add
in
mov
loopne
jno
push
xchg
cs
cwtl
lret
mov
dec
xor
repz
scas
mov
pop
lret
push
lret
mov
repz
xchg
dec
fistps
loope
cmp
add
lds
call
mov
xor
or
movl
pop
les
jl
xchg
mov
outsl
bound
push
pop
in
xchg
adc
cmpsl
scas
cmp
out
mov
cmpl
inc
mov
sbb
push
mov
inc
xchg
xchg
mov
xchg
imulb
inc
sub
lods
pop
cli
push
xchg
dec
es
cli
mov
cs
sbb
push
shll
inc
push
xchg
cmp
mov
std
out
jmp
xor
stos
add
sub
std
dec
in
pop
icebp
ret
adc
push
adc
shll
jl,pn
inc
or
aam
jo
cli
mov
pop
mov
fstl
dec
insb
push
jle
jno
cli
or
neg
ficompl
ljmp
outsl
enter
mov
sub
sbb
sbb
inc
sub
pop
int
xlat
dec
rcll
in
or
lods
arpl
or
scas
repnz
jmp
loope
xchg
ja
mov
mov
ljmp
mov
mov
jle
int3
enter
sbb
inc
fnstcw
out
sub
dec
out
xchg
call
in
jo
rcrb
ds
gs
sbb
ret
test
or
test
mov
mov
ljmp
dec
lods
ret
sbb
pop
movsl
xor
dec
lods
test
in
loope
outsl
and
ficoms
sbb
rcrb
push
jmp
sbb
int
sub
je
or
fisubrl
ljmp
pop
mov
cmp
enter
cmpsb
cltd
pop
push
or
inc
cmpsl
add
loop
add
cmp
pusha
rorb
dec
inc
pusha
sub
adc
sbb
hlt
subb
daa
rorb
and
and
xor
ret
iret
outsb
cmp
lcallw
xor
aam
insl
and
mov
sbb
xor
std
inc
into
iret
push
jae
aas
lea
mov
test
scas
iret
xchg
push
fcompl
or
adc
xchg
xor
das
sbb
testl
add
fwait
adc
shlb
push
test
inc
dec
ret
sub
xor
pop
inc
xlat
scas
clc
iret
lahf
inc
in
mov
mov
push
xchg
or
sub
push
into
outsb
cli
mov
stc
jl
mov
mov
jbe
add
ja
xchg
ja
push
and
fiaddl
push
mov
sbb
fwait
sbb
push
add
in
push
repnz
jo
shlb
enter
mov
pushf
aaa
mov
add
fsubrp
repz
push
cmp
and
clc
popa
add
add
jns
jl
ret
cmp
jmp
fprem
cmp
and
dec
or
fistps
cmp
std
inc
in
imul
in
pop
int
xchg
punpckhwd
arpl
xlat
roll
mov
and
pop
inc
outsb
jle
hlt
mov
cmp
xchg
lahf
mov
cmp
int
and
aaa
mov
lds
jmp
aas
sbb
leave
negb
or
xchg
lods
sbb
cmpsb
jge
lret
mov
lret
xchg
fdivs
in
xor
daa
inc
mov
test
jae
je
adc
int3
iret
dec
cmpsl
mov
ja
jae
sbb
push
xlat
mov
in
icebp
sub
mov
adcl
out
push
or
push
push
daa
es
mov
out
push
pop
aam
dec
jbe
lds
not
jge
mov
mov
xchg
cld
je
ja
fnstcw
pop
jmp
add
xchg
mov
subl
dec
xlat
cs
and
imul
xchg
ljmp
and
mov
int3
mov
push
pop
sub
sub
pop
repnz
add
int
sub
stc
jmp
cmp
push
cmpsl
xor
xor
push
dec
shrb
popf
nop
arpl
jle
fisttpl
pushf
cli
popa
sub
arpl
pushf
test
pop
fldcw
mov
popa
jb
in
inc
mov
xor
sub
cmc
push
add
rclb
leave
mov
rolb
adc
rcll
jl
xchg
cmpsl
aam
mov
jae
fildll
loope
mov
cli
add
mov
shrb
je
mov
les
jnp
push
mov
in
movsl
insb
cltd
int
enter
dec
adc
sbb
cmp
shll
xlat
std
movsb
dec
cld
std
mov
mov
hlt
or
pop
in
jg
sbb
dec
test
movsl
sbb
pop
aad
clc
mov
mov
cwtl
insb
in
sub
out
movsl
jecxz
int
sahf
ret
sub
out
lahf
sbb
int3
dec
cmp
in
sub
push
call
inc
lret
mov
lcall
mov
mov
rcll
enter
leave
sbb
inc
in
add
into
fiadds
enter
movsb
push
xchg
adc
scas
flds
out
cmpsb
mov
cmp
shll
mov
xchg
test
mov
add
mov
out
pop
arpl
dec
out
push
sar
rorb
push
sbbl
dec
mov
fisubrl
pop
inc
loope
out
pop
mov
dec
aaa
mov
call
jle
pop
mov
mov
xchg
sub
mov
dec
dec
stos
fmull
mov
in
inc
not
clc
sbb
jnp
add
cmpsb
out
push
ljmp
leave
bound
cs
jl
xchg
sub
xor
clc
mov
pop
rorb
and
pop
adc
cld
dec
movsl
stc
outsb
sub
jecxz
mov
and
pop
mov
testb
stos
cmpsl
ror
fwait
add
adc
call
mov
bound
mov
lcall
jno
xchg
inc
imul
mov
aas
mov
mov
add
xlat
divl
fsts
stos
mov
mov
mov
sub
pusha
xor
in
mov
jecxz
loop
cltd
fsubp
cmp
push
pop
into
in
idivl
jle
cs
insb
sbb
pop
iret
cmp
shrb
fwait
rorb
cld
movsl
or
stos
fcomi
loop
jl
scas
ret
imul
int
aam
arpl
or
cmp
add
or
xor
into
sub
ficomps
cmp
sti
cltd
ja
mov
ds
arpl
sahf
ss
insb
inc
stos
xchg
xchg
or
add
ss
nop
shll
mov
push
into
cmc
sbb
enter
or
xchg
dec
add
jo
imul
aas
out
rcrb
push
inc
sub
shrb
sub
fbld
ret
loope
arpl
stc
mov
inc
pop
ljmp
and
adc
sti
inc
xchg
adc
mov
sub
mov
in
cmc
hlt
clc
jecxz
add
push
fidivl
sub
fisttpll
jno
or
adc
or
sbb
and
inc
sarl
test
cwtl
xchg
cmpsl
pop
mov
negl
mov
mov
popf
addb
pop
pushl
in
hlt
test
cmp
inc
fstpl
rcrl
sbb
scas
mov
inc
cwtl
cmpsl
shl
inc
jns
rolb
xor
mov
sbb
mov
add
je
dec
adc
inc
test
fwait
outsl
fldcw
inc
and
xchg
loope
mov
push
jmp
outsb
mov
cwtl
orl
dec
call
adcb
int
inc
pop
xchg
xor
cmpsl
int
fs
push
mov
jns
fidivs
scas
add
mov
mov
or
aas
push
mov
mov
and
mov
inc
notb
mov
push
jne
jmp
push
sbb
inc
mov
repz
push
lret
ret
iret
dec
xor
or
lcall
mov
adc
cs
rcll
mov
mov
stc
cmp
ret
scas
ret
mov
pop
shrb
call
leave
inc
pop
jge
jns
pop
rol
ret
push
xchg
jmp
jle
mov
inc
sbb
push
cmpsb
daa
xor
push
daa
mov
mov
pop
push
rol
mov
mov
sbbl
addr16
addl
mov
das
fwait
sbb
repz
pop
lds
in
mov
add
xchg
xor
add
sub
sahf
icebp
pop
mov
ret
lea
or
add
cmp
mov
loopne
push
sub
in
xchg
je
cltd
dec
mov
imulb
cmp
aam
jbe
pop
add
sub
in
decb
inc
sub
lcall
fs
xchg
jnp
jo
cs
cmp
fucom
and
pop
aad
bound
mov
repnz
sti
out
cltd
mov
add
xlat
sub
sbb
push
add
out
inc
inc
mov
dec
xchg
test
and
xchg
in
cmp
sbb
add
cmpsl
and
add
push
ds
pop
test
jbe
int3
inc
jecxz
int3
jno
or
addr16
stc
and
sbb
cmpsl
mov
leave
adc
out
mov
pop
rolb
lcall
push
sub
movsb
add
sub
idivb
sahf
dec
cltd
testb
lods
loopne
notl
and
ret
ja
movsb
in
sub
mov
mov
pop
out
ja
lret
add
dec
fcmovu
loopne
lods
ds
mov
out
xchg
out
dec
mov
add
es
sub
adc
push
ljmp
dec
mov
lods
outsl
scas
addr16
in
cmp
in
repnz
mov
test
and
aam
js
imul
pushf
push
jp
adc
pop
bnd
sub
cmp
mov
fstl
or
sbb
xlat
ja
mov
stos
das
push
incb
icebp
pushf
movsb
shlb
adc
jle
imul
or
dec
cs
mov
in
sbb
cs
inc
mov
jne
rcll
aaa
lret
and
xchg
sbbb
sbb
movsl
jle
les
mov
outsb
bound
dec
fs
mov
aaa
xchg
xor
lods
pop
add
or
jle
arpl
pop
cmc
xchg
aam
jnp
aam
adc
out
cmpsb
inc
popf
cwtl
lahf
fldenv
rolb
rclb
std
dec
mov
aam
mov
popa
mov
ss
push
adc
subl
lret
dec
push
jmp
int3
push
ds
imul
jno
and
mov
adc
movsl
sbb
inc
xchg
leave
ja
int
sbb
mov
adc
bound
nop
out
inc
scas
inc
pushf
add
fstps
xchg
mov
jmp
mov
popa
and
push
fsubr
dec
mov
mov
rol
add
jns
mov
and
test
jecxz
shrl
in
bnd
inc
cs
ret
addr16
dec
pop
daa
call
mov
aaa
shrl
dec
lods
insb
int3
push
mov
repz
mov
cmp
sbb
cmp
add
jge
inc
push
test
jp
xchg
jns
loope
jno
fisttps
inc
jmp
iret
in
pushl
and
lret
pushf
clc
lods
into
adc
jp
stos
fmuls
jns
out
outsl
aas
jle
xchg
or
adc
in
inc
fwait
into
ljmp
jge
add
xor
push
popf
cmp
xchg
icebp
push
subb
sbb
iret
in
cmpsb
jmp
aam
jecxz
adc
mov
sbb
test
stc
fwait
ss
and
mov
outsb
std
dec
mov
add
push
xchg
xchg
movsl
dec
call
push
aam
movsl
mov
mov
movsb
divl
sbb
sub
inc
push
sahf
scas
pop
lret
jmp
test
and
push
cwtl
add
les
mov
popf
inc
arpl
push
movsl
ret
inc
cmpb
in
arpl
push
pop
add
xchg
fsub
push
add
xlat
mov
fisubrl
sti
xlat
stc
fldpi
push
pop
xchg
mov
cltd
push
ja
insb
inc
mov
mov
loopne
repnz
dec
xchg
sub
add
xorl
xchg
inc
rolb
push
xchg
sub
mov
jg
popf
ret
push
call
xchg
test
je
js
jmp
push
sbbb
cmp
push
pop
dec
adcl
daa
arpl
cmp
cmp
movl
xor
jmp
mov
add
cmpl
xor
repnz
jecxz
out
fcomps
lahf
jmp
nop
cs
les
jne
sub
ds
cmc
jle
aas
dec
add
js
arpl
sahf
sub
int3
fidivrl
lods
fcomp
mov
popf
cmp
cmp
inc
dec
ljmp
movsb
adc
adc
repnz
mov
rolb
dec
add
mov
call
rcrl
sti
mov
pop
inc
into
pop
push
jecxz
in
cmpsb
in
add
and
cld
imul
out
stc
jg
dec
lcall
cmc
loope
mov
push
daa
divl
sbb
dec
xorb
cli
insb
outsl
adc
loopne
test
ret
xchg
jnp
lahf
mov
scas
cmp
mov
test
ss
push
stos
aad
pop
cmpsl
sbb
add
jge
inc
outsl
mov
lea
cltd
xchg
mov
and
pop
mov
add
push
pop
movsl
cli
test
mov
sub
gs
and
push
push
andl
jbe
jne
and
inc
mov
nop
mov
subb
lcall
frstor
or
out
push
cmp
adc
pushf
mov
fmuls
pop
and
into
push
jno
enter
fstpt
mov
mov
movb
adc
iret
mov
jo
es
into
pop
repz
xlat
out
and
imul
arpl
enter
mov
jne
adc
icebp
ds
out
sbb
popa
push
sbb
in
test
gs
aam
cmp
jle
inc
mov
repnz
jl
mov
ljmp
ret
dec
imul
sbb
subl
cmpl
shlb
mov
addr16
mov
into
jns
xor
cmpl
shll
mov
cmp
out
pushf
repz
testb
push
or
mov
out
iret
in
and
inc
scas
mov
insl
add
outsb
xchg
ret
mov
mov
adc
je
dec
inc
inc
mov
ja
dec
repnz
inc
rorl
sub
jg
sbb
sbb
stc
pop
sbb
pushf
out
push
repz
add
daa
sbb
pop
jns
fimuls
push
adc
and
lret
or
add
stos
jb
sti
jecxz
pop
xorb
pushf
dec
out
and
cmp
out
cmpb
ret
or
out
mov
mov
mov
sbb
outsl
cmpl
add
jg
jo
faddl
aad
lret
imul
jno
sbbb
lret
push
pop
gs
repz
and
mov
icebp
call
push
negb
jle
jmp
call
dec
mov
jne
xlat
les
daa
dec
dec
jg
in
pop
xchg
in
neg
push
fidivrs
add
push
lea
push
stos
mov
xchg
sbb
pop
shlb
or
in
jmp
shll
std
lock
xor
xor
out
lahf
adc
std
mov
mov
sub
imul
data16
into
pop
jge
sbb
dec
jge
or
push
cmp
loop
in
pop
jns
dec
pop
push
shlb
mov
jno
or
nop
xchg
sub
jb
inc
xchg
add
add
lea
pushl
push
ljmp
sbb
mov
or
xchg
cmc
sub
daa
ret
imul
cwtl
push
ljmp
xchg
das
pop
call
push
mov
jno
mov
mov
into
cmpl
cmp
or
xor
pop
xor
pop
and
sbb
sub
mov
cmp
adc
sbb
xchg
mov
xchg
inc
arpl
xor
inc
subb
pushf
lret
lds
cmp
in
xor
popf
push
push
xor
adc
pmulhw
mov
xor
xchg
sub
cmpb
popf
mov
add
fdivs
add
loop
push
clc
pop
or
mov
insb
or
pusha
mov
ret
xor
stos
movsb
jb
repz
add
fisubrs
rcrl
ret
xchg
mov
rcrl
mov
movsb
add
stos
repnz
int3
pop
lret
scas
scas
in
imul
inc
and
clc
cmc
aam
mov
cmp
fdivr
pop
mov
test
dec
and
jno
in
xchg
popa
mov
lds
lds
push
pop
mov
adc
roll
mov
xor
sbb
inc
pushf
sbb
sub
outsb
lds
push
dec
xor
scas
mov
jo
arpl
jnp
jnp
adc
lret
push
repnz
mov
push
mov
push
mov
jbe
sti
in
ret
sub
or
dec
adc
movsb
shl
iret
pop
loopne
sbb
dec
pop
jg
loopne
test
or
fsubl
push
xchg
lds
push
dec
inc
jnp
ret
nop
mov
ficoms
xchg
popa
rcll
std
jae
lahf
inc
stos
or
loopne
push
stc
or
shrl
jo
inc
loope
arpl
inc
sbb
int3
xchg
sub
adc
dec
push
popa
pop
add
loope
pushf
inc
mov
rolb
inc
xchg
inc
add
push
scas
mov
and
clc
das
xchg
imul
call
cwtl
pusha
cld
repnz
dec
shll
and
pushf
jmp
fs
mov
insb
dec
sahf
cmp
into
add
loopne
adc
cmp
les
cmp
cmc
xor
jae
cld
mov
push
mov
jnp
icebp
sub
mov
imulb
push
lods
out
sti
pop
or
loope
arpl
mov
jle,pn
mov
leave
or
cmpl
xchg
jbe
adc
loope
sar
or
call
ret
push
insb
leave
shrl
imul
scas
imul
mov
data16
aaa
pop
cmp
sub
jl
in
mov
ret
ljmp
add
test
adc
je
int3
adc
cmpsb
sbb
push
lods
adc
int3
repnz
push
sub
sub
adc
xor
gs
shlb
loope
rol
or
add
rcrb
mov
inc
cmpsl
cmpsl
popf
push
xchg
popf
jecxz
dec
sub
stos
lock
mov
clc
jecxz
dec
xlat
cmp
repz
xchg
repnz
sbb
jmp
loop
cli
jl
int3
jne
aaa
aam
adcb
fimuls
outsb
and
pmovmskb
adc
pop
jnp
jmp
shlb
pop
nop
out
ss
xchg
xchg
movl
or
jg
push
aad
popf
adc
fs
mov
inc
int3
push
cltd
push
imul
xor
or
lahf
pop
dec
lret
xchg
or
mov
enter
pop
fcomip
jne
paddw
gs
idiv
or
fidivrs
push
push
ja
aaa
pop
call
push
cmpl
popf
mov
lea
add
sub
and
stc
out
hlt
sub
lret
sub
add
cld
aam
push
stos
jae
aaa
dec
xchg
out
sbb
push
dec
sbb
cmp
scas
push
jns
jb
push
pop
pop
and
inc
repz
into
xor
push
sti
loope
xor
push
data16
in
insl
mov
mov
cmpsl
push
mov
shld
xor
sar
jp
pop
clc
daa
dec
movsl
ds
xlat
cwtl
adc
sahf
mov
mov
dec
lar
sbb
jg
mov
and
test
fisttpll
xchg
or
mov
pop
sbb
inc
cmp
testb
repnz
lret
lea
fidivl
repnz
or
cmp
jmp
call
mov
mov
pusha
mov
mov
dec
cwtl
pushf
cmp
dec
add
jno
lcall
or
cmp
pop
sbb
loop
js
dec
aad
fdivr
div
into
inc
adc
fs
je
fs
cmp
jno
xchg
leave
xchg
jge
mov
call
out
test
mov
dec
cmc
rorl
into
pop
jmp
mulb
repz
mov
jns
push
aas
icebp
aaa
xchg
pusha
test
dec
scas
loop
cmpsb
mov
jg
pop
out
jae
fildll
movsb
mov
xchg
into
repnz
ds
xor
mov
lcall
dec
lret
xor
fdivl
in
xchg
stos
cmpsb
and
lahf
add
pop
fidivrs
aas
scas
pop
mov
outsl
xchg
pushl
je
sbb
loop
add
scas
test
sub
repnz
pop
cld
or
inc
sarl
and
add
cmpb
sbb
push
pop
adc
jnp
scas
xchg
stos
jno
mov
iret
out
add
mov
sbb
mov
sbb
inc
xchg
mov
adc
hlt
das
jmp
out
sti
dec
cmp
aas
inc
lock
dec
xor
xchg
repnz
jl
dec
xor
xchg
mov
jb
xchg
loope
repz
test
sbb
int
dec
add
pushf
mov
bound
mov
jno
push
lods
sbb
and
call
and
sbb
ficomps
in
cmp
sbb
mov
icebp
xchg
add
adc
mov
jnp
jp
daa
jmp
jl
fdivr
mov
lods
test
ffree
dec
xchg
mov
sbb
fmulp
adc
clc
push
xorb
inc
jno
pop
dec
dec
jne
outsl
push
mov
mov
dec
pop
jae
fcoml
in
dec
mov
nop
mov
fidivrl
inc
enter
cltd
xor
cmp
test
shr
subl
inc
mov
pop
dec
mov
std
dec
xchg
sbb
ret
in
shrb
mov
shl
inc
fmul
lods
stos
mov
xlat
sub
aad
push
fs
nop
out
or
inc
add
and
jmp
fsubr
push
inc
lea
inc
es
add
dec
leave
jmp
std
out
out
cmp
loop
js
jp
mov
xlat
mov
scas
mov
lret
sub
dec
or
push
cmpsl
or
ds
xor
in
jnp
filds
lret
add
adc
dec
sub
xchg
jmp
fucomi
and
push
mov
cli
or
enter
enter
rolb
xchg
leave
jne
std
sbb
jnp
cmpsb
cwtl
sarl
jecxz
xchg
cmc
sbb
ret
jle
sub
push
add
ss
and
inc
stos
rorb
sbb
or
or
jl
shl
inc
push
aaa
and
mov
push
clc
mov
data16
out
pop
add
scas
xchg
movsb
decb
fbld
lds
sahf
mov
push
mov
pop
test
cmp
adc
mov
push
pop
adc
add
add
dec
clc
and
aas
hlt
sub
lods
es
cmp
mov
out
jns
xchg
push
add
insl
lock
mov
mov
mov
in
pop
jne
sarb
mov
out
jmp
jno
enter
nop
sbb
mov
inc
sbb
jp
fwait
in
cmp
xchg
jmp
insl
test
mov
mov
and
ljmp
xor
jp
lret
xchg
shlb
push
insb
testb
sub
mov
xchg
arpl
push
pop
pop
int
gs
jg
adc
mov
dec
leave
pop
adc
aaa
addr16
mov
repnz
insl
fidivl
cld
inc
mov
loop
pop
pop
dec
shlb
int
imul
imul
fcoms
mov
loope
xchg
or
and
test
add
stos
pop
sub
ds
cmp
mov
cmp
jl
push
jp
mov
leave
jns
bound
mov
pop
out
pop
fiadds
mov
inc
hlt
dec
pushf
pusha
jbe
dec
aad
lock
push
cmp
xchg
out
push
and
jg
sbb
hlt
sti
push
pusha
cmp
cmpsl
fnstenv
hlt
add
sbbb
jle
inc
xchg
out
dec
cmpl
push
inc
pop
push
add
aas
or
xchg
mov
mov
int
icebp
inc
popa
push
int3
shl
or
inc
repz
pop
push
lock
fdivl
leave
adc
call
cmp
lea
ss
ret
or
sbb
bound
adc
outsl
adc
push
pop
jg
imul
adc
outsl
sahf
iret
scas
popa
and
mov
lods
cmp
adc
mov
cltd
clc
out
inc
data16
xor
rcrl
mov
pop
stos
xlat
push
mov
mov
ret
jg
js
sbb
xlat
push
aaa
scas
pop
pop
cli
decb
or
clc
clc
mov
insl
or
jmp
ja
xchg
mov
pushf
jnp
cmp
pop
call
push
stos
ret
or
jmp
mov
xor
inc
cltd
lds
and
cmovns
and
leave
jmp
or
mov
stos
shll
pop
fnstcw
movsb
add
dec
pop
outsb
mov
push
adc
pusha
je
scas
pop
pop
jl
testl
push
and
aam
imul
jae
daa
daa
jb
mov
add
daa
fs
sarl
addr16
and
lock
push
pushf
sub
dec
mov
ja
mov
imul
mov
jecxz
mov
or
loopne
sahf
mov
or
push
jne
js
adc
js
mov
mov
ja
and
or
insb
test
sbb
sbb
leave
xchg
mov
or
out
std
dec
add
hlt
outsb
fs
addr16
loopne
push
scas
dec
in
and
sbb
sbb
and
push
mov
in
cwtd
push
stos
push
repnz
or
add
cmp
xchg
fstl
scas
rorb
out
dec
or
or
and
sub
adcb
sbbb
mov
jo
mov
imul
cs
mov
daa
push
cmp
fsubrs
pop
push
out
lret
mov
mov
cmc
inc
xchg
cwtl
jne
std
das
push
sbbb
mov
xchg
adc
xchg
xchg
mov
ljmp
nop
mov
xchg
mov
inc
ljmp
ljmp
push
dec
cmp
dec
push
cs
cmpsb
les
cmp
jmp
push
negl
push
outsb
or
cmp
lea
sahf
adc
in
push
es
iret
dec
xlat
mov
jle
xchg
xchg
sbb
imul
mov
and
nop
popf
cmp
movsb
pop
jne
jg
and
ss
pop
lock
lret
loopne
test
bsf
dec
lea
movsl
xacquire
xor
fisubrs
mov
je
push
inc
pop
sbb
sbbb
out
dec
xor
aaa
add
mov
mov
mov
adc
xchg
mov
add
xchg
dec
mov
stc
jnp
dec
mov
mov
xor
push
and
push
rorl
mov
xor
scas
ljmp
jge
cmp
loope
jmp
and
clc
rorb
cli
or
push
dec
xor
adcl
cmpsl
fwait
jb
int
je
and
rclb
mov
pop
jge
scas
out
or
outsl
cwtl
test
dec
mov
mov
and
xchg
sarb
or
ljmp
fs
inc
rcrl
ss
or
mov
add
lcall
mov
push
adc
les
filds
dec
out
orl
rolb
mov
xchg
lahf
popf
rcll
addr16
xorl
xor
push
sub
cmc
fyl2xp1
imul
pop
inc
adc
mov
mov
mov
inc
add
mov
sahf
es
mov
rcl
jge
inc
loopne
mov
cmp
push
into
jo
xor
push
loop
outsb
aas
xchg
shll
adc
push
adc
out
or
xchg
adc
jbe
mov
mov
shl
rcrl
sub
cmp
mov
jbe
iret
dec
pushf
mov
sbb
rclb
mov
inc
jns,pt
sbb
inc
lea
loopne
arpl
add
jmp
insl
pop
dec
sar
jmp
xchg
shr
xchg
into
hlt
push
push
icebp
add
dec
or
inc
sub
addb
js
mov
fisubs
add
call
outsl
jle
shrl
cmpsb
push
mov
or
das
sbb
adc
cmpl
sub
jb
scas
cs
mov
mov
pop
sub
pop
sub
lock
sbb
jb
imul
pop
loope
repnz
cmp
into
bound
shl
inc
mov
out
and
push
mov
jns
inc
xchg
xchg
loopne
jmp
push
cmc
xor
jge
dec
or
cmc
mov
xchg
inc
push
inc
sahf
outsl
outsl
sbb
insb
mov
sub
movaps
jno
push
mov
mov
sbb
nop
cld
or
mov
xor
jge
inc
mov
pop
mov
js
xchg
xor
mov
and
xor
jb
stos
mov
sbb
cltd
lcall
push
xchg
lcall
inc
push
cwtl
mov
push
aaa
mov
es
call
into
jo
es
mov
test
loop
daa
mov
jmp
xchg
cmp
enter
cmpsb
das
rolb
sub
pop
or
ret
sub
xor
lods
jmp
imul
push
sub
mov
dec
sub
and
mov
xlat
dec
xlat
out
ja
xchg
movsb
xchg
push
push
leave
inc
std
jmp
popf
ret
xor
fildl
roll
mov
pop
dec
outsb
sbb
lret
jbe
jecxz
insb
jg
outsl
add
inc
notl
mov
push
shlb
in
andl
cmp
push
xchg
daa
push
movsb
sar
mov
clc
cltd
fidivs
lods
cld
and
xor
xchg
mov
jp
sub
pop
push
stos
daa
rcrb
ja
insb
iret
cmc
lret
cmp
popf
xchg
stos
xchg
frstor
sarw
jle
clc
stos
pop
in
mov
addr16
or
push
aaa
xchg
mov
lret
in
lds
fcmovnbe
jge
pop
and
lods
mov
faddl
jbe
out
fsubrs
mov
stos
ret
sahf
push
pushw
inc
test
sbb
test
int3
lods
dec
fldenv
mov
sub
test
lahf
push
jmp
mov
xchg
mov
fmulp
cmp
std
push
jbe
push
adc
aas
sub
mov
out
xor
xchg
fstpl
insl
imul
jmp
push
lret
incl
xchg
rorb
fidivl
and
into
pop
mov
data16
jge
sub
mov
lahf
movsl
iret
and
insb
jp
ljmp
dec
pop
push
shl
rol
adc
inc
adc
sbb
cmpsb
sub
jbe
or
sub
adc
inc
je
cs
sbb
cmp
mov
imul
push
test
xchg
mov
jecxz
sbb
lods
lret
jecxz
sbb
in
sub
dec
dec
std
inc
jge
and
jl
aas
fwait
pop
out
mov
repz
pop
pop
push
test
nop
add
and
ror
mov
jae
pop
sub
in
add
js
outsl
sarl
adc
int
fmulp
addb
xor
adc
popf
inc
fbld
mov
pop
mov
or
lds
loope
int
cmp
xor
cmc
mov
or
enter
sbb
nop
inc
lret
stc
iret
lock
fistps
push
insl
ficomps
daa
and
stos
xchg
and
jne
cmp
cwtl
pop
out
mov
lret
xchg
test
jp
popa
cld
mov
rorb
mov
imul
std
sub
aas
pop
xchg
mov
cmp
es
jle
addr16
rcrb
adc
push
in
cmp
cmp
lret
movsl
loop
sbb
loope
out
insb
imul
xor
sub
mov
jnp
adc
jb
dec
lcall
push
outsl
push
hlt
mov
jns
jmp
mov
shrb
pop
cmp
cmp
mov
arpl
loop
test
sub
js
movsb
push
mov
hlt
es
add
call
aas
sub
lahf
xor
aam
jmp
sbb
int
sti
sub
mov
sbb
std
push
aam
add
sub
cwtl
push
dec
paddusb
icebp
jmp
push
scas
in
dec
mov
inc
lods
push
inc
imul
pushf
es
pop
or
fcmove
andb
and
add
outsl
sub
adcl
add
out
mov
outsb
jl
mov
in
sti
pop
outsl
data16
pusha
call
adc
ret
pop
push
loop
xchg
xor
dec
push
out
daa
pop
sti
adc
les
rorb
jle
and
xor
pop
jle
outsb
les
push
mov
imul
pop
js
mov
sub
das
mov
mov
sub
jae
iret
or
cmpsl
and
out
mov
enter
in
jmp
add
into
test
inc
pop
xorl
fcompl
rcrb
mov
push
bound
shl
sub
inc
fldenv
cli
mov
jo
sti
fistl
adc
mov
inc
sub
mov
cld
pop
lret
mov
mov
push
mov
jo
add
jns
xchg
xor
out
push
fisubrs
inc
inc
inc
insb
les
mov
jns
cmp
push
or
inc
mov
iret
dec
sti
sub
bnd
ljmp
sahf
sahf
aam
aam
sbb
jns
mov
sahf
test
bound
lods
frstor
cmp
daa
into
jg
push
enter
stos
lea
pop
add
test
pop
sbb
pop
mov
hlt
add
jp
xchg
or
icebp
bound
pop
pop
test
mov
pop
cmpsl
sub
pop
shrl
std
ja
int3
sbb
repnz
cmp
popf
inc
stos
movsb
jmp
inc
mov
into
fldcw
in
clc
mov
pop
adcb
shll
mov
pop
xlat
popa
and
ret
mov
cmp
inc
jnp
push
sub
in
fcmovbe
ret
aad
cld
rol
push
push
sbb
jge
rcll
fs
shll
jecxz
test
lcall
pop
cli
ljmp
gs
mov
add
js
jae
mov
xor
pop
clc
jns
pop
incb
mov
or
sbb
lret
xchg
mov
outsl
push
cwtl
dec
stos
and
insb
sbb
jae
jp
cmpl
mov
jb
cli
fsub
sub
jae
push
js
push
pusha
push
add
dec
repnz
add
push
add
sub
jl
or
addl
subl
adc
hlt
push
dec
xor
pop
ljmp
insb
adc
jp,pt
fstp
sbb
movsl
movsb
inc
push
dec
cmp
dec
test
gs
popf
mov
pop
dec
daa
loopne
fisubrl
dec
cld
jae
sti
sbb
xchg
inc
popf
mov
daa
ret
fnsave
mov
sbb
pop
sbb
out
dec
ds
jg
mov
xor
out
inc
or
mov
push
xor
pop
lods
scas
pushf
add
or
mov
lahf
ljmp
repz
push
dec
mov
repnz
gs
mov
mov
outsb
sub
insb
je
inc
pop
jecxz
adc
cmp
mov
clc
ret
add
nop
dec
jb
cmpsb
inc
out
sarl
pop
push
cmp
xchg
push
xor
and
out
inc
push
push
jp
pop
insl
stc
inc
push
jb
mov
rcrb
push
out
outsb
stos
push
loope
ds
adc
add
and
daa
adc
cmp
push
rorl
dec
loopne
les
movsl
les
sub
adc
fstpt
sub
mov
push
mov
sbb
movsl
adc
loope
shlb
repz
inc
adc
pop
cmp
jle
flds
std
fs
gs
jecxz
sub
cmp
adc
dec
fldenv
test
inc
push
xchg
jl
xor
pop
xchg
xor
add
xchg
mov
jo
and
aas
inc
pop
adc
jl
in
mov
sbbb
xchg
dec
pop
and
xchg
mov
dec
or
cmpsb
mov
adc
mov
xor
pop
add
lahf
dec
fxam
jns
cmp
mov
add
cmp
rcl
sbb
dec
repz
pop
or
mov
and
fisttpl
mov
int
mov
adc
cli
sahf
jg
xor
movsb
out
das
xchg
hlt
push
mov
xor
fwait
cmp
sub
fistpl
push
lret
gs
pop
mov
adc
movsl
push
lahf
jno
jbe
adc
mov
jecxz
mov
scas
lods
xchg
dec
inc
push
imul
sub
fstps
add
and
test
xchg
xor
in
xlat
mov
les
repnz
fwait
mov
mov
and
sub
push
daa
inc
cmp
xor
mov
fisubrs
loope
out
jo
xchg
ret
mov
and
mov
sub
pop
sti
lcall
gs
jmp
jno
mov
outsl
scas
add
mov
shll
xor
and
jmp
dec
push
nop
xor
jg
and
int3
in
xchg
adc
rcrb
int
add
inc
pushf
pop
mov
push
mov
ret
mov
xor
iret
mov
in
mov
dec
dec
stc
add
cwtl
mov
cmc
jmp
pop
xor
jl
pop
jp
and
fdivr
mov
clc
jae
shrl
enter
loop
cwtl
mov
insb
imul
call
push
mov
pop
lock
call
scas
jl
jae
and
mov
cmpsl
movsb
push
int3
push
mov
mov
mov
cmp
jmp
adc
out
out
mov
and
cmp
insb
add
pop
mov
xchg
std
jp
mov
sahf
add
cwtl
stc
add
and
sub
cwtl
sti
mov
mov
movsl
gs
popa
or
inc
cwtl
int3
cmp
adc
and
lret
insl
cltd
adc
mov
sub
jp
xchg
mov
push
inc
in
cmp
movsb
lea
scas
mov
pop
xchg
push
fsubrs
lcall
sub
xchg
push
jbe
divb
ret
jae
xlat
dec
sub
sub
fsubl
daa
xor
pop
xchg
sarl
inc
cmp
test
mov
push
dec
ss
mov
nop
pop
nop
fmulp
and
es
jecxz
loopne
jne
mov
lods
inc
sbb
loop
jo
mov
add
jno
jnp
dec
fs
xor
xchg
adc
adc
push
push
mov
cmp
loopne
shrb
xchg
sbbb
in
es
sbbl
cmp
xchg
adc
mov
inc
stc
imul
lcall
pusha
mov
stc
xor
js
adc
rcl
push
int3
pop
scas
mov
mov
cwtl
or
xor
fucomp
outsl
add
sbb
pushf
daa
fstp
mov
mov
test
dec
shll
xchg
ret
adc
sub
xchg
sub
lahf
je
pop
dec
lock
xchg
cmp
sahf
stc
scas
pop
fwait
and
iret
xchg
or
pop
mov
enter
pop
dec
sub
repnz
out
lods
mov
cmp
loop
mov
mov
or
pushf
push
add
push
add
xchg
popf
or
inc
xchg
repz
call
mov
lds
aas
xchg
mov
out
cmp
sti
sbb
jl
cmp
add
jecxz
dec
sub
add
out
or
sahf
stc
in
xor
jbe
adc
in
leave
enter
lods
pop
rcrb
das
add
pop
push
xor
push
or
push
dec
fisubrs
jne
sbb
leave
lret
xchg
rclb
mov
in
pop
loopne
jmp
add
out
or
outsb
je
adc
sub
pop
aad
ss
jle
imul
xor
addr16
outsb
pop
xchg
xchg
jp
fwait
rcr
mov
icebp
pop
shrw
inc
jne
testb
xchg
mov
in
fwait
leave
lds
pop
jmp
xor
sub
test
loopne
cmp
cmp
pop
cmc
and
push
mov
dec
push
inc
test
daa
int
stos
xchg
xor
ds
cmp
adc
lds
sbb
ljmp
hlt
mov
nop
sbb
or
fisubrs
cmpsl
out
lahf
sbb
inc
or
mov
jg
roll
xor
gs
bound
xor
sub
pop
hlt
in
fldenv
push
cwtl
push
inc
out
sub
xchg
ja
sbb
in
fmull
aad
mov
xor
jmp
inc
sbb
icebp
jno
test
sub
ss
outsb
xor
or
int
fisttps
iret
out
add
adc
out
dec
sbb
popa
sbb
jg
add
repz
cld
mov
ficoml
sub
lds
in
cld
pop
lahf
enter
inc
pop
inc
adc
dec
lret
xchg
xor
fs
out
sub
hlt
idivl
inc
push
cltd
mov
mov
repnz
push
xor
aaa
push
or
jne
lock
jl
icebp
aad
fildll
mov
push
cmpb
jmp
sbb
pop
sub
int3
add
lret
mov
mov
cmp
js
add
mov
jecxz
jecxz
jb
mov
jmp
jae
out
roll
sbb
xor
jmp
popa
adc
cmc
lods
xchg
mov
push
outsb
pusha
pushf
pop
movsb
push
daa
push
push
rcrl
test
ss
lahf
mov
or
cs
jno
popf
push
or
fwait
mov
cmp
dec
lahf
xchg
outsl
bndstx
mov
push
mov
mov
lods
das
cwtl
pop
push
sub
int3
pusha
mov
int3
gs
inc
sbbb
rep
mov
pop
out
int
add
push
jmp
adc
xor
nop
push
call
in
or
push
sub
mov
jl
cltd
aas
jmp
pusha
bound
imul
fdivrs
sahf
dec
pop
repnz
fsubrs
push
dec
dec
cli
movsl
xchg
imul
mov
push
pop
sbb
mov
mov
mov
cmp
gs
push
fsubl
or
fstpl
and
ret
mov
pop
lea
fbstp
stos
fs
mov
fstpl
lea
jae
test
jmp
jns
orb
das
push
xchg
mov
data16
loopne
aas
mov
mov
jne
mov
push
and
xor
jo
mov
int3
nop
jno
rcl
jge
fimull
mov
outsl
sbb
lds
sub
test
out
dec
mov
jp
xchg
mov
ss
outsl
lcall
test
fsubrs
jg
fadd
cs
xor
imul
test
rcrb
rclb
test
arpl
pop
pop
push
mov
subl
inc
xlat
add
test
lea
call
sbb
pop
mov
fisubrl
sbb
xchg
push
cld
rcrl
xchg
adc
pop
inc
in
jle
jno
inc
inc
aam
and
jle
mov
mov
cmp
stc
xchg
sbb
rcrb
les
or
inc
xchg
push
push
cmp
das
fsubs
mov
sub
jle
mov
cmp
cmp
js
icebp
push
pop
xlat
pop
addl
push
arpl
inc
cmp
mov
jmp
add
jns
cmc
xor
mov
daa
xor
int3
push
out
cltd
push
fmuls
dec
xchg
pop
dec
mov
iret
stc
inc
fidivl
dec
fisubl
sti
add
movsl
jg
into
jle
sar
addr16
pop
jne
xchg
push
adc
lods
sbb
cltd
adc
jne
cmp
pop
add
dec
lods
jbe
add
scas
add
int
ljmp
mov
fcom
mov
or
jbe
push
aaa
das
ret
repz
ret
ljmp
insb
aas
push
push
bound
and
pop
shlb
imul
int
mov
jne
out
sub
sbb
sahf
jge
dec
das
mov
adc
lea
jae
and
xchg
cmpb
das
test
xchg
dec
mov
out
add
mov
in
adc
fwait
xor
insl
cmp
movsl
jmp
adc
mov
sahf
es
int3
cmovo
rcrl
rcrl
cmpsl
pop
addb
mov
cmp
sbb
ja
and
xchg
or
or
jo
or
addr16
stos
push
ss
std
or
jns
fcompl
in
and
and
xor
enter
jecxz
adc
mov
out
mov
jnp
sbb
jge
push
jge
and
test
mov
mov
pushf
shrl
jns
add
frstor
jne
mov
add
pop
mov
hlt
adc
mov
fisttps
adc
movsl
out
test
mov
or
enter
jle
pop
mov
test
ret
inc
push
lret
mov
and
pop
sbb
cmpsl
dec
arpl
jo
cmc
xchg
fmul
mov
or
mov
cld
aad
jl
xorl
rcrb
cltd
inc
or
in
lret
pop
dec
jg
and
jle
lock
popf
inc
rcr
ljmp
jnp
jne
mov
repz
stc
cmp
cli
sbb
xor
sti
jmp
dec
lods
stos
pop
adc
add
sbb
cmpl
dec
cmp
mov
xor
pop
mov
push
inc
cmp
or
inc
xchg
mov
lret
mov
out
add
sbb
add
push
iret
push
inc
mov
cmp
out
pop
mov
mov
test
jne
push
jg
into
mov
pop
cltd
inc
push
lcall
rorb
and
mov
add
mov
jnp
sbb
cmpsb
mov
cmp
adc
add
dec
arpl
out
sub
jne
inc
push
and
into
movsl
rcll
mov
cmp
out
sbbl
mov
adc
ret
mov
mov
pop
push
inc
xor
clc
mov
cmp
lret
mov
xchg
mov
and
sub
setle
mov
inc
or
xchg
jle
xchg
test
pop
xor
jns
neg
scas
adc
xor
lods
cmp
and
add
ret
aad
imul
add
bound
add
popa
and
xchg
jnp
daa
inc
rclb
xor
push
aad
fidivs
jns
je
mov
sub
and
cmpsb
xor
cwtl
push
addr16
movsb
ret
hlt
lods
adc
cmc
out
cmpsb
and
xchg
repz
insb
jg
in
lret
or
or
jg
pop
out
sti
sbb
lahf
cmp
jns
push
mov
lods
jb
stos
push
icebp
xchg
and
mov
daa
and
push
int
into
loop
fidivrl
mov
xchg
mov
inc
jmp
roll
jmp
add
mov
mov
cwtl
test
and
cli
add
in
lods
pop
fnsave
mov
mov
lret
sahf
insl
fisubs
pop
call
pushf
scas
popa
insl
lret
mov
xchg
rolb
xchg
fdivrl
jmp
jbe
outsb
push
ret
mov
daa
lcall
cmp
fdivp
add
adc
insb
xor
stos
push
scas
xor
lock
subb
add
stos
pop
lcall
rclb
push
sub
mov
stc
push
mov
movsb
and
jg
mov
mov
mov
xchg
xchg
fnsave
mov
aas
ret
lods
out
jns
test
lds
mov
mov
rorl
push
sub
push
lock
jl
icebp
pushf
mov
and
xchg
fs
loop
mov
jae
jae
add
xchg
pop
xchg
int
ds
in
movsl
ret
mov
push
adc
in
pop
fstpl
fisttpl
or
add
repz
stos
cmp
sbb
lds
sbb
int
xor
ja
add
ret
push
sti
in
iret
xchg
jnp
lret
int3
aad
inc
popa
sbb
out
xlat
mov
jmp
inc
shr
in
adcl
jne
push
mov
fisubrl
and
dec
mov
add
xchg
rorb
push
pop
sub
cmp
or
mov
je
sbb
in
outsl
mov
jno
xchg
fistpl
xor
xchg
sub
out
adc
fisubs
jne
cmp
rolb
cmc
adc
addr16
aam
and
sbb
dec
addr16
mov
adc
push
pop
addr16
xchg
push
sub
out
cli
add
pop
mov
or
enter
cmp
adc
pop
popa
and
enter
jb
mov
hlt
lods
pop
mov
mov
mov
and
mov
push
sub
xchg
push
pop
std
pop
data16
out
lret
sbb
xor
adc
inc
shrl
pop
pop
mov
xor
xor
xor
jae
xchg
std
adc
xchg
in
mov
mov
nop
clc
pop
ficoms
adc
nop
leave
daa
mov
lcall
adc
jae
mov
mov
mov
fdivrs
jge
or
add
dec
stc
push
mov
insl
cmc
cwtl
inc
ljmp
int
fadd
imul
test
xchg
imul
sbb
ja
pop
fst
loopne
out
dec
jle
pop
inc
cwtl
scas
mov
mov
xchg
jp
out
jns
and
dec
dec
mov
shlb
push
adc
or
sar
inc
aad
dec
shl
mov
lcall
dec
adc
cmp
daa
je
les
incb
dec
push
xchg
xchg
add
and
pop
outsb
mov
pop
cmpsb
pop
mov
loop
fstpt
adc
mov
mov
cmpsb
test
mov
leave
imull
fdivrl
inc
lea
jne
sahf
push
into
sti
outsb
int3
movsb
sbb
and
add
xor
xor
lock
cwtl
or
or
cltd
mov
mov
aas
aas
cwtl
iret
cwtl
jle
jns
dec
int
push
mov
loopne
in
pop
sbb
xor
mov
pop
adc
sub
adc
xchg
push
cmpsl
mov
jp
repnz
adc
push
or
int
lods
push
aad
pop
xchg
fidivl
lock
xchg
push
rclb
outsb
iret
aaa
or
enter
and
rcrb
int
inc
sbb
xor
xchg
mov
mov
repnz
xchg
push
cmp
in
push
loope
sub
scas
sub
fstps
sbb
add
pop
scas
movsb
pop
xchg
cmp
mov
arpl
adc
mov
jg
pop
xchg
cli
cmp
xor
sub
pop
aaa
dec
and
mov
lret
shlb
sub
lahf
mov
sub
cbtw
push
add
fs
and
cmpl
test
dec
cmp
inc
or
in
in
adc
cmp
jp
into
js
movsb
lods
pop
add
push
pop
jle
adc
test
negb
outsl
mov
test
fdivrl
dec
inc
add
mov
int
ret
shl
cld
pop
cmp
loope
jae
xchg
pop
fnstenv
jg
sub
pop
ret
jge
add
pusha
sub
je
sub
cmp
loop
and
mov
lret
mov
dec
loopne
mov
sub
mov
ljmp
daa
clc
or
cmc
sbbl
mov
mov
dec
pop
in
jecxz
call
push
imul
jnp
cld
out
dec
je
sbb
or
dec
cs
or
subl
stos
fcompl
fnstcw
or
sbb
mov
push
lret
push
mov
subb
fildl
leave
mov
xor
in
sub
xchg
xor
add
cmpsb
dec
push
jbe
xchg
rcrb
or
movsb
movsb
out
sbb
and
ljmp
cwtl
pop
movsb
push
push
lods
dec
mov
or
push
cmp
mov
xlat
or
sub
pusha
xor
adc
das
mov
mov
daa
jp
xor
subl
daa
stos
pop
imul
es
out
outsb
andb
push
inc
into
xchg
lcall
pushf
pop
arpl
roll
mov
fucomip
scas
sub
in
sbb
jl
fnstenv
aad
pop
roll
push
mov
jp
sbb
push
test
xor
inc
jbe
shll
mov
fnsave
inc
iret
inc
adc
sub
inc
dec
push
fs
fldl
push
push
aaa
call
sub
xchg
jge,pt
mov
pop
mov
test
xchg
sahf
test
jb
add
lret
lret
and
and
jl
push
inc
lods
popa
addr16
sub
push
xchg
add
jae
sub
sub
outsl
leave
or
add
divl
ljmp
loopne
shlb
pop
mov
dec
adc
imul
xchg
pop
mov
imul
loop
xor
sbb
sbb
es
enter
lods
push
cmp
push
data16
and
bound
dec
add
mov
push
fimull
sahf
cmp
push
jle
test
aam
dec
fimuls
pop
and
lods
mov
outsl
jne
addb
inc
mov
add
aas
jle
mov
mov
cmp
out
shll
add
mov
mov
sahf
mov
and
mov
outsb
mov
mov
clc
xor
rcll
cld
or
mov
daa
sahf
jo
mov
lods
cmpsl
pop
lds
or
pop
cmp
iret
scas
cmp
mov
dec
lods
jge
roll
dec
cs
and
stos
ret
jl
pushf
and
jp
jecxz
cs
fldenv
push
call
inc
imul
jecxz
sbb
mov
or
shlb
cmpsl
inc
and
pop
cmp
cmp
cmp
sbb
cmp
inc
push
jle
adc
xor
es
aam
sahf
jnp
pusha
fidivs
cmc
push
movsl
nop
cmpsl
inc
sbb
gs
fisttpl
out
adc
mov
les
mov
cmp
repnz
test
cltd
jnp
into
lcall
xor
pop
pop
pop
int3
sbb
test
clc
es
lods
mov
inc
inc
movsl
mov
dec
movsb
das
mov
ret
add
nop
mov
cmpsb
add
iret
shlb
jp
xchg
test
pushf
popa
and
or
cs
xchg
sub
pop
andb
stos
push
icebp
jnp
mov
cmp
or
push
and
sbb
add
cltd
add
xchg
not
pop
jp
inc
ds
xchg
jg
imul
push
cmpl
sti
mov
sbb
mov
addr16
xchg
div
push
clc
xor
adc
aas
cmp
adc
int
leave
cs
test
cmp
inc
dec
jb
test
jae
daa
in
shl
iret
add
and
or
aaa
dec
pop
jb
cmp
loope
xlat
and
sbbb
in
jne
or
mov
daa
push
out
data16
jne
mov
cmp
jae
outsl
test
out
rcr
sub
mov
fdivs
fcmovbe
decl
push
and
arpl
and
add
je
mov
int3
cmpsb
loopne
gs
sub
daa
repz
lods
loop
push
or
pop
mov
sarb
pusha
add
xlat
enter
jle
in
dec
mov
shlb
fisubrs
rorl
test
push
mov
lods
rcr
inc
mov
sbb
push
repz
inc
xlat
jb
mov
std
lds
mov
mov
loope
inc
mov
cmc
stos
test
ret
pop
cld
push
mov
bound
push
scas
jmp
or
xchg
sub
mov
jge
pop
xchg
popa
adcl
mov
addr16
mov
pop
mov
pop
xor
int3
insl
dec
and
mov
push
mov
push
out
jns
lock
test
jo
test
mov
cwtl
call
or
lret
mov
cmc
sbb
cwtl
xchg
mov
push
pop
cltd
inc
xchg
adc
lcall
dec
in
xor
jmp
testb
aas
dec
addb
and
cmp
mov
cs
pop
xchg
je
iret
stc
insl
push
mov
xchg
in
push
mov
mov
adc
adc
mov
fimull
sbb
inc
imul
test
and
push
in
adc
mov
pop
cmp
mov
pusha
ss
adc
jecxz
cmc
mov
mov
orl
fstpl
dec
idiv
jecxz
inc
ja
push
dec
inc
push
pop
icebp
std
xchg
cs
and
mov
xchg
xorl
jo
dec
inc
test
rorl
add
pop
lret
add
push
mov
fwait
inc
test
insb
jae
mov
mov
inc
dec
adc
leave
dec
jg
divl
push
stos
std
jmp
testl
mov
leave
mov
popa
stos
shr
insl
fimuls
shr
enter
inc
je
pop
in
xor
mov
push
jae
cmp
insl
jg
jp
ficomps
push
test
dec
enter
xchg
jge
xor
sti
sbb
pop
jno
and
fisubrl
inc
pushf
mov
and
test
pushf
sbb
test
loopne
jo
xor
pop
push
add
push
xchg
addr16
sbb
cmc
pop
add
lock
int
xchg
mov
lock
xor
xchg
rorb
cltd
mov
xchg
mov
imul
clc
or
xchg
dec
and
xor
daa
sbb
adc
js
test
or
xor
lock
movsb
das
in
daa
mov
into
notl
and
fdiv
int
mov
jge
loop
fdivs
sar
ljmp
inc
mull
movsl
mov
add
pusha
mov
aaa
cmpsb
movsb
xor
lret
mov
mov
pop
inc
repnz
test
mov
jg
or
je
in
adc
mov
aam
dec
jge
ja
fxch
into
mov
lock
adc
and
and
ret
ret
scas
lahf
addl
movsl
inc
imul
jp
xor
repnz
ficompl
dec
repnz
loope
in
test
pop
mov
nop
std
nopl
clc
adc
or
sahf
pusha
push
into
fdivrs
nop
repnz
jne
xchg
fcmove
jp
iret
push
push
lea
dec
xor
and
cld
data16
popa
push
xchg
jge
test
pop
mov
popa
out
ds
xchg
mov
popa
mov
insl
and
inc
sarl
inc
cmpsb
es
mov
ds
push
into
inc
mov
loopne
fadd
cmp
loop
hlt
adc
push
nop
pop
push
mov
adc
pop
popf
or
stos
int
iret
push
push
in
push
mov
test
lea
daa
lods
jge
dec
dec
stos
xor
lods
add
or
ret
cmp
call
je
loopne
test
add
inc
pop
repz
dec
add
and
out
stc
flds
mov
jmp
push
loope
cmpsb
mov
pop
push
std
adcb
mov
sub
sbb
js
aaa
fsubrp
sbb
cmp
mov
jae
fst
mulb
fisttpl
outsl
mov
xchg
neg
dec
cmp
jno
cltd
push
out
inc
push
ss
jge
add
sbb
int3
stc
imul
mov
jl
das
inc
xchg
mov
pushf
ret
inc
mov
je
fisubs
adc
sbb
mov
xchg
sbb
mov
pop
pop
popa
push
adc
mulb
and
xchg
fsubs
insl
jns
lea
xor
stos
stc
nop
dec
lea
hlt
mov
cmp
mov
inc
mov
sub
or
int3
mov
push
xor
or
lods
inc
sub
loop
and
mov
inc
add
mull
fs
pop
mov
adc
add
pop
jns,pn
push
xchg
push
icebp
xor
arpl
xchg
test
mov
in
mov
push
aas
repz
cld
scas
mov
lret
mov
jo
mull
loop
imul
shrl
or
mov
push
out
loop
mov
cli
ds
sbb
out
es
outsb
and
ret
dec
push
add
jne
add
jl
fidivrs
pop
push
out
mov
cwtl
adc
aam
xchg
cmp
inc
jno
ljmp
lcall
adc
mov
mov
xchg
scas
cld
loope
iret
inc
popa
xor
loope
imul
das
sbb
push
in
pop
xor
xchg
mov
imul
dec
cwtl
cld
imul
movsb
pop
enter
ljmp
subl
mov
hlt
push
aad
clc
add
mov
call
dec
adc
adc
loopne
in
xchg
js
and
sbb
ficompl
jl
xchg
mov
call
xchg
pop
lds
lds
jp
add
inc
mov
push
inc
fnsave
test
hlt
jo
push
dec
mov
sub
sub
sbb
or
push
stos
xor
xor
dec
outsl
mov
imul
mov
pusha
inc
mov
dec
push
or
jns
jne
adc
jb
push
jl
incb
fdivl
sbb
sbb
sbb
adc
in
lods
pop
test
push
pop
jne
movsl
shlb
mov
add
cs
negb
mov
sahf
cmp
sbbb
pop
cld
adc
dec
shr
xchg
adc
mov
dec
jno
or
push
fdivrl
push
test
push
sahf
in
or
push
daa
jp
out
xor
push
std
xor
xor
fcmovu
test
out
pop
jge
jb
out
sbb
push
fisubrs
xchg
add
mov
sub
dec
cli
add
fldcw
lock
cld
test
loop
mov
call
sbb
xchg
mov
test
test
add
jg
mov
pop
insb
xchg
lcall
adc
shll
xchg
cmp
mov
jne
push
lret
jle
pop
inc
sub
pop
jg
xor
popf
dec
mov
jecxz
sbb
movsl
pop
lods
les
mov
pop
mov
add
mov
xchg
adc
add
mov
mulb
pusha
repz
add
jg
xor
stc
pop
xchg
mov
ret
push
ds
xchg
cmpsb
cmp
ljmp
test
sti
add
lret
addr16
movsl
mov
sahf
push
movsb
pop
popf
inc
jle
sti
sub
lcall
cmpsb
jl
cmp
xchg
lock
mov
lret
mov
test
aas
jne
inc
ficoms
inc
popa
mov
repz
lret
or
sub
add
testb
xlat
push
dec
xchg
push
mov
xchg
ja
lret
mov
lret
mov
aas
sbb
cli
mov
cmpsb
cli
jb
inc
mov
sahf
aaa
lcall
leave
sbb
cltd
xchg
pop
jbe
pop
int3
test
popl
sbb
xchg
dec
nop
repz
xchg
mov
jnp
jb
lcall
out
jge
aad
aas
pop
mov
cmp
rcl
inc
out
out
lea
add
shll
add
cld
cmp
jg
inc
mov
mov
add
jle
xchg
mov
xchg
rorb
and
adc
stc
or
xchg
or
lret
xchg
aas
xor
lds
jmp
dec
dec
cmp
bound
mov
dec
popa
fs
adc
inc
or
xchg
inc
inc
dec
jp
xor
lock
stc
shrl
movsb
or
lcall
mov
lahf
sbb
packuswb
fisubrl
sarb
inc
push
addb
xchg
fisttps
test
fsubs
mov
adcb
ret
or
pop
les
sub
in
adcl
sbb
mov
jg
sahf
inc
jecxz
pop
pop
mov
arpl
mov
xchg
inc
in
pop
or
mov
mov
jl
popa
lods
mov
outsb
cmc
pop
daa
lret
cmp
add
xchg
xor
xchg
jo
pop
sub
dec
in
mov
in
scas
or
sahf
popf
aaa
xor
in
and
xlat
xchg
stos
mov
fdivrl
add
in
or
jg
sbb
roll
lods
scas
xor
dec
das
sbb
mov
rcll
scas
les
lahf
test
sbb
sub
push
fisubrl
sub
filds
inc
ds
push
in
jge
xchg
jecxz
mov
pop
pop
push
jns
pushf
mov
pop
das
hlt
jge
adc
icebp
movsb
sub
and
lahf
aam
faddp
insl
les
scas
rolb
dec
pop
outsl
pop
fistpll
lods
es
lods
cwtl
and
sbb
test
cmp
mov
or
aas
dec
mov
sbb
neg
mov
lock
jne
mov
sub
pop
pop
leave
push
pushf
and
mov
gs
dec
ret
loopne,pt
fldcw
cltd
mov
dec
push
mov
push
cmp
aam
sbbl
inc
sbb
cmc
pop
ret
loopne
jecxz
inc
lahf
stos
js
pop
cltd
inc
xchg
loop
push
daa
test
jmp
and
idiv
adc
sbb
inc
xchg
inc
idivb
jno
mov
jo
imull
aaa
mov
push
roll
std
pusha
push
or
push
mov
and
fistpl
jno
and
or
adcl
sbb
push
adc
cmp
xchg
mov
dec
test
stos
pop
xor
push
popf
hlt
and
push
out
pop
lods
lret
ljmp
xchg
pusha
jae
xor
xor
fcomp
fcoml
lcall
rorb
cmc
mov
cmp
cs
cmpsb
inc
mov
sahf
std
lahf
mov
sub
xor
mov
add
bound
cmp
dec
fstps
lods
mov
inc
dec
push
add
gs
iret
nop
mov
pop
sti
push
gs
sbb
ds
test
mov
inc
mov
mov
shlb
dec
pop
cmpsb
cmp
jns
xchg
mov
out
jno
inc
ret
jg
pusha
daa
pop
test
jo
outsb
in
sub
adc
jo
int3
repz
push
mov
sti
fldcw
inc
mov
sub
mulb
popa
push
jecxz
push
push
pop
xor
mov
leave
stc
insl
or
push
jnp
xor
dec
xchg
jmp
repnz
or
mov
repz
and
test
push
xchg
cld
hlt
gs
xchg
adc
es
jne
xor
xor
sbb
lods
mov
sahf
push
cmp
sbb
fldt
sti
jo
sbb
sbb
jne
out
gs
xchg
sub
aam
in
mov
insb
lods
test
popa
and
add
push
sar
int3
jle
enter
pop
dec
pop
pop
les
jo
dec
dec
mov
pop
push
mov
inc
and
sub
push
push
inc
cwtl
cmp
push
dec
adc
jb
mov
jp
outsl
sub
shlb
or
pusha
pop
ss
mov
test
cld
stos
sbb
scas
ss
add
daa
and
jne
pop
roll
leave
or
sbb
or
aam
jl
sub
gs
push
div
outsb
push
loope
clc
movsb
sub
sub
jp
aad
aaa
push
mov
or
mov
pop
pop
mov
scas
outsl
out
xchg
scas
cmp
leave
pop
cli
ret
xor
pop
jo
adc
and
shll
and
enter
pop
aad
inc
std
jne
dec
inc
inc
pop
ds
dec
arpl
shrl
test
mov
add
and
test
mov
xor
imul
mov
inc
adc
adc
pop
sbb
out
jp
cmc
and
cmp
popa
test
xchg
jo
xchg
or
sub
push
lcall
outsb
imul
filds
mov
insl
movsl
popf
int
and
pop
xchg
adc
icebp
mov
mov
das
push
dec
mov
scas
lea
lods
out
call
pop
out
scas
out
mov
repz
gs
fpatan
mov
nop
push
push
jbe
pop
xrelease
sti
loopne
daa
inc
pop
dec
lods
xor
mov
daa
mov
popa
movsb
jno
jle
mov
fs
lret
mov
fidivrs
orb
insl
sub
add
pushf
daa
imul
movsl
in
jle
xchg
insb
xor
pop
and
inc
mov
xor
xor
jge
loope
jecxz
and
xchg
fidivs
adc
inc
inc
test
and
aad
and
push
in
sbb
ljmp
insl
sub
xchg
xor
dec
mov
jno
mov
pop
iret
sbb
pushf
inc
imul
xchg
stos
fldt
lds
imul
fimuls
fcoml
jg
aaa
sub
sub
nop
adc
movsw
xor
push
fdiv
jle
andl
idivl
jl
stos
mov
and
mov
jne
cmpsb
xchg
je
test
add
bnd
out
sub
pop
mov
push
jle
push
out
xor
and
data16
rol
cmp
add
xor
xchg
sahf
adc
jns
inc
xchg
xor
leave
cmpsb
arpl
and
cwtl
dec
jmp
mov
jle
dec
mov
inc
rcrb
arpl
test
lret
test
int3
sbb
mov
mov
lcall
mov
cmpsb
scas
test
adc
lds
mov
sub
dec
es
xor
shrb
aad
test
in
inc
das
add
lock
andl
and
pushf
insb
aad
xchg
pop
fisubl
iret
push
lea
lret
andb
mov
cmp
clc
lds
mov
pop
mov
add
incb
fstps
out
in
test
leave
stos
in
call
bound
mov
mov
mov
out
sbb
dec
jno
out
fisubs
push
and
aam
mov
mov
repnz
pop
xchg
mov
or
jmp
call
test
filds
and
fcomps
ss
jae
pushf
std
push
jg
rcrb
popa
lret
imul
popf
in
fiaddl
mov
xchg
sbb
rcrl
lods
ret
stos
and
aaa
aam
and
fwait
push
jae
cmovle
jns
out
leave
rolb
shl
shrl
lcall
jle
mov
imul
jp
in
fdivr
decl
sbb
popf
pop
mov
in
lret
inc
int
xchg
mov
mov
jno
inc
loope
jmp
lods
fdivs
jo
pop
inc
dec
push
loop
add
or
mov
jno
add
dec
dec
lea
inc
enter
or
mov
cltd
jns
xor
lcall
popf
sbb
or
stos
adc
or
xchg
xchg
negb
repnz
mov
sbb
cmc
push
jbe
jmp
and
loopne
icebp
add
dec
repz
adc
jb
imul
lods
int3
pusha
jo
fwait
push
dec
outsb
inc
sub
sahf
mov
adc
jp
sub
addr16
negl
xchg
loopne
cltd
mov
in
mov
sub
addb
ret
aas
fidivs
out
push
dec
lock
inc
inc
mov
add
cmp
sahf
mov
in
movsl
in
mov
and
dec
xor
mov
fnstenv
pop
mov
lock
cmp
cltd
add
adc
std
push
cmpsb
das
imul
ja
sahf
gs
aam
push
cmp
xchg
or
in
jle
ljmp
mov
test
leave
jne
mov
stos
dec
nop
sarl
pop
mov
adc
mov
loopne
xor
pop
in
jg
and
dec
sub
lahf
sub
push
leave
sub
daa
cs
aam
scas
pop
fdivr
cld
lods
xchg
xchg
lds
jecxz
dec
pop
test
mov
or
push
cmpsb
orl
gs
loop
ss
les
das
dec
add
mov
sbb
sub
aas
mov
add
cmp
inc
sti
jle
xchg
cmp
in
outsl
pop
jle
test
jp
shlb
push
push
iret
jp
sbb
pop
lods
jb
xchg
lahf
cmp
lret
mov
push
pop
rcrl
gs
ret
lods
dec
sahf
adc
lret
lods
mov
gs
iret
fsubr
imul
fidivrl
leave
data16
out
in
pop
and
in
mov
push
lret
xlat
push
sbb
stc
mov
inc
sbb
mov
and
jns
push
out
push
cmp
jb
testl
aaa
call
mov
push
xchg
rcll
lock
outsb
xchg
insl
insb
jl
adc
mov
adc
jmp
xchg
leave
lcall
jns
push
push
or
insl
in
or
jmp
jge
push
repz
cmp
mov
in
adcl
mov
inc
lods
cmp
cld
stos
pop
idivb
data16
push
cmp
test
out
inc
in
pop
out
in
test
adc
cmpsl
fbstp
fs
and
cmc
scas
bound
leave
in
xor
daa
xchg
cmpsb
jno
dec
or
ja
xchg
cmp
test
push
pusha
dec
addl
push
xchg
fwait
xor
in
fs
roll
mov
sub
xchg
dec
clc
pop
or
cmpsb
pop
sub
jae
pop
jne
ss
stos
cmp
xor
jmp
iret
jnp
imul
fcomip
push
pop
jno
decl
sub
es
mov
sarl
mov
add
cmp
hlt
cmp
push
push
cmp
daa
inc
cmp
cld
pop
imul
sbb
sahf
mov
call
pop
sbb
cmp
cmpsl
fsubrl
out
or
jecxz
xchg
jns
jbe
pop
loopne
fnstsw
loope
dec
xor
inc
int3
mov
mov
jbe
ds
cmc
sub
mov
push
mov
les
or
decb
pop
push
mov
mov
push
push
out
popf
pop
pop
dec
mov
lret
dec
add
les
cs
lret
xchg
clc
pop
aas
repnz
jb
xchg
xchg
aas
dec
adc
nop
add
jl
jecxz
pop
bound
insb
mov
loopne
iret
sti
jmp
cmp
mov
inc
imul
and
clc
sbb
lret
push
mov
cli
or
mov
ffree
pop
adc
push
hlt
dec
out
pop
lods
mov
xchg
leave
xor
cltd
and
inc
xor
ljmp
pop
xor
mov
fimuls
lock
mov
sub
les
mov
mov
in
lret
in
cmp
cld
inc
sbb
push
orb
lods
xor
icebp
xchg
jg
cld
jecxz
iret
mov
or
inc
sbb
xchg
cmp
inc
sbbl
rorb
ret
mov
enter
fstpl
or
leave
push
nop
cmp
xchg
ficomps
clc
add
jl
ljmp
inc
dec
mov
jno
sbb
in
pop
push
loope
repnz
dec
xchg
ja
out
rolb
cwtl
popa
iret
stc
test
xchg
ljmp
inc
push
mov
mov
xchg
js
pop
out
lds
scas
and
sub
stos
ja
or
sbb
fists
push
sbb
adc
insl
sub
dec
in
in
jl
mov
lods
addr16
mov
fistpl
insl
jno
psubsb
add
and
push
test
xchg
call
les
cmc
lret
cmp
pop
mov
mov
xchg
xor
mov
pop
xor
fdivs
pop
xchg
push
push
sar
daa
pop
cld
aad
mov
mov
inc
sahf
jns
inc
fsubr
pop
imull
mov
sub
jle
ja
scas
sub
out
aas
outsl
adc
adc
cwtl
sahf
lret
dec
xchg
mov
insl
xchg
xchg
inc
mov
xchg
loope
jns
mov
test
je
adc
adc
icebp
daa
pop
xchg
imul
sbbb
or
out
out
test
int
int
xchg
cmc
loope
in
imul
out
lret
ret
fmull
add
sbb
or
aas
sub
jl
push
mov
inc
negl
or
sub
push
push
push
cmp
sbb
shr
imul
mov
inc
add
test
testl
int
xchg
dec
out
cmp
or
xchg
arpl
pop
sub
mov
cli
test
adc
insb
mov
xchg
or
fs
shl
cmp
cmp
push
fucomip
fisubl
jl
pop
sub
inc
pop
ret
inc
fld
and
inc
int3
cmp
and
xchg
insl
daa
and
push
je
xor
or
loopne
xlat
or
and
push
movsb
adc
pop
bound
lea
test
lahf
jg
cwtl
cmp
dec
mov
add
lahf
repnz
rcrb
dec
sbb
loopne
xlat
insb
xor
sbb
addr16
xor
inc
xchg
cs
cltd
les
sub
lock
movsb
add
add
rcr
loop
sbb
aaa
aaa
pop
mov
lds
mov
lret
push
inc
les
in
xor
xor
and
xchg
call
lods
adc
bound
fistl
pop
pop
arpl
jl
jmp
sbb
push
pushf
mov
inc
ds
push
add
scas
imul
inc
aas
add
lods
and
fdivl
inc
push
mov
adc
ret
js
push
scas
add
mov
fmul
xchg
lret
mov
adc
iret
or
and
jecxz
fbld
ret
mov
pushf
loopne
xor
xlat
lret
rcll
popf
popa
notb
cltd
dec
cmp
dec
les
cli
imul
mov
add
mov
pop
ds
stos
imulb
xor
pop
cmp
cld
enter
inc
push
stc
mov
lods
js
pop
adc
push
cmp
fwait
lahf
and
repz
loope
lea
mov
clc
stc
pop
adc
inc
xor
inc
stos
sbb
pop
jmp
hlt
clc
mov
aas
data16
push
loopne
lods
es
push
sub
mov
fisttps
pop
outsl
push
push
test
add
fdivrs
jb
cli
cltd
dec
add
rcll
mov
or
fcoms
xor
adc
lock
mov
dec
xchg
and
testl
cmpsl
and
push
mov
mov
and
aam
mulb
test
xor
clc
pop
add
jg
in
pop
mov
mov
dec
pop
dec
jmp
gs
xchg
and
nop
mov
notl
add
dec
push
cmp
push
cmp
and
sarb
jo
jb
test
xor
fcoms
jno
xchg
lahf
push
pop
mov
ja
or
insl
icebp
sbb
out
lahf
roll
mov
push
shl
adc
mov
add
xor
movsl
leave
push
jle
jmp
lea
fwait
xchg
outsb
icebp
jbe
lea
stc
xchg
aam
das
insb
mov
push
inc
test
add
aad
mov
jle
mov
mov
mov
cmp
push
push
inc
sahf
subl
popf
leave
mov
dec
pop
mov
add
popa
dec
cmpsb
add
roll
and
xlat
sar
add
jmp
icebp
rclb
and
nop
inc
cmp
pop
and
push
mov
push
scas
cli
push
dec
mov
and
mov
pop
leave
mov
jge
mov
aaa
mov
cmpsb
movsb
mov
mov
push
cmp
shlb
pop
inc
imul
push
push
leave
jo
fsubrl
ret
loopne
sub
popf
pop
popl
pop
push
aam
cmp
mov
jge
xor
les
xchg
push
jle
leave
xchg
cmp
imulb
mulps
mov
pop
xchg
pop
fistpll
add
cmpsb
enter
js
push
test
xchg
and
sub
aad
ffreep
out
or
enter
outsl
fisubs
xchg
addb
insl
mov
inc
cmp
les
jae
clc
sar
jle
movsl
jp
add
push
inc
fiaddl
xor
xlat
xchg
subb
mov
or
neg
push
xor
xor
or
decl
and
push
scas
xor
xor
imul
in
xchg
stc
repz
xchg
fimuls
mov
lods
cmpsl
pop
mov
in
mov
outsb
mulb
stos
mov
fsubl
or
fistps
pop
lds
push
push
mov
jl
pop
cmp
pop
test
sub
out
inc
out
pop
fldlg2
mov
mov
pop
xchg
lock
pop
inc
add
sbb
jmp
push
xor
int3
popf
mov
lds
dec
jo
outsl
xor
bound
cltd
add
cli
lds
inc
sbb
inc
lret
ret
xchg
scas
mov
repz
negl
test
outsl
lea
sub
mov
mov
mov
pusha
adc
rorb
jle
xor
movsb
js
out
sub
scas
test
jl
scas
arpl
int
aaa
sahf
lods
lods
insb
pop
sub
jl
dec
testl
dec
js
lret
add
inc
fcomip
jo
lea
dec
jge
test
xchg
mov
and
xchg
or
cmc
lods
jp
fistpl
cmpsb
mov
cmp
push
fucomp
adc
pusha
test
out
mov
adc
sub
mov
fcoml
cmp
out
stc
arpl
xchg
jnp
aad
data16
push
loopne
ljmp
das
jmp
nop
fistl
sahf
lods
push
mov
andl
xorl
push
pop
ffree
leave
xchg
ret
call
insb
mov
jo
loop
and
idiv
iret
sbb
mov
sub
or
in
scas
cmpsb
jnp
push
scas
cmp
inc
scas
jne
sti
jle
cltd
leave
flds
push
push
sub
fcoms
inc
and
std
inc
dec
mov
mov
cmpsb
sahf
pop
xchg
pop
jmp
jp
cmpsb
movsl
xor
lods
fnstenv
jnp
mov
dec
mov
mov
xchg
fnstcw
mov
dec
dec
push
mov
mov
loopne
scas
push
mov
pop
or
push
fbld
data16
add
sub
sub
pop
mov
into
in
rolb
int
pop
cmp
loop
pushl
push
inc
leave
jbe
push
xchg
mov
push
mov
aaa
sbb
out
ja
xchg
mov
push
cltd
mov
pop
fs
ret
scas
repz
insb
shlb
cltd
into
pop
inc
iret
sahf
scas
jbe
xor
call
movsb
sahf
ss
inc
cmpsb
push
sub
loopne
insl
out
fs
ss
sbbb
inc
addr16
or
xchg
mov
push
pop
xor
pop
mov
cld
sarb
in
inc
mov
push
jbe
divl
in
cmp
jge
dec
add
cmpsb
pusha
xchg
pop
aad
mov
ss
fstpt
fisttps
jnp
xor
sahf
popa
inc
inc
and
pop
gs
lods
std
jl
shrb
fs
sbb
dec
jp
mov
lret
push
movsl
fxch
adc
mov
adc
stos
pop
iret
mov
push
jmp
movsl
jbe
inc
inc
or
add
adc
adc
test
fsts
sahf
enter
cmp
sub
ljmp
addr16
cli
lret
jo
out
xlat
jmp
pop
addl
fisubrl
mov
test
and
mov
push
jecxz
or
aaa
test
outsl
popa
decb
xchg
hlt
rclb
jo
jle
push
or
push
pushf
jecxz
lea
mov
xor
push
imul
dec
sbb
adc
out
jo
adc
add
mov
rclb
rolb
push
and
add
mov
rolb
fdivs
mov
dec
out
or
pop
loop
pushf
outsb
inc
mov
dec
jbe
movsl
mov
or
adc
xor
sbb
and
inc
movsb
sub
in
push
mov
popf
jge
and
mov
mov
mov
imul
into
xor
pop
jno
in
shlb
sahf
fmull
mov
cwtl
mov
sbb
fdivs
cwtl
mov
cmp
cmc
adc
je
inc
cmp
xchg
ss
jge
sub
mov
arpl
stos
aam
stos
bound
push
mov
fwait
mov
ja
mov
das
xchg
xor
cmp
pop
and
xchg
inc
lds
fs
or
ds
stc
stc
lret
jbe
cltd
fidivl
scas
stos
pop
xor
dec
ds
xchg
scas
jmp
inc
xchg
pop
sbb
cmpsl
dec
sub
shl
or
gs
fstl
mov
cltd
fmul
leave
fildll
push
xchg
push
test
imul
push
jle
call
insb
pusha
in
or
xorb
xchg
and
dec
xchg
cs
inc
cmpsl
inc
cmp
aad
jl
pop
jge
int
adc
adc
adc
inc
xchg
cltd
xchg
lret
das
dec
inc
popa
pushf
xchg
sub
cli
mov
mov
cmp
mov
xor
jle
adc
mov
insl
movsb
xchg
hlt
xchg
rclb
dec
mov
jmp
xor
sub
cmpsb
ret
pop
cmp
cmpsb
jbe
mov
push
in
rcr
std
cli
leave
addl
test
shrb
inc
sarb
sbb
mov
lcall
jnp
add
fisubrs
cmp
mov
jg
movsl
jbe
pop
push
mov
jge
sti
mov
imulb
add
sub
mov
mov
mov
jae
mov
les
inc
je
inc
jge
fdivrp
inc
fdivrs
xchg
fiaddl
ja
loope
adc
clc
in
insb
add
lret
or
xorl
add
sub
xor
inc
or
lcall
jl
mov
clc
pushw
cmp
in
dec
fisttps
jno
jl
dec
roll
add
mov
push
jae
call
ret
mov
cmc
jle
dec
out
mov
jne
popa
and
mov
inc
stos
add
pushf
out
adc
ret
outsl
call
out
ds
pop
push
or
rolb
aad
mov
jp
fucomp
scas
mov
push
mov
mov
jb
or
xor
jae
imul
in
les
sub
jbe
xor
out
icebp
stc
call
lds
and
aam
clc
cmp
dec
insb
mov
xchg
mulb
mov
xor
nop
movsl
stc
lods
or
cmp
adcb
test
loop
ljmp
xor
ret
outsb
test
mov
or
xchg
icebp
dec
push
scas
cmp
xchg
data16
cltd
dec
sar
push
pop
jne
and
sub
xchg
lods
inc
mov
bound
test
fsubp
add
push
imul
arpl
iret
dec
jmp
sbb
aam
push
call
mov
and
inc
cmpsl
mov
cwtl
in
or
fsts
dec
sbb
lahf
sub
mov
jno
lods
std
and
jbe
mov
xor
fcoms
push
add
lods
loope
xchg
in
pop
add
cmpsb
nop
sub
les
sub
ret
mov
mov
out
das
mov
shll
std
dec
cmpsl
push
xor
dec
lods
dec
cli
je
lahf
xchg
sub
mov
pop
mov
and
loopne
push
mov
stos
pop
xor
enter
xchg
packssdw
add
js
gs
xor
fstl
inc
fidivrs
adc
jmp
mov
add
jbe
ljmp
pop
jne
lret
hlt
jno
sub
xchg
fildl
inc
xor
jecxz
pop
xor
test
insl
jbe
jnp
insb
jg
cmp
dec
out
movsl
inc
std
push
mov
and
pop
inc
cltd
daa
subl
xchg
mov
loopne
fistpl
mov
jp
cli
cmp
sub
inc
decl
xor
hlt
arpl
xor
ss
loopne
xchg
ror
idivb
adc
mov
cmp
scas
pop
push
into
jae
hlt
icebp
cs
jp
frstor
dec
adc
fnstcw
push
aaa
jp
test
dec
dec
jns
dec
into
icebp
or
fbld
xor
xchg
dec
adc
cmp
int
sub
dec
nop
pop
loopne
stc
scas
jl
xor
outsb
decl
insl
mov
leave
ds
in
and
push
out
fsubrs
enter
jp
cmp
or
loop
jns
jae
sub
jbe
inc
dec
hlt
ffreep
insl
jbe
mov
sbb
mov
xchg
and
push
or
mov
add
arpl
loop
fimuls
xchg
cld
outsb
and
pop
push
call
xor
ret
dec
sbb
aam
fld
mov
call
loopne
call
xchg
push
xor
push
imul
sub
or
xor
and
xchg
loope
or
scas
test
pop
movsl
test
into
push
in
ss
rorl
idivl
pop
sub
bound
movsl
pushf
in
insb
dec
jbe
imul
mov
pop
push
pop
mov
xor
push
xchg
xor
mov
mov
leave
movsl
aam
cltd
sbb
std
cltd
test
sahf
xchg
aaa
int
fldt
mov
xchg
sbb
push
inc
push
mov
fdivrs
pushf
ss
or
ljmp
shlb
cmp
mulb
jecxz
pop
inc
test
mov
lcall
addr16
fnstsw
mov
gs
rorb
repz
xchg
pop
cmp
pop
testl
mov
adc
lret
push
push
sub
addr16
popa
sbb
and
jns
xlat
fwait
andb
js
lcall
jne
cmp
mov
pop
xchg
xchg
ss
test
jp
mov
fxtract
leave
loop
addr16
jg
loopne
sarb
mov
xchg
inc
jnp
cmp
rol
cmp
sub
and
aaa
sub
push
out
stc
mov
add
pop
mov
jmp
out
xchg
stc
fwait
mov
jecxz
sbb
push
sbb
js
and
xor
pusha
jmp
lcall
mov
in
cmp
xchg
pop
push
inc
clc
mov
or
adc
shll
out
inc
insb
or
cmp
push
dec
jl
pop
dec
into
out
rcrb
push
lods
mov
push
mov
shll
repz
mov
xchg
dec
mov
lds
lods
fsts
push
outsl
fisubrl
or
lahf
dec
bound
jne
adc
jp
xchg
sbb
fst
xor
or
notl
cli
dec
jns
icebp
jnp
or
mov
std
add
ss
dec
or
xchg
pop
sub
pop
es
sbb
jmp
xor
mov
and
mov
xchg
lret
ljmp
adc
pop
out
lahf
jns
mov
pushf
mov
fs
fdivp
mov
lret
pop
mov
je
cmpb
es
lcall
inc
cmp
popl
inc
test
pop
out
pop
sub
repz
outsl
in
xor
or
rcl
inc
pop
out
or
and
inc
notl
xor
or
adc
sbb
adc
jl
stos
push
jecxz
cwtl
pop
mov
loop
jp
pop
test
rcr
xchg
shr
pushf
cwtl
mov
pusha
imul
rolb
mov
xor
lea
ja
sub
lahf
push
mov
movsb
mov
fildl
and
push
int
sarb
mov
mov
clc
orb
xchg
mov
fsubrs
mov
imul
cmpsl
inc
jbe
cmp
add
dec
scas
scas
outsl
add
lods
stc
lock
pushf
das
inc
in
out
es
sub
cmp
adc
cld
mov
cmpsl
cmpsl
lret
xchg
mov
add
int3
mov
loopne
mov
mov
push
cld
repnz
in
adc
push
addr16
push
jmp
xchg
pop
pop
mov
fs
and
push
pop
pop
mov
sbb
dec
xchg
movsb
jl
test
aam
aad
lret
inc
inc
sub
dec
dec
mov
aaa
mov
push
push
in
loopne
or
aam
xchg
mov
mov
pop
and
out
in
cmp
ja
iret
add
sub
ja
int3
mov
push
rolb
push
jmp
jl
mov
mov
lahf
clc
push
loope
shlb
pop
fisttps
adc
sahf
icebp
sbb
ljmp
icebp
pusha
mov
add
std
mov
insb
mov
scas
adc
sub
lcall
dec
xchg
mov
mov
mov
jns
xchg
adc
pusha
pop
mov
cld
test
xor
aam
inc
scas
pop
ret
add
or
jl
mov
iret
dec
xchg
and
cmp
mov
xchg
stos
jl
adc
jecxz
sbb
ficoms
mov
enter
fiadds
xor
icebp
push
adc
ja
movsb
mov
mov
lock
and
es
bound
outsb
inc
xchg
enter
xor
pop
ljmp
add
and
xchg
insb
xor
add
pop
pop
out
mov
jae
or
adc
or
sub
sbb
mov
adc
cltd
sub
test
aas
push
scas
mov
mov
cmp
pop
pop
dec
add
or
incb
jp
in
lds
cmpsl
pop
dec
add
cwtl
out
mov
fwait
sub
into
inc
xor
inc
dec
mov
lret
dec
xor
pop
getsec
adc
sbb
imul
js
popf
mov
lret
movsb
sbbb
push
inc
fistl
out
orb
sbb
sbb
cltd
out
mov
jg,pn
xchg
enter
ss
hlt
dec
fdivrs
jns
cmpb
les
push
pop
adc
inc
test
or
jbe
pop
sub
xchg
push
mov
loop
and
sbb
int
adc
outsb
jp,pt
bound
add
loopne
aam
or
insl
aad
outsb
lret
movsb
icebp
aaa
dec
mov
mov
jg
push
jmp
sub
mov
mov
rclb
fcoml
sub
xchg
push
in
loopne
and
inc
dec
shrl
cmp
add
pusha
test
test
jbe
cmp
jmp
ds
mov
ficompl
ret
inc
sbb
xchg
jns
mov
scas
outsl
test
or
mov
enter
xchg
mov
aam
cmpsl
push
and
xor
cmp
cltd
loope
jp
jnp
dec
xchg
mov
cmpsl
in
add
xchg
adc
jbe
mov
jge
sahf
cmpsl
lcall
mov
dec
xor
sbb
sarb
dec
cmp
jl
jge
jl
sbb
mov
pop
xchg
or
fistps
fwait
andl
aaa
ja
sub
in
inc
and
xchg
mov
inc
jns
aad
push
icebp
mov
ja
pop
test
fadds
in
adc
mov
add
stos
test
mov
mov
lret
add
stos
ss
mov
fstps
hlt
outsl
inc
mov
mov
popf
pop
dec
push
lahf
lret
cmp
std
outsb
pop
rolb
fwait
push
in
and
push
popf
xor
pop
pop
jp
mov
mov
inc
pop
xor
pop
outsl
mov
lcall
cmpsl
mov
mov
into
in
pop
xor
aas
mov
mov
pop
add
cwtl
cmp
cmp
in
mov
cmp
sbb
mov
inc
xchg
aaa
mov
in
in
pop
test
mov
cmp
cmpsb
out
sbb
xchg
sbb
loopne
shl
dec
test
mov
in
or
cli
mov
add
sbb
dec
adc
sarb
sbb
mov
out
dec
rclb
popf
in
mov
jno
mov
push
mov
xor
dec
cmpsl
movb
cld
leave
pop
mov
dec
sar
mov
xor
jmp
pusha
xor
push
jns
ss
inc
sbb
sti
inc
loope
clc
jge
aas
hlt
test
out
repnz
mov
cmp
add
jae
mov
mov
in
sbb
add
sbb
fistpll
dec
dec
les
sub
mov
pop
push
cmp
inc
ss
ffree
out
data16
cld
jl
stos
and
xlat
mov
outsl
mov
repz
shll
nop
xlat
fcoml
pop
loopne
inc
sub
xor
add
bound
xchg
sbb
push
push
aad
inc
inc
les
leave
adc
test
pop
fmull
dec
lret
xlat
pop
xchg
jnp
pop
cmp
sub
jl
cmp
into
or
sti
lret
or
mov
add
inc
push
pop
pop
stc
fidivl
jne
cld
out
loopne
inc
sub
aad
xlat
inc
leave
adcb
sahf
push
pusha
cmp
mov
xor
test
fistps
les
insb
int
push
out
movsb
or
xchg
sub
rorl
or
dec
xor
cmp
popf
bnd
cli
popa
mov
hlt
and
mov
nop
cmp
insb
jb
push
xor
push
mov
xor
mov
subb
iret
mov
adc
xchg
in
ret
sbb
xchg
push
mov
inc
push
dec
rol
xchg
adc
addl
pop
testb
loope
int3
cmp
xchg
sbb
jecxz
bound
out
fldcw
mov
sbb
popa
testl
dec
cwtl
outsb
out
addb
shlb
arpl
mov
dec
push
and
jno
idivl
incl
mov
and
gs
js
sub
pop
fstps
xor
sub
push
sub
cltd
mov
lods
mov
mov
xchg
mov
shrb
shlb
jge
scas
in
mov
lds
out
sub
in
and
push
aad
mov
and
jnp
pusha
jnp
sub
push
std
daa
pop
hlt
pop
stos
dec
mov
nop
sub
cmp
sub
mov
movsb
mov
adc
nop/reserved
mov
arpl
and
or
dec
lods
popf
dec
pop
outsl
inc
cmp
in
adc
and
cwtl
cltd
xor
loopne
jno
xchg
lret
or
inc
pusha
ljmp
or
imul
movl
adc
add
mov
xchg
jo
pop
push
mov
scas
pop
ss
pop
jg
movsl
pop
jne
dec
shll
int
and
mov
and
mov
stos
out
and
sbb
dec
mov
cltd
loop
cwtl
lret
xor
xchg
adc
sti
test
push
aaa
xchg
test
mov
sub
push
push
inc
sbb
fcmovu
je
jl
xchg
mov
dec
int
jp
enter
mov
mov
mov
inc
push
cmc
xor
xchg
mov
pop
cmp
std
mov
loop
or
sbb
xor
sbb
out
push
data16
fucomi
inc
and
cld
ret
dec
clc
imul
add
aad
icebp
add
outsb
inc
clc
add
fidivrs
cwtl
fs
adc
scas
es
shr
mov
inc
bound
sbbl
cmc
add
push
add
mov
es
cld
jbe
ret
popf
mov
pop
test
mov
adc
or
and
mov
aad
call
shl
ds
xchg
roll
adc
imul
mov
sahf
mov
pop
jae
and
mov
dec
movl
push
mov
imul
cmp
or
mov
mov
inc
mov
lahf
push
push
jge
imull
jnp
mov
in
xchg
push
fstpl
shll
fldenv
xchg
jge
test
inc
mov
mov
arpl
add
add
pop
xor
adc
jge
pop
pop
aaa
out
lods
push
movsb
rolb
xchg
xchg
lods
arpl
mov
adc
mov
sbb
loopne
insl
lret
lods
int3
iret
popa
xor
fmulp
insl
lret
add
pop
and
addb
jmp
test
ret
in
pop
jmp
cltd
mov
imul
xchg
cmp
or
rcr
pop
enter
mov
rolb
out
cmp
std
loope
lret
mov
adc
enter
adc
lcall
dec
add
movsb
sbb
jne
lcall
xor
xchg
push
pop
mov
ror
mov
inc
cmp
lods
xchg
fcmovb
stos
pusha
mov
pop
pop
add
cmp
loop
bound
insl
aad
sub
cmc
dec
mov
cmp
push
leave
push
inc
mov
jge
pop
sub
mov
mov
shlb
jle
or
jae
pop
or
dec
mov
stos
pop
stos
pushf
jle
fs
dec
leave
mov
outsb
dec
test
inc
mov
js
jl
out
adc
xor
mov
add
adc
ja
stos
pop
push
lcall
out
and
sbb
scas
mov
pop
pop
jge
or
cltd
jmp
jno
je
adc
shll
push
mov
out
xor
aaa
rorl
push
test
arpl
or
pop
adc
roll
add
jbe
fwait
inc
sub
aaa
int
mov
in
push
shl
mov
pop
mov
les
and
jmp
cmp
mov
cmpsb
sti
push
xor
hlt
mov
mov
and
cmpsl
push
sub
loope
pop
rcrb
jge
mov
push
insl
pop
scas
mov
loopne
add
sub
repz
inc
iret
ljmp
dec
rorb
dec
sbb
stos
test
adc
push
inc
adc
jne
adc
movsb
mov
clc
sarb
sub
fisttpl
test
add
adc
leave
or
and
rcrl
lock
sbb
das
dec
push
sahf
add
cmp
inc
jo
ja
mov
xchg
xor
pop
fmuls
jns
mov
jmp
popf
xor
mov
cmpsl
pusha
xor
in
jp
mov
ret
xor
push
sbb
push
xor
xchg
out
cld
outsl
or
testb
adc
dec
outsb
xchg
xchg
es
push
adc
lahf
mov
ret
aam
mov
loop
inc
sbb
fwait
pop
xchg
stos
jmp
xchg
or
mov
push
push
ljmp
dec
xchg
fcompl
pop
int
push
and
cmpsb
adc
push
int3
pusha
stc
push
fcmovnb
jg
cmp
out
mov
fsubl
jns
adc
add
xor
sbb
jno
mov
and
cltd
lods
aam
pushf
jmp
inc
mov
pop
or
cmp
sub
je
insb
das
mov
xor
andb
dec
dec
rorl
jge
out
arpl
or
enter
decl
jle
xor
dec
or
mov
mov
adc
add
adc
int
push
pop
fdivp
lret
and
xor
into
or
sbb
mov
adc
lods
add
cmp
push
dec
jno
ds
iret
mov
push
in
cs
xchg
adc
into
adc
in
xchg
scas
pop
ret
jns
xchg
data16
ret
lods
dec
out
out
pop
lcall
shlb
test
mov
push
rorb
xor
sbb
jl
pop
int3
add
inc
inc
adc
inc
jmp
pop
arpl
lds
inc
sub
sbb
jecxz
mov
xchg
aas
sahf
mov
dec
xchg
xchg
dec
add
xchg
mov
inc
imulb
inc
imul
cmp
in
dec
rclb
loope
add
xchg
mov
mov
cwtl
in
jbe
jmp
js
push
push
daa
pusha
shl
leave
xchg
sub
aam
in
je
sbb
pop
popf
inc
mov
or
sub
stos
lock
mov
mov
push
pushf
mov
cmpb
xchg
ret
aad
xor
mov
mov
dec
pop
and
sbb
push
incl
fs
cpuid
pop
fsts
shrl
iret
ja
mov
jb
insb
stc
sbb
pop
nop
pop
inc
arpl
loope
lret
mov
imul
xchg
mov
inc
xor
cmp
movsl
push
pop
or
xor
jl
push
jb
mov
inc
lods
adc
inc
cmp
enter
sbb
sub
cmp
xor
adc
mov
mov
xchg
cltd
push
cmpsl
add
nop
std
aaa
jp
loopne
stc
pop
std
adc
outsl
mov
mov
fisubrs
mov
js
pop
sbb
ret
fadd
push
imul
adc
movsb
mov
lcall
mov
cmp
add
sub
imul
hlt
push
fisubl
outsl
and
pop
adc
mov
push
jae
sti
cs
lret
sub
jne
mov
xor
adc
push
push
scas
mov
lods
xchg
imul
subb
xchg
add
push
fcoml
stos
lret
xor
jno
rclb
popa
push
jno
cmpb
fsubrs
mov
and
mov
push
ror
arpl
pusha
fldt
addr16
mov
stos
test
aam
jmp
in
int3
rclb
fldcw
xor
mov
pop
lods
jmp
jecxz
inc
in
cwtl
mov
test
cli
daa
jge
or
bound
loope
ret
icebp
bound
cltd
xchg
push
xor
ds
mov
iret
dec
xor
xor
rcl
dec
or
test
shll
fiaddl
xchg
sbb
add
jnp
neg
push
mov
and
push
xchg
out
repnz
imul
push
xor
pop
hlt
ss
inc
push
rol
movsb
cmp
mov
outsl
add
test
iret
mov
adc
pop
je
es
ror
xor
xlat
push
mov
or
sarl
jnp
psubusb
jno
lods
je
inc
mov
pop
xor
jg
jle
push
test
or
mov
lcall
sub
ja
xchg
xor
aaa
push
jns
or
test
sbb
or
lgs
and
adc
pop
test
rolb
pop
out
mov
add
push
sbb
mov
sti
lret
sub
test
push
cmp
and
fisttpll
pop
shlb
js
pop
or
mov
rorb
fcmove
fwait
xorb
sub
fldl
decb
pop
sbb
inc
lcall
andl
or
push
or
mov
pop
int3
adc
pusha
pop
inc
std
fwait
push
imul
xor
ss
or
movsl
xor
daa
push
mov
test
mov
adc
popa
mov
std
add
push
lahf
add
push
fildll
xlat
cmc
sub
lahf
jo
cwtl
and
jg
pushf
movsl
jno
mov
xchg
pop
add
enter
jl
and
ss
data16
mov
adc
lcall
mov
es
hlt
or
jb
es
pop
in
cmp
rolb
add
mov
ret
pop
pop
ja
js
out
scas
jno
mov
sub
fmul
mov
test
xchg
ds
mov
clc
lods
dec
incl
xor
sbb
fists
cmc
int3
jb
pop
jo
outsb
enter
sbb
setge
inc
cmc
adc
adc
inc
mov
add
sub
test
ds
addr16
and
sub
sub
mov
imul
jnp
mov
testl
into
lahf
cmpsl
jb
cmpsl
add
aam
mov
sti
mov
add
dec
dec
loope
mov
out
mov
shr
mov
xchg
push
int3
xor
scas
ret
sbb
idivb
jp
jno
mov
in
cs
mov
mov
test
jecxz
add
mov
cmp
sub
repnz
cmpsb
xor
cwtl
mov
pop
xchg
dec
jp
push
lods
adc
ret
das
adc
addr16
xor
jno
add
leave
nop
cmp
aaa
jmp
fdivrl
imul
out
mov
repnz
jnp
pop
sub
xor
mov
pushf
dec
jg
ret
sbb
adc
pop
jp
inc
lahf
cmp
scas
push
push
loope
cli
lahf
pop
cmc
inc
inc
mov
or
and
cli
loop
loopne
mov
and
push
mov
jmp
jecxz
mov
test
popa
scas
adcl
mov
jle
push
gs
xor
repz
pop
mov
aad
xor
sub
push
test
or
adc
dec
es
xor
ficomps
xor
cmp
clc
xchg
xchg
add
hlt
cmc
inc
jae
xchg
dec
test
jl
jp
cld
mov
lahf
add
ljmp
jp
xor
sub
mov
sbb
add
inc
lods
mov
pop
add
test
push
icebp
inc
popf
and
dec
push
out
loop
sbb
movlps
add
sahf
leave
adc
mov
cmpb
lds
pop
ljmp
test
xor
ds
popa
lret
adcl
jp
aas
ja
xchg
lods
icebp
orb
stos
jnp
push
icebp
xorl
or
mov
lea
sub
imul
jbe
adc
sub
nop
fisttpll
mov
sti
popa
cld
negl
xor
shll
test
jecxz
xor
dec
cmp
lds
fadds
sub
xchg
adc
bound
sub
push
into
lahf
lahf
dec
mov
inc
xor
cli
mov
decl
xchg
push
movl
fwait
dec
mov
pushf
mov
mov
cmp
and
xchg
mov
mov
adc
sub
test
cmp
mov
inc
xchg
inc
jno
push
loopne
xchg
jecxz
dec
push
push
pop
jg
out
aas
enter
sbb
mov
xchg
jecxz
scas
out
mov
push
ja
loope
jnp
or
aaa
mov
mov
adc
sbb
rcll
fwait
insb
mov
fchs
bndstx
jnp
fwait
lret
xor
shl
push
mov
hlt
add
rorb
stos
adc
cmc
jecxz
inc
add
out
add
loopne
enter
fnsave
outsb
push
mov
leave
mov
mov
adc
adc
gs
std
cld
pop
shrb
cli
inc
movl
push
out
bound
xor
out
push
xchg
mov
stc
jo
int3
dec
pusha
mov
aas
mov
std
pop
je
mov
jmp
mov
xor
je
dec
jne
es
and
jne
push
sbb
and
xor
dec
mov
popf
jbe
hlt
mov
jb
rcrl
ret
insb
ja
jge
add
pop
mov
sub
sub
shl
das
mov
sbb
es
test
inc
lock
aaa
pop
sub
insb
ss
cmc
loope
jp
bnd
lds
mov
jb
add
push
mov
pop
sbb
shll
pop
aas
inc
mov
adc
cli
aam
xor
and
xchg
arpl
push
jge
and
pop
push
jp
in
lret
lds
cs
xor
jns
test
int3
je
dec
or
into
mov
dec
push
push
xor
out
aad
and
rcl
add
mov
adc
dec
mov
and
lds
lret
faddl
add
nop
jne
nop
fwait
and
inc
pushf
jne
insl
icebp
cmpsb
mov
xor
testb
nop
lods
sub
movsl
cld
outsl
jmp
in
or
fs
jmp
fstps
fldcw
mov
lods
test
insl
xchg
inc
push
scas
mov
pop
add
mov
xor
mov
sbb
pop
fstpt
and
mov
xchg
in
xchg
sbb
mov
sub
aaa
icebp
mov
outsb
mov
jle
inc
mov
push
xor
loopne
cmpsb
fmul
dec
mul
andb
xchg
iret
fwait
mov
nop
fisttpll
in
pop
xchg
jns
lods
inc
xchg
xchg
mov
rcrl
xchg
js
stc
orb
orb
mov
xor
movsl
data16
pusha
mov
test
inc
outsb
dec
add
and
xchg
ret
pop
mov
add
push
scas
arpl
push
je
xlat
adc
out
jmp
fstl
shlb
jo
dec
scas
adc
movsl
pop
push
cs
adc
icebp
arpl
and
adc
jo
mov
push
inc
repnz
arpl
push
push
lods
sbb
subl
int3
and
sbb
fnsave
test
sub
or
scas
add
add
movl
cmp
mov
and
push
mov
or
mov
mov
inc
bound
outsl
arpl
mov
sbb
jb
icebp
or
or
das
imul
leave
les
hlt
stos
jmp
xchg
xchg
add
aaa
out
jmp
sub
lea
jge
cltd
pop
jg
xchg
in
and
pushf
rcrl
push
out
sub
mov
pop
test
xchg
push
xchg
mov
outsl
cltd
xchg
rolb
idivl
gs
adc
inc
dec
out
sbb
mov
xchg
mov
push
sbb
decl
leave
pop
jle
iret
cmp
pop
or
les
inc
and
and
scas
int
adc
sub
adc
call
xchg
mov
imul
into
dec
iret
outsb
out
shrb
dec
jg
xorl
fstpl
jecxz
fists
divb
into
addr16
test
dec
dec
and
enter
fdivs
repz
mov
fcompl
call
xor
ds
inc
push
push
mov
hlt
jns
insl
pop
pop
into
lret
push
mov
lcall
in
push
insl
mov
les
add
push
sbb
imul
xchg
mov
flds
jl
lahf
jmp
xor
sbb
sbb
ret
faddl
jne
out
xchg
jnp
in
mov
cmpsb
mov
xor
clc
into
stos
xchg
inc
cmp
fldl
or
pop
xchg
addr16
cmp
xor
sti
push
cmp
jle
sbb
popf
out
push
cmc
int3
nop
aam
add
out
loope
push
dec
pop
jle
jo
popf
xchg
and
pop
sbb
mov
inc
stos
jl
jnp
andb
lret
fidivrl
jb
mov
pusha
sub
in
pop
adc
push
push
dec
sarb
pop
fidivrl
jl
out
cmc
ret
shll
cmc
aam
je
lods
add
jmp
push
loopne
out
inc
outsl
inc
xchg
cld
cli
push
adc
lea
jno
mov
sbb
loopne
mov
jl
cmp
or
cli
push
mov
icebp
jp
inc
push
jb
mov
jb
adc
and
pushf
movl
push
mov
push
movsl
fwait
insl
lahf
dec
imul
push
inc
add
icebp
mov
add
movsb
ficoml
mov
xor
and
inc
inc
lock
popa
sub
xlat
sahf
out
in
add
push
fisubs
into
pushf
scas
fcoml
jb
fwait
je
lret
jo
stos
inc
and
lea
pop
xor
add
faddl
adc
aas
movsl
or
cmc
movsb
jle
jecxz
sarb
repnz
add
sub
pop
jne
mov
lcall
xor
mov
jnp
push
les
cmpsb
sbb
test
and
sbb
lea
daa
mov
fneni(8087
bound
jbe
idivl
adc
mov
pop
stos
fstps
pop
in
mov
pop
int3
push
shll
mov
clc
mov
sub
mov
or
in
outsl
cmp
ret
jmp
sti
mov
in
push
cltd
xor
int3
xor
fsubs
jmp
imul
loop
movl
add
shrl
jb
dec
shr
mov
filds
dec
xchg
rcrb
test
in
xchg
push
jno
popf
jne
xchg
xchg
jo
mov
orb
repnz
xchg
jae
out
adcb
dec
mov
in
push
inc
lahf
xchg
cs
mov
cmp
and
push
les
in
mov
jns
stc
mov
mov
lods
mov
mov
stos
clc
jb
fcompl
mov
push
and
jl
fwait
push
inc
xor
js
test
out
mov
xchg
push
and
cld
out
rorl
lods
ficoms
in
shrl
jle
inc
es
sbb
mov
clc
inc
xor
stos
jp
cmpsb
and
lret
dec
lock
add
cmp
add
sti
ret
push
mov
in
ljmp
sbb
xor
in
ss
sbb
imul
add
xchg
in
and
xor
lcall
sub
mov
mov
xor
int3
fadds
or
xchg
push
gs
loope
test
and
xchg
mov
mov
xlat
scas
pop
cwtl
in
jnp
add
movsb
movsb
mov
imull
test
call
sub
pusha
jns
cmp
xchg
sub
adc
sub
into
push
mov
aad
lcall
sbb
add
outsb
pop
cmp
hlt
cli
add
dec
adc
mov
xor
push
sbb
dec
push
push
test
lret
fiaddl
pop
jg
imul
jmp
sarb
sub
or
xchg
shll
and
xchg
cmp
cmp
cmpl
in
sub
mov
es
pop
cmpsb
cmp
imul
xor
scas
lea
or
sub
jl
xor
testl
add
fnop
add
pop
enter
pop
and
sbb
test
push
sbb
mov
cwtl
nop
push
testl
fcmovu
leave
gs
ss
xchg
sbbb
cmc
ret
gs
pop
popa
cmpsb
leave
fists
xchg
lahf
jmp
cmp
bound
jge
mov
fcmovu
sub
push
or
fiadds
adc
and
inc
sub
ret
push
fstpl
jmp
cmpsb
loopne
pushf
sub
or
std
pop
shlb
adc
pop
xor
jp
mov
test
int3
aaa
pusha
dec
jl
out
xchg
clc
push
inc
data16
mov
movsl
aad
pop
scas
test
dec
test
pop
pop
mov
mov
pop
loope
mov
mov
cmp
push
dec
stos
xchg
adc
call
lds
sti
mov
lods
fildl
lcall
cmp
out
mov
sbb
or
ljmp
ret
mov
sarl
clc
sub
sbb
inc
xor
jl
mov
mov
icebp
inc
lret
je
sahf
mov
stos
mov
imul
fwait
pop
fstl
jecxz
mov
and
pop
jmp
movsb
sub
mov
lret
fcoml
fmulp
pop
adc
sbb
cmc
and
cld
shrl
ret
imul
loopne
mov
push
jns
stos
jmp
sbb
xor
movsl
mov
adc
mov
nop
cmc
repnz
mov
mov
push
aas
mov
stc
pop
adc
mov
insb
mov
loop
xchg
subl
xchg
push
dec
xor
add
jae
imul
pop
jns
mov
or
pop
test
fcoml
aaa
mulb
adc
rcr
pop
add
pushf
popa
insb
inc
fstpl
mov
push
push
cmc
xor
aaa
fstl
arpl
outsl
push
in
enter
jne
mov
repnz
sub
add
sarb
cli
mov
push
scas
mov
xor
test
mov
xor
jbe
arpl
push
mov
sub
int
jge
mov
inc
mov
jmp
or
test
in
sub
outsl
cwtl
mov
cwtl
ljmp
add
push
cmc
outsl
cli
jo
icebp
or
clc
inc
aam
push
nop
mov
or
iret
lods
pop
push
mov
rolb
mov
sbb
sbb
xchg
push
sub
bound
hlt
mov
xchg
aaa
inc
std
je
lahf
pop
out
sbb
jo
mov
inc
push
inc
cltd
imul
xor
cld
mov
xor
mov
popa
sub
std
out
les
sub
mov
mov
test
jo
dec
mov
retw
out
daa
xor
sub
jno
outsb
adc
and
out
or
xor
add
cmp
jae
pop
mov
mov
push
aaa
cmpsl
mov
xchg
jbe
lahf
outsb
mov
je
sbb
dec
inc
ja
fs
iret
sti
mov
xor
gs
mov
sbb
shlb
mov
popa
in
xor
out
ds
test
mov
lods
cmpsl
push
test
mov
nop
in
xor
xor
or
loopne
add
ret
out
xor
pop
mov
mov
sbb
test
mov
int3
iret
adc
xlat
xor
xchg
push
pop
mov
test
mov
xorl
in
sub
scas
push
insl
inc
sbb
test
adc
fstpt
in
cmp
ja
dec
pop
iret
std
and
mov
in
xchg
mov
inc
dec
fmull
scas
and
dec
sbb
imul
mov
push
cmp
sbb
cld
sub
ljmp
jne
fiaddl
insl
inc
cmpsb
or
adc
cmp
mov
mov
and
xor
cwtl
mov
testb
dec
inc
fmul
into
adc
mov
push
jnp
pop
test
inc
mov
aas
dec
sub
popa
adc
subb
popa
xor
cmpsb
mov
test
pop
inc
lds
in
fwait
xchg
shrb
clc
sahf
sub
xor
hlt
std
aaa
repnz
pop
and
cmp
push
push
dec
inc
dec
int3
test
mov
xor
loope
fcmove
add
nop
into
sbb
push
sub
jnp
int3
xor
push
je,pt
xchg
loopne
test
hlt
into
aaa
mov
sahf
aas
loope
push
mov
mov
mov
xchg
scas
mov
push
ja
cs
adc
pop
pusha
js
mov
inc
int3
lods
dec
push
push
mov
lcall
aaa
push
adcb
out
loop
enter
sti
push
push
and
mov
mov
mov
mov
inc
daa
stc
mov
fcoms
nop
mov
test
pop
lahf
loopne
xor
mov
pop
clc
inc
sti
push
mov
xchg
cmp
out
fimuls
mov
dec
dec
pop
punpckhbw
das
pushw
jecxz
das
insl
jp
scas
inc
mov
mov
and
lcall
imul
cs
or
jle
out
pop
lock
dec
jo
jno
in
xchg
cltd
stos
or
and
xchg
mov
push
movsl
adc
idivl
vmovss
adc
outsl
push
js
inc
sbb
int
add
sub
or
jo
xor
jge
rolb
push
or
push
cmpsl
sub
lods
xorb
stos
xor
push
or
lods
sub
leave
lea
movsb
pop
or
adc
or
mov
into
adc
loope
pop
jg
decl
xor
ljmp
filds
ret
or
push
xchg
imul
pop
mov
jmp
adc
mov
push
mov
xchg
inc
lcall
cltd
mov
fldcw
xchg
lods
lcall
repnz
cltd
cmp
pusha
xchg
adc
aad
inc
popf
and
rcll
push
les
insb
ret
mov
dec
in
icebp
inc
lods
mov
enter
adc
push
push
and
xchg
lods
mov
cli
inc
jns
and
mov
test
mov
push
push
stc
sub
push
mov
fcompl
dec
xor
adc
mov
add
cwtl
ss
in
add
push
rorb
cmp
sbb
clc
ss
adc
and
fwait
cmp
lret
loopne
cltd
rcrl
lods
test
notl
and
mov
cmp
mov
inc
test
mov
pop
ret
mov
les
jns
repnz
xor
sub
pop
movsl
lahf
sbbl
aad
pushf
fimull
inc
mov
mov
cmp
jg
movsl
xor
out
cmp
test
xor
add
cmc
lahf
lret
mov
pusha
rcll
jle
shlb
data16
movsb
stos
xor
repnz
push
inc
pop
jl
push
in
mov
cli
mulb
xchg
dec
or
sub
int3
into
cmc
cwtl
cli
inc
xchg
dec
in
fdivrl
dec
das
add
aam
cli
fldt
xchg
dec
fidivl
inc
sub
mov
xor
push
es
icebp
ret
jge
icebp
cmc
lret
jmp
fistl
add
movsl
call
popf
addl
daa
or
addr16
iret
jns
mov
cmp
cmp
cmc
add
adc
push
movsl
repz
inc
rorl
mov
add
test
or
adc
mov
xchg
inc
test
cmp
adc
inc
mov
clc
add
gs
ja
xchg
cmc
fimuls
push
inc
and
dec
int
xorb
jbe
pop
mov
lods
loope
mov
jecxz
out
xchg
ja
xchg
adc
test
xchg
ret
or
stos
xor
fstpt
cmp
repz
push
sub
push
cmp
inc
divb
in
stc
insl
fwait
mov
in
lret
movsb
dec
hlt
leave
jg
or
mov
aam
je
jo
arpl
mov
cli
in
sahf
rcl
nop
fcoml
lods
into
loopne
shlb
dec
aas
and
cld
add
or
mov
mov
in
add
outsl
or
sbb
loopne
insb
mov
ret
push
jno
in
push
jecxz
data16
pushf
mov
pop
cmc
lret
icebp
sub
cmp
out
cmp
repnz
jns
fwait
call
iret
xor
and
jge
ja
pop
sti
test
and
push
add
and
xchg
sub
hlt
xor
je
scas
and
cmp
mov
add
xchg
pop
mov
push
cli
mov
fnstcw
outsl
ds
negl
out
cs
fxch
jne
fiaddl
pusha
mov
hlt
add
lods
pop
pop
nop
subb
mov
fwait
adc
inc
lret
mov
imul
xchg
or
stc
adc
lods
aam
lods
ret
in
sbb
inc
jnp
or
jne
fimull
mov
xchg
pushl
push
cwtl
inc
ret
imul
test
cmpsl
repnz
mov
cmp
sarl
pop
insb
pop
sbb
imul
pop
sti
sbb
pop
and
rolb
int3
addl
subb
cltd
bound
fcomip
jno
mov
rcr
push
or
das
test
adc
imul
ljmp
push
outsb
mov
sti
loope
inc
sbb
mov
int3
mulb
outsl
fisubrs
mov
lret
pop
adc
adc
lods
dec
popf
inc
mov
lea
aaa
jne
pop
fidivs
push
in
cmp
cltd
inc
push
xchg
mov
xor
xlat
push
mov
jg
divb
imul
push
fwait
jae
xchg
push
mov
mov
mov
mov
loopne
inc
insb
sahf
and
lcall
daa
repnz
rcrb
xchg
loopne
arpl
and
outsb
xchg
xlat
scas
fcos
jecxz
out
scas
sbb
iret
xchg
lret
sarl
adc
movsb
sub
jo
inc
test
mov
add
adc
xchg
or
sbb
pop
lret
push
ret
repnz
fdivrp
fnstenv
push
mov
bound
jns
jno
movsl
mov
fwait
pushf
fildl
out
test
and
push
cmc
aas
lds
mov
push
xor
or
rorl
add
nop
sub
xchg
sahf
xchg
ffree
icebp
mov
sbb
jmp
dec
push
pop
sbb
int3
mov
aam
das
push
nop
xchg
jae
jl
jns
in
push
shll
negb
into
hlt
out
pop
fdivs
pushl
dec
cmpsb
dec
inc
fwait
out
xlat
dec
fimull
repnz
pop
stc
sbb
ffreep
lret
inc
jl
mov
sti
fs
xor
inc
cmp
adc
imul
pushf
pop
fldl
and
in
inc
cmpl
lret
ljmp
enter
fildll
lea
cmp
es
fwait
mov
fwait
outsl
test
push
xchg
push
je
mov
sbb
mov
out
in
insl
push
pop
cmc
nop
cmp
xchg
out
repnz
pop
mov
mov
pop
lods
xor
xor
pusha
jb
sbb
and
mov
negb
ds
and
pop
movsl
lods
test
xchg
mov
pop
push
inc
xor
jg
lods
mov
xor
mov
rcl
scas
fwait
insb
pop
xchg
inc
daa
jno
push
add
jmp
mov
cmp
in
add
mov
sarl
cmpl
xor
shl
ljmp
cmp
aaa
adc
idivl
pushf
faddp
mov
xchg
cwtl
or
xchg
cs
jle
call
adc
inc
xchg
sti
mov
jae
cwtl
jbe
aad
sbb
or
inc
es
sahf
push
xchg
lahf
shl
mov
dec
lea
pop
ss
in
adc
jb
jae
cmpsl
insl
jl
and
jbe,pn
sub
jne
loop
lock
rcrl
pop
jne
push
jno
popf
mov
in
dec
push
inc
push
inc
mov
lret
rolb
xor
inc
std
out
repnz
mov
les
xchg
inc
je
orl
pop
scas
rcrl
jmp
lods
js
scas
jle
pop
mov
dec
xor
in
sti
add
outsb
push
xor
stc
inc
dec
lea
sbb
stos
out
es
mov
lods
sub
dec
mov
xlat
into
mov
push
jmp
imul
inc
adc
pop
aam
pop
mov
cltd
push
jne
xlat
les
xchg
cmpsb
fimuls
out
pop
cmpsb
pop
lods
dec
es
xor
out
js
insb
jge
rcrl
popa
dec
adc
pop
mov
push
test
add
fbstp
cwtl
popf
daa
imul
sbb
sahf
dec
sbb
rolb
mov
repz
pusha
push
sub
scas
push
popf
movsb
mov
lret
aad
push
mov
cmpsl
or
xchg
adc
jle
jge
insb
out
je
mov
xchg
jne
hlt
adc
aam
xchg
inc
andl
mov
fdivr
xchg
rorb
jo
cltd
mov
xor
jnp
test
add
mov
shlb
xchg
mov
mov
lods
mov
ret
in
pop
lods
pop
mov
and
arpl
push
lret
daa
cmp
je
pushf
pop
adc
sbb
aad
sbb
sbb
push
add
sub
sub
mov
jne
inc
les
imul
mov
enter
int
cwtl
pop
or
push
call
popa
add
and
outsl
pop
in
jnp
enter
lret
sub
aas
cmp
test
add
out
adc
out
imul
and
mov
dec
imul
add
jp
movsl
jmp
lret
mov
add
mov
lds
sub
or
mov
pop
mov
jp
mov
inc
movb
das
int
mov
adc
xchg
mov
cli
pop
xlat
in
imul
inc
pop
xor
and
sarb
bound
imul
mov
sarb
adc
push
jl
loop
repz
lods
adc
cmpsl
push
sub
aaa
mov
xor
pop
clc
pop
xor
mov
mov
nop
inc
stos
rorb
neg
sub
aam
lods
repz
adcb
insb
dec
sarb
jb
mov
bound
cmp
pop
outsl
cmp
inc
ficoms
std
leave
fidivl
adc
cwtl
test
fwait
push
ljmp
pop
push
call
pushf
out
sbb
push
cmpsb
mov
push
cmp
add
shlb
jno
cmp
cmp
dec
ja
and
push
into
js
xchg
pop
xchg
data16
das
mov
enter
xlat
pop
adc
sub
jge
out
icebp
xchg
dec
rcrl
cltd
insb
or
cmpsl
leave
data16
sti
inc
mov
fs
in
outsb
stos
int
iret
sti
push
pop
ds
outsl
int
mov
ja
sbb
int
cmp
or
or
cwtl
pop
mov
cmpsb
sub
stos
or
test
pop
push
mov
adc
iret
mov
sbbb
mov
mov
sub
xor
shrb
idivb
fbld
jp
push
xchg
je
gs
push
orl
repnz
xor
xor
popa
mov
mov
xchg
pop
xchg
push
pop
dec
jbe
pop
lods
inc
mov
jbe
clc
jns
push
out
add
bnd
cmp
test
outsl
and
push
cmp
in
out
ret
and
add
or
stos
and
mov
inc
jge
sahf
and
pop
dec
pop
aad
call
pop
enter
outsb
lret
or
arpl
jmp
lret
movsl
in
push
pop
aaa
jno
adc
sbb
cmpsl
scas
stc
sub
lock
dec
cmp
mov
mov
jo
mov
xlat
jno
fs
xor
mov
dec
dec
jno
mov
hlt
bound
pop
enter
repz
shrl
cmc
pop
jne
adc
test
xorl
idiv
call
loopne
jo
es
mov
loope
xchg
outsb
cmpsl
cmp
push
ficompl
insl
push
pop
jae
xor
dec
lea
fidivrs
test
jmp
dec
psubsb
jae
addr16
push
sub
inc
inc
push
out
xchg
xchg
jp
cmp
push
cmp
test
popf
cmp
inc
das
cmpsl
aam
mov
sbb
popf
or
jbe
stos
mov
pop
mov
inc
sti
fmuls
test
mov
xchg
outsb
mov
sub
scas
sarb
imul
or
and
lcall
push
dec
push
and
mov
mov
xor
cmc
movsb
sub
cld
decl
imul
sbb
cmp
outsl
orl
cmpsb
and
push
push
ret
xchg
cli
call
jbe
ret
inc
and
nop
and
jnp
or
sbb
mov
ret
scas
dec
rorl
test
xchg
in
mov
jl
in
cwtl
insl
ds
mov
or
int3
xchg
mov
movsb
and
jns
inc
lahf
loope
dec
aam
jae
sub
jne
popa
dec
pop
mov
addb
sarb
outsb
inc
xor
call
xor
dec
cltd
daa
adc
sub
pop
and
push
test
pop
inc
inc
fwait
xor
sbb
mov
pop
inc
shll
jg
mov
call
cmp
push
cmp
ds
out
jg
mov
scas
or
leave
loope
fisttpl
ljmp
jecxz
mov
mov
xchg
lcall
cmc
push
out
dec
cs
sbb
test
inc
xchg
fistpl
call
shlb
dec
jnp
aas
loop
lret
les
jnp
popa
scas
push
stos
jle
adc
es
jmp
jb
mov
mov
stos
push
mov
jl
sbb
js
mov
push
cmc
aaa
cli
test
stos
xor
repz
nop
push
xchg
mov
add
lods
mov
sub
mov
lret
xorb
addb
in
cli
cmpsl
dec
mov
scas
dec
rorb
xlat
pop
sti
jne
outsl
cmp
pop
pusha
push
sbb
inc
in
popa
testb
mov
mov
inc
iret
mov
push
and
fnstcw
divb
shrl
fisubs
xor
fsubp
lahf
inc
out
ret
data16
mov
mov
popf
push
rcr
sub
js
cmp
je
xchg
and
sbb
xchg
cs
adc
nop
lret
jns
in
scas
lds
xor
xor
icebp
and
aaa
inc
and
lret
inc
mov
mov
cmp
jne
call
or
repnz
xchg
fucomi
adc
loopne
inc
negl
push
cmp
mov
push
stc
mov
pop
movsl
or
lahf
mov
test
scas
xchg
jge
mov
mov
out
xlat
sbb
inc
xor
outsl
nop
inc
dec
jbe
int
out
and
jb
adc
shll
cmp
lret
fbld
sti
aaa
imul
clc
jns
xchg
rcrb
add
iret
stos
and
add
mov
or
mov
xor
xlat
lahf
push
xchg
movsl
bound
add
sbb
repz
and
out
js
stos
push
dec
out
add
fwait
sub
jge
int
dec
sbb
xor
lds
lods
mov
jge
jecxz
scas
or
icebp
pop
pop
adc
lcall
mov
and
xor
sti
mov
push
and
jnp
subb
stc
cltd
cmc
inc
mov
cld
int3
cmp
js
ljmp
xlat
push
data16
sub
daa
push
add
and
inc
icebp
fs
into
push
lock
mov
fsubrl
pop
das
xchg
jns
xor
in
aam
jno
inc
shl
and
jg
dec
jns
imul
popa
fidivs
inc
les
jo
repnz
ret
das
int3
dec
mov
adc
in
sbbl
int3
adc
cmp
mov
nop
movntq
insb
cmp
mov
mov
cmpl
hlt
call
mov
gs
xchg
push
push
push
sbb
cmp
out
and
call
movsl
inc
mov
nop
or
mov
mov
in
dec
cltd
xchg
cmp
adc
dec
fwait
xchg
std
movsl
ljmp
shll
or
and
rcrb
fstp
dec
les
cmpsl
lahf
inc
test
ljmp
mov
push
mov
test
xor
jge
mov
insl
sbb
xchg
xchg
adc
insl
test
sbb
int3
jbe
leave
push
gs
insl
jmp
push
cmp
push
or
call
lods
loope
and
vmovupd
push
mov
mov
pop
cwtl
out
nop
inc
xchg
adc
pop
jne
lcall
or
cmp
push
and
testl
inc
push
push
clc
shlb
sahf
arpl
fs
pushf
sbb
push
dec
jns
stc
cli
and
jb
mov
and
test
mov
out
clc
xchg
mov
mov
sbb
std
mov
dec
push
xor
add
mov
orb
test
sbb
jns
loop
mov
sub
jl
mov
call
or
js
xchg
mov
mov
fimuls
idivl
xchg
sti
int
adc
jno,pt
mov
dec
xor
imull
jae
cltd
cmp
jge
gs
jne
test
push
mov
xchg
pushf
pop
ret
inc
shl
fwait
lahf
or
fbld
movsl
xchg
aam
scas
pop
nop
repz
push
mov
outsl
cld
fisttpl
in
xchg
inc
xor
xchg
lcall
in
test
sbb
dec
ret
out
cmpsl
sub
clc
jae
cmpsl
data16
ss
sarb
jl
push
les
jb
popa
popf
xor
push
movsl
lock
jb
pmuludq
cmp
jne
mov
adc
les
xor
lret
mov
sbbb
fs
xor
test
cmpsl
jp
popf
push
in
in
nop
in
xor
jmp
sti
fwait
xchg
push
pop
ljmp
mov
test
lods
cs
aad
or
rcrb
shlb
ja
addr16
jbe
sti
repnz
cli
scas
sub
or
and
push
clc
cmp
ljmp
divl
inc
cmc
aam
adc
addr16
imul
lock
xor
dec
dec
mov
sbb
push
sbb
fs
repnz
sub
mull
or
pop
movsb
incl
lods
sub
stc
or
push
outsb
dec
cwtl
sti
add
insl
mov
test
mov
xchg
outsb
cmp
int
lret
mov
adc
cmp
fildl
arpl
pop
lahf
ret
pop
arpl
stos
xchg
jae
dec
mov
aam
mov
pop
xchg
lahf
bound
or
cmp
sarb
and
ja
rcrl
xlat
and
sbb
xlat
repz
mov
in
out
inc
popf
sub
cmp
aas
and
cmp
fiaddl
in
imul
dec
dec
in
sbb
pusha
add
mov
xchg
push
pop
in
add
test
sbb
repz
mov
gs
push
test
fucomi
imul
outsl
fwait
xchg
cmp
push
dec
mov
dec
mov
mov
jns
cli
add
sbb
mov
lods
push
jmp
inc
inc
or
jnp
roll
cwtl
xchg
aaa
push
jb
mov
mov
aad
in
lcall
inc
xchg
pusha
xchg
pop
notl
push
ret
jmp
inc
jl
mov
mov
sarb
add
cmp
mov
xchg
inc
fnsave
pushf
or
iret
in
movsl
sar
sbb
mov
fnstenv
in
push
xchg
pusha
int3
push
sbb
mov
xchg
aas
outsl
sub
adc
mov
dec
mov
xchg
arpl
test
dec
fistpll
les
scas
or
inc
imul
scas
daa
scas
jbe
in
lret
mov
jecxz
lock
cwtl
jnp
incl
pop
test
mov
stos
push
jo
sub
sahf
adc
mov
negb
sbb
push
xor
aad
push
dec
das
dec
jns
inc
or
add
inc
xor
fwait
daa
mov
pop
push
and
inc
into
in
push
lods
sbb
adc
leave
fidivl
lods
loope
out
adc
or
inc
cltd
or
pmovmskb
cmp
jae
cmpsb
lods
adc
sub
into
cmp
sti
scas
inc
call
jmp
leave
jmp
cmp
loope
cmpsl
dec
xchg
stc
push
push
xor
notl
inc
lds
xchg
lret
shrl
inc
adc
imul
loope
adc
jno
mov
push
xchg
push
sbb
ret
and
repz
pop
es
add
lods
xchg
shlb
pushl
in
add
shlb
dec
lret
enter
xor
sub
xor
jmpw
icebp
pop
in
sub
rcrb
and
das
dec
data16
inc
mov
xor
push
jmp
divl
mov
sub
gs
xchg
push
aas
fcomip
push
xchg
iret
jp
jmp
mov
pop
sub
rep
js
xchg
mov
aas
adc
xor
pop
ljmp
call
inc
push
pop
iret
and
xor
xchg
fs
dec
sub
in
int
adc
iret
dec
cltd
and
jae
push
faddp
pop
dec
jp
mov
or
fisubrs
push
fstpt
and
ljmp
stc
stos
mov
xchg
jle
jnp
cmc
insb
cmp
add
add
icebp
scas
or
jno
adcl
mov
mov
pop
push
filds
insl
pop
push
and
sbb
enter
or
cltd
lods
or
out
cwtl
xor
outsl
cwtl
insl
rclb
into
mov
popa
test
mov
clc
jg
mov
shr
xchg
stc
mov
dec
dec
bound
out
cmp
cmp
and
jmp
and
leave
add
mov
push
callw
mov
gs
pop
mov
xchg
rclb
mov
or
push
xor
sub
testl
loope
outsb
insl
out
jnp
adc
or
jo
mov
shlb
mov
xor
jmp
push
push
enter
sbb
das
das
xchg
clc
xchg
iret
fcompl
sub
xchg
in
sub
hlt
jno
push
ds
adc
rcl
leave
sbbl
and
loopne
mov
sub
mov
pop
sbb
sarl
pop
mov
in
xchg
push
mov
add
ficoml
sub
mov
leave
mov
movsb
inc
adc
lock
dec
nop
mov
add
int3
loop
xchg
sub
jp
xor
out
cltd
stc
mov
cs
cmp
push
sub
jecxz
mov
call
and
cmp
add
fisubs
lods
gs
movsl
pusha
mov
jno
cmpsl
xchg
pop
sbbb
les
push
jbe
jns
cli
mov
mov
xchg
sub
jecxz
jge
jne
or
les
das
ret
js
xor
stos
fsts
pop
test
cmc
rclb
in
fstl
xor
and
pop
int
sub
movsl
push
dec
jp
xchg
xchg
nop
inc
pop
mov
js
jmp
hlt
xor
add
pop
sub
lds
jg
loopne
cmp
xor
scas
mov
fnstsw
les
mov
mov
mov
push
inc
hlt
xchg
aaa
daa
ret
mov
flds
mov
daa
xchg
adc
pop
mov
cld
push
dec
aaa
cwtl
imul
int3
pop
stos
hlt
ret
jp,pt
loopne
das
pop
loop
inc
ds
ret
sbb
pop
setne
xor
fs
mov
aas
mov
stos
int3
adc
mov
std
iret
ret
xchg
leave
add
inc
xor
cld
mov
cmc
jp
daa
aad
inc
mov
sbb
xor
xlat
mov
cmpb
xchg
into
xor
mov
les
inc
ret
in
testb
dec
jbe
inc
cmp
popl
dec
ffreep
dec
jmp
xchg
les
jnp
mov
xor
push
insl
popa
adc
test
paddq
jbe
aad
movsb
lock
jp
sub
push
neg
into
ret
jg
jle
out
xchg
pushf
in
imul
shlb
jl
testl
rcrl
leave
push
mov
outsl
fidivs
push
mov
iret
pop
fiadds
and
sub
mov
jp
dec
fwait
adc
push
mov
adc
mov
pop
push
pop
enter
sub
ss
bound
xor
ss
int
xchg
jle
pusha
stos
adc
xor
test
jmp
psubusb
cs
inc
loope
ror
mov
enter
pop
dec
je
push
fstp
jne
mov
push
xor
stos
dec
push
lret
addl
pop
sub
xor
inc
rsm
pop
mov
iret
sbbl
mov
mov
and
sub
shlb
pop
jae
xchg
test
test
dec
mov
cltd
imul
mov
mov
aas
sub
shlb
shl
jp
jecxz
divl
push
ret
aas
mov
loope
push
subl
shr
xor
insl
in
out
cmp
ja
mov
sahf
cmp
dec
pop
or
cmpsl
push
hlt
sahf
xlat
ret
add
test
sub
and
xchg
inc
in
xlat
fiadds
stos
mov
adc
gs
sbb
stos
xchg
sbb
cmp
cmp
jmp
pushf
aad
or
push
pop
cli
sbb
loope
inc
in
add
xor
sub
out
push
gs
mov
and
sahf
int3
es
ret
add
and
and
xchg
push
fwait
mov
cwtl
imul
jo
dec
or
pop
mov
push
mov
add
into
pop
repnz
in
lea
or
jle
jns
sbb
hlt
cmp
cmp
jmp
lods
xor
ds
xchg
sbb
mov
fimuls
lret
in
mov
mov
xor
loopne
lret
push
outsl
out
dec
xchg
lahf
mov
xchg
mov
jns
fcompl
fs
mov
cmp
loope
imul
lret
xor
mov
inc
sbb
dec
cmp
shll
imul
ret
enter
mov
mov
pop
repz
pop
sub
and
and
mov
xchg
mov
sbb
mov
cmpb
sbb
pushl
mov
push
dec
aad
or
jbe
adc
push
lret
fwait
lods
fstl
sub
add
sbb
fisttps
popa
dec
aas
cs
fidivrs
adc
nop
xor
mov
mov
xor
clc
out
cs
dec
xlat
mov
cmp
jp
cwtl
sbb
adc
pushf
inc
jmp
int3
or
xchg
js
jbe
stos
fildl
shlb
lds
lock
mov
fdivrs
test
sarl
cmpsb
or
lea
inc
subl
scas
push
cmpsb
jns
push
sub
loopne
imul
adc
xor
or
dec
dec
in
pop
inc
outsl
mov
adc
sti
jge
daa
mov
sub
into
adc
inc
xor
insl
xchg
push
and
mov
push
sub
lds
jmp
inc
push
pop
push
notl
mov
outsb
lods
fnsave
cld
das
shlb
nop
lahf
inc
test
push
mov
xchg
in
inc
cmp
sub
pop
outsl
sbb
jl
push
lret
mov
imul
rcl
jle
popf
push
xor
xor
or
ficoms
xor
scas
or
inc
adc
sahf
sti
into
xchg
aas
inc
shr
pushf
std
push
fbstp
es
dec
xor
pop
je
lods
sub
push
subl
sbb
or
push
movsb
orl
fidivrl
imul
adc
cmpsb
hlt
cmpl
push
pop
scas
pop
aad
dec
pop
sub
repnz
das
dec
std
sbb
dec
icebp
sahf
jl
js
inc
js
imull
imul
int
imul
push
rcll
jle
push
fdivrs
push
mov
inc
ficoml
sbbl
or
add
jb
xor
scas
adc
ror
xor
mov
xor
loopw
cs
dec
idivb
xchg
xor
mov
daa
mov
cwtl
enter
cs
insl
loop
and
out
fsubrl
xchg
movsb
pop
call
cmp
lds
pop
ret
cmp
sti
rclb
dec
inc
push
test
push
aas
rcrl
pop
mov
dec
lods
xchg
xor
add
mov
mov
pop
out
sub
clc
push
lea
dec
dec
sub
lcall
inc
cmp
mov
and
sbb
icebp
cmp
or
jbe
insl
pop
in
imul
pop
lock
push
iret
test
dec
pop
mov
dec
mov
inc
jnp
jo
ds
aaa
fildll
cmp
dec
out
jge
incl
inc
or
jg
pusha
mov
push
neg
push
outsl
jno
cwtl
mov
pop
lods
dec
inc
mov
xor
arpl
mov
daa
or
cmp
ljmp
push
mov
pop
mov
xchg
lcall
add
or
jge
cmpsb
cmp
sub
sub
scas
fstl
movsb
fdivrs
mov
dec
xor
je
gs
mov
mov
repz
mov
mov
cwtl
push
jl
divl
mov
cmp
enter
sub
inc
dec
mov
test
dec
and
mov
sbb
and
mov
add
das
add
jle
mov
call
insl
cmpsb
inc
das
andl
xlat
aad
popf
out
fwait
stc
dec
push
inc
ja
lods
shl
or
dec
pop
dec
inc
push
inc
enter
xor
movsb
data16
pop
pop
ljmp
popf
stc
stos
xchg
je
sbb
mov
and
lret
pusha
data16
in
hlt
inc
mov
adc
sub
jo
test
insl
rorb
icebp
jne
gs
pop
mov
sbb
shrb
inc
cmp
shlb
stos
cld
pop
in
xor
and
imul
lds
mov
jo
cld
sub
std
pop
popf
mov
sub
add
imulb
cmp
sub
pop
loopne
and
cs
or
mov
sub
cmpsl
pop
pop
loopne
pop
jle
adc
rcll
sbb
add
outsl
xchg
repz
cli
lcall
lret
add
mov
mov
cld
int3
into
add
and
aad
mov
subb
lods
dec
insb
and
imul
in
lret
or
cmp
insl
or
mov
cwtl
nop
sbb
lods
sbb
sbb
shll
add
leave
mov
js
inc
and
and
mov
push
pop
aad
mov
add
mov
push
hlt
shlb
mov
insl
stos
cwtl
pop
out
fs
adc
lock
and
ss
inc
fsubrl
in
push
jg
sbb
loop
inc
xlat
sbb
push
mov
sarb
addl
int
mov
mov
lret
cmc
adc
jne
imul
xchg
xchg
xchg
ficomps
push
lods
sub
scas
sbb
sub
test
ret
mov
mov
jge
mov
movsb
cwtl
dec
jg
sbb
sahf
dec
pop
test
out
and
adc
repz
es
push
outsl
test
jg
pop
cmp
enter
popa
in
xchg
pop
aaa
shll
pop
lds
int
xor
xor
mov
fisubrs
in
in
xchg
xchg
pushf
inc
jne
xlat
rcrl
rorb
outsb
sub
mov
shll
push
mov
icebp
dec
mov
lds
shlb
jl
mov
cmp
mov
xchg
mov
rcrl
int
xchg
aad
ret
mov
inc
mov
inc
and
iret
mov
icebp
aad
mov
setl
cld
jo
push
shlb
rorl
push
sbb
inc
add
fisubrs
pxor
es
and
fwait
xchg
cmp
mov
mov
sbb
push
cmc
dec
pop
ret
and
cmp
lcall
mov
push
or
mov
sub
scas
and
pop
cmpsl
ret
outsl
push
fsubl
cli
in
dec
or
inc
push
scas
call
ficomps
cmpb
adc
jl
decb
ds
pop
inc
push
pushf
hlt
mov
into
ret
push
pop
sub
jb
dec
sbb
ret
outsl
aas
cmpsb
dec
mov
mov
xchg
lea
cltd
popa
pop
cmc
mov
imull
popf
iret
push
lds
sbb
push
outsl
bound
xor
dec
pushf
stc
dec
add
lret
jmp
pop
cmp
fsubrl
mov
inc
repnz
push
jnp
into
fbstp
fnstcw
jecxz
jge
sub
sahf
adc
jns
pusha
jno
ret
push
test
lahf
out
mov
jae
xchg
ror
jmp
dec
adc
jae
fstps
test
rclb
div
xor
cs
xor
scas
sbb
pop
xor
cmp
ret
movsb
and
or
xor
adc
mov
scas
cmpsl
cli
mov
mov
mov
icebp
fwait
pushf
sub
inc
mov
sub
cli
sub
xchg
pop
adc
jns
and
int3
push
lret
pop
dec
jp
and
insl
pop
cltd
and
out
mov
push
rcll
ret
lock
mov
xchg
loope
mov
lods
xchg
out
aaa
mov
mov
or
push
adc
into
mov
pop
xor
test
pop
ror
sub
inc
clc
or
out
insl
out
inc
pop
sti
and
ds
call
test
xlat
int
mov
rcll
sbb
in
or
mov
dec
rcrb
scas
push
dec
inc
jl
xlat
inc
jecxz
push
sub
adc
mov
xchg
mov
test
xor
nop
fmuls
inc
je
mov
push
ss
or
arpl
mov
orb
out
inc
and
pop
pop
push
insl
lahf
push
negb
loope
lock
fidivl
leave
inc
or
in
pop
push
and
pop
sub
idivb
push
je
xor
es
test
push
mov
sub
ds
out
xchg
aas
cmp
das
push
mov
adcl
aam
stos
rdtsc
fcoml
mov
sbb
push
cmpsl
xchg
sub
rorl
or
or
sub
insb
dec
mov
pop
icebp
jb
or
push
mov
jbe
popl
imull
fidivrl
push
bound
inc
aam
xchg
xor
mov
push
outsb
mov
fisubrl
sbb
mov
lock
fcompl
mov
and
out
sar
xchg
jo
pusha
pop
lret
insl
shrb
mov
out
nop
icebp
int3
mov
fistps
or
jne
mov
into
mov
inc
push
ja
hlt
fistpl
mov
mov
int
sbb
mov
iret
cmp
push
xor
xor
adc
test
out
pop
dec
or
int3
inc
aaa
movsl
dec
mov
sbb
jp
and
mov
popa
xorl
mov
popf
shrb
jecxz
ja
push
pop
mov
pop
cmpb
mov
add
popa
inc
call
xchg
pop
inc
push
sbb
cmp
rolb
stos
mov
lds
popf
xor
and
dec
pop
adc
flds
stc
cmp
lock
outsb
cs
sub
pop
je
cltd
add
out
out
fstl
xchg
add
lahf
aad
fwait
ret
inc
add
loope
lock
push
cmp
in
push
add
mov
pushf
sbb
push
jge
jb
hlt
push
in
add
push
addr16
cmp
sub
and
mov
data16
fisttps
hlt
jmp
pop
int3
and
jo
fisubl
cmp
pop
and
repnz
mov
fs
insb
cmp
xchg
jge
push
pop
es
pop
int3
les
push
push
mov
psubb
sahf
cmpsb
imul
outsl
pop
sub
movsb
adc
nop
and
test
mov
lret
fisubs
sbb
adcl
mov
leave
idivl
les
mov
fisubrl
into
ljmp
dec
or
andb
clc
xor
push
adc
mov
push
jno
sbb
inc
shr
call
call
xor
test
outsl
daa
ds
xchg
enter
in
lret
or
dec
xchg
cltd
push
lret
lret
stos
mov
mov
mov
fsubl
mov
std
or
and
mov
movsl
stos
xchg
jo
adc
mov
inc
jo
sub
lret
loopne
fcmovb
clc
sbb
jb
pop
mov
fwait
push
bnd
xchg
pop
shr
gs
rcrb
test
mov
mov
ljmp
enter
dec
int
test
and
leave
aam
cmp
sbb
push
mov
fisubrl
iret
adc
pop
cmc
push
mov
xor
in
enter
xchg
jmp
push
dec
xor
mov
je
insl
sub
fildl
pop
aad
orb
adc
shr
mov
rcrb
ds
cli
pcmpgtb
pop
cmpsb
and
ret
pop
adc
aad
push
jno
pop
cmp
insl
std
sub
pop
testl
das
les
jmp
icebp
sahf
jg
out
in
xchg
inc
xchg
dec
mov
adc
sbb
mov
stos
jns
in
mov
xor
inc
inc
loopne
xchg
jb
andb
push
jle
cmc
sub
leave
push
mov
xchg
gs
push
cmp
mov
xor
xchg
mov
mov
jmp
ja
jns
mov
and
xchg
add
sahf
jl
mov
inc
lea
loope
xor
cmpsb
fnstsw
and
push
mov
les
out
loop
mov
cltd
xchg
xchg
or
xchg
scas
mov
repnz
cmc
push
lods
dec
in
test
negb
cmp
stos
push
add
mov
xor
dec
push
xor
add
out
in
jo
in
ja
sarl
add
rolb
test
mov
jo
dec
sbb
push
iret
imul
push
fdivrp
jno
pop
and
lret
push
and
xor
mov
arpl
les
scas
insb
mov
and
popa
lds
sub
push
pushf
call
push
add
push
sbb
jns
les
jo
jne
lods
adc
pop
mov
maxps
add
mov
jb
mov
sahf
stc
jb
in
dec
lock
mov
dec
lds
test
jno
roll
ret
lea
add
mov
lea
jno
out
je
dec
jg
xor
inc
dec
rcrl
or
fcmovnu
aas
mov
movsb
nop
dec
loopne
mov
outsl
out
rolb
insl
sbb
xor
adc
lea
mov
sbb
push
add
push
inc
es
push
into
jecxz
jmp
leave
das
cmpl
dec
cmp
xor
xchg
or
jbe
inc
sbb
adc
pop
or
cmp
xchg
fmuls
lea
imulb
xor
xchg
aam
jl
dec
push
pop
cld
inc
loopne
xchg
sbb
pop
adc
pusha
inc
dec
rclb
or
or
mov
gs
inc
cmp
mov
push
jne
push
jecxz
das
push
jmp
icebp
push
test
push
cmp
insl
out
xchg
popa
mov
repnz
loopne
add
adc
int3
sub
stc
cli
cmc
mov
fbld
pop
call
sub
pop
or
fcoml
outsb
xor
loope
jbe
mov
sahf
mov
jno
aaa
popa
xchg
cwtl
mov
decb
push
lock
inc
mov
cld
out
push
mov
xor
xor
mov
arpl
lret
and
inc
fcmovne
in
sti
sbb
mov
jo
int3
xlat
and
and
mov
addps
mov
ret
and
add
fidivrs
mov
frstor
les
sbb
mov
mov
fildll
cmp
cld
test
loop
pop
pusha
cmp
daa
icebp
cmp
test
push
data16
lcall
pop
mull
sub
pop
in
mov
jecxz
dec
cmpsb
xor
or
cmpsb
in
in
jmp
cmc
xchg
adc
popa
ja
addl
mov
icebp
add
sbb
inc
or
mov
inc
add
xor
loop
gs
xchg
lds
push
add
cmpsl
pop
sub
fdivrs
jecxz
xor
jnp
pop
sti
add
out
das
mov
shlb
sahf
aad
xchg
lds
or
cs
dec
mov
dec
cmc
int3
sahf
inc
jbe
sti
xchg
inc
int
xorb
add
inc
add
jbe
enter
fdivrl
mov
adc
test
movsl
mov
sti
or
rclb
scas
sbb
shlb
jmp
aaa
mov
sub
inc
fs
mov
sub
in
push
sbb
mov
ja
setle
mov
and
inc
sti
or
mov
shrb
mov
arpl
pop
pop
mov
mov
pop
xor
shll
in
xor
pop
push
scas
sub
mov
sbb
and
fwait
push
stc
fcmovne
sub
inc
xchg
fsub
mov
fwait
mov
scas
push
jge
pop
lea
mov
mov
mov
stos
adc
jns
xchg
push
cltd
and
and
mov
or
sbb
lret
mov
mov
js
sbb
adc
out
lcall
inc
dec
scas
xchg
shll
adc
popa
dec
xor
lods
sbbl
stos
dec
movsb
push
sti
andl
das
loop
imul
aaa
nop
sub
addr16
fstpt
jge
in
imul
sub
push
lock
inc
mov
sbb
jmp
add
push
sub
cmp
mov
add
or
inc
fcmovnb
adc
loope
stos
flds
add
dec
arpl
ljmp
iret
dec
and
lods
imul
push
int3
movsl
inc
in
lods
loopne
add
pop
or
xchg
ficoml
mov
jns
pop
pop
sbb
adc
xor
mov
gs
out
iret
and
cmp
pusha
dec
pusha
test
push
not
inc
pushf
fnsave
jecxz
in
pop
cmp
sub
sub
test
test
and
dec
dec
out
in
iret
insl
sub
loopne
ss
loop
and
mov
lods
cltd
mov
cltd
out
repnz
and
sbb
fidivs
sbb
pop
xchg
or
jmp
dec
mov
jge
or
lret
sbb
insl
ret
fnsave
jg
mov
dec
bound
lret
icebp
popf
xor
sbb
xor
jmp
and
xor
std
push
jae
pop
daa
sbb
pop
fwait
outsl
stos
test
out
bound
inc
imul
idivl
lods
mov
int
fsincos
jae
mov
leave
sbbl
adc
jns
push
pop
xchg
aam
jbe
cmp
loop
pop
cmovp
movsl
es
and
daa
nop
sub
addb
adc
sub
mov
cwtl
pop
les
jae
out
movntq
cmp
adc
daa
xchg
xchg
pushf
nop
mov
lret
mov
test
mov
push
cld
icebp
inc
shll
shlb
add
adc
into
popa
dec
add
pop
mov
add
std
adc
out
mov
aad
inc
dec
lds
nop
das
cmc
sbb
negl
or
jbe
inc
rorl
sub
adc
outsb
cs
inc
xchg
push
push
sbb
rcrb
jge
cmp
bound
mov
jns
imul
and
pusha
add
mov
je
jle
xchg
enter
inc
xchg
int
add
gs
bnd
shlb
ffreep
ja
pop
lret
stos
cmpsb
lcall
cld
test
aam
sbb
sub
add
iret
pop
dec
stos
sbb
cmp
loope
scas
mov
paddb
das
push
mov
int3
adc
xchg
mov
fsubrs
loopne
fs
les
insb
ficompl
adc
pop
into
repnz
in
and
out
dec
insb
xorl
inc
adc
xchg
and
jns
jae
jmp
insb
mov
js
or
ljmp
lcall
or
mov
xor
aad
lcall
xchg
pop
push
cmp
or
or
add
lea
mov
cmp
aad
and
adc
js
aas
leave
cmc
jb
cmp
lret
je
lret
dec
mov
les
mov
es
fs
test
sub
mov
mov
mov
jmp
mov
fldl
and
inc
inc
fs
mov
cmp
sub
shll
in
cmpl
test
cmp
cmp
addb
ljmp
cmp
jbe
rclb
jne
pop
clc
orl
jbe
sub
outsb
adc
cmovae
fiadds
cwtl
into
mov
mov
test
ljmp
jo
xor
inc
xchg
adc
xlat
inc
out
loope
push
sub
call
ss
inc
fs
std
or
mov
int3
push
push
in
enter
shr
cmp
sub
aaa
stos
add
es
sbb
popa
shll
icebp
mov
aad
insb
stc
add
nopl
stos
cs
push
cmp
out
ds
xor
gs
mov
push
dec
loopne
xor
mov
int3
cmpsb
push
fldenv
jb
add
mov
loopne
sbbl
movsl
adc
pop
mov
inc
mov
popl
insb
pop
mov
lahf
insl
jg
or
pop
xchg
ds
lea
adc
push
push
jp
push
jge
movsb
lret
sub
jl
ljmp
and
jns
cli
gs
mov
aas
xchg
or
test
ja
cmp
xor
inc
sbb
repnz
lods
fdivs
fsubs
pushf
jb
scas
hlt
cltd
in
imul
cmp
subl
add
fwait
add
cmpl
aam
je
xor
mov
lods
and
and
mov
xchg
pop
int
dec
jb
test
les
pop
pop
pop
out
mov
call
sbb
outsl
jp
lea
inc
notb
ja
aam
pusha
xor
roll
jno
notb
sbb
shl
nop
add
jnp
mov
push
jo
aas
jecxz
call
mov
aaa
sbb
es
push
sub
lret
push
mov
pop
stos
addr16
loop
enter
or
sbbl
ss
insb
inc
sti
fcomip
jp
dec
xchg
cmp
adc
repz
lea
insl
hlt
mov
mov
adc
mov
pop
repnz
jbe
add
mov
ss
mov
mov
int
stos
jnp
push
add
iret
stos
mov
ret
sarl
push
jo
fdivs
xchg
and
repz
movsl
int
popf
jmp
ret
push
pop
jbe,pt
jb
repz
adc
fisubs
sbb
push
mov
and
sub
stc
mov
adcl
mov
jns
repnz
test
lahf
or
mov
sbb
ljmp
or
xchg
mov
aas
and
adc
add
push
sbb
shlb
outsb
mov
xchg
data16
rclb
push
or
or
aaa
addl
out
xchg
sub
outsl
cwtl
jecxz
jmp
js
mov
pop
adc
mov
or
ret
jnp
cmp
cltd
notl
ret
lods
add
sti
push
jle
and
ja
or
roll
popf
loop
inc
dec
sbb
ds
mov
mov
lods
je
out
pushf
fistl
lcall
cmpsl
jno
insb
dec
mov
push
mov
sub
xor
cs
aad
rclb
xchg
sub
in
lahf
int3
cmp
xor
ds
sti
std
movsb
mov
shll
jle
fsubs
into
lea
mov
ljmp
push
out
add
xor
sti
mov
or
nop
into
and
push
pusha
xchg
or
fnstenv
lea
in
inc
xchg
pop
movsb
les
dec
push
in
ja
and
sub
imul
adc
or
push
mov
lock
addr16
dec
adc
cld
xor
pop
popf
lock
fwait
test
subl
ja
je
inc
call
cmp
or
fldl
mov
sub
ret
fcoms
out
mov
loopne
mov
xchg
lret
adc
dec
sti
movsl
adcl
xor
mov
nop
add
stos
stos
lcall
movb
js
cld
das
imul
in
lods
push
jns
stos
test
jns
mov
out
xchg
testl
das
push
lcall
sub
mov
lcall
inc
dec
push
popa
jmp
mov
shrl
cmp
fisttps
dec
mov
mov
cs
mov
bound
shlb
jno
sbb
mov
js
xchg
aaa
popf
adc
aas
push
and
or
add
cmpsl
push
sbb
xchg
je
inc
ja
sub
push
dec
cmpsb
xchg
xchg
hlt
stos
repnz
or
dec
clc
out
mov
dec
dec
push
cli
xchg
jnp
adc
push
sbb
lahf
xchg
fcmovnu
sarl
add
outsl
dec
mov
pop
js
mov
push
and
mov
add
add
es
fwait
push
xor
lods
icebp
push
icebp
push
dec
push
jne
jl
nop
lods
xor
fldz
jb
mov
xchg
inc
pop
jo
pop
in
adc
push
xor
dec
dec
add
jb,pt
fwait
lcall
das
cmp
imul
lds
xor
rcrb
imul
test
xchg
mov
shll
insb
xchg
mov
lahf
lret
push
lea
stos
in
dec
or
push
movsl
adc
dec
mov
lock
adc
scas
pop
js
sub
dec
xor
dec
nop
out
iret
xchg
sbbb
clc
imul
sub
mov
and
fstl
inc
pop
dec
sti
dec
addl
xor
test
fidivrs
sti
xchg
imul
xchg
xor
push
inc
sbb
movsl
push
rorb
test
adc
pop
lds
out
fstl
add
cs
push
or
pusha
cmpsl
mov
cltd
stc
addr16
jl
movsb
das
jl
add
popa
mov
mov
xchg
mov
mov
es
mov
add
js
inc
inc
aas
jle
pusha
inc
cmp
push
push
js
jbe
push
pop
xchg
adc
dec
sarl
jno
in
imul
sbb
mov
stos
xchg
movhlps
sarl
xor
or
or
mov
popf
push
rorl
push
daa
or
andb
dec
pushf
repnz
jo
mov
mov
out
fxch
mov
addr16
adc
out
rorl
mov
pop
sahf
call
enter
dec
stos
mov
pushw
mov
sbb
mov
cmp
gs
jl
sti
fwait
jbe
cmp
cmp
inc
sarl
push
loope
cld
std
sbb
pop
lret
xor
in
jno
fisubrl
adc
cmpl
jo
xchg
pop
jp
loope
mov
ljmp
ss
cmpl
daa
loop
jmp
daa
repnz
div
pushf
xchg
push
mov
cwtl
test
xchg
push
and
cs
addr16
leave
sbb
in
add
out
xor
mov
daa
add
push
sarl
cs
add
into
fcmovnu
aam
add
inc
dec
stos
xchg
das
scas
mov
ss
ja
jns
jns
stos
jle
stos
pop
fcompl
enter
mov
cltd
inc
xor
popa
lret
add
pop
push
jg
push
int3
sub
out
cmp
mov
aaa
stos
push
sub
push
stc
pop
roll
mov
ljmp
incl
fisubrl
jo
mov
pop
fildl
adc
rcll
test
pop
in
aam
loopne
shr
jne
cwtl
add
shlb
jne
and
cwtl
movsb
jbe
mov
hlt
jmp
sti
pop
adc
ss
outsl
std
xor
lahf
fmuls
push
lods
pop
mov
xchg
dec
push
addl
push
xor
nop
aas
pushf
repnz
sub
rclb
and
jmp
add
cltd
es
jae
data16
in
test
pop
test
ds
inc
out
mov
or
push
shr
bound
lahf
inc
dec
out
cltd
vmovupd
cmc
xor
add
mov
outsl
scas
test
clc
dec
sbb
pop
stos
xchg
sbb
mov
aaa
sub
rcrb
cmpsl
mov
ret
pop
cmp
mov
ret
aaa
sub
adc
pop
inc
xlat
les
adc
inc
nop
fildl
adc
mov
and
mov
mov
push
jle
inc
iret
dec
push
dec
jl
out
insl
xor
popf
or
jo
cmpsl
int
xchg
jbe
out
inc
adc
sahf
movsb
into
add
dec
jecxz
adc
mov
call
movsb
and
mov
fisttps
sbb
gs
xlat
sarl
mov
cs
mov
fisubl
xor
loope
int3
aas
rcrl
lods
xor
sub
dec
je
mov
cmpsl
in
das
out
push
arpl
jle
pusha
xchg
stos
nop
push
pop
and
lcall
arpl
scas
and
das
nop
xchg
test
add
ret
mov
inc
sbb
or
repz
dec
hlt
mov
xchg
and
idivb
pop
adcb
xchg
mov
xchg
dec
sbb
iret
add
and
lock
xchg
pop
lret
add
push
mov
sbb
cmp
int
rorb
mov
push
sub
dec
in
or
or
cwtl
push
push
push
xchg
ljmp
cltd
lahf
mov
mov
clc
clc
neg
ss
jecxz,pn
dec
or
in
sub
pop
xor
int
mov
fs
inc
repnz
jmp
sub
imull
mov
out
cltd
loope
and
mov
shll
jno
fstpt
add
in
mov
pop
add
lock
xchg
mov
aad
adc
xor
adc
shll
adc
xchg
loopne
mov
iret
data16
adc
ret
jmp
cmpsl
subl
pop
cmp
adc
cmp
mov
mov
xchg
add
ret
inc
cli
sbb
ds
shrl
lret
sbb
xchg
add
and
xor
into
aam
ds
mov
push
insl
sbb
push
popf
dec
pop
adc
push
and
sub
pop
or
mov
jb
xchg
push
xchg
mov
sbb
and
fs
cmp
mov
lds
jno
hlt
jne
ds
insb
or
mov
fxtract
push
out
aaa
pop
mov
mov
push
push
das
adc
hlt
stos
xor
iret
add
xchg
shl
ja
adc
and
adc
jae
cmpsb
mov
movsb
fidivs
or
test
fidivrs
test
out
jecxz
lods
lret
xchg
roll
lea
pop
rolb
xchg
jns
movb
lcall
xchg
addr16
cmpsl
loop
popf
cltd
cmp
mov
inc
outsb
mov
or
popf
mov
fs
pop
mov
enter
mov
mov
adc
imul
out
enter
push
arpl
jl
add
mov
jmp
adc
push
ss
mov
adc
jl
lock
cmp
mov
shrl
lock
loop
xor
mov
loopne
mov
vfnmadd231ps
hlt
nop
or
std
mov
xchg
aad
repnz
xor
adc
dec
into
or
adc
mov
cli
enter
ds
sub
push
xchg
mov
adc
in
sti
test
fcomps
int3
and
insl
and
or
xchg
xchg
mov
in
lods
mov
in
mov
aad
mov
sbb
inc
sbb
xchg
jl
hlt
aas
pop
push
insb
adcb
es
shll
iret
and
subb
dec
xchg
testb
shll
std
jb
in
loop
test
push
jns
adc
inc
inc
loop
cmc
xchg
je
mov
mov
scas
cmpsl
and
lcall
xrelease
xchg
inc
ror
frstor
mov
cwtl
sahf
add
xchg
or
aas
fcoml
mov
int3
push
outsl
mov
mov
loope
loope
or
rorb
sub
mov
and
mov
mov
arpl
dec
xchg
mov
push
lods
popa
repnz
gs
add
je
popa
imull
jo
inc
idivb
push
inc
jecxz
lcall
scas
jnp
aaa
int3
mov
xchg
out
paddsb
pop
outsb
jl
xchg
pop
lahf
xor
mov
call
fcomps
cld
push
cmp
in
mov
and
ret
add
rol
xchg
popf
stos
add
fucomi
lods
adc
push
pop
pop
fcomip
and
repnz
mov
dec
aad
adc
and
mov
ljmp
les
das
leave
inc
sbb
imul
lret
jnp
push
fdivs
pop
sti
mov
dec
adc
iret
add
sub
loope
adc
mov
push
xchg
mov
in
stc
jne
mov
add
cmp
mov
xorl
cwtl
fiaddl
xchg
adc
gs
add
mov
sbb
ret
jb
and
jae
and
xchg
ljmp
jg
cs
and
ljmp
pop
cmp
out
xorb
mov
xor
out
mov
dec
xlat
xchg
xchg
jne
movsb
mov
sbb
inc
inc
sbb
stos
mov
fbld
jne
jge
jl
clc
jb
pop
pop
cwtl
cwtl
xchg
arpl
lcall
xchg
mov
jns
cmp
jle
jb
sub
xchg
cmp
adc
inc
push
mov
out
loope
mov
nop
insb
dec
ret
fdivs
call
iret
sarb
inc
sti
psrlw
rcll
pop
jnp
push
fwait
decb
lock
ret
xor
fadds
ljmp
ret
ljmp
sarl
mull
fcoml
test
push
mov
adc
adc
mov
sbb
jns
adc
sbb
dec
push
push
test
mov
mov
mov
mov
cmpsb
dec
mov
inc
decb
aad
mov
fsubrs
jge
jecxz
lret
mov
pusha
int3
mov
imul
icebp
movsl
pop
xlat
outsl
mov
int
out
mov
mov
aas
bound
sahf
mov
test
sahf
cmpsb
lods
mov
xor
cmp
insl
ret
fwait
push
outsb
ds
pop
int
lods
out
aad
faddp
inc
lea
pusha
sub
adc
xor
mov
bound
fstpt
arpl
pop
jae
inc
sahf
mov
add
sub
pop
dec
std
inc
cmc
ds
and
mov
ficomps
lods
add
dec
cmpsl
int
mov
and
dec
jbe
imul
push
sub
out
cmc
pushf
pop
cmpsl
cmp
inc
jnp
pop
mov
shlb
jle
jle
cli
pop
push
bound
outsb
sti
insl
jecxz
jge
insb
add
or
clc
xchg
or
xchg
daa
bound
adc
cmp
popa
xorb
addl
pop
pushf
jbe
dec
out
dec
into
in
loope
adc
push
xor
hlt
push
push
jae
adc
gs
ficomps
inc
out
mov
push
stos
mov
pop
adc
in
aas
lahf
shlb
xor
xchg
mov
and
into
roll
stos
pop
and
dec
pop
andl
and
sbb
call
std
fadd
dec
adc
sahf
push
aaa
mov
pop
push
jl
sbb
in
mov
inc
cs
test
mov
movl
lds
repz
adc
mov
loopne
cli
sbb
lea
xor
insl
inc
jo
lods
jo
mov
or
lret
or
xchg
cltd
das
fists
gs
lret
or
rclb
cmp
adc
cltd
mov
and
push
fbld
out
cmp
dec
and
leave
enter
dec
jg
jl
test
das
test
cmpsl
pop
or
pop
outsl
inc
and
js
clc
in
ja
xchg
add
dec
rorb
pop
jnp
insb
cmp
mov
int
push
fcomi
mov
sub
popa
push
push
mov
jmp
es
push
or
sbb
das
lds
dec
stc
insl
lods
sar
in
int
pop
int3
jg
aaa
mull
add
pop
loop
sub
in
out
ds
mov
xor
mov
shl
iret
push
enter
ja
pop
out
mov
imul
ds
dec
subb
repz
jmp
leave
out
js
sti
clc
stos
ret
out
inc
xchg
scas
xor
mov
ret
sub
jg
add
add
stc
hlt
pushf
adc
nop
bound
xchg
pop
jg
ss
mov
cmp
sbb
or
mov
jg
outsb
push
test
mov
pop
sub
das
leave
xchg
fmuls
cmpl
fsubl
dec
add
pop
jle
and
sbb
mov
sub
dec
jae
push
stos
pop
add
cmp
pop
mov
cmpsl
cmp
and
mov
lea
push
add
sub
xor
pushf
jno
shrl
enter
mov
push
test
lods
jb
gs
inc
xor
adc
sub
adc
aam
roll
stc
insl
lock
adc
int
and
stos
pushf
adcl
and
repz
xor
rcrl
mov
ds
xchg
xchg
inc
cmp
movsb
lret
bound
jno
dec
fwait
dec
jbe
push
mov
nop
fdivs
adc
pop
das
insb
pop
loopne
dec
lods
cmp
mov
andl
dec
xor
aad
es
fdivs
or
hlt
enter
dec
adc
insb
mov
fs
nop
dec
gs
cmp
fwait
add
inc
js
fsts
sub
pop
mov
add
cmpsl
xchg
mov
xlat
jg
cmp
mov
push
gs
mov
fs
xchg
xchg
stc
or
sub
je
test
inc
jmp
js
dec
sbb
pop
push
inc
mov
xlat
sahf
scas
loopne
mov
cwtl
loopne
pop
sbb
push
ss
mov
lods
pop
mov
adc
lcall
sbb
call
inc
lock
cltd
inc
xor
in
out
fildl
lea
ficoml
in
int3
shlb
mov
aaa
sbb
lcall
push
sub
add
cmp
aam
insl
push
jecxz
out
testl
sub
sbb
repnz
test
inc
insb
jge
xchg
pop
jecxz
adc
ljmp
insb
out
bound
pop
and
fadds
int
and
movsb
popf
loop
cmp
sub
test
mov
dec
stos
inc
lahf
loop
cmp
in
clc
cltd
mov
test
xchg
xor
orb
addl
insb
fwait
mov
out
fs
flds
jmp
int
inc
mov
or
popf
sbb
fnstenv
sbb
or
add
add
sbb
into
xchg
popf
lahf
pop
enter
rorl
mov
xchg
test
mov
stos
dec
popf
lcall
push
and
stc
in
clc
and
mov
cmp
rclb
xor
xchg
pop
jo
std
or
jb
aad
rcrb
test
arpl
daa
movsl
rcrl
movsb
sbb
add
out
xor
mov
fstp
pop
push
popa
cmp
pop
mov
lahf
lret
adc
fsubrs
inc
push
ret
les
addl
add
dec
loop
data16
mov
pop
popa
loope
cmpsb
push
js
addl
in
out
out
pop
xchg
sub
in
dec
pop
ljmp
push
out
ret
dec
push
mov
or
cmp
xor
ficomps
flds
adc
das
leave
jle
pop
mov
adc
push
mov
ss
fldcw
inc
inc
hlt
jo
pop
ja
loope
xchg
xchg
sbb
pop
inc
push
xor
sbb
imul
cmp
rcr
arpl
shlb
mov
inc
rcl
aad
sub
test
outsb
and
out
sar
mov
shr
repnz
push
ret
cmp
sbb
push
xchg
jns
xchg
shlb
inc
jae
pop
sub
xor
nopl
fcompl
push
cmp
inc
jecxz
push
outsl
xchg
jg
hlt
icebp
lahf
es
test
pop
and
jl
nop
popa
cmp
shrl
cld
out
adc
cmp
hlt
mov
lret
pop
inc
dec
mov
pop
jne
jge
insb
jb
jg
pop
stc
sbb
imul
adc
sub
mov
pop
dec
pop
push
ss
xchg
jae
mov
into
inc
cmp
sbb
mov
inc
dec
push
cmp
iret
and
call
rorl
fiadds
push
xchg
push
addb
pop
sbb
dec
dec
xlat
popa
dec
mov
jo
sub
mov
fcom
aas
mov
xor
repz
insl
fistpll
add
scas
sbb
fs
and
lret
js
addr16
push
gs
adc
push
fnstenv
inc
fistl
xchg
rcrl
jb
mov
enter
int
dec
pop
imul
sub
pop
out
and
cmpsb
idivb
out
rolb
push
dec
pop
or
ficoml
mov
out
xlat
inc
mov
add
fnsave
fs
push
mov
and
enter
dec
mov
adc
pop
lret
fisttpll
inc
data16
and
in
call
pop
pop
jb
pop
cmc
sbb
pop
mov
sub
mov
ja
repz
adcl
stc
add
lea
adc
cltd
cli
call
out
ds
jne
pop
and
push
adc
push
xchg
xlat
cmp
shrb
call
push
roll
js
movsb
push
in
dec
sti
montmul
cmpsb
push
in
fwait
add
imull
dec
stc
loopne
out
mov
add
inc
lods
gs
ret
ret
xchg
mov
mov
lahf
pop
jge
jl
les
sub
jne
jecxz
and
shll
push
push
pop
mov
adc
int
sbb
int
iret
mov
xchg
mov
ss
jbe
adc
mov
dec
testl
test
clc
inc
sub
mov
testb
nop
outsb
sub
frstor
hlt
mov
ficoms
neg
repz
pop
lea
scas
jle
add
shrl
sahf
sub
jnp
ret
jecxz
aad
jo
lds
into
push
pop
xor
aad
ljmp
addr16
mov
ds
or
xchg
in
mov
cmp
mov
sbb
lahf
arpl
jp
in
or
cmp
sahf
adc
pop
fmul
rcrb
inc
cli
decl
xchg
outsl
dec
fsubrs
fwait
iret
out
xchg
js
into
fs
repnz
shrb
fildl
and
mov
and
fsubs
adc
push
jg
cmp
mov
cltd
mov
mov
pop
addr16
cmp
lds
jmp
in
xor
and
and
cmp
rcrl
stos
xchg
dec
outsl
xor
es
pop
ja
sub
aam
push
or
rorl
loope
in
aam
xlat
mov
xchg
fildl
fiaddl
inc
dec
cmp
sbb
jl
stos
jmp
fimuls
fsub
pop
and
cwtl
xlat
mov
xchg
xor
adc
daa
cmp
dec
add
in
repnz
cmp
xchg
lods
sub
sub
adc
sarb
mov
insl
xor
sarl
ss
jl
dec
mov
enter
loope
int3
mov
je
imul
mov
mov
iret
repnz
stc
pushf
into
pop
movsl
sbb
mov
cld
mov
gs
sub
clc
inc
ljmp
jnp
aas
push
mov
jle
lcall
cld
pop
mov
shll
aaa
pop
sbb
sub
sbb
jle
dec
mov
sbb
int3
lea
test
xchg
idivb
push
push
and
pop
adcb
test
mov
out
stos
pop
imul
mov
arpl
sti
xchg
or
out
xchg
push
test
dec
xchg
ja
lret
sub
movsl
divl
sahf
subb
int3
sub
pop
pop
cmpsb
mov
jbe
adc
cli
repnz
leave
sbb
xchg
imul
jl
jnp
adc
push
jecxz
in
xchg
xor
pop
mov
xchg
mov
inc
inc
pusha
or
and
xchg
ja
test
hlt
sbb
mov
fdivl
popa
push
inc
cltd
cmp
fldt
push
pop
push
loopne
jmp
je
iret
or
bound
mov
and
popa
cmp
pop
test
ds
loopne
jo
adc
cwtl
enter
adc
lahf
lret
cmp
mov
xchg
loope
pop
mov
and
bound
jmp
lahf
test
rorl
push
jge
cli
mov
in
xchg
adc
and
lahf
fs
lock
xchg
out
sahf
adc
loop
js
cmpsl
and
lsl
pop
xor
xlat
adc
mov
sbb
dec
lahf
cwtl
fsubrs
outsl
mov
mov
mov
movsl
adc
xor
jb
mov
cmp
arpl
push
push
inc
fcompl
mov
cwtl
arpl
fstps
iret
in
or
mov
dec
fsts
jae
pop
loopne
jne
pop
shlb
pusha
outsl
insl
mov
les
push
cltd
test
mov
or
mov
and
bound
lock
and
adc
cmp
mov
xchg
mov
xor
or
ret
sahf
test
xchg
ljmp
flds
xchg
sbb
mov
loopne
mov
data16
dec
dec
test
addr16
aad
dec
dec
sub
jg
cmc
cltd
lods
push
xor
enter
adc
mov
ja
enter
push
push
sbb
jo
add
pop
jmp
add
mov
sbb
inc
pop
push
and
nop
mov
jno
popl
sarb
outsl
fs
shlb
dec
sub
in
cmp
mov
sti
push
shll
xchg
hlt
sub
mov
cmp
clc
jae
mov
xchg
or
push
push
sub
jmp
inc
pop
mov
inc
jb
in
es
xor
pop
mov
push
into
sahf
hlt
dec
imul
push
iret
loope
ficoml
cmpsb
scas
mov
test
lcall
popa
push
sbb
xor
test
int
mov
in
popa
pop
clc
popf
inc
rcll
mov
dec
cmpsl
ret
push
add
cmp
loope
mov
jo
dec
fldcw
call
and
and
add
jge
cmp
sti
cwtl
dec
fstl
testl
cmp
popa
adc
enter
cmpsl
cmpsb
mov
daa
clc
aad
inc
sbb
test
test
dec
cmp
mov
lods
xor
push
dec
fcmovbe
mov
in
mov
std
es
ljmp
jns
mov
test
jnp
jge
in
add
pop
stc
in
ja
sti
dec
pop
mov
or
adc
xlat
jno
push
mov
jae
icebp
out
sbb
push
mov
sbb
scas
inc
fsubr
lcall
popa
stos
inc
cmp
ljmp
add
shll
ljmp
pop
mov
inc
xlat
loop
mov
fst
inc
je
inc
test
sub
inc
cmp
aaa
mov
cmpsb
fcompl
into
pop
jns
inc
loopne
push
rcll
adc
jb
cmp
shl
sbb
popa
lods
je
pop
cmpsb
stos
push
aad
and
push
lods
aam
loopne
loop
loop
imul
clc
pop
sbb
cli
push
cmp
sbb
subl
pop
add
mov
xor
lods
int3
inc
mov
cld
jno
cmpsl
cmp
jle
loope
stos
call
add
mov
loop
std
add
mov
mov
aam
mov
mov
push
xor
negl
notb
cmp
xor
push
jecxz
mov
cmp
test
mov
outsl
cmp
push
int
mov
jle
cmpsl
test
mov
es
out
sbb
cwtl
cmpsl
adcl
inc
lods
pop
adc
sbbl
jecxz
rorb
sahf
sub
or
nop
enter
add
adc
mov
mov
lret
push
jecxz
fnstsw
pop
add
dec
push
xor
xchg
or
add
xchg
jnp
pop
jg
jle
inc
pushf
mov
enter
rclb
aaa
in
pop
mov
subl
jg
cmpsb
fs
xchg
mov
out
pop
neg
xor
lock
push
aad
lock
cmc
lret
or
dec
mov
leave
xor
sahf
rcll
hlt
rcrb
adc
mov
push
lcall
daa
sbb
shrl
mov
test
and
jo
sbb
gs
cmp
pop
jae
jp
add
call
aas
mov
fildl
popf
ds
push
add
rorl
je
out
or
mov
pop
loop
insb
push
std
mov
out
jp
xchg
inc
xchg
ret
adc
dec
loop
mov
repnz
cmp
jo
movsw
addr16
jp
jl
push
mov
mov
dec
lods
ret
pop
mov
xchg
mov
out
mov
sub
pop
js
pop
cmp
int
mov
lcall
lods
sti
icebp
out
xor
jmp
addb
dec
jecxz
push
addr16
into
testb
mov
xchg
xchg
divl
dec
pop
mov
cmp
xchg
ljmp
scas
les
popa
pop
clc
xor
lret
xchg
jne
or
imul
jb
rorb
mov
rcrb
test
xor
lcall
bound
cwtl
mov
jb
je
cs
js
pop
icebp
mull
inc
int
mov
mov
jb
mov
mov
sbbb
pop
mov
gs
adc
jge,pt
xor
adc
jle
xchg
or
outsl
push
adc
ret
mov
scas
arpl
xor
hlt
fucom
pushf
xorl
jb
mov
push
sarl
out
lods
dec
xchg
aad
push
dec
mov
loope
in
push
sbb
inc
aas
cmpb
loopne
mov
fs
xor
imul
in
dec
loopne,pn
sbb
add
lods
jbe
lcall
jbe
movsl
xor
nop
mov
sub
cmp
lds
aaa
mov
in
and
mov
cwtl
and
adc
jb
mov
movsb
je
std
mov
sub
xchg
dec
sub
repz
xor
adc
lock
test
pop
xchg
lock
mov
cmp
int3
cwtl
js
pop
inc
mov
das
jg
xor
pushf
loope
dec
push
fnstenv
out
ja
std
in
rorb
cwtl
pop
dec
adc
bswap
mov
pop
out
mov
mov
ficomps
pop
in
ret
mov
movsb
inc
xchg
pusha
rorl
mov
int3
in
adc
pop
pop
mov
mov
or
ds
fs
mov
and
jg
add
adc
inc
xor
xlat
insl
and
cmp
movsl
adc
mov
sbb
cltd
fldt
pop
adc
xor
fstpt
loopne
push
push
fwait
shll
xor
rcll
xchg
rorb
push
pop
xor
orb
fisubl
mov
jo
cmp
push
cltd
fcoml
or
adc
xchg
inc
int
inc
xchg
dec
push
and
push
icebp
adc
cmp
adc
push
and
ja
gs
data16
pop
repnz
and
outsl
or
stos
adc
inc
ficomps
jg
push
cld
test
push
dec
pop
push
or
jae
mov
xor
ja
mulb
aas
sub
sub
out
loopne
scas
loope
xchg
shrl
or
or
cwtl
call
jns
pop
dec
inc
mov
ret
subl
iret
push
pusha
daa
mov
and
mov
gs
imul
and
imul
dec
dec
dec
repnz
cmp
repz
fidivrs
push
je
imul
sbb
pop
push
out
popa
adc
jb
push
cltd
jne
mov
aam
sub
sbb
mov
pop
or
xchg
mov
xor
test
push
add
mov
std
push
loope
ficoml
add
jge
int
dec
js
jne
push
roll
xchg
lock
mov
insl
dec
xchg
jl
stos
pop
push
test
dec
push
jle
mov
sti
or
xor
mov
dec
int
jg
arpl
jg
add
mov
or
dec
rol
in
push
pop
mov
scas
push
loop
mov
fbstp
fisubl
xor
cmpsb
cltd
fldl
jne
xchg
in
sbb
je
rcrl
cmp
out
repnz
mov
mov
sbb
or
xor
and
testb
dec
les
jle
dec
out
and
ljmp
push
mov
stos
jo
xchg
cmp
stos
sbb
dec
fsubrl
cmpsb
insb
addl
seto
sub
mov
push
dec
imul
aaa
jmp
in
repnz
and
xchg
mov
adc
inc
aam
lret
mov
jbe
pop
sub
and
cmp
pop
cmpsl
pop
sarl
call
popf
jo
jb,pt
fsubl
add
lret
push
out
xchg
mov
add
mov
mov
cli
or
scas
pop
leave
xor
dec
fsub
pop
dec
pop
imul
sahf
push
mov
lahf
lds
fidivs
scas
sbb
dec
into
lock
faddp
cmpsl
cmp
ja
cmc
sarl
out
clc
fcmovnb
dec
mov
ss
mov
inc
mov
mov
fnstcw
push
in
scas
or
aaa
push
loop
jle
idivb
cmc
test
push
or
xor
mov
jbe
dec
adc
repnz
cmpsb
movsl
mov
and
xor
dec
out
in
adc
cmp
mov
lods
lea
pop
xor
hlt
gs
sti
pop
dec
call
bound
repz
mov
xor
cmp
stc
jg
iret
ret
scas
pop
inc
mov
pop
sbb
lcall
xchg
aaa
add
jg
sub
fldl
push
dec
jl
rclb
inc
ror
jo
pusha
pop
pop
mov
pop
adcb
std
mov
add
pop
rolb
lock
mov
cmp
bound
pop
push
xchg
pop
pop
push
mov
mov
jns
push
jge
or
in
and
cmp
xchg
mov
xchg
rclb
dec
sub
movsl
leave
clc
movsb
jnp
mov
fistpll
mov
push
andl
xor
push
rcrw
xchg
nop
ficoml
push
loop
negb
jbe
sbb
test
popf
push
dec
jb
jmp
sub
std
inc
andl
cs
mov
mov
out
cli
sarl
push
mov
cli
aaa
jbe
adc
sub
repz
adc
push
loope
push
in
out
mov
inc
lss
sbb
aas
mov
test
lods
jp
les
push
fs
popa
cmp
test
insb
sub
mov
into
clc
fildll
mov
notb
mov
inc
bound
into
stc
fcomps
push
popf
nop
fstpl
pop
cwtl
push
sti
mov
dec
cmp
enter
push
popf
cs
sub
bound
dec
ret
sub
fldcw
xchg
loopne
cli
jbe
pop
hlt
push
ja
leave
pop
or
mov
test
sub
mov
fistl
loopne
mov
sbb
sub
fcmovu
xchg
or
xor
push
xchg
cmp
lret
jp
push
mov
push
sbb
jge
mov
loopne
sub
mov
pop
loope
test
movhps
pop
imul
nop
fdivr
dec
rorb
int3
jo
lds
or
fs
ss
ja
sbb
loopne
sub
mov
mov
data16
push
and
lock
bound
cmp
sbb
pavgw
mov
sar
fldcw
jl
insl
icebp
ret
adc
pop
jnp
sahf
add
int
xor
pop
cmp
xor
push
rcl
fstps
int3
cmp
dec
andb
mov
pop
das
and
dec
push
cs
cmp
jae
je
xor
add
loopne
fcomi
mov
aas
enter
iret
std
int3
insl
and
bnd
iret
test
or
sti
xor
popa
int
lea
hlt
and
xchg
les
pop
jns
insl
push
push
ret
aam
aas
addr16
pop
mov
fidivs
fimuls
hlt
push
xchg
fmull
push
arpl
lahf
jl
cmp
inc
cltd
xchg
rcrl
in
movsb
mov
aam
push
adc
shlb
jo
mov
shlb
ss
jp
mov
fs
and
ret
push
ljmp
insl
stc
jnp
pop
adc
mov
pusha
daa
sbb
lock
adcl
adc
or
shr
mov
jbe
ss
inc
fbstp
cmpb
pushf
adc
sti
xchg
or
sub
pop
add
pop
push
shl
adc
cmp
xchg
push
in
jo
xor
bound
jne
int
sub
rcrb
mov
jmp
xchg
add
loop
mov
insl
or
pushf
imul
shrb
cltd
xor
cmpsb
arpl
mov
dec
jnp
fs
cmp
jns
mov
test
mov
adc
nop
stos
mov
pop
adc
fmul
cmp
outsl
mov
push
lcall
adc
mov
mov
jl
add
add
mov
mov
push
shrl
dec
int
cmovno
shr
das
add
in
inc
jg
mov
adc
stos
rol
pop
add
jne
push
push
mov
rcrb
mov
mov
cmp
and
push
stc
out
dec
jp
jg
int3
movsl
pop
pop
pop
cs
stos
adc
cmpsb
and
inc
pop
repnz
sub
jno
push
popa
lods
jle
xor
aaa
aam
push
es
sbb
in
ret
cmp
out
movsl
push
inc
push
xorb
addr16
xchg
or
rclb
or
and
and
mov
out
or
sti
push
xlat
xor
xor
nop
insl
pop
repz
call
add
xchg
cli
lahf
mov
sub
mov
and
xor
or
push
sub
cmpsl
bound
imul
sbb
ffreep
mov
or
jg
inc
lds
jbe
data16
dec
push
xchg
mov
imul
int
jecxz
lock
push
cmp
add
adc
dec
popa
sti
nop
or
sub
fs
sub
icebp
mov
dec
jb
sbb
push
xchg
push
add
cmp
nop
push
ret
jle
faddl
jb
cmp
and
sbb
iret
sub
mov
or
dec
loop
loope
xorl
xor
fcompl
and
inc
test
fildll
or
or
scas
mov
or
pop
fsubrs
mov
and
inc
inc
or
xor
or
sbb
mov
test
push
xchg
inc
sar
xor
jns
leave
aam
movsb
cmpsl
rorb
and
mov
jl
pmulhw
or
dec
orl
pushf
imul
mov
sbb
daa
test
pop
lahf
xor
lahf
outsb
out
jl
mov
test
jg
xor
push
ficoml
jle
int
or
imul
mov
cmp
stos
aad
adc
push
fidivl
insb
rcl
and
mov
shrb
outsl
int
mov
inc
pop
das
push
lods
jl
dec
enter
mov
inc
cmc
nop
pusha
lock
aas
out
ret
aam
push
ret
mov
cld
cwtl
xchg
mov
and
mov
xchg
push
jge
daa
es
lds
mov
xchg
cmp
jl
jp
xorl
jae
pusha
into
xchg
sbb
cli
adc
jp
test
je
xor
xor
fstps
pop
fistl
mov
lock
mov
aas
push
out
aas
cli
sbb
jne
lret
stos
mov
bnd
aas
les
cwtl
mov
pop
inc
inc
add
repz
xchg
xchg
sub
and
push
sti
inc
fsts
lret
mov
xchg
push
popa
aam
sub
into
hlt
xchg
popa
xorb
inc
mov
scas
inc
sbb
or
sbb
sbbl
cmp
push
xchg
xor
in
out
pushf
mov
push
cmp
dec
daa
adc
mov
push
std
add
push
xor
or
cmp
jo
dec
or
jns
mov
mov
lret
les
jb
fisubrs
push
pop
daa
jbe
cli
cmc
xchg
out
add
adc
mov
ja
bound
adc
popa
lock
cwtl
jnp
mov
or
sbb
jb
fs
into
testl
push
cs
aas
enter
std
jge
jle
das
test
dec
lahf
cli
push
push
into
fidivs
das
mov
cmpb
ljmp
das
xor
xchg
js
mov
push
mov
xor
inc
out
push
mov
or
rcrb
inc
or
rcrb
xchg
pop
mov
daa
ficomps
ds
pop
mov
dec
jb
cmp
pop
sbb
push
dec
mov
rcrl
add
shrl
mov
sub
aaa
jg
jecxz
mov
repnz
sbb
cmc
enter
inc
jmp
sub
dec
pop
int3
out
and
stos
movsl
and
aaa
fs
in
rcrb
outsb
pop
fcmovnbe
out
ret
call
out
movsl
popa
outsb
fs
rol
addr16
fidivrs
cltd
lret
addb
mov
or
add
call
sbb
xor
mov
push
push
pandn
or
stos
out
xchg
and
xchg
test
sub
roll
or
fildl
test
shlb
and
pop
mov
out
sbb
test
imul
mov
es
notb
mov
popl
fdivs
stc
aas
lcall
jmp
roll
mov
push
shlb
out
out
push
ret
xor
mov
movsb
scas
lock
stos
pop
push
cmpsb
dec
jl
fiadds
scas
popa
icebp
std
call
jno
jmp
scas
pop
es
mov
in
ret
je
mov
lods
ja
dec
adc
dec
filds
xchg
dec
arpl
aas
xchg
hlt
push
mov
mov
cmp
icebp
pop
mov
ljmp
neg
mov
scas
in
jb
xchg
mov
and
sbb
jle
mov
hlt
jns
xor
mov
mov
mov
or
lret
mov
pop
sti
adc
out
push
cmp
pop
out
xchg
out
xchg
call
xchg
push
loop
arpl
popa
daa
add
xor
xchg
loopne
es
mov
in
test
outsl
jb
mov
ds
adc
cmp
push
lahf
dec
push
in
stc
enter
lods
xor
mov
xlat
fcmovb
aaa
push
fwait
xor
sahf
add
add
xorb
sub
test
cmp
or
jb
repnz
mov
pop
or
divb
or
imul
out
pop
xchg
fsts
roll
sub
mov
in
pop
fidivrl
fisubs
inc
and
mov
jns
mov
fldenv
scas
int3
loope
cmpsl
push
pop
fnstsw
xorb
pop
mov
das
insb
mov
push
add
nop
cmp
mov
mov
js
mov
in
popa
sbb
popa
insl
push
and
sub
adc
pop
shrl
jae
imul
sbb
in
push
push
movsl
in
inc
test
imul
fdivp
arpl
mov
insb
aam
ss
inc
call
push
inc
stos
into
cmp
lcall
mov
sbb
into
xchg
dec
out
sub
cltd
pop
std
loope
pushf
fwait
in
dec
js
fisttps
and
sbb
xorl
test
inc
jle
mov
fs
sbb
lock
mov
sti
dec
pusha
or
push
jl
clc
loopne
repz
les
mov
fnstsw
gs
imul
adc
lcall
out
loope
jecxz
clc
fcoms
cmc
add
lods
stc
movsb
mov
mov
fidivrl
mov
hlt
ja
xor
inc
out
fst
in
lahf
push
lcall
rcrl
pop
fucom
mov
shlb
popf
psrad
fbld
and
mov
in
cwtl
mov
addr16
lea
scas
cmp
or
insb
shlb
dec
fistpll
push
or
sbb
lret
std
outsl
inc
loope
or
jle
popa
pop
aas
xchg
jg
dec
inc
dec
and
mov
pop
adc
in
imul
cld
mov
int
dec
je
cs
add
dec
filds
cmp
mov
sub
jge
in
push
jge
aaa
sub
out
mov
out
xor
fwait
cmp
fwait
push
gs
sti
mov
mov
pop
adc
into
sub
dec
popf
dec
icebp
jo
in
add
ret
lods
adc
stc
not
fistl
fcom
pop
stc
mov
cmpsl
call
mov
test
jle
sbb
mov
clc
adc
mov
aas
and
cmp
lods
jns
pushf
test
push
out
inc
sbb
nop
and
hlt
or
xor
sbb
sti
sbb
sbb
mov
repz
and
jmp
mov
inc
push
push
mov
inc
pop
jne
xchg
ja
loope
cld
cld
outsb
inc
add
jno
lahf
fdivp
mov
outsl
xlat
sbb
fildl
lds
mov
jl
xor
jle
insb
fnstcw
and
in
adc
loop
fucomip
xchg
add
cs
jp
mov
loope
mov
or
dec
icebp
adc
icebp
push
ljmp
sub
dec
testl
xchg
mov
imul
xlat
stos
or
test
mov
cmp
aaa
add
jp
sbb
xor
sub
test
bound
sbb
in
cmp
lahf
imul
test
insb
imul
test
lret
inc
push
adc
sbb
fdivrs
mov
lcall
popa
jl
or
out
or
lods
fisttps
jl
sbb
add
sti
dec
dec
shrb
cmp
lret
mov
or
mov
movsl
adc
push
mov
shl
mov
mov
scas
sub
roll
pusha
sbb
nop
push
fs
insl
push
add
cltd
out
je
mov
and
xchg
fs
xor
cmp
or
int
stos
test
ficompl
movsb
cmp
cmpsl
jmp
xchg
cmpsl
inc
idivb
lods
popf
pop
insl
movsl
shrb
data16
cmp
pop
and
xor
lea
imul
outsl
imul
push
xor
cmpsl
jno
shll
arpl
fs
int3
int3
jecxz
jp
into
fnstenv
rcrl
daa
es
fwait
jne
stos
xor
and
movsl
test
pop
push
idivb
inc
shl
outsb
dec
std
xorb
nop
and
das
jno
add
push
daa
and
mov
lea
and
test
xchg
es
cmp
and
add
lahf
repz
adc
xchg
xor
cmp
fwait
enter
loope
gs
in
leave
inc
push
mov
mov
cmc
in
stos
in
adc
sarb
dec
jg
jnp
inc
push
push
popf
shrl
cmpsl
sub
pop
sub
inc
cmpsb
jo
cmpsb
sarb
push
data16
gs
add
ljmp
inc
jmp
cmp
xchg
cli
imul
sub
jmp
adc
xor
mov
faddl
jno
pop
fcoms
dec
lods
or
iret
js
push
inc
push
gs
dec
mov
cmp
cmpsb
sub
jp
sub
rolb
mov
push
pop
jmp
inc
jns
mov
dec
pusha
jg
add
in
scas
xchg
cs
lahf
sti
dec
shrb
jne
stos
push
js
or
sub
scas
popa
pop
mov
ljmp
add
rcrl
andb
arpl
shlb
xchg
jbe
out
push
sub
mov
movsl
xor
aas
scas
pop
push
enter
pop
lods
rol
xlat
testl
add
add
lcall
addr16
std
xor
inc
xor
mov
out
mov
stos
divb
jge
cmpl
loopne
jb
sub
fs
aaa
mov
xlat
lds
call
or
in
add
cld
addr16
shlb
jo
adc
cmpsl
xchg
inc
pop
bound
ds
hlt
adc
ljmp
rclb
inc
fs
pop
stos
sti
ja
xchg
es
adc
cmp
lcall
aas
inc
loop
mov
lea
jle
mov
movsb
inc
gs
mov
jne
lods
or
fmull
arpl
mov
xchg
repz
adc
lea
dec
mov
lcall
pop
xchg
xor
neg
cmp
add
dec
mov
fadds
cmp
stos
ret
jge
mov
shrb
inc
rcll
roll
aas
pushl
cmc
loopne
mov
test
push
fcoml
and
imulb
add
push
jno
pop
mov
cltd
test
mov
mov
push
jbe
movsl
push
ret
sahf
popf
or
sbb
out
loopne
jmp
clc
push
ret
test
xor
push
xor
jmp
cmpsl
dec
mov
mov
mov
cmp
pop
and
xchg
lods
nop
ficompl
dec
dec
mov
and
imul
mov
adc
out
mov
sti
fstl
and
scas
adc
cmp
push
push
pop
push
rolb
lret
sub
mov
inc
inc
out
clc
iret
inc
movsl
stc
xchg
push
pushl
xchg
dec
aad
jo
scas
pusha
not
xor
les
jb
mov
test
sbb
mov
sbbb
mov
inc
flds
out
or
je
cmovns
test
loop
popa
adc
and
movsl
and
outsb
repz
into
push
clc
cmpsb
dec
xchg
mov
fstps
push
pop
dec
mov
aam
xor
div
cmp
ret
out
testb
test
sub
addr16
stos
pop
jne
sbb
mov
das
test
adc
xor
jae
lcall
out
jo
add
jmp
mov
mov
imul
mov
xchg
xchg
pop
pop
mov
xor
popf
rolb
mov
cmpsb
inc
mov
aaa
mov
pop
outsb
sbb
inc
pop
inc
andl
mov
push
stc
call
les
rcl
pop
add
push
push
mov
sahf
jo
xor
pop
sarb
cmp
mov
mov
mov
sbb
repnz
push
test
dec
in
lret
stos
or
hlt
lods
xlat
lahf
negl
inc
mov
out
jle
fwait
stos
dec
mov
jne
adc
cwtl
pop
pop
jns
mov
add
es
popf
dec
out
mov
jmp
cs
inc
cmpb
xor
add
ljmp
xchg
into
rcrl
fistpl
in
adc
cmp
gs
les
xchg
orl
dec
sahf
xchg
pop
pop
test
pop
jle
inc
xchg
jnp
push
pop
repnz
mov
movsl
cmp
aas
mov
mov
pop
mov
jno
lahf
lgs
daa
bound
mov
and
pop
xor
shll
mov
repz
sub
and
or
push
mov
jmp
mov
jb
pop
push
mov
sub
testl
cmp
jmp
jmp
and
xchg
mov
and
rcll
psubsw
and
loopne
ljmp
xchg
rorb
lea
xchg
push
cmp
mov
test
sbbb
pop
lds
sbb
mov
push
and
inc
push
sti
enter
pop
fmulp
xlat
add
xchg
enter
out
push
loopne
or
sbb
push
outsb
imul
mov
pusha
test
mov
test
adc
xchg
xchg
pushf
test
inc
js
mov
out
and
sub
out
inc
in
nop
xor
cmp
pop
es
sub
dec
stos
out
xchg
mov
mov
les
mov
stos
jns
lahf
insl
jmp
shrb
repnz
push
rcll
jbe
lahf
das
cltd
mov
les
mov
call
loopne
ss
repz
jnp
jnp
inc
sbb
jbe
mov
push
push
or
cltd
pop
adc
jne
jge
in
pop
in
mov
mov
scas
mov
cs
in
and
adc
and
sbb
inc
sti
stos
shrl
cmpsl
add
imul
mov
mov
jmp
outsl
mov
jmp
imul
xor
cmp
sbb
imull
jbe
mov
and
lret
mov
aas
test
movsl
in
movsb
add
test
pusha
jne
or
and
cwtl
fcompl
adc
popf
and
shlb
inc
xor
adcl
inc
sub
das
les
add
das
mov
mov
sar
test
pop
shll
jecxz
jecxz
add
inc
pushf
mov
push
loop
or
pop
lret
enter
xor
xor
lock
dec
lahf
enter
mov
outsb
in
fistpl
cld
iret
sub
xchg
jmp
aaa
into
or
repnz
rclb
ljmp
scas
pop
ret
ljmp
mov
fs
sti
cs
cmpsb
push
sub
or
xchg
test
sbb
in
adc
xor
mov
push
mull
imulb
pop
iret
sbb
jle
sbb
adc
push
and
repz
xchg
and
in
movsb
mov
push
sbb
lea
icebp
cwtl
into
sub
add
pop
and
push
jg
cld
mov
hlt
add
sbb
pop
hlt
pop
sbb
xchg
push
imulb
iret
sub
rorb
dec
fs
push
mov
pop
pop
pop
mov
sub
xchg
imul
mov
aam
xlat
ljmp
xor
test
jae
nop
inc
outsb
sub
inc
lret
adc
pop
mov
aam
out
jns
sahf
mov
xor
push
mov
cmp
repnz
dec
cmp
jle
sbb
dec
mov
cld
sub
push
cwtl
out
cmp
xchg
cmc
lret
int
xor
jo
mov
fcmovnbe
push
xor
mov
cmpsb
movsl
mov
dec
out
stc
jne
xchg
jne
lods
inc
fcomps
xchg
sub
lods
xor
ljmp
pop
jmp
fstpl
mov
loopne
dec
lret
jmp
adc
and
fisubrl
cmp
sbb
xlat
jae
cltd
scas
movsl
vmovsd
adc
mov
aam
push
mov
sbb
push
dec
icebp
cmp
adc
mov
sbb
ret
add
aam
lea
fidivs
or
rcrb
or
push
adc
sbb
dec
push
dec
int
dec
pusha
lods
ja
sbb
pop
dec
sbb
shlb
dec
jb
add
pop
inc
call
addb
outsb
ja
inc
adc
in
sbb
lock
inc
mov
pop
inc
xchg
nop
mov
nop
or
loope
movsb
cwtl
mov
in
push
cwtl
xchg
sbb
mov
mov
lcall
sbb
loope
es
pop
ljmp
xchg
ret
cld
and
pop
pop
mov
add
inc
or
jo
fistps
ds
add
adc
pop
ja
outsl
outsl
jge
repz
mov
imul
jo
add
add
adc
aad
rorb
sub
xchg
in
adc
xchg
rcll
adc
sbb
testb
pop
mov
repz
lds
mov
into
notb
push
das
mov
frstor
lea
pop
enter
test
rclb
pop
lcall
cli
jmp
push
imul
and
add
push
imul
cltd
cs
add
or
mov
inc
out
inc
mov
add
cmc
adc
sub
inc
fwait
hlt
sub
les
out
jmp
jns
movsl
das
adc
adc
mov
clc
xlat
into
pushf
pop
idivb
ret
and
sti
mov
je
push
inc
jle
cmp
lock
pop
and
push
dec
and
xchg
icebp
lcall
cmp
cmp
lret
subb
or
std
cmp
cmc
testb
lds
aaa
dec
jnp
push
int3
or
add
addr16
fcmovu
lret
dec
std
adc
sub
mov
pop
jnp
xchg
add
cmp
xlat
movsb
lret
ret
or
inc
adc
fxch
rcrl
mov
fdivl
rorb
daa
mov
xchg
add
xchg
out
out
and
je
push
mov
gs
je
push
repz
shll
cmpsl
xor
mov
sti
fdivs
sbb
adc
jge
dec
push
pop
sub
das
xchg
ret
mov
mov
mov
sbb
and
clc
adc
insl
leave
clc
and
xor
mov
ljmp
sbb
sbbb
and
movsb
add
scas
stos
or
addb
cwtl
sbb
or
fwait
xor
lock
imul
jb
push
inc
mov
fsubs
jb
xchg
jae
lea
adc
in
leave
add
das
aam
shrl
int
pop
push
xchg
pop
add
cmc
add
add
ds
push
movsl
sub
dec
mov
xchg
mov
xchg
and
test
rorl
and
xchg
xchg
pop
cwtl
mov
adc
xlat
ljmp
out
mov
mov
inc
outsl
add
shrl
pop
testb
xchg
stos
sbb
jmp
enter
movsb
shrb
mov
fwait
jmp
outsl
xchg
orl
mov
cmpsb
cltd
xchg
js
cmpsb
push
leave
mov
lea
add
cmp
sarb
or
aas
push
stc
dec
and
addr16
sbb
jns
outsl
fsts
ljmp
push
in
sbb
out
mov
ret
cwtl
dec
jg
test
jb
add
popf
or
mov
cmp
sti
cmc
mov
pop
or
cmpsb
mov
rcrb
scas
mov
add
repz
add
mov
jmp
jo
push
jle
out
outsl
test
stos
cld
popa
push
pop
shll
pop
pop
nop
mov
sub
mov
mov
outsb
rcrb
into
mov
jecxz
stos
mov
inc
dec
orb
daa
lock
sub
jmp
adc
adc
xchg
adc
and
lods
ret
xchg
mov
std
add
inc
fisubl
aaa
xor
push
add
jmp
rolb
hlt
ret
push
mov
ret
mov
call
aaa
xor
sbb
shl
push
sbb
dec
orl
add
mov
outsl
test
imul
je
mov
mov
in
mov
mov
cmp
adc
jns
pop
dec
xor
in
test
ss
cmp
cmpsl
imul
loop
or
mov
popf
cmp
es
daa
sub
jmp
outsb
rcrb
daa
aam
sub
cs
repz
imul
cwtl
jp
lahf
or
jns
cmp
js
xor
inc
ljmp
mov
inc
cmp
fists
jmp
push
sub
inc
ds
mov
pop
cmc
mov
pop
inc
mov
insl
repnz
std
xchg
push
mov
sahf
out
imul
leave
loope
adc
roll
fcomip
push
cltd
int3
lret
mov
mov
push
pop
in
repnz
pop
dec
lds
mov
adc
cmp
ret
and
and
nop
cmpsl
jl
inc
pop
sub
stos
imul
movsl
cmpsb
sub
add
movsl
jecxz
xchg
fcomps
sahf
daa
sbb
lods
popf
jle
test
es
lock
sbbb
sti
xchg
jle
jno
sub
cmp
movb
pop
testb
les
imul
sti
dec
mov
mov
lock
mov
xlat
sub
ss
mov
dec
dec
pop
xchg
scas
testb
push
icebp
scas
mov
cwtl
icebp
hlt
dec
out
jmp
stos
sub
fs
xchg
inc
pusha
inc
jae
jle
dec
mov
lods
push
jp
outsl
cmp
jmp
gs
add
sbb
repz
and
mov
mov
aad
ljmp
out
bound
cld
and
int
test
jp
pop
dec
in
cmpb
and
mov
dec
push
sub
and
out
iret
adc
sub
ja
sub
ds
xchg
mov
out
aad
scas
adc
pushf
add
dec
add
pop
pop
lods
insb
mov
rclb
mov
pop
and
cmp
or
lret
popa
mov
push
mov
into
xchg
sbbb
loope
stc
inc
cmpsl
xorb
push
daa
inc
aad
pop
sub
pop
push
xchg
cmc
movsb
andb
hlt
push
repnz
push
stos
rcr
sahf
mov
popf
sub
mov
fstps
lods
sbb
imul
or
mov
sbb
xchg
shlb
jle
or
inc
pop
loop
out
mov
sbb
aad
mov
icebp
popa
jbe
dec
fidivrs
loopne
adc
mov
jg,pn
lret
lahf
imulb
push
jp
dec
xchg
fdivl
addb
adc
and
fcompl
sub
sub
mov
icebp
cmc
or
pop
lahf
mov
mov
inc
aaa
or
xchg
dec
cwtl
insl
mov
fsub
jae
push
mov
loop
mov
jecxz
cmpsl
mov
sub
stos
inc
dec
arpl
stos
push
push
iret
cld
aad
mov
idiv
push
stc
cli
inc
mov
roll
xchg
lcall
fiaddl
testb
jle
sub
pop
and
sub
or
imul
mov
pop
lds
out
data16
jle
cltd
mov
and
mov
fists
mov
aas
arpl
mov
pop
sub
in
mov
cmp
xor
jns
xorl
lods
push
daa
xorb
mov
out
pop
icebp
mov
test
push
shr
cmpsb
pop
lahf
pop
or
enter
sahf
add
pusha
cmp
xor
sar
sub
sbb
xchg
sarb
sbb
sbb
fisttps
test
xor
push
enter
div
jl
or
in
cmpsl
inc
sti
fsubrl
sbb
enter
and
pop
push
rep
jp
xchg
add
mov
imul
add
arpl
aas
adcl
dec
jl
les
xor
mov
cwtl
ja
jo
fwait
andps
idiv
push
jae
jae
test
mov
mov
mov
movsl
movsl
jle
cmpsb
jbe
mov
and
cmp
mov
lahf
sbb
scas
gs
repnz
lea
push
adcl
jge
pop
xor
adc
test
int3
or
aad
and
out
imul
jle
or
or
in
xor
lahf
mov
jns
divl
dec
push
and
adc
loopne
gs
xchg
jne
insl
cmp
cmp
rcll
or
cmpsl
push
stos
jle
hlt
lahf
adc
cmp
das
mov
aaa
lahf
test
shr
ss
fnstsw
pop
and
test
outsb
cmc
repz
add
mov
icebp
test
movsb
adc
mov
lock
int
loope
or
je
jmp
in
mov
gs
sbb
lahf
push
aas
mov
jp
test
xor
jecxz
into
lahf
fmulp
sub
xchg
add
sbb
cmpsl
push
movsl
ss
add
loope
mov
jo
pop
adc
es
add
jns
ret
sub
aam
out
mov
into
dec
icebp
ljmp
jne
data16
mov
cmc
sbb
ss
enter
lea
stos
loop
ret
cld
mov
push
lahf
add
int3
imul
push
int3
xor
pop
inc
sub
jge
dec
inc
fwait
lock
adc
mov
adc
mov
jp
lret
data16
loop
pop
jp
ljmp
das
ss
ljmp
jg
orl
mov
loope
inc
inc
sub
sub
into
add
lock
scas
lcall
clc
xchg
xchg
mov
adc
sbb
jl
sub
push
aam
sbb
out
lods
dec
fcoml
adc
sbb
inc
testl
cmp
add
push
dec
xlat
push
mov
mov
adc
js
cmp
dec
cs
add
mov
mov
in
fwait
push
pusha
xor
sbb
daa
movl
adc
sub
cld
sbb
mov
dec
push
icebp
iret
bswap
mov
shlb
ljmp
movaps
mov
imul
jns
lret
stc
shlb
dec
pop
repz
insl
or
roll
xor
mov
adc
sub
adc
lea
sub
mov
aas
dec
jns
rcrb
fadds
push
loopne
movsl
cs
dec
mov
shl
sub
scas
pop
call
lcall
mov
cmpsl
aam
adc
insb
xchg
and
hlt
push
push
and
test
dec
pusha
inc
cld
call
mov
shll
test
and
inc
notb
push
sub
fadds
insl
int3
cltd
push
imul
push
push
jg
jl
adc
in
popa
adc
push
push
pop
and
js
xchg
pusha
push
pusha
addb
fsubs
push
data16
fwait
dec
jbe
loope
sbb
sub
push
sub
rcll
mov
mov
xlat
in
or
fists
cwtl
aam
cmp
aam
ss
call
cwtl
push
lcall
imul
jmp
or
inc
mov
push
jp
fists
mov
xor
xor
stos
in
jb
xchg
xchg
aad
rcrl
pop
xor
neg
cmpl
mov
lahf
fidivl
daa
push
in
xchg
adc
sub
mov
pop
les
mov
scas
in
out
inc
popf
xchg
jno
jmp
fmuls
sub
or
mov
shrl
sub
add
pop
jg
test
int3
mov
push
push
test
jge
pop
outsb
pop
add
inc
pop
push
and
movsb
call
mov
jmp
xchg
adc
jmp
in
test
xor
jae
pushf
xor
xchg
iret
jae
out
ja
mov
adc
jmp
sub
addl
sub
mov
push
dec
sbb
sbb
insb
cmp
cmp
xchg
jo
ss
call
fimull
jge
inc
mov
jp
sub
mov
and
push
xor
or
nop
jmp
ljmp
mov
or
pop
insl
pause
pop
stos
mov
cld
mov
nop
push
fisttps
sbbl
sub
sar
iret
dec
dec
lret
cmp
jbe
sbb
rclb
mul
mov
add
mov
dec
dec
das
xor
jns
dec
stos
es
js
inc
sub
and
movsb
cmc
push
push
mov
or
ljmp
sub
and
jmp
cmp
repz
cmc
lods
movsb
lods
js
add
pop
mov
stos
xchg
dec
leave
fistpl
adcb
pushf
orl
fcmovbe
adc
adc
push
fcoms
int
xchg
lret
xchg
das
mov
aam
insb
subb
xor
sbb
stc
imul
adc
fnstcw
inc
fildll
pop
dec
rcrb
jecxz
sbb
sbb
adc
adc
ja
xchg
popa
sbb
adc
cmp
pop
sbb
push
fstpt
inc
sbb
rorl
mov
pusha
push
mov
mov
add
dec
fwait
add
data16
xor
fsts
pop
push
mov
movsl
or
sub
cmp
int
jle
leave
xor
bound
das
ljmp
sub
push
lods
inc
js
test
inc
test
inc
mov
imulb
pop
pushf
mov
add
test
les
adc
mov
sub
int3
out
jb
rclb
incb
repnz
inc
xor
dec
push
out
call
pop
fs
jle
cmp
inc
int3
jae
rclb
outsl
lret
enter
jmp
adc
into
rclb
rcll
push
mov
mov
mov
ret
mov
mov
das
mov
pop
adc
sub
fisubrl
and
inc
inc
dec
imul
mov
add
test
insb
nop
jl
mov
add
xor
repz
lods
sar
mul
mov
mov
movsb
dec
jb
cmp
lods
xor
sahf
xor
push
mov
jnp
mov
movsl
mov
lock
repz
add
andb
out
sub
mov
pop
shr
lea
push
mov
jnp
fidivrs
mov
sub
pop
inc
scas
lret
or
push
fiadds
stos
xchg
fdivl
inc
aas
cli
popf
push
inc
sbb
push
mov
adcl
outsb
push
push
pop
mov
xor
xor
xor
mov
pop
xor
push
hlt
arpl
bound
test
orb
hlt
imul
or
ror
sar
inc
dec
subl
and
pop
cmpb
inc
jb
jecxz
dec
hlt
jns
aam
xor
jmp
pop
mov
jg
fsubrl
addr16
and
adc
sub
add
sub
jp
nop
push
sub
cmpsb
mov
dec
bound
pusha
add
pushf
add
sahf
daa
shl
mov
dec
mov
sar
adc
mov
in
add
roll
in
adc
in
add
bound
aad
jl
cmp
int
stc
cwtl
ficompl
or
popa
adc
or
mov
pop
sti
pop
or
mov
inc
and
incl
pop
inc
cli
call
sbb
sub
subb
movsl
adc
loop
xchg
jbe
das
test
lock
mov
ds
cmpsl
cld
mulb
cmp
push
adc
fdivs
inc
lcall
test
and
popa
jnp
cmpsb
mov
xor
loop
ja
mov
xchg
pop
dec
lock
inc
pop
mov
inc
xchg
in
push
xchg
mov
push
or
adc
je
outsl
fdivrl
pop
jbe
xor
lret
dec
arpl
mov
nop
cmpsb
sub
fsubl
jmp
push
lcall
lcall
rcll
out
out
lods
or
inc
dec
out
push
xchg
int
icebp
jmp
mov
pop
arpl
leave
cli
and
push
adc
and
sub
sub
ljmp
push
outsb
and
xchg
in
arpl
in
mov
mov
push
pusha
movsb
pop
es
mov
shll
jmp
pop
adc
cmp
xchg
push
aam
cli
dec
inc
rolb
sbb
jae
adc
xchg
loop
cmp
test
lods
sbb
daa
je
mov
adc
cmpsb
mov
daa
vpshld
addr16
negb
xor
outsb
push
inc
or
jp
cmp
adc
pop
test
pop
or
je
les
addr16
hlt
adc
mov
cmp
clc
lods
and
mov
daa
enter
imul
loopne
jl
xor
pushf
and
lock
dec
jl
push
ss
jbe
or
dec
fwait
ds
mov
sbb
push
lds
out
nop
inc
notb
fwait
jge
mov
or
sbb
lods
mov
mov
dec
mov
lods
mov
pop
mov
hlt
incl
push
inc
lret
inc
push
push
cltd
push
scas
and
xchg
lcall
aam
xchg
cmp
adc
in
stos
loope
adc
sub
cmp
in
mov
out
inc
test
inc
mov
inc
xor
xor
enter
dec
mov
or
mov
xor
filds
insb
xor
pop
jb
or
in
es
addb
leave
push
or
pop
inc
scas
inc
jg
xchg
jno
xchg
stos
int
xchg
stc
cmpsb
xor
scas
cs
iret
ret
adc
nop
cmc
mov
push
addb
sbb
lds
daa
nop
inc
mov
dec
in
out
xor
jne
bound
xor
fwait
sbb
xor
gs
jns
dec
jae
outsl
aaa
loopne
jle
fildll
cmpsl
repnz
xor
les
lods
jecxz
push
cld
adc
jmp
leave
xor
push
icebp
mov
mov
in
adcl
test
mov
pop
lock
sbb
push
sub
ljmp
jp
mov
cmp
lds
fildl
dec
xchg
mov
jmp
dec
push
jg
jb
mov
iret
add
leave
and
repnz
jle
outsb
mov
inc
adc
stos
adc
dec
jl
lret
pop
xor
mov
push
jecxz
mov
lds
mov
lret
pop
int3
in
enter
stos
pop
icebp
daa
dec
add
push
mov
lea
fstl
cmp
repnz
fistl
out
sarb
mov
mov
pop
gs
and
lcall
repz
or
sbb
scas
jae
push
in
mov
xchg
addb
out
xchg
or
inc
dec
inc
outsb
dec
xchg
mov
sbb
je
insb
dec
or
clc
mov
outsl
dec
xchg
dec
jecxz
fdivs
flds
push
lods
jg
mov
testl
gs
lret
lock
mov
mov
push
enter
inc
stos
test
mov
mov
jno
xchg
jnp
push
sub
dec
pop
repnz
push
mov
jge
das
add
mov
sub
pop
faddl
lea
scas
mov
lret
jnp
xchg
mov
mov
inc
xchg
into
jbe
xchg
jl
orl
pop
out
ja
clc
push
jns
cld
mov
repz
mul
sub
and
mov
sarb
ja
mov
mov
and
xchg
sahf
aam
pop
je
or
pop
arpl
into
xor
xchg
mov
xchg
mov
aad
sahf
xor
cmp
inc
call
adc
xor
xor
dec
out
shrl
dec
popf
and
out
mull
aad
daa
adc
rorb
mov
jnp
scas
add
fiadds
lods
mov
shlb
sub
addl
cmp
lock
sqrtps
fwait
jg
cmp
repz
push
adc
js
jns
test
fidivrl
jb
outsb
cmp
push
ja
mov
orb
cltd
sub
jmp
and
or
inc
test
mov
in
push
in
push
addr16
cmpsb
fcomip
pop
push
mov
jg
mov
mov
dec
sub
mov
sarb
mov
inc
jne
jle
rcl
inc
xchg
into
mov
mov
mov
sub
xchg
test
scas
pop
aam
pop
dec
loopne
loop
nop
xlat
or
fadds
out
mov
xchg
rorb
test
xchg
js
mov
or
or
jmp
fistps
mov
inc
and
in
mov
outsl
clc
mov
shrb
arpl
lret
xchg
xor
add
cmpsb
add
jp
pop
popl
pop
sarl
mov
pushf
mov
dec
mov
arpl
mov
das
pop
imul
aad
push
in
pop
push
dec
fwait
shll
mov
call
mov
notb
add
jecxz
sub
mov
cltd
insb
mov
rcrb
scas
fiaddl
xchg
cmp
xchg
mov
scas
clc
pop
or
xchg
mov
outsb
test
cld
and
add
lods
leave
lods
sub
in
jl
xchg
inc
pop
subb
jb
mov
ret
out
movsl
dec
lret
aas
pop
cmp
sub
dec
or
rolb
and
and
jns
pusha
repnz
fs
push
int
int
es
sar
and
je
aad
loopne
lods
pop
popa
lcall
push
push
sbb
adc
xchg
cmp
sbb
pop
jo
xor
dec
inc
xor
or
add
mov
add
arpl
mov
fsubs
shll
add
scas
gs
stos
jge
mov
and
out
repz
test
lds
lea
pop
push
imul
xchg
data16
jge
fldt
cmpl
push
ss
inc
jg
dec
dec
sbb
pop
shrl
cmc
pop
jae
mov
inc
bnd
xchg
data16
add
les
cltd
xor
and
dec
mov
ja
test
bnd
dec
adc
outsl
cmc
jno
sbb
rol
cmp
test
fsubs
mov
sbb
xchg
aam
leavew
inc
adc
xor
outsb
pop
cwtl
out
mov
int
js
shll
je
dec
sti
xor
jmp
push
inc
push
inc
jmp
lock
inc
mov
stos
mov
pop
jb
adcb
test
cld
cmp
lcall
daa
and
adc
cmp
pop
repnz
test
cld
xor
rdseed
test
sbb
fsubrp
clc
js
jo
add
xor
dec
push
xchg
cwtl
sub
dec
add
sub
mov
inc
iret
testl
lds
gs
ret
push
outsl
pop
lods
lods
push
scas
int
out
sbb
popa
sub
add
pop
nop
data16
daa
fists
movsl
mov
adc
cmp
xor
cmc
shrb
cmp
push
sti
jg
loopne
sti
ret
sahf
push
sbb
icebp
arpl
pusha
jg
xlat
push
cld
dec
inc
in
mov
daa
xchg
jmp
leave
mov
and
pusha
iret
mov
cs
jb
cmp
pop
pop
fwait
inc
lods
aam
adc
push
cmp
inc
fcmovu
inc
lds
clc
jo
pop
mov
fimull
into
mov
filds
adc
test
cmpsb
imul
inc
gs
pop
cmp
call
inc
and
pop
pop
cmp
popf
xchg
jecxz
mov
hlt
adc
aas
stc
test
adc
dec
ljmp
rcll
add
arpl
push
bound
stos
dec
xor
inc
rorb
repnz
insb
insb
mov
int3
mov
jae
testb
mov
mov
xchg
test
insl
sub
mov
mov
push
pusha
pop
sbb
cltd
and
fsub
daa
mov
outsb
jne
mov
pop
and
mov
push
push
mov
pusha
xor
bound
sub
lds
lods
call
cmp
sbb
sbb
pop
decl
popf
inc
xchg
xchg
in
int
dec
mov
lahf
adc
mov
push
or
sti
cwtl
xlat
mov
mov
ret
scas
xor
addr16
movsb
jg
in
mov
fdivrs
push
pop
jl
mov
mov
mov
sbb
mov
add
cmp
cmpsl
sbb
xchg
mov
cmp
push
stc
or
adc
jae
cld
js
mov
jbe
fs
arpl
jl
mov
dec
and
cmp
mov
mov
jmp
aad
or
enter
into
shlb
roll
pop
cmp
xor
das
pop
sbb
lods
xor
adc
dec
cmp
sarl
mov
mov
ss
cmp
cmp
imul
movsb
push
pushf
mov
dec
iret
mov
data16
push
mov
sti
sub
loope
leave
and
popa
loope
inc
pusha
mov
xchg
jle
and
dec
sub
mov
adc
in
pop
pop
ljmp
add
test
add
pushf
inc
ja
push
cli
cmp
movsl
in
test
jo
ffreep
pop
lcall
aad
and
add
test
andl
mov
mov
mov
pop
xchg
in
xchg
das
test
mov
repz
addr16
sbb
jg
jl
popa
mov
loopne
repnz
jae
and
add
cmp
lods
ss
cld
cmc
xlat
les
fisttpl
outsb
dec
mov
lea
aaa
inc
mov
push
xchg
repz
sbb
pop
fsts
iret
inc
out
dec
push
inc
jecxz
cli
movsb
or
or
or
mov
push
dec
sbb
ss
out
out
imul
jle
ja
sbb
ja
xchg
jg
in
or
mov
ja
sbb
pop
sbb
in
cmp
adc
lods
jle
sub
push
jns
sarl
adc
mov
cs
or
push
mov
jne
mov
pop
mov
cli
cmp
push
mov
pop
inc
pop
test
or
arpl
push
jnp
xor
out
outsb
pop
mov
xchg
pop
loopne
lods
and
pop
sahf
jo
jnp
pusha
inc
push
movsl
test
repnz
iret
mov
xchg
sub
test
mov
test
sub
adc
push
and
xorb
rol
repnz
sub
je
in
rcrb
and
lcall
mov
fs
push
repnz
mov
es
je
mov
and
xchg
push
ds
jg
popf
notl
lea
pop
pop
pushf
push
leave
and
cmpsb
scas
jmp
out
popa
mov
aam
sub
fidivl
cmp
xlat
mov
loope
push
js
in
sbb
xchg
push
xor
test
fcomps
xor
xchg
sbb
in
cmc
jg
dec
push
out
adc
iret
sahf
stos
in
sbb
mov
clc
adc
out
lods
cmpsl
stos
or
sub
pusha
test
test
imul
outsl
sub
cmp
imul
pop
pop
and
or
imull
pop
in
imull
or
add
or
cmp
dec
leave
shl
test
fisubrl
cmpsb
mov
pop
cmpsb
loope
adc
inc
add
lahf
mov
ret
movsb
adc
or
dec
mov
pop
in
loopne
mov
jb
sbb
mov
pop
xchg
mov
mov
iret
add
pop
inc
loop
movsb
insb
adc
out
mov
int3
test
nop
scas
jbe
pop
lock
mov
mov
sub
and
or
jb
lea
sbb
xchg
jmp
jp
fbld
sbb
scas
pop
scas
xchg
sahf
inc
nop
stos
idivl
outsb
sarl
aad
popa
pusha
jo
dec
cmpsb
xchg
xorb
adc
fldcw
cli
jle
xchg
cltd
enter
adc
les
shl
sbb
test
ds
adc
xor
cld
cmp
hlt
lcall
adc
bound
mov
popa
sarl
cmp
nop
cs
and
adc
shlb
ja
sub
fildl
fdivl
xor
ss
cltd
cld
in
dec
out
into
mov
es
cmpsl
outsl
mov
pop
insl
mov
cmp
mov
outsb
pusha
xor
pop
inc
stos
adc
and
mov
or
or
sti
shlb
std
mov
jl
push
out
sub
movsb
dec
jp
movsb
mov
pop
or
enter
rorl
movl
push
xor
shl
push
subl
lods
add
pop
in
in
sbb
dec
xor
gs
xlat
xchg
outsb
cmpxchg
xchg
add
cld
or
insl
pop
cs
daa
ror
sbb
cld
arpl
call
xchg
xchg
mov
mov
decb
xchg
push
test
sbb
cmp
fnstcw
or
testb
pop
and
daa
outsb
push
int
cmp
out
or
and
fnstsw
mov
xor
cld
mov
or
inc
add
sahf
out
in
nop
mov
pop
psubd
rcrl
pop
xor
xchg
das
pushf
shlb
adc
pop
xchg
fwait
and
fdivrp
jo
pop
inc
inc
jns
addr16
insl
jne
pop
insl
sbb
incb
mov
pop
call
xor
inc
mov
push
adc
in
aaa
pop
dec
jmp
imul
out
mov
imull
add
fcmovbe
dec
lret
inc
jmp
push
ret
out
xchg
pusha
fisubl
mov
inc
jg
jmp
pop
dec
sbb
sub
js
lds
add
fs
fistps
mov
mov
ret
gs
into
fdivrl
mov
hlt
test
jl
inc
xor
out
lds
lret
scas
je
sbb
or
sub
and
add
pop
fstpt
je
sbb
push
mov
outsl
into
jp
popa
sub
pop
cld
push
or
add
and
int3
pop
pop
or
add
stos
out
push
push
jno
mov
movb
lods
adcl
shll
jecxz
fadd
and
rorb
pop
add
cmp
push
add
xor
dec
nop
sub
pop
push
lret
xchg
cmp
dec
push
push
imul
ja
mov
dec
jmp
pop
ror
xor
jmp
mov
xor
cs
sahf
cmp
cmp
pop
sti
pop
pop
and
jg
cmp
push
sbb
inc
adc
jle
pop
cmp
and
jmp
or
test
int3
mov
sbb
and
outsb
pop
clc
loop
pop
jbe
shrb
jp
jns
filds
xchg
cmp
mov
repnz
insl
add
sbb
add
push
sub
mov
dec
pop
mov
mov
mov
shll
outsb
fisubrs
mov
stos
cmp
sahf
add
pop
pusha
mov
xor
push
fldt
mov
or
int3
repz
cmp
add
sti
push
mov
xlat
aas
fnstcw
sub
jno
in
push
ja
xchg
enter
enter
mov
arpl
cmpl
sbb
pop
xor
jmp
dec
jns
jb
popf
in
sub
mov
leave
vpaddusb
fwait
iret
arpl
xor
imul
sbb
mov
mov
cmp
loope
sub
inc
pushf
imul
push
cmp
outsl
lods
dec
mov
and
mov
sbb
push
cmp
pop
dec
push
test
sbb
adcb
pop
into
mov
lods
inc
adc
mov
and
jb
cmc
loope
jl
movsb
push
sbb
mov
pop
pop
cmp
fmuls
adc
jmp
jb
data16
xor
fsub
dec
push
pop
ficompl
and
xlat
nop
mov
daa
sti
ja
icebp
mov
and
pop
fdivl
repz
xor
lret
out
pop
fsubl
mov
jl
sbb
inc
or
loopne
jmp
and
xchg
in
scas
push
ficomps
imul
xchg
movsl
les
fnstenv
push
jl
test
and
sub
mov
fldl
push
mov
lods
xchg
loope
xor
daa
add
pushf
fs
xor
rcrl
rolb
jmp
cmp
ret
jnp
testb
cmp
mov
daa
mov
xor
sub
add
or
jno
inc
test
andb
sub
cmc
movsb
jmp
mov
lcall
aaa
int
outsl
sub
shlb
mov
adc
loope
es
lds
lret
mov
lcall
lret
and
dec
ret
lds
push
mov
add
jl
insl
mov
cld
fisttpl
mov
xor
lea
mov
mov
sahf
cli
sbb
lods
sub
int3
and
mov
enter
scas
clc
insl
inc
mov
sub
xchg
inc
mov
jae
jno
rorb
pop
xchg
ret
or
xor
faddl
xchg
cmp
jae
fidivs
adc
movsb
in
push
xchg
fsubrl
rcl
adc
mov
adc
and
ds
dec
sub
pop
lret
jne
aas
sarl
addr16
pop
sub
imulb
out
ds
cmpsb
push
push
andb
adc
push
inc
loopne
push
push
push
pop
push
lret
test
xchg
or
sub
inc
prefetch
adc
aam
lds
dec
sub
push
cmpsb
jecxz
push
cmc
mov
cld
ljmp
iret
lods
cmp
xchg
fdivrp
js
minps
and
xor
hlt
je
push
jecxz
ficompl
cli
mov
xorb
dec
lahf
cmp
jne
or
shrb
dec
clc
jp
or
add
jge
cltd
imul
cmp
push
pushf
push
lds
nop
push
mov
das
lods
arpl
sub
inc
scas
jbe
and
jmp
test
jmp
jge
or
pop
push
lods
fdivr
jmp
aad
fwait
je
adc
jnp
mov
cs
push
lea
dec
cmc
movsl
leave
add
out
jge
xchg
jno
add
dec
sub
scas
jl
jo
cli
xor
ja
cli
sbb
daa
pop
dec
repnz
out
pop
das
outsb
mov
sahf
xchg
mov
int
in
movsb
inc
pusha
mov
movsb
sbb
cmp
arpl
jmp
ret
and
dec
xchg
add
es
lret
out
xor
test
dec
adc
sub
jo
test
popa
jb
test
jle
adc
jns
repz
nop
and
mov
mov
popf
and
mov
insb
lret
mov
mov
mov
daa
and
iret
mov
dec
jmp
out
out
nop
adc
ret
pop
pop
sbb
xor
clc
clc
pop
notl
adc
and
addr16
jp
jne
or
popf
stos
jae
fstpl
adc
call
fwait
stos
movsl
add
into
es
adc
push
shrb
pop
cmp
or
cmp
xchg
insl
xchg
into
out
sub
adc
mov
test
fwait
inc
loopne
mov
push
or
inc
in
mov
mov
jp
pop
add
jle
mov
sub
out
ret
inc
lcall
add
sub
das
inc
enter
mov
enter
in
mov
and
lahf
outsb
fisttpll
mov
cwtl
arpl
pushl
sub
mov
mov
xor
mov
pop
inc
cmp
ret
outsl
scas
cmp
mov
scas
push
sub
pop
mov
inc
fbld
or
fcoml
ror
mov
iret
pop
xchg
addr16
xor
push
pusha
pop
and
cs
cmp
inc
out
divb
loop
cmp
std
inc
shlb
leave
xor
jno
sahf
arpl
and
inc
sub
and
jp
rcrb
ja
inc
mov
das
inc
or
imul
repz
int3
call
pushf
add
add
cmpsb
mov
sbb
add
lcall
pop
sub
pushf
inc
data16
pop
xor
fwait
push
rclb
dec
pop
adc
push
mov
mov
pop
jae
and
leave
int3
mov
test
mov
inc
sarl
cmovnp
lods
jne
pop
ffreep
sbb
outsl
lods
xchg
mov
inc
shl
xchg
inc
xor
addr16
and
jne
mov
adc
xchg
adc
lods
sub
inc
iret
xchg
ss
mov
mov
sarl
dec
pop
pop
fcomps
aaa
xorb
xchg
test
sub
out
mov
movb
shl
mov
cmpsl
xor
mov
lock
add
shl
xchg
and
or
rcrl
xlat
dec
adc
fimuls
cmp
enter
fisubl
inc
in
lahf
pop
insb
cmc
shr
popf
fsubl
fisubrs
dec
mov
and
scas
push
fisubl
jns
mov
iret
add
or
cmpsl
sub
cwtl
mov
lcall
je
add
dec
ds
out
mov
push
mov
jne
dec
cmp
ret
sub
xor
inc
in
aas
mov
lret
adc
dec
fstp
dec
xor
xor
loopne
gs
lret
loopew
sahf
push
inc
and
xor
sbb
out
test
addr16
aas
push
or
je
test
adc
fldcw
pop
mov
cmp
mov
cwtl
cmp
push
ret
aas
inc
scas
movsl
lcall
xlat
iret
or
scas
insl
jno
dec
push
push
imul
or
dec
xor
sub
in
mov
xchg
imul
cmp
cli
mov
sub
pop
insb
mov
mov
scas
imul
lahf
sub
inc
xchg
int
cli
jno
mov
cmp
pop
pop
xchg
cmc
push
mov
outsb
mov
fsubrl
test
dec
and
or
and
sub
pop
ret
dec
mov
pushf
andb
sub
xchg
imul
scas
lea
leave
sub
inc
jno
jp
jns
dec
push
xlat
jnp
outsb
out
mov
inc
cmovno
cmc
lea
scas
in
cmp
inc
mov
das
cmpsl
inc
push
in
cltd
push
inc
loop
and
mov
sub
icebp
xorb
mov
repz
cs
push
jae
sahf
popf
push
push
mov
mov
xchg
shlb
out
js
sub
mov
divl
mov
inc
cwtl
xor
int
dec
rorl
mov
scas
mov
shrb
dec
mov
test
jle
jae
in
mov
xchg
ret
mov
movsl
mov
inc
cs
jecxz
dec
pop
dec
mov
imul
cmp
loop
xorl
imul
sbb
push
inc
stos
orl
fcompl
dec
outsb
pushf
fwait
xlat
repnz
jge
dec
push
sub
cmpsb
cmpsl
add
lods
bnd
mov
and
adc
rorl
pop
movb
jp
ja
fsubrs
das
jb
mov
dec
jg
xchg
roll
adc
out
sarl
push
stc
pusha
mov
inc
mov
fisubs
dec
nop
dec
roll
xchg
lods
cmp
inc
dec
xor
mov
je
cwtl
enter
arpl
jae
dec
xorw
lahf
cld
dec
pushl
jge
push
and
fwait
pop
cmpsb
cmp
repz
lock
call
lcall
insb
mov
add
push
fisubrs
jmp
and
bound
mov
sub
ja
lds
mov
add
aad
ficoms
dec
daa
jecxz
xchg
mov
cmp
lods
sub
and
add
lret
loope
ficoms
mov
xchg
stc
dec
add
push
push
cmc
in
pop
push
sbb
and
sbb
fisubrs
and
sub
cmpsb
pop
js
sub
arpl
ret
pop
ljmp
je
addb
sub
xchg
jae
jns
xchg
pop
std
fcom
imul
push
and
push
sub
pop
push
pop
rcll
and
jmp
lret
cmp
dec
mov
and
mov
xchg
aad
movsl
out
jecxz
out
jecxz
cltd
adc
pop
push
sbbl
repz
into
sbb
daa
xchg
mov
xchg
jmp
fldcw
std
ds
call
mov
jmp
scas
cld
jecxz
jae
stos
push
addr16
adc
pop
fiaddl
fucom
ds
in
ds
nop
push
or
jnp
fisubs
add
stc
sbb
mov
int3
pop
sub
mov
and
pop
pusha
mov
test
loopew
sub
stos
out
mov
push
aaa
gs
sub
jbe
xchg
push
xchg
jle
jb
ds
cmpb
adc
dec
lock
mov
or
adc
popf
dec
mov
and
cli
ja
mov
cmp
push
pop
push
and
pusha
nop
lods
xchg
imul
adc
daa
inc
jbe
sbb
push
push
fidivrl
aam
mov
in
pop
xor
inc
mov
mov
lods
and
sbb
sahf
pusha
dec
mov
pop
push
sub
lcall
cmp
jge
enter
inc
push
call
aaa
pop
jno
insl
shlb
lret
pop
imul
mov
cmpb
or
dec
and
jns
mov
and
ficoml
ljmp
aad
sub
jns
fstps
add
mov
mov
xor
in
xchg
mov
dec
mov
mov
sub
mov
mov
dec
cs
insb
fstpt
xor
dec
scas
movsl
pop
sbb
pop
push
inc
test
jnp
fbld
and
pop
dec
aas
and
out
scas
and
std
inc
adc
adc
cld
outsb
push
pop
insb
test
xchg
xor
inc
test
push
leave
daa
push
and
cld
dec
insl
cmp
aam
sbb
xchg
fbld
sub
xchg
ss
out
testl
or
popa
pop
iret
pop
pusha
jle
ds
scas
mov
fmul
scas
pop
mov
pop
mov
adc
jo
inc
lret
arpl
aam
orl
cmp
and
lret
mov
cmpsb
ret
cli
push
sub
mov
sbb
pusha
mov
adc
push
leave
or
cmp
out
cli
jle
mov
sbb
lds
sub
mov
mov
sub
sbb
dec
scas
rcrl
add
mov
mov
pop
push
imul
dec
sub
int
mov
lcall
dec
xor
add
insb
enter
in
jmp
add
push
sub
pop
push
fnstenv
push
pop
mov
sti
and
xor
fmul
sub
push
mov
jle
fdivl
mov
sbbl
push
dec
push
idivb
scas
test
jge
movsb
ret
jo
pop
iret
pop
dec
mov
ljmp
pop
leave
dec
push
outsl
adc
jns
xorl
adc
lds
imul
shl
dec
sbb
jle
sbb
cmp
shrl
sbbl
ret
cli
out
push
incl
cli
jbe
push
and
insl
arpl
sbbl
sbb
sub
add
jo
lret
and
repnz
dec
enter
mov
push
out
pushf
adc
bound
ret
push
jo
push
ds
scas
fs
dec
test
iret
imul
lds
enter
inc
rolb
mov
pop
mov
ret
sub
jne
sub
mov
add
icebp
adc
sti
push
jp
lock
mov
add
test
out
add
cmpsb
mov
jg
idivb
add
push
push
xor
jl
push
sub
adc
mov
in
xor
inc
xor
push
mov
js
bnd
inc
sbb
lahf
jmp
ljmp
mov
ljmp
mov
jle
xchg
stc
jmp
mov
xchg
dec
cmpsb
outsl
push
data16
mov
test
ds
out
loope
lock
faddl
pop
adc
mov
or
aad
rcl
mov
xchg
jge
pop
mov
cmc
xor
and
push
adc
addr16
ss
mov
sti
bound
out
push
sbb
inc
test
fsubp
push
fldl
dec
add
mov
pop
add
push
in
mov
push
pop
dec
scas
push
sub
xlat
push
cmc
ljmp
dec
repz
mov
adc
cmp
popf
push
xor
pop
xchg
cmpsb
push
adc
fnstenv
dec
or
insb
inc
mov
xchg
fimull
insb
mov
push
jge
and
cmp
cmpsl
xchg
pop
in
sbb
in
rcrb
mov
mov
cmp
fdivl
shr
cwtl
pushf
imul
or
aaa
sub
and
lods
cmp
or
imul
sti
or
dec
inc
pop
xor
xor
rclb
repz
out
fisubrs
xor
xchg
int
dec
lock
xchg
dec
mov
adc
dec
jne
mov
fildll
out
loop
dec
xchg
jp
sub
jge
lcall
mov
fmull
dec
jecxz
mov
dec
mov
cs
push
out
daa
sub
pop
push
xchg
push
inc
add
xchg
stc
or
lea
dec
outsl
mov
push
mov
mov
cmp
xor
sub
ror
or
sbb
pop
loopne
push
in
xchg
inc
mov
sbb
popf
shrb
mov
in
push
mov
nop
sub
in
das
sarl
pop
mov
insb
pop
mov
ror
fdivrl
gs
scas
and
sub
addl
mov
outsb
dec
push
jg
jae
fdivl
or
add
jns
lods
jae
pop
sbb
test
lahf
xor
and
into
cmp
push
jb
rolb
lds
out
push
rcll
pushf
fidivrl
inc
arpl
adc
shl
push
test
jmp
fnstsw
sub
int3
mov
mov
mov
mov
xchg
in
cmp
popf
ja
xchg
xorb
jle
cmp
inc
dec
sub
sub
mov
pop
insl
dec
mov
fcoml
inc
daa
or
mov
mov
adc
test
addl
js
movsb
mov
in
sbb
dec
push
cltd
cmp
adc
mov
jge
xlat
inc
insl
xchg
cmp
in
mov
inc
xchg
in
hlt
push
movsl
dec
xchg
bound
pop
out
sbb
cmp
xchg
repnz
icebp
cli
mov
pop
adc
xchg
and
cmc
lods
dec
test
mov
xor
mov
call
std
lcall
or
ja
push
push
movsb
mov
or
pop
push
aas
sbb
ret
gs
popa
pop
push
jo
xchg
lea
js
fisubl
int3
lock
testl
imul
lahf
mov
fstpt
jecxz
pusha
or
loop
test
sub
and
inc
sbb
fnstsw
int
subb
movsl
inc
mov
and
pop
aas
sbb
ss
leave
stc
rolb
fmull
sar
or
sbb
push
lahf
fstl
hlt
test
sbb
xchg
mov
or
push
push
ficoms
cmp
flds
inc
rcl
hlt
sub
xor
std
pop
add
jmp
add
aaa
outsl
js
cld
fs
dec
sbb
and
adc
ljmp
cmpsl
movaps
pop
cmp
or
lods
add
mov
add
sub
int
xchg
lret
and
xchg
aaa
sbb
fs
mov
xchg
in
adcl
jae
push
jo
loop
add
jae
ljmp
jmp
dec
imul
jp
pop
sbb
sbb
aad
sub
mov
pop
mov
xor
and
adc
cmpsl
adc
repnz
xor
shrb
push
mov
pinsrw
shl
mov
nop
mov
iret
pop
jno
and
pop
cmp
and
sbb
add
mov
aaa
push
rorl
push
pop
push
and
pop
aaa
xchg
decb
fdivrp
ljmp
test
xlat
clc
lcall
ja
lret
push
inc
test
clc
aam
mov
clc
sub
sub
or
ljmp
jb
pop
sahf
and
adc
pop
add
je
and
arpl
filds
push
mov
out
fs
and
loope
cli
in
outsl
fmuls
scas
mov
jne
js
inc
out
inc
ja
inc
dec
call
int3
xchg
outsb
pop
push
mov
stc
sbb
sbb
add
mov
cmp
push
xchg
xlat
or
adc
cmp
iret
ret
in
lods
std
outsl
test
mov
dec
mov
xchg
cmp
nop
inc
cltd
icebp
sbb
lds
mov
xchg
imul
insb
outsl
int
push
test
cli
imul
sub
add
lret
sbb
in
es
jnp
push
hlt
pushl
insl
push
ljmp
lock
ljmp
xchg
jbe
test
out
dec
scas
je
leave
ja
push
push
push
xchg
push
hlt
pop
insl
sbb
lods
or
inc
mov
sbb
mov
inc
repz
in
mov
push
ljmp
jnp
std
cmp
loope
push
test
push
sbb
pop
push
int3
pop
mov
nop
xchg
fdivrl
mov
xchg
loop
mov
dec
sbb
dec
cmp
in
scas
repz
imul
cmpsb
dec
in
outsb
int3
lahf
sbb
push
stc
inc
add
xlat
xchg
fwait
daa
adc
dec
xchg
push
test
ljmp
subb
test
pop
jp
xor
and
lods
mov
mov
aad
sub
cmp
inc
jne
dec
imul
or
mov
push
xchg
inc
mov
hlt
frstor
xor
sarl
push
push
sbb
push
add
lods
aam
int
test
test
add
roll
push
sub
stc
dec
sub
test
push
outsb
sahf
test
pop
rorl
pop
sub
sub
nop
outsl
cmp
ss
lods
scas
insb
xchg
xor
inc
mov
shl
adc
adc
mov
push
mov
cmp
add
mov
pusha
stos
push
cmc
mov
test
and
addb
jecxz
call
jae
lahf
loop
dec
pop
sahf
popf
clc
out
das
lcall
fsubrl
xchg
pop
les
push
cltd
repz
outsb
pop
jge
mov
subb
aas
push
rorb
mov
ds
int
sahf
inc
sub
sub
and
mov
test
js
pushf
fdivl
out
mov
clc
inc
push
jnp
or
dec
push
push
std
lahf
aam
paddd
dec
cld
imul
bound
sub
stos
inc
mov
or
stos
pop
pop
ljmp
mov
popl
enter
cld
leave
add
outsl
faddl
scas
fsubrl
daa
push
push
fcomi
jns
mov
inc
or
out
mov
mov
inc
adc
sub
loope
adc
icebp
std
lock
and
xor
enter
and
xchg
leave
jne
shlb
pop
sbb
fcomp
xor
aaa
ds
mov
ret
fists
sbbl
popf
push
mov
inc
inc
idivb
dec
inc
push
cld
dec
pop
test
lea
sbb
fists
cmp
mov
aam
ret
cltd
and
fiaddl
movsb
push
pop
lea
mov
dec
fcompl
pop
dec
mov
push
call
mov
cmp
iret
insl
fbld
mov
les
pop
sbb
cltd
adc
rclb
xchg
jae,pn
and
sbb
outsb
dec
push
push
xchg
mov
add
inc
hlt
xchg
pop
testl
mov
push
lcall
xchg
mov
fdivs
imul
loope
mov
std
gs
mov
fldenv
lods
outsl
inc
gs
ret
cld
jnp
push
mov
add
outsl
cmpsb
imul
push
jmp
mov
adcl
nop
jl
lds
sub
pop
mov
mov
lods
sti
cli
std
outsb
stos
jmp
sbb
inc
out
pushf
pushl
sub
movsl
mov
lods
das
mov
mov
mov
push
adc
mov
and
ss
mov
push
jg
clc
ljmp
dec
jo
and
ficoms
cmovbe
cmpsl
xchg
add
mov
sub
int
icebp
ss
mov
mov
je
dec
shll
faddp
fcomps
xlat
xchg
dec
xor
and
mov
lods
fidivs
mov
sbb
outsl
inc
mov
xchg
jbe
je
notb
adc
nop
das
jnp
movsl
sub
cmp
gs
push
mov
test
std
cmpsb
cmp
ja
repz
add
pusha
cmp
out
cmc
scas
aad
and
or
mov
cli
nop
jg
push
pop
xchg
jns
pop
add
sbb
lret
insb
inc
push
push
sahf
inc
mull
jge
add
or
pop
mov
sub
cmpsl
inc
stos
sar
pop
mov
add
imul
icebp
pop
or
mov
and
sbb
cli
subb
cmpsl
add
addr16
and
add
pop
sbb
cmp
and
ret
lahf
xchg
inc
pop
clc
jle
call
icebp
popa
ljmp
aad
mov
push
andl
add
ret
push
mov
jl
jb
fcoml
fcompl
fcomps
inc
sbb
push
repz
inc
into
xchg
sbb
mov
push
test
mov
mov
mov
mov
xor
push
jl
cld
sub
mov
repnz
ret
adc
mov
xchg
xchg
jecxz
sbb
dec
out
xchg
mov
sahf
repnz
addr16
or
inc
pop
mov
fdivrl
mov
int3
bound
jmp
jl
insl
push
mov
xchg
sub
test
das
push
or
push
xlat
aam
mov
sub
xor
mov
adc
mov
daa
pop
cmp
dec
icebp
cmp
or
adc
sbb
mov
fidivl
add
push
push
mov
cmpsb
push
adc
jmp
jnp
mov
icebp
out
orb
faddl
nop
sub
iret
mov
xor
push
or
mov
mov
dec
stos
sbb
dec
dec
cmp
jnp
jae
cld
dec
push
movsb
push
mov
test
mov
inc
and
xchg
in
sbb
ret
enter
add
test
mov
dec
addr16
pop
xchg
cld
scas
and
fimull
jecxz
shl
push
stc
mov
cmp
cmp
popf
rcrb
aas
sbb
fs
jp
lret
dec
faddl
ss
mov
js
cmpsb
or
pop
push
pop
ljmp
cli
sbb
push
jae
scas
enter
xor
jge
popa
inc
pop
adc
pusha
enter
sahf
aas
sub
dec
test
pop
das
sub
adc
mov
pop
add
xor
mov
fs
icebp
dec
icebp
lret
mov
outsb
push
add
mov
aas
or
mov
xor
mov
xor
fcompl
das
cmp
int3
bound
xchg
pop
mov
les
jo
pop
mov
dec
jb
fidivs
add
cltd
shlb
sbb
push
sbbb
mov
ja
or
cmp
xor
xor
js
lods
mov
cmp
out
xor
jo
sti
imulb
cmp
cmp
mov
dec
cmpsb
pop
sbb
into
test
fcmovnbe
cmp
scas
cwtl
or
jnp
xchg
fsub
sub
faddl
fiaddl
adc
mov
cs
cmp
push
cmc
cltd
in
mov
rolb
es
cmpsl
enter
lret
xor
ficomps
insb
lcall
xchg
xor
mov
mul
or
aaa
jns
pop
cbtw
daa
jb
out
xor
je
sbb
xor
in
sub
aam
dec
inc
sbbl
sub
aaa
mov
fmull
mov
xor
stos
pop
xor
lock
in
mov
aam
or
mov
es
push
out
cld
add
sub
ljmpw
lock
cmpsb
lock
andb
jne
sub
or
and
fldl2t
and
ja
mov
mov
adc
test
loopne
push
inc
inc
repnz
leave
pop
mov
neg
xchg
pop
test
pop
pop
in
sub
ljmp
imul
out
sub
pop
dec
repz
push
lret
bound
ret
fistps
aad
cmpsb
cmp
repz
lds
aaa
inc
xchg
mov
cltd
dec
cmp
xchg
orl
add
mov
jbe
aam
je
and
pop
push
cs
mov
mov
bound
push
push
pop
fisttpll
mov
mov
movsb
xor
cmpsl
mov
jmp
add
inc
xorl
push
cmp
xchg
xchg
sbbl
dec
mov
fdivrs
inc
mov
testl
xchg
mov
arpl
in
cwtl
mov
popa
lcall
shl
sbb
inc
pop
loop
arpl
insl
dec
pop
repnz
cs
push
aam
cs
jge
incb
xlat
jmp
pop
dec
rcr
push
lahf
push
insb
mov
pop
xchg
fisttpll
dec
outsl
mov
and
imulb
popa
or
push
repz
push
jo
inc
or
je
jo
mov
dec
incl
sbb
pop
into
stos
jb
mov
ss
jle
mov
pop
cs
fwait
ja
mov
mov
sub
inc
jb
sbb
mov
add
fnsave
mull
bnd
daa
popf
aad
arpl
bound
pop
aaa
push
test
and
imul
jmp
inc
jae
out
pushf
enter
cmc
popf
fidivs
popf
std
scas
add
or
mov
imul
mov
mov
rolb
daa
pusha
movsl
cmpsb
das
push
call
xor
pop
dec
inc
negb
jge
mov
adc
dec
pusha
xor
pop
and
daa
sub
dec
jnp
cmp
pop
aaa
fcmovb
mov
das
jmp
inc
lock
scas
rolb
bswap
std
in
push
jg
pop
in
mov
sahf
push
jb
mov
in
sub
sti
imul
or
out
or
insl
add
int3
xor
sti
mov
mov
cmpsl
xchg
or
shll
adc
sbb
xor
mov
repnz
mov
mov
dec
mov
inc
mov
les
sub
insl
arpl
dec
loopne
rol
pusha
xchg
std
lods
cwtl
mov
aaa
gs
in
fwait
stos
add
das
test
scas
nop
pop
popf
mov
data16
insb
inc
outsb
lcall
icebp
sub
jl
test
mov
and
movsl
inc
inc
xor
jmp
repz
cmp
sahf
cmp
sahf
cltd
dec
aas
aad
jb
cmp
cmp
or
sub
data16
mov
icebp
mov
jne
xchg
int
cltd
or
push
jnp
sub
in
lcall
xchg
fwait
dec
loope
lds
jecxz
xchg
push
xor
rorb
add
leave
sub
jnp
inc
or
sahf
scas
call
stc
movsl
pop
orb
xchg
or
or
sahf
or
rcl
xor
in
sbb
cmp
mov
js
xchg
scas
adc
repz
movsb
dec
nop
roll
jo
or
testb
jecxz
fidivl
sub
xor
sti
add
es
push
and
enter
mov
ljmp
cmp
ficoms
adc
rclb
sbb
and
enter
xchg
jecxz
aaa
stos
adc
sbb
dec
adc
mov
dec
mov
int3
out
mov
aam
lods
loopne
mov
test
xchg
ds
or
sbb
dec
xor
push
jmp
sub
test
cmp
add
mov
test
or
idivl
push
aad
shl
movsl
sbb
popa
movl
xchg
add
mov
adc
dec
lds
cli
addb
sbb
sub
xchg
and
sub
outsb
push
adc
aaa
jecxz
pusha
cs
inc
pusha
dec
dec
clc
push
lahf
or
cld
int3
ja
sbb
mov
arpl
push
sti
cmp
scas
sub
xchg
jo
cs
js,pn
pop
mov
and
pop
xor
pushf
or
or
ss
test
or
xor
or
call
ja
push
in
icebp
stos
jl
xchg
xchg
pop
mov
loop
outsb
popa
push
push
outsl
in
push
orl
or
mov
movsl
add
ret
stc
lea
adc
in
clc
data16
mov
and
sub
inc
pop
or
inc
adc
decl
sbb
push
and
lds
mov
xlat
jg
movsl
stos
mov
sbb
iret
inc
jns
stos
mov
sbb
les
repz
pop
inc
xor
adc
inc
insb
pushl
pop
xor
sbb
jecxz
mov
shlb
adc
fucomip
call
icebp
jge
call
adc
pop
outsl
sub
dec
orb
add
fmull
pop
daa
mov
push
cmp
ficompl
aam
in
jbe
adc
lcall
stc
mov
cmp
sub
mov
mov
loopne
insl
dec
add
je
mov
jnp
js
out
xor
cmp
pushf
cmp
push
sub
insl
push
gs
mov
jno
jg
push
testb
dec
cmpsb
bound
movsl
jb
dec
out
aad
or
loop
pushf
pop
insb
dec
xlat
aad
adc
sbb
add
data16
test
repnz
sbb
mov
ja
xchg
int3
inc
aas
ja
cmpsl
push
test
movsl
lods
jmp
push
rcr
cmp
leave
push
or
jecxz
fwait
cmpl
movsl
fnstenv
and
and
cmp
inc
insl
cmc
leave
mov
testl
adc
aaa
mov
lods
sbb
insb
push
mov
push
aaa
stc
fdivrl
or
enter
iret
mov
fs
lret
enter
notl
and
ja
jbe
or
xchg
cmp
icebp
stc
subb
fstpt
cmp
fwait
sbb
or
ss
or
ss
clc
sub
jbe
or
js
xchg
lds
xchg
pop
mov
je
pop
add
sub
cmp
imul
adc
sub
push
push
int
adc
sub
jno
enter
fdiv
shrl
fcomps
adc
xor
pop
add
cmpsl
test
mov
in
insl
push
data16
cmp
fcompl
popf
xchg
pop
mov
jp
xor
movsb
scas
mov
inc
loope
adc
lahf
xor
push
cmpsl
jmp
neg
jnp
sti
xorl
or
cltd
push
push
xorl
repnz
jne
addl
or
sahf
fbstp
xor
jbe
xchg
xchg
paddw
jmp
movsb
xchg
and
cmpsb
rolb
add
imul
les
or
ret
lret
mov
loopne,pn
jne
test
imul
es
loopne
mov
into
int
repz
cld
rorb
push
out
fs
dec
push
arpl
mov
cmp
jb
inc
dec
or
mov
add
cld
xorl
push
adc
add
jp
xor
fst
inc
dec
xor
sbb
sahf
dec
sub
push
pop
pop
sbb
mov
nop
int
mov
loope
cmpb
xchg
popa
mov
inc
fsubp
mov
jno
pop
in
jns
mov
rorb
pushf
outsb
cmp
daa
je,pt
je
and
dec
mov
inc
scas
sub
test
addr16
add
or
xor
daa
sbb
pop
lods
int
xlat
push
mov
lods
idiv
clc
sbb
ljmp
aam
pop
test
fidivs
xchg
sbb
inc
jecxz
jne
pop
enter
push
clc
mov
push
fmulp
xchg
gs
or
sbb
pop
jbe
idivb
int3
jg
pop
in
dec
push
dec
jae
hlt
and
movsb
xchg
push
or
stc
pop
sarl
jne
aam
test
jns
mov
fmul
in
inc
inc
mov
xor
push
sub
ret
xor
test
or
stos
repnz
into
sub
xchg
push
dec
sub
mov
nop
rolb
sahf
in
adc
jmp
data16
jmp
shlb
xchg
or
lcall
fldt
fnsave
out
lods
loop
xor
mov
fsub
nop
hlt
xchg
loop
bound
movsb
xorb
insb
loop
push
adc
add
lcall
push
pushf
push
in
pop
test
scas
push
call
out
cli
xchg
cmpsl
push
xorl
mov
sub
cmpsl
nop
adc
in
test
aas
adc
imul
inc
mov
inc
and
sbb
cwtl
cmp
int3
lods
inc
mov
mov
andb
mov
loopne
xor
xor
inc
scas
test
push
pop
loopne
stc
arpl
or
xchg
sbb
cmp
loope
aad
lock
cmc
xchg
sub
add
pop
mov
pop
cmc
addb
xor
jo
jbe
mov
adc
outsb
hlt
in
sarb
popf
adc
andl
add
arpl
jg
cwtl
xchg
and
push
dec
lret
mov
mov
popa
shr
rcr
stos
out
mov
test
or
cli
dec
sbb
xchg
leave
xchg
cmp
and
add
stc
inc
scas
mov
dec
dec
jns
and
inc
hlt
mov
mov
jbe
call
lret
cmp
and
xor
jns
cwtl
mov
jp
xor
mov
lock
pop
xor
pushf
mov
or
cmp
jnp
cmc
int3
fldt
stos
inc
mov
sub
ss
test
sahf
inc
pushf
push
ljmp
inc
sahf
in
insl
jo
testb
rcrl
jno
and
icebp
jg
jb
sbb
mov
add
out
aad
repz
push
lret
and
inc
push
dec
addl
adc
and
sub
ja
rorl
mov
lahf
das
lods
test
jo
insl
test
repnz
xlat
jg
mov
rep
mov
xchg
and
pushf
sbb
sub
hlt
sahf
and
sub
fildll
pop
inc
mov
mov
lea
cmp
xor
dec
shl
xchg
lods
add
sbb
mov
ljmp
aas
rcrb
loopne
lods
cmc
pop
lret
mov
jle
pop
inc
mov
inc
and
add
iret
das
sti
jno
pushf
fdivrs
push
in
sbb
cmpb
xchg
cltd
lock
pop
stos
leave
push
mov
mov
and
out
add
jg
cmp
add
cs
lods
jp
dec
cmp
sbb
pop
xor
out
xchg
fs
loop
push
xchg
pop
jle
mov
and
fidivrs
aaa
inc
outsb
insb
fnstsw
or
into
add
sbb
xchg
fldcw
std
cmp
xchg
repnz
cmc
push
roll
jo
cltd
cli
gs
mov
rorb
dec
push
decl
mov
add
stos
sub
fcoms
xchg
cmp
out
or
mov
push
stos
popf
jl
fidivs
ljmp
popa
out
adc
mov
mov
push
sub
leave
mov
mov
push
imul
mov
jp
add
fs
frstor
mov
sti
jns
or
cmpsb
ljmp
mov
pop
fsub
mov
jp
cmp
and
ret
jno
in
cld
ds
cli
mov
or
push
jne
adc
push
es
repz
mov
leave
aas
jae
jge
or
push
add
adc
cli
fwait
in
and
xor
popf
sbb
loopne
and
es
repz
ficomps
mov
and
ret
fwait
sbb
std
sbb
dec
push
sahf
in
fstl
lods
inc
jae
xchg
mov
dec
cmp
sarb
jnp
js
mov
xor
std
cmp
outsl
mov
sbb
rorb
scas
mov
push
inc
insb
xchg
scas
sbb
add
mov
xchg
daa
scas
movsl
scas
fcmovu
mov
mov
dec
data16
and
dec
dec
mov
mov
adc
lcall
stos
in
scas
mov
cmpsb
and
pop
pop
adc
jle
or
xchg
fbld
popf
adc
js
push
inc
out
or
in
in
sti
decb
fistps
les
cs
cmp
xchg
cmpsl
add
leave
jno
fisubrs
inc
mov
cmp
test
and
inc
je
or
or
add
stos
sbb
inc
mov
imul
stc
jnp
into
dec
paddsw
jmp
in
push
pop
fsubrl
jl
fistps
lock
or
jnp
in
mov
fbld
sti
rcrb
mov
ficoml
ja
jl
aad
or
ror
sahf
inc
add
std
shr
lret
xor
or
mov
les
test
xchg
inc
enter
jns
mov
ret
and
pusha
hlt
add
pcmpgtb
mov
je
mov
and
xor
pop
pop
or
or
jne
pop
shrb
insl
dec
ds
sbb
icebp
fmuls
mov
out
mov
cmpsb
stos
cmp
and
loop
xor
clc
pop
insb
ss
jbe
push
sahf
jmp
int3
fst
stc
xor
pop
fnstcw
xor
cmp
inc
xchg
sbb
cwtl
ds
push
push
xor
push
pop
je
lret
repnz
lea
jecxz
pop
and
pushf
mov
inc
or
mov
push
das
mov
adc
rorb
cmpsl
outsl
pop
pop
add
repnz
push
rolb
dec
push
xor
cmp
ja
mov
mov
jnp
push
dec
mov
xor
popf
inc
dec
cmp
and
jg
push
out
pop
in
leave
dec
in
mov
test
pushf
jbe
adc
mov
mov
fwait
xchg
adc
sarl
stos
nop
imul
xchg
sbb
movsb
and
add
xchg
in
int
cltd
lahf
mov
sub
mov
test
adc
pop
lods
adc
leave
inc
adc
and
xchg
mov
sbb
jle
test
mov
fwait
test
bound
icebp
daa
out
loope
push
aaa
pop
cmc
fcoms
inc
cmc
inc
pusha
es
and
cli
sub
dec
mov
adcb
jbe
jl
fwait
int3
aam
pop
xchg
lods
and
sahf
push
sub
fs
fcoms
add
mov
mov
insl
xchg
notb
cmpsb
mov
movsl
shll
jmp
insl
out
jno
or
in
mov
lds
ljmp
arpl
loope
inc
lock
mov
inc
jns
xor
repnz
mov
movb
jmp
jg
aam
pop
enter
jne
and
insl
jp
add
push
lcall
iret
jge
cli
negb
lods
sub
fndisi(8087
out
xchg
repnz
adc
push
add
sub
sbb
jbe
adc
sbb
or
sbb
int3
nop
pop
inc
into
iret
hlt
dec
fwait
push
mov
xchg
adc
or
lods
fcomip
inc
scas
repnz
xor
jb
loope
shr
mov
pop
jmp
sub
cmp
sbbb
jg
orl
sbb
pop
mov
gs
addl
out
cltd
scas
mov
into
mov
mov
adc
pushf
dec
mov
push
mov
xchg
mov
clc
mov
add
mov
pop
aas
and
dec
sub
testl
pop
push
fdivs
sbb
mov
je
loopne
or
inc
mov
mov
imul
and
repnz
jle
leave
or
adc
xor
dec
mov
lahf
gs
xor
cld
adc
ja
lods
mov
cmp
lcall
enter
test
cmp
dec
cmp
nop
fdivl
push
sahf
push
ret
std
push
mov
icebp
adc
pop
dec
lcall
frstor
pop
dec
pop
les
repz
shr
sahf
outsb
xorl
fisubrs
loop
and
sub
divb
mov
fnstsw
orb
jl
ss
dec
cmpsb
lahf
or
cwtl
ffreep
mov
into
xchg
imul
mov
mov
adc
sub
es
insb
jno
mov
jp
add
rcrb
and
cmp
loope
pushf
stos
inc
lods
sarl
lret
aad
mov
loop
mov
cmp
shlb
mov
jecxz
jp
xchg
sti
cmp
insb
int
adc
test
bound
int
cli
lock
xchg
pop
xchg
lret
lcall
scas
jnp
je
lret
xor
adc
xor
in
je
push
adc
cmp
stc
cmp
cmp
or
mov
mov
pop
stos
je
mov
dec
push
mov
scas
and
rclb
pop
icebp
stos
adc
push
pop
call
andb
sbb
scas
add
or
lret
inc
jge
scas
test
adc
sbb
jp
dec
pop
or
into
mov
adcb
add
dec
inc
insl
push
jne
stos
xchg
add
ret
sub
jno
jno
sbb
jo
pop
test
push
push
sbb
ret
sbb
shll
mov
lods
mov
cmp
pop
cmp
aam
icebp
mov
inc
movsl
cmpsl
call
dec
hlt
std
insb
jno
cwtl
inc
cld
jnp
push
pop
sti
inc
rol
pop
inc
outsl
sti
adc
bound
push
mov
pop
jmp
cmovs
xchg
cmp
and
add
push
cmp
mov
and
lret
rcr
pand
call
push
sub
insb
rcl
dec
xor
sahf
mov
mov
mov
pop
outsb
dec
inc
mov
fists
push
pop
sbb
cmp
daa
jge
mov
je
pop
mov
jne
outsl
aas
push
push
lods
sub
mov
mov
repnz
das
fsts
enter
shrl
xor
loopne
es
sbb
jmp
lock
lock
cld
xchg
mov
pop
sarb
and
mov
and
popa
daa
add
pop
aam
test
ds
std
cwtl
ljmp
adc
addr16
mov
fwait
pop
xchg
fidivl
push
xor
adc
je
xor
mov
or
bound
rol
sub
sbb
loopne
fdivrl
sbb
and
cwtl
mov
fisubs
ljmp
repz
push
push
adc
ficomps
rolb
aam
mov
adc
xchg
dec
sbb
mov
fndisi(8087
mov
hlt
sahf
mov
fwait
add
add
int3
mov
mov
push
mov
stc
aad
inc
or
xor
enter
test
cld
lock
xchg
into
jg
cmp
xor
lods
mov
mov
xor
fwait
dec
jae
mov
outsb
mov
aaa
mov
stc
lcall
inc
loope
movsl
inc
xor
movsb
xchg
insb
sub
or
fwait
pop
outsl
es
cmp
loope
mov
stos
push
xchg
notl
dec
enter
adc
dec
cmp
cmp
xchg
mov
fildl
sbb
inc
ljmp
lret
call
sub
jb
mov
mov
arpl
mov
repz
std
sub
ret
sub
xor
mov
jmp
adc
addr16
and
or
cmp
cmp
xchg
add
shr
cltd
mov
push
in
ds
negl
fldenv
out
pop
dec
mov
add
stc
sti
daa
cs
sahf
stc
sub
scas
in
cmp
int
gs
std
mov
push
xor
aam
push
dec
ret
std
lahf
rol
cmc
sub
rol
jne
push
mov
push
mov
loopne
mov
push
xchg
subb
inc
xchg
cli
ja
cmp
pop
jl
lea
inc
mov
test
push
inc
cltd
sbb
adc
repz
push
std
xor
or
sbb
and
xchg
aam
cwtl
mov
push
in
iret
inc
jge
adc
lods
cmp
out
in
loop
lcall
lods
sbb
xchg
sarb
mov
cli
jae
iret
xor
test
jge
hlt
lods
xchg
mov
dec
pusha
sub
cmp
cmp
mov
add
test
mov
add
add
cmpsl
in
and
clc
fistpl
sbb
push
lcall
out
xor
dec
bound
mov
arpl
arpl
leave
xor
je
xchg
sub
shr
test
and
jle
inc
mov
and
out
mov
sar
aam
fadds
lea
mov
aam
pop
xlat
dec
jmp
imul
ds
loop
push
movsb
xchg
outsl
push
adc
out
pop
loopne
test
xor
push
movsb
cmc
rorl
mov
or
je
adc
out
xor
lods
sti
insl
ret
and
jns
inc
insl
adc
in
int3
push
test
out
push
aam
jp
fwait
imul
scas
pop
in
mov
cmp
sbb
inc
rolb
inc
add
fimull
orl
xchg
ljmp
mov
stos
enter
sti
adc
arpl
adcb
pop
fwait
push
test
in
imul
adc
push
fcoms
inc
inc
mov
sbb
mov
dec
test
in
int
inc
pop
into
xchg
test
mov
ja
xchg
add
jl
cmp
mov
mov
inc
movsb
out
inc
xchg
or
sub
or
imul
and
push
pop
pop
sub
mov
jbe
imul
cmpsl
adc
mov
inc
out
push
add
jo
into
dec
cmp
es
xor
push
mov
ret
sbb
jns
jecxz
loopne
in
fisttpll
sbb
jnp,pn
lea
dec
les
mov
xchg
dec
cwtl
or
arpl
pushf
jl
rclb
outsb
xor
jge
movb
cmp
pusha
xchg
and
sub
inc
push
xchg
lods
xchg
push
lds
leave
outsb
xor
pop
out
adc
mov
inc
ja
dec
decl
repz
xchg
addr16
adc
pop
pop
test
push
imul
fimull
test
sbb
dec
popf
mov
fwait
pop
cmp
jl
fmull
ret
or
xor
add
inc
push
sbb
lret
xor
push
jg
test
sbb
outsb
dec
adc
jecxz
cmp
cmp
push
mov
int3
jg
data16
leave
and
pop
adc
cmpsb
fwait
lret
jle
sahf
jne
sbb
push
mov
aas
sub
xor
or
les
xchg
cs
jb
inc
pop
cmpsl
mov
lods
fdivl
dec
and
inc
dec
pop
add
jg
out
int3
and
pop
push
gs
mov
mov
jne,pt
jno
fcmovb
cli
add
mov
xchg
xchg
sub
dec
call
cmp
lock
or
aad
inc
fcmovu
or
lcall
inc
adcb
cmp
mov
fdivrs
out
jge
xor
mov
in
mov
insl
in
and
xor
push
xor
add
cmpsl
push
push
cwtl
and
mov
decb
ljmp
add
sbb
int
add
push
scas
mov
std
adc
pop
jb
mov
aas
cld
jge
nop
add
xchg
mov
test
adc
fildll
pop
bound
xchg
rolb
sub
test
push
ss
cld
mov
push
xchg
sbb
mov
xchg
test
sar
in
lock
out
sub
cmpsl
xor
jmp
or
test
and
cli
pop
xor
icebp
sub
cs
int3
sahf
fcoms
xchg
mov
outsl
repnz
pop
ss
sub
repnz
cmp
cmp
roll
push
xor
out
cltd
mov
ret
pop
insb
cmp
mov
inc
in
xor
addr16
stos
ja
dec
mov
mov
jno
hlt
inc
or
in
repz
dec
mov
testb
push
add
xor
jne
add
nop
cli
dec
or
cmp
loope
lcall
mov
mov
push
xchg
mov
mov
add
aam
int3
es
push
fnstcw
jmp
add
and
mov
xchg
and
jne
inc
les
rcll
test
or
and
mov
jns
mov
push
mov
mov
mov
xchg
ja
inc
cli
ljmp
xchg
cmpsl
pop
in
push
and
jns
rcll
pop
jae
jne
or
mov
outsb
bts
aaa
adc
sbb
inc
lods
bnd
mov
shll
fidivl
sbb
sbb
lods
lret
and
mov
mov
fmulp
xchg
hlt
lea
je
sti
pop
mov
jo
mov
push
mov
outsb
jp
aas
stos
push
test
loopne
xchg
fsubs
fnstsw
ficoms
es
cmp
mov
fstp
pop
movsl
jb
mov
inc
sub
add
sub
sub
inc
clc
push
data16
in
push
ret
mov
jnp
shrb
add
jl
pop
leave
rolb
out
sbb
fwait
jle
mov
or
xchg
mov
fistps
nop
ss
xchg
scas
adc
mov
or
imul
xor
xor
xchg
icebp
dec
xlat
dec
movsb
and
jp
lahf
sub
or
push
add
sbb
push
lods
inc
xchg
push
shlb
das
idivb
sbb
push
ret
arpl
addb
mov
jae
sbb
and
icebp
int
ss
fmul
push
imul
xchg
inc
xor
shlb
fsub
loop
ret
subl
push
xor
mov
mov
rorl
push
push
dec
fcoml
jge
adc
lds
daa
mov
pop
test
jmp
sahf
test
cmp
mov
sub
subb
push
sub
push
xor
pop
xor
std
push
sbb
daa
ja
aad
out
push
mov
xchg
xchg
xchg
fmull
push
das
lods
lds
xchg
out
adc
rcrb
jbe
enter
roll
addr16
cmp
hlt
loop
nop
ja
lahf
pop
push
cmp
jge
mov
mov
popf
and
pop
mov
sub
testb
mov
lods
sbb
in
push
jmp
aas
sbbl
pop
and
pop
dec
loop
dec
or
mov
aam
mov
dec
fmulp
inc
mov
xchg
mov
dec
shll
ljmp
mov
jmp
mov
sub
hlt
cmp
movsl
movsl
xlat
mov
ljmp
les
push
add
dec
add
mov
or
pop
and
stc
fdivrl
mov
sub
push
pop
pop
loopne
sahf
push
aad
adcb
or
mov
movntps
cmpsb
mov
or
lahf
roll
dec
pushf
js
xor
push
daa
pop
and
sti
or
ret
or
xchg
jle
xorl
lock
jnp
push
je
and
repnz
add
lods
out
jmp
push
or
es
aas
jg
fsubrs
pop
adc
xchg
cmp
lcall
and
pop
popf
sahf
scas
ror
mov
ss
push
jae
inc
bound
aam
push
mov
jns
stos
scas
int3
ja
add
aas
imul
stos
cmc
xor
and
xor
lock
push
ret
inc
fiaddl
insb
mov
add
test
out
lods
mov
add
pop
xchg
ljmp
or
inc
popf
adc
mov
xor
inc
xchg
lahf
and
push
ficomps
or
pop
and
jns
xchg
leave
push
xchg
dec
sbb
insl
inc
xor
fsubrp
subl
mov
push
jbe
adc
fwait
mov
div
push
ret
into
ja
pusha
pop
pop
enter
es
mov
test
subl
fidivrl
jo
adc
or
mov
push
in
addr16
js
lret
test
test
sub
jo
sbb
orb
jmp
pop
pop
xor
add
adc
adc
mov
pop
mov
mov
mov
fldcw
cli
pop
ret
xchg
push
fcmovnb
xor
sub
iret
mov
jne
sbb
push
or
fmull
movsl
inc
loopne
lods
fimuls
pop
push
jae
leave
jne
outsl
fbld
xchg
mov
xchg
add
inc
popa
fnstcw
fstpt
jae
jne
mov
test
idiv
rcrl
dec
daa
daa
decl
test
push
icebp
and
mov
xorb
jbe
adc
xchg
inc
cs
ss
xor
call
mov
pop
and
or
cmc
mov
cld
fdivs
imul
outsl
cmc
mov
int
sbb
fimull
out
lds
mov
mov
pop
jp
mov
push
js
dec
mov
loopne
test
fsubrs
pop
andb
popa
js
cmp
add
daa
push
lcall
adc
xchg
in
mov
fwait
or
inc
pop
in
mov
aaa
xchg
enter
std
push
arpl
sbb
and
lods
cmp
sarl
les
jecxz
repnz
stos
adc
insb
push
lds
adc
cmpsl
js
adc
mov
pop
jge
or
inc
out
andb
adc
pop
lret
sbb
pop
push
push
mov
inc
js
loopne
leave
popf
mov
mov
fwait
data16
scas
and
cld
shll
repz
mov
cmp
in
lret
rcrb
adc
sub
bound
inc
aas
mov
scas
js
adc
mov
sbb
jo
in
popf
xor
cli
jne
ja
lcall
xor
adc
mov
rclb
out
not
sti
mov
add
sbb
lods
pop
pop
cltd
shl
dec
mov
icebp
test
sub
test
mov
push
mov
js
popl
jecxz
sbb
negl
mov
das
aad
fisttpl
xchg
lods
cmp
sahf
outsb
enter
or
jle
xchg
test
stos
out
xchg
sub
arpl
xchg
dec
fcoml
test
test
xor
dec
xor
lock
jl
cmp
jg
add
movsl
xchg
or
xchg
leave
push
jle
ljmp
insb
xchg
jmp
scas
xchg
xchg
xchg
stos
out
inc
lahf
push
test
into
push
scas
and
fcomps
stos
mov
orb
or
mov
dec
nop
ret
fcom
and
rcl
xchg
inc
ret
arpl
fcmovu
mov
cmpsb
dec
ret
test
xlat
loop
jne
jne,pn
dec
fadd
pop
push
push
xchg
xor
mov
out
ret
sahf
in
stos
in
push
sbbl
sbb
dec
lds
cmp
rclb
mov
push
dec
mov
mov
inc
xchg
int
fisttpll
daa
imul
push
push
dec
imull
notl
and
mov
cmp
pop
jne
pushf
jbe
cwtl
out
cli
sbb
push
lds
xchg
mov
mov
and
inc
lds
jno
test
or
mov
jmp
shlb
popf
stos
outsl
lret
test
dec
xor
pop
leave
sbb
out
clc
mov
mov
dec
out
cld
xlat
mov
mov
mov
adc
daa
sti
pushf
fcoms
popa
inc
push
mov
add
out
leave
test
rorl
mov
sbb
sub
jge
mov
pop
push
inc
dec
enter
cld
jno
lds
fisttps
jge
pushf
aad
repz
xor
pop
mov
add
cmp
and
test
and
xor
push
cmp
dec
xchg
sti
sbb
jo
xor
loopne
test
cmpsl
shll
inc
add
mov
mov
xchg
push
into
es
ret
xchg
mov
add
lret
sub
hlt
rcl
push
stos
push
jl
pop
push
push
add
dec
and
inc
pop
rcl
mov
sbb
mov
dec
out
fsub
out
sub
clc
xor
lods
jmp
jae
enter
pop
mov
inc
aad
inc
xchg
mov
ss
xchg
cmp
popa
pop
cmp
inc
je
or
mov
push
inc
push
jnp
loope
loope
cltd
sahf
pop
xor
cmp
sti
jg
movsb
mov
leave
adc
pop
mov
daa
xor
arpl
dec
add
add
pop
or
and
lods
dec
push
and
push
xchg
sbb
sbb
adc
rclb
jno
test
sbb
das
cmp
lods
dec
lret
out
shll
out
push
rorl
mov
mov
cltd
xor
dec
enter
pop
or
rorl
jp
cmpsl
mov
aas
dec
sbb
inc
test
xor
push
sahf
and
call
sbb
outsb
mov
int
push
ret
or
and
pop
adc
divl
lea
mov
xorl
dec
add
cmp
pop
test
push
xchg
ljmp
popa
enter
xchg
fs
pop
clc
cmp
popf
movsb
cmp
cmp
sbb
push
aam
orb
xor
push
mov
dec
imul
pusha
notl
dec
sbb
or
into
rclb
scas
nop
frstor
movl
mov
leave
adc
jle
adc
test
loop
pop
jle
dec
addr16
sbbb
pop
mov
stos
jns
or
xor
js
mov
cmpsl
imulb
or
jno
and
sbb
pushf
adc
lret
stc
aam
adc
ljmp
sarb
and
sub
push
jbe
fsubrl
inc
mov
aam
mov
push
pop
sarb
or
testl
or
subb
es
aas
sets
push
clc
cmpsl
push
inc
mov
imull
repz
sub
pop
and
xor
xor
jp
mov
cmp
cmp
je
jns
jg
xchg
divl
xor
mov
rcrb
mov
ljmp
or
test
insb
xchg
movl
xor
test
mov
fistpl
nop
stos
movsb
inc
into
dec
add
sahf
and
ds
jo
adc
dec
in
lret
loope
xchg
push
jl
mov
pop
sub
mov
orb
loope
xchg
pop
push
ret
cmc
jns
jl
jecxz
mov
stos
stc
jp
pop
outsb
jp
inc
iret
popf
cmp
xchg
push
lret
repz
test
add
cmpsl
andl
int3
and
mov
or
cmpsb
rcr
test
push
inc
test
pop
lea
inc
mov
xorb
pop
fimull
push
push
std
or
pop
lock
psubd
mov
inc
xor
pop
dec
inc
negb
mov
cmp
rolb
pop
pusha
xchg
add
test
lods
sub
xchg
mov
cmp
jmp
outsl
mov
and
imul
jge
jb
enter
xor
and
mov
mov
fs
pop
add
cld
add
out
sub
in
lret
cmp
aad
shl
add
or
notb
fisubs
jecxz
add
outsb
popa
rolb
mov
mov
push
mov
iret
stos
stc
or
lods
pop
sbb
sub
in
fs
pusha
cs
xor
fdivl
or
mov
adc
cmpsl
sub
xchg
leave
scas
mov
add
pusha
mov
xor
sub
pusha
pop
inc
push
jo
or
add
shlb
hlt
mov
jb
sub
std
cmp
pop
pop
rcr
imul
xchg
inc
out
divl
xchg
jne
cld
shll
mov
in
insl
fnstsw
push
cmp
cmp
shll
sarb
and
ret
cs
sub
in
sahf
sub
xor
xor
lea
xchg
outsl
inc
cmpsl
push
sbb
into
jl
shll
mov
je
stc
aaa
mov
movsb
xchg
or
loope
xor
xchg
out
cmp
inc
adc
lods
push
js
jb
popf
push
xlat
push
push
or
lods
push
shll
and
pop
jmp
sarl
mov
cmp
add
aam
sbb
pop
xchg
sbbb
addb
das
aas
fcmovnb
mov
loope
stc
mov
mov
jle
mov
test
movsb
adc
mov
dec
test
clc
mov
cmpsl
ss
dec
jo
sti
jb
out
ds
cwtl
lods
pushf
adc
int3
sbb
sarl
pop
sbb
lds
outsb
fnstcw
add
ffree
hlt
in
daa
imul
scas
fists
mov
int
std
sbb
rol
mov
xor
add
add
popf
sbb
add
adc
mov
adc
clc
testb
xor
ja
data16
leave
adcl
adc
gs
mull
xor
mov
mov
imul
dec
dec
or
sbb
xlat
pusha
rorl
mov
mov
xor
and
out
movlhps
pop
nop
mov
ret
jae
sahf
mov
ljmp
adc
inc
cwtl
mov
inc
cmpsb
jae
andb
ret
dec
pop
xor
jmp
dec
in
imull
sub
jp
jns
lds
cwtl
mov
pop
mov
push
test
jno
adc
aam
cmpsb
cmp
mov
dec
xchg
adc
mov
xchg
int
or
rolb
jmp
imul
xchg
mov
mov
mov
pop
test
push
xor
or
rorb
or
aas
movsl
sbb
pushf
jno
sub
jne
cld
fwait
in
rcll
lahf
rclb
lods
out
lds
lods
hlt
orb
cmp
std
pop
xor
sub
push
pop
dec
and
lods
stc
mov
jne
sarb
pushf
divb
cs
xor
mov
jp
lock
jle
mov
or
lret
fwait
jg
hlt
mov
mov
cs
xchg
es
push
dec
sub
ss
and
add
add
outsb
mov
icebp
xchg
adc
push
mov
in
je
icebp
decb
xorl
sub
mov
dec
push
adc
adc
sub
idiv
pop
lcall
xchg
jecxz
push
subl
ja
insb
enter
shll
cmpl
push
outsl
add
imul
fcomps
mov
mov
xor
loopne
es
hlt
or
mov
lods
mov
jno
xorl
iret
mov
gs
iret
or
ja
push
repz
push
nop
or
pop
or
mov
sub
rclb
loope
adc
es
ljmp
inc
xchg
ficompl
sahf
cmp
ss
popa
add
jmp
pop
mov
test
movsl
fadd
xchg
inc
jecxz
aad
mov
popa
push
add
and
outsb
mov
rcl
xor
int
in
push
mov
sbb
inc
hlt
lahf
pop
scas
cld
mov
mov
xchg
imul
adc
repz
movsl
jne
xor
xchg
int3
popf
adc
pop
jns
pop
mov
addr16
and
test
push
dec
rcr
sub
test
xchg
lods
push
mov
add
es
pop
ja
push
mov
xchg
jno
push
xlat
cs
mov
jmp
pop
addr16
imul
jecxz
addr16
add
or
leave
and
insl
test
xor
repnz
xchg
test
xor
adc
cmp
fimuls
data16
mov
mov
fldt
inc
sarl
popa
push
aaa
incl
loop
adc
cmpsb
fs
shll
lea
data16
js
ss
lret
jp
inc
pop
lret
xchg
push
sbb
cltd
sti
cmp
test
and
aas
cmp
or
and
scas
icebp
test
and
sub
jns
push
cmpsb
mov
fisttpll
gs
popf
repnz
pop
and
inc
movsb
fldenv
or
jge
cmp
push
orl
arpl
int
push
stc
movsb
pusha
lea
mov
add
test
in
test
mov
les
sub
cmp
stos
ja
or
jns
jb
out
push
mov
js
jne
push
pop
adc
ss
movsb
sahf
sbb
aas
movsb
cmp
mov
movsb
or
enter
mov
addr16
orl
icebp
in
pusha
cli
mov
insl
sbb
subb
icebp
fwait
sbb
lea
mov
xor
sub
mov
pop
lret
push
xor
cmc
sti
rcr
mov
ss
push
outsb
mov
push
mov
lahf
sbb
lea
stos
repnz
mov
jle
xchg
push
es
fldl
into
in
inc
pop
xchg
loop
fsubrl
add
add
ds
stos
or
pop
push
dec
lret
insb
fisubl
pop
pop
adc
rorb
sub
jmp
lods
pop
mov
daa
jnp
jb
xor
shll
inc
sub
xlat
in
arpl
jmp
insl
xchg
popa
jg
mov
pop
fcom
ret
data16
sub
mov
aas
scas
and
push
fsubrs
xor
les
ss
das
inc
mov
cld
mov
imul
lcall
icebp
hlt
lods
jbe
ret
stc
stos
popf
mov
imul
sar
fistps
dec
jae
ss
inc
or
dec
das
imul
ficompl
add
in
mov
lcall
and
xor
out
dec
fwait
mov
sub
pop
mov
mov
cltd
cmp
push
cmp
add
add
jo
add
sub
mov
push
lds
rcl
cmp
in
dec
mov
in
iret
popa
movsb
pop
push
pop
inc
sbb
dec
adc
imul
imul
add
repz
enter
cmp
sysret
ljmp
adc
sub
ficoms
jg
jbe
xor
xchg
add
mov
jo
cltd
or
shll
dec
sub
cmp
or
int3
call
loop
xor
adc
cmp
xchg
sub
or
sarb
lock
dec
pop
xlat
push
or
push
sub
jge
push
outsb
jl
and
jmp
cmp
sbb
repnz
cwtl
lds
sub
jns
pushf
inc
and
or
inc
fcoms
push
inc
stc
add
das
sarb
cwtl
sub
mov
outsb
addl
add
xor
dec
sbbl
jno
mov
xor
lds
push
and
cltd
jbe
adc
mov
mov
xchg
inc
adc
mov
ja
ficompl
mov
sub
cmp
fsts
xor
loope
lock
mov
dec
test
bound
sti
pop
cmp
jmp
cmc
or
inc
xor
adc
jo
sub
ret
mov
and
bound
inc
sub
arpl
js
int
dec
inc
inc
sub
mov
mov
cmp
decl
aam
repnz
sti
iret
scas
cld
fidivrl
pop
inc
loope
and
test
inc
out
shrb
push
lods
cs
es
adc
cltd
int3
fstps
fcom
push
mov
pop
and
nop
xlat
cmp
push
mov
enter
das
aas
ret
mov
xchg
push
sbb
sub
call
inc
icebp
sbb
sbb
notb
dec
jae
push
imul
bound
or
sbb
mov
dec
loopne
jae
jo
jecxz
push
cmpsl
lcall
pop
mov
stc
xor
int
test
sbb
adc
push
mov
sahf
pop
cmc
shll
popf
xorl
add
ret
add
out
pusha
xchg
pop
testl
movsl
icebp
mov
jo
pop
pop
mov
dec
inc
pop
add
in
jl
cmpsl
test
push
pop
iret
into
pop
mov
xor
lods
mov
repnz
jmp
int3
sbb
sbb
clc
movsb
lea
clc
inc
stc
lret
popf
mov
jecxz
cmp
push
rorb
add
jle
pop
adc
cmpsb
adcl
cmp
inc
sarb
std
sub
push
stos
xchg
imul
jnp
in
add
mov
in
test
mov
mov
lock
cmpl
adc
cmp
xor
push
mov
lret
es
jb
mov
shlb
xor
loopne
xor
ret
cmp
popf
dec
gs
lock
cmp
sbb
cltd
enter
xchg
sbb
cmp
pusha
cmpsl
out
fstpt
aaa
lods
call
dec
jns
and
loop
sub
rcrl
push
jno
lock
test
mov
testl
push
out
es
pusha
jl
repz
popf
inc
jg
cmp
movsb
xchg
rcrl
xchg
aaa
aad
inc
mov
xchg
cwtl
and
dec
pop
popf
lahf
andl
sub
jmp
fstl
repz
pushl
and
push
sarl
push
cmp
repz
in
adc
in
jo
aas
inc
xor
f2xm1
mov
xor
add
mov
out
das
jmp
sbb
jae
push
ljmp
sbb
pop
mov
lret
adc
scas
leave
loope
or
xchg
pop
sbb
jg
sbb
imul
fstpt
arpl
push
xor
popa
mov
loop
nop
cmp
les
add
testb
xchg
adc
push
cmp
int
sbb
mov
mov
test
sub
xchg
mov
sub
lret
add
mov
fildll
stos
iret
xchg
and
stos
dec
mov
mov
addb
rcr
lock
adc
adc
sti
fmull
push
js
cmp
fwait
mov
aaa
xchg
jbe
push
push
cmp
or
jb
nop
cs
mov
pop
xor
icebp
cmc
repnz
movsb
lods
ljmp
cmp
lahf
in
pop
push
insl
mov
cmp
ficoml
mov
iret
xchg
pop
xchg
out
aad
pop
xor
or
jp
std
push
add
add
add
cmp
loope
and
fcompl
jbe
pop
and
vunpckhps
es
sbb
inc
shrl
in
add
pop
jo
mov
sbb
jmp
iret
sarb
in
adc
xor
sar
loopne
xchg
outsb
stc
jp
stc
imul
inc
and
test
sub
push
mov
xor
pand
push
inc
lret
jns
xor
sub
test
mov
add
and
fs
das
and
cmp
mov
inc
jecxz
jl
jge
cmp
or
jae
xor
enter
cltd
movsb
pop
jp
popf
js
dec
xor
leave
mov
fcomps
imul
inc
push
lret
pop
pop
mov
adcl
movsl
lret
into
push
ss
repnz
push
push
mov
xor
mov
push
pop
fsubrs
pushf
std
inc
test
push
ret
in
and
push
or
in
fsubr
xchg
add
movsb
imul
pushf
icebp
leave
sub
rcll
out
stc
shll
call
xor
into
xchg
ljmp
push
sar
cmp
and
and
or
push
inc
xchg
jnp
mov
sahf
std
adc
insl
or
hlt
arpl
in
lret
sarl
stos
mov
cmp
jle
inc
movsb
pop
mov
mov
inc
call
divl
fisubrl
mov
movsb
push
inc
dec
fstp
ror
mov
add
xor
mov
mov
mov
sbb
mov
mov
jb
cmp
pop
cmp
mov
and
in
xor
test
jb
outsb
fs
movsb
jo
testl
cmp
mov
test
jecxz
mov
xchg
add
dec
inc
or
dec
popa
loope
std
bswap
cld
cmpsl
sub
mov
push
adc
mov
add
ror
adc
scas
insl
and
pop
adc
adc
pop
pop
cmp
lea
sub
aaa
les
dec
push
add
int
addr16
cmp
pusha
into
push
ljmp
xchg
mov
out
sub
jmp
in
adc
jno
and
jb
or
adc
pushf
mov
dec
push
call
das
cmc
test
popf
or
sub
movsl
jmp
push
or
inc
imul
loop
mov
pop
mov
js
pop
xchg
cmp
push
out
out
movsb
cmc
dec
sub
inc
jle
sub
jnp
jecxz
in
jo
inc
sahf
mov
roll
jnp
adc
cld
jnp
pop
mov
stos
cmp
jnp
shll
pop
imul
movlps
push
insl
mov
cltd
mov
out
sub
inc
add
jmp
aam
or
adc
add
xor
lret
ss
push
xor
or
push
fstp
jne
dec
int3
pop
mov
adc
ret
fimull
fisubs
popf
mov
xor
mov
adc
mov
in
push
mov
xchg
xor
xchg
subb
adc
fimull
jae
pop
push
fcompl
jg
lretw
out
nop
jno
inc
cmp
icebp
loopne
mov
outsl
sub
xlat
cmp
inc
icebp
push
push
stc
pop
push
notb
sbb
mov
rcrl
adc
or
and
cmp
push
xor
insb
test
dec
cmpsl
pop
mov
dec
mov
hlt
or
pop
xor
jae
cmp
xchg
mov
pop
dec
xchg
mov
pop
or
and
pop
inc
mov
jle
lock
in
and
sti
testb
push
push
fmull
xchg
mov
add
movsb
inc
adc
ja
push
fimull
sarl
pop
aad
mov
adc
push
add
mov
lds
lds
sub
in
mov
es
bound
xor
jbe
mov
js
push
mov
mov
and
fadds
add
in
or
imul
scas
js
outsb
int3
adc
sub
out
jb
mov
mov
iret
lock
add
push
xchg
inc
roll
mov
insl
jle
jle
mov
in
js
adc
dec
mov
pop
mov
js
and
and
hlt
and
cmp
fldl
ret
mov
ss
xchg
into
pop
nop
sbb
add
shll
jmp
adc
mov
outsl
movsb
push
psrlw
push
adc
pushl
aas
cmp
adc
cmc
in
sub
ja
outsl
mov
or
xchg
mov
jmp
and
les
jp
mov
push
mov
test
ljmp
dec
jb
jg
push
xlat
cmp
leave
pop
sbb
xchg
lcall
addr16
mov
addl
jge
mov
pop
pop
ljmp
xchg
rcrb
jae
push
ja
inc
mov
push
setp
and
pop
xor
pop
arpl
jmp
insl
fnstenv
stos
xchg
mov
push
ss
and
loopne
fldl
push
mov
jp
lods
or
loopne
fbstp
dec
xchg
in
xor
xor
and
loope
aam
or
or
out
and
filds
pop
sbb
dec
mov
popa
jge
xchg
subb
test
add
adc
push
mov
aas
mov
mov
xor
xchg
sbb
test
jnp
push
mov
into
cli
test
pop
cli
cmp
mov
adc
inc
jno
pop
fisttps
sub
jns
xor
and
sub
testl
push
inc
frstor
jl
push
fisttpll
andb
arpl
mov
int3
xlat
ljmp
cmp
sub
jl
negl
inc
cmp
inc
out
push
in
xlat
pop
xchg
adc
bound
jle
mov
icebp
pop
xor
das
push
and
inc
sub
mov
mov
jbe
repnz
sti
dec
xchg
dec
imul
int
xor
jmp
fscale
int3
jno
popf
stos
stc
lret
je
andl
ret
pop
outsb
inc
xor
repz
pop
repz
out
mov
fs
sub
scas
jg
cmpsb
and
das
add
mov
movsl
xor
xor
pop
in
movb
jo
movsb
aam
cli
pop
in
in
jbe
pushf
int3
xor
pop
in
dec
jge
ffree
lds
adc
daa
xor
dec
fwait
test
mov
inc
aad
je
ret
ss
mov
btc
rclb
cmp
inc
mov
scas
pusha
imul
out
out
frstor
cmp
out
rclb
mov
sahf
pop
inc
xor
stos
outsl
insl
ss
loop
xor
pop
push
shrl
cmp
iret
add
fstp
jmp
mov
xchg
mov
mov
inc
mov
loopne
or
rcrb
ljmp
add
or
fwait
xor
cltd
pop
adcl
inc
mov
lds
imul
shlb
pop
test
or
inc
xor
mov
ret
jp
les
mull
and
and
xchg
dec
fs
cltd
push
rcl
cmp
icebp
out
scas
add
in
pop
js
pop
mov
inc
cmpsb
mov
jge
jmp
lret
mov
inc
test
loopne
cmpsb
stos
and
jg
pop
cmp
das
cmp
stc
jne
mov
es
add
dec
inc
rcll
cltd
rorl
int
sbb
call
sub
out
shrl
loopne
pop
imul
cmp
cmp
push
sub
mov
xchg
jae
xor
or
xor
mov
pop
add
mov
sbb
lds
pushf
sbb
andl
idivl
ret
ret
test
call
aad
and
dec
dec
cld
xor
sbb
notl
aam
push
dec
jle
pop
loope
pop
pop
mov
ja
adc
sahf
iret
loope
mov
out
loop
scas
sahf
pop
pusha
sbb
sbb
lret
or
je
stos
xor
adc
lret
pop
scas
push
adc
adc
push
test
pop
add
sahf
movsl
out
out
ret
fidivs
jmp
or
and
test
mov
test
push
xchg
mulb
adc
in
push
mov
fistpll
mov
sbbb
enter
cmp
and
jo
iret
pop
mov
jb
jl
jl
sarb
push
jmp
in
lret
out
loope
jmpw
es
mov
inc
add
outsl
and
push
push
gs
ret
andl
call
mov
mov
addr16
pop
aad
roll
mov
and
mov
insl
sbb
shrl
ror
ret
loopne
sub
mov
adc
push
jge
dec
shr
jmp
and
in
sbb
sbb
push
pop
jb
das
xor
mov
repz
test
push
mov
testb
or
pop
sbb
sbb
push
movsb
subl
aad
nop
jmp
loope
cmp
jecxz
push
into
cmp
aam
aam
cli
sbb
movl
adc
push
jb
pop
or
in
mov
repz
paddsb
fisubl
sbb
jecxz
cmp
daa
sub
icebp
xchg
ljmp
and
shll
jnp
push
push
xor
stc
inc
mov
sbb
hlt
cmp
dec
xor
jg
mov
repnz
scas
push
sarl
and
mov
loop
pop
fsubs
push
jb
or
dec
add
rolb
xor
pusha
mov
inc
stos
jbe
xor
xchg
pusha
xchg
cltd
mov
psllw
mov
scas
fbstp
pop
das
pextrw
pop
lahf
insb
loope
xchg
cmpb
and
movlps
xchg
movsl
mov
cmp
hlt
fs
imul
mov
or
jecxz
out
and
pop
adc
daa
loope
std
pop
filds
adc
jno
cmp
jl
into
dec
fbld
lahf
stos
inc
icebp
shl
dec
dec
mov
dec
mov
adc
push
lahf
mov
pop
sbb
sbbl
mov
cmp
dec
and
and
ljmp
mov
dec
shlb
lahf
mov
mov
sarl
in
ret
or
mov
rcll
dec
or
out
or
mov
jo
and
test
add
xor
scas
mov
xchg
ja
pop
mov
sti
aam
pop
ja
jle
sub
ror
test
push
mov
pop
icebp
pop
mov
xor
aaa
out
adc
data16
fcoms
add
ljmp
jg
mov
add
rol
div
lcall
adc
addr16
add
jmp
mov
std
sbb
fistpl
sahf
adc
inc
lcall
popa
adc
inc
aam
clc
pop
xchg
pop
popa
das
adc
adc
mov
add
stc
pop
add
mov
sbb
in
inc
cmp
cmp
mov
sti
jl
addr16
mov
xlat
add
push
out
sbb
rorb
insl
outsl
nop
inc
ja
or
adc
imul
xchg
movsb
mov
add
stos
clc
sbb
aas
punpcklwd
cmp
icebp
std
cli
call
and
pop
push
jne
bound
cmp
and
or
loopne
in
push
cltd
push
or
mov
popf
mov
xchg
ficoml
outsb
call
mov
mov
pop
mov
out
shrl
ja
stos
mov
outsl
iret
dec
dec
daa
xchg
xchg
jl
mov
rcrb
mov
mov
mov
into
add
push
inc
movsl
or
xchg
push
xchg
jne
test
jge
in
mov
cli
je
mov
xchg
loopne
push
lret
lahf
ljmp
pop
inc
push
icebp
test
mov
push
mov
les
cwtl
fildll
js
mov
inc
loopne
pop
popf
in
jmp
dec
sbb
pop
jl
ret
movb
lds
jecxz
mov
jns
sbb
in
inc
xchg
jne
jp
pop
clc
jo
inc
into
adc
mov
lcall
arpl
sub
add
jbe
mov
dec
mov
pavgb
inc
cmpsl
xchg
dec
sub
lret
inc
push
sbb
test
mov
sti
lret
test
push
das
adc
mov
ss
mov
aad
xchg
cli
pushf
mov
push
fistpl
add
fsubs
das
push
movsb
add
xchg
cmp
jle
xor
cwtl
int3
insl
adc
mov
js
aaa
xchg
inc
icebp
mov
shlb
dec
cmp
jno
pop
xchg
lock
cmp
out
mov
lds
dec
adc
mov
mov
scas
cmp
popa
hlt
adc
dec
add
mov
xor
lods
test
adc
dec
mov
cmp
jg
sub
pushf
cltd
inc
jmp
cmc
jo
outsb
andl
in
clc
push
inc
jle
xlat
sarl
sbb
inc
xchg
xor
mov
test
cli
fwait
xchg
xor
fmul
cmp
sbb
das
cmp
add
out
xor
cmc
dec
pop
mov
jg
add
inc
and
arpl
xchg
stc
jns
shr
push
cmpsl
popa
nop
outsl
mov
lahf
push
adc
adc
sub
inc
lods
and
cmp
xor
hlt
rcrb
imul
mov
fdivs
jp
and
outsb
jecxz
push
cwtl
push
mov
andb
add
or
out
int
sbb
ret
add
sbb
ret
adc
pop
cmp
icebp
test
dec
mull
fdivl
sbb
scas
pop
fadds
or
fs
or
dec
cld
push
popa
jnp
filds
mov
add
mov
int
shrb
test
dec
dec
insb
mull
jp
lea
add
push
jo
jmp
sbb
push
scas
fld
out
sbb
pop
sub
inc
icebp
std
jne
inc
stc
mov
push
or
dec
outsl
int
adc
mov
lret
xor
mov
jle
cld
sub
xchg
int
mov
lock
dec
test
inc
sbb
xchg
push
or
sahf
sbb
mov
idivb
and
pop
sahf
push
shll
push
mov
call
pop
sbb
push
divb
pop
sub
push
push
jge
mov
bnd
mov
inc
pop
sbb
jecxz
mov
pop
jne
pusha
mov
pop
jno
rorb
xchg
sahf
paddusb
push
lods
ljmp
shl
dec
or
xor
jae
mov
lret
add
stos
add
ficoml
and
mov
jnp
lret
scas
mov
enter
mov
or
xor
dec
out
jnp
bound
sbb
xlat
jne
insl
or
cltd
sbb
push
scas
int
xchg
lock
mov
sbb
cmp
push
lds
lcall
test
jle
or
xor
push
fstpl
push
add
or
les
jbe
aaa
jecxz
movsb
xor
inc
add
movsb
in
sub
lahf
icebp
xchg
pop
xchg
xchg
lret
stc
sbb
or
sbb
jge
adc
out
mov
test
ss
mov
xlat
mov
mov
push
hlt
frstor
pop
rclb
test
movsl
add
mov
push
pusha
mov
out
sti
call
lods
jns
fmull
cltd
sub
lods
cmp
ret
hlt
bound
pop
mov
mov
in
pop
aaa
pop
ja
sti
cmp
rclb
push
or
incb
sarl
inc
popa
popa
inc
add
mov
repz
xchg
cs
ret
pop
cltd
std
cmp
mov
scas
mov
shlb
xchg
push
in
adc
in
das
out
push
arpl
mov
lds
push
and
inc
xchg
rcll
rolb
xlat
xchg
sahf
or
mov
inc
fiadds
and
inc
mov
inc
mov
jbe
js
dec
xor
xorb
push
mull
dec
scas
fnop
sbb
loopne
pop
dec
xchg
mov
shrb
mov
push
push
push
ss
jne
subl
repnz
mov
sbb
xor
mov
stos
out
sti
mov
das
inc
adc
ss
xor
je
fisttps
push
imul
dec
push
xchg
mov
je
add
jns
sbb
or
out
mov
sahf
pop
adc
out
hlt
hlt
pop
push
jg
ja
mov
cmp
push
sub
repz
cltd
push
sub
lds
mov
sbb
mov
insb
lahf
push
xor
sub
xchg
jl
sbb
popa
dec
mov
cwtl
repnz
xchg
push
pusha
pop
dec
aaa
xchg
fldl
sub
and
shll
and
je
inc
xchg
mov
and
cmpsl
adc
in
dec
push
jnp
xor
xor
mov
dec
dec
in
pusha
out
xchg
andl
adc
push
loope
mov
or
nop
add
daa
or
xchg
aad
xlat
mov
fwait
aas
push
and
pop
adc
cwtl
jl
out
xchg
incb
cltd
cmp
mov
push
jecxz
sub
std
and
pop
je
int
sbb
stc
arpl
fs
jmp
pop
inc
cmp
jne
add
push
push
xchg
jl
lcall
pop
rep
jns
inc
aas
mov
dec
jmp
sub
negb
pop
lock
push
sbb
loopne
fs
cmp
push
nop
pop
jge
inc
pop
dec
or
and
xchg
mov
aaa
lods
mov
adc
push
shrl
roll
popf
dec
mov
lods
cmp
test
idivl
dec
inc
or
or
das
and
repnz
lahf
push
sar
pop
mov
push
inc
sbb
adc
xor
repnz
movb
xchg
push
pop
jp
fsts
pop
ficomps
in
jns
sbb
rcl
cmp
fadd
adc
daa
jnp
std
movsl
sahf
jb
pop
into
inc
and
adc
sahf
cmp
lods
pop
enter
xchg
daa
jbe
subl
xchg
pop
or
cmp
test
mov
fwait
stos
mov
enter
out
outsl
ret
and
pop
cmp
lcall
insb
mov
jp
divl
add
lods
or
and
add
mov
lods
jle
pop
rolb
lock
or
sbb
je
outsb
add
fdivl
cmpsl
pop
ffree
or
jnp
lods
cmp
stc
mov
xor
ret
xor
push
iret
jne
stos
xor
lahf
mov
add
or
fsubp
mov
arpl
sub
adc
icebp
add
mov
sbb
mov
lcall
and
ret
scas
dec
cltd
jne
adc
fidivrl
test
scas
xchg
or
adc
jno
orb
dec
mov
and
loopne
mov
pop
sub
jecxz
or
aam
cmpsb
dec
mov
loop
sbb
dec
mov
mov
push
cltd
mov
or
xchg
push
sub
das
fnstenv
mov
mov
push
push
pop
pop
jp
dec
cmp
mov
or
fisubrl
mov
js
or
decl
cmpsl
in
iret
divb
aad
xchg
mov
push
iret
sub
sub
stos
or
hlt
iret
mov
dec
add
fildl
ljmp
test
sub
pop
sbb
inc
aaa
jge
xchg
or
sub
mov
test
jno
pop
mov
cmp
loop
mov
test
sub
aam
test
xchg
sub
sbb
pmaxub
push
pop
std
dec
mov
into
jge
push
xchg
mov
pop
insb
sub
push
pop
xor
fistpl
sub
xchg
pop
lahf
cwtl
in
aam
jmp
mov
mov
cmc
cmp
std
push
sub
xchg
push
outsl
pushf
enter
je
cltd
mov
cmp
mov
movsl
scas
fsubs
xchg
aam
add
mov
pop
xlat
push
ja
in
arpl
push
test
mov
pop
popa
pop
pop
mov
lds
jecxz
mov
push
stos
sub
je
sbb
cmp
jecxz
pushf
push
and
repz
pusha
repnz
pop
mov
cmp
mov
jp
scas
pushl
lods
kaddw
dec
and
adc
push
mov
inc
mov
mov
sti
and
insl
mov
stc
test
push
mov
test
adc
mov
mov
outsb
mov
mov
xchg
adc
sbb
loop
popf
xor
fidivrs
sub
test
mov
leave
inc
cmc
aas
inc
movsb
push
into
adc
add
arpl
mov
xor
dec
xchg
sbb
adc
dec
out
outsb
rcrl
shlb
adc
stos
daa
dec
loopne
idiv
jbe
repz
lret
arpl
testb
sub
push
cmpl
subl
xor
sbb
fcomps
xlat
and
ljmp
inc
xchg
mov
cmp
and
int
pusha
cmp
mov
aaa
xchg
fs
pop
es
jno
adc
scas
adc
inc
xor
jmp
iret
fwait
mov
sbb
add
sbb
dec
aad
cmp
mov
xor
out
aam
pop
cld
xchg
sbb
fstpl
push
rcrb
push
add
add
inc
cmp
fcompl
xor
loop
dec
icebp
inc
jo
cmp
scas
aas
jnp
fwait
cli
sti
shl
ret
pmaxsw
inc
push
jle
les
lea
int3
mov
mov
add
addr16
adc
adc
mov
pop
xchg
mov
mov
rcl
dec
or
inc
call
scas
xlat
jle
xor
pushf
test
jmp
jecxz
scas
test
jecxz
or
adc
inc
pop
aaa
adc
pop
jb
xchg
jne
and
sub
in
cmp
lds
xlat
pop
subb
pop
fdivl
lcall
xchg
mov
push
mov
mov
aaa
jge
adc
testl
mov
pop
cmp
pop
adc
push
jecxz
sbb
dec
dec
and
push
mov
mov
push
daa
cmpsb
adc
das
clc
call
pop
fnstcw
daa
pop
mov
icebp
sub
jno
test
xchg
and
test
xchg
mov
and
pop
jp
cld
mulb
scas
or
jne
pop
add
call
cmp
cmpsl
test
push
sub
mov
mov
bnd
into
pop
and
mov
std
mov
gs
int
cmpl
addr16
jle
call
jns
push
xor
mov
fucomip
aaa
popa
stos
rcrb
js
xchg
es
jno
cmp
aaa
xor
icebp
fucomip
ds
fs
or
jae
divb
shll
fmull
and
mov
fnstsw
icebp
adc
stc
rolb
cmp
adc
out
in
xor
jmp
cmpl
xchg
inc
in
dec
dec
lods
jle
scas
push
jge
or
sahf
xor
push
out
int
repnz
rcrl
es
popa
jo
aam
add
mov
xor
pushf
xor
add
cmp
out
and
push
adc
outsb
mov
mov
push
lahf
dec
mov
cmp
mov
xor
add
fnstcw
mulb
gs
xor
into
aam
dec
fmull
jo
out
loop
pushf
aaa
fwait
xchg
call
lret
sbb
pop
dec
sbb
movsb
ljmp
push
cmp
add
sbb
ljmp
out
mov
xor
jecxz
mov
adc
imul
jo
lods
mov
jge
arpl
insb
ljmp
and
add
mov
add
daa
push
test
xchg
cwtl
iret
inc
std
jl
push
sbb
shrb
in
cmp
mov
es
xor
inc
xlat
push
xchg
movsb
or
sti
pop
test
ljmp
mov
imul
fistpll
popf
push
push
mov
js
lret
xor
int
clc
or
push
cmp
int
xor
lods
lods
es
adc
repz
fists
mov
out
mov
sbb
inc
pop
xchg
inc
icebp
cmc
ret
xchg
arpl
imul
sbb
leave
pop
sti
mov
rorl
push
push
xor
jmp
pop
xchg
rcl
shl
stos
add
pop
cmp
std
insl
int3
addr16
fadds
add
lret
pop
lds
mov
dec
addr16
into
in
mov
push
lret
push
stos
ja
push
loop
cmp
jae
mov
mov
orb
add
xchg
lcall
pop
loope
int
ja
sub
pop
idivl
lret
outsl
nop
sub
xor
jns
inc
and
testl
decl
loop
mov
or
cmp
movsl
aas
ss
sbb
mov
jnp
push
adc
out
jle
lds
adc
mov
or
xchg
faddp
lret
push
sub
xchg
push
pop
mov
pop
jo
xchg
ret
out
push
fwait
icebp
mov
cmp
lea
xchg
rorl
mov
cmp
test
cmpsb
cmp
fstps
gs
push
or
dec
into
das
out
jg
loop
icebp
pusha
aas
ja
cld
cs
hlt
test
xchg
outsb
repz
into
jmp
fidivrl
call
push
xchg
add
push
test
mov
popf
pop
mov
xchg
xchg
xor
pop
fdivrl
pop
inc
cmp
mov
jge
pop
repz
jge
xchg
out
inc
imul
jnp
scas
sbb
push
je
mov
adc
fwait
or
xchg
jbe
imul
cmp
icebp
test
mov
jmp
adcl
divb
fcmovnbe
insb
inc
mov
push
adc
pop
cmp
fidivl
out
arpl
clc
inc
mov
or
out
sti
subb
jbe
sbbb
outsb
addr16
push
mov
in
inc
xor
pop
pop
jnp
fstpt
sbbb
xor
pop
rolb
std
aas
ss
idiv
push
call
outsl
pusha
ffree
xor
jmp
sbb
fsubrp
mov
or
loopne
cmp
add
arpl
mov
push
cwtl
lret
mov
daa
sub
cmpsb
cltd
clc
sbb
lahf
mov
and
out
sub
sti
in
sbb
fidivrl
push
mov
pop
push
and
mov
stos
inc
cmpsb
notl
test
and
out
fcoms
or
test
in
and
loope
icebp
or
mov
cmp
movsl
jp
cs
mov
std
loop
mov
stos
movsb
iret
fisubrs
inc
sbb
push
outsl
jle
mov
cmp
or
cmp
outsw
insl
jecxz
into
or
test
xchg
jns
dec
cli
fdivp
clts
jecxz
xchg
or
jo
xchg
jmp
inc
test
divl
mov
add
stos
aas
xor
xor
sub
cltd
popa
loopne
aam
push
sbb
jl
stos
xor
movsb
adc
fs
mov
mov
cmp
jne
cmp
es
js
dec
inc
cmp
push
push
jp,pt
orb
jo
inc
mov
xchg
daa
sbb
je
mov
mov
into
and
push
add
mov
mov
xchg
repz
movsl
push
mov
push
pop
push
and
enter
je
lret
xchg
insb
aas
dec
lcallw
xchg
gs
push
cmp
cmp
cmc
cltd
out
rcll
dec
call
xchg
sbb
sbb
xchg
fs
enter
push
push
ror
scas
mov
fnstenv
sub
jecxz
cmp
mov
push
fisubrl
clc
sti
xchg
lods
add
ret
lds
push
scas
add
mov
popf
ja
pusha
mov
cmp
insb
mov
cmp
adc
mov
ljmp
shll
call
aad
mov
mov
pop
pop
cmp
and
mov
xor
xor
mov
shll
lcall
testl
jbe
fbstp
sbb
daa
lcall
sbb
icebp
mov
js
movl
loop
inc
push
cmp
dec
es
sbb
inc
jl
sbb
mov
dec
shrb
and
in
and
test
mov
cli
leave
stos
addr16
test
mov
push
push
jae
and
mov
mov
pusha
inc
dec
jecxz
jno
mov
mov
lahf
cmpl
sub
dec
ja
xchg
cmp
stos
in
movsb
clc
les
fistpll
iret
dec
pusha
repz
sbb
inc
jnp
push
popf
sahf
jno
pop
enter
js
lock
push
push
rorl
xor
jg
mov
ret
cmp
scas
dec
cmp
into
xchg
stos
negb
mov
cmc
push
mov
xor
cld
sbb
mov
add
sbb
test
or
aam
dec
xchg
mov
jno
hlt
pop
jg
push
in
ja
push
ret
sub
repz
call
fwait
xor
dec
inc
lahf
cmpsl
sbb
mov
shl
mov
mov
adc
inc
mov
mov
gs
xor
orb
and
inc
pop
push
frstor
push
push
testb
test
shl
andl
or
clc
jmp
push
add
mov
pushf
xchg
popf
cmpsb
mov
xor
orl
rorl
cmp
xor
shl
or
rorb
daa
jle
stc
insb
fptan
insb
fsts
leave
jge
pop
jl
mov
jnp
cmp
jle
mov
in
adc
test
dec
push
mov
dec
mov
lock
aas
mov
fsts
jne
jae
cmp
inc
sbb
push
cli
mov
mov
mov
sti
icebp
xchg
ja
xchg
repnz
lock
aaa
and
outsb
and
sub
mov
mov
push
div
add
lds
sahf
cmp
jge
sti
cmp
mov
fwait
push
xchg
push
xchg
clc
xchg
mov
mul
cmpl
sub
sub
cltd
and
or
pop
sub
cmc
stos
ja
mov
xchg
test
or
js
rol
or
mov
leave
jo
cltd
insl
and
adc
addr16
adc
adc
inc
mov
inc
pop
movl
in
jecxz
and
mov
lret
in
push
cmp
mov
cmpl
leave
scas
cmp
inc
ljmp
or
pop
ud1
ja
dec
jnp
xchg
popf
insb
push
adc
sti
dec
jns
xchg
shll
adc
push
sub
in
jbe
sbb
aas
aad
sbb
sahf
xor
inc
bndstx
dec
cmp
test
out
cmc
jno
add
fisubs
aam
adcb
ja
sbb
push
and
gs
add
mov
outsl
lods
int3
and
popa
sub
xor
pop
push
in
dec
xor
repz
adc
and
mov
push
stc
pop
dec
or
lods
stc
dec
hlt
cmpsb
mov
jns
sbb
jns
xor
push
gs
test
xchg
in
clc
aam
mov
mov
xchg
fidivrl
sahf
popa
pop
jle
push
std
cmp
add
aad
ret
es
test
addl
pop
adc
outsl
mov
cli
adc
inc
add
das
mov
push
and
jbe,pn
mov
and
add
insl
movsb
mov
das
add
push
mov
adc
orb
test
push
pop
inc
in
push
adc
or
popf
call
and
xor
mov
push
mov
pop
shrl
aad
fiadds
sbb
add
cmp
push
repz
cltd
mov
call
aam
adc
test
loope
xchg
or
jbe
mov
scas
adc
add
loopne
mov
jmp
bnd
inc
dec
inc
fimuls
push
loop
mov
pop
lret
mov
xchg
push
pop
rcr
fwait
mov
movsl
and
adc
mov
xchg
jg
xor
andl
insl
push
insb
jne
push
cmp
push
cli
gs
mov
sahf
inc
arpl
shr
push
out
negl
cmpsl
mov
sar
call
pusha
mov
add
cmp
mov
ds
lahf
mov
push
sbb
mov
cmc
push
pop
call
inc
mov
pushf
xchg
mov
adc
iret
lods
mov
mov
inc
mov
cmp
loopne
mov
cmp
push
xor
out
rcrl
repnz
push
pushf
push
fisttpll
dec
xchg
ret
test
fcoml
mov
nop
sbb
pushf
mul
pop
adc
aas
mov
push
cmpsb
mov
and
push
iret
fiadds
nop
loop
sub
adc
jno
and
and
push
pop
ds
push
lock
pop
add
dec
xor
mov
notb
std
add
adc
mov
jo
xchg
rolb
sbb
ss
nop
loopne
mov
lods
pop
xor
fidivrs
adc
ds
test
sarl
lea
addb
loope
popa
add
mov
leave
and
push
mov
adc
and
decl
sub
mov
loop
imul
sbb
addr16
sbb
pusha
and
pop
pop
inc
adc
inc
sbb
cmpsl
pop
add
mov
imul
lods
ret
or
ljmp
jl
mov
sub
cld
xchg
xor
arpl
add
dec
pusha
roll
cltd
sbb
and
nop
jle
aad
fistps
push
mov
repnz
cmpsl
popf
add
sub
scas
mov
cwtl
and
clc
jbe
je
test
xor
xchg
outsb
inc
stos
inc
outsb
jp
rcl
xchg
aas
sub
cmpsb
push
sub
stc
xchg
push
dec
and
xchg
xor
cltd
xor
and
mov
mov
and
enter
in
aas
call
movd
lods
push
adc
mov
or
lahf
inc
mov
loopne
fdivr
outsl
pop
aam
mov
mov
hlt
mov
cli
or
pop
mov
ljmp
subb
add
xor
push
jl
je
idivb
pop
addr16
or
xchg
mov
sub
scas
jmp
jno
stos
aas
mov
adc
sbb
outsb
push
std
mov
stos
sahf
dec
call
xor
stos
lret
xchg
pusha
xor
and
mov
fs
dec
add
inc
int
sbb
clc
push
and
xchg
ret
arpl
push
xor
repz
mov
xchg
adc
roll
mov
jno
mov
adc
pop
cmp
cmp
xchg
xor
test
outsb
icebp
xor
inc
jne
mov
movsl
dec
mov
in
aad
std
repnz
adcl
mov
ret
xchg
add
pusha
scas
out
les
add
inc
sbb
popf
outsb
or
lahf
xchg
stos
jnp
xchg
in
add
mov
loopne
aad
fsts
sub
stc
or
stos
test
add
out
daa
xor
mov
lcall
int3
inc
ljmp
pop
push
aam
popa
popf
mov
stc
sbb
push
adc
pop
sbb
leave
test
insl
push
mov
mov
lock
outsl
fwait
inc
call
mov
mov
xor
pop
loope
test
das
push
mov
mov
jno
inc
or
push
cmp
and
test
xchg
cmp
xchg
dec
add
imul
xchg
in
xchg
gs
mov
shl
jmp
xchg
int3
and
dec
add
add
sub
mov
pop
in
pop
popa
push
sbb
dec
sbb
cld
jl
lods
into
adc
xchg
push
imul
pop
pop
or
fisubrs
int3
int3
enter
stc
movsl
cmp
push
adc
inc
sub
inc
icebp
mov
and
lods
adc
pop
add
je
popa
push
test
jns
adc
xor
push
fs
or
mov
mov
cmp
pop
mov
aas
pop
jecxz
adc
out
mov
jae
adc
mov
movsb
out
xchg
daa
pop
test
loop
cwtl
stos
push
lea
push
mov
mov
bound
arpl
xor
pop
jmp
iret
dec
xchg
rclb
call
iret
movsl
adcl
jle
shrl
out
add
test
es
adc
cmpl
test
iret
int
lret
dec
fldcw
les
andl
or
aas
push
sbb
stos
lea
leave
mov
add
sbb
mov
in
jg
mov
sub
nop
lds
xor
mov
pushf
fmull
clc
nop
pop
iret
out
ret
lret
xor
and
push
notb
imul
jge
sbb
adc
dec
imul
xlat
mov
and
push
cmp
mov
in
mov
rcrl
fidivl
dec
loop
iret
les
ret
je
addr16
and
and
hlt
mov
test
or
add
aam
je
sbb
jp
mov
mov
pop
divl
into
das
jg
in
jae
insl
test
lods
sti
cmp
jne
movsb
arpl
add
das
ret
inc
xchg
movsl
out
xor
mov
insl
adc
xchg
jl,pn
jne
jb
movsb
fldt
in
mov
stc
fwait
enter
loop
mov
in
mov
and
xchg
or
inc
jmp
dec
and
rorb
push
out
jp
dec
js
mov
mov
outsb
in
rclb
xchg
adc
loope
mov
inc
subb
aad
sbb
out
xor
xor
lret
test
adc
pop
push
pop
fstpl
fmulp
push
out
ljmp
out
clc
dec
ja
out
cmp
inc
lods
stos
outsb
cmc
mov
pop
push
inc
shrb
mov
shrb
lock
or
rcr
jae
jmp
sbb
jp
movsl
sbb
add
stos
jno
into
sar
imul
lahf
inc
addr16
shl
mov
testb
and
stc
idivb
or
jno
mov
cmpsb
and
jo
push
insb
test
ret
push
and
dec
into
icebp
push
jbe
mov
cmp
mov
jge
mov
jbe
mov
jno
xchg
arpl
jl
sahf
sbb
test
test
mov
sbb
rorb
lea
test
mov
sbb
inc
jb
push
jmp
dec
aam
testl
shll
lods
pop
and
cmp
shl
pusha
shrl
sbb
push
jae
lcall
add
imul
push
idiv
out
mov
pop
ja
pop
aad
cli
add
xchg
xchg
mov
call
jae
in
jg
xchg
stos
add
stc
flds
enter
lahf
xchg
push
inc
mov
dec
mov
or
push
fiadds
mov
imul
dec
test
mov
je
in
xor
loope
push
sub
aaa
fisubl
push
popa
iret
push
mov
cmp
daa
add
jmp
pop
add
fnstcw
inc
daa
adc
adc
push
sahf
scas
aad
orb
inc
mov
sub
push
out
bound
or
andl
and
andl
pop
and
int3
out
stos
inc
mov
jnp
addb
and
sbb
adc
jns
jnp
fstl
push
push
lcall
pusha
arpl
ja
das
or
lods
loopne
out
cli
cmpsl
jecxz
rorb
push
adc
js
jnp
xchg
out
adc
dec
cld
lret
or
lret
adcb
test
fimuls
pop
repnz
std
pop
repnz
loope
fildl
jns
stos
scas
sub
xor
xchg
out
or
mov
std
inc
xor
push
sbb
shlb
les
or
jg
das
int3
push
clc
stc
push
xor
mov
add
arpl
loope
push
in
int
les
add
test
adc
ret
push
filds
cmp
ja
mov
push
int
xchg
jmp
pushf
push
ja
push
add
add
push
pop
jmp
pop
push
inc
cmpsl
fidivrl
and
cmp
mov
fildl
add
sahf
mov
xchg
cmpsb
call
outsl
sbb
fcmovnb
test
xchg
xchg
xchg
xor
into
insl
cmp
adc
adc
push
add
lret
addr16
idivl
out
xor
mov
ret
add
ds
test
dec
fnstcw
xchg
and
sahf
stos
mov
xor
sub
lahf
pop
mov
sub
sar
cmp
les
and
cmpsl
arpl
inc
xchg
lods
fucomip
std
sbb
fisubrl
xchg
push
push
xchg
stos
pop
lret
imul
cmp
push
in
dec
scas
movsl
push
pop
je
fists
add
test
rorl
cmp
scas
into
mov
scas
test
fwait
mov
mov
ja
pop
xchg
sub
sub
mov
jo
mov
jne
movsl
addr16
dec
lea
xor
rclb
jg
imul
jbe
jle
rorl
pushf
sub
outsb
mov
and
or
popl
xchg
outsb
cld
jb
adc
mov
int
int
call
dec
push
ret
xchg
add
test
mov
and
lock
mov
cmp
or
fisubrs
jbe
xchg
movsb
rol
dec
pop
cmp
and
iret
aam
ss
dec
jg
push
test
xor
xor
mov
hlt
cmp
ljmp
mov
jle
leave
add
stc
cmpsb
in
rcr
mov
iret
sub
mov
nop
stos
dec
aas
cmp
push
aam
jl
fistps
fidivrl
sbb
pop
inc
iret
pop
ds
fidivrl
insb
gs
sbb
and
adc
test
cs
stos
fsubrs
pop
inc
mov
aad
jb
enter
sbb
pusha
mov
mov
int
mov
mov
cmp
mov
data16
mov
imul
mov
sub
push
xchg
jge
movsl
push
cmc
mov
push
xchg
movsb
in
inc
dec
jmp
or
xchg
pop
jno
push
pop
ret
in
shll
ss
call
push
or
out
cwtl
outsb
bound
mov
or
dec
jnp
push
stc
jno
adc
ror
xchg
jle
xlat
inc
gs
lea
add
pop
and
lahf
and
pusha
imul
mov
push
jmp
jo
mov
xchg
dec
inc
cmc
push
and
jle
fisttps
jl
in
mov
inc
jp
js
xchg
mov
pop
clc
jno
pop
cmp
repz
cltd
sub
push
mov
popf
cmp
mov
into
repz
mov
test
mov
fcoml
cltd
pop
jmp
pop
sbb
jge
adc
stc
push
pusha
mov
outsb
test
xor
dec
jb
pop
push
push
icebp
std
hlt
decb
push
cwtl
fs
pop
loope
shlb
jg
inc
push
cmc
push
mov
jp
jp
push
xor
aas
out
aas
push
aaa
movsb
stos
aaa
ja
clc
lock
mov
mov
scas
mov
push
lcall
out
repnz
mov
or
or
add
aaa
mov
mov
sti
shl
adcl
popf
sub
outsl
int3
inc
cmp
call
add
inc
xchg
jp
int
xor
inc
ja
mov
dec
add
sub
je
cltd
mov
jo
je
jo
push
dec
pop
fildl
sbbl
jb
pop
add
inc
and
addr16
fld
sarb
sbb
mov
es
pop
arpl
mov
enter
push
mov
mov
jo
sbb
aaa
stos
fmull
add
jnp
mov
jg
sub
js
and
and
pushf
mov
aas
aad
ficomps
cmp
test
stos
push
gs
test
jg
push
pop
fsqrt
sub
jo
stos
push
jno
jmp
xchg
push
dec
ss
pop
push
and
xor
xchg
idivb
jb
rcrb
jo
unpckhps
fbstp
fwait
mov
and
insl
mov
cmp
jl
cmp
lret
push
add
imul
mov
cmc
into
repnz
mov
sbb
sub
push
fisttps
leave
and
cmp
mov
es
mov
mov
lds
icebp
xchg
inc
mov
add
pop
out
rolb
mov
inc
hlt
popa
insl
jmp
imul
mov
mov
mov
aad
or
mov
lahf
fildl
jne
pop
das
xlat
push
lods
dec
mov
lods
shl
sub
push
push
je
pushf
inc
adc
sub
cmp
mov
pop
sahf
jl
xor
pop
cmp
in
xor
lahf
lret
add
push
cli
xlat
jmp
adc
lods
rorl
ret
lea
add
repz
out
mov
jnp
in
push
jns
push
test
fildll
mov
jbe
testl
xchg
xchg
aam
mov
repz
sbb
scas
out
testb
sub
movsl
fcoms
mov
push
in
je
loop
jle
imul
add
fmuls
adc
in
pop
xor
bound
cltd
xor
insl
pushf
push
sbb
jne
cmp
push
inc
push
pop
stos
insb
jmp
sbb
inc
inc
adc
lods
xchg
pushf
cmpsb
xchg
lea
mov
sub
add
add
call
mov
xchg
push
mov
pop
orl
aam
inc
push
xor
push
cmp
rcrl
out
rolb
mov
inc
or
sarb
mov
dec
fisttpl
and
adc
cmp
pop
in
fcompl
fildll
xchg
pop
aad
sbb
insl
iret
lods
daa
aas
xchg
pop
rclb
dec
into
int3
pop
or
stos
pop
xchg
bound
rorb
dec
repnz
popf
shll
lea
mov
lods
push
lods
outsb
cmpsb
and
insl
xchg
lods
outsb
ror
pop
cmp
fs
pop
jmp
and
scas
std
in
lret
and
dec
popf
cmp
addr16
push
pop
or
mov
aaa
jle
clc
hlt
adc
pop
repnz
mov
popa
shll
and
std
lds
inc
xlat
lods
push
shll
daa
xchg
pop
arpl
mov
cmpsl
ret
jo
lods
sub
insb
push
ja
push
xor
mov
push
fs
push
sbb
sub
fdivrl
ret
lock
sub
inc
push
push
cmc
push
je
xor
mov
je
cmp
rcl
mov
loope
stc
pop
jmp
jmp
adc
xchg
cltd
outsb
dec
cmpsb
inc
add
insl
sbb
cs
mov
mov
loop
aas
adc
insb
cmp
aaa
push
movsb
dec
xchg
sub
inc
xor
sub
popa
push
or
mov
xorl
and
sbb
jnp
mov
cld
stos
lahf
scas
lcall
add
test
jno
stos
or
xchg
mov
jle
shl
arpl
push
prefetchnta
pop
pop
insb
cmp
inc
dec
ss
int3
adc
loope
mov
push
xlat
int
lds
mov
ret
inc
mov
mov
mov
test
data16
repz
bound
std
movsb
hlt
push
imul
sub
xchg
mov
fcmovnu
mov
pop
enter
mov
inc
sub
in
outsb
xor
push
daa
xchg
insl
and
sub
mov
mov
adc
jae
fwait
std
and
fsubrl
or
mov
ret
repnz
fistpll
cmpsl
movsb
in
dec
inc
js
mov
mov
lret
mov
popa
das
sbb
aas
cld
cmp
add
jns
xchg
add
jo
jae
jle
push
xor
jmp
lret
and
xlat
not
or
loop
cmp
mov
cmp
aad
jns
mov
add
dec
ljmp
lret
test
xor
push
mov
or
insb
add
les
lock
and
pop
nop
push
and
punpckhdq
push
stc
mov
push
mov
mov
scas
pop
pusha
and
adc
jg
pusha
mov
jne
adc
mov
add
xor
enter
mov
xchg
mov
mov
ret
pop
inc
and
faddl
dec
cld
sbb
mov
adc
mov
imul
mov
cmp
inc
pop
jo
hlt
jo
sub
movsl
inc
cmc
push
aad
arpl
fmuls
push
push
dec
mov
pop
ret
dec
out
fs
imul
cmp
ret
inc
xchg
dec
enter
fs
or
insl
and
sahf
pop
and
data16
mov
jne
fimuls
fucomip
shrl
dec
or
aad
ret
clc
fildl
js
in
jmp
dec
std
pop
mov
mov
pop
push
in
lds
pop
cli
mov
cmp
jmp
xlat
mov
add
mov
dec
mov
arpl
adc
pop
shrl
fnstcw
popa
insl
cmc
or
je
or
jns
repz
mov
aad
or
adc
int
ret
jmp
repz
mov
shll
fdivrl
inc
push
pop
mulb
cmp
inc
les
fcmove
cmp
subb
add
das
mov
dec
incb
sub
lahf
out
mov
adc
xor
inc
jb
fnstsw
outsl
mov
and
mov
sub
dec
xor
add
inc
cmpsl
outsb
xchg
arpl
xchg
jge
fs
push
cmp
jmp
lcall
adc
adc
or
aam
fnstcw
int3
aaa
and
sbb
push
pop
fstl
inc
sub
int3
xor
or
xchg
mov
cmp
push
mov
mov
into
nop
sbb
lahf
cs
jge
leave
xor
fisttpll
pop
bndstx
xchg
mov
jne
sarl
gs
fs
jmp
dec
daa
or
int3
cmp
and
scas
push
mov
clc
loop
stos
push
pop
adc
xchg
add
cli
mov
adc
ja
add
cmpsl
icebp
xor
cwtl
mov
stc
js
push
mov
or
orb
cld
popa
out
add
add
xor
jae
sbb
adc
int
ljmp
and
divl
stos
or
cwtl
mov
sub
or
shrl
lcall
cmp
sti
jne
sti
mov
cmc
sbb
ss
dec
les
nop
loopne
jge
jnp
cltd
imul
scas
jbe
mov
adc
andps
aaa
addr16
add
cmpsl
sbb
bound
movsb
cmp
and
fnstcw
inc
lcall
mov
push
lds
and
lahf
add
enter
add
inc
ret
jb
add
js
add
je
lods
mov
inc
insb
ret
call
popf
push
jecxz
cmpsb
cld
pop
mov
es
aam
jnp
lock
push
cwtl
xor
xchg
jb
ljmp
mull
fwait
jg
mov
pop
ds
lret
lods
mov
dec
add
mov
les
mov
dec
cmp
loope
stos
in
adc
sub
and
mov
bound
jnp
jle
in
sbb
sti
mov
pop
sbb
mov
pop
mov
lea
mov
xchg
jp
cli
cmpxchg
mov
xchg
rcll
mov
aaa
lea
and
mov
cltd
stos
jecxz
pushf
out
and
aaa
ljmp
fcoml
inc
nop
int
xchg
push
mov
adc
push
adc
jle
fwait
stos
or
clc
push
cmc
jb
cmp
aam
mov
fmuls
ljmp
stos
sub
fistpl
push
sbb
dec
ljmp
or
mov
lea
les
cmpsb
int
mov
xor
lock
iret
inc
pop
aam
sub
sbb
xor
mov
nop
xor
sub
mov
mov
data16
jmp
arpl
xor
mov
inc
test
fsubrl
xchg
mov
xchg
cwtl
jp
fsubrs
push
jns
dec
xor
sub
pop
cmp
xchg
lea
mov
mov
fnstcw
fisttpl
inc
adc
push
xchg
xchg
inc
mov
out
out
cwtl
mov
mov
xchg
xor
sti
inc
sub
test
insb
fs
int3
or
bound
mov
mov
fnstenv
pop
inc
dec
leave
adc
pop
lock
testb
xlat
enter
mov
dec
and
mov
sbb
out
pop
xchg
dec
test
mov
addb
push
jl
ja
cmp
sti
test
or
ljmp
pop
jge
imul
subl
les
xchg
js
loopne
int
fiaddl
cmpsl
shll
fisttpl
push
bound
or
mov
jno
ljmp
ja
mov
insb
sbb
push
seta
int
and
stos
lret
inc
mov
mov
inc
pop
jnp
or
mov
repz
int3
test
cmc
add
addl
xchg
shlb
add
push
sti
lahf
fcmovnb
xchg
aad
pushf
or
cmp
xor
std
test
xchg
les
xchg
pop
push
xor
push
addr16
mov
mov
lock
mov
push
push
in
fmuls
dec
jae
mov
lea
test
gs
fildl
fstpt
mov
movsl
in
ret
cmp
nop/reserved
sbb
jmp
jp
rorb
imul
inc
fmull
sub
lock
cmpsl
in
jle
xchg
sbb
dec
lods
jns
jp
inc
and
fcmovne
inc
mov
in
fdivr
movsl
mov
and
aaa
mov
popa
sub
in
jbe
lds
int3
loope
call
lock
stos
cmc
inc
sarl
xor
std
push
pop
in
aas
mov
cmp
cltd
sahf
jb
add
or
testl
ror
ljmp
mov
or
popf
mov
fstl
stos
inc
mov
jmp
cmp
call
arpl
fadds
loopne
lcall
test
pop
mov
mov
mov
repz
mov
sub
xchg
pop
sahf
rcrl
pop
lods
pop
je
adc
dec
pop
inc
pop
push
neg
xchg
out
inc
push
push
or
nop
in
add
pop
ljmp
inc
out
jg
jbe
jg
xor
pop
in
fstpl
jns
add
arpl
jle
stos
mov
aad
pop
pop
les
subl
loopne
or
pop
dec
mov
test
pop
and
loope
xchg
xor
loope
fdivr
test
adc
mov
hlt
lds
addl
sbb
scas
mov
pushf
pop
jno
push
or
xchg
inc
lret
leave
dec
subl
fdivrl
xor
adc
out
pop
xlat
xor
stos
dec
insl
ljmp
rolb
push
mov
icebp
push
mov
ret
adc
xchg
aad
mov
dec
cmp
rolb
push
lahf
and
shll
loopne
push
outsl
adc
xchg
mov
xor
fcompl
pushf
dec
cwtl
mov
flds
push
push
incb
cmp
in
inc
pop
ret
into
jge
lcall
add
fs
movsb
aad
movsb
inc
mov
lcall
into
in
mov
mov
or
inc
in
sub
push
popf
ja
fadd
mov
aam
and
je
jbe
add
stos
mov
insb
mov
adc
inc
mov
dec
orl
sbb
cmp
pop
rcll
adc
jge
push
repz
mov
mov
add
jae
call
lods
inc
sub
adc
repz
repnz
sub
pusha
jmp
inc
pop
xchg
pop
and
imul
fs
inc
dec
add
adc
sub
aaa
fwait
loope
jb
insb
popa
push
adc
mov
idivl
push
push
je
fmul
jmp
gs
insb
stc
and
sbb
xchg
adcb
pop
mov
mov
inc
adc
pop
jmp
lods
xchg
cmpsl
and
add
cmp
mov
cld
das
inc
xchg
shl
das
jnp
jns
jmp
notl
shl
push
mov
int
mov
test
test
sbb
pop
aas
add
mov
push
xchg
adc
inc
out
fnsave
sub
je
ss
jb
push
out
mov
xlat
icebp
dec
or
mov
add
test
sarb
pusha
outsl
mov
mov
jl,pt
out
or
insl
in
not
adc
test
sahf
and
test
add
xlat
into
lcall
addb
hlt
fldcw
in
push
xor
xchg
std
dec
lret
xor
pop
fcomps
sbb
inc
xchg
ret
sbb
pop
cld
and
or
sub
sub
adc
mov
ljmp
out
adc
and
call
inc
rolb
mov
jmp
dec
add
neg
add
adc
fwait
or
or
adc
cli
sbb
mov
mov
jg
fdivs
es
int3
out
sub
adc
clc
out
shl
jp
jbe,pt
sub
xchg
jnp
push
fnsave
dec
pop
rcr
cmpsl
mov
pop
pop
mov
jns
mov
mov
add
inc
mov
mov
or
xor
jmp
sub
arpl
or
mov
aam
gs
shrd
xchg
mov
test
mov
adcl
mov
cmp
push
out
sub
pop
jno
pop
call
xor
dec
stc
mov
dec
add
sbb
dec
jmp
lcall
addr16
cmp
mov
mov
in
mov
inc
shlb
fstpt
subl
add
pop
mov
cmc
arpl
pop
xor
inc
fs
xor
cmpsl
int
stos
push
jmp
sub
sbb
aam
movsb
insl
sub
cmpsl
ret
outsb
pop
xchg
data16
push
add
outsl
inc
cmpsb
jl
inc
jmp
inc
daa
sbb
dec
add
int
cmp
xchg
mov
mov
popf
clc
shlb
pusha
mov
fcomps
ror
adcl
cltd
xor
sub
or
dec
adc
cld
pop
jne
mov
jle
jne
sbb
adc
xchg
rol
push
inc
movsl
rol
inc
dec
mov
lret
ret
mov
jbe
lret
ja
xor
into
cltd
addb
out
xchg
jecxz
mov
lods
push
imul
cs
xchg
int3
or
sbb
push
sar
push
dec
pushf
push
scas
lods
xchg
mov
jnp
push
xchg
mov
clc
aad
int3
insl
dec
sub
push
cltd
jmp
mov
mov
testl
mov
aaa
fistpll
inc
lret
lret
xorl
repnz
aaa
dec
out
push
test
xchg
aaa
and
ss
fs
std
pop
out
push
push
inc
scas
sti
fsubp
clc
and
scas
arpl
xor
mov
loopne
scas
cmp
mov
out
insb
mov
dec
lret
sbb
jp
mov
mov
les
dec
xchg
ds
mov
jmp
lahf
movsb
adc
shl
and
xchg
lds
cmp
cmpsl
inc
mov
and
hlt
adc
mov
andl
jnp
and
pop
or
dec
dec
shlb
ja
fstpt
stos
push
movsl
fisttpll
test
xchg
mov
and
mov
mov
jp,pn
in
push
sbb
or
fldenv
cmpsb
jle
push
fidivrl
or
jnp
and
outsb
pushf
mov
mov
into
and
int3
adc
lds
xchg
cmp
int3
insl
fucom
fdivs
mov
mov
dec
cmp
ret
inc
push
xchg
sub
xchg
push
rorb
pop
cltd
es
push
jmp
jmp
jl
fstpt
xchg
mov
dec
and
loopne
cmp
cmp
mov
andb
ljmp
clc
pop
data16
adc
stos
jb
xchg
dec
and
out
xchg
and
cltd
pop
aad
mov
ljmp
in
xorl
jne
out
jae
pop
aaa
jnp
aas
ljmp
jb
jae
pusha
stos
add
je
dec
and
xorl
push
pop
xor
push
pop
in
xor
stos
outsb
scas
jp
test
inc
outsb
jns
or
dec
sbb
loop
lods
xlat
sahf
jne
xlat
hlt
mov
or
adc
and
inc
sar
clc
loop
std
add
insb
test
ret
cltd
lds
test
ss
adc
pop
mov
mov
push
and
aas
stc
imul
test
cmp
xchg
js
xchg
or
fucomp
stos
lret
push
stc
cld
add
popa
sbb
sub
adc
loop
and
sub
cmp
mov
cs
movsl
call
movb
sahf
int
nop
pop
out
or
cld
adc
call
in
cli
pushf
mov
xchg
jmp
mov
xchg
mov
fwait
jns
repnz
cmp
out
and
xchg
idivb
mov
cmp
mov
lea
mov
shrl
fidivrl
das
add
sbb
imul
or
mov
ja
in
cmpsb
lods
addr16
jmp
jb
jae
sub
das
cmp
insb
scas
xchg
enter
sbb
rorl
push
out
aas
adc
cmp
sbb
and
shr
inc
enter
ret
pusha
mov
xor
pop
jns
roll
js
popa
loope
fcmovnbe
insb
fwait
adc
dec
pop
test
insl
les
jbe
jo
inc
fstpl
repnz
scas
incb
lret
xor
packuswb
sub
scas
nop
enter
jnp
sub
daa
push
aas
mov
xchg
inc
sbb
aaa
xchg
push
mov
push
jb
subb
sahf
push
pop
stc
cmc
adc
fmull
lea
into
inc
popf
add
adc
hlt
in
jl
loop
repnz
enter
add
xchg
pop
bound
xchg
insb
xchg
mov
inc
lds
aas
clc
loop
fimull
push
mov
fsubr
or
mov
cmp
ds
std
adc
xchg
callw
rol
jl
and
xor
inc
mov
cmp
sbb
out
push
pop
test
cmp
mov
sub
sub
je
jae
dec
push
jbe
add
inc
pop
test
call
pop
call
push
push
outsb
xchg
mov
xchg
enter
add
ds
shl
pop
aam
inc
andb
push
mov
jecxz
outsl
sbb
mov
xchg
push
arpl
jg
mov
mov
leave
sbb
mov
mov
lcall
and
shrb
sahf
rcrl
pop
repz
mov
aas
dec
push
push
adc
popf
iret
mov
mov
lea
movsb
mov
stos
into
sbb
mov
mov
jle
adc
push
out
pusha
fsubrl
jbe
mov
adc
enter
jns
mov
jne
leave
mov
inc
or
add
call
xor
mov
in
outsl
inc
test
mov
inc
test
adc
sti
sub
adc
pusha
add
xor
aas
test
test
xchg
inc
xchg
adc
mov
jl
pusha
out
mov
fcmovbe
inc
js
cmp
paddusb
jecxz
mov
inc
xchg
cmc
jmp
stc
pop
mov
loope
inc
mov
loopne,pn
and
mov
ss
dec
pushf
and
push
ret
arpl
mov
loope
add
mov
mov
sbb
cmp
xor
mull
cmp
cmp
add
int3
xor
cltd
jge
dec
add
cmp
mov
mov
mov
orb
dec
cmp
xor
pop
stc
jmp
mov
data16
arpl
or
das
mov
lock
outsl
mov
and
stos
scas
or
out
dec
jecxz
cmpsb
imul
xor
adc
mov
xchg
lahf
test
in
jmp
shrb
push
rol
inc
je
fiadds
xchg
lea
push
jge
inc
dec
xorl
adc
cmp
test
sbb
adc
pop
and
lcall
mov
lods
and
add
inc
cli
inc
fwait
xchg
dec
cs
jl
mov
xrelease
gs
xchg
mov
leave
inc
mov
test
lods
into
push
inc
push
sbb
inc
push
out
aas
pushl
inc
dec
push
movsb
mov
dec
stos
mov
popa
jle
jge
mov
ss
sbb
sti
adc
jo
add
add
dec
lea
addr16
lods
outsb
dec
roll
addr16
aaa
in
xchg
mov
fnstsw
inc
sbb
mov
int
outsl
jmp
cmp
ret
and
mov
fdivp
lods
jnp
xchg
xor
int
add
popa
js
push
into
jmp
test
cmp
adc
mov
jp
jne
pop
push
nop
sti
cmp
push
xchg
dec
jle
imul
stc
or
xchg
les
mov
cwtl
sbb
cmpl
stos
lcall
fwait
jl
inc
stos
jmp
imul
sbb
xchg
std
or
pop
data16
xor
cmp
or
out
lahf
std
icebp
cmc
pop
push
mov
pop
pop
lods
stc
push
pop
popf
xor
hlt
dec
js
adc
push
popf
jl
sarb
fcompl
arpl
inc
sub
lret
scas
adc
jmp
or
fsubrs
insl
mov
or
or
in
add
sbb
pushf
and
adc
cmp
fsubrl
sbb
sbb
out
or
data16
ficomps
add
push
gs
inc
insb
sti
shrb
jno
scas
lahf
add
loope
push
push
rolb
sbb
arpl
adc
sti
ljmp
jl
or
imul
adcl
lds
mov
sbb
rorb
fwait
adc
fwait
xorb
mov
lahf
push
rep
addr16
adc
push
cmpsb
adc
xchg
lret
add
pop
in
aas
jmp
inc
ds
jmp
popf
inc
ja
int
lcall
xlat
mov
mov
das
pop
adc
pop
rcr
js
lods
pop
mov
inc
sub
jg
adc
pop
jge
hlt
int3
add
rcr
inc
gs
iret
inc
mov
push
jp
mov
outsl
sbb
mov
mov
dec
cmp
inc
decl
fdivl
and
xchg
mov
pop
aas
in
adc
pop
xchg
jecxz
push
xchg
inc
out
out
inc
clc
rcrb
push
cwtl
xchg
sub
push
push
stos
mov
push
xchg
jecxz
mov
shl
and
sub
jle
inc
sub
rorb
fwait
xorb
mov
sbb
xlat
or
or
cmp
jmp
sbb
push
sub
bnd
pop
test
sub
or
cmpsb
cmp
adc
das
mov
gs
jg
adc
jmp
fbld
mov
lods
gs
xchg
xor
or
fdivrl
and
testb
and
fdivrl
das
je
mov
pop
out
clc
and
inc
js
cmp
insl
test
fcoml
daa
hlt
inc
idivb
and
mov
sub
outsb
xor
lods
adc
jne
sbb
sub
iret
loopne
xchg
and
pop
pop
inc
mov
jle
cmp
mov
pop
loop
xor
cmp
fdivrp
jbe
pop
ss
inc
insl
sahf
cli
std
sahf
pop
mov
in
mov
push
es
sbb
iret
mov
push
cld
les
out
push
dec
movsl
or
divl
pop
jbe
lods
push
mov
int3
cmc
cmp
push
mov
pushf
dec
mov
and
sub
jbe
xchg
out
sub
outsl
xor
les
sti
jbe
mov
pop
imul
pushf
push
iret
clc
pusha
pusha
dec
mov
out
mov
pushf
call
or
mov
in
lea
push
movsb
pop
gs
nop
mov
aas
lods
mov
imul
add
sub
icebp
pop
stc
neg
sahf
test
xchg
nop
jg
cmp
sbbl
mov
cmp
sbb
emms
adc
cmpsb
inc
push
jp
mov
jne
and
nop
scas
leave
dec
inc
mov
insb
movsb
out
xor
and
xchg
pop
movsl
xchg
push
fidivl
dec
pop
jo
dec
and
sub
enter
lahf
dec
sub
mov
mov
leave
out
sbb
push
push
and
mov
das
dec
jecxz
pusha
movsl
shl
dec
insb
leave
adc
pushf
dec
mov
pop
sbb
dec
add
jmp
pop
addb
xchg
shl
add
xor
pop
xchg
int3
cmp
pop
mov
sbb
sbbl
push
and
rcrb
fimull
pop
roll
mov
inc
inc
jmp
fbld
xchg
call
popa
divb
and
and
cmpl
out
or
xor
ret
shl
insl
call
inc
jb
mov
iret
popf
jg
in
negl
int
add
dec
dec
or
ret
add
pushf
xchg
jle
repz
fsubs
mov
jne
stos
dec
movsl
add
daa
push
jo
mov
mov
fldt
test
or
inc
sbb
mul
aam
xor
jnp
xchg
fmul
sahf
mov
fwait
lds
into
int
and
js
sarb
xor
addr16
adc
cmp
xor
or
test
push
das
xchg
cmp
push
mov
mov
in
out
pop
fs
push
mov
in
mov
and
neg
push
aas
dec
pop
mov
movsb
bound
add
mov
popf
fisubl
mov
fs
jbe
ljmp
mov
inc
fdivrs
adc
and
ds
cmp
sti
xor
scas
sahf
sbb
inc
push
sub
and
fwait
mov
push
fdivrl
sub
in
xchg
push
dec
subl
in
xor
shr
and
aad
test
mov
pop
push
icebp
or
dec
add
cwtl
fisttpll
rcl
pop
insb
xchg
inc
add
outsl
pop
pop
inc
cmp
mov
inc
dec
xchg
jmp
pop
and
out
add
mov
hlt
js
mov
push
fs
and
dec
jp
sub
arpl
aam
inc
es
mov
pusha
movsl
sbb
decb
cmp
and
and
push
lods
enter
push
add
or
and
movsb
pop
aad
subb
in
dec
mov
aam
xor
jl
ret
mov
aad
outsb
or
shl
add
push
xchg
xor
ja
dec
add
xor
push
cltd
mov
mov
imul
sub
pop
sbb
mov
or
int3
add
call
cmp
mov
push
jecxz
xchg
inc
das
int
ret
clc
popa
sub
xchg
inc
mov
cltd
out
inc
imul
xchg
pop
jge
jo
aam
or
repz
xor
in
mov
sbb
test
adc
xor
sub
mov
mov
orl
jne
aas
stc
stc
add
aad
pushf
add
cmp
mov
adc
sbb
jmp
cmp
sbbl
iret
sahf
cmp
mov
mov
pop
popa
jno
mov
mov
shr
cmpsl
inc
rcrb
mov
xchg
loopne
or
sbb
and
cltd
loope
cli
adc
bound
xchg
cmp
pop
inc
add
call
dec
pop
push
adc
rclb
xor
dec
mov
mov
mov
and
mov
xor
pop
nop
cli
mov
lret
lods
inc
sub
aas
sub
jp
mov
ret
xchg
leave
insb
pop
jmp
pop
sti
cmpsl
mov
movsb
mov
adc
dec
inc
es
imul
popa
rcl
cld
jae
les
adc
cmp
fstpl
mov
add
insb
dec
dec
addr16
ja
lret
and
fwait
push
test
and
in
xchg
imull
push
mov
mov
push
inc
or
sbb
xor
pop
jp
sbb
mov
push
pop
mov
pushf
mov
nop
pop
pop
and
dec
jl
bound
push
fnstenv
xchg
loopne
out
inc
out
sbb
clc
call
in
in
mov
cmp
std
les
stos
test
mov
fdivs
cmp
ss
cmp
mov
into
testl
dec
or
cmp
lods
xchg
scas
imul
fnstcw
clc
outsb
mov
xor
lds
cmp
cmpsl
leave
fadds
lret
mov
lods
iret
jecxz
aam
pop
aaa
mov
iret
jl
xlat
imul
in
push
jl
mov
xchg
daa
push
add
mov
icebp
push
and
popa
or
inc
xorl
stc
mov
jne
add
xchg
fsts
jo
stc
ja
and
mov
outsb
mov
xorl
shr
cwtl
pop
leave
les
jg
ss
sub
leave
insl
data16
mov
cmp
outsl
xchg
popa
addr16
sub
xorb
bound
mov
jl
dec
fmuls
inc
loope
imull
std
int3
fstpt
gs
enter
jbe
and
cmp
and
and
call
mov
lods
scas
xor
xchg
push
push
ret
inc
push
mov
scas
jp
xchg
mov
jmp
cmp
mov
ja
in
lahf
pop
cltd
call
sbb
in
mov
lahf
lods
dec
jmp
push
pop
fcompl
lods
jp
pusha
inc
sub
imul
mov
sub
pop
mov
sbb
scas
mov
or
jecxz
inc
pop
mov
jns
mov
inc
mov
xor
inc
xor
and
popf
and
pop
out
and
leave
mov
jmp
movsl
sti
popa
popa
imul
std
and
dec
fmul
dec
fisubl
adc
push
inc
push
cmp
sub
pop
jg
sti
xchg
inc
xor
lds
mov
es
push
jnp
jb
adc
cmp
mov
cmp
mov
call
ret
push
dec
aas
or
mov
out
in
xchg
adcb
cmp
dec
mov
movsb
pop
add
mov
notb
pushf
push
mov
lret
push
jnp
jns
clc
imul
shl
xchg
mov
jp
and
xor
out
adcb
push
mov
jno
add
js
jns
mov
test
push
test
xchg
int
notl
mov
mov
inc
dec
dec
arpl
arpl
mov
test
push
pop
ja
pop
pop
sub
mov
clc
mov
sbb
sub
push
xor
leave
ds
dec
inc
and
push
xchg
mov
fwait
out
pop
mov
inc
in
mov
jne
setge
cmp
pop
mov
fidivrs
fcmovu
sub
inc
cmp
adc
xor
pusha
mov
jge
add
repz
mov
inc
aaa
imul
add
ret
aaa
rcrl
dec
adcl
aas
push
pop
mov
jns
movsb
lcall
fmull
ja
jbe
xchg
enter
in
push
stos
mov
pop
cmp
pop
jno
stc
xchg
jnp
push
nop
cli
inc
xchg
mov
movsb
ret
sbb
leave
xchg
push
mov
int3
jno
shlb
mov
cwtl
dec
sbb
cmp
cli
out
out
movsb
sub
popf
pop
loop
inc
and
or
mov
cwtl
mov
xchg
mov
pop
xor
ret
ljmp
jb
aad
leave
pop
imul
mov
mov
sub
adc
xchg
and
xchg
push
xor
jmp
stos
cld
jmp
les
pop
lahf
add
sbb
cmp
stos
mov
pop
sub
lcall
xlat
push
sbb
imulb
jb
sub
sbb
xchg
xchg
stos
xchg
in
adc
dec
or
movsl
jne
es
jns
cltd
sbb
mov
dec
cmp
lret
ljmp
fbstp
add
push
mov
jno
cmpsl
jmp
jge
jecxz
pop
xchg
mov
popf
dec
sbb
and
bound
add
jo
loop
xor
inc
cli
mov
xchg
sub
hlt
addl
hlt
lds
pop
ljmp
add
inc
adc
std
inc
pop
es
out
sbb
in
fistps
xor
leave
cmp
fcoml
rcl
sbb
fldz
lret
mov
pop
nop
xchg
or
popf
stos
xchg
sub
insb
scas
sub
mov
ja
icebp
cltd
pop
lret
jae
adc
push
outsb
adcb
push
icebp
int
adc
aam
mov
pop
push
ret
scas
or
cmc
fucomi
mov
dec
lcall
loope
negb
jmp
out
xchg
gs
add
popa
cld
lcall
fidivs
mov
push
mov
in
and
out
cmp
scas
clc
fnstsw
por
in
fcompl
or
xchg
repnz
and
sar
fmull
pop
ds
addr16
add
bound
inc
xor
ret
loop
inc
and
push
pop
mov
xchg
imul
jns
jg
or
push
nop
sbb
in
pop
bound
test
pop
adc
pop
or
mov
shrb
arpl
cmp
in
cltd
lret
and
mov
mov
or
movsl
aaa
pushf
aaa
ret
jne
in
jle
lret
lret
outsb
loope
shlb
xchg
shll
std
into
push
leave
adc
int
adc
and
cmpl
arpl
jnp
adc
fbstp
inc
call
pop
aad
jge
clc
inc
insl
out
fimull
in
fcomps
hlt
jle
test
xchg
xchg
push
mov
ljmp
shrl
scas
sbb
test
mov
xor
push
and
cmp
lock
movsl
or
push
push
ss
and
xchg
adc
sahf
fisttps
aaa
cmp
aaa
fdivrs
out
and
out
shl
xor
int
pop
mov
inc
cmpsb
pop
xchg
lret
mov
nop
xchg
scas
mov
loope
mov
add
or
dec
mov
arpl
icebp
inc
les
sub
lock
dec
jmp
pop
mov
pop
das
movsl
ss
pop
and
cmp
xor
movsb
add
pop
sbb
add
xor
lods
popf
add
mov
xor
add
xchg
decb
out
push
int3
mov
out
lcall
dec
sahf
adc
push
push
add
insl
out
pushf
mov
pop
add
popa
mov
ret
xor
mov
sbbb
mov
scas
mov
or
sub
adc
xchg
inc
xor
lea
leave
sarl
test
in
daa
clc
push
add
add
pop
popf
xor
mov
adc
mov
inc
push
sub
mov
push
inc
adc
inc
pop
lcall
popl
inc
dec
or
outsb
adc
in
xchg
pushf
jnp
movsl
out
push
mov
mov
jno
jmp
mov
mov
jne
xor
push
sbb
out
jb
or
je
std
movsb
int3
out
arpl
sub
mov
sub
jle
mov
cmp
pop
ja
sub
mov
stc
fistpl
std
and
mov
jbe
lods
adc
imul
adc
jnp
clc
lods
adc
bndstx
ds
imul
mov
clc
xchg
ja
adc
xor
add
xchg
fstpt
or
movsl
leave
cwtl
pop
push
or
icebp
jg
imul
mov
movsl
and
jno
ror
pop
fs
adc
pop
inc
jmp
mov
lret
int
in
push
movsb
or
mov
push
xchg
sbb
pusha
call
lock
shll
aam
adc
loopne
adc
push
pop
cli
lret
pop
shlb
data16
imul
ljmp
movsl
xor
cmp
xchg
test
je
sbb
pop
push
push
loopne
pop
push
ss
dec
les
mov
pop
daa
les
divl
and
sub
je
cld
cmpsb
ret
clc
adc
mov
sub
add
jae
out
lea
sbb
lock
clc
sbb
mov
psubq
repz
and
push
call
shll
shll
mov
xchg
push
imul
rorl
roll
aas
movl
or
aaa
pop
inc
ljmp
das
dec
int
jl
jbe
or
xor
push
dec
or
call
sub
outsl
stos
dec
mov
mov
xchg
mov
jle
stc
sbb
rorb
nop
xor
inc
xchg
repz
ret
negb
jecxz
and
sbb
push
out
xchg
movsb
adc
pop
in
dec
xor
jge
push
push
inc
mov
xchg
add
mov
jnp
mov
jmp
mov
dec
pop
dec
cmpsb
shll
test
repz
pop
mov
and
popf
out
jno
popf
adc
and
mov
mov
ss
jne
push
ljmp
and
mov
cmp
fucom
lock
xchg
add
mov
cmp
arpl
xchg
fstl
aad
dec
mov
fsubs
fdivs
pusha
push
jmpw
int
stos
xchg
adc
push
pop
push
xchg
cmc
jl
add
dec
xlat
sbb
mov
pushf
add
mov
push
andl
outsl
stc
fmul
cmpsl
movsl
mov
addr16
call
push
repnz
sbb
scas
sbb
or
sbb
cmp
into
loop
shrl
jl
aad
idivb
xchg
in
mov
in
lret
xor
ret
gs
stos
ret
sub
add
cmpsl
mulps
rol
push
loopne
imul
pusha
mov
inc
stos
mov
inc
mov
jo
int
in
adc
movsb
out
add
xchg
sbb
xor
mov
sub
fwait
dec
adc
sbb
xchg
jp
rep
xchg
sti
add
xchg
push
adc
mov
dec
scas
mov
sub
dec
arpl
in
and
jo
xchg
mov
leave
dec
sub
aad
jp
push
mov
stos
xchg
or
mov
sub
je
sbb
mov
sub
push
ljmp
and
testb
pusha
shrb
pop
cmp
mov
test
dec
cmp
outsb
mov
cld
clc
pop
test
push
and
mov
cli
jno
xchg
mov
and
jmp
mov
add
xor
mov
in
push
movsl
jmp
mov
dec
fistpl
in
jne
inc
sub
mov
popa
test
ljmp
bound
push
repz
sub
add
cmp
and
cmp
lret
aam
jnp
xor
rclb
push
mov
mov
adc
call
jecxz
cmp
shrl
hlt
push
rol
add
mov
pushw
insl
sbb
loop
or
dec
mov
sbb
lods
add
sub
push
jecxz
and
mov
ss
mov
imul
push
mov
push
or
push
subb
pushf
adc
pop
pop
in
icebp
pusha
mov
inc
in
insl
popf
fsubrs
push
dec
xchg
fimull
out
jp
aam
sahf
mov
push
leave
pop
sub
popa
sbb
sub
lret
xchg
leave
xorb
jnp
mov
loope
dec
adc
cmp
cmp
jb
mov
imul
lds
pop
nop
mov
xorb
cli
mov
or
pop
jmp
sti
jl
enter
sti
jmp
cs
hlt
popa
aaa
int3
mov
and
ja
fldenv
cmc
mov
lahf
cmc
dec
cmpsl
in
lea
mov
add
fs
mov
mov
aaa
sbb
rcr
sbbb
xchg
jno
sbb
push
push
pop
lret
movsl
ja
jne
sbb
push
test
or
repz
dec
pusha
test
fnsave
jae
pop
loop
lret
jecxz
push
sub
lret
inc
mov
in
clc
out
nop
inc
inc
mov
xor
icebp
dec
mov
xor
jl
dec
iret
jg
je
sub
int3
out
xchg
jle
dec
fsubl
cli
sub
ffreep
jbe
pop
jns
out
push
lea
mov
enter
lahf
push
shrd
cmp
push
jbe
push
add
push
sub
pop
ret
mov
jge
gs
add
xchg
adc
leave
xchg
pop
lods
stos
mov
add
cmp
leave
rcll
pop
cmpsl
jb
jae
sbb
fwait
insb
loope
dec
addr16
lret
enter
cwtl
sbb
jo
movsb
in
mov
xor
push
lods
repz
lds
data16
loope
shr
gs
xor
outsb
inc
stos
pop
adc
pop
call
mov
inc
out
pop
and
dec
int3
add
ret
adc
push
lods
test
test
fimuls
jbe
sbb
dec
mov
mov
addb
and
adcl
pop
stos
cmp
dec
or
stos
aad
cmp
jae
and
pop
enter
testb
sbb
shlb
or
fwait
call
gs
dec
into
mov
popa
aas
leave
push
enter
outsl
jle
scas
std
popa
mov
mov
jmp
mov
ja
insb
loopne
push
out
and
cmp
cs
outsl
lods
std
jmp
mov
dec
mov
sub
enter
mov
outsl
jmp
dec
arpl
cmp
insb
leave
xchg
jecxz
pushf
fs
imul
adc
movsb
subb
loope
ljmp
xlat
add
addb
dec
std
pop
popl
push
inc
mov
dec
dec
fdivrl
add
xchg
xchg
les
push
aaa
scas
add
ret
in
daa
sub
jae
inc
push
shll
fdivrs
shll
scas
jb
in
inc
enter
ret
inc
or
sbb
jb
iret
aam
sbb
ljmp
les
cmp
inc
dec
dec
xchg
ficoms
jp
lahf
sti
cmp
addb
aam
repz
fsubrp
pop
mov
mov
mov
in
pop
push
inc
mov
dec
shl
clc
mov
fbstp
insl
test
cwtl
jge
sbb
clc
cwtl
sub
add
incl
fsubr
scas
leave
ljmp
cli
jae
popa
dec
leave
bound
jnp
fstl
xor
repnz
addb
push
testl
ror
into
das
ffreep
scas
dec
push
jbe
lods
cmp
iret
add
push
push
sahf
dec
add
xchg
or
add
cs
or
enter
xchg
adc
aas
mov
sub
mov
push
mov
mov
rorl
sbb
icebp
loop
inc
fnsave
in
dec
inc
dec
gs
clc
and
xor
in
mov
cmp
loopne
stc
sbb
ficomps
jp
cmpsl
pop
xor
push
inc
cmp
aam
fwait
ljmp
negb
lret
xchg
mov
dec
test
dec
xchg
es
fimull
in
xchg
test
cli
ljmp
lret
mov
bndstx
subb
rcr
test
cwtl
inc
jp
xchg
fcmovnu
clc
dec
mov
popa
in
mov
nop
fldl
and
lds
dec
hlt
sub
sub
cmp
out
lcall
mov
out
int3
in
cmp
mov
cwtl
mov
ja
push
xchg
jo
and
mov
adc
rcll
js
mov
in
mov
add
fsubl
push
xchg
out
pop
push
push
cmp
jbe
icebp
stos
add
fcomi
xor
fiadds
sbb
scas
sub
mov
test
lahf
stc
daa
je
insb
xor
dec
gs
sbb
lret
fcmovnbe
stc
leave
cwtl
sub
add
push
stos
add
jle
scas
hlt
ds
insl
rcrb
adc
repz
rcl
or
dec
leave
rcrb
or
imul
push
xchg
and
pop
cmp
ret
cmp
xchg
test
notb
cwtl
jnp
mov
xlat
inc
fimull
inc
jg
mov
addps
or
outsb
push
aas
cmpsl
rorb
cmpb
outsl
cmpsl
or
mov
ret
pop
mov
repz
cmp
imul
jnp
cmp
ja
in
inc
data16
jnp
jmp
sbb
test
mov
mov
push
fs
ret
jmp
sbb
and
cmc
push
and
std
sbb
add
divb
cmp
mov
mov
mov
mov
xchg
adc
mov
sub
push
mov
lret
lahf
ja
popf
sbb
inc
loope
movsb
lcall
add
ja
cmp
cmp
jbe
cltd
ds
or
push
arpl
inc
lds
jb
mov
or
pop
fidivrs
xor
mov
stos
jb
pop
mov
sub
daa
rorb
lods
dec
sub
call
xchg
fldt
gs
lds
push
add
add
data16
out
pop
mov
mov
jecxz,pt
outsl
loopne
dec
sti
in
add
ja
mov
movsb
ret
jb
mov
enterw
stos
ds
out
in
sbb
mov
inc
psubw
xchg
das
and
aad
adc
fisubrl
mov
jb
mov
dec
mov
fbld
dec
fnsave
orb
fs
mov
test
jp
add
rcrl
ljmp
daa
int
sbb
lret
cmp
lcall
dec
and
cmp
pushf
jns
xor
dec
xchg
add
jnp
stos
adc
push
dec
cli
xchg
sahf
jmp
imul
rol
mov
js
hlt
out
xchg
fwait
insl
out
cmpsl
jle
push
xor
pop
addb
sub
mov
ja
in
out
in
lea
mov
fnstcw
dec
hlt
push
addr16
inc
mov
jle
out
jns
loopne
or
pop
sbbl
sub
xor
sbb
mov
push
fs
into
leave
pop
adc
xor
push
mov
push
dec
rcr
pop
add
cmpsb
nop
inc
insb
pusha
sub
push
lcall
push
push
data16
mov
and
in
ret
xchg
or
xchg
push
fstpt
cmpsl
insl
mov
push
inc
ret
ja
scas
aam
jg
faddl
js
pop
sub
jge
push
jl
dec
repnz
mov
or
lahf
sbb
data16
sub
out
or
and
mov
push
pushf
cltd
dec
mov
leave
xor
pusha
in
mov
mov
imul
mov
xchg
test
pop
es
dec
movl
cmpsb
dec
fcompl
fsubrs
mov
movsl
lcall
pop
stc
outsl
int3
inc
cmp
pop
pop
adc
lcall
decb
inc
sub
sub
pop
xor
pop
fbld
xchg
push
push
jmp
leave
add
ret
cmp
repnz
inc
iret
inc
mov
adc
cmpsl
lahf
inc
cmp
test
dec
dec
pop
add
sub
call
push
mov
in
push
imul
test
jp
popa
out
shrl
adc
fwait
jp
xchg
inc
stos
inc
shll
mov
xor
pop
push
jne
xor
jne
sbb
ja
movsb
outsl
out
dec
mov
pop
sahf
xchg
inc
xor
out
out
pushf
and
sbb
in
scas
mov
ret
xchg
jo
mov
insl
pop
lret
push
test
dec
in
mov
imull
addr16
cs
inc
jl
xchg
ja
jge
inc
loop
jb
jl
icebp
push
xchg
mov
in
lods
pop
pushf
sub
push
or
movsl
in
les
add
xchg
pop
pop
xchg
outsl
ljmp
loope
fcmovu
xor
mov
sarl
xor
mov
pop
cwtl
movsb
xlat
jp
lcall
popf
mov
ja
lea
sar
imul
leave
mov
sub
std
ds
xor
push
pop
inc
pop
cmp
jp
xchg
pop
mov
sar
daa
subb
and
push
xchg
mov
jg
or
cs
sbb
in
mov
gs
test
aaa
ljmp
ret
xor
lea
fstpl
ficomps
mov
pop
imul
ljmp
jno
push
leave
or
dec
pop
xlat
rcll
arpl
mov
rclb
pop
data16
jb
scas
xor
dec
adc
stc
bound
enter
jbe
rcl
push
setne
das
insl
out
sbb
cli
clc
icebp
inc
pop
fisubrs
neg
and
xchg
cmp
cmp
sbb
inc
cmp
inc
xchg
ljmp
adc
jmp
and
sub
enter
lahf
mov
loope
adc
inc
mov
dec
imul
rorb
dec
jg
dec
xor
add
fnsave
pop
dec
pop
mov
divb
rcr
adc
xchg
loopne
in
ficoml
cmp
int3
push
xor
mov
cmp
rorl
ja
adc
test
outsb
pop
pop
sub
xor
xor
mov
mov
cli
push
mov
ret
pop
sbb
jmp
or
jecxz
je
mov
stos
xchg
popa
clc
mov
or
add
push
imul
rcrl
cli
cmp
lret
inc
dec
sub
aad
or
ds
mov
outsb
pop
adc
cltd
cmp
cmpsl
or
push
dec
jno
sahf
aam
in
cmp
ss
test
mov
jno
lcall
xor
mov
fimull
aam
fs
stos
mov
jl
lods
mov
bound
scas
sbb
lret
jecxz
mov
int
pmovmskb
mov
and
cmpsl
add
int3
sbb
dec
cmp
mov
dec
sbb
lret
mov
xchg
jmp
jnp
rclb
push
inc
add
xchg
enter
popf
ja
inc
cltd
lea
xchg
jge
ficoml
sub
cmc
je
adc
sbb
pop
cmp
pop
mov
dec
scas
mov
cmp
in
ljmp
test
dec
mov
jo
pop
mov
sbb
test
xor
mov
insl
adc
xor
xchg
movsb
mov
dec
icebp
jne
fidivl
mov
push
daa
lods
push
pop
xor
test
testl
test
rorl
inc
test
fnsave
pop
adc
pushf
dec
sbb
inc
aam
outsl
xor
mov
dec
iret
jns
xor
adc
jmp
xchg
leave
xor
sub
ljmp
movhps
fstl
sbb
and
pop
and
out
dec
push
pop
fidivrl
bound
cmp
lret
xchg
incb
sbb
test
add
xchg
cmp
cmp
dec
mov
cld
xchg
cs
jnp
pushf
push
aam
insb
sbb
jl
xor
stos
test
xor
inc
sub
cwtl
je
add
lret
ret
mov
mov
mov
aaa
divl
xor
mov
pop
out
mov
gs
jmp
add
push
roll
cmc
or
lods
imul
cwtl
and
call
adc
adcb
into
mulb
and
sub
mov
pop
push
ds
dec
daa
adc
cs
inc
or
inc
aaa
stc
dec
fsubl
fidivrs
std
imul
xchg
clc
mov
add
loopne
adc
jg
sub
fisttps
inc
call
aas
nop
mov
add
mov
icebp
or
mov
je
mov
imul
scas
rcpps
xchg
imul
popf
pop
fdivr
stos
mov
mov
xchg
sahf
add
mov
cmp
mov
mov
pop
outsb
ljmp
lds
sti
shl
lret
and
fdivrl
add
hlt
mov
int
outsl
icebp
mov
push
inc
nop
arpl
xchg
subl
mov
fdivrs
lods
test
mull
in
int
cmp
dec
loop
jp
aas
cld
popf
or
mov
es
cli
call
lahf
or
mov
stc
ret
leave
cmp
adc
sbb
and
pop
mov
inc
gs
test
pop
mov
loopne
inc
mov
packuswb
addr16
repnz
add
mov
sbb
cmp
jno
inc
dec
lock
or
dec
mov
gs
sahf
enter
lea
fstps
jno
add
inc
sti
push
mov
xorb
xor
rcll
xor
sti
jne
jg
fiaddl
add
loope
ss
inc
aaa
push
cmp
xchg
fwait
lock
xor
inc
arpl
mov
popa
out
or
in
test
pop
rorl
imul
jns
dec
cltd
xor
or
pop
mov
sub
and
push
push
cmp
pop
xlat
mov
les
jbe
push
mov
mov
xor
and
popf
icebp
pushw
cs
shl
and
adc
fstpl
xor
movsb
adcl
repz
add
cmp
ds
insl
out
push
andl
push
mov
add
push
fsts
or
pop
push
and
fidivs
push
mov
jno
stos
pop
jo
push
dec
mov
loopne
rcr
xchg
sbb
cli
xor
jae
mov
es
js
arpl
mov
mov
mov
ror
shll
mov
dec
sub
mov
xchg
cmp
inc
jge
mov
gs
fldenv
loopne
mov
mov
sbb
mov
inc
adc
int3
xchg
mov
aas
xor
jno
and
gs
int3
jo
add
and
adc
and
adc
ljmp
test
adc
add
rolb
cmpsb
scas
push
je
mov
xchg
mov
jg
push
test
sbb
adc
xchg
nop
pop
mov
jle
sahf
mov
mov
icebp
fcoml
out
pop
ljmp
inc
inc
maxps
sbb
or
inc
xor
jl
fstps
fs
aam
push
adc
movsb
mov
jl
dec
dec
in
nop
or
mov
shl
jecxz
outsl
mov
jmp
dec
lret
testb
push
xchg
test
mov
sti
mov
mov
repnz
lods
fiaddl
sbb
cmpl
cli
lods
cmc
push
cmpsl
or
ret
cmp
xor
xchg
mov
aam
stos
jge
fdivr
xor
es
or
add
out
add
push
adc
lahf
dec
dec
cs
xor
in
js
out
pop
sub
pop
jno
xchg
jg
pop
pop
sbb
jae
adc
sbb
insl
icebp
sarb
push
inc
push
and
iret
call
jge
outsl
movsl
loop
fistl
sub
push
shl
leave
aam
insb
push
ljmp
and
jl
ja
adc
add
jne
pop
pop
jl
cmp
mov
mov
inc
sbbl
repz
cmpsb
ljmp
mov
push
pop
jecxz
in
mov
jp
dec
cmpsb
xchg
lods
push
lods
inc
add
fstp
inc
or
add
mov
pop
test
cmpsb
out
adc
movsl
cld
leave
addl
jmp
mov
sbb
aam
cli
xor
stos
push
stc
or
scas
xor
push
pop
je
dec
popf
shlb
push
xchg
xchg
jecxz
jp
gs
sti
imul
xor
repnz
sub
mov
aaa
movsl
lret
inc
pop
divl
sarl
and
mov
jg
push
adc
loope
or
jb
out
dec
push
in
cmp
pop
mov
jl
push
lcall
and
aad
jmp
es
mov
outsb
sub
add
push
test
ss
mov
andl
ss
mov
fimuls
xchg
ficomps
xchg
cmpb
test
add
imul
jnp
not
inc
push
adcb
adc
test
mov
js
jge
test
test
je
sub
into
decl
dec
pop
insb
inc
mov
or
cmpsl
cmpl
clc
outsl
mov
adc
mov
movsl
add
push
add
shrb
icebp
or
pop
xchg
push
jge
dec
xchg
cmp
loop
xor
jne
sub
popa
loopne
imul
adc
or
test
in
test
add
aas
lods
push
push
dec
mov
or
cmp
inc
xor
fsubrs
int3
sahf
add
mov
stos
es
and
pop
gs
pusha
lahf
in
daa
shll
lods
xchg
ret
sarl
jp
out
test
aad
adc
pop
popf
imul
pop
inc
in
lret
xchg
addr16
js
xor
icebp
lock
movntps
fildl
push
xchg
out
push
int3
daa
xchg
mov
pop
cmp
int3
push
sahf
pop
adc
or
mov
fiaddl
cmpsl
mov
ret
jno
push
enter
in
out
inc
adc
hlt
scas
jae
pop
lods
sbb
clc
int
mov
inc
jge
xchg
xchg
mov
and
cmp
jbe
push
test
js
inc
movsl
rcrb
sti
xor
mov
xor
jno
cmc
scas
mov
es
mov
subb
xchg
aas
aad
lcall
pushf
scas
mov
leave
fimuls
outsl
jno
or
andb
lea
inc
cmp
add
push
decl
add
imul
lahf
lahf
popf
xchg
test
xchg
scas
cld
jecxz
xlat
jnp
mov
mov
xchg
arpl
adc
dec
xor
testl
popf
push
jl
or
enter
fcoms
sbb
ds
sarb
div
insl
loope
add
add
out
mov
dec
add
mov
out
dec
adcb
sbb
fcmovu
fdivr
xchg
xchg
mov
popa
cmp
mov
repnz
jp
inc
cmpsl
movsb
pop
mov
ret
jnp
shrl
fiaddl
sbbl
or
dec
cmp
rcr
fs
imul
rol
xchg
cltd
xor
mov
cs
push
dec
into
scas
negb
and
pusha
out
mov
dec
inc
fistps
sub
cmp
cmpsb
pusha
push
sub
adc
sub
idivb
pop
out
or
test
xlat
clc
nop
jb
popf
adc
je
sbb
pmulhuw
cmp
scas
insb
jmp
out
mov
std
mov
das
sub
imul
clc
enter
mov
shrb
fs
stos
cltd
es
int3
fldt
mov
xor
test
leave
pop
or
xchg
in
lock
jmp
loopne
sub
lret
mov
scas
dec
lret
lcall
aaa
fwait
mov
dec
scas
cli
popf
movsl
test
mov
xor
jns
outsl
pop
enter
loopne
jl
xchg
scas
jmp
adc
outsl
adcl
inc
clc
add
lods
clc
cld
push
aas
jmp
loop
repz
addr16
jb
cmp
lods
xchg
push
pop
jle
pop
loope
push
psrlq
adc
insb
adc
xchg
pushf
fcomi
and
clc
pop
xlat
inc
cmp
pop
cs
je
sbb
in
pop
in
push
int3
leave
inc
jl
aam
in
adc
insl
rclb
fistpll
inc
fistpll
sahf
mov
jbe
push
jl
or
mov
lahf
gs
in
mov
dec
mov
sbb
push
dec
insl
hlt
sbb
mov
das
xlat
rorl
sub
inc
lods
xor
push
dec
adc
sti
sbb
icebp
pop
pop
imul
jae
ja
push
std
mov
sub
mov
inc
dec
call
mov
add
jmp
cmp
jbe
or
xchg
pop
dec
pushf
neg
aam
mov
mov
pop
sub
into
sub
cmp
movsl
lds
lret
icebp
sub
sar
mov
fs
inc
or
cmp
and
fldenv
adc
xchg
mov
lds
mov
loopne
sub
repz
les
sbb
aam
or
ret
lahf
xor
sahf
push
jg
test
les
xchg
sbb
sbb
mov
fbstp
aad
xor
std
mov
vzeroall
shlb
pop
adc
push
xchg
add
and
mov
push
testl
insl
inc
in
and
xor
and
incb
inc
sbb
out
inc
fists
or
stos
fs
dec
mov
dec
lcall
and
arpl
and
xor
lds
mov
xchg
cmp
dec
inc
fcompl
adc
push
test
adc
mov
lods
mov
jbe
push
mov
mov
xor
and
hlt
into
test
test
test
jno
push
lret
insl
daa
push
fistps
mov
or
pop
inc
dec
hlt
lods
into
adc
lret
fisubrs
sbb
mov
fiadds
imul
mov
mov
imul
addr16
sbb
insb
mov
or
test
push
fiadds
gs
clc
and
cmp
push
inc
das
scas
jl
lcall
push
xchg
lods
jp
loopne
xor
das
mov
rolb
xor
or
sahf
sbb
fs
sarb
sub
jo
push
pop
mov
in
lcall
mov
cmp
mov
lret
pop
outsl
imulb
xchg
cmpsb
stc
push
cmp
pusha
test
pop
outsl
popa
add
mov
xor
fmulp
xchg
add
or
mov
mull
cmp
pop
xchg
push
imul
sub
cmp
vcvtps2dq
repz
push
insb
sbbb
test
push
jns
adc
test
iret
cmp
icebp
mov
mov
cmp
xchg
add
mov
mov
jmp
dec
pop
outsl
fcomi
daa
xchg
jl
push
popa
mov
imul
push
push
jbe
jae
sbb
push
push
push
inc
sahf
rcrb
xchg
jl
adcb
lock
loope
mov
mov
xchg
aad
push
rolb
mov
test
out
mull
out
dec
hlt
imul
cmp
addr16
jle
mov
sbb
dec
add
jecxz
in
fmul
scas
mov
insb
dec
out
sbb
popa
lds
xlat
orl
mov
xchg
push
lahf
push
and
mov
add
inc
hlt
fcomps
rorl
jae
jle
jg
mov
cs
jl
jge
paddsw
orb
add
hlt
mov
jl
scas
inc
mov
out
jae
mov
test
mov
sub
repnz
and
sub
repz
lahf
std
cmp
or
push
cmp
jnp
mov
mov
mov
sub
push
negl
fwait
outsl
mov
xor
es
mov
test
mov
aam
jbe
hlt
mov
pop
sbb
orl
and
clc
outsl
icebp
sub
scas
cmc
mov
cmp
mov
sub
repz
mov
xchg
inc
data16
leave
lods
cli
push
arpl
push
and
scas
sahf
dec
adc
mov
loopne
outsl
xchg
mov
jg
test
xchg
jo
daa
fcmovnbe
add
imulb
ljmp
idivb
inc
pop
dec
adc
jecxz
inc
cli
push
add
and
in
sahf
idivb
mov
lret
pop
jne,pt
jae
mov
mov
and
aas
xlat
add
popf
cmp
fistpl
inc
xor
dec
cmp
mov
mov
sahf
in
pop
sahf
dec
pop
push
push
mov
adc
sub
push
cmp
push
dec
je
loopne
lcall
jae
stos
pop
ja
mov
sbb
insl
lods
inc
jmp
push
icebp
out
insb
cwtl
lds
std
cmp
add
mov
fcoml
call
xchg
stos
insb
arpl
sub
pop
pop
xchg
mov
adc
xor
cmp
fdivl
xor
pop
js
cltd
mov
aad
add
sub
idivb
cmp
sub
test
ret
lods
lret
cmp
pop
int3
loope
mov
jno
push
insl
push
pop
mov
mov
dec
cmp
mov
repnz
xchg
cmpsl
xchg
sub
xor
pop
inc
aaa
fistl
jle
sub
fs
inc
and
push
inc
xchg
and
pusha
es
or
dec
into
mov
sbb
xlat
call
push
test
dec
jmp
lcall
add
inc
jae
int
je
std
or
outsb
pop
sahf
sub
icebp
out
xchg
adc
xor
sarl
mov
daa
fsubl
fbstp
and
push
adc
pop
adc
xchg
sbb
jb
mov
popa
sub
js
js
mov
dec
adc
jne
scas
je
leave
xorl
imul
stos
sahf
sarl
scas
sbb
mov
xchg
add
push
test
fisubs
and
pop
add
int3
jo
rorl
lea
inc
into
inc
stos
in
stos
and
xor
adc
fs
xor
jmp
aam
loop
cmc
outsb
sarl
inc
outsb
nop
fimull
pop
sbb
pop
add
push
jno
mov
es
or
adc
cmc
lahf
cli
int3
mov
mov
addb
adcl
mov
sub
lock
sti
and
loopne
loop
movntq
jns
mov
shll
pushf
push
aaa
ret
xor
cmp
mulb
sti
ljmp
push
outsb
jnp
add
dec
out
rcll
fcomi
in
dec
xchg
je
test
jmp
add
sarl
les
pusha
adc
pop
popf
and
mov
jp
sbb
icebp
aas
jne
sub
xor
jmp
loopne
fnop
cmpsb
outsl
jo
xor
inc
and
jae
lock
jmp
push
or
pop
cmp
jae
ja
sbb
fistpll
je
add
add
mov
xchg
adc
lahf
and
enter
mov
cmp
dec
sub
push
ds
inc
ret
lret
aaa
iret
lcall
cmpsl
cmp
dec
add
sub
js
ret
sti
xor
push
scas
and
insb
mov
ret
dec
pop
daa
bnd
xlat
or
push
cmp
mov
xchg
pushf
inc
pop
sub
fwait
inc
pushf
jg
or
mov
mov
and
adc
sub
ja
nop
and
lods
outsb
inc
shl
js
iret
lods
fidivs
lret
cmp
mov
ljmp
test
je
rorb
dec
popa
mov
and
icebp
mov
jmp
push
sahf
pusha
mov
and
mov
mulb
mov
cli
jo
mov
push
dec
repnz
xchg
in
sub
mov
cmc
adc
hlt
sahf
mov
adc
mov
ret
inc
mov
movsl
pop
sub
jl
lea
jns
mov
cmp
inc
in
mov
scas
int
dec
sbb
push
out
or
pop
ljmp
cmpsb
arpl
rolb
and
jbe
sub
movsb
xchg
push
xchg
sbb
mov
test
loop
in
inc
lret
add
fists
in
push
pop
and
lcall
push
pop
sub
sub
add
inc
mov
xchg
lmsw
ds
add
pop
out
jl
lock
cmpsl
and
mov
iret
cmc
xchg
add
push
inc
and
jle
cmp
jge
sbb
mov
and
pop
xchg
repz
mov
daa
test
push
mov
cli
sub
sub
adc
sbb
ljmp
popa
rorb
and
lcall
pop
push
insl
leave
rclb
or
jp
xorl
or
jge
mov
aas
out
lcall
jmp
adc
pushf
pop
pop
aaa
into
aaa
jmp
insl
and
shrb
add
test
inc
jl
xchg
xchg
stc
or
adc
sbb
dec
pop
js
adc
test
shll
movsl
add
lods
mov
xor
and
dec
push
and
pop
sub
mov
mov
pop
stos
aam
loopne
movsb
mov
mov
jne
mov
pop
lods
cmp
data16
js
xchg
inc
or
add
aas
into
mov
pop
scas
sub
outsb
mov
movsb
in
pusha
iret
and
add
xchg
aad
adc
push
fldcw
cmpl
sub
clc
mov
into
cmp
in
int3
dec
std
push
adc
sub
mov
sub
ficomps
xchg
clc
fstl
aas
mov
repnz
sub
xchg
add
std
xor
iret
aas
or
loopne
aam
pop
adc
mov
add
sbbb
add
xlat
adc
sbb
shrb
frstor
fisubrs
sbb
pop
mov
in
jmp
aaa
jp
sbb
push
adc
test
mov
imul
add
in
mov
movsl
hlt
outsb
mov
sbb
fstps
mov
sub
fcomps
xor
lods
movsb
pop
pusha
push
push
mov
mov
mov
arpl
inc
scas
adc
lds
aad
xor
add
mov
fcoml
push
sbb
fsubl
push
cmova
xor
fstps
es
stos
push
or
jl
lret
imul
hlt
xchg
push
sub
fmull
andb
dec
jae
iret
call
mov
add
ljmp
jge
jno
jg
movsl
or
cwtl
xlat
pop
adc
add
jp
jl
push
mov
out
or
jge
xchg
mov
mov
add
push
inc
and
mov
test
ret
sbbb
pop
sub
loopne
aad
mov
xchg
cmpb
int3
jmp
into
mov
mov
in
or
push
bound
mov
pop
imul
xchg
pop
sbb
fdivrl
ss
push
or
inc
mov
xlat
or
add
pop
loopne
insb
test
das
mov
into
arpl
sbb
sbb
mov
mov
clc
mov
adc
add
rclb
sub
fimuls
arpl
sub
sbb
fmuls
jae
xchg
add
mov
mov
push
mov
mov
repnz
out
out
xor
xor
ret
fistps
xlat
push
sub
and
pushf
movsl
faddl
aad
insb
andb
leave
popa
insl
fwait
in
dec
aad
outsb
mov
push
outsb
xchg
loope
shrl
pop
jmp
sbb
xor
jle
adc
lret
subl
inc
stos
sbb
jle
push
andb
inc
jo
loope
sbb
js
sti
outsb
and
sahf
inc
xor
in
pop
mov
xor
sbb
xchg
jge
jae
sub
pop
roll
and
or
xchg
repz
aas
clc
mov
repnz
pcmpeqd
cs
cs
mov
or
sar
push
cmc
xlat
aad
mov
mov
int
xchg
sub
ja
adc
pop
xchg
adc
push
cmp
pushf
stos
push
out
aad
jne
pop
mov
fmul
or
imul
mov
push
dec
in
xor
adc
sub
sbb
dec
into
jno
fwait
lret
add
adc
cmp
jp
xorl
fisubrl
cmp
mov
mov
ret
xor
out
push
push
insl
xor
notl
and
orb
dec
lret
fstl
or
bound
jle
pop
mov
mov
sub
leave
push
jnp
rolb
pop
dec
rclb
test
mov
lods
adc
in
rcl
aas
pushf
cwtl
jl
jle
xchg
xchg
fildl
mov
ret
and
movsl
mov
in
fs
push
sbb
adc
lods
mov
icebp
and
sub
and
or
push
into
xor
jb
dec
mov
insb
pop
cmp
int
push
xchg
pop
sbb
dec
out
das
mov
sub
cmpsl
fidivs
mov
fcmovne
inc
or
mov
adc
push
sbbb
xor
je
movsl
popl
sarb
inc
push
jg
popa
jnp
dec
cli
movsl
test
mov
pop
push
adc
mov
aad
push
mov
or
add
gs
mov
test
inc
jp
movsl
je
loop
mov
imul
aas
push
aaa
xchg
xchg
out
lods
pop
dec
nop
lock
out
stos
cmp
jl
int3
cltd
mov
lds
hlt
push
pop
testb
incl
rcl
and
mov
imul
inc
xorl
loopne
imul
sbb
xchg
jle
popf
pop
sbb
sub
or
mulb
arpl
pop
stos
or
lret
jbe
xchg
out
out
test
or
mov
dec
call
add
stc
push
xchg
clc
mov
fsts
jl
cmp
adc
and
jno
xchg
call
mov
jmp
hlt
jb
cmp
outsb
push
adc
sti
imul
inc
pop
mov
pop
ficomps
mov
loope
pushf
add
adc
push
mov
insl
std
test
je
add
add
mov
les
sbb
ret
in
dec
mov
jmp
psrld
pop
outsl
jns
xor
mov
repz
xor
cmc
xchg
cmp
stos
sub
comiss
cmp
cs
inc
mov
inc
inc
pop
in
das
jle
add
jae
fldt
testl
push
inc
call
xchg
flds
add
aas
pop
adc
out
cmp
sarb
sub
sbb
xor
add
mov
aaa
mov
xor
loop
push
mov
sbb
xchg
sarb
pop
sbb
addr16
jnp
popa
cmp
negl
shrl
addr16
insl
pop
mov
scas
and
loope
adc
pusha
add
inc
push
movswl
in
mov
arpl
dec
fisubrs
cwtl
in
sbb
hlt
add
ja
pop
cmpsl
jecxz
sbb
nop
jl
in
ret
xor
cltd
neg
push
inc
and
arpl
imul
iret
sbb
mov
cmp
jne
stc
fcompl
cmp
jns
aas
xchg
out
lahf
fisttpl
imul
jge
loope
in
sub
push
xor
sub
shll
inc
sub
cmp
pushf
and
xchg
pop
hlt
clc
lea
into
in
jmp
and
jns
pop
pop
inc
ljmp
adc
push
cltd
aad
int
mov
or
cmpsb
pop
xlat
iret
jnp
mov
out
push
inc
jg
call
aaa
sub
push
lret
rcrl
outsb
jmp
mov
mov
cmovns
setne
adc
pop
lods
xchg
cs
cmpl
cmpsb
or
jle
fldcw
pusha
cwtl
and
cmp
adc
outsb
fninit
or
cmp
cs
fisubl
push
sub
sbb
pusha
mov
insl
pop
push
lahf
and
xchg
xor
repz
adc
adc
pop
push
push
mov
testl
mov
sbb
sahf
scas
sub
cmp
add
sti
mov
pop
addr16
adc
daa
jo
ret
jmp
arpl
pop
xchg
daa
popa
inc
mov
pop
ljmp
xchg
imul
xor
sub
or
pop
mov
mov
pop
stos
repnz
xlat
dec
hlt
push
pop
hlt
gs
fisubs
jnp
lods
popa
inc
testb
dec
test
mov
lds
repz
sbbl
addr16
sub
mov
das
shrl
jl
imul
push
out
jmp
adc
mov
dec
mov
test
lahf
out
lods
mov
mov
pop
jbe
jno,pt
repnz
int3
call
inc
sub
jg
and
xchg
int3
push
add
insb
inc
sbb
xor
and
roll
cmp
loop
rclb
xor
xor
in
dec
dec
pusha
jl
inc
lods
iret
loop
jbe
subl
lret
in
popf
arpl
test
enter
rcrl
andl
xchg
mov
adc
fistpll
cmp
idivb
fstl
jl
sbbb
test
jnp
pop
setl
cs
or
jp
cmp
in
fucom
mov
lret
ss
into
xchg
out
sub
stos
dec
dec
sahf
and
in
div
xchg
cs
addl
gs
out
pop
movq
sbb
das
rol
sbb
push
out
xchg
sar
pop
test
sbb
jbe
push
fsubrp
sub
mov
inc
or
dec
jbe
aas
or
icebp
and
lcall
add
out
das
adc
fmull
stos
jge
mov
fwait
push
cmp
ds
gs
jp
jbe
daa
ss
test
arpl
and
pop
imul
insb
test
jg
jne
dec
adcl
sbbl
sti
arpl
nop
filds
add
xchg
fs
push
xchg
jae
add
jecxz
push
inc
xlat
in
dec
fisubrl
xchg
shll
rcr
mov
cmp
ret
xchg
xchg
sub
cmp
cmpsl
sbb
mov
icebp
incb
bound
push
imul
jns
mov
mov
mov
add
push
mov
inc
aad
cmpb
inc
xor
movsb
mov
addr16
lock
lods
inc
add
and
mov
mov
push
xchg
not
enter
loopne
test
cmp
push
cmp
or
into
fs
jno
pushf
push
or
shld
xor
mov
sbb
or
adc
xor
test
int3
pop
inc
scas
and
pop
mov
data16
pop
incl
jno
push
xor
xchg
loope
outsl
jecxz
stc
sub
push
mov
stos
cmc
nop
lods
stos
pop
ja
loope
jb
mov
mov
cmp
movsl
add
int3
ljmp
ret
cmp
test
push
pop
daa
lock
cmp
or
scas
pop
test
or
rcr
inc
arpl
decl
jbe
sub
mov
xchg
cmp
std
mov
jg
std
xchg
or
push
and
push
inc
and
mov
cwtl
lods
loop
cli
idivb
icebp
movsl
fidivl
jmp
faddl
jl
push
ss
push
dec
fsubrl
jecxz
lods
push
scas
repnz
into
ss
and
push
xchg
lods
adc
sub
sub
mov
fnsave
inc
or
outsb
pop
inc
lea
cltd
or
add
dec
stos
pop
xor
mov
movsl
ficoms
imull
dec
pop
adc
mov
rcl
hlt
and
adc
insb
out
mov
mov
or
jmp
sub
nop
dec
std
shrl
and
pop
inc
cltd
xchg
mov
decb
jnp
ljmp
enter
testl
mov
repz
sbb
pop
int
je
scas
fisttpll
inc
xor
lcall
inc
dec
notb
mov
xchg
or
jp
subl
push
pop
mov
in
in
cmp
sar
hlt
and
mov
lret
xchg
xor
sar
mov
rol
shlb
xchg
rcr
in
cld
xor
enter
pop
pop
or
adc
or
cld
push
pop
mov
jb
or
popa
test
xor
mov
aaa
jo
loope
sar
scas
or
loop
lret
push
icebp
or
mov
cmp
ja
and
leave
stos
scas
rorb
neg
add
mov
ja
int3
pop
jp
mov
js
jmp
sub
fwait
insl
fnstsw
sbb
sbbl
mov
cmp
dec
mov
cwtl
pop
and
stos
add
push
cmp
push
mov
lahf
testb
aas
ds
sti
arpl
out
outsb
addr16
jbe
mov
clc
adc
lods
xlat
nop
add
xchg
xlat
inc
gs
xor
pop
dec
sbb
popf
iret
fidivrl
inc
jns
jno
push
xchg
dec
sbb
mov
jp
sub
test
outsb
inc
out
mov
inc
mov
push
fbstp
aaa
cli
add
xchg
fwait
sub
jg
push
pop
mov
xor
gs
lods
imull
js
add
mov
xchg
iret
and
jmp
mov
sub
cmp
scas
arpl
push
dec
or
xchg
inc
add
aam
cwtl
out
pop
ret
adc
mov
jge
ja
dec
sbb
test
pop
and
fldl
inc
jge
add
lea
hlt
inc
mov
scas
push
into
mov
sbb
sub
pushf
cmpsb
pop
shrl
inc
adc
adc
cmpsl
xchg
pop
push
dec
insl
mov
fldcw
jp,pt
orl
dec
mov
les
push
lea
sub
cmpsl
es
not
and
mov
jns
xlat
lahf
adc
dec
pop
inc
mov
js
scas
inc
adc
pusha
dec
mov
fistpll
in
fmull
xchg
cmpsb
lods
js
sbb
test
xchg
mov
jnp
ja
xchg
inc
jnp
push
in
arpl
jmp
rcll
sahf
xchg
mov
iret
hlt
insl
into
or
cltd
loope
mov
pop
popa
repz
lods
xchg
mov
pop
mov
int
or
loopne
ss
ret
adcl
push
add
leave
sarb
bnd
lock
das
gs
pop
mov
inc
push
icebp
xchg
pop
jne
loope
pop
lds
iret
jb
dec
jmp
std
fbld
sub
mov
xchg
sub
pop
out
or
int
mov
cld
mov
inc
add
fstl
xchg
jae
mov
sub
sub
lods
mov
push
and
jle
sub
enter
pop
das
fwait
movsl
cmp
jmp
sub
scas
dec
das
mov
sub
inc
out
imul
ja
push
testb
test
fcomp
xor
fwait
mov
sti
cmp
sbb
int3
xor
divl
pop
adc
test
inc
lea
or
sbb
mov
imul
call
xchg
mov
push
and
dec
shll
jno
mov
adc
mov
icebp
pop
sub
lock
jae
in
xchg
test
fdiv
inc
loope
jge
mov
mov
in
xor
mov
filds
pop
xchg
push
les
sahf
push
int
negl
adc
cld
icebp
jge
inc
jnp
jbe
inc
dec
cmp
movsb
mov
push
imulb
lds
movsl
sub
jmp
arpl
outsl
lea
xchg
or
mov
fsub
push
push
pushf
xchg
sub
cltd
dec
sub
out
jo
movd
iret
les
sub
mov
adc
lods
lahf
shrl
pop
lock
je
insl
fbstp
fwait
add
out
arpl
mov
pop
in
nop
lods
jne
jl
xor
cmpsl
test
std
pushf
sti
sub
stos
addb
aam
cmp
add
fwait
pop
not
ljmp
push
bound
lods
into
test
push
scas
gs
jbe
fmulp
mov
xchg
nop
sbb
mov
cmp
psraw
sub
dec
or
jmp
clc
pushf
rclb
and
sti
mov
test
ja
sub
mov
cmp
repz
add
push
test
pop
dec
add
sbb
dec
aam
pop
jecxz
sarl
lcall
dec
icebp
or
pusha
insb
in
jne
push
into
cmpsl
jo
inc
xchg
cmpsb
lods
add
jae
call
sbb
mov
push
mov
xchg
xor
inc
out
push
jle
dec
test
jmp
pop
or
mov
divb
mov
adc
push
and
andl
inc
ret
sbbl
xlat
test
mov
cli
je
pop
xchg
sbb
fdiv
sarl
shr
mov
add
xor
jo
mov
add
out
mov
cmp
in
mov
cmp
jnp
inc
jp
mov
stc
cmp
mov
insb
jp
mov
repz
repz
and
pop
ret
pop
pop
mov
shlb
jecxz
pushf
pop
scas
lds
testb
fdivrl
push
dec
dec
pusha
pop
mov
xchg
push
or
or
stos
or
add
aas
pop
dec
fnstsw
jg
pop
aaa
inc
xorl
mov
iret
push
mov
pop
test
test
sbb
stos
clc
filds
add
std
mov
push
inc
push
cli
add
out
adc
push
sbb
jg
xorl
adc
cmp
jmp
sbb
das
lret
sbb
xchg
mov
cmpsl
in
ret
out
int3
aas
je
fwait
orl
test
popf
aas
cmp
pop
movsb
lock
pop
or
into
fwait
cmp
sbb
lods
or
cltd
and
sub
pop
cld
pop
sbb
jo
dec
xlat
rclb
je
cltd
sbb
sar
sub
mov
and
sub
cmp
imull
and
and
loop
xor
stos
add
pop
out
jg
insl
or
xlat
mov
popf
leave
les
add
pop
push
mov
pop
dec
call
mov
std
pop
cmp
jl
arpl
fildll
ret
jge
adc
inc
mov
fdivrs
cs
es
push
fidivs
jp
adc
inc
sub
jmp
jmp
imul
test
and
jecxz
cld
je
loopne
sbb
or
outsb
mov
cmp
out
es
pop
ror
out
push
adc
xorb
movsb
cmp
xor
cmp
inc
cmp
adc
xor
das
jmp
lret
enter
jnp
add
je
inc
pop
push
inc
stos
cmp
xlat
incl
gs
pop
dec
sbb
sbb
adc
iret
data16
pop
mov
jl
shrb
cmp
ja
mov
mov
pop
dec
jne
jae
lahf
ret
in
addb
push
pop
iret
mov
cmpsl
xchg
movsb
and
test
push
sbb
js
inc
dec
std
mov
add
repnz
jo
popf
scas
cli
push
sbb
push
sbb
or
dec
jae
sbb
mov
sti
adc
dec
rcrb
fsubrp
mov
lahf
jecxz
aaa
mov
leave
cmp
jp
aam
push
dec
fadds
sub
jbe
in
mov
xchg
cmp
insb
or
sbb
out
xchg
cwtl
push
dec
xchg
jge
loop
lods
cwtl
je
lret
inc
cmc
inc
xor
push
out
out
xor
je
xor
xchg
rcl
pop
jb
xor
loope
push
and
lods
adc
adc
xchg
ljmp
les
aam
jg
iret
xlat
test
mov
push
mov
bswap
cld
hlt
lea
mov
push
shlb
call
loope
and
cld
mov
or
inc
popl
sub
andl
js
fidivl
cmpsl
add
mull
in
ret
mov
lcall
xchg
loop
sub
cmp
shll
mov
or
mov
inc
xchg
sbb
insl
out
pushf
mov
dec
fisubrl
jae
orl
out
add
xchg
pop
jp
mov
pop
or
push
cltd
jae
scas
das
jl
ror
lods
cmp
clc
cld
cmp
inc
sub
sub
xchg
jb
jno
mov
out
loop
xchg
push
ret
sub
rcll
pop
mov
stos
addr16
mov
rcll
mov
in
bound
sbb
jo
or
scas
jg
fists
fidivrs
push
pop
mov
xor
fldt
jl
sti
sahf
mov
dec
xchg
inc
or
std
in
mov
xchg
xchg
shlb
pop
and
out
icebp
mov
fldcw
sbb
ljmp
xor
pop
xor
test
push
repnz
pop
sub
and
mov
sbb
orb
fldenv
jmp
dec
cmp
call
rcrb
mov
fsub
hlt
jns
imul
fidivs
cli
add
fildl
subl
icebp
in
cmc
sti
inc
ja
pop
adc
fdivp
fwait
loopne
sub
push
mov
in
das
mov
push
in
mov
inc
leave
jp
sti
lock
inc
mov
psubsw
arpl
insl
cmp
push
rcll
jbe
mov
xchg
cmc
sbb
or
push
cmp
int
sahf
sub
sub
pop
lods
xchg
mov
jp
out
fsubrs
test
pusha
sub
out
outsb
sub
and
lcall
lahf
inc
popl
std
test
ljmp
jmp
pop
scas
inc
sbb
data16
jge
gs
mov
push
sbb
add
aad
lods
cltd
xor
js
sub
add
testb
inc
jne
jae
xor
test
fidivrs
ds
push
add
inc
incb
mov
mov
jecxz
xchg
je
jmp
andl
pop
stc
pop
lret
mov
sub
pop
popf
mov
faddp
lahf
mov
xlat
loope
pop
outsl
cmpl
mov
lods
xchg
push
les
dec
and
dec
mov
push
fsubp
movsb
xchg
dec
add
or
imul
xchg
out
mov
aaa
aaa
fs
inc
sub
push
mov
or
mov
fiaddl
repz
jge
add
insb
aad
jp
inc
pushf
lcall
int
call
orl
test
std
or
jo
aas
std
repz
and
out
dec
pop
mov
jl
add
and
jl
imul
dec
stos
adc
faddl
pushf
sbb
movsl
pop
jle
jmp
inc
icebp
ljmp
pop
das
and
dec
cmp
push
xchg
lea
mov
movsl
stc
enter
fs
jne
adc
mov
sar
mov
out
cld
xchg
ljmp
dec
lahf
inc
cmp
int3
je
je
stc
insl
je
mov
ja
rcll
dec
leave
sub
add
or
shll
bound
int3
inc
adc
cwtl
push
or
fcoms
adc
mov
dec
or
pushf
fisttpll
pop
in
mov
test
mov
mov
sub
push
push
je
inc
jae
imul
xor
sub
repz
bound
mov
and
cmp
and
cmp
clc
mov
cmp
adc
inc
ja
lcall
xchg
adc
mov
fsubs
out
test
jmp
inc
and
iret
popa
mov
test
cmp
cmpsb
inc
call
lret
sub
pop
adc
or
test
or
and
xchg
mov
dec
sbb
mov
scas
jg
dec
jle
pop
stc
jb
push
cmpsl
cli
or
stos
int
sarl
sti
cmp
call
lret
xchg
add
inc
xchg
add
fs
pop
flds
leave
ficomps
dec
stos
cs
sub
push
clc
adc
clc
pushf
push
sub
xor
inc
inc
cs
arpl
out
and
inc
pop
cmp
fistpll
inc
aam
pop
mov
ficompl
test
sbb
or
pushf
hlt
pop
inc
add
inc
gs
jp
bound
and
mov
mov
mov
rcll
int3
adc
ss
inc
pop
xchg
cwtl
into
sbb
sahf
movsl
mov
in
call
repz
add
cmp
cmp
mov
orb
xchg
inc
xchg
ret
into
cmp
add
loopne
in
mov
push
or
fnstenv
int
inc
out
lret
daa
and
cmp
lret
out
cltd
daa
push
ss
pop
sbb
push
sbb
shr
mov
sbb
jl
mov
push
jmp
ja
pop
divb
inc
dec
pop
xchg
stos
push
aas
push
inc
pop
xorb
sbb
xchg
inc
insb
pushf
insl
testb
out
sbb
fnstcw
cwtl
fdivrl
scas
hlt
pop
xor
pop
rolb
imul
addb
js
out
jl
and
and
pop
jle
mov
pop
dec
mov
jmp
push
mov
jae
lods
inc
idivl
jne
jg
push
sahf
push
lret
call
xchg
aaa
mov
fstpl
insl
and
fnstcw
mov
or
lds
negb
mov
gs
movsb
adc
jl
je
orb
repz
ret
xor
dec
fs
fmull
arpl
push
in
repz
fildl
pusha
xor
cltd
push
in
fstpl
cmp
mov
cld
faddl
and
mov
push
mov
insb
cwtl
ret
xor
xchg
sti
inc
push
call
andl
push
mov
or
and
fnsave
push
icebp
scas
and
mov
push
jnp
dec
cs
push
push
sub
inc
aas
cltd
shl
arpl
into
push
push
add
cmp
ja
and
push
adc
adc
shlb
or
pop
leave
or
sti
cmpsl
push
popf
xchg
add
mov
pop
mov
dec
or
in
movsl
lret
xchg
sub
add
mov
adc
and
int3
or
xchg
les
popl
mov
call
sub
sahf
pop
inc
pop
inc
mov
push
sub
stos
adc
in
xor
xor
in
hlt
mov
cld
add
int
adc
or
ds
inc
stc
xor
mov
push
inc
fs
jb
sub
push
push
jle
call
pop
repnz
dec
imul
rorl
cld
jo
hlt
add
test
fsubrs
notl
and
xchg
or
jb
ficoms
xorl
in
sub
jae
shr
or
or
xchg
cli
xor
inc
add
sub
and
jge
test
repnz
jg
cli
and
lods
jmp
mov
sub
lcall
in
dec
dec
shrb
pop
mov
outsb
sub
je
cmpsb
lock
dec
mov
and
dec
cmc
push
out
pop
mov
push
lods
lcall
popa
xchg
mov
push
mov
xchg
jp
adc
call
jno
lahf
cwtl
jne
popa
push
inc
les
repz
mov
pop
inc
pop
ds
shll
xchg
test
pop
ficoml
insl
dec
mov
adc
push
mov
lahf
add
fs
bound
scas
sar
dec
xchg
xlat
aaa
xchg
push
mov
ja
push
push
mov
aas
dec
es
xor
fisubrs
mov
push
mov
dec
mov
pop
aaa
jb
cmc
mov
iret
xor
add
sub
add
adc
adc
imul
adc
pop
out
aam
out
and
stos
xor
mov
pop
xchg
push
aam
stos
dec
repnz
sbb
and
mov
stos
cwtl
popf
sbb
jne
and
mov
inc
fwait
mov
xor
rcrb
pop
lret
sub
jle
popa
mov
xchg
xchg
fs
and
fcomps
out
cmpsl
push
mov
or
mov
pop
stos
dec
or
test
cmp
dec
cltd
loope
dec
add
aad
jns
push
fnstenv
in
in
mov
aad
mov
fnstenv
xchg
nop
ds
iret
add
xor
mov
daa
scas
pop
and
or
cltd
shlb
popf
add
and
mov
mov
xchg
mov
stos
xchg
cmp
sahf
ret
out
jg
outsb
in
sbb
cmpsl
pop
fldt
jae
out
pop
pop
xor
and
fxch
jo
enter
push
add
scas
pop
data16
shrb
pop
inc
leave
cmp
out
shlb
and
iret
ret
or
jl
arpl
fwait
push
lock
out
gs
mov
adc
xor
ds
mov
cmpsl
outsb
insl
cmp
ficoms
cli
out
or
dec
pop
lret
cmp
mov
sub
lods
addr16
sbb
push
das
pop
testb
push
dec
mov
xor
cmpsl
and
popf
pop
dec
mov
fs
bound
fstl
mov
push
push
lret
lds
add
sbb
std
sarb
cs
sbb
jg
jl
ret
pop
ljmp
andl
inc
loope
and
int
lret
fnsave
push
mov
xor
sar
aas
stos
mov
xor
jg
test
lret
and
sub
adc
cmp
mov
add
xor
fsubrs
jmp
xchg
test
pusha
dec
xchg
pop
cmp
mov
aas
dec
pop
stos
jmp
sbb
xor
ret
adc
and
movsl
mov
pop
mov
test
shlb
inc
cmp
lods
adc
lea
xor
mov
adc
inc
jecxz
js
mov
dec
daa
lret
cmp
fstpt
cmp
pop
sub
sub
addr16
aas
int3
imul
xchg
lret
xchg
es
fs
imul
andb
dec
mov
dec
stc
jp
xchg
jle
stos
xchg
ss
fidivrs
jbe
gs
pushl
push
cld
aam
jmp
xchg
std
add
fs
fstl
mov
shlb
scas
ret
jge
shlb
int
ja
cmp
fnstenv
imul
int3
loop
ljmp
mov
outsb
cmp
incb
adc
lods
out
nop
push
jmp
data16
icebp
fstpl
les
cmp
sar
stc
mov
stc
inc
adc
mov
jno
jne
dec
jae
fidivrl
mov
cltd
jno
js
cmpsl
sahf
adc
pslld
adc
sbb
mov
out
jge
push
pop
rcrl
sbb
lcall
xchg
cmpsl
dec
loop
sub
and
adc
or
int3
mov
lcall
test
push
xchg
xor
imul
push
cltd
shr
xor
mov
repnz
or
mov
cmp
mov
push
clc
es
cmc
mov
sbb
inc
ret
repz
call
pop
nop
scas
sbb
dec
shll
mov
jmp
bound
and
sbb
inc
xchg
out
jb
and
popa
xor
mov
insl
xchg
cmpsl
push
sbb
sbb
lahf
ficoml
ss
mov
sub
jecxz
add
mov
loopne
mov
fsubs
xor
cmpsb
and
jecxz
loopne
js
jge
push
int3
loope
inc
adc
lcall
cld
sti
enter
stos
call
cmc
xchg
jge
xor
dec
dec
mov
or
fcmovne
xlat
xchg
repz
int
xchg
or
mov
arpl
in
or
jl
sbb
add
mov
mov
mov
add
ret
adc
in
in
dec
sub
mov
insb
mov
addr16
sbb
sete
pop
bnd
movsb
test
cli
pminsw
incl
fnstenv
jge
jmp
jbe
dec
femms
mov
mov
adcb
push
mov
arpl
faddl
shlb
jb
push
inc
out
loope
repnz
or
fdivp
out
gs
xor
xor
cwtl
les
shll
add
cmp
mov
add
sub
cltd
mov
cmp
scas
cld
add
pop
insb
out
xor
adc
and
sub
inc
jge
mov
xor
mov
xor
sbb
into
xchg
mov
lock
outsb
lret
jmp
pop
sbb
sqrtps
push
ret
pop
notb
mov
cli
mov
filds
movsl
aas
xchg
hlt
push
fstl
mov
aas
std
mov
jb
fs
mov
inc
xor
hlt
sbb
dec
xor
mov
dec
hlt
lret
adc
push
mov
xchg
es
xchg
push
push
shll
push
adc
mov
mov
sbb
xor
xchg
mov
cmp
pop
xchg
mov
daa
rorb
daa
mov
ss
sbb
das
pushf
push
fwait
loop
xor
pop
dec
push
pop
loope
sbb
sbb
je
movsl
lahf
lock
aaa
es
dec
push
pop
cmp
add
mov
push
xor
push
cltd
xor
sbb
lods
xchg
stos
clc
popf
loopne
movsl
iret
xchg
daa
jp
rclb
stos
mov
jb
pop
int3
js
nop
mov
mov
mov
cmpxchg
push
mov
lret
push
push
mov
pop
pushl
movsl
insl
jmp
dec
and
and
and
je
add
sbb
mov
or
xor
sti
aaa
mov
dec
inc
push
push
push
sub
jg
lcall
mov
fs
fwait
cli
stc
roll
cmp
nop
cmp
lret
in
icebp
jae
cmc
call
mov
and
jo
or
aad
insb
and
dec
std
loop
mov
lahf
adc
popa
xor
enter
iret
sub
fisttps
inc
lret
or
adc
out
or
push
dec
in
arpl
mov
xlat
cld
jmp
sbb
xchg
popf
aad
xor
pop
sbb
int
lcall
insl
shl
or
adc
xchg
dec
js
ja
xchg
cmp
adc
adc
jmp
mov
pop
scas
lods
cmpsl
ffreep
sub
in
mov
in
fists
loopne
lret
mov
jle
sbb
lods
mov
push
stos
insb
shrl
mov
aas
add
ja
popf
dec
mov
dec
dec
test
fldenv
ret
jnp
inc
adc
push
xlat
xchg
fsubp
jmp
xchg
test
sbb
cwtl
jne
dec
mov
fldl
imul
inc
inc
xor
jb
or
stc
leave
xor
xchg
adc
add
add
inc
or
flds
sbb
push
fists
or
dec
fbstp
test
in
movsb
xor
shlb
xchg
jge
mov
stos
mov
mov
push
rorl
stc
or
mov
fwait
jnp
xchg
stos
out
adc
pop
jne
outsb
dec
je
pop
in
test
fisttpll
inc
pop
xchg
mov
xor
cmpl
adc
ds
inc
xchg
jge
inc
xor
dec
inc
mov
mov
lea
orb
cs
or
ds
test
iret
push
lods
jg
xchg
or
sbb
shlb
int
cwtl
cmp
adc
pop
aaa
stos
push
inc
jns
scas
test
out
stos
xlat
decb
xchg
loope
xchg
mov
cmc
outsl
idivl
aam
std
mov
add
xchg
andl
xorb
fcmove
loop
mov
das
cld
out
jne
mulb
dec
insb
mov
sbb
sbb
inc
jno
andb
testl
ret
push
enter
mov
std
ds
pop
bound
aam
cmp
sar
int3
push
xchg
pop
and
push
lds
jle
xor
cwtl
push
pop
call
aam
arpl
mov
imul
dec
mov
mov
xor
imul
lahf
mov
dec
and
subb
insb
and
dec
xchg
jo
cmp
cwtl
fwait
pop
daa
mov
test
adc
ds
out
pop
es
repz
mov
jno
xchg
mov
std
push
mov
or
mov
fldenv
aam
arpl
adc
cmp
js
test
add
push
fisubl
jg
popa
mov
sub
loope
xchg
sbb
out
jle
inc
xor
jo
and
add
std
add
cmp
inc
inc
loope
ljmp
cmp
jle
mov
xor
movsb
xchg
xchg
nop
push
jae
jl
aam
and
adc
fstpt
mov
fidivrl
scas
mov
int
cld
adc
cli
push
fsts
adc
mov
inc
dec
daa
inc
add
sub
cltd
inc
mov
fstpl
xchg
jp
adc
scas
inc
loope
sub
ja
push
out
imul
rolb
cli
push
ljmp
or
sub
inc
jne
mov
xor
mov
ljmp
lret
adc
rcrb
jmp
jnp
dec
outsb
das
les
pop
idivl
mov
inc
ret
leave
imul
push
pusha
xor
ljmp
out
jg
xchg
pop
es
xor
mov
pop
hlt
adc
sbb
int3
in
dec
mov
sahf
repnz
dec
mov
mov
sub
sbb
inc
imul
pop
push
stos
sub
loope
es
jb
fwait
dec
or
es
leave
adc
loopne
adcl
popf
dec
movsl
into
movsb
pop
aas
cltd
scas
jbe
pushf
mov
nop
loope
or
aam
push
sub
jb
mov
xchg
and
jg
adc
sbb
fildll
das
nop
lea
jbe
push
dec
and
fisubs
outsb
jp
sahf
out
loop
stos
scas
dec
pop
xor
pushf
fucom
int3
call
mov
xchg
fbld
jge
shlb
dec
testl
sahf
and
sub
mov
mov
add
adc
jp
cmp
movsl
pop
in
insb
lds
or
in
stos
in
cmp
scas
inc
popa
orb
jl
shlb
xor
imul
sti
pusha
cmc
mov
pop
mov
shr
push
bound
pop
clc
cmpsb
adc
mov
lock
jmp
insb
sub
jns
insl
jmp
fadds
das
stc
jl
iret
fstl
inc
xor
mov
xchg
add
cwtl
pop
sbb
leave
insb
outsl
out
shlb
and
stos
loope
adc
dec
mov
fsubrl
fwait
inc
sbb
mov
test
sbb
fcmovnb
hlt
scas
xlat
mov
mov
cmp
ljmp
push
bound
push
call
fidivrl
dec
out
enter
push
sbb
ds
movaps
dec
add
push
mov
ja
push
cwtl
pusha
sub
test
or
divl
adc
cmovo
cmp
and
pop
inc
pushl
call
xlat
push
imul
dec
mov
sub
cld
add
push
mov
cs
test
ja
test
cmp
in
jno
ret
jae
sub
push
call
mov
or
mov
int3
xchg
jp
lods
jmp
inc
addr16
push
dec
in
lea
push
mov
insb
dec
pop
fwait
or
xor
inc
cmp
mov
mov
and
xchg
cmp
cmpsb
jno
addb
cmp
stos
mov
inc
push
ja
pop
xchg
bsf
or
je
and
xor
inc
mov
cltd
pop
mov
adc
addr16
dec
or
and
or
test
ret
out
or
arpl
or
dec
or
mov
dec
push
adc
fwait
out
icebp
jne
inc
cli
outsb
push
in
in
pop
cs
stos
sub
mov
mov
call
dec
loop
mov
dec
fstps
rorl
cmp
xchg
out
or
inc
push
adc
lock
inc
out
movsb
push
shll
or
xor
fsubrl
and
leave
ja
or
or
paddb
cvtps2pd
inc
fxch
cmpsl
dec
in
xchg
into
pop
cltd
iret
mov
xchg
not
push
mov
addr16
cmp
loope
ret
adc
jecxz
loop
and
add
stc
out
adc
adc
adc
ljmp
test
mov
iret
outsb
and
nop
pop
pop
xchg
sub
jge
movsb
cmp
mov
fs
dec
add
shlb
cld
in
push
add
push
loop
addr16
xchg
dec
inc
ret
stc
in
cltd
push
popf
insb
inc
or
inc
push
push
in
mov
shr
cmpsb
out
lret
push
orl
aas
fidivrs
lret
test
outsb
mov
rcl
into
repnz
insb
pop
pop
mov
and
push
js
out
xchg
push
cltd
scas
pop
adc
js
inc
loopne
or
cmp
fldt
or
xchg
xor
sub
pop
out
mov
es
jb
adc
add
push
mov
add
xchg
popa
pop
dec
sub
fmulp
mov
mov
or
jecxz
xor
add
inc
cmc
gs
popa
cmp
xchg
shlb
pop
jmp
popa
in
stos
repnz
add
test
outsl
xchg
test
xor
add
ret
pop
dec
xchg
mov
dec
lods
and
fnstsw
es
stos
mov
stc
push
xchg
cwtl
popa
pop
xchg
pop
jmp
div
sbb
les
pop
call
or
decb
roll
iret
psllw
hlt
mov
jle
cmpsb
xor
aaa
movsl
lods
mov
xchg
ja
in
and
xchg
push
scas
int
stos
ret
out
jmp
mov
int
lret
xchg
pop
xchg
aam
jo
adc
orl
scas
xchg
mov
sub
mov
cmp
cmp
popa
mov
or
sbb
or
push
and
popa
fistpl
mov
push
jmp
adcl
fsubrl
dec
pop
rcll
lret
xchg
aas
jg
xor
in
sbb
xchg
in
ret
daa
test
mov
or
into
jmp
and
ljmp
xor
negb
add
insb
mov
mov
js
cmp
push
in
jbe
popa
fidivs
xchg
ffreep
aas
mov
iret
cltd
fldt
je
test
insl
mov
les
or
mov
iret
test
pop
and
leave
jmp
push
adc
jmp
xchg
mov
fwait
xor
inc
repz
faddl
jb
stos
add
popl
arpl
cli
test
xchg
mov
sahf
ffree
adc
ljmp
sti
push
hlt
not
movsb
shll
loop
pop
pusha
addl
jbe
mov
adc
inc
mov
ret
arpl
mov
or
cmp
jmp
loope
push
iret
out
stc
add
lods
pop
gs
stc
adc
outsl
xchg
scas
aam
loope
add
clc
sub
jb
pusha
or
mov
fs
dec
jno
pop
imul
mov
and
sbb
jecxz
iret
scas
xchg
scas
adc
push
mov
xchg
xchg
pushf
test
jne
mov
dec
fs
fstpt
cld
sbb
stos
xchg
enter
xchg
int
pop
cli
dec
int3
test
sbbb
mov
mov
mov
insl
mov
lahf
lret
fsubrl
sti
imul
inc
popl
jns
arpl
sarl
pop
rorb
pop
fimull
outsl
push
dec
fadd
mov
mov
cmp
cli
xor
xor
adc
cltd
sub
pop
adc
or
loopne
dec
or
mov
daa
addl
add
call
out
cmp
adc
dec
inc
sahf
incl
mov
xor
inc
dec
movb
leave
sti
inc
lea
sbb
loope
mov
xchg
push
mov
or
push
mov
flds
filds
hlt
push
aad
outsl
push
xor
imul
push
flds
add
inc
lea
or
cmp
inc
and
call
iret
testl
js
adc
cmp
push
pushf
mov
or
movsb
test
push
repnz
and
dec
fcoms
fs
and
jp
push
pop
cmpsb
shr
popf
outsl
sarl
push
pop
sbb
inc
lret
xor
mov
call
jmp
adc
add
add
shl
aam
repz
xchg
fsubrs
jp
mov
adc
data16
or
push
cmc
enter
add
sar
stc
ljmp
push
sub
out
pusha
addb
in
ret
jbe
sub
and
or
mov
push
sub
cmpsb
mov
jecxz
std
inc
in
dec
ret
pop
je
and
and
mov
mov
sub
add
add
into
and
sub
cli
loop
sar
push
mov
cld
dec
repz
or
sbb
adc
movsl
nop
shll
mov
sub
movsb
cmp
in
lret
pop
movsb
cmp
and
push
imul
push
loope
addr16
insl
jnp
je
ss
sbb
scas
xchg
jp
stos
mov
sbb
ret
mov
pop
cmp
jns
into
mov
pop
push
stos
cld
cmpsl
out
stos
gs
clc
pop
int3
jne
enter
mov
sub
sbb
sti
icebp
adc
inc
std
iret
inc
mov
mov
ret
cmp
aad
jg
loope
lods
mov
lods
cltd
idivb
push
cmc
sub
lods
jne
pop
sahf
adc
xchg
pop
push
loope
xor
sbb
rcll
in
mov
adc
push
ret
push
add
shll
cwtl
lods
icebp
dec
incl
movsl
mov
aam
dec
adc
sub
or
cwtl
fidivl
dec
scas
sbb
jge
pusha
or
mov
out
cmp
xor
loop
push
pusha
in
ficoml
push
add
popf
xchg
popa
in
and
cld
add
bound
sbbl
pop
pop
cli
and
aaa
in
inc
xchg
sub
add
dec
adc
sub
jmp
bnd
sahf
cmpb
mov
push
or
cld
test
insl
xchg
mov
fbld
inc
inc
sub
daa
xor
mov
scas
mov
and
or
xchg
cmc
jl
mov
insb
fadds
xor
out
sti
jne
cld
mov
push
xchg
or
jo
mov
push
outsb
dec
or
sti
in
pop
mov
push
xchg
dec
jl
hlt
xchg
lods
xchg
std
mov
mov
xor
inc
aad
push
cmpsl
xchg
lret
xchg
ret
mov
push
in
sub
std
and
dec
and
daa
aaa
sub
lods
mov
paddq
out
adc
stos
repnz
cmp
jmp
orl
xchg
lods
adc
ret
pushf
sti
mov
fldt
add
mov
xor
aad
shr
enter
pop
popf
jns
mov
scas
fidivl
fsubs
adc
mov
xchg
lahf
xorb
pop
repnz
push
or
rcrl
xchg
push
out
jnp
out
daa
pop
insl
lds
popf
lods
stos
lods
enter
popf
cwtl
sbb
lea
pop
pop
inc
mov
leave
imul
das
mov
scas
mov
xchg
mul
mov
sahf
jns
imul
ret
xor
jbe
ds
mov
inc
add
fwait
jmp
jmp
gs
lds
es
incb
and
ljmp
push
pop
or
mov
mov
outsl
repz
std
sbb
pop
inc
lock
sub
daa
sbb
mov
and
hlt
or
mov
and
cmc
into
jbe
pushf
jle
movsb
insl
push
in
pop
jbe
xchg
cmp
addr16
pop
jno
sub
sub
mov
jb
pusha
test
dec
in
add
xchg
mov
je
xor
mov
lods
mov
or
mov
mov
sbb
xchg
in
push
aas
mov
add
xchg
lods
pop
inc
and
adc
push
adc
cmp
out
cmp
aas
mov
data16
inc
cmp
jecxz
loop
add
imul
divl
es
inc
mull
clc
pushf
cltd
inc
sbb
inc
jo
inc
outsb
jns
xorl
fdivp
outsl
xlat
lods
sbb
pop
movsb
test
jg
gs
out
mov
jns
hlt
mov
in
mov
push
push
fcomps
inc
fwait
lds
add
inc
cmpsb
mov
movsl
mov
nop
inc
imul
dec
bound
jae
stc
mull
mov
mov
out
arpl
push
lods
leave
cmp
int3
aad
jne
cmpsb
cmpsb
add
insl
xor
xchg
pop
add
out
and
and
pop
incl
outsb
push
cmp
push
pop
inc
ret
jo
xchg
pop
cld
fcoms
fwait
push
shrb
dec
sarl
push
sbbl
icebp
test
ds
jle
inc
in
add
orb
pop
mov
xor
imull
adc
xchg
in
xor
xchg
cmp
mov
mov
shrl
xor
loopne
push
jbe
aam
dec
lcall
mov
sbb
jbe
ds
push
outsb
jle
pop
fstl
and
outsl
push
cmp
or
repnz
jecxz
mov
jge
ret
out
pushf
or
or
repz
dec
mov
push
and
je
push
cli
mov
pusha
xor
iret
dec
dec
push
test
add
push
clc
dec
ds
jg
aaa
mov
mov
iret
jnp
ret
jge
sub
adcb
test
stc
movsl
ja
cwtl
shr
aam
inc
mov
aas
adc
inc
imul
or
mov
movsl
rolb
pop
mov
adc
shll
jb
mov
stos
testb
sbb
push
mov
stos
pop
cmp
xchg
add
sbb
mov
lcall
xor
shll
clc
cmp
stos
mov
pop
fisttpl
cmc
js
pushl
mov
popa
adc
pop
insb
shlb
xor
ljmp
or
jae
popf
test
dec
push
ljmp
push
mov
xor
cmc
xchg
lcall
in
shll
fstpt
sub
mov
lods
int3
int
mov
pop
loopne
js
bound
in
xchg
cmp
gs
lea
jle
mov
xchg
pushf
ljmp
mov
add
and
pop
cs
push
popa
push
jge
daa
mov
pop
shrl
cmp
cmpsl
fsubrs
nop
scas
out
fwait
outsl
add
cmp
sbb
mov
scas
es
rorl
and
into
int
jae
mov
mov
or
cld
dec
jl
cmc
es
jae
adc
aam
repnz
pop
les
pop
jb
cmp
lock
sub
cwtl
inc
movsb
jp
adc
inc
arpl
sbb
test
mov
jnp
pop
repnz
push
xor
push
pop
ret
test
mov
jo
pop
mull
lahf
gs
pushf
push
aam
enter
push
sbb
cmpsl
and
fwait
pushl
jns
push
jle
popa
in
movsl
xor
sub
sub
xor
adcl
pushf
dec
xchg
push
add
xlat
adc
dec
cltd
and
inc
ja
lcall
fdivrp
rcll
mov
loopne
pop
and
jmp
jmp
mov
mov
in
mov
dec
mov
out
inc
sub
adc
or
out
mov
push
push
jns
popf
into
sub
mov
mov
daa
call
in
in
ror
mov
fmul
sub
push
loop
push
popa
pop
pop
and
jecxz
push
cld
dec
lcall
sub
inc
imul
add
inc
fistpl
pop
sar
insb
lock
rcrb
imul
mov
xchg
sub
mov
pop
mov
arpl
add
clc
inc
mov
sahf
popf
shlb
loope
xorb
dec
mov
cs
sbb
test
jb
jo
sbb
jbe
push
sbb
test
push
mov
jne
pusha
xor
pop
sbb
popa
add
ja
es
xchg
push
lock
scas
into
rcll
ljmp
and
in
mov
inc
pop
lds
adc
or
push
jnp
pop
xor
mov
sub
inc
out
ret
cmp
sbb
aad
cmp
ficoms
shlb
jno
lret
xchg
jge
dec
in
push
xchg
lahf
sbb
dec
cmpsl
mov
outsb
sub
and
pop
aad
jmp
jge
out
bnd
adc
fnstcw
mov
or
mov
ret
sub
jl
cwtl
sbb
imul
rolb
jo
and
lods
xchg
or
in
ret
dec
xchg
inc
pop
test
shlb
and
cli
aaa
mov
or
es
dec
das
add
mov
pop
icebp
popa
cwtl
jo
inc
jae
or
lret
sub
add
dec
ja
call
test
leave
mov
lcall
push
ret
in
test
mov
lods
ret
movzwl
xor
and
mov
lods
add
jbe
in
dec
sub
add
dec
sbbl
loopne
pop
insb
mov
popf
push
jbe
cmp
sub
ret
cmp
ja
shl
aad
inc
scas
adc
mull
mov
mov
push
enter
jae
push
rcrb
jecxz
sbb
shlb
lods
jns
data16
or
pop
imul
or
daa
jno
adc
outsb
call
xor
dec
scas
push
dec
scas
cwtl
arpl
hlt
xor
xchg
mov
nop
in
pop
aaa
push
rcll
add
les
shrb
dec
hlt
sub
sbbl
mov
icebp
out
jne
rclb
dec
out
ss
and
inc
out
pop
mov
add
fwait
cmp
and
cld
cmp
sub
stc
jne
test
push
pop
cltd
add
addr16
out
dec
insb
loope
and
loopne
pop
inc
fldcw
push
jg
mov
sub
cmp
enter
add
and
cwtl
stos
push
xchg
fildl
pop
mov
xor
cmp
adc
cmp
xchg
xchg
outsl
pushf
test
imul
jo
shl
fwait
sub
je
dec
cmpsl
cltd
add
sbb
pop
out
xor
mov
fidivrl
and
jne
sbb
mov
inc
in
es
sub
subl
or
push
mov
cmpl
gs
dec
aas
out
inc
outsl
addr16
jge
cmp
loope
add
mov
sub
js
test
dec
ja
or
iret
cmp
addr16
rcll
loop
dec
jae
push
push
sbb
test
ss
cmp
xchg
jnp
repz
dec
push
push
movsb
xchg
sub
xchg
sbb
mov
pop
dec
ds
inc
xor
loopne
lret
js
out
mov
pop
mov
test
ds
jl
in
jne
xchg
xchg
notl
dec
pop
or
ror
shlb
cmp
lea
mov
stos
jmp
in
pop
icebp
cltd
jbe
repz
jmp
xchg
mov
loope
out
popl
jl
and
mov
jp
mov
adc
orl
clc
mov
sbb
inc
ss
in
jne
cmp
inc
xchg
or
test
or
dec
pop
ret
pop
and
testb
jecxz
mov
scas
add
mov
pop
jge
lret
andb
aas
ja,pn
mov
cltd
xchg
sbb
adc
jge
in
sbb
xchg
daa
iret
lods
cld
or
jbe
fidivl
or
sarb
out
fiaddl
fwait
idivl
push
xchg
adcb
loopne
mov
lds
lcall
mov
mov
popf
adc
cmpsb
adc
mov
xor
push
in
or
inc
xchg
mov
pop
push
and
xchg
jb
lret
dec
lock
std
pop
les
jnp
daa
pop
cwtl
mov
dec
pop
int
add
jb
movsl
sbb
xchg
push
pop
sub
fwait
dec
push
inc
mov
pusha
aaa
push
dec
daa
cltd
mov
and
push
dec
vcvtpd2psx
pop
xchg
ljmp
ljmp
stc
mov
xchg
movb
sub
xchg
ljmp
ret
push
lret
jle
mov
aam
ljmp
test
js
js
mov
dec
adc
cld
pop
sub
push
fisttpll
jbe
int3
nop
push
pop
mov
js
mov
jns
add
mov
and
sub
pop
daa
jp
xor
push
je
jns
fstps
add
xor
xchg
mov
data16
mov
sbb
jae
das
mov
loopne
cmp
push
xchg
loopne
nop
mov
lcall
dec
jns
inc
push
sti
rolb
in
or
jg
ret
push
jle
sbb
int
cwtl
sbb
stos
sub
loopne
cmp
jbe
push
jne
mov
fwait
lret
xor
movsb
inc
fmuls
push
je
adc
aam
mov
popa
pop
and
or
inc
test
xchg
add
int
iret
inc
adc
xchg
mov
or
adc
stc
scas
sarl
dec
fcmove
jno
lock
cwtl
jp
jae
dec
cmp
ret
xchg
lds
mov
stos
and
xchg
inc
outsb
mov
fldl
jge
jg
pop
lahf
movsb
cmpsl
adc
or
cmpsb
movsb
cmpsl
out
daa
jnp
sub
jns
stos
cmpl
push
adc
or
mov
imul
sub
imul
push
jle
sbb
sbb
enter
repz
loop
loope
pop
push
imul
sti
add
sbb
aam
je
aad
iret
sbb
inc
rcll
rol
add
pop
push
out
int3
rorl
xchg
out
pop
adc
and
cmp
push
mov
jl
mov
addb
or
sbbb
addb
fdivrl
dec
mov
xchg
or
cmpsl
loope
lahf
out
inc
cmpsb
or
cs
ret
pop
add
xchg
cmpsl
out
inc
pop
jge
dec
lret
push
fs
dec
push
xor
shll
jbe
int3
cld
or
xchg
imul
mov
dec
jo
inc
jle
inc
push
lret
pop
fdivrs
adc
and
fiadds
push
clc
iret
std
ror
sarl
push
mov
jecxz
ret
out
cmpsl
divb
in
les
sub
mov
test
mov
scas
add
cmp
xchg
xchg
push
xlat
jnp
pusha
outsb
fadds
xchg
ret
sbb
iret
inc
add
out
pop
arpl
cmp
stos
test
inc
mov
and
add
pop
ja
jmp
test
cli
test
daa
mov
fwait
int
insb
lahf
or
rolb
lods
jge
mov
push
adc
nop
add
sub
cld
mov
jno
negb
cld
dec
insb
faddl
jmp
mov
jge
jmp
in
lret
mov
mov
adc
or
xor
mov
fcomp
add
jp
cmc
mov
pop
rcr
in
adcb
sbb
call
cmovs
daa
pop
imulb
pushf
and
jge
sbb
int
jns
pop
int3
add
ljmp
int
or
stos
lret
xchg
push
repz
in
int3
push
cmp
loopne
push
mov
dec
push
aaa
bound
push
clc
mov
inc
jne
shrb
into
sti
test
inc
out
pop
mov
xchg
sbb
es
je
ds
push
inc
call
out
adc
sub
add
jg
movsb
lock
arpl
add
imull
cli
scas
sub
push
mov
dec
mov
mov
sarl
sub
and
data16
imul
push
neg
in
sahf
cwtl
pushf
sub
pop
mov
or
ljmp
ds
rcll
popf
lds
and
inc
inc
imul
push
bound
int
cli
jne
dec
cmp
leave
in
xchg
cmc
jge
cld
pop
imul
fidivs
daa
pop
imull
or
bound
lds
addl
jg
in
push
fisttps
xlat
or
sub
dec
lds
or
repnz
pop
sahf
xchg
cmpsb
xor
add
and
push
mov
jle
stos
popa
cmp
mov
inc
xor
dec
sti
repnz
mov
pop
jp
mov
dec
popa
mov
inc
adc
jge
out
repnz
data16
addr16
inc
lcall
testl
mov
orb
shl
idivl
insb
icebp
sub
stos
sahf
pop
imul
or
cmpsl
xor
lds
mull
adc
fisttpll
fcmovnbe
pushf
clc
test
aad
inc
mov
testb
mov
shlb
jbe
loop
mov
sub
shrl
inc
cmc
and
sbb
mov
movsb
imul
ret
scas
subb
sub
adc
arpl
add
xchg
and
shlb
fildl
pop
xchg
aam
test
jbe
and
mov
cmp
mov
ret
mov
cmp
jo
imul
pop
jns
popa
push
and
movsl
adc
lret
fwait
repz
and
rclb
dec
cmp
mov
js
fistps
insl
sbb
cmpb
test
outsl
ret
out
add
enter
push
hlt
and
mov
insl
sahf
dec
add
or
jb
dec
mov
jno
in
inc
pusha
and
insl
test
es
mov
ret
jp
pushf
sarb
jb
data16
scas
mov
in
out
mov
mov
mov
inc
or
add
jae
adc
xor
pop
add
dec
imul
cltd
pop
insl
push
push
data16
sub
inc
loopne
dec
mov
and
xor
push
xchg
mov
pop
in
jno
and
mov
aaa
cltd
mov
cs
mov
loop
mov
stos
stos
stos
lahf
jno
subl
mov
sbb
in
inc
inc
adc
or
ds
and
cwtl
pop
and
cmpb
je
loopne
mov
cli
loope
mov
dec
movsb
ficomps
aaa
mov
test
or
pop
xor
jmp
xor
jg
or
lods
and
repz
push
xchg
push
enter
inc
mov
dec
adc
dec
bound
stos
xchg
sub
jle
fidivl
fisubrl
lcall
sub
sub
lea
and
shrl
stos
cli
int3
imul
or
loope
adc
mov
or
mov
jge
lcall
aam
das
sbb
push
insb
mov
inc
adc
push
stos
adc
xchg
cld
xor
xchg
pop
jns
cmpsb
shrb
push
mov
pslld
jge
ret
insb
xchg
jmp
jnp
or
and
loopne
fdivp
dec
lret
int
leave
fisttpl
and
jbe
fidivrl
pop
lock
repz
sbb
je
jle
pop
pop
mov
xchg
mov
push
fwait
add
lret
popa
idivl
sahf
sub
daa
add
jecxz
in
daa
mov
sub
jbe
mov
inc
push
sbb
sahf
jo
inc
lds
fsubrp
and
mov
adc
jb
mov
xchg
outsl
add
lods
into
aaa
test
into
mov
dec
in
and
nop
add
pop
bound
ja
imul
xchg
cld
cs
mov
inc
pop
push
lcall
lret
imul
insl
adc
pop
dec
or
cmp
adc
xchg
mov
repz
sub
dec
ret
std
push
insb
jne
int3
push
ret
xchg
mov
push
fildll
cmc
jle
outsl
scas
mov
filds
add
mov
mov
lds
jno
lret
outsb
xorl
mov
aad
int
repz
cmc
mov
hlt
mov
dec
aas
mov
pop
push
frstor
aad
push
sbb
xor
in
cwtl
jl
data16
out
jbe
rcr
sbb
sbb
loop
add
not
out
jge
outsb
mov
inc
repz
jp
cs
cwtl
inc
add
cmp
insl
push
lea
mov
xor
movsl
jle
fdivs
imul
aas
aaa
lea
flds
sbb
fmul
call
and
into
sbb
and
jecxz
popw
pop
insb
pxor
or
dec
mov
cmp
adc
xchg
jl
jbe
ja
or
adc
xchg
loopne
mov
inc
and
pop
mov
lea
add
neg
inc
or
jno
fldcw
es
mov
loop
push
inc
mov
jmp
or
test
icebp
nop
test
into
mov
dec
mov
sub
shl
or
pop
push
dec
loop
int
mov
popa
rcrl
mov
sarb
sub
mov
movsb
in
cmp
xor
mov
and
push
pushl
add
and
fistps
es
mov
ljmp
and
sarl
daa
leave
cmpsb
andl
add
loopne
adc
adc
inc
lahf
fistpll
sbb
out
lret
repz
pop
adc
inc
inc
push
mov
add
mov
xor
fcmovbe
add
add
sbb
cmp
mov
data16
fisttpll
pop
dec
fsubrs
ret
jb
pop
rorl
dec
xchg
sbb
adc
mov
je
add
jmp
arpl
mov
inc
mov
inc
inc
push
mov
and
pop
pushf
push
mov
fwait
xor
rorb
or
std
xor
idiv
push
cmp
data16
insl
nop
xchg
nop
pusha
push
pop
inc
int
cmp
rclb
push
ja
stc
xor
adc
int3
leave
in
stos
push
hlt
hlt
pop
cmp
mov
fs
mov
mov
sub
shll
pusha
jecxz
lret
dec
fdivrp
jmp
add
push
stos
imul
fstps
jecxz
inc
inc
mov
test
lret
jne
mov
repnz
jnp
imul
movsb
enter
dec
mov
es
cmc
ljmp
imul
data16
xor
popf
mov
fwait
cmp
lcall
pop
addr16
pop
test
mov
and
dec
jns
push
xor
call
and
pop
divl
pop
mov
arpl
xchg
pop
jnp
repz
daa
jle
dec
or
add
test
pop
jno
cmp
in
dec
mov
jb
sub
push
dec
and
shll
jmp
mov
nop
jns
push
or
pop
xchg
xchg
jg
cmp
jbe
push
jo
sbb
test
std
mov
inc
adc
int
fs
and
cmp
enter
or
add
das
mov
dec
pop
push
jl
jbe
movl
inc
xor
mov
mov
sarl
jg
scas
cmpsb
lea
push
jmp
lea
pop
cmp
jmp
xchg
push
imul
adc
pop
mov
out
push
psubusw
mov
sub
xor
mov
into
ja
or
arpl
add
and
jae
xor
stos
iret
xor
mov
cmp
mov
testl
pop
je
push
xor
notl
or
xchg
cltd
insb
pop
aam
iret
and
aaa
push
iret
daa
pop
repz
pop
andl
scas
xor
add
daa
push
iret
fbld
daa
ret
pushf
pop
xchg
data16
and
sub
push
inc
pop
cmp
comiss
pop
popa
fwait
rdmsr
pop
dec
fmul
dec
xchg
hlt
or
stos
fs
cmp
add
cmc
cmc
and
mov
mov
outsb
xchg
daa
inc
sbbb
jns
add
mov
xor
hlt
jno
jle
mov
stc
hlt
inc
dec
cltd
ja
call
inc
out
adc
xchg
xlat
cltd
fbld
sbb
xchg
xor
push
dec
jl
add
pop
repz
mov
lods
adc
jl
inc
btc
push
loope
mov
pop
test
scas
pushf
or
pop
enter
out
dec
fnsave
inc
insl
xor
shl
cld
xchg
jo
jae
dec
inc
call
xchg
adc
cs
arpl
in
mov
fs
or
repz
inc
adc
mov
sub
pop
outsb
mov
mov
cmpsb
mov
mov
repz
mov
cmp
je
push
add
lret
bound
orl
fistpll
fcmove
aam
stc
mov
xchg
ret
adc
in
dec
fisttpll
adc
rcll
fists
jb
sub
imul
fucomi
testl
scas
cwtl
sar
xor
test
pusha
leave
lods
sarb
add
repz
dec
push
iret
xchg
pop
loop
sti
xchg
clc
faddp
mov
pop
mov
sbb
mov
xchg
fisubl
popa
out
xor
inc
or
bound
mov
pop
jmp
repz
repnz
clc
sub
dec
adcb
or
pusha
mov
ret
aas
add
pop
xchg
iret
jge
jmp
mov
adc
data16
sbb
das
or
sbb
pop
or
notb
je
mov
xchg
sub
pusha
les
divl
in
pop
xor
adc
sahf
sti
cwtl
inc
pop
push
lods
enter
sbb
ljmp
inc
rorb
and
mov
pop
pop
jns
cld
mov
adc
fiadds
cld
out
arpl
das
sub
enter
in
push
mov
scas
push
je
push
dec
or
movsb
cmpl
mov
and
adc
ds
cmp
lods
jp
adcb
mov
mov
lcall
jbe
mov
lods
out
jle
jmp
inc
mov
inc
jnp
fs
lock
cmp
aaa
jg
pop
inc
jl
shrb
popf
bound
jp
notl
adc
movsl
xor
inc
scas
shrb
mov
imul
mov
in
scas
fs
imul
mov
lret
mov
lods
ja
imul
xchg
cli
push
fcoml
inc
add
xchg
stos
sahf
push
lret
das
adc
pop
adc
inc
xchg
inc
dec
movsl
in
cwtl
mov
mov
and
sbb
add
loope
mov
cwtl
ret
and
std
in
dec
lcall
push
jb
xor
clc
arpl
iret
sbb
sub
icebp
cmp
cmp
nop
pop
jmp
data16
push
stos
int3
xor
pop
aad
sbb
test
lock
mov
or
cli
pop
and
imul
jns
dec
lcall
xchg
lret
cmc
mov
xlat
mov
pop
adc
enter
sub
ret
jo
scas
push
pop
stos
repnz
mov
and
mov
pop
imul
dec
jmp
push
xor
xchg
call
lds
xchg
das
hlt
adc
rcrl
lock
jge
xor
pop
mov
inc
add
cmp
and
std
mov
hlt
push
dec
pop
ds
imul
or
ficoml
sahf
in
sbb
rolb
add
lret
and
inc
sahf
inc
ja
imul
in
mov
and
and
pop
mov
loopne
mov
and
or
mov
inc
mov
fmull
popa
push
std
xchg
jg
imul
cmp
sarb
xchg
imul
sbbl
in
jmp
out
push
add
pushf
mov
mov
into
scas
lock
dec
or
insb
or
jmp
xor
int3
inc
outsb
mov
mov
jne
ljmp
aas
addb
xchg
jp
push
push
xchg
xchg
adc
rcll
test
jo
dec
adc
cmc
xor
sbb
pushf
xor
pop
movsl
mov
add
lods
loop
lods
mov
fs
or
dec
dec
xor
or
jae
mov
jmp
aam
jge
cmpsb
iret
mov
fsubr
jbe
mov
pusha
or
cltd
dec
nop
int3
xchg
mov
xor
mov
fs
loopne
rcrb
sub
in
sbbl
out
faddl
lahf
jb
jmp
lea
push
cmp
pop
xchg
inc
ds
cmp
into
mov
punpckhwd
add
dec
jae
xchg
lret
cmp
adc
xor
rorb
sub
outsl
inc
add
movsb
call
nop
push
and
cmp
xchg
popa
rcll
sub
mov
pop
push
enter
inc
test
mov
shlb
outsl
rcr
add
fwait
mov
adc
mov
scas
shl
push
fistl
pushw
mov
pop
ret
xchg
cmpsb
sub
mov
and
dec
jmp
fistl
mov
mov
cltd
cmp
movsb
std
push
mov
dec
shll
into
int3
test
add
les
mov
push
push
test
rcl
andb
pop
enter
stos
ljmp
out
ss
movsl
pop
out
push
inc
inc
sub
xlat
ja
adc
mov
push
mov
xor
sub
or
fimull
enter
pop
sbb
mov
sbb
jns
repnz
fs
popf
or
fildll
sbb
andl
ljmp
bound
mov
aad
add
rcrl
xor
cmp
xor
pop
add
ret
cli
test
mov
testb
ret
into
jecxz
mov
mov
fcoml
mov
jl
cmpsl
mov
cmpsl
ret
cld
pop
push
xchg
test
jecxz
iret
out
push
xchg
test
add
or
jbe
pop
rcrb
ljmp
mov
test
ds
adc
addl
xchg
in
mov
fisttps
mov
or
das
lods
rcll
in
mov
inc
into
cmc
xor
testb
mov
jno
xchg
push
pop
lret
lea
xchg
push
icebp
into
fnstsw
and
jb
imul
or
test
and
out
xchg
push
push
mov
cs
test
xor
sbb
addr16
or
stc
in
push
mov
cmc
push
xlat
push
jecxz
push
sbb
cmp
cltd
data16
add
jmp
cmp
pop
fiaddl
push
mov
les
rorb
mov
inc
xchg
sarb
rcrl
and
xchg
insl
call
out
jb
push
shlb
es
movsl
push
in
mov
mov
push
stos
push
dec
pop
xor
sbb
sbb
inc
adc
insl
sbb
cmp
mov
pop
cmpsb
dec
cmovbe
mov
mov
xor
or
pop
ficoms
xchg
pop
mov
ret
sub
xor
popa
mov
mov
mov
adc
pop
jns
mov
push
bnd
popa
mov
outsb
dec
subl
mov
cmp
jne
in
popa
sti
adc
mov
loope
sbb
mov
or
xor
mov
fcomps
xchg
test
nop
cmpsl
or
push
or
mov
clc
mov
inc
aam
sub
lret
pop
aad
inc
adc
add
inc
std
and
pusha
fldcw
lahf
jne
or
push
pop
pusha
scas
dec
push
cmp
jo
stc
mov
and
std
out
jge
test
mull
sub
xlat
lcall
xor
and
sub
xor
shlb
jo
mov
pusha
rorb
aam
mov
xchg
sbb
cmp
loope
push
xlat
mov
fucom
jo
pop
scas
mov
add
std
xchg
pop
mov
inc
cmp
or
cmp
insb
cmp
je
adc
jl,pn
ror
testb
dec
mov
adc
mov
gs
lock
cmpsl
pop
inc
inc
aaa
mov
loopne
dec
das
xor
xlat
leave
xor
mov
inc
inc
cs
mov
and
popa
loop
ret
mov
push
xchg
push
xchg
lds
sar
dec
std
mov
addl
aas
mov
fistpll
dec
adc
cmpsl
and
fsubrs
mov
mov
repz
adc
jno
sti
or
adc
push
sub
xor
sub
pop
or
bound
aad
or
pop
push
push
sbb
popa
push
dec
leave
clc
jmp
mulb
sbb
or
test
ss
repz
rolb
scas
insl
push
enter
repnz
vpunpcklbw
test
cmpsb
mov
push
inc
pop
cmpb
bound
mov
xor
cs
sti
iret
testb
push
shll
shlb
jg
iret
pop
movsb
arpl
test
aad
hlt
dec
pop
scas
imul
or
arpl
sbb
ss
push
pop
cs
ret
adc
xchg
jecxz
nop
and
push
mov
mov
inc
dec
movsl
mov
aam
mov
les
lahf
ret
inc
fld
push
xchg
les
mov
mov
divl
popf
ret
push
mov
cld
push
mov
daa
xor
inc
insb
lock
inc
adcl
push
pop
jle
adc
dec
mov
pushf
jno
inc
push
and
jnp
jmp
ljmp
or
dec
imul
vpcmpeqw
cmp
std
cmp
add
push
inc
adc
mov
push
test
insb
mov
shll
clc
pop
js
fldenv
xor
pusha
mov
movl
xchg
push
mov
xor
xor
lcall
mov
pop
inc
rcrl
xor
pop
jg
pop
sub
ds
mov
imul
xchg
ret
repnz
and
cmp
cmp
xor
jne
jl
jg
dec
cmp
jns
js
cmp
nop
movsl
in
cltd
sub
clc
dec
xor
and
cmp
in
jns
sub
sbb
jg
shrl
imulb
xor
and
mov
adc
call
jl
xlat
cmp
dec
xor
xchg
movsl
adc
fisttps
sub
clc
sub
pop
aad
out
pop
adc
dec
pop
sti
mov
aad
cmp
mov
add
ret
xchg
inc
sbbw
xchg
icebp
cli
jecxz
xchg
nop
lret
lods
lret
and
or
pop
cmovle
daa
adc
jae
mov
sbb
mov
sub
cmp
fldenv
lods
mov
and
aam
sub
pusha
push
cli
popl
data16
lcall
mov
pop
adc
mov
movb
rcrb
scas
mov
bound
push
imul
and
sbb
inc
lret
sbb
int3
dec
dec
jnp
xchg
and
push
add
push
dec
mov
lock
mov
rorl
fdivrl
rclb
inc
xor
daa
push
aam
negb
in
fildll
insl
loope
lods
not
ja
lret
and
in
iret
fdivr
stc
or
sbb
shlb
loopne
clc
adc
fmull
icebp
xor
fldt
mov
mov
popa
gs
and
loope
outsb
cmc
fbstp
xchg
bound
pushf
int
add
push
lea
push
insl
mov
mov
jl
mov
ljmp
xchg
test
xchg
lock
mov
orb
mov
xor
pushf
notl
or
je
shrb
and
push
icebp
xchg
ret
sub
lahf
inc
flds
xchg
mov
fbld
leave
in
fstp
or
sbb
xchg
roll
std
adcl
rcrl
push
ret
push
repnz
xor
cmp
fsts
out
xor
ffreep
jno
popa
pop
mov
push
test
rclb
or
into
out
dec
xchg
cli
xchg
push
push
push
sub
lods
dec
mov
cmp
xchg
add
mov
and
lock
repz
pusha
ljmp
pop
sarl
xchg
mov
push
fisubs
ja
mov
inc
inc
sbb
and
idiv
jns
or
or
push
outsl
aaa
lods
xor
ss
jmp
and
cmp
je
out
xlat
mov
pop
ret
mov
and
inc
sbb
out
mov
ds
push
lea
xor
std
pop
mov
push
inc
popa
mov
sub
testl
push
push
dec
rcl
aas
xchg
push
push
xchg
inc
lea
sbb
clc
inc
int3
push
mov
jge
fwait
pop
mov
xchg
cs
adc
inc
add
xor
loop
test
sub
fisttpl
inc
push
ss
enter
mov
out
adc
and
subl
rorb
dec
iret
or
xchg
adc
add
push
popa
jg
repnz
cmp
test
stos
hlt
push
out
jecxz
data16
mov
aas
sub
pop
inc
das
das
sahf
sub
jb
add
fdivl
or
pop
or
mov
adc
fnstsw
xrelease
pop
lock
xor
mov
dec
jns
push
sarb
popa
inc
icebp
sbb
sub
enter
xchg
rcl
insb
movsl
loopne
adc
sbb
in
in
loopne
into
addb
mov
inc
fildll
or
push
ret
mov
or
pop
cwtl
and
ret
sub
shrl
add
jge
or
popa
enter
mov
pop
ds
dec
adc
cs
enter
shll
and
insl
rcr
mov
ret
jge
add
mov
shl
push
int
frstor
divb
cld
repz
push
outsl
jb
insl
push
dec
sbb
or
repnz
adc
pop
inc
mov
mov
jg
cmc
ja
adc
pop
inc
inc
or
or
cwtl
pop
sbb
mov
add
push
ljmp
scas
arpl
lock
jae
dec
test
mov
mov
add
in
cs
movsb
push
push
in
loopne
push
fadds
push
fcmove
dec
dec
jbe
push
sbb
jmp
addr16
aam
pop
pushf
dec
or
cs
lahf
adc
sub
lret
rcll
sub
lods
xchg
in
aas
pop
or
mov
jge
jns
pop
mov
lret
mov
inc
js
fwait
push
out
push
pop
movsb
dec
bnd
pop
xchg
scas
lock
xor
push
inc
loope
mov
cmp
aas
rcr
cwtl
mov
xor
jnp
insl
fwait
ljmp
imul
inc
and
mov
stos
xor
mov
pop
mov
fidivrs
popl
push
cmp
sub
jmp
insl
test
push
in
pop
mov
mov
popf
fwait
cmpsl
or
jnp
or
mov
xchg
cs
mov
test
dec
inc
sub
repnz
pop
test
nop
gs
xor
adc
mov
adc
inc
outsb
fs
in
sub
out
mov
jecxz
xchg
jbe
jnp
aam
mov
inc
mov
inc
inc
movsb
lds
inc
jp
jecxz
push
add
pop
push
int3
cmp
lods
add
mov
dec
push
sub
mov
mov
pop
out
pop
inc
jns
out
push
in
roll
subb
or
inc
mov
pop
sub
into
mov
cmpsb
cld
cmpsl
xor
push
imul
jne
fcmovne
in
les
arpl
mov
fisubl
in
jo
push
cwtl
cmp
push
lods
xchg
sbb
jmp
cmp
popf
mov
scas
jo
lods
xchg
mov
and
testl
push
scas
int3
or
push
jle
rcrb
lds
adc
icebp
pop
mov
or
aam
dec
outsl
call
in
jo
filds
addb
inc
xchg
ficoms
in
pop
test
xor
mov
cmp
scas
sti
fldt
in
jo
pop
dec
mov
cmp
out
rclb
sbb
dec
push
ljmp
xorb
pop
xor
sub
xor
lret
pop
pop
into
and
out
push
xor
ffreep
mov
and
mov
std
and
jecxz
in
movsl
dec
outsb
notl
push
movsl
ljmp
xchg
and
pusha
daa
jnp
in
xchg
jbe
mov
sbb
mov
std
in
jle
jno
push
movsl
sti
sub
xor
and
jb
inc
and
sub
sbb
cltd
js
pop
add
inc
stos
jmp
in
sub
out
loop
xchg
dec
cmpsb
mov
mov
cltd
adc
cld
icebp
or
mov
or
shll
aaa
ror
into
enter
cmp
push
fstl
cbtw
jb
popf
popa
cld
fwait
mov
test
fsub
out
test
fcmovnb
mov
bound
popf
int
repz
into
mov
mov
mov
xchg
scas
cmp
adc
shll
ds
mov
cmc
xchg
sub
mov
jp
fucomi
lahf
mov
leave
imul
push
xchg
mov
out
mov
test
push
lods
xor
inc
aam
cwtl
mov
outsb
lock
test
inc
dec
pop
jno
fdiv
test
movb
xchg
mov
jae
jbe
jnp
mov
jb
pop
jno
sarl
adc
sbb
mov
es
testl
cmovnp
lods
jbe
in
in
adc
sbbb
push
adc
out
mov
rcrl
jecxz
adc
shl
lods
test
sub
mov
es
fnstsw
mov
pop
cld
ljmp
test
dec
cli
gs
dec
cmp
imul
fisttps
int
add
xor
cli
popf
pop
sub
stc
int3
xchg
cmpsb
add
push
ret
fwait
ljmp
mov
cmp
ret
es
les
sbb
fidivrs
add
scas
add
out
add
mov
push
fwait
adc
pushf
push
cmp
inc
or
pop
lsl
jne
adc
js
mov
fabs
or
push
fnstcw
sbb
and
pop
mov
inc
mov
pop
add
fisubl
outsl
loop
lods
sub
cmpsb
es
std
repnz
dec
dec
cmpsb
bound
add
sahf
lret
or
pop
mov
inc
loope
aaa
adc
mov
outsl
xchg
cwtl
stc
dec
popa
stos
or
inc
jae
pop
push
xchg
lcall
mov
mov
icebp
call
xor
imul
pushf
mov
cmp
xorb
xchg
mov
in
or
ret
mov
cmp
not
clc
jmp
mov
stos
je
inc
xchg
push
jge
and
push
loope
idivb
xor
cmc
lods
dec
std
mov
js
outsl
repnz
addr16
mov
leave
inc
xorb
shlb
fcmovnb
pop
repnz
test
in
xor
mov
xor
inc
jns
fwait
or
sahf
movsb
pcmpgtb
and
out
leave
xlat
int3
add
insb
sub
daa
sbb
xor
push
jnp
fcompl
sub
inc
insl
push
jmp
jno
inc
pop
xor
pop
movsb
adc
lods
mov
mul
inc
stos
data16
pusha
nop
cmpsl
cwtl
jno
xchg
dec
mov
pop
and
push
pop
inc
lods
adc
in
xor
or
aaa
mov
rcrb
mov
ficomps
sbb
test
enter
fwait
and
xor
inc
inc
dec
out
in
xor
and
mov
out
out
mov
adc
fdivrl
cmp
pop
cli
int
cmp
pop
or
mov
mov
js
cs
pop
popa
sbb
fwait
sub
outsb
jno
hlt
sbb
adcl
inc
imul
cltd
loop
mov
fs
stos
xlat
jne
mov
adc
lret
dec
cmpsb
mov
jae
imull
in
lock
test
cmpsl
xchg
cmpsb
lret
or
int
add
push
dec
jp
daa
and
cmp
pop
loopne
ja
xchg
divb
dec
mov
cmpsl
xchg
and
fistl
cmpsb
or
or
popf
test
popa
cmpsb
ror
arpl
mov
filds
lock
shll
xchg
sbb
lds
jp
sub
and
dec
sub
cmp
lds
repnz
jecxz
xchg
adc
push
and
pushf
fs
sbb
test
pop
int3
pop
das
or
dec
das
or
aas
rcl
outsb
shl
int
inc
call
sahf
iret
leave
mov
data16
cmpsl
sbb
cmpsb
push
lret
cltd
outsl
push
push
sub
shrl
pop
or
fmull
sub
mov
sbb
loopne
xchg
sbb
push
leave
cmp
cs
ja
inc
or
cmpsb
or
or
repz
vpsubsb
cmp
cmc
pop
xlat
rclb
repz
outsl
mov
mov
mov
in
push
ret
es
cmp
fcomps
sub
adc
push
loope
xchg
lea
add
mov
jg
pop
add
and
inc
or
mov
ret
test
xchg
loop
xlat
out
xor
int
xor
pop
jo
sarb
xchg
icebp
pop
and
shlb
xchg
mov
mov
jns
iret
gs
inc
fwait
sbb
call
in
roll
dec
push
push
cmp
cmpsb
stos
popf
jmp
mov
mov
and
mov
mov
push
xchg
rcrl
lcall
fstps
push
ja,pn
aad
cli
filds
pop
mov
adc
js
rclb
ja
rcr
iret
lds
mov
nop
mov
xor
mov
les
lods
xlat
cltd
mov
lods
fisttpl
mov
xchg
inc
inc
out
test
and
or
sbb
jg
out
cmp
out
dec
inc
nop
test
sub
push
cmpsl
and
scas
pop
out
scas
pop
or
mov
out
loope
test
pushf
sti
sbb
mov
cmpsb
into
dec
repnz
cltd
aaa
push
xchg
cwtl
mov
and
xchg
xchg
not
adc
mov
jno
jno
and
insl
adc
dec
push
lahf
mov
lahf
mov
xor
sahf
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
jnp
ss
icebp
inc
in
inc
push
cmpsl
cwtl
loopne
mov
outsl
add
pushf
jbe
cmpsl
sbb
pop
or
sub
adc
lea
pop
push
cli
cwtl
pop
sti
out
pop
mov
stos
or
cltd
push
mov
loope
in
add
dec
aam
xchg
dec
cld
orb
rcl
movsb
push
call
xor
pop
dec
inc
dec
cwtl
push
fldl
mov
je
mov
xchg
push
cmp
push
iret
dec
ds
arpl
or
sbb
push
adc
sbb
ss
add
sub
lahf
rcl
mov
lods
loop
stos
and
push
stos
enter
movsl
xchg
push
stos
iret
push
addr16
lret
pop
cmpsl
push
fsubrl
add
lahf
rcrl
mov
sbbl
mov
xchg
stos
in
mov
out
in
scas
divb
clc
outsb
push
add
jmp
push
inc
enter
adc
mov
daa
push
imul
jno
sahf
sub
inc
nop
and
orl
in
lret
add
xchg
mov
scas
cmc
es
pop
fstl
jg
mov
pop
mov
fsts
cmpsl
ja
arpl
push
popf
lea
fisttpl
lds
xor
mov
cmpsb
or
lock
ss
fiadds
adc
adc
fists
mov
jb
jmp
fistpl
mov
or
xor
iret
jae
and
mov
hlt
scas
cmp
sbb
aaa
fisubrl
xchg
xor
test
insb
in
mov
sti
scas
cwtl
out
iret
push
data16
dec
sub
mov
stos
aad
aas
add
push
push
cli
mov
lods
xlat
sub
insl
aam
push
mov
or
scas
arpl
fwait
push
mov
testl
out
push
and
inc
shr
xchg
jecxz
dec
mov
add
add
pop
add
inc
xchg
sub
mov
fsub
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
popa
insl
add
insb
