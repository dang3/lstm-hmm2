add
add
jne
cmpl
jne
mov
lea
mov
call
mov
andl
mov
mov
mov
push
call
test
pop
je
push
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
movl
mov
push
mov
call
push
call
incl
pop
pop
pop
leave
ret
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
call
push
call
pop
xor
jmp
mov
test
je
push
call
pop
mov
test
je
mov
push
call
andl
mov
test
je
mov
push
call
andl
mov
test
je
cmpl
jge
call
add
jmp
push
lea
sub
mov
xor
mov
mov
test
push
mov
je
mov
mov
push
push
lea
push
xor
lea
push
mov
mov
movl
movl
mov
mov
mov
push
call
cmp
je
push
lea
push
mov
call
mov
imul
testb
je
mov
add
push
call
test
pop
je
pop
pop
mov
mov
xor
pop
call
add
leave
ret
push
mov
and
sub
push
push
push
mov
testb
je
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
mov
xor
inc
lea
call
lea
push
lea
push
push
mov
call
mov
pushl
neg
call
mov
pushl
mov
add
neg
call
mov
add
cmpl
jne
pushl
mov
mov
push
call
test
jne
xor
push
push
mov
mov
push
call
jmp
push
mov
and
sub
push
push
lea
mov
call
mov
cmp
jl
mov
add
cmp
mov
jg
mov
mov
cmp
jl
mov
lea
cmp
jg
mov
xor
cmp
mov
mov
jne
mov
cmp
jne
mov
push
push
mov
mov
mov
mov
mov
call
pop
pop
mov
pop
ret
push
mov
push
mov
andl
push
mov
lea
call
mov
mov
push
call
push
lea
call
pop
leave
ret
push
mov
sub
add
enter
mov
mov
push
push
push
mov
mov
mov
call
test
je
mov
xor
push
mov
lea
mov
call
mov
mov
push
call
mov
mov
push
mov
call
cmp
je
mov
cmp
lea
mov
mov
movl
movl
mov
mov
jne
mov
mov
push
lea
push
push
call
cmp
jne
cmp
jne
cmp
je
mov
call
test
jne
pushl
mov
pushl
mov
pushl
call
testb
mov
jne
testb
jne
lea
call
mov
mov
pop
pop
xor
pop
call
leave
ret
mov
add
push
call
test
pop
jne
push
call
pop
jmp
mov
mov
mov
mov
push
lea
mov
call
lea
push
mov
call
test
pop
js
pushl
mov
pushl
call
mov
lea
mov
call
cmp
jne
jmp
xor
jmp
cmp
jne
mov
lea
mov
mov
call
pushl
mov
mov
xor
cmp
sete
push
push
call
xlat
add
decl
decl
test
mov
push
inc
add
popf
pusha
decl
test
push
push
push
mov
call
pushl
pushl
call
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
push
mov
mov
test
mov
je
jmp
lea
mov
cmp
je
test
push
jne
mov
mov
call
test
je
mov
push
push
call
mov
mov
test
je
test
mov
je
cmp
je
cmp
je
test
jne
mov
cmpl
mov
lea
mov
je
lea
push
mov
mov
push
push
push
lea
push
add
push
call
add
mov
xor
mov
mov
mov
mov
mov
lea
push
push
push
push
lea
push
lea
push
lea
movl
call
add
test
jne
add
cmpl
je
mov
mov
lea
push
push
push
push
lea
call
add
test
jne
mov
cmp
je
cmp
je
xor
mov
mov
mov
jmp
addl
mov
mov
mov
mov
add
movzbl
add
movzbl
lea
push
lea
call
add
add
mov
movzbl
lea
push
lea
call
mov
mov
xor
mov
mov
mov
mov
lea
push
mov
push
push
push
push
lea
push
lea
push
lea
push
mov
call
add
test
jne
mov
add
cmp
jl
mov
mov
cmp
je
cmp
je
cmp
je
mov
mov
mov
push
call
cmpl
je
mov
cmpl
je
cmp
mov
mov
jne
mov
pop
pop
pop
pop
add
ret
mov
lea
mov
test
jne
or
mov
mov
cmp
jne
pop
mov
pop
pop
pop
add
ret
push
mov
sub
andl
push
mov
push
lea
push
lea
push
mov
push
call
mov
cmp
je
cmp
je
cmp
je
cmp
je
pop
pop
leave
ret
mov
cmpl
mov
jge
push
mov
call
mov
lea
push
lea
push
lea
push
lea
push
add
push
lea
movl
call
add
jmp
lea
push
pushl
lea
call
test
pop
pop
je
mov
cmpb
jne
mov
mov
mov
mov
jmp
push
mov
mov
call
pop
jmp
mov
cmpl
jge
testb
je
pushl
pushl
call
ret
push
pushl
mov
call
mov
orl
cmpb
pop
jne
jmp
mov
test
je
mov
mov
mov
xor
ret
mov
mov
mov
add
test
mov
je
test
je
xor
ret
test
je
mov
push
push
call
jmp
push
mov
mov
call
mov
mov
add
cmp
ja
jmp
flds
fstps
mov
pop
ret
mov
mov
jmp
nop
iret
cmpsb
add
adc
cmpsb
add
adc
cmpsb
add
adc
cmpsb
add
adc
cmp
xchg
mov
cmp
lods
mov
cmp
mov
mov
in
sub
andl
push
mov
push
lea
add
push
movl
movl
call
mov
push
call
test
je
andl
lea
push
push
call
testb
pop
pop
je
mov
add
push
call
test
pop
je
pop
xor
pop
leave
ret
mov
cmp
je
push
pushl
call
mov
ret
mov
add
mov
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
push
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
add
adc
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
add
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
mov
call
mov
mov
test
je
add
mov
cmpl
jne
push
mov
mov
mov
mov
mov
pop
mov
mov
mov
xor
inc
pop
ret
int3
mov
lea
mov
lock
inc
ret
mov
ret
mov
orl
mov
ret
push
mov
push
test
push
jne
mov
mov
push
push
push
call
test
mov
mov
mov
js
mov
test
je
mov
mov
mov
pop
leave
ret
mov
test
je
mov
mov
cmp
je
addl
mov
mov
test
jne
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
sub
add
mov
mov
test
je
mov
mov
mov
mov
andl
xor
jmp
push
mov
push
push
push
mov
test
je
mov
test
je
mov
mov
mov
cmpl
je
push
mov
mov
lea
push
lea
push
push
movl
movl
call
add
mov
pop
xor
inc
pop
leave
ret
push
mov
push
xor
cmp
mov
jne
push
push
call
cmp
pop
je
movl
movl
movl
movl
movl
mov
xor
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
push
call
mov
push
pushl
push
call
mov
mov
push
call
mov
pop
pop
pop
ret
xor
jmp
push
mov
test
je
mov
push
call
mov
test
mov
jne
cmpl
jbe
xor
mov
mov
push
call
inc
cmp
jb
cmpl
ja
pop
ret
xor
mov
mov
incl
call
inc
cmp
jae
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
xor
test
push
je
mov
mov
mov
mov
mov
test
jne
add
lea
xor
test
je
mov
test
jle
mov
test
jle
mov
add
mov
imul
cltd
idiv
mov
sub
mov
mov
mov
test
jg
test
je
orb
add
add
push
mov
mov
call
mov
test
jne
pop
pop
mov
pop
pop
pop
ret
mov
test
je
mov
push
push
call
mov
jmp
push
mov
mov
cmp
push
push
je
mov
cmp
je
mov
pushl
pushl
pushl
pushl
pushl
pushl
call
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
call
add
mov
pop
pop
pop
ret
push
mov
sub
push
mov
cmpb
jne
push
push
call
xor
inc
test
pop
jne
mov
test
je
mov
lea
push
push
push
call
test
js
cmpb
je
xor
pop
pop
leave
ret
mov
call
test
je
pushl
mov
push
call
jmp
push
mov
push
lea
push
call
andl
push
lea
call
lea
push
push
call
mov
test
je
andl
test
movl
mov
je
mov
mov
mov
mov
mov
pushl
mov
push
push
call
testb
jne
testb
jne
lea
call
pop
jmp
push
mov
push
mov
mov
lea
push
pushl
push
call
test
js
cmpl
je
xor
inc
leave
ret
mov
mov
push
lea
push
push
push
mov
call
and
neg
sbb
not
and
pop
leave
ret
xor
leave
ret
push
mov
movl
movl
cmpl
je
lea
push
call
pop
testb
je
push
call
pop
mov
pop
ret
push
push
mov
movzbl
flds
movzwl
fldl
fmul
fxch
shr
push
movzbl
and
lea
mov
shr
lea
shl
call
sub
fmull
call
sub
mov
and
add
pop
sar
pop
xor
pop
ret
push
mov
mov
call
add
pop
ret
push
mov
sub
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
and
jne
cmp
jne
pushl
lea
call
mov
cmp
je
mov
push
push
pushl
lea
push
call
mov
cmp
mov
je
mov
cmp
je
lea
add
mov
push
pushl
push
push
pushl
pushl
pushl
push
push
call
test
jne
test
je
add
add
mov
push
push
call
xor
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
xor
jmp
mov
jmp
xor
jmp
push
mov
push
test
je
mov
andl
lea
push
push
push
call
mov
test
je
mov
mov
mov
test
jle
push
push
push
push
pop
mov
mov
mov
mov
test
je
incl
mov
test
jne
andl
decl
je
dec
mov
jne
pop
pop
pop
mov
push
call
leave
ret
add
jmp
push
call
push
call
pop
pop
jmp
push
cmpl
je
test
je
mov
test
lea
jne
mov
test
jns
push
mov
call
cmpl
jne
xor
test
jne
mov
mov
call
call
lea
push
push
call
call
lea
dec
sbb
xorps
testl
or
add
pop
ret
mov
jmp
push
mov
push
push
xor
cmp
je
cmp
jle
push
push
push
mov
lea
push
push
push
call
mov
mov
mov
add
and
jne
test
jne
pushl
lea
call
test
jne
mov
test
mov
je
mov
mov
lea
push
call
mov
lea
push
pushl
push
call
test
jne
lea
push
mov
call
pushl
push
call
test
pop
pop
jne
lea
push
mov
call
pushl
push
call
test
pop
pop
jne
mov
lea
call
mov
mov
xor
lea
call
pop
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
cmpb
je
push
push
mov
movsbl
cmp
jle
mov
cmp
lea
jne
mov
test
jne
test
je
mov
cmp
jbe
mov
and
mov
movb
mov
mov
mov
add
cmpb
jne
pop
or
sub
cmp
ja
movzbl
jmp
mov
push
push
push
or
mov
call
jmp
mov
sub
cmpl
jg
mov
sub
jmp
push
push
push
push
call
test
jne
adcl
add
or
mov
call
jmp
mov
sahf
into
cmp
mov
cmp
mov
mov
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
push
push
mov
pushl
lea
mov
mov
call
cmpl
je
mov
lea
notl
inc
add
testb
je
push
call
test
pop
mov
je
mov
cmp
je
cmp
je
movb
mov
mov
cmp
je
cmp
je
movl
mov
mov
push
add
push
lea
push
call
mov
test
mov
je
mov
add
call
test
je
mov
add
xor
or
push
mov
add
call
mov
test
pop
je
mov
test
jne
mov
call
mov
test
mov
jne
mov
test
jne
mov
call
test
jne
mov
test
jne
lea
call
mov
movl
mov
movl
movl
mov
movl
mov
movl
mov
movl
movb
mov
movl
mov
mov
mov
movl
mov
movl
movl
mov
mov
xor
inc
cmp
je
cmp
je
mov
mov
movl
movl
mov
lea
push
mov
mov
call
cmpl
jne
mov
mov
cmp
mov
jne
mov
mov
mov
orw
cmpb
jne
mov
lea
call
mov
pop
pop
pop
ret
cmpb
je
mov
jmp
mov
push
call
mov
test
je
cmpb
jne
mov
mov
mov
mov
jmp
mov
orl
mov
mov
mov
mov
mov
jmp
mov
movl
movl
mov
movl
mov
movl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
add
push
or
adc
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
add
jne
xor
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
mov
push
je
mov
cmp
je
mov
add
test
jne
mov
movl
mov
test
jns
push
push
push
call
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
add
push
call
mov
mov
xor
jmp
push
mov
push
mov
push
pushl
pushl
call
add
test
push
push
pushl
jl
call
add
test
jg
push
push
pushl
call
add
test
mov
jge
pop
pop
ret
call
add
test
jl
push
push
pushl
call
add
test
jl
mov
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
mov
test
mov
jne
test
jne
xor
cmp
setne
cmp
mov
jb
mov
shr
imul
add
cmp
movl
jbe
lea
imul
add
cmp
mov
ja
mov
mov
mov
mov
mov
push
push
push
call
mov
mov
mov
add
test
je
cmp
jg
add
shr
mov
mov
mov
mov
mov
sub
add
add
test
jg
mov
add
imul
add
lea
mov
mov
mov
cmp
ja
mov
cmpl
jne
mov
test
mov
jne
test
jne
test
jg
jne
cmpl
mov
movl
jne
mov
mov
mov
mov
mov
add
mov
add
cmp
jbe
jmp
imul
lea
add
cmp
jae
mov
sub
mov
mov
mov
cmp
jbe
mov
mov
mov
mov
mov
push
push
push
call
add
test
jle
mov
test
je
cmp
mov
mov
jg
mov
shr
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
sub
sub
cmp
mov
ja
mov
add
add
cmp
mov
jb
pop
pop
pop
pop
add
ret
mov
push
push
push
call
mov
add
jmp
cmp
ja
mov
lea
cmpl
jne
mov
test
mov
jne
test
jne
test
jl
jne
test
movl
jne
mov
mov
mov
mov
sub
mov
sub
cmp
ja
mov
jmp
mov
push
push
push
call
mov
add
jmp
test
je
push
push
call
mov
add
jmp
cmp
ja
test
je
cmp
mov
mov
jg
mov
shr
jmp
lea
mov
mov
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
add
movl
sub
jmp
test
je
push
push
call
mov
add
jmp
mov
mov
imul
add
cmpl
je
mov
mov
mov
sub
sub
cmp
mov
jge
test
jle
mov
sub
cmpl
jg
shr
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
sub
test
jg
mov
mov
sub
sub
sub
cmp
jl
test
jg
cmp
jle
mov
mov
push
push
mov
xor
div
push
push
push
call
add
cmp
jle
mov
sub
mov
mov
xor
div
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
movl
sub
jmp
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
lea
cmp
jae
mov
mov
sub
mov
mov
lea
cmp
jbe
mov
mov
mov
mov
mov
push
push
push
call
add
test
jle
mov
test
je
cmp
mov
mov
jg
mov
shr
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
sub
sub
cmp
mov
ja
mov
add
add
cmp
mov
jb
pop
pop
pop
pop
add
ret
mov
mov
mov
mov
jmp
mov
shr
imul
lea
mov
add
mov
push
add
push
mov
push
call
mov
mov
lea
push
push
sub
push
call
mov
mov
mov
sub
push
sub
push
push
call
add
mov
jmp
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
push
sub
push
call
mov
mov
add
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
mov
mov
jne
test
jne
ret
test
je
push
push
call
add
ret
mov
ret
or
ret
push
mov
sub
mov
xor
mov
push
push
mov
push
mov
xor
push
call
test
je
mov
push
lea
mov
call
push
lea
push
mov
call
mov
mov
cmp
je
lea
lea
push
mov
mov
movl
movl
mov
and
inc
add
push
call
mov
test
js
lea
push
push
call
pop
pop
testb
je
mov
add
push
call
test
pop
je
mov
cmp
je
mov
push
call
mov
pop
mov
pop
xor
pop
call
leave
ret
testb
je
jmp
push
mov
push
push
mov
mov
call
test
js
mov
xor
cmp
je
cmp
je
mov
cmp
mov
lea
incb
add
ret
mov
cmp
mov
lea
ja
lea
jmp
push
mov
sub
push
mov
test
je
mov
mov
andl
andl
push
lea
lea
movl
mov
call
mov
test
je
mov
push
pushl
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
sub
push
xor
push
lea
mov
call
lea
push
push
call
test
pop
pop
js
push
push
lea
lea
mov
movl
movl
mov
mov
mov
call
mov
cmp
mov
je
mov
lea
push
push
push
call
test
pop
jne
pushl
lea
call
mov
pushl
mov
push
call
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
lea
call
lea
call
add
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
mov
mov
mov
mov
push
mov
lea
xor
push
lea
mov
mov
movl
movl
mov
int3
and
dec
out
add
test
js
mov
cmpl
push
mov
jge
push
lea
mov
mov
call
push
lea
call
lea
push
lea
push
call
test
pop
pop
jne
pushl
mov
pushl
call
pop
pop
mov
mov
mov
push
call
test
jne
mov
push
mov
call
lea
push
lea
push
pushl
call
add
test
jne
pushl
mov
pushl
pushl
call
pushl
mov
call
pop
lea
call
lea
call
testb
jne
testb
jne
mov
pop
mov
pop
xor
pop
call
leave
ret
mov
add
call
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
mov
mov
and
dec
je
dec
dec
je
movzbl
and
cmp
je
mov
call
test
je
push
push
call
test
pop
je
movl
mov
test
je
mov
call
mov
movl
xor
inc
pop
pop
ret
xor
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
lea
cmp
je
mov
add
test
jne
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
movl
movl
xor
mov
mov
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
and
adc
insb
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
ret
push
mov
lea
mov
push
call
test
je
cmpl
je
pushl
lea
mov
push
call
testb
jne
push
lea
push
mov
call
pop
pop
ret
mov
test
je
mov
mov
mov
mov
push
call
xor
ret
push
mov
and
push
mov
push
xor
movl
mov
call
pushl
mov
pushl
mov
pushl
mov
pushl
xor
push
pushl
cmp
pushl
sete
mov
mov
mov
mov
mov
push
push
call
pop
mov
pop
mov
pop
ret
testb
push
mov
movl
je
push
call
pop
mov
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
push
mov
mov
test
movl
movl
movl
movl
movl
jne
lea
call
lea
call
lea
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
test
pop
jne
push
call
pop
pop
pop
ret
mov
cmpl
je
andl
xor
ret
push
mov
push
mov
cmpl
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
mov
je
add
push
call
xor
mov
mov
mov
pop
pop
ret
push
push
push
mov
call
test
pop
je
mov
movl
andl
andl
add
test
je
mov
mov
test
je
pushl
mov
push
push
call
mov
test
js
mov
pop
pop
ret
xor
jmp
push
mov
push
push
push
xor
cmp
mov
mov
jne
push
mov
push
lea
call
pushl
lea
push
push
call
add
cmp
pop
je
pushl
pushl
call
cmp
pop
pop
jne
mov
mov
mov
lea
mov
lea
call
lea
call
pop
leave
ret
push
call
pop
push
lea
call
jmp
push
lea
sub
mov
xor
mov
push
push
mov
mov
xor
mov
cmp
push
jne
mov
add
je
cmp
movl
jne
mov
mov
lea
push
pushl
lea
mov
mov
movl
movl
mov
mov
mov
push
call
cmp
mov
je
mov
lea
push
call
mov
lea
call
mov
cmp
jne
testb
je
mov
add
push
call
test
pop
je
xor
inc
lea
call
mov
mov
pop
pop
xor
pop
call
add
leave
ret
mov
call
mov
mov
mov
mov
mov
mov
add
call
push
pushl
call
pushl
mov
push
pushl
mov
call
mov
mov
mov
push
push
call
mov
test
jne
xor
cmp
jne
mov
testb
je
mov
mov
mov
mov
cmp
jne
add
mov
push
push
call
test
jne
testb
movl
je
mov
add
push
call
test
pop
jne
jmp
call
cmp
je
mov
pushl
mov
push
call
test
pop
pop
js
mov
lea
mov
call
jmp
add
or
test
jmp
push
mov
push
push
push
xor
push
lea
mov
call
lea
push
push
push
call
add
test
js
pushl
mov
lea
push
push
call
mov
mov
add
lea
push
push
call
mov
cmp
jne
push
pushl
mov
call
pop
pop
mov
lea
call
add
pop
leave
ret
push
mov
mov
sub
push
push
push
mov
xor
mov
cmp
je
cmp
je
mov
orb
lea
mov
mov
call
push
mov
call
mov
andl
pop
lea
push
mov
lea
call
andl
push
lea
call
mov
lea
push
pushl
pushl
pushl
push
call
test
js
pushl
pushl
call
andl
test
pop
pop
je
push
lea
mov
call
mov
lea
push
pushl
pushl
push
call
test
js
push
call
test
pop
je
pushl
mov
pushl
mov
mov
push
push
call
test
mov
je
mov
push
call
cmpl
je
mov
mov
lea
push
push
call
pushl
pushl
pushl
call
add
test
je
mov
mov
mov
mov
lea
mov
call
lea
call
lea
call
lea
call
pushl
call
pop
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
cmpl
jne
push
push
mov
push
lea
lea
mov
push
push
call
test
je
cmp
jae
push
lea
lea
call
pop
pop
mov
xor
pop
call
leave
ret
push
add
push
call
jmp
push
mov
mov
call
add
push
pushl
call
xor
pop
ret
push
mov
push
push
push
mov
push
mov
mov
push
mov
imul
lea
push
add
pushl
push
call
mov
lea
push
pushl
push
call
cmpl
jl
cmpl
jg
mov
lea
push
pushl
push
call
test
mov
jne
mov
flds
mov
fstps
mov
mov
test
pop
pop
mov
pop
je
cmp
je
fldz
fcomps
fnstsw
test
jp
xor
inc
leave
ret
mov
jmp
xor
leave
ret
push
mov
push
push
mov
push
push
xor
cmp
mov
je
inc
add
push
push
push
add
push
call
and
jne
inc
add
test
cld
lea
call
mov
cmp
je
inc
add
push
push
call
mov
mov
push
call
mov
pop
pop
leave
ret
mov
mov
push
push
push
call
mov
xor
cmp
je
push
push
mov
call
mov
orl
mov
movl
mov
pop
ret
sub
push
push
push
push
mov
mov
mov
mov
mov
sub
lea
mov
mov
mov
mov
sub
sub
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
mov
mov
mov
movl
mov
shl
sub
mov
mov
sub
mov
nop
cmp
jae
movzbl
add
mov
shl
add
add
mov
add
movzbl
shl
mov
add
add
mov
and
mov
mov
shr
movzbl
movzbl
shr
sub
test
je
lea
test
je
shr
and
mov
jne
cmp
jb
mov
mov
and
mov
mov
shr
movzbl
movzbl
shr
sub
test
je
shr
and
cmp
mov
jb
mov
mov
mov
shl
sub
sub
and
mov
mov
add
mov
mov
sub
shr
cmp
ja
mov
sub
movzbl
add
add
mov
mov
add
add
mov
movzbl
add
add
sub
cmp
mov
ja
test
je
mov
add
add
cmp
mov
ja
mov
jmp
test
jne
mov
mov
mov
mov
shl
shr
sub
and
add
mov
mov
mov
shr
movzbl
movzbl
shr
sub
test
jne
add
shr
mov
cmp
jae
cmp
jae
mov
jmp
mov
movzbl
add
add
mov
mov
movzbl
shl
add
mov
shl
add
add
add
jmp
cmp
jb
mov
mov
shl
sub
and
add
shr
sub
jmp
mov
mov
add
jmp
mov
sub
cmp
mov
ja
mov
add
mov
mov
mov
test
jne
mov
sub
mov
add
mov
cmp
jb
cmp
jbe
lea
mov
mul
shr
add
jmp
lea
movzbl
add
add
mov
movzbl
add
add
mov
movzbl
add
add
sub
sub
mov
jne
test
je
mov
add
add
cmp
mov
jbe
mov
mov
add
mov
jmp
mov
lea
test
jne
mov
movzwl
mov
shl
mov
sub
and
add
mov
mov
shr
movzbl
movzbl
shr
sub
test
mov
jne
jmp
mov
movzbl
add
mov
mov
shl
add
add
cmp
jae
jmp
cmp
jb
sub
mov
add
mov
cmp
jae
sub
mov
add
add
subl
mov
jne
mov
sub
jmp
test
je
mov
movl
mov
mov
shr
sub
add
add
add
sub
mov
mov
shl
lea
sub
sub
and
mov
mov
lea
mov
mov
sub
add
add
mov
mov
mov
mov
pop
pop
pop
mov
pop
add
ret
sub
add
mov
sub
add
cmp
jb
mov
jmp
mov
add
mov
movzbl
mov
shl
add
add
jmp
sub
jmp
lea
mov
add
add
subl
mov
jne
mov
sub
jmp
push
mov
sub
andl
push
mov
push
mov
push
push
lea
push
lea
push
pushl
call
add
test
je
mov
andl
lea
push
movl
movl
mov
push
call
test
js
mov
mov
lea
call
testb
mov
jne
testb
jne
mov
test
jne
mov
pop
pop
leave
ret
push
mov
push
push
mov
lea
lea
mov
push
call
test
je
mov
test
je
push
pushl
call
xor
pop
pop
pop
ret
cmpb
je
pushl
mov
pushl
mov
push
call
test
jne
jmp
push
mov
push
push
mov
mov
test
je
cmpb
push
mov
je
mov
push
mov
call
test
je
andl
push
lea
call
mov
lea
push
push
call
pushl
andl
mov
lea
call
push
pushl
pushl
call
lea
call
lea
call
xor
pop
pop
leave
ret
push
mov
mov
cmpl
push
push
push
mov
jge
testb
mov
jne
test
jne
testb
jne
mov
xor
cmp
je
testb
jne
mov
cmp
mov
jne
mov
andl
test
je
mov
push
call
mov
andl
test
je
mov
push
call
cmpl
jne
testb
jne
testb
jne
test
jne
andl
cmpl
mov
mov
je
testb
je
testw
je
lea
call
lea
cmpl
je
mov
cmpl
jge
lea
test
je
lea
pushl
mov
mov
lea
add
push
push
call
xor
mov
call
push
mov
call
cmpl
je
push
lea
call
cmpl
jne
mov
test
je
lea
test
je
lea
pushl
mov
push
push
push
call
lea
xor
call
lea
xor
call
xor
pop
pop
pop
pop
ret
mov
mov
jmp
xor
jmp
push
mov
push
push
mov
push
mov
test
je
mov
push
mov
push
lea
lea
cmp
je
mov
mov
test
je
decl
jne
mov
movl
call
pushl
call
pop
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
push
call
pop
pop
pop
mov
add
call
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
movzwl
cmp
push
mov
jle
sub
je
dec
je
dec
je
dec
jne
pushl
push
call
xor
mov
pop
xor
pop
call
leave
ret
pushl
mov
call
jmp
mov
test
jle
mov
test
jle
mov
mov
ret
andl
andl
ret
mov
cmp
je
cmp
je
cmp
je
xor
ret
xor
inc
ret
push
mov
push
push
push
xor
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
add
mov
call
mov
cmp
je
push
mov
cmp
je
pushl
mov
push
push
push
push
call
add
lea
call
lea
call
mov
pop
pop
leave
ret
push
push
mov
mov
test
je
mov
push
call
mov
andl
test
je
mov
push
call
push
push
call
mov
call
push
mov
call
mov
push
push
call
pushl
mov
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
mov
push
call
xor
add
cmp
mov
je
mov
mov
movl
movl
mov
mov
cmp
mov
je
add
push
call
add
cmp
je
mov
mov
movl
mov
cmp
mov
je
add
push
call
add
cmp
je
mov
mov
movl
mov
cmp
mov
je
add
pop
pop
pop
xor
pop
ret
pop
pop
pop
mov
pop
ret
xor
jmp
xor
jmp
mov
test
je
mov
mov
incl
xor
ret
mov
sub
je
dec
jne
mov
ret
xor
jmp
mov
jmp
mov
mov
mov
mov
ret
push
mov
push
mov
push
push
lea
call
mov
lea
call
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
test
mov
je
pushl
lea
mov
call
pushl
lea
mov
add
or
mov
push
call
pop
mov
call
inc
add
call
pop
mov
pop
pop
pop
pop
ret
push
mov
lea
call
lea
call
testb
movl
je
push
call
pop
mov
pop
ret
push
push
mov
mov
push
lea
lea
jmp
mov
mov
call
test
jne
add
cmp
jne
or
pop
pop
pop
ret
mov
sub
sub
sar
jmp
pushl
mov
call
add
pushl
xor
jmp
push
pushl
xor
inc
call
xor
inc
ret
push
lea
sub
mov
xor
mov
mov
test
je
push
mov
call
test
mov
je
mov
push
call
mov
test
je
andl
test
jne
push
xor
xor
inc
cmp
jne
cmp
jne
mov
mov
call
mov
mov
cmp
mov
je
test
je
andl
cmp
je
call
mov
lea
call
mov
test
jne
lea
call
inc
add
add
jne
mov
pushl
call
pop
pop
mov
mov
mov
lea
call
inc
add
pop
mov
xor
call
add
leave
ret
cmp
jne
and
je
andl
sti
inc
add
mov
mov
mov
mov
test
mov
mov
je
mov
lea
push
push
call
test
js
mov
call
cmp
jne
testb
jne
testb
jne
testb
jne
testb
je
jmp
mov
push
call
jmp
push
mov
push
mov
test
je
push
mov
test
je
andl
push
lea
call
mov
lea
push
push
call
test
js
mov
lea
call
mov
pop
leave
ret
xor
leave
ret
xor
jmp
xor
jmp
push
mov
push
push
push
push
push
mov
xor
cmp
je
cmp
je
mov
mov
push
lea
push
push
call
mov
mov
lea
push
call
mov
lea
cmp
je
call
mov
push
call
lea
mov
mov
dec
jns
mov
mov
push
push
push
push
call
lea
mov
lea
push
lea
push
push
movl
call
add
lea
xor
call
lea
xor
call
lea
xor
call
andl
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
xor
lea
movzbl
push
lea
call
cmpl
jne
add
add
cmp
jle
xor
mov
lea
lea
movzbl
lea
push
lea
call
mov
call
cmp
je
cmp
jne
mov
call
test
mov
jg
lea
mov
mov
add
add
cmp
jle
movb
pop
pop
pop
pop
add
ret
lea
jmp
xor
jmp
push
mov
sub
push
mov
push
push
mov
mov
mov
xor
cmp
mov
mov
je
cmp
je
cmp
jne
mov
cmp
je
mov
mov
mov
cmpl
jne
cmp
je
cmp
je
mov
mov
andl
push
call
test
je
test
je
push
push
call
mov
test
je
test
je
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
lea
push
mov
push
pushl
pushl
lea
push
push
mov
call
fld1
add
push
push
push
fstps
lea
flds
lea
fstps
push
lea
call
mov
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
lea
sub
inc
add
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
movzbl
push
push
push
lea
push
lea
push
lea
call
mov
add
lea
push
push
pushl
lea
pushl
lea
push
lea
push
call
mov
add
test
jne
lea
push
mov
pushl
lea
pushl
lea
push
push
lea
push
call
movzbl
push
push
push
lea
push
lea
push
lea
add
mov
dec
add
push
push
push
lea
push
lea
push
lea
call
add
flds
push
push
push
lea
fstps
flds
lea
fstps
push
lea
call
fld1
mov
add
push
push
push
fstps
lea
flds
lea
fstps
push
lea
call
mov
lea
add
cmpl
je
lea
push
mov
pushl
lea
pushl
push
push
lea
push
call
add
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
add
cmp
jne
mov
mov
mov
pop
pop
pop
leave
ret
push
push
pushl
call
jmp
test
je
call
jmp
mov
mov
jmp
push
mov
push
mov
sub
jne
leave
ret
dec
dec
je
dec
je
dec
je
add
push
jne
call
fstps
testb
flds
fstps
fldz
jne
testb
jne
fstp
leave
ret
mov
cmp
jg
je
sub
jne
ret
sub
je
dec
je
sub
jne
mov
mov
ret
dec
je
dec
jne
mov
andl
mov
jmp
push
mov
sub
mov
xor
mov
push
push
push
mov
push
mov
call
test
je
xor
cmp
je
orb
lea
mov
mov
movl
movl
mov
mov
lea
push
mov
call
test
je
push
call
test
je
cmpl
jne
cmpw
jne
mov
push
push
push
lea
call
test
je
mov
movw
jmp
orb
cmpl
je
lea
push
push
pop
mov
call
testb
jne
testb
jne
xor
inc
mov
pop
pop
xor
pop
call
leave
ret
mov
cmp
je
push
mov
call
add
add
add
clc
ss
cmp
jne
jmp
cmp
jne
movl
jmp
mov
add
call
jmp
push
mov
and
mov
sub
push
push
mov
xor
push
mov
mov
mov
xor
mov
mov
inc
test
jne
push
lea
push
call
test
je
andb
cmpl
je
cmpl
mov
je
or
mov
mov
push
mov
call
test
pop
je
movb
movb
movb
movb
andl
movl
mov
mov
test
mov
je
push
mov
mov
call
test
jne
and
and
test
je
andb
cmpl
je
cmpl
add
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
addb
add
add
cmpl
mov
je
mov
cmp
jne
mov
cmp
jne
or
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
test
jne
push
push
pop
mov
call
test
je
pushl
push
call
test
jne
jmp
subw
mov
push
add
add
pop
mov
add
jae
lock
add
popa
add
int
mov
add
pop
data16
add
scas
roll
add
add
add
rcrl
pop
add
cmpsb
add
add
popf
jne
add
mov
xchg
add
mov
loopne
rcll
mov
push
push
push
push
lea
push
lea
push
push
push
lea
push
call
push
add
out
jnp
add
push
mov
mov
mov
addl
or
fucomi
in
mov
add
add
fldl
pop
mov
je
jge
add
jb
mov
jle
incb
mov
add
fsub
add
lret
add
nop
add
xchg
push
sti
xchg
test
add
lock
sub
inc
in
lea
push
lea
push
lea
push
push
push
push
call
add
add
add
xchg
stos
repnz
mov
add
cmc
add
add
jle
push
add
lret
outsl
push
add
dec
cmpsl
not
add
jmp
add
movsl
xlat
int3
scas
add
push
add
cltd
add
add
add
rolb
std
add
add
stos
in
cmpsb
add
lea
pop
push
push
push
lea
push
push
push
push
lea
push
call
add
js
popf
scas
aam
jge
pop
arpl
jmp
fsubrl
add
push
add
add
roll
movb
add
add
push
ret
fiadds
add
out
add
add
sti
je
jns
scas
mul
add
jo
aam
bound
pop
push
push
push
push
push
push
push
push
call
add
icebp
pushf
js
shll
icebp
mov
add
add
add
icebp
mov
add
add
xchg
lock
arpl
cmc
add
add
add
je
add
ja
mov
mov
lea
pop
push
call
push
push
push
push
push
push
lea
push
call
lahf
frstor
add
cmc
test
out
jnp
add
jne
data16
in
vpsrld
je
mov
add
add
add
add
mov
add
add
add
sbb
call
push
push
push
push
push
push
push
push
call
mov
add
add
clc
out
into
add
add
jo
add
jl
test
out
xchg
mov
mov
add
add
add
add
add
mulb
xchg
add
add
cmc
cwtl
jmp
xchg
out
pop
add
call
cmc
jge
mov
lea
pop
push
push
lea
push
push
call
add
add
add
push
lahf
add
arpl
add
add
add
nop
fdivrl
add
add
add
lods
loopne
mull
add
pop
xchg
add
jle
call
push
add
add
push
add
add
jmp
mov
add
out
add
pusha
out
fisttpll
pop
call
jmp
push
push
push
push
lea
push
push
lea
push
call
outsl
lea
cld
nop
xchg
aam
add
fiadds
data16
add
add
loop
pop
pop
add
jecxz
icebp
int3
rcrb
rolb
fs
add
mov
lea
pop
ret
push
push
lea
push
push
call
add
jo
cwtl
lods
std
add
add
jle
add
lret
lret
loopne
add
add
add
testl
add
jnp
fs
mov
add
test
add
fldl
add
hlt
xchg
add
add
addb
int
test
add
imul
cld
lea
pop
mov
push
push
push
call
add
pushf
push
mov
add
cltd
ror
out
add
add
add
in
add
fnstcw
frndint
mov
add
into
jp
mov
lea
pop
mov
add
push
lea
push
push
push
push
push
push
call
ret
mov
mov
hlt
add
loop
add
lods
shll
ja
out
mov
sti
jbe
mov
add
fdiv
ret
loope
mov
fiadds
add
int3
pop
jmp
mov
jge
add
ficompl
movsl
add
mov
pusha
push
iret
nop
mov
add
cmpsb
add
add
xchg
add
mov
lea
pop
add
push
push
push
push
push
push
lea
push
push
push
push
call
out
mov
add
cmpsl
mov
add
shrb
jb
add
cli
hlt
loope
ret
push
jns
movsb
cwtl
add
test
cltd
add
test
in
loope
add
add
add
lahf
add
add
aam
rorb
pop
add
push
push
push
lea
push
push
push
push
push
call
cwtl
add
jmp
add
xchg
push
add
call
add
add
push
bound
jo
movsl
mov
xchg
add
add
jnp
cli
into
movsl
add
add
add
lahf
call
cli
add
pop
add
lock
lea
pop
mov
push
push
lea
push
push
lea
push
call
xlat
pusha
movl
cmc
add
outsl
lret
pushf
leave
scas
popf
push
divb
mov
loopne
add
pushf
add
add
out
fwait
xlat
cld
int
scas
add
in
adcb
aam
shl
add
add
pop
add
add
add
xorl
add
rorb
xor
push
push
push
push
push
call
addr16
cli
aad
add
push
xchg
pop
jnp
lea
lcall
add
imul
jge
ljmp
add
enter
int3
mov
add
aam
add
add
jl
add
gs
mov
lods
fnstsw
push
add
add
ja
add
pop
add
xchg
mov
lea
pop
add
push
push
sub
push
and
add
ror
sub
rol
sub
shr
xor
pop
add
pop
push
push
lea
push
push
push
push
push
push
lea
push
call
add
push
mov
add
mov
cmc
pop
push
add
add
jne
add
out
leave
add
call
popa
mov
push
add
js
mov
in
in
fildl
add
pop
pushl
push
push
push
push
push
call
js
imul
pop
pusha
movsl
add
jmp
cmpsb
fsts
add
xchg
stos
faddl
add
add
add
in
mov
icebp
push
push
lcall
loope
add
xorb
add
push
add
pop
les
push
add
add
jae
int3
lea
pop
call
mov
push
push
push
lea
push
push
lea
push
lea
push
lea
push
push
push
call
std
fnstcw
jno
xlat
pusha
roll
add
add
mov
bound
jbe
jp
add
add
fidivl
jo
add
cwtl
pop
sti
into
mov
mov
add
pop
fildl
bound
mov
addb
lock
add
mov
ljmp
andb
pop
movl
push
push
push
call
pushf
add
add
subb
addb
pop
add
xchg
lret
add
add
roll
xchg
jp
add
stos
add
jo
add
in
mov
lea
pop
lea
push
push
push
push
push
lea
push
lea
push
push
call
out
add
jbe
push
loop
mov
mov
push
add
test
addl
ret
add
in
add
add
add
push
add
add
int
pop
loopne
repnz
lea
pop
push
push
push
push
lea
push
push
push
push
call
add
add
lock
adcl
xchg
add
add
cli
add
add
add
nop
push
scas
add
add
add
scas
stos
lea
lret
int
scas
call
add
add
mov
mov
sti
rorb
pop
add
nop
mov
lea
pop
pushl
pushl
push
push
lea
push
push
push
call
add
add
clc
jb
add
jl
jbe
add
enter
fstl
xlat
add
push
imul
add
in
add
call
rcl
jmp
add
pop
add
lea
arpl
call
push
push
lea
push
push
push
push
push
push
push
push
call
lock
fiaddl
add
push
add
les
add
pop
add
pop
add
stc
push
jb
add
in
jmp
cmpsb
jnp
popa
add
mov
add
add
add
lret
pop
sti
popa
mov
mov
pop
pushl
pushl
push
lea
push
lea
push
call
rol
fldl
add
add
add
add
filds
add
sti
lods
cmpsl
add
fiaddl
fwait
insb
lahf
add
add
jns
add
subb
add
add
add
add
ljmp
push
mov
add
mov
imul
out
mov
cli
in
les
mov
das
or
xlat
xor
shl
push
xor
add
lea
sub
shr
pop
add
xor
lea
sub
pop
push
push
push
push
call
add
pop
add
add
cwtl
add
outsl
add
test
add
add
mov
jne
hlt
addl
nop
pop
fstpt
icebp
push
add
add
aam
loop
add
add
test
test
mov
lea
pop
pushl
call
push
lea
push
push
lea
push
push
lea
push
push
push
call
fs
add
cmpsl
movl
fbstp
lods
jne
aam
add
mov
add
jle
xchg
mov
out
add
add
fcmovne
add
repnz
pushf
insb
add
addb
add
fdivr
add
add
add
pusha
lret
test
add
out
add
pop
movsb
mov
lea
pop
push
push
push
lea
inc
rol
shr
push
push
pop
add
not
sub
lea
inc
pop
sub
add
pop
push
lea
push
push
push
push
push
call
jl
add
mov
add
add
mov
fisubrl
add
add
add
hlt
lahf
pop
push
add
outsl
fcom
add
add
add
imul
add
aad
add
outsl
add
push
aad
les
push
push
lea
push
call
xchg
jp
stc
mov
stos
bound
loopne
jo
mov
xchg
repnz
add
loop
ja
lods
add
jo
mov
pop
jae
add
add
fadd
mov
jae
push
icebp
push
push
enter
add
mov
add
add
mov
cltd
mov
add
pop
stos
jb
int3
lea
pop
push
call
push
lea
push
call
into
push
int
xchg
pushf
add
add
mov
int
aam
stos
add
add
cltd
add
aad
jmp
add
add
jno
mov
in
stos
out
add
add
popl
add
add
add
mov
jmp
movsl
out
test
mov
icebp
add
add
xchg
add
iret
add
bound
pop
mov
push
lea
push
push
push
lea
push
lea
push
push
push
push
call
jmp
add
add
iret
push
add
lods
shl
add
xchg
jnp
add
imul
insb
add
lahf
add
mov
add
xchg
addb
rolb
repnz
add
xchg
test
lea
pop
push
push
push
lea
push
push
call
sahf
sti
test
mov
pop
push
std
ret
fdivrs
cmpsl
add
iret
add
xchg
add
add
add
add
add
mov
add
fldl
add
add
bound
pop
push
mov
push
push
call
jmp
in
mov
gs
jbe
fwait
mov
mov
enter
add
outsl
loopne
in
fiaddl
jge
sarl
add
add
fwait
xchg
flds
imul
xchg
lea
mov
add
mov
add
add
std
add
push
mov
add
out
add
movl
add
add
add
mov
lea
pop
add
push
lea
push
push
push
call
lret
add
mov
stc
mov
test
add
add
jge
pop
xlat
lret
add
add
add
add
stos
xchg
icebp
js
mov
add
mov
add
fs
add
ljmp
sahf
add
fnstenv
mov
mov
add
lret
add
xlat
jns
mov
adc
ret
add
add
push
push
push
push
push
call
jecxz
out
add
fisubs
add
jns
add
repnz
pop
add
adc
outsl
sti
fcompl
jne
jp
faddp
mov
add
add
out
pop
add
test
repnz
hlt
add
add
add
mov
test
ffree
add
fists
mov
lea
pop
add
push
lea
push
push
push
lea
push
push
lea
push
call
cltd
cltd
add
push
add
add
lcall
add
add
add
fldl
outsl
pop
imul
xchg
js
imul
xchg
add
add
lea
pop
xchg
popa
test
int3
movb
add
add
loop
add
mov
lea
pop
mov
xor
push
push
push
push
push
push
push
push
call
fwait
decb
add
add
js
add
add
stc
xchg
rol
add
mov
push
loope
add
add
add
add
cmpsb
add
js
shlb
add
clc
shl
xchg
mov
xlat
sar
mov
lea
pop
add
push
push
push
push
lea
push
push
push
push
call
ret
sahf
add
add
add
add
testl
add
push
leave
add
ficoml
add
out
in
cli
in
imul
mov
mov
add
iret
iret
ljmp
and
mov
push
push
lea
push
lea
push
push
push
lea
push
push
push
push
call
add
add
lock
ja
xchg
pop
repnz
add
mov
add
mov
add
pop
cli
in
outsl
add
testl
cltd
mov
add
add
add
add
cld
add
cmc
sbb
fwait
int
add
mov
imul
les
add
push
push
lea
push
push
push
call
fs
add
in
lds
add
cld
add
pop
movsl
data16
push
xchg
mov
cli
add
lds
faddl
testl
add
add
add
cmpsl
in
jecxz
loope
addr16
push
pop
lret
testl
add
add
out
push
lea
push
push
push
push
push
push
call
cld
add
scas
xchg
loope
add
add
add
lret
xchg
fsubrs
mov
add
lret
add
push
test
add
fsubrl
jnp
ret
add
out
add
and
add
pop
push
lea
push
push
push
lea
push
call
mov
add
add
lds
cli
mov
add
movb
mov
add
gs
imulb
add
in
add
in
mov
jle
mov
cmc
add
enter
jae
add
add
cmpsl
add
add
add
les
add
mov
insb
add
mov
lea
pop
mov
push
push
lea
push
push
call
add
in
add
pop
in
add
stos
mov
add
push
add
add
add
pop
add
popa
xchg
add
negl
add
popl
clc
push
rolb
pop
pop
int
add
fisttps
pop
xor
push
push
push
push
push
lea
push
call
xchg
add
add
stos
add
add
add
je
add
add
sti
pushf
fadds
mov
jb
add
add
jge
add
loopne
data16
add
add
filds
outsl
add
outsl
pusha
add
into
add
cltd
cli
rcrb
cmpsb
mov
push
xchg
in
mov
push
add
fildl
test
pusha
add
loopne
aam
bound
pop
add
push
push
push
call
pushf
imulb
ret
add
push
sahf
ficoml
pop
shrl
cmpsl
xchg
jge
addb
add
rcll
pop
add
add
roll
mov
add
loopne
cmpsl
add
lock
popa
iret
add
add
in
sti
cld
mov
cld
lea
pop
push
push
push
push
lea
push
call
add
aam
call
mov
add
add
test
add
fs
test
mov
add
addb
ret
jmp
add
cmpsl
movl
loop
add
add
jp
fwait
lret
ljmp
outsl
jae
pusha
add
add
lea
pop
mov
xor
push
lea
push
push
call
imul
in
mov
icebp
pop
fisubrl
mov
out
rorb
add
test
add
pop
add
in
fcompl
push
mov
fiadds
iret
push
enter
enter
aam
bound
sub
pop
push
push
lea
push
push
lea
push
lea
push
lea
push
push
push
push
call
mov
mov
jp
add
add
xchg
flds
cmc
add
mov
cmc
add
add
in
add
pusha
addb
add
add
push
in
pop
cli
add
jmp
add
push
mov
rolb
cli
test
push
add
int3
mov
sahf
add
repnz
add
add
push
jno
ret
movl
sub
movsb
pop
push
push
lea
push
lea
push
push
push
lea
push
push
lea
push
call
mov
ljmp
add
add
std
in
jge
add
add
mov
mov
push
ficompl
add
shll
add
cmpsl
int3
add
aad
cmpsb
scas
mov
add
jecxz
add
mov
bound
stos
mov
add
add
mov
hlt
mov
lea
pop
mov
push
push
lea
push
push
call
add
add
sti
bound
add
add
add
add
mov
mov
add
mov
adcl
ja
add
fcoms
xchg
sti
add
xlat
pop
add
add
into
add
shrb
add
jmp
mov
lods
pop
mov
lea
pop
add
add
push
lea
push
call
add
ja
test
push
pop
add
out
push
add
add
into
add
mov
pusha
push
mov
stc
add
pop
add
add
testl
xchg
in
jmp
push
lret
pop
mov
add
add
lock
ficompl
xchg
add
add
add
lea
pop
add
push
push
push
push
push
push
push
push
call
mov
add
jbe
add
jb
add
add
negb
mov
add
fucomi
mov
ljmp
add
add
loopne
stos
add
jae
int
add
jo
add
pop
xchg
lock
add
leave
stos
mov
add
mov
fmull
inc
and
pop
jae
push
push
lea
push
push
push
call
add
mov
mov
mov
ffreep
test
add
cld
data16
faddl
pop
add
add
rol
mov
push
out
jbe
testl
movsb
add
add
mov
add
jmp
add
fldl
add
mov
add
into
iret
add
mov
mov
add
mov
lea
pop
xor
push
lea
push
push
call
movsb
nop
je
jno
mov
hlt
add
add
add
add
insb
sar
add
add
call
into
mov
data16
out
add
jl
cld
loop
mov
aam
lds
push
add
add
fadds
add
in
add
add
add
into
add
add
pop
add
push
push
push
push
push
lea
push
push
call
add
nop
rolb
test
rcrb
add
jb
add
add
roll
test
mov
add
push
xchg
call
jge
mov
lea
pop
mov
xor
push
push
push
push
push
push
push
push
push
call
mov
bound
fs
add
mov
std
add
push
mov
add
les
add
mov
int
add
add
add
add
ja
jle
std
add
cld
add
add
add
outsl
in
out
int3
lea
pop
mov
push
push
push
push
lea
push
push
push
push
call
add
xchg
push
jno
add
loop
add
add
add
mov
repnz
push
add
in
loop
mov
cmpsl
arpl
mov
jne
add
aam
jo
rolb
ljmp
add
add
rcl
out
xchg
add
add
mov
add
pop
xor
push
push
lea
push
push
lea
push
lea
push
push
call
roll
pop
test
out
add
add
scas
lret
add
fsubp
nop
sahf
stc
add
add
mov
je
lret
add
add
add
movsl
mov
add
add
add
mov
lea
pop
add
push
not
dec
inc
pop
add
push
push
lea
push
push
push
push
lea
push
push
call
in
into
add
rolb
mov
add
add
hlt
cmpsb
add
addb
add
xchg
je
mov
leave
add
bound
scas
mov
push
pop
imul
jl
test
data16
std
mov
xchg
jle
ret
add
pusha
and
rorl
stos
push
not
push
or
not
add
sub
add
ror
sub
xor
pop
sub
pop
push
xor
pop
pushl
push
shr
add
sub
pop
call
push
sub
add
add
pop
push
push
push
push
xor
add
rol
sub
ror
sub
xor
rol
pop
add
lea
pop
push
lea
push
push
push
call
addl
xchg
jmp
into
mov
add
add
add
flds
pop
add
enter
pop
les
clc
pop
scas
add
loopne
jmp
bound
pop
mov
pop
pop
addl
add
push
loop
mov
lea
pop
push
push
push
push
lea
push
push
call
add
movsl
jne
push
std
push
add
sarl
add
cmpsl
jmp
add
add
movsl
shlb
stos
in
rclb
mov
lcall
mov
lea
leave
movl
cld
add
mov
add
mov
add
add
mov
add
fmull
rclb
lea
push
push
lea
push
push
push
push
lea
push
call
shr
push
add
lcall
add
mov
into
clc
add
out
stc
add
fsubrp
test
jne
push
pop
add
imul
cld
add
call
push
fldl
in
add
add
fcoml
add
stos
mov
aad
xchg
add
and
mov
push
rol
pop
push
push
push
call
nop
pop
add
add
add
mov
add
jb
pushf
insb
pop
in
jmp
add
cmpsl
jl
add
add
adcl
jne
pusha
add
jmp
jns
insb
lcall
repnz
clc
fbstp
jge
jp
jp
add
add
jecxz
add
add
rclb
add
out
mov
or
push
add
shl
ror
pop
mov
push
sub
dec
pop
add
push
lea
push
lea
push
lea
push
lea
push
push
push
call
push
add
add
int
add
arpl
add
mov
cmpsb
add
cli
lcall
add
mov
add
xchg
mov
add
mov
fld
add
add
add
jp
add
xchg
iret
popf
pushf
int
out
ljmp
lods
mov
add
push
mov
sbb
add
push
add
ror
pop
add
push
push
push
call
add
sti
nop
add
add
add
fsubs
pop
push
add
int
movsl
jmp
in
cwtl
add
hlt
add
lahf
mov
fsubs
add
jbe
add
pusha
add
lods
add
mov
jecxz
add
add
movsb
in
out
add
cmc
ja
aam
bound
mov
push
push
push
call
lret
ja
add
lret
add
mov
aad
je
add
add
addr16
mov
insb
add
add
add
cltd
add
insb
rolb
add
fadds
add
pop
fadds
out
add
add
imul
jnp
mov
lea
pop
xor
push
push
push
push
lea
push
push
push
call
add
lahf
int3
sahf
stos
stc
out
add
xchg
add
fiadds
cmpsl
int3
std
add
movsb
loopne
pop
push
pop
add
shll
test
mov
pop
outsl
push
add
xchg
xchg
push
jp
mov
lea
pop
add
push
lea
push
push
call
pop
test
add
faddl
js
int3
iret
fucomp
push
push
jp
fcmovnbe
jae
pop
add
fdivrs
push
mov
arpl
add
out
mov
add
lea
pop
add
push
push
push
push
push
push
call
repnz
mov
lcall
pushf
stos
add
add
mov
add
add
scas
add
add
iret
push
jno
add
call
push
ret
nop
add
test
filds
add
popf
bound
pop
push
mov
xor
push
not
shr
shl
pop
add
push
lea
shr
sub
pop
pop
push
lea
push
push
push
push
push
push
push
lea
push
lea
push
call
add
add
jbe
ljmp
filds
add
push
leave
ja
cli
add
add
mov
rcrl
mov
loope
mov
fstps
mov
add
add
pop
mov
xor
push
push
push
push
push
lea
push
push
call
leave
add
cld
add
leave
add
add
fdivl
mov
add
push
add
bound
add
add
add
jno
add
xchg
test
fadds
loope
jl
nop
jno
add
bound
rep
push
dec
xor
pop
mov
push
push
push
push
push
push
call
add
test
mov
int
nop
int3
add
addb
cmp
add
add
jae
faddl
les
pop
mov
add
add
xchg
add
add
imul
hlt
negl
add
push
mov
add
lea
rorl
pop
xor
push
push
push
push
push
push
push
call
scas
mov
mov
mov
addl
xchg
add
add
bound
xchg
lahf
add
add
xchg
jmp
mov
out
mov
add
xchg
arpl
pop
add
push
inc
pop
or
je
push
sub
pop
mov
xor
push
add
sub
shl
pop
mov
xor
push
push
lea
push
lea
push
lea
push
lea
push
push
push
push
call
loopne
imul
sahf
xchg
add
fcomp
add
test
fiadds
ja
roll
mov
aam
add
rolb
add
mov
push
ja
jl
ja
arpl
add
cltd
nop
icebp
add
lds
mov
add
lods
add
gs
int
imul
add
bound
add
add
push
pop
push
push
push
call
add
add
fcompl
mov
shll
fildl
fisubrl
mov
jmp
imul
insb
add
mov
jnp
add
xchg
mov
add
cmpsb
mov
add
add
mov
shrb
add
pop
add
lods
hlt
insb
xchg
data16
jo
cltd
mov
jno
add
add
aad
fisttps
pop
mov
xor
push
lea
push
push
call
add
out
pop
jnp
add
add
insb
add
pushf
cmpsb
xchg
add
cmpsb
stos
mov
mov
mov
movsb
insb
jno
int3
mov
pop
fiaddl
mov
hlt
lea
pop
add
push
inc
add
dec
xor
pop
pop
push
dec
inc
sub
pop
rep
push
lea
shl
add
lea
pop
mov
xor
push
add
lea
pop
or
je
mov
push
xor
sub
dec
pop
add
push
sub
sub
rol
pop
add
rep
push
push
push
push
push
lea
push
lea
push
lea
push
lea
push
push
call
add
push
fldl
add
add
pop
shlb
pop
add
add
mov
jge
add
add
pop
imul
add
add
scas
pop
xchg
add
stc
xchg
push
test
testl
sahf
or
push
push
push
pop
add
shl
sub
shr
add
shl
add
pop
shr
lea
pop
push
push
push
push
push
call
mov
push
jb
aad
mov
add
add
jb
scas
add
mov
add
add
scas
mov
xchg
mov
popf
addl
sti
addl
mov
add
fcmovu
add
div
xchg
add
lea
pop
pop
push
push
push
push
lea
push
push
lea
push
push
push
call
in
cmc
imul
add
ja
xchg
sbbl
test
add
mov
js
js
jecxz
add
repnz
jl
xchg
xchg
mov
add
cwtl
fwait
add
pop
mov
push
lea
push
push
lea
push
lea
push
lea
push
push
push
lea
push
call
add
add
add
imulb
add
add
mov
imul
rolb
add
idiv
mov
add
push
in
add
stos
jo
add
pop
mov
test
mov
lea
pop
mov
mov
push
inc
pop
jmp
push
push
sub
add
pop
mov
push
push
call
add
add
mov
testl
les
in
addl
add
mov
rolb
pop
add
xchg
pop
sahf
cwtl
data16
mov
jns
mov
fs
add
rorb
pop
add
push
push
push
push
lea
push
push
call
push
xchg
sub
arpl
stos
add
out
out
leave
bound
lea
add
rcrl
jae
add
pop
add
mov
mov
imul
test
add
add
xchg
fwait
pusha
ret
test
mov
popf
imul
rcr
mov
lcall
pop
push
push
rol
rol
pop
push
push
lea
push
push
push
push
push
push
push
push
call
loopne
mov
add
add
add
add
add
lret
clc
add
in
add
sti
hlt
xchg
int3
add
flds
mov
cmc
mov
lods
mov
js
int3
add
add
arpl
loopne
lods
movsb
enter
mov
addb
les
push
push
push
lea
push
push
push
push
lea
push
lea
push
push
call
add
jp
je
sahf
lods
arpl
fldl
add
push
add
add
mov
add
aad
pusha
ja
loope
add
add
pop
fiaddl
popa
add
arpl
pop
mov
push
rol
pop
pop
push
lea
push
push
push
lea
push
push
lea
push
push
push
call
jmp
push
jnp
mov
out
fsubr
nop
add
int3
ficomps
add
mov
push
xchg
add
add
out
fists
int
xchg
add
loope
lret
add
mov
movl
cld
test
add
mov
pusha
jmp
scas
add
add
add
stos
add
ja
lret
fmull
pop
push
lea
push
call
jle
add
shlb
bound
add
xchg
sbb
lods
add
sub
push
in
mov
in
popa
jb
jo
lods
xchg
stc
lock
jns
js
rorb
pop
pop
push
not
pop
leave
push
not
not
shl
pop
ret
push
dec
ror
pop
push
push
lea
push
push
push
call
fs
push
cld
scas
enter
add
jge
mov
fldt
stos
add
out
add
sahf
add
add
add
fsts
mov
add
roll
add
jle
int3
add
les
cld
lea
pop
mov
push
push
lea
push
push
push
push
push
push
call
movsl
xchg
add
pop
lods
add
mov
fs
movl
lds
jne
add
popa
popa
add
add
rcrl
add
pop
add
push
push
not
dec
not
pop
push
push
lea
push
lea
push
push
lea
push
push
push
call
movsl
stos
jecxz
aam
mov
imul
jns
add
add
popa
test
xchg
jecxz
add
rcrb
jbe
in
call
fs
push
test
stos
add
add
lcall
add
movsl
add
data16
push
push
not
not
pop
push
movl
push
xor
ror
add
pop
addl
push
push
push
push
call
add
jae
cwtl
add
add
add
out
xchg
add
stos
data16
xchg
mov
mov
sub
icebp
ret
xchg
loope
add
fcompl
add
lock
cli
add
popa
adc
rorb
addb
add
movl
pop
subl
movsl
cwtl
push
push
call
cld
push
roll
addb
add
imul
cltd
imul
jge
aam
add
add
cmpsb
add
out
mov
out
sar
add
pop
mov
mov
add
mov
test
lods
test
ret
add
mov
lea
pop
pop
push
add
pop
pop
push
ror
add
pop
pop
push
push
push
push
lea
push
push
call
lock
bound
add
jl
mov
insb
add
hlt
bound
mov
mov
add
add
add
lret
in
lds
mov
lcall
outsl
pop
pop
add
add
clc
jo
pop
jnp
mov
lea
pop
pop
push
dec
lea
add
pop
leave
ret
push
shl
dec
ror
pop
push
push
ror
lea
pop
mov
push
sub
sub
dec
sub
pop
add
push
push
push
call
je
mov
mov
xchg
enter
mov
rcl
stc
stc
add
scas
pushf
ret
sahf
cmpb
notb
clc
add
pushf
add
out
add
xlat
mov
mov
lea
pop
push
push
push
lea
push
push
push
lea
push
push
call
pop
add
out
add
nop
add
add
push
test
movsl
add
lret
push
mov
pushf
mov
add
pop
imul
std
add
nop
add
fsubl
shrl
add
int3
push
add
leave
popf
add
incb
sbbb
mov
lea
pop
push
push
push
push
push
call
roll
test
add
pusha
stos
lds
add
add
rcl
jno
pop
jo
std
jmp
fldcw
add
subl
mov
push
lahf
jge
mov
add
xlat
add
hlt
mov
push
test
shlb
mov
mov
fisttps
pop
push
push
push
push
lea
push
lea
push
lea
push
push
call
pusha
hlt
ficoms
sti
nop
aam
add
lods
pop
add
rolb
mov
add
mov
mov
repnz
repnz
mov
icebp
mov
add
pop
pop
add
xchg
add
sti
loope
neg
add
out
mov
into
add
in
mov
mov
fsubrp
test
jge
int3
lea
pop
testl
push
pop
addl
push
rol
pop
push
call
push
lea
push
push
lea
push
push
push
lea
push
push
push
call
mov
pop
pop
add
add
add
mulb
add
mov
lds
add
push
add
pop
add
add
push
test
lret
mov
scas
add
jecxz
into
add
stc
hlt
push
test
mov
insb
add
data16
jle
add
add
lea
int3
lea
pop
mov
pushl
push
pop
push
push
push
push
push
push
lea
push
push
push
push
push
lea
push
call
add
jecxz
jno
add
push
push
pop
add
jle
mov
mov
pushf
fs
add
add
add
add
add
std
subl
add
add
mov
add
pop
call
push
inc
sub
pop
cmpl
jne
push
push
call
sti
add
mov
test
add
iret
jno
add
lret
roll
add
add
xchg
mov
add
add
add
add
cld
in
out
ja
cltd
push
xchg
je
mov
add
push
add
addl
divb
roll
jne
fwait
jnp
out
fldl
divb
int3
lea
pop
pop
pop
push
shr
shr
pop
pop
push
shr
rol
pop
pop
leave
push
push
push
push
push
call
add
add
jmp
nop
add
jae
loope
jmp
add
ret
mov
lock
lcall
out
add
fsubs
add
pop
cli
mov
mov
jle
add
pushf
data16
cmc
sahf
out
rorb
je
out
leave
add
pop
ret
push
sub
sub
sub
pop
push
push
push
lea
push
lea
push
push
call
into
imul
test
test
addl
test
add
xchg
add
mov
mov
mov
test
ja
mov
add
add
add
aad
add
rolb
add
mov
pop
rol
loope
popa
add
add
add
push
xlat
stc
xchg
movsl
aam
incb
xor
bound
mov
push
push
push
call
push
mov
add
push
add
fwait
add
pop
xchg
xchg
stos
rcll
lods
rolb
add
add
cmc
lret
add
stos
and
aam
stos
add
in
add
jb
add
imul
jp
fildl
fadds
jno
add
mov
std
out
call
xchg
push
fisubl
rcr
fwait
loopne
popf
mov
lea
pop
add
push
lea
pop
push
push
lea
push
call
stc
xchg
in
xchg
pop
add
fwait
add
test
out
add
lcall
add
sti
add
mov
lds
add
cltd
add
add
add
add
push
add
stos
add
add
pop
push
push
push
call
add
popl
addb
mov
mov
cmpsb
add
mov
mov
push
mov
pop
lods
imul
pop
add
jno
push
data16
addr16
add
pop
push
push
push
push
call
add
add
add
mov
add
add
add
add
pop
jmp
push
in
pop
push
arpl
mov
fildl
push
add
out
push
push
add
into
scas
add
xchg
jle
jns
add
jp
add
mov
lea
pop
push
push
lea
pop
movl
push
shr
ror
sub
pop
push
push
push
push
push
lea
push
lea
push
push
push
call
push
mov
scas
fnstsw
jae
cwtl
jl
aam
add
jecxz
jno
jns
xchg
jp
mov
popf
add
sarl
add
js
add
mov
cld
lea
pop
call
push
push
push
call
add
add
addb
add
add
in
add
add
lahf
aam
bnd
add
jae
sahf
add
cmpsl
add
pop
sti
mov
int3
add
stos
add
arpl
add
lods
fs
push
add
mov
lea
pop
call
push
xor
shl
pop
subl
cmpl
jne
push
push
push
lea
push
push
push
lea
push
push
push
call
add
add
add
add
in
add
outsl
faddl
push
roll
in
add
xchg
stos
mov
xchg
addb
add
add
xchg
jecxz
int
push
shll
bound
add
jmp
add
mov
lea
pop
pop
pop
push
lea
lea
shr
pop
pop
push
push
push
push
call
jmpw
scas
addl
add
add
mov
lods
add
mov
rorl
add
add
imul
mov
jae
push
add
mov
int3
out
add
add
add
bound
pop
pop
push
ror
dec
pop
leave
push
push
push
lea
push
push
call
mov
add
add
out
add
test
xlat
sarl
add
jl
hlt
add
mov
xlat
fcomps
xchg
popa
add
jo
push
addb
in
add
lret
mov
lea
pop
ret
push
rol
pop
push
push
shl
pop
mov
push
lea
push
lea
push
push
push
push
push
lea
push
call
mov
ja
add
std
add
add
jae
add
mov
incb
shr
mov
mov
test
push
testl
stc
faddl
outsl
add
xchg
xchg
add
test
add
mov
loopne
add
push
mov
mov
xchg
jae
sti
add
add
pop
add
push
pop
push
push
push
call
roll
add
add
test
lcall
addb
jbe
into
add
out
leave
pop
add
add
add
incb
pop
cmc
pop
add
fmuls
loope
data16
add
add
mov
mov
lea
pop
push
push
pop
push
push
dec
ror
pop
push
push
lea
push
call
add
popl
subl
popf
push
mov
pushf
add
add
add
jle
flds
popa
add
add
fidivrl
add
movsl
insb
add
lea
pop
mov
lea
push
push
push
push
lea
push
lea
push
push
lea
push
push
push
call
mov
pop
push
xchg
sahf
roll
movb
add
call
scas
pop
add
xchg
jecxz
incb
add
jle
mov
int3
fdiv
mov
les
test
mov
fcomps
mov
add
xlat
add
cwtl
jmp
pop
add
add
into
imul
add
pop
sub
push
push
push
push
push
call
leave
int3
hlt
add
add
add
outsl
add
mov
jecxz
pop
add
jae
push
add
fs
add
mov
add
add
mov
add
add
mov
lea
pop
mov
push
push
lea
push
push
push
push
call
imulb
push
add
add
aad
mov
mov
data16
mov
sti
jmp
add
stos
cmc
add
pushf
mov
push
add
pop
mov
mov
lea
pop
shr
push
shl
pop
add
mov
push
add
sub
shl
pop
mov
add
push
pop
add
push
not
pop
mov
push
not
ror
pop
mov
push
push
push
push
lea
push
push
push
push
push
push
call
fwait
cmpsb
rolb
pop
ret
add
add
add
add
mov
rolb
mov
mov
add
add
add
stos
add
mov
call
ja
push
cmpsl
test
add
add
lcall
pop
cmp
jne
cmp
jne
push
push
push
lea
push
push
lea
push
push
lea
push
lea
push
call
add
add
push
out
add
int3
add
icebp
nop
mov
pop
add
add
add
test
loope
add
xorb
bound
add
addl
lods
push
add
sti
testb
add
test
add
add
mov
cmpsb
add
add
and
mov
movl
push
lea
pop
jmp
push
dec
sub
rol
pop
mov
mov
push
pop
sub
jne
push
push
push
push
lea
push
push
push
call
int3
lods
add
add
xchg
in
lret
mov
movsl
xchg
mov
add
add
xchg
sahf
movsb
lock
mov
add
add
test
xchg
mov
out
mov
jge
outsl
mov
pop
add
pop
nop
add
pusha
jno
stos
mov
add
mov
mov
roll
mov
jbe
js
add
mov
lcall
mov
movl
push
lea
push
push
push
call
std
mov
xchg
js
sarl
add
stos
jbe
add
cltd
add
jecxz
add
add
add
in
xchg
mov
add
add
ljmp
add
loopne
roll
add
add
jb
add
cwtl
jl
test
add
loopne
add
popa
adc
ficoml
add
push
pop
mov
mov
push
xor
pop
cmp
jne
push
lea
push
push
lea
push
push
push
push
push
lea
push
lea
push
call
add
add
add
pop
mov
imul
aad
icebp
add
mov
std
push
mov
lea
mov
add
out
jnp
fadds
mov
xchg
cmpsl
cltd
add
fldcw
addr16
out
mov
js
add
lods
enter
mov
add
int3
lea
pop
mov
push
push
push
lea
push
push
call
add
mov
roll
data16
in
jb
cmp
add
mov
fistps
andl
fs
ja
add
jne
add
push
mov
add
out
add
stc
add
add
ljmp
add
stos
mov
lea
pop
movl
jmp
push
add
not
shl
pop
mov
cmpw
jne
push
push
lea
push
push
push
lea
push
lea
push
push
push
call
add
lret
cld
icebp
add
cwtl
int
xchg
lea
add
int
je
lods
jb
xchg
cmpsl
mov
jb
add
add
add
add
xchg
add
cwtl
in
jmp
add
scas
add
mov
imul
icebp
in
xchg
out
add
xchg
add
add
pop
add
add
cli
add
mov
push
add
pop
mov
push
ror
pop
movl
push
lea
push
lea
push
push
push
push
lea
push
push
call
add
int
imul
add
add
mov
add
in
mov
add
add
add
cld
scas
ja
test
data16
rcl
imul
nop
fildl
add
push
mov
mov
flds
addr16
add
call
sarl
mov
test
add
pushf
imul
hlt
lea
pop
jmp
push
push
push
lea
push
lea
push
push
call
pop
add
fdivs
mov
xlat
add
decb
add
nop
fwait
lcall
mov
add
repnz
add
mov
pop
xchg
jb
add
testl
add
mov
add
add
add
mov
lods
add
push
scas
pop
mov
jmp
js
scas
add
mov
lea
pop
pushl
push
inc
pop
pop
push
push
call
rorb
shll
add
xchg
add
hlt
insb
enter
add
add
enter
add
add
add
xchg
lods
add
push
mov
jmp
fcoms
shlb
rcl
cmc
jmp
add
mov
lea
pop
mov
mov
push
lea
push
lea
push
lea
push
push
push
call
cmpsl
add
add
add
xchg
scas
push
fistpll
add
jb
mov
add
push
lods
cmpsb
into
lea
ret
jbe
movsl
shr
int3
mov
test
add
add
icebp
mov
add
filds
mov
add
add
mov
add
add
jecxz
add
test
roll
add
pop
mov
push
push
sub
add
rol
push
sub
add
ror
sub
ror
pop
shl
add
lea
pop
push
push
call
mov
add
shl
push
ret
add
jno
roll
enter
into
fs
movsl
add
add
add
lods
add
add
sti
jo
mov
pusha
cld
add
add
jp
add
lret
mov
call
push
into
add
loop
mov
add
xchg
add
repnz
mov
add
nop
mov
add
or
push
dec
shr
xor
add
pop
call
push
push
push
push
push
push
lea
push
push
push
push
call
jp
add
jnp
mov
add
xchg
cmc
add
fadds
mov
add
int3
xchg
push
nop
add
loope
pop
add
xlat
push
jnp
cmp
fsubrl
in
add
xchg
add
gs
mov
les
les
add
aad
add
mov
add
mov
movsl
add
add
xchg
mov
fildl
aam
notb
sub
js
int3
fldz
ret
into
or
add
inc
pop
inc
push
push
or
inc
add
dec
sub
sub
inc
ror
pop
ror
pop
push
lea
push
push
push
lea
push
lea
push
push
push
call
mov
pop
fwait
lahf
add
add
add
add
add
add
into
lods
add
testl
mov
add
add
mov
lcall
add
notb
ffreep
mov
add
push
jbe
add
hlt
add
mov
hlt
mov
add
mov
mov
je
mov
hlt
lea
pop
push
call
push
rol
sub
pop
cmpl
je
push
push
add
sub
inc
push
or
not
add
sub
xor
shr
sub
not
dec
pop
not
pop
push
rol
shr
pop
push
push
push
call
xchg
pop
loop
lcall
add
test
add
add
add
out
xchg
enter
lea
add
add
pop
mov
jb
stc
add
lods
nop
add
shl
test
loopne
xchg
addr16
add
mov
add
add
add
lock
jmp
mov
pop
add
pop
call
push
ror
sub
shl
pop
cmpl
je
push
push
push
xor
add
shl
shr
lea
sub
sub
add
not
pop
inc
lea
add
pop
push
lea
lea
not
pop
push
push
push
lea
push
push
lea
push
push
push
push
push
call
addl
icebp
jb
fildll
mov
int3
lods
fstps
add
fiaddl
mov
cwtl
add
mov
add
add
push
ljmp
mov
cmc
mov
jp
addb
data16
pusha
jb
add
fisttps
pop
call
cmpl
je
push
push
ror
shr
shl
push
and
add
not
sub
shr
dec
pop
sub
pop
push
lea
push
push
push
push
push
call
mov
add
push
in
xorb
add
add
add
add
add
add
add
mov
add
mov
add
movsl
fistps
mov
add
in
test
stos
mov
cwtl
add
mov
cmpl
add
shl
jle
mov
add
mov
xchg
negb
aam
bound
pop
push
push
lea
xor
pop
call
push
xor
shr
pop
cmpl
je
push
push
sub
inc
push
or
not
add
lea
sub
lea
rol
sub
pop
not
pop
push
xor
xor
sub
pop
push
call
push
push
push
call
add
mov
xlat
mov
add
lret
add
jae
test
cmc
pop
leave
add
add
mov
add
add
mov
mov
lea
pop
cmpl
je
push
push
dec
ror
ror
push
push
pop
add
sub
sub
add
pop
lea
rol
shl
ror
pop
push
lea
push
push
push
push
push
push
lea
push
push
call
sti
clc
jle
pushf
clc
lahf
add
je
mov
mov
add
jae
mov
aam
pop
add
stos
mov
stos
les
icebp
add
add
rcrb
repnz
roll
mov
call
add
jp
ftst
add
add
mov
lea
pop
push
push
push
lea
push
push
push
lea
push
push
call
mov
loop
fsts
add
pusha
into
add
pop
mov
add
mov
mov
fs
mov
add
add
add
mov
cmpsl
mov
sbb
call
push
push
push
push
push
lea
push
push
push
call
gs
insb
cmpsb
lock
mov
jns
loope
aam
add
pop
add
clc
loopne
out
outsl
data16
add
add
jecxz
pop
add
add
imul
cmpsb
add
jle
jae
jmp
out
lock
jo
loope
add
add
shlb
add
testb
add
subb
add
mov
lea
pop
cmpl
je
push
push
xor
inc
rol
push
push
pop
add
xor
add
sub
inc
pop
add
add
add
sub
pop
push
dec
shr
rol
pop
push
call
push
lea
pop
cmpl
je
push
push
shr
push
sub
add
sub
sub
not
pop
inc
pop
push
push
push
push
push
push
call
add
insb
add
pop
jb
mov
jmp
frstor
add
add
add
mov
int3
add
out
mov
xchg
add
add
aad
push
fiaddl
mov
popf
xchg
mov
fwait
cld
add
mov
lea
pop
push
call
push
lea
sub
not
lea
pop
cmpl
je
push
push
rol
xor
push
sub
add
inc
sub
shr
pop
not
ror
pop
push
push
push
lea
push
push
push
push
lea
push
push
call
xorl
std
imul
add
out
les
mov
push
cmpsl
fildl
add
add
scas
je
jp
add
add
add
lea
in
jno
add
fisubs
add
out
mov
cmpsl
push
jns
add
mov
cmpsl
out
xchg
xchg
mov
mov
lea
pop
push
push
lea
push
push
lea
push
call
add
rolb
call
fwait
pop
add
out
add
push
xchg
loope
jo
add
add
add
mov
mov
mov
stc
add
bound
add
add
add
lods
add
cmpb
add
cmpsl
add
adc
in
add
push
add
sub
pop
cmpl
je
push
push
xor
shl
not
lea
push
push
pop
add
lea
sub
shl
rol
not
pop
shr
xor
pop
push
lea
push
lea
push
call
add
add
add
add
rcrl
add
xchg
ljmp
testb
sti
jae
jmp
mov
mov
add
addb
lds
add
les
push
push
push
push
lea
push
lea
push
call
pop
in
jge
add
add
pop
add
mov
add
insb
popa
aad
stc
add
add
mov
fwait
ja
int3
mov
add
gs
add
xchg
mov
testl
add
add
jbe
add
int
add
add
add
mov
add
add
imul
add
mov
add
pop
call
cmpl
je
push
push
sub
push
or
inc
add
shl
dec
lea
add
sub
pop
pop
push
push
push
push
lea
push
lea
push
push
call
jmp
push
clc
add
jmp
cmc
jmp
jno
repnz
cmpsl
std
mov
jno
std
lret
cmp
mov
stos
movsl
cmpsb
jge
add
mov
add
repnz
add
shr
add
jmp
rol
aad
aad
popf
add
pop
push
push
lea
push
push
push
lea
push
lea
push
push
push
lea
push
push
call
add
mov
add
add
mov
add
mov
add
add
insb
rolb
lds
pop
add
andb
jb
add
fwait
popf
pop
add
add
popf
add
mov
add
add
mov
add
test
into
jl
mov
shrb
jl
les
xchg
xor
add
les
je
push
push
lea
rol
push
push
pop
add
dec
sub
shr
lea
shr
lea
pop
dec
pop
push
pop
push
call
push
push
lea
push
push
push
push
push
call
pushf
add
scas
add
add
mov
mov
mov
cli
mov
jmp
add
xchg
add
add
addr16
add
mov
jp
add
pusha
in
add
loop
add
mov
add
int
jno
jp
iret
mov
cld
lea
pop
cmpl
jne
push
lea
push
call
nop
cwtl
jmp
add
mov
lret
jmp
decb
mov
mov
add
add
cmpsb
sbbl
pop
add
mov
xchg
mov
lea
pop
mov
push
xor
ror
shr
pop
movl
jmp
push
push
push
push
push
lea
push
push
push
push
call
test
add
movsb
xchg
add
mov
add
add
mov
add
insb
add
add
add
mov
add
add
cmc
add
scas
int
xchg
add
icebp
out
mov
mov
add
add
stos
add
mov
lea
pop
xor
push
lea
shl
lea
xor
pop
pop
push
push
push
call
mov
mov
lret
add
mov
mov
lods
add
arpl
add
add
add
add
loopne
add
pop
xorl
pop
mov
arpl
mov
add
add
mov
add
jns
pop
push
gs
push
add
xchg
push
mov
add
int
add
lods
mov
mov
or
pop
pop
push
shl
sub
add
pop
pop
push
push
push
call
add
fidivs
pusha
pop
add
gs
nop
gs
loopne
add
lods
loopne
test
add
cltd
fisubrl
add
enter
insb
arpl
push
push
adc
addl
outsl
add
add
add
mov
mov
lea
pop
leave
ret
push
push
push
call
ret
rolb
xchg
cltd
enter
mov
add
add
scas
xchg
add
add
mov
push
push
or
roll
pop
jmp
fisubrs
in
cmc
int
clc
pop
xchg
jle
fimull
pop
push
mov
push
push
push
lea
push
push
push
lea
push
push
call
add
fists
add
hlt
add
add
add
add
add
out
test
add
int
add
lea
add
sti
addl
add
xchg
mov
imul
jns
add
xchg
mov
pop
push
add
test
add
in
gs
add
add
aad
add
imul
push
shr
pop
cmpl
jne
push
push
ror
push
or
inc
add
rol
xor
sub
sub
ror
pop
sub
shr
pop
push
add
add
pop
pushl
push
push
push
push
push
push
push
lea
push
push
push
call
jl
add
add
add
mov
addb
add
add
popa
add
enter
jno
movsb
filds
call
lret
xchg
mov
mov
lea
pop
call
push
push
push
push
push
push
lea
push
push
call
addr16
add
jbe
popa
mov
sti
add
mov
jnp
mov
incb
js
lods
fiadds
jno
push
lret
jle
sbbl
pop
jp
add
je
xchg
xchg
mov
jne
mov
lea
pop
push
push
push
push
push
lea
push
push
call
bound
out
lea
add
add
xchg
add
add
add
add
mov
add
xchg
mov
add
xchg
jge
jb
add
add
je
add
int3
stos
mov
add
add
loopne
cmpsl
lds
add
xchg
xchg
mov
hlt
lea
pop
call
push
rol
pop
jmp
cmpl
je
push
dec
rol
shl
pop
cmpl
jne
push
push
push
lea
push
push
push
push
push
push
call
mov
neg
add
add
add
hlt
js
shlb
lea
into
add
incb
add
arpl
add
add
push
add
add
imul
mov
cmpsl
add
add
add
rolb
fstpl
jle
add
out
data16
cmpb
lea
pop
leave
add
push
push
push
lea
push
call
push
add
imul
xchg
rolb
mov
push
add
add
add
add
add
add
add
cmc
mov
popf
add
push
loope
add
add
add
addb
add
leave
add
fsubs
out
add
enter
add
add
add
out
mov
adc
push
lea
push
call
add
add
add
xchg
add
int
addl
add
lea
add
cltd
out
add
add
jne
jl
subb
add
push
popa
pop
jne
fadd
cli
add
loopne
fdivrl
aam
bound
pop
pop
pop
push
push
push
push
lea
push
call
in
add
mov
add
add
xlat
push
add
ftst
mov
mov
stos
xchg
out
mov
shll
add
add
loopne
gs
icebp
jmp
mov
mov
clc
mov
mov
mov
scas
add
pop
pop
leave
push
push
push
push
push
push
push
push
call
add
add
add
add
fwait
movl
add
cltd
lods
xchg
mov
add
mov
add
add
add
addr16
js
nop
push
pop
add
mov
lea
pop
add
push
ror
add
xor
pop
ret
push
shl
pop
jmp
push
push
push
push
call
add
add
pop
add
add
mov
add
push
add
jbe
add
shrw
add
filds
scas
xchg
add
nop
add
filds
gs
bound
add
add
push
mov
popl
jns
pop
mov
add
sbbl
fmull
jge
add
test
fnsave
xlat
push
inc
dec
push
push
pop
add
lea
sub
sub
dec
sub
rol
pop
not
ror
pop
push
push
push
push
push
lea
push
push
push
lea
push
call
add
hlt
add
add
fnstsw
lcall
out
add
loope
xchg
jns
int
in
jp
addl
arpl
mov
fadds
mov
lea
pop
pushl
call
push
rol
ror
lea
shr
pop
push
push
push
push
push
push
push
push
push
call
int3
add
mov
add
mov
fiaddl
push
add
add
int3
addr16
add
add
add
outsl
leave
sti
fisubs
add
xchg
in
mov
add
lods
in
in
jl
test
lea
add
add
add
int3
add
scas
jo
add
pop
call
push
shr
sub
inc
shl
pop
jmp
push
push
lea
push
lea
push
push
push
push
lea
push
push
push
call
add
addl
faddl
add
out
nop
cmc
add
xlat
add
shl
add
xchg
add
mov
addb
xchg
fadds
into
aad
mov
jmp
jb
sti
mov
mov
add
mov
add
add
lea
pop
cmpl
jne
push
add
pop
mov
push
push
lea
push
push
call
xchg
mov
clc
push
add
push
mov
add
jge
pop
add
bound
movsl
mov
push
add
add
jne
mov
lea
add
add
cli
into
add
cwtl
push
push
nop
fiaddl
testb
pusha
add
imul
fmull
add
add
push
push
push
add
shl
push
sub
add
xor
lea
sub
add
rol
sub
pop
sub
shl
pop
push
lea
push
push
push
push
push
push
push
call
int
test
jge
shll
stos
add
outsl
mov
imul
cmc
add
in
fildl
pop
push
xchg
add
add
out
loope
out
add
add
add
mov
lea
pop
pushl
call
push
push
rol
sub
rol
push
or
inc
add
not
sub
sub
rol
rol
pop
dec
pop
push
xor
pop
pushl
push
sub
add
pop
call
push
sub
shl
pop
call
push
push
rol
xor
push
or
not
add
lea
sub
add
pop
shl
ror
pop
push
push
push
push
call
push
add
add
add
push
add
mov
cld
xchg
jb
aam
jecxz
add
add
les
int3
xchg
ljmp
add
add
mov
add
jae
xchg
rclb
add
clc
cwtl
xchg
add
pop
pushl
push
push
push
push
lea
push
push
call
add
add
pop
xchg
clc
stos
fstp
push
push
add
movb
add
add
push
add
add
ljmp
movsl
mov
jnp
jnp
popl
roll
add
xlat
add
mov
add
fldl
mov
lea
pop
call
call
push
push
shl
push
push
pop
add
sub
sub
not
ror
pop
add
add
pop
push
lea
push
call
add
add
lret
aam
loopne
loopne
mov
cwtl
leave
into
fldl
aad
pop
add
loopne
mov
add
mov
mov
add
out
push
add
push
add
add
xchg
add
add
push
add
add
into
add
pop
pushl
push
sub
xor
dec
pop
call
push
lea
push
push
push
push
push
push
call
jl
je
out
shrl
mov
add
add
add
clc
roll
add
aad
add
add
mov
fsub
mov
lods
add
std
xlat
mov
xchg
addr16
add
outsl
add
add
in
scas
test
add
divl
add
lea
pop
call
push
push
xor
inc
not
push
and
add
lea
sub
shr
pop
inc
shr
shr
pop
push
push
push
call
add
add
in
add
add
loopne
add
push
add
testb
icebp
lds
add
mov
stos
jo
popf
mov
jmp
mov
repnz
xchg
add
jb
mov
xchg
pop
pushf
add
loope
sarl
jne
mov
fwait
rolb
mov
xchg
test
push
cli
pop
mov
test
aam
bound
pushl
push
push
push
lea
push
push
call
cmpsb
shll
les
cli
add
add
add
cmc
roll
lret
add
fdivrp
add
bound
add
scas
xchg
add
jb
add
add
jle
clc
mov
lea
pop
call
push
push
push
push
push
push
lea
push
push
push
call
mov
add
add
xchg
mov
add
imul
add
fidivrs
in
lcall
std
add
add
mov
lcall
nop
filds
mov
lea
pop
call
push
push
shr
sub
sub
push
sub
add
xor
sub
ror
shl
ror
pop
shr
rol
sub
shl
pop
push
xor
lea
lea
pop
pushl
call
push
lea
push
lea
push
push
push
push
push
push
push
push
call
mov
add
xchg
add
add
add
add
add
shl
mov
add
jno
add
popf
add
add
cmpsl
les
add
jne
mov
add
add
ja
mov
mov
add
pushf
addl
add
add
popa
add
fildl
sti
jnp
mov
add
repnz
imul
mov
mov
lea
pop
call
push
push
inc
not
rol
sub
push
sub
add
shr
add
sub
sub
inc
pop
xor
sub
pop
push
rol
pop
pushl
push
lea
push
push
lea
push
lea
push
call
cwtl
push
mov
int3
add
arpl
add
imul
add
mov
insb
add
add
add
rolb
mov
aam
test
pushf
rcrl
xchg
mov
lahf
add
add
add
add
int
add
mov
lea
pop
call
push
push
lea
push
push
push
push
push
push
push
call
popf
sti
add
add
add
add
mov
sti
pop
add
add
testb
mov
add
mov
lret
add
mov
scas
mov
pop
les
test
add
add
sar
jns
movsb
push
mov
mov
add
add
pop
call
push
push
push
push
call
std
jae
lret
in
loopne
fildl
cltd
ja
pusha
loope
add
add
pop
add
add
add
pop
add
jmp
add
add
iret
add
add
add
cmpsl
mov
lret
add
pusha
pusha
ja
xchg
add
lods
into
mov
lds
add
add
add
add
push
ja
push
nop
rcll
lea
pop
call
push
sub
dec
pop
lea
push
push
inc
rol
push
and
add
lea
dec
sub
ror
add
shl
pop
rol
pop
push
push
push
push
lea
push
call
add
sahf
out
add
add
fnsave
add
lret
into
add
add
add
rcrb
push
add
add
xchg
faddl
into
add
test
cmpl
pop
add
add
pop
pushl
call
push
sub
xor
ror
shl
pop
push
push
pop
call
push
push
shl
lea
push
push
pop
add
lea
sub
lea
pop
xor
pop
push
lea
dec
not
add
pop
pushl
push
push
push
push
push
lea
push
lea
push
lea
push
call
add
push
xchg
add
add
cmpb
add
mov
mov
xchg
push
add
in
add
mov
push
add
add
add
add
roll
add
jns
add
js
mov
mov
in
mov
add
mov
lea
pop
call
push
lea
push
push
push
push
push
push
lea
push
call
lret
xchg
out
scas
mov
int3
add
enter
cmpsb
add
stos
add
add
jne
loopne
pop
jmp
add
jecxz
hlt
add
add
lret
addr16
add
push
jle
lds
xchg
add
add
add
fistps
add
movsl
xchg
into
add
mov
add
pop
call
mov
push
push
sub
add
push
or
inc
add
rol
sub
rol
sub
not
lea
shr
pop
ror
shl
pop
push
sub
rol
pop
pushl
push
inc
rol
rol
ror
pop
call
push
not
lea
pop
push
pushl
push
push
push
push
push
call
mov
add
add
mov
mov
test
add
push
fs
je
pop
in
bound
add
add
xchg
add
add
lea
pop
call
push
push
dec
shl
inc
push
or
inc
add
shl
sub
not
ror
pop
rol
shr
inc
pop
push
push
call
int
out
ja
add
lea
mov
jge
rclb
popf
mov
add
fwait
lea
push
push
add
pop
add
add
add
add
movl
add
mov
pop
add
je
add
add
mov
add
add
add
aam
bound
pop
pushl
push
sub
pop
call
push
push
not
push
push
pop
add
ror
shr
sub
ror
xor
rol
pop
shl
shr
lea
pop
push
push
xor
dec
push
push
pop
add
xor
inc
ror
sub
shl
pop
shl
xor
sub
pop
push
lea
push
lea
push
push
push
lea
push
call
into
faddl
aad
lea
in
add
cmpsl
aad
popl
add
add
add
imul
mov
add
iret
imul
add
je
arpl
mov
out
xchg
add
in
push
lret
add
fldl
add
iret
aad
add
mov
arpl
pop
call
push
push
not
add
push
or
inc
add
lea
rol
shr
shl
sub
xor
sub
pop
sub
shr
dec
pop
push
lea
push
push
call
lcall
add
cmpsb
movsl
add
add
add
jns
add
js
add
movsb
add
ja
add
mov
add
mov
lea
pop
pushl
push
rol
ror
pop
call
push
push
push
push
push
call
add
add
add
stc
shr
popa
add
fcmovne
add
fwait
je
insb
add
jb
jne
add
stc
add
jns
fstpl
add
add
add
popf
mov
lea
pop
mov
push
pop
lea
push
push
push
push
push
call
pop
add
popl
in
int3
loope
add
add
xchg
mov
mov
lock
pop
xchg
add
xchg
add
div
fstps
mov
iret
add
mov
lods
fcomip
popl
add
add
add
cmpsl
fmulp
add
jbe
jge
fisubs
add
cwtl
xchg
ja
xchg
roll
ret
xchg
add
outsl
pop
jae
lret
mov
lea
pop
lea
push
lea
push
push
push
push
call
add
jne
xchg
mov
push
pop
mov
xor
mov
mov
fidivl
add
out
je
jl
imul
mov
add
loop
flds
jl
out
add
imul
add
cmpsl
icebp
movsl
add
insb
add
add
gs
out
add
cmpsb
push
int3
jge
add
mov
lea
pop
push
push
push
dec
pop
push
push
push
push
push
lea
push
push
call
pop
addb
lahf
add
add
cmpsl
add
sbbl
mov
add
stos
in
add
testl
add
out
iret
pusha
add
rcrl
xchg
mov
add
add
add
add
rorl
push
mov
lea
pop
push
push
lea
shr
sub
pop
push
push
sub
pop
push
push
push
push
lea
push
push
lea
push
push
push
lea
push
push
call
add
add
add
jmp
xchg
add
add
rclb
lret
rolb
lret
out
les
movsb
add
lret
mov
leave
add
add
mov
nop
lods
test
add
push
movsb
shl
mov
lea
pop
push
push
add
add
xor
shl
pop
push
push
push
lea
push
call
add
add
add
fwait
mov
mov
push
clc
loopne
add
clc
add
cmpsb
push
add
xchg
add
scas
add
std
add
jo
jne
mov
call
add
xlat
add
testb
pushl
push
push
push
call
mov
mov
jb
add
add
add
add
add
add
test
ficoms
add
in
sarl
add
cmpl
movl
shl
mov
add
mov
mov
lea
pop
push
push
add
shr
lea
pop
call
push
push
push
or
not
add
dec
lea
sub
shl
pop
not
add
lea
pop
push
lea
sub
pop
pushl
call
push
dec
not
pop
call
mov
push
push
call
add
add
xchg
out
mov
lahf
aam
roll
add
push
mov
mov
mov
add
std
data16
repnz
mov
jo
aad
cmpsl
mov
add
pop
pop
dec
jne
push
sub
shl
sub
rol
pop
jmp
call
push
push
dec
add
push
and
add
sub
lea
pop
shl
xor
pop
push
push
push
push
push
push
push
push
lea
push
lea
push
call
addb
loopne
add
mov
addl
mov
imul
add
push
xchg
stc
ja
add
add
outsl
add
pop
cmpsb
fs
arpl
stos
xchg
cld
jmp
mov
xchg
jp
fldcw
out
add
add
mov
mov
mov
fcoml
addl
lcall
call
add
gs
lea
pop
pushl
push
pop
call
push
add
add
not
pop
push
call
push
push
push
push
push
call
add
add
rcrb
add
mov
movsl
test
add
add
sahf
aam
mov
add
loopne
sti
mov
pop
add
jecxz
add
add
mov
cwtl
mov
movsb
sahf
pop
add
aam
bound
mov
push
shl
pop
lea
push
push
add
inc
push
or
not
add
sub
not
add
sub
add
ror
dec
pop
ror
sub
pop
push
lea
pop
pushl
push
sub
pop
call
push
shr
xor
ror
pop
push
push
lea
pop
call
push
push
rol
ror
add
sub
push
or
inc
add
lea
sub
sub
pop
lea
dec
rol
not
pop
push
push
push
push
push
call
loopne
cwtl
xorl
test
roll
push
mov
add
add
scas
pusha
ret
mov
scas
xchg
out
popa
lcall
rcrl
mov
add
rcr
xlat
add
lea
pop
pushl
push
shr
not
shl
pop
call
push
lea
push
push
push
push
push
call
push
add
add
add
mov
out
add
rclb
mov
rolb
stos
add
cli
add
add
push
pop
lahf
rolb
add
ja
bound
add
mov
jno
lds
jae
add
out
add
icebp
add
jmp
add
mov
movsl
arpl
push
icebp
lcall
add
mov
bound
pop
call
push
add
pop
mov
push
push
push
push
push
lea
push
push
push
call
xchg
add
add
push
mov
out
insb
mov
add
push
lret
aam
je
push
push
pop
jmp
add
popf
out
add
add
add
add
movsb
int
int3
stos
add
xchg
mov
add
push
add
into
xchg
testl
add
add
add
cltd
add
lret
mov
mov
push
out
mov
lea
pop
lea
push
push
push
or
not
add
not
dec
sub
sub
rol
dec
pop
shl
add
pop
push
sub
pop
pushl
call
push
sub
pop
lea
push
push
inc
ror
pop
push
push
push
push
push
push
call
add
cmpsl
add
lcall
add
mov
add
cwtl
repnz
add
add
call
sarb
lods
data16
add
add
add
xchg
cmc
jno
popf
mov
add
add
lock
mov
add
add
mov
mov
mov
lea
pop
push
push
rol
sub
inc
pop
pushl
push
push
add
inc
push
push
pop
add
add
xor
shr
sub
pop
dec
lea
add
dec
pop
push
push
call
add
push
mull
leave
add
add
add
xchg
add
mov
lret
add
add
mov
rclb
cld
add
test
stc
add
jb
in
fucom
ret
mov
add
shlb
into
addl
stos
mov
jnp
mov
add
pusha
or
push
push
call
mov
add
repnz
push
addb
add
jbe
mov
add
aad
test
xchg
xchg
out
add
jnp
rorb
mov
cmpsl
add
add
add
add
fadds
add
mov
lea
pop
call
push
push
add
sub
push
and
add
rol
add
sub
not
xor
shr
dec
pop
ror
pop
push
sub
add
rol
add
pop
pushl
call
push
push
push
lea
push
push
lea
push
push
call
cmc
add
add
ljmp
test
mov
out
add
cwtl
fildl
iret
add
add
lods
add
loope
add
add
mov
add
mov
push
add
add
add
add
add
add
mov
jo
les
call
push
push
lea
lea
push
push
pop
add
add
not
sub
sub
sub
pop
shr
inc
shr
pop
push
sub
add
pop
pushl
push
shl
pop
call
push
sub
pop
call
jmp
push
push
push
call
jle
cmpb
sahf
add
push
xlat
add
mov
sar
pop
test
jo
mov
call
test
add
les
add
jle
add
scas
push
add
add
je
jbe
stc
mov
add
pop
pushl
mov
push
lea
not
xor
pop
jmp
push
push
shr
add
ror
shr
push
or
inc
add
add
sub
dec
pop
pop
push
not
sub
shr
shr
pop
pushl
call
push
add
dec
pop
push
push
push
push
call
add
jae
add
lret
call
out
in
push
enter
ljmp
mov
add
xchg
mov
rcr
int
xchg
add
loope
add
add
leave
xchg
in
icebp
ja
andb
add
mov
mov
popa
or
call
push
push
rol
push
push
pop
add
not
inc
rol
dec
sub
inc
xor
rol
pop
xor
not
pop
push
sub
add
rol
ror
pop
pushl
push
push
push
push
lea
push
push
call
mov
add
jns
add
stos
add
aam
add
mov
add
mov
cwtl
jb
nop
mov
out
add
add
cwtl
data16
push
mov
hlt
add
popf
add
add
add
xchg
mov
xchg
cltd
ljmp
add
test
mov
aam
push
fwait
je
mov
lea
pop
call
push
shr
pop
push
push
lea
push
push
push
push
lea
push
push
call
add
lcall
jge
popf
arpl
jle
lret
add
push
push
addl
ret
add
add
ret
push
add
add
add
mov
stos
add
add
fwait
cld
add
mov
aad
lock
xchg
add
mov
pop
add
add
lcall
bound
lock
sbb
call
push
xor
pop
leave
push
push
push
push
push
push
call
add
int3
add
stos
add
add
add
bound
mov
mov
add
add
add
add
lahf
add
test
ja
add
aad
add
sbb
les
push
add
add
lods
add
add
add
loope
mov
add
add
add
add
add
add
in
fdiv
hlt
out
add
add
rolb
add
add
add
int3
mov
push
xchg
add
jmp
in
add
roll
hlt
lea
pop
pop
push
push
push
lea
push
push
call
mov
pop
test
popf
std
pop
add
add
je
int3
out
mov
add
jae
add
fucomp
aam
xchg
popf
add
addb
push
jp
mov
add
mov
clc
icebp
add
addr16
shr
cli
add
into
push
mov
lea
pop
pop
pop
push
sub
add
pop
leave
push
shl
pop
add
ret
push
lea
push
push
push
lea
push
push
push
push
lea
push
call
add
test
add
xchg
fildl
cmpsb
test
mov
mov
loop
add
xchg
popl
add
stos
lods
pushf
lods
add
pop
add
jmp
in
add
mov
test
cwtl
testb
test
add
add
add
xchg
add
xchg
mov
lea
pop
leave
push
push
push
push
push
lea
push
push
push
lea
push
lea
push
call
xchg
stos
add
lahf
add
adcl
lods
fwait
mov
jne
imul
mov
add
lret
mov
cmpsb
cld
fiaddl
add
js
add
add
add
mov
add
testl
pop
ret
push
push
not
pop
mov
push
lea
not
add
pop
cmpl
jne
push
lea
sub
pop
mov
push
inc
pop
jmp
mov
push
push
push
push
call
pop
push
add
add
jno
addr16
stos
add
add
add
add
mov
pusha
add
mov
mov
add
push
in
fs
fcmovnb
add
insb
mov
add
add
xchg
add
pop
and
xor
push
push
push
push
push
push
push
push
call
std
add
imul
lea
add
out
add
xchg
mov
pop
add
add
add
hlt
add
hlt
repnz
stc
iret
mov
ja
add
mov
add
mov
out
jmp
and
push
not
pop
add
push
rol
pop
xor
dec
push
add
pop
sub
push
xor
sub
rol
pop
jmp
push
inc
pop
sub
push
xor
dec
pop
pushl
push
push
lea
push
push
lea
push
push
push
call
popa
imul
or
lock
add
add
add
add
gs
loop
add
pushf
add
add
outsl
fs
jne
xchg
popf
jb
ja
mov
aam
bound
pop
push
push
lea
push
push
lea
push
push
push
push
push
lea
push
call
add
add
stc
pop
add
add
add
add
add
in
jmp
ljmp
repnz
cld
lods
mov
add
xchg
add
jae
mov
jnp
add
popf
add
add
pusha
add
pop
sahf
add
cwtl
mov
cmc
sarl
add
jmp
cmpsb
call
arpl
pop
sub
push
push
push
push
push
call
ret
mov
mov
nop
add
add
out
roll
scas
add
scas
loopne
clc
add
add
pop
add
mov
add
add
insb
addb
mov
icebp
mov
aad
iret
pop
into
sar
mov
add
push
ficompl
adc
cmp
jne
push
shl
shl
sub
pop
mov
push
ror
pop
lea
push
push
push
lea
push
push
push
lea
push
push
push
push
call
add
add
flds
ljmp
mov
imul
add
jno
lds
jb
push
jmp
push
add
add
push
clc
add
je
add
add
movb
lods
fdivrl
into
leave
mov
hlt
lea
pop
sub
push
not
pop
mov
push
add
ror
add
add
pop
shr
add
push
push
push
lea
push
push
lea
push
push
push
lea
push
push
call
fcmovne
je
jge
add
test
push
out
add
fwait
add
add
js
cmpsb
add
je
mov
jb
mov
jno
add
jp
mov
cld
add
add
push
mov
test
jno
movb
pop
sub
pushl
push
push
push
push
push
push
push
push
push
push
call
add
add
add
xchg
add
mov
mov
lods
mov
add
jo
pop
ficompl
jne
out
arpl
jle
adcl
leave
add
mov
pop
add
add
fucomp
in
into
fsin
add
pop
test
add
add
loopne
mov
add
jb
popl
mov
lea
pop
pop
push
push
lea
push
push
lea
push
push
push
push
push
call
mov
cltd
subl
mov
mov
pop
pop
ljmp
mov
add
add
and
stc
scas
pop
add
add
mov
add
jmp
out
ffree
mov
lea
pop
shr
push
shr
ror
pop
and
push
not
pop
sub
cmp
jne
push
push
push
push
push
call
pop
ret
popa
je
add
add
add
int3
fisttps
hlt
push
add
add
ja
add
add
js
nop
aam
add
lret
add
add
add
push
jle
add
add
rolb
add
xchg
test
add
in
cld
lea
pop
leave
push
rol
add
pop
ret
push
push
push
push
push
lea
push
push
push
push
lea
push
push
call
mov
popf
add
movsb
add
add
add
add
call
repnz
jmp
fiaddl
add
scas
mov
out
test
mov
xlat
movsb
add
mov
mov
add
add
arpl
add
add
add
add
add
mov
lea
pop
mov
push
lea
sub
pop
add
push
push
xor
sub
pop
push
push
lea
not
pop
push
push
push
shr
ror
pop
push
mov
push
sub
rol
pop
lea
push
add
pop
sub
push
push
push
push
push
call
pusha
iret
cmpsl
fildl
filds
int
mov
mov
add
add
mov
movb
sti
add
add
add
in
add
rolb
lret
add
add
mov
loop
idivb
add
add
add
add
imul
lret
movb
xchg
lahf
add
jle
jb
hlt
lea
pop
mov
shr
push
rol
add
pop
add
push
push
lea
push
lea
push
push
push
lea
push
push
lea
push
call
bound
add
in
addl
add
add
add
test
mov
add
add
xchg
add
add
loopne
add
mov
pop
add
push
add
add
add
sti
loopne
lds
jne
out
mov
roll
add
add
add
mov
mov
stos
mov
lea
pop
mov
push
lea
push
push
push
push
push
call
scas
push
add
add
clc
jp
lahf
mov
cwtl
add
cmpsb
add
nop
aam
add
add
xchg
sti
addb
add
int3
add
add
add
jmp
cltd
gs
filds
add
xchg
test
fcom
push
mov
out
pusha
add
add
mov
add
mov
lea
pop
add
push
push
push
lea
push
lea
push
push
lea
push
push
push
call
fs
insb
add
ret
div
in
scas
fldl
add
add
stc
add
call
pusha
mov
mov
pop
mov
mov
add
add
add
add
add
add
add
add
out
add
add
jb
add
ja
add
jno
faddl
mov
data16
mov
push
push
lea
push
lea
push
push
push
lea
push
call
add
faddl
add
add
mov
int3
call
push
add
mov
push
add
add
add
add
cltd
ret
add
lret
add
int
aam
bound
add
xor
push
push
call
incb
cmpsl
jns
push
push
data16
imul
add
add
add
jbe
ret
add
add
jbe
fcomp
add
xorl
std
jp
fisubrs
add
add
add
add
pop
fnsave
addr16
add
add
cmpsb
fcmovbe
mov
lea
pop
mov
push
push
call
in
add
add
add
add
out
mov
jmp
flds
jae
mov
roll
mov
add
imull
popf
aad
lds
mov
cmc
add
mov
mov
lea
pop
and
push
not
pop
rol
push
push
lea
push
push
lea
push
push
lea
push
push
push
push
call
add
mov
add
nop
jnp
add
neg
jb
mov
xlat
mov
add
fcmovb
xchg
icebp
add
add
roll
xchg
add
add
add
fwait
mov
add
call
add
out
add
pusha
add
lea
pop
rol
push
push
push
call
cwtl
lret
add
add
jbe
pop
jne
add
mov
cltd
mov
lods
add
mov
je
stc
pop
add
enter
add
loope
jp
add
xlat
stc
add
hlt
add
add
les
add
xlat
shr
inc
pop
inc
push
ror
lea
add
pop
cmpb
jne
add
push
rol
pop
cmp
je
add
push
pop
cmpl
jne
push
push
push
push
call
add
leave
into
pop
mov
xchg
add
push
test
add
roll
movsl
add
int3
jmp
lds
xchg
mov
fdivp
add
stc
imulb
pop
lcall
addr16
add
mov
lea
pop
xor
push
sub
shr
pop
pop
push
push
call
add
cmpsb
push
jge
jle
add
hlt
add
add
add
jo
pop
add
pop
sahf
add
add
test
mov
mov
push
add
add
pop
pop
push
push
lea
push
push
lea
push
lea
push
call
insb
mov
mov
xchg
mov
add
add
push
cli
mov
int3
roll
xchg
in
add
pop
outsl
pop
xchg
popa
add
mov
jnp
out
mov
lea
pop
pop
pop
push
sub
sub
lea
lea
pop
pop
push
not
shl
pop
leave
push
xor
dec
sub
pop
ret
push
dec
pop
mov
push
shl
dec
pop
add
push
rol
shr
xor
add
pop
push
push
push
lea
push
lea
push
push
push
lea
push
push
call
jge
add
out
mov
subb
hlt
mov
push
mov
out
jne
shl
mov
mov
addb
add
test
add
jmp
add
add
add
jb
ja
mov
add
or
mov
lea
pop
add
push
push
push
push
lea
push
lea
push
push
push
lea
push
push
call
add
cld
add
add
add
lock
mov
jb
add
add
imul
mov
add
rcrb
add
sarb
leave
pop
push
rcrl
jno
sti
add
mov
pushf
mov
add
loope
xchg
lock
xchg
add
arpl
fisttps
pop
mov
cmpw
push
push
lea
push
lea
push
push
push
push
push
lea
push
push
call
add
add
in
push
roll
jae
mov
pop
add
add
std
add
cld
loop
mov
push
add
jne
loope
add
mov
pop
add
mov
std
mov
add
enter
add
leave
add
mov
lea
pop
pop
push
push
push
lea
push
push
push
call
into
in
out
aad
aad
add
ret
ficompl
jl
jmp
icebp
add
add
add
rcll
mov
fcoms
add
pop
js
test
hlt
int
testl
fcmovnbe
in
mov
add
mov
stos
mov
add
mov
lea
pop
pop
mov
push
shr
lea
pop
push
push
lea
push
lea
push
push
push
lea
push
call
iret
adc
lock
lods
add
add
fsubrs
pushf
lahf
stos
out
mov
hlt
movb
mov
in
pop
add
cmpb
int
add
mov
add
int3
lods
iret
push
add
add
add
lret
data16
stc
pop
lcall
pusha
sbb
pushf
icebp
call
push
mov
xor
push
push
push
push
lea
push
push
lea
push
call
in
pop
add
add
push
fwait
in
add
fstl
test
xchg
cmpsl
push
icebp
pop
sti
arpl
push
xchg
in
add
mov
add
incb
cmpsl
mov
add
ror
add
pop
add
add
add
test
add
add
add
add
add
add
add
cld
mov
add
add
mov
lea
pop
xor
pop
push
add
not
rol
sub
pop
pop
pop
push
sub
dec
shr
pop
pop
push
sub
rol
pop
pop
push
push
push
push
push
push
call
fwait
add
mov
add
mov
add
pop
add
xchg
mov
mov
fwait
leave
mov
out
pop
mov
fld
push
add
mov
popf
xchg
mov
incb
add
push
out
add
mov
lea
pop
leave
ret
push
not
pop
push
mov
push
sub
rol
pop
add
push
push
shr
add
pop
push
push
push
dec
pop
push
push
xor
dec
not
not
pop
mov
push
push
not
lea
pop
pop
push
push
lea
push
call
loopne
jns
add
mov
add
gs
add
leave
pop
mov
pop
add
mov
xchg
push
add
mov
add
ret
add
jb
add
mov
push
add
add
add
jae
in
add
push
rcll
jle
out
push
add
mov
lea
pop
lea
sub
push
push
push
push
lea
push
push
lea
push
call
xchg
pop
add
imul
mov
add
mov
pop
loop
add
fwait
add
add
add
add
cmc
mov
add
pop
add
jmp
popl
nop
add
in
add
add
dec
pop
add
cwtl
popf
mov
sahf
jl
int3
lea
pop
mov
push
push
lea
push
push
call
xchg
aam
movb
bound
add
add
fadds
popl
add
fs
mov
push
cmpsb
jge
mov
add
rolb
mov
add
fiadds
add
jl
push
addb
jb
out
add
add
jecxz
mov
fcoms
push
flds
int
add
lret
add
ja
add
add
imul
add
jae
in
mov
testb
shr
add
push
pop
mov
push
lea
pop
add
pushl
push
push
lea
push
push
push
push
push
push
push
push
call
add
jecxz
mov
add
add
int3
add
jl
lds
loop
add
cld
add
mov
imul
aad
add
cmc
add
add
roll
add
xchg
add
add
add
add
add
add
xchg
cmpsb
add
xchg
lods
test
add
add
sub
inc
clc
push
shr
not
pop
mov
push
lea
push
push
push
push
lea
push
call
xchg
insb
fld
add
pop
add
out
add
fiaddl
js
add
jge
add
push
movsb
mov
mov
mov
nop
xchg
add
test
shll
add
mov
add
add
stos
pop
stc
xlat
xchg
aad
roll
add
data16
pop
mov
cltd
mov
lea
pop
add
push
push
push
push
push
push
push
lea
push
push
call
add
jnp
add
add
jno
jle
cmc
mov
jns
jo
mov
push
push
scas
add
jae
fistpll
mov
mov
lods
iret
jo
xchg
add
imul
stos
ljmp
add
add
xchg
add
and
xor
push
lea
add
pop
lea
push
rol
add
pop
mov
add
push
push
call
int3
mov
add
add
stos
movsb
add
leave
add
pop
sahf
ret
pushf
add
xchg
mov
push
lret
stos
je
add
pop
mov
loopne
popa
add
push
add
add
pop
out
add
xlat
add
and
fldenv
mov
filds
ja
repnz
mov
lea
pop
xor
push
not
sub
lea
pop
rol
push
push
push
push
lea
push
push
call
add
fdivrl
fildll
mov
add
add
push
gs
fcmovnbe
add
imul
xchg
stc
add
mov
mov
stc
jns
mov
ljmp
mov
pop
test
add
xchg
add
add
push
mov
lea
pop
nop
nop
push
dec
dec
pop
xor
push
sub
sub
rol
pop
nop
nop
push
rol
pop
inc
nop
push
push
push
lea
push
push
push
push
push
push
push
call
hlt
in
jae
lahf
add
lods
out
int
add
fnstcw
rolb
out
mov
lods
add
add
add
rclb
add
mov
mov
add
incb
add
test
bnd
iret
lds
fxam
data16
mov
jnp
pusha
ret
add
pop
mov
iret
popl
add
add
clc
int
add
pop
nop
push
push
push
push
lea
push
push
lea
push
push
lea
push
call
ret
faddl
loope
mov
add
gs
out
push
add
add
add
add
clc
push
lahf
xacquire
add
lcall
add
lret
cli
lahf
in
add
add
mov
lea
pop
cmpb
jne
push
shl
shr
pop
add
push
sub
add
pop
nop
push
push
push
push
call
add
lods
add
test
add
mov
in
iret
xchg
ja
xchg
add
iret
add
add
mov
add
cli
loope
rcrb
push
xchg
fcoms
arpl
add
push
int3
mov
lea
pop
nop
cmp
je
push
push
lea
push
push
push
push
call
hlt
pop
jmp
add
cld
add
add
int3
cli
add
test
add
pop
push
movb
iret
add
mov
add
add
fimull
jnp
mov
lea
pop
nop
push
xor
shr
add
sub
pop
nop
inc
push
xor
ror
pop
nop
push
push
lea
push
push
push
lea
push
push
lea
push
push
call
add
add
pushf
lahf
xchg
add
add
popa
add
decb
enter
add
add
mov
add
add
xchg
clc
lahf
cld
fcompl
add
pop
nop
push
inc
pop
cmp
jb
xor
push
rol
sub
pop
jmp
mov
push
lea
push
push
lea
push
push
call
add
fcmovnb
ret
jo
add
insb
add
add
add
pop
add
cwtl
xchg
push
add
add
aad
xchg
jmp
cwtl
test
jmp
icebp
mov
cld
addl
add
jle
add
add
mov
imul
not
pop
movzwl
mov
push
push
lea
push
push
lea
push
lea
push
call
mov
loopne
add
arpl
stos
add
add
iret
add
push
add
add
add
add
sahf
pushf
push
addr16
mov
add
nop
repnz
add
ljmp
add
mov
sahf
leave
shlb
fmull
rcll
dec
hlt
push
push
push
call
xchg
add
enter
jno
in
add
addb
mov
imul
out
pop
rcrl
add
add
cmpsl
add
xchg
adc
rcll
jl
add
in
add
add
add
stos
add
add
movsb
add
addr16
mov
mov
lea
pop
xor
push
add
pop
xor
shl
push
push
push
call
push
push
jle
mov
xchg
loope
add
aam
add
loop
add
lods
mov
mov
push
xchg
add
add
add
mov
add
add
mov
lea
pop
xor
push
lea
not
shr
pop
shl
push
push
push
push
push
lea
push
push
lea
push
lea
push
push
call
hlt
test
div
add
mov
lahf
add
ljmp
scas
add
add
int3
roll
rcr
int
jb
test
icebp
add
xchg
jle
test
add
jne
repnz
mov
mov
add
add
pop
add
fadds
mov
lea
pop
xor
push
shr
add
pop
shl
push
add
inc
shr
pop
xor
push
add
dec
pop
mov
push
lea
push
push
push
lea
push
lea
push
push
push
call
add
add
pop
cmpsb
sti
fldt
int3
add
sti
add
add
pop
movl
fcomps
iret
int
sahf
fildl
mov
add
add
fwait
add
add
bound
jne
xorb
add
add
mov
lea
pop
add
push
push
push
push
push
push
push
lea
push
push
push
call
add
pop
add
add
push
add
clc
add
jne
jae
add
cmc
jecxz
push
out
add
cmc
stc
push
add
mov
add
mov
std
addl
cld
add
add
leave
cmpsb
popa
add
jae
add
add
add
add
fadds
mov
fidivrs
gs
add
add
add
mov
lea
pop
pop
pop
push
xor
xor
pop
pop
push
shl
pop
pop
push
push
push
push
push
call
add
shl
pop
addb
cli
add
in
add
leave
int3
add
add
add
add
js
add
add
aad
sahf
fwait
movl
xchg
cli
addb
add
nop
insb
add
call
add
add
mov
lahf
add
add
add
add
mov
add
xlat
call
aam
bound
leave
ret
push
lea
push
push
call
fwait
xchg
fucomp
add
jne
lahf
outsl
add
data16
add
add
cltd
shrl
add
add
scas
scas
add
mov
add
add
call
cld
lea
pop
push
push
add
xor
pop
mov
push
shl
pop
push
push
lea
push
push
call
xchg
int3
add
add
nop
add
in
lcall
xchg
add
lret
add
xchg
sahf
add
mov
lret
jmp
popa
add
push
mov
bound
pop
jmp
add
mov
faddl
jecxz
add
xchg
add
add
add
pop
push
push
add
pop
push
push
push
lea
push
push
push
lea
push
push
lea
push
lea
push
call
lds
add
iret
lods
add
mov
add
bnd
add
loop
mov
push
add
pop
pop
add
cmpsb
add
add
mov
lea
pop
push
push
lea
push
push
push
push
push
call
mov
add
add
lock
fiadds
add
shlb
mov
mov
cmpsl
add
add
shlb
add
add
push
testl
mov
add
add
mov
add
test
add
fwait
loop
add
sbb
add
push
add
pop
mov
push
push
push
push
push
push
call
fsincos
mov
add
xchg
add
xchg
popa
stc
in
test
add
clc
iret
add
lahf
add
ret
mov
xchg
push
xchg
pop
add
add
pop
mov
push
pop
mov
push
lea
push
push
push
push
call
test
pusha
pop
testl
in
push
add
mov
shrl
testl
sti
add
clc
sub
add
in
filds
push
mov
add
je
cwtl
bound
test
aam
add
cmpsl
pop
outsl
cmc
lahf
add
imul
add
mov
add
add
hlt
cltd
add
lcall
lea
pop
test
je
mov
push
lea
push
push
push
push
call
cmc
add
test
addb
repnz
add
cltd
sahf
mov
xchg
xchg
int
scas
push
mov
addl
pop
add
mov
mov
inc
add
push
add
fsubrl
lods
add
xchg
add
add
pusha
sahf
mov
mov
lock
add
pop
flds
xchg
add
add
jo
loop
mov
add
filds
add
add
add
cmc
add
mov
data16
test
je
push
lea
push
call
pusha
mov
add
leave
add
add
add
pop
test
call
jbe
add
push
add
add
shrb
loope
les
testl
inc
push
push
push
lea
push
lea
push
call
mov
add
add
push
pop
xorb
add
add
push
sahf
ret
push
add
jl
add
add
mov
add
xchg
filds
add
add
add
movl
push
add
bnd
aam
bound
cmp
je
push
push
push
push
push
push
push
lea
push
call
addb
repnz
add
pop
lcall
add
push
jecxz
add
push
in
cmpsb
mov
lahf
add
add
imul
pop
xchg
fadds
movsl
fs
sarb
sti
mov
add
mov
lea
pop
test
je
push
sub
pop
mov
inc
push
shl
sub
dec
shr
pop
cmp
je
test
jne
push
push
push
push
push
call
into
mov
add
call
imul
pusha
pop
add
out
mov
add
pop
mov
mov
add
stc
add
aad
add
rorb
add
pop
xor
pop
push
shr
xor
lea
inc
pop
pop
pop
push
push
call
push
sahf
add
fwait
imul
add
push
add
add
add
insb
add
movsl
add
add
mov
out
add
add
lret
add
popa
add
add
add
pusha
add
mov
add
out
testb
arpl
out
lock
scas
jae
mov
les
push
not
pop
leave
push
sub
dec
rol
pop
ret
mov
push
push
push
call
pop
add
add
add
flds
jmp
cld
add
fidivrs
xchg
mov
add
mov
pushf
lret
add
aad
xchg
add
les
add
add
fcmove
add
aad
test
mov
addl
xchg
add
add
add
scas
pop
loope
add
kortestb
push
add
add
pop
inc
push
push
push
call
xchg
add
add
mov
scas
push
add
aad
jge
add
add
je
push
add
add
rclb
add
in
add
lods
pop
and
cmpsb
add
jmp
lea
add
test
add
add
add
add
mov
lea
pop
cmp
jne
push
push
push
lea
push
push
push
push
call
stos
add
outsl
pop
add
scas
mov
pop
sahf
fwait
add
test
in
jbe
add
add
jne
pushf
orb
add
add
mov
add
int3
add
add
add
add
mov
mov
pusha
arpl
add
add
mov
add
int3
pushf
cmpsb
mov
add
orl
lea
mov
push
push
push
push
call
mov
add
add
jl
add
add
aam
out
std
cltd
pushf
popa
cli
mov
jae
addb
fbstp
ljmp
jnp
in
shlb
mov
mov
add
mov
incb
testb
test
je
mov
push
lea
push
push
push
push
push
push
call
add
add
add
add
lcall
mov
jne
add
pushf
add
add
lock
add
hlt
loope
in
jl
hlt
mov
add
add
fmuls
mov
lea
pop
add
push
add
lea
add
pop
cmp
jne
push
ror
add
pop
mov
test
je
push
push
lea
push
push
push
lea
push
call
enter
stos
les
add
add
iret
push
jle
sti
pop
mov
add
in
add
add
add
add
add
add
cld
add
add
out
ja
add
ret
int3
mov
nop
mov
lahf
outsl
add
add
test
out
arpl
add
je
in
add
pusha
sbb
incw
pop
mov
pop
cmp
je
push
push
push
push
push
push
push
push
call
jb
out
add
add
popl
mov
add
add
test
cli
cltd
push
lock
ljmp
jae
mov
mov
add
add
pop
add
add
add
mov
iret
add
push
add
mov
pop
popa
xchg
add
in
aam
add
mov
add
add
pop
mov
add
je
hlt
lea
pop
jmp
xor
push
shr
pop
pop
push
lea
push
push
push
push
push
push
push
lea
push
lea
push
call
add
add
lea
add
add
pop
iret
movsb
jle
add
lds
nop
push
add
loopne
cmc
mov
add
sti
repnz
in
mov
lea
pop
pop
pop
push
lea
push
push
push
lea
push
push
push
call
sti
icebp
add
in
outsl
add
pop
les
clc
ja
add
in
nop
sti
jp
add
stos
add
add
mov
mov
add
repnz
mov
add
pop
pop
leave
push
push
call
add
add
mov
jp
test
xlat
pushf
add
push
ficomps
test
arpl
add
add
cli
add
jecxz
add
add
mov
out
fildl
fucom
xchg
add
rol
add
add
mov
mov
add
pop
ljmp
imul
or
lea
push
lea
push
push
push
lea
push
push
push
push
push
call
outsl
aam
add
mov
add
add
ror
add
popf
xlat
add
in
add
add
fiadds
add
andb
add
addl
push
mov
movb
push
lret
leave
insb
mov
add
add
jbe
mov
lea
pop
pop
push
not
sub
inc
sub
pop
pop
push
lea
push
push
push
push
push
push
call
push
cmc
add
xchg
mov
add
add
add
fwait
add
xchg
scas
les
jae
add
add
fistps
fcomi
movl
add
aad
insb
mov
jno
int3
mov
int3
lea
pop
pop
push
lea
xor
add
sub
pop
pop
push
not
pop
leave
ret
push
push
push
push
push
lea
push
call
add
jno
add
mov
out
mov
arpl
jno
leave
cld
add
out
jmp
je
pusha
mov
bound
mov
add
add
push
add
std
movsb
gs
mov
cld
jno
add
add
add
add
movsb
test
add
in
loopne
in
mov
add
test
add
sbb
pop
push
push
lea
push
push
push
lea
push
push
push
call
pop
je
add
stos
add
xchg
add
jmp
mov
add
add
add
add
stc
out
insb
pop
add
add
add
js
add
ljmp
add
mov
lahf
in
add
stos
lret
add
add
andb
pop
pop
push
push
lea
push
push
push
push
push
push
call
shll
scas
cld
mov
add
xlat
lods
out
sar
div
lret
mov
mov
xlat
jmp
rolb
aad
add
mov
jp
xchg
pop
mov
add
rorb
mov
add
and
push
push
call
mov
add
add
fwait
jne
push
test
add
lock
out
mov
add
incb
add
les
fadds
jle
add
lods
mov
jb
pushf
pop
mov
add
std
pop
cmc
fs
add
mov
mov
lea
pop
pop
push
sub
add
pop
leave
push
push
push
push
push
lea
push
call
xchg
fsubl
add
xchg
jne
add
push
std
mov
add
mov
pop
add
add
mov
add
add
xchg
mov
lea
pop
ret
test
jae
repnz
jae
test
jo
test
jb
shll
es
jecxz
jae
test
jae
lods
mov
add
std
cwtl
pop
push
pop
add
or
dec
inc
adc
ja
jecxz
cmp
pop
pop
popf
adc
hlt
lds
std
mov
mov
mov
pusha
dec
mov
je
push
pop
cmc
cmp
ret
inc
jno
sub
adc
pop
fbstp
and
fucompp
sub
and
in
inc
je
nop
add
jne
cltd
test
mov
jne
out
test
divb
cwtl
mov
pop
les
imul
int3
fcomps
mov
mov
ja
clc
xchg
popa
call
mov
dec
inc
jo
add
fstl
lea
sbb
sub
cwtl
and
sti
jl
das
std
push
arpl
sub
enter
add
and
cmpsb
push
or
loope
call
shll
pop
sar
mov
pop
mov
data16
inc
pop
bound
jbe
add
enter
notb
shl
dec
mov
data16
lret
sub
js
cli
and
std
fcomps
lcall
xchg
dec
and
cmp
jle
sub
es
cmpb
sub
mov
inc
jbe
adc
ret
inc
mov
scas
mov
iret
or
les
push
test
xor
ficoms
push
pcmpgtb
sub
push
insl
cmp
sbb
xchg
je
das
jb
or
or
loop
imul
cld
sub
rclb
adc
daa
dec
cmpsb
cmpsb
repnz
xor
out
mov
inc
je
mov
mov
sbb
cli
push
mov
xor
das
mov
sahf
inc
sub
mov
mov
jl
aam
xor
mov
xchg
out
mov
loop
jge
sbb
and
incb
lds
testl
out
fnsave
mov
fstpl
repz
sbb
ljmp
jge
pushf
or
jp
pop
adcb
repnz
xor
cld
push
movsl
pop
and
pop
daa
movsb
or
imul
inc
imul
pusha
cmp
cmpsl
sbb
aad
pop
xlat
insl
ds
loope
add
dec
imul
in
push
xchg
add
sbb
pusha
mov
pop
push
mov
pop
ss
xchg
mov
lds
popa
test
jl
jae
fists
push
imul
push
and
sub
inc
mov
int3
decb
call
jge
jne
movsl
sbb
sbb
stc
inc
cld
xchg
loope
xor
loopne
pop
adc
or
mov
and
das
rcl
jle
sbb
push
sbbb
inc
xchg
sbb
aad
cmp
mov
filds
xchg
xchg
loop
push
xchg
int
and
icebp
scas
ds
jg
inc
and
xchg
mov
aad
rorb
xchg
push
in
gs
stos
out
imul
lret
iret
jg
mov
cmpsl
xor
pop
popa
push
mov
pop
sbb
sub
jg
push
dec
mov
xlat
lods
pop
jp
movsb
outsl
dec
mov
xchg
jecxz
sub
push
dec
lock
push
sub
cli
es
rol
fbstp
push
mov
daa
jmp
inc
or
adc
mov
sbb
ljmp
xchg
or
dec
and
inc
aas
lock
cld
popa
loopne
repnz
pop
jecxz
inc
sbb
xchg
stos
iret
xchg
aaa
jb
add
sahf
lret
mov
lds
add
xchg
sub
iret
mov
repnz
stc
push
movsl
sbb
fsubrs
jle
or
je
sub
add
jne
mov
mov
xor
cmpsb
cld
dec
dec
cmovge
cmpsl
push
dec
or
out
or
add
call
add
adc
mov
std
mov
pop
cmpsb
ss
fs
in
cltd
push
roll
jo
gs
mov
mov
decb
mov
loope
cltd
popa
test
cmp
mov
repz
fldcw
push
ret
in
push
fstpl
test
xlat
adc
mov
push
outsb
mov
mov
mov
movb
fldcw
xor
xchg
insb
mov
int3
jge
sub
out
imul
insl
ljmp
es
adcl
mov
adc
cmp
cmp
out
inc
pop
out
popa
xor
xchg
out
dec
fwait
add
movsl
add
leave
aas
push
or
xchg
cld
dec
loopne
pop
sub
mov
push
ror
sahf
dec
jnp
cmp
and
or
mov
fmulp
lret
in
int3
rcr
inc
and
dec
sbb
push
sbb
pop
je
sub
dec
mov
filds
push
in
mov
xchg
fs
and
notw
or
xor
xchg
jne
shrb
jb
repz
jmp
int
jbe
mov
jp
dec
int
pop
rcr
push
sbb
fwait
push
les
jb
jg
mov
arpl
subb
xchg
pop
push
or
jecxz
jl
mov
and
xchg
cmc
out
jl
lcall
mov
mov
loop
cmp
push
jae
filds
fcmovb
ret
cmpl
lret
sbb
or
dec
cwtl
mov
insl
sub
fcoml
jge
je
stos
aam
xor
mov
sub
jnp
push
ud1
xorl
loope
ds
aas
popf
and
ja
dec
bound
sub
lods
stc
scas
fistps
shll
enter
xchg
mov
push
adc
iret
add
jg
mov
sbb
out
lret
es
dec
mov
sub
jae
jg
mov
lods
cmp
jg
cwtl
pop
lods
in
adc
jg
rorl
push
dec
dec
cwtl
addr16
pop
enter
mov
push
mov
addr16
pushf
imul
mov
mov
fld
dec
into
inc
inc
add
in
iret
pop
cli
flds
push
imul
in
es
add
mov
lea
xor
ljmp
push
push
jnp
adc
cmp
mov
pop
inc
loope
out
adc
lods
ja
mov
and
cmp
cli
pop
js
mov
leave
push
or
dec
and
sbb
jnp
dec
test
into
and
cmp
fimull
pop
dec
adc
mov
shll
ret
in
add
icebp
arpl
cmpsl
jb
push
movsl
dec
dec
xchg
mov
xchg
sub
push
and
dec
dec
cmp
xor
xor
out
adcb
cmp
inc
adc
hlt
stos
cmp
jne
cmpsl
and
ss
sbb
add
pop
enter
jb
mov
add
testb
test
inc
ret
sti
push
or
rcll
push
mov
jnp
in
add
cwtl
dec
leave
bound
loope
mov
adc
out
sarb
outsb
cltd
outsb
imul
aam
xor
fstps
addr16
mov
fimuls
lds
xchg
mov
or
push
addl
sbb
and
mov
lods
cmp
mov
xchg
push
icebp
movl
rol
cltd
cli
jne
xchg
mov
mov
dec
movsb
push
stc
sbb
dec
imull
call
lahf
mov
repz
popf
xchg
dec
push
xchg
mov
pop
push
subl
repnz
push
call
or
out
push
sbb
sbb
addr16
out
pop
mov
push
mov
cmp
lea
dec
out
jge
mov
and
ja
or
js
add
xchg
xchg
hlt
dec
sub
rcl
inc
mov
xchg
mov
cwtl
mov
jp
cmp
clc
sub
int
mov
xchg
push
outsl
aad
pop
sbb
jp
pusha
xor
jb
cmpsb
shlb
push
mov
das
daa
stos
inc
adc
mov
sbb
push
cmp
mov
push
lods
jmp
adc
pusha
enter
aam
lds
out
mov
pop
sub
scas
popf
notb
in
push
popf
add
out
addr16
shll
ret
xor
inc
mov
jmp
jbe
lret
aam
dec
and
xchg
inc
into
jecxz
in
push
add
mov
sbb
mov
add
jae
jbe
inc
scas
daa
outsl
in
lcall
fnstenv
jecxz
mov
out
sbb
pop
loopne
push
test
notl
xchg
pusha
call
jno
xchg
fldl
dec
push
loope
jns
jmp
xor
pop
or
js
roll
pop
test
mov
daa
sbb
jmp
mov
xchg
pop
lret
inc
sub
addr16
orl
and
xchg
movsl
mov
ljmp
rcr
push
leave
pop
clc
mov
iret
daa
clc
sahf
mov
fdivl
xchg
inc
test
xchg
mov
inc
out
lods
mov
xchg
jbe
sbb
ret
dec
mov
hlt
and
xchg
xchg
mov
adc
pop
mov
or
xlat
in
jns
jns
out
sahf
sbb
ljmp
xchg
xor
ds
das
fnstsw
data16
push
pop
jns
pusha
xor
jl
call
xor
mov
inc
adc
and
repz
outsl
jo
cmc
add
mov
mov
inc
int3
cli
sub
xchg
cmpsl
and
arpl
popf
lret
lea
aam
sbb
adc
rdmsr
push
mov
add
popa
pop
push
sbb
sbb
ret
cmp
insl
mull
push
adc
in
je
pop
mov
cli
jecxz
mov
push
ds
cmc
cmp
cld
cmc
inc
push
pop
clc
cli
xchg
xlat
cmp
push
nop
cmp
push
add
push
inc
xchg
push
data16
or
mov
repnz
into
pop
ffree
test
lret
mov
adc
insl
das
int3
mov
dec
int3
xchg
or
rclb
push
ds
popa
dec
push
jecxz
sub
std
xor
sahf
scas
sub
jnp
shll
cs
mov
cmc
jmp
jb
gs
cmpsl
movb
sti
bound
lock
dec
lret
ljmp
dec
cld
loope
adc
jle,pn
jg
shll
hlt
scas
ds
mov
xchg
sub
dec
int3
inc
imul
fsin
mov
imul
push
rcrb
or
push
push
mov
jne
push
leave
aad
adc
push
and
jno
popf
sbb
xor
test
push
cmpsl
push
add
dec
xor
mov
and
mov
sarb
dec
cmp
bswap
rorl
mov
adc
and
mov
push
xchg
das
loopne
mov
jae
inc
lea
and
jg
pop
clc
test
outsl
xor
insl
push
arpl
xchg
adc
dec
mov
mov
out
pop
push
push
out
pop
xchg
add
outsb
push
mov
xchg
and
mov
orl
and
ljmp
jmp
push
das
adc
leave
shll
dec
add
jno
out
inc
xchg
shrb
aaa
push
mov
cmp
std
pop
jae
enter
int
mov
push
aas
lds
aad
int3
push
jmp
jmp
imul
bound
jge
mov
xchg
outsl
pop
shll
pop
cmpsb
in
addb
mov
pop
ret
jnp
push
lret
shlb
imul
es
push
add
outsl
inc
inc
daa
sub
jo
jge
repnz
push
dec
ljmp
inc
inc
xchg
cmp
popa
pushf
in
push
stos
xor
clc
adc
pushf
cwtl
lds
fcompl
int3
pop
xor
shlb
cmp
das
mov
jmp
test
jo
adc
shrb
int3
jl
adc
andb
pop
or
lahf
jno
ss
out
popf
aas
repz
fnstcw
ja
jnp
iret
cmpb
xlat
and
orb
lods
dec
mov
xor
xchg
pop
mov
mov
cli
and
inc
jecxz
or
xchg
cmpl
add
stos
mov
insl
mov
lods
adc
mov
imul
cmp
dec
mov
xchg
jno
xchg
into
test
add
jmp
in
xchg
loopne
addb
cli
lods
and
inc
mov
int3
lods
daa
shr
or
adc
lcall
popa
pop
add
int
jmp
std
adcl
fisttps
add
sbb
rorl
add
xchg
out
or
test
rcrb
xor
sbb
inc
mov
jnp
and
dec
push
fistl
cmp
push
stc
push
fistl
dec
dec
nop
icebp
mov
push
and
fstps
add
loope
jb
repz
shrl
push
pop
fidivs
add
fs
mov
mov
movsl
push
shlb
sbb
adc
and
hlt
add
clc
mov
lea
mov
jne
xor
cmp
mov
mov
xchg
mov
testl
adc
cmp
or
and
adc
jno
inc
push
out
call
mov
and
aam
lods
sub
lea
into
into
fwait
cli
jbe
push
lock
push
movsl
and
xchg
cmc
stos
sbb
dec
dec
cmp
add
lcall
lods
fistps
or
fcoml
dec
aas
push
mov
dec
sbb
mov
hlt
inc
ret
dec
movsb
mov
sbb
lret
cli
loop
into
ficoms
adc
adc
cmc
inc
mov
mov
loopne
mov
xlat
cmpsl
test
inc
and
xor
mov
cmp
jo
xor
cmp
leave
int
jmp
bound
inc
jmp
repz
fsubl
mov
adc
add
push
dec
cld
mov
std
in
test
stc
es
and
jnp
sub
xor
shll
ret
add
adc
shll
xchg
fnstenv
pop
fwait
add
insb
sbb
sbb
lods
test
cwtl
and
out
xlat
sbb
jmp
fists
out
gs
ror
mov
mov
lret
negb
jns
push
sbb
pusha
in
cmp
add
call
xchg
jp
mov
pop
insb
rcll
and
dec
cld
jb
int3
popf
xor
inc
xorl
fdivrs
aaa
jne
sbb
xchg
jmp
mov
adc
in
ja
int3
iret
mov
repz
sub
lock
xlat
xchg
dec
jmp
fwait
mov
cmp
inc
jns
push
pushl
pop
dec
mov
ficoms
jbe
lock
cs
pop
xor
fldcw
add
ret
push
cmp
out
dec
es
sarb
imul
mov
push
in
sbb
mov
insl
sbb
mov
das
add
int
mov
jae
jnp
jp
xchg
xor
icebp
and
mov
fxch
rcr
faddl
mov
push
cmp
lods
lret
xchg
mov
add
mov
cmpsl
outsb
mov
push
xlat
in
in
dec
lea
jecxz
sbb
rol
pop
jmp
ss
or
and
outsb
aas
xchg
xchg
sti
scas
mov
fdiv
inc
clc
mov
push
mov
pop
pushf
inc
sub
adc
xor
jle
fdivs
clc
popf
push
sbb
lds
xchg
push
mov
and
pusha
cmp
pushf
jnp
enter
sub
stos
dec
jb
dec
cmpsb
xlat
cli
sub
dec
ret
out
popa
jne
or
imul
lods
roll
in
fsubs
mov
int
les
movsl
push
scas
pop
in
pop
adc
lcall
outsl
xor
int3
cmp
jno
hlt
or
push
mov
popl
in
mov
dec
inc
push
or
popa
lds
test
out
scas
sbb
add
or
xlat
aam
rcrl
jmp
out
pop
sarb
mov
jmp
stc
jbe
pop
fwait
pop
or
jbe
add
ret
outsl
in
insb
xchg
push
push
movsb
pop
pop
gs
loope
cmp
in
mov
int
daa
jp
pop
loopne
or
movsl
mov
outsb
add
sahf
add
xlat
insb
cmp
or
xchg
movsl
call
rol
sub
fistpll
lods
cmc
or
adc
cmp
xor
dec
mov
aad
inc
pop
xchg
bnd
xchg
inc
push
iret
and
inc
xchg
mov
sub
stos
pop
iret
cmp
jns
rcrb
xchg
lds
jmp
sbb
loopne
js
lea
push
jmp
adc
loop
push
rol
dec
dec
lods
sti
in
repz
jge
jnp
jmp
enter
mov
into
mov
dec
mov
pop
jp
out
pop
pop
or
nop
jmp
in
lret
sti
or
iret
shl
push
cld
add
sub
gs
rcrl
mov
push
fildll
out
xchg
imul
lcall
lds
sbb
scas
mov
pop
out
pusha
xchg
push
sarb
les
inc
lock
jbe
scas
dec
stos
insl
lea
dec
and
jge
cwtl
into
cld
sbb
xor
cmp
scas
jne
lock
inc
dec
jmp
inc
cmp
pop
arpl
in
cmp
les
xchg
test
cmp
dec
pusha
stc
mov
repz
daa
and
jo
lock
fstpt
call
cli
dec
push
dec
out
dec
lods
mov
in
sahf
into
mov
repnz
mov
imul
cs
repz
xchg
ret
add
js
mov
mov
inc
in
fistl
aam
ja
mov
and
or
mov
fidivrl
xor
dec
mov
std
push
orb
cld
cld
es
out
xchg
jmp
stc
mov
cmc
add
movsb
shl
sti
or
out
xchg
mov
test
call
scas
fnstenv
pusha
js
mov
cmp
jne
ja
sbb
arpl
mov
xor
jge
stc
loop
std
insb
hlt
cltd
inc
fidivrs
mov
cmc
sub
popa
pushf
or
cmp
push
outsl
add
xchg
jbe
inc
outsl
in
js
enter
pop
arpl
ffree
xorl
cmpsb
mov
jo
or
xorl
mov
sub
mov
adc
mov
testb
jle
lret
mov
mov
mov
test
jae
inc
in
test
gs
xchg
pop
sahf
mov
inc
mov
faddl
popf
mov
jle
pop
and
js
iret
ret
pop
or
ljmp
lahf
test
fmul
fldl
iret
in
in
shr
pop
sbb
mov
or
test
push
scas
push
cmp
add
loope
clc
xor
adc
out
fsts
jge
sbb
out
or
mov
insb
xchg
push
aaa
fcoms
cmpsb
pop
aad
push
rorb
aas
xchg
dec
mov
iret
insb
xchg
xchg
cmpb
mov
sub
sbb
push
call
icebp
idivb
mov
int
adcl
adc
repnz
pop
xchg
jl
adc
negl
lock
das
popa
push
daa
rclb
cwtl
out
arpl
js
shll
push
lea
fisttps
pushf
xchg
int
push
aaa
cwtl
sbb
cmpsb
in
xor
stc
pop
and
rorb
icebp
popl
mov
lret
sbb
jb
aad
in
mov
xchg
rcll
mov
inc
jns
pop
btc
cmp
test
fdivl
int
pop
enter
les
mov
jg
cmp
adc
nop
adc
jnp
cmc
adc
push
fistps
sbb
push
test
jmp
fildll
dec
add
fldt
push
jl
xchg
jecxz
and
fisttps
aaa
cmp
mov
cmp
insl
leave
pop
inc
pop
mov
pop
scas
jge
jecxz
and
test
mov
adc
int3
xor
cmp
mov
pushf
repnz
shll
adc
mov
fcomps
inc
cwtl
lds
xor
xor
scas
test
pushl
mov
mov
sub
add
mov
inc
push
sub
out
ds
cmp
inc
cwtl
inc
test
push
adc
push
mov
and
mov
adc
or
dec
cmp
popf
pop
stos
fwait
dec
jb
test
mov
movsb
push
in
repnz
insb
in
push
in
outsb
in
mov
lret
mov
push
cmp
sub
adc
scas
mulb
clc
pop
outsb
lahf
sbb
push
fmulp
inc
or
jne
ljmp
sub
mov
addr16
std
cs
popa
jge
fisttpl
mov
lods
sbb
mov
cmp
stc
arpl
cs
pop
mov
inc
sbb
sti
sarb
dec
sub
clc
mov
pop
dec
popf
iret
push
xor
adc
aaa
pop
add
mov
xlat
jp
adc
stos
ret
lods
hlt
test
push
daa
push
repnz
adc
fdivrl
push
xchg
imul
cs
in
xor
insb
adc
daa
pop
pop
pop
push
scas
push
or
lock
inc
xor
bound
pop
movsl
xor
push
pop
clc
outsb
adc
push
scas
adc
shl
movsb
lods
sub
clc
push
popf
test
insl
fcmove
pop
xchg
lock
xlat
outsl
stos
or
test
test
add
data16
push
fistps
inc
dec
outsb
inc
pop
enter
push
repz
mov
fists
mov
loop
aam
xchg
mov
jge
pop
add
add
mov
pop
sub
mov
xchg
ret
pop
mov
sub
jb
cmp
scas
or
stc
cmp
dec
add
and
pop
repnz
xor
das
stos
sub
icebp
cmpps
cmp
rorb
mov
push
jbe
pop
icebp
sub
icebp
adc
mov
ds
ss
cmp
xor
xor
cld
xor
push
out
enter
and
pop
testb
ss
rclb
rcrl
cmpsl
adcl
jg
clc
lret
inc
and
mov
mov
cs
in
mov
rcll
xchg
xor
mov
mov
cmc
mul
dec
mov
rorb
jmp
fsubr
push
mov
pop
push
pop
fldl
loopne
jmp
addr16
sarb
fwait
mov
dec
xchg
out
inc
add
jecxz
adc
leave
mov
ret
fdivs
out
jo
gs
fwait
out
hlt
aaa
and
xchg
aas
jge
dec
sub
mov
aaa
sub
jbe
pushf
jns
mov
xor
jp
je
mov
jb
pop
pusha
cmp
inc
sbb
and
lea
pop
sbb
xchg
shll
or
pop
clc
xchg
insl
out
arpl
inc
pop
popf
arpl
pusha
js
test
push
pop
and
std
cltd
inc
jns
addr16
sub
jne
lahf
mov
push
xor
inc
sub
jae
decl
lock
sbb
dec
mov
adc
in
add
loopne
les
std
xchg
jl
xchg
jge
shlb
in
sub
imul
cmp
js
mov
push
cmp
push
pop
test
mov
or
xor
xchg
popl
add
js
pop
mov
popf
leave
out
aas
adc
call
xchg
xor
adc
jmp
mov
or
cmp
mov
lea
and
cltd
push
data16
mov
mov
gs
out
pop
sub
mov
lcall
pop
xchg
mov
cmp
dec
out
js
js
ss
mov
out
inc
imul
push
mov
add
or
jnp
jl
dec
call
sub
mov
jne
xchg
sbb
xor
push
je
mov
jmp
mov
cltd
clc
pop
cmp
adc
mov
dec
test
sub
dec
fninit
cmp
dec
std
add
pop
inc
mov
xchg
xchg
into
sbb
xchg
push
pusha
mov
and
xchg
or
mov
int3
and
cmp
sub
adcl
popf
cmp
mov
push
cmpsl
lahf
mov
cmpsb
cmc
ja
aam
ficomps
or
test
sub
cmp
and
mov
and
das
mov
xchg
pop
sub
dec
xchg
inc
dec
mov
mov
sbb
or
arpl
lds
icebp
lea
in
xor
xor
sub
enter
cwtl
fildl
add
les
enter
pop
xchg
sbbb
pop
popf
add
in
fs
xor
lret
nop
lret
aas
test
mov
in
and
lods
push
adc
js
fidivrl
repnz
jb
faddl
adc
addr16
int3
cld
sub
cmp
or
sarl
lock
ss
cmp
add
cmpsb
jge
push
push
cli
shl
dec
xchg
or
sti
popa
ror
push
push
cmp
dec
lcall
ja
dec
dec
pop
ss
xor
mov
push
int3
enter
lret
notrack
syscall
fwait
sub
pop
pop
add
cmpsb
arpl
adc
pop
popa
ficoml
pop
adc
test
fdivs
push
test
das
aas
cwtl
out
stos
ljmp
jmp
stc
jnp
mov
jge
jno
rcrb
hlt
ficoml
and
xlat
inc
jmp
push
mov
xchg
fimull
mov
stos
in
fwait
popa
mov
push
fisttps
sub
sub
xor
jbe
push
shrb
jp
orps
and
mov
sbbb
mov
sbb
sbb
mov
test
and
icebp
in
dec
xor
clc
jne,pt
pop
mov
arpl
insl
mov
xchg
call
idivb
xchg
push
shll
paddusw
iret
lahf
das
and
inc
and
inc
aas
mov
push
dec
mov
cmc
mov
imul
popa
xchg
fisubl
jo
xor
js
mov
xchg
or
test
adc
jge
movsb
stc
data16
dec
lock
data16
jae
shlb
xor
adc
cmpsb
adc
add
cmp
adc
jmp
out
test
adc
and
iret
jmp
aas
sbb
or
jl
add
push
jnp
adc
shl
lret
xor
stos
push
insb
sbb
pop
jecxz
dec
add
repz
mov
add
stos
mov
cwtl
sub
lds
and
mov
fwait
in
and
fsub
or
dec
push
mov
rorb
es
push
push
lods
lock
ss
fs
adc
in
ss
dec
pop
inc
dec
push
mov
mov
inc
sub
je
bnd
lret
lock
dec
mov
or
rorl
adcb
adc
out
pusha
dec
imul
adc
dec
and
adc
dec
ret
xor
inc
lret
adc
add
rclb
stos
add
jns
rcr
sahf
mov
xchg
pop
in
inc
outsb
dec
inc
rolb
lea
pop
movsb
aam
adc
mov
inc
mov
movsb
out
subb
ljmp
ds
sub
cmp
or
dec
jno
xchg
loopne
pop
in
stos
pop
scas
sbb
in
fldl
sub
mov
leave
insb
fcomi
cmovle
xor
dec
pop
push
lods
mov
and
icebp
jns
push
sbb
lods
dec
or
repz
mov
or
jae
xor
rep
stos
fidivs
je
loope
mov
xchg
jns
inc
mov
lea
inc
imul
jns
jge
add
gs
enter
pop
xor
enter
stc
call
stos
into
sahf
or
add
rorl
jbe
inc
popa
xchg
testl
in
sbb
aad
adc
gs
insl
icebp
sub
mov
int
sbb
mov
mov
clc
xchg
lea
pop
lret
or
push
outsb
scas
jl
push
jo
daa
fucomp
out
add
in
mov
arpl
push
cmp
pop
and
cmp
fwait
rorl
xchg
shl
outsl
lods
lods
inc
shrl
aad
mov
jp
insb
xor
push
mov
dec
sub
sbb
push
rorb
iret
mov
inc
sub
scas
lock
push
pop
pushf
pop
adc
int
mov
lahf
aad
lea
mov
arpl
jno
push
xor
or
or
mov
inc
mov
ficompl
ret
popa
push
sub
jb
add
xchg
jns
sbb
ja
fldt
mov
int3
mov
in
xchg
cmpb
dec
ss
ljmp
adc
repz
mov
cwtl
cmc
push
and
mov
mov
inc
sarl
jge
push
dec
es
inc
call
push
and
dec
or
cli
jbe
adc
lods
js
sub
add
andl
data16
xchg
or
nop
mov
inc
outsl
adcb
stos
mov
ficoml
mov
jno
pop
jb
leave
out
push
dec
test
cmp
ret
adc
sub
push
or
stos
repnz
push
dec
jae
mov
in
fxch
out
push
fbld
movsl
test
test
imul
sbb
mov
cld
xor
fistpl
push
push
in
das
in
leave
hlt
ds
push
xchg
cli
ja
cltd
out
dec
push
adc
arpl
aad
js
push
xchg
mov
push
pop
fucomi
push
test
addr16
push
and
notb
xor
and
sbb
faddl
sub
lods
jmp
xchg
notb
lock
add
pop
or
test
imul
jecxz
xor
in
cmp
xor
xor
jo
leave
mov
jae
addr16
or
std
mov
cmpsl
ret
push
mov
nop
sahf
adc
roll
inc
fwait
test
cmp
jecxz
add
jp
xor
dec
adc
and
push
jno
mov
xlat
test
jle
orl
jnp
dec
add
xchg
imul
jp
pop
pop
push
sti
inc
mov
jmp
mov
add
xchg
into
add
imull
sub
xor
sub
cltd
pop
test
imul
lods
sti
sbb
enter
mov
ret
movsl
sarb
test
out
addps
pop
fisubrs
shlb
mov
ja
push
jnp
mov
adcl
scas
fs
stc
lea
add
lret
cltd
jbe
xorb
cmp
leave
loopne
pop
stc
out
dec
stc
mov
std
scas
sbb
test
push
fbstp
imul
stos
cmp
cmp
ret
dec
clc
cmp
jae
fnsave
push
mov
jb
dec
jno
xchg
push
repnz
mov
gs
ret
cmc
xchg
xor
lahf
bound
and
jmp
leave
inc
cmp
pop
push
stos
int
sub
dec
ret
in
dec
aad
push
pop
xchg
fistps
cmp
mov
push
xor
mov
ret
test
sbb
adc
mov
dec
aad
jbe
out
jmp
mov
add
cmp
ret
rorl
mov
jp
dec
jmp
rcll
inc
push
test
or
aas
push
adc
test
sbbl
cs
adc
pop
int
cs
andl
sub
mov
insl
xor
shlb
bound
and
ret
pop
movb
mov
cmp
in
fwait
pop
jle,pt
ret
push
adc
mov
loopne
enter
xchg
add
pop
outsl
sahf
mov
jnp
xor
adc
jb
in
enter
fcmovu
jecxz
lahf
loop
mov
pop
xchg
insl
outsb
repz
je
jbe
jne
cmp
push
add
popl
inc
cmp
adc
jg
flds
les
outsb
jo
xchg
adc
inc
fiaddl
ljmp
mov
sub
enter
out
sub
cmp
push
stos
les
mov
lods
push
dec
shrl
out
jg
outsb
pop
push
cmc
push
orl
subl
insl
out
out
or
pop
clc
jg
repnz
mov
add
sbb
adc
fs
xor
adc
mov
idivb
and
or
dec
cmpsl
and
jecxz
aaa
pop
dec
push
and
mov
push
sub
pop
out
adc
dec
adc
mov
push
fcomip
xor
in
or
lret
lock
subl
in
mov
daa
outsb
icebp
inc
cmp
push
mov
stos
in
dec
push
mov
push
out
mov
sub
adc
dec
dec
pop
aam
outsl
jae
pop
stc
pop
pop
sub
pop
xchg
inc
pushl
mov
add
inc
mov
in
dec
jo
pop
mov
sbbb
sub
mov
scas
nop
enter
and
push
fmull
pusha
lea
cmpb
or
dec
mov
ror
in
mov
jbe
sbb
adc
aaa
lock
rcrl
aas
mov
dec
enter
sti
adc
out
data16
xor
adc
mov
sbb
dec
mov
les
cmp
cmp
cltd
inc
xor
dec
and
cwtl
popa
mov
xor
ss
push
loopne
aad
leave
or
cltd
adc
cmp
adc
push
int
sbb
mov
mov
hlt
enter
ficompl
xor
rcl
xlat
into
sbb
push
cs
dec
jb
repnz
mov
mov
movsl
push
adc
mov
add
jp
dec
sbb
push
fnstenv
xchg
xchg
adc
movsb
js
ss
dec
adc
test
int
pop
cltd
mov
fimull
sbb
add
xchg
add
sub
push
xorb
mov
shlb
and
mov
loope
inc
jg
adc
in
ret
test
cmpsb
out
xor
adc
mov
xchg
push
daa
jbe
xchg
sbb
jbe
jno
dec
pushf
lock
mov
loope
ret
scas
out
test
jbe
jae
lcall
mov
rorl
out
xchg
jae
enter
mov
out
movsb
ret
out
lret
lret
frstor
cltd
inc
aad
push
adc
icebp
and
jl
cmc
imul
jl
sbb
test
lock
aad
enter
insb
dec
jbe
or
xor
lcall
in
mov
push
icebp
cmc
jp
inc
xchg
and
insb
mov
mov
nop
test
mov
dec
pop
add
add
stc
or
jbe
and
mov
jbe
sbb
roll
rcrb
icebp
loop
pop
std
imul
and
pop
bnd
inc
sti
aaa
test
inc
popa
cmp
or
out
test
mov
popl
in
lods
push
fisttpll
or
mull
mov
outsb
rcrl
inc
pop
imul
and
lret
xor
fcomps
mov
int3
inc
mov
test
sbb
dec
pop
clc
jg
flds
inc
mov
test
sub
pop
ret
stc
fimuls
bnd
cmp
je
iret
add
das
pop
aad
or
pop
cmp
clc
fdiv
pop
outsb
inc
in
fisubl
das
cmp
jp
lods
mov
jp
sub
jns
es
mov
push
jae
fsubs
loopne
fisubl
test
dec
icebp
xchg
stc
push
lea
jg
std
in
jmp
dec
dec
jbe
int
pop
and
mov
enter
lahf
movsl
adc
mov
int
adcl
and
insb
std
push
cmp
movl
jbe
cmp
loopne
inc
sbbb
insl
adc
cmpsb
nop
loope
jnp
and
daa
xchg
inc
pop
push
fnsave
adc
aad
or
stc
ds
push
or
or
lods
sbb
ds
mov
pop
mov
sahf
enter
shrl
and
dec
xor
repnz
cmp
js
jg
fisubl
cmp
pop
repnz
and
les
push
or
mov
and
mov
je
fidivrl
sub
leave
jb
xchg
leave
icebp
dec
bound
sbbb
dec
sti
inc
xchg
pop
shrb
int3
frstor
push
aam
into
hlt
pop
cmpsb
cmp
sbb
pop
daa
dec
add
outsb
mov
pusha
adc
xchg
out
inc
loop
outsl
daa
dec
popa
dec
xchg
mov
ds
rcrl
or
mov
out
and
xor
and
fisttps
pop
sub
ficoml
xor
push
sbb
mov
sub
fidivs
dec
ds
jl
and
push
arpl
adc
clc
push
jg
out
dec
cmp
or
cmc
mov
jbe
loopne
jne
and
sbb
inc
adc
sub
xor
jge
jp,pn
dec
xchg
pop
xchg
js
out
mov
inc
lahf
mov
mov
mov
add
sub
inc
xchg
or
push
sbb
mov
inc
add
cmpsl
mov
sub
test
lcall
in
fdivrl
fimull
mov
push
test
mov
shll
in
pop
lcall
hlt
popf
push
push
cmp
sub
and
sbb
ret
lret
lock
cs
das
in
bound
xor
pop
leave
jnp
inc
mov
cmc
inc
insl
insb
data16
into
jmp
aaa
sbb
push
imul
ss
sti
lods
fwait
mov
adc
js
stos
jmp
lods
add
lods
and
cmp
sarl
or
int3
jecxz
dec
add
and
add
fadds
sbb
pop
xchg
mov
scas
push
popa
mov
xor
mov
add
jge
jmp
lods
dec
cld
sbbb
call
nop
xchg
rolb
push
lods
dec
cld
or
out
hlt
adcb
ret
ret
pop
or
mov
mov
sbb
loope
sub
sbb
jmp
xchg
outsl
xor
out
xchg
and
sbb
jecxz
popf
mov
push
lea
mov
loope
adc
inc
adc
push
mov
fiaddl
cmp
sbb
adc
enter
lock
popf
xor
jmp
pop
enter
push
and
push
sbb
dec
mulb
pushf
lods
inc
jo
iret
mov
add
in
insl
or
sbb
xchg
aad
outsb
test
sub
shl
xchg
sub
sbb
das
lahf
popa
pop
popl
pop
mov
mov
pop
add
inc
fadds
xor
xor
outsl
jne
and
ret
cmp
jmp
jmp
cwtl
jno
imul
imul
push
gs
int
mov
fistpl
mov
add
sbb
daa
insb
cmp
in
jp
imull
mov
aad
inc
mov
cmp
rcrb
incl
sub
aas
pushf
sbb
mov
push
loope
out
inc
jb
repz
mov
pop
adc
fstpl
js
cmp
jp
dec
loopne
jecxz
cmpsl
jp
dec
fldenv
mov
jge
mov
lods
pop
sub
test
adc
xorb
sub
push
std
or
mov
or
imul
in
je
mov
das
out
xchg
mov
int
or
int3
leave
ss
dec
mov
fldt
push
mov
pop
xor
and
notl
scas
pop
push
sahf
or
dec
xchg
dec
leave
aas
adc
mov
nop
sbb
cwtl
sti
lods
xorb
mov
ja
scas
inc
or
stc
and
xor
push
je
mov
dec
out
mov
mov
les
pop
shlb
xor
shr
cmp
jg
rol
clc
roll
sub
or
gs
push
rolb
push
add
outsl
in
out
cmp
loop
jle
lods
loopne
int3
int3
adc
add
test
sbb
push
jbe
adc
leave
xor
mov
sub
and
xchg
inc
js
lret
out
dec
dec
mov
popa
scas
jbe
bound
push
decb
xor
jl
mov
xchg
les
gs
cmp
sbb
inc
xchg
ret
ret
xchg
lods
stos
push
imul
adc
add
outsl
dec
sbb
leave
dec
lahf
sbb
sub
dec
into
inc
icebp
mov
orl
repnz
cmpsb
addr16
subl
xchg
cli
or
push
movsl
sub
sti
mov
popf
push
aas
mov
xor
adc
or
movsb
and
jl
cld
xchg
mov
je
cmp
daa
sbb
popa
xchg
mov
jne
xlat
outsl
shrl
lods
adc
push
pop
imulb
in
mov
imul
lret
jg
popa
xlat
gs
dec
pop
lahf
xor
push
stos
out
add
jno
stc
and
cmp
mov
lret
movsb
mov
inc
pop
xor
cmp
repnz
push
jmp
hlt
dec
popf
fucomp
jmp
cltd
dec
push
das
sub
in
mov
xor
mov
inc
mov
fmul
fists
add
and
loop
imul
loope
out
in
lret
jne
ja
lods
ret
dec
mov
or
cli
fnstsw
jns
inc
xchg
dec
ss
jae
out
xchg
push
push
jl
cltd
mov
cwtl
pop
insl
push
push
int3
push
cmp
aas
and
xchg
xchg
mov
add
data16
sub
pop
popf
mov
add
jnp
cmp
imul
lds
jecxz
add
pop
mov
int
jne
aaa
xchg
outsl
in
jge
jnp
mov
sbb
mov
lods
aam
lret
inc
mov
int3
or
cmp
pop
xchg
push
jp
xchg
adc
fisubrs
or
fucom
dec
fiadds
push
icebp
dec
outsb
cltd
lahf
idiv
bound
popf
jecxz
fdiv
fcoml
push
cs
lods
stos
cmc
adc
test
jecxz
mov
int3
shll
movzwl
push
mov
add
push
xchg
cmp
sbb
pop
lods
ficoms
add
sbb
push
or
or
jnp
cld
aas
sub
add
adc
mov
pop
cmp
cmp
rcl
inc
or
test
xchg
pushf
xlat
pop
imul
dec
xor
adc
mov
xchg
rolb
sbb
add
add
cmc
cmp
xchg
jg
xchg
lds
mov
cmp
clts
call
xchg
mov
iret
aas
xor
lahf
sub
stos
sub
loop
and
leave
pop
and
pop
pop
add
push
outsb
and
in
cld
sub
fiaddl
cmp
mov
sub
cmp
push
xor
dec
adc
cltd
mov
sbb
out
aaa
xchg
adc
int3
add
pop
jge
pop
in
add
pop
xor
mov
ja
push
shlb
or
bound
loope
mull
or
iret
sti
mov
aaa
push
cmpsb
cmpsl
scas
leave
xor
mov
jecxz
lds
xor
push
inc
dec
ds
sarl
lahf
adc
out
repz
sbb
sub
push
xchg
jae
sbb
shll
jbe
xor
mov
pop
stc
or
negl
cmpsl
xchg
mov
push
movl
leave
iret
cmp
sahf
pop
fbld
lods
inc
push
in
test
outsb
in
jno
in
arpl
cmp
movsl
sahf
cmp
ret
sti
lret
cmp
ljmp
addr16
mov
gs
pop
dec
sbbb
out
stos
jnp
xlat
inc
out
mov
pop
fadd
jg
xchg
lods
fwait
push
push
cmp
fucom
inc
xor
lods
xor
cwtl
dec
or
outsb
lar
dec
faddl
jmp
xchg
mov
sbb
mov
xchg
sbbb
test
xchg
imul
mov
inc
push
jbe
pop
inc
es
sbb
in
mov
call
push
mov
std
fiaddl
adc
es
icebp
fdivr
lock
test
and
out
mov
mov
out
addr16
inc
mov
push
and
push
stos
aas
mov
add
out
scas
cwtl
xor
cmp
fsubrl
push
imul
inc
mov
cltd
push
je
lods
addb
not
push
dec
jne
sub
cmpsb
aaa
sub
add
ffreep
pop
shll
insb
pusha
lock
mov
aam
mov
and
jns
std
jge
lock
popf
rorl
jle
push
mov
scas
jo
imul
aaa
repnz
adc
xor
and
into
inc
lds
dec
rcrb
and
sub
mov
push
ja
mov
jge
adc
in
outsl
popa
in
jno
sbb
mov
push
mov
enter
cmp
and
loopne
inc
pop
aad
scas
cltd
imul
insl
xor
jnp
insb
dec
xor
jnp
dec
mov
gs
popf
cmpsl
fistpll
inc
stos
fnstenv
inc
imul
dec
mov
adc
sbb
sbb
mov
ds
imul
sbb
mov
push
pop
outsl
jp
test
mov
arpl
or
xchg
dec
bound
loopne
stos
mov
jno
inc
lds
or
mov
aam
ds
push
and
push
mov
inc
pop
les
cwtl
mov
call
mov
mov
cmpsl
fcmove
add
pushl
jmp
sbb
add
mov
cmp
jmp
sub
cmp
lea
aaa
enter
fistl
sbb
outsl
push
ss
shll
xchg
insl
faddl
loop
and
push
loopne
lods
cmp
mov
aas
xor
mulb
mov
loop
movsb
fistl
jno
dec
add
aaa
int3
stos
in
mov
test
xor
hlt
mov
mov
shr
pop
cltd
dec
xor
jo
inc
jne
xor
jmp
test
pop
jbe
mov
sbb
pop
sbb
mov
mov
out
inc
adc
cmp
xlat
imul
js
in
sbb
rorl
or
push
jno
daa
dec
jle
in
pop
xor
lret
std
aas
stc
mov
xor
cli
sbb
cltd
mov
push
dec
xor
inc
clc
xchg
jecxz
lods
add
imul
mov
mov
stos
jb
jne
mov
shll
add
es
loopne
mov
movsb
and
movsl
push
dec
pop
out
daa
xor
jp
lods
adc
fcompl
add
sub
xor
or
shll
pop
fs
ds
mov
fiaddl
jnp
xchg
and
adc
push
inc
lahf
out
xlat
dec
mov
test
les
xchg
into
dec
fnstsw
jge
mov
cwtl
sti
leave
mov
push
dec
sahf
imull
cltd
fwait
inc
ljmp
dec
mov
dec
sbb
rcl
cmpsb
jp
mov
jg
sbb
mov
xor
lret
out
pop
arpl
das
in
fs
popf
lock
in
es
and
jle
push
or
mov
xchg
mov
pop
insb
xor
std
cltd
mov
push
pop
addr16
sub
push
adc
ret
adc
xchg
in
push
mov
cwtl
jno
cmpsb
and
mov
pusha
xlat
mov
dec
popa
in
pop
shll
ljmp
insl
es
xor
lret
jmp
cmpsb
jnp
inc
das
lahf
lahf
jg
orb
jae
xchg
mov
and
mov
mulb
mov
or
icebp
or
xor
das
stos
out
xchg
inc
sub
lret
mov
sbb
fdivrp
and
xor
ret
test
sti
fdiv
cmpsl
jmp
scas
jae
jbe
push
jmp
dec
inc
mov
cld
pop
cmp
jg
sbb
pop
mov
cmp
js
bound
push
cmp
stc
dec
clc
mov
js
jge
jl
std
fs
lods
dec
pop
mov
dec
push
ja
lock
test
sbb
jl
xor
jne
out
sbb
rcll
sti
sub
pop
imul
into
pop
mov
cmp
ljmp
mov
cmc
and
or
cmp
pop
sub
decl
orb
adc
pop
mov
hlt
loopne
mov
jnp
or
push
aad
mov
jg
popl
daa
sbb
lea
repz
push
push
insl
add
xorl
imul
cld
pop
loop
pop
cmp
add
bound
sbb
call
mov
outsl
sbb
dec
cmp
js
lods
mov
and
lcall
repz
jle
push
sub
scas
imul
dec
pop
mov
sbb
sbb
mov
xchg
test
scas
popf
hlt
lcall
fcoms
repz
fnstcw
loopne
push
test
lods
sub
fwait
mov
jb
nop
pop
icebp
repnz
fisttpl
repz
shll
sub
cmpsb
pop
xchg
mov
cltd
jae
jmp
movsb
adc
insl
fmul
pop
outsb
fidivrl
cmp
sbb
rcrb
dec
loopne
loopne
int3
out
add
mov
mov
xchg
in
sbb
in
sub
xchg
mov
movsb
and
sub
push
jge
aad
add
push
inc
cmp
xchg
lahf
addr16
adc
xchg
imul
mov
daa
movsb
stc
in
pop
fwait
mov
out
loopne
jp
jae
and
pop
push
pop
into
mov
xor
jmp
push
pop
lcall
test
icebp
mov
xchg
pop
daa
addr16
add
mov
sbb
or
fidivs
push
xchg
mov
xchg
fisubrl
pop
repnz
inc
comiss
mov
and
pusha
callw
push
and
inc
and
lcall
xor
mov
adc
pop
mov
data16
lcall
rcl
push
leave
popf
dec
sbb
das
shrl
xchg
aam
mov
jp
loop
add
dec
mov
and
xor
sub
mov
movsb
dec
cmp
fimuls
jns
adc
aam
arpl
adcl
pop
call
repnz
xchg
push
ficoml
jbe
out
mov
in
or
rorl
dec
push
dec
pop
sbb
sub
mov
xchg
pushf
jecxz
mov
sbb
repz
jp
inc
sbb
xchg
push
inc
add
mov
inc
ror
repnz
rcrl
clc
arpl
xchg
lock
mov
xlat
jo
cmp
jle
jecxz
xchg
arpl
je
scas
push
fmull
je
psraw
loopne
addr16
pop
lahf
out
ljmp
pop
inc
dec
pop
notb
push
xchg
cltd
adc
ds
push
shrb
push
das
cwtl
mov
dec
adc
clc
fisttps
imulb
sbb
adc
jg
inc
imul
push
cmp
lods
fcomip
fcmovne
push
cmp
cli
push
test
mov
lea
aam
ja
jmp
rorl
mov
loope
test
cmpsb
sbb
das
lret
andl
adc
insb
add
pop
lcall
adc
sbb
sbb
xor
enter
je
and
mov
shrb
cmp
push
jge
mov
imul
or
and
pop
pop
mov
shr
dec
jb
xlat
in
in
out
cmp
std
les
xor
in
sti
dec
pop
lret
aad
mov
flds
mov
xchg
add
insl
mov
adc
stc
jmp
cld
dec
fstp
and
jns
inc
push
pop
fwait
sarl
fistpll
jmp
adc
mov
lcall
lcall
xchg
addr16
push
sarl
sbb
je
sub
xchg
ljmp
adc
ret
bound
add
add
mov
sub
adc
fstl
std
sahf
out
inc
and
stos
lea
out
add
sub
nop
adc
cmp
icebp
jg
dec
pop
adc
mov
arpl
vmovaps
into
mov
in
jbe
aad
add
lods
mov
xchg
adc
and
push
sub
ret
mov
adc
sub
mov
add
xchg
imull
jle
jo
pushf
std
aas
filds
or
pop
mov
out
pop
lds
out
je
cmp
leave
mov
loope
or
xchg
push
add
push
pop
or
mov
dec
and
inc
inc
push
xchg
inc
stos
mov
and
fisttps
adc
jb
push
ret
repnz
mov
mov
or
xchg
js
cmc
mov
cltd
stc
and
cmp
mov
push
or
repz
adc
or
pop
hlt
mov
lret
aas
push
repnz
lret
aas
stos
jne
je
sub
cmc
mov
stos
pop
bound
push
enter
pop
add
mov
shlb
int
loope
push
mov
and
push
out
cld
addr16
stos
movsb
lods
bound
cmpl
mov
xor
and
and
dec
js
cmpb
push
push
mov
cmpl
leave
mov
gs
cmpl
xchg
sbb
cld
mov
sbb
aas
sub
jbe
or
out
movsb
add
mov
cmpb
pop
inc
stos
push
adc
add
push
pop
xchg
arpl
into
mov
enter
xchg
and
ror
xlat
jno
in
mov
stos
push
ds
xor
das
dec
fwait
xor
rcrl
sbb
adc
dec
jbe
nop
jno
mov
jbe
lock
sahf
xor
lds
xor
mov
jl
shrb
in
sub
sbb
dec
bound
add
test
ss
fwait
mov
icebp
mov
insl
out
fildl
pop
pop
lock
mov
xchg
xchg
std
mov
xor
and
loop
loop
mov
mov
pop
fstps
lods
paddsw
sahf
stos
mov
and
push
sub
repz
mov
popf
cmp
pop
mov
ret
add
test
pop
jnp
or
es
bound
leave
add
insl
rcr
xor
jg
mov
jmp
inc
sti
mov
punpcklbw
or
lcall
mov
cmp
bound
sbb
inc
jae
mov
cmp
int
push
jae
adc
loopne
arpl
pop
xlat
iret
sbb
mov
bound
pop
push
xor
xchg
por
inc
mov
outsl
cmpsb
mov
fnstsw
out
nop
dec
adc
ss
ret
nop
mov
sbb
add
lcall
addr16
imul
xchg
ljmp
lock
sti
pop
mov
and
dec
cmpsl
aad
sub
je
inc
call
out
add
xchg
mov
icebp
loopne
push
xchg
cld
mov
and
push
fs
pop
enter
sub
fwait
outsb
push
jb
jecxz
dec
ret
sarb
in
sub
xor
pop
test
jno
ret
inc
add
setb
mov
jp
clc
ret
sub
mov
push
jl
fwait
cmp
sub
loope
cmp
movsl
sbb
pop
imul
sub
mov
mov
xchg
outsb
movl
mov
mov
enter
test
or
xchg
iret
fdivrl
pop
sbb
call
ror
outsb
aam
jge
insb
dec
jbe
stos
rclb
xchg
xor
pop
out
movsb
decb
in
jecxz
xor
mov
cld
sub
stc
or
mov
insb
adc
push
sub
sbb
sbb
mov
and
aam
in
mov
sti
mov
push
data16
mov
mov
push
pop
xchg
fisubrl
into
ret
data16
pop
cmpsl
dec
data16
xchg
sub
aam
pop
test
test
loop
bound
scas
lcall
sbb
arpl
popf
and
pop
adc
hlt
sub
dec
inc
call
mov
add
or
cwtl
iret
movsb
push
push
aam
add
jl
movsb
rcr
lret
mov
sub
jb
inc
popf
rorb
and
sbb
data16
mov
pop
fisubrs
sbb
cwtl
add
sbb
sbb
scas
fidivrl
push
repnz
jg
jo
xchg
sbb
jp
cmp
cmp
pusha
pause
mov
das
add
mov
stos
pop
lret
mov
pop
scas
push
addl
test
mov
std
inc
flds
xor
sbb
hlt
orl
xor
int
or
mov
mov
cld
out
sbb
mov
pop
dec
pop
jecxz
cmp
fnsave
sbb
mov
or
or
data16
adc
add
in
jp
mov
jp
nop
add
sub
cmp
hlt
imul
sbb
lret
and
xor
js,pn
negb
imul
ret
sub
aaa
xchg
popf
int
arpl
push
sub
fmul
mov
xor
in
xor
push
int
inc
shl
dec
lock
pop
lret
sti
push
pop
sub
sub
enter
test
xor
stos
or
pop
clc
stos
pop
cmpl
xor
push
loopne
subl
in
jo
push
nop
jl
or
test
addb
popa
xor
mov
sar
push
push
sbb
or
in
mov
lea
jne
stos
add
mov
sub
xlat
daa
testl
or
xor
insb
sbb
mov
push
xchg
xchg
sbb
push
sbb
and
int
mov
daa
mov
call
pop
les
cmp
cmp
jns
test
jl
les
jbe
pop
xor
push
cmpsb
cmc
cld
jp
ds
fsubrl
fistpl
lcall
sub
loopne
cmpsb
dec
adc
dec
out
xor
ret
repz
ret
sbb
imul
lods
ja
dec
insb
outsb
cmc
push
xchg
push
aam
ss
into
mov
idivl
repz
int
jmp
aad
mov
fsubl
ret
mov
int3
inc
iret
xor
subb
data16
lret
bound
sub
push
inc
test
rorl
xchg
sbb
jbe
jbe
lea
jl
cmp
xor
test
xor
rclb
cmp
push
nop
jnp
lds
xchg
xor
jb
movsl
and
call
push
cmc
mov
inc
cmp
scas
jb
add
push
push
add
dec
push
jne
inc
loope
adc
fs
int
pop
cwtl
pop
xlat
mov
fistl
sbb
lods
mov
outsl
pop
movsl
test
ret
outsl
add
adc
inc
mov
lcall
xlat
es
push
jl
and
or
rcll
imul
stos
push
add
shrb
shlb
cltd
outsl
sub
jne
in
fs
loop
pop
pushw
add
or
push
or
inc
stos
sbb
insl
cs
dec
adc
dec
insl
cmc
popa
int
sbb
or
loop
mov
mov
or
arpl
or
mov
push
cs
pop
xchg
and
xor
pushf
mov
push
push
inc
mov
lods
cmp
dec
mov
mov
in
inc
rolb
cmpsl
ss
ss
mov
fwait
xchg
mov
int
mov
inc
sbb
xorl
pop
jb
jbe
mov
dec
sahf
cli
test
cmpsb
cltd
push
nop
mov
jg
and
mov
shrb
xor
int3
inc
and
push
shl
dec
rcrl
add
mov
mov
subl
hlt
fistps
andl
lcall
cs
jp
clc
jle
in
inc
das
or
push
sbb
inc
out
pop
sbb
pop
into
xor
je
mov
push
aam
ret
adc
sbb
push
and
xor
pop
cs
mov
push
pop
int3
scas
loopne
test
in
mov
movl
xor
xor
popf
out
mov
orb
bound
cmp
pushf
aad
jo
cmpsb
hlt
out
jmp
outsb
sahf
xor
int
pop
push
or
mov
repnz
xchg
pop
cmc
aad
or
mov
negb
push
mov
lock
mov
jecxz
mov
out
fnstsw
add
cmp
lahf
xchg
or
inc
mov
imul
add
repz
imul
xor
pop
mov
push
dec
or
dec
jle
or
out
in
je
adc
sbb
add
sbb
arpl
cs
mov
mov
mov
imul
cmp
scas
push
adc
xchg
out
ret
adc
imul
push
mov
cmp
out
stos
inc
test
dec
cmp
ljmp
mov
xor
stos
dec
jl
lock
arpl
dec
sbb
push
jne
out
int3
rcrl
inc
movl
pop
push
cld
or
xor
mov
mov
or
jae
inc
cmpsl
or
xchg
hlt
mov
xchg
pop
fdivs
sub
xor
int3
add
pop
inc
jbe
or
lahf
in
jge
push
jge
xchg
xchg
jnp
sar
psubd
test
sbb
cmp
push
add
std
lret
pushf
insl
enter
inc
push
or
inc
addr16
cmp
dec
sbb
inc
jg
sti
stos
arpl
add
daa
inc
rcrl
mov
shlb
xor
mov
lods
mov
sub
aam
and
shrl
or
cmp
push
aam
jg
or
xchg
pop
cmp
and
je
ret
and
cmp
sarb
and
lock
fidivl
xchg
clc
and
testl
in
fstps
scas
jmp
aaa
add
int3
lds
mov
mov
push
cmp
sbb
lret
xchg
iret
test
mov
and
cwtl
lds
mulb
lock
and
insl
mov
pushf
xlat
enter
xor
jl
pop
push
enter
adc
mov
repz
adc
or
mov
mov
pop
dec
inc
and
pop
pop
push
leave
jns
xchg
sbb
push
ret
xor
push
aam
add
cwtl
cmp
int
outsl
es
repnz
in
mov
notb
jp
push
addr16
insl
pop
mov
inc
iret
push
pop
jge
adc
loope
lds
call
mov
lock
xor
out
mov
or
or
out
fucomip
pop
push
ficoml
dec
mov
fidivl
rol
divb
and
clc
std
in
and
adc
in
jns
mov
js
and
jl
adc
inc
cmp
cmc
cltd
dec
sub
sub
mov
into
xor
mov
fiaddl
mov
sbb
add
push
inc
pop
add
xchg
stos
add
and
xor
cwtl
dec
add
das
jle
sub
lods
xor
shr
and
insb
and
adc
ret
jmp
out
mov
xlat
sub
adc
out
sub
xor
mov
fdivrs
pop
in
xor
in
and
je
sbb
push
and
push
int
push
ret
fucom
dec
inc
cmpsb
xlat
jnp
sub
push
lahf
daa
outsl
pusha
or
mov
adc
and
loopne
or
adc
push
xchg
pop
or
push
out
dec
and
leave
xorl
sub
mov
fldenv
push
std
fistpll
jecxz
decb
clc
aaa
arpl
cmpsl
popf
or
sbb
repz
cmp
int
aas
movb
lods
or
dec
ret
and
mov
mov
xchg
or
xor
je
fsubs
adc
xchg
and
sbb
cmpsl
push
and
pusha
andl
inc
loopne
jnp
pop
sti
and
or
imul
sub
or
and
sub
mov
dec
add
arpl
pop
ficoml
sub
scas
fimull
mov
fwait
pusha
jmp
lea
clc
out
xor
or
stos
jne
je
int3
mov
or
fwait
push
rcrl
xor
icebp
lcall
es
push
pop
jg
lret
add
dec
cmp
pop
mov
xchg
sub
xchg
pop
xor
lret
jecxz
insb
add
jne
ret
add
es
lock
push
loope
jge
jp
cmp
movzbl
je
outsl
xlat
sbb
inc
xchg
lods
mov
xchg
xlat
xor
fwait
orb
push
jo
cmp
push
mov
leave
pop
push
lock
aam
mov
xchg
dec
mov
xlat
cltd
pop
and
mov
pushf
call
neg
mov
in
xor
data16
shll
inc
add
pop
xchg
jl
cmp
divb
filds
pop
jg
jnp
dec
push
imul
stc
sbbb
scas
test
mov
fcomps
jae
xchg
or
and
movsl
xchg
out
jl
std
sbb
pushf
imulb
pop
sub
les
xor
mov
add
scas
test
inc
arpl
adcl
movsb
test
jp
mov
mov
ds
stos
leave
fsubl
sub
adc
stos
push
xlat
and
and
push
jmp
pushf
shr
sub
pop
mov
in
loope
adc
pop
ror
adcb
lret
mov
push
or
inc
icebp
ja
mov
pusha
inc
notl
test
ret
pop
arpl
cli
pop
push
imul
pop
mov
mov
pmaxsw
loope
clc
leave
test
push
mov
jne
mov
das
mov
loopne
dec
imul
pop
adc
fnstsw
outsb
push
stos
adc
push
addr16
into
nop
movsb
dec
xchg
insb
aaa
and
jne
sbb
or
int3
fwait
push
mov
shlb
aas
rcr
jecxz
adcb
and
cmc
xchg
pop
and
fimull
mov
fwait
mov
jno
cmp
jb
and
pop
mov
lea
es
fcomps
push
imul
adc
int3
mov
sbb
jmp
decl
or
push
out
push
loope
insl
jo
push
mov
mov
stos
inc
loope
rorl
mov
fidivl
cmp
scas
ljmp
jno
icebp
push
fildl
lds
cmp
xchg
icebp
jl
std
push
adc
aaa
inc
add
les
shl
push
cs
rcrb
repnz
out
fcmovnbe
test
fnsave
arpl
mov
flds
in
adc
cmp
mov
and
xor
sbb
mov
ficompl
lods
and
dec
pop
sbb
stos
dec
icebp
fsub
sbb
inc
nop
incl
dec
mov
push
sbb
mov
ljmp
push
setae
push
lahf
ficoms
xor
sbb
lea
add
mov
push
iret
push
movsb
jne
sbb
adc
in
lcall
or
test
push
cmpsl
sbb
std
add
and
scas
add
imul
aad
push
sub
mov
sub
xor
jecxz
call
push
adc
jns
pop
xor
xor
in
jae
and
movsl
cmp
xchg
dec
in
and
xchg
lea
and
and
cmpsb
test
fistpll
nop
xor
mov
and
xor
stos
inc
daa
imul
mov
or
mov
cmp
dec
pop
lds
fcomip
jbe
lods
jbe
int3
push
test
dec
out
rcll
out
jne
dec
cmp
into
movsl
fsubl
sbb
lahf
jnp
sbb
inc
notb
testb
and
insl
fsubrl
movl
js
dec
jp
loope
jno
je
inc
stc
mov
jbe
es
cmp
movb
fcoms
jecxz
shrl
loope
rcr
aam
je
mov
inc
mov
mov
lods
push
cs
jecxz
and
mov
push
in
add
mov
or
sub
pop
xor
movsb
fimuls
pop
xchg
jmp
in
mov
jb
xlat
push
or
jmp
push
lds
or
pop
jns
or
fldl
jns
dec
insb
shll
clc
ljmp
in
insb
dec
jno
in
fsubs
ds
ss
test
and
push
mov
ss
out
hlt
call
and
fincstp
das
dec
movsl
in
imul
aad
mov
mov
in
mov
call
dec
test
fdivr
mov
or
and
cwtl
fcomi
push
and
fdiv
adc
inc
ficoms
xchg
dec
sahf
outsl
pop
aaa
jb
xchg
int3
lcall
aam
add
sbb
mov
xor
loope
pop
mov
xchg
cmp
ja
mov
mov
dec
inc
mov
call
mov
mov
lahf
shll
imul
enter
adc
cmp
stos
icebp
xchg
bound
inc
dec
bound
inc
outsl
adc
inc
ja
dec
push
aam
pop
xchg
adc
or
nop
jno
sbb
push
cs
xor
cltd
pop
jecxz
test
rol
jle
inc
cmc
inc
mov
scas
cmp
lahf
xlat
cmp
int3
test
pop
push
dec
pop
addr16
popf
fdivp
cmp
cmpsb
das
adcl
jle
push
cs
repz
lret
stc
aas
or
or
out
loope
out
icebp
std
ffree
inc
fcompl
inc
mov
repz
es
shr
mov
icebp
insb
cmp
scas
jno
popf
pop
leave
xchg
inc
aam
dec
fstpl
aam
mov
shrb
int3
dec
out
sar
imul
mov
adc
adc
andl
sbb
jnp
cmpsb
xchg
int
rcl
xor
xchg
loop
fsubl
fists
cs
clc
xor
mov
sbb
xor
or
and
jbe
imul
dec
jb
ljmp
cltd
lds
cltd
mov
adc
jbe
push
je
test
cmp
push
xchg
jbe
pop
cs
movsl
cmpsl
sub
cli
sahf
xchg
jnp
and
cltd
cmc
dec
es
pop
out
lret
pop
cld
inc
mov
push
jle
movsl
sbb
jmp
sahf
mov
pop
pusha
cmp
sbb
insl
leave
outsb
inc
out
dec
sub
sahf
mov
pop
add
adc
pushf
jne
dec
adc
jo
and
test
cmpsb
mov
outsb
arpl
xchg
add
mov
xchg
cmpsl
and
xor
movsb
mov
mov
or
cmp
jmp
add
out
inc
shll
insl
std
inc
jns
lods
mov
xchg
in
inc
mov
mov
push
loop
fwait
mov
repnz
dec
popf
sarb
mov
pop
scas
push
or
push
sbbl
sbb
cmp
inc
pusha
lock
pusha
in
dec
scas
jecxz
les
mov
fadd
adc
xor
jne
mov
xor
or
in
out
and
test
mov
pop
push
arpl
pusha
pop
aas
jnp
add
mov
fidivl
mov
xlat
pusha
jge
cmp
pop
or
push
or
ret
mov
add
outsl
mov
cmpb
cmp
add
lret
xor
aad
cs
and
ret
push
scas
js
aas
add
sbb
pop
out
fdivrs
cmpsb
jo
ret
push
sub
xchg
and
mov
inc
adc
push
mov
add
push
xchg
addb
loop
cmpsl
pop
sbb
add
mov
jne
aas
mov
adc
call
adc
ss
lods
sub
je
add
loopne
cmpb
dec
imul
gs
stos
or
into
sub
mov
movsl
or
loopne
sub
das
and
dec
ljmp
add
lea
and
fcmovnbe
je
lods
fisubrs
jnp
cmpsl
mov
lcall
testl
pusha
lret
sub
push
push
cmp
mov
in
or
out
push
mov
dec
mov
bound
aas
or
sub
xor
jae
enter
jmp
out
pop
push
and
and
mov
stos
xchg
push
sub
push
add
pop
xor
sbb
dec
sbb
adc
sahf
pop
decl
dec
fdivrp
jle
in
mov
or
cmp
pop
push
dec
or
fmuls
orl
lahf
xor
xchg
inc
and
movq
xchg
add
loop
out
fst
and
xchg
sti
sbb
repnz
mov
fcoml
inc
movsl
mov
adc
aad
inc
mov
pxor
pusha
and
xor
dec
lret
xor
outsb
fsub
inc
and
xor
push
or
daa
into
add
cwtl
les
arpl
xchg
pop
dec
ret
jb
out
push
inc
mov
or
subl
in
insl
fsubrp
iret
lock
and
test
jecxz
aad
aas
sbb
js
movsb
shl
xchg
mov
shlb
je
aaa
cmp
fdivrl
test
or
dec
push
lock
mov
sarb
imul
in
cld
nop
push
gs
data16
jg
ljmp
lds
das
shlb
inc
inc
sub
and
testl
fisubrl
shrl
and
pop
add
xlat
xor
mov
lret
pop
mov
pop
push
cld
xor
pop
cmp
dec
sbb
dec
xor
lcall
pushf
mov
jmp
loopne
shll
fisubl
push
cmp
mov
add
mov
cwtl
stos
imul
cmc
xchg
shlb
jo
int
adc
jmp
popf
inc
push
outsb
sub
sub
aam
insb
shlb
mov
sub
into
jo
cmp
dec
ret
jg
imul
je
push
sub
inc
ret
popa
sub
fisttpl
aas
dec
test
insl
mov
addr16
gs
lods
imul
insb
outsb
adcl
data16
mov
lcall
out
jmp
jecxz
adc
push
jp
iret
aas
imul
sbb
iret
out
inc
adc
jnp
lret
mov
hlt
popf
test
xor
call
int
scas
fucomp
fbstp
cld
adc
pop
dec
xor
sbb
test
aam
scas
push
sbb
and
out
movsb
xchg
xchg
rol
call
cmp
push
cltd
js
scas
jmp
shlb
jbe
or
and
dec
mov
dec
addr16
pop
imul
mov
in
cwtl
lcall
and
movq
addb
outsl
cli
fadds
sub
jno
addb
push
or
pusha
xchg
mov
stc
rep
mov
sub
std
pop
push
jno
add
mov
sbb
jo
push
rcrb
mov
add
fmulp
jb
pop
or
leave
jecxz
out
jp
sbb
mov
pop
adc
stos
outsl
mov
imul
pop
jne
ljmp
gs
xchg
test
in
int
push
xor
lods
hlt
sub
mov
push
scas
fimull
mov
mov
jmp
push
sbb
push
nop
push
and
loope
cmp
jg
test
jmp
add
adc
mov
adc
push
cmp
lret
and
push
cmpsb
test
stc
daa
xchg
lods
mov
jne
popf
fnsave
ja
imul
xor
xor
xor
fisubrs
jo
in
cmp
mov
jg
cs
cwtl
sahf
icebp
push
dec
out
mov
pusha
cmpsb
jnp
and
or
movsl
pop
dec
mov
roll
clc
adc
dec
sub
inc
mov
aam
mov
pop
les
or
movsl
aam
mov
cmp
movsl
xchg
fwait
outsl
clc
add
negl
or
jo
call
ret
pop
jns,pt
add
push
add
cmp
lods
adc
cmp
xchg
cmp
pop
xchg
sbb
lahf
hlt
int3
jb
int
cmp
mov
les
cmp
leave
jl
mov
mov
gs
xchg
orb
xchg
xor
into
cmp
sub
add
out
inc
pop
repnz
mov
out
test
dec
cmp
push
xor
jp
cmp
mov
data16
sarl
or
cltd
popa
push
xchg
in
out
into
cmp
es
push
or
test
js
lret
loopne
add
repz
pop
shlb
or
test
je
mov
adc
push
push
nop
push
and
sbb
outsl
or
xor
js
sub
pop
rclb
push
clc
push
movsl
imul
out
test
addl
add
or
push
xlat
push
push
push
out
je
lahf
and
mov
popa
mov
jnp
aaa
imul
sbb
je
das
xor
xchg
xchg
lcall
dec
shll
nop
in
std
lods
lods
mov
out
mov
push
xchg
aas
out
aad
bnd
aam
jo
out
jecxz
push
js
push
and
mov
sbb
xchg
push
insl
jg
lahf
pop
jae
pop
jb
push
pop
int3
sub
jg
andb
or
repz
loope
inc
push
and
fcoml
xchg
mov
inc
ss
or
push
lret
sub
jl
xor
cmp
mov
outsb
mov
pop
sbb
adc
rorl
xlat
xor
jl
jo
inc
mov
inc
push
or
jmp
cmpsb
pop
cmp
out
imul
add
pop
pop
add
loopne
movsb
fstp
mov
out
cmp
arpl
dec
dec
test
ja
cmp
pop
cli
add
dec
aaa
ret
xchg
mov
cs
jmp
push
scas
test
int
inc
fisubs
cltd
mov
fldcw
jmp
jne
cmpsb
jmp
mov
fs
jno
push
sbb
mov
pop
ror
aaa
inc
test
push
cmp
stc
sbb
jecxz
sbb
aaa
std
js
pop
enter
inc
xchg
out
test
sbb
lcall
mov
adc
cwtl
mov
pop
std
ret
and
in
cltd
iret
xlat
movsb
cmp
fsubl
lea
sub
or
push
pop
mov
jl
or
mov
mov
outsl
jae
mov
or
orb
rorb
cs
jmp
je
add
xchg
cli
aad
ror
leave
xchg
dec
add
rolb
and
and
insb
call
pushf
outsl
test
dec
cli
add
push
inc
mov
dec
push
and
sbb
xor
mov
ret
inc
sub
gs
pop
icebp
xorl
xor
or
stos
sub
jmp
inc
insb
js
imul
or
sbb
push
add
je
inc
jo
fldenv
aad
aas
aas
cmp
or
into
inc
incb
adc
shlb
pop
in
add
ss
push
addr16
cltd
cwtl
lock
fwait
adcb
pusha
lcall
and
add
pop
jmp
xchg
mov
push
mov
ss
cmpl
cmpsb
push
mov
test
outsl
mov
insb
test
inc
rcl
rorl
mov
jnp
push
sbb
push
out
cmpb
lods
jbe
es
mov
sub
dec
out
cmp
jp
bound
test
je
fucom
mov
pop
dec
ljmp
mov
loop
pop
pop
inc
lcall
out
loope
dec
iret
iret
lds
pop
ret
mov
mov
xchg
dec
xor
orb
test
adc
cmp
add
pusha
mov
repz
mov
hlt
mov
test
aas
pop
cld
fisubrs
orb
repnz
sub
clc
test
mov
fldcw
shll
xor
cmp
cli
arpl
fildll
xchg
lods
cmc
push
ret
push
push
inc
inc
jb
les
jno
xor
jo
andl
lret
ret
ja
mov
xchg
scas
adc
inc
dec
jl,pt
jns
stc
push
xchg
bound
sub
lcall
push
pop
push
push
mov
mov
pop
and
jb
or
mov
jns
push
ljmp
push
adc
movsl
mov
and
repz
mov
mov
mov
fucompp
out
inc
dec
jne
hlt
mov
mov
ja
out
cltd
xor
pop
xor
push
dec
pop
sbb
leave
loopne
jmp
mov
xor
cmp
pop
push
xchg
mov
xor
lods
pushf
ret
push
add
aam
dec
xchg
xchg
cmp
lea
jae
adc
out
test
mov
pop
aam
mov
test
mov
loope
repz
pop
loope
out
xchg
sahf
cld
outsl
bound
jmp
or
and
jnp
in
push
or
xor
or
out
dec
mov
fisttps
jno
mov
gs
xchg
push
fs
lock
int3
pop
jmp
enter
in
inc
das
lcall
xor
test
sub
ja
lea
pop
adc
mov
insl
dec
mov
fs
cmp
mov
push
dec
mov
outsb
lcall
jl
add
cmpsb
and
pop
loopw
ficoml
stos
mov
jl
jae
shrl
jne
aas
push
pop
jmp
pop
mov
xchg
jo
imul
pop
inc
data16
lods
rcr
and
lods
or
setne
cmp
fisttpl
mov
aas
mov
cmp
scas
enter
clc
stos
lret
cs
jae
movsl
sub
lret
sbb
mov
dec
jo
jecxz
jg
ss
or
cmp
jp
mov
sub
push
inc
push
cmpsb
fdivl
sahf
pop
dec
fwait
add
mov
cmc
imul
repz
or
push
jl
and
out
cmpsb
into
shll
fdivr
jbe
sub
shlb
mov
rsm
stos
mov
cmp
shr
jbe
std
mov
push
lock
jbe
pop
mov
mov
dec
scas
xlat
ss
sub
pop
les
inc
and
pop
rorb
adc
jp
aam
and
adc
int3
leave
stc
cmp
popa
cld
orl
xor
or
std
fstpl
bound
leave
sahf
aaa
inc
movsb
sub
shr
hlt
mov
mov
push
ljmp
mov
dec
jmp
out
out
ret
shr
sbb
outsb
mov
push
xor
xchg
int3
xchg
ljmp
stc
mov
pusha
xchg
out
aaa
xchg
mov
ljmp
fsubl
inc
pop
insb
adc
pop
mov
out
into
in
xchg
negl
es
les
ret
test
movsl
idivb
pop
fstpt
repz
add
xchg
mov
mulb
cmp
mov
int
popf
fdivrl
stos
lds
pop
inc
sbb
sub
adc
enter
and
cltd
ret
push
dec
adc
inc
sub
outsl
jge
pop
fmulp
call
std
jae
xchg
es
lret
mov
push
call
sbb
rorb
push
push
shll
leave
loopne
lcall
iret
mov
inc
cmp
inc
push
rorl
or
outsl
out
jae
dec
adc
jmp
inc
lods
sbb
out
and
push
enter
loope
xchg
pop
xchg
out
pop
dec
fcomps
leave
iret
iret
pop
icebp
inc
push
data16
jbe
bound
push
shrl
in
sbb
jmp
pop
test
and
data16
jns
mov
inc
cmpsl
or
into
jmp
loope
out
xchg
stos
pop
xchg
sahf
jb
adc
inc
inc
subl
jl
inc
dec
jae
push
pop
addr16
mov
pop
ljmp
mov
jl
fisubl
imul
sahf
dec
lock
mov
push
xchg
pop
dec
adc
icebp
ret
es
orb
fsubrp
jae
scas
stos
data16
or
enter
inc
sbb
fcomps
xchg
add
fldl
xlat
movsl
lods
out
hlt
sub
dec
mov
xchg
adc
pop
clc
lds
cmpsb
xchg
stc
push
ret
fs
mov
jnp
add
ret
cmpb
mov
pop
cli
xor
scas
outsb
pop
cmp
mov
lahf
pop
jno
stos
mov
xchg
add
mov
out
int3
or
push
and
insl
inc
mov
adc
mov
add
pop
and
popa
shrb
push
mov
push
nop
outsb
xor
outsl
mov
pushf
cmc
xor
lods
xor
dec
sub
loope
push
sbb
jmp
inc
pop
addr16
pop
add
adc
adc
enter
enter
in
sub
icebp
xor
jnp
in
cmp
inc
cmp
or
stos
in
jo
push
testb
mov
loope
lret
jo
lock
mov
fstps
ss
fs
je
out
sbb
jno
and
jg
cld
decb
push
aaa
jg
insb
out
pusha
jb
push
cmp
jp
or
dec
mov
faddl
fimull
add
push
mov
cmp
adc
cmp
movsl
mov
pop
cmpsb
mov
adc
adc
mov
mov
in
lret
jo
xor
lret
lret
mov
jne
pop
lods
test
iret
fldl
cwtl
aam
into
lahf
ljmp
xchg
ret
lock
pop
data16
mov
shll
add
in
shrb
jbe
aam
imul
add
sub
pop
dec
fdiv
inc
and
dec
fs
or
add
sbb
cltd
inc
out
mov
push
cwtl
stos
ljmp
adc
leave
popf
lret
sti
mov
mov
push
xchg
jg
shr
jecxz
cmp
fdivrl
cld
sub
pusha
jmp
outsb
add
int
add
pop
int
sub
xor
mov
insl
bound
test
push
and
cmc
add
mov
and
push
xchg
adc
in
cmpsb
jmp
xor
adc
movsl
movsb
loop
cmp
mov
and
mov
mov
mov
ficoml
and
dec
jae
add
xor
aad
mov
inc
jle
aaa
pop
mov
test
dec
xchg
loopne
mov
jno
scas
lret
ficoml
inc
or
rol
xchg
enter
mov
sub
mov
xor
jno
test
or
and
roll
mulb
lahf
ds
mov
ret
dec
mov
xchg
add
mov
shlb
insb
lret
cmc
push
mov
xor
out
ljmp
cmp
pusha
repnz
bt
jb
ss
jbe
test
bound
xchg
cs
mov
add
fisttps
cmpl
inc
dec
stos
jns
por
pop
clc
jl
enter
nop
sub
mov
insb
pop
xor
add
out
testl
fstps
xor
add
cli
sub
je
mull
dec
das
mov
xchg
aad
mov
adc
push
xor
in
arpl
add
inc
pushf
pusha
push
out
jnp
cmp
or
sub
or
call
dec
adc
fsub
and
xchg
cmp
add
jge
clc
in
rcrb
push
gs
clc
xor
dec
enter
hlt
xchg
inc
mov
xchg
nop
lock
mov
scas
sarl
lock
addr16
mov
lds
scas
loopne
sbb
cmp
rcll
hlt
push
add
out
mov
cmp
in
push
js
xor
cmp
in
daa
lea
xchg
inc
mov
pop
mov
inc
jmp
pop
popf
push
adc
add
leave
inc
leave
push
clc
add
repnz
sti
fldt
shrb
mov
in
out
push
adc
out
xchg
mov
clc
psubsw
sbb
mov
or
mov
jno
loopne
sub
mov
mov
lcall
push
cmp
fstpl
scas
and
jnp
int
dec
popl
pushf
call
pop
je
pop
imul
adc
mull
push
add
mov
cmp
or
cli
dec
mov
nop
xlat
push
xor
dec
and
sbb
jbe
and
insb
decb
jmp
sbb
xchg
mov
push
rcr
test
in
sub
adc
lahf
fucomp
repz
mov
inc
lahf
push
outsl
cwtl
mov
je
js
xor
mov
or
inc
rcrl
popa
pop
add
stc
scas
fimull
adc
sub
pop
jo
testb
ror
xchg
movsl
and
cld
lock
mov
addr16
loopne
negb
lds
mov
aas
dec
outsl
add
mov
mov
cmpsb
popa
repnz
or
jne
xchg
shl
mov
loopne
dec
xchg
es
and
mov
into
push
xchg
jno
mov
push
add
adc
dec
ds
sub
push
inc
xchg
pop
aaa
pop
jno
or
cld
or
loope
cmc
push
push
scas
push
pushf
dec
ljmp
mov
lock
jmp
pop
ljmp
sub
stc
ret
shrl
xchg
dec
mov
out
mov
out
inc
popa
insb
lcall
sub
ds
inc
call
js
sbb
insl
arpl
or
pop
inc
into
jne
cmp
std
mov
lods
popf
daa
inc
imul
rcl
cmpsb
add
push
mov
scas
add
test
imul
add
enter
out
aad
mov
mov
adc
iret
in
jno
jp
push
lcall
aas
pop
stos
or
jg
xor
in
mov
pop
inc
pop
rcll
lea
in
aaa
ret
sahf
xlat
or
cmp
ror
rcll
iret
sahf
imul
mov
jbe
cmpsl
std
inc
sti
rorb
lods
mov
hlt
or
lahf
adc
lahf
pop
dec
sahf
insl
je
lock
in
push
orb
lea
xchg
lods
xor
mov
push
mov
stos
scas
repz
push
pushf
mov
and
mov
imul
jp
test
pop
jb
inc
inc
adcl
push
add
aas
call
test
and
addb
call
cs
scas
mov
pop
jne
mov
mov
sbb
mov
shrb
jp
adc
orb
outsb
dec
push
mov
or
jecxz
subl
mov
xchg
fcmove
rorl
shrl
mov
dec
mov
xor
into
xor
scas
sub
enter
lahf
pop
mov
jbe
add
or
cwtl
enter
or
mov
push
out
out
sbb
xchg
xor
push
sub
imul
and
arpl
popf
jno
lahf
or
or
add
mov
lret
data16
outsb
xchg
adc
lret
inc
jno
inc
cs
or
add
inc
popf
cld
cmpl
das
add
add
push
test
jecxz
push
xchg
cmpsb
enter
loopne
insb
int3
test
add
seto
jbe
sub
mov
xchg
add
xchg
sahf
xchg
add
push
inc
add
lcall
inc
sub
enter
das
out
testb
push
dec
inc
imul
dec
int
loopne
and
mov
add
mov
xchg
stc
repnz
adc
jmp
adc
data16
das
cld
dec
lcall
lock
dec
insb
pop
imul
mov
dec
imul
in
jo
and
ss
enter
leave
pop
lock
loope
jle
xor
aaa
faddl
imul
out
cli
mov
mov
mov
fs
push
inc
popl
js
push
aam
jbe
popf
inc
cwtl
scas
test
sbb
and
cmpsl
mov
fsts
dec
aad
cmpsb
sbb
ficomps
fisttpl
cmp
and
lret
sahf
mov
jecxz
push
xchg
jo
cmp
les
insl
addr16
lahf
fistpll
stos
add
sub
push
xchg
push
fwait
ret
test
and
sbb
mov
sub
xor
mov
jecxz
pop
add
cli
dec
std
adc
cmpsl
stos
jno
cmp
les
dec
loope
jne
jae
push
push
xchg
insb
es
ret
lea
pop
inc
xor
test
cld
mov
stos
jp
inc
call
mov
sbb
add
lret
push
scas
cmpb
int3
xchg
cmpsb
pushf
or
pop
stos
mov
xorl
mov
push
pop
orl
out
nop
jnp
adc
inc
test
dec
jbe
push
lahf
mov
adc
xor
enter
ds
loop
add
bound
xor
fwait
rorb
mov
jns
sbb
repz
movsb
in
lods
fcompl
jns
adc
in
lret
fprem
xchg
pop
hlt
daa
pop
gs
nop
dec
in
ret
pop
call
mov
push
push
adc
pop
jno
cltd
lcall
aas
jg
out
jmp
jb
lea
testb
scas
or
aas
dec
mov
into
xor
scas
aaa
hlt
add
xor
cli
mov
mov
mov
jb
lret
inc
cmpsl
lock
xchg
dec
int
dec
nop
or
jmp
pusha
mov
sub
aaa
push
hlt
loope
rol
push
xchg
lahf
jnp
andb
mov
ds
test
pop
out
mov
jns
loopne
sbb
fst
ret
pop
dec
inc
loope
and
icebp
mov
sub
push
xor
add
pop
push
addb
adc
popa
aad
repz
pop
cmp
pop
push
jnp
or
add
adc
lret
sti
and
stos
xlat
jecxz
popf
xchg
adc
shl
ja
inc
jecxz
sub
mov
nop
push
sti
imul
xor
or
push
add
aas
cld
mov
xor
push
mov
mov
dec
push
dec
push
aam
dec
jo
aam
rcrl
insb
sub
aad
xchg
inc
in
lret
loopne
pop
test
sahf
sbb
inc
inc
sub
xor
in
sub
sub
ja
fwait
xor
js
movsb
push
push
shrb
aam
pop
cmovb
iret
icebp
jp
js
sahf
add
jne
sbb
mov
insl
movsb
icebp
jmp
jns
pusha
out
push
or
sub
mov
mov
mov
jl
xor
cltd
loope
jae
lds
xor
mov
cltd
gs
pop
lods
cli
addl
dec
inc
rcrb
loopne
sub
int
pop
push
mov
in
das
push
lret
inc
iret
fisubrl
lock
or
rol
cmp
add
fdivrl
mov
and
jge
or
lret
cmp
sub
iret
aas
add
addr16
pop
jns
pop
inc
inc
cmp
test
idivb
insb
cmpsl
mov
loope
push
movsb
push
jnp
aad
leave
aad
ret
scas
add
outsb
mov
pop
repz
pop
pop
aad
vaddps
sbb
push
jne
xlat
sbb
jbe
stos
loope
hlt
in
jecxz
jbe
and
test
dec
push
sti
in
sbb
nop
cmp
push
lock
lahf
dec
sub
mull
shlb
push
incl
sar
sbbb
xchg
ficoms
sub
daa
mov
outsl
sub
inc
xchg
mov
lret
xor
sahf
push
pop
jnp
in
mov
cmp
sub
push
rcrb
jbe
outsl
rolb
rcll
dec
or
push
xor
out
mov
push
nop
insl
jmp
mov
dec
xchg
and
rcl
testb
or
lcall
xchg
sbb
sbb
pop
repnz
sub
add
sbb
imul
and
ds
fidivl
add
or
enter
inc
jae
mov
pop
adc
adc
call
push
push
ret
fnstcw
inc
pushf
pop
lret
out
stos
push
pop
mov
fiadds
jecxz
xchg
movsl
shll
icebp
xlat
push
data16
pop
and
lret
pop
or
xchg
adc
mov
in
test
jnp
cs
mov
ret
xchg
out
sub
xor
push
inc
orb
popw
xchg
arpl
xchg
push
rcrl
xchg
sub
gs
ds
and
and
scas
sahf
ss
adc
push
jne
jecxz
movsl
xorl
inc
cmp
sbb
xchg
mov
mov
leave
xor
call
je
int
fs
mov
jg
aaa
push
in
xchg
pop
sbb
int3
lods
add
dec
scas
or
inc
push
in
sbb
cmpsb
adc
movsb
test
nop
sub
sbb
rol
out
test
mov
adc
sbb
movsb
je
adc
stos
dec
or
push
and
mov
int3
dec
mov
loopne
push
cwtl
movsb
jmp
loopne
add
inc
out
inc
pop
stc
jns
test
imul
cmp
in
mov
int3
cwtl
mov
rorl
loopne
mov
int3
movsl
imul
mov
inc
cmp
lcall
test
jle
add
cmc
ret
jae
push
mov
scas
sahf
rclb
dec
pop
push
std
mov
pop
sbb
jbe
clc
mov
jl
push
leave
out
jg
push
jno
mov
jg
loop
in
jnp
fcoml
jecxz
or
mov
aam
ja
in
sub
dec
jbe
jle
pop
push
mov
ret
add
mov
mov
push
mov
leave
rcll
test
dec
or
adc
ret
sub
bound
inc
mov
and
out
push
pop
pop
push
add
cmp
stc
sbb
or
and
jmp
repz
insl
dec
xlat
loop
rolb
sbb
es
inc
cmp
shrl
out
push
imul
xor
test
sbb
mov
lcall
hlt
ds
mov
nop
scas
nop
jbe
jl
pop
rcr
sub
mov
aaa
xorb
xor
fstps
aas
test
fcmovu
cmpsb
jmp
xchg
mov
pop
jp
call
fidivs
push
es
sbb
test
rorl
mov
cli
dec
imul
call
cwtl
or
add
adc
je
mov
mov
fdivrs
imulb
test
ds
and
cltd
push
sub
insl
pop
mov
cli
pop
xor
pop
xchg
cli
jle
icebp
pop
push
mov
std
jae
sbb
xchg
mov
ret
and
aam
fwait
xorb
cld
cmp
fsts
ret
scas
repz
push
mov
cmp
ds
xchg
js,pt
fxch
adc
aam
pop
push
mov
hlt
mov
pop
and
lret
xor
inc
dec
mov
jp
xor
and
pushf
jne
ljmp
jl
dec
lods
mov
scas
out
adc
lahf
mov
int3
ret
addr16
sti
or
icebp
mov
mov
js
mov
pushf
adc
cwtl
xor
pop
push
xchg
das
sarl
sbb
inc
jae
js
adc
jae
mov
sahf
test
jecxz
sub
and
jl
dec
xchg
ret
lods
daa
dec
xlat
or
cmp
sbb
arpl
andb
les
and
aam
lret
jg
jb
mov
aad
sub
bound
out
stos
cli
xlat
mov
push
lahf
xlat
ficoml
insb
sub
sub
lods
out
mov
pop
in
pusha
in
aad
sub
shll
push
cli
and
clc
and
jne
cmp
inc
fs
sarl
fsubrl
loope
push
ja
add
push
inc
jge
xchg
jno
loope
aad
push
faddl
pop
inc
mov
nop
lods
ja
test
xchg
nop
mov
push
insl
lods
lret
adc
inc
pop
push
jmp
mov
sbb
fistpl
xchg
arpl
popf
inc
mov
imul
or
fistpll
sahf
outsb
cwtl
cwtl
xchg
dec
jge
roll
jle
cmpsb
ja
insl
and
lret
inc
or
push
insl
xchg
imul
mov
mov
mov
stos
clc
mov
jbe
jno
fs
or
loope,pn
mov
or
dec
xor
jge
xchg
mov
mov
xor
mov
pushf
and
icebp
push
out
cld
or
loop
aam
popf
dec
rclb
sub
mov
insb
cld
xchg
out
sarl
jecxz
hlt
jne
jne,pt
push
mov
or
outsl
xchg
sbb
es
lds
lret
test
call
mov
das
lds
clc
pop
shll
jle
push
mov
cmp
push
scas
mov
or
lock
mov
push
stos
je
push
inc
fdivs
jg
mov
ror
sbb
jbe
aas
mov
dec
xchg
mov
out
cmp
in
mov
aas
lret
and
cmpsb
cmp
pop
scas
out
pop
pop
pop
test
jno
stos
mov
pushf
push
xchg
inc
mov
stos
sahf
inc
and
inc
fwait
inc
xor
ret
inc
fs
and
xchg
adc
inc
jmp
push
inc
adc
adc
mov
push
xor
xor
push
cmp
mov
scas
push
jno
ljmp
jnp
fldt
das
pop
add
std
idivl
ds
movd
aas
rclb
mov
cmpsb
popa
adc
mov
insb
scas
jmp
aad
jp
cli
hlt
pop
jmp
mov
pop
mov
pop
imul
je
mov
xor
out
out
cmp
mov
shr
and
lret
inc
aad
idivb
fstpl
test
mov
fwait
gs
or
cmp
out
sub
cld
fildll
xchg
repz
rcrb
dec
sbb
mov
cmp
sahf
cs
cmc
fs
mov
push
arpl
rolb
and
jl
xor
mov
xchg
mov
fs
push
cmpsl
dec
jb
inc
cltd
fsubl
cltd
sbb
imul
jb
adc
inc
arpl
mov
arpl
sub
fnsave
inc
jmp
shl
inc
sub
cmp
std
test
push
scas
inc
sbb
xor
mov
or
pop
add
xchg
cmc
mov
stos
pop
cmp
ret
sbb
stos
fs
sub
bound
data16
mov
stos
add
push
push
dec
dec
jae
mov
mov
lcall
fldt
test
les
lea
jae
cmpsb
movsl
jae
imul
and
sbb
cmpsl
int
loopne
mov
dec
shlb
ljmp
cmpsb
pop
pop
ljmp
fwait
addl
lods
mov
mov
mov
dec
jb
icebp
push
movsb
mov
insl
into
gs
int3
xchg
rcrb
loop
cmp
sbb
adc
xchg
add
inc
out
loopne
jle
test
dec
test
adc
js
inc
push
mov
sbb
pusha
sub
gs
repnz
mov
dec
lahf
mov
imulb
out
pop
jmp
pop
lods
xchg
pop
in
push
jb
and
mov
jp
lods
inc
repz
pop
stos
icebp
jp
xor
adc
imul
imul
mov
jae
cmp
and
pop
ss
mov
xor
bound
mov
inc
scas
in
mov
sbb
cmc
scas
xlat
cmp
ret
mov
popa
mov
mov
xor
or
jb
ret
adc
mov
push
hlt
mov
jl
sbbl
push
dec
lods
inc
aaa
jb
xchg
fisttpll
and
sbb
ss
xor
mov
ljmp
outsb
or
inc
mov
pop
repnz
out
jmp
leave
xchg
sub
icebp
ds
pop
or
lret
or
je
pop
mov
insb
jb
test
insb
sbbl
mov
fdivrs
popa
cmpsl
and
in
pop
push
cmp
in
daa
inc
pop
xor
mov
or
inc
fdivs
outsb
enter
je
adc
iret
adc
and
mov
call
or
pop
inc
int3
cmc
xor
lock
mov
jae
das
movsl
aad
push
mov
aam
mov
leave
into
lds
xlat
daa
scas
sbb
lds
sub
enter
sub
cmp
mov
xchg
inc
cwtl
out
iret
and
aam
daa
mov
ljmp
lods
aas
jg
inc
mov
pop
cmc
lret
dec
mov
pusha
stos
test
in
push
adc
sbb
stos
test
mov
mov
xor
aaa
iret
add
shr
adc
add
xor
mov
or
arpl
cld
insb
sub
outsb
xor
bound
imul
aam
les
mov
data16
ljmp
add
fmuls
pop
negl
pusha
add
cwtl
fsubrp
icebp
push
jmp
movsb
sbb
sub
jle
in
pop
leave
fcoms
lea
ljmp
test
sbb
imulb
shll
fcompl
scas
mov
mov
xchg
enter
subb
fcomip
pop
adc
pop
aam
jp
dec
push
std
sbb
inc
and
mov
iret
insb
mov
call
sbb
addr16
aas
xchg
push
inc
ss
clc
xor
scas
sub
out
add
add
xchg
iret
xor
std
cltd
pusha
jno
cmc
fldcw
jbe
push
popf
test
adc
in
leave
xor
inc
add
xchg
ret
and
scas
jo
mov
gs
dec
xchg
dec
jg
cwtl
mov
lods
xor
aam
popf
imul
pop
out
xchg
pop
mov
add
inc
sbb
jge
out
sbb
sbb
and
mov
cmpsb
inc
adc
pop
mov
fnstsw
shl
cmp
fdivrp
leave
sbb
push
mov
jbe
aad
pop
lods
cs
xchg
cmpsl
pop
xor
mov
aam
inc
cwtl
xchg
test
dec
jno
rcrb
mov
cmp
xor
jmp
pop
aad
push
stos
lcall
and
dec
imul
xor
and
jno
lahf
jnp
jbe
bound
mov
sar
and
xor
cld
das
xor
and
int
mov
fs
pusha
test
cmp
bsr
bound
rcrl
cmp
les
inc
jl
add
add
sub
or
lea
mov
lret
xchg
and
or
jp
shll
or
sbb
inc
repz
mov
push
addr16
gs
adc
popl
es
jb
imul
mov
inc
lret
push
pop
sbb
outsl
cmpsl
enter
mov
mov
lret
or
mov
repz
aaa
aad
xchg
test
popa
jecxz
test
out
xchg
pop
cmpsl
lds
mov
sahf
mov
xchg
into
call
mov
scas
pop
test
cld
xor
sahf
xchg
pop
mov
pop
cmp
cmp
mov
test
fsubs
inc
sbb
aas
xchg
or
xor
inc
jmp
and
sub
movsb
xor
jl
push
fwait
inc
imul
push
pop
xor
add
enter
roll
mov
push
push
jle
jb
loope
add
testb
mov
adc
adc
push
mov
cltd
aaa
sbb
mov
add
aaa
andl
dec
push
mov
xchg
cwtl
arpl
sub
inc
sbb
cld
push
or
push
dec
or
sub
out
cmpsb
repnz
ds
nop
les
mov
decl
mov
push
ja
add
push
lds
xor
insl
jne
es
arpl
cld
daa
ljmp
cmc
notb
or
in
fdivrs
ret
dec
in
xchg
in
leave
scas
push
or
in
pop
pop
cmp
sub
xchg
out
and
f2xm1
insb
jbe
or
test
add
mov
or
xor
pop
adc
call
mov
push
mov
add
mov
xor
mov
pop
lock
aad
and
sub
out
pop
jae
xor
pushf
ds
xchg
into
leave
sbb
xor
hlt
pop
daa
push
cltd
mov
push
push
ficomps
into
leave
mov
lcall
outsl
mov
repz
jns
icebp
fs
clc
cmp
push
pop
test
mov
pop
pop
incl
shlb
cmpb
jne
add
int3
dec
jge
test
das
lods
cs
mov
clc
or
shlb
jno
mov
xchg
push
inc
pop
leave
pop
mulb
dec
cmp
icebp
loope
push
int
movb
lcall
dec
cmp
jae
call
std
sub
nop
dec
cmpsl
cmc
lcall
inc
clc
roll
mov
mov
sbb
scas
int3
addb
je
pop
lds
bound
xlat
jp
out
xor
jb
xchg
push
icebp
sub
sub
push
cmpsl
lcall
pop
xchg
jg
mov
push
and
stos
jp
stos
cmpsl
lea
cmp
lcall
add
outsl
lret
sub
stc
lahf
inc
push
xchg
les
xor
insl
cltd
dec
jne
or
inc
mov
lods
xchg
sbb
jle
sub
jns
ret
sbb
adc
rorb
xchg
fstpl
inc
loope
hlt
mov
push
or
xchg
cmp
inc
out
stos
fs
add
in
mov
inc
sti
icebp
jl
xor
fcomps
es
lret
push
push
jmp
add
scas
loop
or
sbb
stos
in
cmp
sub
shl
inc
lea
jle
and
test
outsb
loope
mov
sahf
sti
aas
pop
ljmp
inc
xor
loop
repz
clc
adc
arpl
add
out
pop
sub
les
jo
mov
pop
sbb
pushl
popf
jp
loope
aas
jbe
fs
insb
fwait
jno
add
iret
mov
cltd
iret
mov
popa
ss
push
lock
add
in
xlat
stos
lahf
jb
adc
push
add
jmp
les
test
std
mov
push
inc
into
mov
cld
mov
js
lock
jbe
insl
clc
jno
push
push
pop
push
or
ret
pop
mov
add
push
pop
test
lret
test
add
decb
aas
call
ss
inc
xlat
andb
ret
icebp
leave
cmc
loope
pop
mov
pop
out
ja
repnz
pop
push
arpl
add
mov
push
loop
in
shlb
push
inc
dec
inc
fcomps
jae
cmp
lds
testl
sbb
cmp
push
or
pop
rolb
xor
mov
push
cmp
add
mov
add
push
xor
pop
and
adc
in
inc
in
rorl
out
pushf
shr
lods
enter
and
mov
lahf
cmpb
leave
mov
lret
jns
pop
iret
fnstsw
stos
jge
push
push
adc
mov
rep
ss
xchg
pop
es
fadds
cmc
js
dec
js
fistpl
mov
mov
mov
xor
clc
push
fadds
cmp
or
mov
stos
push
push
insb
mov
negl
in
adc
das
out
popa
icebp
push
mov
outsl
xchg
pop
sub
mov
adc
iret
ret
xchg
sub
sbb
jo
jae
xor
cmpsb
xor
mov
sbb
mov
pop
pusha
inc
in
and
sub
mov
cmpsl
outsl
outsb
rcr
jg
jg
sar
adc
sbb
mov
sub
inc
cmovs
jns
and
xchg
fcoml
push
in
xlat
repz
mov
mov
pop
fisubrs
sbb
cmc
push
dec
push
stos
nop
sbb
lock
dec
xor
rol
jo
aas
clc
cmp
cmp
push
daa
mov
add
loope
lahf
sahf
xor
sbb
mov
jle
fs
ss
ret
inc
sub
cmp
pop
es
adc
rol
push
mov
mov
in
iret
cmpsl
mov
sub
mov
or
add
jbe
adc
push
insl
out
pop
lcall
add
seta
pop
in
mov
fisubs
in
lock
idiv
loopne
sahf
js
add
pop
scas
jmp
out
scas
shrb
lods
or
testb
push
jmp
lret
sub
dec
shll
inc
jno
pop
shlb
jge
nop
stc
flds
out
sub
dec
xchg
aam
cmp
cmp
mov
sub
cmpsl
mov
pop
rcrl
rcrb
loopne
insb
mov
loope
inc
mov
mov
mov
loopne
lds
or
jns
add
in
int
out
rorl
mov
test
sub
sbbl
ss
jmp
add
and
rcr
pop
mov
insb
mov
pop
repz
movsb
push
int3
xor
sbb
lods
cld
mov
jo
cmpsb
lods
xchg
push
or
push
mov
aas
cld
mov
cmp
mov
fcoms
lret
mov
lods
or
mov
jecxz
cld
faddl
fsubr
pop
push
ss
inc
xor
cld
cmc
lea
aaa
ljmp
jb
scas
ds
in
cmpsl
dec
je
jb
ljmp
leave
and
aas
cmp
mov
fmull
fiadds
repnz
push
cli
mov
insb
push
in
or
or
mov
xchg
cmp
insb
leave
cmp
pushf
sub
stos
movsl
cmpsl
push
repz
or
pop
mov
or
xor
cmp
mov
gs
arpl
cmp
repnz
cmpsl
jae
cmp
das
call
mov
es
fadds
gs
push
jbe
or
pop
fistpll
xchg
push
pop
sbb
insb
xchg
xchg
dec
mov
stc
rcl
aad
or
mov
sub
cmp
pop
sub
lret
stos
in
insl
jle
or
dec
add
inc
std
call
int3
sub
repnz
movsb
xor
mov
rep
pop
fidivrs
or
lret
sbb
xchg
inc
shr
out
fldenv
adc
xor
pop
mov
cwtl
inc
cmp
xchg
insb
jmp
popa
pop
pushf
daa
add
cmpsl
pop
je
rcrl
loope
aas
jbe
mov
mov
movsb
popf
lods
cmpsb
add
adc
adc
dec
xor
testb
iret
dec
pusha
push
pushf
or
inc
sarb
dec
inc
sbbb
inc
mov
xlat
fbld
push
cmc
lods
les
push
xchg
adc
popf
inc
mov
shr
es
sbb
push
rclb
int
xor
rcrb
cwtl
movsb
imul
ss
lods
lahf
shrb
pop
mov
out
push
push
imul
mov
mov
fadds
and
lret
cmp
sti
adc
adc
lea
ja
lcall
in
mov
pusha
and
ss
sub
nop
inc
gs
icebp
sub
test
xchg
sub
jne
mov
repz
xchg
insl
insb
sub
in
xchg
ret
dec
fucomip
sub
call
aad
add
sbb
aas
fucomp
xchg
jle
nop
pushf
inc
aaa
movsl
imul
inc
mov
dec
sub
cmp
mulw
dec
xchg
cmc
addl
pop
mov
aaa
inc
aas
or
xor
inc
jmp
sbb
ffree
imul
mov
add
sbb
jne
jmp
leave
jae
push
xor
repnz
mov
cmpsl
push
lahf
and
into
cli
or
das
or
loopne
das
lea
mov
jecxz
in
and
mov
inc
lds
fwait
insb
xor
adc
pop
sub
icebp
sub
xor
cmp
xchg
adc
std
mov
and
and
nop
add
fwait
xchg
push
cs
mov
movsl
movsb
lock
push
mov
ret
mov
into
popf
push
mov
mov
bound
test
mov
push
sub
test
mov
xor
xchg
jo
sbb
xchg
shrb
mov
xchg
jle
adc
pop
or
insb
arpl
fcomi
adc
sbb
mov
nop
pop
or
push
divl
mov
xchg
repnz
aaa
outsb
loop
les
sarb
mov
cmp
aam
adc
incb
cmp
outsb
rcl
cld
pop
mov
pop
jno
movsb
std
xor
lahf
call
pop
stos
fisubs
out
pop
dec
jmp
add
les
clc
rorb
loop
cli
or
ret
sbb
jne
mov
lds
or
mov
add
ja
icebp
andl
pop
jne
fwait
pop
cmp
jg
outsb
aaa
je
fsts
fnstenv
dec
xor
add
ss
ja
sub
pop
or
xchg
mov
sub
js
xor
les
loopne
mov
popf
add
jbe
inc
push
jge
and
hlt
sbb
ds
and
test
add
and
xchg
in
xor
fisttpll
call
test
mov
sahf
lret
iret
incl
push
dec
push
mov
jns
push
ret
fucom
popf
jle
dec
mov
test
cmp
mov
ja
jmp
inc
adc
dec
cwtl
or
cmp
repnz
mov
xor
mov
cld
and
data16
je
xlat
rcr
scas
mov
imul
sbb
or
mov
sahf
mov
xor
add
lods
mov
movsl
lods
mov
xchg
jb
ffreep
xchg
mov
ds
sub
xor
stos
mov
out
rol
mov
das
mov
lret
xchg
and
pop
addr16
sub
sub
xchg
inc
outsl
and
out
out
shrl
ret
and
xchg
pop
xor
add
xchg
dec
pop
pop
mov
ret
hlt
sbb
jge
cmp
pop
or
loope
arpl
add
in
xchg
or
xchg
filds
adc
sub
pop
outsb
leave
jmp
inc
push
out
mov
xor
push
fucomp
pop
sbb
push
and
jp
in
add
les
jl
out
shll
cmpsb
insb
insb
add
pushf
loop
mov
scas
fsubs
adc
bound
in
push
fs
or
add
sbb
adc
scas
or
inc
cwtl
das
cmpb
scas
jmp
cs
mov
ds
mov
adc
pop
and
mov
mov
or
fbstp
imul
in
jo
mov
inc
dec
push
push
xchg
jbe,pt
jge
pop
imul
dec
daa
movb
add
movsb
out
and
dec
push
mov
rcll
addr16
loopne
push
mov
push
mov
mov
pop
cmpsb
cmpsl
mov
fdivl
ds
and
mov
and
fbld
adc
in
mov
fwait
test
shr
jbe
inc
and
movnti
inc
lahf
xchg
dec
dec
or
and
in
in
pusha
pop
push
pushf
aas
sahf
add
dec
out
call
lods
xchg
movsb
jl
mov
cmp
test
mov
inc
dec
orl
dec
mov
push
or
out
dec
xchg
dec
in
lcall
dec
flds
lods
mov
jl
cmc
add
lock
xchg
inc
or
push
fwait
sti
je
or
push
sbb
dec
mov
out
test
faddl
rorb
testb
in
movl
pop
push
loopne
into
sbb
mov
mov
cmpsb
push
dec
mov
mov
in
jmp
andps
mov
scas
push
sbb
sub
xchg
xor
mov
call
mov
cwtl
mov
stc
push
in
adc
cmc
cltd
adc
or
jl
mov
jp
pushf
pop
ss
mov
dec
inc
pop
aaa
in
jle
sbb
test
or
adc
int
into
int3
pop
test
pop
outsl
adc
clc
xchg
sub
push
out
sbb
lods
lcall
out
in
mov
cmp
sub
or
cli
pusha
fcoms
cmpsl
into
cmc
cmpsb
mov
jle
xor
test
push
scas
stos
daa
insl
dec
mov
or
inc
add
mov
neg
xchg
mov
add
inc
cmp
and
adc
loopne
imul
xchg
insl
arpl
jge
rorb
dec
xchg
xchg
push
pop
cltd
test
pushl
push
adc
ret
mov
out
int
pop
add
es
adc
mov
cmp
mov
add
out
shl
add
mov
fisttps
push
call
scas
jecxz
andb
in
inc
mov
pop
and
pop
sbb
or
mov
xchg
xor
jp
pop
imul
dec
fucom
sbb
pusha
pusha
loopne
push
dec
js
stos
and
push
cltd
mov
dec
ficompl
ljmp
das
aaa
lahf
xchg
leave
rcl
notl
lds
dec
or
jl
xchg
push
shll
adc
repz
dec
into
pop
jno
mov
mov
lret
popa
repz
lock
push
test
std
bound
mov
icebp
adc
inc
inc
pusha
mov
ljmp
imul
loope
or
add
xorps
mov
and
test
test
mov
cmpsl
cltd
stos
je
out
int3
dec
scas
arpl
stc
mov
out
xchg
je
fwait
fs
mov
in
ja
or
sub
or
xor
movsb
call
cmpb
mov
imul
das
add
andl
addl
add
fsubrp
fsubl
cltd
cs
leave
mov
adc
adc
clc
std
cwtl
push
aaa
dec
dec
push
loopne
loopnew
clc
adc
rclb
cmp
xchg
shlb
cs
xchg
mov
jl
pop
rcrb
jp
jmp
sbb
fcoms
nop
adc
imul
jne
mov
and
pop
lods
push
mov
mov
push
fisubs
or
mov
clc
int3
shrb
xchg
cmp
mov
and
mov
or
lods
jns
mov
std
fs
inc
pop
mov
outsl
xor
mov
dec
lcall
imul
push
and
ja
add
cmc
and
jno
inc
mov
pusha
int
jmp
jbe
dec
or
add
mov
mov
repnz
cmp
stc
push
addl
call
pop
loop
notl
pop
in
mov
or
add
imul
mov
pop
into
or
mov
pop
jb
fimuls
jp
sbb
sub
push
mov
jmp
stos
pop
jno
or
cmp
data16
xchg
fnop
sbb
mov
ret
mov
out
pop
jmp
pop
xchg
sbb
scas
fcomip
test
dec
subb
arpl
push
cmp
fs
test
in
out
mov
scas
es
push
sbb
out
lret
fstp
cli
pop
pop
dec
xor
push
jnp
or
sti
movsl
cmp
push
lock
insl
pop
addr16
outsb
xchg
imulb
pop
sbb
xor
sbb
xchg
jne
pop
fistpl
xchg
jecxz
cld
outsl
push
enter
push
aad
mov
ds
pop
pop
cmpl
imul
inc
add
sub
pushf
add
mov
xchg
out
jae
adc
lock
or
ret
mov
xor
std
xchg
popf
sub
xor
push
bound
push
xor
xchg
adc
push
pop
rcrb
repz
rorl
imul
mov
ds
push
adc
sub
jle
mov
js
stos
popf
movsb
aam
pop
dec
lods
filds
cmp
fstl
cmp
xchg
and
adc
inc
cmp
push
xchg
sahf
int
dec
xchg
sbb
clc
inc
das
add
jle
dec
aam
dec
sbb
mov
lcall
adc
dec
mov
ljmp
add
sbb
idiv
xchg
movsl
adc
orb
mov
test
xor
das
cmp
aas
and
xchg
mov
lods
in
ja
je
mov
dec
sub
popl
hlt
cwtl
scas
push
stos
and
mov
xchg
in
shr
adc
ret
repnz
and
mov
hlt
jbe
das
inc
pop
cmpsl
sbb
xchg
jo
dec
and
stos
dec
pusha
orl
mov
fnsave
in
bound
push
adc
aad
pusha
loopne
jne
lods
mov
jns
push
xor
mov
jns
push
lcall
or
inc
sub
call
or
mov
divl
outsl
lret
push
daa
ja
sbb
sub
je
xor
pushf
and
jp
xor
jmp
into
adc
xchg
xor
pop
lcall
dec
into
ja
mov
adc
arpl
push
fdivrs
cmpsb
out
push
xchg
xchg
lock
push
lods
test
mov
lcall
mov
xchg
scas
cmp
cmpsb
adc
in
int3
stos
and
int3
sbb
pushf
adc
cmpl
push
and
icebp
adc
adc
lds
icebp
out
faddl
jg
rcrl
xchg
ficoms
dec
hlt
jo
xchg
push
cs
aad
inc
hlt
insl
daa
pop
mov
repz
dec
mov
ss
nop
loope
fists
std
outsb
sbb
jp
shrl
adc
or
xchg
cmp
imul
jns
andb
ss
cmp
scas
cmp
jecxz
mov
test
mov
ret
mov
pop
mov
cmp
add
inc
cli
outsb
xor
inc
sarl
mov
or
shr
push
or
scas
jle
mov
mov
aad
inc
fldln2
push
push
lods
in
pop
daa
lods
xchg
aaa
and
push
scas
mov
cwtl
jnp
mov
aad
xchg
xchg
pop
xor
xor
ret
mov
jnp
mov
iret
push
push
sub
xor
inc
cmp
mov
testb
negl
push
and
mov
adc
xor
sbb
cmp
js
call
mov
or
movsl
cld
int3
aas
lods
add
lret
and
xor
addb
adc
xchg
mov
xor
xor
fcmovbe
imul
sarb
ret
pop
shrb
negl
mov
fcmovnb
and
inc
xlat
jl
pop
int
mov
adc
int3
loopne
pop
mov
jecxz
jno
pop
cwtl
push
insb
scas
out
aas
and
out
sub
scas
data16
jns
aas
in
xor
cmc
fdivrp
hlt
push
movsl
shrb
xchg
cmp
push
xchg
shrl
out
adcb
xchg
addr16
cmp
sbb
testb
repz
or
mov
dec
mov
aas
adc
or
sub
jle
outsl
fbstp
xor
fsts
add
jl
xchg
testb
inc
rcrl
idivb
cmpsb
or
dec
pushf
icebp
lcall
ret
int3
lods
jl
popf
sbb
test
mov
filds
aaa
stos
pop
mov
cwtl
push
jb
xchg
out
xchg
shrb
add
pop
ficoml
movsb
xchg
and
adc
jo
ljmp
and
mov
pusha
mov
ret
test
imul
lahf
sti
sub
iret
cmc
mov
jne
in
push
int3
ret
inc
arpl
pop
int3
sub
es
arpl
sbb
rcrb
into
mov
gs
push
or
sub
push
cmp
ret
les
dec
pop
push
adcl
fnsave
add
popa
mov
imul
aas
jb
pop
push
lods
add
xor
xchg
decb
push
dec
push
jo
dec
pop
inc
or
mov
out
push
pop
aad
arpl
mov
pop
stos
in
inc
movsl
adc
mov
push
jno
sahf
xor
scas
inc
ljmp
das
inc
gs
mov
push
xor
scas
stos
imull
decl
push
fs
dec
mov
cmp
stos
jmp
ja
dec
js
outsl
ja
xchg
jg
cwtl
adc
sbb
outsb
or
xchg
loope
cli
aas
xor
sti
sub
or
and
push
insl
out
sbb
dec
in
or
jo
and
fwait
jnp
outsb
sub
daa
bound
pop
ss
sub
addl
lcall
scas
in
xchg
cmp
data16
shr
popf
inc
out
insb
test
adc
add
sbb
push
stc
cli
shlb
or
xor
inc
and
xchg
mul
inc
idiv
mov
xchg
pop
dec
xor
sub
sub
shrl
popa
ds
aaa
fsub
aad
push
lret
inc
pusha
xchg
or
ss
ds
leave
ret
les
arpl
imul
sbb
shrb
pushf
jo,pt
adc
xchg
imul
inc
leave
xchg
inc
outsb
adc
push
jb
mov
cs
mov
inc
cmp
pop
or
mov
and
push
inc
icebp
mov
je
lcall
pushf
ljmp
xor
inc
adc
push
push
pop
mov
fisttpll
aad
push
and
sub
inc
fiadds
lock
or
jmp
and
stos
jmp
loope
inc
dec
outsl
cmc
xchg
stos
shll
lea
mov
cmpb
mov
mov
xor
jecxz
stc
adc
shrl
test
dec
cmpsb
mov
cmp
es
pop
jbe
xchg
or
and
jle
sub
out
out
aas
xor
inc
cmpb
mov
aad
inc
shr
cmp
fimuls
jns
lds
xor
out
shrl
and
fisubrl
loope
gs
dec
adc
adc
hlt
in
nop
cwtl
inc
cwtl
das
lcall
lds
jbe
mov
cmpsl
and
mov
test
mulb
mov
inc
mov
scas
jnp
loopne
push
push
xchg
adc
jle
divl
push
das
lcall
xor
divps
jns
in
ljmp
rorb
sarb
sub
sub
inc
inc
xchg
mov
cmp
and
aaa
fisubl
jp
data16
lds
enter
jae
sti
add
xchg
pop
sub
or
ss
inc
pop
mov
stos
sub
enter
jl
xlat
out
mov
inc
mov
outsb
imul
fdiv
dec
pop
mov
fidivs
add
fsubrs
jno
lcall
jnp
hlt
in
mov
fisubs
push
mov
imul
ja
mov
scas
jns
gs
out
jnp
aam
int
out
jecxz
pop
push
mov
xchg
dec
mov
add
inc
push
loopne
in
push
sbb
andl
push
cmc
jge
cmp
leave
shlb
movsb
dec
cli
mov
out
inc
push
popf
movsl
pushf
rcr
xchg
and
cmp
xor
jb
or
out
sub
inc
jl
xchg
dec
mov
int
fs
push
adc
sub
insb
movsb
divb
push
mov
inc
fisubs
outsb
fimuls
add
sub
push
push
dec
adc
cld
mov
in
adc
xchg
adc
push
or
imul
scas
out
lea
lret
cltd
iret
xchg
cmp
mov
jne
js
xor
sahf
sub
bound
jns
xor
and
lcall
insl
or
add
clc
scas
cwtl
js
ret
cmpsb
dec
or
rcll
xor
aam
insb
lahf
and
in
fidivs
leave
out
rcll
adc
mov
pop
ficoml
lds
pop
add
sarb
pusha
pop
or
push
adc
fcompl
pop
mov
ss
xchg
leave
call
inc
sti
aad
mov
nop
jo
lods
js
in
add
mov
insb
fsubr
sbb
cwtl
or
ja
jns
in
mov
dec
fdivrs
add
mov
mov
xchg
idiv
add
shl
fisubrs
mov
cmp
jg
loop
std
adc
pusha
mov
xend
or
sub
fildll
inc
push
pushf
xor
pop
mov
in
scas
pop
pop
dec
mul
fstpt
movb
sbb
cmp
popa
jmp
scas
fcomi
xor
sub
sub
mov
sbb
loop
ja
jl
sahf
in
adc
sub
les
mov
nop
orl
mov
inc
fmulp
jnp
out
sbb
jne
cmp
and
rclb
iret
xor
ret
shlb
je
test
fs
repz
js
sub
add
push
sbb
je
xchg
mov
sbb
movsl
add
ss
dec
mov
xchg
jecxz
pop
stos
repnz
add
mov
sbb
xchg
int
push
cli
rclb
ljmp
fdivr
stc
push
sti
inc
in
pop
mov
or
out
mov
es
adc
pop
jae
ret
mov
aas
cs
movsl
sbb
add
lret
sbb
push
and
jp
clc
pop
or
lcall
push
orl
cmp
dec
stos
hlt
daa
push
fnstsw
dec
cltd
pop
cli
jae
test
mov
push
outsl
repnz
jge
xor
adc
cmp
pop
out
stos
fwait
lret
jg
jno
jp
imul
fists
fnstcw
lahf
pop
mull
xorb
in
test
jle
push
daa
das
in
addr16
jl
push
push
test
mov
dec
and
or
mov
sbb
prefetch
dec
mov
inc
mov
ficoml
lea
sbb
inc
mov
outsb
in
sub
jge
popf
push
cmpsl
shrb
and
xchg
repz
dec
daa
repz
dec
gs
xor
lret
or
fs
xchg
loope
gs
rcl
push
mov
cmp
and
add
fs
test
or
aad
ja
sub
scas
fimull
sbb
iret
push
jne
sbb
lods
ret
xor
jno
sub
mov
adc
lods
mov
push
das
inc
in
pusha
loopne
cwtl
cmp
dec
aas
push
mov
aam
inc
inc
fists
daa
movsb
lea
scas
testb
outsb
pop
adc
and
add
sbb
cli
loopne
inc
inc
cmc
push
lock
lods
add
xor
xchg
mov
sbb
xor
pop
fwait
add
xchg
sbb
gs
push
repz
and
jns
popf
mov
fisubs
popf
enter
mov
sbb
int
cmp
ret
sbb
das
inc
xchg
push
jbe
fidivrs
mov
daa
inc
daa
xlat
popf
clc
lret
push
leave
aaa
test
les
mov
daa
fildll
and
add
xchg
pop
mov
jecxz
mov
jecxz
pop
scas
xor
lods
jbe
push
sbb
inc
jge
arpl
outsb
js
js
iret
sub
or
lret
outsb
stos
mov
xlat
push
rcr
movl
arpl
push
into
and
cmpsl
loope
push
mov
cli
outsl
in
nop
push
adc
imul
cmp
jnp
jnp
arpl
adc
lea
sbb
sbb
jne
dec
decb
jge
push
cmpsl
jle
in
sbb
pusha
and
and
mov
shll
sub
inc
mov
cmc
jp
mov
fwait
jecxz
mov
cmpsb
je
jecxz
and
dec
fisttps
sub
cmpsl
pop
icebp
xlat
pop
lock
mov
and
nop
repz
or
pop
lret
xchg
ja
sub
cmp
jnp
into
fistpl
jg
mov
jnp
je
dec
cs
rcrl
jns
lahf
adc
sub
stos
push
cmp
cmc
int
jbe
dec
sub
inc
dec
cwtd
dec
pop
or
push
dec
subb
lret
lahf
and
and
stc
lods
xor
je
xchg
inc
sub
out
jle
lcall
and
pusha
pop
jo
mov
repnz
pop
ret
inc
add
repnz
mov
ljmp
movsl
inc
cmp
push
add
lahf
xor
push
mov
aaa
pop
cmp
cmc
cmp
ret
lret
insl
lds
pop
xlat
xchg
cmp
popf
cmpsb
stos
std
xchg
out
sub
dec
data16
testl
jmp
cmp
push
xchg
push
and
xchg
adc
cmp
lods
movsb
andb
into
inc
lock
add
imul
push
clc
lds
ljmp
jg
mov
mov
xor
jp
xchg
push
adc
cmp
mov
movsb
adc
add
pop
or
jle
dec
out
or
js
pushf
add
in
lahf
loopne
clc
repz
jmp
dec
xchg
fcomps
mov
aam
insb
cmp
dec
pop
mov
test
xor
or
js
je
cmpsb
pop
out
mov
dec
iret
add
cmp
int
call
xor
push
xor
iret
mov
inc
lods
cmp
xor
inc
pop
cmp
push
push
ret
jae
jle
out
jl
lods
mov
test
ja
outsl
gs
mov
dec
sub
push
ljmp
push
mov
pop
and
stos
sar
push
push
xchg
outsb
xchg
or
idivb
pop
jge
aaa
inc
outsl
fmull
jne
stc
push
test
loopne
cwtl
adc
mov
repnz
mov
mov
push
and
lock
mov
mov
and
mov
adc
and
addr16
or
or
repz
cmpsb
inc
mov
mov
and
adc
or
xor
sub
popa
loopne
inc
insb
xor
popa
lods
popf
int
es
pop
xor
jbe
sub
sub
iret
inc
add
shr
in
and
sbb
outsb
lea
pop
pop
ret
in
scas
imul
inc
lret
stos
scas
or
pop
xor
jo
fnsave
std
loop
movsl
inc
or
mov
outsb
fisubrl
cld
jmp
jmp
data16
mov
fisubs
adc
dec
and
cmpsl
pop
jo
mov
pop
rol
sahf
aad
add
movsb
dec
fwait
sbb
and
decb
mov
aaa
in
mov
into
stos
daa
xchg
ret
mov
jbe
dec
in
lds
insl
mov
lock
out
stos
cli
inc
cmp
or
and
jle
pop
mov
inc
loopne
outsb
sbb
cmp
cmp
mov
xchg
sub
jl
mov
hlt
movsb
arpl
jns
bound
dec
rol
stos
iret
add
fstps
lock
inc
loopne
dec
arpl
lret
popf
push
jnp
outsl
sbb
cmc
aad
lret
repnz
jns
dec
lock
arpl
adc
dec
ds
sbb
sbb
lock
and
ret
mov
ret
aas
push
inc
aas
xor
mov
or
cmp
ss
cwtl
outsb
jo
mov
idivl
jmp
push
lcall
sahf
aas
je
cmp
inc
loope
imull
aas
cmp
jl
mov
push
fisttps
dec
xchg
cmc
shlb
fdivp
push
mov
test
and
xchg
sbb
push
inc
cmp
mov
aas
dec
into
add
mov
in
adc
les
add
pusha
jo
dec
cmp
cmp
jle
cmp
fstl
in
and
call
fwait
cld
fistpl
xchg
inc
mov
xor
icebp
sbb
leave
gs
cmp
mov
aas
inc
xchg
xchg
mov
add
mov
mov
cmc
xchg
call
push
lock
mov
lahf
ss
loopne
lret
movsb
scas
adc
fwait
jbe
js
push
inc
sub
push
fcoms
pop
aaa
pop
jns
in
ror
mov
cmpsb
inc
rorb
sti
dec
xchg
fisubs
pop
lea
and
stos
inc
lcall
inc
pop
inc
les
mov
jp
loope
mov
test
cwtl
xchg
mov
mov
xchg
or
je
mov
addr16
push
rorl
leave
test
sub
out
imul
xchg
pop
lcall
loop
push
dec
cmp
daa
xor
js
dec
lods
sub
js
xor
mov
push
adc
fistpll
push
lods
push
jmp
orl
repz
cmp
loop
addr16
repz
cmp
cmc
or
and
stos
xor
stos
roll
dec
jne
jp
lods
ja
int3
mov
popa
ds
lock
sti
outsb
cmp
aas
iret
lea
daa
cld
cltd
or
stc
jnp
fistpll
lea
cmc
popf
cs
inc
mov
in
aaa
cli
imul
lea
and
mov
cmp
sub
std
addr16
out
sub
data16
imul
sbb
xor
sub
mov
mov
aaa
or
data16
ljmp
xor
lea
mov
push
lret
stos
call
sbb
jp
cmpsb
gs
sahf
push
aaa
lret
push
les
xchg
jg
sahf
pop
mov
or
ljmp
dec
mov
and
or
aad
xchg
sbb
sbb
sarb
scas
cs
ss
mov
lods
subb
flds
sbb
sub
mov
into
cmp
arpl
sarb
popa
fbstp
subb
xchg
out
jbe
and
cmp
push
ret
xchg
xchg
add
imul
fisubrs
mov
mov
fwait
jae
movsl
and
mov
jae
jg
setae
aas
lock
mov
push
fsubr
and
dec
jno
mov
out
pushf
insl
ljmp
test
test
icebp
pop
adc
jle
roll
stc
inc
mov
dec
stos
fcmovnbe
sub
jle
test
xchg
dec
sarl
outsl
jne
fmuls
cmp
icebp
dec
stos
dec
fwait
enter
jle
in
mov
shlb
les
pop
cmpsb
or
jle
cmpsb
add
push
pop
outsl
push
or
jno
xor
popa
test
sti
jae
lahf
inc
mov
xchg
sahf
lret
test
inc
pop
mov
popf
test
mov
fs
call
sub
cmpsb
icebp
lahf
imul
movsb
xchg
jecxz
jg
outsl
cmpl
jp
or
insb
out
mov
jbe
and
jge
in
loope
cmp
cmpsb
clc
outsb
sub
fs
xor
mov
fwait
insl
lret
addr16
push
pop
scas
or
jno
add
aad
sbb
scas
cmp
sbb
fdivrs
js
jne
out
sbb
pop
das
mov
pop
dec
mov
pop
push
shrb
mov
sub
aam
cltd
jbe
jmp
std
ds
sub
cltd
push
outsb
scas
inc
pushf
adc
jmp
jns
xchg
aaa
iret
mov
mov
add
mov
jmp
pop
mov
adc
mov
xchg
ret
dec
jae
lea
mov
dec
xor
ret
xchg
call
sub
push
mov
lea
jns
xchg
xor
inc
hlt
out
int3
mov
mov
icebp
scas
std
scas
shll
and
xchg
fsubrs
mov
cmp
mov
inc
xlat
pop
push
sbb
bound
dec
push
xchg
dec
xlat
jns
mov
xchg
je
push
fstpt
out
loopne
lock
ljmp
sbbb
cld
lods
xor
mov
jnp
add
cmp
cs
mov
jge
aaa
aad
stos
out
pop
jne
mov
loop
jo
add
push
add
xor
mov
out
ficoml
pop
dec
leave
gs
scas
je
pop
aam
push
je
xchg
cwtl
or
sbb
mov
out
mov
lea
jmp
sub
inc
sbb
xchg
outsl
out
inc
mov
mov
int
push
inc
int
dec
aas
adc
bound
fstp
test
lcall
or
pop
out
and
loopne
lds
mov
or
adc
hlt
push
adc
mov
mov
lea
dec
call
insl
push
push
cli
loope
cmp
cld
imul
pop
pop
and
lods
imul
shl
cmpw
ret
pop
mov
push
dec
or
dec
cmp
jo
ss
jb
imul
jns
mov
sub
insb
pop
pop
movb
cmc
aad
fwait
xchg
ret
stc
adc
cld
icebp
adc
adc
imul
xchg
cmp
adc
loopne
es
loope
adc
add
xchg
repz
xchg
sarl
sti
add
push
mov
xor
cmp
out
je
movsl
mov
adc
xorb
mov
in
jbe
xchg
adc
pop
nop
pop
pop
adc
push
fisubl
inc
int
inc
adcl
adc
out
xor
cmpsb
sbb
mov
push
sub
or
or
sbb
jne
add
insl
in
into
and
sub
lret
dec
xor
js
fstl
loopne
loopne
and
or
mov
xchg
adc
xor
sbb
mov
cli
xchg
mov
jl
hlt
inc
loopne
ljmp
push
aam
movsb
fisubrl
lahf
es
es
mov
subl
xor
aas
cmpl
dec
sbb
mov
ds
icebp
or
jmp
adc
rorb
movsl
add
out
dec
mov
fstl
int3
and
xor
int
dec
xchg
push
mov
jo
push
push
aas
lea
mov
push
pop
call
lret
in
jno
scas
or
mov
xchg
cmp
aaa
inc
in
stc
sti
scas
in
hlt
mov
dec
jle
cmpsb
mov
in
and
out
sbbl
mov
or
hlt
jmp
lods
stos
sub
ret
in
fists
sbb
mov
and
xchg
les
js
xor
mov
cwtl
gs
push
test
push
les
and
stos
gs
dec
xchg
fcmovne
lret
lcall
inc
pop
mov
loopne
orl
pop
xchg
into
mov
js
lock
mov
idivl
fmuls
scas
stos
sti
into
push
lahf
inc
fcmovnu
xor
adc
lahf
fiaddl
sbb
les
fimuls
call
ror
sub
call
jbe
in
sbb
mov
scas
jl
mov
sbb
dec
cmp
movsb
inc
test
inc
sub
mov
sub
dec
hlt
cmc
mov
fwait
pop
aam
ret
dec
xlat
push
jl
push
pushf
idivb
imul
xchg
test
jp
int3
out
dec
sbb
outsb
xor
adc
stos
out
mov
add
inc
in
adc
dec
aas
outsl
cmpl
and
shll
mov
les
mov
mov
jne
xor
loopne
loop
sub
lods
out
add
or
cmp
in
push
jno
and
mov
shlb
icebp
lret
call
loop
cmp
flds
lds
cmp
loope
sub
inc
and
sbb
cli
jg
or
outsb
mov
pop
pop
xlat
imul
pop
jo
bound
sbb
out
les
push
in
jmp
xchg
jno
push
cmp
cmp
push
loopne
fcoml
dec
xor
mov
das
lcall
in
lret
pop
inc
in
pop
mov
dec
jnp
mov
stc
add
addr16
fisubrl
iret
pop
out
push
mov
scas
in
jno
or
rcrb
cmp
mov
mov
dec
inc
leave
sub
xchg
repnz
fwait
out
push
inc
movsb
or
mov
or
fadd
lahf
scas
pop
ret
push
jne
mov
xchg
mov
push
testl
or
cli
movb
mov
lods
pop
pop
cmp
insb
fisttpl
testb
rolb
jg
pop
out
fs
cwtl
loop
popa
movsl
push
lcall
jmp
in
push
push
je
or
decb
or
outsl
ret
cmp
ss
xchg
movsl
shll
mov
adcb
fstpl
lcall
fldenv
loope
adc
jb
push
fwait
gs
pop
pop
fwait
aad
sub
and
imul
sub
mov
clc
fnstcw
dec
out
test
adc
inc
xchg
jmp
in
fs
cmp
xlat
mov
fwait
sub
cmpsl
in
imul
sbb
fwait
clc
pushf
orb
sub
fistpl
mov
push
mov
outsl
ror
inc
xor
outsl
shlb
mov
jl
int3
dec
and
mov
xchg
cmpsl
imul
addr16
lds
out
out
mov
mov
pop
ljmp
mov
shrl
int
pop
sbb
stos
xor
cmp
sub
and
dec
das
xor
mov
jl
rclb
int3
nop
or
bound
ja
pop
xor
test
pop
je
add
popa
sub
add
and
mov
into
jbe
jns
ljmp
into
in
dec
push
xor
xor
lret
mov
inc
std
mull
test
pop
mov
mov
xor
jp
imul
xor
adc
aaa
add
popl
xchg
cltd
xchg
sub
sti
repnz
jns
pop
sbb
loop
popf
cmpsb
es
xchg
adc
stc
roll
movsw
mov
outsb
enter
andl
call
cwtl
or
loop
rorl
in
add
jge
cltd
mov
xchg
xchg
push
jno
call
pop
dec
inc
push
and
or
or
mov
push
mov
les
mov
sub
lcall
cld
std
outsb
add
lret
xchg
xchg
and
sbb
je
test
pop
jmp
xchg
jl
push
pop
in
imul
ljmp
xchg
jns
sbb
movsl
cmpsl
mov
and
sbb
lods
sub
xor
rep
dec
lods
jmp
dec
out
jle
cli
scas
xchg
add
gs
fwait
pop
xchg
fsubl
mov
xor
fiadds
dec
mov
and
inc
wbinvd
loope
push
into
mov
cmpsb
cli
sbb
push
add
testb
addb
mov
add
mov
mov
cmp
and
jns
and
out
leave
xchg
sbbb
sbb
iret
push
sbb
dec
jno
and
popa
push
cmpsb
or
pop
out
lds
pop
inc
subl
cmp
mov
jp
adc
xchg
shrb
shll
test
sub
inc
dec
push
xchg
mov
inc
push
ret
mov
movsl
andl
movsb
ror
cmpsb
out
dec
inc
add
inc
sbbl
push
push
mov
push
fisubrs
push
inc
pop
in
sub
mov
adc
mov
mov
mov
add
notb
rclb
lods
ds
aaa
notb
dec
adc
and
loop
popa
addb
loop
out
je
call
fimuls
negb
mov
daa
imul
mov
clc
test
adc
jno
push
loopne
mov
mov
int
inc
mov
add
inc
or
in
mov
inc
pusha
adc
hlt
incl
inc
mov
push
sbb
dec
subl
push
loop
jle
jecxz
arpl
dec
icebp
rcrb
pusha
popf
lds
jge
sub
pop
mov
xor
sub
pusha
xor
lock
mov
push
inc
hlt
pop
aas
mov
cmc
xchg
or
xor
cwtl
xchg
xlat
mov
lret
xchg
flds
cmpsb
mov
mov
xlat
or
jno
xor
sbb
stos
and
aad
push
inc
sbbb
dec
inc
test
xor
stos
es
xor
inc
mov
jbe
test
pop
sarb
je
jmp
sub
lods
push
es
aad
jmp
push
int
cmp
popa
xlat
lds
add
cld
push
inc
cmp
jl
pop
or
pop
sub
mov
inc
test
push
scas
sbb
lcall
js
add
lret
cmp
ror
icebp
nop
test
mov
xor
push
push
out
shrl
lahf
orb
mov
jb
and
ss
jb
add
lods
mov
lods
xlat
sub
mov
xchg
and
popf
ss
stos
sub
push
push
insl
in
push
pop
sbb
outsl
stos
out
push
lods
scas
das
xlat
adc
pop
inc
xor
dec
inc
popf
imul
rolb
pop
push
mov
jns
inc
cmp
movsb
cltd
repnz
jg
push
in
popf
je
sbb
stc
in
aad
out
arpl
xchg
das
xchg
movsb
mov
xchg
stos
daa
inc
jmp
sti
jp
and
std
mov
stc
mov
imul
xor
sub
stc
pavgb
outsb
xor
jae
inc
mov
xchg
inc
and
pop
idiv
cmp
mov
in
fidivs
or
in
les
push
jle
outsl
movsl
inc
pop
cli
mov
leave
sbb
mov
sub
mov
push
shll
mov
xchg
test
add
add
int3
lahf
in
js
pop
cmp
xchg
lock
ds
cmp
imul
mov
shrl
jno
mov
jae
mov
in
jmp
xchg
mov
cli
jmp
iret
imul
loope
sbb
arpl
push
mov
cs
std
insl
mov
sti
iret
test
push
jl
xlat
sub
sbb
xor
ret
and
andl
cmc
ret
or
fldcw
dec
out
jb
xor
idivl
sub
lret
ds
cmpsl
jle
and
fsubrl
sbb
sbb
and
mov
xlat
enter
fistpl
mov
loopne
push
sub
xor
push
cmp
pop
sbb
in
ret
jp
in
dec
repnz
adc
mov
lods
gs
xor
pushf
add
in
and
pop
arpl
fimuls
add
rcl
xchg
jecxz
sub
into
ror
mov
inc
and
or
iret
mov
dec
test
rcrl
lret
in
lock
mov
jns
xor
cld
test
dec
fmul
add
out
stos
xor
and
aam
push
jle
cmpsb
roll
scas
adc
insb
mov
mov
movl
add
pop
mov
sti
jae
sahf
fdivl
insl
cwtl
push
subl
das
insb
xchg
test
cli
jne
insb
mov
jge
add
sub
aam
shl
adc
int
pop
mov
xchg
and
in
jl
inc
xchg
mov
jbe
pop
aam
insl
mov
jbe
push
mov
rol
lret
push
popa
pop
fsubrs
fidivrl
sbb
nop
push
cmp
inc
in
fs
scas
loop
shll
push
sbb
je
pop
out
in
jg
pusha
mov
bsr
out
cmc
aam
lods
cwtl
lds
lret
lret
dec
popf
jp
ret
sti
psubb
pop
sub
clc
test
test
push
mov
mov
gs
lods
push
mov
push
xor
out
popa
push
xor
fimull
ljmp
aas
push
xchg
jmp
pop
idiv
cmp
mov
addr16
pop
ds
in
mov
mov
sbb
fwait
int3
mov
cmp
insb
in
test
xchg
pop
adc
mov
inc
sbb
mov
xchg
push
sbb
repz
dec
fs
adc
jmp
ffree
xchg
mov
icebp
jne
jo
jp
adc
lretw
pop
mov
test
pop
dec
imul
sub
cmc
stos
add
dec
test
pusha
jns
fstpt
mov
cmc
sbb
std
mov
cwtl
push
dec
mov
lods
mov
or
cmp
ds
push
mov
pop
jae
jbe
push
sti
pusha
test
cmp
mov
xor
mov
loope
xchg
orl
xor
mov
fisubrl
mov
add
add
outsl
xchg
imul
ss
cs
sbb
in
pop
inc
loop
mov
insl
mov
dec
or
jg
sti
mov
out
in
loop
xor
push
mov
sbb
sbb
cmc
cmp
mov
incb
push
inc
cmp
das
mov
push
dec
movsb
push
push
xor
push
fimuls
imul
stc
loopne
mov
jg
int
arpl
js
and
push
mull
mov
insb
sbb
call
sbb
pop
jp
pop
adc
in
fsub
sub
pop
out
xchg
ret
inc
push
mov
mov
add
xchg
scas
pop
adc
cwtl
lcall
rol
mov
adc
cli
data16
sbb
stos
pop
mov
and
mov
mov
xor
sti
flds
jne
arpl
dec
pop
lods
push
pop
pop
stc
push
mov
or
out
pop
ret
test
fdivrl
mov
stos
jns
rsqrtps
fldt
loop
and
orb
push
mulb
sbb
inc
and
and
loopne
xlat
outsb
inc
aam
jmp
jno
inc
or
in
fldl
test
gs
xchg
out
mov
in
inc
jns
xor
nop
clc
add
lods
sbb
and
std
outsb
xlat
jbe
movsl
dec
aaa
xor
bound
idivl
sar
pop
jmp
xchg
sub
scas
shrb
mov
lds
add
cmc
or
adc
xchg
les
ds
sbb
cwtl
pop
stos
fdivl
xor
es
repz
movsl
dec
adc
sub
leave
or
pushl
arpl
cmp
fdivrl
push
sbb
jnp
mov
mov
pop
mov
rcrb
stos
mov
data16
pop
rorl
jnp
mov
xchg
fisttps
mov
xchg
push
cmp
lea
jmp
push
in
push
and
or
ja
cmp
jnp
mov
es
fnstsw
call
fsts
jne
rorb
mov
dec
adc
jnp
sub
adc
int
loope
inc
lods
adc
scas
and
pop
cmp
jbe
rcrl
repz
je
sub
int3
pop
sti
jne
cmp
mov
mov
addr16
or
push
mov
jmp
test
xchg
cld
push
jl
mov
arpl
hlt
add
dec
xchg
cmp
out
xchg
icebp
mov
sti
cmpb
cmp
adc
je
sub
pop
push
out
adc
push
sbb
inc
inc
mov
adc
dec
insb
or
mov
fs
stos
movb
push
in
rcr
mov
rorl
fdivr
popf
sub
sub
or
fdivl
push
xor
nop
sbbb
mov
cmpsl
sbb
xor
adc
lds
icebp
sub
push
out
push
icebp
leave
or
mov
pop
mov
sub
sub
stc
xchg
cmp
adc
jl
rcrl
cmp
push
das
push
adc
in
and
imul
pop
add
call
pop
or
aam
jno
mov
iret
punpcklwd
cmp
shlb
mov
insl
loopne
outsl
ret
inc
call
fbld
xor
dec
clc
gs
xor
ret
xchg
stos
in
shll
lods
in
push
stos
lock
sahf
inc
xchg
lods
clc
fstl
cld
mov
movsl
mov
jnp
es
jp
pop
out
push
jge
outsb
mov
int3
or
lret
and
hlt
fildll
lock
dec
xor
inc
rcll
test
rcll
leave
aad
dec
pop
push
sbb
add
cmp
imul
mov
dec
jl
rcr
mov
aam
lahf
xlat
push
mov
pushf
int3
insb
fsubrs
js
dec
jp
in
stos
cs
ja,pt
xor
ret
jmp
cmpsb
xchg
clc
xor
shrl
stos
into
xor
arpl
sub
inc
into
mov
pop
popf
sub
xor
adc
addr16
and
cmp
fbld
xor
cmp
mov
fcomi
sub
mov
xor
jo
cmp
repz
shl
and
cld
dec
sub
jno
mov
das
ljmp
test
mov
push
push
in
jecxz
andb
cmp
pop
mov
es
adc
stc
pushf
lods
subb
sub
and
loopne
jbe
pop
repz
pop
les
clc
and
adc
popf
lahf
fdivl
iret
xlat
into
adc
imul
jne
sbb
push
loope
pop
adc
adc
push
sub
test
dec
out
push
mov
adc
adc
insb
mov
mov
aas
lea
fiaddl
movsb
inc
push
dec
xor
enter
int3
sbb
and
ret
jg
xor
movsb
push
push
divl
movsb
and
mov
cmp
pop
inc
das
sbb
lret
shlb
mov
mov
out
outsb
add
sahf
aad
outsb
enter
jae
mov
inc
xchg
mov
xchg
dec
mov
das
xchg
sbb
mov
mov
xor
sbb
mov
mov
adc
shrl
xor
xchg
mov
neg
xchg
mov
ret
mov
add
fidivrl
sbb
and
adc
add
insb
movb
mov
imul
cmp
pop
cmp
xchg
mov
sarl
data16
out
ja
out
cmp
push
movsl
lods
pop
xchg
sub
loopne
pop
fcomps
and
mov
in
push
mov
add
aam
add
vpackuswb
cmc
lahf
frstor
test
mov
mov
cmp
roll
xor
xor
mov
shlb
xor
sbb
and
mov
add
lahf
push
out
in
in
lods
adc
movl
mov
and
fadds
mov
divb
insb
dec
push
mov
cmp
adc
outsb
dec
jbe
sub
pop
daa
out
cmpsl
aad
orl
js
movsl
sbb
push
add
dec
imul
cmpsl
leave
jbe
and
adc
bound
push
or
xor
loope
mov
pop
cld
lahf
xchg
add
loope
xchg
jp
or
dec
push
push
test
dec
ss
sbb
mov
pop
insl
pop
mov
dec
mov
mov
pop
xchg
stos
add
push
mov
cli
add
sub
dec
mov
xchg
nop
push
iret
sti
pop
cmc
movsb
inc
xchg
fidivs
jns
in
sbb
pop
in
rcrb
pop
adc
in
sbb
fstl
sarl
pop
inc
rcl
fiaddl
or
and
pop
dec
loopne
mov
mov
adc
out
sub
xchg
test
xchg
mov
mov
clc
lahf
mov
hlt
push
jnp
push
dec
cli
popf
xchg
mov
cmp
xor
pop
push
imull
jns
stos
std
dec
mov
adc
xor
je
ret
les
lods
das
dec
cld
fidivl
and
jne
cmp
out
and
sub
int3
mov
arpl
adc
mov
hlt
sub
mov
addr16
icebp
incl
mov
insb
mov
clc
fwait
jmp
out
mov
stos
in
fimuls
lds
popf
fsubs
aaa
sahf
jl
xchg
sub
mov
pop
xchg
fstpt
push
lret
jb
mov
xor
lds
aas
or
movsb
popf
lret
rolb
push
cmp
mov
mov
pop
shl
insb
pop
or
data16
call
lahf
fnsave
mov
jbe
leave
dec
xchg
sub
mov
pop
test
test
mov
add
cmpsl
enter
stos
xchg
aaa
je
into
ljmp
ss
jne
jae
cmp
lods
je
xchg
mov
int3
popa
test
xchg
mov
loop
int3
iret
mov
add
dec
push
fdivs
lret
fbld
pop
enter
aad
aaa
adc
cmp
adc
lods
cs
lods
stc
jmp
xchg
cmpsb
ret
rcl
inc
jp
xchg
push
roll
stc
mov
and
repz
xchg
mov
xor
xchg
inc
sbb
ja
mov
sub
cltd
add
hlt
subb
xor
shrl
adc
jb
imul
inc
rol
or
stos
cmpsl
pop
and
push
mov
cmc
test
rcr
int
aad
push
lock
mov
jns
push
push
pop
mov
pop
cmp
push
cs
adcb
arpl
test
dec
jecxz
sub
rcl
and
mov
fildl
icebp
lea
fadd
pop
stc
pop
add
leave
jo
stos
or
cmc
cmp
addb
inc
shlb
mov
cmp
sub
movsl
cmp
mov
adc
insb
inc
test
icebp
out
jne
mov
std
mov
movsl
bound
pusha
inc
push
addr16
jg
cltd
xor
popf
xchg
pop
sbbb
std
sbbb
sbb
loopne
sbb
jle
bound
lcall
jno
inc
insl
insb
popf
push
pop
dec
push
jno
cmp
sbb
push
push
mov
xor
aas
es
and
cmp
imul
push
lods
add
sub
sbb
pop
mov
lock
test
fstpl
adc
push
mov
cmp
sbb
jae
repnz
or
and
mov
mov
push
ret
adc
jp
lret
sbb
add
sbb
stos
push
sarl
andb
inc
jmp
mov
sbb
or
pop
enter
pop
ss
lcall
jmp
jp
inc
and
mov
out
xchg
pop
or
cwtl
or
out
mov
mov
xchg
cmp
mov
xor
lock
lcall
outsl
loop
dec
dec
jp
pop
cltd
lea
mov
xlat
xor
mov
xor
and
push
iret
in
sarl
mov
cmp
sbb
movsb
push
xchg
fwait
in
pop
mov
jmp
cmp
jmp
push
lret
pushf
in
and
loop
enter
cmp
clc
ja
in
xchg
sbb
mov
pop
xchg
pop
dec
sub
jo
mov
ds
adc
push
xchg
push
adc
lods
int3
adc
dec
sub
std
mov
mov
inc
nop
xchg
push
je
sbb
mov
inc
jb
or
jp
fsubrs
and
adc
fs
cmp
sahf
lea
dec
into
or
notl
aad
out
lock
push
leave
mov
rcrl
fwait
pop
xchg
ljmp
clc
pop
jno
fstpt
sub
scas
into
call
cmc
sbb
xor
into
nop
pusha
push
movb
jmp
and
outsl
xlat
fwait
and
fisttps
shll
or
mov
enter
sarb
hlt
adc
xor
outsb
fsubrs
jp,pt
push
ret
out
jecxz
push
dec
inc
sub
out
and
popf
push
or
mov
xchg
dec
data16
sbb
std
lcall
mov
movsb
pop
sub
add
lds
mov
inc
dec
inc
add
pop
xchg
and
sbb
xor
daa
scas
stos
dec
mov
jecxz
xor
jmp
int3
xor
cmpsb
dec
outsb
cmp
iret
sarl
push
sub
out
mov
les
outsb
push
mov
push
cmc
mov
in
mov
in
mov
xchg
cltd
sbb
ficoms
dec
dec
cld
test
clc
int
fwait
rolb
idivl
jmp
idivb
clc
cld
sub
mov
hlt
mov
mov
inc
sbb
mov
mov
xchg
das
or
adc
jmp
inc
daa
mov
jb
hlt
loop
mov
mov
pop
xchg
and
subb
adc
andl
rclb
ret
fucom
fcmovbe
out
shll
xchg
or
dec
or
xor
inc
push
mov
inc
mov
mov
push
xchg
insl
mov
loopne
inc
pop
mov
mov
imul
popf
stos
dec
jbe
pop
mov
cmpsl
in
cmpsb
js
push
imul
in
das
xchg
pop
ljmp
add
daa
cmc
incl
lret
ja
and
int3
inc
in
or
xor
dec
popf
or
jecxz
jae
incl
push
in
test
movsb
inc
test
ret
add
and
cmp
dec
jg
je
fidivl
jo
shll
mov
pushf
pop
pop
sbb
dec
or
jb
push
pop
lcall
sarb
push
xlat
pop
insl
repnz
aas
xchg
cmp
add
lds
loop
inc
jmp
leave
ljmp
mov
add
sub
inc
cmp
sahf
lds
or
pop
into
orb
pop
iret
es
push
push
andl
pop
test
pop
fcmovnbe
jmp
mov
aad
jl
push
add
cwtl
cmp
in
adc
andl
jne
aas
add
in
repnz
dec
mov
sbb
iret
fstpl
neg
imul
jp
mov
test
enter
div
stc
test
stos
adc
sbb
sub
xor
std
insb
or
pusha
or
mov
adc
add
pop
int3
cmp
or
push
les
sub
push
mov
aas
out
inc
jne
into
lcall
insl
xchg
lahf
fisubrl
mov
iret
cmp
movsb
mov
shl
dec
adc
xor
jns
mov
jle
mov
mov
insb
das
rclb
pop
xor
xor
xchg
lods
xchg
and
loop
xor
mov
fiaddl
adc
mov
jae
addr16
syscall
mov
iret
xchg
dec
add
push
jp
lea
dec
or
stos
mov
popf
pop
loope
push
in
loope
pop
movsl
repnz
mov
pushl
aas
mov
mov
lods
adc
pusha
std
lcall
mull
aad
call
jl
into
repnz
out
sbb
mov
mov
push
js
cmp
sbb
inc
mov
int3
daa
or
sub
inc
aaa
and
xor
cmc
mov
test
rcrb
clc
mov
rcrb
mov
loope
push
xchg
arpl
scas
jg
add
add
sub
inc
fwait
loopne
sub
push
push
rcll
lret
cltd
dec
aam
daa
pop
aas
addr16
pop
cwtl
aam
fistl
dec
jg
in
dec
cmp
std
pop
dec
and
sti
movsl
out
jbe
addl
pop
sarb
out
jnp
jae
add
clc
pop
jecxz
loop
sti
data16
outsb
mov
test
xchg
leave
mov
push
shl
test
push
pop
jge
xchg
sub
push
outsl
sub
mov
ljmp
sbb
fldcw
insb
loopne
out
das
jecxz
mov
jmp
adc
mov
dec
mov
test
into
xchg
cmp
mov
mov
xchg
sbb
xchg
es
dec
scas
fs
or
call
mov
loope
mov
push
cmpsb
adc
mov
mov
push
xchg
pop
inc
cmpsl
inc
mov
cwtl
inc
ds
aam
enter
xchg
sarl
mov
lods
push
sar
push
xchg
shll
mov
scas
pop
jne
ret
out
stc
inc
das
add
rcr
in
test
lds
xchg
add
scas
sub
and
and
insb
cmp
ja
inc
fimuls
sub
sbb
dec
lcall
push
cmp
mov
insl
mov
cmpl
jmp
cmc
pop
jae
add
inc
leave
cltd
pop
cli
sbb
mov
movsl
das
daa
jno
lock
mov
mov
test
cmpsb
mov
push
mov
movsl
ja
push
dec
ret
mov
mov
pop
jne
outsb
je
ljmp
jns
testb
and
inc
add
jo
out
popa
inc
out
popf
pop
or
repz
mov
mov
lret
dec
sbb
sub
add
aaa
or
push
xor
test
pop
mov
or
adc
test
inc
adc
or
mov
hlt
lods
mov
loope
in
iret
and
jmp
lret
jmp
mov
fnstsw
jbe
dec
loope
inc
ljmp
add
cmp
xlat
cmp
sub
psrad
push
lods
mov
fdivrl
lock
jg
dec
pusha
pop
lea
fwait
dec
xorb
in
and
fsin
rclb
cmp
and
sbb
roll
mov
imul
imul
push
xchg
outsl
arpl
int
mov
or
mov
stos
mov
cld
push
cmc
push
sub
adcb
dec
pop
lods
ss
xchg
sahf
sub
adc
imul
test
jnp
sbb
or
popf
je
les
mov
aam
sbb
mov
out
mov
rorl
aaa
scas
icebp
aas
cs
idivl
jp
hlt
mov
shll
cmp
mov
dec
sub
push
mov
dec
sar
xchg
pusha
pop
rcrb
xor
les
xchg
orps
fistpl
sbb
inc
pop
add
mov
scas
sbb
jg
pop
outsb
out
mov
push
xor
or
push
cmc
lds
push
add
mov
stos
mov
dec
or
lret
aas
cmp
cmc
xchg
push
dec
loopne
outsb
ret
or
inc
jb
std
sarl
loope
push
daa
fwait
dec
fidivrl
dec
je
dec
imul
jle
add
xlat
inc
pop
sub
in
fcoms
sub
lock
mov
xlat
inc
sub
les
adc
into
jmp
adc
adc
out
inc
scas
xchg
hlt
dec
loop
lcall
xor
pushf
xchg
add
xlat
cmpsb
xor
cmp
shrb
push
jb
dec
out
add
outsb
inc
add
inc
fisttpll
jmp
xchg
stc
in
pop
push
and
mov
sbb
inc
inc
pop
and
test
dec
aaa
mov
dec
jne
incb
cli
cmp
lret
rcl
std
dec
pop
adc
test
xchg
sbb
outsb
adc
aad
test
nop
lret
aam
ljmp
outsl
gs
mov
repnz
test
jmp
cs
mov
mov
mov
push
jg
mov
popf
mov
push
clc
mov
or
shrb
mov
ss
mov
std
lret
roll
mov
in
add
pop
in
out
icebp
fstpt
mov
mov
push
xchg
and
pop
popf
clc
fwait
and
sahf
inc
pop
jns
enter
dec
into
sub
jg
lds
dec
jne
and
push
out
cmp
loopne
lock
or
daa
ss
lods
popf
cmpsb
clc
js
mov
or
cmp
push
es
and
inc
jp
or
fimuls
mov
roll
jl
aad
cmp
cmp
add
cld
dec
mov
psubw
in
sbb
cmp
mov
lds
sbb
push
jns
sti
aas
xchg
sbbb
lret
rorb
outsb
xchg
enter
push
push
cmpsl
rcll
adc
mov
pop
cwtd
add
arpl
mov
pop
es
sbb
mov
in
push
test
push
mov
mov
fcomps
call
cmp
cli
int
jl
push
fstpl
fstpl
pop
cwtl
icebp
leave
ficoms
fdivl
pushf
sub
sahf
or
jmp
pop
loop
std
enter
std
mov
sub
xor
or
xor
lea
daa
cmpsb
jecxz
xchg
sub
sub
ds
jge
jecxz
xchg
sub
pop
aam
ret
jmp
adc
add
pop
loop
lea
lahf
outsb
inc
mov
sbb
push
xor
sarb
sahf
sub
cwtl
add
sbb
ret
mov
shll
pop
pop
mov
xchg
sbb
push
and
movb
pop
repnz
add
cmp
xor
mov
int
lods
stc
stos
jnp
jmp
mov
jno
scas
addr16
aas
mov
push
outsb
sub
test
push
fsubl
lret
xchg
icebp
sbb
loopne
jg
fldt
jb
leave
or
jnp
ljmp
push
xchg
pop
sbb
loope
fdecstp
jne
ljmp
dec
stc
je
sbb
lods
setl
inc
sahf
push
push
pushl
repz
sub
adc
cmp
lcall
pop
faddl
pop
nop
sub
repnz
fidivrl
mov
sub
loopne
push
outsl
mov
sub
js
in
xor
jge
adc
push
clc
clc
ss
stc
cmp
dec
jno
mov
fldenv
push
inc
mov
iret
lahf
push
test
sbb
bound
xchg
ja
pushf
pop
jle
jmp
nop
xchg
sbb
je
cmp
push
cmpsl
pop
mov
fadds
ss
dec
push
add
push
dec
xor
jle
pushf
jmp
xchg
jmp
xchg
xchg
push
sbb
sbb
push
int3
ret
sbb
adc
jl
movsb
cmpsb
xor
popa
xchg
in
mov
rol
mov
scas
sbb
das
insb
and
out
jg
jne
cmp
sbb
je
push
jns
push
cmpsb
test
cld
add
leave
fiadds
stos
bound
enter
loop
adc
ja
jle
movsb
push
cwtl
jnp
pushf
clc
push
xchg
sbb
inc
mov
xchg
pop
les
dec
and
push
or
popa
xchg
sub
out
cmp
fnstenv
sub
imull
scas
push
dec
inc
push
data16
dec
inc
sbb
je
or
mov
bound
adc
mov
xor
jns
adc
nop
xor
xchg
mov
jno
shl
jge
sub
xor
push
jge
scas
xlat
shl
repz
dec
shlb
sbbb
pop
pop
mov
adc
std
cmp
and
clc
fldt
sbb
xorl
outsb
and
or
mov
and
fisubrs
xchg
aam
gs
lcall
test
xor
xor
sbb
jbe
in
popa
sbb
loope
aas
fstpl
test
icebp
std
clc
call
jmp
adc
arpl
lcall
sub
add
mov
in
cltd
and
shll
jl
int
and
mov
push
and
popa
jl
mov
enter
lret
xchg
jmp
and
add
sub
xchg
lea
pop
decl
pusha
fndisi(8087
xchg
cmpsb
jmp
bound
mov
mov
inc
pop
out
fistl
sbb
add
jnp
decb
mov
dec
or
arpl
sub
mov
mov
inc
sbb
out
inc
push
push
sub
lahf
inc
xor
clc
inc
fidivrl
jcxz
pushf
aam
lret
push
clc
jl
pop
insb
hlt
imulb
fsubrs
add
jns
fstl
call
imul
enter
loopne
inc
and
pop
loop
pop
adc
jge
popf
push
loop
mov
into
rolb
push
sti
inc
sub
ffree
or
cmpsl
jmp
push
iret
repz
das
fidivrl
test
xchg
rcrl
loope
mov
or
and
ror
xor
pusha
push
mov
shll
rorb
push
les
movsl
out
pusha
xor
mov
cmp
xchg
or
in
jbe
jmp
in
insb
ja
iret
inc
pop
lock
and
adc
and
lea
push
sahf
sbb
je
pushf
push
add
cld
and
mov
jne
test
cmp
inc
xor
or
xchg
mov
jb
lcall
enter
js
ljmp
stos
sub
mov
leave
mov
or
mov
push
jae
xchg
jae
adc
fiadds
sbb
mov
fsubr
pop
das
mov
gs
xchg
jg
jne
out
scas
call
xchg
es
and
jmp
and
ljmp
adc
out
xchg
pop
shl
in
scas
hlt
sbb
dec
xor
popf
xchg
dec
xorb
jecxz
add
aam
jnp
aam
xchg
in
cmp
aam
add
pusha
nop
negb
hlt
lret
repnz
enter
mov
cmp
pop
sub
icebp
xor
lret
bound
adc
test
movsl
and
cltd
mov
test
sub
mulb
sbb
ss
call
adc
test
add
or
in
ffree
mov
int
xor
lea
jl
push
rcrl
inc
mov
sti
or
pushf
adc
jnp
xchg
int3
inc
hlt
push
mull
mov
push
xchg
cmp
and
sbbb
rcrl
stos
push
call
pop
js
jb
cld
clc
out
test
lret
test
int
dec
mov
cmp
mov
iret
mov
mov
pop
iret
dec
loop
lods
jo
mov
push
fstl
mov
mov
pop
and
xlat
jo
mov
ljmp
xor
push
mov
pop
push
iret
inc
fdivrl
xchg
sub
lock
jl
jnp
and
test
pop
mov
addr16
ds
push
inc
add
push
adc
push
mov
lds
pop
pushf
dec
stos
jns
dec
dec
mov
insb
shrb
shrb
pop
mov
add
cmp
dec
cmc
call
daa
push
outsl
enter
pop
xchg
stos
mov
pop
jae
cmp
or
jmp
push
test
jp
add
mov
inc
popa
jnp
out
cmpsb
push
icebp
pushf
mov
mov
stc
mov
cmp
jp
sbb
sbb
and
jbe
imul
mov
push
sbb
jl
jg
and
into
nop
jo
ljmp
mov
dec
push
mov
cld
cmpsl
or
add
inc
fistl
xchg
cmpsb
arpl
add
cmpsb
push
orb
test
push
and
lock
int
loope
ds
fs
imul
mov
push
imulb
cltd
push
cmp
lret
jo,pt
xchg
mov
push
pop
add
out
loope
push
push
add
mov
cmc
cmpsb
add
jb
mov
xor
pop
add
push
jae
sbb
insb
and
jmp
mov
pushf
add
cmp
add
pop
mov
cwtl
xchg
push
xlat
addr16
adc
out
xor
pop
pop
mov
lods
mov
movsl
sbb
jnp
aad
and
sub
faddl
mov
push
adc
jbe
and
je
je
jno
sub
sysret
sti
repz
sti
iret
mov
jno
push
shlb
das
popa
icebp
and
push
push
insb
test
adc
ljmp
xchg
ss
not
ds
sbb
jo
cld
inc
and
jne
or
jne
adc
sbb
or
jae
sbb
lcall
adc
xchg
into
dec
scas
daa
xchg
scas
and
mov
sbb
repnz
or
fcompl
in
out
dec
and
sbb
inc
jb
icebp
aaa
inc
and
insb
dec
mov
es
inc
cmp
sbb
or
mov
or
cmp
pop
rcr
jp
sub
sub
fldt
imul
mov
mov
sbb
add
sahf
sarl
dec
pop
mov
pop
ret
adc
out
sahf
or
leave
xchg
or
inc
je
xchg
stc
jno
shld
test
outsb
movsb
jl
jl
jl
push
fucomip
cld
ljmp
ror
pop
pop
jne
xor
fisubrs
inc
xchg
or
inc
inc
lcall
jnp
dec
js
and
jb
loopne
movl
iret
fisubs
xor
sub
fldpi
xchg
xor
nop
stos
rcrl
ss
lea
mov
test
sub
int
sbb
xchg
mov
aad
sahf
xlat
fildl
pop
in
push
je
fcmovne
jge
mov
inc
jae
pop
gs
mov
ret
gs
pop
xlat
adc
push
mov
xlat
push
and
insb
pop
cmpl
mov
mov
mov
pop
in
mov
mov
movsbl
push
popf
fimull
xchg
mov
movsl
fnstenv
dec
shll
out
mov
pushf
fs
and
mov
dec
sbb
test
xor
push
push
mov
adc
pop
aad
push
or
or
pop
and
test
jmp
orb
adc
enter
cmp
fistpl
stos
fisttpl
xchg
mov
jmp
in
arpl
test
test
or
xor
add
aas
or
xorl
sti
xchg
xchg
mov
stos
cmp
and
enter
xchg
mov
pop
xor
lds
jb
insl
pop
xchg
mov
jl
jle
mov
jle
pop
sub
sbbb
cmpsl
gs
cmpl
add
roll
movb
lret
bnd
push
sahf
xor
inc
shlb
outsb
out
pop
lods
push
push
outsb
add
add
cld
push
fwait
push
clc
stos
jbe
orl
incl
in
push
hlt
sti
jne
shl
cmp
push
cmpsb
xor
adc
add
fstps
int
pop
daa
xor
push
and
mov
int3
lahf
xchg
pop
inc
mov
repz
adc
cmp
and
xor
xchg
jp
mov
std
les
repz
pop
js
repnz
movsl
pop
mov
fwait
cmp
xor
jge
les
pop
stc
popa
mov
dec
sbb
xchg
fstl
testl
mov
xchg
dec
xlat
loope
adc
jnp
mov
xchg
pop
loopne
xor
xchg
popf
out
test
jmp
and
out
outsl
push
pop
pop
xor
jo
outsb
xor
inc
xor
in
mov
and
mov
lods
pop
testl
lcall
je
xor
and
in
out
icebp
sbb
mov
jg
fidivs
testl
and
test
loopne
fldl
call
sbb
mov
dec
push
mov
xchg
cmp
adc
aam
movsb
daa
jns
out
xor
enter
sub
push
mov
push
jmp
pop
and
jo
out
pusha
ficompl
mov
inc
jecxz
test
xor
fcmovu
sub
xchg
out
ror
into
and
cmp
test
lret
sarb
pusha
jns
in
adc
cltd
dec
icebp
add
xor
push
cmp
scas
loopne
push
aaa
fbstp
mov
out
sbb
ss
std
icebp
cmpsl
test
stos
xchg
xchg
inc
xor
lcall
mov
pop
popa
adc
insb
pop
jmp
pop
mov
sub
in
arpl
jne
mov
hlt
dec
popf
sbb
inc
cs
and
sbb
and
lahf
pop
aaa
xor
aam
or
cltd
cwtl
loop
ds
out
out
jl
xor
mov
lret
repnz
sub
aaa
cmp
loop
dec
aaa
xorl
add
pop
mov
mov
pushf
jge
cli
jno
lret
or
std
adc
xchg
xchg
adc
push
sub
dec
inc
das
jo,pt
aam
fadds
add
inc
xchg
mov
imul
jg
scas
inc
std
mov
in
movsl
mov
dec
jp
add
inc
add
dec
scas
aas
dec
dec
gs
out
js
xchg
lret
inc
fcmovb
int
lock
cmp
movsl
inc
add
cmp
int
pop
inc
dec
mov
cmp
out
adc
and
add
cmp
or
sub
and
mov
mov
mov
pop
jb
sub
mov
ljmp
iret
shll
in
ja
ja
repnz
adc
jnp
sbb
sub
and
push
mov
in
popf
push
pop
scas
cmp
xorl
sbb
insl
repnz
out
int3
addr16
adc
sub
add
adc
std
mov
pop
jns
imul
sub
je
pop
mov
xor
or
cmp
and
leave
in
cmp
xchg
out
clc
ss
cld
xchg
mov
pop
jg
dec
aaa
mov
outsl
jnp
inc
hlt
pushf
add
mov
dec
push
inc
dec
cli
das
add
sbb
stos
ret
xor
inc
push
subb
ret
xor
dec
pusha
sub
das
aam
mov
cmp
call
pop
aaa
jecxz
jle
sub
nop
mov
sar
sti
push
pop
adc
sahf
inc
sbb
sub
std
insb
mov
orl
aad
push
aaa
mov
push
and
xor
push
out
fistpl
mov
lds
repnz
and
mov
jno
and
pop
cmpsb
jae
mov
lahf
fldcw
adc
push
pusha
stc
xor
mov
jns
inc
std
imulb
push
lret
push
test
sub
sbb
sbb
pushf
ss
cmpsl
cwtl
mov
pop
sti
dec
and
cmp
xchg
pop
pusha
loope
and
inc
loope
push
int
mov
mov
sub
jge
orb
dec
and
or
test
xchg
dec
dec
mov
push
mov
xchg
sub
test
xor
pusha
fwait
mov
mov
ljmp
loopne
je
cmpsb
bound
lret
add
int3
sub
fnstenv
push
pop
mov
xchg
pusha
shrb
cwtl
sub
stos
mov
enter
cs
jns
adc
out
inc
aad
in
stos
inc
sahf
mov
cmc
inc
fidivl
test
lods
mov
in
insl
mov
push
in
sahf
push
push
mov
push
pop
mov
call
icebp
and
push
pop
sahf
mov
cmpsb
pusha
sarl
call
sbb
pushf
shrb
xor
ret
push
add
fwait
mov
add
js
fucomp
mov
fistps
aas
dec
punpckhdq
fildll
scas
dec
push
jnp
cld
xor
addl
adc
out
stos
stc
ret
outsl
fwait
mov
inc
pushf
xchg
dec
outsl
pop
and
xor
pop
mov
fldcw
jle
mov
adc
lock
fsubl
inc
cmp
mov
add
in
add
sub
jg
adc
pop
push
stc
mov
jo
xchg
mov
cmpsl
cwtl
daa
sahf
stc
imul
push
jae
into
cmp
ret
or
into
mov
dec
inc
lods
imul
pop
push
mov
inc
inc
and
stc
push
mov
lret
nopl
sub
nop
jne
jnp
ret
xchg
add
scas
jl
pop
sbb
imul
mov
roll
dec
pop
mov
test
sub
shlb
mov
mov
cwtl
jne
and
sub
ficoml
jl
mov
xchg
xchg
in
jl
bound
stc
push
lds
scas
pop
insb
jo
push
daa
cmpsb
loopne
jl
mov
daa
scas
rcll
ja
mov
or
add
and
shrb
pop
sahf
mov
test
cmp
pop
dec
sub
lods
mov
xor
jp
out
loope
in
push
add
leave
xchg
fcos
jp
xchg
pop
or
mov
sbb
xor
bound
push
inc
mov
dec
xchg
push
ja
mov
add
or
mov
je
rep
dec
mov
arpl
aad
cmpsb
test
iret
data16
fxch
adc
daa
lods
or
aas
or
jae
push
icebp
inc
repnz
cs
in
pop
add
cmpsl
negl
loop
push
push
xchg
sbb
xor
aaa
cmpsb
push
mull
jb
or
pop
push
in
xchg
fnstcw
ja
pop
test
inc
pop
fmulp
test
je
xor
int
loop
js
in
push
and
mov
and
pop
inc
mov
lock
lds
push
mov
or
add
ljmp
mov
cli
dec
aam
add
cmp
test
sub
mov
sahf
sub
or
leave
mov
dec
xchg
push
pop
in
lock
pushf
or
dec
aad
cmp
fimull
out
ljmp
inc
mov
test
xchg
pop
push
repnz
lods
sub
xor
sahf
and
and
sti
das
adc
dec
fsubrl
negb
jns
out
cmp
jmp
push
sub
cmp
and
lods
scas
dec
gs
pop
fstp
shll
inc
mov
dec
xchg
scas
mov
adc
iret
les
in
popf
cwtl
xchg
inc
imul
fldt
data16
adc
aad
shlb
cwtl
add
arpl
orl
out
push
sbb
cs
dec
adc
cmp
cmp
inc
sarb
mov
push
cmp
adc
cmp
sub
addb
loope
xchg
xlat
pop
sub
scas
or
mov
fisubrs
cld
sub
in
sti
push
xor
mov
jae
mov
lods
add
movsl
aas
jmp
aas
inc
mov
and
inc
outsb
cmp
xchg
and
popa
push
out
push
lret
push
inc
daa
or
dec
lret
jg
sahf
jno
inc
cs
cli
loopne
and
cmp
pop
stc
rorl
dec
adcl
mov
mov
loope
cmp
cld
inc
test
mov
sbb
and
jbe
fnstsw
mov
ret
jge
mov
fsubl
inc
mov
data16
xchg
fcompl
into
lods
js
xor
cmc
insl
pop
std
rol
mov
or
andl
stc
fwait
hlt
mov
aad
xchg
xor
cmp
pop
gs
ret
clc
enter
xchg
aas
pop
mov
add
add
sbb
adc
push
jmp
pop
add
fdivs
fs
jne
and
mov
or
mov
adc
repnz
insb
fmull
jmp
pop
test
sub
mov
xchg
adc
gs
call
xlat
stc
inc
ljmp
jne
call
push
push
xlat
in
cmp
test
dec
jb
xor
fcoms
jg
aad
mov
push
push
mov
xor
cmp
mov
fsubl
mov
lret
cmp
fsub
loop
xor
pop
leave
cmp
int
repz
xchg
idivl
das
push
adc
cmpsl
into
arpl
aad
xor
mov
jg
lods
pop
push
ret
cs
xchg
outsl
sbb
adc
inc
enter
xor
mov
gs
jmp
and
xchg
repz
xor
push
add
mov
xlat
xchg
inc
popa
orb
xchg
fcomps
jno
mov
negl
jle
fcoml
clc
cmpsb
add
xchg
sub
push
push
xchg
and
popa
fbstp
fisubrs
xor
cmp
adc
lods
xchg
mov
and
push
das
and
jl
mov
jmp
ja
inc
fwait
movsl
roll
inc
sub
xchg
mov
jecxz
xchg
mov
or
xchg
mov
out
adc
jg
mov
lahf
shll
lods
lea
jg
inc
leave
lcall
mov
xchg
das
std
lcall
fwait
inc
add
pop
pop
aam
popf
push
jl
push
sahf
lahf
xchg
divb
sub
in
hlt
mov
ja
sbb
dec
inc
je
add
mov
mov
andb
jmp
andb
and
lahf
mov
dec
cld
jnp
jecxz
dec
lock
inc
mov
mov
xchg
xchg
add
movsl
push
aam
mov
jmp
dec
aaa
stos
shll
xor
dec
push
pop
jb
nop
in
and
lret
xchg
xchg
arpl
test
popa
clc
gs
aad
push
and
mov
imul
ret
rcr
inc
sub
into
inc
loopne
jp
ja
daa
cmp
dec
and
iret
popa
fsubr
cltd
or
push
xor
or
xchg
push
mov
rcll
mov
mov
adc
sti
cmp
pop
push
sbb
stc
repz
inc
hlt
rcll
jae
ljmp
out
sub
add
aas
push
fcomps
lret
fldl
adc
pop
lock
lcall
fimuls
mov
pop
add
test
leave
aaa
mov
push
pop
and
out
js
mov
out
clts
and
mov
xchg
mov
lcall
push
mov
stos
sub
fwait
or
ljmp
popa
lret
cmp
inc
jmp
pop
sub
popa
mov
mov
imul
popa
outsb
das
xor
rcrb
outsb
ja
dec
outsl
rorl
call
xlat
xchg
push
sub
push
out
add
xchg
daa
cmp
xchg
jp
adc
pop
push
insb
test
ret
fsubs
aaa
xchg
push
stos
ds
lea
data16
adc
mov
and
leave
push
add
pop
sbbl
mov
std
cwtl
pop
mov
cmp
test
arpl
inc
or
testl
ret
xor
lret
lret
pop
xchg
mov
mov
ja
in
sub
dec
loope
pop
aaa
scas
adc
push
dec
xlat
int
push
jl
adc
jno
je
jecxz
inc
and
stc
adc
xchg
pop
mov
sub
and
fdivrl
lods
sahf
in
loopne
rol
sbbb
aad
nop
sbbl
leave
adc
xor
push
cmp
sahf
jnp
je
rcl
push
sub
bnd
lcall
bound
lea
sub
lea
gs
std
jns
stos
lahf
cltd
cmp
xor
push
cwtl
xor
movsb
call
fxch
add
mov
ss
dec
and
repz
push
pop
and
movsl
mull
repnz
push
aad
clc
push
dec
mov
cwtl
pop
sbb
addr16
bound
js
fwait
pop
test
dec
bnd
andb
and
mov
in
scas
imul
gs
adc
stos
addb
add
lret
fs
mov
jl
scas
push
mov
mov
dec
shrd
mov
push
mov
test
push
adc
arpl
lea
cmp
xchg
into
mov
inc
mov
pusha
nop
rcr
push
jae
das
loopne
jl
xchg
push
dec
adcb
mov
pop
lcall
shll
mov
fnstenv
dec
je
push
jns
pop
add
repz
outsb
jp
and
aas
clc
inc
dec
lahf
fwait
popa
dec
pop
in
ja
lds
add
cmp
inc
jmp
mov
push
fwait
xor
and
pop
dec
pop
pushl
lcall
xor
xchg
dec
xor
stc
jno
inc
mov
insb
aaa
bound
mov
adc
add
movsl
mov
inc
dec
jbe
jb
sbb
js
jns
dec
es
repnz
out
and
and
pop
pop
imul
cld
fucomi
jl
test
add
loopne
cmp
mov
pop
or
push
outsl
push
push
mov
sbb
push
hlt
sbb
clc
add
xchg
ds
and
or
scas
in
out
stc
pop
loopne
and
lods
shr
mov
and
ret
das
in
repz
cmc
mov
arpl
js
jb
xchg
adc
in
push
repz
repz
pop
sbb
sbb
hlt
test
lock
pop
fidivrl
cltd
pop
idivb
jnp
sti
cmp
stc
in
ret
scas
setge
push
test
xlat
mov
xor
icebp
or
mov
sysret
aam
lock
xor
mov
push
pop
subl
xor
sbb
std
cmc
mov
enter
xor
lahf
shll
lods
stos
icebp
mov
ss
popf
lods
sub
repz
inc
cmp
shlb
bound
and
cmp
mov
mov
adc
das
mov
fisubrl
imull
fidivl
insl
dec
aas
jnp
rclb
test
sbb
imul
cltd
inc
mov
mul
fwait
mov
push
jge
ffreep
sub
js
into
cmp
xchg
repnz
aam
mov
mov
mov
loop
enter
popa
jg
push
test
dec
xorl
pop
mov
jl
pusha
insl
push
in
push
icebp
pop
jo
and
dec
repz
mov
sbb
ror
pop
mov
lcall
xor
out
outsl
insb
push
xchg
int3
inc
cmpsb
cwtl
mov
in
xchg
dec
mov
int3
jl
mov
std
insl
out
popa
subl
push
ljmp
mov
mov
movsb
and
and
rcrl
xor
rcll
or
sub
dec
out
xor
and
pusha
out
mov
flds
lahf
cmp
and
cmp
jle
ret
add
pop
xchg
xchg
push
xor
inc
or
sahf
iret
jmp
sarl
mov
cli
rcl
dec
mov
jnp
in
xchg
int3
add
lock
daa
lcall
and
mull
sbb
popa
or
out
je
aam
cld
daa
mov
xor
and
roll
mov
loope
std
rcll
dec
xchg
jge
int
xchg
pop
mov
ret
cmp
in
push
insb
insl
cmp
imul
das
addb
add
ficomps
fstl
dec
test
jle
sub
xor
dec
cmc
or
clc
fisttpl
rorl
mov
icebp
lret
push
outsb
xchg
mov
arpl
push
sub
adc
or
mov
js
out
ret
xlat
inc
dec
stos
test
jle
jecxz
mov
jae
cmp
jmp
movsb
add
inc
sub
lcall
mov
rcrb
sbb
gs
or
dec
sbb
pop
mov
push
mov
jmp
rcrb
push
loop
sub
jns
shrb
jae
cltd
outsl
scas
movsl
pop
das
xchg
sub
sti
mov
not
jnp
lods
dec
cmp
xchg
or
push
stc
add
jmp
aad
jmp
aad
jnp
inc
out
or
push
lods
in
cmp
loopne
out
out
cltd
das
xor
stc
insb
mov
sbb
ret
stos
faddl
lret
in
stos
push
inc
jmp
lods
in
mov
popf
xor
mov
add
bound
cld
cmpb
xchg
outsl
dec
out
push
jae
test
into
negb
push
pop
cmc
mov
cmpsb
movsb
or
popf
roll
fidivs
mov
jp
int3
lahf
je
mov
dec
jmp
mov
xchg
xchg
mov
xchg
pop
inc
out
lret
or
iret
or
repnz
and
imul
add
gs
cmp
pushf
sbb
cli
or
sub
add
and
inc
mov
shrb
pop
sarl
ret
xor
das
cli
call
dec
mov
cld
pop
mov
inc
cmc
push
imul
sahf
andb
push
mov
cmpsl
in
loopne
mov
leave
jb
mov
movl
test
lcall
hlt
sub
add
cmp
xor
mov
in
cmpsb
mov
jae
xchg
dec
push
enter
dec
out
jecxz
xchg
xor
test
in
addr16
mov
sbb
pop
adc
je
loope
insb
add
dec
jecxz
imulb
divl
cmp
lock
sub
ljmp
repz
ret
push
sub
push
or
addr16
cmp
push
cmpsl
add
or
sbb
xor
jo
xor
out
movsb
and
out
sbb
mov
push
push
loop
lds
and
dec
cli
iret
sbb
cmp
ficoms
mov
mov
icebp
cltd
mov
lods
mov
xlat
mov
inc
dec
pushf
pop
call
mov
inc
cmp
xchg
clc
shl
sub
mov
cs
mov
inc
incb
mov
push
shl
jp
cmp
fstps
jmp
sti
cmp
aaa
out
dec
dec
mov
adcl
and
stos
pop
and
sbb
sbb
test
xchg
int3
mov
sahf
repz
jle
pusha
into
fbld
adc
nop
ss
mov
sahf
fwait
mov
ljmp
push
pop
and
pop
mov
arpl
mov
mov
add
sub
mov
icebp
or
mov
and
fsubrl
sbb
add
shlb
rorl
jecxz
outsb
ds
jle
fs
push
test
and
imul
test
ljmp
in
cmp
xor
xlat
ret
dec
add
fwait
cmp
adc
dec
jecxz
xchg
test
test
lods
and
mov
lods
pop
movsl
cmp
cwtl
int3
stos
add
or
mov
mov
push
xor
and
xchg
pushf
clc
mov
repz
xor
and
inc
bound
sub
xor
daa
loope
ss
in
scas
mov
fdivl
sub
inc
fwait
add
add
push
adc
mov
test
rcrl
loop
mov
inc
rep
mov
je
out
fildl
cmp
les
shll
vandnps
rolb
jne
clc
sbb
jbe
lret
js
jp
cmp
rcrl
cmp
aaa
xchg
stos
scas
mov
mov
shll
adc
call
lcall
insb
sub
shlb
dec
and
std
repnz
jle
push
stos
push
mov
cmpsb
les
test
xchg
mov
pop
out
adc
flds
test
and
movsb
loopne
fucomi
pop
dec
xor
stc
call
test
frstor
jno
push
test
mov
dec
add
fisubrl
xlat
pop
jmp
pop
dec
cli
test
mov
jmp
sbb
mov
inc
scas
stos
ja
fcomip
and
add
push
lock
add
mov
das
dec
popf
sub
outsl
add
dec
lahf
hlt
lods
cmpsl
inc
ss
ds
cmpsl
mov
ss
jo
and
cmp
cmp
adc
add
sub
call
push
push
fmull
stc
fsubs
sub
imul
dec
xchg
std
imul
xchg
lock
test
mov
and
add
gs
lret
xchg
dec
inc
xchg
or
cmp
es
xchg
outsb
dec
fadd
push
out
addr16
sub
cli
pop
cs
cmp
mov
fdivl
pop
in
cmp
test
sub
rorl
mov
mov
pop
pusha
inc
and
scas
icebp
add
xor
popa
mov
jle
aam
sbb
nop
mov
sbb
jnp
loope
and
popf
icebp
iret
jbe
push
loopne
push
add
outsl
stos
push
les
scas
gs
mov
mov
imul
xchg
rcrb
xor
or
dec
sbb
add
imul
mov
xchg
out
add
out
lock
sbb
sbb
jp
sbb
and
out
insb
push
mov
shll
sub
or
jmp
std
cmpl
into
dec
gs
xor
xchg
insl
xor
dec
jo
fistps
lcall
lahf
push
xor
ss
sbb
clc
aam
movsl
data16
clc
cli
int3
fcoms
jo
andl
mov
lock
adc
ljmp
xchg
add
enter
push
cmpsb
xorl
or
sbb
adc
push
movsb
das
fsubr
jb
add
push
fcmovnbe
sbb
xor
fisubs
sub
mov
xchg
cmp
inc
test
xor
pop
dec
sbb
ja
out
jecxz
mov
enter
sahf
jmp
fisttpll
mov
xlat
fdivr
in
adc
iret
mov
test
mov
mov
xchg
push
ficoms
test
jge
dec
nop
fs
cltd
daa
mov
scas
dec
push
ja
shll
sbb
pop
clc
sub
fdivrl
cmp
mov
push
push
xor
jg
subb
rcl
or
mov
dec
mov
inc
lret
push
frstor
inc
jg
mov
cmp
push
fimull
sub
fs
frstor
cmp
and
or
out
iret
out
adc
xchg
pop
mov
idiv
push
leave
jge
cmp
popf
popf
push
repnz
nop
add
fsubs
inc
js
and
push
mov
lods
cmc
adc
xor
in
jns
sub
sbb
aam
lds
cld
sbb
adc
ret
push
out
jl
stos
icebp
jmp
out
add
mov
call
out
xchg
mov
jle
mov
ljmp
push
xchg
pop
pop
inc
les
dec
jne
jmp
pop
xor
adc
das
fidivrs
cmpsb
mov
ss
sbb
rcll
push
inc
sbb
aad
xor
pop
insb
test
push
mov
cmp
push
sub
pop
xor
cmpsl
shrb
add
jnp
mov
movsb
or
cmc
dec
push
test
cmpsb
add
jg
pushf
add
mov
iret
lods
loope
jmp
icebp
push
xchg
stos
shl
mov
dec
rclb
int3
jl
inc
stos
and
imul
testl
repnz
and
icebp
frstor
xor
cli
aaa
mov
xor
mov
sbb
daa
lods
and
fimull
jge
je
adc
xor
mov
frstor
mov
xor
sbb
inc
xchg
sbb
scas
stos
xchg
repnz
lea
std
lret
and
int
out
loopne
lea
movsb
std
imul
cmp
dec
aas
jns
loop
sbb
jns
xchg
sub
loopne
mov
movsb
stc
loopne
loope
push
lods
lds
mov
mov
pop
dec
lret
push
in
add
sub
std
ret
pusha
lret
cld
lahf
outsb
pop
add
aaa
xchg
into
test
sbb
in
mov
push
xchg
push
sbb
imul
ficoml
out
test
sbb
ror
add
loop
test
clc
mov
sub
push
sbb
aas
pop
jle
popf
lods
popa
push
scas
arpl
cmp
xor
sub
xor
nop
push
inc
test
icebp
cmpsl
data16
pop
mov
or
mov
add
dec
bts
lods
mov
mov
xor
je
test
insb
adc
xchg
add
mov
dec
fwait
add
dec
aam
aaa
in
add
je
ror
out
push
aam
jl
sub
jmp
xor
push
or
mov
jl
push
jo
mov
outsb
stos
xor
adc
sub
in
mov
sbb
adc
xlat
and
add
rcr
aam
pop
ds
push
ret
cld
mov
inc
fcompl
ret
rclw
jmp
dec
outsb
xchg
je
popf
mov
jp
sbb
imul
in
push
dec
and
stos
jo
adc
mov
aam
pushf
push
nop
mov
cmp
pop
pop
clc
fisubs
cmc
mov
shlb
xorl
scas
xorb
outsb
pop
sbb
mov
aad
xor
jb
xchg
adc
fs
mov
enter
or
dec
data16
ja
sarl
ror
mov
push
inc
mov
clc
repz
dec
dec
in
inc
nop
cld
lods
pop
inc
pop
mov
arpl
push
into
mov
jae
mov
std
push
std
repz
cli
mov
add
je
nop
add
in
test
mov
pop
daa
push
ljmp
inc
fidivrl
orl
inc
fstl
jge
jbe
inc
sahf
inc
das
sbb
cmp
adc
mov
and
mov
outsb
pushf
xchg
lods
xchg
shrl
mov
adc
lea
xchg
xlat
or
mov
sahf
pop
and
insb
mov
mov
das
push
adc
mov
and
xor
pop
es
scas
inc
cmpsb
pop
cld
dec
or
test
push
js
outsb
and
inc
jb
xchg
and
push
ds
lret
fsubl
aad
mov
shr
sub
pop
jns
cmp
cmpl
inc
call
sub
inc
push
movsl
test
nop
loope
enter
or
cmp
fdivp
roll
out
scas
cli
inc
lea
aas
fistl
sub
jne
aad
add
fiadds
push
cld
push
jp
pop
into
faddl
test
ss
stc
cmp
cmpsb
inc
cld
adc
dec
jecxz
xlat
js
mov
jbe
push
test
in
or
hlt
pop
aad
loope
or
sub
repz
inc
jbe
icebp
inc
and
cmpsl
ja
mov
jnp
cld
sbb
adc
xor
mov
ret
mov
icebp
out
sbb
xchg
cmp
sbb
icebp
sub
std
cmp
loope
enter
out
repnz
int
mov
mov
mov
adc
bound
jle
adc
and
inc
xchg
push
xor
cli
fstps
or
mov
int
icebp
mov
mov
out
out
or
or
and
mov
fisubrs
adc
out
es
pop
rcrl
dec
aas
sbb
xorb
dec
or
loop
pop
into
shr
movsb
rorl
inc
cmp
rcl
push
pop
rcll
fisubs
aaa
inc
mov
lea
sarl
cmc
sbbl
sti
pop
inc
ds
cmp
pop
sub
xor
xchg
push
bound
daa
bound
and
out
mov
push
xchg
out
mov
cmp
jns
or
mov
rolb
adc
and
aam
mov
lods
cs
imul
inc
repz
mov
push
out
fcom
jnp
xor
stos
dec
fldt
loopne
adc
addl
clc
push
mov
cs
dec
test
test
jae
cmp
mov
sarb
sub
pop
lret
jne
pop
and
test
push
jge
push
scas
fwait
outsb
lahf
jno
adc
jg
adc
push
pop
mov
dec
jecxz
cmpsb
sbb
shll
aad
dec
jp
push
mov
test
mov
aad
or
or
orb
dec
loopne
mov
lock
jle
xor
mov
mov
test
mov
arpl
js
inc
xchg
es
mov
pop
mov
and
jae
inc
je
adc
in
xchg
mul
cmpsb
test
addr16
and
push
mov
dec
pop
shll
xchg
inc
daa
test
pop
cmp
and
pop
adc
mov
mov
sbb
iret
sub
daa
leave
dec
popl
int
mov
popa
in
imul
in
shll
push
add
dec
sti
jb
push
push
push
mov
repnz
push
lret
pop
hlt
outsb
loopne
mov
and
leave
mov
and
xor
jb
pop
popf
lods
or
or
movsl
xorl
imull
fiadds
notb
aad
arpl
icebp
insl
and
outsl
ljmp
cli
jge
mov
xor
xchg
pop
sahf
repnz
push
test
adc
lea
adc
sbb
subl
je
test
addr16
sbb
jmp
inc
fs
ja
adcb
xchg
add
push
mov
fldt
mov
pop
test
inc
dec
cld
mov
push
fucomip
loope
sbb
pop
divb
push
hlt
sbb
inc
sub
sbb
icebp
mov
bound
xchg
xchg
sbb
jae
dec
imul
ret
aad
mov
cld
xchg
xor
pop
jge
mov
pop
fucom
sbb
loope
push
fldl
jns
and
sub
mov
inc
mov
inc
dec
cli
xchg
cmc
add
rcrb
jp
xchg
iret
lods
nop
adc
xlat
stos
lods
es
mov
aas
mov
test
lret
cmp
push
adc
insb
std
bnd
out
shrb
adc
xchg
jns
pop
sbb
rcrb
in
xor
pushf
push
dec
lahf
mov
test
xchg
fs
stc
iret
xor
test
sbb
call
scas
mov
jns
in
gs
adc
adc
or
movsb
imul
xor
daa
xor
jp
popf
shl
sbb
xchg
push
scas
cs
fcmovnbe
cmp
stos
push
sbb
sub
xchg
lcall
dec
mov
xchg
add
das
push
mov
add
movsb
fidivl
decb
roll
adc
cmp
out
xchg
fldl
outsb
into
pop
and
into
add
inc
push
xor
out
sahf
and
push
dec
cs
mov
adc
mov
lds
mov
mov
in
xor
adc
into
dec
stc
mov
sbb
mov
shlb
mov
cmp
repnz
pop
jg
sub
lds
popa
xchg
int
sub
xchg
dec
divb
adc
jnp
inc
mov
fldcw
loopne
movsb
inc
add
xrelease
paddusb
repnz
popa
lea
dec
add
jns
aas
arpl
ret
mov
xor
mov
xor
xor
xor
sbb
add
xor
ljmp
sti
inc
aaa
mov
int
or
fnstcw
mov
shrl
mov
out
mov
inc
xor
mov
andl
or
mov
daa
in
lock
push
and
sub
inc
inc
mov
or
fwait
iret
dec
jae
xchg
test
push
loop
add
jmp
inc
jae
out
add
xchg
jl
and
aad
imul
mov
jno
cmc
mov
inc
xchg
pop
xchg
decb
mov
clc
bound
or
inc
adcl
sub
pop
fsubl
cmpsb
pop
pushf
loop
push
rorl
hlt
aam
xchg
xchg
dec
or
mov
testb
cmp
fcompl
insl
popf
fists
dec
in
or
sahf
inc
xchg
mov
ja
cmpb
shlb
mov
cmp
mov
das
add
shrb
jns
fnstcw
dec
addr16
jle
daa
xchg
and
popf
ret
mov
outsb
push
sub
movsl
adc
push
mov
xchg
leave
lods
in
mov
and
int
jnp
scas
ficoml
and
push
xchg
mov
xchg
mov
lahf
push
mov
mov
sub
insl
xchg
xor
ficompl
cwtl
out
jns
or
xlat
push
mov
add
jnp
mov
bound
jno
or
add
cmp
ss
cld
shll
and
andb
adc
jp
rol
es
push
aad
stos
imul
cs
mov
in
negb
mov
es
pop
aaa
setp
jno
mov
sti
or
xor
loopne
loop
mov
fldenv
mov
jbe
xchg
std
in
mov
test
leave
rorl
xchg
sub
inc
ss
mov
pop
popf
jge
scas
cmpsl
mov
and
add
aam
roll
push
or
ret
scas
xor
loope
fldt
pop
adc
mov
add
lds
mov
mov
jecxz
fadds
test
inc
mov
les
inc
testb
ss
out
jecxz
lods
push
enter
cmp
dec
or
mov
int
xchg
scas
lret
inc
pop
sbb
jle
les
push
sub
lods
ja
addr16
xchg
je
and
repz
imul
stos
or
sub
out
mov
sub
std
mov
iret
xor
rorb
xor
mov
iret
negb
das
and
mov
js
and
fmuls
xor
mov
shrb
inc
addr16
sub
add
pop
mov
leave
pop
mov
scas
pop
pop
or
and
jecxz
shlb
push
or
jge
mov
adc
sbb
aad
jmp
sub
repnz
sbb
jo
pop
out
in
inc
shr
push
ret
or
data16
mov
push
pop
mov
or
add
std
ficomps
add
loope
xor
cli
in
inc
rolb
bound
xor
je
adc
jbe
sahf
loopne
cmpsb
xchg
jge
mov
inc
xchg
iret
scas
loopne
jl
mov
mov
clc
movsb
xchg
fcompl
add
dec
int3
pop
sarb
sub
push
mov
mov
push
popa
xor
sbb
pop
adc
dec
add
add
and
xor
xor
sbb
pusha
stos
das
fsubrs
sbb
test
stos
ljmp
or
xchg
sbb
or
mov
leave
out
and
sub
aad
add
and
test
fs
rclb
les
movsb
mov
sbb
movsl
popa
sub
xor
jno
lahf
test
mov
adc
mov
std
loopne
pop
mov
jmp
fmulp
mov
repnz
imul
leave
fimull
into
push
mov
inc
sub
insl
dec
push
movsb
ljmp
sti
cld
mov
mov
lea
aaa
pop
lahf
sbb
jp
inc
int3
jbe
inc
mov
stc
aas
mov
inc
movsb
fdivrl
jnp
xchg
and
pop
arpl
mov
mov
xor
mov
cli
ljmp
pop
mov
add
xor
ljmp
mov
push
insb
pop
jbe
pop
out
nop
in
fwait
subl
add
fsubrs
adc
movsl
mov
out
xor
loopne
call
dec
in
sbb
push
dec
mov
rclb
idivb
stos
mov
and
iret
push
rolb
xchg
cmp
xor
jmp
sarl
imul
dec
stos
mov
nop
mov
jns
mov
adc
xor
fwait
das
jb
xchg
fimull
in
stc
sub
je
int
pushf
orb
mov
test
ret
or
out
sbb
jo
xchg
or
stos
push
cwtl
push
mov
xchg
mov
test
cs
cmp
sti
aad
rcrb
lea
imul
mov
sbbb
jl
pop
rorl
out
mov
scas
push
shl
xchg
test
mov
jge
jmp
xchg
push
sub
sbb
test
clc
lret
mov
in
addl
test
xor
mov
rcrb
insl
mov
cld
iret
and
push
mov
ds
jne
xor
cmp
sbb
aaa
lods
lahf
mov
push
or
lock
dec
aad
sbb
stos
push
movsb
dec
pop
lock
sar
dec
mov
sti
lods
ret
add
mov
push
xor
lods
imulb
fsub
push
push
dec
sbb
sbb
movsb
pusha
sahf
ja
adcb
sub
fwait
add
imul
and
in
nop
mov
out
adc
pop
arpl
roll
test
scas
cmp
int
pop
push
mov
sbb
push
xor
xor
fsubrp
shlb
loope
push
add
mov
push
outsb
cmpsb
adc
leave
vcvttss2si
cmc
andl
mov
aam
int3
push
mulb
sub
imul
inc
add
in
inc
das
fadd
fsubl
and
test
push
cwtl
xchg
adcl
inc
rcrl
cmp
gs
loope
lods
mov
mov
addr16
adc
or
add
mov
xchg
xchg
dec
mov
dec
das
mov
dec
sub
int
jae
je
cwtl
mov
shl
xchg
jge
mov
or
fisubs
jbe
cmp
movsl
adc
push
sub
cwtl
cmp
pushw
pop
pop
shl
adc
test
xor
lret
adc
aad
mov
je
mov
cmpsl
sarl
inc
push
icebp
insl
outsb
or
inc
push
jp
std
shrl
adc
jmp
mov
ret
shl
popf
pop
fadds
aaa
mov
icebp
push
jmp
out
xlat
cmp
pushf
xlat
sub
test
mov
cmpsb
mov
into
push
pop
xchg
repnz
jge
mov
cmp
sbb
xor
mov
adc
xor
loop
pop
aas
rolb
dec
out
cld
cmpsb
sub
clc
mov
or
cmp
iret
loop
out
lret
dec
mov
ret
cmpsb
test
mov
stos
cwtl
dec
lock
popf
pop
es
negl
in
jmp
mov
push
dec
out
push
adc
loope
jecxz
iret
jne
or
and
sub
daa
xchg
jnp
xchg
push
movsb
cwtl
jp
mov
pop
div
xor
mov
shrb
xor
inc
cmp
ffreep
mov
cmc
mov
add
ficompl
test
or
and
mov
fmuls
push
mov
test
adc
cwtl
pop
dec
int
inc
push
dec
mov
dec
cli
retw
jae
pop
cs
scas
ret
mov
imul
and
ja
cmp
das
faddl
addr16
aad
testb
push
pop
pop
or
cmp
inc
fiadds
les
out
mov
mov
add
lahf
rcl
mov
out
push
cmp
cmp
pushf
sub
into
jle
ret
test
sub
bound
add
push
movsl
in
jbe
add
cwtl
je
je
rolb
lods
dec
sarl
std
nop
dec
mov
sbbl
test
rcrb
and
and
js
sub
xchg
aam
std
sbb
ds
pop
mov
mov
xor
loopne
add
xchg
adc
cmp
fwait
insl
cmpsb
pop
cmpsb
mov
pop
xchg
shlb
pop
cmp
mov
inc
push
mov
xor
dec
pop
push
adc
mov
fwait
jmp
jno
xchg
xlat
and
and
jle
inc
add
xchg
mov
xchg
test
les
add
sub
test
add
push
pop
jle
dec
jb
ficoms
xchg
add
sti
test
inc
xchg
xchg
jmp
ret
scas
pop
cmp
scas
mov
gs
xor
xchg
pop
and
mov
les
add
cmp
push
mov
lret
rcr
lcall
test
push
dec
int
repnz
lret
jecxz
out
and
out
cmp
repnz
cmp
pop
aaa
repz
sbb
mov
test
sub
mov
test
mov
fisubs
cld
out
ror
and
gs
jp
pop
leave
or
fsubl
adc
scas
rcrl
mov
arpl
mov
inc
mov
movb
loope
xor
lock
jnp
scas
dec
fmulp
lret
pop
add
xorl
or
or
mov
cvtpi2ps
popa
mov
imul
pop
enter
mov
sub
addl
jne
lahf
cwtl
adc
nop
je
cmp
stos
xor
and
loop
lea
fldcw
mov
fisttpll
in
cmc
push
call
sbb
add
fs
jmp
jb
fldenv
and
push
xchg
push
cmp
push
push
push
jp
movsl
icebp
sbb
inc
rcrb
movsl
adc
fwait
loope
sub
mov
sbb
imul
push
dec
or
dec
xor
nop
mov
mov
pop
scas
je
std
jmp
add
pop
out
int3
mov
outsl
shlb
popf
fs
lock
pop
daa
je
ds
xchg
fwait
out
jbe
hlt
push
sar
mov
sbb
mov
xchg
test
adc
into
pusha
jl
mov
jecxz
cmp
pop
pop
pop
ficoml
and
inc
jo
stc
jns
shlb
mov
mov
mov
dec
mov
ljmp
push
pop
xchg
jne
mov
je
mov
xor
jno
ficoml
dec
daa
insb
jne
ss
and
sub
shll
jbe
xorl
ljmp
inc
inc
add
outsb
test
or
mov
jnp
cs
in
mov
push
pop
ror
mov
jb
hlt
into
stos
mov
ljmp
mov
jp
scas
shlb
fisubs
mov
inc
pusha
and
enter
mov
mov
and
pop
inc
mov
ss
inc
ss
dec
out
mov
push
mov
push
xor
add
xchg
inc
je
jecxz
dec
ja
add
in
push
jno,pt
lods
in
enter
int3
shl
out
dec
popf
add
icebp
add
imul
sbb
jmp
cltd
sub
push
aad
jle
mov
pop
dec
sbb
scas
out
andb
mov
cwtl
out
jno
inc
sbb
daa
pop
test
insl
div
sbb
mov
adc
sbb
inc
stos
and
lret
jp
pusha
mov
andl
cmc
cwtl
pop
or
lods
pop
xor
push
pop
or
gs
adc
fsubrl
fidivs
jp
sbb
sub
mov
test
stos
adc
adc
push
xchg
sbb
aad
or
repnz
out
or
pop
popa
addl
push
push
sub
jo
ret
lods
pop
int
jne
jp
add
rcrl
fsubr
push
cs
jno
pop
in
push
jle
shlb
jge
lds
jne
dec
add
mov
push
sub
je
inc
cmp
push
pop
cmp
mov
addl
cmp
ja
xchg
stos
fcmove
test
xor
dec
cmp
call
xchg
pop
repz
lcall
in
dec
cli
cmp
stc
orb
and
xchg
mov
pop
mov
shl
pop
mov
and
sarl
cmpsb
ss
ret
inc
rorl
xchg
push
leave
xor
out
shlb
cld
sub
lret
aas
xchg
stos
pop
add
repz
aad
adc
xlat
xchg
push
xor
xor
inc
sahf
inc
cmp
inc
pop
jne
aam
fbstp
cs
iret
rclb
adc
cmp
loope
adc
scas
std
out
cltd
idiv
jmpw
hlt
and
call
inc
xchg
push
push
push
leave
hlt
mov
sbb
jg
loope
arpl
inc
out
repnz
lcall
or
and
cmp
clc
enter
mov
insl
mov
xor
test
rolb
js
imul
nop
cwtl
sbb
and
adc
or
sti
jle
in
sti
ret
les
or
cld
dec
imull
insb
sbb
or
and
push
jo
cmp
inc
loope
and
push
out
jmp
and
inc
push
enter
push
dec
add
rcrl
pop
out
push
inc
fcomps
out
xchg
jns
mov
mov
and
push
jae
jo
gs
xchg
mov
inc
je
adc
jne
fs
adc
sub
mov
pop
sub
subb
cwtl
fisubrs
mov
lret
or
lret
push
loopne
pop
inc
inc
loop
int
lods
and
lods
xor
dec
mov
push
cmp
and
push
ds
add
imul
pop
lcall
adc
mov
out
je
push
push
lock
lods
inc
inc
rclb
xor
xchg
sbb
cmpsl
dec
add
shlb
dec
scas
and
loope
ds
jp
loopne
fdiv
rcrb
lods
push
xchg
neg
es
jbe
cmpsb
ss
int
push
mov
lock
arpl
movsb
in
and
or
dec
jo
mov
movsb
daa
test
lds
jns
sbb
test
or
sub
xor
cld
in
sub
or
xchg
mov
wbinvd
push
dec
and
addb
inc
ret
pop
and
sarb
xchg
sarl
out
pop
test
adcb
sbb
cmpsb
ljmp
in
testl
xchg
pop
sbb
lret
cmc
xlat
push
outsb
or
xchg
test
flds
out
cltd
sti
and
lock
rcrw
xor
mov
pop
pop
xor
repnz
enter
xor
pop
call
mov
lds
rcl
mov
dec
dec
jbe
mov
mov
jns
inc
es
scas
fstpl
inc
push
lea
rcll
dec
add
dec
fdivrp
outsb
jge
aaa
jecxz
repz
enter
incb
adc
fistps
jno
adc
decb
gs
adc
pop
ret
pushf
and
xorl
daa
cmp
jg
pop
or
dec
dec
mov
ljmp
aas
sbb
jg
cld
jl
jo
inc
loope
mov
push
xchg
jb
dec
aaa
xor
sub
inc
xchg
stos
aad
mov
sbb
pop
cwtl
fldcw
mov
jl
mov
mov
cld
xor
or
out
in
xchg
pcmpeqb
sahf
gs
sbb
jns
jle
xor
lret
pushf
inc
xchg
das
sti
lahf
fmul
aas
cli
mov
mov
push
stc
jno
dec
andb
scas
xor
mov
push
ffree
in
cltd
add
sub
mov
mov
mov
insl
cld
lock
lods
js
fsubrs
loopne
mov
cmc
daa
pop
xor
inc
ds
xchg
inc
and
clc
sbb
mov
sbb
jno
clc
fdivrl
pusha
mov
daa
test
xor
repnz
fldl
sbb
pusha
enter
mov
daa
xchg
or
daa
insb
and
push
aas
or
icebp
aas
scas
pop
lahf
sbb
push
or
std
dec
mov
cmp
bound
test
jbe
xchg
paddsw
push
std
and
es
xor
jmp
das
sarb
mov
rcll
push
jp
int3
lcall
movsb
adc
and
mov
inc
lods
fcmovu
push
ja
cld
sbb
cltd
push
inc
gs
aas
jge
inc
sti
xchg
jmp
push
divl
cli
sbb
subb
sti
icebp
fbld
xchg
jg
mov
jne
add
pop
test
inc
cmp
cmp
mov
loope
push
dec
mov
fwait
jle
xchg
adc
dec
ss
cld
flds
jge
fcmove
mov
mov
test
lds
or
dec
imul
sbb
fbstp
mov
lret
cld
scas
pushf
adc
xbegin
std
push
and
inc
cmpsl
in
out
xchg
lds
xchg
and
ja
mov
mov
mov
stos
aam
lds
pop
stc
ds
ljmp
mov
mov
sub
and
aaa
cli
cli
xor
mov
mov
addr16
repnz
inc
pop
test
or
dec
cmc
stc
inc
mov
cli
and
out
cmp
pop
aad
mov
aas
cmp
and
mov
and
lds
repnz
lea
lret
inc
sbb
cmp
fidivs
cli
ja
xor
fdivrl
fildl
jae
cmp
ret
nop
or
outsb
cli
mov
sbb
jmp
push
dec
rcrl
cwtl
xor
mov
mov
bound
cmp
mov
jno
fcomps
pushf
stc
lods
mov
inc
pop
and
inc
ret
in
loopne
test
xchg
push
out
fdivrp
xchg
push
popa
lods
pop
cltd
in
std
fldenv
out
jo
sub
nop
inc
sub
std
adc
or
mov
jmp
and
sbb
je
jmp
cwtl
fsubs
sub
mov
push
mov
mov
mov
ret
shlb
cwtl
adc
shrb
mov
add
imul
jae
or
or
mov
adc
addr16
lods
in
shrb
xchg
shr
mov
mov
cwtl
mov
sbbl
push
stc
loop
mov
pop
jg
push
sbbb
pop
call
jae
fmul
mov
jle
imul
jge
out
mov
xchg
lods
pop
jmp
shll
les
or
ljmp
cld
mov
mov
push
jl
cltd
push
test
adc
pop
inc
and
cmp
and
sub
testb
sub
nop
js
shrb
push
jnp
js
cmp
dec
test
xchg
inc
mov
or
into
scas
popf
inc
icebp
mov
sub
notb
xchg
imul
aad
add
push
xchg
mov
or
data16
and
pop
mov
sbbb
sbb
jle
call
loope
lret
pop
jmp
mov
cltd
lret
cmpsb
into
cmpsl
add
add
mov
int3
sub
pop
sub
cmp
xchg
mov
stc
int3
and
pop
lea
cmpsl
push
mov
adc
push
xchg
add
mov
adc
and
daa
adc
test
clc
dec
mov
idiv
cs
test
add
cli
jbe
arpl
movsl
mov
push
inc
popf
pusha
push
stos
std
imul
push
xor
rcrl
test
add
repnz
test
repnz
out
jmp
sar
enter
test
fsubrp
les
cwtl
fidivrl
mov
pop
xlat
mov
fs
sub
push
scas
pop
jno
add
popa
nop
xor
call
ret
push
or
mov
mov
fisubrl
scas
jecxz
cmp
pop
stos
js
out
xchg
inc
jecxz
daa
inc
inc
jbe
pop
or
ret
fldt
mov
roll
dec
xchg
inc
aas
jg
xchg
jge
mov
pop
in
sar
aad
xor
inc
cmp
loopne
movsl
das
and
lahf
mov
and
rcll
repnz
sub
fisttps
test
ja
iret
cld
jns
inc
ds
push
jg
xchg
outsl
or
lret
aad
mov
add
push
push
or
mov
aaa
es
sarb
in
or
in
ror
jl
lock
inc
adc
add
sbb
cmp
aam
in
cmp
fwait
cmp
mov
data16
sub
shrb
xchg
inc
imul
xor
sbbl
idivl
fmul
daa
daa
test
nop
jmp
lahf
cmp
dec
xchg
push
faddl
sbb
mov
mov
inc
dec
sbb
adc
scas
lods
mov
test
addl
fistpll
rcrl
mov
shrb
ljmp
jecxz
in
add
dec
inc
rol
jmp
ffreep
stos
mov
inc
mov
push
mov
push
mov
adc
adc
add
inc
adc
add
inc
ret
sbb
cmp
push
xchg
test
loope
repnz
rorb
and
adc
add
xorb
mov
negb
fldt
shl
inc
add
popf
add
ds
xor
add
pop
pop
dec
cmpsb
add
out
xor
gs
aad
lock
fdivr
push
inc
mov
push
dec
mov
outsb
jnp,pt
mov
daa
jo
orl
mov
pop
xorl
repz
mov
sub
push
cmp
push
outsb
fisttpll
movb
lods
cmp
rolb
jo
sbb
dec
xchg
jle
addl
aas
movsl
les
mov
dec
mov
add
xlat
mov
add
xor
inc
repz
xor
cmp
sbb
loope
repnz
push
divb
inc
inc
lret
push
xacquire
in
push
call
insl
stos
xchg
dec
cs
fld
fildl
jle
dec
stos
jge
ljmp
cmp
test
xor
dec
mov
jns
mov
cmpsb
gs
adcl
lahf
mov
xchg
dec
sub
mov
pop
lret
pop
lret
push
xor
fstl
fs
add
adc
test
and
cmp
mov
and
xor
add
mov
clc
jb
jle
pusha
add
ret
mov
gs
pushf
sbb
nop
clc
jmp
gs
je
xchg
cmpsb
jle
fldenv
pop
out
lea
cmp
inc
inc
push
popa
lahf
pushf
jge
clc
lds
popa
call
test
adc
outsl
xchg
dec
and
dec
inc
out
cltd
mov
loopne
mov
mov
icebp
enterw
jne
enter
lcall
repnz
or
insl
mov
je
aas
loop
jnp
jb
loop
das
xor
mov
xor
test
push
insl
cmp
pushf
int
adc
xchg
imul
loop
aam
rcll
popf
jns
mulb
sbb
pop
lcall
mov
pop
je
adc
adc
enter
dec
jmp
mov
xchg
sbb
pop
shrl
mov
outsb
test
pop
pop
js
xor
mov
xchg
sarb
mov
jne
scas
and
mov
cli
in
cltd
scas
popa
jge
fbld
dec
gs
and
sub
sbb
mov
outsb
xchg
mov
mov
enter
pop
inc
lock
test
inc
repnz
aad
and
lcall
std
cmc
loop
xor
add
jp
imul
and
xchg
push
inc
out
dec
lret
es
cmp
sarl
mov
lea
pop
mov
adc
fistl
or
cmp
in
ja
fldl2t
jge
xchg
addb
test
xchg
repz
sahf
movsl
mov
fisubs
les
mov
mov
pop
push
inc
fwait
sub
xchg
in
shll
nop
cltd
aam
xor
dec
and
int3
sbb
fisubrl
inc
js
pop
mov
push
mov
daa
pop
mov
daa
mov
lods
cmpsl
pop
dec
shrb
insb
xchg
inc
es
aad
popa
hlt
aam
push
ja
cmc
or
cld
std
dec
add
hlt
xchg
aad
int3
ss
push
mulb
insl
ljmp
mov
fsubs
pcmpgtw
je
push
cmpsl
int
insl
mov
je
pop
inc
jg
xchg
fdivrl
outsl
jp
sub
rcrl
dec
push
mov
mov
loop
cmp
and
sbb
sbb
daa
jae
xchg
loop
ret
mov
iret
div
imul
es
inc
iret
fidivl
jl
xor
pop
push
mov
xchg
dec
inc
lret
dec
int3
rcrb
push
in
insb
js
std
xchg
imul
sub
mov
int
incl
loop
inc
addr16
xchg
loop
push
popf
insb
daa
mov
inc
out
cli
mov
test
mov
mov
movsl
les
push
shlb
mov
aam
js
icebp
cld
repz
mov
cmp
cld
xchg
inc
cmc
and
scas
or
aas
or
cltd
pop
filds
mov
xor
push
xchg
aad
mov
mov
movl
test
push
insb
arpl
and
mov
xchg
lret
xchg
test
xor
pop
pop
stos
dec
xchg
fwait
mov
popa
and
out
add
push
popa
cmp
jmp
pop
push
cmp
insl
pop
jmp
sahf
std
call
int3
repz
and
test
jno
js
mov
mov
cwtl
loope
cld
in
dec
mov
mov
push
mov
das
jmp
insl
add
into
popf
shll
std
mov
shll
jp
enter
cwtl
jge
lds
lea
cli
repz
sub
stc
inc
lret
js
pop
out
inc
cmp
mov
jmp
bound
stos
js
jnp
pushf
xchg
movsl
test
repz
pushf
clc
data16
mov
xor
push
int
and
enter
ror
push
adc
push
fs
test
pop
adc
xchg
mov
xchg
out
adc
rol
mov
jge
clc
arpl
add
pop
mov
inc
cmp
inc
push
mov
movsl
loopne
pusha
sbb
sub
adc
hlt
enter
sahf
out
bound
and
iret
dec
sub
pop
jecxz
insl
jmp
dec
aaa
cmpsb
cmp
iret
add
cwtl
rolb
in
jo
out
add
das
xchg
negb
mov
test
xlat
inc
stc
pop
jno
jl
aas
or
lock
jo
lods
rolb
pop
loope
lods
sub
scas
jne
mov
lahf
sub
ljmp
mov
push
in
cmpsl
xchg
mov
notb
test
ret
call
jp
es
xchg
adc
fistpl
mov
mov
stos
sti
scas
stc
dec
cmp
js
inc
pop
rcrb
add
xor
xor
in
or
jns
aaa
jnp
pop
adc
inc
lea
fiaddl
jl
xchg
popf
xchg
lds
mov
cmp
inc
jae
jl
push
imull
adc
mov
aas
rorb
pushf
push
sub
std
add
fcmovu
dec
cmpsb
jl
xor
insb
je
addr16
scas
push
add
push
sub
std
xor
push
test
sbb
repnz
push
xchg
push
loopne
jo
rorb
movsl
pop
pop
out
inc
sbb
cmp
shlb
mov
rclb
repz
sbb
pop
sbb
out
enter
fstpt
push
mov
cmp
mov
pushf
or
incl
and
imul
out
adc
and
push
push
inc
xor
movsb
mov
kxorw
jge
pop
mov
pop
pop
stos
push
xorl
fsubrl
subl
jge
pusha
fsts
dec
dec
sbb
push
es
xchg
repz
orl
jb
sarl
ret
dec
lret
push
pop
test
fnstsw
inc
daa
dec
pop
or
xchg
lock
pop
push
loopne
cs
mov
sbb
adc
inc
stc
aas
ror
mov
mov
or
setge
sbb
pop
sub
push
inc
fsubrs
dec
dec
cmp
scas
pop
and
jb
mov
decl
cmp
das
out
dec
icebp
sub
jle
inc
xor
xor
lea
sub
jl
and
lret
inc
xor
and
pop
sub
xchg
xorb
inc
xor
es
xchg
lock
mov
ret
lods
popa
mov
call
addr16
inc
jmp
jge
adc
fnstenv
js
mov
add
addr16
cs
enter
pop
pslld
xor
lds
add
mov
in
aam
loope
cmp
adcl
movsb
xlat
test
mov
loopne
test
and
cmp
aad
out
push
stos
add
xchg
das
ljmp
repnz
lods
adc
xor
jp
jne
push
int
adc
fsubs
scas
loopne
inc
aam
repnz
mov
pushf
or
stc
rorb
add
xor
dec
mov
sub
cmpsl
mov
ljmp
pop
mov
mov
pop
mov
push
mov
add
gs
and
mov
inc
iret
mov
jno
bnd
mov
pop
or
lods
jo
mov
or
out
fisttpl
push
add
dec
aad
jg
sub
outsb
xor
cmovb
fcomp
repz
nop
jg
insl
leave
xchg
insb
and
mov
inc
and
scas
andl
xor
cwtl
mov
dec
lcall
loop
pusha
inc
and
add
mov
pop
mov
dec
inc
lcall
addr16
ds
xor
imul
hlt
pop
adc
mov
cmp
iret
push
xor
dec
std
cmpb
lahf
pushf
fwait
jae
in
lods
roll
data16
fldenv
es
test
mov
cmp
dec
adc
in
sbbb
in
ljmp
leave
sbb
cmpl
shrb
lahf
pop
repnz
int
and
xor
neg
cmp
and
inc
aas
and
pop
pushf
sbb
imul
pop
and
mov
inc
rclb
stos
jmp
sbb
mov
movsb
xor
adc
outsl
dec
jmp
sti
sub
xor
loopne
pop
sbb
mov
jp
sbb
add
ret
push
inc
xor
pop
mov
sbb
inc
lea
jne
aas
shrb
cmp
gs
inc
scas
xchg
sbb
insb
mov
int
nop
xor
loope
jnp
test
lahf
in
mov
daa
dec
mov
xor
in
mov
insl
bound
ror
outsb
cmpsl
add
add
mov
repz
mov
in
pop
test
xor
pop
jge
mov
sub
inc
mov
jno
cmp
mov
dec
movl
and
faddl
sbb
out
ljmp
mov
test
jae
jae
out
sbb
cmpsb
test
adc
or
cmp
fs
xor
mov
iret
xchg
or
ds
pusha
inc
out
test
push
fcomi
clc
adcb
push
mov
cmp
adc
xor
shlb
pop
sbb
lahf
les
jno
jl
dec
cvtps2pi
pop
insl
rcrl
jae
push
out
popf
push
jae
inc
fadds
ss
push
and
pushf
push
mov
xchg
cwtl
in
arpl
inc
data16
cli
insb
and
int3
sbb
sub
leave
out
loop
sbb
mov
addr16
out
and
pop
mov
add
fisttpl
pop
sbb
jo
mov
sbb
push
stc
pop
lcall
jnp
and
jns
mov
mov
xor
test
rolb
movsl
lret
in
outsb
int3
mov
dec
jge
or
inc
and
daa
outsl
dec
cld
stos
dec
loope
sarb
or
into
cwtl
push
xor
xchg
fs
repz
cmp
lods
pushf
int
push
push
test
ret
lcall
and
fidivl
inc
pop
into
sbb
jl
mov
adc
sbb
mov
xor
fmull
mov
fdivrs
mov
xor
xchg
push
lret
and
sarb
lcall
out
cmp
jns
pop
sub
push
lds
in
dec
dec
jnp
ret
add
and
push
inc
aas
hlt
add
fmuls
dec
js
test
std
addr16
sub
cmpl
inc
in
lea
add
mov
lea
inc
mov
mov
push
data16
loop
dec
mov
rol
fnsave
or
xchg
add
sub
ja
movsl
jo
lahf
inc
pop
add
or
lea
js
lods
mov
and
enter
ss
pusha
dec
ja
jb
popa
imul
call
sbb
jno
xor
mov
xchg
scas
out
mov
mov
inc
mov
and
testl
add
mov
aaa
push
call
daa
adc
cmp
lods
xchg
mov
push
imul
xor
push
shlb
cs
jg
adc
mul
push
ret
nop
out
cmp
jnp
xchg
jbe
out
dec
push
cltd
das
repnz
cli
ffree
repz
lods
pop
mov
ret
rorb
loope
je
mov
pop
addr16
or
mov
add
fildll
mov
xchg
mov
loope
cmp
sarl
stc
mov
clc
sbb
jno
leave
and
ror
ds
mov
xchg
and
lret
out
push
movsl
imul
adc
jns
lret
lcall
arpl
mov
sub
std
fwait
mov
inc
stos
mov
addl
ljmp
sahf
imul
lods
dec
and
dec
shll
add
jnp
xchg
call
mov
push
push
sti
mov
dec
xor
scas
fidivrl
into
call
and
repz
mov
add
pop
push
pop
out
mov
fistpll
and
das
repnz
pop
stos
xchg
in
or
fimull
adc
mov
enter
adc
sub
lock
movsl
ret
aas
jbe
test
test
xchg
jp
js
gs
and
loopne
jle
cltd
mov
adc
repz
xchg
push
cmp
xchg
mov
lds
les
loopne
sbb
push
xorb
call
pop
sahf
push
aaa
ss
jnp
gs
cmp
inc
cld
jns
jo
jge
fwait
or
pop
and
popf
pusha
mov
repz
leave
or
mov
cmpsl
jl
in
fistps
fadd
xchg
dec
push
ljmp
xchg
jo
mov
es
ja
inc
test
push
push
jl
adc
pop
pop
push
pusha
into
iret
mov
icebp
adc
xor
loopne
cmpsb
pop
enter
push
cld
jno
inc
arpl
rcrl
fwait
jp
push
cmpsb
sbb
icebp
std
sbb
test
sub
popa
rolb
cmp
or
push
lds
inc
xchg
adc
gs
repz
fs
cmpb
je
cmpsb
jbe
repnz
arpl
mov
cltd
add
lret
mov
inc
das
stos
cs
jno
aad
mov
push
gs
out
xchg
in
jmp
mov
mov
dec
xor
into
xchg
ds
int
push
push
lret
mov
pop
enter
out
bound
call
pop
and
pop
dec
add
xor
and
or
nop
nop
sub
dec
adc
xchg
out
clc
popa
fnstenv
adc
dec
into
lods
mov
jle
sub
ss
push
mov
arpl
dec
movsb
pop
push
xor
cmp
fsubs
adc
sbb
cmp
dec
mov
pop
outsb
lock
movsl
adc
mov
and
sarw
mov
adc
xchg
std
js
mov
adc
out
imul
dec
and
arpl
jle
ja
daa
jno
fstp
int3
jge
cld
push
xchg
aam
inc
pop
adc
arpl
rcrl
imul
add
popf
xlat
dec
in
stos
fdivrl
mov
xchg
jle
call
stos
jns
test
imul
sub
xor
dec
dec
jmp
sbb
adc
sub
add
sbb
jo
cmp
sarl
mov
pop
push
pop
xchg
jge
shlb
xor
data16
sbb
in
call
pop
fists
std
cmp
movsl
subl
or
icebp
sub
sub
adc
addl
sbb
inc
in
cmc
push
rorl
xchg
push
mov
data16
push
fs
in
mov
pop
jge
arpl
sbb
mov
stos
outsb
sbb
and
pop
or
cmc
jnp
shll
mov
push
adc
repnz
lahf
mov
and
popf
mov
inc
mov
add
push
mov
sar
dec
test
out
mov
in
or
pop
xor
sub
int3
int
in
ljmp
mov
ss
jo
jmp
or
mov
mov
sbb
sti
rcrb
mov
sub
cmp
xor
inc
mov
test
inc
mov
xchg
into
sub
jb
jle
repnz
jg
add
jns
lcall
inc
test
add
jbe
loopne
cltd
rcll
inc
mov
adc
xchg
lcall
gs
push
ljmp
mov
or
jbe
pop
jnp
pop
test
jno
inc
and
push
jp
pop
aas
dec
and
notb
ret
jns
sbb
push
pop
lds
repnz
aaa
sahf
pcmpgtd
mov
mov
outsb
push
or
movsl
test
arpl
js
dec
push
rcll
sub
mov
cmc
pop
pop
push
and
push
sub
jbe
or
jae
pop
pop
and
ret
adcb
cmp
lret
lods
dec
cmp
mov
jecxz
movl
push
jae
lret
outsb
jp
xchg
inc
je
sti
loope
add
cltd
arpl
int
addr16
js
pop
loop
inc
mov
inc
sbbl
pop
add
pop
and
push
mov
icebp
mov
mov
ja
lock
inc
fstl
cli
push
jb
or
or
lock
std
dec
fbld
pop
mov
and
out
mov
push
mov
rol
or
popf
es
leave
cli
xchg
movsl
and
out
cmp
adc
scas
mov
ficoms
mov
or
jl
xchg
in
mov
popa
xor
je
push
sarl
idivl
lret
mov
dec
insb
fs
fidivs
rcll
pop
jmp
nop
stc
test
movl
xor
mov
repz
sarb
test
inc
psubusw
mov
popf
pushf
jo
cmp
lret
repz
dec
or
cmp
jle
jne
lods
inc
mov
and
xchg
enter
or
and
in
cmp
fwait
inc
and
cwtl
xchg
push
jp
bound
xor
shrl
inc
xchg
ret
mov
mov
ljmp
xor
jp
push
xchg
ret
addr16
inc
ficompl
std
mulb
xchg
mov
adc
pop
or
test
mov
aam
inc
imul
or
jle
xor
push
jl
mov
in
cmp
mov
cmp
add
pushf
shlb
aam
xor
int
outsl
addr16
fs
mov
or
ret
ret
aam
jno,pt
test
sub
fisubrl
jb
cmp
pop
pop
pusha
into
push
stos
inc
pop
mov
iret
out
test
ljmp
mov
adc
out
mov
jmp
subb
hlt
std
mov
shrb
mov
jno
fsubr
add
sbb
sti
mov
inc
inc
mov
cltd
pop
decb
or
sahf
pcmpeqd
imul
sbb
inc
lock
xchg
iret
mov
movsl
sbb
add
bound
xchg
mov
aad
int
push
movsb
mov
cwtl
jbe
div
dec
fsubrl
add
dec
push
outsb
movsl
dec
jbe
mov
out
pusha
and
fnstenv
xor
test
sti
cmp
mov
bound
hlt
dec
adc
lcall
or
dec
dec
mov
sbb
lret
or
fimull
frstor
sub
push
xchg
movsb
push
jl
mov
test
cs
fwait
cmpsb
pop
jle
mov
pop
jg
pop
inc
xor
cmp
and
pop
fnsave
dec
push
or
xor
dec
inc
mov
mov
xor
shll
les
push
xchg
mov
cmp
out
fmull
push
push
mov
and
popa
sub
lcall
xchg
loopne
jle
movsl
or
testb
js
nop
test
cmp
pop
gs
imul
jmp
ficomps
pusha
push
into
mov
lret
mov
dec
jmp
lahf
lahf
fbld
jno,pn
aad
lock
movsl
mov
adc
jge
mov
jl
add
jp
sub
push
iret
sbb
scas
lret
ss
jle
and
and
or
movb
aaa
jae
sub
or
sbb
pop
outsl
cwtl
inc
dec
mov
push
and
push
fistps
sbb
mov
mov
sbb
divl
sti
xor
pop
ffreep
and
jmp
sahf
fstpt
jbe
sbb
add
fidivrs
rorb
sbb
lods
xchg
xor
push
addr16
aas
dec
dec
daa
sub
aad
sub
sub
push
imul
test
or
repnz
inc
pop
xor
cmc
lds
or
rcrb
fs
outsb
mov
aaa
add
out
and
clc
push
js
mov
repz
loopne
fstpl
jbe
sbb
mov
test
fwait
xor
dec
xchg
push
movsb
stos
and
fs
jbe
sub
pop
sbb
xchg
mov
mov
sbb
push
fwait
or
dec
cmc
push
movsl
test
test
or
outsl
pop
sahf
shrb
push
xlat
adc
push
sub
test
cmpsl
and
xlat
jg
cmp
popf
stos
int
jns
js
cmp
and
mov
enter
test
in
adc
sbb
push
adc
dec
xchg
add
arpl
sub
and
push
pop
gs
inc
jbe
pop
js
pop
mov
out
cmpsl
add
xlat
mov
add
and
pop
mov
xchg
stc
sbb
and
add
insb
inc
sbb
cwtl
insl
pop
cmp
mov
xor
xor
js
sbb
mov
mov
cmp
andl
ds
push
mov
jbe
outsb
gs
lahf
es
or
lds
inc
inc
js
inc
push
pop
cmc
rorb
push
ftst
mov
push
sahf
dec
mov
movsl
inc
jl
and
iret
fnstsw
int
lods
jge
xor
push
xchg
add
jp
addr16
push
sub
mov
push
sub
xchg
lcall
sub
mov
sub
hlt
fadds
sbb
dec
es
mov
add
dec
fimuls
cwtl
das
shrb
imul
jb
push
cmc
jns
adc
pop
or
xor
cmp
dec
rcll
dec
pop
push
movsl
repz
jnp
pusha
test
sbb
dec
scas
adc
push
lret
insb
sahf
lea
jecxz
add
add
hlt
pop
mov
iret
mov
mov
xchg
dec
popf
add
fprem1
xchg
in
cwtl
jae
subl
lock
loopne
sub
movsb
mov
sti
push
mov
adc
xchg
sub
in
sub
cli
pop
inc
jl
insb
lret
add
jbe
and
xchg
xor
sbb
pop
negb
or
xchg
mov
int3
dec
dec
xchg
cs
xlat
or
stos
jns
rcll
jecxz
pop
mov
fwait
jb
inc
stc
add
dec
loop
inc
mov
sub
cmp
lret
je
jnp
shll
outsb
push
frstor
mov
cltd
in
xlat
push
mov
cmpsb
rcll
aam
lret
dec
into
mov
jnp
stos
mov
andb
negb
outsl
gs
ret
or
imul
push
xor
cli
pop
aaa
fistpl
inc
imul
lds
clc
lea
clc
test
mov
xor
push
enter
sub
mov
mov
lcall
or
pop
cmp
pop
cmpps
dec
iret
cmp
add
and
dec
mov
loopne
or
incl
mov
icebp
inc
test
mov
enter
mov
fcmove
lcall
adc
outsb
test
jmp
xor
lret
loope
adc
aam
test
inc
xor
jo
lods
adcb
add
mov
leave
mov
in
mov
and
gs
pop
xchg
fimull
mov
outsb
stc
or
push
clc
push
mov
sbb
sbb
fistps
leave
sub
ja
xor
iret
pop
orl
jg
jnp
dec
cmp
cwtl
xor
test
ljmp
scas
cs
push
stos
push
mov
xchg
push
xor
shr
pop
cs
adc
fs
out
repnz
testb
test
mov
and
loop
jne
pop
sub
aaa
pop
cmpsb
dec
jns
imul
push
loop
push
scas
sti
outsb
cld
sub
addr16
pop
xchg
test
push
push
roll
out
mov
shr
cmp
iret
xchg
adc
mov
mov
lods
mov
or
out
mov
pop
clc
jns
mov
add
or
clc
aas
or
fs
xchg
call
xchg
lahf
adc
adc
pop
pop
or
movsl
not
nop
lcall
sbb
mov
pop
sbb
test
adc
leave
fldl
test
in
test
out
inc
xchg
loopne
lcall
popa
popf
push
push
mov
xchg
cld
add
inc
je
aaa
popl
dec
adc
push
test
or
mov
pushf
jecxz
shlb
mov
repz
subb
fneni(8087
orl
push
sbb
cmp
xchg
xor
rcr
es
pop
xchg
scas
add
js
mov
add
sti
repz
cmpb
lods
jle
sbbl
outsl
cwtl
subb
stos
lahf
adc
push
mov
out
jns
push
pop
cmp
popf
icebp
fiaddl
in
in
xor
inc
dec
in
lcall
or
mov
mov
scas
push
aas
lods
out
jnp
stc
dec
clc
mov
inc
sub
fisubl
xor
scas
or
fldcw
mov
and
pop
out
stos
sahf
and
cli
xlat
ret
mov
lret
push
xchg
gs
jmp
lea
icebp
dec
jge
data16
dec
test
outsl
outsl
addl
mov
cmp
data16
les
lret
fimull
inc
mov
adc
ds
xchg
lret
ss
adc
pop
or
gs
decl
dec
add
sub
pop
stos
dec
mov
mov
jo
xor
sahf
popa
mov
inc
and
pop
mov
js
and
xchg
outsb
imul
push
push
fcoml
rol
mov
sbb
pop
cmc
push
imul
data16
xor
shrl
fdivp
and
std
setb
mov
xchg
inc
fistps
fnsave
mov
scas
inc
mov
sub
outsb
and
push
and
mov
push
adc
bound
adc
and
loop
pop
xlat
jecxz
stc
sub
dec
jb
push
notl
enter
fistl
sbb
and
cmpsb
jmp
dec
nop
xchg
std
scas
test
repz
and
pop
repnz
aaa
jb
pushfw
jg
jp
push
lahf
cmp
stos
dec
and
stc
dec
fidivrs
xchg
inc
add
mov
jl
sub
aad
pop
and
int
mov
sahf
fadds
loopne
pop
xchg
adc
test
push
imul
xchg
adc
mov
mov
xchg
fcoml
jne
fsubrs
ret
jae
jge
adc
fadds
xorl
fsubs
mov
push
mov
lcall
xchg
mov
fs
cmp
dec
jno
xchg
sbb
test
scas
pop
add
in
in
pop
inc
xorb
dec
xchg
mov
mov
test
loope
add
xchg
xlat
lcall
mov
inc
shl
test
xchg
sarb
jmp
xor
pop
insb
and
lds
sbb
out
pop
cmc
mov
mov
jp
lods
into
jne
push
pop
mov
jnp
loopne
call
xchg
inc
mov
cmp
or
adc
dec
mov
je
inc
cmc
mov
inc
cmc
and
mov
jecxz
lret
lret
cwtl
cmp
rorl
xchg
incb
pop
test
outsb
push
or
sahf
fidivrl
add
insl
push
enter
jno
jnp
sub
sub
out
sub
cmp
gs
dec
adc
mov
push
pop
mov
out
incb
fildll
mov
inc
fildll
mov
movsl
pop
in
roll
and
ret
dec
mov
sbb
jg
xlat
sbbb
push
loopne
cmc
lock
xchg
shlb
xor
or
push
mov
push
mov
and
jns
pop
push
loop
out
ficoms
aas
rcl
inc
fimull
das
pop
mov
and
push
mov
jge
scas
cmp
mov
test
ficoml
cmc
xor
in
xchg
sbb
or
cmc
mov
cmpsl
notl
inc
mov
icebp
inc
rcrb
pop
mov
jmp
cmp
push
sub
stc
rorl
jmp
insl
in
not
sub
out
jmp
push
pushl
mov
sbb
jo
js
int
call
loop
int
cs
lds
ret
data16
fdivrs
push
mov
inc
ret
adc
fstps
repnz
inc
fcmovbe
and
int
mov
lock
sub
adc
push
cmc
add
cld
cmp
popf
addb
mov
loopne
leave
xor
add
mov
sub
cltd
fwait
inc
jns
mov
or
das
pop
cmpsl
loopne
cli
jmp
or
imul
xchg
int3
lret
mov
mov
iret
sbb
inc
lret
xchg
mov
pop
inc
fxch
data16
push
lahf
mov
pop
inc
in
rcrl
and
mov
jle
push
ret
iret
lcall
mov
cmp
sbb
mov
lahf
sbb
xor
jg
cmp
popf
and
xchg
cmpsl
into
sbb
push
jns
or
push
jge
fdiv
dec
mov
daa
add
pop
cmp
adc
jae
and
mov
loope
pop
jnp
mov
dec
fildll
das
push
inc
pushf
lock
dec
lret
fdivrs
fiadds
into
popf
and
pop
pop
sahf
jno,pt
in
inc
mov
inc
mov
add
mov
andb
xchg
mov
cmp
test
ret
shrl
fcomip
addr16
lcall
cmpl
rorb
lret
out
mov
fists
imul
dec
nop
in
sbb
xchg
outsl
rorl
insb
add
mov
adc
jle
in
push
inc
fsubrs
or
push
mov
in
arpl
lea
gs
mov
fbld
aas
mov
pop
jl
cmpsb
sahf
shl
pop
inc
gs
mov
xchg
push
aam
shlb
cmpsb
xchg
arpl
pushf
sbbl
xchg
daa
test
xchg
jmp
xchg
stc
jecxz
cmp
cwtl
out
dec
iret
iret
inc
call
xchg
cmp
inc
loope
enter
mov
clc
push
fcoml
dec
mov
add
fdivrs
push
adc
daa
fistl
lcall
jmp
jl
pop
loope
adc
mov
add
push
add
pop
gs
mov
rol
jbe
iret
sbb
outsb
sbb
stc
lods
scas
sbb
mov
hlt
mov
cmpsl
les
out
pusha
dec
out
cmpsl
or
jo
cmpsb
aam
adc
sahf
and
aaa
add
pop
push
cmp
shll
or
test
lcall
sub
xchg
xchg
jae
pop
push
mov
ss
popf
mov
cmp
mov
push
inc
jbe
rorb
sub
decb
cmp
lret
pop
jb
mov
loope
pop
cmp
pusha
out
lcall
jmp
dec
push
jecxz
in
mov
leave
mov
sti
mov
popf
pop
stos
pusha
dec
push
lcall
jp
test
pop
mov
mov
xchg
rcr
fwait
paddusb
neg
aad
add
push
shll
out
scas
pop
mov
sbb
fisubs
mov
and
adc
mov
fwait
jo
clc
bound
and
subb
lods
sbb
outsl
lahf
test
je
push
dec
inc
movsl
lds
dec
insl
test
pop
cmp
sti
movsb
ret
inc
cmp
fcmove
mov
outsl
mov
movsb
imul
ds
aas
pop
fsubs
cmp
push
mov
mov
daa
fucomp
inc
outsl
das
push
out
lods
jae
dec
push
jno
push
pop
pop
add
jg
into
icebp
cmp
lods
hlt
jl
adc
enter
aam
pop
and
jle
mov
cld
pop
fwait
jle
dec
popf
ds
adc
push
mov
inc
xor
test
lcall
scas
idivl
je
cld
push
cmp
clc
pop
cmc
adc
neg
cld
push
xchg
mov
loope
cmp
add
pop
add
mov
lret
out
sub
fdivl
cmpb
aas
push
sub
clc
cmpl
sarl
inc
pop
sahf
or
rolb
dec
inc
into
les
dec
and
in
sar
repnz
jle
jmp
dec
imul
roll
cmp
fsts
sub
int3
add
xor
mov
mov
fwait
mov
mov
xorb
mov
inc
jp
mov
or
mov
inc
and
or
dec
mov
cli
xor
adc
imul
or
or
rolb
jo
test
loopne
cli
push
push
jbe
mov
inc
es
sub
push
xchg
enter
cmpsl
mov
sbbl
mov
jg
flds
lret
push
mov
jg
sahf
shlb
mov
aaa
sub
push
mov
or
xor
mov
cltd
addl
add
push
mov
pop
loop
and
xor
jbe
lds
inc
icebp
mov
jbe
dec
adc
mov
mov
and
mov
ljmp
dec
jecxz
jp
sub
imul
dec
dec
fnsave
sub
popl
out
cltd
mov
jmp
lret
mov
out
and
ret
fisubrs
add
xor
push
test
int3
test
mov
pop
ss
aad
outsb
jge
dec
in
pop
push
pop
cmpsl
lods
cmp
popf
test
cltd
pop
push
popf
int
sbb
cmpsb
add
or
cmp
idivl
mov
iret
aam
in
pop
test
loop
ds
mov
push
xor
xchg
fildll
jmp
and
fwait
jb
mov
push
loopne
rcrb
adc
dec
test
xchg
cli
cmpsb
mov
icebp
add
add
das
or
adc
out
adc
daa
jecxz
outsl
add
dec
inc
sub
sbb
push
sbb
inc
out
xchg
es
fucomip
imul
push
ds
adc
xor
push
push
add
popf
fwait
add
data16
in
loop
xlat
xchg
pop
dec
mov
mov
or
lret
fisttpll
xor
mov
and
ds
inc
lcall
test
out
gs
das
adc
xchg
out
divb
jecxz
scas
sarl
cmp
test
pushf
sub
mov
and
adc
xor
mov
or
hlt
lock
aaa
ficoml
or
hlt
lret
add
jl
jmp
dec
scas
fcmovb
add
mov
popf
mov
icebp
xor
sahf
cmp
cwtl
push
out
flds
aad
in
fwait
int3
xorb
lret
movsl
loope
in
test
sbb
lea
xor
out
inc
push
hlt
cmp
lods
xor
aad
imul
aam
stos
lahf
cmpsb
or
shrb
out
lret
sub
outsb
add
pop
fmul
jecxz
dec
xor
call
and
adc
mov
jle
mov
dec
dec
push
mov
mov
cwtl
sbb
fstl
and
test
push
xlat
sbb
xchg
ljmp
ljmp
lds
adc
aad
outsl
pop
cmpsl
cmp
push
loop
lods
imul
test
sbb
int
xor
mov
cmpsl
fdivrl
fdivp
mov
fcmovnbe
ret
push
in
adc
sbb
out
adc
jp
mov
sub
pop
mov
and
pop
inc
dec
pop
jno
movsb
ret
scas
jle
xchg
rolb
push
and
out
roll
add
int3
fnstenv
stos
pop
xchg
daa
call
jge
sbb
lret
sahf
sbb
jns
mov
repnz
outsb
mov
inc
jnp,pn
jp
popa
testb
fisubrs
popf
mov
pslld
cmpsb
cmp
lret
mov
xchg
mov
and
pop
divb
jmp
or
or
int
rolb
filds
sbb
subl
mov
or
cli
adc
cmp
popf
jae
in
pop
pushf
in
cld
xor
cmp
sbb
cmp
add
je
scas
dec
sub
aas
fwait
js
xchg
outsl
into
mov
mov
adc
xchg
insb
scas
xchg
mov
pop
iret
icebp
jnp
roll
movsb
pop
cmp
test
add
add
pop
xor
in
iret
pop
inc
lods
jnp
lret
push
xchg
push
lods
in
pusha
add
mov
xor
pusha
loop
pop
sbb
push
jns
movsl
cltd
dec
andl
jmp
sti
push
push
inc
in
in
out
repnz
les
dec
test
movsb
int
std
pop
in
aad
and
andb
xchg
and
gs
push
insl
jge
inc
scas
sbb
dec
pop
shl
imul
and
loopne
push
mov
subl
xchg
mov
adc
iret
call
inc
pop
or
nop
loop
push
adc
xor
pop
push
sub
xor
push
xchg
jns
popa
mov
mov
mov
cltd
add
out
stc
push
test
roll
aam
sub
not
fsubrp
and
popf
ljmp
lea
ret
arpl
mov
not
daa
jne
std
ret
in
pop
clc
loope
pop
shlb
sub
or
dec
sub
ret
mov
jbe
cmp
mov
popf
cmc
repnz
andl
int3
inc
stc
pushf
add
gs
jle
cmp
push
pusha
jne
push
jmp
xchg
imull
and
shlb
sub
or
or
fwait
push
daa
mov
pop
cmp
sbb
cmpsb
xchg
lret
push
loop
inc
rol
js
sbbl
lea
push
lcall
xlat
push
ss
fdivrs
push
rcll
inc
je
insl
add
test
lea
jae
xor
gs
cmp
das
loopne
jns
adc
or
cmpsl
sti
add
mov
mov
fisttpll
lea
pop
inc
sbb
xchg
out
sbb
test
pushf
popa
xchg
xchg
pop
std
sub
repnz
bound
xor
mov
daa
ljmp
fildl
outsb
in
mov
cmp
or
jp
les
shrb
dec
xchg
sub
outsb
mov
sbb
sti
mov
adc
pop
cmp
fsubs
mov
jns
xor
sbb
mov
pop
sub
cmp
mov
pop
mov
test
lods
stc
pop
pop
js
loopne
and
jl
xor
mov
sbb
enter
pop
fwait
shrl
adc
mov
inc
in
test
sbb
cmp
cmp
dec
cs
cmp
cli
dec
dec
popf
add
notl
push
das
cmpsb
cld
lods
ret
mov
cmpxchg
arpl
shlb
jb
jge
stos
jae
add
repnz
ss
enter
outsb
lret
add
jno
mov
clc
rcll
add
ds
xlat
adc
rcrl
xchg
xchg
out
push
outsl
int
adcb
ds
fstps
and
mov
mov
fadds
dec
push
mov
test
rorl
pushf
push
and
mov
mov
add
out
push
jle
loop
sbb
mov
xchg
sub
fs
cmp
push
clc
dec
jnp
push
imul
or
lahf
pop
xor
rcl
dec
test
cmovne
jmp
lea
pop
ret
dec
jle
mov
mov
cmp
sbb
and
je
loopne
outsl
orb
call
mov
aaa
hlt
bound
adc
shrb
inc
xchg
xchg
in
push
xchg
add
dec
in
hlt
jns
repz
cli
sub
adc
mov
mov
dec
jb
fs
inc
jae
cmc
lret
mov
imul
fsubrl
mov
fsubrs
out
aam
mov
xchg
sub
les
data16
lret
xor
ret
mull
int
lods
lods
pop
out
push
mov
cmp
mov
inc
sbb
add
cmp
fisubrl
jecxz
lahf
nop
aaa
xor
dec
mov
jb
mov
arpl
cli
sti
sub
int
adc
popa
xrelease
pop
add
clc
mov
icebp
ret
jp
fwait
iret
mov
inc
aaa
adc
xchg
jnp
mov
add
sub
in
add
insb
cltd
pop
loopne
or
mov
insb
outsb
sub
fmul
js
cmpsl
dec
sub
push
stc
add
rorl
das
arpl
and
add
xchg
add
or
pop
outsl
dec
in
jge
mov
mov
xor
dec
pop
or
je
lcall
or
push
cmp
and
xchg
mov
and
pop
dec
test
and
daa
into
dec
add
mov
add
cmp
sbb
shlb
nop
jl
lea
stos
mov
cmp
push
test
jno
xchg
pop
xor
xorl
mov
lret
pop
ret
pop
in
xchg
fwait
add
lods
sub
dec
jecxz
lcall
outsl
cmpsl
push
mov
pusha
add
mov
test
outsb
push
xor
jae
mov
pop
xchg
sub
sub
loop
call
sub
sbb
sub
fsts
rcl
mov
pusha
lret
sbbb
jge
popf
arpl
lea
iret
mov
jns
aad
stos
push
jnp,pn
aad
pop
enter
fldenv
jecxz
xor
stc
jp
enter
pop
sbb
mov
shll
stc
xor
push
je
into
cmpsl
lods
xchg
sub
filds
pushf
mov
ljmp
shll
outsl
sub
push
das
and
test
dec
fmull
in
jns
adc
pop
xchg
sbb
ret
push
inc
int3
out
sti
push
les
pusha
cli
cs
mov
mov
cmp
cmp
adc
add
mov
aam
jnp
push
pop
pushw
out
mulb
test
out
or
arpl
int
stc
inc
jbe
xchg
jge
fwait
and
cmp
dec
pop
push
lods
xor
adc
lret
jg
sbb
push
jl
mov
cs
insb
dec
popf
movsb
aad
mov
insl
mov
add
loope
iret
mov
xchg
pushf
aam
mov
jae
mov
or
xor
dec
sub
cs
sbb
lcall
das
pop
mov
sbb
adc
mov
jge
pop
leave
cld
push
icebp
fbstp
xor
mov
call
out
mov
sti
inc
add
fwait
dec
orl
and
lcall
std
xor
in
mov
xorb
call
pop
xlat
jl
mul
push
ret
scas
scas
fwait
add
roll
fadds
mov
outsl
lahf
adc
int3
push
mov
arpl
fst
pop
xchg
gs
repz
ret
shlb
leave
mov
call
mov
nop
cmpsl
inc
test
lcall
sub
nop
sub
pop
mov
imul
fsubr
popf
add
or
lods
aas
push
mov
adc
cmpl
mov
dec
fidivl
in
pop
dec
mov
xlat
add
cmp
incb
add
das
jl
and
ret
mov
in
lds
dec
das
add
pop
xor
cmpsl
iret
push
aaa
sub
inc
push
xor
sbb
icebp
add
push
push
pop
add
pop
shrb
das
cmp
xchg
je
push
rorb
xchg
aad
test
sub
das
sub
inc
cmpsl
xor
sbb
imul
xor
cmpsb
mov
in
popf
xchg
dec
push
xchg
rol
xchg
dec
aaa
in
dec
mov
push
and
pop
sbb
inc
test
xchg
push
jg
mov
or
mov
xor
mov
adcl
addb
subl
or
mov
inc
stc
ret
mov
ss
das
inc
xor
loope
stc
xchg
js,pn
dec
sbb
fists
pop
jae
cmc
mov
pop
adc
mov
push
xor
lret
js
outsb
dec
push
jns
xorb
scas
cli
out
mov
out
bound
lret
inc
jp
sub
xor
inc
pushl
fwait
and
pop
test
mov
and
jg
loope
push
adc
jle
into
movntq
xor
sub
scas
sub
inc
pop
adc
inc
div
adc
push
lds
adc
sbb
mov
sub
mov
sbb
loopne
sbb
je
cltd
inc
aaa
aad
popf
jmp
in
cs
push
sbbl
aaa
push
jl
pushf
xlat
out
test
mov
cmp
cmp
in
xor
jg
push
cmpsw
repz
push
test
fnstcw
daa
div
push
adcb
out
pusha
push
pushf
gs
pop
call
mov
mov
inc
pusha
pop
xor
add
jae
add
mov
sub
aad
push
movsb
ret
xor
xchg
test
xor
jecxz
mov
out
lahf
test
fwait
xchg
or
or
push
lods
xlat
rorb
inc
lret
js
xchg
adc
push
mov
or
pop
pop
mov
inc
sar
test
xor
das
ds
or
or
or
nop
int3
cld
dec
fidivl
adc
mov
loopne
mov
fisubrs
nop
cltd
xchg
add
xchg
js
je
xor
mov
dec
out
cwtl
add
pop
into
shl
lds
push
sub
inc
iret
dec
pop
les
inc
jae
addl
mov
scas
sub
sbb
mov
mov
mov
adc
mov
ret
pop
pushf
mov
call
dec
adc
dec
leave
and
mov
iret
sahf
cmpsl
lods
add
imul
add
or
sbb
and
jo
push
repnz
les
fstps
mov
mov
cmp
sub
sub
mov
pop
mov
das
mov
loopne
mov
leave
pop
mov
mov
jle
add
call
jns
and
xor
call
movsb
es
sub
mov
xchg
push
jno
dec
lret
ror
xlat
stos
jecxz
subl
enter
cmpb
call
leave
push
out
or
mov
loopne
push
cmc
jne
mov
iret
dec
xor
dec
sbb
mov
cmpsb
mov
cmp
loopne
mov
shrb
or
rcl
push
loop
jmp
aam
orps
lret
pop
mov
mov
in
xor
cwtl
xchg
cmp
xchg
scas
cmp
outsb
cmc
testl
dec
xchg
testb
push
fisttps
add
fisttps
outsb
mov
ds
push
dec
outsl
mov
pusha
shrl
xor
lret
add
mov
sub
mov
adc
mov
mov
dec
orl
mov
aas
add
dec
loope
mov
ss
sub
jge
sbbb
std
inc
mov
inc
pusha
adc
mov
lea
sub
gs
jecxz
pop
mov
mov
or
adc
xchg
ret
icebp
in
jbe
cmpsl
in
outsl
rolb
adc
lret
push
mov
sarb
push
sbb
xor
xchg
xor
shr
jmp
push
fpatan
ss
pop
loop
mov
aas
jo
xlat
or
jecxz
inc
cmp
push
and
ds
imul
mov
popf
adc
pop
xchg
push
cmp
mov
mov
mov
mov
push
pop
mov
pop
gs
mov
push
das
insb
cmp
sub
mov
loope
and
insb
xchg
test
push
push
sarl
hlt
add
sbb
bswap
lds
push
hlt
dec
and
and
pop
daa
insb
mov
mov
dec
insl
cmc
mov
gs
negb
jge
push
and
mov
mov
cmpsl
xor
adc
movsl
loopne
add
push
ljmp
xchg
xchg
and
pushf
sbb
xor
pop
mov
out
cmp
insb
jmp
push
mov
test
pushf
jns
dec
ret
lods
aad
in
and
std
loopne
loopne
aam
fisubrs
inc
or
lods
xorl
xchg
mov
xchg
xchg
cld
dec
lahf
scas
lock
jl
aaa
mov
push
jge
mov
inc
xchg
out
into
fists
mov
mov
cmp
lods
fldcw
xchg
divb
jecxz
mov
jo
mov
mov
enter
in
adc
sub
outsb
repz
jne
fsubrl
fisubs
mov
jmp
addr16
in
fisubl
ret
sbbb
pop
lods
dec
fcoml
and
test
and
mul
push
outsb
add
in
cmp
and
inc
cmp
ret
and
movsl
inc
rol
or
xchg
xchg
xchg
push
lahf
mov
xor
ljmp
stos
out
insb
scas
mov
dec
lret
andb
loop
lods
mov
dec
roll
cmp
out
add
sub
pop
cmp
xor
aas
mov
nopl
ds
icebp
test
pop
adc
cwtl
test
mov
sbb
or
mov
add
mov
cmp
and
mov
std
pop
cli
imul
or
push
adc
xchg
pop
dec
jae
sub
aad
je
xlat
jl,pn
fs
shlb
mov
inc
outsl
aad
imul
scas
mov
dec
outsb
test
mov
testl
lret
subb
jae
imul
cmpsl
mov
test
je
ljmp
xchg
jmp
push
in
hlt
inc
aam
rcrl
dec
adc
lahf
pop
cmc
imul
test
imul
jge
in
pop
dec
lahf
aas
xchg
jbe
adc
es
inc
insl
dec
sub
cmp
cmp
lods
imul
pushf
push
jbe
hlt
xchg
lea
scas
xor
repz
iret
jnp
push
push
lret
or
not
stos
sahf
out
adc
adc
daa
inc
std
mov
sub
out
and
jbe
aaa
and
cltd
jp
arpl
movsl
dec
ret
aas
mov
lods
outsb
fnsave
out
movsl
inc
mov
mov
dec
xchg
and
movhps
arpl
pusha
pop
cld
sub
pop
outsb
test
in
jnp
mov
sub
mov
test
stos
lea
and
mov
cmpsl
xchg
cld
in
jbe
dec
in
pushf
push
mov
enter
xorl
ret
popa
add
or
push
mov
mov
jle
dec
subb
iret
dec
test
les
pop
push
les
inc
test
add
jle
dec
lock
pushl
incb
mov
insb
mov
mov
into
adc
in
jo
jecxz
outsl
sahf
fimuls
outsl
ljmp
jg
sub
shll
call
xchg
daa
xchg
add
pushf
data16
push
incl
test
mov
outsb
idiv
sub
pop
push
jge
push
cmovl
stos
dec
add
push
int3
sbb
shll
or
and
pusha
xchg
outsl
rcrl
xor
jb
or
lret
je
mov
sti
ret
or
push
pop
out
adc
in
lahf
mov
cmc
lea
cmc
mov
push
repz
mov
and
sbb
jo
xchg
mov
mov
imulb
int3
std
jecxz
lret
adc
dec
stos
aad
orb
xor
repnz
xchg
dec
and
loopne
inc
or
dec
push
push
aam
lret
or
jl
push
cs
in
ljmp
ja
pushf
or
pusha
in
jle
and
pop
popa
or
aas
push
sbb
inc
push
imulb
or
jg
mov
lock
jle
scas
jl
sub
xchg
mov
stos
pop
subl
push
das
mov
inc
adc
insb
test
test
jmp
insb
rorb
shl
xor
jmp
ret
adc
xchg
out
xchg
cmp
pop
mov
test
mov
fdivl
mov
mov
data16
mov
out
xor
fwait
jae
jnp
or
xor
ljmp
std
shlb
int
into
fistps
cmp
push
inc
pusha
xor
imul
shlb
dec
aas
cmp
addl
sub
jne
ss
mov
inc
mov
mov
rorb
push
fidivrl
into
mov
pop
and
ret
mov
ja
call
adc
and
pop
das
adc
sbb
push
mov
stos
or
jecxz
add
mov
cmpsl
popa
cwtl
mov
aad
test
xchg
mov
test
sub
xor
popf
mov
arpl
sub
sub
push
ret
mov
lods
or
sbb
sti
sarl
shrl
andl
xchg
mov
repz
mov
push
pop
mov
iret
xchg
xchg
cld
push
cmpsb
pop
mov
cwtl
enter
adc
outsb
adcl
in
pusha
cmp
popa
xchg
mov
aam
js
loopne
xchg
fwait
push
dec
mov
adc
mov
xchg
xorl
xchg
xor
popa
fldl
dec
pop
or
lds
out
es
bound
daa
ja
mov
adcb
cld
cmp
or
xor
or
and
xor
xchg
adc
dec
sbb
hlt
dec
inc
shlb
mov
repnz
xchg
shr
push
xchg
and
lea
mov
sub
add
mov
mov
hlt
dec
sahf
xor
aaa
dec
and
push
movsl
lret
pop
xor
mov
cmpsb
mov
add
sub
push
movsl
inc
dec
sub
sub
sbb
jno
xlat
fs
daa
xor
push
push
jns
xor
fnsave
ds
mov
sbb
add
rcll
mov
clc
ret
pop
cli
outsb
mov
xchg
nop
mov
xchg
fwait
push
xor
or
jno
push
sub
xchg
adc
mov
xchg
add
or
xorb
and
mov
add
sbb
repz
xchg
jbe
adc
jno
icebp
aam
lahf
jae,pt
push
es
add
ss
adc
out
add
hlt
xchg
movsl
pop
rorl
rcll
ja
push
mov
add
inc
out
push
mov
shl
outsl
dec
sarl
cs
sti
inc
je
daa
insl
jl
jl
inc
pop
jae
mov
subb
aaa
lds
jne
adcl
in
adc
rol
jae
shlb
add
push
xor
push
stos
or
fcmovne
push
test
push
sysexit
mov
mov
orb
jmp
sbb
or
adc
push
cmc
sub
in
mov
jmp
jmp
lds
inc
mov
idivb
and
mov
movzwl
xor
add
xchg
xor
xchg
mov
stos
jecxz
sarb
xchg
ja
lahf
mov
xchg
pop
and
les
ret
rcll
pop
jbe
cs
rclb
pusha
mov
cmc
out
lods
jp
xlat
sbb
daa
mov
sbb
mov
lret
cld
movsl
adc
push
test
lret
insb
inc
lea
cmpsl
mov
dec
dec
bound
popa
mov
inc
popa
mov
xor
dec
xor
lods
test
xor
jp
leave
js
cmpsl
jle
and
ja
pop
in
cmpsl
jmp
in
sbb
les
mov
add
mov
add
roll
movsb
xor
mov
cli
jp
out
cwtl
out
xor
lret
int3
cmc
loope
pop
push
dec
adc
mov
pusha
pop
sbb
add
stos
mov
gs
push
dec
xchg
pop
mov
jne
pop
sbb
add
loopne
cmp
mov
add
js
sub
push
loop
xorb
mov
mov
xor
inc
push
dec
xor
fstp
jl
jnp
lods
test
dec
xchg
fwait
movsl
jmp
gs
fisubs
js
mov
sbb
push
lods
fwait
imul
xchg
lea
or
cmp
and
xchg
addl
rorb
pop
sub
sarb
pop
hlt
test
push
cmc
movsl
inc
test
arpl
pop
sbb
or
cmp
jne
iret
lss
sahf
dec
cs
inc
cmpsl
fadds
mov
mov
sub
imul
mov
aad
pop
add
imul
mov
cmp
jno
loope
fildl
incl
aam
imul
jne
lahf
andb
cli
sbb
sbb
xchg
js
cmpsb
mov
mov
paddsw
je
pop
je
xor
pop
out
cmp
cltd
sub
mov
les
or
les
add
shlb
adcl
xchg
lock
jne
mov
sbb
push
aas
xchg
mov
mov
mov
jo
sub
cmc
idivb
test
popf
shll
mov
das
xor
ror
les
dec
jnp
mov
mov
push
dec
pop
or
mov
rclb
mov
pop
xchg
divb
lahf
nop
mov
cld
adc
icebp
lea
stos
xlat
sti
sbb
mov
xchg
and
ljmp
cmp
punpcklwd
ret
insl
dec
rcrb
icebp
cli
lds
lea
jecxz,pt
push
mov
insb
or
daa
ds
leave
test
mov
aas
cmp
rolb
lods
push
dec
stc
push
xchg
cmpsb
jge
sbb
test
pop
lock
mov
cwtl
mov
and
cwtl
jb
xor
inc
cmp
push
enter
cmp
loope
das
js
mov
mov
loop
fld
adc
and
fucomi
pop
outsl
mov
push
aas
test
mov
outsl
imul
mov
mov
das
or
rcl
nop
cmp
mov
and
jmp
loope
mov
adc
and
add
mov
pop
push
push
int
adc
notl
mov
mov
scas
mov
xor
ljmp
insb
test
out
loopne
ja
pop
cmp
aad
inc
xor
aaa
jno
test
dec
int
sbb
insl
cmp
and
out
mov
jg
mov
notb
incb
lock
push
leave
push
andl
jno
cmp
push
mov
xor
xchg
ja,pn
pushf
dec
cmpsb
ss
and
fwait
jbe
lret
jnp
xchg
inc
popa
sbb
jmp
jne
aad
movsl
imul
icebp
jecxz
cmp
or
push
dec
or
addl
push
lods
lcall
outsb
pop
xchg
push
dec
mov
gs
lahf
movsb
mov
push
jmp
dec
jmp
clc
scas
test
imul
or
fmuls
fsubrl
adc
inc
pop
pop
pop
sub
data16
xlat
dec
test
aam
std
out
xchg
enter
shlb
aam
mov
stos
rolb
lahf
lahf
cmpsb
xchg
aaa
mov
lret
mov
loope
mov
mov
dec
pop
or
mov
push
inc
mov
add
mov
rcll
outsl
push
mov
add
adc
push
hlt
dec
dec
insb
sbb
lods
mov
out
je
lods
xor
pop
jmp
sub
pop
xchg
jl
mov
sahf
fmull
pop
push
push
lods
sub
fiaddl
ficoms
or
mov
pop
ljmp
ds
mov
xchg
or
dec
mov
aad
or
das
mov
ja
mov
pop
mov
or
jno
hlt
mov
mov
and
jg
loopne
shrb
sbb
sub
subl
pop
add
sbb
lret
add
outsb
push
ret
je
sbb
out
push
iret
push
mov
push
or
sbb
out
push
jno
std
jmp
inc
add
arpl
hlt
xchg
lret
shlb
pop
adc
or
mov
rcl
xchg
lods
xor
push
and
and
fsubs
push
fisubrl
aad
xor
pop
ret
ds
pusha
filds
test
repnz
aam
mov
popf
jge
mov
mov
jecxz
std
mov
in
pop
lods
insl
or
jbe
cs
arpl
imul
mov
ljmp
mov
in
inc
daa
fdivrs
into
test
jbe
fwait
push
rcr
orl
cs
fs
int3
jg
mov
inc
sbb
lret
cmpsl
push
incl
mov
test
mov
xorb
ja
arpl
mov
scas
jecxz
jbe
das
insb
mov
mov
push
cmp
mov
ret
nop
mov
jbe
enter
cmpsl
test
jp
int3
lods
jecxz
aad
push
pop
das
mov
lock
add
shld
or
xchg
sbb
scas
dec
or
popf
shlb
dec
aas
mov
das
pop
push
push
filds
push
mov
cmp
sbb
inc
cmp
jle
and
jae
add
or
mov
ljmp
push
imul
xchg
mov
inc
push
in
dec
sub
add
hlt
jae
pop
and
cmc
dec
cmpsl
scas
xor
les
adc
popf
ljmp
fadds
xor
divl
jo
shlb
ret
ret
loopne
jle
loop
mov
jae
jp
daa
sbb
mov
repnz
imul
add
jnp
jae
shrb
insb
pop
and
movsl
xor
stos
push
fscale
imul
adc
dec
insb
push
ret
cmp
sub
cwtl
jmp
mov
mov
dec
push
scas
mov
insb
jo
adc
adc
push
sti
imul
adc
xchg
jp
xchg
push
aad
test
mov
sub
sbb
dec
clc
jecxz
add
add
imul
xchg
lret
addr16
push
int3
xor
mov
data16
pushl
and
mov
stos
cltd
shl
out
insl
insl
repnz
xchg
enter
data16
push
dec
pop
inc
jae
add
pop
inc
je
push
pop
aam
jb
dec
cs
push
popa
incb
inc
inc
add
mov
adc
aad
cli
int3
mov
bound
notl
mov
fldenv
mov
or
rolb
xchg
mov
and
loope
push
sbb
cmp
je
insl
in
push
ja
dec
loope
mov
xor
lea
mov
loope
or
add
ror
ja
sub
mov
and
mov
lods
xor
out
gs
mov
push
mov
outsl
push
pusha
and
lahf
ljmp
adc
fwait
push
mov
xchg
leave
mov
rclb
test
and
shrl
or
fildl
aam
lcall
in
aad
push
dec
inc
adc
push
fdivl
cmp
test
mov
das
repz
daa
inc
sarl
xchg
dec
jl
inc
fdivrl
or
pop
out
inc
push
and
mov
sub
movsl
cs
dec
sahf
idivl
sar
pop
fiadds
addl
jp
fcoms
lret
xchg
or
pop
cmp
xchg
dec
sbb
lahf
icebp
jnp
clc
push
aad
call
mov
dec
cmp
out
movsl
mov
adc
scas
pop
cmp
mov
mov
test
push
pop
dec
negl
inc
add
pop
push
daa
cld
cmp
cmpsl
call
into
push
push
out
jo
jb
enter
cltd
aas
insb
cmp
ret
adc
cltd
into
imul
sarb
lock
cmp
stos
sti
jmp
loop
dec
call
jge
iret
fsub
outsb
imul
pop
int3
xchg
push
push
mov
pop
or
mov
inc
mov
mov
adc
das
addb
sti
or
fimuls
cmpsl
add
outsl
movsb
pop
test
inc
imul
mov
mov
dec
add
cmp
inc
stc
ljmp
mov
scas
fdivr
lds
push
xchg
repnz
mov
inc
lahf
mov
inc
cmp
dec
cltd
addb
jecxz
xlat
ljmp
popf
into
push
mul
pop
daa
push
rorb
mov
fsts
mov
push
in
push
xlat
fldcw
outsb
and
xor
pop
int
mov
outsb
push
lcall
cmc
je
lock
fldt
jb
scas
gs
mov
shll
iret
xor
loop
arpl
adc
das
push
icebp
je
sbb
shl
push
sbb
mov
mov
aas
sbb
arpl
push
test
jo
add
add
out
and
daa
jle
mov
push
adc
mov
popa
cmp
into
push
dec
movsb
movsb
mov
jne
mov
std
sub
bound
cltd
mov
loope
adc
and
pusha
cltd
add
imul
in
xchg
dec
pushl
push
decl
pop
add
stc
mov
mov
cltd
std
mov
sbb
dec
dec
fsubr
pop
fistpll
stc
mov
add
int3
xor
stos
sub
cwtl
rolb
out
pop
ds
aaa
cmp
sub
push
push
mov
jne
fsts
int3
int3
adc
push
aaa
stc
push
sahf
insl
jnp
xor
popf
js
mov
js
dec
sub
into
cmp
mov
cmp
imull
insb
inc
bound
dec
and
jle
push
and
add
inc
daa
or
dec
mov
push
sbb
xor
imul
js
daa
addr16
add
xor
cmp
jae
out
inc
jno
je
lods
mov
dec
xor
cmpsb
ja
jae
js
out
mov
popa
jmp
xchg
sbb
ljmp
nop
jp
sbb
mov
add
repz
pop
stos
inc
lock
rcrb
fmul
add
pop
mov
in
test
movsl
jno
mov
mov
cwtl
les
sub
jmp
fldcw
mov
stos
out
inc
jae
cs
jmp
mov
mov
add
das
cwtl
lcall
or
jecxz
in
movl
mov
imul
shrb
dec
xlat
rolb
jge
test
int
push
mov
stc
pop
or
jge
jmp
mov
add
jns
push
fdivrl
mov
xor
pop
inc
mov
cmp
test
insl
mov
imul
inc
jmp
push
xchg
dec
fs
and
push
ljmp
pop
sbb
cwtl
push
outsl
lahf
push
cmp
cmp
loopne
or
ljmp
xlat
lods
and
and
stc
dec
mov
mov
jle
into
sarl
addr16
lods
jmp
xchg
movsl
sahf
ss
test
xchg
repz
jo
lahf
hlt
fsubl
pop
cmp
adc
and
pop
and
pop
fmulp
in
and
insb
xchg
add
push
cmp
inc
orl
divl
mov
jb
and
aas
popf
mov
cmp
jns
inc
call
xchg
je
testl
jge
out
pop
test
ja
lcall
popa
pushf
cmp
dec
xor
xor
lods
sub
xor
xor
bound
iret
mov
js
or
jmp
pop
pusha
dec
push
xchg
xchg
enter
dec
or
push
addr16
sub
xchg
test
int3
pop
pusha
push
mov
insl
jle
adc
pushf
dec
imul
mov
das
pop
and
mov
sbb
inc
bound
fs
cmpsb
push
fs
cli
xor
sbb
pop
js
popf
mov
xor
mov
outsb
fimull
xchg
push
je
add
scas
inc
pop
push
cli
test
popa
cmc
sub
mulb
and
mov
insb
movsl
sub
xor
dec
add
daa
inc
inc
add
xchg
lods
in
dec
xlat
sbb
jno
or
je
or
mov
mov
dec
sbb
lret
fsubs
cld
bound
ja
imul
add
test
or
add
scas
call
test
mov
sbb
adcb
jmp
mov
pop
lret
and
loope
call
sub
repnz
cmp
into
addr16
test
and
lods
push
jo
in
sti
mov
in
xchg
mov
sub
adc
out
mov
les
cmc
adc
test
test
test
leave
lcall
or
mov
mov
lods
jo
fwait
clc
xorl
addr16
jmp
mov
mov
in
cli
int3
xor
arpl
dec
inc
sub
inc
push
cmp
xchg
xchg
jbe
inc
jmp
lds
out
jb
sbb
rolb
inc
imul
out
fdivr
out
xchg
xchg
add
add
pop
fxch
loopne
cwtl
xchg
pusha
aam
or
dec
pop
mov
inc
jno
nop
pop
add
sbb
cmp
cmp
and
movaps
jge
sub
mov
add
pushf
xchg
cmp
str
dec
cld
scas
pusha
mov
sbb
cltd
sub
aad
fsubs
test
subb
pop
xchg
rorb
lcall
push
xchg
ljmp
sub
movsl
jp
mov
sbb
shr
push
mov
or
sub
sahf
jbe
jae
aas
les
testb
push
fcomps
les
add
or
fs
mov
idivl
jns
lret
sub
jnp
cmpsl
xor
aas
test
repz
mov
enter
fcomp
push
jmp
mov
pop
dec
jne
or
test
cmpb
xchg
ds
hlt
lret
jnp
sub
mov
jae
push
mov
iret
sub
fs
jnp
inc
dec
adc
roll
popf
xchg
xor
mov
add
fs
jo
xchg
and
xchg
jbe
lods
pop
mov
jne
out
andl
lods
mov
inc
dec
mov
jae
negb
data16
add
xchg
push
sbb
imul
mov
adc
aad
fnstenv
shl
fcomi
shr
mov
or
push
dec
xchg
test
je
pushf
rcrb
add
pop
pop
test
test
stc
outsl
jne
nop
out
and
insl
in
cmp
xchg
addr16
and
mov
lods
je
fs
mov
out
cmpsb
imul
xchg
xchg
rcl
push
cmpsb
push
push
movsl
aaa
iret
and
jns
ljmp
add
jmp
push
flds
adc
fucomip
dec
out
jnp
jge
test
mov
popa
push
scas
adc
fdivr
sbb
and
in
sbbb
mov
jp
and
jle
adc
sub
aam
fsts
ret
mov
xchg
es
mov
sbb
inc
rcl
mov
sbb
out
jge
mov
push
daa
pushf
loopne
call
ret
mov
call
js
mov
and
sbb
cmp
push
sub
enter
repnz
push
mov
ljmp
cmp
inc
das
push
dec
jns
pusha
into
out
pop
jg
paddw
ja
mov
leave
push
push
mov
lods
cmp
cmp
pop
xchg
mov
lods
mov
mov
mov
or
shlb
cmc
and
jno
add
jle
int
jae
movsb
cmpb
cmp
shrb
xchg
test
sbb
sub
push
lock
xor
push
addr16
int
lods
enter
scas
and
xchg
xchg
jl
lods
push
imul
dec
sbb
stos
lahf
jae
movsb
mov
mov
pop
insl
leave
ficompl
inc
fs
movsb
insl
sub
push
lcall
aaa
push
or
cmp
mov
mov
push
cmp
outsl
sbb
cmp
or
mov
pop
mov
jno
sarl
jle
xor
inc
add
addr16
jg
sbb
inc
das
stos
inc
inc
jne
mov
daa
mov
rcr
lahf
mov
sbb
ret
sub
lds
test
pop
sbb
cmp
mov
adc
inc
push
xor
test
jmp
xchg
lods
sahf
jle
inc
sub
xor
mov
xchg
add
dec
lcall
add
adcb
dec
adc
and
mov
xchg
test
outsl
push
mov
push
in
jge
rcrb
shll
and
mov
push
or
je
in
pop
pop
js
repnz
push
ljmp
pop
cmpb
loop
mov
xchg
into
jns
mov
cmp
cmp
pop
mov
filds
jge
cwtl
insl
aas
sti
repnz
sub
mov
ja
cld
daa
out
or
add
insl
and
js
inc
dec
dec
xchg
mov
inc
shll
push
jbe
ljmp
arpl
cmp
add
popf
rcrl
test
mov
in
enter
jb
int
add
hlt
adc
out
xor
xor
outsl
cmp
adc
push
bound
mov
push
decl
cmp
js
sub
xor
mov
lret
ljmp
add
fisubrl
xor
mov
pop
dec
dec
popf
cmp
aas
jae
jle
ret
int
mov
sub
sbb
xchg
jecxz
add
shrl
xor
test
scas
add
jbe
or
sub
push
test
jo
ljmp
cmc
pop
repz
xchg
xchg
aam
sub
popf
mov
call
cmpsl
cmpsl
xchg
cmp
loopne
add
mov
insb
dec
fiaddl
lret
lock
add
mov
popf
xchg
pusha
push
fldcw
add
test
inc
fildll
mov
cmc
fdiv
dec
cvtps2pd
inc
mov
jmp
daa
sahf
push
mov
push
es
test
fldt
das
dec
mov
inc
clc
push
inc
jnp
push
jle
in
sbb
lds
and
push
or
loope
lock
mov
repnz
adc
xchg
popf
jo
into
das
push
cmp
popf
dec
loope
cmp
mov
stos
mov
std
popa
les
fnstsw
or
jo
adc
inc
popa
jns
stos
and
outsl
adc
jae
mov
test
int3
mov
mov
shl
mov
xor
xlat
push
pop
xchg
aaa
out
ljmp
test
movsb
shrl
iret
scas
into
sbbl
adc
movsl
clc
lcall
mov
lret
jg
pushf
in
stos
jle
adc
aad
mov
xor
sbb
add
xor
aaa
lea
dec
je
cmp
xchg
mov
add
int3
fldcw
and
push
pop
mov
jl
in
mov
rclb
xchg
aaa
mov
pop
jo
lods
push
mov
mov
bound
clc
sub
std
jnp
clc
leave
divl
mov
xor
in
popa
pop
cli
popa
cmpsb
inc
mov
int3
sbb
jle
ret
cltd
out
push
and
outsl
into
sti
mov
dec
sbb
xchg
ljmp
cmp
fisttpll
dec
ds
mov
sub
add
movsb
test
pop
mov
xchg
int3
out
inc
and
je
xor
xor
xchg
jnp
stc
or
pop
or
dec
pop
repz
lods
js
pop
je
sbb
cmc
adc
lods
imull
insb
lds
sbb
pop
fidivrl
fists
cli
xchg
leave
testb
lret
add
popf
loope
jae
cmp
mov
mov
pop
das
lea
push
loopne
xor
mov
xorb
mov
outsb
and
mov
push
and
xchg
js
loopne
shrb
pop
fdivrp
iret
shufps
jle
loope
jns
in
and
pop
scas
es
std
dec
mov
cmpsl
add
lcall
mov
out
xor
mov
add
stos
or
xor
mov
push
jg
rcll
cltd
sbb
pop
test
in
test
cwtl
mov
jmp
dec
lahf
cmp
out
lret
xor
jbe
mov
add
mov
cmpl
mov
data16
jbe
jecxz
xchg
daa
aam
or
lea
inc
sub
test
out
adc
test
dec
inc
popa
cmpsb
fsts
jle
std
andl
clc
dec
nop
sub
cmp
sub
and
ret
mov
stos
cmp
test
mov
xor
enter
out
mov
pushf
aas
cmp
imul
fst
or
mov
clc
mov
sahf
es
imul
or
mov
jne
push
push
xchg
pop
mov
pushf
out
lahf
jp
arpl
pop
or
test
pop
xor
mov
sub
scas
insl
test
jb
aas
lcall
mov
ss
into
pop
push
lea
aas
sub
fsubl
test
dec
in
cmp
cwtl
test
ss
mov
add
jmp
sub
xchg
rcrl
fucompp
dec
push
pop
mov
inc
mov
iret
push
int
push
xchg
jmp
cmp
pushf
inc
mov
dec
leave
push
lock
mov
out
ret
leave
adc
mov
sti
lret
push
add
mov
scas
in
cmp
sti
mov
out
inc
jp
daa
jl
push
fisttpl
iret
add
lods
out
adc
aad
xchg
das
out
aad
scas
cmpsb
pop
jb
in
xchg
mov
cld
inc
imul
test
xor
dec
push
cmp
mov
roll
scas
fnsave
lahf
stos
mov
rorb
sbb
fwait
xlat
lea
daa
or
cwtl
sub
cmp
cmp
sub
lea
in
or
dec
jne
xchg
xlat
mov
sti
xchg
sub
and
mov
push
ret
sub
sti
cltd
sub
xor
fwait
push
push
xchg
fadd
and
adc
mov
xchg
jecxz
out
lret
push
call
ja
rclb
xchg
push
and
sub
dec
xchg
pop
out
cmpsb
scas
stos
xor
repnz
std
mov
lock
inc
je
push
xor
call
rcrb
sub
and
loop
jo
shlb
pop
cmp
mov
lods
pusha
mov
jl
cltd
sbb
stc
mov
out
xchg
stos
lret
adc
daa
fs
cmp
pop
dec
dec
adc
pop
leave
inc
jnp
addr16
adc
repnz
fsubrs
imul
clc
rcrl
push
ror
rolb
and
mov
or
cmp
jge
cmp
dec
mov
bound
sub
and
xchg
mov
arpl
push
fs
cs
int3
sti
xor
cmp
imul
inc
sbb
push
mull
sbb
adc
sbb
movb
adc
lods
loop
outsl
mov
push
loopne
out
adc
pop
or
dec
push
cltd
jmp
add
stc
pop
dec
test
add
fwait
mov
inc
inc
mov
shr
or
mov
clc
jns
push
adc
outsb
cli
xchg
dec
into
loopne
lcall
push
sbb
shll
imull
add
dec
push
or
pop
leave
enter
clc
mov
adc
jl
pop
jp
out
jle
add
inc
lock
in
mov
and
scas
and
in
fsubl
aad
mov
mov
push
inc
add
pop
cld
xchg
or
test
in
adc
jnp
mov
mov
enter
adc
jmp
fnsetpm(287
xchg
xor
out
imul
stc
xorl
mov
jmp
iret
das
in
frstor
es
sbb
jns
inc
test
inc
ja
xchg
pop
test
imul
addr16
mov
push
test
or
or
stos
mov
push
dec
scas
out
sub
mov
adc
insl
mov
jb
or
push
sahf
mov
cmp
add
push
scas
gs
push
aas
xor
inc
xchg
push
repnz
sub
xlat
enter
stos
add
pop
pop
mov
int3
adc
or
adc
std
adc
push
repnz
xor
cld
dec
pop
sbb
fisttpl
fadd
shrl
mov
test
sub
fisubrl
nop
xorl
jae
mov
rclb
stc
sub
sti
dec
test
jmp
pop
mov
rol
stc
mov
in
push
hlt
mov
nop
test
mov
and
jae
int3
in
and
scas
inc
call
call
cmp
andl
ljmp
ljmp
dec
aam
push
sub
push
xchg
bound
ret
daa
pop
ja
jl
xchg
adc
push
shrb
popa
fstps
out
jbe
hlt
push
subl
mov
inc
adc
cmp
jle
dec
adc
pop
mov
call
imul
clc
dec
dec
test
rcrl
hlt
xlat
cmp
push
pusha
and
dec
pusha
leave
std
test
dec
sbb
fisubs
scas
and
mov
mov
shrb
jae
push
push
xlat
mov
xchg
xchg
xorb
add
decb
sub
pushf
sbbl
leave
xchg
lret
fcmove
adc
jno
sbb
lret
pop
sub
mov
mov
cld
inc
les
xchg
daa
fsubrl
mov
xchg
arpl
sbb
ljmp
leave
lock
dec
dec
pushf
cli
pop
adc
jp
mov
add
and
shll
inc
cwtl
mov
xorb
or
cmp
aas
rcl
jle
jo
mov
jns
jg
mov
cmpsl
add
xor
test
and
mov
add
sti
pop
cld
dec
popa
repnz
dec
push
pop
fsubrs
icebp
lds
mov
jnp
loopne
inc
outsl
gs
cmp
fstpt
bound
jnp
repz
mov
xchg
mov
inc
leave
mov
movsl
cld
inc
push
call
dec
push
out
or
les
std
mov
sti
fwait
cltd
sbb
movsl
pop
push
out
lods
arpl
loope
sbb
sub
or
aad
add
mov
lcall
mov
fnstsw
jl
jle
pop
scas
mov
insb
push
cld
cmc
out
or
inc
xchg
cmpsb
jmp
push
mov
adc
xchg
fucomp
jno
std
out
push
mov
bnd
fcompl
mov
test
jl
bound
out
dec
and
vpsubsb
adc
hlt
enter
lret
dec
pushf
xor
push
mov
xlat
test
pop
hlt
mov
fs
xor
pop
mov
or
es
jo
leave
call
roll
inc
dec
les
mov
push
xor
pop
pop
jmp
push
filds
add
mov
jecxz
or
xor
dec
ja
mov
push
dec
xchg
data16
mov
adc
cmp
sub
and
dec
push
mov
inc
adc
push
pop
inc
in
fs
jo
sub
inc
cld
stos
pop
jns
mov
sbb
and
mov
sbb
pop
ja
cmc
fdivrs
rol
push
addl
repz
jb
pop
popf
pop
pop
adcb
dec
add
cs
std
das
push
or
repz
mov
mov
pushf
add
shl
rcr
test
pop
mov
std
gs
mov
movsb
test
inc
mov
loope
lds
sbb
gs
add
aam
popa
test
rorb
out
xor
mov
jl
rcrl
divps
push
xchg
sub
insl
insb
or
mov
out
adc
push
push
add
xchg
loop
xchg
sahf
pop
cmp
cld
test
push
jne
in
sbb
sbb
je
stos
lcall
leave
shlb
sbb
outsb
cmpsb
mov
filds
mov
aas
mov
pop
adc
rorl
add
inc
xchg
jnp
mov
mov
sub
insl
push
mov
dec
fimull
ja
imul
into
pop
int3
dec
dec
rdpmc
stos
xchg
mov
and
addr16
sub
jnp
adc
mov
stos
fcomp
mov
sbbb
lret
xor
pushf
clc
push
shlb
cmp
pop
test
stos
jbe
andl
pop
out
fnstsw
push
cltd
enter
insl
mov
stos
jo
fistps
adc
sti
mov
cmpl
pop
fsub
sbb
and
adc
and
and
mov
icebp
xchg
cld
xchg
shlb
pop
cmc
icebp
subl
mov
ficomps
jmp
cmp
rolb
xorb
icebp
out
lock
sbb
adc
xchg
mov
mov
pop
xor
gs
pop
lret
or
push
mov
sti
sbb
xor
jne
inc
push
rorb
add
mov
or
add
movb
pusha
jmp
mov
pop
scas
pop
sbb
ljmp
jae
mov
or
adc
mov
mov
lds
fucomip
jge
pop
scas
aad
ds
stos
and
rcl
icebp
and
mov
stos
or
ss
data16
jo
test
in
ja
int3
scas
cmpsb
subl
pop
cmpsb
pop
xchg
mov
fadds
aad
scas
jo
jo
adc
pop
cmp
inc
mov
sub
push
stos
add
leave
push
cmp
enter
push
push
mov
sarl
push
xchg
in
cmp
sbb
lahf
and
mov
lea
lds
mov
scas
cmp
add
aam
xor
imul
jmp
dec
xor
or
jg
xchg
sub
inc
sub
and
sub
push
mov
lods
pop
push
pushf
aaa
mov
or
loopne
mov
or
insb
dec
xchg
test
mov
in
and
adc
clc
imull
iret
and
lahf
mov
add
jecxz
repnz
xchg
divl
dec
scas
xchg
enter
out
push
test
xor
lcall
ret
lock
sbb
inc
ret
std
adc
cli
add
fbld
jns
loop
daa
sbb
loope
popf
aas
pop
lcall
enter
lea
inc
cltd
ret
adc
mov
fstl
sub
les
call
jo
imul
bnd
cmp
stc
ja
enter
sbb
dec
xchg
mov
mov
fdivs
frndint
je
add
mov
jb
aam
repnz
xor
dec
and
jae
mulb
data16
push
or
sbb
loopne
sbb
mov
jecxz
push
mov
mov
scas
dec
pop
dec
ret
adc
push
insb
or
sub
insb
mov
sub
jecxz
loop
mov
mov
iret
scas
std
in
out
in
jnp
pop
sbb
xchg
jne
xlat
pop
insb
mov
popa
mov
or
fs
sbbl
and
leave
jno
test
add
adc
data16
or
inc
cmp
xor
mov
aad
daa
in
sub
sbb
dec
add
mov
adc
loop
push
insb
or
inc
in
movsl
xor
in
sbb
das
in
out
loop
movsb
mul
vorps
stos
test
nop
jae
mov
cmp
inc
loopne
mov
cmp
fdivs
fstps
and
adc
add
mov
xor
sub
out
into
pop
xor
das
xor
out
adc
jmp
dec
dec
lock
push
or
jl
aam
addr16
out
in
nop
fdivrs
scas
sub
std
cs
xor
add
es
pop
xchg
jb
xchg
xchg
cltd
das
hlt
sub
xor
jo
dec
sbb
insb
xor
jge
sub
inc
jnp
cmp
mov
mov
ja
push
mov
sub
and
ja
adc
daa
std
jmp
mov
stos
cmpsl
add
add
inc
dec
mov
insl
add
dec
xor
ret
xor
push
iret
mov
jns
fsubr
mov
sbb
insl
dec
push
cmp
add
aas
fistpl
pop
in
out
out
pusha
shll
outsb
notrack
lock
lock
ret
sbb
hlt
mov
xor
xor
adc
jae
stos
addb
sahf
shll
mov
pop
push
add
andl
add
add
mov
out
jl
call
sub
add
xchg
xchg
outsl
xorb
test
movsb
rcrl
lea
xlat
xor
lods
push
push
pop
sub
or
pop
nop
cwtl
mov
inc
inc
xchg
ja,pt
ljmp
stos
arpl
mov
cmp
xorb
aad
xor
and
xlat
shr
roll
mov
sbb
xchg
inc
xchg
mov
sbb
pop
xchg
stos
aas
popl
xchg
mov
fstpl
jne
sub
shrb
shll
jae
mov
or
pop
pop
int
in
xchg
leave
mov
cld
outsl
test
pop
mov
mov
stos
ja
xchg
cmpl
push
aaa
popf
xor
and
leave
sub
scas
jns
in
mov
imul
mov
mov
sti
xchg
ljmp
push
sub
inc
repz
mov
ret
arpl
imul
cld
push
push
out
mov
jnp
push
call
out
sbb
shlb
je
sbb
xor
bound
mov
xlat
repz
pop
xlat
imul
pop
mov
fbstp
xlat
fcmovu
push
xchg
int
sbb
xchg
jge
push
push
mov
sbb
hlt
add
xchg
dec
fnstcw
jno
pop
xchg
jne
push
pop
imul
in
aaa
lahf
push
lods
pop
sarl
cmc
jae
pusha
adc
fdivs
gs
or
in
cli
addr16
stos
inc
jmp
fs
xchg
out
and
addr16
cmc
es
cs
pusha
cs
cld
mov
add
jbe
jmp
jle
cltd
cmp
xchg
cs
mov
insl
jne,pt
arpl
cmp
sub
inc
in
pop
in
inc
push
dec
popf
mov
mov
jge
cli
inc
adc
mov
pop
rorl
mov
int3
test
add
adc
outsl
pop
vmulss
sbbl
adc
icebp
mov
ljmp
pushf
and
jg
or
or
jle
aad
lcall
add
and
je
imul
mov
imul
lea
mov
push
sbbb
test
popa
ret
jmp
sbb
cmpsl
adc
push
sbb
fsubr
je
sbb
or
push
xchg
mov
cmc
in
ljmp
iret
into
inc
pop
lods
cld
js
orb
or
jno
add
addr16
shrb
lret
adc
or
mov
stos
repz
xchg
cmc
push
iret
sti
dec
jecxz
jl
leave
fcomps
daa
movsl
scas
pop
mov
lods
cmpsb
ljmp
or
mov
loopne
icebp
cmp
pushl
test
lock
nop
fcompl
push
fcomi
shl
in
and
scas
cmp
das
or
aas
sti
in
in
pop
xchg
add
test
add
dec
jae
loopne
fisubrs
out
rorl
stos
into
add
sub
shll
and
xchg
sbbb
xor
and
push
mov
inc
jmp
out
xchg
movsl
filds
movsl
push
sbb
loop
pop
push
push
jle
mov
mov
nop
jle
imul
lret
sbb
aam
imull
nop
fstpl
add
mulb
mov
test
or
and
add
xchg
aas
sub
sahf
lahf
xchg
jo
mov
fcoms
jl
sbb
nop
and
aad
push
popa
pushf
sbb
pop
dec
andb
sbb
push
mov
push
mov
out
aad
dec
adc
and
xor
fldt
popa
mov
jo
jo
xor
jb
scas
adc
jmp
ret
test
sub
fadds
aas
pop
mov
dec
daa
lret
jbe
add
pop
data16
push
sub
jo
subl
dec
fcomp
fnstsw
cmpsb
outsb
xchg
xor
push
popa
push
popa
mov
adc
xchg
or
sub
scas
fimull
xchg
cld
inc
mov
fs
fcmovnbe
jge
outsb
adc
test
dec
jp
stc
fcompl
push
pop
cltd
inc
and
add
insb
loope
repz
dec
and
jp
mov
jmp
ljmp
adc
cmpsb
ds
test
addr16
fistpll
dec
stos
mov
rclb
push
lock
mov
sbb
xchg
jb
cwtl
jnp
out
pop
dec
xor
jmp
out
mov
add
call
cmp
arpl
mov
lret
mov
mov
fdivr
jb
lods
jnp
adcl
dec
outsl
xor
or
sahf
loopne
subl
push
cmp
inc
jo
xchg
movsb
xor
sbb
inc
dec
es
mov
jmp
fistpll
and
or
mov
mov
ljmp
cmp
xchg
sub
leave
xor
test
insl
push
jbe
xchg
jo
push
push
mov
test
push
sti
jmp
inc
aad
xchg
sti
cwtl
aas
neg
cwtl
jns
mov
mov
add
out
lret
lcall
imul
lahf
fwait
in
add
inc
or
sarl
daa
int3
push
xor
insl
adc
sbb
in
and
lahf
xor
xchg
pop
shl
add
sbb
push
sbb
sbb
or
and
pop
icebp
fstl
hlt
les
negb
sti
or
bound
xchg
pop
xchg
stos
cmc
fldl
adc
sub
test
popf
test
and
lock
push
jno
adc
cli
test
inc
inc
dec
inc
mov
or
aas
push
and
jno
adc
loop
sbb
push
or
mov
lret
into
hlt
mov
push
rcll
jns
add
mov
or
ret
xlat
jp
imul
pop
xchg
pop
addl
std
cltd
push
push
jmp
sbb
notb
add
sbb
sbb
xor
fbstp
sahf
lcall
fsubrs
xor
outsb
lea
jo
sbb
push
sbb
push
jae
pop
mov
insl
daa
loope
mov
dec
sbb
inc
adc
jae
jge
cmp
in
cmp
mov
and
lea
test
popa
mov
mov
mov
rol
fwait
push
add
xchg
ljmp
into
in
nop
out
cmp
lret
push
adc
push
fs
fs
adcl
push
cmpb
jmp
test
cmpsb
xor
stos
mov
pop
iret
je
add
in
out
lar
out
xchg
sbb
mov
pop
fdivrp
cmp
into
xor
fwait
jne
testb
xchg
repz
pop
dec
mov
xchg
into
sub
nop
add
jo
aaa
into
sahf
testb
jecxz
enter
out
pop
lods
jae
repz
in
add
mov
dec
mov
push
mov
cmpb
xor
mov
sub
aas
mull
lds
repz
clc
jo
cmp
lods
pop
cmp
sti
rclb
mov
stos
repnz
pop
fdivp
xchg
insb
scas
insb
ljmp
dec
xor
aaa
cmp
cltd
xchg
sbbb
sbb
cmpsl
fcoms
aaa
fmull
push
call
pop
lds
pop
mov
aad
paddsb
je
call
aad
mov
insl
leave
inc
negb
scas
xchg
sbb
xor
aad
mov
inc
scas
mov
mov
loope
xchg
outsb
sub
inc
das
aaa
xchg
or
cltd
mov
pop
sbbb
incl
mov
fnstenv
popa
cmp
clc
mov
mov
es
hlt
jmp
or
mov
out
andl
and
sub
ret
test
in
mov
arpl
push
sbb
push
sbb
out
ja
fs
xor
andb
jae
aaa
pop
push
mov
adc
pop
mov
js
scas
aam
mov
lock
call
push
pop
shll
push
adc
into
lods
push
xchg
jno
popa
sub
pop
xchg
xor
ficomps
nop
aad
pop
pop
push
push
sub
sub
shrb
xchg
hlt
xor
aad
pop
test
sti
les
mov
or
lods
inc
imul
imul
stos
sahf
test
jl
xor
fcompl
leave
stc
sbb
setl
fldt
and
cld
movsb
pop
lret
scas
cmp
idivb
xor
dec
xlat
or
imul
test
sub
or
mov
mov
xchg
or
cmovl
pop
inc
pop
lock
sub
std
dec
jge
mov
jmp
sub
addb
xlat
mov
dec
mov
adc
sub
dec
and
lods
in
pusha
repnz
inc
mov
and
cwtl
test
std
jle
mov
mov
ret
mov
add
xor
sti
mov
out
sub
sbbl
test
mov
cmp
call
loop
add
syscall
jg
jg
cltd
add
mov
mov
ret
orb
repnz
mov
pop
and
aaa
push
aaa
ret
popf
and
jo
dec
aad
and
pop
repz
lcall
scas
shll
ljmp
xchg
xor
mov
insl
lret
in
adc
add
popa
shlb
mov
pop
mov
xor
or
test
sti
test
test
js
aaa
out
stos
sub
fwait
dec
fidivrs
xchg
fidivs
push
jge
cmp
mov
aaa
sub
cmp
ljmp
adc
vucomiss
mov
cs
inc
push
inc
xchg
daa
inc
mov
aaa
dec
mov
inc
push
sbb
dec
testb
jnp
add
ficompl
je
vmovups
cmp
ret
inc
push
je
mov
bound
and
inc
jae
dec
push
stc
divl
rclb
imul
fadd
fwait
sbb
xchg
enter
jnp
or
mov
pop
mov
and
push
cwtl
xor
mov
push
inc
sub
lock
aaa
push
or
in
outsl
subb
lods
add
fsubrs
movb
push
andb
cld
fists
sub
fildl
fstp
pusha
insb
jle
push
xchg
push
sbb
divl
adc
inc
stos
lcall
jne
pop
xchg
pop
lcall
aas
pop
and
jge
ss
mov
leave
xorl
xchg
sbb
pop
pop
pop
xchg
ja
jo
or
mov
fwait
lock
notb
xchg
call
xchg
xchg
jmp
lds
inc
popf
add
dec
inc
repnz
arpl
out
ret
bound
repnz
sahf
xor
cmp
xor
sbb
or
inc
or
dec
scas
insb
or
lea
cmp
sub
pop
cli
rcll
and
in
mov
inc
lret
outsl
hlt
fmull
sub
out
pop
dec
popa
ja
xor
shlb
xorl
jmp
sti
lret
sbb
push
cld
adc
out
xchg
mov
and
mov
mov
icebp
or
in
cmp
fwait
loop
xchg
mov
sbb
jle
pop
inc
dec
adc
dec
mov
pop
loopne
clc
shrb
call
loopne
in
xchg
rcr
loope
test
and
or
or
sbb
pop
push
mov
inc
pop
or
je
sbb
imulb
lahf
ljmp
sahf
adc
mov
inc
movsl
adc
aam
in
aas
mov
push
adc
lahf
pop
lea
mov
or
out
cs
les
mov
xor
int
neg
dec
decl
mov
mov
insl
sub
in
imul
dec
hlt
jno
mov
lcall
aaa
pxor
xorb
std
fcmovnbe
daa
jmp
xchg
cmc
and
imul
das
cmp
push
inc
fidivrl
mov
sub
xchg
dec
cwtl
adc
cmp
cs
mov
cmpsb
cli
jnp
imul
add
jnp
sub
ret
cltd
rcl
sbb
into
insb
or
es
fldt
pop
cwtl
xor
or
cmp
and
xor
inc
les
orl
mov
mov
and
push
outsl
dec
jnp
aaa
add
pop
pop
mov
aaa
aas
mov
idiv
push
lahf
xor
repnz
aas
aaa
xor
push
shll
jge
fidivrs
xchg
pop
or
or
shll
scas
aaa
xor
into
xchg
hlt
cmp
pop
popf
add
mov
pop
aad
jp
jae
cmp
adc
rcrb
xchg
or
ret
push
movsb
test
xor
gs
in
mov
jbe
xchg
loope
cli
cmp
in
or
lret
mov
jbe
fdivr
mov
fs
idivl
mov
add
inc
dec
test
mov
and
push
mov
popa
mov
xor
mov
mov
outsb
cmp
iret
fs
lcall
add
lcall
sub
cmc
dec
cwtl
movsb
incb
es
jl
je
sti
mov
adcl
loope
dec
test
mov
ja
cmc
testb
pop
cmp
push
fwait
mov
loope
flds
insl
mov
xor
pop
add
pop
mov
stos
ret
sti
and
dec
ljmp
cmpsb
jns
dec
sbb
lea
cmp
add
mov
adc
mov
fld
push
les
jns
push
dec
or
xchg
mov
jecxz
testb
clc
insl
insb
or
rcrb
xchg
ror
ficomps
xchg
sub
imul
test
iret
and
sarl
scas
repz
xorb
dec
dec
sub
inc
mov
idivb
test
aas
mov
adc
pop
cmpsb
dec
xorl
jb
adc
rep
arpl
ret
push
jp
cltd
cmp
push
fs
lcall
hlt
pop
xlat
dec
add
sbb
jmp
loop
jb
cmp
pop
arpl
xchg
adc
dec
dec
adc
cmp
push
sub
mov
jg
stc
sub
addr16
arpl
rorb
push
les
fldl
pop
or
cmp
bound
lea
push
and
in
shlb
test
mov
mov
fdivs
lods
pop
rorb
movsl
xchg
inc
ljmp
sub
cld
mov
xor
lahf
xchg
imul
roll
je
aas
mov
xchg
ret
mov
adc
and
lahf
ss
out
cmp
pusha
xchg
call
imull
mov
and
mov
cmpsl
adc
push
adc
adcl
and
hlt
repz
sbb
stos
test
mov
es
mov
iret
test
sbb
mov
and
stc
or
push
je
push
outsl
add
rcl
mov
push
sbb
xchg
jae
scas
push
hlt
loope
pop
dec
int3
mov
pusha
mov
pop
xchg
inc
jmp
scas
mov
and
cltd
jb
mov
in
cld
out
ficomps
xor
outsl
dec
pusha
jle
xchg
gs
pusha
outsb
cwtl
fiadds
adc
push
loop
icebp
data16
sahf
jno
jg
dec
fdivl
mov
dec
and
push
aas
les
push
dec
clc
notb
xor
jmp
pop
scas
push
xlat
in
lock
jecxz
push
sahf
push
xlat
cmc
fsubl
fs
je
xchg
xor
lar
push
mov
ja
and
inc
cmp
sub
xorb
ret
jl
loopne
adc
push
nop
fsubrl
sahf
cmp
pop
add
cltd
or
adc
pop
movsl
gs
movl
addr16
or
js
fsubs
dec
les
pop
jae
jecxz
mov
and
pop
sub
insw
xor
cmp
xchg
add
jne
pusha
pop
call
lcallw
adc
or
sahf
aam
dec
adc
inc
movsb
pop
cmp
mov
out
xchg
mov
lcall
lods
pop
ss
jae
sub
mov
push
fnstenv
jb
mov
jo
xor
or
pop
scas
jno
mov
aad
cwtl
gs
in
mov
add
push
lret
lahf
inc
rol
mov
aam
fwait
out
ret
mov
ds
mov
xor
icebp
push
xchg
ret
pop
fcomip
jp
mov
or
cld
or
dec
pop
in
mov
pop
cld
rolb
pop
adc
pop
or
and
jge
xlat
pop
pop
enter
test
clc
jmp
gs
insb
rcrb
jl
mov
jmp
dec
pop
decb
mov
fmuls
es
incl
cltd
movl
and
and
and
ret
inc
dec
lds
mov
jmp
mov
xor
xchg
xor
insl
inc
adc
inc
add
aad
adc
mov
daa
inc
in
jo
jp
cli
ljmp
bound
jb
dec
insw
int
xchg
mov
jbe
test
push
push
jns
push
test
out
int
inc
subl
push
push
loope
js
fimuls
cmp
lret
in
lret
xor
mov
dec
sub
in
adc
add
push
xchg
loope
frstor
inc
jbe
fwait
xchg
cmp
lock
sbb
add
fldt
adc
test
xchg
xorb
fsubl
js
and
fs
dec
ret
addr16
cmpsl
and
jmp
push
shrl
aam
inc
mov
sbb
popa
or
adc
adc
mov
negb
addb
adc
jecxz
inc
fiaddl
or
xor
andl
lahf
sub
in
mov
lea
mov
sub
aaa
and
sub
mov
mov
jns
mov
mov
test
push
mov
int3
fldt
dec
gs
aaa
push
xchg
inc
lods
xchg
jecxz
rcll
lea
imul
xchg
ss
push
dec
cmp
jno
mov
jo
pop
jnp
jecxz
push
stc
or
ret
mov
test
mov
fidivrl
add
divb
testl
add
test
and
movsb
sbb
sbb
lcall
add
idivl
jp
pop
nop
mov
movsl
in
or
iret
mov
mov
stc
xlat
stc
ljmp
lds
sub
outsl
xchg
inc
nop
sti
jo
test
es
inc
push
or
imul
or
outsb
add
adc
inc
cli
or
mov
dec
xor
decb
pop
dec
imul
sbb
dec
cmpl
lahf
ja
cmp
add
cmpsl
push
insb
pop
nop
shufps
aam
sub
addr16
std
and
push
mov
ret
stos
mov
push
popa
jecxz
add
and
test
push
jle
incb
dec
sub
repz
xchg
loopne
and
int
sbb
lds
mov
push
inc
out
xchg
lods
dec
sub
leave
mov
stos
mov
add
sub
in
pop
scas
pop
xor
in
insl
into
push
mov
leave
daa
cmpsb
and
or
inc
mov
cld
ficoms
mov
jp
iret
stos
lcall
insb
sahf
fs
push
sub
or
add
adc
jmp
push
shll
lock
or
mov
dec
xchg
jbe
mov
sbb
sarl
decb
jp
add
and
pop
es
imul
cmpsb
int3
js
mov
add
mov
cmp
das
imul
daa
push
out
data16
and
enter
imul
cmp
imul
mov
jge
enter
clc
mov
inc
mov
movsb
xchg
sbb
lock
arpl
fiadds
cmp
cmpsb
fcoms
push
stos
cli
or
or
push
jae
movsb
sub
cmpl
xchg
aad
inc
es
push
shl
push
cmp
pop
mov
dec
in
sarl
pop
sar
dec
out
pop
jp
repnz
repnz
mov
in
iret
insb
xchg
and
outsb
repz
inc
repnz
inc
je
sbb
int3
ljmp
jb
cli
pushf
jge
xor
mov
dec
ret
mov
push
adc
adc
push
mov
cmp
jbe
push
lock
mov
push
ljmp
dec
fwait
xor
lds
test
mov
push
sbb
and
movsl
shlb
adcl
xchg
push
stos
aaa
dec
outsl
xor
xchg
xorl
ret
jge
out
lock
dec
mov
adc
inc
rorb
jbe
pushf
push
xor
pop
jnp
sbbl
mov
cmp
mov
and
sub
jno
std
mov
fs
push
mov
and
xchg
outsb
xor
xchg
or
out
inc
add
inc
jnp
dec
shrl
push
mov
sub
and
push
push
or
lret
jle
xchg
daa
or
lahf
shll
icebp
insl
mov
stos
and
lea
dec
pop
frstor
lds
push
xchg
cmp
mov
add
bound
sahf
cmp
inc
sbb
pop
bound
ss
addr16
mov
jl
push
xor
stc
scas
imul
scas
dec
or
jns
xchg
lcall
je
cmpsl
and
push
out
pop
orb
pop
sub
inc
dec
mov
fmulp
sbb
andl
adc
scas
cs
dec
mov
mov
clc
mov
rcl
sub
insb
ret
push
aas
lock
jne
ljmp
and
push
fsubrl
push
dec
iret
ret
lret
xchg
dec
xor
sahf
xorb
dec
inc
pop
je
hlt
cs
cmpl
cmpsl
jne
adc
pop
and
and
sub
and
pop
ds
je
jle
cmpsb
lods
jge
push
and
jbe
ja
shrb
inc
mov
ds
add
mov
nop
in
jecxz
xchg
add
mov
mov
jb
push
test
enter
sti
leave
mov
ret
mov
hlt
sbb
mov
flds
adc
mov
fistpl
mov
push
test
mov
loop
cmp
push
cmp
out
jge
adc
jg
mov
hlt
and
fistl
aaa
add
ficomps
js
mov
out
xor
cwtl
daa
jo
pushf
cwtl
sbb
out
bound
xchg
pop
pusha
sbb
inc
test
jmp
loop
ret
aaa
or
mov
movsl
add
push
dec
sbb
add
icebp
pop
jle
sbb
addl
lock
xorl
or
outsl
inc
push
sahf
inc
xor
jno
push
push
shlb
sub
rclb
mov
push
dec
dec
mov
push
cli
lock
call
clc
test
lret
rcrl
lret
sar
push
mov
fldcw
lock
fisttps
fisubrs
mov
clc
xchg
fs
cmp
pop
pop
insl
inc
insb
test
in
cmp
lret
ja
add
pop
ja
and
notl
xchg
in
aaa
cmpl
stos
xchg
pop
adc
cvttps2pi
outsb
sti
mov
in
jo
push
loop
or
in
pop
pop
push
mov
add
jo
jmp
notl
out
cmp
cs
imul
xchg
cmpsl
mov
mov
lahf
mov
pushf
push
je
enter
sub
aam
jmp
fcoml
cs
jo
into
pushf
push
mov
adc
adc
sbb
push
sbb
clc
popa
iret
dec
ss
mov
outsb
mov
daa
sbb
scas
ja
pop
jmp
xchg
ja
es
popa
ret
pushf
outsb
xchg
dec
int
mov
stos
pusha
test
cwtl
xchg
mov
cmc
stos
jnp
out
mov
mov
ret
inc
xor
inc
pop
lret
push
dec
inc
inc
lods
xchg
dec
pushl
mov
add
js
fcom
mov
movb
mov
in
movsl
push
int
add
xchg
and
loop
popf
movsb
xchg
or
sti
mov
mov
mov
pop
adc
mov
jmp
push
subb
or
aas
bound
push
in
orb
cmp
and
pop
cmp
sub
xchg
cltd
pop
out
lods
xchg
adc
test
and
push
lahf
sbb
bound
fisubl
push
push
out
cmp
jp
std
hlt
mov
xchg
pop
and
aam
cmp
aas
decl
xor
sbb
outsl
xchg
testb
addl
mov
sbb
sahf
pusha
jl
lods
lahf
push
fsincos
add
pop
je
fistpll
xor
cmp
insb
insl
xchg
sbbb
test
pop
cld
mov
push
push
lcall
xor
inc
cmp
daa
xchg
cmp
hlt
mov
cmp
adc
jo
imul
ret
and
and
movsb
mov
loopne
xor
or
andl
fisubs
xchg
jmp
mul
scas
xchg
std
out
push
mov
jo
imul
mov
in
fdivl
gs
js
sarl
adc
xchg
iret
ljmp
mov
mov
jnp
ss
jno
int3
js
sbbb
pop
cmp
lods
xor
icebp
insb
xchg
adc
lahf
jns
mov
fwait
iret
push
sub
dec
mov
push
sahf
fdivl
pop
jae
rol
cs
jne
push
test
push
ljmp
adc
repz
adc
nop
mov
mov
push
inc
pop
xchg
jo
test
dec
push
fwait
mov
jl
push
sbb
fcomip
gs
add
jg
in
fld
jl
pop
pop
push
sbb
pop
xor
lret
pop
fsubrs
cwtl
int
testl
test
fs
push
les
out
cld
shrl
bound
js
sub
xchg
mov
mov
mov
push
or
sub
cmp
push
pop
movsl
nop
adc
ret
icebp
mov
ret
cli
and
xorb
mov
jmp
out
lods
mov
lods
and
sbb
sub
aaa
sbb
fs
jo
mov
mov
mov
and
mov
pusha
in
aaa
adc
ret
ret
loope
popa
imul
inc
xchg
sbb
insl
loopne
mov
or
pop
xchg
out
cmp
test
sub
mov
rcrl
pop
xchg
and
rcll
lds
mov
sahf
into
sub
repnz
movsl
xor
xor
fsubrs
xor
arpl
cmp
or
jae
adc
aam
xor
pushf
sub
mov
sbb
xor
ret
mov
sti
cli
mov
push
int
and
jae
sarb
sbb
pop
add
enter
ds
fmuls
xchg
xchg
xor
cmp
stos
test
stos
mov
sarw
sahf
fnstenv
or
and
out
or
jp
ficompl
add
mov
push
movsl
cmp
cmp
loopne
mov
sub
jg
shlb
mov
push
out
jbe
pusha
mov
mov
push
mov
int3
jg
inc
sbb
in
imull
repz
or
ret
inc
xchg
inc
rcll
pop
pushf
push
sti
cmp
xchg
mov
pop
xchg
adc
and
push
xor
adcl
lds
adc
mov
push
jecxz
adc
fiadds
sub
inc
pop
pop
shrl
mov
out
mov
xor
clc
jl
test
scas
data16
dec
rcll
test
xor
jae
xchg
cwtl
mov
cmp
adc
fcmovne
pop
mov
adc
jp
dec
scas
push
pop
sub
popf
xchg
mov
mov
mov
fcomps
inc
push
and
into
inc
push
or
and
add
adc
out
sbb
pop
lret
xchg
ja
repnz
subb
mov
and
mov
fidivl
addb
xchg
push
aad
fistpl
push
cmp
loopne
aaa
stos
dec
repnz
out
xor
rcrl
jge
js
adc
clc
sbb
inc
adc
push
add
jmp
insl
jg
or
mov
fdivr
jmp
xchg
int
sub
jmp
or
push
xor
inc
cmp
ret
sub
sbb
iret
in
mov
xchg
xor
roll
pop
std
dec
jb
mov
inc
mov
xorl
stc
xor
inc
fbstp
and
xchg
aas
rcrb
inc
dec
subb
aaa
push
ja
jne
jge
or
jle
sub
cmp
mov
scas
pop
mov
outsl
scas
test
jmp
and
sub
xor
lds
cmpb
icebp
jg
scas
cmp
jns
icebp
les
xchg
lret
jecxz
cli
jge
sahf
or
cmpsb
ret
jnp
mov
les
mov
insb
rcl
rolb
inc
mulb
xchg
xchg
xor
or
outsl
pop
adcl
lahf
mov
cmp
mov
push
enter
xor
loop
dec
sbb
lods
mov
pop
dec
jae
adc
push
pusha
or
loopne
lcall
sbb
jb
sti
int
pushf
rcrl
daa
movsl
gs
rcrb
cmp
shrb
setge
rcr
push
sbb
adc
lods
mov
dec
loop
sbbb
jo
push
psrld
mov
mov
js
cmpb
shll
shrb
out
mov
xor
xorb
sbb
lds
inc
dec
sahf
not
add
mov
push
int3
hlt
fdivrs
jmp
jecxz
adc
into
stos
xchg
mov
mov
adc
pop
xorb
xor
mov
mov
add
dec
xchg
inc
aas
fwait
pop
and
fwait
xchg
xchg
push
fsubrs
adc
xchg
icebp
insb
mov
jmp
lcall
aam
out
loopne
adc
inc
pop
repz
mov
and
movsl
xchg
jae
push
icebp
lock
bound
push
imul
lahf
arpl
add
or
jno
pop
cmp
in
scas
leave
pop
mov
mov
mov
outsl
in
add
xchg
stos
cld
ljmp
push
pop
mov
mov
jns
inc
das
movsb
and
fsubr
or
dec
dec
xchg
ficompl
fadds
cmpl
adc
sub
xor
pop
add
inc
iret
mov
aam
pushf
or
and
lret
scas
cmp
inc
push
dec
sub
xchg
adc
aaa
fsubr
mov
test
pop
cmpl
test
cmc
fisttpll
sbb
lods
mov
add
adc
je
stos
popa
inc
mov
cmpsl
xor
adc
imul
push
pop
push
das
and
mov
mov
dec
push
es
cmp
dec
sbb
mov
sub
sub
mov
sbb
adc
fstpl
int
sbbl
insb
inc
cmp
iret
mov
shlb
adc
jb
into
gs
inc
xchg
into
callw
pop
mov
sbb
imul
loop
jns
lock
sar
test
cmp
lds
push
jns
jmp
rorb
data16
jo,pn
add
mov
popf
inc
in
xorb
xor
mov
mov
add
fimull
insb
pushf
dec
inc
fsincos
iret
enter
ljmp
cs
ret
lock
adc
inc
negl
inc
mov
push
out
add
dec
in
xlat
push
inc
imul
or
je
adc
jbe
hlt
cltd
adc
inc
scas
jge
mov
insl
ds
fimuls
dec
mov
mov
push
adc
jecxz
pop
mov
jge
stos
and
ret
shrl
scas
jge
inc
shl
mov
stos
rorl
hlt
jno
mov
loope
and
test
inc
mov
or
push
sbb
jmp
and
sarl
adc
xchg
adc
daa
mov
jnp
cwtl
sub
xchg
test
add
loope
xchg
pop
mov
adc
cli
imul
add
call
loop
je
repnz
cmp
push
xorb
cmp
imul
mov
or
add
mov
int
test
cs
mov
clc
lods
adc
lods
stc
xchg
mov
and
sub
xor
addr16
or
cmpb
sbb
stos
leave
push
dec
or
icebp
sub
add
inc
mov
add
inc
test
std
imul
xor
adc
arpl
mov
push
ljmp
pop
fsubrp
data16
adc
cmp
loope
mov
mov
nop
xchg
sbbb
popf
insb
push
out
cmp
in
cmp
xchg
xchg
pop
or
dec
pop
mov
in
insb
xchg
sub
xor
xchg
idivl
jo
lods
mov
inc
mov
movsb
mov
xchg
jne
or
in
mov
or
call
adc
add
or
stos
imulb
sub
or
xor
pop
jo
popf
jo
push
add
pusha
hlt
fnstsw
lret
movsl
adc
xor
aad
movsb
jnp
xor
scas
jb
mov
jne,pt
sub
iret
ja
loope
dec
add
ja
icebp
lret
daa
pop
xchg
fidivl
dec
insl
cli
pop
outsb
imull
outsb
sbb
lods
pop
shrb
daa
mov
jmp
lea
or
jns
das
push
sub
seto
sbb
mov
push
in
lcall
xlat
lahf
add
insb
ds
loop
xor
test
fdivrl
mov
mov
stos
dec
data16
fistpll
xchg
ss
ss
dec
xor
or
adc
add
dec
test
inc
lock
jno
out
outsl
aaa
movsl
sub
jae
sub
inc
add
aam
popf
xor
add
and
xchg
and
and
iret
cmp
js
mov
mov
mov
aas
dec
cwtl
aaa
leave
cltd
xchg
aad
icebp
aas
cld
jne,pt
sub
xorl
pop
pop
mov
lock
test
cmp
into
jns
dec
mov
les
sbb
pop
cltd
ret
inc
pop
ret
add
adc
mov
adc
mov
or
pop
and
lret
jg
pop
mov
in
das
and
xchg
cmp
sbb
sbb
movsb
stc
cli
xchg
popa
call
pop
add
mov
lcall
pop
imul
mov
jno
mov
xlat
sub
ror
pop
mov
out
cmp
orl
stc
dec
mov
or
pop
inc
aas
jecxz
ficompl
inc
push
push
je
inc
shrd
pop
sub
push
mov
pop
loop
loop
lods
jne
fsts
cmp
xchg
push
bound
pop
daa
ja
test
and
add
fistpl
add
adc
outsl
and
js
fcompl
jbe
cmpsb
lcall
sbb
shrl
inc
lret
xor
pusha
shrl
movsl
push
in
mov
jp
sub
popa
xor
stc
mov
jmp
sub
push
enter
mov
int3
push
scas
out
cmp
fisubrs
mov
mov
daa
cmp
or
mov
lret
leave
in
nop
cmp
inc
mov
enter
dec
jp
lret
jae
fisttpll
int3
add
pop
xor
aaa
cmp
jae
adc
sbb
scas
ljmp
cmp
cmp
scas
adc
cmp
adc
fucom
pop
popa
rcrl
loope
bound
push
lret
jno
pop
xor
mov
sbb
xor
rcrl
sub
cmp
xor
icebp
and
sub
mov
int3
push
aaa
es
popf
ret
bound
push
dec
jne
int3
popf
dec
inc
inc
lret
shlb
add
xor
outsb
sub
add
es
fs
jle
out
lock
and
xlat
mov
mov
add
je
adc
add
xor
out
jno
jle
jnp
jecxz
lahf
in
ret
dec
ljmp
imul
out
xlat
cmp
push
lret
out
cmp
lods
dec
xor
inc
aaa
dec
pop
lods
hlt
pop
cld
mov
aam
ret
mov
out
push
xor
lock
or
int3
inc
push
call
rolb
and
fiaddl
pop
sbb
sahf
sbb
adc
stos
movl
movb
fisubs
push
sbb
flds
adc
andl
cmp
pop
and
movsb
mov
imul
inc
pusha
pusha
call
imulb
xor
cmpsb
je
pop
jge
cmc
sub
in
sbbl
fildl
cmp
ret
sbb
pop
mov
mov
lea
shlb
jb
or
inc
mov
int3
adc
jle
scas
push
dec
test
out
ficoml
push
scas
dec
mov
pushf
sbb
sub
leave
inc
clc
adc
test
loopne
fidivl
pusha
pop
pop
lcall
cmp
pop
and
push
xor
divl
add
xchg
or
or
fwait
sub
cmp
std
mov
aas
push
and
sub
call
lret
push
and
jno
xor
dec
xchg
out
lahf
das
sarb
add
and
pop
cltd
les
aam
je
outsl
stos
pusha
xchg
test
sbb
sub
xchg
mov
sahf
les
xlat
rorl
add
aas
movsl
int3
push
or
lea
mov
out
dec
add
sbb
xchg
pop
mov
mov
scas
xorl
xlat
bound
in
xor
test
cld
push
or
push
cmp
das
das
pop
shlb
aas
adc
jp
decb
fwait
jno
out
xor
mov
pop
mov
dec
sub
in
imul
mov
insb
dec
push
add
pop
sub
mov
mov
sti
int
mov
orl
test
push
xor
xor
mov
push
pop
dec
dec
enter
icebp
into
push
ret
cmp
jnp
xchg
dec
lcall
insb
movsb
cmp
lret
jmp
iret
icebp
cld
pop
into
inc
lock
push
push
out
js
add
repnz
arpl
das
mov
lret
rorb
cld
xchg
lret
and
shll
aas
mov
shrb
mov
insl
test
adc
dec
testl
jno
test
push
loopne
shr
mov
push
sti
push
inc
aas
adc
enter
gs
mov
scas
push
dec
push
mov
cmp
enter
and
push
or
inc
and
xor
mov
cmp
and
inc
lea
sarl
and
jecxz
out
mov
sub
enter
bound
jbe
pushf
xchg
xlat
mov
push
inc
mov
shrl
xchg
std
pop
mov
or
cmp
movsb
ds
cmp
repz
push
fsub
clc
testb
jno
xchg
jnp
hlt
lds
daa
test
pop
jae
insb
xorl
sub
movsb
popaw
xchg
shll
and
mov
int3
jne
pop
cmpsb
sbb
mov
jbe
mov
call
sbb
cwtl
fwait
es
pop
hlt
pop
push
hlt
mov
cmpsl
dec
mov
das
icebp
bound
lret
xor
insl
out
aaa
rcrl
incb
int
gs
and
sub
les
cmp
pop
ja
nop
mov
add
cli
cmp
and
fdivrl
outsb
push
mov
cmpsb
pop
adc
xor
aad
inc
push
jmp
fwait
adc
icebp
or
in
mov
movsb
jno
orl
jecxz
fwait
mov
stos
xchg
mov
push
mov
xor
sub
fs
pop
fnstcw
mov
sbb
rol
sub
adc
iret
enter
push
ret
pop
std
mov
pop
sub
mov
icebp
out
cmp
test
push
mov
aaa
push
sub
adc
mov
pushf
cmp
arpl
push
outsl
insl
pusha
outsw
push
fisttps
stos
in
push
test
mov
nop
add
loopne
jb
aaa
mov
jno
sbb
ss
pop
push
and
out
nop
loopne
jnp
clc
dec
add
adc
daa
inc
imul
jg
cltd
sbb
nop
pop
pop
aad
push
jbe
lea
scas
xchg
fcos
lret
mov
inc
outsb
sbb
push
aad
popw
sar
or
mov
andps
lahf
jl
lods
lods
xor
dec
mov
fcmovu
xor
pop
add
nop
push
jle
or
sbb
adc
rclb
cs
inc
aaa
pop
mov
fwait
xchg
xlat
mov
cltd
xchg
cli
mov
popf
jp
aad
cmc
cld
inc
fstpt
bnd
cmc
in
jo
int3
dec
stos
ljmp
imul
jg
sbb
es
lds
lea
lds
mov
mov
sub
stos
ss
and
sbb
or
cmp
and
or
xor
cmp
das
jge
mov
pop
negb
xchg
xchg
sbb
imul
cmp
xchg
push
jge
adc
mov
pop
jnp
lds
rclb
pushf
push
add
int3
mov
fcom
fisttpl
stc
or
lds
jmp
xchg
add
daa
and
xor
fs
pop
pop
fdivrs
out
popf
icebp
add
data16
js
inc
push
jno
push
lret
sahf
sbb
icebp
mov
shlb
call
aaa
adcb
inc
movsl
icebp
xchg
push
and
jl
sbb
sub
lahf
jbe
lret
sbb
mov
lret
dec
pop
nop
out
jg
lcall
shrb
imul
cmpsb
mov
sbb
pop
mov
lcall
sub
xchg
imul
xor
sbb
mov
xor
xor
jg
cmpsl
cld
pop
sbb
jmp
ss
and
cltd
inc
mov
stc
xor
xorb
dec
inc
sbb
push
mov
js
aaa
mov
cltd
fdivr
jecxz
flds
sbb
sub
std
and
je
adc
and
mov
jns
pop
lcall
divl
fsubrs
fstpt
aam
push
mov
test
in
sbb
adc
cld
movsb
fistpl
xchg
mov
and
sbb
fstp
imul
pusha
fcmovbe
jb
das
in
adc
sub
pop
decb
js
je
andb
inc
mov
pop
clc
or
cmp
push
push
cltd
leave
mov
jmp
inc
call
jns
add
call
ficoms
jo
xchg
inc
int
push
popa
jmp
int
adc
pop
arpl
fadds
in
mov
orb
ja
cmp
inc
or
imul
out
movsl
and
fnstenv
push
icebp
lcall
int
hlt
xorl
les
mov
test
rolb
dec
out
sbb
dec
jecxz
dec
pop
inc
pop
lea
mov
ret
mov
mov
jmp
dec
imul
scas
mov
xor
cmpsl
outsl
jle
mov
call
xchg
fcmovb
pop
dec
sub
insl
sub
enter
pop
lods
rclb
insb
jb
add
mov
mov
mov
repz
leave
jno
push
cmp
hlt
movl
loop
in
cwtl
lret
mov
jns
sbb
inc
jecxz
les
mov
popf
cmpsl
clc
add
addb
sub
xor
sub
push
iret
adc
lds
std
inc
call
jno
and
cmp
in
scas
jl
adc
fiaddl
fidivrs
push
cli
loope
js
adc
sbb
int
mov
mov
cmp
or
movsb
out
jp
mov
jno
stos
sub
dec
sub
adc
pop
in
mov
popa
jle
push
les
das
inc
xchg
in
imul
rolb
ss
js
cmp
scas
pop
scas
xlat
pop
fsubrp
mov
int
or
bound
push
jae
ror
jl
icebp
and
jns
inc
jecxz
dec
test
pop
bound
jecxz
pop
lret
mov
jb
xor
pushf
or
fcoms
xor
push
add
cmc
push
xlat
hlt
mov
scas
sub
push
leave
pop
xchg
sbb
stos
test
xor
outsl
push
and
mov
mov
mov
insb
shlb
scas
lock
decb
int
pushf
movsl
jmp
adc
inc
out
pop
pop
sahf
lret
sbb
mov
stos
jae
loopne
aad
mov
sub
stos
ljmp
mov
fcoms
out
in
mulb
gs
orb
xor
movsb
cs
or
scas
sub
xchg
add
subb
mov
cmp
push
cs
mov
add
fucomip
and
fsubrs
shll
jecxz
sti
imull
nop
sbb
enter
or
jecxz
push
mov
aaa
adc
pop
push
test
mov
xchg
dec
aas
pop
notb
aaa
mov
ja
jns
xlat
mov
test
mov
fmull
lret
int3
sub
repnz
mov
xor
sbb
push
cmp
out
xor
lahf
pop
push
fmull
lods
fcmovu
sub
and
or
push
inc
ja
enter
jae
aaa
fstpt
cwtl
push
push
inc
jb
pop
fistps
cmp
push
imul
dec
fs
mov
adc
dec
sub
pop
je
leave
add
pop
mov
aam
dec
inc
fucomi
in
adc
and
xchg
shll
mov
mov
cmp
outsb
insb
shr
cmp
pop
jl
js
int3
mov
jmp
enter
or
add
mov
mov
mov
or
cmpsl
imul
adc
arpl
add
sti
mov
lds
mov
add
into
adc
add
les
pop
mov
imul
movsb
addb
loope,pn
movsl
ret
orl
ret
movsb
mov
fidivrs
or
icebp
lcall
sbb
inc
adc
xchg
xchg
mov
sub
mov
test
ja
rcrb
div
aaa
sbb
adc
inc
lods
and
imul
and
or
or
jmp
ficomps
cmp
or
push
xor
loopne
ljmp
cmp
pop
push
neg
jl
push
sub
dec
or
jae
push
xor
mov
xor
or
mov
or
mov
lock
subb
jge
pop
lds
cmp
sub
sub
int
sub
imul
loopne
jne
dec
and
js
test
rclb
sub
movsb
inc
sahf
insl
jg
pop
loopne
mov
sub
and
fwait
lock
pop
das
pop
sub
inc
loopne
data16
add
adc
mov
push
bound
mov
jne
fs
jmp
jns
aaa
cmp
lods
loop
xor
add
pop
test
xor
aad
stc
dec
ret
cmpsl
mov
scas
mov
sbb
lret
push
jb
les
addr16
jbe
jo
pop
pop
fistpl
int3
mov
inc
pusha
repnz
jecxz
xchg
cmc
enter
out
ljmp
mov
lods
shl
pop
mov
rclb
je
adc
or
mov
jmp
popa
ljmp
and
popa
push
inc
leave
aas
inc
pop
lret
iret
pop
out
orl
dec
in
mov
push
scas
mov
push
sbb
pusha
fwait
lods
and
mov
sahf
xor
aaa
mov
ds
mov
sbb
xor
addr16
inc
cs
cmpl
mov
imul
fwait
xchg
movsl
adc
cmp
mov
in
test
hlt
dec
pop
adc
jbe
jg
aam
cmp
inc
cmpsl
lret
xchg
jp
test
xor
dec
mov
ja
xor
ja
adc
xor
and
jne
cmp
das
sbb
cmp
xchg
dec
and
push
out
shll
roll
xchg
cmpsl
dec
and
cmp
rcrb
into
xor
sub
xor
int
stos
lret
ds
lea
pop
shlb
jno
or
lock
xchg
mov
rcll
int3
fucomi
pop
push
jge
fsubr
in
pop
test
pop
sub
js
fmuls
cmp
cltd
push
fildl
in
stos
insl
mov
popl
cmpl
dec
movsl
mov
inc
shll
in
mov
cmc
movsl
out
and
divl
ficoms
repz
hlt
xchg
stc
sbb
mov
or
and
dec
sbb
mov
out
lds
add
insl
inc
xchg
shll
lods
mov
sahf
stos
jl
xor
out
call
insl
cmp
enter
mov
std
stos
mov
cmpsb
pushf
out
adc
decl
dec
or
xor
out
mov
in
lahf
imul
pushf
and
aad
das
mov
mov
xchg
pushl
aaa
mov
mov
lds
out
pop
jo
aaa
dec
ss
shr
cwtl
dec
jnp
xor
sub
lea
lock
cmp
mov
xchg
in
and
pusha
in
pusha
sub
test
into
jg
or
mov
fstpt
sub
imul
ja
test
mov
aaa
push
xchg
inc
mov
dec
aad
adc
in
mov
shl
in
aam
sbb
js
insl
xchg
inc
cmp
mov
pop
add
aas
xchg
sub
clc
cltd
fnstcw
movsl
imul
jg
stos
sbb
jne
out
xchg
mov
inc
mov
or
and
xor
ret
dec
imul
jl
mov
and
arpl
push
jae
xchg
inc
fistps
aad
into
pop
scas
pop
xchg
scas
call
mov
bound
mov
jle
pop
mov
dec
inc
stos
test
sub
adc
inc
jb
add
outsl
dec
dec
fnstcw
sub
fcmovnb
xor
lret
xor
cmpsl
sti
pop
movsb
loop
fidivrs
pop
mov
fs
ret
repnz
dec
jmp
dec
test
andl
das
popa
hlt
jne
rcrl
cmpsl
cmp
add
inc
call
test
add
mov
xchg
xor
aaa
xchg
mov
adc
dec
xlat
xor
cmpsb
fs
orb
pushf
adc
pop
mov
insb
cmp
add
inc
sti
shrb
push
ss
jns
in
or
push
pop
clc
out
mov
sub
mov
lcall
adc
out
lds
filds
popa
lret
sarb
lret
push
mov
sbb
push
dec
jb
shl
mov
lcall
inc
adc
loopne
pop
xor
or
pop
sub
jge
lahf
pop
cld
push
pop
imul
clc
xchg
sbb
cmp
cmc
or
jg
cmp
lods
mov
sbb
into
sub
les
mov
or
popf
or
daa
push
mov
sub
out
mov
addr16
stos
xor
adc
dec
add
lds
xlat
pop
dec
in
test
cs
mov
push
push
repz
pop
mov
mov
jl
jo
fimull
movsb
aad
shlb
mov
mov
push
fwait
lds
aas
cmc
pop
cmpb
pop
xor
orb
adc
hlt
idiv
and
jne
lds
cmp
orb
shll
fwait
imul
xor
inc
add
jmp
rcl
cli
mov
movsb
out
push
pop
repz
mov
ss
push
pop
jae
inc
mov
cmpsl
push
pop
cmpsl
leave
lahf
pop
ss
lds
sbb
les
push
and
xchg
adc
mov
mov
adc
dec
pop
nop
gs
mov
pop
xchg
sahf
mov
dec
das
subl
and
iret
or
ret
mov
mov
sbb
bound
add
pop
sti
add
jno
jmp
jecxz
scas
adc
jb
mov
mov
test
addr16
push
inc
js
aas
cmp
int
xor
fwait
pop
push
sub
or
in
dec
nop
push
mov
aad
int
cmp
cmc
mov
jb
cmpl
mov
jle
add
mov
lret
lods
in
shlb
mov
xor
mov
or
sbb
negl
lods
jno
imul
fiadds
mov
push
lret
pop
push
cmpsl
inc
dec
dec
mov
dec
jns
xchg
idiv
pop
fstpl
aas
push
fwait
push
pusha
fmuls
adc
mov
pop
sub
rcrl
cwtl
outsb
lcall
cltd
int
dec
pusha
icebp
add
ljmpw
out
mov
xor
sbb
or
enter
xor
push
cmp
mov
dec
mov
sub
mov
fdivrl
add
dec
aas
rol
test
adc
inc
mov
or
xor
cmp
push
cs
or
loope
leave
xchg
pop
outsl
sbb
into
mov
mov
jbe
int3
pop
mov
pop
arpl
int3
xchg
rcl
jae
pop
movlps
xor
aas
xor
sbbb
cmpb
js
jo
sub
xor
mulb
shll
dec
enter
ficompl
faddp
jg
les
jo
rorl
inc
mov
lret
and
repnz
mov
jge
lods
clc
mov
icebp
pop
mulb
in
rcr
mov
rol
insb
sub
shlb
dec
inc
or
jne
lea
or
inc
mov
outsb
sub
dec
xchg
mov
and
push
pop
cmp
repz
push
fisubrl
lods
xchg
shr
icebp
cmpsl
cmp
jg
lahf
adc
arpl
scas
cmp
or
loope
sbb
dec
stos
sbb
and
lahf
xor
lods
mov
lea
aam
or
push
xchg
mov
mov
lods
mov
lock
and
pop
cs
pop
inc
cwtl
sti
iret
xor
imul
xchg
int
loopne
data16
test
mov
setns
mov
add
dec
ds
xor
and
stos
mov
jmp
addr16
shll
add
outsb
pop
jg
sub
stos
mov
or
cli
sti
xchg
das
add
inc
xchg
push
mov
xor
fimuls
aam
push
jle
push
je
loope
mov
xor
mov
outsl
aam
insl
mov
les
repz
mov
inc
sub
je
pop
push
sbb
rcrl
fisubrl
mov
inc
pop
iret
inc
ret
or
out
scas
out
xlat
ss
inc
fmuls
fists
hlt
and
loope
sub
mov
testb
add
cmp
adc
and
ss
mov
mov
xchg
fadds
ljmp
push
xchg
mov
cmc
sti
or
frstor
scas
pop
mov
sbb
pop
clc
jg
mov
lahf
xor
lea
js
test
and
pop
rorb
scas
push
xlat
pop
adcl
xor
pop
cmpsb
dec
jmp
xor
lods
add
aaa
push
jae
add
dec
inc
or
add
lock
aad
or
cmp
fincstp
mov
add
rol
sub
shlb
adc
push
xchg
push
add
dec
repnz
xchg
lods
incb
sbb
les
popf
mov
in
push
orb
in
in
inc
push
jg
insl
push
ds
scas
inc
mov
jae
push
jb
out
mov
mov
nop
je
sbb
mov
push
xchg
dec
sub
and
adc
mov
pop
mov
push
popf
iret
sub
adc
into
lea
rcl
cmpsb
loop
fisttps
jmp
insb
out
add
adc
mov
inc
jle
fdivrl
dec
jp
add
cmp
pop
fisttpl
out
cmp
mov
andb
rol
xchg
test
jne
test
test
and
inc
or
sbb
dec
mov
adc
sbb
sbb
jae
inc
and
xor
mov
pop
add
ret
or
mov
fucomip
pusha
sbb
xor
ret
imul
inc
mov
add
sahf
xchg
ds
pop
scas
mov
and
int
inc
fstps
sub
repz
rcr
xchg
in
add
adc
add
xchg
cmpsb
sbbl
mov
decb
outsb
jmp
cmpl
loope
and
push
jbe
je
pop
adc
nop
jge
push
jmp
enter
or
pop
add
std
insb
jg
lods
mov
mov
xchg
ds
mov
fstl
ds
xor
lea
adc
mov
movsl
std
testb
push
sub
clc
jno
jecxz
mov
ret
loopne
sahf
xchg
dec
mov
pop
jae
mov
or
out
xor
xor
ret
cs
mov
das
int
xlat
enter
sub
pop
mov
cmp
xor
inc
mov
or
pop
loope
sarb
pop
iret
pop
mov
and
jo
jbe
inc
int
mov
mov
mov
lea
push
into
testb
ja
sahf
or
xor
push
in
cmp
inc
mov
mov
push
xchg
fiadds
das
mov
movsb
daa
mov
mov
addr16
mov
popf
imul
jle
hlt
sbb
loop
sarl
push
inc
in
mov
popf
sub
fcomps
gs
notb
pop
sbb
xchg
jmp
lret
dec
jns
lar
xor
mov
and
cmovo
sahf
ja
ja
push
int3
and
nop
bound
xchg
fistpll
cmp
and
imul
dec
pop
rcll
rol
sub
lret
stos
std
shr
and
dec
mov
xor
icebp
orb
mov
add
into
out
jecxz
sahf
sbb
ljmp
into
inc
insl
cmc
jg
cwtl
std
adc
inc
mov
xchg
and
jge
mov
lods
stos
sub
shrb
pop
add
dec
jbe
sarb
repz
mov
pusha
xorl
fidivs
sahf
mov
lock
int
sbb
xchg
je
mov
push
sub
mov
xor
push
popa
cmp
sub
aaa
fildl
add
pop
pop
push
repnz
cmc
outsb
insl
frstor
lahf
mov
adc
xchg
pusha
repnz
not
sbb
leave
mov
mov
gs
push
pop
push
in
xchg
sbb
pop
cmpsl
xchg
pusha
push
andb
dec
push
sbb
cltd
push
pop
popf
jb
icebp
xchg
dec
int
adc
stos
push
push
sahf
gs
mov
mov
mov
mov
add
aad
mov
inc
scas
jno
dec
movl
icebp
in
daa
pushf
mov
mov
inc
inc
aaa
jo
jb
fwait
adc
lea
jne
inc
movsb
mov
fwait
or
pop
repnz
in
mov
sahf
cli
orl
dec
testb
sbb
dec
jecxz
in
mov
dec
cmp
scas
xor
test
arpl
jno
pop
cmpsb
push
or
pusha
pop
cmp
in
js
psrlw
mov
ja
and
imul
ja
jnp
cmpb
pop
jne
cmp
mov
add
int3
cwtl
mov
jo
in
add
inc
jg
xchg
jno
adc
aam
or
mov
xor
pop
popf
mov
adc
cmpl
lahf
xchg
xlat
xchg
in
sbb
jnp
gs
mov
lea
push
mov
pop
jbe
arpl
fcoml
jecxz
enter
out
or
mov
cmc
repnz
push
cmp
mov
addr16
outsb
xchg
stc
cwtl
cli
imul
lret
pop
mov
in
inc
hlt
cmp
fidivl
jge
test
popl
test
lods
pop
outsl
movsl
push
xlat
sbb
sbb
mov
push
mov
scas
gs
or
cwtl
xchg
pop
xlat
cmc
mov
lods
xchg
sub
push
outsl
xchg
sub
aas
loop
adc
inc
lds
cld
hlt
xor
xchg
adc
jp
jl
into
sub
or
inc
mov
mov
jb
sti
jnp
cs
jp
out
cmp
pop
pop
lods
add
fs
jmp
cwtl
push
sub
sbb
mov
jb
sub
test
dec
cmpsl
push
xor
mov
jne
addl
cmp
movsb
mov
lea
xchg
lea
inc
mov
lret
daa
je
std
ss
xchg
pushl
aas
out
sub
lds
lds
sarl
mov
out
cld
pushf
pop
daa
and
iret
ret
mov
jle
mov
jmp
cmp
outsb
inc
xchg
sub
xor
sub
push
ja
push
fwait
push
int
inc
mov
adc
xor
xor
dec
jns
movb
inc
push
aam
movaps
nop
sti
mov
mov
inc
or
mov
push
popa
sub
cld
adc
xor
scas
stos
cmp
adc
std
subb
aam
shlb
xor
and
insb
cmp
subl
push
jbe
jmp
loop
push
nop
cmp
ret
cmpsl
cli
cmp
jg
mov
das
cmpsb
jae
xor
mov
mov
sub
aas
aad
jae
clc
mov
insb
dec
and
jecxz
lock
test
bound
xor
movsl
xchg
push
repz
filds
adc
mov
inc
inc
int
add
ds
cmp
test
cmpsb
and
pop
xlat
mov
sbb
push
scas
andl
cmp
sub
out
cwtl
rep
adc
inc
pop
sub
ljmp
push
mov
xchg
scas
shll
cs
in
dec
xor
out
mov
adc
inc
repz
imull
sub
lods
cld
jmp
cmp
mov
pushf
xor
push
cmp
inc
cmp
cmp
add
arpl
sar
cmp
pop
je
iret
ficomps
es
ret
inc
inc
pop
movsl
xchg
inc
adc
imul
je
insl
cmp
into
jo
sahf
ja
jmp
sbb
jmp
repnz
adc
push
inc
sub
in
out
dec
xor
loopne
jbe
jo
pop
pop
sub
lods
in
repz
movsl
mov
addl
push
ret
push
push
negb
ds
outsb
in
add
xchg
nop
mov
pop
pop
outsb
fisttpll
push
push
push
pop
xchg
daa
mov
xchg
mov
mov
xchg
cmp
fnstsw
add
add
gs
adc
rorb
jmp
scas
pop
enter
movsb
mov
stos
loope
mov
mov
jp
mov
adc
mov
rol
hlt
push
xchg
ret
add
mov
mov
dec
dec
imul
ror
addl
jecxz
jae
adc
scas
push
scas
loop
pushf
mov
in
pop
push
mov
stc
dec
les
cmp
cmp
fadds
sbb
push
cmp
xor
xchg
gs
fisttps
dec
adc
pushf
stos
in
inc
jp
stos
cmp
pop
test
cmpsl
and
or
lcall
jle
push
leave
push
adc
fcoms
scas
outsl
push
ljmp
jno
loopne
ret
popa
jb
mov
jae
or
push
mov
jmp
dec
push
push
push
ljmp
or
pop
ss
test
mov
ret
cmp
leave
lret
sub
ss
jg
lods
adc
rolb
sub
shrb
and
lea
xchg
jecxz
lret
mov
jp
les
cmp
mov
cld
or
pop
imul
lret
loop
xchg
mov
mov
and
call
push
adc
mov
mov
dec
cmp
into
mov
ss
cmp
sbb
push
pushf
jbe
push
adc
rol
xor
sti
mov
adcb
sub
fwait
outsb
inc
fcompl
jne
or
leave
mov
xchg
insb
xor
sbb
js
inc
js
pop
mov
gs
clc
push
rcr
dec
icebp
imul
or
inc
adc
inc
or
shlb
push
data16
fisubs
bound
pop
test
rcr
int
inc
mov
out
sub
jl
xorl
ds
mov
int
nop
lods
add
insb
pop
int
sbb
mov
pop
lcall
add
pop
je
push
mov
xor
pusha
aad
rcrb
xchg
xor
and
imul
adc
jle
xor
movsb
xor
inc
sbb
xchg
pop
cmp
scas
and
in
sbb
out
inc
insl
int
mov
inc
cmp
or
js
test
xor
mov
loopne
pop
xor
adc
jp
sti
fnstcw
outsl
insl
sbb
popf
test
loop
mov
pop
add
adc
fisttpl
xor
rcr
add
push
adc
lds
cltd
dec
jle
test
insb
hlt
xchg
push
or
mov
div
xchg
pop
sti
call
std
push
adc
pop
inc
jbe
int
sbb
adcb
cmp
push
shrl
pop
or
jp
pop
mov
push
xor
jbe
incb
push
mov
cld
fstpt
das
gs
icebp
jne
xchg
negb
dec
lods
adc
mov
adc
sbb
imul
stos
ja
int
arpl
mov
imul
cli
addl
insl
insb
daa
add
bound
xchg
jne
xlat
mov
sbbl
imul
add
es
inc
sub
outsb
xlat
movsl
xchg
inc
arpl
cli
push
xor
scas
jl
addb
and
dec
rcrb
loop
cmp
mov
push
mov
aad
pop
out
mov
mov
and
call
cltd
mov
adc
mov
or
loop
dec
vsqrtss
xor
cmp
mov
and
jl
xor
jle
hlt
rcll
stos
jno
sbb
mov
ja
or
pop
pop
add
cmp
popf
push
pop
sub
jl
mov
rep
push
sbb
hlt
test
loopne
ja
pop
cmpsb
cli
adc
xor
pop
jns
outsl
jne
stos
hlt
xor
js
adc
hlt
xor
sub
mov
jnp
adc
mov
cli
sub
inc
mov
mov
pop
sbb
mov
adc
push
xchg
push
dec
adc
jmp
and
cltd
stos
jnp
sti
lods
and
stc
and
adc
xchg
repz
out
sbb
loope
sti
mov
push
movb
test
rcrl
test
and
and
inc
outsb
into
inc
cmp
xchg
dec
sub
rep
mov
pop
lcall
test
hlt
xor
arpl
test
ds
jne
dec
cmc
sub
outsl
xchg
int
pop
add
pop
stc
sbb
xchg
adc
std
pop
dec
push
mov
xchg
mov
aas
mov
ljmp
popf
mov
addl
fistpl
cld
scas
out
xor
adc
jle
idivb
in
mov
jmp
push
sbb
scas
sahf
adc
ss
das
movsb
sbb
loope
cmp
cmp
repz
js
xor
xlat
push
movl
sbb
push
rorb
fiaddl
scas
cli
stc
in
or
mov
mov
adc
cmc
loop
jg
xor
add
enter
add
shlb
arpl
jbe
cmp
mov
sub
mov
inc
push
clc
mov
jb
push
testl
jbe
stc
nop
add
iret
and
xor
pop
mov
jmp
popf
out
mov
adc
or
out
popa
xor
andb
sarb
hlt
fsubrl
andl
adc
pop
inc
rol
aam
enter
sarb
pusha
outsl
add
mov
sar
lds
ja
mov
imul
cmpsl
pusha
jnp
mov
push
xchg
icebp
adc
aam
aam
dec
int
mov
xchg
mov
xor
aad
mov
jbe
xchg
push
fs
pop
iret
xchg
pop
jg
fwait
sbb
ja
outsb
test
push
inc
in
stos
mov
mov
call
mov
or
push
push
dec
js
and
jns
xor
jae
test
xor
push
nop
sub
les
sub
mov
xor
xlat
test
cltd
ja
sbb
enter
div
orl
mov
cmp
or
mov
sahf
addr16
out
leave
push
lea
fmul
xor
jle
sub
iret
daa
jb
mov
add
push
ret
jmp
out
pop
mov
loope
jnp
xchg
insb
mov
cmp
xchg
cs
les
and
pop
jns
sub
jo
mov
xlat
cmc
daa
push
jl
fdivrs
adc
imul
ret
xor
int
lods
nop
xchg
mov
lcall
das
cltd
pop
xor
sbb
movsl
add
sbb
inc
cmpsb
add
shlb
adc
jb
pop
int
notb
adc
inc
icebp
lret
add
xchg
jle
sbb
loope
cmp
and
or
movsb
addr16
outsb
pop
shlb
push
test
pop
sub
dec
imul
sub
cmp
and
xchg
jl
lcall
sub
sahf
push
add
mov
cmp
xor
push
sbb
icebp
fsts
pushf
je
sbb
loop
cmp
sub
xor
mov
mov
fdiv
pop
int3
stc
dec
inc
data16
jbe
lods
daa
repnz
stos
cmpsb
jg
cmp
aam
sbb
int3
xchg
and
jae
pop
decl
sahf
xor
ljmp
xor
jle
shll
push
fisttps
call
mov
lods
int3
into
cmpb
aaa
fdivl
mov
push
inc
sbb
add
or
mov
in
dec
hlt
jb
aad
mov
push
sub
cld
mov
cmp
fsts
or
sbb
ds
jmp
add
xor
jl
and
push
out
je
js
test
xlat
or
xchg
mov
adc
and
push
pop
pushf
orb
addr16
sub
mov
mov
mov
add
dec
fisubs
adc
cmp
and
mov
cmp
xchg
mov
jnp
dec
push
add
sbb
xchg
jge
flds
inc
jne
pop
xor
jge
pusha
pop
or
inc
mov
addb
lcall
jnp
pop
ja
in
dec
sbb
insb
fildll
rcrl
aad
ljmp
mov
mov
lea
nop
in
adc
jg
popa
inc
xchg
xchg
xor
pop
andb
mov
jo
mov
out
fadd
shrl
shrl
scas
stos
fstps
lret
dec
pop
faddp
jno
bound
sbb
pop
cmpsl
push
fcmove
es
xchg
hlt
xchg
jb
or
out
enter
cmpsb
pop
pop
stos
ja
in
fcoms
jl
sbb
xor
sti
xchg
mov
jb
mov
aas
int
loopne
mov
rclb
sub
decl
adc
mov
lock
int3
mov
ljmp
xlat
xchg
and
nop
mov
fisttpl
arpl
sub
push
movb
movsb
les
sbb
mov
or
lret
jge
pushf
mov
cmpl
adc
rcll
or
in
out
add
cli
js
les
push
jo
lahf
jg
mov
cmp
dec
and
outsb
lock
mov
add
add
cmp
add
fisttpl
aaa
pop
das
scas
fisttpl
pop
scas
add
push
jge
add
pushl
push
out
jmp
repz
inc
cmp
pop
adc
sub
inc
xor
sbb
dec
inc
pop
push
pop
fstp
enter
push
rorl
in
dec
rcrl
dec
ret
dec
xor
hlt
dec
dec
pop
in
js
pop
xor
pop
data16
xchg
inc
divl
aaa
push
xchg
push
outsb
add
fisttps
dec
jle
jle
and
pop
cmp
and
cli
icebp
pusha
fnsave
lods
xchg
pop
push
subl
popf
mov
pop
negb
mov
ss
cmp
addl
popa
sar
adcl
xchg
xchg
inc
dec
pop
push
xlat
shlb
dec
cltd
mov
cltd
or
lods
sbb
push
gs
mov
push
xchg
sbb
push
jle
aad
xchg
sbb
fstps
sbb
ret
popl
sahf
push
pop
std
out
pop
pop
imul
sbbb
sub
push
or
out
fnstcw
and
movsb
adc
sbbb
mov
stc
xchg
push
sub
inc
loop
mov
jecxz
pop
ss
pop
stos
xchg
jge
xlat
pop
out
add
mov
sahf
adc
cli
jge
add
jae
movsb
xchg
movsl
push
imul
xor
push
mov
notl
push
jbe
adc
xorb
adcb
outsb
mov
push
xor
stos
bound
call
and
mov
mov
lret
cmp
nop
dec
add
imul
mov
lret
push
int
mov
mov
inc
pop
stc
scas
cltd
je
stos
pop
push
xchg
stc
andb
ja
pop
repnz
adc
cmp
push
jmp
xchg
test
add
mov
sbb
cmp
arpl
add
les
lahf
jo
inc
cmc
and
addr16
sbb
ss
loopne
add
add
adc
xchg
orb
out
int3
loope
cli
ret
aaa
fstps
push
dec
dec
repnz
leave
mov
pushf
clc
jle
repnz
testb
aas
jne,pt
xorl
mov
pusha
imul
gs
mov
iret
cmpsl
in
and
das
enter
mov
mov
pop
lea
mov
sub
jae
adc
insl
movq
out
sub
mov
rcrl
pop
xorb
mov
mov
dec
scas
mov
cltd
nop
xor
xlat
push
xor
xchg
fsubs
inc
cmp
cmc
cmp
ds
mov
ret
out
xchg
scas
enter
sbb
loopne
in
in
push
dec
lret
insl
inc
xchg
dec
cmpsl
mov
dec
add
stos
rolb
popf
sbb
test
xor
dec
and
shll
push
add
iret
push
inc
gs
test
xchg
test
or
mov
mov
repnz
pop
mov
test
lods
dec
adc
or
imul
add
inc
jle
imul
push
inc
lcall
sbb
sub
adc
loope
mov
icebp
fwait
scas
push
add
lds
fsincos
ret
and
mov
ss
int
or
xchg
fistpll
leave
add
mov
mull
sbb
mov
fisttpll
inc
notl
jne
dec
pop
xor
cmp
dec
es
fwait
out
out
mov
push
test
je
dec
in
fstl
mov
inc
sub
shlb
mov
and
mov
add
and
sbb
and
jo
loopne
cmp
addr16
mov
outsl
pushf
cli
test
jmp
xchg
pop
dec
shl
divb
push
push
push
mov
adc
xchg
adc
xor
jbe
mov
dec
sub
iret
mov
jne
or
lods
lret
pop
cli
or
paddusb
sbb
in
mov
mov
cli
out
cmc
shll
dec
sbb
mov
sbb
sub
scas
pop
iret
stos
fs
cmp
adc
mov
test
sahf
jl
cli
mov
sub
pop
inc
test
jns
orl
arpl
inc
or
rol
pop
mov
push
xchg
xlat
jno
std
stos
sbbb
xor
jmp
rorb
xor
cmp
cmp
es
clc
pushf
sbb
and
add
movsl
sub
dec
or
test
push
sub
rcll
lods
sbb
pop
int
int3
outsb
sti
jns
loopne
jge
sti
clc
sarl
or
and
pop
cwtl
adc
movsl
push
je
movsl
mov
push
std
leave
ljmp
cmp
pop
sub
sub
adc
jp
fmull
or
out
icebp
dec
pop
jbe
and
in
test
inc
dec
testl
or
xchg
xchg
call
imul
out
xchg
sahf
xchg
mov
xor
push
dec
mov
mov
sbb
test
sbb
push
movsb
subl
sbb
imul
jp
shrb
sbb
into
aas
xor
popf
mov
pop
js
aam
decb
xor
mov
push
popl
imul
test
jb
lret
add
adcl
cmp
pop
cwtl
push
stc
mov
gs
jmp
test
adc
dec
bound
mov
xchg
lret
insb
xchg
repz
dec
stc
push
xchg
push
xor
loop
inc
fsubrp
loop
rcr
jns
mov
pop
xchg
and
pushf
test
popf
dec
stc
jnp
movsl
in
mov
pop
dec
inc
mov
sbb
imul
xchg
cmp
pusha
in
in
push
add
aaa
sbb
xchg
add
xchg
jmp
aas
push
jno
sti
lods
enter
pop
mov
add
inc
inc
dec
clc
push
xchg
out
cs
xchg
mov
shrl
mov
in
push
sub
mov
and
push
push
inc
cmc
mov
out
adc
xor
jae
push
clc
jo
mov
fwait
xor
sar
movsb
inc
cmp
std
mov
sub
std
cmp
pusha
notb
in
and
jge
ja
gs
into
xchg
std
into
fistps
lcall
insl
dec
sbb
push
cmpsl
cmc
push
mov
sbb
lea
test
pusha
push
adc
cmp
stos
jno
das
adc
xchg
jae
scas
cmp
jbe
movsl
jae
mov
movl
int
jp
jno
aad
dec
aam
aad
gs
adc
daa
and
add
sbb
inc
ss
mov
add
jg
mov
push
loopne
ja
cmp
rolb
loop
or
pop
arpl
push
les
push
sbb
data16
dec
and
jg
pusha
xor
stos
iret
data16
loop
test
shr
in
add
pop
loopne
lods
mov
lret
lahf
cli
inc
add
xorb
jp
mov
add
mov
outsl
push
mov
xchg
dec
pop
xchg
pop
popf
dec
pop
xchg
jg
out
push
sbb
pop
in
enter
push
js
xchg
xchg
imul
shlb
add
xor
lods
loope
xor
test
push
push
ja
stos
jecxz
push
inc
inc
dec
xchg
jg
inc
sbb
pop
push
adcl
filds
mov
pop
cmc
lods
mov
adc
lret
pop
leave
in
lret
jge
lods
add
in
out
sub
lret
cwtl
out
pop
bswap
into
jnp
dec
sub
pop
addr16
jnp
xor
vmread
mov
mov
mov
ljmp
frstor
xchg
fidivrs
ret
sub
or
inc
in
cmp
jmp
mov
mov
fsubrl
lock
movsb
fsubrs
int3
pop
inc
inc
xor
dec
mov
leavew
jno
pop
imul
or
pop
fstpl
lret
jmp
sub
flds
dec
cwtl
ret
jecxz
lea
aaa
jno
jp
adc
sub
mov
leave
jg
popa
jae
jl
mov
xor
push
jnp
mov
cmpsl
mov
push
and
xchg
sahf
jnp
imul
push
gs
cs
bound
popa
arpl
jp
lcall
cmpsl
cmp
jns
aas
xchg
out
xchg
or
jne
mov
pop
stc
pop
cltd
fs
dec
and
dec
inc
pop
loopne
and
mov
call
cmp
pusha
inc
sahf
loope
cli
jbe
fbstp
loopew
add
dec
out
sbb
aas
fst
add
jno
push
stos
sub
dec
mov
push
mov
mov
xor
add
jp
addr16
mov
cmp
xor
int3
mov
mov
fxtract
data16
or
adc
stos
lret
not
dec
je
pop
gs
mov
inc
test
sti
xchg
xor
popf
and
iret
into
arpl
and
and
notb
cmp
sbb
dec
ja
outsl
dec
jbe
rorb
inc
mov
inc
mov
dec
xchg
negb
fstps
pop
cmc
xor
dec
clc
out
pop
jmp
adc
xchg
push
push
fdivrs
mov
daa
jne
or
call
je
pop
xchg
sbb
shll
adc
cmp
pop
pop
push
add
mov
testb
scas
push
mov
cmpsl
leave
lods
stos
push
aas
aad
dec
cs
insb
cwtl
jb
xchg
mov
fcompl
inc
mov
ret
push
dec
pusha
gs
aaa
fsubl
xchg
dec
jns
stc
ret
les
scas
mov
sub
mov
add
ds
lret
filds
daa
pop
or
jno
repnz
pop
or
fildll
xor
sbb
mov
fs
mov
sbb
jae
out
sub
nop
scas
push
inc
mov
int
fwait
mov
hlt
xchg
mov
faddl
insl
xor
shr
or
push
mov
popf
out
imul
jge
daa
in
or
out
add
shl
jne
push
cld
pop
push
test
repnz
popf
sub
stos
in
mov
or
push
enter
pop
popf
and
dec
fwait
adc
push
add
clc
bound
inc
aas
cld
xchg
push
lret
push
inc
push
sbb
in
xchg
andl
mov
jns
ret
pop
fldcw
mov
shl
adc
popf
in
and
sub
bound
xor
scas
mov
inc
add
cmp
push
pop
jae
sub
gs
pop
or
mov
sbb
sub
jecxz
lods
js
daa
cmc
cli
loopne
bound
cmc
in
inc
mov
cmc
stos
push
call
out
push
sti
lcall
inc
mov
shrb
ds
adc
xchg
sbb
pop
cmpsl
bts
and
lock
mov
incl
daa
push
pop
pop
nop
shll
iret
xor
mov
cmp
shl
out
movsb
xor
push
add
mov
pop
fists
xor
lret
aad
and
int3
push
xor
inc
dec
ljmp
dec
cmpsb
scas
nop
fwait
inc
fmull
test
inc
popa
mov
adc
into
add
mov
pop
or
adc
dec
outsl
nopl
loop
je
xchg
jno
in
inc
loopne
dec
sbb
sahf
ret
aas
inc
cmpsb
das
push
fstps
cltd
adc
mov
loop
xor
pop
sub
in
and
popa
mov
xor
sub
jnp
or
mov
jns
inc
flds
push
jmp
fsubrp
pandn
lods
pop
arpl
jnp
mov
icebp
gs
test
dec
sbb
cs
std
add
mov
pop
or
xor
jp
adc
xor
inc
xlat
xchg
cmpsl
adc
std
add
jns
test
outsb
jne
mov
or
stos
insb
fildll
mov
jb
xlat
pushl
das
stos
jmp
xchg
rorl
ds
xor
stos
cmc
sbb
in
mov
faddp
ds
add
lea
insl
xor
movsl
insl
outsb
adc
subb
mov
aam
jnp
mov
cmp
inc
sbb
leave
push
inc
scas
jae
pop
stos
shll
lret
or
sub
adc
iret
add
mov
and
fwait
stos
xor
xchg
mov
xor
out
adc
jl
sbbl
sbb
mov
fdivrs
pop
mov
mov
orl
jg
xchg
out
cmp
jmp
mov
scas
mov
dec
ret
push
xlat
fiadds
daa
es
addr16
pop
sub
push
dec
mov
xchg
bound
je
xchg
push
pop
or
inc
push
cmpsl
sar
dec
mov
pop
sti
inc
mov
sub
dec
fldt
aam
fcoms
in
in
jno
xor
xor
out
jle
pusha
or
mov
or
and
cli
ss
in
cmpsl
push
repz
cmp
mov
fldt
out
push
sbb
into
add
push
lahf
stc
imul
daa
dec
incl
fdivl
