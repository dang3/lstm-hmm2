jbe
ljmp
call
push
mov
call
push
mov
call
cmp
jne
push
push
push
lea
push
call
jmp
push
push
lea
push
push
call
mov
push
push
lea
push
call
mov
mov
mov
sub
mov
mov
call
test
jne
mov
mov
push
call
test
jne
push
lea
push
push
call
jmp
cmpl
jne
cmpl
jne
testl
jne
mov
test
jne
test
je
jmp
cmpl
je
jmp
nop
pop
cs
adc
lea
inc
lea
arpl
inc
adc
inc
adc
inc
adc
mov
and
add
adc
lea
lea
out
inc
adc
mov
shrb
inc
adc
nop
inc
adc
nop
inc
adc
xchg
inc
adc
xchg
inc
adc
xchg
inc
adc
xchg
inc
adc
inc
adc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
add
sbb
sbb
sbb
sbb
sbb
sbb
add
sbb
sbb
sbb
pop
push
pop
sbb
sbb
sbb
or
sbb
or
sbb
sbb
or
add
sbb
sbb
sbb
sbb
add
add
sbb
sbb
sbb
sbb
add
sbb
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
adc
adc
adc
adc
sbb
sbb
sbb
sbb
push
push
pop
sbb
sbb
sbb
push
mov
push
push
push
mov
test
je
push
push
mov
call
mov
mov
lea
push
push
push
call
mov
test
js
cmpl
je
call
sub
cmp
jbe
pop
mov
pop
pop
leave
ret
mov
call
test
je
mov
jmp
push
mov
push
mov
push
pushl
xor
mov
lea
mov
mov
call
mov
cmp
je
mov
call
push
mov
lea
mov
call
mov
cmp
mov
je
mov
push
call
lea
call
lea
call
mov
pop
pop
pop
ret
push
mov
push
mov
mov
push
inc
push
push
call
test
je
mov
mov
push
lea
push
lea
lea
cmp
je
mov
mov
mov
test
je
mov
mov
test
mov
je
mov
push
call
addl
add
cmp
jne
mov
incl
mov
pop
add
pop
leave
ret
push
mov
cmpl
jne
push
pushl
push
pushl
call
add
mov
mov
mov
mov
pop
ret
push
lea
sub
mov
xor
mov
push
mov
push
mov
push
call
test
je
push
lea
lea
push
mov
xor
mov
mov
push
mov
movl
movl
mov
call
push
pop
cmp
jne
pushl
mov
call
test
pop
jne
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
lea
mov
call
cmp
je
mov
cmp
jne
mov
mov
lea
push
push
add
push
movl
call
add
lea
call
lea
call
testb
je
mov
add
push
call
test
pop
je
pop
mov
pop
xor
xor
pop
call
add
leave
ret
push
mov
mov
mov
sti
sbb
and
mov
push
lea
cmp
ja
mov
pop
pop
ret
push
add
push
call
pop
pop
jmp
push
mov
mov
mov
push
inc
push
push
call
test
je
mov
mov
shl
lea
test
je
movl
andl
mov
incl
pop
ret
xor
pop
ret
push
xor
cmp
je
cmp
push
mov
jbe
push
xor
mov
cmp
and
and
jle
jb
pop
mov
push
call
add
mov
pop
mov
mov
movl
pop
ret
mov
mov
mov
cmp
mov
push
jne
call
add
jmp
push
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
pop
ret
push
mov
lea
call
mov
test
je
mov
push
call
testb
movl
je
push
call
pop
mov
pop
ret
mov
push
mov
movl
add
rolb
les
or
cmpl
cmpl
cmpl
jge
push
mov
test
je
push
call
test
pop
je
andl
mov
test
pop
jne
mov
mov
push
call
lea
call
lea
call
lea
call
lea
call
lea
pop
jmp
push
mov
and
sub
push
mov
push
push
mov
mov
mov
xor
cmp
mov
jne
mov
push
call
cmp
jne
cmp
je
mov
call
mov
test
je
mov
test
mov
jne
mov
mov
lea
push
pushl
mov
pushl
add
push
push
lea
push
lea
call
lea
push
pushl
mov
pushl
add
push
push
lea
push
lea
call
add
lea
call
cmp
je
mov
cmp
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
call
test
jne
lea
call
test
jne
mov
cmp
je
cmp
je
cmp
je
add
mov
cmp
je
cmp
je
mov
lea
push
pushl
lea
push
push
call
add
test
jne
add
add
test
pop
adc
jnp
add
test
aas
add
sti
mov
mov
je
mov
mov
test
jne
or
mov
mov
cmp
jne
mov
pop
pop
pop
mov
pop
ret
mov
cmp
jne
jmp
cmpl
je
cmpl
je
cmpl
je
push
call
mov
jmp
andl
mov
mov
mov
jmp
push
pushl
push
pop
call
jmp
cmp
je
pushl
mov
call
jmp
mov
mov
test
push
push
je
cmpl
je
pushl
lea
call
xor
pop
pop
ret
push
mov
mov
sub
cmpl
push
mov
jge
push
push
mov
test
mov
je
mov
call
test
jne
and
mov
test
jne
mov
lea
call
mov
lea
add
add
xor
mov
mov
cmp
mov
jne
mov
test
je
mov
pushl
lea
call
mov
cmp
jne
mov
push
mov
mov
mov
call
cmp
pop
je
decl
jne
mov
cmpl
jge
pushl
call
pop
mov
mov
test
pop
pop
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
pushl
call
pop
lea
call
lea
call
lea
call
pop
leave
ret
push
mov
mov
push
mov
call
test
jne
mov
mov
call
neg
sbb
inc
pop
ret
mov
mov
call
mov
mov
mov
call
sub
neg
sbb
inc
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
mov
cmp
pop
jne
push
mov
cmp
pop
jne
test
je
mov
cmp
jne
xor
inc
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
push
push
xor
push
push
call
cmp
je
mov
lea
push
push
mov
movl
call
test
je
lea
mov
mov
mov
movl
movl
mov
lea
xor
cmp
je
xor
cmp
jne
add
add
jmp
lea
lea
mov
push
lea
mov
movl
call
mov
mov
add
xor
xor
lea
mov
cmp
je
cmp
je
add
add
cmp
jb
jmp
mov
jmp
mov
lea
push
push
call
add
test
jne
mov
lea
push
push
call
test
je
xor
mov
test
jne
test
jne
cmp
je
mov
mov
xor
cmp
je
add
add
cmp
jb
push
call
mov
pop
pop
pop
xor
call
mov
pop
ret
cmp
jae
shl
mov
mov
mov
add
mov
mov
push
push
lea
push
call
mov
add
mov
jmp
mov
jmp
mov
mov
test
mov
mov
je
mov
push
call
xor
ret
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
push
mov
mov
test
push
mov
je
and
jne
pop
pop
ret
mov
jmp
push
mov
movl
movl
cmpl
jne
lea
movl
call
testb
je
push
call
pop
mov
pop
ret
push
lea
push
call
pushl
call
pop
pop
jmp
push
mov
push
mov
mov
cmp
je
cmp
je
push
push
mov
push
push
pushl
call
mov
test
jne
pop
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
add
jmp
mov
test
je
lea
push
push
mov
call
test
je
pushl
mov
mov
call
test
je
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
push
push
call
jmp
xor
jmp
push
xor
add
mov
mov
test
push
je
mov
test
je
cmpl
je
cmpl
je
cmp
mov
mov
jne
pushl
pushl
push
push
call
mov
test
jne
push
call
mov
test
jne
mov
mov
lea
push
push
call
xor
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
test
jne
mov
test
je
pushl
mov
mov
push
push
call
lea
mov
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
mov
xor
lea
xor
cmp
push
mov
mov
movl
movl
mov
mov
jg
mov
sub
cmp
jg
cmp
jne
cmp
jne
cmp
jne
mov
test
jne
test
jne
mov
pop
pop
pop
pop
xor
call
add
ret
push
mov
push
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
mov
cmp
jne
stc
adc
or
jne
mov
movl
xor
pop
pop
ret
push
mov
mov
call
test
jne
mov
mov
call
test
mov
jne
push
mov
test
je
cmpb
jne
mov
mov
call
test
jne
xor
pop
test
jne
mov
mov
mov
pop
jmp
mov
push
call
xor
jmp
add
jmp
mov
jmp
push
mov
sub
andl
push
push
push
lea
call
lea
push
mov
lea
call
mov
test
pop
js
mov
test
je
mov
mov
lea
push
push
call
cmpw
je
cmpb
jne
pushl
andl
mov
lea
call
mov
test
je
mov
push
push
call
mov
lea
call
lea
call
mov
pop
pop
leave
ret
push
mov
lea
call
lea
call
lea
call
lea
call
call
testb
je
push
call
pop
mov
pop
ret
push
mov
cmpl
jne
testb
jne
pushl
mov
pushl
call
pop
ret
push
push
lea
mov
call
testb
je
mov
mov
mov
test
je
cmpl
je
mov
push
call
call
andl
lea
xor
call
pop
pop
jmp
mov
test
jne
mov
test
je
jmp
xor
jmp
push
mov
lea
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
xor
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
mov
decl
mov
jne
xor
inc
mov
mov
push
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
lea
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
add
test
jne
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmpl
push
mov
movl
jne
push
push
call
add
test
je
mov
call
test
je
mov
lea
push
push
push
mov
call
mov
test
js
mov
mov
mov
push
push
push
mov
call
mov
mov
mov
mov
push
call
mov
pop
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
movl
movl
movl
movl
movl
push
push
xor
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
and
or
mov
mov
mov
or
lea
mov
mov
mov
mov
das
inc
add
add
push
add
add
push
add
xchg
add
add
inc
add
mov
add
adc
add
addb
sub
add
add
or
mov
mov
mov
lea
mov
mov
lea
push
push
movl
mov
mov
mov
mov
call
mov
mov
movb
mov
mov
movb
mov
mov
mov
mov
mov
mov
or
inc
add
mov
mov
mov
mov
mov
mov
push
movl
mov
mov
mov
mov
call
push
mov
mov
movl
call
add
pop
pop
mov
mov
mov
mov
pop
add
ret
int3
int3
push
push
push
push
mov
mov
or
test
je
mov
mov
not
add
and
mov
test
jne
mov
movsbw
movzwl
mov
lea
cmp
jae
movzwl
mov
and
test
je
add
cmp
jb
pop
pop
pop
or
pop
ret
movsbw
movzwl
test
je
nop
cmp
je
movsbw
add
movzwl
test
jne
mov
jmp
sub
pop
pop
pop
sar
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
cmpl
push
push
mov
mov
jne
push
mov
cmp
je
cmp
je
movb
cmpb
jne
mov
cmp
ja
test
ja
cmp
jne
cmpl
jne
push
push
call
pop
mov
pop
pop
pop
xor
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
test
push
push
mov
jg
xor
mov
add
cmpb
mov
jne
cmpl
mov
jne
test
je
testb
jne
movl
mov
push
push
lea
push
push
push
xor
call
mov
test
je
testb
jne
test
je
testb
jne
pop
mov
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
push
mov
push
push
lea
lea
xor
push
mov
mov
movl
movl
mov
mov
call
mov
test
jle
testb
push
mov
mov
jne
cmp
jne
mov
test
jg
cmp
jne
cmp
jg
cmp
jne
test
jle
test
jl
cmp
jge
mov
mov
mov
mov
sub
push
lea
push
push
call
add
cmp
jne
mov
sub
push
lea
push
mov
call
movb
mov
test
jne
test
jne
pop
mov
pop
pop
pop
xor
call
add
ret
push
mov
sub
aas
cmp
adc
lds
pop
or
mov
mov
lea
push
push
xor
push
mov
mov
call
cmp
movl
je
lea
lea
push
mov
mov
mov
lods
movl
movl
movb
call
mov
mov
lea
lea
call
test
jne
mov
push
lea
call
test
je
test
je
incl
mov
test
mov
jne
mov
test
jne
testb
je
mov
test
je
push
mov
call
mov
test
js
mov
andl
lea
push
push
push
call
cmpl
mov
je
mov
add
incl
lea
push
mov
call
xor
inc
mov
decl
je
mov
mov
push
call
orb
mov
push
call
mov
test
jne
testb
je
mov
add
push
call
test
pop
je
xor
inc
mov
pop
pop
xor
pop
call
leave
ret
movl
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
add
push
push
call
test
je
mov
mov
lea
add
lea
cmp
je
push
push
mov
test
je
mov
mov
add
add
cmp
jne
pop
pop
mov
addl
mov
add
ret
push
mov
push
push
mov
push
lea
xor
cmp
jne
cmp
je
mov
mov
call
cmp
je
push
call
mov
push
lea
mov
call
mov
lea
push
push
call
pushl
lea
mov
add
call
mov
cmp
je
mov
add
movb
mov
mov
call
cmp
je
lea
push
lea
call
lea
call
pop
pop
xor
pop
pop
ret
mov
call
jmp
push
mov
and
sub
andl
push
mov
mov
push
lea
push
push
push
call
cmpl
je
mov
mov
call
test
je
mov
and
mov
je
push
push
call
test
pop
pop
jne
mov
mov
xor
test
jne
mov
pop
pop
mov
pop
ret
push
mov
xor
inc
movl
movl
mov
andl
test
push
mov
mov
mov
je
mov
shl
push
push
call
test
pop
pop
mov
je
test
jne
test
jbe
mov
test
je
mov
push
push
push
call
test
js
mov
incl
test
je
xor
mov
mov
mov
pop
pop
ret
push
mov
push
push
call
test
pop
je
push
lea
push
pushl
mov
mov
call
pop
test
je
testl
jne
pushl
mov
push
push
call
leave
ret
xor
jmp
push
mov
push
push
cmpl
push
push
jne
pop
pop
leave
ret
mov
mov
mov
cmp
je
push
push
mov
mov
mov
push
push
mov
call
pushl
lea
push
call
mov
test
pop
pop
mov
jne
mov
mov
test
je
and
mov
lea
call
cmpl
jne
jmp
andl
jmp
mov
mov
test
je
push
lea
mov
test
je
mov
push
push
call
xor
mov
call
pop
xor
ret
mov
pushl
mov
lea
push
add
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
push
xor
mov
push
mov
call
test
je
mov
testw
jne
cmp
jne
cmp
jne
testw
jne
mov
push
push
call
cmp
pop
pop
push
pushl
mov
push
jne
or
call
mov
pop
pop
xor
xor
pop
call
leave
ret
push
mov
decl
mov
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
mov
sub
push
xor
cmp
push
je
push
mov
call
cmp
movl
movl
movl
movl
movl
lea
mov
mov
mov
mov
mov
mov
mov
je
mov
mov
mov
cmp
je
cmp
je
mov
xor
mov
call
mov
cmp
je
mov
lea
push
call
mov
cmp
mov
je
push
lea
lea
movl
mov
mov
mov
call
cmp
je
pushl
mov
mov
call
lea
call
lea
call
pop
mov
pop
leave
ret
mov
mov
jmp
mov
push
push
xor
inc
movl
mov
xor
cmp
mov
mov
je
mov
push
call
push
mov
mov
lea
mov
call
add
and
repz
mov
fsts
lea
fstps
mov
mov
mov
mov
mov
mov
mov
mov
call
fld1
mov
mov
mov
lea
mov
mov
mov
mov
lea
orl
orl
fstps
fldz
push
fstps
lea
mov
push
movb
movb
push
lea
mov
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
mov
add
mov
orl
mov
orl
and
or
cmp
movl
movl
movl
mov
mov
movb
pop
jne
mov
mov
mov
cmp
jne
andl
mov
orl
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
push
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
push
push
mov
mov
mov
call
add
mov
mov
push
push
push
mov
call
test
je
cmp
je
mov
mov
mov
movsbw
sub
mov
add
add
cmp
jne
mov
flds
pop
fstps
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
sub
push
push
mov
lea
mov
mov
call
andl
push
lea
call
lea
push
push
call
pushl
andl
mov
lea
call
mov
test
je
mov
test
je
mov
push
push
call
lea
push
call
mov
mov
call
xor
mov
call
lea
call
lea
call
lea
call
pop
pop
leave
ret
push
mov
cmpl
je
mov
mov
test
je
andl
push
push
mov
lea
call
mov
test
je
pushl
mov
push
push
call
mov
lea
call
mov
pop
pop
ret
mov
test
je
mov
mov
test
je
mov
call
test
jl
movsbl
mov
test
mov
je
mov
push
call
xor
ret
xor
jmp
mov
jmp
push
mov
sub
mov
push
xor
push
mov
lea
mov
call
cmp
jne
mov
mov
push
push
call
lea
call
pop
leave
ret
mov
cmp
je
mov
cmp
je
lea
lea
mov
push
push
call
mov
lea
mov
mov
call
mov
mov
xor
cmp
push
sete
push
push
call
in
adc
test
inc
sbb
mov
cmp
je
lea
call
jmp
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
push
mov
lea
mov
mov
push
mov
mov
call
mov
mov
call
lea
mov
mov
push
mov
call
mov
mov
call
xor
cmp
mov
jge
mov
cmp
jl
mov
dec
cmpl
mov
jge
mov
cmp
jl
xor
cmp
lea
mov
jg
test
jle
xor
mov
mov
mov
mov
test
mov
jge
or
cmp
jne
push
call
test
pop
je
mov
mov
mov
mov
push
mov
call
test
je
mov
mov
mov
push
mov
call
test
je
mov
mov
mov
mov
andl
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
inc
cmp
mov
jl
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
pop
pop
mov
pop
xor
call
mov
pop
ret
andl
mov
mov
mov
decl
jne
mov
call
push
call
pop
incl
mov
cmp
jle
jmp
push
mov
mov
mov
sub
push
push
call
xor
cmp
jne
add
push
pop
call
cmp
je
mov
cmp
mov
mov
movl
mov
mov
mov
mov
mov
je
mov
mov
mov
mov
pushl
mov
pushl
lea
push
call
mov
mov
mov
mov
movl
mov
mov
mov
call
test
js
mov
push
pop
call
cmp
je
mov
cmp
mov
mov
movl
mov
mov
mov
mov
mov
je
mov
mov
mov
mov
pushl
mov
pushl
lea
push
call
mov
mov
mov
mov
movl
mov
mov
mov
call
pop
pop
leave
ret
xor
jmp
mov
test
jne
cmp
je
test
jne
cmp
je
mov
mov
push
push
call
decl
je
andl
ret
push
call
andl
pop
ret
push
mov
mov
mov
cmp
mov
push
je
cmp
je
cmp
je
andl
lea
push
push
push
call
mov
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
add
xor
jne
test
je
lea
test
mov
je
mov
push
call
xor
jmp
xor
jmp
mov
test
je
mov
rol
xor
ret
xor
ret
push
mov
push
push
xor
push
mov
call
cmp
pop
je
movl
xor
inc
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
pushl
pushl
pushl
push
call
test
push
js
mov
mov
call
xor
pop
pop
pop
ret
xor
jmp
push
mov
and
sub
push
mov
cmpb
push
je
mov
andl
andl
mov
lea
push
lea
push
lea
push
push
call
add
test
js
pushl
mov
pushl
mov
pushl
pushl
call
mov
lea
call
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
mov
test
mov
push
mov
push
mov
jne
test
jne
mov
cmp
ja
mov
sub
cmp
lea
pop
mov
mov
pop
jb
lea
mov
mov
movw
ret
lea
mov
mov
movw
ret
mov
jmp
push
mov
sub
push
push
mov
mov
xor
push
lea
lea
movl
mov
mov
mov
call
cmp
je
pushl
mov
lea
mov
mov
call
push
lea
call
lea
push
pushl
mov
call
test
js
cmp
mov
mov
jne
push
push
call
mov
mov
push
push
push
pushl
push
call
mov
lea
call
lea
call
lea
call
pop
mov
pop
leave
ret
push
jmp
push
mov
sub
mov
andl
andl
push
push
mov
mov
lea
push
mov
call
mov
call
test
js
mov
mov
test
push
jbe
andl
mov
lea
mov
mov
mov
movl
jmp
addl
mov
mov
andl
mov
mov
mov
lea
add
call
push
pushl
mov
call
test
jne
mov
mov
call
test
jne
mov
test
mov
mov
je
incl
mov
andl
test
mov
je
mov
call
mov
mov
call
cmpl
ja
incl
mov
mov
xor
test
jne
push
push
lea
call
mov
call
test
jne
mov
mov
mov
xor
test
jne
test
je
mov
call
mov
call
mov
test
jne
incl
mov
cmp
jb
mov
mov
mov
incl
test
je
call
xor
pop
pop
pop
leave
ret
mov
jmp
mov
mov
push
call
ret
mov
call
mov
call
ret
movzbl
sub
jne
add
ret
dec
jne
add
ret
mov
and
cmp
movl
jne
push
push
mov
xor
cmp
jne
mov
cmp
jne
push
push
push
lea
mov
mov
push
push
call
mov
cmp
jne
lea
mov
cmp
jne
lea
mov
cmp
jne
lea
mov
cmp
pop
jne
lea
call
lea
call
lea
call
pop
lea
pop
jmp
push
xor
mov
adc
and
mov
cmp
je
jmp
push
mov
mov
push
push
mov
xor
push
lea
call
cmp
je
mov
cmpl
push
mov
je
cmpl
je
cmpl
jne
mov
push
push
push
call
add
test
jne
mov
jmp
mov
push
push
push
call
add
test
jne
add
push
add
push
push
call
test
je
mov
pop
pop
pop
pop
ret
mov
push
push
push
call
add
test
jne
add
push
add
jmp
xor
jmp
int3
int3
push
push
mov
call
xor
add
cmp
je
mov
mov
movl
mov
lea
mov
mov
mov
mov
and
mov
or
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
pop
ret
xor
pop
ret
push
mov
push
mov
test
jne
and
testb
je
mov
mov
dec
neg
sbb
and
jne
mov
mov
mov
lea
push
push
push
call
mov
leave
ret
xor
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
push
lea
lea
cmp
je
push
mov
mov
lea
test
je
mov
mov
mov
test
mov
je
mov
push
mov
call
add
add
cmp
jne
mov
pop
mov
mov
add
mov
pop
pop
lea
pop
ret
push
mov
mov
mov
sub
push
push
push
push
call
mov
lea
mov
call
mov
dec
dec
neg
sbb
lea
inc
call
cmp
jne
movl
movzbl
mov
xor
dec
mov
je
dec
je
sub
mov
add
add
test
mov
je
lea
mov
call
cmp
jne
movl
lea
push
pushl
pushl
pushl
pushl
pushl
call
add
cmpl
mov
je
lea
mov
call
cmp
jne
movl
add
mov
call
cmp
je
cmp
je
cmpl
jne
mov
call
test
jne
mov
call
test
je
pushl
mov
call
pop
test
jl
sub
js
mov
mov
mov
call
cmp
jne
mov
mov
mov
push
add
push
push
push
pushl
movl
pushl
call
add
mov
add
mov
call
cmp
jne
mov
movl
call
test
je
pushl
call
pop
mov
test
jl
xor
cmp
je
cmp
je
cmp
je
mov
cmp
je
mov
cmp
jg
mov
cmp
jg
test
jle
mov
cltd
mov
mov
pushl
mov
pushl
cltd
mov
mov
mov
cltd
push
push
call
pushl
pushl
push
push
call
cmp
jl
pushl
mov
mov
pushl
cltd
push
push
call
pushl
pushl
push
push
call
cmp
jg
mov
test
jle
mov
cltd
mov
mov
pushl
mov
pushl
cltd
mov
mov
mov
cltd
push
push
call
add
pushl
push
push
call
cmp
jl
pushl
mov
mov
pushl
cltd
push
push
call
pushl
pushl
push
push
call
mov
cmp
jg
cmp
jg
cmp
jl
cmp
jg
cmp
jl
mov
mov
pop
mov
pop
pop
leave
ret
cmp
je
cmpl
jne
lea
call
test
jne
andl
jmp
push
push
pushl
pushl
pushl
pushl
call
add
mov
jmp
lea
call
test
je
pushl
lea
call
pop
test
jl
sub
js
mov
jmp
cmp
jne
mov
cmp
jl
cmp
jg
mov
cmp
jl
cmp
jle
jmp
cmp
je
jmp
mov
mov
jmp
mov
mov
jmp
xor
jmp
push
mov
and
sub
push
push
push
mov
or
cmp
jne
pop
pop
pop
mov
pop
ret
push
mov
push
push
test
je
mov
push
call
test
je
mov
push
mov
push
mov
call
test
js
mov
mov
test
push
push
jbe
andl
mov
mov
movl
mov
mov
mov
mov
test
je
mov
mov
cmp
je
lea
mov
test
je
orl
mov
mov
push
pushl
pushl
pushl
mov
call
test
jne
incl
mov
addl
cmp
jb
xor
pop
pop
pop
leave
ret
int3
push
push
push
mov
mov
test
je
and
test
je
mov
xor
mov
lea
mov
cmp
je
mov
test
je
and
mov
mov
jne
mov
test
jne
mov
pop
pop
pop
ret
cmpl
jne
test
je
cmp
je
mov
test
je
push
lea
lea
push
mov
mov
call
cmp
je
push
push
push
push
mov
call
pop
mov
lea
mov
push
add
mov
call
pop
pop
pop
ret
lea
push
add
push
mov
call
movl
pop
pop
pop
ret
push
mov
mov
mov
lea
push
push
call
mov
pop
ret
mov
mov
test
jne
call
mov
mov
xor
ret
push
mov
mov
cmpl
je
push
push
pushl
pushl
call
pop
ret
push
pushl
mov
call
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
push
xor
mov
lea
push
mov
push
lea
mov
mov
mov
lea
push
lea
push
push
push
xor
movl
mov
movl
call
add
test
je
mov
mov
push
push
push
mov
mov
push
push
lea
push
mov
call
test
mov
je
lea
push
push
push
call
add
test
je
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
push
call
test
js
lea
call
mov
mov
mov
mov
test
jne
mov
pop
pop
pop
mov
pop
ret
pushl
push
call
ret
mov
mov
test
je
mov
mov
mov
push
call
xor
ret
mov
cmp
jne
cmp
ja
movzbl
jmp
flds
flds
fucompp
fnstsw
test
jp
xor
inc
ret
xor
ret
mov
sub
neg
sbb
inc
ret
nop
outsb
popa
add
adc
add
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
or
push
and
add
call
xor
ret
push
mov
sub
push
push
xor
push
lea
lea
movl
movl
mov
mov
call
push
call
cmp
pop
je
mov
mov
mov
mov
movb
mov
cmp
mov
jne
mov
lea
call
mov
lea
call
mov
lea
call
mov
lea
mov
call
mov
lea
push
call
mov
lea
push
push
call
mov
mov
lea
push
push
call
mov
xor
cmp
je
incl
mov
cmp
mov
jne
mov
mov
mov
mov
call
cmp
mov
mov
je
pop
xor
pop
leave
ret
push
push
lea
push
mov
call
cmp
je
push
call
cmp
pop
je
movl
mov
lea
call
mov
mov
push
pushl
push
push
call
mov
mov
push
pushl
push
push
call
mov
mov
push
pushl
push
push
call
mov
call
lea
movl
call
lea
call
jmp
xor
jmp
push
mov
push
mov
call
test
je
mov
push
push
xor
push
mov
lea
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
cmp
je
push
call
cmp
pop
je
mov
mov
cmp
mov
movl
mov
je
mov
push
call
pushl
lea
push
movl
mov
movl
call
push
call
pop
lea
call
lea
call
pop
pop
xor
leave
ret
xor
jmp
push
mov
push
push
xor
push
lea
mov
mov
call
mov
lea
push
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
mov
mov
mov
mov
lea
call
mov
pop
leave
ret
mov
jmp
push
mov
pushl
mov
xor
cmp
setne
add
mov
lea
push
pushl
pushl
push
call
pop
ret
push
mov
test
je
mov
mov
add
test
je
mov
and
cmp
jne
test
je
mov
push
push
push
call
pop
ret
mov
call
jmp
andl
xor
jmp
push
mov
and
sub
push
mov
test
push
je
mov
xor
cmp
je
push
lea
movl
mov
call
mov
lea
push
push
call
test
js
mov
lea
push
push
call
test
js
mov
lea
call
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
call
test
js
mov
call
test
js
pushl
call
xor
lea
call
lea
call
mov
pop
pop
mov
pop
ret
mov
jmp
mov
jmp
push
mov
sub
push
mov
mov
push
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
test
js
mov
lea
push
call
mov
lea
push
push
call
test
js
mov
mov
add
push
push
call
lea
call
xor
lea
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
mov
mov
mov
sub
push
push
mov
test
push
je
mov
test
je
mov
mov
push
push
push
mov
push
mov
call
mov
mov
mov
add
push
push
call
mov
mov
add
test
mov
je
add
mov
test
mov
je
call
mov
mov
mov
test
mov
mov
mov
lea
mov
mov
je
mov
mov
mov
mov
mov
mov
andb
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
mov
mov
test
je
lea
movl
call
mov
mov
mov
add
push
push
push
call
mov
add
mov
mov
cmp
jge
cmpl
jne
cmp
jge
mov
lea
call
mov
mov
mov
jmp
push
call
mov
add
test
jne
mov
call
mov
cmpl
je
mov
call
mov
push
call
mov
call
mov
call
mov
add
call
mov
mov
mov
lea
lea
cmp
jne
push
push
push
lea
push
call
push
push
add
push
movl
call
add
xor
pop
pop
pop
mov
pop
ret
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
sub
push
push
mov
neg
sbb
xor
and
cmp
push
mov
mov
mov
mov
jne
mov
push
lea
mov
call
mov
lea
push
mov
push
push
pushl
push
pushl
pushl
push
call
test
js
mov
pushl
mov
push
call
mov
mov
mov
mov
push
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
mov
push
lea
mov
call
mov
mov
lea
push
push
call
mov
jmp
push
mov
push
mov
call
mov
xor
cmp
jne
cmp
lea
inc
add
cmp
je
mov
movsl
sbb
pusha
xor
push
inc
call
mov
pop
pop
ret
pushl
lea
call
jmp
push
mov
push
push
mov
test
je
mov
test
je
andl
lea
push
push
push
mov
call
mov
add
leave
ret
xor
jmp
push
mov
and
sub
push
mov
push
mov
testb
push
jne
call
mov
andl
mov
mov
mov
mov
mov
call
test
je
add
lea
movsl
movsl
movsl
lea
mov
mov
push
mov
movsl
call
mov
add
mov
add
mov
mov
add
add
mov
add
sub
cmpl
mov
mov
mov
jne
cmpl
jl
mov
pushl
lea
call
mov
mov
andl
andl
mov
testb
mov
mov
jne
mov
testw
jne
mov
andl
mov
push
push
push
pushl
mov
pushl
lea
lea
call
mov
mov
and
jne
lea
mov
andw
test
jne
mov
mov
call
mov
and
or
jne
mov
add
lea
movsl
movsl
movsl
movsl
mov
xor
lea
mov
call
mov
and
xor
or
movl
je
mov
push
push
push
pushl
lea
pushl
mov
push
lea
push
pushl
push
call
mov
test
jne
mov
and
xor
or
je
lea
push
mov
call
push
mov
call
push
call
pop
mov
and
xor
or
jne
test
jne
pushl
mov
pushl
jo
inc
add
test
je
xor
test
jne
andl
mov
push
pushl
mov
pushl
lea
push
lea
push
pushl
call
pushl
lea
push
lea
push
push
call
inc
add
add
add
add
cmp
je
mov
add
add
mov
cmp
je
mov
add
add
mov
mov
mov
mov
testb
jne
mov
mov
and
xor
or
je
mov
mov
mov
mov
mov
cmp
jne
mov
andl
xor
pop
pop
pop
mov
pop
ret
mov
jmp
mov
mov
call
mov
mov
jmp
push
mov
and
sub
mov
xor
mov
add
add
or
push
mov
mov
push
jne
mov
xor
mov
xor
inc
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
push
lea
movl
movl
mov
in
inc
add
lea
mov
xchg
push
inc
add
cmp
pop
and
mov
movl
movl
mov
call
pop
pop
lea
push
lea
call
testb
jne
testb
jne
mov
mov
lea
push
push
push
mov
mov
mov
call
mov
test
jne
cmp
jne
push
call
cmp
pop
je
mov
mov
add
cmp
mov
movl
mov
mov
je
mov
push
call
xor
mov
lea
mov
push
lea
call
cmp
je
mov
push
call
mov
call
cmp
je
mov
push
call
testb
mov
je
mov
add
push
call
test
pop
je
testb
je
mov
add
push
call
test
pop
je
lea
call
xor
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
push
mov
call
cmpl
je
call
test
je
mov
push
mov
call
pop
ret
push
mov
sub
mov
push
push
mov
mov
push
lea
lea
push
mov
movl
add
push
add
ret
je
mov
push
mov
call
mov
cmp
mov
je
pushl
mov
add
mov
call
push
lea
mov
call
mov
mov
lea
push
pushl
push
call
mov
test
jne
push
lea
mov
call
lea
push
push
pushl
add
pushl
mov
push
call
test
jne
cmp
je
pushl
mov
pushl
pushl
pushl
push
call
lea
call
lea
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
mov
push
pushl
pushl
pushl
push
call
jmp
push
mov
mov
sub
push
xor
cmp
push
je
mov
cmp
je
push
mov
lea
mov
call
mov
cmp
je
mov
lea
push
push
call
cmp
jne
push
lea
mov
call
mov
lea
push
push
call
cmp
je
mov
cmp
je
push
mov
add
mov
call
mov
call
cmp
je
testb
mov
je
cmp
je
cmp
je
lea
call
lea
call
lea
call
pop
pop
leave
ret
cmp
je
jmp
push
mov
sub
push
push
push
mov
call
xor
cmp
je
cmp
je
push
pushl
push
push
lea
push
call
mov
add
push
mov
call
test
ja
test
je
mov
push
call
xor
cmp
jne
movb
mov
cmp
jne
cmp
je
mov
push
mov
call
cmp
jne
mov
cmp
je
cmpb
je
mov
push
mov
lea
mov
call
pushl
lea
push
pushl
mov
movl
movl
movl
call
testb
jne
testb
jne
mov
lea
push
push
mov
movb
call
mov
cmp
jne
lea
call
pop
pop
pop
leave
ret
mov
movl
cmpb
jne
lea
call
cmp
jae
mov
mov
mov
andl
push
mov
lea
call
mov
test
je
mov
push
call
lea
call
addl
inc
cmp
jb
jmp
mov
push
call
jmp
xor
jmp
mov
test
je
mov
and
cmp
jne
ret
mov
jmp
push
mov
sub
push
pushl
mov
pushl
pushl
push
call
test
js
push
push
mov
call
xor
cmp
pop
je
movl
mov
mov
push
lea
mov
mov
call
cmp
je
pushl
mov
lea
mov
call
cmp
je
lea
push
xor
mov
mov
mov
call
mov
pushl
mov
push
call
lea
push
call
add
call
cmp
mov
mov
mov
je
mov
push
lea
mov
call
mov
lea
push
push
push
call
pushl
mov
add
mov
call
mov
cmp
je
mov
push
push
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
cmp
je
movzwl
mov
push
push
call
lea
call
lea
call
lea
call
mov
lea
call
mov
pop
pop
pop
leave
ret
push
push
call
jmp
push
mov
sub
push
push
mov
push
lea
mov
call
test
je
lea
mov
cmp
je
testb
jne
cmpl
je
mov
mov
mov
add
mov
mov
add
mov
mov
xor
inc
pop
pop
pop
leave
ret
mov
mov
call
cmp
je
cmp
je
cmp
je
xor
jmp
mov
push
mov
call
mov
lea
push
mov
call
push
call
test
pop
pop
je
lea
push
mov
call
mov
mov
add
mov
mov
add
mov
mov
add
mov
lea
mov
movsl
movsl
movsl
jmp
mov
call
test
je
mov
jmp
xor
inc
ret
push
mov
mov
test
push
push
je
cmpl
je
mov
push
pushl
lea
mov
mov
mov
call
mov
lea
push
mov
call
mov
push
push
call
test
pop
js
mov
test
je
mov
mov
push
push
call
test
je
mov
mov
xor
pop
pop
pop
ret
mov
test
jne
push
push
push
mov
or
lea
mov
mov
push
mov
call
movzbl
movb
mov
test
je
mov
shr
test
jbe
xor
mov
test
je
mov
and
lea
mov
mov
call
inc
cmp
jb
lea
xor
mov
call
push
lea
mov
lea
push
push
call
push
push
push
call
lea
push
push
movb
call
add
pop
pop
pop
pop
ret
xor
jmp
push
mov
mov
test
je
mov
jmp
mov
test
jne
mov
test
je
mov
pop
ret
mov
test
je
mov
test
jne
cmp
je
mov
mov
call
test
jne
jmp
xor
jmp
xor
jmp
push
mov
and
sub
push
xor
inc
push
mov
xor
push
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
call
test
js
push
lea
call
pop
call
cmp
je
lea
push
add
mov
push
push
call
test
js
cmp
setne
mov
lea
call
mov
lea
or
add
push
push
call
test
js
lea
lea
insb
inc
inc
add
test
jne
push
lea
call
test
jne
call
cmp
mov
je
mov
push
mov
call
mov
cmp
mov
jne
push
call
cmp
pop
je
lea
push
lea
push
pushl
lea
push
lea
push
mov
call
mov
cmp
mov
je
mov
push
call
mov
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
push
push
push
call
test
lea
jne
call
cmp
je
mov
push
call
lea
call
mov
cmp
jne
mov
test
jne
testb
jne
test
jne
testb
jne
test
mov
je
mov
mov
inc
add
xlat
test
pop
je
test
je
mov
add
push
call
test
pop
je
test
jne
testb
jne
test
je
mov
add
push
call
test
pop
je
xor
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
cmp
je
cmp
je
andl
lea
push
push
pushl
call
mov
mov
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
push
lea
sub
mov
xor
mov
mov
push
push
mov
xor
lea
xor
mov
mov
mov
call
lea
xor
call
push
lea
call
push
mov
mov
pop
lea
push
pushl
lea
mov
mov
movl
mov
mov
mov
mov
push
call
mov
lea
push
pushl
lea
mov
mov
movl
mov
mov
mov
mov
push
call
cmp
mov
jne
push
push
push
lea
call
test
je
mov
movl
mov
movsbw
decl
mov
inc
inc
inc
cmp
jne
push
push
pop
lea
call
test
je
push
movl
call
cmp
pop
je
call
lea
mov
mov
call
cmp
je
pushl
mov
pushl
lea
push
call
test
mov
js
pushl
mov
lea
mov
call
mov
cmp
je
mov
push
pushl
push
call
mov
push
call
test
je
lea
call
testb
jne
testb
jne
testb
je
mov
add
push
call
test
pop
je
xor
mov
pop
xor
pop
call
add
leave
ret
mov
test
je
cmpl
jne
cmpl
movl
jne
xor
ret
mov
push
call
test
js
andl
ret
push
mov
sub
push
mov
mov
push
push
push
xor
push
lea
call
mov
xor
cmp
jbe
mov
mov
test
lea
mov
lea
mov
mov
jne
mov
push
push
call
test
jne
mov
pushl
mov
push
call
pushl
mov
push
pushl
call
cmpl
mov
jne
mov
test
jne
push
call
test
pop
je
pushl
mov
andl
lea
movl
call
pushl
lea
call
mov
test
mov
je
mov
push
call
push
pushl
call
test
jne
cmpb
mov
jne
testb
je
cmpb
cmp
add
cld
lea
lea
call
incl
mov
mov
cmp
jb
lea
call
test
js
xor
lea
call
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
mov
mov
test
mov
je
mov
cmp
je
mov
mov
push
call
test
jne
test
je
mov
call
mov
test
je
mov
test
mov
je
cmpl
jne
mov
mov
mov
mov
lea
cmpl
je
lea
push
pushl
mov
pushl
lea
push
call
mov
add
lea
cmpl
je
lea
push
pushl
mov
pushl
lea
push
call
mov
add
lea
cmpl
je
lea
push
pushl
mov
pushl
lea
push
call
mov
add
mov
cmp
je
cmp
je
cmp
je
cmp
je
fld1
push
push
push
fstps
lea
flds
lea
fstps
push
mov
add
call
fld1
add
push
push
push
fstps
lea
flds
lea
fstps
push
mov
add
call
movzbl
mov
push
push
push
lea
push
lea
push
lea
call
lea
mov
add
cmp
je
cmp
je
cmp
je
cmp
je
add
mov
cmp
je
cmp
je
cmp
je
cmp
je
xor
cmp
je
mov
cmp
je
mov
mov
mov
cmp
jne
mov
pop
pop
pop
leave
ret
mov
mov
test
jne
or
mov
mov
cmp
jne
jmp
test
je
mov
call
jmp
cmpl
je
jmp
mov
mov
lea
call
jmp
mov
mov
push
call
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
jne
jmp
xor
jmp
xor
mov
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
call
add
or
mov
inc
sub
shlb
or
dec
xor
xor
mov
cmp
jb
sub
test
je
mov
and
cmp
jb
xor
ret
lea
mov
neg
sbb
and
jmp
xor
jmp
push
mov
sub
push
push
mov
cmpb
push
ja
xor
push
mov
lea
mov
call
cmp
je
lea
mov
call
movzwl
andb
cmp
mov
je
cmp
je
mov
cmp
je
mov
lea
push
push
call
test
js
testb
jne
testb
je
cmp
je
mov
testb
je
mov
mov
mov
cmp
je
lea
mov
call
mov
mov
xor
xor
mov
or
je
push
push
push
lea
call
push
push
mov
mov
mov
push
pushl
mov
call
lea
call
lea
call
pop
pop
pop
leave
ret
or
mov
jmp
orb
jmp
push
mov
sub
push
mov
mov
test
push
push
jne
mov
test
je
cmp
je
test
je
test
mov
jne
mov
cmp
ja
mov
mov
mov
add
cmp
mov
jae
fldl
mov
sub
fstpl
mov
push
lea
push
push
push
push
call
fldl
faddl
mov
fstpl
testb
mov
je
movzbl
cmp
je
mov
mov
test
jns
lea
lea
cmp
jae
mov
test
jns
push
sub
push
push
call
faddl
fstpl
fldl
inc
faddl
incl
cmp
fstpl
jb
mov
test
je
mov
mov
cmpl
jne
mov
mov
mov
mov
add
push
push
mov
call
mov
cmp
ja
mov
mov
pop
pop
pop
leave
ret
test
je
jmp
test
je
jmp
cmpl
jne
push
call
test
pop
je
andl
movl
mov
mov
mov
mov
mov
mov
push
add
push
call
fldl
push
push
fstpl
pushl
lea
pushl
call
fstpl
fldl
mov
fsubl
add
mov
call
test
mov
fildl
jl
mov
fstps
lea
push
add
call
fldl
jmp
mov
jmp
push
mov
push
mov
push
mov
push
mov
mov
call
test
jne
mov
push
push
pushl
mov
andl
push
pushl
call
mov
add
mov
xor
pop
pop
pop
pop
ret
mov
call
test
je
pushl
call
test
pop
jne
push
mov
call
mov
test
jne
jmp
xor
jmp
decl
push
push
push
push
mov
push
movl
movl
movl
pop
je
push
mov
call
lea
cmp
sub
call
pop
lea
cmp
sub
call
pop
lea
call
lea
call
push
push
lea
mov
mov
push
push
call
mov
cmp
jne
lea
call
lea
mov
call
mov
cmp
jne
lea
call
lea
call
lea
call
lea
call
pop
lea
pop
pop
pop
jmp
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
add
lds
test
decl
or
adc
lock
incl
dec
mov
test
je
cmpb
je
mov
ret
mov
test
jne
movb
jmp
mov
call
test
je
cmpl
mov
mov
mov
je
push
lea
push
push
call
pop
test
mov
jne
movb
xor
ret
call
test
jns
jmp
push
lea
sub
mov
xor
mov
push
xor
cmp
push
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
mov
mov
je
mov
lea
push
pushl
push
call
test
js
cmp
je
add
mov
lea
call
mov
mov
push
pushl
lea
push
call
push
lea
mov
call
lea
mov
call
mov
pushl
neg
lea
sbb
call
mov
cmp
je
mov
lea
push
push
push
lea
push
push
call
mov
lea
call
test
js
pushl
lea
lea
mov
mov
movl
movl
mov
mov
call
test
js
pushl
mov
lea
push
pushl
call
testb
mov
je
mov
add
push
call
test
pop
je
lea
call
testb
jne
testb
jne
mov
mov
pop
pop
xor
pop
call
add
leave
ret
push
mov
push
mov
push
xor
push
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
lea
push
call
mov
mov
mov
test
mov
je
mov
push
call
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
test
jne
test
jne
xor
pop
pop
pop
leave
ret
push
mov
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
jmp
andl
lea
push
push
pushl
call
mov
mov
mov
jmp
push
mov
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
jmp
andl
lea
push
push
pushl
call
mov
mov
mov
jmp
push
mov
push
mov
cmpl
je
add
jno
adc
add
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
xor
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
push
call
xor
mov
mov
pop
pop
ret
mov
test
je
lea
jmp
mov
test
je
lea
jmp
push
call
test
pop
je
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
mov
push
je
mov
mov
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
pop
movl
xor
pop
ret
pop
movl
mov
pop
ret
mov
cmp
je
push
pushl
call
mov
ret
mov
mov
mov
mov
jmp
push
mov
mov
mov
mov
push
mov
lea
andl
push
mov
lea
push
mov
movl
call
lea
andl
lea
push
mov
movl
call
lea
andl
lea
push
push
mov
movl
call
mov
mov
mov
mov
mov
pop
pop
mov
mov
pop
ret
push
mov
mov
mov
mov
push
mov
lea
andl
push
mov
lea
push
mov
movl
call
lea
andl
lea
push
mov
movl
call
lea
andl
lea
push
mov
movl
call
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
mov
pop
ret
push
mov
push
push
push
mov
mov
add
cmp
push
mov
jne
xor
cmp
jg
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
mov
add
cmp
push
mov
jne
mov
cmp
jg
add
leave
ret
push
mov
and
sub
mov
xor
mov
mov
push
mov
mov
push
mov
push
mov
lea
mov
call
test
je
mov
andl
test
mov
je
push
call
pop
movl
push
lea
lea
call
mov
neg
sbb
and
je
mov
test
je
push
mov
call
mov
xor
pop
inc
push
lea
lea
mov
mov
call
test
je
mov
mov
testb
jne
testb
jne
cmpl
je
cmpl
je
pushl
call
pop
mov
pop
pop
pop
xor
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
fldz
mov
fstl
sub
fstpl
fldl
adc
add
inc
and
fstpl
fldl
fstpl
push
push
push
lea
push
lea
push
call
mov
xor
mov
mov
mov
mov
mov
mov
fildl
add
fmull
fstpl
call
call
mov
mov
mov
fildl
mov
fmull
fstpl
call
call
mov
mov
mov
mov
fildl
fmull
fstpl
call
call
mov
mov
mov
mov
fildl
fmull
fstpl
call
call
mov
mov
add
ret
fldz
push
fldl
push
fcom
fnstsw
fstp
test
jne
faddl
fstpl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
je
mov
push
call
add
cmpl
je
mov
push
call
add
mov
pop
add
ret
mov
push
push
mov
cmp
push
jne
mov
mov
lea
push
push
movl
movl
mov
call
mov
mov
test
jne
test
jne
test
js
mov
mov
push
call
mov
add
pop
pop
pop
pop
add
ret
sub
jne
mov
mov
lea
push
push
movl
movl
mov
call
mov
mov
push
push
mov
call
add
jmp
xor
je
mov
push
call
mov
andl
andl
mov
mov
test
je
pushl
mov
push
call
shr
not
and
mov
mov
ret
xor
mov
mov
mov
mov
mov
mov
ret
mov
test
je
mov
andl
mov
xor
inc
ret
testb
push
mov
movl
je
push
call
pop
mov
pop
ret
push
mov
sub
push
mov
push
push
xor
cmp
je
pop
pop
pop
leave
ret
push
mov
sub
push
mov
cmpl
je
push
movl
movl
lea
push
mov
xor
cmp
je
mov
mov
mov
cmp
je
cmp
mov
jbe
mov
movl
mov
mov
mov
mov
mov
call
mov
cmp
je
incl
mov
mov
addl
cmp
jb
xor
mov
cmp
jne
or
add
cmp
mov
jne
mov
pushl
push
push
call
pop
pop
xor
pop
leave
ret
mov
mov
call
sub
jne
mov
add
lea
cmp
je
mov
mov
test
je
mov
push
call
add
cmp
jne
push
push
pushl
xor
push
inc
call
decl
subl
cmpl
jne
jmp
dec
dec
jne
jmp
int3
int3
int3
mov
mov
xor
add
push
lea
cmp
je
movsbl
rol
xor
add
jmp
pop
ret
push
mov
cmp
push
mov
je
cmp
je
cmp
je
pop
xor
pop
ret
push
mov
call
mov
mov
mov
mov
mov
push
push
push
push
call
pop
jmp
call
jmp
push
mov
push
push
push
mov
mov
add
cmp
push
mov
jne
xor
cmp
jg
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
mov
add
cmp
push
mov
jne
mov
cmp
jg
pop
pop
pop
leave
ret
push
mov
push
andl
push
mov
test
je
andl
push
mov
mov
mov
call
mov
andl
test
jne
lea
mov
lea
push
call
test
mov
js
mov
test
je
mov
push
call
mov
mov
mov
call
mov
test
je
decl
cmpl
je
mov
pop
pop
leave
ret
mov
test
je
push
call
pop
xor
ret
push
mov
test
je
cmpl
jg
xor
mov
xor
pop
ret
push
mov
push
andl
push
push
mov
mov
lea
push
mov
call
test
js
cmpl
push
jne
xor
pop
pop
pop
leave
ret
push
mov
mov
call
lea
mov
call
push
mov
mov
call
pop
pop
ret
mov
test
je
push
call
pop
xor
ret
andl
inc
mov
mov
test
jne
mov
cmpl
push
je
pushl
mov
call
mov
test
jne
mov
mov
call
andl
andl
mov
pop
ret
pushl
push
pushl
pushl
call
jmp
push
mov
cmpl
je
cmpl
push
je
mov
push
lea
movl
call
cmpb
je
pop
xor
pop
ret
pushl
lea
call
test
je
jmp
cmpb
jne
push
lea
call
mov
call
pop
movb
jmp
int3
mov
sub
cmpl
push
push
mov
push
jge
mov
mov
movl
mov
mov
push
mov
movl
call
mov
add
test
js
mov
cmpl
push
je
mov
cmp
test
les
add
add
test
je
push
call
mov
add
cmpl
jge
mov
mov
push
push
push
call
mov
add
cmpl
mov
jge
mov
mov
cmp
mov
add
addl
je
test
jle
mov
mov
add
adcl
mov
push
call
add
test
js
test
jle
mov
push
call
mov
pop
pop
pop
pop
add
ret
jge
call
cmp
jne
push
call
add
pop
pop
pop
mov
pop
add
ret
cmpl
je
push
push
mov
push
pushl
mov
mov
pushl
mov
push
call
test
lea
js
cmpl
je
andl
mov
pop
pop
ret
mov
jmp
movl
jmp
push
mov
sub
mov
xor
mov
push
pushl
mov
mov
push
call
test
jne
xor
mov
xor
pop
call
leave
ret
push
mov
cmpl
jne
cmpb
je
pushl
mov
pushl
call
cmpb
je
push
mov
call
push
push
lea
call
pop
call
pop
ret
push
call
jmp
call
jmp
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
cmp
je
pushl
mov
xor
push
mov
call
test
jne
mov
mov
call
test
jne
lea
call
pop
ret
xor
inc
jmp
push
mov
push
andl
mov
test
mov
push
mov
je
add
mov
andl
mov
push
call
pushl
mov
push
call
mov
test
pop
pop
je
mov
push
call
mov
neg
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
or
mov
call
test
jne
mov
xor
cmp
mov
jne
mov
push
mov
call
xor
pop
pop
ret
push
jmp
push
mov
sub
mov
push
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
push
lea
lea
push
call
mov
rolb
cwtl
xchg
push
leave
xchg
xchg
iret
add
ljmp
out
jp
mov
xchg
add
cmpl
icebp
lea
add
shll
pop
xchg
leave
add
stos
add
add
nop
adc
xchg
shlb
add
add
add
mov
mov
add
xchg
out
fwait
add
push
mov
add
push
push
push
call
add
add
add
fs
add
jne
jb
add
mov
loope
lret
stos
push
add
lea
inc
in
push
push
call
jge
add
sti
add
add
add
add
add
ljmp
dec
add
popf
mov
push
lret
push
add
add
jmp
clc
pop
push
push
push
lea
push
push
push
call
pop
test
mov
xchg
shlb
add
add
mov
pop
mov
ljmp
push
xchg
add
add
clc
fistpll
mov
mov
add
add
lcall
push
lea
push
lea
push
push
push
push
push
lea
push
push
call
add
add
mov
add
addb
mov
add
add
pusha
mov
xlat
cmpsb
add
add
xchg
mov
add
out
push
add
add
movsb
add
add
lds
cmpsl
add
cli
mov
in
fcompl
push
lea
push
push
push
lea
push
call
push
add
cmpb
add
in
xchg
add
add
pushf
lcall
add
xchg
xchg
add
push
leave
incb
rcrl
mov
add
add
mov
sarb
fisttpl
lcall
mov
faddl
add
push
push
push
lea
push
push
call
mov
nop
add
add
add
shr
add
add
add
add
in
int
add
add
lock
add
mov
fstpt
in
in
lcall
add
test
push
push
push
push
push
call
movb
add
popf
xchg
xchg
add
add
mov
add
loopne
aad
jecxz
jle
mov
mov
roll
mov
add
add
add
jne
add
cwtl
pop
icebp
pop
add
std
cmpsl
scas
add
push
out
add
cmpsl
lret
add
add
mov
jle
divb
roll
add
xchg
pop
sub
pop
jmp
ret
push
push
push
call
add
mov
add
add
mov
loopne
mov
imul
stos
add
cli
add
fwait
add
xchg
push
fwait
insb
test
movsl
fadds
movsb
mov
mov
lock
movl
mov
add
mov
add
in
imul
scas
sub
pop
mov
push
lea
push
push
push
push
push
lea
push
lea
push
lea
push
push
call
mov
cli
add
imul
mov
mov
add
into
add
add
add
add
lods
add
pop
jo
add
xchg
add
add
add
aad
add
add
mov
add
pop
hlt
push
lea
push
lea
push
push
lea
push
push
push
push
call
jge
rolb
imul
mov
addb
stc
fwait
add
out
out
add
rolb
add
mov
jo
sub
pop
add
push
lea
push
push
lea
push
push
push
push
push
call
mov
insb
iret
push
adcb
flds
aad
shrl
add
out
add
add
mov
pop
add
in
loopne
add
push
push
push
call
jnp
mov
add
add
mov
add
fiaddl
add
mov
jecxz
imul
mov
test
add
push
mov
push
hlt
xchg
into
add
lock
ljmp
mov
int3
shlb
lcall
ret
push
push
add
test
push
push
push
shl
sub
dec
inc
push
or
not
add
add
ror
rol
sub
shr
pop
pop
push
push
lea
push
push
lea
push
lea
push
push
call
jne
jns
flds
in
add
add
add
int3
fs
add
jno
insb
add
mov
add
fnstsw
add
jno
lods
leave
jge
add
add
aam
mov
add
add
test
fnstcw
enter
add
mov
in
pushl
push
push
lea
push
push
push
push
push
lea
push
push
lea
push
call
lcall
loop
push
pop
add
add
add
loopne
out
sti
add
sti
mov
pop
add
lahf
add
stos
mov
addl
stos
in
mov
add
add
je
scas
xchg
add
stos
add
add
add
pop
out
sub
pop
call
push
lea
push
push
lea
push
push
lea
push
lea
push
push
call
test
out
add
popf
pop
add
xchg
add
movb
nop
cmpsl
fsubp
push
lahf
roll
mov
add
add
aad
fiaddl
mov
movsl
out
xchg
add
mov
out
add
add
mov
sub
pop
mov
push
lea
push
call
add
int3
jne
add
jle
test
jbe
mov
add
add
add
negb
add
add
imul
mov
add
mov
xchg
sub
pop
movl
push
push
lea
push
push
push
call
jae
add
in
xchg
push
lret
push
push
add
add
pop
pop
pusha
out
repnz
add
stos
add
xchg
add
lea
add
add
bound
sub
pop
lea
push
push
call
mov
jp
add
add
add
lret
add
out
test
arpl
in
mov
jp
fildl
sub
pop
push
pushl
push
lea
push
push
push
push
push
push
call
mov
push
sti
add
add
jo
pop
add
add
add
add
add
add
fldenv
push
data16
add
add
stc
mov
imul
add
pop
pushl
call
push
push
push
call
add
add
stos
in
mov
into
addr16
cmpsb
nop
add
popf
int
cmpsb
repnz
add
add
loop
cmpsb
add
ja
add
in
jnp
mov
test
add
add
pushf
xchg
jl
stos
mov
mov
stc
xchg
add
add
sti
xchg
lds
in
hlt
lcall
jne
pushl
push
push
push
push
lea
push
push
push
lea
push
lea
push
lea
push
call
outsl
add
movb
fadd
add
test
add
in
add
add
mov
add
add
add
jmp
mov
cmpsl
jo
leave
scas
popa
testl
add
lret
rorl
add
pusha
sub
pop
call
push
push
ror
push
sub
add
xor
sub
dec
add
pop
add
add
ror
shl
pop
push
lea
push
push
lea
push
push
push
lea
push
push
call
stos
add
push
nop
frstor
fwait
pusha
les
aam
aad
mov
lret
mov
add
ret
test
add
add
add
mov
idivb
cmpsb
sahf
jnp
in
add
lcall
std
push
ja
add
test
add
loopne
add
out
fidivs
add
loopne
lcall
jne
push
push
lea
push
lea
push
lea
push
call
fdivrp
add
mov
insb
add
add
jnp
add
stos
jle
imul
add
mov
add
popf
add
xchg
movsb
add
iret
addb
sti
jecxz
push
mov
pop
call
push
push
lea
push
push
push
push
push
push
lea
push
lea
push
call
add
add
add
mov
add
scas
les
out
add
mov
add
rcrb
add
mov
mov
push
mov
enter
jns
sarl
xorb
outsl
loopne
sub
pop
push
push
push
rol
add
ror
xor
push
or
inc
add
inc
dec
sub
sub
xor
sub
lea
pop
ror
pop
push
push
push
call
notb
mov
jae
add
nop
add
incb
add
repnz
push
lods
add
jnp
aad
test
xchg
add
add
add
mov
add
add
outsl
pop
add
xchg
add
neg
jb
cmc
imul
pop
push
push
push
push
push
push
push
push
push
lea
push
call
jmp
fldl
fxch
add
loopne
jae
add
pusha
cmpsb
pop
mov
add
les
add
add
jbe
fiaddl
divb
add
rclb
inc
xchg
push
push
lea
push
push
lea
push
call
pop
bound
out
sahf
add
test
lock
cmpsb
jecxz
fistps
jmp
jmp
clc
add
add
lcall
clc
push
push
push
push
push
push
push
push
push
call
push
mov
mov
push
out
push
lahf
jno
add
lods
cmpsl
mov
jae
push
fdivl
enter
flds
addl
sahf
arpl
cli
add
test
mov
rcr
add
imulb
add
add
add
add
stos
ljmp
push
pop
add
xchg
add
sub
pop
push
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
out
add
mov
add
add
call
jne
add
add
mov
xchg
add
testb
mov
add
sar
out
add
add
fwait
mov
mov
test
add
pop
imul
sub
pop
push
push
push
push
push
push
call
push
mov
icebp
add
mov
stos
nop
je
add
mov
fisttpl
pop
icebp
xchg
mov
in
add
xchg
add
imul
fcom
add
jle
add
test
ret
std
fildl
add
mov
in
add
ja
mov
call
add
add
add
in
in
lcall
pop
hlt
push
lea
push
push
push
lea
push
push
push
push
push
push
call
add
add
xchg
add
mov
add
call
mov
mov
jae
movsb
add
arpl
add
addr16
repnz
insb
add
add
push
mov
fldenv
aad
mov
add
add
lock
add
sub
pop
add
add
push
push
call
push
imul
add
mov
std
push
icebp
jae
jno
pop
xchg
mov
je
out
popf
add
push
mov
add
add
add
aam
sub
pop
add
push
push
push
call
add
add
test
mov
jne
add
repnz
testl
add
addr16
sahf
add
add
add
add
jae
jecxz
into
add
sbbb
cld
lods
pop
sub
pop
mov
push
push
push
lea
push
lea
push
push
push
push
push
lea
push
call
mov
add
add
fsts
lcall
jmp
add
add
addl
add
add
sbbb
icebp
je
jne
in
fdivr
lcall
xor
push
push
push
push
push
push
call
add
leave
mov
add
add
lcall
add
fldl
fwait
roll
add
add
sub
pop
add
push
push
lea
push
lea
push
lea
push
push
push
push
call
jmp
out
add
xchg
mov
push
loop
add
flds
jmp
lea
xchg
add
add
sti
push
out
data16
enter
movl
jmp
mov
add
leave
fstpl
call
popa
add
add
sti
push
ja
sub
pop
add
push
push
lea
push
push
push
lea
push
lea
push
push
push
push
call
add
pusha
nop
mov
jle
out
in
add
add
mov
pop
add
fs
stos
jns
popa
mov
popl
push
jbe
add
xchg
out
lock
add
mov
add
mov
push
add
std
add
gs
les
add
jge
scas
leave
lods
jo
fiaddl
sub
pop
push
push
lea
push
push
push
push
push
push
push
call
sarb
add
add
hlt
fidivl
add
mov
cwtl
jnp
add
add
add
pop
mov
xor
push
push
push
lea
push
push
lea
push
push
call
movsl
xchg
add
and
add
addl
add
add
lds
mov
add
loop
add
add
sub
pop
add
pop
push
push
lea
push
push
push
lea
push
push
lea
push
push
call
add
call
jmp
fadds
fistpll
cmpsl
int3
mov
data16
xchg
lret
add
frstor
sti
add
add
roll
add
xorb
in
fdivr
lcall
dec
add
icebp
test
push
push
push
lea
push
push
push
push
call
pop
cmc
add
into
movb
fucomip
ror
add
add
mov
fsubrp
mov
lea
jns
mov
add
cltd
add
add
movsb
jb
add
add
rcl
add
in
mov
std
add
std
add
sub
pop
push
push
not
sub
pop
mov
push
push
push
push
push
push
call
mov
aam
iret
loope
push
loope
add
pushf
pop
hlt
outsl
mov
add
add
imul
add
add
cwtl
cld
add
add
jno
lcall
mov
add
mov
add
mov
std
add
mov
sub
pop
xor
push
push
push
push
push
call
lret
mov
add
mov
fxch
add
std
lahf
arpl
movsl
add
add
push
mov
pop
add
cwtl
add
add
fidivrl
int3
jo
nop
add
imul
hlt
add
xchg
xchg
jne
add
les
push
lea
push
lea
push
lea
push
push
call
jae
ficomps
pop
enter
test
mov
imul
out
outsl
xchg
cld
pop
mov
movl
add
nop
roll
add
sub
pop
sub
push
push
push
push
call
data16
mov
sti
out
rol
lret
add
push
add
add
add
pop
lret
int3
nop
outsl
andl
jns
stos
arpl
add
popf
jge
mov
out
mov
xchg
add
lds
add
addb
add
icebp
clc
jge
add
sub
pop
pop
push
push
lea
push
lea
push
push
call
push
icebp
hlt
je
sarb
rolb
rcll
mov
lea
add
filds
stc
add
add
nop
push
incb
add
sbbl
aad
xchg
add
js
add
mov
lcall
movsb
pop
push
push
push
push
push
push
lea
push
push
push
call
aad
popf
loope
icebp
popa
jb
imul
lahf
add
jp
add
add
enter
fadds
in
jb
addl
testl
push
add
add
mov
add
mov
add
add
mov
ret
xchg
add
jmp
pusha
sub
pop
mov
push
sub
xor
pop
add
push
pop
add
add
push
push
push
push
push
push
call
cmpsb
shr
cwtl
add
addb
mov
xchg
pushf
add
clc
add
add
add
add
mov
add
in
add
jnp
nop
mov
imul
push
stos
pusha
mov
fldcw
add
jge
mov
call
mov
xor
push
lea
push
push
lea
push
push
lea
push
push
push
call
pop
add
movsl
cmc
xchg
add
mov
mov
mov
jo
xchg
add
add
mov
jmp
add
mov
in
add
mov
add
into
add
push
mov
cmpsl
push
lcall
push
and
repnz
push
push
rol
add
pop
mov
push
push
lea
push
push
push
push
push
lea
push
push
call
rcrb
fsubrp
lds
add
ja
in
stos
add
pop
loopne
movl
add
push
pushf
push
add
lcall
or
push
lea
push
lea
push
push
push
push
push
push
call
add
jae
lcall
mov
out
loop
add
add
jns
xchg
lock
xchg
jle
lret
flds
push
add
add
in
loopne
lcall
les
add
push
push
call
add
mov
mov
js
add
mov
add
push
cld
add
mov
add
icebp
add
add
push
mov
clc
lcall
ret
into
rol
pop
add
mov
push
push
add
add
push
and
add
add
not
sub
lea
pop
sub
add
shl
pop
push
sub
pop
pushl
push
push
lea
push
push
push
push
push
lea
push
push
push
call
add
add
add
iret
add
jmp
add
gs
aad
mov
popa
insb
filds
push
pop
roll
mul
ja
xchg
add
xchg
mov
add
jecxz
add
add
pop
rclb
add
add
push
outsl
add
push
add
sahf
test
mov
in
fdivr
lcall
aaa
pop
add
push
push
push
push
lea
push
push
lea
push
lea
push
push
push
call
add
add
add
loope
add
add
add
add
add
xlat
repnz
mov
add
add
add
rol
add
push
push
push
add
xor
push
or
inc
add
sub
rol
not
pop
lea
inc
xor
pop
push
add
ror
rol
pop
push
push
push
push
push
call
add
js
add
xchg
ja
xchg
pop
add
add
add
cli
ja
add
add
add
addl
out
popf
fstpl
cltd
add
in
lock
lcall
add
das
cmpsb
stos
call
scas
sarl
std
lret
push
lret
xlat
in
add
int
iret
jmp
imul
testl
add
mov
test
arpl
add
imul
mov
add
jge
fsubrl
loope
add
add
clc
lcall
rclb
lea
push
push
lea
push
push
push
lea
push
call
lret
add
add
mov
jb
push
in
pushf
add
push
xchg
xchg
addr16
add
mov
add
jo
cld
jne
add
add
add
add
sahf
mov
aad
xchg
add
cwtl
mov
sub
pop
mov
push
push
push
push
push
push
push
push
lea
push
push
call
mov
enter
in
mov
fadds
mov
std
in
push
add
xchg
movsl
add
mov
mov
ret
out
pop
jb
pop
add
les
mov
add
add
add
add
add
push
mov
clc
fldenv
pop
push
push
add
sub
add
pop
mov
add
push
shr
ror
xor
pop
add
add
push
lea
push
push
lea
push
push
push
call
add
add
stos
push
add
sahf
ja
add
jne
js
push
in
test
add
aam
xchg
fwait
cli
xorb
add
loop
add
call
mov
push
push
push
lea
push
call
add
loopne
add
mov
fildl
loope
add
jb
jnp
xchg
xchg
test
icebp
add
add
add
add
xchg
enter
add
add
bnd
sub
pop
xor
push
push
call
fldl
int3
std
pop
mov
add
add
add
fistpl
lods
pushf
fadds
shrl
bound
arpl
add
repnz
add
xchg
iret
mov
incb
add
add
add
jl
push
add
mov
testl
add
xchg
lock
sub
pop
add
push
add
pop
add
push
lea
push
push
lea
push
call
xchg
add
jmp
iret
shl
jns
add
xlat
cwtl
pop
fdivrs
addb
add
scas
cwtl
test
lret
rcrl
fldl
mov
xor
push
not
pop
add
pop
push
shl
pop
mov
push
push
lea
push
push
push
push
lea
push
push
push
push
call
fldl
add
jns
push
add
les
mov
add
push
lock
add
test
mov
popf
add
jge
add
imul
add
add
lcall
xor
push
push
push
push
push
call
add
add
shll
add
push
add
fsubl
imul
mov
fiaddl
jecxz
fs
addb
pop
add
add
add
jl
mov
add
add
leave
out
add
in
in
lcall
les
push
push
push
lea
push
push
push
push
lea
push
push
call
add
mov
test
add
add
add
xchg
mov
int3
xchg
adcb
jecxz
push
add
movsl
jbe
int3
push
lods
popl
testb
leave
std
addl
mov
add
mov
insb
jmp
xlat
push
loopne
sub
pop
rep
mov
push
push
push
lea
push
lea
push
push
push
lea
push
lea
push
push
push
call
popf
add
push
lods
add
add
add
rcl
add
add
lods
add
out
mov
iret
push
pop
add
xlat
push
fwait
xchg
add
lds
add
add
nop
jno
cmc
sub
pop
xor
push
push
push
push
call
xchg
xchg
aad
cld
cwtl
into
lods
out
pusha
repnz
add
pop
outsl
std
addb
xchg
cmpsb
dec
imul
sub
pop
add
push
sub
pop
or
je
push
push
push
push
push
push
call
fnsave
push
add
add
add
pop
add
add
shrb
aam
add
lahf
out
sti
add
mov
mov
fadds
movsb
mov
roll
add
fiaddl
add
popa
push
mov
scas
push
add
fiadds
jge
sub
pop
mov
push
push
push
push
lea
push
call
cmpsl
add
test
cmpsb
pushf
sbb
testl
lret
add
in
add
add
add
mov
add
jne
add
jl
or
out
add
add
out
xchg
outsl
xchg
test
icebp
popf
add
add
mov
mov
ljmp
pop
xor
push
push
push
lea
push
push
push
call
mov
add
mov
popa
fadd
pop
test
mov
add
add
xlat
fadds
movl
iret
add
add
enter
xchg
loope
std
pop
pop
add
loopne
test
xchg
fidivl
add
les
add
push
push
push
push
lea
push
push
lea
push
call
popa
sti
add
lods
arpl
mov
mov
add
add
flds
ret
mov
shlb
lods
add
add
add
mov
in
mov
add
jl
add
add
lahf
add
add
add
shrb
cmpsb
add
add
mov
xor
push
push
push
lea
push
push
push
push
call
data16
add
mov
fwait
push
loope
add
cwtl
fildl
mov
add
icebp
add
cli
int
add
ljmp
add
mov
stos
iret
add
sub
pop
add
add
push
lea
push
push
call
push
ja
add
add
xchg
add
mov
jbe
add
add
add
cli
add
mov
push
lea
add
cmc
push
cltd
int
insb
add
jecxz
add
add
add
add
imul
add
jle
add
add
mov
add
mov
lcall
mov
push
push
push
push
push
push
push
push
call
cwtl
lock
mov
cmpsl
fwait
mov
addr16
mov
add
pop
fmul
xlat
push
popf
pop
jmp
pop
add
xchg
push
xlat
mov
jne
out
jne
add
imul
add
lcall
lock
fdivl
roll
in
fs
xchg
add
cltd
lret
add
pop
sub
pop
xor
push
push
call
mov
mov
mov
cmc
sti
imul
add
arpl
add
add
add
add
mov
pop
add
push
rol
dec
xor
dec
pop
add
push
push
push
push
lea
push
lea
push
push
push
push
push
call
add
repnz
add
incb
pushf
ret
outsl
mov
mov
jl
add
mov
add
pusha
cmpsl
mov
mov
loope
add
mov
js
imul
add
pop
pop
push
push
push
push
call
pushf
jmp
add
add
add
lcall
sar
filds
jmp
scas
jbe
mov
test
movsb
push
ror
add
pop
mov
push
push
push
lea
push
lea
push
push
lea
push
push
push
call
add
leave
jne
nop
push
mov
mov
loop
add
pop
add
lea
add
flds
sti
sti
add
add
xchg
mov
xchg
pop
add
sub
pop
xor
push
push
push
push
push
push
push
push
lea
push
call
loopne
mov
add
in
sbb
jnp
add
cmpsb
in
add
jbe
mov
lret
add
sti
rcll
les
add
mull
jae
int3
pusha
movsl
mov
add
add
add
les
lea
push
push
lea
push
push
lea
push
push
push
push
lea
push
call
mov
jp
mov
push
scas
add
add
pushf
mul
lods
add
mov
ret
rcll
push
in
fcomps
leave
je
mov
push
shr
pop
add
push
push
lea
push
push
push
lea
push
push
call
add
jnp
pop
rclb
incb
lahf
les
add
in
fs
add
add
add
add
lea
ffree
add
call
sub
pop
add
push
push
push
push
push
push
push
push
lea
push
call
in
add
movsb
lret
add
add
lods
test
shlb
fldt
add
push
arpl
ljmp
add
jge
xchg
fmul
mov
add
jb
in
fcompl
movsb
pop
push
push
ror
sub
lea
dec
push
xor
add
not
sub
inc
lea
add
pop
ror
pop
push
add
inc
sub
add
pop
pop
push
xor
ror
rol
pop
mov
push
push
lea
push
call
add
add
add
add
add
push
js
add
add
cli
add
outsl
add
sahf
add
add
call
mov
mov
lds
add
add
add
filds
faddl
lcall
insl
hlt
push
lea
ror
shl
pop
mov
push
inc
shl
ror
sub
pop
jmp
push
push
push
call
add
mov
add
test
popf
test
mov
add
add
imul
ja
xchg
add
add
add
stc
add
add
add
add
fmulp
lods
fmulp
sti
xchg
ja
scas
add
add
stos
clc
call
aam
mov
leave
add
in
add
lcall
push
push
push
push
push
call
int3
mov
add
int
add
enter
add
mov
mov
mov
add
cltd
rolb
sahf
add
add
stos
enter
add
pop
pop
sub
pop
mov
push
push
push
lea
push
call
add
fwait
add
add
movb
ficomps
add
add
jno
ljmp
jmp
popa
add
add
shl
in
fists
jo
ret
repnz
ljmp
in
mov
jp
int
mov
sub
pop
add
push
push
push
lea
push
call
push
add
add
mov
pop
loop
loop
add
repnz
loopne
add
xchg
add
imul
mov
in
lock
push
push
push
lea
push
lea
push
push
push
lea
push
call
stos
into
std
mov
add
add
cmc
lds
filds
add
popl
fists
add
add
add
add
add
in
sub
pop
push
push
push
push
push
push
call
aam
push
outsl
push
rcr
add
add
mov
lea
xchg
add
nop
add
add
icebp
stc
add
js
add
sub
pop
mov
push
push
call
add
mov
add
call
add
rol
fildl
add
mov
add
jmp
pop
pop
push
add
add
sub
pop
pop
push
add
pop
pop
push
lea
sub
pop
pop
pop
push
shr
shr
pop
leave
push
lea
dec
dec
pop
ret
push
inc
pop
push
push
push
push
push
call
fldl
mov
rolb
add
add
add
lahf
add
scas
mov
add
pusha
mov
imul
out
add
add
add
add
leave
add
add
in
in
lock
lcall
in
add
push
pop
push
push
push
push
push
push
push
push
push
push
lea
push
call
mov
jo
add
add
add
xchg
into
test
test
js
mov
out
xchg
pop
pop
jae
cld
add
mov
add
add
jle
rolb
fs
add
push
test
fdivr
lcall
push
lea
push
push
lea
push
push
push
call
add
movl
add
jmp
cltd
rolb
mov
movsb
scas
in
xlat
pop
add
add
add
aad
loop
stos
add
aad
in
call
push
push
add
dec
add
lea
pop
push
push
push
lea
push
push
push
call
je
ja
add
fildl
cmc
add
add
loop
jmp
fucom
add
pop
add
fsubl
add
add
add
add
lcall
inc
cld
add
add
push
push
push
push
push
push
lea
push
lea
push
push
call
add
add
or
in
enter
add
addb
add
ficoms
notl
pop
add
mov
test
mov
stos
add
add
pop
test
repnz
add
roll
xlat
add
mov
sahf
add
pusha
jbe
in
fdivr
lcall
inc
clc
call
rcrl
rorb
push
add
add
pop
pop
push
lea
push
push
push
push
push
push
lea
push
push
call
pusha
lods
add
test
add
insb
enter
add
and
add
int3
add
vpunpcklqdq
lcall
pop
push
push
push
push
push
push
push
call
add
fstpt
fs
lods
cmc
pushf
cli
call
mov
mov
movsl
roll
add
mov
add
pushf
fldl
cmpsl
sti
pop
add
xchg
add
add
push
mov
sahf
stc
cmpsl
loope
addr16
pop
pop
push
push
push
push
call
jmp
data16
jns
add
add
leave
add
jmp
jmp
test
insb
loope
in
add
addb
mov
xchg
stos
add
jecxz
add
add
add
add
test
je
add
ret
add
jmp
add
add
flds
add
sub
pop
leave
push
push
push
push
call
ja
nop
cmpb
xchg
add
popf
nop
add
mov
add
add
popl
shlb
add
push
cltd
add
mov
jae
mov
add
ljmp
jmp
shl
ja
mov
add
fcmovnbe
add
fstl
add
sub
pop
ret
push
xor
pop
push
push
lea
push
push
push
push
push
push
push
call
push
mov
mov
loop
add
add
mov
add
shlb
add
xchg
cwtl
lods
mov
arpl
push
jbe
rol
movsb
add
sub
pop
mov
add
push
lea
push
push
push
push
call
add
pop
add
lods
add
mov
push
add
popf
test
imul
mov
out
jl
mov
in
add
xchg
add
lcall
push
push
push
lea
push
push
call
add
popl
mov
add
add
add
test
jns
mov
lea
add
flds
add
add
mov
xchg
add
jbe
add
sub
pop
push
push
push
push
push
push
push
lea
push
push
lea
push
push
push
call
add
test
pusha
pop
add
cmpsl
cmpsl
add
add
xchg
sbbb
mov
aad
fwait
add
out
add
shl
add
mov
int3
mov
add
iret
mov
add
stos
mov
add
fwait
add
push
add
hlt
xchg
add
push
push
lea
push
call
add
add
mov
roll
add
out
cmc
popa
add
mov
add
add
int3
push
push
jo
lods
lock
push
ljmp
add
add
add
push
into
pop
mov
mov
stos
testb
cld
add
add
push
push
push
push
push
lea
push
push
lea
push
push
call
jns
add
test
stc
jo
add
sahf
clc
xchg
in
hlt
cwtl
add
incb
add
pop
out
mov
add
add
add
add
add
mov
add
add
in
fdivr
lcall
inc
or
push
push
call
aad
int
add
push
addb
movb
add
mov
test
addl
xchg
add
out
cmpsl
mov
mov
cld
mov
push
call
push
lea
shr
sub
lea
pop
mov
push
add
not
sub
pop
pushl
push
push
push
lea
push
push
push
push
call
test
repnz
add
jp
out
out
roll
add
push
add
movsb
mov
mov
movsb
add
add
iret
js
add
popl
in
add
rorl
pop
out
add
sub
pop
push
push
push
lea
push
push
call
mov
add
outsl
lock
add
ret
loope
add
add
add
loop
hlt
xchg
mov
movsb
imul
push
stc
cmpsl
jne
iret
add
loope
mov
push
call
push
push
push
call
mov
roll
sar
add
mov
add
flds
add
add
insb
add
xchg
pop
push
xchg
add
add
hlt
pop
cmpl
jne
push
lea
push
call
xchg
xlat
add
mov
jo
cli
jns
add
lret
lret
mov
add
je
lret
add
nop
lahf
std
add
xorl
push
add
popa
add
data16
add
add
pop
lods
add
add
lcall
add
cli
pushf
cmc
add
icebp
lock
lcall
push
xor
shl
ror
pop
pop
push
push
push
call
add
lret
ret
nop
nop
test
jmp
push
and
int3
sbbl
add
add
cmpsl
add
jmp
add
movsl
fildl
pop
push
lea
pop
leave
push
lea
lea
pop
ret
push
inc
pop
push
push
not
lea
shl
pop
mov
add
push
push
push
push
lea
push
push
push
lea
push
push
push
call
add
add
add
add
hlt
add
add
cltd
sti
add
add
fadds
rolb
add
fildl
sti
enter
std
push
add
rclb
fildl
movsb
add
int
loop
mov
mov
mov
loop
add
mov
jmp
in
fdivr
lcall
push
push
push
push
lea
push
push
call
les
push
pop
add
imul
ljmp
loopne
add
mov
aam
add
mov
mov
add
imul
push
add
add
add
add
add
jmp
sub
pop
push
push
add
pop
push
movl
push
push
push
push
push
push
push
push
lea
push
lea
push
call
pusha
gs
pop
mov
loopne
ja
add
add
add
lock
add
add
add
in
testb
pop
add
lods
out
scas
out
add
add
mov
lret
add
fstl
add
pop
imul
add
lcall
add
imul
call
call
xchg
cli
add
std
jo
cwtl
jnp
popl
ljmp
add
add
mov
sarl
add
add
stos
mov
jle
add
push
out
arpl
loopne
mov
add
add
mov
xor
jo
test
imul
add
mov
xchg
xchg
fsts
add
lcall
or
sqrtps
dec
mov
push
lea
push
lea
push
lea
push
push
call
lahf
fwait
xchg
add
iret
in
add
imul
loop
sahf
push
loopne
add
xchg
add
mov
add
gs
add
push
jle
clc
fldl
add
add
add
add
fcomps
pop
stc
call
lea
pop
subl
push
shr
dec
pop
cmpl
jne
push
add
rol
pop
pop
push
ror
pop
pop
pop
push
push
push
push
call
mov
add
jae
mov
shr
add
out
add
add
fisubl
cmc
addr16
add
cld
xchg
add
int3
add
nop
cli
add
add
add
mov
add
add
jne
js
popa
jo
ret
int3
lods
add
int3
into
jmp
rolb
add
lcall
push
xor
pop
leave
ret
push
xor
dec
not
pop
push
push
inc
ror
pop
mov
add
push
lea
pop
push
push
push
push
push
push
push
call
mov
add
add
shlb
stos
add
xor
lods
std
out
popl
out
jmp
jns
add
scas
addl
pop
add
push
jnp
test
mov
sub
pop
push
push
push
push
call
imul
jne
mov
add
jle
add
cmc
fs
add
xchg
clc
mov
add
lahf
mov
leave
pop
cmpsb
mov
testb
mov
jge
push
mov
ljmp
jle
mov
mov
mov
mov
cld
jmp
mov
test
sub
pop
push
push
shl
pop
push
push
shr
lea
pop
mov
push
push
push
push
push
call
add
mov
jmp
fcmovnbe
ljmp
ret
stc
add
add
into
loop
add
push
lds
in
add
jmp
in
in
pop
lea
push
push
push
push
push
push
lea
push
push
push
push
call
add
test
in
add
add
mov
add
lret
mov
mov
repnz
not
mov
stos
add
loope
shlb
add
arpl
push
into
pop
xchg
add
add
sub
pop
sub
mov
push
lea
push
push
push
push
lea
push
push
call
lahf
pop
popa
mov
jbe
add
mov
add
fisubrs
add
add
rcrl
mov
add
out
cld
mov
addl
add
insb
negl
nop
push
add
mov
add
jno
lock
sub
lcall
call
push
lea
push
lea
push
push
push
lea
push
call
jge
add
fmulp
add
add
stos
mov
orb
add
outsl
mov
add
int3
lcall
in
loopne
add
mov
push
push
push
call
cmpsl
add
add
mov
add
imul
cmc
add
add
mov
ficoms
mov
add
mov
add
push
mov
in
add
mov
into
addl
hlt
lcall
andb
lea
push
lea
push
call
xchg
lahf
fcomp
add
add
arpl
stc
mov
add
add
add
sub
pop
add
push
push
push
lea
push
push
push
call
icebp
add
pop
test
out
scas
pop
pop
lods
add
add
add
in
int
add
add
add
add
movl
lea
lods
popl
mov
add
shlb
inc
add
add
dec
pop
mov
push
not
pop
cmp
jne
cmp
jne
push
push
call
cmc
out
mov
stc
pop
add
add
cld
fiaddl
pop
add
add
jmp
fsubs
pop
mov
scas
add
lcall
inc
adc
or
test
cmpsl
push
call
add
add
mov
jnp
data16
test
add
add
sar
mov
jmp
mov
out
mov
jbe
jae
sub
pop
movl
jmp
push
push
push
push
lea
push
lea
push
lea
push
call
add
sarl
fldenv
add
add
add
mov
jo
ljmp
mov
popf
rolb
mov
popa
stos
pop
push
add
pop
mov
push
xor
xor
not
not
pop
mov
sub
jne
push
ror
rol
shl
pop
mov
push
ror
pop
movl
jmp
push
sub
pop
mov
mov
push
add
pop
cmp
jne
push
add
not
shr
pop
mov
push
add
pop
movl
jmp
push
rol
pop
mov
push
push
push
lea
push
call
mov
out
mov
xchg
add
add
add
add
mov
mov
add
scas
mov
xchg
add
mov
lods
add
aam
add
xchg
lcall
in
aam
xchg
roll
sub
pop
cmpw
jne
push
push
push
push
push
push
call
lock
gs
in
roll
add
clc
icebp
arpl
pop
add
jmp
mov
add
jne
in
call
push
dec
pop
movl
push
add
rol
add
dec
pop
jmp
pushl
push
sub
sub
pop
pop
push
add
pop
mov
mov
push
inc
add
add
pop
mov
push
push
shl
xor
push
sub
add
inc
sub
sub
pop
dec
add
shr
inc
pop
push
push
lea
push
push
push
push
push
push
lea
push
call
incb
mov
mov
jb
add
test
add
fwait
add
add
leave
sub
pop
push
call
push
ror
add
pop
cmpl
je
push
push
lea
inc
push
push
pop
add
xor
xor
sub
sub
xor
not
sub
pop
sub
add
xor
pop
push
lea
rol
shl
ror
pop
push
call
push
push
push
push
push
push
push
lea
push
push
lea
push
call
add
faddl
popa
pushf
lret
add
add
add
push
fwait
hlt
add
aam
add
aam
ljmp
push
add
outsl
add
outsl
cmpsl
add
lret
mov
add
add
popl
xchg
add
out
add
popl
add
imul
lcall
js
int3
fldz
ret
cld
pop
add
push
push
not
shl
push
xor
add
dec
lea
sub
inc
pop
sub
rol
pop
push
lea
push
lea
push
push
push
push
call
xchg
add
add
add
add
filds
les
add
xor
aam
mov
pusha
fiaddl
popf
fiaddl
add
lcall
push
lea
pop
call
cmpl
je
push
push
dec
push
xor
add
not
sub
sub
ror
pop
add
shr
shl
pop
push
lea
sub
sub
add
pop
push
push
push
push
push
push
push
lea
push
push
lea
push
call
rolb
mov
push
shl
out
add
add
int3
add
mov
pop
xchg
add
mov
xchg
popa
stos
add
pop
add
add
lods
add
in
add
add
mov
loope
add
fiaddl
add
push
imul
in
fcompl
loop
add
push
inc
add
inc
pop
cmpl
je
push
push
add
lea
push
push
pop
add
sub
add
sub
add
sub
lea
xor
pop
ror
shl
pop
push
lea
push
push
push
lea
push
push
lea
push
lea
push
push
call
add
popa
add
addb
shrl
add
jmp
add
add
jae
cld
add
xlat
mov
add
movsb
je
add
add
icebp
mov
movsb
jmp
fdivs
pop
lret
jb
add
in
fdivr
lcall
push
shr
add
pop
call
cmpl
je
push
push
xor
inc
push
sub
add
not
shr
sub
sub
pop
dec
shr
pop
push
add
pop
push
push
sub
rol
pop
call
push
push
push
push
lea
push
push
push
call
and
mov
add
jle
xor
in
push
push
cltd
add
mov
repnz
int
add
add
cmc
xchg
jae
mov
mov
pop
add
mov
shll
add
fsubrp
fadds
add
arpl
lret
add
lcall
cmp
rol
je
push
push
add
inc
lea
dec
push
sub
add
shl
sub
dec
rol
pop
inc
shr
add
add
pop
push
push
push
lea
push
push
push
push
push
call
push
sbbb
shll
pop
ror
add
add
pop
imul
add
mov
push
int3
add
loope
add
loope
xchg
lret
mov
add
leave
add
loopne
lcall
push
sub
add
shr
sub
pop
call
cmpl
je
push
push
add
not
push
or
not
add
xor
xor
sub
xor
add
pop
pop
push
lea
push
lea
push
push
push
push
push
push
push
call
xchg
icebp
add
jb
out
push
mov
je
movb
pop
add
mov
add
stos
fldl
sahf
lock
popf
scas
add
ja
in
not
add
add
add
mov
add
add
add
movsl
add
clc
lret
push
into
xchg
mov
ret
fdivr
lcall
call
push
push
push
call
lret
lods
ljmp
gs
add
cli
add
sbbl
xchg
add
stos
add
push
xchg
add
add
mov
add
rolb
pop
shrb
xchg
push
pop
mov
fiadds
add
add
add
imull
vpshufb
jge
add
push
test
add
sub
pop
cmpl
je
push
push
not
push
or
not
add
inc
sub
sub
add
pop
shl
shl
pop
push
push
lea
push
push
push
push
push
lea
push
lea
push
call
mov
pop
add
jne
add
add
add
addl
add
stc
rolb
add
sub
pop
push
push
shr
pop
call
push
sub
add
pop
cmpl
je
push
push
add
ror
xor
push
sub
add
shl
sub
add
sub
add
lea
pop
dec
dec
shr
inc
pop
push
push
push
push
push
call
add
ja
imul
stos
fildl
xchg
mov
add
add
add
loop
add
fiadds
push
push
data16
in
in
pop
push
call
push
add
add
xor
pop
cmpl
je
push
push
shr
add
sub
push
or
inc
add
sub
dec
sub
sub
ror
pop
add
add
rol
lea
pop
push
ror
pop
push
push
sub
shr
shl
dec
pop
call
cmpl
je
push
push
lea
push
sub
add
rol
xor
sub
sub
sub
shl
ror
pop
dec
lea
add
pop
push
push
push
push
push
push
push
push
push
push
call
mov
gs
lea
add
add
xchg
movsl
add
add
add
movb
add
add
add
lods
aad
add
mov
flds
jp
add
les
lcall
cmc
add
ljmp
repnz
lcall
push
push
push
push
call
add
movsl
add
mov
mov
push
lds
add
add
add
add
sub
pop
call
cmpl
je
push
push
rol
add
push
push
pop
add
xor
add
sub
dec
dec
pop
ror
sub
xor
pop
push
shl
pop
push
push
push
push
push
push
call
add
add
rolb
add
insb
mov
mov
int
mov
test
mov
add
mov
stos
add
add
rcrb
jle
aad
xchg
add
in
add
mov
lahf
roll
push
push
pushf
add
scas
push
add
add
add
cltd
lcall
call
cmpl
jne
push
inc
pop
mov
movl
push
shl
shl
lea
pop
jmp
xor
push
push
push
push
lea
push
push
lea
push
push
lea
push
call
fucom
mov
add
hlt
add
mov
add
mov
flds
hlt
shl
mov
in
stc
xchg
xchg
je
call
cwtl
lahf
xchg
add
jp
xchg
in
add
lds
outsl
jle
movb
add
add
out
add
jmp
fcompl
push
push
lea
push
lea
push
lea
push
push
push
call
add
cmpsb
sahf
push
rcll
movsb
add
push
loope
add
cmpb
pop
aad
add
popa
arpl
insb
add
lret
add
jbe
add
pop
add
add
pop
mov
cltd
stc
movsl
cmc
test
add
push
mov
add
lcall
push
pop
pop
pop
push
lea
push
push
lea
push
push
push
call
add
fiaddl
pop
add
xchg
ljmp
jb
xchg
add
insb
xchg
add
out
pop
fstps
add
mov
in
call
add
int
dec
cltd
sub
pop
push
push
push
lea
push
push
push
call
push
shll
rolb
mov
notl
jbe
push
mov
xchg
pusha
push
add
cld
stc
cwtl
pop
pop
cld
test
fadds
add
imul
in
xchg
add
fsubs
out
add
in
push
repnz
ja
sub
pop
mov
push
sub
add
shr
dec
pop
add
cmpl
jne
push
push
shl
push
and
add
lea
sub
xor
sub
pop
inc
lea
pop
push
sub
sub
pop
pushl
call
push
lea
push
push
push
push
push
push
lea
push
lea
push
call
cld
idivb
add
test
jns
add
mov
in
test
out
add
add
out
add
add
fsubrs
add
in
xchg
add
mov
xchg
add
subl
in
fcompl
call
xor
pop
call
push
push
push
push
push
push
push
push
push
call
icebp
lds
add
rcl
lds
add
add
add
mov
jl
add
add
add
add
lock
add
out
lock
movsl
add
lcall
mov
shl
ror
shl
ror
pop
cmpl
je
cmpl
jne
push
sub
pop
leave
add
push
add
inc
lea
lea
pop
pop
pop
push
push
push
call
add
jmp
mov
add
movl
xchg
fisubrl
popf
mov
pop
in
into
add
int3
add
add
sub
pop
pop
push
shr
xor
pop
pop
push
shl
pop
leave
push
ror
add
pop
add
ret
push
add
pop
jmp
push
shl
pop
cmpl
jne
push
push
add
add
push
or
not
add
ror
sub
add
lea
not
dec
pop
xor
pop
push
push
push
lea
push
call
iret
rclb
add
add
jae
add
jns
test
mov
mov
xlat
add
test
cwtl
aad
add
push
add
je
test
add
add
add
lcall
jne
push
lea
push
call
pop
lahf
mov
add
rcrl
add
xchg
cmpsb
ljmp
add
push
cmpsb
fisubl
int
add
lcall
in
add
add
mov
add
fldl
shr
movb
mov
add
fadds
xchg
jno
call
enter
mov
rcll
clc
pop
fwait
mov
sub
pop
call
push
push
not
not
add
pop
call
jmp
push
push
lea
push
push
call
mov
push
mov
fistps
add
add
add
add
add
data16
add
lahf
jns
add
sub
pop
cmpl
jne
mov
push
xor
lea
shr
pop
mov
push
push
push
push
push
push
push
lea
push
lea
push
call
enter
add
in
imul
test
add
jge
sarl
add
add
add
add
jae
in
fcompl
jg
add
push
shr
ror
lea
not
pop
push
push
push
push
or
not
add
add
shr
sub
ror
dec
pop
sub
sub
shr
pop
push
sub
shr
pop
pushl
push
push
push
lea
push
call
hlt
add
mov
add
mov
jb
into
addr16
pop
pushf
add
add
xchg
nop
popl
pop
mov
pop
add
add
test
mov
push
jge
add
mov
xlat
add
add
add
sahf
cmpsl
fistpl
xchg
in
push
addl
push
fwait
sub
pop
call
call
push
push
add
lea
push
push
pop
add
add
dec
sub
lea
lea
pop
shl
pop
push
not
lea
dec
pop
pushl
push
push
push
push
push
lea
push
push
call
into
bound
add
add
add
lret
movsl
rcll
rolb
add
add
shl
iret
add
add
add
nop
leave
add
imul
aad
std
add
clc
shl
add
bnd
call
add
rolb
add
addl
sub
pop
call
push
add
dec
sub
pop
call
push
push
shl
not
push
xor
add
rol
sub
rol
pop
xor
pop
push
push
push
push
call
xchg
add
mov
sahf
sahf
fistpl
mov
push
mov
cltd
lock
mov
add
fildl
int3
add
add
test
add
loope
roll
mov
pop
add
add
add
rolb
lcall
jne
push
add
inc
pop
call
push
add
not
lea
pop
call
push
push
shr
lea
add
push
or
inc
add
sub
dec
add
sub
ror
add
sub
pop
add
not
sub
rol
pop
push
xor
inc
pop
pushl
call
push
dec
pop
call
push
push
push
push
pop
add
dec
sub
shr
pop
lea
not
pop
push
push
call
mov
sahf
fwait
lret
lock
jne
mov
add
data16
add
lea
add
add
add
fldl
in
nop
fildl
sahf
add
std
add
add
add
in
clc
lcall
jne
call
push
lea
push
push
push
push
push
call
lds
add
push
add
test
add
add
je
lea
addr16
imul
xchg
add
push
add
mov
add
pop
xchg
mov
mov
in
call
shlb
loop
not
shl
push
sub
add
rol
xor
rol
dec
sub
not
add
pop
xor
pop
push
dec
lea
pop
pushl
push
push
call
add
add
cli
add
aad
mov
stos
mov
add
jo
lds
xchg
push
add
add
mov
int3
out
fnsave
add
add
add
jno
loope
out
mov
add
mov
sub
pop
call
push
rol
pop
call
push
push
add
shl
push
or
inc
add
lea
sub
ror
sub
sub
sub
add
pop
shl
rol
rol
rol
pop
push
push
push
push
push
push
push
push
lea
push
push
call
mov
mov
add
jbe
mov
add
sarl
rolb
repnz
jge
aam
add
add
je
mov
add
xchg
add
add
movsb
add
jge
add
add
rcrl
fcomps
jne
push
rol
pop
call
call
push
push
add
dec
dec
rol
push
xor
add
shr
add
sub
sub
ror
rol
sub
pop
shl
pop
push
lea
xor
sub
ror
pop
pushl
call
push
sub
pop
call
push
push
dec
ror
push
push
pop
add
dec
sub
dec
sub
pop
lea
pop
push
push
push
push
lea
push
push
push
push
push
push
call
je
rcr
lahf
add
add
xchg
pushf
pop
add
add
mov
add
add
xlat
add
add
add
stos
addl
add
lahf
pop
mov
in
ja
sbbl
fadds
push
in
fdivr
lcall
jne
push
add
sub
sub
not
pop
call
call
push
push
sub
sub
ror
ror
push
sub
add
not
sub
add
pop
sub
ror
shr
inc
pop
push
lea
push
push
push
push
push
push
call
stos
xchg
mov
push
push
jbe
jp
cli
add
add
push
add
xchg
std
out
xchg
mov
aam
test
fnstenv
add
xchg
mov
sub
pop
pushl
push
rol
sub
pop
call
push
not
ror
pop
lea
push
rol
lea
pop
push
push
push
push
push
push
push
call
insb
add
stos
add
int3
add
add
out
mov
movsb
test
jp
mov
jne
rcll
les
addl
les
mov
add
push
lea
cmc
add
xlat
les
ja
add
shrb
cmp
leave
add
sub
dec
lea
sub
shr
lea
pop
not
not
rol
inc
pop
push
rol
rol
sub
pop
pushl
push
lea
push
push
lea
push
call
pusha
lcall
pop
add
mov
mov
jbe
add
test
add
add
add
push
add
repnz
mov
jmp
add
pop
call
push
push
push
call
mov
add
push
js
xchg
movsb
bound
add
push
add
push
mov
add
sahf
mov
push
add
les
mov
adc
push
popf
push
in
stc
jo
sub
pop
call
push
push
dec
push
xor
add
lea
dec
rol
sub
shr
lea
rol
sub
pop
add
xor
pop
push
push
lea
push
push
push
call
enter
lret
mov
mov
cmpsl
push
add
mov
je
add
add
add
in
in
lcall
jne
call
push
shr
shr
add
pop
call
push
push
push
sub
add
lea
not
sub
inc
add
sub
pop
sub
add
pop
push
push
push
push
push
call
xchg
in
in
add
add
lcall
add
out
add
orl
add
std
imulb
lcall
in
in
lcall
jne
call
push
rol
shl
pop
call
push
push
push
push
push
call
add
in
fld
fildl
add
lret
add
movsb
jbe
add
popa
into
add
fwait
cltd
fwait
add
add
enter
clc
jecxz
loop
into
add
mov
add
cmc
mov
ret
mov
pop
lods
mov
mov
mov
xchg
sub
pop
lea
push
push
add
dec
push
xor
add
ror
sub
not
pop
xor
dec
pop
push
shl
pop
pushl
call
push
add
xor
shr
pop
push
call
push
push
push
or
inc
add
shr
rol
add
sub
rol
xor
pop
pop
push
lea
push
push
push
push
push
push
push
push
push
call
add
add
add
add
push
add
insb
add
test
add
add
add
add
add
add
add
scas
mov
leave
pop
add
ret
add
sub
pop
pushl
call
push
lea
push
push
push
push
push
push
call
roll
add
in
lret
shl
nop
mov
call
pop
gs
add
add
aam
arpl
xchg
js
xchg
jo
add
add
addb
test
stos
mov
fdivs
push
xchg
add
rclb
push
lea
push
push
push
lea
push
call
add
ja
jns
dec
add
call
call
mov
add
add
mov
jecxz
lods
add
loop
mov
add
jecxz
in
mov
mov
add
pushf
into
stc
mov
imul
stc
xchg
add
loope
jl
mov
in
in
mov
push
push
dec
shr
add
shr
push
and
add
xor
xor
shr
inc
sub
xor
sub
rol
sub
pop
not
sub
rol
sub
pop
push
push
push
call
mov
mov
shl
int
add
lods
add
add
add
add
mov
add
loope
jmp
popf
add
add
cmpsb
loopne
add
std
add
push
lds
enter
jecxz
add
xchg
pop
add
sub
pop
pushl
push
lea
push
lea
push
call
add
add
add
xchg
pop
add
add
add
add
jb
notl
add
fldenv
add
add
add
ret
negl
mov
mov
roll
popa
lahf
add
stos
add
add
addb
xchg
sbbb
jnp
sub
pop
call
push
lea
push
push
push
push
lea
push
push
push
call
fmul
repnz
jp
jne
cld
add
add
lds
mov
add
int3
xchg
faddl
rolb
add
movb
out
add
add
ret
arpl
add
add
add
lea
push
lea
push
push
lea
push
push
push
lea
push
call
pushf
gs
jne
add
nop
add
pop
cld
mul
xorb
add
mov
out
popa
add
ret
jne
loopne
mov
jae
test
mov
add
add
push
pusha
add
shrb
push
addb
shl
push
or
inc
add
not
sub
shl
xor
shr
inc
pop
shr
add
pop
push
push
lea
push
call
pop
lock
stc
outsl
gs
add
add
mov
stos
rolb
add
jmp
data16
pop
sahf
add
out
in
add
push
add
push
cli
icebp
add
out
add
in
flds
loop
add
xchg
lods
add
add
pop
add
add
push
hlt
lcall
jne
call
push
push
ror
ror
push
or
not
add
rol
shr
sub
ror
pop
add
shl
pop
push
push
dec
not
push
or
not
add
inc
rol
sub
sub
ror
shr
ror
pop
lea
ror
sub
dec
pop
push
dec
inc
rol
xor
pop
call
push
push
shr
sub
push
xor
add
not
add
inc
dec
sub
sub
shr
rol
pop
add
lea
pop
push
lea
push
push
call
add
add
shlb
enter
add
add
add
cld
jae
add
loopne
cmpsl
push
cwtl
add
add
add
add
jp
add
add
add
add
jge
mov
add
add
push
rcr
sahf
addl
insb
loope
add
cld
rolb
lcall
jne
push
push
push
push
push
call
aam
add
in
add
mov
add
lcall
add
add
push
push
mov
add
add
add
xchg
nop
add
add
pop
xlat
mov
push
add
xlat
arpl
in
in
lcall
jecxz
add
push
push
push
call
shl
addl
add
imul
add
stos
mov
cmpsl
add
in
add
add
cmpsb
lock
mov
js
add
add
sub
pop
mov
push
push
push
push
push
call
cltd
add
mov
add
push
add
mov
incb
icebp
imul
add
in
add
imul
movsl
add
out
add
push
mov
push
push
add
addr16
add
mov
add
add
mov
add
add
add
jb
mov
xchg
mov
pushf
and
call
ret
inc
aas
pop
xchg
ror
rol
pop
lea
push
push
call
add
in
xchg
add
ficomps
into
add
test
ret
xchg
movb
gs
push
jae
scas
push
add
sub
pop
push
push
lea
lea
not
pop
push
push
lea
lea
lea
not
pop
push
push
push
push
push
lea
push
push
push
push
push
call
xchg
add
lock
in
add
sti
add
add
pop
fmuls
sti
mov
jns
into
add
popf
ret
mov
fwait
xchg
pop
add
cli
add
jb
in
loopne
push
push
push
lea
push
push
lea
push
push
push
push
push
push
call
mov
mov
add
imul
add
lcall
ret
add
add
mov
test
imul
frstor
pushf
jl
jbe
out
aam
mov
repnz
mov
stos
push
out
cld
add
sub
pop
push
push
push
lea
push
push
push
push
push
push
lea
push
push
call
mov
add
push
pushf
add
mov
add
in
add
jl
push
fidivl
negb
jge
add
pushf
mov
in
testb
cld
add
add
add
jp
call
frstors
push
push
add
pop
pushl
push
push
push
push
push
lea
push
push
push
push
call
mov
cwtl
xchg
add
test
pop
xchg
test
mov
add
js
add
add
out
icebp
mov
push
cmpsb
add
test
add
cld
add
pop
stc
add
add
in
flds
lcall
push
hlt
push
push
ror
add
push
or
not
add
ror
sub
add
shr
lea
pop
add
dec
pop
push
shl
rol
sub
lea
pop
pushl
push
lea
push
push
push
call
lret
aad
in
pop
js
addb
out
add
in
add
mov
add
add
add
jns
fldl
add
shrb
sti
add
add
out
xchg
add
mov
add
lret
mov
jnp
jmp
add
ret
js
mov
add
sub
pop
call
push
push
lea
push
push
push
push
push
push
lea
push
push
call
add
add
lea
add
add
clc
leave
add
addr16
add
fucomp
xchg
add
leave
add
xchg
mov
add
enter
sub
pop
call
mov
push
sub
pop
pop
push
rol
lea
pop
dec
jne
push
push
push
lea
push
call
add
jnp
into
leave
jo
bound
mov
add
popf
xchg
pop
cli
add
add
faddl
pushf
mov
sbbb
shll
in
add
xchg
mov
pop
ja
loop
add
add
mov
add
add
xchg
add
sub
pop
call
push
push
ror
rol
dec
dec
push
sub
add
shr
sub
sub
add
ror
shr
pop
sub
pop
push
dec
rol
dec
pop
pushl
push
add
dec
pop
call
push
push
push
push
push
lea
push
push
push
push
push
call
shl
add
add
ror
ljmp
subl
mov
pusha
loop
add
movl
pop
xchg
lea
sub
pop
push
call
push
sub
pop
mov
push
rol
pop
lea
push
push
sub
rol
push
push
pop
add
lea
ror
lea
sub
rol
pop
xor
dec
sub
inc
pop
push
push
lea
push
push
push
push
push
push
push
call
in
notl
add
mov
cli
add
gs
lahf
pop
add
xchg
xchg
mov
ret
mov
jo
cmc
add
xchg
add
mull
add
lcall
jne
push
pop
call
push
dec
rol
rol
pop
push
push
push
push
push
lea
push
lea
push
push
push
call
push
ja
ffreep
mov
add
mov
in
cmc
fsubs
add
add
lods
add
in
loopne
call
push
push
shl
not
push
or
not
add
sub
ror
sub
sub
not
lea
shl
pop
dec
add
ror
pop
push
ror
pop
pushl
push
sub
pop
call
push
push
push
push
push
push
call
add
jno
push
lods
add
pop
testb
add
ja
mov
add
pusha
into
mov
in
call
call
push
lea
push
lea
push
push
push
push
push
push
call
add
sbb
add
xchg
mov
mov
fcom
repnz
out
add
add
add
loope
mov
mov
mov
add
mov
push
lds
popl
add
lahf
add
fdivs
in
loopne
lcall
inc
cld
lea
push
push
not
push
and
add
not
not
sub
sub
pop
dec
ror
pop
push
push
lea
push
lea
push
push
push
push
push
push
call
pop
add
scas
add
hlt
add
add
fiadds
add
add
lea
add
gs
mov
add
mov
fcompl
jne
call
push
pop
lea
push
xor
lea
pop
push
push
xor
sub
pop
push
push
sub
pop
push
push
xor
sub
pop
pushl
push
push
shr
shl
push
push
pop
add
not
sub
sub
dec
sub
lea
xor
pop
add
xor
pop
push
sub
sub
pop
push
push
lea
pop
call
push
push
dec
push
push
pop
add
shl
sub
sub
pop
shl
lea
pop
push
push
push
push
push
call
cmpsb
add
loopne
xchg
lea
int
pop
sahf
incb
add
add
imul
add
std
add
jecxz
test
jne
push
add
pop
call
push
ror
pop
push
call
push
push
not
dec
push
or
not
add
inc
sub
add
pop
ror
pop
push
push
lea
push
push
lea
push
call
rolb
lcall
add
mov
xchg
jl
andb
add
jnp
mov
fsubrp
sti
add
add
add
pop
add
leave
add
add
filds
add
add
add
add
add
int3
test
sub
pop
pushl
push
push
lea
push
push
push
call
xchg
pop
pop
loopne
pop
mov
xchg
stos
mov
nop
imul
pop
incb
xchg
add
mov
cwtl
cmc
ljmp
add
add
fildl
in
mov
lcall
dec
adc
xor
shr
pop
call
push
rol
pop
jmp
push
push
push
push
push
call
mov
cmc
fadds
js
add
int
jnp
mov
add
mov
jno
jo
jle
sahf
add
add
out
roll
xchg
add
cli
pop
insb
lods
add
iret
sub
pop
pushl
push
lea
push
push
call
sti
fmul
add
jge
add
mov
popf
add
cli
add
roll
mov
xchg
add
arpl
add
add
in
cmpsl
add
add
add
mov
add
hlt
jns
add
repnz
scas
push
fwait
jno
add
add
jp
addl
insb
sub
pop
mov
push
push
push
push
push
push
push
push
push
push
call
movsl
add
add
outsl
popl
add
pop
add
data16
pop
add
stos
leave
incb
mov
add
jno
add
add
jb
add
icebp
in
jne
mov
data16
mov
add
nop
xchg
add
pop
add
add
lcall
push
cli
ljmp
test
mov
add
push
push
pop
add
xor
not
dec
sub
ror
sub
pop
shl
add
sub
sub
pop
push
add
xor
xor
pop
pushl
call
push
push
lea
push
lea
push
lea
push
push
push
push
lea
push
lea
push
call
pop
rcr
gs
je
xchg
add
add
int3
into
jecxz
sahf
lret
jb
je
rcr
add
add
out
pusha
lret
xlat
out
add
add
add
in
fcomps
add
shl
pop
call
push
push
shr
shr
push
sub
add
add
rol
xor
sub
shl
shl
pop
add
pop
push
push
push
push
call
out
jmp
imul
push
add
xchg
add
mov
mov
out
aad
test
stos
out
cltd
add
stos
ja
arpl
stc
sti
fnsave
mov
add
push
iret
add
add
add
movsl
add
add
xchg
sub
pop
pushl
push
not
pop
call
push
shl
pop
push
push
push
push
call
add
mov
xchg
add
add
stos
ja
addl
add
add
add
enter
jge
shlb
lcall
ror
push
push
push
push
lea
push
lea
push
lea
push
call
add
add
xchg
data16
add
add
fnstsw
add
jnp
xchg
iret
arpl
stos
lret
add
add
in
aam
jno
mov
add
pop
loope
add
jnp
in
in
lcall
les
push
push
lea
push
push
push
push
call
push
add
mov
mov
arpl
add
loope
out
ret
addl
jae
add
shl
add
fs
push
in
push
leave
add
lds
xchg
icebp
add
add
lock
add
mov
add
lods
out
mov
add
add
in
ret
bound
xchg
sub
pop
pop
pop
push
push
push
push
push
push
push
push
push
call
add
mov
pop
add
xchg
add
add
pop
jnp
mov
add
add
fwait
std
test
add
in
pushf
loope
add
push
add
fiaddl
add
mov
add
ljmp
data16
cmpsb
mov
pop
pop
push
sub
pop
leave
add
push
push
push
push
push
lea
push
call
sbbl
add
scas
scas
jmp
rolb
icebp
add
mov
mov
icebp
out
cmc
int3
sub
pop
ret
push
inc
shl
dec
sub
pop
leave
push
sub
lea
pop
ret
push
lea
push
push
push
call
add
add
add
add
add
add
pusha
std
xchg
popa
add
xchg
add
je
mov
sti
add
js
aad
add
mov
add
test
pop
push
push
lea
push
lea
push
push
push
push
push
lea
push
call
add
add
add
add
scas
mov
add
add
loopne
pop
add
imul
lods
int3
mov
call
movsb
pop
push
cmc
lods
add
add
add
add
add
push
xchg
mov
mov
push
push
push
lea
push
push
push
push
push
push
lea
push
call
add
std
pop
add
add
add
mov
ja
cmpsb
hlt
aam
jns
loop
jns
addl
rorl
out
add
add
pop
mov
add
into
pop
add
in
jb
test
add
add
add
add
pop
cmpl
jne
push
shr
lea
sub
add
pop
mov
push
dec
pop
jmp
push
push
push
push
call
add
jmp
add
cld
outsl
add
add
mov
fdivrl
add
jmp
fs
rolb
pop
cld
js
cltd
popf
bound
mov
insb
add
add
addl
add
flds
fnsave
testl
xchg
cmpb
add
imul
or
imull
icebp
dec
lea
pop
and
push
ror
sub
sub
add
pop
xor
push
add
lea
pop
xor
push
inc
pop
add
push
push
push
push
push
push
push
lea
push
lea
push
call
je
scas
sahf
in
loope
subb
stos
push
icebp
push
imul
mov
add
jb
sarb
aad
mov
mov
add
mov
in
fdivr
lcall
dec
decl
push
push
lea
push
push
push
lea
push
call
rcl
test
add
add
add
mov
bound
add
lds
mov
loope
jge
les
add
test
mov
pop
sub
push
push
call
popa
into
in
bound
add
xchg
add
test
add
stc
into
add
xchg
add
mov
add
incb
add
movsl
lods
mov
clc
pop
jmp
push
shl
add
not
pop
sub
pushl
push
xor
inc
not
pop
pop
sub
push
push
push
lea
push
push
push
push
call
add
jle
add
add
add
xchg
add
add
mov
jnp
mov
add
nop
add
mov
addr16
jp
add
ljmp
add
add
add
add
cmc
jns
add
int3
add
in
in
lcall
cmp
insl
call
sub
add
ror
pop
mov
lea
push
sub
shr
ror
pop
sub
mov
push
push
push
push
push
lea
push
push
call
add
add
roll
xchg
push
mov
xchg
into
movsl
mov
add
add
xor
add
shlb
out
jae
mov
xchg
push
mov
icebp
fxch
aam
pop
add
out
lret
add
out
add
je
notb
pop
shr
push
push
push
push
lea
push
push
push
lea
push
call
mov
cli
popa
fldenv
stc
cld
rolb
fmull
jae
add
add
cmpsb
add
add
add
xchg
add
add
cli
into
add
mov
push
test
add
test
mov
icebp
into
mov
mov
sbbl
in
loopne
add
push
push
push
push
lea
push
call
mov
mov
add
imul
mov
mov
add
stos
lods
add
add
jl
add
push
mov
add
add
add
mov
mov
add
mov
add
cld
clc
add
clc
test
add
add
mov
add
jb
pop
in
in
in
pop
sub
push
pop
pushl
push
push
push
push
call
jae
stc
add
add
xchg
add
movsl
lds
into
mov
add
push
add
add
push
out
add
mov
add
add
popa
xorb
add
add
add
aad
add
js
add
mov
add
testl
add
add
lcall
push
push
push
push
lea
push
lea
push
call
add
scas
in
mov
add
aad
jmp
add
int
add
add
leave
add
popf
xchg
add
jne
jnp
repnz
jmp
add
roll
pop
pop
std
add
add
ja
shl
add
mov
stos
add
push
out
ljmp
adc
and
sub
push
pop
cmp
jne
push
push
push
push
lea
push
push
push
push
call
cli
jns
stos
fisttpl
int3
xorl
add
add
add
xchg
mov
add
add
add
add
fucomp
jne
mov
add
add
pushf
lea
mov
popa
push
fs
sub
pop
leave
push
push
lea
push
push
push
push
call
mov
gs
or
fiadds
rorb
add
add
insb
imul
pop
mov
add
pushfw
mov
add
pusha
mov
scas
pop
add
mov
mov
add
add
add
nop
fstp
mov
add
add
add
mov
push
sub
pop
ret
push
inc
add
add
pop
push
mov
push
push
push
push
push
push
lea
push
lea
push
push
lea
push
call
push
add
add
add
jnp
add
jp
sarb
add
add
stos
pop
add
bound
mov
mov
imul
add
add
add
mov
lret
mov
mov
mov
mov
pop
add
push
push
lea
push
push
lea
push
lea
push
lea
push
push
push
call
fwait
nop
pop
add
rclb
add
lcall
add
ljmp
loopne
jne
roll
add
jmp
add
cli
xchg
mov
add
push
not
ror
add
pop
push
push
push
push
push
push
push
push
call
add
jns
add
stos
add
push
icebp
add
roll
int
mov
add
add
rclb
add
xchg
loop
add
leave
fisubrs
add
cmc
push
mov
add
add
push
mov
add
enter
mov
push
add
mov
call
push
mov
push
lea
push
push
push
lea
push
push
push
call
stos
add
mov
sti
add
mov
stc
mov
add
xchg
lods
add
add
out
popa
add
push
add
pop
add
pop
mov
rolb
add
icebp
sahf
add
pop
add
add
pop
fsubs
add
repnz
add
jmp
lcall
push
cmp
ljmp
adc
push
call
enter
add
sti
loop
jns
add
add
in
add
add
mov
add
mov
add
add
jl
add
aad
testb
pop
shr
add
push
lea
push
lea
push
push
lea
push
push
lea
push
call
add
lods
jb
add
in
add
add
popf
mov
in
mulb
repnz
push
movsb
out
mov
idivb
mov
sub
pop
mov
push
inc
pop
add
push
dec
pop
mov
add
push
push
push
push
call
add
out
lods
cltd
xchg
shlb
int
add
out
xchg
pop
add
lahf
data16
add
pop
ret
add
imul
add
jnp
add
add
pop
fiadds
add
jmp
add
mov
add
lcall
notb
jge
push
mov
lea
push
push
push
call
hlt
out
add
cmc
add
mov
ljmp
jae
mov
jge
mov
cmc
xchg
scas
repnz
jl
add
add
fcmovu
add
add
add
add
add
sub
pop
mov
and
push
shl
shr
pop
rol
push
push
lea
push
push
push
push
lea
push
push
push
push
call
add
xchg
add
cmpb
mov
push
shl
jl
push
jp
in
incb
add
mov
jp
fldcw
in
fcomps
rolb
push
push
push
push
call
add
mov
fadds
leave
insb
movsl
add
push
mov
xlat
mov
loopne
push
test
add
js
xchg
movsb
add
repnz
mov
movsb
lods
add
test
fisubrs
stos
sti
mov
mov
sub
pop
xor
push
sub
pop
inc
push
pop
cmpb
jne
add
push
push
lea
push
push
push
call
add
add
pusha
mov
pop
jmp
push
test
add
lret
loope
shr
fiaddl
je
add
fldl
leave
mov
add
xchg
add
mov
add
xchg
jae
loopne
js
ljmp
inc
or
test
add
add
roll
ret
adc
xor
dec
shr
pop
cmpl
jne
push
pop
xor
push
push
push
push
push
call
push
add
lret
add
enter
movb
out
jge
adc
xchg
pop
pop
rolb
fldl
lret
roll
mov
in
lcall
push
shr
pop
pop
push
sub
pop
pop
pop
push
push
call
rorl
clc
add
ja
xchg
filds
scas
out
int3
add
mov
nop
repnz
add
pop
sbb
repnz
pushf
xchg
add
mov
push
out
out
xchg
pop
add
pop
add
sub
pop
pop
push
sub
pop
leave
push
rol
xor
pop
ret
mov
push
inc
add
pop
add
push
dec
sub
pop
push
push
push
lea
not
xor
pop
add
push
push
push
push
push
push
push
call
icebp
push
xchg
push
cwtl
loopne
loop
add
add
add
add
mov
fsubl
data16
add
add
xlat
xchg
add
pop
add
shl
cltd
fistpll
mov
mov
add
push
mov
jbe
jno
add
xchg
xchg
sub
pop
mov
testw
push
push
push
push
push
push
call
movsl
xchg
add
add
add
xchg
into
add
test
add
out
sahf
add
pop
add
add
cli
jmp
call
mov
fiadds
add
add
mov
addr16
out
mov
movb
aad
mov
pop
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
add
xchg
cli
mov
aam
add
fadds
add
mov
movsl
add
sbbl
std
cmpsb
cltd
push
add
add
add
ret
popa
add
lret
add
push
add
cmpsb
add
lea
add
add
jnp
add
cli
gs
mov
movsl
out
nop
cmpsl
std
add
add
lea
push
lea
push
push
push
push
push
push
push
call
push
mov
add
mov
add
arpl
movsb
add
loop
add
icebp
mov
rol
push
jbe
add
stos
lcall
fcoml
add
add
faddp
mov
add
add
in
fdivr
lcall
push
push
push
push
push
push
lea
push
call
mov
xchg
ret
mov
pushf
add
mov
pushf
add
add
ror
into
add
add
add
in
in
lcall
push
icebp
call
sub
pop
xor
pop
push
lea
push
push
push
push
push
push
push
lea
push
push
call
add
add
xchg
jbe
push
int3
mov
jno
mov
scas
mov
clc
mov
js
les
jb
mov
add
add
add
mov
or
call
pop
pop
push
shr
lea
lea
pop
pop
push
lea
push
push
lea
push
push
lea
push
push
push
push
call
add
mov
orl
mov
add
pop
jbe
add
add
pop
jecxz
add
mov
add
add
ja
pop
add
loope
add
movsl
add
mov
call
fdivr
lcall
push
lea
push
push
call
add
push
lea
add
shlb
arpl
add
add
lret
pop
add
pop
aam
add
lods
mov
add
add
add
add
add
add
insb
push
iret
add
xchg
outsl
fiadds
add
add
lcall
push
ror
shl
pop
leave
push
lea
pop
ret
push
xor
pop
push
mov
push
lea
dec
pop
add
push
push
push
push
push
push
call
movsl
add
add
add
add
cmpsl
mov
add
icebp
push
bound
stos
mov
jo
add
add
xchg
mov
push
lret
add
mov
add
adc
rcrl
cmc
fs
add
aad
loope
mov
lcall
push
add
inc
add
pop
push
push
push
push
push
push
push
lea
push
push
push
push
call
xchg
add
in
lret
add
add
add
flds
add
push
add
addb
scas
jb
filds
xchg
out
mov
add
int
pop
in
sub
pop
push
push
shl
pop
mov
push
ror
shr
not
pop
push
pop
push
push
push
lea
push
push
push
push
push
lea
push
call
mov
imul
sarb
out
add
insb
add
pop
cli
add
bound
push
add
add
flds
leave
sti
add
sarb
test
add
add
shrb
repnz
test
mov
mov
faddl
cmc
add
scas
add
mov
in
fdivr
lcall
push
cmp
ljmp
push
push
call
in
jae
rcl
loope
in
fldenv
in
xchg
xchg
add
mov
iret
add
pop
mov
roll
add
popl
icebp
int
add
add
add
filds
fldl
mov
imul
repnz
pop
mov
shr
push
ror
sub
sub
sub
pop
add
mov
push
xor
lea
ror
sub
pop
add
push
add
inc
sub
pop
pushl
push
push
push
lea
push
push
call
addb
les
lods
add
mov
add
mov
fisubs
in
mov
stos
add
leave
mov
add
add
mov
add
add
lods
mov
push
jp
imul
lcall
inc
clc
mov
push
shr
pop
add
push
push
push
push
call
andb
xchg
add
add
jp
xchg
testb
xlat
add
add
add
add
add
mov
out
xchg
jmp
in
lock
xor
lea
push
push
push
push
push
call
push
mov
xchg
int
add
mov
jl
jl
in
xchg
insb
popl
fiadds
add
arpl
add
jne
jns
jae
cltd
insb
out
test
add
pop
add
sub
pop
mov
add
push
shr
lea
pop
xor
push
xor
not
pop
rol
push
dec
pop
nop
nop
push
add
pop
xor
push
sub
shl
pop
nop
nop
push
push
push
call
lret
add
lret
add
test
mov
add
add
bound
insb
addb
mov
mov
jmp
add
mov
jbe
addr16
test
clc
add
cld
jl
jmp
xchg
xchg
aam
mov
mov
cmpsl
add
add
fldl
lcall
push
not
xor
pop
nop
push
push
push
push
call
push
stos
popl
cmpsl
add
hlt
rolb
test
movb
jmp
mov
add
scas
add
add
stos
les
push
jmp
jl
pop
add
test
popa
xchg
xorl
mov
add
sub
pop
nop
push
ror
pop
cmpb
jne
push
push
push
call
add
mov
pop
movsb
push
add
add
clc
push
iret
add
add
gs
add
add
mov
add
add
add
jl
movb
addl
in
hlt
lcall
inc
pop
ss
push
push
push
lea
push
push
push
push
push
call
push
add
add
movsb
addl
add
mov
add
stc
add
addl
rolb
mov
fadds
push
sub
shl
sub
sub
pop
nop
push
lea
sub
inc
pop
cmp
je
push
push
push
push
push
push
push
call
pop
add
add
andl
nop
mov
addl
add
add
scas
lret
push
add
add
lds
jnp
pushf
in
add
aad
jle
add
lahf
pop
movl
nop
nop
push
push
lea
push
lea
push
push
push
call
add
mov
roll
jge
sarb
jbe
scas
add
int3
add
jb
sahf
add
push
add
mov
into
add
faddl
add
add
pop
jbe
jne
js
add
out
add
js
add
lods
pop
mov
cmpsb
pop
jl
je
add
add
call
push
push
push
push
call
data16
add
mov
fldl
pop
aad
mov
add
add
mov
add
xchg
sahf
push
add
divb
repnz
imul
jmp
jae
add
cmpsb
enter
add
lods
nop
shrb
fildl
cwtl
fiaddl
fimull
fsub
sub
pop
nop
cmp
jb
push
push
lea
push
push
push
push
push
push
push
call
add
fildl
add
add
addb
ret
testb
add
clc
je
add
add
cld
add
jb
add
add
sub
pop
xor
jmp
push
push
push
push
push
push
push
push
push
call
mov
cli
mov
jp
pop
add
push
lock
ret
mov
ret
loopne
mov
add
mov
shrb
pop
andb
mov
lcall
push
and
rcll
les
movl
adc
push
add
sub
pop
mov
push
not
not
sub
pop
add
mov
push
push
lea
push
call
add
add
imull
lods
mov
add
lcall
add
mov
add
add
add
add
add
push
add
add
fstpt
push
add
xchg
popf
in
scas
add
add
jbe
sub
pop
xor
xor
push
lea
push
push
lea
push
push
lea
push
push
push
push
push
call
add
add
hlt
aad
add
imul
incb
add
add
add
jns
icebp
add
jne
add
add
rclb
lret
lcall
outsl
add
int3
mov
add
cmc
push
mov
sub
pop
shl
push
shl
pop
xor
push
lea
shl
pop
shl
push
push
push
push
lea
push
push
push
push
call
mov
pop
add
add
pop
fadds
add
add
add
add
add
js
jns
add
addr16
sub
pop
xor
push
push
push
lea
push
lea
push
push
push
push
push
call
test
xor
jo
mov
cwtl
jb
into
lds
add
iret
jne
lea
mov
stos
add
add
nop
cwtl
bound
lock
movl
xlat
add
add
aad
shlb
rcl
jb
stos
test
add
movl
or
or
push
xor
rol
add
pop
mov
push
shr
sub
pop
add
push
add
rol
pop
pop
push
push
push
call
jo
mov
je
les
int3
std
add
add
out
jne
popf
jnp
add
fwait
add
lea
mov
data16
add
push
mov
rorl
hlt
lcall
push
lea
push
push
lea
push
push
call
mov
bound
mov
js
fidivl
add
add
add
lock
faddl
outsl
arpl
cwtl
hlt
add
mov
add
movsb
aam
add
arpl
pop
pop
push
shr
add
not
rol
pop
pop
push
push
lea
push
push
call
lahf
in
in
fwait
clc
in
add
cltd
add
pushf
add
add
roll
push
add
dec
add
add
lods
in
shr
bound
xor
add
jmp
add
jae
fsubp
add
add
stos
jl
popf
add
popf
pop
add
nop
add
incb
ret
push
push
push
call
data16
insb
ror
add
xchg
popl
add
pop
add
add
add
call
mov
rcr
les
add
lea
add
add
test
add
add
xchg
add
xchg
insb
push
add
mov
jecxz
inc
jne
xchg
mov
add
sub
pop
push
push
push
push
push
push
push
push
push
call
mov
add
jb
add
pop
xchg
mov
icebp
nop
fcom
in
mov
addb
xchg
in
add
add
add
repnz
add
add
sub
pop
mov
push
shr
sub
pop
push
push
push
push
call
push
jl
sti
addr16
jo
int3
int3
roll
push
add
mov
test
jmp
add
add
add
pusha
add
mov
add
add
icebp
lcall
jae
add
add
push
jno
enter
xchg
add
mov
fcompl
xchg
jmp
lret
rolb
test
lcall
push
push
push
push
push
push
push
push
call
add
add
int
jecxz
xchg
rcll
xchg
xchg
push
add
outsl
add
data16
adcb
aam
add
lods
add
adcb
ftst
mov
xchg
sub
pop
push
push
rol
not
xor
sub
pop
mov
push
lea
pop
mov
push
lea
push
push
push
push
push
push
push
call
je
out
je
pop
call
cmpsb
mov
cmpl
add
lods
sahf
add
loopne
mov
sahf
xchg
nop
int3
aad
add
push
into
lcall
add
jle
fmul
add
test
add
addl
shlb
loopne
sub
pop
mov
push
lea
push
call
jmp
mov
add
sti
stc
clc
lods
add
add
je
out
testb
imull
lcall
cli
add
xchg
add
add
rcr
pushf
andb
add
test
flds
push
add
sub
pop
test
je
push
push
push
push
push
push
push
call
push
add
add
push
add
add
mov
jmp
addb
xchg
mov
add
out
int
nop
mov
mov
add
jno
push
push
push
push
call
add
xchg
out
cmc
loop
jno
test
jnp
add
data16
add
mov
mov
scas
fnstsw
add
jae
add
mov
add
fistpll
addr16
test
sahf
xchg
xchg
imul
decb
mov
pop
pop
jnp
add
fnstenv
add
add
testb
or
add
push
rol
xor
shr
ror
pop
mov
push
rol
xor
inc
shr
pop
mov
push
push
push
push
push
push
lea
push
call
add
les
rclb
in
les
rolb
addl
jmp
test
clc
movsl
cli
add
nop
add
add
add
cmpsb
cmpsb
shr
cmc
jns
sub
pop
mov
push
ror
add
lea
shr
pop
inc
push
lea
add
add
shr
pop
cmp
je
push
lea
push
push
push
push
push
push
call
jmp
xlat
add
add
mov
mov
add
lahf
push
add
cmpsb
add
xchg
movsl
sarb
test
filds
add
add
add
add
ret
fdivl
test
lret
lock
add
scas
add
in
movb
jecxz
call
in
in
test
je
mov
push
add
pop
inc
cmp
je
push
lea
push
push
push
push
call
add
mov
add
add
mov
test
sahf
mov
push
mov
fildl
jl
push
add
add
add
rorb
cmpsb
call
or
push
push
call
add
add
add
aad
add
add
add
add
xchg
pop
test
add
jbe
in
in
lcall
rcrb
push
push
lea
push
call
stos
mov
pop
test
in
fdivrl
add
out
popf
mov
mov
push
fildl
add
add
mov
bound
xchg
push
add
add
addr16
mov
mov
enter
mov
add
mov
in
in
lcall
push
not
pop
pop
push
push
push
push
push
call
cmpsl
add
lds
xchg
out
cmc
pushf
xchg
lods
add
add
mov
imul
popf
rolb
jno
arpl
jp
mov
mov
add
into
mov
lret
add
mov
int
scas
add
xchg
add
in
in
in
lcall
leave
push
push
push
lea
push
push
lea
push
push
call
cli
add
mov
add
add
lods
mov
push
add
add
mov
arpl
xchg
fwait
jbe
mov
add
add
push
add
lcall
or
push
sub
pop
mov
push
push
push
push
push
lea
push
lea
push
lea
push
push
call
jge
cld
loop
add
mov
xchg
movsb
add
outsl
test
add
pop
fwait
mov
add
incb
cmpsl
ja
stos
cltd
add
add
add
fwait
out
add
add
roll
pusha
add
sbbl
cld
gs
add
icebp
add
repnz
sub
pop
inc
push
ror
not
pop
cmp
jne
push
inc
sub
ror
pop
lea
push
sub
pop
mov
test
je
push
push
lea
push
push
lea
push
push
lea
push
lea
push
push
call
jb
mov
rclb
mov
shlb
add
mov
mov
cmpsl
add
add
push
loope
rol
add
add
test
add
imul
add
add
add
sahf
add
pop
add
add
add
pop
hlt
lahf
add
int3
push
lods
push
jns
enter
pop
mov
add
push
lea
push
push
push
call
add
popl
test
add
test
add
loopne
test
add
insb
add
ja
add
push
add
add
cli
pop
ja
cwtl
int
add
test
add
add
ja
test
pop
int
cltd
lret
out
in
lock
cmp
jne
push
push
push
push
push
push
push
lea
push
push
call
mov
lret
jbe
jne
push
pusha
add
icebp
clc
mov
add
add
add
add
testl
mov
out
add
jbe
pop
add
mov
mov
add
add
loope
mov
jmp
add
jnp
test
add
add
add
mov
sub
pop
mov
test
je
push
push
push
call
add
in
movsb
add
mov
add
mov
incb
cmp
pushf
add
call
into
cmc
ljmp
scas
xchg
add
mov
aam
mov
add
int
repnz
add
mov
add
mov
je
add
add
in
hlt
lcall
incw
push
call
int
test
repnz
mov
mov
movsl
pushf
mov
in
jb
pop
ja
mov
add
imul
out
addr16
mov
arpl
add
add
add
add
lcall
loopne
test
lea
shl
pop
jmp
push
ror
pop
xor
push
push
push
push
push
lea
push
push
lea
push
push
push
call
scas
lea
add
mov
jne
loopne
xchg
xchg
stos
add
insb
call
add
add
add
cmpsl
test
divl
pop
mov
add
add
add
imul
in
fdivr
lcall
push
push
lea
push
push
push
push
push
push
call
sahf
mov
ljmp
add
stos
stc
mov
add
rolb
cwtl
imul
in
add
add
jo
out
test
add
mov
add
shll
orb
jbe
movb
incb
test
add
add
fwait
sub
pop
pop
push
lea
push
push
lea
push
push
lea
push
push
push
lea
push
push
call
add
add
mov
mov
in
mov
add
add
sti
add
test
push
mov
push
jns
pop
add
add
add
in
add
sub
pop
ret
add
mov
add
add
lcall
push
push
push
lea
push
push
lea
push
call
arpl
lcall
add
notb
xlat
scas
mov
add
call
aam
add
into
roll
push
push
lds
mov
push
add
add
push
add
mov
add
in
cld
add
add
in
call
pop
push
push
push
push
push
push
lea
push
lea
push
push
push
call
repnz
add
fiaddl
lahf
add
xchg
fadds
add
rolb
xchg
xchg
add
mov
add
xchg
add
rcrl
pop
xchg
cwtl
sahf
xchg
scas
faddl
in
add
popl
jge
or
jns
add
xchg
add
lret
add
imul
rolb
push
push
push
push
push
push
push
push
push
call
add
filds
add
add
add
add
add
add
add
into
cld
lcall
mov
outsl
push
lods
mulb
add
test
hlt
scas
xchg
jae
push
push
add
xor
test
add
add
fwait
cmpsl
add
stc
out
add
or
mov
add
pop
add
movsb
lods
push
lahf
jmp
ret
lea
push
add
shr
ror
pop
pop
push
push
push
lea
push
lea
push
push
push
call
test
add
in
jl
fidivs
push
add
jp
add
push
pop
add
add
mov
mov
mov
mov
add
scas
add
in
add
test
add
add
lods
test
add
jle
sub
pop
pop
push
xor
pop
pop
pop
push
push
push
lea
push
call
int
enter
pop
mov
add
lcall
popa
out
lock
add
pop
push
test
add
mov
push
add
add
add
jns
add
add
in
repnz
add
cltd
fst
repnz
sub
pop
leave
push
push
push
push
lea
push
push
push
push
call
add
add
mov
popa
lret
add
mov
add
add
testb
fistps
add
test
roll
popf
add
jbe
add
fstpt
add
mov
ficomps
lods
arpl
add
jl
sti
add
add
mov
mov
scas
sub
pop
ret
mov
push
push
push
lea
push
push
push
push
push
lea
push
call
scas
jo
add
mov
hlt
add
add
add
shl
mov
movsl
jns
mov
add
cmc
stos
rclb
out
sahf
sub
pop
pop
pop
push
not
inc
shr
pop
pop
push
push
push
lea
push
call
add
add
data16
add
mov
add
jnp
add
ja
add
data16
add
stos
add
stos
fldl
mov
mov
aad
xlat
repnz
mov
add
mov
aad
add
add
loop
add
add
add
cmpsl
sub
pop
pop
push
xor
xor
pop
leave
push
push
call
push
push
lea
add
mov
add
test
mov
stos
lret
add
push
jmp
mov
mov
jp
add
cmpl
clc
lcall
or
test
push
test
jae
shrb
test
jb
imul
jno
jae
test
jae
cmp
jb
push
test
loopne
stos
and
or
shll
or
pop
int
scas
ja
mov
jmp
ljmp
lock
lret
mov
jo
mov
out
push
xchg
sti
mov
jbe
jge
int
xlat
xchg
pop
and
cmovl
push
cli
in
ret
cmp
insl
fistpll
subl
jg
cmp
mov
or
push
pop
in
add
sub
es
pop
lcall
repz
xlat
mov
jb
or
es
add
cmpl
add
shrl
mov
sbb
xor
xor
cmpl
push
iret
fcmovnu
mov
inc
push
leave
mov
repnz
dec
rcll
mov
out
iret
pop
cmp
mov
pop
mov
cmp
or
gs
iret
adc
xchg
ret
dec
fnstenv
lret
and
mov
mov
insb
aas
jmp
pop
mov
test
mov
sbb
subl
sbb
dec
frndint
pop
add
lret
push
ljmp
sbbb
fstps
sub
stc
movl
jbe
out
inc
out
shlb
or
dec
jns
sub
sub
out
inc
shlb
sub
mov
mov
or
sbb
dec
sub
jle
arpl
jae
fcoms
add
negb
pop
pusha
jmp
xor
sahf
lds
out
jb
adc
add
pop
xor
cmpsl
pusha
sub
dec
jp
mov
mov
mul
cmpsb
in
test
jns
out
fprem
pop
or
leave
sub
inc
bound
in
ljmp
adc
push
xor
les
mov
xor
ret
ds
mov
sbb
add
push
inc
dec
mov
xlat
inc
and
stos
jbe
insl
sti
lahf
mov
jmp
ret
push
cmp
sti
je
arpl
pop
les
mov
pop
lods
pop
cmpsb
pop
inc
pop
push
mov
dec
adc
inc
jle
lea
jo
sbb
push
pusha
fsubrs
jno
ret
push
fstpt
sub
movsb
push
in
push
cmp
ret
mov
subl
cwtl
in
sbb
cwtl
and
sti
popa
loope
fidivl
mov
mov
flds
jge
jmp
adc
push
sub
arpl
xchg
out
and
inc
inc
and
ljmp
cmc
stos
or
dec
push
addl
push
shl
xchg
push
cld
in
pop
in
mov
fcompl
divl
xchg
roll
push
cmc
or
scas
loopne
test
imul
sahf
adc
je
nop
fmuls
idivb
scas
cmp
jg
fidivrs
stos
lds
mov
xor
arpl
in
mov
out
mov
mov
pop
mov
mov
pop
js
mov
pop
rcll
pop
or
gs
mov
cs
in
pop
push
and
jo
aad
xchg
mov
jne
mov
lods
fdivrs
ja
dec
in
sbb
pusha
mov
in
sub
mov
push
push
out
ret
nop
outsl
aam
pop
scas
ljmp
adc
imulb
push
or
xchg
pop
pop
pushf
test
dec
les
pop
das
sbb
jnp
imul
push
xchg
sub
pop
data16
outsl
pushf
mov
cmp
dec
subb
mov
dec
ficoms
cmp
fbstp
sbb
push
ljmp
icebp
fucomi
or
lods
pusha
gs
push
fidivl
or
push
gs
inc
cmc
jle
rolb
pop
cwtl
xchg
add
jb
jp
lahf
sbb
dec
mov
sti
or
aaa
fldl2e
and
dec
and
or
add
pop
testl
fldcw
mov
shrb
add
mov
dec
std
pusha
stc
cmp
mov
jle
hlt
xorb
scas
push
jo
clc
sti
call
je
mov
out
notl
jne
inc
sub
mov
add
jbe
xor
arpl
scas
dec
dec
mov
lods
clc
outsb
pushf
mov
decb
test
loope
mov
ret
std
xchg
fildll
adc
pusha
xor
popa
cltd
std
pop
mov
cmpsb
lds
addr16
in
ja
rol
or
je
add
xor
pusha
les
jmp
push
movsl
jae
pop
fistpl
cmc
pop
cmp
arpl
jp
je
or
lds
sub
lock
cmpsb
lret
ficompl
jno
jp
inc
lods
mov
mulb
xchg
dec
jo
sahf
mov
inc
outsb
add
mov
or
fucomi
add
and
in
mov
mov
mov
sbb
test
inc
add
pop
push
cwtl
pop
dec
gs
or
pop
push
insb
data16
enter
xchg
in
imul
xor
xor
pop
aam
je
xchg
hlt
mov
mov
bound
xchg
xchg
pop
or
int
push
testb
dec
pop
scas
jmp
lahf
cli
jno
mov
and
sahf
imul
lret
mov
sahf
cmpsb
jmp
test
adcb
sub
pushf
push
mov
jo
cltd
mov
aaa
outsb
jns
and
pop
cmpl
fnstenv
test
jb
jns
add
lahf
lret
data16
pop
jle
pop
test
xchg
mov
aad
mov
push
test
enter
and
outsb
daa
leave
lds
ret
jmp
jno
xchg
xchg
fimuls
mov
cmc
ss
leave
mov
movsb
ficoms
test
fisubrl
dec
mov
jmp
sbb
dec
dec
pop
add
jl
ljmp
outsb
mov
and
dec
fsts
mov
mov
and
lret
mov
pop
fldcw
rorl
scas
xlat
mov
pop
fadds
add
shrb
cltd
inc
sahf
push
sub
mov
rorb
rcr
cmp
bound
cmp
mov
mov
push
cmp
xor
icebp
mov
popl
fdivl
xor
or
jg
bound
xor
mov
push
popa
add
shl
pushf
popf
scas
xchg
mov
repz
jns
sub
lret
dec
and
sub
out
dec
mov
push
lock
fistpll
pop
and
aad
or
mov
pop
mov
mov
das
loopne
mov
std
std
pop
test
popa
or
ja
push
inc
std
xchg
ja
shll
orl
shlb
sub
insl
xor
js
xchg
xchg
fdivrl
sbb
les
push
lret
mov
jne
inc
cmp
or
jge
sub
sub
rcrb
fstpt
xchg
or
bound
push
sbb
add
gs
std
scas
push
cmc
sub
negl
in
and
dec
ss
clc
addr16
in
ficoml
test
mov
push
cmp
loope
icebp
hlt
push
daa
dec
nop
pusha
adc
adcb
sbb
shlb
mov
push
adc
jecxz
shrb
testb
imul
pop
cwtl
mov
cltd
leave
xchg
and
ror
mov
test
je
mov
push
inc
dec
mov
dec
mov
jo
pop
add
jnp
or
das
sahf
lds
fisttps
add
adc
mov
outsb
das
arpl
daa
jle
loopne
xchg
dec
mov
pop
mov
repnz
add
test
aad
inc
dec
inc
nop
push
outsl
dec
pop
cwtl
sbb
mov
test
xor
push
leave
or
adc
aad
js
or
mov
fwait
int
je
or
hlt
mov
filds
or
lock
jb
add
pop
or
hlt
leave
push
xchg
stos
test
mov
fisubs
mov
sbb
dec
mov
lret
mov
or
xor
sti
inc
pop
and
sub
fmull
jno
mov
stc
test
cmp
dec
orb
or
addr16
xlat
add
movsb
hlt
ret
js
pop
or
arpl
sbb
push
cld
jae
add
scas
push
imul
push
dec
or
jg
xchg
test
xorl
inc
das
mov
lock
xchg
inc
lea
ss
jne
sbb
xchg
push
fs
jle
scas
push
es
ret
test
js
out
in
lea
mov
arpl
pop
push
rol
push
dec
lret
fisttpl
pop
xchg
aas
mov
in
rclb
add
jbe
and
dec
jp
pop
cld
mov
test
cmp
mov
rorb
sbb
jl
ljmp
out
xlat
xlat
adcb
inc
pusha
sbb
mov
fwait
dec
call
movb
jle
and
mov
sahf
cli
ret
rclb
stc
test
js
xlat
sbb
pop
mov
repnz
xchg
add
xor
push
mov
adc
call
inc
add
les
sahf
sbb
out
lcall
out
inc
jg
add
andl
fwait
pop
pop
cli
popf
loop
shrb
dec
and
lret
jns
jg
shl
ret
mov
mov
cld
mov
in
popa
pop
xlat
or
sub
xor
stos
mov
dec
repz
hlt
aas
mov
add
mov
sbb
or
inc
fisttps
gs
push
xlat
mov
int
mov
push
mov
mov
dec
or
cmp
pushf
mov
cmp
mov
fcos
and
mov
in
mov
cld
das
or
scas
mov
dec
mov
adc
jge
in
pop
cmpb
pop
push
mov
sahf
addr16
push
mov
adc
push
push
std
adc
adc
sub
lret
xchg
push
mov
dec
dec
into
mov
and
inc
xchg
and
rcl
mov
xchg
lea
sub
cmp
xchg
pop
outsl
nop
rorl
bnd
and
enter
xlat
mov
mov
add
das
push
lcall
pop
in
fmul
nop
popa
aam
inc
pop
in
stc
pop
pushf
pop
pushf
leave
pop
fstpl
iret
ja
dec
mov
cmp
clc
adc
in
dec
loope
repz
push
push
not
out
fcmovnb
xor
aad
stos
cmp
sbb
mov
cltd
push
sbb
fsubr
fisubrs
es
xchg
mov
sub
arpl
push
inc
push
std
lea
in
test
repz
leave
inc
out
push
mov
cli
or
in
arpl
test
or
or
incb
sahf
test
ret
fsubrl
xor
lods
movsb
adcl
int
add
and
push
aaa
jns
stos
jae
ljmp
add
out
pop
pop
mov
stos
call
push
rolb
ljmp
lock
cmp
mov
js
jno
xor
gs
mov
iret
push
push
pop
push
dec
mov
nop
pushf
loop
xchg
out
mov
cmp
or
mov
sub
das
push
imul
daa
or
mov
and
popf
jmp
fisubl
fwait
pop
or
jge
or
arpl
sub
stc
jnp
add
mov
addl
sub
mov
adc
pop
sbb
dec
jg
mov
mov
pop
mov
add
jge
xlat
or
lret
cwtl
insb
adc
jo
pop
cmc
cmpxchg
xor
adc
jne
or
sub
lods
ss
mov
dec
sbb
popw
add
popf
popl
add
mov
dec
cmpsb
clc
out
enter
sbb
sub
clc
popf
sub
xchg
adcl
sub
mov
push
push
repnz
xor
xorb
pop
jmp
jno
xchg
push
push
add
stc
mov
call
movsb
jecxz
mov
sub
jno
sbb
call
lea
stos
lahf
stc
pop
iret
loope
jbe
cld
adc
fnstcw
xor
lcall
and
aad
outsl
adc
cli
push
jle
xor
and
inc
out
mov
mov
das
iret
nop
mov
sub
cmp
aad
loopne
xor
stos
gs
and
add
adc
push
adc
push
mov
xchg
add
adc
pop
sbb
or
inc
ret
jae
imul
push
add
xchg
pop
adc
adc
jno
dec
fmuls
pop
jle
aas
push
or
fildl
fnstsw
add
xor
ljmp
and
data16
mov
hlt
inc
adc
sub
flds
mov
jge
push
cmp
add
pop
ljmp
popa
shlb
dec
pop
or
cmpsb
add
clc
inc
testb
mov
pop
add
cmpsb
fwait
lock
mov
or
addps
jbe
stc
inc
and
adcb
add
cmp
pop
push
pop
mov
mov
adcb
iret
arpl
dec
dec
rorl
cmp
jecxz
inc
into
adc
and
dec
xchg
call
lods
and
fcomp
inc
inc
push
das
movsl
sbb
repnz
adc
daa
xchg
or
push
xchg
loope
test
aaa
dec
notl
jge
sbbb
in
fstpt
mov
mov
push
mov
inc
icebp
mov
inc
jo
sub
aam
cmpsl
xlat
iret
imul
and
rorl
adc
and
jbe
insb
xchg
iret
push
mov
sbb
std
jnp
adc
adc
dec
sub
or
shl
in
sbb
repnz
add
or
add
test
pusha
sbb
out
les
jp
mov
mov
iret
lea
cmp
cmp
xor
scas
leave
push
add
adc
xor
push
out
jo
int
push
sbb
fnsave
cmp
aam
clc
das
xor
in
or
lret
loopne
lea
sbb
push
push
jecxz
pop
movsb
jg
jecxz
dec
push
enter
inc
mov
jo
push
in
pushf
rolb
fwait
add
add
and
xor
push
sahf
loopne
sbb
push
pop
jo
pop
ficompl
dec
ja
out
pop
loop
xor
and
mov
int
in
pop
mov
movsl
add
cmc
call
fwait
inc
push
mov
sub
mov
mov
mov
loope
jl
and
setb
popf
rcr
xchg
leave
fadds
mov
out
lahf
fwait
push
sbbl
adc
lods
test
loop
inc
xor
fcoms
sarl
sub
sbb
outsl
push
sahf
lahf
pop
and
adc
int3
mov
psubusw
jecxz
lret
stos
push
mov
ja
je
ljmp
bound
xor
es
jo
add
testl
stc
and
pop
or
mull
and
mov
sbb
xorl
sbb
jne
sbb
push
addr16
xchg
movb
pop
adc
jne
movsb
dec
xchg
push
push
xor
int3
or
pop
fildll
push
sbb
mov
ficoms
insl
mov
lahf
test
sbb
sarb
scas
popf
repz
fisubs
lahf
sahf
mov
or
xchg
pop
sahf
movsb
jmp
push
push
xchg
scas
vpand
shl
adc
ljmp
jecxz
xor
adc
int3
aaa
hlt
mov
or
les
imul
inc
outsb
je
outsl
push
or
jecxz
ficoml
in
push
mov
pop
pop
mov
pop
add
nop
into
jb
add
fistpll
pop
std
xor
data16
nop
dec
mov
test
orl
push
and
sti
push
outsl
pop
lret
xchg
xchg
or
std
sbb
cmp
mov
xlat
pop
mov
mov
sub
gs
add
push
pextrw
sub
jno
pop
xchg
jnp
jg
push
jb
pop
orb
pop
ffree
outsb
or
sbb
std
cmp
pop
es
or
jecxz
cmp
sbb
testb
fiadds
sub
and
sbb
fstp
sbb
loop
shrl
inc
jnp
leave
jns
or
sbb
add
stc
scas
adc
notl
pop
and
mov
in
mov
nop
push
clc
or
insb
pushf
cmc
mov
jmp
shlb
adc
mov
pop
dec
push
ficompl
pop
dec
loope
cs
inc
xor
dec
movsl
test
push
and
imul
je
in
mov
xor
mov
or
jl
stos
lods
push
pop
imul
popf
test
rcr
lret
mov
aad
mov
mov
xor
je
fisubrl
sub
jb
aas
add
scas
sub
dec
dec
lret
pop
xchg
pop
mov
loope
ja
fs
push
pop
fnsave
repnz
sub
or
sub
xchg
pop
jge
xchg
imull
rcrl
push
jmp
or
jg
out
sub
mov
leave
push
scas
cmp
mov
cmp
and
dec
pop
es
mov
push
jns
add
ficomps
dec
stos
mov
stos
cwtl
inc
andb
pop
insl
hlt
pop
rcll
xchg
mov
jle
cmp
in
mov
sub
sahf
jp
xchg
xchg
pop
imul
adc
in
or
std
pop
push
push
aas
dec
gs
inc
movsb
stos
arpl
std
clc
mov
loopne
mov
xchg
mov
repnz
jne
sub
xor
xor
lods
das
int3
dec
fnstsw
cli
cli
popa
adc
mov
cmp
lahf
loopne
xor
rolb
push
stos
or
push
push
out
dec
popa
sbb
sarl
inc
orl
orb
xchg
rcl
mov
and
sub
outsb
loop
xchg
cli
pop
pusha
pop
and
push
sub
test
mov
in
xchg
cmpsl
inc
aaa
lds
sbb
mov
mov
push
nop
jb
inc
lods
mov
mov
stos
lea
pop
rolb
sub
les
xorb
jbe
cmp
and
aam
mov
out
adc
mov
out
daa
subl
xchg
add
dec
dec
sub
jne
les
adc
mov
aad
clc
jns
pop
add
es
mov
add
add
in
pop
cmp
mov
sbb
pop
xchg
scas
jne
cmp
inc
pusha
mov
subl
xchg
push
aaa
or
rcl
pop
cmp
dec
push
lds
pop
hlt
mov
mov
jno,pn
mov
fsubl
pop
nop
lea
push
pop
loopne
inc
mov
push
jbe
inc
aas
inc
stos
loop
sti
test
cmpsl
inc
insl
aas
xor
pop
mov
mov
arpl
sbb
cwtl
cmc
jo
add
dec
bound
pop
scas
test
mov
dec
pop
inc
pop
jns
push
and
and
cmp
cmp
es
xor
dec
lcall
inc
aaa
not
xchg
mov
fwait
out
loopne
push
push
lret
inc
outsb
dec
mov
push
xchg
or
mov
push
fisttps
pop
jmp
pop
push
and
aam
push
pop
out
mov
adc
popa
and
rcrl
pop
daa
xor
dec
jp
rcll
sub
and
mov
jmp
dec
in
mov
cmpsl
jle
les
jns
rcrl
push
inc
cmpb
inc
mov
das
inc
jg
orb
mov
xor
dec
daa
sbb
cmp
pusha
sbb
rolb
dec
push
out
faddl
fldenv
sub
sub
test
jnp
sbb
fisubl
cltd
fisubrl
jbe
lret
pusha
sub
popf
les
jp
and
cmp
xchg
mov
mov
cmovg
push
cmp
inc
pop
dec
imul
lahf
sub
ficompl
adc
sbb
push
jle
fwait
sbb
repnz
pop
jno
dec
loopne
mov
or
stc
les
dec
fwait
jo
stc
sub
xor
mov
mov
mov
adc
cmp
push
adc
push
xchg
scas
inc
fisttps
inc
lret
mov
adc
adc
pusha
lock
mov
into
cmc
outsl
xchg
das
cli
popf
pushf
test
adc
sub
iret
inc
loope
cmp
sub
into
adc
pop
xor
clc
filds
mov
addr16
add
add
mov
pusha
pop
enter
shrl
movsb
repz
jp
mov
dec
notb
mov
scas
add
bound
xlat
push
pop
fldcw
mov
push
aad
ja
mov
sbb
out
mov
mov
out
bound
jo
subb
mov
mov
jl
loope
fadds
pop
out
mov
inc
iret
sub
mov
test
je
pop
outsl
rolb
fdivl
pop
sbb
jnp
test
das
out
pop
xchg
xchg
cmp
cmp
sar
inc
and
cs
inc
push
outsl
add
cmpsb
je
fsubr
cmpsl
and
add
add
stos
xor
mov
pop
shlb
pop
jne
cmpsl
jbe
dec
pop
popa
xor
jne
aad
rolb
lea
aaa
or
loop
into
aad
push
push
adc
mov
pop
hlt
jb
aas
sbb
arpl
sbb
mov
or
stos
push
insl
add
pop
loope
out
jo
sbb
into
clc
inc
shrb
mov
popf
cmp
xchg
rcll
xchg
lcall
fcmovu
mov
jmp
push
out
xor
inc
sbb
dec
movsl
mov
dec
sub
jge
sbb
jecxz
repnz
cwtl
retw
fstl
or
enter
sbb
in
inc
cmc
xchg
push
rcl
clc
lcall
xchg
das
jno,pn
rclb
dec
inc
ret
sbb
repnz
sbb
mov
test
sbb
ljmp
addr16
or
ret
pushf
push
loope
int
fstpl
nop
and
mov
test
mov
or
out
leave
aaa
lcall
inc
mov
ljmp
fidivl
sahf
mov
xchg
add
in
call
popa
push
lcall
das
sahf
sbb
xchg
xchg
sti
pop
idivl
jmp
insb
jp
sub
into
loope
jp
nop
repnz
jbe
and
sti
fwait
int3
out
xlat
push
sti
sbb
jns
fwait
xchg
xor
inc
cmc
push
bnd
popl
adc
mov
adc
mov
dec
sbb
ret
jecxz
push
xchg
les
or
mov
adc
outsb
jo
stos
push
sbb
roll
rcrl
cmpb
push
lods
pop
cmpsl
push
sbb
mov
mov
lock
ret
popf
sub
nop
jl
xchg
xchg
es
negb
mov
adc
dec
cmp
or
sti
xchg
dec
xchg
aas
push
inc
and
bound
sbb
pushf
mov
dec
xlat
pushf
lret
jnp
xchg
cmp
push
jmp
pushl
popf
add
loope
adc
mov
mov
adc
arpl
jecxz
loope
mov
mov
into
sbb
or
jno
mov
xchg
sbb
pop
mov
jl
fldl
fisttps
das
add
clc
call
jp
sarb
cld
stc
aam
jne
jp
icebp
cmp
mov
std
xor
xchg
sbb
sarb
scas
xchg
mov
aas
leave
mov
movsl
cmp
dec
add
or
jge
hlt
dec
ljmp
leave
cmp
dec
dec
fnsetpm(287
xchg
iret
add
adc
dec
out
push
enter
inc
xchg
mov
mov
pop
sbb
mov
imul
adc
jmp
loopne
fdivrl
mov
lock
lea
mov
push
jle
pop
sbb
jecxz
enter
faddl
sub
jae
cld
cmp
andl
push
or
js
jge
push
inc
and
cli
xchg
adc
hlt
aad
stc
fdivrs
imul
loopne
xlat
stos
cmp
or
pusha
into
inc
mov
or
mov
ds
lret
insl
cmc
mov
push
inc
iret
loop
shll
or
pop
jg
lock
nop
or
jns
sbb
mov
and
sbb
jl
adc
adc
lods
cmpsb
stc
ja
int
mov
iret
add
enter
aad
out
pusha
dec
lcall
xchg
push
rclb
loope
subb
hlt
fildll
jb
xor
sbb
addb
pusha
stc
adc
rolb
push
aas
cmp
or
adc
ret
inc
sbb
adcb
mov
iret
adc
xor
cmp
in
xchg
dec
rcl
pop
enter
jae
scas
es
test
fildl
iret
jnp
loopne
je
jb
arpl
pop
cmp
imul
sbb
sub
adc
xor
movsb
lods
repnz
rcl
ds
sbb
mov
cmp
mov
push
dec
das
cmpl
std
sti
rcll
jns
je
sti
outsb
push
cmc
push
ja
in
push
stos
pop
iret
sub
dec
add
repz
enter
scas
scas
mov
hlt
cmp
xor
pop
cwtl
js
push
lahf
jbe
sbb
cmp
insb
jmp
push
inc
pop
mov
sbb
out
ja
or
lock
cmp
inc
sahf
and
fcomps
loope
push
sbb
call
loopne
popa
cmc
les
bound
fs
xchg
mov
lods
inc
jne
push
and
mov
movsl
dec
jecxz
add
arpl
dec
insb
push
sti
push
ret
cmp
testl
hlt
jp
or
sub
pop
lcall
lcall
push
data16
fcoms
dec
push
add
cmpsl
jbe
cli
les
mov
dec
and
jbe
pop
dec
lods
imul
jno
push
psubb
daa
int3
jbe
cmp
leave
push
stc
adc
jl
pushf
hlt
push
jae
cli
nop
add
or
jns
div
push
cwtl
es
or
stos
js
insb
nop
insb
xchg
adc
imul
xchg
mov
push
mov
inc
inc
or
rcrb
out
pushf
sti
xor
lods
mov
daa
daa
out
cmpsb
cmp
pop
jne
xor
mov
mov
movsb
test
xchg
fistpl
lahf
adc
xchg
punpckhbw
or
xchg
or
fs
mov
add
add
cli
pop
mov
mov
mov
daa
pop
shl
imul
les
add
and
popa
mov
xchg
jp
mov
test
and
pop
movsb
cmp
lret
inc
mov
adc
jecxz
lods
cwtl
dec
lea
dec
jo
scas
push
shrb
repnz
inc
in
cltd
popa
cmpsl
xchg
out
lret
lret
cli
call
mov
sbb
add
jg
xor
ret
inc
pushf
and
mov
sub
pop
das
xlat
push
repnz
popa
jne
into
jns
out
das
push
xchg
daa
mov
insl
push
mov
pop
inc
enter
jp
push
xchg
cmp
aas
insl
cmc
fsubrl
or
imul
jg
push
fcoms
add
dec
pop
scas
sbb
mov
sub
mov
dec
inc
arpl
sub
lods
mov
push
lahf
jp
xlat
xlat
sarl
add
aam
sbb
or
movsb
mov
inc
sbb
mulb
push
scas
sti
imul
fs
xor
into
inc
or
subl
repnz
lods
out
mov
push
cmp
aas
jge
cmp
stc
sub
loopne
movsl
rolb
mov
or
stos
sbb
pushl
insl
inc
leave
push
lret
or
lcall
bound
ja
and
stos
sbb
sub
outsl
push
jmp
cmp
xchg
sub
loopne
stos
inc
loop
fwait
xchg
jg
pop
xchg
cld
ss
cmpl
pop
xchg
cmp
sbb
insb
xorl
aas
std
dec
inc
lahf
dec
icebp
pop
pop
adc
push
outsl
xor
mov
mov
adc
loopne
mov
std
sbb
dec
into
pushf
pop
pop
mov
ljmp
xchg
pop
sbb
fld
xchg
pop
sub
push
sbb
xor
mov
or
push
xor
rolb
ret
cltd
and
sbb
aad
jo
pop
inc
sbb
sub
adc
lock
stos
outsb
into
daa
cmp
mov
mov
int
mov
imul
and
loope
les
fcmovu
and
std
stos
fadd
xor
aaa
testl
fisubrs
or
in
jle
fistl
and
jle
xor
add
mov
cmc
ret
push
and
loope
ss
lret
sub
mov
add
jmp
sti
les
jns
pop
push
cli
push
push
jns
add
jo
aaa
ss
pop
fsubrs
sub
repz
ret
pop
mov
mov
sub
adc
loope
push
into
jg
push
dec
mov
stos
notl
mov
push
ds
or
shrb
sbb
pop
mov
ret
cmp
xchg
inc
fldln2
fwait
arpl
call
xchg
adc
pop
icebp
lods
repz
fxch
xchg
into
js
ret
sti
xchg
mov
mov
xchg
sbb
out
stos
pop
xchg
adc
rcll
adc
test
mov
rcr
sti
mov
pop
inc
insl
insb
mov
lahf
sbb
add
dec
sahf
ret
pop
xlat
sbb
js
roll
mov
out
xlat
fdivl
cmpsb
pop
inc
fs
popa
fists
les
orb
fwait
data16
xchg
mov
dec
xorb
add
test
adc
andnps
and
mov
jb
and
adc
cmp
and
mov
xlat
repz
push
loope
and
jecxz
aaa
addl
sub
movb
bnd
lretw
insb
add
xchg
mull
xor
mov
int3
insb
jle
and
pop
fildl
jp
mov
mov
addr16
pop
jle
int
jle
jbe
or
bound
add
stc
orb
cli
cmp
mov
js
insb
or
imul
mov
sbbl
test
add
adc
dec
adc
push
insb
push
mov
rolb
cwtl
cltd
popf
idivb
cmp
pop
and
or
sbb
xchg
push
mov
lret
jecxz
cwtl
dec
cmp
loopne
leave
pop
je
sbb
out
outsl
mov
andb
sub
divl
shrl
iret
push
jle
jl
push
push
out
sub
cmp
ret
mov
aad
push
pop
push
int
xor
xchg
inc
xor
in
and
add
push
mov
mov
add
add
daa
jmp
push
ljmp
inc
push
shlb
into
shl
shlb
xchg
mov
insl
das
xchg
xor
mov
fwait
adc
inc
fsubs
in
add
std
mov
js
dec
imul
out
jl
sub
test
pop
mov
enter
push
mov
cmp
arpl
inc
stc
mov
lea
imul
xchg
inc
mov
adc
adc
fst
fnsave
aad
push
popl
jmp
rorl
repnz
rorl
mov
mov
je
es
das
rep
or
movsl
cli
xchg
rorl
adcl
imul
mov
and
mov
call
fsubs
mov
dec
sarb
adc
loop
or
add
addr16
mov
mov
es
fisubrs
subb
and
movb
xchg
mov
mov
pop
cmp
push
jbe
sub
fmuls
data16
mov
shlb
sbb
shlb
sub
push
lods
inc
lock
push
push
loope
outsb
mov
lea
mov
xchg
roll
ljmp
jge
push
mov
aas
mov
insb
push
xor
add
cltd
or
adc
sar
and
aaa
into
inc
roll
pop
cmp
push
inc
js
mov
push
mov
sbb
rcll
cmp
fidivl
xor
adcb
lods
cmp
test
mov
cmp
jp
fs
sub
xchg
sbb
inc
pop
out
ljmp
in
jne
frstor
or
mov
sahf
xor
gs
xor
test
test
dec
clc
ja
fs
imul
movb
push
sub
or
gs
mov
cmp
lret
pop
out
aad
jmp
int3
mov
jmp
sti
mov
inc
adc
pop
xchg
push
xchg
xlat
imul
or
mov
cltd
pop
in
pop
pop
daa
sbb
dec
jo
cld
mov
add
mov
cmp
mov
in
sbb
xor
sbb
jb
or
enter
in
add
jns
fwait
inc
sbb
movsb
cmp
add
ss
arpl
mov
out
inc
subl
pop
sbb
xchg
and
xor
pop
ret
stc
lret
fildl
sbb
mov
adc
cmpsb
mov
sub
rorb
xchg
cwtl
xor
and
stc
int
test
jge
movq
cld
jmp
out
scas
inc
loopne
push
cmc
sbb
adc
add
clc
pop
and
mov
jle
mov
in
rcr
xchg
test
xlat
out
lret
mov
das
call
hlt
xchg
jbe
andl
pop
aas
movl
daa
nop
lock
test
push
push
cltd
in
lods
imul
cmp
dec
xor
add
xchg
and
mov
or
sub
lcall
mov
or
test
fcoml
clc
scas
leave
shll
adc
mov
push
mov
or
int3
mulb
xor
iret
xchg
mov
ljmp
sti
lcall
and
arpl
mov
mov
mov
hlt
ficoml
inc
pop
fs
arpl
pop
ret
in
cmc
scas
test
cli
nop
dec
pushw
das
push
sti
or
mov
sub
push
mov
or
xchg
pop
adc
jbe
pop
mov
ljmp
pop
into
xor
push
adc
das
push
sbb
pop
pop
daa
cmp
mov
cmp
push
dec
or
and
mov
sub
dec
sbb
scas
jge
xchg
movsl
data16
les
popf
out
sub
popl
repz
mov
fistl
bound
sti
shrb
push
cmp
push
cmp
xor
fisubrl
mov
pusha
imul
xchg
jg
xor
lock
mov
out
jmp
mov
insl
xor
jb
out
out
insb
push
movsl
ds
mov
shrb
cmp
repz
sti
dec
sarl
in
notl
arpl
sarb
push
xor
fisttps
sbb
pusha
shll
sub
mul
dec
adc
int3
in
in
imul
inc
in
rorl
das
add
or
imul
repnz
rol
subb
jge
jnp
ficoms
stos
into
sub
push
dec
pop
pop
fbstp
push
fnsave
xor
mov
push
lcall
pop
ret
fs
cli
popf
inc
add
adc
pop
mov
push
or
xor
cmp
in
fs
inc
xchg
mov
ljmp
or
mov
scas
lea
jns
mov
mov
les
repnz
fstpl
in
dec
lea
sbbl
out
mulb
test
lcall
adc
or
or
in
ret
imul
ja
pop
lods
sbb
inc
icebp
pop
cmc
popa
sbb
ret
adc
insl
lret
mov
or
jecxz
cmp
aas
fimull
inc
sti
push
xchg
jmp
push
hlt
repz
rorb
mov
push
std
lret
sub
mov
arpl
cmp
stos
das
adc
rcl
outsl
and
lcall
mov
xchg
call
in
je
cwtl
xchg
mov
fwait
test
jne
aad
test
mov
xchg
mov
add
xlat
imul
out
mov
xchg
into
sub
fistpll
jle
jl
sbb
cld
sub
mov
jne
stc
ffree
iret
jno
and
jg
mov
fs
push
push
sbb
repnz
icebp
inc
jge
sub
push
jge
jae
adc
mov
jecxz
xor
inc
test
or
sahf
xor
imul
push
iret
adc
and
pop
mov
lret
jne
hlt
pushf
adc
stos
std
dec
in
mov
pop
jno
xchg
jl
or
aaa
add
xchg
inc
dec
fidivs
pop
xchg
sub
mov
arpl
ljmp
fimuls
out
mov
popa
fimuls
das
or
adc
ret
fwait
nop
jecxz
nop
fstpl
ds
addb
leave
dec
jnp
adc
adc
add
lcall
add
mov
lea
cmp
adc
call
sub
sub
bound
push
mov
movaps
mov
mov
je
cltd
loopne
sarl
sti
mov
add
jae
insb
lea
nop
and
ss
repnz
xor
or
mov
cmp
push
jp
cmp
pop
sub
mov
loop
mov
xorl
ret
xor
mov
and
fdivrp
pop
sahf
inc
xor
mov
fstpt
scas
sub
xchg
shl
aam
rolb
sbb
fwait
add
xchg
ret
imul
sbb
lods
adc
xor
mov
sbb
fimull
sti
xchg
lret
stos
push
xor
in
out
lods
bnd
imul
ss
lods
loop
cmp
test
arpl
in
cmp
fcmovnb
mov
push
sbb
inc
add
mov
mov
fsubl
push
or
xchg
cmp
pop
mov
sti
xchg
imul
outsl
lock
jbe
je
push
push
sub
std
xor
mov
imul
cmp
cmp
adc
aaa
lcall
mov
adc
bound
cmp
ficoml
cmpsl
aaa
pop
loopne
push
nop
fs
movsl
adc
xchg
daa
xor
dec
cld
hlt
test
scas
cs
cs
add
daa
and
inc
gs
inc
xchg
cmp
mov
aaa
repz
or
aam
cld
in
sahf
push
arpl
jo
call
jecxz
push
int3
and
int
fcompl
mov
and
fwait
lock
jne
fsub
ss
loope
shl
dec
xlat
shr
out
nop
pop
vpunpcklbw
mov
lods
lds
jp
retw
mov
imul
xchg
gs
pop
push
jmp
mov
sbb
cmpsb
insb
sub
js
lods
pop
in
mov
cmp
aam
xor
hlt
pop
xchg
xor
mov
movsb
pop
sbb
roll
push
dec
outsb
sub
js
adc
mov
ror
sbb
jne
sbb
ficomps
aad
int
sub
outsb
je
dec
arpl
mov
xchg
out
inc
xchg
daa
inc
dec
fcom
and
setbe
cmpsb
scas
movsl
xor
fisttpl
pop
push
xchg
scas
dec
mov
or
add
loopne
jl
sub
pop
push
enter
into
jb
in
repnz
xlat
push
and
xor
xchg
mov
xor
push
dec
aam
cmpsb
les
mov
inc
stos
cmp
sub
fstpt
cli
lea
jnp
jo
mov
jno
and
xchg
cmp
sarl
mull
enter
jno
cmp
mov
adcb
popf
lods
and
fwait
sub
lods
outsl
rolw
pop
inc
jg
shll
sbb
fistps
mov
out
jge
mov
sub
movsl
icebp
xor
jo
push
rcrb
sahf
pop
dec
dec
insl
cli
in
subl
je
arpl
push
xor
sub
inc
in
popf
addr16
pushf
sub
sbb
sahf
mov
xor
pusha
insl
mov
loop
jnp
adc
sbb
jge
adc
clc
rolb
sbb
fisubl
outsl
cmpsb
fucom
dec
xchg
movsb
in
jl
push
push
int
mov
mov
sbb
arpl
daa
jnp
bound
xchg
or
xorb
aaa
pop
enter
pushf
push
out
push
dec
shlb
ror
rclb
mov
lock
push
adcl
fcmovb
xor
mov
mov
jg
loop
cmp
stos
mov
fistpl
in
mov
xchg
mov
xlat
data16
mov
cmpsb
mov
sbb
vmread
or
jae
loope
test
lds
inc
lret
mov
cmc
add
xchg
or
mov
adc
arpl
xor
add
rcll
push
fwait
xor
movl
xchg
pop
jle
leave
add
xchg
gs
mov
sub
push
scas
pop
mov
ljmp
shlb
and
adc
pcmpeqw
fimuls
divb
in
dec
push
daa
dec
pushf
push
cmpsl
mov
or
mov
ficoms
or
pop
push
in
bnd
test
test
je
sub
jbe
mov
mov
fnstcw
jle
jge
dec
mov
loope
pushf
and
bound
sub
aam
sbb
and
int3
sbb
pop
pop
add
movsb
jb
andl
lahf
push
sbb
dec
hlt
fsubs
inc
popf
xchg
repnz
cld
lods
js
push
clc
or
sub
out
push
xchg
pop
mov
aam
ljmp
cmp
push
push
adc
pop
mov
push
or
ss
mov
out
and
ljmp
xor
popa
sbb
jno
fs
jns
dec
mov
and
mov
jo
lds
sub
xchg
jle
test
add
or
xor
mov
xor
xchg
xchg
mov
cmp
jae
xor
rcl
mov
dec
add
out
push
add
icebp
pop
jnp
xchg
call
outsb
pop
mov
or
test
adcl
arpl
pop
and
sbb
in
lock
pop
dec
adc
rcl
xor
mov
neg
cld
mov
add
sahf
mov
outsl
ret
xchg
addr16
aam
inc
push
sbb
mov
pop
push
inc
mov
inc
jne
pop
push
pop
dec
dec
divl
lahf
std
push
out
jae
inc
int
and
arpl
mov
ljmp
insl
cmpsl
add
jl
icebp
cmpb
jmp
xor
inc
dec
test
mov
or
adc
adc
xchg
pop
and
fcmovu
lods
mov
xchg
mov
imul
imul
pop
sub
cmp
jecxz
pop
and
sub
adc
pop
out
stos
or
cltd
push
dec
cmp
or
sub
xchg
andb
subl
ljmp
dec
imul
sahf
loop
shll
stc
in
aad
in
fsubrs
bnd
mov
sbb
dec
imul
movsb
fisubrl
lock
inc
mov
mov
cmp
stos
sub
lret
pushw
dec
jno
aaa
shl
mov
mov
das
cmpsl
jl
jno
std
pusha
xchg
cs
sub
push
pushf
das
movsb
stos
xchg
dec
imul
add
out
scas
out
mov
xor
jno
dec
aaa
into
js
dec
mov
mov
cmc
jge
xor
out
mov
cmpsl
sbb
mov
push
inc
pop
push
push
or
pop
cmpsl
mov
fisubl
push
out
aam
stos
in
repnz
jle
xchg
test
adc
pop
mov
mov
dec
fimull
dec
push
sbb
push
hlt
sti
push
pop
ljmp
lods
and
outsl
mov
mov
popl
enter
inc
je
fxch
inc
xor
shll
jg
xlat
fidivrl
sti
scas
jne
ret
movsl
lret
mov
push
jnp
push
xor
jl
xchg
clc
aam
cmp
pop
cmpsb
leave
cmp
test
and
popa
mov
rclb
sbb
adc
fisttpl
mov
mov
shl
ja
psraw
je
adc
fsubrs
xor
into
mov
and
jp
sbb
das
test
cmp
mov
mov
cmpsb
lock
and
mov
test
pop
dec
pop
cmp
mov
xchg
shrl
mov
int
or
add
sbb
or
push
inc
push
inc
pop
and
iret
cs
push
movsb
pop
xchg
mov
push
lods
cmc
popa
ror
push
popa
adc
jno
mov
xor
mov
jbe
neg
dec
dec
jecxz
aad
sahf
je
push
call
icebp
flds
ret
lret
dec
je
pop
js
es
les
jae
fcom
outsl
cmpsb
sub
jno
sarl
repnz
pop
sbb
rclb
inc
in
push
ljmp
repnz
jge
sub
in
in
xchg
sub
pusha
mov
xchg
fmull
jne
sub
cs
and
xlat
xchg
push
mov
icebp
and
jo
or
cmp
inc
sub
sbb
dec
add
push
movsl
cmp
outsb
imul
loopne
leave
inc
mov
dec
cmc
and
or
mov
cmpsl
and
int3
lods
jnp
add
sub
and
insb
jae
out
in
js
push
mov
aaa
jno
fidivs
push
xchg
adc
out
popa
push
cmp
sub
xlat
sahf
xor
lods
mov
mov
shrl
push
cmp
add
mov
xlat
inc
sub
jbe
lcall
mov
inc
jae
insl
inc
in
mov
sub
dec
and
push
stos
aam
outsl
xchg
divb
mov
inc
sub
adc
xchg
mov
mov
test
pop
loop
mov
vminss
cmp
cmpsb
mov
push
jns
dec
ljmp
outsl
ljmp
jge
lret
shl
xchg
cli
mov
sub
jo
lock
ficoms
push
sub
or
in
xchg
xchg
addb
inc
mov
adc
in
bnd
add
push
in
ds
or
ret
subb
or
jmp
jmp
mov
xor
dec
out
hlt
push
dec
sub
imul
jne
loope
push
add
sahf
nop
call
sbb
sub
movsl
sbb
jge
sub
pop
mov
das
adc
into
sub
int
cmpb
shlb
add
cmp
lcall
or
ss
jmp
inc
fiaddl
lahf
outsb
mov
xchg
imul
jb
pop
fidivl
pop
icebp
xor
incb
cltd
or
adc
stos
lcall
xchg
fldln2
and
out
outsl
cmpl
sar
fadd
sbb
mov
js,pt
push
call
sub
xchg
pop
lahf
mov
or
xchg
dec
es
inc
dec
push
mov
mov
subb
inc
ja
sbb
inc
flds
fcomp
and
pop
or
and
sbb
sbb
pop
dec
adc
addb
xchg
jecxz
jnp
sti
push
inc
cmp
push
jno
inc
adc
ds
xchg
xchg
and
jecxz
cmpsb
mov
push
lods
inc
push
stos
js
clc
imul
inc
xchg
cltd
out
adc
xchg
cpuid
inc
jo
lods
sbb
popa
rcll
sub
mov
xorl
push
outsb
or
mov
fcoml
pop
into
mov
push
xor
xor
push
dec
hlt
pop
cmpl
sub
pop
movsl
test
pop
cld
jp
fstpt
sti
or
movsb
mov
ss
jge
mov
sti
decb
out
std
mov
mov
xchg
fwait
mov
pop
push
cld
dec
js
sahf
pop
push
jl,pt
cmp
or
mov
gs
fs
mov
xchg
xchg
sub
jg
mov
jmp
sti
jl
xor
pop
iret
leave
movsl
pop
push
jmp
xchg
and
lret
fs
push
and
ret
sti
sbb
fwait
or
outsb
lock
out
mov
jmp
lods
mov
nop
jle
mov
mov
mov
loope
cmp
push
repnz
iret
dec
or
inc
movsb
into
lret
enter
sbbb
sub
or
mov
mov
and
push
jae
push
xlat
cltd
sbb
iret
sbbb
mov
and
mov
sub
xchg
imulb
inc
adc
cmc
clc
xlat
pop
aam
ficoml
stos
bswap
inc
mov
aam
sbbl
insl
pushf
ds
repz
or
or
mov
inc
xchg
jo
add
aam
sub
xchg
xchg
lock
cmp
xor
in
push
adc
test
ljmp
das
lods
mov
icebp
test
adc
sub
dec
lea
xchg
sub
out
repnz
div
add
pop
enter
add
add
lahf
sbbl
lds
inc
rorl
cltd
push
test
clc
pop
or
push
cmc
sbb
mov
push
cld
jne
shlb
gs
xchg
pop
jbe
push
nop
lock
stos
pop
jae
mov
mov
xlat
cmp
ds
insl
xchg
or
sbb
int
lds
lret
in
add
dec
insl
push
and
in
xorb
dec
lock
xchg
addr16
lds
xor
mov
dec
mov
lcall
xchg
sub
ficoms
sub
sub
xor
sbbl
cmp
popf
sub
sbb
in
cmpl
or
jmp
xchg
xchg
or
popf
loopne
cmp
sub
add
jmp
jno
inc
fs
psllq
mov
cld
in
into
shll
and
push
jge
lock
push
mov
xor
sbb
mov
fldt
lcall
cmp
cmp
mov
shrl
clc
sbb
sbb
call
cmp
sub
and
mov
loope
iret
daa
ffreep
push
stc
cmpb
mov
sub
movzbl
sarb
outsb
ja
fidivrs
ret
in
iret
addr16
push
lahf
je
mov
or
jecxz
out
int
sbb
push
mov
and
xchg
and
out
das
push
xchg
iret
aad
aad
xor
cmc
aad
jmp
and
lock
ret
sub
mov
lahf
cmp
mov
inc
mov
jecxz
dec
sub
cmp
fwait
adc
mov
ss
icebp
cmp
int
mov
fdivrs
pop
outsl
cs
pop
repz
inc
pushf
cld
jae
nop
sub
leave
dec
pusha
push
cli
mov
mov
addr16
sar
leave
rcrl
leave
aad
inc
cwtl
pushf
lea
mov
std
cli
sub
orl
and
hlt
imul
inc
bnd
push
sub
mov
dec
ljmp
popa
fldt
lods
les
inc
out
scas
nop
inc
xchg
inc
lahf
add
and
in
xchg
inc
jge
mov
hlt
mov
or
xor
inc
fs
and
insl
fbld
jno
push
cmpsb
scas
fdivrl
mov
push
cmp
hlt
cmp
mov
lret
jns
and
scas
lret
push
mov
xor
idivl
mov
js
sarb
pop
into
inc
xchg
fcmovnbe
stos
rolb
enter
test
xchg
rolb
int
imul
cwtl
hlt
xchg
mov
incl
xchg
aaa
mov
or
mov
jne
pop
sub
cltd
inc
mov
loop
push
or
mov
clc
sub
mov
and
inc
fdivrl
fdivp
pushf
test
das
dec
pop
push
faddl
mov
xor
adc
ljmp
lret
aad
pusha
sahf
cmp
fists
push
mov
stc
int
jae
mov
xlat
rclb
lahf
mov
and
pusha
bound
data16
pop
pop
fmull
and
mov
sarb
rcll
fs
jae
pop
xlat
adcb
imul
rorl
inc
pop
add
mov
cwtl
mov
stos
sub
add
outsl
popa
std
testb
xor
jmp
das
jne
icebp
xlat
out
cmp
jmp
stc
pop
cli
ljmp
mov
and
or
js
ficomps
pop
jmp
inc
scas
addl
dec
adc
dec
or
add
mov
lods
inc
sbb
mov
lcall
jmp
mov
dec
rcrl
push
xor
push
jb
mov
lcall
mov
inc
aaa
test
inc
mov
ret
out
mov
sahf
jmp
into
cwtl
inc
inc
push
mov
in
sub
lock
sub
add
lret
xchg
push
fstpt
movsb
mov
leave
and
inc
enter
cmp
out
sbb
pop
out
js
cmpsb
sub
mov
bound
outsl
and
cmp
imul
popf
pusha
adc
and
or
adc
and
clc
out
sub
test
test
pop
int
jb
addl
loope
pop
in
lret
loop
test
push
std
sub
xchg
fwait
or
jb
mov
dec
xor
pop
mov
mov
andb
xchg
xchg
inc
dec
test
mov
pop
and
mov
xchg
cmpsl
xor
sbb
push
dec
xchg
dec
inc
in
inc
jb
punpckhdq
je
hlt
adc
adc
out
mov
or
cmp
out
mov
lock
in
popa
add
jne
mov
cwtl
and
pop
or
outsl
pop
mov
sar
inc
adc
pop
sbb
fwait
movsl
arpl
sbb
pop
stos
mov
adc
jecxz
out
testb
sub
sub
sbbl
fisubl
outsl
pop
cltd
xchg
push
movlps
adc
lods
imul
cmpsl
lock
es
pop
cs
cmp
dec
xchg
rcl
hlt
stc
push
sub
or
mov
out
cmp
xor
push
popf
cmp
pop
cmc
push
xor
stos
push
test
mov
jb
pop
or
lahf
popf
pop
lods
repz
mov
mov
movsl
adc
testb
ja
mov
ret
add
cli
push
and
jl
mov
sti
add
pop
dec
lcall
mov
mov
cld
mov
insl
aad
sub
cmp
leave
out
daa
sub
sbbb
push
mov
dec
inc
mov
movsb
and
xor
insb
shl
or
rcll
loope
pop
and
imul
pop
jle
loopne
adcl
cmp
xor
js
cmp
pop
in
or
aam
sub
ja
jmp
int
out
push
ret
in
add
pop
push
jecxz
jle
loopne
std
xlat
gs
test
out
mov
add
sub
stos
and
pop
inc
mov
popa
push
push
dec
jge
push
outsl
scas
xchg
push
mov
cltd
jl
ja
mov
sub
into
ret
bound
dec
inc
sahf
cltd
loopne
rorb
das
test
call
xchg
pop
rcrb
or
adc
cmp
push
stos
jg
test
ret
scas
mov
out
push
les
mov
clc
push
xchg
jg
jnp
mov
stos
test
das
inc
adc
mov
pushf
imul
pop
stos
pop
inc
xchg
das
shlb
dec
enter
dec
out
add
pushf
lock
add
lea
sbb
jg
daa
and
push
mov
xor
pop
or
sub
adc
inc
loop
dec
jmp
test
pushf
in
push
push
iret
jbe
fcompl
xchg
cwtl
jl
cld
aas
add
popf
fs
add
cltd
mov
mov
std
add
insl
and
pop
and
jns
push
movsb
xor
mov
jo
pop
jne
movsl
xchg
jecxz
test
mov
pop
test
out
scas
xchg
mov
adc
jo
push
add
pop
imul
lock
sbb
mov
mov
dec
dec
sti
lea
dec
adcb
das
test
push
mov
adc
test
mov
sahf
shll
inc
jp
rolb
loop
mov
sub
jbe
push
insb
push
sub
cmpsb
into
lea
das
xlat
cmp
xchg
sbb
addb
jo
adc
sub
add
int
sbb
cld
dec
adcb
loope
cmp
lods
iret
xchg
and
ljmp
into
lret
call
loop
add
fisubl
lock
mov
daa
dec
or
push
xchg
push
daa
shl
and
pop
imul
rcrb
or
loope
dec
aas
mov
lret
fnstsw
add
fdivrl
mov
sbb
xchg
mov
ret
js
push
or
mov
dec
mov
add
aas
xor
cld
rcrb
jno
push
cs
cwtl
mov
mov
in
and
psadbw
inc
je
push
adc
push
or
sti
int
mov
stc
lret
jno
insb
mull
inc
xor
pushf
push
in
cmp
and
pop
fwait
xor
shr
ja
inc
pushf
xchg
into
enter
aam
pop
push
mov
repz
jmp
inc
outsl
sbbl
lea
nop
sub
jp
add
push
xor
mov
or
jae
aaa
das
or
lock
add
sub
pop
insb
sbbl
lahf
dec
cmpsl
sub
mov
push
stos
mov
movsb
xlat
into
je
rclb
pop
xor
sarl
jae
add
fldenv
test
dec
pushf
repz
je
xor
icebp
nop
jne
add
ret
outsb
cwtl
inc
cmp
xor
aam
dec
inc
insl
adc
sub
sbb
cld
div
cmp
and
mov
test
outsb
pop
inc
stos
and
stos
mov
sbb
lods
insb
xchg
pop
lret
mov
sbb
orl
stos
fcmovnbe
ret
xchg
push
xchg
jmp
iret
cmpsl
pusha
aad
cwtl
aaa
pusha
mov
mov
divl
pushf
stos
push
fsts
inc
cmp
loope
out
jnp
fs
push
mov
sbb
sbb
pop
imul
cli
in
or
mov
mov
cmc
cwtl
hlt
out
insl
in
popf
or
and
inc
outsl
mov
cmp
dec
sbb
inc
lods
aad
dec
je
jb
mov
ja
ds
movb
add
fwait
mov
sub
rcr
in
xlat
xchg
and
fwait
or
insl
push
push
inc
jb
js
xchg
bound
dec
imul
repnz
es
in
inc
lcall
daa
mov
pop
mov
cwtl
outsb
push
xor
add
and
xchg
cwtl
xor
sbb
loopne
jle
sbb
jge
inc
push
push
jae
inc
xor
stos
jno
dec
push
or
pop
adc
mov
push
mull
shrl
ret
and
pop
imul
notb
clc
dec
inc
mov
jle
sub
mov
aam
subb
ret
int
xchg
shlb
sub
and
push
aam
add
xchg
add
mov
jmp
jne
je
sub
push
pop
cld
call
xor
mov
repnz
push
pop
lret
insl
leave
sbb
das
andb
lods
std
loopne
fbstp
test
test
pop
test
xchg
into
int
inc
push
insb
mov
lods
cmp
fadds
xchg
nop
add
subb
xchg
pushf
in
push
jae
das
add
pop
or
loop
je
cmp
xchg
fdivs
add
jae
cmc
jne
mov
mov
mov
or
cmp
loopw
sahf
lret
aas
jmp
push
popf
pop
mov
icebp
fdivrl
xchg
mov
ss
arpl
cmc
mov
cmc
lods
mov
daa
popa
dec
mov
mov
and
cmpsb
add
or
jmp
xchg
inc
popf
cmp
pop
inc
push
xorl
and
movsb
mov
inc
xchg
arpl
pop
js
lret
fdivs
xor
popf
xor
call
outsl
xchg
mov
mov
jp
push
data16
mov
imul
loope
mov
fcom
mov
jecxz
pushf
aas
mov
outsl
test
and
inc
call
sahf
fcoms
xchg
cwtl
jg
add
cmc
add
scas
cltd
dec
sub
loop
dec
jns
leave
xorl
das
orb
xor
add
xchg
add
nop
shll
orb
in
das
and
aam
mov
cli
addr16
loope
cli
mov
adc
iret
sub
mov
xor
and
insl
xor
rcl
scas
inc
out
insb
mov
pop
outsl
xchg
aas
fidivl
xchg
jbe
mov
pop
add
sbb
mov
push
in
pop
pop
jbe
loopne
es
mov
push
ss
leave
cli
push
mov
mov
js
sbb
setno
pop
xchg
stc
and
xchg
pop
imull
pop
repnz
in
inc
ljmp
sbb
movsb
call
xchg
loopw
xchg
xchg
ds
repnz
repnz
jecxz
ss
jnp
insl
cmp
test
adc
cmp
ret
xor
mov
sbb
push
pushl
cli
ret
mov
pop
stos
or
cmp
xor
push
imul
pusha
dec
imul
lret
std
movsl
cmp
movsb
aad
inc
dec
push
shlb
inc
call
mov
jne
sbb
arpl
inc
and
cmp
mov
adc
sub
sahf
jae
dec
int3
mov
fnstsw
add
outsb
in
push
jp
push
test
es
shll
icebp
fcomi
add
gs
xor
int3
cs
fdivr
xchg
sbb
dec
sarl
pop
sbb
push
and
mov
push
dec
fs
add
insb
push
pop
or
push
pusha
pop
sahf
arpl
lea
daa
and
in
xchg
clc
xchg
and
jmp
nop
adc
mov
lds
cmp
outsl
and
clc
inc
mov
mov
stos
add
lea
es
js
push
inc
cmp
aaa
push
mov
cmp
adc
testl
push
add
mov
jmp
push
shrb
rcll
mov
inc
cmp
xchg
aad
popf
cmp
dec
adc
cmp
pop
jle
jp
xchg
mov
cwtl
adc
pop
cs
inc
movl
rol
cmp
sub
xchg
xchg
imul
mov
push
movsl
sbb
imul
sahf
sbb
loopne
or
dec
pmaddwd
hlt
and
std
rcrb
fsub
jmp
cmp
push
int
pop
pop
dec
fldl
cli
push
inc
clc
mulb
enter
add
imul
aas
cmpsb
mov
sbb
xchg
mov
dec
mov
jg
lock
ffree
cltd
add
dec
xor
popa
out
inc
mov
sub
test
add
jle
hlt
xor
cmc
incb
pop
inc
nop
loope
inc
cmpb
jmp
jg
or
xlat
addr16
in
xor
pop
popf
in
cmp
cmp
sbb
mov
jl
pop
in
and
pop
bnd
insb
les
mov
leave
push
dec
icebp
dec
sahf
xchg
sbb
push
pop
loope
sub
je
test
jp
dec
push
and
pop
shlb
xor
test
daa
xchg
into
insl
mov
xchg
inc
push
inc
sbb
push
add
leave
xchg
mov
clc
mov
mov
sti
adc
dec
jmp
repnz
dec
push
sahf
test
mov
fmuls
pop
push
sub
pop
movsb
xchg
out
cmp
xor
mov
lds
sbb
and
sbb
loop
push
jb
adc
jl
scas
ja
xor
gs
push
mov
sahf
cltd
cli
push
mov
jo
sahf
fists
inc
bound
adc
les
sub
push
or
xchg
pop
mov
adc
out
out
sbb
xchg
ficoml
pushf
int3
stc
push
outsb
push
lahf
xlat
push
cmpb
push
mov
and
push
push
mov
repnz
sub
xor
jl
mov
xchg
mov
sub
js
cmp
jge
sarb
sub
push
mov
mov
xchg
pop
jp
mov
sub
adc
xchg
mov
sbb
dec
scas
out
test
ficoml
cmp
mov
mov
call
mov
adc
jae
jno
add
or
out
addr16
lcall
adcl
icebp
jge
pop
jo
hlt
shlb
mov
and
iret
push
mov
mov
mov
mov
jae
js
dec
daa
xor
cltd
mov
sbb
push
addr16
xor
xchg
mov
rcll
mov
or
xchg
adc
push
mov
sub
daa
dec
sub
shll
adcl
xor
sbb
test
or
and
repz
xor
shlb
mov
sbb
outsl
sbb
cmpsl
push
iret
dec
lods
jl
dec
pop
pop
leave
stos
xor
movhps
adcb
orl
loope
lret
jae
mov
mov
stos
cmp
aad
clc
dec
inc
mov
loope
mov
out
jns
test
inc
adc
mov
icebp
bound
push
sub
hlt
adc
subb
test
push
int3
in
sbb
xchg
mov
sub
dec
cmp
or
pop
jg
repz
jmp
add
fadds
sub
rcrl
adcl
and
mov
or
andb
dec
adc
punpckhdq
add
mov
and
enter
push
jmp
jns
std
inc
and
mov
notb
loopne
fwait
adc
pop
lcall
test
dec
push
test
push
cmp
and
cld
xor
cli
inc
cmp
adc
xlat
add
fcoml
je
push
aam
jmp
cmp
cmp
aam
popa
mov
cmp
mov
push
pop
add
js
clc
cmp
incl
mov
push
call
mov
leave
pop
mov
xor
aad
imul
jg
fadds
push
pusha
or
mov
imul
jl
stos
out
jo
lahf
pop
jo
cli
ret
cmp
xchg
aam
sub
loop
add
xchg
mov
pop
push
int
imul
fisubrl
mov
fcomps
jo
xchg
mov
push
and
push
mov
sti
cmp
push
sbb
xchg
sahf
jmp
mov
jecxz
jne
mov
or
mov
fwait
ss
sahf
movsb
in
adc
mov
xlat
arpl
loop
lods
mov
lret
jbe
ret
mov
mov
call
dec
xchg
out
fwait
std
mov
outsl
sub
sbb
fistl
arpl
adc
pop
mov
sub
cmp
and
xor
std
ds
fbld
lods
cmp
stos
scas
outsl
sub
push
stos
shrb
ja
xor
and
jg
imul
inc
fadd
sahf
insb
loop
dec
loopne
inc
mov
mov
cltd
jecxz
lods
mov
nop
sbb
loop
xor
cmc
rcrb
cmpsl
jne
cmpsl
outsl
aam
xor
push
push
jge
test
cmp
shlb
stos
pop
scas
cmpsl
aam
cltd
dec
rcrl
lret
setge
into
or
sub
pop
or
xor
das
cmp
pop
lret
push
test
xchg
out
jbe
cmp
rcl
push
jnp
adc
pusha
push
insb
movsb
and
pop
lods
xbegin
sti
fiadds
fwait
sbb
mov
testl
mov
addr16
sbb
es
movsb
or
jbe
arpl
repnz
dec
inc
addb
jb
dec
loopne
inc
mov
mov
hlt
sti
ds
in
xor
mov
or
push
cmp
fisubs
es
fcoms
sti
pop
sgdtl
out
xchg
fcomip
loopne
sbb
and
std
dec
sahf
fimuls
fmuls
pop
xchg
sbb
movsb
cmp
push
in
outsb
jae
pop
mov
sub
lods
dec
adc
ror
js
in
cmp
imul
cmpsb
stos
ret
mov
dec
pop
sub
cmc
lahf
adc
sbb
and
out
cltd
or
popa
mov
sub
lahf
sub
loopne
jno
sub
pop
sub
mov
pop
push
je
js
or
mov
testl
push
sbb
pop
cltd
repnz
stos
jns
or
pop
gs
pop
movsb
cltd
stos
into
push
dec
les
outsl
cmc
outsb
test
test
xor
insl
mov
push
cmp
and
add
pop
add
xor
test
add
and
xlat
fwait
movsl
mov
cmpl
shl
cltd
inc
mov
xchg
sbb
push
cmpsl
mov
mov
pop
push
mov
out
xor
cmp
lds
xchg
xchg
jmp
dec
mov
adc
and
scas
lahf
lcall
fwait
adc
arpl
or
or
push
jge
stos
adc
cmpsb
mov
dec
ret
push
adc
xchg
inc
sti
addl
cmpsb
mov
js
and
cs
repnz
sub
pop
cmp
dec
aam
jnp
rclb
in
sti
sahf
imul
add
xchg
outsl
adc
lret
cmp
pop
sarb
or
repnz
inc
push
lret
int3
jle
ficoml
scas
add
cwtl
adc
daa
push
dec
enter
ss
arpl
ljmp
push
aam
lcall
cmc
sbb
add
repnz
aaa
xchg
push
loope
fcmovnbe
add
pop
xchg
clc
jo
outsl
xchg
xor
push
out
and
cmp
and
dec
lods
arpl
sbb
ret
xchg
push
ds
popf
in
in
jbe
loope
jno
sub
pop
jne
dec
fistl
dec
popa
fstpt
inc
lcall
jmp
pop
nop
sbb
jle
call
ficoms
cmp
leave
loop
loop
insl
shrb
xor
mov
fldt
lahf
insl
sbb
call
fbld
insb
push
cmp
inc
push
cltd
icebp
sahf
xor
lds
fstpt
aad
jmp
xchg
shll
push
cmp
insb
xlat
or
imul
inc
inc
imul
fmuls
stos
test
mov
inc
jns
push
jb
push
repz
movzbl
pop
and
jmp
push
fcomps
pusha
cli
push
insb
or
and
test
int
lahf
and
jae
jmp
leave
lahf
dec
movsb
sbbb
imull
imul
hlt
adc
mov
sub
lock
cmp
int
les
repz
frstor
xor
jle
pop
and
push
xlat
sbb
jnp
push
sub
scas
push
mov
add
jle
hlt
lahf
test
neg
popf
arpl
inc
push
dec
lcall
sahf
sahf
pop
stos
lret
xchg
pop
xchg
jnp
out
pop
cmp
stc
movsl
pushw
ljmp
xor
movsl
adc
iret
test
mov
mov
lods
push
jns
out
stc
in
outsl
sbb
adc
jns
sti
sub
pop
mov
or
jno
testb
arpl
mov
mov
sbb
movsb
push
ja
lods
mov
mov
xchg
fildll
aam
jno
add
dec
push
mov
push
aam
leave
inc
inc
lods
add
pop
aaa
mov
xor
jle
iret
nop
and
mov
fabs
mov
cli
push
dec
in
xchg
jo
jo
clc
xlat
mov
iret
mov
cmpsb
mov
into
shll
xchg
xchg
add
dec
stos
mov
enter
pop
mov
push
loop
inc
iret
add
pushf
xchg
cmp
leave
nop
push
imul
and
sub
mov
xchg
stc
push
sti
dec
pop
sbb
sub
jo
jl
xchg
shll
cld
inc
inc
dec
xor
loop
jp
mov
outsb
cwtl
or
pop
cmp
pop
cwtl
pop
lahf
out
fadd
mov
ficoms
add
movsb
cmp
fwait
and
add
sbb
push
lods
push
cmp
sub
or
scas
loop
xchg
push
lods
inc
sar
movsb
sub
lds
stc
pop
sub
data16
mov
push
imul
and
or
adc
lahf
aas
pop
push
frstor
inc
push
dec
mov
popf
jno
push
xor
in
inc
jbe
push
outsb
js
rcrl
mov
les
lods
push
add
jne
xchg
adc
or
mov
push
jnp
cli
xchg
push
xor
mov
adc
mov
int3
imul
add
mov
jp
xor
push
or
mov
sbb
xlat
pop
addr16
mov
push
cli
sbb
jge,pn
mov
addr16
inc
dec
js
idivb
mov
mov
sub
mov
adc
mov
mov
cs
mov
push
mov
jo
cmc
test
mov
scas
mov
lret
nop
cmp
inc
xchg
into
lods
cmp
test
fstpt
ficoml
in
data16
pop
rcrb
lahf
or
or
or
out
add
inc
jmp
in
push
je
rorb
scas
rcll
movsl
cmp
push
inc
xlat
or
inc
in
xor
fidivs
es
icebp
stos
lods
add
pop
mov
ds
pop
fimuls
out
xor
adc
stos
inc
push
scas
inc
push
out
or
xchg
pop
cwtl
cmc
adc
imul
and
inc
test
ja
cmpsb
mov
fbstp
loopne
jp
loope
cld
cmp
cmpsb
push
dec
or
push
inc
fists
movsl
ds
dec
xor
xchg
fsts
cmp
imull
push
sub
xchg
mov
sbb
out
dec
leave
out
mov
outsl
pop
jl
out
loop
cmp
fs
inc
push
xor
xor
fmull
aaa
cmpsl
jle
sub
adc
out
push
rol
cmpsl
pop
dec
popa
mov
pop
inc
xchg
fidivrs
dec
jns
cmpl
lods
iret
fnsave
lcall
test
add
scas
mov
xlat
add
popa
jl
dec
lahf
push
cmp
jecxz
rcr
cld
push
or
dec
xor
test
movsl
lcall
or
bound
aaa
scas
in
lret
shr
scas
xor
mov
insl
push
insl
adc
or
or
inc
or
xchg
cmp
lahf
mov
add
call
scas
inc
xor
xor
ret
aas
loope
or
fldt
add
enter
pusha
adc
pop
pusha
mov
mov
push
sahf
inc
add
jmp
out
push
ja
lds
xor
test
and
pop
or
or
inc
cmp
cmpsb
mov
push
js
test
xchg
push
filds
ret
sbb
mov
sub
movsb
and
cltd
xchg
sub
pop
adc
xchg
push
loop
mov
cmpsb
addl
test
les
stc
inc
push
decl
mov
jb
jnp
leave
scas
int3
jp
sahf
mov
bound
mov
std
ljmp
jmp
rcll
sbb
and
test
stos
mov
daa
push
aad
push
lahf
jno
push
sub
fnsave
bound
jo
cmpsb
xor
ja
xchg
pop
andb
psrad
xchg
xchg
dec
xchg
mov
jecxz
and
jg
sbb
dec
into
pop
inc
les
inc
add
mov
ds
sub
mov
icebp
jno
cmc
pop
fdivl
test
lret
jb
addl
in
gs
cmp
pop
mov
sti
daa
push
mov
gs
xor
xor
mov
or
notl
shl
orb
mov
shll
mov
and
das
push
dec
add
shrl
mov
into
rcrl
rorb
mov
in
mov
cwtl
subb
cmp
jb
ds
mov
mov
adc
jmp
loope
ds
sti
hlt
mov
cld
out
jmp
xor
ja
jmp
mov
jle
lahf
fdivr
sub
int
stos
daa
jns
lret
push
xchg
and
cltd
cli
sub
daa
icebp
mov
cmp
jo
imul
xor
shll
and
shlb
xchg
je
pop
lcall
pop
jmp
cmpsl
rol
inc
enter
jle
int3
fdivl
sarb
cs
sub
mov
dec
adc
mov
dec
in
sub
sarb
pop
mov
outsb
push
scas
cmp
in
pop
loopne
pushf
sbb
push
xchg
add
inc
orl
into
test
call
adc
sub
sub
gs
push
shlb
xor
lcall
fwait
inc
push
dec
std
aad
repz
mov
dec
jp
mov
and
loopne
mov
inc
jno
or
cmpb
xor
sub
push
notb
movsb
inc
es
and
cmp
xchg
fsubrs
enter
popa
loopne
lahf
xchg
mov
stos
adc
xchg
pop
mov
neg
sub
shl
popa
ljmp
push
xchg
loop
jbe
push
cmovns
pop
fcmovne
outsl
sbb
cmp
in
add
aad
je
jno
cmp
add
xchg
mov
or
xchg
jnp
jge
mov
mov
stc
sti
jae
std
subb
aam
lahf
mov
adc
mov
mov
mov
mov
leave
adc
mov
push
adc
push
outsb
movsb
lock
cmp
shlb
movsb
xor
sub
cmpl
xchg
xchg
loope
ljmp
loop
mov
lods
jae
jg
sbb
clc
and
std
dec
jmp
or
ljmp
mov
ret
inc
push
sbb
mov
pop
cmpsb
popf
adc
adc
movsbl
xor
cltd
pop
push
loop
xor
cmc
mov
inc
fisttpl
sub
adc
mov
xlat
dec
aas
xchg
sbb
push
cwtl
aaa
add
repz
inc
cld
pop
out
int
repnz
xlat
push
xlat
jl
sbb
mov
sti
lods
xchg
mov
xchg
pusha
in
mov
or
hlt
dec
nop
and
es
and
push
sub
sub
cmp
add
add
dec
addb
xor
sub
nop
xchg
inc
movsl
jge
xor
lea
mov
xchg
imul
ss
inc
xchg
add
xor
sbb
jmp
xlat
sub
ss
jb
add
out
push
lea
stc
jnp
mov
pop
mov
mov
push
mov
int
call
cmp
xlat
scas
push
daa
dec
imul
clc
sahf
mov
mov
or
popa
loopne
jo
add
lret
dec
pop
push
push
aas
sbb
data16
loope
jo
imul
lcall
fdivl
xchg
pushf
add
int3
scas
iret
sub
int
and
in
cltd
lods
out
jl
cwtl
cmp
imull
cmp
imul
cmp
adc
xchg
xchg
rolb
pop
lods
adc
shl
mov
dec
dec
int
fwait
inc
sbb
mov
or
pop
jnp
test
ljmp
sbb
lret
mov
ret
arpl
push
in
notl
inc
xchg
cmp
jo
push
sbb
sub
pop
inc
sub
andl
aas
mov
mov
mov
negl
insb
jnp
lds
ret
loop
mov
ja
pop
sbb
and
andb
inc
dec
mov
pushf
mov
mov
sbb
mov
in
mov
lgs
mov
xor
inc
cmc
mov
push
and
test
xor
cld
int3
mov
scas
xor
out
xchg
pop
fistl
pop
ljmp
test
sub
pop
or
sub
mov
cmpsb
push
sub
xchg
xchg
mov
insb
pop
rcrb
movsb
in
jb
sbb
pop
addl
inc
jb
sub
mov
fs
mov
pop
fnstsw
loope
add
aam
xor
inc
sub
jnp
cmc
lods
jecxz
loop
ds
notb
sub
dec
lock
push
xor
ss
pop
lret
ja
std
push
in
xchg
and
xor
xchg
aad
es
fcmovne
hlt
and
stos
xchg
sbb
aas
movb
lods
pop
into
xor
xorb
cmp
repnz
mov
pop
daa
dec
push
out
mov
rorl
pop
mov
jl
mov
jl
adc
push
aaa
pop
sub
mov
add
lret
push
push
popf
mov
mov
push
sub
adc
pushf
data16
jno
outsl
mov
outsb
push
hlt
cmp
mov
imul
pop
push
pop
leave
xor
or
sti
jge
movsl
pop
pop
adc
adc
mov
add
mov
push
out
clc
add
inc
mov
or
ja
push
fistl
jle
xchg
out
add
arpl
mov
cmp
pop
xlat
loop
dec
dec
cmc
and
inc
dec
sbbl
cmp
mov
stos
adc
mov
cmp
dec
mov
cmp
outsb
mov
repnz
lret
jo
xchg
jb
subl
sub
mov
aam
bound
mov
ret
sub
mov
in
in
aaa
push
js
out
shrl
test
into
je
cmpsl
sub
and
pop
and
out
and
jne
fsub
xchg
xchg
adc
andl
fldln2
cmpsb
outsb
sti
sub
mov
movsl
repnz
stos
mov
add
lahf
inc
adc
dec
movsl
imul
mulb
adc
jle
mov
cmpb
adc
mov
mov
pop
push
dec
add
cmp
push
shrb
push
fisttpll
push
and
jl
call
dec
mov
mov
lahf
add
test
cmpsb
shlb
inc
fimull
rcll
jg
push
xchg
or
movsl
sbb
jne
jmp
test
out
cmp
inc
cmp
jmp
dec
sbb
test
into
sub
lods
dec
mov
data16
mov
pmaxub
xchg
mov
adc
dec
arpl
inc
mov
jmp
mov
or
xchg
fs
adc
pop
mov
dec
lret
cmp
loope
notl
cmp
loop
jmp
sbb
add
pop
sbb
aam
mov
push
test
mov
ret
mov
add
mov
sti
sbb
cmpsl
pop
in
adc
addb
shll
mov
scas
mov
mull
in
into
shll
lcall
and
xchg
clc
pusha
idiv
xchg
fsubrs
mov
in
test
test
cli
test
shl
out
push
or
push
rol
adc
in
mov
cmp
ljmp
aam
movsb
insl
inc
sarb
arpl
sub
test
xor
jb
mov
icebp
cmpsl
mov
je
int
mov
push
sbbl
jmp
out
adc
push
and
lock
sub
popf
cwtl
pop
push
stos
cmp
js
xchg
pop
cli
bound
ss
std
int
loope
testb
push
ja,pn
cli
add
mov
rolb
movsl
adc
and
or
sbb
cld
mov
mov
lcall
push
sbb
sti
cmp
out
cld
int
sbb
movsl
jle
mov
lahf
test
ret
or
pop
xor
pop
xor
inc
push
push
daa
mov
push
popa
clc
mov
push
call
mov
adc
daa
fcomip
mov
push
scas
test
imul
sbb
scas
stos
mov
icebp
in
mov
mov
das
fwait
movb
add
xchg
add
jbe
jp
cmc
inc
pop
scas
mulb
pop
inc
dec
cltd
jo
js
popf
dec
dec
insl
cmpsl
ja
cld
inc
inc
mov
test
data16
in
das
orl
ds
cmp
inc
push
negb
mov
mov
shrb
xchg
and
jmp
cmp
sub
cmpsl
gs
xchg
dec
sahf
icebp
aam
pop
rol
sti
mov
es
dec
mov
outsl
dec
xor
mov
arpl
xor
push
push
fcomps
ss
mov
shlb
iret
inc
jp
in
and
and
push
mov
notb
add
bound
sub
dec
call
cld
xor
js
addr16
or
mov
or
pop
mov
aad
push
pop
push
sbb
in
pop
cs
movsb
rclb
mov
jle
mov
gs
pop
jmp
xlat
push
xor
mov
dec
or
sbb
mov
and
dec
int3
mov
testl
daa
in
orl
out
sub
xorl
js
dec
add
pop
mov
aas
fstpl
popf
sbb
xor
sbb
jo
dec
loopne
fcoml
xchg
xchg
popf
popa
aad
pop
lret
aam
push
jnp
jno
rcrb
data16
loope
popa
add
inc
cmp
shlb
sarl
clc
clc
dec
xchg
mov
int
jp
jl
stos
inc
sbb
xor
lock
mov
repz
rolb
mov
js
mov
fsts
lds
ffreep
insb
jp
adc
and
push
xor
inc
fwait
insl
pushf
adc
std
push
sub
inc
imul
call
and
ret
inc
push
out
xor
inc
and
int
push
das
jne
or
movsb
pop
sbb
cmp
mov
mov
push
mov
call
xchg
xor
scas
aam
adc
fidivrs
dec
loope
mov
cmp
clc
push
int3
mov
cmp
mov
cld
jmp
fsub
inc
xchg
ja
push
mov
lock
popf
xchg
inc
cmp
push
add
inc
xchg
push
dec
sti
sbb
pop
mov
test
xor
fcomi
mov
mov
sub
xor
mov
xchg
jmp
sbb
aaa
repz
sbb
leave
pop
push
inc
lods
inc
cmpl
xor
pop
iret
out
dec
sub
and
mov
mov
xor
push
add
sub
adc
test
jae
inc
movsb
push
jp
mov
mov
dec
popa
fiaddl
sub
in
imulb
int
mov
xor
je
cs
pop
lcall
movsl
xlat
fwait
arpl
mov
jno
pop
cwtl
and
dec
push
in
popl
imul
fcompl
pop
add
jbe
fs
and
scas
xor
mov
adcb
pop
inc
out
mov
aad
stc
xchg
xor
data16
and
xor
popf
sbb
bound
sbb
jl
lahf
mov
shr
sbb
cltd
call
mov
sti
sbb
scas
addb
icebp
sbb
cmp
arpl
adc
insb
inc
sub
cld
mov
out
mov
inc
add
or
pop
jae
jb
fisttpll
mov
sub
inc
or
nop
aaa
dec
sbb
std
jp
adc
mov
das
mov
dec
add
sbbl
sbb
sbb
imul
mov
movl
mov
hlt
sbb
adc
jmp
in
clc
test
inc
ja
cmpsl
mov
ror
or
in
outsl
addl
call
pop
mov
sbb
ret
lahf
imul
out
mov
sbb
fbstp
xor
jne
jb
clc
xor
repz
fstps
add
out
ds
out
stos
add
xchg
cmp
and
std
cmpsl
xchg
mov
leave
enter
lods
pop
int3
push
mov
outsl
add
in
into
push
fcmovbe
jno
mov
pop
rolb
push
or
int
loope
outsb
and
test
pop
mov
mov
mov
or
ffreep
cmp
rcr
and
jl
add
aaa
mov
movsb
out
scas
notl
rolb
dec
loope
insl
xor
xor
outsl
imul
cltd
fdivrl
ja
data16
insb
pusha
add
outsb
add
sub
sub
jne
fdivs
stos
jmp
adc
stos
sbb
and
xor
movsl
inc
push
sub
aas
xor
daa
sbb
test
aad
div
xlat
mov
add
jecxz
fs
and
fdivrl
add
lods
add
imul
pop
mov
add
sbb
call
lret
cltd
insl
icebp
lahf
lds
jmp
in
push
mov
cmp
jle
sti
xchg
mov
cwtl
dec
pop
mov
adc
xorb
xchg
test
and
mov
outsl
cmpsb
sahf
in
fstpt
cmp
dec
sub
test
cmp
lahf
push
ss
out
add
insb
je
xchg
aad
cld
cltd
inc
cmpsb
pop
adc
outsb
dec
bound
cmp
xorl
push
cld
clc
jmp
or
cmp
movsb
out
mov
dec
popa
or
mov
or
stc
jo
fdivrl
not
xchg
stos
fldl
inc
in
mulb
mov
test
jne
and
push
enter
arpl
xor
sahf
sti
loope
push
ret
mov
or
xchg
dec
jge
sbbl
movsb
outsb
push
addb
out
repz
xlat
aad
jg
aad
std
cmp
mov
es
inc
iret
lds
inc
pop
cmpsl
les
and
xor
popf
and
mov
mov
call
lods
ficompl
mov
xchg
loope
push
les
xchg
cmpsb
shrl
fdivl
pop
mov
cld
xorb
or
mov
xlat
flds
cmp
dec
in
mov
xor
divb
jne
push
insl
mov
or
and
movsl
icebp
in
das
cmp
aam
scas
popf
xchg
push
lods
out
dec
fiadds
sub
cmp
or
dec
sub
add
xchg
shll
pmuludq
adc
je
mov
xor
jnp
push
mov
fmull
or
pop
rcll
jecxz
add
or
test
add
je
ficomps
aaa
jns
or
or
out
sbb
sub
testl
shll
cmpb
lea
arpl
sbb
scas
int
jnp
pop
cmp
push
add
mov
mov
inc
es
adc
sarb
add
pop
data16
fcmovnu
int3
lcall
es
dec
mov
pop
fwait
pop
xchg
mov
xor
and
in
addl
xor
push
lea
mov
nop
sbb
mov
xor
cmpsl
pop
rcll
mov
sub
mov
adc
pop
shr
push
addr16
sar
sahf
aas
mov
xchg
sbb
push
mov
sbb
daa
rcrb
or
adc
arpl
push
rolb
push
sbb
lea
aad
jge
mov
fists
lret
enter
cltd
pop
and
fstpl
sub
jns
pop
in
mov
mov
push
aaa
mov
mov
std
pushf
lahf
in
cmpsl
jge
adc
ja
jns
sar
rclb
orl
pop
dec
fdivrl
add
mov
je
adc
cmpsl
pop
sbb
divb
jne
jb
nop
pop
addr16
push
popf
and
xchg
jg
cld
mov
insl
lods
dec
incl
dec
mov
jle
jecxz
lods
ror
and
fst
and
adc
scas
dec
out
xor
insl
popf
jae
jge
mov
jb
mov
pop
aam
popf
incb
jl
dec
xor
in
mov
sub
xchg
inc
iret
je
fbld
cmp
lods
fidivrl
xor
cli
add
and
lahf
lret
ss
dec
push
bound
mov
insb
popa
xchg
fsts
stc
hlt
dec
mov
imul
xchg
shlb
sub
jecxz
sub
jnp
push
aaa
repz
lods
sub
mov
ret
xchg
sbb
adc
and
sti
jecxz
test
jp
dec
inc
xchg
jbe
pop
xchg
in
xor
pop
lods
jne
popa
cmpsb
shl
arpl
adc
sub
sub
xor
sub
dec
xchg
inc
sbb
lods
mov
jmp
lods
jg
roll
movsl
mov
add
int3
insb
pop
enter
dec
je
cwtl
mov
subl
scas
outsl
sbb
pusha
pop
shlb
fs
and
nop
aas
mov
xor
inc
in
popa
xchg
xchg
inc
sti
mov
test
data16
setnp
push
rclb
sahf
lahf
test
cmp
arpl
rcrb
fwait
test
push
jg
push
or
jno
sarl
mov
push
fnsetpm(287
or
jecxz
int
cmp
push
das
inc
add
mov
cmp
xchg
decl
xchg
cld
xchg
xchg
xchg
mov
sbb
pop
stos
lds
fidivs
xchg
movsb
stc
xchg
add
jne
mov
jp
and
mov
or
xor
xchg
lods
or
cltd
loop
sbbl
fbstp
sub
xchg
mov
mov
jb
mov
adc
dec
outsl
cli
sub
or
fcoml
push
pop
cmpsl
and
xchg
or
movsl
mov
add
popf
xor
or
data16
icebp
loop
shll
mov
lcall
fmull
cmp
mov
scas
cmp
cmp
cmc
int
lods
fdivrs
or
or
enter
xchg
push
ja
ret
xor
add
imul
cmpsb
arpl
dec
push
push
into
jno
pop
shll
jl
decb
pop
imul
and
inc
pushf
cmp
mov
push
sbb
sbb
cmp
rcrl
pop
lods
ret
lea
movsl
and
fwait
cli
repz
mov
sbb
les
daa
data16
mov
ret
lds
iret
push
test
lds
mov
mov
and
push
idivb
xchg
jge
insb
aam
or
fnstcw
pop
scas
sbb
ss
ficoml
gs
push
sbb
fisttps
shrb
mov
pop
in
imul
aas
xchg
mov
int3
std
icebp
xchg
in
iret
mov
sub
push
es
popa
hlt
mov
imul
je
into
inc
ficoms
sbb
mov
fstpl
scas
and
ret
les
mov
pop
aam
mov
ss
rcrb
stos
imul
fisubl
rolb
clc
lcall
and
ret
movsl
adc
sarb
icebp
test
mov
idiv
insl
test
ret
push
lds
rcrb
dec
decl
sbb
pop
popa
sti
pop
outsb
mov
mov
bound
adc
andb
pop
push
jno
pop
push
and
cmp
clc
lahf
arpl
jge
mov
jmp
pushf
sbb
xor
mov
cmpsl
rclb
add
jo
call
fsubs
scas
push
jne
dec
push
push
inc
jbe
xchg
mov
jl
xchg
call
gs
adc
adc
sbb
scas
sub
sbb
call
rolb
xchg
scas
iret
dec
fsubrs
ja
or
sti
call
das
pop
sub
stc
arpl
sbb
pop
cwtl
test
jbe
mov
dec
jg
adc
ds
jmp
in
int
mov
push
sti
cmp
xor
loop
jl
out
inc
add
xor
mov
fwait
or
mov
sti
jp
out
jns
js
fs
pop
cli
cmp
xlat
fidivs
sub
ret
jge
notb
gs
out
fcmovnu
xor
sbb
sbb
es
xchg
pop
insb
inc
mov
cmpsb
test
add
jg
dec
in
adc
dec
xchg
mov
cwtl
jbe
or
movsb
sbbl
dec
pop
lock
daa
xchg
popf
mov
sbb
xor
inc
orl
jmp
xchg
ss
dec
jecxz
adc
jae
inc
bound
mov
adc
in
pop
mov
push
mov
jno
inc
mov
movsl
xchg
and
mov
cmp
xorl
in
lods
mov
repnz
inc
push
imul
pop
cli
lods
rorb
sbb
mov
inc
dec
inc
dec
andb
sbb
and
xchg
dec
jae
int
repnz
mov
xchg
xor
xchg
dec
xchg
jg
mov
jle
mov
outsb
ss
iret
xchg
lret
inc
mov
mov
in
cmp
cwtl
ds
cmp
andl
loop
xor
in
xor
push
push
pushw
orb
cmp
sbb
popf
fstcw
adc
mov
in
notl
inc
fcoms
mov
in
push
dec
xchg
sub
xor
and
mov
dec
mov
mov
sbb
stos
jnp
or
subps
cmp
add
stos
cmpsl
pop
add
arpl
dec
or
shll
getsec
cmp
roll
jo
xor
or
cmp
and
icebp
or
test
and
cli
mov
cs
sub
dec
pushf
enter
rclb
into
cs
mov
test
rol
mov
pop
xchg
xchg
mov
inc
cmp
cmc
push
dec
pop
pop
add
das
pushf
xor
pop
push
js
fidivrs
stos
pop
jb
andb
std
pop
jge
push
sub
arpl
je
sub
neg
dec
xchg
and
mov
and
or
repz
push
push
pushf
push
pop
xor
stos
xor
jo
int3
scas
outsb
std
inc
inc
jg
xchg
adc
int
out
inc
xchg
sub
in
mov
jo
loope
arpl
jp
dec
and
pusha
adc
es
scas
mov
pushf
and
lret
cmp
push
call
mov
jb
xor
sbb
mov
in
jnp
je
ljmp
repz
pop
les
fldl
cmpb
jmp
lret
push
pushf
pop
lret
out
subl
inc
jnp
ret
idivl
push
pop
pop
push
inc
pop
mov
addl
out
pop
out
pop
xchg
sub
outsl
push
fmuls
mov
or
fdivl
add
das
scas
mov
jl
imul
mov
out
xchg
outsl
mov
int3
pop
adc
sub
mov
xchg
jb
ljmp
aas
or
inc
subl
lcall
adc
iret
out
xlat
push
mov
imul
inc
inc
cld
mov
mov
push
es
sub
lret
es
into
idivb
xor
movl
push
out
stc
pop
pop
adc
lea
cmp
sub
cmp
in
enter
inc
sbb
pop
mov
jmp
ds
xchg
dec
scas
jmp
xor
mov
ret
add
add
stc
cltd
ds
flds
push
out
mov
inc
lds
sbb
or
add
inc
movsb
jle
pop
inc
fldt
cmpsl
mov
push
stc
mov
and
sub
cmc
lcall
cmpsl
push
xchg
pop
cltd
rcll
sub
out
pop
xor
pusha
jbe
mov
mov
cli
xor
add
xor
jmp
push
rolb
jp
out
sbb
adc
lds
push
cmpsl
ja
mov
or
pop
or
sub
and
nop
and
pop
loope
test
fsubrs
cmp
xor
fstps
loop
sbb
dec
cmp
ret
jno
xchg
pop
adc
sub
mov
int
xchg
fwait
xchg
mov
push
and
loopne
sbb
and
shlb
addr16
ss
ljmp
push
in
cmp
mov
mov
fcoml
or
popa
jnp
sbbl
or
adc
out
rclb
cld
or
push
jecxz
xchg
or
mov
movsb
scas
cmp
repnz
imul
leave
adcb
or
mov
fld
inc
rclb
sbb
jg
lret
loopne
iret
fs
ja
jnp
out
and
mov
adc
xchg
xchg
cltd
push
getsec
in
push
pop
popf
int3
mov
jb
adc
cwtl
push
pop
rcll
ret
into
xlat
shlb
cmc
jle
sbb
inc
mov
sti
les
mov
js
stc
hlt
xchg
sbb
sub
popa
add
test
add
mov
jmp
repz
lret
push
sbb
in
fisttpl
jb
stos
jno
adc
cld
out
hlt
fstl
dec
cld
dec
jo
add
data16
das
or
and
xor
pop
stos
add
sub
jb
jno
cs
mov
xor
jo
cmp
inc
mov
mov
push
jb
orb
push
xchg
sbb
icebp
adc
dec
std
inc
add
call
sub
sbb
push
mov
pusha
cmp
test
mov
ds
jecxz
mulb
inc
je
xor
into
test
nop
addb
or
push
shlb
adc
pop
add
jge
pop
out
pop
fimuls
add
les
xchg
inc
xchg
mov
xor
subl
push
push
adc
mov
movsb
stos
shll
cmp
aad
dec
inc
idiv
pushf
xor
mull
inc
lahf
mov
xor
jns
jmp
ret
out
jecxz
in
dec
fsubs
cld
cmc
iret
sahf
sahf
dec
into
pop
int
mov
add
frstor
xchg
ror
icebp
clc
daa
xor
out
lcall
add
mov
repz
stos
loopne
loop
sbb
mov
stos
aaa
cmp
popa
sub
stos
xchg
mov
push
jbe
test
jnp
stos
subl
jecxz
adc
int
sbb
or
repz
cmp
mov
xor
add
mov
ss
adc
rcl
ss
or
fldl
scas
daa
add
movsl
jle
loop
mov
mov
icebp
test
adc
add
xchg
mov
ljmp
xchg
inc
or
pop
and
sbb
aad
jno
mov
rep
or
xchg
leave
fstps
sub
scas
sub
mov
sub
shlb
repnz
push
sti
mov
dec
in
cmp
out
adc
cmp
mov
test
or
int3
jns
fmull
sbb
mov
imul
push
xor
push
sbb
out
cmpsl
sbb
adc
sub
sahf
leave
jns
cmp
and
pushf
ret
loopne
mov
dec
repz
ja
fstpt
fwait
dec
inc
xchg
negl
aad
aam
or
mov
xor
int3
push
cmpsl
ret
jns
popl
push
mov
sahf
shrl
add
mov
test
pop
or
fnstcw
or
xchg
das
adc
and
fistl
cwtl
sahf
mov
sbb
std
in
sbb
xchg
mov
and
adc
test
ja
lock
sub
arpl
and
fidivrl
in
mov
nop
dec
mov
push
rclb
inc
fucom
pop
outsb
xchg
lock
stos
dec
popa
xor
cmp
test
mov
xor
sbb
cli
cmpsl
xor
lock
pop
xchg
fistpl
in
in
roll
inc
mov
in
in
fcmovnu
fstpl
mov
loop
mov
adc
out
pushl
mov
movsb
inc
xchg
lods
sub
cmp
ja
loop
mov
arpl
mov
gs
mov
orb
pop
adc
xchg
lea
sbb
sbb
mov
outsb
insl
xchg
inc
mov
lock
inc
jae
ljmp
lret
jo
rcr
jo
sbb
arpl
hlt
into
add
or
iret
mov
sar
jg
sbb
inc
aas
inc
mov
in
fldt
adc
push
ficompl
mov
pop
sub
fstl
sub
mov
daa
add
mov
pop
cmp
pop
loope
into
inc
mov
xor
in
jge
jb
movsb
loopne
lock
andb
gs
xchg
test
repz
fcomp
movsl
lds
ror
rclb
pop
push
mov
leave
hlt
outsb
sbb
pop
dec
push
cmp
movsl
mov
ljmp
sub
fwait
pop
add
push
pop
sbb
movsb
cmp
xor
aad
mov
fcoml
inc
mov
out
inc
mov
sarb
stos
fidivs
test
scas
rcr
xor
mov
xchg
xor
int
and
nop
dec
cmc
js
pop
dec
les
adc
pop
in
das
aas
pop
leave
sub
ljmp
stos
pop
xchg
xchg
push
gs
iret
mov
in
stos
mov
icebp
cmp
mov
mov
dec
pop
dec
bound
xchg
imul
rorl
cld
nop
push
jmp
xchg
repnz
push
clc
mov
mov
jnp
adc
repnz
std
jbe
pop
sbb
pop
out
mov
dec
pusha
scas
jno
jns
dec
inc
jl
dec
push
mov
mov
repnz
or
stos
imul
xchg
xchg
inc
or
push
xchg
pop
pop
and
xchg
das
mov
sahf
gs
inc
xchg
dec
mov
jne
adc
sbb
dec
push
push
in
pop
dec
movq
add
mov
jg
lea
cs
repnz
sbb
jae
cld
xor
lret
mov
pop
sti
mov
xchg
mov
jmp
dec
movsb
cmp
cmp
enter
repz
test
mov
test
lods
or
adc
pop
push
inc
jo
cmpsl
pop
iret
or
sbb
inc
test
bound
fcompl
push
into
sbb
lods
sbb
fcoml
cmp
inc
mov
jae
into
int
ficoml
and
and
repz
ret
ljmp
fdivl
je
outsl
iret
add
cmp
movsb
mov
cmp
mull
fldcw
xor
mov
adc
lcall
dec
imul
cmp
test
mov
pop
aaa
lods
fldenv
aas
icebp
cmpsb
cwtl
paddsb
subb
add
and
in
in
jbe
xchg
out
dec
add
icebp
lds
pop
pop
outsl
sbb
cwtl
jecxz
scas
ja
insb
push
clc
jle
xorl
fidivrs
movsl
stos
rcll
shl
xor
mov
push
or
and
mov
pop
inc
neg
cli
mov
mov
mov
icebp
mov
push
cmc
jmp
cmpsb
sti
std
cld
pop
mov
mov
mov
or
movb
hlt
mov
add
cmp
jne
out
sbb
mov
mov
xchg
lret
lods
mov
in
jae
or
loope
adc
insb
cli
shlb
jae
cmp
adc
movsb
jg,pn
jnp
fists
xchg
and
rclb
mull
iret
pop
sub
sti
test
mov
movsl
mov
bound
aam
push
inc
cmp
int
add
mov
jns
mov
outsl
scas
lods
repnz
sarb
sbb
or
mov
adc
insb
jl
sub
insl
lea
mov
xlat
dec
push
xchg
test
mov
inc
mov
xor
mov
add
je
and
and
daa
movsb
push
pop
negb
in
mov
sub
lea
xchg
sub
cmp
push
dec
push
jmp
out
xchg
xchg
and
js
cmp
stos
enter
scas
pop
dec
jns
leave
sbb
adc
movsl
mov
aas
leave
xchg
mov
push
jo
jmp
rcll
jp
mov
into
xor
clc
add
repnz
mov
push
hlt
das
test
out
lret
push
leave
aad
dec
mov
pushf
or
outsb
add
sub
nop
inc
jge
cmp
xchg
sub
pop
or
das
repz
cmp
push
js
cmp
out
mov
pop
xchg
dec
xlat
xchg
outsl
cwtl
adc
add
adc
gs
push
jo
test
data16
or
ret
cmp
push
sarl
adc
adc
xchg
data16
test
divl
push
in
fldt
inc
adc
sahf
sarl
mov
and
xchg
scas
sub
jno
repz
iret
mov
push
xorb
jb
pop
imul
push
jno
sub
aaa
cwtl
mov
jg
inc
xlat
in
push
xor
mov
jg
daa
insb
mov
or
xchg
push
or
mov
ffree
adc
andb
adc
lock
pop
mov
xchg
ret
les
out
andb
leave
mov
ljmp
dec
repz
push
xchg
loopne
addl
test
adc
push
icebp
test
int
movsl
pop
push
aaa
icebp
push
pop
push
cld
push
inc
mov
insl
in
lcall
imul
fwait
jb
andb
rcrl
fdivrp
mov
add
ss
add
jl
pf2iw
jns
outsl
daa
sub
jmp
lret
inc
inc
push
or
mov
cwtl
add
inc
repz
pop
inc
mov
sbb
lock
cli
push
adcl
push
pop
inc
movsl
and
rcl
sbb
add
sbb
cmp
fcmove
xor
cmp
jge
test
lds
fisttpll
mov
imul
jg
pop
sbb
inc
rcl
call
negl
cmp
popf
jns
scas
mov
mov
mov
sbb
sahf
xor
dec
xor
call
mov
or
stos
jo
stc
fmull
mov
fdivs
ljmp
leave
cmc
fldcw
push
repnz
les
sub
jecxz
mov
subl
test
inc
jmp
bound
cmp
cs
xchg
xchg
pop
iret
add
sbb
add
js
sbb
inc
aaa
into
or
adc
cltd
push
xor
jb
pop
test
jg
lea
push
inc
and
jns
xchg
inc
lods
icebp
adc
cld
push
iret
lcall
adc
out
jae
je
stc
test
loop
jns
mov
jmp
cmpsb
sbb
jnp
jp
aaa
lcall
pusha
push
sub
out
add
sub
sarb
lds
js
push
enter
or
cmpsb
dec
adc
stos
xchg
rcll
in
mov
outsl
mov
sti
aad
shrl
nop
movsb
out
dec
cmc
mov
loop
test
sub
out
stos
add
adc
loope
scas
mov
popf
mov
lods
outsl
cmp
inc
pop
test
add
adc
push
pop
add
jbe
jbe
mov
xor
sub
test
lods
clts
ss
mov
int
clc
mov
fnstenv
cltd
dec
loop
xor
jno
in
leave
mov
sub
xlat
ror
sahf
aas
inc
es
sub
fdivrl
inc
lea
out
test
add
xlat
xchg
cli
mov
mov
inc
fidivl
inc
cmpsb
mov
mov
or
cli
sub
bound
adc
lods
cmp
mov
xor
inc
cli
mov
cltd
pushf
jb
out
or
adc
mov
inc
aam
mov
sub
pop
mov
lret
cmp
out
mov
sbb
into
inc
xchg
jecxz
xchg
dec
jg
std
mov
in
push
push
cltd
add
filds
icebp
sbb
push
jb
dec
push
addl
jp
dec
sti
ret
in
ret
insb
fmuls
cmpsl
xor
int
rorl
aas
in
ds
mov
push
jge
movzbl
out
xchg
stos
shll
dec
dec
xchg
cmpsl
lahf
inc
aaa
out
out
ja
stc
or
dec
pop
ja
movsb
sbb
push
fisubl
aam
hlt
loopne
ror
roll
imulb
scas
daa
adc
jl
iret
iret
sub
cli
fimuls
push
mov
pop
loopne
mov
sub
jg
shl
mov
ja
lcall
rcr
out
js
add
and
xor
mov
xchg
push
cmp
push
xchg
dec
repz
mov
dec
insb
divb
mov
xor
sbb
data16
push
in
mov
dec
jbe
inc
insb
or
nop
jg
loopne
jne
outsl
mov
sbb
mov
mov
jno
pop
negb
jne
dec
or
adcb
push
sbb
xchg
into
mov
add
cs
inc
cmpsb
cli
push
dec
stc
andl
rcll
jg
sub
in
and
popa
sbb
mov
lcall
shl
pop
mov
loop
jp
fidivl
cli
cmpsb
frstor
les
dec
jb
sub
dec
fcmovu
xor
sub
leave
pop
add
inc
in
add
punpcklwd
vxorpd
pop
sti
mov
ja
adc
xchg
cmp
adc
lret
add
lods
jo
mov
data16
jmp
xor
das
fwait
xchg
mov
cmp
lret
sub
test
sub
dec
mov
divb
notb
aam
cmp
ret
mov
ret
cmp
xor
repnz
movsl
and
cmp
fidivs
dec
iret
jecxz
ja
and
jl
lods
add
adc
xor
pop
cmpl
cltd
shrl
pop
cmpsl
scas
xchg
cmc
cld
inc
xchg
jecxz
mov
lcall
sub
icebp
sahf
sbbl
xchg
mov
push
aam
pop
es
add
xlat
or
imul
xchg
or
pop
loopne
jp
mov
aam
mov
jbe
out
push
dec
stos
inc
popf
push
notl
icebp
jne
fists
pop
in
fs
dec
xchg
fs
mov
out
insl
shlb
xchg
mov
sub
push
mov
cwtl
mov
pop
mov
xor
sub
adc
orb
addr16
scas
or
fwait
jecxz
push
lds
push
rclb
mov
pusha
sub
loopne
loope
les
in
outsl
stc
cmp
cs
hlt
stc
sub
mov
mov
dec
lods
popa
mov
dec
adcb
mov
mov
sub
inc
fs
add
and
jb
mov
js
cltd
into
cwtl
aam
adc
cmp
or
add
pop
xor
inc
and
outsb
cmp
out
mov
sti
in
andb
loopne
imul
imul
sub
push
out
or
or
add
arpl
mov
data16
nop
rcl
scas
orps
stc
pushf
cmp
addr16
sub
insl
pop
lods
subb
loope
xchg
shlb
push
inc
mov
jo
aas
ja
sub
sub
stc
jecxz
xor
sub
jo
mov
je
inc
loopne
pop
push
dec
loope
lods
scas
repz
inc
shl
xor
inc
imul
mov
std
sub
shll
nop
pop
jp
or
iret
dec
mov
mov
push
pusha
mov
lahf
shr
test
ret
and
or
int
pop
sbb
add
dec
mov
adc
mov
push
jnp
sbb
rorb
cwtl
clc
dec
or
out
mov
mov
ljmp
je
xchg
xchg
jg
idivl
movsb
pushf
push
hlt
decb
test
dec
push
or
ja
jnp
inc
pushf
xchg
xchg
lea
xor
into
mov
sub
push
popf
add
pop
jecxz
mov
fsubl
xchg
or
insb
test
sub
add
lods
dec
push
cmp
es
in
enter
repnz
push
addb
mov
insl
hlt
or
add
add
inc
daa
out
mov
jge
pop
out
sbb
dec
add
sbb
sub
pop
ss
xchg
out
aad
mov
movd
adc
and
xor
mov
inc
pop
fs
xor
mov
aaa
shll
xchg
jns
mov
lahf
pushf
les
push
pop
add
xchg
adc
clc
xor
imul
std
stos
xchg
iret
push
daa
xchg
lea
cmp
lahf
jmp
xchg
test
xchg
enter
jecxz
loop
aaa
cli
into
mov
pop
cltd
bound
fwait
add
cmp
or
clc
jp
push
pop
ds
mov
in
nop
outsb
out
dec
dec
inc
in
cmp
xchg
hlt
lcall
lcall
sub
mov
loope
add
adc
pop
jge
push
lret
cmp
cltd
inc
ss
clc
dec
cmc
mov
lret
lahf
pusha
sahf
mov
mov
pop
lds
xor
push
sbb
rorl
std
mov
into
mov
icebp
pop
xorps
aad
cmp
cmp
inc
fwait
je
cmp
pop
in
sub
mov
lcall
push
sub
sbb
mov
ret
mov
jecxz
xchg
xchg
adc
jg
mov
sub
rorb
imul
lods
pop
mov
cmc
mov
je
pop
mov
cmp
dec
hlt
out
xchg
insl
jle
push
push
sbb
or
cltd
mov
mov
xchg
movsb
mov
pop
movsb
pop
das
push
pop
or
jecxz
or
adc
lahf
adc
sub
cs
cmpsl
adc
jnp
test
cmp
jge
test
std
movsl
sti
jle
ds
mov
dec
adc
cmpsl
cld
int
push
mov
fldt
xorb
and
pop
mov
shr
in
and
cwtl
icebp
dec
adc
sbb
jb
or
stos
loopne
lret
subl
ja
push
lret
sub
inc
and
lock
shr
ret
js
sub
or
inc
push
imul
fucomp
and
rcl
xorl
adc
stc
daa
ja
fs
jnp
cltd
pop
cmc
sarl
out
addr16
mov
pop
pop
xchg
movsl
sub
jbe
adc
std
add
add
fmuls
pop
push
pop
testl
inc
mov
mov
fdivs
out
call
jo
jge
out
fbstp
jb
fidivrl
notl
xchg
jl
test
cmc
add
xchg
out
cmp
cli
orl
dec
inc
xchg
mov
lods
pop
sarl
push
cwtl
cmpb
cmc
mov
aam
adc
sbbl
sbb
sbb
out
push
lret
mov
fimuls
imul
mov
lods
dec
or
clc
or
mov
inc
push
push
mov
adc
ss
test
js
mov
iret
jle
outsl
cmc
jno
push
faddl
xor
sub
adc
bound
pop
mov
jecxz
push
push
pop
int3
xor
inc
jo
test
ljmp
aaa
xor
popl
adc
sub
ficompl
xchg
cmp
xor
xchg
fcoml
aas
add
push
loop
dec
dec
fldt
outsl
sub
popf
jb
pop
test
movsl
pop
lock
inc
jns
mov
add
mov
iret
les
jl
fnstsw
or
test
sub
test
xchg
rcll
out
repz
fmull
push
sbb
das
imul
adc
push
xor
xchg
fwait
movsb
jns
or
pop
dec
pop
add
xchg
jp
and
das
movb
fwait
adc
or
cltd
es
or
adc
cmp
cmp
call
lcall
lods
mov
and
adc
in
mov
pop
dec
mov
insb
cld
sbbl
mov
mov
cld
rcrl
cmp
cli
inc
mov
in
popf
in
push
and
lock
jbe
and
push
and
js
fcmovb
push
adc
cmc
outsl
cmp
ret
mov
and
pop
sub
movl
add
dec
fisubs
sbb
mov
sbb
ss
cli
mov
pop
ds
mov
popa
mov
jl
xchg
pop
mov
xchg
leave
daa
mov
out
sbb
mov
push
mov
mov
sbb
std
sbb
jne
or
sub
mov
cmpsb
cltd
fwait
mov
pusha
jno
test
pushf
sbb
repz
test
xchg
cmp
stos
xchg
cmp
push
outsb
andl
mov
xor
push
and
scas
clc
xor
pop
icebp
shr
dec
add
icebp
dec
pop
frstor
xchg
inc
in
jp
and
cs
lods
popf
es
and
cs
ljmp
inc
fsubl
leave
mov
in
sbb
fs
sub
push
pop
pop
mov
les
test
cld
mov
call
sahf
cmpsl
jge
add
out
shrb
repz
push
jne
add
cld
std
add
imul
inc
inc
pop
mull
shr
mov
pop
lahf
xchg
mov
cltd
xor
xchg
clc
push
push
jp
lea
pop
imul
ljmp
nop
xor
pop
xchg
sarb
mov
ja
dec
ds
ret
and
sbb
xchg
shll
bnd
scas
push
and
dec
or
popf
scas
in
movsl
xchg
shl
fs
dec
sub
cmpsl
mov
push
inc
adc
mov
movb
push
fcmove
xchg
cld
test
imul
fildll
mov
mov
pusha
fldt
push
and
mov
xlat
sbb
dec
xchg
hlt
push
cmp
add
adc
jnp
ljmp
sti
jle
fnsave
jae
sbb
sbb
in
jecxz
sahf
add
fimull
add
or
sbb
mov
out
int3
or
std
push
dec
cltd
sub
mov
jle
stos
jb
rclb
jl
jmp
pop
mov
aam
dec
pop
cli
and
ss
xor
lods
ret
or
mov
pop
cmp
and
fs
dec
es
syscall
cmp
cmpsb
fildll
push
pop
test
add
jecxz
sbb
adc
mov
ficoms
ljmp
push
jmp
mov
ja
ret
ss
out
cwtl
subl
mull
dec
repnz
cmpb
jp
push
dec
out
cmp
scas
cmc
adc
neg
xchg
sbb
jb
cmpsl
pop
mov
stc
push
mov
mov
clc
xor
ss
adc
dec
sti
add
cltd
sbb
int
push
sbbl
in
movb
and
mov
out
idivb
jo
popa
ds
mov
int
jo
sub
loop
je
add
dec
dec
dec
xchg
pop
cmp
mov
sub
test
into
jp
imul
xchg
test
xchg
sbb
in
sbbb
xchg
sarl
jae
ja
dec
loope
mov
jns
pop
repz
jmp
sbb
roll
add
into
sub
push
or
imulb
cmpsb
pop
cmp
xlat
push
mov
sub
sbb
idivb
dec
sahf
sub
xchg
mov
or
lcall
and
jns
mov
ret
and
cmp
jl
div
shrb
dec
call
inc
jne
cld
pop
mov
test
mov
and
fcoml
int3
lods
mov
sbb
pop
xor
lods
in
mov
imul
sbbb
and
insl
xor
mov
mov
sahf
mov
xor
test
add
mov
aad
pop
lock
and
fstpl
ret
inc
adc
fidivs
shll
or
test
js
mov
sbb
dec
in
aad
adc
add
xor
psllq
popf
loope
push
dec
mov
xchg
into
inc
fwait
jo
mov
out
jg
sub
push
cld
outsl
push
shrb
mov
mov
les
jg
jle
or
push
popa
fcoms
jbe
scas
jp
or
lods
mov
push
inc
repz
scas
sub
iret
ds
adc
js
mov
pop
out
dec
cmp
cs
push
xor
fs
dec
cmp
jl
adc
mov
loopne
push
mov
mov
jge
mov
inc
into
push
mov
jnp
pop
inc
xor
leave
mov
jle
fiaddl
xlat
or
cs
push
xor
in
xor
sub
ja
xor
aam
rcr
cltd
pop
pop
inc
and
call
pop
mov
or
mov
outsb
aam
lea
inc
push
cs
rorb
jo
and
and
cmp
filds
fs
adc
mov
pop
insb
add
clc
sbb
mov
stc
mov
cli
es
ds
inc
adc
mov
jne
int
ret
jecxz
lcall
push
loope
mov
mov
or
fadds
jae
sbb
inc
fwait
push
pop
icebp
rcrb
mov
dec
dec
jb
cmp
imul
dec
clc
out
mov
sar
arpl
lock
daa
in
mov
dec
or
aas
mov
js
jae
aaa
mov
sub
fmulp
pop
movsl
jg
stc
sbb
pop
lds
push
sahf
pop
pop
test
jnp
shrb
jmp
adc
sub
mov
jecxz
int3
and
mov
iret
xor
inc
js
mov
arpl
pop
cmpsl
xor
stos
inc
mov
fistps
cmp
leave
decl
loopne
int
push
pop
mov
push
shll
pop
pushf
loope
pop
lds
stos
loopne
adc
fsubrl
add
dec
mov
xchg
jo
sub
ret
test
insl
sub
loop
xor
inc
test
std
sbb
inc
xlat
and
lcall
dec
scas
insb
out
outsl
push
cld
mov
push
in
pop
pop
mov
nop
push
or
adc
les
sub
test
mov
sbb
ja
push
and
jo
mov
pmuludq
fldl
enter
fwait
cmp
mov
mov
jle
rolb
pop
sarb
adc
adc
push
cmp
inc
out
repnz
aam
and
cmpl
les
cwtl
push
hlt
adc
push
pop
jmp
cmpb
lahf
out
lods
sbb
xor
push
aaa
movsl
int
jl
mov
les
sti
fsubrs
popa
inc
mov
and
jp
ds
xchg
loopne
int3
push
aaa
mov
jmp
jne
lahf
pushf
add
shll
bound
and
lahf
sar
cwtl
mov
inc
push
dec
cltd
jne
and
add
sbb
loope
fsubrs
xchg
mov
loop
lock
push
cli
and
xor
jno
das
rclb
add
fimuls
lods
insl
scas
push
mov
lods
cli
push
js
sbb
leave
cmp
arpl
push
cwtl
sbb
xchg
mov
inc
aad
xchg
mov
dec
or
sub
call
repz
mov
or
aad
add
or
xor
loope
mov
cli
out
jnp
lea
mov
pushf
or
mov
bound
xor
loop
lret
out
mov
or
cld
jno
in
add
xor
fstpl
push
mov
push
addr16
loop
loop
dec
xor
jecxz
cmp
xchg
and
dec
loop
pop
pop
push
notb
movsl
xchg
and
shr
dec
push
in
cs
leave
aaa
pusha
inc
jg
mov
xchg
push
clc
insl
aad
cmpsb
ror
mov
mov
sbb
imul
mov
cltd
in
inc
lcall
out
mov
out
cltd
sbb
arpl
pushf
jg
inc
push
xor
out
cwtl
lret
shld
enter
aad
out
inc
leave
jmp
or
and
mov
iret
rcrl
xlat
leave
xchg
in
xchg
push
lret
xchg
jns
mov
dec
divb
cs
shlb
mov
loopne
mov
ret
lea
xor
inc
sbb
xor
cwtl
cltd
sub
jl
ljmp
movsl
jge
cmp
mov
inc
sti
adc
jle
or
dec
xchg
cmp
in
fistpll
dec
sub
ds
arpl
mov
ljmp
xchg
int
fcmovu
jo
pop
es
jno
and
iret
and
test
jge
adc
cmpsb
test
pop
mov
int
push
sub
cltd
out
jmp
les
bound
push
mov
loope,pn
xchg
pop
inc
pop
fwait
push
ret
pop
jecxz
xchg
cmp
sbb
xor
inc
stos
cmpsb
push
jge
inc
cmpsl
cmp
clc
sub
xchg
pop
inc
xabort
adc
les
cmp
add
in
lahf
inc
pop
or
movsl
sub
push
rol
shll
dec
lds
arpl
xchg
popa
mov
js
inc
sub
in
dec
shlb
add
jbe
stos
aaa
dec
and
and
lea
ja
popf
jg
jecxz
or
adc
jg
in
adc
jb
mov
add
push
push
cmpsb
add
sbbb
roll
out
add
sbbl
hlt
dec
daa
pop
jno
mov
inc
loop
lahf
xchg
inc
loopne
cmp
fwait
add
out
dec
pop
in
jbe
or
add
shlb
mov
dec
pop
nop
xor
mov
lcall
frstor
lea
and
jnp
push
iret
jne
dec
rcr
ja
arpl
pop
cmc
dec
mov
daa
sahf
sub
mov
xchg
xor
inc
lahf
fistl
mov
push
mov
out
popa
cmp
addr16
and
popa
dec
pop
sub
xchg
push
pop
adc
pushf
jae
mov
dec
mov
lea
dec
sbb
jg
adcl
outsb
push
adc
cmp
cmp
into
pop
adc
inc
roll
cwtl
add
aad
shl
pushf
insl
sbb
ret
and
sahf
ss
and
pop
loope
fiaddl
sahf
push
es
mov
sub
scas
mov
or
inc
pop
sbb
lock
jbe
cmp
cs
mov
sub
cs
mov
adc
adc
out
cs
mov
movsb
push
ljmp
pop
push
hlt
ja
ss
ret
inc
and
ljmp
fwait
inc
and
js
pop
or
add
lcall
pop
stos
push
ss
int3
inc
adc
std
std
ljmp
lds
jmp
xor
inc
cli
jmpw
xor
addr16
add
bound
sbb
lds
popa
sbb
lret
xchg
add
es
push
leave
adc
imul
stos
fnstcw
xor
lret
push
popf
popa
or
push
je
popa
adc
pop
push
mov
and
sbb
xchg
ret
std
mov
mov
sbb
inc
push
jbe
leave
push
xlat
jbe
andb
test
clc
cwtl
movsl
cs
and
pop
clc
sub
mov
mov
clc
iret
adc
fdiv
scas
aaa
mov
push
add
cmp
mov
pop
ficomps
sbb
aam
cmp
jns
test
cmpsl
or
add
icebp
and
sbb
ljmp
jl
xchg
and
lea
es
dec
fcomip
push
ss
repnz
adc
inc
fs
pop
daa
xchg
inc
xchg
jae
rcrb
dec
test
pop
adc
ds
inc
fdiv
sub
sub
mov
adc
mov
push
inc
push
addl
sbb
mov
inc
popa
cmp
push
in
das
pusha
mov
pushf
das
int3
fsts
daa
push
movsb
jg
xchg
adc
mov
ds
js
sar
pusha
xchg
outsb
in
cmc
arpl
push
jecxz,pt
loope
sahf
add
pop
mov
mov
mov
bound
inc
cmpsb
adc
cld
or
and
call
adc
les
sbb
mov
enter
or
into
sub
xchg
jecxz
movsb
and
aad
xor
push
mov
mov
fsubrs
jle
lea
fxam
add
push
cmp
mov
mov
ret
mov
mov
mov
fmulp
dec
out
jne
cwtl
push
cmp
cmp
pop
mov
dec
sbb
inc
jns
xchg
jp
xchg
mov
mov
fildl
mov
outsl
pushf
icebp
add
popa
outsb
scas
push
hlt
xchg
jne
fisubrl
mov
sbb
sub
jp
das
adcl
negl
out
push
xchg
out
mov
push
repz
pop
std
es
jecxz
sbb
jl
pop
inc
lret
loope
aaa
outsl
mov
xor
ret
jbe
xor
dec
xchg
push
int
ds
sbb
out
pop
cmc
cmp
pop
xorl
sbb
sub
cld
dec
jle
fcmovne
pop
imul
xchg
pop
ljmp
push
inc
pop
sbbl
push
jp
xlat
mov
push
lods
scas
pop
pushf
cmpsl
in
repz
dec
and
outsb
into
repz
mov
push
dec
lret
ret
scas
xchg
sbb
dec
jle
out
test
arpl
loop
xor
popf
xorl
hlt
xor
xor
es
enter
cmp
lret
mov
adc
mov
aaa
sbb
nop
jl
dec
jnp
cli
stos
mov
out
pop
rcll
mov
insb
repnz
sbb
repz
or
inc
pop
imul
mov
jne
mov
mov
inc
inc
mov
int
dec
pop
cs
inc
mov
cmp
loopne
cli
mov
rolb
inc
nop
inc
mov
sbb
adc
inc
test
adc
gs
popa
in
movsb
leave
or
add
repnz
mov
rcrb
enter
sbb
fnsave
ret
and
aam
daa
daa
mov
sbb
mov
stos
ret
add
scas
mov
outsl
sub
sbb
push
popl
push
gs
mov
cmp
jae
sub
stos
ljmp
out
jo
jmp
xchg
inc
mov
loope
sbb
inc
mov
jl
and
rclb
stos
fldt
dec
scas
and
or
pop
leave
inc
ficompl
and
cli
push
mov
push
jp
iret
mov
or
jbe
add
inc
ret
lret
outsb
add
mov
cmp
jnp
pop
mov
jnp
mov
xchg
push
xor
mov
add
in
xchg
cld
cwtl
sbb
adc
daa
jo
imul
inc
or
push
jecxz
movsb
push
pop
lahf
scas
outsl
mov
enter
mov
sbb
outsb
je
jae
cs
mov
mov
jl
inc
test
iret
add
fsubrs
mov
int
movsl
imul
loope
push
jmp
xchg
aaa
dec
pop
icebp
or
or
in
idivb
stos
out
mov
jl
pop
mov
fldl
cmp
popa
testb
cltd
scas
rcll
hlt
scas
int3
push
jle
popa
xchg
inc
in
sub
sub
or
or
fadds
jns
subl
mov
cmc
sub
imul
int
mov
push
int3
jmp
inc
sbb
jle
sub
sbbb
test
jae
dec
std
gs
dec
jecxz
cmpsb
es
ret
decl
dec
xchg
ss
ss
pop
fsub
imul
mov
scas
stos
out
mov
mov
movsl
and
add
mov
mov
fsubrl
xor
mov
mov
lcall
lods
rclb
pop
push
mov
imul
popf
cltd
push
roll
xor
push
sti
pop
push
pause
scas
jae
imul
stc
scas
sti
fdivrp
jnp
jp
cmp
mov
jg
push
mov
cld
xor
test
mov
push
dec
jnp
lock
dec
jecxz
mov
mov
xchg
pop
mov
push
mov
into
aaa
mov
sbb
pop
inc
sub
sbb
jle
mov
scas
dec
sub
repnz
fsubs
sbb
add
fwait
dec
pop
imul
jg
push
push
pop
ret
es
mov
stos
loop
pop
lods
push
leave
adcl
xchg
pop
rorl
mov
nop
scas
dec
test
test
push
jo
xchg
sub
scas
mov
sbb
pop
mov
aas
dec
cli
lock
leave
cltd
sbb
testl
rclb
sub
fsubr
lods
shlb
push
fists
sub
jecxz
popf
cmpb
iret
mov
and
data16
add
xchg
stos
shlb
and
mov
fists
xor
test
xlat
pop
negb
lcall
and
cmpsb
and
mov
sub
mov
mov
inc
xor
sbb
ret
scas
es
cmp
mov
and
inc
movl
orb
jle
out
leave
push
inc
dec
loopne
dec
inc
mov
aad
dec
xor
cli
and
add
push
mov
out
push
idivb
push
sub
jns
xchg
mov
int3
loope
xchg
into
adc
jns
dec
test
push
stc
and
sub
and
push
into
adc
dec
call
imulb
xchg
fsubp
fistpll
xlat
dec
dec
cli
lods
mov
test
mov
shlb
std
push
jp
jbe
ret
into
loop
inc
pushf
adc
mov
jl
mov
push
lods
mov
dec
rcrl
clc
add
mov
cwtl
daa
cmp
andl
cmp
or
add
mov
push
mov
repz
jo
add
pop
lret
sub
in
sub
jp
pop
sub
push
dec
mov
add
imul
push
call
das
add
dec
fisubrl
mov
mov
aas
push
pop
push
push
mov
lcall
fdiv
lcall
enter
arpl
pop
and
push
mov
movsb
repz
xlat
in
adc
jne
cmp
daa
xchg
js
sub
push
add
jns
pusha
sbb
push
mov
lret
in
sub
cli
mov
pop
insb
add
in
jge
xor
sub
mov
mov
xor
stos
xor
cwtl
sbb
scas
sbbb
sub
pop
test
pop
xchg
pop
push
add
mov
fwait
mov
scas
mov
jns
adc
test
sub
pop
outsb
xor
push
sbb
mov
jmp
and
hlt
in
fiaddl
adc
stc
dec
in
pushf
cli
arpl
jmp
in
ja
mov
leave
sub
lods
cmpsb
jmp
add
xchg
xor
cli
fists
frstor
inc
adc
push
fnstcw
fdivp
fsubrs
aam
in
pop
xor
ror
inc
sbb
xor
lret
notl
jp
push
inc
xor
in
push
pop
cmp
and
cs
adc
les
mov
xor
rclb
repz
and
sbb
mov
loop
mov
pop
shrl
mov
ret
or
xchg
int3
mov
js
push
inc
cmpsb
xchg
xor
nop
enter
out
dec
ja
stc
mov
jle
jge
push
pop
pop
sub
cmp
lret
dec
lret
jbe
inc
pop
popl
imul
mov
adcb
int3
call
or
scas
mov
je
inc
in
add
sub
add
inc
mov
adc
hlt
lea
or
repnz
mov
dec
xchg
fwait
push
dec
inc
in
scas
or
xorb
cs
inc
decb
icebp
xchg
and
fidivl
mov
pslld
and
rcll
enter
shrb
test
and
test
loop
pop
ds
sbb
je
pop
std
adc
addr16
mov
les
mov
sub
cs
lcall
pop
dec
sbb
scas
sbb
jae
test
dec
xor
sbb
sbb
or
stos
mov
stos
or
bound
sub
push
dec
es
cmp
pop
pop
or
add
push
jne
xchg
test
outsb
out
and
mov
sub
sbb
add
xchg
in
mov
cwtl
and
and
lcall
test
xchg
test
subb
cmp
push
push
loop
leave
shlb
mov
fcomip
iret
xchg
cmp
test
or
nop
mov
mov
inc
pop
incl
out
sbb
stos
jb
jle
push
incl
inc
pusha
xchg
adc
ret
jmp
call
lret
loope
or
mov
cmp
and
ljmp
pop
sub
es
push
push
pusha
int
popa
cmpsb
mov
sub
pushf
test
push
push
mov
cmpsl
inc
test
jle
lcall
pop
popf
paddq
lods
mov
jmp
mov
xor
xchg
sbb
out
aam
les
test
sarl
aaa
add
fldcw
psubusb
lahf
cld
mov
nop
mov
addr16
inc
negb
test
push
pop
shll
addl
mov
cmp
test
rcl
popa
pop
sub
lods
jl
out
sbb
fisttps
add
inc
repnz
xor
add
daa
push
sub
mov
aaa
es
loop
jno
cld
and
aam
ja
in
pop
adc
inc
shlb
fcoml
xor
repz
jns
out
popf
push
enter
mov
mov
push
inc
mov
popa
add
or
add
scas
iret
pop
subl
stos
insl
push
push
pusha
jnp
out
adc
push
fsts
or
fidivs
mov
or
pop
jae
pop
loopne
mov
shlb
lods
cmp
scas
rorb
mov
shl
sub
repz
stc
xor
js
xchg
inc
jecxz
add
lcall
das
out
xchg
or
rclb
fadd
add
and
lcall
inc
and
cmp
dec
ret
sub
test
xor
cmpsl
xchg
daa
and
je
xorb
fwait
mov
jae
xchg
mov
aaa
lea
lret
aam
test
add
mov
jmp
in
out
xchg
outsl
jge
push
sub
cmc
arpl
push
in
push
data16
sbb
jmp
and
stos
adc
xchg
pushf
aad
adcl
inc
icebp
cmp
sbb
addr16
in
int
mov
fsubrl
mov
sub
sarl
notrack
popf
pusha
jae
dec
mov
ds
mul
cmpsl
xchg
aas
test
pushf
mov
xchg
bound
mov
hlt
cmp
js
jns
lret
das
fwait
pop
xchg
mov
dec
push
ret
cmp
xor
arpl
or
push
loope
cmp
cmp
add
test
xchg
pop
mov
loop
shrl
test
lret
fdivr
xlat
mov
outsl
sarb
mov
out
cmc
mov
xchg
xchg
mov
mov
data16
test
dec
cmp
nop
pop
mov
xor
sbb
loopne
test
out
je
mov
add
cmpsl
pop
fdivrl
int3
sbb
mov
cld
sbb
push
mov
mov
fistl
fdivl
lea
add
je
dec
nop
mov
lock
sub
inc
jecxz
leave
lds
lcall
ret
add
mov
aas
aam
cmp
rclb
jle
xlat
add
les
icebp
fsubs
jl
loopne
movsb
push
mov
lods
stos
adc
xor
in
inc
mov
push
mov
xchg
lea
mov
sub
cmp
or
icebp
js
movsb
dec
mov
inc
lea
or
xchg
sbb
lcall
jp
and
adc
pop
inc
lret
cmp
mov
stos
ror
sbb
add
or
cld
imul
imul
sub
ret
lods
mov
popa
stc
dec
xor
sahf
mov
push
xchg
loopne
push
jo
mov
sbb
add
test
ljmp
popf
mov
mov
xchg
jle
jle
into
jne
test
push
push
pop
cmpsb
std
jbe
ds
jo
mov
or
stos
xchg
mov
sbb
mov
les
and
ss
adc
test
xchg
jnp
das
js
adc
fdivp
push
bound
cmp
add
inc
icebp
pop
fiadds
clc
lods
push
cmpb
or
cmp
mov
pop
jbe
mov
or
mov
push
adc
xor
mov
sbb
clc
mov
xchg
sbb
jmp
mov
xor
aas
imul
pushw
or
repz
loope
cmp
sti
push
subb
jo
sub
xchg
jns
mov
ja
push
lds
jo
nop
sbb
dec
lock
pop
lds
push
jns
aaa
sbb
adc
and
movsb
sbb
sub
push
mov
cli
push
xchg
lods
stos
or
and
and
pop
dec
pushf
jmp
xchg
test
test
pushf
push
in
push
and
xchg
call
mov
jmp
xchg
and
xchg
lret
jmp
mov
sbb
xchg
jne
pop
das
aad
cwtl
fs
imul
pop
cmpb
out
jo
je
pop
cltd
cli
mov
in
into
loopne
jb
sahf
inc
push
pop
jne
in
push
std
out
aaa
mov
jle
pop
fcoml
cmpl
mov
ficoml
fwait
outsl
int3
xchg
xor
clc
pop
jl
xchg
pop
imul
xor
hlt
xor
push
fwait
cs
mov
xchg
add
das
mov
mov
jmp
xchg
test
sti
test
iret
dec
xchg
jnp
pusha
push
lods
jecxz
add
mov
mov
mov
adcb
cmc
std
inc
mov
jnp
movb
fisubrl
iret
rcrl
andb
push
test
lret
push
push
fucomi
inc
fmuls
nop
mov
outsb
dec
aaa
xor
and
cs
xchg
fsts
rclb
inc
xor
inc
push
popa
dec
shrb
movsl
jo
les
dec
shr
or
repnz
cli
mov
and
std
enter
push
adc
ss
out
lock
aam
ja
cld
add
mov
fcomp
ret
xor
or
pop
push
adc
mov
enter
ret
pop
pop
cli
cmp
in
fmull
out
aaa
cmp
add
test
cmp
loop
lret
or
in
and
popf
xchg
ror
movsl
push
or
cmc
dec
pop
mov
lds
xchg
inc
push
jecxz
push
pop
ret
mov
push
cld
xor
mov
cmp
daa
lea
xor
cmc
jno
cmp
std
test
inc
jns
int
cmp
jmp
jb
sbb
cltd
das
pop
push
aas
ljmp
bnd
jnp
nop
sbb
sub
pop
xchg
sub
sarl
movsl
negl
sub
mov
and
dec
inc
cltd
daa
outsl
mov
jb
xchg
test
mov
jp
and
cld
mov
lea
add
pop
pop
sbb
adc
inc
mov
aas
nop
xchg
mov
cmp
arpl
fwait
imulb
dec
dec
enter
cmpsl
xor
mov
push
mov
sarb
fcoml
mov
mov
shll
adc
sbb
popf
imul
inc
pop
es
pusha
hlt
push
xchg
pop
scas
inc
jg
jae
scas
dec
mov
test
sbb
mov
fs
push
neg
ja
or
sbb
lea
push
lods
jmp
mov
pop
sbb
lea
pop
jmp
sub
mov
or
in
loop
insl
pushf
sub
xor
mov
mov
or
mov
cli
daa
imul
dec
sub
mov
mov
int
js
cmp
ds
gs
iret
add
push
lret
sub
add
inc
in
leave
sub
andb
or
out
enter
ja
mov
pop
mov
lret
mov
add
mov
jp
jmp
sti
jnp
loop
xchg
lock
dec
ja
ror
ja
rcrb
xor
xor
adc
mov
rorb
in
stc
push
jnp
inc
and
lods
out
out
insb
gs
xor
lock
lods
pop
mov
jnp,pt
test
xor
outsl
pop
push
and
call
jo
lds
mov
push
pop
push
push
add
add
movl
and
movsl
xchg
into
or
jns
jmp
mov
rcl
sub
mov
jl
setbe
xchg
adc
and
sar
je
loop
jecxz
aas
mov
sbb
imul
and
add
mov
cmp
push
cmp
mov
out
pop
pop
mov
sbbb
mov
lret
or
add
into
inc
icebp
std
repz
xchg
insl
sub
mov
movsl
dec
push
push
je
std
shl
mov
push
fimuls
cmp
and
inc
sbb
cltd
mov
jecxz
jns
lahf
cltd
in
js
inc
xor
adc
push
adc
int
and
out
gs
outsl
stc
mov
icebp
je
add
add
cmp
movsl
out
test
add
jg
scas
cs
push
in
mov
jle
pop
jo
cmp
mov
leave
faddp
push
xchg
je
in
testb
xor
cli
rcll
push
sub
pusha
dec
and
lds
lahf
mov
cmc
popf
mov
fadds
fwait
imul
out
lahf
outsl
push
pop
insl
xchg
mov
jg
jo
mov
fsubrp
outsb
cmp
je
push
pop
xchg
faddl
sbb
inc
aaa
jne
into
xor
scas
jns
ret
lcall
pop
lds
int3
mov
mov
cmp
ja
pop
push
ss
push
jo
or
jp
jno
aaa
jl
mov
enter
xor
and
add
in
mov
pusha
mov
sbb
sbb
inc
xor
subl
sub
cmp
jp
les
mov
mov
pop
bound
and
bound
into
and
aam
jb
or
jg
scas
ret
lcall
push
and
sub
sti
std
std
rolb
cltd
pushf
mov
dec
or
in
mov
jge
aaa
mov
mov
mov
sti
mov
cmc
adc
add
add
loop
cmp
or
xchg
sub
xchg
jo
pop
push
jg
cmpsb
test
dec
clc
inc
adc
cld
mov
aas
xor
sbb
push
sbb
test
sbb
mov
fmull
mov
ljmp
sbb
mov
push
sub
xchg
inc
les
mov
mov
or
adcb
fwait
pop
stos
inc
mov
mov
mov
mov
cmc
hlt
xchg
aam
fs
xchg
in
call
divl
setb
test
inc
in
jl
push
in
dec
hlt
clc
addr16
test
jo
mov
iret
and
sub
out
add
enter
mov
mov
aam
jae
push
cmp
out
push
outsb
cmp
dec
pop
bound
or
xchg
and
adc
mov
pop
cltd
dec
dec
call
stc
inc
jecxz
adc
jb
dec
pop
jmp
fld
hlt
rorl
pop
clc
pop
mov
sub
xor
fs
adc
data16
addl
inc
out
ret
xchg
adc
call
aaa
das
and
fcmovnb
ret
dec
and
pop
cmp
popf
xor
sbb
add
hlt
call
mov
rcr
xor
sub
pushf
fadd
sbb
sbb
lcall
fcmovnb
dec
mov
push
add
bound
jbe
out
lods
sbb
push
or
mov
fnsave
popf
sub
loop
xchg
inc
gs
jno
movsl
or
sbb
into
lods
das
push
jno
call
fs
stc
les
mov
nopl
test
cmp
mov
sbb
and
or
inc
shrl
add
push
and
push
pop
sahf
outsb
jno
inc
mov
sahf
xor
xchg
pop
jg
stos
movsb
mov
lock
add
adc
lret
or
fdivl
add
mov
jne
loop
or
mov
inc
cmpsb
xor
cmp
push
dec
inc
lds
lahf
bound
and
in
xor
mov
dec
ret
mov
sbb
jmp
loope
ret
rorb
incl
pop
cltd
ja
in
mov
cmpl
sbb
pop
jmp
out
loope
popa
in
mov
icebp
jo
hlt
jnp
sbb
adc
movq
pop
jmp
xchg
in
xchg
sti
sub
loope
ja
pop
cmp
fs
shr
arpl
aad
pop
xor
push
das
and
pop
shlb
xor
xchg
mov
sub
mov
inc
cltd
dec
mov
aad
jg
je
cltd
icebp
gs
push
test
jmp
mov
out
inc
push
in
js
xchg
mov
jp
fnsave
mov
mov
scas
test
shl
test
ljmp
push
clc
xor
rcrb
gs
fnstsw
sub
sub
jns
push
lods
cmpsl
popa
push
gs
add
adc
in
mov
dec
cmp
cltd
lock
aaa
cltd
jmp
hlt
clc
push
mov
scas
xor
test
hlt
cmpl
dec
aas
dec
lea
lea
cmpsl
out
or
push
sbbb
mov
add
inc
aas
ret
test
sbb
out
xorb
decl
orl
and
mov
gs
ret
fsubs
sbb
xchg
movsl
pop
scas
sub
jns
dec
call
pop
cmp
mov
cli
cwtl
jmp
adc
push
clc
lods
add
add
pop
add
dec
mov
adc
or
cltd
sarb
arpl
jbe
in
mov
lret
sub
outsb
loopne
mov
fisttps
cmpsl
cmp
sub
loop
into
dec
ljmp
movsl
xchg
push
mov
cmovb
js
aam
adc
adc
loop
lods
jo
and
jp
pop
mov
fucomi
imul
add
test
fsts
push
push
ficoml
dec
outsl
lds
push
cwtl
pop
xlat
dec
das
push
mov
ror
add
sbb
dec
into
mov
int
jl
push
inc
out
int
test
in
fimuls
into
loope
cmp
xor
mov
mov
vaddsubpd
in
inc
sub
sbb
cmp
push
fs
outsl
sbb
stos
rolb
lods
lock
adc
inc
pop
popf
push
and
mov
and
das
mov
test
aaa
mov
inc
and
out
cmp
sub
add
repz
cmc
cmc
lods
shlb
in
add
and
scas
adc
mov
mov
ljmp
mov
bound
push
mov
outsb
mov
mov
cmp
mov
lods
inc
decl
cmpb
sbb
sbb
xor
sbb
pop
shl
dec
stos
fadds
xor
push
in
lahf
lret
inc
mov
fucomi
lock
ljmp
mov
and
aas
daa
add
clc
mov
push
cmp
push
or
lods
and
push
scas
dec
aaa
add
lahf
adc
repz
je
ret
andl
xor
cmpl
push
mul
movswl
jns
xchg
andl
adcb
fsubrs
xor
aas
or
stos
sbb
shll
repz
jno
stos
leave
and
clc
mov
aam
hlt
rclb
test
dec
fidivs
popf
push
iret
jle
and
or
repnz
jo
loop
sarb
lahf
cs
pop
mov
xchg
push
iret
mov
xor
ljmp
or
pop
gs
cs
and
jns
jnp
mov
fwait
pop
xor
je
xchg
adc
scas
jns
push
jge
and
jle
aad
dec
inc
cmc
popa
push
popa
jp
xchg
insl
pop
cmc
sbb
fwait
subl
mov
test
pop
xchg
mov
movsl
cmp
std
mov
lods
cmp
mov
jecxz
dec
cmp
lcall
mov
shll
xlat
cmp
notb
add
je
pushw
mov
adc
add
xchg
mov
and
fnsave
decl
mov
sbb
adc
and
jns
mov
aas
jo
add
jl
aaa
xor
dec
aad
stos
hlt
test
sub
shlb
das
fcmovu
push
add
or
mov
mov
sub
mov
idivb
lret
out
jns
push
ficoms
mov
lcall
and
in
arpl
pop
mov
mov
lods
inc
sbbb
cmp
in
orl
pop
stos
js
sbb
stos
add
xor
testb
dec
sbb
outsb
imul
test
jecxz
mov
inc
push
sarb
sub
cmc
shl
ret
and
xchg
sbb
aaa
cmp
and
xor
das
inc
mov
push
in
cmpb
sub
inc
pop
vpsubd
mov
cmpsb
push
jbe
decl
push
push
mov
jecxz
mov
push
mov
lea
jle
lahf
push
inc
or
daa
out
stos
imul
mov
dec
scas
jge
lret
aam
shr
cmp
sbb
jg
pushl
pop
sub
imul
fwait
sbb
mov
jl
je
jno
dec
stos
iret
dec
std
insl
jnp
mov
jge
push
pop
hlt
mov
and
subb
push
jb
lahf
sub
out
cld
lds
loopne
adc
clc
adc
outsb
add
dec
mov
movl
sbb
mov
inc
insb
inc
adc
outsb
cmc
xor
cmp
cld
negb
mov
sub
addr16
lahf
and
cmp
aaa
jl
sbb
nop
repz
jne
push
rorb
lods
nop
pop
adc
dec
shlb
outsl
jp
test
ss
outsl
jl
dec
mov
insl
cmpsl
dec
sub
inc
sub
jo
mov
push
es
mov
arpl
jnp
mov
mov
pop
lret
cmpsb
inc
sbb
xorl
add
aam
pop
clc
jle
sub
ljmp
pop
sbb
lods
sar
jg
movsl
popf
scas
add
test
imul
lahf
cmpb
fs
int
stos
cmc
adcl
out
sbb
push
insl
shr
rcl
xchg
fadds
xlat
push
jbe
mov
stos
inc
sti
sub
xchg
ja
pop
sti
loop
sub
mov
sub
or
pusha
sbb
divb
lret
xchg
inc
dec
add
mov
add
inc
adc
pop
stos
clc
xor
jnp
sub
ljmp
and
inc
jle
ret
pop
xchg
gs
pushf
into
mov
mov
js
jae
cmp
aad
jmp
xchg
add
sahf
xor
lock
lcall
aas
insb
cmpsb
or
pop
lret
and
xor
imul
push
test
inc
add
arpl
shlb
dec
in
ficoml
mov
arpl
inc
cmpsb
lea
insb
fdiv
mov
es
add
pop
popaw
fiaddl
pop
adc
popa
nop
btc
jg
pop
lret
sub
js
mov
mov
sahf
add
shrb
cmpl
test
pop
cmp
cwtl
adc
imul
cmp
stos
mov
mov
adc
add
sub
mov
or
sub
adc
xchg
das
xchg
sub
inc
mov
fwait
shll
push
mov
lods
aas
ret
cmpsl
mov
or
lods
jae
and
sub
mov
mov
aaa
push
jp
jo
adc
jns
and
and
sti
pop
shrb
mov
sub
mov
fbld
adc
push
sbb
cltd
test
fcmovne
inc
ret
dec
xor
mov
xchg
daa
arpl
fcomp
stc
andl
movsb
dec
repnz
xor
lods
jg
mov
ljmp
test
sti
js
fwait
and
pop
mov
in
hlt
aam
fabs
lods
xchg
cld
rcrb
xchg
and
or
lods
in
cmp
push
jnp
adc
icebp
cmp
outsl
jo
imul
mov
aad
jno
pusha
sbb
lcall
jecxz
or
or
dec
fidivrl
and
add
mov
test
popa
mov
mov
testl
xchg
ret
mov
mov
test
pop
into
mov
xlat
mov
cmp
imul
out
pop
xchg
dec
pop
shr
repz
or
fisubs
add
into
inc
push
fs
inc
mov
lahf
cmp
mov
mov
dec
mov
mov
outsl
sbb
sbb
add
in
xor
clc
lds
test
aad
arpl
outsl
adc
bound
cmp
and
ja
push
enter
nop
pop
rolb
icebp
or
out
in
dec
or
cmc
ret
sub
mov
xchg
sbbl
pop
fwait
je
mov
push
adc
pop
push
mov
pusha
xor
stc
inc
or
inc
mov
mov
test
adc
ljmp
adc
movsb
fmuls
add
std
ret
cwtl
test
jge
inc
mov
inc
fisubrs
cwtl
leave
rcrl
aad
aaa
sub
ficoml
not
test
sub
int3
int3
jne
leave
out
dec
ficompl
mov
xchg
fcmovnb
jne
mov
jecxz
adcl
ror
pop
dec
jno
rorl
stos
dec
adc
mov
or
aas
mov
mov
xchg
fdivrs
push
fidivrl
jb
mov
shr
cmc
insb
mov
ret
pop
cmp
cld
int
xor
fmull
imul
cmp
pop
cltd
scas
arpl
aaa
xor
jno
adc
mov
sbb
adcb
pop
or
insb
int
xchg
in
cmp
mov
popf
sar
fdivrp
push
dec
nopl
clc
test
movsb
rolb
xchg
mov
in
pusha
ret
repnz
cli
addb
jl
mov
rclb
mov
in
lock
inc
inc
je
inc
sbb
rorl
pop
sbb
mov
movsb
xchg
push
push
jmp
aam
mov
bound
pop
dec
test
jg
loop
xchg
sub
pop
adc
test
mov
lcall
push
inc
mov
clc
gs
add
movsb
adc
sti
xchg
inc
mov
jne
out
sub
jp
in
lcall
ja
or
addr16
mov
jbe
call
xchg
push
jge
js
lods
sub
add
jmp
jbe
insb
addb
adc
outsb
jne
mov
dec
ja
popa
or
daa
adc
dec
fsubrl
pop
fwait
std
or
mov
or
mov
addr16
pop
cmp
push
lea
cli
cmpl
arpl
pop
loop
or
mov
rcll
sub
in
sahf
fstpl
test
sbb
xchg
testb
or
repnz
and
mov
add
xlat
lret
xchg
mov
and
adc
decl
jmp
adc
imul
dec
pop
fnstenv
sub
push
mov
call
xlat
mov
jmp
push
and
xchg
das
out
mov
inc
dec
sbb
push
repz
lods
stos
negb
add
and
daa
int3
orl
mov
mov
and
push
pop
inc
xchg
dec
scas
test
mov
popa
aaa
bound
pushf
dec
mov
and
sti
jbe
xchg
and
aad
sub
adc
xchg
cld
movsb
sti
out
sbb
xlat
jp
dec
xchg
xor
and
insb
dec
subb
mov
stos
mov
fs
scas
jb
or
lock
imul
mov
mov
test
fimuls
int3
or
push
mov
adc
aam
int
jp
xor
ret
sub
push
pop
sbb
adc
sti
jmp
mov
mov
in
pop
daa
mov
push
xchg
lahf
cld
das
mov
mov
in
jae
gs
xor
xor
cmp
add
inc
mov
arpl
mov
xchg
push
bound
inc
fsub
dec
jecxz
sbbl
dec
inc
daa
jno
jge
daa
addr16
iret
cmp
sbb
ja
xchg
out
fstpt
movsb
out
xchg
push
mov
cltd
jl
sub
inc
cmc
mov
adc
adc
pop
xlat
sbb
jns
fmuls
sbb
sbbb
or
mov
mov
xlat
shlb
in
cmpsb
jl
jl
sbb
xor
dec
adc
xchg
push
or
in
dec
xchg
adcb
or
pop
or
leave
push
out
jbe
mov
or
inc
shll
cmp
and
pushf
icebp
std
lods
addr16
lahf
subl
lods
lahf
mov
push
or
xchg
je
push
jae
int3
push
mov
adc
sbb
jbe
mov
stc
ficomps
lods
loop
push
nop
mov
std
mov
test
mov
cltd
mov
pusha
jne
mov
inc
in
dec
incl
push
pop
iret
jp
sub
mov
jmp
jmp
mov
fidivrl
lods
inc
xchg
pop
lcall
scas
fcmovnbe
cwtl
arpl
sbb
push
xchg
sbbl
sub
mov
inc
pop
cmp
inc
and
insl
outsb
insb
mov
in
pusha
scas
ljmp
ret
insb
push
jne
push
sbb
push
in
loop
inc
cmp
or
adc
fistpll
xlat
scas
xorl
inc
adc
jl
repz
in
or
out
inc
pop
incl
jae
in
fldl
inc
cmpsb
daa
add
popf
sti
ss
lock
cmp
nop
mov
sbb
in
nopl
or
mov
xchg
leave
push
add
xchg
push
mov
lods
mov
insl
dec
push
ljmp
daa
std
dec
lods
imul
into
dec
jnp
push
arpl
mov
mov
out
push
fwait
push
xlat
popf
and
dec
sbb
and
push
jbe
stc
dec
push
jmp
mov
mov
inc
sbb
gs
lea
std
cltd
lcall
add
inc
subb
dec
cmp
aas
inc
xchg
sbb
mov
loope
aam
dec
cld
lcall
subl
xchg
enter
push
fcompl
mov
enter
das
in
dec
xor
mov
pop
dec
popa
sub
or
insb
dec
xor
dec
inc
xchg
subl
xor
arpl
outsb
pop
ret
dec
iret
add
pop
cli
push
push
in
out
aas
mov
sahf
mov
fwait
pop
dec
stc
rcr
call
aaa
scas
movsb
pop
xor
cmpsl
inc
fstpl
ja
fbstp
push
and
jecxz
ss
lds
mov
dec
aas
or
push
pop
jecxz
xor
sbb
test
pop
sub
xchg
dec
inc
lahf
stc
inc
adc
or
out
shr
pushf
jg
into
mov
push
hlt
xor
xor
insl
ftst
and
sarl
lret
sub
ficoms
xchg
jnp,pt
inc
movsl
mov
stos
les
inc
outsl
fistps
arpl
sbb
xchg
xor
xor
sti
mov
push
xchg
std
popf
out
mov
stc
int3
sub
sbb
loop
push
mov
in
lock
dec
pusha
out
mov
jge
or
in
push
adc
ret
repnz
in
cs
push
jb
mov
test
aam
dec
test
sub
lods
mov
inc
pop
lcall
inc
jns
xorb
sbb
adc
out
stos
inc
cmp
leave
dec
clc
sub
xor
cmp
mov
std
repz
inc
pop
jae
xchg
sub
jle
clc
jnp
call
xchg
mov
mov
mov
sti
adc
push
lods
pop
jmp
push
js
subb
insb
inc
fstl
jmp
hlt
xchg
mov
sub
scas
xchg
and
mov
and
lods
icebp
rcl
ss
clc
xor
push
mov
aaa
and
sub
test
test
aad
mov
divl
jns
sahf
push
xor
add
in
and
mov
inc
xchg
adc
fdivr
popaw
add
mov
insl
push
mov
cmc
mov
stos
push
xchg
jne
and
cli
ja
xchg
test
xor
adc
add
aad
outsl
enter
and
xor
xchg
loope
jne
sbb
scas
roll
scas
inc
insl
movsl
daa
mov
adc
xor
or
and
and
or
add
shll
int
mov
sahf
sbb
or
sub
jg
push
pop
mov
lret
mov
cmpsl
and
xchg
mov
cmp
pop
add
aam
out
mov
push
cld
cmpsl
sub
and
das
push
dec
mov
sbb
pop
movsb
outsl
pushf
mov
jns
lcall
mov
iret
mov
cmpl
mull
into
std
and
aad
sub
lret
fcompl
jno
out
mov
outsl
push
int3
hlt
imul
mov
pop
or
jge
sbb
lret
push
push
movsl
add
inc
scas
xchg
sti
enter
fwait
add
sub
std
scas
popa
push
je
pop
mov
xchg
sti
cmp
and
int3
mov
cmova
test
pushf
inc
movsl
aas
push
lods
ds
or
out
jge
or
in
inc
add
mov
dec
and
pop
jnp
rorl
rorl
lea
mov
pop
mov
pop
movsb
and
rorl
lock
gs
gs
sub
push
fidivl
pop
xchg
sub
rcr
out
mov
outsb
mov
dec
pop
adc
mov
scas
sub
push
mov
cmpsl
mov
insb
mov
mov
mov
sbb
imul
push
add
pop
int3
mov
mov
gs
mov
lods
daa
xor
jg
pop
insl
add
mov
xchg
push
lods
jmp
fdivrl
or
sub
inc
in
pop
shr
xchg
fsubs
movsb
sub
push
and
idivb
in
cwtl
push
inc
inc
pop
jp,pn
outsl
cmp
test
out
cwtl
sbb
or
lods
mov
daa
out
cli
fidivl
jae
aas
shll
mov
call
fadds
mov
aaa
ja
cld
ss
jge
stos
pop
clc
cld
and
push
stos
and
mov
sbb
test
outsb
movsb
int
bound
sbb
gs
lret
mov
iret
jp
xor
xor
push
es
xchg
loope
jge
push
mov
jb
je
pop
hlt
push
mov
pop
adc
jnp
popa
inc
mov
das
aam
pop
xor
shlb
jg
ja
scas
dec
xor
cmc
jge
fs
mov
lret
sub
aaa
pop
jmp
push
jns
inc
adc
mov
fst
in
popa
and
test
aaa
and
push
mov
adc
xchg
dec
fwait
mov
jle
outsl
out
orl
inc
in
mov
mov
inc
xor
xor
int3
push
adc
inc
loope
xchg
mov
xchg
bound
inc
mov
stos
push
xlat
jp
dec
mov
cmc
fldln2
mov
imul
push
mov
and
xchg
dec
pop
push
repnz
ror
je,pt
pop
mov
andb
into
mov
push
push
mov
fstp
push
xchg
lds
dec
push
adc
loopne
mov
mov
mov
fwait
adc
mov
sub
add
push
aad
testb
jne
mov
insb
mov
push
aas
shll
fstps
and
or
push
shlb
cmp
and
xchg
aad
jg
or
jnp
fmuls
jae
push
call
popa
decb
xchg
mov
test
jle
pop
xor
fiaddl
pop
pop
daa
xor
ror
in
ds
insl
cli
and
les
cmpsl
nop
xchg
sti
sbb
movzwl
xor
mov
cmpsb
fisubl
fdivp
out
mov
sbb
out
pop
pop
leave
xchg
push
lret
test
mov
stos
arpl
and
cmp
mov
test
xchg
sbb
mov
fmull
cmc
rol
lods
pusha
cmc
repnz
ljmp
sbb
es
ss
aad
inc
out
bound
mov
sub
aaa
jp
notb
movsb
sub
insl
pop
fistps
or
push
rcll
add
out
lret
cmc
mov
lock
mov
xchg
mov
nop
adc
mov
fwait
mov
pop
in
jge
inc
seta
xchg
sub
ret
lahf
xorl
xchg
arpl
shl
mov
sti
push
cli
loop
jle
shll
cmp
insl
lahf
cmpsb
mov
push
push
add
mov
test
js
loop
xchg
push
data16
repz
fldl
test
in
mov
test
mov
pop
jle
jg
ds
aaa
xor
and
mov
push
push
movsl
cmp
push
inc
or
sbb
sub
pop
jnp
jl
pusha
mov
nop
mov
sbb
cmc
test
jno
pushl
add
ror
sbb
cmp
bound
xor
mov
das
xchg
aam
lods
mov
fsubrs
mov
int3
fbld
cmc
mov
iret
mov
lret
out
cmp
jnp
nop
ret
and
and
in
adc
push
clc
cmpsl
cwtl
xchg
sti
add
addr16
pop
std
sbb
mov
movsb
fsubrs
xchg
js
pop
mov
fisttpl
adc
sub
and
popf
mov
popa
mov
xlat
add
scas
dec
in
mov
jno
mov
add
mov
add
jo
mov
popf
add
movsl
sbb
test
imul
pusha
js
stc
mov
xor
cwtl
or
lea
push
scas
lahf
ret
dec
les
rcrl
push
jg
mov
add
cld
pop
js
sahf
add
test
and
roll
inc
fldt
call
lret
hlt
mov
sbb
outsl
iret
pop
fsubrl
cli
jbe
add
data16
jbe
movsl
iret
movsb
pop
sub
push
orb
adc
filds
test
add
stos
cmp
fists
test
push
ljmp
loope
ss
dec
es
cwtl
push
xchg
adc
sub
pop
jbe
mov
cmp
shlb
mov
cld
push
popl
push
jg
mov
or
movsl
dec
sbb
fistpll
push
push
lret
push
push
pop
xchg
fisttps
repz
mov
cltd
fsub
out
pop
iret
fldcw
mov
xchg
xchg
ja
and
testw
in
shl
pop
test
orb
add
loopne
aas
in
sbb
pop
test
push
insb
xchg
inc
mov
pushf
push
nop
mov
xchg
pop
in
mov
sti
js
scas
jecxz
adc
adc
dec
rcl
jae
into
lea
jne
push
dec
mov
test
inc
in
hlt
enter
cltd
xor
call
loopne
mov
mov
aas
lods
dec
mov
pop
pop
pop
loopne
imul
jne
pop
adc
out
or
hlt
jb
js
lcall
dec
mov
mov
or
cmp
loopne
jmp
cli
jle
in
call
dec
das
fs
or
test
ret
sbb
int3
das
jne
push
fwait
cmpsb
mov
stc
pusha
bound
lods
cwtl
pop
sub
dec
or
jns
cmp
orl
xlat
cmp
jb
add
test
nop
ds
xorb
in
sarl
adc
fcoml
call
lcall
lock
cmp
xlat
mov
push
push
xchg
push
mov
daa
sub
mov
int
lret
inc
mov
leave
rcrb
bound
loopne
push
or
insb
aas
test
daa
icebp
dec
lret
adcb
xor
adc
add
jae
mov
les
nop
adc
cmp
sbb
cs
cmp
test
fcomps
pop
jbe
cmp
notb
mov
in
dec
and
out
or
mov
ss
aaa
lea
sarl
adc
xor
scas
or
xchg
idiv
adc
rolb
movsl
cmp
jmp
mov
or
lods
cmpsb
int
pop
or
sbb
mov
sub
or
fxch
cmp
sbb
ja
push
in
inc
pop
pop
imul
sbb
mov
xorb
aaa
negl
push
loopne
dec
mov
sti
mov
popa
imul
adc
mov
adc
lds
xor
inc
call
enter
test
push
clc
jecxz
xchg
lds
iretw
sbb
xor
pop
mull
cmp
mov
push
mov
mov
loope
xchg
paddw
xchg
orb
add
inc
mov
fwait
jo
xchg
pop
scas
mov
nop
in
jb
cmp
dec
cwtl
icebp
xlat
inc
inc
cld
xchg
push
pop
push
or
rcrl
insb
mov
push
andb
sahf
dec
mov
pop
cmp
repz
adc
dec
sub
fwait
out
popa
xchg
pushf
xchg
sub
enter
in
in
das
jle
and
addr16
int3
xor
push
jle
leave
cli
adc
fldcw
cmp
mov
inc
jae
in
mov
test
in
sarb
sub
sbb
push
mov
orb
mov
mov
cmpsb
mov
push
fistpll
mov
mov
xor
push
inc
pop
cld
sarb
sbb
xor
pop
and
mov
sub
ja
xchg
adc
fistpl
xor
and
cld
lcall
gs
fwait
or
mov
dec
outsb
pop
cmpsl
hlt
mov
ret
cmpsb
test
push
andl
jnp
push
cmp
jge
fdivs
add
out
pop
xchg
jmp
mov
push
les
mov
or
cmp
push
nop
xchg
stos
xchg
cmp
lea
mov
sbb
mov
push
test
out
in
mov
shrd
int
aaa
dec
inc
add
lods
jno
jae
lcall
and
xor
add
orb
xor
loop
dec
mov
js
stos
xchg
psadbw
and
jp
mov
dec
divb
xor
xchg
xor
lahf
lds
xor
mov
cltd
test
ds
xchg
mov
imul
pop
mov
lahf
and
pop
adc
mull
dec
lret
lods
push
mov
or
rcll
lea
cmpsb
jge
test
xchg
push
mov
push
push
call
sarb
push
xchg
sbb
jne
push
or
adc
imul
rolb
mov
mov
jns
or
cmpsl
pop
sub
pop
and
clc
push
jno
cmp
imul
cmp
xor
imul
cmc
mov
les
sub
or
call
add
mov
push
into
in
dec
xchg
xor
shlb
hlt
aaa
pop
mov
pop
push
jnp
sub
pop
push
or
ljmp
cmp
and
sbb
dec
sbb
test
sub
push
jle
or
in
movsl
pop
dec
data16
shlb
cltd
xchg
je
mov
cmp
or
enter
lds
loope
mov
xor
push
add
add
pop
cli
ficompl
push
mov
jo
sar
arpl
lock
leave
jp
mov
stos
sbbl
add
mov
mov
test
adc
mov
orb
dec
add
mov
push
fs
and
out
sbb
mov
andb
sub
push
fiaddl
in
pop
add
xchg
call
jg
in
or
je
mov
in
xchg
xor
call
fcomip
or
shrl
das
jnp
sarb
sub
push
add
jo
enter
mov
and
outsb
mov
mov
and
es
adc
lods
scas
pop
loopne
aas
pop
inc
push
sub
aas
jae
jp
inc
dec
add
rorb
push
sbb
inc
sbb
fwait
jl
fldenv
outsb
mov
cmc
movsb
xor
dec
out
rcl
jp
orl
xor
mov
clc
imul
xchg
mov
jb
cmp
push
push
add
test
inc
fldt
adc
dec
push
in
dec
lcall
push
popa
loop
scas
cmp
xchg
mov
outsb
cmp
sbb
xor
sub
notl
into
pop
xor
in
mov
mov
out
or
std
and
lods
enter
sub
cmpsl
int3
arpl
jb
shrl
rcll
sub
fstps
jle
jmp
icebp
test
add
aad
popf
lods
inc
pop
call
adcb
jae
jbe
dec
push
mov
cmpsb
fucomi
jne
stc
lahf
popf
add
test
mov
movsl
imul
push
imull
cli
mov
call
mov
fs
mov
test
aas
fbstp
inc
add
pop
movsl
add
repnz
jb
shl
jp
xchg
push
sbb
js
lcall
or
imul
fimuls
lcall
inc
mov
sbb
and
push
mov
adc
loop
mov
inc
pusha
lods
or
lods
sub
ss
inc
dec
push
mov
mov
repnz
and
adc
fisubrl
mov
movsl
jl
pushf
pop
test
out
mov
test
loope
imul
jne
sbb
in
cmp
jmp
fisttpll
jae
mov
and
pop
out
stc
pop
outsb
cmp
scas
push
out
lcall
push
cmp
mov
pop
in
loope
bound
push
cmp
jmp
roll
xchg
mov
jns
mov
mov
adc
fadds
pop
inc
xor
sbb
xchg
mov
jmp
ds
or
in
imul
jbe
sbb
push
loope
insl
sahf
aam
out
pop
dec
xor
pop
xorl
cld
add
pop
sti
lods
pop
ret
orb
fistps
loop
and
fs
sbb
cmp
pusha
mov
pop
mov
xor
jl
fcomp
xchg
and
loopne
loope
call
push
dec
fiaddl
jb
repnz
jo
jp
cmpsl
aad
lods
push
insb
jmp
pop
and
xor
lods
inc
mov
sti
aad
data16
fwait
shlb
dec
dec
sahf
andl
test
inc
out
lea
pop
leave
push
push
xchg
ss
mov
out
jnp
xlat
out
mov
out
pop
popfw
sbb
cmpsb
cmp
cwtl
enter
fdivrs
or
aam
inc
sub
add
adc
iret
ret
mov
mul
jmp
push
push
and
movsb
pop
std
xchg
cld
daa
rclb
iret
sarl
xor
sbb
xor
xchg
movhps
xchg
shrl
sbb
fists
inc
test
cli
jl
cmc
ficompl
int
push
lcall
jmp
sbb
cmp
adc
add
mov
loop
orb
lea
jo
add
lret
leave
push
lock
sub
ret
push
mov
int
or
insl
loop
wbinvd
pop
cmp
dec
adc
adc
addl
and
xor
inc
stos
or
bswap
or
pop
and
out
imul
ljmp
inc
pushf
push
jo
dec
mov
outsl
je
adc
push
mov
ret
clc
jge
fadds
movsl
fistpl
movsl
andl
xchg
inc
pusha
jnp
idivl
ja
pop
mov
pusha
cmpsb
push
sbb
stos
pop
xchg
xchg
jnp
sti
xchg
mov
sti
mov
mov
in
push
jns
sub
push
and
ss
dec
ret
xchg
decb
push
inc
xor
jbe
inc
jmp
leave
jae
insb
push
test
outsb
xchg
popa
clc
scas
pop
cld
adc
jge
sahf
cmp
mov
cli
lret
rol
mov
test
add
push
mov
enter
les
dec
inc
mov
or
jecxz
jb
pop
ficompl
fwait
pop
out
jmp
mov
movl
ja
out
sti
push
fnstenv
jno
cmp
mov
add
mov
mov
and
or
pop
int
lret
jmp
fdivrl
inc
insb
adc
movsb
mov
jp
sti
cmp
outsb
or
lods
pop
or
scas
adc
sub
es
mov
pop
jge
mov
sti
push
pop
mov
pop
mov
stos
cmp
pop
xor
pop
dec
clc
dec
dec
aam
mov
dec
jo
adc
dec
cld
and
in
cli
push
cmpb
xchg
out
hlt
mov
or
xor
push
imul
clc
xchg
jmp
sbb
cld
push
push
decb
jge
in
jg
jge
in
lea
ds
mov
clc
and
ficomps
test
xlat
add
clc
push
sub
sub
je
sub
faddl
daa
jns
addr16
add
jl
ds
cmp
xchg
mov
fbstp
and
inc
faddl
add
or
stc
jg
dec
pop
cmp
push
add
lds
or
loopne
jp
cli
inc
or
sub
pop
pop
test
jmp
loop
xchg
fbstp
je
and
sub
lods
xchg
pop
enter
inc
dec
dec
addb
loopne
loop
lahf
pop
sahf
jge
dec
push
cs
fadd
sarl
repz
cmc
or
and
jnp
test
outsl
in
movsb
jbe
dec
aaa
sub
pop
int
mov
inc
mov
sub
xchg
ret
das
imul
gs
push
dec
clc
pusha
test
ss
shrb
fldenv
out
or
mov
sub
nop
dec
subb
rorl
mov
imul
mov
addr16
and
mov
dec
test
iret
call
insb
loop
fstpl
inc
in
cmp
lods
pop
loope
xor
or
lock
dec
xor
je
aam
mov
and
loop
mov
mov
mov
mov
lahf
dec
popa
push
cmp
add
xchg
inc
cmpsl
mov
mov
shrb
test
or
imul
and
outsl
in
add
jp
jge
jp
xchg
mov
ret
adc
ret
xor
mov
jbe
inc
data16
in
loop
dec
cltd
jp,pn
ret
cli
loopne
in
jg
pop
cwtl
dec
adc
xchg
sub
sub
dec
lea
push
adc
call
icebp
jge
jns
inc
rcll
cmp
add
test
or
fldl
dec
and
rorb
out
cs
sub
dec
lea
push
add
lods
ds
mov
aaa
adc
pop
xchg
push
aam
or
and
jl
incl
loope
push
and
cmp
orl
add
nop
fnstenv
and
dec
jae
mov
lods
in
and
arpl
cld
and
mov
repz
mov
pop
shrb
push
push
or
sub
jne
dec
push
xor
jbe
in
cmp
push
lock
test
les
in
mov
inc
cwtl
push
push
dec
mov
ret
mov
mov
adcl
in
stos
out
dec
test
addr16
dec
daa
mov
mov
xchg
divl
dec
or
les
lock
xchg
mov
add
jb
into
mov
pop
imul
pop
xchg
mov
stc
push
and
cmpsb
cmp
jno
lea
fs
test
je
adc
adc
cltd
ret
cwtl
aas
xchg
test
mov
arpl
stos
lahf
mov
sar
add
sbb
xor
xchg
hlt
cmp
and
clc
adc
inc
popf
popa
sarl
adc
sahf
mov
add
ret
call
lret
and
pop
jecxz
or
dec
enter
sbb
jmp
adc
dec
andb
mov
cmp
cmc
sbb
sbb
mov
fsubr
sub
out
movq
mov
lds
aam
jne
dec
dec
push
shll
push
fisubs
xchg
pop
dec
adc
ja
adc
rorl
je
lret
pop
mov
push
add
pop
dec
mov
mov
and
mulb
mov
clc
pusha
or
sbb
cmc
dec
adc
insb
scas
push
insb
jge
push
dec
pand
mov
push
or
out
pop
xor
push
mov
cmp
insl
pop
rclb
mov
loopne
inc
insb
arpl
cmpsl
mov
cwtl
or
js
movsb
test
cmp
mov
jge
int
mov
leave
xchg
shrb
lret
push
leave
xlat
jmp
jne
or
daa
testb
notb
dec
ret
fst
call
popf
lods
push
std
cltd
inc
add
stos
pop
fwait
in
mov
call
insl
push
add
lcall
incl
add
les
gs
sti
shr
out
xchg
jp
inc
mov
xorl
jle
sub
jno
sti
icebp
mov
mov
mov
js
test
cmpsb
inc
ret
mov
loope
add
hlt
xchg
loope
out
sbb
pop
jns
push
add
xchg
jl
cltd
and
test
cmc
aaa
or
decb
idivb
mov
cltd
pusha
dec
xor
lcall
cltd
add
sub
jae
call
add
fimull
out
movsb
imulb
repz
mov
lahf
mov
popf
inc
iret
inc
and
xor
xchg
add
nop
scas
fidivrs
movsb
cmpsb
sub
pop
adc
movsl
sub
xchg
in
nop
loope
push
add
lock
or
stos
stos
addr16
lods
lret
std
in
hlt
lock
iret
insb
insl
cmpsl
out
loopne
cmc
xchg
fldcw
jle
dec
loope
push
in
mov
lea
out
jo
sbb
lahf
mov
xor
add
test
inc
pop
nop
jmp
pop
add
mov
jl
movsl
fsubp
loope
test
dec
push
adc
aas
ljmp
cmc
mov
push
push
or
out
sbb
pop
xlat
addr16
insl
test
inc
xchg
enter
pop
cltd
mov
add
mov
stos
cld
xchg
xor
or
sbb
mov
andl
aad
pop
mov
push
ror
lea
cmp
add
push
fsub
ret
rorb
int
mov
insl
leave
ja
jg
inc
xor
cs
sbb
pop
adc
mov
cmp
inc
imul
icebp
pop
lea
sbb
and
inc
mov
inc
xor
and
pop
and
jle
in
test
push
addb
fstpl
sar
shl
xchg
mov
xchg
pop
in
jne
lods
enter
dec
pop
or
movsl
mov
xchg
or
xchg
adc
stos
stos
xchg
dec
sbb
add
int
imul
mov
sbb
popl
movsl
icebp
stos
data16
mov
insb
add
insb
nop
js
dec
in
push
fxch
xchg
inc
scas
xchg
dec
sub
pop
dec
enter
outsl
mov
jg
cli
add
fnstsw
mov
push
cmpsl
in
lea
pop
dec
cs
jp
imul
imul
jl
packsswb
push
dec
add
enter
cld
in
cmp
testl
jne
jmp
insb
cmp
inc
into
push
in
inc
test
lahf
das
insl
outsb
mov
mov
xlat
test
push
push
push
xchg
fildl
push
mov
jecxz
dec
lret
xchg
cld
lea
xchg
decl
sbb
dec
pop
mov
test
xchg
mov
xchg
mov
sbb
lret
lahf
scas
inc
imul
mov
mov
fucomi
stos
xor
lds
and
pop
stos
fstpl
sub
loope
xor
mov
and
sbb
stos
int
xchg
scas
and
add
jnp
push
mov
add
sub
in
adc
lcall
pop
dec
out
out
push
mov
in
pop
dec
or
out
clc
lcall
mov
sti
jbe
int3
imul
dec
loope
ret
dec
psrad
rclb
adc
push
fbstp
pop
insb
clc
repz
lret
mov
pop
jmp
test
iret
sub
xor
in
pop
adc
mov
aam
jne
cmpb
cli
push
jne
lret
lds
iret
sbb
xchg
pop
push
cmp
cmp
dec
pop
dec
inc
mov
aam
aam
xchg
xchg
push
and
fidivs
in
aaa
lds
leave
push
mov
icebp
cmp
push
mov
mov
in
aam
xor
data16
jbe
sbb
iret
jbe
xlat
fdivrs
xchg
push
test
in
push
int
hlt
scas
and
lods
and
cmp
and
in
mov
fimull
lods
cli
mov
ja
push
cltd
loop
popa
addl
sbb
es
or
pushf
add
mov
mov
xlat
filds
or
stos
jae
xlat
sbb
out
das
std
sbb
mov
inc
testl
mov
test
repz
lods
push
adc
insb
out
test
jecxz
cwtl
inc
adc
push
mov
pop
push
sub
pop
out
pop
pop
mov
add
dec
mov
mov
test
movntq
push
loop,pt
fs
mov
mov
sbb
gs
scas
decb
xor
pop
sbb
in
dec
xchg
dec
xor
xchg
cld
lock
jmp
ja
js
fists
jle
cmp
jmp
inc
mov
lods
pushf
and
mov
fwait
mov
imul
dec
jecxz
fcomps
dec
sbb
out
cmp
or
cmp
iret
cmp
push
adc
sub
push
pop
outsl
in
insb
add
daa
pusha
je
insb
test
xchg
in
pop
push
lods
xchg
jl
aam
adcl
or
xor
mov
dec
and
mov
out
push
or
mov
add
mov
xor
xchg
mov
repnz
nop
rorb
ss
mov
lret
in
stos
jbe
nop
xchg
addr16
repz
inc
cmp
xor
xchg
hlt
inc
adc
fstl
adc
push
push
sysexit
sub
xchg
movsb
shrb
repnz
ljmp
adc
lea
push
xchg
add
pop
jecxz
lea
jl
loop
fwait
cmc
pop
repz
pusha
das
sub
inc
xor
sbb
enter
enter
data16
hlt
jbe
fbld
ret
adcb
pop
repnz
push
and
xor
inc
mov
and
or
push
dec
es
rclb
mov
lcall
out
icebp
fidivrs
mov
sub
lds
in
sbb
push
fmuls
daa
popa
adc
jb
lret
add
ss
pop
lcall
mov
leave
lods
cmp
xchg
adc
cmc
lods
lret
xlat
ret
push
rcrb
rclb
sbbl
aaa
and
pop
add
inc
imul
xchg
rclb
mov
nop
es
cmp
sti
or
arpl
mov
mov
arpl
int
stos
dec
xor
aam
pop
mov
fwait
lock
mov
stc
cltd
insb
cli
rcr
je
dec
mov
fucomi
add
ficoml
outsb
fs
bnd
xor
les
cmpsb
ds
jl
mov
inc
and
mov
and
push
cmp
push
pop
sub
repnz
cs
scas
dec
out
jecxz
xor
mov
in
sub
or
mov
adc
push
push
cmpsl
lods
out
inc
sbb
pop
jge
dec
mov
push
hlt
scas
xor
ret
pop
inc
jp
inc
push
sub
popa
out
dec
fnstsw
mov
or
call
sub
push
cmp
js
pop
lahf
lds
xchg
add
or
mov
mov
sub
stc
mov
pusha
jns
imul
mov
bound
push
movsl
mov
call
out
outsb
mov
or
mov
dec
inc
pushf
nop
stos
sbb
jecxz
jne
into
mov
mov
push
push
mov
popf
mov
mov
ds
xlat
data16
mov
sub
xchg
xchg
dec
ret
inc
or
xchg
sahf
jle
pop
xchg
pop
xchg
inc
lock
out
jno
testl
jecxz
sub
and
or
mov
push
xor
xchg
out
divl
inc
dec
scas
jg
and
test
stos
hlt
fwait
xor
cmp
add
scas
das
ja
jnp
or
out
mov
add
std
test
outsl
jns
sti
lods
mov
sahf
std
xchg
dec
call
xchg
popa
jb
aad
and
mov
iret
and
outsb
sbb
lcall
popf
mov
lea
insw
pop
pop
cs
hlt
mov
bnd
jae
cmc
mov
xor
negl
pop
sbb
stc
sub
xor
nop
sub
or
sarb
xchg
mov
mov
loope
outsl
or
fwait
xchg
mov
add
cmp
fcompl
popf
je
mov
arpl
cmp
loop
jmp
das
or
pop
fcomps
mov
sti
lods
push
mov
sar
pop
loopne
xor
jle
out
daa
cmp
mov
out
neg
fnstsw
out
ljmp
jno
imul
ss
or
or
aam
lea
push
bound
mov
je
lret
rdtsc
sbb
ss
outsb
icebp
xchg
loop
dec
jle
in
jmp
rcl
inc
jg
cwtl
bound
in
in
call
subl
je
lds
sbb
enter
lcall
mull
pushf
out
mov
or
pop
xor
pop
mov
scas
jns
cli
addb
out
clc
test
inc
inc
jno
fisubrl
sbb
outsb
ds
mov
inc
jne
ret
add
sub
jno
mov
add
sbb
adc
je
arpl
lock
test
loop
rcr
cmpsb
mov
bound
outsl
lea
std
mull
adc
dec
test
inc
testl
in
adc
test
adc
or
fistpll
bound
in
test
push
dec
pusha
xlat
rcrl
stc
inc
or
mov
sbb
cmpsb
stos
jmp
adc
rorb
adc
pmaxsw
sbb
xchg
sub
xchg
adc
inc
imul
jbe
xchg
fwait
jb
sti
adc
add
pop
xchg
icebp
cmpsl
leave
jle
dec
or
ds
outsl
scas
mov
jno
cmp
into
push
xor
in
out
xchg
xchg
test
pop
mov
popl
mov
jo
repz
test
mov
mov
cltd
dec
mov
pop
dec
into
push
pop
mov
addb
xor
test
dec
aas
bound
test
mov
movsb
out
jmp
jbe
xchg
xor
ret
dec
jp
sub
and
out
ficoml
sahf
xor
and
out
ljmp
mov
lcall
shl
cmpsl
adc
jne
pop
pop
enter
mov
sahf
mov
int
sbb
rcll
adc
js
pop
loope
mov
and
dec
lea
int3
and
iret
mov
sub
fsub
dec
bound
dec
pop
pop
or
dec
jp
fmul
mov
out
pop
dec
add
xor
insb
jge
testb
enter
inc
fdivr
cmp
and
dec
adc
mov
sbb
stos
lret
mov
xchg
inc
adc
repnz
pop
ja
mov
insl
cmp
and
ret
std
xor
lods
or
arpl
cmpsl
jg
mov
rorb
mov
pop
test
cmp
mov
adc
mov
pushw
fisttpll
lds
leave
icebp
incl
mov
mov
cmp
mov
add
sub
lret
inc
loop
cmp
js
mov
add
packsswb
scas
fnsave
push
fistpl
adc
add
cmp
jecxz
std
test
adcb
inc
inc
in
mov
cpuid
lcall
dec
inc
call
adcl
xorb
incb
jle
movsb
push
or
rorl
cmp
pop
fdivs
jno
hlt
inc
push
in
and
cwtl
insb
ja
inc
sub
sahf
pop
push
out
fldt
push
movb
mov
adc
clc
jmp
pop
insl
push
mov
mov
ds
subl
arpl
neg
loopne
cmpsl
cltd
movsb
sbb
ficoms
aam
and
decb
pop
bound
test
xor
sbb
and
test
jnp
mov
ja
iret
and
xor
imul
std
repnz
loopne
and
lret
mov
xor
sub
adc
mov
pop
or
add
cwtl
inc
pop
clc
scas
push
push
outsb
pop
push
mov
push
xchg
fnstenv
fbstp
push
call
sub
lcall
nop
icebp
sbb
inc
jge
sub
dec
in
js
xchg
push
mov
stos
fisubrl
or
mov
iret
push
xchg
int
add
adc
out
xchg
inc
cs
mov
lock
lahf
dec
push
pop
push
dec
rcl
inc
les
icebp
je
jno
adcl
and
sti
sbb
pop
popf
xchg
test
stc
ljmp
ja
fwait
shrb
and
inc
mov
inc
andl
sub
jns
mov
imul
inc
gs
xor
and
jg
xor
mov
les
inc
ffree
mov
mov
push
push
aas
dec
addb
dec
fbld
mov
hlt
ss
add
out
xorb
cmc
inc
sbb
leave
icebp
mov
popa
sub
loope
daa
stc
push
or
incb
push
cld
leave
sbb
into
roll
cli
jb
sub
lea
das
push
sub
cmp
sbb
inc
stc
fdivl
xor
popf
leave
sar
dec
and
jno
pop
cltd
or
aad
mov
andl
mov
push
lock
into
test
add
jno
mov
out
popf
sub
sbb
mov
fs
add
outsl
jo
sbb
push
and
jmp
lock
sbb
cmp
xchg
mov
js
sbb
mov
xchg
push
mov
push
cmc
ss
mov
adc
jmp
xchg
xchg
lods
jne
enter
xor
xor
mov
pushf
fwait
and
lock
add
jns
add
cmp
pop
adc
int
push
fs
cwtl
cmp
int
out
mov
xchg
jae
mov
xchg
dec
pop
scas
divl
push
mov
ja
dec
add
sbbl
popf
imul
imul
mov
or
ret
sub
push
mov
aas
xchg
push
sbb
jl
out
dec
xchg
mov
xlat
and
jno
jl
cmp
ljmp
int3
mov
call
imul
adc
pop
adc
shl
les
test
hlt
pop
mov
pop
pop
ljmp
aam
adc
div
outsl
or
xor
add
fiadds
or
sar
rorb
std
in
std
bound
mov
pushf
mov
stos
push
push
xchg
add
dec
mov
mov
jne
lcall
add
mov
cmp
movsl
lret
aaa
mov
imul
lret
xor
popf
push
das
popf
mov
fdivs
mov
cmp
lret
sbb
jbe
cmp
enter
popf
mov
jbe
fcomi
and
movsb
mul
push
jle
jae
fiaddl
mov
ret
xchg
les
push
sbb
dec
sbb
sar
movsb
lret
dec
xor
mov
out
pusha
jo
push
mov
in
sbb
cmc
push
inc
scas
mov
mov
or
mov
mov
cmp
sbb
cltd
pop
mov
sub
mov
inc
xchg
cmp
arpl
aam
fistl
ljmp
dec
mov
sti
stos
lcall
dec
stos
inc
subb
push
mov
out
rcll
in
jno
insb
push
sub
inc
fldenv
lock
ficoms
mov
inc
inc
sub
mov
addr16
data16
adc
hlt
jmp
or
stos
mov
es
fldcw
enter
cmp
movb
xor
shufps
xorb
mov
push
aad
fwait
movsb
lret
add
and
fisubl
lcall
inc
jns
sbb
outsb
loop
jae
js
test
test
test
repnz
bound
fists
and
mov
jne
cltd
inc
push
xor
lahf
mov
jne
pand
pushf
leave
ret
imul
adc
inc
mov
cld
fsts
or
push
cs
or
test
fs
cli
std
pop
mov
stc
loopne
hlt
xchg
ljmp
popl
cmp
jae
loope
fmuls
sub
fwait
sub
inc
ret
repnz
clc
clc
leave
sub
scas
lea
jg
adc
xor
dec
sar
movsb
daa
subl
mov
cs
movsl
outsl
pop
call
or
xchg
pop
push
aam
mov
das
jg
leave
in
inc
leave
ss
jle
imul
add
loopne
mov
fistpll
adc
scas
add
dec
cli
mov
scas
loope
fwait
mov
fisubrs
dec
stc
inc
out
roll
std
rcrl
mov
dec
push
cmp
jmp
shrb
add
pop
lcall
nop
insb
or
jle
std
mov
fiadds
insb
push
dec
adc
pop
xor
fsubrl
cmp
add
shlb
xor
add
fisttps
jnp
and
xchg
adc
ja
ljmp
aam
aaa
xchg
adc
sbb
cmp
push
test
mov
js
push
mov
fdivrl
sbb
nop
pop
test
mov
pop
imulb
js
push
mov
lret
pop
or
jp
jne
ret
iret
cmpb
andb
xor
setno
pop
push
cmpsl
movhlps
or
nop
add
stos
jmp
fstpl
in
pop
adcb
push
jb
test
jp
jnp
mov
xchg
fisubs
xchg
and
insb
push
mov
xchg
jl
sub
inc
in
aad
mov
out
or
enter
aad
inc
dec
mov
mov
dec
jns
cmp
xchg
std
mov
pushf
push
jne
xlat
jno
cwtl
dec
ss
push
inc
gs
fdivrl
iret
jnp
dec
jns
dec
scas
sahf
arpl
scas
pushf
mov
std
out
iret
pop
call
adc
mov
push
in
outsb
movsl
mov
lahf
shlb
mov
lcall
test
scas
imul
dec
xor
clc
push
pop
mov
mov
xchg
mov
dec
push
cmp
shrl
and
pop
test
push
and
test
loopne
daa
push
jns
int3
jbe
mov
push
inc
jae
mov
mov
jo
iret
sub
loopne
jge
jne
out
lret
cmpb
ja
lcall
pop
cmpl
push
xor
lahf
addr16
sub
lcall
mov
cmc
pushf
xrelease
push
out
insl
push
mov
into
lds
jo
lods
mov
push
loope
outsl
sbb
out
test
add
jbe
xor
fistps
movsl
in
sbb
add
mov
sbb
cmp
roll
sbb
cmc
out
cmp
jo
xchg
pslld
in
inc
mov
pop
adc
xchg
es
nop
cmp
ss
pop
das
cltd
or
inc
pushf
xor
pushf
in
lea
das
push
inc
fwait
das
imul
jb
jp
test
pop
leave
lds
sbb
sub
dec
frstor
mov
jp
xor
movsl
repz
cltd
push
loop
push
popf
jge
hlt
stos
sub
mov
js
je
mov
cmpsl
vfrczps
imul
lcall
add
pop
xchg
push
pop
jecxz
push
cmpsl
dec
mov
push
stos
mov
sub
jge
push
jge
js
out
scas
mov
sti
or
push
mov
std
aas
cmp
ret
call
sub
pop
xchg
or
pop
sbb
jecxz
push
pop
sub
ljmp
cwtl
or
clc
scas
loop
hlt
jbe
mov
ficoml
pop
or
sarb
aam
mov
adc
out
xlat
sahf
insb
sbb
lods
int
fisubs
loop
jge
test
lret
test
pop
jp
mov
mov
pusha
xchg
sbb
enter
mov
jp
or
outsb
lock
mov
mov
mov
inc
adc
jge
sub
sub
imul
adc
pop
sarb
hlt
es
push
and
aam
aas
mov
and
mov
or
das
mov
cltd
jnp
fcmove
gs
js
loopne
push
sbb
add
sub
mov
scas
pusha
fsubs
ss
aaa
or
and
dec
pusha
add
pop
xlat
dec
cmp
and
mov
pushf
das
push
lret
mov
lret
icebp
scas
sub
dec
int3
test
insl
push
out
cld
and
sbb
outsl
in
and
out
fs
mov
aam
les
mov
pusha
icebp
orb
popf
das
mov
jo
rorb
jmp
cmp
ret
bound
push
outsl
js
pop
addr16
movl
das
mov
ret
test
sbb
pop
popf
cmp
pop
imul
xor
inc
mov
or
inc
mov
int
inc
xor
cwtl
test
dec
sbbl
into
sarl
inc
into
ja
gs
push
neg
mov
pop
js
outsl
enter
loop
xor
mov
or
cmp
cmpsl
adc
jae
stos
dec
cmpsl
xor
cmp
pop
addr16
leave
repnz
ret
xchg
mov
dec
jo
sbbb
in
jbe
sbb
mov
jmp
xlat
cmp
fcmovu
mov
xchg
or
pop
sub
cli
cmc
test
mov
int
repnz
mov
cmpsb
pushf
push
aad
pop
xor
enter
push
dec
out
xchg
clc
aaa
ja
inc
or
jo
and
and
or
repnz
lods
insb
jno
xchg
nop
aaa
in
xor
sub
mov
imul
ror
mov
mov
mov
add
jo
sub
mov
mov
mov
mov
adc
push
lret
shlb
out
push
mov
jo
cmpsl
mov
mov
sub
bound
roll
pop
sub
push
scas
push
pusha
jo
scas
je
out
add
adc
mov
cmp
dec
lds
test
push
dec
clc
xchg
pop
pop
inc
ficoms
data16
lcall
pop
inc
lods
jg
adc
ja
stos
lret
add
mov
repz
add
sbb
roll
mov
fwait
jne
sbb
cmpsb
pop
sub
or
je
dec
nop
jge
lcall
imul
and
sbb
xchg
add
popf
mov
jge
out
aaa
adc
cli
dec
cmp
ljmp
idivl
jae
sbb
rcl
add
icebp
sbb
push
shl
test
mov
adc
push
imul
mulb
mov
repz
dec
ret
and
mov
jns
dec
icebp
jno
stos
int3
sbb
or
and
xor
pop
add
bound
push
and
sti
jb
mov
ret
test
or
mov
es
mov
inc
lock
lea
sbb
xor
or
dec
negb
daa
mov
jb
stos
jp
movsl
mov
in
sub
cmp
cmc
mov
and
xor
adc
cmp
fwait
sbb
mov
daa
inc
stos
stc
jge
arpl
sub
push
push
ret
cmp
or
scas
sub
pop
clc
or
lock
and
push
jne
mov
lret
sub
daa
aaa
inc
lahf
mov
out
inc
cwtl
or
and
dec
dec
mov
ret
mov
cld
adc
xchg
das
push
lcall
icebp
push
repz
adc
inc
mov
xchg
add
xchg
ja
mov
popf
sub
jns
in
test
xlat
cltd
sbb
and
fbstp
adc
clc
loop
mov
and
jae
test
push
xor
jno
sub
test
xchg
insb
push
pusha
mov
dec
mov
lods
or
outsl
xchg
rorl
xchg
cltd
adc
mov
lret
pushf
sbb
mov
add
imul
or
lods
lods
push
adc
nop
loope
shll
sti
adc
scas
xor
xor
pop
stc
lock
jp
pop
or
pop
mov
popa
out
lcall
xor
pop
movsb
lds
xlat
insl
mov
or
xchg
sbb
imul
mov
scas
xor
mov
xor
cmpsb
mov
cmp
dec
ds
cltd
call
fbstp
cld
movsl
xor
mov
lods
ds
int3
mov
das
sub
ror
push
sarb
sarb
cs
cmp
ret
and
les
push
fbld
inc
sub
in
add
loopne
xchg
jmp
push
dec
shrl
inc
or
mov
push
mov
insb
shrb
lds
call
add
loope
add
xchg
ja
loopne
mov
lahf
adc
dec
lret
mov
ss
lahf
sbb
xchg
les
and
orb
add
or
add
mov
xchg
outsl
pop
clc
daa
inc
lods
lret
sub
mov
enter
icebp
sarl
movsl
xchg
inc
jg
xor
and
mov
mov
jns
mov
cld
dec
push
call
in
push
mov
sbb
arpl
adc
xchg
imul
fildll
ja
jecxz
fimuls
repnz
cmp
mov
mov
addl
imul
jnp
jno
pushf
loop
inc
std
notl
lcall
stc
xor
mov
inc
adc
loope
cmc
push
and
or
divb
repnz
pop
ss
andb
aas
int3
aad
out
bound
pop
or
notl
fsts
sbb
mov
sbb
mov
ljmp
nop
test
dec
dec
or
mov
pushf
jle
loop
jo
xchg
inc
push
xchg
aas
pop
movsb
jmp
or
or
cmp
sub
lods
rol
out
xchg
cld
dec
pushf
pop
mov
push
add
flds
mov
iret
enter
inc
pop
iret
jne
les
xlat
orb
jne
scas
jns
and
ds
or
push
rdmsr
ljmp
int
sub
sub
jmp
les
lcall
cwtl
and
mov
jnp
mov
rol
jmp
mov
ljmp
mov
inc
mov
xor
loop
and
add
mov
in
gs
push
movsl
out
lret
movsl
ljmp
inc
xchg
mov
adc
lods
shl
into
inc
lret
inc
mov
movsl
lret
je
icebp
movsl
dec
jmp
jp
outsb
push
sub
or
popf
jecxz
into
mov
pop
push
jb
lcall
and
mov
jl
subl
push
ljmp
pop
mov
mov
adc
lret
mov
mov
pop
js
sub
fisubrl
orb
mov
loopne
xor
mov
insl
jle
sbb
xor
jns
addb
lock
push
push
xor
xor
or
lock
mov
mov
dec
cmpsl
mov
mov
jp
mov
mov
mov
jmp
into
cs
push
les
push
jbe
ret
test
subb
stc
inc
lahf
adc
jecxz
lods
fsubl
pop
inc
xor
fisubrs
jp
push
stc
push
adc
pop
inc
xchg
sbb
and
repz
push
pop
aaa
cmp
andl
mov
dec
pop
sbb
jle
inc
mov
out
leave
inc
mov
dec
mov
jo
inc
lods
stc
mov
test
test
push
mov
pop
shr
aas
popa
pop
in
xchg
jmp
mov
jle
adcb
je
pop
enter
insl
xchg
cltd
popf
fnstsw
pop
xchg
mov
or
mov
and
adc
push
jmp
leave
call
jge
jge
adc
xchg
cwtl
stc
push
dec
pop
data16
adc
lret
cltd
push
out
mov
outsl
cmp
shl
ds
fcomps
lds
sarb
mov
sub
js
jmp
mov
and
push
inc
or
les
mov
or
jg
or
mov
repz
jmp
hlt
sti
imul
or
push
pop
movups
pop
mov
popa
push
lret
fcoms
data16
or
ss
lahf
and
lahf
cltd
sbb
cmpsl
inc
leave
jecxz,pt
ljmp
xor
jo
std
bound
add
mov
or
into
adc
add
jns
das
loopne
aas
dec
rep
das
sub
sbb
inc
aaa
ja
inc
cltd
es
xor
aas
xor
movsb
and
sti
sbb
lcall
nop
cmp
gs
jb
jl
inc
ret
loope
push
mov
or
lods
or
push
jge
and
cli
neg
jae
dec
insb
mov
repnz
mov
dec
pop
divb
push
ljmp
xor
and
mov
test
xchg
arpl
pop
and
inc
daa
jmp
icebp
arpl
aam
pushf
cmp
insl
push
fistps
adc
jb
xchg
repz
push
mov
aam
aad
or
xorl
mov
xor
jbe
pop
popf
fbstp
imul
bnd
repz
int3
outsl
push
cmc
or
and
dec
mov
int
inc
sub
aaa
sahf
aaa
cmp
push
test
and
jb
xchg
or
shll
push
sti
xchg
out
mov
loope
pusha
roll
and
pop
fwait
push
pop
shll
jo
inc
mov
dec
jp
add
das
mov
cltd
dec
lods
pop
xchg
out
inc
inc
shll
in
and
mov
test
xchg
in
test
adc
mov
pop
cmp
aam
mov
sbb
or
xchg
enter
and
add
push
pop
xor
decb
jecxz
and
and
mov
push
mov
adc
sbb
out
inc
dec
sub
ret
mov
pop
mov
lret
aaa
ja
mov
adc
jns
cli
pop
dec
jl
sub
out
ret
incl
int
mov
lds
cwtl
loope
lret
cmc
iret
cltd
sub
js
adc
dec
insl
bound
add
mov
in
sub
fisubl
inc
lods
add
xlat
sarl
aad
and
ja
je
rcr
das
in
ret
mov
mov
mov
push
cmp
mov
es
cmp
mov
mov
pop
daa
mov
sbbb
push
adc
sbb
imul
inc
pop
xlat
dec
int
inc
xchg
or
bound
sub
loope
mov
and
ds
mov
mov
xor
insl
ja
ret
pop
or
imul
inc
sub
mov
jno
fs
and
das
cwtl
push
out
out
inc
out
shl
iret
rorb
jnp
xchg
imul
xchg
lods
cli
in
jbe
lea
push
pop
sub
mov
push
stos
fists
inc
mov
push
pop
ss
jb
pop
xchg
sub
xchg
xchg
sub
ficomps
cs
xchg
lret
mov
scas
jle
sbb
popf
cmc
pop
mov
ja
mov
jecxz
mov
jae
dec
dec
movsb
sbb
fcoms
xor
hlt
mov
rorb
and
outsl
insl
add
push
dec
xchg
cmp
pop
jb
inc
or
hlt
fwait
fwait
lret
mov
in
jae
addb
neg
mov
out
test
bound
std
jns
je
pop
mov
mov
push
ficoms
mov
inc
fst
test
adc
leave
mov
xchg
or
inc
dec
lods
jg
jg
jae
pop
sub
mov
add
dec
xchg
mov
sti
aaa
push
xor
sbb
cmpsb
cltd
sti
cmpsl
rclb
mov
imul
inc
pop
cmp
out
mov
pushf
push
ja
adc
and
push
pusha
inc
jmp
mov
je
mov
ror
pop
syscall
roll
shlb
jno
lret
ficoms
mov
dec
pop
and
in
sub
mov
in
neg
adc
adc
mov
xchg
cld
mov
xor
mov
arpl
or
inc
leave
inc
push
aaa
movb
inc
arpl
or
mov
cmp
mov
cli
adc
pop
cmpsl
cmpb
xchg
mov
movsl
aam
shrb
push
movsb
mov
and
leave
leave
shl
and
or
mov
dec
clc
rol
shrl
and
dec
pop
push
cmp
out
mov
iret
mov
pop
and
stos
test
icebp
push
mov
jl
dec
dec
dec
pop
dec
sub
push
cmp
imul
push
dec
xor
pop
movsl
pop
into
cwtl
lcall
push
pop
xlat
add
fstps
jnp
sub
inc
and
inc
jmp
in
and
fdiv
mov
xor
lahf
popf
push
insb
int3
adc
mov
mov
or
data16
int
data16
mov
push
dec
std
push
mov
dec
xchg
fiadds
and
mov
push
mov
cli
icebp
or
sbb
xor
stos
rclb
inc
sti
mov
jnp
cs
in
mov
int
rclb
push
stc
xchg
leave
das
ficoml
cld
cmp
imul
mov
mov
lahf
dec
lret
cmp
pop
xor
mov
rclb
jg
popf
jne
insl
lcall
fsubr
pushf
lcall
ss
cs
xor
cmpl
addr16
cmp
adc
cmc
scas
mov
adc
xor
test
test
scas
xor
inc
fstps
inc
clc
inc
gs
xchg
inc
lret
push
and
sub
clc
repnz
pop
adc
ljmp
mov
push
pop
xchg
inc
sub
sub
pop
nop
sbb
mov
in
add
cwtl
pop
mov
jmp
lock
inc
xor
and
fmul
stos
mov
fldcw
bnd
stos
fdivl
sbb
popf
mov
sbb
xchg
mov
lcall
or
xchg
lret
scas
xor
pushf
mov
jno
data16
xor
jge
adc
jne
aaa
xor
cs
jns
push
adc
pop
in
repnz
repz
call
int3
jae
orb
sahf
ds
icebp
jecxz
push
jnp
xchg
out
jmp
mov
stc
cmpsl
lcall
xor
shl
shl
popl
or
add
push
repnz
jne
xchg
subl
mov
jnp
fdivrs
cld
pop
sets
xor
cmpsl
xchg
stc
fsubrl
add
mov
rcrb
fadd
or
or
std
add
adc
jl
subl
mov
divl
lds
out
jae
cmpsl
stc
dec
add
outsb
fiaddl
imul
insl
pop
mov
add
pop
inc
fwait
mov
lods
sbb
ljmp
or
sub
divb
push
mov
pop
jp
call
dec
jecxz
outsb
shrl
push
daa
push
push
sbb
shll
inc
add
gs
mov
arpl
stos
pusha
lcall
cltd
push
repnz
jp
push
jg
lcall
daa
inc
mov
push
sub
sbb
xchg
pop
sub
mov
or
aas
jns
xchg
mov
mov
lcall
ficoms
xor
jne
stos
mov
ret
andb
xor
add
bound
je
fcomip
xchg
ret
fwait
xchg
dec
inc
test
stos
mov
mov
and
imul
enter
xchg
inc
add
push
aaa
mov
pop
adc
insl
inc
outsb
out
cmp
mov
xorl
jne
shrb
pop
fcompl
lahf
adc
and
fiadds
mov
jp
mov
test
mov
stos
stos
das
cs
enter
sahf
cmp
push
push
sahf
sub
xchg
gs
lcall
into
xlat
imul
ret
mov
ljmp
repz
int
cmp
jp
rcll
loope
out
push
aad
jp
and
lcall
jb
lock
into
xchg
shl
jbe
fwait
jb
es
xor
push
lods
adc
cmpsl
xchg
repz
mov
out
pop
mov
xor
adc
and
mov
out
imul
or
xchg
xchg
and
jmp
sub
or
push
mov
in
ds
mov
lea
into
insb
adc
adc
cli
pop
mov
fnstenv
lds
jle
push
dec
jns
mov
rclb
sbb
lock
mov
push
xchg
icebp
mov
ss
cmp
test
push
adc
les
add
aaa
fwait
rcll
pop
xor
and
sub
loope
outsl
dec
vucomiss
loop
cld
adc
loope
or
imul
ljmp
inc
ds
adc
xlat
int
aad
lds
lods
pop
daa
mov
cmc
adcl
adc
xchg
out
xor
mov
imul
cli
shlb
pop
imull
sbb
adc
stos
addr16
imul
fsubl
dec
mov
subb
lea
mov
or
ret
jl
xor
jge
mov
mov
in
out
adc
dec
test
jmp
subb
push
ja
pop
adc
std
aad
loop
loop
pop
inc
pop
mov
movsl
leave
scas
jnp
fnstenv
mov
adc
mov
fsubrl
pushf
test
push
jp
fdiv
repnz
add
test
mov
repnz
push
aad
add
shll
aas
cmpsl
mov
sbb
xchg
add
xchg
ss
in
inc
rorl
add
cmp
pop
mov
out
pop
outsl
andl
fimull
lahf
and
mov
ds
pop
mov
test
and
fiadds
sub
mov
or
pop
dec
mov
pop
and
rorl
pop
lds
lret
inc
dec
lret
mov
bound
xchg
adc
sbb
lret
mov
jb
sub
cmp
test
dec
and
fstps
push
push
xor
cltd
xchg
repz
les
push
jg
mov
xor
mov
notl
test
xchg
push
movlps
scas
adc
in
cmp
mov
mov
repnz
fcmovbe
pop
cli
pop
sarb
repnz
sub
adc
pop
inc
rcll
pop
enter
sbb
push
gs
add
je
frstor
insb
clc
adc
pusha
insb
js
jmp
das
add
jb
pop
testb
push
mov
and
pop
dec
data16
xor
and
pop
xchg
lahf
mov
inc
arpl
fsts
sbb
sbb
push
ret
adc
and
rorl
scas
mov
jmp
aas
fmuls
or
xchg
cmpsw
movsb
jae
dec
frstor
and
dec
ja
dec
inc
add
scas
je
mov
in
sahf
mov
mov
dec
shlb
push
imul
ja
mov
mov
mov
fwait
stos
or
pop
es
adc
not
call
add
data16
hlt
jae
xchg
sub
sbb
ret
test
test
dec
movsb
cmp
enter
aas
mov
or
mov
fdivrl
mov
xor
mov
sub
mov
sub
push
test
cwtl
popf
mov
ret
cmp
scas
ja
mov
das
mov
dec
xor
push
dec
faddl
mov
cmp
jne
add
adc
inc
lret
in
les
sub
loop
xchg
sub
in
ret
hlt
adc
out
mov
dec
lock
jae
fimull
shll
jmp
fildl
fcmove
test
mov
or
jmp
push
stos
xchg
xchg
xlat
mov
rcll
sub
in
mov
arpl
and
adc
mov
out
addb
ficomps
fisubs
fs
loop
mov
pop
loop
int
test
sub
push
adc
orl
cmp
fistpll
push
pushf
pop
sbb
push
or
std
jbe
loop
cmc
aaa
inc
inc
xor
jo
fsubs
movsl
add
in
jl
mov
sbb
inc
or
and
je
jecxz
xchg
mov
sbb
aaa
and
scas
in
rorl
or
mov
lods
mov
jb
xchg
lods
sbb
incb
scas
dec
arpl
push
cmp
push
dec
es
cld
inc
push
add
mov
and
mov
inc
loop
fistpll
jbe
loope
pop
lret
je
fcompl
xchg
cld
jmp
add
imul
orb
scas
inc
mov
add
cmp
inc
xchg
fsubs
jns
fucomip
xchg
cltd
inc
lret
fdivl
mov
adc
fistpll
jp
mov
out
pop
xchg
cmc
mov
push
xor
ficoms
dec
je
mov
aas
push
shlb
nop
push
es
pop
insb
cs
inc
xor
adc
mov
stc
push
imul
ss
jns
and
sub
pop
loop
out
insl
ljmp
ja
into
icebp
jle
mov
ficoml
mov
movsb
sbb
sub
push
imul
fmul
sbb
in
dec
cs
lock
pop
xchg
pop
in
dec
sub
inc
add
aam
mov
cli
pop
xchg
xor
or
xchg
rorb
insb
aas
xchg
xor
pop
sbb
mov
aam
lock
mov
add
call
jl
sbb
lods
cmp
jp
dec
mov
add
pop
adc
mov
sbb
adc
cmp
subl
decb
sbb
or
mov
scas
mov
mov
jno
aam
loopne
sub
sbb
pushf
cmp
mov
sub
aas
xchg
mov
jmp
lods
xor
xor
cwtl
jmp
adc
into
xor
dec
aaa
sti
icebp
add
mov
or
jl
add
shlb
loopne
mov
out
pop
into
leave
xchg
adc
mov
mov
std
imul
rol
mov
shlb
ret
jns
fstpl
je
sub
xor
out
out
mov
sub
sti
jp
push
sub
sbb
push
iret
mov
and
scas
scas
pop
aad
and
sub
xchg
cmp
mov
iret
push
push
cmp
xlat
lods
jne
sbb
jge
push
out
or
sub
aam
push
leave
dec
mov
lahf
test
inc
or
sub
shlb
cltd
inc
lahf
and
or
cwtl
jmp
sub
and
jns
test
dec
cmp
xor
cwtl
leave
mov
cmp
lret
mov
cmpsl
lods
movb
in
bound
or
inc
sbb
add
jecxz
mov
sahf
mov
ret
in
cmc
mov
popa
cmp
push
outsl
pop
daa
std
sbb
xchg
and
push
jb
pop
leavew
fisubs
popa
popf
mov
inc
mov
jge
stos
jnp
sti
fcoms
inc
lods
jmp
imul
add
sub
or
in
aad
jg
pop
call
push
loopne
ja
out
xchg
cmc
mov
push
fwait
inc
mov
push
emms
dec
sbb
mov
outsb
sbb
in
sbb
hlt
jne
sub
jmp
movsb
add
leave
ret
lods
enter
jecxz
shr
xor
inc
outsl
xchg
or
cmpsl
cmp
jae
fimuls
adc
pop
arpl
les
cmp
test
cltd
jle
mov
adc
cwtl
jae
insl
int3
test
jle
sbbl
cld
imull
ljmp
or
and
repnz
pop
jns
repnz
enter
cmp
xor
dec
dec
sbb
fisubl
cmp
mov
xor
in
xchg
sub
iret
mov
ret
push
movsb
iret
mov
xchg
mov
es
mov
push
lods
mov
and
add
jl
sub
int3
and
xor
add
push
aad
inc
dec
jl
adc
lds
mov
dec
js
lret
iret
addl
mov
mov
mov
xlat
popa
adc
jae
imul
dec
sub
sbb
int3
lds
mov
xchg
cltd
stc
pop
out
fwait
push
sbb
pop
test
outsl
lret
sbb
jae
test
xchg
imul
and
clc
outsl
jp
dec
inc
scas
repnz
sbb
push
ss
cmc
cld
repz
pop
push
dec
inc
into
nop
dec
cmp
stos
sbb
testl
cli
xchg
fsts
insb
lds
sti
loope
pop
sti
pop
push
sub
adc
pusha
dec
jno
cmp
and
mov
hlt
icebp
or
inc
test
aas
cmp
push
sti
mov
ret
pop
jb
pop
jns
pop
out
xchg
sub
iret
leave
shlb
pop
mov
ret
loopne
out
sub
scas
sbb
pushf
insl
mov
loopne
popf
xchg
scas
movsb
dec
add
lahf
movsl
sbb
stos
in
int3
cwtl
popa
fistpl
push
push
cs
push
ds
adc
sahf
test
xchg
in
or
lds
rclb
lds
cmc
daa
push
pop
pop
sbb
cwtl
call
fisttpl
orl
adc
shrb
fiaddl
movsl
xor
addr16
dec
jl
cmp
xor
loop
test
ss
pop
jge
ffree
cmp
jae
js
insb
dec
mov
fdivrl
mov
movsb
iret
or
add
cmp
jge
pop
pop
je
mov
sbb
sbb
subl
sbb
jnp
mov
push
mov
adc
sub
scas
std
das
xchg
mov
adc
int
xchg
jns
dec
test
xor
pusha
xchg
orb
xchg
add
cld
xor
xchg
daa
dec
add
and
pop
dec
push
subl
fbld
inc
js
mov
fstl
je
adc
sbb
cltd
es
add
adc
xor
mov
sbb
xor
popa
mov
into
sahf
in
scas
xor
add
dec
push
repz
jmp
pop
xor
or
pop
and
jno
stos
mov
stos
popa
insb
adc
sbb
or
add
lea
xchg
inc
jno
and
mov
imulb
stc
cwtl
or
in
shlb
cmp
mov
in
or
and
in
lahf
fwait
int
sbb
mov
xchg
push
ljmp
cli
lods
andl
push
push
fcmovbe
push
lea
jb
mov
out
dec
xchg
xchg
xchg
jl
loop
insb
jle
xor
out
jb
cmp
mov
sub
dec
mov
push
js
aas
add
adc
pop
pop
mov
outsl
dec
add
repz
pop
xchg
mov
mov
mov
insl
mov
jns
inc
movsb
int3
aad
jae
fwait
adc
push
lods
rorl
mov
mov
shrb
imul
dec
xchg
fs
test
or
shrl
adc
es
addr16
pop
out
mov
add
pop
add
xor
pushl
idivl
jno
data16
mov
ficomps
fmull
cmp
pushf
loopne
sbb
lds
out
inc
pop
out
xchg
cmpl
lock
xor
sbb
push
pop
inc
xor
shrl
les
inc
addr16
jge
sbb
cmpsb
shrb
sub
inc
rorb
popf
sti
dec
mov
lea
xor
cli
sub
inc
mov
mov
inc
mov
mov
dec
int
sti
or
fsubrs
xlat
es
xor
add
std
mov
push
xchg
shlb
movsl
dec
or
in
xchg
push
mov
inc
scas
out
inc
adc
ret
jno
adc
mov
jns
lods
imul
lds
cmpsl
out
les
mov
aad
lahf
push
mov
cltd
cmp
nop
sub
popa
jns
lods
gs
push
stos
in
mov
stos
roll
lock
adc
scas
jo
insl
lahf
fidivrs
shll
lea
test
sbbb
adc
cmp
sub
jnp
sbbb
cmp
xchg
xor
ljmp
in
outsl
subl
sbb
lea
enter
inc
jne
cmc
add
mov
sbb
pop
roll
or
out
out
stos
movsb
sbb
sahf
mov
call
xor
scas
jp
mov
movsb
sbb
sbb
push
dec
xchg
faddp
jbe
mov
inc
jmp
xor
xorl
push
and
dec
push
or
mov
outsb
je
sub
adc
xor
dec
cmp
sbb
pop
addr16
shrl
or
cli
movsb
xor
scas
sub
xchg
cltd
sti
fcom
push
dec
jb
mov
shrb
xchg
aas
test
gs
mov
cmp
or
ds
lods
xchg
int
pop
jns
adc
xlat
adc
in
pop
test
lahf
adc
pop
jecxz
and
in
rorb
jmp
mov
testl
lret
movsb
jb
clc
sbbb
mov
test
adc
lds
add
inc
daa
ss
or
xchg
jg
dec
and
sub
rol
shrl
loop
or
enter
dec
xchg
inc
mov
ret
push
call
pusha
mull
cmp
mov
sbb
icebp
adc
mov
dec
ret
insw
aaa
aaa
iret
push
sub
sub
inc
jg
xor
jecxz
int3
pusha
notl
test
push
pop
adc
inc
mov
mov
jo
ds
mov
shrl
xchg
movsl
out
mov
stc
test
fs
out
ss
stos
xchg
out
xchg
cmp
add
push
data16
jecxz
outsl
dec
xor
cmp
jno
mov
dec
outsb
sbb
or
pop
mov
inc
dec
pop
push
pop
mov
test
mov
or
dec
outsb
push
push
push
aas
stos
insl
xchg
xchg
sub
dec
inc
mov
mov
cli
xor
jae
js
js
mov
and
imul
loope
lret
dec
cld
add
je
ja
pusha
mov
pop
pop
jl
loopne
icebp
clc
call
test
aaa
add
pusha
inc
mov
jmp
push
lahf
rcrl
and
jb
movsl
xchg
jl
and
sub
bnd
xor
push
ds
lds
popa
inc
adc
push
cmp
fs
stc
movsb
add
jle
popa
mov
inc
dec
ss
add
xlat
bound
in
xor
or
mov
push
jo
jl
insb
insb
shlb
fisttpll
popa
inc
sub
inc
mov
scas
loope
insl
push
ret
jl
cmp
sub
in
das
sbb
and
popf
jae
push
popl
stos
icebp
js
inc
add
pop
lods
mov
xchg
cltd
imul
cmp
in
mov
jnp
lds
dec
mov
cmp
outsl
and
adc
ja
movsb
shl
jnp
loop
sbb
pop
mov
daa
adc
xchg
into
ljmp
xor
jmp
mov
dec
xor
jl
imulb
xor
mov
dec
clc
mov
hlt
stos
jp
mov
insl
cwtl
dec
fists
mov
movsb
rcl
fld
push
mov
div
mov
cmc
gs
add
popf
push
mov
lods
sbb
dec
mov
test
pop
lahf
sar
xor
subb
je
sbb
movsb
jp
wbinvd
cmp
jb
sbbb
int
xchg
repz
femms
cmpsb
std
pop
mov
inc
inc
mov
jbe
adc
xchg
or
push
insl
mov
dec
testl
lahf
sbb
cmc
arpl
stos
and
inc
and
cmp
push
xor
test
adc
sahf
out
ret
push
or
bound
adc
aaa
inc
cmpsb
and
das
inc
movsb
sbb
cmp
arpl
aas
pop
jno
xchg
movq
xchg
or
cmp
aas
cmpsl
sbb
jno
into
fcomps
loopne
push
jg
sbb
jo
repz
jge
fisttps
mov
rorl
imulb
push
jns
into
data16
jecxz
data16
jae
iret
insl
push
and
pop
inc
and
jp
lret
mov
mov
xor
sahf
xchg
js
jb
aas
movsl
jle
aad
out
mov
or
int3
jmp
ljmp
dec
push
xor
mov
xlat
popf
rolb
daa
push
inc
nop
mov
enter
and
notb
icebp
inc
jb
pop
mulb
lods
sbb
mov
or
outsb
mov
sub
fdivl
lahf
addr16
into
ficoms
or
insl
and
shl
jne
sub
push
mov
cwtl
and
and
bound
or
jbe
sub
mov
frstor
pop
push
in
pop
pop
push
dec
je
cmp
clc
cmp
mov
shrb
bound
pop
sbb
into
mov
cmp
mov
jle
out
insl
fs
or
movsl
loopne
pushf
fdivl
lds
leave
dec
cmpsb
xchg
xor
or
xchg
or
imul
scas
sub
inc
mov
fidivl
mov
repz
or
sub
pop
mov
nop
lock
insb
dec
sbb
cmc
lcall
adc
sub
cld
and
fnstsw
push
data16
inc
dec
mov
rclb
ja
imul
cmpsl
push
sub
mov
mov
mov
push
dec
scas
or
cmp
jecxz
sub
mov
cmc
inc
cmpsl
xchg
test
sbb
loop
cmp
data16
imul
jmp
faddl
jnp
and
jle
jb
pop
movsl
inc
or
les
out
sub
shll
mov
fisubrl
mov
jle
mov
mov
push
push
popf
mov
push
xchg
test
xlat
bnd
rcrb
jp
inc
dec
xlat
daa
clc
ficompl
movsl
cmp
scas
arpl
push
or
repz
stos
and
scas
dec
add
mov
fisttpll
or
andl
ret
shlb
or
pop
clc
in
test
xchg
cmp
rep
icebp
paddusw
mov
call
and
xorl
lods
pop
jp
jg
push
repnz
icebp
xor
mov
cmp
xchg
jmp
xchg
dec
cmp
mov
shl
negl
sahf
or
sub
rol
jle
xor
fmul
hlt
mov
xor
pushf
popf
lods
pop
mov
jne
pop
push
bnd
in
ret
pop
lock
dec
mov
pop
cwtl
int3
mov
fld
and
jbe
mov
and
mov
push
mov
ret
enter
enter
mov
rcll
rcll
pop
jmp
mov
mov
add
pop
rorl
mov
inc
pop
mov
pusha
dec
cwtl
jno
or
push
jle
inc
push
push
jno
jnp,pn
push
mov
shlb
mov
jmp
dec
lret
push
loop
dec
sub
and
outsb
xor
adcb
lret
int
mov
aam
mov
push
mov
popa
fsubrp
loop
xchg
add
cmp
and
push
rcrb
pusha
rorl
clc
adc
iret
add
sub
xchg
stos
test
sbb
scas
sbb
adc
sbb
ja
mov
out
jp
pop
orb
in
adc
sahf
mov
lods
xor
loope
loop
inc
jge
and
loopne
cmc
and
cmp
or
or
pop
cmpsb
mov
fildll
xchg
jmp
outsl
repz
or
cwtl
sbb
aad
push
decb
add
scas
cli
cmp
leave
out
int
js
add
xchg
test
aam
imul
outsb
pop
lahf
jmp
xor
mov
push
and
xor
sbb
sub
pop
stos
pop
sarb
loope
stc
shrl
xchg
jmp
and
rorl
and
mov
mov
or
push
lcall
push
and
inc
scas
fwait
xchg
mov
add
push
insb
ret
out
or
enter
fisttpl
dec
or
mov
jl
fs
mov
cmpsb
dec
or
cltd
mov
xor
xchg
ds
popf
cwtl
sbb
mov
movsl
fwait
ret
clc
ljmp
or
mov
pusha
mov
adc
xchg
jmp
repnz
sub
pop
icebp
adc
sbb
fnstenv
cmp
pop
xchg
sahf
dec
or
pop
lahf
pushf
or
out
add
addr16
fstl
push
and
iret
into
mov
jnp
ficompl
mov
dec
cmp
roll
fidivrs
lret
ud0
and
pusha
je
int
shr
movsl
xchg
outsb
fnstsw
pop
fimuls
push
je
pop
xchg
lods
fimull
rolb
pop
dec
dec
xor
pop
xor
sahf
rclb
addb
jg
fists
cmp
inc
leave
sbb
ljmp
js
or
jle
xchg
js
clc
clc
in
cmp
add
adc
ss
push
inc
adc
lds
std
push
mov
out
inc
jns
addr16
inc
add
rol
cltd
add
jl
cmp
stc
cmp
inc
div
mov
and
inc
xchg
dec
ret
mov
sub
jp
cmpsl
push
aad
xchg
sbb
fstl
pushf
dec
fnsave
mov
enter
shll
pop
xchg
ja
arpl
lods
pop
outsb
cmp
xor
lock
jb
sbb
inc
mov
cmc
in
sub
cltd
adc
mov
pop
cmc
sti
out
mov
xchg
jb
mov
xor
sbb
mov
nop
push
repz
imul
inc
popf
and
fwait
mov
and
xor
and
cs
dec
cmp
into
nop
out
sub
pusha
sarl
je
test
adc
push
add
push
xor
or
add
push
xchg
movsl
xchg
pop
scas
lret
adc
push
cmpsb
mov
mov
push
fwait
mov
movsb
sahf
les
dec
xor
pop
push
nop
xor
cltd
add
loop
jmp
and
sti
jne
ret
std
rcrl
jl
ljmp
mov
aaa
mov
xor
mov
mov
out
jecxz
ret
test
pop
fsubs
pop
cmp
or
stos
test
xor
popl
and
fwait
mov
push
sub
pop
fistl
scas
popa
pop
pop
lock
inc
add
outsl
mov
mov
cmp
outsb
call
out
outsb
add
jecxz
xlat
push
movsb
mov
hlt
lret
vaddps
push
or
aaa
mov
ja
add
push
mov
mov
stos
jne
stos
mov
decb
cs
fisttps
pop
mov
pop
fs
and
lds
hlt
mov
jge
stos
movsl
pushf
xchg
scas
inc
fcomip
push
xchg
in
cmpsl
ljmp
mov
ja
jbe
cli
lahf
mov
js
fidivl
aas
push
xlat
mov
cs
lock
inc
pop
and
lahf
testb
sub
push
rcr
rorl
push
push
push
fcmovne
sub
call
mov
jecxz
leave
add
xor
imull
aad
stc
test
lahf
push
jg
cwtl
in
ljmp
repnz
mov
lcall
sbb
dec
popf
mov
mov
mov
mov
xchg
inc
or
sub
pop
stos
dec
data16
push
sub
fistps
pop
andb
jg
push
pushf
xor
mov
loopne
test
loopne
pop
add
lret
jmp
mov
cltd
adc
popf
out
ret
jmp
sub
push
leave
movsb
aam
or
call
sub
dec
movsl
mov
xor
outsl
mov
lret
dec
cmp
lret
mov
dec
lret
cmpsb
mov
add
jbe
sbb
pusha
daa
mov
adc
add
add
xorb
lahf
sub
adc
int3
jp
mov
and
and
push
push
and
push
add
dec
push
add
gs
inc
mov
fucomp
jae
int
jns
xchg
stos
dec
pop
andl
es
fstps
fistl
mov
out
jo
lcall
mov
jp
inc
insl
lret
xchg
dec
inc
repnz
fadds
imul
jb
jnp
adc
fidivrl
into
leave
in
mov
mov
push
shrb
adc
repnz
icebp
or
push
lea
mov
mov
mov
sbb
mov
or
add
jb
push
test
push
push
lahf
mov
sbb
or
cwtl
cmc
mov
rol
movsb
rcpps
fldt
cld
in
inc
mov
int3
adc
sbb
cmp
mov
xchg
push
or
and
push
pop
xor
lret
pop
imul
and
sbb
xor
inc
and
xor
or
cwtl
xchg
jg
in
dec
cmp
sbb
add
jne
into
and
movsb
popl
je
addr16
int
int3
push
push
push
xchg
test
mov
push
enter
je
push
into
sub
js
fdivrl
pop
add
mov
bound
jbe
loope
lods
cmp
mov
and
xorb
inc
inc
or
push
adc
pop
push
imul
push
aad
repz
pop
jns
dec
es
add
cwtl
insl
fwait
daa
pop
pusha
pop
sbb
cltd
mov
aas
fisubs
mov
sbb
mov
xchg
fdecstp
loope
in
and
mov
out
xor
lock
cld
pushl
hlt
movsb
pop
lds
repz
push
lcall
jns
pmullw
test
mov
lock
icebp
sbb
xchg
enter
scas
repz
addr16
sub
pop
mov
xor
mov
rorl
mov
jp
cltd
mov
pushf
push
inc
add
xchg
mov
xorb
push
xchg
jb
sbb
cmc
jp
insl
push
stc
mov
cmpsb
std
pop
jae
push
lahf
ds
shll
inc
add
mov
mov
sbb
fsubrp
ljmp
sbb
out
xchg
mov
jg
adcl
adc
sbb
mov
jle
sbb
adc
aam
jo
rcrb
mov
xchg
pop
aaa
fadd
inc
and
lea
lahf
rcr
sbb
in
mov
sbb
xor
out
test
stc
fstpt
jle
and
scas
shl
mov
cmpsl
lea
in
popa
loopne
mov
inc
fldl
jle
mov
jb
inc
rcr
out
push
aaa
stos
hlt
test
fistl
or
pop
jmp
sub
stc
push
pop
sub
test
mov
lret
mov
int3
in
arpl
out
cs
jbe
mov
stos
sbb
nop
adc
mov
dec
mov
test
push
popa
cmp
mov
hlt
jnp
xchg
mov
push
mov
dec
jae
mov
inc
xchg
xchg
sti
inc
outsb
mov
dec
aaa
cmpsl
inc
and
or
cmpl
mov
mov
and
push
jecxz
sub
mov
dec
loope
pusha
les
popl
test
loope
jp
pop
into
sbb
push
pop
loop
lahf
or
ds
push
push
push
int
or
mov
cli
es
xor
sub
cs
jnp
gs
xchg
xchg
xor
data16
mov
sub
xor
jno
ja
or
js
xor
sub
pop
stos
push
pop
mov
xchg
cmp
jl
jecxz
mov
xor
pop
jno
add
cmp
notb
std
add
jno
pop
push
aad
pop
cmp
push
in
aad
or
and
pop
adc
adc
ds
cld
xchg
sbb
fnsave
test
les
lret
bound
test
cmp
std
push
mov
mov
push
push
sbb
aad
scas
daa
inc
aas
fldt
cld
or
or
dec
push
daa
cltd
xchg
push
sbb
dec
pusha
mov
xchg
or
mov
push
repz
push
pop
lock
rolb
xor
cmp
mov
cmp
jl
lock
aam
fidivrl
leave
sbb
sbb
daa
stos
mov
ret
pop
enter
mov
pop
jge
stc
aam
or
and
xchg
mov
int3
lret
mov
push
lcall
jb
cmp
lret
pop
test
push
int
push
fs
iret
xchg
push
das
shr
push
adc
scas
fs
sbb
jne
icebp
inc
icebp
imul
data16
sub
jne
sub
inc
gs
repz
mov
lret
jae
filds
sbb
pop
shlb
dec
cmc
sbb
jp
adc
ss
mov
fldcw
das
fldl
subl
mov
pushf
pusha
cmpsb
loopne
mov
xchg
cmp
cmp
dec
dec
cmp
or
shrb
adc
sbb
xor
xchg
leave
jns
fmul
pushf
push
dec
es
mov
int3
into
aad
int
cld
jecxz
sbb
mov
xchg
rclb
inc
adc
mov
cli
mov
das
pop
xor
mov
xchg
inc
or
hlt
sahf
push
or
lahf
adc
or
es
cli
push
into
cmpsl
dec
xchg
icebp
mov
jne
xchg
pop
mov
cwtl
mov
fsubs
into
inc
xchg
sbb
mov
sub
xchg
test
mov
les
cs
in
sub
addr16
xor
sbb
push
sub
push
pop
orl
xchg
fsubrl
pop
pop
pop
cmpps
leave
add
stos
lcall
jb
dec
pop
and
insb
xchg
sbb
aam
lahf
cmpsb
jg
in
out
add
std
ret
inc
cwtl
adc
add
mov
out
and
test
sbb
outsb
mov
out
mov
mov
pop
in
pushf
mov
pop
shlb
dec
repz
test
cli
mov
ss
loopne
mov
and
pop
cmpsb
int
dec
lock
xor
or
leave
xor
les
out
adc
push
xchg
xchg
fcmovu
pop
mov
xchg
xchg
push
push
sub
rcrl
cmp
xchg
mov
loope
mov
loop
test
in
fwait
test
mov
out
pushf
into
je
int
jo
mov
enter
ds
xchg
insb
xor
push
sahf
pop
xor
out
repnz
test
pop
or
or
ret
shll
cmp
cli
adc
cmp
xor
or
ja
ss
sbb
ficoms
icebp
add
adc
repnz
ljmp
es
xor
mov
inc
and
push
sahf
jecxz
loopne
popf
sub
test
mov
adc
mov
jg
mov
ret
insb
ret
enter
repz
sarl
jns
mov
iret
lret
push
sbb
data16
add
mov
fs
cmc
push
movsb
lret
pop
ja
sbb
inc
neg
icebp
xor
ret
push
xor
std
fdivl
jnp
ret
mov
mov
cmpsl
nop
out
or
stc
out
cmp
lret
push
xchg
fcomps
cmp
xchg
pop
nop
mov
in
aas
sbb
inc
add
push
mov
movsb
call
cmp
adc
add
repnz
aam
sar
xchg
aad
stos
aas
shr
mov
imul
fists
dec
adc
fists
scas
mov
stos
push
cmp
imul
das
mov
not
push
dec
dec
les
ret
mov
ljmp
imul
gs
lcall
adc
mov
jno
jnp
movsb
cmp
cmpsl
cwtl
outsb
fmulp
sub
pop
stos
in
mov
cmpsl
mov
xor
jp
mov
imul
push
out
cmpsb
subb
mov
jecxz
std
mov
aaa
push
xchg
jb
in
jecxz
scas
ret
mov
hlt
lahf
insb
cwtl
imul
mov
pop
mov
dec
add
aam
fs
and
sbb
mov
xor
pop
and
loopne
and
sbb
shlb
cwtl
inc
or
in
push
fwait
push
inc
fistpll
outsb
inc
cld
inc
test
pop
ljmp
inc
adcb
cmp
mov
push
mov
enter
cmp
sti
jge
add
sub
fistl
or
int3
and
stos
or
pop
test
dec
push
aas
aad
aam
push
push
mov
outsl
andb
repnz
dec
mov
fisubl
or
xor
inc
push
insl
pop
cmp
rorb
stos
roll
sub
add
adc
sub
loop
xlat
mov
jmp
xchg
xor
cmp
sub
bnd
stos
push
jne
mov
xchg
mov
fldcw
out
fbstp
es
and
xchg
gs
jecxz
je
lds
sbb
daa
test
out
aam
sbb
push
cmp
sbbb
push
std
or
cltd
dec
or
out
mov
push
in
cmp
rorb
outsl
dec
adc
and
mov
xor
lret
les
sbb
aas
std
inc
enter
mov
insl
xchg
inc
imull
insb
addb
jl
sub
ja
addl
mov
clc
enter
jbe
mov
adc
dec
movsb
lret
mov
inc
xor
outsl
dec
imul
adc
lret
sub
inc
inc
push
dec
out
inc
shr
jmp
inc
adc
in
xchg
cmp
aaa
pop
and
pop
xchg
test
pop
rorb
dec
mov
sbb
add
adc
dec
push
jecxz
mov
lods
adc
movsb
sahf
mov
scas
sahf
inc
mov
cmp
test
test
nop
pusha
aas
add
sub
mov
dec
sbb
pop
dec
jns
dec
in
rclb
scas
xchg
push
mov
lods
push
pop
jb
enter
sbb
and
jnp
shl
out
push
inc
int3
jns
ret
stos
fldl
jnp
pop
in
cmp
or
outsb
jns
cmp
and
mov
pop
mov
repz
std
aas
sti
inc
sbbb
in
ljmp
imul
dec
je
inc
sbb
dec
imul
and
shll
fsubrs
aam
lock
xchg
sub
or
jno
cmp
pop
sbbb
push
dec
pop
ljmp
xchg
lahf
or
xor
in
push
insl
lods
sbb
call
mov
dec
sbb
imull
pushf
push
cwtl
dec
in
outsb
mov
lds
dec
jo
jb
adc
xchg
jge
andl
insb
repnz
xor
jne
psubusb
rsqrtps
test
std
pop
sarb
cmp
xchg
imul
fbstp
ret
in
sbb
int
das
sti
jbe
fistl
fsubs
push
sub
jg
pop
pop
and
mov
pop
fcompl
sbb
stos
mov
popa
xor
cs
xchg
push
mov
cmp
in
pop
mov
add
xchg
pop
cmp
jnp
and
cmova
add
rol
fisubs
lods
xchg
xorl
push
js
test
fisttpl
bound
or
lock
mov
insl
shlb
mov
and
jl
repz
jmp
dec
mov
imul
pop
cli
sbb
jecxz
aaa
popa
rcll
subl
xor
adc
repnz
inc
cmp
ror
mov
push
cmp
inc
jo
sbb
pusha
cld
nop
out
js
ret
mov
mov
int3
mov
movsl
jnp
ss
pop
inc
fmull
and
dec
shrb
add
mov
mov
pop
fwait
mov
out
nop
add
mov
movsl
jmp
inc
pop
pop
ljmp
dec
adc
push
clc
mov
lcall
mov
clc
mov
and
sarb
nop
das
pop
repnz
inc
imul
cmp
inc
and
jbe
mov
push
push
jmp
lds
test
push
jbe
sbb
inc
mov
aas
xor
test
das
push
clc
cmc
add
sub
addr16
pop
leave
inc
movsb
in
sub
adc
mov
jmp
pushf
shr
or
ret
adc
xchg
jb
out
mov
cltd
or
popf
jge
not
in
xor
das
inc
fdivrl
cwtl
or
add
adc
ret
lret
arpl
imul
pop
das
enter
shrl
mov
fisubs
pop
insb
mov
dec
cmp
mov
pop
xchg
out
fwait
push
jp
sbb
adc
jo
jne
mov
lds
rol
push
inc
xchg
cmp
inc
mov
ja
jg
divl
in
pop
icebp
outsl
pop
fisubrs
push
sbb
dec
jge
jne
lahf
or
push
rcrb
sbb
sbb
fistl
fnsave
sbb
cli
pop
xor
ucomiss
aaa
icebp
or
mov
int
push
lods
and
add
adc
xor
jo
push
leave
mov
in
inc
adc
mov
popf
inc
outsl
xor
inc
fldt
mov
das
shlb
jle
xor
cmp
xlat
jno
je
push
fisttpll
je
inc
jae
fistpll
inc
mov
jg
pop
out
inc
xchg
out
into
lret
push
stc
dec
mov
popf
mov
jle
data16
xor
icebp
jge
insl
adc
into
xchg
mov
idivb
cli
gs
pop
enter
call
mov
xchg
sti
rclb
pop
test
xchg
cmc
fiadds
dec
jmp
sbb
xchg
push
add
inc
and
jnp
add
shlb
xchg
call
fistpl
stc
std
in
push
push
and
enter
lock
pop
loop
mov
cmp
push
or
outsb
iret
sbb
lret
pop
mov
push
lcall
mov
fs
mov
jno
push
dec
inc
iret
lahf
in
in
in
shr
inc
rorb
jmp
arpl
pop
cmp
inc
jbe
shlb
jl
mov
mov
test
xor
add
jecxz
sub
fsubrl
cmp
ret
jo
pop
pop
fst
addr16
mov
vmovups
and
xor
mov
stos
sub
test
dec
mov
insl
iret
pop
cmp
fdivl
and
mov
or
adc
jns
lahf
dec
jae
ror
insb
nop
lahf
jmp
cmp
mov
mov
jb
iret
orb
adc
sub
roll
push
and
push
arpl
shr
cld
adc
js
aad
insl
imul
incl
adc
adc
push
mulb
sbb
xchg
mov
xchg
xor
cmpsb
mulb
jle
dec
and
mov
fwait
movsb
and
ja
cmpb
push
xor
push
test
scas
shlb
movsb
aas
aam
sub
js
cmp
cmp
sbb
mov
jle
lods
sub
mov
orb
cld
mov
mov
adc
push
and
and
sbb
inc
mov
pop
cmpsl
push
aas
and
loopne
cmp
fucom
out
jnp
test
fisubrs
add
xchg
rcl
inc
shlb
dec
in
imul
xor
add
xor
pop
setnp
xor
lahf
mov
jo
fwait
push
ds
stos
add
jbe
sub
andl
popf
das
and
mov
shl
push
inc
idivl
insl
xchg
inc
push
mov
int
out
les
cli
adc
sub
pop
push
dec
pop
test
movsl
and
or
jmp
inc
ret
xor
ss
or
and
or
ficoml
pusha
sbb
xchg
notl
push
jg
jb
test
or
mov
mov
push
fnstenv
dec
sub
ljmp
lods
dec
clc
add
ljmp
mov
adc
jno
stc
jnp
mov
shrb
mov
jmp
cmpsl
les
mov
in
cltd
sbb
jbe
sbb
push
mov
sub
inc
outsb
leave
xchg
sub
sub
push
or
icebp
fidivl
leave
cmp
popa
insb
cmpl
movsl
iret
test
sub
sbb
test
mov
jb
adc
lret
xchg
test
mov
push
call
xlat
xchg
mov
mov
rcll
xchg
sub
rdpmc
cmpsl
clc
testb
call
jne
fiaddl
or
add
jge
cltd
or
cmpsl
adc
pushl
add
pop
rolb
ret
mov
clc
out
mov
clc
inc
in
ja
xchg
hlt
xchg
cmp
outsb
and
repnz
scas
popa
pop
mov
fldcw
mov
scas
add
sahf
cltd
sub
neg
in
mov
aas
push
push
sbb
push
clc
add
mov
fsubrp
dec
ficoms
mov
push
sub
sub
mov
cmp
in
mov
lods
das
mov
pusha
mov
outsl
jo
cmp
lods
mov
and
adc
movups
icebp
or
mov
dec
fdecstp
mov
fmulp
lret
sub
test
popa
les
cwtl
inc
mov
jns
ljmp
dec
incb
mov
and
int3
ret
dec
jecxz
jb
add
enter
jg
rorl
mov
ss
imul
mov
mov
cltd
imul
mov
inc
mov
pusha
adc
sub
enter
xor
xorb
outsl
pop
cltd
jle
rorb
loopne
jb
nop
pop
push
hlt
insl
jg
jl
adc
out
pop
dec
dec
jne
mov
add
lods
sti
mov
push
sbb
mov
mov
lret
and
int3
stc
adc
jne
data16
stos
dec
dec
mov
dec
mov
lahf
adc
and
mov
fnsave
shr
test
mov
out
icebp
push
into
mov
inc
mov
pop
rcll
fcmovb
fidivl
fwait
fs
dec
adc
sbb
dec
sub
mov
ljmp
call
sbb
movsb
pop
movsb
sub
ja
js
mov
mov
sub
aad
sub
or
jno
add
dec
popf
loop
imul
daa
mov
jb
ljmp
push
cwtl
push
jnp
cmp
mov
inc
or
sub
adc
mov
aam
xor
cltd
out
push
sbb
xchg
es
dec
daa
fdivr
idivb
add
addr16
sbb
je
push
ficoml
push
sbb
test
pushf
pop
jo
jne
call
mov
mov
incb
mov
inc
movsb
clc
xchg
aad
xchg
pop
inc
iret
and
enter
and
rclb
xor
pop
arpl
gs
jg
jns
js
jmp
dec
cwtd
js
lret
test
sbb
jns
mov
negb
jge
add
dec
push
push
popa
mov
fsubrs
adc
cmc
cmp
insl
adc
add
mov
fsubrs
jp
mov
stc
daa
shll
xchg
scas
xor
cmp
jmp
nop
mov
lret
xchg
or
xlat
inc
xchg
cli
aam
or
mov
ret
push
xlat
shlb
test
mov
int3
adc
loopne
test
pop
jp
sbb
mulb
adc
stos
stos
mov
cmc
cmp
push
and
fidivs
push
cmp
push
mov
adc
mov
loop
stc
or
test
pop
cld
inc
fsts
out
repz
cwtl
call
cmp
out
test
nop
mov
ds
mov
sub
add
sbb
cmpb
outsb
and
xchg
or
xchg
out
cmpsb
stc
and
add
outsb
out
shlb
daa
outsb
int
push
push
jecxz
pop
inc
bound
sbb
loopne
jle
mov
push
mov
negb
in
mov
lcall
cli
out
fs
sahf
iret
arpl
fdivl
loop
cmp
mov
sbb
arpl
hlt
jno
enter
jae
add
nop
jo
push
test
insl
sahf
jmp
popa
adc
mov
fs
xchg
xchg
inc
js
add
aas
scas
xorb
data16
cmc
rcll
js
aam
add
imul
xor
cmp
inc
into
xchg
call
xor
sbb
and
mov
gs
push
and
adc
outsl
rcrl
loope
incl
js
fldcw
dec
cs
pop
push
frstor
insb
pusha
fcoms
mov
sarb
jmp
push
jns
jle
inc
add
int
push
shr
jge
inc
mov
adc
pusha
cli
xor
sbb
gs
xchg
test
sahf
or
xchg
mov
jbe
mov
mov
jl
jmp
add
xchg
jecxz
mov
add
test
or
inc
test
dec
or
jae
enter
inc
or
adcl
scas
std
or
cmp
lock
ja
sub
sub
add
cmc
data16
inc
mov
js
sub
or
jae
pusha
cli
loope
mov
testl
out
subl
shlb
fidivrs
sar
jle
jmp
xor
mov
les
call
lock
or
mov
pop
out
repz
maxps
add
jmp
jns
out
lods
add
adc
mov
jg
mov
inc
pop
push
mov
jle
jp
in
js
fimull
inc
and
add
nop
ja
out
lret
inc
adc
pop
pop
push
scas
scas
daa
add
push
sub
dec
lret
notb
ffree
sahf
sub
jo
inc
jnp
push
pushf
lds
mov
mov
add
stc
mov
nop
jge
xlat
hlt
pop
stos
jp
das
out
jnp
int3
jae
mov
adc
jbe
sub
addr16
jmp
lret
cs
clc
xorl
push
imul
sahf
pop
sbb
test
or
mov
daa
jle
mov
pop
xchg
xor
xor
xlat
dec
mov
dec
pop
sbb
dec
add
pop
sbbb
mov
jge
call
push
cli
jp,pt
fs
movsl
cld
int3
addr16
sub
mov
sbb
fildl
lret
into
rorl
jb
dec
shlb
roll
jne
aaa
push
jle
negb
and
sbb
mov
fwait
sub
stos
packsswb
in
mov
push
jns
out
in
addr16
popf
mov
sbb
push
xchg
imul
lock
fsubr
mov
mov
add
push
jecxz
mov
fs
test
mov
test
in
jb
xorl
fwait
add
mov
xor
sbb
movsl
jae
out
leave
int3
or
mov
mov
imull
mov
andb
xlat
enter
push
push
repz
jl
popa
push
xchg
popa
push
outsb
in
cltd
fiadds
lods
lcall
in
cmp
mov
cmpsb
push
push
push
adc
jl
lods
cmp
xchg
notb
or
or
daa
xor
add
jp
or
push
in
insl
idivb
add
sbb
ficoml
fdivrs
adc
cmpsl
sbb
and
xor
shr
jmp
mov
jo
adc
bound
daa
fwait
inc
push
das
mov
into
jo
mov
push
dec
xor
push
sub
cld
scas
jns
dec
jbe
mov
sbb
imul
mov
fdiv
addr16
int
mov
arpl
mov
add
add
out
mov
mov
cmc
xor
mov
orl
pop
jp
je
fucomip
mov
imull
xor
add
mov
adcb
movsl
adc
aaa
ds
xor
and
dec
pop
jne
cmp
cmp
sahf
or
and
orb
xlat
cwtl
pop
cmp
sbb
xor
push
dec
shlb
in
and
inc
pop
push
cmp
lret
out
mov
out
and
lds
mov
sahf
xchg
dec
cmp
mov
push
out
adc
xchg
dec
inc
in
push
and
stc
scas
loopne
jecxz
test
enter
sbb
stc
leave
and
iret
cli
inc
cltd
fsubr
add
lea
ljmp
mov
rcrb
adc
mov
lods
xchg
add
aam
clc
movsl
add
and
jo
or
dec
jnp
andl
stos
mov
inc
adc
cmpsb
push
es
xor
xor
ss
in
cmp
sub
pop
movsb
pop
adc
movsl
sub
sbb
cs
xor
cmp
mov
xchg
mov
mov
and
sbb
iret
or
es
fcomps
add
cmc
and
or
inc
es
mov
mov
xchg
sbb
add
inc
pop
repnz
pop
int3
sbb
nop
jb
adc
into
sub
add
or
adc
jp
mov
xlat
pop
inc
dec
cmp
pushf
fs
xor
jne
sub
clc
jae
xchg
or
adc
dec
cltd
jae
xor
push
sbb
ret
mov
aaa
add
repz
jmp
push
cli
or
push
cmp
shll
daa
pushf
and
jo
jo
pop
xor
aaa
xor
shrb
icebp
mov
insb
mov
out
daa
jns
cmp
clc
out
out
cmc
cmp
iret
pop
sub
lret
in
dec
aam
and
mov
sub
ja
push
aam
cwtl
cmp
fldl
lahf
lcall
lods
and
and
daa
sub
pop
gs
aam
lock
push
mov
je
into
xor
mov
std
data16
jbe
cmc
jge
mov
mull
dec
into
xchg
xchg
sbb
adc
cmpsb
jne
push
jle
cmp
mov
fwait
sub
cld
sbb
pop
subb
bound
inc
dec
add
sub
jmp
aad
xchg
mov
cmp
add
mov
dec
jge
mov
js
pop
frstor
pop
pop
loope
lahf
push
sbb
outsb
fidivrl
fistps
mov
sub
push
nop
fimull
iret
xchg
cmpsl
and
push
or
ret
fwait
fdivrs
hlt
and
movb
inc
lea
inc
mov
jae
lods
insl
cmpsl
xor
push
xchg
add
dec
in
int
dec
ret
shlb
mov
fld
in
aam
cltd
bswap
shlb
sub
inc
mov
out
push
lahf
adc
adc
ljmp
adc
xor
outsl
mov
aaa
pop
sbb
push
cmp
mov
fnstenv
and
pop
mov
jnp
fs
fwait
sbb
je
sbb
rcl
fcmove
jbe
jae
jle,pn
cli
test
mov
sbb
fbstp
push
add
ss
dec
mov
sbb
iret
icebp
and
lret
adc
push
pop
int
adc
fldz
rorl
into
inc
popf
addb
jnp
das
mov
mov
jmp
and
jge
and
xlat
lret
enter
sbb
out
add
sbb
cmp
sub
icebp
mov
das
js
ret
inc
jno
bound
mov
out
lea
int3
lahf
xchg
mov
cmc
mov
cmp
xor
mov
movsl
aad
dec
jnp
movsb
and
xchg
lahf
mov
shrl
mov
hlt
inc
cmp
mov
jno
mov
and
or
adc
out
sub
pop
xor
push
mov
ret
mov
xchg
push
imul
ret
xchg
add
fbstp
fwait
sbb
or
test
fwait
sbb
xor
imul
int
adc
adc
ret
adc
flds
pop
pop
xor
pop
leave
mov
data16
dec
sub
in
push
jmp
xchg
pop
popf
test
mov
pop
cmpsl
mov
and
xlat
cmp
jg
addr16
inc
jmp
jge
xor
cmp
aaa
cs
push
jmp
xor
outsl
cmp
jbe
dec
xadd
sbb
loop
sti
mov
mov
hlt
dec
mov
or
out
out
repz
xor
xchg
lcall
jecxz
jl
aas
dec
mov
inc
and
call
dec
scas
xor
xchg
out
clc
xchg
jbe
and
push
pop
insl
dec
push
out
pop
cmpl
push
out
sbb
mov
add
push
mov
mov
and
or
or
ja
adc
hlt
fstpl
lea
inc
mov
ds
lahf
inc
ja
mov
lock
xlat
xchg
rcrl
push
push
or
push
jge
mov
icebp
inc
stos
in
aam
bound
sahf
aas
jb
push
lods
jecxz
dec
push
ljmp
and
aad
cld
sub
in
lods
jle
data16
mov
inc
aas
outsl
cmp
jbe
sbb
push
jae
movsb
dec
ss
in
pop
das
mov
and
xchg
ss
push
dec
mov
inc
ja
push
ljmp
cmp
js
cmc
sub
jns
fdivrl
jae
jmp
in
sarb
pusha
leave
jl
or
int3
aaa
xchg
rcll
es
ds
sub
rolb
bound
cmpsl
push
dec
add
sub
add
int3
or
out
lret
test
xor
dec
rorb
sbb
and
int3
scas
add
xor
ret
pop
sub
hlt
mov
fisttps
insl
mov
or
jle
cmp
out
pop
dec
rorl
daa
adc
mov
psrld
cmpsl
sarb
aam
sar
xor
mov
xor
in
fisubrl
ficompl
push
dec
xor
mov
dec
cmc
sub
ficoml
mov
adc
dec
in
sbb
inc
dec
mov
aas
add
sahf
lret
push
and
pop
sub
inc
stc
sub
lea
push
mov
popa
shll
flds
push
scas
scas
add
out
jb
stos
inc
add
aaa
cmp
hlt
push
jmp
inc
sub
xchg
cs
lods
pusha
sub
jecxz
or
stc
dec
mov
jp
push
fnstsw
jb
mov
push
cli
and
fmulp
enter
jne
insb
ret
xchg
inc
lds
dec
add
dec
mov
mov
sub
lds
push
aas
iret
add
fcoml
add
arpl
fsts
ficoml
xorb
jae
dec
mov
mov
unpcklps
inc
push
into
mov
cmp
sbb
lret
sub
pushf
out
dec
ss
mov
add
mov
imul
inc
daa
inc
jae
sahf
push
hlt
and
sbb
sahf
sub
daa
ret
sbb
sbbb
out
jmp
mov
popa
push
push
sbb
lods
xchg
jl
arpl
jo
mov
gs
push
xchg
jg
into
dec
and
stos
and
cmp
dec
pop
orl
lods
jmp
shrl
pop
mov
ja,pt
pop
insb
notb
pusha
loopne
sbb
hlt
pop
cmp
inc
fstl
outsb
xchg
cmp
add
fwait
ret
push
adc
dec
popf
out
lcall
push
das
pop
mov
das
cli
or
lahf
insl
outsl
xor
lods
dec
mov
xchg
into
addr16
ret
shlb
pop
xchg
xchg
sbb
ret
lds
adc
mov
inc
jo
imul
enter
out
inc
lds
repz
xchg
and
mov
iret
ja
aam
xorl
dec
pop
addr16
jecxz
jg
js
aaa
push
aaa
mov
mov
add
jne
xchg
loope
test
rol
jno
xor
push
or
stos
xchg
pop
shrb
fbld
pop
scas
ja
movsl
pusha
pop
cmc
inc
inc
inc
fsub
mov
int3
dec
data16
push
outsb
pushf
adc
mov
inc
xchg
cmovp
std
cwtl
sti
into
fs
pop
jge
das
xchg
mov
lea
pop
mov
mov
mov
push
ljmp
data16
mov
rorb
or
jb
add
add
cli
setle
xchg
sub
rcl
bnd
xor
sub
sbb
pop
mov
cmp
inc
movl
test
push
xor
and
fs
mov
pushfw
push
push
aaa
sub
inc
sub
adc
fcmovnu
rolb
and
xlat
xor
jg
lahf
jle
clc
jne
push
aaa
xchg
sahf
ret
pop
out
dec
mov
add
sbb
pushf
mov
movsb
sub
push
fsubr
xor
xchg
mov
andb
jb
into
sub
mov
nop
enter
pop
std
xlat
xor
arpl
mov
hlt
xchg
jecxz
sub
fsubl
lods
test
sti
mov
in
cmpsb
lret
add
fdivl
cmp
iret
imul
icebp
xchg
mov
and
add
xor
fcoms
pop
ret
xchg
iret
xlat
jmp
cmp
inc
bound
jno
add
ja
pop
lods
out
fs
mov
movb
lret
inc
insl
notl
mov
xchg
leave
fcoml
add
sahf
jecxz
mov
xor
push
inc
stos
mov
mov
inc
shlb
pop
sbb
jb
repnz
add
xor
and
sbb
add
xor
inc
or
icebp
cmpl
sub
movsl
outsl
sarl
pop
lods
mov
std
roll
movsb
xor
cmp
xor
mov
rcl
test
cmp
out
xlat
sub
fwait
sahf
divl
sub
ficompl
mov
std
sbb
fucom
std
addr16
cld
sbb
xchg
addl
scas
pop
push
ret
stos
or
fwait
mov
movsl
gs
aaa
sbb
push
fldenv
xchg
sbb
sub
push
adc
into
insb
setno
test
jmp
lret
scas
cli
push
jnp
pop
mov
jg
xor
jb
test
jl
inc
pop
inc
fsubrl
push
mov
xchg
or
bound
sahf
mov
mov
mov
jns
cltd
dec
pop
adc
leave
das
dec
insl
or
adc
inc
inc
cs
mov
out
mov
movsb
dec
sarb
xchg
jns
sarb
xchg
insb
jmp
jae
jg
pop
pop
dec
out
mov
inc
jno
inc
jmp
cmp
in
icebp
into
mov
shrb
mov
subb
testl
dec
mov
add
jae
icebp
lds
xchg
lcall
sub
xchg
or
add
jge
inc
and
fiadds
rorl
xor
js
pop
repz
aad
dec
add
clc
popa
ja
hlt
sbb
jns
jecxz
jne
xchg
sub
adc
shll
and
xor
dec
or
inc
fsubs
loope
test
cmp
xor
push
mov
aaa
mov
popf
jo
mov
iret
jecxz
mov
mov
filds
sahf
int
inc
test
sbb
aaa
pop
jmp
jbe
pusha
fwait
jle
xchg
mov
and
les
out
call
addb
xchg
cmp
mov
or
out
xchg
nop
not
outsb
jo
mov
mov
in
push
xchg
fidivrs
sub
out
fs
divl
test
or
adc
xor
jmp
sbbl
mov
das
mov
movsb
outsl
and
cmpsb
insb
cmovs
mov
cmpsl
mov
fldcw
sub
cmpsb
sub
inc
in
int
aas
sbb
dec
nop
jns
dec
cmpl
btr
mov
pushl
dec
pop
mov
sbb
push
movsl
jbe
popf
std
jecxz,pn
inc
xor
push
addr16
in
mov
test
pop
stos
mov
arpl
jb
loop
outsl
popa
xchg
mov
lods
cli
in
lret
push
decl
cmp
mov
mov
hlt
jg,pn
loope
mov
xor
gs
repz
mov
mov
sub
std
dec
add
jmp
sub
repz
mov
cmp
mov
pop
outsl
jl
pop
jno
pop
push
mov
jae
add
xor
mov
xchg
popa
mov
mov
stos
mov
mov
test
dec
jg
xchg
popl
pusha
mov
das
aad
push
gs
inc
out
hlt
xchg
lret
cmp
bound
mov
bnd
test
jns
xchg
pusha
jl
sbb
push
nopl
lret
mov
add
out
push
pop
mov
xlat
inc
pop
xor
xchg
jl
fsts
cmp
jb
push
das
push
jecxz
xor
dec
mov
ror
inc
dec
pop
sbb
out
push
mov
scas
sub
sbb
loope
mov
xchg
mov
xor
repz
push
xchg
cmpsl
sbb
das
or
adc
movsl
clc
xor
xchg
sub
mov
pop
mov
aam
lea
pop
lods
into
shll
sahf
int
insl
into
pop
lcall
adc
push
into
sti
lret
scas
mov
cmp
add
je
iret
mov
lahf
and
xor
adc
pop
mov
pop
xchg
push
ss
filds
fadd
sbb
shl
mov
jge
insb
inc
mov
fs
enter
push
fistpll
mov
jle
push
push
sarb
jge
faddl
or
push
jae
daa
inc
pop
outsb
ja
int
mov
add
push
pop
inc
pop
adc
sahf
mov
loope
rolb
mov
jmp
rorl
fisttps
cld
jge
mov
mov
mov
push
xor
inc
clc
daa
cmpsl
imulb
sbbb
mov
jp
incl
dec
and
jg
imul
and
cwtl
test
mov
adc
std
lods
imul
jmp
mov
mov
rcll
dec
sbb
jb
push
icebp
add
pop
loop
mov
cmpsb
mov
xchg
push
aam
push
and
mov
xor
sub
jnp
loop
adc
mov
rcll
addr16
xor
dec
popa
cmc
mov
insb
out
hlt
dec
aad
ret
ja
add
sar
xor
jle
loop
lahf
mov
jecxz
dec
pop
repz
call
out
mov
and
mov
mov
adc
pop
scas
jge
cli
std
xchg
inc
xor
push
fnstcw
cmp
sbbb
sub
rcll
or
lcall
es
aam
push
jno
push
nop
cmpsl
sub
adc
loopne
push
pop
push
icebp
in
sub
sub
jecxz
lahf
jne
es
adc
mov
cld
sub
sbb
push
inc
ret
movsl
gs
bnd
sub
inc
je
ss
sub
push
lea
xorb
jno
cwtl
mov
rcrl
lea
pop
or
push
scas
push
into
loop
aam
mov
out
aad
and
enter
repz
mov
pusha
pop
loop
popf
xor
and
xchg
test
inc
mov
pminub
roll
mov
adc
dec
lar
leave
dec
leave
pop
push
lret
int
xor
mov
imul
adc
xchg
cmp
xchg
adc
mov
push
fdiv
fistps
xor
push
scas
movsb
push
inc
ss
xor
repz
jne
flds
mov
pop
adc
popa
das
fidivs
mov
aad
call
cmp
sub
out
stos
xchg
adc
sub
xchg
fs
sti
cwtl
negb
js
or
in
pop
cltd
fcmovb
sti
adc
jmp
and
sarb
jns
fs
lds
add
in
jae
adc
scas
int3
lret
jo
xchg
push
mov
test
dec
mov
int3
sbb
clc
and
dec
mov
add
push
mov
pop
cmp
cmp
cmp
mov
or
add
mov
inc
mov
popf
or
and
out
mov
lret
sub
pop
daa
lahf
inc
movsb
testl
and
lea
fs
add
xchg
fildll
mov
xorl
jbe
dec
push
and
out
jp
inc
aaa
inc
jns
cwtl
dec
sub
ss
fisttpll
sub
in
pop
and
mov
jle
inc
dec
hlt
fsts
xor
les
jl
push
je
jbe
pop
xor
stos
or
fs
out
flds
jnp
and
orl
cwtl
cmp
inc
rcll
dec
pop
push
xchg
inc
push
cmpl
mov
jp
ja
inc
imul
mov
xchg
jge
test
ljmp
cltd
lods
lahf
cmp
fsts
mov
lock
cmpl
jns
sahf
shrb
pop
call
outsl
out
mov
clc
cwtl
cmp
lods
push
cmp
in
in
push
cmp
fsub
xchg
jle
hlt
hlt
in
jp
or
push
call
xor
sub
enter
push
mov
push
lds
cmp
dec
pop
mov
arpl
arpl
xor
das
sahf
dec
jmp
sub
pushf
mov
mov
out
mov
and
sub
sahf
cld
iret
pop
push
mov
mov
sbb
xor
adc
jne
mov
xchg
inc
dec
andl
push
jns
popf
es
fdivr
cwtl
aaa
add
inc
or
xchg
push
jmp
std
out
rorl
mov
pop
sub
mov
cmpsl
pop
add
lock
inc
jb
fs
and
idivl
sbb
cmp
subl
xchg
insl
je
ljmp
jecxz
pop
fadd
push
sub
cmp
dec
dec
stc
adc
inc
adc
bound
add
xor
jns
popa
pusha
push
nop
dec
ljmp
xchg
jne
fsubp
sub
sbb
in
xor
rorl
add
xor
out
sub
xchg
xchg
dec
push
mov
in
dec
fnstcw
inc
inc
ss
dec
js
mov
lds
rcr
lea
jg
in
insb
mov
and
inc
mov
stos
pop
rcrl
leave
das
scas
sub
dec
dec
movsl
sahf
fadds
inc
add
xchg
mov
leave
jmp
jg
in
lock
cmpb
jg
pop
mov
and
add
cmp
add
sarl
aad
ljmp
arpl
ja
leave
loop
fimull
adc
mov
xchg
mov
in
jecxz,pn
hlt
xorl
push
mov
add
in
cli
imul
inc
mov
loope
pop
sub
adc
cmp
mov
mov
xchg
xor
mov
stos
pop
dec
sub
sub
inc
mov
dec
push
aam
fdivrs
addr16
stc
or
dec
pop
repz
std
imull
scas
jmp
push
pop
push
mov
mov
jge
xchg
sbb
insb
cs
or
jne
add
pop
addr16
pop
repz
fsubp
sbb
bound
loop
scas
jecxz
je
in
les
test
fdivs
inc
dec
xchg
sub
dec
or
mov
jp
fcoml
ret
stc
aam
cmp
addb
and
sub
jnp
xchg
fsubrp
xchg
xor
or
add
and
sbb
shll
sub
xor
add
and
mov
ja
lods
mov
subb
sub
dec
mov
shll
lret
cmp
pop
bnd
popa
push
and
sub
mov
xchg
dec
mov
orl
sub
mov
mov
es
and
and
cld
pop
mov
lock
stos
push
cli
push
loop
rcll
test
push
jae
lods
clc
pop
lods
and
das
sbb
jbe
jmp
psubq
sbb
xchg
movsl
das
popf
pushl
inc
pop
lods
xlat
imul
jae
cmp
mov
notrack
inc
jp
pop
out
daa
fwait
int
mov
in
cmpsl
rclb
cld
es
xchg
push
cmp
jmp
les
orb
fidivrl
inc
iret
cmpsl
scas
push
fidivrs
push
sub
sbb
pop
sub
sub
aam
mov
push
dec
adcb
mov
stos
mov
mov
jbe
mov
sbbl
arpl
pop
mov
outsb
add
in
jle,pn
fcmovb
mov
jle
mov
sarb
arpl
xor
cwtl
pop
into
and
incl
and
jg
cmc
ret
std
jb
and
pusha
out
sub
and
leave
pop
cmp
roll
shlb
jnp
pop
mov
shlb
jp
out
shll
lods
cmpsl
pop
decl
pusha
pop
adc
adc
stos
add
orl
jmp
cmpsl
scas
pop
push
int3
dec
sahf
cltd
pop
mov
or
clc
add
dec
lods
test
mov
sbb
mov
pop
mov
stos
and
scas
jne
cmpsb
loop
or
xchg
push
or
cs
adc
mov
xchg
pop
pop
jge
lcall
shrl
gs
add
sub
lods
adc
imul
arpl
mov
and
add
inc
loope
push
and
out
out
cmc
mov
scas
or
aad
jo
mov
int
or
jp
loope
push
dec
and
imul
notb
xor
pop
shlb
push
mov
inc
lret
push
pop
mov
cmpsl
test
icebp
or
repz
mov
pop
add
mov
xor
cwtl
xchg
lcall
push
add
jbe
xor
ds
sarl
pop
icebp
lea
or
inc
sbb
outsb
add
push
cmpl
jle
mov
sub
lods
imul
sub
shll
jle
sub
sbb
inc
push
adc
dec
test
call
add
aaa
mov
icebp
push
jns
push
and
mov
out
adc
mov
fstpl
sbb
jb
push
lods
mov
mov
cmpsl
in
enter
popf
push
adc
mov
add
lret
and
ss
hlt
adc
fisubrl
icebp
xor
mov
and
sbb
les
pop
mul
mov
cmpl
mov
xchg
adc
movsb
icebp
lahf
pop
jo
fstpl
inc
lret
sbb
repz
adcb
clc
out
jmp
dec
mov
or
pop
fistps
mov
popa
mov
jb
or
flds
cmp
outsl
loopne
or
jae
or
lds
pop
aaa
inc
mov
xchg
sbbb
add
int
shrd
stos
inc
test
and
cs
js
push
daa
scas
pop
clc
outsb
or
jp
std
and
pop
jno
enter
mov
ja
arpl
fstpt
sbb
sbb
inc
lret
je
mov
lods
cwtl
dec
cmp
xchg
mov
aaa
xchg
int3
test
mov
je
sahf
adc
push
lods
lret
add
outsl
outsb
mov
les
repz
push
pop
mov
mulb
out
int3
pop
mov
scas
sarb
movsl
imul
or
test
nop
repnz
sbb
cs
lahf
stos
push
push
repz
orl
lods
cld
adc
in
mov
outsl
test
insb
or
in
or
inc
mov
and
sbb
push
mov
aad
or
lret
out
push
and
jb
call
fisttpll
xor
cwtl
push
sahf
shl
call
add
mov
mov
adc
ss
cmp
pminub
popf
cmp
psubsb
adc
test
test
aam
pop
sarb
enter
scas
dec
push
inc
sbb
pop
or
test
pop
and
sbb
outsb
cmp
inc
jno
test
xchg
int3
add
and
out
jo
mov
pop
sbb
lds
jmp
data16
loop
dec
in
aam
push
xor
pusha
mov
sub
sub
mov
inc
dec
mov
xchg
movsl
icebp
test
mov
add
out
pusha
pushf
das
shll
movsl
ljmp
dec
mov
lock
pop
inc
xor
in
mov
in
adc
hlt
mov
add
ljmp
inc
jnp
repz
leave
add
or
pop
mov
aaa
ss
outsl
sti
mov
adc
int3
dec
clc
orw
mov
sbb
mov
mov
mov
add
fwait
ljmp
subl
lcall
adc
jne
in
shl
sub
movsl
jp
xorl
std
in
shll
inc
js
subb
fbstp
pop
add
into
jb
sub
add
push
mov
sbb
fcmovb
loope
lret
add
dec
push
xorb
dec
fsubrs
xor
cmc
pop
xchg
leave
in
pop
fcoml
push
lcall
in
mov
into
sbb
adc
pop
scas
xchg
mov
inc
jo
loop
mov
sahf
js
test
scas
fidivrl
insb
test
clc
mov
push
cmpsl
sub
mov
sub
jns
jns
test
xor
ds
cmp
push
push
insl
pop
add
or
xlat
or
testl
repz
pop
push
inc
cmp
repz
loope
ret
seta
and
inc
pushf
dec
mov
aaa
push
movsl
mov
and
dec
mull
push
dec
stc
lock
mulb
addr16
pop
xor
hlt
movsl
push
dec
cmc
mov
fstpl
daa
repz
sarl
add
sub
xchg
fsub
pop
call
pop
jae
std
nop
push
inc
push
sti
push
stc
add
insb
repz
inc
cmp
jae
adc
aas
mov
or
sbb
sarl
fwait
pop
push
push
xchg
jo
or
push
adc
push
incl
add
ljmp
loop
imul
push
mov
xor
js
gs
cld
scas
in
sahf
cmp
data16
xor
jp
and
sub
xor
pop
xchg
cltd
ds
fsubrp
push
adc
mov
mov
xchg
xorb
push
mov
sbb
add
jns
inc
sbb
xchg
pop
sub
xchg
testl
mov
mov
ret
pop
ds
push
cld
rolb
adc
xor
rcrl
ja
dec
sbb
dec
xor
in
and
test
and
in
mov
mov
fs
loopne
int3
stos
pop
push
fidivl
add
inc
push
xor
loope
sarb
xchg
fdivr
add
mov
mov
add
adc
daa
sub
mov
inc
shlb
pop
mov
xor
and
mov
lret
enter
pop
pushl
stc
mov
nop
cmp
sbb
lods
aas
insl
inc
or
clc
jmp
les
in
pop
insb
pop
mov
cmp
repz
cmc
mov
outsb
sbb
xor
pop
inc
outsl
push
jmp
xchg
mov
lock
cwtl
jp
test
xor
dec
popf
and
jns
cmpsb
sahf
inc
into
push
sub
push
sub
jno
lds
outsb
adcl
push
ret
scas
cmp
aam
dec
mov
lret
out
cmp
cmc
and
lods
popa
add
mov
push
lahf
xchg
push
ret
xor
xchg
sub
sti
push
pop
adc
or
jnp
in
repz
mov
jecxz
daa
xorl
cwtl
cs
cmpsl
in
arpl
mov
mov
je
mov
and
and
cmc
jae
mov
out
mov
in
les
dec
loope
sub
or
cmc
call
and
outsl
cmp
adc
mov
dec
fsubr
jge
mov
xor
push
mov
jecxz
or
sahf
mov
outsb
rol
addr16
outsl
xchg
cmp
rorl
mov
and
clc
insl
xchg
js
rorl
into
jmp
lret
and
repz
jae
ss
xchg
jp
pop
fldcw
cld
xchg
fcmovnb
aaa
jmp
fldcw
jle,pt
negb
out
addr16
mov
xor
or
sahf
jo
xchg
adc
clc
mov
into
xor
cmp
cmp
dec
jp
dec
cmp
xchg
ds
sub
cmp
or
add
imul
les
and
jmp
movsb
xchg
push
pop
lahf
cmp
jnp
shrl
jp
repnz
pop
ret
jl
int
jo
push
mov
push
pop
jmp
ret
or
inc
or
dec
adc
mov
cmp
shrl
push
lret
rolb
xchg
and
mov
xor
adc
xchg
out
push
call
adc
popf
push
lea
loopne
addr16
fstpt
test
loope
leave
push
push
mov
insb
es
sub
rcrb
cs
inc
jg
cmp
inc
fistpll
ud0
mov
jbe
adc
es
add
js
in
mov
sub
adc
in
rclb
sbb
lods
add
sbb
enter
popf
add
push
dec
adc
or
mov
xor
sbb
jp
adc
fildll
out
test
mov
sbb
inc
mov
loop
repz
clc
mov
sub
fwait
or
inc
jg
or
rorl
stc
fdivl
iret
lahf
add
jns
cltd
popa
add
ja
mov
xchg
push
jg
fadds
bound
dec
pop
es
cwtl
dec
mov
fcoml
mov
lock
pop
jb
cmp
pop
insb
sub
outsb
cmc
out
or
sti
fcompl
mov
mov
lods
stc
dec
sbb
or
nop
inc
repz
ds
enter
pop
pop
jne
aam
sahf
push
ljmp
out
dec
imul
repnz
cli
cli
xchg
and
data16
jnp
rcrl
out
repz
jp
inc
fmulp
sub
sbb
xor
mov
pop
jecxz
mov
aas
and
sub
pop
notl
testl
das
dec
outsb
stc
loopne
scas
ljmp
loope
pushf
lahf
jge
shll
loop
sub
xchg
ja
nop
sub
iret
movsl
pop
mov
iret
inc
fildll
mov
pop
mov
cmp
xor
mov
arpl
xchg
or
mov
iret
in
lods
orb
push
sub
cmp
test
add
and
mov
cltd
in
fisttpl
popa
xchg
leave
inc
inc
pop
repz
jl
gs
push
jg
iret
cmpsl
pushl
inc
mov
mov
dec
mov
andb
jmp
cs
rcrb
cmp
inc
cld
out
sbb
add
jno
repz
mov
fnstsw
lods
xchg
push
push
sbb
or
jl
xchg
jecxz
out
rcrb
popa
imul
mov
out
stos
icebp
fistl
push
dec
popf
cmp
or
or
fstl
data16
sbb
in
pushf
lret
mov
ret
mov
int3
fwait
bound
sbb
cmpsl
xor
xchg
xchg
and
fsubs
lock
scas
or
sbb
push
dec
add
jecxz
enter
imul
or
cmp
movsb
pop
ds
out
fsubrl
mov
jnp
popf
imull
fdivl
int3
std
fisttpl
mov
cltd
outsl
xor
jle
aas
pop
insl
bound
jbe
sbb
in
in
jmp
sub
adc
or
inc
xchg
aam
fldl
jnp
dec
inc
mov
mov
jmp
mov
test
xchg
fs
pop
mov
mov
sbb
mov
call
push
stc
std
pop
mov
test
js,pn
mov
xchg
loop
nop
cwtl
add
push
loope
or
stos
cmp
nop
shll
jl
mov
scas
sub
lcall
lds
push
xchg
aas
jae
adc
sbb
and
dec
pushf
mov
or
xchg
push
xor
aaa
mov
test
xlat
or
mov
sub
mov
movsb
add
sub
mov
in
shll
dec
fadds
mov
xchg
dec
inc
insb
cmp
mov
push
xor
mov
xor
jge
test
inc
cmpsb
jae
and
inc
mov
jne
pop
sub
aaa
adc
out
ljmp
icebp
es
pop
push
and
dec
mov
ficoms
cmp
dec
ss
jge
inc
sbb
and
int3
xor
and
adc
xchg
psubb
cld
adc
inc
scas
jmp
loope
pop
cmp
add
std
or
cwtl
insl
cltd
add
lock
sub
jg
movsl
jmp
fucom
sub
mov
ja
pushf
sbb
gs
mov
add
jne
rcll
sbb
clc
push
call
adcl
sbb
jno
xchg
lds
jbe
pop
cmp
je
xchg
adc
mov
int
sub
cmp
mov
das
cmp
lock
loop
add
mov
test
lret
xor
dec
mov
push
mov
cltd
xorb
mov
sbb
dec
lods
dec
les
xchg
sbb
mov
mov
xchg
dec
js
lds
stos
cmp
addr16
mov
add
icebp
outsl
and
pop
cmc
xor
das
and
push
ja
dec
call
sbb
lret
loope
rclb
notl
inc
dec
xchg
cmp
mov
ret
jo
mov
add
adc
bound
inc
jmp
jo
dec
sbb
roll
ret
inc
imul
repz
mov
and
sarb
dec
pushl
adc
jo
cli
jle
in
stos
ja
cmp
aad
in
sarb
fisubrl
push
or
cmp
arpl
xchg
inc
ja
stos
xlat
or
adc
int3
repnz
or
mov
ret
adc
cmpsl
jp
inc
cmp
and
jo
jp
mov
loope
push
hlt
movsb
xchg
icebp
adc
sahf
dec
jl
add
mov
inc
sbb
inc
idivl
inc
xchg
in
xor
mov
movsb
out
mov
push
rorb
sbb
scas
call
je,pn
jns
data16
sbb
dec
orb
test
xor
dec
ljmpw
bound
test
pop
mov
push
push
pushf
mov
rol
std
test
lds
dec
dec
xchg
mov
iret
into
mov
dec
sub
movsb
nop
not
mov
jbe
xor
stc
push
clc
pop
mov
push
in
mov
fldt
scas
jle
or
jl
pusha
stos
push
mov
dec
inc
mov
icebp
push
inc
adc
cmp
sbb
add
cmpsb
in
inc
fwait
insl
lret
and
mov
jbe
jle
inc
jle
xchg
call
xor
jg
sub
mov
pop
mov
ficomps
xchg
jbe
jp
push
dec
dec
js
push
outsb
mov
bnd
insl
add
dec
lret
xchg
dec
mov
mov
mov
sbb
sti
xchg
add
mov
popf
es
push
pop
fldl
inc
ljmp
push
sub
aas
sbb
mov
pop
sbb
mov
or
mov
imul
aad
add
adc
mov
sbb
push
jmp
pop
repz
add
test
outsl
ret
mull
sub
imul
or
add
enter
outsl
xchg
sbbb
cmp
cli
aam
mov
sub
mov
stc
push
cmp
push
cmpsb
pop
popf
mov
and
mov
loop
dec
stc
cwtl
mov
cmpsl
shld
jge
fisubrs
mov
xchg
xor
mov
mov
sbbl
inc
cmp
mov
adc
shll
in
stos
test
loope
cld
pusha
jae
lds
jae
mov
jge
icebp
mov
pop
mov
push
loop
mov
loopne
mov
nop
xchg
aas
or
addl
jno
fs
xor
xor
daa
das
std
cmp
scas
xchg
stos
cli
ds
mov
test
leave
sbb
stos
mov
adc
jns
push
cmpb
mov
fisttpl
mov
pop
test
test
add
lret
fs
aas
insl
and
dec
nop
xor
or
add
repnz
jmp
sbb
fnstsw
dec
lods
cmpsb
cmp
mov
lods
insb
cmp
xchg
mov
test
int3
mov
int
push
stos
mov
push
or
sti
int
repz
fists
pop
mov
aas
sub
test
add
adc
xchg
jne
inc
pop
or
insl
rorl
mov
mov
daa
and
cli
mov
push
add
adc
mov
push
fldcw
sbb
xor
jl
sar
shrl
and
ss
inc
and
jecxz
test
push
push
push
out
inc
testb
pop
std
adc
inc
popa
out
jl
cli
mov
fnstsw
pop
xchg
or
sahf
aas
push
xchg
push
fwait
cmp
sbb
or
jbe
mov
cmp
inc
push
mov
inc
push
in
jns
int
icebp
or
in
leave
xchg
mov
je
clc
xchg
stc
negb
or
dec
push
inc
cmp
stos
out
scas
jle
inc
pop
xor
fildl
mov
icebp
jno
sbb
jge
push
jae
push
sbb
lret
jb
outsl
inc
lds
mov
aas
xlat
mov
mov
test
sbb
pop
insl
inc
inc
cmp
inc
jae
jns
sub
inc
mov
pop
in
dec
push
int
xor
fnstenv
sarl
fs
mov
mulb
daa
and
adc
fidivrl
cmpsb
mov
out
dec
fildll
rcr
sub
mov
inc
cmpsl
in
flds
xlat
arpl
push
pop
jns
ret
and
lret
fisttps
stos
adc
fcmovnb
fisubs
or
stos
mov
cwtl
jb
mov
nop
movsb
inc
pop
mov
adc
cwtl
dec
mov
push
xchg
pop
or
fidivrs
xchg
sarl
xor
aaa
mov
popf
push
sti
mov
mov
xor
sti
mov
adc
jmp
ret
jno
subl
xlat
shlb
push
push
aas
push
or
add
scas
in
lea
xor
test
minps
push
pop
mov
mov
data16
dec
orb
inc
pop
lret
pop
rcll
sub
xor
xor
jbe
aam
scas
and
out
data16
fucomi
mov
adc
inc
pop
cmp
cltd
repnz
sub
push
sub
insl
aas
fs
adc
xchg
xchg
or
mov
aad
jae
in
out
cs
inc
push
mov
mov
aas
aas
insl
sbb
mov
xor
mov
aad
lahf
shl
insb
repnz
js
push
xor
xor
sbb
mull
aam
cs
jmp
xchg
test
stos
test
add
xchg
mov
add
and
sbb
nop
jae
push
pop
lods
cltd
sub
pop
shl
hlt
push
test
test
push
loop
jecxz
sub
mov
sub
xor
mov
mov
jge
mov
arpl
stc
or
movsb
scas
push
pop
pop
mov
popf
push
cmpsb
or
mov
sbb
adc
adc
test
adc
test
je
xchg
mov
pop
fistpl
lods
ss
aam
rcrb
ret
mov
pushl
push
xchg
out
mov
loope
dec
lret
xor
aam
sbb
dec
xchg
cmpsb
sbb
dec
jnp
lcall
jbe
stos
cli
adc
cmp
cmpsb
ja
aas
lcall
inc
mov
pop
fidivl
test
add
add
pop
bound
shr
mov
dec
push
pop
adc
insl
mov
lea
inc
fnsave
cmp
into
pusha
and
push
stos
mov
push
cmp
dec
add
push
xor
insl
outsl
jp
cs
cmpsl
adc
fdivrs
xor
lods
scas
inc
jns
mov
leave
xor
jp
adc
sbb
jmp
dec
and
mov
xchg
aas
inc
mov
test
dec
imul
xor
cmp
stc
push
rcrl
into
ret
sbb
in
mov
fcomps
int
cld
pop
movsb
cmp
aam
fidivrl
mov
mov
daa
dec
int
xchg
sar
push
lea
and
push
and
mov
jae
aaa
xor
sbb
add
cli
jg
stc
out
mov
das
push
sub
into
out
mov
mov
and
lock
in
mov
dec
mov
popf
lcall
dec
out
mov
jo
mov
push
push
xchg
lock
fsts
jno
stc
sti
rolb
xorb
push
je
and
cwtl
or
mov
push
pop
xor
and
rcll
fstl
fisubrl
sahf
mov
fistpll
test
aad
mov
push
subl
mov
inc
pop
dec
adc
push
sub
out
cmp
dec
repz
jbe
dec
push
in
int
clc
cmp
fldt
xchg
xchg
and
cmp
fwait
pop
sub
cmp
arpl
les
test
jno
lahf
xor
add
fildl
add
dec
leave
pop
dec
mov
jns
fbld
mov
or
push
fwait
adc
or
and
dec
add
pop
xlat
sahf
adc
pop
mov
movsb
add
sar
inc
push
out
pop
jg
fcoms
cmpsl
out
mov
fisubrl
ret
jmp
sbb
outsb
rol
xchg
jbe
jne
stc
mov
imul
inc
imulb
int3
mov
dec
imul
xor
cmpl
hlt
fldenv
inc
mov
mov
adcl
mov
sbb
xor
imul
fstps
and
inc
cmp
fucom
sbb
nop
mov
test
sti
out
fistl
repnz
aam
mov
test
xor
repz
jmp
pop
decl
xchg
nop
adc
stc
and
cmp
jno
push
or
cmc
aaa
aas
push
sbb
xchg
mov
sbb
subl
out
lahf
loopne
adc
cltd
adc
jl
and
stos
and
jmp
sub
ficoms
stc
push
jno
out
xor
ljmp
data16
jp
adc
pop
lahf
sub
imul
repnz
pop
dec
pop
cmp
notl
mov
hlt
aad
push
mov
imul
cmpsl
mov
sbbb
inc
xchg
lahf
dec
call
jmp
pop
cmp
mov
pop
das
inc
sub
jns
cmp
adc
pop
fldl
daa
lock
push
clc
orl
cmpsb
pop
popa
repz
add
jmp
mov
xlat
roll
and
inc
mov
dec
xchg
mov
mov
mov
lea
inc
add
mov
mov
xchg
mov
cmpsl
out
mov
dec
je
lds
mov
ficoml
xchg
test
lds
add
jmp
jns
imul
inc
outsl
stos
sub
mov
gs
mov
inc
xor
dec
adc
xchg
jb
dec
imul
sbb
cmpsl
mov
and
stos
mov
leave
inc
addr16
hlt
mov
out
dec
data16
pop
call
pop
lds
call
insb
movsb
or
cmp
add
in
jmp
pusha
and
idivl
sub
dec
sbb
mov
adc
enter
cmp
leave
xchg
cmp
pop
call
in
lea
sti
or
push
aaa
ja
lods
popf
lock
sub
mov
sti
leave
cwtl
mov
fimuls
xchg
les
insb
rcrb
hlt
mov
pop
mov
lret
push
int3
fadd
gs
mov
sbb
icebp
lret
int3
addr16
loopne
xor
mov
cmpsl
mov
sbb
imul
jne
hlt
adc
out
cwtl
push
mov
jbe
add
jg
adc
and
fdivrl
sti
andb
jbe
xchg
and
enter
mov
lret
cli
roll
aad
inc
and
or
in
push
popf
pop
pop
mov
fstl
xor
push
dec
xchg
shrl
sbb
inc
jecxz
fwait
in
add
jae
dec
cmpl
mov
lcall
scas
cmp
or
shll
lds
bswap
mov
aad
mov
cmp
jle
cmp
rolb
mov
ljmp
aaa
aad
test
daa
nop
imul
in
xor
xchg
into
arpl
push
cmp
xchg
mov
out
shll
or
std
inc
xor
aad
leave
lods
cld
cmp
out
lods
fwait
scas
shll
jp
aaa
in
jne
jmp
or
scas
fisttpll
testb
stos
and
fdivs
lock
lods
test
in
and
cli
jl
ret
cmpsl
jg,pn
loope
xchg
cmp
stos
sub
adc
sbb
loope
das
and
lahf
fs
ja
mov
bound
sub
in
enter
push
hlt
inc
add
dec
adc
imul
mov
int3
flds
neg
cli
pusha
rcrl
xor
lret
loop
fadds
mov
cmp
cmp
add
stos
xor
mov
subl
test
movsl
inc
dec
loope
das
loope
inc
sarl
adc
cmp
jl
push
or
and
pop
or
imul
and
add
popf
jmp
sbb
insl
sbb
sbb
mov
push
and
movsb
jg
lret
dec
out
orl
lret
add
dec
dec
sti
stos
rorl
call
add
adc
out
scas
fwait
outsb
pop
xchg
mov
lods
xchg
push
int
lahf
fistps
xchg
adc
adc
data16
sbb
and
idivb
mov
xlat
mov
mov
call
cmp
pop
xor
es
imul
iret
dec
leave
xchg
daa
xor
pop
lret
mov
test
movsb
pushf
sub
mov
shrl
mov
mov
cmpl
inc
lods
pop
jmp
stos
cmp
xor
in
mov
insl
fwait
cmp
push
fs
fists
mov
dec
scas
mov
pop
scas
roll
popa
jg
mov
shll
sbb
std
or
inc
filds
mov
rcrb
sub
out
fwait
xchg
mov
cs
push
fisubrs
loopne
inc
mov
add
lds
mov
add
mov
or
out
inc
out
push
ljmp
or
movsl
jge
and
scas
outsb
rcrl
jecxz
aad
fimull
xchg
xor
mov
mov
sti
sub
jbe
sub
lods
repnz
aas
jns
sub
sub
xorb
jns
jne
push
add
inc
jb
stos
adc
push
xchg
xchg
daa
push
cmp
shrl
adc
sbb
enter
sarl
loope
aas
cmp
xchg
fs
insl
insl
sti
subl
cmc
pop
ds
sbb
nop
dec
outsb
les
rorb
fistl
ds
pop
out
movsb
out
lods
pop
int3
imul
lds
xor
inc
add
xchg
out
dec
test
imul
xor
lds
jae
inc
jge
dec
inc
xor
add
lock
adc
jge
movsl
push
xor
cmp
add
lods
lock
sbb
cltd
rorl
out
cs
iret
rorl
and
push
sbb
or
mov
hlt
jbe
adc
enter
cmc
arpl
popf
inc
hlt
and
add
adc
dec
inc
xchg
dec
sub
cli
jbe
adc
in
mov
mov
jno
jno
pop
ret
or
cmc
cmpsb
and
shl
inc
loope
ror
add
pop
push
pop
pusha
lcall
out
inc
outsb
bound
int
pop
pop
push
xchg
cmp
mov
das
jae
and
add
push
push
subl
jecxz
jl
fistpl
push
inc
adc
mov
push
mov
dec
out
pop
bnd
fs
mov
xchg
jle
inc
inc
jg
and
nop
daa
jne
cltd
sub
out
and
mov
inc
leave
std
shlb
insl
cmp
stos
mov
lcall
jl
arpl
push
pop
popf
ret
or
in
stos
jle
pop
mov
inc
in
mov
imul
loope
or
adc
les
inc
push
pop
xchg
imul
aam
aaa
xchg
jl
sub
pusha
enter
outsb
push
push
fwait
mov
cld
lea
rol
js
push
rcr
or
sti
mov
in
enter
cmpl
add
xchg
aad
jne
enter
push
sub
pop
or
test
xchg
cmp
lods
negb
jo
jle
adc
jmp
pop
push
idivl
jbe
and
dec
icebp
jl
lahf
dec
dec
sbb
mov
ljmp
insb
or
popa
mov
jl
sbb
cmpsl
ds
add
les
jg
divps
cmpl
out
and
xchg
pop
bound
mov
pop
lods
jmp
xchg
mov
cld
scas
rcll
and
xchg
jge
mov
sbb
add
dec
cmp
mov
cmp
or
dec
cmp
shrl
loopne
stos
les
xchg
push
lahf
cltd
imul
sbb
dec
add
dec
dec
sbb
test
and
pushf
dec
pop
mov
fmuls
jmp
jns
lret
jae
and
push
push
rolb
pop
adc
adc
push
ret
mov
pop
adc
jnp
xchg
lods
cltd
cmp
sti
push
repnz
fwait
mov
enter
mov
adcl
xchg
mov
fnsave
push
sbb
out
mov
xor
aas
xlat
mov
jns
add
mov
std
in
pop
fdivrl
ja
das
add
lods
add
gs
dec
jecxz
inc
bound
out
loop
in
insb
inc
mov
and
push
dec
in
andb
vpsadbw
mov
jbe
sar
mov
push
outsl
add
iret
mov
rcll
flds
push
fstl
imull
xchg
mov
pop
and
orl
filds
stc
push
mov
cmpsb
mov
add
in
push
hlt
in
cmp
es
push
call
fcmovne
lods
and
mov
test
push
adc
or
jp
pop
movl
cmp
add
pushf
push
pop
push
out
dec
inc
scas
lods
insb
aam
sub
xor
loop
fistps
clc
push
adc
push
jnp
mov
in
and
ret
loopne
dec
test
js
dec
sti
add
sti
int3
popa
fcomps
andl
cmp
daa
mov
push
test
popa
mov
add
dec
bound
call
fimuls
xor
insb
push
sbb
scas
mov
aad
rclb
cmp
inc
fcoms
mov
mov
test
cmp
ljmp
cltd
mov
pop
int3
or
outsb
add
test
daa
cld
mov
fdivl
outsb
dec
dec
outsb
dec
cli
push
mov
aam
iret
adc
pusha
sub
shrl
cmp
nop
jbe
lret
int
in
inc
add
push
jge
outsb
or
arpl
cltd
int
add
pop
push
stos
pop
pusha
jo
repz
dec
cld
cmp
adc
popf
enter
lret
out
cmp
inc
sub
or
add
repz
outsb
mov
js
loope
les
ret
sbb
jns
inc
sti
inc
inc
imul
push
loopne
test
xor
fmull
inc
fnstsw
cld
or
mov
in
int3
jge
mov
fidivs
mull
imulb
call
cmp
leave
cltd
movsb
jge
pop
push
or
mov
pop
imul
aaa
rcll
jp
xor
add
inc
cmc
aas
jne
test
jae
cs
or
push
push
add
and
fidivl
test
stos
pop
out
add
orb
sbb
jmp
bound
icebp
aas
and
out
or
cmovae
adc
inc
cmp
repnz
and
mov
mov
out
inc
and
imul
jnp
xchg
push
push
inc
dec
pop
dec
jmp
ficoml
dec
mov
test
push
xor
adc
mov
shrb
ret
iret
ror
andb
insl
or
mov
jmp
ret
pushf
dec
test
imul
sbb
push
cvtpi2ps
mov
jle
xchg
js
out
inc
add
stos
in
shld
decb
sbb
fsubrs
jns
xor
or
mov
mov
sbb
orb
sub
lock
les
xchg
or
pop
fstps
scas
jbe
lods
pusha
enter
sub
mov
sub
out
mov
int3
out
add
ffree
mov
push
xor
std
push
dec
add
lea
fimuls
inc
testl
andl
ret
push
inc
sti
or
xor
cld
cmp
xor
loope
loope
jne
into
test
insl
lds
data16
leave
sti
iret
xchg
jmp
inc
jo
jl
outsb
sbb
push
mov
mov
leave
std
shrb
mov
out
sarb
and
mov
sub
mov
sbb
adc
mov
mov
stos
stc
dec
subb
test
test
or
and
es
mov
movsb
jbe
addr16
mov
add
cmp
loope
aas
xchg
mov
and
ret
movq
sub
push
mov
lcall
inc
adcl
ds
push
fsts
iret
xor
inc
js
mov
sub
fidivs
push
jb
shl
xor
inc
cltd
test
add
scas
adc
push
in
jae
popa
push
mov
pop
cmp
push
stc
mov
stc
je,pn
mov
push
ja
push
out
inc
inc
pushf
fildll
cwtl
and
aaa
js
inc
testl
nop
adc
cmp
es
orl
ss
cmp
stc
outsb
pop
mov
shll
pop
fdivrl
add
gs
stos
in
lret
imul
jb
shll
adc
rcrl
fstpl
sub
sub
rcrb
sbb
out
mov
stos
mov
mov
cs
out
pop
xor
pop
lds
test
mov
sbb
xlat
clc
popa
popf
cs
mov
add
adc
inc
xchg
mov
leave
outsb
jb
cwtl
sbb
and
mov
or
push
clc
add
push
cmp
sahf
stos
pop
pop
xchg
lods
push
imul
xchg
and
shrb
jg
lret
jb
push
test
insb
adc
in
ss
dec
xchg
push
sbb
lret
cld
int3
cmp
nop
xlat
std
lret
inc
cmc
pushf
mov
inc
out
ret
scas
dec
jne
cmp
pop
adc
push
or
cs
test
aas
or
mov
push
std
add
je
aas
insb
cs
and
int
fists
mov
add
or
mov
movl
dec
test
jo
adc
lcall
inc
out
mov
pop
pop
std
xor
je
mov
or
jbe
mov
mov
mov
scas
or
mov
iret
das
pop
cld
lods
loopne
adcl
push
je
xchg
outsl
flds
sarb
xchg
mov
and
imul
push
enter
daa
aad
inc
sbb
push
mov
insb
ret
cs
movb
inc
pop
jmp
popf
out
mov
jle
xchg
mov
movsb
into
sbb
sub
lods
lods
or
mov
sarb
sarb
jb
jnp
fsubrs
xchg
xlat
repz
stc
loop
mov
cmp
dec
mov
in
flds
jno
dec
sti
push
mov
or
nop
stos
and
test
sbb
inc
stos
lods
xor
mov
out
push
cmp
and
add
fwait
cmc
fcmovb
test
xor
aam
mov
stc
push
lret
fiaddl
test
add
jno
mov
inc
xor
scas
lcall
mov
jle
lds
mov
mov
or
stc
stc
cmp
add
test
mov
shll
dec
jne
cmpsb
cmp
add
jb
mov
xchg
xchg
adc
sbb
out
xor
in
lods
lods
jecxz
push
lret
jbe
xor
fndisi(8087
test
ja
insl
dec
addr16
pop
test
xor
mov
sub
gs
and
jl
fidivrl
pop
push
xor
sarl
dec
clc
cmp
dec
flds
ds
clc
adc
stc
xor
repnz
ret
inc
mov
push
orb
adc
mov
into
leave
out
pop
push
cli
inc
scas
jns
mov
nop
es
push
sub
out
mov
and
or
out
inc
dec
jge
adc
sub
movlhps
or
bound
outsb
inc
push
and
xchg
lds
push
xor
lea
sbb
adcl
mov
dec
daa
popf
in
jbe
mov
mov
ljmp
xchg
push
xor
mov
mov
cmp
subb
pop
push
sti
stos
icebp
pop
dec
rcll
cmp
imul
out
out
shlb
sub
loopne
ret
dec
addl
pop
dec
in
mov
insl
out
push
fdivr
inc
cwtl
das
aaa
ds
pop
xchg
pop
xchg
std
movsb
mov
fistpl
or
cli
cmc
jno
in
clc
mov
cmp
ret
insl
imul
fnstenv
sahf
daa
scas
pop
push
add
mov
sbb
xchg
dec
push
mov
mov
sbb
dec
outsb
or
loop
fs
and
cs
mov
out
stos
lret
testl
dec
xchg
and
ljmp
push
pushf
inc
or
in
adc
push
movsb
push
iret
jnp
xor
in
adc
shlb
ljmp
pop
aas
mov
idivb
nop
filds
es
mov
push
sahf
mov
mov
inc
fcoml
and
sub
jns
rcr
cmp
loop
xchg
jle
push
xor
cmpsb
aas
out
inc
mov
mov
xor
mov
adc
push
cmp
mov
mov
fildll
sbb
dec
or
sar
fisttps
push
dec
pop
cmpsb
dec
cld
xor
or
imul
int
or
aad
fists
dec
shrl
call
packuswb
cmpl
pop
outsl
sub
cltd
push
inc
cmpsb
adc
sub
out
inc
popa
mov
adc
jbe
test
mov
sbb
insl
jb
imulb
adcl
les
clc
mov
fst
je
xchg
cld
std
inc
lea
or
daa
mov
mov
sbb
add
ret
popf
jge
and
mov
test
xor
ss
pop
cmp
push
ret
scas
mov
sub
shlb
ds
cwtl
push
dec
xchg
mov
jmp
stos
sub
xchg
and
xchg
ss
lods
jg
out
cmp
fdivr
pop
jecxz
adc
inc
or
repz
add
into
push
or
dec
out
cmpsl
imul
cmc
push
lcall
sarl
inc
sbb
shll
or
loope
jecxz
sub
push
fwait
dec
cmc
lds
xor
imul
cmpsl
push
ljmp
repnz
mov
ljmp
pop
adcb
sbb
adc
add
out
das
push
push
cli
jbe
je
stc
aas
hlt
dec
and
or
mov
testl
inc
ja
jns
into
inc
pop
jns
push
lret
movsb
arpl
aam
pop
inc
outsl
mov
shrb
stc
jbe
call
push
jmp
jne
mov
test
sub
sbb
pop
scas
cltd
popf
nop
sub
cmpb
in
and
cmpsb
jmp
push
arpl
add
jle
jge
cmpsl
sarb
xchg
bound
xor
fistps
xchg
das
push
jno
adc
xor
push
shrb
lret
out
xor
jbe
insl
loop
loope
inc
mov
mov
cmpl
std
inc
imul
test
insb
cmp
cmpsb
push
jb
or
sbb
xor
psllw
in
adc
sbb
mov
xchg
mov
mov
inc
lods
mov
cld
test
lods
jge
repz
mov
mov
into
jmp
cli
movsl
xchg
dec
lock
sub
pop
and
movsl
es
xchg
dec
adc
ds
lcall
gs
outsl
andb
xchg
adc
lods
fcoml
sbb
mov
jno
cwtl
dec
fdivs
stos
and
rcrb
cmc
mov
frstpm(287
mov
insl
mov
ret
mov
ret
pop
out
sub
jne
stc
rcrl
mov
ficomps
jo
xchg
lods
lret
sahf
mov
enter
dec
mov
dec
cmpsl
popa
dec
xor
pop
mov
int
aam
das
push
sub
inc
xchg
loope
ret
int
mov
movsl
xchg
out
fdivs
mov
pop
test
jl
jl
jmp
iret
fistpl
rcll
fwait
jg
lahf
mov
mov
pusha
andl
cmp
bound
sbb
dec
sbb
pop
sarb
dec
shll
sub
lods
mov
fiaddl
movl
movsl
loop
add
cmp
mov
xor
in
jo
out
outsl
inc
jg
inc
sbb
je
into
push
dec
je
movsl
xor
fs
ret
pop
dec
jge
jno
dec
sub
push
or
sbb
popa
xchg
or
mov
mov
xor
ss
xchg
out
jl
pop
and
adc
scas
sub
insb
push
adc
in
sbb
mov
pop
sti
test
neg
ret
pextrw
sbb
jg
jo
mov
jle
dec
xor
add
outsl
cli
in
fidivrl
mov
sahf
fists
dec
rol
insb
add
xchg
mov
pop
ljmp
sbb
ds
leave
push
es
adc
js
js
mov
popa
or
push
stos
cmpsb
stos
pushl
daa
in
mov
and
test
dec
xor
xchg
jae
or
stos
movb
imul
imul
inc
repnz
dec
or
cmp
add
or
inc
push
mov
add
lds
pop
jo
push
mov
das
or
dec
loope
add
jae
mov
movsl
divl
rolb
inc
aam
pop
shlb
sbb
sub
jns
movsl
cli
inc
inc
push
inc
test
roll
mov
sarb
mov
loopne
sbb
mov
jmp
sub
mov
mov
rorb
and
enter
dec
add
in
add
xor
rclb
xchg
dec
es
in
clc
sub
out
and
jb
pop
fs
cld
sub
nop
add
add
or
jle,pn
jge
outsb
mov
shrb
jnp
jae
mov
pop
pop
fsts
push
pop
cmpsb
xlat
clc
es
mov
push
ss
stos
dec
ss
jno
inc
dec
ret
insb
sub
dec
xchg
test
ror
push
or
inc
lret
pop
cs
test
dec
cwtl
xor
mov
mov
dec
or
push
cmp
and
in
xchg
dec
xlat
fcmovne
test
aas
imul
jb
imul
add
dec
push
jbe
iret
int
mov
pushf
adc
int3
jb
mov
xchg
mov
in
mov
inc
fadd
data16
jp
pop
orb
in
jl
dec
add
out
and
mov
inc
addr16
repz
shll
shl
insb
jle
inc
sub
jg
fsubrp
lods
fiaddl
cmp
scas
xor
pop
adc
pushf
clc
xchg
jmp
jbe
repnz
iret
or
mov
add
push
sbb
xor
pop
mov
jnp
dec
cmp
mov
jmp
mov
int3
mov
insb
jp
sti
adc
aam
jp
aas
sub
xchg
push
pop
scas
jo
stos
movsl
fnstenv
das
movsl
stos
cmp
xchg
outsb
test
out
clc
add
lods
sub
test
mov
adc
and
pusha
std
push
pusha
stos
lea
mov
pusha
mov
xchg
aas
test
jns
pop
movsb
adc
sbb
cmp
adc
inc
inc
ds
jns
in
pop
xchg
jns
xchg
repnz
mov
data16
lds
out
dec
dec
dec
in
xlat
adc
ja
stc
icebp
je
scas
rcrl
sub
mov
xchg
jnp
and
dec
push
mov
add
dec
mov
sbb
mov
mov
push
sub
jno
mov
mov
mov
push
loopne
and
mov
mov
outsb
loop
lahf
out
std
movsl
and
or
call
rcll
ret
call
mov
imull
ljmp
repz
daa
mov
mov
pop
cmpsb
sbb
add
loope
jmp
idivb
sub
shrl
jnp
dec
push
jl
std
xchg
push
aam
out
leave
fstpl
cmp
push
cmp
push
pop
lds
add
mov
jns
mov
in
lret
imul
and
leave
xor
jnp
sub
inc
mov
ret
hlt
sbb
inc
ret
push
cmp
pop
push
imul
jnp
mov
popa
and
and
push
repz
out
mov
pop
inc
sub
iret
insb
loope
dec
cmp
pop
dec
into
xchg
mov
mov
xorl
mov
in
stos
notb
push
pusha
push
lcall
push
in
mov
dec
loop
hlt
inc
jb
jmp
lods
pop
push
subl
mov
lcall
or
and
jne
out
vmovntps
mov
mov
xor
xchg
jmp
cmp
mov
mov
mov
xchg
jg
sar
inc
out
fucomip
fnstcw
ret
jb
push
xlat
cmp
push
fwait
jne
mov
inc
subb
out
adc
inc
adc
xchg
bound
outsb
mov
cmpsl
or
out
pusha
aas
pusha
enter
inc
jo
pop
push
mov
mov
repz
lret
rolb
pushf
dec
dec
std
into
pop
fstps
xor
rolb
ss
cmp
xor
dec
adc
push
mov
retw
ret
cltd
push
pushf
in
out
std
orb
jg
pop
and
or
jge
icebp
scas
adc
mov
cmp
nop
std
jo
sub
int3
xchg
dec
xchg
out
iret
je
insb
inc
pop
lds
sub
pop
and
lock
xchg
lahf
cmp
cmp
popf
jns
push
out
sub
dec
or
int3
xchg
mov
dec
push
push
fnsave
movsb
cli
cmpsl
dec
sub
or
loopw
add
inc
ret
or
push
mov
mov
xor
xchg
or
mov
jae
pop
or
push
lahf
sbb
xchg
adc
mov
mov
aaa
mov
mov
into
dec
shr
dec
inc
jae
push
sbb
fcoml
xlat
bswap
xor
cmp
pop
aad
mov
inc
xchg
adc
int
inc
jae
sub
test
fdivp
mov
or
mov
jmp
mov
sbb
mov
dec
sub
ret
xchg
lds
push
mov
ja
test
add
ds
push
bound
jmp
xor
dec
addb
out
pusha
repz
in
or
adcl
je
mov
and
iret
cmp
popa
dec
mov
jb
sbb
inc
push
es
cmp
mov
pusha
in
sbb
iret
cld
mov
outsb
rclb
push
rorb
and
les
iret
int3
or
and
std
arpl
lea
sub
iret
repz
add
in
nop
xor
es
inc
inc
adc
mov
sub
or
outsb
add
mov
sti
hlt
imul
pop
inc
mov
xchg
repz
xor
rolb
cmp
and
icebp
repz
mov
stos
sub
add
inc
pop
arpl
cmp
rclb
inc
std
add
add
xor
dec
aad
aas
sub
pop
push
xor
lea
pusha
push
pop
jne
addl
jg
in
data16
cld
test
dec
push
mov
lock
mov
jae
xchg
xor
scas
lods
sub
mov
int
xor
movzbl
mov
in
xchg
and
divl
sahf
or
pop
jge
xchg
xchg
test
fisubl
insb
fwait
div
jmp
insb
lds
sahf
jmp
cmp
or
flds
ret
push
ss
jne
adcb
call
jb
mov
add
rcll
pop
lods
jge
fcompl
mov
cld
pop
bound
in
cltd
arpl
ficomps
stos
test
sbb
mov
adc
jmp
mov
ret
leave
stos
std
mov
sub
je
mov
push
push
xor
dec
adc
dec
add
mov
mov
push
clc
cmc
sbb
repnz
mov
jae
out
mov
xor
pusha
add
ret
mov
pop
sbbb
aas
lahf
arpl
pusha
or
or
cli
and
mov
stos
cli
data16
call
xchg
cmpsl
mov
mov
imulb
and
loop
fcmovu
mov
jge
jne
add
stos
mul
aas
pop
pop
mov
ljmp
mov
test
cmp
push
jmp
ja
mov
push
insl
jge
xchg
and
clc
mov
cli
movsl
aam
lcall
mov
sub
xor
inc
pop
xchg
leave
std
cld
sub
out
xchg
test
call
cld
xlat
cmp
jecxz
mov
jmp
mull
aaa
enter
xchg
pop
int
call
jp
xchg
fstl
cmp
push
jnp
inc
outsl
xor
fsubs
add
jmp
js
popf
dec
mov
mov
jb
aaa
sbb
enter
inc
sahf
jne
ss
arpl
bnd
xlat
sbb
add
mov
cli
and
xchg
imul
lods
pop
sub
jbe
and
ret
out
sub
push
and
cmp
outsl
mov
dec
xchg
cmp
cmc
int
mov
xor
mov
movb
inc
inc
dec
lods
push
aaa
lea
mov
rolb
sub
out
fildll
xchg
fistps
sti
movsb
adcb
add
test
adc
add
insl
movsb
xor
push
adcl
cmc
pop
sub
rorl
leave
cmp
das
push
mov
shrl
add
dec
and
clc
push
mov
enter
or
nop
dec
xchg
insb
push
outsb
gs
gs
imul
push
xchg
xchg
pushf
cmp
push
sbb
xchg
mov
in
cmc
and
outsl
shrl
xchg
sub
jle
ficoml
mov
xchg
jl
loop
push
mov
pop
es
mov
cmp
movsl
out
mov
push
push
lea
push
push
mov
stos
cli
mov
insb
enter
mov
aam
insl
enter
movsw
fiadds
push
and
jae
fs
cli
movsb
bound
mov
cmp
lea
sbb
imul
fistpl
jae
pop
xlat
out
xor
cmpl
gs
dec
xor
outsl
arpl
js
mov
dec
xor
mov
add
stos
cmp
xchg
pop
scas
jmp
pop
lock
pop
rclb
push
pop
lds
loopne
pop
cmpsb
cwtl
cmp
insl
in
mov
cmp
sbb
push
add
aad
jo
inc
jge
lcall
dec
test
imul
lods
push
dec
int
sti
sarl
sbb
mov
xchg
addr16
sbb
in
fwait
cmp
mov
lahf
test
andl
add
xor
sub
mov
lret
lret
stc
loopne
pop
mov
push
jo
push
fsts
push
xchg
movsb
xchg
std
mov
xlat
lea
mov
dec
mov
push
shrb
fldcw
or
xchg
sbb
call
cwtl
push
sti
divl
outsb
arpl
sti
mov
fisubrl
adc
and
jbe
sbb
leave
dec
sbb
inc
jne
or
xor
out
cltd
ja
pusha
dec
aam
inc
mov
xchg
shll
jecxz
and
add
lcall
std
fimuls
jnp
add
mov
mov
inc
sbb
neg
push
xchg
cmpsb
add
aaa
cltd
mov
push
lahf
jno
pop
xor
cmp
jno
xchg
jnp
cmp
es
jle
jnp
movsl
push
insl
mov
or
in
enter
fnstenv
mov
daa
or
inc
test
in
sub
call
out
stos
in
imul
pop
xor
loop
movsb
cmp
add
add
mov
shll
cmp
mov
sbb
lret
aaa
lahf
outsb
mov
cmp
aaa
push
arpl
mov
movl
or
xor
xchg
addl
xlat
shrb
rcrb
jl
mov
mov
pushf
movsl
ss
push
mov
int
xlat
jmp
mov
or
jecxz
pushl
outsb
mov
dec
pop
lea
sbb
lea
stc
das
xor
ret
or
mov
nop
or
xchg
push
jns
js
rcll
das
scas
cmc
mov
jne
out
in
sub
dec
mov
sbb
cmp
out
neg
repz
adc
inc
fs
and
das
fstp
enter
mov
adc
add
mov
addr16
loope
jl
stos
push
cmpsb
imul
push
or
cmc
sbb
les
pop
xchg
xchg
push
cmp
jne
pop
push
in
xor
sub
aad
sub
out
orl
jg
dec
out
cmp
inc
sbb
mov
xor
push
mov
or
mov
push
ret
sub
scas
and
sbb
cmp
jbe
mov
sarb
sub
push
pop
xlat
cs
mov
enter
xchg
sti
inc
pop
inc
pminsw
inc
cli
mov
mov
in
cs
sarb
dec
mov
xor
fs
pop
test
andl
cmp
cli
xchg
xor
mov
rcll
repnz
dec
enter
mov
xchg
and
jo
in
mull
add
bound
iret
xchg
sahf
shll
sbb
subl
lea
fimuls
out
sub
shr
and
daa
out
add
bound
jl
pushl
in
adc
inc
sub
out
fdivl
lods
xor
dec
sbb
repnz
push
frstor
mov
les
aaa
sub
mov
int3
xor
mov
mov
adc
outsl
mov
sbb
int3
mov
popa
inc
cmp
cmp
cmp
add
mov
sti
cmc
mov
and
imulb
pop
out
in
dec
std
popa
sbb
pop
aaa
shl
test
movsb
inc
std
dec
stc
lea
pop
xchg
fdivl
in
aaa
cmp
ds
ja
ficomps
fdivr
xor
add
mov
addl
xchg
subb
ljmp
jg
call
addr16
dec
mov
add
mov
inc
adc
mov
ss
imul
pop
cld
imul
inc
xchg
or
mov
cwtl
stc
dec
stos
jecxz
xchg
dec
inc
sbb
and
add
pop
loope
bound
xchg
out
std
add
shrb
shl
pop
ljmp
dec
fdivrl
sub
popa
xchg
adc
bound
pusha
and
int3
fistpll
cmpsb
mov
mov
dec
fstps
adc
scas
stos
movsb
mov
dec
and
or
pop
lock
lds
xchg
push
or
xor
stc
sbb
xchg
sbb
paddb
shll
outsb
jmp
jecxz
insl
and
mull
push
jnp
jle
pusha
push
fstpl
fistps
jnp
push
add
mov
lret
xchg
push
dec
jae
xor
stc
push
xor
bound
or
add
dec
popa
sbbl
roll
cmp
cmc
adc
test
out
in
push
mov
xchg
call
outsl
inc
lret
mov
mov
push
ret
adc
mov
sub
hlt
cmp
iret
mov
fstl
lahf
ret
inc
jb
jge
rolb
pop
mov
pop
pop
ds
xor
in
cld
mov
adc
inc
fs
cwtl
fmuls
movsl
cs
add
and
rcrl
shlb
xor
lret
jge
adc
push
jge
aas
mov
push
add
mov
int
aam
jnp
lret
jge
sti
ret
pop
and
fadd
test
lock
pop
cmp
sti
inc
adc
xor
xor
xchg
xchg
loope
js
fisubrs
pop
cmp
int
xchg
scas
jae
out
mov
or
push
lods
das
mov
pop
cmp
stos
xchg
sub
xor
pop
jae
pusha
je
lret
mov
scas
push
inc
and
mov
in
push
add
out
pop
or
std
inc
mov
inc
fsubr
icebp
mov
pop
scas
sub
dec
int
sub
fidivrs
add
loope
xor
ljmp
insb
divl
test
popa
aaa
aam
ds
mov
cltd
repnz
in
jp
cmc
inc
cmp
push
sbb
mov
pop
or
lods
xor
sub
mov
filds
movl
insb
cmp
sub
loopne
adc
add
fiadds
adcb
cmp
push
pop
cmp
sbb
mov
xchg
xor
push
in
in
movsbl
das
insb
pop
xor
pcmpgtw
cld
push
cmp
push
loope
sahf
mov
lea
orps
imul
cwtl
mov
gs
flds
lcall
cmp
bound
xor
push
cbtw
leave
xchg
cmp
test
into
adc
xchg
add
lea
shr
push
lret
sahf
mov
push
out
jecxz
jp
popa
push
cmp
push
dec
push
fisubs
mov
pop
adc
shlb
sub
in
lret
int3
cltd
xchg
or
aad
push
add
out
and
sub
sahf
ret
fistl
push
sahf
stc
lods
jmp
lods
insb
das
addb
or
fsubrs
pop
sti
cltd
lds
mov
xor
push
sbb
out
push
out
dec
cmp
sbb
repnz
arpl
cli
lds
fxch
addr16
xchg
ljmp
aas
stos
imulb
dec
je
hlt
mov
pusha
test
xor
cmc
movsb
xchg
std
mov
rcrb
lahf
bound
adc
or
iret
fs
aas
push
daa
stos
xor
mov
je
mov
cmp
shr
into
sarl
out
fs
sbb
sub
xchg
pop
jns
ds
push
lds
jb
mov
rcll
dec
pop
loop
and
out
mov
cmp
xor
out
adc
lock
xchg
xchg
ds
cmp
test
test
lahf
repz
scas
mov
fmul
lahf
adc
cltd
cltd
insb
je
sbb
jae
jmp
imul
or
sbb
pop
stos
lret
mov
pop
jmp
shrb
mov
mov
mov
adc
icebp
xor
xchg
rcrb
adc
mov
ret
cltd
cltd
sub
sub
hlt
insl
mov
cli
add
stos
pop
mov
into
aas
stc
daa
jle
addr16
push
shrb
enter
out
loopne
aam
test
inc
jne
adc
mov
sbb
sarb
inc
mov
lods
adc
daa
fisubl
inc
test
add
scas
movsl
adc
inc
lods
lock
movsl
out
push
and
and
fimull
loopne
pop
test
xor
or
push
scas
shlb
cmp
dec
adc
mov
mov
pushf
pop
sub
test
adc
pop
jl
adc
clc
das
mov
push
sbb
push
mov
insb
and
popf
lcall
cs
loop
mov
adc
push
mov
movsl
mov
dec
jge
insl
popa
dec
or
xchg
in
jge
aaa
mov
cmp
mov
push
int
dec
insl
scas
and
mov
push
imul
xor
or
mov
jo
add
fstl
dec
push
rorb
in
lds
ljmp
sar
stos
shr
ljmp
xor
stos
adc
cmc
sbb
aad
mov
movsl
pop
inc
jb
dec
lods
cmp
mul
mov
stc
add
cld
push
sahf
xor
add
fldt
mov
fbstp
lock
aaa
fstpt
inc
mov
popa
adc
sub
xchg
adc
xchg
mov
add
mov
lock
xchg
repnz
ljmp
pop
into
jb
iret
sahf
xchg
ret
dec
jg
xchg
mov
mov
clc
inc
sti
pop
ds
rcll
sbb
mov
cmp
cmp
xor
add
hlt
add
bound
mov
dec
and
pop
fsubl
ds
inc
ret
ds
fisubl
in
add
cmc
leave
push
into
jecxz
aas
jns
add
imul
ss
je
sub
aas
mov
roll
data16
adc
jno
jae
sbb
sbb
mov
lds
pusha
or
xor
xor
pushf
imul
mov
xor
jb
data16
sub
fs
fwait
adc
shl
mov
mov
cmc
lods
cmpsl
dec
inc
jae
xlat
xchg
imul
sbb
mov
std
xor
and
mov
subb
dec
push
jp
loop
leave
cwtl
out
lret
pushw
xchg
pop
mov
mov
bound
dec
mov
xchg
mov
das
xchg
call
adc
dec
xchg
push
sub
inc
pop
les
lret
xchg
lret
xor
push
test
dec
subl
inc
push
mov
mov
cli
pand
mov
xchg
iret
insl
xor
aaa
fmuls
push
or
inc
sahf
add
jns
pop
in
mov
cwtl
std
aaa
test
ret
repz
cmpsb
mov
mov
mov
sbb
inc
jle
cwtl
cmp
data16
mov
cmp
iret
nop
loop
mov
mov
fcmovb
movsl
mov
adc
mov
mov
jle
in
rcrb
insl
out
loope
test
cwtl
hlt
inc
mov
int
out
test
pop
out
mov
cmp
mov
cmc
cmp
mov
shrb
jne
ds
inc
xchg
mov
ds
mov
jge
or
lfs
test
in
mov
xchg
int
mov
bound
mov
and
mov
sub
adc
cld
mov
inc
inc
jbe
mov
clc
xorl
cltd
and
xor
push
cwtl
cltd
sbb
aas
push
sub
xchg
fists
les
and
sbb
cmp
aam
sahf
int
jge
mov
cmpl
bound
sub
loope
xchg
or
inc
fdivs
scas
and
fmull
cmp
mov
xchg
dec
push
and
push
fisttpl
pop
jmp
inc
in
push
out
lret
xor
add
mov
mov
cmc
xor
ljmp
mov
mov
mov
imul
jno
mov
or
lret
loop
jo
in
adc
or
sbb
push
mov
call
pop
fs
fimull
scas
packuswb
int
xlat
mov
insl
xor
pushf
out
mov
cmp
add
out
lods
mov
mov
xor
scas
adc
out
xchg
ljmp
jmp
lret
dec
mov
cld
cmp
and
pop
out
jae
push
out
js
sbb
aas
sub
outsb
and
lahf
inc
jmp
dec
adc
imul
xchg
cli
cvtpi2ps
xchg
cltd
sub
movsb
xchg
cmp
mov
pop
fs
jae
test
jne
inc
flds
dec
in
jmp
ss
out
xchg
test
scas
rolb
sahf
add
jnp
and
dec
ret
cmpsl
xor
pop
add
sbbl
or
or
mov
pop
dec
mov
xlat
add
and
push
enter
xchg
js
cltd
push
ret
aaa
mov
pop
pop
mov
cli
cltd
cld
in
enter
cli
out
and
mov
mov
inc
cmp
add
test
adc
fptan
jno
rorl
mov
into
dec
add
test
mov
imul
mov
jns
mov
cmpsl
ja
sbb
test
mov
rol
bound
testl
imul
xchg
sbb
inc
or
jl
ss
loope
mov
cwtl
mov
xor
shlb
into
mov
pop
test
pop
jb
mov
clc
popf
dec
sbb
inc
lock
cld
loope
cltd
in
inc
xchg
xor
ss
loopne
rclb
addr16
xor
cmp
mov
xor
cmp
outsl
sub
orl
dec
xor
aad
sbb
sub
and
int3
pop
push
dec
adc
faddl
loope
sahf
shl
lods
repz
sbb
cmpsl
adc
xchg
in
and
sarl
sub
out
ds
movsl
cmpsl
lock
pop
xor
lods
pop
movsb
pushf
xorl
xchg
adc
push
xchg
push
sti
rol
les
xchg
fstpl
sbbl
out
cli
lds
leave
std
bound
fsubl
mov
loopne
insb
adc
xor
push
jno
mov
aas
fs
mov
adc
pop
push
inc
push
mov
add
mulb
and
stos
aam
sub
lret
out
mov
xchg
adc
imul
dec
imul
add
mov
fildl
mov
in
mov
loope
cmp
outsl
jge
in
xchg
lods
sbb
jb
cmp
fucomp
cltd
popa
ds
outsl
inc
dec
cmc
nop
and
pop
clc
cmp
insb
jns
add
mov
mov
jbe
stos
movsl
leave
call
jl
sub
sahf
push
dec
test
push
jb
push
cli
push
aad
ficomps
outsb
jle
pushf
ljmp
je
icebp
insb
lret
andb
fcomps
leave
or
lret
adc
repnz
inc
cwtl
clc
leave
push
inc
push
pop
mov
mov
push
pop
pop
js
sub
fwait
or
xor
jle
mov
nop
loope
outsb
push
push
imul
sub
pop
sahf
mov
jecxz
add
aam
lahf
dec
cmpsl
imul
gs
mov
mov
xor
cmp
mov
or
xor
or
orb
push
pop
stos
sbb
mov
aam
int3
pusha
mov
outsb
xchg
gs
les
repnz
or
out
cmpsl
or
push
data16
mov
xchg
aaa
subb
jp
pop
push
and
loope
in
fisttpl
jno
mov
jnp
int
jl
adc
push
push
js
das
js
xor
and
ljmp
pop
xchg
mov
call
mov
lret
test
inc
out
cs
jnp
jnp
mov
xor
aas
imul
fwait
cmp
std
xchg
sbb
dec
jno
mov
cwtl
or
inc
idivl
cmp
pop
add
lock
inc
mov
aas
lods
in
mov
js
mov
adc
fadds
insl
push
bnd
cmpb
mov
data16
in
repnz
pop
movsl
adc
outsb
popa
jecxz,pt
pusha
and
mov
fldl
inc
js
jecxz
cmc
scas
loop
xchg
dec
cmpsb
mov
data16
das
xchg
das
mov
mulb
addr16
cltd
jb
fisttpll
jg
or
push
add
sub
jmp
fnstenv
cmp
sbb
dec
push
jno
sbb
orl
sbb
jecxz
enter
push
int
xor
xchg
and
cs
inc
xor
int
enter
daa
xor
inc
jmp
arpl
jge
fs
loop
xor
test
push
mov
sub
es
xchg
mov
jg
mov
fcoml
inc
cli
dec
dec
mov
add
shlb
dec
adc
cmp
xchg
jnp
fstl
ds
push
imul
dec
outsl
push
inc
addr16
sbb
rcl
cmp
push
ljmp
add
leave
jnp
dec
lea
pop
addl
push
mov
mov
sti
std
jb
jl
bound
pop
push
sub
lea
sub
mov
cmp
and
push
dec
mov
sti
sti
xor
sahf
xchg
mov
push
scas
jo
cmp
repz
cmpsl
cli
outsb
std
pop
mov
pop
jne
pop
mov
mov
movsl
xchg
add
fbld
xchg
mov
loopne
inc
mov
push
inc
push
sti
rorb
sub
push
div
add
and
arpl
xor
jl
test
mov
je
out
shlb
inc
dec
gs
jmp
sub
arpl
fcmovne
push
inc
jl
and
mov
int
jnp
jo
punpckhbw
dec
mov
jno
inc
imul
mov
leave
xchg
std
inc
in
insb
orl
sub
dec
add
gs
call
inc
push
mov
add
cli
pop
dec
dec
insl
mov
outsb
les
mov
test
mov
and
inc
mov
mov
push
enter
xchg
push
mov
inc
cmpsb
push
mov
inc
and
or
pop
clc
lret
jmp
mov
jp
adc
lahf
pusha
mov
pop
adc
or
jns
sub
inc
sub
xchg
xor
je
push
icebp
or
leave
jb
fistps
mov
mull
rorb
fbld
ss
push
cld
sub
cs
ret
out
cmp
repz
lods
or
jl
pop
jno
loopne
in
cmp
cmp
daa
xchg
ds
stc
cmp
push
shrl
stos
jmp
xor
bound
push
sub
ja
sbbb
je
jno
sbbb
dec
movsl
jmp
mov
orl
mov
mov
sbb
xor
inc
dec
push
js
mov
or
mov
add
cld
xlat
shll
cmp
adc
xlat
mov
dec
jl
jecxz
jl
xchg
sti
xchg
aas
sub
rcl
sarl
repz
outsl
fmull
cmp
mov
xchg
pop
inc
pop
pop
scas
test
lods
sub
jmp
push
int
and
jge
lods
xor
inc
inc
lret
mov
pop
int3
cmp
shrl
pushf
loopne
jle
mov
test
js
mov
scas
les
cmp
inc
push
lret
out
add
mov
popa
inc
add
fs
test
cmpsl
xor
dec
pop
gs
into
mov
mov
mov
push
popa
cmpsb
dec
add
loope
stos
and
adc
xor
xor
popf
mov
insl
xchg
jge
adc
movsl
movsl
add
sahf
inc
xlat
in
sub
mov
js
and
pop
sbb
and
lret
stos
popa
adc
repnz
insl
mov
cmp
sbb
inc
lcall
out
adc
fdivr
push
mov
pop
stos
push
jno
orl
add
divl
pusha
lods
mov
ljmp
in
mov
jbe
ret
inc
imul
or
testb
cli
push
jp
out
add
out
fsubp
jns
fistpl
nop
in
aad
sahf
jmp
mov
outsb
insl
cmp
or
jno
mov
dec
clc
aaa
xor
adc
add
pop
scas
sub
in
sarb
movsl
jnp
add
insb
in
loope
lret
xchg
fidivs
mov
fisttps
sbb
inc
xchg
addb
pop
int
insl
fsts
jb
lcall
cwtl
fwait
ss
js
xor
push
cmp
xchg
xchg
popa
cmpsl
aas
dec
pop
and
imul
cwtl
or
pop
stc
sub
pop
mov
iret
pusha
mov
jb
aam
ret
push
sbb
inc
add
or
dec
stc
icebp
aas
scas
mov
icebp
fistps
sti
das
sub
jl
ds
cmpsb
fisubs
cmp
insb
testb
add
les
lods
cmp
xchg
push
pop
pop
xor
jmp
push
std
mov
lret
and
mov
aas
aas
loope
adc
mov
dec
and
pop
jnp
sahf
push
jge
dec
or
nop
push
insl
fs
dec
xor
mov
push
pop
push
js
std
cmpl
push
mov
cmpb
aam
cmp
lock
repnz
xchg
add
mov
rcr
rcll
push
shr
jmp
and
mov
rcrb
aas
arpl
sbb
adc
out
sbb
pop
xchg
testl
xchg
loop
push
or
aaa
pop
jecxz
push
adc
jmp
sbb
add
mov
xor
jp
lahf
pop
adc
and
pop
mov
push
xor
int
adc
sbb
fcomps
jg
pop
ja
mov
pop
leave
cmc
scas
cs
xchg
adc
jns
push
push
nop
lea
mov
repnz
clc
sub
dec
xchg
cmp
out
or
jnp,pt
cmp
testl
mov
pop
cwtl
inc
fistl
xchg
leave
cmp
and
xor
iret
movsl
test
fsubrs
sti
xchg
std
dec
jle
sbb
sarb
push
out
mov
sbb
bound
ret
in
insb
cmp
sbb
dec
sti
xchg
lret
mov
and
cmp
mulb
test
mov
ficomps
mov
jns
or
or
fidivl
aad
stos
sbb
and
mov
ret
rorb
data16
add
cltd
cli
fs
mov
addr16
sbb
lret
or
je
dec
daa
fiadds
xchg
or
shr
pushf
dec
pop
add
inc
rcl
mov
add
push
cld
cltd
mov
push
aaa
mov
icebp
cmp
jl
mov
adc
push
fisubs
pop
xor
mov
jo
xor
or
sub
adc
imul
push
mov
ret
jp
push
fwait
inc
mov
insb
add
aas
mov
fisubrs
test
jno
sub
movsl
or
stos
loop
mov
outsb
cmpsl
outsl
cli
in
jg
aaa
and
pushf
mov
iret
mov
or
outsb
or
fs
mov
int
mov
push
or
mov
mov
mov
cmc
jl
mov
gs
sbb
ret
stos
js
flds
mov
lds
push
cmp
sti
cmc
je
xor
and
lods
iret
lods
lcall
inc
iret
pop
and
shll
dec
pop
xchg
fidivrl
xchg
xor
mov
push
loope
sahf
mov
inc
dec
xchg
sub
loopne
sti
cmp
push
aaa
jo
cmp
cmpsl
pop
or
lcall
pop
rclb
jnp
dec
and
sub
xchg
mov
pop
xlat
sub
loop
mov
mov
test
or
lahf
inc
pminub
xchg
push
ja
lahf
jbe
mov
push
lret
mov
mov
cwtl
in
sbb
das
inc
hlt
nop
dec
xor
enter
dec
or
push
pop
push
int
inc
lea
insl
adc
lret
or
sbb
lcall
xchg
mov
jl
js
mov
pushf
push
test
xor
or
in
mov
les
pop
cmp
jle
or
stos
add
out
imul
pop
sub
adc
xor
jae
cmc
sub
dec
ret
shlb
lahf
test
xchg
insl
xchg
push
mov
enter
adc
xchg
add
in
pop
imul
cmpsb
mov
or
or
lock
stos
add
xchg
xor
cmp
test
shlb
lret
test
adc
repnz
push
jne
pop
into
push
cmp
pushf
jo
lcall
jge
push
mov
pop
pop
xchg
lret
daa
push
test
xchg
jg
aam
xchg
ljmp
push
jns
lcall
or
lcall
rcr
xchg
movsb
test
push
mov
test
cmp
popf
inc
dec
leave
fsubrl
pop
lea
or
or
add
cmpsb
adc
lods
les
jno
rcrl
or
not
mov
push
scas
subb
icebp
adc
mov
mov
inc
xchg
mov
sub
ds
ds
fs
in
loopne
ret
or
sahf
ds
bound
sub
in
or
sbb
lods
push
rol
addr16
cmp
mov
push
outsl
lcall
or
cwtl
fbstp
mov
mov
jg
xor
adc
test
or
test
cmc
pop
jmp
int
jmp
imul
inc
and
xchg
insb
sti
pop
pop
sbb
inc
mov
fsubrl
hlt
jns
mov
scas
sub
inc
or
push
out
mov
ds
mov
xchg
cltd
mov
mov
dec
aad
fcmovnbe
or
adc
mov
repnz
and
pop
push
pop
and
rclb
jo
negl
rorl
js
decl
sbb
sbb
dec
push
shlb
leave
dec
xor
fmuls
fnstcw
pop
dec
sbb
arpl
mov
ret
out
adc
enter
dec
xlat
incb
into
stos
jecxz
jle
mov
addr16
jle
pop
sbb
pop
sbb
sar
sub
lahf
xor
fxch
fstpt
addr16
in
push
jno
daa
cwtl
adc
aaa
stos
pop
mov
repnz
push
fwait
jmp
shl
data16
dec
xchg
mov
iret
push
xchg
add
mov
imul
jbe
cmpsl
out
repnz
int3
fcompl
dec
and
fisttps
pushf
dec
pop
jb
xor
shrb
movsl
inc
jns
les
add
sbb
leave
sub
push
adc
cli
mov
jno
rclb
cwtl
xor
push
fdiv
call
out
pop
inc
lods
jae
call
inc
pop
mov
xchg
fsub
loopne
fisttpl
and
or
xchg
data16
pusha
imul
pop
add
inc
jo,pn
and
loop
jae
sub
cmp
ret
in
add
das
push
or
sbb
push
jb
das
pop
push
jnp
call
pop
call
enter
loop
fisubs
lods
loope
ss
hlt
test
fistl
mov
xor
loop
cmp
mov
in
adc
cmp
add
xchg
dec
lcall
xor
sub
fdiv
fisubrl
cmpsb
leave
cmpsb
inc
in
lret
jno
repnz
inc
pop
lahf
sub
pop
stc
out
push
pop
cwtl
push
in
add
out
cli
mov
dec
rclb
jae
mov
ljmp
cmp
sub
xchg
mov
inc
mov
pop
and
xlat
repnz
int
sub
adc
pop
cld
cli
mov
xchg
mov
inc
sahf
and
adc
mov
test
scas
divl
loop
jge
movsb
ds
imul
jb
fcmovb
imul
lds
or
sbb
add
lret
cmc
xor
sti
push
jle
imul
jno
orl
ds
cmp
pop
and
addl
mov
xchg
scas
sub
push
jbe
imull
ss
sbb
jmp
xchg
xchg
leave
sbb
int
add
jnp
mov
fwait
js
adc
aaa
add
or
fsubrl
scas
xor
mov
ret
popf
int3
adc
pop
pop
sub
jae
stos
push
xchg
and
daa
aaa
xor
xor
ljmp
inc
cmp
cli
shrb
mov
push
push
rcrl
jecxz
xchg
pushf
scas
lods
imul
xor
stos
cmp
fbstp
mov
pop
ds
mov
bound
xor
jne
mov
xchg
into
or
cmc
xchg
mov
imulb
adcb
xor
inc
mov
nop
enter
adc
pop
xchg
rcll
mov
rorb
xchg
push
std
test
cmp
and
addb
adc
push
xlat
push
mov
ja
push
dec
sbb
push
fs
call
cs
xchg
in
int3
inc
push
push
hlt
jg
sbb
enter
scas
pop
loop
xchg
movsb
xor
dec
int
and
les
mov
pop
dec
xor
movsl
sub
fwait
xor
jne
mov
mov
jecxz
mov
aas
ja
mov
les
addr16
insb
fcoml
loopne
and
or
int
ja
pop
mov
fdiv
or
push
aas
sbb
gs
cli
repnz
xor
das
data16
mov
and
rcr
cli
dec
jg
data16
fstl
jb
inc
jp
inc
mov
sbb
sub
test
mov
stos
call
int
aas
pop
outsl
mov
push
inc
dec
push
rol
jae
mov
js
and
xchg
pop
lea
fmull
shrd
subl
cli
pop
xor
cmp
add
test
add
ret
dec
jns
cmpsl
inc
push
xchg
pop
push
roll
insb
sbb
fcomi
cmpl
inc
gs
jmp
sub
push
lahf
fwait
or
popf
jae
dec
mov
add
xor
mov
js
and
arpl
cmp
inc
jns
mov
lret
outsb
shll
adc
push
xor
popf
push
pop
fistps
cs
and
inc
adc
ret
adc
mov
adc
in
push
int
out
xchg
sub
push
fstpt
or
or
mov
jmp
insb
and
pop
mov
and
scas
aam
lods
scas
mov
ret
or
adc
rorl
arpl
pop
xchg
lahf
or
pop
inc
xor
das
repnz
add
lods
jae
iret
js
pop
or
push
mov
fdivl
test
hlt
pop
js
into
ret
aas
rol
pop
jno
popa
xchg
mov
sub
sub
mov
xchg
sub
mov
dec
js
aaa
xchg
popa
loope
test
cli
inc
sbb
arpl
rorl
cmpsl
sub
les
mov
or
push
icebp
stc
inc
add
add
jle
xchg
add
sti
pop
mov
mov
hlt
xchg
cmc
loop
xor
stos
push
int3
cli
add
test
xor
test
std
mov
mov
push
sub
jnp
addr16
pop
mov
mov
call
ret
adcl
push
mov
and
add
aad
movsb
pop
nop
push
outsl
pop
sti
jl
cmp
pop
decb
pop
sti
ret
cmp
mov
gs
mov
adc
xor
push
add
push
outsl
dec
mov
sarl
mov
and
jb
adc
repnz
cltd
inc
std
in
jo
je
icebp
iret
roll
loopne
js
cmp
scas
jl
insb
fcomp
mov
xchg
stc
shll
pop
and
sub
aam
pop
int
push
shrb
addr16
int
inc
rolb
push
notb
subl
xor
cmp
add
imul
mov
test
mov
inc
adc
jl
xor
mov
repz
pushf
xlat
inc
cmpsb
or
or
fwait
int
pusha
mov
xor
mulb
jl
or
mov
pop
loopne
push
xor
pop
and
sti
sub
repnz
mov
fidivs
and
vmread
add
pop
or
inc
pop
mov
ja
push
mov
popa
mov
loope
jno
or
pop
inc
dec
inc
inc
inc
insb
clc
mov
aaa
jb
test
aad
pop
mov
adc
call
mov
jp
push
push
jbe
xchg
push
shl
les
mov
xorl
xchg
pusha
mov
mov
cli
movsl
inc
xor
les
ret
lea
mov
cmp
ror
iret
inc
fcoms
pop
mov
mov
inc
mov
lock
sti
mov
subl
repz
icebp
push
cmp
inc
dec
pop
js
mov
mov
int
test
daa
jae
insb
sub
sbb
lret
cli
fisubs
divl
mov
stos
fistps
repnz
mov
loopne
nop
stos
lret
mov
rolb
inc
fs
lret
jge
cmove
mov
pcmpeqw
inc
in
lahf
xor
xchg
mov
pop
outsl
mov
lret
mov
aaa
push
out
sahf
cli
enter
mov
mov
push
test
cmp
jns
mov
pop
and
stos
inc
popl
push
shll
or
pop
fs
jg
ja
push
mov
cmp
push
loopne
xchg
lcall
sub
frstor
xchg
fs
lods
dec
xchg
mov
cmp
jnp
shlb
stc
cmp
ret
in
or
pushf
lret
mov
adc
js
popa
test
xlat
insl
jnp
push
cmp
addb
out
mov
int
sub
incl
mov
ja
push
es
sbb
stc
in
sbb
daa
adc
outsl
jne
dec
or
add
and
jge
dec
dec
fistpll
aad
sti
push
push
adc
shll
mov
aad
sbb
icebp
mov
cmpsb
movsb
lret
pop
dec
dec
xchg
pop
add
sahf
pop
lock
call
loop
cmpsb
test
insl
mov
jmp
dec
pusha
jmp
add
sti
imul
cmc
sarl
dec
mov
jno
xor
pop
sahf
dec
pop
mov
imul
pop
fwait
mov
xchg
dec
lods
cmp
push
ret
je
push
negb
movsb
repz
mov
dec
fmul
mov
and
enter
icebp
loope
push
jnp
sub
int3
add
push
jnp
mov
loop
pop
sbb
mov
cmp
fwait
in
js
sub
shl
cwtl
push
dec
and
cmp
mov
aad
aam
sti
or
add
mov
ds
jmp
xlat
sti
imul
add
sub
cmpsl
pop
inc
sbb
loop
add
mov
mov
xchg
jno
jl
call
int
pop
pusha
clc
mov
call
lret
sub
push
outsl
and
cmp
mov
cmovo
jg
out
orl
push
leave
and
lea
cmpb
mov
cmc
push
adc
inc
lahf
cmpsb
out
call
nop
lods
mov
add
out
jle
or
push
mov
clc
orl
mov
jmp
or
lret
push
adc
cli
inc
icebp
idivl
mov
in
insl
add
out
xlat
enter
pop
mov
cwtl
mov
dec
push
popf
jg
push
push
out
cmp
jecxz
fwait
cmc
push
push
mov
cs
dec
lcall
dec
cmc
add
clc
dec
xlat
out
aas
outsb
sbbb
xchg
in
jo
sub
pushf
sti
adc
cli
aam
lea
lahf
inc
dec
cwtl
pop
data16
fiadds
clc
sarl
sbb
imul
mov
fildl
ret
xchg
push
and
mov
or
xor
cmp
inc
popf
insl
xchg
xor
fistps
sbb
mov
or
mov
movsb
mov
dec
sub
enter
push
shlb
sub
jne
out
outsl
jg
xchg
mov
adc
std
mov
cltd
adc
mov
xchg
mov
mov
cmpsl
out
test
sub
inc
and
cmp
pop
dec
test
mov
sub
mov
sub
cld
push
push
adc
xor
cmp
adc
in
das
in
out
push
mov
and
inc
xor
call
daa
mov
repz
mov
aam
cmc
test
shlb
outsb
add
pop
insl
mov
cmc
xor
inc
mov
scas
lahf
cwtl
xchg
jge
add
and
dec
mov
or
sub
mov
test
push
jmp
into
push
sti
push
rcrb
cwtl
push
cmpsl
aad
mov
dec
ficomps
rcrl
in
in
sahf
mov
js
ficomps
je
or
fwait
pop
inc
sarl
mov
das
mov
loope
mov
jecxz
das
xlat
jns
testb
xchg
dec
testl
stos
cmp
int
fisttpll
je
roll
dec
xchg
roll
pushf
mov
mov
xchg
movsb
dec
push
jmp
xor
scas
cmc
fwait
aad
mov
pop
movl
add
scas
xor
xchg
cmp
movsl
pop
xor
xor
leave
pop
fsubrl
addl
jp
dec
je,pt
hlt
mov
into
mov
sub
add
mov
stos
insl
mov
sahf
pop
sahf
mov
fcomp
hlt
mov
or
js
aam
cmp
jl
cmp
stc
mov
xchg
bound
jne
jge
lds
movsl
icebp
test
aam
hlt
mov
rcl
xchg
mov
jle
mov
icebp
xlat
push
or
fisubrs
mov
pop
and
cmpsb
dec
stos
icebp
gs
and
push
mov
cld
mov
dec
pop
mov
test
add
pop
mov
lds
push
les
dec
adc
decl
fists
shl
mov
aaa
lahf
adc
and
lret
add
lret
pop
inc
std
mov
ss
mov
rol
pop
mov
iret
mov
mov
adc
lea
sub
adc
leave
cmp
sub
in
pop
loope
icebp
jnp
mov
ljmp
je
stc
repnz
sbb
add
pop
sbb
sbb
push
jnp
dec
xchg
arpl
mov
insl
enter
and
call
jle
push
fiaddl
pop
bound
nop
cmp
pop
add
add
das
jle
cmpsb
cltd
pop
mov
pop
nop
inc
adc
in
adc
fnstenv
sub
mov
aas
adc
mov
mov
adc
popl
loopne
push
movsb
sub
out
and
cmp
jg
and
cmp
test
clc
jae
dec
shrb
mov
jle
sub
ss
movsl
ljmp
jnp
and
xchg
lea
fdivrs
and
aas
pop
rcrb
dec
push
mov
fs
jecxz
js
add
sub
pop
and
popa
test
in
lock
in
pushf
jnp
add
mov
aas
negl
inc
xchg
sbb
add
cwtl
adc
inc
add
fsubl
shrl
stos
data16
hlt
sub
stos
pop
sub
cmp
test
cs
cmpsl
insl
into
test
les
cld
mov
mov
movsb
xchg
mov
adc
and
sub
xchg
into
jp,pn
das
and
xor
pop
movaps
jnp
dec
test
xor
add
idivl
pop
nop
cmc
paddusb
int3
add
xchg
inc
add
repz
dec
mov
mov
ss
cmpsl
imul
in
xor
imul
xchg
push
int
add
subl
mov
or
add
into
mov
xchg
cmp
fstpl
icebp
xchg
je
mov
xchg
cmc
hlt
pop
sub
mov
ja
in
in
addr16
pop
jb
mov
xor
or
mov
loope
push
orl
iret
xor
out
mov
iret
aas
or
xor
imulb
and
mov
jnp
push
xchg
mov
sub
movsl
push
stc
pop
int3
add
sbb
and
in
xchg
xor
fistl
xor
fwait
jno
test
pusha
mov
inc
mov
mov
ret
and
cmp
out
int
jnp
pop
xor
inc
fsubs
or
leave
mov
lods
cmp
loop
stc
pushf
pop
dec
or
std
nop
sub
xchg
push
mov
mov
clc
push
pop
stos
data16
inc
std
cmp
xchg
adc
sub
adc
jge
mov
push
dec
cltd
mov
loop
cld
stos
sbb
fidivrl
ja
push
loop
leave
movb
dec
movsb
out
aaa
mov
ret
lret
push
push
and
sbb
movsb
jnp
xor
mov
push
iret
mov
ja
mov
jp
xlat
test
popa
jb
xchg
or
nop
push
xor
jae
das
cmp
cmp
and
lret
negb
adc
test
mov
push
push
loope
mov
mov
shlb
mov
test
add
jp
dec
push
inc
push
jo
subb
sub
or
popa
pushf
inc
iret
mov
clc
aam
mov
in
hlt
xchg
pop
jmp
xchg
cmp
imul
iret
inc
aam
or
rcrb
mov
jo
push
dec
mov
add
jns
mov
xor
cltd
push
fadd
rcr
mov
int3
mov
and
lods
sti
bound
mov
push
cltd
std
std
jne
daa
dec
pop
and
adc
in
movsb
out
or
inc
aam
xor
lahf
aaa
xchg
mov
push
xor
notb
ja
ret
and
sbb
xchg
pushf
jecxz
fcmovu
imul
sub
dec
mov
sub
ret
jo
lret
cltd
popf
in
sarb
xchg
pushf
aaa
clc
push
lds
in
sub
push
cmp
shl
sbb
test
sbb
arpl
add
mov
push
cli
adc
stos
insb
in
inc
inc
push
stos
jcxz
pop
sti
popa
jnp
mov
aam
aad
jns
xchg
cmp
cwtl
pushf
push
push
sbb
test
and
push
test
or
dec
mov
mov
sub
push
sbb
int3
inc
hlt
and
sub
dec
les
inc
sub
mov
jecxz
shrb
mov
je
iret
fldenv
sub
pop
jnp
aaa
ficomps
in
sub
int3
cmp
or
add
outsb
mov
cltd
sarb
shl
mulb
cltd
mov
xchg
xor
cmp
push
sub
fwait
call
push
jbe
stos
das
xorl
enter
cmp
add
sub
push
fwait
pushf
or
addr16
sub
shll
imul
xor
inc
dec
lret
or
movsb
and
mov
lahf
inc
mov
lock
ficompl
leave
mov
sti
sbb
add
fldt
jecxz
or
int3
pusha
sub
sbb
cmp
xchg
mov
or
imul
test
jnp
aas
jnp
lods
fwait
ss
jecxz
daa
pusha
push
ljmp
ret
test
sub
xchg
jnp
pop
xor
sahf
mov
adc
sbb
addr16
sbb
push
dec
xor
xchg
push
pop
and
or
inc
andb
mov
pop
xor
cld
cmp
add
shll
insl
imul
fadd
xor
iret
cli
in
mov
out
ret
ljmp
pop
xor
mov
mov
mov
divb
sarb
adc
cmp
cmp
xorb
pop
sub
mov
jg
pop
mov
mov
pop
or
sahf
dec
and
pushf
and
iret
ret
lahf
xchg
or
mov
mov
rcr
xor
mov
jo
aas
roll
mov
in
and
in
fisttpl
or
icebp
and
lcall
shrb
sub
sub
xchg
test
dec
fwait
rcll
cmp
mov
mov
test
jb
mov
repnz
jg
mov
push
inc
mov
aaa
outsb
mov
xor
push
ss
or
cli
ja
into
out
cld
jecxz
adc
ljmp
inc
add
xlat
enter
push
je
iret
ficompl
cmp
mov
daa
xor
adc
mov
mov
repnz
lock
xchg
dec
xchg
xchg
adc
or
add
int3
sbb
ret
add
call
orb
add
je
dec
mov
sahf
js
push
test
mov
mov
mov
aas
sbbb
out
pop
add
out
push
popf
xchg
insl
xchg
pop
nop
dec
sbb
aad
enter
negl
into
hlt
dec
mov
mov
mov
js
lret
das
mov
das
or
ficomps
xlat
cmc
sbb
pop
aas
sub
xchg
mov
xor
mov
cmpsb
cmp
jne
shrb
xor
pop
lods
hlt
pop
jnp
push
stc
mov
cmp
xchg
fists
ds
and
adc
add
les
pop
mov
lcall
cmp
inc
cld
mov
sub
mov
mov
js
into
addr16
pusha
fldenv
ljmp
fucomp
lcall
cmp
fcoml
cli
test
push
xor
addr16
push
imul
ds
xchg
out
mov
enter
sbb
push
mov
or
jl
dec
and
cmp
int
insb
fidivs
pop
and
dec
sub
add
jmp
xchg
les
and
mov
stos
dec
sbb
mov
and
mov
mov
pop
sbb
mov
inc
ffree
xchg
cwtl
push
jno
jne
repz
loop
xor
lahf
push
push
pushf
xchg
mov
jmp
adc
es
mov
faddl
and
iret
stc
push
xchg
pop
sahf
sbbl
repnz
mov
inc
int3
and
scas
adc
pop
outsb
adc
jg
mov
push
gs
cmp
or
xchg
adc
mov
ret
sub
cwtl
mov
flds
rol
mov
pop
push
daa
jnp
adcl
xchg
inc
mov
and
ds
dec
clc
insl
test
push
lea
popf
xchg
push
mov
and
inc
gs
push
xor
rcr
ds
insl
mov
and
lret
arpl
ja
add
inc
dec
ljmp
leave
mov
outsl
cmp
push
call
sbb
mov
sbb
ret
imul
pop
xchg
dec
popa
je
mov
mov
add
mov
mov
aas
int3
cli
insl
xchg
or
or
push
pop
pushf
xor
push
adcl
sub
addr16
in
sti
rcrb
xchg
fisubrl
lods
inc
insw
fidivrl
adc
xor
ret
add
xor
lret
push
xor
ds
cwtl
cmp
gs
inc
jb
xchg
fistpll
mov
cli
dec
xlat
sub
dec
xchg
mov
outsl
cmpl
sbb
dec
mov
arpl
jg,pn
push
cmpsb
repz
out
cli
fsubr
push
cld
cmp
xchg
pop
push
mov
cmp
push
mov
dec
mov
mov
sbb
push
sub
pop
push
fcmovnu
push
dec
ds
out
mov
sti
jecxz
iret
pop
ss
out
dec
jge
pop
repnz
mov
mov
fldl
xor
dec
or
es
test
mov
and
lahf
mov
enter
inc
push
inc
mov
xorl
pop
jb
adc
pop
notb
mov
pop
jo
nop
jnp
pop
lret
es
mov
out
pushf
adc
jne
pop
out
cmp
pop
pop
lods
xor
mov
mov
mov
sbb
and
dec
shrb
cmp
les
xchg
das
and
in
hlt
adc
dec
pop
cmp
enter
fsubrs
out
add
push
ja
and
ret
or
movsb
popf
repz
push
mov
adc
je
xorb
jns
pusha
mov
mov
int3
and
cmp
add
aad
loopne
mov
scas
and
fisubl
aas
xor
lea
mov
scas
cmp
iret
pop
imul
outsb
pop
in
lods
pop
addr16
or
inc
xchg
jmp
bound
and
xchg
mov
mov
lods
and
pop
dec
ret
aaa
sub
das
jns
cmp
js
push
adc
and
xchg
xchg
int
insl
xor
xchg
mov
pop
xor
cmc
jns
sub
fiaddl
jl
jmp
dec
adc
sub
pop
cli
and
push
or
adc
jno
mov
loopne
push
int3
xchg
add
or
push
pop
inc
lock
in
and
je
jge
sti
pop
jbe
sbb
stos
sub
dec
mov
jbe
mull
dec
inc
stc
test
mov
pop
push
pusha
jne
mov
mov
int
push
divl
adc
sbb
xorl
push
lds
cmpsb
inc
sub
and
sbb
insl
fstl
les
mov
jmp
and
push
adc
clc
and
sbb
mov
cmp
popa
adc
nop
add
nop
dec
ret
xchg
ret
pop
mov
out
cli
xchg
mov
jp
mov
cld
mov
outsl
and
scas
jae
js
aad
pusha
pushf
xchg
fwait
jge
imul
push
jns
sub
inc
jl
cs
bound
jg
fstpt
ja
mov
xchg
xchg
lret
push
adc
push
add
cmc
sbb
sub
stc
jno
jge
fidivl
jmp
lret
sbb
testl
aaa
xchg
stos
cmp
cwtl
shl
aam
mov
stc
testl
jno
inc
test
mov
popf
jns
aas
shrb
push
insl
cmpsl
push
cwtl
leave
or
mov
jne
jo
lahf
mov
adc
sub
sbb
sbb
rcrb
add
scas
aaa
popf
out
push
or
clc
and
ret
rclb
xor
rorl
cmpb
push
addr16
sub
idivb
pushf
push
outsb
xorl
push
lret
cwtl
or
hlt
out
aam
hlt
addr16
out
test
fdivrs
cmp
dec
mov
sbb
adc
mov
xorl
das
sahf
adc
push
sahf
mov
adc
fcmovnu
jle
mov
mov
mov
or
push
insb
mov
dec
and
lea
insl
xchg
ficompl
lock
push
aam
jne
xor
loop
in
rolb
sahf
call
lds
xchg
aaa
mov
mov
cmpsl
pop
mov
and
inc
sub
js
xor
xchg
add
xor
lret
call
punpckhdq
xor
test
pop
sbb
lcall
shll
scas
popf
vxorpd
sbb
movsl
aaa
adc
add
adc
sub
add
inc
mov
sub
andl
pushf
and
xor
sub
lea
pop
add
pusha
out
stos
push
js
xor
je
add
add
fistl
adc
xchg
xchg
xlat
int
xor
push
jge
adc
pop
repnz
push
adc
out
add
lds
out
push
outsb
pushf
add
in
pop
out
inc
fs
dec
cmc
fiadds
dec
repnz
cmp
ret
mov
repnz
popa
idivl
jnp
jnp
add
xchg
ret
jmp
cmp
mov
test
add
push
sti
outsl
dec
test
xor
xor
jno
orl
cli
mov
shr
cs
sbb
clc
fwait
push
shll
mov
add
cli
jge
xor
adcb
or
and
dec
inc
and
jp
cmp
lcall
ret
sbb
mov
adc
mov
cmp
adc
ss
test
mov
rorl
mov
push
push
inc
and
in
cwtl
frstor
cmp
shlb
cmp
cli
jno
sub
cld
jae
iret
sub
sub
cld
test
insl
mov
push
add
pop
jp
lret
xlat
insb
or
js
call
imul
mov
jo
popl
enter
mov
mov
jnp
pop
xorb
mov
inc
subl
in
add
mov
rolb
jno
inc
int
or
or
dec
jns
rorl
loop
mov
adc
xchg
pop
xor
mov
js
rcrl
in
into
xchg
int3
cmpb
inc
test
aas
insb
fcomi
jb
jmp
xor
and
dec
jne
mov
scas
sub
mov
push
movsl
lods
scas
lret
push
loopne
jl
bound
pop
xchg
insl
adc
push
nop
loopne
jne
clc
jp
repnz
rcll
testl
push
push
xchg
rcl
loope
bswap
adc
dec
fdivrl
push
cmp
sahf
mov
in
xor
pop
in
mov
pop
ret
mov
ret
scas
mov
and
ret
sub
lds
mov
jecxz
push
ss
dec
test
pop
inc
push
outsb
xchg
mov
enter
insl
and
sbb
sub
les
fs
push
mov
dec
xor
js
aad
and
es
add
mov
adc
dec
in
adc
sbb
pop
aad
and
jb
sti
or
mov
dec
dec
pop
int3
mov
aas
mov
cld
stos
pop
xor
push
adc
cmpsl
cmc
xchg
cs
mov
xor
push
sub
lahf
xor
pusha
sti
gs
lds
cmpsl
push
shrb
and
rcrb
push
stos
or
adcb
je
sahf
aaa
js
ljmp
jns
push
pop
dec
js
adc
mov
mov
ficoml
cmp
je
or
cmc
push
mov
pop
stos
dec
xchg
jecxz
push
aas
pushf
jnp
sbbl
ds
cmp
push
pusha
mov
adc
popa
jno
loop
mov
lods
xchg
mov
and
lods
int3
jno
sbb
pushw
aam
mov
addl
xor
pop
ret
rorl
xor
loopne
pushf
mov
lods
sub
stc
aam
push
cmpsl
push
lret
and
pushl
mov
adc
std
xchg
or
xchg
jnp
into
lods
push
mov
or
sbb
mov
aad
adc
jnp
mov
ret
xor
cmc
stc
dec
subl
enter
mov
xor
movl
arpl
test
push
cmc
cmp
add
std
xor
inc
scas
loope
test
icebp
mov
pop
pop
cmp
das
or
push
pop
clc
jmp
mov
out
outsl
cli
mov
cmp
jg
jae
sub
sbb
lods
aad
or
cmc
mov
xor
or
stc
dec
popf
inc
lcall
cmpsl
inc
pop
cmp
push
dec
jge
sbb
sub
les
sub
xchg
inc
addr16
std
jne
mov
xor
nop
mov
lahf
sbb
pusha
sub
pop
cmpsb
cmpsl
jb
add
xchg
add
pushl
iret
mov
cli
mov
shlb
inc
nop
add
push
repz
fidivrs
inc
out
pop
not
sbb
shrb
in
loop
leave
adc
loopw
inc
dec
dec
ret
lock
cli
lret
add
jne
and
jp
fwait
arpl
popf
mov
pusha
fwait
push
enter
add
loopne
mov
mov
inc
sub
cmc
comiss
int
jno
or
sbb
shl
push
scas
lods
mov
fs
aaa
fiadds
repnz
add
in
xor
sti
std
das
fisubs
xchg
adc
and
jo
add
jno
sbb
and
jo
mov
pop
push
fidivrs
pop
cld
mov
or
nop
xchg
or
test
iret
mov
jge
arpl
mov
insl
movsl
jbe
hlt
jp
sub
shll
mov
and
sub
ret
cmp
sbb
out
mov
mov
ljmp
add
add
dec
lcall
push
and
xchg
mov
mov
dec
or
daa
pop
jge
push
mov
adc
inc
lods
lret
fdivs
or
or
cs
mov
pminub
adc
dec
paddusw
pop
adc
roll
mov
sub
ficoml
sub
mov
mov
add
andb
pop
mov
sti
jnp
push
imul
xor
cmp
fcmovne
mov
pop
hlt
rorl
loope
adc
adc
push
push
sub
stos
or
jb
ss
insb
xor
xor
and
sar
sbb
idivl
outsl
add
lock
pop
add
add
adc
mov
div
ret
cmc
out
and
dec
sub
sti
add
or
mov
mov
ret
cltd
mov
loope
std
lcall
xchg
out
dec
stc
lahf
push
adc
aas
mov
call
movsl
pop
ret
sub
out
fwait
mov
push
dec
jge
repz
adc
nop
pop
ret
or
outsb
movsb
sub
dec
pusha
loopne
mov
mov
jg
mov
sbb
lods
jne
std
jle
daa
ljmp
fdivl
rcrb
arpl
test
xor
aaa
orb
jp
sub
and
sarl
notl
cmp
jnp
pop
cmp
popa
bound
repz
cwtl
sub
or
mov
lods
and
mov
insl
mov
cmp
aad
jg
int
mov
clc
outsb
sbb
lea
xor
mov
shrl
sbbl
dec
cmc
mov
push
push
xor
push
cwtl
mov
fists
cmp
in
inc
or
xorl
scas
hlt
fs
mov
test
mov
std
inc
stos
push
sti
aas
movsb
mov
rolb
xor
cmpsl
mov
sti
and
ret
cld
mov
inc
jo
pushf
or
pop
hlt
es
lds
out
cs
call
jno
and
pop
jns
sti
and
add
movsb
mov
ja
nop
mov
ljmp
push
jge
out
jmp
andb
add
pusha
int
xor
dec
dec
sbb
out
mov
push
inc
add
insl
jmp
test
scas
dec
les
inc
cmp
or
cs
push
test
xor
pop
add
and
cli
jo
rcl
fs
xchg
std
mov
icebp
inc
adc
outsl
test
inc
mov
mov
les
test
mov
mov
mov
stos
in
mov
stos
leave
or
ffree
insl
lcall
out
outsb
push
loop
sub
add
sahf
xchg
jb
cmc
mov
ficoml
fdivl
and
popf
adc
fcmove
and
inc
add
xor
mov
add
inc
mov
insl
les
mov
push
inc
mov
cltd
cmpb
push
adc
ss
jae
aaa
int
xchg
sbb
cmp
mov
add
jb
mov
test
push
mov
mov
push
movsl
jno
sbb
js
mov
or
movsb
push
cmpsb
add
add
jnp
enter
adc
adc
test
inc
pop
dec
adc
cld
nop
xor
inc
mov
jmp
bnd
add
hlt
inc
movups
scas
push
out
shll
mov
stos
idivl
mov
dec
data16
movsb
js
pop
cltd
popf
xchg
mov
xor
xchg
cmc
rcr
test
cmpsb
sbbb
cmp
js
pop
testb
lea
mov
test
loop
mov
aas
movsb
and
fwait
pushf
pop
movsb
stos
add
gs
jnp
jne
cmpsl
addr16
es
xorl
xchg
push
hlt
cmp
cld
dec
and
lcall
insb
push
add
pop
mov
sbb
and
cwtl
adc
cmp
inc
mov
pop
int
mov
jl
adc
pop
repz
jge
lock
bound
jge
adc
xchg
sbb
lea
stos
xor
shll
and
and
je
sub
es
or
mov
xchg
jae
jle
rcr
pop
cs
add
mov
inc
out
push
push
dec
and
sub
hlt
scas
leave
cmp
call
inc
adc
adc
mov
pusha
pushf
out
mov
mov
cmp
xlat
add
outsb
das
adc
inc
inc
movsb
jo
xchg
add
push
mov
push
sub
pop
imul
pop
lret
loopne
lret
and
std
insl
jno
sub
jl
cld
in
imul
addr16
xor
mov
loope
pusha
in
mov
inc
inc
daa
aam
push
or
out
add
inc
lds
xchg
loop
insl
add
push
pop
pop
pusha
xor
in
les
dec
jnp
add
pushf
daa
xor
cld
popa
gs
outsb
jg
fimull
sbb
outsb
and
fs
mov
shrl
loope
or
jbe
xor
mov
inc
ljmp
inc
xchg
in
mov
push
mov
pop
repnz
or
sbb
scas
cmp
shll
or
lcall
pop
addb
or
pop
and
sbb
test
mov
imul
xor
sub
adc
inc
xchg
dec
xchg
jle
fimuls
pop
clc
shll
roll
test
imul
cmp
in
add
addr16
sbb
mov
or
pop
and
jnp
addb
dec
aaa
cld
mov
inc
fstpt
shl
cmp
pop
inc
dec
ljmp
mov
push
jp
jg
mov
and
aaa
and
int3
push
sub
adc
cmpsl
adc
inc
hlt
xlat
xchg
mov
push
fs
ficoml
sub
pop
xor
int
mov
out
sub
daa
stos
test
xlat
adc
cld
push
popa
test
js
cmpsl
data16
fidivrl
inc
inc
fcomps
cmp
add
movsl
push
sbb
pusha
add
xchg
das
mov
jl
lcall
xor
xor
mov
je
push
loop
add
and
fcoml
xchg
lret
cmp
adc
stc
sahf
inc
movsb
jecxz
adc
mov
and
aad
add
jae
inc
pop
mov
mov
rcrb
xchg
push
jnp
fistpll
out
inc
pusha
fcmovbe
xchg
ljmp
xchg
push
fdivrs
xchg
ret
adc
or
pop
mov
lods
sub
add
lahf
xor
mov
pop
not
push
lcall
lret
adc
mov
addr16
ret
mov
and
ret
std
out
xor
inc
fs
pusha
loopne
in
add
jg
ss
xor
jmp
cwtl
imul
movsl
jb
stc
and
mov
lods
pop
ror
sbb
fmull
xchg
nop
jmp
push
jns,pt
jb
lea
stos
hlt
call
pop
lret
sbb
sti
mov
mov
mov
push
sbb
pop
dec
push
xchg
xor
inc
out
push
mov
jmp
ss
dec
jbe
push
dec
push
rolb
das
stos
mov
sbb
pusha
inc
xchg
stos
lods
movsb
push
adc
test
int3
add
mov
loop
jge
cwtl
push
arpl
mov
mov
int
push
daa
or
push
mov
aas
sub
jns
adc
je
in
call
mov
sbb
sub
clc
or
xchg
stos
cmp
std
sbbb
aad
dec
loopne
dec
push
jmp
stos
andl
pop
push
adc
aam
jne
add
fnstcw
mov
adc
fwait
and
nop
cmp
jnp
dec
sbb
jl
rclb
xchg
pop
sbb
mov
dec
js
loopne
dec
xor
mov
mov
push
inc
imul
movsl
push
test
sub
insb
arpl
shll
pop
jg
int
xor
jo
pop
into
and
mov
repnz
or
int3
dec
cmp
shr
insb
pop
lods
dec
push
or
and
mov
inc
jp
xchg
nop
popf
divb
cmp
in
sub
cli
xchg
pop
pop
mov
cli
and
mov
sbb
icebp
sbb
hlt
xchg
scas
add
fs
pop
lahf
jo
inc
xchg
dec
fwait
arpl
push
dec
das
sbb
dec
in
mov
jg
cmp
push
fcmovb
inc
push
mov
or
sub
or
and
int
mov
add
pushf
sbb
in
rorl
popf
lahf
mov
fcompl
mov
rcrl
clc
mov
int
out
pop
or
mov
shrb
mov
and
imul
lods
iret
mov
cmp
add
subb
xorl
movsb
xchg
into
iret
or
adc
mov
inc
ljmp
dec
cs
ret
repz
mov
ja
push
inc
mov
sbb
js
je
das
sbb
sahf
lret
jg
adc
cmp
scas
es
call
sbb
ljmp
out
cld
mov
dec
mov
push
lea
mov
lret
movsl
pop
mov
es
ljmp
jge
sub
push
fidivs
iret
pop
dec
jb
xor
fwait
push
xchg
ret
mov
mulb
stos
sbb
pop
andl
lds
adc
cmp
pop
mov
cmpb
cmp
into
std
xor
cs
inc
fs
aad
jmp
test
pop
mov
adc
faddp
jb
fsts
rorl
decb
mov
rcrl
or
daa
out
xor
jnp
insl
and
mull
sub
dec
enter
inc
xchg
outsl
lret
and
mov
jbe
data16
adc
sti
neg
mov
inc
movsl
std
pusha
movsl
jge
movsb
add
inc
outsb
or
push
sub
or
ret
adc
sbb
mov
push
cs
sahf
mov
jno
dec
fwait
inc
xor
push
mov
mov
jp
fsubp
xor
pop
in
popf
cmpl
cmp
push
into
pop
aas
ficoml
push
fisubrl
mov
add
push
xchg
les
sbb
fisttps
mov
push
imulb
fcomps
jnp
outsb
mov
or
jb
scas
into
icebp
jnp
cmp
cmc
js
jo
jns
aaa
in
and
fidivrl
in
cmp
cld
popf
pusha
xchg
pop
outsb
das
push
sub
adcl
sbb
sti
or
push
xlat
add
loop
mov
or
adc
mov
int3
mov
sub
inc
jmp
add
imull
out
sub
lret
push
xor
add
add
