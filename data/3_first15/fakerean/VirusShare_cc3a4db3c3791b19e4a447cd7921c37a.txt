call
lea
call
mov
cmp
jne
cmpl
je
mov
cmp
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
mov
push
call
jmp
mov
add
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
cmpl
lea
push
movl
je
mov
test
mov
mov
je
lea
push
call
add
test
je
lea
call
mov
test
mov
je
lea
push
call
add
test
jne
push
call
add
lea
call
pop
pop
mov
pop
pop
jmp
push
call
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
test
push
je
push
call
add
test
je
xor
mov
mov
mov
mov
mov
movb
movb
movb
movl
movl
movl
movl
push
movl
mov
mov
push
push
call
mov
test
js
push
mov
lea
test
je
lea
mov
mov
push
push
push
mov
call
test
je
lea
mov
mov
push
push
push
mov
call
pop
pop
pop
mov
pop
ret
xor
jmp
xor
jmp
push
mov
push
push
push
push
mov
xor
cmp
jne
push
lea
mov
call
mov
lea
push
push
call
cmp
jne
mov
push
mov
lea
mov
call
mov
cmp
jne
lea
call
lea
call
xor
pop
pop
leave
ret
mov
call
cmp
je
mov
call
jmp
testb
je
mov
mov
mov
cmp
je
mov
call
cmp
je
push
mov
lea
call
lea
call
cmp
je
mov
lea
call
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
push
cmpl
push
push
push
push
je
mov
cmpl
jle
cmpl
jle
mov
mov
mov
add
cmp
jge
mov
mov
mov
add
cmp
jge
mov
add
cmp
jge
mov
add
cmp
jge
mov
cmp
jl
mov
cmp
jl
mov
add
cmp
jg
mov
add
cmp
jg
mov
xor
push
mov
call
mov
mov
mov
mov
mov
pop
pop
pop
pop
pop
ret
mov
push
mov
call
pop
movl
movl
movl
movl
mov
pop
pop
pop
pop
ret
int3
int3
int3
sub
push
push
mov
push
push
call
add
test
je
mov
test
mov
movl
mov
je
cmpb
je
mov
test
jne
mov
push
call
add
mov
push
call
add
mov
push
call
mov
mov
mov
add
mov
call
mov
addl
mov
sub
mov
sub
mov
add
add
add
cmp
jg
mov
mov
add
cmp
jg
mov
mov
mov
neg
neg
test
je
xor
add
test
je
xor
flds
add
mov
add
mov
sub
fstpl
mov
flds
mov
add
fstpl
push
mov
call
fildl
fildl
mov
add
fchs
fxch
fchs
fstpl
fstpl
push
call
mov
add
mov
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
push
mov
push
push
xor
mov
mov
mov
mov
push
mov
push
lea
mov
mov
mov
call
push
lea
call
mov
mov
sub
mov
sar
push
lea
push
mov
lea
push
mov
lea
push
lea
mov
call
mov
mov
add
test
jne
test
jne
test
js
cmp
mov
jne
mov
cmp
je
add
cmp
jb
jmp
push
call
add
test
je
movl
movl
mov
mov
test
mov
jne
test
je
mov
push
push
push
call
add
test
js
mov
mov
mov
lea
movl
call
lea
call
mov
test
jne
xor
pop
pop
pop
pop
add
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
sub
test
push
jl
mov
mov
cmp
mov
ja
mov
sub
add
cmp
mov
mov
jb
lea
mov
mov
push
lea
mov
movl
call
xor
pop
add
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
mov
push
lea
push
mov
mov
mov
xor
lea
mov
movl
movl
mov
mov
push
push
mov
call
mov
cmp
lea
mov
jb
mov
push
mov
add
sub
cmp
mov
mov
pop
jb
lea
mov
push
lea
mov
mov
call
mov
test
jne
test
jne
pop
xor
pop
mov
xor
call
add
ret
mov
add
push
call
add
test
jne
push
call
mov
add
pop
pop
xor
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
push
mov
mov
cmp
movb
je
cmp
je
mov
mov
mov
push
push
push
movb
mov
mov
call
pop
pop
ret
push
mov
push
mov
cmpl
je
push
push
mov
push
push
pushl
call
mov
test
jne
pop
pop
pop
pop
ret
mov
test
je
lea
push
push
mov
call
test
je
pushl
mov
mov
call
test
je
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
push
push
call
jmp
xor
jmp
xor
jmp
mov
mov
mov
add
mov
cmp
jae
imul
lea
mov
test
mov
mov
je
mov
push
call
xor
ret
mov
and
neg
sbb
inc
ret
push
mov
test
push
je
mov
mov
test
je
mov
test
je
mov
mov
cmp
jne
mov
test
je
mov
push
mov
call
test
mov
je
mov
mov
and
xor
or
mov
mov
jne
andl
pushl
mov
pushl
call
mov
pop
pop
ret
or
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
mov
mov
lea
add
xor
mov
mov
lea
lea
mov
mov
mov
mov
push
lea
push
movl
mov
call
mov
test
jne
test
jne
xor
add
ret
push
mov
cmpl
ja
push
mov
add
push
mov
call
cmpl
jne
pop
xor
pop
ret
push
mov
mov
lea
push
push
call
test
js
cmpl
jne
push
mov
call
jmp
pop
jmp
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
push
call
mov
add
test
je
addl
cmpl
je
pop
pop
ret
mov
movl
call
push
call
add
pop
pop
ret
push
mov
push
mov
mov
mov
push
call
test
je
push
mov
xor
cmp
setne
cmpl
lea
mov
jne
cmpb
jne
mov
mov
mov
mov
call
test
je
mov
push
pushl
pushl
pushl
push
call
pop
pop
pop
ret
orl
jmp
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
mov
xor
cmp
mov
mov
mov
je
mov
movzbl
and
mov
mov
test
jbe
mov
lea
mov
add
cmp
je
cmp
je
cmp
je
cmp
je
mov
xor
add
cmp
jne
addl
subl
mov
jne
mov
mov
mov
andb
cmpl
mov
jne
and
mov
mov
add
cmp
jne
mov
mov
pop
pop
mov
pop
add
ret
cmpl
jne
cmpl
mov
jne
movb
add
cmp
jne
cmpb
jne
add
jmp
cmp
je
mov
call
add
jmp
orl
cmpb
je
mov
call
add
jmp
or
jmp
mov
or
mov
mov
pop
pop
pop
add
ret
mov
call
jmp
mov
test
jbe
mov
lea
mov
add
cmp
je
cmpb
jne
addl
cmp
je
mov
add
subl
jne
mov
mov
andb
jmp
or
mov
jmp
push
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
push
lea
sub
add
add
push
lea
lea
cmp
je
push
mov
mov
add
lea
nop
test
je
mov
test
mov
je
mov
mov
push
call
mov
test
mov
je
mov
mov
push
call
lea
push
push
movl
movl
movl
call
mov
test
mov
je
mov
mov
push
call
mov
mov
mov
mov
mov
add
add
add
cmp
jne
mov
pop
mov
addl
mov
pop
lea
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
int3
int3
push
mov
and
sub
push
mov
push
push
lea
mov
mov
push
push
call
mov
mov
lea
lea
push
rep
call
mov
fldz
mov
add
fstl
lea
fstpl
push
push
lea
push
push
mov
call
mov
lea
push
push
call
mov
mov
mov
add
call
cmpl
mov
mov
jne
fldz
mov
fldl
fcom
fnstsw
fstp
test
jne
fldl
fchs
fldl
fcom
fnstsw
fstp
test
fldl
jne
fld
fadd
fcompl
fnstsw
test
jp
test
fstp
fstp
mov
faddl
fildl
jl
fmulp
sub
fstpl
call
fnstcw
add
movzwl
or
mov
fldcw
fistpll
mov
cmp
fldcw
jae
push
push
call
pop
pop
pop
mov
pop
ret
fldl
fldl
fxch
test
mov
fildl
jl
fld
push
fmulp
lea
fxch
lea
mov
fstpl
fld
fmulp
fxch
fstpl
fld
fmull
fstpl
fmulp
fstpl
call
test
je
fldl
pop
fstps
pop
fldl
pop
fstps
fldl
fstps
fldl
fstps
mov
pop
ret
fldl
fldl
fldl
fxch
jmp
mov
andl
mov
push
pushl
mov
call
pop
mov
mov
xor
pop
ret
push
mov
push
push
xor
cmp
je
xor
pop
leave
ret
cmpl
mov
push
mov
jne
cmp
jne
lea
orb
testb
jne
mov
push
mov
mov
push
call
mov
mov
mov
call
mov
mov
mov
push
mov
mov
call
push
pushl
mov
call
test
js
mov
cmp
je
xor
inc
pop
pop
jmp
cmpl
jne
jmp
xor
jmp
push
mov
sub
push
mov
push
push
xor
mov
call
mov
push
lea
call
and
lea
push
lea
mov
movl
mov
call
xor
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
xor
call
push
lea
call
lea
xor
call
and
and
lea
mov
push
mov
lea
movl
movl
call
mov
test
jne
pushl
lea
call
andl
andl
lea
push
mov
lea
movl
movl
call
test
jne
pushl
lea
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
call
xor
pop
pop
pop
leave
ret
mov
mov
mov
cmp
sbb
neg
ret
int3
int3
int3
push
mov
and
sub
push
push
push
mov
push
lea
xor
mov
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
lea
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
lea
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
mov
cmp
je
call
mov
mov
cmp
je
call
mov
mov
cmp
je
call
mov
push
call
push
call
mov
push
call
pop
pop
pop
pop
mov
pop
ret
push
mov
and
push
decl
cmpl
push
je
pop
mov
pop
ret
mov
test
je
push
mov
call
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
test
push
je
mov
test
je
push
lea
mov
call
lea
mov
call
mov
lea
push
mov
mov
call
mov
test
jne
push
push
call
add
test
je
mov
movl
lea
xor
movl
call
mov
test
mov
je
mov
mov
push
call
cmpl
je
mov
mov
mov
mov
call
mov
test
je
mov
mov
push
call
mov
test
mov
jne
mov
mov
mov
add
test
mov
jne
push
push
call
test
je
test
je
mov
mov
push
call
mov
mov
test
je
mov
mov
push
call
mov
test
mov
jne
mov
push
push
call
mov
test
je
addl
mov
test
mov
jne
mov
mov
mov
test
jne
mov
add
add
xor
lea
and
xor
call
xor
pop
pop
pop
pop
ret
mov
jmp
lea
movl
mov
mov
push
push
call
testb
jne
mov
mov
mov
push
mov
call
jmp
mov
push
mov
call
jmp
mov
push
mov
call
jmp
call
jmp
mov
mov
xor
push
mov
call
jmp
push
mov
mov
test
je
cmpl
je
push
mov
test
je
mov
push
mov
push
mov
call
test
js
mov
test
je
movzwl
mov
push
pushl
mov
call
mov
cmpl
jne
mov
mov
call
test
jne
mov
mov
call
andl
push
mov
lea
call
mov
mov
test
je
movzwl
mov
push
pushl
call
mov
mov
call
lea
call
jmp
xor
pop
pop
pop
ret
push
mov
test
je
push
push
push
mov
push
xor
lea
push
mov
mov
mov
push
push
call
cmp
jne
push
mov
call
lea
mov
mov
call
mov
lea
call
lea
mov
call
mov
lea
call
push
call
pop
pop
xor
pop
pop
ret
mov
test
push
push
mov
je
push
push
mov
call
push
mov
call
mov
push
push
call
pushl
mov
call
pop
pop
ret
push
call
pop
test
je
call
test
mov
je
mov
push
call
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
push
mov
mov
xor
cmp
mov
je
mov
mov
push
call
mov
mov
lea
mov
mov
lea
lea
push
mov
push
mov
mov
movl
movl
mov
call
cmp
jne
mov
lea
call
mov
cmp
je
mov
mov
mov
lea
push
mov
call
mov
cmp
mov
je
push
mov
lea
mov
call
mov
cmp
je
test
movl
mov
mov
je
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
test
jne
test
jne
lea
call
lea
call
push
push
lea
push
push
push
movl
movl
mov
call
mov
add
test
jne
test
jne
lea
call
mov
test
jne
test
jne
mov
pop
pop
pop
pop
xor
call
add
ret
mov
add
push
call
add
test
jne
push
call
add
jmp
int3
sub
push
push
push
push
mov
xor
cmp
jne
mov
mov
call
test
je
mov
mov
cmp
mov
jne
cmp
jne
mov
mov
mov
mov
test
mov
mov
jne
mov
test
jne
mov
mov
mov
cmp
mov
jne
mov
mov
cmp
jne
or
mov
test
jne
mov
mov
mov
mov
push
call
orb
pop
pop
pop
pop
add
ret
mov
mov
and
xor
or
jne
test
je
orb
jmp
mov
mov
sub
cmpl
mov
mov
mov
mov
jne
mov
add
mov
mov
mov
lea
push
push
call
lea
lea
call
mov
push
push
lea
push
mov
push
push
call
testb
jne
mov
push
mov
lea
push
push
push
call
add
jmp
mov
mov
add
mov
mov
mov
mov
sub
mov
lea
mov
mov
push
push
mov
call
lea
lea
call
mov
push
push
mov
push
push
push
call
testb
jne
mov
mov
push
lea
push
push
push
call
add
jmp
testb
jne
movl
jmp
mov
mov
mov
xor
cmp
mov
jne
cmp
jne
mov
mov
sub
sub
add
sub
add
mov
mov
cmp
mov
jne
mov
mov
sub
sub
add
sub
add
mov
mov
test
mov
je
push
lea
push
push
push
call
mov
mov
add
cmpl
je
mov
test
je
mov
mov
push
lea
push
call
mov
mov
mov
cmp
jle
mov
cmp
mov
jne
cmpl
jne
mov
sub
add
mov
mov
test
je
mov
mov
push
lea
push
call
mov
mov
cmp
jle
mov
cmp
mov
jne
mov
sub
add
mov
mov
push
lea
push
push
push
call
add
jmp
xor
jmp
mov
test
je
xor
push
lea
push
push
push
mov
mov
mov
mov
call
add
jmp
push
mov
mov
sub
push
mov
push
push
lea
lea
movsl
movsl
movsl
lea
movsl
call
test
je
andl
pushl
push
pushl
call
add
cmpl
jne
pop
pop
pop
leave
ret
cmpl
movl
jne
lea
push
mov
call
push
mov
call
push
call
pop
jmp
cmpl
jne
lea
push
mov
call
push
mov
call
push
call
pop
jmp
mov
movl
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
mov
test
push
mov
push
jne
mov
test
jne
test
jne
lea
xor
mov
call
mov
lea
mov
lea
mov
mov
call
cmp
jne
test
je
mov
mov
movzbl
and
neg
sbb
add
cmp
jb
mov
mov
push
lea
push
push
push
movl
call
test
js
cmpl
jne
xor
cmp
mov
je
mov
jmp
mov
mov
test
jne
mov
mov
mov
lea
push
push
push
call
test
js
add
cmpl
jne
cmpl
jne
jmp
mov
mov
lea
push
push
push
call
test
js
cmpl
jne
push
lea
movl
call
mov
mov
lea
push
push
call
test
js
testb
mov
je
mov
mov
push
push
call
mov
push
xor
mov
lea
mov
call
mov
cmp
je
testb
mov
je
mov
mov
push
push
call
mov
lea
mov
mov
lea
mov
movl
movl
movb
mov
push
push
mov
call
test
js
mov
mov
call
mov
push
lea
push
push
mov
call
mov
test
je
mov
add
push
call
add
test
je
lea
call
lea
call
lea
call
xor
pop
mov
pop
pop
pop
xor
call
add
ret
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
mov
push
mov
push
push
push
push
mov
mov
mov
call
mov
movl
andl
or
cmp
je
mov
push
call
test
je
mov
mov
testb
jne
push
lea
push
call
test
jne
cmpl
je
lea
push
pushl
mov
pushl
push
call
test
je
lea
push
call
test
je
andl
mov
lea
call
lea
xor
call
lea
xor
call
lea
xor
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
add
mov
mov
mov
xor
add
lea
mov
mov
push
push
mov
mov
mov
call
mov
test
jne
pushl
lea
push
push
pushl
push
lea
push
mov
call
mov
mov
mov
andl
test
jne
mov
mov
andl
test
jne
push
push
lea
push
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
xor
cmp
push
mov
mov
jne
push
call
add
cmp
je
push
mov
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
push
push
push
call
mov
mov
mov
push
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
mov
test
movl
movl
movl
movl
je
cmpb
jne
movl
push
call
add
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
movl
call
add
cmpw
je
xor
pop
add
ret
cmpw
jne
mov
mov
call
test
je
push
mov
push
call
add
test
jne
mov
push
call
add
test
je
push
mov
mov
test
je
mov
push
mov
lea
movl
call
mov
test
je
mov
mov
push
call
test
je
push
lea
mov
call
push
call
mov
mov
mov
push
push
mov
call
add
test
je
mov
mov
push
push
call
mov
add
cmpl
jne
cmpl
push
jne
mov
push
push
mov
push
push
call
test
js
mov
lea
call
lea
call
mov
pop
pop
pop
add
ret
mov
push
call
jmp
mov
jmp
push
mov
push
push
mov
test
push
mov
jne
push
call
test
pop
je
call
mov
test
je
mov
push
call
pushl
mov
push
call
andl
push
lea
call
mov
test
je
mov
mov
push
call
pushl
mov
pushl
push
pushl
mov
call
test
js
mov
mov
xor
lea
call
mov
pop
pop
leave
ret
xor
jmp
push
mov
push
mov
test
je
mov
push
call
mov
test
mov
jne
test
mov
je
movb
mov
push
call
mov
lea
call
mov
test
je
mov
push
call
mov
test
mov
pop
pop
jne
mov
lea
call
mov
test
je
push
call
xor
ret
mov
mov
cmp
je
test
je
cmpl
je
pushl
push
call
test
pop
pop
jne
xor
inc
ret
xor
ret
push
mov
push
mov
push
mov
push
pushl
pushl
push
call
test
js
mov
cmpl
jne
xor
pop
pop
pop
ret
mov
test
je
pushl
mov
call
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
not
je
jmp
lea
test
jne
cmp
push
push
jae
cmp
jae
test
pop
pop
je
nop
movzbl
xor
and
shr
xor
add
sub
jne
not
pop
ret
mov
shr
xor
add
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
add
xor
add
xor
add
mov
shr
and
mov
movzbl
xor
mov
and
shr
xor
add
xor
add
xor
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
xor
xor
mov
shr
and
mov
movzbl
xor
mov
and
shr
xor
xor
xor
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
xor
xor
mov
shr
and
mov
movzbl
xor
mov
shr
xor
and
xor
xor
add
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
add
xor
sub
xor
mov
shr
and
mov
movzbl
xor
mov
shr
xor
and
xor
sub
jne
jmp
mov
shr
lea
xor
add
mov
shr
and
mov
movzbl
xor
mov
shr
xor
and
xor
sub
sub
mov
jne
jmp
movzbl
xor
and
shr
xor
add
sub
jne
jmp
int3
int3
sub
push
mov
test
push
mov
push
mov
je
mov
push
mov
call
add
mov
lea
xor
mov
push
lea
lea
movl
movl
mov
mov
call
mov
test
js
mov
mov
push
push
push
mov
call
mov
mov
mov
push
push
mov
push
mov
push
mov
push
push
mov
call
mov
mov
add
mov
lea
call
mov
pop
pop
pop
add
ret
push
mov
push
pushl
andl
mov
lea
call
pushl
mov
pushl
call
push
lea
call
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
test
mov
push
mov
push
mov
push
mov
movl
je
test
je
test
je
cmpl
mov
mov
je
movl
movl
lea
push
mov
push
push
push
push
mov
movl
call
test
js
xor
cmp
mov
jne
mov
cmp
mov
je
testb
jne
mov
mov
mov
lea
push
push
call
test
js
cmpl
mov
jne
mov
mov
mov
push
push
call
test
js
mov
push
mov
mov
call
test
js
xor
mov
mov
mov
cmp
je
testb
jne
mov
mov
cmp
je
testb
je
lea
push
lea
push
mov
mov
movl
movl
mov
mov
call
mov
mov
push
lea
push
call
add
lea
push
push
call
mov
test
jne
test
jne
mov
cmp
je
testb
jne
push
lea
mov
call
mov
lea
push
lea
call
add
test
mov
js
mov
test
je
mov
mov
lea
push
push
call
cmpw
je
mov
mov
mov
mov
lea
push
mov
push
movl
movl
call
test
je
movb
testb
je
mov
test
jne
test
jne
cmpb
jne
push
lea
movl
call
mov
mov
lea
push
push
mov
call
test
mov
js
mov
test
je
cmpl
je
mov
test
mov
je
mov
mov
push
call
mov
test
mov
mov
mov
movl
je
movzbl
mov
mov
push
push
mov
call
mov
mov
mov
mov
push
lea
push
mov
lea
push
push
push
call
test
mov
js
cmpl
je
mov
test
je
mov
cmpw
je
xor
mov
push
mov
lea
movl
call
mov
mov
mov
push
push
call
mov
mov
mov
mov
push
push
push
call
lea
call
test
je
mov
mov
mov
push
push
call
lea
call
mov
mov
lea
call
lea
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
push
push
mov
push
mov
mov
mov
mov
add
mov
mov
mov
lea
lea
mov
cmp
je
mov
mov
sub
cmp
push
jne
push
push
call
add
test
jne
mov
mov
cmp
je
mov
cmp
je
mov
push
push
sub
sub
push
mov
push
mov
mov
call
test
je
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmp
jne
mov
push
mov
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
mov
cmp
je
mov
push
mov
add
mov
mov
mov
mov
lea
mov
mov
call
test
je
mov
mov
cmp
mov
push
jne
push
push
call
add
test
je
addl
jmp
mov
mov
call
test
je
pop
xor
pop
add
ret
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
lea
add
add
mov
mov
lea
lea
call
test
je
mov
mov
mov
mov
mov
pop
mov
mov
pop
add
ret
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
mov
cmp
je
mov
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
fldz
push
push
mov
fcoml
mov
fnstsw
test
je
fcompl
fnstsw
test
je
push
mov
test
jne
push
call
add
test
je
fldl
fstpl
fldl
fstpl
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
call
add
pop
pop
pop
ret
fstp
mov
push
movl
call
add
pop
pop
ret
xor
jmp
push
mov
push
lea
push
pushl
mov
call
test
je
mov
mov
mov
xor
inc
pop
pop
ret
push
mov
sub
push
mov
mov
push
mov
mov
call
cmp
je
xor
pop
pop
leave
ret
push
pushl
mov
pushl
call
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
push
push
push
mov
test
push
push
je
lea
mov
test
jne
pop
pop
pop
lea
pop
pop
ret
test
je
sar
sub
mov
je
mov
test
je
mov
push
call
cmp
jne
cmpl
jne
cmpl
jne
add
cmpl
je
mov
mov
and
test
mov
je
addl
mov
test
je
mov
mov
mov
test
je
pop
mov
pop
pop
pop
pop
ret
mov
sub
je
mov
jmp
movl
mov
mov
push
mov
call
pop
pop
pop
xor
pop
pop
ret
lea
or
jmp
cmpl
je
mov
call
test
je
movl
jmp
push
push
mov
mov
call
pop
pop
ret
push
mov
mov
test
mov
push
je
lea
push
call
test
pop
jne
push
call
pop
lea
call
lea
call
testb
movl
je
push
call
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
push
push
mov
push
mov
test
je
mov
mov
xor
cmpl
movl
mov
movl
je
mov
lea
push
lea
push
mov
mov
push
mov
call
mov
mov
mov
test
mov
je
mov
lea
mov
mov
mov
test
jne
test
jne
push
call
mov
mov
mov
and
or
add
mov
mov
xor
mov
test
jns
mov
mov
test
jne
test
jne
mov
pop
pop
pop
mov
xor
call
mov
pop
ret
push
call
xor
test
je
mov
orl
jmp
mov
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
lea
mov
push
lea
lea
movl
movl
mov
mov
call
testl
jne
mov
lea
lea
push
lea
push
mov
mov
movl
movl
mov
mov
call
mov
mov
add
lea
push
push
call
mov
test
jne
test
jne
mov
mov
mov
mov
mov
lea
call
mov
test
jne
test
je
mov
push
call
mov
add
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
lea
mov
push
lea
lea
movl
movl
mov
mov
call
mov
test
js
push
mov
call
cmp
jne
mov
mov
call
test
jne
cmp
jne
mov
lea
push
lea
push
movl
mov
movl
mov
mov
call
mov
mov
mov
push
push
call
mov
test
js
testb
jne
mov
mov
mov
push
push
mov
call
mov
mov
test
jne
test
je
mov
push
call
add
mov
test
js
mov
mov
mov
mov
lea
mov
call
jmp
mov
add
call
xor
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
push
mov
mov
mov
cmp
mov
je
cmp
jg
mov
cmp
je
mov
cmp
je
cmp
je
mov
cmp
je
cmp
je
xor
mov
pop
pop
pop
pop
xor
call
add
ret
mov
mov
call
mov
push
mov
call
jmp
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
jmp
mov
cmp
je
cmp
je
cmp
je
cmp
jne
addl
jmp
mov
mov
xor
cmp
je
cmp
je
cmp
je
mov
cmp
je
mov
jmp
push
mov
andl
push
lea
mov
test
movl
jne
lea
call
mov
call
testb
je
push
call
pop
pop
mov
pop
ret
push
mov
push
push
mov
cmp
je
mov
mov
lea
mov
mov
mov
leave
ret
push
mov
mov
sub
push
xor
test
je
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
call
push
mov
lea
mov
call
mov
cmp
mov
je
push
lea
mov
call
mov
lea
push
push
call
cmp
je
pushl
mov
lea
mov
call
mov
push
lea
call
mov
lea
push
push
call
lea
call
lea
call
cmp
je
cmp
je
mov
cmp
je
pushl
mov
call
cmp
je
mov
mov
call
mov
mov
mov
call
cmp
jne
call
mov
lea
call
lea
call
pop
lea
call
lea
call
pop
mov
pop
leave
ret
mov
cmp
je
jmp
int3
int3
int3
int3
int3
push
mov
and
push
push
mov
push
push
mov
nop
testb
jne
push
lea
push
call
test
je
andb
cmpl
je
cmpl
jne
cmpw
je
push
call
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movw
cmp
jne
mov
mov
mov
cmp
je
cmp
jne
cmpw
je
cmp
jne
cmpw
je
cmp
jne
cmpw
jne
mov
push
mov
call
cmp
je
push
call
test
je
cmpl
jne
cmpw
jne
mov
pop
pop
pop
mov
pop
ret
mov
push
push
push
push
push
push
mov
call
jmp
lea
mov
cmp
lea
je
jmp
mov
orl
mov
call
jmp
mov
push
mov
call
jmp
mov
push
push
push
call
jmp
push
mov
push
cmpw
jne
mov
test
je
mov
push
call
mov
test
mov
je
mov
mov
push
pushl
push
push
call
lea
call
xor
leave
ret
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
push
mov
push
push
mov
test
je
mov
push
call
mov
mov
mov
leave
ret
mov
andl
test
je
lea
push
push
push
add
push
call
and
je
andl
test
je
andl
pushl
lea
call
mov
andl
lea
mov
call
mov
test
je
jmp
sub
mov
xor
mov
mov
push
push
mov
push
mov
push
mov
cmpl
je
mov
test
mov
jne
test
jne
lea
push
push
call
lea
mov
mov
mov
mov
lea
lea
xor
push
lea
sar
push
mov
movl
movl
mov
mov
mov
call
mov
mov
push
push
push
call
add
cmp
mov
je
mov
mov
mov
push
call
mov
mov
mov
push
lea
push
push
call
test
lea
js
call
mov
test
jne
test
jne
mov
movl
xor
mov
pop
pop
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
lea
push
push
movl
call
add
test
je
jmp
lea
mov
mov
cmp
jne
call
mov
lea
push
push
call
add
test
jne
pop
pop
ret
int3
int3
int3
int3
int3
push
xor
cmp
push
push
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
call
mov
call
test
jne
xor
mov
mov
mov
mov
lea
mov
mov
cmp
je
push
call
cmp
je
mov
mov
mov
push
call
cmp
jne
mov
mov
mov
lea
push
mov
call
mov
push
lea
call
pop
mov
mov
pop
mov
pop
ret
mov
mov
mov
call
mov
jmp
push
mov
sub
cmpl
je
mov
andl
andl
andl
push
lea
lea
movl
mov
call
mov
test
je
mov
lea
push
push
call
lea
call
mov
mov
mov
leave
ret
mov
test
je
mov
mov
push
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
lea
test
push
jge
xor
pop
pop
pop
pop
add
ret
mov
mov
mov
lea
xor
mov
mov
mov
lea
mov
mov
push
lea
mov
add
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
je
push
lea
call
pop
pop
pop
xor
pop
add
ret
mov
ret
movzwl
push
lea
mov
test
je
pop
ret
push
mov
and
sub
mov
andl
andl
andl
andl
lea
push
mov
call
mov
lea
call
test
jne
mov
call
call
test
je
xor
inc
mov
pop
ret
int3
int3
int3
cmpl
push
mov
push
push
mov
jne
cmp
je
xor
cmpl
jne
cmp
je
xor
test
jne
test
jne
cmpl
je
mov
cmpl
je
pop
pop
pop
ret
mov
mov
movl
call
cmpb
jne
test
je
mov
mov
add
cmp
je
cmpl
jne
mov
call
pop
pop
pop
ret
mov
jmp
mov
call
mov
call
pop
pop
pop
ret
movzwl
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
ret
mov
dec
test
jle
cmpw
je
xor
inc
ret
int3
int3
sub
push
mov
mov
test
je
mov
mov
push
push
push
xor
call
cmp
je
lea
push
push
lea
mov
call
mov
lea
lea
push
push
mov
call
mov
push
lea
mov
call
mov
mov
lea
push
push
call
mov
cmp
pop
je
lea
mov
mov
mov
push
push
mov
call
mov
mov
lea
push
push
mov
call
cmp
je
cmp
je
cmp
jne
cmp
jne
cmp
je
call
cmp
je
mov
push
mov
lea
mov
call
mov
lea
mov
mov
push
push
mov
call
mov
push
mov
call
lea
call
lea
call
lea
call
xor
pop
pop
pop
add
ret
lea
push
lea
movl
movl
movl
call
mov
mov
push
push
call
add
cmp
je
mov
cmp
mov
jne
xor
mov
jmp
xor
jmp
mov
mov
jmp
push
mov
push
mov
lea
push
lea
push
pushl
movl
call
mov
mov
and
neg
sbb
not
and
leave
ret
andl
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
push
lea
mov
mov
call
add
sub
jns
mov
push
push
lea
push
push
call
cmp
jl
mov
mov
call
test
je
test
je
test
je
test
je
lea
lea
lea
mov
mov
movl
jmp
lea
addl
addl
mov
mov
mov
mov
mov
mov
add
cmp
mov
je
cmpl
jne
call
mov
and
mov
mov
shl
shr
lea
lea
or
mov
mov
mov
add
cmp
movl
mov
je
cmpl
jne
lea
call
mov
shr
lea
mov
and
mov
shl
or
mov
mov
add
lea
cmp
je
cmpl
jne
lea
call
mov
shr
lea
mov
and
mov
shl
lea
or
call
subl
jne
push
push
push
lea
push
call
mov
pop
pop
pop
pop
add
ret
cmpl
jne
movl
movl
jmp
cmpl
jne
movl
movl
jmp
cmpl
jne
movl
movl
add
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
test
cmp
js
adc
inc
and
add
add
call
mov
test
je
mov
mov
mov
push
call
lea
call
cmpl
je
xor
pop
pop
pop
add
ret
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
je
pusha
push
call
mov
addr16
add
add
add
ljmp
add
add
jno
shr
iret
add
mov
movsb
xchg
pop
add
fwait
sub
push
mov
add
push
push
lea
push
push
lea
push
lea
push
push
call
add
add
add
jp
pop
jp
outsl
mov
and
add
roll
add
add
add
add
add
add
sti
add
call
xchg
add
add
pushf
loope
sub
pop
popl
push
push
push
call
movsl
bound
add
xor
pop
aam
add
loopne
add
add
hlt
xchg
addb
add
add
add
jnp
add
sahf
add
xchg
lret
fadds
lret
cltd
add
jno
add
lcall
push
push
push
call
add
add
stos
add
push
imul
add
jae
mov
add
push
jle
flds
add
jge
into
add
add
add
push
mov
flds
add
add
cld
add
fists
add
push
out
add
add
jno
cwtl
add
std
fldl
push
push
lea
push
push
push
lea
push
call
fucomp
add
mov
ljmp
jns
add
imul
add
jb
pop
fiadds
out
add
add
xchg
or
into
std
push
mov
mov
stos
add
add
cld
add
out
out
push
sub
pop
call
push
push
push
push
push
push
lea
push
push
push
push
call
add
ja
push
add
lret
add
fidivrs
mov
add
add
add
enter
scas
push
add
pop
cmpsl
add
mov
add
add
lret
in
fdivr
lcall
add
mov
roll
inc
add
add
mov
mov
add
add
add
iret
add
cltd
add
add
add
test
add
push
add
cmpsb
icebp
add
stos
jns
jno
addr16
add
add
add
xchg
gs
in
hlt
lcall
lret
pop
add
jmp
push
push
push
push
lea
push
push
push
lea
push
push
call
cli
test
add
je
lock
out
mov
add
popa
hlt
pushf
add
mov
jae
jno
stos
fidivl
jbe
push
enter
add
loopne
imul
jne
mov
ja
add
add
mov
hlt
add
push
jnp
ret
sub
pop
ret
push
lea
push
call
pusha
add
mov
add
cld
add
fwait
out
add
mov
loopne
mov
movl
add
cli
add
add
sti
add
or
cli
js
flds
out
imul
pop
stos
clc
mov
add
pop
mov
mov
push
push
push
push
lea
push
lea
push
lea
push
lea
push
push
call
int3
cwtl
add
jmp
jne
add
add
add
int
mov
push
add
pop
iret
lods
mov
aam
pop
add
fwait
add
out
cmpsl
test
add
add
xchg
in
fdivr
lcall
pop
in
push
push
push
push
call
add
add
fdivs
in
lahf
les
out
pusha
add
in
mov
add
sahf
scas
add
popa
add
add
add
enter
add
add
add
add
add
sub
pop
add
push
push
push
push
call
push
push
add
icebp
mov
iret
leave
movb
ljmp
add
or
add
rcrb
in
lock
add
push
lea
push
lea
push
push
push
push
call
out
push
add
add
add
add
add
push
int3
pop
add
arpl
arpl
in
call
push
push
push
lea
push
push
lea
push
push
push
call
iret
add
add
add
add
add
addb
add
add
push
mov
in
add
popl
mov
add
into
jb
mov
sahf
lret
add
mov
add
add
lcall
pop
repnz
movsb
test
add
pusha
fadds
sub
pop
xor
push
push
lea
push
push
lea
push
lea
push
push
lea
push
push
call
add
add
pop
int
mov
leave
push
add
add
fucom
loope
mov
push
mov
add
ja
mov
add
jo
shl
add
stos
add
enter
add
add
add
add
add
add
xlat
mov
imul
fcompl
les
in
mov
add
push
or
not
add
sub
xor
not
lea
dec
pop
inc
pop
push
lea
push
push
lea
push
push
push
lea
push
push
call
xchg
popl
lea
add
xchg
hlt
add
mov
repnz
mov
mov
add
add
mov
lret
mov
add
in
lods
add
fiaddl
lcall
jne
push
push
push
push
call
fcmovbe
mov
add
leave
scas
add
add
add
lds
pop
lea
into
add
add
mov
gs
into
jns
mov
add
mulb
add
add
mov
add
loope
jno
loopne
xchg
cld
lret
xchg
add
out
insb
mov
fistpl
out
pop
sub
pop
call
push
push
push
push
lea
push
push
call
add
mov
jecxz
xchg
add
add
icebp
popl
test
push
popa
rolb
push
add
ja
enter
add
fwait
add
push
int3
sub
pop
mov
push
push
push
lea
push
push
lea
push
push
push
push
push
call
xchg
cmc
fldl
sarb
jge
jecxz
jbe
add
add
add
aad
adcl
add
add
jns
in
xchg
cmpsl
add
add
mov
mov
add
leave
jge
sub
pop
movl
push
lea
push
push
push
push
push
push
push
lea
push
call
pop
add
xchg
mov
sti
into
test
add
add
add
test
stc
add
add
stc
rolb
add
add
mov
cld
push
xchg
fwait
mov
lahf
lahf
add
rcrl
xchg
xchg
add
add
add
fstps
jmp
add
lcall
inc
call
push
push
push
push
push
call
add
xchg
repnz
add
add
add
cmpsl
add
xchg
add
sahf
out
shlb
jmp
add
add
sarl
iret
lods
mov
in
call
push
push
lea
push
push
push
push
push
call
sti
add
add
pop
mov
lods
movsl
cli
cltd
lret
mov
ret
icebp
add
in
jmp
mov
icebp
add
add
add
xlat
cltd
mov
add
imul
in
sub
pop
pushl
push
lea
push
push
lea
push
push
push
push
call
push
push
fmulp
aad
stos
add
add
rcrl
push
mov
mov
iret
into
jae
flds
into
ja
push
add
add
add
subl
in
pushl
push
push
lea
push
push
call
frstor
add
mov
aad
addb
add
add
add
mov
lock
mov
fcmovne
mov
pop
add
jbe
add
lods
mov
test
rcr
in
lock
call
push
push
lea
push
push
lea
push
push
push
call
mov
fcoml
scas
add
enter
test
add
add
iret
rolb
add
add
add
add
leave
movsb
leave
add
xchg
add
sarb
hlt
add
mov
mov
js
push
stos
xchg
sub
pop
pushl
pushl
push
push
push
lea
push
call
rolb
add
lds
add
scas
jns
loope
add
ljmp
add
push
rcl
add
mov
xchg
add
add
jmp
add
add
push
xchg
imul
mov
push
add
arpl
lods
pop
mov
add
jbe
in
lock
call
push
push
dec
ror
push
or
not
add
lea
shr
xor
sub
shl
sub
pop
sub
xor
sub
pop
push
lea
push
call
jle
out
mov
lcall
add
movl
hlt
add
add
add
lret
add
fwait
add
xchg
pop
add
mov
add
cltd
add
push
add
xchg
add
lret
xchg
leave
jnp
add
nop
mov
cwtl
sahf
out
loopne
outsl
mov
add
testl
std
push
lea
push
push
push
lea
push
call
call
add
mov
in
add
push
add
lcall
jnp
add
stc
jge
aam
outsl
mov
add
add
add
sub
pop
call
push
push
push
shl
shl
add
not
push
or
inc
add
inc
inc
inc
shl
sub
lea
not
pop
not
pop
push
push
push
push
lea
push
lea
push
push
push
push
call
add
add
mov
xchg
out
bound
add
jnp
mov
loopne
data16
mov
stos
add
mov
pop
loope
into
add
lcall
imul
loop
jb
js
mov
mov
sub
pop
push
push
push
push
push
push
call
mov
add
add
repnz
pop
add
add
add
icebp
data16
add
cmc
mov
lods
add
add
add
add
idivb
lods
add
mov
add
popf
xlat
add
add
data16
sti
imul
xchg
push
mov
in
pop
push
push
push
push
push
push
push
call
int
loopne
push
add
pop
push
fidivrl
fcompl
add
rcl
add
pop
push
jle
movl
ret
mull
mov
call
push
push
push
push
push
push
push
call
cwtl
add
add
add
lods
add
add
cmpsb
mov
add
add
jno
add
sahf
jne
add
fiadds
add
add
add
jmp
add
fadds
add
add
pop
add
add
add
iret
in
js
xchg
ljmp
pop
mov
push
push
push
push
call
into
add
repnz
std
pop
pushf
add
add
add
frstor
jbe
mov
mov
out
jp
int
add
push
jno
sbb
aad
mov
add
pop
push
push
push
push
push
push
push
lea
push
push
push
push
push
call
add
add
fwait
add
add
add
add
jle
sahf
add
add
fdivrl
test
pop
xchg
add
add
mov
mov
add
add
mov
mov
push
jmp
add
mov
shl
sub
pop
mov
push
push
lea
push
call
add
xchg
imul
jmp
in
std
orl
jns
add
mov
add
mov
add
add
hlt
pop
add
add
push
push
push
push
push
push
push
push
lea
push
call
ja
insb
xchg
push
add
pop
xchg
int
add
add
scas
add
stc
add
add
push
add
add
mov
cli
lods
add
mov
push
add
sub
pop
add
push
push
push
push
push
push
push
lea
push
call
add
add
cmpsl
loope
add
int3
push
movsb
add
fsubrl
add
js
add
mov
xchg
add
mov
lcall
xor
jno
adc
call
fldl
movsb
out
add
fidivrl
clc
mov
filds
add
add
movl
addb
in
add
push
add
mov
add
add
pop
pop
lret
shr
pop
lahf
je
mov
test
in
clc
pop
xor
push
push
lea
push
call
call
gs
lret
popa
add
add
test
jmp
add
mov
add
add
testl
xchg
add
jns
xchg
loopne
add
add
add
push
stc
js
add
add
pusha
test
add
push
int3
icebp
push
scas
sub
pop
add
push
lea
push
lea
push
push
push
call
lods
in
add
scas
test
add
mov
in
pop
mov
push
add
fiadds
add
hlt
jno
add
add
cmc
xchg
les
cmpsl
add
add
int3
mov
add
push
push
lea
push
push
lea
push
call
add
add
cli
mov
add
rolb
mov
add
icebp
jl
add
add
gs
pop
push
add
enter
add
mov
add
add
fiaddl
mov
lcall
add
add
nop
in
push
add
lcall
inc
or
jno
adc
lea
push
push
push
lea
push
push
push
lea
push
call
add
add
add
enter
add
cmpsl
movsb
leave
mov
mov
fiaddl
add
sub
pop
xor
push
push
push
push
lea
push
push
push
push
lea
push
call
add
add
into
mov
jbe
add
mov
mov
add
add
add
xchg
cmpsb
jb
enter
int
je
add
add
add
mov
add
mov
clc
mov
sti
aam
add
pop
add
add
les
push
lea
push
push
push
push
push
call
add
add
mov
add
add
add
call
test
jae
lock
fsubrl
add
xchg
lcall
lock
push
push
push
call
add
test
mov
stos
not
add
xchg
rolb
add
add
add
jecxz
add
add
mov
push
pop
jge
mov
add
add
out
mov
sub
pop
pop
push
push
call
lock
jmp
in
mov
add
add
pop
cmc
lds
push
xchg
shrl
add
add
imul
jo
add
add
addr16
sti
add
fsubrs
bound
mov
cld
lret
mov
int
xchg
push
add
add
jecxz
out
ljmp
lcall
dec
add
xor
adc
push
push
push
lea
push
push
call
fwait
mov
cmpsb
jae
ret
add
jns
add
jbe
add
add
jle
mov
add
ror
pop
clc
xchg
pusha
push
xlat
sub
pop
xor
push
push
push
push
push
push
call
mov
add
add
movsl
sahf
mov
add
push
pop
aam
add
cli
add
outsl
add
ljmp
rolb
push
mov
add
scas
jno
add
add
add
pop
notl
popa
add
lcall
les
push
push
push
lea
push
push
call
add
loop
divb
addr16
add
mov
pushf
add
bound
add
loope
add
push
add
push
ljmp
jle
xlat
push
cwtl
mov
lcall
mov
xor
push
lea
push
push
push
lea
push
call
clc
cli
mov
add
add
mov
jnp
fiaddl
mov
mov
lods
jbe
fidivl
nop
test
lds
pop
add
pop
rolb
add
divl
mov
add
arpl
add
imul
add
lret
scas
sub
pop
sub
pop
push
push
push
push
push
lea
push
call
call
add
jo
add
add
add
jmp
jge
mov
add
fisubrs
in
add
xchg
add
push
mov
iretw
add
add
sahf
clc
add
add
lret
mov
mov
cmc
add
cld
sub
pop
rep
push
shl
sub
not
ror
pop
pop
mov
push
push
lea
push
push
call
add
add
add
mov
push
add
add
lret
test
mov
add
lcall
add
add
aam
lret
xchg
push
mov
add
stc
hlt
pop
test
pop
add
stos
add
mov
test
jp
sub
pop
add
push
lea
push
push
push
push
lea
push
push
push
push
call
add
add
add
push
outsl
loop
add
fdiv
mov
mov
mov
jmp
in
add
add
lods
add
sub
pop
add
push
push
call
imul
add
xchg
add
pop
mov
add
stos
jecxz
mov
mov
int3
in
add
add
add
lea
add
ficomps
fildl
add
add
cmc
leave
mov
mov
call
lds
xchg
add
aad
in
clc
pop
add
push
rol
rol
shr
lea
pop
mov
push
push
push
call
mov
add
add
lcall
push
pop
aam
outsl
pop
lods
popf
mov
cli
rolb
add
add
add
jmp
sar
add
add
lret
add
shlb
add
andb
add
add
mov
add
add
add
sub
pop
xor
push
push
lea
push
push
call
add
mov
add
add
add
int
add
ret
add
add
mov
add
mov
add
add
ljmp
in
gs
mov
add
add
pushf
add
xchg
jno
add
pop
add
push
shr
lea
pop
mov
xor
push
not
pop
mov
push
push
lea
push
call
add
repnz
add
add
add
sti
shll
add
mov
test
add
out
add
push
fstp
fsubs
mov
add
xchg
add
xchg
mov
in
clc
lcall
or
push
push
push
push
push
push
push
call
fiadds
jp
add
loope
add
add
add
movsb
cmpsl
add
shll
add
outsl
cmc
loopne
mov
sti
add
push
add
imull
imul
mov
fisubl
pop
repnz
lcall
les
add
push
push
push
lea
push
push
push
push
push
call
add
add
in
roll
pop
fdivp
movsb
negl
lcall
fimuls
mov
mov
sahf
add
add
add
loopne
mov
addb
jmp
out
stos
fwait
icebp
add
aad
add
lcall
ret
push
shr
rol
dec
pop
mov
push
push
sub
xor
push
xor
add
not
dec
add
sub
dec
pop
inc
rol
pop
push
push
push
push
lea
push
lea
push
push
lea
push
call
add
mov
lods
add
mov
add
cli
in
add
mov
xorb
cmpb
cwtl
add
cmpsb
add
xchg
mov
out
add
icebp
add
lods
lcall
pop
add
mov
pushl
push
sub
pop
call
push
push
push
add
add
sub
push
sub
add
inc
not
sub
add
not
pop
add
inc
not
pop
push
not
dec
pop
push
push
push
sub
pop
call
push
pop
mov
push
push
push
lea
push
lea
push
push
lea
push
push
push
push
call
enter
xchg
mov
add
pop
in
in
cmpsl
fcmovb
loope
add
xchg
mov
mov
shrb
addr16
add
lahf
loope
add
imul
rolb
add
jbe
xchg
xchg
add
jno
add
in
fdivr
lcall
push
push
lea
push
lea
push
push
push
push
push
lea
push
call
add
xchg
add
lea
add
add
test
out
xchg
test
add
movsl
pop
push
add
jp
mov
out
add
xchg
add
ljmp
add
mov
pop
gs
add
mov
stos
scas
sub
pop
mov
add
push
lea
push
push
push
push
call
add
clc
add
add
stos
jnp
stos
movsl
mov
jae
mov
jle
roll
out
rolb
xchg
rcll
jp
lahf
add
scas
add
push
testl
test
roll
cmpsb
push
add
add
fwait
in
bound
add
outsl
imul
rcl
stc
popf
ret
add
sub
pop
add
push
push
lea
push
push
lea
push
push
push
push
push
call
test
scas
rolb
mov
xorl
xchg
pushf
jge
add
add
scas
add
add
push
mov
add
lcall
movsl
lea
add
lds
push
add
in
test
fdivr
lcall
ret
cmp
jae
xor
push
inc
pop
add
push
push
shl
lea
sub
pop
mov
xor
push
push
push
lea
push
lea
push
push
call
stos
jmp
mov
xchg
pop
jno
add
jno
xchg
test
aam
add
iret
out
leave
scas
add
neg
fstl
add
movb
add
fs
ficomps
jp
incb
add
add
stc
jmp
add
lock
rol
pop
pop
mov
xor
push
push
push
lea
push
lea
push
push
push
call
roll
adcl
stos
add
add
mov
jno
stos
add
add
sub
pop
rep
push
push
push
lea
push
push
push
push
lea
push
push
call
mov
pop
push
jmp
mov
add
enter
add
call
jb
add
sub
pop
mov
xor
push
push
call
ret
pusha
add
add
add
in
std
push
shll
add
pop
jo
pop
add
in
addr16
mov
add
add
jp
addb
add
roll
ja
add
jne
ljmp
lahf
mov
jecxz
sbbl
mov
sub
pop
or
je
push
shr
inc
pop
mov
push
push
lea
push
lea
push
push
push
push
push
call
test
in
add
sahf
mov
push
add
ja
jae
out
add
pop
testl
test
in
in
lcall
xor
push
push
call
add
mov
movsb
push
mov
add
int
add
movb
mov
add
push
add
push
add
mov
scas
movb
add
add
clc
shrl
add
add
add
add
in
clc
pop
add
push
push
push
lea
push
push
lea
push
lea
push
push
push
call
add
lret
testl
add
xchg
fdivrs
mov
jmp
xchg
mov
out
add
pop
cmp
lcall
push
sbb
jno
adc
adc
mov
inc
sarl
inc
add
add
add
add
xbegin
add
mov
mov
test
rcrl
ja
add
mov
add
std
rcll
add
push
mov
add
mov
hlt
lods
mov
loop
sub
pop
xor
push
push
push
push
push
push
push
lea
push
lea
push
push
call
fiadds
data16
je
rcl
add
pusha
fucomp
test
add
mov
hlt
stos
push
push
add
cli
add
mov
popa
add
mov
out
out
add
jmp
add
je
add
std
add
add
add
aam
add
sub
pop
add
push
push
push
push
push
lea
push
push
push
push
call
add
hlt
hlt
add
hlt
add
add
add
mov
mov
stos
testb
add
std
enter
test
out
add
jecxz
pusha
lds
movl
jne
push
push
push
push
push
push
push
push
call
add
add
add
repnz
pop
add
add
mov
add
outsl
lret
push
add
jle
add
in
loopne
push
mov
xor
push
push
push
lea
push
lea
push
lea
push
push
push
push
push
call
loop
insb
in
jecxz
add
add
add
pop
jns
push
fs
mov
add
outsl
popa
add
test
xchg
add
imul
sahf
int3
aam
push
movsl
rcl
lock
mov
add
lcall
lock
push
lea
push
call
out
add
jge
lea
pop
not
add
pusha
add
add
add
add
add
jle
int
in
hlt
lcall
push
push
lea
push
push
call
mov
mov
movb
add
add
add
mov
add
add
add
mov
js
add
xchg
movsl
cltd
add
add
add
add
gs
add
add
add
add
notl
push
jns
cwtl
mov
in
add
roll
mov
xor
push
xor
pop
or
je
push
push
push
push
lea
push
push
push
call
add
arpl
push
popf
nop
add
xchg
data16
push
add
add
mov
loope
pop
push
add
add
and
add
add
add
lahf
pop
ret
hlt
xchg
add
lods
jne
pop
test
add
les
xchg
in
pop
add
add
repz
push
push
lea
push
push
lea
push
push
push
push
call
add
filds
clc
cli
call
add
jge
jecxz
add
mul
mov
repnz
add
xchg
add
iret
add
idivl
add
push
add
sub
pop
add
push
inc
pop
add
rep
push
push
push
push
push
push
push
lea
push
push
call
mov
mov
repnz
jecxz
xchg
add
add
pop
add
stos
cmc
add
out
xchg
repnz
add
pop
add
mov
add
flds
cwtl
fldl
add
add
add
xchg
fwait
add
bound
jne
jbe
add
push
push
add
push
and
add
shl
shr
shr
sub
shl
sub
shr
pop
ror
pop
push
sub
pop
pop
push
lea
push
push
push
call
add
add
mov
stos
add
les
jb
add
mov
cmpsb
add
add
pop
ret
loopne
pop
insb
push
pop
add
out
jmp
data16
mov
add
add
add
scas
mov
add
js
fcmovb
cmc
lcall
add
lods
fbstp
scas
out
add
lock
mov
push
push
push
lea
push
call
add
mov
add
fstps
add
add
push
add
popa
add
popf
mov
add
add
shlb
pushf
push
add
add
lock
push
mov
xchg
add
add
mov
xchg
add
lock
mov
mov
push
xor
add
pop
jmp
push
sub
lea
sub
lea
pop
push
push
sub
sub
shr
not
pop
mov
add
push
ror
add
sub
sub
pop
push
push
push
lea
push
push
call
call
add
jb
mov
add
lock
add
mov
icebp
add
test
push
add
arpl
data16
cwtl
sbbb
add
mov
xchg
add
jmp
mul
pop
rclb
addl
push
add
not
inc
pop
mov
pop
push
dec
pop
pop
pop
push
lea
push
push
lea
push
push
push
push
call
mov
roll
add
ret
jno
add
andl
idiv
mov
out
xchg
jge
fwait
les
jo
add
add
add
in
in
lcall
push
shl
pop
leave
push
lea
push
push
call
hlt
cltd
add
add
test
in
sahf
add
add
mov
mov
std
rorl
add
mov
add
add
add
add
jnp
test
stc
add
sti
add
add
cmpsl
push
push
arpl
stos
add
add
add
add
hlt
pop
ret
push
push
lea
push
push
lea
push
lea
push
push
push
push
call
add
add
push
je
add
cmc
aad
int3
roll
fstps
mov
push
stc
lcall
add
test
arpl
lahf
add
pusha
add
out
fnsave
repnz
add
push
add
hlt
add
add
lcall
in
add
push
push
push
push
push
call
push
divb
add
loopne
add
hlt
fiadds
fcmovu
lahf
jnp
in
xchg
in
mov
add
xchg
in
fisubs
add
ret
add
test
lahf
xchg
fisttps
add
int3
jl
push
add
jmp
add
push
scas
icebp
stos
lods
repnz
lcall
nop
in
jnp
add
in
in
pop
push
push
push
push
push
lea
push
push
call
stc
clc
add
in
stos
xchg
insb
mov
add
add
push
add
loop
mov
mov
mov
xchg
lods
imull
push
push
push
call
mov
cwtl
enter
enter
int3
and
jle
rclb
add
popf
add
add
pop
test
iret
mov
add
shlb
jl
mull
test
sub
pop
push
push
add
ror
pop
movl
push
inc
pop
addl
test
je
push
rol
shr
pop
mov
push
not
inc
pop
pop
push
sub
ror
pop
pop
pop
push
push
push
lea
push
push
call
add
lods
xchg
sti
add
loop
roll
pop
fiadds
push
mov
jge
test
add
aam
add
add
mov
popa
insb
shr
cli
lds
ret
sub
pop
pop
push
shr
sub
xor
lea
pop
leave
push
dec
pop
ret
push
add
xor
pop
push
mov
push
ror
pop
add
push
lea
push
push
push
push
push
push
call
add
insb
add
jp
jo
add
add
add
std
lret
mov
add
add
push
add
push
xchg
xchg
add
push
jle
mov
add
add
popa
add
jmp
add
stc
add
add
imul
flds
out
in
in
lcall
push
push
lea
push
lea
push
call
imul
rolb
add
movl
gs
fstl
mov
test
jle
add
nop
mov
in
add
add
sub
pop
push
push
push
pop
testl
addl
push
add
ror
inc
xor
pop
push
push
push
push
lea
push
lea
push
push
call
add
add
loop
add
add
add
fstps
add
out
rolb
add
jp
add
add
jae
roll
push
imul
pop
cmpsb
pusha
add
mov
mov
sbb
aam
sti
lods
add
add
lcall
jbe
call
shlb
call
cld
push
push
call
add
add
mov
add
jb
add
add
xlat
add
fstp
lods
insb
add
jne
add
insb
add
lds
add
add
fistpll
add
shl
popf
xchg
add
jl
scas
jb
pop
add
int3
test
mov
addl
push
add
mov
add
cmc
fldl
jne
push
push
push
push
push
push
push
call
int3
add
fiaddl
add
push
arpl
stos
mov
add
pop
into
add
jle
add
add
xchg
aad
scas
lods
add
fistps
fs
ja
add
add
mov
add
push
jl
lahf
jae
shl
mov
xlat
add
add
add
add
roll
call
push
push
lea
push
lea
push
lea
push
push
push
push
call
addb
jl
add
lahf
addl
leave
add
pop
mov
cmpsb
push
pop
loop
nop
rolb
push
fwait
xchg
jne
jge
add
fsubrs
add
add
add
out
mov
movb
add
aam
xchg
add
in
fcomps
add
mov
call
int3
subl
push
push
push
call
fiadds
add
add
add
jb
add
roll
jns
loope
add
loope
add
mov
imul
leave
add
add
mov
push
bound
add
add
hlt
enter
lret
ja
add
rol
incb
mov
fldl
jge
add
test
xor
pop
pop
pop
push
inc
pop
pop
push
dec
pop
pop
push
push
push
push
push
push
lea
push
lea
push
push
push
call
add
je
xchg
jp
data16
add
mov
mov
add
repnz
xchg
xchg
cmpsb
stos
mov
mov
ja
scas
add
mov
bound
pop
arpl
arpl
add
add
rolb
push
mov
mov
lcall
push
push
push
push
push
call
test
stos
mov
add
add
lret
mov
pop
add
mov
lea
xlat
popf
addb
xchg
mov
test
mov
into
nop
nop
add
add
mov
lcall
add
push
push
push
push
push
push
push
lea
push
push
push
call
add
mov
jmp
out
fldl
add
call
jmp
movsl
jl
mov
add
leave
push
mov
pop
push
push
not
not
dec
pop
mov
add
push
ror
sub
sub
lea
pop
push
push
push
push
lea
push
push
call
pushf
add
add
push
in
add
add
negb
add
arpl
mov
jno
jmp
push
add
add
mov
in
lock
push
push
push
not
xor
sub
inc
pop
movl
push
push
call
jecxz
add
or
lcall
mov
add
add
add
ror
mov
jne
testb
jge
xlat
call
in
clc
pop
push
push
push
push
lea
push
lea
push
lea
push
call
sti
in
add
add
add
subl
add
xchg
data16
addb
push
add
jns
xchg
pop
mov
mov
push
ljmp
pop
call
push
shl
sub
pop
push
push
ror
dec
pop
call
push
push
lea
push
push
push
push
call
mov
rcrl
mov
mov
bound
jb
sahf
cmpsl
push
push
pop
sti
mov
add
mov
out
add
add
push
add
add
add
aam
add
add
iret
pop
push
aad
push
shll
in
call
subl
push
push
push
push
call
rolb
shlb
in
push
add
faddl
add
mov
add
add
jl
out
cwtl
mov
lock
lcall
jge
add
test
call
push
push
lea
push
push
push
push
push
call
push
add
mov
push
testb
cmpsl
add
add
mov
add
add
add
shll
lea
add
in
in
lcall
pop
push
shl
pop
pop
push
pop
pop
push
shr
inc
pop
leave
push
push
push
push
push
push
push
push
call
add
test
add
add
add
pop
add
scas
add
cmpsb
add
cmpsb
pop
ja
add
add
fsubs
add
add
add
add
add
add
out
add
pop
add
icebp
xchg
add
sub
pop
ret
push
push
xor
add
pop
mov
add
push
lea
push
push
lea
push
push
push
call
add
jbe
faddl
mov
icebp
in
xchg
push
push
fadds
pop
jae
add
mov
add
pop
pop
pop
mov
lcall
call
aaa
adc
orb
out
push
lea
push
push
push
call
fiaddl
push
add
lahf
std
add
add
mov
cmc
add
add
add
add
add
xor
push
mov
jge
sub
pop
push
push
push
call
add
ja
aam
add
mov
push
mov
push
std
scas
add
mov
pop
push
flds
scas
add
mov
add
lock
lret
add
mov
in
sahf
jns
cmpsl
add
mov
add
out
xchg
add
xchg
jecxz
add
add
add
lcall
push
push
sub
pop
mov
lea
push
rol
shl
add
pop
sub
push
sub
dec
pop
mov
push
push
lea
push
push
push
call
mov
cmc
fwait
add
add
mov
jae
js
mov
mov
call
imul
add
add
sbbb
in
mov
in
in
pop
shr
push
sub
dec
pop
add
push
push
lea
push
push
lea
push
push
call
mov
jno
scas
fwait
loope
add
pop
xchg
cltd
push
add
add
add
pop
add
add
jb
mov
mov
fsubrp
add
mov
pop
mov
sub
pop
mov
mov
push
lea
push
call
xchg
nop
add
add
add
push
test
push
add
push
mov
add
add
mov
add
lods
add
lcall
inc
or
lea
push
call
add
hlt
add
xchg
sti
add
in
add
out
and
les
mov
cmpsl
add
nop
sahf
push
icebp
aam
popa
add
repnz
bound
push
ret
add
add
shlb
inc
add
add
ret
and
fistpl
nop
nop
nop
nop
push
push
push
lea
push
push
call
pop
jb
pop
ja
lds
loop
mov
fcom
js
add
add
cwtl
test
add
fwait
mov
ja
add
add
add
mov
add
sahf
int
add
add
in
lcall
pop
outsl
jne
push
xor
not
sub
xor
pop
cmp
jne
push
lea
push
lea
push
call
jo
mov
jne
add
add
in
movsl
mov
add
add
imul
add
push
outsl
add
repnz
stc
add
mov
cmpb
add
in
mov
lock
add
jp
add
add
mov
mov
add
jno
sub
pop
mov
push
xor
lea
pop
movl
push
rol
ror
pop
jmp
mov
push
push
push
push
push
call
popf
add
add
add
sar
lcall
add
imul
add
outsl
add
mov
add
or
mov
push
mov
mov
add
add
add
sub
pop
mov
sub
jne
push
ror
dec
pop
mov
push
push
lea
push
push
push
push
lea
push
push
push
push
call
add
add
add
push
mov
add
xchg
pusha
test
call
nop
loope
cli
movsb
sarb
stos
into
add
leave
add
push
xchg
add
pop
mov
mov
pop
add
add
add
add
nop
add
aad
xchg
pushf
out
add
imul
pop
movl
push
sub
shl
pop
jmp
mov
push
shl
not
add
pop
mov
push
not
xor
pop
cmp
jne
push
push
call
out
add
out
pop
std
add
mov
pop
movsl
pop
in
roll
stc
mov
arpl
push
add
add
jmp
push
rcrl
ljmp
enter
add
scas
incb
add
pop
mov
push
add
xor
lea
pop
movl
push
lea
push
push
push
push
call
fs
add
addr16
add
mov
add
pop
jbe
rcr
mov
stos
add
add
std
add
pop
arpl
jl
xchg
push
add
push
cld
sub
pop
jmp
push
shl
ror
sub
pop
mov
push
lea
shl
lea
sub
pop
cmpw
jne
push
lea
push
lea
push
lea
push
push
push
lea
push
push
push
push
call
mov
insb
add
add
aam
add
mov
js
cwtl
add
add
mov
out
pop
add
add
add
testl
mov
mov
add
jne
testb
add
add
jmp
lcall
inc
adc
call
add
ror
pop
jmp
push
rol
sub
rol
pop
pushl
pop
push
lea
push
lea
push
push
push
push
call
add
insb
rolb
cmpsl
popa
mov
popf
add
add
cli
add
add
add
jge
mov
lcall
inc
or
push
call
notl
aam
mov
test
nop
data16
add
add
cli
add
add
push
pop
icebp
movsb
xchg
add
add
xchg
add
popf
xchg
push
push
add
hlt
out
mov
addl
lods
pop
add
mov
add
mov
sub
pop
mov
push
not
pop
mov
push
push
xor
push
xor
add
sub
shr
shr
pop
rol
add
pop
push
inc
shr
pop
push
call
push
push
push
push
push
push
lea
push
call
xchg
xorb
jmp
pop
add
add
les
popl
push
add
add
js
cmpsb
xorl
add
fldz
ret
cmp
add
push
push
shr
push
or
inc
add
add
sub
xor
sub
sub
pop
shl
lea
pop
push
lea
shr
not
pop
push
push
not
not
pop
call
cmpl
je
push
push
sub
rol
dec
sub
push
push
pop
add
shl
sub
sub
add
pop
add
shl
pop
push
lea
push
lea
push
push
push
push
lea
push
push
push
lea
push
call
lods
add
mov
rcrb
aad
jp
add
add
add
cld
jnp
mov
add
sti
lea
popf
lock
into
fldl
mov
add
out
popf
nop
cmpb
mov
out
pop
add
lcall
push
push
push
push
lea
push
push
push
call
push
outsl
rorb
mov
nop
pop
xchg
add
icebp
add
andl
imul
add
div
xor
add
arpl
add
add
cmpl
je
push
push
rol
add
push
sub
add
add
shr
inc
sub
shl
lea
add
pop
lea
rol
pop
push
shl
inc
pop
push
push
add
ror
pop
call
push
xor
rol
pop
cmpl
je
push
push
lea
push
or
not
add
dec
sub
lea
add
sub
shl
lea
add
xor
pop
pop
push
push
push
push
push
push
push
push
push
call
insb
add
cli
aad
lret
jge
movsl
push
lock
stos
fadd
lret
add
mov
push
push
lea
mov
add
data16
push
int3
add
popa
mov
in
fdivr
lcall
push
add
sub
add
pop
call
cmpl
je
push
push
sub
xor
ror
lea
push
and
add
inc
sub
xor
inc
pop
rol
sub
dec
pop
push
not
lea
pop
push
push
lea
push
push
push
push
push
push
call
mov
add
add
rcl
add
add
add
sarl
jb
icebp
fdivr
mov
lret
test
clc
add
fstpt
add
add
shll
add
mov
jle
add
add
add
imul
add
movsb
adcb
sbb
push
sub
pop
call
push
push
call
mov
add
pusha
add
flds
rcll
add
xchg
mov
add
divl
in
imulb
testl
add
js
xchg
push
add
jge
add
add
add
sub
pop
cmpl
je
push
push
add
rol
push
and
add
sub
not
dec
add
pop
inc
sub
inc
pop
push
add
rol
pop
push
call
push
lea
push
lea
push
lea
push
push
call
cltd
lret
imul
cwtl
shl
enter
xchg
add
push
call
jnp
add
addl
push
js
add
xchg
std
push
imul
pop
fiaddl
scas
data16
into
add
add
lcall
cmp
or
int3
je
push
push
add
ror
push
and
add
dec
sub
xor
shr
sub
pop
not
pop
push
push
push
push
push
push
push
push
push
call
add
mov
xchg
imul
mov
stos
push
add
ror
push
loopne
add
add
scas
jnp
add
mov
hlt
add
add
shl
pop
loope
jns
mov
lock
fadds
add
jmp
add
movsl
add
lcall
push
sub
pop
call
cmpl
je
push
push
sub
lea
push
or
not
add
inc
sub
sub
sub
dec
pop
lea
xor
pop
push
push
push
call
out
add
std
bound
lods
add
add
jge
add
add
mov
lret
mov
pop
add
add
jle
add
mov
jmp
std
xchg
pop
mov
add
mov
mov
in
mov
add
xlat
mov
loop
add
shlb
cmpsb
sub
pop
push
push
push
push
push
lea
push
call
lods
stos
shl
xchg
fstp
add
in
mov
jb
call
in
jbe
add
add
add
cmc
jae
fiaddl
into
test
xchg
jno
jle
sub
pop
call
push
sub
inc
shl
pop
cmpl
je
push
push
lea
xor
not
shl
push
xor
add
lea
ror
sub
sub
ror
xor
inc
pop
lea
rol
sub
sub
pop
push
push
push
push
push
push
push
lea
push
push
call
incb
push
add
push
movsb
xchg
lods
add
pushf
add
rolb
add
push
pop
add
add
add
add
call
pop
add
add
bound
add
fdivr
lcall
call
push
xor
shr
dec
pop
cmpl
je
push
push
dec
inc
shr
push
sub
add
lea
ror
xor
sub
lea
xor
sub
dec
pop
xor
shl
pop
push
ror
shr
inc
dec
pop
push
push
push
call
leave
mov
xchg
rol
add
push
mov
fs
add
add
call
add
add
add
cmc
icebp
out
add
js
mov
in
clc
pop
call
cmpl
je
push
push
add
add
push
sub
add
sub
xor
add
sub
pop
shr
pop
push
sub
pop
push
push
shl
add
pop
call
cmpl
je
push
push
ror
rol
inc
push
or
inc
add
rol
not
add
dec
sub
xor
sub
pop
add
pop
push
push
push
push
push
call
add
loope
lds
add
mov
add
test
fildl
imul
pop
add
add
xchg
out
imul
push
loop
add
add
scas
add
lcall
push
add
pop
call
push
shr
sub
dec
ror
pop
cmpl
jne
push
add
sub
shl
rol
pop
mov
movl
push
shl
add
pop
jmp
push
push
call
add
add
popa
add
in
movsl
fwait
add
movsb
addl
stc
mov
int3
jl
jecxz
jns
add
movsb
aad
cmpsl
filds
js
add
cli
mov
fidivl
add
add
xchg
loope
add
in
add
jne
push
add
mov
add
add
lcall
rclb
scas
dec
mov
pop
push
call
push
cld
sahf
sarb
addr16
out
jb
add
add
add
add
int
add
lds
testl
lcall
push
shl
inc
pop
pop
push
rol
add
ror
shl
pop
pop
push
dec
xor
shr
not
pop
pop
leave
push
not
add
rol
pop
ret
push
not
shr
shr
pop
push
push
push
lea
push
push
call
cmc
icebp
sar
add
xchg
add
gs
enter
push
add
jge
add
lret
add
add
roll
in
xchg
aam
add
pop
into
jno
ret
add
add
rolb
jl
leave
add
add
push
in
xchg
test
repnz
pop
mov
push
sub
pop
add
push
lea
push
push
lea
push
push
push
push
push
lea
push
push
call
hlt
jb
ja
push
add
lret
add
add
jge
xlat
xchg
add
testl
mov
pop
stc
add
roll
cmpsl
fs
add
bound
push
add
in
fdivr
lcall
jge
add
test
add
add
out
aad
push
shr
xor
push
and
add
xor
sub
add
sub
dec
pop
shr
inc
inc
lea
pop
push
not
pop
pushl
push
dec
sub
sub
pop
call
push
push
push
push
push
push
push
push
call
rcll
repnz
mov
add
jmp
mov
xchg
fs
cli
out
fstpt
lods
shll
pop
ljmp
jo
imul
hlt
add
mov
filds
into
mov
test
add
divb
in
loopne
lcall
call
add
dec
pop
call
push
not
pop
jmp
push
dec
ror
sub
pop
cmpl
je
push
lea
pop
cmpl
jne
push
push
call
add
fsubrs
push
mov
mov
shll
xlat
out
add
out
rolb
mov
pop
movsl
rcrl
push
mov
in
add
add
sub
pop
mov
push
rol
sub
shl
xor
pop
call
push
push
push
lea
push
lea
push
push
push
push
call
add
add
push
cli
add
add
jb
add
push
add
add
rcr
add
add
add
imul
in
add
add
mov
hlt
lret
out
pop
insb
add
popa
add
ficoms
sub
pop
ret
push
push
push
lea
push
push
push
push
push
push
call
jo
xchg
imul
add
add
add
add
fsub
jecxz
add
add
add
jo
loop
mov
jecxz
add
xchg
mov
jmp
cmpl
jne
push
push
sub
push
xor
add
sub
sub
rol
inc
lea
pop
shr
sub
pop
push
lea
push
push
push
push
call
into
push
insb
add
add
jbe
add
mov
cwtl
addl
add
add
add
add
addl
add
push
int3
sub
pop
pushl
push
push
push
push
push
call
add
stc
mov
jmp
add
int3
add
gs
call
add
cmpsl
xchg
add
test
mov
add
mov
fiadds
pop
test
push
movsl
roll
std
movsl
clc
fiaddl
jl
test
fildl
add
sub
pop
call
push
push
push
lea
push
push
push
push
push
push
call
add
jecxz
in
test
pop
add
mov
test
ljmp
fwait
mov
movsl
add
mov
pop
push
into
lret
add
loopne
lcall
xchg
xchg
push
into
stos
fidivl
loope
js
jb
loopne
leave
add
add
add
sub
pop
push
call
push
xor
inc
pop
jmp
cmpl
jne
push
push
push
push
push
push
call
add
xchg
mov
lcall
add
mov
out
ret
enter
jl
leave
add
add
add
add
gs
add
not
lcall
xchg
push
jne
add
add
int3
in
add
add
add
add
mov
add
add
add
mov
push
xor
pop
push
push
push
shr
push
xor
add
dec
sub
shr
xor
pop
lea
xor
ror
pop
push
rol
pop
pushl
call
push
add
pop
call
push
push
add
sub
push
sub
add
shl
sub
xor
pop
xor
pop
push
pop
pushl
push
push
lea
push
push
push
lea
push
push
lea
push
push
call
arpl
mov
xchg
test
add
add
jmp
lods
in
xchg
add
mov
add
mov
cwtl
ror
add
add
mov
push
push
je
add
pop
sub
add
not
pop
call
push
push
sub
add
not
push
or
not
add
ror
sub
xor
sub
lea
add
pop
not
sub
pop
push
push
call
cmpsb
add
add
add
add
movsb
xchg
enter
mov
cld
add
push
insb
mul
add
mov
sub
pop
pushl
call
push
shr
pop
call
push
push
inc
ror
add
push
or
not
add
xor
sub
inc
pop
pop
push
lea
push
call
leave
pop
into
mov
insb
ret
push
xchg
add
mov
in
add
pushaw
add
mov
mov
add
mov
jb
cmpsb
mov
into
add
push
clc
pop
pushl
call
push
push
push
push
push
push
push
call
add
add
hlt
jl
mov
rol
out
push
roll
add
jno
fiadds
add
in
in
call
push
push
ror
shr
push
or
inc
add
add
lea
sub
add
shl
not
lea
pop
sub
pop
push
lea
push
push
push
call
imul
add
add
testb
add
popa
mov
test
in
iret
add
lds
ljmp
xchg
out
xchg
shl
test
add
pop
test
in
lock
pushl
push
lea
push
push
push
push
lea
push
push
push
push
call
add
add
fdivr
add
scas
in
mov
add
mov
add
stos
mov
jnp
jmp
pop
add
add
add
add
cwtl
les
loopne
xchg
addl
into
add
jmp
sbbb
add
ja
pop
fwait
add
add
mov
lcall
add
push
add
add
pop
call
push
push
rol
rol
sub
push
and
add
sub
rol
add
sub
pop
sub
add
sub
lea
pop
push
ror
pop
pushl
call
push
push
push
push
push
push
push
push
push
call
add
cli
lret
add
fs
ljmp
ret
stc
in
cld
xchg
add
mov
fdivr
lcall
shrb
push
pop
push
lea
rol
not
push
sub
add
ror
add
shl
xor
sub
not
pop
sub
shr
add
pop
push
lea
push
push
push
push
lea
push
push
push
push
lea
push
call
xchg
fdivs
mov
lods
mov
add
cmpsl
jne
fisubrs
add
add
add
xchg
lods
jmp
add
test
add
ret
add
add
lret
mov
les
mov
in
fdivr
lcall
jne
push
inc
sub
shr
shl
pop
call
push
sub
inc
dec
sub
pop
call
push
push
ror
shl
push
sub
add
shl
sub
add
sub
shr
pop
add
pop
push
add
lea
ror
pop
pushl
call
push
push
push
push
call
add
mov
mov
pop
add
jbe
in
jle
push
add
in
add
imul
rolb
add
movsb
add
lea
add
shrb
nop
rorb
sub
push
sub
add
lea
rol
sub
shr
not
pop
dec
sub
pop
push
push
push
call
mov
les
lods
add
std
add
pop
insb
int
lea
xchg
add
mov
lds
gs
lret
mov
add
add
mov
add
add
add
cli
nop
add
add
jns
add
add
add
add
hlt
rcrl
pushl
push
push
push
push
call
in
add
in
jnp
add
cmc
add
mov
add
add
popa
add
call
icebp
sti
xchg
pusha
xchg
roll
fidivl
shl
lods
add
sub
pop
call
push
xor
pop
call
push
push
xor
push
sub
add
add
rol
sub
rol
pop
sub
pop
push
push
lea
push
push
push
lea
push
push
push
push
call
push
add
jmp
add
add
add
in
popf
add
mov
fildll
add
mov
mov
pop
cmpsb
xchg
add
enter
shl
in
mov
pusha
loope
or
add
mov
pusha
lahf
add
lds
pop
add
mov
add
xchg
loopne
mov
fcompl
jne
push
sub
xor
pop
call
lea
push
sub
not
dec
pop
push
push
not
lea
sub
pop
call
push
push
xor
push
or
not
add
add
sub
ror
dec
shr
pop
shr
ror
add
pop
push
push
lea
push
push
push
lea
push
call
add
mov
stos
sti
add
add
add
data16
push
xchg
add
call
scas
fadds
push
lock
add
sahf
add
lcall
add
enter
add
mov
ret
jo
add
mov
add
xchg
mov
outsl
sub
pop
pushl
push
not
pop
call
push
push
push
push
push
push
call
into
nop
xor
add
push
add
add
cwtl
add
cmpsl
sahf
add
pop
imul
fdiv
in
into
test
arpl
lcall
shrb
hlt
mov
xchg
rol
push
or
not
add
rol
dec
rol
sub
shr
pop
dec
shl
pop
push
ror
inc
pop
pushl
push
push
lea
push
call
add
xchg
add
mov
add
add
scas
xchg
add
add
add
mov
pop
into
add
aam
xchg
jbe
pop
repnz
add
pop
mov
add
cmc
push
sub
pop
call
call
push
push
rol
ror
sub
push
xor
add
rol
sub
sub
ror
add
pop
xor
inc
sub
pop
push
push
lea
push
push
lea
push
push
push
push
push
lea
push
call
xchg
imul
add
add
test
ljmp
add
mov
loopne
out
jle
mov
movsb
sti
in
imul
fdivrl
imul
rorw
add
add
xchg
sub
pop
pushl
push
push
push
lea
push
call
iret
std
js
mov
add
fisubs
xchg
add
sbbb
jge
hlt
mov
into
xchg
mov
rolb
mov
add
add
js
add
mov
addl
lcall
test
push
push
push
push
lea
push
push
lea
push
call
ret
jae
js
jbe
ljmp
jbe
lahf
jge
pop
arpl
mov
push
mov
mov
mov
add
add
insb
into
outsl
les
pop
stos
add
xchg
cli
add
pop
imul
add
add
cmpsb
add
lcall
shrb
addb
ror
sub
lea
not
push
or
not
add
add
add
xor
shr
sub
pop
rol
inc
pop
push
push
lea
push
push
push
push
lea
push
call
sbb
add
mov
out
sbbb
add
add
xchg
ljmp
add
add
cli
pop
add
mov
rolb
adcb
aam
add
add
in
lcall
jne
call
push
push
not
add
shr
push
or
not
add
sub
rol
sub
shr
sub
shl
inc
pop
add
dec
add
pop
push
push
inc
push
and
add
add
shl
rol
shr
sub
sub
pop
inc
not
pop
push
shr
sub
pop
call
push
push
push
push
lea
push
push
call
add
rorb
add
movl
add
add
mov
mov
add
jo
bound
add
sub
pop
pop
dec
jne
push
rol
rol
pop
call
push
push
shl
shl
push
push
pop
add
xor
sub
inc
xor
ror
pop
dec
inc
dec
pop
push
push
push
lea
push
push
push
push
push
push
push
call
lock
popa
jo
add
mov
ja
imul
pop
add
add
jae
jecxz
sahf
xchg
mov
add
add
add
fwait
add
push
icebp
add
scas
pop
xchg
add
test
lds
jne
push
lea
push
push
push
push
push
push
call
in
fistpl
add
add
add
add
leave
loope
add
mov
shrb
pop
add
jecxz
popa
sti
add
fyl2xp1
mov
add
data16
ja
jb
loope
incb
or
add
imul
add
add
add
call
push
push
xor
xor
pop
call
push
push
push
call
add
add
add
filds
add
mov
add
add
push
jecxz
jp
add
mov
cmc
imul
add
add
sub
pop
mov
push
push
sub
sub
push
or
inc
add
lea
add
sub
inc
inc
not
pop
ror
xor
add
pop
push
push
push
push
push
call
add
in
outsl
add
push
jmp
loopne
jp
add
loopne
addl
aam
stc
sub
pop
pushl
call
push
pop
lea
push
shr
pop
push
push
push
lea
push
lea
push
lea
push
lea
push
push
push
push
lea
push
call
add
jbe
add
add
mov
test
loopne
add
fildl
mov
rorl
fnstcw
xchg
mov
fdivr
lcall
add
jbe
push
push
push
lea
push
push
push
push
call
lret
add
add
push
add
ret
pusha
add
xchg
push
mov
jle
add
add
add
jae
js
push
bound
jb
add
jno
jmp
sub
pop
push
push
shl
pop
push
push
lea
push
call
add
pop
add
scas
add
fwait
movl
add
xchg
add
mov
jmp
add
add
add
mov
add
mov
add
add
insb
adcb
add
lock
pop
call
push
push
push
lea
push
push
push
lea
push
push
push
push
call
add
stos
notb
mov
add
add
test
add
add
jnp
call
lea
jmp
add
add
pushf
and
ljmp
fnstenv
xor
push
xor
add
xor
sub
not
add
pop
ror
sub
rol
pop
push
shl
shr
pop
pushl
push
pop
call
push
push
push
lea
push
push
lea
push
push
lea
push
push
call
add
add
ficoml
mov
lock
cmc
pop
add
add
jnp
xlat
add
mov
add
jbe
imul
add
sub
pop
push
push
lea
push
push
lea
push
push
push
push
call
add
add
movb
add
ja
add
add
cltd
negl
mov
outsl
rol
push
fldl
shrb
loope
push
push
add
push
or
inc
add
inc
xor
shr
sub
sub
ror
pop
sub
not
shr
pop
push
not
pop
pushl
call
push
push
lea
push
lea
push
push
push
push
push
call
add
stc
fcoml
in
hlt
mov
mov
add
jl
roll
xchg
jp
add
mov
movsl
jp
rolb
in
add
add
mov
movsl
mov
add
testb
int3
mov
pop
cmc
mov
call
sub
pop
call
push
add
add
pop
mov
push
sub
pop
lea
push
push
lea
dec
add
rol
push
and
add
shl
shr
not
sub
ror
dec
add
pop
not
sub
dec
pop
push
push
push
push
push
lea
push
lea
push
lea
push
push
call
add
fistl
xchg
add
add
jne
stos
add
jae
js
add
test
mov
add
rolb
add
add
add
cmc
filds
add
enter
imul
push
jle
sub
pop
pushl
call
push
add
not
pop
lea
push
sub
pop
push
push
push
push
call
addr16
clc
outsl
cwtl
add
add
fcoms
push
movsl
add
add
nop
jns
add
loope
add
add
add
add
add
mov
in
leave
mov
mov
fsubp
loopne
in
push
mov
add
ror
add
jnp
lods
enter
clc
pop
push
pushl
push
push
xor
shl
add
add
push
push
pop
add
sub
shl
sub
sub
ror
pop
dec
shl
sub
pop
push
not
pop
push
push
rol
xor
lea
pop
call
push
push
add
add
add
push
or
inc
add
sub
not
pop
dec
pop
push
not
pop
pushl
push
lea
push
call
flds
mov
cmp
test
add
loopne
jb
jmp
add
jb
cld
add
pop
add
stos
push
push
popa
enter
rcr
add
stos
out
sub
pop
call
push
dec
xor
add
pop
push
push
dec
pop
call
push
push
rol
add
rol
push
sub
add
rol
sub
add
pop
add
rol
rol
pop
push
dec
sub
add
pop
pushl
push
lea
push
push
push
lea
push
lea
push
lea
push
lea
push
call
movb
add
imul
add
add
add
mov
jecxz
cltd
rcrb
add
cli
mov
xchg
mov
in
add
aad
lret
sub
pop
call
push
pop
call
push
shl
add
pop
jmp
pushl
push
push
call
jp
pop
pushf
add
add
add
add
add
loope
mov
push
mov
std
lods
arpl
add
roll
negl
jge
in
clc
lcall
mov
push
lea
pop
jmp
push
push
inc
sub
shr
rol
push
or
not
add
add
shl
sub
xor
dec
xor
pop
lea
shr
not
add
pop
push
lea
push
push
push
push
push
push
push
push
call
pop
movsl
add
je
add
jmp
xchg
mov
gs
add
hlt
out
into
jne
add
add
fcmovne
int
add
jp
push
lock
cld
add
add
add
pop
add
add
add
pusha
out
pop
cwtl
add
imul
int3
out
mov
add
add
sub
pop
pushl
push
inc
pop
call
push
lea
ror
add
add
pop
push
call
push
push
rol
ror
add
push
or
not
add
sub
sub
ror
pop
shl
inc
pop
push
shr
pop
pushl
push
push
push
lea
push
lea
push
push
push
push
call
fiaddl
add
add
jmp
push
cmc
jl
add
push
mov
add
add
add
add
sti
add
add
mov
lcall
sarl
add
insb
imul
jo
add
add
add
insb
add
lcall
hlt
adc
add
add
pop
add
add
add
jp
xchg
fstps
add
add
pop
mov
stos
notl
imul
mov
lds
js
clc
add
add
scas
jecxz
add
push
lret
add
leave
add
loope
push
lea
push
add
xor
push
leave
add
lcall
call
push
lea
push
push
push
push
call
add
add
jge
jo
cmpsl
pop
xchg
add
add
cli
mov
int
cmpb
mov
call
ljmp
aam
addr16
xchg
addb
pop
leave
push
lea
push
push
push
push
push
push
push
push
push
call
jp
add
add
ficompl
pusha
push
add
add
add
add
add
mov
jno
add
add
add
xchg
mov
mov
add
add
add
jo
add
add
mov
xchg
and
add
push
sub
pop
add
push
push
push
push
push
push
lea
push
push
call
add
je
js
add
sub
add
mov
fucomp
push
mov
mov
add
add
xchg
xchg
int3
add
pop
add
add
jle
add
test
add
pop
sub
pop
pop
push
push
push
push
push
push
call
add
addb
add
hlt
loop
jbe
add
add
add
add
mov
cli
mov
mov
push
jmp
fwait
gs
mov
add
out
add
push
filds
sub
pop
pop
pop
push
sub
lea
pop
xor
inc
push
not
lea
rol
ror
pop
ret
leave
push
add
shl
pop
ret
push
push
lea
push
lea
push
push
push
push
call
hlt
popf
fildl
add
add
incb
xchg
test
shrl
add
mov
add
sti
out
push
add
mov
pop
add
in
push
push
push
call
add
push
mov
add
xchg
addl
test
add
add
mov
fstpl
mov
add
add
mov
add
cwtl
xchg
mov
mov
addb
testl
add
test
mov
add
in
push
push
push
call
les
add
bound
mov
add
add
jmp
add
add
out
fisubl
add
lret
add
add
add
fistl
mov
add
lcall
jge
add
test
add
add
jmp
int
lret
pop
mov
push
rol
add
inc
pop
jmp
mov
push
lea
push
push
push
call
add
add
add
mov
out
lods
pop
lock
in
add
add
movb
aam
mul
add
cwtl
cmpsl
add
mov
add
add
adcl
and
push
rol
ror
add
pop
xor
push
sub
pop
xor
push
push
push
push
lea
push
push
push
call
add
add
clc
mov
rolb
loopne
filds
push
add
add
xchg
jae
imul
add
add
add
enter
js
cli
add
lahf
test
add
aad
add
add
add
repnz
add
imul
lock
pusha
jns
mov
scas
add
mov
sub
pop
add
push
add
pop
xor
push
sub
dec
pop
dec
sub
push
push
call
jle
push
mov
add
cmpsb
add
jecxz
mov
in
insb
add
add
push
out
add
add
add
subb
add
add
clc
add
movsl
rcr
sub
pop
jmp
push
sub
not
pop
sub
push
push
push
push
push
push
push
push
push
call
add
add
mov
add
shlb
add
mov
add
repnz
mov
repnz
jmp
add
add
int3
add
add
add
add
add
mov
jns
arpl
stc
add
add
mov
in
fcompl
xor
and
js
popf
push
push
lea
push
push
call
add
add
push
lods
mov
xchg
xchg
add
rolb
hlt
mov
add
xchg
in
mov
lods
add
enter
mov
mov
add
les
add
pushf
lods
popa
add
shlb
push
add
bound
add
lods
add
add
mov
movsl
frstor
cmpsl
xchg
mov
in
lcall
push
not
shr
sub
pop
sub
push
push
lea
push
push
lea
push
lea
push
push
push
push
push
call
add
roll
bound
sahf
popf
lahf
neg
cmpl
pop
add
je
js
xchg
add
lret
js
icebp
mov
add
fsubs
jb
sti
stos
jecxz
add
jp
add
shrb
roll
add
loope
jnp
add
add
lcall
cmp
pop
call
ret
add
pop
mov
lea
push
sub
pop
sub
mov
push
xor
dec
add
pop
shr
add
push
lea
push
lea
push
push
push
lea
push
push
push
push
call
add
movsb
cltd
add
jne
lahf
add
jp
mov
imul
add
sti
and
add
pushf
faddl
xchg
loopne
xchg
add
add
jecxz
hlt
add
add
mov
add
test
into
add
fdivr
lcall
jmp
push
push
push
call
lea
add
imul
push
xchg
enter
add
push
add
add
jo
mov
add
add
bound
fildl
add
pop
pop
jb
jne
mov
push
test
imul
stc
jp
add
mov
jp
add
arpl
add
fldl
lcall
xor
cld
shl
sub
sub
pop
pop
push
shl
pop
shr
push
push
push
push
push
push
lea
push
push
call
cmpsl
int3
mov
mov
cli
sahf
les
add
aad
mov
add
mov
add
bound
outsl
sub
pop
and
push
xor
pop
sub
push
lea
dec
pop
cmp
jne
push
push
push
push
push
lea
push
lea
push
lea
push
call
test
add
jecxz
into
mov
jo
int
add
add
add
fnstcw
stos
add
push
pop
bound
iret
addr16
sbbb
out
outsl
movsb
jne
fildl
push
push
push
lea
push
lea
push
push
push
push
lea
push
push
call
aad
pop
gs
add
add
je
rolb
mov
addl
add
mov
push
into
cmpsb
in
mov
js
data16
add
add
lret
add
ja
add
add
push
lods
incb
pop
ret
push
shr
sub
pop
push
push
push
push
lea
push
call
add
ret
add
in
add
lods
add
add
mov
enter
fdivrp
test
mov
jl
add
out
fcmovnbe
ja
jmp
addr16
add
mov
add
add
roll
add
pop
sub
pop
mov
push
push
push
push
push
push
push
push
push
push
call
rolb
add
iret
xlat
pusha
xorb
push
stos
add
add
pop
cmc
out
imul
testb
add
nop
mov
add
mov
jb
add
add
sarb
mov
fdivr
lcall
cld
push
push
lea
push
push
push
push
push
push
push
call
mov
cwtl
push
add
add
add
shl
add
fst
add
add
incb
add
add
and
in
fcompl
push
lea
push
push
lea
push
call
cli
add
lods
jo
cld
add
add
test
xchg
add
add
cld
add
jl
lahf
add
add
jp
mov
ret
faddl
mov
sti
add
rolb
lods
add
in
lock
push
push
add
sub
pop
push
push
push
pop
push
mov
push
push
push
push
push
push
push
lea
push
push
push
call
add
add
jle
jbe
leave
cld
pop
mov
gs
jne
ja
add
fcmovnu
scas
add
push
mov
add
pop
add
add
pop
stos
fiaddl
pushf
mov
mov
add
scas
jo
mov
jne
int
je
fsubs
pop
lea
push
lea
push
push
push
call
sarl
lret
push
insb
in
add
add
into
xchg
add
test
ret
add
add
jne
stos
add
mov
filds
rolb
add
jmp
add
add
loopne
add
add
leave
mov
in
lock
lcall
ljmp
push
lea
push
push
push
lea
push
lea
push
push
push
call
xchg
scas
mov
ljmp
jmp
jne
jo
add
roll
add
jecxz
lahf
push
cltd
add
in
add
add
in
rolb
add
add
lcall
ljmp
push
push
call
arpl
lret
into
add
xlat
add
add
mov
mov
add
add
add
add
add
imul
mov
lcall
fimull
add
push
push
push
lea
push
push
lea
push
push
call
arpl
add
loop
add
add
roll
in
fiadds
jmp
xchg
lcall
xchg
test
add
add
jl
xchg
sub
pop
add
push
push
push
push
push
lea
push
push
push
lea
push
push
call
add
add
add
mov
cmpsb
leave
test
loopne
ljmp
xchg
ret
add
add
push
jno
fidivrs
sti
add
neg
out
fs
lock
lods
add
xchg
xchg
test
lret
sub
pop
mov
add
push
dec
shl
pop
xor
push
push
push
push
lea
push
call
fwait
ret
add
mov
jo
mov
ret
mov
mov
xchg
add
add
cmc
xchg
push
add
add
pop
addl
xchg
push
sti
repnz
mov
add
push
add
lcall
xlat
push
xor
rol
inc
pop
and
push
ror
pop
rol
push
push
lea
push
push
push
call
add
push
ljmp
add
xchg
incb
cmc
mov
add
add
je
add
lret
add
cli
add
jae
mov
add
in
in
lcall
rolb
add
loopne
add
pop
inc
push
lea
push
push
push
push
lea
push
push
push
lea
push
lea
push
call
into
pop
mov
jne
addb
add
lods
int
add
jb
mov
lahf
lahf
add
mov
add
shll
add
pop
sahf
movsb
pusha
notb
xchg
add
add
out
mov
add
stos
ret
nop
gs
add
add
jns
add
popf
cmc
in
je
roll
add
lcall
cmp
jne
push
push
lea
push
lea
push
push
call
pop
add
xchg
pop
fistpll
pushf
std
fwait
rolb
ret
add
add
add
sti
insb
movl
mov
imul
lea
flds
add
in
mov
add
add
lcall
inc
pop
ss
push
push
push
push
push
call
stc
add
add
jno
pop
add
add
popl
mov
add
test
loop
add
mov
sahf
mov
mov
lea
int
out
sahf
sti
roll
add
push
stos
add
add
in
pop
cmp
je
push
push
push
push
lea
push
lea
push
push
call
ror
jns
cltd
ja
add
push
add
lock
cmc
pop
cld
sub
add
add
in
add
add
add
in
add
push
pop
cmpl
jne
push
push
push
push
lea
push
lea
push
push
push
push
push
call
add
add
popa
add
push
sti
xchg
mov
lods
add
add
add
add
test
add
add
add
xchg
push
add
add
add
add
rolb
push
pushf
repnz
out
addb
call
add
lods
add
mov
push
gs
add
pop
sub
pop
xor
push
push
push
push
push
call
add
add
idiv
roll
mov
add
add
fldl
loope
ja
add
add
enter
movsl
popa
jmp
pusha
repnz
in
in
lcall
pop
push
rol
rol
pop
pop
push
xor
pop
pop
push
dec
pop
pop
leave
push
rol
pop
ret
push
push
push
push
push
lea
push
push
push
call
outsl
add
nop
sahf
add
jle
add
scas
push
bound
cmpsl
jns
mov
add
add
les
jecxz
iret
add
jle
sti
mov
fsts
push
cld
add
in
add
add
lcall
push
adc
jecxz
outsl
testb
push
lea
push
push
push
push
push
lea
push
call
push
mov
push
mov
xorl
lahf
add
jns
popf
mov
jnp
cld
movsb
outsl
add
add
mov
add
in
fdivr
lcall
push
or
push
push
lea
push
push
push
call
add
xchg
add
jle
idiv
add
roll
test
out
lds
mov
mov
cmc
addb
add
jne
add
pusha
divb
mov
add
sti
mov
add
push
add
gs
add
out
push
add
out
add
add
add
jp
in
in
lcall
add
rolb
inc
pop
push
push
not
lea
rol
pop
mulb
pop
push
push
push
push
push
push
push
call
xchg
add
add
mov
jae
icebp
add
lcall
add
add
add
push
in
pop
lds
lods
mov
cltd
lea
push
push
push
call
shll
sahf
mov
arpl
stos
add
addb
jmp
push
add
adcl
xchg
arpl
pushf
push
repnz
add
add
add
xchg
push
add
in
lcall
push
add
pop
call
push
lea
push
lea
push
push
push
lea
push
push
push
call
add
push
add
jnp
out
add
add
add
mov
outsl
leave
leave
imul
out
add
add
scas
add
clc
add
add
mov
add
popa
add
add
xchg
cwtl
add
fwait
add
add
add
add
add
add
xor
push
ror
pop
pop
pop
push
not
pop
pop
push
shr
shl
lea
pop
pop
push
inc
lea
rol
pop
pop
push
push
push
push
lea
push
lea
push
lea
push
push
push
lea
push
call
mov
add
scas
add
add
xlat
add
call
add
popa
loopne
ja
leave
roll
jbe
mov
mov
jmp
and
ret
add
rcl
push
add
lds
xchg
add
add
jmp
jno
clc
pop
or
movsb
stos
mov
jb
add
ret
push
push
push
lea
push
push
lea
push
push
push
push
lea
push
call
sbb
movb
cmpl
jb
sahf
push
xchg
add
add
fsubs
add
outsl
hlt
add
mov
add
xchg
add
add
mov
int
jmp
add
add
lcall
push
lea
push
push
push
push
lea
push
push
push
push
call
xchg
add
cmpsb
roll
mov
add
add
sahf
pop
movsl
add
add
add
mov
mov
add
add
jb
fidivrs
fiaddl
mov
add
add
pop
fiaddl
jae
add
in
fcompl
in
add
push
dec
add
pop
push
push
push
push
push
push
push
push
push
call
xchg
mov
add
add
lods
movsb
jno
push
add
add
xchg
mov
add
rcrl
mov
add
int
jmp
add
add
pusha
push
jb
in
add
fs
lcall
in
loopne
lcall
push
sub
add
sub
dec
pop
push
push
push
push
lea
push
lea
push
call
push
stos
fcoml
lret
int3
jnp
leave
mov
push
mov
pop
mov
add
add
lcall
push
lea
push
push
lea
push
push
call
aam
add
in
xchg
add
add
stos
gs
jmp
mov
add
lret
out
stc
add
icebp
add
in
cli
pushf
add
sbbl
jecxz
sahf
mov
fdivrs
divb
add
test
adc
fs
stos
add
int3
sub
pop
mov
push
push
push
push
push
lea
push
push
push
call
and
pop
pop
xchg
pop
cmpsl
fst
testl
add
sti
pop
add
jecxz
into
add
repnz
mov
add
push
push
add
add
in
fsubp
add
add
fldt
hlt
add
lods
add
loopne
push
push
rol
sub
shl
lea
pop
pop
push
sub
not
add
pop
lea
push
shl
sub
pop
sub
push
push
push
lea
push
call
add
jb
pop
mov
xchg
add
aam
out
add
mov
pusha
lods
ffreep
mov
test
lods
mov
add
add
movsb
add
adc
mov
and
adcl
pop
add
add
add
lods
ja
cli
add
sti
out
add
add
jle
add
jo
shr
roll
idivb
nop
jne
add
scas
lods
cld
clc
mov
fists
test
int3
mov
jne
add
addl
pop
add
add
add
lcall
ljmp
push
call
add
add
roll
roll
mov
add
add
jmp
clc
iret
add
rclb
ret
cli
pusha
add
lcall
pop
js
dec
pop
add
push
sub
not
dec
lea
pop
pushl
push
dec
lea
pop
popl
mov
push
push
push
push
push
push
push
push
push
push
call
int3
add
data16
enter
add
cmpsb
mov
jae
add
imul
add
jne
push
add
add
fildll
add
int
add
add
add
movsb
pop
stos
mov
jno
add
lcall
stc
push
ror
pop
xor
push
push
push
push
push
push
lea
push
push
push
push
call
add
add
add
add
icebp
mov
add
add
add
push
lods
iret
outsl
add
fs
jae
add
add
pop
add
rcrl
fwait
scas
sahf
push
add
adc
push
push
push
lea
push
push
lea
push
call
mov
add
add
add
push
jne
add
fiadds
mov
xchg
stc
out
add
jno
add
add
mov
repnz
cmpsl
lods
scas
add
int
in
call
mov
add
push
ror
pop
xor
push
not
lea
xor
pop
rol
push
inc
dec
rol
pop
nop
push
push
lea
push
call
lds
fstpl
add
loop
stos
add
add
add
push
incb
pop
add
add
add
xchg
pushf
add
roll
mov
push
add
add
lcall
xor
push
dec
add
rol
lea
pop
nop
nop
push
xor
sub
pop
inc
push
sub
pop
nop
push
push
push
push
push
call
mov
add
lods
add
push
mov
arpl
inc
add
mov
fildl
xchg
sahf
iret
add
mov
les
mov
mov
add
add
into
movsl
add
push
mov
add
push
add
add
stc
add
add
scas
andb
in
pop
nop
cmpb
jne
push
shl
pop
add
nop
push
push
push
lea
push
call
add
add
add
in
add
bound
jp
pop
mov
movsl
add
add
jecxz
add
pop
add
subb
les
add
jp
push
sub
pop
nop
cmp
je
push
ror
sub
sub
pop
nop
nop
push
dec
lea
pop
inc
push
lea
push
push
lea
push
push
push
push
push
call
iret
cltd
add
add
add
cwtl
add
add
add
out
add
testb
add
testb
loope
pop
fsubp
jp
notb
inc
add
scas
mov
add
enter
sub
pop
nop
push
push
lea
push
lea
push
push
lea
push
push
push
push
push
call
add
mov
pop
imul
push
jmp
add
int3
add
add
add
xchg
jp
popa
xchg
add
add
mov
cmc
sub
pop
nop
push
push
push
push
push
push
lea
push
lea
push
push
call
add
in
pop
sahf
xchg
add
add
add
add
jge
add
out
jge
jl
mov
add
decb
fstps
add
movb
add
add
jge
add
jb
add
add
lds
add
pushf
jne
add
aam
add
push
popf
movsb
add
rolb
dec
jecxz
jns
mov
pop
cmp
jb
xor
push
pop
jmp
mov
push
push
push
call
mov
mov
mov
add
test
mov
cwtl
lds
xchg
aad
add
push
add
jge
test
add
lock
fisubs
in
hlt
lcall
rcll
xchg
push
lea
push
push
push
push
call
add
enter
add
lds
in
bound
mov
jmp
in
add
les
mov
jb
push
lea
push
push
push
lea
push
push
lea
push
lea
push
push
call
add
add
in
stos
add
lret
loopne
push
int
mov
xchg
roll
outsl
cmc
clc
add
in
imul
rcrl
lcall
inc
sbb
push
push
push
push
push
push
push
push
push
call
test
add
add
in
out
icebp
add
sar
mov
stc
ret
int3
add
add
pusha
mov
insb
orl
popa
pop
add
mov
flds
out
fwait
out
fildll
add
add
incb
lcall
rcll
gs
xor
push
sub
sub
shr
pop
xor
xor
push
push
push
push
push
lea
push
push
lea
push
call
lock
jl
push
movsl
add
add
jmp
out
lahf
xchg
add
mov
movb
mov
add
leave
add
add
pop
fiadds
jmp
lcall
loope
push
push
push
push
push
call
add
fcom
add
pop
cmpsl
pushf
add
loope
add
add
outsl
jno
jb
fidivrl
jge
loope
lahf
aad
jge
add
jle
mov
push
mov
aad
enter
in
mov
add
jl
rcr
fldenv
add
jbe
add
hlt
xchg
add
sub
pop
xor
push
push
push
push
push
push
call
pop
add
xchg
push
scas
call
rolb
in
add
testb
mov
stc
mov
std
in
faddl
add
add
add
lcall
loope
xor
push
sub
not
shl
pop
shl
push
shl
shl
pop
xor
push
lea
push
push
push
lea
push
push
lea
push
call
popa
pop
scas
add
fwait
mov
in
ret
add
jl
mov
add
enter
mov
mov
jl
add
into
xchg
add
add
add
jecxz
add
mov
aad
roll
xchg
add
add
xchg
mov
add
xchg
fiaddl
sub
pop
mov
push
add
inc
not
pop
add
pop
push
lea
push
push
call
les
push
stos
jnp
rorb
clc
shll
pop
add
mov
mov
add
add
add
add
push
ret
add
add
pop
movl
cmpsb
pop
push
add
add
outsl
add
mov
pop
mov
lcall
pop
push
pop
pop
push
add
ror
not
pop
leave
push
push
push
push
push
push
call
jl
mov
add
add
test
mov
add
arpl
movsl
leave
iret
mov
add
add
cwtl
bound
lock
aad
nop
ror
add
fwait
jnp
shlb
add
test
mov
add
movb
add
add
add
lcall
or
push
push
lea
push
push
lea
push
push
push
push
call
add
cmp
add
gs
add
out
mov
pop
add
mov
jne
mov
add
add
mov
mov
mov
add
xlat
imul
add
out
jb
popa
fidivrs
sahf
rolb
add
add
mov
add
add
mov
cli
nop
mov
in
loopne
lcall
mov
push
shr
rol
not
pop
push
push
add
pop
push
push
push
call
cmc
add
test
add
jbe
mov
lahf
jle
cmc
out
movsb
stos
mov
add
add
fildl
mov
add
add
mov
pop
push
push
dec
shr
pop
push
push
push
lea
push
push
push
push
push
call
mov
int
loop
add
add
add
clc
pushf
mov
add
add
mov
imul
or
add
add
dec
pop
mov
push
lea
push
lea
push
push
push
call
mov
cmc
out
add
lahf
add
add
popf
mov
fld
mov
mov
add
push
std
mov
add
add
scas
in
add
mov
push
dec
not
sub
pop
test
je
push
rol
ror
rol
pop
mov
push
lea
push
push
push
push
lea
push
call
cwtl
add
test
add
add
rolb
into
add
xchg
lods
push
rcl
xchg
mov
les
add
jae
add
into
add
add
imul
lcall
hlt
pusha
jge
push
fstps
add
loope
add
add
gs
mov
add
mov
test
je
push
push
lea
push
push
push
push
push
push
call
add
push
cli
add
add
xchg
add
sahf
movsb
addr16
add
add
add
add
into
cmpl
add
add
add
lret
add
out
add
scas
add
jns
movsb
add
in
loopne
mov
push
xor
lea
add
pop
mov
push
push
lea
push
push
lea
push
push
push
call
lds
mov
lret
test
rolb
in
leave
scas
add
push
pusha
fiaddl
shrb
add
mov
add
add
add
fdivs
sub
pop
mov
push
lea
push
push
push
push
call
add
add
add
popa
out
js
add
arpl
add
cwtl
add
xchg
pop
into
add
data16
add
mov
cmpsb
sub
pop
inc
push
lea
push
call
movl
scas
mov
add
jge
mov
sar
rorl
mov
popf
mov
add
stos
push
add
neg
scas
add
ljmp
jmp
add
add
popa
hlt
add
fnstcw
xchg
add
sahf
sub
pop
cmp
je
push
push
push
call
add
idivl
xchg
add
fcom
push
aad
add
add
add
je
jbe
push
sahf
add
data16
mov
repnz
add
je
add
mov
popa
add
in
hlt
lcall
rorb
jge
add
push
push
push
push
push
push
push
push
push
call
int3
xchg
mov
sahf
add
add
add
ffreep
in
test
shl
stos
mov
cld
imul
jnp
filds
add
mov
out
loopne
scas
add
mov
hlt
push
sub
pop
mov
push
dec
pop
inc
cmp
je
push
pop
test
jne
push
ror
inc
pop
xor
push
lea
push
push
lea
push
push
lea
push
lea
push
push
push
push
call
push
xchg
ljmp
add
xchg
ljmp
pushf
test
add
add
add
add
jbe
stos
sbbl
add
jo
jb
test
outsl
push
pop
add
add
jns
lcall
add
rolb
push
push
push
push
push
push
push
call
pop
fst
push
add
nop
movsb
jp
add
fcmovnbe
lcall
add
jp
add
les
jp
mov
add
fwait
add
scas
les
lock
add
add
lds
leave
nop
pusha
faddl
add
loope
fldl
push
lea
push
lea
push
call
xchg
fldenv
jne
in
add
jecxz
add
jae
nop
in
aam
shr
aad
push
add
add
leave
gs
push
fildll
into
decb
pushf
data16
in
hlt
pop
pop
push
shl
inc
pop
pop
leave
push
not
pop
ret
mov
push
xor
inc
lea
pop
inc
cmp
jne
push
sub
add
sub
rol
pop
lea
push
sub
add
lea
add
pop
mov
push
push
lea
push
push
push
lea
push
call
out
jl
add
add
mov
xchg
add
jge
add
add
jbe
ret
jne
mov
add
add
std
jp
arpl
sub
pop
test
je
push
dec
pop
mov
push
pop
add
push
sub
ror
xor
pop
cmp
jne
mov
push
push
call
fwait
pop
mov
cmc
pop
js
pop
add
add
rcl
mov
add
mov
add
add
jo
ja
add
rolb
jge
xchg
cwtl
leave
testb
add
test
sub
pop
test
je
push
lea
push
push
lea
push
call
add
add
add
add
add
aam
out
pushf
push
shl
add
add
add
out
add
add
fs
mov
lock
insb
push
outsl
xlat
ret
jge
add
jae
testb
callw
movsb
push
lea
push
call
outsl
sahf
iret
add
xchg
mov
call
jne
add
add
xlat
scas
jl
add
pop
add
add
add
imul
add
into
sub
pop
add
cmp
je
push
push
lea
push
push
push
lea
push
lea
push
call
mov
mov
in
push
add
add
add
subl
jb
repnz
push
int3
xchg
add
pop
sub
pop
jmp
xor
push
lea
push
lea
push
push
push
push
push
call
push
fdivrl
mov
movb
test
add
cmpsl
mov
jecxz
popf
add
loopne
add
add
pusha
ja
fiaddl
add
add
mov
pop
push
push
rorl
push
xchg
lahf
rcll
scas
add
mov
sti
add
add
add
imul
shll
into
add
sub
pop
pop
pop
push
add
lea
pop
pop
push
xor
pop
pop
push
push
lea
push
push
call
add
push
mov
add
xchg
add
scas
push
add
lcall
cwtl
fwait
int3
add
pop
xchg
mov
rolb
in
mov
add
add
xlat
add
add
mov
pop
mov
mov
mov
rorb
mov
pop
leave
push
push
push
call
add
sar
xchg
je
fwait
rcrl
mov
add
jle
mov
add
add
push
add
add
push
lcall
add
lds
stc
add
add
add
out
les
jnp
gs
jecxz
add
add
add
shlb
mov
add
pusha
mov
in
hlt
lcall
or
push
push
push
push
call
add
mov
imul
mov
out
add
int3
mov
add
add
jle
lcall
jl
xchg
pushf
loopne
pusha
add
arpl
add
popf
mov
sub
pop
lea
pop
push
sub
pop
pop
push
add
add
pop
pop
pop
push
lea
push
push
lea
push
lea
push
push
lea
push
lea
push
push
push
call
lea
add
icebp
shl
jb
aam
pop
add
stc
jns
xchg
rolb
add
add
in
jmp
add
add
add
fwait
movsl
lods
add
add
aam
mov
rolb
aad
add
in
fcomps
ret
push
sub
ror
lea
pop
mov
push
lea
push
push
push
call
mov
movsl
in
add
add
add
jl
mov
imul
shl
insb
outsl
fldl
mov
leave
add
add
flds
mov
add
add
jecxz
lret
add
add
add
mulb
les
jmp
loopne
mov
in
add
add
sti
lds
lcall
pop
push
push
push
push
lea
push
push
push
lea
push
push
call
add
add
push
xchg
add
xchg
add
movsb
push
add
stos
mov
sbbl
add
jne
add
pop
add
into
add
aad
addb
lea
push
lea
push
push
push
lea
push
push
lea
push
call
arpl
rclb
add
jle
add
cmc
jp
add
add
add
fdivrl
jle
push
add
aam
jnp
add
add
in
add
add
loopne
lcall
push
rol
pop
leave
push
push
push
push
push
push
push
push
push
push
call
add
insb
mov
add
add
cmpsl
std
add
xlat
push
fiaddl
hlt
cld
lret
hlt
jge
add
add
add
add
rol
add
lret
add
popa
add
add
rcrb
cmpsl
xlat
pop
ret
nop
cmc
sub
pop
ret
xor
cmp
ds
cmp
xor
adc
and
adc
dec
cmp
std
add
adc
cmp
xor
adc
jb
adc
cmp
lahf
loop
xor
testl
jl
sbb
add
pop
scas
divl
lock
mov
test
ret
aas
sub
loope
xchg
xor
ret
fs
jnp
lahf
ret
mov
insl
int
cmpsb
mov
and
lods
cltd
push
fmull
mov
mov
cld
xchg
mov
xor
repz
inc
push
mov
sub
aam
int
push
icebp
les
ret
daa
dec
mov
aas
cmp
xchg
push
iret
lret
idivl
imulb
xchg
icebp
fdivrs
in
push
andb
cmc
add
mov
add
pop
imul
mov
sub
sub
jl
loop
in
repnz
pop
sbb
mov
xor
shlw
cmp
inc
push
ret
cmp
out
inc
xchg
daa
daa
jmp
js
inc
iret
fstl
mov
pop
outsl
sub
test
sub
jecxz
ljmp
jmp
mov
pop
arpl
rorl
pop
outsb
iret
inc
sbb
push
std
sub
outsl
outsl
pop
pop
or
xorb
int
cmp
in
jge
mov
hlt
pop
and
ja
xchg
fsubrl
fwait
dec
add
pop
cmc
dec
das
aad
call
pop
cmp
jns
sbb
lahf
punpckldq
shrl
jbe
insb
push
xor
mov
sub
fiadds
adc
mov
pop
bound
jl
pusha
iret
lcall
jo
loop
sub
inc
aad
xchg
mov
xor
jg
pop
mov
mov
gs
push
jnp
push
pop
repnz
adc
addl
and
aam
icebp
cwtl
and
mov
adcl
mov
arpl
lds
jns
mov
lret
das
xchg
ret
inc
and
pop
daa
sbb
call
ret
int3
sbbl
stc
cmc
test
rcrb
mov
mov
test
mov
xor
std
mov
pushf
inc
lea
stos
xor
fs
mov
cmp
xchg
cmp
aaa
loop
in
imul
fiadds
add
out
std
jge
xor
dec
add
sbb
hlt
je
mov
lahf
das
add
lahf
lods
mov
xchg
movsb
xchg
or
and
dec
dec
xor
lea
pop
cld
pop
xor
push
test
cmp
jg
in
add
stc
mov
dec
in
xor
popf
pop
mov
add
push
jl
mov
stos
jp
push
fs
adc
xchg
pop
pop
cmp
mov
pusha
lcall
fld
add
or
adc
push
test
sub
loope
shr
stc
mov
sub
jnp
and
push
push
adc
or
movsb
rcrb
sub
fwait
fwait
mov
mov
or
imul
sub
and
aaa
lods
pop
outsb
fs
push
pop
fcompl
sbb
sbb
xchg
outsb
imul
in
or
xchg
adc
push
push
xor
push
lcall
out
push
add
daa
call
jne
gs
pusha
fsts
pop
or
inc
js
aas
push
sahf
pop
enter
lock
dec
xchg
add
xor
shll
ficoml
cld
pop
lds
in
shll
sahf
jl
pop
nop
jg
stos
stos
mov
dec
faddl
pushf
dec
pop
gs
jl
sbb
xchg
dec
pop
stc
mov
mov
xor
xchg
push
cmpsb
jno
outsb
in
fdiv
xor
int3
sub
ja
ljmp
gs
pop
test
gs
loope
cmpsb
shll
mov
loop
repnz
movsb
dec
mov
in
test
test
clc
mov
or
jno
xchg
sub
mov
sarb
sbb
lods
lods
test
push
push
enter
popa
jae
cmp
outsl
inc
pop
xchg
mov
inc
jno
xchg
jo
lock
outsb
scas
jecxz
and
out
in
add
jle
sbb
add
xchg
cmp
lods
in
dec
dec
xchg
lock
lahf
mov
clc
aad
push
mov
rcrl
inc
and
loope
sahf
pop
mov
xor
sbb
out
inc
fmul
ret
icebp
dec
pop
ja
dec
insl
incb
push
out
cmp
in
jmp
push
sbb
sarb
test
scas
mov
cmpsl
mov
icebp
xchg
push
xchg
movsl
out
data16
nop
mov
add
mov
xor
cwtl
sbb
pop
pusha
adc
shrb
decb
and
lock
jge
xor
aam
bnd
sbb
imul
in
add
mov
test
mov
mov
mov
pop
jl
mov
pop
sub
adc
xchg
dec
fcomps
imul
pusha
leave
inc
mov
out
jo
pop
push
mov
dec
lahf
push
cwtl
shll
fwait
std
aas
pop
rcl
and
or
mov
adc
iret
sbb
test
inc
cmpsb
sub
pop
or
sbb
or
lret
jnp
or
pop
int
and
bsr
and
into
and
lods
subl
ljmp
add
push
or
fisubl
adc
cmp
mov
cmp
gs
pop
pop
push
movsb
imul
or
aas
xchg
xor
movsb
aaa
push
xlat
and
sub
imul
dec
jp
lret
rorb
and
mov
cmp
sbb
sahf
cmp
sar
cmp
push
sbb
sbb
xchg
mov
lcall
xor
and
xor
jo
imul
into
testb
xchg
sbb
jmp
pop
and
xchg
adc
push
stos
jg
or
lahf
dec
nop
cmpsb
sub
cmpsb
test
pop
xchg
aaa
push
sti
inc
xchg
lcall
lods
xorb
and
loopne
jp
inc
fcomps
aad
cmpb
pop
and
adcb
add
or
pop
pop
aas
or
mov
pop
lcall
test
xor
jge
xchg
jecxz
xchg
lock
push
inc
sarl
enter
sub
in
ret
jmp
into
mov
insl
xor
dec
lea
in
xchg
ljmp
xor
mov
add
dec
or
test
jecxz
xchg
sub
call
jp
std
cmp
dec
mov
in
leave
mov
in
cltd
rclb
fs
movsl
test
movsb
inc
cltd
movsl
in
inc
jns
xchg
sysexit
pop
xchg
mov
xor
mov
dec
adc
jns
cmp
dec
stos
jbe
bound
mov
rcrb
and
out
mov
mov
mov
push
xchg
test
leave
jnp
lods
inc
push
ljmp
dec
in
push
sbb
dec
test
loope
xchg
cmp
adc
icebp
dec
mov
dec
arpl
sub
scas
sub
xchg
sub
enter
mov
movsl
xor
shll
mov
nop
and
lock
add
test
dec
into
in
adc
mov
jo
pop
pop
jns
mov
aam
add
xchg
imul
lods
mov
fs
ret
les
fldt
jno
aaa
flds
lock
jp
rolb
xor
xlat
pop
mov
mov
xchg
sbb
mov
sbb
xchg
cmp
out
xchg
xor
popa
fdivl
es
mov
adc
pop
dec
cmp
mov
or
jmp
aaa
int3
inc
popa
and
cld
dec
inc
xor
punpcklwd
mov
shll
adc
loopne
das
and
roll
sub
xchg
aas
lods
movsb
outsl
cmp
push
cmp
or
out
in
aad
mov
fidivs
aaa
pop
mov
pop
cwtl
mov
in
hlt
push
gs
out
repz
mov
jo
loop
jbe
inc
mull
xchg
lret
inc
addl
fs
push
cmp
call
leave
incb
inc
sub
pop
out
dec
adc
rorb
stos
lret
xchg
push
add
jbe
or
cltd
mov
or
ret
adc
fcomp
fs
outsb
cmovs
out
add
mov
sub
mov
xchg
cmp
fs
in
mov
mul
cmp
xchg
addb
inc
sub
imul
cmpsl
test
aas
push
stos
xor
mov
in
dec
arpl
xchg
in
leave
and
subb
jge
inc
add
xchg
mov
fsubrp
adc
jecxz
mov
jbe
jbe
pop
clc
in
lret
adc
push
xchg
or
adc
mov
add
mov
xor
fldl
shll
xor
xorb
sub
inc
popf
mov
pusha
cmp
notb
mov
rep
out
cmp
inc
xorb
push
sub
or
jnp
loopne
cmp
cmp
or
rorb
ja
push
lahf
enter
imul
outsb
jnp
add
movsb
lret
mov
jae
repnz
loope
pop
fmull
gs
das
xchg
rcrb
cwtl
jmp
sbb
aad
mov
sbb
pop
xchg
cmc
and
and
mov
xchg
imulb
cld
out
cld
call
nop
xchg
sub
mov
int3
or
mov
gs
cli
push
inc
imul
loope
mov
xchg
mov
sub
jnp
adc
sub
jmp
push
xchg
xor
dec
cmpsl
xor
inc
hlt
int3
sub
jmp
push
sub
ficompl
sub
cli
lahf
shrl
cltd
clc
incl
pushl
jo
sti
gs
cmp
es
addl
cli
jg
outsb
out
aad
das
dec
das
and
arpl
mov
sub
fwait
mov
leave
fsubrl
cmp
popf
sub
rcrl
repz
mov
in
fsubs
cmp
or
call
push
out
dec
mov
mov
mov
cmpsb
add
test
push
arpl
sub
stc
iret
in
int3
jno
jns
xchg
inc
and
rcr
lahf
ds
lret
or
jne
cltd
jg
push
or
mov
pop
icebp
call
jg
je
push
mov
insl
repz
shlb
cld
insb
pop
mov
xlat
mov
fisttpl
xchg
shr
fdivl
push
arpl
fs
mov
test
outsl
adc
popf
jbe
fstpl
push
aad
fwait
pop
push
shrl
cmp
icebp
lods
lahf
mov
lods
add
mov
mov
sbb
movsl
test
int3
sbb
inc
cmpsb
ret
cli
and
or
xor
inc
mov
push
sbb
xchg
js
mov
cmpsb
repz
mov
insb
test
stc
test
ja
cmp
mov
div
sbb
ja
lret
notb
add
or
dec
dec
mov
int
jle
xor
lock
jb
xor
arpl
fcomps
sub
mov
inc
xor
cmp
leave
icebp
mov
mov
inc
sbb
incl
xor
xor
fiaddl
cwtl
inc
lahf
mov
xchg
scas
stos
arpl
and
mov
and
in
lcall
jns
icebp
mov
xor
mov
in
aas
ficoms
imul
jbe
cmpsl
clc
aad
push
jg
cmc
jl
ja
add
inc
out
out
out
mov
sbb
jo
and
xchg
mov
xor
dec
cmp
outsl
push
xlat
and
ret
jmp
cmp
aam
cmp
jl
mov
js
imul
scas
stos
push
mov
cmp
imul
aad
xchg
mov
scas
xchg
mov
sahf
aas
lods
or
sub
ret
push
int
loope
pushl
xchg
imul
inc
ja
inc
cmp
fstpt
sti
and
daa
mov
or
fcmove
adc
jecxz
insb
test
test
pop
test
in
xchg
repnz
or
cmp
mov
add
fwait
mov
dec
push
push
pop
sub
lds
sbb
dec
fcmovu
dec
lods
or
mov
les
mov
push
test
jp
ja
cmp
push
add
or
add
xor
dec
sbb
pop
aad
push
cli
movsb
pop
jae
insl
lods
bound
pop
in
ljmp
lods
movsb
xor
and
mov
lock
out
adc
stos
inc
in
jge
or
mov
loopne
orl
shll
test
pop
ret
add
sub
test
mov
jle
fdivs
negl
movsl
sarw
lret
rorb
insl
mov
popf
sub
pop
xchg
popf
and
test
int3
sub
mov
js
fbld
mov
cwtl
lods
xor
lds
or
sbb
jmp
pop
stos
adc
or
mov
push
hlt
xor
das
out
hlt
inc
push
popf
xchg
mov
xor
mov
or
dec
jae
or
mov
inc
outsb
call
insl
shll
fildll
or
aas
xchg
cli
cmp
jecxz
mov
out
sub
mov
inc
sub
popf
add
push
sbb
lret
pop
pop
sub
adc
fildll
test
xchg
and
je
mov
repnz
mov
xlat
cmp
pop
lret
mov
jno
call
push
lret
cmp
dec
fwait
cltd
stos
fsubs
inc
pop
and
roll
jns
or
cmc
stos
loopne
sub
push
and
sub
shrl
or
xchg
cmp
push
movsl
fnstsw
sub
xor
shlb
movsl
cmp
imul
adcb
xchg
in
stc
jmp
lret
mov
adc
jge
shrb
mov
lds
cmp
cmp
in
repnz
sub
rclb
mov
and
outsl
aaa
pop
xchg
outsl
fnstsw
jb
inc
push
repz
mov
addr16
and
dec
jb
push
jne
das
add
jo
test
xor
loopne
mov
test
aad
dec
ret
in
ret
cmc
mov
loopne
mulb
jno
xchg
andb
sub
cwtl
lods
adc
mov
jo
testb
sub
stos
movsb
mov
lock
pusha
mov
adc
mov
push
negl
mov
xchg
lock
ds
outsb
mov
call
fs
sub
cmpsb
roll
xor
sar
fmul
xchg
scas
ljmp
fmull
lock
push
sbbl
into
jl
aaa
in
pop
in
dec
push
adc
adc
pop
ss
out
daa
addr16
pop
cmp
xchg
fdivrs
mov
enter
or
add
sbb
pusha
out
movsb
mov
inc
gs
or
mov
push
or
xchg
jno
movsl
pop
and
push
cmp
adc
out
leave
mov
out
enter
pop
xchg
outsl
mov
xor
aaa
and
scas
sub
push
push
push
pop
mov
sub
jo
add
mov
push
push
jle
cltd
cmp
sub
add
aas
inc
push
aas
rclb
dec
arpl
int
iret
mov
les
pusha
testb
enter
scas
pusha
je
shll
gs
add
pop
cs
dec
push
mov
add
in
fdivl
sub
adc
lret
mov
xor
out
in
adc
mov
lock
xor
sub
sub
aaa
fsubs
das
jge
dec
push
xchg
sbb
inc
cwtl
mov
mov
lret
adc
shl
sahf
outsl
ljmp
popa
in
outsl
test
je
ret
push
mov
push
imul
loop
push
scas
fldt
aam
loopne
jmp
sub
dec
cltd
push
clc
movsb
insl
or
shlb
cmp
in
ret
xor
pushf
add
call
jecxz
cli
mov
testl
push
stos
sub
push
xor
and
stos
scas
or
fs
rorl
xor
je
jae
imul
pop
inc
out
iret
fdivrp
test
push
pushf
adc
pushf
lahf
mov
jl
inc
xchg
mov
or
push
cmp
xchg
lcall
add
cmpsl
adc
adc
mov
rep
pop
enter
mov
out
push
loopne
push
pop
xchg
sub
lods
jae
test
sbb
daa
mov
shlb
xchg
add
ljmp
je
out
mov
push
sub
les
les
or
add
addr16
dec
add
and
mov
shlb
lods
mov
ds
aam
lret
pop
scas
jns
jle
adc
cmp
pop
shrb
pop
or
cs
push
sub
mov
mov
pop
and
clc
popa
cmp
loopne
imul
rorl
push
pop
mov
pop
icebp
lret
pop
mov
jmp
jnp
cmp
and
insb
adc
cltd
insl
mov
inc
sar
jno
and
iret
pusha
mov
mov
lods
dec
out
sub
aaa
pusha
orl
or
or
sub
mov
adc
adc
and
mov
sbb
pop
sbb
in
add
inc
jmp
and
mov
jns
dec
sahf
xor
loopne
rcrl
or
inc
mov
fbstp
fxch
and
daa
jo
sbbb
pop
fnstenv
adc
pop
rcr
pop
jbe
mov
push
insb
jne
mov
add
pop
push
push
fisubl
cmp
push
or
adc
jbe
and
outsb
push
sub
pop
ss
pop
sub
mov
push
in
xor
sti
bound
adc
sub
lret
ret
shll
pop
sti
lret
and
repnz
js
mov
das
cwtl
inc
push
imul
jge
xchg
lret
out
dec
shl
sub
gs
sti
bound
mov
scas
ret
js
and
mov
or
pushf
movb
pop
pop
jge
fwait
dec
add
outsl
cmp
fwait
imul
dec
fdivr
add
enter
pop
dec
add
push
je
mov
pop
repnz
addr16
xchg
fwait
jl
enter
or
clc
clc
jmp
xorl
push
loop
add
fsubp
scas
je
hlt
sbb
xor
push
sub
imul
test
dec
repnz
dec
lea
lahf
movl
jns
sub
in
mov
scas
inc
lds
outsb
mov
movl
inc
movsb
gs
jno
inc
dec
mov
imul
cmpsl
inc
push
test
data16
out
mov
dec
sub
out
inc
movsb
loop
lcall
add
aas
mov
fistl
jle
lret
push
ret
ficoms
push
stc
popf
add
ds
inc
dec
inc
addr16
sbb
push
rclb
jns
push
mov
mov
in
ret
and
enter
pusha
cmc
xchg
loop
out
fsts
ljmp
sahf
test
addl
or
and
or
add
mov
sub
xor
xchg
pop
je
jne
sbb
insl
sbb
mov
and
sahf
js
stos
and
div
aam
fstpt
xor
and
dec
shl
mov
jo
mul
dec
mov
cmp
mov
sbb
out
jbe
xor
jns
jns
fadd
jnp
sarl
sub
xor
sahf
jle
das
cmpsl
stos
ja
pop
adc
sahf
mov
xor
or
sahf
push
in
movsl
adc
cld
add
pop
popf
mov
shrb
out
xchg
add
repnz
mov
icebp
sbb
out
mov
mov
out
lock
push
push
iret
outsb
jb
in
out
psubd
rcr
xor
jp
shrb
xor
gs
mov
dec
pop
xlat
hlt
test
sub
lret
push
mov
jne
in
flds
sbbl
fs
sbb
mov
inc
xchg
jnp
test
stos
fwait
jle
jns
hlt
push
adc
xchg
xchg
mov
rolb
mov
pop
xor
in
push
das
cmpsb
inc
insl
lcall
xor
and
pop
xchg
popa
xor
add
xor
pop
mov
mov
testl
popa
lock
push
ficoms
lods
mov
add
aam
and
sbb
negb
addl
inc
xchg
test
push
sub
stos
cmc
sub
add
leave
sbb
aam
cltd
addr16
jns
or
and
pushf
stc
test
fnstcw
mov
sbb
push
push
xchg
adc
add
xchg
pushw
xlat
mov
rcrb
push
dec
cmp
leave
push
dec
call
dec
out
aad
pushf
fcmovnb
mov
imul
mov
pushf
cli
fdivrl
bound
xchg
ss
mov
pop
dec
subl
in
jb
jns
inc
ja
std
in
arpl
pop
mov
notl
add
inc
repz
aad
andb
fdivp
mov
pop
adc
enter
fisttpll
je
push
not
clc
adc
call
pop
add
push
mov
cmp
icebp
sbb
icebp
aaa
pop
mov
xchg
xor
or
int3
shlb
repnz
inc
insb
dec
test
sbb
sub
bnd
iret
lock
popa
pop
sti
aaa
push
rcrb
add
bound
mov
out
addr16
jge
rcrl
pop
cli
mov
xchg
dec
test
out
jb
dec
mov
shll
popa
jae
cs
add
jb
in
xor
mov
mov
test
bound
data16
xchg
jns
mov
mov
mov
adc
aaa
mov
sbb
push
daa
mov
aam
hlt
and
mov
mov
mov
sbb
ret
xor
push
out
mov
ds
pop
adc
lea
repz
cmp
jae
cmp
shrb
and
mov
inc
inc
mov
arpl
outsb
dec
movsl
pop
std
cmp
jmp
jnp
movsb
sbb
adc
push
lcall
pushl
repz
mov
pop
adc
jle
jns
inc
pop
roll
or
jmp
fdivl
push
dec
mov
mov
movsl
dec
inc
das
icebp
es
lea
pop
mov
loope
push
stc
cmp
adc
sti
iret
cmc
xchg
je
ret
aaa
or
jg
sbb
in
add
push
push
mov
dec
dec
icebp
out
sub
stos
mov
aam
mov
int3
movsl
xlat
cmp
mov
int
scas
jl
sub
jecxz
add
test
inc
insb
out
int3
add
rcrl
int3
mov
xchg
jno
pop
pop
mov
push
dec
pushf
mov
push
fsts
in
jne
push
rolb
leave
mov
mov
test
js
shlb
mov
clc
push
outsb
dec
inc
pop
fwait
mov
call
sbb
test
push
andnps
imul
push
mov
or
pop
stos
fcom
mov
loope
pop
ljmp
mov
mov
stc
pop
xlat
and
xchg
insl
cmp
mov
mov
lea
add
iret
shll
pusha
leave
cmc
jg
inc
sub
push
lods
setbe
push
out
fnsave
pop
call
add
loop
lcall
mov
mov
sub
sbb
mov
jo
lcall
movsb
pusha
int3
sub
sbb
inc
mov
outsl
sub
nop
mov
xor
push
sbb
jne
fisttpl
xchg
test
jmp
gs
cmp
mov
jo
sbb
imul
aam
dec
pushl
cmpsl
xor
ja
shlb
lds
in
jne
mov
mov
sub
dec
incl
xchg
int
popf
rol
mov
xlat
push
out
mov
xchg
in
add
shlb
mov
sub
jmp
mov
pop
mov
adc
pop
add
or
mov
inc
clc
fldenv
lods
pop
enter
in
push
sbb
cmp
adc
mov
jns
push
mov
cmpsb
jno
idivl
push
sub
sbb
jns
mov
jp
movsl
cmp
test
outsb
dec
xor
js
jae
mov
hlt
mov
loop
jne
fldcw
imul
call
mov
aam
ja
push
xor
mov
cmp
and
test
loopne
xorb
xor
mov
cs
aad
adc
je
sti
imul
mov
xor
cli
shl
and
mov
xchg
adc
add
adc
xchg
sbb
les
mov
cmp
xchg
xor
int3
insl
jge
mov
cli
test
mov
xor
in
and
and
jp
std
xchg
add
inc
hlt
add
cmp
out
stos
sti
imul
xchg
mov
sub
mov
imul
iret
mov
dec
lds
addr16
mov
inc
dec
aad
sbb
dec
loope
sub
enter
add
push
pop
mov
pusha
xor
mov
lret
aaa
inc
push
dec
ljmp
mov
out
sbb
push
push
mov
popf
in
inc
mov
sbb
shlb
mov
push
aad
gs
mov
ss
xchg
rcrb
imul
les
es
mov
fldcw
adc
jge
xlat
repz
lahf
dec
push
shrl
les
mov
fildl
scas
jge
push
jle
and
js
mov
das
call
adcb
sub
outsl
inc
lret
iret
loopne
sbb
movsl
lahf
ljmp
xor
sbb
rcrl
inc
cmp
pusha
leave
loope
jb
sub
ds
mov
cmp
insb
sbb
push
pushf
jns
pop
shrb
xor
mov
imul
cmp
dec
stc
cmp
gs
dec
fdivl
jg
ljmp
or
mov
sbbb
enter
and
push
fwait
sub
and
mov
pop
out
aas
dec
mov
mov
pusha
mov
in
sbb
dec
and
jle
sbb
xchg
cmp
jp
pushf
aam
jecxz
js
mov
loopne
push
sbb
outsb
out
push
jnp,pt
scas
mov
scas
add
movsb
adc
sbb
mov
mulb
loope
rcrl
lahf
hlt
aaa
out
mov
dec
adc
or
aas
out
arpl
and
xorl
or
cli
sub
aad
jno
stos
arpl
mov
push
stos
test
mov
dec
sub
repz
jnp
sahf
inc
in
mov
xchg
ret
cltd
pop
sti
sub
jmp
in
mov
push
aaa
lret
pusha
jo
int3
stos
cli
add
das
jns
dec
or
or
mov
shl
es
adc
lods
xchg
dec
ret
or
sub
or
pop
movsl
pop
push
out
sbb
mov
pop
daa
add
out
faddl
xorb
stos
mull
and
cld
and
jo
add
lds
cmp
in
sarb
sub
leave
lahf
mov
aad
addr16
jmp
shll
into
mov
or
sub
and
shr
pop
add
or
or
pop
xor
stc
xor
sbb
push
pop
fdivrl
andl
push
xchg
int3
mov
aaa
add
mov
push
dec
xchg
mov
fwait
add
lahf
add
xor
pop
xor
mov
lods
into
lahf
pop
and
repnz
lea
jnp
xor
mov
aad
clc
mov
pop
xor
lret
into
stc
orl
popf
add
cltd
inc
mov
imul
push
adc
jnp
lock
xlat
xchg
xchg
pushl
inc
loope
dec
test
jmp
ljmp
lock
dec
adc
cmp
ja
outsb
test
add
sahf
dec
adc
fcomps
or
cltd
movsl
ret
mov
jle
pop
rorl
dec
jo
sbb
in
mov
mov
roll
sbb
adc
cmc
lods
sub
mov
mov
pop
push
adc
add
mov
outsb
lods
or
dec
jbe
dec
into
xchg
popf
imulb
fdiv
xchg
or
popa
jbe
pop
adc
movsb
ds
mov
jmp
dec
cmpsl
mov
or
jnp
mov
cld
out
dec
or
fldcw
in
jns
jnp
addr16
orb
testl
sub
insb
mov
andl
mov
fimull
mov
mov
ret
in
jns
sub
mov
mov
push
mov
ja
push
sahf
push
aad
and
pop
hlt
pop
loop
jbe
xor
push
imul
and
pop
cmp
push
pop
rcll
jmp
jecxz
push
shll
cmp
movsb
scas
push
pop
sarb
pop
add
inc
sbb
push
sub
les
or
mov
lahf
and
jmp
test
push
out
loope
and
sbb
mov
into
cmp
mov
jb
sub
js
xchg
fstpl
inc
nop
or
repnz
call
lea
cwtl
mov
adc
aam
cli
jns
xchg
sub
shll
mov
addr16
cs
repz
insl
lods
js
pop
jb
sbb
mov
sub
addr16
lea
inc
and
push
das
cwtl
out
pop
fisubs
xor
incb
addr16
enter
mov
cld
mov
js
ret
pop
cwtl
jb
push
mov
pop
call
jge
ljmp
jae
fsts
cmp
repnz
stc
push
addl
xor
idivl
das
repnz
jmp
rcr
inc
outsl
clc
pop
mov
jmp
test
sub
outsb
mov
inc
mov
insb
dec
in
cwtl
lret
adc
sub
sarb
push
cmp
addl
movsl
pop
xor
aam
push
je
mov
or
sbb
insb
add
push
push
jo
mov
jge
adc
idivb
push
jnp
fwait
test
jno
int3
mov
mov
cld
inc
push
stc
and
fwait
loope
push
mov
imul
mov
loope
cli
cli
movsl
popa
imul
dec
pop
xchg
dec
stos
inc
jo
push
push
jo
pop
out
push
std
lret
xchg
mov
ja
fs
inc
add
fldcw
mov
icebp
or
inc
pop
adcl
addl
decl
in
push
rdmsr
inc
dec
js
fldl
xchg
add
out
lahf
mov
subb
xchg
cmp
sbb
or
insb
repnz
mov
push
out
cmc
stos
xchg
out
js
sbb
xorl
cmp
nop
or
dec
xor
jo
ret
cmpsl
std
or
addl
je
decl
or
into
push
inc
mov
loopne
out
mov
sub
fidivs
inc
test
inc
or
sti
divl
fstl
sarb
js
bound
shlb
dec
in
cmp
sbb
mov
add
adc
jae
jmp
insb
pop
jl
mov
jns
loop
xchg
insl
sbb
mov
cmp
jns
or
cld
lods
ljmp
adc
mov
jo
mov
mov
mov
inc
pop
jmp
dec
xchg
add
lds
and
mov
roll
lahf
fists
repz
cmp
dec
mov
leave
loopne
pop
mov
cmpsl
mov
stos
cld
push
lret
or
adcb
shrb
pop
mov
aas
push
inc
imul
dec
pop
pop
push
pop
add
fmuls
mov
xor
aad
lods
mov
shlb
rcll
insb
push
je
inc
xorb
lock
jbe
dec
xchg
cmp
cmpsl
adc
mov
dec
scas
mov
hlt
sub
xor
push
mov
push
into
xchg
sub
movsb
std
sbb
sub
fdivp
fisubrs
cmpsl
scas
lea
cmp
push
call
cmp
push
cmpsl
je
fwait
sbb
cmp
pusha
je
ja
xchg
js
lock
outsb
es
into
pop
mov
mov
es
jl
adc
outsl
fdivl
dec
lods
arpl
test
rorl
es
fnstsw
data16
js
jmp
aad
imul
insl
stos
adc
je
lods
jge
cmp
xor
lock
adc
dec
mov
sub
divb
xor
rorb
outsb
dec
call
popa
push
add
or
add
out
xor
add
data16
insl
adc
mov
push
adc
sbb
movl
mov
sbb
fnstenv
and
and
mov
or
mov
jns
arpl
push
sbb
mov
inc
leave
mov
cmp
push
or
enter
loope
xor
aam
out
out
jl
mov
jge
sahf
sbb
popa
and
das
into
and
dec
int3
testb
enterw
inc
mov
or
je
inc
cmpl
dec
stc
mov
xchg
or
fcompl
flds
cmpsl
fstps
or
lods
adc
dec
mov
and
adc
ficoml
pop
xchg
sub
iret
and
sbb
inc
clc
jbe
fneni(8087
outsl
or
roll
iret
in
push
mov
dec
hlt
int
sbb
pop
pop
pop
jo
dec
mov
enter
mov
pop
orl
ljmp
jb
pop
stos
xor
std
sbb
arpl
in
inc
mov
mov
pusha
out
xor
push
leave
leave
es
xorb
std
mov
out
mov
mov
add
pushf
mov
adc
mov
xchg
jne
jmp
aas
bnd
pop
lds
mov
enter
add
and
pop
pop
add
mov
call
xchg
jmp
jnp
mov
xchg
stos
stc
out
adc
adc
inc
in
add
inc
outsb
ja
insb
cwtl
inc
je
subl
inc
jae
dec
nop
jmp
mov
sahf
sahf
push
rorb
aaa
loop
sub
dec
out
pop
cmp
jae
mov
xchg
inc
pop
push
cmp
pop
add
ret
pop
sti
or
xor
lock
int3
xor
das
or
mov
mov
inc
std
cmp
je
lahf
ss
xchg
popf
push
cmc
scas
adc
lods
cmpsl
sub
shll
mov
jle
jg
sbb
mov
arpl
push
or
pop
aas
clc
mov
xor
jecxz
xchg
push
add
ror
dec
lret
outsb
adc
icebp
or
popf
xchg
pop
xor
das
jge
or
xor
pop
loopne
jb
aaa
xchg
fs
call
jbe
lock
and
jg
push
jnp
add
jl
loop
jbe
jnp
add
sub
dec
iret
push
and
cmpsb
out
outsb
fadds
sbb
jo
ss
rcr
cli
das
sbb
jns
sub
test
bound
sti
inc
push
push
loopne
mov
cmp
loope
add
mov
ds
outsl
xchg
negl
lcall
js
mov
mov
dec
lret
dec
cmp
push
ret
jmp
sarl
mov
scas
jnp
cltd
stos
push
in
xchg
dec
rclb
push
daa
mov
test
add
leave
shll
jmp
fwait
ret
dec
xor
pushf
pop
cmc
lret
mov
cltd
les
into
fucom
repz
shrb
lcall
cmc
dec
xor
adc
dec
adc
add
cmp
xchg
xchg
mov
mov
int3
pop
sbb
xor
xlat
lahf
ret
pushf
add
cld
repz
and
outsl
sbb
std
ds
mov
adc
sti
imul
ret
dec
dec
jge
mov
push
aaa
mov
mov
dec
aaa
push
sub
psraw
inc
out
mov
outsb
inc
enter
shr
lcall
mov
xchg
dec
jl
push
lret
inc
adc
fisubrs
cmc
mov
in
mov
add
sbb
test
cmp
xchg
push
shr
xor
andb
js
mov
in
scas
nop
adc
pushf
call
mov
jno
jmp
repnz
loop
inc
mov
std
xchg
sbb
sub
dec
les
bound
int3
xor
jns
mov
je
stos
sub
dec
cld
jl
sbb
xor
sahf
fisubs
push
push
sarl
jne
mov
int
outsl
iret
jp
push
inc
inc
fisubl
in
inc
push
push
mov
add
imul
loopne
fildll
call
bound
pop
lcall
add
loop
jmp
jp
xor
sbb
outsb
adc
fmul
movsb
push
sahf
push
mov
dec
push
xchg
int3
jnp
add
int
in
cmp
dec
ja
push
in
loope
hlt
ret
xorb
xchg
jl
aad
test
inc
mov
hlt
jb
and
test
pop
inc
xor
add
push
sbb
mov
and
ds
xor
or
ja
cli
adc
or
pusha
jl
out
add
out
lods
and
in
add
push
sub
aad
mov
mov
inc
sbb
and
mov
pop
shlb
jmp
rcrb
jb
xchg
in
mov
push
sub
and
out
sbb
inc
gs
arpl
in
inc
sbb
cmp
adcl
into
adc
test
shl
or
pushf
out
dec
data16
push
push
popa
inc
into
push
lods
into
fsubrs
iret
xor
mov
out
les
inc
sub
cmpsb
mov
scas
loop
mov
aas
mov
dec
aas
sub
mul
test
xor
rclb
cmp
orb
mov
add
inc
call
adc
inc
filds
or
pop
xor
add
cmpsl
das
xlat
dec
dec
test
jle,pn
cmp
jecxz
imul
mov
xchg
test
testb
leave
mov
jecxz
sub
cmp
call
inc
mov
jmp
xchg
mov
xor
repnz
xchg
adc
clc
pop
dec
stc
mov
xor
and
lods
adc
mov
clc
and
jne
xor
data16
mov
icebp
fst
jno
jns
sub
mov
and
fs
icebp
push
sbb
xchg
fisttpl
sbb
ret
adc
mov
testl
lahf
inc
ret
pop
mov
je
push
scas
pop
dec
data16
aas
fnsave
cs
insb
or
int
int3
repz
popl
bound
cltd
add
add
aas
cmp
push
lods
or
rcll
aas
ja
call
lcall
push
mov
and
push
xor
mov
jmp
cmp
outsb
out
shll
daa
in
lods
cmp
add
xlat
inc
mov
xor
cmpsb
fisttpll
pop
or
shlb
xor
xchg
jle
rcrb
mov
mov
test
push
stos
or
mov
adc
jnp
and
sbb
insl
cli
cmp
push
adc
ss
push
xor
stos
sbb
scas
or
int3
jnp
xor
in
call
push
xchg
xchg
mov
xlat
in
lret
sti
arpl
scas
cmp
lea
mov
int3
lcall
std
leave
cli
xchg
pop
add
imul
or
aad
outsb
pop
sbb
lods
pusha
or
sbb
xchg
arpl
cs
stc
and
ja
jg
dec
pop
xchg
dec
sub
push
leave
mov
ss
push
pop
add
leave
adc
call
test
imul
mov
stos
adc
dec
outsb
inc
adc
shlb
push
mov
out
test
iret
pushf
add
aas
sbb
clc
imul
lods
inc
stos
jl
xor
lret
dec
mov
inc
adc
inc
inc
mov
mov
popf
ljmp
loop
xchg
iret
xor
push
mov
xor
jg
push
fisubrs
push
jns
outsl
in
fsubrl
xor
push
pop
test
xor
repz
test
jns
lock
inc
push
out
sbb
out
sahf
or
push
and
mov
lahf
sub
push
bound
add
sbb
jo
jne
and
mov
xchg
jecxz
lcall
or
cmp
jmp
rcl
test
dec
dec
jae
sub
vpsrlq
out
mov
pop
repz
mov
jns
aam
or
shrb
jbe
add
xor
jecxz
push
adc
mov
sub
mov
push
daa
pop
or
or
mov
add
jb
aas
dec
xor
inc
dec
cmp
dec
out
jecxz
out
mov
cmp
xor
add
dec
in
outsl
iret
sbb
xor
shrl
add
push
cltd
or
stos
xchg
sahf
add
mov
inc
add
sub
mov
arpl
lds
ljmp
idivb
push
push
hlt
sub
arpl
cmp
out
dec
mov
ret
lock
ja,pn
lock
mov
inc
mov
imulb
mov
insl
jno
push
scas
divb
std
sbb
mov
jb
pop
xchg
cltd
mov
int
mov
aad
pop
xor
push
fildl
adc
adc
cltd
icebp
lds
in
push
jg
stos
mov
fdivrl
in
lock
repnz
add
mov
fdivr
daa
adc
mov
pextrw
jnp
sarb
jge
pop
jns
add
adc
push
jbe
sarb
xchg
push
scas
xchg
or
mov
lahf
jl
cmp
cli
out
jns
pop
out
dec
lcall
jge
mov
stc
push
out
sbbl
or
arpl
push
xor
sub
data16
jecxz
and
sbb
jbe
mov
jg
jmp
inc
cmp
iret
movsb
or
inc
fnstcw
inc
or
sub
and
out
jmp
loopne
and
fadd
mov
sbb
shlb
je
mov
popa
xchg
lds
divb
icebp
rcrl
jae
jg
loop,pt
xchg
in
data16
test
movsl
jmp
mov
sub
push
lods
push
mov
jmp
lock
push
xor
sub
fst
pop
mov
jl,pt
push
pop
rcrl
in
cmp
les
scas
pop
ret
in
stos
fstl
or
out
filds
orl
inc
sbb
pop
cmpsl
push
or
xchg
mov
mov
sahf
xchg
pop
sbb
adc
lods
iret
xor
mov
dec
imul
xor
pop
lds
stc
mov
adc
pusha
inc
in
addr16
pop
shlb
dec
inc
popa
bound
xchg
sarb
shll
aas
push
fsubrs
iret
into
push
dec
push
mov
in
addr16
sahf
test
out
push
or
push
sti
push
sbb
dec
jecxz
inc
jmp
inc
hlt
pop
dec
cltd
outsl
inc
or
mov
xor
xor
push
jo
sub
into
mov
jmp
push
pop
lcall
cmp
cbtw
es
xor
popa
or
jecxz
daa
push
aas
or
enter
pushf
and
call
dec
jne
mov
lret
imul
mov
rorl
inc
dec
xchg
dec
leave
push
fwait
add
nop
mov
movsb
inc
jae
mov
filds
or
rclb
lret
pop
sub
sahf
add
jbe
jns
jp
cmpsl
pop
pop
adc
outsl
popa
inc
cmp
dec
cltd
aam
inc
mov
pop
cmpsl
aad
add
in
sbb
xchg
xchg
popf
push
sub
nop
enter
xor
xchg
ds
mov
xchg
xor
shlb
inc
push
xorb
inc
lahf
push
xor
push
adc
jle
dec
xor
pop
sub
jl
lahf
add
fs
inc
jb
cmp
push
mov
and
pop
push
pushl
mov
jg
dec
test
jae
sbb
fsubrl
test
scas
dec
adc
xchg
movsl
inc
mov
jo
outsb
test
out
popa
pop
fimuls
mov
fwait
add
push
orl
xor
jo
loope
ret
mov
aaa
xor
or
mov
popa
sbb
addr16
ret
and
jl
nop
cmp
fnsave
or
xchg
dec
jne
sti
dec
lods
frstor
adc
in
cmp
ret
icebp
into
sbbl
pop
or
leave
mov
mov
lret
mov
pop
scas
mov
xchg
adcl
ret
test
push
inc
insl
stc
ja
dec
lea
out
xchg
jmp
lods
cmp
sub
out
lods
xchg
fisttpl
pop
mov
and
test
stc
pop
ljmp
xor
push
add
insl
push
sub
xchg
inc
inc
xor
cltd
cld
ljmp
cmpl
pop
fwait
pop
mov
xor
sbb
stc
push
or
xchg
pop
test
sub
xchg
mov
adc
mov
outsb
out
xchg
ljmp
stos
cmp
mov
mov
enter
adc
pushf
jo
cmp
sub
hlt
stc
in
dec
adc
mov
scas
mov
mov
xor
mov
jg
mov
jl
hlt
or
insb
add
sbb
js
push
xchg
enter
nop
or
loopne
sbb
je
xor
sbb
lret
mov
or
push
pop
loop
imul
mov
imul
rcl
aaa
je
pop
popa
fildl
pop
pusha
mov
mov
mov
lock
dec
jb
cmpsb
inc
fisubrl
mov
and
arpl
dec
push
mov
sbb
or
js
or
add
pop
push
inc
pop
adc
jb
ja
inc
pop
loop
stc
mov
fisubs
std
out
and
fldlg2
jge
je
xchg
scas
dec
push
iret
and
sbb
push
cli
xchg
scas
push
mov
push
packsswb
imul
in
mov
outsl
sbb
or
hlt
das
aaa
nop
inc
pop
dec
pusha
fdivrs
mov
out
sahf
js
loop
xchg
xor
fstpt
stos
into
mov
fstpl
repnz
mov
stos
arpl
repz
jbe
xchg
ss
aaa
das
in
jno
add
dec
bound
adc
sub
cld
adc
lret
pop
sub
int3
in
shlb
xchg
sub
jg
stc
mov
cmc
adc
jmp
pop
mull
mov
aaa
shrb
xor
lods
add
in
or
in
jns
pop
sbb
mov
shlb
mov
lcall
xchg
cmp
sbb
mov
push
or
lret
push
lcall
ljmp
or
jno
sti
jle
aas
and
push
xorl
addr16
filds
test
mov
sub
insl
mov
mov
push
inc
lret
inc
loope
cmp
in
xchg
es
mov
cmp
cs
xchg
jbe
nop
mov
movsb
jne
sbb
stos
hlt
in
nop/reserved
add
ret
mov
push
repz
cmp
call
daa
call
ljmp
fdivr
lret
jle
jns
adc
loop
fsts
xchg
ds
xchg
push
mov
cmp
inc
in
aam
dec
cmp
jecxz
mov
test
aad
mov
mov
imul
and
jno
xor
int
fbld
mov
mov
les
mov
add
inc
mov
xchg
out
push
and
jl
mov
ret
cwtl
in
push
jno
js
mov
push
add
aad
popa
sti
lods
xchg
int3
sti
fwait
mov
dec
add
test
push
jg
into
fstps
scas
and
rorb
test
inc
sub
addr16
mov
fdivr
pop
add
loopne
scas
lods
fsts
xor
out
imul
mov
jnp
xor
push
xor
and
pushf
mov
or
dec
and
shll
jecxz
mov
cmp
push
or
or
fildll
test
and
push
xlat
mov
mov
pop
dec
cltd
xchg
jl
and
cmp
sbb
out
mov
pop
cli
movsl
adc
jo
pushf
shlb
pop
ret
mov
and
push
mov
xchg
push
add
push
mov
xchg
mov
dec
and
inc
push
in
or
mov
jno
xchg
mov
addr16
fistpl
je
les
cmc
pop
dec
mov
rclb
repz
add
push
enter
or
movsl
adc
dec
mov
divb
sti
mov
mov
cmovo
lret
mov
add
aam
fisubrs
loop
xlat
lret
or
outsb
mov
data16
xchg
or
or
jl
mov
sbb
jg
push
or
dec
and
jb
in
cmp
enter
push
xor
pop
repnz
clc
loop
xor
mov
push
xchg
ja
and
inc
popa
lds
jmp
int3
fwait
xchg
fimuls
cltd
rorb
cld
sub
cmp
cmp
ficoml
lcall
mov
icebp
std
add
loop
imulb
mov
sbb
pop
push
arpl
xchg
sar
cld
jg
pop
ds
loopne
mov
test
punpcklwd
mov
frstor
addr16
sbb
xchg
lods
notl
sbb
rcr
sub
jge
mov
mov
and
loopne
mov
sbb
lods
xlat
xchg
ret
je
sub
loope
jne
mov
push
xchg
sbb
frstor
xchg
stos
test
scas
je
faddl
stos
dec
push
mov
ret
shr
lods
mov
push
cmpsb
movsl
jb
movq
sub
icebp
add
lock
inc
lock
inc
inc
mov
int3
sub
mov
insb
mov
repnz
insb
lret
or
stos
ja
popf
push
leave
xor
adc
nop
adc
notl
hlt
pop
cmp
pop
and
js
scas
lret
test
repnz
aad
and
movsb
push
je
or
inc
pop
daa
cmpsl
xchg
leave
pushf
dec
push
cmpsb
ret
push
push
xor
jne
mov
aam
fldenv
mov
push
mov
inc
cmp
mov
add
orl
mov
cmpsl
test
inc
clc
or
inc
repnz
inc
sub
fldcw
fcoml
push
dec
pusha
dec
dec
cli
sarl
aaa
add
dec
jae
and
out
adc
sti
mov
or
cmp
cmpsl
mov
movsl
roll
shlb
cmp
ret
imul
sbb
and
push
sub
rcl
pop
add
push
popf
jb
push
add
jno
loopne
add
jb
mov
inc
mov
je
mov
ds
xor
shrb
cltd
out
outsl
jp
cmc
sbb
or
and
les
fwait
aam
sti
ret
sahf
imul
xchg
sub
cli
cmp
ficomps
fs
aaa
xlat
test
adc
ss
cmp
lods
mov
jecxz
cmc
pop
inc
cltd
mov
push
addr16
mov
push
jp
adcb
push
mov
sbb
les
in
sub
and
dec
inc
fdivrl
imul
std
out
leave
pop
in
inc
out
nop
sbbl
xchg
sub
mov
mov
loope
add
popa
xchg
loope
imul
les
shrb
inc
sbb
mov
mov
push
pop
add
adc
arpl
outsl
hlt
xor
xchg
sub
push
pop
cmp
jl
xor
mov
inc
mov
add
sub
dec
xor
xchg
cltd
lods
pop
jbe
loop
xchg
test
dec
mov
push
sub
sbb
fsubr
and
mov
out
pop
fs
xchg
push
sub
xor
cs
int3
mov
push
ss
lods
lahf
xchg
sub
add
cltd
cmc
addb
fldl
out
aaa
ret
aam
daa
xchg
cmpsl
sub
mov
pusha
xchg
mov
stos
rcrl
inc
cmp
pop
rclb
ret
call
adc
adc
sub
dec
and
push
in
je
xor
dec
xchg
add
fstpl
sub
enter
inc
inc
insb
push
rclb
jecxz
xchg
mov
jno
das
xchg
popf
sbb
jmp
inc
dec
rorl
popf
cmpl
xor
mov
fs
pop
outsl
sub
cltd
and
cmpsl
push
mov
sbb
pop
adc
push
xchg
and
loope
dec
hlt
das
mov
cli
psrlw
mov
test
sbb
ja
ret
fildl
fwait
out
jg
loopne
dec
in
psubusw
push
std
repnz
and
and
icebp
outsl
push
mul
out
xor
mov
movsl
or
iret
jecxz
push
fstpl
adc
cltd
fs
imul
mov
xor
cmp
rol
sbb
push
jecxz
mov
and
adc
cmp
aaa
or
jnp
call
dec
movsb
push
leave
test
sub
cmp
movsl
and
fidivrs
mov
ret
test
push
pop
inc
or
xor
xchg
pop
mov
sbb
and
orb
xor
jecxz
mov
out
lea
pop
push
shl
scas
test
iret
mov
fiaddl
mov
daa
mov
pop
outsl
leave
mov
sbb
jp
shlb
cmp
into
and
pop
add
rol
fwait
pop
pushf
push
xchg
inc
cmp
xchg
pop
test
mov
mov
jbe
aad
movsb
fbstp
adc
enter
in
out
add
gs
mov
push
push
mov
jle
gs
adc
sub
pop
push
cmpsb
lret
jo
movsb
inc
jecxz
xchg
loop
xchg
inc
xor
outsl
push
jb
ds
movsl
cmp
add
inc
test
stos
cmp
adc
into
cs
test
int3
push
dec
into
xor
dec
out
sahf
jns,pt
inc
mov
aam
es
xor
ret
jne
cmp
dec
lods
test
mov
jno
lods
cmpsl
push
lret
scas
or
and
out
jg
pop
pop
xlat
dec
inc
pop
mov
test
xchg
das
push
push
scas
inc
popa
popf
cld
subl
jno,pn
mov
ret
jb
xor
out
sbbb
fwait
pusha
mov
add
int3
sub
call
test
inc
cld
xchg
xor
mov
sahf
sbb
pop
js
adc
jp
or
jbe
inc
aad
lea
cli
stos
mov
es
mov
jecxz
jge
iret
push
int3
add
mov
or
xchg
lds
sub
in
add
loop
das
sub
add
adc
cmp
jno
push
negb
adc
fnsave
mov
inc
mov
mov
pop
test
lret
je
jbe
or
jge
stc
add
jns
add
fcoml
je
jge
pop
xor
cmpsl
dec
mov
dec
loope
push
xor
pop
jae
mov
pop
ss
rcll
mov
sbb
sahf
and
fucomp
les
xor
je
xchg
push
xor
ds
ss
loopne
add
inc
jo
pop
add
aaa
ja
or
outsb
jae
xchg
xor
xchg
fisttpl
daa
push
and
adc
inc
xchg
sbb
dec
lods
xor
stos
cmp
fdivs
or
inc
or
inc
sbb
jp
ds
xchg
mov
cmp
loope
push
sbb
sbb
dec
das
lret
mov
scas
dec
ss
mov
popf
loop
mov
push
lock
add
jl
xor
mul
incb
jne
in
jae
pop
dec
xchg
insl
das
cwtl
xor
in
or
mov
push
cmpsb
jb
and
imul
and
xor
jmp
mov
xor
imul
mov
movsb
lods
subl
mov
jg
aaa
lds
push
or
inc
scas
fldenv
std
mov
mov
in
add
mov
ret
fsubr
or
or
imul
jnp
jnp
and
add
mov
lahf
mov
lret
dec
clc
repz
cmp
mov
cmp
std
sbb
xchg
dec
mov
pop
xlat
inc
iret
xor
push
xor
mov
adc
out
popa
cmp
popa
mov
popa
rclb
inc
pop
mov
fs
or
mov
pop
mov
popa
movsb
notb
xchg
into
adc
sub
sub
es
shlb
out
rolb
add
repnz
xchg
std
sbb
icebp
mov
test
gs
dec
mov
adc
out
outsb
dec
lock
mov
repnz
sahf
sbb
xor
orb
sarb
sbb
add
mov
inc
test
out
jne
in
mov
add
fsubs
jmp
sbb
loope
push
jp
lock
fwait
add
popa
bnd
jno
inc
and
fnstcw
test
adc
pop
cmpb
loope
jmp
insl
mov
mov
movsb
test
icebp
jecxz
lret
adc
xchg
mov
pop
outsb
inc
pop
insb
loopne
inc
orl
push
std
in
rorl
vphaddbd
scas
or
notb
push
xchg
or
mov
call
xchg
sbb
inc
sbb
repz
sahf
sahf
jmp
mov
fstpl
das
push
cmp
das
test
push
pop
jb
jb
inc
fdivp
xor
xor
imul
sub
cmp
mov
lods
jecxz
cmp
sbb
insl
and
dec
loopne
pop
call
mov
int
es
add
pop
ret
or
je
push
or
xor
subl
fisubs
pusha
and
add
mov
xchg
adc
aam
js
fstpl
imul
iret
mov
xchg
push
lret
pushf
push
ds
adc
cmpsb
sbb
and
mov
shrb
popf
mov
cmp
pusha
loop
in
xor
sub
mov
lahf
jge
fldt
inc
fists
loopne
cld
adc
adc
push
mov
cmp
and
xchg
cwtl
mov
js
pop
jl
jge
repnz
xor
adc
aas
pop
push
and
push
sbb
push
mov
inc
out
mov
outsl
mov
clc
adc
imul
bound
and
ret
sbb
out
aad
jmp
and
movsb
aas
and
addr16
sub
fiaddl
jno
sbb
inc
mov
iret
dec
jle
mov
stc
adc
int
dec
and
push
stc
sbb
xor
mov
les
and
cmc
testl
and
imul
in
xchg
cmpsb
push
movsl
rol
es
jb
cltd
sub
flds
jne
mov
push
shrl
sbb
adc
repz
fs
mov
pushf
jecxz
add
and
sub
fmul
mov
out
inc
sub
pushf
in
repz
xor
push
xchg
arpl
fcoml
fchs
and
insb
decl
into
notl
push
xchg
adc
xchg
mov
sbb
push
xchg
inc
sti
jb
sub
imul
movsl
xchg
mov
jae
pop
sub
lods
cmp
int3
cmp
mov
fbld
stos
cmpsl
dec
adc
out
mov
test
test
cmp
pushf
cmp
popaw
stc
divl
fdivrl
and
in
adc
rcl
add
pop
adc
jne
outsb
rcrl
lods
sub
lods
sarb
inc
ret
test
adc
pop
xlat
ljmp
push
stc
push
inc
mov
sub
in
add
jle
loope
jne
dec
popf
int3
adc
es
jns
shrb
xchg
push
loope
dec
adc
cmp
stos
xor
jns
mov
inc
nop
mov
dec
xor
jne
mov
push
lret
xchg
push
shlb
incl
or
pop
movsl
jg
lea
cli
sub
mov
fcoms
jns
cmpsb
mov
mov
xchg
aam
xor
cmpsl
adc
int3
sub
xchg
icebp
pop
xchg
ja,pn
xchg
popa
imul
adc
int
movsb
sbb
dec
lods
or
dec
into
push
inc
or
fcomps
push
nop
fnstsw
cmp
fmull
inc
lret
push
lods
xor
iret
stos
push
sbb
in
adcb
shr
inc
mov
jae
inc
pop
sbb
pop
popa
push
lcall
jae
inc
mov
add
clc
and
sub
cmpsb
xchg
jne
jmp
dec
cmp
mov
test
pop
or
frstor
sub
jno
mov
and
ja
punpckldq
aaa
xchg
shll
imul
test
lds
push
outsb
jo
in
sahf
push
lock
popa
dec
or
mov
shll
or
mov
and
pop
or
les
push
sbb
dec
movsl
outsl
mov
mov
push
push
and
enter
push
lahf
dec
mov
mov
sbb
push
repnz
add
mov
sbb
push
lea
mov
movsb
xchg
hlt
mul
enter
mov
js
push
xor
lahf
lret
and
jnp
es
xlat
leave
ficomps
pop
testl
scas
into
jno
inc
cmovae
sbbb
inc
xor
int3
icebp
imul
popa
xor
popf
arpl
jbe
clc
and
jp
mov
into
pop
loop
test
stc
inc
arpl
xchg
pop
lret
fdivrs
mov
pop
outsl
push
int3
repz
das
testl
js
movsb
jbe
sbb
add
fs
shll
sbb
daa
ret
add
jmp
jo
repz
sub
cmovle
jo
jnp
mov
lods
mov
add
and
mov
cmc
test
cltd
jecxz
jecxz
push
adc
sbb
inc
cmpsb
sahf
lea
ret
xchg
test
or
mov
sbb
mov
fs
push
dec
push
mov
cmp
or
jmp
stc
jmp
cmp
iret
or
mov
mov
mov
sbb
aam
cmp
jo
mov
insb
les
popf
fdivrs
ss
jb
pop
pop
cmpsl
add
adc
lods
sub
stos
dec
or
fistps
mov
jge
test
mov
inc
sbb
sub
dec
mov
cwtl
aaa
dec
mov
stos
mov
and
sub
inc
push
pusha
lret
aas
push
mov
ficoms
cmp
mov
mov
rolb
lods
adc
scas
shlb
popf
test
lret
jl
jle
adc
mov
inc
pop
mov
hlt
cltd
dec
jg
fmuls
xor
sarb
fdivrs
mov
sub
jle
fists
add
sub
out
xchg
ss
mov
clc
mov
test
sbb
stc
pop
jbe
scas
push
hlt
sbb
ss
pop
and
out
lock
sbb
out
add
and
push
push
outsb
xor
cmc
cmp
out
push
mov
lret
shr
mov
sbb
cmp
mov
xor
mov
sub
mov
dec
sbb
ja
jmp
dec
sub
lahf
fstpl
mov
mov
sbb
and
push
pop
xorl
cs
mov
subl
mov
and
and
lahf
dec
xor
out
ja
roll
mov
fcompl
mov
popa
repnz
mov
stos
and
mov
and
div
pop
in
pop
stc
popf
adc
in
test
or
inc
jl
lahf
pop
popf
imul
imul
adc
fistpl
sbb
cmp
pop
mov
inc
test
ja
xchg
mov
imul
dec
int3
pop
testb
sti
out
sbb
pop
xchg
insb
sbb
cwtl
jp
fwait
sub
ljmp
inc
out
xor
ljmp
movl
arpl
mov
fld
test
pushf
jmp
xchg
out
pop
jo
add
pop
test
xchg
nop
pop
in
mov
rorb
cwtl
mov
in
repz
inc
loopne
mov
mov
push
pop
sbb
pop
cmc
repz
or
daa
jns
in
jl
xchg
sub
mov
push
mov
add
sub
out
enter
adc
fmul
loope
xchg
adc
push
inc
ret
stos
mov
mov
cmpsl
fnstenv
sbb
sub
es
push
add
ljmp
ja
outsb
xlat
cmpsb
testl
pushf
stc
jbe
loop
lcall
shll
sbb
mov
lea
rorl
insb
aad
cli
inc
dec
or
lahf
data16
int
push
test
inc
cmp
movb
loopne
jl
inc
mov
jl
xor
xorb
aam
mov
push
stc
arpl
add
hlt
xchg
cltd
cmp
pop
fisubl
xlat
xor
sti
jo
mov
sub
xchg
cwtl
adc
lds
xchg
sbb
lret
lods
push
push
push
sbb
pusha
adc
and
lds
fwait
into
adc
out
cmp
jmp
movsl
in
fists
es
cltd
xor
adc
jg
sub
and
lahf
xor
pop
inc
inc
out
nop
or
push
xchg
nop
out
in
mov
ret
sub
int3
and
mov
loope
sub
stos
das
jge
call
pop
aas
in
dec
push
push
cmpsl
and
fildl
subl
leave
mov
loopne
rolb
cmp
das
lods
popa
xor
out
aas
movsl
jno
pusha
jo
iret
mov
gs
repz
cmp
mov
sarl
fcoms
or
pop
cld
xor
rcrb
push
mov
pushf
and
loopne
inc
aaa
xchg
xchg
dec
std
xchg
vmovss
jae
test
add
rcrb
push
outsb
pop
lea
sbbl
pop
mov
subl
stc
sbb
or
mov
cmc
scas
scas
sub
fisttpll
adc
pop
jg
in
mov
mov
xchg
ret
dec
xlat
pop
stos
pop
hlt
imul
pop
add
out
repnz
mov
ljmp
imul
xor
cmp
les
mov
mov
push
cmp
out
xchg
movsb
xchg
jns
pop
dec
fucomi
ljmp
adc
rcl
enter
xchg
pop
stos
sahf
fucomip
lret
pop
shr
mov
shl
sti
dec
or
push
xchg
add
inc
out
bound
adc
add
push
sbb
inc
int3
mov
and
mov
cmc
jae
cmp
std
int3
inc
mov
and
pop
loop
mov
popf
arpl
imul
adc
dec
mov
dec
xor
ret
add
add
repz
out
sub
int
je
adc
mov
lcall
xchg
out
in
dec
adc
jb
and
test
inc
and
mov
test
sbb
nop
pop
jno
and
add
test
loop
repnz
mov
fstpl
cld
adc
loope
pop
ret
xor
mov
xchg
loopne
cmpsl
cld
into
mov
cltd
sahf
hlt
and
pop
jle
inc
mov
cwtl
loope
or
xchg
or
xlat
icebp
ret
in
mov
and
add
in
imul
and
or
sbb
inc
cltd
je
test
mov
int3
and
mov
xchg
dec
shrb
adc
sti
pop
cmp
imul
inc
mov
packsswb
hlt
or
test
xor
xor
or
jp
add
pop
in
loop
fidivs
mov
xchg
jae
cmp
ja
inc
dec
loope
outsl
push
mov
movsb
xor
mov
cli
sub
mov
out
addr16
dec
dec
leave
jb
lcall
stos
clc
ljmp
xchg
ss
adcb
xor
add
jmp
mov
push
cmc
or
sub
nop
or
pop
mov
mov
mov
sbb
insb
inc
mov
fsubr
add
fistl
add
mov
cmp
mov
xchg
xchg
loop
cwtl
sub
scas
jmp
jnp
jecxz
movsb
xor
das
pop
in
vcvtss2si
in
xor
sahf
js
or
jno
lea
cld
lcall
outsl
xor
fxam
xlat
push
popf
jge
cmpsb
fwait
jmp
testl
pushf
dec
aam
loop
adc
mov
lahf
dec
rolb
stos
dec
das
push
xchg
in
mov
sub
push
dec
inc
in
mov
cmpsb
into
inc
outsl
sbb
jnp
sti
xchg
dec
sarb
mov
dec
mov
cs
sub
outsb
or
sbb
add
mov
test
mov
pop
frstor
scas
cmpsl
push
mov
notb
pop
sbb
mov
out
mov
cmpsl
ret
sub
out
push
outsb
insl
notw
xchg
ja
shl
cmpsb
sti
test
cli
bound
push
cwtl
xchg
dec
orl
lahf
inc
jecxz
es
pmulhuw
ja
mov
xor
icebp
adc
push
mov
rclb
adc
mov
xchg
add
out
push
cmpsb
repz
incb
push
adc
xchg
lds
pop
cs
out
aad
sti
popf
mov
push
jno
cmp
cli
add
aad
or
inc
cwtl
lret
in
fisttps
add
inc
mov
int3
xchg
dec
ss
sub
push
clc
lahf
pop
mov
mov
mov
or
jmp
mov
inc
cli
push
inc
idivl
push
loop
push
cmp
pop
mov
shll
xchg
dec
mov
push
push
pushf
mov
mov
adc
jecxz
mov
jp
sti
and
ret
movsl
je
fdivrl
nop
mov
xchg
fistpll
scas
and
in
mov
je
int
gs
mov
test
in
dec
fadds
cmp
mov
js
pop
dec
and
daa
xor
popf
test
xor
or
stc
sbb
inc
adcb
push
aam
popf
sbbb
scas
shrb
shrb
sub
sbb
mov
mov
fs
jb
push
movsb
bound
test
pushf
ss
insb
jge
insl
jecxz
xor
adc
shl
or
xchg
pop
mov
xchg
loop
dec
cmp
test
inc
fdivrl
jp
call
in
jbe
mov
in
mov
sbb
mov
mov
xor
inc
push
and
in
popf
mov
xchg
fdivp
hlt
leave
xchg
clc
push
mov
jne
mov
mov
mov
add
fs
and
push
mov
cld
addl
lret
jbe
popf
xchg
pop
xchg
in
decl
sub
cwtl
lret
repnz
or
mov
jg
pop
pop
sbb
sub
sbb
pop
adc
mov
sub
in
or
dec
cmp
and
adc
sti
pop
ss
out
sbb
push
mov
popf
mov
pop
push
fsts
ret
fs
xchg
or
andl
fimull
movsbl
add
icebp
push
mov
cmp
int
and
mov
adc
aad
or
or
insl
push
lret
mov
cs
sub
cmpl
xchg
mov
popf
mov
dec
sub
test
add
cmp
adc
cmp
jmp
mov
out
mov
sbb
push
mov
lret
movl
popa
jp
jp
sub
push
pop
pop
jno
stc
test
bound
xchg
inc
mov
je
mov
mov
lcall
leave
dec
mov
inc
ds
data16
leave
mov
and
not
or
lcall
out
pop
iret
fwait
push
xor
mov
pop
test
push
ret
sbb
fldl
push
outsb
push
jecxz
movb
cli
stos
stos
out
call
mov
inc
shrl
cmp
push
pusha
mov
mov
je
push
cli
mov
add
xchg
push
mov
mov
addl
cli
and
inc
negb
testb
push
cmpsl
pusha
insb
add
mov
mov
ljmp
pushf
addr16
fs
sub
xchg
adc
ds
in
mov
or
dec
add
mov
imul
xchg
dec
sbb
xlat
in
popa
sbb
stos
push
mov
daa
popa
cmpb
xor
sbb
ret
xor
pop
sbb
push
pop
xchg
ss
inc
mov
es
push
push
sbb
lahf
jns
xchg
pushl
test
sbb
jge
add
int3
inc
stc
or
outsl
cmpsl
jg
je
outsl
mov
dec
push
mov
in
lret
pop
in
das
loopne
adc
andl
cwtl
adc
xchg
into
ds
push
xor
mov
xchg
cs
pop
js
js
mov
sub
push
cmp
icebp
fwait
ror
dec
and
push
aas
stc
xchg
adc
int3
add
mov
mov
mov
sbbl
mov
fcmovnbe
sub
aaa
mov
test
mov
jae
in
sahf
dec
or
call
data16
dec
jo
mov
pop
dec
sbb
jnp
xchg
jl
or
fmul
sub
mov
adc
stos
leave
jno
pop
enter
call
sbb
pop
mov
inc
pusha
jmp
dec
inc
push
push
dec
and
insb
fstl
pusha
popa
or
push
nop
mov
and
lcall
cld
outsl
lock
push
ret
es
cmpsb
ss
ja
xchg
pop
orb
orl
mov
inc
push
mov
daa
pop
xchg
inc
lret
add
pop
leave
mov
xchg
loop
xlat
xor
shll
int3
push
adc
outsb
ret
sub
std
dec
push
testb
dec
jo
repnz
bound
inc
jo
inc
add
test
popa
fildl
and
and
lods
scas
xor
das
mov
std
sbb
and
imul
and
sbb
lds
shl
jno
xor
cs
std
clc
add
xchg
xchg
addl
pop
sarb
outsl
leave
mull
mov
inc
lcall
arpl
fistpll
dec
cmp
stc
je
dec
filds
push
xchg
adc
mov
xor
ret
out
loop
mov
push
sbb
fcomps
jae
jne
cmpb
adc
jno,pn
xor
adc
es
lods
cmp
mov
push
inc
pop
add
sbb
fstpl
dec
in
ja
les
mov
int
pop
pop
mov
pop
int
rcll
loopne
push
pop
dec
fldcw
pop
jge
insb
loop
inc
clc
fldl
xlat
jge
sub
adc
ja
ds
imul
mov
xor
pop
jg
jbe
ds
std
aas
cmpsl
or
xchg
pop
inc
leave
int3
pop
adc
fsubrp
lcall
inc
enter
inc
mov
adc
sbbl
dec
lret
subl
aad
cmp
mov
js
scas
push
pop
lcall
scas
push
dec
xchg
aam
cmpsl
xchg
pop
cmp
mov
jbe
add
cmp
mov
fldl
fisttpl
push
and
mov
js
sbb
xchg
dec
pushf
test
dec
mov
inc
jecxz
dec
xchg
clc
xchg
sub
aad
call
cmp
popa
or
repz
repnz
jle
mov
cli
mov
shrb
push
jmp
jnp
fstps
mov
mov
lock
xor
sbb
pop
addr16
cmp
rcl
sbb
add
lahf
add
jp
jbe
ljmp
inc
or
pop
sbb
sub
dec
sub
arpl
mov
ror
lahf
lock
icebp
mov
jns
sub
out
jbe
ret
mov
adc
add
and
pop
mov
mov
mov
pop
push
dec
sbb
inc
mov
add
add
xchg
stc
jbe
xchg
adc
push
dec
pop
cmp
lock
ret
shll
xchg
mov
hlt
mov
lea
test
jnp
repnz
mov
dec
cmpsl
call
sbb
pop
mov
or
xchg
cmc
iret
clc
mov
out
cmpsl
lret
dec
xchg
cld
adc
scas
push
adc
lahf
inc
into
xlat
add
xchg
icebp
dec
mov
lods
sbb
cmp
sub
rcr
xor
jp
in
jae
cmp
mov
pop
xchg
imul
xchg
xor
pusha
xchg
mov
negb
lret
repnz
mov
movsb
pop
inc
andl
xchg
mov
mov
loope
mov
movsb
imul
out
roll
pop
push
sbb
cmp
fistl
inc
fwait
leave
push
insb
pop
movb
ja
pop
stos
adc
inc
test
scas
lock
mov
and
in
stc
popa
dec
shlb
sub
sbb
mov
dec
popf
dec
cmp
cld
mov
pshufw
jp
data16
inc
pusha
aaa
sbb
jge
mov
jnp
adc
mov
je
movsl
mov
sbb
ret
add
pop
decl
test
xchg
push
lds
idivb
adc
imul
xchg
push
mov
inc
imul
mov
sub
xchg
out
pop
lret
ret
ljmp
mov
lds
jnp
pop
pop
aam
or
cld
cmp
xchg
nop
adcl
cmp
xchg
add
fimull
insb
hlt
dec
gs
cld
cli
cmp
lock
and
xor
jae
push
repnz
fcompl
daa
clc
enter
dec
and
add
outsl
add
xor
leave
push
aaa
pop
mov
and
data16
mov
lods
and
test
push
mov
cmc
push
out
push
daa
mov
sarb
scas
cmpsl
jno
mov
cmc
fldcw
mov
sti
xor
mov
cld
aam
out
lret
ds
adc
push
out
pop
mul
xchg
out
ljmp
stos
test
xor
out
dec
and
mov
bound
ret
aad
push
adc
int3
sbb
xchg
or
and
imul
dec
sbb
jnp
pusha
cmp
call
pop
or
dec
dec
sti
fwait
stos
addr16
pop
adc
shlb
mov
hlt
or
shlb
pusha
ljmp
jle
inc
pop
sub
push
rorl
popf
and
ljmp
int
dec
jno
leave
imul
out
inc
jecxz
mov
shl
leave
or
add
lock
push
out
fs
mov
push
shr
push
dec
jns
les
cmp
cmp
jmp
lods
rcll
lahf
mulb
shrb
dec
mov
mull
mov
dec
pushf
in
xor
and
and
jl
mov
push
in
adc
jg
xor
nop
sarl
inc
and
loop
mov
xor
insb
mov
movsb
push
xlat
rol
and
mov
inc
and
nop
dec
mov
lods
xor
push
dec
push
testb
cmpsb
jae
xchg
xor
and
mov
adc
dec
push
mov
xor
lret
cmpsb
cmp
jp
push
push
mov
push
in
push
shlb
pop
xor
pop
pop
or
jne
sub
aad
pushf
repnz
lods
popf
shrb
rcll
mov
add
xor
jo
or
pop
popa
add
xchg
dec
mov
jae
xor
sub
fwait
dec
xchg
ss
cli
fstpl
sbb
mov
sbb
sub
lahf
jne
push
dec
imul
mov
mov
xlat
sbb
das
movsb
sub
or
sub
pop
ret
lret
popa
popa
lods
push
insl
stc
pop
mov
andb
std
pop
rcrb
outsl
mov
jecxz
add
rcl
insb
and
jbe
add
lahf
pop
imul
mov
jmp
add
or
and
leave
notb
xor
lods
cmpsb
fistpl
or
stos
mov
shr
outsb
pop
ret
pop
push
xor
aad
ds
icebp
pushf
stos
cld
xlat
dec
rcrl
jle
idivb
mov
push
fcoml
adc
cwtl
sbb
xor
stos
pop
push
adc
push
fnstcw
mov
xor
push
or
pop
cmpsb
scas
dec
mov
mov
je
cli
mov
mov
push
jle
cltd
addr16
push
inc
scas
mov
les
imul
mov
and
sub
dec
and
dec
cmpsl
mov
data16
mov
mov
add
js
cmp
and
xchg
into
cltd
adc
ja
cmp
lret
jo
call
ja
in
iret
and
push
push
jo
and
push
push
pop
in
sbb
push
xor
sbb
jmp
aaa
xchg
adcb
sub
push
inc
outsb
scas
inc
lds
bnd
mov
add
and
decl
int3
jb
lret
cs
fcmovb
lods
ds
vfmsub213ps
mov
flds
orl
push
or
xor
mov
jmp
inc
movsl
pop
jb
mov
fbstp
arpl
stc
insb
or
jp
mov
and
popf
or
mov
mov
pop
rolb
mov
jns
loop
hlt
mov
ret
add
stos
xchg
xor
out
ficomps
adc
movsb
ljmp
xchg
sbb
imul
sub
hlt
mov
imul
pop
pop
push
or
out
lods
mov
loopne
divl
insl
or
rcll
mov
xor
stc
repz
out
mov
scas
and
stos
ljmp
test
jo
pop
scas
push
mov
push
xor
arpl
xchg
loope
and
push
repz
movsb
xchg
outsb
lock
ds
loop
mov
fcomi
ljmp
ds
xchg
push
xchg
in
jp
dec
outsl
addr16
push
mov
fadd
bound
add
les
cmp
push
add
sbb
mov
cmp
out
imul
out
push
lock
sub
stc
icebp
hlt
imul
mov
mov
mov
test
popf
pop
mov
pusha
fldl
and
jg
pop
sub
movsl
stos
out
cld
mov
sbb
repz
or
xchg
push
inc
cmp
inc
add
orl
daa
mov
scas
movsb
stos
pop
jb
hlt
shl
jne
ficoml
pop
lret
into
bound
cwtl
xchg
test
ss
adc
call
test
mov
push
jb
add
movl
inc
stos
adc
xor
fimuls
sbb
pop
pusha
xchg
cmp
pop
ljmp
pop
sub
iret
mov
sub
xor
sub
xor
leave
icebp
cld
jb
roll
cmp
sbb
push
jo
mov
mov
dec
les
pusha
add
insb
mov
fs
pusha
les
cmpsb
in
shlb
sbb
cmp
inc
test
int3
and
jge
mov
xor
sahf
out
cmp
dec
in
push
ss
xchg
gs
pop
jl
pop
mov
scas
dec
or
push
ds
mov
mov
call
cmp
sub
sbb
mov
nop
testl
mov
pop
mov
xchg
dec
adc
mov
sub
ficoml
stos
jo
lret
xchg
add
adc
fs
clc
int
jbe
lea
fstpl
sti
outsb
ja
inc
push
jnp
pop
jbe
movsl
or
push
mov
je
xchg
sbb
push
mov
or
arpl
inc
xor
insb
jne
test
xor
push
sub
inc
ja
sub
mov
stc
fs
push
push
mov
stc
daa
pusha
les
sub
loop
lock
jnp
test
int3
in
jp
inc
pusha
sahf
cld
mov
cmp
cltd
sub
les
int3
das
icebp
fstl
mov
lods
or
mov
pop
mov
xor
in
ljmp
add
cmp
ret
ja
push
and
cld
lret
ret
sub
stos
or
jp
mov
sti
mov
mov
sub
loope
mov
mov
jb
lret
push
fwait
cs
mov
add
aam
lahf
iret
rorl
jle
fnstenv
pop
in
cmpsb
xor
out
push
gs
push
data16
stc
inc
scas
js
js
dec
mov
mov
mov
jae
push
jno
loop
lret
cs
sub
and
imul
adc
hlt
or
icebp
pop
loope
int
arpl
jl
push
imul
loopne
in
push
pop
dec
mov
fs
cmpsl
push
xor
divb
add
out
in
and
inc
push
pop
and
shll
pop
xor
cmp
ljmp
xor
push
inc
hlt
movsb
push
pop
out
and
jmp
jmp
push
pop
in
jne
mov
push
into
sub
jecxz
lea
mov
mov
cmc
cmp
mov
pop
pop
lret
dec
xor
nopl
jp
inc
lea
or
sbb
adc
lods
les
fscale
or
lea
into
int3
mov
shrb
jo
jae
ds
lock
jbe
cmp
add
inc
push
mov
pop
add
lcall
xor
movsl
dec
sbb
bound
adc
mov
add
loopne
into
addr16
push
or
mull
inc
shll
movsl
push
jns
push
sbb
jns
jns
fdivs
pop
cmp
ja
aad
decl
stos
mov
add
push
sub
pop
mov
ljmp
loope
add
cld
adcl
mov
lods
mov
pushf
add
roll
into
xor
lods
sbb
and
js
pop
popf
mov
push
cli
std
push
and
icebp
cli
jg
or
repnz
jbe
push
shlb
adc
push
jmp
lock
mov
sbb
insb
sarl
jns
pushl
jge
mov
std
inc
sti
in
clc
and
adc
mulb
bound
mov
add
sti
js
rcrl
mov
fistl
fistpll
jecxz
fs
fs
xchg
pop
and
mov
pop
ja
adc
bt
xor
loopne
xorl
lods
scas
mov
inc
sbbb
jg
xchg
push
or
lods
mov
add
test
jp
jne
xchg
lods
push
popf
sti
out
push
mov
mov
jmp
pusha
nop
sbb
int3
sbb
dec
jl
js
push
dec
addr16
outsb
lock
lods
jmp
mov
mov
iret
adc
push
js
sarl
nop
imulb
imul
sti
xor
sbb
das
rcrl
fs
cmp
inc
jne
test
outsl
adc
rolb
ljmp
inc
lret
cltd
push
xchg
xor
xchg
arpl
popf
mov
sub
jne
jl
adc
sti
int3
cmp
or
cmc
mov
mov
ret
shl
lods
adc
inc
ret
and
in
gs
cmp
mov
mov
outsl
dec
leave
dec
push
cmp
dec
mov
jecxz
or
and
insb
adcb
sub
stc
insb
dec
or
xchg
int3
xchg
flds
pop
lods
mov
mov
adc
pop
jmp
mov
sti
adc
mov
addr16
mov
js
daa
mov
xor
pop
outsl
cmpsl
xor
mov
mov
sub
cmp
jmp
je
aaa
and
xchg
inc
scas
pop
fstps
mov
sub
icebp
add
dec
in
jmp
clc
ret
jl
ljmp
pusha
or
push
ja
adc
ja
es
sub
inc
sbb
jb
cld
enter
adc
mov
cltd
sbbb
out
add
fcompl
mov
cmc
loop
and
hlt
push
cmpsb
push
jp
pusha
js
out
push
mov
mov
dec
shrb
leave
movsb
or
sub
int3
test
mov
sub
sub
fsts
iret
pop
pop
push
or
sub
push
dec
add
test
pop
dec
push
movsb
or
mov
pop
insb
pop
jae
lock
push
das
mov
jae
test
xchg
cmp
sbb
dec
add
xchg
in
sub
adc
inc
stos
imul
hlt
dec
add
loop
pop
jbe
decl
enter
cmp
cwtl
jne
stos
mov
and
sahf
ret
out
cwtl
stos
push
in
xor
roll
lock
add
mov
cmpsb
pop
inc
pop
shll
xchg
mov
inc
call
cld
push
aad
loop
sti
ja
add
idiv
out
xchg
stos
xlat
sbb
in
mov
mov
mov
xchg
inc
pop
mov
inc
or
push
not
push
int
aaa
cld
fcompl
inc
push
stos
lds
xchg
lods
cld
dec
aad
ret
adc
pop
or
icebp
adc
repnz
in
push
jae
sbb
push
bound
fnsave
push
nop
add
fistpll
rolb
aaa
xor
leave
xchg
mov
mov
movsl
mov
mov
add
jnp
pop
aaa
fdivrl
dec
inc
aad
adc
loope
mov
xor
mov
insl
cmp
lods
xor
ret
subb
xchg
mov
push
fbld
loopne
add
int
pop
int
inc
enter
add
jecxz
cmp
addr16
or
jae
cmp
call
xchg
mov
xchg
scas
mov
sub
xor
cmc
adc
pop
pop
cmc
sbbb
in
push
js
and
mov
sahf
call
jno
das
fcomi
iret
popa
push
jnp
mov
mov
or
xchg
push
push
xlat
cltd
out
and
push
sbb
dec
insb
or
pushf
pushf
mov
lahf
or
loopne
out
cmp
sbb
push
push
arpl
xor
daa
rcll
out
pushl
push
pop
in
mov
push
mov
in
imul
xchg
ret
mov
out
add
jmp
push
lods
mov
mov
push
sbb
sbb
adc
jg
pop
ss
scas
sbb
cmp
pop
adc
inc
mov
jecxz
mov
lods
sub
sbb
or
pop
lcall
mov
outsl
dec
mov
shlb
adc
dec
lods
repnz
push
call
stc
aaa
mov
aas
xor
loop
mov
dec
fisubrl
lret
lcall
pop
xor
sbb
xchg
loope
enter
test
incb
dec
mov
or
andl
mov
es
push
aaa
lods
xor
cli
pop
or
cmp
sub
jge
and
sub
jae
sub
mov
push
push
sbb
dec
and
dec
cmp
xor
xchg
lcall
xchg
inc
stos
jecxz
push
pop
pop
repnz
fbstp
pushf
fidivrs
xlat
push
push
loopne
pop
push
in
inc
rol
xor
jg
rorl
shrl
mul
mov
mov
enter
test
push
push
and
xchg
xchg
mov
in
addr16
outsb
in
scas
mov
jmp
lods
lcall
call
cmpsb
push
sbb
pop
test
cwtl
in
add
lea
pop
aad
popf
jb
add
push
dec
adc
sahf
fstpt
das
mov
adc
lahf
scas
dec
or
cmp
pshufw
js
insl
arpl
sbb
fs
xlat
xor
mov
push
or
pop
imul
hlt
repnz
or
ss
ficomps
aad
cltd
sbb
rorl
cwtl
lret
dec
sub
addl
adc
cli
dec
cli
fcomip
xor
dec
sub
mov
fstl
movsl
mov
xor
shll
jno
lcall
dec
mov
popa
inc
push
ret
and
lcall
inc
mov
call
mov
in
add
ja
in
rclb
pop
mov
adc
or
sbb
cmpl
lret
loop
pop
mov
adc
adc
rcr
mov
fdivrl
out
jbe
ss
decb
pop
dec
je
xor
add
jae
in
xor
mov
add
add
sbb
sar
enter
xchg
out
jae
mov
mov
je
inc
jg
inc
add
inc
inc
int3
push
inc
aaa
xchg
insb
loop
insb
scas
les
cmpsl
pop
mov
mov
repnz
push
movl
pop
subb
sub
push
push
nop
xchg
xor
mov
das
shlb
cltd
aam
loope
xor
or
xchg
daa
cwtl
cmp
int3
js
cs
stc
or
sbb
sbb
imul
jb
xlat
call
aam
mov
or
sub
mov
xchg
adc
enter
add
mov
mov
les
adc
jns
push
in
std
mov
push
jb
cld
sub
pop
inc
xchg
aas
ret
ret
push
cmc
cmc
mov
cmc
jne
add
mov
lcall
dec
pop
pop
in
jmp
xor
add
daa
mov
das
xor
adcb
mov
push
outsl
lds
xchg
mov
push
push
clc
jl
or
push
mov
mov
pop
mov
push
sub
shlb
push
push
mov
cld
sub
xcrypt-cfb
cmpsl
loope
cmc
cld
arpl
sub
mov
daa
sub
outsl
sbb
and
xor
xlat
pmaxsw
call
popa
iret
je
addr16
shr
mov
rdtsc
pop
mov
pop
fldcw
dec
jp
push
insl
mov
pop
das
xor
sbb
fwait
mov
imul
xor
ljmp
sbb
sub
pop
dec
push
lods
push
movsb
addr16
loopne
out
mov
adc
inc
ljmp
jne
pusha
push
xchg
mov
sub
cld
mov
out
push
rol
cmp
mov
scas
imul
and
pop
mov
imul
xor
inc
add
mov
iret
je
push
jns
xor
movw
neg
movsl
test
xor
repz
push
sbb
pop
movl
out
and
stos
xchg
or
sbbl
xor
mov
cmp
dec
dec
xorb
call
in
bound
cmc
cmp
dec
int3
iret
and
jl
jecxz
ret
inc
push
pop
mov
incb
clc
divb
aad
add
xchg
mov
pop
pusha
jecxz
mov
inc
xlat
mov
push
test
pop
and
lods
adc
out
lock
cld
cmp
pop
leave
outsl
lahf
and
pushf
rcll
dec
xchg
cmp
xor
das
xor
imul
into
mov
lret
shl
mov
xchg
mov
jne,pn
fcomps
out
rcll
jecxz
xchg
fs
fstps
inc
mov
in
fmul
xchg
ljmp
pop
mov
ror
movsl
pushf
out
ret
add
inc
and
cmpl
and
push
repz
inc
pop
cltd
cmp
cmp
je
ss
popa
xchg
pop
pop
push
lahf
cmp
decl
enter
std
iret
jnp
int
lock
testb
stos
pop
repz
scas
add
test
mov
stos
jl
dec
repz
cmpb
iret
je
test
mov
js
cltd
mov
out
fistps
stos
pop
push
imul
in
sub
arpl
adc
arpl
jno
xor
jno
xor
xchg
negl
adc
aas
lcall
orb
ds
out
cwtl
leave
cmp
roll
xor
push
sub
repz
clc
jo
sbbb
int3
adc
mov
jno
lds
mov
xor
or
stc
movsb
jmp
add
rcrb
daa
scas
mov
dec
loopne
push
push
push
cli
in
add
cltd
xor
cvtps2pd
mov
pop
xor
mov
int
sbb
jmp
imul
call
pop
out
dec
pop
or
push
jae
inc
arpl
mov
mov
movsl
push
in
out
xor
pop
push
cmpsl
shll
imul
cltd
das
cmp
xchg
push
add
testb
imul
cmp
sbb
loopne
out
insl
xor
xchg
outsl
lds
test
aad
fldl
dec
jnp
lret
mov
notb
or
cwtl
mov
fs
loop
mov
mov
stos
lock
movsl
fsub
in
fs
dec
jmp
push
mov
pop
js
mov
add
mov
jle
add
pop
les
inc
jle
mov
inc
xchg
loop
xor
fstpl
mov
sahf
mov
add
push
mov
mov
sub
xchg
mov
dec
std
stos
xchg
cwtl
mov
mov
dec
xchg
filds
pushf
scas
inc
lock
fsubl
xlat
in
mov
cs
test
xor
jnp
push
movsb
mov
xchg
dec
shr
orb
mov
inc
adc
cmpsl
lea
and
pop
jg
dec
or
arpl
dec
stc
mov
jg
push
ljmp
sub
out
mov
lret
cld
ja
cwtl
jmp
xor
cmp
repnz
lock
js,pn
fdivs
and
leave
in
call
dec
sarl
call
iret
sub
or
xchg
fsubr
dec
or
cwtl
dec
mov
inc
and
icebp
jge
imul
adc
nop
movsl
in
add
ficoml
fs
and
add
push
pushf
adc
adc
gs
enter
dec
inc
inc
jns
out
stos
pushf
loope
sbb
push
aad
pop
cmp
cmp
mov
into
bound
cmc
daa
xchg
jge
push
call
jmp
fbld
push
scas
push
leave
rcrl
xchg
cltd
scas
out
ds
mov
loope
xor
pop
fwait
push
jns
cmp
add
and
add
or
js
cmp
iret
jmp
adc
bound
mov
mov
in
and
out
dec
add
out
pop
xchg
inc
adcb
inc
xchg
dec
scas
in
lock
sbb
icebp
mov
mov
std
aaa
ret
add
xchg
rolb
ljmp
lea
pop
ja
idivl
pop
int
sbb
jbe
arpl
bound
pop
push
mov
sub
je
scas
mov
in
adc
addr16
jecxz
call
in
push
fisubs
mov
dec
mov
jg
push
and
add
sub
loope
mov
stos
push
mov
orl
rclb
nop
xchg
adc
push
call
aaa
dec
jmp
int3
icebp
xchg
mov
mov
pop
stos
ja
icebp
jmp
mov
dec
in
movsb
push
pop
pop
jl
dec
jnp
cltd
cli
adc
jl
sub
mov
sbb
xchg
add
sub
sub
xor
shrl
ret
scas
and
insl
and
dec
pop
jecxz
lret
repnz
or
push
imul
jb
insb
add
xchg
shrb
pop
out
mov
icebp
loopne
stos
dec
sbb
cld
aam
cli
lock
icebp
pop
push
mov
out
ss
sbb
bound
jae
jno
sub
jbe
fnop
mov
dec
jnp
push
bound
xchg
mov
test
dec
xor
xor
int
in
je
nop
cmp
inc
repnz
iret
dec
lods
cmpsl
mov
and
sub
call
jae
mov
pop
inc
push
pop
test
sub
test
imul
icebp
sub
xor
aam
aas
cmpl
and
pop
push
mov
fwait
adc
mov
adc
sub
push
fidivs
sbb
aam
or
test
push
fistpl
div
pop
jl
xchg
mov
mov
mov
pop
lea
pop
adc
filds
add
lds
loop
inc
insl
mov
loop
mov
xchg
pop
into
test
imul
mov
mov
mov
push
sbb
daa
fistps
in
leave
popa
incb
repnz
jg
jo
lahf
add
out
sar
sbb
adc
sub
xchg
push
mov
jg
stos
sub
insl
in
sub
xor
in
push
sub
or
enter
and
jmp
and
jl
movsb
mov
mov
call
mov
pop
mov
and
xchg
dec
or
dec
call
iret
inc
ret
jb
fdivrs
cmpsb
in
push
xor
and
pop
lret
sbb
orb
iret
jb
xchg
adcl
cmpsl
movsb
add
mov
movsl
jbe
pop
adc
inc
fisttps
xor
pushf
xchg
sub
mov
aam
jno
arpl
dec
mov
jecxz
or
pop
xchg
xchg
stos
iret
or
and
mov
and
inc
enter
adc
aaa
pushf
xor
push
lcall
repz
xchg
icebp
loop
scas
aad
nop
imulb
fbstp
mov
dec
mov
mov
lret
mov
roll
xor
push
jp
insb
mov
imul
sti
dec
lret
sbb
inc
in
inc
or
ret
jl
fdivs
and
jo
adc
lds
aam
and
push
jge
dec
dec
or
rclb
call
clc
jl
adc
add
xor
adc
adc
add
dec
inc
mov
sbb
out
fs
ret
hlt
cmpsl
xor
mov
adcl
ss
in
jmp
add
push
inc
repnz
mov
inc
das
cmp
lods
out
pop
xchg
lock
shll
jns
mov
add
jp
nop
mov
adc
mov
push
pop
push
lods
pop
stos
and
add
push
pop
mov
pop
imul
gs
mov
jecxz
inc
out
push
or
imul
xor
push
pop
pop
pop
cld
shll
rcrl
ret
jo
loop
rcl
out
and
sbb
push
iret
inc
mov
or
sbb
pop
cmp
mov
inc
pop
popf
cmpl
cmp
dec
sti
mov
call
pusha
popa
xor
xchg
fsubrs
inc
xor
jg
push
xchg
imul
push
add
sbb
cmp
fistpll
repz
loope
adc
or
out
pop
out
rcrl
push
add
mov
and
and
les
mov
call
sti
jns
stos
lods
mov
lcall
pop
int3
sahf
inc
dec
imul
insl
cmpl
cmpsl
mov
stc
mov
mov
fmull
loope
cmp
push
and
aam
mov
outsl
jnp
push
sub
addl
add
mov
imul
sahf
aad
pop
or
mov
add
ss
gs
in
inc
sub
pop
mov
cs
xlat
rcrl
ja
push
xchg
lea
jp
add
outsb
imul
jno
lds
sbb
mov
jns
sarb
adc
je
xor
loope
mov
push
ret
dec
or
lock
xchg
adc
add
mov
iret
and
mov
mov
dec
je
xor
push
test
sub
ret
dec
inc
cmp
and
sub
jno
add
jns
gs
test
xchg
gs
shll
adc
mov
jnp
add
inc
gs
jo,pn
sbb
test
lcall
andb
xor
sbb
adc
mov
aad
fisubl
arpl
faddl
ljmp
lcall
jge
and
cld
xor
cmp
mov
sub
je
imul
sub
sub
mov
into
mov
sti
daa
scas
mov
je
aaa
pop
mov
add
add
and
fistl
pop
lock
rcrl
scas
fistl
rolb
addr16
sub
hlt
stos
xchg
cltd
xchg
les
cmp
gs
movsb
sti
add
and
jns
sahf
mov
mov
cs
adc
adc
repz
or
mov
cmpsb
leave
test
out
xchg
lahf
dec
andl
fistl
rcrb
cmp
lcall
cmpsb
xchg
jl
mov
neg
push
and
dec
and
insl
je
push
std
and
sbb
in
mov
jno
jecxz
xor
push
jnp
mov
mov
pop
mov
aad
pop
ficompl
test
push
add
mov
pop
insb
pop
ds
jne
or
mov
push
testb
dec
dec
add
sbb
mov
lcall
sbb
mov
cmp
jmp
dec
pusha
push
data16
cmp
out
and
hlt
shr
ret
jo
push
sbb
mov
sub
or
push
out
mov
cmp
fsubrs
jl
inc
or
js
mov
fs
inc
push
fs
dec
mov
test
fldcw
mov
mov
mov
das
fnstcw
dec
lahf
andl
cmp
fimuls
sub
pop
fistpl
or
sub
stos
sbbl
push
inc
lds
fidivl
push
fsubrl
cmp
clc
xchg
and
mov
adc
jp
decl
mov
out
int3
pop
and
mov
mov
inc
dec
js
pop
mov
dec
rolb
daa
cld
sbb
or
movsb
stc
fwait
cwtl
cwtl
cmc
jb
mov
adc
mov
out
cmp
mov
adc
into
std
cs
jbe
mov
lret
pop
cs
mov
cmp
sbb
or
dec
xchg
popf
inc
xor
jge
jne
aaa
dec
lods
xchg
inc
push
mov
mov
mov
dec
xchg
xor
je
repz
shll
adc
cli
sub
mov
in
dec
aas
movl
sahf
jno
lcall
pushf
lcall
js
rclb
push
and
inc
fcoml
mov
mov
out
lret
inc
jmp
sbb
jp
pop
inc
daa
lret
mov
pop
int
jle
dec
add
lret
sub
or
cld
or
imul
shlb
jnp
movsl
les
rol
in
test
and
mov
pop
inc
dec
jle
push
and
mov
dec
mov
popa
lea
cmpsb
push
movsb
mov
aam
ficompl
xchg
mov
lret
test
jne
cmpsb
jo
or
syscall
cs
insl
push
jae
sub
push
add
lds
lcall
jno
pop
adc
mov
sahf
inc
jns
in
cwtl
bound
test
js
fcompl
icebp
imul
sub
mov
or
outsl
cld
xchg
das
mov
dec
pusha
pusha
decl
cmp
mov
lcall
cmpsl
je
push
cmp
mov
jmp
mov
fwait
adc
loope
popf
inc
repnz
ds
fstpl
mov
push
mov
push
jbe
sar
outsl
cmc
xchg
cmpsb
jmp
pop
mov
lds
add
loope
dec
mov
cmp
fwait
jbe
mov
jl
inc
js
push
sbb
xchg
mov
call
or
aas
icebp
enter
jecxz
mov
mov
test
pop
pushf
scas
or
insb
call
adc
sbb
out
pop
pusha
push
or
sub
mov
cmp
ss
bound
xlat
pop
jae
outsl
jl
insb
jg
and
fnstcw
mov
or
idivl
fcmovnbe
mov
jbe
js
or
pop
push
fstpl
test
jmp
push
dec
sti
sub
aam
adc
fldcw
or
lea
push
xor
mov
int
daa
test
leave
aam
fadds
mov
jne
and
loop,pn
aas
lcall
add
xor
pop
xchg
add
mov
pop
sti
idiv
int
mov
dec
add
dec
aam
jmp
add
and
and
jge
cmpsb
fstl
outsl
orl
adc
inc
adc
dec
test
pop
mov
out
in
in
aas
push
and
or
lret
das
dec
negl
loop
outsb
insb
xlat
test
shl
push
jo
imul
loope
mov
cmp
push
and
jecxz
fdivl
and
fisubrs
push
aad
stc
cmp
cmp
add
rolb
cmp
popa
scas
in
data16
out
pop
movsb
ja
inc
je
cmp
js
sub
sbb
push
int
push
mov
inc
insl
cmp
out
dec
fsts
xlat
lahf
inc
movsb
ret
shlb
mov
les
and
mov
mov
js
mov
xchg
mov
test
and
jae
clc
push
out
shrb
clc
adc
and
mov
outsb
inc
into
pop
jmp
mov
lea
add
mov
push
add
out
cmp
jp
fcmove
mov
add
cltd
pop
mov
push
sub
inc
es
arpl
inc
push
mov
aad
inc
lahf
jmp
aam
lret
mov
lcall
sti
cmp
pop
out
sub
rcl
xchg
push
xchg
jp
arpl
pop
clc
cli
in
add
ja
out
dec
push
dec
out
add
mov
insl
jge
mov
fucompp
mov
hlt
fs
or
test
sub
cmp
sbb
pushf
shld
push
test
lock
xchg
int
fs
jl,pt
or
jp
or
mov
xlat
cli
enter
les
pusha
inc
insb
jne
cmpsb
js
shlb
adc
pop
xchg
pop
xchg
in
xchg
imul
sub
enter
clc
push
pushf
outsl
jbe
or
push
loopne
push
and
jg
nop
test
mov
pop
xor
or
rcr
push
cmpsl
dec
mov
test
lcall
iret
pushf
sub
mov
dec
jp
sub
ljmp
mov
sahf
sub
arpl
mov
push
and
push
into
imul
clc
lds
sub
lods
or
add
jl
mov
mov
mov
or
mov
pop
pop
into
cld
pop
push
or
mov
lods
mov
iret
cmp
sub
sbb
es
sub
pop
gs
push
pop
insl
inc
fstl
popa
pop
and
into
xor
mov
movsb
dec
pop
pop
sbb
arpl
int
mov
decb
push
inc
inc
test
mov
ss
das
xchg
gs
ret
fildll
xor
aaa
cmp
mov
fdivrs
cmpsb
test
ds
pop
sti
jmp
jl
insl
rcl
cltd
push
aaa
jae
pop
in
push
sbb
iret
test
popa
sbb
in
jecxz
inc
push
movsl
mov
ds
ljmp
mov
nop
mov
rcr
imul
mov
sti
cld
xchg
cmp
xchg
push
sti
pop
cld
stos
aaa
cmp
ret
sub
repz
mov
popa
sbb
dec
aam
sub
adc
pop
mov
xor
arpl
cmpsl
mov
test
mov
add
cmp
test
and
inc
or
pop
lret
pop
cmp
lds
and
pushf
xor
or
lcall
xorl
push
jbe
pusha
lds
std
cmp
out
ljmp
and
mov
add
mov
mov
push
jp
jne
incb
jno
jge
add
stos
xor
iret
lret
fwait
or
inc
jg
jns
jno
repnz
push
jae
cmc
jbe
and
cmpsl
mov
fwait
add
push
mov
pushf
gs
sub
xchg
fidivrl
imul
imul
jle
call
js
idivb
ljmp
add
sbb
insl
sti
mov
insb
mov
popa
lods
mov
shlb
lret
pop
mov
cmp
repz
repnz
cmp
rcrl
stc
lahf
jl
fistpll
shrl
ss
in
jno
add
xor
xchg
sub
rcl
fists
ss
dec
enter
jl
sarl
cmp
sbbl
leave
shl
add
sub
fwait
std
movsb
addr16
stos
test
dec
dec
aas
data16
stc
nop
mov
add
mov
imul
push
das
mov
sub
insb
cmp
cmp
push
cmpsb
icebp
insb
ret
data16
cs
cmc
outsl
xchg
mov
icebp
xchg
pop
sbb
fs
lret
inc
adc
or
push
sbb
in
jle
or
movsb
push
dec
adcb
adc
adc
adc
xor
cwtl
or
mov
cmpl
cli
pop
push
and
pop
dec
cmpsl
mov
sbb
test
and
clc
inc
dec
inc
inc
lods
aad
outsb
xor
subl
arpl
and
popa
xor
std
daa
mov
or
push
ficompl
int3
sahf
loopne
rcrl
mov
ret
adc
orl
cltd
and
cmp
pop
jb
dec
add
movsb
xchg
push
jge
loope
stos
sbb
fwait
add
xor
test
in
in
scas
pop
inc
fidivrs
sub
add
add
jae
pushf
loopne
repz
popf
scas
xchg
mov
loope
cmp
push
xor
mov
push
lock
fisubrs
out
stos
pushf
outsb
outsb
jno
jecxz
xchg
insl
aam
in
cmp
lods
pop
stos
or
add
inc
jge
mov
cmp
jge
push
mov
mov
sti
adc
dec
or
int
adc
mov
sbbl
mov
pop
ficompl
iret
inc
inc
test
lds
leave
push
lock
mov
dec
outsl
sbb
mov
lock
fmuls
jns
les
mov
out
fstps
xchg
out
loop
sbb
mov
icebp
push
adc
fists
push
mov
aas
popf
insl
inc
cmp
lcall
inc
adc
sti
pop
mov
mov
mov
sar
adc
das
ds
dec
loope
push
add
clc
repnz
xchg
mov
test
arpl
or
jle
add
loop
mov
mov
pop
mov
std
out
and
xorb
repz
mov
sub
fistl
sub
sub
sbb
sbb
stc
leave
inc
pop
mov
mov
addr16
popa
push
inc
mov
xchg
push
nop
js
push
sbb
mov
jmp
ljmp
mov
xchg
in
mov
test
push
cmp
fdivp
popa
imulb
push
inc
leave
movsb
loop
pop
mov
mov
outsb
xor
or
sti
adc
mov
xchg
clc
jle
xchg
decb
dec
fistl
mov
test
aas
int3
in
mov
jl
test
sub
bound
into
sub
fnstsw
push
jg
adc
cmp
and
pop
add
movsl
dec
scas
mov
jns
mov
xor
mov
xchg
cmp
sbb
and
or
lock
sub
pop
int
mov
arpl
fmul
lods
push
fwait
cmp
push
int3
push
xchg
xor
push
push
pop
cmp
scas
xchg
dec
push
std
sub
inc
mov
and
inc
shlb
adc
test
and
lahf
dec
xchg
pushf
icebp
cs
loopne
int
jbe
jle
mov
adc
mov
shll
mov
or
push
jg
or
sbb
sti
gs
in
leave
jns
sub
idivb
mov
ret
jb
inc
xchg
cmp
xchg
mov
lods
lcall
jp
xchg
outsl
mov
pop
mulb
cmp
lods
xchg
dec
xor
adc
jle
idivb
xor
pop
icebp
ljmp
cwtl
jne
test
inc
iret
loope
push
pop
test
les
mov
dec
add
and
xchg
dec
inc
in
pop
and
iret
incl
jns
fdivr
dec
xchg
and
stos
prefetch
insl
test
jmp
mov
pop
jo
push
xchg
mov
sbb
cmp
jle
mull
sbb
cmp
xchg
pop
nop
sbb
pop
push
test
lods
fildll
cltd
cs
insl
imul
pop
movsb
dec
pop
mov
into
rcll
dec
cmpsl
loopne
rorl
mulb
add
cmp
mov
lret
adc
sbb
mov
and
ds
lods
mov
mov
mov
aaa
pop
pushf
iret
push
mov
mov
pushf
mov
imul
les
xchg
ficoms
fdivrl
push
int
insb
sub
add
inc
in
adc
lds
daa
mov
jb
mov
pop
fldenv
cli
xchg
rorl
mov
js
mov
dec
xchg
das
lcall
jle
pop
or
or
pop
pop
es
negb
repz
mov
adc
and
fistpll
push
arpl
int3
sub
loopne
add
int3
or
xor
test
sbbb
jb
xchg
test
mov
cmc
or
sbbb
xorl
sub
stos
pop
loopne
lret
mov
mov
movsb
add
aam
mov
push
jns
pop
push
cmpsl
addb
enter
in
dec
push
mov
mov
xor
jne
imul
mov
sbb
fs
mov
roll
pop
jb
xchg
shrb
push
add
aad
sbb
rcll
ds
fldenv
sbb
mov
pop
and
das
sbb
fildll
mov
mov
out
lcall
sahf
inc
dec
movsl
push
js
and
inc
cmpsl
aad
test
adc
ja
dec
mov
push
push
add
mov
test
or
cmc
dec
rorb
mov
cmpsb
out
add
pmuludq
in
cli
test
sbb
fisubl
jmp
dec
fcmovb
popf
loop
jno
loop
ret
add
stos
dec
iret
test
sbb
cld
push
imul
and
mov
cmpsl
lcall
add
xchg
push
shlb
jecxz
addr16
xor
test
inc
mov
cmp
scas
inc
push
mov
mov
mov
fistps
sbb
icebp
push
int3
cmp
jle
sub
out
fs
push
cmp
pusha
jmp
in
fidivl
gs
ljmp
movsl
popf
iret
pop
adc
add
and
xchg
stos
push
or
in
xchg
fcmovbe
sahf
imul
pop
clc
inc
loop
dec
adc
dec
jae
outsb
push
sbb
or
mov
sbb
push
repnz
aad
lods
adc
bound
out
push
aas
gs
sbb
pop
out
stc
and
lods
sub
jnp
outsl
ret
cmp
aad
or
push
dec
fists
test
cmpsb
ret
cmpl
stos
sub
push
xor
jmp
faddl
mov
sub
inc
mov
mov
sbb
and
in
cmp
jecxz
fcoml
inc
cmp
inc
xor
repz
cmpl
pushf
out
das
repz
push
das
mov
lret
cmpb
cmpl
add
dec
xchg
lahf
pop
mov
jmp
add
pop
pop
and
call
fsubs
pop
dec
inc
adc
cmc
dec
ljmp
aaa
in
xchg
int
dec
pop
jns
sbb
mov
aas
cmp
shll
daa
xchg
js
dec
sub
fcmovnu
cltd
stc
out
std
sub
lcall
xor
xchg
xor
mov
cmp
push
out
mov
or
call
sub
scas
and
mov
mov
inc
repnz
sbb
cmp
dec
sbb
xchg
sub
xor
fdivs
enter
adcb
cmp
pop
or
lahf
rol
insb
ljmp
outsw
mov
adc
push
loopne
cld
cmp
ds
jg
mov
add
je
mov
cld
movsb
pop
jno
mov
fdivrs
icebp
decl
daa
movb
xchg
arpl
inc
out
cmpsl
rclb
icebp
insl
jbe
dec
mov
cld
jo
inc
and
jno
dec
xchg
cmp
fwait
jge
sti
movsb
cmp
add
fwait
add
sub
dec
mov
sub
int3
arpl
shr
jno
dec
sbb
mov
in
sub
cmp
dec
cmp
xchg
xchg
xor
fsubrl
repnz
sbb
push
lea
add
sbb
mov
pop
cltd
mov
in
push
fsubrl
sub
pop
inc
iret
gs
and
mov
jbe
test
or
es
imul
xchg
sbb
iret
sbb
adcb
clc
pop
popa
mov
inc
test
xchg
xchg
mov
and
mov
cmc
sbb
mov
mov
xchg
jp
stos
ret
in
add
jo
and
mov
cmp
cmc
stc
push
loope
repnz
test
and
mov
mov
mov
xlat
lret
cld
push
sbb
test
jecxz
add
jne
mov
xchg
rcrl
and
clc
fcmovb
aad
negb
pop
test
ljmp
jg
xchg
jb
sbb
stos
push
jns
or
popaw
shlb
mov
and
inc
into
adc
cmp
dec
pop
cs
jg
mov
push
imul
ljmp
mov
out
xor
test
bnd
cwtd
add
sub
jno
jl
in
or
aaa
mov
in
mov
pop
ret
pop
pop
mov
xchg
inc
dec
popa
ljmp
sub
xlat
xchg
movlps
mov
xchg
popf
adcb
in
sbb
lds
jge
enter
orl
inc
jecxz
sbb
xchg
testb
sub
jo
in
lods
out
data16
jne
cmp
cmp
inc
cmp
cs
stc
dec
aaa
xor
outsb
push
fsts
lea
cmp
push
lahf
je
in
andl
hlt
dec
lcall
adc
nop
mov
cli
arpl
call
jp
cmp
sub
add
pop
adc
and
jl
ja
mov
adc
pop
in
insb
mov
cmp
xchg
mov
aaa
jmp
popa
fcmovu
shlb
hlt
pop
mov
cmpsl
cmp
clc
test
pop
fs
xor
mov
mov
in
inc
movsl
pop
mov
leave
sbb
or
mov
aas
loope
outsl
jb
sbb
stos
xchg
insl
in
mov
pop
dec
into
lds
sub
push
jnp
sub
rclb
dec
or
inc
add
scas
jl
xchg
lods
pop
cmpsl
mov
jno
imul
xchg
mov
shlb
hlt
adc
push
jb
negl
push
xor
outsb
fdivrs
adc
add
rclb
sub
and
int
mov
or
dec
lea
call
inc
stos
leave
xchg
imul
sub
push
sti
pop
add
sbb
push
pusha
cmpsl
stc
lret
sahf
jle
and
aaa
repz
pop
sar
cmpsl
sbb
sbb
pop
stc
mov
sti
push
jbe
test
shlb
sbbl
test
sub
sbb
push
iret
jbe
inc
cmp
sbb
xchg
mov
mov
out
cmpsl
shll
pop
cld
sub
cmpl
push
cld
dec
nop
cltd
push
pop
xchg
xchg
dec
xchg
push
dec
inc
int
push
dec
bound
fbld
and
pop
and
insb
and
and
dec
or
pop
xchg
mov
push
das
mov
mov
outsl
or
sbb
lods
jno
xor
aad
add
mov
add
shll
inc
jg
jmp
ljmp
sub
xchg
mov
popf
ret
das
add
mov
mov
repz
loopne
lahf
push
jg
int
mov
pushf
mov
loopne
aad
mov
popf
sub
fbstp
in
jo
dec
loop
cmp
sbb
push
jo
inc
inc
ret
xlat
je
and
test
mov
pop
icebp
inc
test
in
dec
jle
lahf
lea
sub
push
faddl
js
cs
cmp
rolb
rcrl
fldt
mov
dec
mov
push
fwait
push
mov
dec
push
or
packuswb
cmp
out
jno
or
test
xchg
ss
sub
sbb
movsl
ja
xchg
mov
lods
fisttpll
inc
push
add
arpl
mov
lret
sbb
xchg
pop
dec
cmpsl
fs
pop
adc
cmp
push
pop
mov
subl
je
pop
popl
dec
cmp
loope
jp
or
mov
sbb
pop
and
shll
test
mov
movsl
pop
je
test
jne
push
mov
xchg
ss
aaa
out
loop
sbb
inc
iret
inc
fadds
sahf
in
mov
mov
pop
or
sti
arpl
push
xchg
enter
shl
dec
insb
outsb
mov
or
in
sbb
bound
mov
mov
stc
inc
loope
lods
add
out
push
and
call
xor
inc
mov
pop
pop
adc
into
jne
lret
inc
mov
repz
xor
inc
sub
in
popf
lcall
mov
sub
cli
jns
mov
push
fcoms
mov
jne
push
pop
pop
icebp
movsb
popf
jbe
dec
xchg
inc
mov
xchg
mov
lret
xchg
scas
rorl
add
movsb
xchg
push
jge
xor
push
fists
inc
sbb
loop
cmp
std
fnstcw
aaa
push
pop
push
push
das
insl
lods
sub
pop
dec
jne
imul
movsl
pop
pop
inc
bound
mov
or
mov
lds
mov
jbe
ljmp
daa
test
cld
adc
adc
rorl
mov
ss
pop
subb
and
shl
xchg
ret
loop
xchg
decl
test
mov
lods
mov
xchg
pushl
dec
cmp
test
mov
ds
lock
push
mov
popa
jbe
addl
das
inc
loopne
mov
leave
inc
dec
jbe
xlat
fisubl
call
sbbb
ljmp
inc
nop
inc
ss
lds
lea
add
aaa
stos
lret
and
ljmp
jge
out
push
xor
lods
jge
push
incb
ret
jg
mov
rdpmc
or
adc
inc
popf
lods
fadds
popa
mov
add
inc
sti
in
es
mov
cmc
dec
push
sbbl
insl
fsubl
xchg
ljmp
and
rol
cmp
in
push
icebp
sbb
fdivl
sarl
inc
xchg
test
pop
inc
ds
lcall
js
sbb
pop
dec
mov
aas
movsl
es
scas
mov
int
mov
mov
pop
xor
fstl
dec
adcl
sbb
cmp
mov
cmp
cwtl
cmc
and
mov
hlt
jmp
mov
repz
cwtl
push
push
shlb
jg
notl
and
imul
fidivrl
in
push
imul
cmp
mov
jl
adc
lahf
jmp
aam
inc
inc
andl
enter
inc
dec
pop
das
sbb
jmp
cld
ret
inc
xor
je
movsb
out
aas
xchg
inc
shlb
hlt
sub
mov
or
jmp
movsb
xor
sbb
dec
jg
nop
xor
fmuls
cmp
clc
fldt
jae
add
movsb
outsl
notl
pop
test
mov
mov
mov
pop
repz
pop
movsl
loopne
jp
jp
mov
and
lods
lock
aas
or
xlat
jmp
in
mov
or
cmp
jae
adcl
popa
lock
push
sbb
jle
adc
inc
das
repnz
sub
popa
mov
pop
mov
cmp
clc
xlat
xlat
push
mov
dec
outsl
push
inc
addr16
mov
mov
xchg
inc
and
fidivrs
push
xchg
lods
sti
test
lds
je
pop
mov
dec
pusha
jmp
inc
je
insl
mov
mov
and
pushf
and
mov
shll
dec
in
pop
dec
xchg
aam
les
scas
out
sub
jns
add
ss
and
cmp
dec
dec
test
dec
lret
sub
sub
fcmovb
push
push
testl
or
push
pop
mov
in
add
jmpw
iret
out
add
fiaddl
mov
mov
mov
cs
mov
mov
pop
sahf
in
add
test
xchg
add
pop
lahf
cli
in
mov
xchg
inc
adc
inc
cmp
out
mov
cltd
pop
lds
cmp
and
cmp
jns
sub
je
leave
fistps
push
arpl
jecxz
jp
lret
dec
sub
xchg
rcl
lods
sbb
pop
mov
test
loope
ret
xchg
inc
aas
fnstsw
xchg
fisttps
test
sbbb
pushf
aaa
xchg
repnz
ret
and
std
inc
ss
mov
push
xchg
ret
push
inc
fs
sub
push
movsb
jecxz
push
sub
jl
mov
lods
daa
test
clc
cld
xchg
inc
xchg
xchg
sbb
movsb
dec
xorl
out
cmp
pusha
test
int3
or
jl
mov
jle
fiadds
xor
lcall
cmpsb
scas
jge
pop
push
push
loopne
ja
push
in
fwait
mov
sbb
pop
add
lock
mov
test
cmc
push
sub
rolb
fistl
jp
jbe
cmc
xor
nop
nop
xor
popf
cli
add
mov
jl
pusha
xchg
xchg
test
in
dec
stc
hlt
les
jnp
sub
sub
or
inc
rcrl
dec
ljmp
imul
enter
mov
dec
or
cmp
pop
push
cmp
pop
sub
rdpmc
jp
cmp
sbb
fs
jmp
test
imul
mov
pusha
or
pop
sahf
int3
leave
sub
iret
sbb
mov
xchg
add
je
aaa
add
jne
or
sti
dec
aad
pop
outsl
xchg
inc
lahf
xor
cmp
in
xor
mov
mov
popf
sub
xchg
leave
cmp
aam
inc
and
inc
sub
out
xor
sbb
lcall
jl
sbb
inc
shl
mov
mov
sub
xchg
and
jnp
lret
out
jne
mov
lock
push
xchg
movaps
lahf
adc
call
out
mov
lahf
lret
cmp
jne
sbb
push
aaa
jnp
push
bound
vunpckhps
and
add
add
mov
outsb
dec
xchg
adc
fadds
push
or
aas
lds
loope
out
jbe
int
dec
mov
lods
movsb
push
popa
out
cwtl
int3
ret
jno
jle
aaa
and
mov
shll
lret
pushf
mov
ret
cmc
int
mov
push
hlt
inc
arpl
stc
dec
mov
pop
loop
xor
ja
add
fwait
jae
xchg
jle
xor
mov
sub
sbb
pushl
xchg
jecxz
xchg
fdivr
dec
xlat
dec
cmp
add
sbb
push
sahf
dec
add
sub
jge
cmp
pop
mov
jo
jmp
mov
aam
mov
bound
push
pop
dec
xor
xor
sbb
xchg
pop
push
xchg
fcomps
rclb
fs
test
push
adc
movsb
pop
mov
push
dec
arpl
pop
inc
in
inc
rolb
rclb
add
pop
lods
pusha
add
push
pop
mov
dec
aaa
cmpsb
pop
scas
xor
dec
mov
cld
decb
stos
jb
pop
loope
or
or
xchg
sub
int
inc
or
sub
cmpsb
sbb
add
jp
fucom
pusha
ja
fwait
inc
jne
cmp
es
out
loopne
ja
add
cmp
or
addl
push
mov
clc
push
sti
add
movsb
mov
aas
sub
mov
imul
movsb
test
mov
cs
mov
andl
add
dec
jae
fbstp
sbb
cmc
nop
push
xchg
or
mov
xchg
loopne
and
test
lret
mov
lcall
cli
repnz
sbb
test
push
dec
inc
in
adc
nop
popf
leave
and
push
enter
insb
shl
mov
mov
dec
andl
cmp
add
or
dec
xchg
enter
dec
ja
ja
mov
add
pop
mov
mov
inc
mov
jns
jp
int3
dec
test
dec
xor
xor
shlb
jmp
cmpsl
xor
stos
jg
adc
dec
in
jno
pop
ficoms
lahf
inc
loop
cmc
mov
jnp
sbb
mov
pop
lods
push
es
add
xor
xchg
test
aad
lcall
dec
inc
sub
ja
pop
inc
aad
test
jnp
subb
in
dec
sub
mov
or
jno
xor
push
stc
cmp
push
and
xor
jnp
and
cltd
cmp
xchg
cmpsl
cmpb
cwtl
fwait
pop
push
and
fs
lcall
push
add
sarb
jl
lock
adc
outsb
adc
cli
mov
xor
and
roll
roll
aam
cs
ja
push
pop
and
imul
inc
xchg
adc
mov
xchg
icebp
adc
cmp
xchg
cmp
test
mov
cld
jmp
cli
pop
xor
or
rorl
lret
jns
sti
push
adc
sub
sub
xchg
dec
push
jge
pushf
mov
repz
pop
add
push
lret
pop
jge
jbe
mov
fadds
inc
sub
daa
sbb
pop
and
dec
stc
or
pop
jle
mov
sub
test
mov
fldcw
popf
arpl
lret
mov
aas
and
cwtl
adc
popa
add
movsb
out
jnp
outsb
test
xorl
sbb
lock
popf
pushf
stos
dec
xor
mov
repz
xor
pop
insb
pop
test
adc
pop
aas
fucomi
pop
cmp
scas
std
out
sbb
push
out
pop
jmp
jp
stc
dec
sbb
data16
rcrb
pop
ss
cmp
jns
dec
sub
data16
loope
hlt
loope
jns
lods
and
popf
sub
or
add
sbb
pop
aas
insb
pop
das
mov
cwtl
dec
mov
aas
lock
shl
lods
bound
shr
daa
pop
push
out
fisubl
jge
popa
pop
push
mov
incl
lcall
in
push
movsl
jecxz
aam
add
in
hlt
movsb
push
bound
ljmp
jne
mov
sbb
in
aam
sub
leave
pop
shll
xor
popf
mov
ja
cltd
iret
clc
shrl
fptan
lods
pop
jb
je
dec
testb
push
aam
scas
popa
dec
xor
cs
lcall
lret
mov
shll
or
fisttpll
outsl
lcall
cmc
push
mov
dec
adc
fildll
push
cld
mov
mov
xor
lods
arpl
jbe
nop
and
mov
inc
sbb
push
pop
dec
shll
fisttps
loopne
outsl
jne
ljmp
mov
ret
jl
mov
fwait
jp
addr16
mov
std
mov
int
gs
scas
push
xor
ret
adc
into
xlat
xor
xlat
mov
nop
xchg
insb
aad
test
pop
data16
jnp
loop
adc
lods
aaa
fcomi
jns
mov
push
aam
loope
mov
mov
or
sub
and
dec
adc
pop
in
fs
rcll
or
push
xor
cmpsl
rclb
sub
imull
lea
cmpb
ret
xchg
stos
int3
outsb
pusha
jo
sahf
pusha
daa
sarb
mov
pop
repz
sbb
sbb
hlt
leave
cs
out
cwtl
test
outsl
inc
lods
dec
cmpsb
dec
testb
aad
cwtl
and
inc
cltd
aam
cli
mov
cbtw
inc
in
jg
mov
cmp
das
sbb
out
je
cs
arpl
fimull
sub
add
into
mov
add
push
pop
mov
push
subl
jo
mov
aam
sub
sbb
adc
inc
outsl
jae
and
lcall
test
popf
mov
push
adc
adc
je
int3
lock
shrl
xor
cmpsl
or
shl
ds
xor
cwtl
inc
or
xchg
push
shlb
repz
je
dec
push
leave
jmp
jbe
sub
shll
sbb
inc
sbb
lock
sbb
lods
or
imul
sbb
in
mov
adc
out
cmp
popa
mov
dec
xor
jno
outsb
adc
mov
mov
add
pop
mov
fs
mov
cmp
inc
jg
xchg
cmc
popf
and
mov
mov
jmp
push
fisubrs
std
pop
les
pop
rorl
mov
xchg
scas
mov
xchg
ljmp
adc
inc
dec
lret
mov
aaa
and
mov
rcrl
ljmp
repz
repz
mov
mov
cmc
mov
xor
pop
mov
push
in
aam
es
icebp
aaa
push
pop
dec
das
sti
seto
lods
stos
fs
ljmp
pop
inc
cmp
mov
clc
loope
clc
adc
js
inc
cmc
inc
mov
in
xchg
xor
int
xlat
push
xchg
adc
ss
movsl
jno
fsubp
shll
jecxz
loopne
mov
sub
leave
rolb
es
cld
inc
mov
dec
lret
jle
psllq
cld
and
lods
add
rcll
int3
xchg
ret
and
jge
lret
movsb
mov
jp
mov
xor
lods
test
mov
out
lock
inc
je
leave
mov
cmp
andb
inc
or
mov
ljmp
dec
or
mov
fwait
jae
sbb
jbe
push
push
mov
icebp
mov
outsl
test
call
out
loop
std
cmp
fistps
and
dec
mov
shrb
push
inc
scas
mov
lahf
add
into
cmp
out
dec
ficomps
or
aad
add
ss
or
add
push
xchg
mov
fbstp
push
popa
inc
cmp
inc
adc
es
or
imul
xchg
mov
movsb
push
into
dec
stc
dec
jmp
scas
lret
lods
cwtl
stos
pop
inc
shrl
ja
decl
lret
repnz
popf
adc
jecxz
pop
xorl
jbe
mov
mov
test
sub
xchg
fisubrs
lds
jne
pushf
mov
or
call
inc
inc
dec
and
lcall
push
mov
dec
sbb
ret
xchg
pop
int3
push
jp
shrl
pushl
push
sbb
cli
aas
dec
arpl
lock
mov
out
nop
mov
push
jg
test
test
dec
adc
iret
fsubrs
pop
jmp
cmp
dec
mov
mov
mov
adc
call
sub
and
mov
ds
add
imul
cmpb
mov
stos
push
int3
iret
pusha
jno
lahf
lds
stos
adc
fs
shrl
pop
xlat
jge
inc
lock
or
push
add
xchg
ret
xor
test
or
xchg
xor
pop
ljmp
pop
pusha
je
cmp
inc
pop
rcll
lds
cli
pop
and
int3
nop
xor
push
jl
sahf
sbb
out
ja
push
leave
sub
mov
lahf
ja
and
mov
adc
push
dec
insl
push
test
pushl
dec
aam
inc
aas
adc
leave
roll
pusha
fld
adc
inc
jnp
movsb
lods
in
sbb
and
loop
xor
jne
daa
test
jp
out
aam
add
lcall
push
push
lock
pop
out
pop
xor
lret
repz
jge
stos
pop
std
dec
shll
daa
push
xchg
stc
ret
repz
inc
inc
cmpsb
dec
jge
test
or
cmc
out
in
jno
popf
sbbb
xchg
daa
fcompl
jmp
fsubrl
mov
dec
loopne
xor
mov
daa
pop
test
iret
cmp
mov
mov
hlt
xchg
shlb
ss
cli
xor
add
xchg
ss
test
mov
dec
lret
mov
popa
in
sbb
scas
mov
les
pop
mov
testl
mov
and
sub
insb
mov
mov
jns
push
orl
cmp
stc
lret
jle
call
pop
scas
sub
daa
out
push
sbb
imul
cmp
or
adc
popl
mov
int
xchg
push
ret
aam
out
cmc
cmp
notl
insl
push
xchg
into
mov
add
rol
jg
adc
push
or
push
lret
std
jno
sti
mov
gs
sub
pop
je
shl
pushw
popf
sti
aas
xchg
repnz
jns
mov
out
sbb
scas
mov
lods
lods
add
jge
ljmp
aam
push
jecxz
jae
imul
jmp
hlt
lock
rcl
into
sbb
push
inc
jp
ljmp
fiaddl
cmp
out
es
mov
loop
dec
inc
arpl
mov
add
rcr
or
jecxz
sub
xchg
in
pop
push
aaa
mov
outsb
mov
movsb
push
inc
xchg
dec
and
outsl
js
add
ss
and
and
dec
push
adc
ja
jmp
mov
jno
inc
nop
stos
xor
jbe
mov
cwtl
int
jecxz
xor
stc
inc
push
jo
xchg
cli
sbb
mov
lea
data16
adcb
jae
out
je,pn
mov
pop
and
std
add
punpcklbw
pop
mov
aad
pushf
in
movb
lea
mov
inc
cmp
jbe
stc
int
mov
pushf
sub
mov
mov
loope
xor
dec
rorb
sbb
icebp
and
lock
adc
ds
cltd
cmpsb
mov
lock
lea
or
arpl
sbb
aas
adc
into
test
and
test
or
mov
jo
mov
clc
lds
mov
test
push
popa
dec
hlt
adc
aas
test
push
in
cmpsb
jl
xchg
aad
pop
xor
shr
outsb
ja
stos
je
inc
mov
push
jl
mov
push
cltd
out
ficoms
ljmp
shl
div
addl
in
mov
jmp
mov
pop
sarl
mov
stos
and
popa
addr16
push
push
shrl
push
add
jge
mov
jmp
inc
mov
std
les
pop
movsb
repnz
aaa
jnp
lret
dec
aam
not
dec
in
mov
ret
sub
or
xchg
shrb
addr16
lahf
test
loope
pop
jnp
rcr
pop
sub
xor
sub
pop
fiaddl
adc
rcrb
mov
mov
pushf
fdivl
arpl
dec
mov
pop
mov
out
pop
dec
scas
loopne
sbb
stos
push
mov
and
and
xchg
leave
popf
loop
jg
cmp
jg
jp
jg
je
sbbl
xor
les
jp
movsl
iret
iret
dec
and
je
lahf
cmc
call
cmp
rcr
xchg
mov
ljmp
out
cmp
mov
aam
lds
jl
ret
jb
aaa
ret
dec
dec
lahf
sbb
pop
fwait
and
and
ss
pusha
cmp
mov
xlat
jp
addr16
test
mov
out
push
pop
jmp
xor
pop
or
mov
lods
lods
das
adc
adc
lret
jmp
push
mov
push
nop
push
mov
mov
pusha
mov
movsb
pop
shrl
mov
pop
test
inc
fldcw
xchg
mov
int
xlat
xchg
jp
mov
mov
fucompp
fcompl
and
sbb
lahf
push
mov
dec
adc
fwait
xchg
sub
mov
cmc
inc
sub
ds
or
loopne
jno
push
mov
cld
mov
add
pop
imul
adc
popa
in
ret
lcall
out
scas
test
popf
lahf
xor
ror
or
js
repnz
and
scas
sahf
movsb
sbb
sub
and
mov
in
sbb
cli
loopne
sub
adc
jo
arpl
cmp
sbbl
mov
xor
dec
movsl
or
loop
xor
mov
lret
sbb
xchg
lret
sub
mov
or
xchg
ds
xor
push
xor
test
das
popl
mov
pop
pusha
add
sbb
les
fidivs
mov
sub
cmpsl
xchg
sarl
fldln2
leave
lret
jnp
push
addr16
and
push
imull
cmpl
pop
push
idivl
sbbb
test
jmp
sbb
test
movb
pop
imull
int3
xorl
shll
cmc
mov
movsl
and
mov
dec
jne
cmp
add
mov
push
ret
xchg
enter
lods
push
subl
orb
xor
loope
outsl
cmc
jecxz
push
sti
cmpsb
int
add
mov
pop
mov
mov
cmc
pop
cmpsb
adc
xchg
push
ds
cmp
cwtl
mov
fsubl
call
out
mov
call
out
addb
es
sub
aad
sarb
aas
xor
fimull
lcall
pop
ljmp
stos
sub
push
sub
and
add
cmc
cmp
push
fisubrl
adc
icebp
jnp
mov
js,pn
nop
rcrb
inc
push
imulb
es
xchg
xlat
mov
out
in
shrb
ret
xchg
and
jae
repz
inc
out
shlb
cmp
loopne
repz
mov
fsubrl
mov
cld
xor
pusha
adc
mov
popa
jbe
aaa
std
mov
inc
dec
mov
stos
pop
popf
test
pop
les
repnz
xor
sahf
lcall
mov
aas
mov
inc
test
test
aam
sub
ret
inc
subb
in
adc
or
sub
inc
mov
out
sbb
inc
or
mov
int3
stos
cmp
lcall
lds
sti
rolb
mov
xchg
xchg
mov
and
cmp
or
xchg
sbb
dec
out
bound
jecxz
sub
cmp
jno
mov
lret
mov
jp
xorl
in
sub
bound
lahf
dec
data16
cmc
mov
lret
mov
mov
mov
or
aam
push
lods
movsl
test
sbbl
add
mov
dec
cmp
jmp
call
or
fstpt
cmp
orl
lret
aaa
mov
xchg
push
push
dec
insb
sahf
rorb
adc
js
add
xor
push
fnstsw
sbb
push
xchg
xor
pop
inc
pop
cmp
psllw
sarl
sbb
dec
das
add
inc
aad
incl
mov
mov
mov
jle
sbb
mov
imul
arpl
add
xchg
stos
stc
cld
hlt
pusha
lods
add
in
aas
cs
dec
loop
pop
cwtl
or
jl
adc
nop
scas
insl
out
mov
pop
mov
outsb
orl
sahf
dec
sahf
inc
stos
out
xor
jno
mov
jne
and
pop
jne
inc
rcrl
jmp
mov
hlt
mov
aaa
cmp
mov
inc
mov
mov
inc
movsl
aam
pusha
insl
sahf
and
pop
or
ret
mov
je
mov
leave
dec
jecxz
push
jmp
xor
ss
xor
movsb
jmp
mov
sub
inc
jne
mov
popa
push
inc
sbbb
enter
test
out
sub
dec
cmp
ja
or
scas
cmpsl
mov
fwait
add
jns
cmp
push
dec
push
dec
pushf
mov
pushf
sub
xor
data16
aas
insb
loopne
popa
or
dec
mov
test
dec
fs
adc
push
jecxz
push
mov
fmul
sbb
arpl
mov
pusha
cs
and
and
roll
inc
inc
mov
sahf
mov
push
mov
leave
mov
test
shll
xor
jae
stos
jmp
sub
orl
jno
repnz
xor
leave
lods
lret
inc
cwtl
pop
pop
out
inc
sbb
loop
xor
test
pop
scas
sub
pushf
into
mov
test
cmp
mov
enter
or
push
aas
dec
cld
push
add
push
adc
loopne
in
xchg
notb
and
addr16
outsl
jae
adc
pushf
lret
mov
and
adc
mov
lods
xor
ds
rcll
dec
bound
xor
dec
cld
push
mov
mov
cwtl
cltd
sub
mov
bound
xchg
cmpsb
pop
pop
popf
dec
xchg
insb
and
pop
mov
enter
movsl
addr16
ja
mov
loope
and
out
cmp
push
es
jb
neg
leave
jle
sahf
out
movsb
sti
lret
dec
adc
mov
popf
shl
sub
push
xor
fimull
dec
ja
push
out
push
out
adc
js
addr16
xchg
xlat
sahf
leave
mov
inc
lret
gs
mov
mov
daa
lods
and
pop
jno
adc
insb
inc
fisubs
js
in
pop
outsb
out
mov
mov
cld
xchg
sub
sbb
dec
xor
pop
lock
push
in
cmp
xchg
and
pop
ret
int3
cltd
xchg
test
repnz
pop
jb
mov
outsl
out
xor
xor
bound
movsb
enter
push
shrl
mov
sub
loop
mov
gs
movsb
insl
orl
inc
xor
nop
sub
shlb
out
gs
ret
icebp
mov
fistl
pop
pop
mov
add
notl
negb
or
faddl
fs
cmp
jo
pushf
dec
cs
xchg
sub
add
insb
shrb
inc
inc
iret
lds
les
or
cmp
lods
sbb
lahf
adc
cli
aaa
dec
fadds
and
mov
xchg
jb
push
sbb
and
lret
pushf
mov
jge
outsb
dec
jecxz
pop
lea
lods
xchg
bound
aas
lret
xor
in
cwtl
stc
ljmp
divl
mov
sub
xorb
sub
hlt
push
lock
in
loopne
sub
inc
push
imul
les
xor
inc
mov
jne
repnz
and
loopne
mov
je
jbe
icebp
inc
push
aaa
pop
sbb
out
mov
xor
xchg
xchg
jp
xor
jnp
xchg
fwait
mov
adc
lret
add
xchg
filds
movsl
or
cld
loop
mov
xor
pop
aad
pop
push
loope
cmp
data16
ret
xor
sub
out
jno
push
xchg
cwtl
push
push
jb
jl
sub
mov
sahf
addr16
sbbl
rorl
lods
xor
test
icebp
xor
mov
daa
enter
dec
ficoml
data16
jmp
shrb
xor
and
int3
mov
cmc
psrld
aam
sti
call
hlt
add
enter
push
sbb
mov
movsb
sbb
sbb
pop
cwtl
sbb
insb
enter
adc
fs
int
add
sbb
sbb
inc
mov
test
xchg
repz
cmp
out
push
cld
adcb
dec
les
push
int
cmp
dec
mov
rclb
inc
or
dec
mov
mov
cli
movsl
pushf
jno
mov
push
pop
ret
lcall
mov
out
cwtl
xchg
imull
sbb
push
fildll
add
cmp
iret
jl
push
or
or
iret
mov
sbb
out
cmp
adc
jg
mov
pop
in
jo
shll
xor
outsb
jno
sbb
icebp
cmc
pop
mov
in
pop
sub
decl
nop
in
and
fwait
dec
push
mov
sbb
mov
jmp
insl
sbb
sbb
or
mov
pusha
add
pop
aas
outsb
and
sub
lods
int3
jle
movsl
mov
push
cmc
andl
movsb
push
in
out
and
or
roll
int
jmp
shll
and
mov
lahf
imul
pop
outsl
scas
mov
fdivrl
jbe
xchg
push
mov
popa
pop
dec
sub
xchg
sbb
ret
jnp
enter
sub
js
icebp
and
ret
sar
call
and
or
iret
je
or
inc
mov
repz
xor
loop
mov
pushf
mov
inc
push
aas
sahf
es
test
into
jo
sub
ret
sub
or
cltd
jb
add
adc
nop
xor
enter
ret
mov
jle
repz
or
adc
pop
jg
xorb
dec
movsl
subb
adc
push
rclb
ja
dec
sti
cmp
add
in
sbb
movsl
push
mov
fnstenv
fs
adc
out
test
hlt
push
mov
cmp
mov
stc
jmp
xchg
outsb
mov
je
sbb
pop
push
mov
mov
mov
push
fwait
xchg
and
call
ret
cmpsb
and
push
inc
cld
mov
movsb
sub
and
cmp
inc
add
mov
loopne
push
mov
dec
sub
add
in
das
xchg
add
das
movsb
xchg
test
cmp
xchg
lgs
xor
lret
or
mov
pop
xchg
lea
inc
fnstcw
enter
call
inc
and
insb
hlt
movsb
dec
pop
mov
incl
cmc
xor
push
pop
movsl
and
inc
jmp
loop
push
xchg
shl
mov
mov
dec
inc
sbb
repz
cli
and
mov
xchg
cmp
inc
xlat
sub
pop
sub
add
sbb
pop
iret
imul
xchg
mov
repnz
xor
push
mov
mov
sub
mov
aaa
adc
mov
jns
retw
add
outsl
adc
inc
dec
xchg
subb
shll
mul
xchg
push
xlat
dec
or
stos
or
out
test
xor
adc
add
test
mov
scas
cltd
rcrl
pop
out
shrb
in
gs
stc
xor
mov
mov
dec
sub
add
je
adc
imul
mov
jge
cmp
xor
out
xlat
push
inc
lea
inc
mov
lea
lods
mov
pop
dec
sti
mov
cmp
inc
mov
outsl
fistl
pop
jmp
fbstp
js
mov
mov
js
push
rcrl
xorb
mov
stc
stc
push
xor
cmp
lret
mov
jo
cmp
xchg
push
pop
sbb
lods
test
mov
or
xor
imull
negb
cmp
loope
add
roll
mov
out
pop
mov
mov
inc
loopne
data16
push
or
inc
leave
testl
cltd
jecxz
add
stos
fdivl
mov
push
rol
movw
cmp
mov
lds
lods
xchg
mov
xor
xchg
and
mov
xchg
aas
sarl
inc
dec
push
xchg
pushf
test
sub
repz
and
pop
outsl
mov
daa
inc
dec
jecxz
push
jecxz
adc
negl
sub
sbb
nop
xchg
inc
xchg
outsb
sub
and
test
incb
mov
jnp
sub
popa
les
sbb
imulb
cltd
or
ret
mov
sub
xchg
lods
xchg
push
mov
cmc
js
lcall
cli
sbb
pop
xchg
mov
push
sbb
lods
mov
in
fisubrl
rorl
loop
pop
fiaddl
popf
aad
popa
ds
inc
or
std
iret
xor
ss
insl
inc
cwtl
and
inc
out
out
and
dec
sbbb
sub
test
jmp
sbb
mov
mov
cmpsl
sbb
test
dec
rol
push
xchg
inc
sub
jl
ja
pushf
xorl
jns
fs
xchg
arpl
in
fimuls
stc
mov
js
in
push
add
jge
mov
sbb
adc
push
inc
mov
adc
adc
lahf
test
pusha
jmp
mov
fimull
stos
cld
fnstcw
xchg
arpl
jg
jmp
xchg
lods
dec
inc
pusha
mov
push
roll
sub
mov
push
stos
out
jecxz
or
loope
jo
mov
movsl
cmp
sub
nop
mov
out
adc
dec
adc
incl
xchg
pop
aaa
mov
int3
das
add
xchg
negb
loop
xor
loopne
add
into
push
and
ret
popa
jp
jp
inc
xchg
es
xor
cmc
push
cli
sub
pusha
cli
and
leave
sbb
call
inc
push
mov
xor
pop
adc
sub
clc
outsl
jno
or
bound
fcmovb
fyl2x
xchg
insb
xor
addb
push
mov
lret
imul
mov
xchg
xchg
aaa
mov
ret
adc
dec
gs
xchg
adc
fldt
jo
call
ss
neg
and
add
xchg
lret
imul
sub
aaa
mov
dec
dec
sbb
aaa
repnz
push
jle
fwait
lret
mov
mov
imul
lea
inc
pushf
outsl
adc
and
push
mov
setae
cmp
ds
sub
dec
fimull
add
push
sbb
sbb
dec
lea
push
cmc
pop
fucomip
adc
shll
mov
xor
adc
hlt
negl
int3
xor
outsl
fyl2xp1
pop
lea
mov
jae
mov
xor
pop
lods
cmc
xchg
sub
xchg
lock
mov
add
mov
push
std
aas
jge
pop
sbb
fisttps
adc
stos
cmp
incl
push
das
sub
std
imul
cld
out
xchg
or
in
add
shlb
mov
push
or
push
cmp
mov
mov
xchg
repz
cmp
mov
cmp
xor
in
aaa
dec
mov
fldl
out
mov
mov
add
sub
movsl
arpl
mov
pop
sahf
dec
imul
adc
xchg
adc
cmp
or
sub
mov
mov
mov
mov
pop
push
in
mov
xlat
xchg
in
outsl
xchg
sub
das
jecxz
pop
shlb
and
dec
testb
mov
cs
sub
mov
sbbb
or
mov
or
inc
jge
out
fsub
mov
fs
sub
push
imul
xlat
icebp
dec
sbb
add
dec
popf
and
stos
test
add
push
jne
sub
rcll
mov
sahf
inc
daa
xchg
das
out
stos
dec
lods
nop
int
xchg
out
and
mov
xor
sbb
cmpsl
lods
movsb
mov
aaa
or
push
or
movsl
cltd
decl
mov
adc
mov
mov
jl
inc
add
cld
mov
mov
adcl
pushf
movsb
stos
adc
scas
xor
cmp
out
xor
aam
repz
xchg
pop
jae
cwtl
mov
cmpsl
and
addr16
fdivs
mov
mov
lcall
push
shl
fwait
dec
push
call
jp
or
loopne
ficomps
outsl
jp
ret
pop
cmpsb
xor
cmp
add
and
leave
pusha
xor
push
push
das
arpl
xor
leave
jmp
cmp
inc
pop
xchg
dec
insb
sbb
cwtl
jmp
enter
imul
and
mov
int
dec
pop
mov
jl
std
in
sbb
ret
add
int
sbb
incb
jl
sti
jle
inc
clc
cmp
ret
ss
mov
mov
xchg
pusha
fldenv
mov
rcrl
mov
loopne
mov
aad
test
mov
push
insb
mov
cmp
movsb
imul
je
jecxz
out
movsl
push
bound
sub
arpl
xor
pop
jns
mov
jmp
jecxz
int
add
filds
cmp
data16
dec
or
fdivl
or
push
dec
test
imul
cmp
and
rcl
dec
adc
cs
stos
mov
loopne
cs
daa
mov
sbb
stc
jmp
dec
xchg
xor
pop
pop
sub
jl
mov
mov
push
mov
fwait
add
js
pop
xor
push
rorl
std
inc
fsubrl
adc
les
adc
imul
cmp
push
dec
jb
fs
call
adc
movsb
stc
shrb
cltd
push
scas
jge
test
fs
mov
add
shrl
loopne
notl
adc
aad
and
test
push
sbb
mov
data16
incb
jne
je
mov
dec
or
scas
outsb
fdivrl
repz
and
mov
iret
shl
xchg
scas
insb
cli
nop
and
pop
imul
in
push
jae
push
push
jns
cmp
ja
je
and
icebp
jae
repnz
loop
jnp
aam
cmp
cmpsb
sub
sub
lds
add
mov
mov
das
inc
je
mov
mov
sbb
sbb
test
adcb
mull
in
hlt
out
pop
pop
stc
lret
jae
enter
punpcklwd
dec
scas
cld
mov
mov
xor
and
and
out
iret
loop
shl
sbb
iret
cmpsl
push
push
lret
in
mov
inc
add
cltd
pop
jecxz
rcrb
insb
jl
cmp
imul
jp
and
add
or
xor
mov
std
out
daa
push
sub
inc
aad
loopne
aam
inc
aad
loopne
adc
roll
and
add
jl
mov
inc
inc
std
shl
scas
inc
std
gs
imul
ret
aaa
out
ja
lcall
jg
scas
jp
sub
add
dec
aad
bound
push
stos
ret
jbe
fsubrl
cmp
pop
scas
xlat
jecxz
jne
add
ret
ja
lock
test
inc
xor
mov
mov
and
cmp
dec
mov
push
rclb
shlb
xor
dec
xchg
sbb
mov
mov
adc
inc
into
je
repz
mov
push
sar
mov
adc
and
xor
incl
or
aaa
fimull
enter
gs
ss
insl
jp
mov
xchg
fxch
rorb
mov
add
leave
dec
inc
lods
push
adc
or
dec
sbb
adc
adc
cltd
nop
int
xchg
push
push
lcall
in
nop
xchg
inc
sbb
mov
mov
xchg
popf
faddl
inc
cmpsb
and
gs
imul
pop
or
mov
inc
cmpsb
dec
xor
hlt
mov
push
and
aaa
imul
ja
in
int
aad
add
daa
pushf
cmp
inc
inc
adc
mov
or
add
sbb
jne
sarb
stos
fildl
jecxz
fldl2t
mov
xorb
xor
bound
jbe
cmp
xor
sbb
push
ret
flds
cmp
cmpsl
xchg
movl
xor
popa
int3
push
out
mov
push
cmp
xor
fldl
dec
adc
mov
pop
leave
jg
icebp
xchg
mov
cmpb
arpl
sub
jbe
adc
ret
pop
repz
sub
cmpsl
and
jg
add
testl
inc
fldt
insb
leave
xchg
jmp
and
std
cmp
inc
adc
cmp
pop
cmp
faddp
dec
cmp
outsl
pop
pop
push
cmp
dec
dec
sbb
imul
fwait
cmp
clc
xchg
push
dec
mov
incb
daa
ret
sub
dec
test
test
mov
js
shl
xor
lret
inc
addr16
imul
loopne
ds
and
sub
js
xchg
mov
aad
mov
xor
sti
mov
dec
dec
into
out
scas
sub
push
add
xchg
dec
stc
out
dec
push
add
mov
push
inc
sub
xor
and
hlt
lds
imul
ret
rcrb
jp
addl
int3
and
fnsave
filds
push
jmp
cld
sbbl
push
test
mov
gs
push
lds
xchg
fwait
xchg
push
lea
movb
jne
and
leave
cmp
inc
mov
dec
pop
or
adc
xchg
shrb
leave
outsl
je
and
ret
mov
jge
fnstenv
sti
xlat
sbb
loopne
push
test
ror
movsl
push
imul
shlb
adc
test
inc
and
std
idivl
push
or
arpl
add
in
xchg
pop
push
mov
xchg
cltd
mov
cmp
jg
mov
xor
stc
icebp
gs
mov
jae
sbb
jle
mov
push
or
arpl
flds
stos
xchg
jl
aas
divb
or
cmp
add
orl
inc
sub
inc
cwtl
xchg
jae
lahf
jmp
cmp
jae
xor
shr
ret
addl
cmpsl
movsl
xlat
xchg
mov
std
fwait
cld
clc
and
jmp
leave
rorl
fistpl
xor
xlat
xor
mov
jmp
jmp
sahf
out
xchg
mov
repnz
add
adc
cltd
mov
ss
scas
sub
es
sbb
repnz
scas
xor
enter
dec
sub
cs
enter
jg
jb
ret
xor
addr16
lret
arpl
and
daa
push
or
jno
pop
leave
shrl
iret
and
xlat
jb
mov
in
jo
lods
xor
je
mov
int
clc
inc
gs
push
mov
bound
in
pop
and
lcall
stos
clc
imul
inc
int
shl
insb
xchg
add
cmp
daa
pop
xchg
adc
mov
rolb
or
fstps
adc
aaa
pop
popa
outsl
nop
dec
sub
push
push
push
js
adc
xchg
xchg
push
clc
pop
div
jbe
xor
sub
movsl
or
addr16
dec
inc
int3
cmpsl
test
adc
add
pop
jmp
loope
mov
or
inc
cmpsl
nop
jae
mov
das
xchg
fst
out
pop
adc
push
clc
push
ja
mov
inc
xlat
and
or
xor
stos
out
sbb
xor
and
mov
mov
mov
adc
repnz
addr16
rcrb
mov
xchg
cmp
imul
xor
movsl
cmp
stc
stos
pop
xchg
imul
add
xor
dec
lods
adc
out
aam
inc
add
lret
cmp
ja
cwtl
in
mov
and
cmc
jmp
subl
jbe
add
pop
push
aam
sbb
clc
bound
arpl
add
and
fs
in
inc
add
popf
mov
insl
adc
mov
mov
cmp
push
in
prefetch
jae
xor
sbb
stc
cwtl
adc
fdivr
xor
inc
fwait
mov
loop
pop
jg
loope
imul
mov
dec
mov
push
pushf
fbstp
xor
aad
add
add
mov
stos
xor
movsl
mov
lods
aaa
aam
ds
lods
pop
mov
xor
in
xchg
pop
fnstcw
mov
mov
orl
loopne
sgdtl
in
jbe
stc
inc
mov
stos
adc
pusha
out
push
dec
roll
loop
inc
mov
mov
add
ja
std
sbb
jecxz
push
xchg
fisttps
pop
cli
mov
xorl
dec
push
fndisi(8087
arpl
mov
jo
popa
lods
mov
clc
dec
mov
jle
rol
or
inc
sub
mov
ja
jle
lods
scas
mov
cltd
mov
pusha
mov
dec
push
mulb
imul
sub
jmp
nop
loop
cs
pop
cmp
jge
inc
inc
push
idivl
dec
inc
fildl
sub
andl
lock
pop
inc
in
push
mov
jmp
cwtl
cmp
loop
or
push
pop
shrl
popa
xlat
or
cmp
cmp
inc
dec
jbe
repnz
push
testl
jo
lret
push
stos
pop
dec
mov
xor
icebp
cld
ffreep
sub
mov
mov
in
push
jl
dec
sub
iret
jae
scas
loopne
xchg
inc
jo
and
lcall
dec
sahf
jns
gs
das
int
xor
repz
mov
nop
repz
push
fcomps
sahf
push
sub
into
mov
cmp
aas
sub
sub
or
fwait
push
ret
stc
mov
sub
pop
cmp
int3
adc
and
lock
mov
push
jecxz
and
sub
pop
mov
lcall
ror
jb
lahf
sub
out
jmp
loop
rclb
or
lods
cmp
pop
fidivrl
dec
pop
ds
ret
pop
jns
xor
fnstcw
clc
scas
rcll
dec
or
cwtl
int
pusha
data16
daa
mov
js
dec
or
push
repnz
mov
pusha
push
adcl
lcall
out
or
jp
pop
pop
lret
push
idivb
mov
mov
adc
push
in
mov
mov
jp
cltd
dec
test
sub
jnp
add
cmp
push
sub
sbb
fcompl
xor
mov
in
sub
mov
test
mov
ja
mov
pop
inc
xchg
je
mov
pop
nop
add
rolb
std
iret
adc
mov
int
push
das
dec
insl
ret
mov
mov
ja
mov
and
mov
rolb
or
leave
int3
cmp
inc
lahf
jmp
mov
mov
xchg
test
dec
pop
xor
out
dec
sub
inc
jnp
mov
pop
loopne,pn
mov
pusha
repz
fldt
stos
outsl
add
movsb
sbb
scas
test
cmp
or
sarl
or
mov
jae
pop
insb
in
call
mov
or
stos
rol
fcmovnb
mov
push
xor
xlat
push
add
mov
sbb
dec
into
pop
sub
add
pop
hlt
mov
mov
cs
push
push
sti
push
jne
add
add
xchg
jns
je
xlat
out
mov
in
jnp
jo
xchg
mov
cli
shlb
mov
cld
lods
lea
imul
std
loope
dec
inc
pop
push
ljmp
rorl
or
cmpsl
icebp
repz
jp,pn
and
leave
pop
push
adc
ficoml
dec
jmp
pop
adc
sub
ret
sti
mov
fadds
or
hlt
andl
ret
and
mov
loopne
push
ret
leave
sahf
xor
push
scas
fsubrl
cmc
sbb
test
or
imulb
cmc
rorl
push
outsb
or
in
dec
and
icebp
sahf
mov
sbb
out
push
jnp
mov
dec
daa
pusha
in
cmp
mov
aas
mov
lcall
mov
fbld
xchg
out
and
add
mov
mov
adc
or
mov
cmp
arpl
xor
cmp
push
pop
xchg
cli
mov
push
jp
fsubl
and
das
pop
inc
mov
dec
repnz
sbb
inc
lahf
repnz
push
aas
cwtl
int
clc
out
outsl
jbe
mov
lock
cld
ja
addr16
mov
push
xorb
inc
scas
adc
ss
jnp
jp
hlt
mov
fildll
inc
jns
mov
jae
int
sub
out
icebp
xchg
inc
enter
scas
pop
or
aaa
mov
stos
mov
cwtl
mov
push
stc
add
dec
aad
subl
dec
insl
sbb
mov
sub
dec
push
mov
add
gs
sub
sarl
jmp
enter
popf
adc
dec
inc
or
xchg
push
add
jge
idivb
push
hlt
cmp
push
aad
mov
test
cmc
aam
mov
aad
sbb
in
mov
mov
outsl
jbe
sbb
jae
mov
cmp
and
dec
ret
sahf
push
mov
in
clc
mov
std
aaa
mov
xor
sub
adc
inc
dec
mov
pop
insl
cmpsl
js
push
adc
out
adc
call
or
jae
push
bound
scas
cmpsl
jecxz
dec
dec
jnp
xchg
fxch
lods
xchg
adc
stc
mov
aaa
das
cld
lahf
out
jns
jne
je
aaa
stos
shlb
mov
scas
mov
iret
stos
test
inc
enter
addr16
sub
test
inc
mov
bound
outsb
ja
dec
clc
cmp
adc
int3
fstpl
aaa
gs
add
mov
cmp
and
inc
dec
xor
pusha
mov
fmuls
es
cwtl
push
push
inc
sub
or
fistpll
push
in
scas
jl
ss
jno
mov
jp
push
mov
pop
push
sbb
dec
adc
sar
sub
mov
mov
repz
adc
call
and
adc
mov
or
and
repnz
mov
bound
in
mov
xor
std
jp
jo
push
pop
fnstcw
adc
sbb
sbb
fs
test
ret
bound
pushf
and
and
outsl
test
xor
jo
imul
pop
sbb
sub
pop
test
jl
testl
lcall
xchg
jle
inc
push
pop
das
hlt
pop
flds
call
clc
jno
cmp
dec
arpl
and
push
push
loope
movsb
popf
cmp
pop
dec
jge
mov
adc
leave
gs
test
cmp
pop
adc
outsb
loopne
stc
and
mov
js
push
add
aaa
mov
and
xchg
outsl
add
mov
jnp
push
stos
mov
and
sbb
add
out
repnz
sahf
and
and
inc
jno
jmp
xorl
jbe
mov
fwait
testl
insb
sbb
movsl
xchg
add
bound
adc
inc
and
push
clc
adc
fs
fninit
pop
das
sub
leave
add
xlat
mov
or
push
adc
lret
xchg
in
pop
nop
add
lock
and
and
or
xchg
pushf
jae
gs
out
rcrl
sbb
mov
cmpsl
and
pop
ror
subl
roll
sbb
or
leave
pop
cmpsl
dec
adc
loopne
jne
lds
mov
jecxz
xchg
pushf
xor
add
mov
and
addr16
out
xor
and
cmp
adc
push
pop
cmp
sbbb
jecxz
mov
lret
cmp
rorl
and
xor
stos
sarl
pop
adc
popa
add
dec
add
data16
fmuls
push
add
repz
outsl
mov
mov
xchg
cli
xacquire
lret
push
mov
mov
repnz
es
or
mov
loop
loopne
push
mov
add
xchg
insb
sub
add
bound
cli
std
jmp
fidivrs
xor
test
xor
dec
push
push
push
data16
adc
mov
pop
mulb
movsb
push
test
dec
inc
lret
dec
aaa
cmp
pop
jmp
push
push
mov
sbb
pushf
sub
js
aas
mov
popa
inc
cmp
pop
pusha
scas
push
stc
adc
test
jb
pop
mulb
inc
jle
outsl
das
xor
push
push
icebp
inc
popf
mov
push
xchg
lea
in
stc
or
enter
or
int
lahf
pop
push
into
cwtl
test
fdivs
jae
pop
repnz
sub
das
lods
jae
test
inc
inc
icebp
addb
mov
push
mov
pop
sub
iret
les
mov
imul
inc
xchg
fwait
push
add
sbb
out
gs
adc
loop
loop
movsl
jp
loopne
enter
and
pop
aad
into
sbb
fbstp
mov
mov
adc
push
jle
mov
mov
push
repnz
xor
push
lret
push
and
pop
cmpsl
cmp
push
mov
inc
and
mov
hlt
inc
mov
xchg
pop
jl
dec
scas
xor
jae
cmp
shrl
fdiv
stos
xor
lods
repnz
jns
pop
ss
jae
xchg
adc
inc
roll
mov
adc
cmpsb
or
call
xchg
fs
mov
out
fwait
cmp
push
push
lock
xor
popf
shlb
push
cmp
adc
popa
cmp
inc
lahf
test
js
sti
jp
xorl
ss
call
sbb
pop
inc
add
dec
scas
push
aas
xchg
sbb
xchg
clc
xchg
insb
cmp
aam
pop
mov
push
scas
hlt
lea
mov
cmp
jbe
sbb
insb
cmpl
mov
sti
or
je
cld
or
sub
inc
insb
rcrb
data16
push
xchg
xchg
push
orl
dec
hlt
clc
aas
dec
repz
pop
mov
add
inc
add
test
inc
in
cmpsl
push
shrl
dec
sti
jge
int3
fsts
mov
aam
insl
loope
std
inc
ss
dec
jae
inc
dec
mov
dec
xor
and
das
sbb
cmpsb
aaa
out
das
sub
outsb
fsubrl
scas
shrb
jb
mov
pop
into
lret
jne
adc
in
pop
mov
mov
je
sub
bound
fldt
stos
clc
mov
ds
cmp
divl
inc
mov
pop
cmp
sti
imulb
mov
cmp
adc
into
cwtl
pop
icebp
xchg
push
cmp
ret
loop
pop
push
adc
ljmp
xchg
sub
or
in
add
cmp
aad
fwait
xchg
lock
sbb
inc
mov
aam
push
aad
or
dec
pop
add
xchg
pushf
scas
cmc
sbb
bound
fwait
add
inc
xchg
fsubp
mov
popf
test
mov
outsb
cmp
add
jp
sbb
or
pop
jbe
dec
sahf
sub
lahf
jle
lds
sbb
xchg
lret
mov
pop
fadds
es
cmp
lds
popa
push
lahf
test
lret
jnp
and
jne
dec
in
cmc
fwait
dec
mov
fnsave
mov
mov
in
pop
das
daa
mov
fisubl
mov
dec
jp
addl
sbb
idivb
cmp
xor
clc
daa
sbb
mov
repz
mov
inc
mov
or
inc
sbb
dec
mov
adc
and
push
aaa
roll
mov
xchg
sub
push
cmp
js
shll
or
cmpsl
inc
dec
or
icebp
push
icebp
add
ds
lcall
jb
pop
rorb
test
add
popf
icebp
xchg
lock
push
testl
and
and
fisubl
or
mov
hlt
adc
mov
xor
jg
adc
lret
push
inc
mov
xchg
add
in
gs
loope
jg
push
out
dec
pop
in
es
test
add
push
fisttpll
xchg
shll
pop
jg
pushf
repnz
jg
scas
subb
jmp
mov
pop
xor
inc
inc
inc
inc
jno
insl
popw
daa
loope
xchg
cli
mov
shr
es
test
push
and
jp
in
aam
in
inc
jno
movsl
js
dec
scas
das
sub
adc
aaa
clc
mov
inc
js
push
jmp
movsl
imulb
push
outsl
repnz
mov
cmp
into
lods
ret
adc
pop
dec
test
repnz
dec
cld
je
pop
add
jle
stos
add
cs
mov
loopne
xchg
cltd
cmp
pop
nop
fsub
jle
call
xchg
xchg
data16
jne
cmp
fsts
cmpsl
adc
pop
mov
in
aaa
adc
cmp
adc
cmpsb
mov
cmp
push
jge
insb
xor
insl
bnd
push
repnz
sub
cmp
leave
stos
shlb
adc
cmp
mov
imul
mov
ja,pt
sub
cmpsl
lahf
shll
mov
nop
jae
mov
or
ficomps
jle
les
daa
jmp
and
sub
in
into
push
or
fsubs
into
or
and
ljmp
add
adc
lock
aam
int
or
jg
movb
or
jns
loopne
sti
daa
popf
js
lea
outsb
mov
scas
ljmp
test
loopne
in
stos
test
push
pop
lret
xlat
mov
xchg
inc
sbb
stos
push
mov
adc
push
out
cld
lds
and
adc
cmp
inc
enter
movsb
xchg
cwtl
pop
jge
pop
fstpt
test
cmp
call
pop
call
or
add
lret
imul
mov
pop
mov
jecxz
out
in
std
rol
or
sub
inc
push
sbb
and
sub
mov
jae
xchg
or
mov
jmp
lcall
loopne
mov
inc
scas
clc
mov
inc
insl
and
jge
or
cmp
in
mov
push
mov
mov
adc
and
mov
pusha
dec
and
jno
mov
mov
add
pop
call
movsb
xlat
xor
mov
xchg
cmp
and
repnz
stc
lea
cmpsb
mov
out
in
and
xchg
sub
fcoml
scas
dec
daa
mov
jb
aam
pop
loopne
add
cmp
add
push
sub
arpl
dec
xorb
rcl
movsl
jns
and
pop
es
repnz
mov
pushf
rcll
outsl
in
orb
jo
out
outsl
mulb
jae
sarb
mov
add
sbbl
add
or
ja
adc
les
fdivs
push
pop
call
fucom
xchg
push
inc
push
aas
add
jno
mov
jb
mov
in
sbb
cmovbe
and
stos
mov
adc
leave
cmp
cmp
out
sub
enter
test
scas
xor
mov
addr16
add
push
cwtl
fiadds
dec
mov
sub
scas
cmp
imul
scas
icebp
test
jbe
push
outsb
inc
sahf
test
add
jnp
inc
cmpsb
or
aad
nop
cld
sub
jno
xchg
mov
pop
leave
das
xor
jp
jb
push
in
inc
xor
inc
and
push
ret
mov
jae
or
add
sbb
je
sub
cmp
rorb
iret
lcall
je
adc
popa
xchg
ret
in
mov
sbb
in
adc
sub
cmp
rorl
xor
loop
xchg
sub
add
cs
dec
sahf
mov
or
adc
stos
push
mov
push
inc
jmp
je
jno
mov
push
mov
and
mov
fcompl
call
mov
js
repnz
test
add
sti
mov
mov
cmp
lahf
cmp
dec
subb
in
bound
fisubs
shrb
mov
arpl
dec
cwtl
mov
pop
push
cli
pop
cwtl
mov
insl
or
aad
or
test
imul
imul
or
aaa
pusha
jno
pop
pusha
mov
movsl
enter
aam
bound
jno
sar
fcmovbe
ja
fcompl
pop
xor
into
xlat
out
sbb
insl
pop
fstpt
fldt
les
jno
mov
cmp
and
insb
xchg
cmp
inc
jecxz
cmp
int3
sub
cmpsb
js
inc
sbb
xchg
mov
icebp
sbb
pop
repz
xchg
and
out
in
loope
jns,pt
lahf
sti
fisttpll
and
gs
cs
adc
and
push
jp
xchg
mov
jecxz
shll
xor
in
aaa
xchg
in
push
hlt
rorb
pop
pusha
loopne
dec
and
shlb
sti
js
lds
mov
arpl
scas
sbb
shlb
push
rolb
sbb
rcrb
les
jae
je
lret
lods
imul
pop
dec
cmp
adc
das
cwtl
jno
shr
inc
sti
pop
dec
pop
int3
scas
test
sub
lcall
push
enter
ret
sbb
lods
push
fisubrl
dec
cmpl
outsb
clc
lret
mov
cmp
mov
shll
jns
icebp
shll
fsubrs
out
lods
push
jae
imul
mov
imul
fs
aaa
mov
je
pop
pop
shrb
rclb
pusha
test
mov
in
sub
fistpl
notb
cmp
dec
cmpsb
out
dec
sti
mov
cs
fdivrl
lret
into
imul
divb
sti
inc
div
cmp
aas
mov
pop
dec
imul
fsubrl
cmpsb
insb
movb
jp
sarl
mov
push
test
inc
adc
xchg
and
lea
mov
jbe
jnp
fstl
mov
mov
xchg
mov
decb
popa
imul
scas
sub
dec
imul
das
xor
test
test
adc
jb
insb
sbb
outsl
cmp
sbb
addr16
and
lods
lds
in
iret
xchg
mov
xchg
insl
loope
push
ret
mov
scas
cs
cs
gs
xlat
mov
jnp
out
stos
sti
lcall
xchg
adc
sbb
xchg
xchg
jno
test
lcall
popa
shlb
lcall
push
pop
mov
repnz
push
ljmp
cli
fcompl
mov
out
pop
jo
lock
jp
popa
shl
cmp
ret
ss
popa
loop
inc
fsubl
insl
pop
xchg
mov
sti
mov
xchg
cmp
outsb
sbb
cmp
std
xchg
pushf
or
push
lods
cmp
push
pop
pushf
aas
das
int3
inc
lods
aaa
cmc
xorl
sub
shll
add
inc
dec
adc
xor
cs
push
pop
push
fsts
inc
enter
dec
xchg
inc
pop
test
in
ss
sbb
xchg
scas
gs
call
inc
pop
not
lea
sbb
xchg
fldl
sarb
pop
jne
mov
aad
mov
mov
aam
inc
mov
hlt
sarb
xchg
push
bound
jmp
mov
in
add
or
jo
test
mov
xchg
in
add
pop
cli
pushf
lcall
aas
mov
mov
out
mov
aam
fcoml
xor
add
int3
push
adc
out
icebp
jbe
pop
ds
xlat
mov
jg
pop
repz
xor
popf
test
inc
add
shr
sbb
fcoml
outsl
inc
xchg
fstl
cmp
mov
jmp
movsl
roll
mov
or
outsb
or
sbb
mov
fnstsw
sub
movsl
xor
jbe
mov
push
lret
cmpsb
in
jno
push
jae
movsb
push
test
mov
add
int
rolb
dec
jb
test
arpl
xor
es
xchg
pop
fstpt
mov
sbb
test
adc
pop
cmp
fsubrl
repz
inc
push
inc
gs
iret
add
aaa
dec
xchg
cs
sub
or
xchg
or
mov
imul
clc
ss
or
lock
jmp
or
pop
sub
test
or
hlt
inc
ss
inc
out
lods
inc
pop
cmp
jl,pt
cwtl
push
cmp
cmp
pusha
test
jne
sub
and
ljmp
push
fisubl
mov
dec
aas
jge
xor
mov
addl
mov
rcll
stos
shl
cltd
dec
xchg
mov
jne
mov
sbb
mov
les
pop
adc
add
rclb
and
mov
mov
std
fucomi
fisubl
xor
push
mov
xchg
adc
andl
xor
dec
xchg
lds
cmp
mov
xchg
jg
or
lea
frstor
adc
xchg
jbe
js
pop
aas
mov
dec
xor
addr16
aaa
adc
das
and
iret
inc
movsb
cs
push
pusha
out
inc
inc
sub
pop
sbb
inc
scas
jge
xchg
xchg
sbb
xchg
dec
fidivrs
in
lcall
inc
xchg
or
sbb
insb
int3
inc
cld
inc
cmp
rorl
adc
test
mov
mov
out
lea
or
std
je
xor
add
jp
mov
mov
sbb
sbb
and
mov
or
dec
push
pop
push
and
mov
xlat
pop
js
lahf
push
pushf
cmp
jecxz
fstl
ret
sbb
sub
xchg
jecxz
mov
scas
rol
aam
sbb
in
jo
je
hlt
sti
pop
xchg
aas
insl
xor
xor
and
push
add
imul
adc
xchg
cmpsb
jge
add
out
addl
insb
out
sbb
push
jg
pop
mov
popf
or
insb
xchg
push
int3
es
adc
imul
mov
fsubp
mov
xor
cmp
or
inc
shlb
in
movsb
stos
sbb
popf
push
dec
cmp
int
test
or
test
adc
add
orl
ja
test
repz
pop
sahf
pop
test
adc
adc
push
xchg
sub
sahf
or
insb
or
sbb
nop
jns
pmuludq
pop
and
adc
adc
sbb
les
or
sbb
xchg
shl
sti
fsubl
decb
push
xchg
mov
addr16
test
scas
push
out
imul
jp
xlat
cmp
dec
jne
out
popf
add
mov
mov
jl
aad
js
mov
xchg
jle
stos
push
fisubrl
into
repnz
insb
out
sets
sub
jecxz
out
mov
xor
push
sub
in
lds
jo
inc
or
mov
mov
imull
les
popa
adc
inc
in
leave
paddw
push
cmp
clc
adc
aam
lods
lcall
jnp
jecxz
out
cmp
and
subb
adc
cmp
sbb
out
and
jb
mull
stos
sub
and
ss
add
subb
push
cmc
or
push
xchg
mov
out
inc
das
rorb
mov
ret
jne
mov
add
sbb
push
fldenv
or
inc
xchg
xchg
or
xchg
sti
sahf
stc
shlb
sti
stos
rclb
lock
inc
cmpb
lahf
xor
cmc
jle
jno
pop
filds
pop
nop
dec
jns
add
clc
mov
pop
js
cld
pop
insb
push
pushf
out
xlat
repz
pop
sbb
dec
sub
push
test
jmp
stos
cld
inc
out
mov
out
or
stos
test
adc
add
push
lods
sti
loope
cmc
loope
adc
add
mov
cmc
loopne
adc
sbb
int3
pop
jbe
out
inc
pushf
mov
push
xor
pop
jb
inc
and
push
testb
fsubr
repz
add
lods
sbb
hlt
jne
push
fwait
imul
jae
pop
and
dec
js
push
mov
jnp
orl
xor
jbe
mov
mov
jmp
jo
cs
les
push
insb
call
in
mov
fs
enter
ret
xchg
and
mov
mov
xchg
jle
idivl
std
out
adc
movsb
incl
ds
push
in
pop
adc
outsb
dec
or
xor
pop
pop
sbb
lea
or
adc
adc
lret
xor
sub
insl
in
int
sub
lds
in
xchg
out
ret
fidivs
cmc
sti
stos
add
es
mov
mov
int3
adc
pushw
dec
push
leave
jnp
inc
fldenv
aas
jge
enter
mov
test
jecxz
add
iret
jp
sbb
shll
addr16
sbb
pop
addr16
inc
or
cmp
inc
pop
ds
arpl
sbb
pop
mov
rorb
in
roll
cmp
sub
or
dec
ljmp
lea
dec
std
mov
shlb
jmp
je
push
out
cwtl
jbe
xchg
mov
dec
sbb
gs
pop
call
sub
popf
shll
daa
popa
pop
fadds
add
cld
mov
push
fs
mov
pop
xchg
lods
sbb
sub
mov
aam
sub
pop
bound
aad
xchg
fcoml
pushf
inc
scas
fs
cmp
fcompl
mov
push
out
cmc
repnz
lcall
ss
inc
jecxz
push
rol
dec
fiadds
mov
lock
lea
cmp
ljmp
mov
jo
outsb
call
mov
xor
mov
push
pop
movsl
clc
xor
ret
pushf
std
dec
daa
stos
cmp
dec
xor
negb
push
push
scas
daa
outsl
stos
cltd
out
dec
jge
jge
daa
mov
mov
push
dec
dec
ljmp
les
mov
and
roll
ss
aam
jp
ss
sahf
loop
sbb
inc
mov
ret
cmp
pop
push
xor
repnz
jns
ljmp
pop
jge
jno
add
ret
jno
neg
lahf
fwait
stos
push
lcall
inc
fsts
decl
and
cltd
xchg
test
jp
push
cltd
imul
scas
outsl
sub
mov
push
inc
orl
inc
lret
xchg
test
pop
int
inc
in
daa
lret
test
and
jge
jge
jbe
sub
lods
pushf
stos
leave
push
test
lds
repnz
xor
fcmove
mov
or
or
pop
push
ja
pop
fwait
sub
test
jnp
shlb
inc
mov
call
inc
jcxz
cld
aaa
cmp
test
xor
addr16
daa
and
mov
out
adc
je
mov
mov
stos
lret
sbb
jmp
popf
mov
popf
cmp
cmp
js
ljmp
lods
sub
add
xchg
fimull
jbe
je
dec
ret
shlb
dec
ds
add
mov
adc
popa
xchg
mov
mov
sti
cltd
mov
stc
aad
pop
std
aam
aaa
xor
fwait
stos
neg
popf
xchg
sub
js
fldenv
lock
pusha
mov
jbe
lret
cmc
pop
inc
pop
sbb
jge
jg
mov
stc
xor
test
jecxz
adc
sqrtps
dec
dec
xchg
iret
cmpl
push
into
pop
ret
repz
jno
inc
insl
and
sbb
ret
dec
fnstsw
mov
inc
mov
push
push
lcall
xchg
mov
push
out
and
repnz
pop
ret
mov
xchg
pusha
int3
push
lcall
or
pushf
add
mov
in
fdivrs
jnp
push
repz
js
cs
push
in
movsl
repnz
mov
ss
sbbb
xlat
aam
sub
sub
sub
mov
mov
mov
aaa
sub
das
je
test
push
jne
fmull
mov
mov
scas
mov
cmc
sahf
cltd
xchg
fisubrs
outsb
out
in
jns
jbe
aam
jg
mov
dec
and
in
js
lods
aam
push
subl
ja
mov
clc
xor
scas
push
mov
cli
mov
mov
ficoms
jbe
ss
mov
pop
lea
xchg
es
nop
xchg
push
inc
sub
pusha
testl
nop
push
or
jmp
popa
fs
mov
lods
out
mov
nop
sbb
xchg
push
adc
scas
roll
xor
cli
and
jo
and
cmc
aaa
xadd
add
enter
dec
mov
cmc
loopne
cltd
cmp
pop
push
add
std
fidivrl
repz
or
sub
mov
imul
lods
inc
add
outsb
mov
into
sarb
or
and
lds
xor
pop
add
xor
mov
jae
popf
xchg
cmp
lcall
jle
and
dec
into
add
sbb
aas
cmp
out
adc
xchg
jne
ret
push
and
fimuls
cmpsb
push
ljmp
mov
inc
inc
stos
jae
xor
rcr
fcmovbe
cmp
jp
pusha
or
pop
leave
lcall
or
out
jge
xchg
insb
ss
jns
push
or
mov
fs
mov
cmpsl
pop
dec
pop
enter
mov
imull
mov
jb
push
aas
pusha
fdivs
pop
xor
into
mov
mov
push
xchg
scas
inc
jne
jns
jecxz
jno
mov
mov
cmpsb
ret
popa
inc
push
testb
sarb
pop
addl
fcmovu
enter
hlt
xchg
push
and
fnstenv
aas
push
mov
fnsave
cmpsb
pop
mov
mov
int
call
jae
mov
rcrb
mov
ja
out
ret
aad
jl
add
jge
push
adc
or
out
mov
push
jecxz
xor
xlat
xchg
pop
imul
push
push
push
lock
in
insl
lods
pop
cld
add
cmp
push
or
aaa
mov
loopne
xorb
decb
bound
mov
insb
sbb
sbb
cmp
push
sbb
iret
sub
jae
pop
inc
xor
jl
pop
add
movsl
xchg
dec
or
mov
test
out
repz
imull
push
inc
nop
xlat
movsl
xchg
jno
cmp
pop
les
fisubl
push
pop
incl
inc
stos
icebp
xlat
insb
xor
jecxz
mov
mov
sbb
or
sarb
inc
jmp
adc
jns
cmp
pop
cltd
inc
les
push
jbe
mov
xlat
adc
into
adc
orb
mov
loopne
add
mov
orl
jmp
jo
jg
add
inc
jg
outsb
mov
sbb
lods
repnz
and
popf
cmp
dec
insb
mov
movl
and
xlat
inc
int3
inc
sti
fadd
movsb
xlat
sbb
fsubrs
dec
nop
and
sub
or
shlb
sub
jmp
ljmp
fwait
or
mov
mov
in
push
mov
mov
jp
in
inc
push
pop
or
jno
inc
subb
adc
pop
in
lods
xlat
cmp
es
rcrb
and
add
div
sarb
xchg
sub
push
mov
cmp
hlt
push
sub
jo
dec
jmp
jb
lods
sbb
loop
les
sub
jle
in
xor
inc
pop
sub
and
cmp
adc
in
loope
pop
stc
inc
outsl
scas
or
mov
cmp
ret
ds
mov
iret
sbb
ror
push
adc
repz
pusha
sbb
push
shll
sbb
xor
addl
dec
shr
lods
scas
inc
std
dec
add
ss
fsub
scas
cmp
insl
cmpsb
mov
push
rorl
add
dec
pop
or
jge
shr
sub
aas
or
pop
and
test
loope
repnz
mov
into
or
mov
addb
inc
out
and
or
jmp
int
adc
out
sbb
mov
outsb
inc
xchg
shlb
out
push
pop
mov
push
mov
or
inc
sbb
push
jb
sti
rcr
mov
mov
loope
out
jg
fisttpll
mov
push
cmp
cmp
enter
jbe
inc
cmp
pusha
je
dec
subb
fdivl
into
ret
daa
push
fldenv
mov
xchg
out
jmp
aas
push
es
aam
or
sbb
xchg
repnz
es
sbb
testb
pop
cmp
lcall
add
pop
mov
scas
punpckhwd
pushf
jl
and
movsb
jmp
cltd
in
jg
lcall
jmp
mov
outsl
nop
cmp
ljmp
dec
xor
push
xchg
fs
xor
inc
out
fsincos
push
movsb
mov
push
sbb
scas
mov
fdivrs
sub
push
sub
xorb
cs
sbb
or
or
or
mov
jns
xor
stos
sar
inc
pop
scas
add
jne
mov
sahf
lods
scas
test
scas
sub
push
sbb
mov
mov
adc
or
add
mov
cmp
fsubrs
iret
jp
hlt
repz
mov
mov
xlat
in
jmp
daa
mull
jns
push
and
sbb
iret
xor
lods
ret
test
mov
clc
or
retw
dec
mov
pushl
pop
and
sub
xor
imul
insb
dec
inc
inc
or
cmc
mul
mov
js
enter
push
push
mov
dec
xchg
outsl
cmp
jo
dec
mov
lea
out
in
dec
mov
cmp
rorl
sbb
cmp
out
xchg
stos
or
dec
mov
outsb
int
mov
fstps
scas
xchg
cwtl
push
aam
fsubrl
jl
jnp
lea
pop
nop
out
xlat
xchg
pop
push
mov
inc
xchg
pop
pushf
daa
mov
dec
lds
filds
pop
mov
cmp
outsb
sbb
xor
adc
cmp
add
flds
cmpsb
or
shll
call
daa
and
xor
hlt
daa
lea
add
outsl
jmp
mov
add
adc
mov
ss
jmp
add
mov
ret
lahf
popf
xchg
push
xchg
xor
jnp
ds
int
jle
jo
mov
test
mov
mov
push
add
and
pushf
imul
adc
jbe
mov
repz
push
fildll
jmp
adc
or
xchg
pop
inc
lret
pop
dec
loopne
jns
adc
rorl
testb
jecxz
hlt
jo
iret
dec
adc
pop
pop
test
addr16
pop
push
into
mov
lret
adc
addr16
lcall
adc
xchg
or
mov
repnz
loope
and
sbb
cmp
pop
dec
aam
ret
roll
jno
adc
jnp
jb
popf
das
pop
loop
push
jge
pop
fidivl
mov
mov
scas
imul
es
ljmp
fnsave
in
addr16
xor
and
cmp
ja
and
sub
in
scas
lds
lahf
shll
leave
fcomip
jmp
mov
insl
sbb
jne
inc
mov
sub
imul
stos
arpl
or
in
xchg
mov
xchg
jns
xchg
pop
xor
and
mov
fs
mov
dec
mov
lock
mov
daa
movsl
aaa
int
insb
out
lds
jbe
mov
stc
aad
mov
and
out
adc
pop
jb
dec
ljmp
mov
sbb
xor
loopne
jecxz
or
jns
sbb
mov
out
jne
xor
inc
jae
jecxz
adc
testb
in
out
sub
jp
test
aas
inc
test
xchg
add
push
and
xor
lahf
popf
pop
cwtl
or
ret
dec
fdivr
rcll
mov
pop
rclb
int
dec
lcall
xor
scas
pop
add
out
cmp
test
js
inc
je
xchg
test
das
test
mov
xor
hlt
fidivl
xor
lock
push
pop
out
push
mov
mov
aam
xor
inc
push
xchg
xchg
aad
pop
and
push
ret
ret
and
xor
clc
in
cmc
addl
jne
sub
pop
insl
mov
adc
rcll
adc
scas
adc
stos
jno
inc
ret
jmp
movsl
repnz
in
es
and
xchg
scas
pop
ljmp
pusha
out
hlt
int
mov
or
mov
cmp
cwtl
mov
jbe
pop
cmp
jecxz,pn
fidivrl
jbe
fildl
cmp
ljmp
xchg
and
das
adc
sbb
push
stc
mov
push
jns
dec
jb
cld
fsub
lahf
ss
mov
mov
fisttpl
or
ds
xchg
icebp
sbb
jg
subb
or
int3
ja
push
xchg
pop
hlt
jno
xchg
aaa
and
or
jne
sbb
loopne
test
sbb
cmp
xchg
roll
clc
adc
addl
rcrl
jne
xchg
bound
pop
adc
stos
imul
je
or
sub
aaa
das
cmp
pop
insb
outsb
cmpsl
mov
es
ss
outsb
jle
xor
mov
sub
jo
sahf
jle
sbb
fst
repz
jle
enter
test
sub
or
fildll
movsl
add
adcb
aam
les
inc
shrb
movsb
dec
je
mov
mov
pop
xor
fisubrs
fisubrs
cmp
sbb
les
and
jle
lcall
pop
or
adc
jns
mov
inc
add
icebp
mov
sub
mov
cmp
mov
cmc
xor
call
movsb
or
mov
xchg
stc
jp
pop
aas
pop
bound
das
add
aam
clc
aas
test
adc
mov
shll
mov
sahf
jl
lcall
add
orb
outsb
in
stos
das
decl
arpl
lods
mov
ret
leave
pop
in
push
lock
cmpl
jg
int3
or
jnp
in
lods
enter
sarl
or
in
icebp
leave
xchg
mov
std
mov
aam
ss
icebp
int3
notl
inc
mov
adc
cmpsl
sbb
lcall
sub
stc
inc
je
outsl
xlat
cmp
cmp
xchg
outsb
shlb
out
call
test
sbbl
in
cmpsl
xchg
es
xchg
pusha
ret
add
rcrl
out
sahf
and
leave
loopne
es
hlt
push
sbb
push
mov
add
adc
cld
outsl
adc
push
cmc
loopne
push
int3
fists
and
mov
xchg
aaa
call
mov
stc
xchg
mov
xor
adc
jae
xchg
rorl
cmp
jmp
mov
out
adc
fs
xchg
stos
insb
sub
lods
orb
or
pop
jo
push
inc
fs
inc
xchg
and
fwait
enter
cwtl
flds
adc
cmpsl
repz
les
sbb
das
adc
or
jns
add
movsl
dec
jns
sub
mov
xor
adc
pop
in
xor
jns
jge
std
ret
xchg
out
lea
insl
pop
les
xchg
mov
mov
xor
add
cli
cmp
dec
call
cmp
fdiv
lods
repz
stc
pop
popf
push
sahf
stos
and
insb
out
pop
xchg
push
fs
repnz
pop
xor
ret
movsl
sbb
xchg
add
lock
mov
jns
xor
cmp
mov
in
jecxz
mov
div
push
add
je
inc
aad
lret
pop
inc
pop
mov
pop
jg
iret
push
jns
out
in
xlat
outsb
lods
out
enter
xchg
dec
pop
cmp
pop
jl
ja
repz
pushf
xchg
push
xor
cmpsw
movsb
mov
fnsave
in
jle
lahf
push
js
in
mov
xchg
dec
gs
loop
xchg
and
dec
or
adc
adc
dec
sub
stos
fwait
xchg
jb
or
lea
adc
sbb
push
and
imul
fbld
pop
aam
adc
js
test
pop
jne
cwtl
lock
sub
mov
das
xchg
je
jg
scas
lock
out
fimuls
cmp
cwtl
test
mov
out
mov
add
sub
push
jno
dec
cmp
xorl
xor
jl
jp
jne
fs
add
push
jne
adc
scas
xchg
aad
xchg
lods
fwait
or
scas
xchg
stc
add
mov
sub
push
xor
sti
or
in
mov
mov
jl
pop
dec
adc
mov
jmp
and
jae
mov
fistpll
ds
inc
xchg
cld
dec
in
mov
mov
pop
jmp
cltd
mov
mov
mov
lahf
stos
iret
rorb
and
mov
sub
dec
pop
ds
fstps
lods
or
xorl
jg
js
js
bound
dec
jne
mov
pop
nop
sbb
insl
mov
in
mov
mov
mov
dec
pop
add
ret
sub
cmpsl
inc
add
lods
push
and
lret
jg
cmpsl
daa
test
sahf
cltd
js
aaa
inc
dec
pop
iret
adc
nop
and
out
faddp
sbb
inc
mov
fistpll
jbe
xorl
imul
lods
xchg
xor
sbb
sub
outsb
adc
fdivp
int3
lret
insl
movsl
rcll
and
int
jno
test
lret
or
xor
push
lods
push
mov
ret
fwait
mov
adc
les
push
into
pop
jl
cmp
movsb
add
mov
add
scas
les
push
shlb
xor
in
mov
hlt
push
bound
jge
testl
inc
or
cs
push
jle
inc
rorl
addr16
pop
imul
mov
daa
jbe
imul
dec
loopne
and
xchg
pop
jb
lds
fstps
adc
push
shr
scas
xlat
in
mov
jnp
lock
test
aaa
rcrb
xchg
xor
lret
rolb
clc
mov
pop
cltd
jmp
jno
shlb
sub
aaa
pop
push
shrl
out
inc
repnz
int3
xchg
stos
push
les
jnp
cs
js
and
gs
pop
cmpsb
icebp
or
mov
clc
xor
mov
call
mov
xchg
insb
mov
and
sbb
subb
xor
dec
pop
dec
cs
mov
xchg
jecxz
je
repz
add
adc
fisttpl
movsl
fistpll
mov
and
stos
adc
pop
jge
add
xor
test
adc
sbb
stc
mov
cld
pop
add
adc
or
jo
aas
xor
divb
je
js
inc
xchg
sbbl
xor
andl
jmp
sbb
testl
out
sub
mov
mov
inc
push
hlt
inc
movsl
inc
jle
push
inc
sub
cmp
jns
stc
fidivrl
sbb
rcl
adc
and
enter
fcompl
jnp
lcall
data16
mov
dec
cmp
pop
and
loop
jge
inc
lcall
rcll
je
cmp
into
aad
xor
scas
xchg
sbb
cmp
cmp
cmc
roll
cmp
out
and
xchg
in
aas
imul
stc
es
out
mov
or
add
leave
das
stos
es
push
pop
xchg
mov
sbb
imul
inc
xor
das
add
add
jb
shll
ljmp
push
inc
push
stos
fisubs
popl
iret
or
mov
adc
mov
or
test
xchg
loopne
sti
popa
sbb
mov
rol
jnp
mov
mov
inc
push
jge
ds
inc
or
sbb
add
gs
and
dec
repz
push
imul
mov
iret
sub
adc
xchg
fcmovnb
hlt
data16
insb
and
fwait
sti
cmpb
jns
add
sahf
pop
cld
das
push
add
int
aaa
push
icebp
pop
jle
push
dec
xorl
inc
or
adc
mov
cli
inc
cmp
shrl
pop
mov
xchg
lods
xor
ljmp
addb
jmp
xchg
cld
int3
lock
mov
and
add
xor
sbb
jmp
cmp
mov
inc
out
pop
adc
and
push
adc
stc
fcoms
or
mov
jns
push
sbb
pushf
les
fs
sub
cmpsl
mov
lahf
mov
pop
jne
inc
jnp
mov
mov
sub
test
jmp
pop
imul
test
and
sub
fwait
push
adc
or
pusha
jae
dec
jns
adc
ja
push
imul
push
cmc
push
je
jle
inc
adc
enter
jmp
pop
push
sub
pop
xor
mov
mov
push
push
pop
loop
add
sbb
sub
pop
adc
je
js
mov
jecxz
xor
xor
aam
cmp
jo
stos
lock
pop
dec
shrb
push
cmp
popf
xchg
mov
cmpsl
push
xchg
nop
sub
fwait
std
xchg
mov
movsb
sbb
and
test
and
mov
fwait
pop
ds
or
mov
sbbl
mov
hlt
jmp
lret
ljmp
shll
sbb
mov
mov
cmp
xor
cmp
mov
xchg
movsl
in
shr
cmc
lahf
ret
and
cmp
sub
jle
cmp
push
test
sub
ret
jle
xor
jb
fs
fdivs
mov
push
cmp
push
cmpsb
dec
ljmp
push
shlb
jae
mov
aam
loop
sbb
sahf
test
mov
mov
and
std
call
or
mov
shrb
out
stos
jecxz
shll
fxch
inc
jle
and
movsl
test
ja
cltd
clc
ja
jbe
jg
mov
lock
jl
shll
mov
and
ret
fucomip
jb
or
ljmp
xchg
cld
sbb
dec
push
lahf
xchg
cld
imul
cltd
push
nop
ds
cmp
inc
inc
fcoms
nop
push
dec
cltd
xchg
mov
mov
lcall
push
imul
sub
jbe
cmc
ss
sbb
enter
jmp
dec
sub
xchg
loopne
cmp
inc
inc
adc
je
push
sbb
sub
clc
or
loopne
loop
pusha
ds
lock
std
movsl
push
pushf
mov
push
pop
pusha
jmp
inc
jne
or
dec
movsl
mov
jo
aad
add
adc
jmp
out
lcall
sub
insb
add
rcrl
mov
cmpb
orb
push
and
and
mov
imul
cmp
mov
sub
lcall
adc
xchg
jbe
and
arpl
sub
mov
and
and
or
sub
fbstp
mov
sahf
fcompl
sbb
mov
in
sti
test
cmp
aad
and
sbbb
jmp
jbe
fsubs
adc
adc
jl
jnp
jnp
pop
enter
jg
or
inc
sbb
std
andb
movsb
inc
add
call
jb
das
xchg
stc
or
pusha
xlat
jbe
inc
and
mov
cmp
mov
mov
mov
mov
mov
cmp
lcall
les
xor
cmp
cmp
sub
jge
ror
pop
inc
aad
sbb
add
push
fldenv
push
cli
lahf
mov
clc
and
cmp
loop
loop
jl
adc
cmp
loopne
dec
ret
pop
push
and
and
fs
xchg
in
in
xchg
test
leave
xchg
std
sub
cmp
into
xor
lods
mov
adc
inc
mov
add
dec
out
loop
ror
std
iret
and
fwait
sbb
and
movsb
cmp
call
shrl
mov
jbe
cmp
dec
xchg
fidivrs
test
fmuls
lret
adc
and
pop
outsl
es
dec
pop
adc
cmpsb
adc
mov
dec
jns
xchg
jp
ja
sub
inc
inc
pop
fnsave
shl
xchg
mov
push
push
loope
and
sbb
cmp
xor
or
loop
xor
je
cli
pcmpgtb
movl
dec
add
mov
and
jb
sbb
mov
outsl
or
push
sub
jecxz
cmp
roll
loope
aaa
ret
rcrb
mov
shrl
repz
rcll
push
dec
mov
cltd
mov
cwtl
push
mov
adc
add
test
mov
daa
xor
in
or
add
in
das
and
pop
fmull
mov
stc
icebp
pushf
sub
push
add
ja
int
std
int3
xchg
pop
mov
hlt
push
lea
mov
mov
sahf
std
or
mov
setp
fidivs
pop
dec
xchg
arpl
pushf
mov
xchg
aas
and
add
xor
in
xchg
popf
xchg
xchg
push
sar
cmp
mov
stos
push
pop
jmp
addr16
rorl
mov
test
roll
aaa
ss
test
mov
lods
dec
daa
es
push
cltd
sub
movsb
push
jae
add
mov
push
fwait
jl
outsb
bound
dec
pop
fsubrp
loopne
cmp
shll
bound
stc
fcoms
stos
xor
jmp
arpl
imul
mov
lods
xor
push
mov
fsts
ljmp
jecxz
mov
nop
inc
pop
push
jne
aad
cmpsl
fstpt
jle
cwtl
stos
inc
push
arpl
loope
mov
fsubs
push
stos
les
mov
inc
sub
arpl
sub
test
mov
add
lock
sub
and
lods
mov
inc
push
rol
loope
adc
add
addl
je
lret
ja
cmp
mov
bound
call
dec
add
adc
and
mov
mov
fcomps
add
pop
fwait
aad
scas
iret
ljmp
pusha
loopne
adc
shll
scas
and
jecxz
pinsrw
mov
pop
xchg
and
icebp
rol
rorl
dec
test
mov
dec
insb
shll
dec
cltd
aam
call
jns
lcall
test
fildll
mov
cmp
mov
sti
or
sbb
aaa
xlat
jbe
mov
jbe
lods
pop
mov
xor
fs
push
popl
sbb
je
cmc
fs
mov
in
shlb
jp
mov
and
mov
das
sub
sub
addb
loop
mov
sbb
cmp
sub
test
mov
pop
sbb
cmp
ljmp
imul
jecxz
inc
jg
xchg
or
pop
ss
sahf
dec
stc
xor
dec
out
sti
xchg
push
jge
aam
aad
mov
fcoms
out
leave
in
call
addr16
call
pusha
sub
fcmovnu
aaa
test
mov
jns
scas
pop
sub
xchg
adc
add
loopne
out
das
icebp
and
pop
and
lret
shll
stc
call
sbb
mov
and
orl
lea
negb
cmp
cli
aaa
fcomps
sti
pusha
xchg
and
adc
inc
adc
rorb
sbb
adc
push
faddp
sub
cs
test
dec
je
mov
icebp
addr16
push
aam
mov
je
dec
ljmp
les
test
stos
cwtl
stos
mov
mov
stos
cmp
shll
ret
lea
iret
push
mov
cli
adc
cmc
dec
aad
cld
xor
ds
and
mov
jo
jg
cmpsb
inc
popf
call
lock
sbb
mov
add
pop
inc
mov
aas
jo
pushf
test
mov
mov
inc
in
lret
mov
sub
test
fldenv
mov
mov
pop
pop
inc
in
add
sbb
clc
and
pop
popa
xchg
xlat
out
pcmpeqw
cmp
jg
mov
int3
sub
adc
in
loope
xor
imul
ret
aad
pop
repz
inc
dec
jmp
push
xlat
cmp
stos
insb
ss
sbb
xchg
fcmovbe
popf
out
jp
xor
jp
jge
inc
clc
mov
notb
pop
loope
int3
in
mov
test
test
sbb
iret
mov
mov
sbb
mov
std
aad
je
sbb
ds
jnp
cli
jo
fcoml
push
shr
cmpl
imul
in
and
jg
cmp
sub
dec
push
pop
popa
imul
das
bound
dec
in
push
fdivl
test
je
into
fdivs
test
cmp
pop
inc
adc
and
mov
sbb
popa
push
jb
pop
into
cmp
pop
mov
xlat
imul
sub
jo
outsb
jno
imul
lret
out
ficoml
bound
mov
jecxz
dec
pop
inc
mov
cli
movsl
inc
popf
imul
or
in
dec
jbe
add
xchg
aas
rcll
push
insb
les
pop
or
or
pushf
add
pop
arpl
sbb
movb
icebp
and
fsubs
pop
add
jne
pop
jnp
gs
lods
in
jle
pop
sbb
mov
aaa
movsl
jl
pop
push
add
aas
adc
xchg
sub
loope
xor
fldl
mov
mov
pop
loope
add
data16
int3
lahf
push
jge
lret
hlt
inc
fst
cld
sub
mov
add
cmp
jmp
xor
or
sti
in
pop
jl
arpl
popa
dec
add
subb
xchg
cmp
into
test
jl
mov
and
push
repnz
add
data16
lcall
sbb
jne
or
test
test
mov
lcall
lods
stos
setle
sub
ret
mov
jbe
enter
lahf
adc
push
dec
lods
fstpl
push
test
xchg
cmc
lret
ja
lcall
test
enter
or
lcall
pop
jl
shll
or
pavgb
in
jle
jno
xor
es
mov
xchg
repnz
jne
jbe
xchg
mov
and
or
dec
jg
sub
int3
dec
push
ret
es
in
mov
std
mov
pop
jbe
and
cld
jecxz
and
mov
xchg
bound
adc
popa
or
fs
add
fistl
or
dec
test
push
mov
push
mov
out
adc
mov
sbb
pop
cld
iret
stc
jecxz
lea
mov
out
loopne
push
cwtl
jne
repz
mov
or
cmp
jnp
mov
mov
xor
ret
pop
push
ljmp
sub
mov
mov
mov
stc
test
das
in
test
mov
lods
js
test
ds
and
inc
mov
fdivl
sub
fwait
ss
push
sbb
leave
test
stos
out
lds
mov
jg
mov
pop
inc
pop
test
mov
mov
dec
in
divb
pop
jne
aaa
in
and
xor
sar
testb
pushf
sub
sbb
setp
outsb
push
pushf
adc
nop
jge
test
dec
cmc
jg
je
add
sbb
test
andl
inc
data16
inc
dec
lods
cmp
fldl
jno
andl
iret
loop
cwtl
je
adc
cmp
sti
in
notl
mov
stos
out
cs
outsl
mov
push
xor
mov
dec
fisttps
xor
pusha
jb
nop
adc
leave
push
sub
adc
xchg
leave
jnp
xor
add
xor
mov
mov
stos
out
add
sbb
std
and
shrl
shl
pop
mov
lret
xchg
inc
mov
xchg
lret
mov
adc
call
jb
aam
push
xor
jnp
mov
pop
sbb
ja
iret
shrb
out
shlb
das
movsl
xchg
and
push
mov
adc
je
and
lea
mov
mov
cmp
pop
inc
mov
cmpb
add
popl
inc
arpl
adc
jne
sbb
mov
nop
les
xor
pop
lods
jb
cli
mov
cmp
pop
jo
sbb
stos
pusha
scas
fisubl
mov
or
cltd
mov
sbb
js
and
dec
adc
cmp
sbb
stos
push
lret
push
xor
mov
dec
outsb
push
jg
inc
cmpsl
shlb
pop
das
clc
popa
push
movsl
add
leave
xor
jo
mov
xchg
inc
mov
xlat
add
xor
imul
or
repz
pop
cli
js
std
icebp
cmp
adc
push
fsubrl
jno
lcall
jo
in
arpl
mov
or
mov
rorl
add
imul
jmp
cmp
dec
scas
mov
les
imul
mov
repnz
xor
add
jb
pop
js
add
icebp
jnp
adcb
ss
fs
out
sbb
es
incb
leave
sbb
in
dec
stc
dec
cmp
loope
mov
fisubl
lcall
hlt
adc
xor
es
pop
add
mov
dec
into
lret
nop
cld
repz
dec
inc
xlat
addr16
sbb
mov
pop
call
addr16
mov
repnz
mov
jbe
aas
adc
shrl
hlt
enter
aas
lret
daa
rorl
pop
pop
jge
lcall
lret
sarb
dec
repz
add
fmul
aaa
xchg
sub
mov
lock
pop
inc
jnp
ret
xchg
jno
js
jmp
rep
jg
and
pop
out
lods
cwtl
cmc
xchg
cmp
adc
js
sub
jg
xor
hlt
or
in
cmp
hlt
xor
dec
inc
scas
pop
das
pop
xchg
mov
push
subl
and
adc
out
xchg
out
test
loopne
dec
add
dec
mov
testb
cmc
mov
aam
sbb
pop
pop
nop
test
sbb
fisttps
aam
push
inc
push
mov
fistpl
sub
fst
mov
imul
xchg
mov
call
or
mov
test
jge
out
jne
mov
and
mov
fwait
mov
aad
cmp
mov
pop
cwtl
movsb
mov
out
mov
mov
inc
pop
dec
movb
mov
stos
mov
cmp
je
lret
mov
sbb
les
lret
loopne
jmp
jb
push
inc
xchg
mov
pop
aad
push
inc
mov
sbb
icebp
test
cld
cmpsb
test
repnz
out
pop
xchg
cld
imul
scas
or
aam
sub
sbb
jns
orb
cmp
lock
inc
cmp
mov
xlat
add
mov
adc
sahf
dec
xchg
fiadds
inc
ficomps
je
inc
add
jns
xchg
jge
nop
inc
adc
jbe
dec
inc
gs
add
mov
hlt
dec
inc
mov
jmp
lds
loope
inc
lret
jmp
mov
mov
xchg
mov
cltd
fwait
jmp
sub
adc
push
ret
jg
imul
gs
test
push
dec
xor
imul
scas
out
mov
clc
xchg
mov
repnz
xor
jnp
jmp
mov
xchg
push
sub
mov
and
fxch
repz
enter
xchg
xor
ret
add
pop
xor
insb
xchg
movsb
or
int
xor
mov
je
mov
sub
fnstsw
cli
cltd
es
loopne
out
inc
mov
push
push
lcall
fsub
repnz
mov
sub
nop
or
pop
and
push
xchg
les
jecxz
inc
stos
call
inc
cmp
jns
dec
xchg
sbb
popl
sub
sub
loope
push
in
divb
js
jmp
js
lcall
in
sub
sub
sub
pop
out
ds
stc
out
inc
ret
jae
adc
push
aad
test
icebp
addr16
add
inc
push
rcl
loopne
inc
mov
ret
mov
mov
fldenv
inc
adc
shrb
popa
insl
std
mov
insl
add
xor
icebp
imul
pop
xchg
push
and
stc
aam
push
xor
in
out
push
pushf
pop
clc
ss
or
gs
push
adc
sbb
adc
addr16
jnp
mov
fiadds
test
cmp
movsl
sub
dec
lcall
stc
sbb
mov
insl
inc
cs
sti
cmp
aad
xor
popa
orb
lret
cmp
jo
stc
jae
dec
mov
testl
loop
push
mov
insb
ljmp
mov
shrl
data16
lahf
lea
cld
xchg
fldt
lret
sub
xchg
rolb
xchg
dec
call
sbb
mov
push
cs
rorb
mov
dec
jno
dec
xchg
inc
pop
pop
push
or
cmpsl
lret
popf
push
xor
sbb
and
test
jg
jne
ja
ds
mov
sub
sbb
js
add
cmc
dec
ljmp
outsb
cmp
mov
pop
clts
push
sarl
test
jne
cli
pop
test
inc
loopne
call
fwait
lret
or
mov
xor
nop
cmp
push
loop
pop
dec
arpl
xchg
out
addr16
add
std
jae
pop
sub
add
mov
aad
lret
into
pushl
in
push
xor
push
mov
xchg
imul
pusha
enter
sub
mov
aaa
xchg
loopne
cmp
loopne
inc
xor
fld
lahf
icebp
pop
pop
mov
push
xor
cmp
testb
jge
addl
mov
sbb
mov
mov
lock
push
jge
sub
test
fs
popf
sub
cltd
jo
fadds
js
jmp
push
test
jne
mov
inc
imul
sti
mov
or
or
dec
cli
adc
mov
or
rcr
lock
jbe
ja
arpl
jge
pushw
test
jmp
movsb
fcompl
push
lock
test
add
push
rcrb
lods
scas
cmp
sbb
jmp
out
lods
loopne
xlat
shrb
mov
pushf
mov
repz
loope
and
jmp
push
icebp
xchg
je
xchg
insl
jnp
ret
stos
fldenv
pusha
popa
dec
dec
dec
push
shlb
xchg
mov
int3
mov
sbb
imul
cmp
sub
lods
add
adc
fildll
test
lock
add
pusha
add
adc
adc
lcall
dec
mov
sbb
add
iret
ret
adc
fistl
xor
seto
push
leave
cs
imul
in
loopne
or
lods
push
pop
and
inc
inc
push
imul
imull
scas
mov
mov
ss
shlb
je,pt
mov
test
out
xchg
adc
dec
lahf
sub
inc
stc
xchg
idivl
or
jo
es
imul
cmp
ja
sbb
jge
in
mov
hlt
dec
dec
dec
mov
adc
pushf
sarb
loop
cltd
dec
in
hlt
aas
or
xor
mov
int3
es
push
mov
lods
push
insl
push
xor
xchg
rcrl
fucomp
mov
jecxz
jge
fiaddl
jnp
call
in
test
mov
mov
mov
outsb
xlat
inc
lods
sahf
pop
add
and
cwtl
xchg
or
js
adc
fcmove
or
je
xchg
mov
xchg
loop
orl
push
cmp
and
or
add
sub
test
mov
push
push
and
mov
dec
pop
gs
outsl
jecxz
add
lahf
cmp
daa
ja
jp
loop
sarl
mov
jb
out
cmc
out
push
cltd
popa
jae
cmp
inc
es
sbb
lret
aam
scas
and
ret
xchg
adc
jle
outsl
dec
jle
popf
cld
subl
dec
loop
ret
std
loopne
or
inc
add
cltd
mov
aaa
add
sbb
xchg
mov
call
loope
adc
cmp
cmc
push
js
insl
popf
fwait
pop
out
push
gs
in
mov
lahf
add
mov
shll
jecxz
or
fdivrl
movsb
lret
pop
arpl
daa
bound
cli
pop
dec
mov
adc
sti
and
ds
cmp
icebp
mov
or
jge
mov
jnp
faddl
or
cmp
gs
pop
aas
jg
adc
and
mov
shl
or
imul
or
jne
pop
sbb
mov
jns
cmc
jecxz
inc
hlt
jne
push
in
pop
in
icebp
scas
insl
inc
movsb
aad
add
push
jo
popf
popf
xor
rcrb
pop
outsl
cld
js
daa
sub
outsb
inc
rolb
fwait
js
pop
push
cmpsb
out
pop
dec
inc
add
jb
movsb
dec
push
pop
pop
push
pusha
jle
dec
xchg
sarb
add
or
stc
or
icebp
les
xchg
ljmp
stos
dec
sar
aaa
mov
dec
fcom
sub
fcomp
pop
push
in
jo
in
lcall
outsl
mov
bound
mov
cli
mov
pop
xor
cli
movsb
add
icebp
mov
ret
nop
push
add
cmp
jns
scas
out
mov
push
xor
loopne
scas
enter
add
das
ret
nop
popf
clc
dec
dec
sahf
scas
bt
cmp
in
stos
fdivs
pop
popa
pop
lret
popa
xchg
xchg
xor
aam
inc
lods
cmp
adc
das
ss
dec
xchg
mov
jle
loop
ds
mov
push
sahf
pop
sbb
xchg
jnp
push
mov
test
adc
out
sub
ljmp
insb
jmp
loope
loop
pop
push
pop
xorb
jo
xchg
out
sbb
dec
js
rcrb
push
popf
enter
push
dec
or
add
ss
out
jne
pushf
jg
dec
jmp
mov
sub
push
pop
cli
and
sbb
mov
cmp
or
nop
push
jge
and
inc
add
icebp
inc
sub
pop
stos
ret
pop
out
roll
test
mov
out
pop
inc
sahf
xor
dec
jbe
jae
mov
inc
sarb
dec
mov
mov
jno
roll
xchg
mov
lcall
out
xchg
mov
pop
cmp
pop
xchg
mull
js
sbb
in
imul
cmp
ja
xchg
pop
cmp
xchg
adc
inc
movb
stc
dec
ja
mov
cmpsb
adc
fwait
hlt
inc
adc
out
in
ss
add
xchg
ds
test
cmp
mov
or
cli
jmp
pusha
xor
pop
lret
dec
sbb
pop
adc
in
aam
xchg
mov
mov
lds
pop
xlat
mov
push
push
test
std
xchg
xchg
mov
jno
addr16
cvtpi2ps
push
rep
addl
add
lcall
outsl
jl
cmp
fwait
sbb
xchg
jno
xor
in
mov
push
cltd
push
push
inc
fsubrs
icebp
es
inc
mull
int
aas
sub
fwait
cmp
mov
loop
inc
ljmp
test
add
add
int
pop
test
lahf
js
push
xor
push
cmp
mov
lahf
adc
aas
sti
push
push
mov
dec
arpl
inc
xchg
dec
lret
data16
stos
in
sub
sbb
shlb
xchg
push
push
sub
rol
push
fistpl
jns
lock
mov
loope
xorl
int3
inc
sbb
or
fsubl
out
dec
adc
push
jmp
ret
out
pop
scas
repnz
pop
and
jnp
icebp
sub
ja
and
decl
dec
push
int
lock
jmp
ret
sbb
mov
jl
fsubs
pop
xchg
mov
push
xchg
push
add
xchg
mov
stos
negb
cs
dec
adc
sbb
call
daa
mov
ja
adc
out
push
test
push
jg
stc
je
fcompl
push
or
adc
mov
js
pushf
sar
add
cmp
movsb
adc
inc
aaa
xchg
in
je
stos
test
inc
mov
test
jecxz
jle
jnp
rclb
fildl
xor
divl
inc
cmp
fnsave
inc
xor
jns
xchg
lret
scas
xchg
or
mov
or
push
test
add
clc
outsl
and
mov
testb
cmp
mov
cmpsb
inc
push
daa
mov
xorb
pusha
mov
sub
cmpb
sub
push
mov
loope
mov
stos
mov
fsubrl
notl
fmulp
jecxz
mov
fsub
sub
and
sub
adc
cmp
ret
out
bound
jecxz
in
push
mov
xchg
adcl
cs
out
out
mov
or
pusha
fadds
sbb
xor
jl
aam
ds
xor
jge
push
xchg
and
sbb
pop
shll
pop
jle
mov
xchg
das
in
in
and
dec
lods
push
out
or
jmp
pop
mov
dec
xchg
and
sub
mov
cwtl
xor
or
test
sbb
sbb
mov
push
cmpsl
lods
jmp
lcall
popa
adc
call
jno
sbb
adc
fimull
lock
sub
sub
jle
cmp
ja
mov
mov
fs
stos
out
sti
cs
mov
imul
cmc
in
cmp
mov
fwait
test
cmpsl
mov
je
xchg
sarb
jecxz
sub
dec
sub
or
push
bnd
in
mov
cld
sbbb
adc
mov
jb
mov
sub
aaa
cmp
rcrl
fucom
jbe
adc
jb
push
into
adc
aam
pop
outsb
outsb
leave
hlt
test
scas
xchg
sbb
or
loope
in
fcoml
repnz
orb
test
nop
lock
push
or
insb
out
lret
jae
sbbl
aaa
test
test
test
arpl
fsubrs
pop
int
scas
cmp
or
into
addr16
or
cmp
subl
divb
cld
xchg
sub
fdivrs
daa
fistps
cmc
inc
mov
sub
insb
jns
lcall
fimuls
sub
sub
nop
or
mov
push
pop
clc
xor
sub
bound
pop
mov
aaa
fnstcw
adc
sbb
repz
inc
adc
nop
dec
lea
add
rorb
aaa
sbb
xchg
outsb
push
int
loope
aad
mov
push
inc
push
movsl
call
imul
sbb
sub
jg
mov
lds
lret
ret
xchg
mov
icebp
pop
sub
mov
pop
ja
insb
xor
stos
pop
jne
and
cmp
andl
add
push
enter
jbe
lock
push
push
mov
push
push
push
jmp
mov
pusha
jge
push
jl
fimull
insl
fmull
stos
lds
les
ja
xchg
into
mov
pop
mov
cmpsl
jns
iret
shll
push
xchg
pushf
subl
lds
stos
stos
pop
loope
je
mov
mov
test
adc
fwait
loopne
insb
add
xchg
mov
loopne
jnp
enter
ret
push
lods
or
adc
push
popf
xorb
dec
mov
pop
sub
loop
ds
pop
std
add
bound
insb
mov
lahf
xchg
ja
movsb
jb
push
push
pop
mov
jg
push
mov
push
lods
mov
in
ja
lods
xor
sbbl
das
sub
pop
sub
popf
xor
ss
nop
sbb
pusha
insb
repnz
stos
arpl
in
outsb
lret
repz
in
imulb
pusha
shr
lods
jmp
fldl
mov
sti
adc
mov
cltd
shrl
int
mov
mov
pop
xchg
popa
or
sahf
push
lods
and
ja
aaa
xor
adc
cld
les
lds
cmpsb
push
insl
cmpsb
adcb
loopne
nop
mov
add
mov
add
fisubs
add
xchg
ret
cli
fbld
lcall
mov
icebp
push
imul
sti
int
xor
addr16
sahf
and
sub
push
aad
mov
mov
sbb
rcll
pop
and
xor
movsb
jnp
rolb
addb
in
mov
xchg
mov
push
in
dec
lods
adc
mov
mov
pop
scas
add
fstl
rcr
mov
mov
mov
dec
in
test
push
xchg
mov
cltd
xchg
jae
lahf
xchg
xchg
sub
out
mov
or
and
es
es
mov
scas
in
cltd
mov
pop
jmp
jae
dec
jae
push
mov
imul
popf
gs
adc
shll
mov
inc
movsb
stos
xor
mov
xor
adc
pop
aad
lods
cmc
dec
imul
shl
arpl
sub
jo
arpl
cmpsl
sbb
inc
cmp
neg
fwait
enter
mov
out
es
cmp
or
nop
jge
inc
mov
arpl
lahf
cltd
pop
lods
mov
jmp
subl
or
xor
insl
stos
cmp
pop
cmp
mov
jl
cltd
pushf
inc
loope
ljmp
out
pop
pop
mov
push
mov
fcmovnbe
inc
scas
mov
out
jg
mov
mov
mov
xchg
leave
cmpsb
xchg
add
inc
sbb
xorb
mov
or
test
jbe
in
jl
lea
jmp
repz
jp
add
stos
xchg
jp
adc
dec
mov
xor
test
stos
and
sub
push
jb
cwtl
mull
jb
jmp
ss
mov
insl
dec
add
inc
mov
popa
sarb
jo
sbb
mov
ret
hlt
add
xor
pop
lcall
pushf
pop
jb
jmp
xor
jg
subl
push
inc
movsl
ficoml
jb
or
fisttps
jmp
inc
ret
loopne
jecxz
jp
xchg
mov
push
sti
cs
loopne
subl
in
gs
adc
sub
cmpl
pop
cltd
mov
popf
push
movsl
outsl
sti
stc
or
mov
push
rcll
in
test
jg
xchg
xchg
and
and
sub
adcl
and
mov
mov
dec
repz
inc
adc
sub
cmpsl
inc
dec
cmp
add
pusha
movsl
push
push
jle
cmpsb
rolb
jl
push
jnp
sub
cmp
xor
mov
test
sbb
or
movsb
mov
xchg
pop
lcall
dec
call
add
aas
enter
add
add
or
push
aas
movsl
xor
fcmovnu
lods
mov
std
pop
icebp
sbb
or
lock
push
scas
icebp
inc
xchg
in
stos
cmp
mov
dec
and
test
jle
and
stos
mov
jg
mov
bound
lret
test
sbb
gs
cwtl
push
adc
xor
int
je
pop
adc
mov
and
aam
mov
dec
mov
in
and
jb
loopne
mov
dec
or
iret
fists
in
jno
int
or
imul
pop
push
in
dec
popa
cmp
lahf
jecxz
dec
jmp
fsubrl
inc
push
xchg
jnp
jmp
mov
jle
js
js
cs
cmc
je
jmp
sub
fldl
push
das
jne
dec
lret
add
mov
lds
icebp
dec
cmp
cmp
rorl
lea
or
push
xchg
test
fmull
or
aam
inc
pop
jb
cmp
jo
pop
jbe
dec
mov
mov
dec
sti
lret
addr16
add
cmp
fucom
mov
inc
push
dec
lds
mov
cwtl
into
xchg
jb
jecxz
daa
stc
int3
repnz
push
fistl
lock
jmp
fstp
xchg
push
add
fistpl
push
repz
out
dec
mov
jns
mov
movsl
mov
inc
sub
sar
gs
lea
xor
pop
push
push
inc
jmp
or
ds
sub
lcall
pushf
add
xchg
add
pop
gs
cmp
and
pop
pushf
sarb
dec
mov
out
mov
addr16
add
sbb
pop
test
xchg
ds
mov
aad
call
in
jge
xor
out
out
nop
aam
test
gs
mov
fists
shlb
aas
icebp
loop
adc
cmp
in
aaa
cmpsl
dec
jbe
cmovbe
mov
mov
data16
stc
pop
cld
sub
mov
dec
mov
xchg
mov
cmpsl
decl
jecxz
into
lods
or
out
popf
inc
cmpsl
fstps
jnp
inc
xchg
imul
xchg
outsl
pop
xor
inc
mov
mov
loopne
call
pop
jnp
mov
ja
popf
movb
es
int3
dec
dec
jb
cmc
dec
mov
pop
loope
jb
dec
xchg
push
push
loope
incb
aad
out
in
xchg
loope
in
call
sub
dec
cmp
sti
mov
out
vcvtps2dq
pop
js
stc
ret
movl
outsb
mov
ljmp
push
das
pop
xor
mov
cli
dec
fcoml
into
int
adc
pop
scas
outsb
fildll
push
adc
orb
mov
icebp
push
mov
movsb
in
popl
loopne
mov
outsb
scas
pop
inc
leave
cli
outsl
test
or
lahf
adcl
imul
out
inc
jae
pop
mov
into
adc
xchg
aad
sbb
push
out
scas
out
adc
jge
xorl
fstl
inc
mov
insl
push
inc
js
fidivrs
jp
arpl
sub
xorb
mov
cmp
jl
nop
ret
xchg
dec
xchg
ja
repz
push
ret
xor
subb
xchg
mov
call
addr16
jl
addr16
mov
ror
sub
pop
mov
scas
rorl
xor
pop
clc
es
jno
ljmp
inc
pop
ja
cmp
xorl
enter
cmp
lret
cmp
movsl
dec
and
pop
out
mov
rorl
lahf
cli
gs
and
aad
mov
arpl
jl
push
rorb
imul
aam
loopne
es
sarl
loope
jle
push
jmp
test
insb
jne
scas
cmpsl
mov
mov
ficompl
jp
fwait
pop
int3
data16
in
test
xchg
outsl
cmc
xor
mov
stos
pop
add
sub
xchg
in
or
and
jae
in
notb
test
das
cltd
stos
adc
mov
dec
fstps
xor
rcll
scas
scas
and
pop
pop
xor
adc
or
repz
pop
mov
mov
rcll
sub
insb
push
scas
test
inc
push
mov
rclb
filds
int
jg
mov
addr16
mov
mov
std
dec
xor
ret
and
es
rcll
xchg
das
cmp
xchg
shll
dec
test
aam
jno
imul
mov
and
fnstcw
jg
in
adc
sti
movsb
fsubl
aad
je
push
cs
ret
and
xchg
sub
enter
adc
push
jnp
pop
ret
das
roll
adc
dec
and
xchg
pop
cld
movb
pop
scas
mov
scas
pop
lcall
ss
jbe
stos
and
stos
xchg
aad
inc
outsb
fnsave
ret
imul
jne
mov
loopne
movsl
sbb
dec
lcall
out
mov
shll
inc
bound
push
pop
push
dec
inc
dec
das
lahf
in
ja
nop
jb
cwtl
sahf
lods
mov
xchg
andl
dec
or
popf
xchg
mov
xor
cwtl
xor
push
lret
cmp
gs
mov
mov
add
sahf
in
xchg
push
fsubrs
out
shl
mov
adc
mov
mov
xchg
cmp
xor
call
sub
stos
movsl
out
rolb
xchg
push
int
ds
or
jp
add
pop
add
test
loope
xor
add
xchg
es
ja
push
sbb
cli
sahf
je
sbb
fnclex
push
test
pop
mov
inc
iret
stc
xchg
jns
sub
push
ret
jns
jecxz
push
dec
faddl
mov
xchg
imul
push
push
mov
repz
inc
aaa
mov
test
ss
add
scas
fwait
bnd
lods
xchg
and
dec
pop
and
out
dec
mov
fisubl
xchg
sub
in
xchg
push
mov
sub
int
ret
in
add
xlat
push
aad
cwtl
cwtl
loopne
stos
dec
pop
mov
pop
fistps
leave
ret
aaa
mov
das
hlt
mov
push
add
mov
bnd
mov
push
adc
push
inc
sti
pop
mov
mov
aad
ss
adc
negl
notb
mov
jb
sub
pop
mov
mov
repz
decb
xchg
mov
je
std
sbb
push
or
adc
daa
js
mov
inc
mov
je
pop
insb
and
call
in
or
test
cld
ret
lds
push
sub
data16
cmpsl
xchg
rcr
mov
adc
lahf
inc
icebp
jnp
out
movsb
lods
dec
mov
mov
and
mov
out
adc
cs
dec
adc
sahf
ds
and
jne
aas
mov
test
and
insl
adc
ret
or
sbb
and
or
in
jb
push
push
stc
fwait
sub
mov
xor
jge
dec
dec
mov
sbb
push
dec
and
movsb
lcall
xchg
lods
sarb
xor
mov
adc
xchg
stos
push
lds
out
or
adcl
sbbl
jecxz
xchg
dec
out
ss
and
mull
sub
cld
cmpsb
and
dec
ret
pop
and
scas
xchg
lods
bound
outsb
inc
dec
bnd
inc
push
das
jb
enter
and
rcrb
cwtl
cmp
rclb
and
dec
loopne
dec
xchg
mov
data16
inc
test
jg
jp
pop
pushf
mov
mov
cltd
repnz
addr16
popa
pop
pop
mov
int3
int
cwtl
or
dec
loopne
popf
in
adc
mov
outsl
jp
popf
shlb
mov
imul
sub
insl
mov
push
imul
icebp
mov
mov
cmc
jle
jmp
iret
arpl
sbbl
xor
jns
mov
sbb
xchg
add
cltd
pop
outsb
loopne
push
decl
adc
cmc
cld
or
aas
lods
push
dec
jg
cmp
clc
outsb
jle
dec
cmp
cmp
cmp
testb
fs
cli
jle
and
pop
and
out
enter
jbe
jnp
jge
xchg
sub
xchg
pop
push
mov
sbb
ret
pop
sar
in
and
in
pushf
int
push
aaa
inc
xor
iret
aas
xchg
dec
or
call
mov
in
sbb
mov
xchg
mov
fldt
mov
inc
and
sahf
popa
aaa
lret
xorl
in
xchg
iret
mov
test
xchg
pop
stos
stos
inc
or
jmp
sahf
pop
je
in
pusha
adcl
mov
out
int
mov
rolb
gs
jg
scas
mov
in
fcoms
mov
outsb
ficoml
xor
rcrl
movsl
shlb
mov
in
push
pop
pop
ds
mov
adc
jae
lcall
jp
dec
negl
inc
insl
in
cmp
xchg
je
sbb
cmpsb
add
ljmp
xchg
dec
and
pop
ficoms
and
out
adc
adc
jecxz
mov
sbb
clc
push
cltd
or
lret
mov
sahf
mov
mov
mov
pop
insb
cmpsb
out
call
mov
adc
push
imul
mov
int3
leave
mov
aam
fs
or
jge
outsl
and
add
or
shr
push
popl
push
dec
fsubl
mov
imul
shll
aam
mov
lahf
decl
lahf
repz
xchg
lea
fsubs
jmp
sbb
sub
adc
push
popa
aad
jecxz,pt
out
mov
or
pop
sub
adc
data16
pop
mov
mov
dec
cld
arpl
mov
iret
sbb
icebp
ja
call
pop
add
aam
jg
subl
cmp
jecxz
cmp
adc
jbe
mov
cmp
adc
sbb
and
repnz
jb
xchg
outsb
mov
jmp
xchg
shrb
and
and
into
adc
test
ret
mov
add
lret
xchg
sub
pop
imul
fiadds
sbbl
mov
xchg
pop
aam
add
pop
jns
mov
mov
shl
pop
xchg
pop
testl
push
frstor
xor
insl
pusha
aas
ljmp
imul
scas
and
mov
lea
fisttpl
sub
int
jle
xchg
outsb
pop
xchg
pushf
dec
push
test
dec
aad
push
sbb
cmp
fs
iret
enter
mov
inc
xchg
jmp
out
test
and
addr16
sbb
insl
popa
add
pop
jmp
aam
mov
bound
stos
xor
pop
repz
fisttps
test
stos
fnstenv
loop
and
xlat
adc
negl
test
xchg
ja
js
and
adc
or
sub
aad
and
pop
aas
aas
mov
addr16
out
test
add
pop
gs
and
loop
jae
or
movsl
sub
mov
jae
xchg
aam
add
mov
addr16
mov
imul
lea
add
orl
jnp
testl
xchg
add
mov
or
jbe
fmull
mov
aas
jmp
shrb
and
ja
mov
dec
pop
scas
xchg
push
out
jnp
jne
fistl
shr
pusha
add
pop
psrlq
xchg
hlt
cwtl
stos
daa
push
dec
mov
jno
xor
sbb
push
mov
ffree
fwait
xor
inc
in
add
mov
pop
jmp
cmp
sub
cmp
fsts
jne
inc
sub
or
in
add
js
push
rcrl
sbbb
and
icebp
xlat
add
push
stos
mov
mov
ret
add
xchg
mov
and
xor
rorb
ds
lock
mov
daa
outsb
pop
sub
dec
repz
adc
dec
push
and
enter
sub
xchg
mov
xchg
sbb
imul
daa
mov
loope
ss
mov
lea
into
add
rcll
mov
clc
fs
dec
sahf
xor
out
movzwl
popf
sti
sub
jnp
mov
jae
xchg
cmpb
dec
jg
push
adc
test
push
sub
fs
pop
stos
adc
xchg
push
mov
xchg
int3
adc
xchg
sti
nop
in
jns
cli
jns
data16
inc
shrb
std
call
cltd
loope
jo
lret
clc
enter
jecxz
xchg
jne
push
xchg
lock
sub
xor
and
cwtl
pop
movsl
inc
xchg
subb
sbb
je
mov
push
aad
test
or
sub
lds
mov
mov
mov
leave
lock
mov
scas
lock
test
enter
fisubl
sar
in
pop
push
mov
adc
sub
movsb
sti
dec
jge
fs
pop
and
es
push
rorb
jmp
int
cmp
imulb
es
or
cmpsb
stos
sbb
ret
push
cs
push
jb
lahf
enter
iret
push
arpl
and
lahf
popf
jp
add
push
sti
adc
es
ret
jno
mov
cmp
or
jg
push
jge
adc
add
adc
push
jo
cmpsb
jnp
pop
adc
xchg
test
xchg
out
daa
mov
pop
into
aas
mov
outsl
rol
sub
pushf
xor
int3
pusha
add
pop
fs
add
and
int
jg
jb
movsl
xor
push
or
jp
jg
mov
push
fwait
jp
or
xor
add
mov
stc
pushf
mov
ss
arpl
ret
pop
xchg
stc
mov
and
rol
inc
pop
je
adc
mov
fidivrl
dec
rcrl
or
sub
push
rol
dec
jae
cmpsl
cld
xchg
mov
adc
lcall
in
cmp
dec
push
inc
cld
imul
fs
loop
and
jns
repnz
adc
sarb
dec
sub
fidivrl
and
cld
push
add
xlat
dec
sbb
xchg
sbb
push
inc
or
adc
inc
out
dec
sarb
lret
push
fstps
outsl
testb
cmp
notb
cld
mov
dec
out
aas
or
or
addl
lahf
cmc
testb
ret
test
xchg
pushf
inc
mov
decl
and
lahf
mov
xchg
mov
push
and
jle
arpl
and
cld
outsb
mov
out
fimull
xchg
loop
scas
ljmp
jnp
push
cwtl
iret
nop
fdivs
jmp
jmp
mov
jnp
arpl
in
mov
test
jle
jae
nop
ljmp
cmpl
xchg
push
push
sub
adc
stc
in
lds
std
in
out
inc
and
jg
jns
push
test
popf
pop
mov
imul
dec
cmp
out
jbe
std
fwait
jge
shlb
in
pop
imul
or
sbb
outsb
pushf
push
inc
mov
mov
mov
js
mov
aam
adc
fbld
repz
adc
jnp
xchg
stc
bound
jne
pop
add
mov
inc
lods
nop
mov
and
and
and
or
fcmovu
int3
sbb
int3
adc
iret
push
loop
bound
push
add
adc
addr16
jle
test
push
sbb
int3
scas
cmp
push
pop
rcrl
mov
lahf
or
push
addr16
add
in
sahf
js
lods
int
or
fcomps
jge
or
dec
rclb
adc
jno
test
fcmovnb
add
or
loop
bound
push
add
jo
xchg
je
mov
nop
sbb
jg
mov
stos
scas
mov
sahf
cmp
pop
and
decl
outsl
xor
bound
notb
inc
jle
sti
in
scas
mov
fidivrs
mov
cwtl
orl
mov
sbb
scas
fildl
data16
insl
outsb
or
fcompl
flds
rcrb
dec
loop
loope
stos
inc
into
jecxz
mov
aas
add
push
rcrl
nop
inc
gs
fwait
stc
rorl
sub
sub
call
mov
mov
dec
stc
fcmove
je
inc
or
push
cmp
dec
mov
sbb
xchg
jg
int
in
jae
clc
push
sahf
repnz
pop
inc
jbe
xchg
dec
xlat
mov
xchg
std
mov
and
dec
pop
pusha
call
push
ret
adc
or
push
sub
mov
stc
int
pop
pop
inc
movsl
out
rcl
jb
xchg
outsl
xor
and
aam
in
test
iret
push
and
stos
movsl
cs
or
push
push
dec
ljmp
jmp
pusha
cmp
xlat
push
cmp
mov
xchg
cltd
xchg
mov
or
and
in
sub
into
test
daa
mov
pop
jo
divl
fcomps
in
push
push
mov
inc
xlat
lods
cmc
push
les
ret
adc
push
push
sar
lret
or
mov
mov
sbb
xchg
cmp
dec
dec
imul
xor
icebp
or
fcoms
jbe
rcrb
adc
push
int
or
push
pusha
mov
std
pop
mov
idivl
data16
test
mov
pusha
pop
roll
xbegin
sbb
lock
add
inc
push
sub
test
or
dec
icebp
loop
sub
aaa
imul
mov
pxor
sar
jb
add
scas
add
pusha
cmpsl
or
xchg
ljmp
mov
dec
daa
ljmp
xchg
in
jecxz
xor
movsl
inc
scas
mov
xchg
out
fldcw
add
mov
xor
or
cmp
mov
mov
mov
mov
gs
jecxz
lods
cmp
in
dec
push
out
push
fidivl
inc
test
addl
data16
xchg
aam
xor
int3
lret
clc
mov
fcmovu
pop
sub
ja
sub
dec
sbb
mov
pop
js
popf
mov
inc
adc
mov
xchg
call
test
xor
inc
scas
jns
loope
xchg
mov
inc
pop
push
xor
pop
shrb
sbb
arpl
and
test
xchg
mov
and
add
in
fiadds
and
inc
add
or
mov
mov
andb
push
subb
out
fimull
mov
xchg
sub
test
jne
xchg
inc
mov
dec
jp
dec
jnp
les
mov
sti
jecxz
inc
mov
cmpsb
das
or
pop
xchg
jae
dec
mov
dec
fwait
xor
pop
mov
mov
sbb
push
out
dec
nop
inc
mov
mov
hlt
ds
xchg
fstp
or
jle
outsl
xchg
dec
jbe
outsb
lods
imul
sbb
jb
sub
vcmpss
push
adc
cmp
mov
mov
push
jmp
insl
mov
jno
fldl
ret
ret
xchg
push
jns
movsl
lods
jo
or
repnz
jbe
test
int3
addr16
sbb
lods
mov
pop
push
vcmpps
outsb
scas
pop
cmp
cmpsb
cmpsb
nop
jp
pop
inc
adcl
mov
popa
xchg
mov
add
mov
xor
jnp
sbb
jg
push
cmc
sub
nop
cmp
cld
pop
mov
es
or
test
mov
fld
arpl
push
or
andl
fbld
psubusw
pushf
lret
hlt
aam
adc
xor
fcompl
or
cmp
sub
ficoms
mov
pop
add
repnz
lcall
jecxz
in
js
mov
jb
push
popf
mov
sub
sub
sahf
mov
pop
sbb
sbb
lods
inc
dec
add
push
pusha
stos
or
cltd
loop
aad
scas
leave
sbb
jns
inc
sti
inc
movsl
sub
adc
fadds
mov
insl
jmp
ja
mov
lods
sub
aad
and
cmp
stc
and
out
ret
or
or
fidivrs
inc
daa
mov
stos
out
jmp
pop
movaps
cmpsb
push
mov
cmp
imulb
inc
out
mov
mov
pop
xchg
mov
mov
cmp
mov
adc
add
out
ret
push
jmp
adc
or
sarb
sub
dec
insb
lret
icebp
mov
xor
outsb
rcr
inc
push
shll
arpl
cmpsb
xchg
xchg
push
ret
je
mov
mov
insb
in
sub
sub
jecxz
imul
out
ds
pop
int
cmp
adc
sub
cmc
jge
lock
shl
sbb
aad
xor
imul
rolb
rcrb
sbb
xchg
or
dec
lret
pop
popa
std
inc
rclb
ret
pop
push
add
inc
sbb
cmp
sbb
movl
gs
inc
push
sbb
or
cwtl
inc
fcomps
fs
ja
pop
adc
cmp
inc
mov
inc
jecxz
aaa
call
mov
into
sbb
or
mov
xchg
call
stc
aas
stc
push
add
jmp
mov
jne
jns
add
clc
push
mov
inc
and
loope
jbe
or
mov
dec
inc
mov
outsl
push
add
lret
adc
les
cltd
jns
jecxz
out
dec
mov
test
jmp
les
jmp
daa
ret
repz
pop
adc
xor
xchg
mov
ss
or
mov
push
hlt
inc
movsb
lock
movsb
insb
mov
shrb
jns
fidivrs
add
xor
ja
addb
jge
and
inc
das
pop
mov
adc
mov
sbb
cmpsl
pop
movsl
inc
cmp
arpl
xchg
das
add
cltd
and
mov
mov
addb
lret
lret
stos
or
cmpsl
or
sub
or
cmp
insb
out
notl
repz
dec
adc
dec
lock
test
pop
scas
jle
push
xchg
loopne
aas
or
out
jno
jbe
cld
test
jns
sahf
adc
sub
or
ja
xchg
call
pop
cmp
dec
xchg
scas
or
and
xor
leave
pop
repz
push
push
addl
inc
pop
insb
loopne
cmp
in
dec
add
stos
mov
mov
mov
enter
daa
adc
lock
outsl
mov
push
sahf
push
insb
mov
out
int
inc
ret
hlt
xor
dec
ret
mov
clc
dec
xchg
sbb
xor
mov
in
adc
out
adc
pop
fbstp
enter
push
push
inc
sti
call
outsb
pop
xor
imul
sub
out
cltd
fildl
iret
frstor
mov
outsl
nop
pop
mov
dec
pusha
rcrl
icebp
inc
xor
cmp
and
pop
push
movsl
clc
mov
pop
inc
adcb
adc
add
mov
sbb
jp
adc
fcomps
aad
mov
adc
popa
ret
ds
mov
or
std
sbb
cs
hlt
xchg
lds
jo
out
loop
xlat
cld
int
cmpsb
lret
sbbb
mov
dec
sub
and
fwait
das
mov
jne
jecxz
scas
adc
inc
mov
jae
adc
imul
jge,pt
aaa
jnp
flds
pop
add
jge
dec
mov
pop
xor
out
push
sbbb
mov
rorb
in
bound
cmc
and
mov
fistpll
pop
adc
sub
addb
test
aas
pop
jl
cmpsb
repz
je
push
jno
inc
stos
cmpsl
add
push
pusha
push
mov
or
pusha
ds
das
out
repnz
xchg
mov
cmpsl
xor
imul
lods
into
mov
lock
cmp
cmpsb
arpl
fsubp
ljmp
push
xchg
sbb
jmp
gs
je
inc
jle
mov
roll
jbe
inc
push
rorb
adc
xchg
cmp
lods
mov
leave
push
push
mov
cmpsl
push
jns
mov
mov
nop
sub
pop
xchg
inc
adc
xchg
arpl
aad
xor
mov
adc
int3
cmp
push
aas
push
loopne
push
fistps
lods
ret
push
adc
scas
int3
cltd
ret
mov
test
mov
pop
jge
xchg
mov
or
js
movsb
mov
sub
and
es
imul
icebp
sahf
pop
shlb
adc
jae
popa
mov
fmulp
in
adc
xchg
pop
inc
xchg
jp
mov
je
in
mov
or
inc
cltd
sti
or
jns
cmp
mov
ds
aad
rorb
loop
insl
pop
or
cmp
xor
js
cs
adc
or
lock
mov
lock
dec
dec
xor
jbe
enter
push
out
jg
imul
mov
insb
lret
pop
mov
fmull
repnz
or
rorb
js
cmp
shlb
jns
jbe
stos
rorl
pop
pop
int3
repnz
sub
or
arpl
add
cld
lret
mov
cld
ret
mov
clc
jecxz
in
cli
xchg
pop
or
pop
mov
push
fildll
dec
in
sbb
xor
test
movsb
and
int3
sti
ja
adc
stos
pushl
cwtl
loop
mov
fs
jnp
aaa
mov
pop
mov
test
in
sub
sbb
mov
mov
xor
popl
into
lods
xor
fstpl
scas
add
dec
les
int
cmpsl
mov
sbb
sbb
cmpsl
lahf
mov
cmpsb
push
ffree
xor
ret
out
loop
hlt
mov
mov
jecxz
clc
das
addb
push
es
test
arpl
imul
adc
sub
aas
test
cmp
mov
sbb
pop
dec
pop
adc
pop
ret
js
out
and
mov
adcl
push
add
stc
incb
mov
mov
clc
push
sub
test
out
mov
inc
or
mov
jl
cmp
and
enter
mov
cld
lock
dec
dec
insl
xor
mov
adc
inc
pop
lods
or
cltd
xchg
inc
jl
notl
inc
fimull
lret
push
push
rorb
movq
pop
jle
sbb
adc
in
jno
dec
scas
loope
fnstsw
shl
fadd
xor
cmp
mov
jmp
jp
std
pusha
dec
aaa
gs
xchg
or
scas
lock
and
pushf
push
and
pop
clc
popa
mov
adc
aam
cli
fcmovnbe
xchg
out
ja
pusha
cmc
add
insb
xchg
or
scas
sub
pop
cmpsl
xor
jnp
mov
mov
enter
cmpsl
dec
mov
pop
ret
push
pop
jp
add
nop
cmpsb
xor
xchg
and
add
xchg
daa
dec
mov
push
cli
mov
dec
mov
push
push
pop
mov
cmpsb
fs
jl
sbb
cmp
dec
cmp
mov
into
das
inc
int
inc
inc
pop
add
cltd
mov
test
cvtps2pd
aas
mov
mov
pop
xchg
fsubs
push
xor
inc
xchg
push
pop
or
sarl
pop
fsubl
mov
dec
and
jg
sub
push
push
or
jb
jbe
mov
adc
in
push
push
inc
pushl
lret
xor
dec
repz
stos
popf
scas
xor
ret
xor
add
iret
cmp
rcr
popa
xchg
or
xchg
mov
xchg
adc
mov
mov
xorb
call
sub
aad
mov
les
fldt
iret
and
lds
cmc
push
pusha
sbb
mov
fcoml
push
rcrb
sub
pop
and
stc
popa
scas
popf
dec
sahf
js
push
int3
xor
and
cmp
mov
lahf
lods
cmp
sbbb
repnz
adc
push
adc
mov
pop
pusha
sub
leave
dec
adc
and
and
cmp
adc
pop
sub
inc
or
hlt
out
jne
shrl
fmuls
out
or
gs
dec
in
jns
daa
mov
lahf
xchg
or
jb
sar
neg
bound
stc
inc
invd
sub
adc
fwait
xor
xchg
fstl
gs
and
jae
ret
les
sar
and
or
andl
pop
jge
lret
mov
dec
pop
cli
sbb
push
cwtl
nop
iret
jmp
lea
adc
add
cmpsl
popf
jnp
stos
xchg
lea
lea
ffree
lds
jae
mov
inc
mov
jle
push
int
sub
shll
and
ds
push
or
dec
or
xchg
push
in
mov
mov
loopne
xchg
xor
sahf
sub
pop
and
scas
das
push
add
adc
int3
sub
push
mov
push
or
cmp
or
or
xlat
cwtl
cs
jge
add
movsl
cwtl
xchg
mov
adc
jo
inc
xor
dec
jmp
jecxz
aam
push
cld
xchg
jecxz
mov
pop
add
int
cmpb
inc
adc
adc
hlt
mov
movsl
inc
pop
dec
mov
cwtl
jge
mov
sbb
pop
inc
out
das
mov
jbe
mov
push
test
idivl
stc
jp
mov
leave
into
cmp
mov
adc
sub
scas
mov
or
aam
cmp
repnz
xor
or
lret
add
ja
shll
push
imul
mov
lods
or
dec
es
les
dec
sahf
cli
mov
insl
sahf
inc
ds
jo
dec
addb
das
xchg
imul
dec
out
into
dec
addr16
add
imul
xor
push
and
xchg
xor
sbb
jb
test
cmpsw
xlat
cmpsb
test
push
ja
movsb
push
cmpsb
jecxz
push
out
push
rorb
jbe
into
divl
and
fmul
dec
add
jle
pop
cmp
xor
ja
push
push
imul
icebp
sub
ficoml
rorb
pop
mov
daa
pop
es
push
ficomps
xor
adc
hlt
clc
cmpsl
cld
jmp
adc
or
orl
ret
lods
int3
pop
addr16
aam
jl
lret
cmp
sub
mov
lcall
mov
adc
nop
push
sbb
dec
fs
jge
outsb
sub
pop
sbb
outsb
dec
lods
and
iret
adc
mov
lods
popf
mov
sub
fpatan
dec
cmp
in
sbb
sub
pop
dec
or
lock
jo
xchg
jle
shrb
leave
mov
jnp
lahf
sti
mov
sub
xor
cli
inc
jmp
mov
add
ja
stos
nop
mov
and
sub
inc
adc
mov
lea
mov
cld
jb
js
xchg
sub
stos
cs
jo
int
push
mov
mov
jb
jne
push
loop
mov
cmpsl
wbinvd
ja
cmp
psllw
imul
fwait
and
out
cld
xchg
scas
pop
outsb
cmpsl
stc
fldz
xor
test
repz
mov
cmpsl
jg
cmp
xchg
sub
fistpll
and
pop
or
stos
adc
mov
cmp
fnstsw
in
push
iret
mov
fldenv
mov
in
sub
into
pop
push
jae
push
sbb
inc
adc
daa
dec
outsb
mov
aad
pop
or
cmp
movsl
add
lcall
imul
mov
dec
dec
cmp
or
shl
add
lock
in
lahf
jecxz
xchg
jbe
mov
shl
jecxz
flds
and
xchg
stos
mov
fsts
pop
inc
inc
hlt
or
andb
stc
dec
inc
dec
fsubrl
loopne
mov
and
xor
cmc
jae
xor
test
pop
je
add
out
notb
dec
jg
fistpl
and
adc
adc
xchg
lea
sarl
adc
sub
int
xchg
push
jns
sbb
imulb
insl
inc
cmc
fs
xchg
cltd
ret
mov
pop
xchg
pop
add
mov
push
fistpll
fsubrl
push
scas
and
mov
sub
mov
push
dec
nop
pop
ja
fdiv
daa
add
mov
out
pop
out
addl
dec
sbb
push
xchg
jnp
in
outsb
dec
pop
stc
lock
xchg
in
adc
mov
push
ja
push
aaa
push
rorb
and
sub
cmp
xchg
mov
jp
adc
mov
fwait
std
pop
hlt
js
roll
dec
popa
stc
ret
jnp
sub
mov
cli
sahf
mov
in
adc
pop
xlat
popf
pop
xlat
or
jecxz
sbb
xlat
inc
shlb
jmp
mov
lahf
mulb
outsb
mov
dec
mov
pop
aas
testl
pop
cmp
jl
ds
lahf
jae
lcall
dec
out
movsb
es
xchg
aas
lods
mov
arpl
out
xor
mov
sub
adc
cmp
mov
fs
repnz
jo
cmp
push
andl
cld
push
fcoms
out
mov
out
mov
push
and
outsl
mov
arpl
mov
xor
popa
scas
arpl
lahf
pop
aas
stos
push
loopne
mov
jne
es
pop
arpl
sahf
sbb
push
test
gs
movsl
out
inc
pushf
dec
sub
test
test
jg
jae
mov
fcmove
aam
fisubl
xchg
mov
dec
out
lods
cmp
and
jnp
add
sbb
insb
fstps
dec
xor
hlt
mov
inc
dec
shlb
out
lods
mov
mov
loop
jne
out
jecxz
mov
mov
or
daa
into
aam
movl
inc
sub
sahf
inc
xor
sub
xchg
lret
inc
jo
aaa
pushf
lret
mov
shlb
adc
xor
mov
ljmp
data16
push
jmp
cmpsb
mov
or
add
adc
call
sub
aad
xchg
js
fsubs
mov
flds
and
adc
cmp
mov
mov
stc
out
mov
add
xchg
mov
xor
ljmp
pop
or
ja
mov
pop
ret
push
es
int3
data16
sub
adc
sub
rorl
cmp
mov
addr16
xor
mov
jae
loope
adc
cmp
in
xor
sbb
outsb
xchg
jmp
pop
call
pusha
pop
dec
push
xchg
movsl
push
sbb
dec
shl
pop
push
mov
xchg
sub
mov
inc
sbb
data16
and
repz
sbb
outsl
jne
pop
stc
pop
dec
aam
popa
inc
jmp
dec
es
xor
push
mov
leave
add
stos
inc
cmp
stc
sub
leave
das
pop
mov
test
lcall
mov
mov
mov
js
sub
or
jne
xchg
clc
mov
aas
and
mov
and
xchg
mov
mov
cmc
into
call
icebp
filds
ljmp
push
mov
data16
adc
add
out
sbb
filds
cs
xor
inc
aad
jb
add
jl
xor
sub
rclb
lods
rorb
mov
xchg
or
adc
xchg
jno
mov
sbb
mov
and
xchg
shlb
ds
mov
cmc
inc
sub
jne
pop
fbld
inc
pop
or
lret
cmpsb
shll
cltd
pop
loopne
cmp
pop
inc
mov
adc
mov
dec
fld
call
xchg
aad
icebp
jp
jnp
mov
inc
xchg
mov
lahf
jle
push
cmp
mov
bound
test
xor
pop
cmp
sahf
int
sti
mov
imul
insw
cmp
fisttps
psrld
xor
cmc
dec
das
cmp
pusha
je
pushf
add
std
stos
cmc
bound
xchg
mov
xchg
hlt
fcompl
test
in
sbb
popl
test
decb
xchg
ds
push
pop
dec
mov
xor
adc
sub
ljmp
repz
out
xchg
lcall
shr
xchg
les
fs
dec
mov
dec
das
inc
sbb
xchg
sbbb
dec
fldl
fs
jl
mov
dec
jnp
cli
pop
and
mov
mov
das
jnp
xchg
pop
push
addb
pop
divb
mov
mov
xor
mov
lea
and
fcoms
add
incl
add
sub
out
xchg
mov
adc
daa
jg
sbb
pop
fistl
js
mov
lret
fdivl
sub
fwait
lahf
roll
inc
cltd
push
data16
xchg
add
test
jg
fadds
mov
cs
add
adc
mov
adc
jge
xorl
cmp
mov
adc
or
sbb
scas
das
jo
adc
mov
push
jl,pn
repnz
gs
xor
mov
fdivrs
inc
jns
test
dec
test
sbb
sbb
mov
inc
mul
out
cmp
aaa
dec
adc
inc
push
cmp
daa
mov
gs
pop
aaa
mov
dec
inc
xchg
mov
popf
jo
dec
pop
mov
fs
nop
subb
dec
imul
fsubrs
ss
clc
rorb
gs
ljmp
cmp
xor
int
pop
jb
adc
iret
aad
call
xlat
notl
pusha
jp
into
leave
push
mov
inc
mov
sti
in
push
imul
aad
aad
lret
jecxz
and
cmpsl
inc
pop
cmp
stos
pop
mov
loop
adc
add
scas
jl
in
add
mov
ror
ds
jge
cltd
test
data16
lret
sub
outsl
mov
dec
mov
ja
outsl
cs
and
and
jmp
push
adc
jle
inc
mov
fdivp
int3
pop
jp
addr16
pop
pop
push
addr16
fisttpll
cli
sbb
fs
mov
jns
dec
ljmp
cmpsb
sets
dec
push
ss
lea
inc
or
push
adc
cmpsb
pusha
mov
loope
inc
xchg
lea
loopne
xlat
sub
pop
imul
in
and
xor
jns
out
fistl
aad
call
mov
sar
sub
jae
cli
ret
in
movsl
adc
aas
scas
lret
testl
out
adc
cmpsb
scas
cmp
fists
fs
push
cmc
inc
add
je
and
pop
adc
mov
mov
add
and
and
mov
dec
push
jnp
sarl
or
mov
call
xor
mov
xchg
gs
mov
repz
test
mov
add
xor
pusha
outsb
inc
mov
js
pop
das
or
pop
cmp
repnz
or
pop
push
jb
orb
icebp
test
lea
out
inc
mov
addr16
in
stc
pop
jo
xor
lahf
or
or
dec
or
int
icebp
insl
xchg
fwait
stos
stc
in
movsb
stos
shrl
pop
ds
push
dec
inc
pop
or
pusha
mov
or
cs
jbe
leave
sti
cwtl
fstl
inc
sbb
insl
incb
pushf
inc
xlat
inc
xchg
pushf
pop
or
and
jp
inc
daa
pop
lahf
pop
outsl
jp
jae
push
jmp
je
and
add
hlt
jnp
cmp
loopne
add
shll
sub
jle
and
adc
mov
movsl
mov
jl
sarl
subb
cmp
mov
mov
or
popf
xor
adc
and
mov
pop
mov
jne
sub
lds
sub
push
fs
testl
add
scas
sbb
addr16
rorb
dec
incb
inc
out
push
aas
insl
rolb
insl
xchg
fimuls
sub
push
jg,pt
loopnew
cmpsl
call
xchg
out
mov
pusha
mov
sahf
jae
mov
pop
mov
push
mov
jg
lret
test
test
fisubrl
out
addr16
movsb
sub
sbb
mov
inc
push
popf
sbb
pop
shlb
add
inc
xchg
or
and
popa
push
mov
push
xchg
and
mov
cli
int
hlt
sbb
sbb
repnz
add
cmp
sub
pushf
aam
test
add
and
std
dec
sub
adc
fldl
mov
sub
cmp
daa
add
sub
push
xor
mov
mov
sub
push
and
cwtl
cwtl
fcoms
add
lret
pop
jle
xchg
mov
sub
out
xchg
loop
push
xlat
xchg
addr16
inc
test
mov
out
nop
sbb
inc
or
mov
leave
mov
xlat
fistps
adc
aaa
pop
mov
mov
stos
pop
decb
mov
hlt
and
jnp
prefetchnta
sbb
cmc
sub
in
cmp
mov
pop
addr16
xchg
nop
adc
or
cld
lcall
repz
mov
dec
mov
and
shr
sub
inc
or
movsb
cld
movsl
add
pop
cmpsl
mov
xchg
push
cli
or
xchg
xchg
add
jmp
popf
xchg
xchg
loop
into
mov
add
sub
dec
out
lds
lds
mov
enter
mov
int3
insl
jecxz
push
fidivrl
aas
movsb
sbbb
inc
push
inc
std
mov
and
sbb
popf
xchg
stos
jae
gs
and
enter
jns
mov
pop
pusha
outsb
js
adc
xlat
sub
jne
jmp
push
bnd
ja
adc
xchg
push
push
xchg
mov
push
push
push
rcll
ja
scas
push
mov
cmc
incl
clc
loope
and
mov
mov
inc
hlt
not
mov
and
dec
sub
xor
out
ljmp
adc
mov
dec
push
and
leave
lds
repnz
aad
pop
inc
fnstenv
sbb
test
je
xchg
cmp
sbb
stc
and
dec
mov
out
mov
enter
add
cwtl
dec
into
cmp
call
adc
mov
push
lcall
mov
push
or
xor
pop
inc
pop
cld
int3
cmpsl
into
hlt
cmc
sbb
inc
lea
das
jno
add
gs
sbb
insl
dec
inc
sbb
movsb
movsl
out
jle
mov
into
cwtl
test
lods
add
push
fs
std
mov
cltd
jo
lods
add
add
pop
mov
push
or
pop
mov
sub
xchg
add
cmp
jmp
popa
rolb
xchg
pushf
cmovbe
out
push
lahf
roll
nop
jmp
xchg
out
out
sub
and
retw
pop
loopne
in
rcrl
mov
js
fcoml
dec
or
fildl
hlt
cs
sahf
jmp
mov
inc
inc
lock
and
je
data16
cmp
ja
stos
ret
pop
fs
jae
cltd
out
lods
inc
data16
inc
xchg
loopne
movsl
xor
cmp
loop
ljmp
lods
dec
add
shlb
sub
lcall
push
xor
out
xchg
rclb
or
and
popa
outsb
enter
rorb
sbb
inc
and
xor
hlt
push
iret
gs
int3
sub
popa
jo
inc
jne
cmp
xor
lds
ss
xor
in
push
lds
mov
jp
pop
lret
gs
xor
add
adc
pop
bnd
dec
jae
repz
dec
test
sub
push
and
jns
data16
jb
std
aad
loope
mov
xchg
mov
arpl
adc
shlb
sub
push
ret
mov
in
lea
scas
mov
add
in
fdivr
movsl
jo
inc
daa
jg
movsl
mov
outsl
lahf
inc
cmp
push
jo
inc
mov
pop
lret
movsl
hlt
jns
icebp
dec
jl
test
dec
lea
scas
adcb
pop
aaa
mov
into
mov
call
dec
imul
pusha
stc
outsl
outsb
add
imul
arpl
push
xchg
mov
cmpsl
pushf
inc
out
lahf
jmp
out
mov
and
mov
arpl
xchg
lods
leave
daa
aam
push
sti
fimull
xchg
cmp
rol
sbb
inc
jo
add
dec
xchg
subl
ja
in
imul
lahf
inc
cld
in
push
andb
xor
adc
scas
xchg
test
cmp
pop
sub
std
xchg
xchg
xchg
test
inc
cwtl
add
jnp
mov
xchg
inc
test
stos
cmp
notl
xor
inc
sti
jg
jb
push
inc
loopne
xchg
xor
jmp
add
or
ret
lods
cmp
lods
popa
inc
push
xor
sbb
sahf
aas
or
jno
and
xchg
adc
xor
cmp
jl
dec
lahf
iret
pop
cmp
out
xor
mov
loope
sti
push
mov
ret
adc
out
in
xchg
push
repnz
inc
ja
sub
dec
pop
outsl
add
push
cwtl
ret
cmp
popf
aam
adc
ljmp
jnp
icebp
aas
fcmove
add
jbe
pop
mov
jmp
lods
stos
xor
adc
jl
not
sub
pop
jo
lods
cmp
daa
cs
imul
adc
jp
int3
pop
ret
or
hlt
pop
aam
mov
std
pushf
push
mov
arpl
test
mov
nop
outsb
cmp
adc
jl
bswap
aaa
mov
pop
cmp
mov
dec
popf
int3
cmp
test
fs
pop
jecxz
or
orl
popa
and
pop
aaa
mov
ret
dec
lods
dec
es
or
sub
pusha
mov
icebp
pop
loope
jg
mov
or
sub
shll
and
aam
or
daa
pop
jecxz
fidivl
xchg
push
loop,pt
pushw
push
jne
xchg
rcrb
je
loop
jns
repz
or
cs
test
mov
leave
or
popa
and
divb
lods
dec
cmpsl
xor
push
mov
adc
xlat
push
call
push
pop
lock
pop
pop
fidivrl
mov
mov
or
sub
cmp
mov
mov
ss
popa
cs
push
aas
sarb
pushf
ficomps
xor
imul
fsubrs
pop
insb
pusha
pop
xchg
and
adc
mov
mov
daa
xchg
sub
push
mov
loop
mov
loop
inc
inc
mov
or
fsub
add
and
mov
xor
mov
stc
dec
mov
mov
cmp
cli
fiaddl
cmp
and
push
mov
scas
jbe
nop
in
test
in
arpl
cltd
lods
mov
dec
sbb
popa
inc
xchg
lods
loope
ret
out
cmp
adc
dec
mov
rolb
push
enter
leave
js
iret
adc
lock
add
mov
shll
jbe
push
adc
jl
mov
push
push
ss
mov
inc
int3
js
jae
loop
push
lods
cmp
repnz
lcall
jp
mov
add
xchg
inc
adc
cmc
xchg
pop
sarb
jb
mov
icebp
hlt
inc
add
subl
sub
int3
push
mov
test
loop
and
mov
inc
jb
popa
enter
dec
in
xor
mov
dec
ljmp
dec
icebp
push
mov
push
mull
mov
std
adc
mov
mov
gs
pop
adc
add
jge
fdecstp
sbb
cmp
out
dec
neg
rcll
aas
inc
mov
mull
loopne
data16
mov
pop
mov
push
xchg
dec
pop
test
mov
enter
adc
les
cmp
jp
clc
add
xchg
imul
sub
jns
test
nop
cmc
out
xchg
push
xchg
dec
sub
dec
sahf
insb
ds
dec
mov
int3
stos
mov
imul
jg
cmp
jae
cmp
jbe
stc
and
rclb
dec
ljmp
lcall
cmpsb
adc
push
xchg
mov
gs
stc
mov
les
sub
ljmp
inc
push
out
inc
nop
cs
icebp
std
out
inc
sub
add
jno
in
mov
ds
cli
outsl
mull
rcll
push
xor
or
lock
in
loopne
rorb
outsb
push
cli
sbbl
adc
bound
jns
adc
mov
lcall
sub
sub
insb
iret
mov
dec
mov
sbb
mov
test
dec
loope
dec
out
cmpsl
xorl
leave
lods
mov
mov
adcl
lahf
inc
sbb
push
test
in
rcl
loop
mov
subb
popf
sub
sbb
or
and
xchg
arpl
outsl
clc
fcoml
pop
clc
or
sti
push
clc
lcall
pop
iret
test
sbb
call
roll
out
cmc
jae
mov
add
out
subl
aaa
or
mov
je
sahf
mov
xchg
fildll
jne
or
ja
sub
rcr
test
lcall
inc
repnz
js
pop
xchg
repz
push
jp
out
push
dec
xor
into
mov
or
dec
shl
pop
inc
push
and
negb
or
jb
and
mov
rcrb
and
shlb
and
sub
repnz
inc
pop
and
sarl
or
in
push
pop
cmp
inc
push
insb
jnp
mov
test
mov
xlat
or
fldenv
adc
adc
push
lret
adc
jns
in
adcb
pop
js
sbb
cmp
mov
push
mov
out
and
insl
xor
ja
ficomps
ret
sbb
pop
inc
sub
sub
mov
mov
aas
mov
pop
loop
inc
lock
cmp
mov
mov
xchg
xchg
xor
xchg
add
and
gs
mov
sbb
pavgb
adc
xor
push
lods
sub
jle
jno
pusha
jnp
pushf
mov
out
sbb
lahf
sbb
lods
inc
loope
or
jo
aad
push
add
int3
add
mov
sub
mov
xchg
mov
gs
fdiv
out
sti
pop
ret
sbb
nop
fadd
sahf
and
test
push
mov
mov
pop
lods
adc
push
fistl
add
cmpsl
mov
in
pop
sub
mov
shll
aaa
dec
mov
bound
jmp
mov
and
pop
and
imul
pop
ja
xor
pop
push
in
xor
mov
das
pusha
jge
fucomip
ljmp
mov
or
dec
inc
mov
movsb
pop
ja
shll
xor
sbb
stc
iret
inc
mov
push
out
gs
rol
out
ljmp
fs
insb
addl
aaa
stos
push
xchg
loope
xchg
shrb
xchg
push
out
in
lret
daa
inc
push
xchg
push
sbb
or
push
cmp
pop
xchg
fmul
push
dec
fwait
lea
mov
mov
mov
push
and
push
push
fs
jno
sti
mov
aaa
out
loop
sbb
dec
loop
frstor
mov
insl
mov
push
test
add
cmpb
mov
push
push
icebp
push
repz
test
inc
sbb
xor
aad
je
clc
sbb
shrb
jnp
mov
sbb
dec
mov
int
xlat
in
aaa
push
mov
int
sbbb
movsb
mov
popf
enter
or
fistps
adc
imul
sbb
aam
push
or
lahf
scas
cmp
arpl
push
movl
das
cmp
pop
cmc
int3
and
mov
bound
pop
push
rorl
test
ja
test
rcrb
daa
push
sub
jp
jb
fwait
into
jbe
es
inc
xchg
dec
xchg
lcall
pop
jb
inc
stc
test
push
cmp
shrb
xor
mov
out
repz
gs
aad
jp
sti
dec
push
jecxz
cmp
in
mov
push
imul
mov
int3
cli
xchg
sub
ret
or
lods
negb
and
sbb
nop
cmp
jge
outsb
mov
mov
shrb
sub
cmp
and
sub
sub
push
and
fdivl
jb
rclb
mov
cli
idivb
outsb
insl
mov
cmpsb
ds
roll
dec
sub
rcl
sub
adc
xchg
daa
cmc
popf
pop
add
mov
in
out
arpl
cmp
scas
pop
dec
pop
jg
das
adc
mov
rol
jno
bound
les
or
icebp
sbb
push
cmpsb
mov
mov
mov
xor
stc
imul
imul
add
in
lahf
mov
inc
dec
jo
out
dec
cli
jnp
es
ja
mov
or
test
jmp
sbb
fnstcw
movsl
sbb
inc
into
cmp
or
sbb
aam
sub
dec
out
cltd
scas
jae
adc
inc
cltd
cmp
mov
jne
jl
testl
mov
sub
and
and
add
mov
dec
jle
shlb
lods
adc
xchg
lcall
pop
add
ja
je
inc
xor
mov
in
dec
jne
lret
jle
lahf
xchg
xchg
icebp
dec
push
mov
test
or
pop
imul
adc
test
pop
add
popa
mov
adc
fcoml
ds
mov
ret
mov
cmp
lods
and
testl
xchg
cmp
fsubrs
sti
xor
in
xor
outsl
push
jp
mov
xchg
add
ja
js
aas
pop
out
insb
mov
imul
jecxz
pop
je
xor
pop
push
stos
xlat
inc
pop
sub
adc
jnp
push
addr16
fistpl
addr16
push
add
leave
push
sub
jg
adc
sub
aas
fistl
cmpsb
shll
clc
xchg
cmpsl
into
stc
in
xchg
aaa
fbld
sbbb
loopne
mov
lret
ret
sbb
das
inc
add
rorl
je
jmp
insl
mov
or
mov
xor
clc
xchg
and
inc
xchg
pop
xor
aaa
repz
orb
or
ret
mov
mov
or
adc
jnp
mov
cld
push
push
xchg
aad
cmpsl
jns
es
cmp
add
dec
sbb
lea
fxch
add
xchg
fscale
mov
and
lock
inc
push
dec
cmp
out
bound
add
cltd
or
push
pop
fs
cmp
clc
jecxz
hlt
mov
add
cmpsl
mov
bound
adc
mov
cli
cmpsl
xchg
std
aaa
je
add
mov
pusha
push
push
xchg
in
jge
mov
out
mov
sub
mov
and
inc
negl
shrl
mov
aas
xor
mov
mov
sub
movsb
dec
mov
repnz
imul
and
pop
lods
or
sahf
mov
cmp
test
or
or
dec
test
shll
sbbb
repz
and
mov
sahf
cmp
xor
testl
sub
dec
call
cli
mov
lret
aas
icebp
cmc
test
mov
mov
mov
pusha
popa
idivb
xchg
cmpsb
mov
shlb
pop
jge
sbb
add
push
and
and
sti
jne
add
jb
pop
je
push
sub
adc
add
mov
mov
pushf
mov
aaa
cmp
out
fmuls
sbb
add
loop
stc
push
cs
arpl
fcmovne
cld
xchg
sub
add
xchg
xchg
push
mov
adc
out
inc
jae
into
sub
push
repnz
and
leave
dec
mov
mov
mov
and
mov
bound
test
dec
jae
mov
push
insl
fidivs
fwait
shlb
xchg
shll
rorl
insb
addr16
int3
arpl
push
cwtl
cmc
lock
imul
mov
cld
push
cmp
pop
mov
mov
bound
int
movsl
add
lcall
loope
imul
mov
xchg
jg
jge
cli
ret
mov
std
jbe
stos
mov
inc
lcall
aaa
outsl
or
scas
pop
cmp
pop
cmpb
mov
pop
fidivrs
mov
inc
inc
lcall
test
pop
fstps
fnstenv
fcoms
out
xchg
out
ret
mov
loopne
roll
insb
xor
push
mov
and
mov
xchg
out
jge
jo
mov
nop
push
pusha
mov
outsl
cli
xchg
adc
xchg
fnstsw
adcl
leave
ret
cmpsb
scas
lods
jno
mov
jge
xor
in
rcrl
cwtl
jb
ret
cwtl
ss
in
adc
out
adc
cmp
int3
sub
mov
pusha
stos
cmp
jecxz
adc
mov
mov
cltd
cmpsb
fstpl
iret
popa
cltd
fldenv
out
mov
dec
cltd
das
adc
cmpsb
jne
inc
mov
pop
xchg
and
jnp
icebp
dec
sub
aas
sbb
lds
pop
iret
insl
sbb
or
pop
sbb
mov
mov
push
shll
iret
insb
and
lods
loope
sub
lret
pop
pop
mov
sbbl
xor
xor
or
adc
repz
inc
or
jmp
pop
jmp
mov
or
and
sub
jl
movsb
lds
push
cs
test
inc
aaa
inc
push
jg
add
xor
dec
mov
rorb
mov
xor
xchg
loopne
push
int3
push
imul
mov
into
dec
sahf
sbb
loop
mov
aas
in
mov
cmp
inc
lock
mov
mov
or
sbb
or
lahf
sub
mov
icebp
cmp
insl
add
push
xor
cmpsb
scas
fnstcw
push
leave
push
and
sub
sub
mov
movsl
and
and
dec
mov
fcomi
repz
scas
repnz
push
rcl
and
subl
lahf
pop
cmc
jecxz
xor
lock
xor
and
mov
loopne
and
sbb
imul
gs
mov
jb
in
dec
iret
mov
and
xchg
adc
inc
mov
mov
test
jge
sahf
popf
jp
out
dec
shlb
dec
icebp
xor
and
push
gs
push
cmc
sub
out
mov
enter
jo
mov
aas
std
mov
aaa
ret
add
mov
mov
nop
fwait
imul
ret
sahf
out
xchg
push
jmp
loope
dec
adcb
and
add
or
sahf
cld
xlat
out
xor
xchg
dec
ss
push
mov
add
mov
mov
mov
mov
jne
pusha
adc
mov
popf
imul
mov
xchg
sub
add
ret
cmpsb
loop
sahf
loop
jno
mov
push
inc
lcall
repnz
push
repnz
or
jmp
insl
jl
mov
loopne
addr16
push
adc
inc
das
sbb
pop
jmp
or
jle
imul
aaa
es
rolb
jmp
pop
sti
in
mov
out
outsb
push
cmp
push
shlb
adc
pop
mov
mov
jo
jo
pop
fisttps
mov
lcall
cmp
sub
lea
aaa
movsl
in
insb
mov
pusha
push
push
adc
imul
cs
or
push
push
push
cs
sbb
xor
js
mov
push
cmp
pop
aam
je
stc
sbb
lret
jge
sbb
dec
lods
rcll
mov
fyl2x
iret
scas
repz
filds
fstpl
cmp
pop
int3
mov
out
mov
adc
andb
mov
or
mov
mov
xor
out
push
jb
stos
and
add
notb
mov
jno
mov
jnp
test
mov
dec
push
pop
jle
in
aam
scas
aas
adc
test
lock
mov
or
sbb
stos
stos
xor
fstl
push
insl
jbe
mov
mov
jge
pushl
ds
movsb
push
shrl
cs
test
cmpsl
and
fcoms
loopne
and
ret
in
cld
stos
xchg
mov
pop
push
ljmp
scas
or
imul
jp
jge
jle
adc
arpl
add
arpl
outsl
nop
loopne
pusha
fs
int3
pop
pop
adc
enter
bound
jg
fisttpll
in
add
sbb
add
shl
mov
inc
push
popa
push
fldt
push
repz
adc
adc
imul
adc
in
mov
ds
scas
iret
rol
adc
int3
lret
or
mov
xor
cmp
xchg
jle
dec
xor
pop
pop
movq
pop
lret
bound
ficoml
jno
daa
xchg
nop
mov
test
sub
clc
pop
lahf
dec
cwtl
cmp
and
or
dec
cld
fs
ficoms
pop
lret
cmp
clc
push
test
mov
movsl
fcomps
lcall
mov
push
cwtl
cltd
ljmp
cmp
mov
or
pop
mov
and
xchg
popa
shll
add
outsl
das
lods
sbb
pushl
pop
sbb
xchg
repz
out
into
out
mov
inc
sbb
sbb
xchg
cmp
mov
mov
hlt
cld
sub
and
push
pusha
loopne
loop
sti
or
aad
arpl
jnp
dec
arpl
shr
and
mov
cwtl
dec
lret
sub
in
sbb
pop
loop
scas
add
xchg
std
lock
mov
adc
mov
mov
test
and
in
xchg
sub
loopne
pop
aaa
push
xchg
inc
dec
dec
test
shlb
xchg
ds
or
je
adc
test
cmc
notl
mov
and
stos
outsl
nop
jo
jbe
pop
inc
imul
push
sbb
jb
xchg
mov
ja
push
out
push
jp
andl
outsl
testb
jmp
cmp
into
inc
xchg
xchg
push
gs
xchg
iret
decl
pop
adc
orb
xchg
push
sub
mov
std
test
cmp
dec
jge
sub
jg
sti
aaa
mov
ja
jb
add
dec
xchg
xchg
je
dec
aas
cmpsl
jge
pop
dec
stos
out
push
test
add
or
add
push
aam
and
fsubs
mov
xchg
push
lret
icebp
aas
mov
push
dec
jno
mov
arpl
mov
icebp
mov
mov
jle
jbe
dec
mov
adc
jmp
xchg
push
cmc
orl
cmp
test
sub
sti
pop
xchg
pop
push
jecxz
adc
mov
push
inc
and
push
or
inc
test
push
dec
mov
flds
leave
lahf
iret
xchg
pop
aaa
adc
repnz
fnstcw
inc
sbb
xor
xchg
bound
push
icebp
test
pop
xchg
test
mov
pushw
fdivs
enter
sarb
xchg
ja
gs
insb
jp
aas
das
sarb
pop
pop
adc
stos
out
jl
aaa
sbb
xor
cmp
je
ficompl
or
popa
cmp
mov
add
popa
rcll
loopne
push
test
jae
fdivp
test
out
cmpsl
loopne
adc
mov
lods
jno
fisubrs
fsubrs
addr16
dec
sbb
mov
gs
lods
lcall
and
inc
adc
add
xchg
adc
stc
out
je
mov
or
fwait
mov
xor
sub
lea
cli
push
push
push
hlt
movsb
out
xor
jge
or
sahf
cld
push
loope
ds
and
cmp
push
mov
inc
sti
addr16
mov
ss
mov
push
std
popa
xor
dec
xchg
mov
xlat
loop
xor
dec
loope
push
push
adc
negb
cwtl
jnp
jno
jp
aas
arpl
mov
mov
or
xchg
icebp
jno
xor
movsl
dec
xchg
sti
xchg
cli
sub
imull
xchg
movsb
xchg
mov
jo
addr16
jo
imul
aas
in
ljmp
or
mov
fcomip
jne
pop
outsb
cmp
add
daa
xchg
test
fdivl
mov
add
in
adc
pop
inc
lock
lret
fsub
or
jge
aam
mov
mov
lock
and
add
xchg
dec
jbe
stos
add
adc
inc
xchg
lcall
mov
jno
jnp
testl
mov
pop
xchg
xlat
jno
jg
cmp
pop
stos
add
push
mov
mov
dec
cmpl
xchg
inc
ss
pop
jne
lret
stc
push
pop
scas
mov
push
into
clc
adc
mov
dec
rcr
adc
pop
mov
sub
mov
xor
mov
jg
rcrl
mov
fldt
mov
in
mov
mov
and
lock
push
or
xor
outsl
fiadds
inc
stos
jge
call
mov
mov
adc
lods
or
movsl
xor
cmpsl
iret
mov
hlt
inc
aam
jle
jnp
mov
iret
insl
mov
repz
xchg
rcrl
or
idivl
lcall
das
js
leave
adc
sysenter
daa
push
xor
rol
adc
aad
pop
sub
aam
loopne
adc
cmp
cmp
cld
jb
iret
sbb
adc
jge
ret
push
pop
jecxz
sbb
push
into
or
pusha
xchg
shrl
and
cmp
enter
sti
gs
dec
push
cmp
sub
aaa
add
sub
and
adc
mov
lea
jns
pop
mov
mov
enter
insb
and
push
fisubl
test
cwtl
mov
push
pop
push
je
sub
pushf
loope
out
xchg
dec
insl
or
pop
xor
xchg
js
jno
ds
or
call
lock
es
sti
adc
call
jnp
sbb
hlt
push
arpl
xlat
aas
pop
and
call
inc
arpl
dec
ljmp
xchg
jmp
push
ja
hlt
scas
enter
mov
pop
adc
movsl
or
test
subl
pop
xlat
xor
bound
pop
int3
and
push
mov
cmp
push
jle
shr
mov
fsubp
and
xchg
sub
push
pop
daa
icebp
and
out
push
out
pusha
loop
mov
mov
sbb
lods
sarb
hlt
into
mov
mov
push
lock
xchg
jo
enter
jle
add
fisttpl
mov
lcall
jge
loope
dec
add
xchg
test
clc
add
cli
mov
out
movsb
leave
push
out
jns
outsl
cmp
jns
insl
inc
imulb
sub
adc
push
cld
jle
iret
mov
adc
lock
inc
cwtl
xchg
mov
inc
std
add
insl
jb
out
aad
cmp
cmovne
lds
xor
imul
clc
xchg
clc
and
les
loopne
bound
add
pop
or
jl
push
shrb
cs
xchg
sti
shrl
icebp
aas
mov
dec
mov
bound
adc
mov
mov
push
inc
sub
xchg
push
adc
xor
jns
dec
add
shl
and
ljmp
stos
leave
das
sbb
shrb
inc
data16
cmp
add
cmp
jne
aas
fwait
mov
shlb
in
pop
movsb
or
out
enter
push
mov
xor
scas
mov
inc
lea
insl
inc
arpl
nop
jecxz,pt
test
pop
imul
inc
mov
xor
push
pushf
dec
jne
ss
jp
mov
pop
mov
xor
push
les
mov
ja
popf
mov
jp
out
add
jecxz
aaa
out
paddsw
xchg
cs
jge
loopne
outsb
push
imul
pop
inc
test
cmp
fwait
mov
test
aaa
xor
add
cmpb
xrelease
jnp
rcll
jg
mov
lock
and
fbstp
cld
clc
push
sub
ljmp
decb
loop
cmp
mov
mov
lret
sbb
fbld
fdivrl
mov
lret
add
cmpsb
hlt
data16
pop
fnsave
mov
lea
ss
mov
inc
mov
add
js
daa
xor
lock
push
dec
cmp
cltd
xchg
add
popf
out
mov
jae
xchg
xchg
out
bound
cmpsl
cmp
out
fs
add
scas
or
mov
sahf
dec
out
sbb
int3
jae
push
movsb
in
sub
push
dec
fsubl
cwtl
ss
out
push
jno
add
test
into
sbb
pop
jp
fcmovnu
notl
repnz
in
cmp
je
pusha
cs
mov
dec
push
in
sbbb
insb
cmpsb
and
call
xchg
insb
imul
in
mov
leave
in
sub
clc
shlb
xor
dec
roll
add
loop
scas
data16
mov
iret
xlat
push
subl
and
sbb
jnp
xor
dec
int
or
cmc
sahf
lock
imul
loope
mov
and
out
addr16
push
rcr
pop
inc
in
or
xchg
cs
pop
insl
ret
je
loopne
daa
mov
outsb
sub
andl
or
subl
xlat
add
movsl
ret
out
jne
sub
cvtps2pi
fs
outsb
fwait
dec
sub
mov
mov
rcrl
cmpsb
adc
testb
call
daa
test
das
ret
scas
repnz
pushf
inc
jbe
pop
mov
mov
jo
sbb
dec
ret
sub
dec
mov
addr16
scas
push
out
inc
mov
pop
imul
fucomip
mov
dec
cmp
sbb
adc
pop
cmp
inc
dec
push
mov
popf
in
cs
mov
sub
cmpsl
repnz
jecxz
data16
mov
lds
cmp
push
mov
mov
mov
jns
das
lea
fwait
add
add
int3
sbb
cmp
jno
jmp
scas
xor
push
add
xchg
inc
fs
xor
mov
mov
mov
mov
cmp
and
mulb
adc
sti
loope
sub
pop
imul
cmp
pop
jbe
mov
pusha
ljmp
fs
mov
aas
lods
loope
mov
xchg
divb
mov
jbe
leave
mov
pop
lods
fdivl
lahf
jg
or
or
inc
in
cmp
mov
inc
mov
test
or
mov
xchg
dec
mov
push
pop
sub
pop
jne
std
in
pop
imul
dec
mov
and
push
lahf
in
jmp
sbb
lcall
scas
cmpsl
xchg
pop
inc
mov
and
push
ret
clc
sbb
jns
test
rcll
adc
or
insl
pop
lret
sub
test
addr16
adc
mov
pop
bswap
push
ret
sbb
sbb
stos
mov
shll
inc
imul
mov
mov
hlt
leave
jno
fnstsw
in
mov
popf
into
lds
lahf
pop
je
xor
sahf
sti
enter
inc
ret
lcall
nop
dec
aam
mov
dec
sbb
fs
mov
fildl
adc
rclb
andb
outsl
xchg
sti
lds
jno
sahf
xor
fdivrl
jle
cwtl
push
xor
lret
mov
mov
fildll
mov
push
cld
sti
cmp
xor
shll
stos
sahf
sub
shl
lret
repnz
std
fbld
iret
fnstsw
or
push
adc
ds
hlt
cmc
mov
push
push
out
out
sub
mov
mov
mov
mov
xor
lcall
lds
test
pusha
iret
inc
stc
fstp
dec
enter
jg
push
sarb
and
sti
stos
pop
mov
or
jne
sub
push
mov
jl
add
dec
ljmp
mov
lcall
push
repz
or
nop
sarb
xchg
cmp
mov
bound
sarb
sbb
stc
and
push
aam
adc
xorl
xor
or
jl
stc
mov
adc
mov
hlt
iret
js
sarl
and
daa
pop
push
inc
mov
mov
pop
push
sbb
cmp
inc
mov
lret
bound
popf
in
mov
mov
lret
mov
ljmp
pusha
jns
mov
fs
jb
lds
jae
pushl
xchg
xchg
test
arpl
mov
jbe
fimuls
mov
jecxz
inc
push
jg
cld
ret
or
popa
inc
sbb
and
and
jecxz
call
cmpsl
pop
mov
fnstcw
xor
add
loop
mov
jbe
int
jno
mov
sti
cmc
dec
pushf
push
jge
lahf
xor
cmp
mov
sub
std
clc
gs
mov
nop
mov
aaa
mov
and
out
jge
in
lahf
std
xor
movsl
test
add
jb
jle
popa
xor
sub
ret
stc
cmpsl
mov
xchg
adc
aas
into
dec
jno
mov
lea
iret
nop
mov
xor
mov
outsb
jg
fbstp
loope
insl
jl
pop
and
mov
orb
jne
push
sbb
mov
mov
ljmp
jecxz
ret
pop
movsb
adc
jnp
mov
gs
or
stos
pop
jno
int3
test
add
add
xor
fildll
orb
hlt
dec
adc
push
test
fcoml
mov
outsb
aad
fcompl
punpckldq
jp
jb
cwtl
jns
sub
mov
arpl
int3
arpl
mov
dec
repz
repnz
fidivrl
stos
xor
lods
int3
jbe
jg
pusha
add
mov
gs
xor
lret
and
or
out
cmp
xchg
cmpsb
jbe
mov
aas
outsl
sub
mull
sub
or
stc
jb
dec
cmpsb
test
jns
cmpsb
jae
xor
popa
inc
or
mov
rorb
dec
push
gs
sbb
shlb
dec
ss
mov
ljmp
sbb
mov
sar
cmp
or
pop
movsb
xchg
or
aam
push
xor
cs
fwait
lock
es
mov
fcoml
fs
test
aad
jle
loop
or
int3
xchg
mov
adc
inc
cmp
jecxz
sub
xchg
dec
repz
or
test
lahf
daa
mov
popa
fcoms
xchg
xchg
movsl
mov
addr16
loope
cmpb
in
fstl
out
fisttpl
out
dec
and
cmp
push
add
lds
mov
mov
je
or
es
mov
inc
push
lods
mov
sub
dec
into
add
xchg
in
hlt
add
push
cmc
cmp
mov
sarb
sbb
sar
mov
stos
or
and
or
loope
imul
mov
loope,pt
push
adc
pop
dec
repnz
rolb
cwtl
insb
int3
jmp
mov
sbbb
repnz
mov
imul
popa
scas
das
cmp
fadd
mov
mov
xchg
xor
dec
xor
push
into
or
fildl
inc
push
je
jmp
xorb
xchg
dec
insl
imul
int
cmp
cmp
das
cli
xor
cmp
push
mov
inc
xchg
pop
sahf
cmp
loop
dec
cmp
adc
mov
fisubrl
repz
imulb
pop
jl
jle
jle
mov
inc
inc
outsl
mov
test
or
jg
movsl
adcl
bound
mov
stos
fmull
mov
sbbb
into
fucomip
and
push
xchg
and
and
rep
sbb
fwait
xchg
inc
sahf
pop
orps
test
cltd
push
imul
hlt
lret
add
adc
xchg
negb
cwtl
ffree
mov
mov
int
xchg
outsl
fadd
fildll
mov
cwtl
outsb
addb
aas
jo
paddq
xchg
data16
sub
inc
add
mov
gs
int
outsl
imulb
mov
sbb
inc
xchg
ljmp
sahf
or
insl
mov
cmc
jl
sub
inc
stos
mov
popl
imul
add
nop
and
dec
xchg
add
leave
icebp
pop
pop
mov
jcxz
cs
jnp
pop
mov
mov
scas
lahf
jecxz
fidivl
ret
fdivs
mov
push
xchg
daa
in
add
hlt
mov
lea
cmp
xchg
jmp
dec
cmp
dec
mov
and
outsb
loope
inc
repz
mov
jl
inc
ds
xchg
sbb
in
cmpsl
cmpsb
and
cmc
or
mov
sub
daa
into
xlat
mov
cli
orl
stos
dec
pop
addr16
lcall
and
insb
xor
push
cmpsb
push
in
icebp
and
add
jge
sti
js
insl
and
push
sbb
mov
int3
mov
scas
in
std
mov
aaa
sahf
or
repz
mov
adc
js
add
jmp
mov
loope
pushf
aaa
sti
add
cmc
add
int
xor
clc
mov
or
cmpsl
in
sbb
sbb
jno
pop
add
xchg
ds
dec
adc
call
push
lret
hlt
cltd
bnd
jp
mov
sti
sub
cmpl
push
outsl
jge
push
push
jle
mov
push
cmpl
in
xor
or
inc
idivl
mov
inc
inc
out
inc
xchg
hlt
outsl
jg
pop
pushf
ret
xchg
pop
in
sbb
sub
inc
xor
inc
mov
aam
sarl
adc
jne
jge
jns
into
mov
mov
stos
and
push
xor
idivb
scas
cmp
das
mov
mov
negl
jb
adc
and
sti
sbb
add
and
sub
mov
mov
bswap
std
mov
fadd
orb
adc
in
pop
and
scas
enter
xor
in
test
add
sub
xchg
sub
jmp
nop
in
jmp
pop
mov
or
mov
addr16
xor
xchg
es
insb
cmp
es
mov
pop
stos
movsb
mov
ljmp
std
xor
add
sahf
ret
adc
pop
sub
das
adc
inc
push
sti
inc
sarb
test
jbe
subl
lret
cli
jge
arpl
inc
jae
je
out
mov
sub
adc
inc
mov
xor
dec
xlat
ljmp
and
es
fidivl
push
mov
out
add
mov
xchg
adc
dec
jp
dec
inc
add
sub
push
gs
and
mov
xchg
inc
jge
mov
add
or
leave
in
xchg
mov
cmp
cmp
fwait
and
sbb
and
sub
mov
repz
frstor
xchg
inc
inc
push
inc
sbb
push
daa
pop
adc
xchg
mov
cmp
or
sub
and
cmp
push
cli
or
adc
add
flds
popa
les
test
fdivl
aas
sbb
mov
loop
fmulp
gs
sti
aas
add
xchg
arpl
and
inc
pop
int3
sti
fiaddl
loope
push
test
test
out
mov
es
cmpsb
add
test
push
or
adc
sub
and
arpl
pop
sbb
outsb
lcall
fs
push
or
movaps
rorl
sub
int
mov
cmp
leave
stos
push
push
inc
cwtl
mov
add
add
fsts
and
xchg
leave
xchg
push
push
in
cmpsb
mov
outsb
mov
cmc
lds
sub
xor
std
test
sbb
hlt
decl
test
iret
nop
add
xor
xchg
push
js
insb
xchg
jo
or
or
pop
push
movsb
dec
pmaxsw
push
pop
and
in
mov
push
into
sbb
mov
sbb
mov
nop
mov
out
stos
xchg
mov
addr16
outsb
enter
adc
or
xor
adc
pop
hlt
int3
jo
imul
pop
rcll
daa
cwtl
inc
fisttpll
cwtl
jns
cmc
dec
push
dec
loopne
idivb
push
pop
ljmp
subb
popf
pop
dec
xchg
dec
pop
dec
xchg
hlt
pop
lahf
bound
mov
fsubrs
in
insl
cmp
and
xor
pushf
dec
insb
inc
push
fcoms
lods
adc
dec
sbb
and
jns
xchg
cwtl
aam
les
daa
leave
daa
sbb
clc
push
jmp
mov
pop
into
sbb
jne
jne
addr16
add
inc
cmpsb
rclb
pop
fisttpl
fldenv
divb
push
add
rcl
sub
push
sti
mov
sub
mov
cli
push
cld
push
sbb
movsl
inc
cmp
cmpsl
add
adc
inc
cmc
lods
loopne
ds
sub
dec
fisubs
iret
xchg
outsb
ret
inc
dec
sar
xor
xchg
les
lcall
in
test
inc
mov
sti
lds
xchg
loop
sbb
test
mov
or
into
test
fisubl
pop
shlb
pop
jecxz
pop
push
ljmp
outsl
pop
addl
out
andb
clc
push
les
mov
aam
cmpl
add
cmp
push
hlt
das
bound
jmp
js
add
stos
mov
movsb
enter
cmp
clc
pop
shrb
pop
xchg
push
push
aad
out
mov
shr
jle
mov
insb
enter
iret
fildl
add
dec
fs
xor
xchg
test
push
pop
test
sub
xchg
dec
jg
or
jge
add
insl
push
nop
leave
out
cli
fdivr
add
dec
loopne
insl
push
test
pop
push
cld
xchg
movb
dec
stc
mov
test
clc
nop
cld
js
adc
ret
sbb
push
lds
jp
test
xchg
push
xorb
shl
test
daa
or
xlat
aas
scas
sbb
test
test
xchg
jbe
add
jns
ljmp
lds
jmp
push
nop
jmp
ret
ja
mov
pop
jl
jl
push
inc
outsb
jbe
sub
mov
sbb
call
rclb
lods
dec
imul
lods
push
mov
push
int3
pop
popa
or
and
xchg
jge
xor
jge
shrl
pop
pop
jnp
cmpsl
sub
lds
fucomp
adc
xchg
mov
into
inc
jns
sub
ljmp
and
jg
pop
sub
pop
dec
xchg
sub
lds
imul
std
fdivrp
or
aad
mov
jae
mov
sub
cltd
adcl
jl
test
mov
fnstsw
push
cmc
scas
sub
sub
repnz
popa
call
mov
lahf
jmp
sbb
int
ljmp
push
jge
pop
sarb
xor
xchg
mov
pop
mov
cmp
shl
or
xchg
shll
sahf
insb
pop
add
or
fadd
clc
mov
cmp
jbe
gs
push
adcb
mov
pop
loope
dec
push
ret
pop
pop
mov
fidivs
popf
addb
push
mov
fs
clc
rorb
rol
ss
adc
stos
mov
cmp
xor
mov
push
fsubrs
dec
inc
clc
sarl
mov
lret
or
cwtl
ja
jle
or
nop
je
rcrl
xlat
and
cs
das
add
adc
mov
mov
adc
scas
push
fimull
jns
ljmp
lock
lock
and
lea
adc
les
sub
sbb
hlt
push
jle
adc
adc
or
popa
xor
aam
adc
je
sub
pusha
fstpl
jbe
test
iret
mov
cmp
cld
mov
nop
mov
lcall
sahf
mov
lcall
xor
xchg
leave
sbb
cli
or
insb
out
push
inc
pop
cmp
pusha
out
loope
fnstsw
xchg
in
loop
mov
es
loopne
sbb
mov
sub
add
dec
sbb
sbb
adc
push
adc
hlt
dec
outsl
jb
xchg
jo
ds
dec
mov
cmp
fcmovne
cmp
and
loop
std
jb
cmpsl
add
mov
jp
aam
jle
and
jge
outsl
sahf
rcr
loope
in
sahf
pop
cmp
sbb
icebp
in
loop
jae
stos
pusha
mov
iret
add
mov
insb
cld
jbe
into
sbb
mov
nop
add
mov
cli
inc
mov
adc
int3
mov
jg
aad
test
arpl
test
dec
xor
sar
cmpl
push
jge
xchg
xor
mov
outsb
inc
cwtl
xchg
xor
adc
pop
jae
sarb
xor
cmpsl
incl
dec
loopne
fsubrl
rol
jle
loopne
nop
sti
pop
or
stos
sbbb
out
cltd
and
ss
lods
dec
jmp
mov
dec
cmp
mov
push
cld
and
jnp
insl
adc
pop
call
cmp
into
inc
repz
mov
lods
mov
adc
movsl
leave
add
in
and
inc
jmp
call
arpl
leave
das
fcmovnb
jne
je
cli
add
xchg
dec
pop
jae
je
shrl
pop
xchg
add
push
dec
jae
ljmp
cmpsb
mov
mov
adc
pusha
lcall
dec
int3
add
cwtl
cs
mov
les
pushf
lea
push
xchg
inc
loope
repz
adc
cmc
scas
imul
fsubrs
jl
int3
xchg
mov
add
mov
js
cmp
dec
in
ret
inc
faddl
ret
int3
in
sub
gs
test
adc
bound
es
mov
shlb
add
test
ja
add
jle
pop
dec
mov
mov
push
add
cmp
xor
mov
xchg
lds
loopne
or
mov
fisttpl
or
rcll
lret
mov
xchg
and
or
mov
mov
adc
das
adc
jecxz
add
xchg
sahf
das
mov
and
and
inc
xor
sbb
xor
jne
push
je
inc
aaa
repnz
testb
out
push
movsb
mov
rcl
mov
jp
lods
fisttpll
dec
ja
iret
mov
ret
dec
sub
in
mov
and
mov
mov
cld
mov
aad
ja
or
and
ss
dec
add
js
inc
xchg
fbld
inc
mov
mov
in
pop
les
mov
inc
mov
or
and
mov
leave
in
push
jnp
loop
mov
test
outsb
ss
lret
pop
test
mov
xchg
jno
pop
mov
jnp
inc
pop
int3
shll
pushf
pop
pushl
inc
nop
aam
int
movsb
loope
rorl
cmp
popf
jg
scas
test
imul
dec
enter
mov
xchg
or
sar
jbe
shlb
out
xchg
je
sub
mov
push
scas
mov
ret
cmp
mov
fisttps
xor
adc
mov
cmp
lea
bnd
jle
inc
insb
arpl
push
stc
vpcmpgtw
dec
cmpsb
repnz
jbe
add
xchg
or
test
pop
ds
xchg
push
icebp
mov
in
xor
xchg
adc
jg
add
fimuls
push
pop
pop
jnp
add
inc
mov
js
pop
data16
jl
xchg
inc
mov
call
mov
into
sub
bound
mov
mov
insl
push
pop
push
xor
cs
xchg
cmp
js
mov
repnz
ficomps
sub
pop
int3
into
pop
and
jbe
aam
in
push
sub
outsl
sti
mov
lock
cltd
jb
jne
cld
ja
scas
pop
test
push
mov
jns
cmpsb
popf
add
jns
sub
adc
out
sub
or
int
clc
add
dec
mov
mov
adc
or
loope
cmp
insl
mov
push
lds
push
lret
dec
jo
mov
mov
aas
rcl
jle
jg
pop
inc
inc
jbe
cmp
cwtl
inc
mov
jbe
push
sbbl
rcll
push
mov
cwtl
shll
jbe
adc
dec
test
mov
cmp
out
sub
sub
in
pop
scas
in
out
dec
mov
adc
cmp
fdivs
xchg
dec
ficompl
mov
add
xchg
leave
and
dec
jl
sbbb
mov
out
jmp
jb
jmp
xchg
mov
mov
stos
out
push
cmc
xchg
add
clc
lret
pushf
pop
adc
mov
sbb
or
jmp
push
lret
inc
jmp
rorl
or
out
jge
inc
out
mov
fidivs
js
xor
ret
cmpsb
das
jns
adc
or
xor
jl
push
or
test
xchg
out
mov
mov
insb
loope
dec
frstor
sub
and
lods
ficoml
jp
xor
dec
clc
scas
daa
aad
xor
jl
sar
fcomps
mov
imull
das
ret
adc
imull
inc
mov
bound
and
imulb
xor
push
loope
cmp
ret
inc
repz
jl
jb
and
add
mul
lret
ficoml
fidivrs
call
dec
inc
mov
lcall
aas
adc
mov
arpl
inc
mov
inc
and
fidivrs
jg
fwait
shlb
fidivl
scas
xchg
inc
sbb
fwait
jmp
cmp
jne
sub
call
lds
fwait
ret
scas
cli
movsl
or
daa
sub
and
or
loopne
pop
dec
adc
or
cmp
sbb
mov
dec
cmpsb
mov
xchg
mov
inc
cmp
imull
ret
xor
or
fsubl
pop
cmpsl
mov
jae
pop
sub
sti
movsb
cli
jmp
jecxz
cmpsb
mov
shrl
and
dec
xchg
into
pop
mov
out
pop
inc
outsl
pop
shlb
popa
dec
aaa
sub
adc
xchg
stos
loopne
cwtl
in
incb
push
jb
pcmpeqw
add
ja
aad
mov
dec
sub
sbb
add
rcl
adc
imul
mov
popa
or
loopne
mov
aam
in
xor
pop
popf
pop
aaa
sbb
fnstenv
push
push
repnz
inc
nop
fists
js
dec
ss
lea
sub
dec
shlb
and
daa
xor
leave
mov
rclb
add
les
out
pop
imul
add
jae
imul
or
leave
in
xchg
mov
js
adc
int3
jle
xchg
mov
nop
sahf
dec
int
cmp
mov
fildl
xor
daa
outsb
mov
fldpi
lcall
sub
icebp
jg
movsb
fprem
cmp
testl
dec
jg
stc
test
mov
sub
and
mov
jl
fisubl
push
jno
push
loopne
adc
mov
outsb
ret
aas
mov
or
sbb
decl
cmp
sub
sub
mov
add
stos
lods
mov
div
mov
add
sub
cmp
addl
xchg
jo
sub
mov
shrl
cld
lret
loope
andl
leave
xorl
rolb
popf
cwtl
test
sbb
jo
push
jp
lods
std
mov
rorb
mov
fdivrl
mov
mov
push
cli
arpl
xlat
mov
mov
lcall
test
in
fldl
cs
addr16
lods
jecxz
imul
inc
int3
push
movsb
xchg
lds
sbb
fwait
cli
mov
cli
inc
adc
imul
subb
push
movsl
jle
rorb
leave
lahf
xchg
cmp
jbe
pop
mov
adc
dec
js
dec
jne
cmpsb
out
push
adcl
add
adc
or
inc
jb
arpl
popf
add
sub
pusha
mov
adc
gs
lahf
push
pusha
and
test
aam
and
inc
loope
sbb
sbb
cmpsb
cmp
mov
adc
lods
lock
jmp
jg
mov
jmp
add
mov
add
xchg
xor
pop
cmpsb
mov
mov
cmp
jbe
adc
add
xchg
clc
or
imul
sub
xor
mov
jne
idiv
fidivs
daa
aas
insb
inc
mov
adc
dec
mov
cmp
nop
add
xchg
sub
loop
or
out
outsl
pop
daa
jg
jne
add
pop
xor
pop
pop
movsl
popf
add
test
push
push
and
scas
fimuls
mov
js
pop
arpl
push
xchg
adc
test
lods
fldenv
shrb
or
outsl
xor
in
cli
or
fmull
dec
js
aas
mov
mov
cmp
icebp
jg
clc
les
push
push
lock
add
nop
jo,pt
adcb
jle
mov
loopne
les
xor
call
ss
or
sti
xchg
push
imul
lahf
mov
pop
or
push
xchg
cmp
inc
push
mov
mov
and
popa
cmpl
cli
bnd
and
mov
xchg
sub
adc
inc
xor
and
or
pop
mov
cmp
in
popa
iret
ret
push
xchg
cwtl
mov
mov
mov
xor
jg
hlt
push
das
jl
hlt
mov
push
movsl
cmpsl
dec
shrb
outsl
pop
movnti
test
mov
ss
cwtl
scas
jmp
and
cli
shrl
xchg
in
mov
pusha
xor
fucom
out
mov
aas
loop
cld
dec
pop
repnz
mov
dec
push
or
lahf
jns
out
aas
sub
xchg
mov
movsl
push
popf
sbb
jl
mov
jbe
test
pop
lds
mov
bound
lods
mov
mulb
mov
cmc
sub
push
cmpsb
jnp
lods
comiss
je
sbb
xchg
mov
fbld
scas
push
leave
inc
decl
mov
mov
dec
or
fwait
dec
pusha
jo
cmp
rolb
jb
enter
xor
cwtl
sub
jns
push
movsl
jns
lods
fdivp
test
cld
in
out
int
add
cmpsl
push
cmp
jecxz
ds
test
sbb
rcr
mov
mov
inc
jae
adc
and
cmpsb
pop
push
nop
fsqrt
in
add
sub
lret
xlat
jmp
movsb
mov
xor
mov
sbb
cs
jne
leave
out
outsw
roll
nop
imul
cmp
xchg
jp
loop
fwait
mov
push
push
inc
mov
xchg
mov
scas
test
test
fdivrl
pop
push
dec
shll
aad
in
fistps
cmpsl
lcall
inc
inc
mov
mov
ljmp
test
mov
and
icebp
std
int3
cmp
mov
mov
cmc
sti
mov
fildl
inc
popa
adc
xchg
mov
and
and
dec
aad
jmp
pop
cmp
imul
sub
out
mov
jecxz
jmp
aad
stos
call
push
sub
jecxz
out
pop
daa
scas
pop
or
mov
inc
fwait
cli
adc
push
dec
sbb
pushf
fcmovne
jecxz
add
or
xchg
inc
popf
pop
imul
adc
dec
adc
jge
mov
cmp
mov
arpl
or
xor
clc
aad
rcrl
call
fadds
icebp
popf
and
fistl
sub
inc
enter
fsubl
mov
xchg
cmp
jns
and
sbb
jp
add
inc
adc
je,pt
jbe
les
cmp
sub
push
repnz
rcrl
cmp
subb
bnd
loope
je
pop
stc
out
int
stos
xor
jns
xor
sub
or
ljmp
inc
pop
mov
mov
imul
and
pop
inc
out
sub
lret
sub
inc
dec
and
pop
cli
les
mov
pop
push
cwtl
mov
into
pop
popa
cmp
pop
in
test
ret
sbb
sahf
mov
out
mov
out
mov
outsl
jge
lods
rorb
push
pop
pop
sub
test
xlat
mov
mov
addr16
pop
out
push
mov
imul
xchg
add
mul
sub
shrl
lahf
adc
xchg
sbb
movb
out
mov
pop
xchg
and
mov
call
mov
idivl
dec
js
inc
mov
xor
sub
add
dec
sbb
stc
movsl
push
mov
sbb
mov
xor
inc
and
jmp
and
int3
sbb
dec
fisubrl
jo
sub
mov
fs
loopne
test
repz
shll
movsb
js
add
outsl
out
lcall
mov
fisubl
push
add
xor
aas
dec
inc
xchg
pop
addr16
or
push
push
fwait
mov
add
mov
scas
out
mov
lcall
out
ss
inc
or
ds
cmpsl
push
lret
sar
enter
cmp
sbb
jge
sti
mov
push
jae
adc
inc
pop
lods
jge
cli
xor
inc
jp
imul
xchg
pop
mov
sbb
inc
jbe
out
inc
repnz
adc
add
lods
ljmp
jne
mov
sbb
fdivrs
imul
mov
cwtl
pop
mov
pop
lret
call
sub
sbb
mov
jno
call
scas
es
fdivrl
mov
out
dec
xor
inc
sti
fisttpll
lret
lahf
or
or
rcll
addr16
sbb
pop
mov
cmp
lods
loope
mov
xlat
and
cmp
aas
add
aaa
call
xor
pop
mov
or
pop
test
mov
and
add
xchg
push
addl
in
fmull
adc
loop
mov
fsincos
testl
cli
cmp
xchg
sbb
and
push
lea
popa
popa
fstpt
mov
inc
dec
dec
jp
in
gs
jge
fsubs
scas
inc
dec
cmp
jmp
scas
cmp
cli
mov
cmp
push
jle
mov
push
sub
gs
test
clc
add
push
xchg
shrb
mov
xor
loopne
fmuls
shlb
sahf
jae
mov
ss
and
jle
or
xchg
or
xchg
jns
mov
cltd
stc
jno
jecxz
out
inc
jnp
jp
mov
push
rclb
sub
out
fwait
dec
mov
outsl
mov
pop
mov
cmp
cmc
push
adc
and
sub
ret
xchg
and
iret
mov
pop
adc
lock
add
stos
jl
aaa
out
inc
push
jmp
xchg
sbb
mov
mov
mov
xor
sahf
jbe
and
negl
test
paddw
pop
mov
lock
pushf
sarl
xchg
stc
popf
add
imul
ffree
cs
mov
mov
adc
adc
sbb
dec
gs
ss
xor
fmull
jbe
jmp
inc
push
ss
fstps
sub
mov
mov
int
inc
mov
xor
jb
loopne
inc
ficomps
mov
arpl
mulb
shlb
mov
mov
sub
ja
add
mov
repz
sti
pusha
adc
divl
aam
cmpl
pop
jo
sti
sbbb
sti
jle
out
push
adc
jg
pop
xchg
add
lods
xchg
in
mov
stc
je
adc
mov
pushf
int
ljmp
fbld
inc
inc
adcb
cmpsb
mov
push
fnstsw
mov
ffreep
xchg
rcr
lret
loop
fxch
xchg
jne
xor
push
sub
dec
sub
xchg
shr
test
loopne
and
je
enter
mov
push
jb
inc
pop
mov
cli
popf
inc
cltd
mov
and
mov
je
clc
adc
imul
and
in
mov
mov
negb
rclb
mov
insl
xlat
dec
cltd
je
sbb
insb
jb
add
or
ret
in
dec
sub
xchg
dec
mov
test
and
sub
or
add
insl
pop
lcall
xorb
inc
push
cmp
sub
jo
xor
xchg
xchg
stos
js
jb
rclb
cmp
pusha
lahf
mov
push
xchg
fs
cltd
jne
fiaddl
out
jb
pop
mov
sbb
arpl
mov
clc
push
in
fcompl
xchg
mov
scas
sub
xor
mov
out
or
mov
mov
xor
pop
stos
arpl
outsl
lods
movl
adc
hlt
cmp
dec
add
orb
mov
xor
test
fbstp
add
sbb
mov
les
push
decl
mov
scas
jle
and
shl
or
imul
xchg
nop
nop
lcall
clc
fildll
orl
mov
js
jo
test
cmp
ja
scas
adc
ja
sbb
mov
fs
mov
lea
into
cltd
adc
mov
push
lahf
fisubrl
jbe
add
pop
in
sbb
outsl
jnp
xor
out
xor
loope
movl
push
cmp
aad
and
test
into
mov
xlat
lock
out
jns
jg
repnz
dec
add
sub
xchg
rolb
push
inc
inc
adc
jbe
inc
mov
xchg
add
pop
lods
jg
or
pop
xchg
or
adc
inc
pop
sub
add
pop
dec
adc
fnstcw
lods
adc
addl
jnp
sbbb
mov
hlt
iret
sbb
outsb
sarl
push
inc
mov
mov
sbb
shl
or
xlat
cs
icebp
push
jmp
mov
sarb
ja
les
lea
or
mov
dec
or
fwait
mov
lcall
fimuls
ljmp
xor
or
sbb
pop
and
pop
cmp
sub
push
inc
mov
test
xchg
cmp
cmpsb
mov
add
xchg
nop
shl
and
pop
js
imul
jb
shl
push
mov
dec
inc
leave
pusha
call
sbb
sbb
rorb
sub
push
cmpsl
xchg
aam
mov
shll
in
mov
filds
xchg
cmpl
sub
mov
or
sub
mov
push
adc
jo
mov
cmp
aad
add
pop
movsl
pop
dec
ljmp
xor
or
sahf
ljmp
and
and
push
fisttpll
clc
ja
sarl
fistpl
mov
jbe
fidivs
push
shll
sbb
xor
pop
jmp
repnz
mov
pop
jle
insb
lcall
or
repnz
mov
in
pop
push
sbb
xor
xor
inc
mov
lock
jno
cmp
ret
jp
mov
mov
sbb
rcrl
divl
lret
cmpsl
fistps
sub
mov
mov
pop
addr16
xor
add
in
push
jle
push
push
aad
gs
movsb
mov
jne
fsts
push
test
mov
mov
and
xlat
das
xchg
stos
pop
xlat
mov
pop
decl
out
or
lahf
jle
orl
push
inc
test
pop
sbb
inc
fisttps
les
lcall
jae
pop
test
cltd
cmpsb
sub
sbb
jb
and
and
int3
dec
and
sbb
pop
cltd
icebp
out
fimull
in
enter
pop
lret
gs
jp
xchg
call
sbb
adc
xlat
push
ljmp
movsb
xlat
scas
sub
rcr
nop
dec
sub
daa
push
inc
adc
cmp
or
out
imul
rorl
mov
or
dec
mov
popa
cmp
les
not
jno
mov
xor
popa
jb
fsub
mov
xchg
popa
and
test
cmpsb
outsl
jmp
sub
in
test
bound
pop
inc
add
cmp
sub
aad
dec
mov
and
or
inc
ljmp
pop
mov
jns
sbb
imul
inc
mov
push
and
stc
dec
add
xchg
sbb
mov
pop
lea
push
adc
aaa
cmp
shll
sbb
and
pop
xchg
and
jecxz
jle
pop
decl
aad
in
in
daa
and
pushf
mov
xlat
mov
insl
fldl
or
int
test
fdiv
pop
aaa
cmp
jmp
aad
cmp
lcall
push
addl
fcoml
jno
pop
shr
add
in
pop
out
push
mov
push
or
xchg
xor
jnp
dec
mov
aas
ljmp
dec
mov
push
dec
cmp
mov
inc
pop
cwtl
into
imul
push
jmp
pop
push
adc
sbb
xchg
sub
xchg
cmp
movsl
js
mov
shlb
lods
fisubl
pop
add
fildl
xchg
mov
lea
fsubrp
cmp
inc
inc
lea
jge
popa
in
fidivrs
scas
in
push
or
jne
call
cmp
inc
jmp
rclb
jbe
mov
scas
ljmp
mov
loopne
add
addr16
or
jo
mov
mov
inc
fldl
in
or
aas
sub
add
mov
mov
jnp
sub
data16
mov
popl
and
in
cmpsb
mov
inc
imul
out
test
fs
fcmovnu
sbb
jae
sub
mov
add
arpl
popa
mov
push
dec
repnz
sahf
aaa
addr16
cli
in
ljmp
add
arpl
arpl
dec
pop
popf
cmp
stc
push
mov
lahf
lods
imull
adc
lock
ja
pop
loopne
lods
stos
addr16
imulb
ja
cmpsb
loope
ss
cmpsb
inc
enter
fs
inc
out
loope
xchg
mov
xchg
test
pop
sub
push
xchg
add
mov
sarl
je
xor
loopne
add
and
mov
and
jmp
in
mov
sti
add
inc
outsb
leave
mov
lahf
negb
repnz
out
cmc
xchg
xor
mov
push
or
dec
push
or
xchg
dec
xorb
lods
loope
in
loope
dec
outsb
sbb
push
inc
cld
cmp
add
mov
and
dec
pop
lods
sub
pop
xorl
mov
add
das
mov
xchg
aaa
add
mov
std
mov
and
pusha
stos
dec
jecxz
mov
adc
cmp
xor
je
push
and
pop
jl
fmul
sub
xchg
sub
mov
and
add
sti
or
scas
mov
lods
ds
cmp
xchg
push
pop
jmp
das
xchg
jp
lea
pushfw
clc
dec
aad
int
sub
sbb
out
mov
xchg
scas
and
mov
xlat
push
std
ss
mov
and
imul
xor
lret
adc
xchg
xlat
add
mov
mov
cmp
ja
sub
push
stc
jle
adc
lahf
cltd
jnp
cmpsb
imul
sub
sbb
pop
repz
xchg
lea
mov
xchg
lahf
dec
dec
sbb
xchg
jecxz
imul
int3
ds
icebp
lret
xchg
stos
ret
rclb
cltd
mov
cltd
mov
inc
mov
adc
arpl
lods
and
sbb
adc
pushf
sbb
jmp
ret
push
push
jo
xchg
mov
ds
test
std
mov
xchg
insl
leave
mov
mov
mov
aam
mov
or
jae
cmp
adc
inc
imul
cmp
fucom
mov
jae
xchg
icebp
imul
mov
xor
enter
call
sub
mov
and
push
dec
cmp
jp
iret
ja
xor
iret
int3
dec
inc
dec
xorl
inc
pop
out
sub
loopne
inc
inc
or
ret
enter
or
sbb
iret
xor
jnp
xchg
stc
in
ret
sar
cmp
cmpsb
inc
and
fwait
enter
les
mov
jg
sbb
and
and
dec
xchg
adc
pop
insl
push
sbb
sub
in
cmp
aad
lret
lret
mov
nop
lock
lret
add
ja
cmp
jo
dec
pop
push
push
pop
xchg
cs
cmp
les
sbb
push
sub
add
or
enter
add
es
ds
das
lods
loope
xchg
arpl
je
xchg
jo
or
lcall
mov
movb
pop
addr16
inc
mov
push
and
sbb
lock
sti
cmp
mov
pop
dec
or
add
mov
movsb
add
dec
leave
arpl
add
or
push
pop
loop
add
dec
dec
jo
clc
or
and
dec
pop
mov
adc
addr16
mov
push
loop
out
pop
call
cmp
add
mov
lods
jecxz
add
mov
xchg
scas
sbb
loope
lret
push
fisttpl
dec
dec
ror
int3
adc
jg
movsb
and
mov
sub
jecxz
push
sub
into
mov
xchg
cli
repz
popf
sbb
in
push
fistl
sub
ja
fwait
mov
sbb
test
or
sub
xor
jle
pop
push
add
movsb
fldenv
mov
filds
icebp
cmp
push
mov
inc
cwtl
rcll
mov
lahf
mov
pop
push
sahf
cwtd
xchg
in
pop
sub
pop
xor
shrl
sbb
dec
cltd
mov
push
bound
sub
andl
loop
std
cmp
jle
cs
mov
rorb
lcall
mov
imul
cmpb
stos
ret
mov
sub
bound
sbb
pop
sub
leave
fs
mov
xor
data16
xchg
mov
out
push
cwtl
loopne
jne
arpl
and
pop
mov
std
mov
sahf
mov
in
xchg
inc
lcall
jmp
stos
sbb
xchg
cwtl
cmc
pop
aam
out
es
mov
cmpsl
imulb
mov
cmc
roll
lcall
dec
jb
dec
pcmpeqb
lcall
xchg
stc
sub
cmp
sub
pop
xchg
add
ret
sbb
and
cltd
loop
cmp
es
std
xor
mulb
jl
push
sub
enter
movsl
sub
aas
lret
fsubr
call
jo
fucom
test
es
repz
test
jo
push
or
flds
and
jmp
jg
fldl
dec
or
nop
mov
aas
test
mov
imul
int
lds
xchg
pop
jmp
add
sub
sbb
pop
mov
jp
lock
mov
dec
mov
mov
or
jp
pop
es
lret
jnp
fsubr
xor
jbe
jg
jg
clc
out
cmp
pop
out
sbb
mov
stos
mov
dec
and
int
std
lcall
rol
add
mov
xchg
les
and
shlb
daa
jle
aam
xor
rcr
and
push
lcall
xor
xchg
rep
xchg
into
xorl
pop
jmp
and
and
mov
inc
outsl
pop
pop
add
inc
add
stos
ret
cltd
pop
sbb
ret
mov
scas
sbb
add
call
popa
sti
lock
inc
add
pop
stos
sbb
adc
dec
fnstenv
mov
popf
test
xorl
mov
sub
push
xlat
pushf
hlt
repnz
push
push
pop
pop
stos
xorb
out
cld
sub
out
call
sbb
dec
mov
insl
xchg
ja
dec
jae
pop
sub
outsl
jno
xor
bound
push
out
gs
in
out
in
movsb
movsl
aas
add
lahf
add
out
aaa
nop
push
bound
ss
scas
sub
sbb
sub
or
add
push
push
jb
jle
aas
lock
sbb
mov
cmp
xchg
cmp
into
dec
pop
sbb
and
cld
and
sub
loope
inc
push
push
mov
cmpb
inc
xchg
push
das
jl
aam
and
mov
mov
stos
mov
inc
loop
fwait
jmp
nop
fdiv
gs
or
push
dec
dec
lock
push
mov
hlt
shlb
jae
push
and
dec
loop
pop
jae
imul
sahf
sbb
inc
add
cs
gs
pop
adc
push
adc
gs
lcall
aaa
in
sbb
rcl
lea
xchg
repnz
or
in
pop
stos
and
cmc
test
aam
inc
jmp
cmpsl
dec
repnz
paddusw
xchg
out
inc
xchg
clc
jge
insl
push
pop
daa
out
outsb
xchg
shl
inc
cmp
sub
das
bound
add
ljmp
test
pop
daa
movsb
loope
fwait
test
mov
scas
and
pop
ljmp
outsb
fs
mov
sbb
ja
inc
repz
jle
cmp
inc
xchg
push
pop
xor
mov
mov
mov
mov
jl
and
ret
jmp
mov
or
sub
in
popa
stos
sub
scas
dec
cmpsl
popa
jp
pop
cmp
ret
popf
insl
enter
fsubrs
bts
sbb
cli
daa
inc
dec
ss
out
adc
or
sub
cmp
out
fcmovbe
popa
mov
in
pop
inc
and
or
ret
and
loopne
mov
mov
fidivl
cmp
xchg
movsb
cld
or
insl
ja
inc
mov
ljmp
rol
jae
das
mov
jp
mov
push
sbb
scas
ja
mov
mov
add
in
sub
mov
mov
pop
jecxz
cs
icebp
mov
xor
insb
mov
orl
fldl
xchg
vcvtsd2ss
inc
dec
xor
jb
addr16
pop
aas
fistps
xchg
add
out
pop
sub
xchg
or
push
lods
in
fwait
int
data16
mov
psubusw
sub
into
mov
sbb
in
or
imul
xor
ja
std
imul
lahf
adc
enter
inc
call
mov
std
and
xchg
dec
lea
in
outsb
ret
inc
or
push
test
stos
pop
inc
push
push
ss
in
in
gs
and
insb
and
lods
enter
repnz
dec
out
aad
mov
xor
clc
fnstcw
arpl
push
stos
leave
dec
mov
inc
stos
aam
sub
xor
or
pop
sti
fcoml
retw
lock
push
inc
sub
dec
dec
push
cli
push
popa
push
movsl
fldt
sbb
int
nop
div
ds
sub
jno
movb
mov
popa
rclb
cmp
ljmpw
enter
std
pushf
and
scas
in
push
lea
pop
add
pushf
jbe
push
jo
icebp
adc
push
push
iret
xchg
mov
mov
or
dec
sub
mov
jbe
in
gs
repnz
mov
mov
ljmp
rcrb
push
aam
les
inc
int
inc
inc
or
loopne
sbb
mov
dec
aad
icebp
insb
xor
jmp
call
and
mov
cmp
les
dec
adc
mov
icebp
xchg
orps
les
mov
js
aam
ror
in
mov
fisttpll
xor
lret
test
mov
int
inc
adc
cmp
dec
pop
fisubrs
int3
fsubs
aaa
xlat
out
das
mov
dec
test
mov
cmpb
dec
inc
jae
shll
jns
pop
out
cld
mov
adc
or
mov
mov
stc
call
dec
xor
into
lret
jo
add
jno
ss
mov
mov
or
jne
and
push
add
leave
frstor
push
adc
cmpsl
fwait
mov
push
jbe
mov
and
push
pusha
ja
jl
push
jp
or
xchg
xchg
add
iret
imul
sbb
and
jle
cmp
mov
inc
mov
fcmovne
pusha
xor
mov
bound
dec
imull
or
push
mov
xlat
jbe
cli
cs
cmp
inc
lods
sub
or
pop
pop
movsb
pop
jmp
push
lcall
mov
sbb
jecxz
in
out
pop
repnz
or
fistpl
mov
cmc
adc
daa
and
pop
mov
gs
shll
mov
jecxz
jp
ret
mov
pop
fldl
push
bound
ds
jg
mov
sub
sbb
mov
or
mov
mov
int3
shll
push
insl
xchg
rolb
adc
adc
addr16
in
js
xchg
aad
sbb
popl
dec
mov
out
xchg
sub
call
mov
notb
scas
popf
xchg
aaa
add
push
pop
fcomi
xchg
sbbl
push
aad
mov
shl
je
cmp
fisttpll
imul
xor
push
jg
jnp
xchg
jg
out
xchg
xor
pushf
xor
hlt
adc
cs
int3
mov
or
and
push
stos
dec
mull
jnp
mov
fdivl
pop
or
frstor
jge
repz
inc
test
dec
fxch
idivl
loop
movsb
lods
push
sbb
jnp
std
push
adc
mov
add
bound
push
inc
shr
push
scas
scas
ret
ja
jge
mov
xchg
and
out
mov
scas
cmp
and
dec
mov
pop
rorl
cmpsb
ja
adc
scas
popl
lret
add
and
pusha
push
sbbl
inc
add
pop
mov
das
sahf
es
pop
cld
bound
arpl
jp
scas
inc
lcall
sub
aaa
jmp
inc
cs
loop
hlt
popa
and
outsl
cmpl
sti
or
ret
inc
inc
aad
call
xchg
fstl
dec
scas
adc
dec
push
jmp
mov
mov
sbb
push
xchg
xchg
xor
inc
push
sub
ret
and
imul
pusha
mov
mov
rorb
jg
inc
aam
push
mov
into
pop
push
rol
out
mov
fnstenv
inc
push
mov
movsb
mov
sbb
dec
mov
pop
pop
inc
xchg
or
and
add
mov
into
mov
sbbb
pop
pop
lcall
dec
sbb
mov
mov
xchg
enter
mov
mov
adc
adc
jae
jle
pop
inc
jb
cltd
adc
fstps
or
les
ffreep
adc
sbb
mov
lock
push
pop
dec
lea
lret
fdiv
nop
and
sub
xchg
mov
out
or
pop
sub
lods
jge
sub
loop
insb
push
int3
add
pop
test
sbb
inc
nop
push
sbb
inc
push
cltd
lea
and
shrl
movl
test
xchg
jae
inc
and
roll
lock
and
dec
pop
jo
stos
inc
push
lds
dec
adcb
in
xor
js
fstl
adc
add
loop
testb
cmpsl
cwtl
cli
fs
rcrl
insb
shrb
ja
bound
xchg
dec
mov
dec
push
in
in
lret
ret
pop
sbb
popf
rorb
in
xchg
into
movsl
push
leave
mov
xchg
jge
int
in
inc
jl
inc
push
mov
sub
dec
cs
or
shll
jb
inc
fcmovb
insl
pusha
and
cwtl
xchg
cld
push
out
rcll
xchg
pop
in
jbe
xor
mov
lods
ja
cmp
gs
xchg
loopne
push
sbb
jecxz
fwait
add
inc
int
mov
or
je
mov
imul
in
push
add
addr16
pushf
fwait
dec
clc
ror
sub
std
sbb
dec
inc
lods
jo
push
push
or
je
mov
jp
loope
cmp
inc
pop
fdivs
inc
nop
sbb
xor
xchg
data16
pop
subb
mov
or
xchg
xor
cwtl
popa
mov
xor
loop
or
in
rcl
iret
cli
shld
xchg
iret
arpl
loopne
add
jae
pop
outsb
cmp
nop
xchg
pop
test
stos
sub
mov
push
mov
js
mov
ds
inc
adc
push
jne
cltd
out
shll
cltd
add
rcrb
mov
imul
ss
arpl
ja
enter
ljmp
sbb
pop
outsl
jnp
and
sahf
inc
xor
ret
enter
adc
xor
dec
dec
xlat
cwtl
pusha
test
loop
dec
les
cmpsb
movsl
push
loop
clc
mov
push
mov
cmp
in
cmp
cmp
imul
mov
ljmp
fadds
cli
and
xor
in
add
je
leave
inc
test
sbb
cs
cmp
jg
mov
fs
fidivl
mov
pop
mov
stc
ret
xlat
arpl
inc
dec
scas
mov
lock
je
adc
jp
push
out
xor
or
jl
mov
movsb
or
daa
cmpsl
push
mov
cmp
sti
dec
pop
push
mov
es
mov
movsl
xor
mov
cmp
sub
lods
lock
xchg
cmp
jle
mov
shll
daa
mov
in
xchg
adc
jecxz
sbb
pop
roll
inc
das
and
iret
stc
loope
push
test
fs
push
mov
in
push
leave
mov
popf
cmp
mov
aam
or
imul
jns
xor
adc
xor
cwtl
jb
int3
cmc
imul
test
je
adc
sub
push
lods
xlat
out
int
cmp
outsb
in
jmp
lock
faddl
mov
jmp
inc
jae
push
mov
mov
adc
jb
mov
push
fs
jo
add
rcll
mov
dec
aas
inc
cmc
rclb
mov
ret
add
add
lret
inc
cld
dec
inc
test
xchg
sbb
jae
loopne
dec
outsb
scas
sbb
call
mov
mov
hlt
cld
xlat
cmp
xchg
dec
cld
mov
mov
ljmp
sbb
mov
in
xchg
bound
loope
hlt
rorl
mov
pop
xchg
cmp
and
je
jmp
mov
loope
adc
movsb
mov
jecxz
lods
mov
ror
outsl
xor
pavgb
push
pusha
int
mov
imull
or
inc
sbb
mov
adc
test
sbb
loopne
push
jb
bound
mov
fnstcw
pop
int
adc
or
jbe
sti
adc
adc
xchg
lods
das
cmp
mov
bound
aaa
xchg
adc
mov
movsl
jg
in
lds
sbb
or
cmp
sbb
cmp
add
mov
jns
dec
cltd
add
adc
fcmovb
sti
mov
jge
and
dec
enter
test
daa
lock
repz
aam
lea
popf
add
pushf
movsb
pop
dec
aaa
xor
lret
rclb
imul
fwait
jae
loope
enter
notl
jae
pop
nop
clc
mov
push
pop
mov
mov
add
leave
aam
int3
xchg
in
addl
sbb
loopne
mov
ds
and
mov
and
fxch
cs
push
clc
sub
nop
mov
outsl
rorb
or
shl
sbb
pusha
jb
push
mov
notb
sbb
sub
arpl
dec
inc
mov
jbe
inc
push
inc
leave
in
or
lret
fdiv
push
pusha
nop
push
pop
outsb
sbb
mov
aas
sbb
outsl
shl
nop
mov
stc
scas
xor
jnp
sub
or
mov
push
lds
lcall
dec
loop
imul
sub
call
ja
sbb
lret
mov
xlat
mov
fwait
add
mov
addr16
shlb
mov
sub
xor
imul
or
or
call
sbb
xor
test
dec
jle
inc
jg
pop
mov
cs
pop
outsb
sarl
add
mov
loopne
and
pop
inc
aas
out
sarl
push
pop
sub
jge
sti
push
add
setge
test
cwtl
pusha
arpl
or
sahf
lahf
cld
sub
insl
ret
lcall
mov
dec
repnz
in
stos
dec
or
mov
mov
enter
xchg
outsb
or
mov
insb
or
movsb
jb
push
loop
sbb
int
and
out
mov
jo
loope
leave
mov
push
or
test
iret
mov
mov
adc
or
xor
movb
inc
dec
mov
and
fmull
dec
sbb
and
test
les
jns
sarl
subb
push
adc
sub
or
flds
in
adc
in
or
fstpl
int3
out
jmp
test
dec
int3
je
mov
ret
add
es
push
fwait
ret
inc
mov
push
cs
jnp
data16
cmp
push
sub
in
inc
mov
cmp
push
xor
sub
out
add
lods
dec
xlat
pusha
jno
jg
ss
aas
xlat
aam
out
mov
mov
push
repz
push
mov
push
rcl
pop
cli
xor
add
fs
push
pop
out
inc
into
adc
daa
fisubl
sub
mov
dec
stc
inc
scas
sarb
sbbb
mov
mov
iret
adc
shlb
punpckhwd
xchg
out
jo
stos
cmp
leave
in
add
std
xchg
jbe
mov
and
xor
movsl
mov
and
xchg
mov
cmpsl
sub
xor
icebp
dec
mov
rorb
iret
test
jbe
cmp
mov
mov
popf
fsubrl
mov
test
nop
and
out
test
push
sbb
mov
ficompl
push
mov
push
xchg
ficoml
pushl
sub
out
js
mov
jo
jg
jo
shrb
hlt
jno
aam
xchg
popa
stos
inc
sbb
icebp
jge
js
mov
ljmp
jae
repz
lea
rol
mov
mov
mov
push
push
sub
jb
adc
mov
nop
les
mov
pop
mov
loopne
test
rcr
fs
jnp
ljmp
push
jns
mov
adc
fcmovbe
shrl
push
stos
jo
jno
inc
out
repnz
xor
xor
pop
fisubrs
cltd
pop
test
dec
lahf
or
push
test
inc
xchg
sub
test
dec
mov
push
lcall
cmp
cmpsb
inc
lea
lret
pop
daa
mov
repnz
dec
jae
cmp
mov
mov
push
in
pop
filds
rcll
mov
cwtl
mov
push
or
insb
sbb
jl
imul
scas
lods
ss
ds
and
std
pop
cmc
lods
aad
pop
mov
and
xchg
icebp
push
dec
in
mov
repz
push
add
fldcw
pop
sbb
or
or
and
fs
imul
outsb
outsl
mov
ret
push
out
jbe
lcall
aas
rcr
mov
in
cmpsl
mov
jg
sbb
and
mov
pop
andl
ljmp
ss
xor
sbb
ja
lock
mov
aam
adc
jecxz
dec
icebp
adc
mov
and
dec
sbb
add
pop
sar
and
pushf
pop
mov
adc
or
mov
or
sbbb
jp
mov
arpl
xchg
nop
xor
rcll
jge
xor
bound
fs
scas
sbb
stc
sarb
pop
pop
push
jo
xchg
dec
mov
stos
mov
fsubrl
bound
movsl
and
cmpsb
ja
or
push
mov
int
out
pop
jmp
stos
leave
xor
adc
sbb
out
roll
hlt
sahf
fisubl
ljmp
sub
mov
fwait
sbb
out
push
sbb
mov
mulb
pop
sbbl
sub
pop
ds
push
pushw
xor
jne
mov
pushf
fwait
hlt
in
xlat
xchg
inc
das
or
pop
mov
sahf
add
aaa
cmp
push
dec
mov
loope
lahf
sub
fadds
jg
arpl
ss
loopne
andl
stos
std
push
mov
cs
ret
jmp
dec
pop
xchg
push
pop
pop
fmuls
adc
inc
push
in
jecxz
xchg
xchg
mov
mov
push
sbb
cmp
out
aas
dec
cmp
ret
call
push
inc
stc
push
aas
dec
stos
cltd
dec
and
imul
push
adc
popf
lock
or
jns
fnstcw
enter
xor
inc
cmpsl
pop
push
add
sub
fs
jmp
fs
jmp
cmp
adc
adc
mov
xor
fisubl
jns
dec
test
std
xor
cmp
popf
push
lock
in
cli
popa
pop
pusha
cld
gs
cmp
insb
sahf
fcoms
mov
cltd
leave
sbb
push
mov
inc
loop
leave
push
mov
sbb
cmp
adc
dec
jns
mov
dec
cmp
inc
leave
aas
push
add
insl
mov
inc
add
adc
xchg
inc
pop
sbb
adc
jnp
xchg
mov
push
ret
push
push
sbb
ret
cs
loop
xchg
arpl
add
xlat
cmp
out
push
daa
xlat
pop
mov
in
mov
adc
fbld
test
dec
rcr
test
cli
cmpsb
ja
fidivs
push
jne
test
sbb
test
sahf
imul
jb
rclb
test
fs
pop
fcmovnu
mov
jl
ret
push
cmpsb
call
stos
pop
inc
pop
push
mov
movsb
movsl
inc
add
mov
addl
cmpsl
jo
in
lcall
push
mov
pop
into
scas
filds
rep
or
xor
sbb
adc
in
and
inc
shrl
sbb
loop
mov
lds
mov
movsl
insb
ja
in
mov
mov
bound
xchg
adc
push
insb
and
movl
push
sbb
imul
push
xchg
pushf
outsl
clc
scas
lahf
sub
lods
inc
and
cmc
sbb
push
xchg
mov
roll
imul
dec
sub
mov
dec
inc
cltd
jmp
popa
push
and
cmc
adc
stos
ja
sub
adc
push
dec
mov
pop
popa
stos
cmp
xchg
packuswb
pop
out
push
out
xor
mov
pop
ss
sub
fsubrl
subb
or
lret
lea
sub
xor
pop
out
shlb
push
dec
rclb
or
popf
sub
pop
xchg
or
mov
mov
in
sbb
ja
cwtl
and
hlt
adc
pop
sbb
push
xchg
pop
pop
addr16
push
insb
pop
adc
sbb
xchg
and
dec
add
fisubrl
les
cmpsl
mov
popf
mov
out
or
lcall
dec
jl
sti
jnp
fisubrs
data16
in
mov
outsb
movb
rcll
push
outsl
loop
or
adc
int3
mov
adc
sub
sub
sbb
add
cmc
sub
mov
pusha
out
mov
cli
pop
sbb
test
mov
or
shlb
adc
push
nop
sbb
add
inc
sub
pop
xchg
aad
sub
mov
test
inc
daa
fs
std
cmp
in
scas
dec
fldt
xor
lcall
and
cmpb
push
sub
pop
fists
lods
test
insl
popf
xor
sti
into
pop
jge
xchg
call
pop
bndldx
push
push
pushf
jno
xchg
push
faddl
ret
push
mov
xor
xchg
add
fiaddl
pop
test
pop
sub
test
pop
push
mov
cmc
enter
sub
sbb
mov
sub
iret
cmp
cmp
cmpsw
cwtl
pop
inc
sti
push
decl
jmp
daa
mov
out
and
push
addr16
sub
or
or
int
mov
or
out
push
pop
push
pop
aas
mov
fwait
adc
mov
adc
in
pushf
pmuludq
das
pop
xor
or
pop
xchg
cmpsb
and
outsb
fildl
add
sub
lahf
sarl
adc
xor
push
push
gs
add
xchg
jl
inc
or
mov
icebp
adc
icebp
pop
stos
cli
adc
ja
mull
and
out
jp
stos
dec
push
int
mov
icebp
lods
in
cmp
inc
rclb
ret
sub
inc
fst
pop
jecxz
aaa
sbb
fwait
or
stc
inc
push
mov
ret
push
divb
add
inc
fidivrl
sbb
or
out
sti
and
sbb
jb
and
jecxz
inc
test
icebp
rclb
gs
jg
dec
fld
test
out
or
outsl
int
cli
lea
push
or
dec
sahf
and
dec
loopne
cmp
add
and
push
insb
cmp
daa
push
jmp
fcoml
mov
mov
mov
sbb
and
sahf
sahf
xchg
enter
dec
loopne
loopne
inc
pop
xor
adc
test
scas
pop
fwait
repnz
cld
pop
repnz
inc
stos
out
lahf
subb
mov
mov
cmp
rcll
mov
push
clc
inc
pushf
adc
or
lcall
sub
sbb
lret
stos
and
les
pop
inc
adc
mov
sub
mov
add
jnp
bnd
mov
dec
enter
lock
jns
jp
adc
in
lret
rolb
sub
push
mov
fucomi
outsl
pop
push
pop
popa
ror
nop
add
aad
popf
mov
mov
movb
add
sub
dec
sub
lock
ret
mov
ds
mov
or
xor
cmp
fisttpl
mov
or
xchg
xchg
mov
dec
push
jb
xchg
pop
jle
and
xchg
mov
push
pushf
or
addl
loop
mov
jns
shlb
test
ja
mov
es
or
testb
dec
xchg
mov
test
mov
jmp
ds
dec
leave
in
jae
ja
stc
out
lret
mov
in
pop
add
jecxz
cltd
pushf
int
jno
mov
lcall
in
mov
outsb
adc
mov
test
push
inc
into
mov
adc
cmp
nop
shrb
sahf
lock
and
sub
scas
or
jbe
aad
adc
cmp
cmc
pop
pusha
or
inc
pop
mov
dec
aas
or
das
mov
sbb
aaa
clc
pop
aaa
rcr
cmp
icebp
jmp
repz
jmp
adc
xchg
mov
in
pop
bound
imul
add
arpl
mov
call
scas
cmp
adc
push
jae
dec
lret
mov
scas
sarb
mov
push
cmpsl
int3
cld
jb
popa
jg
loopne
negl
cmp
xor
jl
pop
push
in
sti
sub
xchg
dec
jae
and
adc
test
jle
add
push
mov
daa
lods
xchg
xchg
fstp
stos
das
adc
pushf
js
xchg
pop
mov
repnz
or
fwait
jmp
push
dec
nop
xchg
out
xor
jle
fstps
fdivrl
stc
test
loope
cmpsb
int
sbb
mov
push
xor
lea
add
xor
mov
xchg
andb
jno
push
sub
cmpsb
es
inc
in
sub
push
inc
movsl
mov
popa
mov
pop
outsb
mov
in
sub
cmp
ds
jno
arpl
and
mov
orb
iret
and
or
add
mov
fdivrs
ficomps
fidivrs
adc
outsb
ja
sub
sub
cmc
js
cmp
and
lock
lds
push
shr
movsb
mov
jmp
sbb
adc
add
fabs
fcoml
push
hlt
sbb
movsb
or
lock
jle
push
mov
jb
jmp
test
or
js
orb
xor
mov
push
mov
and
mov
push
in
inc
jp
adc
ja
lea
cmp
scas
xchg
inc
adc
aaa
gs
stos
or
pop
sbb
mov
in
jns
push
fstpl
push
test
repnz
inc
add
push
mov
lea
xchg
jne
xor
push
addl
cwtl
and
in
jo
mov
mov
or
fcmovu
pop
pop
rcl
leave
mov
popf
imul
rol
iret
das
bound
xor
push
insb
mov
mov
lret
inc
inc
rorl
fistpll
inc
or
push
or
iret
jns
dec
in
push
enter
jecxz
out
jle
sahf
inc
scas
add
inc
js
sub
fisubl
inc
js
sbb
out
adc
dec
adc
jb
outsb
adc
inc
jge
sahf
sti
xchg
mov
cmp
in
outsb
inc
dec
das
fdivrs
sub
test
faddp
cmpsl
cmc
mov
popf
cs
out
mov
fwait
outsb
mov
adcb
fists
xor
rorl
jbe
idivl
into
cltd
insl
stc
inc
jp
adc
jp
out
push
ret
xchg
and
mov
sub
clc
xchg
fldl
xor
cmp
pop
or
dec
test
jmp
in
push
aaa
and
sub
js
or
popa
sarb
push
push
sarb
scas
pop
adc
and
mov
mov
clc
ret
lahf
mov
shrl
mov
add
adc
jp
int
inc
sub
test
inc
xor
add
add
insb
test
xor
jbe
cmp
jno
jp
sarl
sti
mov
adc
pop
jg
dec
cmc
ja
sahf
cmp
adc
rclb
xor
mov
imul
mov
arpl
outsl
test
push
popf
jle
mov
mov
mov
mov
ss
mov
into
sbb
cltd
sbb
loope
fsubrp
insl
mov
xor
test
mov
push
sahf
in
es
mov
sub
aaa
gs
push
cmc
lock
outsl
shll
pop
out
lret
popa
dec
add
push
addr16
xorl
adc
mov
mov
lock
dec
cmp
mov
adc
addr16
lret
adc
and
ss
mov
nop
mov
add
sbb
es
pop
push
jae,pn
lds
or
out
jo
das
mov
xchg
xchg
repz
rorl
adc
lret
std
jg
sub
push
pop
iret
xor
pop
xlat
cmp
rcrl
sbb
int3
xchg
push
jg
loopne
push
popf
pop
and
nop
in
mov
lcall
mov
aad
or
add
scas
scas
lret
in
inc
jp
fs
ja
add
xor
push
xorl
adc
jns
mov
mov
stos
fcmovne
jnp
inc
repnz
and
jl
add
push
js
push
cmpsb
and
sbb
lret
rcrl
mov
sbb
outsb
out
push
dec
lret
shlb
leave
repz
jae
mov
popf
cmp
addb
dec
mov
lock
loope
inc
cmp
inc
pop
cmpl
das
adc
mov
sub
cmp
je
xchg
daa
dec
ja
das
or
and
in
mov
fwait
mov
inc
mov
sbb
xor
xchg
loopne
icebp
and
xor
sub
sbb
movsl
rcrl
stos
dec
stos
ffreep
add
mov
mov
or
sub
xchg
cmp
dec
mov
xchg
xchg
mov
leave
push
cmp
xorl
paddb
adc
imul
mov
jecxz
lea
and
push
dec
mov
cli
xchg
sbb
inc
pusha
pop
das
mov
inc
enter
aad
loop
xor
shrb
pop
out
gs
pop
sbb
faddl
mov
dec
sub
xchg
xor
lret
mov
jnp
into
adc
lret
loop
fs
cmp
mov
sub
push
or
icebp
add
jmp
in
and
xor
xchg
je
xchg
xchg
push
in
into
jbe
aaa
pop
jmp
lea
adc
cmp
xchg
aaa
sub
out
loop
arpl
sub
roll
repz
call
dec
inc
jbe
fcmovnbe
xor
pop
pop
adc
xchg
sahf
mov
mov
sub
jle
mov
inc
xor
mov
sub
xchg
or
scas
sbb
and
mov
jnp
dec
sub
jne
inc
adc
lahf
in
mov
int
xchg
addl
shl
inc
xor
std
pusha
fwait
xchg
sbbb
orl
fistpll
lods
adc
fwait
pop
test
ljmp
popf
pop
icebp
rorl
mov
jecxz
mov
int3
fcoml
fdivs
and
xchg
shll
push
imul
mov
mov
sti
push
popf
jnp
ret
mov
inc
lock
int3
inc
mov
jb
inc
pop
ror
mov
mov
je
aaa
ljmp
xchg
xor
stos
xor
xchg
in
or
jecxz
pcmpgtb
adc
imul
dec
out
pop
mov
scas
push
mov
repnz
mov
sub
dec
out
mov
lahf
xchg
aaa
xor
sahf
mov
add
int
imull
dec
fwait
mov
out
out
and
jmp
mov
inc
pop
test
andb
je
adc
add
bound
xor
sbb
loop
out
popa
pop
mov
adc
jecxz
ret
inc
adc
daa
xor
ficoml
jecxz
cld
cmpl
mov
xchg
inc
or
dec
mov
cmc
mov
cmp
bound
add
mov
jbe
mov
stos
pop
pop
adc
and
sti
test
cmp
call
bound
sbb
inc
add
dec
xchg
inc
dec
inc
daa
shll
sub
ss
aam
sub
xchg
push
pop
lods
lds
stos
sbb
fsts
mov
and
imul
mov
ds
les
sbb
fiadds
cmc
push
pop
sub
inc
cmp
popf
das
cmp
call
mov
push
dec
andb
adc
dec
sub
cmp
xchg
movl
sub
xor
jbe
addr16
mov
movsb
push
xchg
loop
or
sarl
add
push
mov
dec
dec
cmpsb
mov
daa
pusha
cmp
cltd
ljmp
mov
inc
and
and
movsl
movsb
call
iret
and
inc
ljmp
movsl
icebp
scas
sub
in
and
out
scas
daa
cmpsl
loope
cmp
clc
mov
jne
out
out
out
mov
inc
rcrb
ret
mov
mov
cli
pop
or
push
sbb
pop
xor
outsl
adc
dec
add
fnstsw
fnstenv
icebp
inc
sub
fdivrs
mov
inc
jmp
lods
push
test
sub
push
insl
sbb
jecxz
test
outsb
sub
ret
js
loope
cwtl
xchg
pop
loopne
ja,pn
inc
push
rolb
sti
add
in
mov
sbb
enter
xor
inc
push
jecxz
sbb
sbb
mov
std
fcmove
in
xchg
mov
test
xor
les
mov
xchg
mov
dec
inc
xor
fnstcw
data16
sub
test
inc
push
dec
jae
inc
push
rcrb
enter
cwtl
in
popa
pop
inc
dec
into
xor
inc
mov
test
mov
pop
es
mov
push
nop
shlb
fidivrl
jl
dec
inc
xchg
mov
cmpsb
push
pop
and
int3
xchg
add
mov
sub
sti
insl
pusha
adc
rclb
aad
cmpsl
iret
push
js
sbbl
lret
fmull
xchg
xchg
add
or
mov
aaa
push
mov
call
pop
xchg
pop
mov
mov
or
jp
mov
or
in
lret
dec
adc
inc
not
cmp
push
iret
fs
cmp
push
or
add
dec
js
stc
cmpsl
stos
ja
mov
lret
sbb
or
inc
push
je
and
sub
test
sbb
mov
xchg
and
fiadds
pop
or
pop
mov
add
mov
rolb
cmp
mov
adc
stos
add
movsl
push
cmp
xor
pop
sbb
dec
xor
pop
jno
xor
scas
rol
sub
mov
or
decl
in
jne
lret
sbb
int
ss
push
push
mov
push
pop
pop
fs
stc
pop
pop
mov
sbb
push
cld
loopne
xchg
mov
pushf
xchg
mov
divl
fisubrl
jmp
mov
scas
les
cmpsb
dec
mov
inc
fstpl
and
xor
stos
ficoms
cltd
js
ret
push
ret
sub
cli
jae
cmpb
xor
lcall
fdivrs
out
nop
push
add
pop
ss
leave
mull
out
cmp
loop
inc
ffree
xor
jb
mov
fstpt
jle
insb
pop
int
xchg
mov
leave
xor
fcompl
jbe
add
pop
or
and
or
repnz
in
xchg
data16
add
arpl
sub
and
mov
xor
adc
add
cld
fwait
jg
fcompl
callw
xor
mul
inc
in
mov
stc
push
movsb
mov
mov
adc
in
out
dec
lock
xchg
inc
jo
xchg
sbb
out
pop
pop
out
std
xorl
ss
cs
jnp
in
and
pop
aaa
mov
add
test
inc
xchg
mov
xchg
stos
or
lahf
dec
xlat
ret
xorl
jns
nop
std
test
fs
xor
cli
or
arpl
into
push
jne
nop
stc
fidivs
mov
dec
lods
push
push
xor
out
cltd
xchg
and
mov
outsl
jl
xchg
int3
jbe
push
cmc
or
sub
or
jne
cmp
subl
cmp
ja
pop
push
lcall
add
call
jg
repz
pop
mov
cs
test
xlat
bound
js
movsb
mov
aam
sub
and
outsl
cmc
fldl
xchg
inc
inc
xor
mov
popf
in
or
jle
push
jno
pop
adc
sub
stc
pop
and
int3
out
sub
test
sub
je
jge
jb
cmp
sub
inc
fcmovnu
lock
sub
cmp
std
adc
push
mov
dec
xchg
aam
in
sbbb
int
and
dec
inc
and
cli
push
pop
fiadds
mov
cmpsl
aaa
and
mov
lods
push
ljmp
fimull
cmpsb
inc
adc
insl
int
jle
aas
cli
test
idivl
or
mov
mov
cmpsb
add
stos
adc
or
pusha
fwait
pop
push
pop
cld
call
add
lgs
sahf
pop
xchg
or
or
pusha
xor
pop
pop
popa
inc
cmp
xor
mov
inc
mov
imul
out
in
rorb
and
cmp
cmpsl
aas
in
dec
idivl
pop
or
ja
subl
jmp
into
add
rorb
bswap
or
or
sarl
repz
aam
or
in
in
pop
or
pushf
int3
mov
adc
mov
inc
cmp
dec
mov
icebp
jecxz
sbb
cvtdq2ps
stos
shlb
in
xor
dec
fsubr
lods
xor
ja
scas
jle
sbb
cmp
mov
pushaw
int3
push
mov
cld
cmc
scas
leave
shrb
mov
repz
pop
out
test
mov
mov
xor
inc
xchg
lret
inc
imul
notl
inc
sub
pop
or
in
xchg
popa
int3
mov
mov
insb
cmp
and
mov
in
sbb
imul
inc
dec
or
sbb
add
and
xchg
pop
orb
lods
mov
repz
dec
mov
add
or
and
xor
mov
xchg
leave
ss
jge
push
mov
addb
mov
jmp
jbe
cs
add
repnz
inc
stos
mov
enter
inc
in
or
pop
shrb
je
lods
xchg
mov
sbb
je
pop
pop
pop
ret
xor
cmpb
pop
movsl
lret
imul
pop
lock
mov
lret
xor
clc
movsb
test
in
cmp
pop
dec
xchg
mov
xchg
sub
mov
sub
xlat
dec
lret
imul
in
and
arpl
insb
dec
sarl
mov
jbe
aam
adc
xor
xor
jg
jbe
pop
sub
jo
pop
mov
fstpt
subl
popf
out
xchg
int
pop
inc
mov
xor
stos
mov
call
and
adc
sbb
sub
adc
imul
fsubrs
add
cmpsl
xchg
fcomp
out
ficoml
sub
je
gs
outsl
iret
or
xchg
repnz
shlb
inc
mov
aad
mov
loopne
mov
ret
push
xchg
adc
notb
loope
stos
mov
loope
pop
cmp
xchg
mov
rclb
ds
cmovnp
imul
sub
add
pop
jne
movsl
xor
mov
sbb
pop
dec
push
adc
mov
cmc
stos
push
sarl
xlat
xor
aam
cld
call
jmp
test
notb
cmp
fimull
mov
cmp
jmp
js
cli
call
inc
pusha
adc
outsb
sub
lret
adc
fs
mov
in
pusha
cmp
pop
js
dec
test
or
lcall
outsl
addl
sahf
sbb
ret
mov
out
imul
adc
imul
push
jmp
test
xchg
and
jno
stos
out
sub
rcl
dec
adc
subl
lcall
fcoms
movsb
iret
mov
scas
int3
into
sti
std
jmp
loope
pusha
push
movsb
ret
shrl
test
jb
cmc
cmpb
pop
in
pop
add
loopne
pop
js
mov
mov
push
cli
rcr
inc
fldz
dec
add
mov
ja
push
mov
sub
in
insb
aaa
cmpb
xchg
push
dec
adc
movsl
mov
and
sti
inc
loopne
aam
push
and
mov
pop
rcll
mov
adc
dec
xchg
jecxz
lods
test
xchg
std
sbb
cmc
mov
sbb
cld
mov
mov
jg
aaa
std
shlb
push
sub
fldt
cltd
mov
xchg
pop
xchg
cltd
sub
mov
into
xchg
test
pop
sbb
sub
adc
rcrb
cli
mov
pop
mov
cmp
mov
fldl
out
and
mov
sbb
ds
es
out
cmp
mov
andb
sub
inc
insb
pop
cmp
mov
lcall
mov
xor
pusha
testl
sub
fadd
sbb
iret
push
sub
clc
jne
decl
repz
dec
rorl
add
test
stos
test
push
aam
jb
rcrl
adc
imul
mov
rcrb
inc
sti
pop
jp
push
loope
test
pushf
xor
mov
je
sub
mov
loopne
frstor
lea
addl
fidivl
pop
mov
mov
adc
cld
dec
adc
xchg
cmp
imul
andb
lcall
nop
scas
jg
mov
jns
pop
repnz
daa
lods
push
fadds
pop
mov
int3
add
mov
push
xor
xor
push
push
mov
movsl
cmp
test
adc
pop
inc
lcall
or
inc
mov
and
adc
ss
gs
jne
mov
je
push
xor
rorl
xor
pavgb
add
pop
jmp
or
fcom
repnz
adc
data16
xor
push
in
push
xchg
pop
xchg
icebp
fsubr
js
aad
je
mov
fdivrl
leave
mov
fcomps
pop
jecxz
mov
gs
stos
add
jns
mov
and
push
sub
scas
idiv
mov
push
adc
sbb
inc
jle
jae
sti
dec
xor
mov
mov
sar
imul
repz
mov
adc
jbe
mov
je
jmp
jecxz,pn
aad
push
mov
mov
fcmovnu
scas
ret
jae
inc
scas
testb
and
mov
add
mov
in
nop
sub
lcall
or
add
nop
jo
cmp
lahf
inc
dec
mov
sbb
mov
aam
jmp
mov
mov
push
lcall
fdivrs
push
lods
movsl
cld
dec
fstpt
nopl
aam
loop
lret
mov
mov
ds
jle
dec
enter
bound
xchg
outsl
mov
push
adc
lods
mov
or
inc
mov
add
stos
mov
cmp
dec
cmp
das
mov
pop
hlt
cli
jne
push
fldenv
iret
daa
mov
mov
xchg
xor
in
inc
fisttpl
aaa
sub
dec
nop
dec
cmp
push
loope
xchg
xor
movsb
xlat
add
push
mov
test
mov
imull
mov
aad
pop
cmc
je
mov
shrl
stos
int3
pop
insb
jg
pop
push
mov
pop
imul
mov
cltd
out
push
dec
add
test
mov
enter
inc
lret
mov
sbb
jge
addr16
lods
push
push
aad
sub
add
loope
scas
fsubrl
sub
call
xchg
leave
mov
imul
adc
loope
cmp
sbb
loope
sbb
push
loope
clc
and
aas
stos
fisubl
dec
xor
roll
mov
into
roll
lahf
sbb
roll
lcall
scas
inc
xchg
xchg
xchg
cmp
mov
fucomip
cli
addr16
loope
push
fisttpll
or
fwait
cld
pop
jge
jecxz
or
push
inc
mov
mov
push
mov
and
dec
into
add
insb
cmpsb
sbb
fmull
sub
inc
int3
sub
in
pop
sbb
inc
cld
gs
clc
repz
loop
or
fs
mov
mov
ja
in
cltd
repz
xor
jno
cmp
std
mov
cmp
adc
add
push
iret
lahf
sbb
lea
int3
ss
mov
enter
mov
pop
mov
jg
les
aad
cli
mov
mov
adc
lds
xor
cmc
or
mov
rcr
and
sbbl
stc
sbb
or
xchg
pop
sub
sahf
cmc
xchg
cmp
cs
popa
aam
cmp
scas
cmpsb
cltd
lret
fcmovb
movsl
lret
leave
xor
js
clc
mov
sbb
insl
adc
sub
shrl
sbb
push
mov
imul
mov
arpl
fdivs
and
pop
popa
das
sti
mov
pop
repz
std
faddl
es
cwtl
mov
pop
pop
inc
xor
into
jmp
movsb
fistpll
or
imul
mov
xor
jne
mov
push
gs
mov
add
lods
cmc
xor
xchg
mov
lds
mov
sbb
int3
cmp
jp
pop
int
sub
test
or
push
sbb
xchg
clc
jmp
xlat
and
enter
pop
es
les
fwait
push
lret
sahf
xor
cmp
lret
xor
lcall
add
das
leave
nop
jne
and
mov
push
mov
bound
push
cmpsl
ds
mov
aam
cltd
out
pop
imulb
clc
ss
and
jns
pop
rcrb
jl
jnp
or
je
pusha
mov
idivb
sbb
add
repz
jnp
mov
jle
sahf
test
sub
pushf
inc
popa
cmpsb
in
test
adc
xor
pop
into
jne
into
xchg
orb
inc
jg
mov
lds
loope
dec
es
sub
fistpll
adc
adc
idiv
jbe
mov
cmp
insl
popa
xor
lahf
repz
cwtl
cmp
push
or
mov
mov
adc
lods
sub
pop
push
shrl
clc
dec
jb
push
mov
enter
jae
aaa
sbb
lcall
mov
sub
pop
jge,pn
in
fstl
jp
mov
or
ja
dec
sbb
sbb
scas
arpl
jle
lods
xor
loopne
xchg
dec
lods
stos
out
outsl
hlt
cmp
mov
daa
ljmp
or
mov
pushf
testb
lods
mov
jnp
mov
lcall
push
xlat
and
xlat
popa
adc
repnz
idivb
int
into
mov
es
adc
mov
roll
shrb
jae
stos
int3
movsl
ljmp
subb
fiadds
inc
rorl
insb
dec
insl
push
jbe
adc
outsl
bound
clc
mov
mov
shl
cmc
xchg
imul
mov
sub
ja
std
or
in
sbb
add
inc
pop
push
cli
and
movl
xchg
scas
test
iret
push
in
nop
mull
pop
pop
xchg
pop
inc
xchg
into
dec
shll
in
push
pop
lahf
cmp
mov
cmp
mov
sbb
sub
cld
lcall
stos
movsl
cld
xor
add
jnp
fisttpll
dec
test
clc
sub
pop
jnp
inc
call
int3
jbe
inc
stos
and
mov
cwtl
xor
sarl
cmp
dec
sub
dec
add
xchg
in
loop
into
or
jbe
pop
mov
inc
sbb
inc
dec
roll
xchg
int3
xchg
add
jnp
and
xor
cltd
pusha
shll
or
popa
xchg
cmp
iret
sahf
fidivrs
mov
into
add
int3
adc
sub
mov
inc
lock
mov
loopne
dec
imul
add
int3
sub
sub
rcrb
cmp
ret
repnz
ret
das
push
fucomi
cmp
inc
insl
sub
jne
cmp
inc
icebp
int3
mov
adc
test
or
leave
adc
jp
pop
pcmpeqb
mov
sbb
icebp
arpl
js
dec
fsubs
ss
cmpl
cmpsl
aam
add
xchg
dec
lahf
es
jecxz
addr16
out
imul
ret
add
loopne
int3
adc
or
dec
movsb
loop
cmpsl
mov
std
mov
fmull
jmp
adc
repz
adc
cmp
and
and
lret
lods
aad
or
pop
decl
in
insb
sub
add
xchg
bound
cld
int
ret
test
mov
adc
fs
adc
mov
stos
and
jecxz
mov
inc
loopne
fcoms
or
dec
adc
dec
inc
and
jb
and
jmp
fsub
adc
scas
stos
jmp
sub
ret
std
lretw
popa
xchg
fbld
loopne
xchg
pop
test
pop
icebp
push
xchg
fucom
rorb
pop
stos
fsubrs
inc
pop
pushf
inc
add
sbb
push
xor
xchg
insb
test
inc
xchg
or
xchg
sbb
add
and
xor
je
xor
push
nop
cmc
dec
add
mov
and
jecxz
jecxz
addl
push
scas
xchg
xchg
jecxz
jns
cmp
mov
dec
lock
cs
testl
sub
into
mov
cmp
dec
adc
inc
sub
dec
scas
pop
aaa
movsl
stos
lret
jns
nop
das
add
test
enter
mov
cli
adc
push
into
or
add
adc
xlat
jo
jp
andb
lea
push
ret
dec
inc
int
or
mov
mov
mov
loope
shl
or
or
loopne
inc
sbb
xchg
ficomps
add
test
sbb
pop
and
mov
rclb
jg
negb
xchg
push
or
inc
outsb
jp
or
out
jb
mov
jg
add
mov
mov
cmp
cld
sbb
or
or
jne
cltd
mov
sahf
popa
mov
rorb
stos
mov
push
jns
lret
and
nop
xor
fimuls
cs
shr
mov
lcall
imul
test
aas
sbb
dec
jecxz
hlt
adc
insb
ljmp
mov
jb
inc
imul
mov
add
fstpt
sbb
daa
jne
movsb
mov
sbb
outsb
dec
mov
scas
and
adc
scas
call
cmp
add
mov
jo
fadd
inc
sbb
mov
lods
cmp
andl
adc
or
or
sub
repz
jmp
repnz
mov
adc
push
dec
pop
sahf
fs
imul
add
cmpsl
cmp
pop
jg
add
cltd
push
aas
dec
adc
jae
pop
and
or
mov
sub
xchg
out
inc
xlat
in
mov
mov
jns
in
jge
jmp
hlt
stos
xchg
mov
in
ljmp
lds
sub
push
testl
jnp
rol
cmc
inc
cmpsb
cmc
mov
pop
mov
out
cmp
jo
add
sbb
icebp
lock
jecxz
enter
dec
lcall
pop
adc
adc
scas
rcrb
xchg
repnz
inc
mov
ret
jle
inc
or
jecxz
add
cmp
lcall
xchg
push
hlt
lds
sub
fldenv
cmpsb
push
in
imul
sbb
mov
mov
aas
sbb
xor
cmp
mov
in
push
cmp
cmpsb
hlt
mov
xchg
in
and
inc
lock
mov
adc
add
dec
xor
mov
xor
inc
js
rolb
mov
and
cmp
jecxz
mul
rclb
packsswb
or
mov
mov
movsb
pushl
cmpsb
sub
out
sahf
pop
sar
jne
sbb
dec
mov
and
jmp
xlat
sbbl
cmp
jbe
outsl
inc
jecxz
jae
dec
test
dec
popa
sub
lahf
cmp
lret
icebp
or
arpl
mov
mov
lret
jno
adc
fdivrp
lds
loope
mov
mov
scas
sarl
xchg
mov
mov
popf
nop
movsw
hlt
ljmp
mov
inc
test
xchg
fwait
pop
mov
inc
jl
pop
sbb
jnp
cld
sbb
xor
sahf
aad
ljmp
imul
jge
pushf
mov
mov
inc
add
stos
xchg
push
xchg
cmpl
add
or
sbb
pop
push
mov
pop
jmp
mov
add
aam
jl
test
push
pushf
pop
adc
fucomi
dec
xor
sbb
fstpl
xchg
and
sub
ds
sub
mov
adcb
out
mov
and
xchg
test
cld
nop
cs
movsl
or
shll
mov
in
lahf
adc
addr16
movsl
add
js
btr
add
xor
dec
dec
inc
mov
test
cmp
cli
mov
push
cmp
pop
cmp
dec
sahf
mov
push
js
mov
decb
mov
push
mov
or
cmp
pop
cmp
insb
sub
ror
cmp
or
mov
scas
inc
inc
xchg
lret
xchg
pop
orb
dec
iret
test
test
jecxz
pop
fistps
arpl
dec
sbb
lea
cld
mov
jp
lds
insl
jb
or
outsl
push
mov
addr16
into
mov
or
rol
adc
jno
ffree
in
xor
xor
out
cmc
test
dec
mov
xor
test
cli
les
push
scas
push
mov
fisubrs
icebp
xchg
sub
xor
pop
cmp
adc
cmp
push
push
ret
push
addr16
repz
push
pop
std
scas
rol
mov
fidivl
or
scas
or
out
mov
ss
pushl
xor
insb
daa
out
adc
mov
push
arpl
mov
push
fcmovu
jns
adc
int3
cmp
loop
repz
add
pusha
ja
sbb
push
mov
fcoml
inc
mov
inc
je
or
and
inc
fcoms
xchg
cli
jae
push
into
mov
js
push
add
sahf
lods
in
inc
rolb
repnz
adc
cmp
mov
xchg
adc
jbe
mov
dec
push
movsb
icebp
jb
push
jnp
cmp
adc
pop
and
mov
ret
xlat
cmpl
inc
push
lods
lea
scas
jl
movsl
out
out
add
sub
int3
sub
ror
pop
imull
xchg
cmp
aaa
lcall
out
and
xchg
ss
loop
adc
xor
and
dec
hlt
add
imul
pop
nop
add
xchg
push
and
cs
std
mov
fdivl
inc
inc
jo
adcb
inc
mov
jmp
into
jmp
mov
pop
sti
cs
testb
mov
notb
sahf
lret
jno
mov
pop
inc
jo
hlt
lret
cmp
xor
push
pusha
sbb
sbb
mov
es
and
cmp
cmp
call
addr16
sbb
mov
dec
jbe
movsb
call
lea
aad
in
int3
cltd
std
data16
addr16
xlat
jne
scas
mov
jns
cmp
push
push
iret
xor
jl
mov
push
lock
pop
movsl
fsubr
nop
jl
test
or
pop
sub
push
mov
sub
lcall
pop
cmpsl
cmpsl
and
lea
pop
das
add
jmp
push
cmpsl
mov
dec
adc
mov
iret
cmp
in
lahf
pop
fwait
lret
jp
xor
stc
adc
xchg
rep
mov
out
jge
pop
add
fcmovne
imul
int3
mov
cmc
inc
ds
jmp
popf
push
movsl
es
inc
push
inc
jle
add
jb
jbe
push
daa
iret
sub
add
mov
movb
popa
mov
cmc
adc
jb
or
insb
mov
cmpl
cmp
loope
inc
jno
inc
push
inc
jae
rcr
push
and
iret
dec
add
mov
jp
pushf
mov
cmp
add
ja
xchg
pop
in
aaa
mov
test
mov
cwtl
frstor
mov
inc
inc
adc
cli
cmp
sub
outsb
aaa
xor
shll
mov
ficoms
dec
stos
leave
jno
mov
scas
subb
push
add
lods
or
jno
fsts
shrl
or
enter
jbe
outsb
adc
jns
or
adc
jmp
dec
sbb
mov
cs
int3
aam
fbld
sbb
js
aaa
ss
into
cmp
stos
or
insl
aam
lock
add
outsl
pop
jno
das
and
xchg
inc
scas
adc
test
fstl
cmpsb
inc
test
xchg
push
test
pop
add
sarb
push
stos
cmpsb
test
mov
adc
xor
lea
jnp
mov
sbb
sub
roll
inc
movsl
in
push
pop
sbb
cmp
xchg
in
mov
sub
mov
stos
rcr
adc
insb
lret
addr16
mov
add
sbb
push
sbb
addb
in
cld
mov
sbb
xchg
mov
fldcw
jne
adc
mov
les
clc
addb
test
mov
mov
cmp
test
and
xchg
ret
lcall
jae
sub
xchg
sbb
fcmovnu
dec
sub
mov
jns
gs
shl
dec
out
and
sub
or
xor
jp
je
in
pop
inc
pop
and
add
jp
xchg
or
or
lods
scas
inc
mov
xchg
rolb
mov
cmp
cmp
in
popf
mov
push
cltd
aad
push
call
pop
and
sub
sbb
popf
mov
inc
mov
sti
addr16
int3
loop
push
jb
fidivl
fildl
mov
iret
es
dec
cmp
sti
cmpsl
fcoms
mov
stos
aas
dec
sub
adc
dec
cmpsl
sub
in
test
xor
and
push
cwtl
dec
mov
jmp
mov
aam
jo
sbb
imul
or
push
sub
movsl
rclb
sbb
and
xchg
push
fdiv
dec
push
lds
cwtl
int3
fcoms
mov
sahf
pop
jmp
xlat
mov
ffreep
call
and
arpl
cld
sbb
test
ds
inc
arpl
xor
lahf
inc
fsub
cmc
mov
lds
xor
cmp
dec
inc
hlt
add
in
lea
insb
lret
sub
push
adc
hlt
mov
cmpb
roll
cmc
xor
cs
cmp
pop
mov
decb
lods
fimuls
in
cmp
scas
lcall
add
rorl
mov
pop
dec
add
jo
sub
cmp
and
jbe
push
outsb
push
imul
sbb
in
cmp
jmp
std
lea
inc
popa
inc
xchg
hlt
inc
lods
push
cmovg
cwtl
imul
test
shll
iret
and
lret
or
or
sti
cld
test
pop
cltd
jecxz
adc
sbb
cmp
ret
jb
fnstsw
cmp
outsb
popf
sub
lods
pop
aaa
push
jnp
cmp
cmp
in
pop
jo
int
popf
test
nop
fimull
sbb
xchg
fdiv
adc
dec
insl
mov
shll
cmpsb
adc
inc
jno
mov
faddl
adc
jmp
movsl
inc
ljmp
shr
sbb
cmc
pop
mov
negl
arpl
or
test
mov
push
sbb
and
pusha
xchg
lods
jo
mov
sbb
fnstsw
pop
stc
fcmovnb
cmp
cmp
sbb
push
xchg
mov
test
xor
mov
dec
add
adcl
lcall
int
in
push
outsb
push
js
jp
arpl
lods
sbb
jecxz
inc
adc
js
es
adc
in
mov
dec
pushf
test
subb
call
sti
repnz
lcall
push
in
xchg
push
loop
je
push
inc
pop
xchg
fcmovne
js
fs
sbb
mov
push
push
out
cmpsl
add
mov
add
test
push
hlt
stos
sub
insl
imul
out
js
jb
roll
pop
call
mov
cmp
in
mov
push
xchg
lret
je
orb
xlat
lock
lret
ficoml
cmp
pushf
mov
stos
je
enter
stos
push
adc
cmpl
jge
adc
add
mov
loopne
xchg
out
pop
and
out
enter
imul
decl
test
fsubs
imul
jno
lea
ss
mov
inc
mov
and
pushf
add
push
mov
pop
lea
in
add
jne
mov
jmp
cmp
mov
push
mov
jno
inc
fistl
arpl
lds
inc
adc
push
les
ret
fwait
push
stos
jbe
inc
in
lcall
aam
loop
loope
aas
aad
and
das
fisttps
sti
jns
fdiv
cli
push
xchg
sbb
movsl
lock
fldt
fldt
push
sub
mov
sub
mov
xchg
push
pop
or
jmp
cmp
dec
jecxz
stc
test
add
push
out
addr16
lods
xchg
enter
ss
imul
fisubrs
dec
add
loop
jno
sbb
and
sub
cmp
fdivl
adc
cld
add
popf
icebp
xchg
fidivl
int3
fidivl
adc
or
xchg
dec
addr16
and
cmpsl
in
hlt
push
fildll
or
repnz
ret
movsb
ret
lds
adc
dec
jo
stc
and
jp
jp
xor
inc
shr
inc
push
pop
dec
bound
or
jns
cmp
xor
gs
sub
imul
addr16
dec
xchg
adc
and
adc
ffree
adcl
shll
mov
cmp
sti
faddl
inc
push
sub
rorl
test
mov
adc
enter
mov
push
lock
or
inc
in
ja
insb
jbe
cmpb
jno
pop
in
fsubrl
mov
test
outsb
mov
inc
ror
sub
pop
mov
lock
mov
cwtl
xchg
in
loope
stc
out
sub
loop
xchg
lds
xor
lret
icebp
mov
gs
cmova
mov
pop
cmp
mov
push
and
dec
push
sub
mov
pop
push
popf
and
clc
pop
out
or
add
stc
xor
add
xor
pop
xchg
xchg
cltd
xchg
movsb
dec
jb
mov
popf
imul
inc
mov
enter
lds
jmp
rcrl
nop
mov
jno
adc
xchg
pop
pop
loopne
xchg
sbb
push
mov
dec
adc
adc
push
jno
mov
jge
sbb
out
lea
je
call
mov
jb
jo
dec
xor
rcrb
data16
call
cmp
in
sub
fs
mov
mov
cmp
or
repnz
adc
inc
int
or
xchg
ss
pop
stc
jnp
subl
or
mov
rol
pop
cltd
sub
jp
aam
mov
ret
push
out
push
jmp
scas
or
fdivrs
sub
pop
es
mov
aam
cli
pop
mov
addb
ja,pn
daa
cld
lret
fmul
xor
cmp
push
ds
roll
xor
jb
inc
push
popa
xor
xor
bnd
sbb
mov
push
jo
mov
es
ljmp
adc
inc
inc
enter
or
mov
iret
mov
xchg
inc
pop
adc
dec
and
shrl
jns
loope
cli
jnp
cwtl
imul
stos
iret
sbb
pop
fistps
mov
pop
cmp
jmp
mov
jo
pop
lcall
fdivrl
ss
cmp
popa
xor
sti
cwtl
popf
ror
cmp
jecxz
cld
push
add
addb
sbb
xchg
push
or
mov
pop
lret
lds
ds
xchg
jl
test
repnz
jae
mov
sub
pop
xchg
test
mov
sahf
or
pop
lods
stos
fcompp
aam
repnz
addr16
push
subl
add
and
mov
adc
dec
push
mov
inc
psubw
lock
outsl
cmc
and
ret
shlb
sbb
sbb
fidivl
jg
test
jge
or
push
je
cmpsb
cli
imul
add
mov
inc
xor
and
sbb
push
or
leave
mov
and
jno
pop
jg
gs
mov
jne
push
jns
cmpsl
push
out
popw
movsl
xor
setns
sbb
lcall
mov
int3
push
inc
mov
inc
jmp
lret
inc
mov
in
xchg
or
jno
imul
imul
sub
inc
into
push
inc
push
mov
pop
call
repz
sub
push
and
cli
icebp
pop
sbb
ds
repnz
pop
sbb
pusha
stc
std
sti
es
nop
adc
push
fildll
in
mov
sub
mov
or
xchg
sub
xor
mov
inc
jno
sbb
push
xchg
out
std
out
pusha
sub
xchg
shll
mov
inc
mov
cmp
out
xchg
sarl
mov
jbe
fcoms
lods
or
ss
aad
jae
sbb
rclb
pop
fdiv
or
mov
mov
test
sub
shr
or
jne
or
insb
cwtl
cwtl
cmp
sti
mov
ret
pushf
pushf
push
cmp
insb
pop
sub
ja
cmp
clc
jno
out
mov
std
inc
out
xor
mov
fcmovnu
sti
mov
sbb
pop
cli
mov
shlb
sbb
mov
or
fnstenv
inc
add
cmpsb
or
mov
mov
push
repnz
and
loope
xchg
inc
mov
ljmp
lahf
cmc
and
sub
std
lcall
outsb
aad
cmp
test
mov
cmp
insb
inc
ficomps
sub
dec
js
push
mov
das
js
inc
dec
mov
in
mov
imul
mov
pop
repnz
ret
mov
lret
int
jmp
into
add
imul
popf
pusha
xchg
inc
pop
or
stc
pop
adc
add
and
mov
sbb
jle
je
mov
or
pop
stos
pop
add
and
mov
sub
cs
push
jns
rcll
mov
adc
fmull
jns
popl
cmp
rcrb
cmpsb
mov
lret
dec
jnp
lds
inc
dec
and
mov
push
xchg
pusha
ret
popa
fstps
mov
pop
push
daa
pop
movsl
daa
mov
inc
movl
cmc
push
push
pusha
xchg
push
mov
negl
push
xor
dec
call
jno
icebp
addr16
addl
popf
adc
jo
aaa
sbb
dec
xor
cmp
les
xor
test
repnz
pop
test
outsb
pop
stos
pushf
pop
jle
lods
pop
inc
push
mov
imul
mov
js
sub
and
inc
orl
inc
adc
mov
mov
xchg
sub
gs
mov
sbb
rcl
and
adc
mov
push
mov
lcall
sahf
sahf
mov
jns
rolb
hlt
cmpsl
std
jmp
outsl
and
into
mov
out
sub
add
ss
add
mov
xchg
in
mov
orb
jecxz
jmp
mov
mov
insl
mov
jle
jae
je
jle
scas
test
cld
fstl
sub
in
push
cmc
leave
stc
and
dec
xchg
in
mov
leave
push
or
mov
mov
pop
push
xchg
sub
idiv
push
xchg
push
jbe
pusha
xchg
inc
aas
jae
or
rolb
lods
lret
jmp
in
adc
cmpb
push
lods
pop
mov
push
sub
jmp
fwait
nop
and
mov
xlat
stos
xchg
mov
xchg
or
cmp
mov
pushf
dec
test
adc
rclb
ja
mov
mov
stos
sbb
xchg
ljmp
push
jnp
pop
jns
pop
xor
add
dec
xor
inc
sub
mov
xchg
pop
cmpsl
mov
push
lea
aam
sbb
je
push
xchg
mov
mov
add
xor
ret
cs
xchg
pop
sbb
shr
inc
ret
xchg
adc
fdivrs
add
rorl
cltd
mov
and
xchg
mov
imulb
pop
icebp
sbb
adc
imul
or
fstp
insl
pop
inc
cltd
gs
in
cmp
sahf
mov
sbb
repz
icebp
push
mov
or
test
mov
xor
mov
movsl
dec
or
loop
or
sarb
pop
xchg
mov
cmp
pop
pop
jp
fdivl
out
xor
daa
xchg
mov
xchg
mov
iret
add
std
adc
pop
aam
push
jg
jne
imul
push
push
cmp
xor
jmp
inc
into
dec
adc
inc
cmp
mov
sbb
push
mov
ret
lock
inc
dec
pop
lods
pop
sbb
jge
rcr
out
divb
mov
mov
in
bound
dec
pop
adc
call
ret
pop
sarl
push
push
mov
xlat
dec
push
fistl
push
jp
jbe
ja
movsl
sahf
mov
sbb
out
push
lods
js
addr16
add
imul
adc
gs
and
std
cwtl
fimull
out
aaa
ss
cli
popa
xchg
inc
push
data16
iret
addr16
inc
jge
sub
jge
lcall
pop
inc
add
pushf
sti
ljmp
ret
ds
push
stos
lock
jo
sub
xor
pcmpeqw
pop
cwtl
out
std
xchg
mov
loop
jmp
mov
neg
addr16
int
pop
outsb
push
or
ffree
rep
push
scas
add
add
xchg
pop
imulb
dec
dec
pop
ljmp
dec
xchg
jns
lods
repz
and
adc
lods
mov
dec
fldenv
test
les
mov
mov
das
popl
pop
mov
cmp
pop
pop
les
pop
pop
xchg
stc
push
cwtl
mov
es
cld
mov
imul
rorb
sarb
jb
xchg
addr16
and
not
ret
insb
cli
mov
test
stc
push
and
xchg
adc
sub
cmp
xor
mov
add
jns
inc
fnstsw
pop
stos
fldl
or
mov
jae
pop
jne
xchg
jmp
or
enter
xchg
and
scas
xchg
xchg
sbb
lahf
mov
enter
insl
cmpl
popf
out
clc
out
and
leave
bound
dec
cltd
xchg
mov
push
push
sarl
jo
in
pushf
pop
inc
dec
lea
loop
cmp
lret
out
xchg
cld
lds
jae
dec
movsl
in
pusha
data16
hlt
cwtl
sub
mull
lods
inc
ja
mov
shll
pop
pop
adc
lea
ss
xchg
mov
push
movsb
fbstp
and
xlat
or
adc
mov
testb
xchg
sti
js
mov
xchg
or
sbb
pop
mov
addr16
jecxz
sbb
pop
loope
pushf
rcl
xor
inc
mov
setae
jp
xchg
xor
inc
inc
clc
jb
xchg
mov
dec
pop
fsubrs
push
int3
fistpll
inc
aam
or
cmp
pop
xor
fs
pop
fiaddl
in
insl
mov
push
mov
loopne
mov
push
sub
cmp
aas
xchg
lock
and
adc
ds
mov
lret
jle
pop
push
push
stos
imul
lds
sbb
in
shl
stc
sbb
jne
mov
pop
lret
das
imul
jp
fcoms
and
add
das
xor
cli
jle
mov
leave
negl
mov
pop
mov
inc
daa
rcrb
and
movsl
pop
fwait
cmp
je
dec
repz
pushf
loopne
push
cli
aas
jae
rorl
xor
shl
jg
icebp
add
fwait
sub
push
fsubl
or
cld
xchg
xchg
sub
adc
pop
outsl
loopne
sbb
lcall
imul
inc
add
iret
and
push
insl
adc
sbb
xchg
or
push
mov
jns
jge
push
cs
dec
push
and
and
dec
push
enter
lret
popf
repnz
fwait
inc
movsb
cmp
aaa
or
imul
test
jnp
push
pop
xor
imul
popf
je
pop
mov
inc
inc
ds
shrb
pushf
push
xor
and
sqrtps
movd
mov
movl
pop
pop
rolb
out
loop
pop
ret
sbb
xor
sti
pushf
sbb
and
inc
mov
jmp
xor
mov
inc
imul
sbb
add
out
mov
int
insb
mov
sub
loopne
cwtl
pop
push
and
test
sub
imul
scas
insb
inc
ficoml
mov
or
add
rcr
pop
push
pusha
xor
data16
hlt
jecxz
mov
and
ljmp
pop
xor
gs
dec
shlb
andb
lock
ljmp
hlt
sbb
mov
cmp
ljmp
inc
ret
mov
fldt
cld
push
fdivrs
sub
icebp
scas
xchg
jp
pop
movsb
jp
add
push
push
cltd
into
into
loop
xchg
push
icebp
repnz
andl
add
jno
sahf
out
call
add
into
movsl
mov
inc
sbb
and
icebp
and
lods
shll
mov
sub
shlb
xchg
out
pop
inc
sub
pushf
leave
in
sbb
push
dec
dec
nop
repz
ret
lods
push
imul
call
arpl
push
cmp
popl
dec
mov
loop
push
dec
sbb
pop
jb
jne
push
dec
outsb
popf
xchg
sbb
scas
cmp
jo
loop
stc
test
xchg
je
cli
je
arpl
int3
cmc
jno
sub
out
sub
incb
les
pop
fwait
out
xor
lcall
into
lods
jmp
jmp
mov
sahf
dec
push
push
mov
sub
mov
aam
mov
or
xor
fstpl
or
adc
ror
loope
out
cmpsl
shrl
mov
mov
add
test
fsubr
mov
rolb
mov
push
mov
ffreep
das
dec
fld
clc
adc
fistps
and
mov
sub
test
xchg
or
std
cmp
das
add
jne
xor
mov
inc
sub
dec
shlb
lea
rcll
add
inc
jmp
cmp
sbbb
pushw
popa
arpl
int
sti
into
aam
sti
lcall
fdivrs
js
sbb
jo
stos
jns
out
in
push
adc
sahf
test
hlt
popf
and
popf
aad
adc
add
int
mov
mov
dec
test
jo
mov
mov
xchg
dec
imul
in
pop
popa
and
xchg
sbb
jle
imul
out
jg
dec
or
mov
fcomps
adc
or
sub
inc
inc
jle
and
add
in
clc
stos
pop
sbb
jecxz
xchg
add
or
mov
lret
adc
ja
xchg
pop
mov
xchg
sub
incl
adc
xor
outsb
sti
push
je
in
mov
stos
xchg
fbld
bound
mov
hlt
test
mov
pop
and
inc
call
add
mov
loop
les
add
push
sbb
std
jecxz
xchg
dec
call
aam
adc
aad
mov
adc
cmpsb
push
adcl
pop
lret
add
mov
push
jno
sbb
mov
push
icebp
mov
xor
add
dec
pop
push
jg
push
jmp
xchg
incb
addl
push
push
ja
push
xor
jne
xor
or
mov
cmpsl
test
or
mov
or
popa
jne
add
jg
add
add
adcl
leave
lret
push
xorb
mov
xlat
jae
dec
shlb
jecxz
jo,pt
mov
push
popf
and
inc
mov
fldt
sbb
in
repz
pop
lock
mov
test
addr16
xchg
mov
mov
loop
pusha
mov
mov
dec
or
or
pop
mov
sbbb
and
mov
cmp
js
xor
int3
gs
push
adc
xor
jae
lret
mov
sbb
push
add
inc
jae
add
clc
test
or
out
xor
mov
xor
loopne
stos
subb
dec
mov
lods
call
mov
xchg
or
repnz
std
mov
fldcw
inc
scas
xor
sarb
out
jb
sub
sub
and
push
icebp
push
fcmovbe
fstpl
sbb
mov
pop
jecxz
lcall
or
cwtl
sbb
jle
add
add
scas
adc
push
pushf
imul
sub
imul
scas
lods
xchg
cld
arpl
ror
add
les
cwtl
fcomps
cmp
jmp
jae
push
add
lods
leave
add
add
hlt
mov
test
push
scas
outsl
movsb
jne
cmp
xlat
xchg
pop
mov
test
sub
imull
mov
aad
mov
mov
rorb
fldenv
ds
push
shrd
aas
mov
sbb
movsl
pusha
mov
sub
push
in
and
cmp
push
stos
mov
xor
pushf
mov
mov
adc
test
ret
mov
into
test
xchg
lods
pop
mov
pop
jbe
mov
mov
leave
push
xchg
dec
in
repnz
xlat
gs
sbb
pop
mov
outsb
faddl
pusha
scas
add
lock
fildl
cli
lcall
sbb
mov
and
mov
xor
stos
mov
idiv
dec
orl
ljmp
pop
sahf
int3
pop
dec
sub
mov
or
cwtl
faddp
repnz
mov
cmpl
aas
enter
lods
add
mov
inc
out
fadds
dec
mov
mov
mov
mov
int
lret
dec
cmp
or
scas
xor
movsb
sub
mov
jge
jle
fs
ret
mov
dec
std
push
insb
pusha
ljmp
pop
pop
cwtl
push
les
lret
pop
jmp
adc
sbb
test
lods
hlt
or
adc
jne
sbb
sbb
incb
out
iret
and
xchg
dec
jb
cmpsb
lahf
or
out
dec
in
push
cltd
mov
fdiv
inc
lahf
popa
inc
jo
pop
aas
jle
and
add
iret
dec
arpl
outsb
mov
orl
sub
mov
dec
jnp
mov
inc
mov
ret
cwtl
mov
cmp
and
mov
jecxz
xchg
js
push
fldl
lods
adc
fsts
addb
add
sub
mov
in
insl
cld
sub
sub
dec
scas
push
je
add
sbb
jg
popa
add
mov
push
mov
mov
sub
out
dec
dec
jecxz
mov
pushf
push
ljmp
push
mov
jno
inc
sub
push
ja
pusha
arpl
loopne
insl
xchg
xor
sbb
lret
inc
xor
jb
scas
xor
mov
xor
mov
test
sub
cmp
or
mov
adc
lods
gs
and
mov
lahf
loop
jae
jbe
dec
in
lret
or
xchg
and
sub
sbb
adcl
test
es
test
adc
pop
lods
shl
int
sub
jle
jae
out
mov
mov
ljmp
sub
leave
inc
insl
std
aaa
push
sub
cs
or
int3
lahf
aad
mov
leave
push
cld
cmp
mov
xor
pop
mov
je
add
mov
mov
adc
cmc
das
int3
stos
cmp
inc
orl
in
fisttpll
ja
push
inc
jl
mov
jnp
pop
jmp
sbb
mov
and
andl
fidivrs
mov
push
jle
pop
cmp
cli
mov
cwtl
jb
mov
stos
call
or
pop
std
or
into
sub
and
cmpsb
stc
xor
add
popf
lock
mov
popf
mov
gs
ljmp
xchg
mov
notl
pop
mov
jle
jb
shlb
imul
pop
shll
dec
mov
clc
jmp
lods
arpl
imul
cmpxchg
lahf
ret
mov
fbld
stc
sbb
shl
adc
mov
sbb
sahf
rorl
rorb
fnstsw
sub
sbb
gs
lret
push
lcall
dec
cmp
pop
inc
stc
push
push
pop
cmp
aas
jecxz
lods
mov
sub
sub
adc
sbb
adc
pop
jne
repz
addr16
push
push
cmc
sub
mov
pop
dec
xor
je
in
add
lret
jg
pusha
cmp
cwtl
push
or
xor
cmp
cmp
mov
outsl
lods
push
mov
xchg
lahf
push
pop
loop
mov
rorl
cmp
dec
lea
cs
push
cmpsl
fmul
inc
xor
cld
dec
lods
push
or
clc
enter
mov
sarb
adc
scas
xchg
stos
test
daa
mov
mov
pop
and
mov
sti
mov
sbb
mov
or
sub
in
mov
cmp
adcb
cld
dec
push
mov
rclb
push
loop
xchg
sub
cwtl
dec
lret
sbb
ficomps
xchg
jne
frstor
shlb
dec
cs
lret
adc
data16
test
xor
xor
gs
addl
or
jl
jne
mov
xor
jl
arpl
mov
scas
jae
shlb
hlt
jns
or
ret
stos
sub
lods
inc
iret
xchg
rcl
imul
adc
dec
sti
sbb
dec
imul
mov
cmpsl
fcomi
das
sbb
dec
inc
imul
mov
jmp
lcall
or
cmp
es
loope
mov
xor
insl
daa
lds
or
std
and
sub
imul
cmpsl
add
es
add
div
mov
fsubp
ret
mov
xchg
sub
test
popf
pushf
out
lret
add
nop
scas
jno
dec
pop
xor
test
and
shrb
mov
xchg
sbb
aaa
sub
pop
out
xor
test
aas
or
mov
inc
add
mov
das
les
sbb
ds
clc
mov
pop
loop
icebp
arpl
add
sbb
jo
repz
mov
sub
insb
repz
testb
mov
loopne
ret
dec
or
dec
push
xor
xor
jbe
push
add
dec
sahf
lods
mov
mov
inc
test
and
sbb
fucomp
xorl
xchg
rolb
in
jmp
out
cli
dec
xchg
pop
jle
into
fwait
insb
mov
int3
pop
mov
repnz
addr16
fstps
std
mov
out
push
add
xchg
rol
dec
mov
outsb
pop
sub
mov
xor
cmpsl
das
xchg
mov
xor
mov
lods
cmp
jle
push
repz
fdivs
enter
xor
loop
lret
xchg
insb
scas
push
lret
shll
mov
es
and
push
icebp
fistpl
icebp
call
push
add
dec
xor
and
mov
aaa
mov
sub
scas
push
das
cmp
dec
add
dec
aam
sbbl
mov
out
and
rcrl
or
call
int
push
pop
xor
and
xchg
clc
js
add
cmp
jg
mov
push
pop
int3
sbb
and
mov
in
add
movsb
out
or
mov
lock
fildll
inc
nop
ret
sbb
xor
pop
aas
sbb
cmpsb
mov
lods
int
cmpsb
mov
arpl
imul
and
hlt
arpl
xor
pop
jae
and
adc
jecxz
fcoml
push
fs
call
cmpsb
jmp
inc
and
dec
jl
dec
pop
lret
sub
mov
mov
lcall
mov
xchg
jae
and
movsb
jb
jecxz
push
adc
jecxz
sbb
add
clc
or
hlt
mov
adc
xlat
stc
insb
inc
add
repz
out
inc
cmp
push
out
and
in
stc
pop
lret
fdivrp
mov
movsl
test
dec
push
mov
cli
pushf
pop
test
or
cmpb
xchg
lret
arpl
add
cmp
pop
sbb
scas
cwtl
sarb
cli
push
aad
loop
fisttps
cmc
mov
push
mov
push
add
int
arpl
add
mov
sub
sbb
jmp
subb
push
ljmp
mov
mov
mov
jg
dec
jg
cmc
or
das
sbb
fcmovnb
ljmp
sub
jl
cwtl
fs
and
mov
imul
movsl
movb
sbb
repz
dec
out
xor
inc
or
or
jne
imull
dec
stos
and
leave
adc
jg
xchg
nop
jg
cs
and
pop
in
fldl
sahf
push
or
mov
sbb
loopne
mov
jae
ja
div
aaa
imul
or
mov
push
icebp
mov
inc
pop
insl
leave
jbe
xlat
dec
mov
lods
mov
mov
mov
or
add
ficompl
push
push
sbb
mov
xchg
out
mov
mov
fisubrl
push
popf
xchg
popa
dec
pop
cltd
aad
aaa
jmp
jne
out
push
ja
jae
mov
call
inc
ja
jmp
xchg
mov
and
jecxz
ret
hlt
call
pop
mulb
xchg
outsb
add
cmp
sub
xchg
mov
cs
or
pop
push
and
popa
pop
jl
push
scas
mov
sub
ret
fs
cmp
push
jg
aad
dec
inc
scas
es
or
mov
js
jno
jg
cmp
mov
out
fistps
add
push
push
mov
sub
or
dec
in
incl
movsb
lock
aaa
call
push
cmp
jl
sti
ret
mov
inc
and
xchg
dec
jnp
in
and
stos
lea
fstp
cwtl
imul
pop
and
mov
and
pop
pop
xlat
pop
xor
sbb
popf
xor
andl
xchg
inc
out
ds
shr
adc
sarb
adcb
add
aaa
push
push
stc
pop
adc
les
pop
add
cmp
pop
push
mov
addr16
insb
pop
movsl
sbbl
xchg
xchg
cmp
fldt
addr16
add
dec
fwait
clc
imul
stos
sbb
test
mov
fists
enter
mov
push
ret
jmp
imul
xchg
out
push
xor
adc
cmc
mov
jae
call
cmpsb
arpl
outsb
fldt
adc
dec
or
cmp
clc
pop
movsb
lahf
or
and
faddl
mov
rcrb
loope
xchg
imul
addb
inc
inc
loop
popa
push
test
dec
das
aam
cmp
sub
insb
or
mov
add
mov
sbb
scas
decb
and
push
ror
sarl
push
mov
call
inc
std
je
add
adc
pop
les
dec
adc
mov
rcll
in
fdivrl
outsl
dec
lret
loope
dec
sub
pusha
add
or
popa
xor
jl
dec
orl
sti
out
inc
shll
mov
sub
xchg
cmc
or
in
movsl
pop
xor
jne
scas
jno
mov
pusha
add
cs
mov
jbe
lahf
loop
dec
push
mov
iret
in
repnz
or
xchg
or
cld
fadds
add
xchg
adc
mov
cmp
xchg
xor
mov
int
test
mov
test
mov
xor
cld
push
and
cmc
leave
hlt
mov
xchg
mulw
adc
xor
mov
fnstenv
sbb
push
test
cmp
test
out
fldl
daa
jecxz
jno
jne
ret
lcall
jg
sub
dec
sti
addb
std
loop
mov
cli
dec
out
mov
mov
sti
pop
jbe
jns
sti
push
adcb
jns
addr16
pop
adc
pop
lock
jno
out
xchg
add
jo
out
mov
xchg
and
addr16
mov
imul
stc
je
arpl
lock
adcb
test
int3
rcr
dec
sub
pop
pop
jno
jne
sub
movsb
inc
int
inc
cmp
andl
jns
in
mov
mov
cmp
cmpsl
sub
push
jp
clc
dec
mov
loopne
mov
inc
sti
sub
xchg
test
mov
xchg
xchg
popw
inc
mov
loop
push
je
jecxz
mov
adc
cld
cmp
adc
movsb
in
jbe
sub
or
fists
ret
cli
push
or
loope
add
sub
ds
cmpxchg
push
jp
mov
cwtl
add
imul
adc
std
fwait
mov
pop
std
lcall
add
icebp
mov
fstpt
jmp
xchg
call
adc
es
lods
inc
out
mov
jg
fmull
cmc
sbb
sub
jmp
xchg
sbb
mov
cmp
movsl
jnp
mov
movsb
mov
xchg
dec
dec
adcb
xchg
mov
cwtl
sub
ss
cld
loopne
pop
andb
jb
mov
in
stc
pop
lock
popa
fsubl
jne
pop
jbe
popf
lahf
and
cmp
and
pop
adc
shll
fs
jb
in
adc
pop
ror
add
mov
fs
aaa
andb
int3
dec
fcoml
movsb
mov
popa
cli
inc
and
lods
cmc
rolb
mov
aas
cs
rol
orb
call
pop
in
out
inc
and
jns
or
pop
push
dec
add
inc
cltd
stc
ficompl
mov
jns
into
inc
push
xor
mov
sub
insl
pop
jno
jp
hlt
pop
enter
and
sti
add
sub
test
inc
mov
ljmp
fcmovbe
shl
adc
loop
cli
pop
int3
test
dec
das
sub
adcl
jns
mov
xchg
negl
add
pop
jle
les
inc
jmp
lcall
cmc
pop
mov
pop
aas
push
fcmovu
add
xchg
push
sti
stos
or
pop
pop
jbe
ljmp
arpl
cmp
out
cmp
sub
cwtl
in
mov
pop
cmc
icebp
add
inc
ja
xor
cwtl
mov
sub
lea
push
loop
cmpsb
xor
jne
testb
adc
loope
ret
cltd
mov
enter
divb
ret
add
rorl
addb
and
mov
push
mov
movl
cltd
sarb
icebp
jno
test
pop
add
fadd
sbb
adcl
xor
js
mov
jle
add
imul
cmp
mov
pop
dec
lods
xchg
dec
ret
outsb
js
lds
inc
xor
adc
sub
cld
repz
jle
xchg
dec
jl
pop
add
sbb
xor
inc
lock
xchg
add
out
mov
movsb
mov
mov
icebp
pop
test
stos
and
jmp
test
aam
mov
pop
insb
ja
pusha
scas
push
add
js,pt
push
out
sub
adc
loopne
xchg
cwtl
popa
jns
cld
mov
call
xchg
or
ret
xchg
dec
fisttpll
sbb
add
jle
cmp
fisubl
add
adc
cmp
inc
scas
insb
lods
ds
inc
inc
push
adc
aaa
inc
idivb
xor
mov
fmuls
cmc
sbb
adc
mov
and
js
bndldx
push
stc
mov
xchg
in
scas
pusha
dec
dec
jbe
dec
test
jp
imul
jne
xor
das
imul
fsubl
or
push
pop
pusha
test
gs
jae
stos
sbb
fidivl
fnstenv
std
mov
xorb
sub
in
mov
adc
push
scas
add
xchg
mov
int
push
xchg
arpl
xor
push
adc
push
pop
mov
push
dec
call
rclb
jle
and
push
jle
add
fs
cmp
adc
mov
ja
push
sbb
test
cmp
scas
nop
add
lret
mov
jns
jns
movl
xchg
mov
add
lret
pop
lods
pop
jge
sbb
pop
aas
push
sbb
es
inc
dec
or
add
add
test
rol
adc
lods
add
loopne
jae
inc
sbb
lds
inc
inc
mov
cli
pop
push
mov
jno
sbb
mov
and
and
call
loop
and
testb
cmp
push
test
movsb
jo
out
enter
jno
lea
or
mov
pmuludq
int3
inc
xor
xchg
gs
sub
cwtl
in
inc
out
jmp
push
mov
cmp
push
jns
call
aam
mov
push
and
jmp
ret
mov
lods
ret
jae
xchg
fs
imul
int
pop
push
push
bound
mov
mov
fcompl
aam
outsl
xchg
pop
pusha
jl
or
sbb
pop
mov
iret
inc
negb
clc
xchg
pop
aaa
inc
xor
jmp
mov
dec
mov
or
lods
pusha
dec
or
fstp
inc
inc
push
stos
sbb
inc
ret
pop
adcb
mov
into
mov
pop
push
push
jns
xor
mov
daa
and
mul
iret
and
jmp
test
cmpsl
cli
add
mov
sub
inc
ret
inc
pop
mov
add
pop
aaa
and
jne
loopne
dec
xchg
sarb
add
push
decl
adc
xlat
adc
in
push
mov
sub
jae
sub
popf
or
ret
mov
in
or
add
xchg
divb
jnp
ret
fdivr
mov
pop
push
xchg
stos
xchg
push
inc
pushf
inc
mov
pop
mov
enter
cmp
incl
or
dec
push
ss
cmc
jae
xchg
push
sahf
mov
out
test
arpl
mov
shlb
push
in
pushf
sbb
into
mov
add
xchg
mov
push
icebp
js
imul
cltd
inc
push
adc
jecxz
andb
outsb
jns
je
imul
dec
mov
subl
mov
mov
sub
enter
sti
cltd
lahf
jmp
sub
pop
mov
repz
repnz
sbb
lea
push
cmpsb
cmc
in
xor
jge
and
imul
mov
into
xor
lea
enter
int3
jo
les
cmp
mov
pop
pop
jecxz
movsb
and
mov
mov
jl
xchg
push
repnz
mov
jno
xlat
add
sub
stos
les
pop
insb
test
mov
cwtl
in
andb
add
mov
je
mov
je
push
pop
in
pop
ja
fwait
or
lea
push
in
jno
cmp
add
jecxz
mov
xor
mov
dec
daa
inc
mov
lods
mov
inc
cmp
fnstsw
aad
mov
aas
loope
or
mov
je
add
enter
cmp
and
loope
add
sbb
enter
cmp
xchg
and
mov
xchg
pop
sub
mov
lret
inc
lcall
sbb
cwtl
sub
xchg
push
mov
inc
inc
push
loopne
sbb
sub
adc
aaa
mov
sub
fmul
out
mov
add
hlt
js
jl
scas
push
fstps
mov
and
push
push
cmpsl
push
jle
cmp
sub
add
cli
pop
pop
clc
add
ror
or
test
sbb
dec
lret
cmp
lds
mov
jnp
fwait
or
ss
jge
push
imul
jle
push
push
mov
push
sti
adc
je
adc
insb
fdivs
lods
decb
xchg
and
push
mov
in
jns
add
mov
jnp
mov
sbb
cmp
cmpsl
nop
int
out
cli
dec
push
mov
cmpsb
outsl
mov
imul
mov
inc
repz
iret
cld
ljmp
pop
cmpsb
shl
xchg
or
popa
stc
sahf
adc
cmc
fistpl
fs
aas
sbb
aad
pop
xchg
scas
test
aas
add
xchg
pop
adc
pop
sti
shll
pop
xchg
cmp
xchg
ljmp
repnz
add
dec
lahf
xchg
jmp
jnp
gs
les
leave
cmpsb
and
pusha
mov
and
lret
testl
mov
stc
or
jp
or
push
and
xor
pushf
imul
ss
mov
cs
jle
push
and
imul
popa
push
cld
push
int
roll
and
js
xchg
loop
jg
mov
orb
jge
fsubrl
jge
in
xchg
cs
mov
add
or
mov
cs
sub
xchg
imul
pop
adc
subl
imul
sahf
xchg
je
dec
pop
outsb
repz
xchg
jbe
ret
inc
sbb
fcomps
ljmp
mov
inc
ror
jp
adc
outsl
xchg
pop
lds
mov
mov
mov
or
test
iretw
lcall
push
popf
call
rorb
aaa
les
test
mov
dec
aas
sbb
cmpsb
ljmp
mov
out
jnp
imul
mov
xor
adc
lods
cli
add
xchg
fs
lret
rcr
dec
ljmp
aaa
mov
adc
insb
arpl
rolb
stos
dec
aaa
jo
mov
jecxz
pop
mov
push
jle
push
mov
mov
adc
or
push
andl
unpcklps
cmc
cmpsb
pminsw
shlb
rcll
cs
xchg
in
sub
adc
sub
loopne
stos
pop
hlt
and
dec
sbb
call
lods
in
push
shl
loopne
inc
mov
aas
out
cltd
into
movsb
xlat
jno
dec
jmp
roll
mov
shlb
fisubrl
lret
sbb
xor
and
mov
push
mov
scas
test
jg
and
daa
or
lcall
in
aaa
je
jecxz
stos
sbb
jb
inc
dec
jle
scas
sub
dec
popa
aad
loop
mov
test
sub
insl
aaa
icebp
xor
out
aas
adc
xor
xchg
iret
push
mov
cmp
fdivrs
add
push
adc
mov
stc
mov
aam
mov
inc
inc
cmpsb
aad
fprem1
fists
xchg
and
mov
jbe
lahf
stos
xor
ljmp
sub
icebp
test
sahf
testb
and
fwait
inc
pop
sub
je
aad
and
sbb
sub
shlb
fsts
jle
sbb
insb
jnp
sbb
rorl
mov
sbb
decl
cld
in
xchg
sub
dec
mov
mov
dec
repz
test
add
daa
pushf
mov
add
or
scas
andl
orb
cli
or
movsb
rclb
push
rorb
daa
ljmp
xlat
out
sti
mov
pop
dec
mov
and
cmp
mov
stos
enter
fcompl
mov
sti
xchg
repnz
dec
cmp
push
shl
sub
iret
pushf
out
xor
insb
idivb
dec
fcoml
add
sub
call
add
pushf
fcmovnb
push
mov
pop
jg
jno
jmp
lcall
ja
aas
icebp
inc
icebp
in
push
mov
add
xchg
cmp
xchg
fwait
xchg
dec
out
sarb
jmp
test
addb
adc
cmc
inc
in
test
jge
adc
adc
push
jl
jl
push
repz
imul
and
lods
ss
adcl
lock
xchg
adc
xor
jg
lds
inc
rcl
cmp
mov
xchg
add
ljmp
xchg
jecxz
mov
pushf
pusha
fistps
mov
out
jns
push
clc
jae
out
push
loope
sub
nop
sbb
push
sti
xor
shlb
int
mov
cwtl
jo
mov
mov
ljmp
inc
loopne
xor
adc
icebp
fcoml
pop
movsl
fcmovnb
add
or
sub
lret
into
jg
jnp
add
xchg
mov
icebp
test
out
dec
mov
mov
and
fbstp
sub
jge
push
and
xor
push
add
popf
lret
or
cmp
repz
push
adc
jmp
aad
jg
add
xchg
mov
mov
rcll
scas
notl
xchg
fadd
pop
loopne
inc
gs
je
popf
jecxz
jo
out
test
xchg
or
into
cmp
negb
jno
pop
jle
mov
aad
das
das
inc
mov
rol
cmp
movsl
shrb
pop
xchg
into
and
test
push
stos
sub
out
push
out
xchg
adc
in
test
cmp
je
decb
mov
out
jmp
push
sbb
mov
test
cli
aaa
lcall
cmp
fwait
and
clc
popa
es
ss
mov
mov
push
or
xor
add
or
repnz
pop
bound
jne,pt
push
jae
aaa
adc
les
add
in
mov
rcrb
mov
mov
leave
inc
insl
lods
out
or
movsb
sub
pop
sbb
or
iretw
inc
mov
cmp
push
and
pop
jmp
dec
orl
jae
push
sub
aam
mov
into
sub
mov
mov
jbe
sbb
outsb
inc
outsl
mov
push
sub
outsb
jl
loop
xchg
daa
or
mov
push
insb
fwait
outsb
insl
or
xchg
pop
notl
add
fdivs
scas
lcall
xor
in
psubb
or
mov
jge
into
mov
stos
push
pop
outsb
push
test
lret
cld
xor
clc
mov
mov
adc
insb
cmp
leave
cwtl
pop
pop
cld
adc
mov
rorb
in
leave
mov
popa
xchg
lock
pop
bound
mov
jmp
jecxz
leave
cmpsl
sti
scas
sub
xchg
daa
mov
insl
push
inc
cli
shll
cs
shr
push
div
iret
arpl
es
pop
sub
xor
cs
sub
jae
jbe
mov
stos
xchg
data16
sti
xchg
mov
out
sarb
out
or
jp
xchg
adc
aad
dec
fnstcw
aas
cli
xchg
mov
test
mov
push
xchg
out
pop
cmpsl
leave
sarb
lods
js
adc
xchg
and
rorb
mov
cmp
fdivrl
addr16
out
jg
sub
push
jb
push
je
mov
mov
adc
fmul
mov
repnz
clc
das
or
mov
mov
push
shr
mov
ljmp
scas
dec
frstor
ss
out
or
inc
stos
cmc
jg
das
movsl
js
lahf
cmp
sub
rcr
aaa
enter
cmpsl
push
and
ja
out
movsb
xchg
pop
imul
ret
out
iret
add
xchg
pop
jp
fistps
clc
mov
jl
lahf
lods
ret
jae
pop
fbld
jno
pop
lcall
cmp
das
testb
jge
aad
stos
mov
imul
xchg
dec
xchg
sarl
lods
pinsrw
pop
in
bnd
pop
xor
mov
movsb
aam
push
pop
mov
dec
mov
movsl
and
dec
test
cltd
stos
xchg
out
or
jns
push
in
les
pushf
mov
hlt
out
js
or
in
outsl
mov
add
insl
or
inc
push
sub
pushf
or
out
and
lret
ds
xchg
aam
test
adc
push
lcall
lock
sbb
jg
xchg
jecxz
xchg
movsb
inc
cmc
daa
or
add
mov
xor
mov
fistps
cmp
test
dec
and
sub
es
dec
push
pop
inc
xchg
push
enter
call
icebp
cmpl
pop
fs
push
lahf
sbb
repz
inc
cli
rcl
ss
cmp
or
or
shlb
repz
je
xor
cwtl
scas
mov
cmp
mov
and
add
mov
popf
add
icebp
icebp
lret
je
push
add
clc
cmpb
fs
push
aad
aas
mov
es
jmp
pusha
js
xchg
test
movsl
cltd
push
test
mov
push
addb
xchg
jl
push
cld
mov
fsubrs
and
cld
mov
ljmp
and
mov
out
push
mov
xor
adc
call
shrb
sbb
hlt
push
adc
mov
mov
faddp
enter
pop
into
jbe
sub
mov
jmp
inc
or
andb
pop
dec
fwait
mov
push
push
stos
mov
mov
rorb
mov
ds
mov
sub
sub
or
xor
push
aaa
loope
mov
push
cmp
and
add
fdivrl
imul
cmpsl
repz
cmc
jecxz
fs
mov
pushf
cmp
daa
aad
lret
in
mov
xchg
xchg
mov
add
stos
sub
mov
ret
lcall
dec
xchg
inc
loope
inc
jp
inc
notl
add
in
out
loop
sbb
adc
and
insl
mov
mov
push
fiadds
loop
inc
dec
mov
jbe
dec
mov
outsb
nop
call
andb
js
push
stos
popa
xchg
inc
enter
jg
sub
fidivrs
push
lcall
add
ret
xchg
scas
fisubl
std
shrb
adc
push
mov
or
adc
cmc
add
sbb
cmpsb
mov
push
xchg
pop
cmp
stc
push
rorb
iret
inc
mov
in
push
cs
ficomps
and
scas
push
and
add
mov
sahf
mov
adc
sbb
mov
xlat
negl
sub
inc
pop
xor
rcrl
and
xchg
in
mov
insb
in
inc
push
imul
push
inc
pop
mov
mov
aam
das
fistps
outsl
sarb
sbb
sbb
in
push
sbb
sahf
mov
xchg
rclb
bnd
mov
adcb
call
fisubrl
testb
loope
testb
ds
fidivrs
mov
mov
mov
pop
repz
test
add
xlat
sub
ret
xor
jecxz
jge
cmp
movsl
adc
add
xor
int3
sti
fsts
cmpsl
sub
outsb
cmc
xchg
mov
stos
ss
test
cli
bound
or
cmpb
cmp
jnp
ja
xchg
xor
adc
inc
or
aam
nop
dec
and
xor
cmp
cmp
pop
mov
ss
cltd
std
test
inc
xor
icebp
mov
adc
aad
inc
std
sub
es
nop
or
or
jmp
cmp
push
push
out
or
je
mov
scas
mov
aam
jb
popf
mov
xor
out
cmpsb
ret
movsl
lcall
jns
xor
mov
sub
inc
mov
popa
gs
enter
mov
lods
mov
aaa
xor
or
imul
icebp
xchg
cli
loopne
sbb
lahf
sub
jge
imul
xor
ljmp
mov
fstpl
ljmp
sbb
test
clc
outsl
mov
mov
push
test
sbb
loopne
lahf
mov
xor
leave
test
fldl
aad
lahf
adc
inc
fadds
rolb
inc
or
sub
pop
sub
mov
aad
pusha
repz
cmp
popf
dec
adcl
cmp
test
mov
sbb
mov
add
insl
mov
cs
and
negb
push
aad
jne
nop
xchg
cmp
stos
dec
sar
xchg
mov
stc
test
mov
pop
sub
xor
shll
or
or
leave
mov
mov
dec
xor
sbb
fwait
shlb
jnp
fdivrl
xor
mov
push
addl
sub
mov
stos
lret
mov
mov
inc
lahf
lods
push
pop
cs
push
jge
out
mov
pop
test
sarb
popf
and
fsubp
inc
add
ret
and
sub
lret
loopne
cmpsb
das
cmp
lds
push
dec
or
pop
and
dec
iret
lahf
xchg
and
xor
add
and
push
pop
pop
ds
xlat
cmp
add
sub
std
cmp
mov
jae
adc
std
mov
cmc
pop
cmpsb
cmp
cmp
inc
aaa
sbb
pop
ss
scas
dec
jge
mov
andb
inc
or
ss
pop
ror
inc
in
aas
mov
fprem1
pop
sub
sub
cmp
out
in
adc
dec
inc
ss
rcll
mov
aam
ret
mov
test
mov
xor
adc
hlt
push
roll
mov
jg
aaa
or
fmuls
dec
mov
repnz
loopne
in
mov
adc
in
movsb
jecxz
out
inc
fistps
hlt
jae
ret
xor
mov
push
or
and
hlt
loop
xchg
sub
arpl
xchg
pushf
in
cltd
test
push
cwtl
cmpsb
mov
leave
lret
out
filds
mov
sub
ds
inc
push
cmp
mov
out
call
imul
sbb
adc
or
mov
loopne
push
push
gs
cmp
mov
outsb
ficoml
adcl
mov
insb
lea
jp
add
push
or
inc
cmc
adc
nop
lret
add
mov
pop
push
push
cltd
stos
xor
xor
in
fxch
sbb
and
aad
pop
mov
push
roll
or
mov
mul
idivl
outsl
pusha
addr16
sub
or
mov
cmc
ret
stc
and
xlat
fstpt
mov
mov
es
pop
mov
lret
push
xchg
mov
mov
mov
fbld
jl
or
mov
xor
rcll
sub
aad
lahf
pop
out
pop
pop
aad
fmul
cmpsl
and
lock
push
scas
les
dec
js
out
dec
ja
mov
stos
xchg
mov
cwtl
lock
rclb
pop
jnp
arpl
fld
jnp
bound
enter
popa
cs
inc
imul
push
imul
lods
int3
cs
xchg
enter
push
push
in
scas
dec
ret
push
inc
lods
daa
adc
mov
jnp
lcallw
push
loopne
cmpsb
sbb
push
rclb
and
mov
push
add
aad
loop
dec
popa
out
les
test
dec
xchg
mov
ss
lea
or
sub
adc
xor
jo
icebp
push
mov
xchg
mov
adc
addr16
icebp
scas
push
es
repz
in
insb
fistpl
or
aaa
or
insl
xor
xor
addl
mov
sub
sti
pop
imul
pop
rcr
and
sub
data16
cmp
mov
aad
and
jle
fcoms
and
cmp
outsl
in
mov
inc
xor
cmp
rcl
daa
mov
cmp
push
inc
inc
cmpsl
xlat
and
xchg
loop
and
mov
sar
xchg
arpl
inc
xchg
push
push
xor
jb
push
fsubrl
out
lcall
lea
xchg
inc
lcall
add
pop
sbb
xor
stc
rcll
add
test
pop
dec
out
xchg
hlt
pop
mov
ret
iret
sub
sbb
mov
sbb
cmp
xchg
icebp
add
lret
inc
jge
in
cmp
into
out
ljmp
rol
mov
cmp
movswl
shlb
fldenv
mov
fyl2x
xchg
ret
mov
mov
dec
xchg
xor
lea
mov
pop
push
add
in
push
in
mov
in
pop
push
dec
sub
clc
outsb
fcomi
pop
dec
mov
scas
dec
xchg
fcmovu
push
cmp
cmp
jge
push
fldcw
fldt
mov
push
adc
adc
mov
and
add
inc
aam
add
pop
aaa
jmp
mov
adc
xlat
aaa
or
mov
dec
in
xchg
pusha
push
scas
cmp
ds
stos
les
stos
call
pop
and
jecxz
pop
jle
or
ss
add
inc
jo
enter
lret
adc
ds
ret
mov
adc
xchg
dec
xchg
xor
ret
lods
mov
sub
sub
jp
adc
sbb
push
shl
mov
inc
xor
repnz
sbbl
aad
ret
cmp
enter
jnp
cmc
int3
jne
inc
xor
das
mov
adc
push
cmp
into
stc
jl
daa
cmpsb
sbb
bound
and
xor
enter
outsl
int3
inc
cmpsb
xorb
dec
inc
push
enter
mov
pop
fsubr
lahf
cld
inc
fcmovu
leave
cmpb
pusha
xor
fnstenv
cmp
jg
or
mull
inc
rcl
in
maskmovq
notl
or
xchg
xchg
adc
dec
stos
cs
cmpsb
inc
cmp
pop
sahf
nop
test
insl
call
fstpt
out
js
jle
dec
rcl
sbbl
daa
ret
pop
add
sbb
inc
clc
pop
es
fadds
push
inc
inc
popa
in
addr16
pop
roll
inc
xor
mov
sub
sbb
aad
lods
or
inc
fcmove
fcmovnbe
test
xor
and
pop
add
mov
push
dec
xchg
or
les
mov
push
int3
inc
mov
lock
sub
or
jnp
gs
inc
fidivrs
lock
adc
repz
jo
jge
jae
xchg
pcmpeqw
fdivs
xor
push
adc
push
lret
dec
and
out
loop
pop
add
lcall
jp
scas
sub
mov
push
xchg
push
lods
fistl
sub
push
andb
popf
and
and
mov
in
push
inc
push
loope
xor
jle
stos
outsb
mov
mov
sbb
out
cmp
jns
jno
xlat
test
stos
ds
cmp
call
test
stos
nop
es
in
fildll
jle
xchg
jae
adc
popa
icebp
test
aaa
nop
ret
adc
push
aam
cmpsb
sub
leave
pop
cmpsl
mov
pop
inc
jo
rol
xor
or
mov
pushf
and
nop
mov
jae
outsl
xlat
ret
out
dec
push
adc
pusha
inc
dec
lcall
add
mov
jmp
mov
mov
cmpsl
mov
xchg
les
pop
jle
cmp
dec
cwtl
lahf
xchg
sti
dec
fstl
int
jmp
in
loop
cltd
enter
push
scas
jp
push
mov
fiaddl
adc
into
and
push
mov
pushf
stos
imul
mov
loop
adc
sub
adc
xchg
mov
xlat
bnd
mov
mov
lock
inc
add
cmpsb
jle
push
pop
rcrb
aad
pop
push
notl
out
mov
imul
das
aam
cmp
inc
jno
out
add
bound
dec
shrl
rclb
jnp
sub
adc
xchg
test
or
mov
movsl
cmpsb
lods
imul
pusha
xor
jns
inc
jp
cmp
addr16
mov
mov
les
xchg
mov
mov
lret
xor
out
jg
xchg
pop
pop
inc
mov
dec
dec
std
js
inc
adc
inc
int
movsl
push
outsb
mov
int
push
stos
sub
and
aaa
out
dec
outsb
adc
std
xchg
ret
mov
loopne
lea
pop
push
and
adc
hlt
push
xchg
mov
aam
mov
xor
xchg
repz
push
outsl
inc
outsl
adc
cmp
mov
xchg
pop
pop
xchg
jb
pop
test
or
mov
push
xchg
pop
mov
sbb
subb
jbe
mov
mov
out
test
push
jns
and
mov
popa
xor
lods
mov
push
fst
popl
add
xor
xchg
shl
sbb
jg
aas
incb
int3
in
or
or
test
inc
mov
repnz
xchg
mov
lods
fldt
cmp
out
xchg
xchg
xor
loope
sub
outsl
jge
je
add
mov
cmpsl
in
fidivrl
inc
add
mov
das
cmpsb
sub
outsl
int3
popa
push
and
aam
add
mov
xor
outsb
inc
mov
lea
iret
add
cld
mov
xchg
pusha
loope
xlat
or
inc
movb
je
aaa
rorb
lods
popl
shl
sub
push
lcall
jno
xor
xor
cmp
repz
push
pop
lock
adc
std
push
and
arpl
cmp
stos
mov
iret
fbld
icebp
sbb
jp
jp
lcall
mov
jl
push
or
lret
jo
xor
dec
out
stos
mov
js
cmc
pushf
loopne
mov
and
fisubl
push
mov
sub
sbb
push
and
stos
pop
pop
pop
xor
lock
mov
addb
sbb
or
mov
mov
ret
xchg
mov
fwait
jl
mov
push
jecxz
push
nop
ficompl
lahf
xchg
cmp
mov
xchg
loope
movsl
push
jg
imull
mov
xor
cmpsb
cmpl
fsubrs
lcall
mov
ljmp
or
xchg
pop
mov
fdivrp
add
and
cmp
mov
adc
out
into
xchg
ret
adc
loopne
jle
sub
push
dec
test
loope
pop
mov
fsubrs
ljmp
es
pushf
sti
xor
or
loopne
jecxz
push
cld
dec
sbbl
jecxz
jg
dec
push
adc
xorl
aas
dec
into
dec
stos
mov
xor
fcmovnb
fs
pop
loopne
sub
hlt
movsb
jg
adc
xchg
add
mov
pop
xchg
shrb
pusha
aam
fsub
inc
cltd
imul
inc
mov
sbb
int
push
mov
mov
stos
mov
mov
ja
pop
push
adc
lock
lcall
jl
pop
jl
or
into
into
inc
jmp
test
mov
xchg
cmp
jg
and
pop
inc
in
mov
or
push
insb
xor
das
fs
and
enter
pop
stc
loope
pop
xchg
or
movb
mov
repnz
xchg
lret
and
ret
into
add
js
pop
daa
fists
fwait
shll
aad
ficoms
adc
mov
iret
adc
pop
aad
push
fsubs
clc
or
xlat
movsl
adc
xor
xor
jge
sub
divb
push
and
or
xchg
pop
mov
xlat
test
in
push
pusha
jne
stos
bound
push
pusha
add
rolb
js
ss
mov
mov
ret
push
xor
std
imul
out
int
xor
push
roll
notl
adc
test
cld
jge
mov
inc
test
jns
lcall
loopne
mov
sarl
mov
or
rcr
ret
cmp
xchg
push
std
lea
loope
xor
push
test
je
add
sub
pushf
jo
out
push
lods
xor
mov
dec
mov
jecxz
sbb
xor
out
sbb
cmpsl
fsubs
movsl
stc
xor
outsl
cmp
add
gs
pop
rclb
or
pusha
out
add
cmp
xor
mov
scas
pop
shl
or
lahf
leave
cmpsl
xchg
sub
jecxz
iret
lea
lret
hlt
hlt
push
mov
mov
add
test
mov
push
mov
in
pop
jb
in
stos
es
icebp
xchg
mov
pusha
add
xor
adc
rclb
lods
pop
mov
and
lds
cmpsb
mov
sub
add
outsb
mov
push
in
stos
in
xlat
sub
or
and
sub
dec
jb
cmpsl
fstl
cmp
inc
out
and
push
or
test
sahf
jno
inc
add
adc
xchg
mov
xchg
outsl
leave
and
bound
or
mov
adc
js
dec
rcll
xor
inc
in
or
push
aas
int
inc
xorl
sub
lods
clc
sub
push
mov
adc
in
stos
shlb
dec
add
mov
xor
aam
enter
repnz
push
mov
mov
out
cmp
xchg
push
jns
in
pop
pop
stc
lods
pop
ljmp
or
fs
mov
pop
in
subl
add
daa
inc
inc
push
leave
and
add
inc
pop
inc
dec
in
mov
fmull
sar
fsubr
ja
scas
push
push
pop
loope
mov
andb
mov
out
jmp
jae
fmuls
test
ret
in
test
hlt
jmp
xor
inc
stos
inc
jp
mov
xchg
xchg
lock
test
jecxz
mov
mov
enter
cli
mov
imul
sbb
mov
outsb
ret
sub
mov
push
es
clc
mov
cwtl
movsb
pop
jno
rcll
in
inc
je
mov
lret
xor
stos
dec
cmp
lods
call
lcall
mov
and
inc
ja
rorb
or
mov
fucomip
fsts
jo
lods
ljmp
add
lea
inc
out
cld
mov
ja
mov
inc
in
push
aad
adc
xchg
das
or
jae
enter
push
and
inc
js
jmp
mov
sbb
push
stos
sub
sahf
mov
test
pop
mov
and
sbb
ljmp
jecxz
lret
xor
mov
mov
fimuls
xchg
pusha
sbb
xlat
inc
jbe
sub
jge
stc
dec
jae
addr16
lods
lods
add
aam
sbb
sbb
enter
pop
into
push
or
enter
mov
lds
ror
mov
shl
fsubr
cmc
xorb
outsl
inc
aas
xchg
sub
cmp
inc
loope
mov
dec
roll
jnp
jp
sub
push
jl
imul
mov
push
daa
mov
jecxz
xor
cmpsb
mov
in
xlat
stc
iret
pop
mov
jo
jl
popa
cld
ds
pop
clc
mov
movsb
xor
inc
dec
fadds
mov
add
and
data16
jno
jge
iret
fildl
mov
popa
lcall
daa
mov
out
gs
outsl
fadd
dec
and
mov
adc
enter
mov
inc
cmp
mov
dec
shll
pop
scas
imul
icebp
sbb
rol
jnp
dec
fnstsw
mov
and
or
mov
arpl
jle
dec
in
push
fstpl
cmc
jo
icebp
mov
lods
cltd
mov
add
movsl
cs
pop
mov
into
push
lods
push
sub
test
enter
xor
fistps
in
pop
mov
and
dec
ret
clc
divb
or
push
out
xchg
pop
testb
repnz
sbb
cmpsb
in
jno
lcall
int3
test
push
xor
sti
repz
bnd
rcrl
xor
enter
jae
sahf
add
ret
mov
dec
shll
add
mov
out
cs
ja
ficoml
push
sbb
adc
test
imul
rcl
in
and
and
mov
xlat
aad
insb
pop
fwait
inc
notb
fmull
ds
xchg
es
xchg
inc
add
jae
mov
pushf
pop
in
sub
cltd
loope
inc
call
jbe
sub
and
jns
pusha
bound
sahf
jmp
jle
clc
mov
popa
pop
mov
xlat
pop
xlat
mov
sub
cmpsb
jle
je
repnz
leave
pop
int
pop
lahf
mov
fmull
fwait
pusha
pop
xor
lcall
sub
dec
xchg
fimull
das
aaa
sub
and
inc
push
and
fcmovne
sbb
cmp
ljmp
mov
cmp
adc
jo
fstpt
insl
in
in
jl
push
enter
mov
std
aad
jb
jns
push
shll
enter
loope
rol
mov
pop
imul
add
loop
out
dec
sbb
stos
into
push
mov
inc
inc
clc
insl
les
or
pop
test
in
jns
push
pop
aas
and
cltd
push
mov
shr
std
int3
mov
push
pop
stos
mov
test
lock
fimuls
lods
in
jne
das
add
inc
pop
and
adc
das
sub
and
pmullw
dec
jno
je
je
xchg
and
and
jne
fsubs
xor
ja
lods
orl
and
jmp
int
cmp
out
lret
pop
cmp
xchg
lret
or
leave
std
xchg
scas
xchg
sbb
sbb
repz
pop
mov
mov
outsb
out
sub
negb
daa
std
cmp
outsl
push
cmp
mov
shlb
jp
ret
stc
lret
adc
iret
inc
push
mov
ret
stos
jb
pop
pop
iret
pop
out
dec
xchg
mov
and
mov
fs
jecxz
mov
test
add
iret
pop
das
popf
and
fimull
js
xlat
or
mov
dec
test
movsb
cmp
inc
mov
mov
mulb
ret
adc
mov
jo
xor
cli
lea
mov
cmovl
loope
fptan
pop
add
or
test
sub
dec
rolb
mov
or
lds
lock
out
icebp
inc
popa
jp
and
lea
jne
jg
pop
pop
hlt
test
push
add
cltd
std
xchg
decl
faddl
xchg
xor
inc
mov
pop
test
xlat
xchg
dec
negb
leave
inc
xor
movsb
cltd
testl
arpl
xchg
add
pop
jl
pushf
mov
cmpsl
in
xor
cli
and
pop
je
mov
push
je
std
push
cmp
fdivrl
ret
je
outsb
leave
mov
or
or
addr16
dec
adcl
mov
pop
sbb
test
notb
mov
repnz
jecxz
pop
bound
mov
arpl
fistl
inc
cltd
pop
mov
outsb
jmp
or
adc
sub
push
push
mov
je
dec
shlb
mov
dec
or
mov
popa
rorb
test
xchg
mov
fidivs
jge
mov
xor
inc
jle
mov
loopne
clc
test
test
outsb
inc
dec
mov
loop
nop
test
pop
shrl
pop
adc
mov
push
push
js
jae
sub
mov
push
pop
sub
ja
ret
xchg
add
in
fidivrs
adc
aas
mov
data16
bound
mov
fildl
mov
fsubrs
sti
fimuls
cmp
sub
xchg
xor
pushf
mov
scas
jns
andb
jecxz
insl
int
and
mov
push
pop
xor
mov
out
loopne
enter
add
jmp
test
xchg
js
add
ja
cmp
sub
icebp
stc
and
jns
insb
out
pop
add
sub
pop
add
fwait
movnti
add
mov
dec
cli
cmp
insl
add
in
cli
inc
mov
mov
cltd
loop
fld
pop
aad
dec
sbb
sub
lds
aam
das
jnp
lret
xor
hlt
popa
mov
bound
mov
sbb
xchg
jno
cmc
mov
or
adc
movsb
cld
hlt
fsubrl
or
fwait
repnz
je
dec
pop
mov
inc
or
sub
into
inc
mov
cli
or
cmc
call
jne
xor
aad
and
inc
or
pop
jmp
pop
fdiv
adcb
dec
or
jno
lret
insb
andl
mov
cmp
lea
insl
pop
xchg
fucomip
xchg
add
cmpsl
das
adc
repnz
test
pop
dec
inc
cmp
cmp
jecxz
adc
ret
movsb
cli
pop
jne
es
je
fsubrs
push
sbb
out
push
cs
cmp
lods
mov
out
insl
sbb
mov
mov
or
jmp
pop
add
jo
xlat
mov
lret
movsb
inc
and
jmp
fldenv
sbb
test
test
push
shll
add
and
mov
adc
mov
dec
fs
lods
pushf
dec
xchg
jg
dec
repnz
inc
ja
jmp
mov
xchg
lds
xchg
bound
or
sub
jb
mov
inc
jl
push
mov
pop
xchg
adc
bound
or
and
and
lret
in
inc
jns
lcall
leave
shll
into
push
sahf
repnz
and
cmpsl
xchg
int3
adc
xchg
pop
in
in
movsb
jns
push
mov
ret
xor
mov
int
imul
push
inc
sub
jae
pusha
adc
xchg
lods
xor
push
xchg
cmpsb
daa
imulb
ss
sahf
push
lahf
loop
jnp
fisttps
inc
insl
cmp
cld
xchg
lea
movsl
cwtl
push
cmp
shr
sbb
pop
insb
lock
imul
cmc
cmp
inc
inc
ret
mov
leave
and
data16
mov
adc
clc
cs
cmp
mov
std
fistpl
adc
mov
sbb
mov
push
push
test
adcb
adc
std
and
sbb
repz
push
push
rcl
and
idiv
repnz
loop
xchg
xor
lods
pop
mov
scas
fnstsw
push
xlat
testl
dec
test
movsb
hlt
and
ljmp
xchg
and
sub
push
dec
lret
and
ljmp
arpl
xchg
shll
cmp
jle
push
xchg
fldt
scas
pop
xor
jno
loopne
mov
bound
sbb
enter
outsb
mov
outsl
pop
adc
in
xor
fpatan
insl
fistpll
repnz
or
into
or
xchg
pop
imul
xchg
arpl
sbb
aam
sarb
jge
inc
data16
bound
sbb
cs
lock
pusha
pop
outsb
cmp
and
es
jle
repnz
pop
and
inc
call
stos
mov
rclb
jecxz
subl
xor
xchg
adc
add
imul
inc
jle
xchg
or
pop
cld
and
je
jg
or
and
xor
lret
cmp
sub
imul
mov
es
int3
scas
dec
rep
popf
daa
das
adc
call
ficoml
arpl
pop
imul
dec
rolb
mov
mov
lahf
mov
out
dec
inc
jg
jo
ds
das
ficompl
xchg
test
mov
cltd
adcl
inc
xor
xchg
cs
fcmovnu
daa
cmpsb
sbb
inc
out
inc
and
lea
or
pop
sahf
insl
js
or
idivl
popf
xor
test
jnp
stos
adc
pop
aas
jecxz
setb
inc
adc
mov
cmpsb
xchg
sub
idivl
inc
adc
imul
add
lods
pop
mov
fsts
push
imul
ret
sti
mov
jmp
lret
in
insb
push
sti
xor
or
pushf
mov
mov
dec
cld
push
outsb
add
loopne
jle
test
xor
mov
ds
add
aas
xchg
lret
test
jp
fimuls
xchg
jae
jns
mov
lahf
cmp
cmpsb
jns
call
jno
cmpsl
in
sub
imul
dec
mov
pop
daa
dec
add
inc
inc
lret
inc
aas
jg
sbb
in
and
or
rcrl
fldl
fcompl
loope
shll
iret
out
fiadds
lods
push
dec
idivb
mov
and
sub
cmc
dec
push
sub
sub
pop
js
outsb
outsl
out
aam
sub
fs
daa
cwtl
xor
jmp
mov
mov
add
in
je
xchg
mov
sub
add
sbb
aam
sub
leave
fstl
aad
push
lcall
push
ret
and
sub
push
or
jae
jle
inc
nop
subps
and
hlt
dec
mov
mov
cmp
pop
mov
xlat
test
testb
jp
xchg
test
and
inc
mov
sbb
cmp
stos
imul
negb
jecxz
push
sbb
sbb
ljmp
pop
loope
std
jge
pop
add
push
mov
mov
insl
adc
out
orb
cmpl
test
and
orb
loop
xchg
std
mov
dec
xor
cmpb
test
adc
in
sbb
inc
mov
jb
mov
mov
xchg
in
testl
icebp
fldl
rcrl
xor
inc
fs
xlat
sahf
mov
stos
enter
ja
popa
lea
leave
add
sar
ret
mov
sub
data16
lods
sarl
aad
cmc
je
sbb
repz
andl
test
cmpb
popa
nop
cmp
iret
popa
gs
adc
cmp
xchg
mov
gs
adc
push
inc
sbb
ss
add
adc
lret
out
cwtl
push
pushf
jbe
push
or
xor
mov
sub
stos
sbb
sub
xchg
add
pop
sbb
add
loope
das
adcl
sub
rcll
sub
sbb
sub
imul
push
mov
push
mov
mov
iret
in
pop
adc
add
aas
movsb
dec
mov
push
stos
push
mov
out
pop
mov
loopne
jle
cwtl
insb
dec
and
fcoml
enter
jae
adc
lret
mov
adc
jl
es
inc
dec
fcompl
loope
nop
insl
mov
push
int3
and
pop
in
jb
add
out
int3
fisubrs
jbe
int3
xchg
pop
into
popa
and
loop
ret
sbb
aad
jno
idivl
les
lods
dec
pop
stos
adc
nop
sbb
jmp
fld
or
lret
mov
insl
pop
dec
push
add
fs
mov
mov
clc
mov
or
adc
cmpsl
mov
pop
add
sti
out
xchg
mov
xor
mov
out
sbb
push
sub
fwait
cmc
pop
into
adc
in
es
adc
sbb
mov
sub
icebp
stc
testl
outsl
aad
pop
sbb
insl
xchg
das
inc
out
cld
lret
jmp
pushf
scas
fsts
inc
sub
cmc
inc
dec
repz
jae
icebp
je
arpl
bound
movb
xchg
clc
inc
das
mov
faddp
add
xor
fwait
adc
jmp
and
insb
lea
xchg
mov
sub
aam
lret
inc
rcl
mull
icebp
dec
and
inc
bound
std
stos
insb
test
test
mov
std
pop
ret
mov
xor
jnp
outsl
push
mov
mov
in
cmc
into
xchg
ret
popf
cld
pop
out
dec
idivb
pushf
test
mov
popf
and
mov
testl
jne
jo
mov
popa
and
xchg
mov
jp
mov
xchg
lods
xchg
xor
stos
test
sub
ss
flds
pop
or
aas
out
imul
mov
fisubl
fstpt
inc
test
jne
repnz
adc
jne
cs
xchg
inc
rcrl
fistpl
rsqrtps
ret
add
or
lock
jmp
imul
mov
adc
pop
addr16
mov
xchg
fisttpl
pop
fidivrl
mov
mov
sbb
xchg
xlat
scas
xor
out
fyl2xp1
call
roll
add
icebp
stos
pop
jns
mov
mov
inc
repnz
sub
adc
inc
push
xchg
jmp
push
or
cli
cmpsl
aas
mov
lods
sbbl
aam
mov
mov
push
pop
adc
dec
sbb
cmpsb
mov
lods
test
insb
dec
cwtl
push
sbb
sarb
mov
arpl
fdivl
popa
cmp
out
test
out
icebp
mov
and
xchg
cli
cmp
icebp
inc
ret
jnp
inc
bound
dec
mov
shl
xchg
mov
int3
mov
fidivs
mov
and
into
add
test
lret
clc
les
adc
loope
mov
mov
xchg
jl
and
push
cmp
sub
iret
jmp
pop
xchg
jge
pop
mov
jge
sbb
jns
sbb
orb
std
pop
mov
push
cmp
mov
and
pop
les
pop
daa
cltd
jnp
jbe
cmp
std
sbb
stos
movntq
inc
mov
into
mov
enter
outsl
loope
mov
addb
jecxz
aad
cld
mov
in
filds
icebp
gs
imul
sysexit
cmp
sbb
xchg
mov
and
adcb
vpcmpgtw
or
aaa
pop
nop
subb
aam
mov
xor
push
and
cmp
xchg
push
mov
xor
sub
pop
xchg
cmpsl
in
loope
mov
fisubrl
dec
out
xor
dec
jbe
push
icebp
adc
cmc
inc
push
arpl
jl
js
fiadds
sbb
mov
cltd
fnsave
mov
xor
adc
jb
fwait
cld
sti
je
sbb
jne
ds
fcomps
mov
jecxz
dec
or
mov
inc
mov
pop
sbb
dec
pop
mov
and
or
push
stos
pop
dec
inc
adc
adc
jecxz
xchg
rclb
xchg
fwait
inc
adcl
sahf
movsb
jp
insb
xchg
cltd
out
jecxz
shufps
outsl
icebp
sub
pop
mov
scas
lock
pusha
std
pop
data16
test
pop
and
dec
inc
jg
push
lret
mov
cmp
dec
mov
or
mov
pop
movsb
mov
mov
rclb
and
and
bound
mov
int
pop
sbb
push
ficoms
aam
popa
ja
mov
push
mov
and
out
call
fs
and
stos
dec
jge
mov
imul
jl
in
ret
or
filds
sbb
aas
sub
pop
mov
push
lahf
cli
out
sub
iret
add
push
mov
push
insb
adc
and
std
notb
rcll
iret
je
subl
out
mov
xor
rcrl
xor
stos
jmp
insl
inc
movsb
pop
dec
into
cmp
adc
sub
fbstp
stc
mov
or
lds
sbb
dec
in
hlt
shlb
xor
call
sub
loope
in
in
pop
testl
mov
cmc
sbb
mov
cmpsl
int
or
shlb
fisubrs
ret
mov
cmc
mov
bndstx
sti
sbb
cmpw
pop
xchg
or
outsl
pop
dec
imul
repnz
in
sbb
and
mov
push
add
mov
mov
xchg
push
stos
xor
jnp
xor
rol
enter
xchg
sub
lock
in
mov
ret
movsb
sbb
and
sbb
imul
adc
insb
stos
and
cmpsb
mov
aam
std
mov
insb
cltd
mov
int3
inc
add
jl
enter
or
cmp
lahf
idivl
jnp
idiv
test
cwtl
cmpsl
mov
lahf
dec
aad
mov
std
mov
sub
xor
arpl
call
dec
mov
mov
das
mov
in
repz
das
pushf
pop
mov
xchg
int
push
xor
lret
imul
mov
mov
pop
jno
jmp
mov
mov
nop
push
out
or
pop
popa
jp
shll
repz
mov
xchg
jp
ljmp
sub
jno
push
push
in
cmc
sahf
in
push
pop
sub
push
push
push
sti
fs
mov
das
dec
std
xor
hlt
popa
cmp
xor
adc
mov
and
push
fiadds
pop
and
ljmp
dec
sub
pop
mov
mov
pop
xchg
push
and
push
adc
movsb
ss
mov
dec
andb
fwait
jb
mov
add
adc
jnp
cltd
daa
es
sub
xor
aaa
sbb
mov
js
push
add
aas
xorl
adc
xor
bound
lods
inc
sub
mov
int
and
mov
arpl
daa
lcall
leave
sub
fwait
xor
je
sbb
and
sahf
out
lea
sbb
mov
test
nop
incl
xor
out
mov
pusha
repz
push
jbe
or
xchg
jmp
sbb
mov
lods
adc
cwtl
repz
mov
sbb
int
ja
pop
aam
or
out
mov
popa
pop
out
xchg
ljmp
mov
rcrb
adc
cld
aad
iret
test
mov
mov
push
jnp
jnp
fnstenv
movsl
mov
and
cltd
add
pop
add
and
lahf
fidivrs
cmp
aam
xor
nop
jbe
hlt
sahf
aad
pop
idivl
and
sbb
shrl
sbb
mov
cltd
sarl
pop
jb
mov
adc
out
scas
add
aam
xor
negb
setb
out
push
nop
add
adc
cltd
lret
arpl
cs
xlat
test
jp
jmp
mov
cwtl
dec
imull
or
ret
mov
pop
sete
test
cmp
adc
xbegin
inc
stos
aas
or
mov
sub
adc
sbb
aas
pop
add
inc
jnp
fucom
pop
cmp
or
jno
rclb
and
jmp
mov
cmpsb
sub
sbb
shl
cmpsl
push
sbb
or
dec
and
sar
add
ljmp
sbb
ret
cmp
mov
pushf
sub
jo
hlt
push
mov
sbb
xor
xor
andb
jl
xor
jp
jecxz
into
cli
push
or
sbb
or
fs
add
out
push
jno
cmpsl
sub
push
ljmp
aas
inc
scas
mov
cmp
lea
dec
jmp
and
push
data16
cmp
je
mov
sbb
pop
push
add
cwtl
mov
cld
sub
and
sbb
das
mov
ds
jecxz
or
push
and
ja
js
inc
xchg
adc
and
jge
inc
scas
sarl
mov
sti
enter
push
negb
adc
mov
or
insl
daa
cmp
xchg
imulb
sarb
pop
adc
insb
js
push
out
xchg
lock
cli
sbb
cli
jo
cmp
bound
js
fwait
push
push
mov
test
orl
push
and
jl
into
cli
cmc
jg
mulb
test
jp
xchg
add
push
mov
sti
testl
mov
mov
add
jbe
mov
push
hlt
sbb
aad
cmp
sbb
cld
mov
adc
in
lods
fdivr
push
out
sarb
addr16
fwait
aaa
pop
cmp
enter
pop
out
aam
mov
repnz
sbbl
add
int
mov
pushf
rcr
cli
adc
popf
inc
mov
test
nop
iret
mov
inc
out
pop
hlt
sarb
xor
xchg
icebp
aam
inc
bound
xor
aad
lret
jns
jle
push
les
in
enter
jp
loop
outsb
dec
dec
mov
xor
leave
xor
mov
test
jmp
cmpl
inc
faddl
and
pop
inc
push
in
xchg
sbb
pop
mov
pause
xchg
jmp
lcall
data16
mov
mov
or
xor
daa
rcrb
mov
cmp
sarl
jmp
fimuls
dec
cwtl
pushf
andl
loope
inc
and
pop
popf
jmp
test
and
sbb
jbe
insl
xchg
lods
mov
sub
push
mov
pushw
xchg
or
mov
repnz
popa
add
xchg
popf
inc
add
cltd
xchg
pop
cmc
inc
jge
xchg
pop
inc
xor
mov
sbb
sbb
jo
rclb
push
fyl2x
ja
and
adc
insb
xchg
js
xchg
dec
push
mov
out
out
sbb
sbb
in
mov
or
push
sbb
stos
jae
outsl
ret
xor
jge
loope
adc
gs
sbb
mov
pop
addr16
sub
sub
sub
pop
test
inc
sti
clc
ljmp
iret
mov
jne
pop
mov
inc
mov
dec
jmp
mov
in
int3
shr
xchg
lret
push
mov
sarb
test
sub
enter
repnz
je
movsb
sub
das
ja
add
xchg
enter
mov
inc
inc
push
lret
insl
add
lret
and
mov
push
xor
pop
mov
xchg
lds
and
jae
add
pop
ds
inc
cwtl
xor
jb
mov
lods
lahf
mov
out
les
add
add
push
inc
jge
gs
sub
frstpm(287
pop
repz
call
inc
adc
aam
roll
ret
sub
mov
cmp
adc
movsb
std
enter
stos
clc
jp
pop
sbb
xchg
xchg
inc
ss
lret
data16
jle
or
or
fiaddl
loope
sub
xchg
aam
pop
xor
das
pop
outsl
mov
mov
lahf
out
xchg
inc
pop
in
rcr
imul
inc
into
cmc
hlt
mov
xchg
push
push
mov
jge
push
test
pop
push
sub
fnsave
jno
xchg
mov
outsl
rorl
jp
popl
and
lea
aam
ds
pop
jo
mov
movl
mov
sbb
sub
push
shlb
out
lret
dec
in
enter
jecxz
xchg
xlat
dec
sbb
sbb
jmp
cs
inc
pop
shll
cmc
sub
cmp
dec
inc
adc
and
adc
jp
pop
sbb
cmpsl
aam
mov
push
cli
repnz
push
jno
jbe
cmp
sub
xlat
idiv
sub
in
clc
stos
mov
or
cmp
adc
jle
mov
push
in
push
imul
push
out
icebp
mov
fcmove
sbb
jnp
pushf
popf
movsl
repz
popf
popf
xchg
pop
mul
adc
test
imul
int
inc
and
xchg
cwtl
loopne
mov
pop
dec
xor
aad
jmp
loop
icebp
pop
sbb
pop
inc
lret
hlt
loop
mov
xlat
imul
add
das
ret
pop
cmovle
mov
inc
push
scas
repnz
jno
out
into
lea
nop
sub
mov
mov
adc
sahf
xor
rclb
fidivrl
and
cld
ss
loopne
fsubl
lahf
mov
repz
je
call
data16
fdivl
out
pop
or
push
in
sarb
sub
clc
lods
loope
call
or
iret
mov
ds
test
lcall
mov
popa
jmp
inc
stc
push
pop
cmp
sbb
es
push
add
sbb
loopne
jo
shr
lahf
or
jno
adc
push
ret
ficompl
addr16
aas
cli
fstpt
fimull
movsl
add
jns
pop
fld
mov
mov
leave
dec
decl
adc
inc
jae
stos
jb
sbb
lock
addb
push
mov
flds
aaa
jl
repz
jge
outsb
pop
inc
cmp
loop
push
pop
ljmp
rcr
sarb
rcl
cmp
popf
icebp
mov
imul
mov
lret
sub
or
pop
lods
imul
inc
cwtl
fimuls
js
out
pop
add
ds
pusha
rorb
jl
sub
pop
adc
xor
into
sbb
jle
leave
enter
repnz
aad
pop
push
mov
loope
test
pop
insl
stos
sbb
add
jg
shlb
mov
pop
push
dec
inc
dec
movsl
push
inc
fwait
xor
or
push
or
mov
in
or
mov
cmp
sbb
mov
fldenv
sbbb
imul
mov
gs
pop
and
stos
das
xchg
arpl
sbbl
pop
dec
xor
push
add
dec
das
sbb
mov
rcr
subl
out
out
lea
lret
pushf
inc
push
mov
xor
sub
xor
pop
sub
pushf
sbb
mov
lods
scas
dec
mov
xorb
hlt
shlb
fwait
adc
pop
sub
dec
jbe
ss
pop
cmp
dec
jp
call
ss
push
mov
scas
jle
xor
or
leave
daa
std
stos
lret
pushf
sbb
mov
test
js
addr16
inc
mov
subb
cmpl
inc
ljmp
or
test
cld
lds
cli
jg
mov
idivl
push
iret
aad
dec
inc
xchg
popa
xchg
adcl
xchg
out
shlb
shll
divb
sub
add
add
cmp
data16
testb
call
std
sub
cmpb
add
mov
sub
adc
addl
arpl
pushf
pop
sahf
repz
nop
push
ds
add
jnp
jae
out
xchg
push
adc
daa
push
call
insl
lcall
dec
out
sub
imul
jo
ja
pop
cmp
pusha
jle
dec
les
sti
xchg
xchg
lea
xor
dec
and
xchg
bnd
sbb
push
lahf
adc
dec
ja
popf
cmp
cmp
inc
frstor
jge
push
testb
dec
xor
xor
add
dec
adc
cwtl
push
mov
jo
sbb
movsb
sub
push
lds
jmp
dec
add
add
inc
aas
push
xor
mov
dec
sbb
je
int3
call
inc
pusha
dec
insb
dec
and
mov
cli
popf
and
addb
cmc
push
pusha
xchg
iret
fstps
dec
cli
mov
in
movsl
sub
push
lret
js
mov
lret
mov
push
outsl
xor
iret
mov
xor
pop
xor
pop
lret
pop
mov
cmp
test
movsl
lock
mov
shr
pop
cmp
leave
add
or
push
cmp
dec
sarb
addl
inc
mov
out
sbb
push
in
pusha
cmp
cltd
js
leave
jno
out
adc
ss
or
inc
outsb
cwtl
xchg
lods
xchg
mov
lds
movsl
mov
pop
ja
pusha
pop
mov
lret
cwtl
add
mov
shlb
mov
data16
daa
lret
and
add
shrb
int3
mov
std
or
xchg
cs
int
enter
push
hlt
mov
fimull
adc
xchg
ja
lods
iret
daa
mov
enter
mov
sbb
pop
and
lcall
int
mov
sub
sbb
and
adc
add
in
daa
mov
insl
and
pop
pop
push
and
and
insl
lret
push
aas
cs
jns
imul
loope
jnp
clc
mov
mov
xchg
test
movsb
pop
jecxz
xor
jl
lret
call
pop
xor
test
jge
mov
jnp
in
jo
pusha
xchg
rorl
jge,pt
fstl
mov
mov
in
push
aaa
stos
bnd
bound
xchg
adc
shl
aad
cmpsl
push
dec
jle
es
or
ret
inc
mov
lret
rcrl
scas
addb
orl
jle
cld
sbb
enter
jl
xor
in
aaa
xor
dec
sub
stos
std
out
dec
std
vcvtsi2sdl
push
add
sub
or
test
inc
out
xlat
xchg
xchg
daa
jae
loope
stos
rol
adc
mov
adc
mov
inc
or
inc
lahf
mov
inc
testl
push
std
jbe
inc
add
rcrl
push
aaa
jo
jg
inc
cltd
pop
scas
mov
pusha
or
test
push
sub
nop
xlat
cmp
inc
ds
add
sbb
xchg
hlt
icebp
ja
fmul
fwait
xchg
ja
sub
sub
icebp
das
xchg
adc
push
push
push
adc
cmc
ret
frstor
cs
inc
push
mov
fs
ret
test
lds
add
popf
fnstenv
add
pop
add
xor
lret
hlt
jnp
jno
push
rclb
or
xor
cwtl
and
cmp
in
xor
es
andb
lret
sbb
stos
popa
pop
sub
xor
pop
mov
mov
ret
adc
shr
packsswb
push
add
jg
movsl
aam
dec
xorl
and
mov
adc
lret
mov
mov
jnp
cmp
cmp
or
pushf
stos
lret
lahf
cmc
mov
xor
mov
cmp
xor
push
add
inc
and
mov
mov
or
call
movsl
xchg
xchg
xor
pop
push
stc
sahf
outsl
xchg
jg
fnstsw
mov
clc
mov
dec
sub
sti
inc
xchg
sub
mov
add
in
in
lahf
nop
movsl
das
mov
jb
test
fstp
lods
sub
mov
inc
jp
popf
sub
sti
push
mov
shrl
imul
pop
rcr
int
rcrb
fistl
push
in
xchg
fidivrs
mov
xchg
push
mov
je
int
popf
jp
lcall
fcmovnbe
cmp
jecxz
lods
lods
shrl
mov
ja
icebp
icebp
mov
adc
rorl
sub
test
sahf
and
les
pop
add
dec
push
mov
xchg
bound
enter
add
mov
fwait
cld
cli
imul
std
shl
inc
add
and
mov
stos
dec
dec
push
ficomps
inc
dec
fmuls
xorl
loope
shrb
add
mov
sbb
xlat
loop
cltd
xlat
adc
dec
xchg
inc
add
popf
inc
mov
mov
call
jno
or
loopne
das
mov
sub
and
popa
or
mov
test
adc
stos
sbbb
bound
mov
es
pop
jae
into
loopne
mov
push
add
lods
stos
pop
and
pop
xchg
inc
out
mov
sbb
push
jnp
dec
mov
sub
outsb
push
sbb
add
xchg
fistps
push
jbe
xchg
stc
mov
call
jle
adc
mov
and
insl
out
rorb
jbe
divl
dec
mov
jg
daa
cmp
adc
push
inc
pop
icebp
lcall
cmp
xchg
xchg
jo
call
insb
enter
push
and
lds
or
jg
out
scas
out
pop
xchg
push
adc
mov
daa
jb
and
shll
pusha
sub
lahf
ret
andb
lods
jnp
xchg
loop
outsb
mov
mov
add
lds
add
fldl
incb
lret
mov
lretw
inc
adc
lcall
fcomps
mov
pop
push
cwtl
inc
rorl
or
ficompl
inc
sbb
movsl
or
xor
pop
jbe
add
and
movsb
sub
ja
mov
jmp
and
out
sbb
adc
mov
mov
mov
sarl
aas
sub
pusha
jne
mov
jne
fmul
dec
push
xor
xor
adc
add
ss
ljmp
pop
xchg
sub
jle
les
shll
push
mov
pop
pop
aaa
push
mov
sub
dec
bound
mov
jp
xor
rol
and
hlt
lods
pusha
jecxz
ret
fnstcw
sub
outsl
jne
add
cmc
inc
jbe
sbb
notb
xor
lahf
and
clc
jl
cs
jl
dec
and
jecxz
inc
jns
mov
outsl
out
in
icebp
push
add
dec
leave
pop
aas
inc
sub
in
sub
mov
push
push
push
daa
lods
dec
cmc
cmp
sub
sbb
inc
sub
pop
mov
fs
mov
and
arpl
xlat
cs
push
sahf
jmp
rcll
lldt
pop
sbb
mov
mov
lock
shrb
sarb
push
mov
mov
xchg
push
mov
sub
xor
cmovo
lret
lods
jb
pop
scas
es
push
adc
pop
add
jb
lods
pop
shll
repz
nop
and
and
cmp
outsb
add
mov
sbb
pusha
push
inc
push
hlt
cmp
inc
imul
pop
lods
mov
add
xchg
mov
icebp
sub
sbb
stc
outsl
stos
dec
into
push
enter
out
sub
jp
jnp
jne
divb
lret
das
sbb
jnp
push
add
frstor
jecxz
gs
test
sbb
sahf
dec
jb
xor
and
sub
adc
ret
jbe
in
out
stos
add
adc
sbb
push
rcrb
pusha
sub
add
sbb
sbb
sub
pop
cwtl
out
fsubrp
dec
push
lods
dec
lds
inc
cmpsl
dec
lret
lods
ffreep
cmpsb
into
pop
gs
inc
push
negl
test
rcrl
mov
sub
idivb
xchg
rcl
mov
test
or
mov
push
movsl
sub
jns
sbb
nop
and
repz
cld
psubsb
sbb
out
test
cmc
daa
xchg
pop
xchg
aam
out
shll
inc
sbb
outsl
scas
inc
dec
mov
push
cmp
xchg
subl
dec
pop
sbb
push
addb
push
mov
sub
xor
int
data16
push
clc
nop
push
pop
sbb
adc
mov
mov
pop
out
cld
sbb
or
cwtl
nop
jne
inc
dec
dec
jae
cmp
or
push
inc
jp
pop
pop
mov
fistps
fmul
pop
inc
sbbb
cli
cmp
pop
out
xchg
and
mov
in
stos
pop
lods
nop
in
mov
pop
pop
xor
and
aad
sbbl
mov
test
sbbl
stos
gs
jle
and
xchg
movsb
lcall
xchg
mov
push
out
sub
mov
fstps
fldcw
dec
or
cmpsb
adc
mov
or
push
pop
js
iret
in
fstpl
out
ret
jge
popa
adc
xorl
inc
mov
lods
decl
aad
je
jl
push
pop
inc
pusha
dec
cmp
clc
cmp
jl
or
icebp
leave
inc
es
or
mov
inc
std
or
imul
int
movl
pop
and
pop
or
pop
xor
hlt
enter
test
sub
sahf
dec
xor
stc
sbb
js
mov
mov
xchg
les
dec
pop
ljmp
or
inc
inc
cmp
mov
and
jno
lea
jecxz
xchg
dec
aaa
cmpsb
mov
popf
mov
mov
xchg
push
lock
ss
jp,pn
inc
push
aad
xor
cmp
dec
rclb
pop
mov
push
jnp
loopne
adc
sbb
repnz
mov
jno
pop
rorb
xchg
pop
scas
outsb
cmp
inc
or
or
adc
xchg
test
dec
mov
clc
jns
xchg
inc
pop
decb
sbb
enter
clc
fwait
mov
out
inc
test
adc
xchg
xchg
xorb
pushf
loope
aas
ret
pop
push
popf
into
mov
cmp
in
ret
dec
adc
mov
push
mov
add
pop
imul
jle
dec
lock
pop
mov
stc
xchg
inc
icebp
int
test
repnz
inc
ljmp
sbb
mov
jbe
lock
push
adc
pop
arpl
or
push
mov
dec
or
loopne
insl
xor
cmp
push
ljmp
ds
and
sbb
mov
std
or
out
mov
cs
mov
leave
call
lods
shl
cmpsl
lock
add
in
cmp
cmp
jo
imul
int3
mov
out
neg
sbb
test
loopne
lea
pop
adc
jbe
or
pop
loopne
lcall
pusha
ficoml
jns
dec
sub
add
popa
cmp
push
adc
jns
aad
mov
mov
dec
in
xchg
sbb
mov
lret
inc
jnp
xor
test
adc
test
add
mov
test
pop
loop
cmp
subb
ljmp
call
jl
xchg
add
push
and
dec
lock
andl
loopne
push
nop
sub
jns
mov
sti
or
in
xor
mov
imul
ret
mov
cmpsl
fs
stos
das
lock
pop
es
sbb
inc
out
mov
cmp
sub
jecxz
add
fdivrs
clc
rclb
ds
sbb
xchg
xor
out
mov
out
ss
sbb
ljmp
arpl
movsb
enter
mov
pushf
pop
data16
mov
lahf
enter
xor
pop
dec
jne
mov
adc
jecxz
lea
jle
ret
mov
test
pop
lods
mov
adc
push
rorb
xor
sbb
mov
xchg
movsb
jns
or
jae
and
dec
insl
dec
xor
sub
fistpll
pushf
movsb
outsb
arpl
shlb
lods
inc
mov
add
loope
clc
sbb
lock
mov
mov
sub
jb
mov
xor
fs
lds
inc
and
es
jnp
jns
mov
ret
out
les
movsb
mov
outsl
push
jp
xchg
xor
lahf
push
cmp
mov
mov
inc
inc
push
pop
inc
lds
in
mov
nop
cmp
cmp
and
mov
sbb
clc
fcomip
push
pop
mov
outsl
mov
loopne
or
test
xlat
jl
mov
mov
aam
loop
mov
outsl
dec
sbb
push
sub
movsl
jecxz
inc
cmc
pop
out
cmp
fdivrs
inc
xchg
jae
cmp
std
sahf
push
jne
outsb
leave
mov
mov
xchg
xor
out
mov
mov
add
and
lods
mov
daa
cmp
sub
in
lret
push
mov
inc
jp
outsb
rorl
xchg
test
adc
mov
jno
adc
data16
out
leave
scas
push
in
fmull
orb
sub
or
xlat
lea
cld
mov
cmc
cmpsb
dec
out
jl
sbb
or
loopne
inc
lret
outsl
shr
in
xchg
jg
aas
rclb
xchg
mov
dec
out
add
xor
pop
ds
enter
cmp
lret
jge
out
stc
add
nop
pop
xor
push
push
adc
sub
jbe
inc
inc
sbb
or
cltd
mov
in
inc
sbb
dec
cld
mov
and
and
loope
cmp
jmp
arpl
lret
shlb
inc
lret
mov
ljmp
or
test
shl
mov
loope
in
sbb
dec
add
fstpl
dec
daa
dec
cmp
lods
xchg
xchg
sbb
mov
or
inc
and
or
jne
jg
jae
loopne
dec
testl
jle
shll
test
jg
inc
fucomip
call
mov
inc
dec
outsb
imul
frstor
dec
adc
call
out
mov
adc
movsl
lods
and
sti
inc
repnz
and
aam
pop
sub
xchg
jle
push
rcrl
jo
mov
lret
flds
lds
xchg
or
adc
add
inc
push
adc
imul
aas
adc
mov
cmp
shrb
out
cli
push
adc
daa
testl
dec
clc
jecxz
insb
sbb
fldenv
popf
xchg
iret
push
pop
es
out
inc
ss
inc
mov
add
rolb
fcom
inc
std
testl
cmc
fidivrs
xor
daa
dec
mov
jl
movl
les
lock
rcpps
or
inc
jb
mov
add
inc
xlat
sub
or
in
xor
xor
gs
les
in
push
xor
lcall
pop
xor
cmpsl
popa
xor
test
pop
mov
ljmp
cltd
pop
divl
mov
pushl
pop
mov
imul
mov
fwait
lahf
sarl
sub
xor
or
xchg
clc
iret
cltd
sub
ret
jge
std
add
pop
or
test
jg
out
xlat
je
sbb
mov
mov
sub
dec
pop
arpl
bound
inc
push
ja
ja
adc
mov
adc
xchg
les
out
sub
stos
adc
mov
sub
fnsave
addr16
das
sub
aam
stc
inc
push
jg
hlt
rolb
xchg
dec
dec
xor
jmp
stos
mov
daa
cmp
push
and
rorl
adc
iret
sub
or
pop
sahf
mov
jp
daa
stc
mov
stos
cld
aas
add
iret
inc
insl
dec
sub
ljmp
stos
lret
mov
push
test
shlb
xor
outsl
mov
sarl
aas
das
jnp
aas
inc
pop
ds
adc
and
test
movsl
clc
rcll
push
lret
inc
sub
enter
loopnew
cmpsb
xor
mov
jecxz
xor
mov
in
inc
jo
lret
and
and
out
divb
add
cld
or
lock
xor
add
lods
enter
out
js
push
sbbb
dec
sar
ds
mov
rcrl
jge
mov
test
test
mov
mov
lahf
mov
js
jne
icebp
movsl
test
loope
fldenv
cmp
loopne
inc
xchg
add
xchg
and
out
jnp
xchg
mov
push
inc
jae
pushf
pop
mov
sbb
xchg
push
cld
decl
loop
lock
push
ficomps
pusha
lods
xorb
xchg
jne
sbb
das
mov
dec
cmp
sarb
sub
inc
mov
xor
xchg
sti
and
xchg
mov
push
outsb
inc
mov
mov
xchg
lret
scas
negb
inc
leave
lcall
or
dec
jb
pop
js,pn
jle
cmp
shll
rcll
pop
xchg
mov
push
pop
sbb
cmp
add
and
sub
js
xchg
mov
mov
pop
xor
pop
sbb
pcmpgtd
jo
mov
icebp
arpl
ret
and
xorl
ja
lret
stos
mov
scas
notl
movb
jle
cmp
xchg
imul
lahf
sbb
hlt
out
pop
push
mov
pop
lods
stos
rcrb
shll
cld
jbe
and
mov
push
loopne
mov
movsb
insl
jne
cmp
mov
pusha
ret
mov
pusha
inc
fbstp
pop
xor
out
and
mov
mov
inc
push
arpl
pop
inc
lock
cmp
sub
fidivl
fsub
push
sub
hlt
cld
popf
pop
mov
mov
hlt
mov
cmp
jne
cltd
movsl
mov
inc
adc
fcompl
cmp
jo
push
scas
sub
test
divl
push
mov
maxps
push
movsb
and
inc
jecxz
jae
insb
shrb
cmp
cmpl
stc
stos
pop
stc
in
iret
roll
shrb
rolb
call
xlat
and
mov
sarl
cmp
pop
cmp
adc
inc
lcall
and
fwait
sbb
sahf
mov
mov
xchg
pop
in
push
nop
adc
in
fs
dec
push
outsb
mov
mov
loopne
fsubs
xchg
xchg
jmp
pop
adc
ja
bound
mov
xchg
mov
sub
mov
cmp
xor
inc
ficompl
pusha
repnz
pop
loopw
gs
mov
inc
lret
or
pop
loopne
push
cmpsb
rcll
mov
repz
outsl
push
icebp
xor
insl
imul
outsl
and
loop
push
jmp
cli
addr16
xchg
fwait
jmp
adc
sbb
into
mov
xchg
add
inc
loop
pop
outsl
clc
jns
lock
out
mov
call
add
mov
xlat
mov
jbe
sbb
shrl
pop
out
sub
adc
mov
icebp
and
xchg
mov
jbe
cmc
mov
add
or
dec
mov
and
in
jne
loope
pop
dec
pop
cs
sub
pusha
or
cmpsb
fsts
lods
add
test
push
adc
xchg
jle
xchg
ljmp
je
jno
stc
ds
stos
pop
cmpl
adc
xor
xchg
cld
push
xlat
push
dec
mov
mov
mov
dec
sub
xchg
repnz
mov
stc
test
push
pop
out
inc
adc
xchg
push
rorl
xor
cmpsb
sub
dec
sbb
dec
std
mov
out
nop
sbb
addr16
test
push
inc
cmp
imul
add
iret
xchg
adcl
je
sub
pop
mov
jge
int
dec
push
or
imul
rcrb
rcrb
popf
gs
in
and
pop
inc
sti
jnp
add
pop
mov
xchg
push
popf
fs
xchg
cmp
insb
fimuls
unpcklps
in
leave
test
pop
sub
mov
xchg
dec
adc
mov
jbe
pop
pop
das
xor
repz
dec
xchg
mov
jge
xchg
mov
xlat
xchg
popl
out
inc
sbb
xchg
cltd
cmpsl
movsb
jp
pop
lods
aaa
hlt
addr16
and
mov
mov
add
or
leave
int3
mov
movsl
xor
lret
inc
leave
popa
push
ja
jg
addb
cs
and
addr16
pop
clc
lods
xchg
popf
xchg
push
fcmovne
and
xchg
jae
dec
sub
xlat
and
icebp
inc
mov
scas
int
push
xor
adc
aaa
or
bswap
sub
inc
cmp
lea
cld
cltd
cmpsb
cmp
out
dec
push
jne
sbb
scas
jb
pop
pop
cs
and
into
pop
inc
loop
push
add
test
mov
popf
mov
pop
mov
leave
sbb
mov
mov
fbstp
lock
fstl
add
pop
insb
and
lods
jb
cmp
test
out
xor
jg
xchg
adc
adc
push
shll
dec
xchg
mov
sbb
sub
cli
sahf
jmp
pop
cmpsl
in
testb
cmpsl
in
cmp
xchg
shll
jae
sub
ss
add
mov
sub
js
loope
push
fld
mov
push
and
jbe
mov
addr16
mov
cmp
adc
mov
lock
xchg
sbb
pop
mov
mov
ret
adc
push
mov
testb
adc
nop
xchg
fidivl
mov
xchg
or
push
sub
sarb
pop
and
add
jae
ja
lds
xor
test
push
in
call
ret
dec
dec
imul
dec
rcrb
data16
stc
mov
cltd
or
lods
push
mov
jp
imul
inc
jnp
lcall
ret
xchg
add
add
ret
push
bound
cmpsb
cmp
push
out
ss
dec
sub
lea
dec
cmovle
mov
mull
insb
xchg
cmp
nop
and
inc
dec
xor
mov
mov
dec
push
xchg
out
inc
stos
pusha
mov
aad
sub
aad
inc
setl
mov
mov
push
dec
push
sub
insl
stos
stos
rol
mov
mov
mov
mov
mov
mov
sbb
cmp
loopne
inc
icebp
add
pushf
jecxz
push
test
cwtl
xchg
lds
mov
and
mov
push
add
in
test
add
int3
fldenv
cs
sbb
sbb
imul
mov
andl
out
sbb
lods
in
push
lahf
pop
cmpsl
adc
inc
in
jns
sbb
lret
jle
fnstenvs
inc
ja
mov
leave
aaa
punpcklbw
and
jae
pop
mov
adc
dec
xor
scas
call
jecxz
lea
sub
mov
in
push
dec
mov
mov
pushf
xchg
push
add
ss
fxch
sub
sbb
sub
out
xor
adc
daa
sahf
rcl
sub
push
dec
xor
sbb
sub
shlb
in
sub
in
sbb
pop
pushf
push
lret
fistpl
fwait
in
scas
adc
cli
mov
out
out
lock
mov
jecxz
mov
xchg
scas
das
cmp
mov
test
sub
subps
xchg
push
jg
push
stc
xchg
iret
fs
lods
aaa
inc
mov
nop
mov
inc
push
mov
add
frstor
push
and
pop
je
std
pop
in
push
sbb
cs
pop
mov
dec
fcmovb
inc
dec
pop
xchg
fildll
std
jbe
sub
repnz
push
dec
jecxz
inc
xlat
cmc
xchg
push
adc
inc
testl
rcrb
aam
or
add
jbe
dec
and
pushf
jge
orl
shrb
sahf
sbb
call
dec
mov
adc
rorb
gs
push
adc
xchg
cmc
cmp
addr16
jns
icebp
add
lods
das
push
test
insl
jbe
vpcmpgtd
stos
inc
stos
jmp
or
pushf
jmp
fsubs
add
xchg
fildl
insb
loope
jecxz
mov
push
sbb
dec
pop
mov
pop
flds
ret
jle
dec
mov
pusha
cmpsl
add
stc
jmp
stos
xlat
adc
add
inc
push
dec
xor
std
aam
jp
xlat
repz
fstl
push
popf
jae
push
mov
inc
sbb
cmp
push
adc
jbe
orb
lds
mov
push
inc
test
sbb
mov
cmp
sbb
aad
test
sbb
or
imul
adc
xor
cli
fsubl
addr16
mov
push
ljmp
cld
xor
and
jl
mov
popf
mov
mov
loopne
inc
dec
sbb
std
pop
xchg
sbb
xchg
and
ret
inc
arpl
loope
sbb
cmpsl
clc
lcall
push
sbb
jne
xchg
xchg
sbb
popf
or
clc
int
cmp
bound
in
ljmp
and
dec
mov
adc
int
insb
aam
lds
iret
cmp
or
pop
mov
pop
push
cld
sbb
leave
imul
xor
or
mov
and
lods
push
popf
test
lods
adc
pop
stos
cmpsb
imul
xchg
pop
inc
cmp
pushf
movsl
jno
xchg
push
popf
test
inc
jbe
test
call
lahf
out
sti
jp
fbld
adc
xchg
les
test
xchg
jbe
mov
push
cli
push
dec
push
adc
push
leave
sub
lods
fidivrl
dec
jae
sub
into
packuswb
movb
stos
outsb
adc
mov
fs
fwait
mov
xor
das
push
out
add
js
negb
dec
cmp
data16
rcr
pop
lcall
aas
cmp
or
int
stc
jmp
xchg
jp
rcrl
dec
mov
in
adc
imulb
add
lods
shrl
repz
mov
xor
std
adc
cs
jae
inc
aaa
push
jo
push
pop
daa
xchg
push
fs
mov
imul
push
sbb
lcall
lods
cmp
jmp
bound
pop
pop
jns
pop
mov
and
fcoms
mov
mov
lret
jo
fsubrl
push
pop
adc
push
xor
enter
into
add
rcrl
mov
lahf
mov
fdivrs
and
in
xchg
sub
ja
into
adc
or
mov
jge
add
mov
inc
inc
jb
sub
pop
arpl
clc
push
and
push
mov
ja
cmp
dec
mov
jb
je
xchg
mov
rcrb
rcrb
xor
repz
aas
or
gs
aam
insb
mov
outsl
mov
js
fs
adc
lcall
dec
aam
fldenv
shl
jecxz
addl
xchg
inc
stos
mov
sub
xchg
xchg
add
testb
pop
mov
lods
push
dec
xchg
cmp
flds
bound
or
jle
into
and
jno
popw
pop
sti
mov
xchg
mov
cmpsb
jecxz
pop
jp
sbb
test
cmpsl
lahf
call
ret
mov
xlat
imul
mov
out
add
or
fldt
sub
add
pop
enter
fstp
inc
inc
popf
popa
cwtl
iret
ret
and
fistpll
mov
jo
imul
xor
movsb
add
cmpsl
pop
insb
inc
sbb
mov
sarl
mov
mov
arpl
xorb
jno
push
inc
mov
dec
adc
add
rol
rorl
xchg
mov
sbb
and
fwait
das
rclb
pop
jle
icebp
sbb
push
pop
mov
adc
sbb
shll
add
lcall
jl
call
int
xor
lock
outsb
and
idivl
shrb
jecxz
and
gs
dec
rcl
adc
xchg
lds
shl
inc
pop
je
stos
xchg
pop
xor
fcoml
push
jmp
mov
push
dec
fldln2
mov
sub
mov
iret
pusha
push
xor
shlb
mov
insb
icebp
stc
scas
nop
and
dec
dec
adc
loop
cmp
ja
inc
sarl
mov
test
in
aaa
inc
incl
movsb
ljmp
mov
imul
fsubrl
cmc
or
or
or
dec
xor
stos
add
stc
bound
add
mov
jne
sahf
lods
insl
aam
cli
dec
addr16
lods
xor
ror
cli
es
icebp
dec
int3
testl
add
in
or
lcall
leave
mov
inc
add
daa
icebp
decb
pop
or
and
cmpsl
out
out
jmp
xlat
stos
inc
inc
icebp
push
in
xlat
das
or
push
jecxz
dec
lods
lods
in
adc
fsts
fstpl
fs
stos
lods
jo
in
out
fcoms
jae
mov
dec
and
push
push
mov
test
jle
out
inc
cmp
xor
cltd
xchg
pop
jbe
push
stos
fmulp
sub
add
pop
mov
test
ljmp
gs
dec
lcall
mov
repnz
lret
push
dec
sbb
fists
dec
xchg
inc
add
in
jae
xchg
stc
push
call
inc
andb
pop
stos
cltd
sahf
cltd
es
dec
pop
arpl
push
mov
popa
sub
aam
sbb
loopne
xsave
stos
inc
sub
sub
sti
jl
imul
icebp
sbb
mov
sub
aaa
mov
xchg
stos
scas
xacquire
insb
lods
add
jns
outsb
dec
shrb
lds
inc
and
xchg
outsb
and
enter
sbb
inc
jbe
popf
enter
cmc
mov
inc
out
mov
call
dec
cmp
xchg
out
and
mov
add
and
add
add
lcall
lret
pop
mov
sub
dec
out
mul
nop
sub
jge
cmp
scas
xor
jnp
jge
sub
insl
lods
mov
cmpl
cmp
out
or
out
pop
adc
and
cmp
or
or
cmp
xor
mov
sbb
cmp
cwtl
cmp
test
stos
mov
pop
mov
dec
dec
pusha
and
add
mov
mov
pop
lods
xchg
fldenv
fimuls
sahf
pop
push
sbb
loope
pop
lods
dec
in
cmpsb
sbb
das
cs
movsb
xchg
test
in
sub
adc
inc
pop
ljmp
arpl
test
mov
imul
jne
lods
mov
push
push
arpl
pop
sub
fnstenv
ss
add
adc
or
test
repz
dec
add
xchg
sub
jl
sahf
js
and
pop
test
adc
cmp
sub
arpl
sub
in
push
push
mov
jp
mov
cltd
int3
fwait
add
incl
enter
dec
sub
pop
fsubr
rcrl
mov
scas
push
add
ljmp
not
cli
adc
lret
add
les
mov
lcall
xor
imul
cltd
or
add
subb
adc
lock
jnp
int3
flds
and
push
mov
mov
xchg
or
loope
mov
adc
xchg
lret
pop
scas
lcall
popf
daa
fsubrl
lods
adcl
sub
int
cs
int
pop
inc
imul
jns
sbb
test
in
into
pop
and
mov
mov
inc
std
sbb
mov
push
xor
add
movsb
ret
lds
xor
pop
rorl
push
orl
arpl
mov
mov
andb
scas
lds
push
jno
pop
mov
fwait
cmpsl
inc
nop
sub
adc
mov
loope
in
cs
inc
in
int
xchg
in
push
sub
movl
fadds
loope
stc
icebp
or
pop
adc
shl
notb
jge
shll
xor
adc
xchg
jl
idivl
xchg
adc
mov
fisubs
mov
cltd
mov
in
subl
dec
add
inc
pop
xchg
sbb
adc
outsl
pop
jmp
add
inc
subb
jne
test
je
mov
popf
idivl
std
mov
cmp
sarb
pop
push
pushf
test
hlt
cltd
movsb
ljmp
ja
loop
add
scas
or
push
jnp
jo
dec
lahf
imul
scas
sbb
jbe
gs
lods
or
aaa
stos
lcall
jp
enter
nop
fisttps
xor
ja
inc
pop
xchg
pop
sahf
enter
inc
sahf
cmp
and
dec
push
sub
cmp
cli
xor
adc
shlb
in
xor
in
leave
inc
rep
jge
aaa
and
mull
ret
fld
out
ja
add
dec
mov
mov
outsb
dec
iret
mov
inc
or
mov
sbb
push
and
sub
popf
es
xlat
sbb
in
int
push
loope
int
stos
outsl
shlb
or
mov
movl
popa
enter
in
daa
push
push
icebp
cs
insb
dec
push
mov
push
push
mov
out
push
out
mov
push
push
fidivrs
in
pop
add
or
shrb
cmp
adc
xchg
fsubl
xor
dec
test
push
mov
ss
adc
cmc
popf
cli
adc
mov
mov
push
xchg
out
mov
leave
pushf
in
shrb
jnp
xor
pop
popa
xchg
lock
les
arpl
adcb
lods
aam
sub
adc
push
ud1
in
jecxz
fbstp
dec
dec
pop
adc
cmpsb
jno
int
adc
je
pop
dec
aad
mov
cmp
push
mov
xchg
inc
mov
mov
jno
jno
push
cs
mov
push
push
int3
mov
xor
test
dec
arpl
rorb
fsubrl
mov
sahf
lea
pushf
mov
jmp
mov
ret
push
icebp
pushf
aad
call
sti
adc
stc
sub
mov
out
popf
dec
movsb
ret
loop
adc
enter
xchg
enter
or
push
test
or
ret
iret
nop
adc
pop
xchg
mov
sbb
inc
stos
mov
nop
sub
hlt
lods
aam
sbb
mul
mov
repz
dec
inc
loope
movsl
outsb
sbb
jns
jge
pop
fiaddl
shll
xchg
cli
movsb
cmpxchg
cmpsl
add
push
les
sbb
lods
mov
xchg
stc
outsl
icebp
push
cmp
subb
mov
or
lods
mov
mov
pop
push
or
or
outsb
lcall
fildl
gs
stc
sbb
decb
movsb
mov
ret
jno
push
xor
lods
inc
sbb
lahf
shrl
inc
cmp
sub
addr16
sub
out
out
and
mov
and
sahf
inc
add
xchg
add
aas
testl
sbb
xchg
fisubs
or
cltd
in
scas
dec
mov
pushf
mov
sti
incl
cltd
mov
push
push
pop
push
push
stos
jns
stc
pop
lods
dec
cli
lret
mov
sub
mov
outsb
aaa
add
and
sub
ret
xchg
popa
cltd
scas
fsubrl
leave
ret
mov
clc
cmc
data16
inc
mov
xchg
or
mov
sbb
mov
push
xchg
xchg
adc
cmc
stc
popf
adc
int3
jecxz
sub
cmpsl
movsb
fdivs
loopne
sub
push
pop
add
sub
rcrl
push
push
and
dec
add
stc
mov
and
icebp
push
jle
push
lahf
inc
and
in
inc
sbb
js
imul
inc
jns
enter
inc
aam
mov
std
shr
inc
pop
in
mov
insb
ljmp
ss
sub
sbb
push
mov
mov
pop
xor
adc
mov
aas
fdiv
cmc
cwtl
movsb
sbb
adc
les
sahf
inc
nop
mov
sahf
inc
pop
mov
mov
mov
and
dec
adc
sti
and
fs
pop
and
aas
mov
dec
cld
aad
dec
adc
shl
bnd
ret
push
popf
cwtl
mov
dec
pop
mov
jmp
push
in
sub
mov
aas
stos
and
in
test
lcall
cmp
stos
inc
sub
ret
ret
cld
movsl
nop
inc
imul
inc
rcrb
dec
dec
adc
jecxz
adc
daa
decl
cmp
adc
movsl
cltd
adc
fs
dec
test
xor
lods
lahf
addb
cmp
stc
add
mov
iret
es
pmaxsw
dec
adc
pop
jl
es
insl
xchg
andl
scas
bound
out
adc
rcll
js
xchg
enter
aad
in
out
mov
lret
cmpsb
inc
stos
scas
dec
mov
cmp
sahf
into
cmpb
adc
or
inc
negb
lods
aad
lahf
push
sbb
sahf
mov
xor
in
sbb
shll
inc
mov
sbb
mov
outsl
mov
dec
add
dec
dec
outsb
add
addr16
adc
mov
sahf
fwait
ja
ljmp
adc
push
das
jne
inc
in
std
push
rclb
repz
daa
mov
push
add
add
and
nop
sahf
or
mov
xlat
inc
into
mov
lret
pop
enter
or
lea
mov
sbb
ljmp
inc
daa
jns
jnp
sbb
rorb
sub
push
fnsetpm(287
cmp
and
push
out
ljmp
or
fdivs
outsb
out
insb
mov
xchg
lahf
inc
mov
fdivs
dec
sti
insb
shlb
addr16
cmp
sub
test
or
aas
xchg
movsb
sar
cmpsb
js
or
pusha
sahf
loop
test
bound
daa
sbbb
in
dec
jnp
aam
std
adc
pop
mov
and
iret
stc
jno
fidivl
push
add
mov
push
and
int3
cmp
repnz
popa
out
cmpsl
repz
rol
cmp
mov
fisubs
xchg
push
push
cmp
int
sahf
leave
movsb
fs
pop
cs
jo
or
fbstp
mov
xchg
ljmp
sahf
xchg
out
mov
cmpsl
std
push
sbb
mov
je
add
or
add
bound
or
jbe,pn
call
xchg
sub
add
ljmp
insl
repnz
lea
add
std
das
xchg
adc
rolb
dec
jo
mov
lahf
std
sub
xchg
fs
es
int3
fwait
jl
loop
dec
inc
dec
cmp
rcrl
and
mov
fidivrs
faddl
leave
stos
jg
fisubrs
repnz
ss
iret
call
outsl
mov
xor
cwtl
push
mov
out
popf
push
bound
push
ljmp
fidivl
or
and
pop
shrb
scas
pop
das
outsb
arpl
jno
push
int3
mov
mov
push
mov
xlat
clc
fwait
xchg
and
test
gs
stc
insl
cltd
or
cmp
cltd
repnz
push
shll
jbe
mov
pop
sbb
int
mov
ss
in
out
sbb
dec
push
shrl
jno
pop
xor
lea
loopne
add
imul
push
stc
jnp
sub
imul
leave
dec
lods
roll
mov
sbb
lcall
mov
insl
jge
stos
pop
xor
into
stos
sub
inc
mov
or
aas
aas
jne
movsb
test
inc
push
cmc
jb
and
dec
ror
adc
pop
out
jnp
pop
stos
es
pop
lods
fcmovbe
pop
outsl
fstpl
and
movsl
jge
sbb
dec
out
adc
std
cmp
jns
sbb
sti
sbb
push
cmp
loop
jae
ds
loopne
push
stc
into
push
rcrb
gs
sub
jle
cs
mov
sbb
lea
and
xchg
jle,pt
daa
adc
xor
cmpsl
fs
sbb
test
cmpsb
fnstsw
cltd
mov
pop
aad
sbb
xor
push
push
hlt
mov
adc
jo
das
movsl
push
push
aam
cmp
sbb
je
fisubrl
int3
out
mov
mov
mov
ss
fs
arpl
cmp
popa
enter
adc
scas
stos
cwtl
hlt
xchg
mov
std
decb
lret
adc
push
mov
add
xor
push
test
mov
push
or
leave
sbb
add
sub
cld
aas
adc
pop
mov
xlat
cmpsl
clc
sub
inc
add
into
mov
xor
dec
notl
mull
jnp
jmp
stc
mov
imul
dec
jne
xor
aas
rcl
mov
iret
stc
or
cmpsl
xor
push
mov
push
add
aam
dec
std
ret
gs
ds
mov
or
mov
sahf
inc
sbb
xchg
das
push
shll
jne
lcall
dec
sbb
sub
fimuls
push
push
mov
push
les
xor
lahf
test
push
data16
mov
mov
sbb
jae
gs
in
sub
sarl
xlat
mull
imul
xor
sbb
fidivl
add
fcmovnu
pop
xor
adc
rcr
ret
xchg
and
and
xor
stos
mov
adc
xor
pop
bound
xchg
imul
inc
ds
cs
repnz
sbb
daa
or
pop
cmp
leave
jecxz
sbb
sub
inc
push
bound
or
adc
push
lods
push
cwtl
push
fwait
sbb
adc
and
mov
lock
hlt
daa
sub
sbb
into
jae
mov
mov
icebp
push
sbb
xor
je
fidivl
push
push
cld
adc
xchg
mov
mov
or
aaa
aas
out
std
pop
pop
jne
les
movsb
cmpsb
sub
out
in
push
cli
pop
xor
mov
mov
addr16
xchg
leave
jbe
mov
aaa
push
popf
inc
push
in
sub
adc
mov
push
sbb
cli
stos
fcomip
add
fidivs
ja
push
cli
cmp
sbb
cs
into
cmpsb
addl
push
cmp
imul
lret
xor
adc
dec
sbb
stos
pop
push
add
add
pop
jnp
into
stos
pop
stc
mov
and
sbb
mov
mov
adc
mov
cmp
rcr
test
push
inc
jae
pop
stc
imul
push
out
je
imul
xchg
jns
adc
pop
cs
lock
jo
jg
mov
or
jl
inc
pop
mov
rolb
arpl
iret
jmp
mov
and
ret
mov
les
sub
sbb
or
movsb
shlb
cmp
ljmp
aam
into
mov
mov
and
repnz
pop
in
pop
mov
push
cwtl
jno
insb
pop
sbb
nop
fidivrl
sbb
or
call
rorl
addb
xchg
jno
call
push
inc
xor
push
mov
shll
enter
fldz
loope
icebp
aaa
gs
add
addr16
mov
mov
cltd
shlb
inc
repnz
pop
inc
jae
pop
jge
repnz
pop
sarb
lods
subl
inc
lods
sbb
xchg
add
pop
xor
xor
sub
movsb
pop
ja
addr16
xchg
push
shlb
jl
lret
add
sub
push
aam
push
mov
cltd
jg
ds
lahf
in
mov
out
xor
mov
aam
xchg
rorl
movsb
inc
lds
clc
loopne
mov
xor
ret
xor
dec
or
and
xor
pop
xor
push
nop
inc
data16
inc
sbb
pop
inc
fldt
inc
neg
dec
jb
arpl
inc
aam
push
sub
sub
xchg
adc
hlt
test
rcrl
push
ja
imul
mov
xor
mov
xor
mov
or
jb
mov
inc
scas
jmp
jp
rcr
sti
sbbl
add
dec
push
jns
pop
sbb
dec
jecxz
imul
add
addr16
ret
xchg
imul
xor
in
out
jo
sysexit
leave
fsubs
stos
fildl
cmp
mov
int
jnp
mov
pusha
mov
sub
or
cmp
push
mov
pop
pop
jne
cmc
lret
or
test
popf
xchg
int3
in
push
mov
es
fcoms
nop
lock
mov
test
test
imulb
out
push
pop
mov
in
xchg
divb
inc
mov
push
es
ficoms
clc
das
das
jb
pop
pushf
add
mov
mov
mov
lds
movsl
sub
dec
ds
cmpsb
aam
pusha
xchg
and
sbb
and
test
push
shll
jbe
outsl
cmp
inc
popa
mov
loope
cmc
jno
ret
inc
addr16
into
jmp
dec
push
flds
test
mov
lds
mov
or
mov
popa
dec
jg
andl
mov
jmp
pop
sub
mov
enter
and
dec
outsl
bound
test
dec
in
push
add
mov
jge
jp
and
out
mov
push
xor
fisubrs
jmp
jmp
popl
and
push
mov
shrb
and
call
adc
pop
imul
jmp
fistpl
push
insb
pop
scas
sub
push
mov
mov
lods
scas
das
cld
imul
repz
xchg
icebp
pusha
shlb
or
push
adc
adc
sbb
frstor
push
scas
dec
outsl
sbb
lret
pop
filds
add
lcall
mov
movb
push
xor
mov
add
sbb
jecxz
pop
faddp
xor
push
jmp
and
sete
cs
clc
js
inc
add
push
xlat
int3
cmp
jne
fsincos
pusha
pop
insl
or
rol
imul
arpl
icebp
push
mov
enter
push
lret
xor
outsb
inc
and
inc
call
sbb
mov
scas
hlt
xlat
pop
pop
inc
in
cmp
adc
mov
add
out
cmp
cltd
in
xlat
mov
rcrl
xchg
sbb
inc
jae
inc
dec
xlat
dec
push
push
xor
mov
sbb
or
pop
inc
ret
aad
les
inc
add
mov
aaa
mov
sbb
push
in
mov
jmp
xchg
pop
dec
jl
loopne
rcrb
shr
push
mov
enter
imul
inc
push
scas
push
or
sbbb
jl
mov
andb
shl
push
popf
pop
test
pop
out
mov
jecxz
mov
or
and
pop
pop
push
push
xlat
mov
push
aam
add
outsl
imul
jae
insb
int3
cmp
test
aaa
adc
jg
mov
mov
das
dec
jnp
stos
arpl
mov
rolb
inc
das
sarb
mov
lret
out
popa
lret
dec
jmp
jmp
and
push
mov
push
dec
jb
add
repz
imul
push
jle
and
mov
push
pop
and
lock
shrd
mov
stc
notl
jl
adc
int3
sbb
mov
and
loop
push
stos
adc
imul
cmpsl
jne
cs
mov
cmp
pop
dec
incl
push
jb
or
push
add
js
push
test
test
cmp
das
ljmp
mov
and
push
arpl
sbb
into
enter
xlat
or
inc
popf
cmpb
divb
incb
and
test
xor
xchg
out
sbb
daa
inc
xchg
lods
loope
shrl
pop
add
inc
mov
mov
inc
movsb
push
fadds
xchg
sbb
pop
push
xchg
arpl
dec
push
pop
fwait
test
jne
add
adc
jle
imul
inc
inc
add
aas
insb
pop
mov
lret
and
xchg
mov
insl
push
pushf
scas
dec
jns
adc
xchg
xchg
cmpsb
mov
hlt
out
inc
aam
shrl
roll
push
jb
cmpsb
test
mov
mov
jo
gs
aad
add
mov
mov
xchg
in
aaa
mov
push
pop
jno
mov
lret
ds
jmp
rcr
fisubs
fs
jnp
mov
repz
dec
jl
jecxz
mov
arpl
stc
sbb
mul
hlt
enter
inc
mov
mov
frstor
mov
leave
inc
outsl
fldt
mov
cmp
sbb
sub
std
pop
xor
std
int
andnps
xchg
aam
cmp
int3
movsb
das
adc
enter
ret
xor
sub
pop
aam
inc
xchg
cmp
test
add
mov
or
xor
push
cltd
xchg
stc
mov
add
jg
in
adc
jg
cmp
cmp
lahf
repz
and
int3
fmull
jg
leave
pop
int3
inc
in
sub
sahf
pop
and
sbb
jno
xorl
mov
sub
add
ficompl
or
ficompl
test
jp
jno
mov
ja
mov
aaa
or
dec
lock
mov
outsl
pusha
xchg
dec
cmovb
mov
cld
call
daa
or
cmp
or
test
jle
shlb
pop
subl
jno
enter
jge
lea
call
and
and
lock
or
std
pop
sub
mov
rcrb
cmp
jecxz
pop
lods
ret
rolb
mov
push
mov
xchg
or
jge
daa
enter
clc
repz
push
push
mov
repz
cmpsl
arpl
das
insl
and
loop,pn
mov
test
lahf
sahf
pop
inc
test
insb
rcrb
mov
es
stc
adc
pop
subl
int3
in
dec
push
dec
sbb
lods
mov
dec
jmp
sbb
inc
mov
notl
daa
in
lahf
pop
sub
cmp
fs
ret
push
mov
mov
jl
mov
push
fcoms
xchg
imul
test
and
imul
rorl
inc
popf
rclb
sbb
mov
mov
sahf
adcl
inc
pop
popa
xchg
int
pop
mov
sti
cltd
xchg
dec
inc
rcll
and
insl
and
imul
mov
cmp
sub
ret
insb
insl
jl
sbb
sbb
pop
cmp
popf
inc
cwtl
adc
jnp
out
pop
outsl
ret
outsl
sarb
lea
cmc
push
into
push
jb
setne
pusha
stos
push
fs
movsb
inc
sub
jl
rol
mov
flds
lods
inc
fwait
cmp
jle
mov
xor
pop
mov
sbb
jbe
int
mov
dec
and
inc
xor
addr16
clc
insl
add
and
cmp
cmc
mov
mov
popf
xor
test
lret
sti
clc
mov
mov
lret
mov
insl
fildl
mov
fs
orl
mov
pop
aam
popf
out
sti
sbb
mov
shll
lret
pop
in
movsl
lea
and
add
pop
fwait
sbb
push
pop
lret
shll
mov
insb
js
push
adc
int
xor
push
xor
lret
fs
ds
outsb
out
lock
data16
push
insb
inc
scas
jae
arpl
mov
xchg
add
xor
and
roll
xchg
inc
in
adc
and
xchg
repnz
pop
xchg
and
jl
notl
pop
xchg
and
stc
idivb
sub
or
xor
jnp
shlb
in
jnp
data16
arpl
xchg
jne
mov
int3
xchg
sbb
mov
psllq
aaa
jne
std
roll
cmc
sub
adc
xor
into
jp
mov
ja
lock
icebp
jp
cwtl
les
or
sub
xchg
cli
nop
push
xor
pop
jge
cmp
jp
sti
insl
and
rcrl
add
dec
mov
push
fwait
xchg
ret
cmp
bnd
pop
mov
push
cmp
push
pushf
xor
icebp
jg
loopne
jb
fstps
and
leave
stos
das
dec
stos
dec
pop
cs
mov
sbb
jbe
popa
adc
gs
jle
cmp
add
out
mov
xchg
out
addr16
popf
and
fwait
lea
popa
out
lahf
enter
es
pop
lods
cmpsl
sbb
aad
jp
dec
push
hlt
aam
dec
das
addb
adc
xchg
ret
and
mov
inc
bound
pop
pop
ret
repnz
dec
pusha
xchg
cld
scas
pop
js
push
mov
sub
or
jle
inc
movsb
ror
fsubl
and
int
in
dec
and
enter
les
mov
gs
aam
sub
mov
cwtl
sub
test
bound
mov
jge
test
mov
adc
daa
and
or
and
int3
and
gs
dec
out
sbb
stos
sbb
pop
mov
mov
leave
out
add
clc
or
lcall
add
lea
cld
daa
arpl
loope
into
mov
fs
flds
add
push
gs
adc
pop
inc
daa
push
orb
xchg
inc
push
sub
loope
jbe
outsb
imulb
adc
jne
pop
icebp
int
jle
adc
push
xchg
clc
leave
jg
mov
xchg
icebp
mov
sar
cs
jle
xlat
pop
cmp
lock
sbb
pop
mov
lea
and
clc
mov
aaa
sbb
mov
andb
mov
loope
lcall
jb
mov
xchg
nop
mov
lock
or
mov
cmp
or
faddl
mov
xchg
cmp
pop
jg
xchg
adc
or
clc
pop
inc
mov
fwait
and
mov
adc
pop
iret
je
cmp
int3
jle
es
ja
pop
sbb
mov
push
fstpt
dec
idivl
sub
push
push
in
ss
fnstcw
adc
or
adc
outsb
sbbb
ret
rcrb
mov
lods
flds
imul
shrb
seto
mov
rcll
cmpsb
rcrb
inc
movsl
jne
pusha
adc
adc
movb
in
mov
mov
scas
ror
xchg
mov
inc
jge
jle
cmc
sbb
push
aad
test
in
and
or
leave
mov
lahf
cmp
pop
mov
es
dec
xor
test
lret
fsubl
enter
and
push
rcll
or
mov
outsl
cs
cwtl
insl
test
xchg
fidivl
mov
inc
mov
in
push
lcall
cli
sbb
sub
hlt
roll
outsb
jmp
jg
sub
dec
out
mov
jle
dec
mov
out
xchg
xchg
fldenv
lock
xor
sub
cmpsb
xlat
xchg
outsl
mov
push
in
dec
bound
in
fnstenv
sub
push
mov
popf
pop
xor
arpl
jmp
cmpsb
inc
repz
push
xchg
jp
sahf
test
xor
push
mov
or
inc
add
or
jl
jmp
push
dec
std
outsb
lods
and
jg
jmp
lea
and
testl
mov
sti
test
mov
pushf
xlat
outsb
or
repnz
dec
inc
dec
in
ret
push
or
jo
daa
in
int
push
cmp
xchg
jns
inc
mov
dec
ficomps
enter
push
pop
lahf
aaa
ds
jle
cmp
lods
aad
mov
push
addr16
in
push
push
popf
pop
xor
sub
shlb
mov
sub
jle
cmp
sbb
int3
sbb
lds
icebp
inc
sbb
add
hlt
lods
adc
xor
or
or
rol
jle
leave
iret
dec
inc
sub
add
add
jmp
add
push
out
test
adc
mov
push
in
cmp
xor
sbb
mull
and
cmp
popf
sti
sbb
lret
mov
and
mov
inc
in
aaa
shll
sbb
mov
mov
mov
jmp
inc
lods
sub
loopne
stos
sbb
pop
xor
cmp
jo
or
lret
and
cwtl
adc
push
addb
dec
pusha
adc
mov
and
hlt
imul
rcll
xchg
aad
js
dec
pop
push
jmp
sbb
xor
xor
push
push
popf
lcall
mov
and
cmp
out
pop
aas
mov
mov
lahf
imul
adc
stos
mov
lock
loope
xchg
jecxz
pop
pop
mov
or
aas
xchg
outsb
cmp
cld
repnz
lods
popa
idivl
pop
daa
fnstcw
xchg
jp
fldcw
inc
pop
imul
mov
clc
and
ffree
rcr
mov
int
fs
lahf
sahf
in
jg
sbb
and
push
nop
orb
jb
push
shr
push
mov
and
mov
leave
and
out
xchg
arpl
mov
sub
jne
sbb
add
in
jge
les
pop
sub
shrl
mov
cmp
jne
xchg
and
add
dec
sub
pop
jne
jle
sbb
push
pop
jnp
or
int3
push
or
xchg
rorb
mov
mov
sbb
push
cmp
xor
lret
inc
dec
pop
jmp
cld
fdivrs
inc
and
mov
imulb
and
or
inc
int
in
push
sub
popf
mov
frstor
cmp
mov
icebp
sub
xchg
and
cmp
into
jns
jl
lea
daa
add
mov
inc
shrb
das
lods
lods
add
mov
pop
daa
dec
dec
jp
push
call
test
sarb
leave
xchg
push
sub
das
sub
cs
dec
rolb
xor
std
movsl
jo
adc
add
inc
frstor
adc
data16
push
testb
iret
push
jnp
pushf
jbe
jl
mov
dec
mov
lcall
xlat
outsl
jl
mov
arpl
fisttps
jle
pop
dec
jg
or
jb
in
pop
inc
push
rol
mov
imul
shrl
cmpsl
gs
fwait
out
jnp
or
add
int
and
sbb
jae
aam
xchg
cmp
and
mov
ja
inc
jecxz
movsb
psubsb
jno
out
fucom
mov
pop
addl
mov
in
into
mov
or
sub
xchg
iret
test
lcall
in
dec
or
es
dec
out
dec
mov
imul
cmpsb
sub
pop
inc
rcrb
icebp
lock
dec
pop
xchg
test
push
inc
xchg
xorl
hlt
jns
fldcw
bnd
add
sbb
jp
mov
data16
add
mov
enter
aaa
adc
dec
adc
lea
mov
fs
sti
adc
rorl
jecxz
out
xchg
movsb
mov
adc
pop
jno
addr16
xchg
xchg
push
add
subb
lds
or
popa
pushw
mov
test
fidivrs
cmp
pop
pop
es
dec
sahf
cmp
dec
int3
push
jp
lock
pop
cwtl
sbb
or
sti
jle
xchg
mov
es
fbstp
cmpl
popa
jb
mov
jge
fwait
dec
adc
mov
rol
sbb
adc
mov
jae
data16
mov
mov
iret
xor
pushf
ret
ret
xchg
push
and
mov
inc
stos
or
xor
cmpsl
push
je
lret
inc
movsb
pop
lock
cli
push
and
sbb
lcall
add
arpl
cmp
sbb
test
repz
and
push
inc
mov
lret
iret
cmp
or
cld
jns
inc
fwait
sub
push
adc
sub
sbb
movsb
cld
mov
icebp
push
push
nop
mov
repz
inc
scas
mov
mov
mov
mov
xchg
add
mov
inc
xor
sahf
gs
push
adc
mov
stc
mov
add
mov
push
add
mov
fs
lods
add
sub
dec
push
mov
and
adc
and
pusha
dec
sahf
and
pop
fwait
or
stc
mov
aam
or
push
mov
or
xchg
xchg
shll
xchg
mov
jo
imul
divb
dec
inc
mov
test
cmp
rolb
pop
pop
dec
adc
push
fisttpl
stos
pop
lods
iret
push
push
pop
std
lea
jg
dec
mov
sbb
jmp
pop
xchg
cld
iret
jb
movsl
mov
rclb
std
stc
mov
repnz
cmp
jmp
aad
inc
daa
cwtl
ret
jge
movsb
xchg
shlb
mov
mov
pop
sub
dec
push
lret
mov
dec
cmp
sbb
cmp
adc
add
add
adc
push
shl
sbb
xchg
dec
imul
sbb
stos
add
xchg
popa
mov
clc
fldcw
adc
dec
xchg
cmp
xlat
mov
stos
sub
mov
js
lret
xor
mov
inc
std
stc
and
dec
test
inc
jp
push
aad
xchg
mov
cltd
insb
xor
dec
jo
jmp
incl
lret
out
xchg
jmp
leave
push
popa
xor
bound
mov
push
fs
cli
sub
out
adc
lcall
xor
adc
in
fisttpll
call
ret
pop
scas
add
or
std
dec
mov
ficompl
mov
aam
pusha
pop
ror
jnp
je
sahf
fdivrl
shll
and
cltd
adc
subb
mov
mov
cmpsl
in
cmpb
cwtl
mov
inc
inc
jg
jne
lea
stos
cs
inc
jmp
gs
dec
das
loope
and
push
mov
cmc
ljmp
or
push
dec
std
cmp
xor
das
lods
das
jno
push
int3
sub
in
test
push
or
outsl
xor
cmpsb
sub
pop
jo
movsl
test
jns
push
decl
mov
xlat
mov
inc
and
inc
xchg
stos
xchg
inc
out
inc
pop
sub
outsb
pop
pop
xchg
scas
jb
shrb
lret
sahf
sbb
bound
and
pusha
and
pushf
aad
mov
lods
cmp
dec
adc
pusha
jo
mov
repnz
cli
test
sbb
enter
xorl
fdivl
push
mov
inc
xchg
and
cmp
mov
or
aas
xor
xor
push
push
add
jge
add
pusha
sti
mov
push
jo
hlt
mov
add
push
cmp
add
data16
xchg
or
aas
add
test
cmp
out
and
mov
mov
mov
fsub
push
xchg
xchg
fistps
fcompl
repz
mov
stos
mov
and
repnz
movsb
or
xchg
xchg
mov
xchg
lods
jp
cmpsl
push
movsb
pop
inc
sbb
ja
jnp
jns
mov
mov
jp
aaa
xchg
pop
pop
mov
inc
fs
push
in
std
cmp
jg
mov
xor
and
fimull
nop
lahf
mov
push
push
fisubrl
les
outsb
push
xor
jae
es
pop
dec
and
lods
sub
jbe
sbb
mov
rorl
jo
mov
dec
sti
mov
or
imull
adc
bound
test
cmp
sbb
dec
filds
icebp
cli
push
jno
cltd
xor
and
pushf
mov
loop
add
mov
cli
pmaxsw
outsl
xor
aad
add
addr16
in
adc
xchg
push
pop
cmpsb
loopne
cmp
inc
xchg
loope
std
hlt
add
xchg
or
mov
xor
ljmp
mov
push
lock
loope
insb
xor
mov
adc
enter
sbb
inc
sbb
outsb
mov
cmp
ret
mov
cmpsl
in
bound
fistps
push
inc
mov
jno
mov
push
adc
subb
add
leave
imulb
jae
xor
mov
sub
jne
or
or
sahf
sti
stc
push
out
inc
mov
pop
loop
mov
les
stos
scas
adc
xor
cli
rcl
mov
pop
or
push
nop
shrl
fwait
dec
popf
imul
in
sarb
dec
adc
jl
rolb
mov
out
sti
mov
lcall
add
xchg
jo
fcomip
gs
adcb
outsl
testb
icebp
sti
test
out
insb
in
push
jmp
pop
fnsave
dec
pop
jg
ret
xchg
lahf
ret
pop
lock
inc
dec
sbb
and
pop
les
dec
sarb
mov
leave
notb
add
jns
sub
ljmp
repz
out
out
out
jge
adc
fsubrs
mov
cmpsb
popf
mov
sub
repz
mov
sub
stos
jno
orl
rorb
fadd
cmp
fists
xchg
or
call
insb
pop
data16
jno
adc
scas
dec
lods
es
jmp
loop
addl
cmp
mov
cmp
daa
mov
pop
fs
sahf
push
pop
insl
xor
xchg
in
hlt
ret
fiadds
lret
xchg
mov
lods
subl
je
jo
and
ret
loope
cmpsl
pop
fcompl
xchg
jecxz
incl
xor
mov
xchg
cmp
test
iret
cmp
mov
popa
fisttpl
flds
pop
dec
in
xchg
sbb
jecxz
rol
or
xchg
test
arpl
js
sub
shrb
adc
in
gs
aad
lea
inc
imul
fldz
dec
mov
pop
in
cmp
mov
outsb
fildl
inc
cli
addr16
popa
ja
repz
out
pop
mov
pop
mov
xchg
icebp
or
dec
mov
rol
gs
adc
inc
mov
lcall
mov
fs
les
sub
pop
nop
cld
adc
and
xor
push
cmpb
rcrl
enter
mov
cmp
add
mov
out
jg
mov
pop
dec
mov
xchg
je
imul
iret
nop
cltd
adc
xchg
scas
fwait
adc
push
push
flds
arpl
xor
scas
pop
xor
fadds
jg
stos
cmp
xor
mov
fs
sarl
movsl
fadd
inc
pop
lahf
adc
mov
push
sbb
mov
mov
push
dec
pop
negb
repnz
add
push
adc
add
idivb
addr16
scas
les
arpl
pushf
ffree
roll
in
icebp
mov
push
push
jb
pop
dec
or
inc
fcomi
pushl
jg
push
and
lock
aad
jp
and
xchg
std
cmp
nop
xchg
mov
mov
xchg
mov
mov
mov
mov
sti
lahf
adc
push
outsb
notb
es
outsb
add
jl
sbb
movb
push
test
ficoml
bound
or
dec
sbb
enter
fmul
jb
scas
ja
cltd
mov
xor
outsl
mov
adc
sub
jo
inc
xor
cmp
mov
cmpsl
or
inc
mov
rclb
addl
and
decb
lret
mov
mov
sub
les
shlb
xor
fnstsw
sub
ljmp
pop
hlt
lcall
daa
mov
add
in
sbb
xor
jb
hlt
mov
dec
aas
arpl
inc
push
stos
mov
jo
lcall
cli
shrl
sub
add
icebp
aad
mov
xchg
mov
adc
dec
pop
pop
aad
aaa
push
dec
pop
mov
add
inc
xor
jmp
xor
cmp
jecxz
pop
pop
add
test
daa
test
dec
stos
stc
push
dec
pop
icebp
mov
mov
leave
addb
xchg
cltd
mov
dec
mov
push
jle
or
jnp
popf
sbb
stc
test
repnz
sub
pop
sbb
lds
popa
push
jnp
lods
cmpsl
cld
push
xor
mov
dec
dec
cmp
cmp
mov
add
adc
sub
call
dec
adc
sbb
jg
mov
push
ret
insb
pusha
imul
push
xlat
outsb
xchg
iret
addl
ljmp
out
loop
loope
leave
cwtl
cltd
sbb
loope
mov
sub
test
cmp
daa
push
dec
mov
stos
sahf
push
mov
loope
ret
mov
mov
inc
cs
xchg
pop
mov
xor
push
mulb
add
jmp
in
cmp
dec
pop
push
mov
scas
repnz
loope
or
cmp
outsl
fisubrl
loope
shrl
mov
std
mov
xor
jno
push
or
and
cld
pusha
sub
sbb
hlt
or
pop
push
xor
mov
addr16
dec
outsb
lds
sti
push
mov
dec
ds
xchg
cmp
fwait
pop
inc
push
ret
pop
xor
pop
mov
mov
rcrl
je
aam
dec
jno
adc
in
or
sub
roll
add
xor
mov
in
lock
cmp
mov
jns
sbb
mov
repnz
xlat
jb
mov
inc
cli
in
icebp
sbb
xlat
fsubrp
inc
or
add
les
push
mov
or
pop
stc
in
mov
jbe
push
fs
xchg
lahf
nop
jno
icebp
mov
jmp
xchg
lods
fiadds
cs
daa
loopne
mov
roll
lds
ss
add
add
mov
or
ss
mov
jl
pop
idivl
sbb
rcll
adc
jmp
mov
stos
arpl
xchg
sub
nop
in
adc
stos
dec
add
loope
leave
mov
int
cmp
cmpsl
inc
xchg
test
xor
rcll
pop
rolb
mov
or
mov
leave
jno
hlt
insb
movsb
jb
ret
jp
sbb
jb
cld
mov
imul
jne
jp
mov
fwait
add
adc
ja
pusha
cli
test
fcmovnb
or
dec
jb
je
aaa
cmp
repz
leave
pusha
ss
pop
jnp
popf
jge
aam
xor
jg
js
ror
mov
jmp
or
pavgb
jb
cmp
dec
mov
inc
cmp
dec
jns
je
mov
inc
pop
push
xchg
mov
mov
jecxz
test
ret
pushf
mov
push
dec
adc
sub
sub
or
sbb
repz
jnp
insl
sub
jg
xor
xchg
push
es
xor
and
les
lock
push
push
mov
add
dec
jge
adc
mov
adc
pop
jge
mov
outsb
rcll
nop
pop
and
add
pop
les
out
xor
bound
jne
mov
fs
xchg
sbb
or
mov
ss
insl
push
icebp
jb
loopne
call
mov
gs
adcl
jmp
bound
add
xor
lcall
dec
das
pop
insb
rcrl
test
loopne
cmpsl
mov
leave
lea
adc
mov
cmp
lret
aaa
aam
stos
xchg
sahf
and
xchg
xchg
adc
dec
cmp
add
dec
dec
pop
fadds
xor
jge
adc
pop
icebp
fwait
cwtl
inc
cld
push
and
lea
in
int
popa
sti
js
inc
push
dec
nop
ds
mov
push
and
xchg
ficomps
adc
lret
mov
imul
int3
imul
arpl
xor
scas
mov
xor
cmpsl
or
aad
mov
dec
push
sub
lds
int3
xor
xchg
dec
xchg
orl
pop
pop
addr16
aaa
idivb
inc
lods
push
push
stos
or
adc
push
lea
pusha
fsubs
pop
mov
push
push
pop
es
sahf
stos
lds
lret
repz
das
loop
jp
push
and
fld
cmpsl
sbb
sbb
out
sbb
xor
shr
or
add
mov
enter
jnp
pop
push
mov
push
mov
xchg
test
push
fisubrs
adc
arpl
rolb
clc
add
shll
sub
cmc
mov
or
xchg
pop
sbb
loopne
add
gs
cwtl
cmpl
xor
ret
cmpsb
mov
lods
mov
mov
or
shl
pop
inc
inc
push
and
or
movsb
mov
push
xor
xchg
mov
and
xchg
mov
xchg
insl
cmp
push
addr16
nop
insb
bound
pop
out
out
cmpsb
and
iret
movsl
sar
mov
shlb
jmp
and
mov
out
jl
mov
js
in
shl
and
mov
sub
push
cwtl
ds
push
loopne
mov
sbb
dec
out
jae
or
stc
std
mov
std
scas
js
mov
fisubl
leave
inc
aam
and
push
sbb
lock
sub
sbbb
pop
inc
cmp
out
addr16
arpl
pop
addr16
sahf
cs
mov
aam
aam
jecxz
xchg
leave
je
rolb
mov
xchg
int
sub
and
ds
push
cmp
mov
nop
jo
pop
mov
mov
adcl
pop
mov
inc
cmp
pop
fnsave
jg
xchg
push
push
call
push
aad
lcall
inc
push
inc
jns
addr16
cmp
mov
xor
mov
pop
enter
cltd
shll
jns
gs
or
andb
gs
mov
jbe
lcall
or
das
dec
and
sbb
in
cmp
jb
add
dec
xor
push
test
push
lret
jne
mov
enter
push
xchg
addr16
imul
out
mov
out
pop
daa
dec
jnp
mov
repnz
fisttpll
xor
mov
dec
cmpsl
xchg
xlat
pop
jb
add
movsl
cmp
js
cmp
dec
and
ja
xchg
dec
icebp
not
or
or
je
dec
roll
inc
sub
dec
adc
xchg
adc
mov
push
inc
mov
outsb
adc
push
out
cltd
jg
fucom
ja
pop
jge
push
cmp
pop
add
xchg
popa
sub
pop
xchg
fld
xchg
push
dec
popf
aaa
mov
out
ret
inc
push
jecxz
test
sti
cs
push
xor
repnz
enter
jns
in
scas
mov
jl
ret
add
es
cmpsb
mov
loope
and
pop
sub
into
stc
mov
jb
push
inc
dec
add
lcall
imul
jne
mov
imul
xor
inc
sarb
shll
in
mov
dec
sbb
into
fstpt
push
inc
sti
adc
das
jb
mov
sbb
xchg
or
sub
push
ret
or
xchg
push
icebp
outsb
push
ffreep
out
sahf
lods
fdivp
or
aam
bswap
mov
subb
js
leave
or
xchg
pop
das
mov
mov
std
and
sbb
arpl
in
add
sbb
xchg
xchg
or
xabort
add
sbb
and
add
add
test
inc
add
aam
or
inc
lahf
popa
dec
gs
imul
push
and
push
out
popa
cwtl
cwtl
jo
inc
test
insl
inc
mov
cmp
dec
mov
cmp
and
stos
cmpsb
add
pop
push
jecxz,pt
inc
mov
xor
nop
push
sub
popa
adc
mov
xor
bound
cli
lret
jns,pn
mov
and
aad
mov
inc
arpl
fisttpll
fxch
movsl
mov
test
popa
leave
in
ret
aas
sub
sbbb
insl
addr16
ja
and
inc
and
pop
xor
dec
dec
pop
int
int
push
stos
jmp
pop
inc
xchg
mov
dec
xor
push
movsl
jg
xchg
outsb
and
lahf
and
out
cld
cmc
mov
xor
push
add
sbb
je
xchg
push
push
lds
pusha
jb
outsl
nop
inc
mov
cli
les
sub
lds
jmp
aam
mov
movsb
adcl
stos
jns
xor
les
xchg
xor
ja
dec
sub
adc
dec
shl
jno
add
ss
mov
lea
sarl
mov
mov
js
sub
std
cmp
jo
daa
inc
and
jmp
pop
lret
xchg
or
js
jae
or
xor
mov
sbb
fadd
xchg
xchg
mov
mov
scas
les
mov
fidivrs
jno
orb
mov
cmp
cltd
and
mov
push
sub
mov
add
pop
sub
pop
pop
mulb
fnsave
sahf
inc
ficoms
lds
int3
mov
xchg
je
mov
popa
imul
andl
sahf
repnz
jle
aam
imul
cmpsb
mov
mov
mov
lods
ljmp
xor
insb
sbb
inc
push
cmc
bnd
movsb
or
dec
les
sahf
pop
es
call
add
lea
cltd
lods
jno
ljmp
movlps
jb
push
inc
inc
mov
insl
pop
mov
push
inc
mov
sub
lea
les
fwait
inc
jo
inc
xor
mov
cmpsb
push
lcall
fistl
pop
aam
popa
test
in
outsl
dec
mov
adc
cmpsb
cmp
stos
or
lods
xchg
pop
mov
mov
mov
imul
incl
and
xor
push
xor
inc
jne
imul
pusha
adc
pop
xor
aam
sahf
adc
fwait
out
xchg
pop
lea
lret
jecxz
adc
add
mov
pushf
jp
and
fisubl
xchg
fidivl
lahf
push
idiv
jno
adc
iret
or
in
and
push
jp
sti
sub
fists
loopne
sysenter
popl
mov
je
pop
xchg
add
mov
push
aas
and
mov
repz
lea
loope
into
mov
xchg
jbe
sarb
xchg
xor
sub
xchg
aaa
fwait
repnz
sarb
mov
ret
mov
add
mov
iret
add
test
sbb
mov
pop
int
mov
rorb
jb
out
inc
adc
scas
fcomi
out
push
push
arpl
roll
pop
iret
mov
stos
stos
mov
inc
clc
and
fidivrl
adc
inc
xchg
push
dec
mov
xor
pop
inc
gs
sub
mov
mov
mov
popa
jmp
lods
pushf
inc
jge
mov
mov
add
jae
push
stos
xlat
stos
adc
lret
mov
jae
push
in
stos
jo
and
loope
push
push
sub
mov
push
clc
gs
cmp
jp
mov
cmp
push
aad
sub
dec
mov
mov
jle
push
cwtl
dec
sub
inc
loop
lret
dec
jnp
push
or
mov
push
test
dec
in
push
push
cmp
sahf
sbb
add
push
mov
jg
inc
mov
push
outsl
idivl
or
cmp
push
mov
sub
fildl
sahf
ret
mov
gs
xor
adc
test
inc
sbbl
inc
mov
jg
dec
mov
mov
dec
add
jns
ss
push
test
std
sbb
imul
add
fistl
inc
icebp
jb
cld
loope
aam
ja
sbb
push
dec
mov
xor
sbb
push
ret
push
push
sbb
je
inc
or
inc
jecxz
and
insl
sbb
sub
push
cld
add
test
nop
dec
imul
js
shrb
cmpsl
roll
in
dec
out
test
jae
mov
xchg
out
dec
rorl
or
ficoms
xlat
stos
rolb
xchg
outsb
mov
in
mov
sub
push
add
arpl
pop
stos
loope
dec
ficoml
cmp
dec
and
cld
jno
push
xchg
sub
cmp
jno
leave
mov
mov
aaa
inc
loopne
fiadds
arpl
fmul
xchg
add
pop
pop
sub
loope
add
jecxz
cltd
ret
sbb
mov
xor
outsb
dec
mov
cmpsb
in
jg
sub
fs
ficomps
xor
in
roll
imull
add
push
pop
stc
pop
or
push
ja
out
add
push
iret
xchg
lock
jno
test
push
adcb
pusha
jne
loope
clc
push
push
push
mov
mov
shrb
and
or
clc
mov
sarb
js
mov
out
cmp
mov
mov
push
xchg
sbb
lret
outsb
cmp
push
xor
or
adc
imul
or
xchg
shr
shrl
mov
notl
into
push
ss
std
sub
xor
dec
add
divl
or
xor
je
dec
ficomps
cli
or
cli
leave
cs
in
xchg
ret
out
mov
das
dec
cmp
rcll
pusha
add
mov
insl
cmp
scas
test
cld
add
push
addr16
jle
dec
rorb
jp
iret
adc
les
or
dec
idiv
mov
inc
test
sbb
aam
inc
and
xor
repz
and
mov
out
pop
jge
lods
bound
cli
push
cmp
cld
mov
mov
adc
push
fildl
into
out
scas
mov
adc
ds
imul
test
popf
sti
cmpsl
lret
add
jb
xor
mov
rcll
aas
loope
roll
fs
sub
imul
rorl
add
stos
aam
pop
mov
mov
mov
push
mov
ds
mov
xchg
popf
cmpsb
fcomps
cmp
mov
sbb
inc
pop
add
mov
xacquire
mov
popl
loop
fsts
in
fiaddl
cmp
into
xor
mov
sbb
xlat
mov
sbb
ficoml
insl
in
mov
push
pop
sub
cmp
jae
sub
shl
pop
loopne
inc
cmp
cmp
and
pop
mov
out
mov
mov
sahf
push
mov
imul
fdivl
jns
and
push
xor
xchg
call
iret
cmc
xchg
mov
cmpsb
cli
ja
adcb
xchg
mov
das
fldl2e
lret
add
mov
aaa
mov
inc
push
jmp
mov
push
leave
fnsave
fs
mov
add
mov
push
xchg
sbb
icebp
cs
test
mov
subb
push
and
pop
jecxz
popl
leave
lea
jp
ds
ds
adcb
cmp
rolb
jbe
insb
mov
out
mov
aad
push
cwtl
jg
and
adc
add
fisubl
stos
pop
filds
lcall
sub
fildl
or
in
pop
inc
lret
sti
dec
sub
pop
xchg
out
inc
jo
adc
mov
mov
mov
pop
inc
pop
jb
sbb
push
or
mov
mov
mov
cli
test
lret
mov
bound
cmp
orb
mov
push
fbstp
icebp
pop
aaa
mov
xor
inc
enter
pusha
xor
cmp
notl
xorb
jo
test
js
dec
in
std
fldl
jmp
fs
xor
stc
xchg
xor
andl
inc
push
cmp
mov
loope
mov
pop
test
js
push
outsl
jnp
xchg
cmp
icebp
fwait
jg
into
je
fcmovne
loop
mov
jg
pop
jne
add
outsb
dec
sbb
lds
adc
jne
loopne
mull
fnstcw
rcrl
sbb
ret
adcl
scas
xchg
in
xor
cld
rcrl
call
dec
sbb
adc
fisubs
push
adc
es
sub
cltd
jb
aas
sub
mov
sub
pop
jb
push
fcoms
push
push
insb
push
scas
xchg
dec
sub
jmp
mov
pusha
push
cltd
or
pop
dec
xchg
jmp
gs
aas
mov
cmp
and
mov
and
mov
iret
sahf
shl
mov
mov
jae
cmp
push
mov
fists
or
rorb
jmp
sub
mov
in
cld
dec
push
cmp
out
adc
jbe
cltd
push
add
pop
adc
call
and
dec
jp
lcall
outsb
fisubl
outsl
mov
std
sbb
or
push
mov
xor
mov
mov
and
sub
cmp
enter
mov
adc
push
push
xor
push
mov
movsb
sub
xchg
addl
or
push
movups
adc
fdivl
inc
leave
sarl
pop
loopne
jg
cld
je
lods
pop
icebp
shll
push
adc
or
aad
pop
push
lret
fmul
mov
mov
fimuls
jmp
icebp
outsb
cmpsb
jmp
sbb
repz
xchg
or
push
xchg
dec
sbb
and
cmpsb
shll
clc
push
jge
pushl
mov
pop
mov
movsl
fadds
fstps
cli
je
inc
inc
fdivrs
jb
shlb
jle
cmpsl
cmp
pop
inc
std
jb
repz
std
imull
es
daa
fdivrs
pop
add
daa
mov
jne
icebp
add
mov
xor
dec
jmp
add
push
pop
out
dec
push
jb
fsubs
mov
mulb
movsl
push
jbe
orl
sub
jbe
std
mov
lcall
push
sahf
xchg
jle
or
pushf
data16
mov
enter
stc
push
lcall
imul
push
adc
sbb
cli
fndisi(8087
cmp
mov
sub
xchg
pusha
lock
cltd
js
mov
fldt
xchg
aas
pop
das
mov
push
clc
xor
mov
fstpt
les
out
lock
pop
out
xlat
lods
mov
jae
ljmp
clc
mov
mulb
adc
adc
jg
sbb
xlat
dec
add
fldl
lahf
and
pop
xchg
cmp
nop
xchg
incb
mov
inc
out
test
fs
push
inc
dec
in
push
fisttpl
mov
sub
imull
mov
sbb
insb
arpl
out
aas
sub
push
cmp
add
int3
jo
jno
and
iret
inc
bound
daa
xor
mov
cmp
outsl
mov
testb
out
fisttpl
subl
push
jnp
xchg
xchg
cmc
mov
jbe
jb
and
or
jae
clc
jae
outsb
fwait
push
pop
scas
cmpsb
push
ljmp
loop
push
mov
jmp
js
mov
data16
iret
pop
cltd
mov
icebp
cmpsb
aas
and
cmpsb
negl
mov
ja
xchg
push
popf
test
push
hlt
test
outsl
addr16
sbb
mov
nop
jle
dec
testb
sub
jns
xor
out
daa
outsb
push
inc
dec
fsubrs
lods
mov
adc
in
mov
add
xor
in
shrl
popf
movsl
into
mov
mov
sbb
push
jecxz
mov
cli
cmp
jp
push
in
movsb
xor
jne
inc
fbstp
jge
int3
adc
faddl
js
imul
xchg
and
push
int3
xor
jle
xlat
sbb
hlt
shrl
sahf
push
or
pop
loop
leave
pop
xchg
das
stos
and
push
testl
dec
pop
mov
pop
movsl
add
xchg
pusha
sti
test
pop
icebp
aad
push
dec
dec
mov
fidivrl
es
xchg
mov
sub
mov
cmp
arpl
push
pusha
cmp
lcall
lret
add
or
lods
push
setb
sbb
lea
test
notb
ret
mov
repz
fcompl
pushf
inc
cmc
jg
les
test
call
movsb
test
and
ficompl
nop
push
gs
andb
adc
fcompl
pop
or
std
scas
popf
fimuls
fs
inc
push
packuswb
mov
pushf
xor
dec
pop
sarl
or
je
xchg
mov
int3
pop
mov
pxor
mov
mov
movsb
adc
cmpsb
mov
addr16
pop
inc
mov
push
insb
jno
cltd
fdivl
lcall
leave
imul
dec
mov
mov
out
sub
lea
mov
inc
jo
xchg
mov
sysexit
out
cwtl
call
and
mov
and
jns
cmp
insl
arpl
and
repz
adc
push
jp
and
xchg
stos
pop
outsl
cmp
xchg
daa
cwtl
enter
cmpsl
dec
mov
xorb
jbe
roll
add
ss
sub
jne,pn
testl
test
popa
jle
adc
out
add
sub
adcb
xor
bound
fcomps
adc
dec
mov
popa
inc
ljmp
popa
test
add
xlat
adc
shll
icebp
sub
mov
push
push
jecxz
mov
cmp
cmc
pop
mov
add
xchg
or
jge
push
and
jmp
ficomps
jl
repz
pushf
xor
push
cmpsb
cli
xchg
lods
pop
stos
push
fldl
cs
adc
xor
push
add
clc
sbb
mov
jbe
push
push
jp
push
sti
sarl
xchg
cmc
sti
mov
int3
shll
add
or
adc
mov
vandnps
cmp
gs
shl
fidivs
or
xor
xor
xchg
lcall
aam
pop
xchg
cmp
sbb
jmp
push
jge
push
xor
cmp
dec
and
in
flds
icebp
dec
inc
sub
cmp
in
push
rolb
insl
fcomp
pop
pop
mov
mov
iret
or
mov
xchg
xor
leave
dec
or
add
pop
pop
xchg
call
insl
scas
xor
cs
hlt
ss
nop
lahf
inc
push
mov
push
sti
jge
stc
dec
js
add
push
push
jmp
or
cmpsl
add
cmpsb
nop
mov
js
out
or
or
add
pop
cmp
insb
insl
pop
jge
jle
xchg
mull
ficompl
adc
scas
push
inc
adc
outsl
sti
and
jbe
pop
mov
std
popl
or
ds
in
jp
sub
mov
mov
enter
or
mov
rcll
je
or
out
lret
inc
pop
lods
in
mov
out
int3
add
adc
pop
and
add
xchg
pop
cmp
in
subl
cmpsl
push
lret
lret
fwait
add
cltd
std
das
cmpsb
bound
xor
mov
test
xor
dec
jge
jo
sahf
popa
stos
rclb
add
cmpsb
jmp
loope
repz
das
lea
addr16
inc
mov
inc
mov
dec
aad
jne
mov
mov
sub
push
sbb
cmp
and
adc
mov
mov
sbb
push
jl
pop
adc
xor
and
shll
jae
inc
dec
mov
fwait
add
jg
xlat
jp
sub
mov
mov
sarl
adc
push
and
ljmp
dec
mov
mov
jbe
mov
sbb
and
repnz
pop
nop
clc
sahf
out
xchg
mov
fs
push
xchg
in
dec
push
ja
push
dec
add
pop
inc
mov
aam
cltd
lret
fistpl
rcrl
js
out
cmp
ja
test
addb
pop
xchg
fidivs
jg
xor
bound
dec
out
fists
mov
push
jno
sbb
stos
xor
mov
jle
ret
adc
lret
daa
arpl
or
mov
mov
fildll
cmpsb
js
mov
addb
or
stos
xchg
dec
mov
stc
test
push
dec
data16
adc
xchg
fcomps
popa
aam
cli
mov
pop
xor
es
dec
inc
ljmp
ja
out
inc
fs
pcmpeqw
jge
and
xchg
pop
xchg
stos
cli
nop
push
and
xor
dec
inc
lock
mov
mov
xchg
cli
call
xor
mov
pushf
jns
pusha
jmp
hlt
jne
lcall
push
cli
xor
adc
push
xor
ficoms
insb
inc
mov
adc
jns
fcmovne
jecxz
dec
mov
div
ja
sub
jl
mov
mov
mov
in
je
and
adc
xchg
dec
xchg
mov
mov
ror
add
shl
xchg
lret
dec
xchg
pop
sbb
loopne
outsl
cltd
jp
out
subb
xlat
push
sub
addr16
mov
data16
push
outsb
adcb
aas
cmp
mov
sbb
add
stos
bound
out
dec
mov
sbb
jmp
stc
mov
sbb
fldcw
adc
in
mov
xchg
jecxz
mov
adc
scas
add
lret
xchg
divb
daa
mov
sub
cmc
adc
pop
push
jb
pop
lods
loope
sbb
stos
xor
adc
inc
sbb
inc
into
insl
cli
loop
mov
stos
rol
pop
mov
imull
adc
sub
pop
enter
lcall
jne
mov
pusha
jp
pop
sub
imul
mov
sti
xor
fcompl
jnp
mov
fnsave
in
and
dec
mov
add
mov
push
push
subl
test
cltd
sub
jne
xlat
add
sub
xchg
dec
push
and
push
inc
xor
nop
mov
dec
add
mov
xchg
repnz
cli
add
xchg
test
mov
clc
cld
sbb
sarl
insb
popa
xor
mov
icebp
popf
shlb
and
adc
bound
sti
mov
test
mov
cld
jmp
mov
dec
push
scas
pop
xchg
out
xor
and
jmp
ret
xchg
mov
loop
clc
xchg
pop
mov
jno
es
arpl
mov
ret
jb
sub
mov
push
bnd
in
daa
sub
insl
loopne
fimull
push
iret
fistps
dec
loope
jae
mov
xlat
pop
xchg
rcll
fnstcw
movsl
inc
sahf
and
xchg
in
sub
mov
inc
and
mov
jge
sahf
cli
aaa
push
ret
rcll
rcll
popf
mov
lods
out
sbb
cmp
sahf
jae,pn
pop
jp
and
adc
idivl
movsb
imul
in
cs
xchg
lcall
clc
lret
fsubp
add
sarb
lock
jnp
adc
aaa
fxtract
cmp
jmp
push
iret
fs
call
sub
dec
movsb
jns
insl
inc
jne
xchg
jns
insb
sub
and
sbb
xor
jne
mov
adc
stc
add
aas
jg
fdivrs
dec
aaa
mov
pop
leave
jne
pop
fs
and
in
xor
icebp
fucomi
sbb
mov
ror
test
mov
fadd
add
cmp
or
mov
popf
or
jb
inc
insb
add
mov
pop
xlat
cmp
insb
gs
mov
paddusw
in
mov
mov
or
inc
mov
adc
jno
in
jns
mov
jo
subb
inc
and
push
nop
and
jns
cmp
cmc
bound
mov
cmpl
scas
nop
and
daa
fbstp
test
add
les
in
shl
push
dec
adc
daa
pop
andb
scas
std
lret
imul
jnp
cmp
data16
jo
sti
mov
adc
sahf
push
cmp
sbb
push
cltd
jl
and
popa
jl
lret
xchg
jmp
or
push
and
ror
push
add
popf
js
fsubs
out
add
cwtl
push
push
xor
sahf
inc
mov
lods
adc
xor
adc
movsb
pop
xor
iret
jae
scas
insb
cld
pop
mov
xchg
js
dec
cwtl
out
pop
cmp
int3
adc
push
xchg
adc
jmp
xor
rorl
sarb
clc
dec
mov
pop
push
adc
ja
mov
xchg
or
and
sbb
jbe
mov
repz
mov
mov
stc
or
add
push
push
mov
subl
fs
mov
pop
xor
add
xlat
xor
jns
rcll
filds
dec
flds
add
dec
dec
add
and
fistpl
pusha
add
mov
jae
ss
push
sbb
addr16
cmp
or
lahf
add
fisttpll
mov
notl
adc
xor
mov
add
movsb
push
fwait
aad
sti
pop
inc
out
insl
cs
aaa
xchg
rolb
enter
hlt
add
hlt
add
lods
mov
in
out
hlt
mov
or
jg
lods
cmp
iret
bound
dec
cmpl
push
sahf
lahf
inc
sbb
pusha
add
sahf
cmp
jb
ljmp
pop
fnstcw
inc
stc
popa
mov
xor
mov
rclb
pusha
out
pop
jmp
pop
xor
adc
cltd
rol
mov
notb
adc
dec
movsb
xchg
pop
lcall
add
shll
out
loopne
push
cld
sub
mov
cmp
inc
jmp
fdivrs
dec
mov
xor
inc
inc
insl
cli
test
dec
mov
mov
cwtl
cmpb
mov
add
sub
out
jecxz
jno
add
and
mov
mull
or
insb
fidivrs
mov
jno
jl
movsb
in
mov
pushf
insl
sub
inc
dec
iret
lret
xchg
sbb
add
outsl
lds
ds
outsl
cmp
sahf
mov
jg
jno
outsl
lock
jno
inc
stos
cmp
addr16
pop
cmc
cmp
add
mov
dec
aad
cmp
push
das
clc
inc
pop
sbb
xorb
fiadds
out
mov
pop
in
clc
jecxz
loopne
add
pop
std
jmp
inc
jne
fs
cmp
imul
imul
popa
das
test
mov
addr16
mov
mov
ljmp
and
mov
je
std
adc
popf
push
ret
dec
xor
sub
imull
int
inc
enter
mov
mov
mov
ds
jecxz
jb
mov
jecxz
pop
je
daa
adc
mov
ret
cmpsb
fs
pop
sbb
fidivrl
int
cmpsb
mov
out
push
xchg
cld
mov
mov
insb
mov
cmc
mov
pop
lahf
out
negl
nop
sub
and
sub
push
movups
mov
and
mov
ja
pop
cmp
adcl
lea
sbb
xlat
pop
divl
daa
in
mov
jecxz
mov
in
insl
fisubrs
mov
adc
add
dec
push
adc
push
sbb
and
add
das
arpl
jecxz
inc
aaa
mov
outsb
insb
push
loop
sub
mov
pop
or
scas
lret
mov
das
fimull
fs
jns
adc
mov
lcall
adc
lahf
mov
popa
js
mov
aam
sti
jnp
leave
cld
lret
test
jmp
outsb
inc
decb
xor
mov
sbb
inc
dec
jbe
push
mov
scas
dec
sbb
das
test
stc
adc
cmp
rcll
rcll
push
out
fwait
sub
fwait
scas
js
nop
xchg
push
lcall
rcrb
xor
jle
out
dec
sub
fwait
add
test
icebp
ret
call
insl
push
cmpsb
ret
or
and
sub
and
push
aam
inc
sub
sub
push
fs
cmpsl
jmp
mov
fs
jecxz
add
leave
ss
lods
and
lret
sbb
orb
or
mov
cmp
rclb
cli
add
or
xchg
lea
movsb
xor
jge
jg
jbe
insl
sbb
imul
subl
fs
lret
or
in
test
xor
xchg
dec
mov
std
push
enter
popf
push
mov
mov
jo
xchg
sub
js
inc
ljmp
dec
mov
les
or
lods
lea
mov
xchg
les
js
mov
mov
mov
jle
jb
mov
fs
in
dec
aaa
mov
popa
mov
jae
in
adc
es
dec
dec
cmp
sarb
adc
imul
cmp
ror
femms
jnp
or
pop
xchg
and
lods
mov
outsb
cmp
popf
adc
shlb
divl
ret
inc
add
test
and
pusha
xchg
mov
mov
jo
jp
pop
xor
and
test
lret
jbe
mov
xchg
clc
sbb
fldenv
pop
or
pop
push
mov
push
out
inc
mov
sub
decb
test
iret
lods
jecxz
fnsave
jge
sub
sbb
lahf
cmpsl
xchg
ljmp
data16
cmc
rcr
lret
and
loop
test
lret
cmpb
mov
dec
lahf
test
fsubr
or
or
frstor
add
out
add
mov
lods
fwait
xor
lea
aam
adc
mov
dec
nop
push
adc
push
xorl
push
call
or
cmp
into
and
test
sub
mov
or
dec
jb
fsubrs
cmp
mov
es
xlat
mov
pop
mov
scas
sbb
xlat
and
sub
xchg
xchg
cmp
pop
cmp
mov
out
ret
mov
ljmp
lods
stos
mov
jns
dec
pop
cmp
aam
addr16
or
jo
int3
xor
popa
push
cmp
ret
pop
jmp
jo
dec
out
loopne
xor
inc
out
pop
dec
sbb
divb
sub
popa
ret
dec
mov
mulb
sub
loope
nop
mov
inc
push
cwtl
add
leave
pop
and
xchg
sub
lret
fiaddl
dec
push
cmc
push
aas
sub
inc
push
pop
in
mov
lahf
push
out
or
rclb
fsubrl
aam
pop
popf
rolb
dec
bound
enter
std
insl
mov
pusha
jge
les
xchg
mov
jg
loope
test
pop
xor
inc
push
push
cmp
mov
xor
mov
popa
mov
ja
orb
xor
data16
cwtl
movsb
push
push
call
mov
gs
inc
orb
and
aad
fisubl
decb
ret
add
fchs
lds
insb
ljmp
andb
out
scas
sbb
loop
sbb
lds
xchg
xor
insb
pusha
das
pop
pusha
mov
xchg
fiaddl
xchg
sbb
dec
cmpsl
pop
fnstcw
mov
push
pmaxub
cmp
in
push
test
mov
push
out
push
inc
add
cmp
mov
cmp
daa
vmaxps
inc
cmc
ss
or
jmp
inc
cmp
aas
xor
adc
test
in
js
loop
and
jg
add
fsub
in
aad
into
xchg
sub
sar
fprem
and
lods
and
ja
mov
sbb
cwtl
push
jecxz
mov
popf
insl
inc
pop
adc
arpl
xor
pop
sbb
adc
lods
xor
mov
and
ss
mov
sti
add
neg
ljmp
pop
imul
in
sbb
rolb
icebp
pop
sahf
inc
push
mov
loope
cmp
pushf
jmp
sub
mov
sti
sub
leave
cmp
push
imul
cmc
out
and
rcrl
aaa
shl
inc
xchg
sub
inc
sbb
pop
test
xor
sahf
inc
js
jo
lods
or
mov
neg
add
call
ds
sub
lret
in
cltd
mov
and
out
mov
jle
cmp
fmull
cwtl
or
loopne
dec
call
mov
in
sub
mov
daa
push
mov
add
out
mov
jl
jo
mov
test
push
mov
les
lret
and
stos
nop
shl
jo
add
int3
mov
xchg
add
xor
mov
jne
or
and
adc
aas
mov
fdivl
cwtl
xchg
mov
sbbb
and
or
push
mov
xor
xchg
mov
adc
mov
xchg
ss
mov
push
push
rcl
data16
jecxz
jge,pn
push
gs
clc
ss
clc
or
movsb
in
or
rolb
mov
inc
mov
add
mov
outsl
xchg
lock
popa
mov
sub
hlt
mov
lcall
ds
imul
andb
sbb
les
loopne
sbb
mov
rol
jbe
into
sub
adc
in
out
repnz
pop
icebp
gs
mov
ret
push
push
dec
xchg
or
mov
adc
push
repnz
add
out
pop
cmp
mov
dec
movsl
sbb
push
xlat
jp
or
pop
fcmovbe
ja
lret
dec
jle
mov
xor
pop
push
ficomps
sti
pop
push
in
loop
dec
fs
into
int
in
push
adc
scas
inc
loopne
add
in
aad
pop
