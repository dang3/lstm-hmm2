sarb
mov
sub
jnp
xchg
test
fiadds
adc
jnp
mov
jnp
add
jnp
jae
jnp
and
add
add
add
ret
inc
mov
jle
shr
jle
mov
out
jle
push
lock
shr
jle
shr
push
mov
jle
outsl
lock
mov
in
jle
into
in
jle
add
out
jle
cmp
jle
add
add
add
add
jb
gs
xor
cs
insb
add
gs
xor
fs
insb
add
add
imul
jae
insb
gs
outsb
jo
je
add
add
je
popa
jae
inc
jb
outsl
jb
add
dec
outsl
jbe
inc
imul
jb
addr16
jae
inc
add
add
popa
fs
outsl
outsb
jae
insb
gs
outsb
jo
je
add
add
imul
gs
js
add
inc
outsl
jb
popa
je
gs
popa
addr16
add
add
imul
je
push
jb
imul
je
outsl
outsb
inc
add
add
outsl
jae
dec
popa
outsb
fs
add
add
je
outsb
outsw
jb
popa
je
outsl
outsb
dec
outsl
bound
push
arpl
add
je
jne
jne
fs
outsl
insl
jo
gs
outsl
outsb
push
je
je
jae
add
dec
jo
outsb
inc
jbe
outsb
je
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
inc
gs
outsl
fs
gs
imul
add
add
je
jns
je
insl
inc
gs
jne
je
popa
outsb
addr16
inc
add
add
je
outsb
je
jb
popa
insb
push
imul
jae
add
dec
outsl
popa
fs
je
imul
dec
jae
imul
imul
add
jo
imul
gs
js
add
add
je
jb
arpl
jae
imul
popa
je
outsl
outsb
add
add
imul
gs
insb
dec
outsl
outsl
imul
outsl
ja
add
inc
jb
ja
je
je
inc
add
add
jo
imul
gs
add
add
jo
imul
gs
js
add
add
je
outsl
arpl
add
add
push
imul
jae
bound
add
inc
outsb
jne
push
jb
jo
inc
js
add
add
jae
push
push
dec
gs
popa
addr16
add
add
imul
jae
addr16
add
add
jo
dec
insl
popa
add
add
bound
push
gs
dec
jne
inc
add
add
fs
jne
jae
jb
jb
insl
inc
imul
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
adcb
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
pop
adc
add
add
add
mov
add
cwtl
adc
add
adc
add
adc
add
adc
add
or
dec
add
lea
mov
dec
jne
inc
mov
inc
dec
pop
dec
sub
pop
lea
mov
pop
add
add
dec
add
sub
lea
mov
inc
sub
dec
dec
add
ret
push
or
lea
mov
inc
dec
sub
dec
or
push
push
push
push
lea
mov
inc
push
inc
dec
inc
sub
lea
mov
dec
dec
sub
mov
inc
push
and
lea
xor
imul
inc
push
add
dec
push
inc
and
pushl
lea
call
mov
add
sub
inc
dec
add
and
lea
movswl
pop
ret
mov
inc
inc
inc
dec
mov
or
lea
cmp
jb
mov
inc
add
xor
inc
dec
xor
and
lea
pop
imul
inc
test
jbe
inc
dec
inc
sub
lea
mov
inc
inc
add
dec
sub
lea
mov
dec
add
dec
add
inc
add
lea
imul
add
dec
inc
and
inc
sub
mov
lea
mov
movzbl
dec
add
add
dec
dec
and
or
lea
mov
dec
mov
dec
inc
mov
dec
sub
mov
lea
movsbl
inc
inc
inc
inc
dec
jne
sub
mov
lea
mov
inc
dec
dec
add
add
lea
mov
inc
mov
dec
dec
inc
and
lea
mov
add
dec
mov
inc
inc
test
jbe
sub
lea
mov
add
dec
dec
add
or
lea
mov
dec
inc
dec
add
sub
inc
lea
movswl
dec
add
inc
dec
and
xor
lea
mov
imul
inc
movzbl
inc
add
add
inc
add
and
lea
movzwl
mov
dec
dec
movzbl
inc
dec
mov
xor
lea
mov
mov
dec
movzbl
dec
inc
add
add
sub
and
lea
mov
movzbl
dec
sub
xor
inc
inc
inc
xor
jmp
dec
inc
pop
ret
push
dec
inc
and
lea
mov
dec
sub
add
sub
dec
and
lea
mov
inc
dec
inc
inc
xor
push
lea
call
imul
add
inc
inc
mov
inc
sub
push
add
call
lea
mov
mov
dec
inc
dec
add
add
lea
mov
cmp
je
inc
int3
inc
dec
add
or
lea
movsbl
inc
sub
inc
inc
sub
lea
imul
dec
add
dec
dec
and
lea
imul
dec
sub
dec
inc
pop
add
ret
push
lea
mov
sub
dec
inc
dec
and
lea
mov
push
inc
add
push
dec
push
inc
push
xor
call
lea
push
mov
dec
inc
mov
add
mov
add
and
mov
lea
mov
test
je
inc
dec
dec
inc
or
lea
imul
inc
inc
mov
inc
inc
and
lea
mov
inc
inc
inc
repnz
inc
sub
add
lea
jmp
mov
inc
dec
inc
dec
sub
jmp
lea
movswl
dec
dec
dec
dec
pop
pop
ret
push
or
push
lea
call
mov
inc
inc
add
inc
sub
lea
mov
dec
inc
pop
ret
sub
inc
mov
sub
or
mov
lea
imul
mov
inc
inc
mov
add
inc
xor
or
lea
mov
mov
inc
inc
inc
sub
dec
sub
lea
imul
cmp
jb
inc
push
dec
sub
push
sub
and
push
lea
imul
mov
dec
dec
xor
dec
dec
xor
and
lea
xor
mov
add
push
inc
inc
xor
dec
xor
mov
lea
movsbl
mov
add
inc
movzbl
sub
dec
xor
lea
add
mov
dec
add
inc
dec
movzbl
dec
or
lea
imul
inc
dec
dec
dec
inc
xor
lea
mov
imul
dec
add
inc
dec
or
cmp
jb
lea
xor
mov
dec
mov
dec
dec
mov
inc
and
inc
lea
jmp
push
mov
mov
inc
call
dec
inc
dec
and
lea
mov
call
call
call
call
call
inc
push
sub
dec
dec
and
lea
call
imul
dec
inc
inc
dec
or
lea
call
inc
add
call
inc
dec
add
lea
imul
dec
dec
inc
inc
pop
or
lea
mov
add
add
pop
dec
dec
pop
sub
sub
lea
mov
pop
add
add
dec
add
sub
lea
mov
add
pop
dec
add
pop
inc
xor
mov
lea
movswl
call
inc
inc
dec
add
ret
and
lea
push
movswl
inc
push
inc
sub
push
dec
sub
push
lea
mov
push
add
dec
mov
sub
sub
push
add
ret
push
lea
movsbl
dec
push
add
call
inc
inc
or
lea
movzwl
inc
dec
sub
inc
sub
lea
dec
inc
sub
inc
or
lea
imul
sub
add
dec
inc
xor
lea
mov
jmp
lret
data16
mov
clc
add
test
into
mov
mov
das
std
repnz
pop
movsb
andps
adc
mov
sbb
repz
sbbl
push
iret
subl
pop
jecxz
scas
add
sbb
mov
add
xchg
js
cs
pushf
pop
iret
mov
lret
jg
xchg
repz
mov
lds
pop
fs
cmp
pop
fdivrl
bound
rclb
sub
xchg
loop
in
filds
mov
adc
inc
dec
mov
stos
test
dec
fadd
mov
leave
cs
or
out
out
hlt
into
jecxz
add
jl
das
lods
fnstsw
int
je
loope
daa
dec
pop
stos
and
adc
and
inc
add
sti
sub
ljmp
popa
loope
roll
mov
sti
mov
cwtl
jnp
xor
jge
mov
push
xchg
adc
mov
sbb
push
push
add
xor
les
sub
sub
pusha
and
cli
dec
pop
jbe
jnp
subb
pop
test
inc
lcall
cltd
pop
push
add
insb
add
lods
or
cmpl
xor
mov
aad
cmc
cs
ss
and
inc
dec
cmpsl
cmc
jmp
inc
jg
mov
xchg
dec
adc
inc
in
data16
jbe
push
cmc
cmp
and
pushl
and
sbb
lea
pop
sahf
mov
inc
jmp
call
insl
inc
xor
arpl
lods
in
mov
or
lcall
xor
cmc
jo
add
cld
call
xor
push
adc
mov
mov
push
repnz
mov
or
push
in
arpl
stos
push
imul
xchg
test
popa
push
repnz
mov
shrb
sti
mov
gs
rcrb
les
popa
pop
inc
test
in
dec
fbld
cmp
adcb
icebp
jmp
jge
mov
popf
lods
cmpsl
jl
loopne
es
xchg
sbb
imul
sub
in
popf
mov
jge
push
test
lds
fld
subl
mov
out
cld
inc
cmc
mov
roll
dec
test
lret
into
cwtl
adcl
repz
test
inc
popl
pop
sbb
mov
jmp
les
out
outsb
xor
out
push
lret
jae
lahf
pop
push
inc
mov
repz
cmpb
adc
jecxz
ret
sarl
sub
and
cmp
cld
and
sub
and
cmp
fdivs
cmp
xor
dec
cmp
or
mov
add
mov
fidivrl
adc
lds
dec
clc
pop
cmc
imul
push
mov
xor
jo
mov
pop
sub
pushf
icebp
stc
mov
mov
push
ja
ljmp
push
push
stos
and
xlat
test
jns
out
xchg
leave
imul
jnp
gs
and
ret
shll
das
addl
adc
ss
or
out
orl
ret
xchg
es
add
scas
add
jg
pop
pop
mov
aad
cld
pusha
pop
jp
nop
hlt
fnstenv
xchg
dec
sub
push
pop
test
rclb
jl
inc
out
sbb
shlb
in
or
add
test
jo
pop
cmc
jnp
xchg
inc
sarb
push
arpl
arpl
stos
das
cmp
push
mov
sub
imul
sbb
and
movsl
mov
mov
nop
mov
cli
and
mov
iret
push
clc
add
daa
jmp
add
test
xchg
jbe
fsts
jecxz
dec
lret
mov
popf
jecxz
sub
xor
sti
pop
sbb
rclb
out
mov
hlt
fs
idivl
jnp
in
xor
push
adc
lea
mov
xchg
mov
push
mov
ret
add
lret
daa
xor
mov
push
aam
sbb
ja
and
cmp
pop
sbb
mov
xor
jne
push
lock
dec
dec
ja
daa
loop
sub
stc
cmp
ja
inc
fsubrl
push
adc
popf
ret
jo
push
cmp
dec
or
mov
ljmp
js
fildll
cmp
add
push
push
inc
push
fcom
clc
push
adc
out
std
mov
faddl
hlt
shlb
fdivl
das
or
mov
imul
pop
dec
dec
jno
fisttpll
or
or
add
dec
jnp
cltd
out
nop
jmp
cli
scas
rcl
inc
and
mov
dec
sbb
leave
dec
enter
dec
fidivrl
stos
or
cltd
mov
lret
out
push
xorb
inc
xchg
mov
bnd
sti
imul
pop
jnp
in
pop
lods
aad
sub
shl
lret
mov
mov
pop
jl
faddl
decb
js
xlat
xchg
and
pop
inc
push
adc
pop
jge
dec
test
lret
or
aad
fs
repz
mov
bnd
xorb
jmp
add
dec
cli
fs
shll
pop
push
mov
rorl
adc
lods
jne
dec
push
xor
outsb
sbb
xor
outsb
add
sahf
cmp
test
repnz
mov
test
mov
out
mov
cmpsb
leave
cmp
scas
cli
xor
int
sbb
rcl
xchg
add
shr
jl
jge
adc
cmp
mov
sub
scas
dec
push
jns
push
iret
xchg
and
mov
outsl
push
enter
ss
push
cs
push
rcrl
outsl
adc
xor
mov
push
and
mov
stos
inc
adcl
sarb
bound
xchg
pop
test
cmp
repz
mov
sub
or
cs
mov
push
int
stc
aad
jo
add
inc
dec
std
jl
cmp
cwtl
or
dec
cmp
stos
xchg
call
rorl
jbe
mov
sub
test
out
leave
sti
add
mov
dec
outsl
cmp
sbb
shlb
and
adc
insl
into
in
aam
fwait
or
xlat
push
ja
or
add
jmp
mov
in
fiadds
pop
sub
mov
add
outsb
sub
cmp
outsl
adc
jmp
pop
in
divl
mov
fisubrs
scas
nop
test
inc
jle
testl
lds
lahf
scas
inc
iret
and
lahf
dec
gs
movsb
jecxz
sbb
pop
loope
fs
push
pop
fiaddl
push
or
mov
repz
xor
in
iret
aad
insl
lock
pop
mov
sub
xor
adc
add
nop
inc
in
rcl
inc
cmp
dec
cmpsb
in
mov
inc
xchg
repnz
sbb
mov
push
enter
sub
adc
jb
inc
mov
push
pop
add
cli
or
jle
mov
stc
fmuls
jne
sbb
jle
inc
out
xchg
call
sub
fsubp
fstps
mov
push
sub
xchg
or
ss
mov
and
fstpl
cmp
or
lods
dec
fldcw
cmp
adc
mov
ljmp
lcall
dec
sbb
cld
lahf
pushf
in
jns
sbb
and
jnp
push
je
xor
and
and
ret
das
xchg
push
xchg
inc
insl
mov
mov
push
xchg
scas
es
fdivs
addr16
cmp
mov
xchg
out
lret
int
sbb
adc
mov
mov
sub
mov
cs
into
fimuls
sub
orb
sbb
pand
imull
out
push
and
xlat
sub
cmc
push
into
scas
movb
lcall
inc
cmp
pusha
shr
out
add
pop
or
dec
mov
je
orb
adc
adc
pushl
clc
gs
sub
dec
xor
outsl
inc
ret
ret
fdivrs
loopne
addr16
xchg
arpl
pop
pop
lret
dec
test
pop
loop
stos
ret
loop
jle
xchg
daa
and
in
sub
jge
xchg
mov
fldt
sub
jno
cltd
sub
xchg
dec
lret
insl
into
push
or
sbb
sbb
push
and
out
or
adc
cmp
cmp
sti
jne
ss
rorl
test
pop
cli
xor
push
test
cwtl
out
push
pop
jae
lret
ror
cmp
imul
icebp
and
in
jge
mov
adc
pusha
add
js
mov
mov
xchg
out
cli
cmpsl
dec
jmp
mov
push
jecxz
sub
movsl
fstps
inc
icebp
sbb
xor
mov
lret
jmp
imul
add
and
pop
push
fstl
andl
xchg
push
rcll
jp
ja
lret
lock
mov
or
cmc
lcall
pop
push
or
rcr
loop
xchg
imul
pop
mov
dec
sbb
jbe
repnz
les
pop
outsb
push
subb
push
fistl
iret
stos
repnz
xchg
dec
int
xlat
test
jl
push
pusha
test
jne
adc
cmp
or
sub
jle
in
jo
call
or
test
mov
pop
cmp
sbb
jno
mov
inc
pop
push
cwtl
jmp
xchg
into
mov
add
pushf
mov
and
jmp
sbb
fabs
ljmp
add
pop
push
pop
into
pop
in
mov
xor
dec
mov
mov
push
mov
sub
push
dec
jecxz
int
or
push
scas
lcall
int3
shll
lods
dec
in
cmc
jns
lea
aad
in
data16
adc
loopne
cmpl
lods
mov
cmpb
inc
ds
xadd
outsl
dec
aas
lock
in
push
or
insb
mov
adc
mov
mov
cwtl
cmp
loop
mov
cli
mov
out
xchg
loopne
test
fs
inc
push
sbb
cltd
and
adc
out
jp
mov
jns
mov
push
push
jmp
bound
adc
push
out
jae
push
add
mov
push
pop
out
jae
pop
or
cmp
into
jp
mov
jo
gs
jge
icebp
sbb
adc
xchg
push
jmp
push
movsb
nop
leave
in
cwtl
in
pop
push
pop
adc
xor
dec
jne
aad
jbe
test
push
leave
stos
mov
jns
loope
int
or
cwtl
jl
or
fadds
subl
and
in
xor
stc
cmp
rorb
out
loope
push
lret
fists
arpl
dec
jg
fdivs
xchg
jbe
xchg
xor
inc
mov
jl
jecxz
hlt
push
xor
leave
fldl
xchg
aaa
inc
adc
je
or
dec
cmpl
ret
or
sbb
mov
sub
addr16
das
insl
jl
inc
arpl
rol
lds
es
adc
lcall
enter
mov
xchg
ds
inc
mov
cmp
das
pop
loope
in
cmp
rorb
hlt
xor
dec
lahf
loop
lret
jno
out
push
or
dec
add
fnstcw
xor
test
into
mov
push
jo
daa
xchg
ja
or
sbb
pop
insl
push
bnd
ror
dec
inc
jae
xor
sbb
fisttpl
lods
mov
cmp
pop
sub
mov
jno
jmp
xchg
mov
rclb
cmp
fildl
inc
inc
subl
sbb
inc
or
cld
mov
and
mov
mov
and
insb
rorb
sub
repnz
lods
jbe
shll
add
pop
fiadds
add
das
jne
cli
clc
jno
push
push
lods
scas
jg
sbb
cmp
sahf
cwtl
ja
hlt
push
cltd
or
cmp
loope
sub
cs
sbb
and
add
push
pop
int3
jb
mov
push
pop
add
setne
xchg
sub
sbb
dec
call
scas
push
cmpsb
and
jle
mov
sbb
jb
pop
sub
mov
cmc
pop
stos
imul
or
pop
pop
mov
lcall
adc
mov
mov
add
pop
xor
int3
shlb
std
in
sbb
push
std
jns
pusha
iret
mov
cmpb
icebp
jo
fsubrs
xchg
dec
stos
sarl
pop
sbb
outsl
hlt
stc
rorb
jecxz
mov
cmpsb
mov
sti
pop
mov
lock
lods
iret
mov
nop
pop
imul
adc
rcr
jge
jge
loope
inc
jl
mov
push
std
jp
call
sti
push
lock
mov
sub
jno
mov
push
ss
mov
lcall
in
mov
hlt
lahf
ret
sub
enter
jp
loope
mov
lods
sti
jge
out
fadd
filds
lcall
rorb
xor
in
pop
jae
sahf
mov
pop
add
aas
imul
insb
je
out
loope
mov
std
mov
xchg
push
enter
mov
mov
pop
repnz
shrb
push
cmp
push
mov
mov
pop
das
jb
xchg
mov
les
data16
dec
sbb
pop
adc
jae
jle
das
int
sbb
icebp
cmpl
in
mov
push
mov
sub
std
outsb
jae
xor
pop
mov
mov
fnsave
iret
mov
icebp
inc
repnz
rorl
data16
adc
adc
inc
aad
push
shlb
mov
dec
xor
pop
loop
loope
inc
hlt
lahf
rcll
insl
inc
test
push
scas
mov
test
pop
fistl
cwtl
call
jo
sar
dec
xor
jge
sbb
std
jbe
and
imul
jg
add
and
or
push
loope
rorb
xchg
lret
or
sti
int3
sub
add
in
inc
std
outsl
int
xor
in
jb
cs
xchg
or
cmp
arpl
pushf
es
dec
nop
push
lea
jmp
push
or
jne
adc
mov
xchg
pop
scas
cmp
mov
inc
pop
outsb
dec
jl
or
push
inc
sbb
xlat
jp
adc
movsb
pop
push
mov
out
sbb
or
in
ret
jnp
lret
push
dec
mov
lret
lds
push
jge
xlat
arpl
js
ljmp
mov
sbb
sbb
ds
adc
sbb
jp
xchg
aas
ja
cmp
addr16
int3
test
mov
fistps
stc
mov
push
ja
sub
sub
add
faddp
sbb
xor
pushf
lds
dec
bound
jecxz
fcomps
dec
fadd
cmpsl
icebp
frstor
fcompl
xchg
cli
mov
ja
fnstenv
shlb
and
push
xlat
push
lcall
mov
and
fistps
rcr
cmpsb
jge
mov
mov
test
push
and
jmp
mov
mov
xchg
imul
xorb
xchg
iret
fmuls
xchg
sbb
je
pop
ljmp
mov
shrb
cmp
add
mov
xchg
mov
aad
arpl
add
add
and
iret
xor
and
xor
jg
mov
mov
stos
dec
aas
jbe
push
cmp
loopne
insb
jne
and
sbb
mov
sbb
inc
jmp
in
add
fwait
adc
arpl
loop
mov
outsb
ja
cmp
push
out
push
adc
cmp
aaa
in
mov
stc
dec
dec
add
popa
push
pop
jns
xor
loope
sbb
add
into
and
imul
inc
rolb
imul
lcall
push
xchg
into
stos
leave
or
cmp
out
mov
or
rcr
and
movq
in
sub
dec
pusha
add
lret
sbb
pusha
inc
jl
daa
stos
ss
and
add
cmp
and
js
mov
mov
mov
and
cltd
ds
test
rorb
nop
fadd
lock
ficoml
aaa
dec
test
shlb
repnz
std
scas
fisttpl
pop
mov
lods
mov
dec
sbb
cli
shr
inc
xorl
or
inc
test
fs
push
mov
repz
in
fidivl
fldenv
jl
or
loope
fs
xor
push
dec
insl
and
dec
add
repnz
dec
or
pop
lods
and
std
in
test
sub
loop
add
dec
jne
popf
ret
js
test
gs
movsl
push
lock
xchg
rcrb
add
out
fs
xchg
loopne
bnd
mov
push
cli
xor
jnp
popl
add
or
mov
xchg
push
jmp
movsl
popa
fxch
inc
and
mov
fucom
mov
jne
fistl
bnd
add
and
test
push
lods
loop
fdivs
push
pop
sub
mov
icebp
mov
inc
es
in
or
xchg
nop
int3
scas
fisubrs
fwait
test
adc
cmp
scas
in
shll
stos
cmp
xor
rcrl
sbb
in
outsl
lea
lock
jge
cmp
repz
xor
test
xchg
fldl
aas
call
jne
xchg
out
jbe
add
or
adc
fstpt
xor
insl
call
outsb
xchg
dec
out
mov
mov
push
shrl
loopne
and
jmp
adc
xor
nop
mov
mov
pop
mov
repnz
mov
cwtl
xor
inc
lahf
jmp
bound
mov
fcompl
enter
xor
pop
fisubs
dec
push
sub
add
adc
adc
jecxz
out
xchg
lock
aas
clc
loopne
nop
iret
jbe
lods
mov
cmpsb
dec
mov
mov
push
xor
scas
jne
mov
fisttps
imul
or
rcrl
bound
sbb
aad
xchg
jecxz
test
push
mov
lods
stos
into
push
popf
jae
push
loope
lods
jae
cmp
lock
fisubrl
lods
adc
movsb
test
pushf
shlb
fwait
mov
mov
xor
cltd
push
mov
test
sbb
jmp
cltd
mov
stos
cmp
jp
pushf
xchg
push
push
fcoml
dec
mov
lock
xorb
sbb
adc
and
jbe
iret
or
jae
dec
iret
push
aad
and
inc
lcall
pop
or
out
dec
gs
rorl
add
mov
in
loopne
shrb
into
lods
cmpsl
adc
in
sahf
fdivrs
mov
mov
ret
out
mov
lods
mov
inc
pushf
adc
int
push
pusha
nop
ds
sub
add
stc
sub
pop
mov
repz
sub
adc
ljmp
loopne
add
adc
iret
push
fsubrs
push
xor
repnz
jecxz
in
fdivr
sbb
movsb
pop
cmp
mov
xor
sbb
sbb
mov
fs
das
adc
sub
cmpsl
sub
xorl
mov
inc
or
je
jae
addr16
push
mov
xchg
and
out
adc
jecxz
aad
rcrb
inc
cmp
fs
cmpsl
andb
insb
pop
pop
or
jg
pop
add
cmp
pop
shlb
xchg
push
cmpsb
xchg
aaa
hlt
pop
inc
dec
lret
cwtl
inc
push
and
mov
fimull
enter
aaa
jns
movsl
les
jne
sbb
iret
and
cmp
lret
iret
cmpsb
jp
mov
or
sbb
mov
loop
sbbl
idivb
hlt
dec
outsb
loope
cmp
enter
adc
and
jmp
cmp
xor
dec
add
jmp
jnp
xlat
mov
pop
jecxz
pop
or
jnp
es
imul
pop
iret
out
cmp
push
mov
push
subl
jnp
ds
add
and
out
jns
aas
sarb
sbb
xchg
fwait
xchg
loop
and
repz
fsts
ret
sub
inc
mov
out
lahf
mov
cmp
fs
jle
jecxz
xor
jp
xor
cmpsb
sub
mul
cmp
daa
pop
cmp
je
addl
test
push
dec
stc
in
sub
mov
dec
mov
jb
mov
add
out
inc
fisubrl
cltd
xchg
xchg
mov
into
push
xor
xor
inc
adc
push
mov
xchg
cmp
push
icebp
jge
je
bound
cmp
mov
je
frstor
mov
xchg
cs
lds
and
pop
or
int
xchg
dec
cmp
cmp
sub
or
and
jecxz
aas
and
mov
xchg
rclb
je
inc
jg
jnp
popa
sbb
js
xor
dec
mov
int3
jecxz
arpl
inc
push
xchg
hlt
int
dec
call
popa
and
sahf
xor
mov
push
scas
cmc
cltd
aaa
cmp
sbb
ret
pop
js
xchg
and
push
xlat
out
or
repz
rol
dec
imul
inc
insl
xor
sub
or
xchg
movlhps
lods
add
in
test
dec
in
hlt
dec
pop
xor
mov
jg
push
insl
fmuls
xchg
cmp
push
adc
daa
mov
repz
cmp
push
or
add
xchg
rolb
outsl
jecxz
fdivl
les
loop
inc
dec
xchg
add
mov
inc
xchg
add
shll
pushf
cmp
xchg
mov
nop
and
mov
sub
and
xor
rolb
decb
pop
jmp
outsb
dec
stc
or
shr
mov
shlb
lds
daa
lret
xor
pop
dec
repnz
xchg
push
ficomps
xor
cmp
dec
test
cmp
xor
xorl
shlb
in
sbb
jbe
cmpsb
cmp
sti
rorl
nop
aaa
xchg
pusha
inc
movsl
jae
mov
xchg
mov
and
mov
dec
int3
or
lock
and
mov
or
testl
pop
sti
es
ja
loop
popa
shrl
in
repnz
mov
loopne
fwait
xchg
jbe
lea
inc
mov
pop
or
inc
dec
xchg
pop
or
mov
fsubr
sti
mov
shll
cmc
pop
enter
ljmp
imull
stc
or
popa
pop
in
push
mov
jne
push
cmp
jl
test
cltd
inc
jbe
sbb
fldenv
mov
loope
dec
push
dec
mov
ljmp
xchg
icebp
jb
ljmp
or
and
pushf
pop
out
fists
pop
xchg
bound
cmp
sub
jg
stos
out
cltd
nop
dec
in
adc
iret
pop
sbb
dec
data16
fists
out
clc
into
into
enter
cmc
in
nop
mov
pop
dec
xchg
jmp
pusha
or
fwait
sub
jae
stc
fidivl
mov
cs
or
int3
push
cmc
pop
int3
out
int3
jb
mov
repz
mov
shll
imul
sbb
addr16
adc
cs
xor
mov
cmp
es
lea
add
nop
mov
fwait
jge
shlb
ja
add
popl
aas
leave
or
popa
pop
sub
aas
int3
jno
sbb
stos
arpl
push
cmpl
adc
lahf
shrl
hlt
or
mov
cmp
das
icebp
pop
cmpl
mov
inc
xchg
mov
gs
mov
pusha
mov
cmp
adc
bsf
jnp
scas
cmp
pop
xchg
hlt
and
nop
or
pop
bound
movsl
test
or
cwtl
ja
mov
mov
and
hlt
test
xchg
enter
jl
cmpsl
jae
mov
sub
pop
adc
mov
pushf
jbe
xchg
xor
jbe
fldl
lods
adc
or
js
pop
insb
ret
and
es
lock
sbb
movl
lea
sub
mov
outsl
test
scas
push
lret
jle
adc
xchg
jbe
inc
jle
push
scas
mov
jmp
or
movsb
fistpll
xor
or
sub
loopne
dec
imul
xchg
push
mov
mov
pop
dec
sub
inc
xor
jno
cmp
loop
cli
dec
lret
pushf
adc
sarl
push
aam
loop
xchg
pop
mull
jmp
add
mov
xrelease
ret
sti
dec
bound
insb
icebp
js
jo
ljmp
fnstcw
fistl
rcrb
arpl
fimull
pop
fs
mul
push
lods
stos
cltd
cli
sbb
and
inc
xchg
jbe
sub
out
pop
std
jmp
idiv
cld
mov
jns
cmpsl
test
test
daa
iret
into
cmp
push
test
stos
inc
cld
aaa
in
in
addr16
je
dec
push
cmc
repz
or
jnp
cmpsl
scas
and
adc
xchg
add
jle
jo
mulb
lret
cmpb
int
xor
xchg
pop
mov
int3
mov
push
mov
add
fs
insb
jp
sbb
mov
je
int
fwait
arpl
jg
pop
data16
mov
or
sub
mov
out
arpl
movnti
cwtl
lret
jno
lahf
arpl
les
jge
lock
lcall
aam
js
mov
bound
ret
xlat
sub
push
bound
jl
jo
mov
dec
xchg
clc
pop
cli
scas
jnp
imul
aam
and
xchg
in
xlat
jmp
xchg
fs
cmc
popa
push
clc
cmp
add
rolb
push
int3
stc
push
mov
sbb
xor
nop
ret
fadds
dec
dec
gs
push
in
popf
push
rcl
lahf
in
pop
pusha
fsubr
cli
adc
in
dec
cmp
aad
out
mov
inc
imul
mov
stos
sub
and
mov
jg
jns
pop
xchg
pop
andb
jmp
cli
out
mov
insl
push
addr16
mov
ret
add
xor
adc
mov
dec
inc
iret
mov
mov
aad
mov
pushf
addr16
ds
in
ja
sbb
add
fsubp
sbb
sub
xchg
sub
outsb
push
sahf
xchg
adc
dec
pop
data16
insl
cmpb
test
movsl
fldz
test
xor
es
jmp
stc
in
pop
sahf
nop
enter
stos
xchg
pop
push
cmp
movq
and
and
outsb
sbb
xor
daa
xorb
or
xor
rcrl
mov
in
in
adc
dec
or
push
push
pop
scas
jbe
loop
jns
pop
xor
mov
mov
or
sbb
push
int3
stos
aad
out
dec
push
movsl
cmp
cld
cltd
das
jl
iret
nop
dec
jae
arpl
sbb
push
pop
scas
pavgw
sbb
loope
jl
push
lea
mov
push
xchg
mov
pop
lock
jbe
je
shll
je
popf
inc
hlt
orl
sbb
aas
shrl
lods
jge
sbb
xorb
test
sti
adc
xchg
jne
cmp
xor
fmull
repnz
xchg
inc
mov
push
cs
or
popf
in
mov
hlt
js
loope
mov
xchg
inc
movsl
ret
aaa
sahf
add
pop
pop
dec
rcrb
push
add
into
or
add
aad
fistps
and
mov
inc
fbstp
imul
push
add
mov
repnz
mov
lock
and
lahf
push
sarl
push
jp
inc
out
mov
jne
sahf
inc
mov
adc
jne
dec
mov
sub
andl
and
les
mov
sub
adc
and
hlt
sub
scas
jne
int3
and
gs
push
jno
testb
outsb
mov
pop
inc
push
js
fs
mov
push
adc
shlb
fisttpl
dec
movsb
lds
insl
pusha
xor
in
jg
iret
das
mov
divb
icebp
cli
xor
ds
mov
xor
iret
out
jnp
mov
inc
out
rcl
mov
cli
pop
iret
dec
mov
test
adc
daa
rolb
pop
fadds
push
mov
dec
mov
pop
push
cs
subb
cmp
and
rorl
mov
in
loopne
in
idivb
popf
jnp
adc
orb
push
loop
dec
inc
enter
in
xchg
mov
cmp
fdivl
jl
sbb
pop
adc
jmp
sub
rolb
push
pextrw
and
sahf
lret
add
sub
daa
pop
ret
daa
ss
nop
clc
and
aas
sti
roll
push
test
mov
scas
jns
add
add
cmp
jo
movsb
push
mov
fnstenv
add
xchg
lods
in
jo
inc
clc
and
smsw
scas
adc
add
ljmp
add
jp
and
incl
loop
adc
in
fsubr
jno
jmp
jns
stos
mov
outsl
fcompl
aad
gs
leave
outsb
mov
call
cli
rorl
xor
mov
imul
cwtl
lds
fisubl
push
inc
jb
jmp
arpl
sarb
dec
and
mov
mov
loope
clc
cwtl
xchg
cmp
pop
out
sbb
call
push
outsl
vmovsd
pop
int
jp
cwtl
int
cli
cwtl
xchg
incb
xor
sbbb
outsl
push
and
and
test
lea
into
ss
outsb
sub
mov
sub
add
jecxz
cld
sub
movsl
stc
jns
mov
mov
or
cmpsl
push
das
dec
mov
ds
bound
aas
inc
ds
or
lods
push
cwtl
mov
add
idivb
out
fisttpll
outsl
lds
mov
push
dec
inc
or
dec
mov
sub
xor
jl
inc
pop
pop
fisubs
mov
stos
jns
sahf
and
adc
insl
cmpsl
pop
xchg
or
insl
pop
int
mov
pop
out
sahf
cmc
or
mov
cmpl
or
xor
adc
lods
arpl
sahf
out
mov
cmp
cmp
fisubrs
cmpsb
lahf
push
sbb
fistl
mov
and
mov
test
out
js
cmp
add
mov
sbb
movsb
dec
fadds
je
mov
add
push
push
repnz
xchg
push
cmpsb
inc
daa
sub
sbb
or
dec
mov
aaa
and
cmc
and
fdivrl
and
push
lods
pop
rorb
inc
fsubs
lods
push
aad
inc
mov
leave
popf
scas
push
sbb
pop
movsl
and
pop
adc
pop
mov
std
sarb
mov
and
jp
push
xlat
in
insl
out
out
outsl
data16
mov
mov
mulb
xchg
call
fcmovne
adc
mov
js
outsl
sahf
cli
xchg
and
mov
cmp
push
outsl
jmp
or
cs
pop
and
outsl
jmp
mov
test
inc
test
aaa
movsb
cmp
out
daa
es
pop
mov
mov
js
adc
popa
pop
mov
mov
lea
xor
xchg
mov
and
cs
sub
pop
sub
scas
dec
ret
test
in
or
mov
dec
mov
inc
xorb
sub
test
push
mov
inc
fs
cmp
int3
jecxz
rcrb
push
pop
and
or
inc
adc
mov
inc
fwait
jb
aad
loop
mov
sbb
jns
mov
mov
call
pop
pop
rcr
out
pop
push
push
mov
enter
repnz
test
xchg
in
add
rolb
jmp
aad
jbe
addl
jge
out
aaa
addb
pop
push
adc
in
aad
aaa
pop
into
mov
insb
fisubrs
ret
mov
in
cmp
cmp
aaa
dec
ss
sbb
pop
cmp
jecxz
jno
loopne
ss
push
add
push
lods
fimull
fiadds
push
adc
mov
pop
or
ficoms
sbb
pushl
je
mov
cwtl
cmpsl
jo
pop
popa
dec
jmp
sbb
mov
shlb
and
add
call
test
adc
sub
out
jmp
arpl
lret
mov
cmp
and
inc
les
or
fstpt
popa
outsl
inc
andb
mov
jl
imul
push
xchg
addr16
outsb
mov
nop
ss
pop
mov
jg
in
outsb
stos
pop
push
nop
dec
lret
int
jp
outsl
mov
jns
push
and
mov
test
push
lock
sbb
sub
push
add
aas
mov
adc
inc
and
dec
sbbb
push
pushf
data16
nop
xchg
xor
stc
psllq
fnstenv
ljmp
leave
lahf
adc
lcall
mov
xor
fdivrs
jo
inc
mov
ss
in
loope
pop
hlt
scas
sbb
mov
into
lods
sub
in
out
test
xchg
push
xchg
lods
mov
mov
pop
std
gs
push
rcll
add
lds
clc
sbb
frstpm(287
dec
add
icebp
jnp
test
mov
mov
mov
jo
pop
rolb
xchg
mov
aas
push
outsb
pop
mov
jb
and
xchg
inc
push
fdivl
xor
mov
and
cmp
mov
cmp
int
jae
adc
jg
or
or
sbb
cmpl
addr16
int3
scas
push
xchg
mov
xchg
test
mov
fwait
lcall
fwait
fwait
or
fistl
jnp
push
pop
mov
sub
lea
or
mov
and
jmp
mov
sbb
and
sbb
pop
mov
mov
sub
jmp
stos
inc
int
jecxz
cmp
pop
or
repz
iret
fisubrl
dec
push
xor
enter
sub
stos
aas
aas
xlat
jle
or
push
pop
in
mov
cmpsb
inc
inc
mov
xchg
mov
sarl
cmp
fisttpl
lods
pop
movsb
jne
add
lret
cmp
inc
xor
and
ljmp
gs
pop
enter
mov
xor
imul
andl
andb
ffreep
pop
fs
vmovaps
add
inc
xor
jmp
push
mov
je
in
flds
sbb
pop
inc
stos
enter
lcall
std
and
iret
push
xor
cs
popf
psrlq
add
scas
mov
or
jb
testl
cmc
rclb
fs
xchg
fnstcw
outsb
jge
mov
mov
insl
mov
dec
adc
mov
sbb
adc
loop
sub
in
jno
in
mov
pop
es
jecxz
into
fwait
icebp
push
unpckhps
sub
sub
sbb
jl
xor
roll
xor
mov
cmc
mov
popa
push
jb
xor
insl
or
sbb
icebp
out
testl
dec
push
xchg
fs
push
imul
unpckhps
add
mov
iret
adc
pop
mov
mov
dec
xchg
dec
das
ds
xchg
movsl
scas
mov
mov
cltd
fstpt
or
outsb
xor
fs
and
jae
dec
shrl
js
outsl
sbb
mov
cmp
xchg
loop
xchg
dec
je
sub
mov
popf
cmp
insl
fxch
jo
or
fwait
mov
or
pop
rcl
push
std
sub
or
mov
mov
xchg
fninit
je
cmp
and
icebp
sub
mov
shl
lods
mov
cli
out
mov
pop
out
imul
lahf
xchg
and
in
add
inc
insl
lock
cltd
mov
xchg
adc
push
stos
xor
pop
nop
hlt
sbb
push
cvttps2pi
inc
pop
imul
xchg
xor
cmpsl
test
hlt
pop
cld
ljmp
imul
cltd
das
insb
les
jle
xor
fstpt
cwtl
inc
xor
xchg
mov
sbbl
adc
loop
enter
les
push
dec
call
adc
jae
cmpsl
loop
repz
add
mov
je
roll
cmc
mov
stc
dec
arpl
and
ror
xlat
fcoml
lea
sbb
push
pop
sub
icebp
inc
push
mov
in
sti
loopne
stos
dec
addr16
cmpsl
mov
xchg
cmpsl
fs
mov
insl
repz
mov
lds
pop
and
outsl
sbb
mov
stc
mov
std
mov
sub
out
jp
lock
hlt
jb
sbb
cmp
jne
popa
inc
push
mov
cmpsl
add
dec
incb
add
scas
fdivrs
push
xchg
or
inc
mov
in
xchg
fs
inc
clc
stos
xchg
dec
mov
daa
mov
cld
fxch
movl
mov
mov
fadds
or
test
out
and
mov
outsb
aad
pushf
sbb
cmpsl
jo
adc
arpl
fiaddl
pop
iret
xabort
push
cmp
xchg
mov
add
fisttpll
mov
stos
mov
popf
add
adc
adc
addr16
pop
int3
lcall
popf
mov
adc
cmp
push
inc
mov
xchg
ljmp
and
jae
pop
ja
mov
or
jbe
push
add
mov
pop
sbb
xchg
je
cld
fldl2t
insl
movsl
or
sbb
jmp
dec
les
mov
leave
out
mov
and
sub
jle
mov
arpl
arpl
jno
push
cmp
pop
imul
ds
and
sbb
or
test
jecxz
push
mov
loop
xchg
jbe
add
push
jecxz
notl
jb
xchg
push
cmpb
mov
fs
mov
std
cmpsb
adc
sub
fsubl
in
addr16
cmp
ds
in
add
xchg
enter
add
push
pop
mov
sbb
nop
ds
pop
adc
ret
insl
inc
cwtl
xor
lcall
inc
mov
mov
insb
fsub
mov
jnp
test
jbe
in
xor
xorl
pop
and
jecxz
cmpl
fstpl
jno
iret
mov
mov
pop
mov
push
sbb
adc
outsl
mov
sahf
ja
inc
sbb
or
jb
movswl
movsb
xor
push
jmp
and
test
cwtl
stos
lds
cwtl
adc
dec
aam
push
fldl
mov
pop
lock
add
mov
daa
enter
lods
fwait
imul
addr16
mov
ljmp
xchg
test
idivb
movsl
mov
shl
shlb
pop
enter
test
out
xchg
in
or
sub
mov
adc
pop
imul
enter
jle
ja
out
jno
test
setge
andb
test
fmul
shrl
negb
jae
aam
sbb
int3
lods
mov
ss
add
xchg
cmp
and
aad
fdiv
mov
ret
mov
push
fs
adc
icebp
add
int3
sub
mov
or
pop
add
data16
fbld
mov
push
dec
ja
jns
lds
ja
push
pop
xchg
mov
je
mov
ret
data16
adc
fnstcw
sbb
leave
fisttpll
push
scas
lea
push
adc
xor
jo
cs
movb
mov
or
xlat
push
sbb
rorb
sbb
jne
dec
xchg
xlat
in
les
jo
jb
ficomps
mov
dec
rcll
sbb
lret
cmp
xor
and
int
push
jnp
dec
mov
lret
popa
andl
or
jns
stos
mov
dec
mov
lock
hlt
cmp
shlb
xlat
ficoml
popa
add
imul
in
in
js
push
pop
sbb
bnd
and
movsb
sbb
jnp
jae
into
sub
push
lret
js
jns
pop
repz
dec
call
jmp
nop
xchg
mov
sti
dec
imul
push
inc
jae
fmull
ret
cmp
sub
ja
shrb
jge
mov
out
add
and
mov
mov
scas
into
mov
outsl
and
pop
xor
icebp
push
sahf
icebp
fimuls
testl
enter
cltd
out
faddl
fucomip
aam
sub
notb
dec
push
pushf
fwait
pop
mov
sub
push
jb
dec
imul
mov
lds
xchg
cmp
jl
or
lock
aad
adc
cmp
int3
xor
call
ss
sbb
outsl
cmp
ljmp
std
dec
movsl
xchg
and
adc
xchg
stc
test
sub
in
inc
out
push
xchg
mov
js
fcoml
les
jne
mov
mov
xchg
loopne
test
xchg
xor
mov
enter
jmp
popf
fildll
sub
int3
mov
jle
add
out
cmp
shlb
in
jp
jb
xor
clc
stc
rcll
cwtl
add
and
loopne
jge
inc
aam
adc
jge
xchg
in
push
xchg
mov
pushf
push
loopne
pop
js
or
clc
lcall
aam
cld
cltd
xchg
in
js
push
mov
dec
sbb
cmp
ret
ffreep
jecxz
dec
sbb
jp,pn
ret
sbb
jmp
jecxz
popf
sub
xor
test
js
sub
fnstcw
dec
xor
rcrb
sbb
lcall
hlt
push
xchg
lret
mov
and
push
les
sbb
dec
pop
mov
movsb
pop
fnsave
add
call
fists
sbb
fwait
into
or
test
and
addl
arpl
cmpsb
ja
lock
stos
or
mov
adc
cmc
test
ss
inc
cmp
inc
int
xchg
mov
das
fistpll
stc
in
and
xchg
mov
push
and
mov
mov
sub
xorl
sub
test
fistpl
outsl
data16
rcrl
test
lret
repz
imul
je
lock
jp
notl
out
lds
cltd
dec
mov
add
je
xchg
pop
repz
cs
daa
in
das
mov
movsb
xchg
iret
lahf
pop
bound
add
push
mov
scas
inc
sbb
push
jmp
fistl
ret
xchg
sub
and
mov
pop
imul
fisttpll
push
dec
cmp
xor
rorl
xchg
addr16
xchg
stos
ret
leave
insl
jg
cmp
das
pop
push
out
push
div
pop
cmpsl
pop
push
mulb
dec
inc
xor
in
push
add
sub
cs
shrl
mov
and
xchg
sarb
imul
add
daa
mov
pushf
enter
mov
xor
cli
sub
inc
jl
jecxz
test
mov
movsl
popa
dec
add
xlat
and
dec
cmp
ds
lcall
cmpsb
enter
jns
shr
sub
negl
leave
iret
inc
sahf
add
push
xor
mov
mov
jo
in
cltd
cli
lock
mov
mov
imul
jnp
ret
inc
mov
mov
cwtl
hlt
std
add
int3
jb
mov
or
rcll
cmp
mov
lahf
xor
sub
push
push
jge
sub
inc
fsubrl
or
pop
je
xor
in
mov
int
jle
loop
xor
cmpb
ret
sbb
jl
sbb
xchg
in
fcoms
out
push
and
xchg
mov
das
ja
sbb
js
fadds
stos
mov
sub
push
push
inc
and
repnz
xor
adc
jae
pop
aam
inc
pop
mov
aas
cmp
std
mull
pop
outsl
bound
aaa
fisttps
inc
cmpsl
mov
push
jo
into
mov
out
xchg
adc
in
jne
outsl
add
test
sub
dec
pmuludq
xchg
lods
iret
lret
cmp
bound
xor
and
sahf
add
sbb
xor
popf
fs
addb
and
movsl
ficoml
scas
mov
cmp
insb
lret
push
sub
out
xchg
les
mov
or
adc
mov
push
enter
repz
xchg
xchg
dec
aas
dec
push
daa
sbb
ret
pop
fstps
das
test
push
dec
pop
fcompl
add
dec
mov
inc
lcall
jg
test
outsb
ss
mov
lret
add
cmp
push
icebp
in
sbb
test
stos
gs
mov
jg
shlb
sub
insl
and
cwtl
lfs
lcall
jmp
loope
int
sbb
fucomip
pop
mov
cld
aad
push
insl
or
cmp
mov
xchg
sub
or
push
je
pop
popa
dec
icebp
mov
mov
mov
mov
sub
or
add
or
cmp
das
or
lret
leave
and
cwtl
fnstsw
daa
or
les
cmp
aad
xchg
inc
es
cmc
loope
lcall
enter
es
fisttpll
in
pop
aad
cmp
xlat
jo
add
mov
sub
test
pop
insl
mov
cmpsl
add
fs
repz
clc
addr16
inc
sbb
imul
push
pop
xchg
fs
add
mov
into
push
mov
jbe
ret
punpcklbw
iret
inc
cs
push
loope
mov
or
popa
repnz
and
pop
int3
loop
popf
push
out
jne
push
fwait
addb
adc
mov
adc
subb
mov
jb
xlat
cmp
jg
cs
mov
push
cmpsb
orl
mov
aaa
gs
sub
je
push
sub
sub
cltd
test
or
lahf
sub
aad
pusha
mov
pop
clc
lea
ret
jge
insl
rolb
pop
sbb
cmp
mov
or
decl
out
mov
scas
push
test
lret
pop
fisubl
pop
mov
inc
jnp
xchg
cli
scas
lock
fldl
fnstenv
inc
popa
fldcw
and
mov
or
in
sub
adcl
out
ret
sti
add
pop
mov
data16
push
pop
push
out
add
jo
mov
std
xor
rclb
test
or
ret
push
inc
and
orl
sub
bound
lods
sbb
jnp
leave
pop
and
outsl
loop
sub
xchg
je
sub
arpl
insl
sbb
idiv
jp
popa
nop
sbb
add
mov
lret
pop
push
inc
push
mov
inc
rclb
cmpsb
mov
cmp
jmp
popf
sbb
adc
mov
out
test
adc
popa
sub
in
ret
lret
dec
sub
push
ret
jmp
and
cld
inc
pop
cmpsl
repz
fiadds
lock
pop
inc
dec
xor
mov
sti
pop
jns
cli
out
sti
les
adc
inc
call
push
subb
test
mov
aas
cmp
xorl
cmpsl
fldcw
sti
cli
mov
test
lret
xchg
xchg
or
leave
std
bound
test
es
xchg
popa
inc
cld
mov
icebp
mov
stos
inc
jne
push
pop
call
add
fwait
lret
xor
rorb
sbb
imull
add
cwtl
jae
inc
mov
test
shlb
popa
dec
imul
mov
cmpsb
fcompl
mov
inc
in
cmp
adc
fs
pop
add
push
inc
push
fdivs
pop
rclb
ficompl
and
and
dec
lea
or
sub
es
mov
adc
gs
pop
adc
add
aas
sbb
adc
out
in
and
sub
sbb
mov
jmp
or
or
jg
and
and
jmp
push
inc
or
mov
or
xchg
inc
es
popa
jmp
push
shll
lods
jmp
ja
xor
or
cltd
in
rcl
xor
aas
cs
mov
call
data16
dec
movsl
fcompl
xchg
adc
pusha
inc
lods
push
sbb
add
sbb
xchg
mov
incb
out
icebp
push
ret
in
fldenv
insl
mov
out
idivb
push
add
inc
ja
mov
sbb
mov
stos
sub
push
or
adc
imul
dec
mov
test
pop
sahf
push
or
pop
mov
nop
sbb
jge
sbb
jle
ljmp
mov
xorb
sbb
mov
fimull
or
data16
sbb
dec
loopne
push
stc
test
das
fidivl
xor
ljmp
inc
sbbb
out
mov
shrb
mov
sbb
jnp
idivb
in
ljmp
cwtl
lcall
mov
imul
and
sub
test
movsl
int3
jae
cmp
insb
add
pop
fistpll
leave
sbb
jle
shlb
and
cltd
inc
popa
mov
pop
test
fadd
aas
mov
test
push
sbb
sub
loope
lds
mov
push
sub
es
xor
lret
sub
rorl
aam
pop
sahf
cmp
ds
out
stos
mov
ud1
xchg
push
sti
popf
jge
clc
inc
nop
into
push
inc
stos
push
stos
jp
mov
jp
mov
cmp
lods
xchg
inc
cmpsb
lret
push
dec
lret
inc
jl
cmpsb
jns
addb
pop
scas
dec
hlt
dec
cmp
fs
imulb
paddb
jne
cmp
push
sub
inc
test
loope
mov
lahf
iret
xor
adc
sub
jle
ds
in
arpl
shlb
xchg
inc
xlat
xchg
push
mov
fwait
mov
icebp
mov
lret
mov
sbb
adc
lods
int
stos
stc
hlt
xchg
mov
push
aad
or
movsb
scas
pusha
jne
cld
test
sbb
sbb
cmp
nop
pop
cmp
loope
sbb
icebp
or
aas
xor
dec
imul
popa
out
mov
inc
aam
lret
sbb
sahf
sarb
cmc
and
clc
add
gs
mov
cltd
rclb
jge
mov
insb
shll
inc
lret
nop
pop
add
out
pop
jbe
pop
pop
cltd
loopne
ds
divb
stc
pop
insb
push
or
test
mov
or
aam
in
inc
inc
mov
insl
idiv
mov
mov
test
repnz
mov
push
stos
push
dec
sti
leave
jle
fsubrl
xor
inc
mov
ret
or
test
add
dec
xchg
mov
loopne
bound
lods
fadds
out
mov
jmp
outsb
fs
dec
repnz
mov
adc
inc
or
inc
cs
lcall
sar
das
or
pop
in
outsl
cmc
movsb
push
mov
addr16
or
xchg
imul
test
xchg
outsb
adc
mov
cmp
sbb
add
mov
nop
fwait
or
cli
or
sub
mov
sub
dec
repz
push
mov
in
aam
dec
push
mov
push
sub
nop
mov
mov
bound
ficompl
push
nop
inc
cmc
loope
jae
enter
fldt
or
cli
jmp
hlt
add
push
int
cld
aam
mov
jo
jno
addl
sub
divb
sub
inc
sti
cmp
movsl
test
decl
cwtl
testb
aaa
push
ret
pop
imul
call
mov
mov
movb
stos
into
sbb
out
pop
and
out
nop
insb
cltd
lods
sub
out
pushf
aaa
aad
xchg
stc
xchg
jbe
stos
adc
or
push
pop
sbb
mov
gs
sahf
js
or
dec
push
ret
adc
rcr
xlat
arpl
xorb
mov
adc
xchg
in
popf
popf
nop
imul
jl
test
jmp
mov
out
adcl
popa
jle
add
mov
mov
mov
inc
sub
aas
fs
adc
xchg
jle
aam
xchg
mov
test
push
cmp
and
les
xchg
sbb
push
inc
and
outsl
jae
xor
or
mov
mov
nop
leave
jge
pop
push
lods
pmaxub
sub
inc
or
shrb
sub
mov
xchg
fmuls
je
mov
jns
jo
adc
push
ficomps
cmp
addb
sub
pop
xchg
mov
push
jg
and
mov
les
and
cmpsl
aaa
movsb
in
mov
cmpsb
xchg
mov
stos
inc
es
in
stc
imul
movsb
dec
inc
repz
xchg
sub
cli
xor
test
jae
es
cmp
xor
es
push
fcompl
mov
outsl
or
pusha
ror
sbb
mov
lock
fs
and
sub
pusha
pop
push
stos
arpl
xchg
cmpsl
xchg
insl
enter
rcrb
ja
adc
cmp
jl
aam
mov
mov
lcall
jno
ret
das
fdivrs
cmp
rcrl
loope
cmp
dec
xchg
add
adcb
ret
or
scas
shl
loope
mov
jge
cwtl
rclb
or
cmp
mov
cmp
pop
subl
xchg
push
test
insb
cmp
out
int
mov
mov
or
mov
fdivrl
cmc
push
cmp
or
test
int
jge
insb
mov
fadd
sub
mov
std
xchg
aas
sbb
mov
push
repnz
jo
xchg
jmp
call
sarl
repnz
mov
aas
cmp
lods
xlat
cwtl
xor
arpl
call
sahf
mov
mov
and
xlat
inc
mov
xchg
test
test
bound
xorl
in
movsl
push
loopne
cs
jg
cmp
bound
jp
lods
in
les
call
xchg
into
inc
shlb
clc
lss
sahf
cmp
sub
leave
pop
int
std
and
pop
inc
in
call
mov
sti
and
imul
sbb
xlat
mov
inc
dec
ljmp
mov
loop
pop
les
and
ret
push
sahf
push
xchg
mov
jp
loopne
jge
pop
repnz
add
les
xlat
cmp
stc
pusha
dec
pop
pop
jmp
loopne
inc
jg
or
test
mov
cmpl
dec
mov
mov
jo
or
test
lcall
rcrb
inc
paddsw
sbb
movsl
loopne
fwait
lods
in
jb
add
dec
sub
inc
mov
push
and
fildll
xor
mov
jecxz
cltd
xor
out
pop
aaa
push
push
frstor
mov
aas
inc
pop
sbbl
inc
std
dec
mov
aam
pushf
dec
adc
ja
cs
outsl
dec
mov
sbb
test
stos
mov
es
mov
repnz
xor
mov
cmp
lret
mov
push
jns
push
scas
ja
cmp
lahf
push
cmp
adc
mov
subl
jno
loopne
jg
movsl
pop
sub
sub
js
sahf
into
push
out
mov
add
in
adc
cltd
fs
sub
mov
mov
int3
lcall
ljmp
xchg
cmc
fisttpl
aas
jmp
xor
movsb
push
mov
negb
out
xchg
and
adc
cli
xchg
xor
jne
hlt
out
inc
push
xchg
lea
jbe,pn
add
das
jns
aam
cmpsl
in
mov
push
pop
xchg
dec
jp
mov
sbb
adc
add
out
mov
les
dec
shr
xor
sti
cmp
or
jno
out
sub
or
imul
push
adc
sbb
out
jecxz
dec
pop
and
push
shlb
jnp
cs
stos
cli
fcmovnb
nop
xchg
sarl
cmpl
inc
xchg
out
add
pop
iret
out
cmp
mov
imul
enter
and
scas
cmpsb
push
xchg
stos
jae
les
jne
cmc
lret
or
insl
push
les
out
ret
push
or
push
xor
xchg
jnp
or
fisttps
dec
pop
mov
int
or
addr16
mov
lock
or
in
inc
leave
mov
mov
xlat
pop
or
pop
in
xchg
lock
sbb
jnp
in
lret
mov
adc
jge
inc
xchg
dec
xor
mov
pop
call
lcall
xchg
mov
stc
cltd
cmpsl
fs
push
lret
mov
xor
pop
dec
cmpsl
add
cs
daa
push
aas
outsl
mov
std
push
rclb
sti
inc
and
inc
jae
cltd
sbb
or
test
and
sbb
inc
test
dec
adc
xchg
stc
dec
push
jg
xchg
adc
or
ljmp
jl
cmp
and
movsb
ret
sub
jno
cmpsb
jb
sub
pop
sbb
ds
and
mov
mov
test
pusha
cmp
jecxz
fistl
lods
call
jl
lret
cmovo
adc
shlb
push
xchg
mov
insb
adc
int3
sahf
dec
mov
xor
popa
adc
push
mov
mov
aam
jno
jp
rclb
mov
insb
xor
out
clc
sbb
ljmpw
add
gs
sub
scas
sbb
in
into
push
into
cmp
iret
imul
pop
lret
mov
hlt
sbb
outsb
stos
mov
mov
sbbb
mov
add
jg
insl
adc
add
adc
addr16
and
xor
das
add
ret
sbbb
mov
std
jecxz
aas
add
sub
daa
hlt
mov
idivb
data16
rcrb
sbb
mov
aaa
jmp
test
xchg
adc
fbstp
lock
aad
loop
pop
adc
mov
add
dec
jne
jmp
jb
testl
jge
push
loopne
pop
inc
push
sbb
inc
jg
imul
xlat
xor
jl
ret
mov
mov
xor
out
jl
sub
pop
xor
mov
pushf
movb
ret
mov
loop
xchg
stos
xorb
mov
jle
clc
lcall
inc
mov
mov
jg
dec
jg
ss
and
xchg
jge
iret
mov
inc
enter
cmc
pop
push
xchg
lahf
pop
jno
push
dec
or
xor
push
in
fmull
jp
xor
mov
rcrb
loopne
popa
icebp
mov
pop
imul
inc
or
aas
xor
adc
mov
xchg
xor
lret
in
lret
mov
mov
sbb
sahf
jb
scas
stc
inc
nop
mov
xchg
xchg
cmpsl
in
ja
dec
or
cmp
dec
mov
das
mov
mov
mov
loop,pn
lret
dec
cmp
outsb
pusha
jl
std
dec
xor
in
andb
mov
fbld
stos
or
push
add
sub
add
aaa
jo
xor
or
mov
pop
or
dec
dec
iret
mov
stos
fwait
stos
push
addr16
and
jb
xchg
in
inc
push
inc
sub
sbb
fstpl
push
pop
imull
mov
fwait
mov
sub
cmp
jbe
mov
pushf
xor
ret
scas
hlt
jecxz
adc
iret
test
cmp
adc
jb
pop
or
xchg
jg
push
rcrb
pop
je
push
rorl
jge
jmp
call
jb
mov
test
stos
faddl
cmp
xchg
lcall
inc
imul
adc
imulb
movb
cs
mov
movsbl
lcall
pop
call
test
push
int3
inc
cli
sbb
gs
sbb
jns
and
addr16
cmp
jbe
jns
jae
int3
movsb
xchg
pop
pop
incb
addr16
push
or
cmp
xchg
xor
ret
sbbb
dec
out
lahf
mov
xor
mov
sub
inc
ja
lahf
inc
mov
insb
fwait
xchg
sbb
fldt
stos
xchg
cltd
pusha
movsl
jge
or
xor
mov
add
shl
mov
rclb
addl
adc
inc
cmc
not
push
pop
push
loop
das
sbb
or
mov
fildll
popa
fildl
jb
loop
inc
ss
es
test
mov
dec
mov
push
xchg
push
hlt
jge
test
and
lods
movsb
mov
mov
add
xlat
xor
inc
in
mov
add
or
rcll
push
sub
push
jl
mov
loopne
cli
jae
inc
dec
cmp
out
sbb
int3
push
call
cwtl
lahf
xor
cs
jns
xor
push
xor
xchg
mov
push
jne
xchg
ds
xlat
mov
lret
faddl
or
es
xorl
push
mov
fdivrs
movsl
repnz
loop
rcrl
rcrb
out
iret
push
xchg
aam
cmpsl
cmp
xor
test
insl
ret
loop
and
pop
insl
test
inc
out
imul
repnz
sbbb
mov
sbb
das
loope
out
xchg
inc
addl
ret
push
fcoms
sbb
mov
mov
mov
sub
ror
dec
out
cmp
out
das
iret
mov
cmpb
loop
jnp
xor
fstps
jo
mov
jp
icebp
out
mov
lds
adc
dec
fnstsw
daa
xor
push
or
inc
jecxz
je
push
mov
out
rorb
xchg
xchg
cltd
lahf
adc
cltd
pop
push
dec
cmp
lods
adc
mov
sub
pop
ja
and
cmp
sub
sbb
addr16
lcall
dec
xor
lret
mov
lock
fs
xor
add
jno
das
dec
or
jmp
add
scas
push
adc
cmp
mov
xacquire
jae
pop
ret
inc
pop
xchg
cmc
mov
dec
pop
pop
add
mov
addr16
ljmp
fbstp
cmp
inc
dec
jns
jbe
pop
cmp
sbb
out
adc
sub
popf
or
stos
cs
mov
loopne
out
cld
fwait
incb
mov
xor
insl
xor
inc
xchg
cld
mov
mov
jns
mov
clc
adcb
addr16
pop
or
push
jge
cmpsb
ret
movsb
jmp
xchg
ret
icebp
push
adc
daa
add
inc
mov
and
mov
jbe
mov
orb
stos
lods
pop
push
out
nop
xorb
dec
mov
cwtl
mulb
cmp
test
xchg
sbb
aad
ret
push
mov
sahf
sbb
xor
xor
xor
aas
fsubs
or
dec
jnp
adc
int3
movsb
icebp
fsubl
add
xchg
cld
add
jae
mov
add
inc
push
mov
mull
cld
pop
inc
lods
and
aaa
daa
pop
loope
cltd
nop
jb
cmpsb
jnp
jne
jle
mov
es
push
mov
js
cmc
pop
mov
cmpl
popf
and
mov
push
add
hlt
into
shrb
or
loop
sahf
dec
adc
repz
cld
ss
mov
push
pop
inc
mov
sbbb
push
sub
push
mov
push
dec
push
shlb
rorb
in
xchg
aas
movl
in
adc
in
ljmp
out
xlat
mov
xlat
pop
mov
nop
jae
mov
mov
sbb
fildl
push
push
push
mov
mov
lock
cmp
xchg
into
notl
sti
call
pop
cltd
mov
mov
cwtl
jbe
outsb
inc
mov
push
in
mov
dec
addr16
jp
xor
xchg
mov
inc
test
push
inc
roll
inc
pop
mov
adc
adc
sub
inc
xchg
sub
movl
leave
xor
pop
cltd
je
mov
lock
adc
jb
call
mov
call
dec
push
and
ret
xlat
out
pop
outsb
out
sub
les
je
cmp
lea
jl
jge
frstor
addb
cmp
mov
sbb
adc
adc
xchg
mov
inc
push
xor
inc
inc
rcll
add
mov
lret
mov
jmp
inc
sbb
enter
mov
shl
sub
or
scas
or
push
lcall
popf
push
jae
sti
cmpsl
cmp
loope
movsb
sub
enter
pop
fldt
ljmp
adc
sbb
out
xor
mov
scas
mov
insl
stc
outsb
bound
xor
or
scas
daa
popa
movsl
pop
test
loopne
ret
ret
and
push
out
jmp
xchg
xchg
mov
xchg
aaa
fldcw
and
pop
pop
ss
mov
lods
sbb
lock
enter
inc
or
bound
add
push
push
xchg
xor
in
aaa
jns
jg
lea
insl
push
mov
fnsave
mov
scas
leave
mov
aas
push
mov
lds
rol
test
jno
mov
mov
pop
sbb
sbb
or
xchg
jg
sub
call
fnstsw
jne
test
std
iret
fs
daa
es
push
xchg
and
daa
inc
fisttpl
cmp
sbb
mov
out
mov
or
and
sar
jl
jo
in
jbe
mov
test
bound
in
mov
or
lcall
clc
inc
sub
and
push
xchg
xor
mov
mov
hlt
rcl
inc
jbe
inc
subl
fisttpll
sbb
andb
mov
aad
js
aam
mov
jae
addr16
ret
into
xor
loop
xor
ret
loopne
cmp
call
push
test
cmp
jge
repnz
into
sub
out
rclb
les
aas
pop
cmc
lcall
or
mov
pusha
mov
push
or
ret
insl
roll
das
add
insl
pop
gs
inc
mov
xchg
push
jns
mov
ljmp
xchg
push
jae
mov
xchg
mov
sbb
fcomps
mov
rcrl
mov
decl
repz
add
lahf
inc
mov
mov
sbb
dec
xor
fs
jb
and
pop
loop
pop
sbb
inc
cmp
pop
xchg
hlt
inc
lds
push
push
push
cltd
into
lea
lret
jg
pop
cwtl
jecxz
inc
inc
mov
in
xor
jle
inc
negb
jae
in
insb
jae
jg
pop
jge
mul
mov
mov
add
push
pop
adc
jg
sbb
movsl
cmp
scas
js
sbb
sub
sar
xor
rcl
lcall
adc
inc
mov
pop
call
cmp
bound
add
dec
out
lock
xchg
pop
jb
ds
fdivr
mov
pop
leave
xchg
lahf
cmp
insl
xchg
lea
inc
lock
pop
or
dec
hlt
loopne
mov
popa
xchg
pop
cmp
push
add
and
xor
or
jbe
jge
sub
xor
dec
js
and
in
jecxz
es
xchg
inc
sub
iret
int3
fistl
adc
xor
filds
jbe
mov
push
dec
inc
xchg
sbb
ja
push
and
pop
adc
push
xchg
out
lret
xchg
addr16
popl
fistps
jg
shlb
les
movsb
push
fnstenv
call
sub
mov
adc
shl
das
enter
dec
inc
fwait
into
add
sub
js
out
sbbb
call
shlb
rcrb
fldcw
pop
cmpl
pop
mov
xor
loope
xchg
ret
in
jmp
mov
xchg
pop
ret
stc
das
adc
imul
push
movsl
ljmp
lret
push
lcall
push
or
bound
add
nop
xor
dec
lret
adc
mov
mov
inc
adc
pop
icebp
add
pop
fbld
fsubs
repnz
sub
mov
stos
mov
mov
cmp
push
sti
push
cld
mov
add
sbb
push
loope
adc
jo
xchg
xor
adc
pavgw
popf
call
divb
mov
xchg
cmpsl
es
std
lret
sub
mov
imul
mov
sbb
mov
mov
lods
nop
into
out
jecxz
arpl
adc
out
xchg
sub
rolb
cmp
imul
fwait
add
icebp
xrelease
std
mov
into
out
sahf
xchg
xchg
xchg
sub
scas
xchg
cmpsl
jae
pop
popf
scas
shl
movl
fnstsw
push
aam
dec
inc
out
in
dec
fwait
jmp
mov
in
aam
into
test
push
mov
ss
loope
subb
xchg
mov
inc
push
inc
cmp
jge
nop
stos
and
adc
popf
xor
mov
dec
xchg
xor
inc
cmp
ljmp
mov
std
push
pop
xor
sbb
mov
and
mov
xchg
sahf
lock
ret
test
push
xchg
out
jmp
into
into
pusha
cmp
fimuls
add
addb
mov
pop
cmpsb
cmp
je
or
in
mov
jp
mov
or
fdivp
mov
divb
ror
pop
inc
in
repz
addb
add
sub
xchg
dec
and
jnp
mov
test
mov
cmp
dec
push
in
mov
push
mov
divl
mov
mov
movsl
cs
sbb
jecxz
gs
mov
and
popf
and
imul
out
cmp
mov
push
ja
sub
pop
push
fwait
mov
inc
adc
lods
popf
jmp
insb
push
int
xchg
or
mov
or
ret
in
fbld
or
daa
iret
mov
sub
and
mov
inc
lock
dec
cmp
mov
push
fstps
pop
mov
inc
lret
fldl
imul
jae
sbb
or
ljmp
addr16
sbb
pop
in
or
nop
adc
xchg
and
inc
std
xchg
cmpb
rep
gs
lcall
xchg
aas
mov
pop
xchg
sub
lret
rorl
dec
and
lods
decb
jmp
lcall
push
push
mov
inc
sub
test
dec
popf
mov
gs
mov
stos
ret
cmp
sti
cmp
insl
shll
inc
stc
popf
push
insb
mov
sub
mov
sub
cmp
jbe
or
fistpl
jl
cmp
hlt
cmp
sub
test
aam
mov
adc
cmpsl
arpl
xor
mov
push
cmpsb
jecxz
push
test
inc
push
daa
sbb
jmp
sub
sub
xchg
push
jg
pop
in
stos
ror
in
aas
aas
cmovl
mov
adc
in
pop
mov
test
or
push
xchg
test
jno
mov
cmp
inc
leave
mov
outsl
jb
cli
mov
lock
push
sub
movsl
outsb
lock
es
add
int
mov
aaa
lret
into
es
insb
sub
mov
mov
xor
mov
sarl
sbb
mov
pop
mov
nop
sbb
mov
mov
adc
stos
movsb
xlat
repz
aaa
cwtl
sub
xchg
fsubr
dec
cmpsl
jae
into
pop
in
arpl
pop
into
xor
add
cwtl
cmc
mov
test
aaa
sahf
sub
rol
jnp
dec
inc
mov
mov
and
ss
scas
and
rorl
mov
cmp
inc
stos
mov
lahf
insb
inc
test
lea
sarl
mov
call
out
lods
cmp
mov
xchg
jmp
jne
add
sbb
movsb
sar
or
call
inc
jne
ss
sbb
ja
fs
sbb
movsb
dec
add
adc
xchg
in
insb
imull
dec
cmpsb
xor
lock
mov
sub
push
inc
jge
lods
mov
aas
xlat
push
pop
xchg
dec
daa
jne
lock
add
push
pop
adc
stos
iret
and
gs
jnp
out
pop
fisubs
fimull
mov
dec
mov
push
mov
lcall
pop
xchg
sbb
mov
dec
lahf
dec
push
in
inc
add
test
mov
add
push
push
or
cmp
adc
sti
jo
sysenter
add
test
sub
mov
call
mov
jae
push
adc
std
scas
cld
or
cltd
xchg
popa
xchg
mov
push
or
cmp
test
fldenv
mov
pop
ret
mov
notl
mov
jae
mov
divl
fidivl
leave
out
call
pop
imul
jp
mov
imul
xor
adcb
push
aad
mov
je
adc
pop
scas
out
test
add
push
pop
loopne
xor
cmp
jge
lods
ljmp
pop
loop
cmp
jmp
and
add
bound
inc
ret
adc
jne
in
orl
sahf
test
aaa
jbe
xor
or
cmpsl
rcl
push
or
pop
push
mov
jno
and
mov
cmpsl
ljmp
icebp
inc
out
pop
movsb
inc
lods
push
jl
loope
aam
jbe
pop
lods
sbb
mov
pop
cmp
mov
cs
xchg
fs
xchg
push
test
shl
jo
xorb
and
pop
int3
or
or
jns
iret
lahf
lea
sahf
push
cmp
in
mov
cmp
jge
iret
imul
pop
adc
inc
mov
outsl
pop
mov
pop
int3
lcall
out
adc
cmpb
mov
stos
dec
das
mov
icebp
xlat
pop
pop
mov
sbb
xchg
out
stos
dec
aad
push
mov
in
add
add
cmp
ds
jge
jbe
cwtl
pop
xchg
sub
jne
mov
out
dec
jo
in
aaa
xor
adcb
adc
jecxz
int
pop
test
push
inc
fisubs
pop
idivl
lret
dec
dec
sbb
or
pop
jno
ja
cmpsl
rolb
inc
sub
pop
fs
sbb
jae
sbb
push
push
add
data16
pop
fnstsw
repz
mov
or
into
addl
mov
jp
out
push
addr16
cmpsl
add
notl
and
js
xchg
inc
lea
jo
rcll
xor
push
mov
mov
mov
jmp
cltd
cmpl
popl
test
add
test
xlat
jp
push
insb
sti
jmp
xor
push
sub
enter
int3
mov
dec
data16
mov
stos
sub
xchg
cwtl
repnz
jno
rorl
cmpsl
add
gs
mov
cs
ret
les
lret
aas
popa
gs
in
jmp
add
fstl
loopne
sub
cmp
dec
push
mov
push
lret
pop
mov
push
xor
inc
mov
and
inc
cmpsb
mov
imul
int3
inc
and
rsqrtps
outsl
inc
mov
fs
adc
xchg
sub
jns
mov
call
jg
arpl
pop
sub
mov
jnp
cltd
test
popa
into
mov
adc
sahf
outsl
pushf
sbb
dec
insl
mov
jne
test
push
mov
fcoml
lods
jbe
fwait
in
push
or
ss
cmpsl
call
popa
fldenv
xchg
and
js
push
loopne
sbb
add
push
or
in
pop
dec
scas
mov
sbb
loopne
ret
clc
mov
mov
pop
or
test
lock
popf
fnstenv
mov
das
js
mov
rcll
mov
mov
dec
cmc
fmul
cmp
xchg
jg
imul
ljmp
fwait
mov
pop
out
data16
test
cmp
or
js
in
sarb
sub
dec
aam
push
dec
mov
sbb
stos
popa
push
in
mov
or
std
scas
mov
mov
cltd
and
lcall
pop
loopne
inc
pushf
xor
imul
jmp
in
lret
rcl
inc
lock
adc
fdivrl
daa
push
lock
sbb
pop
inc
mov
cmpsl
stos
dec
aad
xchg
jmp
mov
fldcw
or
pop
outsl
xor
xchg
cltd
jl
or
jno
mov
aam
sub
repnz
sub
add
or
pop
pop
sbb
mov
shrl
rcll
cli
jo
xor
lret
add
das
jb
xor
xchg
aas
fs
mov
push
pop
mov
loopne
push
cltd
inc
mulb
cmp
leave
mov
sbb
jno
mov
mov
dec
mov
inc
fldenv
lock
xchg
das
push
cmc
xchg
icebp
xlat
sbbl
dec
andb
sub
adc
sahf
add
and
mov
mov
arpl
std
dec
out
cmpsl
fisubl
xchg
sarb
push
cmpsl
inc
fiadds
push
test
mov
aas
fcomps
outsl
repz
cmpsl
jle
ficoms
iret
adc
inc
cmp
icebp
out
dec
out
sbb
push
int3
xor
fisttps
inc
loopne
orl
test
mov
push
xchg
lods
test
push
xchg
or
jae
scas
jmp
fdivrp
adc
mov
pop
ret
sbb
sahf
rcr
leave
cld
shrl
loopne
add
mov
or
mov
out
in
push
push
out
cmc
pop
pop
popa
or
adcb
stc
or
lret
push
inc
aam
mov
push
sub
pop
test
fildll
push
ret
leave
mov
mov
repnz
adc
push
bound
leave
sbbb
loope
mov
testl
fcompl
das
aam
clc
sub
movsb
repz
inc
mov
in
or
push
and
jle
fcomip
scas
cwtl
xor
imul
ljmp
in
xor
jmp
sbb
mov
iret
pop
das
jmp
inc
mov
sarb
movsb
jle
mov
mov
mov
outsb
adc
call
pop
jns
js
jge
jge
leave
jmp
xchg
rclb
pop
mov
adc
popa
pushf
mov
mov
stos
pop
dec
enter
fdivr
aad
daa
mov
sub
cld
shll
add
cmp
stc
mov
add
iret
enter
mov
mov
popf
adc
jae
dec
cmc
mov
rcl
pop
xlat
arpl
iret
jg
aas
add
js
mov
outsl
push
idivl
push
mov
and
repz
loopne
jg
pop
rolb
lods
dec
lods
push
aaa
ret
enter
call
mov
mov
cmpsb
cmp
xor
movsl
mov
add
arpl
movsb
xchg
cwtl
mov
mov
ficompl
add
adc
or
sti
iret
cmc
leave
xor
pop
hlt
jle
test
sti
fwait
pop
test
add
test
std
adc
or
push
jno
in
cmp
jp
dec
push
mov
daa
vmread
pop
test
roll
mov
sub
int3
int3
jb
add
mov
popf
cmp
int3
jae
cld
jl
scas
add
popf
sub
xchg
out
lahf
sti
stc
adc
aas
cmp
andl
add
dec
dec
jmp
imul
leave
incb
jo
or
pop
shl
dec
ds
test
dec
push
xchg
mov
mov
jg
ficoms
ja
arpl
popf
out
add
pop
pop
cmpb
imul
loope
mov
loopne
lock
sub
lock
bound
repz
inc
test
lods
dec
adc
test
hlt
ret
addl
or
ss
mov
test
in
adc
icebp
sub
hlt
das
dec
leave
leave
movsl
test
push
dec
jb
cmp
dec
mov
and
mov
in
out
loope
dec
push
fcom
jge
lahf
int
add
fwait
cwtl
xchg
push
mov
add
jae
lcall
aad
fwait
add
lods
pop
ret
xor
test
mov
bound
jo
push
mov
dec
daa
cltd
mov
xchg
sbb
inc
cmp
subb
movsb
cmpsl
adc
push
das
push
or
fmull
mov
pop
pop
xchg
iret
xchg
xchg
sbb
int3
insl
adc
popa
push
shll
lret
pushf
roll
jnp
and
idivl
mov
mov
in
dec
push
push
push
jno
fbstp
push
loope
fildll
push
pop
mov
orl
adc
cmpsb
lret
push
fucomi
fwait
xor
jl
stos
das
sbb
mov
push
lcall
outsl
mov
test
inc
add
test
lods
adc
mov
add
sub
and
scas
sub
cmp
fists
jnp
sbb
mov
adc
xchg
mov
scas
push
cmp
push
arpl
mov
pop
mov
add
push
xlat
pop
test
sbb
and
mulb
out
dec
xor
cmp
xchg
pop
ret
add
sub
es
clc
outsb
fsubrs
aam
sbb
enter
lea
add
scas
add
scas
mov
test
jp
mov
and
sub
dec
xchg
scas
sbb
mov
adc
ds
push
les
rcr
cmp
insb
cmp
adc
pop
inc
stc
out
mov
sub
fnstenv
pop
lds
mov
pusha
iret
jns
push
cmp
jbe
outsb
adcb
cmp
cld
ja
fdivrs
jecxz
into
xor
mov
jne
repz
mov
mov
pop
lret
std
mov
push
daa
gs
jge
jo
sbb
jge
out
rclb
cmpsl
jne
pop
lods
frstor
push
push
pop
insb
fs
lahf
xchg
rol
or
mov
jp
or
roll
fidivs
inc
cld
call
js
cwtl
pusha
mov
call
cmp
cwtl
jp
outsl
lds
push
add
jp
xor
jle
mov
dec
pop
cmpsl
jg
mov
and
rcr
cltd
sbb
lods
mov
sahf
mov
outsb
xor
dec
std
mov
push
and
push
repz
fildll
xor
movsb
inc
dec
loope
xchg
sub
mov
bnd
xchg
cmp
cmp
int3
cld
call
push
xchg
movsl
adc
and
dec
mov
inc
outsb
fs
call
or
sarl
mov
cmp
push
jo
push
mov
sbb
in
shlb
leave
int
out
scas
jnp
loope
pusha
pop
sbb
xchg
jl
mov
sub
bound
sar
adc
in
imul
mov
jg
jecxz
scas
icebp
ljmp
jbe
repnz
repz
push
xchg
sarb
sbb
subl
jecxz
insb
push
push
fdivrl
ds
aad
add
pop
mov
lea
lds
fwait
cmp
dec
mov
addb
pusha
mov
mov
aas
xchg
jge
popf
aaa
mov
sub
pop
add
jo
gs
xor
pop
push
cltd
mov
or
adc
cs
jecxz
js
mov
cmp
lock
shll
fadds
inc
test
inc
xchg
test
test
xlat
fsubl
popf
add
or
inc
fs
ss
inc
and
sub
clc
and
fldenv
or
cli
cltd
sbb
add
xor
gs
sbb
jbe
inc
icebp
mulb
sbb
faddl
rolb
cmp
sbb
jnp
xor
insl
lret
xchg
inc
xchg
ljmp
ss
jae
add
mov
mov
mov
outsb
mov
lret
push
push
pop
dec
in
fidivrl
sub
xor
mov
dec
adc
mov
fsqrt
sbb
ja
into
cli
cmp
loop
lea
cmp
push
jne
ret
push
push
gs
xor
xor
inc
shl
dec
dec
in
aaa
mov
lea
loope
test
or
push
or
in
movsl
dec
mov
int
nop
fildl
mov
mov
jg
dec
cmpsl
xchg
loope
test
mov
pop
jmp
mov
arpl
pop
jp
add
pop
mov
xchg
jge
cmp
and
insb
sub
adc
push
insb
mov
dec
cltd
xor
in
xcrypt-ctr
cmpsl
sbb
mov
lds
pop
mov
mov
and
test
int
iret
sub
cmc
pusha
das
xchg
mov
daa
cmovo
mov
jl
fldcw
cmp
jnp
dec
jns
push
popa
sub
fdivrs
data16
pop
idivb
popa
mov
ss
inc
push
sub
push
scas
in
pop
pop
sub
jl
es
out
in
mov
mov
mov
loop
push
hlt
ficoml
loop
cwtl
loope
jl
popf
scas
adc
mov
out
mov
dec
mov
mov
das
rclb
ja
aad
mov
cmpb
xlat
outsl
xchg
xchg
imul
stos
mov
and
xchg
mov
lret
sub
mov
mov
dec
out
stos
mov
adc
rclb
imul
shll
jne
addr16
sbb
add
xchg
adc
bound
jp
jmp
daa
enter
push
jecxz
ret
fwait
pop
jbe
test
rorl
data16
pop
movsl
stos
shr
push
jbe
adc
sbb
mov
pop
into
fucom
enter
inc
mov
insb
insl
loope
dec
cmp
int
sub
mov
xchg
out
jo
stos
cmp
movsl
mov
jns
jns
int3
push
js
jae
inc
sbbl
mov
js
sti
scas
xor
cmp
dec
sbb
ss
lods
inc
mov
push
cmp
adc
dec
fidivrl
aam
testb
pop
jle
imul
mov
cmp
mov
xor
pop
sbb
xor
repnz
jae
pop
popf
mov
pop
and
adc
fsubrp
and
add
add
nop
aam
sti
cld
ja
pop
inc
cmp
sahf
fs
mov
sub
test
lret
fiadds
jne
adc
scas
rolb
scas
jbe
and
ret
std
push
mov
subb
push
pop
sub
push
mov
xchg
and
mov
xlat
rorb
jbe
outsl
cmpsl
cmp
mov
insb
sub
sahf
and
stos
adc
xor
lock
mov
negl
jnp
push
mull
or
shrb
dec
mov
jno
jl
imul
inc
xchg
sub
push
stc
icebp
mov
movsl
testb
and
jg
mov
lods
hlt
jmp
jmp
rclb
movsb
imul
lock
dec
cmp
jnp
xor
mov
pop
rorb
push
inc
and
pop
daa
adc
andb
adc
fmull
sahf
into
int
jge
jbe
inc
jae
mov
push
cld
imul
mov
add
loopne
push
jae
sbb
jmp
cmpsl
addr16
scas
xor
adc
das
mov
pop
movsl
roll
cs
inc
and
outsl
and
loopne
pop
inc
ds
pop
scas
add
aam
movsl
add
aas
stos
and
shrl
adc
cmpsl
dec
scas
pop
mov
mov
inc
test
jge
movzbl
dec
and
roll
std
insb
notl
cmc
push
mov
sahf
add
into
sahf
dec
push
in
add
ret
push
jmp
pop
fs
ret
inc
and
inc
xchg
idivl
cmp
dec
mov
cmp
mov
sub
cmp
mov
dec
inc
stos
xor
fimull
inc
fsubl
mov
mov
push
or
jl
sbb
xchg
dec
xor
mov
and
ljmp
pop
pushl
aad
add
xchg
das
aas
mov
movsb
cwtl
test
inc
jo
push
cmpsb
adc
fidivl
adc
sbb
bound
jo
inc
mov
ds
xor
jmp
roll
add
je
outsb
arpl
lods
nop
scas
mov
fildl
lcall
popf
lods
pop
insb
mov
adc
add
rep
clc
jmp
out
idiv
fisttpl
or
jb
sub
add
dec
sbb
into
iret
fwait
xchg
xchg
rcl
push
and
push
pop
sub
fnstsw
ljmp
test
dec
jno
icebp
lds
and
jmp
fimuls
adc
lcall
inc
out
mov
icebp
test
push
mov
xchg
dec
movsl
imul
push
jmp
fadd
jns
frstor
mov
test
sub
rep
lret
mov
mov
jmp
ret
cs
decl
lret
lea
mov
mov
xlat
pop
inc
insl
out
repz
mov
mov
mov
mov
cltd
cmpl
fistpl
loop
mov
test
shlb
or
xor
dec
xlat
mul
mov
and
test
dec
xchg
roll
test
push
pop
fidivs
mov
jmp
sub
dec
cmc
xor
lret
mov
jecxz
add
pop
push
cmp
mov
or
ljmp
add
xor
or
xchg
add
push
or
adc
pop
mov
add
add
jb
xor
mov
pop
addr16
cmpsb
movsb
scas
adc
push
mov
xchg
flds
sahf
pop
xchg
cltd
lods
xor
testl
sarl
dec
sbb
inc
inc
and
wrmsr
pop
popa
test
xor
pop
push
sub
je
mov
hlt
jo
adc
jbe
or
repnz
stos
mov
cld
inc
in
sbb
inc
fiaddl
sarb
or
cld
stos
data16
cmpl
push
inc
shlb
xor
or
jp
adc
mov
cmp
cwtl
jmp
mov
push
aam
daa
cmpsb
xor
pushf
mov
rolb
xchg
lds
fmul
cmpsl
test
popa
pop
mov
stos
loop
insb
out
and
xchg
cs
dec
xchg
xchg
push
xchg
jae
lods
popa
iret
lds
jl
sub
dec
jmp
lea
push
bound
inc
jns
push
jg
mov
ficomps
jo
and
mov
adc
imul
outsl
cmp
ret
mov
sarb
pop
bsf
ss
lcall
shlb
pop
fisubs
lcall
mov
ds
sub
stos
andl
xchg
testb
fldenv
push
imul
adc
pop
push
adc
inc
sbb
sbb
inc
mov
fmull
and
sarl
push
cwtl
std
jmp
mov
push
inc
cmc
dec
leave
jge
int3
std
jnp
pop
pop
dec
cs
add
ret
lds
mov
inc
jns
push
stos
int3
pusha
pusha
adc
add
inc
aad
sub
cli
dec
outsb
scas
jno
mov
gs
xor
addl
cli
xor
and
mov
mov
mov
int3
cmp
mov
jns
mov
jge
add
push
ret
sub
mov
pop
cltd
mov
mov
mov
add
adc
cmc
mov
or
loopne
scas
pop
es
or
sbb
sub
bound
test
jno
mov
mov
mov
ss
or
xor
inc
mov
pop
shl
mov
cltd
cmp
mov
lcall
inc
sbb
sub
push
push
push
jle
sbb
subl
imul
jg
enter
pop
pushl
nop
sub
mov
mov
mov
jl
clc
cmp
or
mov
ret
mov
xchg
cmpsl
jle
int3
push
jnp
jbe
mov
mov
adc
cld
sahf
cwtl
hlt
call
xor
fcmovu
sbb
bound
or
jl
mov
jo
aas
mov
rolb
or
test
adc
in
in
xchg
sbb
lret
ret
stc
mov
fsubp
mov
lret
mov
decl
mov
rol
inc
push
adc
xchg
das
cmp
add
push
mov
inc
mov
cmp
mov
mov
mov
cltd
dec
add
mov
xchg
cmp
in
and
jmp
jo
dec
adc
movsl
adc
mov
mov
cld
ja
rol
test
sbb
jl
jnp
mov
test
imul
cmp
or
push
and
lods
popa
ja
fwait
sbb
cmpb
jle
test
out
push
xchg
xchg
lea
movsb
orl
push
or
mov
cmp
jnp
dec
lea
mov
xchg
stc
or
mov
cmp
test
lds
xchg
mov
test
or
add
arpl
mov
ss
and
adc
rclb
xor
dec
jl
gs
push
in
es
movsl
xor
xchg
movsb
push
push
xchg
fcmove
aas
leave
add
call
mov
sbb
adc
mov
lea
shl
push
ret
int3
adc
mov
jnp
popf
jne
fwait
pop
bound
out
push
sbb
pop
mov
scas
sbb
imul
mul
sub
pop
pop
jno
xor
int3
jne
mov
fs
out
and
filds
repz
lret
push
cmp
enter
repnz
icebp
mov
leave
inc
dec
cltd
xchg
mov
push
adc
lret
inc
jb
outsb
jne
nop
jns
cmpsl
test
mov
jl
add
and
xchg
mov
xor
push
inc
out
pop
lcall
xchg
pop
test
pop
inc
popf
orl
pusha
rcl
or
js
lahf
xchg
ret
sbb
cmpsb
adc
sub
dec
and
cld
dec
lahf
imul
xor
icebp
or
add
inc
fldt
mov
outsl
inc
pop
ss
push
jp
stos
pop
inc
cli
enter
in
jo
mov
popa
push
psubb
inc
pop
lcall
sub
rclb
outsb
test
cld
cmp
repz
dec
test
push
sbb
jno
testb
xchg
push
add
fs
sbb
adc
testb
xchg
sub
leave
loopne
add
daa
movsl
in
filds
in
pushf
int
fldt
push
jge
gs
inc
movsl
xchg
and
adc
mov
cmpsl
xor
cmpsb
or
push
nop
jo
xor
jb
sarb
movsb
dec
bound
out
repnz
outsl
hlt
mov
fisttps
sti
dec
dec
int
mov
movsl
je
psllw
cs
daa
inc
push
jmp
flds
mov
pop
sbbl
fcomps
fildll
sbb
add
gs
cmp
pop
xchg
add
mov
ljmpw
ret
mov
mov
xchg
jbe
xor
add
dec
test
js
sub
arpl
ds
xor
bound
push
lcall
out
stc
inc
scas
xchg
adc
add
sbb
outsl
inc
int
mov
push
sbb
dec
std
add
addr16
xchg
adc
fnstenv
pop
pop
stos
mov
fmull
cmp
xor
mov
out
xor
cs
dec
sti
inc
in
call
stc
jo
out
lahf
movsb
fmuls
subb
xchg
or
dec
pop
mov
subb
ret
fbstp
mov
in
cmc
movsl
pop
push
mov
imul
ror
fs
sub
out
pop
jnp
mov
cwtl
icebp
lret
addr16
fs
cmp
out
popf
pop
test
add
cld
int
rcrb
rol
les
or
or
jo
xchg
push
xchg
movsb
fsub
pop
lods
xor
jno
cmp
and
sbb
jne
and
insl
call
sbb
add
repz
ss
pop
ljmp
and
adc
rcrb
out
xor
add
cmp
orl
mov
dec
repz
jle
mov
mov
into
test
addr16
sti
push
lds
sbb
bound
inc
add
add
jb
fildl
sub
or
inc
iret
shlb
xor
dec
cmp
sub
scas
xchg
test
movsb
inc
mov
push
xor
ja
arpl
insb
sub
aad
movsb
ljmp
stos
cmp
cmp
adcb
inc
aam
or
jns
repnz
xor
push
ret
in
or
lahf
repnz
adc
cmp
cmp
inc
or
clc
inc
into
push
out
jb
mov
add
and
in
fimull
mov
sub
outsl
jbe
faddl
inc
daa
xchg
popf
mov
or
insl
pop
pop
rcrl
shr
pop
jmp
cmpsb
and
mov
mov
xchg
aam
mov
popf
add
insb
xchg
pop
jne
dec
xor
movsb
mov
jbe
cwtl
sti
inc
xchg
mov
in
sub
mov
test
test
fwait
pop
insb
inc
sbb
insl
adc
out
push
jecxz
hlt
xchg
and
leave
add
pop
pop
cmp
cmpsb
mov
adc
lea
rcl
sub
pop
push
push
cmp
ja,pn
jno
xor
jl
inc
in
and
mov
push
outsl
push
sbb
push
or
push
push
inc
es
stos
ds
repnz
pushf
jl
or
and
popf
xlat
shl
mov
jno
cmp
filds
and
fmuls
rorb
xchg
pop
jp
push
adc
sbb
xchg
fdivr
repz
jecxz
pop
mov
fsubl
dec
or
addl
xor
fnstsw
mov
sarb
cmp
add
adc
adc
mov
aad
imul
or
pop
test
sbb
cs
sub
daa
std
insl
out
xor
addl
inc
sbb
push
lds
outsl
and
in
push
mov
lock
hlt
adc
mov
inc
mov
inc
ds
mov
xorb
pop
clc
loope
insl
aas
hlt
dec
dec
mov
lcall
jmp
subl
xor
fidivl
test
jecxz
pop
mov
mov
xor
int3
imull
cmp
dec
int
and
push
pop
leave
add
in
adc
addr16
fwait
pusha
mov
outsb
pop
and
mov
test
pusha
add
repnz
ja
aad
rclb
add
dec
cmp
mov
and
jle
dec
shll
xchg
mov
mov
jg
scas
movsb
adc
repnz
push
xchg
mov
mov
sbb
ljmp
inc
mov
notl
or
mov
jmp
jns
test
pusha
sub
xchg
cmp
scas
fdivs
fwait
pop
dec
jb
andb
ja
ret
inc
inc
imul
mov
mov
enter
bound
leave
push
loope
hlt
mov
push
lods
ror
aas
push
and
xor
fwait
xchg
adc
cmp
jnp
push
jae
sbb
sbb
dec
negl
fldt
out
les
movsl
push
xchg
inc
lcall
jne
aas
sub
loopne
push
rcrl
and
ds
jmp
repnz
mov
daa
pop
repz
sar
aaa
inc
pop
je
shlb
dec
sbb
inc
or
es
loope
stos
mov
sub
js
and
fsub
ss
mov
aad
inc
imul
addr16
mov
out
das
bound
and
or
mov
push
mov
sbb
sub
mov
outsl
popa
adc
xor
or
sbb
mov
filds
xor
mov
dec
add
ss
xchg
cmc
js
xchg
mov
enter
mov
movsl
pop
imul
cltd
or
outsl
movsb
push
je
jg
stos
cmp
xchg
xor
mov
jle
cmp
fxch
fs
in
sub
rcrl
inc
daa
jge
cmpsb
ret
adc
mov
or
out
mov
mov
movsl
movsl
jnp
leave
pop
subl
es
inc
inc
lods
in
or
test
aad
inc
xor
out
sub
data16
jo
xchg
icebp
add
push
inc
bound
adc
mov
mov
adc
lods
xchg
adc
data16
xor
push
js
xor
add
arpl
sub
sbbb
ret
jbe
stc
xchg
push
movsb
rol
sbb
push
sbb
or
lds
clc
enter
sbb
fcom
rol
pushf
pop
inc
nop
mov
lds
adcb
dec
or
add
test
jecxz
shrb
xor
add
xor
mov
sbb
lea
push
sub
sub
lods
xchg
and
loop
bound
ss
jmp
data16
inc
lea
scas
jae
mov
and
insl
fiadds
mov
aaa
ja
jmp
pushf
or
loope
fwait
xchg
arpl
cmpsl
push
test
and
outsb
aaa
aas
mov
in
insb
sti
xchg
mov
lds
pop
sbb
xchg
mov
or
sbb
dec
pop
repz
push
cmp
les
push
pop
js
les
mov
sub
out
xor
ds
jecxz
addb
sub
push
mov
pushf
sti
sbb
test
int3
pushf
push
mov
mov
rcr
sahf
jle
push
aas
inc
pop
fwait
xchg
pop
rorl
std
fisttpl
mov
xlat
push
mov
push
lods
mov
push
mov
pop
call
mov
fidivrl
lds
ds
jge
mov
push
and
and
sbb
ret
imull
sub
inc
xor
cs
cmp
and
cld
ret
lret
inc
iret
mov
sub
adc
xchg
addr16
sti
xor
fwait
inc
lock
xchg
jecxz
jno
ror
test
mov
adc
pop
xor
mov
mov
bound
lea
pop
std
fimull
loop
mov
pusha
jne
stos
rcll
mov
rorb
call
loop
stos
sub
push
xchg
xchg
imul
fcom
fmuls
or
in
shl
mov
push
repz
ds
test
jg
sub
xchg
inc
jecxz
sbb
lods
push
lret
scas
sbb
int
xor
fcmovu
pop
pushf
pusha
int
repnz
enter
das
jae
cld
iret
add
mov
ljmp
cs
test
repnz
push
pop
popf
out
hlt
and
jno
jge
aaa
aaa
jecxz
sub
add
sub
mov
pop
mov
ja
jle
xchg
xor
mov
shlb
stos
sbb
mull
lds
loope
out
das
add
les
mov
into
xlat
jne
loopne
or
test
mov
cmpsb
mov
fisttpl
add
push
pop
daa
dec
das
jp
movntps
out
push
sbb
jp
cmpsb
lahf
sub
jae
lret
mov
push
rclb
xchg
call
imul
mov
mov
xor
mov
rol
jno
mov
ret
cmpsl
and
add
mov
stos
mov
stc
dec
movsl
cmpsb
jmp
pop
stos
adc
xor
jg
lock
rcll
in
test
popf
test
insb
xchg
sbb
loop
pop
adc
hlt
int
neg
or
push
cmp
xor
adc
xchg
adc
test
mov
cmp
xor
xor
jp
xor
add
in
mov
incb
add
fsubrs
inc
xor
cmp
scas
ds
xchg
sub
nop
pop
ja
push
loope
cmp
rcl
xchg
notb
sarl
popf
and
add
mov
adc
insl
je
adc
push
push
add
daa
jns
pop
testb
adc
loop
adc
jp
push
shrl
cwtl
enter
mov
aad
mov
aaa
fwait
lods
dec
inc
adc
cwtl
or
jmp
arpl
pop
dec
jmp
fildl
cmp
pop
js
push
mov
add
fwait
xchg
push
push
or
jno
mov
xchg
cmp
cli
insb
pushf
push
push
push
or
push
dec
test
hlt
mov
push
sub
mov
pop
inc
shrl
rolb
push
pop
push
repnz
cmp
adc
ror
lods
mov
jbe
cmp
stos
jbe
mov
sbb
cmp
stos
add
xor
stos
pushf
push
mov
xorl
xchg
dec
mov
xchg
push
popf
adc
jae
dec
jmp
into
add
cld
mov
test
filds
shl
pop
inc
pop
sub
dec
mov
dec
jecxz
lahf
loop
in
or
inc
or
adc
les
pop
lret
jns
frstor
jge
push
in
mov
std
cwtl
add
int
and
push
mov
movsb
fwait
mov
aad
shrb
leave
mov
jge
fildl
sarl
and
inc
leave
sub
out
mov
and
xchg
and
loopne
mov
or
push
pushf
loope
sbb
scas
aaa
jmp
out
cmpl
jp
lock
mov
notb
les
lret
std
sbb
sbb
inc
pushf
fldt
arpl
inc
cltd
jmp
mov
lcall
add
stc
dec
add
mov
xor
sbb
and
dec
scas
je
jbe
adc
dec
pop
mov
std
mov
dec
sub
xor
movaps
sub
pop
xorl
cmpsl
scas
pop
push
and
bound
lock
jnp
notb
mov
stos
lods
dec
fstl
aaa
pop
push
jnp
cmp
sbb
xchg
jnp
mov
dec
addr16
adc
aas
in
enter
in
jnp
mov
mov
icebp
mov
inc
cmp
popf
xchg
rcr
jl
xor
stc
test
test
ret
jae
dec
inc
xchg
dec
sbb
inc
enter
sbb
or
inc
add
cltd
jg
movsb
mov
icebp
jecxz
loope
sub
inc
js
out
loop
hlt
into
test
insb
pop
fistps
xchg
ret
int3
xor
ror
fs
int
ds
loop
mov
pop
and
pop
movsl
dec
outsb
mov
iret
adc
mov
inc
in
imul
push
pusha
in
jne
adc
repnz
subb
sub
inc
loopne
cli
xlat
xlat
int
sub
cltd
push
mov
mov
dec
sub
test
fidivs
add
fidivrl
dec
movsb
out
mov
adc
add
cmpsb
pop
mov
cmp
repz
add
fs
xor
push
mov
movsb
sub
mov
icebp
mov
or
dec
mov
shl
sbb
xor
add
push
clc
mov
leave
mov
cmp
pop
jmp
out
sub
jge
cld
add
das
cs
jg
push
or
sahf
cs
sub
push
pop
aaa
call
or
jge
dec
push
inc
cmp
test
sbb
ss
int3
pop
imul
lret
das
jmp
pop
mov
loop
inc
lea
dec
cmp
add
xor
add
jns
xchg
loopne
xor
or
lcall
mov
addl
loopne
sub
das
leave
scas
shrb
stos
cmp
ds
loope
lret
push
sbb
test
es
decl
ret
js
mov
das
out
push
out
fldl
xor
js
adc
mov
adc
push
dec
mov
movsb
dec
int3
xor
xchg
inc
cmp
rcll
imul
or
cmp
cs
mov
dec
test
sub
scas
sub
int3
cmovae
inc
mov
mov
mov
cltd
mov
loopne
ja
inc
xchg
ficoms
imul
push
nop
aaa
andl
dec
fidivl
or
jp
jle
mov
jnp
jo
cmc
jb
inc
xor
jne
dec
jne
cli
jns
rcrl
shlb
push
negl
pop
mov
pop
lret
shrb
loop
fdivrl
stc
fwait
notb
xchg
mov
ja
sbb
jmp
repz
sub
stc
stos
mov
inc
pop
ret
inc
data16
lods
in
jecxz
or
cwtl
rcrl
jge
jo
lcall
cmp
sub
sahf
cmovge
ds
cmp
cltd
sbb
mov
call
mov
and
dec
xchg
and
insb
in
jne
mov
bound
sub
out
mov
push
fsubrl
daa
movsl
sub
push
or
movsb
adc
pop
sub
popf
imul
pop
mov
int
push
xorl
popf
jnp
hlt
sub
das
mov
jns
stos
xchg
mov
aam
cltd
into
mov
clc
out
fimull
not
test
into
in
lcall
push
shrl
sbb
test
fsubrp
xchg
faddp
or
shlb
cmp
push
sub
addr16
inc
outsb
add
jg
fnstenv
gs
pop
pop
xchg
insl
xor
push
ret
or
mov
pop
push
jge
and
cmp
ds
pusha
sbb
cwtl
pop
je
out
shrl
pop
mov
je
add
mov
ss
mov
imul
ret
mov
inc
cld
out
inc
mov
iret
pushl
mov
ficomps
dec
mov
inc
push
adc
sub
test
orl
push
xor
gs
jecxz
insl
subl
dec
into
push
xchg
fldl2t
int
mov
xchg
cmp
bound
xchg
mov
sub
loop
mov
xchg
pop
in
insl
aaa
jno
xlat
idivb
ss
pop
pop
mov
inc
xchg
in
dec
mov
out
call
push
movl
les
lret
out
mov
adc
repz
mov
bnd
scas
mov
lret
fildl
arpl
inc
sahf
push
fwait
sub
sti
sub
insb
pop
insl
jns
ficomps
fiaddl
xchg
orb
mov
adc
sub
or
jg,pn
lahf
mov
orl
inc
xchg
add
and
and
sbb
ret
pop
pushf
sahf
sbb
dec
jo
pop
shlb
inc
int
repz
add
adc
insl
andb
pop
in
leave
aad
cmpsb
cld
repz
imul
out
iret
ss
shll
hlt
addb
scas
fstpt
lret
inc
pop
test
int
pop
cwtl
sbb
dec
push
js
cli
ficoms
sbb
scas
ja
xchg
out
fisttpll
pop
mov
and
or
jmp
imul
subb
int
mov
jecxz
insl
icebp
pop
jl
push
test
shrl
repz
stc
mov
pop
aaa
mov
icebp
jge
fs
lret
dec
xorl
lahf
or
pop
jae,pn
sub
xlat
sub
adc
add
jb
mov
cmp
sub
inc
ljmp
out
sub
ficomps
gs
mov
std
inc
stc
test
ret
negl
cmpsb
lret
inc
mov
cmp
jns
mov
pop
fstps
testb
fwait
cmpsl
fnstenv
shr
pop
push
insl
movsb
mov
ret
out
addb
jb
cmp
mov
test
xlat
inc
ret
rcll
arpl
xchg
test
test
es
xor
or
push
or
lahf
add
sbb
inc
shrl
dec
dec
mov
mov
int3
push
sahf
loopne
scas
push
mov
push
mov
loop
sar
decl
out
into
ret
add
push
xchg
dec
lods
mov
dec
inc
jl
sbb
bound
cltd
xchg
into
sbb
push
das
mov
icebp
sbb
cs
jnp
dec
jae
xchg
fists
repz
mov
add
fsubs
das
ds
pop
ret
or
mov
call
inc
addr16
mov
mov
int
ret
fcom
mov
lea
cli
je
cmp
add
push
inc
sub
das
stc
lock
add
xchg
aaa
add
clc
and
sub
or
inc
cmp
push
roll
aas
push
xchg
pop
fsubrs
jecxz
stos
loope
push
ljmp
mov
shl
jmp
mov
cmp
adc
push
adc
adcb
in
aaa
leave
or
pop
push
sbb
xchg
push
mov
inc
inc
and
inc
jecxz
cmp
js
pop
mov
jae
xor
xor
lods
scas
repnz
fists
pushf
lret
sub
add
jno
push
xchg
or
cmp
push
sub
cmp
stos
test
sub
subb
test
xchg
push
dec
mov
push
outsl
and
sbb
cmp
lock
cmp
mov
cli
lret
aaa
sbb
cmp
je
iret
pop
test
sbb
fisttps
ja
add
mov
inc
ljmp
sub
inc
inc
fcmovnb
mov
stos
dec
dec
sbb
dec
and
mov
inc
mov
mov
or
jnp
mov
daa
aas
aam
cmp
jns
adc
not
cmp
dec
in
cs
mov
jecxz
pop
int3
push
xchg
push
xchg
or
xchg
bound
push
mov
inc
ja
rcrb
and
sub
lahf
in
std
out
lret
mov
fiaddl
mov
lahf
test
sbb
lds
pop
or
lcall
pop
sahf
movsl
xchg
push
mov
adcl
cmp
cmp
ss
dec
inc
jp
cmp
scas
mov
push
aad
pop
xchg
mov
fwait
js
inc
xor
insl
outsl
test
cmpsb
sub
cmc
cwtl
cld
jb
mov
jns
lock
cmp
dec
push
es
lahf
ljmp
movsl
out
add
dec
imul
sub
cld
adc
push
cmpsb
fwait
sub
or
cmp
push
push
ret
add
mov
lods
mov
sbb
sbb
inc
mov
mov
add
mov
test
ret
pop
aad
arpl
iret
add
lcall
mov
push
cmpl
xor
dec
xorl
in
shl
push
sub
aam
into
or
imul
sahf
popf
out
adc
das
daa
fnsave
and
test
mov
in
daa
pop
pop
outsb
push
neg
jb
cli
adc
popa
pop
movaps
sub
or
fsubr
push
arpl
test
lea
jo
mov
repz
lods
xorb
out
mov
xor
sub
stos
lock
cmp
fisttpll
daa
xor
mov
in
add
imul
dec
mov
mov
cmc
adc
sbb
les
inc
inc
sbb
test
shrl
lahf
inc
clc
and
cmp
lahf
leave
jae
mov
dec
mov
loopne
jo
sti
or
pop
leave
lcall
xor
loope
mov
imul
mov
push
dec
inc
jmp
xlat
adc
fcompl
rorb
jl
movsb
faddl
repnz
mov
xor
or
std
js
xchg
xchg
push
dec
stc
aam
dec
pop
dec
incl
lret
and
nop
mov
mov
lahf
hlt
lahf
jp
outsb
dec
pop
call
fsub
fadd
fsub
cli
push
jle
cmp
cmp
and
scas
sbb
dec
imul
xorb
rcrb
rolb
pop
lds
loope
outsl
mov
insb
inc
int
jo
daa
orb
pop
jne
shlb
fs
push
sbb
jbe
dec
mov
xchg
in
pop
xchg
push
push
lcall
mov
dec
imul
or
fs
push
enter
ds
cmp
or
push
add
call
cmpsl
sti
push
lea
push
sbb
push
mov
sub
add
jge
sub
xor
mov
daa
daa
jns
sbb
stos
dec
dec
js
std
sbb
inc
test
xor
add
sbb
and
jb
jns
mov
je
into
mov
add
inc
and
inc
rcr
shlb
mov
jne
mov
and
add
jge
adc
in
xchg
loope
pop
mov
repnz
mov
dec
pop
add
jle
push
decb
cmp
stc
inc
push
sub
adc
pop
aaa
mov
int
je
arpl
jo
inc
test
arpl
add
xor
xor
pushf
xchg
and
mov
sub
outsl
ja
xor
jb
sbb
loop
dec
iret
sbb
jecxz
and
mov
xor
cmp
mov
and
and
addb
xlat
mov
cmp
mov
ret
and
data16
sbb
cmp
fistpll
into
xchg
jecxz
sbb
inc
dec
popa
lcall
push
in
aad
jae
cwtl
arpl
scas
mov
sub
je
add
xor
inc
aaa
in
repz
inc
or
xchg
int
out
clc
rcl
loope
pop
and
pop
dec
jp
pop
cltd
mov
fisubrl
add
xlat
sahf
int3
add
push
in
scas
jmp
add
imul
jmp
add
bound
jg
aad
rorl
jne
roll
popf
push
inc
sbb
std
adc
sub
in
xlat
shlb
dec
fs
mov
inc
sahf
xor
lds
jmp
gs
mov
xchg
stos
enter
imul
xchg
subl
test
jb
or
sub
add
mov
lret
adc
sub
movsb
movsb
sbb
xchg
or
and
sti
out
cli
xlat
push
daa
addl
leave
inc
push
adc
lret
pop
cmp
idivb
je
dec
adc
mov
pop
lds
push
ret
dec
jae
fnstsw
mov
int
addr16
mov
ljmp
adc
notl
add
mov
xchg
leave
test
roll
in
stos
adc
ss
in
and
mov
mov
mull
jmp
lahf
aaa
fcmovb
adc
and
sbb
cmpsl
adc
adc
fcoml
hlt
daa
pop
mov
inc
insb
xor
lcall
cmc
fcom
arpl
push
xlat
sbb
mov
idiv
or
lcall
stos
test
orb
rol
jno
inc
sti
xchg
pop
sub
scas
cmpsl
rclb
inc
xchg
dec
scas
sub
insl
js
mov
lret
inc
fs
sti
mov
inc
out
or
int3
cli
sub
pop
bound
cmp
sbb
into
push
add
jmp
fstpl
sbb
mov
mov
adc
in
cmp
pop
adc
and
mov
push
out
inc
jno
mov
aas
inc
repnz
xor
stc
mov
movsl
jo
adc
push
cmp
jle
add
xor
rclb
push
jle
test
sahf
lods
push
loop
lea
ss
outsl
mov
addr16
mov
loop
adc
sbbb
jmp
inc
mov
push
push
enter
int3
pop
stos
dec
jnp
dec
xchg
xor
inc
adc
movsl
cli
inc
lds
faddl
jb
sub
push
adc
out
lahf
mull
pushf
push
sub
loope
push
mov
push
je
cmp
sti
fiadds
bound
mov
and
insl
push
aaa
adc
stos
pop
loop
fldenv
xchg
cmc
mov
in
mov
jb
popf
movsb
mov
in
loop
or
cwtl
stos
fwait
mov
jno
adc
test
lds
pop
pushf
push
xchg
mov
or
push
xchg
insl
fs
adc
fs
xor
sbb
adc
adc
je
mov
aas
pop
mov
adc
jo
in
mov
lods
hlt
dec
jle
rol
aaa
repnz
jge
mov
repz
xor
mov
outsl
hlt
inc
in
scas
add
enter
pusha
dec
jmp
dec
and
mov
mov
push
fwait
out
fdivrp
push
jge
cmpsb
mov
stc
in
rclb
inc
fwait
cmp
out
mov
or
push
inc
ljmp
pop
add
or
in
push
or
subl
stc
pop
sahf
dec
ret
adc
sbbl
outsl
push
sub
flds
mov
in
repnz
pop
push
inc
enter
incl
js
lret
nop
push
push
lds
mov
sbb
sbb
in
mov
data16
fwait
stos
aaa
aas
pop
popa
in
movsl
fwait
stos
sti
push
adc
in
jbe
loopne
mov
adc
xor
mov
repnz
fwait
aam
mov
add
ret
xchg
push
adcl
bound
in
cmp
clc
lcall
movsl
sub
pop
pop
push
cmp
icebp
jo
mov
cmc
mov
dec
sarl
cwtl
push
jp
mov
xchg
sub
fisubl
push
dec
pushf
cmpsl
add
leave
or
mov
sbb
test
push
lcall
mov
addr16
stc
sti
jo
fimuls
fwait
lea
cli
outsl
mov
mov
add
inc
daa
fildl
out
xchg
sub
push
jns
mov
inc
push
stc
cmpsl
mov
test
cmc
add
int3
sbb
inc
xchg
mov
inc
lret
jmp
push
push
mov
cmc
sahf
pop
dec
jno
pop
pusha
fs
mov
pop
mov
ds
jo
ret
rclb
daa
cltd
mov
mov
jns
add
std
xchg
sub
aaa
rclb
imul
xchg
imul
or
iret
xchg
mov
test
cmp
xchg
sbb
push
dec
dec
push
mov
stc
cwtl
shrl
mov
or
mov
cmp
test
push
jmp
psraw
call
pushf
stos
and
sub
loopne
or
pop
adc
test
fstps
cs
cmpsb
xchg
mov
adc
push
push
push
xor
mov
andb
into
jge
add
sbbl
ret
lea
ret
mov
xchg
mov
mov
jmp
xchg
arpl
sbbl
cld
inc
aam
jno
jnp
pop
lret
hlt
jl
lret
cld
mov
xchg
lret
pop
inc
es
int
scas
mov
lcall
stc
scas
xor
cmpsl
mov
lds
mov
inc
pop
pop
dec
je
stos
movsl
pop
jnp
lods
xchg
mov
movsl
inc
orl
add
mov
mov
fucomp
les
xor
cs
mov
pop
xchg
aam
add
xor
lods
mov
ret
aaa
dec
into
subb
sbb
cmp
lcall
xchg
call
jmp
xchg
dec
addr16
pop
xor
nop
xor
iret
mov
mov
sbb
popf
jne
dec
mov
dec
sti
xor
xor
push
or
mov
pop
aam
inc
lods
lcall
push
mov
add
lcall
data16
inc
lret
out
leave
pop
adc
push
popf
test
fsqrt
lret
sti
or
lcall
mov
mov
movsb
lret
adc
or
ljmp
jno
cmc
cmpsb
push
mov
dec
mov
aad
sbb
mov
mov
jae
test
ss
outsl
bound
xchg
cmp
insl
dec
cld
adc
mov
cmpsl
imul
and
push
sbb
sub
das
mov
xorb
push
jmp
jmp
and
loope
jle
imul
testl
hlt
pop
std
push
jg
mov
push
out
xchg
pop
les
loop
ja
scas
je
pop
mov
push
stc
out
pop
xor
scas
outsl
mov
mov
in
and
in
cmp
or
test
fcomi
xchg
movsb
xor
dec
in
jne
fs
mov
mov
les
ret
push
mov
sarl
in
js
insl
dec
icebp
mov
cmp
leave
xlat
and
stc
mov
roll
loop
imull
jl
rcr
sbb
adc
subb
addr16
mov
fiadds
xor
mov
mov
dec
aad
add
cld
mov
sub
fldt
adc
cmp
sbb
int3
sub
jle
adc
and
push
xchg
dec
cmc
in
push
adc
fadds
or
mov
aam
fwait
jno
add
xorl
pop
xchg
ja
mov
push
push
aaa
push
adc
movsl
push
jmp
cld
incb
xchg
cltd
insl
xorb
mov
sub
jns
mov
xchg
cli
hlt
pop
lods
mov
fisubrs
subl
clc
jmp
xchg
das
push
test
xchg
mov
add
mov
inc
sub
inc
mov
sbb
dec
ja
jb
pop
mov
addl
cltd
fwait
push
hlt
sub
andl
dec
idivl
fwait
lcall
imul
pushf
dec
sub
outsb
lds
repnz
sub
div
sbb
dec
jbe
lods
lcall
cmc
add
out
stc
mov
data16
cltd
mov
test
xchg
addb
enter
gs
enter
std
mov
das
inc
and
jne
jmp
out
inc
sbb
xor
mov
or
pop
xchg
cli
les
sbb
in
out
inc
mov
test
lret
sbb
dec
int3
jo
popf
cmpsb
inc
jbe
pop
or
jbe
imul
out
mov
minps
mov
int3
ficoml
inc
test
iret
negl
sub
adc
sub
jmp
ljmp
sbb
in
or
push
mov
push
push
idivl
jno
add
inc
inc
aam
lds
lds
pop
pushf
pop
push
mov
mov
or
int
inc
xlat
sub
sbb
jae
xchg
mov
loope
jne
lods
push
std
xor
sub
inc
cmp
mov
psrld
mov
xchg
arpl
jp
mov
pop
mov
je
ret
mov
fbstp
dec
cmc
fs
xor
inc
pop
add
mov
lods
int3
sti
sub
mov
notl
mulb
shr
outsl
into
or
jo
fstl
xchg
push
repnz
shll
sub
and
or
jp
mov
clc
mov
fdivrl
xchg
jo
or
jge
add
scas
pop
lcall
cld
pop
push
mov
push
outsl
pushf
aaa
out
push
jecxz
cld
xor
adc
jle
testb
mov
dec
mov
xchg
and
cmpsl
insb
xchg
mov
lcall
decl
pop
mov
outsb
jg
sbb
cmp
xchg
mov
pusha
ret
jmp
sbb
jg
fidivrl
movsl
lea
xor
fimuls
fwait
pusha
fcomps
icebp
and
out
enter
adc
xlat
ss
mov
mov
mov
jns
divl
enter
mov
lods
das
and
test
xchg
into
push
call
lea
data16
and
aam
add
in
mov
mov
adc
test
hlt
jle
inc
sub
push
push
add
sub
into
aaa
dec
xchg
xchg
and
sti
xchg
out
mov
notb
dec
xlat
or
rcrb
fnstsw
or
adc
lods
orb
xchg
jp
negb
mov
or
dec
fisubrl
adc
jl
arpl
fmul
cmp
jle
jb
jle
push
inc
push
xchg
mov
mov
jp
mov
or
popf
sub
or
clc
pop
dec
fstp
fucom
pop
pop
push
xchg
nop
or
stos
lret
dec
fisttpll
les
popa
push
or
jle
cs
add
or
dec
aas
xor
and
pop
shl
xor
jge
adc
dec
sbb
mov
test
cwtl
iret
test
xorb
mov
ds
cld
adc
cmp
cmp
sub
popf
jbe
inc
out
xor
shlb
js
cmpsb
sbb
popl
jmp
adc
mov
or
popa
xor
mov
ljmp
or
xor
dec
jb
ljmp
fldcw
loop
sbb
sub
repnz
mov
je
or
and
das
subb
sbb
xor
sub
jno
inc
aad
add
sti
mov
out
es
jecxz
dec
sub
jno
cmpsl
xlat
lds
repnz
repnz
cmp
ficoms
or
movsl
mov
fldl
popf
mov
pop
xchg
or
faddl
mov
leave
leave
sub
xchg
bound
mov
gs
adc
xchg
mov
push
mov
sub
out
mov
xchg
test
sbb
jae
roll
repz
fidivrs
das
popf
pop
out
sbb
adc
xchg
inc
jecxz
jb
sub
cmp
or
out
sub
mov
adc
repnz
and
mov
rcrb
dec
aad
pop
jmp
adc
bound
daa
pop
cmpsl
mov
sbb
movsb
lock
jb
adc
hlt
std
cmpsl
incb
cmp
sbb
dec
sub
aas
adc
cmp
in
lods
hlt
pop
xchg
and
int
push
cmp
cs
mov
shll
xchg
xlat
stc
cltd
jecxz
mov
sahf
out
verr
xor
mov
fidivrl
movsb
cmp
push
test
leave
test
call
sub
js
idivl
lock
pop
sbb
pusha
fucomi
mov
sub
dec
jmp
pop
dec
mov
addr16
mov
fs
mov
jge
jge
or
xchg
jmp
or
sub
cli
add
cmp
loope
xor
adc
cs
xor
adc
dec
or
std
out
pop
es
mov
popf
inc
cmp
and
int3
or
pop
or
cld
dec
int3
arpl
push
cmp
cmp
jmp
jno
sahf
sub
jecxz
movsb
ret
icebp
dec
ja
jnp
inc
out
in
mov
jns
lock
jne
push
lret
lock
aam
fyl2xp1
addb
insb
sub
xchg
std
int
fs
sbb
icebp
add
popa
repnz
sub
xor
sarb
sub
rclb
xlat
ficoms
add
inc
pop
fisubrs
fcoml
push
adc
gs
mov
add
push
cmp
jle
imul
or
inc
pop
pusha
loope
test
cmpsb
enter
fsts
cmp
fdivl
jg
into
dec
mov
add
cmc
push
insl
jecxz
and
call
popa
jae
jno
fmull
js
sbb
int
aam
inc
stos
out
xor
xor
icebp
sub
xor
fdivl
aaa
push
jp
and
or
jle
jo
insb
xchg
xchg
divl
push
mov
cmp
dec
inc
add
rclb
and
scas
or
push
dec
xor
inc
cmc
lea
mov
xchg
xor
stos
imul
out
stos
es
xor
call
adc
lods
or
imul
mov
mov
inc
cmp
aam
pop
inc
pop
shlb
adc
mov
aam
pop
ficoml
xchg
mov
mov
jp
and
or
cmp
into
mov
stos
push
insl
adc
cmp
insb
loopne
dec
lods
pushf
mov
sub
xchg
std
push
lea
out
pop
pop
inc
push
jmp
andl
jns
std
adcb
jmp
sahf
adc
or
insb
das
and
mov
push
xchg
lods
pushf
cmpsb
or
sub
iret
cld
jge
and
mov
and
leave
movsl
mov
fldt
arpl
adc
sub
xchg
mov
dec
jmp
cwtl
ds
cwtl
jbe
les
or
out
das
mov
and
adc
xor
sub
jno
push
outsb
xor
pop
rolb
ljmp
mov
dec
lret
or
and
jg
cmp
stos
out
cmp
rorl
dec
fwait
mov
adc
add
inc
repz
addb
stos
cmpsl
into
inc
xchg
mov
pop
mov
inc
daa
push
mov
ret
mov
je
daa
test
mov
out
mov
jnp
cmpl
repz
sub
ss
adc
push
fyl2x
fsubl
mov
or
scas
mov
std
jnp
cmpsl
and
in
sub
xchg
movsl
or
outsl
leave
and
jle
fidivs
push
xor
add
and
pop
aaa
popf
cmpsl
mov
call
dec
je
cmc
push
fstp
adc
jecxz
push
jbe
inc
cli
fwait
test
movsb
fisttpl
scas
cmp
jecxz
mov
push
rorl
idivb
frstor
lds
cmp
xor
loopne
push
in
pop
mov
mov
xor
mov
sub
add
add
mov
insb
test
ss
mov
mov
mov
sbb
inc
mov
xlat
js
pop
ds
cli
rclb
fistpll
movsl
mov
adc
mov
xchg
ret
addr16
mov
roll
sbb
fwait
das
mov
pushf
movsl
push
mov
orb
iret
adc
loope
jmp
sub
jb
jle
adc
fnstcw
or
jnp
aas
sub
sub
add
dec
xor
clc
add
pop
jb
mov
pop
and
jns
call
xor
arpl
jge
pushf
dec
cltd
pop
popf
icebp
add
xchg
push
pop
pop
loopne
insb
adc
dec
cltd
push
mov
mov
mov
pop
adc
adc
sbbl
fisubrs
adc
fsts
es
sbb
xchg
xchg
lahf
outsl
xchg
jb
aas
aad
aad
jle
xchg
nop
adc
repz
cld
sbb
fmull
xor
int3
into
pop
sti
adc
or
clc
dec
jle
xchg
fstl
stc
pop
popa
inc
sub
jbe
stc
push
mov
std
imul
cli
dec
jno
js
out
mov
imul
mov
push
dec
dec
add
pop
stos
cmpsl
jecxz
idivb
push
imul
sbb
repnz
mov
mov
lahf
cmc
jecxz
xchg
mov
test
cmpsb
lcall
mov
ret
daa
push
pushl
leave
ds
ror
bound
in
mov
mov
xchg
ja
pushf
loope
imul
pop
jl
inc
dec
push
js
sahf
jbe
imul
loopne
or
pop
clc
mov
mov
lods
data16
arpl
hlt
jne
idiv
xchg
aad
stos
pop
or
clc
mov
stos
jp
push
bound
imul
xor
sarl
adc
imul
push
mov
sahf
out
int
bound
fstl
stos
xchg
pop
sub
sbb
lret
notl
lcall
mov
dec
jbe
cld
out
fsubrl
adc
adc
insb
cmc
test
sbbb
cmpsb
xchg
andl
adc
clc
in
inc
mov
mov
gs
mov
cwtl
hlt
adc
mov
adc
push
push
insl
dec
aas
xchg
cmp
dec
pop
lods
or
imul
mov
js
in
je
imul
into
test
mov
push
xor
out
inc
pop
cmc
scas
cltd
xor
addr16
pop
repnz
ret
imul
pop
push
mov
jo
clc
mov
jmp
stc
ss
sbb
sub
dec
dec
test
push
adc
pop
push
and
dec
mov
pop
jp
mov
inc
and
xor
pop
inc
inc
icebp
insl
mov
mov
xchg
jmp
add
sbb
mov
cwtl
adc
and
adc
xor
cmpsb
xor
test
in
popw
rcrl
fisttpll
fwait
inc
sbb
mov
adc
add
bound
insb
or
sbb
int3
and
jnp
or
adc
pop
fsubp
mov
pop
das
mov
or
jns
dec
icebp
adc
nop
lds
jbe
sahf
jo
inc
divb
fimull
xchg
out
popa
inc
sub
rorl
and
movsb
push
stos
push
mov
or
ljmp
dec
subb
sub
xor
push
insl
sbb
jecxz
lods
pop
jg
sub
xlat
sub
pop
loope
icebp
ret
xchg
mov
jno
and
fcmovnbe
stos
jnp
push
mov
scas
in
mov
sub
dec
mov
push
xor
xchg
mov
out
cmp
adc
movsb
data16
mov
push
icebp
ds
je
sbb
jecxz
push
sahf
sbb
cmpsb
xchg
xchg
and
cwtl
scas
enter
and
or
test
jbe
push
scas
inc
shrl
aas
dec
sbb
sub
subl
and
and
xlat
adcl
cmp
push
mov
mov
and
call
nop
js
sbb
and
cmp
hlt
out
test
mov
mov
dec
sar
xchg
sbb
icebp
dec
cmpl
push
pop
leave
adc
pop
mov
mov
pop
adcb
mov
outsl
push
or
or
pusha
mov
sub
mov
ja
xchg
mov
mov
fsts
push
push
push
pop
sub
lea
movsb
les
lock
pop
int3
push
pop
mov
cmp
add
out
jns
jmp
cmp
mov
xchg
out
mov
add
jle
sub
mov
sub
pushaw
movsb
dec
cmpsb
sbb
ja
shlb
sbb
push
out
mov
in
mov
aas
add
in
int
sub
stc
jbe
cmp
movsb
sub
adc
and
pusha
jne
xchg
or
ljmp
imul
or
cmp
jle
mov
and
shl
push
pusha
mov
data16
fdivs
push
sub
ret
push
cmp
inc
push
ljmp
inc
pop
lcall
sarl
orb
add
xchg
xor
cltd
fnstsw
scas
mov
repnz
int3
or
stos
pop
mov
lds
pop
cmc
push
mov
dec
dec
rcll
pushf
mov
xor
inc
js
daa
in
in
bound
push
nop
pop
stc
pop
push
xor
sbb
fsubrl
pop
mov
xchg
out
mov
mov
insl
dec
jns
and
jo
sar
and
out
fstl
inc
loop
mov
inc
jl
xor
out
sub
int3
popf
sbb
cld
jb
mov
adc
or
stos
or
iret
test
imulb
and
xchg
cmc
fists
gs
mov
inc
fistpll
ljmp
xchg
fists
push
push
push
inc
xor
fiadds
cwtl
test
adc
ret
repnz
mov
push
add
xor
dec
in
push
mov
adc
fwait
mov
jae
les
sbb
arpl
subl
cmp
or
aas
cmpsl
and
fs
push
call
mov
jbe
leave
cwtl
push
aas
xor
push
test
ljmp
push
inc
jecxz
adc
lss
aad
push
jb
das
mov
adc
sti
jno
mov
jg
push
outsb
mov
xor
fcmovb
pop
xor
shll
push
insb
std
aaa
in
insb
and
inc
fiadds
je
push
imul
into
rorl
xchg
outsb
xchg
add
jg
xor
add
dec
xchg
test
push
mov
gs
adc
sub
push
xlat
sub
fnstenv
mov
and
push
es
mov
add
imul
es
jge
push
outsl
jbe
movsl
lock
dec
leave
push
test
inc
frstor
mov
ja
movsb
outsl
scas
outsl
push
or
out
pop
outsl
rcrl
aaa
adc
cmp
add
shl
push
ljmp
xor
daa
int
mov
mov
jg
lock
xor
outsl
pop
dec
mov
sbb
leave
out
cwtl
js,pn
popf
jno
addb
mov
and
mov
stc
lods
dec
scas
inc
inc
iret
in
nop
cmp
test
insb
subb
jne
loop
outsb
cmp
inc
mov
sbb
adc
adc
cltd
cmpsb
add
xor
popf
or
enter
in
arpl
pop
lret
mov
push
dec
gs
xchg
into
js
repnz
imul
loope
imul
mov
sub
jge
sub
xchg
sbb
mov
mov
add
push
stos
sbb
mov
mov
sbb
push
test
addr16
xchg
fistl
daa
cmp
call
push
mov
sub
push
movsl
and
cmp
cmpsb
and
mov
and
xchg
movsl
daa
lcall
mov
arpl
mov
addr16
cld
scas
adc
mov
xchg
adc
cmc
cmc
push
std
lods
out
imul
orl
push
cld
cmp
push
lods
lret
sbb
push
pop
aam
push
add
icebp
adc
or
and
in
add
jbe
gs
push
mov
lods
mov
mov
or
sub
jbe
test
mov
mov
push
data16
dec
das
imul
loop
inc
push
hlt
enter
xchg
daa
lea
or
dec
aas
mov
in
lcall
jae
jp
shrb
shrb
or
dec
xchg
mov
sbb
and
bound
fldl
mov
in
xchg
call
ja
icebp
cmp
pop
xchg
pop
out
mov
sbb
push
scas
aaa
test
ret
or
leave
cltd
push
aam
push
push
in
ficompl
adc
dec
aaa
add
cltd
mov
sub
mov
mov
fmuls
jl
lret
aad
jecxz
jecxz
mov
inc
out
arpl
inc
cmp
pop
cmpsb
stos
xchg
mov
jecxz
mov
mov
lds
test
dec
inc
fadd
testl
ret
mov
or
push
jne
movsl
movl
xchg
or
loop
out
cli
dec
scas
inc
inc
ds
rclb
int3
mov
cmp
rolb
adc
or
and
pop
daa
and
adc
fwait
lea
mov
mov
scas
dec
jmp
enter
xor
fcomp
dec
std
andl
mov
cmp
push
daa
ret
lods
imul
jge
fcompl
cmc
fcmovnbe
leave
pop
aad
push
jle
stos
lahf
loope
sub
test
mov
add
scas
mov
hlt
enter
stos
nop
lods
loop
jne
cwtl
out
or
nop
sbb
inc
out
pop
sbb
sbb
jne
into
sbb
stos
mov
xchg
push
lods
and
and
hlt
jns
pop
out
cmpsl
lahf
pop
cmp
dec
sub
setl
mov
jns
sbb
xchg
les
xchg
or
inc
pop
out
fistl
pop
scas
dec
aas
jns
adc
out
or
dec
pop
pop
or
stos
push
xor
clc
add
mov
sbb
imul
pusha
lcall
lds
mov
ja
pop
and
xchg
mov
aaa
jmp
xchg
call
daa
rcl
dec
fsts
out
pop
in
aas
testl
cmpsl
ja
in
pop
fnstcw
xchg
sbb
outsl
inc
lods
cmp
cld
aas
lahf
inc
ficomps
jge
scas
aas
sbb
dec
test
mov
inc
adc
lea
xlat
xor
mov
jo
lcall
push
ja
into
pop
or
outsl
xchg
pushf
push
push
in
sbb
divb
mov
and
out
shr
in
loop
fmuls
popa
mov
test
xchg
lret
cwtl
rolb
addr16
test
or
mov
je
cmc
sbb
mov
dec
mov
pop
pop
and
inc
in
stos
clc
add
repz
jmp
lock
in
lret
stos
pushf
xchg
repnz
dec
bound
sbb
cmc
mov
insb
mov
push
sbb
lahf
lods
mov
frstor
data16
repnz
ficomps
pop
fsubs
mov
jmp
loope
jae
cli
add
add
sbb
repz
mov
mov
pop
pop
sub
jo
aam
jmp
jns
insl
inc
dec
popf
pop
xchg
lcall
xor
inc
imul
cmp
in
cmc
outsl
popa
shl
mov
jg
dec
fisttpl
add
lea
xor
mov
rcr
mov
cli
jo
cli
pop
imul
fucom
divl
loope
adc
insl
fdiv
aad
into
jmp
mov
inc
and
or
fsubs
lret
mov
scas
jg
shlb
repz
mov
imul
mov
fisubs
call
jne
in
push
cli
sti
out
shlb
inc
cmp
insl
push
lret
ja
in
mov
xorl
inc
popa
mov
fbstp
xor
sbb
outsb
jne
popf
ret
sub
xor
push
fsts
pop
pop
push
sub
jle
sarl
xchg
inc
jmp
in
adc
lahf
fnstcw
pop
pop
pop
add
idivb
xchg
pop
sub
cmc
jnp
cmp
imul
repnz
repnz
adc
push
push
int3
inc
mov
pop
leave
ja
cmp
cwtl
cmp
sahf
inc
in
stos
mov
ret
add
mov
loop,pt
xchg
mov
push
sub
xchg
add
inc
and
and
stos
pop
push
pop
lds
mov
mov
test
or
cmp
xor
fimuls
stos
mov
aas
mov
fsub
xchg
mov
and
sbb
adc
inc
push
or
and
js
sbb
add
mov
loopne
dec
stos
mov
pop
mov
add
add
scas
adc
mov
mov
shlb
insl
insb
jge
les
pop
adc
ficomps
lret
xor
insl
mov
lods
sub
or
or
pop
lahf
fbstp
jb
jno
shlb
push
xor
mov
sbb
or
sub
js
jb
pop
pop
jbe
mov
aam
adc
jo
in
lcall
mov
outsb
sub
addr16
pushf
push
test
and
mov
pop
scas
mov
ret
mov
loopne
icebp
insb
int
das
push
imul
es
push
insb
test
dec
popf
scas
jmp
call
repz
loopne
push
and
out
iret
test
push
into
in
push
test
outsl
pop
jnp
and
mov
loop
and
xlat
xchg
test
frstor
outsl
mov
or
loop
xchg
add
adc
stos
mov
xchg
fsubrp
xor
and
insl
dec
and
xor
loop
push
adc
sbb
test
push
mov
in
sub
cli
test
rclb
dec
inc
adc
into
jecxz
movsb
fldenv
outsb
cmp
sbb
inc
ret
stos
aam
sub
pop
aaa
xchg
xchg
sbb
mov
jecxz
mul
clc
dec
je
xchg
aad
xchg
in
stc
sbb
sub
daa
insb
loopne
push
mov
xchg
pop
stos
and
fcoml
dec
repnz
int
push
xchg
inc
mov
inc
inc
mov
int
dec
ljmp
stos
inc
lea
fwait
xor
push
nop
xlat
mov
jge
sub
add
outsl
adcl
jl
test
push
push
push
pop
inc
stos
movsl
add
shl
sbb
pusha
les
aaa
mov
icebp
out
call
mov
outsl
cmpsb
add
jb
movsb
jno
xchg
ret
loopne
dec
xor
xor
mov
jg
stos
or
movb
and
leave
lret
pop
jl
mov
stos
rorb
jb
repnz
adc
cltd
jmp
jbe
mov
inc
roll
push
ret
pop
sbb
inc
cmpsb
jle
mov
mull
enter
cmp
inc
mov
xor
mov
scas
mov
mov
lods
jns
jno
in
cmp
pop
mov
adc
cltd
sub
and
into
je
call
mov
cmpsl
test
push
mov
add
push
fdivrs
jmp
imul
jecxz
mov
lock
xor
ret
movsb
add
mov
vmovq
das
sbb
push
insb
dec
filds
sbb
int3
aad
stc
fdivr
aad
dec
test
adc
push
inc
mov
mov
movsl
sub
jb
inc
pop
ja
cmpsb
jmp
cmp
mov
pop
adc
or
lea
shr
adc
jo
xchg
adc
jmp
rorb
lahf
in
pop
ret
shlb
outsl
jmp
outsb
leave
add
add
push
cmp
cmp
mov
fmul
adc
pop
ror
xchg
call
mov
jl
aaa
ds
jno
cs
mov
test
inc
std
and
mov
lret
jns
shl
push
jg
adc
cmp
gs
lock
pushf
adc
imul
sbb
repnz
pop
pop
les
sbb
sub
xor
mov
cmp
sub
into
jnp
xor
and
and
pop
mov
xor
icebp
andl
and
int
shlb
out
xor
lret
imul
loop
pop
arpl
pop
into
xchg
push
dec
inc
xor
cmpsl
xor
adc
ret
rorb
pop
pop
push
pop
shll
push
add
sub
xchg
pop
jl
fdivr
lock
jns
mov
jmp
pop
inc
inc
mov
in
pop
adc
ds
jmp
in
sarb
fistpl
push
outsb
call
sub
push
cmpsb
add
lods
rcrb
or
popf
xor
xlat
jg
out
inc
aaa
dec
xor
popa
outsl
clc
mov
hlt
jo
push
and
cmp
dec
pushf
sub
or
xor
cmpsb
mov
pop
mov
jo
sub
adc
inc
call
orl
jae
js
adc
mov
popa
dec
cmp
das
in
fimull
sbb
mov
or
test
out
xor
cs
negl
sub
mov
adc
jecxz
sbb
pop
fsubs
js
push
arpl
lahf
aad
inc
sub
popa
out
loope
aad
sub
xchg
bound
repnz
cmpsb
mov
in
xchg
add
int3
dec
int
outsb
mov
nop
jno
xor
fisttpll
sbb
inc
inc
jmp
cmp
out
lret
or
xchg
adcb
wbinvd
movsl
add
adc
pop
shlb
xor
imul
mov
xchg
add
jne
loop
cmpsl
inc
into
loop
fimuls
or
pushf
pop
xchg
push
inc
and
push
ficompl
xchg
xchg
int
mov
subl
and
lahf
mov
mov
das
cld
jecxz
mov
addb
xor
jnp
dec
sbb
mov
xchg
test
mov
sbb
into
test
xchg
lods
insb
clc
std
fwait
push
mov
mov
adc
jmp
jnp
int
das
or
mov
lahf
jbe
rorb
inc
cmp
dec
insl
sbb
jl
pop
std
mov
mov
hlt
xchg
pop
cmp
fdivs
jp
outsb
sbb
inc
stc
and
daa
movsb
pop
dec
adc
mov
lcall
xchg
cli
aas
int3
xchg
push
and
cmpsb
xor
fs
jnp
xchg
pop
repnz
adc
or
jmp
push
imul
fwait
sbb
cmp
jl
pop
orl
push
sbb
push
and
xor
push
xor
ret
xchg
adc
jg
insb
mov
stc
popa
adc
nop
push
mov
ja
fiaddl
lret
sbb
ljmp
fldt
sbb
push
clc
scas
aam
stos
shl
adc
dec
mov
xchg
inc
iret
lcall
cwtl
xor
jns
addr16
jbe
lcall
aas
jb
mov
pop
aas
in
sub
scas
mov
sbb
sub
mov
push
lods
adc
pop
sub
mov
js
shr
cli
pushf
into
sbb
mov
movsb
mov
cmp
sbb
rolb
test
mov
aaa
jo
in
mov
pop
xor
stos
jo
lret
arpl
add
lret
clc
mov
std
mov
inc
and
mov
push
call
xlat
ffree
jnp
cmp
roll
mov
cs
cmp
jo
mov
mov
ss
in
insb
mov
outsl
popa
cld
rcll
into
loope
push
mov
out
jno
sahf
push
pop
sbb
loope
jmp
cltd
into
adc
mov
adc
pminub
sbb
xchg
sbbb
gs
pop
jno
or
mov
xchg
sbb
mov
cmc
mov
cmp
aaa
dec
push
pushf
sub
mov
sbb
enter
dec
push
ja
sti
pusha
mov
clc
jnp
out
fs
pop
sbb
call
sarl
sub
aam
and
and
sub
ret
jbe
cwtl
jbe
mov
xor
je
fsubs
inc
jns
sbb
in
daa
push
fisubrs
int
xchg
mov
add
xchg
rcrl
sar
or
sbb
pop
push
lret
lods
in
ret
idiv
xor
sub
out
rorb
lret
jno
cmp
mov
negl
js
stos
popf
scas
cmpsb
fisubs
clc
loope
rol
add
cmc
nop
imul
js
fldcw
cmp
adc
div
and
or
cltd
divps
iret
dec
subb
pop
popa
inc
xorb
test
and
fisubs
clc
rcr
aam
push
add
mov
les
push
inc
jmp
xchg
and
cmpsl
xor
pusha
or
or
dec
sub
fisttps
xor
or
je
mov
clc
in
inc
mov
mov
insl
jg
faddl
movswl
std
mov
xchg
jmp
jge
in
ds
xchg
push
pop
sub
mov
pusha
dec
aam
sahf
pusha
sbb
dec
sti
shlb
mov
inc
and
jge
and
fwait
sub
inc
add
fstps
adc
test
popf
enter
shlb
inc
add
pop
cmp
mov
test
out
pop
cmp
daa
es
ret
fiadds
jno
mov
pushf
cltd
ljmp
push
ficompl
jne
outsl
mov
test
or
push
ja,pt
mov
adc
sbb
cwtl
gs
sti
imul
mov
jne
cli
add
inc
xchg
push
aas
ret
test
repnz
xor
flds
adc
gs
popf
pop
test
push
repz
shrd
lock
test
test
push
gs
arpl
pop
inc
jp
jg
jb
jb
xchg
xor
mov
adc
push
jecxz
ljmp
into
push
mov
sbb
outsb
adc
push
xchg
sub
stos
inc
scas
adc
inc
scas
adcb
popa
adc
jle
in
sbb
mov
test
stc
cmpb
xchg
mov
inc
mov
dec
xchg
in
sub
popa
es
adc
sub
test
and
testl
push
cmpsb
sbb
mov
xchg
dec
in
nop
in
push
movsb
jae
addr16
cmp
insb
cmp
mov
arpl
cmp
pushf
loop
push
push
sti
fisttpl
test
sub
leave
and
cmp
fsubl
pop
ret
ret
and
xor
sbb
and
dec
pusha
inc
popa
pop
arpl
adc
xor
imul
rorl
aad
lds
cmp
sub
sahf
pop
sbb
lock
push
or
bound
divl
and
push
ret
fcompl
mov
mov
jb
popf
fsts
sbb
jo
push
jp
sub
mov
in
ret
jle
pop
in
gs
hlt
jge
sub
pop
enter
out
push
mov
outsl
leave
sbb
pop
sbb
cmp
pop
mov
cmpsb
arpl
pop
mov
xchg
xchg
adc
cmc
mov
mov
push
inc
adc
loopne
inc
dec
jl
cli
push
popa
imul
nop
nop
insb
std
repnz
push
xchg
push
sub
cmp
cmc
or
adc
xchg
dec
add
imul
inc
dec
fs
mov
imul
jl
sbb
pop
imul
mov
test
xchg
cmp
cmpsb
sarb
aaa
jl
mov
movsb
pop
aaa
cli
or
shlb
mov
adc
data16
fdivr
lret
mov
cmp
ss
sahf
xor
pushf
xchg
push
lahf
sbb
pop
loop
int
pop
psraw
dec
pop
jle
cmpsl
mov
xchg
dec
mov
leave
out
bound
in
orb
xchg
mov
in
mov
lock
xchg
and
and
xchg
cmc
loopne
jle
sarb
test
pushf
xchg
xor
inc
sub
pop
mov
in
idivl
int3
adc
mov
push
inc
mov
push
dec
in
pop
movsb
sti
mov
fadds
out
and
sub
jecxz
repz
mov
cmp
adc
in
inc
sub
dec
cwtl
pop
pop
sbb
call
or
pop
sub
shll
dec
sub
js
mov
inc
notl
jle
mov
test
int
rolb
cmpsl
sahf
ret
icebp
dec
sbb
dec
in
jno
push
add
jl
arpl
add
test
pop
push
xchg
xchg
inc
xchg
jno
sti
inc
rcl
fldl
nop
pop
mov
shrb
push
push
out
push
mov
inc
xor
or
insb
or
subl
jp
outsb
bound
lock
mov
pop
and
outsb
push
insl
xlat
mov
cmpsl
jae
xchg
out
jp
aas
addl
imul
arpl
stos
cld
cmpsb
mov
js
int
mov
cmp
xor
rorb
addl
imul
push
sub
int3
mov
jne
pushf
inc
lcall
pusha
mov
jmp
sti
mov
cmp
inc
add
push
xchg
dec
pop
sbb
jno
add
fcompl
push
into
jle
test
inc
pop
pop
mov
cmp
fs
lock
xor
fdivrs
out
dec
testl
repz
xor
out
mov
pop
loop
ret
xlat
jge
ret
xchg
int3
push
cmp
mov
lcall
cltd
mov
push
movsl
dec
mov
lds
cmpsb
sbb
sub
ja
push
and
xor
xor
addr16
mov
jno
out
dec
ret
test
jne
push
jl
inc
test
mov
mov
jne
stc
lea
jbe
xchg
dec
sbb
push
mov
push
push
sbb
and
mov
mov
in
dec
popa
dec
out
mov
jecxz
in
jne
ljmp
cs
dec
pop
xorb
dec
aaa
push
movsb
pop
mov
sbb
or
jne
test
cwtl
data16
je
dec
addb
and
lret
jo
jnp
pop
push
leave
cmp
mov
call
sbb
jecxz
cmp
out
xchg
mov
jns
dec
jb
iret
cli
shrb
inc
sub
icebp
mov
lock
and
fdivs
push
inc
test
jne
adc
nop
scas
pop
dec
push
xor
mov
jae
jns
bound
rcr
adc
sub
push
pop
in
add
mov
mov
jecxz
dec
sub
fwait
bound
push
mov
cs
sub
lods
mov
jecxz
arpl
sbb
je
das
xor
stos
cmp
ss
adc
lock
inc
cmp
or
movsl
xor
xor
fwait
ss
lock
inc
fsubrs
cwtl
gs
lock
scas
xchg
rorb
lock
push
xchg
divb
jg
pop
insl
pop
mov
and
cmp
outsb
lahf
bound
push
mov
sti
cs
lods
orl
out
aaa
xchg
nop
jl
fimuls
cs
add
cs
jmp
aaa
es
js
les
sahf
xor
daa
js
jg
xorl
lret
jnp
or
js
jl
or
test
cmc
mov
popa
jecxz
pop
aaa
push
inc
xchg
adcb
mov
in
out
out
clc
test
cmp
jp
addr16
or
push
out
mov
jg
pop
xor
fcmovnu
fisubl
inc
test
push
mov
xor
repz
clc
fisttps
mov
cs
xchg
les
and
cwtl
leave
fisttps
pushf
movsl
lahf
push
xchg
or
adc
leave
and
js
inc
jmp
xchg
mov
sub
jno
push
or
pop
push
stos
jbe
fadd
enter
popf
pushf
push
int
xlat
mov
mov
xchg
jno
and
call
shl
or
pop
aam
pop
test
cmp
fmull
xchg
cmpsl
push
dec
push
sbb
call
sbb
ret
mov
adc
lret
scas
stos
clc
jne
mov
push
aam
rolb
and
xchg
test
clc
mov
cmp
stos
jns
lret
push
lods
enter
fcoms
das
add
mov
orl
xchg
nop
mov
loope
cmpsb
dec
push
push
lock
xlat
daa
lock
sub
fisttpll
out
pause
jns
pop
lods
loope
aas
push
and
jp
rcr
clc
push
mov
fidivs
repnz
push
pop
inc
stos
pop
dec
or
shrl
movsb
adc
popf
jb
jo
mov
rolb
clc
inc
pop
or
dec
sbb
movb
dec
or
inc
adc
andb
insl
cli
add
cmpsl
cmpl
sub
mov
pop
lea
stos
cmp
sbb
lcall
pop
fwait
mov
mov
movsb
sbb
dec
test
cmp
into
lahf
enter
ja
sbb
out
sub
xor
daa
out
inc
shl
push
in
fdivrs
cmpsb
cli
gs
pusha
loop
cmp
mov
sbb
testb
and
mov
add
add
lock
or
rclb
inc
rcr
xor
mov
and
mov
dec
dec
xchg
add
iret
mov
gs
jbe
pop
mov
dec
push
xor
jb
mov
add
lock
into
gs
stos
rcr
xchg
jp
out
mov
popa
adc
shrl
mov
sub
and
test
dec
cmpsb
mov
leave
mov
xor
mov
fwait
enter
cmpl
or
push
push
dec
dec
fcompl
fsts
add
and
cs
lret
out
sub
dec
outsl
mov
sbb
jecxz
out
es
lock
movsl
stc
inc
fdiv
aas
push
xchg
mov
pop
sub
inc
sub
mov
mov
mov
leave
mov
add
imul
lret
cmovo
adc
test
pushl
incl
or
stc
push
pop
in
dec
iret
es
es
icebp
adc
xor
ret
dec
shrl
fistl
xor
sbb
in
xor
into
clc
cmpl
pop
jl
jo
shrb
adc
out
leave
mov
stos
repz
jb
vsqrtsd
add
and
mov
shl
negb
inc
inc
add
cmp
into
dec
cs
ret
leave
pop
adc
jns
jae
mov
sbb
or
call
pop
push
fsubrl
mov
sbb
or
arpl
jp
add
movsl
sub
mov
cmp
mov
stos
ljmp
dec
ljmp
mov
das
popa
mov
xor
rcrl
xor
inc
insb
mov
cwtl
popa
or
dec
test
or
fsts
xchg
cwtl
xor
loop
push
insb
sbb
hlt
sar
addb
aad
sbb
pop
pushf
jg
mov
das
jae
adc
mov
popf
jle
adc
push
pushf
push
xchg
dec
xor
popf
mov
hlt
push
lea
mov
fnstenv
jl
mov
and
sub
push
xchg
xlat
dec
mov
lcall
divl
int3
jo
adc
mov
inc
dec
dec
xor
sub
aas
das
jmp
adc
push
movsb
jb
shlb
in
nop
cmpb
jno
test
push
xor
push
jne
das
int3
scas
sub
pop
xor
lret
bound
add
xchg
xchg
adc
idiv
sbb
out
xor
sub
and
hlt
add
mov
pop
ds
mov
stos
mov
inc
xchg
cmc
clc
test
stc
and
sub
add
jmp
cmp
fstpl
jge
popf
pop
push
add
mov
inc
and
popf
sbb
or
mov
iret
jbe
mov
ljmp
and
jle
outsl
lret
pand
xchg
ret
jo
outsb
int3
mov
test
mov
cs
xlat
adc
in
ljmp
xor
in
sbb
inc
imul
cmp
jmp
push
sbb
adc
xor
inc
cmp
push
icebp
aad
xchg
adc
push
dec
pop
out
or
jno
aas
and
test
fldl
pop
mov
jmp
or
mov
xchg
rorb
jmp
dec
enter
iret
add
into
loopne
pop
or
push
testl
dec
xor
pop
daa
and
pop
aam
movsl
in
inc
mov
mov
outsb
lds
and
stc
push
sub
push
dec
dec
or
adc
lea
xchg
mov
ficomps
ss
cli
mov
sub
inc
inc
loop
push
inc
mov
movsl
rcrb
jnp
sub
clc
sbb
dec
sub
pop
dec
mov
lds
sti
sub
enter
fucomp
dec
xlat
dec
ljmp
pop
enter
or
and
adc
pop
stos
push
in
inc
not
dec
mov
push
daa
shlb
or
subl
negl
mov
in
cmp
push
push
jmp
xchg
jle
fsqrt
ljmp
mov
xchg
repnz
ds
fnsetpm(287
mov
push
das
inc
sub
add
xchg
into
or
sahf
stos
or
lods
mov
jmp
cmp
cmp
xlat
fidivl
mov
xchg
in
jae
pop
push
cmp
in
lods
jmp
mov
iret
jge
call
xlat
incb
xchg
js
adc
sub
and
xor
test
cmp
test
push
jbe
lods
je
add
nop
in
lods
outsb
jg
out
cmc
loop
dec
ljmp
mull
mov
mov
shl
sub
mov
sub
call
dec
movsb
cltd
stc
inc
lret
add
sbb
jg
sub
int3
mov
xor
cwtl
nop
push
in
jg
sbb
dec
insl
mov
jmp
fwait
adc
cli
les
push
xchg
lret
push
ficomps
xlat
cmpsb
mov
mov
andb
cmp
cld
test
lret
adc
mov
hlt
and
mov
cli
into
inc
aaa
adc
enter
or
cmp
icebp
es
adc
adc
add
lret
adc
enter
push
movsb
loop
inc
dec
popfw
inc
xlat
lods
pop
and
push
jl
push
adc
jle
push
add
mov
push
mov
push
loope
pop
sbb
cmp
icebp
leave
enter
add
fwait
mov
test
or
in
lcall
in
loopne
xor
xor
rcrb
mov
clc
and
ret
add
gs
sbb
ljmp
add
and
jle
mov
movsb
jae
std
or
cmp
mov
mov
pop
arpl
adc
out
mov
or
pop
loope,pn
mov
fdivp
fcoms
loope
daa
dec
jo
push
movsl
into
jle
insl
out
sub
adc
mov
dec
insb
lret
mov
mov
push
repz
movsl
jne
pop
in
fmull
add
mov
push
jno
push
pop
push
sbb
aam
iret
ss
pop
rcl
addr16
inc
ja
in
in
fidivl
jbe
out
and
imul
cld
or
aad
sbb
or
ljmp
or
xorb
movsl
mov
loop
sub
pop
push
xlat
stc
add
ljmp
jmp
es
fdivr
nop
ss
addr16
subb
ss
push
mov
in
xor
lea
mov
loop
jae
add
test
lds
sbb
movl
nop
mov
xor
inc
xchg
shrl
enter
lea
pushf
dec
cli
fimuls
adc
inc
int
sbb
adc
adc
lds
gs
nop
pop
pop
cli
jne
lret
jne
inc
sub
outsb
jge
repnz
mov
loopne
pop
jbe
outsl
jns
in
adc
data16
mov
sub
mov
insl
out
sub
lods
icebp
or
out
push
lret
mov
cmpsl
insl
imul
and
adc
mov
scas
fwait
int
fnsave
or
sbb
popf
pop
sarl
mov
sbb
inc
movsb
jbe
fldenv
xchg
and
sub
mov
lahf
scas
cmp
daa
sub
scas
imul
adc
rcrl
fcompl
lret
aaa
pop
pop
and
sub
nop
int3
push
mov
popf
jl
xor
mov
sbb
xchg
mov
das
roll
pop
arpl
push
pop
mov
and
push
pop
ja
shll
jne
adc
push
inc
cmp
imul
and
cmp
inc
xchg
mov
out
dec
pop
dec
lret
add
punpcklbw
mov
adc
jne
or
add
incl
adc
pop
dec
or
shll
cltd
xchg
rorb
push
cmp
rol
out
push
out
dec
mov
std
adc
pop
jg
lahf
pop
dec
out
cmp
mov
es
lcall
mov
leave
mulb
mov
xchg
adc
push
pusha
push
sbb
xor
popa
cmp
jnp
cmp
ja
shlb
fistpl
aas
fs
xchg
outsb
fnstenv
mul
jecxz
imul
or
dec
out
stos
inc
jno
fisubrl
ret
outsb
add
pop
mov
gs
int
bound
imul
adc
sub
jae
addr16
icebp
imul
lret
pop
jae
fcom
fnstsw
pop
insl
insl
push
rep
adc
sbb
cmp
xchg
mov
fldt
cli
in
in
das
lds
push
sub
cmp
outsl
sub
xor
sti
adc
rol
lds
pop
xor
xchg
mov
pop
lds
lock
rorb
push
aas
imull
xchg
xor
mov
push
dec
push
loope
popa
sahf
idiv
pop
lods
into
idivl
mov
pop
pop
iret
mov
cmpsl
lods
notb
sbb
int3
cmp
cmpsl
cmp
mov
and
mov
inc
cmp
mov
xchg
push
mov
pop
sub
arpl
pushf
xor
call
lods
pop
pop
jo
les
add
fimuls
or
imull
push
cmp
es
jp
adc
into
or
pop
push
fsts
pop
out
int3
sub
pop
andl
jg
mov
jo
adc
xchg
sbb
mov
stos
jbe
mov
int3
xchg
cmpsl
xor
int3
gs
mov
arpl
div
cmp
lods
outsb
shll
and
orb
jae
hlt
push
pop
mov
test
sbb
jle
shll
ficoms
jo
xor
movsl
dec
out
mov
insb
icebp
adc
mov
pop
inc
mov
push
aam
mov
ret
xlat
pushf
inc
aaa
xorb
test
dec
addl
jecxz
xchg
push
test
sbb
jle
jbe
and
inc
sub
adc
mov
mov
push
jo
mov
xchg
mov
sbb
pop
clc
inc
sbb
into
roll
inc
jno
mov
xor
mov
js
test
mov
mov
sub
or
xor
ss
or
or
pop
and
ffreep
cmp
arpl
inc
cmp
push
pop
lock
movsl
dec
push
fcmove
dec
fldt
insl
shll
mov
pusha
xchg
or
and
pusha
test
push
ja
xor
in
ret
sub
and
fstps
lret
pop
xor
sti
lea
push
in
jns
negl
into
push
jnp
mov
adc
mov
mov
arpl
lcall
inc
jle
rcr
xchg
mov
adc
imul
and
sub
push
mov
stc
dec
mov
dec
jnp
dec
mov
ja
ja
int
mov
pop
pop
xchg
out
repnz
nop
mov
js
pop
jns
mov
scas
sub
movsb
inc
jnp
lods
in
loope
mov
or
mov
popf
stos
enter
mov
inc
sbb
test
or
addb
out
add
mov
jmp
adc
xor
push
lahf
es
mov
in
mov
inc
push
cs
clc
dec
jb
nop
popf
test
jnp
and
scas
loope
push
rcrb
insl
inc
jge
sub
mov
sub
mov
icebp
arpl
dec
dec
jecxz
push
push
in
mov
xchg
std
jle
sub
push
sbb
dec
sti
pop
js
inc
daa
xchg
sbb
dec
into
cld
xor
or
and
jge
mov
int
inc
cmp
pop
sub
add
aaa
pop
push
movsb
and
and
mov
adc
int
xchg
inc
inc
pop
ficomps
enter
mov
ret
inc
and
push
mov
popa
sbb
cwtl
sub
cltd
xor
fistpll
inc
stc
std
stc
jle
jae
jle
inc
push
adc
mov
mov
adc
and
mov
and
dec
mov
sbbl
int3
out
mov
mov
mov
int
cmpsl
out
pop
push
cmp
loop
jb
adc
insl
push
popa
jbe
and
push
mov
jns
test
and
inc
sub
fildll
stos
sub
or
mov
sbb
es
push
loopne
xchg
push
ret
pop
lds
sbb
jmp
sti
push
repz
fcomps
inc
js
lds
jecxz
mov
aas
out
negb
pushf
dec
adc
repz
and
mov
std
std
mov
cltd
adc
rclb
js
lods
sbb
jmp
and
xchg
test
ljmp
push
push
lea
das
jg
sarl
xor
and
loope
mov
cmpsb
std
lret
and
xor
leave
sbb
dec
addr16
add
dec
fs
imul
push
in
notl
dec
insb
xchg
cmc
scas
pop
pushf
mov
scas
lock
dec
mov
xchg
push
cmp
je
pusha
push
outsb
xlat
inc
rorl
sbb
popl
jne
inc
sbb
stos
cmp
sub
popf
xor
in
sbb
mov
dec
out
jne
push
cli
push
daa
mov
aam
lock
pop
insl
and
jmp
inc
inc
sahf
popa
lods
mov
adc
mov
outsb
cmp
out
mov
loopne
cmp
bound
sbbb
xor
jnp
inc
jp
ret
and
pushf
or
arpl
sub
sbb
mov
inc
into
cltd
repz
push
pop
aas
sub
dec
sub
loopne
arpl
lods
and
push
pushf
push
shlb
dec
mov
mov
sub
mov
lds
idivb
test
add
inc
out
jle
nop
mov
pusha
push
sti
xchg
or
xchg
xor
jb
and
mov
mov
imul
in
test
add
cmp
sub
mov
fadd
lcall
sbb
or
shl
push
pop
movb
mov
imul
push
push
das
mov
subl
lock
jle
sti
imul
fiadds
dec
lds
adc
call
ds
sub
orb
ljmp
xchg
cltd
jae
inc
jnp
xchg
test
movsl
sbbl
lods
jmp
or
cmp
and
out
cs
lods
inc
loop
xchg
add
je
add
adcl
shrl
enter
data16
mov
int3
push
or
sub
push
imul
xor
stos
fildll
push
pop
dec
and
lret
push
xor
nop
mov
xor
cld
mov
mov
inc
rol
xchg
clc
or
push
sub
mov
call
or
jecxz
arpl
mov
je
test
lahf
jns
fwait
int3
int3
out
pop
mov
ud1
push
xor
jns
loope
sub
idivb
pop
cs
jp
xor
dec
call
pop
ja
and
sub
icebp
jo
jae
cltd
dec
pop
jno
xor
sub
cwtl
push
leave
push
add
sub
jge
xchg
adc
sbb
dec
pop
push
lret
cltd
inc
lea
loop
mov
movl
lods
xor
add
push
jo
adc
pop
ja
mov
int
jmp
int3
push
cld
divb
push
inc
push
mov
mov
aaa
pop
dec
push
xor
rclb
je
cmp
mov
mov
call
in
int3
sub
lcall
dec
movsl
sub
pop
inc
fisttpll
mov
loopne
mov
xor
push
mov
dec
xor
mov
dec
adc
mov
mov
into
cmp
sahf
cld
mov
popf
adc
pop
loope
or
jecxz
mov
mov
ret
mov
lahf
add
push
jle
orb
or
xchg
pusha
ret
ficomps
or
push
insb
mov
mov
pop
mov
mov
push
push
addr16
mov
loope
aad
bound
pushl
mov
cmc
mov
push
jg
leave
pop
push
outsb
idivl
hlt
shlb
in
leave
xchg
nop
sar
sbb
dec
pop
stc
lcall
dec
mov
popa
rclb
inc
sbb
dec
hlt
rcr
or
ret
add
fdiv
mov
fnstcw
fstpl
arpl
mov
mov
std
xor
mov
sbb
jno
lea
repnz
add
mov
movsb
push
shlb
mov
add
mov
sub
or
int
iret
in
test
popf
push
mov
xchg
push
or
out
mov
cmc
insl
incb
roll
mov
mov
push
xor
lea
shrb
add
in
into
popf
jo
dec
test
fists
inc
mov
arpl
or
nop
jns
mov
xor
mov
add
push
cmp
push
jecxz
jmp
and
dec
dec
stc
loop
leave
inc
or
cltd
insl
adc
push
dec
mov
inc
jl
inc
cmp
dec
lcall
sbb
out
mov
mov
mov
mov
jns
cmp
aad
dec
jnp
les
insl
push
sbb
jbe
or
cmp
sbb
add
push
jmp
arpl
mov
push
xchg
in
lret
mov
icebp
add
shll
rcll
push
dec
fisttps
cltd
push
adc
xabort
rcrb
mov
std
loope
lea
test
xchg
jge
jbe
das
out
cmp
sarl
jae
mov
jge
mov
inc
aad
lret
pop
jnp
sbb
xchg
mov
stc
insl
lret
mov
lret
pop
cmp
push
inc
loop
add
int
cmp
add
push
aad
fstl
inc
lcall
mov
jge
mov
sarl
jge
in
push
and
sub
insb
dec
loope
mov
test
jae
in
movsb
enter
cltd
mov
stc
sbb
mov
jnp
loopne
pop
mov
ds
jmp
call
push
push
fucom
and
mov
pusha
push
bound
push
filds
adc
xor
cmp
in
sbb
dec
pop
inc
sbb
gs
nop
mov
inc
add
subl
outsl
ror
or
lods
test
inc
xor
ss
inc
mov
pushf
ret
in
fwait
push
xchg
xorb
subb
je
mov
gs
mov
mov
jp
aad
inc
lahf
fisubs
push
mov
insb
inc
ds
sbb
mov
xchg
add
pop
insl
xchg
xchg
inc
xor
movsl
mov
sub
in
pop
ret
xchg
addr16
push
fwait
inc
mov
icebp
adc
sarl
xchg
push
xchg
stc
inc
mov
lock
lcall
jmp
xchg
or
ja
sbb
and
xchg
out
jb
out
cmp
shlb
enter
stos
ja
cmpsl
sbb
jne
push
aas
mov
nop
add
test
jecxz
sub
enter
add
ss
inc
and
adc
mov
cmpl
addr16
jle
mov
mov
push
or
add
iret
xchg
int
icebp
xchg
mov
mov
push
and
nop
cmpsl
les
xchg
jne
loope
shll
rclb
popa
jecxz
and
repz
pop
and
test
jno
add
adc
xlat
mov
fadd
icebp
lock
iret
mov
pusha
add
pop
je
xor
pop
push
add
mov
inc
mov
daa
in
xchg
adc
push
pop
mov
test
inc
ja
adc
push
xchg
xor
sub
cmpsl
mov
outsl
loop
add
fnstcw
mov
inc
push
adc
pop
jecxz
or
xor
decb
dec
cmp
add
inc
mov
xor
test
xor
fcoms
mov
adc
cmp
push
jo
ljmp
insl
cwtl
jge
inc
mov
jns
sub
mov
mov
xchg
mov
mov
in
push
setnp
push
and
add
call
pop
fsts
cltd
xor
imul
dec
mov
inc
popl
cli
cs
jmp
ret
sub
int3
or
ja
push
mov
fiaddl
lahf
imul
push
ret
lahf
mov
mov
arpl
out
inc
and
shrb
mov
rcrl
test
and
mov
xor
cmp
fnstenv
aad
pusha
sarl
inc
push
idivb
pop
add
lret
mov
xchg
es
cld
jb
cmp
imul
mov
and
test
pop
mov
outsb
shrl
aaa
pop
xchg
and
mov
in
divl
movsl
mov
out
les
xlat
or
cmp
pop
pop
jb
in
les
addb
ljmp
pop
inc
mov
pop
insb
sub
add
fs
sbb
and
push
leave
or
add
adc
inc
mov
push
jb
mov
mov
ds
rcl
fcmovbe
cmc
xchg
mov
fstpt
scas
xchg
out
test
cmpsb
jne
and
sbb
jmp
in
xor
xchg
fcomps
xchg
jecxz
mov
cmpsb
icebp
mov
aas
add
insl
mov
outsb
out
mov
mov
clc
sbb
test
adc
sahf
cmp
out
stos
mov
push
test
negl
outsl
inc
jo
pop
dec
jmp
and
ret
cltd
bound
ds
jecxz
sbb
inc
cmp
pop
sbb
add
fadd
loop
aas
xor
mov
sbb
xor
push
xchg
mov
ljmp
stc
adc
xor
pop
inc
sub
adc
add
dec
adcb
ss
repnz
jmp
aaa
movsb
sahf
fstpt
mov
cs
pop
repz
pushf
hlt
in
repnz
sub
cmp
mov
int
cmpsb
mov
iret
bound
test
jl
std
dec
jle
mov
mov
movsl
incl
mov
adc
mov
sarl
enter
ret
imul
lret
daa
adc
push
cmp
push
push
adc
scas
xlat
or
and
or
add
aad
out
mov
outsb
fcoms
in
xchg
in
jbe
jno
jo
and
stos
inc
or
xor
out
push
ror
mov
das
int3
mov
dec
nop
cmpsb
leave
das
aam
cltd
xchg
in
shrb
sub
add
push
aaa
arpl
xor
mov
negl
test
nop
jmp
mov
pushf
sbb
mov
and
jmp
ja
dec
ja
xchg
cmp
sbb
xchg
jo
add
scas
mov
mov
out
aad
and
cmp
imul
fcoms
sbb
cmpsl
xor
sti
mov
cmc
inc
dec
pop
jne
pop
xchg
and
sbb
pop
rorl
mov
cmp
and
lcall
jecxz
cmp
aam
sub
out
jmp
daa
insb
mov
call
mov
jge
mov
jl
loopne
leave
push
add
adc
hlt
and
pop
mov
push
sbb
pop
sti
jbe
test
shll
orl
xchg
cld
out
inc
mov
or
scas
rorb
movsb
xchg
cmp
push
daa
or
test
int
mov
dec
inc
and
outsb
mov
add
xchg
adc
and
sub
popl
mov
mov
idivl
push
imul
ss
dec
sti
jp
lret
mov
aas
pop
das
jo
mov
add
sub
outsl
xor
xchg
jp
clc
dec
lods
mov
pop
xchg
and
add
scas
clc
js
adc
ss
in
aaa
ljmp
int
loopne
pop
and
sbb
adc
clc
and
add
pop
sar
push
xlat
out
inc
push
xchg
pop
or
jp
leave
fcomip
add
push
loop
push
cmp
jno,pt
fsubrp
loope,pt
push
sbb
div
icebp
mov
sbb
adc
inc
or
daa
push
stos
xor
add
xlat
leave
mov
insb
fldl
mov
scas
pusha
push
imul
pop
dec
outsb
xchg
or
stos
imul
jp
pop
lret
cltd
gs
stos
cmp
jecxz
lock
sbb
jmp
or
cmpsl
ret
cmc
nop
repz
outsb
ss
stc
pop
adcl
lret
movsl
addr16
add
stos
faddp
out
popf
pop
adc
dec
mov
scas
call
in
add
stos
push
aam
mov
xchg
inc
push
testb
sarb
fcomps
xchg
and
pop
aam
es
fwait
mov
imul
gs
cld
in
add
dec
inc
fnstsw
dec
or
ljmp
fcompl
pusha
es
fisubrs
mov
jno
repnz
pusha
pop
xchg
pop
xchg
mov
sbb
or
sbbb
cli
addl
leave
aaa
jg
xchg
add
push
movsb
pop
pop
jne
test
xchg
dec
xor
sarl
add
lahf
scas
cmp
mov
adcl
fsubp
mov
mov
push
fwait
rorl
aas
sarl
divb
cs
fwait
shlb
in
push
dec
xor
fcmovu
push
sarb
inc
pop
xchg
mov
aam
jnp
cwtl
sub
push
push
adc
outsl
push
xchg
cmp
ljmp
addr16
lock
fwait
aas
sub
pushf
test
mov
push
mov
fwait
test
xor
es
inc
xchg
sti
vcvttss2si
sub
imul
jl
xor
es
mov
jae
mov
imul
sub
mov
fiadds
pop
or
jns
cmp
dec
cmp
sbb
pop
cltd
in
aam
xor
out
ror
shrl
mov
stos
call
testb
push
das
dec
jbe
mov
sub
loop
roll
jmp
pop
xlat
ss
das
add
in
sbb
cltd
or
leave
cli
addr16
sti
mov
sub
lods
xchg
fs
and
icebp
dec
loope
sarl
pusha
add
dec
out
pusha
push
pushf
jmp
lcall
and
insb
add
pop
adc
mov
fbstp
les
insl
xchg
push
ror
mov
jno
adc
jg
xor
out
imul
push
ja
stos
dec
sub
movsb
les
xchg
cwtl
divl
out
xor
xchg
jge
fnstcw
cmp
lock
jl
xorb
push
cltd
pop
pop
push
xor
mov
xor
dec
sti
fcomip
ljmp
pop
sahf
mov
gs
xchg
jmp
push
test
fimuls
std
aaa
mov
and
mov
vpaddsw
push
push
fdivs
cmc
inc
loop
mov
aaa
jnp
sub
sub
les
or
adc
or
push
jge
lcall
xchg
or
xlat
push
push
in
es
stos
mov
dec
cmc
or
xchg
insb
stc
add
cmp
data16
dec
rorb
mov
mov
jl
fwait
pop
xchg
sub
sub
ja
push
adcl
sbb
mov
leave
pop
icebp
ret
lods
push
pop
sub
test
out
fs
into
in
aad
jb
repz
and
xchg
adc
sbb
lret
push
inc
inc
add
add
jnp
das
dec
inc
js
faddl
in
mov
mov
sub
cmp
mov
xchg
xchg
rcl
mov
stos
leave
sub
outsl
fdivr
fldenv
imull
inc
call
xlat
xchg
sbb
push
lods
and
sub
icebp
clc
std
scas
jns
inc
xchg
and
and
pusha
fiadds
cmpsl
push
sti
sbb
jmp
fistps
push
push
jb
xor
or
mov
adc
shlb
sbb
xlat
xor
cmp
or
mov
jnp
pop
out
cld
clc
add
mov
data16
dec
mov
dec
fdivp
rcll
call
push
or
sahf
sub
les
pop
lret
or
imul
jne
mov
cmp
mov
jnp
mov
push
lock
mov
stos
enter
cmp
push
inc
bnd
xor
mov
sti
lret
popf
xchg
in
mov
mov
stc
sub
popa
xchg
inc
or
movsl
inc
xchg
cmp
cli
inc
loope
ljmp
test
rcrb
cmp
iret
adc
sbb
loope
cld
aam
pusha
sub
les
fdivl
sbb
fsubrl
hlt
rorl
addr16
inc
xlat
bound
push
shll
out
xor
popa
dec
dec
cmp
loope
cmpsb
pop
pop
push
xchg
mov
jb
cmpsb
cmp
xchg
cmpsl
cli
sbb
ljmp
andb
jns
push
insb
mov
sub
dec
push
popa
mov
sbb
test
jle
int3
inc
pop
imulb
ja
cmp
aaa
js
and
and
bound
add
adc
std
cmp
inc
test
sti
in
mov
arpl
cli
xchg
add
lret
mov
movsb
scas
mov
or
insl
sbb
sbb
xor
in
fstp
xor
or
xor
pop
insl
xchg
aam
and
fldl
mov
lods
stos
dec
leave
ja
inc
mov
cmp
mov
movsb
mov
xchg
addl
jb
aam
fwait
push
shlb
sub
roll
add
push
repz
or
int
in
sahf
negb
cmp
jmp
mov
add
in
std
out
xchg
repz
mov
pop
sbb
ss
add
imul
dec
jne
inc
mov
push
loop
jnp
mov
push
dec
arpl
jg
inc
je
mov
ss
aaa
mov
and
jmp
jmp
ds
jge
mov
loop
jmp
mov
mov
pop
push
pop
mov
push
clc
dec
mov
xchg
pop
adc
ret
test
in
jp
pop
stc
vmread
insl
inc
jmp
push
movzbl
nop
jg
or
mov
sahf
int
icebp
cmp
fisubl
addr16
push
or
cmp
lock
xor
repz
add
lock
in
pusha
xchg
lods
mov
inc
mov
lds
adc
leave
cmp
mov
mov
mov
loopne
fsubs
icebp
jmp
cwtl
add
sub
sub
jne
call
pop
xor
les
int3
mov
lcall
xor
jne
movsl
loop
notb
imulb
xchg
jmp
pop
push
loop
xorl
dec
call
xor
lret
pop
sub
or
bound
lahf
fistl
xor
xor
mov
add
out
ja
leave
push
mov
outsl
push
sbb
ret
cld
or
push
cmp
in
dec
xchg
inc
lret
sub
sub
ja
mov
repz
inc
adc
jo
stos
sub
or
and
push
into
adc
js
sti
adc
call
in
pop
into
bound
sub
mov
aam
movsb
mov
mov
mov
push
mov
popf
push
adc
push
sub
cmpsb
pop
es
pop
test
insb
outsl
fcoms
addl
push
mov
loope
pop
rol
cmpsb
mov
fistpll
jnp
inc
testl
loopne
cmpsb
sub
xchg
push
ret
repz
negb
ds
sbb
adc
mov
aam
loop
imull
push
cmp
ss
movsl
aad
mov
insb
or
or
daa
insl
ret
mov
mov
adc
add
in
insb
lods
xchg
in
inc
ret
add
mov
loopne
add
mov
pop
and
pop
js
test
lcall
sbb
and
leave
adc
xor
gs
inc
cmpb
xor
pop
lret
jecxz
jecxz
push
movsb
cmpsb
push
bound
js
imul
out
ljmp
inc
outsb
sub
mov
lahf
sar
outsl
xlat
push
subl
adc
loop
rol
stos
or
xor
dec
mov
call
mov
jno
ds
fstl
mov
orb
loop
xchg
adc
lret
das
das
dec
scas
mov
movsl
aaa
stos
es
inc
hlt
movsb
es
shl
pusha
fidivs
aas
pushf
sub
stos
cmp
ja
ljmp
add
inc
and
sbb
ret
out
cmp
xor
je
fadd
mov
and
jns
jns
dec
or
lods
pop
mov
stos
push
pop
cmp
dec
xchg
mov
push
xor
neg
hlt
out
lods
inc
adc
mov
fwait
sahf
cmpsb
mov
or
lods
jne
popf
sub
ss
fstpt
pop
jns
aad
push
fucom
or
jmp
mov
clc
and
cmp
fdivrs
inc
roll
outsl
jno
cmp
mov
scas
mov
out
mov
mov
inc
or
cmpsb
cli
mov
test
or
add
rolb
cmpsl
adcl
std
in
test
mov
mov
out
out
push
or
fstps
jmp
xchg
jle
mov
addl
jp
adc
mov
mov
icebp
pusha
jnp
shl
xchg
mov
arpl
jecxz
xor
jle
xchg
jo
pop
push
pop
mov
adc
jb
scas
fwait
test
sub
push
pop
jns
out
and
out
cmovne
mov
movsl
add
xchg
push
int3
dec
push
fcompl
add
add
test
xor
push
push
sarb
mov
mov
loopne
lds
sub
adc
or
push
mov
mov
pop
or
fwait
cwtl
test
cld
mov
xor
pop
xchg
pop
aaa
ret
in
subps
es
cmp
push
fildl
pop
xchg
out
lret
xor
or
pusha
notb
xchg
pusha
cs
cwtl
mov
push
enter
sbb
pushf
lahf
xorb
adc
or
jae
push
outsl
mov
rclb
dec
jns
mov
or
add
sbb
rorb
dec
je
and
mov
xchg
scas
mov
or
iret
mov
xchg
push
inc
jl
dec
jmp
dec
xchg
sub
fdivp
xor
cmpsb
test
aas
mov
or
and
call
fnstenv
popl
aad
aad
push
xor
dec
mov
jb
jge
inc
movsl
sbb
cmp
andb
push
pop
adc
xchg
dec
pop
lret
fisubrs
aad
jecxz
jecxz
dec
push
dec
xchg
jne
sbb
sbb
into
jle
loope
je
scas
adc
xor
cmp
pop
fcoml
popa
loop
data16
or
and
and
cs
subb
fsubl
xchg
clc
loopne
cmpsl
popf
arpl
mov
fcoms
shll
popa
cmpl
pop
nop
push
push
popf
js
cmp
rep
sub
xor
sub
or
fs
das
cwtl
sbb
test
cmp
sub
scas
bound
jg
lcall
cld
xchg
pushf
pop
pop
xchg
aas
push
sbb
fldcw
jmp
pop
push
subb
cmp
loop
pop
jp
mov
je
lahf
repz
and
and
popa
fmul
push
clc
sbb
add
pop
loopne
rcrb
dec
lods
add
cmp
jl
cmp
je
inc
adc
cmpsl
inc
int
sbb
aaa
xor
adc
lahf
dec
insb
mov
push
outsl
inc
daa
sub
push
xchg
mov
test
sti
das
loopne
mov
fstpl
mov
jno
and
movsl
rcl
adcb
sub
cmp
pop
xchg
sub
lahf
aas
xor
push
fucomip
mov
push
or
push
fnstenv
int
lahf
cmpsl
lcall
fwait
xchg
negb
push
dec
fldenv
fdivl
ffreep
pop
cs
outsb
test
fs
and
daa
shlb
subl
pop
je
ret
push
pop
cmp
mov
push
arpl
nop
push
pop
adc
cmc
pop
mov
js
push
pop
scas
movsl
stc
loopne
out
insb
and
movsl
pushf
lock
rolb
dec
pop
xlat
dec
adc
ss
fcoml
popf
xchg
xchg
inc
stos
and
out
push
jne
mov
and
jmp
jg
movsl
aad
inc
mov
xor
outsl
ds
push
shl
jecxz
shll
rclb
test
mov
lret
xchg
lea
iret
loope
inc
dec
fists
fwait
enter
and
xchg
add
and
push
jno
inc
pop
cltd
and
lret
mov
sahf
or
mulb
cld
imul
lock
nop
jp
gs
mov
sti
push
hlt
dec
outsl
jbe
cmp
int
ret
addr16
dec
test
push
adc
inc
nop
add
cltd
push
jno
pop
pushf
adc
mov
add
push
mov
pop
push
cmp
add
daa
pop
lret
fsts
mov
sbb
pop
xchg
pop
rorl
mov
icebp
add
pand
idivb
inc
xchg
arpl
call
mov
stos
decb
pop
hlt
outsb
sbb
leave
test
pop
cwtl
mov
or
lahf
mov
test
imul
test
dec
test
xchg
push
cmp
lds
mov
aaa
sub
jle
js
outsl
xor
and
inc
repnz
cmp
pop
xchg
enter
mov
mov
and
loopne
cmp
push
sarl
popf
and
cmp
or
sahf
and
enter
iret
mov
push
xchg
add
jl
xchg
or
shr
lahf
popf
sub
data16
insl
mov
hlt
and
sub
mov
inc
mov
ficoml
lcall
test
fs
js
das
add
sub
adc
add
add
rclb
icebp
adc
aaa
push
popf
push
push
lods
pop
push
fwait
lcall
sbb
mov
stos
jl
mov
scas
es
push
imul
dec
inc
jle
jo
leave
into
mov
ss
aaa
or
push
cmpsl
and
in
pop
lock
rcl
add
sbb
mov
inc
push
pop
fstl
shl
and
aas
lods
sbb
sbb
and
jb
enter
add
call
icebp
pop
fs
push
iret
mov
arpl
adc
inc
jl
sahf
cs
sub
fs
xor
addr16
pop
cmp
ret
lret
push
push
mov
jbe
xchg
dec
or
enter
adc
lret
pop
mov
ja
loop
adc
xchg
nop
cltd
sbb
mov
scas
pop
push
in
in
repnz
push
cmp
leave
cld
mov
loop
dec
add
pop
imul
cmp
decb
jo
movsb
add
sub
push
stc
outsl
push
push
out
fs
orb
push
mov
mov
mov
shlb
std
mov
adc
push
xor
pop
xchg
mov
push
dec
gs
dec
sbb
addr16
int
jb
daa
aaa
mov
xorl
xor
repnz
jmp
inc
sbb
sahf
push
xor
xchg
movsb
ja
outsb
sub
pop
sub
lods
cmc
jb
xor
inc
xchg
stc
mov
adc
sub
dec
int3
int
xor
sub
xor
imul
xchg
mov
pop
or
movb
cmp
out
fcompl
mov
daa
push
inc
or
in
xchg
outsl
fwait
cmp
jbe
or
test
js
xor
ljmp
mov
xor
sub
xor
cmpb
pop
pop
rcrl
xchg
dec
mov
movsb
mov
nop
cli
dec
or
fbld
in
cwtl
mov
add
ror
cwtl
fadd
pop
cltd
repz
cmc
pop
lahf
pop
mov
or
sahf
jo
xchg
lds
mov
xchg
shll
pop
and
xchg
inc
jbe
xor
cmpsb
test
adc
mov
std
movsl
add
mov
or
add
int
or
push
pusha
loop
mov
das
jae
mov
outsl
push
fisubl
fadd
loope
jbe
mov
test
nop
lcall
ret
jne
insb
or
or
lcall
adc
std
les
stos
adc
jg
repz
cmp
shll
or
xchg
inc
xabort
rcrl
in
std
mov
cld
inc
pop
xchg
or
xchg
movsb
fisubl
lods
cli
cmp
or
inc
ret
sub
cmp
xor
jnp
sbb
jb
inc
mov
mov
mov
push
mov
dec
imul
xchg
int3
or
mov
data16
fsubrl
add
pop
sbb
loopne
lds
int3
lds
in
mov
popa
xor
dec
test
xorb
mov
xor
and
pop
rorb
movsb
ds
cltd
or
xchg
push
adc
out
outsl
addr16
jno
push
sub
and
jae
mov
inc
fistl
out
lret
mov
js
lret
mov
sub
inc
adc
mov
xor
les
aam
les
jo
insl
movsb
fcoml
or
or
xor
lods
jns
rorb
mov
pop
scas
inc
jl
and
pop
into
push
jnp
mov
insb
mov
stos
push
xchg
out
inc
adc
dec
ficoml
lahf
sti
pop
inc
mov
xchg
dec
jl
iret
shlb
cmpsl
dec
pop
test
fwait
iret
cmp
lret
cmp
dec
cmpl
call
out
lcall
add
push
repnz
test
ror
aaa
add
rcr
xor
adc
jle
test
mov
scas
repnz
cmp
xlat
fcoms
jo
bound
xlat
nop
mov
hlt
arpl
daa
ja
gs
sbb
inc
dec
pusha
jbe
sub
mov
dec
dec
iret
jge
das
fmuls
add
mov
mov
or
add
sub
xchg
xchg
inc
sbb
add
and
imul
add
add
pop
sub
iret
inc
divl
or
movsb
insl
insl
mov
movsl
inc
in
jp
aam
mov
rclb
push
scas
add
rcrb
shlb
dec
lea
mov
jae
ret
jp
or
lea
jle
push
les
mov
sub
test
jns
filds
add
add
adc
das
xchg
rcr
repz
adc
adc
inc
mov
cmp
xchg
pop
inc
mov
sarl
cs
fwait
xchg
dec
iret
loope
test
scas
pop
lods
lea
push
sbb
inc
mov
push
in
into
or
cmp
nop
adc
pop
cmp
jl
add
rcl
sbb
inc
and
or
dec
mov
jmp
xor
lahf
loopne
push
outsb
inc
jp
pop
push
lcall
xchg
popf
mov
mov
mov
mov
out
and
sub
das
leave
cmp
sbb
or
divb
adc
jg
pop
or
icebp
movsl
mov
enter
loope
add
dec
sbbb
fdivs
dec
jnp
xor
jmp
insb
mov
push
dec
movsb
mov
data16
xchg
mov
les
int3
xchg
add
mov
mov
sbb
pushf
sub
cmp
imul
shll
jp
sbb
popa
cmp
sbb
stos
pop
ret
adc
push
cmpsl
cltd
insl
pop
and
leave
jb
mov
aam
leave
push
inc
or
xchg
xchg
test
mov
jnp
mov
adc
dec
out
jnp
xchg
cmpsl
jnp
jmp
hlt
idivl
decl
je
inc
das
push
push
lret
repnz
movsb
or
lahf
lret
jno
inc
add
std
cwtl
aaa
int3
das
lds
and
rclb
cmpsb
push
xchg
fcomp
xchg
pop
adc
jns
ja
lods
call
fldcw
jmp
pop
int3
popa
xchg
pop
jo
leave
sub
or
cmp
cmp
xor
pop
pop
insl
jbe
sub
push
rorl
leave
mov
sbb
adc
and
mov
xchg
dec
dec
sbb
mov
adc
mov
lods
in
jnp
aad
les
fisubrs
into
add
ja
rclb
sub
jp
loopne
test
mov
inc
jl
xorb
mov
mov
mov
inc
fs
cmpl
jb
jecxz
push
movsb
mov
dec
test
cmp
pop
sub
inc
xchg
push
sub
push
repz
lcall
pop
pop
adc
sub
or
mov
pop
insb
xchg
les
mov
scas
nop
dec
adcl
mov
lods
mov
movsl
fistps
int
sbb
iret
cmc
std
sub
xor
adc
loopne
sub
xchg
test
clc
sub
sti
xchg
add
adc
mov
pop
mov
cmpb
ljmp
into
insb
stc
rcl
push
insb
push
cmpsl
xchg
sub
inc
stos
out
sub
push
pop
mov
cs
push
jle
clc
pushf
lods
jge
xor
inc
ja
mov
add
loop
es
std
xchg
lcall
lock
cld
push
and
movsl
push
mov
scas
sbb
jmp
pavgw
dec
mov
mov
xor
adc
pavgw
or
out
jl
das
ds
sub
loopne
xchg
mov
mov
push
cmp
lret
xor
sbb
mov
lret
into
jnp
adc
inc
or
dec
push
mov
lretw
push
xor
xacquire
lret
aam
xor
push
mov
addr16
xchg
sti
pop
fstps
cwtl
aaa
cld
xlat
testl
popa
outsb
in
mov
dec
xchg
lods
out
imul
fstpt
mov
lret
mov
jle
pushf
and
cmc
stc
sbb
inc
std
or
push
sbb
iret
sub
or
lods
popa
clc
lock
xor
adc
hlt
movq
push
call
pop
adc
je
sbb
mov
lret
inc
mov
pop
and
arpl
gs
adc
push
cmp
mov
iret
mov
sub
xchg
iret
and
fisubrs
dec
dec
scas
dec
in
inc
movsl
jmp
pushf
push
test
pushf
pop
dec
mov
scas
push
adc
fs
ljmp
js
add
sbb
adc
lods
push
inc
hlt
in
popa
lahf
lock
mov
inc
cmc
dec
sub
push
xlat
popw
mov
ja
or
mov
mov
sub
jecxz
fimull
sbb
das
ret
sbb
int3
fldt
mov
jle
pop
sub
subb
fisubs
adc
jne
aas
xor
sahf
and
sbb
cli
cli
or
ds
in
mov
jnp
cmpsb
push
les
loopew
add
shll
imul
xor
add
inc
fildl
inc
ror
loop
cld
jecxz
stc
adc
xor
pop
negl
cwtl
sahf
mov
push
and
pop
pop
imul
fnsave
inc
into
inc
mov
cltd
daa
push
hlt
pusha
xchg
xor
push
mov
icebp
push
xor
add
mov
xchg
jne
jnp
cltd
roll
out
mov
push
in
xchg
stos
jge
mov
mov
sbb
sub
dec
push
fdivl
sbb
dec
xlat
mov
fcmovne
ja
push
pop
xchg
sbb
lret
xor
rorb
cmp
xchg
cmp
push
jle
push
dec
push
or
mov
mov
fcomps
xchg
push
push
mov
insb
pop
fnstcw
mov
clc
daa
xor
lret
adc
and
mov
hlt
aam
mov
pushf
or
pop
pop
addr16
inc
cmp
lea
icebp
inc
xlat
mov
lods
cmpsb
divb
dec
ja
dec
hlt
cmp
adc
and
pop
push
dec
and
ror
subl
fdivrl
xchg
sbb
cmpsb
stc
xlat
sahf
sti
cmp
call
lret
adc
pusha
push
icebp
scas
inc
pop
pop
inc
pop
in
neg
loop
mov
fbld
jecxz
cld
inc
insl
dec
inc
bound
test
mov
or
int
ror
add
pushf
stos
shr
sbb
je
and
inc
pop
adc
cmc
push
xor
cwtl
cli
dec
test
xchg
sub
or
jmp
pop
popf
pop
pop
aad
mov
pusha
rcr
lahf
mov
roll
xchg
imul
jbe
push
scas
inc
cmp
xchg
lods
out
in
mov
cmp
adc
fs
mov
mov
inc
std
push
arpl
cmp
mov
push
cs
scas
or
mov
std
xor
in
jo
jge
mov
idiv
pop
cmp
ror
add
and
imul
jno
shl
out
aad
inc
movsl
mov
fs
movsl
test
or
insl
mov
jb
jmp
clc
test
out
insl
orb
inc
inc
btc
packuswb
bound
dec
sub
and
sarl
lcall
adc
andb
cs
xchg
lcall
jnp
and
jle
and
push
dec
dec
fwait
dec
mov
sub
loopne
ds
fbld
loop
dec
mov
xchg
sub
in
lret
and
sub
mov
mov
nop
add
inc
and
iret
int
pop
or
and
mov
bndldx
popa
jecxz
ret
mov
clc
iret
shrb
jle
jno
inc
lds
test
jp
xchg
movsb
dec
pop
lcall
fbld
cmc
popa
outsl
jl
andl
test
inc
xchg
push
dec
frstor
push
adc
idivl
scas
inc
and
xor
sub
fdivs
push
das
ret
fstpl
dec
dec
jnp
mov
xor
adc
mov
xchg
jo
or
jg
push
sub
jns
ret
pop
xor
dec
mov
push
in
into
fldcw
fucom
push
or
push
enter
sbb
push
in
xlat
or
cmp
in
sbb
aas
mov
mov
cmp
dec
adc
xchg
stos
xor
lcall
gs
xor
mov
inc
sub
icebp
inc
sbb
imul
mov
mov
repnz
scas
aam
sti
mov
ljmp
xor
adc
xor
sbb
cmp
mov
outsl
daa
push
jp
fnstcw
adc
cmp
scas
cmp
js
int3
cli
fisubrl
mov
pushf
jno
push
call
bound
cmp
arpl
sub
sbb
imul
fidivrl
outsb
lret
rorl
aaa
andl
push
mov
jo
das
cld
pusha
mov
push
lcall
adc
ljmp
mov
mov
mov
adc
in
scas
xchg
sarb
push
push
fadd
jle
inc
and
push
out
aam
test
jae
inc
int
cwtl
fwait
scas
cmpsl
aas
scas
mov
cld
adc
leave
lcall
jns
jp
fmulp
sub
lods
xchg
jns
pusha
sbb
pmullw
mov
fmul
sti
in
adc
jb
sub
mov
aam
xor
imul
lds
mov
lahf
xor
mov
leave
pop
les
int
add
xor
mov
adc
mov
and
mov
pop
push
jns
rcl
mov
mov
fmul
sub
inc
fucom
sbbl
pop
mov
xchg
sub
or
call
lods
enter
push
inc
mov
jge
mov
jnp
daa
mov
stc
rclb
lahf
out
cmp
xchg
mov
cmp
test
loope
mov
fsubs
in
push
mov
sub
mov
jmp
int
sahf
jp
pop
roll
ja
and
add
daa
xor
adc
cli
xchg
push
push
cmp
pushf
out
out
dec
ret
call
test
je
inc
jno
jo
add
adc
fwait
outsb
jl
lea
jecxz
imul
mov
push
or
ret
inc
and
xor
jno
fst
or
mov
hlt
subl
adc
push
cmp
jmp
cmp
test
mov
mov
push
leave
ror
decb
cmp
push
sbb
ljmp
out
pop
movb
xchg
std
xchg
orb
add
or
cmp
jmp
push
pop
push
xor
push
adc
sbb
inc
pop
pop
leave
inc
in
mov
loop
js
ja
jp
jmp
lds
adc
inc
test
inc
pop
xor
mov
test
mov
sbb
aaa
adc
cltd
sahf
mov
test
dec
push
pusha
mov
push
dec
mov
stos
pop
lods
push
fisubl
and
mov
loop
pop
adc
pop
iret
cmpb
push
scas
sbb
sub
popa
fucom
mov
lds
xchg
in
scas
sub
sbb
or
mov
mov
pop
scas
fnsave
sub
xorb
jge
sahf
add
cmp
cwtl
mov
mov
ret
cli
jae
sti
fadds
ds
mov
incb
dec
push
test
aad
xor
and
sahf
mov
scas
push
push
xchg
or
pop
rclb
xchg
pop
sti
pop
shll
cmc
pop
ret
push
mov
sbb
insl
rcrb
inc
das
sub
mov
fs
jge
iret
dec
lret
cmp
pushf
loop
xorl
xlat
inc
push
xchg
push
rorl
mov
jmp
sub
add
mov
jae
xor
and
and
repnz
rcrl
lret
rolb
pop
jle
jp
push
loop
inc
cmp
xchg
mov
push
add
xchg
xchg
shlb
aam
mov
fdivl
or
movsb
xor
bound
and
jnp
test
cmp
dec
inc
ret
pop
loope
cmpsl
add
lcall
mov
dec
outsl
cltd
arpl
or
inc
pop
mov
enter
sti
sub
pop
push
mov
xor
mov
fisttpl
xchg
or
xchg
mov
jo
mov
inc
ljmp
std
das
data16
adcl
test
push
pusha
add
and
sbb
cmpsl
mov
addr16
ljmp
cmp
enter
cmp
pop
sub
lock
xor
and
jne
mov
mov
mov
ficompl
fisttpl
fldl
daa
xor
xor
add
push
ljmp
dec
mov
bound
adc
add
popf
sbbb
push
or
jle
jmp
and
push
jg
push
push
mov
lahf
test
pop
jg
or
jp
mov
lcall
lds
test
fstl
in
adc
pop
push
dec
xchg
shlb
loopne
xchg
stc
sub
mov
test
ja
shll
cmpsb
rclb
sub
adc
enter
bound
lds
pop
xor
push
int3
negl
mov
test
fldt
jo
dec
in
sbb
repz
gs
cwtl
test
push
xor
and
scas
adc
movsl
pusha
pop
sub
rcrl
jne
mov
or
add
xchg
add
push
imul
test
aaa
xor
subb
mov
fidivrs
dec
cmp
xchg
or
sub
addr16
aam
push
bound
lds
mov
mov
jle
cmpsl
cmpb
clc
and
mov
adc
cmp
in
inc
blcmsk
iret
push
sbb
push
push
sbb
inc
cmp
in
add
test
mov
ljmp
mov
sti
cmc
push
pop
jbe
in
mov
repnz
lds
aad
or
jae
das
mov
jb
pop
ds
jo
push
out
out
jo
sbb
jnp
rorl
in
jae
add
outsb
and
incl
sub
mov
rcll
jge
aad
leave
inc
arpl
jbe
and
inc
mov
sbb
sbbl
ret
inc
or
inc
or
pop
les
scas
dec
cmp
inc
mov
inc
cmp
mov
stc
lret
mov
imul
rclb
lret
stos
cltd
ljmp
adc
shl
mov
js
fs
mov
data16
movb
or
popf
adc
sti
sar
push
mov
add
stc
divb
imull
arpl
xor
int
pop
inc
mov
push
in
scas
jne
add
scas
hlt
push
ss
fs
xchg
rcrb
sar
sbb
lea
ret
les
adc
mov
mov
sub
sbb
shl
push
mov
inc
adcl
aaa
mov
shrb
xchg
xchg
pop
sahf
orl
mov
push
push
out
sbb
push
loope
lock
nop
inc
js
xchg
add
xchg
cmp
mov
sub
mov
adc
je
xchg
call
push
push
stos
sub
jp
iret
mov
pop
xchg
stc
mov
push
loopne
jle
fst
xchg
or
add
andb
xchg
mov
or
adcl
mov
xchg
and
xchg
xchg
pop
push
leave
ret
fsubrs
subb
cli
popf
into
cld
jmp
sti
ljmp
leave
aas
subb
fldcw
dec
dec
xchg
pusha
mov
test
pop
fmull
jns
jae
sub
jge
jp
inc
in
pop
mov
insl
aam
mov
jne
push
insl
add
mov
adc
test
cld
adc
cmp
sarl
xchg
cs
pop
lahf
adc
leave
push
icebp
and
out
push
sbb
mov
movsb
push
add
insl
adc
cmp
fwait
mov
shrl
lea
test
aad
pop
cmp
pop
outsb
bound
jle
pop
int
repnz
mov
or
and
notl
ret
addr16
shlb
rcrb
out
ds
jge
out
pop
jecxz
roll
fsubrl
or
sbb
call
inc
cltd
jg
sub
mov
jle
jecxz
mov
repz
out
xchg
aam
mov
icebp
and
push
cli
pop
rcl
inc
lret
into
adc
push
mov
rcrl
pop
and
mov
pop
cmp
jno
stc
jnp
inc
push
scas
clc
push
jae
jg
js
fisubrs
js
call
ja
sub
cmp
dec
nop
xlat
dec
stos
leave
cli
mov
mov
movsb
lods
hlt
push
sbb
dec
aad
into
cmc
add
pusha
ret
jecxz
int
mov
stos
or
in
sub
mull
fmuls
xchg
jle
test
inc
jge
fwait
xlat
mov
out
dec
mov
pop
jg
sub
and
mov
loope
adcl
mov
push
movzbl
sti
lret
cmc
sbb
pop
shl
cltd
shlb
lret
icebp
sarl
sub
push
dec
enter
mov
inc
lret
fs
mov
hlt
mov
add
inc
push
sbb
pop
stos
js
inc
xchg
out
sub
mov
fs
mov
std
test
mov
popa
jne
push
out
pop
fidivrl
push
fs
lahf
clc
adc
cmp
mov
cmp
scas
or
jns
and
adc
cmc
js
mov
dec
addr16
frstor
xor
nop
mov
ss
loop
ds
leave
out
daa
push
lahf
cmp
jecxz
mov
jae
std
mov
mov
and
nop
mov
int3
ljmp
data16
test
mov
fisttpll
xchg
cmp
sub
mov
dec
jp
mov
xor
xlat
test
pop
lret
cmp
sbb
test
and
cmpsb
out
in
in
pop
das
outsl
jns
mov
imul
push
aad
add
cs
sbb
dec
scas
mov
adc
adc
xchg
lods
imul
adc
out
scas
xor
ljmp
rorb
push
sbb
xor
mov
lret
mov
xor
jns
mov
pop
scas
imull
dec
mov
pop
arpl
push
addr16
mov
pop
cltd
add
mov
testb
mov
pop
sub
js
mov
push
shrb
cmc
je
cmpsl
add
gs
test
sbb
pop
xchg
jmp
cltd
push
push
fadds
ficomps
dec
movsl
mov
xor
loop
shrb
fdivr
ja
fbstp
in
mov
lcall
fs
sar
cmp
enter
and
mov
mov
sti
ljmp
fadds
iret
cmp
jl
fimuls
andb
dec
repz
jmp
push
adc
add
nop
inc
jbe
mov
sbb
mov
pop
fisubs
pop
xchg
imul
cmpsl
mov
mov
sbb
aad
cmc
inc
add
add
sti
insb
clc
mov
pop
jmp
cld
adc
lret
xchg
push
pop
mov
and
xchg
jnp
adc
mov
nop
jno
int
or
imull
add
scas
jnp
fcoms
dec
xor
xorl
sub
es
testl
cltd
sbb
mov
shll
hlt
xor
push
shr
push
mov
push
out
mov
fdivs
jnp
pop
jge
xchg
insl
js
hlt
cmp
lret
test
cmp
sahf
mov
xorb
inc
xchg
pusha
sbbb
push
shlb
fiadds
cli
xchg
cmc
mov
mov
testl
dec
mov
adc
fisttpll
pop
adc
sbb
lods
inc
jae
mov
lea
or
fcompl
ficompl
jnp
mov
rcrb
sbb
pop
inc
daa
or
aaa
adc
push
xor
push
adc
inc
push
mov
sbb
mov
inc
xor
sbb
daa
lret
fldt
fnsave
ja
adc
mov
or
je
dec
adc
test
lret
shrw
cmpb
daa
sbb
pop
rorl
mov
pop
lea
hlt
std
mov
jnp
inc
sbb
mov
xchg
jp
mov
popf
in
scas
cmp
mov
xor
sub
push
testb
cmp
xorl
mov
jno
pop
mov
aaa
push
addl
sub
arpl
adc
outsb
mov
mov
mov
and
addb
push
scas
mov
lds
inc
xor
jne
pushf
add
jae
sbb
mov
add
dec
pusha
cli
mov
inc
jnp
dec
call
mov
cmpsb
fwait
mov
clc
insl
add
mov
loope
jb
jmp
jp
cmpl
out
mov
test
sub
les
fistps
mov
outsb
loope
ljmp
dec
pop
pop
scas
pop
push
mov
or
testb
jne
fs
inc
push
or
mov
pop
popa
addl
adc
push
mov
notl
sub
aam
add
movsl
pop
jle
shl
adc
sub
les
outsb
inc
push
popa
out
jmp
push
sbb
movsl
ds
inc
out
cmp
xchg
std
jge
in
stc
js
or
mov
lock
shl
lretw
mov
test
adc
mov
sbb
cs
sbb
sti
shr
sbb
int
sbb
sub
push
test
ret
push
fwait
mov
xor
shlb
pop
mov
xor
jb
movb
mov
addr16
sub
pop
xor
jge
inc
xor
vpunpckhwd
cld
adc
and
or
mov
fcmovne
xchg
pusha
fs
shrb
push
outsb
mov
mov
push
ds
xchg
pop
mov
leave
mov
fwait
adc
sarl
cmp
pop
adcb
push
lock
cmp
cwtl
das
cmp
test
test
ret
rolb
fwait
inc
clc
clc
filds
push
js
dec
xchg
cmc
lcall
pop
pop
sub
sahf
push
out
inc
dec
xor
mov
andl
lds
rcll
shll
jno
clc
xchg
jmp
or
push
enter
aaa
ficoml
fbld
adc
ret
add
push
imul
iret
cmp
fs
lret
mov
loop
stc
ljmp
sbbb
mov
or
mov
mov
pop
cmpsl
lret
or
cmp
stos
mov
lds
or
jnp
xor
add
mov
insl
addr16
movsl
cmpsl
mov
inc
outsb
pop
sbb
jno
lock
popa
and
shlb
add
xchg
add
popa
out
test
fwait
or
mov
xchg
mov
lock
or
cmp
imul
mov
push
repz
es
xor
push
jne
cmpsl
mov
pop
jns
movsl
xchg
testb
push
dec
cli
xchg
js
mov
test
jmp
adc
xchg
stc
or
insl
cli
push
mov
xor
jp
insl
push
push
pop
lret
cmp
and
aas
pop
sub
dec
jg
aaa
daa
add
cmp
imul
idivl
inc
fcmovnbe
xor
sbb
xchg
dec
call
iret
out
jl,pn
fadds
cmp
jge,pn
pop
inc
iret
and
mov
addr16
inc
js
lds
adc
ljmp
aas
lods
cld
loop
xchg
push
mov
sub
and
or
pushf
cs
jae
push
dec
mov
fstpt
ds
fwait
clc
movsb
cmc
sub
jmp
sti
out
pop
pop
aaa
into
pop
dec
ja
push
aas
rorl
inc
inc
jno
inc
arpl
cmc
inc
std
sti
movsl
nop
and
sbb
xchg
movsb
ret
add
sbb
xchg
xlat
invd
cmp
shlb
push
cmp
fmuls
repz
sub
push
fwait
dec
stos
xor
jno
loop
movsl
mov
mov
push
mov
mov
call
pop
xor
nop
sub
mov
jle
jcxz
xor
lcall
lods
je
fcoms
int
sub
mov
roll
loope
lds
in
xor
rcll
add
movb
push
cmp
xor
sbb
lret
cs
orb
xor
cld
aam
dec
int
sbb
int
xchg
or
push
arpl
pop
mov
in
adc
mov
jo
aaa
shlb
std
lcall
loope
int
sti
into
lahf
cwtl
fiaddl
lahf
pop
call
xchg
shl
out
adc
mov
inc
jne
inc
aad
setp
mov
xor
xchg
ret
aaa
lcall
fldcw
insb
pusha
scas
cltd
cli
push
lods
and
shr
adc
sbb
addl
lcall
pop
stos
sbb
mov
xchg
or
movsl
adc
xchg
out
rcrl
popa
mov
jns
nop
sahf
xchg
jo
pop
adc
adc
jbe
ja
cli
pop
test
sbb
push
call
mov
int
mov
loopne
xor
nop
dec
cmp
adc
hlt
mov
jnp
lds
jne
push
pop
adc
imul
push
xor
je
pusha
pop
scas
int3
subb
push
gs
orb
xchg
cmpsb
mov
shr
pop
test
jmp
xor
jb
bound
sarl
sbb
leave
out
paddd
rcr
jge
fcoml
imul
loopne
movsb
pusha
sbb
movl
out
rcll
loope
and
mov
rcl
mov
mov
sbb
fildl
les
inc
add
pushf
popf
and
les
cwtl
pop
mov
or
adc
js
xlat
mov
shlb
push
popf
or
notl
xchg
inc
push
xchg
addr16
adc
loope
xchg
cmovp
jbe
push
sub
jp
iret
iret
and
dec
xchg
xchg
or
pop
cltd
pop
xchg
jmp
int
insl
add
inc
insb
mov
mov
pop
not
mov
mov
mov
xor
fs
jbe
jns
pop
lods
sahf
and
fsubrs
out
repz
push
fmull
push
out
mov
pop
scas
lea
jo
aam
sub
cmp
jno
add
popf
adc
ljmp
dec
dec
jns
jne
lcall
push
pop
xlat
adc
clc
fldcw
loope
mov
pop
sbb
loopne
cli
inc
adc
int
sbb
adc
push
pushf
pop
xor
movsl
dec
mov
dec
inc
or
pushf
xor
imul
push
sbb
adc
add
js
dec
sub
cmp
in
scas
aas
push
test
dec
neg
call
orb
test
sub
pop
jle
adc
lret
mov
in
orl
lock
or
mov
int
mov
mov
adc
rolb
cmp
cmp
xor
call
inc
sub
in
data16
call
lods
aas
test
jae
jecxz
ds
add
pop
testl
jp
pop
popf
test
aaa
inc
push
inc
popf
xchg
test
cld
sbb
pop
test
fcomps
lret
test
inc
xor
mov
in
sub
loopne
mov
and
mov
data16
das
and
cli
fldenv
stos
incl
cli
hlt
cmpsl
stos
pushf
mov
lahf
jno
xlat
push
adc
mov
and
push
adc
popf
andl
jo
push
repnz
ds
mov
fcomps
mov
mov
cmp
js
ljmp
aam
jns
hlt
les
fists
mov
and
mov
dec
stc
pop
out
pop
idivb
jmp
lahf
cmp
push
sub
jp
pop
dec
lahf
test
pop
pop
mov
jne
into
dec
arpl
test
xlat
in
mov
fsts
pushf
stos
divl
ret
neg
xchg
clc
dec
xor
jl
xor
scas
fldl
inc
jae
adc
cmpsb
insl
cmp
jecxz
inc
or
imul
adc
add
jg
sub
arpl
sbb
dec
stos
in
push
test
adc
dec
push
sbb
lock
or
daa
imul
lods
fwait
js
ds
fcmovnu
pop
or
stos
arpl
or
ljmp
jl
pop
jge
imul
add
cmpb
sbb
cmp
cmpsb
jp
jl
jg
adc
lret
lret
bound
outsl
pop
sub
test
adc
push
adc
imul
dec
andb
call
stc
sub
pop
cmc
roll
aam
sub
sbb
or
into
and
pop
lods
shrb
push
popf
mov
arpl
mov
push
push
outsb
cmpsl
lea
or
cmpb
imul
imul
jbe
das
jg
mov
imul
mov
ds
das
lds
dec
xchg
sarb
lahf
mov
inc
test
jmp
adc
cmp
mov
lret
pop
lea
test
repz
scas
jae
push
inc
idiv
movsb
test
push
enter
mov
add
icebp
dec
inc
jmp
jle
inc
out
mov
adc
aam
out
ret
cmp
sub
mov
loop
adc
and
rcl
call
repz
push
decb
sbb
xchg
cmp
push
jle
jp
cmp
sub
sbbb
mov
leave
jl
bound
push
mov
pushf
bound
int
lahf
xor
movsl
pusha
sub
xlat
loope
in
out
mov
faddp
mov
inc
and
imul
fsubrl
mov
mov
lock
test
cmp
push
push
push
aad
xor
lret
inc
jle,pn
and
cmp
mov
sub
js
movsl
inc
out
mov
fiaddl
pop
push
aam
pop
insl
fdivl
adc
ljmp
mov
cwtl
pop
mov
mov
xchg
adc
fstl
std
and
adc
int
mov
pop
ficoml
movsl
mov
cmp
sub
cmc
mov
xor
aam
mov
fwait
in
adc
test
push
jne
jno
sub
clc
dec
xchg
xchg
mov
movsl
ret
insb
test
or
int
mov
cmp
rcrl
lahf
cwtl
jl
jbe
sub
push
inc
add
adc
shrb
std
jbe
lds
push
rol
in
cmp
or
pushf
xor
scas
mov
shll
stos
inc
gs
les
dec
cmp
push
and
xorl
je
mov
mov
mov
pushf
imul
shll
loop
imul
lods
out
jmp
fldcw
shlb
pop
lahf
repz
xchg
call
xchg
repz
cs
aas
push
inc
and
xchg
push
add
sub
gs
ss
lea
and
popa
push
adcb
mov
js
jl
mov
arpl
repz
lret
pop
xor
pusha
inc
dec
imul
mov
cmp
iret
ljmp
ds
jge
insb
addr16
bound
inc
movsl
adc
rorb
roll
inc
pop
stos
sbb
and
ficoms
xsavec
xor
pushf
aam
adc
mov
sbb
mov
aad
sub
clc
mov
test
inc
out
jmp
std
pop
in
scas
adc
fsubrs
mov
fisubrs
not
add
jb
popa
adcb
shrb
jge
aam
sarl
jns
mov
bound
xchg
xor
xlat
int3
push
imul
fwait
xchg
stc
arpl
mov
stos
lret
xor
cmpsl
lahf
sbb
sub
mov
lcall
sub
loope
loop
neg
mov
test
push
lods
test
fldcw
or
das
jnp
stos
or
in
jbe
sbb
mov
jmp
pusha
cmp
pop
sbb
repnz
mov
fldt
fdiv
cmp
dec
or
and
insb
cli
popa
cmpsb
jmp
jge
lcall
icebp
mov
ror
cltd
cmp
test
xor
push
popa
cs
leave
xor
jne
fcomps
pusha
outsb
cwtl
stos
das
roll
enter
and
loop
ljmp
aam
mov
pop
js
das
add
jnp
ret
fists
call
cmp
addr16
push
outsl
jp
ret
cmp
pop
xlat
movsl
jo
add
shlb
enter
or
mov
insb
inc
loopne
jb
mov
pop
mov
test
push
js
add
cmp
xchg
mov
xchg
andb
mov
test
or
imul
iret
mov
in
xlat
icebp
inc
xor
pop
lea
push
jp
add
sahf
cmp
pusha
fistpll
shr
push
mov
fcmove
and
mov
mov
or
orb
jne
sti
add
into
mov
lods
xchg
mov
arpl
cmp
imul
or
aaa
adc
sub
test
push
add
push
sub
mov
pop
pop
in
pop
and
ret
pop
icebp
mov
outsb
mov
mov
push
jno
test
je
outsb
add
in
loopne
dec
fmull
add
sti
hlt
lret
mov
jge
pop
mov
pop
inc
in
in
inc
arpl
adc
aam
and
xor
rcrl
in
push
push
push
push
inc
fstpt
pop
fdivl
popa
sti
push
test
stc
ficoml
arpl
and
jp
into
sub
fcmovne
aaa
pop
cmp
mov
xor
dec
jle
lock
fldt
sbb
clc
jae
loop
in
xchg
fwait
dec
jbe
dec
sbb
pop
lods
mov
pusha
mov
sti
lods
scas
das
dec
jecxz
add
pop
in
mov
ret
dec
jns
aad
fwait
in
pop
outsb
and
mov
add
pop
ss
jg
popf
mov
jg
jp
jne
jo
lods
sbb
cwtl
and
popf
xor
fimull
xchg
add
jp
test
lahf
adc
xchg
sub
push
xchg
mov
add
mov
clc
sub
xor
sbb
xchg
test
add
xchg
out
fcomp
out
xchg
xor
adc
mov
sahf
sub
xor
mov
mov
adcl
in
das
lahf
add
fstl
sub
call
addr16
push
sub
mov
into
mov
mov
add
out
repz
arpl
popf
jno
lock
in
add
int
push
push
dec
xor
cs
xchg
xchg
ficomps
sahf
fldt
and
xor
imul
jo
xchg
lea
xchg
or
jmp
cmpsb
rcl
adc
dec
jno
cwtl
and
inc
shrb
jecxz
mov
mov
shll
ljmp
jle
adc
aad
mov
push
cld
jb
add
cld
loope
mov
bound
ljmp
mov
cld
lock
andl
aas
cmp
test
ljmp
mov
mov
stos
sbb
push
leave
ret
lret
ret
movsl
xchg
dec
inc
xor
cwtl
andl
leave
mov
add
out
fimuls
mov
lods
aad
gs
inc
pop
push
aad
fcmovnu
lods
rclb
cmpsb
iret
sub
int3
mov
insl
aam
mov
mov
add
dec
add
jmp
popa
daa
and
mov
popa
outsb
ret
inc
mov
jle
sbb
inc
in
out
rcrb
stos
xchg
or
imul
and
mov
sti
aas
into
xor
in
data16
fwait
jg
sub
dec
xchg
mov
add
bound
dec
sbb
lock
sbb
fbstp
arpl
jmp
mov
insl
sbb
inc
sub
mov
out
sbb
pop
mov
es
inc
ja
lret
outsl
jnp
xor
xor
lahf
ja
je
je
daa
jmp
lods
daa
daa
mov
xorl
loope
sbb
data16
idiv
push
xor
int3
add
mov
mov
jo
addl
dec
pop
pop
orb
xor
mov
ljmp
js
sarb
add
xor
lods
sahf
jnp
push
push
stc
jb
push
mov
sbb
xchg
sub
test
lretw
mov
jb
sub
lret
dec
repz
lds
jecxz
mov
ds
and
or
and
pushf
xor
mov
popl
cld
idiv
out
inc
jp
cmpsb
movl
into
pop
cmc
jecxz
mov
xor
sub
outsb
leave
shlb
jl
fnclex
clc
add
inc
pop
scas
jmp
xor
notl
jle
das
movsl
cmpsb
xor
xor
sub
dec
sbb
fs
dec
or
inc
test
test
outsl
imul
push
cmpb
push
scas
pop
daa
mov
pop
lea
adc
iret
mov
fisubl
fstl
fadd
mov
ret
and
mov
sarl
and
xor
and
loop
lahf
out
xor
shlb
sub
mov
lcall
sarl
cmc
add
mov
in
arpl
jge
loope
mov
ret
sbb
sbb
mov
mov
fisttpll
mov
push
pop
xchg
jg
mov
ss
movsl
shrb
sahf
push
add
jge
test
stos
popa
hlt
or
push
movsb
aas
dec
add
test
sbb
sbb
in
lods
mov
cmp
aad
or
dec
sbb
push
dec
cmpb
repz
or
push
cmp
mov
sub
scas
lock
addr16
pop
insb
lret
adc
stc
dec
and
ljmp
mov
cli
or
int3
pop
xor
push
test
cmpsb
pop
dec
pushf
jg
sar
rclb
aaa
ja
jns
cli
or
sub
test
rcrl
cmp
stc
xchg
xor
mov
pop
push
lods
pop
dec
or
mov
mov
fs
fwait
pop
orl
adc
ret
hlt
jge
leave
or
loopne
shrl
xor
sub
in
cmp
into
repnz
rorb
addr16
repz
arpl
mov
outsl
cmp
lea
sub
stos
pop
mov
sti
fstl
add
add
push
aaa
test
mov
pop
fcoml
xchg
add
aam
mov
xchg
daa
shll
cmpsl
js
pop
fisttpl
aaa
pop
jae
daa
popf
xor
clc
pop
daa
jbe
outsl
or
push
jae
mov
insl
xor
adc
dec
ja
stos
sub
cmpb
xchg
push
cli
fwait
subl
shl
ret
or
rcrb
inc
jg
ljmp
xchg
jl
xor
add
xchg
fisttpl
insl
jg
mov
jns
mov
fs
lcall
mov
insb
add
push
sbb
imul
cli
xchg
mov
xchg
cltd
add
lods
ror
je
aad
mov
popf
shlb
imul
sub
jne
lods
sbb
mov
pop
mov
ret
and
dec
sarb
loope
js
out
and
dec
xchg
adc
xchg
rcrb
push
fstpl
mov
add
add
or
inc
xchg
pop
bound
push
pop
fildl
cmc
and
jbe
cld
ss
mov
je
aam
xchg
mov
in
outsb
popf
icebp
xlat
mov
add
cwtl
fs
pop
sahf
add
push
dec
jo
xor
fstl
scas
pop
xor
jne
push
rorb
lods
add
int
int
pop
idivb
inc
dec
lds
inc
mov
je
pop
push
jno
xor
fiaddl
leave
pop
aad
or
cs
iret
addr16
leave
cmp
add
enter
sbb
sub
sbb
add
mov
aam
mov
cld
fstps
mov
insl
mov
jae
push
cmpsb
sub
mov
ret
roll
loop
xor
subl
repz
loope
inc
jae
sub
sub
int
or
ret
daa
mov
ret
loope
pop
ja
rorb
mov
cmp
jae
cld
pop
loopne
scas
push
aam
outsb
cmp
push
ret
xor
adc
jmp
mov
cmp
pop
into
test
outsl
mov
inc
mov
inc
or
jb
stos
cli
push
jl
scas
inc
sti
mov
lods
pusha
or
fsubrl
jl
pusha
and
imull
ficompl
xchg
mov
and
pop
cmp
or
jno
adc
mov
mov
sub
pop
pop
and
imul
push
adc
aam
xor
push
ljmp
push
fimull
in
int3
mov
outsb
mov
xchg
xchg
mov
rcrb
cmc
popf
ficoml
push
and
sbb
adc
mov
out
inc
adc
bound
outsb
cwtl
sub
fmul
loope
xor
lea
xor
aas
cmp
pusha
mov
sti
in
rorb
jbe
in
jle
inc
dec
push
dec
movsl
lret
xchg
cwtl
jb
loope
lret
gs
adc
mov
pop
jmp
or
mov
data16
push
fstps
and
pop
enter
xor
cmp
fsubs
xor
stos
pop
pop
add
lret
repz
loopne
jb
mov
pop
ret
inc
inc
lds
mov
adc
sub
int
stos
insb
fldcw
inc
jg
cmpsl
ss
dec
dec
cld
mov
inc
or
pop
inc
jbe
movsb
rclb
sub
loope
mov
inc
loope
dec
inc
jge
rclb
pop
hlt
and
xchg
jmp
sbb
lock
xor
add
in
sub
popf
xchg
jo
mov
dec
jecxz
xchg
lcall
pop
mov
adc
or
pop
fdivs
cbtw
xchg
and
push
jne
push
adc
movl
or
and
int
popf
mov
cld
lea
sbb
and
test
sbb
push
scas
sbbl
push
stos
in
or
loop
fistl
lds
xor
sub
outsb
jecxz
or
jbe
adc
lock
out
and
cmovno
bound
mov
jb
add
pop
xchg
xchg
nop
les
jg
mov
and
jns
xchg
jne
sti
sub
mov
mov
lahf
cmp
sahf
sbb
leave
fisttps
add
xchg
inc
or
sub
clc
mov
out
sti
in
mov
inc
inc
dec
ret
pop
aam
fdivrp
push
pop
lahf
test
jmp
pop
push
mov
mov
or
outsb
cmp
xor
xor
pop
jo
aad
mov
popf
mov
fnstenv
out
imul
mov
cmp
jmp
push
fidivrs
in
popf
sub
fisttpl
jbe
mov
cmp
jecxz
fidivs
or
in
push
or
divb
rcll
inc
pop
addb
lea
ret
jmp
aam
std
sub
push
movsb
xlat
dec
dec
xor
test
stos
fwait
loope
movsb
sub
mov
fisubs
mov
lret
ds
lahf
jno
aas
mov
mov
scas
imulb
cmpsl
aam
cwtl
xchg
jg
xor
arpl
es
enter
mov
sbb
or
scas
scas
adc
aam
lea
push
fcoms
fisttpll
rcll
iret
mov
mov
push
out
xchg
jecxz
addr16
push
fwait
mov
xchg
cmc
test
faddl
out
sub
mov
adc
mov
icebp
test
popf
jb
xor
sub
stos
and
aaa
nop
or
cli
or
pop
xchg
sub
push
les
mov
jl
cmp
bound
test
stos
subl
cli
pop
adc
add
cmp
jbe
or
pop
adc
sub
sti
adc
cmc
imul
mov
int
jbe
and
mov
outsl
in
in
xor
push
xchg
xor
jbe
cmc
xchg
and
jb
mov
pop
mov
sarb
lods
lea
test
imul
iret
pop
mov
jb
std
pop
loope
and
out
cld
mov
in
xchg
ficompl
mov
inc
movsl
mov
add
xor
jle
sbb
mov
cmc
lahf
outsb
jmp
push
ljmp
mov
cli
mov
jecxz
dec
lret
pop
lret
out
add
jnp
call
in
mov
inc
cmp
sub
xchg
mov
das
movl
loopne
test
inc
add
push
fcoms
ja
ret
rep
aas
pop
lret
pop
imul
inc
push
xchg
pusha
cmp
scas
pusha
dec
lcall
mov
pop
adc
hlt
mov
ret
push
mov
imul
int3
fbstp
mov
outsl
and
shrb
and
les
fdivl
repz
int3
lea
stos
lcall
js
push
fldl
aaa
sub
push
xchg
push
or
imul
stos
cltd
dec
jne
mov
bound
inc
gs
and
sbb
mov
push
jb
sbb
hlt
adc
inc
jbe
aam
add
inc
daa
leave
mov
dec
ljmp
fchs
addb
stc
outsb
and
int3
dec
push
and
xchg
sbb
push
add
cmp
test
pop
mov
ss
mov
mov
inc
xchg
xor
loope
xor
pop
jae
dec
clc
cmp
fidivl
cmpsl
jbe
lds
jno
mov
or
xor
push
testb
pusha
ss
xchg
xchg
jns
mov
or
insb
jmp
pop
lea
dec
daa
xor
test
push
cli
bound
popa
sbb
jg
sar
out
jo
leave
xchg
pop
and
mov
gs
out
dec
mov
and
call
div
jl
lock
stos
adc
push
mov
and
ret
adc
jb
loopne
lods
mov
out
and
mov
lods
lret
rcll
inc
push
mov
icebp
sbb
popf
mov
arpl
insb
cli
dec
ljmp
push
or
jbe
xchg
push
testl
daa
dec
push
jmp
dec
popf
sbb
pop
inc
scas
mov
and
push
inc
subl
addr16
addl
sti
fcomip
sub
int
jl
dec
or
dec
push
in
fbld
inc
mov
mov
inc
movsb
mov
jb
js
jecxz
call
hlt
mov
add
pop
stos
int3
gs
sbb
cld
push
stos
xor
inc
xor
cmp
mov
test
mov
xor
lods
inc
jo
jecxz
mov
les
pop
inc
adc
sbb
pop
mov
out
dec
push
or
or
jecxz
arpl
jp
cwtl
adc
adc
cs
jp
pusha
nop
fwait
mov
icebp
mov
sub
inc
scas
jmp
rorl
xchg
fs
sbb
mov
ret
mov
inc
les
cmp
add
xor
repnz
push
je
push
or
mov
mov
daa
xor
sub
ja
ror
in
in
fstl
rcrl
repz
push
xchg
cmp
mov
add
outsl
ret
sbb
mov
or
dec
inc
aad
adc
sub
mov
out
mov
cmc
mov
mov
mov
scas
jg
cmpsb
inc
leave
bound
mov
cltd
fwait
leave
push
es
test
mov
adc
sbb
scas
inc
aam
scas
and
cmp
imul
addl
aaa
and
nop
inc
mov
cli
stos
mov
cwtl
into
sub
rolb
aaa
inc
sbb
add
or
test
test
mov
jecxz
dec
pop
lcall
aam
icebp
inc
sub
addr16
push
jns
add
mov
xchg
insb
lock
sbb
jo
mov
fdivr
shr
inc
mov
xchg
cmp
mov
inc
jl
std
jle
es
mov
jns
out
and
dec
out
js
xor
lds
push
lods
test
lret
int
and
push
shrl
stc
repz
mov
mov
fcom
sub
loop
or
hlt
xchg
add
ficompl
sti
xor
addb
cmp
mov
test
iret
je
es
mov
fcoml
inc
sbb
mov
rorb
insb
pop
out
fisubl
lock
pop
or
dec
adc
xchg
dec
addb
mov
shlb
dec
std
jb
out
pop
mov
add
aad
mov
cmpsl
add
push
inc
ret
inc
inc
add
popa
scas
sbb
int
mov
addr16
mov
mov
int3
add
xor
cmp
pop
loop
xchg
dec
sbb
ja
add
shr
push
scas
adc
push
mov
jl
dec
ds
jg
je
sti
shlb
ja
mov
inc
cmc
mov
inc
loop
xchg
les
dec
idiv
pop
fistl
pop
jae
adc
pop
fcoml
lods
cmp
pop
jmp
andl
pop
cmp
cmp
dec
hlt
sbb
lods
adc
cwtl
imul
pop
out
mov
js
repnz
and
movb
paddsb
adc
ret
inc
xor
mov
jae
mov
arpl
dec
loope
data16
cwtl
test
pop
push
sahf
out
shrb
scas
cmpsl
sti
in
lcall
push
xchg
ret
loope
fs
pop
mov
push
cli
bound
bound
popa
jns
dec
dec
cld
cmpsl
fwait
mov
push
cmpsb
aaa
mov
clc
jo
adc
test
push
aaa
xchg
and
repz
adc
jo
or
and
sub
dec
aaa
xchg
push
test
dec
inc
insl
lret
add
andl
adcb
jl
lea
insb
inc
mov
or
push
or
inc
in
push
add
sbb
sbb
sbb
jno
imul
mov
sub
pushf
fwait
push
sti
cmc
outsb
xchg
inc
stos
push
das
fcoms
jg
sarb
mov
pop
cli
scas
pusha
mov
nop
mov
add
scas
xchg
hlt
insb
dec
jp
fwait
xor
dec
insb
and
adc
loopnew
jo
cmp
movsb
cmpsl
popa
jb
inc
sbb
iret
sahf
scas
ljmp
test
jecxz
xorb
mov
dec
lret
lock
and
iret
add
out
popf
outsb
popl
xchg
jl
xor
adc
jmp
and
add
enter
jmp
jb
jmp
shll
ret
xchg
daa
lret
dec
sbb
into
mov
inc
lea
fnstsw
hlt
and
jne
pop
push
repnz
dec
aad
iret
pop
adc
add
sahf
mov
xchg
lods
push
or
mov
je
mov
les
ljmp
out
arpl
lods
push
test
or
lods
push
pop
mov
push
shlb
aas
sbb
lahf
add
sahf
pop
push
decl
int
sub
iret
and
push
int3
sub
frstor
lods
out
dec
aam
adc
sarb
xchg
test
scas
loopne
xor
xchg
xlat
jns
iret
inc
rcll
push
stos
add
fwait
rcrl
sub
inc
xchg
int
mov
pushf
lret
dec
in
jg
mov
not
out
cs
pop
and
inc
fimull
mov
mov
dec
test
mov
mov
pop
adc
sub
sub
stc
aad
leave
cmp
lds
cli
xchg
es
xor
adc
inc
adc
adc
push
shlb
lods
jmp
shl
fidivrl
jge
pop
out
andl
cmp
int
mov
incb
inc
lahf
hlt
icebp
movsl
fcmovnb
scas
adc
mov
pop
movsl
into
or
inc
loope
dec
negb
pop
lcall
lods
enter
add
insb
pop
cli
cmp
das
pusha
mov
mov
pop
mov
fmulp
add
cmp
sahf
sbb
dec
cltd
adc
jo
mov
mov
insl
lods
out
ljmp
sbb
pop
pop
in
mov
shll
cs
push
mov
fcmovbe
add
sahf
cltd
cmpsb
mov
lds
and
pop
mov
inc
jo
dec
lret
jbe
lahf
fs
add
mov
inc
dec
xchg
adc
inc
nop
pop
call
inc
jg
add
repz
lock
fsubs
lea
gs
daa
xor
cmp
incb
loope
cmp
xor
pop
loope
adc
sub
in
hlt
mov
and
outsb
ja
repz
dec
cmp
or
lock
popa
je
in
mov
inc
bound
lret
les
mov
jb
and
idivl
jbe
call
mov
gs
xor
ja
orb
test
or
movsl
sbbl
cmp
push
dec
lods
inc
mov
xchg
aam
pushf
mov
pushf
jge
mov
and
cmpb
jno
shrl
mov
cmp
pop
cmp
out
mov
popf
sub
cwtl
sbb
mov
lock
xor
sbb
clc
cmc
outsl
lea
and
cmp
cmp
pop
popa
test
insb
xchg
cmpsl
lahf
dec
rcrb
and
outsl
int3
mov
xor
jbe
push
jbe
pop
jno
subl
movsb
lret
pop
pop
movsl
mov
jp
insb
inc
movaps
jl
lea
fcmovnb
cmpsl
adc
aam
pop
or
imul
addr16
jno
push
stos
insl
jo
inc
notl
or
ret
jecxz
add
arpl
dec
mov
push
inc
lods
daa
idivb
adcb
fs
loop
icebp
sub
cmp
ficompl
jg
jmp
or
ljmp
mov
into
ret
fcmovb
test
inc
js
stc
imul
stc
stc
ret
jl
xor
into
arpl
stos
jge
mov
fs
add
outsl
cmp
in
jle
lds
cld
arpl
bound
mov
inc
lods
jecxz
fwait
inc
and
aaa
in
out
popa
adc
push
stos
inc
dec
movsb
insl
mov
daa
mov
loope
std
sub
xor
fwait
jp
pusha
daa
pop
bnd
leave
sbb
xor
cmp
xchg
xchg
cmp
push
xor
rorb
bound
add
stos
jne
push
popa
arpl
lea
fmull
push
push
fadds
sahf
test
or
pop
mov
dec
lret
mov
scas
test
aad
nop
mov
fdivrs
adc
movsb
mov
push
and
pop
add
or
mov
insb
adc
aad
mov
cmp
cmpsb
push
scas
scas
mov
sbb
xchg
and
add
dec
mov
sbb
and
jmp
xchg
xchg
out
inc
lods
mov
dec
add
inc
in
pop
ljmp
jp
into
inc
mov
lods
cmpsl
ljmp
cmp
dec
xor
clc
cld
push
dec
sub
xor
inc
out
mov
call
les
loope
ret
sub
in
xchg
jl
mov
in
sbb
push
repz
aad
and
shll
dec
dec
and
cmpsb
rcrl
mov
imul
xor
and
movsb
fildll
and
xchg
testb
dec
sbb
xchg
sti
jl,pt
mov
pop
dec
and
and
sub
xchg
aas
ret
mov
mov
js
adc
iret
push
cmp
je
cmp
and
xchg
ret
cmpsl
push
pop
or
jae
int
pop
or
push
inc
movsb
imull
and
into
in
jg
mov
cmp
push
xlat
push
mov
mov
jmp
mov
in
jns
shrb
add
fimull
jmp
mov
int
les
inc
movsl
push
fistl
jb
aaa
sub
imul
pop
pop
mov
or
in
sbb
data16
xorl
xchg
sbbl
xor
xchg
repz
push
xchg
cmc
aaa
pop
adc
xchg
push
dec
xchg
in
jno
jae
adc
and
jge
push
xor
pop
es
stc
dec
scas
pop
mov
ss
lock
mov
jp
test
xlat
in
ret
adc
shll
div
push
mov
je
leave
adc
hlt
es
and
out
stos
rdpmc
mov
sbb
adc
adc
pop
push
push
mov
iret
ret
mov
mov
push
insl
dec
push
sub
sub
ljmp
aad
add
and
fimull
pop
in
jbe
dec
dec
pop
or
movsl
xchg
in
shlb
fdiv
sti
addb
fldt
mov
sbb
inc
sahf
mov
pop
aas
sbb
daa
dec
icebp
dec
inc
sub
sbb
adc
cmp
pop
sub
jmp
jg
xor
mov
inc
movsl
jecxz
mov
roll
inc
adc
enter
imul
cs
jno
jae
imul
test
sarl
xor
ljmp
inc
pushf
sbb
xchg
add
sbb
ljmp
xor
shr
out
adc
sbb
push
mov
insb
or
arpl
adc
mov
inc
arpl
pop
int
call
sbb
and
xor
adc
outsl
stos
jecxz
pop
cmp
daa
cmp
dec
inc
call
leave
les
je
or
push
insb
jb
sub
in
jl
outsl
adc
int
bnd
test
or
cltd
pop
dec
fsubrl
dec
pop
ret
or
add
jmp
insl
sub
daa
rcrb
aas
sub
mov
addr16
add
jb
mov
or
daa
pop
push
orb
cli
les
sub
test
sub
sbb
fcmovbe
dec
mov
xor
dec
xor
push
mov
xchg
aam
in
outsb
mov
sub
sub
cmc
adc
popl
adc
cmp
jg
shrl
mov
ret
fs
add
jbe
ret
shll
xor
xchg
xchg
fwait
mov
push
pop
xchg
test
fiaddl
and
fs
lret
mov
cwtl
lods
jecxz
fidivl
ficomps
xchg
loop
adc
div
jo
or
mov
das
dec
ret
js
inc
adc
testb
xlat
sbb
push
fcoms
jne
adc
or
xchg
lods
mov
scas
xchg
stos
lret
cmp
and
es
outsl
pop
cmpsb
xchg
les
ds
mov
xor
lea
cmovns
mov
add
add
les
lcall
jge
mov
inc
sub
popf
jns
data16
jge
adc
mov
cltd
js
imul
fnstenv
xchg
lock
fdivrl
adc
popf
pop
loope
outsb
mov
mov
inc
in
int3
out
hlt
out
adc
adc
imul
xor
jecxz
pop
icebp
xchg
lods
js
sbb
sbb
enter
aas
lds
dec
cli
cmp
dec
jns
mov
cmc
test
mov
fistps
fmull
xchg
call
cmc
shlb
xchg
ret
and
and
int3
sub
orl
das
jbe
pop
js
dec
stos
les
xor
sub
push
xchg
ljmp
inc
xor
push
or
cmpsb
xchg
push
sub
cmp
xor
aad
adc
call
arpl
movsl
add
pop
shlb
lret
or
fnstsw
xlat
rolb
xor
add
pop
jns
popa
push
xlat
dec
adc
push
xchg
sub
fsubr
pusha
mov
mov
stos
cmp
aas
vmwrite
xor
xor
sbb
jle
inc
push
fcompl
nop
movl
daa
dec
add
call
jnp
sbb
js
out
mov
inc
inc
push
aam
add
sub
sub
xchg
sti
popa
int
push
push
inc
dec
mov
repnz
cmc
dec
jbe
xor
xchg
movsl
popa
lret
cltd
movsl
mov
xchg
jnp
fs
inc
addl
sarb
enter
test
or
in
mov
mov
xor
call
stos
xor
cmc
loop
push
cmc
xchg
mov
jnp
sbb
fsubrs
out
nop
mov
push
int3
lods
stos
into
and
mov
xchg
sbb
inc
call
mov
cltd
jecxz
pop
xor
push
mov
ja
or
cmp
push
cmp
std
add
mov
ret
pop
js
xchg
imul
mov
outsl
cmp
insl
fisubl
addr16
and
std
pop
je
cld
jb
inc
pmullw
ja
xchg
mov
sahf
and
hlt
mov
xchg
xor
imul
or
aad
push
dec
cltd
mov
mov
pop
xor
es
mov
cmp
jo
inc
outsl
les
ret
repnz
les
stos
cmpsl
mov
stos
adc
in
cmp
jmp
pop
mov
add
and
stos
lods
adc
adc
mov
scas
mov
lahf
in
fs
adc
xor
pop
push
mov
into
xlat
sbb
sbb
daa
and
mov
movsl
in
cwtl
rcl
rol
shlb
push
insb
and
mov
mov
xchg
insb
ja
fidivl
inc
inc
push
cmp
out
sbb
lcall
es
ja
inc
cmpsl
mov
into
inc
stc
out
sub
jno
adc
cmp
testl
pop
inc
clc
fnstenv
addl
lods
mov
sbb
into
jno
mov
dec
lods
cmp
jge
arpl
gs
repnz
stos
pop
sbb
clc
rcrb
jmp
inc
and
addr16
sbb
addl
pop
outsb
jmp
push
je
mull
mov
daa
stos
cld
or
loope
jl
shl
aas
sbb
mov
or
dec
adc
jo
je
xor
int3
or
push
jmp
cmpsl
mov
sub
mov
push
movsl
cmpsl
pop
dec
scas
sub
repz
push
push
sbb
movsl
push
je
stos
nop
div
es
add
add
sub
mov
dec
or
shrl
sarb
shlb
leave
insb
sub
int
int3
and
push
and
arpl
aam
mov
bnd
push
jb
int
scas
inc
adc
mov
js
push
loop
fsubs
into
rorb
mov
out
fistl
or
xor
adc
xor
and
mov
lahf
jb
and
mov
or
sub
stc
cmp
xorl
idiv
outsb
jns
xor
xor
mov
lea
popf
sbb
cli
fstp
push
push
fisubl
lcall
sbbl
mov
mov
xlat
movsb
dec
mov
mov
xor
sub
lahf
or
mov
mov
shll
in
mov
adc
jl
mov
mov
lahf
adc
cld
jp
sbb
fnstcw
pop
xchg
les
and
adc
xchg
push
push
loopne
dec
inc
out
cwtl
mov
mov
lret
sbb
stc
sbb
push
xor
mov
rolb
div
add
rclb
push
mov
ja
stos
mov
or
lret
imull
rcr
dec
push
adc
or
mov
shrl
dec
stc
mov
mov
push
lods
adc
add
xlat
ret
xor
mov
jo
sbb
mov
movsb
jecxz
push
js
ss
dec
data16
xor
lcall
mov
mov
mov
imul
in
push
xchg
dec
dec
pop
lock
cmp
fnstsw
fadds
aam
xor
sub
pop
pop
xchg
mov
cmpsl
push
mov
fstp
mov
mov
push
outsb
int3
mov
jmp
and
rclb
jnp
push
sub
and
jecxz
add
and
cmp
repz
jo
lret
dec
lods
mov
or
pop
sub
inc
test
push
das
rsqrtps
jp
jp
or
inc
loop
sbb
or
and
adc
scas
sbb
pop
and
stc
mov
add
push
pop
sar
cmp
jns
xchg
adc
inc
mov
aas
test
mov
sti
mov
mov
jns
fs
rorl
push
add
int3
in
mov
dec
mov
cmp
mov
popf
sub
les
jge
int3
iret
xor
addr16
outsl
dec
adc
rorb
mov
stc
nop
daa
std
mov
adc
fs
les
sti
mov
mov
je
add
sbb
aam
pusha
mov
int3
and
sahf
loop
mov
xchg
hlt
loopne
aas
ret
dec
xchg
pop
daa
fistl
or
jmp
into
add
inc
xchg
inc
aam
mov
out
fsubrl
orl
jmp
rcrl
rcrl
mov
insb
inc
rolb
inc
mov
loope
pop
ljmp
out
push
std
adc
push
ljmp
fisubrs
icebp
cmc
cwtl
dec
mov
xor
pop
loope
xlat
jl
bound
push
bound
call
or
cld
or
inc
cmpsb
jne
xor
imul
xlat
xchg
mov
out
outsl
rorb
sar
pop
mov
or
insl
lods
mov
dec
xchg
rcll
aad
movsl
push
jbe
and
call
mov
mov
mov
jmp
mov
jb
ja
jo
jbe
push
fdiv
push
mov
test
daa
lahf
into
xor
out
cli
and
mov
adc
mov
xchg
fisubs
inc
lods
dec
sahf
sub
test
add
jnp
ds
and
xor
and
jle
jle
pop
movsl
stos
pop
shrb
mov
in
push
iret
fisubrl
sub
xchg
sbb
dec
adc
sbb
shlb
jnp
and
and
cmp
imul
inc
push
adc
out
dec
mov
jnp
sarb
mov
in
cmp
push
outsl
je
pushf
scas
sub
xchg
lds
stc
inc
decb
fidivrs
insl
stos
dec
shl
cmp
mov
mov
cmp
pop
adc
sbb
pop
lret
fstps
jae
les
jmp
jge
dec
leave
lds
xlat
push
test
psubd
test
outsb
push
jl
sbb
pop
or
mov
jp
iret
lahf
scas
sbb
push
xor
xchg
mov
sbb
lea
jno
ret
dec
push
mov
adc
iret
repz
cs
mov
inc
aaa
xor
xor
sbb
xor
jnp
ret
fidivrs
scas
mov
addr16
xchg
jb
pop
mov
rol
push
decb
imul
aas
in
pop
push
imul
cwtl
lods
in
inc
or
aaa
jo
pop
xlat
lds
int
jecxz
enter
out
xchg
shrl
into
push
clc
cmpsl
bound
mov
adc
xchg
lock
or
in
cld
jge
mov
cltd
ss
lcall
mov
enter
nop
push
push
scas
adc
add
cmp
cmpsl
push
fimull
inc
pop
mov
je
dec
bound
lret
inc
pop
cmpsb
and
loopne
out
add
sbb
into
jno
add
les
ss
xlat
dec
add
adc
jp
inc
insl
roll
mov
pop
or
xlat
xor
jmp
lods
dec
mov
push
and
mov
mov
add
call
into
jo
jl
aam
stc
pop
dec
cwtl
inc
ljmp
xor
ret
pop
cmp
xlat
dec
and
cld
popf
cwtl
pop
cmp
or
push
enter
cmpsl
jl
jne
popf
std
inc
leave
bound
js
loopne
cwtl
test
and
jge
rol
mov
push
mov
in
jo,pn
sub
int3
sbb
push
clc
ljmp
jae
std
imul
sbb
addl
or
or
jp
xchg
repz
xchg
lock
fmulp
xlat
test
sbb
jae
iret
dec
lds
pop
out
push
pop
jne
rcrl
ds
xchg
mov
mov
sbb
and
aam
cmp
pop
mov
inc
ss
adc
lock
cmp
gs
xchg
pop
dec
ret
mov
xor
sub
stc
arpl
adc
add
idivl
ljmp
pusha
jg
or
inc
inc
or
out
shr
arpl
cmp
push
cld
xchg
cltd
xor
pushf
fistpll
mov
push
adc
arpl
andl
call
and
inc
xor
mov
push
loopne
mov
push
int3
mov
cmp
xchg
jmp
jle
aam
daa
int
add
xchg
inc
sahf
mov
mov
loop
add
lcall
dec
sti
into
xor
js
icebp
bound
imul
or
xor
test
mov
cmp
inc
add
push
arpl
jmp
sbb
add
jne
outsb
sbb
or
test
inc
popa
repnz
test
add
and
int
add
lret
fadds
std
sbb
movsb
fmull
test
iret
mov
int
fwait
cmp
pop
add
insb
loope
cmpsl
lds
cmc
xchg
xor
out
jnp
lock
add
sbb
roll
fisubrl
mov
pop
fnsave
mov
idivb
sar
adc
nop
out
xor
jge
fldl
icebp
mov
mov
clc
or
push
dec
bound
cmp
pop
pushf
inc
xor
fldcw
sbb
js
stos
mov
mov
jle
ret
fs
cmpsb
push
cs
ss
std
add
and
push
xor
data16
rcr
jb
cmpsb
mov
idiv
in
adc
outsl
stos
scas
xor
push
add
jo
subb
push
mov
pop
mov
or
xchg
mov
lods
jmp
lea
enter
jmp
and
xor
jp
cmp
dec
inc
inc
imul
or
mov
dec
push
ret
outsl
and
das
int3
inc
repnz
ret
jo
imul
js
js
fs
insb
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
adc
add
jmp
pop
add
sbbb
add
sbb
add
add
sub
adc
add
sbb
add
or
add
pop
adc
add
sbb
add
sbb
add
add
add
pop
add
negb
add
pop
add
or
add
pop
add
and
add
pop
add
xor
add
pop
add
dec
pop
add
pop
pop
add
gs
add
jae
add
jle
add
mov
add
pop
add
scas
pop
add
mov
pop
add
add
add
inc
gs
insl
bound
popa
jo
push
addr16
outsb
jo
dec
popa
je
js
addr16
add
outsl
insl
insl
push
jb
popa
je
push
je
jne
imul
imul
jns
add
push
add
imul
popa
jo
inc
fs
jb
jae
jns
jo
dec
jae
insb
outsb
jbe
outsb
bound
jbe
add
outsl
arpl
imul
jo
outsb
push
js
arpl
addr16
dec
bound
ja
imul
add
imul
jae
add
insl
bound
je
add
gs
je
dec
imul
ja
add
inc
push
jns
jb
outsb
popa
jbe
add
fs
fs
jo
jns
jb
inc
jb
popa
je
dec
jne
outsb
insb
jb
ja
jno
add
outsb
inc
insl
imul
js
gs
