jne
mov
cmp
jne
and
mov
lea
push
lea
call
mov
test
pop
jne
mov
mov
call
xor
push
mov
lea
mov
call
cmp
je
mov
cmp
jne
mov
inc
push
push
lea
call
cmpl
pop
pop
jne
mov
lea
call
lea
call
lea
call
lea
call
lea
call
pop
mov
pop
pop
leave
ret
pushl
call
test
pop
je
mov
mov
push
pushl
push
call
mov
jmp
mov
mov
push
call
xor
ret
mov
pushl
mov
pushl
mov
push
call
movsbl
add
and
ret
push
mov
push
push
push
push
push
xor
push
lea
mov
call
mov
mov
lea
push
push
call
mov
cmp
mov
jne
push
lea
mov
call
mov
lea
push
push
mov
mov
call
mov
test
jne
testl
mov
lea
push
push
jne
call
mov
test
jne
mov
mov
push
pushl
push
call
mov
lea
call
lea
call
pop
mov
pop
pop
leave
ret
mov
push
push
push
call
cmp
je
xor
jmp
call
jmp
mov
ret
int3
int3
cmpl
push
push
mov
jne
add
add
add
test
sbb
adc
add
test
je
push
push
xor
mov
addl
jo
mov
mov
mov
mov
push
mov
call
pop
pop
mov
call
test
je
mov
mov
push
push
push
call
test
js
mov
cmp
je
test
jne
test
je
mov
mov
push
call
mov
test
mov
jne
test
je
mov
mov
push
call
pop
pop
ret
orb
jmp
mov
jmp
push
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmpl
jne
cmpl
jne
cmpb
jne
xor
pop
ret
mov
mov
mov
call
xor
pop
ret
sub
push
mov
push
push
mov
mov
push
mov
mov
test
movl
movl
mov
je
mov
mov
mov
mov
mov
lea
push
push
lea
call
mov
mov
add
test
jne
test
jne
test
jne
mov
mov
mov
push
call
mov
test
mov
jne
mov
push
call
add
push
mov
call
mov
mov
mov
lea
add
lea
lea
add
cmp
jne
push
push
push
push
mov
call
cmpl
jbe
xor
mov
movl
lea
mov
push
push
call
push
mov
call
mov
add
mov
mov
push
add
push
push
call
test
je
mov
mov
lea
lea
lea
cmp
je
lea
mov
jmp
lea
test
je
push
movl
movl
movl
call
mov
add
add
cmp
jne
mov
addl
mov
add
cmp
mov
jb
xor
pop
pop
pop
pop
add
ret
push
push
mov
mov
test
je
test
je
sar
mov
mov
push
push
push
push
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
cmp
je
mov
test
push
je
mov
lea
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
je
mov
lea
push
push
push
movl
call
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
add
mov
cmp
jne
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
push
call
mov
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
je
mov
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
movl
pop
xor
pop
ret
cmp
je
cmp
je
xor
mov
pop
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
push
call
mov
pop
xor
pop
ret
mov
add
call
ret
int3
push
mov
push
mov
imul
xor
cmp
mov
jg
sub
js
push
mov
cmp
jge
movzwl
add
cmp
ja
cmp
jb
add
movzwl
shl
add
sub
jns
pop
pop
pop
ret
cmp
jb
cmp
ja
and
shl
lea
jmp
lea
cmp
jbe
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
cmp
push
mov
jne
test
jle
xor
jmp
lea
movzwl
cmp
ja
cmp
jb
add
cmp
jl
push
xor
cmp
setne
push
push
xor
add
mov
call
mov
push
mov
mov
call
mov
push
mov
mov
call
add
cmp
je
mov
or
shl
or
mov
shl
or
pop
pop
pop
mov
mov
pop
pop
ret
cmp
jb
cmp
jbe
add
cmp
jbe
pop
xor
pop
pop
ret
cmp
je
pop
xor
pop
pop
ret
mov
shl
or
mov
mov
shl
or
mov
shl
or
jmp
push
mov
and
mov
sub
push
xor
cmp
push
push
je
mov
push
lea
mov
call
mov
mov
mov
mov
lea
orl
testl
jne
mov
mov
mov
mov
mov
call
add
mov
mov
mov
test
je
mov
lea
push
push
pushl
push
push
call
mov
test
je
mov
test
mov
je
mov
mov
push
call
mov
mov
call
mov
lea
call
pop
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
cmpl
jne
mov
push
mov
push
mov
testb
push
je
mov
sub
je
push
call
add
add
mov
xor
pop
pop
pop
ret
mov
lea
lea
push
call
add
test
je
mov
movl
mov
push
lea
push
push
call
add
movb
mov
pop
pop
xor
pop
ret
mov
push
lea
mov
push
lea
jmp
push
call
pop
add
cmp
jne
pop
pop
ret
pushl
call
ret
mov
call
mov
ret
push
mov
push
push
decl
cmpl
jne
push
movl
lea
mov
push
mov
mov
add
shl
add
cmp
je
mov
jmp
mov
lea
call
mov
call
addl
cmp
jne
mov
push
push
push
push
call
mov
cmp
jne
lea
call
lea
call
lea
call
lea
lea
call
mov
call
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
mov
xor
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
push
mov
push
andl
push
push
lea
call
mov
mov
lea
push
pushl
pushl
pushl
push
call
test
js
pushl
mov
pushl
push
call
lea
mov
call
mov
pop
leave
ret
mov
cmp
mov
je
cmp
je
sub
neg
sbb
not
and
mov
ret
mov
add
jmp
push
mov
cmpl
jne
pop
ret
mov
call
lea
pop
xchg
inc
add
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
andl
andl
lea
call
lea
call
lea
call
lea
call
push
lea
push
push
call
push
lea
push
push
call
add
mov
ret
int3
int3
sub
mov
push
push
xor
push
lea
lea
mov
movl
mov
mov
mov
call
mov
cmp
je
mov
lea
push
push
mov
call
cmp
je
mov
mov
lea
push
push
push
mov
call
cmp
jne
mov
cmp
je
mov
lea
push
push
push
mov
call
test
js
cmp
jne
push
lea
push
push
call
mov
add
cmp
je
testb
jne
mov
lea
push
lea
push
lea
push
push
push
call
mov
or
shl
or
add
shl
or
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmp
je
testb
jne
mov
lea
push
lea
push
lea
push
push
push
call
mov
or
shl
or
add
shl
or
mov
mov
test
pop
jne
test
je
mov
push
call
add
mov
push
push
call
add
cmp
mov
jne
mov
mov
shr
and
cmp
je
mov
lea
push
push
push
mov
call
test
js
mov
cmp
je
mov
lea
xor
and
xor
lea
call
pop
pop
add
ret
mov
lea
push
movl
lea
movl
mov
mov
push
push
call
mov
mov
mov
push
push
push
call
jmp
mov
jmp
push
cmpl
jne
cmpl
je
mov
pop
ret
push
call
test
pop
je
call
mov
push
mov
call
call
test
jns
xor
pop
ret
xor
jmp
push
mov
sub
push
xor
cmp
push
push
jne
call
test
je
push
push
push
call
add
test
js
push
mov
mov
mov
call
cmp
pop
je
movl
mov
lea
call
cmp
je
push
lea
call
mov
mov
lea
push
pushl
push
push
call
lea
mov
push
lea
push
lea
movl
mov
call
test
jne
mov
mov
push
mov
add
lea
mov
push
lea
push
lea
movl
mov
call
test
jne
mov
lea
push
mov
mov
push
call
test
mov
jne
call
or
test
movl
mov
movl
je
or
or
movl
mov
movl
add
cmp
mov
leave
adc
add
je
lret
adc
mov
add
cmp
test
movl
mov
movl
jne
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
push
mov
mov
pop
push
mov
and
or
pop
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
add
or
pusha
loopne
adc
add
shr
adc
add
clc
xchg
mov
loopne
adc
add
enter
movl
mov
movl
mov
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
and
or
or
or
or
or
or
add
mov
add
and
adc
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
inc
add
leave
adc
add
add
add
sbb
lret
adc
add
lock
jecxz
adc
add
and
lret
adc
add
sbb
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
or
or
or
or
or
or
or
or
or
or
or
and
add
or
or
or
or
or
or
or
mov
mov
movl
mov
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
sub
lret
adc
add
adc
mov
leave
adc
add
push
icebp
lret
adc
add
xor
out
adc
add
je
lret
adc
add
js
mov
leave
adc
add
cwtl
icebp
lret
adc
add
fs
adc
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
in
lret
adc
add
adc
mov
leave
adc
cmp
or
or
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
leave
adc
add
enter
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
jmp
jmp
lret
adc
add
push
mov
adc
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
or
or
or
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
and
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
movl
movl
add
add
cmp
lret
adc
add
add
jmp
adc
add
pusha
test
jmp
adc
mov
leave
adc
add
test
lret
adc
add
cmp
in
leave
adc
add
test
lret
adc
add
sub
in
leave
adc
add
int3
test
in
leave
adc
xchg
mov
leave
adc
add
lock
in
leave
adc
xchg
mov
leave
adc
add
adc
lret
adc
add
pop
or
leave
adc
add
cmp
lret
adc
add
adc
in
leave
adc
add
add
lret
adc
add
je
mov
leave
adc
add
test
lret
adc
adc
movl
movl
mov
movl
movl
or
or
or
or
add
or
and
or
or
or
or
and
and
or
and
and
or
or
or
or
mov
push
mov
mov
mov
inc
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
add
and
lret
adc
adc
adc
add
xor
lret
adc
add
jl
mov
out
leave
adc
add
cmp
lret
adc
add
clc
cld
mov
icebp
leave
adc
add
inc
stc
lret
adc
add
enter
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
add
or
and
or
or
or
or
or
and
and
or
and
or
or
or
or
or
or
push
pop
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
sbb
lret
adc
add
and
mov
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
mov
movl
movl
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
add
add
add
movl
movl
movl
movl
add
test
mov
hlt
leave
adc
add
mov
lret
adc
add
cwtl
mov
hlt
leave
adc
add
cwtl
cld
lret
adc
add
mov
jl
leave
adc
add
cld
lret
adc
add
push
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
or
or
or
or
or
or
or
or
or
add
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
add
add
movl
movl
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
add
add
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
add
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
add
add
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
add
test
mov
cld
leave
adc
add
jo
int3
adc
add
cwtl
mov
cld
leave
adc
add
js
int3
adc
add
mov
in
cld
leave
adc
add
addb
std
leave
adc
mov
std
leave
adc
add
mov
sub
leave
adc
jns
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
add
or
or
or
or
or
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
pushf
push
int3
adc
add
enter
or
or
or
or
or
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
adc
int3
adc
add
mov
mov
lret
add
sub
int3
adc
add
int3
in
mov
add
adc
add
dec
pop
int3
adc
add
pushf
in
mov
add
adc
add
push
pop
int3
adc
add
lods
in
mov
add
adc
add
pop
pop
int3
adc
add
mov
sbb
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
or
or
or
or
or
or
or
and
and
or
and
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
add
cwtl
mov
push
lret
add
js
int3
adc
add
nop
cltd
mov
add
in
lret
or
adc
add
sbbb
push
lret
add
nop
or
adc
add
add
mov
push
lret
add
cwtl
or
adc
add
mov
mov
pop
lret
cmp
or
or
or
or
and
or
or
or
or
or
or
or
add
and
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
inc
add
lret
add
insb
or
adc
add
mov
mov
lret
add
je
int3
adc
add
dec
mov
lret
add
cwtl
or
adc
add
call
sbb
movl
movl
mov
movl
movl
mov
add
call
cmp
or
or
or
add
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
mov
mov
movl
mov
mov
movl
movl
mov
add
les
int3
adc
add
insb
out
adc
adc
add
rorb
int3
adc
add
pop
out
adc
adc
add
fmuls
int3
adc
add
jl
mov
or
adc
add
loopne
int3
adc
add
mov
mov
or
adc
add
call
add
pushf
out
adc
adc
add
lock
adc
add
lods
out
adc
adc
add
clc
or
adc
add
int3
out
adc
adc
add
add
int3
adc
add
mov
sbb
movl
movl
mov
movl
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
add
sbb
int3
or
les
int3
adc
add
or
lock
call
or
adc
add
jo
mov
push
lret
add
orb
adc
add
nop
cmpl
add
nop
or
adc
add
clc
xchg
push
lret
add
mov
add
call
sbb
movl
movl
mov
movl
add
enter
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
or
or
mov
mov
movl
movl
mov
movl
call
xor
mov
add
ret
je
mov
lea
push
pushl
mov
push
call
add
inc
cmp
jl
xor
push
call
inc
cmp
pop
jl
call
push
push
call
movzbl
push
push
mov
call
movzbl
add
mov
movl
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
test
push
mov
push
mov
je
mov
js
mov
add
test
jne
lea
push
push
mov
movl
movl
movl
mov
movw
mov
call
lea
push
lea
mov
movl
call
add
push
lea
mov
call
test
je
test
je
mov
mov
lea
mov
test
jne
test
jne
test
je
mov
cmp
je
cmp
je
mov
mov
add
push
add
add
add
rcrb
and
add
add
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
call
test
je
mov
mov
cmp
jne
mov
test
je
mov
mov
mov
lea
cmp
je
lea
movzwl
lea
cmp
movzwl
jbe
mov
add
add
cmp
jne
pop
pop
pop
pop
ret
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
test
jne
lea
push
lea
push
push
push
push
mov
movl
call
add
xor
test
pop
js
mov
mov
push
mov
push
mov
push
mov
push
mov
push
push
push
call
mov
add
test
js
mov
pop
ret
int3
push
mov
mov
push
push
mov
mov
mov
xor
test
je
mov
add
test
jne
sub
je
mov
mov
mov
mov
mov
mov
push
call
test
je
mov
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
call
mov
and
or
mov
mov
mov
mov
mov
mov
mov
mov
sub
push
call
mov
push
call
lea
call
mov
mov
test
jne
test
jne
mov
push
push
call
add
test
je
mov
mov
push
push
call
add
test
je
pop
xor
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
xor
movl
mov
movl
mov
cmp
push
push
je
lea
push
mov
mov
mov
mov
push
push
mov
call
mov
test
mov
je
mov
mov
lea
mov
mov
test
jne
test
jne
push
call
mov
mov
mov
and
add
or
mov
mov
mov
pop
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
rorb
iret
in
cmp
mov
lea
push
push
push
mov
call
test
js
mov
mov
call
mov
mov
shr
and
test
je
mov
lea
push
push
push
mov
call
test
js
mov
movzbl
shl
xor
and
xor
mov
mov
shrl
fwait
push
inc
add
ja
add
mov
add
arpl
mov
cld
add
decb
pop
mov
add
add
std
fldl
sahf
test
add
mov
sti
lea
add
add
add
addb
mov
mov
loopne
mov
add
push
push
lods
add
mov
jmp
clc
lock
aad
fs
mov
add
in
add
jae
call
fiaddl
mov
mov
mov
add
xchg
add
insb
flds
enter
add
push
jbe
add
movsl
ret
in
add
lcall
add
jle
add
mov
lcall
movb
add
js
add
add
imul
sahf
mov
add
add
movb
add
xchg
add
fiaddl
add
nop
add
add
cld
mov
aam
mov
add
push
push
push
push
push
push
push
push
push
push
call
add
jbe
push
add
add
mov
mov
add
je
movb
add
fidivrs
add
add
cli
add
pop
add
mov
cmp
add
add
cmc
add
add
hlt
add
addl
call
xchg
mov
popl
rolb
add
js
add
add
les
inc
cld
add
add
popl
push
push
lea
push
push
push
call
loopne
ljmp
arpl
xchg
cmpsb
add
add
add
mov
add
call
add
out
stos
cmpsl
jae
add
add
movsl
add
pop
sahf
je
addl
ja
mov
add
add
add
pop
add
fldl
add
lret
sti
add
add
add
je
pop
jnp
mov
mov
push
mov
lea
pop
push
push
push
push
push
lea
push
push
lea
push
lea
push
push
push
call
in
filds
rolb
add
jecxz
add
mov
pop
aad
imul
pop
in
fwait
clc
int3
scas
jnp
test
add
lea
add
hlt
call
ret
add
add
fildl
add
push
xchg
stos
pop
jnp
ret
add
push
test
test
lods
call
nop
enter
call
add
jecxz
mov
lea
pop
push
call
push
push
push
push
push
push
push
push
call
add
js
add
cmpsb
lea
shlb
mov
test
add
arpl
lret
mov
add
cltd
add
jb
imul
out
pusha
js
add
testb
add
add
add
add
add
add
test
add
popl
pop
add
add
cltd
test
fmull
movsl
add
add
dec
fistl
push
lea
push
push
lea
push
call
shrb
add
jo
push
aad
jae
add
loop
mov
add
jl
mov
add
mov
push
add
mov
mov
fwait
mov
mov
cli
pop
in
add
aad
xchg
push
add
add
mov
mov
lea
pop
push
call
push
lea
push
push
push
push
push
lea
push
push
push
call
mov
clc
mov
add
rcrb
jmp
add
add
mov
add
add
shrl
add
jo
outsl
shr
add
test
add
sahf
mov
hlt
add
popf
js
int
fiadds
jo
pop
pop
pusha
add
add
movsl
mov
sub
pusha
add
pop
mov
lea
pop
jmp
push
push
push
push
push
call
add
mov
add
add
les
add
add
mov
fsts
add
cli
sbb
add
arpl
mov
cmc
jecxz
lds
add
movsb
add
add
je
push
add
mov
outsl
lret
test
jbe
out
in
jl
mov
jo
add
lea
pop
ret
push
push
push
push
call
add
add
add
add
mov
call
jae
mov
add
mov
mov
jbe
fsubrl
add
jp
add
lods
mov
jecxz
add
stc
je
push
add
add
pop
fcom
xlat
add
fldln2
popa
add
add
addr16
movsl
push
pop
sti
les
hlt
lahf
add
addr16
jge
out
add
push
xchg
in
mov
adc
inc
in
push
lea
push
push
push
push
push
push
push
push
push
call
stc
std
into
mov
mov
add
add
push
mov
test
cltd
mov
test
arpl
push
add
add
add
mov
rcrl
jnp
fxch
push
leave
test
mov
mov
add
pop
add
mov
movb
add
test
imul
jge
add
add
out
les
xchg
add
add
mov
add
add
mov
lea
pop
mov
add
push
push
push
push
push
lea
push
push
push
call
xchg
mov
bnd
mov
out
add
mov
xchg
push
xchg
add
shl
jecxz
pushf
xchg
xchg
add
cld
add
xchg
add
add
jns
add
mov
add
loop
nop
add
xchg
mov
lret
pop
lods
mov
cmc
add
pop
add
fiadds
xchg
add
je
fsubp
iret
mov
add
mov
loope
mov
lea
pop
add
push
push
lea
push
push
push
push
lea
push
push
lea
push
lea
push
call
add
add
flds
mov
add
cmc
pop
mov
jne
mov
add
add
add
subb
add
movsl
add
mov
ljmp
popa
add
out
sti
add
out
sahf
popa
add
roll
ret
xchg
mov
fisubrl
in
push
sahf
mov
add
add
add
add
int3
lea
pop
add
push
push
push
push
lea
push
push
call
popf
into
jne
add
je
ret
add
add
cmpsb
sar
add
jecxz
add
xchg
loopne
loopne
add
pusha
jl
xchg
ljmp
mull
aad
arpl
loopne
add
add
hlt
add
mov
add
add
add
add
xchg
mov
js
add
add
add
pop
mov
xor
push
push
push
push
lea
push
push
push
call
sahf
add
enter
xchg
stc
add
xchg
add
mov
push
push
add
lahf
iret
add
add
repnz
cmc
add
out
add
ret
jecxz
push
push
mov
add
add
adcl
add
in
add
in
fsubrs
xchg
jecxz
add
popa
add
add
add
cld
add
out
add
add
cmc
add
mov
lea
pop
add
call
push
push
push
push
lea
push
push
push
call
add
movsb
add
cmpsl
pop
add
xchg
add
jge
add
movl
add
mov
ljmp
jl
add
mov
add
rolb
call
add
mov
scas
int3
add
lea
bound
repnz
into
int3
shl
add
hlt
add
add
cmpsb
xchg
add
mov
lea
pop
mov
xor
push
push
shl
rol
push
or
inc
add
xor
shl
sub
add
ror
pop
dec
pop
push
push
push
lea
push
push
lea
push
push
lea
push
call
fs
jge
movsl
add
push
add
roll
add
mov
loope
mov
insb
lock
add
outsl
cmpsb
add
add
int3
pop
lock
jmp
stos
add
mov
je
add
add
testl
add
mov
stos
add
je
add
rcrb
jnp
add
out
mov
lea
pop
pushl
call
mov
push
push
push
push
push
lea
push
push
push
call
jp
out
lods
add
mov
hlt
add
add
pop
add
push
testb
adc
lea
shl
mov
cwtl
add
add
idivb
add
jmp
xchg
call
cwtl
add
outsl
add
xchg
ljmp
push
fwait
imul
add
xchg
mov
mov
lea
pop
movl
push
push
push
push
push
push
call
xchg
stc
mov
movsl
add
mov
add
mov
mov
rolb
ljmp
push
mov
loop
add
mov
insb
mov
add
add
cmpsl
repnz
pop
xchg
mov
loop
add
add
mov
mov
mov
mov
push
pushf
cmpsl
add
leave
push
out
add
jmp
add
mov
cld
lea
pop
lea
push
push
push
push
push
call
add
jecxz
add
mov
add
add
add
stos
test
add
add
add
call
add
cwtl
repnz
fnsave
xchg
mov
jne
jmp
jecxz
sahf
int
add
stos
add
pop
add
push
pop
mov
mov
lret
jnp
add
out
add
lods
sbbb
data16
push
pushl
push
push
push
call
add
jp
mov
mov
add
ja
ficoml
add
mov
sbb
add
xchg
mov
add
add
test
in
add
rolb
add
add
mov
loope
ror
lea
add
push
nop
add
add
js
mov
mov
add
pop
add
pop
pop
rcrl
popf
mov
lea
pop
pushl
push
lea
push
lea
push
push
push
push
call
fs
add
arpl
mov
push
add
xlat
in
add
mov
fiaddl
ret
addl
add
lahf
hlt
add
jae
push
in
stc
pop
add
jmp
pusha
fbstp
pop
jle
stc
fstpt
movb
testl
add
add
add
pop
rolb
pop
pusha
lock
xchg
popa
leave
fsubrl
les
mov
push
lea
push
lea
push
push
push
push
lea
push
call
add
pop
out
jbe
fsubrs
out
leave
add
add
xchg
popf
jne
movsb
pop
add
add
rolb
jnp
add
add
add
add
add
mov
mov
jno
jecxz
push
add
add
mov
add
mov
add
lcall
gs
lret
mov
mov
xchg
add
mov
lea
pop
pushl
pushl
call
push
push
add
not
add
push
or
inc
add
not
sub
sub
dec
pop
xor
pop
push
push
push
push
push
push
lea
push
push
call
add
add
add
ljmp
push
mov
int3
in
leave
pop
mov
scas
arpl
add
add
add
gs
jno
add
repnz
movsb
mov
test
mov
add
add
hlt
mov
add
add
loopne
bound
fldenv
add
ja
add
addr16
lea
pop
pushl
push
push
push
push
call
out
fdecstp
imul
xlat
jp
rcr
shl
cld
iret
pushf
add
push
rolb
out
into
mov
repnz
add
cmc
xchg
add
add
enter
shrl
pop
leave
add
outsl
cltd
jmp
mov
add
add
lock
add
add
add
rcrl
out
fldl2t
add
add
add
scas
add
add
mov
lea
pop
call
push
push
push
push
lea
push
push
call
nop
cmpsl
jnp
sahf
add
ret
lret
fldenv
scas
add
scas
imul
push
add
xchg
add
add
mov
lea
add
add
push
add
jge
xchg
add
mov
out
add
add
xchg
popa
aam
mov
pop
imul
mov
repnz
push
add
int3
shr
add
add
fdivs
popf
testl
out
and
add
rorl
pop
dec
lea
push
or
inc
add
sub
inc
add
sub
add
rol
pop
rol
shl
sub
pop
push
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
movsl
sub
int3
add
jnp
out
add
gs
add
add
jno
push
add
mov
xchg
repnz
lret
push
int3
rcrl
orl
pushf
xchg
sarb
call
xchg
add
push
data16
xchg
push
pop
add
lret
add
mov
jae
shr
mov
loop
les
mov
lea
pop
push
push
lea
push
push
push
call
subb
out
add
stos
cld
jno
ljmp
add
clc
jp
add
iret
pusha
rolb
mov
add
out
add
jo
pop
hlt
lret
in
loop
aad
movsl
pop
pop
not
add
add
add
lahf
push
jbe
sti
stos
scas
push
add
add
add
rolb
add
xchg
add
add
add
xchg
add
add
cmpsb
arpl
jo
int3
lea
pop
push
call
push
push
push
lea
push
push
push
call
mov
cli
xlat
xchg
add
jae
mov
test
add
add
std
add
add
stos
pop
add
testl
push
add
mov
fstpl
mov
pop
add
xchg
add
add
faddl
add
fiaddl
add
out
test
add
add
jecxz
add
popa
push
movb
add
popf
add
out
test
faddl
add
pop
mov
push
push
push
push
lea
push
push
lea
push
push
call
leave
ljmp
add
out
add
shll
xchg
add
rolb
movsb
mov
pop
add
movsb
arpl
add
incb
test
add
in
jbe
outsl
hlt
jae
add
jae
call
mov
lret
jl
add
nop
nop
stos
lcall
shll
jl
mov
lea
pop
push
mov
add
push
lea
push
push
push
lea
push
push
lea
push
push
lea
push
push
call
add
loopne
loope
fucomp
add
insb
adc
add
add
ljmp
sti
stc
add
add
out
stos
into
add
mov
loopne
cli
add
add
add
fildl
bound
in
lods
push
add
add
add
flds
add
mov
lret
scas
add
clc
mov
add
add
add
iret
add
mov
sub
ret
add
add
add
mov
xor
push
push
push
push
push
lea
push
push
push
push
call
out
cmpsl
mov
hlt
jns
rolb
mov
add
jae
jle
xchg
add
add
cli
bound
lods
pop
add
mov
mov
testl
xchg
add
add
lret
lds
add
add
add
ret
fcoml
cwtl
push
add
add
popa
leave
std
add
push
test
add
mov
pop
stos
jns
add
addl
and
add
push
push
push
push
push
lea
push
push
push
push
call
add
add
addb
xchg
add
xchg
fidivrs
pop
mov
lcall
subb
lcall
mov
push
movsb
add
add
add
add
jmp
add
jae
jmp
addb
jl
nop
aam
out
fisubs
loopne
andb
add
add
movb
test
xchg
lea
pop
push
mov
push
push
push
lea
push
push
push
lea
push
call
cli
add
test
add
mov
lods
add
fwait
mov
jb
add
add
add
add
push
add
add
add
mov
pop
add
cltd
add
xchg
scas
mov
add
add
add
fisubrs
fmul
add
stc
add
filds
add
add
add
lcall
cmpsl
add
nop
add
imul
in
mov
lea
pop
xor
push
lea
push
lea
push
push
push
lea
push
push
push
push
call
stos
pop
add
mov
add
push
loopne
call
add
add
lods
sahf
xchg
je
add
mov
push
add
add
add
jo
add
add
mov
pushf
add
add
outsl
jecxz
add
in
add
add
add
add
add
hlt
add
add
popf
mov
lea
pop
add
push
push
push
call
mov
movb
mov
jmp
mov
add
fildl
pushf
pop
add
xchg
retw
ficoms
add
mov
add
xchg
pop
xchg
add
mov
fldcw
xchg
addb
cmpsl
cli
add
add
sbbl
xchg
pop
loop
in
add
mov
lea
pop
add
push
push
push
call
pop
add
add
aad
scas
add
int
cli
lcall
mov
jmp
js
movsl
loopne
cmpsl
add
into
ljmp
mov
add
cmpsl
fchs
mov
sti
stc
add
push
test
add
mov
add
add
loopne
add
add
mov
mov
movsb
add
in
loopne
scas
js
mov
pop
pop
push
push
push
push
push
push
call
add
popa
pop
push
add
add
icebp
hlt
jne
add
mov
data16
test
cli
push
repnz
addr16
xchg
add
mov
mov
lea
push
jl
push
lds
add
ja
add
leave
add
frstor
addb
add
add
pop
mov
push
push
lea
push
push
push
push
push
push
push
lea
push
call
mov
cwtl
add
stos
out
add
mov
lret
add
mov
int3
fcompl
cmc
test
mov
add
pop
mov
les
out
sub
pop
xchg
add
xchg
add
push
add
ret
add
outsl
add
add
push
mov
mov
add
loope
add
iret
add
ret
add
out
hlt
lea
pop
xor
push
push
push
call
add
mov
jb
jae
mov
lret
jno
jmp
pop
std
out
mov
mov
pop
jne
xchg
push
ja
add
mov
arpl
add
popf
mov
push
add
add
pop
sahf
add
jecxz
add
xchg
stos
add
jns
add
add
add
popa
or
add
push
lea
push
push
call
add
xchg
add
add
add
in
pop
cmc
incb
add
add
stos
jne
add
pop
add
add
cli
mov
rolb
jnp
arpl
jecxz
cltd
mov
cmpsb
mov
add
add
insb
out
pop
push
pop
jl
mov
mov
mov
mov
xchg
int
rorb
pop
push
mov
xor
push
push
push
push
push
lea
push
push
lea
push
lea
push
push
call
test
mov
add
addr16
jmp
fadds
xlat
xchg
fiadds
cli
test
add
lahf
push
nop
add
mov
addl
push
add
add
jl
shll
xchg
pusha
loopne
mov
int
lcall
xchg
stos
test
cmpsb
add
push
loopne
lret
add
add
hlt
lea
pop
sub
pop
rep
push
push
push
lea
push
push
push
lea
push
push
push
call
stos
jmp
test
pop
nop
push
mov
mov
mov
mov
iret
xchg
add
cmpsb
clc
add
mov
add
add
add
fstps
add
js
stos
add
add
retw
pop
cli
add
mov
loop
add
filds
add
imul
lods
popa
popl
lea
data16
pop
mov
add
push
push
push
lea
push
push
call
stc
push
mov
add
scas
add
add
xlat
fisttps
mov
add
pop
pop
lea
mov
push
add
popf
add
xchg
fmulp
add
notl
push
fwait
add
add
add
mov
movsb
add
pop
scas
push
add
mov
out
stos
add
add
pop
js
pusha
add
add
add
push
loopne
add
mov
pushf
fs
mov
adc
add
push
push
push
push
push
lea
push
push
push
call
add
data16
mov
mov
add
add
add
arpl
clc
lods
add
add
add
flds
movsl
jb
add
les
mov
fsubl
roll
add
add
add
add
add
mov
add
xchg
add
mov
add
add
lea
pop
add
push
push
push
push
push
push
lea
push
call
add
out
clc
into
add
in
imul
shll
sahf
pop
add
lahf
add
hlt
add
xchg
repnz
add
add
mov
add
mov
add
int
sarl
add
add
int3
andb
fcoms
mov
add
test
add
filds
movb
mov
add
add
mov
lea
pop
mov
xor
push
push
push
lea
push
call
add
stc
add
add
rcrb
add
fsubp
imul
add
pusha
mov
xchg
add
incb
push
mov
mov
add
pusha
pop
add
add
gs
add
add
add
cli
mov
add
mov
lock
scas
gs
loop
add
add
mov
movsl
sti
add
jl
lcall
mov
mov
lea
pop
mov
push
push
push
push
push
push
push
push
push
push
call
data16
add
xchg
add
jne
fcmove
push
add
mov
arpl
pop
mov
pop
add
add
clc
ja
jb
cmpsb
add
je
lea
add
add
jl
lahf
add
in
jp
push
mov
add
add
js
mov
add
push
lret
add
xchg
sahf
bound
add
jge
add
add
imul
int3
lea
pop
xor
push
push
push
push
push
call
pusha
add
add
pusha
mov
mov
xchg
shll
pusha
out
scas
add
add
push
add
push
fdivrp
lods
fidivs
add
test
jecxz
mov
add
add
mov
fildll
xchg
mov
add
add
mov
add
popa
sarl
push
in
ja
add
add
push
add
arpl
push
loope
mov
lea
pop
add
mov
xor
push
push
call
mov
add
loope
mov
loopne
add
in
add
add
pop
ljmp
add
aam
add
add
popf
pop
test
add
lcall
jnp
add
pushf
add
xchg
leave
popa
int
add
add
mov
add
jge
lahf
repnz
jno
jle
add
add
add
add
stos
mov
lea
pop
add
push
push
push
push
push
push
call
fcmovnbe
jns
icebp
out
imul
add
add
cltd
add
loop
imulb
roll
sub
imul
mov
add
aad
add
icebp
mov
add
fcmovnbe
loope
push
mov
lahf
mov
add
add
push
sub
icebp
loop
movsb
iret
add
mov
add
lds
into
add
out
cld
js
add
add
add
pop
mov
lea
pop
add
push
push
call
add
add
add
add
add
popl
les
repnz
add
add
aad
add
aam
int
add
add
popl
leave
insb
xchg
jbe
add
add
add
mov
add
add
add
mov
popf
test
cmpb
fadds
lods
addr16
or
fsubrs
dec
not
push
push
or
not
add
xor
sub
add
rol
pop
shr
pop
push
push
push
push
lea
push
push
push
push
call
arpl
add
gs
les
mov
cld
out
add
push
jae
mov
add
mov
testb
add
xchg
add
pop
add
add
clc
jle
loopne
outsl
stc
into
out
addl
lret
pop
push
test
add
fs
icebp
push
js
sti
add
addb
add
icebp
iret
mov
mov
fidivl
jmp
lea
pop
pushl
push
push
lea
push
push
lea
push
push
push
push
push
call
xchg
add
loop
in
icebp
add
add
out
jb
in
add
arpl
add
add
data16
mov
mov
sarl
pop
mov
jne
cli
push
add
jle
movl
add
nop
sti
test
fsts
pop
mov
iret
fdivrl
add
add
add
jae
sti
add
add
add
add
aam
bound
call
push
push
push
add
xor
not
push
xor
add
sub
sub
add
rol
pop
lea
add
pop
push
push
lea
push
call
push
clc
add
xlat
mov
std
add
popl
mov
mov
xlat
cld
loope
add
push
pop
add
add
call
mov
data16
add
mov
add
int3
clc
add
add
add
push
push
outsl
add
lock
js
bound
jo
add
add
lea
pop
push
push
push
push
push
push
lea
push
push
push
push
call
fildl
add
mov
in
in
out
mov
roll
mov
hlt
add
rolb
add
mov
push
jle
addb
test
push
cmpsb
add
xchg
lahf
cmpsl
add
clc
add
add
add
add
add
into
add
add
cmpsb
add
add
add
push
add
sbb
add
add
lea
pop
push
call
mov
push
push
push
lea
push
call
add
push
mov
cltd
in
add
ret
add
stos
add
push
mov
insb
add
add
push
inc
mov
lds
add
add
add
mov
out
mov
mov
hlt
add
test
orl
add
loope
lods
jae
mov
mov
push
xor
loopne
lcall
push
push
push
push
lea
push
push
push
push
lea
push
lea
push
push
call
add
hlt
lret
add
bound
jmp
aad
jb
xchg
lods
add
iret
cltd
fildll
mov
fcomps
test
insb
lret
scas
push
incb
pusha
pop
mov
movsb
jbe
add
add
leave
add
add
jecxz
js
popa
add
ljmp
enter
loop
add
add
add
add
add
add
mov
lea
pop
mov
push
push
lea
push
push
lea
push
lea
push
push
call
push
xchg
xlat
ffreep
cmpsb
loop
add
call
fidivrs
arpl
add
jge
mov
jmp
pusha
add
add
xchg
subb
jl
js
add
iret
test
shrl
add
cmpsl
add
lods
add
lods
add
rclb
in
mov
add
cli
fisttps
pop
add
add
add
push
lea
push
push
push
push
push
push
push
call
add
jae
add
add
add
enter
add
cmpl
xchg
add
leave
add
add
add
filds
add
add
add
stos
add
jmp
jge
add
addb
add
add
fimuls
imul
mov
jno
mov
add
cmc
lds
loop
pop
mov
lea
pop
mov
push
push
push
push
push
push
push
push
push
push
push
call
imul
outsl
shrb
add
add
movl
add
add
xchg
add
test
cld
add
mov
mov
xchg
xchg
pop
fiaddl
add
lahf
xchg
xchg
mov
add
outsl
mov
fcmove
cmc
stc
add
mov
cltd
stc
imul
mov
xlat
cmpsl
add
in
add
add
cld
lea
pop
xor
push
push
push
push
call
cwtl
add
add
jmp
cli
add
jmp
insb
push
movsl
cltd
add
pushf
xlat
mov
add
adc
add
add
mov
add
xlat
xchg
add
movsl
add
lea
add
mov
add
add
imul
add
lds
add
mov
mov
jp
xchg
into
in
mov
pop
add
add
push
push
push
push
call
ja
jnp
add
faddl
test
insb
add
stc
xchg
rcrb
test
call
mov
add
add
stos
add
call
pop
push
add
jmp
out
mov
fbstp
loopne
sub
pop
lods
add
add
lcall
lock
popf
iret
add
scas
add
xchg
add
pusha
in
mov
lea
pop
push
push
lea
push
call
test
imul
add
add
test
jne
lea
add
jl
jo
add
add
add
jb
aad
cltd
add
add
add
cmpsl
mov
lods
jns
add
nop
add
outsl
add
jge
add
fcmovnbe
xchg
add
mov
lret
in
add
mov
lea
pop
mov
push
push
push
push
push
push
push
lea
push
push
lea
push
call
sahf
add
std
add
add
add
lcall
in
add
mov
add
roll
add
je
add
add
pusha
add
popa
mov
int
push
xchg
mov
add
xchg
addb
mov
in
xchg
add
pop
loope
add
fiaddl
pusha
add
push
add
add
add
mov
shl
xchg
mov
lea
pop
xor
push
push
push
push
push
push
push
lea
push
call
mov
add
imulb
add
ljmp
clc
je
cwtl
mov
add
xlat
add
pop
jae
xchg
add
add
add
push
lds
pop
add
add
test
add
stos
arpl
scas
mov
lret
bound
stc
lods
add
out
jge
add
ljmp
imul
mov
lea
pop
add
push
push
push
lea
push
call
add
stos
incb
cmpsl
add
pusha
add
add
jns
test
add
loop
addr16
je
add
sahf
push
add
add
stos
add
cwtl
add
add
out
add
call
aad
lods
pop
add
add
push
add
add
movsb
add
out
add
mov
jmp
add
add
imul
stos
add
push
pusha
adc
lock
push
push
push
push
call
into
add
add
arpl
clc
add
add
out
add
mov
xchg
addb
add
fs
mov
gs
add
add
fxch
mov
jl
add
lret
fiadds
jns
orl
add
loop
add
cltd
add
add
add
push
insb
in
call
ljmp
mov
lea
pop
pop
mov
xor
push
push
lea
push
push
push
push
push
call
add
add
jl
add
add
mov
mov
add
pusha
push
ja
pop
in
add
in
je
add
add
add
in
stc
mov
add
in
fadds
add
add
idiv
int3
lods
std
std
jae
roll
add
pop
ljmp
push
add
rolb
mov
add
je
jbe
out
mov
add
add
mov
lea
pop
rep
push
push
call
hlt
add
xlat
iret
cmpsb
repnz
aad
add
add
mov
scas
add
add
mov
lock
scas
add
add
add
jnp
cli
add
imul
add
rol
add
addb
xchg
add
mov
popa
add
add
roll
add
xchg
arpl
add
aad
mov
lea
pop
mov
push
push
push
lea
push
call
hlt
add
lds
in
add
add
add
repnz
mov
add
add
outsl
out
fs
add
mov
push
mov
pop
add
mov
incb
add
mov
push
push
add
xchg
add
pusha
sti
fs
push
mov
jno
push
add
sahf
out
pop
lock
neg
add
push
lods
in
pushf
jb
fmull
or
push
push
push
call
rclb
push
lea
add
add
add
add
add
add
add
mov
cltd
shl
in
add
ror
rol
push
add
add
roll
add
jb
add
jnp
add
js
xchg
aad
jecxz
mov
add
add
jle
add
mov
pusha
aad
add
stos
fcomps
push
testl
add
jbe
ljmp
arpl
mov
add
mov
lea
pop
add
or
je
push
dec
pop
mov
xor
push
add
lea
rol
pop
mov
xor
push
rol
add
pop
add
add
push
not
pop
push
push
push
push
push
call
popf
push
add
fimuls
add
out
add
jno
into
add
push
add
add
ja
cli
ficoml
fwait
cmpb
add
lea
lock
add
jno
pushf
add
add
xchg
movsl
cld
test
fiadds
test
nop
fadds
push
fistl
add
stos
lods
add
push
imul
add
add
mov
lea
pop
mov
xor
push
sub
ror
pop
add
pop
rep
push
sub
pop
mov
xor
push
push
lea
push
push
push
push
call
add
add
movsb
jbe
mov
push
cmpsb
aad
add
std
mov
mov
imul
add
mov
jecxz
xchg
add
add
roll
lds
jnp
ret
faddl
add
add
xchg
ljmp
add
int3
enter
add
jo
bound
push
mov
add
add
scas
lcall
pushf
mov
lea
pop
or
je
push
push
lea
push
push
call
mov
add
add
fdivrp
add
repnz
add
mov
mov
fsub
jle
add
cwtl
flds
mov
mov
pushf
add
jl
add
cwtl
push
addr16
add
int3
test
insb
add
out
cltd
add
mov
add
ror
mov
js
add
mov
xchg
mov
mov
shrl
pusha
adc
repz
push
lea
push
push
push
push
lea
push
push
push
call
add
push
add
pop
cmpsb
pop
stos
cli
add
add
jb
arpl
cli
leave
addb
loope
lahf
pusha
mov
add
add
add
stos
add
add
add
lret
xlat
cmpsb
add
js
loopne
add
pushf
sti
test
iret
scas
loopne
mov
pop
ljmp
lea
pop
add
add
rep
push
push
lea
push
lea
push
lea
push
call
clc
jae
add
mov
stos
arpl
add
add
add
add
add
rcl
lahf
in
mov
movsb
add
push
xchg
addl
add
lods
add
jecxz
insb
je
add
add
xlat
add
add
rolb
mov
xchg
add
mov
lea
pop
pop
push
push
dec
push
xor
add
add
not
sub
sub
ror
xor
ror
pop
pop
pop
push
push
push
lea
push
lea
push
push
call
jecxz
mov
mov
add
add
jae
add
fsts
mov
ja
aam
add
add
rcrb
shll
cwtl
add
add
add
add
add
add
add
movsl
stos
jno
mov
jae
mov
adcl
add
add
add
add
pop
mov
push
inc
rol
pop
mov
push
add
pop
mov
push
push
push
lea
push
push
push
push
call
lcall
call
add
fsubs
je
mov
fiadds
mov
add
mov
add
add
sar
mov
lds
jecxz
lahf
fadds
add
add
jl
mov
lcall
movsl
add
add
add
lahf
fwait
mov
mov
mov
lea
pop
jmp
push
lea
push
push
call
add
imul
xchg
mov
add
mov
add
add
cmc
add
add
jmp
add
add
add
js
mov
xchg
fwait
mov
add
test
add
mov
aam
out
add
add
add
add
icebp
frstor
mov
pop
pop
push
add
add
pop
push
mov
add
push
ror
dec
pop
push
push
push
ror
pop
push
push
shl
pop
push
mov
push
not
not
pop
pop
pop
pop
push
push
push
push
push
push
push
push
push
lea
push
call
add
les
lret
loop
shr
mov
out
add
cmpsb
add
add
add
ret
lahf
add
mov
pop
leave
popa
jbe
jbe
lods
add
les
std
repnz
movsl
jne
into
imul
in
mov
mov
stos
roll
mov
mov
lret
stc
add
push
add
iret
add
fldt
xchg
pop
mov
mov
lea
pop
pop
leave
push
add
pop
ret
push
sub
sub
rol
pop
push
push
push
push
push
push
push
push
push
lea
push
push
call
add
mov
sti
add
add
add
arpl
mull
mov
pop
add
mov
pop
add
pop
add
mov
push
xchg
lcall
enter
add
loop
add
int3
lock
add
roll
add
fisubs
leave
lods
mov
add
jbe
push
xchg
lahf
xchg
ljmp
test
hlt
test
popa
sub
in
push
add
add
pop
add
push
push
push
push
call
add
scas
in
add
gs
scas
loop
nop
add
xchg
rolb
add
add
push
leave
cmpl
add
outsl
int3
push
push
add
add
add
add
xchg
mov
ficoml
mov
out
lret
add
std
mov
add
add
lock
int
int
xchg
add
add
add
test
cmpsl
arpl
lea
pop
push
push
shr
pop
push
push
ror
inc
inc
not
pop
push
push
push
lea
push
call
test
out
imul
ret
in
add
jge
push
add
add
mov
add
add
mov
jb
data16
lods
rcll
add
add
mov
pop
mov
addl
add
pop
xchg
add
pop
sti
nop
movsb
add
into
add
add
aam
bound
push
push
push
push
push
push
push
push
call
enter
add
xlat
xchg
jp
lods
stos
add
popl
movsb
xchg
lret
sahf
nop
fwait
jae
add
add
add
add
add
jecxz
in
fcmovb
add
add
shlb
cmpl
ljmp
add
add
mov
movsb
xchg
pop
push
std
mov
lea
pop
movl
addl
test
je
push
shr
rol
pop
mov
push
rol
add
rol
pop
pop
pop
push
push
push
lea
push
push
push
lea
push
push
push
push
call
add
add
add
mov
arpl
add
jecxz
add
pop
stos
pop
out
add
add
and
loop
add
xchg
flds
lret
ja
add
cmc
add
jp
add
jae
icebp
fisubl
pop
ja
add
leave
insb
pusha
add
add
js
lret
xorl
add
add
xchg
popf
xchg
add
add
push
test
aam
bound
pop
pop
push
inc
pop
pop
push
lea
push
push
lea
push
push
call
add
add
jmp
add
add
add
jns
aam
popl
add
add
in
add
mov
jb
icebp
add
add
lea
xchg
test
add
add
add
mov
jmp
in
mov
add
push
rclb
imull
int
add
std
out
mov
xchg
add
call
mov
lea
pop
leave
push
push
push
push
push
push
push
push
call
mov
sarb
jo
pop
add
jo
repnz
lret
pop
test
add
bound
mov
add
pop
icebp
add
insb
jae
add
fcmove
lods
loopne
pop
add
cli
jae
ja
add
add
pop
imul
add
add
lods
in
fwait
js
pop
push
jo
addr16
lea
pop
ret
push
push
lea
push
push
push
push
lea
push
call
jle
push
je
enter
mov
imul
add
add
in
add
lds
add
xchg
jle
add
repnz
add
add
roll
add
bound
lret
fucomi
xchg
add
xchg
add
mov
add
roll
mov
cmc
add
jge
add
popa
mov
add
std
add
mov
lea
pop
mov
add
push
push
shr
not
pop
push
push
push
call
mov
lahf
jo
mov
cld
pusha
fcomps
mov
mov
add
icebp
pop
notl
xchg
add
call
jge
iret
sbbb
fdivrl
add
sahf
loope
bound
lret
fiaddl
add
hlt
mov
add
sahf
mov
add
pushf
add
lods
call
add
filds
xlat
adcl
data16
push
push
add
rol
dec
pop
testl
addl
push
push
push
lea
push
push
push
call
add
add
faddl
cltd
add
xchg
test
lods
data16
pop
add
movsl
jle
mov
add
add
addl
lock
ljmp
add
mov
push
add
add
push
loop
add
jle
andb
jle
in
outsl
fiaddl
cwtl
mov
add
add
add
add
add
pop
push
call
push
shr
pop
mov
pushl
push
add
xor
pop
push
push
push
sub
not
shl
pop
call
push
sub
inc
sub
pop
cmpl
jne
pop
pop
push
shl
pop
pop
push
push
push
push
push
lea
push
push
push
push
push
call
popf
gs
cli
movsb
scas
add
popa
or
test
aam
imul
mov
pop
test
loope
movsl
lods
add
shlb
pop
scas
mov
jp
add
jl
fcomip
testl
js
xchg
jns
lret
xlat
add
loopne
add
add
mov
add
sub
push
ror
inc
lea
pop
leave
push
lea
push
push
lea
push
push
push
push
push
push
push
call
lret
push
bnd
add
mov
add
xchg
add
add
pop
mov
add
mov
add
test
mov
ljmp
mov
cmc
mov
add
hlt
add
add
test
fldl
push
add
repnz
sti
mov
test
fwait
jb
jb
loope
mov
lods
imul
add
push
push
xor
dec
pop
mov
add
push
push
shr
pop
push
push
sub
lea
ror
sub
pop
push
push
lea
push
push
push
push
call
add
aam
add
add
js
jo
mov
mov
sti
pop
cld
add
test
add
jae
add
mov
mov
jecxz
add
add
mov
add
add
addr16
push
fimuls
pop
movsb
add
fincstp
pop
loopne
mov
leave
add
pop
push
movl
push
push
lea
push
call
xorl
add
fucomp
in
nop
mov
add
rcrl
add
mov
mov
andb
xchg
test
out
add
mov
add
gs
fiaddl
in
add
mov
scas
jnp
add
add
out
xchg
push
mov
lea
pop
call
push
call
push
pop
subl
cmpl
jne
pop
push
ror
xor
inc
pop
pop
pop
push
push
push
push
lea
push
push
push
call
ja
hlt
jns
add
cwtl
pop
add
fldl
xchg
add
add
loope
scas
cmc
add
lahf
ficomps
add
cmc
in
mov
popf
add
add
add
push
test
add
pop
add
mov
fidivs
add
call
imul
add
xchg
lcall
add
mov
add
pop
out
push
les
leave
ret
push
ror
lea
pop
push
mov
push
inc
add
pop
add
push
push
push
push
push
push
call
add
add
cmpsl
jo
shlb
add
mov
xchg
jmp
add
add
add
data16
add
mov
mov
fildl
mov
add
imul
mov
mov
out
push
pushf
push
mov
mov
mov
imul
add
outsl
nop
add
lods
lcall
test
int
mov
arpl
add
mov
lea
pop
push
push
push
push
push
lea
push
push
lea
push
call
add
add
aad
leave
out
add
add
xchg
lock
pop
sar
leave
test
aam
cmpsb
add
iret
pop
sahf
je
loopne
mov
movsb
push
xlat
pushf
jo
mov
add
add
add
add
cwtl
loope
add
add
lret
ret
add
push
add
movsl
push
xchg
mov
lock
cwtl
jle
out
jge
cld
lea
pop
mov
push
push
lea
push
lea
push
push
lea
push
push
call
pop
loopne
sti
fwait
aad
test
mov
mov
ljmp
add
jecxz
add
ret
mov
xchg
add
aad
add
rcl
loopne
add
aad
mov
add
in
fiadds
push
rclb
out
xchg
xchg
add
add
add
inc
jl
add
jecxz
imul
add
fmull
inc
cmp
call
push
push
push
push
push
push
call
xchg
jmp
add
xchg
jno
cltd
add
ret
add
add
test
cltd
add
out
xlat
mov
nop
add
add
je
mov
add
mov
mov
fcomip
aad
push
cmc
push
addb
xchg
in
add
add
add
pop
add
movsb
add
mov
lea
pop
shr
push
inc
shl
pop
add
mov
mov
push
push
push
push
lea
push
push
call
cmc
loopne
jecxz
sti
add
push
loope
push
pop
mov
add
add
add
add
add
mov
mov
add
lret
pop
xchg
les
movsl
add
add
jns
lods
andb
movsl
cwtl
add
jge
add
push
lock
pop
rolb
popa
pop
add
add
stos
pop
insb
repnz
jmp
arpl
add
mov
in
add
hlt
lea
pop
add
push
push
lea
push
push
lea
push
push
lea
push
push
call
stos
cmc
loopne
push
movsb
add
fsubrs
add
mov
add
add
add
pop
add
mov
cli
xchg
add
add
mov
fldl
push
pop
jecxz
jl
add
xchg
add
push
add
add
lret
fwait
add
add
add
add
outsl
cwtl
int
mov
xchg
add
aam
bound
pop
add
mov
mov
push
lea
push
push
call
test
add
mov
into
mov
xchg
xchg
add
divb
add
xchg
jl
add
lret
add
add
jmp
pop
add
add
cmpsl
add
add
jmp
test
mov
jo
add
addb
jp
lods
add
lret
je
add
add
pop
pop
add
call
mov
bound
cmp
jne
push
lea
rol
pop
cmp
jne
push
push
push
lea
push
push
call
add
loope
cltd
pop
out
add
xchg
jge
add
fbld
mov
add
outsl
les
jmp
data16
add
in
out
mov
mov
andl
xchg
enter
add
movb
int
add
mov
xchg
jns
in
cmc
imul
roll
adc
mov
push
xor
xor
pop
movl
push
push
lea
push
lea
push
push
lea
push
push
push
push
push
call
jp
stos
bound
in
add
add
popa
lret
add
test
mov
sbbl
cwtl
jge
lds
cwtl
add
xor
jmp
hlt
add
add
insb
add
mov
imul
push
pop
lcall
testl
int3
lea
pop
jmp
push
push
push
push
push
push
push
push
push
call
icebp
cwtl
stos
push
add
in
rolb
pop
add
cltd
add
add
fwait
pop
add
pop
jne
add
push
add
add
int
add
add
clc
lcall
add
out
lret
add
iret
add
add
add
into
jl
rcr
lods
filds
cmpsb
clc
add
iret
add
scas
rolb
aad
cli
lret
les
test
add
stos
mov
lea
pop
mov
mov
push
xor
shr
pop
sub
jne
push
pop
mov
movl
jmp
push
add
pop
mov
push
sub
pop
mov
push
add
add
pop
cmp
jne
push
shr
shr
lea
pop
mov
movl
push
push
push
push
push
push
push
push
push
call
add
add
pop
out
xchg
in
xchg
out
movsl
add
add
pop
outsl
arpl
add
rclb
mov
test
pop
mov
add
faddl
push
pop
cli
lock
xchg
add
out
add
fists
lcall
mov
pop
jo
cltd
add
mov
fisubrl
xlat
xlat
lods
testb
mov
push
fisubl
xlat
cld
loope
hlt
lea
pop
jmp
mov
push
lea
push
push
push
push
push
push
call
in
add
push
add
add
add
cli
add
xchg
add
xchg
add
pop
int
mov
jle
add
roll
in
add
mov
lcall
mov
add
mov
rcrb
add
add
imul
test
add
add
add
xchg
add
lods
pop
mov
add
sar
fmull
cmpl
jne
mov
movl
push
push
push
push
push
push
push
call
jno
add
add
into
clc
add
add
mov
iret
add
add
add
ja
add
scas
jl
js
rcl
push
testl
adcl
add
cmpsl
pushf
add
pop
mov
add
fldl
mov
add
add
pop
add
lahf
mov
les
push
fmull
decl
add
pushl
pop
push
inc
dec
pop
mov
mov
mov
push
push
sub
push
xor
add
inc
xor
sub
not
pop
rol
pop
push
shr
dec
pop
push
call
cmpl
je
push
push
ror
push
sub
add
inc
dec
rol
sub
sub
add
shr
pop
shl
pop
push
push
push
push
push
lea
push
lea
push
push
push
push
call
lea
lahf
pop
roll
je
test
scas
xchg
add
add
div
add
add
in
xchg
add
fdiv
xchg
sarl
mov
mov
mov
add
pop
pusha
sar
jae
jp
idivb
push
icebp
pushf
cmpsl
les
jle
fwait
stc
add
push
stos
add
cld
out
pushf
add
roll
add
xchg
clc
mov
lea
pop
push
call
push
shr
add
pop
cmpl
je
push
push
sub
xor
shr
push
and
add
sub
not
sub
pop
ror
pop
push
push
lea
push
push
call
filds
add
add
add
jbe
pusha
test
pop
push
mov
rcr
add
add
cli
add
lods
add
scas
add
icebp
in
test
leave
mov
mov
mov
mov
add
mov
cltd
stc
jge
mov
mov
add
adcl
pop
push
call
cmpl
je
push
push
ror
shl
lea
push
push
pop
add
dec
add
sub
add
sub
pop
sub
shl
pop
push
xor
pop
push
push
xor
sub
rol
add
pop
call
cmpl
je
push
push
lea
sub
push
sub
add
sub
sub
ror
pop
inc
lea
pop
push
add
lea
pop
push
push
lea
push
lea
push
push
push
push
push
push
push
push
call
addr16
add
mov
mov
fadds
jmp
test
clc
shlb
add
addr16
lods
jae
pushf
add
xlat
add
add
mov
in
xlat
add
mov
mov
add
cwtl
out
push
mov
add
add
int
mov
add
outsl
mov
fnstenv
jle
jns
pop
add
push
out
add
jb
xchg
imul
aam
bound
pop
call
push
sub
ror
sub
dec
pop
cmpl
je
push
push
add
shr
inc
shr
push
push
pop
add
sub
sub
rol
not
sub
shl
shr
pop
rol
rol
pop
push
push
lea
pop
call
cmpl
je
push
push
ror
push
or
inc
add
xor
sub
sub
pop
sub
add
ror
pop
push
push
lea
push
call
add
add
add
add
repnz
jbe
fildl
js
outsl
enter
stos
jmp
add
out
pop
add
jo
xchg
add
jb
add
jle
add
jns
add
xchg
add
mov
idivl
scas
movsl
xchg
add
mov
add
add
mov
add
add
fiaddl
add
add
xchg
add
pop
test
add
xchg
aam
jl
les
call
cmpl
je
push
push
not
dec
push
and
add
xor
ror
add
shl
sub
add
pop
xor
lea
inc
pop
push
push
push
lea
push
push
lea
push
lea
push
call
clc
insb
add
add
add
mov
add
add
add
add
jmp
fdivr
push
in
xchg
scas
add
add
add
andb
jns
add
lods
add
add
mov
add
add
jo
ljmp
sarb
fcomps
add
add
add
xchg
mov
lea
pop
push
push
sub
pop
call
push
dec
pop
cmpl
je
push
push
dec
sub
push
push
pop
add
shr
shl
sub
ror
ror
not
pop
lea
inc
rol
pop
push
push
add
shl
add
pop
call
push
sub
pop
cmpl
je
push
push
add
add
push
push
pop
add
xor
sub
shr
sub
dec
pop
rol
pop
push
push
lea
add
inc
pop
call
cmpl
je
push
push
sub
shr
add
lea
push
xor
add
ror
xor
sub
not
inc
pop
dec
dec
pop
push
xor
pop
push
call
push
push
lea
push
push
push
push
push
push
push
push
call
xchg
iret
add
scas
repnz
fsubl
loope
add
add
cmc
pop
add
lods
add
add
fwait
pop
test
arpl
movsb
lcall
add
jne
add
lods
xchg
add
add
add
add
in
mov
in
add
mov
ret
add
xchg
fwait
imul
push
repnz
pop
mov
mov
lea
pop
cmpl
je
push
push
sub
inc
xor
push
or
not
add
rol
sub
sub
inc
sub
pop
sub
xor
add
pop
push
push
push
push
lea
push
push
lea
push
call
mov
add
lds
jmp
fildl
divb
add
shrb
push
add
add
lock
les
add
add
addr16
add
jae
mov
add
outsl
mov
xchg
push
add
jecxz
add
imul
add
add
lea
pop
call
push
add
pop
cmpl
je
push
push
sub
add
push
xor
add
ror
sub
ror
pop
add
add
pop
push
push
lea
shl
shl
add
pop
call
cmpl
jne
mov
push
lea
push
push
push
push
lea
push
push
lea
push
call
add
out
pop
lods
add
or
flds
add
fs
add
cmpsl
add
popa
jo
push
add
mov
mov
fldl
push
mov
add
mov
popf
pop
jb
test
stc
test
stc
jne
push
add
mov
mov
mov
add
add
iret
flds
ja
out
mov
add
add
mov
lea
pop
movl
jmp
push
push
lea
push
call
jbe
sti
add
xchg
fwait
rcr
add
push
call
addl
add
add
fnstcw
xchg
out
les
add
add
fistl
add
jp
ficompl
mov
imul
mov
test
add
pop
leave
add
add
lret
add
adc
mov
lods
scas
hlt
mov
pop
add
add
add
stos
roll
jmp
lea
pop
xor
pop
push
shl
inc
pop
pop
pop
pop
push
rol
sub
pop
leave
ret
push
not
lea
pop
push
mov
push
shl
pop
add
push
sub
add
pop
cmpl
jne
push
push
rol
dec
xor
push
and
add
add
sub
xor
not
shl
not
pop
ror
shl
not
lea
pop
push
ror
ror
pop
pushl
push
ror
sub
not
pop
call
push
sub
add
lea
inc
pop
push
push
push
lea
push
lea
push
push
call
add
add
add
add
add
add
out
push
mov
fimull
sarl
loope
add
add
pop
xchg
fcoms
aad
add
mov
xchg
pop
lahf
jns
mov
add
aam
js
sahf
pop
xchg
jl
popa
loop
test
add
fwait
shl
ret
je
fwait
add
add
test
push
mov
fidivs
adc
call
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
lcall
std
mov
lods
aad
push
mov
add
into
cld
add
lea
or
jge
add
ret
into
add
fiaddl
jb
add
push
jae
add
add
add
fcompl
fs
add
icebp
mov
push
add
lcall
mov
popa
push
mov
lea
pop
jmp
push
add
shl
sub
pop
cmpl
je
cmpl
jne
push
xor
ror
add
pop
leave
push
dec
pop
add
push
lea
sub
pop
pop
push
lea
push
push
push
lea
push
lea
push
call
add
arpl
add
mov
add
repnz
hlt
jnp
cld
push
add
pop
add
add
jl
cmc
pop
mov
mov
std
fnstsw
add
add
add
add
fistps
lret
subb
add
mov
push
add
mov
mov
add
add
gs
scas
add
mov
addl
add
add
pop
pop
push
rol
add
xor
pop
pop
pop
push
lea
pop
leave
push
lea
push
lea
push
push
push
push
call
ffree
fldl
mov
lea
mov
push
pushf
pop
add
cli
add
add
jge
lock
aam
cld
add
enter
mov
add
add
rolb
add
pusha
gs
jge
fucomp
add
in
push
ljmp
lahf
addb
add
add
pop
ljmp
push
add
add
add
pop
add
ret
jmp
push
lea
push
push
push
push
lea
push
push
call
call
pop
add
xchg
add
xchg
cmpsl
add
add
xchg
push
fldl
stos
cld
cmc
flds
pop
push
add
add
add
add
add
add
in
mov
popa
add
add
add
mov
jle
mov
pop
add
add
push
mov
mov
add
into
add
js
clc
stc
push
add
cwtl
mov
cli
add
add
mov
lea
pop
cmpl
jne
push
push
add
push
push
pop
add
sub
sub
sub
shl
rol
pop
not
not
pop
pushl
push
lea
push
lea
push
push
push
push
lea
push
lea
push
push
call
add
mov
mov
xchg
test
test
push
rolb
data16
lret
arpl
mov
add
mov
add
add
in
xchg
lahf
xchg
test
imul
clc
out
add
xchg
push
stos
addr16
loopne
leave
add
push
sti
jae
sti
add
mov
jno
fcom
leave
cli
jge
filds
add
scas
add
add
mov
add
scas
stos
pop
add
pop
call
push
push
push
call
add
add
stos
add
push
lds
add
add
mov
xchg
lret
add
add
fists
mov
negl
mov
gs
xchg
leave
shl
add
xchg
push
add
add
lahf
mov
add
pushf
cltd
test
xchg
add
loope
loope
add
addl
mov
lea
pop
call
push
push
push
push
lea
push
push
push
push
push
call
add
insb
ret
cwtl
test
xchg
in
repnz
pusha
insb
pop
roll
add
add
hlt
fldl
add
add
add
out
rolb
int3
loope
rolb
stos
pop
add
roll
jecxz
insb
loop
add
add
add
add
add
add
fwait
add
xchg
loopne
add
jle
fwait
mov
add
push
add
shlb
pop
mov
out
add
pop
jmp
cmpl
jne
push
xor
xor
ror
not
pop
mov
push
push
push
push
push
push
push
push
push
lea
push
call
mov
pusha
push
add
mov
mov
jbe
xchg
jns
add
add
add
xorb
mov
add
jns
cli
mov
add
push
mov
sarl
xchg
add
call
add
loope
add
add
add
sahf
add
add
push
out
push
in
fildll
add
les
add
add
addb
scas
mov
mov
lea
pop
mov
push
push
call
add
add
add
add
add
add
mov
clc
movsl
add
lods
add
add
push
add
add
jo
mov
test
mov
fsubrl
ljmp
lahf
add
fldl
mov
jmp
loope
lock
stos
cmpsl
add
add
addb
xchg
mov
in
stos
add
add
lea
pop
jmp
push
push
call
stos
movb
add
mov
fwait
add
add
mov
pop
add
push
mov
add
jno
insb
add
add
rcr
mov
add
mov
add
add
popa
lea
add
mov
pop
add
cltd
add
jle
rorl
add
push
push
jns
add
add
addr16
nop
in
fadds
add
int3
lea
pop
push
push
push
push
push
push
lea
push
lea
push
call
mov
stc
add
scas
insb
mov
jle
int
in
flds
push
lret
sahf
add
ret
push
test
add
add
lods
imulb
push
add
mov
into
jle
icebp
mov
shl
insb
jae
out
add
mov
add
cld
into
add
add
push
pop
add
in
pop
add
jmp
push
add
repnz
mov
mov
pop
hlt
mov
sbb
pop
dec
jne
call
push
push
push
lea
push
push
push
push
call
pop
clc
ljmp
loopne
addl
add
test
add
add
add
add
js
lods
xchg
add
pop
mov
pop
lock
cld
jmp
add
popf
add
popa
cltd
add
pusha
fildl
mov
hlt
mov
jl
mov
add
xchg
add
in
jle
jae
xlat
into
mov
lea
pop
jmp
push
push
push
push
push
push
lea
push
lea
push
call
mov
add
mov
add
add
add
add
add
add
lds
data16
mov
add
cmpsb
add
mov
filds
lods
add
scas
add
loop
pop
add
push
cmc
add
test
add
mov
add
roll
fwait
stos
movsl
add
mov
mov
lea
pop
call
push
push
sub
not
push
or
inc
add
lea
sub
dec
sub
sub
pop
lea
pop
push
ror
sub
pop
pushl
call
push
add
xor
inc
pop
push
call
push
ror
xor
not
sub
pop
mov
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
add
add
add
push
add
add
mov
jecxz
add
cltd
aam
cld
leave
add
cwtl
add
add
add
mov
jns
test
push
ja
add
mov
hlt
add
imul
add
movsb
add
ror
shl
stos
imul
roll
mov
ret
cmc
add
add
gs
mov
xchg
add
add
add
add
add
push
mov
add
mov
lea
pop
lea
push
push
add
rol
shr
rol
push
or
not
add
sub
sub
shl
pop
inc
dec
ror
rol
pop
pushl
push
sub
ror
pop
call
push
call
push
push
dec
lea
inc
push
xor
add
xor
shl
sub
lea
add
pop
sub
pop
push
push
lea
push
push
push
lea
push
push
push
lea
push
lea
push
call
rolb
ljmp
fidivs
cli
lret
jl
xchg
add
mov
add
stos
movsb
add
add
stos
mov
cld
cmp
lods
lret
add
mov
add
add
add
in
add
clc
add
add
add
mov
mov
clc
add
int
add
out
mov
out
sahf
add
push
mov
add
addl
popa
sub
jne
push
push
lea
push
push
push
push
push
call
arpl
add
mov
fs
add
ret
in
out
add
lcall
mov
mov
add
sti
add
mov
jns
popa
aad
pop
add
xchg
outsl
rcrb
fildl
sahf
add
push
int
lahf
loopne
in
xchg
mov
add
add
add
lods
push
add
mov
sbb
call
call
mov
push
sub
pop
lea
push
push
inc
lea
push
and
add
lea
rol
sub
not
add
xor
pop
lea
pop
push
add
not
rol
pop
pushl
push
push
push
push
push
push
push
push
push
push
call
add
jmp
add
add
jecxz
add
loop
add
add
jl
mov
test
mov
ja
add
xchg
add
add
loop
in
add
addl
mov
xchg
add
push
call
pop
lea
add
add
icebp
mov
pop
xchg
gs
jp
add
movsb
jns
cld
lea
pop
call
push
push
push
push
push
lea
push
lea
push
push
push
push
call
test
pusha
mov
push
add
add
aam
fiadds
add
add
add
fs
enter
in
jns
add
add
add
add
push
add
mov
iret
add
out
mov
cld
int
add
pop
add
add
push
movsl
roll
add
lcall
lea
pop
lea
push
not
ror
pop
push
push
add
pop
push
push
lea
rol
lea
add
pop
push
push
inc
rol
shl
dec
pop
pushl
push
push
shl
sub
push
sub
add
inc
sub
sub
pop
ror
rol
xor
pop
push
push
push
push
lea
push
call
clc
add
add
rcrb
push
cld
add
add
add
add
jae
lahf
int3
add
nop
add
ja
add
popa
add
iret
mov
mov
jne
add
add
jle
add
js
jns
divb
add
xchg
imul
add
mov
lea
pop
push
call
push
push
ror
sub
sub
not
push
sub
add
shl
xor
inc
shr
sub
xor
pop
add
not
not
pop
push
push
push
lea
push
push
call
add
notb
cmpsb
add
add
sti
imul
fs
out
add
add
popa
add
lahf
add
bound
add
out
add
jae
xchg
insb
add
movb
gs
add
add
loop
mov
add
movsb
push
mov
shll
mov
fildl
add
outsl
add
add
hlt
add
scas
xchg
pop
movsb
fwait
jmp
addl
mov
lea
pop
pushl
push
push
lea
push
lea
push
push
push
push
push
call
jmp
add
push
push
out
popf
pop
push
js
mov
add
mov
mov
add
test
add
push
cld
popa
js
add
add
add
mov
push
addl
flds
add
add
pushf
pop
insb
add
mov
loop
add
add
add
add
mov
mov
mul
out
mov
lea
pop
call
push
call
push
push
ror
add
push
and
add
lea
inc
shr
sub
inc
not
pop
add
sub
pop
push
push
lea
push
lea
push
push
lea
push
call
add
add
push
enter
fiaddl
xchg
arpl
add
add
add
leave
imul
hlt
jge
add
mov
add
int
mov
movsb
jl
jmp
xchg
xorl
add
mov
add
lock
popa
add
add
add
add
xchg
enter
lea
pop
pushl
push
push
lea
push
push
push
lea
push
push
push
push
call
std
movsl
add
lods
popf
push
add
add
fs
mov
mov
add
add
in
loopne
add
adc
mov
pop
xchg
push
lds
mov
loope
mov
enter
lcall
gs
adc
test
ja
int3
add
xchg
add
add
test
std
fdivs
add
pop
call
call
jmp
push
push
push
push
push
call
add
cltd
ja
out
int
enter
jmp
test
push
add
jmp
push
js
cwtl
stos
add
mov
xchg
add
cltd
filds
add
add
ror
mov
shr
add
jbe
jl
add
cli
jno
jmp
add
add
add
lret
jb
jecxz
mov
add
add
add
add
je
add
into
ret
addl
rorb
pop
pushl
push
xor
shl
shr
pop
mov
push
inc
ror
pop
jmp
push
push
ror
sub
rol
ror
push
push
pop
add
add
sub
xor
add
sub
xor
inc
not
pop
sub
shl
add
pop
push
sub
pop
pushl
push
shr
lea
pop
call
push
push
push
push
push
push
push
push
push
call
shrb
push
arpl
mov
enter
jl
add
mov
into
add
push
movsb
add
mov
add
add
movsl
testl
lcall
add
add
testb
add
orb
add
add
cld
lock
movsb
add
mov
lea
pop
push
call
push
push
sub
push
xor
add
add
dec
sub
inc
add
pop
add
pop
push
push
lea
push
lea
push
push
push
push
push
lea
push
call
add
mov
pop
add
iret
push
cli
mov
nop
test
test
mov
add
lret
mov
add
addl
push
cld
cwtl
add
push
bound
rcl
xchg
add
jp
push
into
add
iret
imul
bound
divb
add
add
sahf
mov
add
pop
mov
add
mov
lea
pop
pushl
call
push
push
pop
call
push
shl
inc
xor
pop
leave
push
push
call
testl
scas
mov
lcall
add
xchg
pop
add
add
jmp
add
fcmovu
stos
add
mov
add
add
add
test
rcrb
in
pop
xchg
add
add
imul
outsl
mov
lea
pop
add
pop
pop
push
push
lea
push
call
add
push
in
add
mov
cld
xchg
scas
add
mov
pushf
mov
loop
mov
push
arpl
add
pop
mov
sti
clc
add
add
out
add
add
aam
lods
add
loopne
pop
fnstcw
xchg
std
add
rorl
into
pop
out
xchg
add
mov
add
fwait
add
cmpsb
sahf
int3
les
lea
pop
pop
pop
leave
push
xor
pop
add
ret
push
push
push
lea
push
push
lea
push
call
cld
add
fimull
movsl
shr
pushf
int3
fldl
mov
insb
out
pop
jns
add
push
scas
xlat
add
add
add
add
aam
mov
add
add
add
imul
add
scas
add
std
mov
out
fistps
add
pop
add
test
addl
std
cmc
movsb
xchg
mov
lea
pop
leave
push
dec
shr
pop
ret
push
mov
push
push
push
push
call
mov
add
popa
add
add
add
add
add
jbe
push
mov
mov
add
cld
add
jne
add
add
add
lods
jo
fildll
in
cmc
call
jge
jne
mov
lcall
add
add
jmp
popf
out
add
add
popa
arpl
mov
add
cmpsb
jno
insb
add
push
add
push
popa
adc
jge
add
test
add
add
push
push
push
push
call
xchg
insb
pop
aam
add
leave
xlat
insb
add
enter
add
add
add
mov
add
into
add
js
push
add
cmpsb
movsl
add
fxch
test
mov
add
test
mov
add
push
fsubrp
add
lds
add
push
hlt
add
add
xchg
add
jp
add
mov
lea
pop
mov
push
push
push
push
call
mov
jle
jecxz
test
mov
test
xchg
mov
mov
test
add
lods
into
loope
imul
pushf
iret
add
pop
add
add
mov
add
xchg
add
movb
push
lds
add
mov
fnsave
clc
into
imul
rolb
xchg
jl
mov
mov
lea
pop
jmp
push
rol
rol
pop
mov
and
push
push
push
lea
push
push
call
pop
stos
imul
add
add
add
test
add
jae
movsl
shl
add
add
mov
out
mov
mov
jbe
popf
add
add
add
repnz
lock
xchg
add
mulb
mov
out
lcall
into
add
add
jo
jno
fwait
add
cld
lea
pop
xor
push
pop
xor
push
push
push
push
call
mov
sar
jns
pop
fsubr
add
xchg
add
add
mov
add
repnz
cld
lahf
add
pop
pop
shrb
jb
add
add
add
flds
mov
iret
mov
add
add
xchg
pop
add
shll
add
add
addl
fcoml
add
add
fisttpl
pop
add
xor
dec
push
push
push
lea
push
push
lea
push
lea
push
lea
push
push
push
call
rcrb
pop
add
add
add
add
add
test
lock
pop
lret
jno
test
jb
out
mov
lea
arpl
std
addr16
pop
fcmovnb
add
mov
rclb
add
jnp
add
stos
mov
cmpsb
lahf
add
fiaddl
add
add
out
mov
lea
pop
sub
push
add
shr
pop
jmp
sub
push
sub
not
dec
pop
pushl
pop
push
push
lea
push
push
push
lea
push
push
call
add
rcr
mov
jae
cli
add
stos
movl
add
push
xchg
loop
mov
add
orl
sahf
fildl
add
jle
mov
mov
add
add
add
pusha
mov
mov
lods
add
add
out
push
pop
hlt
add
add
shll
movsb
mov
addr16
mov
lea
pop
sub
push
lea
push
push
push
push
lea
push
push
push
push
push
call
bound
stos
add
lods
outsl
andb
jmp
add
push
pop
stos
mov
pushf
add
xlat
in
add
movsl
push
lret
mov
in
mov
push
add
add
enter
add
popf
add
mov
scas
stc
jle
data16
xchg
mov
add
add
mov
popf
add
js
jae
test
test
add
data16
cmp
lods
call
mov
jne
mov
lea
sub
push
push
push
push
call
jmp
add
cmpl
mov
cld
outsl
cmc
sti
in
add
jae
mov
gs
fcmovu
add
int
roll
loopne
add
mov
add
add
xchg
enter
jae
mov
push
add
mov
lods
popa
pop
pop
mov
add
pop
add
popa
adc
or
pop
add
fnsave
ficompl
jmp
dec
inc
sub
pop
add
push
push
push
push
lea
push
push
call
add
xor
lods
jae
add
mov
lahf
in
mov
pop
pop
scas
add
imul
clc
leave
mov
xlat
lods
aam
add
lock
push
add
add
lods
mov
cld
add
clc
push
xorb
add
shrl
test
int3
add
add
sahf
fisubrl
int3
lret
xchg
jb
jne
add
mov
xlat
jp
insb
push
popl
mov
add
mov
lea
pop
sub
push
add
ror
inc
pop
pushl
push
lea
push
push
push
lea
push
push
push
push
lea
push
push
call
loope
add
test
insb
add
loop
popf
imul
in
movsb
bound
add
fistpl
addl
pop
add
loopne
mov
push
add
test
aam
icebp
outsl
xchg
add
mov
mov
rclb
pushf
mov
add
int
add
mov
add
add
add
call
sub
shr
and
push
ror
sub
shl
pop
sub
push
inc
shl
pop
cmp
jne
leave
push
push
push
lea
push
push
push
push
lea
push
lea
push
lea
push
call
add
push
fiaddl
xchg
add
nop
add
mov
add
fwait
insb
imul
filds
out
pop
bound
orb
adc
leave
add
add
aam
test
ret
jno
les
add
call
rcll
imul
lahf
add
pop
jne
mov
lea
pop
ret
push
not
pop
push
mov
add
push
push
lea
push
push
push
push
push
push
call
push
push
mov
add
stos
push
loopne
fsubrl
add
push
add
js
pop
add
les
add
cmpsb
stos
add
add
out
push
jle
add
scas
mov
add
push
add
add
jne
je
out
add
sarb
add
movsb
lea
negb
add
add
mov
add
pop
push
push
push
sub
inc
add
pop
push
push
push
push
dec
dec
pop
mov
push
ror
ror
pop
lea
sub
mov
push
add
pop
shr
add
mov
push
push
call
add
lahf
add
add
shlb
fisubrl
lods
loope
ja
add
mov
clc
cltd
sahf
add
mov
loope
add
push
add
mov
add
add
clc
pop
jecxz
addr16
add
pop
mov
push
add
mov
stc
cld
mov
add
xchg
imul
add
roll
test
jmp
les
xchg
mov
lea
pop
add
mov
push
pop
add
push
add
pop
xor
push
lea
push
lea
push
push
push
push
call
lea
loope
cltd
jmp
insb
std
gs
bound
xlat
mov
add
int
xchg
clc
data16
out
pop
push
in
jne
add
add
add
add
fsubs
jle
mov
pop
push
clc
lods
add
rolb
lret
std
ljmp
out
repnz
add
in
std
fistpl
fwait
add
movsl
add
data16
add
mov
add
lea
pop
mov
and
call
push
push
lea
push
call
hlt
in
jnp
je
xchg
js
add
pop
in
mov
rolb
fdivrs
imul
mov
add
add
movsb
call
add
mov
arpl
add
aad
add
add
flds
add
in
pop
cld
fs
scas
add
lods
cmc
add
jb
lods
add
jns
movsl
outsl
lods
mov
mov
lea
pop
add
push
add
ror
dec
pop
cmp
je
push
push
push
push
push
lea
push
call
jae
cmpsb
sar
fwait
icebp
mov
add
add
cmc
add
cmc
add
add
add
add
mov
add
lods
cltd
iret
mov
data16
aad
jno
popf
rolb
add
lahf
hlt
add
fiadds
add
cld
out
mov
push
jge
lret
jl
mov
add
jbe
add
mov
sarb
mov
pop
add
cmpl
jne
xor
push
sub
ror
dec
pop
pop
pop
pop
push
pop
pop
push
not
pop
pop
leave
push
rol
ror
add
pop
ret
mov
add
push
pop
push
push
pop
push
pop
pop
mov
push
not
shl
pop
push
call
push
dec
add
pop
xor
push
pop
pop
pop
push
pop
pop
pop
pop
push
inc
add
pop
leave
ret
push
push
lea
push
push
lea
push
push
call
cmc
add
jno
aad
jo
add
add
push
xchg
rcll
add
add
add
fnstenv
add
arpl
mov
jl
cmc
scas
pop
add
add
fisttpll
add
add
popa
add
std
loopne
insb
js
add
jge
fwait
add
pop
add
mov
in
repnz
add
add
add
add
call
loope
mov
out
into
mov
lea
pop
mov
add
push
push
sub
lea
dec
pop
push
push
push
push
push
push
push
push
push
call
add
fwait
mov
lahf
lock
add
pop
mov
push
add
jmp
push
lea
add
ja
loop
lcall
fwait
jb
jnp
leave
jns
sti
test
jns
add
add
add
mov
mov
add
mov
add
loopne
mov
cmpsl
push
pop
mov
push
add
jl
add
mov
lea
pop
mov
push
pop
push
push
lea
push
lea
push
call
push
call
push
jmp
push
je
xchg
add
cmpsb
pop
out
add
rolb
test
add
loop
push
add
add
push
add
add
add
mov
mov
add
sub
mov
bound
add
xlat
xchg
flds
jae
add
add
push
fdiv
add
add
push
mov
je
add
add
add
add
sahf
fs
mov
hlt
fs
hlt
lea
pop
lea
push
dec
pop
sub
mov
push
push
push
lea
push
push
call
fcmovnbe
add
out
push
cmpsl
add
test
mov
add
ret
add
add
addl
pop
insb
cli
jl
add
jb
add
stos
scas
mov
add
xorb
add
mov
movsl
xchg
mov
push
add
shrl
add
add
add
cmpsl
add
lea
sti
push
test
loop
les
ljmp
push
push
push
push
lea
push
lea
push
push
call
bound
add
add
add
xlat
ja
out
add
lea
repnz
add
mov
add
xchg
add
mov
lock
test
add
stos
les
jae
cmpl
add
cltd
loop
mov
add
jne
mov
shl
jb
xchg
add
lods
jae
xchg
add
in
add
mov
lea
pop
mov
add
pushl
push
push
push
push
lea
push
lea
push
call
add
add
mov
add
add
std
xchg
fcmovnbe
cmpsb
roll
clc
add
rcll
add
cltd
enter
add
jnp
mov
jo
aam
push
add
imul
pop
add
loopne
pusha
mov
cmpb
mov
mov
test
popf
jae
add
add
data16
add
add
jno
cmpsl
fs
lea
pop
popl
push
shr
pop
mov
push
lea
push
push
push
push
push
push
push
push
push
call
add
xchg
mov
jl
add
mov
push
imul
jns
pop
add
push
mov
pop
rorb
mov
aad
fcomps
jmp
add
fsubrl
add
add
add
add
mov
mov
add
add
add
test
add
cld
lea
pop
add
push
pop
xor
lea
push
lea
not
lea
add
pop
mov
add
push
push
push
push
push
push
push
call
push
mov
aad
les
movsb
in
add
stos
cmpsb
add
push
mov
mov
add
add
std
add
push
add
call
push
cld
add
clc
fdiv
add
add
fistpll
add
pop
scas
add
mov
add
lahf
add
jb
add
mov
loop
add
add
pop
xor
call
push
lea
push
call
popf
fldenv
xchg
jno
cmpsb
repnz
xchg
mov
pop
scas
sub
fadds
add
mov
arpl
cmpsl
add
addr16
imul
push
iret
clc
cwtl
test
add
imul
add
jae
add
popf
insb
add
add
add
mov
out
add
add
pop
add
push
push
push
lea
push
push
lea
push
call
add
scas
stos
loope
add
iret
int
add
add
add
movb
movsb
movsb
add
push
jecxz
data16
add
mov
imul
add
lds
mov
mov
add
xchg
gs
add
mov
add
add
sti
add
icebp
add
add
add
addb
fldenv
stos
add
mov
lea
pop
nop
nop
push
rol
xor
ror
pop
cmp
je
nop
push
lea
pop
nop
push
lea
push
call
add
sti
push
add
imul
add
xchg
fdivrp
jge
imul
xchg
pop
loope
les
mov
add
push
add
in
arpl
gs
cmpsl
add
leave
cld
add
jge
insb
mov
test
jne
add
add
arpl
xchg
add
mov
lea
pop
inc
push
push
call
addl
mov
loop
add
fsubl
fiadds
call
add
add
popf
mov
stc
xchg
jp
add
add
popl
popa
loopne
add
add
add
sub
add
mov
aam
sbbl
add
add
add
lea
add
mov
out
rolb
jmp
add
add
mov
lea
pop
nop
push
inc
lea
lea
not
pop
nop
cmp
jb
xor
push
push
push
push
push
push
push
call
loope
neg
add
pop
jl
movl
xchg
add
add
add
add
add
add
add
mov
ljmp
pop
add
push
add
pop
add
add
pushf
mov
loopne
mov
mov
add
add
jne
subb
add
add
add
testl
add
push
push
call
pop
lahf
cwtl
add
popa
add
popa
icebp
test
pushf
add
push
cld
add
fiaddl
jae
add
cltd
lods
out
add
add
leave
add
out
loopne
call
add
xchg
add
add
push
add
add
into
add
add
repnz
add
lods
add
rol
jbe
mov
add
mov
lea
pop
mov
push
push
lea
push
push
push
push
lea
push
push
lea
push
call
add
add
add
test
out
add
add
add
add
addl
movl
add
mov
add
add
add
mov
rolb
pop
icebp
add
call
jecxz
lds
loope
jo
test
sarb
add
mov
push
mov
add
mov
addr16
add
movzwl
push
push
push
push
call
add
pop
add
flds
pop
add
add
add
in
add
test
je
add
loope
leave
xorl
imul
jns
pop
jbe
pop
mov
jne
pop
add
lret
add
add
aad
jecxz
mov
add
lret
add
push
add
add
scas
rorb
mov
add
push
push
push
push
push
call
add
push
add
add
add
cmpsb
add
xlat
xchg
add
outsl
mov
std
leave
scas
pop
movsb
lds
add
icebp
lcall
add
mov
push
add
add
subl
add
rolb
test
add
add
stos
jb
add
popa
adc
mov
push
push
push
push
call
add
arpl
add
add
add
add
add
add
mov
mov
add
stos
mov
out
pop
fadds
imul
xchg
lock
addr16
xchg
test
jge
add
mov
xlat
add
out
add
in
add
push
add
data16
jno
roll
add
push
lret
add
int3
lea
pop
xor
xor
shl
push
sub
sub
pop
xor
push
push
push
call
cli
movsl
add
les
fidivs
push
cwtl
pop
mov
jmp
push
xchg
add
flds
add
testl
into
xchg
xchg
add
pop
add
add
popa
jge
add
add
cmc
shll
aad
lret
cli
jns
mov
mov
std
add
roll
add
add
xchg
add
add
int
xchg
add
int3
lds
insb
subl
les
loope
push
push
push
lea
push
call
test
data16
add
mov
add
add
add
add
insb
roll
in
add
pop
add
in
mov
add
mov
xchg
add
xchg
int
add
add
testl
add
mov
add
cmc
add
add
mov
cwtl
mov
outsl
add
add
add
push
add
add
lds
pop
xor
push
inc
xor
pop
shl
push
push
push
push
push
push
push
call
lea
add
xchg
cwtl
popa
fwait
shrl
aad
push
pop
mov
pop
fwait
add
pop
icebp
xchg
out
pop
xchg
icebp
mov
cli
iret
jge
add
mov
iret
add
fmuls
mov
jecxz
add
sar
add
add
lret
ja
popa
add
add
cmpsb
int3
add
add
jb
mov
jp
in
in
aam
test
sbb
xor
push
push
lea
push
lea
push
push
lea
push
push
lea
push
call
mov
push
add
add
cld
rol
add
add
jmp
push
add
mov
je
mov
add
mov
mov
fdivrs
push
testl
addr16
add
lahf
incb
xchg
add
add
imul
add
lock
add
xchg
cwtl
sarl
fmull
roll
hlt
pop
push
sub
dec
shl
pop
pop
push
push
lea
push
call
data16
in
add
add
add
mov
add
fcompl
loop
outsl
ret
add
add
add
jb
jb
pop
fiaddl
jbe
mov
push
int
ret
add
stc
xlat
pop
add
subb
lds
add
add
cmpsl
push
test
add
add
mov
add
pop
pop
pop
push
lea
lea
pop
leave
push
shr
shl
dec
pop
ret
push
push
sub
dec
not
pop
mov
push
push
call
pop
fiadds
cltd
add
add
les
add
lahf
add
into
add
pop
add
jne
add
in
out
outsl
stos
loopne
test
outsl
leave
add
xchg
jl
add
add
add
mov
pop
in
mov
repnz
add
xchg
jb
add
push
add
jp
test
std
mov
lea
pop
push
push
push
add
pop
push
push
push
push
push
call
data16
jne
add
mov
jnp
add
test
push
call
add
add
add
push
add
cli
negl
int3
xchg
add
in
add
xchg
scas
pusha
add
add
add
aad
add
add
add
ret
add
movb
add
aam
add
jae
push
push
pop
add
ret
add
add
pop
clc
sub
cmpb
xchg
mov
les
dec
or
rol
rol
sub
pop
mov
mov
push
push
push
lea
push
push
push
push
call
mov
add
add
mov
add
subl
add
call
ror
add
add
aam
add
fcmovu
add
add
add
add
mov
rolb
test
pop
pop
shrl
add
mov
jmp
xchg
cli
add
push
fs
mov
add
add
sbb
test
je
push
lea
push
push
push
lea
push
push
push
call
add
add
adcl
add
pushf
add
xchg
insb
add
add
popl
movsl
lret
mov
icebp
add
xchg
imul
add
add
jbe
mov
fdivrp
add
add
push
add
add
lods
add
rcll
mov
mov
lahf
add
add
add
pop
push
into
std
lods
push
fwait
rolb
mov
add
pop
mov
push
push
push
push
lea
push
call
mov
add
add
push
mov
pop
lea
add
add
imul
repnz
xchg
lods
add
addb
int3
add
push
lcall
addb
add
stos
add
out
add
in
std
mov
add
imul
add
mov
add
add
add
pop
test
je
mov
mov
push
lea
push
push
push
push
push
push
push
push
call
mov
add
push
arpl
xchg
add
cmpsl
les
add
push
add
clc
jo
stos
add
add
add
faddl
jge
jb
cwtl
xchg
test
arpl
ja
mov
gs
add
pop
jecxz
add
into
stos
lods
add
add
bound
push
add
leave
les
iret
add
cmc
into
add
add
push
add
or
mov
lea
pop
mov
push
lea
push
lea
push
push
push
push
push
push
lea
push
push
call
add
je
add
mov
xchg
iret
aad
mov
add
pop
push
bound
stc
pop
add
cwtl
push
lds
add
add
pop
lcall
add
bound
add
cwtl
lds
imul
cmpsb
pop
lret
rolb
mov
fadds
mov
jb
cmpsb
add
mov
int3
mov
add
mov
arpl
pop
inc
cmp
je
test
je
push
push
push
push
push
lea
push
push
call
pop
mov
sarl
add
cld
xor
add
repnz
add
push
push
cmc
rolb
fnstcw
cld
add
add
lret
sbbl
add
add
in
mov
lahf
add
sahf
mov
add
mov
add
aad
std
jbe
xchg
add
add
add
pop
mov
inc
push
lea
pop
cmp
je
push
push
call
rcrl
pop
jge
add
push
cld
les
data16
add
mov
add
add
mov
xchg
add
add
pusha
mov
add
pushf
add
add
add
add
fdivs
repnz
add
out
add
loope
xchg
movsl
fs
mov
add
fwait
add
leave
pop
add
mov
lea
pop
test
jne
push
shl
dec
not
pop
xor
push
rol
add
ror
pop
pop
push
push
push
push
push
push
lea
push
push
push
push
call
mov
xchg
imul
add
jle
lea
mov
ljmp
cltd
iret
pop
ljmp
lcall
jno
or
mov
int3
addr16
add
movsl
fdivrl
add
add
push
iret
pop
mov
add
movsb
pop
imul
cltd
je
fmull
push
xor
pop
pop
pop
push
lea
pop
leave
push
not
add
add
sub
pop
ret
push
push
push
push
push
lea
push
push
lea
push
call
stos
sti
add
mov
add
ja
push
pusha
mul
hlt
mov
test
mov
fsubl
imul
pusha
mov
mov
popf
push
add
push
add
add
pop
jo
mov
xchg
add
jns
lahf
ret
xchg
movsb
mov
outsl
add
lods
add
jne
pop
lret
add
nop
filds
mov
add
jb
imul
mov
push
add
pop
inc
push
push
push
push
push
push
push
lea
push
lea
push
lea
push
call
mov
add
mov
jo
add
add
xchg
gs
cmpsb
mov
add
add
add
xchg
add
xchg
cld
xchg
add
add
add
stos
xchg
iret
push
add
out
jge
add
mov
add
lock
mov
pushf
xchg
sahf
lahf
clc
mov
pop
data16
cld
add
sub
lock
lea
push
push
push
call
sahf
fadds
add
jb
add
mov
pop
hlt
jp
lods
add
outsl
add
add
cmpsl
add
add
xchg
mov
mov
add
mov
pop
fldt
mov
mov
mov
insb
add
test
add
iret
add
cwtl
addb
add
add
lret
movl
add
add
add
mov
lea
pop
mov
test
je
push
dec
shl
rol
lea
pop
mov
push
shr
not
pop
add
push
push
push
push
push
lea
push
call
pop
test
pop
add
push
gs
add
bound
mov
add
mov
add
jno
add
lods
in
mov
mov
mov
movsb
scas
mov
mov
jle
mov
stos
add
add
fiaddl
add
imul
mov
outsl
xchg
stos
lock
mov
filds
arpl
mov
add
pop
cmp
jne
push
push
call
add
in
in
lret
sti
xlat
movsl
mov
in
xchg
add
add
add
add
in
imul
hlt
clc
cmpsb
in
xchg
add
add
loope
add
out
add
add
jns
rcrl
add
add
jle
icebp
gs
add
out
add
mov
push
xlat
add
push
js
popl
xchg
mov
lea
pop
mov
test
je
mov
push
lea
push
push
push
push
push
lea
push
push
push
lea
push
call
cld
testl
add
add
mov
sti
add
ja
imul
jmp
mov
in
ffree
test
add
nop
push
aam
add
in
add
xchg
add
outsl
mov
cld
scas
mov
add
andb
add
jge
nop
add
cld
out
add
addl
scas
insb
add
jae
shl
add
add
std
add
pop
add
cmp
je
push
lea
push
push
lea
push
push
lea
push
push
push
call
add
cmc
push
enter
loop
add
add
pushf
rolb
push
add
je
icebp
cmpsl
push
loop
add
mov
ljmp
mov
rolb
add
pop
out
xchg
add
pushf
jae
loop
add
lcall
add
mov
add
jmp
clc
cmc
cli
int
add
add
add
add
add
xchg
xlat
add
nop
pop
push
add
faddl
add
popa
and
push
pushl
rcrb
xor
shr
pop
pop
push
push
push
call
mov
jge
push
pop
lcall
mov
jae
add
add
add
rcrl
shrb
sti
clc
add
gs
add
jno
add
lret
mov
pop
lahf
jb
hlt
test
add
in
movsl
add
add
ret
in
roll
shll
js
add
add
lea
pop
pop
pop
push
add
add
inc
lea
pop
leave
push
push
lea
push
call
add
cmpsl
lret
shl
leave
cmc
fiaddl
add
add
xchg
add
shll
mov
add
cltd
outsl
fdivr
add
nop
in
jmp
add
mov
mov
add
add
add
mov
add
rclb
jge
add
int
add
xchg
loop
mov
lea
pop
ret
push
lea
push
call
ljmp
cld
pop
xchg
cld
into
add
add
stos
add
enter
add
add
nop
push
lods
in
add
add
stos
leave
mov
cmpsl
test
insb
add
add
add
add
pop
xchg
add
std
lods
xchg
add
push
gs
add
add
pop
stos
mov
lea
pop
lea
push
pop
pop
pop
pop
push
sub
shl
pop
pop
push
pop
leave
push
dec
pop
ret
mov
push
lea
push
push
push
push
call
shr
addb
movsl
cli
add
add
add
push
out
cltd
iret
add
push
jns
fiaddl
mov
add
mov
test
out
add
sti
mov
out
jae
jo
mov
add
mov
outsl
add
popa
jmp
stc
jecxz
pop
add
mov
rorl
lea
pop
pop
pop
push
lea
push
push
call
add
lea
add
mov
add
jl
add
add
roll
pushf
int3
movsb
incb
add
add
add
push
aam
xchg
add
xchg
fsubr
mov
jl
add
add
add
add
add
add
aad
add
mov
add
add
add
int3
add
xchg
popa
mov
jp
fs
push
sti
aam
mov
or
pop
pop
push
ror
xor
not
pop
leave
push
pop
ret
push
push
push
push
push
push
push
push
push
call
in
test
add
lahf
cwtl
icebp
add
andb
jmp
add
js
pop
add
jno
test
push
mov
add
jmp
add
pop
add
cmpsb
test
mov
add
outsl
popl
xchg
aad
les
pop
mov
jnp
push
add
arpl
mov
add
clc
mov
add
imul
lret
lea
pop
rol
rol
xor
push
rol
inc
pop
inc
push
not
pop
cmpb
jne
push
ror
xor
shl
shl
pop
ret
hlt
nop
mov
sti
movsb
shll
sti
movsb
shll
sti
movsb
mov
mov
sti
movsb
loope
sti
movsb
xchg
mov
sti
mov
push
mov
sti
movsb
shlb
sti
or
inc
or
mov
jmp
fwait
inc
inc
sub
cld
imulb
int3
xor
hlt
shll
loopne
push
xor
or
repz
jns
call
test
fsubrs
xchg
sahf
dec
pop
add
add
test
pop
xchg
lods
imul
mov
jmp
ja
sub
repnz
fwait
ljmp
cmp
mov
out
cwtl
rcrl
adc
daa
or
popf
push
mov
pop
xchg
xchg
stc
jl
ja
mov
imul
jl
ret
pop
pop
or
lods
and
adc
sbb
fsubl
mov
and
aad
lods
or
or
sub
popa
jmp
cltd
cmc
pop
mov
lock
push
ljmp
cld
dec
jne
in
daa
pop
cwtl
and
adc
mov
fs
fwait
lods
lret
nop
in
pop
mov
push
test
inc
or
loopne
test
adc
shrb
lahf
jns
shlb
idiv
dec
sbb
notb
pop
sub
pop
xorb
mov
jle
sbb
mov
jno
jnp
cwtl
cmpsl
sub
mov
ret
jecxz
popf
test
or
subb
bound
mov
mov
dec
xchg
pusha
movsb
cmc
jnp
fwait
add
sbb
stc
push
inc
fisttpll
mov
dec
aaa
cwtl
xor
push
lock
fcmovu
pop
add
pop
jne
ds
fadd
out
dec
or
imul
xor
push
dec
ljmp
mov
inc
fbld
repz
movb
mov
jns
push
pop
loopne
xchg
pop
adc
stc
push
stos
pop
sub
xor
std
dec
jge
test
jbe
push
shrl
jmp
and
fisubs
mov
fcmovbe
inc
adc
jae
in
xchg
mov
orl
daa
idiv
or
adc
aas
mov
scas
pusha
sahf
mov
fbstp
sbb
add
scas
mov
lods
mov
xchg
das
add
adc
adc
pop
push
ljmp
lea
and
xchg
cmpb
xor
inc
pop
sahf
stos
jne
mov
dec
stos
pop
aad
lahf
add
and
or
std
call
push
scas
mov
and
in
cwtl
mov
pop
xor
std
jbe
aaa
sbb
ret
xor
popf
xchg
push
and
xchg
lcall
popa
out
xor
jo
in
adc
mov
dec
ds
cwtl
push
fsub
les
rclb
lret
add
cmp
push
scas
rorl
mov
int3
xchg
pop
out
cwtl
add
insl
jmp
xor
dec
lock
scas
pop
jae
xor
inc
outsb
nop
xchg
stos
aad
dec
jl
cmp
mov
mov
fisttpll
xchg
lahf
rcrl
testb
stos
or
cmc
and
mov
movsw
jne
jmp
cmpsl
pop
fucomi
mov
xchg
aaa
xchg
add
arpl
sub
sub
add
xchg
push
lds
xchg
cmpsb
imul
dec
sub
jae
movsb
bnd
xchg
fs
or
mov
call
push
add
cmp
cmp
nop
add
mov
adc
movsb
pushf
pop
sbb
fs
mov
in
push
xchg
sbb
inc
aad
sub
adc
push
shlb
push
push
jnp
out
lret
pop
cltd
and
xchg
hlt
and
or
or
cltd
aaa
rorl
sbb
xchg
lret
pop
add
mov
lock
mov
jnp
notl
cmc
shl
pop
sbb
push
adc
les
vandnps
xchg
and
xchg
xor
sbb
clc
ljmp
xor
xchg
jl
dec
lret
bound
xor
mov
mov
push
shrb
sbb
scas
stos
bound
arpl
jle
in
sbb
cmp
inc
xchg
imul
mov
inc
test
cltd
rorl
aas
cmp
pop
jno
add
and
sbb
rcr
sub
popf
dec
scas
movsl
cld
fistpll
lahf
adc
shlb
mov
dec
jae
jnp
sub
je
mov
sub
xchg
dec
sbb
scas
inc
push
mov
shll
rcl
pop
imul
cmpsl
add
rolb
int
scas
outsl
enter
scas
int3
les
cmp
mov
leave
or
cli
sub
cs
enter
dec
ret
cld
pop
inc
push
push
popa
out
and
loopne
xchg
mov
mov
pop
sti
fcoms
in
push
jmp
jg
jge
sar
fwait
push
xchg
gs
pop
sahf
pop
repz
inc
lods
jp
lods
nop
and
adc
scas
clc
inc
mov
nop
aam
ficomps
inc
outsl
ret
cmpsl
dec
mov
or
pop
pop
hlt
or
push
and
jne
rclb
push
pop
ss
and
mov
pinsrw
mov
pop
push
out
int
inc
insb
push
mov
addr16
or
enter
outsl
xchg
in
adcl
stos
add
or
or
imul
inc
loop
dec
sub
inc
lret
and
fsubrl
lea
out
pop
mov
sti
sbb
mov
mov
lcall
mov
lods
pop
or
clc
dec
jns
scas
jmp
and
addr16
sub
fs
repnz
les
xor
sahf
lahf
sti
sarl
sub
lods
fcoms
mov
jge
xchg
mov
shlb
fistl
test
lret
fisttps
pushf
inc
rcrl
jns
ret
sti
frstor
jno
cmp
jg
sahf
sub
lea
clc
xor
xchg
aas
push
cmp
jmp
mov
loope
mov
arpl
add
adc
loopne
insl
stos
jae
addr16
and
sub
dec
pop
cmp
sarb
daa
in
sbb
in
int
push
push
inc
ss
fsubl
jb
jecxz
mov
shrb
in
popa
or
push
jl
sarb
cmc
cmp
popf
adc
sub
cwtl
dec
push
dec
sub
push
les
jae
fwait
sbb
lahf
pop
push
enter
cs
movsb
add
xchg
repnz
jb
xchg
mov
rclb
jno
sti
jo
jb
add
mov
test
mov
inc
xchg
repnz
sub
inc
sbb
jae
sbb
into
xchg
sbb
xor
loope
test
test
in
stc
add
ja
dec
mov
sub
mov
mov
insb
test
ret
mov
and
inc
push
pop
cs
in
shr
in
xchg
jle
cli
sbb
cmpsb
mov
sub
filds
lods
jb,pn
gs
cmp
mov
sahf
shl
mov
ret
aas
dec
jl
sub
repnz
adc
mov
push
out
bound
lahf
jecxz
pop
add
pushf
adc
sahf
mov
sub
push
imull
inc
sub
ljmp
cmp
iret
incb
sub
and
jmp
adc
loopne
mov
dec
cli
jge
push
xchg
pop
inc
outsl
sbb
lret
aaa
xor
xor
iret
mov
sar
fs
adc
dec
insb
push
mov
lds
inc
dec
jmp
je
pop
mov
xchg
xchg
fstl
movsl
push
mulb
or
mov
pop
adc
addr16
lret
ret
xor
add
sbb
jae
push
mov
xor
std
sahf
movsl
shlb
pop
mov
cld
pop
or
rclb
mov
push
out
adc
add
fwait
cwtl
ds
or
cli
call
int3
add
arpl
dec
sub
daa
sbbl
pop
cmc
pop
inc
mov
lahf
cltd
pop
xlat
mov
or
dec
pop
in
packuswb
cmp
jb
jp
mov
jg
sbb
ja
out
lods
into
in
imul
jl
or
jge
mov
popa
clc
jp
dec
out
je
sahf
aad
mov
in
jbe
in
mov
sbb
insb
adc
mov
outsb
sbb
shll
fnsave
repnz
cwtl
leave
popl
test
add
pop
scas
aaa
rol
fsubs
cmp
push
push
shll
sub
inc
movsl
adc
or
mov
daa
cmpsb
loopne
add
call
inc
jle
call
lods
nop
xor
rclb
addl
loope
xchg
aaa
lods
fsubl
mov
pop
shll
lret
in
daa
cmp
jb
repnz
in
aad
orb
out
lahf
stos
inc
test
iret
test
sahf
sti
in
add
enter
movsb
or
das
push
out
mov
sub
push
xlat
jno
sub
cld
jns
sahf
mov
add
cmc
jb
roll
lods
fcompl
dec
gs
in
repnz
fnstenv
cli
lahf
lret
cmp
sahf
shll
cs
sbb
or
fnstcw
or
mov
stos
push
adc
test
dec
pop
mov
fstpt
repnz
or
fcmovb
das
mov
jp
test
mov
pop
dec
pop
pusha
imul
fldcw
xchg
popa
add
stc
mov
sub
mov
sub
inc
jg
pop
xchg
adc
lret
mov
xor
adc
popa
push
js
xor
jl
ds
dec
and
hlt
mov
xchg
push
mov
into
mov
popa
movsb
xchg
push
test
jp
jge
pop
xorl
enter
mov
int3
push
mov
bound
adc
add
aas
pop
test
cmp
es
shll
or
pop
nop
loope
data16
push
pop
add
jl
std
lds
sbb
cmp
cmp
cwtl
xchg
sbb
roll
sarb
test
inc
cli
push
push
mov
shlb
ret
in
into
or
std
cmpl
sbb
fiaddl
imull
popf
fs
sbb
daa
imul
jo
jge
loop
pop
stos
cltd
aam
int3
psraw
pop
stos
fnstcw
lcall
sti
ret
push
and
inc
notb
arpl
shlb
add
stc
jle
xor
cmp
addr16
pop
test
add
sti
or
mov
mov
mov
stc
lret
xor
fsubl
pop
xor
xchg
xchg
enter
icebp
hlt
push
jle
mov
cmpsl
push
mov
aad
jae
pop
mov
sbb
lods
aaa
pop
fdivrs
inc
bound
js
mov
add
lret
mov
mov
xor
lret
sub
loope
add
sub
dec
xor
and
push
sti
hlt
hlt
cmc
sub
lret
sub
mov
pop
and
repnz
or
fiadds
rolb
aaa
fsincos
in
inc
test
pop
lret
loop
mov
pop
xchg
xor
push
pushf
ficoml
mov
sahf
and
xchg
inc
shrl
loop
insl
xor
mov
sub
addl
sub
xchg
in
dec
and
xchg
notb
dec
add
fsubs
cltd
enter
or
stos
dec
std
cwtl
cmc
sbb
or
or
push
lret
fwait
sub
test
inc
ffree
lcall
mov
into
push
cmp
sbb
bound
cwtl
mov
push
sahf
push
inc
sbb
cltd
lods
fwait
cli
mov
sub
mov
mov
cmp
and
push
push
test
pop
add
cmp
pop
jp
test
push
sub
pusha
push
mov
sahf
cltd
jl
xor
jg
out
in
jne
lock
loope
fidivs
or
pop
mov
dec
and
inc
notl
ficompl
addr16
mov
test
das
push
push
or
pusha
insb
dec
insb
mov
mov
gs
mov
add
call
sub
aas
aas
push
test
ljmp
aaa
cmc
jb
and
pop
scas
je
fstpt
pop
dec
inc
dec
int3
mov
daa
cmp
inc
lea
outsb
push
sbb
subl
push
dec
int
push
and
adc
pop
cmp
dec
in
sub
and
out
mov
imul
test
jne,pt
add
out
mov
add
ja
push
stos
insb
mov
mov
fwait
leave
sub
aaa
add
and
sbb
and
and
mov
mov
jle
mov
dec
pop
push
lea
or
out
mov
lods
cmpsb
adc
mov
mov
jbe
leave
jne
test
jae
pmaxub
dec
sbb
xchg
jns
ret
stos
mov
xlat
es
jbe
out
mov
lds
pop
mov
das
orb
sub
sub
aad
movsbl
xchg
out
mov
jle
sbb
and
adc
sub
aad
cmpsl
push
sbb
cwtl
in
pop
adc
jne
adc
cli
and
mov
xchg
in
es
xor
cwtl
mov
dec
xchg
fsubrs
dec
jo
xchg
xchg
push
into
ret
and
sti
in
add
push
cmovnp
and
push
ficoml
test
and
adc
ljmp
pop
jle
or
inc
stc
inc
test
movsb
sarb
imul
mov
mov
aas
mov
insb
fmulp
test
push
and
fucomip
das
sub
jmp
jp
dec
jae
stos
xchg
dec
imul
mov
pop
subl
mov
nop
push
stos
out
jp
cmp
sarl
pop
negl
popa
aas
nop
imul
push
std
pushf
sub
test
mov
dec
sub
cmc
or
xchg
mov
aam
lahf
pop
and
pop
jno
push
test
jne
negb
frstor
mov
mov
cmp
mov
repnz
ja
negb
out
pop
lret
int
in
sbb
pop
jns
aam
les
and
stc
popf
jb
cmp
test
or
mov
sbb
mov
dec
in
inc
fwait
insb
imul
movsl
repz
gs
outsb
xor
xchg
bound
mov
mov
inc
sub
push
or
sbb
or
into
sub
cmp
addb
test
pop
adc
das
mov
inc
outsl
xchg
jnp
out
or
jns
in
push
das
test
enter
adc
mov
pop
arpl
mov
sub
inc
std
stc
cmpb
or
hlt
stc
aas
aad
aaa
xor
lock
dec
scas
or
dec
mov
pop
mov
sub
addl
lar
mov
or
cmpsl
outsl
dec
sub
pmullw
movaps
test
pop
inc
sbb
loop
pop
iret
das
std
movsb
sbb
pop
das
push
out
mov
rol
jge
push
push
inc
lds
cwtl
mov
add
dec
cmp
jg
cmp
sbb
in
mov
pop
pop
fwait
cmp
jle
xchg
inc
push
xor
mov
mov
cmp
test
inc
dec
out
xlat
sub
imul
add
stc
jns
mov
jnp
addr16
add
fcoms
adc
adc
divl
enter
int3
dec
cld
mov
stc
xchg
nop
fmull
push
fwait
cmc
adc
shlb
imul
sub
pop
inc
fsubl
repz
dec
out
jg
insb
fs
bound
push
je
loope
shr
xor
xorl
dec
shr
call
add
lret
xor
jge
jne
push
add
adc
es
add
jge
push
dec
sti
mov
ret
call
mov
sbb
adc
mov
imul
pushf
pop
adc
mov
mov
data16
mov
jbe,pt
jecxz
cmp
pop
push
frstor
mov
sub
inc
cmc
cs
add
rcl
sbb
push
cmp
fwait
rcll
pusha
mov
mov
xchg
rolb
ror
ret
xchg
mov
mov
pop
test
xchg
loopne
aaa
mov
dec
scas
pop
stos
lock
hlt
es
xchg
movsb
aad
pop
sub
in
pushf
pop
pop
mov
pushf
icebp
mov
pop
clc
or
sub
jns
std
sub
jno
sbb
xchg
je
dec
jnp
dec
orb
jno
jmp
test
sub
ds
sub
aaa
aam
lcall
ret
ljmp
mov
movsb
mov
xchg
std
test
cmp
fdivrl
imul
popa
adc
pop
mov
mov
leave
or
add
jge
push
jb
mov
loopne
and
jne
push
add
movsl
insb
mov
dec
jecxz
cltd
dec
jl
jb
into
mov
cmc
mov
lods
subl
inc
or
jmp
xchg
inc
and
insb
int3
pushf
lock
xor
mov
jne
scas
cli
xchg
jl
les
roll
lret
cli
push
lds
jns
lea
hlt
mov
cs
push
in
mov
jno
push
dec
fnsave
das
xor
icebp
sbb
pusha
sahf
jno
sahf
jae
aaa
mov
lds
sar
push
in
pop
push
mov
xor
ret
jnp
dec
cli
jo
jmp
mov
xchg
repz
popf
outsb
xchg
adc
test
mov
pop
mov
or
pop
sbb
or
repz
or
pop
jno
xchg
add
inc
sub
pop
es
outsb
sti
cmp
cmp
adc
xor
test
call
cmpsl
jnp
adc
xchg
mov
lahf
dec
in
gs
ja
test
rorl
shrl
lret
roll
sti
in
insl
addl
push
test
imull
xlat
push
insb
notl
imul
cmp
mov
xchg
mov
test
das
dec
dec
or
sbb
pusha
lods
mov
mov
js
pop
xor
inc
mov
imul
mov
inc
roll
int
bound
daa
pop
imul
out
jo
cmp
push
ds
add
and
popf
mov
cmp
mov
shrb
pop
jo
nop
xchg
push
mov
pop
rclb
and
mov
push
pop
or
mov
mov
addr16
push
aad
mov
iret
jnp
adc
adc
mov
adc
pop
pop
inc
fildl
leave
add
xchg
cmp
mov
jae
mov
push
ret
imul
ret
cltd
pop
inc
xchg
jne
or
add
movsl
push
push
sahf
add
sbb
aam
jbe
pop
repnz
in
scas
notb
mov
jno
popa
ds
inc
sub
ss
pop
in
dec
lret
jbe
jae
mov
inc
push
cmc
lret
pop
popf
in
dec
fistps
xlat
shll
cmp
mov
inc
jmp
dec
bnd
cld
inc
pop
cmp
xor
or
scas
and
jo
imul
push
ret
ret
mov
inc
lds
jg
mov
mov
push
aam
cs
cmp
out
dec
dec
dec
out
shrb
les
jl
push
add
mov
aam
mov
adc
lods
xchg
jno
in
mov
sti
xor
pop
aas
rorl
fcompl
mov
aaa
call
aam
ljmp
notl
sahf
shll
fsubrs
repz
in
add
xor
vfrczss
repnz
mov
mov
add
mov
jl
orb
test
push
or
push
push
xor
and
cmp
xlat
test
dec
aas
pop
fdivrp
test
daa
test
and
mov
pop
cmc
call
mov
in
sub
pop
push
mov
sarb
sub
mov
cmp
shll
pusha
scas
test
mov
cmpsb
xchg
in
push
or
xchg
jge
je
mov
mov
cld
popf
out
cltd
test
lcall
sbb
xlat
imul
or
or
lea
xchg
icebp
push
pop
cld
psubd
adc
addr16
addr16
mov
popf
js
out
xorl
mov
mov
rorl
leave
outsl
cmc
cli
push
int3
jbe
pushf
int
sub
dec
dec
sbb
push
jo
push
pop
and
into
pop
lods
loop
mov
pop
xchg
fwait
push
mov
nop
adc
aam
or
rclb
nop
imul
jecxz
call
imul
add
sub
test
add
fistpll
lds
jae
push
call
arpl
sbb
pushf
push
shr
mov
xor
rolb
mov
int3
dec
cwtl
or
pusha
inc
push
mov
insl
mov
mov
xchg
lods
xor
shlb
cmp
cmp
rorb
fwait
pop
adc
aas
pop
mov
nop
xor
jle
pop
cwtl
jecxz
mov
pop
add
fildll
mov
adc
xchg
xchg
inc
fidivrl
mov
xchg
add
lahf
fcoms
cmpl
aam
push
fisubrs
ret
test
mov
cltd
loopne
mov
and
cli
mov
sbb
rcrl
jne
pop
jmp
mov
test
repnz
loope
xor
dec
mov
pop
push
leave
push
rclb
cmp
push
fistps
xor
jns
sub
leave
mov
outsl
std
inc
or
test
jg
imul
ja
lods
movsl
and
or
jae
ljmp
pop
test
add
cmp
jb
fisubrs
int
mov
sti
and
daa
std
data16
out
inc
or
sub
and
and
cmp
fimull
mov
shr
in
jo
bound
stc
mov
xor
rclb
leave
in
popa
inc
shr
fwait
inc
adc
add
push
sbb
and
cmp
push
xchg
mov
popf
xor
jbe
mov
jns
pop
push
jbe
mov
mov
out
into
pop
js
xor
cltd
arpl
sbb
sahf
dec
scas
sahf
jnp
adc
adc
dec
xor
push
imul
sub
fiaddl
popa
push
xchg
inc
insl
mov
out
lds
mov
mov
push
enter
jmp
mov
dec
xchg
mov
jae
jl
dec
test
in
push
add
xor
xor
mov
mov
mov
push
mov
jno
nop
xchg
stos
xor
int3
or
and
movsb
fwait
aas
in
push
sbb
cmc
push
add
dec
jbe
mov
cltd
fcompl
lock
and
aaa
mov
xchg
or
mov
push
cmp
dec
cmp
jne
pop
add
les
fldenv
mov
loopne
push
orl
dec
dec
std
xchg
sbb
sub
mov
sub
mov
and
rcr
pop
and
shl
mov
aad
pop
dec
loopne
xchg
jae
adc
insb
pop
pop
js
cmp
out
mov
repz
dec
cmp
insl
or
inc
daa
daa
ds
add
ja
cmpsl
mov
mov
inc
mov
cmp
mov
enter
movsl
cmc
sbb
pop
popf
mov
mov
xor
add
flds
sti
jecxz
jge
clc
rcrl
jmp
scas
pop
cmpsl
cli
push
inc
lods
iret
cs
mov
cmp
imul
sbb
jp
lds
sbb
out
jl
cwtl
sti
rclb
data16
mov
and
das
pusha
pop
lds
movsb
pop
repz
inc
or
pushf
js
and
mov
push
jmp
and
cmp
cmp
nop
inc
repnz
rcll
out
mov
stc
dec
fisubrl
sub
cmpsl
inc
xchg
xor
adc
push
enter
outsb
packsswb
adc
iret
loop
adc
xchg
jle
jle
fldcw
mov
jbe
push
movsl
testb
mov
cmp
jns
sub
cli
cli
jge
mov
xor
testb
jmp
rcll
mov
and
popa
or
push
aas
cmp
push
loop
fwait
lds
jnp
ja
out
and
or
xor
div
xchg
fucomi
cld
push
push
and
push
shlb
adc
sub
test
mov
lahf
xchg
mov
call
jne
rdtsc
xor
adc
fsubrl
pop
fsubs
xchg
imul
loopne
stc
lods
jmp
and
fldl
lds
lods
xchg
test
pop
mov
mov
xor
and
cmpsb
sets
jbe
arpl
shr
mov
lahf
repz
push
jp
dec
or
sbb
xor
fstps
js
and
sti
mov
jg
pusha
xchg
pop
sub
xchg
das
add
mov
xlat
sub
xor
dec
imul
lcall
pop
cmc
js
adcl
sbb
dec
sbb
cmp
jecxz
mov
cmp
std
int3
gs
sub
and
insb
in
add
push
jne
sbb
push
push
push
adcl
inc
cli
xor
sub
arpl
repnz
mov
mov
roll
sbb
pusha
push
dec
je
jle
inc
pop
adc
push
pop
movsl
jnp
xchg
pop
xchg
cli
lds
dec
adc
add
lahf
mov
push
lea
aaa
push
scas
or
or
push
scas
dec
mov
mov
pop
push
cmp
cmc
and
ss
mov
mov
xchg
scas
inc
fdivrs
fdivrl
cmpl
mov
sub
dec
stos
aaa
cld
mov
and
test
push
bound
nop
sbb
cld
or
cmpsb
fidivrl
adc
outsb
imul
cltd
add
cmc
push
pop
and
js
std
xor
mov
xchg
jnp
push
dec
jo
inc
inc
pop
push
leave
ja
rorl
pop
push
lcall
imul
add
mov
pop
ret
lods
das
add
popa
push
jge
into
and
test
adc
mov
bound
add
insb
push
out
add
push
test
pop
bound
adc
insl
pop
popa
pop
bound
dec
jns
fidivl
fs
add
into
cmpsl
or
xor
push
mov
pop
fldenv
and
in
jecxz
inc
mov
lcall
jnp
pop
loop
adc
push
mov
fisubrl
lcall
push
out
push
push
lea
mov
enter
mov
jmp
cmpsb
dec
cltd
or
adc
sub
repnz
adc
add
lods
dec
in
pop
shlb
imul
in
and
xor
sub
or
pop
aam
or
dec
stc
mov
pop
je
xchg
ret
xchg
adc
xchg
sbb
rorb
xor
xchg
xchg
in
push
aas
ljmp
xor
lock
dec
pop
mov
fisubrl
andb
loope
rclb
rclb
cmc
or
push
stos
lea
mov
lret
nop
sti
mov
fisubs
leave
mov
cmpsl
aas
sub
adc
mov
pop
and
jb
cmp
jg
push
out
imul
and
scas
pop
jecxz
rcrl
fcmovu
dec
sub
pop
popf
out
and
iret
mov
add
jnp
jecxz
daa
scas
sub
mov
sbb
jno
pop
xchg
aad
adc
jmp
in
in
mov
xlat
cld
pop
mov
mov
dec
or
add
dec
mov
cmp
loope
cmpl
xchg
mov
ss
int
pushw
dec
fs
dec
xor
in
xchg
and
mov
repnz
dec
push
and
jnp
lods
mov
pop
sub
dec
jp
jb
cwtl
mov
imulb
mov
inc
repnz
shrl
mov
inc
js
or
jp
std
pop
push
movsl
sbb
or
jae
xchg
dec
mov
and
cmpsb
add
inc
insl
push
add
sub
imul
stos
fsubrl
jmp
or
ret
sub
in
mov
loope
xor
roll
cmp
pop
adc
adc
and
nop
rcrb
ret
aad
inc
sbb
xor
test
and
cmp
mov
push
outsb
xchg
pop
pop
mov
loopne
mov
shr
jg
mov
push
cmp
add
test
xor
sahf
ljmp
jmp
pop
insb
mov
dec
cld
push
daa
nop
sbb
sub
inc
sub
push
mov
insb
mov
in
push
insl
rsm
pop
and
xchg
xor
sub
inc
lret
icebp
jmp
roll
nop
test
roll
out
add
mov
xchg
ret
pop
or
cltd
mov
sbb
std
cmpsb
data16
ret
sbb
fnstcw
nop
or
push
lret
lods
mov
in
dec
ljmp
into
aaa
rcr
inc
cmp
push
dec
pop
pop
add
out
push
xor
xor
hlt
movsl
jp
mov
lock
fisubrs
push
call
loop
jl
sub
addr16
std
sub
and
push
stos
cmpsb
daa
stos
daa
test
cmpsb
pop
movsb
cmp
ss
out
or
aam
leave
repz
mov
xor
cld
pop
hlt
test
or
jle
mov
sti
popl
sar
ss
movsl
push
movnti
or
push
sar
adc
mov
mov
jp
inc
mov
jl
mov
andl
mov
xchg
adc
jbe
cmp
push
dec
xor
stos
adcb
and
aaa
xlat
xor
pop
xor
adc
xchg
icebp
fwait
ja
xor
sub
mov
lock
int
mov
xor
ret
hlt
adc
fsave
insl
xchg
mov
sbb
dec
inc
jl
ret
sub
mov
cwtl
mov
push
jne
cltd
mov
movsb
pushf
jmp
mov
mov
xchg
into
cmpsb
call
sbb
fldenv
inc
sbb
nop
pop
mov
iret
sar
mov
and
pop
insl
mov
cld
ljmp
mov
push
arpl
int
rcll
inc
shll
cltd
int
imul
scas
cs
sbb
mov
mov
push
enter
mov
cmp
outsl
pop
ja
int3
shlb
pop
mov
jae
or
push
cmp
ljmp
fcmovnb
punpckhdq
repz
fstp
sbb
aam
add
mov
inc
cltd
mov
lcall
and
lcall
fnsave
loope
lret
into
push
mov
das
mov
icebp
xchg
pop
js
mov
xchg
popf
sbb
sbb
testl
pop
or
pop
or
mov
lcall
jecxz
xchg
cmp
inc
imul
mov
sub
test
aam
sub
decb
subb
pop
repz
rep
inc
and
sub
lcall
test
dec
mov
adc
je
leave
test
cltd
int
test
ret
sub
arpl
nop
lahf
mov
cli
sub
mov
cli
xchg
les
ret
mov
inc
int
or
push
in
cltd
and
adc
jno
xor
fsub
fimuls
adc
mov
mov
movsl
or
test
mov
lock
or
mov
pop
pop
push
arpl
adc
fwait
jne
popa
pop
fists
mov
push
enter
lods
add
or
or
push
cmp
subl
xor
push
pop
les
fcmovb
add
mov
scas
and
out
sub
add
add
pop
xchg
stc
adc
fisubl
adc
adc
jmp
mov
mov
lcall
dec
ret
jbe
xchg
les
lds
outsl
xchg
dec
or
scas
dec
lods
lock
test
movsl
pop
cli
dec
xchg
pop
xchg
int
fs
out
test
fadds
pop
push
push
inc
xchg
dec
mov
test
push
or
push
in
mov
cmp
lds
mov
cmpsb
loop
sti
int
push
mov
lds
out
and
stos
push
rolb
push
dec
xchg
push
and
jbe
fiadds
dec
int3
adc
push
cli
int3
mov
pusha
xchg
jg
and
movsl
push
lods
imul
ror
sbb
inc
cld
insl
test
push
dec
jge
ret
xor
inc
cld
out
jb
cmp
cmc
sbb
pushf
mov
cmp
push
add
lcall
push
sbb
mov
scas
dec
cmp
notl
inc
sbb
mov
and
jmp
dec
dec
sti
shlb
mov
call
jno
pop
add
mov
out
push
outsb
xor
testl
push
lret
adcb
ss
stc
lret
bound
adc
inc
or
sbb
js
int
or
out
data16
xor
mov
inc
cmpsl
xchg
shrb
lret
xchg
lods
arpl
push
out
inc
mov
and
fisubrl
xor
dec
xchg
bound
ret
mov
mov
faddl
sbb
push
jae
adcb
test
hlt
gs
lods
sub
add
fisttps
subl
cmp
xchg
into
jb
jnp
xor
pop
sbb
int
xor
push
sub
jp
inc
xor
pop
adc
push
jle
stc
lcall
jnp
adc
loop
in
jne
leave
xchg
stos
inc
rorl
in
xor
xchg
inc
pop
mov
stos
in
dec
sub
mov
fdiv
jmp
and
add
adc
pop
fsubr
rcrl
repnz
mov
bound
sbb
std
cmpsb
and
ljmp
iret
fwait
pop
cmp
test
aas
fadd
rol
jne
xorl
test
xchg
mov
adcb
jle
adc
daa
ds
dec
icebp
addr16
les
and
or
pop
xor
stos
cmc
mov
iret
sti
jmp
cs
cli
enter
cmpsl
dec
fdivl
xchg
or
inc
shrl
scas
cmp
out
xchg
xor
inc
test
shl
mov
test
lea
xchg
dec
dec
inc
xchg
lods
xchg
jecxz
push
aam
rcrb
clc
std
ret
jecxz
cmpsb
xchg
adc
pop
mov
jecxz
xor
push
pop
cmp
dec
fdivl
je
shlb
inc
fiaddl
xchg
aaa
adc
xchg
xchg
xchg
mov
sahf
xchg
pop
xchg
mov
xchg
jg
shlb
xor
xchg
test
push
xchg
mov
rorb
lcall
je
dec
xor
lret
int3
stos
aad
leave
mov
dec
mov
jno
ja
inc
jge
in
movsl
mov
jne
jnp
in
ss
cltd
pop
roll
pop
call
out
fsubrl
ja
cmp
dec
fs
mov
pop
lcall
xor
repz
cmp
jg
test
inc
cmc
inc
outsb
ljmp
push
std
shlb
xor
inc
mov
out
cmc
and
les
and
pop
out
mov
int
dec
lods
adc
xor
sub
addr16
mov
pop
cltd
inc
movsb
xchg
inc
jno
and
pushl
test
mov
insb
push
mov
in
adc
ja
js
push
jge
je
lds
sub
enter
lret
sub
jge
lahf
jno
pop
rcll
scas
jge
sbb
pop
mov
cmp
sbb
jb
imul
les
jbe
fldlg2
pop
mov
ret
push
cltd
repnz
dec
stos
push
sub
and
pusha
cmp
data16
stos
pushf
cmp
jge
mov
bswap
mov
rcrb
sbb
inc
pop
mov
insb
leave
ret
data16
adc
aad
adc
mov
pop
stc
sub
cmpsb
call
xor
data16
ret
pop
dec
insb
push
jecxz
and
add
loop
repnz
lea
inc
mov
sub
je
shll
adc
enter
fs
test
mov
sub
fs
scas
inc
aaa
pushf
sar
xchg
dec
pop
test
xchg
add
mov
nop
pusha
out
sub
add
jne
push
fsubrs
mov
fcompl
mov
sahf
adc
aam
andl
jmp
enter
mov
pop
dec
imul
push
mov
hlt
push
push
jg
pop
adc
adc
mov
mov
leave
jno
cwtl
push
dec
nop
gs
push
adc
sub
push
inc
cltd
inc
sbb
repnz
fists
lret
add
in
pop
jg
cmp
fnstenv
call
push
imul
sbb
jbe
pop
sahf
fnstenv
loope
loopne
out
shl
daa
ja
je
test
loopne
out
ficomps
subb
scas
ja
nop
cmp
inc
jnp
or
test
mov
or
sub
pop
ret
push
adc
xor
push
mov
sbb
push
scas
lret
push
push
lds
mov
xorb
jecxz
movsb
ficompl
lock
hlt
sbb
stos
ja
ja
pop
mov
stc
decl
jae
or
lret
pop
out
jae
cmp
gs
pusha
cmc
lea
sub
sub
jge
and
adc
push
scas
icebp
fcos
mov
sbbb
inc
mov
xor
sbb
or
mov
andl
aad
das
xchg
push
inc
test
pop
bound
fmull
lret
imul
sbb
inc
sbb
imul
shrb
jmp
inc
aas
add
ret
inc
pop
ja
dec
pusha
daa
sar
out
mov
loop
scas
inc
jnp
and
arpl
xor
cmp
sub
sti
push
pop
mov
add
cmp
mov
mov
jmp
xchg
mov
fcom
fadds
pop
pop
fcoms
lret
iret
je
jle
sub
sub
mov
dec
mov
lret
xchg
aam
popf
mov
ds
insb
push
cmp
leave
dec
aaa
shrl
jnp
sbb
xor
fwait
inc
add
sbb
leave
xchg
add
mov
add
sbb
in
cmc
or
xchg
out
dec
imul
add
div
jbe
call
out
in
loop
jl
and
out
pop
outsb
fdivrl
mov
or
push
aad
dec
mov
jecxz
xchg
dec
sbb
xchg
jle
pop
repz
pop
rol
pop
lret
imul
adc
or
sub
jns
xchg
mov
negb
rcrb
nop
mov
pop
cmpsb
dec
jmp
repnz
cmpsb
outsb
push
test
fdivrp
jnp
imul
cld
mov
push
and
js
and
mov
ficompl
inc
lods
mov
xchg
jge
jecxz
dec
das
sbb
popa
movsl
jecxz
mov
in
iret
push
and
test
or
stos
inc
xor
lret
dec
lock
sbb
call
out
pop
lret
vpmuludq
ljmp
pusha
push
mov
fcmovu
test
loop
stos
sub
or
inc
test
mov
idivl
jbe
fwait
cmc
sbb
push
or
hlt
rorb
pop
std
dec
push
inc
arpl
rcr
arpl
push
sbb
add
loopne
int
aas
jge
pushf
push
ret
pop
lock
adc
sbb
ror
insl
or
movsl
cli
stos
scas
retw
mov
xchg
and
in
stos
nop
sub
aad
xor
pop
cmp
mov
xlat
cmpsl
cmp
mov
out
pop
sti
push
inc
les
mov
out
xchg
jo
leave
je
and
negl
lock
inc
dec
psrlq
jecxz
mov
jecxz
sbb
in
and
mov
out
inc
mov
cmpsb
std
iret
cmp
or
insl
jle
ret
fcoml
xchg
mov
or
ror
sarb
push
jge
dec
in
lods
mov
or
jg
mov
pop
in
mov
insb
mov
cmpsb
fadds
add
jmp
arpl
or
fs
add
lahf
std
fwait
sbb
out
test
adc
xchg
cltd
push
push
xor
mov
das
out
inc
push
adc
mov
rcll
dec
mov
cmp
mov
sahf
or
loop
jne
adc
mov
mov
pop
in
notl
jle
push
jb
pop
xchg
stos
das
cltd
sbb
insb
stc
or
aad
loop
out
dec
test
fwait
jns
jmp
push
lret
mov
shlb
pop
jecxz
or
shl
add
ljmp
lret
cmp
sbb
xlat
mov
shll
push
jo
pop
adc
int
test
ds
dec
dec
jg
stc
lcall
mov
stc
mov
fisubrs
and
add
stos
and
stos
jl
cltd
xchg
je
inc
aam
push
sub
pop
pop
das
clc
les
pop
mov
out
out
or
cmp
add
add
xchg
in
push
push
mov
das
inc
pop
dec
xchg
inc
mov
push
add
and
pop
and
jg
fnstsw
inc
mov
cwtl
outsl
dec
add
imull
inc
cmp
jecxz
mov
rcl
mov
imul
decb
mov
dec
cli
popa
mov
xorb
inc
jns
cmp
dec
adc
in
sbb
sti
and
icebp
imul
into
xchg
outsl
xor
xchg
int
lret
cmc
dec
loopne
dec
mov
cmp
stos
outsb
movsl
ret
jae
cmp
or
dec
xor
idivl
xchg
jl
jle
rolb
adc
mov
fstps
leave
push
pop
pop
sahf
hlt
arpl
fucom
or
mov
adc
fildll
cs
add
cmp
call
enter
inc
pop
insb
push
lea
das
fldenv
xor
xchg
cmpsl
sub
cmp
sbb
addb
jg
lcall
and
daa
fcomps
push
in
inc
mov
mov
lock
cmpsb
pusha
pop
dec
popa
shr
orl
cmp
dec
push
sub
call
orb
mov
cmpsb
test
inc
and
in
cli
push
pop
push
arpl
ret
and
xchg
mov
insl
ja
pop
fldcw
pop
cltd
fwait
jne
es
fucomp
xchg
or
adc
pop
push
and
sbb
mov
sub
bound
mov
cmp
and
jb
sbb
jge
lcall
mov
insl
mov
fisubrs
enter
xchg
fst
mov
outsb
push
jne
sahf
sar
xchg
ljmp
and
pop
add
addb
aam
int3
xor
and
xchg
push
ud2
dec
add
add
mov
push
in
int3
xchg
mov
into
call
frstor
add
jmp
pop
pop
int3
dec
shrb
idivl
push
test
pop
sbb
mov
sbb
in
ret
xchg
out
xchg
jbe
and
loopne
sub
sub
iret
xor
pop
sub
adc
movsb
in
xor
mov
push
ret
loope
lea
cwtl
sbb
sub
shll
and
push
sbb
inc
jle
imul
push
icebp
shll
mov
sub
dec
pop
xor
leave
popf
stc
cltd
decl
push
inc
cwtl
fimuls
adc
lcall
sub
call
adc
jo
cmp
push
and
adc
xor
loope
outsb
mov
xor
rorl
add
and
lods
iret
call
in
test
out
cmp
xor
dec
lahf
pushf
jp
and
mov
mov
dec
inc
addr16
ds
pop
fcomp
mov
test
push
cmpl
cmp
dec
jns
in
mov
pop
cmp
mov
pop
push
cmpsl
pop
inc
xor
aam
stos
iret
gs
inc
xchg
push
inc
mov
add
movsb
fwait
xor
out
insb
shll
in
mov
pop
adc
shl
xchg
xchg
push
and
xchg
daa
xor
jg
cltd
repz
push
xchg
jl
in
lock
and
pop
out
inc
js
lods
cld
arpl
cmpb
in
mov
fwait
pusha
add
mov
ja
xchg
insb
int
ret
je
mov
adc
or
push
xor
pushw
shlb
cmc
adc
xchg
cld
out
pusha
sub
div
jp
xchg
push
xor
stos
ja
mov
mov
mov
frstor
enter
xor
popf
jmp
movsl
lea
rorl
adc
jns
inc
and
cli
cmpsb
outsb
push
out
inc
ds
outsl
xchg
fildl
std
mov
sbb
pop
mov
sub
loopne
das
in
dec
sbb
mov
pop
mov
rcll
rclb
jmp
dec
cmp
or
ss
js
add
aam
sti
pop
in
xchg
xchg
push
addr16
push
js
xor
and
pop
rolb
xchg
and
push
or
add
jne
inc
mov
lcall
adc
fs
dec
dec
mov
int3
pop
xchg
dec
lcall
pop
mov
loope
xor
dec
ljmp
rcrb
shll
inc
mov
sar
xchg
xchg
stos
xor
mov
loop
sbb
call
in
mov
mov
xor
lds
test
xor
jnp
push
in
in
xchg
mov
xchg
and
repnz
push
xor
mov
lods
xor
andb
in
sbb
inc
je
std
push
sti
mov
movsl
mov
loopne
sub
cmpsl
sahf
fidivrs
mov
sti
popa
jnp
clc
cmp
int3
test
mov
rcrl
sbbb
adc
dec
sbb
inc
xchg
xchg
push
orl
jge
mov
add
call
mov
mov
push
ljmp
pop
inc
cmp
push
and
adc
pop
shr
adcl
xchg
mov
aaa
and
addr16
shl
loope
sbb
push
inc
mov
shlb
cmp
in
les
es
test
sbb
xor
jp
jmp
ds
pop
enter
jmp
push
jbe
add
xchg
xchg
imul
or
mov
cld
sub
sahf
call
fwait
mov
push
adc
cmc
push
and
mov
dec
imul
dec
xor
push
sbb
adc
dec
mov
adc
jne
lock
push
or
inc
pop
outsb
out
insl
and
pop
add
lods
adc
bswap
lds
jge
jmp
jns
pop
mov
sahf
push
roll
push
mov
pusha
in
pop
sub
daa
out
fs
inc
jo
loopne
imul
jns
test
lea
sub
outsb
divl
cmc
cmpsb
popa
pop
inc
cmp
in
enter
mov
outsb
xchg
cmpsl
cmpb
iret
dec
scas
push
cmpsb
fwait
addr16
or
std
nop
dec
in
lret
jg
mov
lods
ret
out
popf
cmpsb
sbb
dec
or
ds
loope
push
outsl
loop
mov
imul
and
lret
daa
aam
mov
inc
into
sub
sahf
mov
in
mov
arpl
or
stos
js
pop
lret
lods
out
mov
lahf
int3
pop
jae
pop
jmp
dec
adc
bnd
sbb
je
jne
out
cmp
insl
pop
xor
xor
outsl
mov
dec
add
mov
fnstsw
outsl
gs
cmpsl
adc
mov
imul
xor
inc
cmpb
xor
sub
mov
push
mov
cld
fiadds
mov
pop
std
pop
shlb
inc
bound
mov
testb
pop
and
hlt
mov
xor
or
cwtl
shll
enter
sbb
add
inc
sub
and
frstor
out
pop
loopne
jb
sub
mov
or
insl
cs
dec
rcrl
ficoml
mov
iret
daa
inc
xchg
push
scas
loope
rcll
lret
repnz
jp
push
sbb
cmp
mov
out
pop
leave
push
lahf
test
rclb
xor
sub
add
into
inc
pushf
inc
sub
jae
dec
xor
test
sub
mov
xchg
push
cli
sub
xor
lret
sarl
push
ret
jns
cmp
jl
aam
fldcw
sub
mov
enter
popf
test
push
mov
lcall
andb
dec
cmc
nop
rclb
or
xchg
jg
xchg
sahf
mov
loopne
arpl
jno
fidivrs
xchg
or
mov
mov
test
adc
fbstp
outsl
or
inc
outsl
lea
mov
push
data16
inc
sub
roll
aad
jmp
test
dec
lods
add
xor
shlb
pop
push
pop
cltd
popa
dec
push
add
test
dec
test
ret
stos
jle
rcll
sbb
aaa
lds
push
jne
sub
pop
push
mov
das
fldt
push
lret
lds
sub
shrl
aas
jae
sub
call
cli
mov
dec
gs
sbb
sahf
sub
testb
rol
xchg
pop
add
sahf
pusha
xchg
and
push
xor
fwait
xor
pop
out
cmovno
ficoml
jns
jnp
incl
loopne
adc
cwtl
imul
scas
add
test
jbe
push
adc
rol
push
aaa
cltd
out
pop
mov
sub
daa
cmp
pop
and
push
fwait
outsl
fistl
scas
push
push
mov
jle
inc
inc
movsl
add
sub
insl
push
xchg
das
gs
bound
add
iret
mov
push
jmp
ret
mov
jge
or
jle
inc
pop
mov
sub
cmc
rcrl
pushf
mov
push
mov
sbb
pop
in
stc
fisttps
sub
ret
sub
jo
iret
dec
imul
ss
aam
sub
inc
cli
insb
cmp
push
pushl
ds
mov
sbb
jae
mulb
aas
jg
mov
stos
cli
test
or
in
cmp
inc
push
sub
jne
xor
iret
mov
xchg
cmp
arpl
sub
xor
dec
jmp
iret
jb
xchg
jns
test
test
repnz
and
add
cli
add
jecxz
fsubrl
imul
mov
mov
sbb
test
push
jle
mov
inc
mov
fwait
out
fldcw
fbstp
rcrl
push
adc
adc
xor
daa
and
sub
stos
pop
jp
pop
add
test
aad
ret
rcl
cmp
jmp
jbe
adcb
xchg
inc
adc
ret
pop
in
les
pop
stos
xchg
out
sub
adc
add
ds
jb
cmp
jo
mov
jl
or
jecxz
push
orb
inc
cmp
inc
adc
outsl
mov
sub
inc
in
dec
mov
cmp
pop
popf
mov
lret
gs
dec
hlt
pop
jl
mov
dec
pop
lods
xor
or
mov
and
pop
in
ret
mov
and
xchg
mov
sbb
jmp
xor
xor
fisubl
cwtl
ficomps
pushf
pop
inc
stc
mov
mov
rclb
movsb
push
addr16
bound
imul
mov
or
push
jne
dec
inc
bnd
dec
addl
aam
pop
roll
or
sub
ss
lock
add
nop
mov
xor
lock
xchg
mov
or
cli
sub
jbe
and
sbb
mov
les
jbe
push
test
push
loope
xor
popf
or
pushf
aaa
dec
xchg
push
pop
jl
cs
sbb
repz
mov
std
jo
dec
mov
dec
add
loope
mov
mov
lock
test
mov
sti
add
xchg
inc
insb
cmpsl
mov
inc
jo
lcall
sbb
inc
movsb
test
cmpxchg
cmp
out
xlat
hlt
dec
mov
or
hlt
out
pusha
call
in
cmp
adc
loop
jb,pn
mov
adc
cmc
jne
xor
lods
adc
xchg
ljmp
paddusw
aad
inc
notb
in
lret
in
jne
outsl
sti
aam
sbb
jb
cmp
sub
nop
jmp
mov
xchg
mull
add
add
sbb
sub
pop
mov
push
adc
outsl
aad
xor
jb
fistl
xchg
sub
call
lea
lahf
outsl
and
mov
test
adc
shlb
push
inc
jmp
stc
ljmp
out
loopne
out
mov
cli
popf
negb
das
xchg
clc
jmp
add
cmp
orl
mov
ss
push
test
das
inc
mov
push
data16
sbb
cltd
pop
jnp
push
mov
fs
xchg
int3
dec
pop
pop
xchg
aaa
loope
push
jno
ljmp
add
jae
je
inc
jne
sbb
cmp
mov
xsaveopt
movsb
imul
pop
mov
in
in
sbb
repnz
mov
inc
sbb
push
fs
nop
cli
lods
pop
push
and
test
mov
sub
and
test
stc
test
pushf
lret
inc
lds
and
mov
xchg
xchg
push
pop
insl
or
into
or
pop
cmp
add
inc
cmp
and
mov
sarb
insl
push
ror
rcr
push
and
mov
adc
std
mov
xor
jmp
test
ja
lds
or
or
or
icebp
pop
mov
lds
icebp
jp
xor
sub
pop
cmpsb
idivb
in
imul
inc
mull
jg
dec
das
xor
les
rolb
dec
faddl
es
repz
aam
xchg
in
stos
mov
xor
enter
aam
jmp
cli
outsl
inc
mov
sti
hlt
insl
ss
std
mov
mov
mov
mov
and
cmovb
dec
pop
sbb
sub
in
dec
mov
mov
adc
or
fbstp
cmc
xchg
lds
aas
fldlg2
push
xchg
lea
dec
in
test
add
ja
jge
push
mov
aaa
stc
sub
lock
enter
insl
xchg
jg
fcoms
push
pushf
jne
in
cli
fwait
push
xor
outsl
cwtl
dec
add
aas
jne
hlt
imul
scas
push
push
xchg
add
lcall
mov
xchg
and
in
divl
sbb
lcall
lret
fstpt
pop
dec
xchg
pop
out
fldl
pop
lea
ret
lcall
dec
xchg
pusha
cld
xor
inc
inc
fimuls
lahf
mov
mov
jb
xchg
push
push
in
mov
add
cmp
leave
sub
aam
add
jnp
mov
or
pop
out
sub
sbb
cltd
push
sbb
add
jbe
or
outsb
fcmovu
frstor
sbb
js
cmp
cmp
pop
xchg
stos
xor
jb
pop
mov
popw
icebp
cmp
xchg
lock
jecxz
xlat
jbe
mov
cld
pop
popf
sub
xor
add
shl
xlat
jecxz
lret
cmp
bound
push
dec
mov
popf
cltd
or
dec
adc
xchg
add
push
lds
mov
es
push
or
outsl
push
mov
cmp
pop
leave
sbb
loop
push
addr16
mov
and
and
rolb
or
movsb
stos
mov
inc
pop
mov
xchg
or
movsb
adc
test
ret
enter
jp
test
lods
mov
mov
orl
nop
mov
adc
mov
cmp
xchg
and
bnd
mov
orl
or
rclb
jecxz
aam
enter
dec
ja
jmp
stos
pop
nop
mov
mov
stc
jbe
inc
loop
mov
add
sti
fiadds
and
popf
cmp
push
fs
fisubl
mov
push
fstps
leave
shrl
mov
dec
dec
inc
scas
or
outsb
and
out
sub
jne
pop
push
adc
mov
sahf
sbb
loope
popf
xor
xorl
mov
fdivrs
jmp
ss
fimuls
fcomi
mov
stc
dec
mov
out
cmp
cltd
filds
sbb
push
aaa
test
rolb
leave
scas
inc
ret
sbb
int
cwtl
xchg
or
mov
rcl
addl
mov
pushf
pop
sbb
lds
das
add
xor
test
divb
ss
in
add
das
sub
sub
fists
test
push
stos
jg
mov
sahf
mov
aaa
outsb
shll
mov
cmpsb
jecxz
pop
cmp
push
test
pop
push
movsb
sub
adc
fisubl
lods
and
int
shll
fisttps
jae
xchg
hlt
gs
add
adc
enter
test
lock
push
push
xor
in
jns
xorl
mov
imull
and
mov
inc
jo
ror
and
xchg
jge
dec
cmc
insb
lods
lods
imul
aam
cwtl
jbe
ror
sub
sub
mov
lahf
jnp
mov
stos
mov
push
loopne
das
jns
xor
push
cmpsl
lea
mov
xor
gs
lock
jno
sbb
mov
in
sub
sub
subb
mov
push
dec
sbb
in
outsb
cmp
or
shll
mov
jmp
pusha
nop
pop
mov
push
lret
or
popf
stos
lret
cltd
aam
scas
cmp
and
es
je
xlat
call
mov
loop
xor
pop
out
addr16
pop
add
mov
iret
loop
or
imul
cmp
or
jle
outsl
outsl
sbb
dec
pop
xchg
inc
fxch
aas
xchg
sbb
pop
add
mov
inc
daa
mov
push
mov
nopl
adc
cmp
xchg
jecxz
outsb
push
push
ds
sahf
sbb
push
das
in
inc
adc
mov
loopne
xchg
fisttpll
mov
mov
pop
jne
les
pop
std
imul
mov
daa
xchg
mov
int
push
push
mov
jle
dec
out
into
lahf
gs
int3
les
xor
pop
popf
cld
std
das
push
lcall
and
fisttps
sub
cmp
fs
jo
jecxz
xor
dec
gs
test
pop
enter
and
enter
fmull
mov
mov
pop
inc
pop
gs
mov
pop
xchg
add
xlat
fists
push
adc
movsb
add
pop
mov
scas
sti
lahf
mov
dec
jmp
nop
dec
push
cs
jno
mov
sub
mov
sub
or
lea
jge
xor
bound
loop
lods
popa
mov
push
mov
mov
rclb
add
in
xlat
inc
dec
mov
jbe
xor
cmp
xor
aas
jbe
cmp
inc
mov
iret
mov
or
shll
clc
cmp
xor
mov
lea
andb
pushf
shlb
cmp
std
int
inc
mov
push
push
testb
cmpsl
lret
test
mov
inc
std
out
jb
ret
rcrl
fistpll
into
mov
arpl
pop
loope
cmp
bound
fs
dec
mov
mov
dec
leave
pop
fsubrs
cli
std
ja
lods
xor
dec
nop
fwait
pop
bound
add
sub
cmp
call
ss
aam
adc
sbb
les
sub
fs
pop
fbstp
xchg
lods
pmullw
sbb
popa
fs
adc
or
or
sub
rcrb
iret
sbb
mov
adc
aam
mov
sbb
pusha
sub
in
scas
rcrl
push
lahf
jge
rclb
mov
es
mov
icebp
xchg
mov
mov
fidivs
aaa
popf
in
fcmove
leave
sbb
and
pop
movsb
pop
mov
cld
iret
sbb
mov
jbe
inc
jge
iret
mov
sub
cmp
mov
stos
lods
ss
and
and
lcall
dec
mov
xchg
imull
lea
out
dec
shrl
add
xchg
imull
out
shlb
pusha
or
hlt
mov
pop
mov
push
sbbb
sarb
sbb
outsb
cmp
sub
add
mov
dec
pop
popf
cmc
out
sub
jp
lcall
mov
fisttpll
sub
or
adc
repz
fmul
add
mov
xchg
add
aaa
scas
jmp
and
cltd
add
cmpsb
mov
add
cltd
adc
fnstenv
pop
push
test
ljmp
fnsave
inc
mov
push
int3
inc
dec
loop
mov
pop
add
pop
arpl
jmp
mov
inc
fistpl
xor
lods
pop
mov
das
xchg
jnp
sbb
test
ret
inc
or
xor
jb
inc
push
rcrb
sbb
and
pop
movsb
push
cltd
cli
aad
rclb
cs
insl
bound
mov
icebp
cmp
cmp
pop
out
icebp
nop
push
lcall
adc
sbb
out
adc
or
imul
sbb
outsl
and
mov
out
mov
cmp
imul
jge
jge
pop
incb
push
and
xor
fidivrl
and
inc
mov
popf
pop
mov
addr16
mov
and
cltd
adc
and
fiadds
push
xchg
or
pushf
daa
lods
inc
imul
inc
sbb
dec
xor
sahf
add
sbb
or
in
in
stos
cli
and
mov
cmp
ds
out
outsl
inc
jne
cld
dec
jns
aaa
mov
push
mov
loopne
into
fwait
sbb
dec
xchg
jae
jne
fimuls
in
inc
rorb
jg
out
out
or
je
jo
add
cld
pop
cmp
pop
or
adc
out
jno
fwait
int
jb
stos
in
sbb
ret
jb
push
jnp
aad
js
mov
pop
stos
cld
addr16
rorl
leave
mov
mov
dec
in
add
pop
jnp
scas
xorb
or
xchg
sbb
xchg
xchg
ljmp
push
sub
ds
sbb
movsl
pop
ja
inc
out
push
and
leave
frstor
jns
sbb
call
or
dec
inc
push
xor
mov
shll
adc
cmp
clc
inc
add
bound
ret
dec
sti
xor
lock
mov
or
adc
in
pop
jnp
sti
scas
daa
out
mov
sbb
cmp
inc
aas
sub
scas
loopne
gs
jecxz
mov
jmp
lret
sahf
and
xchg
adc
bound
sub
frstor
ja
jl
pop
inc
mov
dec
inc
cmc
es
xlat
fisubrs
mov
mov
frstor
add
stos
cmpsl
fs
pop
xchg
scas
jb
adc
out
leave
add
jne
out
pop
cmp
mov
inc
out
mov
add
js
mov
ds
pushf
jmp
jno
pushf
jo
mov
cmp
xchg
pop
fisttpl
ret
cltd
rol
aad
enter
add
pop
push
ds
pop
dec
hlt
hlt
mov
repnz
sub
mov
test
in
jmp
mov
dec
sti
dec
fmuls
loope
adc
arpl
addr16
popa
movl
mov
adc
sbb
sti
jae
mov
stos
mov
adc
xor
xchg
test
cltd
test
sub
data16
aaa
cmp
add
fiaddl
push
and
shrb
outsl
mov
inc
jmp
mov
jle
xchg
lock
bound
jp
lock
sub
pop
sub
dec
je
sbb
xlat
xchg
mulb
fbld
mov
sub
cmp
jo
xor
sub
daa
inc
dec
pop
jo
test
out
sub
xor
dec
sub
sub
inc
dec
inc
xor
loopne
test
insb
lret
imul
or
pop
cmp
push
mov
dec
je
ds
xchg
jbe
cli
test
in
inc
xor
testl
imul
xor
test
jp
leave
popa
jns
push
mov
pop
mov
test
jns
faddl
icebp
out
lahf
pop
xor
mov
outsl
fsubrl
inc
sti
fnstcw
jmp
adc
inc
stc
lds
add
sbb
push
ret
fs
dec
std
rolb
fldpi
jp
pop
insb
push
out
aas
push
jnp
pop
pushf
and
and
mov
addb
stc
les
popl
loop
jmp
add
jo
jb
idiv
lcall
stos
icebp
scas
add
sbbl
sbb
fsubrl
cltd
mov
int3
dec
or
dec
inc
addr16
data16
push
mov
in
mov
scas
jg
lea
cmp
imul
cmp
xchg
hlt
push
ja
aas
loope
sbb
and
add
arpl
add
push
icebp
idivl
negl
lock
jno
mov
jne
inc
jb
inc
adc
sbb
dec
or
adc
out
stos
arpl
sarb
jecxz
or
pushf
dec
lods
mov
gs
in
nop
xchg
push
inc
dec
push
push
mov
in
add
pop
sbb
mov
dec
lds
cs
add
mov
je
jae
flds
mov
sbb
enter
push
in
sbb
outsb
add
inc
push
ss
xchg
xchg
gs
add
dec
in
or
jle
cmp
cltd
loope
jo
aaa
leave
lods
pop
shll
lods
stos
pop
sti
aad
inc
arpl
pop
lock
aam
cmp
jge
jle
dec
add
leave
mov
adc
ret
aaa
scas
or
cmp
add
or
std
pop
orl
jecxz
xor
test
or
dec
std
test
jo
in
and
mov
jge
xor
in
jge
mov
jne
repnz
xchg
cwtl
out
insb
jb
dec
mov
inc
inc
pop
hlt
mov
insb
js
pop
shrl
adc
sub
pop
clc
and
rcrl
mov
cli
lds
ret
imul
add
cmpsb
push
xchg
out
adc
aas
es
or
mov
jb
stos
iret
clts
lock
insb
out
sbb
cmp
mov
push
add
jmp
shlb
cltd
or
iret
icebp
xor
mov
mov
dec
cmc
stos
stc
scas
shlb
push
jecxz
loopne
js
iret
mov
push
add
loope
sbb
in
xor
inc
fistpll
jns
dec
in
lahf
xor
add
dec
cmp
loopne
je
dec
movsb
xor
lahf
das
rorl
ret
sbb
xor
fildl
or
push
mov
jl
in
adc
xlat
fimull
and
mov
push
jne
insb
push
pop
cli
hlt
push
aam
cld
mov
sub
test
jl
ret
dec
shrl
inc
inc
mov
jne
xor
rcl
pmulhuw
or
hlt
out
in
push
lock
jl
mov
fisubl
or
lret
pop
les
jnp
int
jp
in
adc
inc
in
cmp
xor
or
loopne
push
in
test
rcrb
gs
or
lret
shl
subl
es
cwtl
inc
and
imul
pop
cmp
mov
fwait
test
fistpll
and
jmp
andl
jae
test
cmp
iret
xchg
jb
sbb
out
sbb
nop
pushf
outsb
mov
mov
xchg
stos
dec
fwait
enter
sbb
shlb
sti
sbb
cmp
cmpsb
jno
pusha
stc
inc
xor
xchg
jle
ss
mov
xchg
mov
xchg
jns
jno
fdiv
out
inc
add
mov
push
push
cmp
jbe
mov
or
jb
inc
add
lea
scas
ljmp
jecxz
pop
pop
adcb
dec
cmp
jge
lret
push
icebp
lds
or
int
mov
xlat
das
jno
jl
cmp
lret
lea
ficoms
and
dec
fldt
inc
fisttps
mov
int
popf
leave
mov
shlb
ret
adc
adc
out
push
cwtl
or
cmp
add
mov
into
dec
adcb
lahf
ficoml
cmp
push
lock
or
cwtl
jne
lods
in
cmpsl
jae
lock
mov
sub
mov
lret
fiaddl
jmp
mov
jge
in
push
mov
out
mov
loopne
scas
or
sub
dec
jmp
insb
bound
lahf
cmp
inc
popf
add
movsl
jnp
cli
pop
cmp
popa
mov
dec
cmpsl
xor
or
aas
out
inc
mov
shrl
or
fiaddl
pushf
outsb
nop
mov
cmc
push
xor
cli
in
or
dec
ficomps
mov
sbb
inc
push
pop
pop
add
add
sti
test
mov
scas
cmpsb
xlat
rcrl
push
repnz
and
pop
lods
fsubs
mov
dec
inc
fs
push
mov
push
and
or
stc
push
ss
dec
mov
test
mov
mov
mov
call
xchg
pop
ljmp
or
lcall
mov
std
xchg
inc
dec
divl
xchg
cld
mov
sub
outsl
das
out
imul
dec
fmulp
dec
xor
testb
pop
loope
sbb
and
mov
mov
jae
mov
sub
push
mov
je
or
inc
dec
sub
push
nop
out
sbb
fwait
js
lds
xchg
pop
mov
inc
fsts
xor
outsb
jo
fstpl
sti
sub
mov
iret
clc
das
inc
push
stc
push
or
pop
and
xor
xor
xlat
adc
sub
and
sbb
push
lcall
xchg
hlt
fwait
lea
push
cmpsb
mov
jp
test
jecxz
sbb
mov
cwtl
rcr
les
dec
out
xchg
ret
mov
mov
sub
xor
int3
shl
hlt
dec
mov
shrl
add
and
cltd
inc
pusha
lahf
lea
ds
gs
popf
aad
scas
cmp
test
push
cmp
fs
push
mov
int
adc
inc
repnz
cmc
add
adc
imul
xor
cmp
xor
sbb
or
test
mov
xchg
mov
cmc
repz
cmpsb
clc
andb
enter
jl
subl
add
fcompl
call
lds
cwtl
adc
icebp
sbb
fmull
cmpsb
movsb
cmp
pop
pop
loope
adc
mov
and
arpl
dec
xor
cwtl
das
lods
bnd
lods
mov
fidivrs
mov
repz
andl
or
jae
inc
pop
jg
xchg
enter
push
add
dec
pop
mov
cmp
pop
insl
xchg
adc
jbe
out
xchg
xchg
lret
mov
repz
scas
repnz
scas
sahf
popa
dec
adc
mov
or
addl
nop
jae
push
popa
mov
or
sbb
ret
lods
adc
mov
mov
loope
xchg
push
aas
xchg
aam
ljmp
lret
popf
xchg
mov
addr16
mov
push
or
popl
imul
hlt
pop
fsubr
sub
cmp
fidivl
xchg
dec
out
dec
push
enter
mov
mov
decl
and
add
aam
cs
mov
shrb
jno
cmp
or
fnstenv
fstpt
xchg
jle
loopne
xchg
aam
fiaddl
and
loope
sub
jp
add
inc
movsl
adc
or
les
push
in
inc
stos
jp
sub
js
adc
shlb
mov
push
orb
gs
fwait
adc
jbe
in
pop
cli
pop
imul
pop
pop
push
jnp
cmc
test
icebp
scas
int
xchg
xchg
jle
push
push
fmull
not
ret
es
icebp
push
lds
insb
insl
ss
jl
or
lret
sbb
lahf
in
sbb
jge
xchg
xchg
lret
sub
adc
sbb
fiadds
imul
push
xchg
jg
lods
xlat
sti
adc
test
cmpsb
cli
fsubrl
xchg
inc
cli
cli
leave
push
and
and
mov
sub
dec
das
add
xor
pop
cmp
inc
mov
sahf
jnp
pop
cmp
inc
or
push
loope
iret
xchg
add
mov
enter
inc
mov
mov
push
inc
outsb
xchg
out
ds
shl
cld
rclb
or
push
add
mov
fs
or
pop
mov
xchg
inc
fs
in
and
dec
fwait
ror
ds
add
in
xor
inc
lods
xchg
lods
jp
jnp
sbb
ljmp
or
fistpll
jne
std
or
mov
imul
cld
insb
mov
pop
shll
setno
pop
filds
xchg
ljmp
ficoml
lods
sbb
cmp
inc
sbb
pop
mov
and
push
jbe
sbb
sub
test
adc
mov
jbe
pop
inc
mov
ljmp
mov
test
out
and
xor
pop
push
loope
cmp
xchg
lcall
pop
sub
dec
push
test
pop
lea
and
popl
mov
pusha
cmp
cmp
sbb
shl
push
insl
loop
das
push
pop
cmc
xor
aad
dec
hlt
xchg
xchg
mov
pushf
test
rorl
nop
aad
xor
push
ss
push
push
out
leave
xor
pop
mov
es
cmpsb
ljmp
adc
lret
fs
rcr
mov
pushf
push
imul
movsb
pusha
icebp
hlt
jnp
cltd
adc
test
std
mov
cmpsb
cmp
lock
adc
xchg
repz
ret
jae
in
push
jne
lcall
stos
out
addr16
lea
clc
lret
stos
into
mov
sbb
scas
jbe
out
push
cmp
mulb
lea
sub
outsb
add
xchg
nop
in
sbb
data16
mov
xchg
mov
inc
pop
add
idiv
jmp
add
dec
xchg
jle
imul
or
shll
das
adc
pop
hlt
sub
xchg
pop
stos
add
mov
test
cmp
mov
cmpsl
arpl
ss
lods
sub
xor
cmp
pop
jns
xor
cli
pop
xchg
out
rcl
iret
push
xchg
jmp
iret
sub
mov
fcomps
cmp
jp
shl
test
pusha
test
mov
scas
inc
orl
push
mov
fstpt
or
push
nop
or
sbb
fs
sbb
cwtl
loop
xor
push
les
pushf
cmpsb
lds
rcr
cmc
movsl
ret
jb
stos
popa
xchg
jmp
lds
out
and
xchg
jae
mov
popa
jbe
loop
sbb
mov
sbb
lods
cmpb
test
mov
push
pop
rcrl
inc
adc
into
rol
data16
scas
cmpsb
xlat
orl
xchg
popa
scas
and
repz
daa
push
sti
es
xor
mov
fnstenv
lcall
fs
pusha
mov
jbe
lock
bound
add
pop
out
mov
push
jge
subb
push
adc
mov
roll
mov
push
inc
jae
lea
or
leave
xor
jae
rorb
jle
add
stos
jb
xchg
and
adc
add
and
ret
outsb
rorb
mul
xchg
loopne
dec
aam
fildll
add
pop
negl
je
das
xchg
test
fwait
pushf
int3
mov
fistl
jp
ljmp
push
hlt
mov
inc
std
pusha
out
push
jno
xor
inc
sub
popa
sub
fs
sub
mov
cmp
jae
in
pop
pop
mov
jne
pop
in
ror
jb
cmp
mov
mov
popf
aam
call
and
cmp
jl
push
push
add
and
cli
mov
sub
inc
cvtps2pd
out
test
cmp
cmp
inc
sbb
clc
mov
push
cwtl
out
repz
mov
cli
jno
mov
mov
sbb
xchg
add
pop
jle
dec
ss
pop
es
mov
popa
pop
mov
sbb
sysret
cmp
xchg
test
jmp
or
js
cmp
jae
push
jne
orl
fsts
bound
lret
dec
cli
outsb
cmp
mov
adc
dec
inc
mov
pop
xor
ret
pushf
dec
scas
cmpl
fbld
jmp
push
cmpsl
dec
andb
xchg
mull
adc
mov
ja
ljmp
jmp
ds
mov
mov
pop
jecxz
sub
hlt
scas
push
nop
adc
mov
rcrl
je
push
pop
or
xchg
cs
sbb
mov
add
and
cmp
add
lret
ds
or
test
negb
lods
jmp
fcmovnbe
jno
mov
test
jp
and
pop
lock
cmp
or
sub
jg
dec
lret
clc
adc
cmpsl
call
pop
scas
inc
ret
stos
into
push
xchg
sahf
push
lea
inc
pop
add
fidivl
adc
push
test
subl
inc
adc
jne
inc
mov
pop
les
stc
imul
push
imull
mov
jns
imul
loope
fwait
ss
mov
adc
in
aas
push
dec
mov
inc
aam
push
mov
jl
rcl
and
bound
sub
add
into
mov
sub
lods
test
es
and
xor
dec
pushf
adc
or
add
xor
pushf
cmp
in
es
cli
hlt
js
cmc
scas
and
adc
add
push
pop
fnsave
pop
ljmp
and
sbb
movsl
jne
subl
loop
xor
hlt
xor
in
hlt
jb
adc
mov
fmull
mov
mov
xchg
or
add
loope
in
lock
inc
pop
cmpsl
fsubrl
sbb
loope
imul
inc
stos
jno
push
rcl
sti
cmc
out
aam
adc
rorl
fisubrl
push
dec
inc
ja
jmp
lods
fs
mov
cmp
jge
shlb
outsb
outsl
add
shl
subb
sbb
imul
dec
in
sbb
mov
pop
cltd
ret
stos
push
fwait
scas
jae
mov
push
mov
dec
mov
dec
mov
xchg
lahf
dec
data16
mov
in
mov
out
push
rclb
cmc
push
xchg
test
enter
loop
fdivl
pop
rcrb
jae
xchg
repnz
bound
xor
aas
sub
notl
and
cmp
pop
inc
test
cwtl
xor
pusha
aad
dec
xchg
jmp
shll
push
or
or
imul
icebp
arpl
push
decl
insl
add
hlt
sub
mov
clc
std
aad
jl
fwait
fwait
pop
cmp
pop
jo
mov
int3
push
incl
mov
adc
cld
or
adc
mov
xor
je
imul
mov
mov
lods
or
mov
xchg
notl
insb
div
outsl
dec
arpl
imul
dec
test
cltd
ret
stos
mov
fisttpl
inc
jl
and
or
inc
sahf
and
loope
data16
dec
push
in
adc
nop
dec
xchg
mov
hlt
push
sub
adc
popf
mov
mov
fwait
aas
jns
push
dec
gs
pop
pushf
xchg
pop
mov
cmp
popa
xchg
into
fdivrs
jmp
orb
fmull
sub
or
sub
cmc
cmpsb
jmp
pop
and
and
pop
pop
mov
popa
lret
cltd
inc
aad
xor
xor
and
pop
push
mov
push
jecxz
pushf
xor
stc
cltd
pcmpeqw
stos
or
mov
sti
leave
loop
shll
xchg
cld
loop
das
jl
loopne
sarb
idivl
xchg
and
std
movsl
out
push
sub
mov
lea
arpl
and
out
lds
in
add
jno
mov
sub
ret
adc
filds
mov
push
testb
add
sub
mov
lds
push
sbb
aam
xor
rcr
mov
sub
sbb
cld
mov
inc
mov
lods
mov
lret
addb
lods
push
dec
fwait
test
icebp
repnz
xchg
ljmp
push
call
jae
hlt
nop
outsl
xlat
decl
lds
lock
icebp
lock
mov
add
test
fsubp
ljmp
mov
xchg
xchg
sbb
rol
repz
in
iret
cmp
mov
mov
push
sub
je
sub
adc
adc
mov
out
repnz
popa
cmpsb
dec
and
ret
jmp
lds
and
int3
repnz
data16
into
stc
mov
add
adc
or
loop
call
cli
mov
inc
xor
push
ror
inc
sub
and
push
cmpsl
jno
jmp
test
push
push
into
pop
xor
popa
pop
sbb
dec
ss
xchg
mov
shll
push
lea
repz
fincstp
aaa
cmpsb
sbb
leave
push
xchg
xchg
scas
lret
cmpsl
push
and
ss
add
popa
inc
aad
fisttpl
lret
in
lret
sub
sub
sbb
test
add
mov
inc
push
and
repnz
test
push
jne
mov
and
outsb
and
gs
dec
push
jb
dec
stos
bound
ljmp
mov
orl
or
popf
push
mov
mov
jnp
subb
pop
aaa
adc
movsb
dec
js
or
icebp
pushw
je
cld
mov
clc
divb
int3
xor
cwtl
jmp
fsubrs
xchg
ljmp
sub
enter
fidivs
fcmovbe
adc
mov
popw
scas
ret
push
dec
jl
xchg
sarb
jno
lcall
push
jle
adc
cmp
jne
or
sbb
pop
add
les
inc
mov
mov
jno
std
cmp
xchg
sbb
sub
pop
and
jb
shrl
sub
clc
pop
xorl
xor
dec
xlat
jecxz
sti
andb
mov
in
xor
sbb
das
mov
loop
mov
pusha
pushf
xchg
outsl
pop
xor
sbbb
imul
mov
iret
sub
es
scas
pop
in
sub
add
shll
jbe
push
pop
test
adc
sub
imul
jne
lret
push
movsb
fcmovnbe
xchg
sti
dec
jns
out
dec
pop
push
xchg
mov
pop
sbb
shl
in
insl
pop
pop
dec
dec
js
sub
in
mov
shl
jno
cmc
or
imul
loope
jge
mov
and
cmpsl
imul
ret
aas
data16
xchg
cmp
fwait
push
mov
and
or
and
loop
and
sbb
ficomps
aam
cwtl
cmp
subb
mov
xor
std
in
orb
faddl
add
sbb
fnstenv
sahf
shll
pop
je
mov
or
jno
hlt
pop
pop
or
lcall
mov
adc
cwtl
dec
inc
mov
jecxz
mov
inc
jge
sti
mov
cld
push
outsb
ljmp
mov
das
mov
inc
sbb
cmpsb
xchg
rcrb
xor
mov
xchg
adc
add
cmpsb
mov
ror
insl
jg
loope
jecxz
in
sbb
ret
inc
push
lcall
lret
cltd
xor
call
mov
popf
loop
loop
lret
shr
add
int3
fnstenv
pop
fadds
and
popf
test
dec
shll
out
pop
add
shlb
mov
clc
mov
fcompl
xlat
insb
cmpsb
sub
into
dec
add
push
fnstcw
sub
enter
stos
imul
push
lock
lret
dec
je
push
pop
out
push
and
xor
add
addr16
test
xchg
and
push
lret
dec
inc
sub
rolb
inc
lea
aas
add
xchg
lahf
dec
jbe
ss
out
pop
xlat
aam
xor
fs
xchg
dec
testl
pop
and
pop
mov
ret
sub
xorl
orl
lods
lods
cs
lods
sahf
mov
mov
xor
gs
jle
xor
fnstcw
fildll
push
hlt
cmp
inc
insl
adc
and
sbb
sti
scas
imul
jo
cmp
lods
cmp
out
or
cmp
xchg
mov
orl
call
fwait
mov
les
dec
push
cmp
test
mov
iret
in
jnp
inc
call
or
incb
cmp
sub
add
jne
inc
dec
imulb
sub
test
shll
inc
cmpsl
xor
es
adc
ja
lods
mov
jbe
addb
repz
loope
out
adc
jmp
or
dec
inc
icebp
jmp
add
daa
fidivl
push
push
add
imul
fildl
jnp
mov
fnsave
mov
test
ret
mov
push
adc
std
popf
sbb
or
inc
adc
jmp
inc
push
enter
mov
mov
aas
fwait
mov
scas
movb
cmp
add
leave
jbe
mov
and
mov
sbbb
neg
in
inc
popl
fldln2
xchg
fstps
mov
push
mov
adc
mov
jbe
icebp
xchg
jbe
inc
add
push
pop
lods
mull
pop
mov
cmp
in
das
cwtl
fisttpl
int3
pop
std
push
mov
mov
repz
mov
push
add
mov
mov
cld
pop
sbb
subb
mov
mov
daa
dec
inc
jle
mov
repz
clc
pop
jnp
es
or
cltd
sub
jae
fisttpl
xor
aas
loopne
jbe
test
cmpb
adc
jl
in
and
repnz
fnsave
xchg
sahf
mov
hlt
push
push
xchg
dec
push
inc
enter
in
mov
mov
es
les
dec
xchg
leave
out
fidivl
es
xchg
jmp
add
mov
cs
push
in
cmpsl
and
or
pop
adc
mov
xor
data16
xchg
in
js
cld
lret
xchg
or
in
dec
cmpsl
pop
jno
es
dec
cltd
xor
loopne
adc
jae
ss
inc
clc
adc
xor
jo
stc
repnz
in
push
fstp
mov
sti
mov
stc
adc
test
push
cmp
sbb
adc
sti
scas
cmpsl
cmpsl
push
jecxz
xor
sbb
in
call
lret
mov
shrl
insl
dec
mov
mov
pop
movsb
shll
jno
push
xchg
and
dec
shr
jmp
fwait
add
mov
mov
lods
pop
adc
sahf
xlat
pusha
add
jne
mov
ljmp
inc
int3
sub
outsl
push
xchg
xor
mov
inc
pcmpgtw
cmp
jns
adc
enter
push
fstpl
cld
fildll
out
and
jg
jnp
sbbb
or
cmpsb
jg
lods
jmp
stos
lret
mov
sbb
xchg
mov
outsl
pop
cltd
loopne
or
jge
sbb
fildl
cmc
clc
mov
cmp
out
mov
xchg
ret
es
xor
call
rorb
fisubrl
cmp
mov
inc
je
push
mov
adc
lahf
inc
xor
jne
xorl
lcall
dec
in
icebp
pop
xor
int3
dec
fildll
shll
fsubs
mov
add
rcl
test
cmp
out
add
mov
shr
syscall
lahf
push
sarb
les
in
dec
icebp
adcl
loopne
arpl
clc
push
icebp
add
push
pop
mov
sbb
pop
lods
pop
or
dec
aaa
stos
sti
out
movl
mov
or
sahf
sbb
jne
push
and
clc
lret
test
stc
fadd
sub
cli
clc
mov
jle
mov
mov
cmp
xchg
or
push
xchg
adc
fnstcw
xor
out
cmp
xchg
stos
imul
sbb
leave
lea
adc
jns
scas
testl
sti
push
jne
lahf
mov
fadds
ja
xor
push
mov
inc
lret
or
mov
inc
sub
cld
mov
cmp
dec
xchg
jge
pusha
or
jb
inc
push
or
add
sbb
ljmp
cmove
dec
out
mov
lahf
dec
movb
adc
lea
ret
aas
js
int3
mov
sti
mov
jl
lea
add
pop
in
lahf
jno
jb
mov
xchg
loop
mov
loope
mov
jno
pop
lcall
repz
sbb
push
or
push
xlat
sbb
lds
insl
scas
push
pop
mov
dec
cmp
mov
inc
insb
loope
fistl
js
mov
cwtl
pop
in
push
cwtl
jecxz
xchg
pusha
loope
xor
pushf
fisubrl
dec
int
jb
jo
in
add
stos
aad
ret
xlat
movsl
pop
push
int
sub
pusha
ds
mov
xchg
std
in
adc
mov
pop
cmp
mov
jmp
and
adc
push
addr16
imul
aad
lea
mov
mov
mov
mov
xor
push
les
or
out
movsl
pop
insb
sbb
aas
or
xor
xchg
pop
xor
jbe
mov
ss
xchg
rcll
ss
jb
xchg
dec
inc
fsubp
push
aas
or
adc
push
mov
adc
adc
std
mov
or
inc
dec
and
xchg
and
lahf
shrb
movsl
loopew
or
sub
mov
cwtl
nop
or
pop
mov
setne
mov
mov
push
fdivrl
push
in
es
lcall
and
adc
pop
push
out
mov
cmp
int
ja
add
rcrb
lret
mov
arpl
and
xor
xchg
push
lcall
jno
add
outsb
cmp
ret
jae
gs
mov
cmp
jmp
mov
pop
push
cli
icebp
out
mov
cmp
fildl
sbb
pushf
and
pop
xchg
clc
xchg
aas
out
sar
lret
add
xor
jge
lods
lcall
idivl
test
xchg
lcall
or
lret
or
shl
pop
mov
push
stos
mov
add
int3
fs
add
enter
xchg
enter
lods
add
shll
dec
in
jnp
jmp
xchg
push
rcrl
enter
mov
mov
je
jae
mov
jg
ljmp
shll
sti
stos
stos
xchg
movsl
add
loop
jp
or
jmp
dec
repz
adc
jecxz
or
pop
xor
popf
nop
and
and
test
out
and
hlt
in
je
xlat
sbbl
jne
pushf
aaa
and
push
add
and
mov
aad
dec
mov
add
jnp
pop
jns
xchg
loopne
adc
das
jne
sbb
cmp
pop
ljmp
xchg
cmp
dec
scas
sti
cli
lods
push
cmp
xchg
mov
mov
mov
sbb
mov
test
repnz
xor
mov
jmp
pop
in
leave
cmp
push
dec
dec
js
and
xor
mov
lret
cmpsl
jl
popa
call
xchg
push
and
mov
dec
jge
adc
jecxz
pop
sahf
test
negb
sbb
cmp
fwait
dec
add
imul
aam
jg
ret
insl
pop
push
shrl
loop
ss
lods
rolb
dec
adc
outsl
arpl
push
sub
je
movsb
xchg
fbld
cmp
int3
cmp
mov
jmp
pop
hlt
xor
je
jnp
outsb
add
jne
inc
ljmp
jle
sahf
faddl
mov
mov
outsl
cmpsb
mov
push
inc
in
xor
fwait
mov
jbe
cmpsb
inc
pop
and
mov
shl
or
jns
push
jl
jle
pop
ret
ret
mov
mov
and
cmp
sbb
es
xchg
dec
stc
outsl
aas
int
jnp
mov
pusha
insb
fcomps
xchg
imulb
fs
test
mov
lods
subb
fstpl
push
mov
ljmp
incl
xchg
dec
push
int3
xchg
mov
rcr
mov
cs
jmp
mov
into
cmp
sub
les
mov
mov
and
imul
fsubs
data16
jl
jo
cmp
or
inc
xorb
or
push
out
rcrl
stc
sub
fidivs
daa
mov
imul
jae
inc
fs
mov
cli
sbb
lahf
pushf
and
sbb
in
lcall
notb
lret
push
in
outsl
aas
and
rol
cmp
push
out
idivb
mov
xchg
stos
pop
add
popa
negl
lods
je,pn
mov
and
mov
jmp
push
xchg
outsb
lahf
adcl
mov
xchg
xor
inc
cmp
or
decb
push
xlat
ja
int3
mov
add
add
xorb
iret
into
pop
pop
jmp
mov
jmp
pop
push
xchg
rcr
mov
or
lret
or
or
mov
or
lds
lods
sbb
daa
jbe
scas
cmpsb
imul
sub
mov
les
hlt
lcall
jmp
sbb
hlt
fcomi
push
mov
add
jmp
sti
repnz
movsl
out
jo
xchg
pop
imul
test
loope
enter
pop
inc
lret
or
test
push
dec
jo
neg
loope
mov
neg
loopne
push
dec
cmpsl
rolb
and
jge
jecxz
push
push
clc
jge
in
iret
lds
mov
jl
leave
cs
mov
lret
or
dec
sub
test
loopne
mov
sub
fwait
jmp
outsl
out
xor
fdivrp
or
js
inc
inc
inc
clc
jg
es
std
cmp
sti
test
mov
xchg
fisubl
ljmp
shlb
loope
xchg
lock
fstl
fildll
leave
fbstp
ljmp
sub
add
out
jge
pop
cmpsb
push
test
pusha
push
aam
jne
pop
xchg
dec
cmpb
sarl
loop
pop
test
std
push
inc
push
pop
stos
subl
and
ds
xchg
jns
gs
cld
xor
mov
add
ss
mov
cmc
and
sbb
fldenv
lock
idivb
jo
out
movsb
mov
cmpsb
out
sbb
arpl
xchg
sub
scas
outsl
inc
fistpl
sub
ss
mov
repnz
xchg
fisubrs
mov
or
mov
test
test
test
test
xor
xchg
jo
push
lods
pop
sub
out
fldt
sub
int
mov
mov
fbld
mov
mov
rcr
daa
out
ja
xchg
dec
xchg
outsb
daa
ss
push
pop
cmp
gs
stc
push
cs
cs
das
aaa
push
fsubrs
sub
insb
cmc
mov
inc
mov
pop
ss
lea
outsl
daa
sub
jecxz
fwait
xchg
test
ss
pusha
or
mov
lods
sbb
push
ja
popf
dec
out
lret
push
in
loope
add
les
pop
aaa
or
inc
ret
push
mov
or
cmp
push
sbb
xor
cmp
sar
test
cwtl
or
push
dec
in
ret
jl
std
xor
adc
push
stos
push
shrl
add
mov
data16
loop
jae
test
mov
lods
insb
jnp
xchg
inc
and
fstpl
clc
shrl
rcrb
data16
dec
adc
fcmovnbe
xchg
daa
or
lods
mov
inc
adc
mov
ret
mov
test
scas
push
mov
sti
xchg
or
addl
xchg
xchg
ret
push
jge
ret
fmul
fldcw
clc
popf
inc
ret
and
scas
jae
fidivrl
xor
xchg
aad
adc
push
pop
ss
cltd
xchg
xor
xor
xchg
cmp
in
out
cwtl
dec
push
inc
arpl
or
sbb
adc
mov
mov
dec
mov
test
lock
mov
xchg
add
jle
cwtl
or
dec
xor
push
inc
cli
push
pop
imul
mov
test
xchg
imul
or
loope
add
jl
xor
lods
outsl
push
hlt
repz
sahf
imul
push
or
sbb
nop
xor
aaa
xor
add
mov
leave
pop
push
sbbl
arpl
or
pop
mov
sub
cmp
pop
addr16
jmp
xchg
sbb
ds
es
sbb
cmp
out
or
xchg
push
insl
adc
and
sub
scas
imul
cs
pop
dec
mov
fwait
and
scas
icebp
out
aam
mov
in
inc
lods
sub
sbb
xor
test
fcmovb
in
mov
pushf
fsub
insb
dec
aaa
test
lods
rorl
test
sbb
cli
sub
pop
adc
dec
mov
rorl
inc
lods
xchg
push
icebp
fstps
loope
popf
cmp
imul
scas
and
jbe
mov
das
or
insb
adc
mov
jge
pop
adc
cmp
push
jns
adc
push
lahf
jl
sar
sub
dec
mov
mov
mov
fs
imul
bound
stc
outsl
aad
jmp
mov
sahf
mov
loop
sti
cs
mov
jno
mov
dec
aas
ret
push
jne
mov
lock
enter
in
add
inc
and
dec
push
ja
push
mov
ret
jnp
mov
enter
xor
cs
xor
movsl
cmp
or
adc
js
shrb
add
and
lret
push
leave
push
movsb
fdivl
hlt
jge
mov
add
adc
imul
sahf
cmp
insl
jbe
mov
imul
das
in
aaa
pop
mov
xchg
fs
out
std
pop
mov
out
push
or
in
cmp
adc
mov
pop
rorl
popf
mov
sarb
mov
xor
mov
inc
scas
cmp
inc
push
sub
psubd
imul
push
lcall
mov
sub
data16
or
cmpsl
scas
xchg
and
mov
inc
adc
adc
jns
enter
shl
inc
mov
mov
lea
mov
dec
icebp
pop
call
or
cs
jne
xchg
cmp
dec
mov
cld
xlat
sarl
call
mov
inc
lret
push
inc
lods
nop
xchg
cmp
repnz
cld
adc
cs
fisubl
bound
mov
aam
cld
lret
mov
push
mov
clc
xor
gs
xchg
pop
std
in
mov
cmp
rol
jge
dec
xchg
es
hlt
jno
sbb
pop
lret
ret
loope
xchg
mov
and
dec
pop
iret
mov
cmp
lcall
or
int3
xchg
rep
sub
adcb
in
dec
push
dec
jb
add
outsb
inc
call
cwtl
sub
pop
data16
daa
fadds
daa
nop
mov
idiv
pop
test
mov
divl
js
dec
gs
mov
mov
je
push
daa
sahf
daa
aaa
divl
pop
lods
cmpsl
mov
or
pushf
xor
movsb
sub
xor
xchg
sub
jbe
lds
cs
add
xchg
xchg
cmc
add
fldt
fidivl
and
adc
repz
push
fsubl
ret
and
fs
inc
pop
add
dec
adc
mov
sti
inc
rolb
movsl
add
icebp
gs
push
sti
cmp
ret
cli
outsl
jne
push
push
jnp
xchg
fildl
sub
test
or
out
call
popa
or
clc
call
xchg
aam
mov
nop
aam
inc
jb
xor
lcall
aad
push
lret
adc
jecxz
iret
jno
push
and
stc
pushf
pusha
xor
xchg
cmp
fbld
pop
jg
rolb
cmp
jp
adc
es
addr16
push
add
pop
push
test
adc
adc
xor
lahf
movsl
add
pusha
jmp
add
orl
stos
scas
imul
dec
shr
mov
into
push
push
or
adc
sar
cmpsl
leave
enter
mov
or
xchg
ficoms
shll
add
xor
jecxz
xlat
add
add
daa
int
sub
cmpsb
mov
add
lret
pop
in
out
mov
fsubrs
xchg
mov
nop
data16
aaa
xor
scas
xor
xchg
mov
pop
adc
scas
mov
xor
xchg
in
les
xchg
jl
imul
cmovs
and
jns
mov
pushf
sub
addl
dec
dec
es
adc
data16
filds
mov
jg
dec
insb
mov
mov
lea
cmp
cmp
negl
or
cmp
xor
jg
push
xchg
push
rclb
ja
jp
xor
fs
add
nop
xchg
daa
inc
std
adc
mov
test
mov
sbb
jno
popf
incl
movsl
imul
arpl
and
insb
push
xlat
negb
movb
andb
js
pop
sub
neg
lcall
jmp
xchg
or
and
push
cmp
roll
cli
popf
jo
mov
inc
jae
xlat
fldt
out
sbb
push
push
inc
scas
jecxz
popa
ficoms
movsl
push
mov
mov
push
sahf
mov
mov
xchg
pop
icebp
mov
clc
adc
jge
cmp
hlt
pop
test
push
xor
adc
xchg
movsl
mov
lcall
loop
mov
fimull
sub
push
inc
push
loope
inc
cld
jle
ds
mov
or
lds
mov
and
sbb
mov
mov
jb
mov
roll
fucomip
mov
cs
neg
xchg
and
testl
es
scas
je
rcll
mov
cmpsb
mov
add
fldcw
xchg
push
aaa
sbb
out
mov
dec
inc
leave
push
lods
dec
das
ret
repz
sub
enter
loope
sbb
cmpsb
call
pop
in
jns
sahf
fisubl
cs
sub
jo
jg
dec
fstpt
cmp
and
ret
or
loopne
mov
in
aam
pop
lea
aad
imul
out
xor
xor
inc
jge
xchg
pop
outsb
adc
sbb
loope
addb
jo
test
or
das
inc
notl
or
or
sbb
push
fwait
mov
mov
and
sbb
push
jns
repnz
popf
push
into
std
sub
pop
ss
gs
sbb
cmp
sub
lods
in
dec
lcall
scas
and
jae
ja
inc
sub
sahf
rcrb
shlb
mov
jne
ret
nop
leave
fwait
inc
push
and
push
out
sbb
or
bound
outsl
std
out
jo
scas
jge
push
les
add
push
cmc
out
mov
jo
test
mov
stos
jno
pusha
jl
pop
repnz
mov
adc
mov
cmc
in
sbb
shlb
jge
dec
insl
push
sbb
fsubrl
test
out
clc
push
adc
lret
ljmp
je
cmp
xor
push
test
loop
dec
sbb
out
lahf
lds
int
lock
divb
data16
cmp
inc
push
stos
sbb
imul
sub
in
dec
stos
xchg
jo
stos
mov
xchg
es
xlat
mov
push
dec
clc
jge
mov
push
in
xchg
add
mov
or
lahf
pop
jno
mov
mov
add
lahf
lret
outsl
cwtl
and
pop
xchg
iret
dec
mov
fisttps
enter
push
xor
lret
js
or
push
adc
repnz
jns
ss
mov
xchg
sbb
repnz
sub
inc
daa
mov
movsb
repnz
xchg
vmread
xchg
daa
cltd
jns
jae
rcrl
cmpsb
fsubp
movsl
pop
jno
roll
xchg
in
sub
add
mov
mov
cltd
or
loop
fisubl
add
sub
mov
aad
cld
addr16
and
std
std
arpl
lret
sbb
fistpl
push
cmc
ja
inc
loopne
cmc
cs
test
dec
in
mov
shlb
jle
imul
xchg
inc
lock
sahf
xchg
into
ss
gs
sbb
daa
pop
mov
out
jmp
sbb
mov
arpl
mov
cmp
pusha
leave
rcrb
std
out
pop
mov
push
pop
push
orb
or
and
xchg
jns
push
movsl
fadds
outsl
aaa
testl
jb
cli
push
lods
jae
or
cli
repnz
xchg
mov
push
and
push
clc
adc
test
add
jb
adc
stos
xchg
fsubrs
aad
js
iret
cmpl
into
gs
cli
adc
subb
jnp
dec
jl
lods
pop
hlt
jo
mov
pushf
push
mov
aaa
pop
mov
jae
mov
aad
ljmp
jns
sub
fists
xor
jns
in
adc
inc
pop
sbb
cmpsl
pop
mov
cmc
das
cs
loopne
mov
movsl
xchg
jbe
inc
outsl
pusha
cmp
xchg
stos
and
lods
inc
aad
aas
pusha
aaa
mov
jp
jno
push
fimuls
fs
les
xor
mov
mov
mov
jns
loop
mov
and
pop
pop
cmp
mov
loopne
addr16
mov
ret
in
push
pop
pop
outsl
fcoml
in
aaa
jnp,pt
enter
dec
icebp
jp
mov
inc
cltd
jp
sbb
fdivl
call
pop
int
popa
add
cmpsb
mov
push
adc
in
inc
iret
xor
stos
mov
into
mov
mov
fdivl
rclb
scas
sub
aas
outsb
lahf
imul
fdiv
dec
pop
test
mov
xchg
add
sub
or
repnz
imul
pop
shll
inc
je
out
and
cmc
aam
ja
pushf
mov
adc
pushf
dec
mov
mov
inc
dec
loopne
js
fildl
test
pop
mov
xor
sub
addb
cmp
in
bound
jge
fwait
mov
pop
jge,pt
cmc
dec
fistl
pop
sub
xchg
icebp
jae
ljmp
and
insb
cmp
es
repz
pop
sbb
stc
ljmp
adc
ret
jecxz
fistps
jno
enter
mov
aas
clc
and
addb
xor
sub
pop
mov
and
stc
dec
aam
aas
push
lea
ficompl
sbb
sbb
std
mull
rorl
and
push
int
jb
hlt
mov
mov
out
or
dec
cmpsl
out
add
fistpl
sbb
pushf
or
hlt
stos
or
pop
jne
in
addr16
push
pop
mov
jg
dec
sub
sbb
pop
mov
div
cmpsb
cmp
add
insl
pop
cmpsb
daa
cmp
push
sbb
pop
push
fldenv
pop
fsubl
out
mov
cmp
pop
xlat
rolb
adc
adc
cmp
insb
xchg
add
fildll
xchg
push
dec
mov
xor
ljmp
xor
jns
neg
stos
xlat
push
ficomps
push
xor
push
sbb
xor
mov
arpl
fpatan
lret
cmc
and
icebp
out
mov
loop
push
mov
outsb
adc
add
pop
pop
test
pop
lds
and
jne
out
or
out
scas
or
push
std
out
jmp
mov
clc
daa
icebp
pop
mov
mov
out
and
pop
cmpsl
pop
and
lea
sti
out
pop
pop
sub
mov
out
push
andl
aas
inc
enter
xchg
out
out
jne
stos
mov
mov
sub
push
das
xor
negl
mov
sbb
js
pop
rol
jo
es
jne
xchg
cld
andb
bound
add
push
out
pushf
ss
mov
push
mov
cmpsl
mov
push
or
pop
subb
arpl
orl
das
sarb
shr
and
rcrl
es
outsb
sub
inc
pushf
popa
pop
add
fwait
push
pop
insb
fmuls
jae
cmc
adc
mov
push
out
arpl
mov
mov
shlb
nop
mov
leave
dec
add
ret
xchg
sbb
repnz
sbb
xchg
or
stos
mov
in
aad
sub
mov
rcl
or
cmp
vpaddusb
xor
fiaddl
test
adc
scas
xchg
or
nop
xor
subl
dec
fmuls
or
push
rorl
sbb
mov
add
push
lods
xchg
imul
sub
mov
mov
cmc
rcll
ficoms
les
push
xchg
daa
xchg
mov
adc
inc
pop
hlt
mov
in
xchg
push
dec
popa
or
pop
xor
dec
jne
mov
cs
push
js
into
loop
out
xchg
fisubrl
xor
mov
scas
ljmp
test
inc
sub
iret
cmpsb
daa
daa
aaa
out
jo
addr16
jb
sarl
mov
mov
sub
inc
inc
popf
mov
test
pop
lds
ja
xor
pop
mov
jle
test
das
and
insl
push
mov
sbbl
shrl
dec
leave
adc
xchg
jmp
loop
cmp
popa
jl
and
or
insl
cltd
ficoml
pop
xchg
pop
dec
aas
loopne
sbb
xchg
lea
aad
xlat
push
testl
mov
push
and
mov
xor
lret
xchg
xchg
vpunpcklwd
cmpsl
ds
and
rcrl
mov
ret
mov
xchg
rorl
xor
xchg
mov
data16
aaa
nop
data16
repnz
out
and
mov
or
out
cltd
sbb
pop
pop
ret
dec
rclb
movsl
icebp
jbe
out
inc
adc
pop
in
pop
stc
imul
daa
fmulp
stc
inc
add
mov
int
test
jmp
negb
pop
mov
add
insb
mov
dec
mov
xor
sub
sbb
sti
push
cld
hlt
shll
mov
dec
adc
pop
jb
ficoml
cld
outsl
xchg
pop
adc
sub
sbb
mov
cmpsl
daa
sub
add
dec
push
fsub
mov
movsl
flds
and
mov
and
mov
hlt
pop
mov
xchg
repz
movsb
adc
lcall
addr16
push
jns
aam
cs
sbb
imul
stos
fcomp
imul
adc
add
jg
iret
ficomps
rcr
adc
test
xor
xchg
mov
repz
int3
inc
loope
xorl
mov
fbstp
jge
cmpsb
mov
push
movb
inc
xor
dec
sbb
and
enter
out
out
adc
add
cmp
lahf
mov
xchg
aam
pop
cs
insb
mov
pop
add
pop
movsb
or
xor
jae
movl
push
rolb
lea
dec
test
mov
stc
and
decb
adc
adc
inc
and
push
inc
adc
sbb
daa
cmpsl
or
orb
call
int
jp
pop
mov
nop
jge
insb
cli
or
sub
sub
mov
js
or
mov
scas
imul
add
cwtl
mov
scas
sbb
lret
shl
adcl
loope
addb
mov
sbb
into
push
push
and
dec
xorl
sbb
adc
scas
sbb
repz
and
adc
dec
dec
mov
dec
popa
adc
stos
sbb
xor
ret
imul
faddp
jge
push
lea
xor
orb
inc
je
jge
sbb
jb
xchg
push
jb
out
pop
adc
inc
xchg
add
inc
test
aam
pop
pmuludq
scas
mov
sahf
inc
lods
mov
outsb
adc
outsb
cmp
xlat
pop
test
xchg
xchg
inc
or
les
or
adc
xlat
cmp
push
aam
aas
sub
mov
pop
outsb
out
xor
or
and
mov
xor
icebp
frstor
jnp
stos
lcall
add
push
and
jle
pop
mov
hlt
das
mov
cltd
outsl
pop
icebp
sbb
ffree
out
ss
dec
cmp
xchg
dec
test
fildll
mov
cmp
push
je
int
cmp
jae
dec
ss
insl
ss
push
mov
mov
hlt
mov
push
xchg
push
repz
out
sub
shrb
cmp
movsb
fcmovne
fscale
xor
pushf
xor
call
pop
cmp
jp
sub
cmp
cmpsl
inc
test
mov
test
or
jl
cld
cld
pop
daa
pop
hlt
xlat
dec
popa
inc
test
dec
int
xchg
shr
cs
out
inc
pop
sbb
movsb
jne
xchg
mov
cwtl
rsm
or
enter
add
sub
lcall
subb
insb
push
adc
mov
repnz
push
xorb
xchg
test
pop
ret
jne
dec
out
jbe
call
incw
add
imul
addl
mov
je
and
dec
jmp
lret
jg
inc
dec
pushf
adc
mov
dec
xor
jmp
mov
xchg
cld
xchg
mov
gs
inc
subb
push
outsb
arpl
ss
mov
xchg
cmp
ss
test
pop
push
enter
loopne
jp
add
pushf
jnp
inc
inc
in
lods
push
mov
nop
insl
jl
cltd
xchg
pushf
cmp
or
add
ljmp
test
jmp
mov
jp
xchg
je
movsl
mov
push
insb
mov
pop
out
daa
aas
pop
or
fmull
ljmp
pop
stos
cmp
sbb
adc
les
mov
push
scas
lcall
or
cwtl
jae
cmc
xor
cli
add
nop
mov
subps
sub
cs
into
inc
xor
inc
inc
and
shlb
fistps
cmp
shl
pushf
test
jp
jo
dec
xor
movsb
aaa
mov
mov
mov
jp
in
frstor
ss
stos
jnp
jmp
imul
xchg
out
scas
jp
cmp
fld
insl
cmp
xchg
xchg
adc
mov
testl
jno
outsl
sarb
fcmovnbe
lcall
std
sbb
mov
test
jbe
jne
xorb
sarb
jbe
fs
push
jae
cmp
fs
mov
imul
imul
jle
iret
jmp
inc
jp
xchg
int3
stos
mov
xchg
push
inc
mov
flds
add
in
xchg
push
lret
and
stc
pop
mov
mov
ret
jae
pop
andb
bound
jne
in
adc
das
lock
fistpll
cwtl
add
xchg
fiaddl
xor
mov
pop
out
mov
arpl
ret
cmp
enter
ret
into
jo
arpl
js
ss
jae
ret
divl
jge
push
xchg
sti
sti
fs
lods
mov
gs
mov
and
mov
cmp
in
int3
cmp
add
in
out
dec
dec
push
aaa
inc
add
inc
sahf
cmp
pusha
xlat
cmp
sub
into
adc
or
xor
rcrl
push
call
jmp
jle
loope
ss
addl
sbb
sahf
mov
jg
mov
add
cli
mov
into
push
in
push
cwtl
fs
mov
sahf
mov
xchg
sbb
push
out
and
cld
xor
leave
mov
inc
push
test
jbe
repz
add
push
sbb
and
xchg
movsb
pop
out
add
scas
pusha
repz
pop
icebp
es
mov
jg
push
dec
jnp
cmp
mov
push
and
jae
adc
outsb
into
dec
sub
xchg
scas
sub
and
in
push
push
ficoms
sub
sbb
dec
jbe
pop
mov
test
repz
mov
fdivl
xor
add
insb
jl
or
jg
stc
lods
jg
adc
mov
cli
adc
mov
insb
add
or
rcrb
jle
mov
jmp
xchg
into
and
jne
mov
push
sti
push
outsb
mov
inc
inc
lods
xchg
fs
es
pushf
aaa
sarb
pushf
xacquire
and
insb
adc
iret
aam
js
jecxz
push
aas
aam
mov
js
push
pop
mov
inc
pushf
sub
int3
movsl
repz
mov
fcmovnb
lahf
adc
add
inc
xor
fisubl
lahf
imul
mov
inc
push
cli
aam
int
rorb
add
cmpsl
mov
mov
mov
push
movsl
mov
fisubrl
and
not
mov
mov
jmp
jp
test
jbe
push
incb
jecxz
fistl
int3
adc
xlat
mov
jae
mov
push
outsl
mov
jbe
dec
je
or
push
inc
adc
pusha
xor
mov
into
cli
pop
inc
int
mov
iret
shl
dec
imul
jmp
mov
lods
and
sub
fsubrl
xchg
cmpsl
mov
ud2
and
jge
ror
adc
movsb
or
pop
xor
sbb
cs
addr16
outsb
flds
mov
jmp
into
add
imul
adc
inc
xchg
jnp
mov
lret
imulb
hlt
push
jno
push
cmp
shrl
rcr
xor
pop
aad
cltd
out
imul
aas
sub
dec
push
aad
cltd
inc
and
and
data16
loopne
xor
mov
je
in
sbb
out
popf
rol
inc
jmp
sub
cmp
jo
cmp
js
std
je
je
and
and
ljmp
xchg
cmp
fisubs
mov
arpl
scas
mov
es
and
and
pushf
add
in
adc
out
outsl
scas
mov
lock
out
sbb
addb
jns
ljmp
mov
mov
outsb
or
sub
pop
data16
movsl
lods
divb
dec
hlt
lods
dec
sahf
dec
add
xorb
in
iret
data16
test
add
pop
aam
push
xor
jp
or
test
mov
add
adc
xor
out
adc
in
pop
fs
mov
rcrl
xchg
outsl
stc
push
xor
push
fbld
fcoms
or
mov
mov
mov
dec
stos
xor
lret
int3
aad
sbb
lcall
push
addr16
ljmp
int3
fdivr
add
mov
mov
ret
xor
mov
es
push
out
insl
inc
mov
icebp
adc
ret
jg
jno
data16
mov
pop
subl
rcll
push
sha1msg2
adc
sub
cmp
push
mov
cmp
cmp
xor
nop
cmc
popf
sbb
jbe
pop
test
sbb
jns
lret
inc
sub
sub
xchg
or
out
mov
xor
loopne
jmp
ljmp
push
xlat
scas
ret
in
pop
pop
and
loope
sub
push
jp
pop
add
in
in
mov
xor
repnz
outsl
dec
push
inc
sbb
in
loope
pop
mov
das
sub
pop
inc
push
sbb
nop
jecxz
mov
xchg
and
andl
fisubrl
int
orb
xor
push
pop
lahf
lea
pushf
mov
adc
xchg
add
cmc
sbb
push
sub
or
jbe
cs
xor
inc
add
jp
or
in
out
jp
adc
jns
xchg
cmp
xchg
or
dec
push
mov
test
and
or
push
ja
mov
jae
add
sbb
rolb
fsubrl
lods
cld
enter
outsl
lds
or
add
fldl
inc
mov
xchg
dec
sbb
rol
and
fwait
js
outsl
or
lcall
mov
mov
popf
jne
iret
daa
cs
fucom
ja
repz
call
bound
add
xor
mov
sbb
lea
js
sbb
clc
cld
decb
pop
xchg
and
ret
mov
ss
push
lcall
ret
cmp
push
jbe
mov
into
test
and
outsb
pop
jae
arpl
xlat
push
sbb
aas
xchg
popa
or
add
mov
or
adc
sbb
out
pop
sahf
add
cmc
aas
in
and
mov
je
dec
and
lds
test
mov
je
mov
inc
cmp
mov
ja
adc
inc
call
jne
ret
jb
sbb
push
in
push
xchg
out
js
inc
mov
sbb
mov
push
out
fidivrl
ret
dec
add
xor
in
push
lret
add
inc
lock
push
fisubl
imulb
pop
cld
sbb
jmp
call
out
mov
setno
jnp
dec
add
ja
cmpsl
and
addr16
pop
mov
icebp
xor
pop
mov
mov
loope
cmp
cs
rorl
out
adc
sbbl
aas
inc
or
movsb
orl
mov
cmpsb
mov
nop
mov
test
pop
dec
and
cld
mov
call
or
pop
sahf
nop
ja
push
cli
stc
dec
fstl
out
fs
daa
lahf
aas
shrl
xchg
test
xor
sub
shll
dec
push
jmp
push
mull
aam
push
mov
lea
bound
or
push
dec
aas
dec
push
in
dec
sbb
or
insl
lret
in
xchg
jno
inc
loop
fidivl
addr16
sub
xchg
add
inc
test
es
jbe
mov
inc
cmp
imul
pop
adc
and
lods
in
mov
sub
jmp
ud0
inc
adcb
shrl
adc
mov
or
daa
cmp
ret
push
jbe
cmpsl
sarb
insb
std
lea
mov
mov
in
jecxz
dec
or
int3
lea
ds
in
push
lds
aaa
into
leave
fmull
cwtl
and
mov
mov
imul
icebp
dec
mov
je
dec
shrd
and
in
aas
or
sbb
mov
in
dec
pop
push
insb
loopw
fstpt
xor
sbb
dec
sbb
shlb
inc
repz
mov
push
int
mov
sub
add
pop
test
add
ss
dec
mov
iret
pop
es
sbb
xchg
imul
jmp
dec
xor
mov
push
sbb
int
pop
mov
lcall
add
dec
jle
jecxz
jge
jl
jl
adc
out
inc
mov
jne
mov
cmp
sbb
daa
pop
sub
std
testb
dec
or
in
adc
xchg
inc
add
lds
sbb
pop
inc
out
adcb
fistps
cmp
inc
iret
rcrb
add
jmp
mov
loop
loope
lds
icebp
dec
call
mov
pop
cli
push
aam
neg
and
cmp
es
push
push
add
jo
pop
pop
push
aad
mov
and
aaa
ret
das
adc
rcll
pop
dec
cmp
std
in
cmc
or
push
inc
jb
inc
aad
mov
movsb
aad
clc
push
sbb
ljmp
xchg
jmp
cmpsb
pop
or
push
rolb
mov
xor
test
push
leave
mov
pop
xor
rorl
jmp
cmp
sub
gs
add
and
jae
sti
lock
dec
xchg
bound
add
pop
int
sbb
jnp
lret
push
out
ret
xor
mov
inc
cs
icebp
mov
imul
inc
jae
mov
dec
add
imul
cltd
sub
jo
mov
dec
rorl
pop
push
or
sahf
jle
ret
xchg
lcall
jbe
test
testb
cli
out
jg
add
xchg
cmc
cmc
in
pushf
dec
ret
xor
pusha
or
mov
inc
cmp
shlb
in
ja
mov
push
mov
fstps
cmp
adc
scas
push
push
adc
dec
daa
mov
push
gs
aam
rcr
adc
jmp
push
mov
mov
push
inc
mov
sti
repnz
cmc
push
xlat
mov
inc
shl
and
inc
dec
aaa
icebp
adc
outsl
mov
cmp
out
mov
and
push
inc
mov
xchg
add
cmpsl
testb
out
jge
jl
pop
leave
jo
arpl
inc
xorl
adc
ret
repnz
stos
push
aam
cmp
jecxz
andl
and
mov
cltd
and
test
ret
dec
mov
sub
dec
jge
mov
loop
ljmp
sub
test
test
jae
adc
call
mov
shrb
pop
pop
fcmovne
xchg
or
in
lret
mov
repnz
pop
imul
mov
out
clc
arpl
fsubrl
insb
cli
fbld
jmp
jp
jns
mov
sbbb
and
scas
cmp
dec
scas
lea
xchg
les
or
bound
sub
mov
jge
add
js
jns
or
xor
ljmp
inc
jae
jle
ret
call
aas
adc
int3
xchg
mov
cmpsl
pop
add
jge
jb
lahf
aam
mov
scas
mov
push
mov
sbb
into
lea
into
xchg
sub
and
mov
cmp
mov
out
arpl
jmp
pop
scas
insl
into
pop
je
andl
hlt
lock
aam
pop
xorb
nop
xchg
test
repz
pop
arpl
jo
mov
nop
push
loop
mov
test
pop
xchg
into
push
add
jb
aad
das
add
shll
sbb
xor
pop
es
repz
das
push
inc
mov
je
mov
pop
pusha
sbb
mov
or
sub
push
call
xchg
addr16
xlat
cld
xchg
les
mov
push
sub
and
fs
push
out
imul
mov
xor
mov
ss
adc
mov
mov
fcmovu
movsb
outsb
cltd
mov
jge
movsl
xor
cmp
out
stos
adc
sti
into
mov
negl
mov
sbb
xor
addl
inc
jae
lahf
lock
adc
pop
lahf
add
ret
enter
gs
mov
cmp
xchg
mov
xlat
xor
movsb
popl
lahf
cmp
addr16
mov
je
xchg
jno
in
push
cmp
shrb
xchg
mov
dec
incb
pop
xchg
push
sbb
cmc
lods
repz
icebp
cmp
call
push
cmp
mov
shlb
or
cmp
or
in
leave
xor
lods
mov
xchg
ljmp
mov
in
mov
outsb
mov
adc
jg
mov
mov
mov
icebp
das
cld
lea
jg
addr16
rcr
cltd
or
data16
jl
add
jmp
mov
jecxz
std
fwait
cmpsb
fs
cmp
inc
push
pop
mov
cmpsl
loop
or
mov
fildl
adc
sub
xchg
adc
or
pushf
pushw
adcb
ret
add
mov
jnp
stc
and
xor
jp
adc
imul
mov
js
cmp
push
pop
jb
test
repnz
lods
jmp
mov
add
js
enter
mov
pop
lret
cld
and
push
test
movsb
and
jo
movsb
notb
mov
ljmp
sub
pop
jmp
and
mov
fistps
shll
push
test
cmp
cmpsl
jl
push
sub
adc
push
imul
mov
or
jbe
aad
cmc
scas
movsl
mov
xlat
pop
jmp
lods
cmp
loop
mov
dec
je
mov
pop
fisubrl
movsl
dec
scas
rcrb
addr16
sarl
push
lret
mov
push
dec
in
push
adc
lcall
sbb
fiaddl
sbb
push
shll
adc
stos
push
rol
es
cmp
mov
xor
sub
jno
pop
mov
dec
jle
push
push
cmp
into
fistps
mov
or
subl
and
daa
add
push
push
pop
sub
and
fildll
and
pop
sbb
popf
xor
jnp
in
fstpt
jae
lcall
push
mov
in
inc
or
aas
sbb
inc
pushf
into
pop
das
jbe
loop
ret
adc
jle
adc
adc
mov
ror
sub
mov
and
out
dec
out
adc
mov
cld
mov
mov
add
mull
imul
jo
out
push
lods
arpl
in
call
mov
mov
pop
pop
xchg
jne
movsl
loopne
or
aas
aaa
cmp
jb
adc
and
out
or
xor
sub
add
mov
jge
pop
and
shl
mov
mov
fcompl
add
rorl
outsb
loopne
out
add
outsb
xor
sub
enter
in
lds
mov
push
scas
repz
dec
sbb
in
jp
sub
sarl
rcr
lock
frstor
outsl
jb
inc
ficompl
jnp
push
popa
jle
in
cmp
or
cmc
jne
std
divb
and
lahf
xor
cmpsb
iret
ret
int
lahf
scas
fiadds
mov
leave
stc
icebp
jg
stos
pop
push
push
mov
in
mov
jno
mov
adc
scas
jp
sub
mov
and
rorl
and
fwait
dec
out
pop
cmc
sub
jb
xchg
and
fstpt
mov
sub
out
sarl
fs
int3
sub
mov
or
add
pop
mov
sbb
cmp
mov
push
jp
mov
imul
cwtl
daa
mov
sbbl
std
aaa
das
jb
aas
shlb
jmp
jb
shl
std
xor
divb
cld
shlb
imul
inc
pop
jge
pop
lea
stc
or
xor
stos
mov
dec
xchg
cmpsl
mov
fistl
mov
cmove
rcrb
js
inc
lahf
lds
mov
cmp
dec
stos
in
roll
sbb
ljmp
mov
and
pushf
inc
sbb
mov
xor
xor
jle
cmp
or
enter
shr
idiv
sarl
out
icebp
pop
jl
mov
ljmp
imul
push
and
xor
pop
fyl2xp1
pop
pop
mov
push
dec
adc
add
aad
mov
es
sub
jecxz
mov
aad
push
movsb
xchg
jnp
insl
push
fisubs
or
fistps
push
dec
inc
dec
fstps
icebp
int3
sbbl
cmp
xchg
inc
or
cmp
hlt
inc
inc
gs
ret
mov
push
push
dec
mov
inc
sbb
or
push
and
icebp
mov
mov
push
int
movsb
jge
xchg
pop
subb
mov
orl
imul
out
xor
and
mov
ljmp
push
pop
inc
sbb
xlat
popa
outsl
cli
dec
mov
call
dec
fwait
add
jne
daa
jg
mov
sbb
repz
mov
cltd
dec
int3
xor
daa
ror
mov
into
aam
add
lret
pop
or
arpl
lret
sub
cmpsl
ss
incb
test
adc
dec
arpl
test
fsubs
test
push
jg
xchg
mov
lret
sbb
dec
sub
not
jge
cmp
jl
add
add
pusha
stos
cli
mov
cld
push
adc
cmp
pop
push
xor
inc
dec
or
aaa
movsb
lahf
adc
jo
pop
js
push
in
mov
std
outsb
inc
js
cltd
mov
cmp
adc
sub
and
mov
outsl
notb
subl
and
fimuls
adc
ljmp
into
jl
mov
nop
jle
xor
in
mov
cmp
sbb
xor
xchg
decl
fsubrs
mov
fsubs
push
xchg
call
jg
pusha
test
cmp
xchg
pop
add
aad
int3
lods
pop
ljmp
inc
int
call
push
rcrb
inc
adc
rol
pop
aam
lods
scas
push
push
lock
adc
mov
xchg
jae
rorl
das
inc
clc
inc
cld
jns
imul
add
lea
bnd
test
mov
pop
mov
pop
mov
shrl
test
mov
mov
call
daa
sarb
sbb
ds
sbb
mov
or
xorl
pop
ficomps
pop
jle
popf
nop
js
test
sbb
or
mov
xchg
es
fiaddl
push
movsl
hlt
std
or
cmpsl
stos
jp
out
dec
dec
into
jae
int
pop
ja
movb
adc
cmpsl
ljmp
out
pop
mov
push
add
add
sbb
mov
in
xor
xor
cmp
leave
jg
mov
aam
pushf
test
mov
dec
enter
cmpl
data16
xchg
push
hlt
insb
jecxz
repz
idivl
xor
scas
imul
ljmp
xchg
ret
cmp
repz
xor
mov
imull
repnz
daa
jbe
mov
nop
push
int
rep
pusha
popa
push
mov
out
mov
inc
js
push
repnz
stos
scas
stc
dec
jecxz
fcoms
cwtl
imul
dec
outsb
push
test
dec
sahf
xor
nop
sahf
xor
mov
das
jae
add
jne
xchg
cmp
cwtl
lret
repnz
add
mov
mov
std
shrl
mov
jmp
inc
cmpl
cld
mov
mov
or
cld
add
sahf
cs
test
pop
pop
mov
lock
mov
cmp
mov
nop
js
stos
mov
fmull
insl
fwait
pop
ret
xor
std
mov
addb
in
xchg
test
push
cmpsb
mov
imul
dec
sbb
sbb
aaa
lods
outsl
xlat
dec
cmp
sub
cmc
xchg
mov
push
push
pop
ret
das
inc
roll
jne
fisubl
or
mov
movb
pop
test
dec
fadds
out
pushf
dec
inc
inc
fiadds
adc
jae
jmp
ds
xor
mov
loop
sbb
stos
ja
cmp
add
dec
lods
daa
loop
leave
or
pop
lock
gs
int3
jb
xor
mov
adc
cmp
lock
test
loope
cmpsl
jns
or
das
dec
fnsave
or
jno
push
out
rcrb
pop
inc
call
mov
lret
mov
xor
cmp
call
in
xor
sbb
data16
sub
mov
imull
js
gs
dec
push
lods
xorl
sbb
adcb
inc
add
out
popa
in
pusha
pop
mov
fnstsw
mov
sub
xor
fistpll
xchg
repz
cmp
out
lea
sub
fcoms
js
loope
cmpsl
xchg
imulb
dec
sub
jmp
mov
mov
push
pushf
shrb
sahf
aas
inc
adc
mov
int
mov
push
push
fstl
mov
dec
dec
jno
jnp
push
shlb
adcl
imul
cmp
test
dec
adcl
mov
push
add
inc
inc
xchg
sbb
sahf
pop
sbbb
repnz
pop
movsl
js
adc
cmp
push
roll
cmp
out
js
leave
or
shl
adc
popf
pop
mov
shrb
mov
sub
xchg
adc
cmp
cmp
into
std
inc
jnp
repnz
mov
mov
cli
es
or
in
or
jl
fsubp
mov
movsb
test
je
loope
pop
xor
stos
das
scas
push
xchg
xchg
mov
inc
mov
gs
mov
movsb
jg
sub
sub
mov
pop
lods
xor
adc
push
int3
loop
addr16
push
shll
hlt
jno
add
pop
movsl
imul
pop
xor
sub
xchg
rcl
hlt
int3
int3
and
insb
pop
dec
add
mov
aaa
mov
enter
push
mov
push
jb
test
andb
clc
popa
pushf
movsb
jno
inc
sbb
in
sub
in
repnz
lcall
mov
pop
cltd
push
in
mov
pop
push
das
std
mov
stos
movsl
into
test
and
add
cmc
or
daa
jg
dec
fisubrs
outsb
popa
push
push
dec
and
pop
cli
les
mov
add
fistpl
popa
lcall
pusha
jmp
or
adc
lock
loop
push
mov
push
dec
add
ficoml
aam
iret
cld
dec
lahf
call
lods
push
das
inc
daa
cmp
sbb
aad
sub
ret
jmp
fcomip
test
rcrb
adc
or
cmp
and
pop
sahf
mov
ret
mov
hlt
mov
int
lret
into
pushf
out
xchg
jp
adc
cmpsl
imul
add
inc
pop
ja
mov
adc
test
in
or
push
mov
lahf
adc
hlt
cs
shll
ret
outsb
mov
stos
cmpsb
rcrl
divb
addl
clc
push
xchg
clc
cli
xchg
fs
pop
push
cmc
jbe
jmp
mov
jl
cs
test
scas
cli
lret
scas
out
clc
pop
or
mov
aaa
mov
icebp
sbb
or
cmpsb
cmpsl
jmp
inc
fwait
inc
sti
cmp
cs
imulb
pop
in
cli
ret
mov
sarb
sbb
mov
mov
pop
in
into
cltd
jo
adc
add
and
inc
xchg
mov
and
outsl
mov
scas
leave
lea
int
pop
pusha
mov
push
cmp
pop
sahf
pop
cmp
icebp
xor
notb
rclb
out
gs
and
sub
popf
mov
cmp
sbb
fsubrs
fidivrl
sahf
sub
test
cmp
push
imulb
inc
fcos
adc
add
xchg
test
push
mov
sub
fxch
cs
xor
jnp
roll
loopne
lcall
insl
sub
and
inc
pop
or
fistps
push
jae
fidivl
nop
dec
jbe
cs
scas
dec
mov
pcmpeqd
cmpsl
orb
loopne
xchg
mov
fiadds
sbb
mov
pop
out
test
test
repz
int3
sbb
fbstp
ljmp
push
scas
mov
cmpsb
imul
jge
and
mov
cmp
pmulhuw
mov
sbb
dec
push
xchg
in
fsubl
xor
icebp
push
out
pop
sarl
sbb
sti
popa
sub
mov
imul
fcoms
mov
inc
outsb
mov
add
out
andl
inc
aad
xchg
fstpl
sub
push
mov
cmp
mov
les
and
jg
xchg
cmp
iret
scas
sbb
cwtl
bound
adc
dec
pop
mov
xchg
hlt
mov
ret
pop
mov
or
pop
imul
ja
mov
imul
cmpsb
pop
or
daa
xor
push
cmp
sub
test
stc
pop
mov
loop
fcomi
outsb
mov
inc
rcr
jge
into
call
sbb
repnz
stos
xchg
jae
dec
sub
pop
pushf
mov
rol
push
adc
sbb
clc
testl
sbb
addr16
js
cmp
xchg
mov
jae
push
mov
loope
xor
push
fwait
jno
lock
mov
xchg
mov
or
jo
or
and
adc
xchg
pusha
aam
in
ret
push
dec
pop
dec
adc
adc
and
lret
dec
sub
clc
sti
sub
sub
push
ret
outsl
cmpsl
scas
iret
in
jae
mov
rorb
pop
dec
dec
call
fwait
sub
stc
mov
loop
ret
mov
and
test
xchg
fdivr
xor
dec
lods
pcmpeqd
out
and
add
sub
inc
shlb
pusha
sub
sub
outsb
cwtl
in
dec
jecxz
lret
adc
mov
std
jne
adc
add
xlat
lea
adc
dec
push
loopne
out
pop
or
icebp
mov
ffree
adc
xchg
mov
cs
mov
cmc
and
mov
shll
xchg
popa
push
fsts
jle
les
pop
std
pop
sbb
mov
nop
or
mov
cmp
in
inc
fcomps
mov
imul
push
sbb
addr16
cmpb
daa
fistpll
cwtl
jnp
push
xor
mov
adc
cmpsl
pop
mov
dec
int
hlt
mov
dec
shrl
repnz
into
subl
sbb
mov
data16
inc
out
jmp
add
pusha
cmp
sub
fimuls
mov
mov
cmp
pop
inc
push
jo
adc
xchg
mov
mov
sub
insb
icebp
mov
adc
into
sbb
push
xchg
inc
imul
loopne
minps
std
sti
es
rcll
ret
sbb
sbb
push
mov
and
jle
mov
mov
out
xor
sub
roll
dec
mov
fwait
ret
and
mull
jb
cmp
loopne
fs
mov
dec
cmp
xchg
lret
dec
in
icebp
mov
sub
out
push
push
ret
insl
in
ret
adc
jle
add
xchg
movsl
outsl
in
inc
ficompl
jnp
loop
mov
pop
jb
xchg
fisttps
pushf
movsb
stos
xor
sub
imul
and
dec
sub
pop
sbb
inc
lods
inc
xchg
push
test
add
mov
dec
cs
fists
or
adcl
mov
loopne
add
xor
inc
cld
xor
lahf
sbb
mov
inc
fdivp
mov
ljmp
stc
out
ljmp
clc
sbb
pop
and
popf
mov
fwait
sbb
mov
inc
aad
ret
mov
add
add
sbb
dec
cs
idivl
inc
aad
repnz
jne
jne
ss
adc
in
lret
adc
mov
mov
iret
xor
nop
loop
shrb
inc
add
out
add
push
mov
shufps
push
outsb
outsl
sub
stc
pop
das
in
mov
jne
push
in
jl
lods
pop
mov
xchg
dec
and
mov
xchg
or
into
test
add
cmp
test
pop
arpl
shll
movsb
in
mov
adc
scas
in
xchg
xchg
and
xchg
or
clc
imul
ror
ret
cwtl
push
or
mov
and
movsb
int3
push
xor
mov
mov
xor
roll
mov
das
pop
or
pop
sbb
pop
ljmp
scas
cwtl
aam
or
dec
and
jno
xor
dec
gs
cld
loop
mov
adc
decl
mov
dec
and
lea
jne
aam
pop
mov
jmp
out
add
cmp
aad
subl
js
add
fisubrs
jns
test
xchg
lahf
sub
pop
push
pop
jp
shl
xor
push
dec
inc
cmp
push
js
sub
dec
movsl
das
xchg
inc
inc
addr16
mov
jne
sarl
pop
adc
mov
dec
mov
sbb
mov
inc
andb
mov
cmpsl
faddl
sti
je
push
scas
leave
dec
bnd
pusha
add
cs
mov
dec
shll
imul
add
rcr
divl
outsb
jae
aam
pop
cltd
aaa
add
push
push
das
sbb
cmp
jae
sub
lcall
push
jns
int3
clc
push
mov
sar
mov
push
push
sub
xchg
scas
inc
das
mov
test
cmc
cld
fistpll
imul
mov
mov
add
negb
adc
fdivrl
cmp
add
aaa
ljmp
mov
sbb
lock
aam
mov
ljmp
mov
push
out
add
fwait
cmp
mov
sahf
iret
mov
xor
push
mov
cmp
add
cmp
inc
es
dec
cltd
pop
ds
loopne
into
dec
bound
sub
fstpl
leave
pusha
mov
scas
mov
cmpsl
cwtl
rep
mov
cs
mov
repnz
push
xchg
test
andl
incb
xchg
jo
aas
fwait
stos
pop
in
lret
mov
sub
lcall
dec
inc
xchg
cwtl
sub
imul
int3
mov
sub
cld
lret
mov
push
or
cmpsb
sub
dec
jbe
inc
enter
cli
add
mov
dec
jge
cmp
inc
aas
out
mov
out
and
scas
popl
add
pop
and
imul
dec
push
xchg
ja
pop
jbe
jno
xor
sti
sbb
mov
in
jle
pop
xor
dec
int
push
or
jmp
jmp
in
lahf
adc
imul
ja
or
fsubrs
or
push
lock
xchg
mov
lods
xor
inc
lahf
xor
popf
mov
jne
cli
inc
adc
xchg
into
jns
push
add
enter
add
pop
sbb
and
push
pop
mov
out
push
inc
fbld
xor
xor
out
pop
sub
test
push
sub
lods
sarb
pop
xchg
mulb
pop
xorb
std
sub
leave
adc
cltd
subb
xlat
stc
adc
andb
out
add
jno
ss
aaa
xor
movsl
sbb
clc
iret
inc
aaa
adc
dec
in
insb
fdivrp
lock
outsl
push
scas
sti
outsl
mov
in
popf
pop
xchg
daa
pop
add
imulb
pop
loopne
cmc
sub
sub
andl
testb
ja
dec
cwtl
jbe
jge
lock
arpl
test
nop
push
cmpb
stc
push
mov
cmpsl
les
insl
pop
adc
in
pop
jno
dec
fldenv
ret
jl
mov
ljmp
lcall
and
mull
int
test
mov
and
in
dec
pop
sbb
pop
add
addb
push
mov
mov
jecxz
and
jle
ds
mov
fwait
mov
cltd
es
pop
ret
loop
sub
adc
enter
fdivl
adc
xor
push
lods
or
xchg
or
mov
pop
mov
in
inc
push
fstl
rolb
lea
push
xchg
movsb
pop
insb
sub
je
jnp
or
fsubs
fwait
lret
xchg
xchg
mov
xorl
and
repz
mov
cli
push
cmpsl
adc
aam
mov
sarl
or
dec
lods
cltd
ss
mov
dec
inc
sub
aad
lea
jbe
cmp
adc
add
shrb
jo
push
shr
adc
xor
mov
push
or
lods
cmp
dec
cmpsl
aas
stc
lds
push
push
jns
adc
sub
cmp
movsb
ss
sbb
mov
dec
dec
inc
cli
pop
mov
ds
leave
jg
subb
add
mov
or
xchg
scas
xor
cli
addr16
in
nop
ficoml
jb
xchg
fildl
pusha
stc
sbb
test
fisubs
sbb
or
mov
mov
dec
xchg
fucomi
repz
sbb
out
arpl
ljmp
pop
lret
movl
push
mov
test
adc
pop
cmp
xchg
arpl
lret
scas
xchg
sub
lock
aas
jns
or
in
mov
push
aad
push
mov
xor
aas
sub
push
cmp
call
imul
mov
lods
inc
dec
mov
repnz
dec
xchg
or
xchg
push
pop
sbbb
cmp
jmp
aaa
jbe
ja
lods
lods
gs
sub
jp
cmp
mov
push
cmp
stos
jno
mov
jp
cwtl
sub
in
mov
push
xchg
mov
addr16
xchg
mov
data16
cmc
cs
pop
mov
enter
dec
ss
sub
ja
out
addr16
xlat
jg
jecxz
xor
xchg
notb
mov
lahf
es
cs
mov
mov
lahf
pop
inc
jnp
repnz
repz
and
dec
adc
iret
sub
test
push
xchg
insl
loop
movsb
rcr
cwtl
cmp
mov
push
movsb
xor
jge
sbb
jne
pop
sbbl
add
in
notb
pop
and
push
mov
lock
pop
mov
pop
dec
and
xchg
fs
add
xchg
in
and
subb
incl
mov
testl
cmpsb
je
fstl
mov
rep
jb
mov
and
cmp
pop
fisubrs
or
mov
shlb
mov
imul
cmpsl
mov
lods
mov
jb
xchg
or
mov
mov
lret
push
cmp
loopne
outsl
insl
shlb
lods
mov
lods
pop
mov
add
add
and
in
scas
dec
pop
cmp
outsb
lds
test
mov
add
jb
sbb
xor
sahf
fstpl
and
push
or
call
test
cmp
in
cltd
cld
inc
xchg
xchg
jmp
add
pop
loop
gs
ret
fisubrs
cmpb
mov
and
nop
push
stos
fs
xlat
stos
fcoms
cmp
mov
scas
insl
je
adc
mov
cs
sub
stos
mov
add
xchg
add
fsubrp
repz
mov
push
sub
loope
pop
repnz
push
or
test
out
ljmp
dec
mov
inc
inc
xchg
push
mov
jge
mov
stc
aam
fstpl
inc
xlat
jmp
das
leave
fbld
fwait
outsb
sbb
sbb
cltd
adc
movb
pop
and
icebp
iret
shrb
cmpb
mov
cs
rcrb
sti
push
ja
xchg
gs
shl
in
idiv
add
decb
push
xchg
shl
gs
or
pop
inc
aad
add
xchg
xchg
hlt
jmp
and
out
jp
popa
xchg
pop
push
stos
aaa
aas
shlb
imul
push
cmp
ret
and
popa
add
fmuls
jb
aas
sub
jo
sub
in
out
shlb
sub
or
push
dec
sti
lea
cmp
in
or
jno
sub
pop
insb
lock
push
and
pop
addl
add
jnp
fld1
dec
add
ss
jo
add
inc
push
jns
sti
test
test
adc
jae
das
lods
cmp
std
lret
or
ficoms
out
pusha
xor
inc
sahf
sarb
push
add
dec
cmp
cmpsl
xor
stos
jge
mov
das
icebp
cmp
and
and
xchg
or
ds
push
lcall
xor
push
add
rolb
or
fldln2
xor
jae
lret
cmp
sub
and
pop
lea
mov
aam
mov
fs
dec
inc
sti
mov
or
inc
push
fsub
pop
pop
and
adcb
faddl
dec
ja
dec
mov
push
dec
rcl
mov
jbe
mov
sub
lret
xor
adc
adc
push
movsl
std
gs
mov
popf
xor
leave
aas
jae
aaa
popa
fs
iret
negl
stos
ja
jg
out
test
mov
ds
mov
sub
mov
es
setne
pushf
push
lret
nop
in
stc
bound
sahf
push
shrl
jne
push
cmc
jno
adc
push
cltd
jg
leave
adc
cmp
stos
push
stos
arpl
scas
xchg
clc
cli
shl
inc
inc
mov
jnp
jnp
sbb
call
incb
cmc
enter
jno
push
test
movsb
mov
mov
inc
push
scas
scas
jne
dec
ret
mov
sub
movb
cmp
lret
mov
sbb
mov
test
outsb
xor
cmpl
adc
sbb
imul
mov
adc
fwait
lds
ret
std
icebp
shl
sbb
shll
cmp
arpl
add
push
inc
jbe
insl
push
aad
xor
cmp
mov
jecxz
pop
pop
inc
sbbb
jmp
pop
or
loopne
arpl
push
pop
mov
out
lods
adc
fdivrp
or
mov
leave
fwait
mov
mov
sbb
sub
mov
add
ds
add
nop
mov
xchg
xchg
xchg
out
xor
dec
lcall
in
incb
sti
ljmp
in
loop
xlat
test
sub
dec
lods
and
int
xchg
cmpsb
fsts
into
lds
adc
mov
lods
jmp
int3
jo
or
dec
xchg
fcmovnbe
push
mov
add
xchg
xchg
pop
mov
ror
in
gs
jnp
sub
data16
push
rcr
jge
push
jg
imul
imul
loop
les
ja
fdivl
add
ds
repnz
mov
loopne
pop
sbb
push
lea
and
out
and
lea
add
sbb
jbe
cmpsb
mov
fistpl
lea
sub
hlt
sbb
pop
ljmp
repz
xchg
stos
stos
hlt
repz
sub
xor
int3
insl
jae
rclb
or
xor
mov
jg
xchg
popl
sbb
cmpsl
sbb
fnsave
jle
imul
jge
xchg
jecxz
push
cmp
jp
lahf
aaa
xchg
dec
sub
mov
sbb
leave
pop
daa
movsl
ret
mov
push
dec
push
ja
loope
lcall
sbb
ljmp
sahf
loopne
fcoms
mov
es
int3
cs
mov
rcll
int3
cld
ret
popf
or
pop
cmp
sbb
dec
cwtl
lea
cwtl
lock
pop
fnstenv
test
inc
lods
data16
lods
sub
or
in
mov
mov
lret
mov
pop
xchg
pop
adc
gs
das
testb
lods
call
pop
inc
jnp
inc
sbb
in
sahf
pushf
dec
jp
fisttpll
xchg
inc
dec
push
nop
push
jnp
xchg
test
mov
xchg
test
inc
ss
insb
outsb
pop
sbb
js
int3
xlat
adc
dec
xlat
sub
inc
inc
push
in
jo
lret
loope
mov
ret
in
mov
or
xor
push
sub
sub
aam
mov
sbb
xor
dec
mov
nop
xchg
xor
movsb
enter
repz
push
adc
jl
das
jl
divl
scas
sarl
outsb
and
scas
sub
fdivr
fwait
ljmp
loopne
lahf
jmp
out
lret
push
hlt
mov
ja
addl
jl
out
cmpsl
mov
mov
lret
lret
cld
sahf
adc
sub
adc
and
sub
cmp
test
je
adc
and
mov
mov
fistpl
popa
push
lock
add
and
cmc
repz
sbb
mov
loope,pn
fidivrs
pop
aas
ficompl
addr16
mov
mov
lds
in
notb
cmp
mov
xor
insl
sub
xorl
xchg
push
xchg
push
sub
mov
adc
and
aaa
es
fdivp
fmull
daa
xchg
and
test
lcall
test
scas
sbb
stc
loopne
fucom
call
add
jl
cld
adc
mov
pop
dec
mov
push
add
out
cld
jge
test
cld
adc
dec
sub
add
jle
sbbl
or
lds
fcmove
cmpsb
inc
adc
mov
fwait
addl
xor
and
addb
cli
andb
scas
repz
jecxz
pop
test
aam
mov
sbb
ret
nop
xor
test
enter
daa
std
leave
jo
add
mov
and
sub
adc
pop
push
push
or
dec
mov
sub
dec
or
sbb
jge
pushf
ja
dec
notl
mov
enter
sub
jnp
xchg
or
test
test
in
mov
popf
and
mov
sbb
nop
iret
outsl
add
call
add
mov
mov
mov
jns
sub
push
xchg
xor
in
ja
and
pop
cmp
sbb
xchg
jnp
pop
mov
lahf
jl
pop
pusha
xchg
adc
ja
or
cmp
mov
sbb
push
add
push
clc
decb
movsb
fsubrs
jmp
pusha
sub
adc
es
jp
jge
pop
lock
in
fsubr
adc
data16
jge
sub
and
sub
rol
push
mov
or
cmp
fdivl
cmp
cld
cmpsb
cmp
cmc
inc
push
add
mov
xchg
ret
jecxz
stos
popf
dec
das
cli
ljmp
xor
pop
xchg
pop
xor
in
jno
stos
std
pop
int
jmp
mov
mov
and
outsl
es
imul
jb,pt
mov
xchg
ja
xor
xor
loop
jnp
in
and
fstpl
stos
xchg
test
or
push
fwait
pop
jb
mov
std
dec
xchg
jge
push
pusha
adc
mov
push
cwtl
rclb
adc
dec
inc
fsubl
test
in
add
jmp
xor
mov
mov
and
push
ljmp
inc
fs
insb
les
push
jl
xor
outsb
addr16
push
jl
daa
lds
jl
fwait
push
in
clc
jge
cmc
imul
fwait
nopl
sbb
test
std
ret
pop
lock
jae,pt
fld
fildll
pop
dec
jmp
xor
inc
mov
lret
xor
push
inc
pop
outsb
sbb
mov
in
fcoml
mov
fcompl
xchg
and
cli
or
mov
jg
sahf
faddl
iret
add
add
ja
popf
jno
pop
jae
jmp
mov
repnz
pop
push
xor
inc
mov
push
sbb
jl
jnp
pop
jno
sub
aaa
cmp
mov
lods
sbb
lret
add
mov
fstl
lret
xor
fadd
mov
sub
aaa
ljmp
jg
out
xchg
out
aam
push
xor
pop
lds
je
cmp
insb
lret
dec
adc
xchg
dec
in
or
leave
push
or
jae
fidivs
inc
jae
popf
fnsave
out
push
push
aaa
dec
in
ficomps
lea
in
jno
sbb
pop
sarb
ja
sbb
movb
aas
out
or
xchg
mov
adc
xchg
push
sbb
sarb
rcll
fnclex
je
xchg
push
mov
sub
cmpsb
jecxz
cltd
cli
or
test
push
xchg
xchg
push
int
neg
dec
ret
dec
mov
pop
cmp
lds
xor
test
and
cmpsb
lods
mov
pop
out
push
dec
push
xchg
pusha
and
dec
inc
fsubl
push
in
mov
and
cs
and
stc
movsl
sbb
add
movsb
fisubl
lods
inc
leave
jp
push
int3
adc
sarl
imul
pop
push
and
scas
fimuls
mov
fcmovbe
popf
push
jp
cmova
sbb
adc
inc
sbb
or
sbb
fsubs
sub
push
inc
lea
inc
aad
inc
pop
mov
adc
xor
push
lods
loopne
push
fcomps
jnp
xchg
xchg
shlb
call
cmp
call
loop
xor
add
movsb
aam
cmp
xchg
je
mov
xlat
inc
call
inc
jmp
ror
mov
cmp
pop
sub
cmpsl
push
ror
xchg
adc
gs
mov
xor
fimuls
popf
mov
mov
xchg
mov
add
stos
mov
mov
push
hlt
in
sub
test
sub
inc
jbe
xchg
pop
xchg
fldl
lods
out
push
sub
push
pusha
fisubrl
subb
subb
mov
jmp
sub
cmpsb
xor
and
mov
sub
push
mov
xor
les
mov
xor
lcall
jle
lcall
sub
push
adc
mov
adc
cs
pop
data16
cmpb
scas
and
xchg
sbb
es
leave
sbb
data16
ret
mov
movsl
hlt
inc
jge
cmp
out
jbe
xor
jne
sub
test
sahf
mov
icebp
push
jbe
movsl
lock
push
or
inc
jbe
sbb
les
mov
mov
imul
ds
test
mov
call
push
ret
jecxz
xchg
push
xchg
cmp
push
lea
cmc
scas
jge
lret
add
fwait
jmp
mov
mov
ds
out
push
adc
adc
and
and
jle
sbb
or
in
cmpb
orl
cmpsl
int3
mov
int3
adc
cmpsb
mov
adc
fistl
rcll
stos
lret
sub
add
outsb
aam
inc
mov
mov
idivb
xchg
addr16
dec
int3
pop
inc
int
lea
adc
icebp
pusha
jge
mov
inc
dec
mov
out
sbb
std
add
xor
sti
pop
inc
mov
in
lds
cmc
xchg
loopne
push
lret
mov
outsl
xchg
xchg
pop
movsl
mov
pop
sub
add
jecxz
filds
jno
dec
push
mov
pushf
xor
ss
adcb
ds
jbe
popf
xchg
cmp
gs
inc
je
daa
sbb
arpl
dec
or
dec
push
and
les
pushf
scas
sub
jb
pushf
in
mov
js
dec
lahf
stos
cmc
pop
pop
pushl
mov
imul
mov
push
cmp
dec
aaa
inc
shll
jne
and
xchg
rorl
call
pop
cli
in
sbb
sahf
in
pop
ret
mov
lahf
in
cs
pushf
inc
cmp
cmp
jne
dec
mov
xchg
test
xor
xlat
mov
stos
add
subb
mov
mov
mov
xor
int
lahf
ljmp
xchg
cwtl
loope
insl
and
cltd
into
int
out
xchg
popf
jbe
loope
aas
dec
ss
sti
or
xor
xorl
bound
cmpsl
gs
push
dec
cld
jo
mov
test
inc
bound
mov
dec
sti
and
ret
mov
fcompl
cmpb
sub
jecxz
mov
jnp
jo
out
in
dec
fxch
or
idivb
cld
rcll
aad
enter
aaa
int
imul
shll
mov
lret
adc
cmpsb
cs
sti
mov
fisubrs
test
int
pop
ret
mov
cmpb
jge
dec
frstor
int3
and
jecxz
mov
adc
daa
out
in
jae
cmp
mov
loopne
xchg
dec
sub
loopne
sbb
shlb
in
rcrl
pushf
mov
pushf
add
dec
in
jno
jo
pop
xor
or
loopne
cs
xor
js
push
in
mov
lcall
daa
cld
pop
addr16
scas
jmp
add
loopne
outsb
jmp
push
and
jle
adc
lods
ljmp
xchg
jge
mov
dec
shl
mov
daa
fcmove
cli
cmp
bound
sub
mov
lret
cwtl
fs
fildll
scas
scas
dec
in
jno
push
test
cmp
sbb
leave
push
stos
hlt
addb
repz
mov
inc
cmp
dec
pushf
out
idiv
ljmp
scas
and
dec
sub
jno
inc
sarl
xchg
sbbl
and
incl
and
ljmp
fistpll
mov
aaa
cmpsl
or
mov
jge
or
jle
cmp
cli
push
and
fstpl
mov
insb
loop
and
sahf
cmpsb
cld
ljmp
into
shrl
nop
mov
in
rcll
mov
xchg
dec
sub
into
pusha
cmp
xchg
mov
fcmovbe
xchg
xor
cmp
out
mov
jmp
mov
xchg
lea
dec
int3
dec
repz
inc
push
xchg
xchg
and
add
push
cmpsb
or
aaa
sbb
lret
mov
clc
jmp
adc
push
jo
lds
inc
mov
xchg
cmp
mov
fidivrs
out
data16
shlb
cmp
outsl
mulb
inc
rcrb
push
cld
out
aad
dec
inc
jp
mov
rol
movsb
pop
sub
inc
cltd
pusha
in
xchg
and
frstor
sub
cmp
jge
push
repnz
repz
out
ds
mov
jle
lret
sub
movsl
and
push
lret
insl
adc
das
lds
or
arpl
pop
mov
xchg
jae
pop
stos
xor
mov
jecxz
push
out
sub
push
add
pushf
test
mov
nop
cmpsb
not
lods
push
push
cltd
insb
mov
ret
mov
fstpt
sub
pop
push
rol
iret
cwtl
push
iret
loop
aam
dec
xor
xchg
mov
gs
mov
int3
adc
lret
mov
inc
lods
push
std
pushfw
in
sbbl
or
loope
repnz
cltd
int
xlat
sub
sar
pop
std
enter
movsb
loop
and
cs
ss
and
pop
clc
test
dec
cmp
xchg
popa
dec
or
clc
data16
stc
jb
sbb
mov
add
cmp
mov
xor
push
jns
mov
in
fdivrs
les
xchg
jg
push
push
push
js
insl
dec
cli
daa
pop
daa
add
scas
jne
cmp
mov
and
xor
jnp
cmp
aam
ret
xchg
iret
push
repnz
faddl
mov
ss
subb
mov
cmp
insl
add
xchg
and
dec
adc
in
mov
in
repz
adc
add
mull
mov
xor
sub
cwtl
xchg
out
fwait
sbb
cmp
jnp
in
fistps
sarl
jne
es
push
dec
gs
cmc
outsl
mov
pusha
fwait
mov
mov
imul
sbb
nop
pusha
in
or
sub
push
fisttpll
cmp
or
mov
xchg
inc
frstor
inc
jae
ficomps
repnz
sbb
inc
fadds
jae
arpl
imul
dec
add
dec
icebp
repz
or
xor
dec
sarl
icebp
outsl
rorl
shll
fisttps
push
loopne
enter
mov
push
mov
enter
push
loop
je
cld
pop
decl
push
movsb
loope
push
xor
dec
push
mov
test
rcl
daa
rclb
test
mov
pushf
mov
xchg
in
stc
popa
das
js
mov
test
sbb
imul
outsl
movsl
fstl
scas
imul
jnp
add
gs
mov
aam
fwait
movsb
mov
ss
loope
add
push
mov
or
push
in
cmp
fists
pop
popa
pop
insb
iret
gs
pop
fdivl
lock
xor
js
cltd
nop
aas
imul
shrl
fnstenv
es
fwait
in
iret
lret
movsl
lret
addb
lret
call
xor
sub
pushf
jle
sahf
mov
fwait
js
inc
scas
les
pop
mov
out
or
das
sti
das
mov
sub
push
push
movsb
mov
add
xor
insb
push
dec
cmpsl
mov
mov
push
pushfw
inc
pushf
jp
test
adc
in
fs
pusha
loop
mov
mov
fnclex
pushf
andb
xchg
dec
mov
dec
je
ret
test
sbb
mov
mov
pop
cwtl
push
and
mov
sub
push
test
aam
and
xchg
or
mov
inc
inc
xor
cmp
adc
pop
and
cmp
jae
xchg
faddp
and
jl
adc
or
dec
sub
test
mov
sbb
xor
pusha
into
arpl
lcall
ficomps
mov
xchg
push
loopne
jb
mov
mov
in
push
aad
pop
out
ret
repnz
mov
xchg
loopne
dec
mov
adc
or
lock
aas
xor
adc
xchg
push
cmp
movsl
ljmp
je
mov
mov
add
insb
adc
mov
pushw
cmp
mov
andps
mov
mov
shll
int3
xchg
pushf
or
inc
sbb
dec
cli
add
jnp
pop
adc
push
xchg
mov
lret
inc
pop
bsf
out
and
jnp
outsb
loope
out
mov
ljmp
test
or
cmp
and
lds
cmc
xchg
popa
push
mov
xlat
enter
pop
out
aam
loop
inc
ds
cmp
mov
pop
pop
or
add
push
mov
imul
or
push
test
jl
addr16
jge
fidivl
add
pop
sub
mov
imul
arpl
add
inc
shll
pop
test
movsb
inc
xor
sub
cld
lcall
fld
pop
dec
mov
incl
xorb
mov
mov
movb
iret
push
add
xor
inc
sub
sub
frstor
push
jmp
jno
jnp
cld
xchg
jg
xor
push
test
mov
icebp
inc
xor
push
aam
outsl
hlt
xchg
in
sti
into
incl
mov
lods
push
aaa
and
in
mov
inc
popa
cmp
addr16
dec
btr
jne
sti
andb
outsl
out
and
sub
clc
popa
xchg
incb
rcrl
jge
pop
aad
dec
add
arpl
or
out
jge
lcall
sub
jp
pop
mov
mov
push
addr16
cmpsb
push
pop
and
in
adc
mov
cmp
repz
xlat
popa
sbb
insb
in
pop
pop
jle
inc
cltd
jp
sbb
jmp
xorb
adc
popl
enter
aas
movsl
jno
fisttps
pop
mov
out
dec
sub
jb
push
xlat
dec
adc
les
stos
xor
shrl
push
ljmp
fidivs
mov
cmp
xor
mov
fmuls
and
mov
and
xchg
ret
testl
in
mov
pop
xor
sti
scas
fstl
mov
sub
or
dec
pop
ja
cmp
xor
pusha
sbb
jl
dec
cmp
add
jno
inc
jmp
into
fdivrs
gs
and
arpl
insb
push
das
jecxz
fstps
mov
das
adcb
cs
mov
xor
aad
das
jns
cmp
outsl
inc
loope
out
mov
mov
pop
xchg
psrld
jg
xlat
pop
xor
shrl
repz
mulb
shll
das
jecxz
addl
mov
sub
arpl
push
dec
push
pushf
rcr
jbe
test
xor
inc
lret
or
mov
add
jne
mov
inc
mov
out
jmp
add
mov
sbb
test
mov
jge
jo
shr
sbb
ret
idivb
into
cmp
ret
mov
mov
xchg
loope
ljmp
nop
add
jg
add
repnz
or
jl
stos
cmp
and
or
or
xor
jmp
and
imul
lea
decb
cmp
push
mov
pop
fnstsw
xchg
mov
mov
call
xchg
clc
mov
sub
pop
or
test
jno
xchg
jmp
fucomp
cs
mov
js
push
rcl
xchg
test
in
jg
iret
outsl
push
adc
jnp
inc
cs
xchg
sub
inc
xor
aad
cld
outsl
dec
cmpsb
mov
fucomi
mov
movsb
cmp
inc
movb
cmp
ficomps
test
ror
dec
inc
mov
push
add
lahf
or
rolb
pop
lea
pop
bound
fstpt
sarl
pop
and
adc
xor
adc
fwait
and
or
xor
movsl
lds
push
jbe
scas
inc
or
xor
pop
jp
enter
mov
pushf
lahf
test
and
add
out
mov
sbb
mov
push
nop
sbb
and
ss
dec
sub
inc
ljmp
cli
icebp
mov
cs
sbb
push
mov
fsubrp
enter
lea
call
lret
adc
popf
fcom
sbb
adc
sub
jnp
dec
xor
mov
add
push
cltd
or
ss
repz
shl
sbb
movsb
sbb
jmp
sti
lret
fimull
sub
pop
pop
outsb
nop
aas
movsl
ljmp
lret
out
cmp
pusha
dec
xchg
xchg
sbb
add
rclb
and
out
clc
mov
out
int3
hlt
cmp
mov
dec
and
lcall
icebp
add
lret
xchg
inc
out
sbb
mov
popa
pop
dec
rcrb
xlat
iret
jnp
outsb
int
cwtl
or
and
outsb
lds
pop
popa
sbb
outsl
and
inc
aad
and
or
xor
mov
scas
fldl
jno
mov
jno
sti
cld
push
adc
sub
sub
and
es
int3
loop
jbe
andps
sbb
sub
mov
data16
out
arpl
mov
fsubrs
xor
pop
fdivs
addr16
mov
fisubs
dec
hlt
les
popa
cmp
scas
inc
xchg
pop
and
adc
popa
adc
or
adc
fstpt
and
and
jmp
std
dec
mov
fsubs
popa
stos
and
cmp
in
mov
or
inc
adc
popf
jbe
dec
ret
xor
daa
cmp
and
shlb
movsb
inc
iret
leave
fnstsw
int
inc
pop
xchg
imul
icebp
mull
enter
xchg
or
jle
push
sahf
xchg
bound
cmp
jmp
add
pop
mov
fdivrl
cltd
mov
mov
pop
test
pop
mov
cli
or
cmp
imul
imul
stos
insl
mov
push
xor
mov
jns
jbe
cmp
and
lock
pop
faddp
mov
xor
loopne
int3
mov
pop
xor
jnp
test
sbb
inc
push
test
test
loope
jno
shll
adc
push
popf
inc
in
pushf
test
xor
movsb
mov
mov
jl
sbb
int
fiadds
nop
es
imul
fnstsw
mov
insb
enter
pushf
cmpsb
scas
xor
dec
lods
push
sub
scas
aaa
sub
sbb
adc
faddl
pop
out
dec
pop
mov
jle
xor
repz
push
mov
cmpsl
in
add
adcb
ret
es
adc
xchg
xchg
loope
inc
popa
push
pop
push
nop
inc
test
leave
in
lea
sbbl
sub
bound
fwait
inc
xor
mov
addr16
jecxz
aam
mov
push
mov
add
cmpsl
sub
ret
fadd
mov
movsl
leave
sub
ret
cmpsb
je
sub
pusha
push
lcall
fwait
adc
out
or
xlat
aas
pop
das
xor
push
inc
lods
xchg
bound
push
and
pusha
mov
outsl
movb
pop
pop
jmp
in
cmp
xor
stos
push
roll
iret
and
clc
call
fcmovnb
mov
pop
fidivrs
jmp
xchg
aad
fs
xchg
lds
cltd
movsb
aaa
mov
enter
or
lret
daa
add
add
fisubrl
xor
push
sub
mov
cmc
stos
sub
and
and
out
cmp
mov
xchg
ret
pop
in
ljmp
loop
mov
cwtl
inc
xchg
sub
adc
fistl
mov
jno
iret
imul
cmp
stos
or
xchg
out
mov
hlt
pop
push
imul
stc
repz
mov
aam
sub
lds
cmp
stos
lahf
lret
pop
std
mov
or
sub
sub
fcomps
xchg
pop
inc
dec
mov
dec
or
insl
sub
pop
std
in
popf
lock
sub
or
cmp
insl
std
mov
ljmp
arpl
sarl
sub
shrl
test
jl
icebp
mov
pushf
adc
arpl
loopne
movsb
mov
inc
fmull
mul
rcrb
xor
push
and
jp
daa
cld
iret
hlt
lea
inc
jae
adc
fstp
jg
add
dec
xchg
dec
mov
inc
mov
xor
mov
jno
cmc
and
lea
jg
or
ss
cli
mov
test
pop
pusha
mov
jb
xchg
sub
mov
insl
mov
xor
sbb
mov
dec
mov
xchg
test
subl
or
inc
xchg
js
mov
and
sub
or
fs
mov
xchg
nop
movsb
pop
stos
add
imul
ret
mov
cmpsl
push
mov
dec
pop
out
push
pop
inc
xchg
dec
mov
scas
std
jp
leave
adc
xchg
mov
jae
push
insb
pop
leave
rcrl
daa
std
lcall
or
fdivl
aam
add
pop
fstps
cli
out
test
mov
gs
jno
mov
flds
addr16
push
shll
add
ja
sbb
mov
jmp
or
jb
out
pop
jno
loope,pt
ret
jae
pop
lret
mov
cmp
cwtl
or
lds
scas
mov
loopne
xor
subb
punpckhdq
jbe
icebp
int3
jae
das
rcl
xlat
adc
std
adc
int
in
das
aas
jp
xor
add
mov
cmp
pushf
inc
dec
loop
das
lea
pop
adc
jns
or
test
inc
faddl
fwait
and
lods
pop
scas
jns
xor
push
push
dec
ljmp
clc
jns
or
cmc
rorl
cmc
aas
xchg
xor
xchg
xchg
in
fdivs
lea
jb
hlt
adc
cmpb
adc
adc
aam
add
sub
ss
stos
mov
mov
lods
jl
sahf
mov
test
push
rolb
int
mov
sbb
mov
test
jns
incl
mov
in
add
stos
xchg
sbb
adc
addr16
shlb
cmpsb
adc
int3
sub
popf
out
sgdtl
lahf
cmp
sarb
mov
adc
hlt
scas
lret
testl
cwtl
fdivrl
or
inc
xchg
rol
shll
pop
dec
stos
sub
jno
mov
lret
jl
out
push
daa
add
cmp
lods
imul
sbb
jle
lods
fdiv
fdivrl
pop
icebp
jne
stos
movsl
in
sub
mov
mov
sbb
xchg
cmp
mov
inc
wbinvd
cltd
leave
xchg
jmp
mov
loopne
fstpl
jb
pop
fdivrs
push
sub
out
mov
pop
js
mov
in
nop
cltd
shlb
xchg
add
nop
mov
sbb
push
xor
adc
sub
sbb
aaa
or
add
xchg
mov
scas
mov
xor
xchg
xor
dec
ret
stc
test
loope
xchg
aad
movsb
js
pop
fcompl
add
dec
jb
insb
adc
xchg
and
aam
int3
cmp
int
cmp
push
xor
es
call
aam
push
adc
jg
add
mov
test
adc
lret
mov
add
push
push
fcmovnu
mov
stos
aas
inc
movsl
cmpsl
scas
aam
out
leave
xchg
addr16
add
cmpsl
in
or
repnz
hlt
aad
jns
outsb
pop
negb
or
pop
push
popf
nop
xor
aad
dec
push
xor
mov
pop
ret
icebp
sub
inc
or
in
add
or
in
add
aaa
mov
out
cmp
mov
lds
ret
sub
jo
cmp
ljmp
inc
sub
repz
adc
leave
movsb
or
rcrb
mov
aam
cmp
mov
inc
inc
mov
push
ljmp
inc
jl
push
aam
scas
fs
adc
bound
mov
xor
call
push
cltd
inc
mov
adc
int3
cltd
sbb
in
fisttpl
jbe
sub
inc
in
cmpsl
adc
pop
loope
sub
jmp
sub
inc
push
or
mov
in
sbb
mov
fildll
mov
out
dec
lock
dec
shlb
cvtps2pi
cmp
pop
int3
jge
cs
mov
clc
es
in
repnz
in
sti
dec
or
cmpb
xor
cmpsb
cli
imul
sbb
inc
jg
inc
mov
lods
pop
sbb
push
cwtl
push
mov
cmp
test
add
sub
jno
pusha
frstpm(287
lret
xchg
test
or
ret
pop
xchg
dec
mov
in
aas
mov
and
aam
bound
imull
adc
cmpsb
dec
and
xchg
cmpsl
dec
add
cmp
mov
aas
call
jnp
cmp
push
or
mov
and
and
test
stc
jmp
push
mov
clc
jp
xor
hlt
stc
in
push
push
sahf
sbb
idivl
test
xchg
in
jno
inc
cmpsl
xor
loop
jmp
ret
push
xor
leave
mov
data16
mov
pushf
sbb
lret
lock
loopne
jecxz
xchg
sti
jl
or
fs
fisubrl
or
xchg
pusha
cmc
ret
lock
repnz
pop
repnz
push
in
adc
fbld
adc
xor
je
xchg
std
scas
xor
adc
jns
enter
xchg
in
lahf
xchg
xchg
enter
das
pop
xor
ljmp
jns
push
xlat
addr16
data16
test
mov
int
pop
mov
cmp
xchg
mov
cmp
cs
lahf
mov
adc
add
scas
loop
pop
mov
adc
addr16
jmp
and
jo
mov
daa
daa
inc
movsl
xchg
mov
sbb
push
and
sahf
and
adc
cmp
mov
gs
rcll
jo
sarl
sub
and
in
sub
jno
fcmovb
outsl
cmp
jo
mov
mov
or
xor
pop
mov
mov
push
test
ret
push
fstpt
xlat
nop
sub
pop
ret
pop
sub
and
popa
xor
push
and
stos
test
adc
ret
cmpsl
add
inc
jnp
adc
divb
out
jbe
jp
scas
push
pop
push
and
in
cmp
dec
xchg
xchg
pusha
add
aad
fimull
push
out
xchg
mov
imul
inc
pusha
cli
mov
lahf
bound
fsubrs
cmc
aam
shl
mov
xlat
std
add
mov
push
push
fdivl
push
test
dec
mov
mov
push
push
inc
arpl
and
xchg
shlb
dec
push
stos
xor
in
cmp
sbb
adcb
push
sbbl
mov
jmp
cwtl
repz
mov
shrb
xor
sub
data16
arpl
nop
xor
mov
out
inc
mov
ljmp
cmc
add
push
xchg
inc
xchg
in
in
fsub
inc
loope
mov
dec
jle
push
sbb
or
es
adc
popf
in
inc
push
mov
add
pop
in
pop
inc
mov
std
push
lcall
test
adc
fists
jecxz
pusha
xchg
movsl
repz
sub
int3
jae
int
lahf
mov
mov
out
stos
data16
aam
dec
mov
mov
iret
repnz
scas
cld
das
push
and
sub
pop
sub
mov
mov
sbb
add
std
jns
jne
xor
and
aas
or
add
jno
mov
cmp
mov
push
popf
jmp
daa
push
pop
icebp
leave
test
sbb
cltd
mov
fsubl
add
les
push
xchg
mov
cltd
cmp
mov
fcompl
popf
ds
pop
rorl
lahf
subl
and
and
push
arpl
adc
shrl
cltd
xchg
jecxz
mov
into
dec
jl
stos
xor
hlt
jo
sbb
jae
push
jno
lock
cltd
sub
inc
out
mov
xchg
sub
jl
jmp
push
xor
cmp
loop
je
dec
aam
dec
call
ds
flds
xor
cmpsl
or
add
addb
inc
push
addr16
jge
and
in
orl
pop
adc
sub
popa
cmp
jne
sub
inc
loop
xchg
repnz
mov
popf
jecxz
clc
gs
xchg
popa
jns
iret
aas
inc
push
fisubl
lock
push
fists
jb
jno
fcmovnbe
repz
jecxz
sahf
cld
pop
rorb
dec
fs
jge
lock
add
inc
in
bound
or
adc
fwait
add
dec
xchg
repnz
adc
data16
jle
and
insb
push
sub
xor
adc
xor
lock
imul
cmpb
or
icebp
push
cld
pop
jecxz
sarl
or
inc
dec
fldcw
dec
lret
cmp
pusha
outsl
push
cmp
into
data16
dec
loopne
cmpsl
mov
call
or
fadds
pop
mov
pop
jl
vpaddw
push
pop
mov
jae
inc
test
into
sbb
ss
dec
clc
push
mov
ljmp
jno
jge
dec
aad
scas
or
push
out
sahf
testb
mov
lahf
push
xchg
sub
fcompl
xor
sub
loop
call
xchg
repz
cmp
jg
div
inc
lret
mov
xlat
scas
inc
jnp
or
and
adc
ljmp
roll
mov
inc
cmpsb
imul
gs
lock
fdivrl
pop
pop
js
addr16
lcall
int
push
add
and
and
push
mov
loope
js
cltd
addb
push
xchg
popa
sahf
ret
roll
inc
or
cmp
lahf
or
push
rcrl
pop
fucomp
xor
imul
sarb
sub
jb
and
mov
movsl
scas
dec
cs
gs
orb
and
out
out
clc
outsb
mov
popa
dec
cs
rorl
sub
cmp
call
out
mov
addb
imul
jae
pop
mov
xor
fcmovb
stos
add
test
imul
mov
and
and
movsb
mov
lds
pop
and
mov
pushf
sbb
faddl
pop
pop
mov
adc
fadds
mov
inc
leave
dec
loop
in
fimuls
iret
cltd
lret
lock
addr16
cmp
pop
hlt
repz
aam
pop
jne
mov
sti
repz
add
out
pop
std
ja
test
push
movsb
xchg
nop
lret
mov
push
mov
mov
out
rorl
inc
ljmp
fisubrl
jbe
jge
mov
aas
mov
loop
xchg
pop
movsl
in
and
ret
mov
mov
or
jns
in
ljmp
pop
push
xor
ljmp
lods
adc
jbe
out
in
int3
dec
sti
ret
xchg
pop
loope
cmp
sub
movsl
ljmp
ret
cmp
sarl
cltd
pop
and
push
mov
and
jl
gs
and
push
cmpl
and
in
push
test
mov
mov
pop
push
sub
movsl
mov
xchg
out
mov
paddsw
out
mov
aas
sub
jp
mov
sub
push
jmp
addr16
jo
stos
cmp
outsl
sbb
add
jle
or
mov
mov
mov
sbb
cmp
inc
lcall
dec
insb
seto
in
out
jno
mov
std
popa
lods
adc
cmp
mov
cmpsb
mov
xchg
jb
jns
mov
cli
into
xchg
test
lahf
out
js
ss
cmp
mov
cmpsb
fwait
outsb
push
xor
inc
test
dec
repz
mov
push
pop
adc
adc
jbe
xchg
jle
idivb
push
pop
mov
jle
and
adc
dec
enter
mov
flds
add
mov
jnp
loopne,pn
andb
movsl
lea
aad
clc
push
mov
cmpsl
jae
xor
dec
scas
cli
push
add
loopne
shrl
lock
hlt
ffree
arpl
jecxz
enter
mov
es
sets
sub
jg
sarb
push
loopne
or
xchg
mov
cmp
add
xor
and
xchg
mov
insb
lret
mov
shll
out
sbb
xchg
sti
cwtl
inc
test
lret
dec
adc
xlat
jmp
test
leave
mov
shll
sarb
fcompl
int3
mov
lds
sub
cmp
std
insl
xchg
cmp
pop
in
mov
lcall
int
cltd
mov
lcall
pushf
hlt
movsl
ret
std
fistl
mov
out
and
jl
call
mov
push
jnp
pop
jle
divb
sbb
lcall
xor
insl
ss
loope
and
mov
cmpsl
js
lcall
call
andl
movsl
cld
jno
mov
xor
out
imul
ds
cmc
sarl
sub
arpl
lea
and
cmpsl
adc
dec
mov
nop
sbbb
sbb
sbb
je
or
aam
lret
test
jno
imul
subb
sbb
push
and
repnz
xor
addr16
rcrl
hlt
push
inc
shlb
cmp
test
mov
dec
push
fcmovu
inc
mov
mov
pusha
int
popa
loop
es
lods
pop
lds
faddl
lods
stos
pop
xchg
push
sub
lds
sbb
call
ss
inc
repnz
push
sbb
mov
aad
cmp
mov
stos
xor
aas
fcmovb
lret
mov
sub
aaa
cld
mov
or
dec
outsl
aas
mov
hlt
jl
fs
pop
adc
repz
in
lret
cli
mov
lods
pop
push
rclb
xchg
lret
sub
cmc
out
xor
repz
mov
pop
inc
cmc
xchg
push
cs
xchg
out
xor
mov
inc
add
pop
xchg
mov
in
popa
test
ficomps
xor
out
dec
dec
repz
mov
add
fimuls
leave
lea
or
mov
fs
ret
js
mov
inc
andb
add
xchg
sub
mov
bnd
sub
loop
jp
es
ds
sbb
push
jae
dec
mov
stc
loopne
call
and
in
in
fcomps
dec
jp
mov
inc
call
sbb
aam
or
dec
rcrb
pop
dec
iret
push
popf
cmpsb
outsl
notl
aas
daa
fsubs
dec
xor
ret
mov
gs
push
sub
inc
cmpsb
sbb
mov
test
imul
or
sbb
mov
cli
sahf
sub
dec
inc
iret
sub
das
andl
mov
aaa
in
in
sbb
js
push
or
xor
imul
into
jns
mov
sub
push
sub
pop
fcmovb
jmp
imul
adc
addb
jo
test
pop
clc
les
xor
xor
and
push
cmc
mov
dec
test
fcom
bound
pop
mov
mov
mov
inc
mov
fldl
in
xor
ret
push
enter
ds
ud2
add
cltd
fsts
ret
das
pop
mov
xchg
lret
daa
wrmsr
jo
fwait
push
cli
mov
in
mov
fisttps
pop
imul
mov
lret
inc
cmp
imul
and
out
call
adc
imul
dec
and
sub
inc
xor
fdivs
mov
mulb
jae
insl
sbb
mov
and
xchg
imul
inc
inc
sub
lock
mov
or
inc
ret
aam
out
mov
push
add
mov
js
mov
pop
addb
sahf
inc
in
repnz
sub
cli
scas
lahf
push
pusha
sarl
out
out
sarb
pop
les
and
and
pushl
adc
add
mov
xor
loope
leave
sub
outsb
push
mov
in
mov
push
adc
lcall
inc
int
xchg
outsb
divl
ja
jl
dec
xchg
and
lahf
xchg
cwtl
add
fistpll
lds
push
pop
sub
and
call
test
scas
push
into
imul
pop
sub
nop
sarb
cwtl
sub
xor
jne
lock
mov
adc
mov
aas
sub
sbb
in
dec
jo
dec
mov
pop
mov
mov
dec
xor
movsb
fsts
loopne
push
mov
in
lret
and
repz
loope
ss
gs
jne
mov
les
pop
ret
push
push
mov
adc
lds
enter
sbb
xor
jmp
add
fmuls
jg
pop
adc
inc
xchg
cmp
adc
mov
and
jno
xchg
ret
mov
mov
mov
jno
mov
scas
gs
loope
pop
dec
negb
test
cmp
xchg
push
mov
push
pop
and
push
stos
jl
shll
sarl
push
lods
push
sub
dec
test
loope
repz
cltd
or
pop
ja
push
adc
jle
add
fs
in
lods
int3
addr16
inc
fldt
inc
data16
mov
or
daa
xor
jmp
sbb
pop
jmp
jnp
cmc
mov
lods
es
bnd
mov
mov
lds
ja
mov
imul
jne
dec
inc
shrl
stos
ss
push
addb
sub
test
fs
cltd
push
jge
outsb
aaa
cmp
cmp
nop
pop
ja
stc
xchg
outsl
sbb
leave
jge
fdivrl
mov
mov
fdivrl
repz
xchg
dec
or
leave
mov
repnz
push
pop
outsb
jg
sti
int3
adc
aam
je
jle
loopew
daa
mov
stc
cmp
hlt
lods
add
push
lods
add
insb
in
cmc
gs
add
jbe
scas
jmp
add
ss
iret
sbb
jmp
icebp
mov
mov
cs
into
cli
dec
outsl
xchg
test
inc
test
mov
mov
add
lock
in
xchg
add
dec
daa
mov
lea
lret
pusha
jb
jg
jb
jnp
aam
mov
psubusw
mov
pushf
cmp
lods
sbbl
rolb
out
add
xchg
imul
jmp
pop
ret
lahf
pop
dec
mov
test
out
jmp
subl
push
stc
fwait
out
push
xchg
inc
or
cmc
mov
sub
fstps
pop
jo
or
or
mov
mov
icebp
fiaddl
cltd
sbb
insb
mov
jne
adc
and
dec
rorb
aam
pushf
push
pop
test
adc
ljmp
fwait
divl
mov
pop
sub
or
mov
faddl
push
mov
sbb
jo
jmp
popa
sub
pop
out
adc
dec
jns
stc
cmp
pop
cs
stc
jmp
jge
jbe
arpl
lret
clc
arpl
push
sbb
xor
movsl
jle
pop
add
push
xchg
push
adc
lds
and
adc
xor
int3
sti
pusha
imul
pop
aaa
outsl
stos
or
roll
add
adc
pushf
push
mov
mov
ljmp
pusha
mov
scas
out
int3
repnz
out
jp
push
jl
shl
scas
mov
andl
mov
jg
movsl
cmpsl
cmp
push
popa
push
aad
int
inc
xor
xchg
in
jo
mov
loopne
das
mov
outsl
je
or
mov
insb
flds
fsubl
push
or
frstor
in
jecxz
nop
cmp
mov
add
cmpb
or
es
push
idivl
mov
fadds
xor
dec
xchg
es
dec
mov
add
cmc
inc
insl
sbbl
dec
negb
movb
push
lea
test
cs
or
std
jge
xchg
fs
push
test
cli
xlat
lock
push
pop
insb
pop
aam
push
fildl
loope
jb
cmp
out
inc
stos
adc
lea
test
mov
sbb
push
ror
and
mov
mov
inc
cmp
mov
or
call
add
stos
sbb
xchg
lds
movsl
pop
out
lahf
stos
ss
xorl
mov
mov
into
xor
test
mov
sub
cmp
push
nop
negb
jp
xchg
xor
xlat
add
mov
and
xor
leave
mov
les
dec
pusha
cwtl
sti
cmp
js
pop
mov
ja
xchg
in
ja
dec
repz
mov
cld
cli
aam
dec
mov
mov
gs
push
popf
xor
mov
push
sahf
or
mov
xor
add
push
push
or
es
pop
imul
pop
in
pop
push
cmp
fwait
add
scas
mov
xor
mov
jbe
cmp
xor
mov
int
mov
subl
lret
fs
lret
aam
in
fwait
popa
push
popf
jge
incb
mov
mov
pop
xor
mov
aam
push
cmp
mov
xchg
jne
cltd
inc
xor
push
in
stos
and
push
xor
in
add
sti
test
inc
pushf
jg
and
dec
rcr
and
leave
xor
fisttpll
jns
divl
jno
out
cmp
sahf
fisubrl
dec
out
outsl
clc
xor
push
and
cmpsb
movsb
jns
push
adc
es
pop
int3
aaa
dec
sub
jo
lds
mov
xor
push
dec
testl
mov
xchg
jp
inc
and
mov
jge
mov
int3
lods
inc
std
sti
into
xor
mov
inc
cld
cmp
sub
clc
dec
cmp
ljmp
cmp
jbe
adc
dec
sahf
dec
ds
shl
rorl
xchg
add
popa
jp
test
dec
xor
std
jecxz
sti
jno
ss
fildll
bound
jp
push
jo
dec
sub
cmc
sbb
dec
adcb
inc
pushf
test
fstp
inc
test
les
lods
out
test
sub
dec
jae
inc
jmp
aam
cmc
or
cmp
add
push
iret
jle
and
xchg
sub
cld
cmp
xchg
je
xchg
lods
sub
xchg
xorl
shl
mov
negl
pop
sub
push
inc
shlb
data16
mov
dec
jmp
insl
stc
mov
roll
add
popf
and
outsl
dec
ljmp
stos
pop
add
scas
popa
and
ret
cmpb
xchg
jmp
stc
jp
repz
pop
nop
mov
sub
push
daa
mov
fcomi
mov
mov
sbb
pop
in
es
in
fsubrl
push
das
mov
mov
loope
dec
int3
aaa
cmp
pop
mov
sub
scas
mov
xor
sarb
ljmp
push
loopne
jl
scas
xlat
sbb
xchg
notb
movsb
xchg
sbb
pop
xchg
mov
dec
xor
shlb
jnp
lea
pop
fimuls
stos
xchg
adc
adc
sub
dec
xchg
jmp
data16
daa
adc
or
mov
fimull
dec
mov
rorb
out
pop
enter
or
jle
pop
jae
add
dec
lock
and
adc
mov
pop
mov
arpl
ss
xchg
jbe
xor
ret
aaa
jmp
cwtl
shlb
adc
lcall
mov
fs
mov
xor
xor
aaa
fsts
dec
test
push
cmpsb
repnz
repz
and
ret
imul
xor
imul
loopne
iret
adc
roll
out
mov
pop
jmp
or
mov
pop
sbb
dec
scas
outsb
push
mov
pop
stos
mov
loopne
rcrl
dec
pop
jo
in
in
adc
xor
or
jge
outsb
arpl
mov
push
jmp
or
jp
sbb
mov
ds
mov
dec
jmp
jle
into
int3
popf
jge
in
bound
rolb
dec
leave
xlat
push
fwait
and
loope
or
sub
shll
push
fistl
push
add
jle
in
lock
les
jne
sub
inc
inc
testl
fdivr
or
lret
pusha
fwait
test
fwait
and
xor
das
mov
dec
xchg
mov
xchg
mov
jmp
dec
sub
fstpl
mov
jae
sti
add
test
cmpsb
ficomps
pop
ficomps
jnp
fwait
mov
mov
or
push
xchg
sub
sub
or
lods
xchg
or
ss
je
xor
sbb
rcll
lods
std
mov
test
push
inc
stos
iret
shr
stc
rclb
out
push
insb
lahf
dec
loop
cmp
mov
mov
aad
aaa
mov
cwtl
icebp
dec
out
fld
scas
push
iret
push
je
ds
adc
push
rcrb
stos
add
xorb
fisttpl
xor
jl
mov
adc
sbb
inc
and
jno
sub
push
push
mov
xchg
push
and
out
dec
aad
imul
test
cmpb
fildl
rcll
and
jle
ljmp
or
push
fs
jno
adc
lods
repnz
pop
in
mov
and
lods
gs
in
out
lcall
stc
jb
pusha
cmp
shll
add
pop
adc
push
dec
loop
dec
lea
jge
mov
inc
push
cmp
push
lea
sbb
cld
out
add
stos
mov
ljmp
mov
jno
rcll
push
inc
inc
xchg
push
pop
mov
xchg
and
add
and
sbb
lods
inc
fstpl
mov
popf
sbb
lea
insl
cltd
mov
popa
in
aaa
mov
cmp
imul
adc
mov
add
sub
sub
sub
add
dec
and
loop
insb
lods
shll
push
aaa
nop
xor
out
jmp
pop
jb
cmp
mov
fs
rol
imul
sti
pop
into
and
jns
pop
and
xlat
adc
lcall
jbe
pop
xchg
out
push
push
xchg
test
outsb
test
mov
inc
orl
iret
test
mov
pop
dec
hlt
mov
jns
cltd
pop
cs
out
cmp
addr16
dec
test
loope
adc
cmpsl
xchg
or
ja
push
push
and
jbe
adc
jge
rorl
or
std
nop
dec
mov
subl
scas
rcr
mov
lahf
jne
cltd
adc
pushf
sbb
stos
or
xchg
xchg
aam
leave
test
mov
and
xor
or
mov
jp
lods
popa
jp
arpl
adc
push
pop
mov
add
and
mov
mov
imul
push
addr16
cwtl
stos
test
aaa
or
mov
dec
cltd
push
adc
pop
sarb
cmp
rcll
jmp
inc
loop
xchg
sbb
shll
sbb
mov
movsl
insl
test
fs
loop
mov
fsubrl
cmp
loope
push
popa
ss
cld
into
dec
xor
lcall
filds
es
mov
mov
inc
scas
or
lret
fstpl
popa
out
andb
popa
add
cltd
int3
adc
add
dec
or
sub
jno
stc
jae
inc
inc
stc
cwtl
fdivrp
lahf
pop
mov
mov
bswap
sbb
subl
or
push
jmp
out
dec
xor
inc
stos
jno
inc
sbb
arpl
push
out
inc
cmc
push
in
out
scas
or
sub
in
loop
imul
loopne
mov
mov
fmull
fsubr
aad
das
in
clc
icebp
je
mov
xor
inc
or
mov
je
shll
inc
sbb
outsb
outsl
add
and
call
fs
pop
xchg
adc
repz
mov
mov
rolb
daa
push
lea
dec
mov
jge
sub
mov
lret
adc
out
dec
lahf
xchg
ljmp
enter
mov
das
jnp
out
mov
pusha
cmp
fcmovne
int
inc
jl
jne
pushf
dec
sub
repnz
hlt
aad
popa
jge
jle
add
dec
pop
lock
dec
leave
adc
add
fucomip
adc
daa
push
push
sbb
sbb
xor
sub
pop
mov
cmpsl
clc
inc
lcall
jge
insb
xchg
inc
xacquire
fisubs
fstpt
mov
cmpsb
cwtl
fs
sub
icebp
lahf
push
cmpb
add
or
neg
and
pop
cmpsl
lods
lahf
adc
ret
pushf
cmp
call
jb
jno
sub
lea
fcompl
aas
subb
push
imul
mov
imul
inc
fldenv
xor
fisttpll
cltd
loop
jo
pop
sub
aad
xor
in
add
cmpsl
mov
cmp
fcomip
dec
mov
xchg
fistpll
mov
jns
push
push
mov
jl
out
inc
dec
pop
into
dec
shll
fisubl
testb
daa
ss
push
and
xor
fists
sbb
cmp
nop
xchg
fld
loope
lahf
stc
in
and
mov
testl
fcompl
lods
test
or
inc
push
jmp
jno
adcl
inc
add
js
add
xor
ret
mov
xchg
aas
push
xchg
in
and
out
popf
fdivl
jge
mov
ret
stos
cmp
cmp
xor
cltd
add
cmpsb
mov
sbb
cli
mov
int3
cmp
imul
mov
pop
lods
mov
in
push
into
daa
push
pusha
dec
fsubrl
xor
xor
sbb
mov
js
into
mov
pop
hlt
out
sub
inc
cli
mov
inc
or
mov
int3
add
test
shl
aad
aaa
iret
sbb
dec
mov
es
hlt
xchg
cmc
les
dec
lock
push
in
pop
insb
fst
out
out
ja
out
es
xchg
daa
sbb
mov
push
lock
outsb
jo
icebp
loop
int
mov
roll
inc
lcall
lods
imul
arpl
jle
xchg
scas
push
lret
divb
movsb
repnz
jmp
and
mov
push
xor
lcall
inc
or
je
jl
xor
lods
lock
and
test
insb
push
lcall
pop
les
psrlq
fcoml
and
icebp
cli
daa
lock
inc
xor
jp
dec
cltd
xor
sbb
sub
xor
pop
jg
push
lods
mov
add
ret
cmp
lret
ret
ljmp
jb
inc
sbb
out
pop
sti
insl
data16
push
mov
insb
test
and
add
mov
xchg
dec
or
or
xor
shl
jae
mov
ss
and
test
adc
sarb
loope
jno
push
insl
sub
gs
xlat
mov
push
gs
jo
add
dec
dec
int
cli
xor
cli
xchg
mov
pusha
push
pop
loop
xchg
adc
mov
xor
mov
repnz
mov
jo
jmp
cmpsl
adc
jae
fisttpll
daa
cmp
cld
popf
imul
push
sahf
rcr
arpl
add
movsl
fisttps
push
imul
mov
stc
adc
jge
lock
lds
test
push
jbe
adc
es
add
shlb
inc
or
addr16
add
jbe
insl
pop
dec
pop
xor
test
mov
in
lcall
pop
fsubl
jae
dec
lods
cmp
jb
pop
out
orb
cltd
jmp
inc
inc
imul
sub
ss
ja
add
push
xchg
mov
jns
icebp
sbb
cmp
shll
xchg
pop
sarl
outsb
addr16
aas
fst
ljmp
or
lret
jo
mov
push
xchg
dec
icebp
pop
fs
sbb
jno
js
push
or
adc
jmp
out
push
fsub
mov
movsl
jb
add
and
mov
clc
popl
inc
es
pop
xchg
int
cmp
in
adc
sahf
movsb
pushf
mov
pop
cmp
mov
mov
push
xchg
cld
cmp
cmp
xchg
cmp
lahf
mov
loopne
out
fwait
adc
mov
fcomip
mov
mov
dec
icebp
cmc
jns
lock
ret
inc
outsb
inc
push
dec
out
xchg
adc
sbb
mov
fldl
and
daa
loopne
mov
in
push
mov
popf
outsb
je
fadd
mov
into
insb
call
xchg
rcrl
stos
out
cwtl
jne
rdtsc
insb
iret
push
jp
sbb
mov
and
sub
inc
leave
or
pushf
add
je
pop
repnz
out
cmp
mov
inc
sbb
adc
enter
pushf
decl
xor
ljmpw
jmp
aam
arpl
das
cmp
enter
jne
or
xchg
pop
fdiv
cmpl
nop
pop
cwtl
sub
push
addb
mov
push
movsb
out
mov
call
push
jp
rcl
pusha
mov
mov
dec
cmp
sbb
cmpsl
pop
jno
cli
insb
mov
int
cmc
stos
sbb
inc
xlat
jo
call
adc
lret
pop
pop
repnz
ljmp
xchg
jge
pop
dec
mov
push
mov
dec
sbb
ja
adc
mov
aam
bound
jne
cli
jo
call
repnz
or
inc
out
imul
sahf
and
mov
imul
xchg
pop
cmp
mov
icebp
push
stos
dec
ds
push
add
xchg
cmp
scas
dec
repz
loope
jns
out
paddsb
sub
cmpsb
jle
popf
or
add
into
enter
sbb
sbbl
add
inc
lods
cmpsb
xor
push
inc
data16
sahf
icebp
shr
inc
sub
jg
xchg
xchg
pop
fcoml
fcompl
jge
xor
test
jl
lcall
out
fldt
adc
and
xor
lcall
int3
mov
xchg
xor
inc
pop
adc
mov
jnp
push
pushf
pop
cmp
imul
add
cmp
jge
daa
inc
cmp
testl
jle
mov
push
popf
nop
fnstcw
in
jmp
jno
shlb
mov
mov
mov
jbe
push
daa
and
movsb
daa
sarl
leave
mov
lods
es
jmp
in
dec
ss
call
push
mov
inc
aam
sub
fwait
test
and
pop
push
in
push
in
cmpb
push
jae
sti
arpl
in
lods
test
pushf
stos
jnp
pop
dec
mov
sub
or
arpl
jecxz
pop
test
in
sbb
sub
and
jp
loopne
and
inc
mov
fwait
ds
aam
outsl
iret
xor
mov
cmpb
test
mov
cmp
into
sahf
cld
scas
jnp
mov
or
dec
bound
mov
or
loopne
jg
adc
outsl
mov
mov
mov
cmp
mov
out
dec
gs
xor
jo
inc
push
fldl
outsl
and
call
into
xor
adc
inc
jge
ret
cmp
mov
adc
test
adc
and
in
repnz
cmp
mov
sbb
mov
pop
pop
loopne
sbb
jo
jb
lods
imul
outsl
add
subl
jmp
cwtl
es
data16
or
aam
jae
sub
std
scas
inc
icebp
loopne
js
sub
cmp
je
ljmp
iret
call
idivl
sub
enter
test
pop
dec
mov
xor
xor
incb
in
cmp
push
movsb
in
outsb
and
cld
aas
pop
mulb
testl
cmp
or
xor
call
mov
push
push
and
mov
xor
dec
sbb
sbb
les
std
fidivrl
nop
ljmp
jmp
fistl
pop
push
in
data16
jg
in
lea
loopne
mov
jne
adc
out
pusha
stc
aas
cmc
pop
pop
add
inc
push
shrb
cltd
jp
cmc
and
out
repnz
test
cs
fs
fmull
mov
cmp
or
cmp
lcall
xlat
mov
xor
add
lret
lock
xchg
push
push
ret
je
shll
int
insb
sub
sub
aas
arpl
adc
lret
aas
fstps
out
imul
out
std
les
and
lahf
shlb
mov
lock
mov
and
xor
pop
stos
push
mov
pop
dec
cs
push
stos
pop
es
mov
mov
add
cltd
clc
inc
scas
mov
aam
xchg
cs
adc
shll
sahf
jae
sub
push
dec
sub
sti
icebp
push
in
ror
repnz
js
sub
and
fs
lock
jg
int
shr
stc
jmp
pusha
cmp
xchg
leave
mov
xchg
cmpsb
adc
test
imul
aas
dec
and
sub
scas
mov
daa
mov
into
xchg
lcall
pop
pop
imul
cmc
sub
xchg
mov
jl
pop
je
lret
add
ret
out
clc
xlat
pushf
and
fcoms
aam
xchg
inc
inc
jp
cmp
mov
rol
pop
mov
push
lds
rcrb
pop
sbb
je
mov
imul
imul
sub
dec
and
pop
mov
pop
jp
xor
filds
jbe
das
jae
add
jge
add
pop
popf
mov
leave
in
dec
mov
lea
mov
or
xlat
push
lret
shll
inc
pushf
pop
insl
sub
pop
jae
push
sarl
sti
sub
sbb
mov
cltd
push
je
push
aad
out
xor
iret
push
call
idivb
pop
stos
leave
dec
cmp
mov
jo
mov
mov
jmp
stc
add
jo
lods
pop
mov
dec
sub
fs
repnz
fcomi
fstpt
out
xor
mov
add
push
mov
mov
stc
into
dec
test
add
or
jns
push
out
and
xchg
xor
xlat
adc
jns
push
test
and
sahf
mov
into
sbb
cmpsl
sub
out
add
jno
cmp
test
dec
jmp
ret
pop
cs
xorb
xlat
mov
and
ss
lcall
pop
inc
inc
out
in
popf
jl
inc
stc
subb
cmpsb
les
mov
push
and
cmp
icebp
mov
dec
pop
push
mov
hlt
lea
fsts
mov
popa
cmp
cmp
push
lahf
jle
outsb
adc
mov
je
clc
fs
inc
add
xacquire
imul
sbb
loopne
mov
push
rcll
lods
stos
mov
shll
and
cwtl
std
jnp
movsb
sbbl
jne
cmp
xchg
inc
inc
std
add
stos
rcl
rclb
imul
out
or
rcll
cmc
pop
stc
sub
insb
mov
mov
fsubr
cmpsb
jg
pop
dec
dec
sti
pop
and
pop
in
inc
mov
sub
xor
mov
and
add
inc
popf
and
and
fldt
cmpsb
loop
push
cmp
rcrl
or
and
or
mov
stc
sbb
lods
mov
pop
negb
push
adc
mov
cwtl
aam
cmp
stos
xor
enter
mov
arpl
push
sti
xor
lea
lret
or
xchg
adcl
out
fldenv
arpl
or
cld
shlb
je
loopne
lea
rorl
push
lods
xor
in
add
push
cmpsl
jg
cmp
pop
cmp
xor
inc
dec
push
stc
pop
pushf
shll
cwtl
push
dec
in
daa
lcall
push
scas
mov
stos
xor
cmp
icebp
mov
adc
pushf
outsl
adc
adc
jmp
pop
popf
jle
sub
sbb
pop
sbb
cmpsl
mov
ret
ja
pop
repz
sub
lods
jecxz
pop
mov
mov
pop
add
test
dec
in
call
in
mov
mov
mov
jbe
dec
stos
push
bound
aam
rcrb
adc
das
add
add
mov
out
into
sbb
mov
xchg
xchg
cltd
xor
push
mov
lods
push
test
add
cld
fnstsw
xchg
ror
mov
jae
sbb
mov
jbe
add
js
pop
add
xor
inc
fs
or
adc
lcall
cmp
xchg
dec
or
dec
lock
lahf
push
out
xchg
jg
dec
enter
mov
dec
cs
or
sarl
sub
stc
xchg
sarb
push
cs
lods
jnp
dec
dec
dec
mov
dec
sarl
fbstp
dec
sbb
nop
lcall
inc
pop
mov
mov
mov
inc
int
cs
pushf
js
xchg
mov
sbb
ljmp
xor
flds
ljmp
shl
sbb
mov
sub
in
aas
adc
sbb
jo
mov
jmp
cmp
cltd
es
hlt
inc
out
adc
mov
xchg
cmpl
dec
dec
push
mov
xchg
imul
xorb
sub
outsl
lahf
add
in
cld
sbbl
arpl
js
mov
aam
xchg
add
shl
lret
scas
sub
out
dec
orl
inc
inc
inc
dec
mov
in
je
cmpsb
mov
in
std
jmp
iret
das
pop
iret
popa
or
xorl
std
mov
xchg
test
test
dec
sbb
inc
sbb
pop
add
int
les
xchg
pop
jnp
mov
test
jns
sbb
inc
push
push
jbe
bound
or
xchg
js
cmpsb
or
cli
lods
aas
test
data16
xchg
pop
inc
aam
in
lret
pop
subl
jns
or
stos
mov
push
push
dec
pop
mov
xor
mov
add
pop
mov
jno
insl
leave
adc
cmp
seto
cs
cs
into
add
inc
cmpsb
jns
int3
xchg
mov
in
aas
fistpll
out
mov
repnz
pop
not
cwtl
insl
mov
ja
xlat
arpl
cmpsb
aaa
cmpsl
cs
cmp
push
bound
mov
outsb
jmp
dec
push
aam
ss
bound
nop
push
mov
cmp
hlt
scas
repnz
out
sahf
imul
jmp
in
and
jmp
inc
pop
sub
jp
mov
outsb
mov
loopne
roll
adc
cmp
sbb
iret
in
movsb
and
mov
sahf
push
sarb
add
stc
scas
inc
cmp
daa
repnz
in
pop
aad
adc
add
out
pushf
mov
mov
sarb
scas
movsl
pop
lods
rcll
adc
aam
lahf
bnd
into
dec
pop
and
shll
or
addl
fildll
je
mov
sbb
mov
in
out
aaa
fcmovbe
out
orl
icebp
ja
inc
cli
loope
pop
pop
fnstenv
push
add
add
repz
sub
jns
push
push
jbe
jmp
or
pop
dec
icebp
lret
aas
shll
inc
enter
aas
jl
cmp
js
lea
mov
xor
imul
cmp
aas
leave
cmp
mov
out
xchg
xlat
rol
imul
jbe
pop
xor
imul
add
mov
and
ret
lods
lcall
sbb
int3
mov
repz
xor
jne
xlat
lods
stc
mov
mov
dec
jmp
adc
ret
xchg
stos
frstor
dec
adc
mov
xor
xchg
lods
or
mov
add
out
jo
mov
jmp
jb
mov
mov
mov
pop
rcll
das
dec
mov
xchg
lods
adc
pop
dec
js
jmp
mov
dec
add
mov
add
or
sub
js
stos
insb
into
xchg
sub
dec
mov
sbb
push
inc
movb
pusha
cmp
andb
or
dec
pop
les
push
stc
test
push
or
and
loope
add
mov
push
push
rcll
shld
push
loope
cld
bound
clc
lret
repz
out
and
aad
xor
popa
inc
pop
jl
cs
cli
mov
mov
ficompl
cmp
mov
lcall
mov
leave
and
pushf
mov
fldpi
adc
add
jecxz
clc
jbe
scas
and
dec
pusha
loopne
insb
test
arpl
out
sub
scas
push
in
mov
aad
lret
push
push
movsl
je
insb
dec
sub
jne
jbe
add
push
cli
movsb
inc
in
movsb
out
les
stos
mov
or
and
nop
inc
cmpsb
sub
mov
cli
pop
and
ds
xor
into
outsl
test
fimull
push
adc
mov
xor
loope
sti
sbb
pop
and
add
fcompl
add
xchg
sar
filds
cs
dec
lret
xor
xchg
cmp
lods
push
ret
inc
stos
ljmp
jb
xchg
and
add
or
add
rcr
add
and
fstpt
cmp
jns
xchg
test
std
inc
out
subl
sbb
sub
lods
out
add
push
jmp
and
stc
pop
ret
mov
outsb
jecxz
cmp
jns
push
popa
int
fadds
dec
out
mov
adc
dec
sbb
mov
xlat
enter
sbb
and
mov
mov
rcr
rcll
das
push
loope
insl
inc
mov
daa
mov
in
rol
sub
pop
cld
cmp
andl
cmc
mov
xor
bound
cmp
mov
add
and
dec
cmp
cmp
xor
mov
movl
sbb
stos
loopne
lcall
fiaddl
sub
nop
cmpsb
or
test
mov
mov
sub
jns
push
ljmp
push
sbb
or
sub
push
in
add
sub
xchg
adc
fisubs
in
jg
sarl
sub
xchg
mov
imul
dec
push
ss
sbb
in
faddp
cmp
push
jns
pop
xchg
cwtl
sbb
ds
mov
xchg
sbb
adc
push
inc
ret
sub
sub
adc
xchg
mov
ret
push
xchg
sub
addr16
pmulhuw
pop
sub
dec
and
pop
loopne
loop
repnz
mov
fstl
sub
cld
mov
xchg
dec
js
cmpsl
cmpsl
add
push
mov
rol
sub
mov
adc
push
jb
test
lods
shl
popa
pop
mov
adc
pop
and
cwtl
xor
jno
pop
dec
inc
mov
cmp
sub
idivb
cmp
arpl
icebp
mov
xor
xchg
movsb
fcompl
add
xchg
out
lea
inc
xor
outsb
arpl
nop
jno
xchg
add
push
cmpsl
jae
aad
popf
sub
pop
aaa
and
mov
arpl
mov
jle
mov
dec
faddl
push
pushf
push
fsubrl
enter
mov
pop
mov
adc
or
movsl
rolb
rclb
aas
xchg
popa
adcl
xchg
mov
jp
push
sarb
std
leave
and
repnz
repz
in
cmpsl
inc
jecxz
jb
push
add
xchg
sbb
pop
xor
mov
xchg
ds
mov
das
sbb
xchg
jns
enter
ja
xchg
mov
je
pop
andl
popl
popf
mov
sub
enter
pushf
je
inc
stc
cld
fists
adc
movsl
mull
push
adcl
aas
jp
jae
pushf
sub
jg
sub
xor
sbb
icebp
add
lret
xchg
es
or
pop
cli
or
int3
imul
aam
xchg
add
push
std
xor
push
out
push
dec
and
xlat
loop
sbb
test
inc
dec
mov
aas
adc
mov
push
vcmpsd
dec
imul
scas
and
orb
or
aas
sbb
cwtl
xor
xor
in
movsl
shll
into
icebp
cmp
cmp
sbb
fistpll
jp
mov
xor
jmp
into
jg
loope
out
testl
ss
cmp
mov
clc
incl
mov
sbb
add
cmp
scas
test
mov
mov
lahf
add
xor
test
test
mov
xor
jo
jecxz
test
xchg
xchg
xchg
pop
mov
mov
push
dec
lahf
scas
mov
push
inc
add
jge
jo
popf
es
outsl
out
jae
cli
insl
xchg
inc
in
add
pushf
insl
les
jp
push
inc
lahf
mov
jle
ficoml
mov
test
lret
icebp
std
mov
pop
js
sub
jb
bound
xor
and
int3
mov
pop
sbb
sbb
add
lahf
adc
sub
sub
stc
movsl
adc
insb
sbb
adc
and
push
insb
sahf
scas
mov
jbe
test
jo
fidivl
cmp
push
jae
mov
iret
fisubrs
sub
sbb
push
hlt
sub
into
sbb
xor
pushf
and
pop
ret
addl
movsl
inc
jae
scas
inc
repz
rclb
push
and
mov
int
cmpsb
push
inc
test
jns
mov
data16
test
jecxz
pop
nop
mov
cwtl
fnstsw
dec
inc
sbb
outsb
repz
lret
inc
pop
or
incl
stos
pusha
xchg
cwtl
push
mov
pushf
into
rcrb
popf
jne
ja
mov
adc
jae
jb
test
iret
xor
dec
outsl
outsl
cvtps2pi
inc
adcl
aaa
repz
xchg
enter
jle
jmp
insl
mov
test
xchg
pop
dec
test
cli
add
xor
test
nop
je
jne
outsb
enter
cmp
add
dec
xlat
gs
or
push
sub
mov
fs
out
push
push
sub
icebp
push
cwtl
sub
psubusb
or
ja
lahf
and
pop
xor
push
inc
mov
mov
mov
enter
popa
cs
lods
xlat
jnp
ljmp
outsb
les
push
ficompl
test
sbb
mov
pop
shrl
xlat
cmp
dec
pop
xor
xor
xlat
stos
aam
and
dec
call
xor
xchg
test
jle
cwtl
das
imul
xchg
dec
pop
push
pop
or
dec
jno
das
pushf
in
pop
push
push
stc
shrb
xor
jge
add
out
sbb
outsb
bound
mov
lea
pushf
mov
mov
or
cmc
aaa
pop
scas
ljmp
in
cs
fadd
sub
cli
or
or
icebp
sub
mov
fnstsw
fistpll
mov
and
cmc
mov
xor
sbb
in
bound
jecxz
mov
das
mov
jns
cwtl
ss
outsl
jbe
int3
outsb
imul
fdiv
out
dec
xor
add
jl
out
mov
push
aam
popf
dec
cli
and
add
cmp
add
push
std
stc
sub
in
out
dec
mov
nop
adcl
dec
loopne
scas
inc
xchg
pushf
push
imulb
scas
inc
ja
sub
outsb
leave
pop
je
mov
inc
xchg
pop
sbb
lds
shl
push
in
push
xchg
fcoms
xchg
test
pop
mov
jp
rcll
out
xor
mov
cmp
repz
push
mov
out
xlat
jno
sub
xlat
jne
mov
pushf
push
pop
in
adc
mov
dec
adc
mov
add
add
cmp
mov
out
sarl
rcrb
xorb
cmp
in
leave
push
add
imul
or
mov
lea
repnz
mov
inc
adc
jb
xor
popf
fcmovnb
sub
pop
add
xor
das
ja
mov
leave
pop
fiaddl
imul
jl
cmp
push
test
and
bound
js
movb
inc
mov
mulb
adc
test
js
jle
and
arpl
pop
mov
add
pop
xchg
sub
hlt
adc
mov
repz
pushf
add
test
icebp
loop
push
add
fdivr
xlat
and
imul
xorl
js
mov
sahf
ret
lods
push
mov
mov
enter
push
outsb
stos
and
and
sahf
stc
ret
iret
testb
in
jl
lret
mov
popl
das
pop
or
ds
fs
xor
aam
ror
or
push
pop
in
xor
mov
test
cli
flds
dec
sahf
mov
lock
mov
adc
js
jo
mov
ficomps
dec
movl
cmpsl
pop
in
es
push
outsb
test
mov
ret
inc
jne
pop
icebp
int
mov
pusha
inc
stos
inc
movsl
xlat
insl
in
push
pop
imul
push
in
and
test
les
cwtl
dec
sbb
roll
jno
or
test
inc
push
cmp
pop
pop
and
inc
push
lds
or
and
mov
xor
inc
fidivl
nop
mov
pushl
out
cmc
or
lods
xor
daa
ljmp
sbb
adc
mov
jno
xchg
cli
cwtl
push
and
xchg
clc
rolb
push
jmp
and
daa
push
xchg
jbe
cwtl
jo
jnp
sub
sti
pop
dec
roll
jg
aad
ja
insl
xorl
fadds
jl
dec
xor
test
dec
and
out
dec
sub
ffreep
adc
jmp
mov
push
push
cmp
push
push
ljmp
cmp
sar
mov
push
mov
mov
mov
jb
stos
mov
xchg
adc
xor
cmpsl
inc
sbb
sub
add
out
rolb
mov
xor
sbbl
fstpt
mov
cmp
jne
jp
in
push
dec
addl
testl
push
int3
int
js
sub
jl
pop
sub
mull
rorl
int
out
pop
lahf
in
mull
inc
js
insl
mov
subb
lcall
inc
or
sti
xlat
gs
data16
jno
mov
out
push
adc
sbb
mov
cmp
push
adc
je
push
adc
fwait
es
cmc
sub
adcl
xchg
xchg
paddd
arpl
fisttpl
dec
jge
subl
xchg
into
dec
test
gs
ljmp
sbb
imul
pop
shrb
divl
sbb
lods
ficomps
enter
sbb
inc
jmp
stos
andl
int3
push
sub
xchg
or
aas
fldcw
jne
or
sub
stos
aas
inc
inc
add
lahf
fisttpll
mov
out
adcb
cmc
lock
pop
add
adcl
arpl
pop
jmp
xor
repnz
xor
sbb
insl
pop
jle
pop
push
rcrb
out
mov
push
adc
decb
sarl
movsb
popf
adc
scas
lret
lock
jl
adc
dec
xchg
aad
pop
mov
ljmpw
pop
push
dec
and
add
sub
jns
jb
mov
cli
cmp
aam
in
and
ss
mov
dec
jnp
int3
or
out
dec
dec
lds
cwtl
adc
out
and
inc
pushf
and
popf
push
inc
jmp
int3
rcr
icebp
leave
lahf
push
scas
mov
fimuls
enter
sbbl
sti
pop
inc
add
push
repz
cs
push
hlt
adc
push
lods
fisttps
mov
filds
sbb
sbb
push
push
adc
int
mov
xchg
sti
push
pop
jnp
stc
jmp
pop
and
inc
push
push
sbb
mov
jnp
stc
mov
cmp
pop
int3
add
ret
mov
mov
add
jo
jae
insl
cmp
into
xchg
and
fldl
jmp
sbb
aam
cmovns
fldcw
jle
xchg
andl
lock
repz
push
aam
movsl
push
mov
stos
fdivp
cli
sbb
lods
pop
mov
in
mov
xor
xchg
out
sbb
xor
ret
inc
jno
popf
and
repnz
jne
clc
xchg
les
testl
bound
je
leave
xorb
int3
out
cli
adc
mov
jno
popf
add
lret
subps
fs
pop
and
cmpsb
mov
loope
adcl
pop
repnz
mov
push
inc
shll
mov
or
ljmp
jo
jbe
jbe
inc
mov
lret
jmp
clc
test
inc
jge
stos
ret
push
mov
in
jmp
aas
popf
cltd
xchg
pushf
in
mov
mov
lcall
sbb
push
mov
mov
test
sbb
push
adc
pop
mov
or
xor
sbb
mov
js
bound
popf
xchg
cmp
mov
loop
push
mov
ja
arpl
dec
ret
jg
mov
jge
out
mov
loope
push
add
aad
cli
cmpsb
out
les
xchg
pushf
or
inc
jne
lret
jmp
pop
ret
jno
ljmp
imul
mov
std
jo
jnp
xchg
pushf
into
add
lds
pop
sbb
js
movsb
das
movsb
sub
sub
jbe
sarb
lret
insb
ljmp
mov
adc
or
fcompl
lds
lcall
cwtl
sti
jle
cmpsl
addr16
test
enter
mov
das
or
sahf
addr16
out
clc
dec
xor
and
fs
push
inc
and
call
xor
cmp
jg
fisubl
pcmpgtw
lods
in
jno
fs
aaa
daa
icebp
cmp
in
sbb
mov
out
jnp
jge
jmp
mov
das
xchg
cltd
or
sbb
jae
or
dec
xchg
call
fdiv
mov
lods
mov
fldt
popa
leave
mov
in
jnp
jb
iret
jmp
in
imulb
adc
or
or
mov
mov
imul
xor
aas
addr16
jns
lret
mov
mov
mov
movsl
mov
xchg
cmpsb
movsb
lods
mov
or
imul
cmp
test
js
pushf
cmp
dec
push
or
js
jmp
mov
adc
xchg
xchg
mov
into
jno
mov
dec
sahf
sub
inc
sbb
sti
lcallw
iret
leave
mov
lret
cmp
sti
push
das
test
out
insb
outsb
add
pusha
add
push
pop
lret
test
stc
imul
hlt
fdiv
loop
out
xorb
sbb
cmp
insb
out
stc
in
sub
movsb
stos
sbb
inc
repnz
push
mov
stc
outsl
sub
push
jnp
or
clc
sub
icebp
mov
andl
jo
sbb
clc
mov
cli
subl
add
add
icebp
sbbb
or
test
rolb
es
leave
sbb
das
pop
insl
mov
stc
aam
cld
and
mov
sbb
fldcw
cmp
sbb
imul
arpl
lods
mov
data16
sub
outsl
out
out
cltd
addr16
cmc
pop
xor
add
pop
sub
sub
or
pop
add
stos
gs
sub
inc
cmp
aas
sub
adc
pushf
push
les
jmp
in
mov
push
fisttpll
fcmovb
push
jns,pn
arpl
push
sub
fbstp
int
sub
in
jbe
or
ss
cwtl
repnz
mov
pop
pop
cmp
stc
lods
jecxz
gs
xchg
das
jae
in
pop
pop
fsubs
pop
shll
test
mov
jge
imul
pop
pop
jle
inc
hlt
sahf
push
in
mov
andl
pop
es
mov
aam
xchg
ror
jns
int3
xlat
gs
clc
les
sub
sub
mov
outsl
js
jge
mov
mov
xchg
movsl
pop
std
in
daa
and
imull
and
incb
mov
cvtpi2ps
lods
cmp
sbbb
shr
mov
sahf
aam
push
xchg
jge
arpl
in
sbb
cmp
lock
in
pop
mov
inc
push
pop
mov
sub
sub
ret
sub
fcomp
cmc
push
mov
xchg
mov
mov
dec
aad
int3
loop
stos
and
xor
xchg
and
xchg
dec
popa
and
push
pop
adc
push
push
mov
lods
inc
jmp
xchg
xchg
mov
lcall
inc
push
push
jae
jno
mov
dec
cmc
pop
mov
sti
mov
sbb
dec
cld
mov
mov
mov
flds
cmpsb
jno
push
pop
call
xchg
pop
rcrb
fidivs
sbb
push
jp
je
cmp
test
aad
xchg
xchg
xor
push
mov
push
stc
out
iret
inc
dec
sub
test
bnd
movsl
mull
mov
addr16
fmull
or
fs
call
or
in
dec
sbbb
data16
rol
push
pop
arpl
ljmp
mov
cmp
jl
leave
les
sub
mov
fisttpll
cmp
mov
pushf
sbb
or
xor
lahf
jne
ljmp
stos
cltd
lret
sub
in
ret
lock
adc
out
cmp
fcompl
mov
inc
jno
and
mov
ja
fldcw
cmpsl
push
je
mov
cmp
hlt
xchg
sub
mov
mov
jb
inc
jecxz
mov
sbb
lock
mov
ror
les
aaa
push
data16
adc
dec
movsl
into
sbb
clc
push
mull
jno
popa
inc
clc
mov
int
sbb
jae
xor
adc
imul
xor
std
lahf
in
adc
pop
xchg
mov
fwait
add
mov
rclb
gs
inc
insb
add
mov
xor
fisttps
inc
sub
in
test
jle
pop
repnz
push
fstpl
adc
cltd
mov
jb
ret
mov
mov
mov
cli
and
and
add
xchg
sbbl
sahf
sub
repz
or
adc
mov
push
sbb
add
dec
adc
ror
imul
push
add
adc
ret
xchg
cmp
scas
add
or
add
sub
mov
dec
cmpsl
cmp
and
inc
fcompl
jle
repnz
lcall
out
push
lret
push
ljmp
push
lods
cmp
xchg
adc
add
inc
pop
sahf
ret
sub
sub
xlat
lret
jns
mov
adc
pusha
sub
mov
test
repnz
loope
fimull
inc
adc
adc
imul
inc
pop
sbb
loopne
outsl
cli
test
movsl
inc
push
movsl
xchg
mov
iret
in
pop
jg
pop
xchg
push
xchg
fwait
sbb
jg
std
icebp
sbb
pop
ljmp
dec
sti
pop
popa
pop
push
add
adc
xchg
test
aam
aad
mov
data16
pop
xchg
cltd
repnz
xor
fiadds
pop
jg
popf
call
test
mov
push
ljmp
sbbl
inc
negb
in
sbb
mov
xchg
and
jl
adc
mulb
dec
mov
push
arpl
stos
fistpll
into
lret
jo
cmc
out
movsb
sar
popa
arpl
mov
cs
add
and
sub
adc
int3
arpl
or
dec
lods
cmp
das
out
aam
sub
je
pop
jae
shlb
cmp
filds
sub
pop
aam
leave
roll
and
fmuls
xor
and
mov
pusha
xchg
test
push
add
or
dec
sbb
aam
fsubrs
mov
mov
test
imul
loope
mov
imul
cmp
stos
das
cltd
lahf
sbb
loopne
mov
mov
xchg
jg
and
jg
mov
fildll
clc
mov
xchg
fs
mov
lcall
decb
inc
adc
dec
ret
insb
push
daa
icebp
mov
icebp
in
push
ljmp
stc
repnz
adc
cmp
pushf
lret
push
xchg
or
jle
jp
mov
xor
sbb
out
adc
test
jmp
and
fsubs
dec
pop
pusha
aaa
mov
shrb
sar
rcrb
cmp
push
jnp
stc
sub
test
imulb
inc
push
imul
pop
mov
repz
insb
out
or
mov
cmp
adc
mov
ljmp
lock
mov
add
or
cmp
int3
fwait
push
imul
data16
push
push
repz
lock
xor
push
jno
fstl
jns
popa
pop
xchg
mov
insb
add
jno
hlt
xchg
out
push
mov
out
fadd
jno
js
cmp
rclb
jl
gs
dec
jno
rclb
xor
cs
xor
and
hlt
cmpsl
ss
movsb
mov
in
mov
rcrb
jg
jmp
les
dec
in
pop
push
xchg
add
decw
hlt
dec
jae
mov
jb
dec
push
sti
int
xchg
repz
pop
dec
andl
jp
and
push
xlat
mov
cmpsb
mov
cs
push
inc
push
mov
pop
ja
fistpll
push
add
xchg
pop
les
xchg
mov
cmc
mov
mov
in
repnz
aad
repnz
xor
push
jns
add
adc
and
mov
fsts
cmp
nop
sti
ret
inc
and
push
mov
rclb
xor
jle
dec
lods
or
xor
rolb
pop
add
cwtl
hlt
sti
lcall
lods
sbb
dec
sub
xor
imul
cmpsl
jo
mov
inc
jns
dec
inc
sbb
popa
add
jmp
and
dec
adc
loopne,pn
arpl
pushf
fsubs
lock
cwtl
sub
stc
jmp
cli
push
or
cmp
test
xchg
sbbl
addl
loope
iret
in
ret
popf
clc
clc
xor
add
pop
shll
xor
fidivrs
jmp
jmpw
out
test
sub
orl
push
loop
jne
pop
in
inc
into
sar
in
loop
mov
adc
adc
cmp
jmp
shlb
adc
jno
sub
outsb
jne
out
mov
adc
in
rolb
xchg
pop
and
push
lods
in
jnp
or
repz
add
leave
or
inc
jle
jecxz
sbbl
rcrl
dec
mov
mov
or
pop
sub
cmp
popf
in
pop
jae
neg
pop
sti
jb
jmp
xchg
test
pop
popa
pop
xchg
pushf
pause
maskmovq
idivl
mov
jmp
cmp
imul
sub
stos
sub
sub
pop
mov
das
int
mov
adc
imul
stos
in
jg
je
aam
dec
push
shr
pop
aad
xchg
mov
inc
mov
cmpsb
mov
je
mov
fcompl
sub
jecxz
jb
adc
xchg
lret
cltd
out
cmp
mov
xchg
sub
fidivl
repz
mov
xchg
lret
nop
loopne
mov
push
xchg
sub
dec
and
sbb
add
into
pop
inc
jbe
cwtl
idivl
and
movsl
inc
push
xchg
xchg
jg
mov
in
jbe
call
and
jnp
dec
fldenv
xchg
jb
jne
jne
mov
fisubrs
shr
into
je
dec
rolb
add
dec
fbld
enter
in
repnz
push
cmp
sub
or
lock
mov
sbb
leave
push
pop
pop
arpl
int
push
jl
shrl
and
jbe
pop
and
push
jmp
push
mov
sub
pop
scas
or
pop
xor
push
push
sub
fildl
inc
sahf
je
scas
and
push
insb
xchg
adc
dec
mov
push
and
dec
pop
cwtl
je
fbld
jnp
iret
jb
mov
scas
xchg
ret
cmp
call
insb
and
repz
shl
dec
repz
insl
movsl
inc
and
inc
aad
fistps
mov
mov
pop
xchg
xchg
dec
daa
inc
adc
cltd
adc
lret
and
xor
jg
test
cs
xor
cmp
xor
testl
sahf
xchg
add
fisttps
pop
jle
shrl
dec
into
or
rolb
sysexit
fbld
pop
fstps
mov
test
xorb
dec
std
mov
cmpsl
pop
mov
lock
adcl
loop
push
xlat
mov
out
inc
dec
imul
push
sar
xlat
fdivp
inc
adc
and
ret
pop
aad
sahf
mov
lret
mov
jb
mov
push
stos
push
jno
pushl
xchg
ss
loop
sarl
out
cld
inc
xchg
out
ds
xlat
inc
push
xchg
ss
bound
pop
sbb
push
mov
or
loope
mov
fisubs
adc
xchg
xor
rcll
adc
add
cltd
rcrl
pop
fistl
xlat
std
cmp
dec
out
orl
jecxz
lds
jns
lret
mov
pop
push
movsb
pusha
ror
stc
inc
mov
and
ret
xor
mov
shll
sbb
data16
jb
int3
lods
shl
lock
pop
pop
div
mov
inc
test
xchg
add
lahf
ja
xchg
mov
out
jle
cmpsl
sti
js
imul
xor
inc
fxch
rcrb
cmp
dec
cmp
mov
ja
add
and
repz
jecxz
jp
pop
imul
in
popa
pop
fsubs
sbb
movsb
jnp
lret
mov
ret
jl
fwait
in
mov
xorb
jo
decl
add
stos
push
mov
je
dec
movsl
jge
adc
lea
loop
jge
test
mov
pop
and
adc
jno
mov
out
xchg
and
mov
xchg
shrl
insl
ret
cmp
movsl
jmp
xchg
xchg
lcall
imul
mov
test
sbb
jg
pop
ret
sbb
enter
inc
xchg
imul
lds
sahf
icebp
jae
lods
pop
adc
jbe
mov
dec
pop
jecxz
clc
orb
adc
in
out
sub
aad
sahf
lret
test
lcall
stos
and
push
call
mov
add
mov
sahf
hlt
dec
sub
adc
jmp
xor
mov
je
imul
or
test
jns
mov
daa
mov
xor
mov
pop
je
enter
mov
shrl
pop
outsl
imul
cmp
cmp
pop
sahf
shll
xor
or
test
pop
loop
movsl
icebp
or
mov
notb
frstor
leave
mov
push
and
jns
or
cld
insl
dec
or
push
or
mov
je
enter
pop
data16
outsb
and
repnz
push
add
mov
in
ss
andl
add
roll
cmc
mov
add
ffree
lret
daa
cmpsl
divb
dec
ret
test
icebp
pop
xchg
lcall
xchg
push
xor
mov
xchg
jecxz
xorb
vmwrite
adc
loop
or
insb
mov
xor
pop
and
xor
lds
sub
inc
jne
pop
pop
cmp
pop
xchg
jnp
das
mov
push
cld
ljmp
inc
add
lods
lret
dec
push
xchg
adc
jge
mov
jg
fstpl
loop
pop
jge
cmpsb
clc
fstl
mov
or
cmp
loopne
aaa
cltd
testl
lret
sub
xchg
xchg
fisubrl
and
and
and
pop
aaa
xchg
loop
mov
and
xor
test
dec
int
mov
gs
int3
lods
pop
pusha
dec
adc
shll
and
je
dec
sub
cmp
or
and
sarb
mov
or
mov
jns
sbb
mov
xchg
sub
test
inc
repz
xchg
rcll
mov
movsb
mov
dec
daa
data16
cmpsb
and
js
int3
ficomps
test
inc
cmp
nop
sbb
pusha
dec
out
push
dec
xchg
call
popa
inc
ret
outsb
jp
ds
dec
sahf
dec
popf
mov
push
fidivrl
sub
sub
inc
call
addr16
adc
jmp
das
push
pop
decl
jno
pusha
dec
jg
fstpl
sub
mov
mov
adc
cmp
ss
js
mov
leave
sbb
es
jge
sbbb
push
ss
sbb
popa
inc
xor
sbb
dec
jb
xchg
mov
adc
daa
sbb
cli
xchg
es
adc
mov
arpl
out
pop
xorb
xchg
ret
cmpsl
in
xor
mov
mov
push
jl
add
sbb
pop
fbstp
mov
add
lods
push
pinsrw
or
pop
int3
test
ds
dec
clc
or
bound
xlat
fwait
xchg
popa
jae
xor
xor
sbb
push
sbbb
outsb
xor
in
dec
int
mov
xor
xor
mov
movl
lock
xchg
pusha
mov
repz
sub
xor
fsubrs
push
popa
ret
sbb
pushf
sub
dec
popa
aas
or
js
ret
fst
outsl
push
mov
gs
xchg
mov
mov
push
cli
pop
push
test
sub
enter
clc
ja
popf
test
sub
sbb
fldenv
into
mov
mov
lock
push
mov
test
pop
test
scas
outsb
pop
les
test
mov
sahf
in
outsb
cmpl
je
cmp
hlt
fidivrs
int3
mov
into
bound
push
jns
push
mov
sbb
sarl
ret
pusha
clc
jmp
in
and
mov
xchg
mov
nop
mov
popf
pop
fs
test
sti
movsl
out
mov
jl
push
inc
rcrb
jbe
mov
sbb
movsl
cmp
sbb
test
sub
mov
inc
popa
sub
cmpsl
jle
into
js
and
mov
mov
fidivrl
push
mov
push
sub
adc
outsb
sbb
lret
les
stc
mov
dec
jge
ja
jle
repnz
xor
sub
imul
xchg
lds
jbe
and
out
xor
lea
dec
cwtl
das
sbb
lea
push
sbb
mov
aas
sbb
and
jns
push
mov
adc
and
inc
mov
jl
dec
mov
adc
stos
popa
jg
repz
xchg
dec
jo
shl
mov
jb
sub
popa
inc
or
shll
outsl
out
jle
mov
addr16
out
xchg
and
scas
or
out
std
jl
std
int3
mov
add
fwait
adc
xchg
mov
push
inc
jl
add
sbb
dec
popa
cmp
movsb
pop
mov
jbe
mov
js
add
jns
add
fucomp
out
pop
imul
inc
mov
sub
adc
sbb
les
gs
scas
lret
repz
sbb
mov
lcall
stos
push
repz
pop
mov
sub
lods
cmpl
pop
sbb
xchg
add
in
stos
mov
mov
xor
cmp
sahf
xor
mov
sbb
call
or
icebp
sub
mov
punpckhbw
and
ja
fwait
out
sbb
or
mov
clc
sub
ret
xchg
jmp
add
jp
test
loop
sub
inc
cwtl
jl
stc
pop
mov
pop
mov
pop
clc
rorl
outsb
int
ja
inc
cld
fs
push
fucom
movsb
adc
cli
adcl
dec
jns
movsb
lods
jnp
cltd
scas
push
jg
adc
push
add
pop
imul
push
cwtl
in
ljmp
push
and
jo
icebp
icebp
sub
adc
repnz
inc
fs
jmp
iret
popa
jg
xchg
mov
jl
xchg
lret
or
sbb
mov
dec
add
jmp
pop
add
sbb
cwtl
rcr
cmpb
in
ss
sub
test
aam
push
mov
xchg
lds
pop
xchg
add
xchg
add
sbb
outsl
pushf
lods
sarb
adc
push
shll
scas
sbb
dec
xchg
inc
jb
data16
fstpt
mov
shl
je
ret
cmp
jmp
fwait
in
xchg
adcl
mull
cmp
sahf
aaa
shrb
cmp
fwait
pop
push
repz
loope
mov
das
stc
hlt
into
or
jo
roll
mov
xchg
aas
pop
insb
sub
inc
fdivrs
sbb
push
jp
ret
or
dec
sahf
add
mov
adcb
insl
loopne
mov
mov
inc
push
out
out
mov
insb
fisttpll
int3
jmp
fldcw
push
in
add
fsubrp
xchg
mov
xchg
fildll
imul
add
jne
daa
sbb
dec
push
fsubl
daa
imull
jg
adc
and
cltd
inc
aad
pop
sbbb
push
cmp
stc
cmpsb
mov
jecxz
mov
aad
lcall
adcl
pop
mov
sbb
pop
or
cld
xor
jbe
sub
xchg
cmp
cld
icebp
or
je
insl
mov
fisttpl
imul
sbb
sarl
scas
lret
movsl
int3
adc
sbb
cs
xchg
push
add
hlt
das
gs
nop
dec
lds
ja
lds
sbb
imul
pusha
stc
push
and
jne
or
push
mov
lock
sub
jecxz
stc
lock
pop
pushf
jg
mov
mov
sbb
mov
add
inc
fisttps
xchg
lds
les
orl
arpl
clc
fs
fldpi
jb
and
nop
mov
push
loop
leave
push
fldt
add
nop
lcall
push
inc
rol
das
xchg
push
mov
push
pop
lahf
cwtl
lret
gs
sbb
jns
mov
movsb
jo
xchg
add
and
or
out
and
inc
js
insb
lods
jle
je
inc
push
je
mov
sbb
mov
cwtl
mov
pop
dec
je
shlb
add
adc
add
or
insb
dec
push
call
repz
inc
add
xchg
in
pop
sahf
xor
push
mov
push
dec
das
dec
jg
xchg
push
lea
mull
lret
movsb
das
std
repnz
lret
add
jns
test
loop
inc
dec
pop
fmuls
dec
icebp
xchg
mov
andl
clc
mov
or
cmpsb
sbb
orl
std
and
push
aam
lahf
jl
repnz
int
popa
fnsave
inc
inc
loope
cli
dec
add
pop
inc
andl
rcrl
add
mov
pop
xor
sbb
out
lea
hlt
push
test
inc
push
mov
jns
and
loope
and
ss
mov
pop
out
adc
xor
pop
sahf
nop
jae
push
push
loope
loopne
and
loop
sarl
incb
add
cmpsb
rcrl
imul
push
mov
pop
das
push
push
push
mov
fwait
test
xor
cmp
lods
push
cld
push
dec
add
sub
xchg
les
inc
data16
mov
push
jo
fstpl
jge
sub
mov
rorl
sub
jnp
dec
mov
jns
lcall
inc
fisubl
lret
mov
fmull
ss
pop
out
clc
add
lret
inc
jmp
mov
out
xchg
mov
iret
mov
xchg
inc
and
push
fisubs
and
push
lret
sbb
sbb
scas
fiaddl
imull
mov
call
ret
fldenv
mov
call
jecxz
mov
cmc
jle
sahf
jb
cmp
out
jo
aam
cmp
call
dec
test
sbb
sbb
pusha
jnp
mov
outsb
mov
xor
lret
cmp
mov
pop
dec
lods
dec
arpl
push
call
xor
popa
sbb
pop
and
decb
insl
mov
out
pusha
in
jle
mov
ror
jmp
lret
and
sub
stos
scas
call
lret
mulb
mov
movsl
mov
ja
int
pusha
push
xor
mov
sbb
cld
or
mov
aas
loopne
aam
outsb
pusha
arpl
mov
mov
mov
faddl
mov
out
out
loope
pop
push
or
js
stos
leave
std
mov
xchg
mov
xchg
dec
adc
jbe
je
inc
popa
and
and
push
loop
mov
iret
dec
push
leave
mov
xor
es
mov
cmp
xorl
and
xor
fcomps
lret
mov
std
insb
xchg
and
call
and
repz
jp
popa
test
out
cli
xorl
mov
pop
push
inc
shlb
add
cmp
jp
mov
xor
icebp
js
insb
jmp
sub
pop
call
in
pop
mov
cld
pusha
push
mov
jnp
inc
mov
js
sub
sbb
repz
int
jae
jp
popf
stos
sbb
jg
adc
sbb
sbb
dec
fdivrp
lock
out
jne
lods
lcall
push
pop
jae
push
arpl
add
pop
jp
test
mov
pop
xor
inc
push
sbb
and
xchg
inc
repz
mov
or
jne
and
shlb
loope
aas
cmp
adc
imul
lds
clc
rorl
xchg
stos
inc
gs
into
decb
sbb
movsb
jo
mov
jno
jp
pop
mov
adc
dec
cltd
cmp
scas
jle
xlat
fs
imul
cmp
sub
dec
in
and
test
sar
call
mov
jecxz
xchg
fs
mov
pusha
cs
push
pop
fisubs
jg
xor
scas
dec
mov
aas
and
push
mov
jb
test
sbb
dec
insl
out
push
mov
rol
dec
arpl
fs
jo
outsl
lretw
and
push
dec
sbb
bound
es
xchg
es
push
sahf
dec
out
test
push
fists
inc
jl
mov
sub
in
in
in
mov
jbe
mov
pop
ja
add
pop
iret
or
out
xor
in
xchg
cmc
rcrl
cmp
leave
cmp
in
sbb
out
xchg
jle
lcall
clc
outsb
inc
sbb
cmpsb
cmp
and
jge
xchg
cmp
outsb
loop
mov
int3
aad
push
mov
xor
dec
and
loopne
and
mov
xor
xchg
int
dec
int
mov
push
pop
out
arpl
jge
daa
adc
lahf
shl
jp
clc
mov
adc
inc
in
test
lods
fwait
xor
jnp
mov
mov
mov
push
mov
pop
mov
inc
sub
mov
jbe
cltd
es
and
sub
jp
xchg
mov
mulb
xorb
rcll
inc
loope
mov
and
inc
bound
fildl
push
xchg
testl
push
in
dec
cli
xchg
mov
test
clc
jmp
mov
aam
leave
shrl
out
dec
xchg
sub
mov
mov
lahf
mov
ds
jecxz
jecxz
je
ss
inc
and
mov
jg
ss
in
lds
sbb
imul
faddl
imul
shrl
std
jg
lcall
out
mov
jo
ja
inc
aad
cltd
xchg
push
rolb
test
test
cltd
xchg
aaa
cmp
or
pop
subl
jnp
shll
mov
or
inc
test
bound
test
sub
sub
add
popa
add
inc
push
sub
and
addb
cmpsb
sub
jnp
nop
adc
add
loope
andl
jg
pusha
int
enter
xlat
es
mov
cs
mov
xchg
aam
push
mov
push
cltd
out
add
xlat
jmp
int3
cli
cmp
add
xor
inc
adc
mov
ror
adc
dec
movsb
mov
and
mov
lea
leave
test
add
cmp
xchg
and
or
pop
jg
fstp
ficomps
xchg
jge
out
inc
xorb
cmpsl
out
jmp
aam
push
je
sub
mov
dec
sbb
adc
xchg
adc
fdivs
out
adc
aas
add
mov
lds
mov
push
xor
imul
xchg
cmp
dec
lods
sub
dec
scas
test
gs
sub
aam
test
mov
jge
leave
icebp
mov
xlat
xor
adc
clc
sub
jbe
mov
dec
sub
inc
xchg
mov
mov
inc
sbb
adc
mov
clc
pop
push
and
test
push
cmp
pop
aam
mov
iret
sbb
cli
rcl
mov
cs
sub
and
repz
xchg
scas
pop
movsb
pushw
out
js
pushl
cmp
sarb
cmp
scas
ljmp
sti
rcll
sub
cmp
addr16
mov
popf
push
or
subb
sub
lret
fiadds
jmp
mov
dec
orl
sbb
sbbl
mull
push
xlat
fbstp
mov
dec
mov
negl
xchg
std
mov
push
dec
pusha
push
cmpsb
lods
imul
xchg
pop
insb
xchg
ljmp
jg
lods
mov
call
insl
out
sbb
in
cmp
pop
ljmp
dec
shll
out
loop
pop
outsl
or
mov
xchg
push
xor
leave
xor
test
pop
movsl
addb
cmp
mov
mov
leave
les
mov
add
pop
xchg
out
push
lret
cmp
sub
nop
sbb
mov
xchg
push
push
cli
mov
jle
jne
xchg
movb
repnz
or
jp
dec
mov
clc
push
fld1
lea
mov
mov
push
test
sub
inc
or
inc
dec
cli
add
jnp
pop
fsubr
cmp
jne
mov
push
mov
pop
push
mov
xchg
push
outsl
mov
clc
lea
sahf
int
loopne
cld
jge
mov
and
orb
jnp
dec
pop
mov
and
inc
and
imul
sbb
push
ja
mov
stos
lods
xor
movsb
mov
xor
mov
movsb
adc
repnz
data16
clc
lds
addr16
or
ret
push
mov
daa
cmp
xor
cmp
xchg
jns
push
dec
jp
xor
mov
dec
or
fisttpll
lds
cmc
lods
mov
data16
out
enter
mov
movb
out
fucompp
mov
in
mov
mov
inc
popa
daa
jae
sahf
xor
jl
push
or
nop
push
insb
mov
pop
xlat
jecxz
ror
aad
sbb
xor
mov
fst
sarb
fwait
hlt
leave
xor
mov
jp
stos
aam
jmp
jp
repnz
mov
xor
cld
aam
imul
or
arpl
cli
mov
push
add
bound
inc
lret
add
lret
rclb
outsl
cltd
xchg
push
call
xchg
inc
dec
lcall
jecxz
pop
jle
pop
xchg
fwait
mov
cwtl
sbb
pop
js
cmc
inc
jnp
cmp
jo
sti
stos
int
push
loop
je
fs
mov
in
xchg
int
outsl
in
iret
lea
cld
imul
dec
fst
cmp
inc
sbb
test
lret
movsl
scas
xor
pop
jbe
mov
stos
fs
add
pop
jns
inc
sub
js
leave
cli
pop
add
hlt
in
fstp
ljmp
les
pushf
mov
xor
ljmp
inc
sbb
or
int3
push
lcall
fidivrs
or
adc
in
or
pusha
mov
lds
jne
bound
clc
lret
sti
into
movsl
shll
pusha
insl
push
sbb
add
push
enter
into
mov
xlat
mov
sbbl
out
andl
das
lea
sar
lret
or
xchg
adc
test
ss
rolb
cwtl
pop
or
ss
stos
mov
pushf
in
lods
jecxz
loopne
popf
inc
test
faddp
mov
xchg
insb
sti
loopne
cmpsl
jmp
in
mov
jb
dec
insb
pop
pop
clts
fs
cmp
mov
pop
jae
pop
mov
mov
dec
mov
into
icebp
js
sbb
xchg
pop
mov
sbb
test
inc
fcoml
les
fsubrp
mov
cmp
jae
jne
pop
xchg
iret
popf
ss
mov
rcll
stc
int
or
inc
fcompl
lds
shlb
dec
stos
jle
cmc
sarb
scas
arpl
iret
pop
aam
jmp
aad
scas
dec
sub
xchg
or
dec
imul
dec
cmpsl
movsb
inc
mov
roll
xchg
jl
dec
aam
aam
jbe
or
imull
scas
data16
pop
cmc
sbb
andl
jmp
call
jbe
mov
test
out
mov
jle
add
sub
cmp
inc
push
call
sbb
cmp
sub
or
inc
jg
xor
or
fldcw
test
and
fs
dec
js
and
and
xchg
aaa
or
pop
jg
filds
mov
jg
gs
mov
cmp
jle
xchg
sbb
out
jge
jne
dec
fidivrl
pop
ss
xchg
cmp
pushf
pop
insb
push
pusha
xor
dec
xchg
test
call
outsl
adc
sarb
cmp
xor
push
mov
jp
push
fistpll
mov
pop
adc
xlat
push
pop
and
enter
cli
xchg
pop
mov
test
xlat
pop
mov
loope
xchg
add
pop
cmp
js
add
pop
lret
int3
outsb
call
movsb
xor
dec
mov
sbb
add
test
mov
inc
push
cmp
push
and
pop
cmp
inc
insl
and
mov
hlt
lods
xchg
sbb
inc
xor
movsl
aaa
lcall
jo
mov
cmp
push
jp
in
imul
and
movsb
sub
sbb
mov
insb
jg
and
mov
xor
fmuls
add
in
xor
adc
xchg
in
fs
push
mov
push
incl
mov
dec
cwtl
mov
sbb
jns
mov
das
jne
jnp
scas
xor
mov
aad
xchg
std
cmp
movsb
aaa
xchg
insb
add
jno
push
add
loop
out
ret
xor
in
mov
frstor
xchg
adc
fdivrs
in
inc
dec
and
gs
adc
mov
push
popa
fcmovnb
xchg
fcmovnu
pop
inc
xor
insb
xchg
add
pop
inc
pop
add
sahf
add
sbb
dec
lea
mov
cmpb
fstps
ret
mov
xchg
call
in
testl
ret
dec
icebp
push
aad
and
xchg
sahf
mov
add
push
jge
mov
fistps
nop
push
lret
xchg
cltd
orb
pushf
mov
xchg
jge
lods
xchg
pop
jbe
fwait
xor
mov
lea
add
inc
jb
cmc
push
mov
xor
cli
push
aad
nop
dec
sbb
or
adc
mov
or
test
xchg
sbb
call
mov
mov
jo
js
aas
sbb
fsub
in
sbbb
and
pop
mov
dec
loope
mov
pop
aad
cmpsl
test
adc
hlt
fnstsw
xor
cli
or
pop
ret
insl
pextrw
jge
fstpt
mov
outsb
xor
mov
jle
inc
in
mov
xlat
add
imul
xor
ljmp
mov
mov
popf
scas
sub
out
mov
pop
in
subl
js
push
mov
push
mov
jg
push
mov
jne
jp
inc
and
pop
outsl
insl
pop
xor
and
movsl
mov
sbb
int3
in
ss
fisttpl
xor
sub
jnp
test
dec
cmp
dec
not
movsl
js
stc
xchg
imul
xor
out
movsl
in
ss
jbe
inc
dec
push
mov
repz
leave
push
insl
mov
xchg
fisttpl
xchg
jmp
pop
adc
or
cmc
rcrl
sub
jae
sub
fsubrs
data16
jnp
mov
loopne
push
xchg
jmp
mov
mov
mov
add
inc
jne
jnp
adc
xchg
bound
dec
jp
daa
test
clc
decl
push
icebp
cmpsb
xchg
loop
add
xor
std
and
sub
jbe
push
jp
adc
sbb
cwtl
push
sbb
xchg
push
test
mov
cmpsl
push
popf
dec
xor
enter
xchg
jp
sbbl
pop
pop
pop
idivl
sub
pushf
imul
cmp
adc
jg
mov
sti
jbe
cmc
ss
lret
fstp
mov
adc
xchg
cmpsl
lahf
adc
xchg
cli
sub
sub
sbb
mov
push
arpl
jno
shr
sub
jp
mov
es
sbb
cmp
bound
enter
lods
sbb
movb
subl
xchg
jmp
inc
adc
inc
and
or
or
and
rcl
dec
mov
mov
js
mov
or
sub
dec
add
fcoms
or
sub
sub
lods
pushf
hlt
adc
into
dec
mov
adc
and
add
sub
sub
or
mov
iret
and
mov
pop
xchg
mov
cli
inc
fistl
pop
lods
push
dec
jns
jno
test
sarl
rclb
sbb
fidivs
jb
nop
xchg
xlat
pop
sbb
sub
jp
cmp
in
mov
push
xchg
jp
or
lds
cmpsb
je
and
jg
inc
sti
xchg
cmp
int3
out
out
mov
sbb
std
inc
cmp
loopne
push
dec
fisttpll
lcall
and
inc
pop
pop
lods
out
movsl
sbb
mov
movsl
jnp
cmpsl
add
cltd
inc
testb
ret
mov
inc
push
in
jne
adc
or
pop
mov
lods
xlat
mov
cld
cmp
aaa
pop
push
jle
test
mov
adc
cs
jne
xchg
in
pushl
les
or
add
in
or
mov
or
cs
xchg
xchg
mov
inc
nop
inc
xor
sbb
call
inc
mov
sbb
inc
dec
sbb
pop
shrl
pushf
xchg
push
mov
addb
test
mov
inc
mov
pop
and
dec
dec
dec
out
mov
mov
cmp
xor
push
sub
dec
insl
test
arpl
push
pop
lcall
mov
loopne
cmp
fidivs
mov
stos
sub
push
push
lahf
addr16
inc
dec
or
jp
adc
imul
fld
call
gs
in
mov
xor
pop
rolb
xor
scas
rol
mov
int
sub
sub
pop
inc
sub
cs
je
pushl
sbb
faddl
fnstcw
lret
mov
sbb
inc
mov
adc
or
lret
cltd
mov
inc
arpl
inc
or
out
push
or
addl
int3
sti
dec
lret
xchg
lret
xor
push
fcmovu
or
loopne
mov
sar
loopne
xor
sbb
pop
adc
aad
mov
jge
push
push
jge
test
aaa
jbe
testl
push
sbb
dec
fcmovu
addr16
sub
int
outsl
xchg
pop
lcall
mov
and
dec
adcb
cmp
int
ret
adc
xchg
mov
movsb
adc
sarl
cld
sbb
int3
push
mov
clc
pop
ds
aam
negl
sbb
pmullw
ds
insb
stos
pop
mov
jl
aaa
into
fstpt
sub
xchg
sbb
in
sub
shl
movsb
xchg
or
lock
and
xchg
movsb
jbe
mov
sub
or
push
inc
test
inc
jg
push
enter
fiaddl
ret
sbb
cmp
push
inc
outsb
inc
inc
push
loope
test
sarl
enter
push
loope
xlat
or
jge
inc
add
or
dec
mov
stos
sti
sbb
inc
imull
jnp
aam
add
sbb
sub
cwtl
mov
mov
fadds
in
or
pop
sysret
out
sahf
sahf
pushl
cmpsl
inc
lods
push
mov
leave
mov
out
dec
jo
mov
call
stos
add
movnti
push
movsb
sbb
orb
shrb
gs
mov
gs
push
fbld
lcall
jp
cmp
movsb
dec
pusha
dec
xchg
jnp
addr16
jp
lock
cmpsl
xor
mov
popf
xor
mov
int
or
jns
sbb
inc
sbb
and
scas
inc
inc
data16
adc
icebp
es
imul
cmp
or
icebp
push
cmp
sysret
mov
sbb
jg
bound
movsl
fsubrl
xlat
cmpsb
ja
js
jmp
push
enter
inc
inc
leave
xor
ret
int3
cs
xlat
and
data16
and
scas
mov
xor
xchg
packssdw
ds
js
cmp
aad
test
jl
nop
sbb
das
je
jnp
out
jo
ja
hlt
xchg
cmpb
push
in
pop
and
leave
cli
aaa
xor
test
clc
pop
xor
jno
je
sub
mov
pushf
adc
test
push
add
loopne
aam
cmpsl
repz
add
cmp
roll
test
or
mov
sub
stos
jbe
inc
ja
sbbl
aam
cmp
pop
shll
sub
testb
push
popf
cli
cltd
push
out
addr16
jg
in
cmp
cmp
push
aad
out
sbb
pop
add
int3
out
xor
ss
test
jl
lds
add
adc
adc
cmp
sub
rorl
dec
xor
add
fs
int
xchg
aas
fmull
cwtl
adc
fwait
sub
je
mov
xor
jbe
pop
loop
inc
out
sbb
pop
jecxz
mov
cmp
daa
into
jno
push
push
mov
lcall
push
mov
adc
in
jnp
mov
mov
xor
insl
xor
inc
or
daa
jne
mov
ja
jle
lret
nop
ss
cmpsl
int
stc
adc
movsl
xchg
lock
jne
or
cmp
mov
cmc
inc
push
dec
movl
gs
jae
cmp
aaa
stc
mov
xor
ja
mov
lret
cld
loop
xor
xor
dec
xor
test
leave
mov
lret
fsts
sub
and
xchg
or
mov
mov
adc
out
int
sub
imul
addr16
xchg
mov
xchg
stc
or
lcall
sub
pop
cmp
outsb
pop
xchg
lahf
jecxz
xchg
cld
imul
fdivrl
jecxz
fsubl
pop
out
std
mov
dec
push
sub
jbe
push
xchg
cmc
leave
es
or
xchg
mov
mov
inc
out
cmp
add
sub
add
insb
loopne
stos
jmp
mov
fs
cwtl
cs
push
ja
mov
dec
adc
adc
push
add
jbe
xchg
and
cmp
sub
repz
hlt
dec
pop
mov
std
fildll
lahf
xor
or
mov
xor
dec
add
lock
out
xor
iret
mov
pop
cmp
ljmp
sbb
jl
in
jg
xlat
imul
add
dec
decb
loopne
ss
inc
cmpsb
add
daa
sub
add
jmp
aad
sahf
mov
arpl
fwait
push
xor
or
stos
and
xchg
adc
mov
push
sbb
or
pop
cmp
cmp
mov
and
out
in
mov
int
mov
daa
mov
xor
dec
inc
out
std
xchg
add
adc
out
adc
and
sbb
add
in
pushf
adc
mov
test
push
out
movsl
ja
add
xchg
push
stos
adc
dec
or
mov
or
pushf
xor
loope
xchg
pop
adc
cld
rcll
sbb
add
rorb
ja
in
cli
in
js
cs
push
movsl
pop
inc
jne
mov
sub
cmp
lods
imul
adc
mov
jns
mov
cli
outsb
fnsave
ja
sub
addr16
cmp
xchg
nop
mov
mov
fdivl
pushf
dec
fs
jp
dec
daa
iret
pop
shrl
or
stos
inc
cs
loop
push
leave
pop
jecxz
sub
push
mov
xor
push
pop
out
aam
insb
jmp
ret
push
enter
out
mov
jns
mull
push
cs
cmpsl
mov
mov
fwait
mov
in
jmp
repnz
cmpsb
shl
and
add
dec
insl
sbb
push
stos
int3
or
imul
int
push
lcall
loopne
adc
in
lods
cmpsb
fistl
test
xchg
bound
jo
sub
dec
sbb
inc
mov
mov
fwait
jb
xor
mov
dec
test
or
ss
hlt
in
add
rcrl
test
subb
lret
cmp
cli
fcoml
js
or
je
mov
and
rorb
shrl
adc
mov
push
pushf
or
pop
bnd
divl
je
sub
jecxz
mov
enter
lcall
push
ljmp
cwtl
or
loope
shlb
lock
xchg
push
icebp
iret
aas
pop
mov
sub
mov
dec
test
cmp
gs
js
mov
jg
jp
fisubs
push
pusha
jmp
dec
mov
push
mov
hlt
repz
dec
and
fisubrs
adc
pop
mov
ret
cmpsb
ja
cmpsb
lods
sti
jg
pop
lods
pushf
sbbl
out
jecxz
fidivrl
shll
imul
je
or
sub
mov
dec
mov
pop
out
lcall
lret
xchg
dec
test
mov
aam
movsl
into
mov
in
pusha
movsl
mov
out
pushf
push
shrl
test
xchg
mov
sub
sti
and
and
adc
sahf
data16
pop
imul
or
sub
sub
in
clc
ret
sub
or
pop
xchg
popa
mov
fmull
mov
jge
inc
dec
mov
mov
arpl
pop
add
xchg
push
jns
repnz
dec
adc
mov
jo
push
pop
out
jns
movsb
add
das
in
xchg
inc
jnp
imul
jp
adc
mov
jg
add
je
cmp
outsb
repz
sbb
xchg
add
data16
cmp
mov
cmp
push
repnz
std
pop
and
outsb
rcrl
in
xchg
dec
insl
fistpl
je
dec
dec
push
insl
add
pop
jno
jne
lods
sub
aaa
jmp
enter
aaa
and
repnz
inc
clc
lcall
pop
pop
inc
jno
dec
lods
xchg
jnp
subb
gs
inc
subb
pop
mov
outsb
sub
lret
push
leave
pop
in
sbb
out
outsl
sbb
lock
dec
aas
imul
dec
pop
mov
xchg
out
add
mov
cmpsl
imul
loopne
mov
and
cmp
lods
jecxz
pop
call
icebp
test
mov
mov
cmp
jl
and
movsb
mov
inc
scas
lret
xchg
push
mov
mov
repz
lahf
push
mov
xor
xor
ljmp
mov
mov
pop
inc
scas
sub
enter
inc
imul
loope
ds
and
leave
push
adc
mov
mov
mov
xor
mov
push
jbe
dec
mov
xchg
mov
mov
pop
or
mov
sub
and
mov
pop
mov
into
test
dec
jmp
shll
adc
pop
outsl
xor
pushf
inc
xchg
pop
mov
scas
daa
inc
in
mov
inc
inc
jg
push
imul
jge
sbb
jbe
out
enter
loope
and
fwait
and
mov
push
addb
lcall
push
out
cmovno
inc
divb
movsb
mov
xchg
or
cli
sub
and
mov
xor
dec
fwait
ja
test
mov
imulb
in
test
fimuls
and
jbe
mov
lret
pop
xchg
arpl
or
add
xor
xlat
push
mov
cltd
xorl
pop
fiadds
sub
les
enter
jno
xor
data16
sub
adc
stos
mov
dec
xor
cltd
mov
dec
sub
jae
adc
lahf
shrl
cld
fisubl
addr16
push
movsb
push
xchg
out
rcrb
adc
stos
int
movsl
orb
jne
mov
lods
mov
adc
xchg
popa
out
mov
and
adc
xor
pop
push
enter
pop
in
in
mov
cmc
lock
out
adc
xchg
insl
mov
fcoms
rcrb
pop
and
or
mov
xchg
rcrb
repz
mov
fdivrl
mov
fucomp
jne
adc
lea
test
iret
in
mov
push
les
loop
dec
mov
push
cmpsb
xor
lds
push
jo
sbb
test
fisttps
ja
push
aas
in
inc
in
pusha
dec
dec
fsubl
ja
fs
outsb
xchg
sarb
fiaddl
push
mov
adcb
pop
iret
xor
mov
sbb
sti
sti
pop
cld
test
xchg
xor
ss
xor
cltd
fs
mov
inc
xor
or
sbb
xchg
xor
test
mov
xor
hlt
push
pop
push
icebp
fistps
cld
push
in
push
inc
xor
stos
scas
stc
dec
dec
sbb
jne
dec
repz
xchg
in
imul
or
mov
and
and
enter
sahf
jle
pop
push
jle
enter
notl
js
je
xor
sub
sbb
push
jg
and
cmp
fisttpl
add
pusha
pop
xchg
xor
mov
jp
mov
pop
and
pop
hlt
inc
add
pusha
adc
rcrb
sub
and
cmp
es
mov
sbb
adc
dec
and
das
push
jne
push
push
sbb
jo
inc
aam
outsl
orl
add
inc
add
pcmpgtb
push
xor
and
xor
or
mov
mov
enter
cmp
lret
or
mov
pop
cmp
cmpsl
mov
xor
xchg
leave
call
decl
insb
cs
dec
push
fldcw
movsl
imul
mov
aas
cmpsl
adc
xor
jb
push
mov
or
jle
cmpsl
dec
dec
rolb
pusha
cmpsb
or
outsl
push
into
xchg
cld
xchg
mov
repnz
jae
adc
pop
sub
daa
mov
ss
xor
jb
mov
add
std
or
repnz
push
sbb
push
in
or
push
cli
out
sbb
inc
wrmsr
mov
fmuls
sub
dec
add
pop
stos
scas
fbld
pop
das
xchg
or
xlat
repnz
mov
rcrl
push
mov
decl
es
lret
outsb
scas
rclb
call
push
sbb
mov
sub
fs
enter
enter
les
or
repnz
shl
bound
or
ljmp
sub
mov
data16
jne
and
lods
outsl
pusha
ficoms
test
repz
dec
sub
dec
in
sbb
or
and
ja
imul
int
sbb
scas
xor
jno
sub
dec
int
jge
inc
jo
cmpsl
xchg
les
sub
mov
cmc
or
ficompl
xor
dec
ret
inc
jmp
shr
pop
push
mov
out
ss
es
and
ljmp
cld
push
out
push
mov
mov
jmp
push
xor
cmc
add
lret
fbstp
mov
xchg
sbb
lahf
repz
insl
inc
push
pusha
sub
mov
xchg
mov
xor
push
fldenv
dec
pop
psubsw
sahf
cld
orl
arpl
imul
int
es
inc
lret
xchg
stos
div
push
dec
pop
push
adcl
in
ret
mov
es
pop
push
push
sub
jmp
push
idivl
push
int
push
cld
inc
in
pusha
sbbl
rcr
fs
loop
xor
clc
adc
pop
push
mov
lock
es
pop
mov
xor
mov
ret
enter
inc
push
mov
js
xchg
xor
pop
pushf
rcll
sbbb
out
aas
mov
in
mov
xchg
cmpsb
jns
add
add
cltd
jo
ret
cld
fiadds
cmp
or
mov
sub
jns
aad
clc
and
mov
or
lds
mov
or
xlat
pop
mov
sub
pop
mov
sbb
push
or
sbb
aad
mov
addr16
xor
add
push
cwtl
in
test
push
or
xor
cmp
xchg
ret
sbb
mov
push
jecxz
xchg
sub
cwtl
sbb
aaa
xchg
pop
lret
int3
xchg
lret
xchg
add
mov
enter
push
sbbb
sbb
out
mov
ret
lahf
push
data16
mov
jne
aaa
xor
push
xor
cmp
fstpl
xchg
xchg
out
or
je
mov
std
lea
mov
lret
adc
mov
adc
jnp
or
lea
out
lea
movsb
mov
lret
mov
lea
mov
arpl
aas
xchg
sahf
scas
out
rcll
ss
test
xor
mov
je
ret
cmp
add
inc
fwait
sbb
test
sbb
test
cmp
stc
int
lock
imul
fs
mov
xchg
mov
out
pop
hlt
ret
or
icebp
lret
mov
pop
xchg
movsb
mov
add
sbb
dec
imul
adc
lret
sahf
and
sub
mov
dec
add
clc
and
lcall
mov
mov
in
std
nop
adc
cmc
gs
or
daa
push
xor
jle
cmp
lcall
dec
movsb
cmp
xchg
in
aaa
adc
add
jp
mov
xchg
in
dec
cltd
sub
jns
pop
inc
mov
push
mov
test
add
sub
lea
mov
jg
push
stc
aam
mov
ret
push
or
xor
notb
dec
ret
lock
movsl
mov
jne
insl
add
sub
pushf
stc
sbb
mov
int
mov
sbb
dec
scas
hlt
jl
paddsb
fadds
inc
roll
cld
mov
faddl
inc
movsl
add
cmp
shl
rcrl
shrl
cmpsb
mov
mov
std
faddl
jo
test
jp
iret
orl
repnz
xor
lea
pusha
and
or
push
lret
push
and
fmuls
ret
or
pop
xchg
fsts
xchg
dec
leave
cwtl
testl
xchg
jbe
mov
fmull
adc
addr16
movsl
xchg
adc
xchg
arpl
test
notb
lret
inc
lock
lret
dec
stc
leave
jg
clc
lret
mov
sbb
inc
dec
fs
gs
into
sarb
cmp
cmc
ljmp
jge
sbb
xor
jecxz
xchg
lret
dec
sbb
insl
mov
push
fadds
sbb
cltd
repnz
aaa
dec
xor
iret
jl
push
pop
cmpsl
subb
inc
fbld
outsl
das
push
loope
repnz
and
and
in
pop
jb
mov
mov
pop
popa
xor
lahf
push
mov
cwtl
fwait
orb
rcl
xchg
lods
into
sbb
sub
mov
repnz
data16
adc
push
das
shll
out
mov
ds
mov
jge
or
mov
loop
and
jl
es
sbb
ret
add
jne
test
and
xchg
cmp
lock
xchg
les
jne
jb
jb
int
popa
mov
lcall
hlt
xchg
aaa
pop
pop
push
inc
into
add
jne
add
or
sbbb
dec
cs
xor
jge
dec
scas
jnp
mov
into
jne
jecxz
cmp
xor
add
loop
in
lea
inc
bnd
pop
cmpsb
sbbb
inc
push
lods
iret
mov
add
pushf
rorb
mov
adc
gs
pop
rorl
ret
int
sahf
jnp
iret
pop
fidivs
aaa
mov
adc
jge
mov
enter
test
aam
mov
enter
mov
rorl
jae
add
aas
iret
stos
mov
insl
clc
jb
xchg
lret
push
xchg
stos
jo
lret
sub
and
bound
sub
and
inc
or
mov
fidivl
test
mov
sub
xor
jne
dec
mov
adc
jle
cmpsl
adc
jae
push
xlat
mov
subl
sub
or
xchg
pop
movsb
imul
xlat
outsb
jns
push
push
enter
fwait
adc
out
add
jmp
and
call
sbbl
cmp
jge
push
jp
mov
sti
stos
mov
shlb
sub
adc
fwait
pop
cltd
lahf
cltd
arpl
test
ds
movsl
and
push
pop
mov
dec
mov
ja
in
ret
pop
sbb
in
adc
not
jnp
ss
mov
scas
sti
imul
mov
jb
xor
cmpsb
xchg
mov
scas
mov
inc
pop
xor
push
push
rolb
mov
mov
out
cmp
mov
add
push
jae
clc
ss
xchg
mov
mov
push
aaa
lods
mov
inc
cmpsb
clc
daa
stos
movsl
call
push
call
push
mov
mov
in
mov
sbb
jp
push
mov
pop
pop
add
sub
inc
mov
mov
xor
lret
fcoms
push
ljmp
scas
jle
and
cmpsb
sbb
sub
mov
into
sub
pusha
cld
dec
mov
mov
lods
cmpsb
mov
imul
pop
cmp
pop
cmp
inc
out
mov
test
mov
sub
sbb
js
insl
cltd
xor
stos
int3
dec
test
or
ret
push
mov
ss
or
mov
fldl
cmp
and
mov
or
jecxz
inc
mov
push
and
jnp
into
xor
push
les
fmull
cld
and
fstl
bnd
insb
or
cmpb
les
push
sbb
clc
add
cmp
adcb
jbe
jl
shlb
sbb
hlt
hlt
inc
mov
hlt
sarl
rorl
cmp
push
mov
test
push
xchg
pop
jecxz
dec
mov
pop
mov
icebp
fldcw
popa
in
test
jae
imul
jl
mov
push
hlt
je
mov
in
push
mov
mov
subb
out
lea
lahf
das
int
aam
pop
jp
pop
daa
faddl
pop
fwait
cmp
int
mov
inc
je
jb
and
es
sar
ss
in
add
mov
movsb
shll
in
pop
mov
cmpsb
push
xchg
lods
dec
mov
fisttpll
aad
and
cmp
mov
sbb
pop
test
insl
ret
add
hlt
cmp
jae
ss
mov
dec
lock
add
repz
ret
add
adc
cwtl
movsb
in
mov
push
xchg
adc
rcl
xor
sub
fdivl
gs
mov
call
cmpsb
jns
mov
xor
push
and
lret
jecxz
ljmp
sti
fincstp
mov
cld
cltd
pusha
push
rcr
push
adc
pop
push
mov
test
dec
sbb
test
inc
sub
jecxz
pop
push
mov
mov
fisubl
dec
pop
shl
repnz
sti
in
pop
inc
leave
jmp
inc
shrb
lds
stos
fbstp
add
mov
sub
jb
sti
faddl
inc
sbb
inc
jp
notb
dec
rorl
inc
movsl
loop
nop
push
pop
sub
mov
enter
pop
pop
fs
out
pop
add
jne
mov
mov
test
rolb
cmp
jmp
ret
adc
insb
add
mov
jo
adc
fisubs
cmp
inc
adc
xchg
mov
xchg
bound
mov
in
leave
loop
les
or
pop
dec
fucom
and
cmpb
push
mov
push
or
fucomip
pusha
xchg
and
pop
push
insl
shrl
cs
inc
ja
mov
push
xchg
adc
mov
xchg
jbe
test
add
cmpsb
push
mov
push
in
pusha
js
jmp
inc
jecxz
inc
mov
sub
or
stos
test
mov
add
scas
adc
insl
push
loopne
add
fwait
lods
mov
repnz
pushf
sub
jl
and
pop
rcrl
mov
fadd
push
jecxz
test
roll
movsb
and
shll
lods
lods
movsb
sbb
stos
test
cmp
pushw
in
scas
inc
fcomip
ret
sbb
andb
mov
dec
cmp
into
mov
add
push
push
cmp
push
xchg
sub
mov
jnp
nop
dec
jge
pop
dec
cmpsl
push
cmp
loop
pushf
mov
cltd
lock
jo
movsb
notl
inc
add
mov
add
jns
mov
test
movsb
mov
sbb
cmp
adc
and
push
jmp
jp
setno
push
int3
daa
cltd
cmp
dec
in
sbb
xchg
mov
pop
lea
mov
inc
jecxz
jns
xchg
je
mov
jae
jae
pop
push
stos
dec
test
fcomip
inc
xchg
movsb
adc
notl
pop
cmc
gs
clc
shrl
fnstcw
push
mov
and
in
addl
inc
fidivrl
sub
daa
in
inc
gs
push
xchg
lea
aas
or
inc
sbb
lcall
sti
mov
add
mov
ss
fs
gs
daa
sti
dec
mov
adc
shrl
repnz
out
cltd
loope
cwtl
lods
mov
lods
adcl
ss
and
and
adc
inc
clc
into
sbb
sbb
repz
mov
mov
mov
and
ret
push
rcl
int
mov
or
adc
push
lods
cmp
and
mov
lods
push
mov
repz
in
xlat
les
xor
add
pop
mov
icebp
sub
and
ficoms
mov
or
jle
das
test
xchg
jo
mov
cwtl
lods
in
pop
es
pop
add
xchg
and
and
jno
cmp
sub
xchg
jnp
jecxz
jns
mov
xorl
mov
lcall
insl
lahf
negb
adc
daa
repz
scas
orb
mov
adcl
and
push
and
js,pt
sbb
ja
stos
lret
mov
jno
gs
lahf
stos
in
push
or
aad
inc
mov
pop
jno
cwtl
mov
cmp
aad
or
mov
xor
inc
adc
xchg
dec
mov
sbb
or
out
lahf
adc
dec
leave
nop
cmc
cmp
sti
inc
jg
addr16
dec
rcrl
sbb
jg
pop
out
je
ret
movsl
xor
je
int3
ss
cmpsb
cltd
xchg
subb
cli
rcl
jne
push
mov
inc
and
sti
dec
out
xor
dec
sub
mov
jo
into
sub
decb
andb
xchg
in
scas
xchg
inc
cld
sbb
jbe
adc
inc
adc
inc
les
xchg
sti
push
cltd
stos
inc
xor
dec
ret
movsl
mov
call
out
mov
test
dec
jae
aam
jb
imul
jbe
xchg
js
mov
inc
fldt
add
cli
fdivl
push
mov
loope
or
add
sbbl
les
jbe
xchg
xchg
xlat
xor
out
jnp
fdivrs
out
mov
pop
inc
jns
inc
cmp
mov
jb
jp
insb
xchg
cmp
mov
adc
je
push
jno
inc
push
shll
inc
cwtl
adc
js
je
mov
mov
fistps
xor
aas
mov
test
cwtl
xor
mov
pop
sahf
sub
inc
addr16
sbb
mov
mov
mov
dec
stos
int3
ja
lock
gs
jle
aaa
mov
jns
js
pop
add
pusha
or
and
fistpl
xchg
adc
lret
andl
mov
popa
ja
push
mov
test
pop
in
mov
idivb
imul
mov
jnp
sbb
scas
imul
xchg
andb
hlt
and
mov
dec
repnz
cmpsl
sub
cmpl
dec
pop
sub
adc
nop
push
xlat
clc
mov
jne
in
push
xor
enter
imul
jecxz
xchg
sbb
pop
mov
or
push
test
and
insb
mov
mov
dec
mov
mov
shr
fistpll
pop
jno
test
add
jg
nop
lods
jg
sbb
jg
test
ret
aam
pop
loop
imul
sub
int3
mov
push
dec
lret
push
aad
jmp
cld
imul
mov
popa
cld
repz
adcl
xor
mov
sub
lods
js
inc
inc
cmc
aad
xor
fwait
xlat
jl
sbb
push
jo
dec
jne
adc
sub
push
xchg
jmp
push
scas
xchg
mov
sub
ljmp
xchg
call
mov
outsl
hlt
inc
repz
imul
mov
stos
mov
sti
pop
xchg
mov
jge
adc
lods
mov
add
inc
je
fmul
mov
or
push
cmovns
mov
sti
fcmovnu
hlt
add
xor
ljmp
notb
pop
jecxz
xchg
data16
aad
es
popa
mov
mov
jns
xchg
ja
mov
cld
dec
repnz
cmp
mov
pop
sahf
out
or
repz
jbe
ds
lret
fdivs
fimull
xchg
cmp
adc
nop
call
push
loopne
push
loope
jg
fucomip
clc
or
jl
pop
or
pop
imul
les
adc
push
fildl
fsts
dec
rclb
jp
push
push
and
cmp
and
sbb
cmp
fsubl
jae
adc
insb
js
hlt
cmc
xor
jns
lret
je
adc
cwtl
add
cld
test
cmp
fldl
test
pushf
or
add
mov
enter
xchg
jg
xor
fcmovnb
add
sub
adc
adc
insl
push
mov
mov
push
push
scas
and
sub
mov
or
add
fxch
test
jle
cld
mov
mov
lods
stc
inc
dec
stos
mov
call
ret
add
nop
pop
pop
push
xor
into
cwtl
mov
repz
pop
xchg
pop
mov
data16
pop
dec
or
push
gs
pop
test
mov
pop
and
push
push
scas
aaa
cmpsl
fwait
aaa
add
es
push
mov
fcmovne
jnp
jle
inc
aas
rol
pop
push
jns
shl
push
jp
in
xchg
cs
inc
mov
jl
ret
ja
fwait
mov
loope
mov
sahf
pop
scas
int3
in
xlat
scas
addr16
rorb
popa
sub
movsl
outsl
or
pop
in
idivl
pusha
push
sti
push
bound
repnz
dec
rol
mov
adc
outsl
and
pop
lcall
mov
paddsw
lret
es
mov
addr16
lods
push
xor
or
lods
push
xor
sbb
xchg
cmc
cmp
loop
aas
mov
pop
jl
xchg
in
enter
test
test
ret
pop
sub
pop
sbb
xor
pop
inc
ja
ret
les
mov
ret
and
lea
mov
lret
lods
fiaddl
rclb
pop
mov
xor
arpl
ds
stos
shl
mov
jge
adc
jb
imul
sahf
gs
adc
pusha
outsl
cs
sarl
cmp
sbb
push
into
sarl
ret
adc
xlat
mov
cltd
cli
scas
xor
pop
jns
cmp
insb
in
or
pop
sub
sti
loope
lcall
std
andb
sti
push
xchg
popf
xlat
xlat
sti
popa
aas
dec
mov
in
cmp
or
ds
dec
pop
sub
push
lods
adc
push
push
and
mov
push
sti
and
lock
sub
jns
xor
pop
clc
push
test
test
insl
test
add
sub
cmp
jmp
icebp
dec
push
insb
or
cmp
push
arpl
sbbb
fidivs
addr16
pop
xchg
pusha
pop
jecxz
cmp
movsb
in
sbb
mov
das
sub
and
mov
mov
ss
xchg
ss
testb
jmp
cmp
inc
nop
fst
jbe
lods
add
addl
jl
loopne
push
push
subb
rcl
rcrb
xchg
sub
push
add
hlt
ds
mov
push
sahf
cmc
pop
orl
add
jp
inc
push
out
fcomi
shlb
int
jae
mov
sbb
mov
hlt
add
or
cwtl
push
jmp
fxch
push
sub
daa
ficompl
call
ljmp
mov
js
mov
push
jns
mov
xlat
mov
inc
dec
scas
fists
xor
jbe
pop
int3
call
mov
and
and
fwait
add
pusha
into
cmp
mov
divb
fwait
sub
cli
mov
stc
push
testb
mov
ljmp
jo
adc
cmpsb
sahf
and
jo
fimuls
repnz
push
int3
cmp
out
imul
mov
je
mov
xor
add
stos
shl
lret
sbb
sub
fistpl
loopne,pn
and
xor
sub
jmp
vphaddwq
ret
aam
ret
insb
fistl
in
mulb
xlat
pop
add
into
mov
xor
lret
dec
cmc
push
sub
adc
stos
cmpsl
xchg
sub
mov
xchg
sbb
pop
add
enter
repz
ret
bound
inc
inc
nop
insb
jl
insl
xor
pop
daa
es
xor
mov
add
add
stos
loopne
ret
jns
pop
cmp
lock
push
loopne
dec
mov
pop
in
repnz
dec
ss
lds
sub
in
popf
ljmp
push
and
dec
nop
es
and
in
test
add
pop
dec
or
loopne
sub
jae
subl
push
mov
lret
fildll
test
mov
pop
fadds
jns
and
enter
mov
push
shlb
cmp
jg
clc
shrb
sbb
movsl
movsl
dec
adc
push
movsl
jns
incl
and
sub
inc
pop
sbb
movsl
inc
into
push
sahf
outsb
bound
sbb
and
add
xchg
mov
and
in
loope
stos
jns
pop
and
imul
xchg
ja
and
inc
mov
adc
pop
negl
inc
movsl
fidivs
fwait
arpl
xor
je
fwait
cmp
mov
xor
in
xchg
inc
orb
out
iret
je
cmp
cltd
fldt
cmpb
sub
ljmp
test
cwtl
pop
pop
jne
es
sahf
mov
mov
xor
scas
jecxz
jl
jb
adc
mov
jae
lds
pusha
divl
into
sbb
cwtl
mov
filds
jno
inc
and
ss
inc
fwait
and
jnp
cmp
sti
ljmp
mov
add
sbb
in
loopne
dec
add
sbb
stc
dec
push
cmpl
push
inc
or
push
mov
orb
inc
mov
popa
xchg
and
sub
insb
push
aaa
insb
out
xchg
and
jnp
mov
int3
mov
add
push
cld
enter
sbb
adc
push
test
or
add
add
imul
test
inc
sahf
dec
dec
daa
xchg
adc
in
mov
insb
scas
push
cmp
push
mov
push
push
fildll
jnp
pop
pop
jbe
js
sub
xchg
or
pusha
sbb
sbb
or
xorl
arpl
or
lcall
push
pop
jmp
roll
fisubl
popf
and
mov
movsb
inc
sbb
dec
cltd
mov
ret
mov
fmull
pop
pop
addr16
sub
mov
aam
pop
and
cmpsl
cmpsl
dec
cmp
lcall
mov
scas
mov
inc
mov
icebp
scas
sbb
sbb
testb
mov
xchg
sub
mov
dec
out
inc
inc
loope
dec
or
xchg
push
aam
push
fwait
add
add
aaa
test
push
jl
and
jp
dec
ljmp
aaa
movsb
sub
ds
clc
popa
inc
lea
fadd
shlb
pusha
dec
insl
movsl
aaa
jle
add
push
test
out
pop
pushf
sbb
outsl
testb
jge
std
jmp
or
and
test
aas
push
add
mov
mov
mov
add
orl
cli
mov
movsb
jmp
push
rol
mov
jmp
daa
sti
push
ja
lods
push
push
mov
stos
cwtl
cmp
push
cld
xor
leave
mov
xor
inc
test
call
push
and
cmpsl
xor
dec
or
add
pop
push
xor
cmp
dec
xchg
sbb
inc
jno
mov
es
push
and
mov
sub
negl
or
test
mov
jbe
sarl
or
insl
repz
xor
mov
repz
lcall
jl
dec
lods
int
pop
subl
xor
loope
cmp
sbb
push
addr16
and
addb
repnz
cld
adc
jp
sbb
cmp
cmp
insl
lods
and
xor
mov
adc
xor
aam
bound
xor
inc
mov
xor
sahf
jno
bound
mov
cmp
xor
sub
inc
or
cmc
mov
test
xor
or
nop
mov
pop
popl
aad
and
loope,pn
divl
mov
arpl
pusha
cmp
push
mov
xor
pop
nop
pushf
sbb
sub
or
dec
outsb
movsb
push
pusha
pushf
mov
sub
jl
fstps
mov
push
lock
fs
hlt
rorb
and
test
outsb
cmp
push
push
shl
push
mov
outsl
in
or
sub
jbe
push
mov
scas
add
movsl
es
addr16
xor
jno
sti
cmp
loop
xchg
mov
jnp
sbb
jns
jmp
inc
xor
cmp
jbe
xchg
fcoml
pop
push
push
push
int
xchg
int
pusha
cmp
push
lds
jge
stos
jecxz
imul
jmp
aaa
mov
mov
xchg
pushf
insl
movsl
jg
push
movsl
test
pop
pop
mov
je
pop
daa
cmp
hlt
lret
test
jle
ficoms
jno
loopne
test
stc
icebp
bound
daa
push
cmpsb
sub
daa
mov
mov
insb
je
icebp
ret
adc
xlat
fistps
and
lds
and
inc
or
sbb
scas
push
inc
rcl
insl
decl
xor
mov
fmuls
stos
dec
mov
and
imul
mov
sti
rorl
push
xor
in
std
push
sbb
cmp
inc
push
mov
aad
push
repz
sbb
out
xchg
push
xor
call
shrb
fs
sub
lods
lret
mov
lds
cmp
pop
adc
in
sbb
adc
adc
negl
std
mov
cmpsb
jno
pop
fucomi
jnp
adcl
fucomip
xor
or
fwait
sub
sbb
fisubrs
jne
jecxz
dec
cmpsb
jmp
sub
xchg
leave
loope
jb
insl
push
add
jno
arpl
test
cmp
pushl
add
ror
and
leave
int
dec
adc
pusha
add
pop
lods
inc
cmp
fdivl
push
data16
pop
mov
sub
lods
or
xor
xor
fistps
int
into
lea
dec
push
mov
fwait
xor
and
jg
mov
dec
pop
mov
data16
push
loopne
movsb
add
flds
test
lret
je
cltd
jne
sar
xchg
jb
testb
loop
mov
mov
cmp
inc
mov
pop
cmc
cli
lret
xor
ljmp
or
sbb
jge
xchg
xchg
and
mov
add
jl
stc
mov
shlb
lods
push
sbb
sub
mov
or
or
outsb
and
fcmovne
negb
jmp
outsb
pushf
adc
mov
hlt
lods
xor
adc
or
pop
adc
movsb
data16
dec
rol
mov
push
xchg
lahf
fs
mov
xchg
sub
xor
sub
mov
xchg
lods
cmp
adc
push
js
subb
in
xchg
cmpl
or
mov
pop
jmp
inc
pop
and
adcl
mov
jbe
xor
loopne
aad
in
das
jno
insb
mov
mov
loop
push
pop
into
testl
lahf
push
inc
dec
adcl
xchg
sbb
sub
xor
push
test
sbb
lds
dec
icebp
out
stos
in
bound
mov
decl
sub
lahf
xor
nop
push
mov
sar
stc
pop
adcb
pushf
lods
cmc
mov
inc
inc
xor
jl
test
loop
xchg
in
cmp
icebp
cmp
pop
es
sbb
lcall
and
pushf
outsb
push
pop
sub
cmp
call
jo
ljmp
cmp
ret
mov
loopne
test
push
mov
mov
adc
fdiv
fs
addr16
push
cmp
sbb
cmp
pop
cmova
in
xchg
sub
jle
fcomp
inc
shr
push
jp
mov
pop
ljmp
pop
imul
in
push
addb
icebp
inc
aam
nop
dec
fcoml
mov
ds
ret
aaa
and
into
addl
cmp
subb
xchg
bound
lods
and
pop
pop
push
movsb
aaa
daa
loopne
cltd
jg
or
daa
jnp
ret
aam
fnsave
fnstenv
xchg
push
and
sub
ljmp
jp
xchg
cli
cmp
jmp
cmpsb
sti
stos
pushf
jp
ret
lds
in
sbb
mov
pop
in
xchg
cli
jecxz
outsb
mov
jmp
mov
cmc
mov
add
add
js
pop
stos
out
shlb
ds
sbb
pop
insb
push
push
and
cmpsl
aad
in
jmp
inc
mov
nop
les
jp
mov
sub
or
in
cmp
add
jp
inc
lea
imul
iret
adc
and
fisubrl
push
outsb
mov
or
repnz
xor
jae
lds
add
or
dec
pusha
push
jns
push
mov
cmp
inc
and
jns
dec
jno
cwtl
jecxz
mov
jae
xlat
lret
xchg
push
adc
rcrl
ret
jmp
push
cmp
aaa
cmp
push
lea
xor
in
data16
sbb
mov
pop
push
movsl
inc
xchg
fnstenv
in
call
cmc
mov
xor
gs
mov
ret
sub
pop
cmp
push
xchg
scas
pop
adc
out
mov
fistps
fidivrl
sub
xchg
mov
xor
out
test
xchg
into
add
add
sbb
movsb
imul
xlat
push
mov
fstp
inc
or
test
loope
in
add
lds
push
adc
cmp
xor
jecxz
cmc
dec
fbld
mov
mov
mov
repz
cmc
mov
inc
cld
or
mov
xlat
xchg
mov
sub
sbb
push
push
cmpl
sbb
and
data16
and
test
jno
dec
pop
repz
adc
adc
mov
adc
es
sahf
sub
sub
hlt
jae
jp
leave
call
das
sub
imul
clc
jge
andb
jb
jge
jae
xor
inc
sub
sbb
hlt
js
and
cmp
ficompl
fidivrs
sahf
cmpsb
outsb
in
dec
and
leave
dec
vxorps
out
roll
inc
dec
sub
mov
xor
pop
clc
jp
cmp
clc
stc
sbb
cmp
jge
inc
jmp
sub
imul
not
loopne
mov
jle
pusha
push
xlat
ret
and
push
or
cmp
mov
sub
gs
mov
mov
and
sti
or
sub
adc
faddl
xor
or
lcall
dec
or
mov
in
icebp
ja
sub
loope
xchg
jnp
xchg
ds
xchg
iret
popf
push
aam
cld
testb
movsl
dec
inc
xchg
out
test
xchg
pop
lret
repz
inc
daa
push
js
cs
lods
sbb
fidivs
xor
jb
cwtl
adc
into
and
push
lock
pusha
cld
xor
les
dec
dec
movsb
mov
mov
movb
jo
xlat
icebp
push
repz
cltd
lds
fistl
bsr
lcall
cmp
sbb
sbb
jb
inc
jl
jno
fisubrl
out
mov
subl
adc
cli
out
fcoml
mov
jb
aaa
je
lcall
rorl
push
adc
jo
inc
fs
dec
es
jno
fidivrl
mov
inc
fistps
lret
lea
es
dec
mov
les
pop
jne
add
iret
std
push
mov
cmp
cmc
pop
cmp
push
jg
ret
outsl
jne
scas
and
xor
repnz
mov
xor
cmp
scas
repz
aas
es
mov
testb
mov
movsl
sti
ret
sbb
in
enter
imul
stc
aam
mov
mov
mov
cmovnp
test
in
frstor
mov
push
aas
add
out
scas
enter
sbb
mov
sbb
mov
mov
leave
mov
mov
and
lahf
insl
or
imul
gs
pop
pop
aaa
cmp
mov
xor
sub
pop
push
ds
cmpsl
test
push
cli
imull
mov
push
aam
jecxz
xchg
lods
sti
arpl
jg
cmp
or
in
stos
cli
pushf
sub
mov
icebp
cmpsl
fists
adc
or
mov
push
ret
inc
adc
push
out
scas
dec
cmp
push
jl
dec
cmpsb
pop
pop
sbbb
sarb
adc
pusha
and
adc
ss
xor
sub
icebp
pop
stc
sbb
mov
insl
and
scas
les
add
xor
push
in
dec
fcmovnb
call
sbb
push
cmp
filds
or
and
or
and
je
and
int
je
std
dec
fldl
mov
fcomip
xor
movsl
pop
cmp
or
inc
mov
pop
sub
xor
in
iret
xchg
stc
orl
dec
mov
aaa
insl
cmp
lea
add
cs
sub
adcl
jge
pop
adc
cmp
adc
xor
xchg
pop
ss
and
push
and
pop
hlt
and
mov
test
xchg
movl
or
and
or
inc
push
rcrb
xchg
stos
movsbl
mov
fisttpll
ficomps
sbb
push
push
adc
adc
aas
and
pop
mov
inc
shlb
inc
cld
jmp
push
stos
jg
cli
and
pop
mov
aad
mov
sbbb
sti
and
lods
mov
addr16
or
pop
dec
push
int3
jbe
mov
movsl
daa
rcr
pop
jg
mov
sbb
push
mov
cmpl
or
inc
data16
mov
das
mov
jl
cmpsl
pop
jge
push
mov
add
adc
stos
pop
cmp
inc
cmp
icebp
mov
mov
cmc
mov
movsl
cmpsl
stc
sbb
in
jl
or
push
popa
xor
scas
push
mov
dec
pop
xor
cltd
mov
fwait
push
dec
aam
pop
sbbl
jb
int
in
adc
je
pushf
jmp
sahf
cmp
inc
mov
xchg
imul
lahf
jge
mov
clc
inc
push
xchg
test
fistl
inc
pop
iret
jnp
insl
pop
xor
jno
ljmp
or
dec
xchg
push
mov
jae
sbb
lds
pop
loopne
dec
dec
out
in
add
lahf
xor
lods
mov
decl
mov
loop
dec
jecxz
rcrb
adc
inc
inc
mov
outsl
pushf
out
call
loopne
lret
mov
test
in
mov
push
aam
inc
sbb
cmp
lods
movsb
scas
popa
in
mov
pop
fst
les
and
inc
pushf
je
outsb
fsubrs
arpl
dec
or
stos
push
in
pop
cmp
cmp
add
ljmp
inc
in
aam
cmpsb
and
ds
cmpsl
fcoms
mov
ret
xchg
flds
fsubr
lds
div
fst
daa
cmp
cmpl
movsb
push
pop
adc
and
cld
adc
repz
andb
cltd
jae
fiaddl
aam
and
fldt
es
inc
stos
out
jg
push
lret
cld
mov
mov
sub
ds
jnp
das
or
dec
dec
pop
push
sub
sahf
aaa
stc
mov
pop
popa
ja
pop
nop
icebp
negl
insl
push
aad
sub
aad
and
or
pop
outsl
cli
inc
das
inc
push
mov
lcall
inc
fcomps
pop
addl
cmc
repnz
mov
pop
clc
aad
hlt
inc
xor
or
mov
mov
cmc
push
mov
sti
iret
lea
mov
sbb
push
arpl
ja
cwtl
bound
test
clc
jmp
jmp
xor
xor
ds
dec
inc
ja
lds
adc
push
mov
pop
lret
lret
aas
lods
and
shll
movsl
adc
out
sub
or
in
imul
fdivrl
or
enter
jae
rcrl
push
dec
scas
shll
dec
inc
jmp
dec
dec
and
in
xchg
mov
push
popf
xor
imul
pop
or
jge
movsb
push
leave
jl
ds
push
mov
jae
popf
cltd
or
aam
pusha
scas
bnd
pop
jnp
mov
dec
roll
jnp
lods
pop
mov
inc
dec
addr16
or
xor
ret
push
out
push
cmpb
sub
out
push
adc
in
ja
sub
xchg
iret
sbb
dec
pop
pop
sbb
sub
or
insb
bound
mov
jmp
mov
cmp
jns
sub
mov
test
push
sbb
dec
or
adc
pop
imul
push
mov
jle
adcb
push
lock
sbb
xchg
adc
iret
scas
pop
sub
sub
mov
fisubl
adc
repnz
mov
inc
punpcklwd
ss
push
inc
lss
sbb
push
jns
into
shrl
cmpsl
je
mov
dec
stos
ja
pop
int
dec
scas
jns
dec
pop
loopne
add
adc
or
je
cmpsl
adc
cmp
pop
in
std
dec
sarb
or
fcoms
cmp
mov
mov
jnp
cmovae
xchg
es
or
insb
xchg
xlat
inc
sub
cmp
mov
xchg
adc
sbb
stos
or
lds
clc
sarl
xor
mov
dec
dec
dec
rol
ret
adc
sub
aam
or
mov
xor
sub
adc
test
jecxz
add
inc
and
test
dec
repz
push
mov
jbe
adc
and
adc
imul
or
mov
inc
sub
icebp
pop
popl
in
xchg
jbe
out
arpl
addr16
popf
repnz
cmp
pushl
add
sub
jns
gs
in
jl
push
fwait
jo
mov
dec
shl
xor
jo,pt
je
xor
out
std
mov
rol
ljmp
out
leave
add
leave
adc
popa
mov
insb
push
dec
and
rorb
fidivrs
nop
mov
push
mov
clc
jnp
mov
ffree
sahf
out
out
popf
mov
aam
notl
outsl
push
imul
out
dec
sahf
mov
jb
mov
adc
xchg
inc
and
lods
sub
sub
xchg
push
leave
movsl
insl
ds
rclb
push
pop
repz
sub
aad
mov
fldenv
or
pop
std
xchg
or
mov
mov
rorl
lods
mov
mov
and
sub
daa
rcrl
pop
leave
decb
jl
cmpsb
adc
das
es
pop
cs
test
pop
and
leave
mov
scas
adcl
sbbl
cmp
xor
rcrb
outsb
add
pop
xchg
dec
sbb
test
dec
push
shl
jnp
imul
subl
aaa
push
jg
shll
adc
sbb
test
inc
pop
inc
mov
sub
loope
cmpb
in
pop
ss
or
enter
lock
mov
repz
les
xlat
mov
mov
dec
jns
xor
lahf
fsubrl
push
jnp
outsb
xlat
test
sub
mov
sub
sub
mov
cmpps
movsb
xchg
xchg
inc
rorb
dec
cmpsl
scas
push
or
push
mov
and
mov
or
mov
int3
lea
and
or
mov
or
jp
std
mov
fcompl
pop
add
pop
shlb
jb
mov
mov
xor
scas
xchg
lods
int3
or
jns
mov
popa
out
shrl
int3
mov
push
test
xchg
leave
sbb
out
cmp
ficomps
sub
pop
adc
pusha
or
jl
cmp
shl
jns
loop
dec
pusha
pop
popf
scas
pop
ja
addb
lods
hlt
jecxz
jno
pushf
mov
lcall
outsb
xor
inc
dec
mov
dec
insl
pop
mov
inc
add
lods
mov
lock
aad
add
daa
mov
rcl
and
jns
add
mov
out
filds
and
pop
inc
push
ret
cs
lds
pop
flds
repnz
dec
gs
sbb
das
mov
rorl
inc
pop
cmp
pop
jle
jmp
jno
dec
mov
and
scas
push
and
push
xor
imul
fildl
inc
shld
rolb
push
movsb
jmp
inc
or
sbb
lea
lret
scas
jl
jg
test
dec
cmp
inc
mov
inc
sbb
punpckhdq
xor
pusha
dec
sub
dec
nop
shll
in
repnz
inc
lret
xchg
repnz
pop
test
in
seto
dec
and
adc
jmp
loope
pop
xchg
or
lds
dec
mov
subb
dec
imul
clc
push
xor
dec
push
sbb
sbb
pop
sub
jecxz
daa
sbb
inc
xchg
shrb
addr16
loopne
fnstenv
adc
pop
xchg
and
fnstcw
jg
into
je
mov
sbb
sbb
mov
jbe
roll
arpl
cmp
jnp
rclb
scas
jbe
bound
mov
push
mov
sub
jmp
xor
fsubs
or
sub
repnz
fadds
or
outsl
mov
es
arpl
movsl
add
lods
xchg
out
enter
aam
mov
and
cltd
aas
hlt
sbb
xchg
addr16
filds
add
mov
jo
shll
cmpsl
push
stc
inc
outsl
cltd
mov
in
popf
test
popf
stos
fcmovnbe
flds
push
and
add
xor
add
test
leave
ret
movsl
aaa
cli
data16
lock
jb
out
mov
pushf
ret
or
push
lods
pop
hlt
mov
in
xor
sub
jae
loope
push
push
mov
stc
sbb
test
insl
lret
lods
pop
xor
in
in
mov
in
imul
lods
add
fs
dec
push
sub
xor
in
aas
mov
mov
lcall
lds
fimuls
out
mov
sbb
jbe
mov
sub
cmp
mov
inc
push
inc
jecxz
add
or
rcl
xor
cmp
call
sti
adc
in
cwtl
test
xchg
mov
sbb
inc
dec
or
pop
mov
jge
xchg
sahf
xchg
mov
mov
shrl
clc
or
cli
add
insl
repz
mov
fisubl
push
lcall
or
xor
repz
movsb
leave
test
imul
mov
jns
mov
aaa
gs
xlat
jnp
inc
sbb
xor
out
test
cs
cmc
fucomi
sub
clc
sbb
repnz
sbb
sti
push
xchg
inc
push
rolb
mov
add
or
shrl
mov
jmp
fs
pop
fdivs
push
push
inc
mov
push
dec
and
sbb
jo
popl
dec
cmp
adc
ja
adc
in
enter
xchg
pop
pop
and
icebp
ret
fimull
stc
and
bound
gs
mov
inc
xchg
shlb
mov
push
jmp
sbb
mov
ljmp
jno
push
dec
fstl
sarb
sub
mov
sbb
push
hlt
xlat
mov
lock
pop
or
pushf
push
jnp
sbb
arpl
test
ljmp
mov
lret
in
pop
in
or
inc
enter
in
add
sub
movl
