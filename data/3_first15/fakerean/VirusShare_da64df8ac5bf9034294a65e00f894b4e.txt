sbb
add
mov
xchg
dec
lds
imul
lods
mov
xchg
sub
ret
inc
ficomps
cmpsl
ja
fiadds
mov
mov
rclb
push
sbb
xchg
push
std
dec
outsb
fnsave
aad
int3
and
xchg
sti
icebp
and
or
lcall
sub
ret
fisubl
les
mov
and
mov
mov
dec
jp
adc
xor
enter
jmp
add
mov
rolb
pop
rorb
je
pop
lret
stos
push
sbb
cmp
sbbl
xchg
sbb
lods
mov
les
push
add
adc
add
xchg
xchg
sbb
or
or
aad
fdecstp
mov
ja
xor
cmovne
insb
fildll
pop
call
dec
mov
imul
pop
jecxz
mov
pop
scas
push
mov
clc
cmp
cmpl
cld
xchg
daa
lock
push
fwait
or
das
cmp
mov
lahf
jne
in
test
leave
fmulp
add
imul
sbb
es
sub
jmp
pop
lret
div
aam
xchg
pop
lcall
mov
pop
subl
cmp
lea
sarl
je
pop
mov
dec
jnp
aad
push
adc
movsl
mov
ds
jnp
jb
js
popf
insb
push
pop
fisubs
or
mov
sbb
sub
dec
jo
lret
jns
pop
fwait
popf
fistl
xchg
sahf
fwait
inc
and
mov
adc
mov
shlb
loopne
sub
ret
or
fldenv
in
loopne
jg
subb
xchg
add
loope
stos
ds
pop
movsl
adc
shrb
scas
sti
ds
jg
aam
mov
fists
addl
iret
fldenv
ficoml
sbb
stos
mov
scas
int
dec
lret
int
jmp
sti
mov
rclb
dec
movsl
mov
cltd
pop
ss
xor
cmpsl
jecxz
mov
push
inc
lods
das
pop
clc
dec
inc
sbb
popf
pop
cmp
push
pushf
in
cmp
mov
ss
mov
ficoml
mov
push
push
gs
loop
push
sub
cmc
and
lcall
andb
in
movl
mov
xchg
cwtl
sbb
push
xchg
int
stc
stos
addl
mov
sub
lock
push
pop
cmp
mov
push
push
fisttpl
xor
ret
inc
cltd
inc
into
cmp
jbe
bound
cld
cmp
mov
push
mov
pop
sub
push
pop
pop
jl
iret
jae
add
xchg
enter
fsubl
test
iret
out
xlat
stos
loopne
je
leave
imul
lret
fisubrl
sbb
out
pop
push
pop
dec
ficoms
lahf
sub
inc
adc
repz
je
clc
xchg
jge
andb
jmp
and
adc
pop
fldt
ret
mov
insl
mov
sbb
popa
cltd
pop
cmc
jo,pn
adc
popa
push
jle
into
nop
add
jp
pop
arpl
adc
aad
mov
clc
cwtl
scas
push
into
loope
cmc
jne
add
ljmp
cmpsl
cmpsl
adc
popf
mov
xor
fcomps
sbbl
dec
or
jge
adc
mov
repnz
stos
mov
ds
xchg
mov
mov
dec
push
pop
pop
pushf
nop
mov
lahf
adc
je
shlb
xor
or
pop
or
shll
idivl
int3
outsl
bound
test
andl
in
clc
aaa
sub
cmpl
or
les
arpl
into
test
xchg
cmp
xor
inc
mov
push
loop
jecxz
fnstcw
jmp
cmp
xchg
in
mov
or
fimuls
cltd
jecxz
popa
dec
fwait
divl
js
ret
xchg
push
lret
adc
aam
pop
in
or
divl
xlat
mov
test
xchg
lret
xlat
je
ficoml
jb
daa
mov
in
dec
xor
std
pop
lret
cmpl
rcl
dec
pop
addl
pop
repz
lods
movsl
cs
sbb
dec
adc
or
fistpll
repnz
or
cmc
sbb
push
aad
cli
aaa
cld
ror
sub
test
xor
iret
xor
pop
fcompl
out
fnstsw
mov
ret
ja
fs
repz
aas
es
repnz
cmp
icebp
sub
and
mov
pop
lods
stos
test
xchg
out
pop
xorb
subb
mov
into
mov
adc
sahf
lea
xchg
aad
pusha
rorb
adc
ja
xor
cmp
test
sbb
xchg
sbb
xchg
in
lret
and
jne
pushl
lcall
sub
sub
mov
lds
mov
inc
gs
push
cwtl
pop
movsb
mov
mov
lock
and
sbb
dec
push
pop
rcrb
mov
out
or
andl
dec
push
imul
inc
add
sbb
adc
fisttpl
push
and
cmc
inc
ljmp
cli
jl
pop
jp
mov
and
fcoms
mov
mov
nop
mov
mov
aas
es
ss
xchg
mov
pusha
mov
rolb
push
call
mov
and
cli
mov
adc
icebp
out
jg
add
icebp
pop
cmpsb
enter
mov
ds
ret
mov
inc
leave
movsb
test
out
or
mov
dec
xchg
sbb
jnp
clc
ds
hlt
aaa
dec
push
mov
pop
stc
int3
sbb
stos
or
jae
mov
cmpsl
int3
or
popa
clc
or
lods
add
fstps
xchg
iret
imul
pop
push
push
cmp
inc
adc
sbb
in
aad
fcmovb
sti
xor
cmpl
or
icebp
scas
sahf
ret
mov
or
inc
xchg
cld
inc
pusha
push
es
and
xchg
mov
or
not
cmp
aaa
xchg
rorb
sti
sarb
push
out
fildll
sbb
jmp
mov
jge
sub
adc
xchg
mov
mov
xchg
mov
mov
std
out
hlt
imul
push
stos
pop
nop
mov
adc
mov
sub
xor
sbb
bsr
lods
mov
sbb
lret
sub
sub
sbb
lea
lahf
aam
in
fisttpll
mov
in
push
ss
sub
lret
push
es
in
dec
inc
push
jnp
scas
scas
dec
pop
push
add
pop
pop
jb
jne
dec
push
daa
push
movsb
mov
scas
arpl
fnstenv
sbb
inc
adc
lcall
mov
sbb
jmp
pop
add
addr16
lret
loopne
je
dec
test
xchg
inc
popf
call
mov
fcoms
xchg
add
pop
inc
or
arpl
add
inc
sbb
fst
shrl
jno
js
cmp
jmp
mov
mov
pop
inc
imul
mov
int
or
cmp
mov
js
push
rorb
in
add
push
dec
pop
scas
jae
xor
adc
nop
mov
cmp
ret
cmp
push
cmpsl
mov
push
add
cwtl
insb
push
gs
pop
mov
int3
out
call
pushf
push
in
jle
dec
cltd
pop
call
pop
dec
pusha
adc
mov
push
cmpb
fdivrl
pushf
jmp
test
sbbb
cmpsl
movsb
les
in
inc
jecxz
fimull
jbe
mov
lret
cwtl
sbb
loop
mov
xchg
pop
out
push
dec
jp
fiaddl
into
scas
jnp
sbbb
fstpl
cmp
cwtl
cwtl
push
adc
lahf
jle
mov
or
and
dec
push
shrb
out
pop
into
mov
or
fnsave
add
mov
push
adc
jbe
mov
inc
and
xchg
sar
jmp
jge
shll
cmpsl
push
push
iret
hlt
mov
dec
and
test
sub
dec
cltd
adc
xchg
pop
or
sahf
aam
les
add
adc
rcrl
adc
std
push
adc
pop
xor
lea
cli
sti
pop
xor
test
mov
into
jle
adc
or
xchg
fbld
es
fnstsw
rol
mov
mov
leave
pop
loope
xchg
inc
shr
adc
stc
pushf
loop
fsin
mov
mov
iret
jns
test
pop
jno
and
cmp
lret
mov
ficoms
in
push
in
pusha
sub
pop
lock
mov
stos
mov
xchg
mov
mov
int3
ret
cld
jge
mov
adc
outsl
sbb
mov
int3
cs
push
fldt
gs
outsb
dec
mov
cmc
ffree
inc
push
lods
imul
adcl
push
lods
ja
cmp
mov
sti
out
int3
lea
sub
xor
and
ficoms
pop
mov
sbb
cmp
jae
cmp
fcmovb
insb
scas
shr
or
mov
xchg
in
in
mov
adc
dec
mov
cmp
rolb
push
cwtl
rcll
shrb
mov
pop
rolb
cltd
adc
xor
dec
and
xor
sbb
jns
or
cwtl
cmpsl
in
mov
sbb
mov
jne
push
cmp
add
insl
push
fidivrs
and
cmp
push
pop
hlt
enter
push
push
inc
sbb
nop
mov
jbe
mov
cld
xor
mov
leave
into
mov
cmp
fdivr
jmp
das
loopne
stos
jle
fucomi
push
mov
sbb
leave
xchg
enter
sub
add
sbb
push
int3
sub
cmp
leave
imul
add
mov
imul
or
dec
jbe
mov
xor
lret
bound
aam
inc
or
aas
lock
push
cmpsb
push
fcoms
insb
mov
add
fiadds
out
adc
inc
test
cmp
add
aas
mov
dec
scas
in
es
inc
mov
dec
add
inc
dec
sub
nop
xchg
jb
adc
in
jno
loop
xor
jp
sub
mov
xchg
mov
loopne
xchg
jmp
popa
int
daa
mov
jg
mov
adc
push
mov
mov
pop
lahf
mov
mov
add
mov
movsb
clc
mov
fcomi
stos
mov
dec
push
test
subl
rcrb
jnp
sbb
rcr
lods
incl
adc
or
adc
frstor
ss
vpsubsb
fildl
sbb
pop
sbb
jb
pop
js
jecxz
jns
mov
and
sub
mov
sti
xchg
xchg
xlat
xor
pop
push
movsl
push
test
adc
jb
mov
adc
pushf
mov
mov
pop
pop
push
cld
into
mov
test
push
popf
cld
divb
push
push
jecxz
jmp
pop
js
xor
shr
xchg
mov
idivb
push
ret
in
lods
jbe
add
cmpsl
into
int3
xchg
nop
mulb
or
adc
fiadds
push
cwtl
mov
mov
sbb
insb
and
movsl
hlt
in
mov
or
pop
mov
out
in
test
adc
xor
repnz
icebp
fimull
inc
pop
inc
hlt
in
int3
bound
dec
xchg
fsubl
push
xorl
int3
jns
jno
adc
push
lahf
inc
mov
mov
cmp
std
or
aad
fsts
sbb
dec
xchg
fcmovu
ja
ret
nop
ljmp
loopne
pop
out
xor
mov
jb
pop
xor
in
scas
loopne
rcl
jb
sbb
push
mov
dec
iret
jmp
push
push
ljmp
xchg
ss
clc
clc
add
sbb
dec
movzwl
movsl
push
shlb
mov
cmp
jae
add
lods
or
loop
cmp
loop
insl
xchg
push
ja
and
sub
xlat
movsb
add
lret
vmptrld
sub
andl
cmpsb
xchg
fcomps
dec
mov
popa
jns
fcmovbe
jl
cmpsb
movsl
lret
cs
inc
dec
lea
and
jae
mov
and
nop
arpl
dec
xor
jl
sar
out
inc
lret
lea
cld
into
movsb
sbb
jo
sarl
aam
xor
jno
lret
insb
int
pusha
jecxz
xchg
xlat
sbb
inc
jns
push
mov
mov
lret
sar
jo
add
out
in
lock
bound
and
bound
es
sub
in
push
call
sbb
sub
iret
outsl
or
sbb
mov
dec
inc
push
cmp
push
sbb
sarl
mov
xor
xlat
xchg
push
adc
xchg
pop
mov
xorl
dec
add
test
xchg
push
push
and
pop
jl
mov
lret
push
add
xchg
push
push
nop
pop
xor
and
popa
pop
in
filds
and
shl
jae
inc
mov
sarl
hlt
ljmp
pop
xchg
mov
ljmp
xchg
mov
inc
int3
add
jb
aam
shrb
test
push
clc
loope
shll
inc
pop
call
pop
xor
lods
adc
gs
in
out
test
addb
dec
adc
push
mov
mov
cld
nopl
sbb
push
cmpsl
cmp
push
lods
jo
mov
sahf
mov
sbb
shlb
inc
inc
mov
shlb
call
fstpt
adc
fiaddl
dec
movsb
push
shrb
pop
fwait
add
xchg
adc
ds
cltd
setae
pop
negl
pop
movsb
testb
mov
jl
mov
lods
pop
xchg
lods
mov
pop
lds
and
jmp
je
jo
das
or
add
push
cmp
je
xor
jae
stos
sub
sbb
int3
inc
push
rcl
push
xor
loop
in
jne
lret
pop
in
out
jbe
push
adc
jae
fdivrl
add
sbb
jo
outsb
aad
les
mov
aas
addr16
int
mov
rcr
test
movsb
pop
add
ds
incl
jno
into
dec
aam
lock
mul
add
nop
cmc
push
jnp
pop
inc
cmp
push
mov
cmp
xchg
mov
imul
xor
loopne
mov
ja
int
outsb
jnp
mov
mov
imul
in
mov
cwtl
bnd
sbb
sub
movsb
loop
xchg
push
add
xchg
or
mov
inc
fwait
lahf
mov
cmovle
adcb
mov
xchg
cmp
cmp
inc
popa
stos
adc
and
cmp
outsl
in
cmp
and
or
adcb
ljmp
dec
jmp
mov
ljmp
jecxz
sub
pop
add
cmpsl
insb
rcll
nop
sub
cmpsl
xchg
and
das
clc
ret
jl
mov
mov
pop
inc
clc
cmpsl
stos
jbe
outsb
enter
test
notl
cmp
mov
pop
loope
mov
lret
rclb
push
pop
jnp
push
mov
in
push
push
pop
xchg
mov
push
jb
rcl
adc
push
push
lahf
fcomp
mov
sahf
cmp
cmp
xchg
mov
mov
mov
xlat
popa
mov
aas
mov
stos
sub
xor
sub
into
xchg
mov
pop
or
test
xchg
push
pop
xchg
test
jae
aaa
push
jns
dec
pushf
or
xchg
mov
push
push
add
sbb
adc
mov
test
lock
pop
push
jne
aas
popa
je
insl
mov
mov
addr16
les
and
mov
js
outsb
mov
jge
jno
inc
push
in
dec
lret
pop
mov
jmp
pop
testl
sbb
adcl
inc
in
jno
gs
cwtl
add
or
and
mov
jnp
jnp
out
loopne
bound
shlb
or
movsl
adc
push
mov
add
jae
dec
into
or
loop
mov
lahf
push
push
sub
repz
mov
ds
ret
rcr
loop
or
cmp
out
jp
xchg
dec
sub
dec
pop
adc
mov
popa
mov
out
dec
mov
enter
mov
sbb
test
jmp
sub
lahf
mov
orb
pop
imull
sub
jg
xor
push
jne
adc
sub
add
mov
sub
sarb
imul
ds
pop
scas
dec
dec
clc
into
lock
test
shll
and
adc
ljmp
or
inc
xorl
bound
mov
mov
cwtl
dec
out
nop
mov
notb
mov
int3
pop
jl
push
lret
jmp
fsubrl
jnp
int
leave
std
fcompl
decl
inc
loop
pop
xor
jbe
fisttpl
mov
lret
pop
fdivs
lock
cs
sub
mov
lods
fstl
dec
lahf
or
jecxz
cmp
fldenv
sbb
pusha
add
dec
bound
fdiv
dec
inc
add
imul
pop
lahf
inc
lahf
mov
stos
out
or
xor
adc
cmp
cmova
xlat
lahf
xor
adc
xlat
pop
jne
mov
cmp
cmp
rorl
jns
jp
imul
mov
push
loopne
push
sahf
inc
test
iret
popa
enter
adcb
add
lcall
push
das
test
inc
addl
popa
test
mov
inc
int3
ja
lock
orb
adc
fdivr
int3
iret
in
test
inc
or
mov
inc
mov
inc
outsb
scas
xchg
dec
aaa
pop
negl
cmp
pop
push
and
mov
je
and
fldl
sub
xchg
mov
out
call
dec
xor
xor
mov
in
test
push
into
mov
or
adc
add
in
jae
mov
xor
data16
jns
nop
jb
cmp
leave
leave
iret
iret
sbb
or
mov
or
cmp
loopne
push
or
or
jge
xor
jmp
outsl
push
aad
test
in
or
sbb
push
clc
leave
js
push
movsl
rorl
pushw
cmp
or
out
inc
ss
sbb
add
lock
dec
js
push
iret
adc
sub
aaa
fldenv
and
test
inc
add
adc
movsl
in
mov
fdivrl
add
pushf
lcall
jns
shll
add
sub
mov
mov
cmc
aad
in
inc
add
push
dec
mov
loope
pop
add
out
xor
cltd
push
xor
sub
add
std
mov
ja
mov
mov
sub
adc
imul
bound
push
inc
arpl
cmp
pusha
stos
xchg
cs
sar
sahf
and
or
xor
stos
xor
ja
ficoml
aad
sub
add
add
stos
rcrl
adc
call
push
push
into
inc
in
fsub
fdivrl
aad
mov
in
xorb
cmpsl
arpl
das
test
sti
pop
adc
jns
lahf
adc
popa
xor
in
jp
jae
jbe
mov
leave
sbb
data16
out
pushf
cmp
dec
xor
cltd
int3
inc
xchg
daa
xor
mov
scas
mov
out
ja
nop
repnz
push
mov
and
or
stc
into
push
imul
mov
xchg
insl
mov
es
lock
mov
orl
mov
cli
jp
or
pusha
dec
and
je
and
out
push
imul
xor
xchg
sub
jl
cmp
mov
inc
mov
in
ljmp
inc
insb
sub
and
inc
xor
push
xchg
cmp
jg
loopne
faddp
jns
aaa
fdivrl
mov
mov
push
jmp
dec
stc
push
add
cmp
hlt
inc
push
sbb
push
imul
push
push
mov
popf
or
xlat
into
pusha
out
pop
and
fsubrl
push
mov
sbb
lods
xchg
or
xchg
xor
xor
imul
mov
jmp
mov
sldt
clc
leave
jle
or
loop
fs
pop
cmp
outsb
sbbl
out
adc
mov
fisubrl
add
adc
add
push
daa
push
daa
jle
int
pop
popa
mov
je
jecxz
test
pop
xlat
dec
mov
test
insb
loop
push
jb
rorl
clc
into
pushf
mov
movsb
inc
fwait
pushf
mov
fstpl
fsubl
test
rol
push
int
fs
imul
cmpsl
call
fsubrl
cli
push
mov
movsb
adc
mov
movsl
inc
cmp
push
or
andb
gs
push
sub
dec
push
lods
stos
dec
pop
mov
mov
pop
pop
add
add
xchg
enter
std
mov
sbb
mov
or
and
or
pop
or
aaa
mov
bound
jno
dec
push
aaa
push
mov
nop
leave
mov
loope
add
sub
inc
push
mov
faddl
ds
xchg
dec
jp
stc
pop
inc
mov
sub
dec
test
pop
jp
jnp
repz
cwtl
test
xor
sbb
lret
rcr
loope
adc
imul
mov
xchg
out
adc
xchg
sbb
pop
imul
mov
push
push
dec
shrl
sub
test
sub
mov
pusha
pop
mov
mov
out
incb
sbb
add
movsb
sub
mov
outsb
or
cltd
ret
mov
into
dec
cmc
lods
aad
call
push
pop
or
les
mov
aam
jmp
je
jp
sub
inc
pop
aam
lcall
mov
mov
test
xorb
clc
cmp
cmp
xchg
jecxz
fbstp
clc
call
sub
fstpl
lret
or
out
mov
lret
cld
cmp
mov
loop
mov
repnz
inc
pushf
inc
ficompl
mov
inc
jecxz
mov
scas
mov
lcall
in
cmp
int3
out
xor
push
cltd
into
aad
add
rolb
xchg
imul
pop
mov
sub
sub
out
jne
xor
es
mov
ljmp
jne
data16
jo
adc
inc
nop
nop
xchg
hlt
add
divl
imulb
in
and
icebp
xlat
sbb
add
cmp
and
add
scas
pop
xor
pop
lret
add
test
rorb
push
cmp
lock
jmp
fldenv
xchg
fistpll
sub
and
and
push
sahf
jnp
fisttps
or
jnp
in
lds
les
adc
insl
add
xor
cmp
mov
call
je
outsl
mov
scas
lcall
push
fnstsw
addr16
shlb
insb
out
inc
pusha
lret
xor
orb
mov
xchg
xchg
outsb
adc
outsb
xor
push
stos
sbb
mov
or
inc
mov
inc
xor
mov
and
or
and
mov
out
or
push
inc
push
sub
mov
or
les
dec
adc
and
mov
pop
mov
mov
add
or
dec
dec
test
mov
sbb
mov
xchg
sub
mov
fwait
orl
rcr
xchg
fstps
jmp
or
mov
addb
or
dec
outsl
inc
aas
sbb
jns
mov
lods
cmpsl
out
mov
sarb
js
dec
movsl
loop
ljmp
icebp
ja
icebp
push
into
cmpl
push
lods
add
repnz
mov
repz
xchg
fisubrs
xorb
or
dec
std
xchg
xor
mov
add
loopne
std
xchg
sbb
sub
pop
xchg
out
add
sti
add
mov
push
fdivrp
or
mov
cmp
mov
push
jb
push
inc
les
fldl
imul
test
sub
rcll
fnstsw
leave
pop
dec
scas
push
aaa
call
adc
push
sbb
inc
out
hlt
push
out
xor
movb
lods
jbe
and
in
mov
sub
xor
rcll
adc
je
adc
sub
loope
and
mov
xchg
insl
dec
pop
sbbl
cwtl
dec
add
incl
mov
pop
movsl
repnz
pushf
and
dec
add
faddp
jl
das
cld
adc
jmp
ss
sub
mov
pop
in
loope
or
xchg
repz
lods
add
cmp
fists
mov
pop
xchg
add
cmp
mov
fcmovnbe
pop
adc
pusha
mov
mov
btr
push
enter
mov
stc
loopne
mov
dec
or
popf
mov
int
mov
in
fs
pop
lds
aas
push
aad
out
mov
fstps
jne
mov
fmuls
ss
xchg
dec
add
hlt
test
add
jmp
inc
and
mov
push
negb
cmc
in
push
sbb
xchg
fimull
xchg
loop
jno
test
test
lods
xchg
inc
cwtl
mov
mov
arpl
cli
xchg
cmp
rclb
jmp
dec
jns
outsl
adc
mov
adc
adc
pop
not
push
mov
jns
xchg
mov
out
lahf
push
loope
mov
rorl
jo
loope
adc
cs
cmp
pop
cltd
stos
jl
repz
cld
adc
jl
or
lock
mov
add
ljmp
aam
frstor
test
mov
mov
dec
mov
movsb
pusha
lcall
adc
inc
adc
shrl
mov
test
sarl
stc
inc
pop
ljmp
test
or
fcmovnbe
push
outsl
shlb
cmpsb
mov
das
dec
cmp
and
mov
jns
popf
jecxz
es
and
ja
addr16
xor
popf
push
mov
int
movsl
xchg
fstps
fstpl
add
and
mov
cmc
fwait
jecxz
stos
scas
xor
pop
out
inc
adc
add
push
fistpll
xchg
fwait
aaa
out
scas
sarl
or
jecxz
out
pop
test
jns
int
popf
dec
mov
mov
out
cltd
mov
adc
mov
lahf
xor
mov
cmp
in
mov
xchg
xor
dec
sub
push
xchg
mov
hlt
adc
aam
jle
leave
in
dec
outsl
js
mov
xor
fwait
xchg
incb
je
subb
sub
addl
fisttps
movb
xchg
fisubl
cltd
jnp
mov
test
xchg
cmp
roll
adc
jge
stos
jno
ret
bound
fdivrs
mov
and
push
xor
cmpsb
sub
push
or
out
divl
xchg
push
fld
jmp
push
les
push
bound
and
push
fdivrp
xor
xor
add
imul
into
subl
adc
add
sbb
fmuls
dec
mov
add
push
jbe
cmc
cld
sbb
iret
lahf
rcl
lret
sub
lahf
je
fwait
or
or
daa
adc
jle
das
sti
cmp
loopne
ds
xor
in
mov
subl
mov
xchg
jg
scas
cmc
xor
imul
clc
addr16
mov
mov
jae
push
add
mov
mov
in
dec
mov
shrb
or
mov
or
jp
jmp
xchg
xchg
sbbb
test
ljmp
push
repz
repz
xchg
pop
jmp
xchg
lahf
roll
lods
sbb
mov
jb
jl
int
mov
sbb
jbe
mov
mov
outsl
and
stos
lods
dec
sub
fdivrl
aas
cmp
imulb
insb
cld
imul
sahf
pop
jns
mov
sub
jno
out
and
inc
movsb
xchg
and
push
push
ret
xorl
inc
pop
jecxz
sbb
xor
sar
cmp
rorb
add
xor
icebp
inc
and
pop
in
aad
jge
stos
jo
test
daa
xor
lock
push
stos
ljmp
sbb
sbb
mov
and
cmpsb
movsb
sbb
and
mov
int3
sahf
jge
or
stos
add
xor
pop
aaa
cmc
int3
mov
xchg
hlt
xchg
sbb
ds
push
dec
xchg
push
mov
xlat
movsl
jecxz
incl
fwait
mov
cmpb
pop
add
push
pop
aam
mov
xor
outsb
cmp
xor
out
loopne
push
fs
pop
xchg
clc
sbb
test
cltd
out
sub
mov
push
add
mov
lods
mov
enter
adc
jne
adc
fwait
in
add
adc
out
mov
sub
int3
push
inc
push
jp
push
js
mov
mov
pop
pusha
adc
push
daa
xor
jbe
xchg
lds
lahf
in
loope
es
pop
sbb
ror
push
je
pushf
and
outsb
cli
jae
dec
fistpl
push
std
push
mov
add
xlat
push
daa
rcrl
hlt
shrb
mov
ffreep
cld
mov
call
push
das
inc
sbb
int3
add
or
dec
adcl
addb
ljmp
cltd
mov
xlat
mov
sahf
repz
cld
sub
sub
cmp
add
popf
adcl
lea
mov
dec
sahf
or
push
ret
xchg
out
pop
sub
lea
test
xor
aas
or
push
or
rorb
dec
das
cmp
mov
loop
pop
jge
add
test
or
jno
hlt
int3
xor
push
add
inc
cld
dec
push
arpl
stos
enter
ret
mov
scas
mov
jmp
nop
sub
sbb
adc
call
scas
pop
pop
xchg
fisubrs
xor
das
out
pushf
inc
into
cmp
pop
adc
jl
out
xor
mov
shl
pop
stc
fmulp
adc
test
inc
adc
stc
jae
fs
enter
sub
or
neg
hlt
out
push
nop
push
mov
scas
inc
subb
cmp
je
jmp
addb
outsl
aaa
cld
mov
test
and
add
sbbb
or
push
add
mov
testb
mov
add
std
bswap
mov
test
inc
jbe
jns
pop
rcr
sbbb
outsb
clc
mov
push
or
mov
cmpsl
mov
pop
repz
jne
es
and
mov
jle
daa
lock
jb
xor
or
enter
sti
lret
dec
mov
mov
loopne
outsl
pusha
cmovb
mov
cmp
xlat
js
lret
cltd
sbb
or
loope
cmpl
leave
jno
cmp
lcall
fisubl
bound
fcomi
out
pop
nop
sbb
add
or
movsl
out
jecxz
jl
push
insb
or
jle
cmp
dec
pop
and
gs
sub
mov
dec
fwait
bound
mov
test
mov
xchg
sbb
js
mov
or
cwtl
cs
jecxz
inc
mov
push
and
pop
push
add
pop
jp
sub
stos
inc
into
out
into
adc
outsl
lea
call
outsb
sbb
data16
adc
or
jae
cld
jbe
pop
mov
sub
in
cmp
mov
inc
cmp
dec
movsl
jbe
sub
sarl
xor
push
cmp
add
insl
cmp
mov
shll
nop
jne
js
inc
mov
mov
loop
xorb
test
loope
sbb
ja
xor
lret
call
pop
sub
mov
xchg
mov
not
mull
rcrl
push
int
clc
rcll
mov
arpl
loope
aaa
or
arpl
mov
xchg
stc
repz
adc
cmp
scas
outsl
lds
into
pop
xor
arpl
fadds
mov
push
sbb
lock
sub
mov
mov
jge
mov
push
jb
cmp
add
pushf
jg
lret
or
jg
int3
and
insl
sarb
cld
mov
inc
pop
lahf
out
shl
lods
sbb
ljmp
je
adc
sbbl
into
dec
mov
adc
mov
cltd
cltd
jle
fadd
ljmp
dec
and
out
push
pusha
scas
sahf
mov
pushaw
sub
fists
testb
cltd
add
pop
jmp
in
arpl
ror
lahf
push
add
xchg
adc
cwtl
mov
mov
push
ret
addr16
jle
lahf
shl
push
jns
loope
int
push
fsubrs
fimull
push
mov
mov
adc
out
dec
repnz
mov
lods
mov
cltd
jbe
rcl
mov
aaa
flds
mov
jle
les
push
mov
rol
call
dec
pusha
cmp
xor
int3
imul
daa
rcll
mov
jl
out
xor
dec
mov
or
xor
fwait
mov
mov
cmp
int
xor
lret
repz
fstp
stc
push
or
incl
clc
push
int3
rcl
xchg
mov
push
icebp
mov
xchg
mov
sti
out
out
sarl
and
movsl
cmp
ljmp
test
loopne
dec
icebp
push
xchg
ret
scas
xchg
xchg
ret
gs
ds
cltd
add
hlt
dec
xchg
lret
mov
clc
jo
mov
cmp
gs
fistl
cs
inc
out
in
jns
jmp
pop
push
rcll
pop
fdivr
push
lcall
shl
mov
iret
test
push
push
add
pop
into
mull
push
test
js
sahf
vmovaps
imul
dec
sti
xchg
enter
fildl
dec
daa
jne
cmc
aas
lds
enter
fldenv
pop
xor
outsl
repnz
fwait
movsl
jp
ja
inc
jmp
mov
in
jp
hlt
pop
mov
dec
dec
cmp
jb
adc
popf
popf
shrl
and
or
rolb
sti
xor
popf
cmpsl
sbb
mov
dec
pop
les
mov
sub
add
xchg
adc
dec
inc
notl
inc
pop
add
jns
pop
push
and
out
pop
and
mov
xchg
sbb
notl
push
push
cmpsl
pop
cmpsb
popf
sub
inc
gs
sarl
cld
mov
xchg
xchg
mov
push
test
jmp
fidivs
repz
dec
xor
roll
fcompl
push
inc
cwtl
adc
mov
sbb
daa
cmp
in
iret
push
pop
push
add
mov
sub
pop
adc
flds
push
fisttpll
aaa
add
or
or
hlt
rcrl
push
popl
dec
dec
jnp
xchg
filds
mov
sub
xor
and
outsb
mov
cmpb
mov
out
cmp
mov
xchg
inc
mov
out
pop
mov
mov
iret
rcrb
es
mov
or
sbb
pop
dec
cmp
leave
sub
add
xor
adc
add
cmp
popa
add
xor
cmpsb
and
imul
lods
add
loop
dec
mov
lock
int3
pop
xor
repz
dec
sbb
push
jp
fwait
arpl
jmp
mov
int
loope
lcall
push
pop
data16
and
pop
mov
jo
ljmp
repz
lcall
mov
sahf
add
sbb
fwait
mov
xchg
repz
cmp
xchg
pusha
test
mov
xchg
loope
mov
iret
outsb
movsb
mov
jge
lds
out
cmp
ret
out
rclb
push
aaa
cwtl
cs
inc
das
xchg
dec
jl
cli
clc
in
call
xor
pop
lock
ds
shrl
pop
test
inc
pop
or
pop
and
mov
mov
inc
mov
jo
xor
iret
in
add
mov
xlat
inc
jno
fcomip
scas
inc
xor
rclb
add
hlt
mov
xor
outsb
mov
jmp
jbe
jbe
test
test
das
shrl
add
cli
jg
mov
sbb
xor
shll
test
xchg
fdivp
lods
hlt
insb
cli
lcall
jno
scas
mov
adc
push
mov
jl
lods
lgs
mov
andb
adc
testl
pop
mov
mov
neg
js
jge
sbb
jbe
mov
inc
pushf
bnd
js
inc
jmp
push
incl
xor
sub
lds
dec
lds
dec
fsubp
xlat
les
xorb
sahf
icebp
loope
sbb
inc
cmpsb
push
mov
xor
enter
sti
outsb
adc
scas
bound
xor
cmp
loop
aaa
pop
pop
clc
addb
adc
and
xchg
into
xor
jne
cmc
jecxz
mov
inc
fsubr
xor
lahf
out
push
das
lcall
ja
movsl
cmc
mov
lret
cmpsl
cmp
arpl
xchg
push
vpunpcklqdq
je
dec
add
movsb
aam
je
pop
ds
inc
arpl
mov
push
xor
enter
ja
jnp
or
mov
shlb
in
add
lret
xor
xchg
sub
and
push
arpl
mov
insl
int3
mov
jns
lock
ret
mov
and
les
jb
arpl
xor
jge
ret
mov
inc
aaa
jno
add
xor
mov
xor
cmpsb
into
lret
dec
sub
xor
jns
inc
fnstsw
or
adcb
sub
cmp
jne
inc
inc
enter
push
xor
sti
mov
push
xchg
repnz
sarl
push
or
test
lcall
jmp
inc
in
jmp
cld
pusha
out
out
fildll
fwait
pusha
sbb
test
int3
and
in
mov
adc
push
pop
scas
nop
repnz
jae
outsl
dec
sbb
push
push
sbb
inc
ljmp
sbb
movsl
inc
scas
imul
push
and
cwtl
cmpsb
mov
xchg
jecxz
xchg
clc
mov
bound
jmp
lcall
in
sbb
inc
fimuls
ret
popf
push
sub
cwtl
xor
pop
daa
cmp
test
jns
ljmp
adc
lds
push
xchg
sti
cmp
xor
pop
rcrb
fwait
pop
inc
sbb
addb
lods
pop
arpl
pop
sarb
mov
push
and
or
rcrl
int3
inc
or
movsb
repz
add
push
das
out
jl
movsb
mov
test
or
jne
inc
mov
lock
add
js
loope
cltd
dec
xor
inc
adc
mov
adcb
adc
mov
leave
cli
pop
push
sub
inc
add
jnp
pop
mov
push
out
push
dec
subl
xor
loope
sbb
nop
or
and
cmpsl
test
sti
stos
out
scas
out
mov
dec
and
mov
xor
pop
fwait
sub
jns
jle
sbb
jo
jmp
xor
out
xor
xchg
pop
test
mov
cmp
xor
xchg
jb
stos
hlt
adc
jns
inc
pop
ljmp
ret
jl
vrsqrtss
addr16
xchg
add
mov
in
mov
rolb
push
push
sahf
and
push
cmp
mov
sbb
pop
repnz
xchg
and
jno
mov
ljmp
xor
xchg
mov
cmp
or
jno
scas
out
inc
es
inc
push
ss
daa
imul
idivb
jecxz
xorl
hlt
push
xor
mov
add
lret
imull
push
and
push
xor
dec
or
mov
pop
push
inc
outsb
xchg
sbb
mov
dec
ss
adc
movsb
dec
das
inc
or
cmpsl
xchg
shl
sbb
inc
xor
scas
push
pop
fdiv
xchg
out
cmpsl
lea
andl
sub
les
fidivrs
sub
ds
fwait
and
push
inc
push
mov
jl
fildl
jae
insb
mov
pop
dec
push
repz
sbb
stos
lods
adc
loopne
icebp
jne
inc
cmp
xor
mov
dec
or
xor
filds
fistpll
and
loopne
jecxz
fwait
jg
roll
sahf
fstpl
enter
into
and
sbb
arpl
add
mov
mov
iret
cs
je
jl
push
insb
sbb
cmp
dec
pop
sahf
inc
xchg
or
cmpb
xlat
mov
xchg
aam
insb
je
dec
sbb
or
adc
push
mov
in
lahf
push
sbbl
add
xchg
mov
xchg
dec
adc
icebp
ss
push
sbb
jbe
roll
jg
imul
xor
lret
sahf
inc
push
popf
fldt
jl
cmpsb
ja
mov
arpl
mov
adcl
cmp
xor
jp
fdivrs
mov
mov
rorb
jg
push
test
int
push
pop
imul
lock
or
dec
lods
andl
push
arpl
imulb
les
sub
pop
notb
mov
inc
add
in
mov
pop
cld
mov
and
leave
mov
cld
stc
test
jp
outsb
add
scas
xchg
sub
adc
sub
lcall
sbb
daa
xchg
sbb
cmp
dec
les
push
jb
xor
outsl
xchg
xchg
call
loope
test
jb
aaa
fnsave
mov
or
js
cmp
sahf
jne
sub
les
lods
int
bound
push
out
mov
lea
dec
dec
mov
cltd
xchg
scas
dec
mov
js
std
pop
sub
jno
lea
dec
imull
xchg
pop
cmp
loop
mov
arpl
popf
xchg
in
add
push
pop
stos
fstpt
xlat
in
cmp
std
loope
mov
stos
xchg
jno
push
adc
xor
sub
mov
sbb
lahf
mov
into
or
or
mov
jo,pt
cmp
mov
addl
cli
cwtl
repz
mov
scas
repnz
adc
xchg
lret
mov
xchg
out
or
jp
dec
lods
or
adc
cmc
inc
mov
jecxz
ficomps
dec
bound
imul
adc
pop
test
or
shlb
arpl
dec
bnd
pop
mov
cli
jle
xor
xchg
jecxz
inc
pop
inc
sub
stos
cs
scas
cmpsl
inc
loope
mov
insl
adc
cwtl
paddq
and
mov
nop
pop
mov
push
fcoml
mov
xlat
clc
push
pop
js
cmpsb
sub
cmc
sarb
js
lds
dec
jg
xchg
aam
xor
stos
sbbl
dec
pop
mov
cmp
cli
ret
add
cmp
dec
loopne
xchg
fisubl
fldt
pop
neg
lcall
mov
ret
jbe
sbb
movsb
outsl
mov
inc
lea
xor
or
sarb
add
in
mov
adcl
addb
dec
pop
xchg
inc
ret
xchg
std
inc
pop
fiadds
je
dec
fcompl
popf
mov
add
lea
in
popf
out
orb
mov
mov
and
and
jb
idivb
pushf
xchg
cmp
or
test
add
push
pop
ds
push
xlat
inc
xor
xchg
sub
jae
fs
sub
mov
sbb
xchg
mov
mov
enter
mov
push
push
mov
mov
into
das
adc
jae
sbb
sahf
popa
lahf
dec
inc
fwait
cmpsb
inc
pop
push
jae
decb
fidivrl
fldt
xchg
xchg
lods
pop
aas
push
pop
add
clc
sbb
xor
je
es
stos
jge
imul
dec
shlb
or
lcall
fdivl
mov
pop
test
push
fucomp
popf
lds
mov
inc
xor
loope
jl
fs
push
js
fimull
cmc
mov
lock
loopne
push
lock
mov
xchg
sub
and
lret
ret
movsl
fs
add
aaa
jae
js
pop
mov
js,pn
xor
mov
rorb
mov
fildll
jle
mov
jl
bound
cmpsl
cs
cmpb
push
sbb
loop
adc
and
adc
shrb
les
cmc
sbb
ficoml
mov
dec
jmp
mov
les
idiv
sbb
scas
mov
mov
dec
push
fistpl
lea
sti
xchg
inc
dec
in
add
mov
mov
rorl
mov
sbb
or
jno
insb
dec
cmc
xorl
cltd
xchg
push
adc
je
adc
inc
xchg
fmull
jecxz
mov
dec
int
mov
pop
fisubs
out
mov
lahf
pop
mov
dec
outsb
push
jb
and
pusha
outsl
ljmp
icebp
aad
mov
rclb
movsl
sar
arpl
popf
loopne
mov
push
ljmp
xchg
mov
jmp
testb
fildl
test
add
jmp
inc
fisttpl
fisttpl
ret
mov
dec
loope
pop
mov
rol
hlt
in
sub
mov
push
and
in
jnp
jg
push
lret
dec
ret
push
leave
inc
mov
jge
mov
movsb
int3
leave
aam
test
add
mov
xchg
push
xlat
sub
sub
or
int
in
andb
movsb
addb
push
imul
dec
out
mov
addb
mov
or
jae
bnd
sub
shrl
add
inc
into
fisubrl
mov
add
mov
add
aas
cmp
adc
in
push
out
shll
jl
or
dec
sti
pop
sbb
aaa
sub
xor
and
ror
lds
xor
out
sbb
movsl
cmp
pop
pusha
sbb
int3
jge
popf
pop
dec
cmp
or
insl
sbb
pop
push
lret
dec
or
push
mov
sbb
push
adc
mov
mov
fists
cs
es
jno
cmp
test
adc
mov
sbb
int3
sbbb
jne
jmp
test
lret
pop
inc
jne
xlat
xchg
and
popf
jecxz
fcoms
or
dec
ds
inc
mov
dec
and
push
shrl
inc
mov
movsb
xchg
jmp
or
dec
jmp
lea
mov
inc
fdivl
leave
rcr
stc
and
push
mov
int3
test
mov
out
enter
jbe
mov
jge
imul
int3
adc
inc
idivl
mov
xchg
sarb
lret
fisttps
add
add
fildl
ret
mov
and
clc
jns
jb
push
frstor
inc
sub
mov
pop
out
filds
push
into
pop
add
add
xor
mov
sarb
jecxz
cmc
loop
loopne
js
dec
mov
cmp
fisubl
arpl
jmp
jno
jle
pop
push
pushf
int3
in
inc
les
sbb
cld
xchg
out
jnp
rol
or
mov
std
decb
clc
jge
pop
sub
mov
cmp
xchg
pop
or
and
jb
inc
xchg
and
nop
cmpsb
add
xchg
push
adc
fdivr
jg
shrd
cmp
cmp
sub
addb
xchg
test
jns
cs
or
imul
arpl
jp
out
stos
xchg
xlat
stos
adc
cli
and
fidivs
mov
mov
out
dec
or
mov
push
adc
mov
pop
les
and
ret
sbb
push
aaa
icebp
lcall
outsl
shrb
enter
icebp
into
pop
adc
scas
cs
scas
xlat
stc
icebp
aam
or
stos
cmp
ret
push
jg
filds
fidivrl
pushf
out
inc
jae
jnp
hlt
test
orl
inc
imul
arpl
pop
pop
arpl
mov
js
mov
dec
xchg
or
sbb
jl
or
push
adc
lret
cmp
ljmp
dec
add
jno
das
fnstcw
enter
xchg
cli
inc
add
adc
sti
xor
js
ja
push
dec
cltd
aam
adc
icebp
jecxz
lock
cmp
xor
loope
aaa
xlat
popa
sub
in
xor
inc
pop
scas
shl
pusha
sub
cmp
and
xchg
shl
jl
mov
cmp
adc
test
adc
mov
les
sub
or
push
jl
gs
imul
lahf
les
inc
lds
aas
mov
ds
cltd
test
int3
outsl
enter
sarb
xor
inc
pop
movl
aam
and
nop
jns
adc
hlt
jmp
mov
cmp
icebp
aaa
jmp
testb
fwait
xorl
xchg
cld
daa
jo
pop
test
mov
ja
cwtl
sbb
and
xchg
fisubs
mov
add
scas
ret
dec
in
rclb
dec
insb
dec
ss
out
fwait
xor
into
mov
and
iret
fwait
or
push
out
or
test
test
in
stos
xchg
pop
xor
add
ret
jne
cwtl
cmp
test
dec
add
add
mov
nop
jae
pop
or
dec
leave
je
sbb
xor
add
or
push
jne
mov
ds
es
push
int
sbbb
sub
fnstcw
jecxz
sbb
adc
push
xor
or
push
mov
pushf
xchg
gs
pop
adc
loop
xchg
mov
iret
sub
cwtl
xor
push
in
add
mov
xor
mov
out
jo
xchg
pop
out
inc
mov
sbb
lret
fcmovb
push
lret
aam
and
mov
adc
pop
mov
jns
mov
sub
lahf
inc
ljmp
aad
in
in
pop
jmp
ficoms
ret
add
mov
mov
add
fcomip
movsb
pop
push
lea
call
adc
pop
mov
daa
jmp
pusha
mov
xchg
fildl
cs
and
adc
or
add
adc
xor
inc
inc
loope
or
in
movaps
cli
out
sub
xlat
pop
jmp
cmp
cmp
and
enter
lds
loope,pn
in
aas
add
cmp
xchg
adc
adc
cmp
sti
call
rorl
inc
or
fcoml
std
lea
fbstp
mov
add
mov
test
movsb
push
ljmp
xor
mov
cs
je
rorb
mov
andb
fsubs
fstp
sub
in
out
scas
cmp
insb
dec
je
mov
or
pushf
push
data16
push
push
pop
add
imul
test
test
insl
divb
lea
addb
jbe
push
pop
sbb
in
sbb
dec
dec
cmp
ja
pop
cmp
iret
aaa
int
and
add
ficoms
test
pop
test
or
paddb
and
movsl
xchg
stos
xor
arpl
pusha
lods
push
cwtl
dec
cli
stc
push
jo
dec
sarb
xor
push
inc
cmp
xor
popa
insl
lret
cli
pop
cmp
repz
movsb
pop
stc
mov
cltd
adc
xchg
sub
sub
in
or
jmp
sbb
or
into
mov
in
stos
lods
inc
dec
lds
mov
shll
sub
mov
add
xchg
xchg
sarl
adc
and
pop
push
adc
sub
out
gs
xor
fs
test
sahf
sub
pop
incb
daa
adcb
lret
xor
jmp
movsb
inc
fnstenv
addr16
sbb
aas
loop
and
pop
in
inc
cli
jbe
or
sub
pop
mov
dec
lahf
iret
ss
lock
cmp
or
mov
xor
pop
hlt
pop
jge
shlb
add
xchg
push
test
inc
dec
sahf
shlb
sbb
jb
mov
xchg
sbb
pop
mov
sub
imul
pop
enter
sbb
or
pop
aad
lds
stos
push
push
outsl
ds
dec
pop
int
add
lcall
popa
jmp
mov
test
and
mov
cld
and
lods
into
stc
push
jns
adc
dec
dec
inc
les
gs
mov
fst
adc
pop
xor
mov
xor
xlat
mov
enter
jb
mov
popf
inc
test
adc
pop
sub
xchg
sub
mov
bound
jg
jno
lds
pop
push
inc
mov
cmp
and
mov
push
and
je
into
jnp
icebp
jno
dec
adc
das
mov
push
xchg
ds
adc
jl
fisubrs
pop
out
or
push
ret
push
dec
mov
mov
inc
push
rolb
push
mov
in
out
sti
rolb
lcall
insb
mov
testl
jb
push
sub
push
fcompl
daa
insb
xor
outsl
or
pop
sarl
das
sub
je
icebp
inc
lods
shr
mov
or
sub
add
stos
pop
stc
mov
inc
adc
mov
or
push
cmpb
mov
mov
dec
or
hlt
inc
mov
pop
xchg
sbb
adcb
cmp
les
test
cmp
inc
lahf
lock
icebp
das
fistpll
icebp
xchg
and
jl
int
test
pusha
rcr
sti
dec
xchg
inc
or
sti
bound
and
dec
push
icebp
sti
or
repnz
and
int3
clc
xchg
jl
cmpl
stos
and
pushf
mov
mov
and
clc
out
or
negl
cwtl
pushl
das
adc
cmpl
push
jbe
scas
inc
aad
xor
loop
fld
cli
cmp
xchg
imul
push
out
aaa
iret
xor
popa
xchg
inc
mov
hlt
pop
xchg
movsl
pop
add
int3
jmp
inc
jg
mov
adc
inc
xchg
sub
mov
xchg
bound
pusha
cmp
and
outsl
mov
xchg
aam
inc
add
shll
mov
jge
mov
lahf
stos
call
movsl
mov
add
and
jmp
cmp
movb
sub
test
ljmp
fildl
ret
mov
pop
sub
pop
out
push
scas
push
fistps
push
rcr
stos
jno
les
pop
push
sti
in
mov
mov
lds
sbb
dec
add
jbe
sbb
push
sti
les
jae
jae
cwtl
pop
rolb
out
dec
sbb
jmp
xor
shr
jb
insl
sbb
mov
mov
jae
mov
insb
xchg
push
test
mov
int
cmpsl
fimuls
mov
push
mov
pop
mov
outsl
aam
popf
mov
adc
add
adc
cmp
mov
xor
fisubrs
pop
sarl
or
push
mov
dec
pop
xor
mov
mov
notl
movsl
xchg
push
adc
sub
jae
jmp
xor
scas
and
push
xchg
loope
dec
test
sub
fsubrl
out
push
cmp
or
movsb
mov
call
sahf
jge
sbb
das
jecxz
cltd
dec
mov
pop
int
sub
xor
mov
mov
clc
mov
sbb
mov
mov
sub
and
mov
xchg
cmp
cwtl
cli
xor
inc
mov
pop
mov
jl
or
mov
xchg
jl
push
mov
mov
adc
or
xlat
js
lock
mov
call
xlat
inc
int
mov
pop
and
pop
roll
arpl
aas
jge
sbb
loop
in
pop
xor
xchg
stc
fwait
or
ss
pusha
and
xor
dec
sub
cmp
out
and
mov
cmp
ffreep
cli
mov
sbb
jae
leave
dec
out
inc
sub
sbb
mov
imul
adc
jmp
fsubrl
mov
leave
addr16
mov
sahf
adc
jle
cld
adc
test
xor
jge
lret
ja
xchg
mov
in
sbb
sub
int
test
jmp
push
adc
jbe
mov
xchg
mov
int3
insb
pusha
push
pop
mov
movsb
adc
aas
mov
insl
shrl
xchg
ret
push
lcall
cmp
inc
and
sub
data16
jle
mov
adc
test
cmpsb
fnsave
les
shlb
jbe
xorps
jno
dec
shrb
dec
inc
negl
xor
xlat
and
pop
inc
sbb
pop
mov
or
jo
clc
les
inc
nop
cmp
adc
out
xlat
mov
jno
push
mov
cmp
pop
std
pop
push
inc
xor
hlt
push
jb
mov
mov
aad
cmc
dec
jmp
pushf
mov
ret
add
sbb
mov
aam
cmpl
xor
adc
test
jg
sub
lea
jmp
cld
lahf
add
mov
jae
xor
pop
push
leave
pop
xchg
ltr
out
loop
out
fs
lcall
inc
ja
jmp
xchg
inc
mov
insl
and
push
popf
cmp
jns
mov
push
and
imul
loope
and
cvtps2pd
dec
jo
and
cld
push
gs
jmp
or
sbb
frstor
insl
fdivrl
xor
ret
jae
aad
test
imul
xchg
addr16
inc
dec
out
fdiv
addl
push
sbb
rcr
jmp
mov
inc
dec
xor
adc
ret
mov
pop
mov
mov
mov
divl
xchg
jge
jb
insl
jecxz
push
or
mov
cltd
loope
and
jl
mov
push
aad
pop
and
xlat
mov
jo
pop
sahf
mov
mov
push
sahf
mov
and
outsb
mov
mov
mov
pop
test
out
pshufw
jg
fs
mov
xlat
xchg
loopne
fisubl
rcrl
and
sbbb
loop
sbb
mov
je
sbb
mov
add
out
cmpsb
lret
loope
push
push
jno
pop
mov
dec
das
aaa
in
das
rclb
jmp
push
movsl
dec
outsb
bound
cmp
mov
mov
lods
xchg
xchg
xor
fsubrs
loop
sbb
xchg
sub
sub
repnz
xor
mov
and
jne
and
mov
js
std
mov
xchg
mov
movhlps
sti
add
add
xor
and
movsl
in
mov
adc
inc
pop
push
or
fs
out
and
adc
xor
insb
js,pn
xchg
pop
cmpsl
sub
lods
stc
mov
test
push
fsubl
jp
clc
popf
xchg
sub
sbb
outsb
rorb
push
dec
in
jo
imul
add
fcompl
aaa
cmp
jbe
sub
mov
mulb
jg
arpl
fadd
test
test
cld
sub
and
movlhps
enter
lods
pop
fiadds
call
push
mov
lahf
push
stc
int
mov
nop
cmp
inc
inc
dec
iret
pop
mulb
adc
out
mov
sahf
xchg
out
clc
movsl
mov
push
imul
fistpll
sbb
adc
lods
sbb
mov
rolb
daa
jl
mov
mov
or
stos
push
xchg
test
lods
aam
push
cwtl
enter
jg
xchg
ficomps
clc
add
jle
add
sbb
inc
sbb
rcrb
xchg
outsl
ror
addb
inc
les
and
sahf
sbb
mov
mov
sub
and
std
mov
sbb
or
jae
xchg
push
inc
scas
inc
repz
aas
ds
icebp
jae
call
xor
sub
dec
jns
mov
pop
mov
mov
cs
cwtl
adc
inc
cltd
dec
icebp
lods
xchg
aas
push
nop
sub
pop
cmpl
mov
lret
cli
scas
ds
and
and
dec
ds
lods
xchg
xchg
mov
in
mov
mov
push
fstl
loope
mov
push
xchg
arpl
and
xor
sbb
sbb
and
add
mov
sbb
nop
fstps
mov
pop
sub
into
cmp
outsb
xchg
rolb
ja
in
push
jg
ljmp
cwtl
std
rorl
arpl
std
inc
lds
fs
mov
cmp
cmc
xchg
sbb
data16
push
add
mov
repnz
outsl
and
or
int3
nop
jl
pop
aam
and
aas
jecxz
push
jbe
mov
pop
mov
adc
loope
cs
call
jg
ja
push
insb
jb
mov
xchg
adc
or
scas
or
stc
and
or
lahf
sub
fnstsw
inc
movsl
std
jno
icebp
nop
and
test
dec
sbb
ret
ja
enter
push
cmp
jle
sub
mov
xor
dec
lods
xchg
ret
mov
xchg
xor
leave
in
out
xchg
cmovb
push
dec
mov
je
rorb
shlb
cmpsl
frstor
out
inc
in
push
mov
rorb
mov
and
dec
lret
stos
nop
scas
mov
xor
inc
aam
movsb
push
testl
and
dec
loopne
repnz
inc
cmpsb
cmpsb
adc
push
insb
notl
push
mov
testl
pop
ljmp
mov
mov
or
repz
hlt
les
shrb
in
mov
pop
jns
mov
xor
jecxz
lods
out
jge
mov
ss
iret
repnz
cmp
xchg
sub
out
push
cmp
xor
lods
adc
icebp
ja
adc
sub
mov
sub
cmp
mov
dec
rclb
cmp
jb
jle
notl
push
fsub
fmul
xor
or
sarb
cld
xchg
push
or
lcall
fwait
mov
aad
enter
notl
adc
push
ffree
sub
and
sbb
cmpsl
sbb
mov
jmp
test
imul
int
and
shlb
mov
sahf
daa
jns
and
xchg
jg
loop
sahf
mov
loope
mov
jb
std
push
push
sti
ret
popf
loopne
xchg
mov
out
or
push
jp
out
sbb
out
cs
and
enter
insb
sbb
or
xchg
mov
and
mov
sti
sub
sub
xor
faddp
mov
int
add
popa
jmp
mov
call
les
jno
xlat
push
ljmp
xchg
fbld
cwtl
or
inc
fxch
out
aam
filds
push
mov
sbb
outsl
jbe
dec
pop
add
out
into
mov
in
out
lahf
dec
ret
adc
repnz
shll
or
pushf
insl
stos
test
jbe
bound
xor
dec
mov
mov
decl
mov
sub
pusha
pop
cmp
push
mov
mov
ret
pop
xchg
inc
fs
popa
mov
adc
jle,pt
pop
test
push
pop
out
and
in
sbb
je
pusha
and
mov
inc
cmp
lock
jl
fs
jne
inc
cli
lcall
add
cmpl
jle
inc
outsb
cmp
lret
cmp
push
aas
sub
movsl
xor
int3
mov
dec
lahf
cmpsl
flds
push
mov
fs
popl
int3
xchg
mov
lahf
shr
sub
mov
cltd
dec
cmp
in
jb
scas
pop
ret
fmuls
mov
ss
push
cmp
dec
in
pushf
dec
mov
sub
sbb
and
sbb
add
int3
arpl
daa
cwtl
and
cmpl
jno
dec
nop
pop
in
cmpsb
mov
xor
enter
mov
adc
cs
xlat
out
cwtl
and
mov
imul
push
lock
xor
stos
adc
push
stos
xlat
scas
dec
fwait
daa
or
mov
inc
into
jb
int
cmp
or
inc
in
into
int3
loop
sub
dec
lret
adc
dec
fidivrl
xchg
adc
aaa
in
xchg
push
shll
mov
mov
les
lret
and
mov
dec
int
cmp
fcmovb
mov
insb
fstpt
aam
sti
popf
cwtl
bound
mov
mov
push
ret
dec
mov
pop
fcmovb
cmp
loopne
outsl
add
adc
cmpl
mov
lea
pop
jns
add
xor
cmp
mov
add
or
push
insl
pop
negl
jle
add
pop
nop
scas
jp
mov
pop
xchg
adcl
inc
cwtl
mov
aaa
cli
sbb
pushf
inc
pop
lahf
jg
mov
jg
mov
aad
mov
adc
pop
xchg
jbe
scas
or
cmp
jg
mov
mov
or
sub
sar
nop
sbb
push
jnp
add
and
mov
mov
push
add
fs
xchg
iret
xchg
jge
jecxz
mov
shrl
push
loope
xchg
ds
pop
lret
loop
rcr
push
mov
test
add
jle
mov
test
or
js
jg
lds
jmp
xadd
fwait
xchg
mov
or
outsb
nop
hlt
xorl
adc
dec
repnz
adc
and
jo
or
xchg
and
popa
into
in
aaa
mov
mov
dec
sti
jae
sbbb
inc
mov
pop
adc
lret
or
cmp
movsb
fwait
cld
xorl
pushf
test
in
fidivl
pop
mov
and
iret
repz
sti
mov
lret
and
or
fs
bound
add
adc
sub
pop
jmp
lock
fsubs
bswap
mov
fdivrs
xchg
and
and
lds
leave
xor
xor
push
jl
aas
int3
icebp
sub
xor
arpl
xor
push
js
inc
xchg
lret
outsl
out
mov
pop
pop
mov
mov
sub
sub
rorb
ljmp
inc
or
pop
lds
mov
addr16
cmc
dec
cs
sbb
std
aam
in
dec
ljmp
cmp
push
push
adc
int
adc
dec
aas
sbb
sub
dec
xchg
pop
dec
addr16
jge
mov
ljmp
stos
and
inc
lods
mov
pop
in
mov
sbb
filds
dec
pop
hlt
sbb
shrl
lcall
inc
imul
pop
adc
xorl
loop
xchg
sub
das
addr16
dec
pusha
xor
add
outsl
jno
adc
addr16
push
xlat
adc
and
lea
test
mov
stos
repnz
movsl
xor
add
sbb
ret
push
mov
shll
push
jle
stos
push
or
movsb
in
stos
mov
das
dec
aad
out
cmp
inc
mov
insb
lcall
es
mov
sahf
xchg
ss
inc
bound
sarl
xlat
loope
lcall
jl
out
test
inc
fcompl
sti
sbb
es
inc
in
mov
repz
lods
sbb
xlat
rcl
jge,pn
xchg
pop
hlt
aam
lds
sti
insl
mov
lret
faddl
daa
adc
jle
lds
fisubrs
add
arpl
rcrl
xor
jbe
je
test
add
mov
cld
xchg
sub
les
dec
aas
dec
push
mov
xchg
lret
mov
fs
scas
push
std
and
mov
shrb
or
loopne
sbb
sbb
and
fistpll
mov
lods
jnp
lcall
jbe
testb
cmp
mov
mov
popfw
push
push
push
movsb
aas
jmp
dec
aas
lret
cmp
loop
xchg
xchg
jmp
sbbb
insl
fcomps
mov
ret
pop
inc
dec
movsb
jns
lea
sub
mov
jns
and
insl
jae
inc
clc
cwtl
insl
push
xchg
mov
fldl
fiaddl
push
sub
xor
push
sub
mov
mov
icebp
sarb
outsb
add
xor
xchg
adc
ljmp
enter
dec
inc
nop
lret
aam
mov
dec
fldcw
add
pop
xchg
scas
idiv
cmp
outsl
shrl
xchg
andl
in
fcmovne
int
jp
sarb
hlt
sbb
mov
scas
mov
sbbl
mov
daa
sbb
xrelease
adcb
xor
pop
jmp
xor
pop
cwtl
jmp
sub
enter
dec
out
dec
add
fdivrs
das
xchg
xor
inc
pop
mov
sub
mov
mov
adc
sbb
stc
jge
push
add
mov
sti
mov
mov
inc
mov
fwait
ret
inc
jp
add
mov
cmpb
cmpsb
clc
ss
imul
stos
in
movsb
int
rolb
sbb
roll
mov
and
add
and
clc
les
mov
mov
inc
cli
fildll
mov
push
push
dec
icebp
icebp
fmulp
ljmp
add
outsl
cli
dec
mov
mov
pop
cmp
or
je
push
lock
out
sbb
jns
push
testl
popa
in
aaa
mov
enter
sub
fnstenv
xor
push
pusha
push
mov
in
push
dec
and
cmp
fdivp
xor
and
or
pop
pop
push
hlt
getsec
loopne
push
sub
mov
xor
mov
test
cltd
rcl
adc
in
addr16
popf
dec
cmp
sarb
adc
push
cmp
mov
sub
push
negl
xor
out
pop
push
mov
mov
or
adc
stos
mov
push
fnstenv
and
mov
inc
push
jmp
push
mov
movsb
inc
fisubrs
cmp
cli
jnp
fwait
pop
fsubrp
das
cmp
out
fstps
jne
aad
sub
push
pop
cli
test
sbb
cmpsl
add
out
xor
push
aas
mov
repnz
enter
lods
arpl
mov
adc
mov
mov
jne
jmp
mov
ret
leave
xchg
pop
mov
ljmp
xchg
gs
fisttps
js
xor
aam
fsubrs
loopne
inc
repz
lcall
pop
stos
or
mov
neg
lock
xchg
xlat
push
ret
sbb
aas
pushf
xor
push
ja
mov
inc
dec
jmp
sub
push
xchg
adc
data16
jg
loopne
out
xor
cmpsl
pop
cmpsl
fistps
pusha
ret
jmp
int3
outsb
shll
vmovaps
outsl
adc
fmul
jmp
or
cmp
lahf
mov
mov
mov
xchg
out
sub
mov
inc
loopne
pop
push
cld
std
add
ss
sub
clc
lods
ret
mov
cli
push
fsubrl
es
or
pop
lahf
aaa
mov
sbb
pop
mov
inc
gs
dec
imul
mov
cmp
pop
gs
dec
lahf
les
and
inc
and
mov
xchg
popa
or
sub
outsb
fcompl
xor
aam
pop
add
inc
lret
les
ret
sub
sbb
js
pop
in
lcall
aas
cmp
js
in
pop
sbb
cmpsb
orl
ret
insb
xchg
shlb
fcmovne
cmp
cmp
pop
arpl
cmp
and
cmp
pop
enter
dec
icebp
rolb
insl
inc
and
sti
mul
dec
ffreep
push
mov
adc
repnz
cmpsb
inc
in
cli
mov
es
cmpsl
psubsw
jbe
lret
fldcw
push
mov
mov
idivl
xlat
mov
stc
stos
lods
roll
lcall
inc
mov
mov
cmpsl
rclb
add
aas
in
push
dec
sahf
aas
xchg
cld
sahf
push
pop
pop
test
mov
mov
cmpsb
mov
es
movsl
xorl
inc
dec
push
pop
loop
fildll
and
mov
loop
sbb
dec
jp
mov
loop
repz
ljmp
hlt
movsb
cmp
mov
pop
cmpsl
sub
fidivl
lods
xor
fisubrs
cs
cltd
cmc
jmp
inc
xor
lret
repz
or
jp
jbe
cltd
fsubrl
arpl
outsl
jle
xchg
insb
dec
adc
icebp
xchg
out
loope
dec
shlb
pop
cwtl
ret
mov
mov
addr16
push
imul
test
xchg
andb
cmp
lea
jne
xchg
int3
adc
add
mov
mov
pop
inc
mov
lock
in
push
mov
pop
lock
pop
cmpsb
mov
rclb
jae
xorps
call
dec
pop
pop
push
pop
jge
sub
inc
and
daa
aam
pop
arpl
or
es
mov
fwait
sti
test
pop
mov
in
out
insb
test
push
lret
xor
adc
shl
pop
imul
sub
into
xor
mov
repnz
insl
mov
je
icebp
stos
sbb
sbb
sbb
cmp
sub
sbb
addb
mov
add
movsb
fchs
movsl
xorps
lret
rolb
cmc
cmp
nop
jecxz
imul
push
cli
in
mov
sub
mov
sbb
xor
mov
clc
bound
out
xor
shr
scas
loop
mov
add
sbb
xchg
pop
aaa
divl
icebp
xchg
loopne
push
cltd
stos
ja
mov
dec
ss
ret
inc
mov
inc
lahf
jnp
fdiv
imul
mov
mov
daa
popa
nop
jle
test
imull
xchg
mov
and
jmp
mov
es
mov
push
add
test
push
aam
mov
enter
mov
dec
int
mov
push
dec
sar
dec
adc
xor
dec
add
fiaddl
or
das
inc
add
int3
cmpsb
cld
leave
cmp
test
mov
cli
negb
dec
adc
sti
std
adc
adc
call
inc
add
dec
mov
cmp
daa
test
xor
xchg
push
jmp
aaa
stos
mov
aam
sub
pop
cmc
lds
cld
mov
roll
repnz
movsl
fucomi
fsubp
sub
inc
push
pop
fisubrl
adc
int3
test
mov
mov
mov
jae
add
dec
je
in
dec
push
inc
decl
mov
xchg
adc
and
rcll
add
mov
in
leave
mov
fmull
dec
ret
lret
outsl
mov
sti
ret
dec
movsl
test
mov
into
outsl
cs
pop
and
stos
mov
jecxz
pop
adc
enter
fnsave
push
dec
out
negl
js
pop
test
mov
sub
ss
ret
nop
rol
push
enter
xor
ljmp
popa
sub
shrl
pop
pop
mov
cli
or
ret
outsl
cmc
or
fmull
lcall
ret
sub
movsb
inc
xchg
jns
xor
sbb
cmpb
fincstp
mov
mov
call
inc
mov
or
jle
orb
adc
or
sub
push
jle
fdivrs
xchg
add
jge
mov
aaa
lock
cmp
cltd
mov
push
jno
push
test
adc
ficoml
outsb
fwait
js
inc
add
push
out
lret
inc
adc
push
push
neg
test
sbb
shll
xor
mov
push
ss
add
mov
xlat
dec
mov
xor
jbe
pop
xor
push
rorl
insb
mov
dec
push
dec
sub
sub
push
cmp
imul
rcrl
dec
out
pop
jae
lret
cmpsl
dec
push
arpl
xchg
fldenv
mov
or
popf
arpl
lods
rorb
mov
mov
pushf
dec
roll
arpl
outsb
jp
dec
cs
dec
lea
push
sub
sub
call
lahf
or
xchg
inc
or
inc
and
sbbl
fistps
jecxz
or
mov
xorb
jo
fiadds
mov
and
je
pop
mov
pop
sbbb
cmp
lahf
in
inc
sub
sub
cltd
int3
jmp
cltd
stos
lret
and
pop
add
sbb
xchg
and
js
rclb
test
pusha
lods
je
fbstp
mov
mov
enter
les
jg
enter
or
lds
gs
in
cmp
cli
pop
xlat
push
jae
push
pop
adc
pop
sar
adc
xchg
add
enter
imul
psubsb
outsb
mov
jle
mov
xchg
lcall
out
sbb
cmp
cmp
jno
pop
xchg
or
xchg
imul
cld
es
shl
pop
mov
mov
sbb
dec
ret
mov
fld
adc
and
push
and
xchg
nop
adc
pop
out
inc
sbb
cmp
and
adc
scas
nop
jp
add
loopne
cmp
xor
mov
pop
sub
mov
fiadds
aas
jne
mov
mov
xor
sub
jg
jns
stos
lea
loope
rorl
xor
jne
sahf
sub
fcomip
pop
add
pop
test
pop
push
mov
insl
enterw
mov
scas
jnp
mov
cmpsl
std
jno
mov
dec
cmp
dec
popa
push
scas
pop
leave
stos
sbb
adc
cltd
loopne
js
push
repz
cmp
inc
repnz
lahf
packsswb
popf
inc
cwtl
out
fistpl
xor
bound
inc
push
xor
repz
push
clc
gs
xchg
sbb
cmpsb
out
cmc
xchg
inc
nop
repnz
das
push
movsl
arpl
cwtl
fimuls
popf
or
adc
cmp
jo
push
xor
cs
sbb
sbb
mov
pop
pop
mov
mov
gs
add
xlat
sub
cwtl
cmp
jb
cmpsb
jns
pop
pop
mov
xchg
out
mov
xchg
jbe
daa
gs
pop
sbb
push
adc
popa
xor
mov
ret
ret
into
push
imulb
call
int
dec
cmp
mov
rcll
icebp
fcoms
and
lcall
sub
cmp
mov
mov
jg
dec
pop
ret
mov
mov
sbb
bound
pop
jae
pop
add
pop
es
adc
leave
pop
test
and
cld
cmpsb
cmp
inc
cmpb
jmp
pop
cmpb
cwtl
cld
add
shrb
out
pusha
pop
scas
push
or
cmpsb
lds
imulb
cmpl
jns
and
fs
pop
xchg
inc
insl
and
dec
pop
jns
int3
xchg
inc
pop
ss
inc
and
sub
push
xchg
subl
sub
jno
aas
push
dec
or
lret
imul
pop
sbb
mov
cmp
mov
movsb
fs
inc
dec
jne
fisttpl
cwtl
jne
push
mov
jne
push
sub
les
jbe
add
sbb
mov
pop
push
imull
mov
scas
insb
addr16
cmp
decb
stos
pop
lret
bound
mov
push
pusha
jmp
dec
lods
ljmp
push
or
push
nop
push
cmp
push
push
call
xor
dec
les
lcall
push
mov
fstpl
popf
andb
mov
aam
in
test
scas
fwait
add
and
jmp
movb
mov
shlb
mov
pop
xchg
fildll
xor
mov
mov
aaa
inc
mov
pop
jbe
mov
mov
jg
jmp
bound
dec
xchg
pop
xor
xchg
add
cli
movsl
in
cmp
inc
repnz
repz
mov
mov
int3
jae
add
shll
xor
std
cmp
mov
mov
fndisi(8087
shll
jno
inc
sbb
repz
aas
inc
inc
jno
xchg
pop
in
adc
addr16
in
aas
out
dec
lcall
loopne,pt
into
inc
jnp
lahf
enter
inc
cmc
xor
dec
adc
jmp
sub
aas
dec
lahf
stos
out
fmull
fnstcw
rcrl
pop
dec
in
stc
lret
or
lahf
jno
call
out
rcrl
cld
adc
fisttpll
jns
frstor
xor
sbb
pop
ret
fnstcw
inc
pop
sub
cmc
dec
aas
xor
xchg
in
xor
push
ljmp
outsl
jp
pop
call
add
test
mov
cmp
rclb
and
mov
cli
fsubrl
sbb
ljmp
xor
dec
in
and
popa
idiv
ljmp
inc
int
fdivl
daa
test
bound
rcrb
pop
add
push
xor
shlb
or
lods
aaa
mov
mov
pop
add
mov
add
sbb
test
fiadds
loopne
or
es
jl
lods
and
leave
xlat
aam
push
pop
or
out
jae
xrelease
sbb
mov
pop
outsl
mov
mov
test
xchg
inc
cmp
xchg
fildll
mov
push
sarb
enter
jg
sbbl
sbb
pop
and
es
ret
or
cmc
push
sarb
mov
cmp
stos
push
inc
negl
sbb
cli
cld
cmp
and
sub
mov
xchg
xchg
pop
pop
fwait
push
dec
call
dec
push
dec
shrb
push
aaa
orb
adc
mov
fwait
push
xchg
or
cmp
lods
add
out
test
lret
mov
cwtl
jb
xchg
xchg
or
pop
outsb
mov
outsb
pop
sbb
xchg
loopne
lods
sub
mov
jmp
and
scas
mov
xor
pop
jae
inc
mov
add
xchg
loop
pop
dec
mov
mov
stos
dec
jne
push
fstl
xchg
jge
fmuls
xchg
xor
jg
adc
mov
xor
addr16
and
mov
push
dec
mov
jg
pop
push
adc
daa
test
or
and
adc
pop
insb
gs
pop
pop
std
mov
int
cmp
repnz
jo
fstsw
inc
fstpl
inc
cmpb
jb
pop
ret
orb
xor
popf
mov
mov
push
xchg
nop
push
in
mov
int3
lret
iret
movsb
jmp
jge
jb
mov
shrb
in
mov
mov
inc
imul
mov
insl
jnp
adc
cs
not
jge
mov
lods
in
push
fisubl
sbb
sbb
jle
and
leave
push
enter
xor
xchg
xchg
cmpsl
lods
repnz
stos
xchg
fldl
test
sahf
lods
sbb
repz
jo
inc
cmc
sub
das
push
sbb
pop
test
sub
and
and
test
out
insb
pop
inc
jae
add
sub
push
add
in
add
jne
ret
xchg
hlt
push
rclb
jae
mov
pop
pop
sub
lcall
sbb
push
xchg
ret
mov
repnz
lret
inc
sub
js
inc
cli
pushf
jae
cmp
loopne
popa
mov
scas
mov
mov
cmp
mov
cwtl
push
cmpsl
int
jecxz
movl
stos
push
fcomps
fldl2t
ljmp
nop
jecxz
push
out
add
das
mov
fiadds
into
int3
inc
mov
arpl
maskmovq
divl
jb
lods
out
mov
cmpsl
mov
dec
idivb
add
addr16
test
sbb
cs
cmp
inc
out
shrl
jnp
iret
cs
data16
xor
jl
call
ret
arpl
dec
sahf
sarl
les
jb
adc
push
sbb
cmp
and
xchg
lock
xchg
and
jle
rcrb
sbb
ret
dec
cli
mov
jp
aas
vunpcklps
mov
fbld
dec
stc
mov
mov
push
imul
outsl
cmpsb
sbb
ja
jmp
mov
imul
call
cmp
add
pop
fbld
pusha
pop
jae
cwtl
std
push
int
jb
cwtl
push
sar
pop
je
mov
or
jns
popa
cli
cmpsl
push
fsubrl
das
subb
push
cmp
lea
and
ficoms
push
stos
push
jo
rclb
adc
lret
dec
pop
cwtl
mov
and
jno
fdivrl
lock
lds
lret
xor
adc
mov
adc
jmp
xchg
int3
mov
and
pop
pop
and
sub
mov
jge
lcall
cmp
lret
xor
ret
jmp
and
sbb
dec
push
outsb
jp
xor
rcrl
inc
add
insb
lods
jb
xor
or
lahf
cmp
fimull
pop
idivb
lods
aam
imul
rclb
dec
xchg
xor
xchg
mov
xchg
xlat
sti
jae
sub
pop
jne
lea
push
lret
sub
pop
lahf
push
out
fnstcw
fstpt
sub
jo
xor
push
cld
aad
sub
gs
cmpsl
sub
es
inc
dec
cmp
mov
fs
call
mov
outsb
mov
cmp
ja
or
iret
mov
iret
cmp
mov
cmp
cmp
fisubl
int
xor
cli
movsb
push
and
inc
xchg
divl
or
js
adc
out
jne
inc
cmp
inc
movsl
outsl
push
shrb
mov
pop
mov
flds
sub
dec
push
mov
adcb
loop
xor
mov
pop
add
insl
add
cmpsl
int3
pusha
call
mov
lahf
mov
icebp
lea
or
mov
pop
mov
test
aam
loopne
stos
pop
push
stc
rcrb
sti
and
scas
pusha
jecxz
mov
lret
popf
shlb
mov
jp
mov
add
sbb
push
dec
and
aaa
adc
mov
cmp
dec
jecxz
ljmp
sahf
pop
mov
sub
mov
pop
cmp
enter
mov
adc
aad
pop
sbb
cmpsb
sbb
pop
add
xchg
daa
repnz
rcrb
mov
sub
mov
mov
ja
adc
pop
xor
push
xor
imul
sarl
or
mov
rcl
out
dec
dec
jne
lods
xor
jne
adc
call
mov
rolb
pop
dec
mov
mov
mov
insb
sub
pop
mulb
ret
jns
cld
sahf
out
or
mov
outsb
pop
mov
inc
xchg
jle
test
mov
jg
bnd
or
stc
pop
fsubrp
clc
xchg
pop
jecxz
das
das
fcoml
es
or
sub
pop
call
pop
push
sbb
lcall
cmp
subb
sub
push
and
pusha
shll
jmp
pop
mov
xor
ljmp
shlb
sub
sarb
ss
aam
jbe
xchg
iret
in
xor
mov
pop
mov
mov
icebp
push
insb
mov
adcl
xor
pop
and
cmpsb
clc
mov
popf
xor
test
cmp
call
cmp
jecxz
frstor
push
lods
jae
sti
mov
or
fs
lods
inc
and
std
mov
ret
xlat
rorl
adc
outsb
pop
xchg
cwtl
mov
inc
xor
add
xor
sub
push
in
shrb
cli
scas
dec
nop
pop
daa
add
inc
mov
pop
dec
test
xchg
push
sahf
pop
push
addr16
pusha
sub
movsl
jae
inc
push
andnps
xor
dec
xchg
inc
dec
dec
and
or
and
inc
inc
or
jae
push
dec
lahf
adc
into
test
nop
add
jb
je
sbb
sbb
scas
inc
pop
jle
fisubl
mov
ret
mov
ljmp
pop
aas
jle
cli
fnstenv
push
iret
mov
ss
divb
pop
and
icebp
lea
loopne
insb
imul
cwtl
test
xchg
sbb
in
fdivl
mov
mov
out
test
or
pop
adc
movl
jnp
pop
daa
ja
ret
pop
fisubrl
mov
and
push
aas
scas
enter
dec
sahf
outsb
jns
in
mov
mov
nop
clc
data16
mov
pop
pop
lock
fstpl
xor
jo
test
fisttps
js
xchg
stc
in
jmp
inc
je
dec
roll
jmp
out
loopne
daa
ja
mov
xchg
jnp
inc
aad
xor
xorl
mov
xchg
pop
xchg
dec
dec
xchg
add
imul
lea
incb
sbb
add
push
dec
push
dec
add
jge
mov
dec
ret
in
sahf
bound
shll
cmp
xor
pop
and
ffreep
mull
inc
xlat
imul
repz
clc
sub
call
gs
out
aad
or
popf
sbb
leave
push
pop
jae
push
push
or
inc
xchg
mov
aad
sbb
fwait
testl
add
dec
push
cmp
data16
jbe
shll
sbb
fiadds
out
ror
mov
fcmovnb
pop
std
dec
mov
push
pop
cmp
stos
sbb
sbb
cmp
pop
aad
imul
xchg
jmp
jae
fisttps
mov
fsubl
pop
and
jae
clc
mov
insl
popf
les
jl
dec
mov
mov
dec
stos
rolb
daa
mov
cs
jp
stc
dec
jo
jns
dec
push
xchg
stc
push
bound
or
cs
sahf
xorl
ljmp
push
or
rorl
xchg
ljmp
fidivrl
mov
pop
insb
xchg
jg
ja
shlb
aaa
inc
push
mov
fwait
cmp
in
mov
xor
into
subb
and
ss
cmpsb
mov
stos
add
into
adc
ret
movl
movl
fcomp
or
adc
xchg
mov
and
xor
ret
jae
outsb
mov
push
or
sbb
cmp
pop
dec
sub
nop
ret
sti
sbb
mov
xorb
adc
das
mov
call
add
movsb
lds
and
lods
jbe
adc
pop
scas
sub
enter
out
push
adc
jge
or
movsl
movsb
push
and
push
sti
dec
jmp
mov
push
push
mov
daa
fdivl
and
adc
xchg
dec
std
adc
inc
adc
stos
aaa
mov
add
cmp
push
lcall
es
pop
imul
xor
jp
fmuls
fmuls
push
mov
or
pop
mov
lahf
cs
call
out
mov
fdiv
clc
out
jg
add
or
je
push
sub
rcrb
mov
adc
lods
decl
movsb
movsl
sarb
mov
call
sub
push
inc
inc
lahf
fsubl
inc
fiaddl
fiaddl
mov
pop
jns
leave
lock
xor
jae
int
sub
mov
push
mov
jno
dec
mov
mov
icebp
fwait
popf
mov
mov
pop
mov
cmp
shlb
mov
repz
lret
outsl
xlat
jae
jp
mov
aad
ljmp
ficompl
xchg
rol
add
or
arpl
lds
sub
or
mov
aaa
test
fdivrp
cli
mov
jb
mov
cld
mov
xor
lcall
aas
rorl
and
jl
jae
inc
lock
push
push
dec
cmpsb
mov
push
dec
inc
xchg
dec
or
lret
mov
and
xchg
pop
xor
ja
inc
test
loop
jl
sbb
aad
leave
mov
stos
pop
out
adc
mov
int3
pop
jb
popl
or
mov
push
fldt
mov
loopne
ret
dec
mov
fcmove
pusha
cltd
lret
xor
mov
aaa
inc
sub
adc
adc
pop
and
and
push
or
out
sbb
and
adc
data16
jnp
mov
cmpsl
mov
jnp
popf
push
push
and
pop
xchg
add
imul
pop
movsb
xor
movsl
mov
mov
mov
cli
imul
add
jae
insl
or
push
adc
pop
push
es
sub
imul
jmp
xchg
mov
jo
imulb
fcmovne
add
ret
lods
testl
jnp
aam
insl
adc
and
xor
cmc
jnp
rolb
and
adc
rclb
push
stc
clc
cltd
mov
out
icebp
js
bound
jecxz
adc
sbb
jg
cmpsb
mov
cmp
aas
push
cli
clc
sbb
inc
out
mov
jg
jbe
xor
nop
outsb
or
aas
xorb
call
or
mov
mov
dec
scas
mov
lods
gs
or
fsubrs
sub
xchg
sti
mov
fdivrl
adc
lds
adc
into
mov
data16
adc
mov
push
popf
sub
aas
xchg
in
dec
rcl
pop
dec
cmp
inc
mov
jno
bound
jae
std
sahf
rclb
repnz
fwait
pushf
mov
or
call
mov
push
ret
stos
add
cmp
ljmp
out
mov
xchg
aas
movsl
cmc
mov
adc
mov
cmp
loopne
std
sarl
nop
in
xchg
repz
rcll
scas
lahf
in
add
jle
mov
sub
jecxz
pop
es
dec
cmpsb
into
sbb
xchg
inc
mov
aaa
std
sub
sbb
stc
popa
adc
fdiv
lret
stc
fwait
push
or
sbb
adc
mov
popf
jecxz
ficoms
adc
jge
jge
in
and
fwait
jns
maskmovq
testl
jmp
pop
aad
inc
das
ret
push
push
test
mov
aam
test
cmp
mov
outsb
sbb
sub
popa
bound
and
adc
loope
lret
sarl
xchg
call
int3
lods
xorl
iret
es
inc
mov
lahf
xchg
mov
jmp
mov
jb
jae
js
cli
sbb
mov
lods
cmp
xor
cmp
jbe
aad
xchg
dec
bound
orl
fldenv
or
addr16
xchg
test
jecxz
mov
mov
arpl
sbb
adc
les
push
inc
rcll
jb
cmpsl
cmpsb
mov
fldl
lods
aam
outsb
xchg
mov
cmp
imul
dec
and
fmulp
movsl
and
inc
sahf
popf
or
or
pop
fstpt
in
jg
mov
add
aad
cmpsl
dec
inc
or
or
stos
pop
mov
and
xchg
into
ljmp
xor
mov
clc
dec
adc
shll
pop
push
sub
insl
xor
loope
ljmp
leave
call
aas
inc
loop
or
sbb
test
cltd
negb
outsb
cmp
std
movsb
xor
inc
shr
or
xor
decb
push
test
icebp
mov
pop
scas
cltd
je
mov
fwait
sbbb
into
movsb
test
mov
dec
sub
push
ljmp
out
test
test
xchg
adc
mov
notl
pop
xchg
pop
cs
hlt
movsl
cmp
adc
mov
lock
xchg
and
cmpsb
inc
jl
xlat
out
inc
jmp
insb
add
cmp
call
or
jns
adc
imul
hlt
jne
inc
mov
xchg
jp
ss
mov
sbb
stos
insl
popa
pusha
cmpsb
ja
inc
mov
fbstp
loopne
mov
xor
shr
push
ficomps
call
jmp
cmp
sbb
daa
adc
mov
cld
popa
xchg
lods
rclb
jle
jmp
mov
adc
mov
test
xchg
leave
xor
arpl
cli
or
add
icebp
cmp
cltd
push
dec
dec
jecxz
outsb
inc
lods
lea
leave
pop
dec
test
pusha
push
in
mov
sbb
mov
aam
loop
sub
sub
jecxz,pt
jne
sbb
fwait
arpl
adc
fs
adc
pushf
js
mov
adc
jl
ret
xor
imul
pop
testl
inc
popf
mov
mov
hlt
jns
leavew
insl
jl
jns
mov
pop
out
add
outsb
xor
dec
cmp
in
test
ljmp
cltd
pop
idivl
xchg
xchg
pop
add
leave
aad
aam
pop
push
mov
mov
adc
shlb
sub
inc
pusha
adc
ss
mov
push
sub
add
movsl
test
add
inc
and
sbb
lcall
xor
mov
push
cld
jb
ds
mov
pop
push
scas
in
out
lds
inc
scas
std
xchg
mov
pusha
test
repz
mov
push
jns
sbb
push
dec
aad
mov
dec
pop
addl
test
lock
test
popf
sarb
inc
and
lcall
pop
in
cmp
inc
cmp
add
imul
and
push
jbe
notl
jbe
fisubrl
mov
sub
sbb
inc
sub
lret
inc
pop
sbb
jmp
pop
aaa
sbb
lods
and
pushf
loop
mov
cmp
aaa
inc
clc
jmp
add
push
xlat
das
xchg
fwait
dec
inc
add
fisubs
pop
dec
adc
and
jbe
in
lahf
ss
inc
lret
aad
mov
insb
lcall
xchg
testl
xchg
push
and
and
push
jmp
std
cwtl
cmc
popf
mov
and
ds
fwait
inc
stc
shll
mov
dec
mov
mov
pop
sub
sbb
adc
adc
pop
dec
test
adc
cmpsb
mov
inc
mov
pop
fwait
xor
outsb
stc
outsb
push
clc
fidivs
xchg
fnstenv
fdivrl
xor
dec
and
cmpsb
sub
aaa
or
pop
loopne
sbb
inc
xlat
push
inc
filds
into
push
lret
lret
orb
enter
dec
dec
cmp
mov
sub
fldcw
out
xchg
bound
sub
xchg
ret
xor
sbb
dec
inc
jp
or
lcall
cli
fnstsw
in
and
mov
inc
nop
ljmp
xchg
daa
test
sarl
add
nop
pop
dec
pop
adc
lcall
cmp
aas
sub
xchg
xchg
mov
mov
xchg
xchg
shrl
fiadds
xor
sub
outsl
mov
lahf
leave
out
adc
xchg
push
and
sub
ds
xor
xor
pop
or
or
mov
adc
mov
mov
dec
stos
xchg
xchg
pop
push
test
dec
fiaddl
inc
cmp
xchg
cmp
insl
adc
pop
repz
push
stc
add
les
fldl
pop
xchg
lret
lcall
ret
nop
sti
ret
inc
jnp
jp
fs
pop
xchg
decl
in
mov
test
push
inc
mov
jo
mov
sub
scas
jnp
mov
xlat
mov
fcoms
movsb
or
dec
daa
xor
and
lods
sbb
pop
or
mov
jnp
sti
sahf
push
mov
mov
xchg
aas
mov
test
test
inc
icebp
mov
lea
lods
dec
push
fnstsw
jne
into
cmp
lcall
shrb
outsb
push
mov
push
aad
mov
inc
and
cltd
out
out
sub
gs
movl
xor
inc
xor
stos
pop
jns
arpl
cld
sbb
push
mov
push
repz
dec
push
cmp
jl
add
iret
xchg
cld
mov
xchg
add
dec
adc
icebp
shl
sbb
inc
ret
and
xor
xor
and
stc
xlat
xor
push
dec
out
in
and
push
out
sub
mov
mov
or
cmp
in
sbb
pushf
add
aam
dec
xchg
pusha
test
mov
mov
sub
inc
jmp
stc
jge
adcl
jle,pt
test
mov
jle
cmpsl
mov
or
pop
xor
inc
rcl
xor
sub
add
dec
xchg
mov
jg
lods
push
scas
sti
fbld
sub
xor
xchg
lahf
push
int3
cmc
and
and
lcall
rorl
adc
push
lods
outsb
pusha
ja
pop
adc
sub
sub
fnsave
jbe
ret
mov
dec
icebp
cmp
fucomi
push
out
daa
aas
dec
pushf
xor
or
mov
sahf
outsl
fsubrl
insl
add
cmp
mov
test
sub
jbe
or
inc
mov
jno
arpl
lds
stc
cmpsl
lea
mov
fmul
and
adc
cld
repz
popf
lea
inc
push
push
mov
ret
outsl
ja
push
sub
subb
xchg
push
lds
rolb
jnp
sahf
xchg
sub
ja
inc
cmp
push
ret
dec
push
mov
inc
push
mov
xor
mov
xchg
push
pop
jo
ret
push
test
or
push
fldlg2
ss
jns
and
xchg
cmp
es
into
mov
and
mov
push
jbe
loopne
aad
push
or
jp
js
cmp
cmp
ljmp
out
push
dec
aad
and
inc
dec
int3
fld
and
out
scas
sub
fisubrs
xor
ja
pop
xor
sub
dec
jmp
icebp
sti
cmc
orb
mov
repz
ja
insl
rol
jne
sidtl
and
and
fistps
and
test
stos
mov
mov
add
js
es
fs
stos
cmp
outsb
or
out
stos
gs
xlat
test
daa
popf
mov
mov
sbb
ror
hlt
loopne
and
jp
xchg
je
cltd
lahf
out
jmp
insb
scas
and
shl
outsl
shll
sahf
mov
fldenv
adc
loopne
adc
xchg
cmp
inc
mov
jae
test
mov
adc
hlt
adc
fsubs
cwtl
bound
rorb
movsb
mov
xor
adc
pop
sub
test
and
adc
push
sbb
pop
pusha
push
sbb
test
add
dec
jge
xchg
sti
out
mov
rorb
ret
jle
dec
imul
and
in
lods
ljmp
sub
mov
insb
xor
cmp
mov
imul
cmp
mov
pop
xor
or
or
lods
cwtl
xchg
ss
jg
and
dec
arpl
inc
add
inc
mov
add
adc
negb
mov
enter
dec
sbb
cs
cli
push
cmpsb
jnp
jne
js
por
mov
inc
xor
inc
pop
xchg
popa
or
loope
jb
fnstcw
repz
pop
sbb
arpl
push
sbb
into
lods
push
cmp
sub
lods
stc
mov
dec
adc
jg
loope
fcoml
jno
iret
adc
cmpsl
and
fdivrl
hlt
lock
fs
xor
loop
xchg
ss
fldcw
mov
sbb
les
push
cmpsb
jno
sbbb
xor
in
mov
ljmp
push
addb
xor
sub
movsb
sub
push
pop
sub
dec
movsl
leave
movsb
int
cmp
ljmp
mov
mov
sub
lahf
jle
insl
jle
mov
cmp
das
lock
fstl
inc
push
dec
in
jbe
inc
loop
pop
mov
dec
push
aas
pop
xlat
shrl
icebp
call
fstpt
jmp
cli
add
js
dec
stos
fisubrs
scas
sub
add
push
fcom
popa
in
sbb
leave
mov
adc
dec
pop
push
jae
inc
ljmp
xlat
out
aam
cmpsb
and
xchg
add
cmp
push
or
dec
mov
imul
pop
or
loop
jnp
lret
mov
pop
xchg
inc
ss
push
adc
xor
jl
mov
adc
test
cmp
icebp
dec
sbb
popf
fsubl
cmp
ret
mov
dec
mov
xchg
inc
xchg
mov
jle
and
sub
jbe
pushf
popf
adc
stos
daa
push
jg
out
xor
lahf
in
cmp
pop
dec
mov
data16
rolb
push
add
mov
inc
mov
mov
mov
cmp
push
jo
mov
or
and
pop
pop
std
pop
fs
adc
jbe
je
inc
gs
scas
ficompl
inc
dec
test
data16
sahf
cs
aaa
arpl
push
std
inc
je
iret
imul
push
adc
dec
das
and
imul
mov
mov
xchg
jne
fisttps
fwait
lret
loope
rep
push
ret
sbb
mov
sbb
iret
sbb
je
iret
in
mov
xchg
or
or
mov
mov
sub
lods
jp
xchg
test
sarl
push
mov
mov
sahf
and
ret
sub
mov
into
das
dec
test
sbb
loop
mov
push
and
pushf
out
fwait
mov
insl
ljmp
xor
or
aaa
sbb
jnp
sub
sub
leave
push
mov
orb
cmpsb
dec
inc
add
and
shrb
andl
xchg
inc
lret
xchg
pop
lea
or
dec
sar
insb
lock
daa
push
mov
sbb
scas
and
pop
add
repnz
sbb
cwtl
lea
popa
cmc
add
dec
mov
imul
sbb
imul
sbb
mov
daa
repnz
mov
cmova
sub
xor
lahf
xor
in
push
nop
int
inc
push
inc
xchg
in
or
dec
or
or
fsubrs
lock
jl
xor
jns
add
icebp
lret
loopne
es
cmpsl
scas
mov
pop
jnp
out
idivb
out
mov
fdivs
mov
ljmp
data16
adc
cmpsl
aad
pop
stos
loopne
addr16
into
adc
je
mov
xchg
xchg
incb
sbb
fst
add
shrl
add
adc
sbb
lahf
jns
push
cmp
cmp
clc
mov
ret
mov
imul
fs
leave
mov
xor
pop
aaa
aad
xchg
je
push
adcl
cmp
sar
pop
pop
out
testl
pop
push
fidivs
sub
imul
dec
outsl
push
ficompl
sub
ret
jnp
xchg
push
sbb
fninit
lcall
and
mov
cmpsb
jno
mov
sbb
push
scas
lock
insl
fs
out
aam
lock
ret
dec
call
imul
jno
sbbb
loope
lcall
je
or
xchg
mov
int3
stos
inc
cmp
adc
sub
enter
xchg
into
out
sub
lods
pop
out
ds
outsb
movsl
mov
cmpsb
sti
dec
add
lea
nop
dec
xchg
pop
adc
cmp
sbb
push
xor
push
push
cli
mov
mov
aad
hlt
aas
das
arpl
movsl
movsl
push
sbb
cmp
test
xchg
stos
pop
push
xchg
pusha
push
mov
mov
mov
xchg
dec
sbb
mov
pusha
imul
hlt
imul
rcrl
arpl
stos
cmpsb
jge
xchg
cmp
cmp
aad
into
mov
mov
cmp
cmp
dec
test
ljmp
stos
mov
das
fmuls
mov
enter
and
pop
shl
inc
outsl
push
xchg
jg
xchg
cmpsl
sub
aas
ljmp
sbb
dec
dec
sub
in
ffree
xlat
icebp
or
in
insl
pusha
or
enter
or
add
pop
es
jl
aam
negl
stc
cmp
mov
test
decb
ja
mov
mov
inc
inc
int
movsb
sbb
lea
push
lods
sbb
lret
es
mov
insb
xchg
cmp
or
adc
aam
subb
and
adc
pop
mov
test
push
jp
aad
neg
cmp
fdivrs
lcall
into
cmp
rorb
loop
or
lock
insb
in
test
and
lock
mov
imul
cmp
inc
shll
fwait
leave
bound
or
xchg
cmpsb
push
xchg
jg
add
loope
pushf
mov
push
push
xchg
dec
pop
xor
mov
scas
mov
aaa
cwtl
cs
call
xchg
push
iret
sti
aad
mov
inc
jne
cmp
jnp
test
cmp
in
add
das
rcr
orb
lcall
inc
in
imul
cmpsb
sti
xchg
bnd
push
mov
ficomps
xor
daa
jmp
mov
mov
jne
or
mov
insb
roll
stos
arpl
mov
outsl
sub
pusha
loope
jmp
insb
fbstp
dec
pop
lret
imul
in
adc
mov
sbb
fists
xchg
pop
out
cmova
mov
inc
out
in
cmp
pop
jno
inc
dec
movsl
stc
shlb
adc
cmp
and
add
add
jp
cwtl
test
mov
insb
push
jmp
imul
lds
aad
incl
pop
pop
push
aam
iret
inc
pop
fldcw
aas
or
ljmp
ljmp
insl
dec
movsb
bnd
and
nopl
mov
pop
cmp
xor
jbe
pushf
out
inc
mov
cmp
das
ret
cmp
fwait
sub
mov
push
shll
pop
lret
adc
or
mov
rol
dec
mov
fisttps
lret
loop
adc
push
jge
adc
mov
xor
xchg
mov
nop
mov
push
stc
lret
cmp
aas
xchg
pop
push
pop
xor
addr16
decb
stc
cmpsb
divl
mov
ret
cld
sub
mov
mov
shlb
mov
pop
test
jmp
movsl
rclb
in
addr16
xor
iret
mov
mov
int3
rorb
pop
dec
xchg
or
or
nop
lds
sbb
out
adc
mov
dec
lcall
out
repz
mulb
out
mov
mov
mov
sbb
leave
pop
push
popf
push
repz
dec
mov
mov
inc
data16
sbb
insb
mov
and
subl
sub
jno
mov
shll
test
pop
and
adc
mov
fnstenv
call
bswap
ss
lds
dec
cltd
xchg
mov
jecxz
insl
adc
cwtl
sbb
test
test
test
lea
mov
mov
lahf
les
into
or
loope
adc
pusha
test
fwait
pop
xchg
push
mov
fdivr
je
mov
cld
sub
stos
pushf
xor
xchg
sub
fcompl
xlat
jg
mov
test
imul
cli
jns
mov
mov
mov
mov
les
lods
dec
pop
lock
and
or
popf
xor
xchg
add
hlt
mov
pushf
outsl
or
pop
add
mov
mov
movsl
in
pop
nop
das
pop
sti
enter
rclb
loopne
mov
insl
mov
fnstcw
mov
addr16
and
or
sub
jge
or
jno
test
cld
jl
mull
jp
xchg
push
sahf
pop
rorb
cmovb
imul
push
into
outsb
push
lea
aaa
xchg
dec
stc
nop
jae
cs
mov
mov
cs
or
xor
call
jno
jp
and
jae
arpl
push
std
pop
ret
aas
insl
and
out
jecxz
push
ljmp
add
push
lret
fdivrl
pop
gs
mov
nop
fincstp
push
and
ret
mov
insb
mov
jo
out
incl
sbb
je
fsubl
pop
loop
mov
mov
call
enter
ret
or
fistpll
push
mov
mov
daa
stos
mov
iret
daa
jecxz
loope
popf
xor
daa
mov
lods
lahf
and
add
jg
cmp
ja
cmp
jae
fnstsw
jns
xchg
fadd
icebp
push
stc
rcrl
adc
cmpsl
lods
out
test
shlb
sbb
sarb
test
xchg
pop
cmp
xor
arpl
shl
call
sub
fcomi
add
stos
ss
sbb
leave
sarb
imul
or
xchg
addr16
mov
icebp
mov
std
lock
in
and
leave
mov
ret
push
mov
mov
mov
pushf
inc
cmp
divl
push
test
mov
fldl
insb
xchg
mov
sti
shrb
sarb
imul
cwtl
xor
mov
js
xchg
sbb
mov
add
movsb
dec
orb
ret
out
mov
and
fsubs
pop
fadd
stc
jp
fiadds
dec
sbb
add
mov
leave
leave
int3
mov
dec
rcll
mov
std
lods
roll
or
ja
mov
xor
popf
test
dec
mov
mov
and
out
mov
outsb
loopne
sbb
or
fsubr
pop
adc
dec
xchg
ljmp
out
imul
add
xor
stos
repz
cwtl
sub
ret
iret
sahf
xchg
xchg
xor
inc
push
cmc
jmp
filds
ret
xchg
movsb
loopne
gs
push
dec
or
pop
mov
add
fnstenv
mov
mov
jle
pop
dec
lods
je
xor
int3
push
pop
clc
sub
fiadds
dec
lods
xchg
ret
mov
xchg
daa
cltd
push
dec
rcrb
cmp
jne
aam
dec
clc
and
adc
ljmp
lret
shll
push
ss
inc
or
inc
sbbl
adc
in
int3
push
clc
sub
push
sbb
in
and
arpl
stos
lahf
sbb
adc
and
xor
out
fisubs
cs
data16
cld
fwait
mov
repz
mov
scas
je
sub
pop
sub
rclb
dec
xchg
adc
ss
test
imull
jno
add
xor
cli
dec
popf
fwait
cmp
stos
cld
xchg
test
xor
mov
dec
pop
in
ret
pop
cmp
dec
addl
ficoml
mov
sti
movl
je
add
jecxz
inc
aad
ljmp
test
xchg
outsl
shr
jns
jp
xchg
wbinvd
push
cmp
pop
mov
or
or
lret
xchg
in
loope
push
in
pushf
jns
xor
add
ss
push
or
inc
sub
orb
out
sub
ror
add
in
jbe
out
push
mov
daa
arpl
adc
jge
jle
lea
mov
test
lods
adc
sarl
mov
jl
push
aam
in
jmp
mov
das
test
adc
sub
cmc
and
in
dec
rolb
scas
test
addl
es
cmp
jp
jge
or
lea
mov
adc
xchg
ret
adc
add
jecxz
movb
fcomi
popa
inc
out
cmc
lret
pop
shll
dec
sub
mov
fnstenv
jbe
dec
pushf
push
in
insl
jg
sti
rclb
xchg
jecxz
mov
mov
sahf
mov
lcall
cmp
test
mov
setnp
inc
movsl
inc
mov
sbb
add
in
push
adcl
aad
xor
sti
push
sub
ja
pop
cmpsl
movsb
fstpl
xchg
inc
jb
sbb
cmp
stos
jae
lods
aam
rol
movsb
pop
add
sarb
test
cmp
call
fidivrs
mov
movsl
cmp
stc
popf
or
in
cld
mov
cld
icebp
inc
xchg
mov
sbb
push
cmpsl
test
jnp
and
int
add
imul
pop
jnp
stos
movsb
push
paddq
and
stos
or
jle
testl
pop
cld
cltd
psubusw
jns
jmp
mov
mov
movsl
arpl
sbb
js
pushf
sti
mov
test
adc
ret
push
inc
push
sti
cmp
mov
lret
or
mov
arpl
cmp
pop
scas
xor
cmp
mov
sbb
xchg
mul
pop
insl
inc
fwait
ljmp
or
sbb
jnp
fistpll
int
mov
mov
xor
dec
stos
adc
stos
dec
stos
xchg
out
push
in
inc
push
in
push
lret
cs
xchg
ds
jno
pushl
adc
hlt
pop
mov
aas
jne
dec
cli
mov
push
sub
add
ret
in
jecxz
loope
lret
shl
jnp
rcrb
mov
or
scas
popa
adc
pop
mov
mov
movsb
ljmp
cmpsb
cvtps2pd
push
mov
mov
add
or
mov
clc
call
jmp
imul
arpl
sar
sbb
fisubs
adc
enter
insb
push
sub
pop
xor
dec
repz
jmp
fs
fistpll
les
cli
cmp
mov
add
mov
notb
data16
shlb
adc
push
bound
stos
mov
dec
jle
mov
xor
test
jge
adc
sub
sub
iret
cmp
loopne
push
and
cmp
or
mov
in
jle
repnz
lahf
sbb
gs
or
shl
test
std
idivb
aam
push
int3
adc
aas
or
aaa
push
add
cli
insb
jle
dec
repnz
and
sbb
mov
enter
jnp
test
push
jns
outsb
sbb
fmuls
inc
inc
pop
cmpsb
mov
scas
xchg
mov
and
out
jae
jbe
cmovb
cmc
cmp
loope
imul
ret
sub
and
xor
lods
or
adc
inc
jmp
cmpsl
addr16
rcrb
jno,pn
js
lret
inc
jb
mov
in
xor
mov
dec
std
xor
add
mov
pop
sub
adc
add
adc
cli
sub
iret
cmpsb
lds
outsb
lds
inc
fistl
mov
jnp
push
mov
push
mov
out
insb
call
or
jg
add
xchg
enter
lods
sub
popa
fs
andl
mov
push
sub
sub
jle
jg
outsb
call
add
mov
fs
add
std
mov
hlt
out
sub
pop
push
imul
movsb
and
xchg
decb
sbb
mov
jge
cs
lods
dec
and
mov
xchg
ret
pop
scas
repnz
mov
cmp
mov
scas
push
iret
xchg
xchg
repnz
push
sub
cwtl
and
cmpl
lahf
pop
dec
imull
inc
sub
test
aam
jbe
pop
repz
jb
rclb
cmp
push
mov
cwtl
or
mov
or
adc
fadds
movsl
cltd
movsl
jnp
mov
xor
test
push
mov
cmp
push
jns
xchg
xor
gs
loop
xor
push
push
insb
mov
cmc
in
dec
jg
xor
outsl
insl
xor
in
mov
mov
xchg
jge
push
daa
outsl
jl
adc
out
sarb
jae
inc
inc
dec
or
cmp
jae
test
fdivrl
mov
lds
insl
adc
adc
loop
int3
stos
xlat
dec
test
dec
int
les
out
das
jmp
mov
outsb
jle
xor
aam
xor
test
popa
sbb
mov
mov
push
inc
sub
ljmp
insb
leave
cli
call
xchg
hlt
and
or
pop
ss
outsb
dec
scas
movsl
xor
popa
sub
and
mov
dec
insl
cmpl
sbb
scas
xor
stos
inc
mov
shrb
pop
inc
push
popa
mov
movsl
mov
mov
iret
lea
and
push
jnp
fimuls
test
imul
dec
lea
cmp
inc
test
push
aam
inc
int
and
push
orl
stos
adc
test
loope
faddl
xchg
dec
mov
and
cmp
repz
adc
ljmp
adc
pop
adc
mov
jns
imul
pop
jno
imul
pusha
pushf
scas
nop
push
mov
mov
jp
pop
jo
pop
rorb
xsaveopt
daa
mov
or
jo
jle
cmp
je
cmp
dec
push
xor
mov
mov
testb
jl
inc
repnz
or
jle
add
outsb
aad
and
out
fdivrl
cld
and
mov
mov
hlt
js
lods
pop
xor
leave
jle
mov
xchg
loope
cmp
cmp
lcall
stos
mov
push
xor
or
mov
fstps
xchg
adc
orl
jae
push
push
xchg
jl
insb
out
sbb
push
cmp
xlat
cwtl
sbbl
inc
push
jns
inc
test
lds
push
pop
shll
std
adc
addr16
into
shll
sbb
inc
push
mov
lock
xchg
icebp
fsubs
sub
xor
xor
or
xchg
adc
js
aaa
gs
push
fisttpl
cli
jne
adc
xchg
pop
mov
lcall
and
and
adc
ljmp
scas
dec
fbstp
mov
cmc
mov
aas
idiv
scas
dec
pop
xchg
inc
xchg
pusha
nopl
mov
add
pop
fs
jbe
push
add
leave
int3
dec
and
push
pop
pop
cmp
stos
es
sub
mov
push
pop
in
popa
cmc
sbb
or
and
mov
pop
push
cmc
adc
shll
ss
imul
adc
xor
fs
and
data16
data16
mov
push
loopne
leave
shll
mov
aam
jne
jns
adc
cs
jb
sub
fcompl
mov
dec
in
add
leave
mov
jno
imul
mov
das
pop
xor
add
jp
es
dec
sbb
sub
lds
pop
inc
xchg
test
ss
jns
xor
mov
cmc
cmp
icebp
pop
cmp
and
ljmp
xchg
add
push
out
mov
outsb
and
arpl
cmp
in
cmp
jns
sub
jmp
inc
inc
lods
iret
out
add
popf
leave
add
ret
xchg
push
aad
or
mov
in
mov
jl
aaa
cmp
cmp
stos
cmp
sbb
out
icebp
lods
dec
daa
mov
mov
xor
pop
jno
lea
mov
pop
push
enter
or
test
pusha
repz
leave
mov
cmp
pop
or
dec
sarl
xchg
scas
in
andps
sub
or
sub
dec
add
push
std
mov
aas
lods
fstps
mov
adc
cmc
sbb
and
mov
call
scas
out
repz
sbb
orb
inc
fdiv
cmp
or
hlt
int
jle
sub
pop
cmp
insb
push
mov
push
cli
fwait
or
xchg
jo
scas
iret
add
test
jg
jb
das
add
arpl
lahf
ficompl
xchg
ja
add
and
loopne
sbb
and
lret
les
jmp
xchg
das
pop
cmpsl
xor
out
inc
stos
xor
fadds
ss
mov
mov
push
xchg
jae
and
movsl
cmp
les
xchg
or
or
or
stc
and
scas
loop
mov
mov
sub
pop
add
fsub
dec
dec
sbb
jecxz
dec
xor
xchg
movsl
push
dec
repz
stc
sar
mov
gs
enter
xchg
movsb
jp
pop
leave
xlat
stos
fcoms
das
hlt
imul
inc
aad
xlat
mov
cli
jge
mov
xchg
push
dec
nop
stos
fdiv
xchg
rcl
mov
ja
daa
xor
adc
or
loope
int3
cmpsb
jo
mov
or
mov
out
xchg
or
into
ds
dec
je
andl
leave
mov
testb
inc
fisttpl
lds
mov
or
xor
xchg
inc
sbb
aam
mov
lods
lret
pop
dec
xchg
jg
xor
adc
sbb
lcall
jmp
shrd
pop
mov
or
test
ds
jecxz
loopne
mov
push
in
xor
divl
aam
mov
xchg
mov
dec
inc
daa
mov
mov
or
stc
and
lods
and
adc
enter
pop
sbb
dec
sub
fidivrs
out
adc
or
mov
push
or
dec
out
cmpb
jnp
xor
xchg
outsb
mov
lea
jne
jmp
sbb
out
movl
jne
bound
mov
ja
jno
pop
add
popa
sbb
cmpsl
popl
xlat
sub
jns
vpavgw
inc
xchg
scas
andl
pop
adc
lahf
sarb
lock
scas
xchg
insb
into
cmp
lcall
int3
sbb
scas
push
xchg
je
xchg
pop
pop
sbbl
mov
add
lds
mov
cmc
js
xchg
jmp
or
into
adc
and
inc
pop
mov
jbe
push
jg
xor
out
add
xorb
sbb
adc
cld
adc
shrb
adc
cltd
insl
out
in
and
inc
cmp
arpl
inc
mov
cmp
inc
cmc
inc
jp
imul
mov
je
add
push
aas
leave
lock
dec
fndisi(8087
xor
lahf
mov
mov
jo
xchg
lods
je
cmp
lret
xchg
aas
shlb
ss
fbstp
push
stc
hlt
arpl
pop
jo
pop
gs
lcall
xor
mov
xchg
gs
int
dec
sbb
icebp
add
rcrb
in
daa
sar
fadds
pop
in
xchg
inc
sbb
enter
mov
loop
sbb
mov
cmp
fsqrt
jae
add
stos
ljmp
cmp
and
push
and
popa
or
sub
xchg
shlb
movsb
mov
movsb
cltd
mov
jb
jae
dec
cld
mov
nop
jo
out
movsb
outsl
out
in
sbb
das
push
insl
test
mov
mov
add
xor
mov
mov
pop
mov
dec
push
popa
popf
clc
xlat
add
loope
jecxz
push
lock
xchg
push
jmp
rolb
into
in
jo
pop
jmp
mov
adc
sahf
ss
inc
mov
dec
cmp
dec
mov
repnz
mov
outsb
cs
adc
pop
mov
in
xchg
xchg
loopne
xorl
xchg
inc
jnp
pop
arpl
mov
inc
std
inc
cmc
inc
jp
lret
sbb
jg
arpl
add
in
in
adc
rcrl
cmc
lret
cmp
fcoml
int3
mov
shrb
outsb
je
aad
jp
sub
sarl
mov
cs
jmp
dec
push
insl
mov
jns
mov
and
and
out
adc
xor
xor
imul
or
movsl
pop
xor
das
push
int
mov
xchg
inc
mov
lea
clc
push
cmp
fcoms
in
xchg
lock
inc
call
jecxz
lret
jae
jae
fcoml
push
shrl
mov
rcrl
lods
lods
mov
mov
jb
sub
cmpsb
sarl
loope
sbb
das
add
cmpsl
adc
push
sub
lret
pop
push
sti
in
cs
addb
mov
lods
and
test
shll
pop
hlt
sbb
jmp
out
fcmovnbe
mov
lcall
mov
pop
mov
imul
leave
ficomps
xchg
gs
mov
popl
sbb
fsubrs
ja
ljmp
ljmp
push
add
add
mov
out
jbe
mov
pop
into
call
mov
mov
sarb
in
cwtl
pusha
adc
jmp
cmpsb
and
jnp
jmp
lahf
fildl
sti
outsb
call
cmp
pop
mov
add
popf
adc
mov
mov
pop
or
xor
int
int
in
xchg
fwait
sbb
jno
cmp
in
and
out
add
mov
sbb
in
or
push
mov
js
xchg
push
push
push
dec
scas
sub
in
inc
pusha
rorb
mov
mov
outsl
or
mov
insl
leave
dec
adcb
sub
push
popl
mov
je
or
lods
aaa
mov
sub
mov
into
and
jl
jecxz
shr
loop
add
lret
push
push
cltd
xchg
mov
out
mov
iret
inc
cmpb
popa
xor
test
cmp
ret
mov
dec
test
lcall
cld
xor
dec
and
nop
rolb
insl
fs
and
cmpsl
loope
xor
jbe
mov
add
inc
std
lcall
rcl
stos
mov
cmp
loope
fcomps
outsb
sub
add
mov
mov
inc
mov
mov
fwait
lret
mov
mov
stos
shll
iret
shrl
mov
repz
lods
mov
insl
push
or
clc
leave
into
cmp
dec
xor
cmpsl
mov
cmp
xor
rclb
out
jg
xchg
lock
xchg
ljmp
into
sub
in
pop
jecxz
pop
test
fnsave
xorb
dec
ret
es
ret
test
push
cmp
xchg
jns
movsl
xor
filds
popl
into
inc
bound
jno
jecxz
lahf
fwait
pop
sbb
adc
aam
stos
test
mov
push
adc
sub
pop
mov
stos
add
lea
pop
imul
sub
jns
sahf
jmp
sahf
rcll
mov
ret
push
sub
mov
add
imul
push
dec
data16
or
xor
fnstsw
xchg
icebp
ret
mov
fwait
in
mov
jns
out
push
arpl
test
movsb
sub
push
sub
jnp
mov
imul
popf
mov
int3
jecxz
fdivp
sti
inc
mov
pop
push
mov
push
mov
int3
xchg
add
sub
das
out
cmpsb
jl
mov
mov
daa
ret
sub
into
xchg
jne
insl
adc
adc
mov
push
out
pop
jne
xchg
jg
inc
dec
ret
pop
pop
jle
imul
and
dec
and
stos
clc
gs
inc
mov
xchg
jp
ret
into
push
gs
inc
push
cmc
stos
xor
jp
ljmp
push
ss
mov
pop
mov
cmp
fisubl
stos
pop
stos
dec
pop
and
mov
xchg
xchg
arpl
push
outsb
and
std
jecxz
mov
int3
or
js
adc
nop
iret
movlps
mov
jl
adc
data16
es
lcall
stos
nop
verr
sub
mov
cmpsl
inc
inc
pushf
jge
push
cwtl
scas
or
pop
std
xlat
sbb
repnz
sti
cwtl
fucomi
aam
add
sub
test
push
cltd
sub
jle
sti
std
adc
adc
lcall
leave
je
dec
jns
xor
push
insb
jg
sub
pop
cmc
jge
das
jl
xchg
clc
mov
mov
mov
mov
push
push
add
ror
add
pop
outsb
stos
movsl
shll
ljmp
dec
rcl
lret
popf
xor
je
jbe
jbe
lds
int3
jns
cld
sub
lret
test
js
scas
jl
cmpsl
arpl
ficoms
sbb
loopne
out
push
sahf
gs
hlt
mov
push
mov
push
mov
add
sub
stos
pushf
push
mov
push
cltd
or
in
lods
bound
in
jp
mov
out
push
psraw
add
shrb
aas
aad
xchg
push
adc
cmp
pop
lahf
cmp
in
je
jne
jle
clc
mov
add
and
xchg
das
out
cltd
imul
ja
pop
jp
mov
pusha
test
in
arpl
sbb
aas
popf
clc
cmp
inc
jmp
pop
aaa
std
add
xchg
xor
inc
sahf
add
gs
adc
inc
jb
iret
mov
aad
jmp
test
inc
lret
xlat
jle
sbb
pop
or
push
or
pusha
and
cmp
sbb
add
aam
cmp
jbe
icebp
mov
outsl
das
push
sbb
cmp
adc
cmp
jb
xchg
mov
fstpl
movsl
addr16
lds
dec
mov
gs
cmp
jle
or
pop
mov
mov
out
pop
pop
fcoms
hlt
test
push
sbb
movsl
cmpsb
stos
mov
mov
and
addr16
mov
dec
ds
jg
and
cltd
pop
xchg
std
push
test
jo
xchg
call
mov
lahf
or
ja
sub
cmpsb
insb
pop
cmpsl
sti
loop
sbb
dec
iret
lds
xlat
shlb
sbb
rcrb
add
gs
mov
dec
loopne
mov
sar
mov
pop
cmp
inc
adc
int
shrb
outsl
and
fildl
dec
push
pop
imul
pop
mov
shlb
pop
hlt
pop
dec
adc
out
push
lcall
rcl
and
fwait
mov
mov
sti
push
inc
in
sub
in
and
lcall
gs
push
cmpsl
ja
test
pushf
push
xchg
xchg
mov
orb
nop
es
ljmp
jbe
jnp
mov
aam
adc
clc
pop
push
xor
push
ret
jne
subb
iret
add
mov
mov
int
cmp
ret
out
jno
loop
xor
mov
imul
rcrl
test
mov
vsqrtss
movsb
dec
cs
adc
jg
adc
mov
in
jmp
psubd
jp
mov
dec
scas
cmpsl
or
push
stc
push
xor
xchg
lock
push
or
je
imul
fwait
dec
push
mov
push
jp
or
sub
scas
push
dec
and
mov
xchg
jb
jmp
push
pop
sub
xor
aas
clc
dec
xchg
xor
cmp
test
ljmp
fwait
xchg
or
cli
daa
pushf
push
decb
push
xchg
or
pop
add
out
push
mov
add
dec
jae
repnz
pop
cli
sub
ret
mov
out
lods
pop
jg
loope
jge
js
inc
cmpsl
call
xor
in
xor
js
pop
popf
scas
ljmp
daa
sbb
add
sbb
sbb
nop
ss
in
icebp
mov
cli
cld
pop
pop
outsb
pop
and
int
aaa
dec
push
cmc
xor
mov
mov
mov
fbld
mov
sub
fsubrs
iret
ret
out
addl
cmp
xchg
sbb
jle
pop
jo
push
ret
push
jge
cmp
gs
push
add
movsb
sbb
fistl
jge
sbbl
cwtl
test
nop
xchg
lcall
les
sbb
push
jno
adc
fstpl
insl
dec
scas
jae
adc
sar
mov
lods
stos
and
fwait
repz
add
mov
sub
popa
loop
out
iret
mov
pop
inc
pop
gs
cmpb
cli
push
jl
dec
sbb
sbb
ljmp
jb
mov
out
pop
repz
lock
pusha
mov
hlt
mov
outsb
sti
cmp
int
jmp
or
inc
outsb
cs
xlat
mov
adc
cmc
xchg
mov
jae
xchg
jge
cltd
shl
in
mov
xorl
std
in
cwtl
imul
jle
and
repnz
add
repz
jne
pop
loop
shl
lret
and
into
pop
inc
pop
dec
popf
sub
xor
leave
push
es
lods
out
lods
pop
adc
cmp
cli
inc
aam
aad
adc
daa
test
imul
add
sbb
add
xor
sub
add
pop
enter
lds
mov
or
sub
mov
add
mov
outsl
xchg
out
mov
push
or
xchg
mov
fdivs
outsb
and
rol
adc
cmp
cmp
push
mov
js
ret
sbb
test
hlt
sub
mul
push
cmp
inc
or
push
adc
test
fwait
xlat
dec
loopne
sahf
fldlg2
cli
pop
push
repz
idivb
cmp
mov
sbb
jbe
dec
cmp
xor
add
xchg
lods
inc
inc
sub
jne
push
lods
mov
pop
stos
mov
adc
outsl
jge
and
xorb
mov
sub
pop
mov
jg
enter
sar
out
dec
jnp
jl
sahf
mov
js,pn
pusha
scas
sahf
in
scas
cwtl
jne
call
pop
or
test
fs
and
dec
int
jo
xor
dec
mov
lcall
inc
mov
push
cld
pop
cmp
loopne
ficomps
mov
cmp
fwait
orb
adc
std
push
and
cmp
xchg
jg
out
inc
addb
and
movsl
sbb
mov
addr16
and
mov
or
cli
nop
rcrl
iret
repnz
jnp
push
push
cwtl
int
sub
aad
les
es
mov
sub
push
cmpsb
mov
jg
jp
adc
lahf
push
lahf
jbe
push
xchg
dec
cmpsl
sub
pop
insb
pop
push
shufps
sub
push
mov
jp
push
sbb
sub
mov
dec
loop
test
clc
jg
jae
sahf
mov
fildl
push
test
mov
enter
decl
fwait
adc
add
inc
xchg
aaa
bound
int
cmp
mov
mov
shl
cmpb
cmc
mul
cmp
mov
sub
lcall
mov
ja
add
mov
add
ss
popa
xchg
adc
lahf
push
push
pusha
mov
xchg
out
gs
stc
in
orl
and
jae
in
xchg
push
loopne
and
mov
mov
aad
add
push
notb
dec
adc
test
outsl
pop
add
out
or
mov
leave
and
rcr
ret
dec
sub
mov
push
test
sbb
shl
push
and
popf
xchg
xor
pop
rcrl
cmp
pushf
xor
out
sub
sbb
ljmp
sub
nop
fwait
ja
ss
popa
jbe
es
cmp
mov
xor
or
out
ficoms
cmp
add
lods
mov
jo
mov
in
add
pop
outsl
jmp
jno
pop
inc
out
push
adc
cmp
xchg
or
js
inc
dec
rolb
mov
mov
pop
sbb
push
scas
mov
nop
xor
jno
fistl
dec
icebp
adc
scas
dec
icebp
data16
cmp
mov
pop
inc
cmp
fnsave
int
ja
mov
imulb
mov
daa
jno
outsl
adc
out
inc
pop
push
fistl
fisttpl
insb
dec
cld
xchg
ja
push
pusha
out
cwtl
add
lds
fwait
out
jne
ret
clc
bound
jae
sahf
or
jno
insb
cli
shl
mov
test
ja
cmp
lods
inc
in
cmp
int3
pop
pop
xchg
loopne
mov
rorl
stos
lahf
lods
lea
push
shr
enter
and
cld
pop
insb
sbb
cltd
push
test
sub
popf
pop
lds
cmp
mov
sub
loopne
or
xchg
rcr
mov
push
jne
or
mov
pop
cmpsl
push
ret
loope
push
sub
xchg
inc
data16
lods
dec
or
and
shll
and
pushf
xlat
cmp
aas
jb
shlb
pop
test
sti
icebp
xor
or
jp
sbbb
mov
or
sub
xchg
or
jae
add
lret
fadds
sbb
cmc
cmpsl
xchg
push
inc
sub
insb
daa
sbb
xchg
adc
popf
inc
push
dec
data16
das
stos
incl
fisubl
cmpl
pop
jg
popa
pop
jg
mov
scas
lea
adc
xlat
lea
inc
dec
gs
in
ret
push
dec
lcall
push
dec
jle
cmc
enter
fidivl
cmp
cltd
cltd
pop
pop
sub
lret
test
rcr
xlat
add
scas
pop
xlat
insb
or
mov
int3
sbb
xor
inc
add
mov
cltd
jae
es
in
nop
jno
mov
addl
add
mov
popf
fucom
dec
or
out
sub
sub
js
popf
sbbb
sahf
sub
pop
xchg
inc
in
ja
jecxz
or
rcrb
hlt
insl
inc
mov
dec
pop
in
repnz
xor
mov
adc
das
mov
pushf
out
scas
inc
test
and
fisubrs
xlat
mov
dec
jg
push
pop
inc
out
out
das
sbb
xchg
ljmp
push
out
test
out
inc
fxch
arpl
bound
cs
or
out
mov
mov
std
and
pop
aaa
into
mov
xor
xchg
xchg
jnp
in
sbb
xor
mov
sbb
sub
push
adc
add
arpl
push
push
fcmove
outsb
int3
inc
stos
ds
jno
cmpsl
lods
mov
ret
fldt
inc
in
pop
push
icebp
pop
add
xchg
add
sar
nop
or
dec
test
mov
dec
jno
mov
imul
ret
lea
push
enter
cmp
mov
in
push
fldenv
rcrl
pop
mov
mov
sub
shr
add
push
sub
stos
mov
lret
loopne
outsl
jmp
xor
push
xorb
hlt
dec
ja
jo
xchg
cltd
mov
mov
add
test
ss
movsl
iret
push
das
inc
dec
pop
daa
sarl
adc
inc
cmp
add
data16
mov
xchg
mov
pop
repz
leave
mov
pusha
test
jle
outsl
xor
outsl
sub
pushl
or
shll
dec
daa
pop
xor
adc
fisttps
cmp
into
inc
or
in
sarl
sub
insl
lods
mov
inc
xchg
sub
shlb
int
cwtl
sti
out
mov
pop
stos
push
pop
adc
popa
xchg
jp
dec
jae
xchg
xchg
push
add
jl
or
lods
sub
lods
jbe
mov
add
add
in
sti
rcl
lds
bound
es
shrb
lock
dec
push
mov
cmp
arpl
dec
jne
mov
fdivl
addb
jnp
push
sbb
ljmp
jo
std
divl
in
cmp
cmp
int
aaa
xchg
push
les
push
adc
scas
and
jne
mov
int3
mov
lea
pop
jl
bound
lods
aaa
inc
inc
fcomi
movsb
mov
mov
leave
js
xorl
shll
jne
inc
mov
inc
repz
fdivrs
lods
adc
xor
inc
roll
nop
out
jo
fisubrl
int
mov
dec
xor
and
out
in
pop
ds
out
push
dec
shr
adc
xchg
shrl
shr
adc
das
jmp
in
popf
cmc
sbb
xor
mov
fimull
filds
pop
cmc
insl
inc
pop
xchg
test
and
scas
in
cmc
sti
stos
sub
mov
pop
imul
adc
sbb
les
mov
rolb
xchg
or
pop
jp
loop
jne
lds
mov
data16
in
xchg
jp
leave
mov
lds
enter
cmpsl
jb
mov
in
xchg
push
xor
xor
fisttps
xor
mov
and
or
je
push
into
adcl
fisttpl
inc
ss
bnd
je
int3
push
pop
cmpsb
sub
mov
pop
jb
jbe
jns
jnp
jns
cmp
add
pop
xchg
xchg
inc
fiaddl
scas
adc
fdivs
sub
call
fsts
jecxz
inc
xchg
mov
xlat
adcl
add
mov
sub
mov
imul
popa
xchg
vmwrite
into
cli
xchg
jbe
dec
fists
adc
xchg
cmp
jge
cli
sub
bound
sub
pop
lds
cmp
ficoms
lcall
clc
push
inc
mov
aas
adc
ljmp
aaa
pop
xchg
fnstenv
in
dec
or
jno
insl
or
jp
bound
adc
mov
imul
sub
sbb
lret
mov
out
cmp
mov
movsl
movsb
fldl
mov
pop
pop
out
hlt
incl
xor
daa
out
sbb
loop
decl
pop
outsl
mov
mov
das
add
sbb
jle
adc
mov
pop
push
or
sub
iret
cwtl
sub
test
push
clc
lret
mov
mov
inc
bound
sbb
mov
adc
pop
das
jno
nop
xchg
dec
outsl
cmp
shl
sahf
xor
stos
int3
xlat
bound
sbb
xor
mov
and
inc
mov
or
scas
add
repz
mov
pop
xchg
aas
xchg
adc
jp
ds
cwtl
mov
push
xor
xchg
jae
inc
lret
inc
pop
pop
pop
inc
push
inc
jle
mov
adc
aad
dec
cwtl
insl
mov
sbb
cmp
cmpl
movb
outsb
sbb
sbb
out
push
sbbb
out
xchg
jg
adc
add
dec
fsubrs
dec
shl
mov
mov
jb
ret
inc
dec
xchg
leave
lahf
and
ficompl
cmp
sub
hlt
incb
mov
xchg
mov
mov
and
mov
imul
ss
push
sahf
pop
jns
sub
xor
push
les
clc
orb
mov
adc
dec
js
testl
outsl
xor
aad
icebp
sbb
imul
mov
lods
and
sub
dec
dec
add
loop
aas
sbb
out
gs
adc
sbb
fdivrl
test
cmc
mov
in
mov
sub
out
dec
adc
and
jne
push
shll
loope
pusha
sub
repz
xchg
stos
pop
sbb
mov
repnz
mov
iret
mov
mov
and
scas
and
jg
orl
push
pop
fwait
xchg
lret
cmp
fldcw
xchg
and
and
inc
push
lret
mov
inc
shll
jo
stos
inc
adc
int3
fldenv
repz
sti
data16
dec
cld
pushl
sub
mov
les
mov
imulb
lea
aam
jne
imul
pop
jp
mov
ljmp
push
ljmp
shrb
idivb
jle,pt
insl
nop
sbb
add
cld
fmulp
out
sub
rol
fnstsw
fs
rclb
test
mov
addl
mov
ljmp
loopne
hlt
adc
push
ds
xor
dec
xchg
mov
or
leave
bound
jge
push
cwtl
push
xor
push
pop
xor
adc
out
std
stos
daa
insl
shl
aad
sbb
mov
addr16
mov
cli
iret
and
xor
jbe
in
icebp
rclb
stos
repz
aad
sub
xlat
shr
mov
pop
add
dec
cmpsb
push
sarb
adc
inc
clc
or
sbb
xchg
scas
ja
loopne
es
and
fbstp
movsl
xor
ljmp
fucomip
je
pop
lods
popf
dec
mov
sub
mov
es
mov
jbe
adc
and
aad
and
hlt
faddl
and
mov
aas
and
out
push
test
fisubrl
jge
inc
out
mov
or
inc
icebp
adc
pop
insl
mov
pop
dec
sbb
push
push
add
pushf
movsl
cltd
rcrb
and
dec
outsb
test
das
mov
call
ficoms
cld
push
iret
lcall
or
jmp
pop
adc
sub
push
dec
mov
subl
loop
iret
inc
test
idiv
or
js
ljmp
push
add
lea
dec
fstl
clc
popf
dec
in
sub
insb
lock
xchg
or
sub
mov
lcall
leave
das
mov
xorl
lret
pop
cmp
add
mov
in
daa
sbbb
adc
push
clc
repnz
xor
icebp
sbb
push
stc
lret
sbb
lcall
mov
scas
and
cmp
push
push
aam
ja
mov
sbb
aaa
outsb
add
xchg
cmp
add
dec
push
cwtl
fsubrp
pop
mov
dec
push
fnsave
pop
sub
in
sbb
adc
inc
mov
repnz
lods
push
sbb
fs
lret
pop
cmp
filds
adc
xchg
push
jne
repz
cmp
sub
dec
popa
aas
mov
nop
shrl
dec
imul
push
das
and
loope
les
sub
jnp
jp
out
sub
ja
addb
jne
pusha
mov
je
enter
sbb
dec
mov
ja
inc
mov
cli
adc
pop
xchg
pop
jnp
sub
xchg
mov
push
fldcw
sbb
lea
dec
dec
xchg
outsl
and
or
sub
aas
cmpsb
shll
add
cmp
mov
test
sti
addr16
push
icebp
or
cmc
fsubp
mov
push
fwait
mov
inc
clc
sub
add
ret
cmp
sbb
call
cmpsl
adc
xor
in
icebp
jae
in
xchg
lahf
or
pop
pusha
movsl
sbb
sbb
cli
lret
mov
bound
repz
cmpsb
push
cmpsb
test
inc
pop
pushf
xchg
mov
push
int3
imul
aam
cmp
in
cs
sub
mov
jns
add
repnz
mov
das
push
mov
insl
sub
data16
or
jg
pop
mov
xlat
ds
inc
rclb
sub
rolb
clc
shl
or
pop
scas
mov
cmp
or
sub
push
enter
push
mov
pop
jno
int
popf
inc
lahf
insb
imul
popa
jecxz
cmpsl
inc
aaa
outsb
push
pop
dec
movsb
orb
mov
pusha
mov
mov
jno
add
jb
in
cwtl
jmp
push
adc
fisttpll
fst
push
popf
jb
mov
cmc
std
push
int3
hlt
loope,pn
movsb
andb
fldt
dec
mov
jns
in
cmovo
inc
ljmp
aaa
add
add
not
loop
stc
push
mov
outsb
and
add
aas
adc
xchg
mov
jp
fistpll
lahf
adc
test
pop
pop
loopne
fwait
pop
pop
sti
push
sbb
fidivl
jo
scas
adc
mov
pop
jbe
xchg
test
push
push
xchg
aaa
std
loop
inc
icebp
dec
call
cmc
fwait
xor
sahf
sub
inc
inc
push
inc
sbbb
test
fstl
inc
xor
int
das
fisubl
mov
pop
pusha
sbb
mov
pop
jmp
xchg
mov
int
sub
gs
xor
adc
xor
fnstcw
ss
jecxz
arpl
push
hlt
xchg
scas
xchg
xchg
movsl
lahf
mov
ss
pminub
loope
push
pusha
inc
shrl
inc
or
mov
arpl
jmp
fbld
std
cld
ficomps
cmp
cmp
es
popf
dec
mov
mov
add
iret
sbb
and
pop
stos
cltd
jns
push
sbb
or
adc
ja
adc
pop
cwtl
xchg
addb
ret
ss
cmp
xchg
mov
adcl
inc
stos
call
clc
icebp
test
dec
push
add
jmp
xor
fstps
mov
cli
jno
aas
add
jae
xchg
jns
aam
clc
jle
nop
xchg
aaa
mov
dec
je
popa
hlt
mov
lea
add
mov
pop
jg
adc
push
nop
test
mov
imul
mov
cmpsb
push
push
xchg
lahf
cmpsb
xchg
fstps
dec
aaa
push
cmp
testb
sysexit
jne
mov
gs
xorl
fwait
scas
das
les
insl
or
mov
pusha
jb
pop
mov
addr16
stc
mov
cmp
sahf
test
lock
xor
rorb
add
xchg
data16
cmpsb
mov
sub
rorb
and
push
mov
xor
ds
cmp
jo
dec
jo
gs
inc
dec
aaa
cmp
mov
divl
mov
inc
addl
add
jmp
out
xchg
adc
or
and
mov
stos
add
mov
jmp
ftst
fisubrs
adc
xor
and
insb
mov
cwtl
mov
jle
leave
ficomps
loop
push
enter
in
xlat
jmp
test
mov
subl
in
out
loope
adc
cmp
fwait
inc
dec
test
ss
loop
adc
pop
ds
or
cmp
rorb
popa
addr16
push
sbb
and
and
jmp
pop
add
mov
leave
add
push
adc
xchg
fildll
ror
xchg
gs
lret
cltd
mov
xor
mov
js
push
inc
add
mov
mov
cmpsb
push
enter
mov
jecxz
pop
mov
mov
pop
repz
cmp
cld
mov
inc
cltd
cld
xor
aas
mov
mov
stos
call
xchg
add
mov
out
mull
insl
stc
inc
lea
jp
xor
lcall
nop
shll
xchg
icebp
jl
ja
shr
lahf
dec
movsl
or
lock
lret
imull
add
popa
popa
xor
sbb
into
mov
dec
daa
imul
add
adc
test
ja
xchg
cmp
xchg
xchg
sub
stc
push
call
mov
dec
fimuls
pop
ret
lcall
adc
dec
or
neg
movsl
sub
pushf
cmp
sahf
ds
adc
stos
popf
sub
xchg
inc
aas
push
jo
mov
xor
pop
sub
test
dec
push
bound
aaa
inc
stos
leave
lods
repz
jl
and
xor
cmc
imul
subb
xchg
mov
or
push
xor
and
mov
xor
push
mov
pop
add
push
jmp
outsb
mov
mov
add
lock
jb
adc
mov
in
sub
dec
fcmovne
out
inc
xor
ficoml
fisubrs
xchg
gs
rolb
add
cmp
iret
adc
imul
movsl
push
jbe
je
xor
mov
push
mov
xchg
mov
push
scas
jae
and
inc
icebp
jo
jle
fidivs
cs
fsts
in
in
push
jo
pop
and
xchg
mov
cmp
jno
clc
fcoml
pop
pop
and
sbbb
jle
push
sub
xchg
ss
jnp
loope
sarb
push
les
out
dec
cmp
test
cmpsb
mov
or
imul
lods
mov
sbb
imul
stc
xchg
fistpll
push
jecxz
mov
loope
pop
inc
cld
aam
push
in
inc
cmp
in
jecxz
adc
test
mov
dec
xor
pusha
push
xor
xor
dec
push
mov
rclb
fcmovnbe
addr16
or
sub
push
push
jnp
cli
add
out
mov
jl
sarb
outsl
out
fimull
dec
jbe
cmp
dec
scas
les
dec
loop
and
cltd
xchg
xchg
dec
int3
test
not
nop
fs
idivl
pop
push
xor
jbe
push
in
repz
pop
mov
insb
mov
out
cld
imul
ss
sar
xor
mov
sub
rolb
mov
lods
inc
xor
cmp
in
xorl
dec
test
or
inc
sbb
mov
cld
mov
pop
sbbb
hlt
cmpsb
inc
dec
ja
sbb
rolb
inc
mov
enter
dec
mov
cmp
leave
stos
mov
jmp
fcompl
mov
cmovno
je
lret
sub
imul
fnstsw
pop
leave
adc
xchg
mov
dec
xchg
arpl
fwait
jb
cli
in
shll
into
jmp
mov
rcrl
inc
xchg
xor
mov
or
sbb
mov
stos
dec
fsts
sub
xchg
outsl
sbb
cwtl
sub
movsb
out
mov
mov
cwtl
fwait
test
pop
scas
add
loop
jo
outsb
inc
and
outsb
xor
cmpsb
loope
inc
je
push
shll
test
and
or
mov
je
mov
push
gs
inc
enter
fcomps
fcmovbe
movsl
cmc
pusha
mov
lds
test
jo
sub
je
mov
ja
cmc
stos
popa
sar
mov
data16
cmp
mov
fisubs
cltd
out
fsubrs
mov
mov
imul
out
daa
xor
out
or
jecxz
pop
push
dec
jmp
add
jo
lret
sbb
ret
fmull
clc
fxch
xor
inc
daa
mov
cmc
stos
nop
mov
mov
xor
push
pusha
in
bound
mov
jno
add
add
movsb
loopne
mov
test
xor
add
mov
push
in
pop
les
cltd
loop
inc
lods
outsb
push
mov
xchg
rcrb
jne
xchg
pop
sahf
sbb
rorl
stos
add
jae
or
xor
sbb
shrl
add
pop
testl
dec
xchg
loop
daa
dec
push
pop
sbb
adc
and
test
movsb
pop
sub
icebp
mov
mov
push
mov
xor
out
cmpsl
int
fldcw
mov
push
outsl
adc
lea
je
cmp
dec
xor
pop
in
stos
add
sbb
dec
mov
add
and
out
repnz
jns
das
sbbb
fs
daa
test
sbb
repz
call
aas
jle
mov
inc
push
testb
insl
sub
xor
inc
loope
mov
popf
push
cs
or
xchg
pop
scas
out
out
ljmp
jns
dec
jae
popa
daa
xorb
ret
js
push
into
fs
mov
mov
movsb
sub
mov
inc
jns
sbb
dec
dec
dec
xlat
dec
ja
mov
mov
sub
stc
mov
mov
mulb
repnz
adc
or
xchg
jns
and
adc
test
lret
jnp
push
mov
enter
or
rcrb
ljmp
sbb
jp
mov
jns
inc
add
dec
mov
inc
notl
mov
cmpsl
mov
cmp
inc
outsb
out
adc
mov
int3
xor
fildll
fwait
mov
out
cmp
or
or
call
mov
int
outsl
mov
push
scas
aam
jle
test
pop
ficoml
and
loope
xchg
cmp
into
push
int
lret
cmp
out
mov
fmull
dec
jl
or
aam
movsb
jmp
push
cmp
orl
xchg
mov
imul
xchg
repnz
insl
out
mov
stc
out
scas
andl
loopne
push
hlt
jecxz
xchg
inc
xchg
mov
pop
les
ffreep
leave
je
add
adc
rolb
test
push
sbb
mov
repnz
call
jl
nop
cltd
out
ss
les
lods
push
loope
fmull
pop
out
mov
call
lcall
imul
invd
adc
jl
cmp
pop
push
imul
cmp
into
xor
xchg
push
pop
loope
push
ret
nop
fstps
mov
outsl
gs
add
nop
mov
shrb
cmpsl
adc
mov
pop
mov
jg
out
leave
mov
fnstcw
jle
rorl
enter
and
rcl
adc
shlb
inc
pop
mov
cmp
andb
ret
jb
cmpsl
outsl
cli
js
push
imul
add
xchg
test
es
ljmp
in
inc
jns
fwait
in
add
xchg
jae
or
rol
fwait
jbe
mov
mov
aas
jecxz
nop
dec
push
or
push
daa
movsl
mov
jmp
add
sub
ret
or
mov
jnp
gs
add
lcall
xchg
push
adc
xchg
test
mov
sub
push
jb
sbb
add
mov
movsl
lea
cmp
mov
call
or
mov
shrl
mov
rcll
cmp
movsb
daa
shlb
add
mov
shlb
insb
out
sbb
lcall
inc
xchg
imul
inc
clc
sbb
sub
das
push
dec
inc
mov
pop
mov
lahf
add
mov
xor
ss
ljmp
xchg
repnz
mov
into
push
or
ret
fistpll
lret
movsl
leave
test
imul
insb
mov
sub
xchg
in
int3
je
inc
jne
cmp
mov
repz
lcall
aaa
dec
popa
jmp
cmpsb
mov
int
pop
add
ljmp
les
scas
mov
or
out
call
sub
or
adcl
or
sub
scas
gs
pop
push
push
mov
push
jl
mov
pop
mov
in
mov
ja
jae
nop
xchg
pop
in
mov
test
cmpb
xchg
jl
js
xor
roll
push
xchg
pop
jecxz
pop
xor
and
push
mov
lds
jne
js
cmpsb
dec
sbb
ret
daa
cmc
pop
addr16
mov
data16
fwait
movsl
lea
xchg
subb
and
push
cmp
push
xchg
sahf
ret
inc
iret
add
cli
inc
cmpl
mov
or
xchg
adc
in
xchg
push
mov
xor
loop
add
jae
jmp
hlt
out
or
imul
dec
aaa
in
and
pop
movsl
pop
hlt
pop
adc
insb
idiv
cmp
pop
or
sub
inc
and
mov
imul
or
mov
mov
sub
aas
xor
cltd
cmp
int
cmp
dec
mov
shlb
cmpsb
adc
sbbl
mov
pop
mov
pop
je
cmp
stc
adc
fcomps
cwtl
out
mov
adcb
pop
fisubrs
mov
nop
out
lods
subl
cltd
add
xchg
shr
jge
xlat
jle
xor
xor
scas
xchg
test
jno
popa
jle
rcrb
loop
lock
test
inc
lret
scas
xchg
cmp
daa
inc
mov
insb
stc
sbb
xor
nop
scas
scas
fsubr
pop
mov
push
cmp
je
add
mov
cltd
jge
in
std
rclb
xorb
scas
cmp
lahf
dec
int
cld
or
fwait
adcl
cmc
mov
mov
subl
push
je
mov
adc
cmc
dec
decb
stc
in
xchg
jne
jle
dec
cmp
cli
or
xchg
in
lea
out
cmp
add
ja
addb
and
xchg
pusha
adc
dec
inc
mov
pop
lahf
dec
aaa
adc
mov
adc
mov
adc
pop
lret
cmp
mov
sub
fists
inc
shl
add
mov
inc
stc
mov
dec
jo
jns
dec
xchg
xor
or
outsl
clc
ret
test
dec
add
idivl
test
movsl
ret
sub
repz
rorl
push
xchg
popf
mov
scas
mov
inc
adc
aas
pop
lea
adcl
roll
mov
ds
mov
mov
nop
mov
shlb
dec
push
daa
ficoms
addr16
jae
loop
ds
push
fdiv
in
or
int
mov
mov
repnz
jecxz
in
js
fcomp
int
mov
mov
jmp
jle
inc
iret
pop
adc
sbb
lods
add
in
mov
add
sbb
fcmovu
mov
or
les
cmp
ja
xchg
iret
push
xor
push
or
xorl
adc
ss
adc
into
pop
add
cmpsl
imul
or
std
mov
xor
mul
xchg
cs
or
fnstcw
jbe
sarb
sahf
xchg
int
or
lock
out
aaa
cltd
or
shlb
sahf
iret
and
mov
mov
and
inc
cmpsl
push
cmpb
fwait
repz
pop
cmc
mov
cmc
addr16
out
jmp
and
clc
ds
jp
adc
xchg
push
fwait
sbb
push
pusha
add
in
sbb
andl
rolb
mov
iret
jl
out
rcrl
adc
and
das
and
lret
in
mov
repz
xchg
xchg
leave
sbbb
int
cmp
ret
ds
sub
xorb
mov
sub
jns
push
mov
out
repz
mov
test
popa
jb
sti
subb
push
lcall
add
cltd
push
sbb
inc
jmp
aaa
arpl
dec
jg
mov
cmc
adc
test
mov
out
cmp
out
lret
and
mov
mov
push
les
ds
stc
sub
lea
cmp
cmp
aam
xchg
nop
push
cs
inc
mov
push
pop
outsl
sti
cltd
out
roll
pop
cwtl
mov
sbb
add
scas
clc
pop
mov
push
cmp
lea
in
xchg
scas
sub
push
rol
pushf
cmp
mov
roll
mov
xor
cmp
bound
icebp
in
mov
out
push
clc
nop
add
jle
jb
rol
jmp
int3
popf
xor
aas
cld
lods
sbb
lcall
jecxz
mov
shrl
aad
cmp
push
mov
outsl
xchg
cld
sarl
in
mov
popa
cs
xchg
add
ja
call
xchg
pop
or
and
dec
sbb
pop
dec
addr16
shll
cmp
cli
xchg
stos
mov
lds
push
mov
jecxz
push
mov
mov
cmp
xchg
leave
test
fildl
cmp
icebp
faddl
add
mov
cmpl
cmp
imul
jae
add
or
cmc
in
enter
pusha
cmp
shrb
xchg
test
inc
inc
sbb
shlb
aas
scas
mov
test
cmpl
lea
aad
lods
dec
mov
inc
adc
aaa
std
xlat
insl
jle
dec
mov
icebp
cwtl
movb
jge
lcall
cld
jae
outsl
cmp
jmp
pop
mov
ds
int3
stc
arpl
notl
cwtl
stc
aaa
and
inc
insl
sub
mov
adc
lret
ret
or
adc
test
xchg
int
add
aam
popa
mov
sbb
cmp
fbstp
add
mov
jnp
clc
lcall
xor
lea
mov
testb
addl
cli
mov
or
std
fcoml
dec
xlat
xchg
not
lret
dec
outsb
pop
mov
mov
fnstcw
aad
movb
out
data16
mov
inc
sti
dec
mov
fstpt
jl
fldenv
cmp
mov
mov
adcb
fmull
arpl
add
je
jmp
sbb
jns
cltd
js
divb
shrl
add
ja
ret
lret
sbb
mov
mov
imul
pop
mov
push
stos
shrl
lret
or
sbb
in
outsb
cli
or
frstor
mov
clc
xchg
aas
pop
add
cmp
sbb
or
loope
adc
ss
enter
push
xchg
mov
adc
push
sarl
fs
add
push
cmp
mov
inc
mov
int
ljmp
push
mov
mov
dec
loop
popa
es
cmp
mov
push
icebp
icebp
in
je
xor
push
cmpsl
jmp
lods
shrl
sub
mov
clc
mov
jmp
clc
das
stos
inc
pop
test
xchg
cltd
mov
fstp
iret
cmp
jmp
stos
dec
mov
div
sbb
pop
xchg
sbb
mov
sub
sahf
pop
inc
popf
dec
repnz
xchg
inc
out
adc
adc
popa
and
cmp
xchg
aad
into
push
xchg
mov
dec
dec
js
jge
inc
add
or
pop
int3
lahf
mov
or
dec
data16
frstor
int
popf
int
add
jb
subb
out
pop
dec
sarb
aas
repz
xchg
sub
mov
scas
pop
pushf
push
out
out
outsl
addb
jmp
mov
rorb
cmp
jmp
mov
inc
and
mov
xor
jmp
mov
mov
ljmp
negl
pusha
scas
mov
fsubr
ret
mov
sub
into
cmp
aas
push
xchg
mov
insb
pop
push
dec
lods
jp
mov
sbb
les
and
mov
fsubs
add
scas
push
cmp
cmpsb
mov
leave
sub
ret
fmull
and
push
mov
pop
inc
xchg
jns
fmull
xor
popa
movsl
jno
xor
jbe
push
or
or
test
scas
cld
xchg
out
mov
jg
pop
in
and
cld
fisttpl
sti
sti
out
imul
xor
jns
xchg
sbb
dec
xor
sbb
arpl
mov
adc
push
dec
and
pop
daa
cltd
test
pop
rorb
mov
fildl
inc
mov
pushf
push
fwait
dec
mov
test
shrl
jbe
jo
jo
fadds
sbb
xor
mov
push
jecxz
xor
mov
jge
mov
adc
lods
jmp
pop
pop
pop
int
lcall
sbb
sbb
mov
shrb
call
add
mov
sub
mov
lret
mov
xor
loop
mov
push
fildll
sahf
fwait
addl
pop
jno
incl
rol
fisttps
dec
mov
xor
xorl
cmp
push
jnp
pop
push
add
fst
jmp
cmc
pop
insb
add
jno
xchg
outsl
dec
es
pop
mov
dec
xor
out
dec
andb
aad
push
mov
fisubrl
mov
in
shll
mov
sbb
sbb
xchg
pop
push
mov
test
js
movsb
enter
enter
and
mov
inc
out
stc
ret
add
cmp
add
arpl
mov
daa
sub
push
in
pop
test
fwait
lret
inc
sub
mov
fadds
nop
or
lea
mov
stc
nop
add
xlat
cmp
pop
sub
xor
jmp
and
cmp
cmp
xor
out
sbb
arpl
ret
outsl
pushf
pop
cmp
shlb
cmc
stos
inc
push
icebp
cmpsl
sub
cmp
adc
pop
aam
xor
xor
xchg
aaa
xchg
mov
pop
mov
lret
lret
pop
movsb
data16
mov
jo
cmpsl
fildl
inc
fidivs
hlt
pop
and
fs
loopne
add
nop
pusha
fidivrs
cmpsb
and
push
adc
inc
shrl
insb
add
jl
push
aam
xchg
pop
jge
xchg
fsubp
test
push
test
xchg
cmc
icebp
jns
xchg
dec
xchg
push
insb
mov
push
pusha
rorb
pushf
pop
pop
jb
add
and
dec
aas
shll
push
mov
push
push
jl
sbb
and
fwait
push
sbb
sub
pop
or
xor
or
pop
or
sbb
jg
test
ljmp
pop
inc
xchg
hlt
mov
rolb
test
sbb
push
jl
push
test
movsl
mul
push
cwtl
pop
scas
popa
pop
lods
mov
mov
je
pop
ja
xchg
mov
test
stos
leave
cmpb
xchg
lret
lret
shll
out
je
int
inc
int
popa
cmc
cltd
ja
xchg
or
out
cld
in
xor
shlb
or
in
sub
clc
and
outsb
gs
std
push
lahf
sub
aas
call
lock
sub
push
scas
loope
out
pminsw
xchg
outsl
add
ljmp
cmp
push
lock
ds
ret
dec
gs
outsb
add
jb
negb
sub
mov
mov
sbb
dec
push
cmp
addr16
cld
sbb
jns
push
gs
jl
out
scas
int3
sub
mov
mov
sub
test
mov
fstp
push
cmp
xor
dec
loope
or
arpl
loopne
sbb
xor
mov
mov
lock
es
cld
aad
pop
fcoms
jno
out
push
mov
shll
sbb
outsb
push
popf
repz
repz
dec
mov
mov
in
lret
sbb
and
push
inc
push
mov
inc
lahf
dec
scas
test
pop
je
cld
out
in
fiadds
mov
nop
call
data16
stc
faddp
jo
dec
and
sahf
aad
xchg
jl
test
cld
sti
mov
pusha
mov
dec
les
sbb
out
add
out
or
lods
mov
xchg
sahf
push
mov
mov
loopne
popa
inc
jae
fisubrl
and
arpl
nop
and
int
lcall
pop
jbe
repz
sarb
in
aaa
ret
mov
inc
test
mov
es
jbe
mov
push
jo
sub
stos
lcall
xchg
outsl
sub
gs
mov
dec
adc
popa
xor
ffreep
fldt
mov
movsb
xchg
ljmp
add
dec
xchg
or
inc
dec
cltd
cld
mov
xchg
push
fldt
xchg
sbb
mov
push
icebp
sub
inc
jb
mov
sub
in
lods
xchg
pop
pop
mov
push
inc
dec
movsb
cs
lret
sbb
inc
push
js
iret
mov
add
jg
adc
or
mov
xchg
rorb
fcoml
mov
add
movsb
repz
mov
pop
push
inc
out
nop
and
jns
adc
push
mov
xchg
jle
lds
iret
fcomi
fidivrl
pop
cli
mov
cltd
xchg
dec
movsb
popf
push
imul
repz
sub
dec
loop
jecxz
fistl
cltd
and
jae
cmc
rclb
jmp
and
mov
sbb
insl
cmc
lret
imul
lret
sub
cmc
imul
iret
sub
xor
mov
popf
stos
push
xor
popl
clc
mov
subb
jbe
mov
push
xor
in
loop
frstor
ds
in
aas
mov
inc
enter
js
and
mov
outsb
into
popf
sahf
mov
cld
cmp
mov
mov
sbb
inc
mov
mov
xchg
xchg
and
xchg
cmp
xlat
xor
sarl
fsub
jmp
pop
xor
pop
and
push
mov
cltd
in
mov
adc
clc
push
adcl
inc
out
sub
mov
repnz
movb
daa
push
data16
sahf
xchg
fisttpl
icebp
rcll
nop
xchg
cmp
out
xchg
pop
fistpl
xor
or
cli
fmuls
divb
arpl
and
loopne
adc
loope
dec
xlat
mov
outsl
movsb
sbb
ds
push
ljmp
or
xor
dec
mov
xor
mov
ds
jge
push
push
fisubrl
pop
inc
rcl
mov
lahf
push
or
jmp
cs
icebp
aaa
pop
out
add
rcll
adcl
fiadds
xchg
dec
pop
in
pop
jae
lret
cmp
repz
int3
mov
or
out
add
xor
cmpb
stos
dec
aas
and
xor
push
test
add
shrb
jl
bound
aaa
xchg
mov
pop
popa
pop
leave
shl
mov
or
mov
mov
sub
mov
add
inc
sub
das
cmp
push
arpl
pop
push
outsl
pushf
cmp
sub
js
pop
shr
dec
pop
dec
mov
repz
insl
inc
aam
jle
scas
or
call
and
enter
jo
mov
inc
xchg
mov
popa
xchg
rcr
je
rclb
stc
push
arpl
clc
push
mov
add
jl
xchg
ljmp
pop
aaa
mov
or
dec
imul
stos
cli
add
push
pop
push
push
cmp
icebp
sbb
push
rcll
push
fs
dec
jecxz
mov
lret
pop
jb
ret
ss
xchg
xchg
pop
sahf
mov
sub
xor
dec
or
movb
inc
push
data16
filds
test
mov
sbb
or
ds
mov
xchg
pop
sub
push
dec
or
in
repz
dec
pop
fstpt
stc
repnz
and
lods
mov
push
jno
and
mov
fsubl
mov
leave
shlb
push
mov
loope
xchg
das
and
das
mov
push
add
push
xchg
push
inc
dec
fcoms
add
push
nop
cmc
sub
or
iret
popa
mov
push
push
pop
in
ret
rcrb
xchg
or
andl
cmp
sbb
out
jne
lret
int
aad
add
and
add
adc
aam
stos
lds
inc
sbbb
add
push
int
cmp
and
aas
in
sti
push
out
loopne
sub
mov
pop
insb
lods
pushf
inc
mov
test
inc
add
cwtl
dec
cmc
popa
clc
aam
pusha
clc
mov
fcmovbe
dec
jbe
xchg
sub
gs
jl
pop
imulb
je
sbb
sbb
sahf
sub
and
out
xchg
sub
adc
xchg
or
ret
xor
inc
sub
outsb
cmpsl
adc
sub
jns
out
stos
es
inc
lret
not
push
and
insb
mov
add
and
mov
out
jns
dec
repnz
adc
push
sbb
out
pop
and
xor
xchg
ljmp
daa
and
xchg
and
push
adc
enter
inc
sub
in
add
decb
and
xor
push
aam
insl
outsl
rcrb
dec
jne
cld
stos
loop
fwait
enter
xchg
sbb
jmp
push
sbb
jle
mov
es
decb
lcall
and
fsubrl
cmp
leave
add
shlb
jns
lods
dec
mov
dec
mov
xchg
pop
stos
jbe
jmp
in
aad
hlt
jb
cmp
mov
adc
addl
adc
push
inc
adc
pop
out
mov
adc
aad
lds
xchg
lret
cmp
sub
jg
imul
xchg
cmc
sbb
push
mov
dec
int3
sti
scas
push
lret
pop
push
dec
jbe
shlb
test
ret
mov
in
mov
icebp
and
inc
sub
fucomp
test
shrl
jnp
je
jg
in
and
daa
mul
mov
and
or
or
xor
pushf
fdiv
mov
loope
push
pop
and
ret
inc
xchg
in
sbb
leave
out
sub
or
pop
inc
add
or
iret
add
dec
adc
jge
popa
mov
pop
inc
jae
rcl
add
clc
fcomps
mov
mov
in
mov
xchg
jnp
test
jno
repz
lcall
or
push
inc
dec
dec
inc
push
lahf
cmpsl
je
inc
adc
xchg
ret
lods
adc
or
cld
mov
dec
push
sub
lret
mov
out
sub
mov
sub
pop
lods
vshuff32x4
pop
jp
adc
and
push
sahf
xchg
incb
jb
aam
dec
pushf
outsb
js
sub
jg
mov
stc
xchg
andl
lret
inc
or
xchg
cmp
pop
mov
jl
ljmp
ljmp
call
inc
jp
js
fdivrs
mov
jb
imul
in
cmp
lret
fstpt
fwait
jnp
or
lea
inc
rorb
loopne
jecxz
fs
out
ljmp
adc
xor
enter
cmp
or
insl
mov
jl
les
mov
ljmp
scas
das
ljmp
xchg
mov
pushf
filds
repz
pop
adc
adc
adc
sti
je
and
sub
popf
mov
mov
pop
rclb
mov
push
stos
test
ja
aaa
fs
lahf
ss
mov
jl
xchg
fnstenv
lcall
shl
shl
jne
sub
mov
sub
adc
xchg
mov
jge
mov
cmpsb
fabs
ret
push
jle
lret
andl
sub
adc
cltd
dec
dec
mov
mov
adc
insl
loope
loope
aaa
mov
lods
mov
jae
push
mov
cwtl
xor
dec
sub
insb
sbb
mov
add
pushf
mov
mov
add
pop
pusha
inc
mov
xchg
cmp
jle
add
pop
push
xchg
push
imul
outsb
cs
cwtl
jno
mov
cmc
lods
jle
mov
test
xorb
mov
sub
roll
fdivrl
je
dec
cltd
xor
sbb
daa
int3
xor
movsb
fildll
loop
and
push
sbb
das
mov
hlt
data16
cmp
in
xor
push
insb
sub
int
pop
and
ficomps
inc
rcl
cmc
daa
sbb
xchg
cs
cmp
stos
push
js
into
shlb
mov
xchg
filds
mov
test
mulb
cmc
test
int3
pop
dec
mov
mov
sbb
xchg
jae
bound
jle
jb
aas
scas
xchg
or
mov
scas
je
movntq
mov
mov
lahf
adc
mov
subl
and
mov
repz
insl
mov
test
lock
mov
repz
rcrb
mov
das
movsb
dec
mov
sarb
lods
and
fstps
out
jecxz
mov
xchg
popf
pop
sbb
in
jl
mov
inc
in
int3
call
cs
push
je
mov
roll
bound
inc
mov
mov
dec
add
jl
out
shrl
js
cmpsb
xchg
push
mov
mov
and
dec
and
aaa
ret
add
or
cltd
adc
adc
cmp
repz
cmp
shlb
and
add
pop
imul
dec
jnp
sbbb
popl
cli
outsb
mov
incl
pop
es
mov
xchg
xor
mov
in
leave
cmp
es
out
mov
divl
hlt
push
xchg
sub
or
fimull
in
leave
lds
cs
nop
sub
aad
mov
add
inc
sub
jecxz
pusha
jmp
pop
sbb
lret
mov
dec
mov
push
fwait
jae
jb
dec
outsb
cs
inc
std
mov
inc
imul
jb
adc
push
das
xchg
ds
xor
jmp
and
stos
ror
test
sub
shrb
cmp
mov
add
push
xor
ja
mov
xorl
or
in
mov
decl
test
ret
lret
sbb
imulb
mov
jp
mov
sar
test
and
cmp
lock
jo
popf
jne
enter
xor
push
ss
dec
and
jne
icebp
fildll
stos
in
inc
clc
mov
xchg
popf
notl
dec
push
push
scas
nop
mov
xor
jbe
pop
cmp
xor
add
and
into
pop
sbb
cmp
add
xchg
jp
fdivrp
adc
mov
jmp
mov
imul
cltd
das
int3
and
sahf
movsb
sbb
xchg
or
adc
fisttps
pop
shrl
test
pop
ret
nop
cmpl
jle
mov
rorl
aas
jle
mov
andb
pop
mov
in
or
clc
sbb
movsb
inc
jb
and
mov
popa
mov
push
add
cmp
cs
cli
movsl
enter
jecxz
mov
stos
push
sahf
pop
mov
das
fsts
mov
pop
mov
les
sub
into
mov
inc
sub
ucomiss
lea
adc
fldenv
notb
jl
lret
add
add
in
sbb
daa
arpl
loopne
inc
mov
dec
mov
pop
iret
pop
mov
test
enter
add
pushf
jno
cmp
aas
xchg
fs
sbb
mov
xchg
lock
jle
out
dec
not
test
sub
lret
jle
push
loop
push
sub
xchg
mov
test
jecxz
lods
or
xor
mov
mov
or
fisubrs
cmc
jle
in
out
rol
dec
arpl
push
mov
and
andl
cmp
xor
fs
movsb
mov
popa
cmp
fs
mov
addb
outsl
int3
add
hlt
sub
insb
insb
cmp
mov
push
scas
fstpl
inc
xchg
add
pop
insb
in
sahf
jne
fiadds
mov
mov
fnstcw
add
mov
in
icebp
sub
mov
add
mov
fdivrp
jg
push
mov
pop
cmc
sub
sub
cltd
outsl
jg
push
mov
adc
push
repnz
adc
js
fadd
sbbb
fildll
fsubs
push
pop
xlat
mov
jne
enter
and
fsubr
cld
and
andb
mov
test
pushl
fimuls
in
add
notl
sub
xchg
das
cmp
lods
ds
fs
push
push
dec
sub
je
push
mov
pop
add
mov
dec
add
stc
movsl
xchg
cli
in
cmp
or
push
mov
dec
data16
les
test
lcall
adc
andb
cmpsl
jne
lret
aam
lods
rorl
mov
call
fnstenv
daa
jne
pop
pop
sub
adc
cmc
adcb
xor
inc
xorb
xchg
xor
fucomp
inc
mov
mov
add
and
push
divb
jge
nop
addb
and
out
pop
xor
cli
xchg
enter
stc
pop
into
test
ljmp
aad
adc
aas
bound
popa
inc
js
mov
and
mov
or
sbbl
pusha
jp
lods
jo
pop
outsl
fnstsw
subl
adc
pusha
movsb
mov
mov
push
mov
xchg
ljmp
fidivrs
jmp
add
push
pop
fnstsw
sbb
mov
sbb
iret
inc
das
fisubrs
sub
dec
sarb
sub
orl
addl
sbb
dec
xchg
inc
dec
cmpsl
push
aaa
cmpsl
lcall
inc
arpl
decb
enter
int3
xchg
in
mov
dec
jmp
adc
movsl
dec
icebp
inc
and
insb
and
pop
aas
sbb
cmp
loopne
rcl
iret
lea
out
mov
and
mov
mov
mov
fmuls
fnstenv
out
jne
imulb
bound
shrb
mov
mov
ja
movsb
add
outsl
repz
and
mov
sbb
jnp
xor
idiv
jmp
sub
data16
out
mov
aam
jmp
cmp
push
dec
movsb
sub
pusha
ss
push
movsb
or
lret
scas
pushf
sub
xor
loopne
out
int3
stos
daa
pop
or
stc
jge
faddl
mov
xor
bound
gs
outsb
fbstp
in
push
fs
push
dec
mov
icebp
popf
pop
pop
and
ja
xchg
push
jae
aad
test
fwait
add
or
inc
fs
movb
push
pop
lcall
sub
arpl
mov
xor
dec
mov
mov
ss
lret
movsl
sub
lcall
icebp
sbb
or
fiadds
sbb
cmp
or
lret
hlt
mov
jo
or
and
push
xor
les
pop
cmp
mov
mov
jmp
cltd
push
and
jecxz
mov
test
push
or
mov
adc
mov
ret
cmc
push
mov
enter
xor
mov
jno
aam
mov
and
inc
adc
pop
stos
enter
xchg
loopne
iret
dec
xchg
inc
dec
xchg
testl
stc
xor
les
add
mov
arpl
enter
and
insb
scas
lods
sbb
inc
or
js
adc
mov
jno
push
jb
jne
gs
inc
jb
repz
adc
sar
and
arpl
inc
outsb
sbbl
sub
jne
pop
fnstcw
pop
aaa
jmp
testl
mov
cmp
inc
sahf
xor
ja
out
pusha
lods
les
divb
mov
outsb
sub
lret
xchg
stos
jmp
jp
inc
dec
lret
inc
int
insb
pop
in
movsl
ja
je
push
mov
mov
aam
lret
addb
push
bnd
cld
addr16
pop
push
xchg
xor
sub
mov
repnz
mov
inc
hlt
shlb
out
call
jns
outsl
lcall
mov
inc
dec
push
iret
call
ret
xor
nop
inc
sbbb
pop
leave
jns
movsl
mov
std
test
sbbb
out
out
push
fwait
mov
ficomps
enter
dec
in
cmp
jg
or
inc
pushf
xchg
pusha
leave
fnstcw
jo
or
adc
fs
sub
sahf
mov
mov
arpl
aas
pop
push
push
mov
addr16
xor
sub
dec
jo
xchg
movsb
sub
ret
notl
xor
cmp
xlat
dec
xchg
pop
xor
imul
lds
in
mov
add
aad
nop
shll
aas
int3
jg
pop
inc
inc
xlat
sbb
mov
cmp
cmp
popa
or
push
inc
xchg
adc
mov
sub
xor
scas
add
incl
sub
hlt
pop
aad
cmc
xchg
ret
out
aaa
jo
push
add
jmp
je
test
jnp
xor
mov
lret
mov
daa
jae
inc
fnstsw
inc
repz
int
fiaddl
ja
shrb
push
enter
push
test
rorl
cld
pop
loopne
rclb
movsl
add
xchg
mov
repz
add
xor
pop
sbb
mov
dec
pushf
sbb
push
push
icebp
aad
push
loope
mov
pop
or
mov
call
adc
ljmp
xchg
lods
pop
mov
fwait
mov
or
mov
stos
inc
adc
cmp
xor
rcrb
push
imul
arpl
mov
add
add
sti
cmpsb
imul
mov
ljmp
aam
adc
or
out
adc
adc
push
mov
in
rcll
popf
out
icebp
fdiv
cmp
xor
cltd
arpl
jp
pop
cmpsl
sub
adc
adc
adc
inc
xchg
call
int
jb
xor
bnd
adc
and
mov
xchg
dec
inc
cmp
in
adc
test
repz
or
jo
push
jl
or
xor
push
push
or
sbb
cmpsl
jp
int
sbb
dec
jb
icebp
dec
pushf
mov
xchg
sub
adc
mov
xlat
cmp
sbb
stc
fstps
repnz
js
or
jno
cmp
sbb
push
push
pop
inc
xor
ds
adc
xchg
pop
in
mov
jge
sub
mov
sub
push
mov
in
rclb
add
cmp
or
sbbl
push
xchg
mov
adc
jb
idivb
jmp
push
jnp
jnp
cmp
add
ljmp
rcll
sbb
mov
push
shlb
pop
sahf
insb
loopne
fwait
stos
pop
sbb
dec
mov
repz
sbb
call
jo
dec
xchg
daa
or
xchg
imul
lahf
xor
mov
xor
aas
sbb
add
leave
and
mov
sti
and
fcos
xor
ljmp
fs
cmc
cmp
jo
sbb
inc
je
popf
das
mov
cs
sub
or
and
lods
jecxz
ljmp
jo
fs
mov
mov
js
push
popf
in
testl
shrl
dec
pop
pusha
lahf
pop
push
sub
pop
imul
cmp
inc
popa
push
movsl
insb
mov
or
sbb
popf
fucomp
xor
outsb
ss
sub
cs
dec
mov
and
movsb
add
call
jl
pop
jp
sbb
sub
xor
clc
aad
cltd
mov
insl
std
repz
push
repnz
fnsave
fwait
lret
push
aaa
sub
inc
push
pop
sarb
ss
ficompl
test
push
mov
mov
ss
loopne
mov
xchg
adc
mov
fs
xchg
xchg
mov
or
sub
xorl
xchg
jecxz
and
sti
add
xchg
shll
out
inc
xchg
lock
movsl
loopew
inc
rolb
mov
or
push
push
and
adc
ss
or
rorl
jg
jmp
lahf
out
lods
mov
cmpl
mulb
fsubrs
mov
cmp
xchg
adc
xchg
popf
dec
in
cmpsb
push
cmpsb
pop
mov
cmp
lret
push
popl
ltr
or
lret
mov
add
shr
fcompl
fildll
mov
xchg
fs
mov
and
mov
mov
fdivs
jge
pop
or
frstor
push
aas
lods
jmp
push
rcll
adc
bound
out
mov
insl
test
ds
mov
imul
fbstp
out
int3
enter
imul
or
test
sub
nop
lahf
push
mov
dec
and
data16
arpl
push
adc
out
testl
jg
jo
adc
loopne
push
cmc
fistpl
or
test
mov
sti
mov
and
add
lods
xor
cmp
test
clc
scas
push
mov
repz
lea
popa
push
fsubrs
int
in
stos
jecxz
mov
push
lods
movsl
cs
dec
movsb
test
cmp
lahf
fistl
pop
sbb
mov
aam
inc
push
inc
call
pop
pop
pop
jae
xor
out
lcall
and
xchg
xchg
or
or
cltd
ljmp
inc
mov
into
cmpb
push
sbb
or
lods
es
mov
dec
stos
sbb
mulb
sbb
rcl
or
outsl
adc
jbe
mov
outsb
pop
fnstenv
jle
or
pop
cwtl
mov
mov
out
insb
ret
xor
fists
push
adc
aam
cmp
and
and
lods
sub
mov
insl
cmp
xchg
adc
mov
cmp
jmp
xchg
or
in
icebp
mov
pop
sub
fisttpl
jecxz
adc
stc
lahf
ds
push
leave
sub
inc
out
cmpl
dec
or
test
sbbl
insl
and
pusha
cmpl
mov
lcall
mov
addl
cmp
lcall
jbe
inc
sbb
ss
mov
scas
or
sbb
rorb
cmp
pushf
test
je
jmp
rcrl
out
pop
das
xchg
xchg
mov
leave
mov
pop
and
xor
fistpl
or
insb
loop
sub
inc
mov
pop
dec
mov
leave
and
or
in
into
or
int
mov
in
sbb
cli
icebp
in
mov
js
mov
sub
mov
idivl
mov
imul
repnz
sbb
jg
pop
cmpsb
push
and
jecxz
cld
pop
cltd
out
rorb
ret
movsl
dec
test
and
stc
scas
jp
outsl
adc
hlt
stos
adc
popa
xor
imul
lds
sbb
sub
in
cmp
pop
dec
fsts
fisubrl
lock
sub
adc
jbe
stc
rcll
dec
lods
in
lock
xchg
mov
xor
aaa
ja
mov
sbb
mov
loop
out
pop
push
push
fildl
add
shll
pusha
pop
push
data16
repz
mov
dec
sti
adc
andnps
and
jb
push
cmpsb
in
shr
sbb
add
mov
jp
das
xchg
push
xchg
daa
sub
dec
add
fadds
lahf
ret
push
xor
rclb
int3
jl
cs
sub
ds
add
jnp
iret
add
out
aas
or
mov
mov
enter
add
je
fsubl
stc
out
sbb
dec
lds
lods
gs
in
mov
daa
mov
sbb
dec
stos
aaa
test
lock
ja
sbb
xchg
imul
mov
shrl
push
hlt
xchg
sub
orb
push
sarl
dec
movb
aas
in
fnsave
mov
sub
js
push
add
js
mov
pop
xchg
mov
or
jno
or
arpl
ret
mov
inc
fcoms
mov
xchg
icebp
or
push
xchg
add
mov
stos
pop
ret
add
addl
repnz
fmul
jmp
in
std
push
popf
je
js
jmp
add
shrb
push
cmpl
or
add
ds
imul
add
pop
cmp
jle
xchg
mov
adc
sbb
iret
pop
add
or
pop
rorl
mov
loope
mov
mov
ret
scas
jge
push
jmp
mov
cmp
mov
test
fstpt
adc
dec
xchg
dec
ret
jge
inc
cltd
test
adc
mov
test
dec
jb
mov
leave
mov
pop
push
push
pop
sub
bound
adc
sub
sbb
push
stos
out
lods
lea
jg
rolb
call
jbe
push
outsb
arpl
cmovae
sbb
xor
xor
loope
neg
fcompl
int
xor
shr
out
sbb
lcall
jno
dec
in
mov
ljmp
hlt
dec
mov
jg
jmp
movsb
call
xorl
xchg
jle
aaa
adc
jo
mov
mov
int
scas
daa
inc
outsl
mov
lds
jns
inc
frstor
push
ljmp
pop
xor
or
xchg
mov
push
xor
sub
ljmp
mov
lahf
push
inc
xor
repnz
loop
shlb
lds
jne
iret
xchg
mov
mov
xor
sub
xor
jp
fstp
sub
outsl
pop
add
jge
cmc
sti
sbb
jmp
mov
out
pop
sahf
stc
xchg
lea
jo
and
testb
or
push
add
sub
and
pop
call
add
test
cmpsb
scas
sub
jmp
decb
int3
aad
out
int
pop
shl
insl
jp
pushf
into
cmp
push
dec
shl
push
sbb
insl
imul
xchg
fdivs
pop
pop
mov
or
and
scas
movsb
dec
jne
jle
xor
stos
outsl
fidivrl
xor
divl
add
cwtl
jle
popf
jae
or
adc
stc
xor
jg
push
xchg
andb
xchg
push
inc
sub
xchg
lock
jo
aam
push
test
sub
mov
cmpsl
inc
mov
fsubs
imul
out
leave
jle
push
aad
lret
int
ror
sub
mov
stos
es
mov
lods
lods
cmpsl
mov
das
push
or
fdivl
loope
xor
pop
pusha
bound
leave
in
cmp
pop
or
mov
mov
movsb
repz
adc
sbb
hlt
push
leave
pop
divb
fdivrl
xor
popf
je
addl
xchg
fcmovne
ret
movsl
add
cmp
test
xchg
nop
or
mov
dec
mov
pushf
test
cmpsl
mov
jmp
sub
inc
jle
jnp
or
clc
lcall
inc
mov
mov
sub
scas
mov
or
pop
push
pushl
fisttpl
fidivl
loopne
or
fcomps
push
lea
add
ror
shrl
aas
sub
lret
shrb
pusha
cmpsb
sub
in
shrb
cmp
dec
pop
pop
push
imul
cmpsl
jge
cmpsl
lret
cmpsl
mov
ret
sti
jle
scas
gs
push
push
rol
icebp
xchg
jns
cmp
cmc
mov
mov
or
mov
loopne
popa
fadds
jmp
outsb
add
jae
movsl
enter
dec
jmp
jmp
adc
lcall
icebp
push
ret
adcl
xchg
push
es
stc
adcb
das
or
mov
ljmp
test
cli
shrb
loopne
jge
insb
jbe
in
aam
sti
movsl
rcl
xchg
adc
push
mov
rorl
sub
imul
ret
das
push
push
dec
bound
bound
jge
add
ds
movsb
ja
pop
xor
mov
rcrl
mov
and
dec
inc
or
bound
iret
push
fldl
sti
add
out
inc
add
cmp
mov
push
jne
dec
mov
mov
inc
test
mov
pop
push
inc
lret
fidivl
rcll
adc
push
xor
loop
dec
jmp
mov
aad
or
xchg
add
push
push
fs
xchg
xlat
repnz
loopne
sti
push
sbb
loop
cmp
inc
pop
sti
popa
xlat
ss
push
jbe
bnd
or
leave
cmp
adc
adc
xchg
addb
imulb
loope
mov
xchg
fdivrl
adc
adc
or
sbb
sarl
lcall
fildll
adc
push
movb
and
or
sub
push
lret
pop
sbb
ret
sub
mov
push
jno
sub
lods
js
add
cmp
into
in
xor
test
lret
mov
popf
mull
sub
repnz
xor
mov
std
inc
mov
mov
push
nop
mov
mov
cmp
sbb
loopne
test
movsb
and
jnp
es
clc
nop
cmp
jl
es
shl
gs
mov
cltd
mov
loopne
cmp
adcl
xchg
ljmp
sbb
xchg
mov
cmp
test
aad
fisttps
xor
int
push
sub
call
add
sub
push
cmpsb
xchg
sbb
xchg
cld
divb
jl
jnp
jmp
pop
or
xchg
adc
fbstp
xor
mov
xchg
inc
mov
mov
pop
dec
adc
jl
cwtl
imul
jle
fcoml
loop
fnsave
adc
js
inc
push
popf
jae
adc
pop
adc
inc
outsb
mov
sbb
inc
fnstsw
push
ljmp
push
out
cwtl
sub
test
fidivrs
popa
sub
call
negl
sub
add
push
addr16
mov
daa
mov
mov
xor
lods
xor
pop
and
repz
gs
sti
and
or
les
cmp
inc
repz
and
mov
push
les
jne
lea
cltd
sub
cwtl
mov
data16
test
xor
loop
in
in
clc
cmp
scas
mov
in
inc
dec
mov
mov
dec
sbbb
lcall
pop
movsb
jns
add
into
insl
outsl
shl
mov
nop
mov
mov
out
ja
stc
xchg
inc
shl
inc
call
clc
pusha
lods
mov
into
loop
cs
rorl
jnp
pop
stos
adc
and
bnd
inc
sbb
mov
sub
sahf
arpl
adc
inc
sbb
mov
loop
and
fwait
popa
jge
inc
call
cmpsb
mov
clc
data16
add
or
mov
ret
pop
xchg
aad
out
cmc
hlt
inc
sbb
or
repz
rorb
jl
xor
cmp
xchg
xchg
shlb
sbb
pop
sub
push
mov
or
rclb
or
jb
sti
stos
jb
add
cld
testl
mov
ss
ljmp
jb
jmp
paddw
test
repz
int3
mov
sub
xchg
inc
rclb
push
rorl
cmp
jno
mov
mov
jg
ret
es
adcb
scas
pop
nop
xchg
and
adc
xchg
insb
push
pop
js
xchg
push
insb
ret
lods
dec
jle
shrb
daa
adc
ret
dec
dec
xchg
jl
sub
rcll
push
cs
and
jmp
or
and
js
nop
enter
inc
cmp
jecxz
mov
mov
inc
scas
addr16
movsl
dec
lds
incl
into
addr16
push
mov
ds
mov
sbb
leave
mov
xchg
sahf
push
xor
xor
ss
xchg
shll
movsl
jle
sbb
push
not
xor
jb
push
das
movsl
inc
sub
lret
xchg
sub
cmpsl
mov
enter
repnz
addr16
lds
lods
xchg
cli
test
std
fistps
prefetchnta
stc
jge
aad
in
ljmp
xchg
jge
mov
dec
or
cmp
mov
cltd
mov
daa
pop
jns
iret
mov
scas
mov
xor
sbb
out
jbe
inc
jle
das
imul
cmp
pop
cltd
rorb
outsl
cltd
dec
jecxz
jnp
les
pop
xchg
sub
xor
scas
adc
outsb
adc
jne
xor
pop
add
rcrb
stc
jbe
sub
jnp
cmpsb
shlb
adcl
in
xchg
mov
jo
lds
scas
sahf
pop
and
pop
and
mov
pop
lcall
enter
adc
pop
push
fisubrl
stc
arpl
jne
ljmp
add
xlat
sbb
push
dec
stos
in
das
sbb
daa
inc
sub
xor
andb
jle
in
mov
iret
jmp
fidivs
dec
aad
jo
sbb
jecxz
insb
enter
add
xchg
sub
xorb
adc
in
popa
sub
nop
adc
inc
push
fwait
mov
mov
or
decl
mov
jbe
lcall
push
imul
jmp
in
dec
lods
and
sbb
dec
imul
cmpsl
scas
imul
or
cwtl
jge
sub
xchg
mov
js
pop
test
xchg
inc
out
lcall
pop
icebp
push
cmpsb
imul
mov
pop
das
xchg
cmpsl
shlb
mov
sbb
xor
test
les
jb
stc
jnp
aaa
pop
lahf
xchg
push
mov
sbb
lahf
push
fsubl
mov
or
fsts
push
sub
addb
xchg
ja
add
jo
stos
pop
inc
out
cmp
push
movsl
jg
add
xchg
divb
xchg
int3
sub
mov
jg
lock
xchg
sub
cmp
imul
mov
lock
ja
stos
jne
inc
cmp
sbb
scas
sub
sub
mov
shll
pop
adc
jmp
inc
xchg
lods
xchg
mov
lods
lret
adc
outsl
cs
cli
pop
stos
int3
dec
add
das
std
inc
mov
inc
mov
cmpsl
int3
inc
pusha
test
jns
test
dec
add
xor
push
into
cs
mov
adc
and
in
dec
data16
pop
sub
mov
insl
popf
mov
pusha
imulb
xchg
mov
scas
in
rclb
xchg
es
or
adc
mov
insl
xor
adc
lret
movsb
shrb
pop
rorl
mov
mov
inc
fwait
mov
push
sub
in
dec
nop
sar
dec
dec
adc
clc
imul
xor
jecxz
mov
or
or
mov
mull
sbb
push
clc
scas
jno
add
ss
cvtps2pi
rclb
pop
out
out
mov
orl
ret
add
ljmp
pushf
insl
push
mov
xchg
xor
or
mov
scas
xchg
arpl
jmp
or
mov
push
push
icebp
push
adc
int
pop
sub
in
dec
mov
sub
and
iret
lahf
cmpsb
pop
lcall
and
push
xchg
sbb
mov
cmc
hlt
mov
jmp
mov
mov
dec
push
arpl
aaa
mov
and
negb
into
dec
xchg
adc
sarb
jae
cmp
xchg
daa
xchg
stos
int3
loope
sub
lock
fstpl
loope
mov
test
mov
add
mov
in
xchg
push
scas
pushf
scas
mov
dec
jmp
enter
inc
cmp
xor
cmp
pop
loop
mov
orl
aas
nop
add
cmpsl
adc
repnz
cli
inc
mov
gs
push
mov
popf
mov
mov
fistpll
test
jns
inc
sbb
mov
jmp
insb
les
pop
addr16
cli
clc
add
mov
mov
push
mov
jno
out
push
in
out
and
shlb
divl
xchg
cld
pushf
and
fs
pusha
jp
push
xor
movb
les
pop
inc
jo
lea
loopne
in
push
outsb
mov
dec
into
movb
adc
pushf
cli
mov
testb
sahf
nop
or
rcll
in
sub
pop
stos
stos
negl
aam
jecxz
rolb
loope
pop
lea
repz
decb
lret
jbe
imul
fidivrs
les
xor
mov
xchg
or
shlb
test
cli
dec
pusha
sbb
movsb
lret
std
and
fcoml
popf
cmp
hlt
push
in
sub
insb
mov
push
fcmovnbe
repnz
dec
inc
aam
sbb
xlat
pop
pop
cmp
testl
dec
out
test
sti
cmp
movsl
into
lods
mov
ja
jnp
mov
xor
and
pop
and
pushf
sbb
and
data16
push
rolb
add
mov
adc
mov
loop
dec
mov
push
test
filds
jne
mov
xchg
push
cltd
sub
mov
jmp
xchg
cmp
neg
pop
jle
pushf
sahf
pusha
jno
sub
cmpsl
loope
xor
inc
arpl
and
shll
mov
shl
sarl
dec
cmp
aas
sub
mov
mov
pop
nop
sarl
xor
xchg
insl
inc
testl
out
fwait
gs
pop
inc
mov
lods
inc
jle
fwait
or
repnz
stos
ljmp
adc
push
gs
dec
nop
repz
aam
pushf
loopne
mov
or
insb
jbe
jnp
xchg
mov
inc
lock
movsb
pop
xor
std
mov
mov
jp
fiadds
pushf
xchg
movsl
cmp
jno
mov
dec
lods
enter
lret
mov
mov
push
jo
lods
js
out
icebp
sub
insb
mov
int
lret
testb
jp
jns
and
mov
lahf
and
sbbl
int
mov
inc
xchg
stc
fbstp
mov
xchg
cmp
clc
push
icebp
int3
lcall
cmpsb
xchg
inc
out
sbb
cmpsl
xor
mov
jp
mov
cs
into
decb
scas
pop
adc
inc
shlb
lea
adc
sub
das
mov
jne
test
jle
loope
outsl
out
cmc
inc
das
test
lahf
pusha
dec
add
add
test
jae
pop
jbe
mov
iret
cmp
push
les
add
nop
dec
insb
cli
sbb
pop
dec
and
mov
cmp
pop
or
or
adcb
fld
push
mov
dec
mov
clc
stc
ret
jns
cmp
les
popf
mov
push
sub
mov
sub
fsubs
push
cli
mov
add
mov
cmp
mov
rorl
pop
sbb
imul
inc
loope
aam
sub
inc
push
negb
daa
lock
mov
mov
push
adc
cmp
pushf
sti
shlb
sub
movsl
sub
mov
aas
and
sbb
push
loope
addps
adcb
mov
mov
push
fisubrs
jno
std
add
mov
ss
hlt
mov
sarb
add
mov
jg
sub
aam
sbb
arpl
jno
xchg
sub
xor
sub
lahf
or
sub
adc
in
push
xchg
inc
and
ljmp
lods
lahf
test
push
mov
sbb
ljmp
pop
sbb
lret
mov
jmp
ss
jbe
xchg
sbb
das
jmp
inc
and
and
add
sub
test
clc
pop
out
dec
lods
pop
push
mov
fsubr
sbb
scas
jg
or
test
mov
xchg
repnz
or
popa
dec
adc
pop
scas
xor
push
imul
dec
ret
enter
je
or
in
mov
stc
jne
in
push
imul
push
in
jo
or
mov
sbb
and
in
ret
jae
pop
ret
scas
or
out
cmc
icebp
gs
jnp
cmpsb
cmc
inc
and
pusha
lcall
and
popf
xlat
lods
movsl
lods
hlt
pop
xchg
dec
xchg
mov
out
in
popf
mov
or
ficompl
cltd
adc
out
pop
cmp
test
in
insl
orl
push
inc
mov
push
imul
loopne
sbb
out
jecxz
adc
lret
out
lea
out
movsb
pop
adc
or
stos
xchg
out
test
in
and
xchg
stos
div
adc
dec
std
pop
push
nop
adcl
or
fwait
ret
pop
or
xor
out
cmp
adc
std
pop
adc
mov
pushf
adc
cmp
not
cmpsl
loopne
mov
aad
push
lods
add
lea
cmp
add
cmp
or
or
and
mov
xor
aad
sbb
pop
jl
loopne
xchg
xchg
sub
push
insb
popf
sbb
ret
push
xchg
stos
leave
fwait
or
push
jmp
mov
or
cmp
adc
scas
rcl
mov
cmp
stos
sub
nop
pop
mov
push
dec
jne
dec
roll
orb
inc
mov
xchg
push
out
dec
adc
dec
jg
es
cmp
jecxz
cmp
fst
pop
adc
out
out
mov
jp
sti
scas
loopne
rcll
pop
dec
add
mov
xchg
mov
cmp
js
dec
xor
dec
adcl
push
dec
dec
ds
push
dec
andb
outsb
hlt
pop
loopne
xchg
mov
loope
and
push
repz
push
xor
jg
orb
pop
jne
mov
xchg
xor
jb
sarl
popl
jmp
outsb
xchg
es
aam
mov
xchg
ja
jne
mov
mov
cmpsb
adc
dec
or
mov
mov
push
dec
gs
cltd
pusha
sbb
jmp
fisubl
jmp
je
add
fldl
jne
ljmp
jge
sarb
mov
sbb
int
iret
adc
xorb
sub
inc
les
aas
xlat
movsb
sub
mov
mov
int
mov
inc
push
mov
daa
fldt
sbb
pop
sarb
sbb
add
fdivs
push
icebp
mov
insb
cs
inc
cld
xchg
sub
sub
push
test
cmc
sarl
inc
outsl
stc
std
sahf
push
pusha
dec
push
inc
jmp
aad
lds
xchg
sbb
insb
or
push
jbe
loope
mov
mov
arpl
jge
cmp
sbb
bound
popf
mov
popa
popf
int
pop
jnp
mov
cmp
cwtl
and
xor
pop
sbb
sub
aaa
and
stos
xchg
in
jno
inc
inc
xor
lock
or
fiaddl
jge
sub
mov
inc
pop
sub
push
ss
call
test
push
mov
pop
std
jmp
leave
push
aad
cmpsb
insl
movsl
outsb
ds
push
jo
adc
mov
in
out
into
data16
stos
test
add
mov
sbb
nop
cmpsl
data16
pop
push
pop
icebp
dec
jbe
cwtl
jno
imul
mov
imul
fwait
or
cwtl
push
mov
sub
lods
dec
inc
or
cmpsb
in
add
outsb
sarl
aas
and
pop
test
adc
xlat
lret
hlt
adc
xchg
or
cmc
sbb
dec
push
mov
sub
cltd
scas
xor
jecxz
aad
dec
sahf
xchg
jle
jp
push
xchg
test
inc
or
mov
sahf
ret
out
jo
mov
lock
pop
inc
mov
cli
orb
and
fsubs
xor
mov
out
insb
filds
pop
fadds
sub
jo
add
mov
test
sub
push
mov
fcompp
lcall
pop
repnz
and
mov
test
add
aad
lret
in
in
jmp
or
cmp
int
fcom
jns
jle
xchg
outsb
aaa
mov
cwtd
repnz
pop
pop
mov
cmp
movsb
lahf
ja
popa
sbb
dec
in
push
push
ja
push
aam
loop
divl
loop
insl
add
ficompl
aas
xor
fistl
insb
inc
scas
nop
insb
pcmpgtd
pushl
jl
int
call
adc
das
in
jb
les
shlb
aam
xorl
int3
jno
imul
xchg
lahf
test
outsl
in
out
mov
stc
ror
jmp
push
nop
stc
loop
data16
cmp
dec
xchg
movl
mov
lahf
mov
imul
push
rcrb
mov
insl
ret
and
test
pop
mov
xchg
lea
daa
int3
dec
jmp
and
pmulhw
inc
lds
dec
sub
nop
fnstsw
ret
test
mov
sbb
imull
lret
fadds
cld
push
and
fs
jp
pusha
movsb
stos
inc
mov
xor
jmp
and
push
sbb
lcall
sub
ds
add
or
mov
sti
xor
in
or
pop
cmp
add
xor
pop
test
in
aad
mov
fisttps
hlt
repz
cltd
dec
add
mov
pop
js
cmpsl
jmp
cld
dec
imul
js
rcrl
imul
lds
jae
xor
sub
out
jl
in
mov
mov
pop
cs
fcmove
push
outsb
add
push
mov
add
sbb
sub
lock
call
pushf
add
pusha
cmpsl
shlb
mov
sub
jmp
or
movsl
jmp
stos
jl
inc
test
ss
or
xor
and
add
dec
and
pusha
in
addr16
test
ds
cmp
xchg
jne
ds
popf
jno
push
jbe,pt
xchg
push
sarb
sbb
push
and
lea
andb
ljmp
jns
aad
pop
rcrl
xor
push
rolb
outsl
jp
mov
shl
pop
push
jg
repnz
fs
fnstenv
sbb
xchg
push
loopne
popf
xchg
jae
js
jmp
les
addr16
pop
add
mov
xor
pop
push
push
sub
mov
test
popa
loope
cs
mov
out
into
sti
pop
sbb
inc
es
xchg
push
fucomi
xor
loopne
mov
pop
inc
xor
movl
mov
dec
dec
push
imul
mov
cmpsl
push
dec
push
pop
vmovhps
add
sub
loop
push
or
mov
lret
xor
xchg
cmpsb
lret
push
pop
xor
rcrl
lcall
pusha
xchg
push
ds
cmc
jae
test
daa
push
pop
mov
cmp
xor
or
test
xchg
inc
mov
fisttpll
leave
mov
pusha
cld
addr16
xchg
push
inc
jp
outsb
sub
pop
nop
ret
lea
rcrl
pop
cmp
cmpsb
adc
not
loopne
dec
sub
pop
push
fidivl
test
xorb
sub
fscale
aaa
jp
dec
je
push
fists
fsubs
push
ja
fisubs
js
add
lcall
sbb
jmp
add
std
adc
fsubp
sar
or
in
lahf
int3
in
test
mov
repnz
ss
sbb
sarb
push
or
and
pop
call
xor
ss
jmp
lock
or
mov
jmp
jp
or
mov
xlat
sub
push
jmp
dec
pop
loop
and
test
ret
cltd
addl
push
mov
jno
sbb
shll
push
jp
lods
mov
mov
xchg
mov
jb
int3
mov
push
add
inc
sbb
mov
popf
in
adc
sbb
cmc
bnd
out
pop
mov
hlt
jl
xchg
mov
and
mov
les
mov
add
pop
push
push
inc
jnp
fwait
in
mov
dec
stos
mov
outsb
sbb
adc
ds
mov
mov
pop
inc
outsl
test
frstor
ror
int3
inc
insl
push
push
fiadds
stc
pop
imul
fsubrl
dec
sub
popa
fadd
push
sbb
nop
inc
lret
loope
je
pop
push
cmp
and
mov
sub
orl
mov
out
popf
pop
aaa
or
int
mov
dec
mov
test
mov
dec
pop
mov
outsb
add
cld
mov
fucomip
jle
ret
lret
fiaddl
mov
sbb
pop
and
stos
cwtl
std
aas
je
xchg
xchg
push
test
lea
mov
push
xor
sub
mov
mov
pop
or
lahf
int3
fidivl
cwtl
cmp
adc
in
pop
mov
cltd
mov
mov
imul
cmp
pop
mov
js
imul
and
add
cli
fnop
pop
icebp
sub
lods
ljmp
pop
bound
jg
fdivl
and
lret
daa
notb
lock
push
xchg
xchg
out
adc
lret
inc
and
cmpps
push
daa
adc
in
cmp
bound
pop
lock
shll
and
shll
lcall
and
sahf
lods
push
or
movl
mov
aad
push
jle
add
data16
push
clc
xorb
negb
pop
mov
jge
cmp
pushf
imul
pop
mov
pusha
aas
sub
add
scas
jne
stc
js
jp
push
dec
call
scas
xchg
cmc
mov
shlb
dec
push
popf
mov
add
ret
or
cli
mov
loopne
stos
sbb
jo
popa
sti
cmc
mov
out
add
mov
pop
xor
icebp
add
push
call
inc
scas
pusha
dec
addr16
jge
scas
jbe
cltd
ds
mov
mov
test
scas
clc
cmpsb
nop
xchg
mov
fwait
mov
dec
mov
dec
dec
test
or
add
scas
xchg
lret
aam
mov
addr16
xchg
dec
hlt
nop
scas
xor
jo
mov
sub
fimuls
pop
cld
pop
xchg
stos
push
fsubl
inc
add
push
jae
das
pop
in
in
jbe
or
push
jnp
pop
cmp
in
cmp
int
subb
bound
pop
aad
mov
sbb
ss
lahf
das
enter
jbe
loope
cmp
adc
push
scas
repnz
fnstcw
mov
scas
ljmp
adc
sbb
push
adc
ljmp
mov
xchg
mov
sbb
lahf
ljmp
jl
bound
mov
outsb
mov
imul
inc
scas
mov
sub
dec
icebp
aad
push
test
push
pop
inc
clc
arpl
in
push
xorb
lds
and
jbe
mov
loopne
cmc
pop
cltd
xchg
stos
aas
cmp
test
adc
mov
dec
mov
xor
adc
adc
bound
cmp
jmp
lahf
iret
jns
fstl
fcoml
out
pop
iret
ljmp
inc
sub
jl
push
sub
das
dec
pop
push
in
or
pop
cmp
push
push
inc
inc
nop
paddb
dec
push
pop
shlb
mov
pop
clc
sahf
fs
bound
mov
cmp
lahf
add
or
mov
jo
mov
inc
xor
xor
cld
ret
jecxz
out
inc
xor
sub
pop
jmp
je
xchg
add
in
fsubp
std
das
hlt
loope
xor
and
sub
lcall
add
std
pop
dec
xlat
fsubrs
xchg
sub
or
sbb
cwtl
add
pop
sahf
lahf
cs
xlat
jae
cli
lds
mov
sti
cltd
dec
call
subb
sbb
fstp
stos
lds
jbe
lcall
or
int
xor
mov
sub
or
cli
sarl
dec
in
sub
pushf
add
mov
mov
es
and
xchg
shlb
jns
andl
add
aad
cmpsl
pop
outsl
pop
enter
mov
ljmp
push
inc
imul
call
mov
dec
sbb
dec
js
imull
or
mov
imul
sub
jo
and
or
int
xchg
add
adc
jmp
call
aas
std
ret
or
fnstsw
lret
insb
dec
out
pop
pusha
cwtl
xor
aas
arpl
add
ret
and
imul
cmp
dec
add
dec
push
pop
lds
test
fsubs
adc
jnp
pop
pop
dec
movsb
js
in
inc
es
sbb
adc
arpl
pop
shr
paddw
push
or
sbbb
jo
popf
test
cli
cmp
mov
xchg
xor
repz
pop
aam
sub
pop
xlat
sub
pop
dec
insb
lods
enter
arpl
sub
sbb
pop
xchg
jl
mov
sti
dec
xchg
int
jbe
test
in
mov
flds
lcall
jl
iret
inc
pop
data16
inc
jecxz
aas
test
add
jnp
sub
push
adc
mov
rorb
cmp
push
jl
jno
pop
adc
rolb
outsb
orl
sbb
dec
ret
sbb
loop
scas
push
orl
adc
pop
mov
loop
xchg
xor
jb
jb
mov
jg
arpl
inc
mov
arpl
cmp
xchg
push
shl
sub
cmpsl
in
in
fisubs
add
mov
cltd
pop
and
jnp
in
xchg
or
korb
jg
push
es
cmp
in
dec
call
scas
or
jbe
or
outsl
lret
cmp
pop
into
cmp
enter
rclb
lret
shrb
rol
call
repnz
test
mov
jne
nop
mov
cmp
popl
repnz
push
push
mov
pop
xchg
sub
mov
sub
gs
mov
roll
push
lods
jge
mov
push
add
imul
xchg
pop
bound
xchg
inc
inc
addl
int
mov
in
repnz
mov
call
rcr
cltd
mov
sub
lods
outsb
lahf
mov
fmuls
rcll
sbb
sbb
outsl
sarb
enter
in
fndisi(8087
mov
jge
or
and
mulb
les
inc
jmp
int
jge
xor
mov
push
xchg
out
dec
push
ret
dec
mov
push
dec
xchg
shr
int3
xorl
xlat
ret
dec
icebp
dec
xlat
xchg
pop
nop
out
push
jl
js
sub
mov
lock
add
out
pop
or
push
insb
pop
outsb
pop
rcrl
movsl
leave
adc
les
leave
stc
push
inc
mov
mov
cmp
mov
inc
mull
inc
pop
call
sbb
sub
in
push
dec
pop
push
xchg
push
xor
and
adc
insl
xor
or
int
jecxz
lret
mov
xor
push
and
jmp
call
xlat
lock
mov
fwait
sub
in
cmp
imul
adc
hlt
mov
or
jno
dec
jbe
lcall
or
lds
inc
mov
push
dec
add
sub
sarl
mov
rolb
ja
dec
pop
dec
shlb
or
sub
loope
rcrb
mov
mov
mov
cs
mov
pusha
ljmp
rcr
jno
jle
lds
shr
push
push
mov
push
and
jg
iret
xchg
lods
xor
mov
add
sti
sbb
xor
fmuls
std
outsb
inc
mov
xchg
popf
aaa
out
mov
sbb
cwtl
sbbl
mov
icebp
outsb
xchg
hlt
push
dec
add
xor
js
rorl
dec
js
repz
mov
mov
inc
notb
or
scas
mov
inc
test
bound
hlt
push
sbb
lods
xor
jae
and
test
xor
mov
jge
and
mov
in
mov
xor
adc
cmp
sub
loopne
xor
loope
lret
jae
mov
lahf
sbb
fisubl
inc
pop
lods
mov
cmp
icebp
scas
cmpsl
push
ret
enter
mov
mov
sbb
lahf
push
mov
xchg
int
or
and
jae
inc
pop
sbb
push
ja
add
repz
sub
dec
test
xchg
test
cmp
push
mov
and
pusha
ss
fsub
cld
ja
push
int3
push
inc
xchg
das
sbb
scas
push
mov
rcr
dec
and
add
xchg
or
repnz
xlat
lret
decb
cld
popa
push
mov
in
insl
es
iret
sub
inc
cwtl
xlat
mov
pop
cltd
rcrb
sti
inc
int
fdivrp
ret
outsl
xor
shlb
ja
pop
shll
mov
imul
xchg
inc
xor
imul
ret
sbb
in
sbb
into
lods
outsl
insb
add
in
inc
fcmovne
add
out
add
es
cwtl
inc
mov
sbb
dec
xchg
push
repz
lcall
movsb
cmp
and
cmc
into
dec
jecxz
aam
push
push
js
and
pop
out
in
pop
mull
out
mov
mov
cli
pop
mov
rorl
mov
sub
mov
jb
xchg
dec
jb
cmpl
pushw
inc
ret
fcmovnb
xchg
inc
outsb
mov
adc
inc
shr
jmp
adc
repnz
jb
sub
dec
xchg
addl
and
dec
sub
xor
mov
cmpsb
mov
cmp
mov
adc
in
mov
jne
push
mov
stos
add
and
mov
cmp
dec
and
cli
jne
jo
cmpsb
ds
xlat
push
xor
mov
mov
sub
aaa
push
dec
ficoml
sub
jp
sbb
shll
aas
mov
arpl
mov
dec
repz
js
jb
in
ret
cwtl
pop
xchg
adc
rclb
pop
lods
adc
lahf
push
stc
jbe
dec
sbb
sbbl
push
xlat
jp
test
aam
inc
insl
sbb
ret
xlat
adc
sbb
push
int3
ds
addr16
stc
mov
lcall
add
mov
push
mov
hlt
cmp
sub
rcll
sbb
rorl
mov
push
lock
rcll
hlt
cld
pusha
mov
cmp
movsb
and
cmp
xor
scas
mov
xchg
xor
xchg
cmp
push
out
jo
shrb
push
lock
rcrl
sub
aad
sbb
adc
cmp
pop
adc
push
mov
fisttpll
ror
sbb
fildll
mov
fildll
loopne
xchg
cmp
lds
jge
dec
shl
lcall
ret
leave
jle
push
mov
mov
pop
mov
aad
mov
lcall
sbb
ret
cmp
inc
inc
xchg
inc
stos
and
xchg
loope
repnz
push
mov
cli
popa
test
dec
dec
shr
inc
mov
fisubrl
inc
sub
orb
cmpsl
in
cltd
push
push
mov
out
mov
imull
sahf
jno
daa
mov
mov
aas
xor
xor
clc
push
shrl
sar
jnp
into
dec
pop
push
mov
sub
aaa
and
dec
std
into
call
shll
mov
insl
cmp
mov
push
inc
gs
inc
mov
cs
pop
mov
push
outsl
test
and
les
js
inc
test
daa
xchg
in
mov
cld
out
lea
es
pop
push
int3
enter
push
dec
mov
pushf
fsts
repz
lret
in
mov
pop
shlb
dec
neg
fidivrl
push
dec
xlat
sahf
inc
js
and
lahf
ret
pop
mov
push
pop
and
lcall
pop
inc
cli
pop
mov
out
inc
insl
dec
cld
mov
cmp
jl
imul
aam
add
mov
les
mov
or
test
cmp
sub
popa
nop
iret
sub
in
scas
inc
insl
cmp
das
aam
and
mov
aas
bound
push
out
addl
mov
jecxz
mov
xchg
push
pop
out
pop
push
push
loopne
jl
das
std
out
inc
mov
shlb
jmp
inc
inc
sahf
push
imul
sub
push
shr
in
xor
add
sub
and
mov
cmp
and
call
mov
cmp
or
dec
add
mov
cmpsb
cmp
sbb
pop
inc
loopne
push
rorl
js
inc
pop
jne
fimull
ja
xchg
mov
ja
cs
mov
aas
imul
jmp
adc
movsb
adc
repz
cwtl
andnps
imulb
imul
xlat
movsb
and
jno
lahf
fistl
mov
imul
lock
adc
into
or
push
mov
inc
xor
adc
cmp
out
xchg
je
or
push
nop
sub
cmp
call
ret
aad
adc
mov
arpl
out
fdivrp
add
or
int3
imul
int3
jne
aaa
xchg
test
dec
test
fucomip
in
mov
push
dec
repz
push
jnp
iret
xor
add
jecxz
das
xlat
test
jno
call
adc
fcompl
mov
into
mov
mov
push
inc
mov
mov
push
gs
cmp
inc
mov
xchg
jne
or
aas
mov
lret
pusha
add
adc
gs
lcall
ss
fcomps
addr16
sbb
adc
lret
call
sbb
mov
xchg
xchg
fmul
outsb
mov
movsl
dec
lcall
adcb
xor
fs
test
stos
fwait
subb
cmc
pop
arpl
jg
pop
lcall
aam
rorl
daa
stos
jns
xchg
mov
cs
inc
xor
icebp
mov
aad
dec
andl
movsb
mov
shrb
adc
add
and
dec
and
cmpsb
pop
jl
cmpsb
add
addb
xchg
xor
rcll
inc
mov
ds
arpl
add
repz
pusha
sub
cld
adcl
jo
xor
out
xchg
or
sub
shrl
popa
movsb
cli
xchg
ret
aad
or
test
sub
jge
test
shlb
push
mov
rcl
pop
and
shr
mov
sub
popf
aas
sti
lea
cmpsl
jge
cmp
popf
mov
repnz
xlat
pop
or
cmp
dec
sbb
jle
out
addr16
sbb
into
pop
aas
push
and
fsubl
xchg
es
lods
push
hlt
in
stc
insl
repnz
adc
adc
imul
ja
je
sub
ja
bound
repz
dec
and
mov
or
jmp
adc
dec
sub
push
pop
shll
outsl
fwait
rcrl
adc
pop
pop
or
jae
or
ret
jl
enter
fstpl
test
and
dec
nop
negl
or
jmp
pop
pop
aas
adc
shlb
xlat
mov
arpl
mov
loope
add
cs
jo
out
and
mov
pusha
push
add
nop
out
cmp
and
add
test
in
dec
or
pop
fstl
cmp
jle
jnp
or
lods
fnstcw
sub
insl
aaa
pop
pop
push
and
sbb
lret
out
lods
sub
cmp
lret
insl
push
push
mov
xchg
cli
and
mov
fnstenv
add
mov
xchg
mov
cltd
out
loopne
pop
dec
add
jo
mov
push
loope
inc
push
insl
jbe
fwait
jmp
rcll
pop
fs
int
jp
push
xchg
and
or
icebp
mov
mov
mov
aaa
addr16
or
pushf
shr
movsl
or
fnsave
in
add
data16
aam
stos
dec
xlat
mov
scas
aas
jge
adc
out
cltd
jp
push
mov
inc
sbb
mov
dec
inc
xor
push
sbb
or
pop
popa
jmp
test
pop
push
lcall
lea
pop
sub
outsb
mov
clc
xchg
adc
jo
loope
dec
orb
cmp
insb
jne
push
xor
addr16
pop
or
xchg
pop
and
stos
push
pop
shrb
xchg
sbb
ja
pusha
pop
or
pop
hlt
and
movsl
inc
jno
in
push
sbb
xchg
rorb
cltd
pop
mov
mov
pop
scas
iret
out
sbbl
jno
cmp
popa
jae
fiaddl
xchg
xor
jg
adc
aaa
push
cli
int
push
and
pop
jae
mov
jnp
movsb
gs
iret
pop
cld
jp
sbb
jo
loopne
and
dec
dec
cmp
pop
or
mov
lcall
in
mov
loope
cmp
loopne
and
insl
clc
add
lahf
rclb
lret
mov
sbb
adc
aaa
test
cmc
pushw
ds
repnz
pop
push
loop
inc
push
je
ja
ds
mov
dec
add
push
fadd
mov
pop
pop
enter
loopne
adc
arpl
inc
mov
int
ljmp
pop
mov
mov
fidivrl
jl
bound
pop
cmp
cwtl
push
leave
sbb
rcrb
inc
mov
inc
test
dec
adc
push
xor
xchg
mov
mov
inc
fwait
ljmp
xchg
pop
mov
mov
mov
jbe
push
push
push
cmp
push
test
loopne
aas
jp
bound
mov
icebp
pop
iret
out
push
dec
sub
mov
jmp
pop
popl
or
mov
pop
mov
cmc
cmpsl
imul
les
cmpsl
cmp
out
and
jno
xor
insb
jns
cmp
stos
jp
jno
enter
mov
loop
pop
pop
xchg
jnp
sbb
inc
fcomps
leave
fldl
push
repz
sub
jnp
pop
inc
loopne
out
xchg
sti
push
jns
adc
iret
lock
lds
pop
ficompl
rcl
loope
add
addr16
cmp
mov
hlt
inc
scas
push
loopne
inc
sbb
mov
push
and
mov
leave
shl
stc
and
daa
dec
in
out
leave
mov
lea
testl
das
loopne
rcrl
imul
pop
dec
push
inc
pop
jp
aaa
fwait
out
scas
lret
jns
mov
mov
pop
sub
arpl
rclb
push
imulb
pop
dec
xchg
lods
xlat
das
mov
in
je
pop
ljmp
xor
je
pop
jno
cmpsb
jmp
sub
pop
das
aad
loop
push
and
add
mov
scas
addr16
add
xlat
loope
xchg
repz
and
xor
push
ficoml
xor
movsl
jmp
inc
gs
mov
inc
stc
pop
imul
inc
test
fwait
les
out
in
xor
dec
xlat
shlb
push
inc
or
imul
dec
sub
mov
add
pushf
lret
sarb
xchg
cmp
jne
or
ret
mov
testb
hlt
mov
hlt
repz
sbb
and
xchg
xor
cmpsb
adc
cmpsl
push
jmp
adc
mov
xor
push
mov
adc
jle
sarl
jne
dec
adc
mov
daa
pop
call
jbe
mov
ljmp
inc
xchg
jecxz
cmc
sbb
int
xor
jecxz
test
xor
arpl
fwait
inc
xchg
ds
dec
inc
xchg
adc
aad
xchg
pop
xor
cwtl
or
cmpl
pop
jae
pop
lahf
mov
stos
and
cltd
adcl
enter
cmp
int3
pop
sub
xor
shlb
dec
cltd
mov
leave
jb
or
push
out
and
xchg
pop
fidivrs
clc
pusha
lods
pop
xchg
and
and
or
and
lret
sbb
cmp
dec
stc
stc
out
jae
hlt
push
lods
jbe
push
lret
add
imul
mov
jp
aam
fistpl
ljmp
cli
xor
cmpsb
in
and
fcmovnb
out
scas
repnz
das
push
or
and
dec
imul
inc
fisttpll
aam
stos
rorl
pop
lret
mov
and
repz
aaa
ss
jg
pop
std
sbbl
and
adc
cmp
loopne
xchg
rolb
inc
ficoml
sarb
mov
ljmp
mov
mov
scas
repz
jecxz
test
inc
jne
adcb
pop
sbb
xchg
stos
daa
pushf
mov
xchg
mov
or
jbe
mov
out
lret
lds
jnp
je
cmc
into
pop
and
cltd
pop
jl
cmp
lods
in
push
mov
jge
andb
stos
sbb
cmp
testb
xchg
loop
aam
xchg
fistpll
add
mov
xchg
or
inc
push
dec
ljmp
sub
adc
int3
jnp
mov
popa
bnd
cmp
adc
sbb
or
and
sub
ret
jb
mov
rcrl
test
sbb
pop
cmp
xor
aaa
add
ret
and
stos
jae
popf
rcrb
popf
lods
std
fwait
mov
adc
and
sahf
add
sub
lahf
cmpsb
iret
es
push
lcall
push
pop
hlt
xchg
lret
xchg
mov
jo
xor
adc
subl
mov
push
loopne
add
insb
scas
inc
fs
jl
jmp
pop
sbb
aam
inc
sbb
fdivl
mov
arpl
cmp
inc
insb
cltd
mov
les
add
and
scas
or
imul
sub
test
sub
int3
mov
sub
roll
jno
jae
dec
aam
mov
pop
fcmovb
daa
fwait
fildl
add
add
out
or
inc
arpl
mov
out
mov
in
mov
aam
cmp
xchg
inc
fcomps
xchg
xchg
in
sbb
fimuls
sub
add
popa
iret
pop
cmp
mov
mov
lods
xchg
mov
cmpsb
dec
mov
sbb
stc
pop
scas
shrl
sub
aaa
add
sbb
mov
mov
mov
fistl
arpl
inc
fucomi
mov
push
aad
xchg
jbe
sub
add
insl
out
and
cmp
push
call
jmp
call
cltd
popf
stos
movb
pop
dec
hlt
les
pop
sub
adc
xchg
fstps
in
dec
mov
push
ss
push
cli
test
test
cmp
js
sbb
loop
leave
mov
adc
imulb
xlat
pop
popf
push
mov
mov
xchg
jno
pop
and
hlt
mov
jae
aas
push
sub
sub
fs
scas
rcll
out
inc
test
mov
mov
mov
leave
sbb
ror
adc
push
int
sarl
mov
mov
ds
mov
adc
repnz
dec
fwait
xor
jnp
xchg
scas
jo
jp
dec
adc
mov
mov
aam
int
pusha
xchg
push
test
cmp
andb
pushf
jle
push
cmp
rcr
adc
or
shlb
imul
das
mov
mov
ljmp
lods
int3
xchg
jae
stc
incl
insb
popf
aad
or
loop
or
lds
add
dec
repz
enter
push
lea
mov
adc
in
mov
and
shlb
in
lcall
push
xchg
je
outsb
pushf
mov
xchg
ljmp
aam
push
adc
jle,pt
xor
adc
sub
mov
xchg
fstpl
jl
pop
pop
add
xor
dec
xchg
xchg
mov
xchg
push
sbb
dec
or
mov
repnz
inc
outsb
lock
std
pop
fs
cmpsl
cmp
push
pop
jb
iret
jmp
jg
mov
sbb
dec
mov
or
clc
lahf
ret
sbb
push
neg
pop
sbb
test
sbb
lret
ds
adc
das
scas
icebp
cmp
push
cmp
mov
add
movsb
jae
pop
pop
mov
cmp
lds
and
icebp
jne
data16
dec
jo
ud2
in
lcall
push
es
fmulp
je
outsl
push
lahf
loope
bound
sarb
test
sub
pop
bound
mov
repnz
mov
mov
cmpsl
mov
mov
push
add
bswap
aaa
pop
or
mov
lock
dec
mov
stc
jle
rcl
pop
movsb
enter
jg
rorl
scas
mov
push
jno
mov
mov
adc
sbb
jno
mov
scas
jmp
push
es
cwtl
push
mov
push
repnz
sbb
negl
lea
jns
inc
xlat
cmp
cmp
test
pop
inc
pop
add
sbb
jno
push
adc
mov
dec
sub
mov
mov
or
push
call
sbb
addb
rorl
jmp
mov
in
popf
mov
mov
sub
or
cmpsb
lods
and
and
adc
jp
cltd
lock
sub
fnstsw
test
mov
inc
or
add
mov
lock
test
lock
pop
std
insb
in
and
daa
mov
scas
movsb
fisubrs
out
dec
push
dec
jmp
aam
or
fwait
and
mov
dec
hlt
daa
dec
cmp
cmp
xchg
cmp
and
into
aam
call
sub
outsl
ss
test
and
mov
lret
inc
sub
cmp
add
pop
popf
push
sub
lods
popa
or
aaa
insb
mov
add
rdmsr
cmc
or
lcall
nop
pandn
negb
add
movsb
sbb
and
repz
shll
push
in
jbe
mov
enter
lcall
imul
imul
push
inc
in
cld
jge
inc
cmp
insl
mov
setle
insb
mov
jle
into
xlat
mov
sbb
add
mov
inc
sbbb
popa
iret
adc
loope
pop
pop
sbb
pushf
int
insb
fwait
xchg
dec
mov
lock
movd
loopne
icebp
lods
insb
mov
mulb
mov
dec
xchg
dec
add
sub
in
xor
mov
jp
mov
rolb
mov
xor
and
idivl
nop
mov
das
push
popl
push
push
mov
pop
mov
bound
mov
xor
sbb
dec
dec
outsl
push
nop
push
push
mov
dec
xchg
sbb
sbb
fimuls
or
repnz
fildl
imul
mov
mov
int3
mov
and
adc
and
xorl
lock
cmc
sbb
ja
lock
in
aaa
out
mov
adc
fwait
ljmp
dec
xchg
push
sbb
arpl
in
insb
or
push
add
gs
sar
xchg
clc
or
ljmp
repnz
scas
jg
mov
and
jl
sbb
dec
movsb
fists
sub
mov
arpl
lea
scas
out
repz
iret
lcall
popf
or
mov
mov
xchg
dec
and
jno
inc
sbb
sbb
dec
jne
inc
mov
popf
pop
roll
xchg
in
push
add
sbb
and
cmp
pop
daa
repz
into
pop
jb
shlb
into
mov
jbe
push
movsb
jmp
pop
sbb
pop
or
in
test
out
loope
pop
pop
mov
data16
les
dec
jle
leave
cs
inc
pushf
sub
mov
sub
out
jg
cmc
sbb
cmp
mov
cmpb
lahf
cmc
inc
jae
sub
lds
aam
hlt
shl
int3
dec
cmp
mov
shrb
aam
mov
or
in
xchg
loop
lcall
mov
in
jo
test
and
inc
dec
mov
je
jecxz
pop
out
jge
popl
jo
add
ljmp
je
div
daa
je
ret
inc
mov
jnp
push
in
mov
outsl
or
mov
dec
cmp
inc
nop
sub
add
cmp
fwait
rclb
xchg
push
jp
mov
or
lcall
mov
outsb
data16
test
inc
lea
mov
pop
popa
mov
mov
push
cmp
gs
mov
bound
mov
clc
cmc
lcall
stos
add
in
out
mov
movsl
das
lcall
mov
sbb
jle
push
xor
xchg
sub
cmp
lahf
pop
jbe
jle
in
and
sbb
adcl
insl
es
add
xor
cltd
cmp
sub
sti
out
inc
xor
jno
adc
pop
pop
adc
pop
xchg
push
xchg
jle
push
fimull
mov
mov
addr16
addr16
loop
add
and
mov
imul
faddp
fbstp
into
add
add
jae
adc
add
in
pop
cmc
or
xor
inc
mov
shlb
inc
mov
cmc
adc
jbe
fists
pop
xlat
mov
cmp
sub
or
mov
jmp
adc
out
mov
adc
addr16
xchg
add
sub
ss
dec
loopne
jp
call
sub
sbbl
addr16
adc
bound
in
pop
insb
test
dec
mov
jecxz
fldl
mov
sbb
fidivrs
jae
insb
outsl
mov
or
pop
xchg
xchg
cmp
outsb
mov
out
add
lcall
add
inc
pop
sarl
sub
add
sbb
inc
cltd
scas
cld
imul
dec
adc
pop
push
dec
xchg
out
adc
inc
cmp
jnp
mov
pop
xor
hlt
psllw
xchg
add
pop
enter
jp
mov
and
sbb
pushf
and
dec
mov
push
int3
sarl
loopne
pop
adc
dec
dec
pop
aas
bnd
out
pop
mov
pop
mov
call
loopne
insl
lods
inc
xchg
mov
movsb
or
mov
aaa
lods
push
xor
mov
xchg
pop
mov
xchg
fdivr
mov
mov
aad
xor
lahf
lds
popf
push
xchg
add
push
sub
stos
xor
cmc
cmp
sahf
inc
pop
pop
cmpps
mov
sbb
xor
movsl
lahf
pushl
stos
mulb
iret
sbb
test
bound
mov
mov
pop
xor
push
decb
sbb
mov
cmc
in
scas
xchg
jge
pop
fwait
mov
dec
mov
insb
sbb
xor
jo
jmp
jo
pop
mov
or
cmc
push
push
or
xchg
nop
lds
in
add
popl
xchg
cmp
cmp
test
mov
push
inc
rol
out
lcall
push
mov
and
jmp
inc
inc
inc
nop
xrelease
and
mov
int
pop
das
jns
or
lcall
xchg
sub
fs
sbb
dec
mov
mov
adc
push
mov
outsl
dec
push
sbb
sbb
rorl
xchg
sti
repnz
mov
aad
or
inc
fistpll
sti
insb
aad
lods
ret
in
lcall
loop
sub
mov
adc
cwtl
pop
inc
mov
mov
jno
movb
sbb
mov
popa
cmpsl
icebp
push
in
lds
in
or
test
addb
or
dec
ja
pushf
test
xchg
cmpsb
cli
inc
xor
paddd
mov
push
cld
insb
ljmp
fs
nop
mov
xchg
mov
enter
push
fdivs
in
mov
in
inc
sbb
mov
push
dec
xor
xchg
jne
aaa
and
std
jnp
pusha
mov
pop
push
push
mov
sub
xor
cs
xchg
cli
in
and
lret
mov
jo
xor
xchg
sahf
or
or
outsb
xlat
add
push
rclb
enter
ja
ljmp
jg
lret
insb
pop
ss
aaa
pop
sbb
loop
stos
shll
bnd
fcmove
pop
cmpsb
imul
cmpb
movsl
in
cmp
mov
jecxz
sub
and
repz
ss
fucomip
testb
loop
sbb
fs
push
cmp
push
xorb
add
addr16
jge
imul
mov
xchg
sbb
inc
pop
outsl
lods
push
jne
inc
mov
adc
fdivs
sbb
cmp
dec
addr16
lods
mov
cld
lds
inc
xorb
xchg
adc
xlat
mov
mov
push
or
xchg
loop
fistpl
sbb
adc
mov
lahf
enter
popa
stc
ficoml
mov
bound
mov
adc
mov
mov
pop
or
push
lea
gs
lods
pop
imulb
ret
xchg
sub
xchg
cmp
pusha
rep
add
dec
enter
pop
inc
mov
test
sbb
add
movsb
int3
pop
mov
mov
xchg
and
mov
mov
mov
int3
and
es
rcrl
mov
outsb
lret
cmc
pop
arpl
mov
cmp
jg
aaa
mulb
or
or
cmp
xor
dec
and
and
rorb
stos
mov
or
cs
stos
das
gs
pop
mov
in
jno
mov
lods
sbb
mov
js
gs
test
outsl
push
jbe
jle
cltd
xchg
push
in
sarl
push
inc
or
out
icebp
and
jb
arpl
lcall
xchg
jecxz
mov
xchg
pop
pop
adc
sbb
cmp
mov
xchg
jp
pop
jecxz
push
fwait
enter
lcall
add
adc
add
icebp
hlt
and
insb
fdivr
fiaddl
sub
dec
loope
into
mov
shll
jnp
jmp
in
insl
push
dec
pop
push
sub
int3
inc
dec
scas
loopne
push
ret
mov
sbb
outsb
mov
fsubr
sub
mov
mov
or
mov
stc
dec
out
fsubrl
lock
imul
test
repz
es
int
mov
lds
cmp
std
push
shl
scas
aas
ss
mov
fidivrs
lahf
les
cmp
mov
loop
sbb
fisubs
or
and
aas
addr16
lret
cmp
lret
xor
xchg
push
adc
ljmp
adc
test
dec
xor
ljmp
sub
push
inc
pop
test
mov
mov
popf
dec
xor
mov
or
pop
sahf
dec
into
sbb
jl
xchg
xchg
jno
push
mov
movsb
push
pusha
cmp
cmpsl
ret
rcll
das
sbb
fcomp
jae
pop
insb
shrl
std
test
and
jecxz
testl
scas
cmpl
sbb
popf
sbb
jecxz
cmp
lahf
jnp
lds
pop
outsb
fs
adc
stos
dec
adc
loope
int
or
mov
rcrl
cmp
add
mov
clc
lcall
pop
in
push
jl
sbb
push
jp
pop
out
lock
xchg
fyl2x
aas
push
scas
ja
pop
cltd
test
jne
loopne
ja
jmp
daa
stos
adcb
or
push
out
pop
mov
and
dec
jle
test
cmp
add
adc
out
pushf
sub
sti
add
int3
push
imul
adc
adc
fadd
mov
xor
faddl
clc
mov
adc
xor
das
iret
dec
nop
jl
mov
loopne
jnp
dec
inc
xor
add
pop
xchg
in
cmp
pop
sbb
adc
push
popa
test
push
insb
dec
dec
movsl
sub
mov
pushf
inc
and
ret
dec
jmp
inc
lret
stc
int
sbb
into
jbe
arpl
pop
sub
sbb
adc
cmp
js
lret
inc
jo
adc
or
push
lret
call
xchg
stos
cmp
and
push
pmulhw
mov
out
push
stc
and
push
call
mov
and
rorl
subb
and
cli
jge
mov
shl
pop
jecxz
pushf
std
mov
xor
inc
aas
stc
add
cmp
mov
ja
and
outsb
mov
aad
lahf
rcl
pop
xchg
ds
pop
lahf
fisttpll
fistps
mov
lods
das
int3
jne
pop
pop
jbe
fsubr
pusha
jae
stc
xchg
stos
shlb
inc
repz
add
adc
pop
stos
fsubr
mov
roll
jnp
and
xor
mov
mov
xor
mov
push
mov
mov
insb
add
jle
jne
movb
in
sbb
add
inc
clc
nop
xchg
movsb
jmp
jns
lods
cwtl
mov
push
ja
cld
xor
jno
mov
stos
pop
subl
loop
xchg
xor
dec
sti
mov
jge
repz
sub
loopne
int
push
adc
cld
xchg
push
push
js
lret
ss
sub
shll
mov
mov
jge
aaa
inc
daa
xor
mov
in
sbbb
inc
sub
and
dec
mov
sbb
mov
adc
sub
mov
inc
mov
xchg
mov
aad
pop
jp
dec
adc
call
add
sbb
pop
xlat
es
pop
test
adc
push
mov
add
cld
mov
ror
lea
or
fcom
cld
xor
shrb
dec
mov
or
sbb
test
pop
cmc
pusha
fidivl
jg
push
add
cli
scas
xor
ds
or
aaa
clc
ljmp
xchg
push
faddl
mov
xchg
fisttps
cmc
sub
pop
scas
clc
popf
ret
aas
and
cmpsl
cmc
sbb
fcmovnbe
or
cli
insb
lret
out
or
or
pop
aas
stos
or
xchg
std
or
and
cwtl
movsl
inc
push
add
sub
aaa
movsl
sub
ja
dec
out
pushf
lret
lods
andl
push
iret
xor
lret
hlt
push
ss
es
sub
leave
dec
ss
hlt
leave
outsl
jae
jmp
and
inc
dec
mov
std
lds
or
pop
pop
and
lods
cmpsl
loop
gs
icebp
sub
xor
lds
arpl
mov
outsb
adc
adc
xor
jecxz
xchg
addb
sub
bound
adc
jecxz
mov
push
sbb
int3
insb
lahf
dec
mov
jl
fstpt
xlat
fwait
out
cmp
mov
push
jl
jnp
movsb
iret
insl
cmp
inc
xor
xor
mov
inc
push
and
aas
lds
das
mov
xor
outsl
movsb
idivl
or
or
mov
sbb
rorb
dec
mov
clc
jne
mov
das
xchg
pop
xchg
or
das
jl
loopne
fisttpl
shrb
out
jne
xchg
fidivrs
orb
loop
mov
fcomps
xchg
xor
aad
jl
lea
mov
xchg
mov
ds
pop
inc
stos
mov
imull
lock
pop
dec
mov
popa
es
or
cmp
adcb
mov
ds
push
cmp
cmp
lret
pop
and
xchg
es
scas
mov
or
inc
insb
fsubr
nop
test
fisubrl
cmpl
mov
dec
xchg
pop
inc
scas
jmp
push
jns
mov
dec
stos
push
adc
ss
xchg
xchg
sbbl
mov
mov
mov
aas
cmp
jmp
es
in
dec
jns
pusha
add
xchg
int3
outsl
jecxz
ds
pop
jle
jns
cmp
pop
pop
cmp
nop
mov
js
movsb
sbb
xor
test
test
pop
jne
mov
ret
addps
jg
insl
imul
test
dec
lahf
and
or
hlt
jp
xchg
push
inc
inc
ja
adc
jns
test
fistps
pop
test
loope
push
lret
add
sahf
out
stos
jbe
dec
cmp
stos
and
xchg
adc
cmpxchg
add
mov
push
adc
hlt
sub
pop
clc
ret
js
inc
sub
cmpsb
add
cmp
popf
xchg
mov
cmpsb
out
xchg
jno
daa
inc
add
mov
dec
scas
lahf
fisubrs
stos
xchg
jbe
scas
out
ret
icebp
mov
and
and
pop
inc
cmpsl
ret
dec
mov
insl
pushf
xchg
add
stc
inc
add
jno
jge
xchg
xchg
or
cmpb
adc
mov
loopne
shll
pushf
jo
dec
ja
pusha
jle
lcall
xchg
fcmovne
sbb
fwait
pusha
mov
push
icebp
push
sub
mov
jle
test
and
jb
lock
sub
mov
mov
adcl
pop
adc
push
orb
sub
mull
mov
mov
icebp
jne
sbb
jg
fsubrl
jbe
sbb
inc
xchg
mov
pop
jbe
mov
test
div
cmp
orb
xchg
shrl
cli
lea
test
mov
stc
dec
enter
dec
sub
clc
dec
add
call
mov
inc
xchg
jne
push
adc
aad
jp
jg
cmp
dec
mov
int3
jecxz
andl
mov
fsubrl
pop
enter
mov
xor
mov
mov
and
out
inc
sbb
xor
cmp
ja
sti
stos
jp
loopne
push
mov
mov
test
popf
and
outsl
or
cltd
push
call
rorb
lcall
dec
sbb
mov
and
sti
mov
inc
aam
inc
mov
jns
xor
int
push
xor
sbb
inc
inc
lret
mov
test
outsb
mov
fsubs
pop
nop
inc
dec
add
fadd
jle
adc
es
jo
push
push
cmp
in
loope
test
or
and
add
aam
test
outsb
lret
jae
sbb
daa
icebp
out
and
xchg
fimuls
lods
inc
xchg
ds
adc
sbb
stos
xchg
mov
into
or
add
in
cmc
cmp
dec
jno
test
ret
mov
or
frstor
loope
ss
mov
in
les
inc
add
dec
push
adc
jno
mov
add
xor
pop
jnp
repz
aad
cmp
dec
jnp
and
mov
and
out
adc
jne
subb
mov
mov
pop
lds
xor
fldl
cmp
sub
dec
adc
call
jmp
stos
dec
arpl
mov
dec
dec
icebp
dec
rol
fdivl
lods
cmp
or
scas
adc
push
popa
popa
mov
out
arpl
test
push
ds
sub
in
sub
popa
lods
sbb
outsl
jl
jo
jp
imul
jns
inc
sbb
popa
adc
das
inc
jo
push
push
cmp
insl
cmpsl
sub
sub
fsub
movsl
xchg
test
xlat
add
mov
js
lea
xchg
push
cmp
inc
lds
dec
xchg
dec
gs
fisttpll
jns
pusha
lea
jp
stc
xor
xchg
ljmp
mov
inc
scas
mov
or
mov
mul
push
pushf
sub
dec
pusha
into
mov
jnp
fs
in
push
arpl
fsubl
or
adc
mov
insb
push
stos
sbb
shrb
and
nop
jbe
jecxz
sarb
jbe
scas
int
arpl
fsubrs
mov
push
leave
jnp
add
push
aas
push
fldenv
inc
mov
cmp
lret
sub
adc
clc
movsb
jne
or
cwtl
ret
dec
les
and
xchg
xlat
int
mov
xor
push
dec
adc
ss
xor
cwtl
imul
sti
nop
inc
adc
aam
pop
popa
mov
iret
push
xor
cmpsb
or
cltd
pop
sub
pop
fcmovu
into
rolb
test
adc
out
test
sti
cltd
add
mov
lcall
sti
imul
decb
rcr
sub
jns
xor
jbe
cmp
mov
test
div
push
push
shll
jbe
test
out
mov
outsl
loope
out
dec
add
in
daa
and
gs
dec
repnz
stos
push
mov
js
mov
cwtl
sub
adc
aad
push
int
aaa
push
pusha
jecxz
mov
cs
mov
adc
sub
imul
adc
ja
loope
push
dec
push
push
inc
loopne
push
stos
repnz
pop
ljmp
inc
fdivl
push
cmc
rcrb
ja
sbbb
lds
or
ljmp
jp
mov
js
js
add
pop
jnp
fucomip
insb
jb,pt
not
bound
movsb
ss
inc
iret
push
loope
mov
hlt
sbb
cmp
sbb
adc
pop
jmp
xchg
jo
js
sbb
repnz
popa
cmp
into
daa
mov
inc
mov
out
inc
aas
inc
sbb
cmpsb
mov
xchg
cmp
in
push
xchg
mov
rep
je
out
push
js
cmp
inc
stos
jp
jo
jae
out
jecxz
popf
sub
imul
jmp
ror
xchg
outsb
xor
je
cli
in
orl
rcl
mov
jmp
movsb
adc
mov
xor
xor
mov
jnp
mov
lret
scas
lods
cs
push
mov
std
jnp
iret
or
shr
es
stos
call
fiaddl
out
gs
adc
jp
mov
xor
fistl
push
add
inc
push
loopne
xchg
adc
scas
fcomps
mov
mov
lea
fnsave
cs
cwtl
rorb
inc
repz
sbb
pop
mov
ja
mov
pusha
negl
adc
mov
lds
pop
sbb
cwtl
push
loop
mov
mov
icebp
mov
in
add
and
ret
clc
int3
xor
mov
pop
add
xchg
scas
jge
fstl
xchg
xchg
pushf
std
std
les
sub
sbb
mov
scas
mov
ljmp
clc
and
std
addb
out
xchg
sbb
sub
pushf
push
jle
jo
fstps
cmp
xor
sbb
jmp
cmpsl
xchg
out
push
je
xchg
jp
popl
pop
ja
test
in
hlt
mov
xor
lock
loop
mov
mov
add
imul
outsb
gs
inc
mov
jl
mov
dec
pop
lret
mov
dec
mov
xor
inc
ret
jno
notl
pop
jmp
imul
and
movsb
call
jl
int
adc
movsl
pop
xchg
loopne
andb
mov
movsl
addr16
xor
mov
mov
mov
push
aad
movsb
cld
adc
scas
lods
xchg
in
rolb
bound
out
faddl
int
cs
cmp
xor
iret
adc
out
outsl
xchg
test
cmp
cmp
lods
loope
test
repnz
cmp
push
pop
dec
daa
and
inc
in
push
lods
fnsave
mov
leave
fistpl
jnp
sar
xchg
or
dec
cmp
push
cmp
lock
nop
ja
lea
faddp
fdivl
pop
cmp
pop
pop
in
imul
es
lret
pop
jp
xor
sub
lods
in
test
cmpsb
mov
loope
xchg
sub
xchg
inc
lret
pop
int3
lods
jne
out
cmpsb
dec
push
in
cwtl
xlat
ds
mov
cmp
movsl
lea
es
std
fdivl
push
xor
pop
clc
aam
aas
mov
sub
xchg
pusha
insl
lods
in
movl
cmp
shll
inc
dec
adc
aad
cmc
jbe
aad
arpl
xchg
mov
inc
add
dec
int
aaa
scas
jnp
into
aam
imul
mov
enter
scas
sub
cli
dec
sub
movsb
cmc
sbb
scas
or
rorb
jne
dec
aas
cmp
xlat
or
imul
lea
andl
add
jo
pop
fwait
and
xchg
push
out
arpl
lock
loope
sbb
pop
and
cwtl
or
insb
sahf
pop
cmp
dec
adc
roll
sub
cwtl
push
mov
insl
pop
je
add
xchg
fistl
mov
out
in
inc
xor
xor
pop
in
popf
fildl
mov
rcl
imul
xor
sbbl
call
rcll
adc
mov
aam
or
push
mov
or
in
int3
sub
add
in
stos
jle
pop
aaa
dec
inc
daa
inc
test
jl
std
and
js
and
adc
scas
imul
in
mov
sbb
leave
adc
mov
pop
sub
sbbl
push
xchg
arpl
fldenv
in
cmp
pusha
and
pop
fnstsw
jo
or
movsl
mov
out
mov
dec
lret
push
lret
aam
jmp
lret
pop
ror
ret
cs
cmpsl
pop
rcrl
pop
pop
cmpsb
push
popa
sbb
cs
cmp
xor
mov
mov
jb
cmp
pop
in
fs
leave
jecxz
shr
das
dec
stc
adc
push
enter
test
in
inc
je
dec
or
add
lods
sbb
mov
inc
mov
sbb
sbbl
push
inc
adc
xchg
lret
push
mov
pushf
pushf
cmc
lds
sahf
pop
or
sub
hlt
stos
cs
jnp
lret
in
inc
mov
pop
mov
add
gs
pop
and
xor
or
cmpsb
dec
stc
pusha
cmp
lret
repnz
sbb
jmp
mov
inc
and
xor
in
pop
adc
mov
sahf
mov
sub
push
cmp
mov
pop
xchg
jbe
xchg
xor
cmp
xor
push
jne
jne
pop
scas
pop
pop
arpl
adc
andb
cmp
adc
stos
pop
popa
inc
mov
fcmovbe
cmpsl
push
dec
stc
pop
ret
push
enter
aam
aaa
aaa
pop
out
xorb
mov
in
in
mov
fldt
lock
cmp
xor
popa
mov
or
imul
popa
mov
sbb
fisubrs
jg
push
mov
in
clc
in
not
ja
shll
daa
pusha
adc
sub
ret
loope
jle
aam
int3
sub
jns
loopne
enter
stos
push
sbb
leave
dec
sarl
cmp
sub
std
filds
push
jo
insb
mov
mov
imul
fisubrs
cmp
mov
out
mov
push
lock
push
rcr
mov
jle
mov
push
push
sbb
push
cltd
inc
adc
sbb
dec
dec
xchg
add
test
cwtl
cmp
xlat
jl
lea
adc
inc
stc
adc
inc
scas
sub
div
pop
push
idivb
imul
sub
out
neg
sbb
leave
push
sbb
jo
xchg
sub
inc
imul
sub
test
lock
call
push
or
mov
and
sbb
xor
mov
test
push
sub
dec
stc
cmp
sti
push
cmp
xchg
dec
push
fnsave
stos
mov
pop
das
rorb
jno
movsb
add
loope
cltd
sbb
xor
push
movsl
sbb
xchg
arpl
loop
jg
fcomp
jns
sbb
jle
mov
aad
push
leave
dec
jg
out
movsb
add
leave
cmpsl
shrb
out
call
repnz
adc
jl
out
fstpl
les
push
pop
lsl
pusha
inc
ljmp
sbb
rclb
sub
pop
jne
test
push
sbbb
lcall
imul
mov
push
jne
daa
mov
scas
fwait
sub
in
pop
dec
lea
incl
mov
iret
mov
out
enter
popf
int3
lret
mov
adc
data16
icebp
in
mov
ret
into
sbb
cs
addr16
push
jbe
sbb
and
jae
xchg
cli
outsb
inc
push
pop
mov
fmulp
add
out
xor
push
xchg
pop
lcall
or
lahf
mov
dec
pop
bound
out
jg
inc
int3
push
jle
int3
sub
adc
xor
jl
out
and
push
leave
pop
adc
add
mov
add
and
movsl
dec
ret
add
pushf
xorb
dec
js
xor
movsb
ss
push
and
xorb
incl
push
jmp
das
inc
lcall
cli
popf
push
fnstsw
mov
xchg
dec
stos
loop
mov
sti
inc
out
lods
mov
mov
mov
inc
adc
cmpsl
stos
jle
imul
jae
es
test
adc
jg
cli
push
dec
lds
mov
std
push
sbb
inc
jnp
push
in
push
stc
push
push
mov
sbb
xorb
sbb
jns
xor
jl
je
fnsave
fistpl
dec
add
pop
inc
jg
sub
xor
jg
movsl
add
add
inc
push
clc
ja
sti
cld
sub
jns
xlat
add
cmp
or
xorl
adc
das
ja
enter
out
loop
add
cmpsl
fnstsw
popf
xchg
in
inc
pop
inc
je
mov
mov
cmc
std
and
fisttps
popl
jbe
inc
cmp
gs
stos
mov
repz
inc
jb
jmp
inc
mov
dec
jo
outsl
push
or
lret
add
inc
fisubl
popf
hlt
ret
in
cmp
bound
mov
mov
push
cmp
ja
jl
sbb
mov
push
mov
lret
mov
movsl
dec
jb
xchg
pusha
pushf
fsubrl
cltd
loop
outsb
mov
shlb
outsb
ja
int3
cmp
popf
and
jl
rcll
mov
test
clc
out
in
out
in
xchg
es
cltd
test
adc
mov
mov
mov
and
and
mov
test
xchg
jle
js
addr16
jmp
sti
addr16
aaa
adc
cmpsl
call
mov
adc
mov
mov
loopne
push
pusha
stos
sub
lahf
pop
sarl
insb
loopne
mov
and
cmp
mov
cwtl
or
dec
cwtl
enter
mov
andl
inc
decb
jg
inc
ss
push
lds
icebp
cmp
mov
movsl
sbb
int3
or
inc
ja
xchg
aas
xchg
inc
insl
fmuls
add
cmp
lcall
pop
sbb
inc
ljmp
int3
sahf
ss
inc
bound
xchg
sbbl
cli
loop
jbe
das
fsubr
ret
cwtl
pop
push
sub
mov
dec
stos
lahf
push
mov
pop
in
jecxz
mov
ss
jnp
cli
out
push
pop
cltd
sahf
mov
sub
out
scas
mov
in
push
and
mov
scas
mov
mov
mov
jnp
mov
push
pop
fstp
lods
scas
les
into
loopne
dec
scas
xchg
aaa
inc
and
sahf
or
sub
fnstenv
ret
add
jge
aam
push
ret
bound
jge
or
xchg
das
loopw,pt
subl
arpl
andl
jecxz
mov
inc
icebp
push
nop
lret
mov
mov
setbe
data16
scas
das
adc
add
push
push
sbb
in
fistps
fwait
pop
cmp
mov
ror
pop
xor
xor
ret
push
and
lock
adc
mov
push
inc
xchg
bound
sbb
shrl
inc
das
loopne
std
shlb
test
xor
call
lods
lods
les
addr16
jp
sbb
sub
and
in
cmp
mov
mov
les
push
mov
inc
sbb
xchg
mov
lcall
or
push
out
mov
testb
out
mov
enter
adc
loop
fidivrl
cwtl
adc
inc
subl
inc
jmp
xlat
mov
int
stc
mov
out
rcrb
sub
cld
cli
cmp
rcrl
aad
cltd
out
add
jp
mov
test
mov
jmp
out
mov
jo
rcl
dec
push
push
pushf
cmc
es
pop
fadd
sub
xchg
dec
push
mov
int
dec
int
mov
mov
lds
sub
xlat
ss
out
jl
and
fdivrs
xchg
pop
xor
cmpsl
pop
add
mov
xchg
cwtl
sbb
je
test
add
cld
adc
jne
push
inc
lods
pop
cli
es
or
mov
push
pop
pusha
test
lret
test
push
aam
ss
sub
aam
int3
adc
outsl
out
sahf
out
pusha
fcomp
pop
adc
inc
scas
xor
sbbl
insb
sub
dec
jbe
stos
push
push
sub
ss
push
paddq
mov
xchg
aam
out
sub
cmp
add
fldenv
or
and
dec
scas
repz
fadds
int3
xchg
jnp
std
mov
mov
fcomip
mov
testl
mov
outsl
stc
xor
add
push
push
push
aam
or
loop
in
insb
xor
mov
sbb
xchg
pop
in
jno
cli
outsl
or
cli
cmp
pop
mov
mov
or
or
inc
dec
ss
cmp
pop
cmc
sub
lahf
jns
sysexit
inc
insb
xor
or
nop
jo
into
sub
in
inc
or
jg
mov
inc
shlb
push
mov
push
out
push
push
inc
xchg
add
sub
jle
jnp
mov
daa
inc
ja
dec
daa
cmp
pop
mov
xchg
aad
and
es
aas
sbb
sub
roll
icebp
lret
ror
outsl
sbb
inc
mov
pop
imul
std
dec
inc
or
mov
mov
xchg
mov
ljmp
mov
mov
fsubs
jp
movsl
add
fsubs
mov
or
leave
gs
inc
fisubrl
push
push
mov
xlat
add
or
mov
and
sbb
adcb
or
movsb
dec
dec
mov
dec
mov
insl
mov
sbb
sub
int
aas
xchg
loopne
push
inc
jne
daa
pop
ret
fiaddl
adc
cmpsb
ljmp
sub
cli
fldl
outsl
je
lahf
mov
out
xchg
ficoms
ret
or
mul
mov
out
push
fidivrs
add
xchg
icebp
add
loopne
push
pop
adc
lahf
andb
xchg
pop
mov
xchg
or
arpl
addr16
subb
lods
and
loopne
cwtl
xor
mov
mov
push
jne
adc
fcomps
fyl2xp1
aam
fisttps
mov
into
stc
sub
add
cmp
or
shrb
inc
std
arpl
xchg
pop
inc
add
pop
mov
xchg
add
fwait
xchg
cmpsl
mov
dec
mov
push
daa
pop
data16
or
imul
cs
inc
fsubrs
ja
leave
xor
mov
daa
xor
test
pushf
pop
sbb
pusha
adc
mov
gs
xchg
push
in
and
pop
dec
cmpsl
popa
js
jnp
testl
jmp
lcall
or
dec
sub
ror
fwait
pushf
cli
lret
fldcw
xchg
test
or
and
mov
aad
and
pop
push
mov
cmp
push
add
bound
jg
fsubrl
loope
repz
xlat
push
mov
test
sub
je
pop
lods
aas
push
popa
pop
push
fistps
aaa
inc
adcl
movsl
shl
mov
test
cmp
mov
mov
shlb
lods
fnstsw
mov
pop
popf
aas
xchg
fs
leave
jmp
ret
gs
sub
and
dec
in
mov
inc
xor
pop
pop
in
aad
inc
sub
lret
jbe
pop
mov
sbb
lidtl
ss
xchg
insl
leave
push
dec
das
int
out
push
test
inc
jnp
decl
push
xchg
dec
mov
cmpl
fwait
xchg
loop
stc
fstpl
push
jl
dec
push
in
pop
jmp
addb
sbb
dec
pop
inc
in
xchg
and
xchg
pusha
jnp
push
movsl
cmp
mov
inc
sbb
daa
ret
pop
mov
pop
mov
xor
dec
mov
mov
into
mov
push
bound
pop
mov
fidivrl
mov
mov
repz
popf
repnz
repnz
push
mov
xchg
int
test
sub
loopne
fs
mov
push
lods
xor
adc
lea
movsb
rclb
sbb
ss
dec
push
dec
sti
add
push
lret
push
mov
inc
sub
and
xchg
xor
popf
addr16
inc
sbb
cmp
adc
xchg
adc
sbb
sbb
mov
or
clc
mov
adc
or
rorb
adc
pop
jecxz
enter
mov
mov
fdivrl
shlb
pop
repz
aaa
rol
popa
pop
popf
mov
or
out
pop
sbb
cmpsl
adc
sbb
das
lea
sti
popf
fcmovne
popa
sub
sub
push
imul
fsubr
inc
push
inc
mov
xchg
push
xchg
lahf
xor
and
js
cmp
jne
aad
mov
in
sub
xor
pop
std
outsl
mov
and
add
arpl
push
std
pop
int3
dec
mull
les
rorl
fiaddl
mov
and
cmp
aam
shrl
js
stc
xor
mov
jge
imulb
rclb
inc
fcmovnbe
sbb
jmp
shlb
imul
js
sti
add
pusha
mov
jl
add
xor
or
cmp
add
xchg
ficoms
scas
dec
pushf
lods
repz
push
sbbl
cmp
out
out
or
mov
or
jo
adc
pop
inc
addl
in
mov
mov
je,pt
test
and
inc
out
adc
sbb
popf
mov
data16
mov
jg
dec
mov
outsb
enter
mov
out
icebp
cld
sti
jae
scas
add
mov
cmc
xchg
xchg
pop
push
cmovns
inc
rorb
lret
add
leave
sbb
pop
cmp
cmc
push
js
push
push
popf
mov
cmp
jp
mov
xor
jbe
insl
aas
mov
jo
xchg
movsl
push
flds
xlat
cwtl
cltd
mov
adc
lahf
add
jbe
lret
or
mov
adcb
ss
in
stc
sti
cmp
jge
out
ds
jecxz
and
addr16
iret
or
mov
scas
out
adc
cmpsb
jecxz
imul
sub
fld
mov
pop
mov
loop
or
lret
jmp
lea
outsb
idivb
popa
inc
mov
stos
adc
cmc
pop
mov
int3
mov
jns
xchg
loopne
movsb
jns
out
xor
cmp
push
push
xchg
jge
xor
daa
jbe
cmp
stos
push
mov
pop
sar
int3
sbb
lcall
mov
mov
int3
bound
xchg
adc
push
pushf
or
fstpl
ret
jb
sahf
shrb
sti
sbb
add
int3
xchg
mull
pushf
cmp
cwtl
push
rorb
mov
pop
mov
xor
aad
bound
loope
xchg
fnstsw
icebp
add
jge
xchg
push
push
popf
enter
xor
stc
jb
rcrl
addr16
ljmp
lahf
loope
or
adc
xchg
daa
mov
fldenv
ja
mov
sbb
dec
ds
fisubl
call
pop
mov
repnz
cmp
adc
loopne
sub
int3
and
and
ret
fisttps
sub
iret
pop
or
mov
dec
mov
pop
jno
loope
aad
pop
in
out
dec
jb
jmp
and
nop
enter
sub
ror
or
jnp
adc
jecxz
roll
hlt
repnz
push
pop
or
push
scas
call
outsb
loopne
or
xchg
adc
push
jno
pop
pop
push
adcb
fildll
loope
inc
fs
data16
mov
bound
push
xchg
mov
ret
and
shl
mov
insb
pop
fbstp
mov
int
fsubrs
loope
push
mov
sub
xor
add
mov
and
add
vaddss
push
push
jne
jo
pushf
lea
enter
mov
movsb
cmp
mov
cmp
jae
movsb
mov
sub
jo
lock
pop
pop
fisubl
pop
testb
xor
push
push
lods
lret
push
test
lret
test
sub
je
xor
mov
lar
andl
push
and
nop
movsl
cmp
repz
subl
call
inc
inc
inc
lret
fdivrs
scas
mov
outsl
fisubrl
push
xchg
mov
mov
push
sti
mov
xchg
sub
add
adc
adc
xor
into
sar
jp
xchg
fcomip
iret
pop
lcall
jg
mov
add
lock
mov
dec
popf
add
out
inc
xchg
sarl
cltd
jnp
ret
pop
mov
nop
dec
mov
inc
jno
sbb
sar
jmp
cmc
leave
aaa
xchg
pop
add
pusha
ss
jp
jecxz
xlat
and
push
fcmovu
sbb
xchg
jb
imul
mov
or
lods
cmp
stc
cmpsl
lods
dec
pop
add
movsb
cltd
mov
sub
jne
jae
jle,pn
bound
dec
test
dec
int
int3
lcall
fldcw
jno
int3
loope
movsl
fildl
add
push
hlt
dec
repz
lods
ja
orb
mov
mov
xchg
mov
push
jnp
stos
xor
mov
ret
dec
loopne
outsl
imul
loop
into
sbb
pop
dec
loope
jns
pop
sub
in
mov
or
xchg
xor
dec
testb
cmp
cmc
pop
mov
and
aaa
jl
andb
cli
imul
popf
dec
sub
std
xchg
int
flds
pop
cld
xor
mov
loop
jp
outsl
push
sub
push
pop
enter
jmp
add
lods
dec
int3
ret
add
loope
and
fists
pusha
pop
fwait
aas
jne
add
ret
loopne
inc
jno
fidivl
xlat
imul
push
fs
push
test
lds
inc
in
in
scas
test
out
mov
cli
mov
mov
scas
movsb
mov
loopne
jp
in
fisttpll
enter
iret
mov
and
mov
sarb
inc
xchg
mov
jg
aam
lods
adc
aad
out
push
dec
jb
in
rclb
push
pop
xor
jne
adc
test
pop
dec
xchg
push
aam
cmpsb
fstps
cmp
es
adc
mov
pop
fs
inc
loop
adc
jecxz
test
repz
int3
int3
mov
dec
push
out
jle
dec
daa
ret
and
jecxz
xchg
loopne
cmpsl
add
jb
outsl
loop
test
dec
xor
andb
mov
lea
sub
mov
jecxz
aam
mov
and
dec
cmc
stos
lret
frstpm(287
data16
lahf
jnp
insb
adc
xor
idivb
inc
xchg
sub
imul
add
pop
pop
xchg
sub
cmp
push
ficoms
xlat
or
mov
addr16
stos
adc
push
pop
cltd
arpl
aas
inc
pop
fwait
fwait
cli
and
mov
insb
daa
xchg
cwtl
xchg
pop
dec
cmp
adc
dec
rorl
hlt
pop
sti
sbb
jle
dec
mov
arpl
stc
sbb
insl
pop
adc
bound
ret
sub
aas
mov
mov
sub
fildll
lret
shlb
push
mov
rclb
dec
and
aam
idivl
popf
cli
xor
or
push
imul
ljmp
iret
push
pop
loopne
cs
cs
or
in
shlb
ret
mov
outsl
test
lds
push
mov
and
xchg
stc
sbb
mov
loope
xchg
push
leave
in
mov
and
xchg
mov
fbstp
js
leave
pop
daa
mov
orl
call
mov
lahf
xchg
insl
gs
addr16
or
pop
mov
mov
pop
pop
call
mov
fisttpl
lcall
push
loopne
pop
jle
jge
cltd
ljmp
sub
imul
jmp
test
fsubp
jns
xchg
jae
hlt
sub
mov
fcompl
movsl
xchg
mov
xchg
aam
fldln2
pop
testb
add
je
sub
inc
daa
sub
std
xchg
outsb
cltd
cmp
popa
jmp
std
orl
dec
adc
jo
jno
out
xor
pop
xchg
in
dec
cmpsb
fsubrl
ret
xor
inc
cmp
push
not
sbbl
jmp
hlt
movsl
popa
jl
insb
or
mov
inc
icebp
xchg
jbe
mov
call
cs
sti
lea
dec
xchg
dec
jno
loope
or
or
leave
cli
cs
push
push
push
push
push
pop
pop
lcall
mov
and
stos
cli
lods
inc
lcall
lcall
arpl
imul
sub
adc
lahf
dec
jo
stc
push
mov
dec
ds
xchg
and
inc
add
fwait
fs
inc
loop
mov
jnp
in
in
sub
add
cmp
dec
filds
das
jmp
test
push
mov
push
pop
sbb
mov
and
mov
mov
imul
sar
pop
xor
cmpsb
cmp
mov
addr16
outsl
int
fsub
ret
popa
xchg
or
out
out
call
les
loope
popf
jnp
mov
dec
lock
dec
dec
xor
push
aaa
xor
push
xchg
mov
popf
mov
das
int3
or
add
ljmp
shlb
xchg
adc
mov
jnp
jge
rol
inc
xchg
mov
movsb
xchg
shlb
fistpl
xchg
mov
sub
iret
daa
enter
push
xor
cmpsb
cmp
jae
add
xchg
xchg
sbb
inc
call
daa
sbb
imul
aas
xchg
sahf
cmp
push
ljmp
jb
xchg
adc
outsb
arpl
xchg
jnp
ljmp
lahf
adc
add
push
mov
std
test
popa
push
imul
repz
mov
jg
mov
ficoml
orb
sti
mov
test
push
fbld
mov
sbb
inc
cwtl
cmp
repnz
jmp
bound
out
popa
add
test
dec
adc
pushf
sbb
loop
cmp
jg
add
lcall
xchg
cmp
jne
scas
push
xchg
pop
cld
jle
scas
out
sbb
mov
ret
ficoml
stos
pop
pop
in
in
inc
movsl
jnp
mov
mov
incb
stc
cmp
lcall
mov
mov
fs
test
push
aad
add
or
shrl
mov
aaa
outsb
repz
jg
aad
pop
xor
imul
xchg
in
out
lret
mov
js
shrb
andb
mov
aad
pop
shl
gs
mov
lock
xor
aam
and
cli
lods
jnp
imul
mov
mov
lahf
movsb
icebp
popf
ficoms
and
out
loopne
out
jns
test
mov
jns
mov
jbe
jecxz
bound
xchg
adc
jecxz
jl
std
das
xchg
push
sti
pop
sbb
mov
lret
dec
jmp
dec
cltd
sub
sub
aam
hlt
cmc
jno
incb
popa
sahf
xlat
pop
imul
idivl
loope
sbb
dec
push
shll
cld
mov
mov
jnp
add
xor
adc
test
rcrb
jo
push
xchg
ficompl
adc
xchg
pop
movsb
mov
push
stc
lea
inc
je
sub
fimuls
xor
sbb
mov
inc
and
es
pushf
out
jmp
loop
pop
jo
cmp
cmp
sbb
mov
jo
je
lahf
out
dec
adc
dec
nop
sbb
leave
sbb
aas
loop
cmp
inc
aaa
mov
notb
imul
pop
adc
add
cwtl
fistpl
mov
stos
mov
fwait
add
in
dec
cmpsl
push
pop
aaa
sub
rcr
inc
push
cmp
dec
sub
mov
mov
sub
loop
lds
xchg
out
adc
shlb
mov
ss
outsl
outsl
xchg
lods
fisttpl
inc
pop
mov
push
sbb
jne
xchg
sub
mov
inc
sti
in
jns
xchg
iret
xchg
les
insl
pop
movsl
addb
fldt
iret
inc
es
add
xchg
add
das
dec
sub
inc
sahf
dec
shlb
andl
mov
push
jge
push
rorb
xor
and
repnz
mov
mov
push
fs
push
jae
dec
xor
shl
push
adc
lods
mov
ror
lods
jo
and
movsl
sbb
adc
lock
mov
push
inc
pop
pop
loopne
ja
cmp
inc
movb
stc
push
and
pop
pop
mov
adc
shlb
jge
dec
loope
or
sbb
vcvtdq2pd
out
cmp
xor
push
test
ss
popa
cmp
push
sbb
daa
mov
rorb
outsb
std
jp
cmp
push
and
aam
adc
mov
rcr
push
cltd
sbb
aam
sub
out
out
pop
dec
sub
in
movq
jno
daa
in
scas
mov
hlt
lods
jo
dec
pop
and
push
pushf
sbb
leave
inc
sti
push
and
jmp
pop
push
divl
push
and
std
cwtl
jge
add
dec
xor
nop
les
scas
and
push
mov
mov
repnz
leave
test
mov
shlb
aad
dec
shrb
mov
in
fstps
int
enter
jae
stc
mov
adc
mov
int3
sbb
out
pop
dec
push
mov
dec
xor
mov
add
repz
imul
sti
and
loope
cmp
pop
out
lods
lods
jge
js
fidivrs
cmp
pop
movsb
sbb
xor
inc
jl
in
sub
mov
mov
mov
mov
cmp
test
cmc
push
sub
loopne
movsl
sub
jg
cltd
in
mov
add
cs
filds
jns
call
nop
mov
add
sub
pop
lea
aad
out
mov
sbb
jmp
rclb
ja
and
or
lods
mov
test
mov
jmp
pusha
in
xor
pop
xchg
out
pop
sub
adc
imul
movsb
mov
push
jmp
loopne
adc
or
xchg
jnp
or
xchg
mov
repz
pop
push
mov
test
mov
bound
jg
lods
bound
pop
jne
mov
faddl
xor
xchg
sbb
daa
stos
mov
and
add
outsl
pop
xchg
sbb
enter
cmp
add
icebp
ds
push
or
or
test
mov
outsb
andb
into
xchg
dec
xor
push
pop
push
xor
ja
movsb
jp
ret
arpl
sbb
mov
fwait
insl
pushf
stos
bound
adc
mov
loopne
or
mov
push
pop
adc
jecxz
push
lcall
lock
add
lea
xor
div
pop
das
push
rsqrtps
lds
sub
add
push
cwtl
js
inc
add
and
push
stc
xor
js
pop
jp
sahf
jo
icebp
fsubrs
ror
mov
jne
fcmovne
cmp
subb
xchg
adc
inc
mov
add
ds
dec
push
inc
dec
out
test
and
xchg
iret
lods
mov
cmc
fisttpll
dec
pop
icebp
clc
ss
icebp
negl
loope
xor
push
cld
xchg
js
dec
aad
sbbl
mov
xchg
flds
jecxz
mov
xor
cmp
cwtl
adc
lahf
stc
push
and
jb
sbb
xchg
inc
cmp
stc
xor
pop
mov
into
cmp
adc
out
in
xchg
sahf
or
icebp
movsb
mov
or
loope
pop
rep
and
xchg
inc
mov
xchg
nop
addr16
push
std
xor
mov
adc
xchg
dec
ret
jmp
lahf
mov
jbe
in
jmp
int
mov
shl
mov
inc
arpl
jno
icebp
dec
xor
enter
xchg
jl
jns
mov
mov
xchg
jge
jnp
sbb
test
mov
cs
inc
jmp
adc
push
cld
pop
xchg
dec
mov
mov
mov
and
psadbw
xor
mov
xor
inc
add
inc
in
insl
daa
das
std
outsl
jl
mov
pop
ret
pop
mov
sub
adc
and
push
push
xchg
add
pop
sbb
jb
jecxz
mov
fadd
xor
outsl
push
mov
ror
push
inc
iret
mov
xor
pop
mov
es
stc
adc
fs
or
xchg
pop
inc
stos
out
fdivs
nop
cmp
insl
fildl
and
imul
jg
xor
adc
xor
add
mov
and
jl
dec
hlt
add
cmpsl
jp
in
sahf
mov
enter
sbb
mov
dec
mov
push
xchg
xchg
lret
and
dec
mov
das
icebp
pusha
jbe
push
std
dec
add
decb
pop
lods
enter
mov
stos
lahf
pusha
in
jecxz
jle
pop
lods
aam
inc
jge
pop
inc
mov
pop
and
out
ficoml
std
ljmp
push
ret
xchg
ds
icebp
mov
fwait
xor
add
adc
jae
and
cmp
outsb
mov
leave
fbstp
mov
decb
fs
mov
cld
shll
fstpl
enter
fists
mov
sahf
clc
cmp
xor
mov
push
int
push
xchg
xor
and
jl
gs
push
shrl
stos
cmp
dec
inc
cmp
adc
inc
ss
loop
ja
and
push
inc
sbb
push
pusha
je
adc
pop
in
jg
pop
ss
mov
mov
sbb
mov
int3
daa
lock
mov
rcrb
insl
mov
and
sti
and
push
pop
jmp
test
cmp
inc
pop
pop
push
mov
jecxz
push
cltd
lods
add
data16
clc
mov
mov
lea
scas
sbb
das
push
mov
mull
adc
sub
aad
sub
loopne
stos
jmp
jp
pop
and
lock
add
int
inc
mov
cmpsl
xor
jmp
sub
aaa
xor
pusha
cmc
inc
les
mov
jo
sub
lods
push
cmp
lea
inc
mov
daa
ja
xchg
mov
movsl
call
rcrb
shll
xchg
fidivl
in
mov
sbb
mov
scas
rorb
fidivrl
jno
and
mov
rol
pop
mov
pop
pop
rorb
inc
or
outsl
fmuls
mov
and
mov
movsl
ljmp
scas
mov
cli
faddl
lret
mov
aas
inc
push
xor
ficoml
jbe
clc
dec
mov
pop
nop
ret
cltd
sub
lea
cmp
test
aad
sub
mov
or
arpl
sbb
jnp
shrb
shll
sbbb
cmp
sub
cli
xchg
xor
pop
lcall
lret
jecxz
jo
adc
test
je
fbstp
jle
imul
sarl
jmp
mov
lock
mov
pushf
ljmp
xadd
repz
push
xchg
cmp
xchg
lret
xchg
xchg
das
adc
dec
push
mov
jp
sub
mov
xor
push
xor
jmp
cmpsb
mov
test
inc
je
sbb
int
clc
loope
and
pop
add
add
imul
iret
mov
insb
mov
xor
out
std
mov
xchg
imul
sbb
stos
xchg
in
mov
mov
xor
pop
loopne
inc
xor
ljmp
xchg
and
cld
and
sub
adc
push
imul
data16
cli
jl
cmp
dec
dec
mov
xor
inc
sbb
dec
aaa
stc
cmp
jge
and
jnp
xor
pop
mov
jle
jo
cli
std
ljmp
mov
jp
mov
aaa
pushf
popf
pop
inc
dec
ja
fwait
xor
out
mov
xor
and
push
fst
add
icebp
jg
imul
xchg
inc
enter
shrb
fstps
inc
add
jle
fsts
scas
mov
dec
jb
stc
mov
leave
mov
test
xor
fidivs
dec
sti
and
xorl
xchg
loopne
icebp
js
inc
roll
ret
push
subb
inc
or
xchg
xorl
dec
mov
push
inc
adc
xorb
mov
arpl
sub
arpl
cld
jmp
xchg
rclb
stos
out
loop
and
sbb
ljmp
adc
repnz
add
lock
dec
enter
jg
repz
xor
fmuls
enter
dec
pop
sti
push
jecxz
divb
adc
fdivr
push
xor
xchg
frstor
icebp
jle
orl
out
inc
push
xchg
jae
push
repnz
push
fdivrs
push
sbb
jne
pop
cs
daa
aas
cmp
notl
std
or
mov
push
push
jl
jns
or
bound
push
dec
fcmovu
mov
repnz
pop
push
ds
fsubrl
enter
mov
push
jle
inc
push
adc
fdivrl
or
mov
lock
push
cmp
mov
les
test
push
pop
scas
mov
test
repnz
lods
lret
mov
icebp
dec
stos
xor
test
sub
xchg
icebp
inc
sbb
lahf
adc
jp
lea
scas
std
mov
add
dec
test
movsl
lret
test
cltd
xor
pop
dec
jmp
icebp
pop
es
imul
adc
push
daa
outsl
js
fwait
ja
adc
push
sbb
addr16
xlat
out
push
sbb
ljmp
scas
icebp
icebp
fwait
pop
mov
cltd
mov
jecxz
in
imul
mov
pop
mov
fistpl
inc
lods
xor
pop
pop
lret
repnz
mov
test
pop
popf
popf
xor
sbb
repnz
sub
cmp
dec
scas
sbb
mov
push
pop
movsl
imul
inc
xchg
lahf
nop
jb
fidivrs
mov
mov
xchg
xchg
dec
int
jb
stos
cmp
mov
mov
mov
push
pop
and
cmp
pop
frstor
in
adc
rcl
int
and
outsl
mov
cld
stos
stos
outsl
lret
hlt
dec
insb
and
jecxz
fmul
xchg
mov
movsl
in
jmp
dec
pop
ret
mov
lahf
enter
sbb
push
sbb
aas
test
insb
push
jb
and
dec
cmp
lcall
shlb
push
cltd
push
sbb
fs
cs
mov
out
mov
and
mov
xchg
in
test
lret
jmp
xor
mov
inc
xor
jge
lret
cli
cmp
into
or
mov
ret
cld
inc
insb
pop
shrl
fstpl
jbe
in
bound
insl
pop
cmpsl
iret
adc
push
push
out
jmp
adc
aas
inc
mov
pop
lea
fdivs
sti
shll
ret
cwtl
mov
jl
push
add
fsubrs
adc
fisubl
pmulhw
std
mov
lret
cmp
push
pop
cmp
ror
jbe
iret
icebp
and
push
xchg
cld
add
xor
pusha
inc
jne
mov
out
ds
ja
das
push
cmp
pop
xchg
iret
and
je
int
sub
lret
test
pop
movsb
je
inc
jecxz
jle
out
jmp
push
xor
adc
pushf
test
mov
sbb
and
cwtl
shll
mov
pop
pop
xor
pop
jb
fidivs
imul
sarb
not
dec
test
outsl
loop
imull
adc
mov
push
into
cwtl
icebp
out
pop
sbb
cmp
jne
mov
xor
shlb
shl
lahf
int
push
leave
jno
push
out
lret
lcall
push
pop
pop
les
sub
test
rcrb
or
mov
jg
das
jle
inc
push
aam
xchg
cltd
and
imul
loop
stos
jo
xchg
out
scas
xchg
pushf
sub
sub
call
lock
repz
xchg
mov
ss
adc
sub
scas
adc
jnp
and
xchg
mov
mov
sbb
out
icebp
ret
dec
out
icebp
fs
loope
imul
and
dec
and
sbb
and
fmulp
gs
xor
test
sbb
leave
frstor
adc
mov
movsl
call
cmp
xor
dec
dec
sbb
test
das
fidivs
sub
std
mov
cmc
stc
or
pop
push
push
dec
push
jle
std
pop
arpl
push
jnp
sbb
sti
jae
push
mov
jae
dec
aam
fildll
and
mov
leave
mov
daa
xor
pop
das
sbb
out
mov
mov
aam
xchg
fiaddl
adc
mov
sahf
shll
nop
dec
adc
lret
mov
ljmp
ds
adcl
rcll
clc
or
sbb
add
fldl
int
ljmp
cmpsl
dec
jbe
popf
das
stc
movsl
inc
ljmp
icebp
mov
inc
xor
out
mov
loope
pusha
sarb
push
pop
test
mov
jnp
adc
rcrb
lds
test
push
mov
adc
push
pop
sub
dec
pushf
cmp
fdivrp
or
xchg
inc
push
xor
cmp
or
test
mov
push
fmull
xchg
push
pop
pop
sbb
movsl
mov
pop
sbb
imul
or
iret
and
cmp
or
cld
loop
aam
dec
push
jg
popf
popf
rcrb
les
push
mov
insl
xchg
xor
loop
addl
xor
and
pop
xchg
in
cmc
bound
js
fnstsw
sbb
cmc
hlt
mov
sbb
shll
ret
push
xchg
mov
sub
sub
inc
aas
mov
out
shlb
shlb
mov
mov
mov
sbb
decb
jo
add
cmpsb
insl
add
xor
add
lds
mov
js
test
mov
mov
rcrb
pop
mov
or
dec
push
mov
sahf
adc
adcl
bound
mov
in
movsb
xchg
shrl
xchg
movsb
out
ret
ja
dec
xor
adcb
mov
mov
aaa
cwtl
decb
test
cmp
sbb
pop
add
rep
push
xchg
addb
jbe
clc
fmuls
xchg
movsb
add
and
loopne
lds
nop
stos
xor
sub
mov
repz
or
rcrl
aas
and
das
xchg
mov
popa
out
test
dec
or
mov
filds
jmp
jge
repz
push
clc
int3
inc
lret
sub
or
or
in
les
pop
nop
clts
pushf
lock
stos
subb
std
subl
mov
sbb
popf
mov
push
outsl
mov
jo
jae
test
push
fists
rolb
sub
mov
insb
enter
outsl
mov
sbb
in
stc
sbb
int
ret
mov
mov
adc
push
xlat
add
pop
out
push
jl
mov
out
push
das
lds
dec
or
mov
addr16
addr16
popf
push
neg
out
les
jle
cmp
add
lea
or
loope
nop
jl
add
adc
test
daa
popa
mov
pushf
dec
inc
mov
push
inc
cmc
hlt
or
xlat
add
push
or
xchg
daa
lahf
or
or
aad
jnp
dec
xchg
mov
pop
mov
sar
sub
mov
and
pusha
cld
movsl
mov
and
mov
mov
scas
pushl
insl
test
imul
cmp
cmpsb
mov
aas
leave
stos
jg
stc
sub
mov
jle
jmp
push
pop
fstps
inc
test
mov
push
jno
add
jle
mov
push
dec
aam
jl
cmpsl
push
jge
jmp
sbb
add
inc
cld
add
push
push
outsb
xor
jae
mov
jb
inc
xor
lcallw
nop
dec
push
mov
pop
cmp
adc
and
popa
adcb
jne
push
pushf
lahf
fists
movb
ficoms
push
adc
sbb
dec
or
scas
incl
pop
dec
or
leave
bound
arpl
jo
lods
movsb
mov
cmpsb
pop
insb
or
mov
ljmp
sarb
hlt
inc
mov
and
push
outsb
fistpl
inc
dec
dec
mov
jnp
sbb
add
push
in
push
mov
in
subl
movsb
cmp
pop
loop
pop
outsb
cs
dec
inc
stos
jne
pop
in
adc
mov
iret
das
mov
mov
scas
fcoms
add
mov
push
in
jbe
mov
pop
popa
inc
jo
push
and
and
loopne
push
leave
mov
jmp
loop
add
es
loop
orb
add
add
xor
cmp
shlb
in
jne
mov
xorb
pop
sub
cmpsb
jae
fcompl
mov
in
adc
sub
inc
xor
jecxz
add
jmp
lret
xor
inc
dec
out
stos
ror
cmp
pop
sub
add
stos
ljmp
dec
hlt
inc
pop
mov
push
pop
add
insl
mov
mov
fcomip
repnz
mov
cmp
cmpsb
add
jae
sub
js
xor
mov
cld
jne
adc
push
shlb
shrl
aad
popa
or
sub
jbe
mov
scas
loopnew
cmpb
xchg
push
jne
dec
aaa
sbb
xor
in
cmp
aaa
lock
lret
test
fabs
ror
inc
xchg
mov
xchg
scas
push
int
sub
scas
adc
adcb
add
xor
ret
es
jno
enter
mov
xor
mov
hlt
andl
mov
pop
test
xchg
leave
int
sub
shrl
mov
je
clc
imul
in
cmp
or
add
mull
test
sub
or
fwait
mov
aaa
arpl
inc
add
xchg
lret
mov
cmp
adc
test
lea
addr16
jns
loope
sub
cmpsb
push
mov
mov
pop
out
repz
cmpsl
sbb
xlat
movsl
addr16
adc
insb
push
xchg
insb
out
sbb
out
jmp
mov
mov
xor
nop
repz
mov
movsl
cld
pop
arpl
mov
jl
inc
push
in
ret
adc
xchg
mov
addr16
sbb
pop
lods
loop
mov
push
mov
lret
push
in
inc
movsl
imul
loopne
mov
cmp
dec
and
aaa
stos
andb
and
pop
mov
xchg
stos
pop
jb
aad
in
xchg
add
xor
and
jmp
loope
outsb
sbb
lods
mov
pop
sbb
pshufw
mov
int
in
cmc
test
out
ret
lcall
push
inc
xchg
xor
pop
push
mov
ss
rclb
pop
testl
sarb
mov
iret
into
xchg
in
out
pop
les
into
push
jb
fistpll
xor
cmp
imull
xor
stos
sahf
mov
mov
adc
dec
jge
push
leave
cs
push
add
sahf
mov
jb
xchg
lods
into
dec
aam
hlt
shrb
inc
and
cltd
cmp
push
xchg
inc
shll
sbb
sbb
roll
dec
sbb
mov
jno
xchg
dec
cmp
add
sub
sbb
jno
std
xchg
jmp
mov
pop
in
call
into
cwtl
and
hlt
cs
adc
push
jecxz
test
out
orb
fwait
inc
fbstp
fwait
movsb
cli
adc
ret
outsb
dec
arpl
or
push
xchg
push
dec
xchg
sub
jo
add
pusha
divb
xor
pop
jge
flds
enter
mov
inc
pop
pop
sub
repnz
nop
in
cmpsb
sub
ret
jmp
mov
cmpsb
sbb
mov
dec
dec
sti
inc
pop
or
inc
mov
pop
inc
call
pop
and
rorb
in
mov
pop
push
hlt
xchg
jecxz
and
lds
loope
gs
fldenv
cmp
cmc
xchg
jp
pop
jp
push
push
rep
test
clc
leave
inc
mov
idivb
movsb
xor
dec
push
addr16
jo
adc
fs
mov
push
mov
lret
hlt
mov
jb
dec
lahf
in
push
xor
adc
sbb
loop
xchg
loopne
mov
mov
aad
dec
jge
and
mov
jne
jle
cwtl
cmp
sbb
jecxz
popf
jp
pop
xor
cmp
popa
push
inc
add
jg
repnz
xchg
fnstsw
fistpll
jbe
adc
pop
cmpsl
cmp
mov
popa
cmp
mov
cmpsl
cld
fdivrl
stos
dec
out
inc
cmpsb
mov
sahf
jo
push
xchg
pop
leave
push
cltd
das
cwtl
mov
call
ds
push
fistps
rep
loopne
or
inc
sub
mov
lahf
dec
add
nop
loop
popa
mov
mov
push
shrb
sbbl
xlat
and
mov
imull
jg
fistps
mov
movsl
jb
dec
jmp
out
leave
lods
jb
cmpsb
push
mov
mov
pop
xor
and
jecxz
push
test
in
cmp
inc
mov
mov
in
clc
jmp
inc
pop
xchg
sbbl
cltd
loope
mov
in
mov
jl
dec
sub
xor
jmp
cli
aas
insl
dec
ss
pusha
and
shlb
je
pop
inc
dec
jle
movsl
sbb
test
dec
test
or
xchg
pop
lock
bound
push
jno
ljmp
fcoms
ret
jl
loopne
mov
shlb
dec
jno
and
mov
pop
int3
loope
sbbb
or
mov
mov
out
out
push
mov
aad
scas
pop
adc
sub
sub
sahf
in
shl
add
push
mov
cmp
or
jns
mov
popf
imul
sub
call
test
mov
jmp
xchg
icebp
stc
lcall
mov
sub
jg
inc
dec
pop
mov
in
sub
out
dec
cs
jne
or
call
add
sub
xorb
xor
mov
test
js
es
ja
mov
mov
loop
int3
imul
push
jge
inc
or
test
lds
push
xor
add
cmpsl
cwtl
out
sbb
push
or
sti
shrl
inc
int3
sbb
push
jp
icebp
in
push
mov
aas
out
dec
push
pusha
add
ss
nop
and
ret
ret
enter
or
jecxz
test
mov
sbb
stos
rorl
push
scas
popa
stos
dec
mov
sub
push
enter
jle
nop
fwait
inc
cmp
out
outsl
adc
mov
adc
jmp
fstpt
in
repnz
jmp
lcall
add
dec
out
jns
sbb
cld
add
cli
mov
sub
adc
mov
push
iret
mov
stos
xor
xchg
mov
ret
int
push
leave
and
in
pop
iret
or
addr16
pop
push
movsb
lcall
mov
adc
fs
gs
mov
out
jb
xchg
test
stc
cld
pop
sbb
and
mov
push
pop
ds
lret
cmp
repnz
into
xchg
push
incl
insb
aam
push
aas
mov
dec
lret
xchg
cli
push
or
mov
insl
gs
and
xor
outsl
jl
and
sti
inc
xchg
or
lea
mov
shrl
mov
mov
movsb
jne
out
push
int
test
cmp
dec
lods
inc
cmp
mov
mov
mov
repnz
shll
pop
shufps
rep
insb
ret
mul
int
popa
push
stc
rcrb
or
xlat
mov
lock
int3
mov
push
dec
arpl
add
mov
pop
cwtl
cli
int
inc
mov
out
mov
je
or
test
pusha
jmp
xor
stos
jecxz
sti
out
mov
inc
xchg
insb
jo
dec
mov
shrl
push
shrl
loopne
inc
outsb
adc
test
mov
pop
jae
iret
insb
sti
and
add
adc
dec
into
ss
roll
dec
repz
sahf
shrl
push
frstor
lcall
je
mov
add
jp
pushl
or
movsb
xchg
cmp
pop
pop
or
insl
push
pop
pop
int
pop
dec
adc
bound
fwait
repz
dec
pop
pop
dec
out
out
jle
push
dec
je
sbb
sbb
call
pusha
insl
dec
sub
add
outsl
xor
fcomp
sub
dec
xor
bound
or
mov
mov
xor
or
xorb
lcall
daa
xor
ret
ds
jo
es
or
and
test
ljmp
pushw
jmp
lahf
loopne
pop
mov
mov
or
int
xor
xchg
dec
push
fildl
bswap
les
and
sbb
mov
add
rolb
insb
xchg
stos
jmp
sub
lea
pop
mov
xor
ljmp
inc
loop
pop
out
xchg
xor
out
push
rcrl
sub
call
clc
insl
xchg
movsb
leave
pop
jg
pop
pop
testb
push
loop
xchg
mov
xchg
repnz
xchg
leave
push
push
into
call
dec
push
lods
inc
lret
shll
add
mov
push
jnp
sub
xchg
cmc
scas
push
mov
mov
nop
push
leave
cmc
fnstenv
dec
xor
jmp
out
mov
mov
aam
ret
sti
test
sar
inc
add
and
loop
rorb
mov
decl
inc
dec
mov
inc
clc
cmpsb
inc
pop
imul
repz
pop
mov
jle
pop
and
jecxz
push
cmp
aas
jg
rcrl
pushf
rclb
outsb
data16
cmpsl
inc
pop
pop
push
push
icebp
insb
and
scas
push
aam
popf
sub
jae
andb
fcomi
pop
leave
mov
imul
pushf
mov
sti
mov
cwtl
int
and
dec
lret
cmc
push
out
je
jle
mov
xchg
cmp
jb
dec
pop
shrl
and
push
data16
loop
cltd
mov
xor
inc
mov
pushf
adc
push
or
xchg
jl
mov
or
scas
mov
lods
cmp
and
jae
xlat
cld
jnp
out
push
mov
fwait
nop
call
sbb
orl
stos
ljmp
sub
mov
mov
adc
lahf
out
or
dec
or
or
cmp
xlat
gs
mov
mov
sbb
inc
call
roll
push
lock
sar
repz
sub
test
mov
jle
sti
pop
test
mov
ret
lds
lahf
int
push
ss
xchg
or
sbb
add
lret
and
cld
jp
xor
push
jge
jae
push
repnz
imul
mov
fucom
mov
xor
push
xchg
and
mov
cwtl
pop
and
fdivl
mov
mov
idivl
sahf
fisubl
js
add
in
xor
lods
enter
stos
pop
leave
add
in
adc
pushf
iret
dec
loop
insb
pop
mov
shlb
pop
inc
insl
pop
or
mov
or
int3
push
sti
jbe
jmp
push
pop
jmp
mov
sbb
fidivs
popf
mov
jnp
mov
rclb
addb
jecxz
popa
pushf
lahf
sahf
add
adcb
pop
pop
push
sub
sbb
leave
jecxz
xchg
mov
fwait
fwait
mull
rcll
lock
out
jns
shll
lods
test
xor
mov
adc
scas
push
pop
cld
sub
sub
dec
idivl
test
xor
frstor
pop
scas
mov
mov
xchg
or
rorb
lretw
std
pop
negl
sbb
sbb
and
or
inc
nop
push
pop
or
inc
add
js
bound
sub
push
mov
shll
out
inc
lret
in
jecxz
movsb
pop
sbb
inc
test
xchg
dec
dec
xor
pop
sub
dec
pop
clc
sti
clc
mov
lret
fstl
mov
mov
sub
mov
mov
lds
and
inc
inc
andb
inc
in
ds
and
xor
sbb
mov
cli
push
test
mov
and
push
test
lods
aas
mov
mov
test
mov
jl
pop
lds
mov
dec
inc
and
pop
int
icebp
ja
repz
push
rolb
arpl
hlt
out
mov
repz
add
push
repnz
in
push
aas
lods
pushf
xchg
movsl
or
push
inc
mov
mov
dec
cli
aam
pop
repz
jb
out
cmpsl
mov
cmc
push
sti
pushf
jge,pt
jo
xorl
xor
inc
sbb
xchg
mov
sbb
sub
ds
cltd
xchg
loop
and
pop
and
ret
shr
das
in
fidivrs
mov
sub
mov
call
jl
ds
pop
call
fs
pop
loopne
mov
sub
mov
popl
out
hlt
loope
test
xor
xchg
scas
inc
out
dec
inc
ret
xor
mov
es
sub
jnp
push
xchg
mov
aad
push
stc
or
out
xchg
in
outsb
jmp
aaa
and
outsl
jb
pop
scas
mov
scas
xchg
outsl
xor
insb
daa
mov
xor
xchg
pop
punpcklbw
pop
clc
add
fildl
xchg
cltd
mov
sub
inc
inc
dec
mov
cli
in
btc
insb
idivl
or
imul
jge
add
cld
and
xor
push
ss
popl
sub
jo
xchg
pop
insb
xor
mov
test
decl
cmp
sbb
cld
push
mov
sahf
ficoml
cli
adc
shll
lea
fs
jno
pop
xlat
mov
fsubrl
mov
or
mov
sbb
add
cld
loopne
lahf
gs
push
aas
mov
or
insb
cs
mov
sub
lock
shlb
fcomps
mov
inc
lea
cmpsb
sbb
xchg
sbb
jl
xchg
insb
test
jae
scas
and
test
repnz
out
xor
int3
mov
lock
flds
lcall
aaa
jmp
jb
and
jbe
pop
push
bound
pop
jns
outsb
fnstsw
pop
in
push
jmp
or
lcall
mov
adc
js
mov
pop
popf
aam
pop
mov
push
lds
push
data16
out
fwait
push
in
push
cld
stos
dec
les
addr16
and
sti
or
stos
aas
sti
jnp
xlat
int3
jne
cmpsb
add
adc
mov
movsl
pop
inc
and
push
and
adc
mov
dec
shl
cmpsl
mov
mov
inc
jnp
jne
inc
add
mov
sbb
xchg
push
repnz
xor
cmp
mov
push
cmp
ret
cmp
int3
aaa
push
testl
xor
sbb
mov
inc
xchg
inc
leave
inc
test
push
pop
xor
loop
add
sbb
xchg
adc
shll
inc
xchg
jge
repnz
fcoml
xor
cmc
mov
aam
cmp
mov
stos
data16
bound
out
aam
pop
jb
jmp
adc
or
dec
cmp
sub
mov
mov
ret
mov
scas
and
rcrb
fmull
lea
pop
xchg
inc
rcrb
add
adc
loopne
aad
adc
popf
sub
or
mov
fyl2xp1
and
dec
jmp
jnp
sti
mov
xchg
jecxz
jmp
inc
and
loopne
aas
inc
add
or
adc
mov
or
loopne
fucomp
inc
dec
cmp
mov
jmp
inc
into
and
pop
adc
dec
xchg
clc
sbb
add
inc
icebp
cltd
mov
in
push
jecxz
movsl
push
popa
mov
mov
push
insb
sbb
js
and
mul
dec
mov
das
insl
lods
mov
in
jo
jecxz
adc
xor
roll
adc
insb
or
movsb
rorb
mov
or
xor
jbe
and
ror
jmp
int3
mov
mov
fistpl
mov
test
mov
das
ret
nop
push
adc
adc
sub
int
inc
sahf
dec
movsb
idivb
inc
das
and
aas
mov
call
test
lods
xor
clc
enter
outsl
dec
popf
pop
xor
aas
jne
inc
push
stos
pop
cwtl
test
scas
inc
inc
mov
sti
sbb
push
dec
into
mov
and
imull
sub
pop
sahf
aaa
jle
xor
js
aad
push
jbe
pusha
pop
in
pushw
ljmp
loopne
fnsetpm(287
cmp
xorl
inc
pusha
or
ds
cmp
jb
cmp
inc
mov
pop
lods
xor
xor
neg
jmp
and
add
repnz
mov
dec
cmpsb
mov
cs
jno
sbb
icebp
in
mov
xchg
sbb
xlat
jo
jge
loope
arpl
cld
ret
or
jo
ret
cmp
scas
andb
mov
inc
mov
int3
arpl
addr16
dec
sbb
mov
insb
rol
aas
iret
push
dec
sbb
ficompl
cmpsb
int
jmp
xchg
pop
in
loope
push
ja
push
jmp
adc
pop
or
ja
arpl
and
mov
pop
cmp
mov
dec
lods
xchg
push
ret
pop
push
daa
bound
sub
jbe
add
je
inc
jae
shl
lds
pop
pop
or
test
and
pop
loope
mov
add
pop
mov
sahf
std
sub
xor
push
ror
and
aad
das
into
xchg
loope
loope
jp
mov
and
and
scas
add
mov
test
add
popf
xor
mov
push
sub
stos
int
stos
jle
inc
cmpsl
mov
inc
cmp
test
cmp
cld
roll
xor
jae
mov
stc
repnz
xchg
sub
mov
test
sbb
scas
or
sub
call
mov
xchg
shlb
inc
aas
xor
fwait
xchg
push
ss
nop
ja
outsl
arpl
lcall
jcxz
add
insl
mov
add
fimuls
nop
dec
insl
pop
sub
bound
nop
shll
aam
fs
cmp
insl
call
cmpsb
mov
inc
jmp
push
and
in
arpl
in
arpl
xchg
jne
push
out
xchg
xor
or
xchg
jmp
jno
or
inc
insb
cmp
xchg
fwait
pusha
scas
aaa
daa
loope
ror
into
sub
inc
inc
and
jbe
fadds
mov
rcll
adc
in
lods
xorb
aad
sbb
xchg
lcall
sub
icebp
in
daa
fisubrs
dec
xor
int
cwtl
filds
out
mov
xchg
pop
imul
mov
repnz
mov
pop
mov
pop
movsb
xchg
jns
adc
test
cli
movsl
aas
test
lods
or
add
jge
sar
loop
out
std
push
je
fdivl
outsb
aad
cmp
pop
dec
pop
imul
jae
mov
push
repnz
stos
lods
hlt
aaa
incl
imul
int
scas
mov
add
jecxz
es
push
sahf
pop
inc
or
leave
scas
jnp
call
stos
jp
cli
push
decl
dec
xor
cmp
add
movsl
rclb
ret
or
push
rorb
add
sub
push
fwait
mov
aas
mov
loopne
dec
or
daa
push
jne
incb
dec
out
jns
das
jmp
mov
add
mov
push
js
ffree
sub
stos
sbb
xor
insl
cmp
pop
jo
mov
outsl
lret
cmc
inc
mov
das
mov
mov
leave
dec
das
in
jp
mov
dec
bnd
pop
aaa
or
jl
lret
sub
xchg
cmp
jbe
xchg
xor
push
sub
addl
adcb
jbe
mov
clc
ret
jp
adc
xchg
inc
fsts
pop
repz
adc
fwait
ljmp
jecxz
xor
orl
add
or
dec
or
inc
jle
imul
dec
in
stos
jne
jne
pop
or
add
fwait
scas
mov
push
push
outsl
pop
lret
ss
js
xchg
xchg
and
mov
jecxz
pop
inc
stos
cmpsl
fstpt
ret
push
call
jne
daa
out
jnp
aas
mov
insb
sbb
inc
fistps
jge
jb
cld
mov
push
lods
sub
arpl
fcmove
adc
pop
inc
mov
jae
in
rolb
jle
mov
xor
jne
sbb
sbb
imul
or
adc
mov
clc
push
push
lds
inc
lods
roll
loope
sbb
test
adc
jno
xchg
push
jle
dec
iret
inc
adc
inc
push
lds
adc
inc
cmpsb
push
and
push
cwtl
mov
add
xchg
dec
in
lret
sub
insl
fcoms
jo
mov
mov
filds
int
push
ret
and
mov
lret
cmc
lods
push
int
mov
push
scas
xchg
cmp
adc
xchg
aaa
cltd
and
pushf
aad
repnz
enter
mov
xchg
and
lods
dec
mov
xchg
add
mov
insl
and
sbb
testb
mov
movsl
sti
jmp
gs
sub
xchg
div
cmpsb
push
pop
data16
orl
lret
lds
pusha
mov
stos
popf
sbb
sub
clc
sbb
and
jl
pushf
add
adc
sub
push
cwtl
scas
add
or
dec
cmc
cltd
inc
jg
pop
mov
mov
adc
popf
into
jle
movsl
and
push
loop
cwtl
push
outsl
cli
sbb
jno
and
cltd
inc
in
pop
sbb
sti
clc
fldl
jnp
jg
insb
mov
scas
bound
fistpl
cmp
and
aam
cmpb
inc
jne
gs
sub
out
insb
mov
sbb
mov
data16
mov
addr16
in
out
push
push
ror
pop
pop
rclb
test
ret
sub
push
je
enter
shll
fwait
pop
dec
push
inc
mov
cmp
dec
push
pop
stc
pop
retw
in
jecxz
out
lret
cwtl
and
push
cmp
push
xor
pop
data16
aad
outsl
mov
aam
call
stos
imulb
mov
mov
push
mov
pop
add
dec
lods
pop
rep
je
or
aad
call
sti
loop
cwtl
pusha
rcrb
mov
std
inc
add
xlat
cmc
aaa
add
popa
dec
lea
lahf
loope
and
out
add
xchg
sbb
lahf
xor
rcr
cmpsb
cmp
inc
mov
pop
aad
mov
cmpsb
aas
fwait
sar
int3
mov
mov
adc
xchg
add
push
in
shl
mov
push
stos
inc
cmp
aaa
mov
mov
mov
hlt
out
lret
xor
ljmp
mov
mov
push
insl
cmp
mov
sbb
inc
cmp
daa
sbb
mov
out
inc
rcll
into
leave
data16
pop
fisubl
rorb
js
xor
adc
xchg
mov
popa
adc
imulb
push
or
pop
shll
lods
pop
cmp
inc
sbb
push
aaa
cltd
in
xchg
mov
adc
push
push
push
aam
xor
push
ljmp
sbb
adc
and
out
es
jge
pop
inc
cmp
pop
xchg
push
loope
and
or
out
dec
add
mov
xchg
push
cmp
in
fisubs
ret
out
enter
dec
out
dec
add
mov
sub
adc
cmp
test
shr
sbb
mov
mov
push
dec
fwait
push
xor
js
dec
movsl
or
sbbl
add
mov
lret
aam
aaa
push
into
jo
icebp
cmc
pop
pop
popf
cwtl
decb
adc
scas
int3
adc
cmpsb
xor
arpl
pusha
lahf
add
fistpl
mov
dec
gs
into
psubsb
dec
mov
cmc
fmuls
neg
jbe
test
mov
cli
xor
xchg
mov
ss
repnz
jg
adc
psubd
cmp
adc
inc
ds
loopne
test
lret
xchg
addl
in
jl
cmpsl
aas
imul
or
sub
insl
add
or
xchg
daa
dec
stc
das
addl
sub
js
xchg
mov
fbld
pop
xor
push
jb
xchg
rcrl
mov
add
shrb
push
roll
cld
es
sbb
adc
in
push
movsl
push
repnz
aad
and
ret
mov
and
iret
aas
inc
popa
fs
insl
jbe
clc
sbb
pmulhw
popf
and
test
xorl
cltd
xor
ret
xchg
ja
out
mov
scas
mov
add
dec
pop
rcll
pop
jge
inc
aas
sbbb
pop
cmp
and
mov
or
jl
or
xchg
dec
xchg
mov
jle
arpl
test
lcall
cmpsb
jge
mov
inc
push
outsb
and
stc
jo
jl
das
jo
mov
out
mov
cmpsb
push
inc
iret
adc
or
aas
jb
scas
xchg
aad
sub
out
push
imul
inc
filds
fcompl
ret
ja
imul
mov
cmpsl
inc
xor
adc
popf
cmp
adc
repnz
fs
sbb
fstl
sbb
iret
and
cmpsb
xor
in
mov
push
fs
addb
lods
pop
xor
lcall
xchg
mov
pop
out
sub
mov
dec
and
inc
cmp
mov
mov
mov
andb
shlb
xchg
shll
inc
push
jg
push
lods
cmc
xchg
rolb
mov
cmpsb
inc
dec
sub
xor
jno
mov
sbb
and
xchg
aas
les
outsl
mov
mov
xchg
out
mov
mov
daa
sub
mov
dec
xor
scas
roll
add
mov
mov
pcmpeqd
outsb
push
sahf
mov
jnp
cmp
in
sbb
jmp
addl
mov
dec
inc
xchg
outsb
xchg
pop
jbe
decb
push
sub
test
nop
adc
xor
ljmp
adc
cmp
shll
xlat
push
jmp
xlat
in
jnp
ret
mov
aad
test
cltd
add
cltd
fmul
out
and
cmc
hlt
mov
enter
sahf
pop
mov
lret
adc
popf
xchg
les
adc
mull
lods
mov
mov
shlb
mov
push
jo
cmpsb
iret
jnp
add
adc
out
out
pop
xchg
xchg
jb
addr16
mov
xor
push
inc
jmp
push
imul
jb
sub
xchg
cmc
sub
adc
xchg
cmpsl
xchg
push
and
bswap
and
and
mov
daa
mov
daa
adc
jp
mov
mov
scas
ret
xchg
xlat
cltd
jb
cli
jns
xor
sub
fcoml
aaa
sbbb
pushf
imul
push
inc
les
inc
xor
or
mov
jbe
mov
icebp
leave
sti
inc
lahf
sbb
out
jecxz
loop
xchg
daa
popf
jle
popf
pop
push
add
lock
mov
lret
mov
jbe
fcmovbe
sbbl
adc
lret
adcl
mov
imul
scas
jmp
lcall
sarb
push
imul
sbb
and
inc
mov
jns
pop
std
add
test
sub
pop
jl
movsb
repz
ret
pop
iret
sub
mov
inc
jle
mov
out
adc
test
mov
inc
lahf
push
jl
mov
and
push
lret
adc
push
insl
in
repnz
ljmp
enter
popf
pop
xor
pop
jns
jl
cmp
cmpsl
aas
sub
outsw
stos
mov
lea
pusha
xchg
adc
fistps
mov
and
dec
shrl
mov
cmp
push
mov
inc
outsl
mov
cltd
loope
js
mov
push
mov
and
dec
push
pop
imul
les
push
gs
pusha
addl
adc
lret
ffree
aas
dec
xchg
dec
add
mov
out
mov
inc
imul
xchg
enter
popf
out
movb
daa
fimuls
adc
adc
push
cmp
popa
js
ds
lea
loope
popf
pop
lcall
xchg
loope
inc
call
shlb
stos
cld
inc
mov
imul
add
or
pop
xor
in
sbb
xchg
pop
test
in
inc
xor
pop
aas
cmp
movsb
aas
es
add
jle
fdivrs
cmp
stos
stc
sbb
jmp
adc
cltd
xchg
enter
xor
insb
ja
arpl
aas
pop
and
aas
xchg
add
sub
or
adc
or
cltd
dec
loopne
std
mov
insl
icebp
xor
inc
cmp
decl
in
jns
addr16
push
sbb
shrb
iret
pop
in
sub
jp
mov
mov
daa
xlat
mov
sbb
in
pusha
push
cmp
cld
fisubl
sbb
aad
outsl
rol
into
jmp
inc
xlat
pop
stos
lea
insb
push
pusha
xor
push
xor
icebp
int
lret
scas
or
cmpsl
push
mov
movsbl
jmp
sbb
ja
and
cmpl
and
mov
inc
sarb
dec
mov
test
aas
inc
lcall
cmc
fbld
test
mov
and
add
mov
or
pop
push
xchg
in
xor
dec
push
jo
cmp
imul
push
adc
push
xchg
or
lahf
xor
js
cltd
int3
xchg
xchg
jae
adc
pop
or
loopne
ja
ss
jecxz
rcl
push
in
scas
cld
push
fdivrp
xchg
lea
dec
cmc
mov
divl
push
enter
gs
es
push
popf
aas
xchg
stc
push
jle
dec
sub
xor
shl
incb
cs
hlt
sbb
leave
xor
imul
jp
dec
rdmsr
lret
mov
pop
mov
pop
test
adcb
loopne
dec
pusha
outsl
lret
xor
sbb
call
pop
mov
movsb
lret
lcall
jns
jnp
bound
sub
sahf
jne
mov
dec
inc
popa
fstp
and
and
ja
and
or
subl
xor
mov
vpmaxsw
lods
jmp
or
jae
and
and
inc
push
mov
or
xor
dec
cmp
daa
sahf
out
inc
stc
sbb
sbb
adc
sahf
jbe,pt
fbld
lcall
cmp
jb
into
sbb
adcb
je
or
je
sbb
push
mov
or
adcl
arpl
aas
inc
adc
leave
adc
cmp
mov
icebp
cltd
adc
clc
dec
rolb
ds
movhlps
mov
jl
dec
sub
scas
mov
rorl
loop
lahf
test
lret
jecxz
mov
outsl
rcl
jg
sub
push
icebp
jo
sub
xor
jnp
imul
sub
mov
ja
inc
or
fdivr
jp
stc
lcall
jmp
pushf
cmc
sbb
repz
cmpsb
aad
test
cmpsb
scas
aaa
mov
fadd
or
stos
js
pop
adc
int
cmpsl
rcll
pop
inc
mov
push
add
pop
hlt
and
imul
aaa
pop
in
jbe
out
dec
pusha
aam
add
roll
hlt
shlb
inc
push
inc
mov
dec
mov
mov
jp
dec
in
pop
inc
imul
adc
jns
mov
loop
aas
mov
ret
into
jle
xor
mov
push
sbb
ljmp
cmp
ficoms
subl
add
ret
xchg
jl
sbb
shll
or
js
adc
xchg
aas
outsb
push
or
mov
imul
push
cmpsb
cld
jmp
xor
and
out
mov
jmp
xor
sbb
dec
loope
cwtl
fdivp
dec
or
add
fcomip
ja
inc
add
imul
dec
imulb
in
js
addr16
sub
mov
int3
mov
ja
and
popf
aas
mov
out
and
inc
subl
sub
cmp
cmpsb
ret
mov
cmp
and
or
xor
stc
cld
mov
mov
jae
dec
push
cmc
pop
jno
sar
push
xor
ret
dec
pop
xchg
and
and
xchg
xor
mov
rol
mov
out
je
mov
stos
and
xchg
icebp
mov
addr16
mov
lods
mov
out
and
popf
out
or
cld
subb
xor
xchg
pop
sbb
push
mov
imulb
add
add
arpl
std
movsb
in
ljmp
or
mov
lock
jb
lret
ljmp
xchg
test
inc
jp
push
xchg
mov
imul
dec
cmp
jbe
inc
jmp
mov
jno
or
adc
adcb
lock
fnstenv
xor
clc
mov
push
mov
xchg
cmp
jecxz
fldcw
lods
xchg
fdivrl
push
popa
xor
iret
stc
jbe
dec
sbb
shlb
cmp
dec
lret
pop
sub
bound
xchg
pop
sti
test
fst
mov
xchg
stc
mov
imul
adc
push
inc
das
mov
xchg
repz
mov
inc
std
jp
and
xchg
mov
mov
push
adc
sbb
popf
ja
inc
scas
test
orb
jg
jp
fs
xor
and
mov
and
mov
pop
es
add
mov
dec
in
mov
push
neg
test
and
add
stos
jl
cmp
bound
sti
cmp
jl
jns
imul
filds
sub
ret
mov
xchg
rol
adc
pop
mov
jo
add
dec
xor
mov
lds
daa
pop
bound
stos
es
negb
jge
outsb
outsl
outsl
pop
scas
push
pop
add
jmp
fdivrs
sbb
andl
push
loope
int
arpl
decl
cmc
adc
mov
inc
xor
flds
movsl
push
xchg
xchg
or
push
fistpl
loop
jns
and
clc
lret
das
pop
sbb
loop
shrb
fcmovbe
popl
push
push
push
arpl
addr16
add
stc
inc
enter
negl
pop
mov
add
dec
add
inc
iret
dec
inc
jmp
sahf
dec
adc
leave
aad
aas
xlat
sub
jno
cmp
test
lods
loop
mov
pop
sbb
shlb
jmp
sbb
adcb
pop
push
xchg
mov
ja
aaa
xchg
xor
and
dec
imul
xchg
xor
pop
out
in
jns
xlat
lods
mov
sti
sbb
andl
pop
das
hlt
sbb
psubsw
sbb
stos
jnp
fldenv
inc
cmp
sbb
pop
push
int3
fldl
jmp
pop
inc
push
out
fisttps
mov
push
adc
mov
popa
sub
out
jp
call
cmp
stos
inc
mov
je
cmp
xor
insb
xor
lahf
push
add
movsl
lret
fldenv
dec
fnstsw
negb
cmp
in
add
pop
push
mulb
or
inc
push
xchg
mov
jbe
pop
push
push
sbb
inc
add
sub
or
dec
and
dec
scas
jge
sahf
push
sub
mov
aas
fwait
cli
ds
cmp
in
aam
lret
sarl
push
cmpsb
sbb
stos
bound
and
jae
jo
push
popf
decl
pop
sub
fidivs
in
mov
or
std
outsb
or
and
cmp
cs
push
add
lds
mov
add
lods
inc
inc
fists
or
xor
outsl
xor
xor
jnp
out
cmpb
ret
mov
movsl
sub
movsb
push
mov
in
push
inc
mov
fwait
aas
jmp
sbb
adc
enter
mov
fisubrs
adc
popa
out
xchg
stos
dec
dec
inc
sbb
cmp
imul
cmpsb
cmp
jae
clc
cmp
sbb
jp
shrl
ja
cmp
sub
aam
ss
add
movsl
mov
mov
push
jmp
inc
pop
and
mov
adc
gs
sbb
std
adc
loopne
test
mov
bound
insb
xchg
fstps
xor
jp
mov
out
test
jecxz
out
dec
test
pop
push
pushf
push
fs
out
push
mov
cltd
sub
inc
sar
xor
sub
daa
jge
adc
mov
mov
movsl
shl
ret
add
mov
pop
icebp
lock
cmpsl
mov
xchg
xchg
bound
mov
add
xor
or
push
add
add
or
icebp
not
sub
jg
rcr
xchg
mov
test
mov
or
push
sbb
mov
adc
pop
rcrb
sbb
lret
scas
push
dec
fwait
lahf
dec
insb
arpl
ror
les
js
scas
sar
leave
fstp
out
sbb
cli
mov
ds
lods
pushaw
jns
fdivp
ds
iret
gs
pop
rorl
push
add
xor
xchg
mov
in
arpl
push
jbe
mov
jbe
xor
cli
xor
mov
repz
test
pusha
popf
ftst
jl
pop
adc
addr16
mov
mov
mov
cli
add
notb
dec
sub
in
dec
test
mov
push
jb
cli
out
adc
sbb
dec
xor
test
cli
cmp
xor
inc
xchg
push
sub
movsb
popa
aam
imul
pusha
mov
add
and
or
mov
stos
repz
push
loop
inc
mov
adc
cmp
imul
xlat
je
xchg
and
imul
cmpl
test
inc
scas
sbb
stc
fisubl
loope
cmp
int3
cmc
add
add
stc
cmp
or
and
call
dec
out
pop
pop
mov
adc
iret
cmpsl
adc
cmp
push
sbb
mov
add
repnz
pop
lock
lea
add
adc
pop
js
mov
daa
repz
inc
inc
addb
in
leave
or
lock
lcall
movsl
lret
stos
les
test
pop
push
xlat
lcall
xchg
add
push
aas
in
ret
or
dec
push
inc
xchg
mov
lret
adc
dec
repz
mov
mov
mov
stos
fisubrs
mov
stc
cltd
insl
es
inc
sti
cmpsb
into
xchg
jge
stc
lods
les
mulb
dec
mov
mov
popa
dec
push
test
in
addr16
xor
in
xchg
xchg
lds
xlat
test
iret
pop
roll
cmp
stos
cld
add
xor
mov
lock
mov
cli
sub
xor
call
repz
jns
sub
pop
or
mov
xor
pop
ja
das
loopne
adc
mov
or
mov
sti
repnz
mov
es
mov
cmp
and
push
ret
js
repz
outsl
dec
lds
sbb
push
jge
push
lret
inc
sub
xor
stc
add
adc
xchg
mul
shl
or
ret
in
lret
cmp
mov
addr16
jmp
jmp
xor
inc
jb
jbe
pop
enter
adc
pop
mov
fisubl
jo
cwtl
rol
inc
cmp
jle
sub
jg
sub
adc
jmp
movsb
pop
inc
mov
outsl
push
data16
outsl
add
clc
shll
sti
sahf
pop
fxch
jb
jge
lret
pop
sbb
ret
or
lock
jg
mov
and
add
gs
or
xor
aas
jecxz
lahf
mov
dec
jle
xor
cmpsb
stos
or
filds
mov
test
xchg
push
lret
or
mov
jmp
ljmp
sub
orb
xchg
test
dec
xchg
rcll
jb
adc
in
jecxz
cmp
enter
rorl
push
mov
xchg
and
ret
stc
adc
dec
cwtl
in
sbb
jo
dec
inc
adc
push
sub
cltd
movsl
xchg
xor
push
sbb
inc
cmovg
xlat
lods
rclb
sub
jle
jbe
fsubr
cmpsl
lea
cli
out
dec
mov
sar
lods
js
aad
add
mov
pop
stos
dec
inc
js
push
mov
daa
lretw
repnz
fwait
xor
pop
mov
lods
pop
lds
adc
mov
call
es
nop
pop
and
jle
jmp
ret
and
imul
lds
pop
push
xchg
stos
adc
adc
inc
mov
hlt
adc
add
imul
xchg
dec
pop
add
xchg
mov
nop
push
jg
jmp
sti
fmuls
pop
nop
cmp
in
or
sbb
les
pop
std
dec
ja
loop
jne
xchg
test
pop
adc
sub
sbb
inc
frstor
pop
jbe
in
jno
stc
popf
pop
add
aad
or
xchg
into
push
push
xor
int
aad
mov
push
in
xchg
mov
stc
pushf
fst
xchg
jbe
mov
sub
lret
mov
das
cmc
jns
mov
sbb
dec
xchg
stos
jno
mov
jne
lret
int3
and
pop
sti
jl
scas
xchg
aad
jbe
adc
mov
mov
cltd
in
xchg
jmp
je
movsl
mov
imul
hlt
xor
repz
imul
add
sbb
repnz
mov
cli
les
in
pop
push
push
fcmovb
inc
push
pop
cmpsl
add
add
mov
imulb
pop
xchg
je
mov
out
cmp
push
sti
xchg
sbb
rolb
lahf
test
mov
mov
adc
mov
push
xchg
and
sbb
jbe
push
and
push
ffreep
add
mov
dec
pop
inc
addr16
fists
sbb
inc
mov
mov
fldt
push
leave
sub
scas
or
cmp
lods
mov
inc
jecxz
push
test
incb
sbb
int
addl
xlat
push
push
jecxz
out
jl
fidivrl
aad
dec
pop
data16
pop
cmp
lret
hlt
insl
inc
mov
sbbl
pop
pusha
fcompl
sbb
mov
cmp
add
divl
fistpll
xor
movsb
pop
xchg
fistpll
lcall
inc
lock
daa
shrl
mov
adc
push
out
mov
lods
out
shlb
lahf
in
mov
popa
xor
push
jg
icebp
dec
rcll
mov
dec
pop
and
or
lock
inc
fidivs
push
xlat
mov
mov
fucomp
mov
in
push
movb
or
sahf
cmp
or
sbb
jo
cmpsb
sbb
pop
mov
inc
test
adc
out
lods
xor
push
aas
adc
imul
dec
adc
mov
pop
lret
mov
lds
dec
xlat
mov
cmp
xchg
xor
add
inc
add
xor
cmpsb
enter
push
xor
xchg
pop
xchg
mov
imul
push
outsl
lret
mov
add
dec
pusha
js
imul
pop
lods
mov
add
jmp
das
not
xor
ljmp
sub
stc
nop
xor
mov
dec
pop
int
mov
mov
mov
push
out
je
mov
or
lahf
and
dec
dec
movb
jne
cmc
insb
sub
mov
xchg
or
xor
fmulp
xchg
mov
xchg
jae
out
jno
sti
sub
mov
and
dec
test
mov
mov
mov
and
push
mov
adc
jbe
mov
push
sbb
lods
mov
mov
nop
dec
inc
push
cmp
aam
jp
and
out
shrl
jmp
call
dec
mov
arpl
or
inc
dec
daa
dec
lea
pop
rolb
aad
sub
sarl
out
jno
test
pushl
cmp
pop
stos
mov
inc
les
pop
adc
mov
jl
jecxz
mov
cmpsb
jecxz
jl
scas
je
xorb
sbb
sti
aas
jmp
loope
jo
xchg
mulb
sub
nop
adc
mov
cmp
add
test
leave
pusha
jne
push
and
out
jl
mov
imul
pop
cmp
add
je
hlt
cli
clc
sbb
cwtl
shll
push
ret
jae
jge
in
adc
cli
or
cmpsl
or
add
in
pop
jmp
add
lcall
cmp
dec
test
lds
lods
cmc
in
inc
mov
xchg
and
out
xchg
mov
sub
js
sarb
ds
movsb
push
mov
lods
js
popa
xor
ror
mov
push
sti
mov
imul
sti
pop
jnp
arpl
sub
push
sbb
push
and
lods
test
mov
push
cmpsl
add
mov
pop
xor
repnz
xchg
xor
rcrb
fcompl
jp
dec
mov
mov
mov
pop
js
jne
loopne
out
mov
inc
popa
test
xlat
gs
xchg
and
pop
imul
sub
frstpm(287
addr16
lahf
sbb
fcom
xchg
stos
outsb
push
pop
clc
pop
jmp
repnz
inc
adc
jns
jnp
lret
shr
mov
pop
jne
jmp
inc
or
sbb
lret
lret
in
out
aam
jge
and
xor
testl
int3
rcrl
cmp
jb
push
aaa
jl
aas
mov
jno
xor
jb
xlat
xor
cmpsl
mov
and
add
pushf
mov
out
repz
out
and
ret
in
outsl
mov
icebp
mov
push
ja
int
pushf
jb
mov
sbb
leave
shlb
scas
dec
fdivr
cmp
pop
fsubl
push
pusha
movsb
hlt
fcomip
add
ljmp
cmp
imul
add
xor
fptan
pop
fsub
xchg
outsb
xor
notl
pushw
add
mov
jne
mov
rol
int3
jg
shl
fidivs
mov
imul
js
das
imul
lods
ja
jle
sbb
int
pop
push
sbb
jae
lods
lods
cmp
push
push
jmp
scas
movsb
add
jae
jb
movsb
sub
push
sbb
repz
push
repz
adc
call
mov
lds
ja
sbb
inc
insb
push
fcmovne
pop
mov
pop
ss
mov
lret
outsl
or
cmp
out
jecxz
adc
jns
xchg
ss
lahf
jle
xor
mov
adc
cmp
jmp
test
lahf
loope
and
jl
jbe
dec
dec
push
add
addr16
cwtl
jne
mov
add
xchg
fmul
push
mov
adc
sub
leave
pusha
out
mov
push
test
insl
leave
faddp
sub
push
dec
fistl
jne
push
and
rcrl
mov
test
aad
adc
lds
sub
mov
sub
xchg
add
pop
inc
call
xor
pop
cltd
mov
xchg
mov
cli
jl
cs
lea
out
rorb
out
cli
adc
nop
cmp
stc
jp
icebp
std
push
mov
jle
int
mov
loope
mov
clc
add
push
push
and
jns
enter
fldt
and
movsl
shll
pop
mov
adc
push
sahf
or
cmp
test
cmp
in
sub
lea
fidivrl
and
jae
stc
cmp
mov
subb
mov
mov
nop
scas
aad
push
ss
popa
lahf
xchg
xor
pop
push
pop
imul
xchg
in
out
nop
lret
xor
pop
ret
cmc
xchg
push
push
inc
jge
or
std
sub
dec
or
pop
push
push
lock
adc
mov
mov
aam
jge
xchg
out
ret
cli
scas
jae
inc
mov
and
jp
aas
subb
or
lea
xchg
fstpt
mov
int
sbbl
inc
aas
xchg
mov
out
xchg
xchg
pop
popa
or
bound
daa
xchg
adc
add
imul
jne
fs
lret
rcrb
pop
cmp
sub
mov
in
test
sahf
sub
xchg
xchg
cs
orl
xorl
jne
pop
inc
into
gs
mov
xor
dec
sbb
adc
xor
jmp
in
mov
popf
daa
mov
inc
mov
jl
loope
xchg
addr16
xchg
lea
mov
jmp
ficomps
scas
mov
gs
pop
inc
mov
jbe
into
pop
or
enter
add
jne
icebp
mov
ljmp
repz
xor
pop
aaa
adc
in
mov
xchg
adc
ss
mov
test
addr16
add
adc
cmp
ja
or
rcrb
push
inc
or
adcb
cli
cmp
mov
in
push
add
and
frstor
mov
lock
in
add
decb
iret
jp
mov
xchg
ret
pop
cmc
repnz
loope
xchg
jge
xor
hlt
nop
xchg
mov
into
jnp
or
testb
repnz
jo
clc
js
xor
insl
mov
inc
push
xchg
and
jmp
xchg
out
orb
fldcw
mov
and
out
jp
sub
in
pop
push
test
dec
pop
cmpsl
mov
stos
sub
mov
popf
out
cmp
insb
dec
jecxz
clc
pop
xchg
cmc
data16
jns
out
push
fnstsw
and
xor
mov
cld
mov
cmpsl
daa
xlat
dec
pop
inc
leave
fistps
pop
jge
sub
inc
imul
iret
pop
sub
mov
daa
test
push
scas
movsl
outsl
or
mov
jb
incl
sbb
mov
std
xchg
fwait
inc
mov
inc
arpl
push
pop
xor
les
mov
inc
aas
fstpt
mov
push
cmp
and
jae
dec
add
ss
xlat
and
pop
xchg
xor
andl
scas
or
jo
sbb
jb
cmp
sbb
jbe
int
dec
nop
icebp
xor
sub
loop
or
js
adc
insl
add
sbb
cmp
rcr
or
jp
jbe
ret
inc
cmpl
in
push
ret
call
add
test
and
or
add
xchg
dec
cs
mov
mov
add
cmpsb
jo
lcall
mov
dec
sbbl
ja
movsb
xlat
ja
shrl
hlt
adc
aam
aad
lret
pop
jl
in
ret
sbb
shr
mov
jno
nop
xchg
mov
mov
daa
lds
add
inc
aaa
jns
inc
push
fwait
push
jns
hlt
mulb
adc
lods
mov
push
push
push
enter
popa
addl
sbb
cmp
movb
gs
sbb
lock
jo
cmpsb
and
int
lret
outsb
fisubrl
mov
dec
dec
pop
cmpsl
jnp
cmpsb
enter
or
and
push
mov
into
js
cmp
pop
jae
push
dec
add
roll
mov
in
mov
mov
xchg
xchg
xor
gs
jecxz
adc
adc
adc
lds
adc
imul
xchg
psubd
out
xchg
dec
call
sub
mov
xor
daa
sub
adc
xorl
or
ret
ret
adc
mov
std
adc
xchg
sbb
adc
xchg
stc
cmp
cmp
inc
or
xchg
xchg
push
sbb
mov
push
lea
shrb
aaa
sbb
movsl
or
sbb
fsubp
popa
in
xor
nop
lods
stos
jbe
push
out
dec
mov
stc
push
popa
adc
sbb
mov
cmp
push
mov
jnp
rcll
je
or
fidivl
jmp
push
sbb
inc
fwait
mov
out
int
in
cltd
add
jo
gs
mov
and
mov
push
arpl
lods
inc
rcrl
adc
test
daa
dec
mov
mov
add
mov
mov
inc
ss
or
mov
mov
cmp
pop
leave
rorl
incb
and
and
insb
inc
les
or
xor
shrl
fwait
push
jne
add
mov
mov
adc
leave
push
mov
push
inc
cmp
cmp
js
lods
mov
adc
push
xchg
xchg
rorb
cmp
sbb
jbe
stc
xchg
push
cmpsl
mov
scas
inc
push
or
mov
ret
cmp
sub
mov
lods
sub
xchg
pop
sbb
jae
jmp
pop
das
iret
test
mov
mov
mov
shr
fsubr
aad
pop
mov
lock
inc
cmp
mov
mov
int
in
out
loop
stos
cwtl
dec
cmp
sarl
sub
mov
push
adc
lret
push
adc
xor
cmpsl
daa
and
push
mov
jmp
mov
jecxz
sub
insb
sbb
xlat
rorl
pusha
jo
andl
push
mov
jae
shlb
out
enter
lcall
jmp
andb
dec
mov
hlt
mov
aam
add
dec
fs
out
mov
cmp
mov
xor
pop
xchg
mov
push
cmc
in
or
add
mov
and
mov
fiadds
pop
test
dec
lock
mov
and
mov
inc
out
out
xor
mov
cld
test
popf
add
idiv
mov
or
in
int
dec
cmpl
sahf
test
cmpsb
or
js
outsl
push
gs
xor
mov
mov
adc
inc
pop
push
jecxz
cli
jbe
in
mov
sarl
jmp
mov
in
aad
lea
jae
push
cmpsl
xor
or
sbb
arpl
out
lcall
add
shlb
in
pop
sbb
into
sbb
or
xor
cmp
iret
leave
or
xor
push
sub
mov
push
test
mov
jp
or
jne
stos
jmp
mov
fcmovbe
sahf
xor
sub
daa
add
test
fisubrl
sar
cwtl
jno
hlt
sub
pop
insl
mov
iret
in
scas
ret
sub
mov
add
loopne
out
mov
push
popa
pop
icebp
shrl
pop
fwait
add
xchg
xchg
fwait
lods
test
mov
in
inc
test
cmp
jl
fcmovu
shr
mov
cmp
mov
shr
mov
pop
repz
cmpsb
mov
ds
cmp
in
push
pushf
popf
lea
pop
out
xchg
icebp
push
lock
pop
adcl
hlt
les
cmp
inc
mov
aas
push
jno
test
fcmovne
jns
jne
pop
bound
cmp
shl
mov
xchg
adc
jb
hlt
cmp
std
cli
push
sub
icebp
cmp
lahf
sbb
dec
xlat
push
roll
xchg
xlat
fdivp
movsb
sub
xor
add
mov
inc
mov
je
bound
jmp
mov
pop
ficoml
cmpsb
push
call
iret
and
or
in
mov
js
add
mov
dec
test
xchg
mov
pop
test
lods
ja
loope
fnstenv
jnp
or
cmc
out
sahf
jo
jno
and
and
mov
loope
jno
jp
lods
mov
insl
sub
faddl
pop
mov
loop
push
inc
jae
clc
fstpt
push
enter
ss
push
sub
mov
jg
xchg
fcomps
xor
or
push
sbb
inc
cmp
test
push
jns
jg
les
in
xchg
daa
mov
and
mov
mov
jb
psrlw
xchg
sub
add
into
loope
cmp
lock
jno
cmp
scas
jo
inc
outsl
les
in
test
xor
cmp
pop
push
lea
insb
or
add
mov
cmp
xor
and
aaa
loop
pop
enter
jb
pop
out
sbb
mov
and
out
test
push
incl
inc
or
mov
pop
cmp
subl
jo
enter
fcmovb
imul
inc
inc
movsb
or
daa
stos
jmp
push
inc
rcrl
push
push
leave
adc
faddl
nop
add
pop
filds
mov
push
pop
add
or
inc
jg
dec
daa
jp
add
push
xor
jg
xor
ljmp
jl
test
inc
aas
imul
cmc
aaa
sbb
ret
ficompl
or
stos
dec
sub
add
repnz
mov
insb
pop
imul
cmp
mov
jns
xor
imul
xchg
push
mov
push
cmp
jbe
add
add
sub
int
rolb
mov
add
xchg
and
inc
adc
fbld
gs
jp
push
lods
andl
add
xchg
sbb
in
cmp
xchg
mov
and
out
testl
lds
leave
clc
fwait
stos
rcrl
lea
mov
js
imul
jne
popf
sti
sbb
shll
es
add
jno
mov
fidivrl
bound
push
shrl
and
fcompp
idivl
inc
xchg
cld
fdivr
stos
leave
enter
xchg
jbe
or
pop
jne
mov
into
mov
mov
out
jmp
fyl2x
add
repz
fstpl
out
dec
imull
mov
out
stos
jecxz
outsb
jge
xor
mov
xchg
add
or
mov
lcall
jb
dec
pop
cmp
xchg
hlt
stos
sub
sbb
push
stos
rcll
fiadds
lock
mov
xchg
mov
mov
outsb
xor
outsb
enterw
dec
adc
stos
push
and
fucomp
xchg
imul
or
xchg
cmp
xchg
add
movsb
movsb
jns
add
sbb
in
add
outsl
sbb
stc
les
mov
test
popa
rorl
jge
cmpsb
aad
push
sti
xchg
je
pop
lcall
js
sub
pop
out
iret
jmp
sbb
or
jb
dec
dec
negl
dec
mull
pop
or
sbb
in
outsl
lds
mov
shl
xchg
arpl
dec
outsl
sub
xchg
cmp
inc
and
in
pop
xchg
pop
std
fsub
call
mov
repnz
mov
inc
paddw
int3
stos
out
stos
jge
fucomp
jmp
xor
movsb
repnz
scas
pop
fimull
movsb
rolb
aam
call
xchg
jecxz
push
sub
adc
test
lahf
insl
fcmovnb
inc
fcmovnbe
cli
jle
inc
fsts
adc
daa
inc
lahf
fists
outsl
test
in
jmp
mov
insb
mov
pop
and
pop
pop
jnp
mov
pushf
fisubl
jmp
or
mov
bound
sti
pop
cmp
or
and
enter
push
ficoms
jle
mov
test
jle
jmp
dec
ljmp
jbe
aaa
jp
xchg
push
aaa
cmpsb
gs
ss
push
fs
push
fmul
dec
cltd
inc
aaa
jle
dec
mov
test
cmpsl
inc
rol
incb
push
pop
pop
or
lahf
add
repnz
mov
xor
jb
adc
dec
mov
sbb
sub
xor
dec
stc
dec
out
movsl
es
sahf
and
mov
movsl
push
adc
popa
inc
adcb
xor
xor
fs
in
add
movhps
out
jno
out
mov
xorl
pop
mov
aaa
add
jecxz
hlt
in
mov
pusha
mov
push
mov
and
pop
in
jle
in
or
aad
sti
cmp
lahf
mov
je
bound
pushf
or
jb
jbe
scas
mov
in
out
loopne
and
push
or
and
cld
xchg
jmp
out
xchg
sub
mov
nop
ds
sbb
push
imul
inc
pop
mov
repnz
pop
dec
loopne
loop
mov
lods
nop
fs
loopne
addr16
test
fsubrs
mov
jbe
stc
and
dec
std
or
es
mov
jae
fnstcw
push
adc
fdivl
cli
hlt
adc
js
mov
sub
dec
test
test
add
pop
ljmp
xchg
out
sahf
dec
add
mov
cmp
mov
fdivl
adc
push
fmuls
or
cmpsb
mov
inc
loope
or
add
scas
orb
sbb
and
in
mov
sahf
inc
add
mov
add
jb
mov
mov
cltd
mov
inc
jg
sub
cmpsb
fstps
repnz
je
repz
lcall
arpl
loop
jmp
add
pop
dec
dec
cltd
rorb
clc
dec
mov
ficoml
mov
jg
dec
jle
push
cvtps2pd
jg
ss
jl
clc
or
jle
mov
or
movsl
js
sbb
mov
fsts
mov
inc
xlat
sahf
push
sub
xor
pop
ret
int3
pop
cmp
xchg
pusha
xor
and
int3
mov
repz
jno
lret
mov
sbb
ljmp
or
daa
xor
aaa
or
out
and
mov
bound
aaa
add
dec
lahf
lret
stos
lds
std
pop
pop
jle
xor
bound
adc
cmpsb
jb
mov
mov
xor
fnstcw
incb
icebp
test
mov
adc
push
sbb
into
sbb
mov
fists
mulb
xor
add
out
push
repnz
jae
and
std
rclb
popf
aam
loop
cmp
in
pop
movsb
adc
mov
mov
aaa
cmp
ja
out
sub
fs
jmp
jmp
lcall
mov
jbe
xor
mov
mov
imul
or
fimull
mov
mov
push
shl
xor
push
sbb
jp
and
in
sub
adc
mov
lds
add
and
adc
dec
int3
sub
aad
jo
test
inc
adc
jb
mov
push
jle
xchg
jae
pushf
xchg
cld
mov
xchg
mov
jge
js
int
adc
jecxz
mov
aam
arpl
int3
sub
xlat
and
push
fwait
in
fstps
test
pop
cwtl
pop
and
bound
cmpsb
aad
push
das
hlt
outsb
lcall
and
call
dec
sti
mov
enter
aaa
xor
or
cmpsl
lret
movsl
jns
shl
jbe
lock
cwtl
xor
cmp
pop
xlat
test
jl
inc
enter
aad
bts
enter
jle
add
fucomi
lea
cmpb
stos
adc
mov
mov
movsl
aas
sub
cmpb
jp
and
popf
adc
lcall
rcr
inc
push
sub
mov
cwtl
enter
mov
inc
push
out
sbb
mov
mov
ss
rclb
int3
mov
fdivrs
adc
dec
mov
pusha
sub
sbb
pop
orb
inc
ja
pop
mov
fisttps
ffree
push
addr16
jmp
inc
outsb
das
push
or
adc
mov
fnstenv
popa
pop
mov
outsl
pop
adc
out
cltd
shlb
or
std
popf
movsl
fadds
clc
xchg
jb
jmp
addr16
nop
and
outsl
cli
push
mov
or
mov
in
ds
xchg
nop
rcl
xorl
mov
repnz
sub
push
cmpsl
imul
int3
aas
cmp
sbb
lods
sbb
stos
ds
and
cmp
sub
je
adc
in
and
repnz
enter
mov
popf
xlat
push
mov
mov
pop
pop
repnz
lea
adc
adc
mov
js
test
jmp
sbb
sti
jbe
mov
incl
arpl
push
cli
int3
sbb
mov
xor
pop
inc
andl
outsl
decb
dec
and
dec
and
jp
dec
xlat
scas
mov
add
das
cmp
addl
add
popf
cld
mov
xchg
mov
adc
jmp
mov
or
lock
fwait
xchg
std
cltd
add
pop
jecxz
lods
and
fbstp
sarb
mov
pushf
mov
inc
sbb
push
adc
repz
mov
xchg
daa
cmpsl
pop
inc
in
mov
cmc
dec
bound
leave
inc
imul
scas
push
icebp
xlat
mov
dec
push
js
test
xor
mov
cmp
aaa
std
cs
icebp
jnp
dec
mov
jb
jge
outsl
dec
pusha
cmp
lods
in
adc
mov
stc
mov
scas
pop
jge
cmc
lcall
scas
data16
mov
in
insl
das
movsb
jge
sbb
xor
adc
shlb
pop
ficoml
jle
stos
dec
push
mov
sbb
jbe
adcl
push
dec
sbb
lods
dec
jp
out
pop
into
xchg
sahf
out
inc
mov
insb
add
divb
xchg
or
ljmp
enter
stos
inc
popa
dec
pop
lret
sahf
int
and
daa
int3
ret
and
mov
mov
jl
jnp
pop
lea
inc
mov
xor
scas
dec
imul
pop
sbb
cmc
or
mov
imul
mov
add
push
dec
out
fsubrs
out
out
mov
test
jge
repz
push
or
inc
jne
push
stos
pusha
jle
xchg
jnp
dec
cmpsl
push
push
ret
or
pop
hlt
adc
xchg
push
cltd
stos
xor
mov
shrl
xorb
sti
enter
jmp
inc
js
imul
shl
stc
mov
ret
and
fdivrs
add
sbb
xchg
inc
sub
mov
arpl
out
shlb
inc
xchg
pushf
push
sub
or
pushl
sbb
pop
pop
sbbb
jbe
xor
flds
divl
insb
lahf
mov
stc
dec
bound
inc
cmp
fistl
loopne
jmp
mov
jg
arpl
lock
mov
test
repz
ffreep
and
sbb
mov
push
jae
push
jno
and
inc
popf
arpl
add
sub
dec
jbe
sti
push
mov
mov
adc
jnp
inc
inc
test
dec
mov
mov
lea
sub
sbb
add
and
mov
in
fsubl
outsb
sbb
dec
and
jne
popa
inc
cmp
das
jb
repz
aaa
aam
je
lret
jg
mov
pop
mov
mov
pop
and
xor
pop
out
enter
sti
mov
add
inc
inc
divb
bound
sti
mov
push
mov
stc
loopne
push
stos
or
cltd
in
cmp
jmp
sbb
aad
nop
cltd
xor
push
ss
cmpsb
cmpb
roll
push
xchg
sub
das
in
dec
xchg
cmp
mov
cmpsb
lcall
jp
shufps
sbb
and
adc
mov
inc
mov
and
cmp
jns
arpl
or
adc
push
add
loop
nop
ljmp
xor
xlat
xor
stos
sub
ficompl
push
fsts
cmpsl
mov
subl
lret
sub
nop
insl
aas
clc
xor
movsb
in
addr16
shrl
xchg
and
daa
xchg
movsl
rcr
outsb
sbbb
gs
mov
and
cmp
aaa
dec
adc
jge
std
test
clc
mov
outsl
fcmovne
jnp
adc
jmp
cli
enter
les
sub
and
int3
dec
and
push
xchg
js
inc
sbb
push
fiadds
push
or
inc
jecxz
ljmp
lret
rcl
mov
lods
mov
ficoml
push
adc
lea
loope
xor
xor
mov
into
jne
nop
and
dec
mov
shl
in
xor
sub
test
add
out
cmc
sub
in
xlat
push
xlat
sub
jno
bound
je
push
call
out
bound
pop
and
movsl
sahf
fs
mov
sbb
call
xor
pusha
sbb
push
sbb
fmuls
daa
gs
popa
mov
inc
mov
lahf
neg
xor
mov
xlat
and
xor
ss
fnstcw
hlt
dec
or
in
dec
xor
mov
cs
loopne
aaa
xor
lea
cmp
test
lret
sub
pop
sar
jbe
nop
icebp
not
push
in
jp
lcall
or
dec
stos
nop
into
and
fsubl
push
les
out
mov
inc
ret
pop
scas
insb
jecxz
or
enter
fprem1
xor
inc
inc
cwtl
dec
push
adc
xchg
cli
xchg
cmp
jecxz
mov
cmp
lods
mov
jbe
cmpl
mov
movsb
adc
xor
pop
jle
jecxz
sbb
aad
or
add
cmc
outsb
jle
push
rcrb
jne
or
imul
dec
cmpl
jecxz
sar
sub
aas
dec
sti
pop
pop
nop
xor
lds
pop
push
push
add
mov
sbb
bound
sbb
inc
cmp
shll
dec
clc
jecxz
dec
jne
das
xor
jle
push
frstor
ret
sbbb
jle
aam
or
push
inc
adc
arpl
aad
call
xor
pop
push
mov
inc
ss
add
cltd
ja
bnd
xchg
and
fidivrl
pop
ds
jg
jbe
lds
loope
mov
adc
pop
das
xchg
jp
addb
push
dec
mov
push
adc
data16
enter
jbe
add
out
sahf
dec
push
pop
and
pop
lret
ds
addl
in
js
cmp
fwait
xor
fstl
cli
mov
lcall
movl
in
xlat
fdivs
push
sahf
mov
add
gs
cmp
or
popa
cmp
je
xchg
leave
int3
ljmp
fstpl
subl
push
les
add
lock
stos
lret
push
subb
incb
imul
in
jo
lcall
mov
xchg
lds
adc
push
subl
fbld
pushf
mov
int
push
imul
add
or
ss
into
pop
es
lods
xor
adc
movsl
outsl
imul
add
and
push
sub
and
pop
cmp
xchg
or
sub
cmp
dec
mov
pop
into
mov
mov
sahf
enter
mov
fs
sti
cmp
mov
fbld
movsl
mov
jo
mov
push
jns
mov
push
pxor
cmpsl
mov
inc
repz
and
push
cs
pop
cld
aaa
mov
mov
fistl
test
pop
fwait
mov
push
popf
xchg
xchg
mov
mov
mov
cmp
dec
ja
mov
stos
pop
xor
xchg
sub
xor
mov
push
dec
mov
ret
sbbb
stos
fdivrs
cwtl
jne
xor
aas
aaa
ss
cmp
call
sbb
loop
out
fnstenv
jo
cmp
mov
cmp
les
jle
or
aad
out
jo
inc
cmp
pop
dec
push
adc
pop
mov
lds
sbb
out
adc
ret
inc
cmp
add
out
sbb
jbe
push
add
clc
clc
lahf
inc
cld
xchg
mov
ljmp
mov
sbb
xchg
pop
xor
mov
test
es
fstl
aam
pushf
outsl
lods
out
xchg
jae
je
popf
or
pushf
xor
pop
mov
inc
mov
sbb
aad
mov
ljmp
or
or
pop
cmp
mov
mov
in
hlt
int3
push
dec
sbb
ret
cmc
add
and
lods
mov
mov
xchg
add
cld
sub
aas
rolb
jae
jnp
inc
sbb
mov
shlb
nop
enter
pop
out
jmp
arpl
repnz
mov
mov
dec
aam
and
lods
fidivl
adc
jecxz
inc
movsb
shr
dec
test
mov
cmp
lret
mov
sbb
jp
add
or
pushf
rolb
lcall
lea
cli
enter
fadds
outsb
repz
cli
je
adc
push
mull
or
mov
xor
fidivrl
pop
mov
xchg
cmpsb
xchg
pusha
idivl
xchg
mov
jp
cmc
ds
mov
push
scas
daa
fisubrl
inc
jmp
push
dec
jg
pop
and
aaa
mov
sti
insl
mov
xor
cmp
inc
dec
fcomp
inc
ljmp
mov
stos
pop
mov
nop
adc
mov
jge
mov
push
imul
cs
sub
mov
mov
aaa
outsl
repz
cli
aas
ds
sbb
filds
or
inc
or
or
mull
sbb
jl
repnz
je
xor
sahf
adc
je
pusha
in
sbb
jns
lahf
cltd
cmp
dec
js
shlb
xchg
pop
jae
jo
inc
call
and
adc
test
pmaddwd
push
mov
outsb
add
mov
gs
fisttpll
jno
fisubrl
aam
sub
pop
stc
cli
sub
dec
or
mov
lock
js
ret
sub
or
shrl
in
in
xchg
dec
mov
shrd
inc
sahf
mov
addr16
loop
add
lods
mov
jl
iret
mov
testb
pop
lock
cmp
in
sbb
sub
das
mov
inc
shll
and
jmp
pop
sbbb
inc
icebp
stos
and
leave
push
inc
loope
je
movsb
rclb
test
xorb
faddp
rdtsc
aam
or
sbb
dec
adc
fwait
iret
add
push
xor
or
inc
cltd
xchg
jecxz
cmpsl
adcl
mov
cmpsb
mov
push
pop
cwtl
shrb
loop
out
cmc
ret
mov
inc
jo
push
outsb
lcall
xorl
or
sub
pushf
out
hlt
cmp
imul
xor
out
js
xchg
pop
and
lods
call
add
xor
sub
mov
pop
dec
jle
aaa
inc
pop
sub
jmp
and
xlat
mov
lahf
push
popa
in
adc
pushf
inc
mov
adc
sub
or
shll
clc
int3
repz
jge
pop
cmp
adc
bound
push
lret
push
mov
mov
subb
testb
and
das
inc
in
mov
repnz
inc
xor
daa
test
xlat
or
push
jmp
rclb
and
popf
cmpsb
fisubrs
clc
pop
lods
and
cmpsb
cld
jmp
mov
pop
or
lret
rolb
pop
gs
pop
xchg
sbb
in
ficompl
mov
xchg
lret
xor
adc
cwtl
scas
pusha
mov
pop
mov
jo
icebp
dec
ss
cmp
and
js
movq
inc
fwait
call
jg
xchg
in
and
rorl
inc
jge
loopne
inc
or
ja
mov
and
xor
jne
leave
pop
repnz
push
fistpll
mov
out
push
movsl
pusha
ljmp
imul
pop
lods
mov
xchg
inc
mov
popa
jne
fsubs
sub
dec
xor
or
into
xchg
dec
movsl
sub
mov
sbb
clc
sti
cmpsb
cli
lcall
mov
insl
xchg
idivl
leave
jb
xlat
loope
jbe
rcrb
sub
xor
inc
xchg
lods
loopne
xchg
jmp
out
mov
adc
adc
rolb
mov
push
mov
in
jg
xor
outsl
mov
out
loop
push
lods
pop
lods
or
push
mov
xchg
dec
stc
lret
std
push
mov
mov
repnz
sub
jne
les
dec
push
push
out
fbstp
and
dec
into
cmpsb
add
or
dec
pop
jae
and
stc
cmpsl
pcmpgtb
nop
push
fimull
or
call
add
sbb
adc
aam
in
jge
subb
pusha
mov
fistpl
jg
sahf
push
and
test
lds
popf
ljmp
mov
push
or
mov
dec
js
adc
dec
mov
xor
rcrb
jne
add
sbb
and
jae
stos
insl
xchg
mov
iret
pop
fisttps
mov
xchg
lcall
and
or
pushf
cltd
push
inc
ja
and
js
in
dec
pushf
data16
mov
pusha
les
in
aad
mov
dec
hlt
stos
hlt
xor
push
incb
in
mov
lret
insl
test
fimuls
movsb
mov
insl
push
leave
loop
pop
inc
jp
inc
xchg
jmp
push
fmuls
cmp
xchg
xor
pand
out
mov
jnp
dec
fwait
pop
das
mov
jae
xor
and
jbe
xlat
loopne
les
add
cmp
mov
mov
ret
cmp
fstl
stos
call
inc
sbb
out
pop
push
and
sbb
movsl
stos
ss
iret
mov
lahf
lcall
mov
jae
xlat
scas
sub
ds
inc
fdivrl
or
fwait
xor
xor
outsb
xchg
add
sahf
aad
add
popa
mov
xlat
jo
clc
and
mov
ret
jg
rcll
sbb
leave
or
inc
inc
addr16
jg
aaa
addr16
out
add
leave
in
stos
negl
mov
push
rolb
imul
xchg
jnp
cwtl
mov
aad
fsts
stc
xchg
mov
scas
xchg
leave
leave
push
pop
mov
into
je
enter
xor
leave
out
ljmp
movsl
xchg
aad
fbld
dec
mov
mov
inc
xor
or
pusha
movsb
movsl
pop
pop
mov
pop
sub
jns
in
mov
xlat
xchg
gs
mov
mov
lea
je
add
and
inc
stos
imul
pop
aad
inc
mov
nop
gs
lcall
movsl
frstor
adc
inc
mov
dec
mov
add
sbb
mov
jecxz
xchg
das
mov
fcmove
dec
lahf
and
fchs
xchg
shl
mov
add
pop
pop
or
cwtl
mov
mov
xor
shrl
ret
fcmovnb
xchg
add
addl
int3
enter
mov
adc
cmp
adc
jmp
movsb
pop
test
lahf
sbb
or
les
xlat
jge
mov
or
xor
push
mov
orb
pop
jle
hlt
jp
xchg
in
fmuls
pop
mov
int3
dec
xor
xchg
pop
lret
jmp
clc
sar
sub
gs
jmp
or
scas
ss
xor
test
gs
div
mov
cmp
lahf
pop
and
rcll
or
push
sub
jne
sbb
xor
dec
and
sub
sti
stos
stos
push
sbb
popf
rorb
fwait
push
lea
xor
and
jmp
xchg
in
inc
test
jne
loopne
sbb
jmp
sub
out
jp
pop
mov
subb
sub
xchg
leave
gs
adc
mov
repnz
insb
sbb
or
add
repnz
cmp
std
scas
arpl
add
std
add
mov
mov
push
jne
adc
jg
int3
call
mov
aam
movsl
rcrl
cld
out
mov
rclb
adcb
mov
pop
call
leave
std
and
cmc
jno
xor
mov
test
cltd
fwait
push
call
jne
mov
lahf
leave
sbb
iret
cmpsb
aas
aas
ljmp
inc
shrl
dec
pop
xorb
repz
mov
xchg
gs
mov
ja
push
iret
xorl
sub
arpl
iret
int
cwtl
orl
inc
fdivs
mov
push
repz
mov
addl
xor
iret
cwtl
push
ds
adc
mov
cmp
test
dec
fs
stc
repz
and
test
into
add
repz
test
dec
test
mulb
dec
cmp
jae
sti
and
adc
test
stc
fsubl
xor
inc
shlb
mov
popf
mov
test
cmp
std
pop
cpuid
fiadds
jge
jns
inc
xor
xchg
stos
loope
insb
inc
clc
cltd
sarl
mov
fwait
sub
test
scas
xor
inc
cmp
push
or
icebp
jns
sbb
test
sbb
pop
sti
and
pop
es
push
rorb
out
cmpsb
cmp
sti
xchg
jo
cmp
icebp
push
pop
fs
cmp
outsl
ds
adc
sub
data16
sbb
mov
jo
das
dec
sbb
mov
xor
cmp
mov
clc
push
stc
add
push
inc
jl
enter
pop
mov
xchg
pop
sbb
mov
dec
jb
out
addb
xchg
jl
cmp
or
pusha
mov
jp
sti
cmp
inc
sbbl
xorb
cmp
daa
repnz
mov
push
or
mov
repz
pop
jg
call
xor
adc
popf
out
cmp
mov
cmpsl
divb
arpl
and
mov
cmp
loop
inc
icebp
int3
sbbb
int3
mulb
addr16
ja
test
sbb
stc
jae
pop
fimuls
pop
cli
mov
xchg
outsl
mov
lods
outsl
xchg
pop
xchg
push
mov
mov
scas
and
jno
adc
shlb
push
mov
ficompl
in
push
jae
cmp
ss
aaa
jbe
call
or
push
fstl
dec
dec
sbb
mov
outsl
cmpsl
aam
movsl
in
dec
mov
push
fstl
sbb
push
das
or
jae
sbbl
loopne
or
dec
call
addr16
mov
adc
add
push
inc
sub
cld
dec
js
xor
outsb
xchg
sbb
into
adc
das
cmpsb
cmp
fsts
push
jno
mov
push
jmp
insl
daa
mov
js
mov
imul
imul
inc
mov
adc
mov
je
outsb
ljmp
jp
xlat
and
scas
ja
pushf
add
or
hlt
gs
out
mov
sbb
rorl
dec
mov
sub
push
lods
loop
xor
pusha
sub
imul
push
fptan
jle
cmp
push
sbb
sbb
cmp
dec
xchg
dec
cmpsb
inc
sub
loopne
fidivl
mov
cmc
dec
jbe
adc
fwait
fidivs
scas
loope
cmpsl
pop
push
loop
aam
xchg
fisubs
into
sti
or
jecxz
jno
rcll
fwait
rolb
popa
xchg
mov
sti
arpl
cltd
call
jne
mov
roll
fstpt
orl
add
loope
cli
push
in
mov
les
mov
lea
aas
add
inc
jg
cmp
push
fbstp
rsqrtps
std
iret
lds
mov
pop
iret
push
push
stos
push
fsubl
sub
pushf
sub
mov
add
adc
out
push
data16
in
add
movl
fwait
ss
into
ret
mov
dec
xlat
mov
xchg
dec
aas
jo
push
aam
fwait
xchg
ffree
push
std
jl,pt
das
sub
fidivl
and
jo
jo
iret
shr
mov
or
ret
or
sub
fdivrs
sbb
adc
popf
sub
mov
test
adc
jbe
mov
pop
jae
jbe
loope
ja
mov
out
add
test
xchg
mov
xchg
mov
aad
pop
add
jmp
mov
nop
or
out
cwtl
pop
mov
or
int3
pop
pop
lahf
fld
cltd
std
pop
lods
inc
xor
mov
pop
inc
dec
mov
iret
xchg
mov
idiv
and
subl
imul
adcl
popf
cmp
int
insl
push
lock
lock
cmc
push
push
adc
lcall
jns
test
pop
lods
das
mov
stc
ja
enter
cwtl
sbb
jns
ja
rcl
mov
cmp
aam
jbe
sub
loopne
addb
add
sub
leave
mov
test
or
fisttpl
cltd
cli
testl
lcall
fdiv
adc
push
adc
add
mov
repnz
mov
push
jae
das
data16
mov
shrl
ljmp
pop
lods
lahf
test
jmp
rol
dec
mov
fsts
add
es
xchg
imul
mov
push
push
ds
rol
pusha
outsb
mov
in
pop
jg
and
sti
jge
imul
sub
xchg
mov
in
in
dec
or
mov
mov
rorl
jb
fiaddl
lods
pop
adc
inc
mov
imul
enter
sub
call
stos
push
hlt
jae
movsl
mov
pop
lods
enter
incl
test
fmull
xor
jno
out
xchg
cltd
cli
mov
jmp
jne
pop
ja,pn
cmp
cmpsb
lret
arpl
lret
xlat
xor
aam
and
jne
outsb
outsb
sbb
leave
aad
mov
jecxz
sbb
add
xchg
mov
sarl
lahf
xchg
bound
stos
fldcw
out
sbb
mov
ljmp
add
cmp
aas
fucom
inc
mov
pop
fstl
shr
push
out
push
sar
sub
out
imul
adc
sub
xchg
pop
mov
xor
shlb
sti
pop
dec
add
ret
mov
xchg
cmp
add
push
test
test
inc
mov
mov
bound
lds
inc
add
inc
mov
std
mov
xor
and
jae
out
sub
call
imul
fdivr
or
sub
test
rolb
push
jne
mov
sbb
out
xchg
fcomi
inc
loop
lret
lahf
out
mov
lret
cmp
or
and
jl
pop
jmp
mov
push
mov
sbb
loopnew
or
int
push
sbb
push
pop
dec
fsub
aas
xor
testb
movsl
cmp
divl
es
mov
sahf
cli
lods
mov
fnstcw
lret
mov
outsb
and
sub
xchg
xlat
jno
xchg
push
loope
jl
push
pusha
out
stos
jbe
imul
sub
add
jbe
xchg
inc
xchg
sub
fidivl
adc
icebp
clc
dec
push
outsl
jp
sbb
mov
mov
fisubs
scas
out
call
ds
pop
fisttpl
filds
decb
dec
stos
loopne
adcl
out
mov
ss
mov
inc
push
addb
inc
and
mov
mov
xor
popf
xchg
jmp
daa
or
xchg
daa
test
shll
cltd
xchg
adc
jl
inc
jecxz
add
aas
inc
pop
aad
test
mov
or
push
mov
jne
das
fisttpll
into
push
mov
or
jecxz
push
sbb
rcrb
sub
mov
mov
adc
inc
sbb
mov
adc
and
fwait
lods
popa
scas
ret
pop
cmp
fldenv
and
cmc
test
or
pop
ficoms
imul
test
adc
ret
movsl
adc
push
cmc
lcall
sub
and
daa
mov
pop
pop
pusha
pop
es
sbb
es
lods
fs
out
xchg
lock
mov
add
push
rcrb
pop
shl
mov
shrb
arpl
das
rcrb
lods
pusha
mov
or
jns
inc
rcrl
pop
mov
dec
data16
fsub
and
push
dec
mov
cmp
cmc
fcoml
push
fldz
jecxz
cmp
mov
das
dec
xchg
pop
shl
jo
loope
pop
mov
push
jge
jmp
pop
mov
vshufps
mov
test
push
pop
mov
in
popa
pop
pop
les
xor
add
in
dec
insb
fsubr
add
out
filds
inc
or
dec
les
ss
pop
lods
in
out
xor
and
adc
adc
leave
xchg
adc
pop
xchg
mov
mov
fiadds
mov
push
loope
add
inc
movsb
dec
pop
mov
ljmp
stc
pop
lods
ljmp
out
icebp
enter
test
jecxz
int3
repz
pop
push
loopew
int
adc
push
dec
add
mov
mov
icebp
dec
repnz
xchg
test
xor
outsl
mov
push
mov
jbe
aam
inc
sbb
xchg
movsl
movsb
outsb
cmp
jecxz
loope
shlb
scas
subl
push
xor
fisubl
popa
pop
xchg
xlat
call
dec
sbb
ret
pop
fstpt
fidivrs
aad
call
ds
das
jno
aas
inc
jp
mov
outsb
mov
aaa
pop
ja
mov
cmp
subl
pop
or
les
sbb
insb
add
jecxz
sub
icebp
into
adc
inc
add
xchg
ds
push
idivl
movsb
dec
inc
pop
and
out
add
divl
jne
cmp
adc
and
push
jno
sbb
and
mov
inc
jbe
dec
js
rcl
mov
je
ds
add
jo
loop
nop
mov
jecxz
iret
outsl
repz
fcomi
mov
leave
jo
xor
cld
outsl
push
push
pop
unpcklps
push
add
fcomi
iret
push
push
dec
add
pushf
cli
mov
sbb
jo
fbstp
jl
xchg
mov
imul
outsb
adc
ror
xor
add
sbb
push
fisttpl
sahf
insb
pop
push
imul
ss
mov
addr16
xchg
pop
mov
jno
dec
popa
xchg
and
ljmp
cmp
mov
lahf
lgs
lret
aaa
imul
ds
arpl
sub
mov
push
movsl
push
mov
push
shrb
rol
dec
xchg
lret
pop
lods
sbb
mov
mov
sub
pop
lret
jnp
out
je
inc
les
mov
mov
lea
lcall
movsl
adc
mov
mov
ror
add
fstp
sub
xchg
insl
pop
scas
jl
std
cs
lret
call
incb
cld
or
pop
pop
fsubs
inc
mov
mov
les
lcall
xor
or
sbb
int3
std
add
sahf
jb
stos
jae
jg
push
push
xor
xor
insl
mov
sbb
dec
mov
or
or
in
mov
int
xchg
and
adc
add
shlb
add
movsl
scas
jmp
cmp
adc
pop
inc
std
and
aaa
jae
fwait
jno
adcb
lock
mov
xor
and
lret
and
in
jb
test
test
loopne
jp
sti
int3
aas
stc
mov
test
repnz
int
adc
sub
xchg
sub
cmp
dec
inc
out
mov
mov
out
orb
repz
mov
popf
and
scas
xchg
gs
repnz
out
and
lods
mov
jae
test
pop
fs
lea
leave
mov
mov
orb
sahf
inc
inc
xor
jno
stos
dec
js
lds
pop
or
inc
pop
sub
add
jae
icebp
and
dec
add
in
adc
mov
iret
test
shlb
in
xchg
mov
jnp
ds
icebp
gs
movb
repnz
cmp
sub
notl
push
mov
jge
ret
lret
mov
and
or
dec
jecxz
fsubs
test
mov
cmp
stc
divl
sub
jmp
mov
out
in
loopne
mov
sahf
cmp
push
pop
dec
xor
pop
pop
adcb
push
enter
in
dec
ljmp
pushf
popf
xor
or
insl
push
enter
pop
push
lahf
gs
lds
jb
idivl
in
in
icebp
push
ljmp
loop
popa
sub
mov
dec
cmp
mov
shlb
or
mov
cmpsl
jne
movsb
loopne
cwtl
testb
and
adc
inc
jecxz
call
cli
enter
daa
sub
rcrl
ja
mov
popf
push
mov
inc
in
and
in
cmp
add
clc
idivb
repnz
push
mov
loopne
adc
jecxz
sbb
and
in
pop
jae
jl
push
sbb
mov
cmp
and
cmp
pushf
insb
mov
mov
push
pop
add
fwait
jl
push
fdivrs
clc
aas
mov
lock
das
js
ds
pop
and
scas
cmpl
cs
loope
lock
sbb
adc
stc
mov
pop
clc
cmc
sub
add
mov
fninit
imul
add
sbb
test
les
fstps
inc
adc
subb
clc
into
in
dec
dec
pop
dec
dec
outsl
mov
dec
ja
pop
cli
cli
cld
inc
cmp
mov
rorb
repz
cltd
push
shrl
and
iret
adc
outsb
xor
jmp
mov
inc
and
adc
iret
mov
cmpsb
mov
sbb
or
stc
and
bound
adc
or
jp
icebp
aaa
in
push
cmp
xor
test
inc
call
test
ret
mov
xlat
mov
cmp
out
fstl
and
jb
in
jge
out
daa
test
mov
push
lea
lret
jo
cmp
lods
fdivl
out
xchg
push
cmp
fisttpl
adc
fwait
push
mov
movb
cltd
inc
lret
mov
xor
sub
and
jmp
insl
push
xchg
cmc
xchg
stos
jecxz
and
dec
insl
add
inc
push
sub
sub
xchg
add
pop
test
out
aas
les
jns
idivl
sar
fdivl
aad
xchg
arpl
lret
mov
and
mov
inc
aaa
sub
xchg
pushf
mov
cmc
push
out
dec
and
adc
scas
sub
mov
add
sbb
jb
fimull
gs
push
movsl
movsb
repz
cltd
fdivrp
call
inc
sbb
das
cmpsb
sbb
pop
inc
std
ljmp
cmp
dec
mov
out
fbstp
fwait
push
ret
notb
out
mov
sbb
lods
je
aad
xchg
push
push
jbe
lahf
and
xchg
shlb
sbb
adc
mov
dec
xor
cli
adc
mov
xor
lods
int3
mov
mov
iret
in
mov
xor
lret
shlb
sub
sbb
xchg
dec
adc
cld
mov
or
ret
and
mov
xor
and
sub
clc
out
stos
aaa
cmp
xchg
aam
subl
ret
mov
pop
mov
stos
mov
ror
test
mov
xor
push
pop
adc
or
adc
jmp
in
jmp
aad
jecxz
pop
add
sbb
roll
ss
pop
fcos
adc
outsl
movsl
fcomps
pop
mov
stos
mov
xor
mov
aas
xlat
xor
mov
sar
rorl
or
fsubl
cmpsb
xchg
movsb
std
pop
and
jge,pn
scas
xchg
mov
jno
mov
inc
inc
orl
cmpsl
cltd
int3
xor
clc
xchg
mov
cmp
pop
mov
gs
cmpsb
push
sarl
mov
mov
movsl
add
jb
jno
pop
cmp
inc
xchg
outsb
add
adc
mov
sub
mov
xor
aaa
xchg
sbb
jae
cmp
sub
pusha
ja
loopne
mov
aaa
inc
and
mov
cmpsb
scas
push
push
sbb
jmp
fdiv
jae
mov
dec
push
xchg
test
rcll
mov
inc
aas
adc
push
jnp
stos
pushf
daa
sar
enter
and
fadds
rcr
cmp
cmp
cmpl
mov
dec
arpl
push
fstpl
leave
rorb
inc
repnz
xor
inc
into
push
jmp
int3
ret
adc
fldt
stc
inc
insl
pusha
lods
jo
arpl
pop
repz
or
dec
add
mov
sahf
pop
orb
inc
xor
aad
or
pushf
lcall
sarl
add
rcrl
es
sub
sahf
gs
dec
adc
aam
cli
jg
flds
mov
mov
mov
pop
jo
loop
repz
movsl
and
fs
dec
fildl
int3
pop
shrb
aam
mov
jge
lods
into
push
push
inc
inc
in
xor
or
lret
test
jmp
popa
xor
shr
dec
ret
or
cmp
test
jle
sub
sbb
mov
and
shrl
fsubl
sub
sub
xor
jne
mov
mov
pop
outsl
daa
xchg
cmp
test
mov
addl
sub
jle
pop
adc
js
cli
jno
clc
inc
adc
sub
test
dec
sarl
cmp
stos
pop
cmc
stc
push
sub
bound
mov
lds
cs
push
pop
dec
mov
subb
daa
fld
rcrl
or
int3
dec
or
or
inc
mov
shlb
xor
xchg
cmp
adc
test
popf
lods
out
inc
or
cltd
test
xor
clc
or
jb
and
xchg
addr16
xchg
out
stos
mov
cmp
loop
jo
push
adc
stos
out
sub
arpl
cli
das
shlb
jne
repnz
es
adc
sarb
movsb
mov
and
mov
inc
daa
xor
cmpsb
sbb
enter
pop
dec
out
std
sbb
dec
add
inc
fwait
adc
mov
into
aad
xorl
xor
sbb
inc
sbb
adc
jbe
cmp
loop
loop
rcrl
add
inc
mov
clc
xor
sub
icebp
stos
daa
addl
mov
clc
lret
lcall
jno
cmc
mov
enter
hlt
xchg
sarl
test
mov
bound
gs
sbb
xor
ds
adc
in
add
test
lahf
adcb
popa
add
xchg
repnz
mov
push
xor
imul
pop
adc
mov
sub
fistps
repz
jl
push
push
cld
nop
aaa
cwtl
rorw
in
mov
imul
test
rcr
pop
or
out
fdivrs
and
call
inc
mov
je
stc
xlat
xchg
repz
sarb
fisubl
cli
pop
and
pop
sub
icebp
test
mov
imul
lcall
iret
mov
mulb
ja
ret
mov
cmpsl
and
ds
insl
dec
adc
loop
dec
dec
aad
cltd
xchg
mov
cs
fdivp
jge
and
push
sub
xchg
add
dec
and
sub
call
dec
or
cmpsb
jl
pop
and
into
jp
repnz
scas
sub
or
in
scas
out
push
push
dec
mov
sbb
push
adc
ja
xchg
and
in
pop
adc
xor
inc
mov
and
or
mov
jbe
jbe
sbb
inc
jmp
cmpb
fidivl
mov
popa
out
int3
mov
mov
xor
push
inc
mov
outsl
ss
imul
or
and
mov
adc
rorl
inc
add
int3
jne
stc
in
xor
mov
fbstp
xchg
xchg
adc
aam
sub
mov
add
test
call
sbb
cwtl
jne
scas
and
fsubl
cli
loope
pcmpgtw
mov
xor
addr16
js
sbb
sbb
mov
add
std
insl
sbb
pop
push
mov
std
jns
lods
mov
shlb
xlat
mov
jne
xorb
scas
test
lret
xor
xchg
daa
jle
movsl
cwtl
dec
aas
shrb
out
jmp
int3
and
xor
push
mov
push
out
repz
lret
pop
movsl
sub
mov
and
add
mov
rorb
add
aad
sub
dec
je
fiaddl
loopne
scas
adc
sub
mov
out
ret
sbb
js
add
lods
mov
das
pop
push
push
mov
sahf
hlt
scas
lret
nop
lea
mov
cmp
jg
dec
hlt
add
mov
jnp
jge
mov
pop
daa
iret
pop
bnd
call
or
sub
jno
and
add
xchg
aam
mov
sbbb
push
ds
inc
subb
mov
mov
sub
jp
movl
pusha
in
and
push
shll
push
lret
das
mov
sub
add
pusha
or
push
sub
add
adc
std
push
mov
shll
into
mov
pushf
ficoml
mov
pop
lea
or
jo
sub
je
adc
out
or
sbb
jle
clc
inc
aam
ss
inc
inc
mov
repnz
xor
dec
pop
and
bound
xlat
rorb
xlat
cmc
and
ja
dec
and
in
aam
lds
sub
cmpsl
xor
jno
mov
mov
and
xchg
loop
or
not
push
push
xor
sub
sahf
in
pop
sub
sbb
push
psrld
cmpsb
clc
add
sub
into
sbb
arpl
fcmovne
cmc
rcll
jae,pn
and
inc
or
cmpsb
negl
and
mov
fcoml
pop
push
jecxz
or
mov
dec
ret
sbb
lods
push
sub
jae
jp
je
jo
pop
mov
out
pop
in
mov
jo
fmulp
mov
and
pop
orb
xor
cltd
fldl
je
addb
mov
pop
sbb
and
mov
xor
mov
aas
inc
push
xchg
mov
testb
sub
dec
xchg
pop
pushf
icebp
pushf
push
subb
mov
out
or
inc
add
test
inc
outsl
jp
fcom
test
or
cld
xor
push
in
mov
cmp
jbe
inc
pop
rsm
out
sarb
mov
in
xchg
fwait
mov
mov
xor
pusha
jae
enter
and
outsl
or
jns
dec
cmpb
std
loopne
aaa
inc
nop
mov
ljmp
ljmp
sti
and
andb
mov
cmp
stos
sub
cmp
add
pop
mov
lods
cltd
xchg
xor
dec
and
pop
mov
lret
inc
mov
cld
sub
test
fsubs
mov
cltd
jb
arpl
cmp
pop
mov
aam
inc
scas
sbb
daa
xor
les
sub
in
sbb
into
pop
jb
sub
jnp
pushf
or
dec
imull
clc
sub
pusha
ret
cmpw
adc
nop
lret
jge
pushf
stc
addr16
push
addr16
call
and
sarl
cli
push
adc
and
sub
popf
xor
in
idivb
push
ret
iret
mov
daa
subl
cmpsb
mov
int3
cmp
aaa
inc
and
or
cltd
jae
mov
mov
lods
repz
push
cmp
imul
hlt
jecxz
test
or
adc
xchg
test
add
push
out
daa
ret
out
dec
out
in
daa
mov
rcll
adc
mov
pop
outsb
mov
mov
cltd
fdivr
lds
mov
push
cltd
jne
mov
sahf
xchg
mov
xchg
xchg
dec
adc
loop
arpl
push
xchg
inc
cld
dec
pop
mov
das
lahf
and
cltd
jno
mov
mov
lahf
pop
mov
jns
cmpsl
in
push
imul
out
pop
mov
fdivl
pop
cli
jbe,pt
inc
sub
shr
outsl
or
scas
out
pop
pop
lds
add
inc
inc
xor
clc
gs
push
js
xor
sbb
cmp
addr16
xchg
mov
fmulp
movsb
in
std
push
int
mov
xor
jmp
pop
adc
mov
jo
sbb
dec
or
adc
inc
sub
shll
inc
sbb
pop
xchg
or
aas
mov
sbbb
mov
sub
adc
hlt
daa
rcrb
add
inc
jne
jnp
cltd
std
sub
ficoms
inc
push
and
shlb
imul
pop
jl
jns
test
out
andl
sbb
pop
jae
add
notl
add
and
divl
in
mov
push
out
ficoms
pop
push
push
xor
dec
fdivrl
mov
mov
mov
test
rolb
mov
jns
jb
cmpsb
or
xor
mov
femms
xchg
and
leave
ss
repnz
aaa
cmpsl
nop
int
test
sbb
out
ficoms
jb
sahf
push
hlt
insl
sbb
and
cwtl
out
dec
aam
add
sbb
aas
data16
icebp
push
jge
pop
cmp
sub
lds
icebp
stos
add
cmpsl
push
mul
pushf
iret
mov
in
mov
jbe
pop
xor
sbb
data16
and
push
inc
jno
sub
inc
mov
mov
and
insb
pop
and
aaa
xchg
orl
xor
pop
insl
inc
aas
movsl
fidivl
xchg
out
mov
filds
movsb
in
push
gs
mov
adc
pusha
adc
mov
out
addr16
lock
add
int3
xchg
addr16
cmp
stos
stos
push
add
dec
bound
mov
jge
sub
cmp
xchg
outsl
inc
cmp
test
test
dec
dec
cmpsl
mov
push
mov
in
mov
jo
xchg
xor
sub
daa
cwtl
fimuls
sub
adc
cmc
pop
adc
xorl
insl
adcb
sub
hlt
xchg
push
push
xor
jae
jl
and
dec
mov
testl
cmp
lods
xchg
mov
xlat
dec
jp
jo
out
or
shrl
fcomp
mov
je
mov
insb
loop
loope
sbb
push
pmaddwd
inc
push
cmp
lret
xchg
xchg
test
sbb
int
nop
inc
jle
adc
xchg
ret
jecxz
stos
loop
popf
shlb
adc
lret
loope
jbe
xor
and
aam
mov
pop
arpl
fdivs
xchg
dec
mov
mov
jp
jo
xchg
clc
inc
in
sub
jno
cmpsl
jae
imul
add
test
xor
daa
pushf
repnz
xchg
out
sarb
or
pop
pop
lahf
jo
lods
jo
xor
mov
sub
adc
dec
inc
xchg
pop
push
mov
jecxz
inc
dec
ljmp
stos
cmp
dec
call
or
cmpsb
enter
cltd
lock
cmpsl
pop
xor
sbb
pop
pop
dec
mov
cmp
and
mov
shl
cli
sbb
xor
adc
xchg
sbb
or
xor
gs
mov
jne
inc
xchg
mov
inc
lea
dec
mov
fdivrs
cmp
mov
lds
and
cmc
mov
outsb
xor
outsb
arpl
scas
xlat
and
cli
push
lock
mov
in
cmpb
std
js
mov
push
into
sbb
fistps
xlat
xchg
les
jns
or
mov
ret
mov
push
pop
pop
jns
imul
fiaddl
jno
fwait
das
lret
test
iret
add
cld
mov
jmp
sahf
in
mov
fwait
inc
or
pop
push
push
jns
pop
jmp
add
xor
ret
adc
iret
popa
je
icebp
sbb
sub
imul
out
xchg
add
fisubs
scas
popa
iret
sub
bound
xor
cs
dec
bsf
dec
ljmp
xlat
int
out
inc
loopne
push
gs
iret
push
repnz
lods
inc
sbb
and
jb
push
fists
lcall
icebp
push
sub
jge
ds
mov
or
push
push
pop
inc
jge
mov
mov
scas
cli
cltd
or
pop
test
dec
sub
add
jmp
cmp
cmp
daa
pop
xchg
sbb
and
test
inc
lods
jbe
inc
mov
mov
lret
pop
jbe
loopne
dec
cmc
push
and
inc
push
mov
sub
dec
jmp
or
scas
add
ljmp
jmp
jae
or
cmc
xchg
push
test
cmp
ficomps
dec
into
inc
sbb
fprem
rol
sbb
pop
pop
loop
mov
cli
cmp
adc
imul
or
scas
sbb
mov
jge
fdivrl
dec
out
adc
sub
jb
stos
adc
popa
pop
cmpsl
std
repz
popa
cld
in
mov
repnz
bound
pop
xor
outsl
and
insb
scas
cmpb
add
mov
aad
test
mov
mov
popf
cmp
jle
jno
add
dec
pop
mov
lahf
cs
or
sbb
les
pop
xchg
lcall
xchg
lds
addb
add
mov
sub
dec
pop
js
out
in
daa
xchg
cmc
fsts
std
dec
lods
inc
int
jne
sub
in
sub
mov
dec
cmp
jno
dec
push
xchg
xchg
mov
sub
xchg
les
xchg
mov
xchg
push
cmp
pop
pop
and
sub
xchg
cmp
sub
xchg
push
jae
inc
out
xchg
int
pop
sub
sbb
stc
lock
adc
sub
mov
xchg
cmp
pop
movsb
jg
push
es
xchg
mov
jle
xlat
dec
in
or
das
adc
sahf
out
jo
sbb
jp
mov
ss
xor
fwait
mov
sbb
jmp
mov
sbb
movq
or
fmull
stos
cmpl
test
scas
lret
mov
inc
adc
mov
pop
addl
adc
cwtl
pop
adc
mov
xchg
lds
pusha
sub
sub
andl
xchg
addr16
push
mov
pushl
repnz
jmp
sub
sbb
mov
push
cmp
xchg
in
xchg
daa
jecxz
ficompl
jge
cli
xor
lods
jle
push
sub
lods
push
clc
mov
arpl
adc
imul
das
jb
sub
repz
js
inc
inc
fstp
sbb
inc
add
mov
jno
int3
ret
and
sub
fsubl
lods
xor
imull
mov
push
fwait
subb
iret
mov
mov
mov
mov
inc
pop
sbb
int3
and
lds
xor
and
roll
div
lcall
or
lock
mov
out
xlat
ficoml
adc
sbb
sahf
pop
or
mov
xor
cmp
lret
jmp
sub
xchg
or
enter
dec
dec
mov
aam
mov
lcall
movsb
pop
pop
ljmp
lock
jecxz
rcrl
add
inc
jecxz
fldl
or
lea
add
dec
fsts
mov
xchg
js
test
jge
jp
push
sub
mov
stos
fs
mulb
jmp
pop
in
mov
push
inc
cmc
pop
cs
incl
xor
imul
stos
cmp
pusha
push
cmp
jno
mov
js
je
fs
aas
mov
push
sbb
aaa
and
adc
icebp
or
cwtl
xchg
sub
dec
in
rcl
jno
add
cmp
fildl
cld
mov
sbb
aaa
js
xor
pop
ret
mov
out
adc
add
push
repnz
mov
sub
sarl
jae
cld
mov
cmp
or
shrl
stc
mov
gs
dec
faddp
jbe
cmp
loop
mov
rcr
jnp
notb
hlt
cmp
xor
test
adc
inc
sar
mov
das
mov
dec
fidivs
add
jge
push
push
lds
pop
push
pop
jle
ss
cmpsl
sub
adc
scas
ret
cli
xor
cli
cwtl
clc
fistl
inc
jp
cwtl
xor
and
xchg
mov
sbb
jmp
mov
arpl
and
dec
mov
cli
jecxz
sub
pop
test
inc
pusha
nop
pop
mov
add
mov
fs
mov
add
filds
mov
xchg
bound
dec
jge
and
and
clc
lods
pop
sbb
xor
mov
push
aaa
imul
pop
out
jg
fisttpl
cs
shll
outsl
popa
xor
rorb
cmp
in
mov
inc
ss
lds
testb
repnz
jbe
sbb
pop
in
mov
mov
ret
dec
testl
lods
mov
arpl
cmpsb
mov
sti
sbb
repz
sub
xor
sbb
fbstp
xlat
pushf
pop
mov
imul
in
sbb
cmpl
sbb
push
je
jg
shrl
jno
push
dec
ret
stc
mov
dec
fcoml
cld
cmp
aaa
sahf
in
inc
rcl
pop
popa
scas
add
push
push
xor
repz
cli
inc
dec
push
sub
pop
fnsave
fchs
data16
inc
sbb
and
dec
xchg
lods
push
sbb
push
mov
add
push
shll
pop
pop
push
cwtl
les
jp
xchg
pop
lcall
push
inc
hlt
mov
jo
lock
ljmp
cmp
ljmp
cmc
fstpl
in
clc
insb
lds
je
mov
xchg
imulb
mov
sub
mov
leave
adc
popa
leave
jbe
mov
loop
insl
mov
test
xor
push
fdivrp
lret
aam
daa
mov
cli
popf
iret
fdivl
test
dec
rorl
imull
or
add
xor
stc
or
mov
shll
sbb
mov
jne
or
mov
push
sub
mov
sti
and
pop
jecxz
mov
in
sti
lcall
xor
adc
ss
aam
into
movsb
dec
or
dec
lahf
jmp
int3
adc
ja
dec
mov
xor
adcl
cltd
movsl
push
mov
pop
sub
sub
insl
jmp
cmpsb
cmp
mov
cmc
and
jb
pop
push
add
sarb
shll
loopne
leave
pushf
rclb
xor
lock
cltd
popf
xchg
pushf
loopne
add
inc
mov
into
push
xor
ljmp
and
movsb
mov
in
inc
repnz
rcrb
pushf
push
je
xchg
addr16
scas
sbb
dec
addl
mov
pop
inc
or
in
sbb
sub
aam
cmp
dec
jge
lds
mov
mov
xchg
cmp
rcrl
xchg
push
push
mov
adc
fidivl
mov
cmp
cld
shlb
in
xorb
fs
das
loope
pop
mov
fdivr
dec
mov
je
daa
cwtl
push
aas
push
dec
js
mov
es
sub
pop
vcvtdq2ps
cmpsb
or
stc
push
mov
bnd
xchg
push
cli
decb
pop
cmc
jle
adc
clc
fwait
mov
jb
jo
pop
xchg
mov
dec
jnp
mov
fstpl
mov
and
imul
push
pop
orl
fiadds
pop
rorb
aad
ljmp
sarl
subl
das
mov
daa
imul
sbb
outsb
mov
dec
jne
cmp
pusha
cs
pushfw
lock
push
pusha
fdivrl
cltd
mulb
outsb
addr16
adc
mov
add
cmpl
xchg
inc
es
mov
shlb
sub
dec
pop
or
ja
cwtl
movsb
mov
xchg
cmpsb
int3
sbb
fisubrl
in
xchg
mov
int
cmp
stos
stos
sub
or
cmpb
pop
fisttpll
pusha
or
and
aaa
xor
xchg
jae
fnstenv
clc
cmp
mov
stos
sbb
outsb
cmp
ja
scas
popf
aas
mov
cld
push
das
mov
jno
cs
sub
pop
cs
mov
in
outsl
daa
ljmp
sub
xchg
insb
fwait
ss
mov
int
mov
add
sub
inc
out
test
or
adc
adc
mov
dec
lea
inc
push
int
sub
cmpb
adc
push
fisubl
mov
insl
or
cmpsb
cmp
and
into
xor
add
lahf
push
cmp
arpl
jecxz
xor
fs
lret
xchg
mov
jg
mov
mov
push
mov
jp
out
cmc
adc
add
stos
ret
or
loope
je
pop
mov
leave
fldenv
sub
out
es
mov
adc
mov
push
out
in
mov
mov
push
mov
aaa
iret
sub
sbb
repz
jo
fsubrs
nop
pop
jne
aad
mov
call
loopne
movsl
lret
stos
std
adcl
mov
movb
xor
or
cmpsl
cmp
lret
stos
add
mov
cmp
mov
jnp
mov
addl
xor
fcomps
mov
pop
loopne
pusha
data16
push
fidivs
jle
gs
mov
dec
adc
xor
lcall
jbe
out
loopne
clc
scas
mov
fimuls
bnd
lea
mov
ret
icebp
gs
fdivrp
cmpsb
mov
add
or
ja
adc
loope
and
sub
mov
jnp
push
mov
popa
mov
pop
jle
push
push
mov
cmp
cltd
lods
sub
xchg
mov
inc
mov
mov
pop
into
testl
mov
call
lea
mov
jle
cmp
xchg
arpl
sahf
nop
jbe
pop
inc
jmp
nop
inc
pop
sub
sbb
stos
pop
test
pusha
sahf
add
outsb
lea
sar
dec
xor
lods
stc
lods
jmp
push
adc
jb
int3
dec
loop
sub
sub
ret
inc
lods
mov
ja
jae
xor
and
leave
sahf
jo
int
adc
repz
lods
jno
jge
sub
mov
pop
repz
sbb
repz
popf
or
andl
loop
popa
xchg
cs
fwait
dec
dec
fwait
push
das
cmpsb
ss
xor
test
clc
icebp
and
test
add
jne
xchg
push
jge
lock
lock
xchg
add
shlb
loopne
mov
add
and
pop
inc
out
and
jne
mov
repnz
pop
jl
std
sbbb
jg
and
xor
xlat
jnp
lds
pop
add
adc
int
inc
in
xchg
pop
imul
adc
xor
mov
add
xchg
cmp
ret
aam
in
loopne
inc
lahf
mov
movsb
mov
xor
or
es
repnz
lcall
mov
cmpb
das
xchg
inc
xor
stos
mov
cmp
add
dec
lret
cltd
or
nop
repnz
inc
loopne
ret
cmpsl
push
into
mov
dec
call
push
lcall
cmp
mov
fcompl
sub
push
or
and
inc
fmuls
sbbb
jp
clc
and
xchg
xchg
sub
lret
scas
jle
xchg
pusha
adc
add
cwtl
pop
sub
mov
adc
jo
iret
or
test
mov
imul
mov
xor
inc
cltd
lock
cld
pop
cmc
lea
insl
dec
cld
jne
roll
push
addr16
or
adc
mov
std
popa
inc
popa
pop
arpl
stos
movsl
xlat
aas
inc
lret
and
jns
ljmp
add
push
pop
pop
sarb
xor
fsubrl
sarb
imul
xchg
dec
movsb
ret
sub
fcoml
and
imul
test
mov
shrb
adc
fwait
mov
ljmp
or
adc
fwait
bound
in
add
pop
aam
cmpb
in
es
or
stos
mov
and
insl
jp
mov
mov
subb
mov
push
rcl
mov
ljmp
cmpb
adc
mov
mov
lahf
sub
jne
or
pop
test
lods
lret
push
arpl
jno
xor
mov
int
mov
sub
mov
ror
inc
mov
and
cwtl
out
add
jbe
out
or
mov
leave
jae
out
jp
push
pop
mov
imul
pop
sub
clc
adc
jle
popl
or
adc
mov
add
cmpsl
inc
push
pop
cltd
jecxz
sub
xchg
bndldx
out
xchg
and
add
addr16
mov
icebp
fwait
mov
lret
xchg
popa
lock
push
clc
mov
inc
dec
movsb
cmp
mov
fiaddl
mov
xor
rclb
pop
inc
ljmp
out
aas
sbb
loopne
push
aas
and
pop
adc
cwtl
out
arpl
mov
lret
sbb
fsubl
stos
sub
jge
leave
movsl
idiv
iret
dec
mov
inc
inc
push
fisubrl
mov
pop
jg
cltd
stos
stc
hlt
push
outsl
out
pushf
xor
negb
cmp
sub
or
je
insb
ss
pop
dec
add
and
sbb
jge
add
xor
push
push
push
xlat
pop
sub
dec
sub
repz
xchg
leave
xor
push
pop
cmp
pop
dec
iret
sub
fildl
cmpsl
add
call
mov
and
cmp
add
xchg
fsub
shrb
andb
jne
jno
jecxz
inc
pmaxsw
dec
mov
push
hlt
in
push
sub
daa
jns
ret
ss
inc
jmp
scas
movsb
bound
jp
scas
mov
pushf
inc
xchg
or
mov
xor
dec
out
add
jbe
adc
in
adc
in
cmp
pop
stos
sub
mov
insb
int3
pop
sbb
lret
je
sub
mov
jnp
pop
test
js
aam
mov
js
andl
or
push
das
sahf
push
push
or
scas
shll
adc
mov
sbb
or
or
sbb
out
movsl
sti
inc
rcr
push
mov
ss
fsubrs
or
fs
dec
fnstenv
add
enter
adc
xorl
push
mov
xchg
int
push
mov
lock
stos
loopne
mov
pushf
andb
add
mov
jne
shrl
sahf
ret
mov
push
jle
cltd
loope
arpl
adcl
fldl
jp
or
add
aad
sti
out
push
ljmp
enter
fidivrl
mov
push
in
stos
lret
movsb
test
pop
stos
add
and
out
fdivrs
jl
inc
push
dec
jecxz,pn
sbb
mov
std
int3
pop
dec
cmp
xor
cmc
pop
add
inc
pop
inc
out
jb
bound
rol
mov
push
or
lahf
ret
pop
xchg
bound
cmp
lahf
xchg
fcoms
mov
push
dec
cmc
iret
and
fsubr
cmpsl
pop
pusha
fmulp
jmp
popa
xchg
mull
inc
add
and
je
lds
je
outsb
sub
pop
andl
lods
fisubrs
mov
pop
push
or
mov
xchg
push
mov
cmpsl
sub
enter
fwait
mov
jnp
mov
jecxz
sbb
mov
xchg
leave
push
mov
mov
insb
xchg
sub
stos
pop
inc
std
sub
sbb
mov
ss
mov
fwait
pop
pop
xchg
ljmp
mov
pop
out
pop
in
into
sub
mov
jle
outsb
inc
lods
sarl
inc
pusha
stc
dec
icebp
push
icebp
cmp
adc
aaa
dec
pop
dec
pushf
pop
lock
push
adc
push
enter
cli
xor
aad
mov
rcrl
or
dec
clc
fldenv
dec
insl
leave
or
ficomps
in
mov
insb
addr16
jno
adc
ret
int
mov
pusha
push
cmp
jg
mov
inc
add
mov
nop
icebp
sbb
sub
inc
push
stos
mov
jmp
cmpsl
cwtl
mov
adc
mov
fdivrs
outsb
mov
pusha
xchg
cld
dec
jnp
mov
push
iret
ljmp
pop
cmp
or
and
pop
push
dec
xchg
lret
sub
imul
test
mov
in
dec
jge
mov
and
fisttpl
xchg
jne
iret
sbb
insb
jns
push
add
pop
call
and
mov
shrb
mov
arpl
cmpsb
dec
adcl
fidivl
movsb
add
loope
xor
sub
mov
or
les
and
push
pop
jle
loope
adc
xor
fcoml
idivl
out
jnp
cld
push
subb
lds
fisttpl
int3
inc
xor
ret
mov
jne
dec
pop
movsl
mov
xor
mov
loop
lds
inc
fdivrp
insb
data16
divl
mov
out
bound
lods
mulb
cmp
push
cmpsb
add
stos
sarb
mov
repz
pushf
sbb
std
jo
test
xor
lret
clc
cld
insb
repz
sub
xchg
lods
shl
pop
aam
dec
mov
in
insl
pop
out
imul
stos
add
rorl
pop
movsl
mov
stc
pop
std
mov
dec
loope
int3
outsl
cmp
xor
adc
add
jns
mov
inc
jae
inc
repz
mov
dec
mov
nop
test
cmc
mov
das
jecxz
adc
repnz
push
imul
out
sbb
ds
pop
ja
cmpsl
scas
fcompl
pop
cld
imul
add
es
mov
xor
cwtl
cmp
add
outsb
subb
loopne
xchg
add
fsts
push
arpl
out
rcll
sub
jmp
aad
and
ja
mov
mov
fnstcw
push
repnz
sub
mov
xchg
js
and
fsubl
in
lods
fcmovnu
rclb
leave
xchg
aaa
stos
mov
push
cmpsl
pop
lock
jns
adc
pop
pusha
js
pop
aas
popa
scas
in
dec
jle
fisubrs
jo
aad
adc
jecxz
ret
jmp
int3
ja
mov
subb
movsb
sbb
xor
orb
xor
jmp
loope
jecxz
fistpl
jbe
mov
stos
pop
jecxz
pushf
insb
inc
sti
and
pop
call
add
rcll
dec
push
dec
and
int3
imul
mov
inc
dec
sbb
pop
mov
pop
out
add
ficompl
pop
push
jo
push
sub
sbb
pushf
mov
and
sub
inc
inc
xlat
lret
lret
mov
ret
mov
scas
inc
outsb
test
dec
mov
xor
jp
stos
ret
sub
lock
xchg
jp
mov
inc
push
push
ret
xchg
in
or
jbe
les
dec
jp
xor
out
repz
loopne
sub
fdiv
sahf
mov
or
inc
pop
addr16
push
daa
push
imul
cmp
cld
movsl
xlat
mov
cltd
mov
xor
jae
ja
and
or
pop
insl
push
insl
push
or
int
sbb
or
xchg
popf
sub
out
or
jnp
adc
mov
rcrb
fs
add
test
adc
jnp
inc
xchg
idiv
loopne
iret
jbe
ror
lods
fists
test
cmpsb
imul
fcoml
popf
les
fisttpll
sbb
lret
cli
dec
jmp
inc
jns
std
fwait
xchg
fcmovnb
jmp
adc
test
jb
repnz
or
jl
mov
cmpsl
aaa
stc
inc
pop
pop
cmp
sbb
xchg
pop
cs
cwtl
out
inc
loopne
into
inc
cmp
das
out
add
sti
pop
xlat
sahf
and
sub
cmpsb
jbe
popa
mov
sbbb
mov
in
xchg
mov
adc
cmp
pop
in
aam
xchg
fwait
push
unpckhps
sub
push
adc
fcompl
int
outsl
loop
sbb
loope
int
sbb
xchg
rorl
add
jae
std
add
mov
sub
std
sub
cld
test
mov
or
icebp
jecxz
jno
xchg
push
cwtl
or
inc
dec
imul
pop
iret
pusha
xchg
icebp
add
pop
cmc
call
xor
fldenv
inc
inc
pop
push
pop
pop
mov
xlat
mov
push
fwait
iret
push
nop
xor
mov
es
insl
push
adc
jmp
daa
ret
inc
rcrl
dec
ja
scas
inc
pusha
daa
js
sbb
je
pop
aaa
xor
and
jecxz
rcrl
lock
loope
jns
cmp
out
mov
xor
std
aam
bound
adc
inc
stos
pop
pushf
dec
pop
in
hlt
inc
or
push
addps
sbb
out
adc
or
insb
sahf
pop
xor
pop
adc
rcrb
lahf
dec
cld
pop
sti
lahf
cld
mov
pop
adcb
std
cld
adc
shll
add
mov
cwtl
repnz
and
cmp
cmpsl
rcll
cmpsb
push
hlt
jmp
lret
cmp
test
inc
loop
je
pop
inc
push
xchg
test
pop
xchg
rorl
scas
into
push
cmp
mov
addr16
mov
pop
xor
fidivl
or
pop
cwtl
gs
cmp
push
dec
movb
dec
imul
mov
out
mov
sbb
ss
dec
dec
adc
cltd
imul
push
enter
add
rol
pop
and
pop
scas
sub
push
cmp
test
or
mov
inc
inc
push
lahf
nop
jecxz
out
cltd
add
mov
lods
faddl
sarb
push
push
pop
jge
in
sub
mov
lcall
mov
jge
jle
pop
test
mov
movsl
or
mov
push
daa
xchg
fsts
push
aas
leave
mov
icebp
add
push
jno
dec
push
or
or
pop
shlb
cltd
push
cs
out
cmp
dec
sbb
pop
push
jb
cli
hlt
dec
or
sub
out
dec
adc
cmp
sub
push
cmp
sub
ficoml
jmp
jnp
push
cmp
push
fsub
push
test
addr16
sti
push
push
out
ljmp
cmpl
or
cmp
push
clc
and
sub
pop
dec
adc
xor
ss
pop
dec
add
mov
scas
xorb
repnz
sub
imul
test
fwait
sbb
shll
fucomip
and
and
aad
add
sbb
cwtl
rcll
out
int3
mov
dec
les
call
add
das
rcll
jb
xor
mov
cmpsb
fbld
lret
push
test
pop
js
sbb
jge
xor
enter
fisubs
lahf
adc
pop
adc
mov
inc
push
in
pop
adc
testl
inc
scas
cs
jnp
jno
fstpl
cmpsl
aas
cmpb
les
dec
cmpsl
add
lods
std
clc
enter
dec
int3
dec
std
movsl
sarb
or
stos
add
movzwl
adc
jns
or
push
dec
push
mov
dec
cmp
jns
outsl
push
pop
mov
scas
jns
psubsb
into
loope
xchg
in
rorl
roll
sbb
push
inc
outsl
pop
lea
mov
stos
and
sub
mov
or
sbb
pop
or
mov
and
in
nop
fs
cld
inc
fbld
push
and
in
dec
fcoml
mov
jo
add
les
mov
call
pop
pop
and
mov
xchg
xor
fucom
int3
leave
jmp
movsl
pop
lret
inc
sbbb
test
movsb
ds
mov
adc
aas
shll
mov
pop
cltd
in
mov
lods
mov
mov
aad
mov
mov
dec
add
jnp
in
popa
mov
outsl
mov
ljmp
adc
mov
ficoml
arpl
out
mov
inc
xchg
pop
xchg
fsubrp
lret
jnp
mov
add
push
xor
lret
sarl
clc
shlb
sub
mov
sub
fadds
mov
mov
insb
xor
stc
cmp
dec
sbb
ljmp
call
outsl
dec
pop
outsl
int
jl
les
push
add
cmpsl
rcrb
pop
gs
adc
jmp
jl
sub
sbb
pop
ljmp
dec
mov
bound
sbb
mov
cltd
mov
inc
andl
or
push
and
push
movsb
mov
je
cmp
jae
mov
ret
or
sbb
in
sub
addl
cld
movsl
outsl
sahf
mov
mov
xor
icebp
insb
dec
xchg
cmpsl
pop
arpl
cmp
push
push
inc
shll
inc
sbb
sti
cmovns
or
imul
ljmp
movsl
incl
xor
cmpb
int
xor
jecxz
dec
std
ss
out
cmp
sub
fstpl
pop
gs
mov
adc
pop
cmp
cmp
daa
sbb
push
out
movlps
lea
popa
mov
pop
push
jne
inc
inc
sub
mov
test
cmpsl
pop
xchg
jge
int3
outsl
sti
push
pop
cmc
in
mov
addr16
push
cmp
pop
lods
xlat
sub
jmp
repz
adc
out
cwtl
xchg
mov
shll
ror
mov
stc
stos
movsl
mov
xchg
sbb
and
sti
stc
nop
jne
mov
jle
int3
test
add
sarl
lahf
ret
lea
mov
pop
mov
aam
in
jb
bswap
movsl
dec
adc
fbld
cli
out
adc
repnz
cmp
test
fisttps
mov
inc
gs
cmc
sti
inc
dec
stos
insb
push
add
xchg
lahf
or
add
inc
mov
mov
repz
cmp
push
ficomps
jae
out
in
leave
repz
and
inc
bound
in
add
mov
sahf
lret
add
mov
scas
ret
pop
inc
lahf
sbbl
lds
sbb
mov
fiaddl
scas
jge
jb
in
stos
cltd
xchg
xor
pusha
addr16
mov
insl
test
out
pop
ret
push
jbe
xor
and
ja
mov
cmpsl
aam
in
adc
add
int
or
or
imul
or
pop
adc
and
leave
inc
sbb
jnp
adc
fstl
pusha
test
sbb
jo
repz
jmp
lret
add
jl
inc
rorl
dec
movsl
mov
lods
aam
add
push
jo
inc
incl
sbb
bswap
repnz
add
ss
pop
sbb
lods
into
lret
or
ja,pn
mov
push
pop
addr16
test
adc
mov
jno
xchg
mov
mov
stc
arpl
lods
sub
xchg
das
mov
or
mov
aaa
daa
jno
mov
xchg
in
inc
push
js
and
leave
mov
dec
mov
in
and
std
jbe
cwtl
shr
and
xor
push
and
minps
or
ss
xor
push
xor
out
cmp
mov
ja
call
sti
cmp
sub
jo
xor
mov
aas
push
pop
mov
and
aad
lock
mov
jae
mov
cli
mov
dec
mov
mov
jecxz
pop
mull
inc
pusha
stos
or
inc
sbb
mov
xchg
dec
lock
mov
and
lods
inc
lcall
add
sbb
mov
cmp
sti
mov
xor
add
mov
test
bound
xorb
or
fdivl
mov
movsl
inc
sbb
jne
sti
inc
aas
mov
dec
mov
xor
sbb
pop
mov
cmpb
flds
lcall
enter
sbb
daa
fildll
push
mov
sahf
cmpsb
adc
cmc
fs
repz
cmovp
lahf
sub
xchg
daa
push
nop
fdiv
and
cli
mov
lret
mov
pop
or
mov
test
push
lahf
testl
cmp
dec
sub
pop
aas
rolb
inc
ds
and
orl
jns
xor
outsb
addb
cmp
or
jae
push
push
sub
sar
push
mov
out
int3
hlt
jp
mov
movsl
lds
fs
adc
into
fcoml
outsl
dec
xor
push
dec
scas
gs
lcall
xchg
fprem
or
cmc
inc
cmp
adc
jecxz
jge
or
and
or
rcr
test
aas
movsl
rorb
cli
movsb
decb
jns
adcb
cmp
data16
pop
enter
mov
frstor
pop
fnstsw
gs
or
cmc
pop
test
adc
repz
push
dec
push
jecxz
or
and
cmpsl
lock
jle
add
adc
shrl
and
mov
sub
repz
decb
sub
jp
xchg
js
pop
aas
adc
jbe
xchg
sub
insl
cmpsl
dec
insb
enter
jl
stos
dec
mov
dec
test
pop
gs
in
into
sub
jbe
cmc
ficompl
in
cmp
xor
hlt
sub
or
mov
int3
mov
cmpsb
stos
xor
jns
cmp
xor
inc
xchg
outsb
mov
and
mov
pop
cmpsl
stc
pop
mov
inc
push
add
mov
shll
jg
xchg
loop
xchg
pushf
and
test
mov
pop
bound
ljmp
push
imul
test
std
mov
push
in
clc
fisubs
rcl
mov
cltd
or
sbb
add
data16
outsb
mov
add
dec
mov
jne
fiadds
push
call
lds
sbb
inc
adc
push
sub
shrb
jecxz
and
push
mov
scas
adc
jae
nop
outsb
hlt
fdivs
cli
inc
xlat
cmp
dec
lahf
sbb
lock
lods
mov
outsl
and
push
mov
or
insl
add
shlb
cmpsl
add
jo
lea
popf
push
add
enter
mov
shl
push
pusha
rcrb
sbb
push
inc
mov
mov
std
jl
das
stc
leave
loope
add
ficoms
rcrb
ss
and
das
loopne
mov
in
mov
cmpsl
adc
xchg
xor
xchg
adc
or
je
push
adc
repz
jge
sbb
push
subl
cmp
dec
pop
scas
xchg
mov
or
jecxz
cmp
sarb
lcall
inc
popa
xchg
leave
imul
fimull
xor
ret
test
sub
or
jbe
loopne,pt
or
jbe
and
xchg
or
adc
xchg
xchg
mov
pop
int
dec
lret
sbb
jmp
cmp
jb
mov
dec
fs
je
repz
int3
jmp
in
sbb
into
mov
arpl
outsl
flds
xor
fisttpll
pop
xchg
adc
call
int3
mov
loope
fs
jl
cmpb
inc
xchg
aas
mov
shl
xchg
shll
in
xchg
sahf
testb
bound
aaa
cwtl
jmp
push
loop
add
adc
xor
mov
daa
inc
lahf
mov
in
xchg
inc
addl
xor
adc
inc
pop
repnz
and
push
push
cmp
jb
lock
jo
lods
in
jmp
dec
sub
xchg
push
sub
sarl
push
outsb
fisttpl
add
pop
je
lcall
jno
cmp
push
rcrb
aaa
cmc
rolb
popa
mov
mov
mov
pusha
or
jp
in
xchg
pop
std
fsubp
mov
shll
xchg
ljmp
jnp
fcmovu
adc
leave
cmc
xchg
add
les
xchg
and
cmp
fs
es
fldcw
jg
and
outsb
pusha
jae
xchg
sbb
loop
dec
negb
fnsave
pop
in
pop
jge
ss
ja
jae
ret
mov
imul
xchg
stos
into
rolb
lods
pop
cwtl
or
sub
jl
add
nop
popf
mov
push
orb
add
or
xor
inc
pop
or
jp
adc
push
or
and
test
out
sbb
idivb
mov
and
out
inc
stc
aaa
mov
cld
mov
sub
adc
jno
std
sbbl
fdivrl
push
lods
dec
sub
pushf
mov
fs
cmpb
sub
mov
andb
gs
adc
and
dec
push
push
das
les
movsb
adc
test
andl
fidivs
inc
push
lretw
jp
rolb
das
lea
adcb
insl
dec
jecxz
sbb
cmc
mov
push
ret
jb
xor
out
mov
xchg
ret
xor
adc
or
inc
add
shl
mov
cmpl
pop
inc
dec
mov
cmp
push
pop
imul
ds
in
lahf
cltd
add
cmpsl
je
nop
jl
loop
push
loope
xor
mov
pop
je
dec
add
stos
clc
adc
lret
cmpsb
push
imul
xor
pop
cmp
xor
and
rolb
imul
mov
ror
inc
stos
xchg
add
xor
pop
imul
sub
repnz
mov
push
int
cmp
mov
lahf
jb
jbe
add
cli
cmp
mov
pushf
mov
jmp
and
xchg
xor
test
addr16
bound
outsl
leave
inc
mov
jbe
cmc
iret
adc
mov
add
mov
out
mov
popa
push
xor
xchg
push
mov
xchg
aas
jno
mov
fcmovbe
xchg
popa
sbb
mov
cmpsb
popa
jmp
jo
insb
add
cmp
icebp
or
cmpsb
cmpb
je
test
fists
ja
iret
fwait
lock
sti
scas
sbb
sbb
stos
xor
sbb
icebp
pop
sbb
lods
and
push
add
mov
scas
pop
or
cmp
jle
bnd
lret
push
cmp
mov
pop
adc
fdivrl
stos
mov
push
clc
jg
mov
pop
jbe
jo
push
jle
jg
mov
in
cmp
aam
cmp
mov
lea
out
fidivrs
ds
xchg
jmp
and
mov
stos
jmp
mov
cs
pop
sarb
jbe
sahf
ds
xlat
addr16
pop
clc
lret
push
int
pushf
pop
ja
pop
repz
xor
inc
cmpsb
test
mov
jo
inc
or
fists
nop
sbb
rolb
into
les
rol
mov
inc
sbb
cmpsb
dec
xchg
mov
mov
mov
jecxz
in
mov
decl
cmp
mov
push
xor
push
rol
cmp
dec
movsl
jns
dec
dec
aam
xchg
mov
mov
dec
subb
or
repnz
repz
mov
cmpsb
into
in
mov
cmc
out
rcll
pop
ret
in
fs
insl
popa
sbb
xorb
clc
rcr
xchg
mov
push
fucomp
mov
adc
add
fdivrl
cmp
out
jo
dec
cmp
imul
mov
int
stc
xor
insl
mov
rol
pop
pop
roll
inc
sbb
pop
push
out
pop
sub
scas
insb
pop
xchg
aaa
xchg
fdivrl
dec
mov
pop
cld
inc
dec
or
cli
mov
add
cld
arpl
ret
insb
jae
scas
xchg
pop
xor
cmc
sub
or
or
iret
outsb
jp
xchg
xorb
aad
push
cmpsl
cmpsl
shlb
xchg
and
in
inc
and
pop
ja
imul
iret
lret
fdivrs
mov
sbb
or
cs
xchg
xchg
hlt
sbb
pop
cmp
xor
scas
xor
out
or
cmp
and
or
push
add
inc
inc
adc
push
fldt
inc
jle
pop
mov
mov
or
sahf
stos
jmp
loope
lret
fnstenv
fistpll
cmpsb
add
inc
pop
or
cltd
push
ret
dec
lahf
dec
push
jae
out
gs
sub
aad
lret
or
outsl
imul
xor
cmp
cmp
outsb
xor
addr16
or
inc
xchg
mov
push
je
ret
cmc
lods
or
mov
add
mov
pop
xlat
push
xlat
in
push
sub
push
ss
gs
enter
mov
inc
and
push
lret
mov
in
ret
xchg
js
xchg
xchg
loop
add
mov
add
cmp
lods
arpl
and
cli
xchg
mov
adc
rcrb
mov
xchg
push
sub
add
push
ss
aam
adc
mov
out
jns
les
stos
faddl
xchg
lret
add
mov
mov
insb
ja
xchg
cmpsb
dec
adc
shll
mulb
addr16
mov
ret
pop
sub
fisubl
push
out
ja
jp
xor
pop
inc
mov
fstl
or
mov
mov
push
fxch
mov
popl
mov
sbb
push
leave
push
mov
inc
test
cltd
mov
shl
lods
pop
repnz
cmp
fwait
adc
pop
bound
push
idiv
push
sbb
out
lea
icebp
jg
lret
sahf
xchg
shll
adc
test
ljmp
dec
pop
adc
xorb
push
movsb
mov
lock
std
cs
insb
out
fldt
test
add
jl
arpl
sub
mov
inc
ljmp
sbb
pop
out
adc
lcall
jmp
gs
ljmp
pcmpgtd
inc
and
ja
jl
leave
jnp
mov
jo
xchg
xchg
cmp
lret
sbb
aas
sbb
push
cmpsl
xor
lret
fdivl
popf
xor
add
pop
int
call
jns
ret
push
int3
xor
les
popf
rorl
mov
pusha
test
and
fcmovbe
imul
or
repz
test
push
frstor
cmp
jg
mov
inc
jne
inc
cmpsl
movsl
mulb
test
pop
call
hlt
rclb
ret
xor
cmp
xor
popf
lea
dec
xor
pushl
out
sub
jbe
pop
push
gs
pop
fldcw
jmp
push
jp
lods
xchg
mov
test
arpl
add
cltd
je
dec
mov
fwait
sbb
nop
sub
imul
dec
es
xchg
mov
and
pop
aad
insb
pop
xlat
test
or
adc
or
and
mov
cli
jae
mov
mov
dec
push
testb
shr
rcrl
das
lret
inc
hlt
jg
adcb
cli
out
xorb
dec
sub
mov
pmaxsw
pop
pop
fisubrl
add
mov
pop
in
fnstenv
mov
xchg
jg
xor
daa
in
inc
das
pinsrw
sbb
push
rorl
loop
scas
fsubrs
popf
sub
jp
dec
cmp
pop
loopne
movb
test
pop
push
and
mov
or
jno
add
ljmp
outsl
cwtl
ds
cld
ret
and
jmp
and
cli
inc
jnp
push
gs
jp
lods
xchg
mov
sub
dec
or
mov
push
and
cmp
xchg
test
pop
push
dec
dec
cmp
push
cmpsl
cwtl
or
sbbb
xchg
pusha
test
or
out
sbb
jae
fsubrs
mov
cmpsl
sbb
and
dec
fwait
cmp
jge
xor
insl
inc
inc
repz
inc
flds
inc
dec
jo
push
mov
push
sbb
xchg
mov
jbe
test
lods
dec
mov
sbb
xchg
dec
jg
shrl
push
stos
out
mov
push
xor
sub
sub
int3
sbb
scas
dec
fsubr
ret
add
into
jnp
or
mov
mov
push
pop
push
mov
mov
test
mov
xchg
sbb
and
mov
push
or
cwtl
mov
or
sub
inc
mov
sbb
dec
imul
cmpsl
xchg
push
cmp
lahf
cwtl
cmc
mov
outsl
mov
push
jmp
mov
mov
bound
iret
fs
inc
mov
je
mov
jno
cmp
das
fs
fwait
testb
sub
fisttps
lret
cmp
icebp
aas
dec
inc
fs
jo
push
aas
dec
or
int3
cltd
jmp
aad
gs
test
inc
ljmp
cmp
stos
into
or
mov
filds
sub
popf
shl
or
push
pop
jmp
loopne
sub
sub
ret
mov
xchg
out
dec
sub
jbe
movsl
mov
add
outsb
aam
mov
cltd
icebp
sub
push
inc
lahf
mov
aas
gs
adc
add
out
inc
lahf
and
add
clc
mov
arpl
fwait
fs
pop
mov
fsubrl
int
movsb
cli
mov
clc
arpl
stos
cmc
add
xchg
xor
fs
int
sbb
std
rorb
xchg
fxtract
loop
outsb
add
sbb
inc
push
fistps
mov
ret
lods
into
mov
in
jecxz
out
jnp
cmp
pop
pop
lcall
arpl
cmc
pop
fs
std
in
ja
imul
repnz
mov
in
sub
in
mov
out
adc
xchg
xorl
lahf
subl
mov
je
data16
mov
sbb
popa
in
mov
cmp
xor
pop
push
and
cli
or
or
in
cli
outsb
pop
dec
inc
mov
cmpsb
jne
mov
dec
add
pop
jmp
sub
sub
or
inc
clc
nop
int3
mov
jns
lods
lret
mov
inc
hlt
mov
xorb
mov
mov
pusha
and
sahf
js
test
xor
in
cmpl
popf
ret
cmp
or
cmp
leave
mov
add
adc
xor
out
push
pop
push
lock
sbb
clc
mov
xchg
js
data16
xchg
outsb
xchg
jmp
fwait
and
cltd
mov
push
mov
dec
ss
push
dec
pop
and
dec
sub
stc
jnp
cmp
push
sahf
inc
insl
loop
jae
xor
add
push
arpl
popf
push
lahf
movb
sub
mov
mov
jae
sahf
add
pop
jp
sub
lods
jb
mov
and
das
cs
and
es
or
jecxz
call
data16
cmpsl
xor
adc
fmull
dec
insb
mov
pop
inc
movsb
jne
test
sub
sbb
ja
test
cmc
seto
test
adc
mov
xor
add
leave
arpl
int3
push
mov
inc
hlt
test
xchg
xchg
adc
addb
je
jg
iret
ja
fidivrl
lock
adc
sti
mov
pop
and
enterw
jne
popa
xchg
mov
popa
or
out
sbb
nop
and
xchg
mov
push
xchg
insb
mov
lock
jl
jmp
in
lahf
xchg
out
mov
das
fs
mov
in
inc
int
inc
jb
stos
bound
imul
aam
shlb
mov
jle
mov
rol
inc
inc
xlat
sbb
in
int3
subps
out
xor
fbstp
inc
mov
mov
fldcw
bound
xchg
sti
adc
cmc
inc
andb
pop
push
cmp
push
push
xor
pop
ret
inc
push
mov
ljmp
mov
mov
push
xchg
subb
cltd
push
frstor
int
push
xchg
add
mov
adc
inc
aam
mov
dec
sub
dec
sbb
push
mov
test
data16
or
or
sbbl
int3
fwait
lods
shl
dec
sub
jns
xor
add
push
das
lea
mov
jmp
imul
inc
xchg
xchg
mov
xchg
xchg
insl
nop
xor
mov
jo
mov
stos
cmpsb
dec
rcr
addr16
push
dec
jecxz
rcll
rol
lret
mov
movsb
mov
mov
out
push
cmp
push
add
cmp
jg
into
and
int
lret
pop
adc
enter
stos
mov
sbb
mov
roll
fisubrs
jo
das
gs
ljmp
inc
es
enter
addr16
sub
sbb
mov
push
xlat
aaa
cld
jp
pushf
in
jne
and
enter
or
fimull
mov
ret
rorb
add
dec
fsts
cmp
mov
cmc
nop
in
pusha
fcomip
jns
lock
dec
ret
movsl
sub
pop
sub
push
sub
sub
les
mov
movsb
out
push
or
sub
mov
jmp
adc
nop
popa
das
xlat
in
pop
out
mov
dec
je
mov
fisubrl
push
or
xchg
aaa
je
out
aas
pop
jno
jg
sbb
dec
inc
es
gs
cmp
xabort
push
adc
dec
pop
mov
dec
pop
mov
add
iret
add
aad
jno
mov
mov
aas
cmp
pop
cmp
jmp
mov
mov
dec
jno
lock
icebp
mov
xor
movsl
lea
lea
cld
sbb
hlt
xor
lcall
scas
lea
sub
lahf
sub
mov
nop
movd
rorb
in
loope
or
xchg
out
xor
mov
or
out
dec
aam
push
push
es
lock
mov
insl
pop
aad
lock
ret
fldt
inc
ja
scas
mov
mov
mov
push
mov
data16
cmp
inc
aaa
and
shll
or
insb
inc
cmp
pusha
pop
mov
mov
pop
mov
push
pop
sbb
repnz
mov
add
fldt
and
movsb
push
push
cmc
sub
push
cmpb
test
mov
or
or
out
scas
sbb
fsubr
and
push
and
std
mov
mov
mov
add
ss
insl
adc
cmpsl
stos
sar
adc
adc
jl
in
or
mov
pop
adcl
mov
stc
arpl
fucom
cmpb
mov
cmpsl
jmp
xchg
xchg
xor
lock
push
push
add
out
addr16
arpl
cmpsb
cmpsb
sbb
call
out
sub
jge
xor
push
inc
dec
mov
sbb
sbb
scas
xchg
repz
cmpxchg
lret
mov
sub
xor
in
mov
add
test
pusha
push
enter
jo
fldz
and
xchg
or
dec
movsb
pop
dec
repz
inc
mov
scas
dec
out
repnz
mov
sbb
dec
int3
inc
push
mov
in
aas
test
push
pop
iret
in
xchg
fsts
lods
pop
arpl
shrb
std
andb
call
lcall
in
adc
cld
addr16
xchg
push
mov
jns
add
inc
sti
add
movsb
test
stos
aam
or
es
jecxz
adc
jnp
inc
ja
dec
inc
mov
lds
fstl
or
dec
loopne
lret
mov
cli
aad
loop
jmp
cltd
rorb
lea
sub
or
sar
mov
xchg
or
mov
sti
popa
bound
jg
fnstenv
jo
divl
jp
inc
add
mov
inc
jl
fadds
cmc
ja
jb
sub
mov
push
ljmp
rcll
scas
dec
adc
jp
dec
adc
mov
and
cmp
mov
push
mov
and
loope
pop
scas
pop
jg
xchg
decb
lahf
sbb
test
adc
js
mov
xor
les
insl
dec
push
mov
jp
addr16
jp
dec
ljmp
add
push
push
pop
and
add
jns
mov
add
sbb
cmp
fisubs
add
pushf
add
ret
leave
adc
ret
insl
icebp
aam
inc
call
outsl
and
pop
adc
stos
mov
sub
insl
incb
jge
inc
cmp
push
pop
outsb
mov
adc
sub
and
js
jg
pop
fwait
popf
test
dec
inc
xchg
pop
aam
test
inc
adc
cmp
cmp
mov
mov
inc
xchg
mov
mov
popf
js
out
fstp
stos
nop
sbb
add
xorl
mull
rolb
fistpl
mov
pop
into
sub
xchg
pop
outsb
mov
fiaddl
xor
ffreep
and
leave
or
push
dec
repnz
jecxz
scas
sub
mov
push
xchg
jnp
stos
imul
pop
push
out
in
push
pusha
jne
xor
inc
cmpsl
cmpsb
dec
pop
mov
adc
repnz
lods
in
int
jb
mov
cli
fsubl
push
and
int3
mov
in
test
sbb
pop
push
mov
lock
enter
xchg
jle
or
pop
aad
xor
push
aam
test
repz
mov
das
adc
pop
sbb
fists
hlt
loop
in
loopne
mov
pop
fdivl
lea
fldcw
jg
lret
cwtl
sbb
repnz
in
adc
cmp
aas
cld
mov
testb
push
movsl
dec
and
jb
bound
push
addr16
and
sbb
je
sarl
insl
loope
mov
jno
repnz
mov
adc
add
pop
lds
ds
jl
xchg
jne
or
mov
pop
xchg
shll
adc
arpl
arpl
mov
bound
ret
xor
mov
jecxz
rorl
sarb
or
sbb
push
mov
cltd
mov
inc
cmpsb
jle
cmp
cmpsb
ja
mov
roll
or
dec
add
std
xchg
and
lcall
les
inc
cmp
inc
mov
bnd
push
ss
cmpb
pop
pop
cmp
xchg
sub
cmc
es
pushf
inc
into
out
aaa
mov
and
insb
and
cld
test
jge
inc
xlat
repnz
jmp
inc
mov
daa
leave
mov
xchg
fisubrl
ret
lea
cmp
je
test
push
inc
add
inc
inc
icebp
xchg
mov
xchg
sti
in
cmp
inc
adc
cmp
fsubl
hlt
inc
shlb
jnp
cltd
add
addl
mov
xor
je
push
xchg
sub
scas
out
movsb
test
inc
movsl
loopne
sbb
notl
mov
add
mov
mov
sub
scas
fstps
outsl
frstor
mov
int3
mov
cmpsb
push
pop
cmp
inc
icebp
ret
loop
lcall
mov
xchg
pop
shr
cmpsl
subl
mov
aas
mov
sti
js
loopne
sub
mov
lret
in
gs
xlat
dec
das
dec
clc
inc
xor
in
dec
loop
movsl
call
repnz
cltd
popa
scas
adc
mov
sub
testl
iret
cli
fmull
dec
in
sub
jo
int
cmp
mov
je
adc
inc
sar
out
jge
jo
push
leave
notl
lods
xlat
lret
jle
mov
xchg
inc
jbe
idivb
and
repz
ds
incl
pop
and
fistl
mov
sub
lds
out
xor
or
push
movsl
loopne
sbb
jo
out
xlat
cmovp
mov
lods
scas
outsl
inc
call
call
movsb
aam
pop
or
mov
sub
divl
imull
lret
mov
dec
dec
divl
inc
leave
add
fnstenv
negb
loopne
les
xor
lret
popf
sbb
sub
data16
dec
jp
jbe
scas
lcall
jae
ret
mov
bound
popa
aam
gs
mov
scas
pop
ret
sub
xchg
movsb
push
rcr
lods
jo
xor
sbb
test
scas
and
daa
adc
pushf
xor
and
leave
cmp
mov
stos
xchg
xchg
xchg
cs
popa
lahf
adc
push
setno
loope
push
jl
ja
int3
and
mov
fnstcw
sub
add
dec
or
mov
and
sbb
dec
out
fcoml
dec
sub
sbb
sub
mov
addr16
addr16
push
lret
movb
jge
test
shll
sbb
addr16
jge
adc
cmp
sub
orl
rcl
loope
call
rdpmc
cltd
add
lret
push
sbb
popa
mov
mov
mov
call
scas
cld
mov
jl
in
mov
pop
jp
mov
sar
xor
loopne
aam
jb
add
lods
or
scas
and
jmp
mov
cmpsl
inc
dec
or
push
dec
cmp
dec
inc
sti
stos
mov
mov
icebp
js
cmpsl
lods
sti
push
cmc
lods
xchg
jns
mov
out
and
and
pop
icebp
in
dec
loopne
add
cltd
sbb
lock
or
repz
dec
dec
fidivrl
ret
stc
pop
popf
dec
hlt
mov
jmp
cmc
in
outsl
imul
pop
cmp
sahf
mov
scas
leave
add
into
nop
imul
xchg
inc
enter
mov
jae
pop
call
push
ss
or
mulps
fdivrp
cmpsl
cmp
sub
ror
xchg
ds
adc
pop
or
inc
insb
sti
xchg
in
mov
and
fcompl
ds
mov
popa
sahf
sbb
frstor
leave
sarb
das
xchg
mov
sub
jp
cmp
ret
adcb
aaa
cmp
pop
cmp
insl
fwait
or
mov
cwtl
add
adc
out
icebp
in
scas
push
std
test
cmp
mov
imul
out
push
jo
mov
mov
mov
mov
sub
mov
pop
cmp
mov
mov
sub
mov
inc
or
or
mov
js
in
add
bound
or
pushf
ljmp
push
bound
mov
clc
fdivs
mov
or
mov
stc
inc
dec
xchg
sbb
mov
sbb
push
movsl
xor
ds
rcrb
lcall
frstor
fstpl
adc
and
mov
lock
add
xor
cmp
inc
es
pop
mov
roll
and
mov
jnp
jne
sub
scas
lahf
addr16
lahf
and
pushf
out
xor
sub
xor
xor
fs
dec
and
mov
mov
mov
stc
jg
xchg
lret
mov
fwait
in
xor
jne
pusha
aad
fisttpll
cs
cmp
and
adc
popa
dec
push
adc
mov
leave
xchg
dec
sbb
mov
fimuls
fmull
out
sub
mov
jb
sahf
lahf
iret
add
jecxz
push
fcoms
dec
jne
adc
sti
cmp
pop
pop
mov
cs
push
in
arpl
cmp
xchg
xor
and
stos
inc
imul
cs
pop
push
scas
cmp
dec
inc
and
add
in
jg
hlt
cmpl
cmp
lcall
inc
cld
lcall
sahf
xor
jp
shrl
nop
sub
mov
dec
add
pop
pushfw
push
insl
xor
xor
mov
sub
push
call
es
pop
xchg
in
pusha
fwait
dec
ret
js
pop
sbb
ss
sahf
dec
add
mov
cld
cmpsl
adc
addl
int3
sub
aam
dec
out
subb
gs
xchg
lret
jp
sbb
aas
push
and
pop
dec
mov
das
and
mov
cmp
in
sub
je
adc
sahf
in
test
push
push
or
adc
test
fs
sub
sub
push
stos
outsb
cmp
mov
xchg
fcoms
fadd
rorl
add
clc
push
imul
xchg
dec
or
inc
inc
pop
out
rcl
shll
push
adc
fstps
lret
xchg
imulb
pop
pop
ffreep
cld
imull
stos
dec
outsb
nop
mov
movb
mov
push
pop
in
push
flds
clc
inc
imul
insl
aad
jnp
sahf
mov
xor
ds
add
test
mov
daa
bound
out
loop
mov
cmpsl
jae
je
testl
out
and
lret
mov
sbb
sarb
decb
dec
pop
lea
and
dec
add
das
adc
std
push
filds
inc
inc
jecxz
lods
pop
xor
push
stc
xor
in
nop
xchg
fistpl
xor
aad
not
mov
ds
ljmp
mov
xchg
push
adc
std
ss
xchg
jo
pop
jle
and
decl
test
mov
mov
sbb
push
sbb
sub
and
mov
dec
sub
daa
mov
daa
or
negb
mov
movsl
add
out
cwtl
xchg
jmp
in
in
sti
xchg
mov
sbb
push
sbb
subb
sub
negb
jg
in
outsl
cmp
sub
stc
cmp
out
es
add
and
fcomp
push
push
stos
mov
inc
dec
add
insl
adc
ret
stos
jbe
add
mov
fdivrl
xchg
pop
pusha
sub
push
hlt
outsb
pop
xchg
xor
test
sti
and
mov
aam
inc
ss
push
or
push
adc
and
mov
arpl
das
loopne
js
adc
fidivrl
out
mov
cli
jns
int3
mov
mov
lcall
addr16
add
test
jne
mov
push
cmpsl
lea
test
mov
cmp
pop
repz
addr16
jb
scas
add
enter
push
add
jmp
ja
mov
sbb
fildll
aas
fmull
lea
out
mov
js
insb
cmp
mov
loop
into
movsb
inc
into
daa
comiss
lock
jmp
cltd
push
bound
scas
loope
rcll
addr16
jmp
popf
cs
mov
int
fidivrs
add
rcrb
mov
unpcklps
std
mov
imul
jmp
adc
insb
cmpsl
inc
pop
inc
cwtl
xor
ja
pop
add
lahf
add
hlt
movsb
addr16
shl
nop
fsubr
jmp
fsubs
cmp
jnp
dec
popa
or
in
inc
in
mov
dec
ret
nop
pop
mov
jae
loop
inc
cmp
out
clc
push
mov
cmp
fdivrs
or
and
xor
xchg
lods
pushf
and
outsb
into
dec
pop
add
or
push
jg
inc
jae
cwtl
inc
call
lds
loope
test
push
push
clc
jecxz
jns
imull
out
jne
adc
pop
push
pop
push
xlat
add
xchg
sub
cwtl
cmp
and
inc
in
negl
lds
cmove
mov
sub
in
lret
in
push
push
in
sarb
repnz
out
popf
inc
cwtl
dec
push
jne
bound
lcall
lret
adc
xlat
testl
lods
shlb
out
div
add
sahf
cmpl
jle
sub
mov
sub
or
mov
push
ficoml
fildl
pop
lock
push
iret
bound
pop
scas
pusha
xchg
fbld
add
loop
rcll
jne
popf
gs
inc
aas
cmp
out
or
lret
shrl
dec
lcall
jae
adc
roll
xchg
pop
lods
fwait
in
loop
mul
pop
je
sbb
enter
arpl
loop
sub
xchg
xchg
xchg
push
jecxz
push
insl
mov
pop
lret
dec
repnz
repz
rcl
outsb
int3
jmp
lret
les
cmpsl
push
out
inc
faddl
and
xchg
and
in
imull
rdmsr
shll
and
enter
lcall
push
fistpll
sbb
lods
jmp
or
sahf
or
gs
aam
inc
cmp
shlb
mov
xor
pop
push
out
icebp
sbb
call
in
and
leave
in
mov
push
inc
dec
cmc
push
jno
xchg
inc
and
stos
es
push
lcall
cmpsl
adc
push
movsb
push
sbb
inc
mov
adc
pop
in
jbe
push
scas
mov
dec
add
mov
cli
loopne
cmpsl
pop
movsl
mov
cmp
xchg
push
sbb
dec
dec
xchg
mov
scas
stos
xchg
loope
aam
xor
mov
mov
inc
jns
push
push
lret
pop
sub
sub
scas
fdivrl
mov
subb
stos
movsb
ss
sub
or
and
decb
add
js
cld
ljmp
sub
xorb
das
stc
dec
jno
jmp
gs
mov
mov
shl
jns
loop
ret
shlb
adc
sbb
mov
rolb
sti
inc
and
inc
pop
push
xlat
and
bound
sbb
fisubrl
push
cmp
cltd
jae
inc
pop
inc
ds
mov
stc
mov
popf
jecxz
test
mov
inc
add
scas
mov
in
mov
sbb
cmp
imul
inc
xor
xor
ss
adcl
lret
add
sbb
mov
test
sub
push
xor
mov
and
and
xchg
repz
and
jno
movsl
jge
in
pushaw
fsubl
mov
in
fs
jnp
lahf
shll
dec
jmp
fistpl
fs
xor
push
std
add
clc
lds
sub
out
mov
shll
test
movsb
lods
bound
push
xor
pop
out
dec
nop
lret
jle
cli
push
push
cmp
jns
inc
fbld
loopne
pop
xor
xchg
clc
inc
pop
fwait
xchg
fmul
leave
cmc
and
jge
pusha
jo
mov
mov
mov
dec
jae
sbb
pop
push
jbe
cld
jmp
push
mov
fucom
nop
fadds
pop
aaa
pop
nop
int3
push
push
lds
fcomi
inc
iret
cmp
cmc
mov
int
mov
jo
sub
sbb
jecxz
mov
add
jmp
pop
cld
cmp
or
fstpt
push
push
rclb
adc
sub
jge
pop
fdivr
in
andb
outsb
mov
aas
shl
inc
pop
sub
xor
call
pop
dec
lcall
cmp
test
mov
in
lret
lcall
add
cmp
cli
sarb
sub
in
cmp
add
inc
mov
jns
cltd
enter
push
dec
or
push
aaa
lods
outsb
sub
sbb
popf
jg
mov
ret
add
pop
sub
mul
repnz
aad
dec
inc
adcl
xor
or
ret
aas
sub
add
push
xchg
icebp
jg
mov
sub
or
push
and
add
mov
push
clc
fsts
ja
hlt
je
stos
hlt
mov
mov
mov
jnp
test
mov
cmp
nop
inc
into
mov
xchg
test
loopne
out
stc
mov
push
xchg
mov
jmp
mov
std
out
cmp
leave
rcrb
cli
cltd
in
pop
fdivrs
add
mov
imul
lds
pop
das
push
adc
in
pop
sub
mov
dec
or
pop
clc
js
pop
sub
fadds
filds
xchg
mov
and
lret
sbbb
fcoms
pop
aaa
pop
lock
push
insl
or
mov
xor
out
mov
and
or
cltd
cmp
dec
jge
jae
hlt
pop
sbb
xchg
test
ds
lds
stc
and
cmpsb
in
bound
add
cltd
lcall
in
inc
or
aam
add
dec
and
lds
ret
jmp
out
setg
jno
and
es
push
and
popa
cmp
push
mov
push
and
clc
pop
andl
jl
stos
js
cmp
pop
sub
pop
lea
xchg
sahf
imul
test
dec
dec
fisubrs
adc
orb
xchg
mov
inc
inc
fwait
push
stos
pop
jmp
xlat
fwait
in
imul
inc
idivl
push
xor
imul
fimuls
aad
sbb
js
in
test
push
nop
cmp
xor
jno
mulb
lahf
jb
mov
leave
sbb
lock
or
sub
fidivs
cmp
popf
mov
inc
fisubl
sbb
xchg
sub
and
add
dec
in
fdivs
inc
ficoml
das
nop
dec
cltd
cld
sub
mov
xor
aad
add
addr16
pop
pop
jge
mov
arpl
insb
movsl
lods
cmp
add
stc
xor
sub
mov
les
xlat
xor
xchg
xchg
sbb
dec
sub
arpl
pop
sbb
pop
jb
push
xor
in
and
jbe
cmp
sbb
or
sub
xor
mov
sub
inc
inc
outsb
aad
sbb
sub
adc
pop
ret
pop
pop
mov
and
mov
in
sar
sub
inc
call
cmpl
mov
out
faddl
fcomi
in
sbb
enter
adc
dec
pop
lret
mov
sbb
movsl
xchg
xchg
fwait
cmp
outsw
push
lods
add
mov
pop
dec
jnp
bound
pop
imul
mov
sub
pop
enter
repnz
push
insb
test
or
bound
inc
xor
mov
push
pusha
push
fdiv
mov
jp
mov
dec
std
inc
xchg
je
scas
idiv
aam
lds
pop
pop
je
cmpsb
mov
adc
cltd
pop
pop
aam
insl
inc
test
and
xchg
lret
dec
in
clc
imul
jecxz
mov
mov
in
or
imul
lds
fsubs
repnz
xchg
ss
leave
int
mov
gs
mov
push
jb
and
mov
and
hlt
cli
fs
sti
mov
push
fistpll
lret
add
adc
sbb
dec
or
xor
inc
aaa
or
mov
mov
loop
ljmp
imul
das
sub
mov
dec
lahf
add
mov
xor
add
in
push
cmp
dec
cmp
sub
cmp
fldt
adc
cmpsl
outsb
stos
je
xchg
mov
jb
push
iret
cmpsb
fcoml
xor
fwait
out
sti
scas
jg
rorb
stos
xchg
xor
pop
dec
push
lret
out
pop
pushf
mov
fdivl
and
jbe
inc
fs
xor
and
cmpsb
iret
mov
jp
mov
pop
aaa
push
mov
xorb
divl
sub
xor
stos
cmc
pusha
mov
sbb
or
enter
push
sub
cmpsb
call
sti
decl
or
or
loopne
outsl
cld
jo
scas
push
stc
fdivrl
rol
jmp
incl
jl
inc
mov
add
push
mov
lahf
or
cmp
int3
xor
mov
dec
test
pop
jb
lahf
xchg
mov
std
jp
cmp
mov
in
and
mov
mov
ljmp
outsb
sub
xlat
add
ljmp
and
jmp
les
outsl
in
out
sub
or
cltd
inc
test
ja
xchg
in
jecxz
dec
das
mov
or
add
andb
mov
mov
stos
lcall
jp
fnstenv
xchg
push
in
test
int
std
in
add
sub
test
aaa
mov
adc
dec
sahf
mov
push
pop
mov
aam
cmp
inc
jo
test
outsb
call
pop
jns
stos
jp
xlat
fsubrl
mov
pushl
sbb
cmp
mov
stc
jge
enter
pop
push
ds
xchg
les
imul
pop
pop
cmp
std
sti
fldcw
sub
cvtps2pd
adc
clc
mov
push
shll
inc
push
out
lods
bound
in
jle
push
cmp
int
rorl
lret
bound
adc
lds
xor
ret
mov
add
orb
inc
mov
stos
pop
jnp
xor
mov
inc
call
test
inc
out
push
pushf
loope
movsb
out
inc
adc
insb
jmp
js
mov
sti
sbb
bound
call
push
neg
hlt
cmpsb
jl
xlat
testl
mov
adc
pop
add
lock
sbb
es
sub
inc
pop
jns
dec
adcb
into
push
push
das
dec
adc
mov
adc
push
insb
pop
mov
cmpsl
push
xchg
xchg
mov
mov
push
mov
push
cmp
ret
fiaddl
sub
xor
andb
je
scas
jmp
outsb
flds
das
out
aaa
xchg
int3
in
stos
and
ja
add
pop
adc
pop
mov
xchg
movsl
das
mov
ja
dec
ja
xor
pop
push
mov
int3
mov
xor
movsl
mov
imull
cld
xor
clc
or
jo
lret
sub
insl
jg
pop
cmp
pusha
imul
and
add
mov
xchg
fnsave
xor
shlb
cltd
iret
or
sti
int
dec
outsl
ds
pop
jmp
inc
gs
adc
dec
lock
das
icebp
jno
dec
in
xchg
fdivs
cmpsl
or
push
arpl
mov
pop
aad
lret
xchg
mov
mov
popa
jmp
pop
pop
mov
stos
lock
inc
fimuls
add
sti
ret
dec
sbb
push
xor
fidivrs
ss
out
sar
xor
in
movsb
pusha
ret
in
push
mov
mov
xor
je
ds
and
leave
jae
adcb
inc
lea
int3
dec
push
mov
xor
push
loopne
sahf
jbe
addr16
dec
fcom
push
leave
cmp
xchg
int
pop
xchg
mov
mov
pop
inc
in
adc
dec
jnp
jbe
or
addw
and
jle
ffree
rcl
inc
push
cmp
push
jmp
jo
and
shll
lret
sbb
xchg
scas
mov
shlb
mov
or
movsb
out
sti
mov
sbb
mov
test
enter
lods
jmp
xchg
dec
out
test
mov
adc
fdivl
arpl
dec
pop
push
sub
int
roll
jb
shrb
sub
lcall
inc
lea
divl
fcoms
pop
push
mov
scas
icebp
fsubrp
cli
xor
inc
mov
or
aaa
loopne
call
orb
fcoml
in
sahf
lret
lahf
andb
sbb
scas
out
in
jmp
or
rorl
push
or
ja
jae
dec
jns
cmp
mov
repnz
mov
cmp
mov
jl
pop
sbb
std
jp
mov
xchg
push
fisubl
adc
dec
mov
sub
mov
popa
mov
imul
arpl
adcl
xchg
scas
push
int
push
xchg
mov
lahf
outsb
sti
dec
shlb
adc
pop
fists
cmp
hlt
sbb
popa
repz
fs
xchg
into
mov
inc
and
stc
insb
call
or
xchg
icebp
cld
push
push
sub
pop
imul
nop
and
sub
sub
sbb
mov
movsl
scas
push
ficoms
out
data16
sbb
inc
adc
add
popa
xor
aad
in
pop
dec
jb
xor
repnz
mov
lahf
xor
cmc
sbb
nop
pop
icebp
jp
call
jecxz
sbb
mov
nop
int
leave
test
or
cmpsb
adc
div
mov
aaa
out
enter
pop
filds
jno
cmp
insl
pop
call
roll
mov
bnd
inc
es
jp
lods
rorb
xchg
jmp
jge
adc
adc
inc
adc
and
hlt
push
jns
pop
jno
jne
call
or
jno
push
repnz
push
mov
mov
stc
inc
pop
sbb
inc
fwait
das
lcall
jmp
imul
scas
xor
mov
push
fwait
pop
inc
xor
mov
xlat
fs
loop
shlb
inc
call
jae
jne
dec
push
repnz
lods
ret
mov
xor
xchg
or
imul
outsl
shl
inc
cli
jecxz
rcrb
mov
sub
stc
xchg
dec
dec
loope
iret
mov
mov
out
andl
sbb
stc
or
mov
jmp
xchg
pop
subl
dec
out
out
rcrb
ja
xchg
mov
out
rcl
pop
decl
addr16
inc
push
call
adc
and
jnp
lahf
std
imulb
lret
mov
das
sub
xchg
cmpsb
jecxz
dec
mov
insl
cld
xchg
lret
idivl
pop
add
gs
sub
xchg
pop
and
in
xchg
sub
psubd
mov
fbld
xor
ljmp
inc
imul
or
jmp
mov
pop
inc
aaa
in
lret
and
out
jne
inc
and
sub
push
cmpsl
adc
adc
mov
leave
imul
rolb
mov
sahf
inc
and
mov
shrl
fwait
mov
jae
mov
jg
rol
jle
xor
adc
pop
ficoml
cmp
add
push
inc
jg
sub
sub
out
push
mov
push
push
pushf
push
or
mov
xchg
ss
test
inc
jne
sub
cmpsl
and
call
outsl
or
loope
jno
push
lods
leave
push
push
in
xor
lret
arpl
das
repnz
scas
data16
mov
push
repnz
mov
add
int3
mov
ljmp
adc
pop
push
mov
out
pushf
aam
insb
dec
sub
mov
into
add
cwtl
lods
mov
jno
fsubrs
loop
add
les
adcb
dec
outsl
daa
adc
cmp
push
stc
lret
icebp
dec
cmp
lods
push
push
or
mov
lea
xor
mov
pusha
and
sub
xchg
and
test
mov
stos
push
aas
test
pushf
push
lret
out
ds
ret
pop
addb
jl
lods
or
lahf
divb
dec
das
jmp
adc
bound
fisubl
jp
imul
fildl
sub
mov
push
xchg
dec
mov
scas
mov
dec
fwait
dec
ret
add
popl
fsqrt
mov
jmp
dec
xchg
or
or
lods
aam
imul
cltd
pop
mov
xchg
daa
std
cmp
add
test
in
push
pop
rcll
or
ss
test
inc
jnp
mov
mov
jns
arpl
xchg
aad
lret
push
sub
push
xchg
into
aaa
adc
xchg
sti
sub
mov
xor
fs
mov
call
mov
adc
mov
mov
mov
mov
int3
fwait
inc
jno
dec
dec
jg
sahf
imull
mov
insb
xchg
pop
xchg
jne
callw
movsb
pop
push
adc
and
push
popf
imul
or
sbb
sbb
lcall
repnz
or
lea
push
roll
xchg
fs
push
xor
lds
xchg
and
pushf
sahf
loop
negb
push
adc
and
pop
mov
dec
aad
cli
loope
and
lods
mov
repz
les
sbb
lea
fcoms
xchg
sbb
jl
das
out
mov
test
aam
adc
sahf
out
cmpsl
sbb
int
inc
pop
cmp
rep
xchg
stos
dec
sbb
xor
lods
mov
pop
pop
movsl
fistps
mov
adc
push
js
push
push
ret
push
ret
cmc
cli
xchg
mov
testb
cltd
imul
imulb
adc
push
cmpsb
stos
xor
das
xor
subb
xor
jle
adc
js
lret
sub
xor
popf
stos
out
out
xchg
push
fs
sbb
lahf
psrlw
in
stc
mov
outsl
push
ret
push
cmp
jae
push
test
push
cmp
ja
jne
test
fcmovu
xor
and
and
fs
jo
in
sbb
and
icebp
pop
in
and
push
bound
xor
or
cmp
jg
ljmp
ljmp
int3
orb
stc
and
cmp
outsl
cmp
push
push
cmp
push
cli
out
pop
or
sub
loop
jge
enter
in
sub
xchg
push
push
shll
pop
mov
lds
icebp
call
rcll
adc
mov
xchg
mov
fimuls
adc
movsb
xor
js
call
or
fdivrl
mov
sti
jnp
mov
dec
aas
fisttpll
cmc
and
cltd
sbb
inc
cli
adc
insb
and
cmp
mov
popf
mov
sub
push
fdivr
mov
dec
sbb
push
stc
fucomip
fstl
aam
pop
lods
fs
inc
test
pop
push
stc
icebp
jne
ret
imul
pop
ss
outsb
dec
inc
adc
lock
pop
into
pop
movq
push
mov
clc
popa
rorl
jb
adc
in
fcomp
cmp
jle
daa
push
in
lock
sar
xor
jg
nop
dec
mov
xor
mov
cwtl
rcl
mov
call
jns
enter
ret
cwtl
mov
xchg
into
push
pop
stos
pop
in
or
inc
jo
inc
inc
mulb
mov
in
cmp
gs
cwtl
rclb
pop
push
xchg
xor
idivb
mov
hlt
lcall
xor
jmp
and
jle
dec
dec
or
pop
aad
je
mov
sub
mov
fistpll
popa
jne
sbb
into
push
xor
xor
xor
lods
pop
or
aad
mov
cmpsl
jo
scas
sti
roll
add
mov
xchg
dec
dec
fs
aam
dec
xor
pop
mov
les
or
shrb
mov
pop
push
frstor
inc
jge
adc
sbb
fiadds
cwtl
popf
call
adc
dec
inc
negl
loope
mov
jmp
mov
push
flds
icebp
mov
arpl
push
loop
shrb
inc
xchg
cmp
mov
sahf
sub
sub
mov
sub
out
arpl
cld
into
or
lods
mov
pop
pop
data16
jb
push
mov
dec
fmuls
pop
cld
mov
xchg
cmp
pop
cmp
cmpsl
pop
dec
jns
lds
jae
mov
stc
ja
loop
aad
mov
leave
aam
mov
fs
arpl
shl
mov
sti
pop
pushf
xchg
dec
jno
xchg
lret
sbb
add
into
push
mov
rcrb
mov
in
arpl
decl
sarb
mov
cmp
mov
mov
xchg
mov
lods
pusha
or
cld
jmp
push
sub
jecxz
aam
shrl
cmp
xor
cs
pop
clc
xor
dec
jmp
jo
mov
out
cmpsb
lds
cmpsb
es
dec
nop
pop
add
fstpt
push
ss
js
insl
add
mov
xchg
mov
lods
jbe
jb
push
xor
cmp
xor
fdivs
repz
rolb
or
andb
sbb
sub
xchg
cmp
mov
cmp
dec
xchg
pop
insb
mov
mov
std
push
lret
push
popa
jecxz
dec
sub
adc
push
bound
ljmp
fdivrs
popf
add
xchg
mov
sub
sub
adc
jo
xor
pop
sub
adc
xor
push
lock
std
mov
push
sbb
mov
mov
jg
push
cmp
xchg
cmpsb
and
inc
fstpl
jle
mov
xchg
mov
inc
sbb
das
cmp
jb
int
add
xor
sbb
shrb
cmp
loope
mov
and
stc
jl
adc
pop
jecxz
push
lods
or
add
hlt
xchg
jle
jnp
stc
xchg
movsb
cs
cmpsl
push
in
idivb
test
mov
adc
mov
sbb
pop
repz
xchg
sbb
ret
ljmp
adc
jmp
mov
test
sahf
push
stos
insl
cld
sti
add
adc
sub
adc
fwait
mov
out
fs
jb
jae
idivb
lea
jecxz
jb
sbb
jae
adc
xor
ja
fidivrs
mov
dec
push
and
stc
es
je
inc
mov
fstpt
jnp
add
push
jg
jb
fidivrs
aas
psubsw
xchg
jmp
cld
adc
scas
mov
addr16
ret
inc
lds
xchg
fcomps
aas
pop
mov
mov
outsl
mov
js
in
ret
in
dec
xlat
int3
mov
cmpsl
adc
aaa
inc
adc
cmpsb
adc
dec
xlat
jb
jo
js
dec
orb
ret
pop
in
adc
adcb
push
in
mov
testl
lahf
out
jp
les
jmp
jb
jge
dec
adc
test
pop
hlt
dec
stos
pop
push
leave
cmp
fistpl
mov
mov
adc
in
scas
jb
dec
jecxz
mov
push
cmp
push
ficomps
in
adc
sbb
adc
cmp
outsl
push
lcall
shrl
fidivrl
sub
xchg
pop
dec
movsb
ja
jl
fcomps
outsb
push
pop
mov
pushf
inc
xchg
push
sbb
movsl
cmpl
mov
push
iret
lock
xorl
rcl
dec
sub
jp
jg
cmp
fnstsw
leave
dec
div
push
nop
mov
popa
fimuls
and
lret
fistl
in
mov
xchg
ret
add
hlt
xor
sub
repz
frstpm(287
or
fisubrs
sbb
sbb
mov
add
adc
xchg
jecxz
bound
add
push
pop
jb
movsb
cwtl
notl
and
xchg
fwait
stos
cwtl
mov
pop
ljmp
mov
pusha
cmp
fildll
and
push
mov
rorl
cwtl
addr16
shlb
jp
aaa
loop
out
xor
pop
das
orw
mov
xchg
mov
cmc
mov
push
data16
in
jb
cmp
xchg
xchg
negb
outsl
jg
fs
xchg
pop
adc
ljmp
mov
sub
imul
add
dec
std
mov
imul
loop
and
pop
icebp
push
addr16
mov
fadd
test
mov
sub
cli
popf
push
cmpsl
sahf
enter
bound
ret
jnp
clc
das
cmp
inc
mov
repz
inc
ret
neg
js
ss
cmp
mov
iret
jno
movsb
sbb
lcall
jmp
lahf
dec
cmp
sub
inc
jno
mov
mov
lret
sbbb
cs
cmpsl
push
testb
aad
test
and
adc
fidivs
lds
inc
sbbb
mov
add
mov
mov
xlat
fidivrl
cmpb
mov
xchg
in
scas
jg
mov
cmpsb
jl
cld
sahf
add
jle
sub
in
push
inc
add
sub
or
cmp
inc
movsb
mov
outsl
les
pop
movsl
es
or
cltd
cmp
cltd
test
dec
xor
xchg
sbb
pushf
aaa
push
sbb
adc
lods
mov
fimuls
pop
iret
out
fidivs
aam
xchg
lods
cmp
pop
leave
xorl
rorl
gs
nop
mul
cs
sub
cs
cmpsb
test
stc
sbb
add
dec
in
jl
mov
pop
jne
mov
and
adc
ss
add
mov
sub
sub
mov
sub
or
inc
jne
leave
bound
mov
faddp
pop
pop
inc
rcll
inc
ljmp
add
leave
inc
adc
fstpl
ds
int3
cmpsb
push
ds
insl
jl
sub
das
cltd
ja
mov
mov
popa
mov
push
daa
or
mov
cmp
sbb
mull
fsts
jb
imul
xlat
dec
xor
jg
pop
mov
pop
popa
and
or
popl
data16
mov
jp
in
repz
rorb
push
mov
adc
hlt
imul
hlt
add
ficoms
fxch
lock
outsl
sub
data16
mov
jle
inc
and
lds
shrl
mov
fs
nop
sub
ljmp
cmpsl
je
mov
adc
xchg
mov
lock
imul
push
cmp
push
and
int
add
xchg
call
cmp
jge
mov
mov
fs
scas
roll
cmp
mov
icebp
andb
dec
in
jmp
and
pushf
xor
cmpsb
pop
es
mov
scas
push
lcall
adc
mov
lods
inc
inc
ret
std
fstpt
or
adc
fstps
scas
repz
insb
push
or
dec
mov
xchg
js
xchg
cli
fs
inc
jle
pop
mov
jno
outsb
mov
test
xchg
call
out
jno
xchg
in
cmpsb
mov
lahf
rorb
mov
adc
nop
lret
sbb
imul
pop
sti
mov
ret
mov
dec
in
mov
xor
dec
jmp
out
xor
mov
jbe
les
mov
add
cmp
xor
pop
xchg
shll
cmc
shrl
and
xchg
cs
lea
push
dec
loope
dec
popa
mov
sbbl
lds
mov
push
lock
inc
std
push
mov
mov
sti
xchg
hlt
popa
inc
sbb
adc
cld
cs
aas
mov
jnp
aam
dec
cmc
aad
cwtl
and
adc
pop
lret
lcall
xchg
push
scas
sbb
push
add
inc
out
and
mov
xor
dec
push
rcrb
jl
insb
lea
mov
repz
dec
aaa
mov
dec
mov
and
push
mov
std
sub
jmp
lahf
nop
js
xchg
add
test
push
mov
ja
and
into
testl
in
and
stos
and
imul
inc
and
sub
cs
or
aad
arpl
push
mov
sbb
xor
dec
or
or
stos
inc
xchg
adc
sbbb
xchg
cmp
stc
nop
cmc
mov
mov
adc
push
int3
cltd
xor
loope
add
or
adc
out
hlt
test
adc
and
push
fdivrl
je
adc
jno
or
int3
rorb
popa
clc
pop
add
xor
xor
push
and
adc
popf
push
dec
into
push
popa
stos
xchg
inc
or
xchg
shlb
imul
or
or
mov
loope
outsb
ss
aas
and
dec
mov
mov
cli
popf
jecxz
lods
sti
in
jo
clc
mov
aaa
sbb
or
cmpsl
aaa
xchg
add
imul
decl
loop
lret
push
enter
cmp
mov
decb
sbb
push
lock
and
arpl
jmp
aam
push
sbb
cmp
and
lock
in
lds
bound
mov
pop
sti
sub
lods
inc
mov
cmp
mov
jl
or
imul
jbe
aad
loopne
cmpsb
int
in
add
mov
fisubrs
lods
or
or
mov
xchg
inc
pusha
je
sub
pusha
inc
repnz
adc
test
and
xor
arpl
mov
in
dec
mulb
pop
add
pop
inc
add
and
pop
into
push
ljmp
cld
pop
add
ljmp
add
xchg
out
jecxz
call
mov
popa
aam
stos
mov
sarl
jbe
aaa
test
sbb
jae
push
mov
mov
sbbb
pop
in
xchg
shll
xchg
mov
add
and
mov
or
popf
js
scas
mov
ret
movsl
pop
xchg
mov
adc
sarl
or
or
or
cwtl
mov
adc
and
xchg
xchg
enter
and
mov
mov
lds
nop
xor
cwtl
add
cmpsl
rcr
push
outsb
xor
rcrl
ljmp
fidivl
es
inc
std
cmp
fidivrl
out
add
xchg
inc
movsl
add
nop
mov
data16
mov
inc
lret
xchg
mov
mov
in
clc
ss
push
push
pop
ss
enter
stos
adc
lods
ficoml
pushf
inc
shrl
cmp
lahf
mov
mov
stos
ret
movsb
insl
sbb
or
cmc
or
xor
ds
add
mov
out
cli
inc
movsl
jp
cmp
push
inc
mov
mov
jae
dec
push
pop
rcrl
push
cld
imul
sub
adc
rcr
cld
xor
adc
xchg
xlat
jle
sbb
jae
aaa
gs
jl
mov
xchg
jg
jecxz
xchg
inc
inc
sub
mov
push
ds
sbb
daa
dec
test
fcoms
xchg
inc
ja
imul
iret
inc
mov
mov
jp
mov
sub
sub
jp
push
xchg
mov
cmp
mov
fwait
out
cld
pop
mov
psrad
dec
in
pop
dec
lea
or
scas
mov
xor
pop
rolb
mov
fdivl
fdivp
sbb
cmp
les
cmpsb
xchg
dec
scas
and
repnz
push
mov
mov
out
lahf
mov
xchg
stos
adc
jno
lea
test
jno
xchg
push
arpl
call
push
pusha
ja
aam
xchg
push
xchg
nop
sub
inc
bound
int3
mov
sbb
xchg
nop
in
aad
cs
das
mov
adc
outsb
xchg
je
lret
fadds
cmp
enter
aaa
les
inc
lock
int3
cmp
repz
push
test
outsl
stos
xor
jge
cld
in
dec
or
js
out
fdivl
jne
push
or
rcr
repnz
lods
and
call
in
xchg
inc
pusha
sahf
call
mov
sbb
adc
add
dec
mov
stos
clc
sbb
cmp
inc
dec
xchg
mov
pop
push
mov
fbstp
cmpsl
pop
adcl
fsubr
pop
fildll
subl
sbb
leave
ffreep
pop
or
ss
scas
xchg
rorb
and
and
mov
outsl
shll
xor
fs
cld
mov
sub
xor
bound
aaa
push
into
je
lods
in
les
xor
lds
stc
imul
jbe
adc
dec
sbb
repz
pop
push
mov
sub
rcll
js
or
sub
enter
jmp
test
js
fs
adc
push
pop
mov
ror
lret
mov
outsl
push
adc
ljmp
dec
rcr
je
dec
imul
inc
adc
cld
int3
jae
push
xchg
dec
arpl
jo
cmp
dec
lods
mov
in
mov
jl
jbe
out
or
sbbl
inc
repz
fidivs
sarb
dec
push
sub
mov
mov
lret
aas
mov
sub
push
stc
in
dec
add
mov
loop
fcoms
mov
mov
mov
add
pop
incb
sub
lcall
mov
pop
cld
int
xchg
test
daa
aad
add
adc
inc
mov
incb
and
pop
mov
shll
aas
push
in
and
lcall
faddl
xchg
stc
sub
iret
sti
rolb
pushf
ds
jl
xchg
iret
out
incl
inc
mov
call
dec
pop
test
ja
inc
cmp
push
push
int
popa
shrb
xchg
adc
lret
stos
stc
xchg
test
scas
and
xchg
or
dec
mov
sbb
lock
jne
repz
icebp
call
mov
cltd
out
popf
sub
inc
xchg
pop
shl
lds
daa
addr16
or
das
lret
inc
scas
rcll
lcall
dec
testl
std
push
imul
sub
aad
inc
sbbb
das
cmp
ret
dec
xor
jle
sub
sbb
add
xchg
jbe
cli
mov
mov
sub
and
inc
popf
test
xor
in
pusha
cwtl
cmc
xor
lret
mov
add
mov
outsb
jl
scas
ret
lcall
mov
mov
pop
mov
aaa
xchg
inc
pop
pop
add
fnstenv
lods
push
cmp
mov
movsl
ffreep
and
or
jp
add
lea
fs
lcall
lds
pcmpgtb
sub
or
lea
mov
fwait
xor
jns
push
imul
mov
stos
repnz
aad
adc
jecxz
imul
clc
cmp
adc
lock
push
in
pop
cmpsb
mov
movsl
loope
gs
movsl
out
mov
mov
xor
mov
inc
sub
out
inc
dec
les
mov
loopne
sbb
jbe
mov
jl
xor
add
lahf
push
mov
iret
xchg
push
ret
js
sbb
in
lea
push
xchg
and
jb
sbb
xchg
and
pop
sbb
jge,pt
sub
mov
or
notb
xchg
pop
jmp
push
stc
fidivl
loope
mov
leave
inc
test
mov
mov
je
inc
pushf
pop
mov
mulb
cmp
and
and
and
jecxz
sub
fwait
lret
aaa
jle
rol
push
add
pop
jbe
clc
dec
push
int
pop
loope
scas
ss
dec
loopne
jno
pop
add
mov
mov
push
push
dec
mov
mov
push
test
mov
das
cli
imul
dec
push
and
jp
jp
aas
cmp
adc
mov
aaa
xorl
cmp
mov
jmp
mov
and
jno
or
push
jp
mov
mov
jmp
adc
pop
sbb
cli
outsb
cld
pop
adc
sub
xor
aas
div
scas
pop
aaa
mov
std
adc
test
push
mov
cli
rorl
jnp
sarl
icebp
or
test
push
xchg
popf
sarl
push
fs
bound
ja
shll
into
inc
push
fadd
lea
dec
pop
and
adcb
cmp
aaa
subb
push
dec
subl
lods
adc
std
pop
insl
add
jl
cld
mov
jg
mov
mov
mov
je
aam
aam
mov
outsb
popf
jg
sub
and
data16
test
repz
add
cmp
push
inc
in
cltd
mov
xchg
and
sbb
lret
inc
adc
in
bound
loope
cmpsb
or
sbb
sbbl
cmp
or
mov
mov
pop
scas
push
mov
pushf
pop
cmp
loopne
test
push
xor
adcl
lcall
jge
int
dec
push
imul
out
lcall
xor
jo
adc
in
cmp
jge
jl
cld
adc
js
mov
fcomps
mov
insl
adc
adc
lods
fptan
add
jno
xchg
and
push
xchg
mov
add
and
stos
or
sub
add
xor
movsb
pusha
xchg
loopne
xchg
faddl
iret
add
cmp
adc
jge
and
push
arpl
sub
or
pusha
arpl
push
ljmp
leave
dec
popf
dec
pop
lret
push
sbb
mov
lds
repz
push
adc
loope
xchg
dec
or
mov
push
mov
and
dec
fwait
scas
adc
push
sbb
test
adcl
aaa
jle
xor
mov
fisubs
push
insl
scas
adc
sbb
pop
inc
xchg
loop
sub
mov
xchg
cmp
dec
inc
mov
jmp
inc
mov
jno
cmp
add
or
xchg
add
pusha
dec
dec
sti
add
mov
cmp
adc
push
jge
sbb
pushf
in
rclb
cmpb
int
popf
mov
les
xor
insb
xor
andb
cmpsl
iret
mov
lret
push
jns
adc
out
ficomps
push
inc
cmpsb
add
sti
lea
pusha
fldt
sub
pop
mov
lock
pop
xchg
rorl
jge
dec
mov
mov
adc
clc
sub
mov
dec
rcrb
cwtl
and
mov
fisttpl
push
mov
mov
test
add
and
shrb
mov
push
cmpsb
mov
lret
daa
xor
push
add
lock
bound
daa
or
push
xchg
shll
push
mov
mov
call
cmpsb
and
in
and
pop
ret
int
frstor
mov
shll
sub
pusha
add
cld
scas
pop
into
setge
imul
fadd
adc
fldt
in
arpl
pusha
mov
mov
nop
cmp
out
jecxz
pop
decl
inc
pushf
mov
jbe
sarb
push
jnp
xor
push
mov
int
push
dec
adc
inc
xchg
xchg
dec
popa
jg
pushf
test
push
out
sub
imull
mov
pop
sub
jnp
xlat
lcall
xchg
daa
gs
adc
daa
cmp
nop
enter
stc
inc
ror
int3
nop
fstps
cmpsb
jne
je
add
add
imul
mov
out
subb
lds
add
das
lods
test
xchg
mov
dec
arpl
movl
nop
add
das
clc
out
ljmp
test
mov
fidivrs
ja
xor
aaa
and
cmpb
mov
cmp
shlb
lds
popa
es
repnz
or
or
xchg
xchg
push
hlt
or
mov
push
sbb
dec
sub
sub
lods
xchg
test
loopne
lds
pop
aad
adc
sbb
xorl
cmpsl
shlb
in
jne
xor
nop
push
in
mov
call
aaa
and
and
or
leave
sti
pop
lahf
inc
stc
mov
movsl
loop
repz
add
call
orl
ds
jbe
push
cmp
sbb
jecxz
and
test
mov
cmp
pop
call
pop
inc
sarl
jmp
leave
idiv
xor
inc
mov
pop
lahf
test
into
rcl
add
jne
arpl
shl
insb
cmp
loop
add
sahf
lcall
adc
fcoml
cmp
pop
and
sbb
mov
xchg
dec
inc
mov
or
mov
adc
and
mov
fs
xchg
jp
lds
pop
jmp
cmp
cwtl
shll
repz
loope
std
ljmp
jmp
mov
xor
pop
mov
test
sub
push
cs
push
dec
movsl
outsb
test
cmp
mov
addr16
pop
push
movsb
or
ja
xchg
xchg
call
imull
rclb
pop
jb
cmp
inc
cmp
push
pop
sbb
cmpsl
in
xor
in
jg
jnp
shr
stc
clc
out
inc
nop
adc
aaa
test
scas
mov
daa
jnp
mov
adc
adc
cmp
push
lock
xchg
or
lods
ja
mov
out
loopne
repnz
inc
sbb
stos
dec
xor
cmp
pop
inc
ss
xchg
loop
mov
fs
xor
and
sub
rol
inc
sbbl
sub
lods
popa
dec
jns
test
daa
int3
dec
js
outsl
mov
mov
orl
dec
fidivrs
xchg
mov
movsl
jmp
mov
pop
sub
jp
mov
sbb
jno
sub
inc
inc
sub
jecxz
imul
es
mov
add
sbb
cmp
cmp
addr16
jnp
aam
or
int3
mov
adc
cmp
lcall
in
and
cmpsb
push
mov
mov
aad
aas
and
dec
popl
sub
push
mov
mov
in
mulb
stos
arpl
negb
inc
mov
lret
mov
push
mov
jl
ljmp
int3
pop
xchg
ljmp
mov
adc
xor
sub
sub
jno
pop
add
sahf
push
add
lds
push
lods
nop
int
dec
inc
gs
jle
mov
nop
ja
hlt
jge
bound
rdmsr
shrb
jno
jp
sub
mov
pop
or
enter
add
push
psllq
fsts
in
adc
loopne
int
adc
push
dec
mov
fldl
movl
arpl
xchg
es
xchg
out
mov
pop
pushl
ds
lods
insl
jne
test
aaa
lcall
imul
cmpb
inc
pushf
scas
shlb
sbb
xchg
xor
stc
mov
int
fldcw
fcompl
ret
jge
pop
xor
icebp
sub
jp
push
dec
pop
in
xor
aas
push
xlat
sbb
add
mov
add
adc
fdivl
inc
pop
or
push
and
scas
pop
mov
lret
or
in
inc
cmp
mov
test
add
jne
test
popa
je
cmp
int
daa
or
adcl
mov
or
das
aam
stos
dec
mov
insl
negb
leave
xchg
repz
jp
scas
push
lds
pop
std
jns
pop
iret
lods
call
pop
mov
aam
jno
xchg
mov
pop
lock
pop
inc
shlb
lds
stc
sub
lcall
adc
test
test
xor
outsl
push
jge
lock
add
ja
xchg
call
fidivl
xchg
mov
inc
sub
int
push
mov
stc
mov
jecxz
loopne
mov
inc
cmp
jbe
jno
outsl
and
push
imul
push
out
out
xchg
jg
xor
rorl
mov
bound
mov
cmp
mov
test
pop
add
imul
in
cmp
pop
test
mov
pop
sub
mov
arpl
xor
mov
maskmovq
mov
mov
lock
mov
and
aam
pop
hlt
cmp
ret
popf
pop
sti
dec
mov
xchg
mov
inc
inc
push
mov
push
loop
lcall
outsl
sub
dec
adc
ss
imul
or
mov
sbb
cmp
or
inc
jns
sqrtps
pop
shll
in
andl
call
iret
push
rcll
mov
lods
sub
xor
insl
shr
inc
mov
sbb
call
adc
and
push
in
cmpsl
fists
mov
jnp
push
ficomps
jae
inc
in
aad
push
out
fbstp
mov
and
dec
incl
iret
gs
xchg
dec
push
mov
arpl
push
mov
divl
add
ja
or
fildl
xor
add
aas
pop
into
mov
lret
inc
mov
outsb
roll
movsl
lock
fisubl
clc
clc
pop
jg
lods
xor
imul
sub
arpl
sbb
arpl
jge
cmp
cmp
stc
push
mov
mov
mov
outsb
jle
mov
cmp
xchg
push
pop
push
pop
lock
dec
adc
sub
ds
sbb
sub
mov
cmp
inc
mov
fwait
inc
jl
and
or
adc
shrb
minps
repnz
xorb
mulb
test
and
imul
mov
outsl
imul
sub
je
clc
movsb
sbb
imul
insb
mov
mov
cmpsb
add
aas
mov
add
adc
mov
sbb
add
hlt
cmp
jb
push
flds
mov
mov
or
cld
icebp
pop
dec
xchg
out
out
popf
sub
sbb
cmp
sahf
xor
jp
lds
inc
movsl
testl
lods
cli
jmp
out
sub
dec
cmp
sahf
cmc
jle
mov
and
je
and
shrl
mov
bound
xchg
cmp
jmp
ss
bound
out
or
dec
fstps
dec
cmp
xor
xchg
out
iret
pop
movsb
lods
push
mov
je
add
movsl
jp
repz
push
fmulp
movsb
inc
cmpsl
mov
sub
iret
jecxz
adc
mov
cs
daa
scas
mov
imul
cli
das
bound
nop
lret
adc
xchg
pusha
fcmovb
popf
or
frstor
inc
rorl
rcrb
stos
imul
andb
push
inc
jbe
sub
push
push
push
inc
cld
inc
std
sub
sahf
daa
inc
cwtl
mov
stos
jae
cmpsb
shlb
cmp
data16
insb
ss
jno
push
rclb
add
cli
and
es
inc
push
jg
inc
ret
insb
cli
jge
pushf
leave
mov
mov
push
fmull
add
inc
inc
xor
and
insb
cmpsb
push
adc
cmpsl
mov
mov
inc
inc
repz
push
shll
cmpsl
or
ss
ret
and
jmp
arpl
ljmp
xchg
call
pop
lods
imul
or
cmp
int3
clc
rorb
cwtl
mov
xlat
sbb
fisttpl
jle
and
jnp
xor
sarl
xchg
mov
or
aas
pushf
sbb
data16
adc
add
loop
push
stos
xor
mov
xchg
cmp
adc
mov
and
jno
daa
repz
inc
mov
mov
xor
fs
sbb
jge
mull
pop
iret
stos
xor
cmp
add
sbb
lahf
push
mov
mov
stc
push
inc
jle
xor
hlt
lret
negl
cs
iret
insb
cld
push
cmp
test
adc
lret
in
mov
popf
inc
jle
pop
call
add
sahf
xor
jne
dec
jns
stos
inc
incb
mov
dec
xlat
inc
outsb
insb
bound
enter
enter
dec
xchg
loope
and
mov
or
sub
jne
pop
push
sub
arpl
inc
repnz
enter
fisubs
pop
adc
sarb
mov
loop
loope
mov
fnstcw
ljmp
rol
in
psubsb
or
fidivrl
sar
movsb
mov
jae
inc
pop
and
dec
aam
lcall
data16
cmpsl
stc
mov
add
sbb
mov
in
xor
lds
sete
or
or
mov
push
push
inc
popf
outsb
adc
imul
daa
mov
sarb
sahf
pushf
sub
xorb
into
stc
cmp
sahf
out
xchg
sub
xchg
jge
orb
ret
inc
stos
les
xchg
pop
xor
push
or
sbb
out
add
into
clc
or
mov
incl
jmp
subl
fldt
fwait
ret
inc
out
xchg
xor
push
sbb
mov
scas
dec
rol
into
jbe
ja
inc
les
scas
into
jge
lds
xchg
les
fidivrl
shll
sarb
std
ret
les
jg
test
js
cmp
mov
imul
lea
sahf
xchg
jmp
lret
test
fsts
dec
out
inc
aaa
loop
out
push
imul
push
sub
xchg
push
cmc
mov
dec
push
push
inc
mov
mov
insl
out
mov
push
push
rcl
sar
pop
int3
cmc
xor
push
data16
shlb
push
push
jae
inc
ds
mov
add
mov
xchg
sbb
fistpl
ljmp
mov
sbb
adc
push
gs
jae
push
mov
aad
pop
hlt
ret
xor
pop
andl
inc
lea
sbb
xor
popf
xor
out
jns
in
lcall
fnstenv
mov
push
sub
rorb
mov
aam
mov
cmc
pushf
sti
jno
mov
push
call
jo
pop
jb
lahf
stc
jp
xor
es
cmp
inc
mov
out
fisubrl
sbb
popf
arpl
repnz
mov
xor
in
jb
stos
cli
sub
movsl
je
mov
jg
lcall
adc
inc
stc
mov
xchg
cmp
mov
inc
test
inc
lds
outsl
aam
jl
sub
sub
cmp
sub
inc
out
add
sti
xchg
and
ljmp
stos
pusha
cmpsl
inc
arpl
pop
call
ret
and
xchg
push
sbb
push
loop
negb
adc
mov
rorb
movsl
cmpsb
stos
jecxz
push
jo
lret
push
fldenv
jle
arpl
mov
inc
dec
mov
fisttpl
mov
aaa
sbb
adc
icebp
out
adc
out
and
lcall
mov
push
outsl
inc
dec
fimull
sub
fadds
push
lret
in
bnd
push
sub
pop
adc
adc
inc
pushf
lods
rclb
pop
inc
adc
pop
loope
or
fldl2e
adc
iret
sub
stc
js
adc
insb
andl
add
icebp
sarl
btr
fcmovne
loopne
sti
xchg
and
jnp
dec
testb
arpl
test
out
lock
lods
dec
xchg
fisubrs
mov
pop
pop
movsl
aad
cwtl
cmc
leave
outsl
out
fbld
xor
push
imul
stos
ljmp
dec
andb
pop
int
push
sahf
out
fucomp
mov
ds
inc
inc
sub
inc
pop
dec
jmp
and
and
pop
addl
add
and
dec
jnp
leave
push
xor
xor
lahf
pusha
out
movsb
outsb
rcrb
jge
dec
mul
or
enter
insb
in
mov
aaa
adc
push
cmpsb
imul
adc
mov
mov
icebp
dec
pop
mov
addr16
ljmp
pop
rcr
repnz
xchg
inc
and
imul
mov
mov
int
xor
jecxz
inc
mov
aad
fs
repz
sub
enter
add
int3
or
mov
xchg
and
out
inc
in
cmp
push
mov
out
shrl
out
int
jbe
das
pop
pushf
push
rcrb
test
vandnps
dec
mov
lret
sub
inc
or
pop
decl
fstps
and
xorl
les
das
insb
mov
addb
and
sub
xor
arpl
pop
cmp
push
jns
add
cld
push
pushf
xlat
add
cmp
popf
push
addb
adc
loop
adc
arpl
scas
inc
cmp
nop
xchg
mov
sbbb
out
lahf
dec
bound
jnp
pusha
iret
pop
inc
dec
mov
inc
mov
pop
hlt
hlt
or
sbb
popa
outsl
xchg
xchg
push
sub
jne
xlat
aas
sub
jno
cmp
mov
adc
or
xchg
mov
ffree
mov
xlat
rclb
or
xlat
sbb
pop
pop
popf
xor
inc
js
cs
push
iret
subl
inc
mov
stc
sbb
in
addb
cmpsb
xchg
xchg
mov
cmp
repnz
shll
or
xchg
add
fs
nop
movzwl
mov
dec
pushf
mov
jo
into
lods
test
cltd
adc
xchg
fldl
xchg
mov
add
pop
and
sub
push
cmc
dec
cmp
rcl
cmp
add
cmp
fisttpll
mov
jmp
mov
ds
int
cmpsl
mov
cli
out
out
out
push
sbb
fldcw
dec
enter
test
xchg
mov
scas
cld
rcr
add
inc
fistps
clc
xlat
xor
jno
push
mull
shr
outsb
sub
mov
add
fisubrl
les
mov
std
negl
roll
nop
fnstenv
mov
dec
int3
call
les
rdmsr
js
insl
and
fidivrs
fnsave
xchg
js
popf
mov
loop
lret
aaa
out
cmpsb
lret
push
or
cmp
ljmp
sub
xor
or
mov
lock
xchg
dec
shlb
mov
fcompl
dec
adc
emms
jnp
sbb
outsl
cmp
cmpsb
call
cmp
paddusb
pop
out
rorb
sub
push
add
push
mov
ss
sub
and
movsl
push
mov
push
dec
fistl
ficompl
in
loop
es
daa
lock
fmul
inc
rorl
xchg
gs
push
int3
adc
mov
popa
sbb
into
mov
xchg
cmp
in
dec
or
xchg
int3
test
xchg
cmp
test
movsl
pop
fnsave
outsl
fldenv
push
inc
scas
shlb
xchg
lret
stos
sbb
dec
pop
lret
jecxz
insb
fwait
adc
adc
fcompl
mov
or
add
xchg
hlt
outsb
pop
or
push
sti
mov
fsts
xchg
in
int
xchg
cltd
sbb
cltd
sbb
xor
movsl
push
stos
imul
xchg
sub
in
mov
sbbb
es
ret
ret
out
jecxz
mov
xlat
mov
push
popfw
sbb
lods
jp
mov
mov
mov
mov
add
xor
xchg
pop
dec
xor
ja
push
push
cmp
movsl
pop
lods
imul
inc
aad
inc
jge
sbb
jmp
mov
shll
add
adc
std
jmp
dec
lea
pop
cmp
ja
dec
stc
mov
xchg
test
clc
rcl
sbb
jbe
insl
pusha
dec
fs
dec
stos
stos
outsl
inc
and
xor
jns
fcomps
rcl
fimuls
ss
sarb
and
fcoms
adc
cs
add
dec
mov
jl
sarb
inc
nop
push
mov
mov
jo
xchg
int
in
out
jge
cmp
jge
mov
pop
mov
mov
cmp
or
je
mov
loope
cld
cmp
andps
xor
push
loope
sub
dec
push
cwtl
shr
jne
add
int3
mov
or
add
outsl
imul
cmc
fmuls
fsubrp
jno
int
xchg
sub
lret
insb
leave
pop
cmpsl
or
fsts
inc
fidivl
jno
aaa
andb
nop
or
mov
nop
ds
int3
push
leave
push
fwait
insl
insl
sbbb
enter
mov
jnp
nop
adc
and
into
sub
cld
cmpsb
sub
xchg
cwtl
jo
pusha
aas
inc
dec
adc
decb
addr16
inc
jno
cmp
mull
jecxz
jmp
loope
push
pusha
loope
sbb
loopne
add
bswap
test
and
call
hlt
push
jp
mov
jp
fsubp
mov
mov
fwait
test
xlat
add
fs
bound
clc
insl
rclb
lret
pop
ljmp
das
jp
pop
pop
rorb
mov
cmpsl
sub
sbb
inc
repnz
cmp
popf
rorl
lcall
fiadds
outsl
inc
mov
and
add
pop
loop
pop
add
pop
movsl
mov
into
ficompl
je
jns
push
sbb
pop
xlat
in
jbe
sub
or
in
fsub
ret
push
sub
pop
nop
repz
clc
cld
fwait
add
les
fmul
lods
xchg
or
sahf
movsb
call
cs
cld
adcl
or
mov
cmp
flds
mov
sti
adcl
sahf
pop
adc
jne
out
cmp
out
push
mov
mov
fistl
jnp
or
lods
adc
xchg
pop
cld
dec
ss
imul
imul
out
inc
fnstsw
xor
cld
mov
mov
outsl
mov
xor
in
adc
pop
jg
cmp
jecxz
jle
je,pn
mov
xor
in
xlat
cmp
rcll
fcmovu
sahf
movsb
dec
push
mov
sbbb
jp
xchg
sub
jne
ret
add
pop
fdivrl
loope
test
sub
movsl
mov
ja
jns
push
push
addr16
loope
xor
xor
pop
imul
push
sbb
stos
hlt
and
rorl
push
out
jnp
or
mov
mov
cmp
fucom
loop
sbb
sahf
movsl
in
sub
cmp
jecxz
inc
jae
hlt
or
xor
test
add
lds
sub
and
add
sbb
and
pop
mov
test
mov
bound
xor
fwait
mov
jae
ficompl
andb
test
ss
out
inc
pop
out
sbb
inc
and
pusha
pop
or
lea
and
pop
aaa
sahf
iret
test
in
in
jne
and
mov
cli
pop
jg
inc
mov
stos
daa
popa
add
test
inc
hlt
js
in
sbb
rclb
inc
stos
popa
fdivrp
xor
sbb
imul
push
mov
aas
std
xchg
push
mov
fmuls
sbb
out
call
test
dec
xchg
std
cmp
or
sub
jmp
inc
xchg
mov
push
test
stc
and
mov
popf
mov
push
inc
xchg
jl
mov
push
xlat
test
test
or
and
jnp
loope
inc
repz
int
sbb
and
out
or
xchg
pop
mov
mov
pop
mov
push
idivl
dec
outsb
icebp
xor
call
xchg
test
pop
jp
testl
cmp
push
ja
sti
or
hlt
test
repz
add
roll
jecxz
clc
out
pop
dec
lcall
jns
int3
jns
jmp
movsl
mov
mov
push
mov
mov
out
cmpsl
inc
add
hlt
test
cltd
int
movsl
sub
push
call
imul
shr
jecxz
xchg
call
xor
imul
inc
test
aad
stc
push
test
std
add
cltd
push
das
jge
dec
cwtl
and
clc
inc
mov
mov
daa
pop
cmp
push
jl
sub
test
lret
fldcw
xor
cmp
lods
lock
sub
cmp
imul
pop
push
les
push
pushf
mov
or
mov
push
adc
pop
pushf
ljmp
insl
lock
add
data16
and
xchg
imul
ljmp
rcrb
sub
ljmp
sub
pop
divl
inc
jmp
repz
mov
and
mov
xor
mov
jae
scas
adc
jnp
sbb
mov
into
jle
xor
jp
cs
push
cmp
jmp
les
cmp
mov
out
push
jb
push
into
mov
ss
jmp
loop
adc
aaa
jecxz
jmp
mov
inc
pop
cmp
add
jnp
mov
jb
aaa
adc
insl
xor
lret
push
mov
cmpsb
pop
insb
incl
and
sub
movsb
into
test
sbb
cmp
lds
insl
push
jo
mov
ss
rcll
mov
add
repz
adc
daa
loope
lcall
rcrl
jae
dec
popa
fcoms
push
mov
daa
pop
mov
test
push
sub
leave
stos
sbb
xor
sub
dec
push
mov
movsl
fldt
push
int3
loope
in
popf
sbb
insb
out
cs
scas
mov
lea
push
dec
scas
js
or
ret
lea
mov
mov
sbb
mov
mov
cwtl
inc
lret
sbb
push
in
call
fcmove
mov
aam
xchg
popf
mov
stc
sub
fcmovu
jecxz
and
jno
shrl
fldt
cmp
sbb
fidivrs
or
push
jne
addb
ljmp
into
jbe
mov
xchg
icebp
movsb
jg
mov
adcl
mov
cld
pop
dec
inc
jg
repz
test
jbe
in
cwtl
imul
push
sti
jne
inc
and
mov
imul
lcall
ja
fdivr
cmpsb
lea
lcall
sbb
faddl
out
push
orl
cmp
fdivs
mov
add
inc
rorl
out
fnstsw
sbb
mov
xlat
mov
dec
push
add
push
mov
cmpsl
jns
leave
sub
mov
loop
push
sub
cmp
pop
xor
add
fdiv
mov
test
or
repz
dec
cmp
aaa
dec
xor
jmp
out
cli
hlt
xchg
mov
xor
outsb
cwtl
arpl
xchg
jnp
add
xor
mov
pop
faddl
das
mov
inc
test
pop
adc
and
mov
cmp
xor
push
mov
pop
orb
mov
mov
jg
fwait
pop
adc
sub
sbb
jecxz
leave
xor
pcmpgtb
and
les
out
aaa
andb
lea
dec
jle
mov
jo
sub
mov
cmp
out
mov
gs
enter
mov
jno
das
xor
fistl
je
mov
rorb
test
xchg
mov
sbb
lods
adc
mov
pop
add
shr
mov
scas
insb
and
lret
jb
xor
ja
gs
push
iret
or
lret
shrb
test
push
cmpsb
push
adc
pop
push
pop
ja
adc
add
xchg
or
enter
loopne
cltd
pushf
mov
loopne
push
lret
daa
aad
mov
mov
les
mov
dec
movsl
js
push
mov
popa
dec
clc
std
xchg
outsb
push
mov
test
addb
lds
lds
sbb
push
test
inc
mov
push
inc
mov
xchg
cmp
lahf
lcall
push
cwtl
jo
adc
inc
jp
cmpsl
xchg
fnstenv
push
hlt
cmc
push
iret
out
jb
insb
mov
shr
adc
jae
mov
dec
mov
in
fisttpll
mov
ror
mov
dec
or
inc
mov
sbbl
js
inc
icebp
xchg
and
mov
std
imul
stc
ret
std
pop
or
jo
mov
rclb
outsb
adcl
sti
inc
pop
scas
mov
lods
xchg
adc
ss
loop
clc
mov
mov
inc
fiaddl
mov
jmp
insl
in
pop
repnz
je
xchg
fwait
or
dec
lods
xor
mov
xchg
jae
insb
pop
mov
out
adc
into
adc
pushf
cltd
fistps
push
mov
mov
lret
ffreep
and
pushf
sub
push
pushf
sbb
xchg
sbb
cmp
das
xor
sti
lret
or
or
scas
daa
clc
jl
lods
jge
xchg
inc
insb
outsl
nop
call
out
cmp
pop
jge
mov
mov
mov
mov
mov
add
shl
mov
popa
pushw
fistl
stos
sbb
icebp
scas
jmp
insb
call
mov
cs
adc
add
or
mov
xor
imul
adc
or
lea
and
push
ja
inc
hlt
xchg
daa
pop
or
repnz
fstpt
push
mov
enter
repnz
das
addr16
dec
cmp
pushf
jmp
add
sbb
xchg
sbb
pop
sbb
inc
push
fstpt
lret
mov
jb
nop
shr
jno
stos
push
xchg
pop
pop
sbb
bound
inc
scas
add
out
xchg
ljmp
pop
and
push
add
fists
std
in
inc
cmpsl
cmpsl
gs
add
add
inc
xor
sub
hlt
js
lret
add
imulb
sahf
cmc
sti
mov
dec
mov
std
mov
pop
test
xchg
pop
cmp
loop
lods
adc
lcall
out
lahf
push
jne
sbb
push
loopne
xchg
or
add
out
ljmp
int3
std
cmp
inc
or
arpl
rcr
dec
inc
mov
out
jg
push
xor
push
cmpsb
std
mov
dec
lea
cli
xchg
addr16
out
movsb
mov
out
jle
loope
mov
hlt
push
addr16
cmc
scas
mov
cwtl
mov
adc
push
stos
mov
roll
dec
shr
push
xchg
pop
dec
orl
movsl
call
rcl
pop
cmpsb
call
xor
test
sub
adc
test
cmp
cmp
dec
cli
adc
push
push
inc
add
imul
lcall
xchg
insl
adc
fcoml
mov
cmc
nop
inc
ja
adc
add
pop
jns
or
push
xor
repz
call
popa
mov
xchg
ret
push
xchg
loopne
lcall
add
sub
leave
call
cltd
sub
popf
fs
cmp
xchg
aam
insb
leave
dec
pop
div
inc
mov
fdivrp
bnd
cmp
cwtl
jecxz
jecxz
xchg
jo
das
lea
lea
xchg
test
cmp
inc
loopne
lret
cld
sbb
fabs
xor
ficomps
adc
and
outsb
scas
sbb
cmp
xchg
daa
inc
lcall
xchg
push
enter
and
or
mov
push
jns
testl
mov
push
cs
sbb
pop
mov
jnp
lret
jo
test
mov
dec
cltd
push
xlat
rolb
jno
lahf
scas
xchg
lret
pop
xor
sbb
cmpsl
add
das
add
push
inc
repz
je
push
int
xchg
pop
mov
lods
enter
mov
fisubl
or
xchg
push
int3
leave
dec
xchg
xchg
icebp
test
add
fwait
xchg
inc
mov
test
jle
ja
xchg
loope
cli
mov
xchg
fcoml
or
inc
mov
repnz
lods
push
xor
loop
push
inc
lret
addl
je
test
clc
dec
test
dec
sbb
loopne
cmp
adc
jmp
sahf
call
daa
test
movsl
ja
stos
sti
negb
inc
fxch
push
or
mov
mov
mov
sub
fwait
daa
cld
jle
out
mov
mov
cltd
xchg
cld
push
inc
lock
int
mov
mov
jo
ss
int
jbe
mov
mov
xlat
fstp
mov
mov
mov
das
push
pop
jnp
lock
or
and
mov
ds
xor
push
mov
movsb
mov
mov
xor
inc
inc
popf
pop
imul
jns
xchg
xor
ret
xorb
out
pop
dec
inc
jge
or
fisubrs
jae
lahf
xchg
fidivl
pop
jnp
lret
mov
cmp
repnz
adc
jno
cli
shrb
jo
xchg
mov
add
aam
pop
pop
inc
sbb
and
sbb
inc
push
and
addr16
test
pop
fwait
add
mov
aas
aaa
lret
in
xchg
xchg
and
and
add
dec
cwtl
das
jbe
repnz
lahf
mov
xor
xchg
lds
push
xchg
clc
js
setge
in
in
cmp
or
or
rol
pop
adc
mov
mov
cmp
push
mov
enter
cmp
cmp
add
fdivrl
dec
lods
sbb
push
add
mov
das
mov
cmp
imul
sbb
outsb
xchg
test
cmp
cli
stc
outsl
mov
xchg
in
lahf
fucomi
and
lock
scas
mov
jns
mov
stc
lock
push
bswap
cmp
add
in
and
lret
dec
ror
inc
cmpsb
xor
xchg
ljmp
sub
mov
call
daa
out
data16
incl
or
push
loopne
jl
and
inc
dec
xchg
jmp
std
mov
push
fwait
pop
inc
inc
test
and
test
ds
xchg
xchg
and
mov
jnp
sbb
fildll
insl
aaa
mov
adc
mov
fstpt
push
sub
inc
outsb
cmp
cs
rolb
ret
mov
and
mov
lds
xchg
inc
andb
call
jl
mov
scas
xor
mov
mov
bound
test
push
sub
mov
inc
std
movsb
sbb
adc
sbb
add
push
gs
sbb
cmpsb
imul
mov
leave
enter
jp
sti
sti
into
lds
xor
bound
pop
movsb
dec
insl
cmp
xor
insb
adcb
sbb
push
mov
ficoml
int3
mov
lds
mov
fwait
push
faddl
inc
fwait
dec
pop
push
js
mov
jo
bound
mov
icebp
xor
sahf
add
dec
cld
je
stos
loope
sub
test
pop
mov
insl
xchg
mov
fdivrs
mov
sub
dec
xor
aas
in
pusha
rolb
jb
push
cltd
es
xchg
div
inc
cmc
shlb
out
adc
xor
and
pop
lahf
jno
nop
and
or
ja
mov
cmp
std
cmp
push
inc
xchg
or
clc
sbbl
aaa
sbb
scas
ds
je
pop
dec
test
sbb
out
xor
fmull
jge
xorl
cs
dec
mov
andl
sub
aad
in
roll
and
fsubr
dec
pop
lods
xchg
ja
sbb
sbbb
push
jo
add
popf
jns
sub
inc
cwtl
loopne
adc
jle
addr16
shr
and
adc
popf
aaa
xchg
jb
bound
jno
aam
lods
push
jns
mov
jmp
lock
stos
jne
loope
cmpsl
pop
jecxz
or
adc
leave
fwait
adc
add
lods
push
bswap
cs
add
sbb
movb
jle
mov
cwtl
lods
mov
gs
pop
mov
push
adc
pop
clc
mov
sub
leave
or
xor
pop
add
sub
mov
ffreep
or
jmp
push
stc
es
inc
sbb
aas
cli
cmp
jge
stc
cmp
cli
xchg
sar
fldl
sub
pop
pop
idivb
bound
xchg
dec
mov
aam
lcall
xor
push
sub
jl
das
je
test
sbb
sub
mov
pop
pusha
sarb
cmp
das
imul
jbe
mov
mov
shrb
push
repz
push
mov
rclb
into
mov
jnp
js
test
xchg
jno
xchg
aas
jnp
and
das
xorl
sahf
pop
test
inc
xchg
repz
or
sub
and
dec
cltd
adc
mov
dec
hlt
mov
sahf
imul
xchg
scas
mov
out
xor
lock
pop
jne
std
shl
ja
inc
hlt
outsb
ljmp
jae
adc
mov
mov
jo
inc
adc
loop
scas
add
push
pop
aam
arpl
inc
adc
lahf
arpl
jp
jno
scas
jg
pop
clc
popf
sahf
add
mov
aaa
push
pop
sub
shrl
adc
repz
xchg
and
push
scas
jge
imul
int
fisttpl
sub
pop
icebp
andl
cmpl
movsl
imul
fdivrp
xlat
xchg
dec
or
test
sub
movsl
jg
mov
aad
addr16
and
leave
inc
jno
call
daa
loope
mov
inc
nop
pop
pop
xlat
cmpsb
lods
mov
nop
stc
test
push
outsl
push
fadd
xlat
mov
outsb
mov
and
movsb
xor
jne
arpl
aad
pop
adc
dec
pop
arpl
mov
xchg
rorb
jo
clc
xor
xchg
inc
xor
jge
pushf
xorb
rcll
or
aaa
cli
and
in
sbb
inc
popa
fsubs
nop
mov
hlt
xlat
cmp
shrb
lret
add
sbb
aas
mov
xchg
adcb
adcb
sbb
push
and
pop
jmp
les
cmpsb
testl
shlb
jb
pop
daa
out
mov
sbb
ljmp
hlt
push
in
rcrb
scas
dec
mov
gs
lock
cwtl
dec
repnz
push
std
sbb
dec
jbe
leave
movsb
xchg
mov
pop
out
divb
xlat
jmp
test
pop
sub
inc
mov
imul
dec
out
ret
ss
jbe
dec
pop
aaa
or
hlt
movsl
loopne
fs
es
pop
arpl
push
jmp
cli
lock
in
push
cmp
imul
sub
add
lods
ficompl
push
push
mov
sbb
roll
xchg
lahf
sbbl
xor
add
adc
scas
cmp
test
and
inc
push
mov
jmp
ret
or
ljmp
mov
mov
xchg
push
out
cmpb
mov
ret
iret
pop
or
out
insb
cld
dec
ja
push
std
out
data16
subb
lret
push
imul
mov
push
or
mov
mov
and
xor
ja
movsb
jg
and
ljmp
sbb
lock
int
or
cmp
inc
addr16
push
push
add
or
js
hlt
or
lds
sbb
into
lods
out
adc
std
cwtl
ret
loope
inc
mov
int3
mov
push
mov
fistps
loope
adc
into
mov
test
sarl
imul
adc
sbb
sbb
adc
movsb
mov
mov
test
das
jl
pop
movsb
dec
test
mov
add
aaa
lahf
mov
dec
ljmp
jl
xchg
xchg
out
shlb
jb
push
jb
js
xlat
lds
pop
xor
mov
pop
push
mov
int
sbb
adc
push
scas
add
outsb
push
jb
leave
shl
and
ss
andl
mov
cmp
cli
dec
cld
iret
imul
push
add
aaa
aas
fcompl
pop
in
jp
mov
bnd
outsl
adcb
push
push
imul
mov
mov
addr16
inc
push
sub
outsl
xchg
andl
sbb
add
divb
cld
and
call
pavgw
stc
xor
mov
ret
ud0
jle
loopne
add
push
xchg
push
ret
insl
pushf
xor
shlb
mov
mov
fdivs
xchg
cmc
scas
js
je
pop
adc
pusha
mov
sti
lcall
mov
add
clc
sbb
mov
cmp
pop
fisubrl
and
pusha
xlat
lds
pop
ret
wbinvd
and
test
aas
dec
inc
cld
or
mov
outsb
mov
cs
push
test
or
repnz
scas
jg
adc
jne
rcr
xor
mov
mov
add
and
cmp
jno
lcall
pop
cmp
in
inc
loope
add
mov
loope
inc
dec
inc
xor
and
ret
mov
cmp
imul
aaa
rep
adc
push
and
shll
daa
imul
cmpsl
push
mov
or
sbb
jnp
push
arpl
and
es
cmpsl
roll
sbb
sbb
ss
add
inc
xchg
cmp
lds
and
sub
xchg
jnp
pop
hlt
mov
cmc
jo
fsubs
hlt
dec
push
movsb
sub
lock
pop
or
mov
fcoml
push
mov
cltd
add
aas
daa
pusha
inc
icebp
cmpsl
mov
xchg
adc
push
add
xchg
push
insl
popa
inc
mov
frstor
cmpsl
call
jmp
push
dec
jl
inc
mov
sti
push
and
sbb
fsts
imul
ja
aam
push
dec
xchg
push
jl
ja
pop
mov
jle
jnp
pop
and
jo
or
dec
mov
pop
cld
mov
inc
dec
dec
out
iret
aam
movsb
int
fnstsw
mov
loopne
cmp
jmp
xor
loop
add
aaa
cmp
pop
scas
aam
int
enter
add
dec
pop
addb
pop
fidivs
repnz
fstpl
insl
mov
xchg
xlat
add
fsubl
and
mov
ljmp
add
dec
scas
pushl
fiadds
jmp
cmp
inc
rcr
adc
cmpsl
cmp
mov
fs
imul
mulb
jbe
fistpl
mov
hlt
movsb
int
add
std
lods
xchg
push
add
lret
dec
bound
mov
dec
gs
test
aaa
cltd
add
pop
xlat
outsb
pusha
xor
stos
test
mov
enter
push
fbld
push
cmp
mov
push
jl
mov
stos
mov
pop
cli
imul
je
fwait
outsl
sub
adc
in
lds
cmpsl
popf
sub
ret
shl
push
sbb
xor
mov
das
mov
pop
push
imul
xchg
aaa
outsl
loopne
adc
loope
icebp
jle
mov
jecxz
push
push
xlat
cmp
jg
sbb
popf
dec
mov
addl
mov
vzeroupper
scas
cmp
popf
fistl
cmp
arpl
test
mov
pusha
xor
jb
fists
lds
push
mov
cmovg
add
jmp
lock
sti
mov
push
insb
inc
cmp
aaa
mov
stos
inc
mov
sbb
mov
ljmp
pop
loopne
mov
push
add
popf
in
push
mov
xlat
lods
rorl
ret
adc
movsb
cwtl
mov
rcll
cmp
js
fcomps
jae
or
xor
or
xlat
cltd
mull
rorb
mov
sbb
mov
inc
xchg
aad
and
mov
mov
dec
sub
int
sub
pop
and
mov
fistpll
xor
mov
fidivrs
adc
xchg
add
mov
negl
add
int3
jnp
sbb
outsb
mov
sqrtps
cwtl
jp
in
lcall
adc
mov
mov
ja
arpl
push
adc
fcmovbe
sub
or
fnstenv
jle
mov
daa
xlat
dec
inc
dec
ret
mov
fwait
sub
rcrb
dec
mov
ss
lods
into
in
call
xorl
insl
xchg
pop
dec
repz
shrl
cmp
ds
adc
pop
sar
sbb
adcb
test
ret
loopne
movsb
jge
push
or
jno
imul
xor
loope
addb
dec
cmc
or
jnp
mov
lret
mov
nop
into
outsl
jle
fldcw
cltd
dec
and
xor
mov
test
rcrl
in
mov
xchg
cmpl
js
in
mov
addb
jp
or
sbb
ret
das
or
adc
movsl
xor
dec
shlb
mov
jge
pushf
jecxz
out
push
lods
movl
lret
lods
stos
andb
fcmovb
push
mov
popa
leave
push
add
test
insb
inc
push
popa
adc
jge
xchg
jb
stos
subb
pop
popa
inc
divl
xchg
adc
fld
inc
adc
pop
loope
fst
mov
sbb
xor
pop
add
jb
adcl
gs
or
out
imul
test
mov
inc
mov
imul
mov
sbb
jecxz
int
movsl
enter
pop
in
imul
or
dec
and
cmc
sbb
icebp
sbb
jno
std
fisubs
inc
lcall
popa
jb
ret
mov
mov
ret
dec
and
enter
ret
into
movlps
daa
and
cmp
lock
pop
outsb
mov
adc
popf
xor
jge
out
or
mov
mov
fstps
sbb
ror
mov
mov
outsb
pushf
divl
mov
sbb
mov
shll
sahf
test
icebp
add
nop
sub
scas
sub
into
dec
mov
sbb
add
mov
and
mov
inc
add
and
adc
into
mov
lret
lods
xor
scas
push
mov
nop
mov
mov
repz
sbb
sahf
cmc
xchg
mov
inc
insl
sbb
shrb
mov
xchg
lret
insb
or
loopne
insl
dec
fwait
dec
adc
mov
add
cmp
ja
jle
cmpsb
mov
mov
or
adc
mov
imul
popf
mov
repz
mov
arpl
xlat
sbb
shl
test
cs
cmove
sarb
pop
push
and
arpl
icebp
aas
mov
cmp
ds
out
mov
adc
cld
cwtl
push
mov
mov
inc
lods
xchg
push
mov
or
jg
fwait
mov
adc
sub
cmp
stc
dec
mov
mov
dec
inc
xchg
ret
scas
fnstsw
addr16
push
movsb
push
push
jmp
mov
popf
dec
popf
cli
popa
dec
lret
mov
mov
les
xor
pushf
pop
inc
fstl
xor
loop
sub
xlat
ds
xchg
mov
sub
loope
dec
insl
lret
push
shlb
stos
rclb
dec
mov
test
inc
push
sub
lea
xchg
aas
repnz
repz
and
out
addr16
xor
xchg
sbb
dec
aaa
pop
mov
and
and
dec
add
popa
sub
mov
mov
test
std
pop
jl
sub
sbb
scas
add
xchg
pop
inc
adc
fmull
fcoml
mov
xor
rcrb
andb
mov
stos
cli
push
cmp
pop
sbb
gs
or
aaa
and
inc
xchg
fsubl
fisubrl
scas
xchg
mov
push
in
es
pop
ljmp
insl
shlb
push
outsb
pop
sti
add
xlat
lcall
sub
cwtl
or
gs
repz
cmp
add
or
cmp
push
in
out
push
movsb
jg
cmp
push
jo
lret
mov
lret
cs
xor
popf
bound
xlat
and
cld
jae
jmp
mov
xchg
push
jge
cltd
push
or
or
in
scas
jno
or
mov
mov
imul
addr16
xor
add
mov
or
sub
mov
js
jnp
into
add
xchg
loope
int
jne
or
xchg
mov
mov
mov
sub
sub
les
adc
jmp
test
popf
pusha
sbb
lret
add
in
sbb
fidivrl
ret
hlt
mov
xchg
push
outsl
out
adc
mov
push
ds
imulb
xchg
mov
dec
pop
xchg
hlt
or
addl
ja
pop
seto
gs
and
adc
mov
dec
cs
fsqrt
xchg
sbb
int
mov
dec
repnz
ss
fwait
cli
outsl
inc
aam
lods
jle
fwait
sub
dec
pop
out
fwait
fs
xor
ds
pop
out
mov
mov
movntps
stos
aam
xor
mov
sbb
out
adc
cmp
jne
add
repz
lock
pop
inc
pop
shlb
lcall
je
movsl
pop
pop
mov
xor
imul
sub
cli
push
faddp
test
sahf
jno
sub
adc
xor
adc
rep
fmull
adc
gs
xor
add
roll
inc
mov
cmovs
adc
imul
mov
sub
lods
nop
testl
jo
push
push
in
add
ret
mov
jle
xchg
fidivrs
scas
lret
cmp
scas
xchg
jae
inc
call
adc
out
sbb
jne
sbb
cmpsb
dec
popf
shrb
imul
and
cmp
dec
stos
xchg
and
aam
dec
out
add
pop
in
daa
in
rcrb
jecxz
movsb
movsb
mov
xor
out
inc
std
mov
movsl
mov
movsl
pusha
push
mov
popf
repz
xor
outsb
cmpsb
sbb
and
sbb
mov
mov
fwait
cmp
mov
sbb
ret
mov
sub
pop
mov
add
lds
ret
leave
pop
add
pop
or
sbb
adc
and
inc
cs
sbb
jne
jae
and
xchg
repnz
pop
cltd
pop
dec
dec
mov
lahf
cmpsb
out
mov
loope
inc
mov
pop
aad
gs
dec
dec
adc
jo
hlt
rorb
pop
jo
in
std
inc
cmp
add
imul
inc
mov
and
push
push
fs
stc
xor
dec
fsubs
popf
mov
jb
test
aaa
mov
cmp
in
push
cltd
mov
or
aas
shrb
test
add
sahf
scas
int
lods
inc
mov
mov
cltd
pop
push
out
outsl
mov
pushf
jg
in
sub
pusha
in
xor
push
jo
inc
inc
or
sub
mov
mov
mov
pop
xchg
sbb
and
xorb
cwtl
insl
mov
in
aaa
add
scas
push
adc
inc
pop
jmp
push
rep
sti
or
adc
or
fsubrs
cmc
lret
cli
subb
sub
ret
notl
das
or
shrl
sbb
push
pop
leave
test
test
fwait
loope
ljmp
dec
push
fisubs
dec
test
dec
inc
fstpt
sbb
cmp
clc
jb
push
popa
mov
pop
popl
mov
pop
imul
inc
out
pop
sub
roll
sbb
mov
fnop
test
outsb
mov
and
stos
les
sub
mov
jl
add
pop
aam
aas
mov
push
mov
xor
mov
mov
jns
pop
push
subb
jne
inc
loope
js
xchg
test
shll
stc
vpmaxub
sub
and
lds
dec
dec
icebp
rcrb
jns
out
jo
icebp
icebp
cmp
call
xchg
lret
fstpt
inc
pop
push
push
scas
or
inc
pop
sbb
sbbb
and
ja
or
sub
aad
scas
negb
pop
insb
sti
mov
cmp
sbb
pop
push
fdivr
call
cltd
mov
xor
push
cmc
inc
out
hlt
sbbb
das
in
mov
and
addr16
xor
or
call
push
push
add
js
xchg
or
dec
push
repnz
adc
daa
pop
pop
pusha
incl
add
mov
push
aam
lcall
rorl
sub
adc
add
and
mov
mov
add
dec
jne
jp
scas
sahf
or
jns
sti
lods
out
jmp
ja
cli
xchg
imul
sbb
push
sbb
and
imul
mov
addr16
dec
cltd
mov
ss
mov
pop
jbe
and
ret
jno
pusha
addr16
inc
xor
popa
clc
in
je
cltd
mov
or
sbb
dec
mov
stos
mov
lock
mov
add
lods
mov
enter
imul
push
ds
lock
addl
vpsrld
xchg
sub
add
or
cmp
push
out
mov
mov
jmp
xor
jg
pusha
add
mov
das
mov
mov
dec
clc
mov
popa
and
mov
sub
fisttps
mov
mov
pop
inc
push
inc
cmp
cmpsl
sahf
mov
and
mov
sti
test
loopne
lcall
sbb
cwtl
movsb
mov
test
sbb
andb
in
hlt
mov
insb
add
sbb
test
cmp
loop
fiadds
or
ss
mov
mov
cmpsb
push
pusha
lea
sbb
pop
mov
cs
inc
and
popf
dec
cmpsl
sub
push
rcrl
clc
cli
popa
cmpl
pop
lahf
jnp
ret
rcr
cmp
jo
push
cmc
test
or
cmc
jp
inc
jp
ljmp
or
aaa
aas
cwtl
ljmp
das
push
in
mov
mov
jg
lods
fcmovne
pusha
xor
mov
insb
cmp
mov
adc
cmpb
push
adcb
loopne
imul
lods
data16
aam
and
sub
mov
and
ficoml
sbb
pop
aaa
mov
shrb
sti
fisttpll
mov
mov
cmp
push
cmp
add
ret
jno
sbb
push
adc
push
push
das
xchg
fwait
mov
push
sbb
jecxz
xlat
pop
ret
dec
xor
dec
jg
int3
push
mov
xchg
jbe
in
sar
daa
pop
mov
and
rorb
test
xchg
xor
mov
repz
jae
mov
pop
adc
and
fldcw
and
test
aaa
mov
sbb
cmp
loope
cmpsb
subl
cs
dec
shrl
sbbl
xchg
xchg
jecxz
xchg
mov
dec
mov
pusha
movsb
mov
icebp
cmp
push
inc
mov
mov
lcall
mov
cli
or
pop
push
incl
mov
xor
ds
movsb
sahf
or
pop
lock
jge
and
stc
outsl
and
dec
sti
xchg
mov
lea
push
mov
test
aad
xorl
cmp
jl
das
pusha
add
add
int3
mov
test
inc
in
pop
mov
pop
stos
filds
mov
repnz
pop
repz
pop
in
aad
adc
push
outsb
add
mov
cmpsb
xchg
fadds
and
mov
fimull
or
insl
arpl
pusha
push
pop
cs
lret
add
in
fadds
std
aad
or
pop
dec
aad
mov
and
or
out
mov
pop
mov
mov
mov
mov
pushf
ljmp
lods
mov
aaa
into
mov
sbb
les
mov
xor
pop
cwtl
dec
mov
js
mov
jo
inc
cli
outsl
and
cmpsl
push
testb
add
fwait
lcall
jecxz
dec
mov
pop
xor
in
pop
test
jnp
fwait
push
mov
movsb
mov
sbb
jns
pop
or
out
cmp
xchg
mov
push
mov
and
jmp
inc
jmp
adc
es
fcompl
stc
dec
ljmp
adc
int3
cmp
lods
mov
add
add
mov
ja
xchg
out
sub
pop
xchg
sbb
jp
lret
in
xlat
pop
cmp
lret
jne
sbb
add
mov
fcmovu
sbb
or
sti
lret
loopne
mov
nop
out
sub
cvtps2pi
fstl
mov
test
icebp
or
push
popa
call
hlt
or
cmp
sahf
cmp
divb
les
into
mov
cmpsb
or
add
fmuls
test
push
jle
jne
loopne
rcr
nop
bound
ja
jmp
cs
dec
in
insb
mov
inc
xchg
cmp
movsl
mov
cmp
inc
or
iret
mov
inc
sbb
cwtl
call
cmp
cmpsb
rcll
inc
mov
xor
sahf
mov
xchg
push
mov
sub
lds
sbb
jns
pop
xchg
and
aaa
mov
setne
xlat
rcrl
movsb
push
push
imul
fimuls
lock
aad
mov
dec
add
ret
cltd
jp
stos
push
leave
fsub
cmp
pop
or
es
dec
sbb
mov
push
lods
cmp
xchg
in
sub
dec
sbb
lock
inc
add
push
adc
aas
das
nop
in
pusha
jo
daa
call
dec
dec
leave
xchg
xor
cmpsl
adc
loopne
sub
jmp
jmp
cmp
jle
push
pop
sti
xchg
test
sbb
lahf
adc
jbe
clc
out
fisubs
xchg
jo
mov
mov
mov
std
adc
sahf
vxorpd
xor
mov
mov
in
and
sub
movb
jne
sub
test
mov
jae
xchg
push
ficompl
loop
mov
pop
fstl
sub
adc
and
fnstsw
test
sbb
int3
loope
mov
mov
fcomps
lahf
inc
push
sub
and
mov
xchg
add
negl
xchg
adc
mov
cmc
fcomp
adc
inc
sub
cmp
insb
pusha
lret
in
mov
cmpl
in
int3
addr16
inc
mov
rcll
xor
jne
add
sbb
fstps
xchg
loopne
inc
imul
addr16
pop
pop
mov
lahf
cwtl
or
cs
sbb
ss
sbb
lds
lret
xor
pop
aaa
xchg
dec
or
adc
jmp
lea
cmp
insl
mov
mov
jecxz
mov
imul
ja
sahf
rcrb
in
and
jo
enter
addr16
rcrb
pop
repz
js
icebp
dec
jge
cmpsl
push
jnp
push
lret
add
jmp
jno
push
push
cli
divl
xchg
nop
fimull
fisubrs
push
push
fwait
and
mov
xchg
xchg
in
rcll
xchg
fcoms
sbb
dec
adc
xchg
or
arpl
or
test
cli
fwait
in
pop
subb
sarl
adc
xchg
insl
test
jb
int
jb
adc
outsb
rolb
insl
push
push
int3
sahf
test
lret
jbe
and
icebp
cmpsl
xchg
inc
mov
stc
xor
mov
jp
mov
inc
inc
lea
shlb
jo
shlb
xor
ljmp
pop
movsb
mov
inc
cmpsl
mov
jo
loope
lock
push
sub
mov
in
jnp
test
mov
cmc
cmp
lods
imul
mov
shll
jne
inc
out
repz
sub
cltd
push
or
lods
scas
test
mov
adc
cltd
ljmp
add
and
out
adc
sbb
jbe
mov
out
ds
popl
adc
cmp
sahf
aad
es
subb
int
lods
add
jl
lods
mov
cmpsb
scas
stos
push
xchg
rolb
testb
in
movsb
sub
dec
xor
arpl
insb
subb
je
outsl
mov
xor
inc
dec
sbb
pop
clc
dec
scas
fld
sahf
mov
repz
ja
gs
xor
or
aad
xchg
fidivl
daa
pusha
jb
stos
pop
mov
jo
rcr
push
roll
cmpsl
into
and
in
fmull
lret
fisttps
mov
into
jne
xor
in
dec
or
out
loopne
sbb
lcall
out
fs
mov
cmp
adc
cmp
dec
rcll
test
push
jle
sub
mov
push
add
cmp
cwtl
mov
pop
sub
adc
sbb
push
daa
dec
cli
addr16
int3
jecxz
popa
mov
sub
add
ss
ja
test
bnd
loop
scas
push
sub
pop
leave
push
adc
call
dec
lods
in
pop
mov
dec
xchg
rcrl
fisubrl
sahf
out
mov
icebp
mov
or
mov
cmc
adc
data16
cmp
into
roll
std
cmpb
dec
sub
mov
das
rolb
mov
mov
pusha
push
mov
sbb
adc
fstpl
lods
sub
pop
addr16
lods
fidivrs
push
imul
lret
jmp
sub
clc
pop
inc
int3
push
sub
jle
pop
dec
push
scas
push
aam
add
vandnps
push
ljmp
mov
outsl
int
push
mov
mov
jg
mov
mov
lret
fistpll
xor
loope
sub
mov
or
pop
pop
mov
rcll
sbb
inc
push
fnsave
icebp
dec
xchg
dec
sub
loop
cmp
shrl
cmp
push
or
mov
test
mov
sub
sub
cltd
sub
nop
gs
cld
xor
or
fbstp
add
idivl
mov
rcl
into
les
jmp
fisttpl
inc
xlat
cmp
dec
pop
push
cmp
lds
sub
cmpsb
cltd
out
loop
roll
inc
sti
add
int3
mov
xchg
iret
repz
movb
xchg
outsb
ljmp
movsl
insl
xlat
test
cmp
or
adc
jp
xchg
mov
xchg
rorl
mov
xor
lahf
leave
xchg
xor
fbstp
lea
mov
pop
aaa
xchg
sbb
aam
mov
movsl
adc
mov
aad
movsb
xor
adc
rorl
mov
dec
xchg
dec
mov
adc
mov
fsubl
loop
mov
stos
jle
mov
or
mov
push
out
stos
ret
and
jmp
mov
imul
xor
xor
shll
adc
loope
jne
scas
mov
push
inc
decb
jo
xor
mov
or
ret
std
in
cmp
movsl
enter
or
mov
outsl
mov
jmp
dec
stc
imul
insb
insb
shl
jo
out
push
movsl
sti
lret
pop
mov
and
push
inc
jg
sub
imul
ret
mov
jecxz
mov
sbb
pop
mov
mov
sub
inc
inc
mov
lock
inc
add
or
adc
addr16
jns
mov
xor
dec
es
push
xchg
sbb
add
std
sub
sahf
sbb
cmc
pop
or
daa
jne
mov
fidivrs
mov
loopne
jp
jl
adc
jmp
cmp
cmc
xchg
mov
outsl
cmp
sti
out
popa
adc
out
ficoml
cwtl
push
scas
cld
lcall
inc
xchg
hlt
add
test
push
mov
sbb
pop
and
psllw
mov
rorl
fisubrl
push
test
jg
xchg
mov
shlb
push
and
pop
sbb
add
ret
cmpsl
and
mov
stos
mov
pop
lret
out
jbe
add
aas
jge
sti
jmp
mov
hlt
repnz
mov
in
rcrl
fsubp
add
push
repnz
pop
ds
mov
in
fistpl
dec
cld
dec
sbb
scas
mov
mov
insl
nop
cwtl
cs
sub
jae
movsl
push
lods
adc
outsl
xor
lock
rorb
mov
mov
js
sub
pop
out
outsb
push
outsb
sahf
fs
aaa
sbb
or
sbb
scas
out
xor
movsb
push
frstor
mov
or
out
xchg
cltd
in
sub
ja
dec
hlt
in
mov
cmovb
sahf
inc
mov
jns
test
xor
add
adc
fsub
adc
repz
movsl
push
out
rcll
leave
pop
mov
sbb
pop
orb
clc
or
mov
testl
adc
lock
adc
aad
stc
add
xor
shlb
xchg
xchg
mov
pop
xor
int
mov
adc
jp
je
movsb
mov
sarl
in
xor
lods
dec
std
mov
cmp
nop
xor
fisttpll
cmp
lock
push
xchg
adc
xchg
push
pushf
in
rcr
dec
scas
scas
stc
daa
fldcw
rorb
hlt
adc
sub
pop
les
xor
mov
jecxz
push
mov
test
push
and
sbb
fisttpll
xchg
lods
xchg
mov
mov
pop
add
jb
notl
mov
xlat
sti
popf
stc
adc
inc
cltd
and
divb
int3
imul
pop
in
call
insb
jnp
or
pusha
mov
push
jns
inc
shrl
mov
gs
cld
push
add
push
orb
adc
fwait
jns
sarl
xlat
sub
pop
dec
in
sahf
jecxz
sbb
out
xor
arpl
fstps
cmpsb
pushf
das
xorl
mov
out
aam
rcrb
into
hlt
movsl
sqrtps
popl
inc
adc
cmp
ret
xchg
or
push
fwait
imul
push
lock
nop
jg
xchg
stc
add
fidivrl
xor
ret
lock
test
or
sbb
addr16
xchg
pop
dec
xchg
cs
cmpsl
mov
out
test
add
mov
pusha
mov
icebp
adc
jecxz
outsb
movsb
jns
repnz
push
mov
push
push
mov
push
xor
jg
sub
mov
push
test
sub
leave
aad
loop
jne
cwtl
mov
ljmp
sbb
test
push
pop
sbbb
inc
inc
lods
add
pop
imul
sti
mov
xor
pop
xor
nop
dec
xor
sub
aad
repz
xchg
mov
imul
ljmp
jns
rol
jne
add
lea
xor
incb
push
fidivl
push
outsb
mov
mov
in
push
cwtl
rcl
dec
sti
mov
jne
mov
mov
mulb
mov
and
mov
mov
fucomi
dec
js
dec
jmp
xor
int
repnz
ljmp
out
xchg
mov
add
cmp
cltd
pushf
cmp
push
mov
dec
data16
test
fdivrp
push
adc
mov
bound
sbb
pushf
xlat
aam
lahf
mov
and
cmp
aaa
and
sub
hlt
pop
sub
dec
dec
cmp
sbb
fwait
jb
lock
loope
and
jo
push
adc
push
or
mov
inc
out
or
inc
pop
rcrb
inc
addr16
inc
andb
push
insb
stos
mov
jle
cmp
pop
inc
scas
xchg
sbb
cmp
or
and
insl
xor
shl
sbb
xchg
xor
cs
ja
loopne
cmp
mov
fxtract
fcompl
iret
lds
insb
mov
leave
push
or
movsb
dec
xor
and
mov
jmp
xchg
inc
cmc
insb
mov
invd
fwait
or
call
repnz
push
stc
mov
cmp
leave
jmp
inc
adc
sbb
in
cmp
pushf
dec
clc
lret
cld
inc
mov
fidivrl
icebp
and
outsl
cld
adc
rdpmc
iret
xchg
popf
into
pop
add
mov
pop
sub
cwtl
sbb
das
fs
into
lds
pop
jg
outsl
xchg
adc
ss
stos
cmp
ds
clc
lds
dec
iret
xchg
jnp
cwtl
push
sub
fwait
scas
mov
add
ds
jge
je
enter
jle
mov
sti
dec
cmpsb
push
add
inc
test
fadd
cs
movsb
add
mov
cmp
xor
jecxz
xor
jne
pop
sti
and
xor
sbb
out
dec
mov
imul
shlb
xchg
addr16
nop
rcll
inc
push
sub
sbb
push
push
std
adc
and
mov
cmp
mov
rolb
nop
aas
fcoml
sbb
cltd
loope
cmp
xor
and
dec
mov
push
and
sub
dec
push
sbb
push
add
inc
lcall
pop
rorl
xor
pop
aaa
out
jl
or
push
mov
dec
lds
lret
cmp
imul
rcr
nop
lods
clc
dec
lret
pop
push
mov
push
scas
shll
sub
sbb
inc
mov
xchg
rcrl
divl
outsb
shll
shrb
add
mov
lock
subb
lcall
fistpll
into
or
or
push
sub
repz
mov
ja
cmp
test
leave
adc
loope
or
mov
jbe
cmpsb
pop
cmp
out
es
aad
or
mov
loopne
aam
vcvtsd2si
jb
inc
push
jmp
push
nop
xchg
mov
mov
dec
and
push
jg
divl
mov
call
nop
sti
test
jge
mov
outsl
lahf
xchg
cmp
mov
std
mov
fnsave
mov
dec
lods
bound
cmp
xchg
pop
pop
jae
scas
shrb
xchg
int3
sbb
push
shll
pop
ja
and
push
fstpt
mov
mov
jmp
or
push
mov
fcmovbe
cmp
mul
imull
sbb
test
pop
leave
shlb
pop
dec
js
mov
imul
ret
inc
das
xchg
jge
mov
cwtl
xor
push
mov
mov
aaa
icebp
enter
mov
dec
inc
popf
shrl
mov
sub
dec
pop
mov
or
les
cmp
scas
pop
bound
jae
fdivp
pop
fdivs
inc
pop
mov
and
and
insl
add
inc
mov
dec
sbb
add
and
in
push
mov
out
mov
mov
movsb
iret
sub
inc
mov
sbb
fisubl
orb
xchg
in
repnz
pop
bound
jne
je
js
in
push
popa
and
jle
out
add
and
repz
stos
rcrb
stos
scas
arpl
jecxz
addr16
ficoms
popa
movsb
shl
cmpb
sbb
fiaddl
sub
outsb
or
roll
movsl
and
iret
push
xorl
xor
push
sub
xchg
mov
pop
adc
clc
pushf
mov
mov
xchg
fcmovb
push
loopne
les
xor
xor
out
pop
testl
lret
mov
mov
sbb
dec
enter
mov
add
mov
fcomi
jne
lret
inc
movsb
dec
inc
out
cmp
and
jno
das
in
into
daa
aam
or
jae
ret
sub
xchg
jae
fcoms
ljmp
add
cmp
repz
lcall
outsl
mov
adc
xchg
push
cltd
stc
or
xor
cmpb
mov
pop
sub
mov
push
aaa
push
dec
sbb
xor
rcr
movsb
mov
mov
insl
sub
inc
adc
push
out
ja
fdivl
or
xchg
movsb
mov
aas
pop
pop
into
divb
mov
sub
or
xchg
inc
movsb
jmp
pop
cmp
inc
dec
fldt
dec
mov
pop
test
cs
add
sbb
jge
addb
cmp
adc
mov
push
ds
movsl
shr
ret
dec
mov
dec
pusha
mov
dec
cmp
loope
cmp
nop
and
in
jo
and
add
jle
sbb
dec
jle
nop
fcomps
das
or
adc
pop
test
ds
pop
or
sub
dec
cmc
rcrb
mov
aam
nop
xor
pop
and
pop
xchg
enter
push
aam
mov
andl
cs
aaa
sub
inc
sbb
mov
or
mov
aad
mov
aam
dec
sbb
or
pop
or
stos
adc
jae
xchg
add
rol
loope
dec
dec
xor
push
lds
fadds
je
and
cli
lcall
xor
inc
dec
cmp
push
loopne
sub
mov
mov
cwtl
stos
mov
insb
adc
sbb
cwtl
in
xor
fidivl
shl
mov
ja,pt
pusha
pop
xor
fs
out
roll
jne
sub
iret
ss
adc
and
outsb
pop
stos
adc
adc
leave
into
mov
nop
mov
xor
lcall
lahf
dec
scas
xchg
cltd
lret
push
and
rcl
adc
mov
rol
test
stos
mov
add
lods
adc
ds
mov
jle
dec
and
hlt
and
and
enter
cmpsl
xchg
inc
xchg
rcrl
shrl
subl
xchg
jae
mov
cmpb
mov
sbb
popf
jb
movsb
lret
mov
ljmp
jno
xchg
cmp
cwtl
out
jp
fistps
je
insl
add
lods
lock
mov
ljmp
lret
push
push
imul
mov
test
and
out
sti
mov
cmp
aaa
push
mov
leave
rorb
mov
loope
sub
adc
ret
mov
cmp
jb
or
jne
stos
icebp
adc
jmp
jmp
push
xchg
mov
jge
xchg
lcall
test
lcall
jnp
outsl
loope
rclb
and
dec
imul
push
fcomip
fadds
mov
push
pop
repnz
push
mov
push
ret
and
dec
movl
push
rcl
pop
mov
xchg
shrb
mov
icebp
sti
mov
test
mov
pop
sub
jge
and
jns
xchg
jae
xchg
cli
shrb
lret
in
movsb
js
mov
push
hlt
adc
push
out
add
sub
cmpsb
sub
push
adc
movsl
xchg
adc
out
lcall
mov
mov
adc
aad
add
pop
cmpl
pop
lods
test
daa
jne
xchg
xlat
addr16
ret
mov
jl
adc
dec
mov
or
mov
call
xor
pop
xchg
or
mov
xor
lock
xchg
push
test
mov
pop
mov
popf
int3
clc
jg
daa
xchg
mov
or
aas
cmpsb
sbbl
pop
movsl
inc
test
ja
jmp
dec
pop
mov
dec
testb
jno
fnstenv
mov
xor
and
dec
and
dec
out
push
push
jo
dec
sbbb
xchg
inc
dec
pop
dec
lods
imul
and
repz
clc
mov
mov
sbb
sub
and
std
ss
pop
repnz
mov
test
mov
call
jg
or
je
adc
and
push
sahf
imul
lret
xorl
dec
jbe
dec
in
imul
jmp
or
in
incl
mov
sub
loopne
std
push
nop
imul
out
orl
adc
or
imul
mov
in
nop
push
or
pop
and
and
mov
mov
loop
xor
xchg
adc
dec
mov
xchg
rol
jbe
cmp
sub
mov
in
mov
xor
or
mov
repz
in
sub
add
dec
mov
movsl
xchg
mov
dec
insl
push
aam
cmp
pushf
sbb
repnz
mov
xor
bound
ljmp
mov
daa
jp
scas
roll
mov
sahf
test
fcompl
xor
inc
cmp
sub
adc
or
loopne
dec
aad
sbb
dec
in
ret
sbb
jl
int
mov
out
out
sub
add
movsl
dec
mov
in
xor
cmp
jmp
mov
add
adc
popf
sbb
sbbl
test
sahf
jae
lret
jb
push
les
aaa
sub
js
mov
cmp
cs
xor
scas
cmp
lea
orb
popa
sub
imul
jp
pop
cmp
or
lods
imul
push
or
push
pop
xor
cmp
popa
test
mov
enter
dec
xor
movsb
push
inc
out
into
clc
push
pop
in
pop
testl
push
adc
jnp
insl
outsb
divb
nop
or
aad
pop
xchg
mov
pop
insb
jae
icebp
cmp
andl
adcb
mov
xor
mov
cmp
jb
divb
cmp
out
out
xchg
add
pop
movsb
bound
into
mov
xchg
mov
cmpsb
aas
jmp
imul
scas
pop
push
add
fidivrl
and
out
xchg
ljmp
in
stos
arpl
add
sub
mov
cmp
negl
sbb
xor
sahf
dec
pop
jo
jae
mov
mov
arpl
jbe
or
jl
sti
mov
mov
add
mov
pop
hlt
sahf
jge
mov
imul
test
xor
in
add
xor
or
add
sub
stos
cltd
rcll
pop
scas
decl
adc
out
imul
push
add
push
testl
dec
adc
adc
mov
push
adc
xlat
iret
push
mov
loope
ret
add
sti
outsl
cmp
hlt
mov
pop
and
jb
and
xbegin
out
je
fwait
mov
pop
mov
push
mov
xchg
inc
add
fcmovne
pop
push
repnz
pushf
inc
or
inc
push
aam
pop
jp
xor
test
push
cltd
cwtl
insb
movb
jae
jo
fld
imul
imul
jge
dec
xor
xchg
out
scas
mov
loop
xor
aaa
lret
movsl
call
dec
flds
inc
inc
add
sahf
lcall
and
mov
sbb
stc
sbb
lahf
and
int
imul
mov
mov
adc
lret
in
cwtl
imul
add
loop
cmp
clc
inc
jp
xchg
lcall
push
jno
cmp
push
mov
mov
xchg
ds
test
jbe
pusha
jbe
mov
dec
in
out
loopne
mov
and
push
adc
mov
fucomip
popa
shr
and
ljmp
xchg
add
cli
jno
jp
mov
jnp
push
leave
jmp
fistpl
movsb
fdivrs
xchg
stc
or
or
daa
pusha
mov
push
sub
add
push
add
adc
xchg
cs
xchg
pop
add
jecxz
push
movsb
inc
cmp
pop
sub
int3
lock
sbb
cs
mov
mov
mov
mov
inc
inc
push
cltd
in
popf
rcr
mov
cmpb
xchg
mov
mov
subb
cwtl
adc
leave
imul
xchg
iret
mov
or
jno
cltd
testl
test
jae
pop
loopne
pop
in
xchg
and
or
pop
inc
xchg
popa
push
jge
mov
add
lcall
mov
aas
mov
fisubrl
bound
or
and
stos
scas
icebp
dec
mov
push
jb
aas
mov
test
xchg
ret
aad
sbbl
outsb
pop
cmpsb
adc
stc
jnp
inc
xchg
dec
dec
ret
inc
or
pop
push
int3
adc
ljmp
jge
adc
jbe
sbbb
or
sti
pop
sbb
lods
xchg
clc
inc
mov
leave
jae
movsb
add
push
es
xchg
iret
mov
push
data16
inc
pop
je
mov
pop
mov
mov
dec
inc
fisttpll
movsl
out
mov
inc
or
mov
out
mov
pop
mov
lea
jns
rolb
or
fdivrl
test
add
sar
gs
aaa
fcomps
dec
lea
xor
inc
negl
neg
mov
imul
aad
xchg
je
outsb
dec
cmp
xlat
ljmp
xorb
inc
cmp
outsb
sub
lret
xchg
in
aas
jno
xor
dec
test
fistps
mov
push
push
add
imul
lock
push
mov
add
repz
jne
pop
sbb
jns
lret
mov
xor
nop
and
fstpl
and
in
aam
rcrl
push
popf
in
push
jp
data16
pusha
fisttpl
in
jnp
js
outsb
hlt
add
loope
jle
lret
call
enter
xchg
fldl
sbb
mov
cmp
lock
push
popf
cmpsl
mov
pop
test
iret
ficoms
mov
lods
mov
insl
inc
hlt
sbb
push
clc
xor
in
mov
cmp
inc
lret
push
adc
cs
adc
mov
fnsave
mov
ret
stos
cltd
fidivs
pop
pop
inc
jge
jp
mov
add
dec
popf
jnp
sub
xor
rorl
push
pop
out
dec
daa
stc
dec
mov
inc
add
xchg
scas
lock
jns
pusha
and
dec
mov
das
in
lea
test
das
ror
and
icebp
jbe
cmpsl
xchg
add
push
cld
daa
mov
push
pop
push
cmp
into
push
fs
or
daa
add
sti
xor
repz
addr16
push
pusha
mov
jecxz
xor
mov
das
sahf
call
push
out
adc
and
sub
iret
andb
arpl
xchg
or
push
xchg
and
scas
icebp
fs
add
mov
fstpl
add
pushf
aam
xchg
pop
xchg
rcll
aad
pop
pop
dec
out
inc
leave
lods
mov
pop
mov
xchg
shrb
cmp
push
push
out
cli
mov
xchg
fiaddl
pop
and
xchg
add
push
xchg
add
rorl
adc
faddp
sub
push
je
clc
popf
faddl
daa
or
sub
inc
fidivrl
ret
movsl
fiadds
cmp
aaa
cmp
test
add
add
cmp
aaa
mov
mov
out
ja
test
in
ss
mov
enter
xor
push
push
insl
and
ficomps
mov
inc
lods
iret
imul
lds
jmp
xor
divb
push
aas
or
cmp
pop
push
xchg
ja
stc
lds
lahf
shll
adc
mov
mov
je
data16
adc
std
dec
lret
sbb
pop
nop
fldt
pop
mov
out
add
or
xchg
xchg
xchg
pusha
inc
aam
or
or
bound
jno
scas
mov
and
repnz
outsl
adc
inc
sahf
mov
xchg
jo
lods
jnp
aam
fimuls
sbb
pop
add
mov
lds
std
push
jl
mov
jmp
pop
dec
mull
adc
out
movsl
add
movntps
and
aam
adc
int
pop
jp
jno
or
cmp
cmc
push
mov
mov
dec
xchg
movsl
out
popa
popf
mov
or
sbb
test
sbb
mov
jge
jnp
mov
push
add
cmp
scas
cmp
sub
jns
test
jmp
sub
sub
pop
xor
fwait
jno
cmpsb
outsl
shlb
mov
lds
adc
add
loopne
cmp
adc
pop
in
sbb
pop
ficompl
arpl
cmpsb
mov
out
sarl
dec
mov
imul
in
cltd
fs
shlb
pop
das
test
push
hlt
stos
xchg
int3
call
or
sub
mov
pop
lea
jl
test
push
mov
xchg
pop
pop
cli
int3
xor
xor
sub
pop
and
js
out
out
rorl
add
pop
je
sbb
test
mov
das
mov
dec
int3
xor
ret
lret
popf
and
sbb
cmpsb
add
outsb
xchg
push
std
adc
add
push
sbb
fistpl
cltd
mov
mov
popa
sub
lods
and
pusha
mov
inc
mov
sbb
insl
inc
lcall
js
push
jno
push
adc
cmpsl
out
stc
xor
xorb
mov
in
test
scas
dec
imul
ljmp
inc
lods
add
cmpsb
xor
addr16
and
js
cmp
cmp
imul
inc
mov
in
sahf
or
sub
mov
call
repz
xchg
jmp
sbb
mov
cmp
xchg
imul
inc
mov
xchg
insb
rsm
fisttpl
std
lahf
data16
int
out
dec
xor
mov
daa
fsubl
sub
jns
insl
lahf
mov
movb
repz
pop
cmp
ds
adc
push
xor
adc
pop
stos
jo
je
cmc
pop
in
xor
xor
or
push
fldcw
jo
push
out
pop
int
xchg
sahf
jae
pop
jge
popf
je
in
jge
seto
mov
mov
cmp
in
fcoms
push
in
lcall
call
push
jge
pop
lock
mov
ret
jp
das
add
adc
orl
mov
cli
outsl
xor
ficoml
mov
orl
movsb
or
test
imul
xchg
xor
mov
pop
cmp
adc
fildl
aam
pop
and
stos
fbld
sub
dec
inc
adc
mov
into
add
lds
cld
scas
pushf
je
inc
cmove
and
pop
call
pop
pop
scas
mov
fildll
adc
rcll
cmpsb
stos
xor
push
es
push
int
adc
mov
sbb
and
in
mov
stos
xchg
jg
push
aam
call
idivb
ffreep
sbb
repz
and
test
insl
movsl
add
lcall
sbb
sub
rcll
lret
and
or
pop
shll
out
popa
mov
jge
in
pop
mov
xor
fildll
mov
mov
lock
pop
mov
lods
inc
cmp
test
loop
mov
orb
inc
pop
xor
or
jno
lret
sbb
gs
and
xor
jge
into
cs
adc
aas
mov
sbb
fdivrs
jge
xor
popa
jmp
jecxz
xchg
xor
imul
fiaddl
inc
pop
pop
mov
ljmp
push
jne
addr16
cmc
pop
aaa
sti
aaa
add
xchg
inc
in
inc
jns
in
mov
dec
adc
cld
or
or
sub
mov
bound
fsubs
xchg
lock
dec
in
add
xchg
xor
dec
sub
pushf
aaa
fdiv
imul
push
rep
add
add
into
mov
test
mov
shl
or
fnstsw
xchg
mov
cs
shlb
dec
fld
adc
lcall
or
mov
adc
ja
jo
mov
lds
cmpsb
aaa
lea
sarl
mov
data16
jnp
xor
pop
cmp
xchg
adc
mov
out
repnz
pop
pop
mov
mov
stos
mov
xchg
ret
jg
incl
xchg
addr16
cli
int
mov
loope
imul
sahf
cmp
adc
stos
xchg
mov
cwtl
mov
je
ja
mov
imulb
jmp
je
adc
pop
cld
cmp
mov
pop
mov
push
mov
cltd
jne
jge
ror
das
inc
out
js
cmp
dec
in
push
pop
fdivrl
js
mov
mov
and
leave
shlb
cmp
push
repz
flds
mov
jo
xchg
je
dec
inc
mov
xchg
push
aaa
rcrl
sbb
lods
loop
movsl
and
stc
dec
stos
adc
mov
imull
cmp
push
mov
ljmp
cwtl
std
jb
mov
adc
jbe
or
pop
hlt
cltd
in
mov
sbb
and
inc
mov
jbe
sub
divb
xchg
add
jmp
je
fistps
adc
cmpsl
mov
into
inc
lcall
and
and
cmpsb
pop
loop
hlt
push
dec
data16
loopne
lods
pop
xchg
xchg
jp
jns
sub
ret
inc
fmul
jecxz
data16
insb
enter
mov
or
aaa
push
addl
adc
jecxz
mov
out
inc
iret
sbbb
gs
gs
mov
shll
sbb
mov
gs
into
jl
xorb
mov
dec
fwait
cmp
pop
insb
push
ss
dec
xchg
pop
test
cli
mov
and
adc
adc
or
incl
dec
mov
inc
sbb
incl
cmp
das
mov
nop
in
pop
in
inc
adc
js
ret
adc
aad
xor
call
pop
rolb
stos
nop
cmc
jb
enter
add
fmuls
mov
lcall
fcmovnb
push
pop
movsb
xor
fbld
sbb
mov
mov
hlt
scas
mov
jae
sahf
les
cltd
inc
aam
dec
sub
mov
hlt
xchg
push
popa
ljmp
sbb
or
loopne
sbb
cmp
xchg
and
xchg
pop
hlt
lods
mov
dec
adc
and
dec
sarl
mov
jns
rcll
push
xorb
inc
push
push
sti
movsl
sar
in
sarl
test
icebp
shll
shlb
roll
mov
cwtl
fdiv
dec
ret
lock
jns
test
cmpl
jecxz
sub
xorb
dec
or
cmp
xchg
and
mov
sbb
push
mov
mov
push
dec
into
into
test
cmpsl
fwait
repz
xchg
repz
or
adc
pushf
inc
mov
sub
sbb
xor
lods
dec
mov
adc
adc
andb
or
sbb
push
or
sti
icebp
sahf
enter
push
inc
sub
mov
xchg
push
jbe
fiadds
loope
mov
bnd
into
lret
mov
popa
mov
inc
imul
xchg
xor
addr16
pushf
dec
test
testb
mov
xor
and
lods
dec
pslld
xor
push
push
pushf
sub
push
dec
pop
mov
and
jbe
xor
jbe
cmp
jb
ds
clc
mov
aam
or
sti
and
arpl
cltd
sbb
outsl
je
push
mov
movsb
jnp
aad
ror
out
repnz
pushf
add
adc
ret
mov
mov
out
mov
mov
adc
fcomi
js
idivl
push
inc
mov
lcall
mov
or
ds
mov
push
adc
int
out
mov
in
movsl
inc
xchg
in
mov
lods
das
imul
lods
rolb
gs
lcall
stc
mov
fldl
fcmovnu
xchg
or
inc
cmp
pop
pop
in
sahf
in
loope
mov
setbe
nop
sbb
in
or
sete
lahf
add
mov
adc
inc
add
mov
mov
push
mov
pop
insl
mov
push
mov
push
pop
push
outsb
mov
lret
push
sub
test
lods
and
add
xor
cmpsb
popa
int
jmp
int
out
call
iret
push
mov
jno
test
aas
jne
adc
jge
stc
hlt
xor
daa
js
pop
push
sahf
int
movsl
pop
add
cmp
out
pushf
push
xchg
cltd
mov
pop
xlat
dec
mov
neg
pop
mov
repnz
shlb
jmp
aad
loope
inc
mov
adc
push
stos
ss
cmp
divb
out
mov
jo
int
cmpsl
in
mov
or
arpl
mov
rclb
scas
test
dec
mov
push
mov
rcrb
dec
js
inc
call
fwait
outsl
mov
fiadds
rclb
es
push
add
mov
mov
xor
cwtl
fdiv
sbb
imul
das
gs
sahf
fcmovnb
cli
ficoml
mov
mov
jnp
dec
jp
dec
js
dec
scas
xor
dec
roll
adc
sbb
scas
loope
push
inc
icebp
pop
outsl
std
jbe
sub
je
pop
rorl
daa
sbb
and
sti
rolb
adc
cli
inc
out
repz
jnp
or
push
xor
and
iret
add
add
pushf
xor
adc
push
dec
out
out
push
xor
ret
xchg
push
clc
jne
loope
andb
js
fnstsw
sahf
movb
add
movsl
aaa
xor
test
jb
mov
push
cmp
mov
out
adc
enter
push
test
rorb
and
leave
int3
mov
insl
xchg
jl
xlat
jle
aad
jmp
out
adc
aaa
std
mov
pop
jo,pn
aam
dec
fldcw
out
daa
js
dec
repnz
pop
jecxz
and
xchg
scas
inc
scas
mov
cmc
sub
imul
in
add
sub
insb
adc
push
adc
adc
mov
and
sahf
mov
repz
sbb
out
push
fcmovne
jl
cwtl
aad
inc
push
push
test
pop
dec
and
in
sbb
les
lods
out
jno
std
ljmp
jne
xor
mov
add
leave
lret
sbb
mov
cmpsb
or
mov
dec
sbb
imul
cli
pop
adc
fsubrs
jb
sahf
xor
adc
push
iret
jnp
outsl
popl
int3
pop
fsub
xchg
cwtl
sub
lret
dec
idivb
lahf
sbb
loope
rorl
xor
mov
pop
sub
pop
pop
mov
xchg
aas
stos
outsl
pop
inc
lcall
and
and
pusha
xor
push
sbb
push
xchg
add
arpl
orl
mov
test
into
cmp
enter
xor
das
loopne
pop
gs
out
pop
bound
pop
dec
adc
jle
outsb
add
cmp
mov
inc
lock
xchg
cltd
cltd
cmpsl
jae
inc
mov
test
mov
mov
mov
cli
sbb
in
jnp
pusha
sbb
scas
es
cmpsb
push
jle
jo
mov
cmp
mov
imul
xor
cs
xor
jbe
outsl
xor
int
jp
mov
imul
jno
fnstsw
lcall
push
outsb
cmpsb
jb
push
xor
pop
lods
mov
or
call
test
push
mov
dec
fistl
lahf
sbb
ret
mov
push
inc
rclb
cmp
lcall
jecxz
adc
lods
dec
movsbl
inc
jo
shl
mov
push
mov
movsb
repnz
lds
testb
add
xchg
jecxz
cmp
das
mulb
or
sbb
cmp
mov
push
cmp
fmul
js
lahf
inc
push
mov
nop
outsb
out
in
pop
stos
in
lcall
mov
inc
jg
lret
mov
lea
pop
mov
xchg
int3
sub
xor
dec
cmpsb
mov
out
je
mov
aam
push
or
imul
gs
js
sbb
sbb
out
sbb
js
in
push
scas
sbb
mov
xor
out
mov
aas
in
div
pop
out
cmp
imul
int
jbe
xchg
imul
and
fstpt
insl
fcompp
out
mov
xchg
divl
xchg
jge
xor
jle
push
nop
stos
lret
out
outsl
cli
push
add
adc
mov
fldlg2
jb
ja
inc
shll
or
xchg
inc
mov
int
cmove
xorl
push
xor
mov
addl
xchg
cmc
je
mov
std
bound
pop
arpl
cld
sar
xchg
rorl
push
push
inc
das
les
adc
aaa
or
push
icebp
subb
lret
mov
push
pop
mov
add
cmp
insb
xchg
out
mov
out
cmp
pop
xchg
jno
sub
rclb
and
mov
fdivrl
mov
lock
imul
incl
sub
fcmovb
push
ret
and
sahf
popa
ficoml
stos
sub
mov
enter
roll
arpl
lods
push
adc
das
xor
repnz
int
lds
popf
nop
inc
mov
and
cmp
mov
sbb
sbb
insl
mov
ret
adc
jne,pt
push
mov
pop
dec
lods
sbb
jae
pop
sahf
or
push
push
jae
gs
jnp
lea
iret
inc
xchg
jmp
sbb
push
sub
sbb
add
and
mov
cmp
cmc
and
push
or
xchg
jns
xchg
enter
je
pop
xchg
je
cmp
adc
loopne
mov
xor
fdivrs
push
xchg
test
pop
xchg
out
mov
stc
inc
bound
cwtl
adc
or
inc
es
call
icebp
cmpsb
clc
pop
fwait
pop
push
pusha
xchg
fadds
push
push
push
fimull
mov
jp
pop
and
repz
push
fbstp
lret
fs
jge
repz
mov
in
mov
decb
jnp
dec
orb
jno
xchg
dec
push
jne
lock
inc
dec
fwait
xor
cli
lea
push
enter
jnp
pop
inc
mov
add
jb
mov
loope
aam
es
push
xor
mov
scas
xor
int
mov
mov
cs
mov
cmp
ret
mov
loop
test
add
cmp
in
push
and
xchg
rorl
sub
pop
sbb
call
cmpsl
jecxz
mov
loope
pushf
movsl
and
mov
pop
fmul
jne
nop
mov
mov
lret
pop
imul
in
push
jo
pushf
add
rorb
add
mov
sub
out
jae
test
leave
hlt
cltd
xor
cmp
scas
fucomp
xchg
outsb
xchg
call
pop
cld
ss
repz
pop
and
xor
leave
stos
aad
in
or
jb
push
xchg
pop
cmc
sti
add
jmp
sti
xor
inc
dec
adc
repz
ret
addb
mov
mov
mov
lds
add
es
fisttps
mov
das
xor
icebp
mov
das
iret
inc
in
popa
mov
adc
and
sbb
jge
aam
push
outsb
lock
fwait
arpl
push
xchg
lods
xchg
pop
dec
imulb
or
mov
das
clc
or
push
cld
cli
jno
and
ret
ja
std
stos
lret
test
xor
cs
aas
push
push
and
inc
arpl
xor
cmp
out
or
dec
push
add
or
imul
loop
xchg
sahf
lret
fnsave
pop
jmp
lea
dec
pop
nop
mov
mov
ja
sbb
adc
xor
mov
push
enter
or
mov
rcr
jbe
in
test
pop
ficompl
repz
fwait
dec
push
xchg
mov
leave
sbb
test
ljmp
adc
cmp
pusha
and
mov
mov
outsl
stc
xchg
outsb
inc
test
mov
sub
or
enter
sti
sbb
sti
cmpsb
push
inc
imul
movsb
push
out
or
lds
dec
iret
scas
jp
cld
sbb
in
push
cmp
xor
push
dec
inc
cld
pop
xor
jno
push
fadds
rclb
ja
push
sub
cmp
fnsave
push
icebp
sbb
sub
xor
inc
fs
loopne
cmc
not
or
fimull
pushf
lcall
mov
sub
aad
jns
xchg
jbe
arpl
mov
cmp
jno
push
xlat
mov
leave
xorl
cltd
lahf
pop
addr16
jno
stc
in
int3
pop
dec
popf
xchg
lea
popa
mov
ja
mov
rcrl
cmp
scas
mov
sbb
and
lea
mov
ds
dec
or
rclb
adc
popf
jle
cmpl
add
jnp
push
and
jns
inc
lea
movb
outsb
cmpsb
ss
push
pusha
inc
sbb
mov
sub
and
loope
and
loopne
push
xor
inc
xor
clc
lret
aad
mov
adc
jp
xchg
jb
jns
lods
mov
call
in
push
insl
stos
nop
push
adc
ret
inc
and
push
xchg
mull
leave
cs
push
loope
shl
adc
icebp
sbb
imul
mov
push
lds
push
fldenv
in
shll
pushf
out
lods
pop
mov
stos
or
sbb
pop
adc
out
sub
or
insb
ret
fs
imul
or
insb
inc
sbb
push
mov
loop
mov
cmp
std
mov
adc
test
mov
mov
cmpsb
cmc
mov
inc
fs
sahf
jne
add
out
cmp
scas
and
cltd
jns
test
dec
mov
repnz
xchg
xor
fs
into
xchg
aam
out
fildl
pop
mov
ret
pop
sub
pop
xchg
jle
xchg
popf
sub
lods
lahf
jns
or
mov
mov
rolb
lea
mov
in
jecxz
mov
inc
hlt
mov
gs
jno,pn
cmp
fwait
inc
daa
xchg
add
mov
push
mov
inc
jb
fidivs
andl
in
out
aad
and
fiaddl
hlt
jns
cmpsl
or
inc
movsl
outsb
jecxz
sbb
scas
cmpl
mov
push
push
or
out
mov
stos
sbb
xor
mov
xchg
fisttpl
xchg
shl
cmpsb
daa
jns,pn
cmc
pop
ja
ss
cmp
test
push
popf
mov
or
xor
addr16
enter
xor
mov
fst
xchg
add
cld
mov
sub
lods
lds
inc
sub
lret
sub
subl
in
fs
nop
jo
ljmp
ljmp
pop
sti
inc
test
imul
inc
pop
push
sub
pushf
inc
mov
jge
filds
movsl
addr16
jecxz
inc
pop
loop
jbe
ret
push
xlat
inc
xchg
cmpsl
jno
je
push
cmc
or
ret
xor
or
mov
push
mov
dec
or
push
in
addr16
and
ret
adc
scas
jp
mov
cltd
mov
sub
sbb
lahf
jbe
movsb
pop
inc
pop
dec
or
pop
add
pop
jno
fisubrs
mov
jae
xlat
cmp
es
push
gs
cmpsl
inc
cwtl
push
out
sbb
fwait
jae
scas
add
sbb
ds
insl
insl
and
mov
pop
cmc
das
add
xor
add
ret
pop
jno
dec
stc
rolb
es
add
in
in
sbb
inc
jge
sti
clc
pop
test
push
sub
bound
scas
mov
mov
orb
mov
xor
adc
pop
sub
je
jnp
push
cwtl
push
mov
add
and
pusha
cmp
xor
sub
pop
out
mov
mov
call
or
mov
test
call
mov
clc
popa
inc
movsl
pop
jb
test
es
push
jp
addb
inc
ret
jle
and
shl
iret
and
xchg
cmp
aas
or
sub
sbbb
cmpsl
rclb
int
mov
iret
inc
imull
mov
xchg
inc
push
fs
iret
jl
sbb
lahf
lcall
sub
xor
mov
loope
shll
cmp
pop
xchg
aad
stos
dec
mov
jl
xorl
fwait
rcl
inc
imul
js
mov
adc
xor
enter
or
sbb
add
in
iret
hlt
out
imul
loop
int
mov
fld
inc
or
sbb
insb
test
mov
push
dec
pushf
inc
add
lahf
int
fwait
sub
mov
nop
test
pop
out
insl
xchg
test
iret
dec
cmpsb
pop
cmp
or
movsb
sbb
xlat
mov
lret
push
sarl
sbb
lret
loope
aaa
mov
addl
lret
sub
sbb
jb
lahf
and
shrb
out
push
andb
ret
sbb
or
xor
outsl
lea
and
sbb
fwait
icebp
jge
loope
stos
xor
cmp
mov
or
mov
mov
add
and
jb
lret
mov
dec
lock
dec
mov
cmc
pusha
inc
popf
int3
xorl
and
jle
outsl
pop
mov
ds
in
or
outsl
dec
je
in
dec
xchg
lds
push
ljmp
push
in
or
out
sbb
jne
cwtl
xor
loopne
loop
dec
or
imul
jle
dec
jmp
sar
jbe
cwtl
xchg
lahf
mov
lods
adc
xchg
push
sahf
addr16
dec
mov
and
pop
jmp
lock
sbb
shll
sbb
and
mov
or
push
lea
fidivrl
movsl
or
fldpi
add
daa
icebp
cmpsb
insl
insb
mov
imul
mov
cltd
dec
dec
mov
lock
das
mov
mov
pushf
out
dec
mov
xchg
fisttps
mov
out
mov
xchg
pusha
xchg
pop
sahf
inc
ljmp
push
jnp
je
inc
sub
dec
addl
xchg
mov
mov
cmp
nop
mov
shlb
adc
sbb
fidivl
call
aam
or
adc
repnz
xchg
in
lret
test
test
incb
pop
cvttps2pi
je
sti
movl
adc
lods
popa
hlt
pop
push
mov
popa
cmp
or
push
pop
jno
pop
mov
fwait
or
scas
daa
imul
xchg
loopne
rcrb
push
sbb
adc
das
mov
jg
xor
ss
movsl
fcmovu
pop
dec
jl
lock
adc
test
lods
inc
jg
data16
ret
ss
jg
and
and
icebp
jnp
aad
xchg
push
fs
enter
in
xchg
sarb
jle
jmp
and
jp
dec
pop
cmp
and
sub
mov
popf
pop
aas
inc
mov
xchg
lret
inc
mov
repnz
iret
mov
cmp
xchg
pop
lock
shl
mov
mov
loop
cmp
xchg
add
cmp
iret
pop
mov
xor
fldenv
mov
jns
push
dec
int3
inc
cli
movsl
std
andb
sahf
lea
cwtl
es
sti
mov
pop
sbb
xchg
pushf
cmp
mov
push
scas
sti
leave
sar
jno
loope
jno
adc
add
call
imul
loop
stc
jecxz
mov
pusha
sahf
stos
fwait
jnp
arpl
xor
push
in
sbb
push
push
cwtl
insb
or
les
push
and
inc
fmull
pop
mov
push
xorl
arpl
mov
test
sbb
adc
les
and
repnz
fisubrl
jl
into
sti
mov
cmpsb
mov
xor
pop
xchg
lret
inc
pop
dec
mov
adc
xchg
out
dec
cmc
out
fwait
cmp
das
xchg
push
daa
add
loop
movb
mov
sbb
jne
in
sbb
cmc
cli
pop
pop
lods
cmc
shrb
dec
dec
pop
sbb
cltd
ficomps
inc
xor
idiv
std
adc
push
cmp
sub
fsub
stos
dec
sbb
mov
jmp
mov
addl
clc
test
scas
aas
mov
inc
sub
adc
jnp
stc
shrb
das
inc
mov
lahf
in
sbb
adc
dec
cmpl
dec
vmovdqa
xor
test
xchg
xchg
xchg
fwait
add
sub
jne
loop
xchg
push
icebp
adc
fscale
cmp
jp
cmp
cmc
push
mov
xor
call
hlt
pop
orb
cli
lock
pop
stc
sub
into
inc
xor
insl
mov
sti
push
test
add
xchg
dec
mov
test
pop
imul
xor
nop
mov
fs
jbe
dec
repnz
or
movsl
pop
pop
lods
cmc
lods
fists
in
int
push
mov
aaa
mov
iret
in
lock
int3
insb
add
dec
outsl
xchg
les
add
fldcw
cli
push
idivl
sbb
stos
dec
mov
sbb
popl
and
cmp
pop
popf
dec
push
mov
push
cmc
fisttpl
insl
xchg
adc
sahf
xchg
repz
pusha
idivl
mov
push
es
xor
sti
jo
jns
sahf
lcallw
adc
in
push
call
lods
push
sbb
shrl
mov
cmc
sub
les
loopne
inc
jge
xchg
sbb
xor
test
mov
ja,pn
insl
in
in
xchg
imul
das
pop
lds
add
je
xchg
mull
int
pop
lret
imul
call
adc
sbb
shll
xlat
lea
or
sub
stc
shlb
jns
and
cmp
xchg
cmpsl
mov
adc
in
cmp
je
push
lock
arpl
icebp
loope
mov
sub
mov
scas
add
mov
push
int
int3
testl
mov
call
js
lods
push
and
daa
adc
jo
addb
jo
pushf
pushf
movl
stos
outsb
jl
lea
adc
lea
cmp
cltd
and
fdivrs
pop
jns
dec
addr16
push
pop
aas
repz
daa
push
sub
pushf
faddp
xchg
adc
ret
adc
or
xchg
dec
orl
loope
icebp
add
sub
minps
inc
scas
and
jae
push
push
sbb
popa
xor
gs
add
lahf
adc
lock
mov
mov
inc
inc
jb
fwait
ret
jns
imul
mov
mov
fisubs
push
rolb
push
movsb
hlt
je
das
and
lds
sbb
dec
lods
ja
fwait
in
outsl
inc
xlat
into
sahf
adc
hlt
js
fiaddl
jbe
fbld
cld
sti
adc
inc
pushf
clc
popa
push
or
pop
sbb
je
loop
adc
pop
imul
ret
xchg
dec
jl
mov
lods
repnz
pop
in
loopne
mov
jb
adc
sub
cld
jge
jecxz
jnp
push
mov
cmc
adc
mov
add
sbb
mov
insl
orl
dec
dec
loopne
adc
out
icebp
mov
cmp
movsl
scas
xor
xor
mov
jge
adcl
int
enter
push
stos
xchg
push
or
pusha
pop
sbb
jle
scas
ss
das
test
ss
lods
fucomip
add
adc
xor
lods
sub
mov
scas
adc
int
out
jnp
push
inc
ja
in
ret
add
cmp
adc
jnp
dec
cmp
ret
xchg
push
jle
jb
jle
adc
scas
ds
jnp
outsl
inc
cmp
das
pop
xor
mov
jno
xor
mov
dec
cwtl
leave
mov
filds
lock
sbb
lea
push
inc
xchg
adc
dec
shll
dec
push
add
inc
mov
daa
repnz
mov
jae
jnp
adcb
dec
mov
dec
mov
test
xchg
mov
dec
scas
incl
inc
sbb
xchg
push
sbb
in
cmp
sbb
not
mov
adc
dec
cmpb
mov
inc
mov
and
xchg
push
pop
cwtl
push
jnp
xchg
lret
div
fildll
test
inc
mov
xchg
sahf
jb
mov
dec
loop
inc
push
xor
test
hlt
push
je
adc
mov
push
jno
mov
aad
les
push
pop
dec
jne
out
sbb
rolb
pop
popa
add
loope
jl
adc
inc
adc
int
push
push
out
mov
push
add
ss
loope
addr16
cmpsb
inc
add
sub
adc
xchg
jge
daa
hlt
cld
and
mov
call
nop
cmc
ljmp
or
stc
mov
inc
movsb
push
ror
sub
adc
arpl
pop
jns
mov
stc
or
pop
fsubr
pop
pop
jne
pop
cmp
xlat
sub
scas
add
adc
sub
fcompl
cwtl
sti
int
popa
pop
jns
xchg
out
xchg
addr16
mov
adc
cmp
xor
shll
in
xor
sub
push
jne
adc
xor
pushf
test
movsl
js
scas
int
mov
fimuls
and
rcrb
dec
push
dec
sti
sub
aas
and
pop
cmp
addr16
leave
jo
jns
mov
jo
mov
test
ret
lds
or
add
inc
and
mov
stos
or
cmp
ret
adc
mov
adc
icebp
imul
cmp
sub
mov
cmp
imul
inc
int3
pop
inc
shlb
cmpsl
subl
mov
adc
lcall
mulb
lds
int
shll
jmp
jo
test
xchg
cmpsb
mov
inc
bound
cs
dec
pop
shlb
out
mov
inc
and
xchg
in
int
leave
mov
mov
loope
stos
dec
test
mov
pop
add
inc
adc
lock
popf
in
fwait
jp
mov
jno
cmpsl
das
xchg
mov
iret
ljmp
popa
adc
jmp
jb
mov
sarb
or
pushf
rcrb
sub
insl
into
pop
imul
loopne
mov
push
sbb
sbb
int3
add
out
sub
push
dec
sahf
fldcw
mov
sbb
addr16
rorb
xchg
cmpsb
lret
daa
std
mov
scas
daa
inc
fcmovnu
adc
shlb
push
aam
fstpt
stos
popf
daa
jecxz
loope
adc
pop
cmpl
movntps
dec
mov
jbe
data16
hlt
jmp
cmp
and
xchg
dec
mov
cmp
in
jo
mov
add
xor
pusha
mov
fwait
mov
out
inc
std
push
add
dec
movsl
daa
insb
fiadds
lret
sub
test
pop
jle
sub
icebp
jns
inc
inc
or
jg
outsl
cwtl
xlat
aaa
stos
lea
dec
mov
aad
xchg
push
stos
movsl
loope
jg
add
and
cmpl
add
sbb
xor
cltd
out
add
mov
iret
pop
sbb
leave
clc
cmp
adc
jae
jnp
les
shll
sbb
mov
imul
jmp
push
popa
xlat
jb
mov
sbb
mov
loop
add
dec
mov
std
add
lock
push
sub
or
mov
mov
lods
ret
sbb
data16
lock
jp
adc
fcompl
lock
push
sbb
insb
in
lods
bound
or
push
js
lcall
jnp
xor
ja
fidivrl
in
inc
sub
scas
iret
fs
cs
cmp
pop
mov
jle
sti
add
test
cmp
xor
push
add
fbld
int
fs
arpl
sub
jbe
push
mov
shl
dec
aad
mov
aam
push
lods
icebp
mov
fildll
cs
push
xor
sarw
sbb
mov
adc
lcall
in
dec
and
mov
mov
ret
cmp
sub
pop
aad
pop
shlb
mov
dec
xor
mov
push
xchg
dec
mov
iret
sub
adcb
into
es
pop
cmp
sarl
dec
cmp
cmc
pop
cmp
push
loope
js
sub
test
pop
int
adc
movsl
jae
xchg
sbb
ljmp
sbbl
lock
xor
jecxz
stc
and
jb
cld
clc
sarb
rorb
pushf
data16
in
pop
hlt
movsb
xchg
adc
xchg
push
push
loope
or
je
push
cmp
data16
and
mov
push
fisubrl
cli
push
mov
fsubrs
mov
sar
repz
sub
mov
jge
jg
adc
add
out
push
xor
add
daa
fstp
inc
pusha
filds
aaa
pop
jnp
adc
ret
jno
jne
cmp
es
add
popa
jp
xchg
cmpsl
pop
nop
hlt
adc
xchg
iret
cmp
mov
jge
subb
add
xorb
test
adc
push
das
std
loope
xor
add
loop
inc
sbb
sbb
inc
dec
je
lds
out
jecxz
hlt
xor
in
test
rcr
mov
mov
ja
arpl
pop
fcmove
mov
lahf
push
not
mov
in
repnz
test
or
mov
repnz
adc
std
arpl
mov
mov
push
mov
pop
add
and
leave
out
dec
push
pusha
push
and
addl
fisttpll
aas
push
dec
movsl
mov
out
xor
mov
in
sub
sbb
mov
or
fsubrs
test
pop
and
push
jg
or
addr16
sub
xchg
loopne
scas
popa
int
and
rcrb
aad
adc
mov
lret
shrl
or
pushf
xchg
inc
push
xchg
lcall
sub
int
sub
pop
cwtl
xlat
inc
cmp
cmpl
lock
sbb
out
mov
iret
hlt
daa
mov
and
fwait
je
nop
outsb
imul
inc
loope
insb
push
jne
lods
adc
mov
sbb
adc
cli
ja,pn
jae
inc
xchg
pop
scas
pop
cmp
sub
lahf
rclb
cmp
aam
xchg
pop
sti
adc
push
push
les
adc
cmp
jnp
arpl
sti
xor
inc
les
icebp
jnp
std
xchg
into
cmp
ljmp
push
jns
pop
test
addb
das
jae
mov
aam
xchg
inc
pop
notb
imulb
js
jmp
dec
leave
push
cmp
xor
iret
cld
pusha
pusha
sbb
inc
pop
mov
sbb
xchg
xor
lods
mov
push
push
cmp
mov
mov
out
fwait
int3
and
ret
mov
cmp
fistpll
or
sub
pop
bound
pop
jbe
movsb
adc
xchg
inc
lea
lret
and
sub
jo
fcmovb
sub
adc
sbb
mov
mov
and
movsl
out
mov
pop
mov
es
or
cwtl
out
sti
sti
xlat
mov
out
pop
cmpsb
addr16
sbb
sbb
pop
xor
lock
cwtl
outsl
js
inc
imul
scas
cwtl
rorl
daa
xchg
mov
mov
jbe
ss
je
add
repz
push
jb
dec
stos
sub
outsb
jg
js
pop
sub
lods
lea
cmpsl
dec
test
repz
push
mov
outsb
mov
xchg
cmp
or
add
ret
or
mov
shlb
xor
xchg
arpl
xchg
sbb
push
lret
into
jecxz
inc
xchg
jle
or
jns
das
pop
test
frstor
inc
cmp
mov
adc
sbb
lea
addw
jae
movsb
mov
sub
add
mov
inc
sub
imul
jecxz
cli
ljmp
mov
dec
data16
adcl
dec
stos
lods
jb
sbb
fadds
sti
jmp
jmp
pushl
jmp
dec
cmp
inc
jecxz
jo
sub
dec
cld
inc
sarl
outsl
lahf
and
testb
popf
mov
aaa
lds
ja
adc
fdivrl
xor
cmp
inc
adc
imul
pushf
jge
xchg
dec
and
xchg
push
subb
cmp
sub
pop
lcall
and
sbb
or
or
push
push
sub
or
orb
das
loopne
imul
fstl
sub
call
add
pop
rcrb
aaa
in
stos
and
daa
nop
rorl
jmp
fidivrl
fsub
dec
cmp
inc
mov
and
popl
mov
or
sub
les
nop
popa
shl
mov
in
xchg
push
mov
rcrb
sti
mov
out
cmp
mov
lcall
xchg
gs
test
in
sarl
mov
fldcw
ret
cmp
mov
outsl
push
rep
popa
fdivl
js
adc
repz
popf
pushf
imul
cs
bound
mov
mov
fbld
cmp
cwtl
jp
xor
cmp
ret
dec
sbb
or
pop
pop
lret
fs
push
cmp
mov
cltd
xchg
push
out
into
shlb
rorl
loop
sub
inc
dec
fbstp
jns
pop
outsl
xchg
xchg
jne
and
jmp
aad
lcall
fnstsw
xchg
fwait
sti
clc
pop
loope
out
fnstenv
xor
cmpsl
push
add
scas
sbbb
mov
mov
push
into
or
cmc
out
jbe
cmp
add
dec
std
cli
popa
call
int
xchg
jecxz
push
xchg
mov
jmp
repz
test
popf
lea
xchg
loopne
adc
jns
mov
sbb
add
pop
sbb
fisubs
std
mov
dec
mov
jmp
orb
in
fstpl
push
sub
add
enter
xor
push
mov
popa
shrl
push
push
or
push
and
les
inc
sbb
push
inc
and
push
ss
leave
inc
cmpsl
in
pusha
jno
js
dec
xchg
xor
jne
add
imul
jno
sbb
inc
dec
cmp
adc
cmc
adc
push
cmpsb
scas
sub
mov
mov
test
cmp
adc
sbb
xchg
or
leave
rorb
xchg
hlt
adc
adc
mov
xor
fcomps
mov
ficomps
iret
adcl
dec
gs
jno
mov
cmpsb
jmp
cmp
adc
xchg
cs
aam
scas
xor
ss
xor
bound
pushf
jl
testl
pop
cwtl
aaa
xchg
leave
mov
orl
sub
inc
jle
aad
movl
push
pavgb
ljmp
inc
cmpsb
sub
enter
pop
add
xlat
and
leave
push
sub
pop
shrl
decb
fdivs
mov
dec
add
xor
std
std
pop
push
inc
xchg
cmp
and
out
jmp
fcmovne
clc
fucom
push
dec
push
or
dec
and
les
dec
inc
mov
insb
icebp
out
dec
jge
das
test
cwtl
mov
ds
or
push
and
test
mov
adc
test
mov
jnp
fabs
mov
jno
or
mov
pop
mov
cmp
or
addr16
push
cli
sbb
arpl
fadds
mov
je
jne
mov
div
movsl
mov
inc
cli
xchg
jns
cmc
add
loop
imul
mov
js
mov
shlb
aam
push
das
jmp
pushf
hlt
lods
cmp
cwtl
mov
cmp
into
aad
icebp
dec
pop
add
aaa
mov
lds
push
xchg
pop
in
xchg
or
mov
arpl
movsb
or
ljmp
jle
jge
ror
aaa
add
dec
mov
mov
dec
arpl
jo
orb
popw
int3
pop
clc
pushf
push
jne
push
mov
xchg
ljmp
push
mov
sub
xchg
fldt
mov
sarb
fidivrs
in
push
int
dec
and
xor
or
inc
push
xchg
fadd
dec
repz
jb
ret
ss
fsts
shlb
dec
pushf
ret
jp
and
pop
add
lcall
add
xchg
pop
cmpsb
pop
mov
nop
pop
mov
push
jmp
addr16
cmp
lahf
mov
test
test
and
mov
cmp
sbb
sub
mov
mov
push
fcmovnu
add
cvttps2pi
loop
lcall
lea
lods
nop
mov
cmpsl
scas
pop
les
cs
push
jp
out
test
dec
add
xor
mov
daa
add
pushf
xor
shlb
adc
jno
ds
dec
loop
pop
ss
or
loope
subb
push
xor
pop
xorl
test
xlat
push
or
aam
inc
lock
pop
or
test
cmp
dec
dec
sahf
icebp
pop
dec
sub
aam
sbb
cltd
adcl
jmp
xor
clc
leave
dec
cs
test
xorps
xlat
push
bound
jecxz
inc
es
pop
add
push
lds
cmp
add
push
mov
dec
movsl
imul
pop
stc
loop
stc
cmp
fnstenv
pushf
loopne
cmp
sete
lea
add
clc
xor
fs
xchg
cmp
sub
fcom
dec
ja
jle
inc
or
and
adc
hlt
xor
and
dec
iret
aam
push
inc
iret
sub
scas
test
xor
ja
jae
addb
push
test
scas
mov
mov
shlb
inc
movsb
adc
adc
out
shll
mov
add
or
scas
mov
orl
mov
mov
fiadds
and
lret
adc
mov
jge
add
jge
fdivrl
or
push
adc
adc
inc
in
cld
xchg
xchg
in
rcrl
std
and
pop
popf
cmp
imul
push
cmp
and
ret
push
push
add
or
sbb
sbb
jae
add
dec
pop
sbb
push
int
pop
inc
dec
push
or
fildl
bound
sar
add
and
add
xchg
dec
mov
lds
and
adc
gs
stos
adc
inc
clc
lret
pop
scas
or
jnp
fnsave
orl
push
cmpsb
adc
aas
faddl
lock
jb
dec
punpckldq
inc
stc
or
out
mov
in
fs
lock
adc
sub
ret
fs
js
jne
fadd
pop
sbb
shll
xchg
xor
aam
jns
pop
mov
stos
mov
not
les
dec
sub
ret
repnz
sub
mov
movsl
jbe
adc
or
mov
pop
loop
lcall
mov
imul
arpl
movsb
sbb
mov
or
outsl
jo
loope
in
cmp
jno
out
or
mov
mov
or
sahf
fsubrs
fwait
aam
popf
mov
stos
rcl
cmp
outsb
movsl
sbb
mov
shlb
shll
adc
aas
lea
js
int
add
xchg
je
or
ss
flds
out
sbb
test
xor
jno
lahf
cmpl
cmp
dec
cmc
mov
jne
sbb
cli
pushf
cmp
cmpsb
sar
sti
mov
dec
ret
and
and
push
in
mov
mov
aad
pop
in
sbbb
popa
sti
ss
pop
pop
adc
nop
lret
cltd
cmp
dec
push
arpl
imul
shl
sbb
xchg
inc
mov
xchg
imul
cltd
out
cmc
divl
jo
repnz
xor
scas
cld
sub
out
loopne
pop
dec
movsl
mov
mov
repz
loope
out
push
push
cld
pop
fidivl
jl
cmp
push
outsb
push
aaa
xchg
jbe
pop
ret
dec
mov
mov
nop
cmpsl
inc
bound
scas
inc
ja
push
push
pusha
ja
jge
subl
inc
push
mul
lcall
push
pusha
inc
push
stc
mov
sub
out
add
jge
jle
fistpl
rcl
bsf
xchg
cmc
int
or
push
xor
bound
fs
mov
fsts
sub
das
push
xor
or
ret
popa
and
or
adcb
jmp
pushf
dec
or
cmpsb
icebp
and
and
imul
cld
sbb
cld
sub
loop
les
mov
loope
aaa
add
sbb
das
add
or
pop
push
adc
outsl
cmpsb
mov
and
pop
xchg
and
scas
lcall
std
pop
xor
fsubs
lea
addb
fadds
lcall
mov
jne
ss
add
lahf
lahf
lret
out
aad
pop
adc
pop
dec
adc
insl
sbb
pop
hlt
popf
movd
lcall
bound
movsl
mov
xor
fadds
jns
pusha
out
pop
and
mov
faddl
loopne
cltd
jnp
xor
mov
imul
imul
loope
add
cwtl
in
lods
push
add
aas
jg
out
mov
sbb
fiadds
inc
imul
fcomps
xchg
sbb
push
test
fistps
dec
and
xchg
xor
dec
mov
loope
inc
push
dec
test
cmp
cmpsl
and
pop
pusha
aas
adc
and
repnz
fsub
rcrb
cmpsb
cmc
xor
push
movsb
es
add
pushf
sarb
add
mov
fdivrl
sbb
inc
movsl
jnp
push
insl
jle
add
pop
repnz
jp
repnz
movsl
lock
call
sub
sub
loope
data16
repnz
test
stos
mov
inc
jb,pt
gs
stc
cwtl
xchg
pusha
repz
arpl
push
mov
or
gs
test
lock
aaa
jbe
arpl
lret
fstp
movsb
mov
xchg
mov
mov
pop
push
pop
pop
xor
fidivl
popf
cmpsl
mov
xchg
cmp
xor
mov
scas
push
add
pop
push
dec
adc
stos
idiv
in
pusha
adc
pop
sub
in
push
test
and
push
pop
jb
imul
cmp
aad
sub
daa
jns
xor
push
imul
repz
hlt
subb
push
ljmp
xchg
test
insl
push
icebp
adc
and
sahf
push
scas
jp
clc
ret
roll
dec
mov
push
lods
or
in
ret
or
push
adc
and
mov
iret
iret
cltd
adc
loop
js
fcomp
rcl
sub
inc
dec
and
inc
in
xchg
roll
aam
pop
ret
push
loopne
cmpsb
in
xchg
sub
in
sbb
jae
xchg
lock
testl
xchg
jp
pushf
xor
dec
mov
add
imul
jno
leave
je
inc
and
into
fcompl
hlt
push
das
stos
pop
inc
shlb
jns
mov
movsl
sbb
int3
cld
push
lea
and
and
inc
xchg
sbb
jg
cpuid
cmc
push
ss
push
mov
push
xchg
in
popa
mov
sbb
pop
dec
icebp
and
push
mov
inc
imul
xchg
mov
orl
nop
adc
js
jno
inc
out
int
push
mov
in
dec
loopne
pop
dec
fistps
sub
cld
adc
jp
mov
cld
push
outsb
andl
add
fdivrs
adc
jbe
push
loop
or
jnp
or
cmp
test
xor
dec
xchg
jbe
sub
cmpsl
in
mov
mov
xchg
stos
and
jge
cltd
xor
mov
inc
popa
in
ds
sbb
mov
test
cs
push
jge
insb
rorb
jmp
adc
inc
dec
shlb
pusha
cwtl
cmpsb
jne
iret
cmp
and
iret
rolb
push
adc
xor
test
aad
andl
out
cs
inc
adc
push
pop
mov
pop
je
ja
add
jno
aad
lret
adcb
imul
ret
xchg
call
add
iret
scas
xchg
shrb
sbbl
pusha
outsl
inc
jge
mov
loope
add
push
push
jo
sbb
lret
ljmp
lds
and
stos
xor
mov
aaa
nop
add
out
jge
sub
rolb
mov
aas
sbb
int
repnz
xchg
insl
cltd
in
sub
mov
and
adc
xchg
cld
ret
dec
dec
arpl
push
push
std
dec
jle
aad
push
sarl
popl
mov
bound
and
xchg
mov
dec
lcall
cmpsb
lret
push
pop
fistpl
lods
mov
das
dec
mov
mov
or
mov
stos
mov
and
jae
hlt
dec
mov
jmp
xor
cld
jecxz
repnz
jns
out
addb
repz
int
and
das
cmp
push
jecxz
ljmp
dec
sahf
dec
mov
insl
lcall
les
leave
cmpsl
sbbl
cmp
sarb
push
add
shrl
addr16
cld
xchg
xchg
dec
or
push
mul
xchg
mov
mov
inc
inc
call
mov
dec
daa
add
push
clc
fwait
ret
aad
jns
push
addr16
pop
pop
mov
call
lahf
movsb
mov
mov
sub
pop
cli
loopne
sub
pop
jle
mov
jl
jae
push
cmp
dec
push
push
xchg
mov
in
sbb
dec
jp
cmp
clc
pop
idivl
ret
pop
stos
mov
mov
addr16
jb
sub
cmp
andl
insl
imul
sbb
pop
pop
jne
test
mov
and
or
push
xor
adc
jns
pop
sahf
adc
mov
movsb
mov
adc
out
xor
data16
scas
pop
mov
adc
adc
push
mov
mov
pop
scas
xchg
pop
pop
les
sbb
cmp
mov
adc
jp
sub
insb
gs
push
mov
insl
lds
add
gs
xchg
icebp
xlat
gs
push
cltd
pop
ds
in
ret
xlat
xor
ret
adc
and
loop
inc
xchg
dec
jecxz
jmp
sbb
sarl
xor
in
addr16
xchg
inc
adc
inc
outsb
lahf
aas
lock
lea
pop
mov
and
xlat
popf
clc
lea
les
xchg
dec
call
aad
stc
lock
xor
or
mov
push
loop
call
inc
xchg
and
incb
iret
dec
pop
int
aas
in
xor
dec
mov
xor
cmpb
jno
inc
pop
lods
inc
cmp
adc
loopne
test
dec
insb
pop
cltd
mov
sahf
cmpb
divb
mov
sbb
popa
mov
test
add
pop
sarl
ss
pop
adc
cmp
mov
sbb
in
push
notl
in
lahf
push
or
add
adc
aam
cltd
adc
push
and
xor
lock
xchg
mov
aam
and
adc
push
imul
push
mov
aam
dec
inc
mov
cmpsb
xchg
xor
push
rolb
and
sbbb
aas
hlt
sub
mov
xor
out
adc
ret
pop
add
cmpb
into
mov
rcr
xor
inc
lret
add
lahf
mov
out
push
mov
push
call
add
std
cmp
mov
adc
fs
or
xor
jg
decb
push
clc
xchg
mov
shlb
ja
popf
shrb
and
in
pop
lret
cmp
push
xchg
xorl
xchg
xor
jge
push
test
adc
sub
loopne
mov
push
call
push
das
cmpsb
mov
xchg
cmp
push
movsl
jbe
jnp
push
ds
and
iret
in
pop
stos
xchg
aaa
sarl
mov
mov
mov
fstps
push
ret
cmp
mov
shll
cltd
lret
adc
mov
jnp
mov
adc
mov
aad
inc
lea
xchg
sub
add
pop
jmp
daa
or
dec
mov
sub
lods
dec
sarb
cli
push
rcl
adcl
or
pop
cli
push
imul
pop
jge
and
orl
clc
jl
or
or
lret
add
bound
pop
mov
dec
xchg
mov
out
fs
mov
lret
stc
inc
lea
jmp
or
lds
popf
dec
fsubs
les
xchg
outsl
mov
or
cltd
aam
test
adc
mov
call
push
outsl
push
das
and
jb
xor
dec
push
mov
mov
mov
ljmp
lret
outsl
popf
fidivs
cmp
xor
out
xchg
ja
pushf
xchg
clc
ds
test
mov
or
scas
mov
shlb
sub
inc
cli
dec
shl
sbb
push
or
out
insl
add
sub
xor
mov
xchg
fdiv
cli
cwtl
and
add
push
stos
aas
pop
pop
mov
and
insb
dec
push
jl
jno
dec
stos
push
xchg
inc
adc
dec
lret
and
mov
lods
adc
push
jge
data16
xchg
in
sub
aaa
adc
in
cs
leave
jle
push
dec
sbb
or
jecxz
cld
xchg
rorl
fildll
cmpsb
add
addr16
lds
pop
test
scas
mov
repnz
xchg
pop
adc
pop
cwtl
test
push
xchg
jl
les
mov
inc
inc
pop
mov
mov
shrw
pop
cmp
cltd
pushf
out
cmp
mov
inc
stc
mov
xchg
sbbb
jmp
cmp
pushfw
dec
ljmp
or
mov
jecxz
sbb
cmp
push
pop
arpl
push
out
xchg
out
and
dec
inc
cs
fwait
inc
cld
nop
push
jg
cld
lea
iret
mov
sbb
pop
push
push
xorl
insb
ja
jecxz
enter
or
jns
push
movsl
sahf
mov
into
inc
into
cs
or
pop
mov
fisubs
adc
pop
mov
sahf
popf
in
das
js
xor
jge
adc
mov
mov
stos
scas
xchg
loopne
jb
icebp
cs
dec
sbb
mov
inc
inc
popf
sbb
xchg
sub
mov
adc
jecxz
lock
mov
movsb
fsubr
sub
out
inc
and
and
pop
dec
cmp
dec
pop
dec
jns
arpl
aas
sub
loope
add
xchg
cwtl
xchg
and
mov
in
inc
fwait
test
das
in
xchg
cmp
xchg
test
adc
shl
jle
test
mov
xchg
cld
jbe
movsb
cmovns
dec
pop
or
arpl
jmp
inc
daa
cmp
in
mov
mov
cld
fnstenv
and
arpl
arpl
ficompl
push
mov
shrl
movsb
das
call
aaa
sub
jb
pop
push
mov
cmp
push
pop
pop
xchg
fwait
jecxz
lcall
cld
cmp
es
adc
aas
cmp
jmp
les
adc
push
pop
jge
mov
inc
mov
xchg
sub
and
inc
add
push
data16
outsl
cmp
pop
add
fwait
sbb
cwtl
fimull
xchg
or
lcall
sahf
jns
fsubrl
or
notl
je
cmp
sbb
pop
call
mov
mov
mov
repnz
cmc
and
repz
mov
push
gs
jo
xor
add
pop
jge
data16
leave
push
lret
mov
shl
or
add
data16
hlt
lret
outsl
jnp
in
cmpsb
insb
mov
fcmovnbe
ja
dec
sub
sub
jp
mov
sub
cmp
repz
or
out
xchg
cmc
jge
lahf
in
sbb
les
test
add
cmpl
and
or
loop
push
sub
adc
fcmovbe
mov
hlt
dec
jo
jno
mov
insl
jle
pop
stos
sbb
aad
cs
fsubp
std
out
and
daa
mov
fimull
ret
enter
xchg
lods
in
and
nop
jp
sbb
orl
nop
sub
push
ficoml
test
mov
sub
test
pop
sub
repnz
lret
mov
mov
mov
lret
add
pop
fsubl
mov
sub
arpl
mov
cmpsl
pop
xchg
sti
xchg
push
mov
fwait
sbb
mov
mov
lods
enter
xchg
xchg
outsb
or
stos
cltd
nop
pop
ja
test
nop
sub
lods
je
inc
xchg
rcrb
jns
cli
push
add
outsb
xchg
repnz
pop
inc
xlat
xchg
add
test
nop
ss
mov
ja
out
mov
push
push
adcl
push
nop
hlt
ret
mov
xchg
outsb
jl
pop
xchg
xchg
fisubrs
mov
ss
repz
sbb
rclb
jle
fcmovne
movsl
inc
sbbl
push
push
jmp
adc
fisttpl
mov
add
test
lods
dec
sub
pop
int3
js
les
mov
repnz
decb
sbb
cltd
fwait
scas
movsb
mov
mov
ficoml
xor
fs
or
test
gs
pop
xchg
pop
mov
cmp
ljmp
sub
std
mov
insl
mov
test
unpcklps
and
xchg
dec
push
pop
ja
xchg
sarl
mov
push
cmc
mov
add
out
dec
popa
lea
xor
sbb
outsb
push
fldcw
cmp
sbb
dec
inc
fucomp
mov
shrb
add
popf
and
inc
adc
lods
xor
push
test
cmp
add
mov
mov
addl
push
je
xlat
inc
rorl
inc
mov
cmp
dec
nopl
aas
adc
divl
xor
sar
jno
push
stc
jl
and
dec
in
xchg
dec
mov
cwtl
js
movsb
mov
mov
lock
jb
push
in
jmp
xchg
pop
xor
xor
push
sub
in
mov
scas
ja
shl
and
sbb
loope
xor
mov
jecxz
iret
pushf
inc
push
dec
jge
cmp
scas
inc
leave
pop
sub
sbb
es
inc
filds
or
daa
and
aas
xchg
mov
loopne
mov
fiadds
xor
out
daa
dec
je
and
lret
out
sub
mov
fs
orl
adcl
pop
fninit
fisubs
jg
xchg
xor
fstps
pop
int
insl
dec
push
lahf
outsl
sbb
test
pushl
pop
jecxz
cld
jl
adc
hlt
fidivrl
loop
xor
shll
scas
pop
sub
lahf
xchg
inc
adc
inc
lahf
aad
lods
aam
inc
and
push
sbb
inc
xchg
stc
xor
mov
sbb
movsl
or
cmpsl
adc
out
add
adc
pop
cwtl
dec
push
ds
addb
adc
push
iret
add
lock
jecxz
and
mov
xchg
adc
or
leave
pop
or
xchg
dec
cmp
inc
mov
sahf
add
fstpl
cmp
aas
or
xor
dec
js
pop
inc
jle
nop
sbb
push
cmpsb
jl
lea
cmp
sbb
fisubrs
cmp
pop
jle
add
push
les
xor
mov
dec
hlt
mov
jnp
cmp
add
xor
js
xchg
test
pop
mov
pop
inc
repnz
mov
gs
movsl
mov
fcomi
hlt
xchg
rorb
mov
mov
daa
jae
push
jb
mov
pop
out
flds
push
push
ljmp
mov
pushf
xchg
mov
or
and
lcall
mov
xchg
arpl
push
pop
xchg
das
or
lahf
cmp
outsb
cltd
mov
cmp
dec
push
push
push
ljmp
pop
repz
lock
cli
test
std
push
mov
jmp
arpl
add
jno
jnp
imul
stos
jl
jecxz
in
xchg
xor
jnp
inc
push
movsl
jge
in
cmp
jl
pushw
pop
pop
popa
test
xor
or
out
lret
xor
fstl
push
stos
xchg
pop
mov
ljmp
add
out
mov
sbb
lods
in
xchg
gs
sub
jge
inc
lock
fisttps
mov
pop
insl
inc
pop
ss
mov
punpckhwd
add
jle
dec
jbe
sbb
mov
jne
cltd
ret
push
fwait
inc
mov
jl
mov
repz
jmp
sub
aad
inc
sbb
aas
aas
sbb
mov
test
cmpl
aas
addl
jmp
sub
insb
push
enter
ljmp
pushl
pop
ficoms
repnz
adc
or
add
aam
jle
insb
jbe
aas
sub
push
sub
pop
inc
jne
push
pop
cmovno
outsl
push
jmp
cmp
xor
out
popf
pushf
xchg
cmp
sub
pop
bound
push
in
push
rcrb
test
jno
push
adc
adc
and
cwtl
jbe
call
add
pop
loop
jo
cmp
mov
cmpsl
loopne
xlat
mov
and
inc
xor
lret
les
and
jg
and
or
mov
xchg
xlat
mov
and
jge
xor
ja
and
cltd
cld
dec
out
xor
test
outsb
outsl
fnstenv
outsl
ficomps
sub
movsl
lods
imul
insb
adc
mov
push
add
sbb
inc
inc
adcb
adc
out
outsb
inc
sbb
outsb
xrelease
addb
dec
incb
stos
jl
mov
cmpsb
rsm
adc
push
sahf
in
sarb
and
ret
inc
cmp
adc
pop
lret
mov
jle
dec
lods
adc
push
std
sahf
xchg
xchg
stos
inc
xor
push
cltd
pusha
enter
cmpsl
cltd
push
dec
ret
xchg
pop
test
pop
call
pop
pop
xchg
push
dec
lods
fnstcw
mov
das
cwtl
xchg
jp
push
addr16
push
inc
xchg
loop
popf
mov
cmpsb
adc
jb
dec
jne
xchg
fidivrl
rcrl
mov
push
mov
jae
jg
or
jns
mov
int3
mov
jnp
jnp
inc
jecxz
dec
dec
jmp
sub
sbb
lret
movsl
out
sbb
mov
cli
and
pop
xchg
xchg
mov
mov
or
addl
push
idivb
adc
jp
jg
add
lock
aam
add
sbb
xor
and
xlat
iret
lock
es
pop
mov
adc
jg
pushf
imul
ljmp
fisttpll
rcl
into
xor
sub
xchg
call
or
mov
cmp
pop
js
xor
adc
outsl
cmp
mov
cld
out
mov
outsl
dec
jne
leave
out
cmp
aas
jo
in
in
out
cmp
sub
cld
testl
in
das
lahf
je
pop
mov
push
test
mov
cmpl
xor
lcall
cld
rolb
out
testl
dec
push
loopne
push
cmpsb
mov
sub
stos
stc
fwait
jmp
ror
sti
nop
hlt
fs
sub
or
iret
stos
dec
xor
jp
addr16
les
xchg
push
popf
fisubrl
fisttpl
sub
push
xor
ret
jmp
cmp
mov
and
in
push
leave
and
fwait
mov
push
fmuls
ss
orb
inc
repz
cltd
loop
inc
nop
inc
daa
nop
ret
pusha
movsb
in
fsts
movsl
mov
sahf
push
add
mov
add
rorb
fisttpl
inc
push
cmp
pushf
cmpsb
push
inc
shrl
sbb
es
testl
mov
in
cmp
add
or
mov
jg
or
mov
leave
cvtps2pd
xor
mov
jae
or
and
hlt
cli
cli
mov
push
sub
ja
jb
jo
push
sbb
enter
cli
push
xlat
add
mov
mov
inc
xorl
xchg
pushf
pop
addr16
cltd
xchg
mov
jmp
shlb
jp
sub
ret
jge
mov
xchg
in
adc
jg
scas
xor
mov
push
shlb
dec
clc
dec
cmpsb
nop
lret
lret
das
js
fnstsw
fmull
dec
jnp
dec
fmulp
outsl
mov
xorl
scas
stos
jg
xchg
mov
push
frstor
jne
movaps
gs
pop
xchg
push
push
pop
sti
push
adc
jo
adc
cltd
cwtl
sti
test
and
subl
xor
dec
push
sbb
mulb
mov
lea
stos
dec
sarb
xchg
adc
cmc
and
xchg
inc
xchg
jg
call
mov
push
daa
pusha
loopne
xlat
imul
sbb
test
rclb
iret
add
fcomip
int3
mov
sbb
aam
ss
int3
xor
enter
cmp
lods
stc
xchg
mov
aam
mov
outsb
sbb
dec
jg
cmc
roll
pop
shlb
xchg
push
out
cmp
mov
ret
test
hlt
mov
adc
scas
mov
call
mov
xor
movsb
sub
ja
aaa
out
orb
adc
dec
ret
stc
mov
sbb
push
ss
rolb
inc
cmp
pop
das
les
aas
pop
mov
sub
cmp
call
hlt
jae
xchg
push
icebp
xchg
sub
pushf
test
adc
in
fists
int3
and
mov
fbstp
in
addr16
in
cmp
enter
jg
ret
aaa
and
xlat
and
mov
jecxz
lcall
popf
cmp
pusha
pop
addb
mov
je
outsb
pop
dec
test
ret
mov
sub
fcomps
aaa
test
idiv
xor
and
loopne
mov
mov
adc
rcll
rorb
mov
or
sub
pop
cmc
adc
and
sbbl
pop
xor
pop
push
push
xchg
xlat
lock
xchg
inc
pandn
test
ret
mulb
jle
shlb
jmp
cli
mov
mov
jae
aam
and
pop
push
mov
cmp
inc
imul
int3
jns
sbb
fnsave
mov
aam
mov
xor
or
imul
aas
adc
fiaddl
dec
add
sbb
lock
inc
mov
jne
push
mov
pop
push
mov
fwait
cmp
clc
call
add
ds
addr16
mov
inc
sti
dec
cs
lds
inc
sub
add
flds
scas
repnz
jnp
out
mov
mov
imul
pop
or
xor
lea
add
sbbb
popa
out
inc
xchg
lss
jns
divl
enter
das
jmp
outsb
add
cmp
xor
pop
gs
sahf
push
mov
mov
ret
mov
xor
cmp
cmp
movsl
jle
jae
push
xchg
popf
mov
mov
push
jle
xchg
adc
daa
sahf
push
repnz
loope
imul
addr16
push
cli
mov
pop
icebp
jle
mov
aam
pop
cmpsl
jp
xchg
cld
xchg
popf
les
xlat
push
lahf
mov
sahf
cwtl
jns
scas
or
inc
adc
out
xchg
and
pop
test
xor
in
das
orb
mov
xor
and
cli
sti
std
in
nop
bound
mov
jo
lods
push
or
xchg
mov
popf
out
daa
jo
mov
data16
dec
push
fwait
sub
mov
or
scas
mov
mov
sub
ja
sub
ret
and
rcrl
hlt
fstpt
nop
mov
das
add
aaa
stc
loop
lea
decl
gs
and
mov
lahf
ja
mov
shl
and
pop
push
dec
stc
divl
jmp
dec
mov
icebp
aad
sbb
gs
adc
scas
or
fwait
das
push
add
and
xor
sahf
fmul
jmpw
pushf
fs
out
fcmovbe
fbstp
js
or
or
pushf
iret
push
pop
imul
cltd
mov
repnz
xchg
push
lahf
cmpsl
mov
or
es
orl
stos
xor
test
loop
xlat
aaa
aaa
jmp
cltd
dec
mov
xor
cmp
sbb
mov
mov
subl
push
jmp
jl
rorb
pop
xorb
jle
adc
xor
movlps
pusha
jmp
pusha
loop
add
mov
incl
lcall
in
jecxz
adc
and
cmc
jge
xor
addr16
inc
stos
dec
shrb
xchg
xor
xchg
and
stc
out
jae
pop
push
add
dec
jbe
xchg
aas
jnp
cmp
pop
cmpsl
cmpsl
nopl
lret
and
loope
nopl
fcoms
pop
jmp
test
xor
outsl
or
jno
sbb
adc
dec
inc
stos
sbb
das
mov
dec
push
lock
outsl
inc
loop
dec
sbb
xor
inc
in
and
or
sub
mov
sbb
enter
in
xchg
adc
fcompl
jns
fisttpll
push
sbb
incb
push
or
xchg
orl
pop
mov
mov
mov
ss
movsb
adc
decl
loopne
shlb
lds
inc
das
dec
aam
jg
lcall
adc
scas
stc
and
in
sbb
into
jns
das
xchg
mov
pop
inc
add
xor
sub
and
enter
push
inc
sbb
movsb
out
cmp
rcll
popf
fs
mov
es
mov
int
dec
xor
sti
outsb
mov
dec
inc
push
sub
jnp
test
xor
rcrb
rorl
es
lcall
pop
fwait
iret
xchg
cmc
mov
xchg
popl
mov
sbb
ret
mov
mov
jo
loope
pusha
or
outsb
and
and
mov
inc
cmp
mov
mov
daa
mov
jo
pop
jmp
sahf
mov
cmpsl
and
xor
adc
lods
or
shlb
icebp
sbb
cltd
push
mov
sub
fs
ja
xchg
fsubs
fadds
bound
dec
sbb
xchg
xchg
sahf
mov
das
and
bnd
movsl
shrl
cmpsl
xor
cmp
lahf
nop
fisttps
popa
or
xor
repz
xchg
cmp
mov
iret
inc
xchg
in
cmp
mov
xor
outsl
add
leave
nop
scas
lret
cltd
push
fistpl
rolb
ljmp
jecxz
pop
push
int3
daa
inc
fildl
mov
rcr
in
ds
mov
pop
and
inc
test
inc
ret
add
sub
ja
jno
dec
dec
fcoml
mov
roll
ljmp
rorb
push
clc
lret
jle
cs
stos
incl
inc
inc
dec
lods
pmulhuw
outsb
pop
fidivs
xlat
and
lods
add
xlat
sub
jbe
fidivs
daa
add
mov
mov
call
push
arpl
or
and
test
hlt
mov
and
cmp
lods
pop
jmp
push
push
mov
fcmove
inc
bound
dec
gs
repz
fdivrs
inc
daa
xchg
jbe
nop
ret
cmc
lahf
incl
shrb
lds
addr16
xchg
xchg
xor
push
mov
aaa
das
leave
ja
nop
adc
jae
ds
dec
movsb
push
inc
or
out
imul
add
xchg
in
insl
xchg
xor
jns
ror
lret
pop
movsb
fmull
pusha
stos
adc
jge
sbb
stos
pop
sub
adc
sub
lcall
mov
or
movsb
mov
into
fdivs
inc
xchg
sar
jge
cmpsl
fildll
enter
jbe
movsb
ljmp
sub
insl
das
add
out
fwait
outsl
cltd
mov
mov
dec
shll
pop
ja
xchg
shll
jg
inc
xchg
scas
cmc
pop
xchg
mov
loop
divb
mov
push
movsb
sub
stos
push
lods
insl
icebp
pop
and
cmc
pop
jb
push
xchg
loopne
push
jge
aaa
nop
aad
jle
pusha
sub
fiaddl
pop
inc
xor
mov
mov
and
int3
mov
hlt
push
daa
cmc
out
out
cmpsl
lock
daa
or
mov
cwtl
pop
inc
mov
addb
xchg
pop
or
scas
push
mov
cs
or
push
lods
push
sub
unpckhps
fiaddl
test
cmp
js
in
repz
test
scas
fldcw
and
push
inc
push
movsl
ss
push
call
mov
xlat
jg
test
xchg
pop
jmp
mov
mov
xor
popa
out
dec
fsubp
push
pop
add
xchg
mov
out
or
pop
mov
cmp
cmova
daa
pop
fsubrs
jecxz
addr16
es
xchg
dec
jl
push
pop
jmp
mov
add
imul
pop
dec
shrb
inc
ja
lods
fdivrs
icebp
sbb
outsl
pusha
sub
adc
mov
je
les
jecxz,pt
clc
rcrb
shrl
mov
data16
aas
push
ss
mov
xor
mov
xchg
jno
adc
jnp
aad
and
xchg
cmc
dec
clc
xchg
or
jge
or
jo
dec
xchg
add
or
fistpll
cmp
jbe
notl
daa
sub
inc
inc
add
rolb
push
add
push
int
adc
cmp
adc
cld
mov
movq
cli
hlt
lret
xchg
xor
sbb
push
xor
xchg
push
inc
and
dec
cmp
sub
cmp
and
xchg
aaa
inc
incb
fsubrs
repnz
jno
pop
or
mov
scas
mov
scas
rcrb
out
inc
push
std
pop
jge
or
inc
jecxz
inc
mov
cmpsl
xchg
xor
cs
xchg
cs
lret
cmp
data16
repnz
mov
dec
and
clc
sub
mov
jae
jns
aaa
mov
sbb
enter
aam
dec
shrl
add
sub
pop
push
shlb
dec
add
dec
insl
popl
in
xlat
dec
and
mov
insl
popa
movsb
mov
push
scas
sub
imul
mov
xchg
sub
por
jg
pop
incb
sub
lds
sub
cmc
into
dec
jns
jp
mov
and
xchg
mov
call
idivl
xchg
add
fildll
stos
xor
xchg
mov
mov
subb
dec
push
jge
or
mov
inc
jg
hlt
dec
loopne
adc
xor
out
leave
adc
xor
and
nop
xor
pop
sub
fdivr
xor
jo
mov
jae
aas
add
jbe
leave
mov
scas
in
mov
data16
aaa
mov
loop
cmpsb
mov
popa
clc
adc
loop
push
pop
icebp
call
repnz
sti
xchg
inc
test
addr16
mov
xchg
outsl
dec
adc
int
enter
mov
jnp
ss
or
push
fistl
adc
jns
lock
push
cltd
bound
jb
push
int
lock
jg
push
mov
enter
pushf
jno
add
jb
cmp
and
insl
pop
and
xor
cmp
jo
cwtl
mov
jl
push
jne
and
add
lods
mov
test
int
or
push
out
nop
ljmp
sbb
fldl
sub
push
imul
adc
add
xchg
sbb
in
fsubr
outsb
lret
push
packuswb
mov
lret
xchg
xor
shrl
pop
and
push
pop
pop
add
divl
fists
int3
jne
inc
arpl
mov
les
cmp
xchg
bound
ja
cmpsl
js
lret
cmpsb
cs
dec
and
call
call
loopne
icebp
pop
or
fcmovnu
movsb
push
inc
cmc
mov
pop
jns
inc
imul
pushf
ds
mov
adc
mov
mov
xchg
or
je
lcall
inc
dec
sub
cvtdq2ps
xchg
fiaddl
mov
mov
jb
mov
in
mov
adc
dec
mov
hlt
sahf
xor
popa
jp
movsl
xor
adc
movl
inc
fiaddl
lds
jbe
in
pop
rcll
mov
sbb
incb
sub
fsub
and
dec
clc
mov
int
lods
divb
frstor
xchg
std
pop
cmp
dec
fwait
and
roll
ret
sahf
pop
out
fstps
loop
adc
adc
xor
push
scas
inc
es
and
in
add
or
xlat
xchg
jp
jge
and
mov
sbb
and
iret
cmp
xchg
daa
mov
jne
nop
cmp
adc
les
sub
stos
pop
test
std
or
je
or
sti
mov
cmp
lock
movsl
sbb
les
inc
push
jno
xor
inc
adc
shlb
add
inc
sbb
ss
hlt
pop
inc
aad
dec
pop
dec
ja
in
js
lods
mov
xor
cmp
dec
jecxz
fadds
test
ja
test
lret
xchg
mov
jo
or
loop
gs
and
xlat
js
sub
mov
loope
xor
cltd
popa
gs
ss
call
inc
ficoms
xchg
or
das
lods
or
int
jge
push
mov
xchg
push
cmpsb
repnz
int3
sbb
inc
scas
jp
gs
cmpb
cmp
mov
or
bound
cmp
sbb
mov
jle
cmp
insb
cld
push
mov
dec
daa
sub
push
dec
test
ficompl
jle
movsb
cmc
inc
lea
pop
xor
dec
push
inc
sbb
daa
pop
out
lret
enter
out
lods
adc
insl
mov
cmp
xor
cmp
in
lret
dec
mov
imul
stos
test
push
jns
xor
lret
in
sub
mov
mov
xchg
loopne
or
call
sbb
mov
dec
outsb
and
mov
loope
movsl
jno
or
push
sub
push
add
cmp
cs
sbb
pusha
push
adc
fdivs
adc
sub
xchg
sti
in
stos
xchg
xchg
inc
lods
sbb
and
xchg
mov
pop
xor
leave
push
mov
out
stc
in
fmuls
pop
sbb
ljmp
dec
mov
in
adcl
adc
add
lcall
out
jae,pt
push
dec
add
pop
fiaddl
dec
xor
sub
jecxz
adc
jns
mov
jbe
arpl
lods
sub
adc
pop
push
lock
push
adc
not
xor
and
xchg
ja
test
or
mov
cmp
push
imul
add
sub
mul
repz
test
cli
pop
dec
adc
aad
or
fisttpll
mov
addr16
jo
cltd
xchg
xor
dec
sub
aam
add
xor
sub
inc
test
add
cmpsb
test
mov
pminub
mov
jp
clc
cmc
ja
push
je
mov
jno
pop
adc
sub
inc
pop
push
inc
repz
xor
jl
mov
or
jbe
pop
xor
aas
mov
in
stos
sub
insl
mov
mov
out
cmc
ss
lods
push
mov
push
adc
out
sahf
movsb
test
fnstsw
sahf
in
cbtw
daa
enter
dec
imul
lds
popl
and
push
nop
or
mov
daa
xchg
adc
mov
rolb
inc
xor
cmp
push
jl
out
jnp
push
fs
adc
lds
jnp
lret
push
mov
scas
enter
stos
mov
fnstsw
ror
sub
loop
inc
push
push
add
cwtl
add
sbb
jbe
and
xor
push
dec
out
mov
mov
lret
roll
dec
iret
mov
hlt
les
shl
js
sbb
shlb
mov
cmp
add
mov
adc
sub
xchg
loopne
push
arpl
int
mull
ret
jge
repnz
dec
inc
cmp
daa
mov
mov
pop
in
jbe
inc
addb
sbb
out
cmc
or
ss
add
or
sti
xor
insl
cs
gs
mov
push
add
stos
or
pop
jno
arpl
sub
mov
or
les
cmpsl
lret
stos
or
cmp
sti
je
mov
lahf
decb
adc
xchg
push
test
daa
divb
insb
dec
popf
mov
push
lea
jae
cmp
out
outsb
lods
inc
xor
leave
adc
mov
pop
push
out
push
xchg
fsubl
scas
mov
cltd
xchg
adc
jge
push
push
enter
or
jns
mov
dec
enter
stos
lahf
sbb
pop
iret
sub
xor
pop
pushf
pop
xchg
push
sbb
add
push
ficoms
mov
cmp
and
cs
shll
das
iret
and
jg
xchg
fildll
sub
jae
fnstsw
add
dec
mov
outsb
inc
gs
out
cmpsl
inc
lret
push
xor
mov
pop
lea
xor
nop
sbb
push
or
sub
pop
mov
push
jbe
out
jp
lret
insb
push
add
in
xchg
pop
orl
pop
cmp
xchg
jg
and
or
xchg
mov
jbe
sahf
testl
push
std
fdiv
scas
or
aad
shr
adc
rcr
js
xor
je
loop
and
add
jne
mov
add
jmp
mov
in
stc
fcomip
fidivl
pop
imul
mov
and
jl
js
and
pushaw
cmp
add
add
repnz
cs
mov
and
push
sbb
repnz
out
shrb
or
ret
lods
daa
das
lds
sbb
add
push
addr16
xchg
mov
mov
imul
xchg
xor
movaps
shrb
and
rolb
iret
dec
rcrl
pop
lea
adc
data16
push
push
aas
std
outsb
pop
mov
inc
xchg
mov
dec
jb
lock
out
inc
enter
test
out
inc
out
mov
inc
mov
mov
pop
out
icebp
cmpsl
cltd
mov
ja
daa
mov
push
dec
jns
jne
add
jg
cltd
out
leave
xor
mov
lahf
cli
pop
lds
push
pop
arpl
outsl
mov
mov
sub
dec
fdivs
movsl
mov
insb
jnp
cmp
push
add
add
insb
jp
pop
mov
in
jae
and
shll
dec
in
ss
jge
and
loope
nop
and
dec
popa
cli
inc
adcl
test
incb
adc
pop
loop
roll
xchg
lcall
jo
outsb
fisttpll
xor
adc
xor
and
jle
sub
in
inc
and
imul
or
hlt
xchg
cli
adc
jb
imul
inc
push
into
movsb
dec
nop
psubsw
or
pop
imul
dec
mov
cmpsl
push
xorl
sbb
clc
mov
mov
xchg
mov
mov
inc
cmp
orb
push
jp
pop
cmp
leave
mov
inc
out
int
inc
xor
sub
pop
jnp
in
mov
hlt
int3
cmp
push
mov
cmp
xor
xor
xchg
int3
jno
hlt
subb
xchg
pop
pop
sbb
jp
jg
dec
xchg
fnstcw
cmp
int3
sub
shll
mov
jle
mov
mov
popa
jle
xchg
fwait
and
cmpsl
dec
or
in
lock
fnstenv
mov
mov
xchg
cmp
dec
or
jecxz
dec
test
outsb
dec
movsb
adc
or
xchg
cld
mov
mov
arpl
xor
ljmp
or
jb
mov
sub
lcall
fisubl
adc
scas
xorb
mov
jle
push
shll
ja
xlat
xchg
inc
mov
inc
and
ja
sub
ss
ljmp
xor
dec
filds
mov
pop
jl
add
out
call
pop
mov
and
mov
mov
mov
in
push
lret
fsub
and
cli
push
aad
push
mov
add
movsb
movsb
ljmp
je
in
adc
arpl
push
cmp
push
aam
mov
push
xor
add
ret
cmp
movsb
jmp
mov
fdivs
adc
mov
and
jge
js
aas
fidivs
sti
push
ret
fsubp
fsubrp
mov
mov
not
pushf
out
sbb
sbb
mov
inc
shlb
inc
push
orl
hlt
and
mov
sub
xchg
xor
inc
andl
xchg
sbb
pusha
and
adc
mov
pop
rcll
adc
mov
int3
dec
mov
push
fdivrs
mov
dec
jmp
pop
test
xchg
mov
pop
lods
inc
lcall
and
lods
dec
fwait
and
lcall
jp
mov
stos
jbe
and
scas
mov
popl
rcrb
push
mov
sub
test
lea
subl
sti
test
faddl
sti
lock
push
out
pop
add
in
push
adc
scas
cmp
aas
or
pusha
push
pop
jns
xor
xor
hlt
add
xor
xchg
into
fistl
hlt
mov
loopne
movsb
cmp
xchg
add
jns
push
imul
push
fcmovbe
setp
or
push
leave
sub
mov
cwtl
push
inc
sub
rolb
aam
in
dec
test
out
subl
adc
fidivrl
push
iret
addr16
jbe
mov
pop
sbb
mov
popa
data16
mov
xchg
mov
sub
pop
xchg
mov
bound
stc
dec
mov
arpl
in
dec
push
insb
dec
jge
call
sub
inc
andl
ljmp
inc
pusha
lods
xchg
sub
adcl
mov
add
push
or
xchg
cmp
xchg
mov
cmpsb
popf
in
in
sub
jbe
add
adc
mov
inc
jg
and
xor
cmpb
mov
sbb
in
jb
dec
shlb
xchg
call
inc
ljmp
clts
add
std
lret
inc
lods
out
add
jmp
call
sbb
pushf
inc
scas
and
inc
push
pop
adc
or
dec
fstl
lea
jge
das
adcb
and
xchg
mov
aam
push
sub
loopne
sub
or
outsb
push
fiaddl
and
ja
les
lods
imul
mov
shll
pop
stc
adc
push
sub
scas
jb
daa
loope
mov
insl
sbb
cmp
mov
or
scas
sub
cmc
in
and
js
mov
lock
fidivrs
jno
in
pop
nop
mov
jmp
inc
mov
mov
fidivs
cmp
sarl
sti
in
hlt
ret
dec
xchg
inc
pop
and
push
adc
out
clc
sub
movsl
pop
movsl
pushl
pop
pop
dec
lea
jnp
out
arpl
adc
push
out
orl
jge
mov
add
sarb
mov
sahf
xchg
rol
inc
adc
and
push
push
fiaddl
shll
test
push
adc
cmpsl
fwait
sbb
jb
sbb
add
pop
jmp
mov
popf
lds
adc
push
jle
jge
push
inc
ljmp
das
dec
and
mov
mov
pop
in
cmp
inc
mov
jne
cld
shl
loope
mov
xorb
xchg
xor
cmp
mov
and
les
inc
sub
stos
cmp
cmp
or
jns
cs
pusha
lahf
jl
dec
jnp
sbb
dec
bound
mov
ds
sub
dec
mov
scas
int3
add
cmc
dec
cltd
xlat
jno
xor
or
imul
or
xchg
adc
push
jnp
inc
leave
std
mov
or
adc
push
daa
xchg
iret
mov
outsl
loopne
cmp
cmp
arpl
sbb
cwtl
dec
push
jp
mov
rcrl
or
roll
pop
ds
mov
loop
cmpsb
push
stos
push
in
lret
push
js
sub
daa
ja
push
loopne
mov
int3
mov
sbb
mov
jp
adc
popf
cs
push
icebp
jl
cld
out
jno
cmp
mov
jb
or
loope,pn
adc
jns
mov
je
call
lret
sub
jns
mov
mov
out
in
insl
cmp
divl
cmp
movsl
inc
aaa
mov
inc
std
and
les
lods
shll
insb
ret
flds
dec
xlat
aad
mov
fnstsw
push
cmp
imul
mov
ss
pop
push
rorb
outsb
mov
push
mov
lods
xchg
sub
inc
push
ret
loop
std
pop
pop
in
inc
push
ss
loop
or
sbbb
imul
add
pusha
imul
nop
dec
movsb
dec
aaa
cmpsb
mov
movsl
pushf
adc
mov
add
lea
xor
pop
xor
cmpsb
in
les
add
mov
xor
call
and
ss
sbb
pop
sbb
fstps
outsb
sbb
inc
addl
jae
rclb
sbb
out
rorb
inc
cmp
mov
fldcw
cltd
jns
add
ljmp
adcb
ret
dec
ljmp
int3
push
insl
mov
mov
addr16
add
cmp
cwtl
jmp
xchg
inc
pop
push
cmpsb
mov
bound
jp
call
insl
mov
nop
ret
scas
test
aaa
pop
add
roll
dec
xchg
nop
cmp
cli
loope
out
lahf
mov
sub
push
push
aaa
inc
subb
jmp
ljmp
push
xchg
push
mov
jge
push
or
lods
xor
xor
movsb
pop
popa
adc
mov
js
mov
pop
aas
out
cltd
jae
mov
jns
ret
out
daa
stos
out
cmp
jp
push
fdivr
mov
cmc
push
add
or
std
sub
insb
sbb
lret
dec
sbb
adc
enter
test
dec
jns
mov
out
mov
in
mov
xchg
fcmove
dec
lods
or
cmp
cltd
hlt
or
jmp
nop
shll
mov
es
incl
orl
cmpsl
aam
fimuls
fisubrl
or
test
push
mov
mov
scas
mov
enter
int3
iret
jmp
dec
and
int3
xchg
movsl
cmp
and
cltd
shll
add
cmp
lods
stos
dec
fstpt
je
inc
cmovl
or
and
cmp
mov
cltd
les
jecxz
popa
shll
adcl
mov
adc
enter
sbb
pop
pop
aaa
sbb
icebp
sbb
jecxz
jecxz
mov
int
or
js
jne
xchg
jg
rorl
jnp
cmp
out
aas
bound
sub
lahf
sub
lahf
pusha
jp
xchg
outsl
outsb
gs
mov
stos
adc
fisubrs
ret
mov
xor
scas
mov
sub
cmp
jle
faddl
rclb
mov
jle
ja
aam
daa
mov
add
sbb
or
call
testl
cmpsb
mov
or
loope
mov
inc
add
decb
icebp
dec
enter
push
jmp
daa
inc
or
inc
faddl
dec
mov
cltd
sarb
in
cltd
cmp
stos
out
pop
movsb
mov
test
jmp
cwtl
aad
pop
jmp
into
mov
add
jae
cmpsl
jg
cli
mov
ds
mov
sti
clc
inc
push
xor
inc
pop
cltd
mov
jbe
cli
fwait
les
sbb
sub
outsl
scas
shl
aaa
mov
ror
cmp
cli
xchg
outsl
push
add
mov
rcrl
sub
dec
scas
add
pop
fdivl
pop
lock
orb
nop
pop
popf
ss
insl
frstor
pusha
jle
xchg
push
sub
add
cmpsl
ret
cld
movsb
xor
fdivrl
rcrl
sub
lret
cmpsl
mull
sbbb
push
push
lods
xchg
in
add
mov
movsl
xor
out
lret
pop
or
add
out
cli
mov
out
push
add
lods
or
movsl
pop
lds
xchg
into
mov
iret
adc
sbb
dec
adc
push
dec
jecxz
mov
xchg
stos
dec
insb
add
add
push
repnz
adc
pop
aad
lock
pop
inc
cmpsb
pop
out
cmp
adc
and
inc
test
push
int
cmp
xchg
out
test
push
popa
or
jmp
add
dec
xor
pop
fwait
mov
mov
adc
test
cltd
push
rorl
mov
push
mov
gs
jmp
pop
les
or
xchg
sbb
xchg
popa
stc
in
mov
mov
sub
xchg
dec
adc
movb
movl
add
mov
mov
add
push
dec
mov
jmp
dec
dec
jnp
xchg
mov
sub
xor
aas
adc
mov
lea
scas
les
push
scas
je
lcallw
xor
pop
xchg
nop
cmc
les
push
cltd
jge
stos
xor
adc
inc
xor
lcall
jp
pushf
fisttpl
xor
sub
inc
or
adc
mov
cmpsl
cmpsb
xchg
mov
cwtl
mov
pop
cmc
iret
fistpll
adc
aam
jno
add
or
pusha
push
addr16
push
push
sbb
adc
shlb
js
mov
or
jnp
add
jl
rcll
xor
xchg
mov
in
inc
test
jp
sub
jle
mov
mov
lods
sub
dec
out
in
addr16
pop
mov
div
cmp
dec
add
aad
jl
pushf
sbb
in
sbb
and
test
std
addr16
repz
xchg
cmp
leave
fs
xchg
push
xchg
push
in
out
pop
sti
in
push
loop
sbb
cmp
aas
xchg
and
addr16
jl
movsb
cltd
ds
aaa
jns
cmpsb
stc
daa
push
xor
mov
ficoml
push
aas
mov
dec
int
test
rcrb
int
or
push
rorb
push
xchg
xor
loopne
cmp
aam
push
cs
inc
les
in
arpl
xlat
sbb
mov
pause
push
cli
out
test
call
bound
call
cmp
test
sti
or
movsb
sbb
cli
xchg
stos
adc
popf
hlt
dec
in
xchg
mov
push
adcl
sub
rcrl
jge
inc
dec
jmp
cmp
fdivl
xor
pop
or
nop
jb
mov
test
lds
xchg
nop
das
ret
mov
int
jo
repnz
pushf
stc
adc
push
shrl
andb
cmp
push
js
lds
dec
sbb
and
popa
mov
stos
lcall
pop
mov
xor
inc
xor
dec
push
ja
cmp
outsl
nop
add
mov
loopne
int
jbe
in
shl
jle
pushf
mov
inc
xor
test
or
pop
imul
mov
je
cld
push
push
cs
shrl
js
xchg
in
adc
ret
mov
jl
and
aaa
xor
inc
setae
push
pop
mov
pop
fwait
dec
pop
adc
fstpt
hlt
into
stc
clc
ret
xchg
mov
push
add
scas
popf
push
pop
xchg
dec
mov
adc
mov
jge
dec
adcl
imul
sarb
add
shl
sbb
xlat
out
sub
popa
dec
push
or
jecxz
std
and
fistpll
mov
jno
push
clc
jae
punpckldq
mov
lods
push
xlat
sub
sub
push
clc
add
push
lock
xchg
and
jno
sub
push
dec
lret
loope
push
push
mov
xor
jo
and
push
cwtl
js
sbb
sbb
add
decl
enter
mov
shrb
push
mov
ffreep
icebp
in
jno
add
stos
ss
jns
push
jns
std
mov
mov
stc
pusha
inc
adc
sub
xchg
rcrl
jp
aaa
pop
add
std
mov
push
dec
cli
lds
nop
sub
jle
pop
iret
sub
fdivp
pushl
jecxz
enter
mov
lcall
push
jno
cmp
adc
imul
cmp
push
ret
sub
xor
mov
aam
jmp
cli
cmpsb
jge
bound
test
push
mov
pop
sbb
push
les
test
daa
pop
cmc
clc
lds
jge
pop
mov
mov
push
ds
lret
adc
pushf
aaa
inc
push
xchg
mov
sub
fdivrl
push
pop
cmpsb
ljmp
push
aaa
andl
inc
int
and
mov
dec
sbb
pop
push
call
or
xlat
movsl
cltd
lret
fs
popf
pushf
mov
and
lods
popf
bnd
mov
insb
cmp
test
stc
inc
outsb
xchg
mov
dec
inc
and
sahf
jecxz
adc
out
fistpll
xor
inc
shrb
xchg
jne
or
or
xor
insl
test
clc
out
aad
addr16
or
sti
sbb
call
into
pop
lahf
mov
jbe
pop
xor
and
pop
sub
mov
inc
gs
sub
sub
and
and
inc
imul
mov
adc
mov
jg
sub
fwait
push
pop
jns
mov
xor
pop
inc
clc
ficomps
fimuls
push
pop
mov
stos
cmpsl
or
and
ds
inc
inc
cld
cmpsb
rorl
pop
xchg
shll
sti
mov
jne
push
dec
int
mulb
cmp
lret
adc
dec
or
mov
xchg
sahf
cmpsl
jle
inc
xchg
fistpl
imul
mov
scas
enter
xchg
outsl
movsl
mov
mov
ljmp
dec
mov
mov
jmp
mov
into
add
mov
aam
shlb
inc
scas
pop
addr16
dec
lea
into
testb
cmpsl
jns
or
cmp
xchg
jns
lret
mov
ret
faddl
add
cld
mov
jmpw
or
push
fwait
mov
cmp
das
shlb
inc
inc
mov
cli
or
xor
dec
fsubrs
movsb
int
cmp
xchg
fnsave
repz
sub
int3
jecxz
lods
shrb
leave
test
ss
cmp
push
scas
popw
and
iret
into
xlat
and
push
mov
fistps
sub
pop
jmp
das
int
fisttps
lret
mov
mov
pusha
fisttps
cmpsb
pop
mov
into
iret
or
push
push
xchg
dec
loop
jno
leave
scas
or
mov
xor
data16
fisubs
and
and
fildl
and
mov
and
push
test
cmp
jmp
popa
sti
push
ficompl
js
iret
push
adc
decl
dec
fildl
ljmp
xlat
cmp
nop
leave
cld
arpl
fmul
mov
int3
out
jnp
inc
jmp
mov
in
outsl
jae
xor
jp
cmp
lock
lea
mov
dec
fsubrl
aaa
sub
cmp
js
decl
mov
xchg
std
inc
fwait
inc
xor
pop
clc
scas
pop
and
cltd
lcall
gs
addr16
mov
lods
iret
add
fiaddl
arpl
push
xchg
popf
mov
mov
sbb
outsb
pop
les
pop
icebp
dec
mov
mov
mov
pop
shrl
mov
inc
inc
cmp
call
faddl
cli
lahf
add
out
repz
cmp
pop
mov
aam
adc
xor
mov
cli
xchg
dec
jg
sub
dec
xchg
stos
outsl
mov
lret
shll
gs
std
sahf
into
lock
lds
sub
xchg
inc
lds
pushf
icebp
movsb
ret
fwait
ljmp
xchg
mov
out
cs
dec
push
das
or
pushf
xor
lcall
adc
mov
jmp
push
mov
mov
idivl
xor
fsub
arpl
cmp
inc
push
jp
adc
push
sbb
ja
add
nop
in
sbb
xchg
mov
xchg
mov
mov
cmc
cmovp
notl
pop
sbb
test
incl
xchg
or
inc
mov
push
rclb
in
mov
lods
and
mov
mov
lahf
push
rclb
scas
pop
sbb
bound
pop
lods
lock
push
pop
roll
and
gs
inc
fdivs
icebp
and
pop
sbb
mov
xchg
jg
jmp
adc
push
int3
sub
sbb
pop
pushf
mov
sbb
mov
imul
dec
lcall
addb
outsl
cmp
fidivs
mov
dec
imul
shlb
pop
popf
cltd
fdivl
mov
lods
push
sub
mov
hlt
es
dec
inc
mov
sub
xor
mov
mov
pop
hlt
sbb
leave
out
add
xorl
ret
mov
push
shlb
pop
loop
or
xchg
addr16
pop
out
outsl
cwtl
fwait
iret
push
pmaxsw
out
mov
add
lods
inc
jbe
xchg
push
out
ret
and
into
negb
in
dec
mov
into
cmp
cld
mov
lret
fwait
cmp
int
outsb
mov
and
jmp
mov
jg
mov
out
cmp
mov
pushf
mov
pop
and
cmpsb
scas
cmp
test
test
daa
inc
pop
xchg
inc
loop
addr16
mov
popa
in
cmp
xchg
adc
adcl
in
iret
sahf
xchg
mov
cmp
sbb
add
adc
repnz
in
movsl
fwait
lods
push
sbb
aad
xchg
ja
lods
xor
cltd
js
mov
ja,pt
xchg
stos
fs
pop
icebp
mov
pop
cmc
cmp
or
pop
sbb
adc
arpl
xor
xchg
ret
push
dec
mov
daa
outsb
loopne
pop
lods
jae
data16
lret
jecxz
cmp
loopne
adc
lds
mov
push
scas
divl
fstpt
aas
loope
xchg
psllw
stc
idiv
mov
cmc
loope
icebp
or
lds
repnz
fsub
jle
xor
adc
pusha
lds
flds
fldt
mov
ja
jo
cmp
in
adc
inc
cmp
dec
or
ret
and
addr16
lds
imul
insb
dec
push
sbb
push
in
es
pop
int3
push
xchg
shrl
enter
imul
repz
push
mov
jge
jge
pop
inc
int3
sbb
call
pop
inc
xor
idiv
dec
jmp
scas
dec
sub
dec
call
push
aaa
adc
push
jno
lahf
scas
pushf
xlat
cld
sarl
aam
rolb
xchg
mov
mov
insl
push
js
ficoms
les
mov
push
ror
or
mov
aad
inc
leave
mov
ret
push
mov
rcr
lret
je
ret
aaa
sub
outsb
mov
dec
push
cmp
mov
and
movsb
clc
fiadds
or
cltd
push
pop
sarl
jecxz
sub
adc
mov
adc
jg
jmp
push
outsb
dec
dec
xorl
sub
cltd
dec
add
movsb
ret
mov
lock
lret
add
mov
pop
test
xchg
sbb
outsb
iret
xchg
push
cmp
dec
loope
dec
xchg
stos
cwtl
cmp
dec
lock
adc
cs
das
leave
in
cli
lret
enter
adc
out
inc
xchg
stos
jmp
dec
movsl
fwait
shrl
bound
and
loop
xor
mov
mulb
push
pop
loopne
xchg
xchg
pinsrw
or
rol
mov
scas
out
or
cmp
mov
rorl
mov
or
push
fs
aad
fs
sti
sbb
sub
adc
xor
stos
jns
cmp
inc
cld
test
jp
outsl
dec
add
imul
outsb
jne
lahf
or
jmp
push
mov
push
mov
or
mov
push
sbb
idivb
jmp
iret
add
cmc
rsm
xchg
jmp
add
xchg
popf
aam
sti
inc
cli
cltd
adc
xchg
jnp
pusha
sub
loopne
inc
mov
jnp
das
push
and
mov
and
add
leave
mov
fistpl
cmp
icebp
fs
loop
bound
dec
aam
sahf
jge
xchg
orl
je
int3
and
add
sub
jmp
sti
mulb
cs
push
sbb
loopne
shrb
pop
push
fidivs
sub
cwtl
sbb
in
xor
shrb
jae
test
imul
dec
push
or
scas
insl
dec
inc
mov
fmull
loop
sti
iret
and
sub
data16
gs
jl
mov
fiadds
mov
lods
loop
mov
outsb
jp
cmp
rclb
insl
scas
push
fists
adc
mov
fucomip
out
scas
cwtl
addr16
xchg
and
or
sbb
sub
js
mov
inc
pop
fwait
or
imulb
pop
ret
dec
stos
jge
in
daa
pop
jle
jae
add
mov
add
es
loopne
inc
ljmp
mov
add
dec
add
or
pop
adc
in
iret
add
or
out
ficompl
in
call
cmp
scas
icebp
ss
dec
dec
mov
push
pop
imul
xor
clc
test
push
push
inc
lret
cltd
in
ficoml
testl
mov
int
movsb
add
sbb
ficompl
push
cld
xchg
int
cs
movsb
fisubl
lods
nop
js
inc
sahf
enter
pop
inc
das
mov
outsl
addr16
rclb
call
lret
pushf
and
sahf
push
test
in
sbb
test
push
repnz
mov
dec
sbb
cmpsb
dec
sub
mov
jge
sub
mov
outsl
ja
inc
stos
adc
adc
loope
mov
inc
std
xor
add
add
into
stos
les
fdiv
mov
mov
sahf
and
sbb
mov
mov
ss
lret
inc
add
dec
hlt
into
mov
fists
jb
addr16
cwtl
and
les
mov
aam
jns
nop
stc
insl
mov
popf
les
push
push
inc
push
ret
inc
shr
and
test
mov
fnstenv
ljmp
cmpsb
or
sub
inc
sar
xchg
arpl
test
cli
or
cmpl
push
test
xlat
into
add
pop
sub
fsubrs
fsubs
dec
out
or
or
clc
ljmp
test
js
mov
in
mov
mov
sub
out
jns
jns
sub
or
inc
shr
sub
cltd
ud1
sarb
scas
sar
pushf
cmp
arpl
movsb
fisubrs
sbb
xlat
mov
sub
mov
sub
push
mov
jns
repnz
sub
dec
inc
mov
mov
mov
insl
mov
jecxz
jne
adc
mov
jg
mov
mov
dec
dec
or
inc
lock
arpl
inc
or
lea
and
inc
pop
lcall
out
pop
out
popf
in
cmp
pop
mov
adc
inc
ja
shl
popf
ss
fistpll
test
fldenv
cmp
jp
jle
outsb
and
cmp
cmpsl
lods
inc
fbstp
xor
or
dec
or
aaa
lcall
xchg
in
jle
cmp
or
scas
xlat
ja
add
jl
xor
cmp
aam
lret
or
repz
xchg
movsb
mov
cmpsb
inc
andb
popl
xchg
xor
xor
notl
in
and
js
arpl
add
cmpxchg
jne
adc
jp
push
mov
ljmp
xor
inc
cs
pop
xor
xchg
shlb
and
xchg
lret
call
jge
loop
jne
mov
bound
xor
xor
push
add
pusha
jnp
leave
adc
dec
inc
leave
aas
sbb
into
stos
cltd
or
push
lahf
add
sbbl
push
aas
movsb
mov
jecxz
inc
mov
cltd
ret
sub
data16
mov
inc
fnstcw
sub
das
sub
cli
cmpsb
sbb
xchg
subb
mov
push
imul
aam
cmc
mov
add
enter
test
add
test
jae
dec
pop
popa
out
in
or
test
pop
inc
imul
test
add
sub
sahf
lods
addr16
test
mov
sbb
cmp
xchg
xlat
push
add
push
cwtl
push
xor
subb
cmpsl
stos
test
xor
dec
mov
inc
ret
loop
mov
loope
push
scas
or
movsl
adc
pop
push
jmp
out
jmp
fdivs
lcall
inc
pop
inc
sbb
clc
xor
pushf
add
bound
insb
das
test
cmpsl
loope
sbb
je
shl
adc
aam
add
ret
addl
push
adc
adc
jge
cbtw
aaa
fxch
push
adc
sbb
mov
enter
pop
sub
and
lret
mov
orb
pop
ret
stos
push
and
test
mov
dec
mov
inc
push
push
int
xchg
jb
xchg
mov
jmp
mov
and
jecxz
out
fsubl
fdivrl
sbb
adc
and
push
ja
sub
test
fmull
je
push
pop
push
sub
sub
shrb
add
fstpl
xor
cs
in
mov
testl
sbb
in
test
lock
data16
push
cltd
inc
leave
push
adc
rclb
jne
nop
rorb
enter
dec
test
scas
ficomps
xor
add
adc
mov
movsb
or
es
dec
sub
pop
xor
fsts
xor
out
push
dec
cltd
test
add
insl
and
fucom
adcl
cmp
std
xor
lret
shlb
fnsave
pushf
cmp
das
movsb
decb
sbb
mov
in
ds
shrl
xor
cwtl
testb
sarl
leave
hlt
or
cmp
jmp
sub
push
mov
pusha
test
call
pop
imul
and
out
call
daa
popa
push
ret
or
pushf
clc
inc
fdivrl
dec
add
cltd
enter
mov
push
cmp
loop
loope
leave
sbb
jno
push
movb
and
jp
ret
and
les
xchg
fiaddl
in
sti
or
jecxz
mov
mov
out
repz
jp
mov
fistps
test
mov
dec
pop
inc
fldenv
pop
movsb
sbb
jne
aam
cmp
scas
dec
sti
repz
fs
sahf
xchg
cli
pushf
mov
ret
into
sbb
inc
je
insb
adc
add
mov
lret
lcall
xchg
xchg
es
jae
fwait
mov
aaa
xor
lahf
jmp
cltd
lods
idivl
ror
sub
or
and
rcrb
dec
sbb
add
adc
mov
aam
repnz
loopne
lcall
jns
sub
movsl
xor
add
fildl
enter
mov
dec
pop
cltd
pop
mov
cmp
adc
add
xchg
outsl
inc
mov
push
mov
andl
mov
ds
stc
inc
xor
sub
adc
push
fimuls
stos
mov
clc
scas
fdivrs
cld
js
and
shlb
popa
mov
and
inc
add
xor
imul
in
jno
inc
popa
add
xor
jbe
fcoms
scas
rcll
sub
sub
ret
test
pop
sbb
lret
jmp
cmp
xchg
cmp
or
insl
test
mov
and
inc
mov
or
imull
push
int3
add
movsl
divl
inc
dec
push
mov
jae
pop
xor
sbb
jecxz
cwtl
fnstsw
xchg
jp
xor
fs
mov
xor
pop
sub
popf
mov
mov
sbbl
inc
xchg
daa
nop
imulb
push
jmp
dec
pop
out
fcomip
loope
sub
adc
or
mov
mov
push
push
jb
test
pop
sub
xor
xchg
inc
int3
lcall
repnz
fs
xchg
pushw
pop
xor
dec
mov
cmp
lds
movsl
sbb
pop
ja
mov
adc
xchg
push
mov
insb
dec
pop
popa
imul
push
cmpsl
scas
add
test
enter
mov
or
in
clc
rorb
aam
push
in
stos
jne
fs
sbb
and
mov
bound
dec
fiaddl
fistpll
mulb
out
sahf
clc
dec
mov
mov
xchg
mov
std
adc
push
jl
aas
ret
sbb
mov
faddl
gs
sahf
pop
or
mov
das
pop
add
push
push
inc
xchg
ret
outsl
or
es
push
jl
pop
cltd
xor
mov
add
mov
fs
xor
in
scas
or
loopne
xchg
int
out
jne
pop
mov
cvttps2pi
jg
stos
cwtl
sub
inc
jl
das
and
and
sbb
loop
movsb
ljmp
jge
jl
cltd
imul
mov
xor
dec
jns
xor
xchg
jecxz
repz
addr16
push
rcll
sarb
lea
mov
rcl
out
fistps
mov
cli
fwait
sub
ss
lock
movsb
nop
roll
jp
setl
mov
and
xchg
xlat
mov
xchg
hlt
fs
push
test
subb
fmuls
inc
jne
push
aaa
rol
cmp
sub
xor
and
pusha
out
sub
std
push
and
ret
fcmovb
jne
sti
pop
cwtl
inc
xchg
call
roll
add
or
xor
lds
sub
gs
and
daa
pop
pop
jno
pop
jo
fmul
mov
mov
in
aam
inc
mov
dec
mov
push
mov
cmp
jp
js
inc
aam
call
mov
int3
daa
insl
popw
or
mov
shl
aaa
fcmovnb
sub
call
shrb
into
mov
aam
pusha
mov
sti
sahf
gs
lods
xchg
mov
dec
xchg
mov
aam
pop
cmp
mov
sub
jp
std
out
mov
inc
ret
cmp
call
test
scas
and
adc
mov
stos
call
stc
push
inc
loopne
mov
adc
in
sarl
pop
addr16
pop
mov
pop
jg
jo
push
or
div
xlat
fcomi
jmp
rorb
push
mul
sub
add
adc
add
das
test
or
aaa
mov
fs
hlt
xchg
add
pop
cmp
add
jne
sahf
add
pop
sahf
scas
pop
mov
shll
std
mov
jno
xchg
or
imul
push
mov
xorl
ljmp
mov
inc
jno
mov
xor
popw
out
pop
ljmp
scas
adc
pop
sbb
inc
test
cld
mov
lret
adc
jle
repnz
or
push
cli
xor
movsb
test
mov
mov
mov
popa
xchg
popf
inc
jecxz
int
and
popf
xor
adc
je
add
daa
cltd
scas
sbb
imul
sub
inc
lods
cmpsl
xor
mov
jle
into
aas
popf
ret
inc
push
mov
pop
jb
add
xchg
and
in
jmp
jns
js
movl
or
nop
or
xor
fwait
addr16
dec
mov
jmp
aad
out
lods
dec
loope
data16
mov
sub
mov
lock
xor
ds
rep
pop
mov
mov
xchg
ja
fwait
mov
dec
xchg
xchg
pop
sti
fcomps
mov
jecxz
popf
stos
add
xor
outsl
xchg
adc
rcl
inc
sub
inc
test
mov
stos
pop
dec
in
fisubrl
rol
call
mov
pop
rcrb
lcall
cmp
adcl
out
jp
rorb
inc
mov
and
test
imul
cmp
mov
jg
lock
in
xchg
add
push
mov
sbbb
andl
xchg
fcmovnu
sarl
mov
push
in
mov
adc
leave
loopne
bswap
fsubr
mov
mov
pop
jmp
insl
stos
sbb
jmp
test
pop
push
push
xchg
out
mov
inc
jnp
cltd
and
mov
push
pop
or
leave
std
lods
mov
dec
std
ljmp
push
push
clc
jg
ret
lahf
inc
cwtl
xchg
loopne
ret
int
nop
sbb
fnstsw
pushf
iret
lds
fucom
jns
ret
jnp
inc
inc
mov
mov
push
sbbb
pop
cmp
divl
iret
mov
mov
and
mov
imul
pop
mov
or
or
push
mov
or
and
call
in
movsl
pop
sbb
push
in
mov
insl
std
flds
xchg
mov
test
leave
lret
push
pop
or
xor
pop
lods
xor
dec
jp
sbb
int3
hlt
or
xor
adc
or
orl
sbb
scas
int
out
mov
jns
mov
test
enter
jne
loop
jbe
pop
and
mov
push
jecxz
sub
out
xchg
inc
loop
inc
pop
ficoml
mov
push
cmp
xor
add
sub
inc
int3
hlt
les
fwait
lds
out
sub
xor
les
mov
pop
jne
push
mov
adc
cmpsb
mov
xchg
sbb
jecxz
enter
jns
dec
pop
into
jb
or
dec
push
and
dec
inc
xchg
inc
cld
sti
jmp
mov
cmpsb
aam
mov
pop
stos
test
enter
jns
jmp
jle
lcall
subb
adc
bound
cmp
data16
cmp
loop
add
pop
mov
pop
mov
xchg
fdivrp
sbb
mov
add
lods
or
cmp
lahf
adc
cmp
push
inc
push
cmc
push
dec
xchg
aam
mov
fwait
push
shll
std
or
fwait
push
into
and
mov
in
data16
pop
cmp
sbbb
xor
add
jae
mov
sarb
xchg
xor
jbe
out
mov
push
push
mov
decl
xchg
in
test
int
test
out
into
imul
das
in
nop
mov
test
cmp
inc
cmp
jne
cld
jg
sub
mov
ss
cmp
ficomps
cmp
outsl
add
jnp
cmp
outsl
andl
aad
popa
push
xor
sbb
adc
leave
and
mov
ds
inc
pop
mov
call
scas
cmp
and
and
outsl
lds
sbb
insb
pusha
outsl
loope
gs
mov
idiv
stc
repz
fxrstor
xchg
shll
dec
stos
stos
xlat
testl
mov
mov
out
scas
jne
add
mov
daa
loop
mov
add
leave
ja
icebp
xor
inc
insb
out
add
inc
xchg
into
add
pop
mov
pop
test
xchg
xchg
pop
jo
repnz
cmp
sbb
addr16
in
sbb
sub
jmp
fisttpl
mov
data16
push
movsl
sbb
lret
push
add
dec
js
mov
xorb
pop
into
aad
push
popf
and
mulb
test
das
fcmovnbe
pop
and
dec
push
pop
pop
push
mov
js
adc
repz
pop
pop
hlt
data16
bound
or
mov
mov
out
stos
repnz
push
jmp
jecxz
cli
mov
push
pop
inc
in
mov
aas
xor
mov
mov
push
sbbl
pop
sbb
out
and
out
mov
addb
mov
mov
sbb
in
push
scas
shll
sbb
mov
stos
or
ret
mov
xchg
scas
add
cs
gs
stc
inc
pop
lret
inc
mov
mov
fistl
xor
cli
cmp
sub
adc
pop
jle
int
fstpt
pusha
sub
cmp
lahf
push
sbb
xchg
xchg
sbb
je
stos
addr16
sbb
jmp
mov
mov
xchg
outsb
cs
ja
mov
loop
daa
fisubs
out
mov
add
es
pop
and
mov
sub
mov
les
push
dec
jmp
jbe
ret
popf
scas
xor
mov
arpl
or
test
and
and
mov
sbb
pop
or
cli
sub
xchg
fisubs
jmp
inc
mov
mov
xchg
cmp
pop
jmp
xchg
pusha
pusha
ror
cmp
and
sub
lods
sub
xor
sbb
scas
mov
imul
insb
test
scas
movlhps
and
shrl
xlat
dec
test
add
add
ret
cmpsb
mov
mov
nop
pushf
or
divb
pop
shlb
adc
and
repz
xlat
mov
cmp
cmc
or
lret
stc
push
dec
mov
sub
cmp
push
push
mov
dec
mov
aad
sbb
and
xchg
fnstenv
pop
or
xchg
inc
lds
xor
add
sbb
or
fiadds
scas
fs
jae
jp
out
hlt
push
or
pop
mov
jmp
xchg
xor
xlat
mov
or
movsb
aam
mov
mov
inc
iret
or
lcall
and
stos
out
test
and
push
jmp
mov
call
aam
ljmp
pop
adc
aam
push
mov
inc
into
sbb
jge
xchg
mov
dec
js
inc
xor
inc
sub
lea
loope
sub
jg
adc
lret
jecxz
push
and
out
cmp
rclb
pop
sarb
arpl
mov
mov
ss
out
jmp
insb
mov
jb
out
dec
movsl
jl
push
or
inc
sbbb
aas
push
and
dec
sub
ja
mov
shll
outsl
jmp
and
lret
xor
push
inc
sub
fmulp
in
mov
dec
dec
lcall
imul
xor
mov
xor
scas
test
out
cmp
mov
icebp
mov
jae
push
jp
in
call
ljmp
push
lret
mov
push
leave
mov
std
mov
inc
fildl
sar
das
clc
inc
adc
negb
enter
adc
and
jecxz
or
ljmp
xor
dec
cmp
lret
jg
fidivrs
or
jge
addl
outsl
cli
add
fmuls
adc
les
push
add
ja
or
sub
out
xor
sbb
add
xchg
sahf
pop
push
or
mov
xor
mov
insl
adc
push
subl
xor
push
into
xor
adc
push
inc
mov
rcll
pop
push
push
jo
lods
mov
and
test
mov
and
fldenv
mov
aaa
lods
cmp
ficoml
shrb
sbb
mov
ljmp
fiaddl
dec
shll
dec
jno
mov
xchg
loopne
enter
fcomps
ja
jnp
daa
mov
es
hlt
push
mov
test
fstps
cmpsl
add
pop
adc
adc
mov
jae
mov
mov
push
out
xchg
dec
scas
or
ficomps
inc
leave
jno
jb
xchg
jnp
xchg
jb
or
stc
jnp
popa
pop
add
push
lret
pushf
lret
imul
ret
xor
mov
out
popa
sahf
loop
pop
xchg
ret
xchg
mov
lcall
pcmpeqd
xor
xchg
test
xlat
push
push
pop
cmpsl
xor
push
xchg
sub
inc
stc
out
mov
pop
addr16
lcall
inc
sbb
loopne
jne
jmp
loopne
cmpsl
into
xlat
into
sbb
and
and
sbb
and
adc
xor
out
js
notl
sahf
add
adc
xchg
xor
das
mov
scas
lods
cmpsl
mov
repnz
jp
cs
pusha
push
xor
sahf
lds
push
int3
or
sbb
adc
daa
inc
mov
inc
mov
pop
lea
adc
xchg
and
xchg
cmp
or
push
adc
aad
popa
sbb
repnz
imul
jecxz
cld
jbe
xor
push
pop
movsl
lcall
std
insb
nop
xor
mov
lret
jecxz
push
jb
movsb
push
rcl
mov
arpl
sbb
in
xor
insb
ja
sub
aam
popa
in
dec
mov
out
adc
outsl
xchg
lock
xchg
and
jle
rorl
cmp
mov
add
imul
enter
mov
cmp
push
mov
ret
arpl
and
movsl
fdivl
pop
lock
push
dec
inc
cmp
leave
pop
adc
pop
lock
ret
clc
mov
repnz
jmp
inc
shl
mov
or
arpl
rcr
adc
loopne
or
xchg
sub
movsb
push
faddl
and
testl
sahf
std
xor
lods
cli
add
popa
cli
je
jo
xorl
aaa
in
sub
pop
aam
lahf
mov
es
pop
shll
mov
jp
inc
movntps
mov
jno
mov
stos
pop
or
in
cmp
movsl
jecxz
inc
leave
in
sbb
lret
aam
xor
sub
lods
and
and
scas
pop
ret
fdecstp
mov
out
adc
jl
scas
roll
ret
and
data16
call
orb
js
sub
dec
sub
inc
repz
or
sbb
mov
scas
add
faddl
jl
cmp
out
mov
cmp
pop
xlat
pop
loope
xor
cmc
mov
shl
movups
test
sub
mov
in
jns
and
push
shrl
mov
cmp
mov
push
imul
or
inc
sbb
mov
xor
fwait
cld
fwait
cs
scas
jl
ljmp
mov
pop
aad
loopne
push
lea
gs
daa
mov
or
pop
in
sbb
cwtl
das
jecxz
mov
ficomps
leave
push
andb
fidivl
dec
subl
xor
adc
jmp
aam
and
push
and
xor
test
insl
stc
jg
stos
ror
push
xchg
rolb
popf
lea
les
mov
idivl
out
dec
mov
jbe
mov
inc
hlt
fbstp
mov
add
mov
and
xchg
aad
mov
inc
pop
dec
cltd
sub
mov
enter
jmp
lds
out
and
movsl
xor
fsubs
in
pop
inc
cmp
in
or
movsb
xor
shr
and
mov
outsb
add
aaa
inc
in
cwtl
popa
je
pop
hlt
fisttpll
add
or
jne
stc
inc
out
dec
add
pop
in
jo
jle
outsb
sbb
and
outsb
test
or
rclb
mov
xor
jmp
insb
xchg
jp
ja
cmpsb
jp
out
push
ds
rorl
sub
fwait
sbbl
add
add
jge
aad
jp
xchg
cwtl
lcall
cli
loope
sbb
jle
lods
sub
fimull
jae
cmpsb
fsubrl
push
cwtl
adc
fldt
int
xchg
cmc
lea
push
jbe
xor
rep
cmp
int3
aas
test
aas
lods
movsl
mov
xor
xchg
ficoms
shlb
adc
sbb
leave
pop
pop
bound
outsl
pop
aam
inc
jge
dec
jae
movsw
mov
and
loop
ret
insl
push
aad
stos
jge
mov
testl
xor
lret
pop
jb
loop
sub
push
cmp
test
sbb
loope,pt
dec
mov
scas
shrb
xor
cltd
xchg
loope
add
or
rorl
sub
hlt
cli
scas
cmp
rolb
xchg
cmc
js
inc
jb
dec
outsl
fsub
pop
fimuls
jbe
xchg
add
jmp
imul
nop
lcall
add
bnd
popa
inc
rclb
inc
in
shrb
pop
ror
pop
sub
pop
icebp
dec
cmp
xchg
jno
mov
dec
and
and
cmp
out
dec
sub
leave
xchg
push
or
jp
ljmp
mov
mov
scas
mov
add
mov
push
jmp
ret
pusha
inc
repz
leave
adc
icebp
push
insb
shrl
xchg
sub
daa
jecxz
lds
cs
in
xchg
jecxz
popa
mov
sbb
loopne
jp
scas
roll
push
feni(8087
mov
jle
fildl
mov
fsts
dec
xchg
add
xor
mov
add
mov
or
js
mov
add
lret
sahf
in
sahf
arpl
sarb
push
mov
sti
push
jmp
jo
dec
push
das
lret
push
xor
into
adc
jmp
into
nop
xor
sbb
or
lods
call
out
lock
out
lock
orb
and
push
cmp
xchg
inc
cld
jo
icebp
adc
iret
jno
cmp
bound
cmpsl
cmp
pop
lock
sbbb
fidivl
fildl
mov
adc
push
and
out
push
xchg
aad
cmp
enter
push
stos
or
cmpsl
and
xor
xchg
sbb
cmp
add
data16
leave
lea
fs
cmpsb
rcrb
xlat
fldl
cld
or
xor
mov
fs
dec
cmp
xchg
xchg
sti
adc
mov
pmaxsw
andl
cmpsb
xchg
outsb
mov
stos
cmp
mov
icebp
or
xchg
or
js
jo
xchg
subb
mov
push
push
pop
popf
push
out
stos
cmp
add
cltd
adc
rolb
xor
adcb
fstps
call
mov
insl
xor
xchg
popa
xor
mov
pop
std
movhps
pop
add
mov
adc
add
mov
push
inc
and
lret
mov
xor
movsb
test
mov
push
pop
mov
xchg
imul
sub
push
clc
ja
xchg
jge
movsb
jle
mov
dec
cmp
fnstcw
inc
out
mov
scas
adc
iret
lods
iret
das
dec
cmp
lret
les
das
push
push
mov
push
aad
out
lock
inc
mov
cmc
in
insl
lret
jle
insb
jae
mov
cmp
sub
sbb
lock
pop
rcrb
outsl
push
add
xor
inc
fldl
sbb
pop
sbb
adc
pop
out
and
xor
or
ficoml
mov
xchg
leave
pop
sbb
adc
jle
push
aam
dec
pop
pop
inc
xchg
imul
or
cmpsb
xorl
shr
sbb
ror
mov
cmc
or
sbb
lods
sub
xor
in
test
jl
xor
lret
mov
pushl
les
dec
mov
loope
ljmp
push
cmpsl
push
shl
pop
rcrb
jle
mov
hlt
pushf
and
scas
ljmp
sti
fistpl
xchg
mov
aam
fcompl
nop
push
xchg
jae
sbb
out
popa
lret
mov
mov
add
ja
mov
jns
cs
mov
pop
insb
mov
jecxz
lods
lods
jge
popf
jmp
mov
imul
scas
sub
rcll
repz
test
ror
fistps
lods
nop
stc
adc
hlt
and
lds
and
setp
cwtl
sub
and
pop
fldt
pusha
aaa
push
mov
inc
stc
int
mov
nop
fwait
pop
repz
cmp
pusha
arpl
and
hlt
and
dec
insl
inc
xor
ss
cmpsl
sbbl
cs
lds
push
ror
aaa
out
scas
ret
xchg
imulb
or
out
mov
stos
mov
push
adc
push
sub
mov
sbb
inc
pop
sbb
or
outsl
or
test
mov
mov
into
popa
aas
mov
gs
inc
stos
sub
dec
sbbb
and
out
jge
rcl
repz
popa
cmpsb
jb
pushf
fisubl
test
iret
or
aas
push
arpl
lods
insl
xchg
cmp
addb
mov
hlt
mov
rclb
xor
push
sti
outsb
mov
ret
es
out
mov
out
pop
cmp
jmp
sub
xchg
mov
les
adc
xor
cmp
dec
or
out
xchg
and
xor
add
jp
insb
loope
sub
cmpsb
scas
inc
popf
jg
add
jno
xchg
sbb
and
jo
xchg
and
add
cmp
sbbb
mov
rol
jbe
xor
pop
aas
sti
repnz
mov
sub
shl
inc
sbb
jb
scas
xchg
mov
nop
js
test
mov
les
fs
cmp
inc
ljmp
test
jecxz
out
cmpsb
inc
addr16
cmp
mov
sarb
and
fstpt
loope
cmpsl
push
dec
lea
rorb
xchg
es
adc
mov
aam
jns
sbb
mov
xor
gs
aas
jae
aam
xlat
xor
lods
aaa
xchg
and
mov
dec
or
adc
movsb
call
push
mov
insl
or
mov
sbb
sbb
jmp
stos
mov
inc
push
imul
push
inc
ficoml
lcall
popa
rclb
dec
push
ss
flds
sub
stos
xor
fisttpl
mov
fcoml
cmpsl
addr16
hlt
nop
inc
subb
es
cwtl
push
pop
outsb
mov
lahf
xlat
ret
jnp
les
push
rolb
lea
sub
push
div
icebp
xchg
mov
cmp
movsb
adc
sti
mov
jecxz
xor
adc
push
lds
clc
movsl
imul
cmp
inc
add
into
sub
push
lods
lods
inc
fstl
jns
mov
pop
aad
mov
pop
sub
dec
adc
arpl
push
pop
lret
jne
shll
sbb
rorb
push
addr16
jb
mov
lea
scas
mov
mov
mov
in
pop
jle
test
xor
dec
pushf
lahf
fwait
sub
fwait
xor
or
dec
sbb
repz
push
aaa
int3
push
cmp
orl
and
jl
lods
fcmovb
dec
loopne
repnz
sbb
inc
pushw
pushf
insl
fstl
mov
daa
ja
pop
ds
jno
bound
cmp
mov
lods
loop
mov
cmp
divb
mov
xlat
jg
rclb
push
inc
lahf
push
push
clc
xchg
rolb
pop
mov
mov
or
add
xor
push
ljmp
inc
scas
or
test
mov
xor
jmp
les
adc
imul
or
mov
dec
movsl
aam
rcl
mov
test
xchg
faddl
inc
pop
push
mov
nop
xor
jno
sub
jge
sub
mov
and
and
mov
jb
lahf
xchg
dec
pop
cmpsl
add
stos
mov
jno
push
push
push
inc
pusha
setno
sbb
jmp
in
testl
js
orl
inc
xor
fcoms
ja
fs
rorb
inc
mov
insb
sbb
aas
cli
mov
pusha
incb
or
jle
or
in
dec
movsb
pop
data16
mov
pop
clc
xchg
jle
imull
mov
push
dec
enter
es
ljmp
mov
adc
addr16
cld
inc
sti
adc
sarb
neg
data16
jnp
into
pop
fcompl
popf
xor
cmp
int
lods
in
push
inc
test
adc
xchg
lods
fs
xchg
fstpt
inc
pop
insl
outsl
fsubrl
jnp
sarl
push
into
mov
inc
pusha
xchg
add
fisttps
adc
out
or
lret
add
ljmp
xchg
add
out
out
cli
fistl
mov
adc
dec
lea
inc
mov
js
jbe
mov
aas
repz
test
insl
or
mov
sub
push
pop
inc
int
xor
push
push
adc
arpl
pop
push
sub
into
daa
pop
xor
and
test
dec
ljmp
fldenv
dec
cld
out
mov
mov
sbb
imul
mov
fucomi
inc
das
jb
adc
imul
mov
insb
lock
movsb
mov
mov
mov
cmpsl
sub
xor
lret
jl
cmc
mov
in
out
pop
and
xor
jb
xchg
mov
fnstenv
xor
addl
shrb
add
je
jecxz
outsl
push
sarl
add
sbb
add
cmp
sti
fistpl
inc
std
cmc
sahf
ret
ficompl
in
or
movsl
push
cld
sbb
pop
call
clc
pop
push
add
jb
xor
fcompl
sbb
and
jl
sub
jmp
fs
cs
pop
mov
xor
mov
icebp
cmpsl
enter
jge
rorl
mov
cmpl
enter
ds
xor
cld
cmp
xchg
dec
and
imul
sbb
inc
or
push
mov
pop
sub
mov
xchg
fwait
inc
idiv
cli
out
pop
je
sbb
outsb
push
pop
clc
testb
mov
lcall
scas
jle
sbb
jmp
rclb
and
fcmovbe
in
je
stos
loope
jae
fildl
push
mov
rol
push
add
pop
popa
lods
aaa
test
mov
mov
repnz
push
push
push
lret
inc
lods
inc
dec
mov
fcmovne
hlt
sub
nop
inc
repz
cmpsl
push
pushl
icebp
xchg
lahf
ror
scas
lret
outsl
fsub
xchg
out
fs
mull
stc
inc
int
pop
addb
sbb
xchg
and
jp
add
hlt
fisubs
outsb
es
sbb
mov
lock
sarl
cld
push
inc
loop
test
ficompl
je
pop
shrb
cmp
es
mov
add
mov
jecxz
add
mov
into
mov
add
xchg
les
adc
movsl
cmp
gs
push
mov
outsb
mov
pop
jg
adc
mov
fimuls
mov
push
lods
jb
jbe
sar
sub
cmpsl
push
mov
xchg
imul
sbbl
push
sbb
inc
movsl
leave
rcr
cmpl
push
popf
dec
mov
jo
dec
pop
jnp
movl
jg
sbb
stc
mov
lods
sti
scas
ret
mov
popf
shrb
mov
sub
mov
sti
mov
inc
cmpsb
push
push
dec
call
rcll
sub
xchg
in
movsb
mov
cmp
xchg
shrb
push
xor
push
cmp
xchg
fnstsw
lds
xor
lret
data16
jge
adc
shll
clc
cmp
push
adc
mov
mov
jge
cmp
out
cmp
sbb
fdivrl
and
push
or
push
cwtl
lods
adc
test
bound
pop
loop
in
push
lock
jno
icebp
and
xchg
add
xor
stc
movsl
pop
push
dec
dec
loope
pop
jns
pop
insl
hlt
scas
cwtl
aam
mov
cli
push
fwait
mov
clc
sti
xlat
mov
cmp
mov
loope
dec
pop
testb
push
popf
mov
sbb
orl
seto
aas
outsl
jg
adc
mov
int
cmp
flds
pop
rep
add
jb
mov
mov
pop
push
dec
dec
stc
mov
dec
popa
sahf
inc
or
mov
sti
push
lahf
lahf
adc
nop
cmp
aaa
adcb
fistpll
mov
mov
xchg
cmp
add
std
cmpl
in
pop
into
scas
dec
test
out
iret
jecxz
sub
int
sub
loopne
in
dec
or
in
aaa
cmpl
xlat
cli
pop
xlat
adc
loop
sub
or
mov
inc
aad
imul
mov
inc
xchg
xor
fisttpll
sub
aam
lret
cld
cltd
push
daa
xor
and
xor
add
fbstp
mov
lock
mov
movsb
mov
xor
in
and
out
test
insb
xor
lea
mov
pop
sbb
adc
shlb
in
loope
mov
movsb
dec
pop
jmp
outsl
fdivs
jecxz
pop
cli
xor
inc
int3
push
add
insb
mov
push
xchg
clc
cmpsb
fwait
ljmp
out
les
dec
sub
mov
mov
dec
rolb
xchg
mov
lods
scas
sub
xchg
flds
mov
sbb
fucom
add
notb
shll
dec
add
mov
leave
or
mov
mov
incl
sti
pop
lock
mov
add
lods
scas
int
cmp
cmp
or
inc
sbb
jmp
push
mov
xchg
mov
sub
insl
inc
push
cltd
xlat
mov
mov
jno
sub
cmp
pop
lahf
lret
inc
jge
repnz
sbb
rclb
pusha
aad
imul
fldcw
xor
mov
nop
fsub
adc
inc
ds
push
mov
mov
pop
dec
adc
into
bswap
pop
icebp
sbb
sbb
movsb
xor
mov
jmp
std
mov
jns
mov
jmp
push
push
or
or
ljmp
sbb
sub
rclb
insl
outsl
shlb
clc
aad
mov
xchg
aas
push
xchg
hlt
icebp
pop
adc
mov
test
das
jnp
jl
pop
jl
mov
iret
sahf
lds
mov
mov
sub
mov
sbb
stc
mov
pushf
repnz
shlb
sahf
les
sti
mov
fnstenv
mov
push
lahf
fsubr
loop
push
sub
mov
mov
and
push
mov
lcall
sahf
cwtl
jns
jp
rcrl
fmull
movb
xchg
icebp
addr16
test
mov
aas
iret
jg
into
pop
xor
jg
sahf
xor
cmpb
xchg
mov
jp
test
mov
cld
pop
stos
xor
out
out
fwait
sub
jo
rcl
dec
test
xchg
addr16
mov
xor
ret
xchg
pop
mov
xor
int
push
imul
test
test
inc
out
icebp
divl
das
gs
rorl
jg
mov
mov
int3
cltd
aam
sti
pushf
aad
sub
inc
repnz
xchg
jg
enter
sub
adc
push
out
jae
mov
adc
movsb
cltd
sbb
lods
fcoml
xor
shlb
out
outsl
sub
repnz
cltd
sbb
mov
sbb
sbb
cmp
movsb
or
mov
fwait
ss
jmp
adc
adc
subl
or
inc
lret
pop
pop
sub
shrd
stos
jge
fstl
andl
mov
xchg
mov
pop
pop
mov
xor
mov
sub
ret
out
push
hlt
rorb
dec
repnz
dec
fstpt
lods
call
in
test
push
lock
out
ljmp
rcll
es
je
dec
jge
mov
test
or
sbb
or
test
vpmaxsw
scas
jae
mov
and
fistpll
inc
loope
cli
leave
nop
push
cld
int
cmp
mov
mov
jl
and
dec
cmpb
ret
int3
xchg
xor
in
inc
je
sbbb
sbb
clc
enter
mov
insb
lahf
push
mov
push
sahf
unpckhps
mov
push
outsb
cmp
js
lods
cmpsl
movsl
jmp
movsb
inc
pop
repz
mov
imul
add
stos
xchg
mov
insl
xor
pop
adc
scas
sub
scas
rorl
cmpsb
pop
popf
jle
pusha
xchg
arpl
inc
xor
ret
fs
lock
push
jbe
push
mov
push
sub
roll
inc
jno
mov
adc
jne
in
aad
xchg
in
xchg
push
xchg
ret
lret
cmp
or
push
dec
cs
ffree
iret
inc
or
push
mov
outsb
lods
pop
scas
cmp
outsb
repnz
loopne
cli
stc
gs
mov
sbb
add
popf
mov
and
enter
inc
cmp
fdivrs
scas
inc
ds
lds
jno
out
mov
sbb
rorl
push
mov
pop
fstpt
jle
test
xchg
cmpsb
daa
jne
int3
gs
pop
cwtl
xchg
mulps
sub
fldl
clc
mov
cmp
or
xorl
loop
sbb
scas
or
mov
or
dec
lea
mov
mov
jle
cmc
lahf
push
cmp
push
sub
xor
aaa
iret
sbb
mov
ror
popf
and
and
ja
xor
mov
push
adc
hlt
sub
les
loope
mov
sub
push
add
mov
pop
bound
or
dec
dec
xor
mov
int
pop
mov
mov
dec
cmp
aaa
mov
sub
std
adc
xchg
push
inc
ficoms
xor
pop
iret
test
add
insl
fbld
repz
xchg
shlb
xchg
ret
decl
notb
cltd
adc
jnp
mov
cmp
cmpb
add
sub
xchg
movsb
sbb
in
push
push
fnstcw
or
movsl
sbb
push
ret
add
push
jg
cmpsl
outsb
sbb
pop
faddp
and
xchg
gs
sbb
sub
cmpsb
mov
mov
mulb
scas
jae
xchg
insl
frstor
lret
fldcw
fs
mov
jmp
repnz
cmpl
daa
push
pop
push
jp
sub
sub
in
inc
rolb
sar
sbb
rcl
mov
mov
adc
daa
popf
pop
inc
fcmovb
jne
mov
fimull
mov
jmp
mov
jmp
lea
pop
push
sbb
jge
in
loop
dec
movsl
cld
jo
scas
mov
insb
das
je
pop
mov
fildl
push
mov
jl
or
fadd
stos
jmp
add
jne
addr16
jge
mov
adc
movsl
arpl
adc
cmp
xchg
push
loopne
xor
andl
sbb
addl
cmp
mov
pop
xchg
rcrb
cmp
out
push
cld
rolb
mov
inc
mov
arpl
xor
pop
clc
stos
push
pop
xlat
dec
sub
stos
jl
push
or
xor
into
loope
xchg
dec
imulb
loop
js
add
insl
jo
in
xor
and
dec
outsb
cmp
xor
shl
or
pop
jne
xchg
push
mov
cmp
jns
xor
daa
out
addb
or
negl
lock
sub
aas
mov
dec
cli
arpl
sub
push
sub
jne
mov
and
jae
jmp
ret
jge
sahf
aas
jne
push
cli
pop
filds
mov
aas
nop
mov
inc
mov
mov
mov
aad
icebp
mov
xchg
outsl
and
adc
mov
push
fiadds
and
xor
sbb
fxch
or
jns
jns
stos
or
adc
loope
adc
cmc
and
mov
xor
sub
adcb
push
cmp
xchg
sbbb
push
ror
imulb
not
push
fwait
rep
xchg
dec
repz
jl
sbb
dec
push
mov
push
gs
lret
adc
push
aad
pop
popf
roll
xchg
movsb
xchg
add
mull
loope
or
outsb
push
call
bound
incl
jne
xor
bound
cmp
sbb
cld
xor
mov
test
iret
lret
and
mov
mov
or
sbb
cmp
jecxz
xchg
loope
xor
imul
ret
notb
sbbl
or
fsubl
imul
movsl
aad
fisttps
pop
pop
cs
mov
and
jmp
outsb
xor
lret
stos
fistl
mov
rol
push
add
and
and
add
lret
xchg
add
mov
ror
ret
jno
shll
push
dec
or
fstpl
sub
aaa
pop
push
or
aas
addb
sbb
sti
dec
jno
call
insl
les
dec
sub
pop
pop
sub
push
lret
es
mov
std
mov
orb
xchg
js
cmp
cmp
and
xlat
fiadds
xlat
shlb
cwtl
xchg
hlt
mov
xor
dec
outsl
shrb
scas
mov
or
enter
sbb
pop
inc
inc
fstl
jg
mov
mov
adc
mov
xchg
adc
out
mov
scas
xorb
cmp
repz
cwtl
das
jns
fs
shlb
mov
imul
sbb
cmp
pusha
mov
dec
or
sub
in
mov
inc
dec
jge
jp
out
sbb
dec
xchg
adc
test
push
incl
adc
scas
pop
mov
scas
test
inc
push
pop
out
and
mov
push
pop
mov
dec
dec
mov
mov
aam
mov
mov
shl
mov
repnz
jbe
push
dec
jne
int3
pop
pop
or
adc
pushf
mov
ret
mov
dec
dec
in
mov
jp
sbb
test
lds
xchg
jno
roll
ret
jle
sub
arpl
andb
pop
push
dec
xchg
addb
pop
leave
and
adc
mov
out
xorl
test
dec
popa
push
jae
scas
dec
enter
test
sub
jle
scas
rclb
out
aas
pop
das
repnz
stc
push
pop
jae
sbb
fldenv
and
stos
cmp
and
ss
push
push
sub
fisubl
cmc
insb
outsb
xor
sahf
mov
enter
dec
push
inc
fidivs
lret
jne
pop
jge
pushf
int3
stos
jne
mov
xor
pusha
inc
pop
mov
js
arpl
and
cmpsl
inc
jbe
push
mov
push
cmpsl
mov
or
popf
mulb
jg
imul
out
mov
sub
in
or
aaa
pop
nop
insl
dec
jmp
cmc
push
mov
aaa
scas
leave
or
outsl
and
push
lds
jecxz
out
inc
adc
push
bound
dec
enter
mov
scas
xchg
icebp
sbb
out
jmp
jmp
test
rcrb
mov
imul
cmp
push
popa
sbb
cmpb
les
or
subb
mov
sbb
mov
pop
or
lock
jg
mov
lahf
popa
js
adc
bound
popa
dec
dec
in
push
in
push
adc
insl
in
notl
icebp
jbe
jecxz
dec
enter
fsubs
jmp
jge
mov
adc
in
add
inc
aaa
arpl
cmp
adc
lcall
stc
fidivrl
scas
xchg
aas
xchg
jmp
into
sbb
in
jmp
aas
adc
xchg
dec
or
inc
sub
ret
mov
lods
pusha
imul
pop
lret
cmpb
jge
aam
ds
push
or
scas
subl
push
sub
pop
pop
stos
jnp
lods
ret
or
loope
xor
xchg
jbe
in
bound
dec
xchg
sub
movsl
cmpsl
pop
add
insb
fiaddl
lret
loopne
ss
enter
cwtl
adc
or
lahf
jae
cmp
mov
sbb
or
scas
jae
mov
xchg
sahf
enterw
ror
inc
add
loope
lret
pop
sbb
fdivrp
rorl
call
fwait
in
int
add
arpl
push
ljmp
out
cmc
iret
pop
popf
xor
cltd
mov
jle
mov
sbb
xchg
xchg
dec
ficoml
mulb
popf
jno
mov
jle
fimuls
pusha
rcrb
imul
rcll
in
les
je
call
add
sbb
mov
jmp
inc
cmp
mov
xchg
ror
scas
stc
jp
push
inc
test
ficompl
sbb
stos
xchg
cmp
loope
mov
jnp
pushf
mov
push
mov
fsub
jbe
xorl
mov
jge
push
lock
jmp
lcall
sub
jmp
push
xchg
cmp
call
lods
cs
stos
sbb
lahf
xchg
fsubrl
or
dec
mov
jmp
scas
push
push
or
mov
jmp
movsb
mov
fstl
loope
sbb
lods
std
gs
xchg
call
or
inc
push
xlat
jb
pop
mov
dec
insb
in
call
mov
fincstp
jo
cmp
pushl
sub
jg
cmp
mov
xor
mov
mov
sbb
in
bound
pop
imul
sub
ds
loopne
mov
loopne
addl
mov
jno
inc
imull
mov
ret
clc
imul
jmp
sub
insl
hlt
in
dec
xchg
adc
push
push
jns
lret
jecxz
mov
aaa
inc
fsubrl
loopne
rcl
adc
jmp
sahf
push
sub
imul
inc
ret
aaa
adc
push
data16
adc
push
mov
nop
lret
repnz
xor
dec
mov
xchg
adc
js
cs
fnstsw
mov
xlat
jmp
subl
sbb
mov
mov
xchg
xorl
icebp
cs
sahf
sbb
lret
jmp
scas
pop
pop
iret
out
jae
adc
mov
pop
in
sub
fsubs
jo
push
add
push
pop
pop
ljmp
xchg
cmpsl
cwtl
mov
dec
addb
enter
les
pop
add
mov
mov
and
enter
pop
test
not
aad
xchg
sbb
adc
pop
dec
and
cmpsl
inc
cs
mov
push
shll
jmp
lcall
xchg
jb
push
dec
ds
sbb
sbb
sub
add
loopne
fisttpll
lret
dec
cli
loopne
int
aaa
filds
fbld
out
xor
icebp
mov
mov
out
aas
divl
scas
es
xlat
push
xor
test
xchg
icebp
or
stos
les
fcmovu
outsb
int3
cmp
pop
leave
sub
cmp
and
pushl
xchg
dec
cli
test
xchg
and
or
in
mov
pop
out
xor
clc
stos
sub
cltd
jo
in
inc
test
nop
sbb
xlat
xchg
loop
and
pusha
or
cmp
adc
pop
push
nop
pop
aam
sbb
or
shll
jb
add
pop
loop
andl
xchg
jg
mov
xor
fcompl
xchg
mov
incb
inc
out
out
xor
hlt
gs
out
loope
test
xlat
mov
push
int
cmc
je
fcoms
out
mov
in
cmpsl
divl
loope
xor
hlt
imul
test
push
xor
mov
into
cli
cli
rolb
fldl
pop
rcll
add
push
fcom
repz
aad
sub
cwtl
jbe
je
mov
out
lea
mov
sub
add
jecxz
int
push
pop
add
sub
rcrl
pop
aad
adc
and
in
xchg
and
stc
dec
insl
mov
repz
and
inc
xchg
and
pop
leave
test
jmp
lahf
leave
mov
jl
shlb
out
orb
imul
fstl
fisubl
cmp
daa
in
lret
push
loopne
loope
and
pop
inc
out
movsb
xor
jne
loopne
push
jg
xorb
cmp
mov
pop
fnstcw
enter
js
xor
dec
add
pop
rcr
jecxz
loopne
xchg
mov
pop
inc
push
push
sbb
mov
in
mov
or
push
fcompl
aad
les
add
rolb
pop
pusha
clc
jb
lahf
call
shl
inc
sub
adc
stc
mov
in
mov
hlt
adc
dec
cs
push
sar
xor
repz
repz
outsl
mov
fldenv
cli
in
dec
jmp
push
mov
loopne
fists
sbb
or
daa
xor
or
sub
loop
push
adcb
mov
adc
inc
push
adc
mov
jecxz,pt
xor
scas
jo
cmp
xchg
repz
mov
stos
jno
pop
das
mov
cmp
fistpl
inc
pusha
sub
push
jo
dec
cmp
adc
aaa
mov
jnp
jg
mov
fwait
sarl
addr16
fistps
movsb
mov
xlat
mov
lcall
enter
fistpl
insl
sub
paddw
cmp
jmp
mov
sub
jle
pop
xchg
xchg
jmp
or
out
inc
inc
fwait
lret
mov
sub
xor
xor
mov
pop
xchg
inc
lds
mov
and
jae
add
add
pop
mov
jp
bound
jge
pop
mov
xor
add
add
ret
and
adc
fiaddl
mov
mov
ja
fistpl
xchg
in
loopne
clc
push
mov
nop
pop
imul
cmpsl
andl
imul
sbb
test
jnp
in
jo
adcl
aas
stos
mov
mov
pop
mov
es
push
cs
test
call
aaa
addr16
sub
dec
add
insb
sbb
xchg
popf
ja
addl
aam
js
xor
jns
mov
in
int3
pop
pop
mov
enter
adc
je
out
and
repnz
or
nop
rcll
fcompp
cmp
pusha
push
and
lahf
lds
mov
dec
aam
or
add
mov
push
fmull
xorb
mov
xlat
pop
lds
imul
shll
xchg
mov
es
cwtl
cld
mov
xchg
mov
sbb
dec
out
stos
adc
incl
jge
or
fnstenv
jl
mov
das
xlat
inc
cmp
pop
inc
and
xchg
repnz
ss
outsb
and
aaa
mov
cli
inc
icebp
lock
enter
mov
or
xchg
test
lods
mov
adc
and
or
jbe
lock
dec
cmp
xchg
mov
out
pusha
sub
push
or
xlat
loop
ret
xchg
pop
xor
frstor
jl
jle
or
out
add
add
sbb
rolb
rclb
pop
mov
sub
xchg
cmpsl
lea
xor
fdivs
inc
arpl
pop
cmpsb
push
adc
js
subb
add
sbb
in
and
int
insb
xchg
push
xchg
add
add
jns
pop
xchg
adc
pop
inc
pushf
jge
push
and
mov
mov
int
mov
inc
imul
xor
aas
ret
push
adc
lret
in
into
push
mov
je
sub
xlat
pop
mov
icebp
or
pop
jge
add
pop
adc
pop
insb
arpl
adc
sbb
icebp
mov
movsl
hlt
mov
addl
push
movsl
fisttpll
xor
or
jb
dec
lds
fisubrs
mov
push
mov
mov
sbbl
and
js
rcll
gs
arpl
sbb
and
insb
mov
ficomps
call
push
push
xor
pop
jmp
shrl
xchg
adc
jno
mov
add
addr16
not
int3
cmc
fimull
lcall
push
jns
lret
jle
popf
jbe
xchg
push
dec
jl
or
mov
outsl
rcr
cmp
bound
dec
mov
shrb
adc
pop
mov
int3
mov
or
jge
mov
adc
sbb
leave
cs
sub
cld
push
add
test
jno
mov
test
sbb
leave
xor
nop
push
pop
adc
test
mov
pop
mov
push
scas
sbbl
scas
sbb
aas
mov
fs
sbb
xchg
adc
adc
xor
adc
out
in
inc
fdivrs
sbb
ja
push
mov
repnz
insb
imull
outsb
mov
and
pop
jmp
je
ret
mov
stos
mov
in
movsl
sub
ret
daa
push
adc
adc
inc
and
add
xchg
ljmp
jbe
pushf
into
add
sub
push
and
jp
mov
icebp
mov
mov
pop
push
mov
icebp
pop
pop
push
dec
jg
icebp
inc
lods
cmc
jle
sarl
stc
mov
inc
push
mov
inc
clc
push
add
push
push
hlt
push
mov
test
outsl
clc
mov
lods
mov
pop
pop
or
addb
adc
xor
fmulp
incb
cwtl
insb
sub
call
js
cli
clc
into
push
mov
xchg
dec
xchg
outsb
mov
lds
je
pusha
xlat
int
iret
out
xchg
cmp
testb
dec
loopne
loope
aam
cmc
jnp
ficompl
sbb
lret
adc
xor
popa
test
pushf
add
inc
addl
adc
daa
lcall
addr16
sub
pop
mov
jno
and
mov
mov
mov
jo
dec
cmp
insl
add
jo
mov
popa
das
arpl
pop
clc
bound
shll
mov
shrb
into
nop
mov
mov
cmpl
pop
roll
add
jo
mov
in
pusha
inc
adc
clc
movsb
repz
jp
pop
xlat
je
xchg
push
or
mov
fbstp
push
jb
xor
pushf
shlb
lods
fistpll
mov
adc
out
js
out
cmpsb
test
lea
nop
data16
xor
or
div
push
xchg
lock
int3
push
cs
dec
mov
clc
pop
jl
rep
loop
and
xchg
cmp
lea
popl
fwait
add
fiadds
add
lock
data16
fistps
sti
or
insb
dec
cmp
inc
test
and
enter
ss
popa
hlt
sub
fwait
push
xchg
ffreep
mov
test
mov
jge
out
mov
in
pushf
aam
and
sarb
fcompl
adc
pop
xchg
push
cli
ds
test
out
sub
in
icebp
mov
xchg
lock
adc
inc
mov
jbe
mov
inc
mov
adc
mov
lret
imul
push
and
rorl
fldl
cmpsl
lahf
out
jns
xor
fnstenv
addr16
loopne
add
lea
jnp
nop
pop
push
vcvttsd2si
xor
lock
xor
jo
fcmovb
sbb
aam
scas
mov
ljmp
aam
cld
ja
xchg
xlat
push
xor
and
xchg
aam
mov
les
imul
pop
fdivr
pop
dec
inc
sub
cli
or
mov
nop
ret
cld
aas
fstpl
add
push
jecxz
mov
add
adc
ja
fadd
dec
jle
mov
pop
mov
xchg
cmp
pop
enter
scas
mov
hlt
mov
jne
pop
jle
and
sub
sub
push
and
xchg
imul
push
int3
movsl
mov
xchg
loope
ficoml
push
out
ffree
sahf
gs
cwtl
dec
inc
jle
scas
fiadds
inc
xor
jge
pop
rcr
jo
in
push
mov
jmp
mov
enter
leave
in
in
rcr
dec
outsl
xchg
xchg
jge
outsl
lock
sub
lcall
sar
sub
mov
lcall
adc
in
sti
shr
lret
sub
int
mov
push
roll
ljmp
push
jmp
shlb
movsb
imul
dec
pushw
int3
mov
inc
jg
cmp
in
or
jb
jge
mov
inc
jbe
push
aaa
mov
jp
mov
icebp
sbb
mov
jae
scas
push
mov
push
xor
ds
test
xchg
dec
or
cltd
sub
xchg
insb
xor
mov
cmp
mov
mov
xchg
daa
push
outsb
stos
insl
sbbb
sbb
test
out
push
pop
pop
subb
mov
shll
xor
sbb
xor
loop
mov
popf
enter
jp
adc
call
cmp
mov
lahf
jl
or
fnstenv
pop
push
adc
popa
push
in
loopne
nop
fnstenv
xchg
arpl
bound
cmp
sub
repz
cmp
out
das
dec
and
out
jne
lahf
dec
fwait
cmc
test
and
mov
add
xchg
loopne
mov
mov
in
scas
aam
pushf
add
shlb
aam
push
fcoml
cmpl
xor
sbb
xor
push
movl
out
mov
adcb
clc
jae
insl
sti
pop
stc
or
push
adc
movsl
sahf
inc
push
or
lret
pop
insl
cmp
ss
xorb
arpl
popa
push
andb
mov
in
xchg
mov
js
push
leave
stc
mov
xorb
daa
test
cmp
xchg
push
and
arpl
shrb
pop
xor
rclb
divb
gs
push
xlat
in
fisubl
sub
mov
fcomps
push
xchg
xchg
mov
stos
fldcw
repnz
into
shlb
mov
push
adc
dec
mov
xchg
gs
sbb
in
jnp
das
popf
add
in
mov
adc
js
pop
punpckhwd
mov
arpl
xchg
mov
in
cmp
cmp
jbe
dec
shl
sub
popf
stos
and
mov
mov
cmovne
push
xchg
orl
scas
push
test
enter
das
fidivs
aad
fwait
and
les
cmp
cmpl
inc
mov
cli
add
jecxz
push
push
mov
xchg
xor
add
in
mov
std
push
fbstp
testl
jb
pushf
add
pop
jle
or
fwait
xchg
or
movsb
jg
mov
or
outsl
fisubrl
aas
xlat
mov
das
or
dec
inc
loopne
sub
mov
jl
xchg
mov
cmpsl
adc
push
ja
bound
lods
cmp
mov
adc
pop
mov
jge
lret
add
jl
lods
push
jb
xor
cs
cltd
imul
mov
das
mov
mov
cmp
fimuls
cmc
mov
or
aam
mov
aas
jge
imul
loop
in
ficomps
mov
aad
pop
lea
lret
outsl
imul
pusha
in
loope
dec
scas
mov
jle
jmp
xchg
jnp
mov
mov
stos
pop
jno
outsl
push
jp
inc
in
cltd
in
movsl
jno
les
les
sub
popf
mov
lahf
mov
outsb
out
aam
out
mov
push
js
fldenv
pusha
and
int
sub
cwtl
in
jbe
lock
loop
mov
xor
push
fisttpl
jge
pop
pusha
pusha
or
loope
mov
subb
mov
cli
js
mov
jmp
out
jnp
push
shlb
xchg
fsubp
daa
xchg
inc
mov
insl
shll
jge
and
dec
jmp
pop
icebp
es
cwtl
jb
int
mov
push
ss
mov
dec
jp
insb
mov
js
pop
push
jnp
lea
fmuls
rcrb
addr16
add
pusha
push
jle
popf
sub
loopne
lods
out
cmp
mov
fcompl
pop
cld
in
mov
je
int
jp
lret
call
movsl
scas
test
jecxz
packuswb
mov
mov
ja
cmp
lea
arpl
lcall
movsl
into
jp
jbe
cs
xor
imul
mov
adc
xor
leave
lret
sti
mov
jp
jno
jb
mov
cmp
pop
lret
int
mov
dec
xchg
push
jne
fxch
or
sub
mov
arpl
mov
xchg
mov
out
and
mov
sarl
lods
push
xor
mov
icebp
fnsetpm(287
pop
or
in
push
push
orl
inc
push
adc
cltd
xor
push
pop
mov
or
xlat
ljmp
js
dec
lcall
adcb
nop
sbb
mov
xchg
ret
pop
pushf
loop
test
cmp
shll
sub
test
pusha
dec
std
xchg
sub
adc
sub
jbe
sub
inc
hlt
loopne
nop
cld
cmc
loope
or
gs
stc
ret
sub
lods
call
les
and
push
push
outsb
adc
icebp
daa
ficomps
push
fstl
out
cltd
add
pop
int3
jge
imul
cmp
jo
cmp
ljmp
pop
ret
push
xchg
mov
sbb
push
jp
aam
pop
cmp
adc
inc
push
cmp
mov
xchg
in
sbb
shl
adc
repz
adc
lcall
call
xlat
xchg
dec
mov
dec
repz
js
mov
xor
aaa
xor
pop
jl
cmp
jae
push
inc
sub
dec
in
inc
aaa
and
cli
movsl
insb
push
cmpsl
ljmp
loopne
pusha
enter
mov
xlat
mov
xchg
add
mov
jle
or
or
or
test
push
outsl
jp
aaa
cmp
mov
in
es
adc
stos
sub
cmp
pop
out
pop
fisttpl
adc
dec
pusha
sub
adc
mov
loopne
imul
add
push
push
jmp
dec
mov
dec
nop
dec
xchg
aas
jo
fcmovnbe
les
inc
push
push
inc
jmp
out
cmp
mov
inc
sub
cmc
sbb
stos
arpl
pop
add
je
or
outsl
lock
mov
out
pop
sar
xchg
mov
in
shrb
shrl
sub
xor
or
push
repnz
outsb
insb
inc
xor
mov
cmpsb
stos
and
adc
aas
add
ljmp
iret
mov
push
pop
or
inc
mov
incl
insb
stos
addb
popa
sub
push
fsts
lahf
es
lcall
xchg
lcall
mov
or
fmull
cli
mov
stos
cmp
std
xchg
ja
push
jb
dec
pop
sub
push
fsubl
loope
dec
sbb
cmp
js
in
pop
cwtl
push
mov
fcom
xor
mov
mov
dec
pop
dec
ja
cmc
popa
push
mov
sarb
subb
daa
iret
and
mov
pop
push
shl
in
cmp
aam
add
ret
sub
mov
lret
jmp
adc
pop
lea
insl
mov
add
testb
mov
testl
mov
and
dec
test
cmp
loopne
call
imul
scas
lret
jp
mov
pop
clc
xchg
test
stos
add
idiv
sub
das
xchg
xor
cli
ja
cli
test
into
cmp
iret
bound
arpl
test
iret
xchg
mov
xchg
pop
pop
rclb
sahf
inc
inc
xlat
cli
ss
lea
sub
scas
cltd
nop
sbb
push
mov
es
push
xor
mov
xlat
bound
dec
mov
mov
mov
inc
shlb
mov
mov
adc
xor
ret
cmpsb
sti
loop
clc
cmp
jmp
jle
mov
insl
and
mov
mov
xchg
add
jge
or
popf
insb
cltd
inc
pop
push
inc
es
mov
cmp
arpl
test
popa
movsb
iret
and
jg
xchg
aaa
cmp
lods
push
pop
in
out
das
mov
jl
jbe
and
mov
loopne
mov
adc
sub
mov
push
push
cmpsl
mov
imul
inc
push
arpl
aaa
jge
loop
outsl
into
xchg
sbb
adcb
cmpsb
in
or
lods
in
test
pop
pop
jecxz
sbb
inc
imul
mov
shlb
sti
or
fdivrp
add
dec
sub
gs
jg
andl
test
xlat
and
gs
mov
adc
xor
add
clc
shlb
push
adc
push
mov
sbb
add
arpl
aad
add
loop
sbb
icebp
mov
mov
pop
dec
mov
and
sub
mov
push
popf
lods
in
mov
pushl
loopne
fstpl
xor
lock
cmp
test
dec
test
aaa
add
jns
pop
popf
insb
ss
shrb
pop
aam
dec
sub
ficoml
fisttpll
jp
lret
xlat
add
mov
inc
cld
sahf
sub
mov
icebp
test
scas
adc
mov
push
gs
and
and
lods
push
push
stos
orb
push
je
inc
gs
xchg
movsl
cmp
roll
add
dec
xchg
mov
adc
sahf
rclb
inc
dec
hlt
jp
loope
jno
popf
popf
cwtl
xlat
mov
mov
decb
add
pushf
mov
fldt
mov
outsl
cmp
xchg
ret
xchg
sub
adc
data16
loopne
test
negb
cmpsb
add
insb
adc
adc
cmp
pop
mov
xor
cltd
icebp
dec
rcr
mov
pop
gs
and
aas
pop
mov
sub
inc
shlb
and
cmpsl
or
push
aam
add
pop
rcrl
out
xor
sub
sub
dec
lcall
inc
xchg
ja
jle
push
leave
pop
js
ljmp
mov
out
data16
xchg
or
movsl
mov
andb
add
jmp
lods
adc
jp
cmp
xchg
cmc
pop
dec
pop
mov
aaa
inc
inc
or
in
shrb
inc
lcall
sub
dec
pop
outsl
ret
xchg
mov
sti
add
call
push
nop
ficompl
pushf
xchg
das
adc
dec
ret
outsb
clc
add
std
das
sub
cmc
pop
fnsave
shll
push
imul
push
pop
leave
cmp
xchg
stc
outsb
jno
mov
jbe
repz
push
mov
mov
stc
divl
sub
xchg
jmp
les
sbb
or
je
cs
mov
push
sbb
loop
lods
inc
iret
push
add
push
mov
jb
push
mov
clc
dec
cmc
pop
or
and
mov
sti
jg
loop
dec
xchg
mov
in
pop
gs
stos
or
test
inc
cmp
imul
inc
and
clc
jle
testb
jl
mov
push
jns
fwait
les
xchg
ret
xchg
out
mov
call
mov
insl
inc
insl
sbbb
repz
jge
add
insl
add
int
pop
loope
add
inc
mov
push
push
xchg
inc
inc
mov
push
adc
insl
sbb
inc
xor
mov
jns
pop
sbb
push
aad
sub
addb
sti
inc
fsubrl
jmp
xchg
in
add
mov
sub
incb
dec
xor
adcb
add
fstps
mov
out
sarb
clc
and
outsl
test
dec
mov
imull
pop
mov
inc
fsubrs
mov
mov
dec
mov
fldt
push
sub
pop
xchg
sbb
sub
xor
out
aas
xchg
sbb
lea
fwait
mov
mov
mov
mov
das
mov
lds
jecxz
jb
imul
sub
fisubs
in
and
sub
cwtl
dec
pusha
enter
js
sbbb
push
or
cmc
outsb
sbb
cld
iret
cld
ljmp
adc
shll
sahf
fsubs
dec
fldl
mov
fwait
out
aaa
mov
push
pop
pusha
sub
dec
outsl
adc
dec
shlb
pop
push
mov
mov
jecxz
push
push
es
and
push
jb
scas
inc
inc
pop
push
popa
jno
movl
test
movsl
dec
pushf
insb
jb
inc
sub
leave
dec
mov
xor
ja
push
push
mov
movsl
sub
mov
cmp
cmp
lods
std
jp
fimull
shrb
mov
call
push
adc
mov
addr16
or
popa
cltd
shlb
mov
cwtl
lods
push
cmp
in
xchg
pop
je
ficomps
adc
jb
insb
icebp
insb
nop
sub
loope
adc
xchg
fmull
lret
jns
ss
ss
add
pop
in
addr16
mov
outsb
push
mov
cwtl
or
scas
scas
inc
push
sub
shr
mov
sub
iret
mov
cmp
mov
stc
int
test
insb
xor
xor
mov
jne
jno
shrb
or
or
cmc
pop
jle
sbb
loopne
mov
xchg
leave
lcall
shll
xchg
rclb
cli
ljmp
xor
frstor
jb
ret
cmp
sbb
cmp
sarb
adc
mov
lds
adc
fisttpl
xchg
adc
dec
xchg
lea
je
xor
insl
fisubl
cli
jne
xchg
pop
cmc
leave
test
ret
fsubl
out
repz
mov
mov
sbb
inc
mov
xor
out
jbe
inc
aad
pop
ja
inc
rcrl
ss
adc
sbb
inc
bound
outsb
push
and
lea
add
push
dec
cltd
xor
push
popa
dec
int3
jns
pushf
dec
mov
xor
push
fs
adcb
lahf
push
push
iret
mov
out
adcb
sbb
xchg
not
into
xor
stos
jnp
pop
std
fnstsw
dec
les
or
pop
jl
push
and
mov
pop
cmp
js
cmp
fmul
jecxz
shll
dec
jmp
push
clc
in
lods
xchg
inc
lcall
lea
sub
lods
xor
int
shrb
ss
imul
jle
xchg
mov
cmp
push
sbb
add
repnz
mov
sub
inc
in
loopne
je
jp
je
mov
and
or
push
push
jg
and
out
aam
mov
xor
mov
divb
outsb
dec
mov
and
dec
loope
push
or
fcomps
xor
xchg
jmp
or
das
sub
int3
popf
dec
out
xchg
cwtl
movsb
iret
sub
hlt
push
icebp
or
scas
and
aaa
fcompl
pop
fsubrs
icebp
insb
pop
addr16
arpl
sbb
scas
jp
outsb
scas
push
cmp
enter
mov
ret
int3
sbb
popf
imul
pop
pusha
hlt
iret
xor
mov
roll
sti
jns
in
das
cltd
cli
adc
loop
mov
lcall
popa
in
mov
mov
cmpsb
daa
ljmp
fcmovne
pop
or
sti
mov
lahf
in
xchg
addr16
mov
call
cwtl
cmp
mov
inc
imul
inc
jge
inc
sub
lea
jg
scas
or
and
add
daa
xor
hlt
fwait
push
add
call
mov
ret
or
jg
jg
scas
pushf
xchg
xchg
js
and
shlb
inc
add
jle
pop
ret
in
add
pop
mov
cmp
jno
stos
push
daa
push
jl
testb
xchg
push
loop
jl
add
and
and
insb
sbbb
xlat
leave
ljmp
jnp
pop
je
and
leave
push
je
int3
push
outsb
dec
add
out
xor
cltd
mov
jo
mov
dec
fs
popf
sbb
add
dec
lea
orb
fcompl
pop
mov
fstpt
xchg
rcl
sbb
lods
xor
and
shll
idivl
jo
mov
lret
out
xchg
xchg
repz
outsl
imul
lret
scas
mov
ss
aam
rorl
mov
cs
and
dec
int
sar
jo
pop
hlt
into
sub
xchg
add
andl
and
jecxz
sbb
dec
mov
insb
imul
jns
push
loop
mov
dec
scas
jmp
in
cmp
cwtl
inc
inc
orb
and
and
push
pop
pop
sub
rcrb
scas
ret
mov
cmpsb
xchg
mov
int
leave
mov
dec
outsb
test
and
xchg
dec
mov
sbb
outsl
adc
ret
out
dec
int3
sbb
ss
or
or
dec
xchg
xlat
insb
or
pushf
pop
or
add
cli
and
sti
jne
xchg
decb
fsub
mov
call
cmp
or
sbb
daa
movsb
or
das
movsl
rcrl
jns
or
mov
xchg
daa
loopne
xchg
aam
inc
adc
mov
dec
mov
je
popf
dec
popa
xor
ror
mov
bound
or
mov
and
inc
fs
in
sub
mov
push
not
mov
mov
out
mov
lret
clc
in
fdivrl
ljmp
pop
shrb
fdivrs
push
or
les
lahf
ja
aam
hlt
sub
ret
dec
out
push
data16
sub
scas
or
data16
push
dec
fsts
cmp
lods
shl
aam
arpl
mov
jle
lahf
and
fcomps
lods
sub
jae
jns
in
dec
cld
cmpb
jmp
in
imul
jno
mov
and
lds
push
sahf
mov
loop
adc
orl
mov
add
jmp
mov
inc
jle
xchg
lret
call
sub
cmp
data16
nopl
jae
sbb
pop
sub
cli
aam
pop
orl
outsb
in
push
inc
xor
or
in
test
aaa
stos
mov
shll
mov
push
xor
adc
xchg
aas
inc
ds
mov
xchg
dec
inc
ret
sub
lock
ret
mov
push
push
xchg
loope
rolb
fwait
mov
bound
out
leave
int3
mov
adc
inc
mov
pop
push
sbb
hlt
dec
cmp
mov
sbb
testb
imul
popa
jle
in
mov
and
xchg
cmp
data16
movsl
adc
xchg
sbb
divl
mov
orb
cltd
add
insb
dec
int
sti
sbb
pop
orb
rorb
xchg
sbb
aas
fwait
lret
mov
sbb
or
sub
loop
in
fdivr
ljmp
cs
xor
dec
mov
testb
push
out
add
add
sub
push
in
mov
and
jae
mov
mov
test
xor
pop
pop
jl
jnp
dec
lea
mov
mov
and
aam
inc
ss
repnz
inc
dec
out
cmp
lea
dec
xchg
dec
subb
lea
std
andl
fstl
cs
xchg
cmp
scas
cltd
in
orl
ret
sbb
scas
xchg
xlat
lahf
mov
shlb
call
pop
pop
jno
mov
out
pop
aaa
jbe
bnd
push
ret
test
lds
orb
xchg
mov
out
or
sub
and
mov
xor
cwtl
adcb
out
dec
ret
jle
xchg
xchg
push
jl
cmpsl
cmc
fldt
or
push
cmp
insb
gs
movsl
out
sahf
fmull
loope
sub
jp
inc
data16
aad
in
xchg
xor
iret
sub
pusha
loop
add
out
mov
and
int
jnp
mov
mov
sbb
jge
add
arpl
and
cmpsb
pop
sti
jmp
leave
mov
jle
andl
shlb
lcall
adc
or
or
sbb
mov
stc
push
ja
push
jge
push
stc
pop
cmc
inc
jnp
sti
pmulhuw
inc
add
sub
add
outsb
mov
test
mov
jne
sbb
cmp
std
jb
sbb
inc
inc
mov
shl
cs
sub
mov
jb
pop
pop
add
or
inc
lret
push
clc
fwait
pushf
mov
cmp
scas
mov
pop
je
jecxz
pop
in
int3
ret
cwtl
addr16
add
or
outsb
das
cmpsl
cmpsl
push
xchg
cmp
popf
mov
mov
cwtl
les
test
fimull
jmp
mov
cmc
nop
mov
mov
inc
cmp
jne
push
ds
inc
adc
jmp
adc
mov
push
push
inc
xchg
sub
dec
sbb
mov
mov
xchg
xor
add
mov
scas
fyl2xp1
sti
test
outsb
aad
cmpsb
xchg
xor
xacquire
test
cmp
push
pop
int3
testb
add
lahf
stos
sbb
sub
ss
outsb
cwtl
cwtl
add
xor
incb
jg
and
lds
jns
scas
push
and
dec
and
cmpsl
rcrb
in
mov
cvttps2pi
in
enter
mov
lcall
fdivl
addl
dec
fstpl
fsubl
out
test
mov
lcall
int
mov
mov
jne
fstpl
jge
mov
mov
dec
jmp
arpl
in
ljmp
cmp
hlt
push
fbld
imull
adc
repz
jo
outsb
xor
addr16
and
sar
fnsave
xor
adc
xor
mov
add
pusha
stos
sbb
cmp
in
int
and
leave
or
mov
sub
xor
test
sub
jo
mov
fs
bound
aad
push
insl
jle
xorl
aas
imul
into
test
pop
fwait
outsb
into
xor
pop
or
jbe
enter
cmpsl
lret
mov
jmp
pop
cmpsl
push
clc
insb
dec
add
nop
xchg
lods
pop
dec
jnp
ror
lods
jno
sub
inc
pop
mov
andb
or
jle
ret
loop
repz
jp
xor
xor
in
jmp
fsubs
frstor
inc
jns
sub
lahf
pop
adc
scas
popa
outsb
jo
jne
dec
mov
out
jle
xor
mov
hlt
int
inc
push
xor
cmc
jp
sbbl
dec
dec
pop
icebp
add
lock
cld
inc
out
push
cmp
mov
and
movsb
bound
mov
in
add
add
xchg
xchg
lahf
popf
shll
ljmp
enter
in
push
out
pusha
xchg
dec
mov
pop
inc
mov
and
dec
pop
xchg
pop
in
cld
and
mov
in
out
or
mov
push
sub
jecxz
lret
inc
and
cmp
mov
fs
loopne
xor
sub
add
mov
or
pop
out
push
adc
fimuls
movsl
mov
xorb
out
add
jmp
jle
test
flds
fildl
xchg
sub
sti
push
data16
faddl
movb
push
mov
clc
jne
aam
jbe
xchg
std
push
addr16
mov
lcall
loope
and
les
xchg
in
divps
enter
icebp
inc
subl
pop
xchg
mov
jo
dec
mov
xchg
sub
cmp
add
leave
sti
test
stos
pop
xor
inc
xor
out
pop
icebp
enter
xor
pop
loop
or
adc
out
cmp
sub
xchg
push
push
and
ljmp
ja
dec
out
push
icebp
lcall
in
ds
pushf
cmp
push
sub
test
gs
into
lds
test
xchg
cmc
inc
popf
pushf
les
push
sarl
hlt
xchg
mov
and
mov
lea
sahf
add
pop
testl
jmp
and
jns
push
mov
sbb
pop
loop
aad
xor
push
fimull
xchg
or
fs
imul
cli
xchg
cmp
stc
shll
out
jmp
add
testb
sub
jp
ret
sahf
mov
mov
cltd
xchg
cmp
loop
sbb
insb
dec
add
fst
fnstcw
mov
pop
cmp
out
out
mov
dec
fcomps
cmp
sbb
xor
rcrl
lods
out
mov
mov
ret
jmp
xor
jns
add
fnsave
imul
dec
sti
outsb
jecxz
das
ja
lods
jg
ljmp
xor
pop
push
jnp
xor
dec
icebp
adc
fmull
add
xor
push
gs
or
inc
mov
jbe
loop
repnz
push
mov
rcrb
jne
pop
mov
sub
loopne
bnd
and
and
aaa
push
in
or
pop
sbb
rcrb
dec
in
sahf
mov
adc
fldcw
add
popa
adcb
iret
aad
arpl
push
push
call
sub
leave
lods
or
xor
int
pop
sbb
je
cmp
dec
int3
dec
pop
loope
call
cmp
in
xor
sub
pushf
sub
ret
push
jns
jae
push
cmp
sbb
sbb
jle
and
pop
add
aaa
stc
sbb
roll
sahf
mov
fldt
adcb
add
aad
stc
fnstsw
adc
aam
cmpsl
inc
xor
jnp
jge
jge
jp
int
lcall
repz
push
dec
nop
ja
dec
stos
aas
mov
adc
mov
pop
into
jno
stos
dec
mov
xor
jmp
repz
xchg
mov
adc
bnd
ja
jnp
cltd
xor
cmc
ja
stos
xchg
xor
xchg
mov
test
mov
jo
aam
scas
fstl
inc
xor
jbe
jb
dec
xor
sbb
xchg
leave
jl
push
add
jmp
jl
bound
mov
aas
push
into
fwait
movsb
arpl
push
mov
scas
xchg
lods
cs
mov
notl
mov
fisttpll
and
dec
les
sub
mov
inc
push
adc
cmc
movb
test
or
ja
fwait
scas
mov
loopne
cwtl
adc
add
pop
test
enter
push
das
std
inc
mov
btc
jb
xchg
pop
jge
jb
xor
jecxz
dec
test
xchg
push
fsubrl
cli
jo
clc
or
lock
and
push
insl
loope
test
inc
jns
push
fldl
ds
sbb
mov
mov
xchg
lret
mov
xchg
jnp
fsub
pop
cs
add
shrb
test
cmpsl
xor
aaa
mov
das
pop
push
cmpsb
xor
jg
mov
inc
mov
scas
xchg
lds
inc
sbbb
cmp
jns
xor
xchg
pop
dec
insb
stc
sub
and
mov
ljmp
insb
and
and
rcr
lods
push
pop
fidivl
inc
pop
push
pop
xorl
xchg
sti
test
pop
stc
push
pop
pop
lea
leave
sub
test
sbb
test
stos
cmpsb
stos
je
repnz
es
mov
sbb
movsb
push
sub
add
push
es
push
mov
rclb
sub
push
aad
adc
gs
pmuludq
push
imul
lret
in
addb
pop
lahf
in
inc
add
mov
jp
mov
xorl
je
add
push
add
mov
cmpsb
shlb
sti
mov
cmp
jae
or
ss
adcl
sub
mov
in
fldenv
and
mov
inc
nop
loope
aas
or
jmp
cmp
je
mov
cmp
inc
and
fbld
dec
xchg
add
push
adc
pusha
dec
bound
test
icebp
adc
sti
in
fs
scas
test
dec
lock
mov
lock
jecxz
in
fdivl
js
mov
jne
or
pop
cmp
mov
daa
nop
jns
lods
icebp
cltd
ficompl
dec
not
inc
push
xorl
addr16
lock
mov
fidivl
inc
fwait
divl
dec
testb
push
xor
cli
dec
sbb
jle
aaa
leave
cmc
loop
and
rorb
xlat
rdmsr
push
push
adc
scas
shr
dec
jbe
inc
daa
and
adc
or
mov
mov
fstpl
cmpsb
sarl
popf
ss
lds
rol
fwait
lret
test
mov
fldl
adc
cmp
dec
loope
adc
cld
stc
cltd
or
sti
cli
insb
shlb
cmp
sub
iret
daa
push
jne
int3
loop
push
insl
in
in
out
inc
sbb
mov
mov
pop
pop
cmp
add
xchg
in
xor
lock
sbb
adc
cmpsb
cld
pop
aad
and
xor
jecxz
out
rclb
xor
mov
lret
push
inc
and
fcoml
enter
add
shlb
std
xchg
push
mov
js
push
shrl
pushf
push
out
fistps
dec
xchg
jl
mov
push
scas
popa
push
mov
cltd
fisubrl
xchg
sub
imul
out
cmp
loop
out
sbb
cmc
and
outsl
pop
push
aaa
daa
jmp
nop
pop
fs
jno
mov
outsb
in
dec
jp
jmp
adc
ret
fmuls
addl
and
mov
scas
inc
push
mov
frstor
jne
imul
shrl
push
dec
jmp
inc
cmpsl
cmp
loopne,pt
fsts
add
push
cli
and
fcmovb
jno
dec
adc
cmp
imul
lret
test
movsl
inc
dec
int3
add
fwait
imul
rolb
popa
sub
xchg
mov
jp
xchg
sbbb
jge
cmc
enter
bound
inc
fiadds
dec
inc
xchg
idivb
in
xor
icebp
inc
sub
addr16
iret
fdivp
cmp
push
dec
addl
mov
gs
mov
or
movsl
jg
mov
hlt
cmc
mov
das
add
sub
or
adc
add
cmpsb
data16
or
jns
movl
ja
xchg
jl
jp
or
or
dec
sub
mov
xchg
push
sub
pop
sub
cmpsb
adc
je
pop
mov
fucomp
stos
pop
cwtl
pop
push
xor
cltd
mov
test
mov
add
mov
sbb
loop
xor
les
cmc
stos
dec
scas
dec
adc
sbb
sub
xchg
mov
add
jp
insb
inc
inc
pop
xchg
addl
rolb
cmc
jmp
test
sarl
adc
scas
lods
int
rdpmc
inc
lock
dec
jge
out
lods
decl
movsb
dec
adc
mov
pop
in
jl
ja
nop
in
xor
lret
cmp
pop
and
add
out
adc
mov
jl
mov
add
mov
cli
xor
cmpsl
push
mov
in
lret
out
adc
mov
and
stos
adc
dec
push
imul
cmp
imul
pop
push
lea
xchg
out
xchg
cmp
stos
jo
xlat
fldl2t
shrl
dec
in
fsubrl
fbstp
mov
icebp
xchg
and
jle
add
dec
xor
xchg
out
clc
lcall
clc
mov
push
mov
pop
push
inc
dec
into
flds
repz
mov
dec
and
cmp
leave
rcll
xor
insl
and
je
sub
mov
cmpsb
addr16
xchg
dec
insb
sbb
lods
stc
sahf
cld
into
aaa
mov
cwtl
test
mov
rcr
imul
loopne
mov
sub
push
shll
xchg
inc
xor
sub
mov
aam
fwait
pop
jecxz
mov
mov
outsl
mov
push
xchg
dec
imul
rolb
prefetchwt1
push
add
mov
lret
repnz
jmp
mov
xor
push
add
pop
pop
out
arpl
or
pop
jne
ja
xchg
inc
mov
jae
loopne
pop
test
adc
mov
pop
movsb
or
in
push
inc
int3
pop
imul
call
test
cmc
fdiv
sarl
shrl
jno
xor
lret
and
stc
sub
hlt
xchg
mov
mov
push
cmp
cmp
add
jae
inc
mov
pop
pop
les
aas
into
mov
pop
xchg
shrb
lahf
out
jae
rolb
adc
sahf
cmpsb
mov
mov
mov
popa
negb
pop
mov
loope
mov
add
lds
and
je
adc
inc
sahf
shr
pop
rcll
int
cs
mov
sub
sbb
xchg
clc
in
add
aas
mov
cmp
dec
sub
cltd
lret
int
out
dec
in
add
sbb
mov
mov
pop
imul
xchg
mov
mov
imul
mov
pop
and
mov
out
les
test
mov
inc
lahf
in
push
cmc
inc
and
jmp
incb
jmp
sbb
enter
adc
sbb
cld
cli
push
insb
movsl
jl
pop
imul
dec
or
sub
jne
fnstenv
jg
mov
sub
decl
lds
or
cmp
scas
inc
fsubrs
xor
insl
jno
cmp
xor
out
dec
xor
push
outsl
dec
pop
inc
add
or
pop
iret
push
js
mov
xchg
xchg
add
jle
inc
push
dec
push
and
popa
mov
mov
or
notb
stos
jne
fs
sub
adc
shr
in
in
popa
out
vmaxss
mov
stos
rcr
es
daa
and
imul
popa
sub
cmp
sarl
xor
dec
imul
out
outsl
loope
and
push
sarl
icebp
cmpsl
dec
pop
inc
jp
jle
pop
sub
mov
in
adcb
dec
mov
xor
call
xchg
push
mov
mov
std
out
add
lea
enter
adc
dec
dec
add
mov
lds
cld
outsb
sbb
subl
js
or
xor
pop
fld
jb
ret
inc
jb
scas
lods
adcl
add
scas
fcoml
popf
into
add
movl
test
popl
int
nop
cmp
aad
orb
sbb
ret
sbb
pop
rorb
adc
add
lock
jle
lea
push
inc
in
push
loop
pop
cmp
data16
push
xor
xor
sbb
enter
push
push
sbb
add
xchg
insl
sub
scas
mov
jno
mov
jns
dec
xchg
into
or
dec
add
repnz
mov
outsl
lea
fwait
mov
jmp
sbb
push
mov
xchg
sub
ficoml
xor
dec
mov
dec
jp
pop
jl
ss
add
dec
into
add
push
xor
cld
aad
mov
push
mov
mov
dec
hlt
jns
fisttps
and
into
jmp
xlat
repnz
std
push
or
mov
or
mov
lods
mov
jle
and
add
fcmovu
sti
xchg
jecxz
aad
and
push
xor
mov
stos
pop
xchg
mov
xchg
push
scas
aaa
mov
lock
negl
mov
or
sub
sarl
pop
mov
fnstcw
jns
outsb
ret
bound
jo
mov
std
mov
fdivl
ds
inc
outsb
inc
adc
mov
je
push
mov
inc
ss
xor
sbb
mov
shrb
movsl
xchg
pop
dec
sahf
aad
gs
jge
das
orb
push
out
lcall
mov
loopne
mov
in
or
mov
mov
clc
aas
sub
or
popf
out
mov
inc
sub
mov
and
mov
xlat
pop
pop
jecxz
and
mov
icebp
or
out
andb
inc
jp
or
xorb
sbb
mov
sub
mov
cld
notb
xchg
sbb
xchg
cwtl
sub
test
into
idiv
in
xor
or
sub
push
sub
cltd
lahf
push
outsb
test
repnz
imul
in
icebp
psrad
cmp
push
sub
cmp
jl
lret
insl
shll
push
mov
icebp
mov
pop
rcl
dec
or
in
jge
cmp
bound
dec
mov
or
loope
loop
xor
mov
push
and
mov
pop
and
cld
xor
add
pushf
insb
pop
cld
fidivrl
incb
and
stos
mov
lahf
cmpsb
movsb
ret
jmp
inc
les
adc
aaa
and
mov
mov
ja
push
insb
jg
adc
push
lock
cmp
test
aam
pop
dec
pop
push
inc
push
push
mov
sbb
xchg
popl
jmp
pop
mov
mov
out
jl
fs
and
imul
call
cmp
sti
mov
push
pop
pop
jne
daa
aas
inc
cld
ds
aad
push
or
call
push
mov
loopne
push
fnstenv
ja
sub
mov
or
sub
sub
pop
in
lods
pop
sarl
sbb
cmpsb
push
sbb
jb
mov
scas
out
les
pop
lcall
aas
fs
mov
jbe
push
xchg
jno
lock
stc
fsubrl
and
add
mov
add
sbb
ficomps
and
pop
jae
lods
iret
ljmp
ss
loop
cmp
or
sahf
cmp
add
test
stc
cmpsb
cmc
aad
xchg
jo
cmp
adc
shll
and
mov
sbb
sub
aas
xchg
clc
setg
cmpsl
push
adc
in
push
pop
mov
add
aaa
and
xor
cltd
fwait
xchg
and
addr16
lret
jnp
scas
pushf
or
and
xchg
mov
mov
xor
jnp
jl
popa
pusha
mov
dec
cs
icebp
out
setns
int3
test
pop
and
andl
inc
adc
ret
jnp
pcmpgtw
imull
mov
icebp
or
dec
aam
add
cmpsb
cs
push
pusha
mov
jnp
sub
pop
in
mov
fnstenv
clc
xchg
cs
mov
loope
mov
loopne
cld
and
pop
and
lea
lahf
icebp
clc
clc
add
xchg
out
dec
jge
add
lea
data16
test
pshufw
pop
cmpsb
mov
add
in
mov
mov
sbb
in
add
pushf
out
or
lret
insl
xor
mov
nop
ror
cli
ret
popf
jp
mov
jmp
xor
jecxz
mov
insl
push
xchg
inc
cmp
xchg
xchg
or
mov
xor
fldenv
cmp
jae
xchg
fiadds
push
aas
push
mov
lods
push
push
pop
xlat
cmpsb
addr16
ja
insl
push
jmp
dec
and
and
add
frstor
mov
adc
jo
ror
jmp
repz
out
repnz
insb
mov
movsl
ja
movsb
push
cmp
inc
jo
jne
mov
test
push
push
xor
das
outsl
xlat
movsb
sbbl
data16
outsl
data16
ljmp
cwtl
push
fmulp
mov
jl
subl
loopne
xchg
in
add
lea
sbb
outsl
pushf
lahf
mov
pop
inc
pop
repnz
cltd
mov
es
xchg
in
xchg
mov
mov
lahf
pop
fildll
push
sarl
jle
adc
idivb
xchg
adc
sub
insb
fwait
dec
xlat
fistpl
icebp
mov
and
sbb
jbe
xor
jno
fists
movsb
jno
aam
cmc
lahf
mov
clc
in
out
xchg
fisubrl
cli
xchg
popa
cwtl
mov
dec
and
dec
cs
aaa
add
jno
inc
fwait
dec
mov
xor
or
jl
or
ljmp
enter
mov
and
enter
jno
mov
dec
lods
cmp
pop
into
sbb
enter
jmp
jae
insb
pop
lea
sbb
loop
dec
push
sbb
data16
jne
dec
addl
ljmp
xchg
pop
sub
push
mov
dec
add
jbe
cwtl
std
xchg
mov
iret
rorb
xor
lcall
out
es
adc
mov
or
shll
arpl
test
mov
lods
stos
test
jp
cmpsb
jbe
aad
mov
mov
xor
pop
sbb
pop
aaa
mov
lds
pop
insb
adc
aad
inc
xchg
aas
xor
push
sti
nop
sub
push
outsl
pusha
xor
in
sbb
jae
mov
cmp
cmp
xchg
and
and
cltd
popa
popa
loop
and
mov
add
pop
cmp
imul
add
mov
pop
add
imul
rcrb
sbb
cmp
fwait
xchg
fwait
push
sahf
js
shlb
call
imulb
dec
jg
jg
jo
jno
mov
adcl
cli
test
mov
mov
pop
mov
sbb
cld
cmp
jnp
jb
xlat
dec
sbb
movsl
movswl
imul
jbe
or
cmpsl
shl
sbbb
cmp
inc
xor
cld
xchg
add
data16
cltd
add
je
sti
xchg
mov
notb
in
ret
jecxz
push
out
mov
or
cmpsb
js
leave
inc
mov
cmovbe
push
xchg
jbe
pop
neg
shll
jno
dec
cmp
mov
push
cs
aam
mov
push
lods
cs
addb
fdivr
shrl
mov
mov
push
adc
or
push
mov
fnstenv
lret
iret
push
dec
nop
lret
stc
dec
mov
orb
jp
insb
lds
add
inc
mov
icebp
and
adcl
ret
sbb
lds
out
dec
mov
adc
aad
sbb
inc
icebp
dec
and
mov
out
pop
pushf
dec
out
jge
pusha
pop
cwtl
sub
in
es
cmp
shl
pop
cld
lcall
cltd
sub
hlt
mov
jns
int3
push
nop
adc
cvtdq2ps
mov
call
bound
cltd
data16
stc
testl
mov
and
inc
cwtl
std
push
out
andb
mov
dec
sub
jb
add
jmp
cltd
ja
sub
dec
dec
dec
in
andb
dec
lds
das
cld
jb
sbb
sbb
xchg
cmp
repz
testb
shlb
inc
xor
mov
or
xorb
mov
mov
aad
pop
push
cmpsb
fs
lea
cmp
or
lret
std
xchg
repnz
and
sub
ds
pop
push
cmovl
cmp
mov
mov
cmp
mov
hlt
andb
out
rorb
cmp
cwtl
push
xor
ffreep
dec
push
mov
sub
imul
pop
enter
and
lods
in
xor
ss
scas
arpl
push
insl
push
ljmp
sahf
daa
cmp
and
sbb
push
dec
imul
adc
gs
adc
shr
jae
xor
out
xchg
rcrl
loop
sahf
iret
fidivs
xchg
lods
movsl
aaa
push
rcl
push
jbe
push
xor
fisttpll
and
jns
scas
sub
pusha
out
lds
dec
pop
or
cmp
jecxz
lock
xchg
mov
push
or
sub
in
and
into
pop
mov
inc
mov
adc
dec
aam
std
pop
lods
dec
popa
ja
and
adc
jg
inc
test
jb
cli
ret
ljmp
enter
sti
test
leave
repnz
sub
stc
pop
xor
mov
push
cli
jo
and
mov
push
push
je
rcrl
fmuls
jb
out
aas
pop
xchg
push
push
mov
mov
jno
rclb
mov
insb
insb
mov
pop
ja
jg
negb
xor
add
shrl
pop
jno
mov
test
dec
js
xor
jg
lods
fwait
cmpsl
or
lea
scas
xchg
lret
mov
iret
test
jb
adc
inc
loop
dec
and
mov
loop
pop
leave
sbb
push
fcmovu
fsubl
loop
lock
fld1
sbb
dec
lret
sbb
fwait
cs
ret
add
xchg
fidivrs
jne
inc
sahf
mov
ds
adc
fsubl
xchg
mov
cmc
pop
xlat
das
xchg
push
imul
inc
mov
cmp
int
mov
jle
pop
push
cmp
mov
pop
lahf
or
mov
jne
sbb
cmp
loope
lock
and
jbe
outsl
add
sbb
loope
push
js
mov
fsubrs
mov
stc
nop
test
inc
lret
fnstcw
jbe
insb
sbb
repnz
insl
sub
pop
iret
lcall
sub
sbb
pop
mov
pop
mov
mov
push
leave
cmpsl
pop
enter
mov
insb
shlb
push
mov
mov
mov
pop
jae,pt
imul
mov
pop
int
icebp
cmp
lahf
add
sub
out
iret
test
mov
and
aam
mov
or
adc
jmp
out
popf
fsub
cmc
dec
xchg
push
and
pusha
aad
mov
mov
sub
xchg
push
pop
sbb
push
or
cld
and
mov
sbb
adc
sbb
idivl
inc
push
lock
and
dec
inc
aam
mov
sub
sub
cmovne
fistl
outsl
or
call
loope
xchg
inc
inc
push
mov
sbb
stc
push
and
sub
cmpsb
xchg
push
inc
std
es
call
pop
dec
adc
push
add
inc
sub
cmp
rol
mov
lea
daa
jb
and
xor
push
jb
shll
adc
pop
mov
scas
out
test
or
enter
sbb
push
popa
aas
js
jg
icebp
popl
ja
pop
mov
cmp
movsl
sub
out
push
rol
lea
stos
frstor
clc
sti
xor
mov
sbb
xchg
ret
roll
pusha
shrl
dec
stc
xchg
in
or
sbb
mov
lock
push
inc
fildll
adc
sbb
mov
add
mov
mov
xchg
lcall
mov
je
push
pop
xor
icebp
lods
iret
inc
and
cld
push
push
lret
adc
sti
int3
out
xor
mov
out
pop
lret
jle
int
roll
scas
aaa
or
or
jp
sbb
enter
jo
pushf
out
sub
call
sub
sahf
adc
xor
mov
cmp
xor
imul
xchg
insb
mov
rorb
mov
stos
inc
xlat
pushf
inc
aad
pop
lock
in
cmp
or
test
shll
pop
pop
or
xchg
icebp
mov
pop
pop
jecxz
xchg
cli
decb
pop
fcoml
xchg
jne
sub
mov
outsb
sub
jb
inc
je
xchg
jmp
fildll
push
jnp
imul
sarl
mov
mov
addr16
ja
out
movsl
jge
scas
dec
or
stos
pusha
sub
mov
pushf
sarb
mov
subl
adc
cwtl
sbb
aaa
arpl
sbb
pusha
hlt
adc
shrb
aam
or
cld
add
lret
imul
fidivs
lret
and
push
cmp
mov
imul
push
xor
xchg
pop
sbb
or
js
stos
mov
sub
je
hlt
mov
mov
in
ror
loope
iret
jle
mov
loop
push
pop
sbb
cmpsb
aam
out
movsb
ljmp
hlt
dec
dec
xlat
imulb
push
test
sti
fs
push
or
jg
repz
inc
dec
rcrb
lret
or
outsb
and
inc
xchg
xlat
ret
ret
jmp
test
push
mov
ret
dec
ret
sahf
pop
inc
in
dec
sub
push
push
mov
and
push
sbb
or
mov
push
jecxz
js
shll
pop
pusha
xchg
scas
lods
inc
cltd
leave
and
aad
stos
cmp
jne
popa
xorb
jae
gs
dec
loope
bound
xlat
xchg
add
mov
jecxz
inc
call
pop
inc
push
pusha
xorl
push
shll
mov
jge
call
dec
jle
add
push
imul
pop
gs
dec
add
add
pop
push
or
and
mov
sti
or
cmpsl
push
adc
lea
inc
inc
adc
mov
sbb
push
pop
test
inc
xchg
imul
adc
pop
cmc
sub
addl
jbe
xor
inc
std
mov
test
sarb
aad
ja
rorl
fbstp
lcall
jle
dec
and
sbb
inc
add
push
mov
sub
inc
outsb
jnp
out
cmpsb
cmpsl
push
and
pop
xlat
cli
rorl
inc
scas
mov
sub
subb
popf
push
lods
sahf
inc
adc
sbb
jbe
lret
or
mov
jae
push
mov
icebp
sahf
ret
and
push
popa
dec
insb
push
pushf
push
lds
and
xchg
mov
cmp
push
push
mov
and
or
mov
aam
es
mov
mov
mov
push
call
xchg
and
xor
add
sub
fnstcw
push
subl
push
testl
cmc
sti
jo
cmp
jo
ja
ss
mov
mov
add
inc
stos
roll
adc
inc
xchg
repnz
movsl
inc
push
ljmp
repnz
jne
ret
pop
jge
js
or
js
push
cmp
out
sub
jmp
or
add
popa
ljmp
adc
icebp
cmp
int
xchg
cs
mov
inc
sub
cmp
pop
push
push
int3
mov
inc
add
fstl
jo
stc
xchg
fildl
pop
outsl
mov
mov
lret
mov
mov
outsb
icebp
lret
push
test
jo
adc
sbb
sbb
test
adc
sub
push
or
enter
test
outsb
sahf
mov
xor
cmp
sbb
stc
or
or
dec
add
and
and
mov
idivb
or
shr
jmp
shl
xchg
ret
bound
mov
sub
fcmovnu
sti
nop
outsb
fsubl
cmp
pop
addr16
js
add
pusha
jg
dec
lahf
inc
test
loope
mov
daa
cltd
xchg
pushf
in
sbb
pop
dec
fnsave
imul
iret
movsl
aam
jnp
mov
mov
mov
adcl
lcall
jb
fnstcw
xor
mov
inc
mov
mov
push
jl
leave
or
pusha
sub
sbb
shll
cmc
aaa
mov
add
jmp
mov
and
mov
mov
pop
movsb
orl
icebp
and
push
sbb
clc
mov
aam
aam
scas
arpl
mov
push
ret
or
add
das
inc
sub
daa
add
or
in
cmp
lods
orb
mov
add
xor
lock
and
pop
in
cmp
in
and
in
cmpsb
xorb
dec
push
movl
push
lret
test
xor
mov
inc
bound
mov
inc
dec
das
out
pop
fldt
call
int
or
jne
repnz
pop
jnp
sahf
inc
das
inc
mov
clc
popa
push
cmp
ret
in
rorb
dec
mov
jge
jb
out
mov
push
stc
fcompl
testl
repnz
mov
push
push
xchg
subb
daa
pop
scas
or
or
add
iret
or
add
subl
out
inc
pop
in
stos
cmp
fistpll
repz
sti
sub
jle
mov
lock
pop
test
arpl
push
lsl
rorl
addr16
rcrl
cmp
test
and
repnz
push
daa
add
sahf
fcmovnbe
loopne
gs
xor
push
xchg
fistpll
push
lds
inc
std
and
loope
mov
in
das
nop
adc
adc
daa
in
mov
clc
mov
push
add
mov
push
ret
inc
cmpsl
mov
mov
pop
pop
ljmp
mov
push
xchg
jae
dec
jp
jb
jmp
pop
not
sbb
pop
sub
mov
shl
push
fisttps
xor
and
adc
leave
dec
cld
in
arpl
ret
xor
xor
das
adc
or
sarl
adc
cmpsb
xchg
inc
push
data16
cmp
pop
inc
je
std
mov
mov
mov
push
ds
nop
mov
add
shll
mov
cld
scas
add
pop
nop
jnp
cmp
mov
ja
sbb
dec
pop
outsl
inc
nop
mov
dec
add
dec
push
and
add
repnz
aas
jo
sub
pop
rorl
decb
or
addr16
sub
lods
and
adc
int3
outsl
xor
insb
scas
sahf
jne
loopne
mov
insl
adc
iret
les
cwtl
mov
push
out
sbb
scas
and
sub
add
cltd
pusha
adc
rcl
inc
mov
loope
xchg
jo
sbbb
xor
pop
or
dec
popl
xor
lcall
mov
mov
sbb
mov
ret
mov
jae
sahf
test
aam
push
push
mov
push
lods
ret
clc
jecxz
mov
in
adc
cmp
push
xchg
mov
int3
add
mov
fcomps
pop
jecxz
mov
lods
clc
xchg
mov
sbb
rorl
push
dec
daa
dec
and
ja
movsb
rcll
scas
ret
fwait
addr16
movsl
ror
cmpsb
pop
and
stos
ds
pop
cwtl
fs
test
or
bound
std
popf
enter
fdivs
cmp
mov
mov
ret
in
and
xchg
cmpsl
mov
jg
jns
push
scas
mov
mov
bound
lcall
pop
xor
cmp
loopne
shl
fisubrs
inc
xor
lret
sub
mull
xchg
jg
add
push
cmp
test
push
sub
adc
ss
push
scas
xor
and
movsb
clc
psadbw
mov
dec
pop
jnp
fisttps
int
inc
stc
aam
mov
mov
insb
clc
adc
jecxz
daa
cmp
sbb
jp
sarl
mov
js
ret
sub
and
cmc
gs
mov
aaa
xchg
adc
leave
mov
adc
adc
push
mov
cmp
lock
pop
and
loopne
rolb
ss
fwait
cmp
push
mov
pop
out
cmp
ret
pop
out
loop
push
ret
or
sub
xlat
pop
scas
int
lret
push
cli
pop
std
fs
inc
mov
test
test
sti
sti
fists
mov
inc
xchg
cmp
pop
bound
repz
jne
ficoml
cmc
cmp
scas
fstpl
or
movsl
fbld
sub
inc
jns
scas
mov
or
push
inc
repz
and
enter
inc
sar
or
adc
push
addb
adc
sbb
scas
pop
stos
leave
xor
jnp
xor
push
cmp
jbe
stos
rol
or
and
lea
rclb
lods
aad
jle
cld
shr
shrl
sbb
lea
and
inc
mov
sarl
aam
inc
imul
mov
repz
enter
cmpsl
stos
jo
dec
xor
mov
add
push
push
lds
sbb
stos
in
jbe
xchg
dec
or
add
xchg
push
dec
jb
in
andb
in
clc
cmpsl
add
jmp
xchg
xor
clc
jno
mov
cmp
ja
sub
xchg
stc
roll
aas
cmp
push
repnz
dec
sub
imul
and
out
out
flds
jmp
dec
jno
ret
stc
std
cmpl
adc
adc
add
push
jbe
aad
adc
rclb
dec
mov
aam
out
sbb
mov
sti
fnstenv
mov
jmp
mov
inc
cmp
stos
daa
dec
pop
arpl
es
lcall
mov
inc
cld
add
inc
ljmp
mov
pop
in
lret
xor
adc
xchg
dec
xchg
faddl
shl
adc
add
add
mov
loop
dec
push
sbb
sbbb
sti
pop
push
sbb
or
or
pop
xor
leave
mov
cmpsl
add
inc
call
subb
inc
mov
jge
out
jo
pop
lds
add
aam
mov
push
lcall
xchg
bound
xor
cmp
mov
or
pusha
push
dec
mov
inc
fidivrs
int
icebp
push
in
xchg
test
out
inc
xchg
test
mov
mov
test
mov
adc
cmpsb
pop
add
mov
mov
dec
test
pushw
adc
push
push
and
fistpl
sub
and
mov
pop
and
out
out
or
popf
dec
lods
push
adc
cmp
mov
loopne
sbb
scas
fdivrl
cmp
repnz
fs
cwtl
add
xchg
mov
lea
push
push
stos
mov
or
andl
pop
fisttps
dec
fwait
xchg
insl
aaa
lcall
xor
xchg
lahf
push
push
fistpl
stos
pop
sub
sbb
dec
jb
in
mov
mov
or
icebp
sbb
shrl
lods
xor
test
mov
repnz
push
ror
pop
shrb
lcall
inc
hlt
mov
inc
xchg
popa
in
xor
clc
je
sahf
cmp
jns
mov
mov
fistps
es
test
js
dec
mov
notl
inc
sub
icebp
cmp
mov
mov
pop
add
ljmp
sub
scas
xchg
dec
inc
cld
add
and
hlt
push
sub
pop
mov
jg
jle
les
jecxz
dec
insb
adc
and
jb
sti
test
and
push
or
stc
xor
jno
es
in
sub
push
xor
and
add
sahf
xchg
xor
mov
in
cmp
cs
flds
popl
push
mov
sub
inc
arpl
pop
jmp
scas
dec
out
pop
aas
inc
jne
jle
lret
pop
add
in
mov
adc
addr16
loop
pop
call
fcmovb
add
stc
test
lods
and
loop
jo
lock
fidivrl
dec
sub
popa
xlat
cmp
les
pop
clc
aaa
lret
inc
out
pop
jae
sub
cmpsb
sbb
mov
jecxz
pop
sbb
cmp
rorl
mov
adc
mov
fwait
mov
pop
loopne
jg
ds
imul
loope
mov
hlt
pop
mov
cmp
mov
or
mov
mov
jp
pop
pop
jae
sarb
lea
mov
aaa
pushf
test
mov
aas
rcrl
arpl
dec
subl
bound
sub
repnz
pop
sahf
sub
jmp
outsb
fs
das
and
jae
fs
xlat
jnp
lret
inc
cltd
or
fwait
or
dec
aam
lahf
xchg
jle
adc
insb
rcr
dec
push
xchg
out
cwtl
in
lock
movsl
in
inc
js
and
loop
dec
mov
shll
push
sub
adc
into
pop
lcall
cltd
sub
lahf
popa
add
loope
jno
adc
aad
gs
mov
out
stc
cmp
dec
movsl
lods
adcb
test
inc
mov
clc
imul
fadds
movsb
add
sbb
mov
stc
and
data16
in
push
inc
xchg
notl
test
inc
cmp
pop
cmc
sub
sbb
sbb
adcb
sub
push
fldl
inc
inc
mov
dec
jg
stc
inc
cli
xchg
sub
xlat
js
je
add
in
mov
shl
popf
inc
push
and
popa
mov
xor
add
movsl
in
xchg
pop
mov
clc
sub
xor
push
lods
ss
data16
mov
adc
test
aad
mov
std
inc
std
cmp
test
inc
inc
and
imul
mov
add
ret
xchg
adc
loopne
into
pop
push
sti
cli
enter
call
lret
popf
adc
movsl
push
ja
and
mov
adc
pop
mov
sbb
shrl
pushf
inc
lret
or
adc
je
cmpsb
push
imul
insb
testl
rclb
pop
data16
ljmp
jmp
adc
push
mov
insl
arpl
fsubrp
gs
mov
in
mov
xchg
inc
lea
int
inc
push
jnp
mov
int3
imul
sbb
mul
cwtl
and
jg
scas
aam
mov
cmp
sub
jg
mov
pop
mov
or
push
in
jmp
lods
adc
xchg
jne
push
sahf
es
inc
mov
in
ss
cmovno
jne
xchg
jecxz
xchg
jb
fwait
shl
dec
clc
pop
int3
fwait
adcb
dec
stos
stc
add
aaa
maskmovq
mull
insb
dec
movsl
enter
stos
int
cltd
scas
mov
out
es
cmc
push
addr16
testl
imul
inc
xchg
int3
jb
dec
movsl
jg
sbb
lods
push
stc
dec
mov
push
mov
sbb
dec
cwtl
test
xchg
outsl
mov
sahf
out
mov
mov
or
jb
jmp
mov
push
cmpsl
and
in
outsl
cmp
jp
add
lcall
mov
icebp
push
enter
add
xor
sub
push
mov
xchg
test
fidivrl
cmpsb
dec
jno
fistl
push
js
dec
and
push
dec
iret
iret
jb
dec
out
ja
adc
sbb
ficomps
jl
das
daa
movsl
add
outsb
push
push
aaa
inc
adc
int3
mov
mov
mov
les
inc
mov
pop
pop
fcmovne
out
mov
scas
iret
sahf
lock
fisubrl
jne
loop
push
push
sbb
cwtl
cmp
lret
push
pop
cmp
fimull
mov
lea
stos
je
out
sub
outsb
jl
push
cmp
imul
dec
in
dec
cmp
or
cmp
and
mov
mov
out
mov
ljmp
cwtl
iret
es
mov
test
stc
sub
lods
ljmp
iret
movsb
icebp
cmpsb
add
aaa
cs
test
xchg
pop
outsb
outsl
shll
jle
cwtl
punpcklwd
and
mov
in
mov
das
insl
push
rorl
cmp
or
mov
lret
lea
outsb
push
call
add
inc
adc
xor
add
arpl
dec
push
icebp
shlb
cmp
imul
jecxz
movsb
minps
jl
jo
shrl
sub
mov
pop
push
xchg
or
and
test
cmp
jg
adc
cmpsb
push
jge
rorb
and
out
insl
movl
insb
adc
sub
jbe
scas
scas
fwait
sbb
sbb
enter
popa
sbb
movsl
hlt
adc
add
sbb
int3
int
fistl
dec
xchg
inc
lahf
push
push
add
je
test
jbe
lods
and
cltd
or
std
popf
mov
xchg
cli
imul
rcll
jmp
xchg
lea
jne
mov
mov
stos
inc
sbb
lods
jl
or
je
or
add
cld
arpl
mov
call
mov
daa
int
mov
dec
mov
sbb
test
enter
mov
xchg
push
pop
sbbl
data16
imul
push
push
or
in
add
and
test
push
mov
in
ret
push
xor
das
push
aam
push
js
mov
xchg
nop
inc
test
push
or
repnz
ret
mov
jne
lds
cmpsl
les
mov
mov
push
mov
cmp
out
and
dec
mov
xchg
jp
mov
dec
jmp
dec
inc
mov
ret
and
or
sub
mov
cltd
arpl
mulb
jb
out
jnp,pt
add
pop
mov
in
negl
in
jg
inc
addr16
or
and
mov
and
and
jg
mov
jle
add
jl
mov
shll
rcrb
sbbl
jnp
test
dec
add
inc
pusha
rorb
jno
xchg
clc
lods
scas
push
outsl
cmp
repz
and
add
popf
mov
lcall
mov
jbe
imul
sub
mov
pop
push
cmp
jns
mov
into
sbb
sub
ret
sub
nop
stc
stos
rcrb
sub
inc
jp
cwtl
jns
push
cld
xor
mov
movsl
cpuid
jle
jl
jp
enter
sti
lahf
mov
sahf
loope
cmp
adc
mov
cmp
jnp
mov
mov
jge
push
mov
fdivr
pop
xchg
pushf
xchg
int
and
add
mov
out
jl
mov
enter
mov
xlat
mov
je
out
push
in
jo
lret
fbld
ja
xor
add
jne
pop
cmc
std
pop
xor
sbb
xor
adc
xor
enter
xor
popa
cmpsl
lods
inc
dec
imul
pusha
jbe
ds
xchg
jecxz,pn
int
repnz
mov
add
dec
std
and
call
std
lahf
loope
icebp
imul
lahf
push
es
xor
cltd
pop
ss
push
iret
mov
out
inc
lods
leave
pop
mov
enter
or
cmp
rcll
into
add
push
mov
sub
push
ljmp
pop
stos
pop
test
xor
mov
dec
dec
out
fdivrs
std
mov
mov
shll
pop
aaa
xchg
add
test
mov
xchg
mov
jge
in
jg
fdivr
out
loop
jecxz
mov
adc
xchg
cmpsl
inc
test
jmp
es
lods
sub
push
push
ss
or
pop
cmpsb
aam
jg
push
sbb
xor
push
fistpl
xor
insl
and
leave
xor
adc
fstl
push
pop
shrl
test
repnz
jg
scas
mov
inc
out
sbb
in
aaa
in
int
jp
aas
sbb
dec
push
insb
add
inc
dec
jne
mov
sub
ds
shlb
fcoms
mov
enter
sahf
adc
test
test
mulb
dec
jo
xchg
pop
jge
es
jge
enter
mov
and
push
push
mov
adc
sub
movsb
mov
cli
call
sahf
pop
addr16
jb
rcrl
cmp
and
add
imul
je
inc
ds
push
filds
jae
pop
pop
icebp
xchg
cwtl
jl
xlat
pop
adc
bound
ret
ss
repnz
cltd
test
adc
stc
mov
into
stos
and
aad
pushf
adc
push
push
pop
scas
cmpsb
adc
sarb
push
insl
push
cmpsl
pop
cmp
add
lret
push
sbb
fisubrl
pop
add
out
jg
lods
subb
mov
imul
or
out
xlat
lcall
ds
mulps
lock
imul
jg
sbb
jl
fadd
add
add
dec
jo
push
aad
mov
push
push
dec
xchg
sbb
cmpl
jmp
jg
outsb
nop
mov
add
roll
int
cmc
cmpsb
xchg
rcll
mov
push
inc
idiv
iret
and
mov
and
cwtl
outsb
ds
arpl
movsb
push
and
std
pop
push
adc
nop
stos
pop
movsb
bound
dec
xor
push
sarb
popf
adc
mov
repz
mov
cwtl
jl
test
inc
pop
shlb
jge
xor
adc
or
mov
or
test
gs
inc
notl
mov
sub
jns
bnd
popf
push
test
imul
and
add
popa
mov
pop
sbb
stos
mov
js
pop
xchg
sbb
xchg
lock
mov
xchg
sub
lcall
inc
rcr
sub
cld
cmp
adc
imul
dec
or
fucom
popa
loopne
sub
inc
lods
xor
xor
mov
ds
sbb
xchg
cld
jmp
or
and
or
in
sbb
xor
sbbl
push
push
pop
movsl
inc
cwtl
jno
xlat
scas
xchg
stc
sbb
jo
jecxz
loope
test
cwtl
scas
push
push
movsb
xlat
xchg
xor
fcmovne
add
movsl
jae
jmp
pop
mov
adc
ror
sub
cld
cltd
dec
sub
mov
lods
in
mov
cmp
sbb
sub
jo
add
push
or
and
mov
cs
shll
js
add
loope
ds
cltd
cltd
frstor
in
xchg
mov
pushf
xchg
mov
push
movsb
cmp
int3
push
jmp
jns
inc
aaa
lahf
inc
out
mov
popa
fistpl
inc
push
out
clc
cmp
adc
xchg
sti
lods
push
and
sarb
ds
mov
mov
addr16
loopne
dec
mov
sub
test
cmpl
cli
pop
xor
in
xor
xor
popa
pop
dec
cld
out
push
pop
xor
mov
jnp
dec
cmp
in
mov
call
test
int
arpl
add
subb
dec
cltd
ds
cli
lret
jg
jno
je
cwtl
sub
push
loopne
add
push
cwtl
and
addr16
or
stc
enter
pop
enter
pop
mov
es
outsl
mov
sub
repnz
hlt
jne
fbld
sbb
xor
out
adc
test
sub
psubusw
les
cmp
add
in
mov
sub
cmp
xchg
mov
cmpb
xchg
fbld
enter
aas
adc
inc
test
mov
or
jp
insl
in
ret
cmp
dec
or
pusha
jnp
xchg
mov
mov
in
cmp
fsubl
icebp
mov
mov
jnp
jp
lahf
dec
call
ret
push
jp
or
movsb
pop
push
fisubrs
gs
aad
inc
push
mov
jb
lock
push
scas
mov
mov
fistpll
and
shll
xchg
mov
mov
aaa
ret
cld
sub
cmpsb
in
out
js
int3
lret
rolb
rorl
inc
leave
sub
jl
push
xor
test
xor
adcl
xor
mov
inc
or
loope
mov
and
mov
pop
ss
xor
mov
jbe
or
sbb
rcrl
or
fisubs
scas
adc
push
push
adc
inc
lea
aad
and
push
push
add
inc
jns
dec
add
stos
cmp
gs
scas
push
out
testb
mov
in
sbbl
icebp
cld
or
pop
stos
lret
movsb
mov
lds
bound
arpl
inc
or
rorb
mov
sar
lret
xchg
call
arpl
adc
test
jb
inc
fmull
stos
ret
xlat
lods
hlt
jae
xchg
cld
shlb
mov
mov
add
lods
es
pop
dec
or
add
rorb
dec
push
jno
lret
xchg
push
ja
cmpsl
xchg
ss
dec
rep
add
and
sbb
pushf
dec
jmp
xchg
sbb
and
sub
repz
out
jge
lods
call
in
divps
scas
push
add
rcr
mov
push
sub
sub
inc
push
popf
data16
cmp
add
out
insb
fwait
mov
dec
sbb
mov
pop
jbe
ss
sbb
sbb
inc
bound
cltd
jb
ja
ljmp
add
outsl
fcmovnu
or
jecxz
ficomps
xor
jnp
data16
pusha
or
stos
into
mov
pop
ficomps
test
cli
add
dec
mulb
ret
ljmp
lret
outsb
sbb
push
cltd
pusha
and
xor
mov
inc
push
jl
gs
xorb
pop
sub
scas
dec
mov
mov
xor
in
ret
fwait
lock
inc
add
push
nop
outsb
inc
ret
repz
imulb
cld
lcall
cli
loopne
loopne
ficoms
loope
push
hlt
faddl
das
mov
xchg
cmp
pop
icebp
xor
shll
pop
and
insb
je
xor
inc
sbb
jp
and
mov
mov
push
scas
fcomip
int
fwait
call
inc
pop
jmp
mov
push
jnp
enter
xlat
ficompl
cs
pop
push
and
int3
sbb
cmp
inc
xor
outsl
mov
xchg
repz
pop
js
mov
mov
ror
add
scas
push
sub
jo
in
lods
inc
add
adc
repnz
mov
add
repnz
mov
cmc
ja
xchg
ds
and
daa
shll
ja
pushf
mov
adc
pop
in
or
aas
or
sub
test
imul
mov
sbb
pop
sbb
in
adc
mov
xor
sbb
scas
in
out
xchg
loope
xor
inc
lods
xchg
sub
or
negl
pushf
add
mov
add
scas
jge
xchg
loopne
out
outsl
xor
mov
mov
rorb
inc
xchg
xorb
mov
or
sbb
cwtl
lahf
pusha
pop
ret
cmpsb
push
and
ret
xor
out
pop
xor
jae
dec
mov
inc
adc
inc
insb
push
push
sub
cmp
iret
stc
stos
data16
lcall
inc
int
sub
pushl
and
xor
inc
push
out
into
orb
xor
sub
mov
sbb
pop
outsl
inc
xchg
stos
xchg
insl
xor
adc
jnp
cmc
xor
and
or
adc
push
push
cmpsb
adc
sbb
mov
int3
jno
push
pop
ja
cwtl
push
and
xchg
aad
sub
xor
pop
fists
pop
popf
call
int
mov
imul
mov
lock
push
xchg
mov
sub
fisubs
fsubrl
pop
fiaddl
ja
addr16
mov
or
icebp
movsb
pop
imul
xor
cmpb
adc
mov
pop
jmp
sbb
mov
call
pop
mov
pop
cltd
ss
dec
sbb
pop
pop
mov
lcall
mov
mov
fmulp
dec
push
or
inc
jp
inc
dec
jmp
adc
xorb
lock
hlt
add
lods
dec
test
cmp
adc
push
dec
mov
and
push
int
adc
jae
cs
repz
pop
pop
adc
out
insb
scas
jmp
mov
std
push
fmull
cmp
lea
pushf
nop
mov
xchg
fwait
inc
mov
pop
in
cmp
dec
pop
icebp
sub
pop
mov
fidivrl
outsl
movsl
cmp
push
nop
pop
js
pop
pop
daa
or
cmp
es
imul
sarl
xor
dec
mov
test
fisttpll
sub
sbb
xlat
sub
popf
add
sbb
aaa
pusha
xor
add
mov
xlat
pop
cmp
mov
push
fidivrl
mov
mov
add
cmc
jle
push
mov
iret
data16
cli
test
cwtl
and
fsubrs
not
or
mov
inc
push
mov
int3
enter
imul
rclb
lret
mov
jp
lcall
cltd
xchg
adc
cmp
test
jmp
xchg
cmpsl
push
jp
insb
pop
fsts
dec
in
loope
inc
sbb
lds
inc
in
cmp
mov
mov
js
mov
dec
sbb
sub
xchg
or
xor
xchg
dec
fmul
mov
xchg
lock
iret
push
out
mov
mov
pop
xchg
sbbl
mov
sub
cmpsl
add
loopne
test
mov
popa
pop
aad
fidivrs
test
ret
push
inc
inc
test
cmpb
loope
clc
imul
cmp
sub
and
jnp
xchg
outsl
das
sub
pop
mov
sub
loope
sahf
cli
movsl
popa
xor
pop
pop
and
gs
sbb
lret
xchg
mov
arpl
fldl2t
push
out
jae
or
and
stc
mov
jae
jns
xor
and
test
ss
jp
je
mov
mov
into
cmp
inc
punpckldq
or
leave
and
mov
mov
lock
popa
push
xchg
rolb
leave
cwtl
mov
scas
cmc
aam
test
push
xlat
and
fdivl
adc
arpl
ds
sbb
sub
pop
aaa
sbb
jge
mov
inc
jle
jnp
lods
cmp
push
repnz
xlat
cmpsb
adc
push
sarl
cmpsl
inc
fistpl
cmp
jp
lret
push
clc
adc
mov
shrl
daa
shrb
xor
stos
loop
jle
push
imul
test
pop
incb
popf
sti
pop
enter
mov
cmc
pop
test
push
test
jmp
in
push
repz
mov
or
je
fwait
pusha
insb
stos
test
lcall
scas
ret
mov
mov
scas
and
mov
sub
sbb
call
icebp
pop
test
aaa
popf
fsubs
shrl
daa
lods
ds
or
push
fistpl
out
pop
fnsave
shll
lea
aas
mov
inc
push
sub
out
fdivrs
dec
loopne
adc
flds
sbb
push
sub
test
pop
fldt
test
out
and
mov
movlps
sarb
outsb
stos
add
jb
xchg
or
in
fistpl
inc
shlb
pop
adc
push
mov
cmp
out
pop
cld
add
fsubrp
movsl
mov
mov
sbb
and
or
fldl
gs
adc
das
pop
sub
test
inc
sti
aaa
push
mov
fnsave
sbb
sbb
sbb
mov
fdiv
cltd
xchg
xchg
mov
loopne
ret
jmp
push
cmp
jbe
cmpsl
in
ljmp
sbb
lret
cli
pop
in
movsl
outsl
les
mov
js
jo
mov
arpl
fs
xchg
and
mov
call
pop
mov
jl
push
jns
dec
mov
jo
mulb
lea
jl
arpl
sar
ds
inc
pop
mov
and
test
mov
dec
stos
pusha
and
inc
adc
jmp
or
mov
jbe
insb
sahf
mov
jne
pop
sbb
ret
adc
xchg
fdivl
sbb
test
jecxz
int
add
jg
dec
divb
clc
mov
push
rep
adc
pop
sbb
out
mov
rcll
adc
lods
sbb
jg
sub
or
pop
pop
insl
lret
xor
sahf
xchg
in
mov
in
inc
xlat
cmp
stos
scas
out
sub
repz
add
popw
pushf
popf
sub
je
outsb
mov
cmpb
lods
movsb
pop
sbb
gs
xchg
sbb
inc
nop
and
notb
ljmp
loop
in
stos
cmp
xor
and
dec
dec
jb
or
popf
xchg
mov
ss
add
xor
cli
divb
imul
xor
fcoms
in
xorb
mov
mov
into
aas
ds
js
lods
insb
mov
jno
out
mov
pop
adc
shll
push
orl
pop
pop
enter
int3
jp
push
hlt
mov
movsb
fsubrs
xchg
sub
sub
xor
fstpt
inc
mov
push
iret
sub
cmp
call
arpl
call
xchg
scas
xchg
and
shr
sbb
test
sub
shl
xor
xor
rcrl
jmp
and
jb
push
push
mov
in
cmpl
mov
mov
cpuid
mov
add
sub
add
and
mov
incb
or
scas
add
movsl
jg
ss
add
dec
lcall
mov
and
or
stos
xor
outsb
inc
sub
xchg
test
pop
outsl
push
shll
push
mov
mov
pop
pop
sbb
imulb
xor
mov
mov
ljmp
dec
loopne
mov
lock
aas
pop
sub
lods
pop
hlt
roll
test
call
nop
dec
mov
mov
add
jg
negb
fiadds
enter
xchg
jns
sbb
add
rol
paddq
sub
xchg
cmc
add
scas
aad
add
sbb
add
add
jbe
mov
shrb
push
jl
xchg
jp
xchg
dec
cmp
pop
dec
jns
addr16
movsl
or
into
cmovle
jno
mov
hlt
and
mulb
in
popa
xor
inc
sub
push
dec
fisttpl
push
push
jno
iret
out
rorl
push
xchg
cltd
out
mov
movsl
sahf
jl
pop
out
rep
fnstcw
cmp
dec
jmp
ljmp
mov
xor
mov
loopne
ljmp
insb
cmp
shlb
rcr
sub
xchg
fcoml
mov
jmp
addr16
inc
cmpsl
mov
lcall
add
push
test
cmp
movq
loop
xchg
dec
pop
movsb
add
mov
les
pop
jns
jge
and
inc
adc
fldenv
addb
ja
add
push
cmp
jg
add
fstpl
nop
push
adc
sub
test
add
ret
xchg
in
test
outsl
cmc
jns
sarb
xor
arpl
inc
nop
xchg
mov
or
cmp
push
cltd
leave
mov
or
dec
jl
out
enter
pushf
bound
or
add
jmp
test
mov
repnz
mov
stos
xor
xchg
pop
cmp
cltd
es
mov
and
pop
pop
cmp
sub
pop
mov
xchg
push
pop
push
jecxz
shr
aas
cmp
xchg
xor
call
pushf
adc
lea
outsl
pop
test
scas
push
scas
icebp
jmp
mov
cmpsb
cmp
or
movsb
xchg
out
out
loop
jge
xchg
idivl
mov
push
or
std
lods
dec
xor
lds
jmp
cld
pop
js
mov
pop
mov
cmpsl
cld
cmp
dec
mov
add
aam
icebp
cld
add
mov
mov
bound
sbb
repz
ds
add
mov
stos
adc
xchg
test
and
xchg
out
xor
pop
fsubl
test
ret
jle
dec
xor
sarb
lds
testb
xchg
cmp
inc
xchg
xor
popf
stc
movsb
jne
mov
mov
ret
in
cwtl
mov
into
sbb
cld
mov
int3
dec
pusha
or
mov
adc
ljmp
pop
mov
je
addr16
into
xchg
jmp
out
adc
mov
xchg
sahf
fdivs
sbb
inc
xor
lcall
or
cmp
insl
nop
jmp
movsb
xor
addl
inc
fnsave
pop
jnp
pop
jp
in
inc
xchg
xlat
dec
add
pop
jo
enter
int
in
sub
pop
insb
adc
dec
or
inc
cmp
ja
imul
pop
adc
push
addr16
xchg
ljmp
xchg
cmp
add
das
mov
outsb
inc
mov
mov
cmp
or
mov
fcomps
pop
dec
mov
jge
cmpsb
hlt
out
and
lret
xlat
popaw
mov
mov
sbb
mov
add
cmp
mov
cmp
jb
shl
stc
fimuls
rcrl
repz
popf
inc
icebp
es
mov
lds
lahf
sub
out
jmp
loopne
es
sti
pop
ret
or
xchg
inc
mov
sub
jns
mov
push
out
pushf
aaa
mov
cmpl
nop
test
lret
jp
mov
in
shlb
dec
pusha
mov
mov
pop
out
xor
std
or
xor
add
jno
inc
dec
jle
sti
pop
enter
cmpl
lea
cmp
fmull
push
mov
mov
nop
or
negb
mov
pop
mov
jp
mov
test
sbb
add
jge
xchg
out
rorl
fdivl
dec
xchg
incl
test
add
lea
cmp
pushf
subb
outsl
fcoms
cmpsb
push
dec
rcrb
pop
and
test
push
sub
sti
mov
ss
enter
jmp
push
mull
xlat
les
inc
lcall
in
mov
jmp
repz
ss
lock
fsubrp
in
repnz
ficoml
mov
test
mov
xor
cmova
mov
repz
jecxz
sub
arpl
adc
test
or
mov
cs
add
ret
out
int
lcall
fnstsw
inc
cmp
inc
sbb
dec
push
sub
ja
nop
ljmp
jns
out
push
icebp
cmpsl
jne
imul
mov
or
popa
mov
aas
into
icebp
rcr
xchg
out
dec
mov
ror
mov
push
lods
add
pop
rcrb
leave
sbb
in
xlat
sbb
mov
mov
jmp
or
loope
ljmp
jo
cmp
cmp
adc
jno
popf
mov
add
jmp
sbb
xchg
cli
sbb
add
aaa
xchg
mov
test
cli
cmpsb
sarb
iret
jp
or
lahf
jge
lret
int3
mov
pop
scas
jbe
cmp
sbb
xchg
and
or
int3
xchg
xor
mov
cli
sbb
ror
mov
fwait
popf
pop
push
mov
mov
xchg
aaa
scas
stos
pop
lds
jnp
lock
les
and
mov
push
xchg
and
idiv
mov
mov
pop
pop
sbb
xchg
sub
sub
sub
clc
mov
scas
lcall
dec
xchg
and
cmp
adc
xchg
fdivrs
mov
add
push
shlb
in
pop
and
sub
in
aam
sub
je
push
mov
and
fcoml
adc
lock
cmpsl
push
js
pop
ja
and
xor
push
jae
xchg
pop
sti
mov
cmp
inc
push
insb
sbb
xchg
icebp
lret
les
fcmovu
sti
sahf
ss
loope
sbb
xor
je
xor
sti
pop
inc
dec
or
and
inc
adc
int3
pop
mov
arpl
sti
pop
pop
push
xchg
stos
adc
dec
jne
movsb
pop
push
adc
mov
mov
and
sti
in
test
lret
sub
push
and
popf
push
sbb
xlat
inc
pusha
or
inc
stos
in
dec
fwait
xchg
jno
mov
add
pop
pop
addr16
push
jmp
mov
sbb
in
pop
adc
xchg
ficompl
cmp
inc
fucomp
gs
lret
sbb
mov
lds
mov
inc
test
daa
lds
ss
lods
insb
pop
cmp
insl
mov
or
andb
cmp
add
popf
fcomps
das
leave
je
faddl
mov
into
arpl
pop
lea
loope
adc
pop
mov
cmp
xor
cmpsl
jl
add
jo
fnsave
bound
pop
scas
fwait
pop
repz
inc
mov
pop
insl
outsl
add
ret
sub
in
cmpsb
repz
xor
or
in
adc
data16
pop
or
sbb
mov
rcrb
repnz
test
cmpsl
in
sarl
icebp
shrd
daa
stc
mov
add
lea
movsl
mov
dec
out
dec
out
cmpsb
xchg
push
rcrb
and
lahf
pop
dec
dec
mov
notb
pop
pop
add
outsl
scas
cwtl
test
add
sbb
jmp
int3
iret
cmp
xchg
addr16
mov
pop
in
lds
call
das
jb
movb
or
in
sub
xchg
int
mov
add
rcl
jae
faddl
in
push
daa
xor
mov
mov
pop
or
jecxz
scas
addr16
cmp
push
sbb
jecxz
bound
sub
inc
fisubrs
jnp
push
inc
enter
inc
jp
sub
sub
or
leave
fidivrs
fstpt
add
ja
sbb
into
mov
jp
ljmp
imul
sbb
mov
bound
cltd
data16
jnp
in
sbb
mov
mov
sbb
les
inc
mov
xchg
ja
pop
sub
mov
push
das
outsl
jbe
xchg
cmp
das
ret
iret
mov
xchg
pop
sbb
dec
pop
xchg
add
xor
inc
push
adc
test
pop
xorb
dec
or
fcom
das
jnp
aaa
cmc
aas
aad
or
fildl
inc
or
pop
loope
push
test
cs
fcomps
xchg
dec
inc
mov
jne
cmp
or
aam
sub
pop
scas
pop
mov
pop
ljmp
subl
xor
push
ds
out
mov
jne
mov
repnz
iret
xor
mov
lds
lcall
dec
and
and
addr16
mov
mov
in
into
mov
mov
insl
cmp
sbb
cmpsl
cmp
popf
jg
sarb
mul
shrb
or
push
lret
jg
loop
jmp
push
dec
cmp
dec
mov
xchg
adc
into
hlt
sahf
pop
psubd
popf
add
adc
lea
sub
fsubr
sahf
fwait
sub
repz
iret
add
aas
jmp
fadds
sub
jbe
xchg
sub
pop
imull
mov
outsl
int
xchg
test
imul
hlt
xor
jbe
adc
adc
jb
inc
and
sbb
insl
inc
and
sub
mov
xchg
xor
add
lds
sahf
cwtl
sbb
xchg
mov
scas
jne
cltd
insb
mov
sbb
cmpsb
aad
xor
pop
negb
fstpt
loop
dec
roll
mov
add
ljmp
das
push
cwtl
add
dec
mov
outsb
lods
jo
and
mov
xchg
cli
mov
dec
cmp
fistpl
insb
std
or
mov
arpl
push
and
or
mov
dec
out
or
fildll
jp
adc
push
push
push
es
in
lea
adc
cmp
mov
push
loop
pusha
dec
jno
lcall
cs
out
pop
pop
loope
mov
faddp
add
and
ret
jmp
nop
mov
nop
sbb
sbb
inc
sub
mov
add
lcall
lds
repz
outsb
jbe
push
xor
iret
mov
mov
mov
aad
aad
ss
aam
adc
sub
mov
cltd
and
lahf
xchg
arpl
dec
mov
fsubr
fiaddl
lea
inc
imul
in
gs
push
sbb
popa
mov
mov
xchg
movsl
ljmp
das
push
insl
jnp
add
pop
daa
cltd
xchg
xor
repz
sbb
sub
push
mov
cld
in
sbbl
push
adc
dec
push
and
das
in
test
call
inc
and
cwtl
fisttpll
push
bound
stc
add
mov
adc
sbb
sub
lret
pop
fnstenv
movsl
fldcw
cmp
cmpsb
lahf
insl
mov
test
dec
fdiv
icebp
sbb
jg
int
lock
cmpsl
jg
mov
addr16
mov
and
jmp
aad
jbe
mov
push
and
cmp
mov
mov
dec
pop
xor
jg
jo
push
mov
sub
es
push
sbb
xchg
fwait
lret
repz
xor
inc
xchg
pop
icebp
in
jg
xlat
sbb
add
jae
mov
aas
std
sub
test
inc
add
in
xor
repz
pusha
fnstcw
push
add
sub
cmp
in
ds
movsb
mov
addr16
push
aad
bound
inc
push
ja
addr16
icebp
dec
gs
ret
pop
sbb
aaa
test
je
add
push
scas
xchg
lds
movsb
jb
out
pop
fstl
pushf
psllq
aam
mov
shlb
cmp
adc
in
pop
push
mov
divl
fnstcw
cmp
test
or
fnstenv
hlt
dec
movsb
or
pop
in
dec
sbb
frstor
testb
scas
stos
add
daa
leave
jo
lods
dec
loop
mov
pop
arpl
mov
dec
or
test
jo
inc
rep
aaa
xlat
das
mov
jnp
out
mov
arpl
push
pusha
fildl
dec
jae
dec
mov
repz
sub
pop
push
xchg
insb
or
movsb
pop
scas
add
in
inc
fcmovbe
fsubrs
push
inc
frstpm(287
stc
xor
icebp
sbb
call
cltd
cmp
out
jg
xor
popf
out
adc
loope
push
fsubrs
in
ffree
cmp
mov
cmp
clc
sbb
popf
push
sub
cli
sar
in
cmp
loope
es
cmpsb
cmp
mov
sub
jp
sbb
and
push
sbb
mov
sti
adcl
shl
adc
fdiv
sbb
mov
push
cmp
aaa
stc
and
mov
movsb
imul
xor
inc
cs
dec
sbb
hlt
cmpsb
cli
push
icebp
add
jmp
jmp
mov
dec
lret
bound
xor
mov
jo
mov
sahf
pop
test
lcall
sub
fmull
inc
xor
xchg
les
cmpsb
push
mov
pusha
sub
cwtl
js
int
pop
pusha
leave
mov
and
push
push
inc
dec
cmp
or
imul
incl
pop
cli
mov
sub
dec
cmp
mov
call
iret
xor
stos
jb
sbb
shrb
repz
adc
adc
jle
pop
mov
or
adc
in
or
mov
test
jbe
into
pop
lods
pop
enter
rolb
into
inc
aaa
in
aaa
jae
push
push
cld
or
inc
and
jne
push
and
out
jo
push
std
cwtl
rol
jg
je
mov
add
lret
xchg
pop
adc
jmp
xlat
cltd
fwait
pop
mov
cmpsb
push
pop
loop
add
in
in
xor
mov
mov
cs
mov
add
leave
cmp
cltd
xor
scas
mov
in
popf
adc
rcrl
lods
cmpsl
scas
in
push
pop
cltd
inc
adc
daa
mov
mov
leave
inc
out
cld
lret
xor
mov
or
out
out
jne
push
dec
addl
xor
mov
cmp
inc
fwait
fwait
mov
inc
jo
iret
push
sub
inc
out
sub
xchg
xor
lcall
mov
call
mov
in
gs
in
cli
xor
jg
xor
dec
xor
xor
mov
aaa
daa
int3
inc
push
mov
xchg
inc
xor
pushf
rolb
dec
push
or
insl
imul
aam
mov
data16
ds
comiss
fwait
bts
sbb
loope
cmpsl
inc
scas
loop
in
xchg
scas
jns
jl
sarl
inc
push
dec
mov
sbb
rcll
cmp
mov
in
sbb
scas
sub
add
and
lahf
lret
in
pop
scas
xlat
dec
test
adcl
jb
divl
lock
into
dec
xchg
jne
stc
movl
mov
inc
in
int3
es
test
mov
inc
xchg
push
xchg
in
jle
jle
add
scas
xor
mov
pop
mov
fstpt
bound
mov
xchg
sbb
loop
ja
inc
xor
inc
rsqrtps
lods
mov
popa
and
push
ljmp
popf
push
shl
sahf
fadds
incb
pop
pop
xorb
jp
movsl
xlat
xor
fcoms
jo
fsts
pusha
cli
pop
out
cmp
push
movsl
and
lock
movsb
ss
xor
ds
aam
mov
aaa
push
mov
mov
stc
pop
cmp
jg
ret
das
out
imul
neg
fwait
adc
inc
xlat
xchg
and
lret
dec
cmpsb
jb
dec
jmp
or
cwtl
das
xchg
loope
fs
sbb
ret
lods
dec
sub
rorb
add
dec
test
out
mov
fdivr
arpl
sbb
mov
mov
cld
popl
push
jle
daa
push
push
or
xchg
dec
cmp
test
xchg
ret
jns
leave
xlat
inc
dec
leave
mov
push
mov
fcmovu
les
mov
ror
imul
pop
aaa
imul
push
js
pop
pusha
adc
mov
gs
adc
lret
xor
shll
dec
pop
xor
xor
stos
shlb
repz
pop
iret
sbb
out
pushf
jl
lret
jp
repz
pop
pop
stos
ljmp
leave
mov
imul
loop
out
ljmp
add
mov
xchg
das
dec
fmul
ljmp
cmp
pop
sahf
dec
dec
fistpll
sbb
test
inc
dec
jno
mov
sti
cld
dec
imul
nop
sub
sub
fldcw
adc
mov
jbe
cmp
pop
inc
repz
pushf
ljmp
iret
pop
ljmp
cltd
stos
dec
out
cli
add
arpl
cmp
jle
jb
cmp
cmp
stos
sar
xchg
in
mov
aam
mov
aad
movl
test
or
popa
scas
test
mov
mov
mov
push
stc
testl
out
and
mov
gs
mov
inc
pop
xchg
movsb
sbb
cmp
stos
inc
pushf
add
pushaw
mov
or
xlat
test
mov
jns
das
popa
insb
loopne
inc
inc
push
adc
cmp
mov
jb
shlb
or
aad
adc
mov
mov
call
clc
or
cli
cmpsb
push
call
xor
jbe
jns
mov
leave
ss
call
pop
jecxz
inc
cs
sbb
push
cmp
pop
cld
loopne
stc
jl
cld
insl
cmp
cld
mov
push
or
inc
dec
cmpsb
clc
lcall
xor
jmp
dec
mov
mov
inc
add
mov
dec
popf
sub
and
scas
add
ror
push
mov
dec
inc
ss
cmp
loope
icebp
pop
adc
pop
cmp
inc
inc
jp
xor
clc
sbb
bswap
jmp
int3
sbb
xorl
scas
push
sbb
mov
jecxz
jmp
dec
push
in
dec
push
pusha
es
or
add
rcll
inc
loop
das
aad
fwait
sbb
mov
xchg
xchg
mov
sbb
aaa
jl
jl
popa
pop
repz
pop
clc
pushf
xchg
test
xchg
or
sub
sub
int
clc
cmpsb
call
int3
xor
aam
sbb
jb
pop
or
gs
add
sub
pop
das
out
dec
mov
sahf
ja
add
mov
fsub
and
das
popf
push
movl
lahf
testl
stos
mov
jns
adc
stos
aam
mov
sbb
and
aaa
out
inc
adc
sub
jne
stos
push
pop
lea
stos
fdivl
mov
jae
sub
sbb
pop
cmp
faddl
outsb
out
iret
mov
lock
daa
orl
shlb
xchg
xchg
push
and
push
cmpsb
and
mov
inc
push
shl
in
xchg
clc
xor
in
cmp
xchg
mov
push
rcll
push
cld
mov
push
cvtps2pd
pop
aam
jae
sahf
xor
cmp
sub
mov
mov
adc
testb
pop
jne
test
lret
div
push
xchg
clc
jle
rolb
sbb
xchg
loop
adc
jbe
out
rcr
push
xor
sub
sar
mov
aad
pop
mov
test
mov
mov
add
push
jp
insb
mov
xor
lods
mov
push
out
jl
push
shlb
adc
or
frstor
rcl
mov
push
push
cmp
call
sub
je
stos
mov
outsb
add
repz
test
or
lods
pop
aas
mov
hlt
pop
mov
sub
push
movsl
xor
dec
lds
out
pop
add
mov
adc
dec
jns
push
jp
add
adc
clc
sub
xchg
jae
pushf
pop
mov
pop
push
fdivrl
ds
xchg
sbb
ror
std
les
push
stc
pop
xor
push
ret
repz
xor
push
sbb
push
add
sub
test
jns
imul
push
push
adc
xor
gs
mov
push
data16
cmp
pusha
cmp
loopne
loope
ror
gs
outsb
xchg
mov
mov
incb
divb
cmp
mov
xor
push
and
fwait
inc
cli
pop
hlt
popa
adc
add
mov
aam
fcmovne
jns
aad
lret
sbb
imul
mov
add
jle
lcall
test
xorb
or
jne
mov
push
push
or
cmp
add
addr16
dec
mov
inc
pusha
push
lea
hlt
fstp
fwait
adc
ret
ss
push
hlt
mov
hlt
lods
dec
dec
mov
out
loop
mov
mov
or
arpl
jmp
mov
out
push
mov
mov
rorb
pop
adc
xor
nop
lret
xchg
mov
cltd
shl
test
pusha
and
mov
xchg
or
out
push
jmp
sub
fistpll
fwait
call
add
movsb
das
mov
mov
in
int3
int3
pop
cmp
xchg
xchg
je
dec
test
add
addr16
ret
fstps
or
loope
movsl
les
dec
adc
sub
mov
fsts
mov
mov
lcall
decb
cmp
and
mov
adc
adc
fdivrl
fstpl
jl
movaps
push
xchg
test
and
lods
fisubrs
insb
ja
add
shll
and
movsb
push
lahf
xchg
inc
push
xor
jg
mov
and
xchg
pop
outsb
cmp
pusha
in
jne
pop
and
and
cmpsb
mov
cmc
stc
or
xchg
rorl
lods
jmp
iret
es
and
xor
sub
sub
pop
add
js
in
les
out
dec
xor
add
leave
movsl
pop
mov
or
jbe
scas
xchg
setbe
fcomip
pop
aad
or
push
scas
push
fcompl
pop
test
adc
ret
add
xchg
notl
test
jmp
xchg
clc
mul
jo
subl
jbe
aas
xlat
aad
fimuls
lods
mov
push
jl
adc
add
pop
icebp
orl
push
jl
jge
xor
xor
outsb
jp
sahf
stos
dec
and
daa
and
fldenv
mov
pusha
cli
mov
pop
xor
ja
lret
mov
sbb
mov
in
mov
inc
test
test
test
ficomps
repnz
push
fcomip
sahf
xchg
dec
hlt
mov
mov
jmp
pop
fdivrp
push
jecxz
stos
lret
adc
fisttps
std
loop
stos
rolb
adc
roll
movsb
add
icebp
mov
cmpsl
cli
mov
push
mov
pop
inc
sahf
mov
mov
sbb
mov
dec
into
dec
push
pop
loopne
outsb
int3
outsb
inc
fists
setne
lods
or
ss
and
add
xor
rorb
dec
clc
push
ds
imul
or
xchg
test
jae
outsl
or
int
out
inc
in
jecxz
jb
jl
mov
fidivrs
xchg
lods
add
or
xor
scas
popa
or
jo
cmc
test
fidivs
push
inc
and
add
lret
jp
push
pop
sbb
push
iret
mov
xchg
rcrl
stos
jg
mov
jbe
int3
xchg
inc
xor
pop
rclb
ret
sub
sub
insl
pop
shlb
ds
pushf
hlt
jo
int
movsl
pop
test
xor
cmp
in
push
stc
jmp
xor
or
lods
and
pop
scas
dec
test
loope
aas
mov
mov
fs
mov
add
andl
jge
push
add
fidivrl
or
cmp
int
xchg
sub
mov
mov
insl
mov
nop
imul
pop
pop
out
jns
mov
mov
ret
insb
out
xchg
xor
pop
rol
loopne
pop
pop
xor
test
aam
mov
test
mov
lret
dec
dec
mov
pop
push
or
insb
push
jp
adc
pusha
decb
call
cmp
stc
mov
or
adc
sub
jo
mul
mov
jl
jp
leave
mov
mov
ret
scas
movl
movsb
sarb
sub
es
mov
fsts
out
stos
jle
lock
xchg
lods
into
sbb
sti
mov
mov
mov
jnp
add
filds
sub
mov
xorb
shl
cs
cmp
jge
mov
addps
stc
xchg
daa
inc
sahf
sub
sub
call
jns
jnp
and
xchg
or
iret
into
pop
cltd
sahf
pop
inc
stos
call
add
iret
sub
sub
push
jns
pop
mov
imul
mov
jecxz
dec
ficomps
push
mov
int3
mov
mov
jo
mov
ljmp
cli
inc
pop
cltd
inc
loop
mov
mov
cmp
in
bound
std
lods
mov
movsb
sahf
or
and
icebp
imul
pop
xor
jbe
push
xor
pop
sub
mov
pop
cmp
enter
fld
mov
jecxz
out
sbb
dec
insl
jne
sbb
mov
es
xor
pushf
addb
inc
icebp
in
sbb
int
dec
outsb
inc
pushf
aam
push
rol
movsl
fwait
sub
int
mov
fs
std
es
ja
cmp
sbb
ret
add
stos
dec
inc
sub
sub
mov
xchg
xchg
out
and
mov
loopne
mov
xlat
push
lds
sahf
sbb
cmp
add
lcall
scas
das
test
mov
rcll
lea
pop
sbb
insb
repz
mov
ret
adc
sbb
fsubrs
aaa
lods
pop
fsubrl
popa
cmp
leave
in
in
je
pop
mov
sub
sahf
scas
pop
or
jb
es
mov
loopne
sub
in
cmp
nop
pop
or
aas
pop
xor
repz
mov
sub
jb
xchg
lods
sbb
outsb
xorb
mov
jecxz
in
cmp
imul
stos
stc
pop
and
sahf
lods
mov
cmp
ss
inc
pop
or
mov
jle
sbb
jno
sbbb
sbb
outsb
mov
dec
add
xor
mov
cmc
jne
sbb
and
pusha
fimuls
pusha
jge
std
fimull
cmpsb
jmp
xchg
push
cli
rol
cmp
pop
pop
stos
rcrl
imul
add
mov
dec
inc
daa
arpl
mov
imulb
pop
jmp
mov
fs
cmpsl
cli
push
shl
pop
mov
mov
iret
nop
push
out
pop
in
mov
mov
mov
pop
out
xor
pop
sub
lods
arpl
lcall
and
dec
loope
loop
sub
mov
add
addr16
sbb
fidivs
mov
jb
jge
addr16
xchg
push
test
call
sbb
repz
test
lret
pop
mov
xor
mov
popf
in
adc
lret
mov
jcxz
and
pop
dec
test
scas
or
int
sbb
dec
xchg
mov
ret
mov
pop
mov
inc
fstpl
cmp
push
ret
mov
push
jle
inc
cmp
mov
test
fsub
movsb
lahf
inc
mov
icebp
sahf
push
imul
stos
pop
cmp
jl
push
cli
push
das
dec
xchg
mov
ret
push
xlat
fwait
push
pop
ss
sarb
push
idivb
fcomip
adc
hlt
xchg
in
ja
xchg
adc
mov
add
pop
mov
lds
jmp
inc
add
fwait
jecxz
cmpsl
xor
sub
mov
js
sub
fcomp
adc
dec
fbstp
loopne
cmp
pusha
pop
cmp
jnp
fimuls
std
pop
hlt
sbb
shrb
mov
data16
xchg
mov
or
testl
sti
add
xlat
jae
std
dec
xor
xchg
mov
test
scas
jmp
push
mov
and
filds
movsl
pop
push
xor
pushl
and
hlt
in
adc
test
xchg
add
aam
shld
jne
push
ret
sbb
xor
lahf
in
aaa
in
es
adc
rolb
ss
mov
pop
pop
xchg
jnp
xor
add
add
test
cmc
rorl
mov
scas
inc
cmp
and
les
in
or
popl
sahf
gs
add
push
aam
ror
sbb
aaa
ret
arpl
sub
xor
push
adc
les
xor
in
rcl
mov
cmp
adc
push
test
sub
loopne
xor
add
push
hlt
xchg
xorb
push
push
xor
and
mov
repz
jb
shl
fs
push
loop
mov
in
add
pop
mov
into
xor
sub
std
je
fdivrl
andb
idivl
lods
cmpsb
aaa
jbe
and
clc
dec
add
roll
fwait
sbb
adc
jns
xor
mov
aad
fildll
mov
les
rorb
or
and
mov
jle
arpl
inc
pop
call
push
aas
rorl
ret
test
loopne
call
push
mov
jns,pn
mov
sub
jbe
push
jnp
push
in
lods
clc
mov
push
mov
and
dec
mov
out
push
pop
inc
shrb
and
fildll
rdmsr
insl
mov
addr16
push
pop
pop
dec
add
aad
adc
add
sti
and
pop
shlb
mov
xor
outsb
pop
ret
push
ja
call
jno
adcb
sub
icebp
dec
push
mov
add
inc
mov
adc
test
and
aam
pop
push
mov
bound
or
sub
jo
xor
outsl
mov
cmp
ds
jne
into
popa
adc
or
dec
ds
enter
sbb
sub
aaa
cld
bound
mov
sbb
clc
xchg
mov
jb
divb
adc
mov
pop
lahf
das
adc
ss
fistpl
pop
pop
mov
inc
xchg
lods
sti
scas
dec
cmp
popl
in
aaa
xchg
pshufw
push
cmp
or
cmp
xchg
sbb
sarb
push
aad
or
out
icebp
mov
movsb
jle
stos
sti
push
movsb
scas
dec
sub
data16
cmp
repnz
cmpsb
inc
cwtl
pop
in
aas
or
orb
mov
xchg
push
push
fistps
dec
stc
rol
mov
jmp
cmp
and
bound
xchg
divb
jmp
add
pushf
sub
cmp
addl
or
aam
outsl
xor
mov
xlat
xor
cmp
or
cmp
xor
iret
push
or
shl
and
shll
add
or
sub
xor
popf
sub
pop
scas
sti
xchg
push
cmc
repz
xor
mov
lret
data16
into
sti
jne
cmp
fldt
sti
fistpl
ret
push
mov
and
cmpsl
jg
xor
dec
push
incb
sub
negl
inc
sub
pop
lds
push
jae
mov
dec
adc
lock
sub
dec
out
sbbb
add
and
dec
mov
mov
cli
dec
popa
les
pop
mov
pop
gs
mov
pop
cs
mov
jne
lods
stc
shr
cmp
hlt
test
push
mov
jns
push
sbb
into
subb
ret
pushl
adc
outsb
push
sub
hlt
repnz
idiv
fwait
sahf
inc
out
cmpsb
pusha
sbb
scas
adc
scas
stos
iret
cld
xor
out
xor
test
xor
in
popa
out
jp
jge
orl
adc
pop
popa
inc
mov
jp
dec
add
addr16
push
lods
xchg
sbb
cltd
cmc
rcrl
mov
movsl
fs
push
mov
fiaddl
shlb
adc
aam
adc
mov
inc
pop
and
sub
pushf
pop
inc
aad
shlb
pop
mov
scas
sbbl
fsubr
outsl
out
sbb
jl
mov
dec
cmpl
pushf
pushaw
xor
cmpsb
add
xchg
aas
dec
xchg
jno
cmpsl
lods
cmpsl
or
and
push
cwtl
leave
rol
sbb
lea
outsl
push
or
aaa
icebp
mov
jo
jmp
pop
dec
xchg
sbb
lret
insb
jmp
xor
jb
mov
ss
out
mov
jbe
pop
loop
outsl
adc
repz
xor
movsb
out
push
pop
pop
lods
jg
or
inc
mov
mov
sub
xchg
cwtl
dec
mov
repz
xchg
xchg
jno
mov
out
cmp
in
pop
sub
or
xchg
lret
sbb
pop
cmp
ret
push
insb
or
xor
insl
xchg
aaa
bound
bound
movsb
mov
lods
jo
shrl
arpl
xchg
pop
xchg
cs
sbb
inc
aad
sahf
push
clc
insb
fisubs
or
jl
push
dec
stos
push
data16
sbb
inc
gs
and
pop
pop
cmc
or
xor
pop
jle
test
loope
dec
insb
cmpsl
add
and
aas
int
in
imul
test
lds
xchg
mov
add
leave
cli
fcoms
popf
dec
lock
into
push
inc
ds
cmc
in
dec
jmp
adc
cmp
fiaddl
xchg
xchg
int3
mov
pop
jns
ja
das
lcall
mov
lods
pop
push
mov
xchg
movsl
dec
sub
out
aas
out
sub
push
sbb
pushf
dec
push
insl
adc
pop
shll
das
or
ret
test
push
leavew
into
clc
insl
jle
sbb
sub
push
ja
hlt
xchg
cld
icebp
insl
cmp
lods
cmp
icebp
cmp
push
ja
xor
sub
xor
xor
jae
pop
cli
shrl
ja
jmp
test
test
push
lea
dec
mov
add
push
repz
sbb
lods
xor
lahf
or
inc
dec
rorb
ret
mov
lods
push
jp
adc
dec
push
xchg
addr16
mov
inc
cmp
dec
cmp
mov
cmc
icebp
inc
jns
lea
movsl
gs
in
dec
jge
ficomps
xchg
pop
dec
and
int
test
mov
dec
xorb
stc
lcall
cmpsl
popa
repz
out
fistl
fisubl
cmpsb
fs
jne
mov
or
loope
cmp
xlat
int
mov
fwait
add
mov
or
push
in
jnp
pop
movsl
clc
or
sahf
cltd
pop
lock
int
icebp
mov
jl
lret
imulb
fcmovb
sbb
scas
ja
jae
aad
push
push
fs
adc
test
iret
dec
or
insb
cmpsl
xor
and
mov
mov
sub
aaa
rorl
push
sar
outsb
test
xlat
loope
jp
test
inc
repnz
lock
jne
mov
or
and
xchg
repz
mov
xchg
pop
adc
or
jmp
sub
std
ficoml
fidivs
imul
in
mov
mov
or
insb
loop
js
adc
cmp
push
fcmovb
mov
rolb
or
xor
imul
cmp
hlt
lods
repnz
dec
lcall
pop
cld
cmp
mov
push
push
cmp
rcrl
aam
shrl
sub
psrlw
movsl
cmp
fs
cmp
adc
lahf
mov
jno
xor
pop
sarl
in
mov
test
cmp
xor
pusha
ret
aaa
mov
mov
jne
and
mov
repnz
jno,pn
xchg
dec
ds
fdivrl
pop
xchg
mov
pop
test
jge
add
mov
and
mov
call
shlb
add
dec
or
insb
inc
sub
loope
xchg
fisttpll
mov
dec
in
adc
in
and
sbb
add
stos
cs
cli
daa
outsb
add
leave
cs
lahf
in
pop
pop
call
loopne
push
cmp
push
pop
inc
rolb
imul
xchg
dec
dec
sub
cltd
cwtl
out
jp
sub
and
mov
pop
mov
pop
loop
push
clc
and
cli
shrb
sahf
sbb
ljmp
pop
and
movsl
pop
ds
inc
nop
std
dec
pop
bound
mov
jno
mov
xor
adc
cmp
pop
jnp
xchg
mov
ret
xchg
mov
pop
sarl
cmp
addl
mov
jg
cmpsb
scas
fistps
cld
fildl
add
jecxz
popf
fstl
mov
ficompl
scas
push
push
insl
mov
jecxz
pop
xlat
adc
add
add
dec
push
in
and
or
std
mov
dec
bound
pushf
mov
mov
push
sbb
sub
mov
push
add
or
adc
dec
lods
push
cmp
add
cmp
fnstcw
movsl
clc
inc
sub
xor
cwtl
lahf
jae
gs
and
and
adc
xchg
lret
push
fsubr
lcall
jge
pop
pop
outsb
cmpsl
mov
dec
in
cs
fabs
loop
ds
pop
paddsb
jl
fldenv
cmp
add
xor
xchg
and
and
push
das
and
mov
sbb
outsb
mov
push
rorb
pop
jnp
push
push
cmp
mov
int3
cmc
xchg
or
push
add
sbb
aas
fs
jb
insl
std
push
jae
sub
hlt
iret
in
sarl
and
mov
adc
negl
push
andb
in
or
loop
dec
add
shl
pop
push
push
aam
and
dec
or
popa
sbb
movsl
sbb
ret
xchg
insb
mov
add
js
pop
stos
sbb
mov
xor
adc
pop
pop
fists
adc
push
js
das
push
dec
mov
xchg
loopne
jecxz
das
jns
addr16
mov
into
pop
in
int3
int3
or
pop
inc
add
mov
add
into
jp
out
mov
xchg
mov
sbb
ret
dec
dec
dec
jmp
jg
xor
mov
cmp
adc
cwtl
dec
out
pop
mov
adc
or
jmp
and
cltd
pop
loope
add
cmp
enter
or
adc
inc
xchg
cmp
push
ret
pop
sysenter
call
movsb
daa
adc
jo
sub
pop
adc
push
jl
cmp
outsb
mov
dec
cltd
aas
push
xchg
mov
int3
lock
aaa
pop
lods
mov
stos
sbb
orb
outsl
xchg
lods
mov
outsl
js
fnsave
les
add
mov
fs
jae
lods
jle
cmpsl
stos
mov
jne
movsl
call
test
pop
sar
aaa
cwtl
cmp
out
mov
adc
jle
mov
cmp
adc
xchg
mov
xchg
mov
cmp
decl
loop,pn
sub
inc
cmp
add
je
jg
jle
in
leave
dec
pushf
out
mov
cmp
jg
or
ss
adc
push
fdivrp
rclb
mov
cmpsl
sahf
hlt
mov
fadds
push
adc
jae
cmp
fadd
jns
dec
stos
ljmp
test
xor
jmp
push
loop
inc
call
and
ss
jle
sbb
inc
dec
lods
xchg
cmp
sbb
push
mov
xor
fst
ror
stos
add
shrl
int3
inc
lret
mov
jb
push
mov
and
pop
iret
shll
jle
adc
cmp
fs
mov
add
xchg
inc
xchg
cmpsb
cmp
out
xchg
and
or
mov
ja
jg
cs
cld
sub
fnstsw
pop
insb
mov
push
and
fcomps
aaa
sub
xlat
dec
test
inc
arpl
mov
in
push
sbb
icebp
popa
lds
pop
pop
adc
jp
aaa
pop
stos
ret
filds
aad
fcomp
dec
jle
push
bound
and
jmp
sahf
jo
adc
call
xchg
jo
push
stos
add
jns
bound
loopne
jbe
push
push
add
fwait
cltd
mov
push
xchg
fisttpl
pop
inc
cmovl
cli
or
xor
mov
and
xchg
lcall
inc
adc
sahf
jno
fimull
scas
pop
add
movsl
xchg
mov
xchg
icebp
xchg
dec
lret
inc
ret
mov
ret
push
push
ja
ds
cli
test
push
jg
mov
outsl
mov
jp
addr16
aas
lret
sub
clc
ss
stos
sbb
js
popf
pop
in
mov
cmp
or
sub
or
sub
push
jl
or
push
pop
xchg
cmc
mov
mov
lret
hlt
repnz
or
sbb
xor
dec
fbstp
xchg
addr16
movsl
negb
cmp
mov
in
cmp
mov
dec
lret
iret
movsb
out
push
jl
xor
pop
mov
lds
pop
xorl
out
push
inc
into
xchg
sub
lods
mov
cmp
cmp
jl
dec
cli
imull
push
ja
hlt
xor
popf
fstpl
and
loope
add
jbe
or
pop
add
push
mov
mov
xchg
inc
repnz
dec
push
fdivl
bound
xor
push
enter
insl
dec
lahf
cmp
xchg
mov
or
inc
out
jecxz
and
jl
or
ja
jp
lock
loop
hlt
je
sbb
push
push
sti
push
pop
inc
mov
test
or
enter
in
mov
cli
cwtl
loop
push
push
jnp
call
xor
stc
popa
cmpl
jg
jp
mov
or
ja
pop
subl
call
fldl2e
int
scas
popa
leave
xchg
dec
or
pop
mov
add
in
sbb
push
cld
fcomi
in
push
ja
arpl
sbb
inc
fdivrs
pop
ljmp
pop
scas
popa
popf
mov
inc
push
pusha
lock
test
cwtl
fnstenv
sub
dec
jp
jno
scas
xchg
daa
cli
out
fsubl
and
lods
add
daa
in
pop
lods
inc
in
cmpsb
xor
js
div
sar
or
ror
cmp
scas
xchg
lods
pop
xchg
ret
subb
mov
or
imul
sbb
xlat
frstor
fdivs
xchg
fisubrs
mov
clc
pop
mov
psllq
jg
mov
lea
scas
sub
push
test
repz
inc
cli
and
dec
pop
aas
outsb
push
xor
addr16
xor
mov
and
js
in
push
cld
out
or
inc
xor
ljmp
add
mov
clc
fistl
lcall
mov
mov
sahf
xchg
shlb
jg
clc
xorl
sub
mov
popf
cmp
aam
repz
sbb
test
push
push
pop
idiv
jo
hlt
mov
dec
pcmpgtw
dec
push
or
sub
or
lods
inc
mov
or
mov
jp
lret
cld
inc
dec
mov
popf
mov
add
sbb
or
daa
lahf
mov
add
add
or
xor
xorl
pop
cltd
or
dec
sub
fistpl
std
negl
lods
pop
sub
in
cmp
xor
push
cmpsl
push
mov
xchg
or
es
int
and
xor
in
adc
mov
pop
mov
arpl
aas
sarb
fdivr
ror
wrmsr
idivl
inc
js
aaa
cmp
jmp
pop
nop
fabs
mov
pushf
push
insl
loopne
and
add
mov
add
cs
or
add
adc
inc
pop
imul
mov
divl
add
popa
inc
sbb
shlb
pop
rolb
mov
imul
dec
insl
daa
jg
std
sbb
inc
adc
pushf
stos
mov
imul
adc
push
stos
jb
or
cmp
add
push
out
mov
mov
test
xchg
jmp
and
test
movsb
lds
inc
dec
aad
pop
lods
jae
cmpb
adc
and
mov
mov
subl
ficoml
jnp
scas
or
jp
jo
cmp
lahf
stos
jae
add
jnp
or
cld
sub
addr16
push
stc
ds
jno
mov
aam
stc
imul
lcall
leave
or
loop
cs
int3
or
mov
push
push
lret
std
xchg
jg
xor
fstps
cmp
rorl
rorb
icebp
adc
cmpsb
pop
pop
pop
fwait
loope
pop
and
and
popa
xchg
xor
sbb
iret
mov
push
cmp
xor
mov
lret
es
cwtl
jmp
cmpsl
outsl
xor
cmp
jno
xchg
inc
rcl
xchg
pop
sub
push
icebp
ror
mov
sbb
out
and
or
test
and
and
popf
cmp
fldcw
fisubl
out
xor
push
pusha
pop
dec
xchg
dec
mov
outsl
cmp
jg
pop
mov
jno
lds
scas
outsb
add
int
mov
inc
mov
cmpsl
daa
sbbl
pop
out
push
add
push
nop
stc
dec
cwtl
adc
jmp
sbb
fstpt
in
and
mov
push
loop
push
cmp
dec
repnz
cmpb
add
pop
cltd
and
xchg
mov
adc
lods
jl
repz
fildll
popf
into
loop
sbb
repz
mov
ret
scas
stos
test
test
pop
iret
lods
iret
rorb
push
push
lods
icebp
dec
pop
jns
dec
mov
xchg
sbb
je
cmp
roll
ret
lds
add
clc
cli
jns
rclb
insl
leave
dec
pop
sub
pop
pusha
jmp
jl
int3
jb
dec
mov
mov
xchg
push
jns
lea
xchg
mov
in
shlb
cmp
hlt
dec
cmpsl
mov
pop
pop
hlt
push
out
pop
mov
inc
sub
aaa
lea
sbb
in
dec
jno
sub
pop
dec
dec
fidivl
dec
les
mov
jl
pushf
xlat
jl
test
lret
outsb
adc
jg
outsb
ds
push
rcrb
cmpsl
inc
je
aam
cwtl
daa
xchg
and
pop
mov
add
pop
sub
and
andl
shlb
jns
call
inc
mov
iret
adc
jge
dec
movsb
and
pop
arpl
sti
lea
cmova
lret
inc
dec
sbb
negb
cmpsl
fstl
mov
xor
sub
test
xor
rclb
ja
lcall
inc
imul
fdivrp
mulb
dec
push
scas
dec
test
or
push
dec
or
out
jmp
dec
jbe
sahf
mov
dec
dec
push
jnp
fisttps
dec
mov
sbb
test
popa
and
cmp
mov
add
mov
xchg
pop
cwtl
add
mov
mov
jge
mov
xchg
xor
fcmove
fcomip
jle
inc
mov
sub
outsb
pop
scas
xchg
cmp
dec
jo
insb
imul
pop
sti
or
jg
cmpsb
bound
sub
cmpsl
fdivrs
in
out
adcl
lods
xor
jle
pop
jle
pop
pop
mov
icebp
das
shll
call
sbb
lods
push
mov
mov
out
std
xor
icebp
jno
cmp
testb
mov
sub
loopne
lea
loopne
stc
rcrb
dec
jne
lahf
test
sbb
call
out
push
addb
or
push
mov
cmp
xlat
push
jp
sub
test
gs
fmuls
in
inc
shlb
and
daa
push
aam
and
addr16
cmp
addr16
shrl
mov
cmpsl
fnstsw
into
dec
mov
fwait
pop
dec
xor
lahf
in
xchg
push
dec
pusha
pushl
neg
iret
and
push
or
mov
cmp
xchg
adc
jne
or
xchg
xor
fstenv
and
push
or
ljmp
xchg
loop
add
mov
inc
loope
mov
inc
mov
shrl
pop
mov
xchg
mov
fcoml
roll
fisttpll
decl
mov
ret
imul
int3
adc
sub
adc
lret
mov
out
lods
fsubrs
jg
lock
cmpsl
adc
pop
jne
orb
mov
dec
xchg
lret
adc
jp
nop/reserved
add
jg
rorl
rcl
insl
mov
pop
into
ljmp
add
or
cmp
nop
push
fadds
pop
clc
add
lret
scas
push
xchg
movl
cmpsl
std
sbb
push
inc
cltd
sbb
push
pop
popf
or
adc
sbb
cmpsl
sbb
lahf
test
pop
out
pop
inc
xchg
sarb
int3
mov
pop
mov
and
mov
das
mov
lret
inc
insb
call
mov
inc
jae
cmpsl
or
out
sbb
sarb
lcall
popf
arpl
shlb
mov
add
mov
mov
loope
aam
push
fwait
push
sarl
or
xchg
cli
mov
movsl
jns
jg
push
push
mov
mov
push
scas
mov
mov
ds
loop
xor
sub
cmpsl
pop
push
mov
sub
lret
mov
repz
int
pusha
out
adc
jae
int3
xor
xor
mov
xor
in
mov
push
loop
sub
ret
std
addr16
enter
pop
lea
mov
push
loopne
and
xchg
loop
ds
xchg
adc
sub
or
fmulp
push
es
cmp
rorl
pushf
vshufps
adc
mov
adc
jns
ss
add
in
daa
jl
sbb
pop
dec
mov
decl
dec
dec
lea
aad
cmpsb
inc
mov
cmp
xchg
lds
mov
sub
cmp
adc
jnp
inc
dec
jbe
fsubs
repz
inc
mov
mov
test
repnz
sub
mov
cmpsb
sbb
lret
xlat
jno
leave
lods
add
xchg
xlat
mov
aam
or
jb
cli
fsts
jge
pushf
in
push
shl
or
jge
icebp
sub
aaa
out
cs
shlb
sbb
jecxz
jae
cltd
sub
or
test
pop
inc
push
jl
mov
push
mov
cmpsl
pop
outsl
sub
mov
mov
push
xchg
daa
cli
repz
xchg
mov
mov
pop
push
shlb
aam
rclb
xlat
mov
and
cli
pop
imul
sub
mov
inc
sbb
jmp
lahf
dec
pop
cmpsl
lahf
sbbb
pop
mov
aaa
addr16
lahf
les
aad
js
mov
negb
jl
pop
cld
cwtl
sub
lods
popa
xchg
rcrb
mov
pop
jmp
push
xchg
cmp
or
movsb
lds
mov
adc
lods
mov
xchg
jno
fstps
push
mov
cld
cmpsl
inc
xchg
hlt
lods
stos
xor
popa
aas
clc
icebp
test
cwtl
orb
js
adc
mov
movsb
nop
and
maxps
inc
jg
mov
aad
inc
or
ljmp
jno
insb
movsb
vunpckhps
pushf
in
push
lods
jnp
push
mov
ss
sub
inc
inc
leave
aaa
sub
fucomp
jbe
jne
pop
mov
insl
mov
xor
adc
mov
xchg
mov
mov
dec
pushf
jle
cmc
fcomps
xchg
movsl
or
jo
mov
jo
lret
adc
pusha
xchg
shrl
pop
in
repnz
ret
aam
aaa
cmp
sub
pop
ret
popf
sarl
sbb
mov
push
cmp
mov
xchg
pop
xor
pop
stos
jmp
je
cmp
out
inc
lahf
sub
and
jb
lds
inc
outsb
xchg
repz
mov
incb
fidivs
mov
ljmp
pop
sub
xchg
inc
repnz
imul
je
pop
scas
sbb
mov
jne
das
je
dec
mov
cmc
pop
ror
cmp
dec
jle
mov
shll
dec
fcoms
xor
dec
int
jbe
arpl
sub
fimull
dec
cmp
stos
inc
adc
cs
clc
test
push
movsb
sbb
fstpl
pop
sub
xchg
pop
jnp
orl
les
mov
xor
xchg
lahf
mov
lret
mov
daa
insl
inc
add
jg
fwait
daa
dec
dec
add
addr16
push
push
mov
add
cmpsl
call
sti
push
lret
aaa
sbb
xor
push
pop
test
aas
and
xor
out
inc
cmp
mov
scas
pop
fwait
nop
pushf
lds
pop
fimuls
shll
repz
cltd
pop
ljmp
enter
pop
int
cmp
mov
dec
inc
addr16
fnstsw
lods
and
mov
xchg
faddl
stos
sbb
in
outsl
push
gs
out
stos
cmp
cmp
sub
mov
sbbb
pop
nop
and
add
outsb
je
or
ljmp
arpl
xor
inc
mov
pop
or
outsl
add
shlb
test
or
or
xchg
movw
fdivs
int
xchg
pushf
push
cmc
dec
outsl
dec
js
inc
jle
or
sub
jae
push
pusha
push
pop
dec
pop
rclb
lds
je
inc
add
dec
popf
xchg
out
xchg
call
cmp
mov
ret
mov
pop
xchg
popf
daa
dec
mov
xor
les
add
rolb
cmp
jg
testl
push
mov
or
mov
cmp
xchg
aas
sahf
mov
das
mov
mov
ja
jg
jecxz
fcmovb
shlb
test
dec
mov
xchg
iret
sbb
jmp
mov
mov
pushl
repnz
inc
mov
dec
cmp
mov
xlat
sub
divb
sbb
and
jle
gs
fists
or
jg
enter
xor
mov
dec
cmpsb
sub
mov
push
daa
aas
mov
xor
mov
mov
int
mov
test
mov
adc
sbb
push
pop
mov
movsl
dec
mov
inc
add
pop
adc
xchg
insl
std
movsb
bound
xor
movsl
arpl
jle
enter
mov
push
and
sti
add
inc
scas
push
leave
mov
stos
xor
scas
mov
xchg
pop
mov
add
jo
pop
int
jg
inc
ss
adcb
ljmp
sub
and
jle
aad
enter
aaa
sbb
mov
mov
xor
mov
mov
arpl
jg
insl
push
lock
or
mov
jbe
inc
mov
and
lret
lahf
adc
cmp
dec
rclb
pop
push
xchg
cmc
cmp
or
int
adc
mov
jnp
out
lock
or
adc
push
sbb
pop
inc
cmp
outsl
xchg
popf
loope
cmpl
out
shll
js
pop
mov
cmp
les
xchg
mov
int3
adc
mov
fistl
jp
add
shll
pop
scas
ss
or
repz
leave
test
pop
push
ret
in
push
mov
nop
iret
push
aam
data16
and
loopne
cmpsl
ja
adc
push
inc
push
sub
addr16
xor
jne
xchg
outsl
cld
dec
aas
and
or
fwait
iret
cmp
mov
or
rorl
jnp
shlb
and
movsb
outsb
aad
pop
sub
roll
mov
lret
lods
jg
dec
je
stos
lret
pusha
sbb
gs
fs
leave
gs
ljmp
mov
jmp
xor
push
inc
and
popf
xor
add
shlb
sbb
pop
mov
and
xchg
inc
cmp
jne
pop
fwait
cmp
jmp
adc
cmpl
cmp
jge
push
jne
icebp
jmp
ret
push
pop
sahf
jl
movsb
pop
out
repnz
movsb
dec
gs
inc
lods
movsl
dec
jecxz
xor
loop
rol
xor
or
out
lods
stos
mov
das
ja
fdivl
pop
lds
push
sbbl
jge
sbb
xchg
mov
addl
jae
and
sub
mov
in
gs
mov
mov
cmp
shlb
lcall
adc
xchg
mov
fs
les
icebp
pop
adc
out
push
jbe
sbb
outsb
in
xchg
cmpb
cmp
jl
rclb
and
mov
in
ss
jnp
mov
sub
aam
das
rclb
xchg
mov
inc
xchg
fwait
sbb
int
sbb
xor
mov
faddp
mov
loope
cltd
mov
push
inc
lds
ret
ja
cmp
pop
jge
loope
push
cmp
sbb
push
loope
mov
es
sub
adc
lods
xchg
add
enter
aas
lds
out
dec
push
mov
std
rorl
daa
adc
into
lea
push
stc
mov
pop
cmc
imul
mov
pop
loop
data16
xor
dec
mov
mov
fisubrs
arpl
sbb
xchg
dec
fs
xor
pop
fcompl
sbb
xchg
inc
dec
movsb
mov
xchg
out
pop
popf
cmp
fldl
cmc
jle
fbstp
cld
push
das
subl
jge
mov
cmp
fidivrl
xchg
pop
sub
mov
adc
jecxz
xchg
test
jb
adc
and
mov
fldl
sbb
aas
inc
test
dec
cli
pop
push
adc
and
mov
je
pop
jnp,pt
stos
cs
sub
pop
and
sbb
loope
dec
std
jno
insb
mov
mov
push
mov
lea
shl
pop
lea
test
mov
sbb
pusha
addr16
xchg
dec
xchg
xor
out
push
pushf
sub
sahf
inc
addb
dec
mov
adc
aad
stc
scas
les
ficoml
pop
jnp
jecxz
pop
adc
pop
mov
mov
cmp
mov
cmp
dec
ret
add
out
inc
adc
and
and
mov
lock
pop
xchg
les
pushl
repnz
jmp
fcoml
pop
rcrl
sbb
movsb
xchg
pop
mov
mov
testl
les
cmp
xor
cltd
jp
add
jnp
int
xchg
xor
xchg
mov
pusha
and
xchg
or
std
dec
push
in
loop
iret
ret
mov
xlat
inc
bound
mov
outsb
pushf
dec
jl
xchg
pop
xchg
pushf
and
adc
mov
out
sub
shll
add
leave
enter
ds
xchg
js
xchg
insl
test
fadds
add
stos
mov
push
add
cmp
sbb
xchg
lods
call
sub
int
roll
ljmp
mov
jecxz
pop
sub
and
xor
or
push
movsl
arpl
push
out
inc
adc
jbe
divb
ds
testl
or
xchg
leave
fwait
lea
ja
and
and
lea
test
aad
bound
dec
sub
mull
cmp
push
jbe
inc
mulb
adc
mov
sub
fs
cmp
or
clc
cwtl
stos
and
test
xchg
jg
icebp
das
cmp
mov
mov
cmc
xchg
push
fisttpll
in
xchg
jne
sbb
clc
inc
sub
and
sub
mov
or
push
aas
aaa
out
push
cld
fsubrl
jns
std
pop
mov
repz
out
lcall
inc
dec
out
dec
test
xor
mov
push
or
sti
call
popf
movsl
push
cld
mov
and
movl
cli
lcall
xor
in
pop
jg
cmpsb
pop
testb
ss
mov
sbb
xor
mov
cmp
aaa
aam
hlt
clc
jl
push
test
mull
lahf
fwait
cmp
push
lea
lahf
imul
dec
das
push
ret
pusha
fs
pop
mov
nop
les
jmp
add
pop
jne
sub
cmp
or
add
sub
adc
cwtl
movsl
jb
fs
into
jnp
or
aam
xor
insb
cmp
lea
push
mov
pop
jnp
data16
push
mov
xchg
jno
ss
dec
mov
sti
xchg
xchg
push
int
adc
xchg
sub
das
es
mov
in
sti
mov
inc
mov
push
stos
cltd
mov
pop
call
sub
subl
lret
push
cmp
stc
adc
or
add
mov
jg
mov
jo
mov
fisttpll
xchg
cld
and
xchg
cld
sbbl
dec
sbb
xor
jnp
or
push
mov
inc
inc
bound
sbb
inc
push
dec
inc
les
jo
fsubp
jp
ss
fimull
push
ret
pop
sti
stos
sarb
call
jo
fstl
or
lods
mov
and
ret
lret
mov
dec
mov
fadds
clc
je
flds
xor
in
dec
fldcw
test
lret
sub
adc
cs
mov
mov
fiadds
lahf
scas
pop
mov
psrad
push
xchg
fisubrs
mov
hlt
ficomps
pusha
and
pushf
jbe
rcl
insl
data16
pop
fmuls
lret
out
xlat
mov
or
or
cmc
sub
imul
ror
fsub
shrl
imul
jle,pt
inc
xchg
jo
sub
dec
inc
add
dec
xchg
inc
lahf
adcl
cmp
sub
call
das
jbe
push
xchg
xor
jl
dec
mov
mov
sti
mov
ffree
push
lods
and
movsl
sbb
lods
push
test
and
xchg
test
cmpsb
adc
arpl
sbb
outsl
nop
orl
fs
out
add
lea
push
imul
lods
lret
adc
lods
scas
fwait
leave
inc
je
jl
sbb
push
data16
xor
adc
ret
mov
test
inc
mov
sbb
dec
mov
sbb
add
icebp
or
xchg
stos
or
adc
jl
cmp
movsb
push
int3
mov
jne
sub
xlat
push
lods
testb
push
xor
or
dec
imul
adcb
in
lahf
jns
add
iret
push
popa
adc
mov
pop
xlat
movsb
fsts
jl
adc
and
add
push
das
xorb
outsb
dec
xor
les
adc
daa
dec
call
fidivrl
aaa
mov
and
adc
mov
testb
xchg
cld
jge
enter
push
inc
pop
mov
addr16
mov
mov
shrb
movsb
mov
push
inc
mov
fnstenv
push
jmp
lods
daa
and
sbb
sbb
sbb
andl
sub
sub
xchg
push
movsl
shlb
xor
cwtl
inc
rorb
lret
out
test
sub
mov
js
ss
aam
jbe
imul
ret
xchg
daa
and
sub
stos
loopne
test
pop
add
sbb
and
push
std
outsb
sbb
xchg
shlb
pushf
jno
loope
insb
inc
and
les
inc
and
add
mov
in
or
jbe
jns
jg
pop
dec
add
sub
mov
push
aaa
inc
xor
psadbw
mov
push
jns
pop
cmpl
out
iret
cmp
std
mov
inc
xchg
push
fists
mov
xor
js
test
lahf
scas
xchg
lods
daa
mov
daa
xchg
in
pop
cmp
nop
xor
popf
fimuls
ljmp
test
in
mov
dec
in
jg
bound
rcr
imul
mov
clc
push
xor
xchg
sub
inc
cmpb
icebp
xor
xchg
jmp
dec
bound
test
push
arpl
cli
add
xchg
mov
dec
arpl
pop
mov
jns
in
mov
leave
adc
pop
add
adc
add
mov
add
int3
sub
mov
sbb
cmp
nop
scas
sti
imul
add
pop
lea
adc
std
jmp
int3
movsl
sbb
jg
in
jmp
add
scas
sbb
jl
lods
adc
out
and
mov
inc
jo
lds
in
out
mov
xchg
lods
mov
push
das
fs
sbb
mov
push
add
pop
mov
shrl
adc
pop
sti
mov
ljmp
xchg
fwait
adc
xor
inc
scas
loopne
mov
pop
call
and
add
push
jecxz
jmp
pusha
mov
add
mov
rcr
jns
sarb
push
adc
jbe
adc
int
popf
xchg
push
aaa
push
jge
xor
andb
inc
xchg
mov
push
fs
mov
lret
xor
sub
add
pushf
cld
fnstsw
int
mov
rorb
inc
div
paddsw
xor
sub
sub
js
popf
ja
pop
sub
sti
cmp
addr16
ja
pop
xchg
jae
mov
jmp
inc
aas
mov
test
or
leave
sbb
jae
sbb
into
sub
lcall
bswap
mov
jge
pop
cmp
sub
dec
lahf
stos
in
pop
cmp
pushl
lea
push
loope
inc
orl
mov
negl
jmp
inc
adc
sbb
jae
roll
arpl
add
cmp
dec
jle
mov
es
xchg
push
sbb
fwait
lods
add
inc
cmc
xor
aaa
movsl
xor
push
js
cwtl
xlat
inc
lret
xchg
sub
mov
xchg
xchg
pop
outsb
leave
and
adc
test
cltd
movsl
rorl
cmpsl
jne
cmpsl
or
push
int
shll
jo
mov
mov
roll
insl
sahf
or
pop
mov
sbb
jp
push
jbe
mov
clc
inc
mov
leave
in
in
cwtl
test
fisubrl
jg
jbe
pop
cmp
pusha
loopne
clc
dec
xlat
jb
xchg
aad
fidivrl
xor
lea
pop
cld
inc
out
pop
fistpl
jecxz
dec
sbb
imul
scas
pusha
sbb
mov
cs
xor
adc
jmp
iret
mov
fmull
fiadds
mov
pop
xchg
push
sub
and
push
cs
cmc
es
add
xchg
xor
and
cmp
adc
inc
inc
stos
mov
mov
insb
std
sbb
sub
inc
jmp
cmp
movsb
std
ret
fsubrl
stos
cmp
sub
rcll
lods
lea
jbe
loope
cld
ret
jle
pop
je
inc
divb
rol
loope
add
mov
jno
sub
in
cmc
aam
in
mov
sarl
jb
xor
popa
mov
jb
movb
lcall
bound
out
push
sti
jge
xchg
sbb
push
int3
dec
lods
mov
push
fcoml
iret
cwtl
nop
scas
pop
push
sub
ja
mov
cmc
orb
adc
pop
ret
mov
mov
ss
lods
out
decb
pop
jb
int3
inc
cmp
popf
stos
out
dec
pushf
sbb
dec
xor
iret
sbb
dec
push
push
loop
cmc
xchg
rcl
jecxz
fimuls
lds
mov
sbb
enter
cmpsl
mov
cmp
cwtl
cmp
fdivl
shrb
xchg
or
mov
jnp
dec
mov
ret
imul
fwait
in
fstpl
dec
xchg
in
mov
or
repnz
pop
testl
push
cmp
mov
fsub
push
mov
nop
xchg
addl
stc
subl
repnz
aad
xor
cmp
frstor
and
mov
push
mov
shlb
mov
jo
lods
mov
xor
or
pop
das
add
popa
mov
jg
mov
testl
insb
jmp
push
sbb
call
push
ror
arpl
xchg
ljmp
jmp
jmp
cwtl
mov
outsl
ficomps
inc
sbb
cmp
fwait
xor
leave
pushf
insb
jp
out
out
push
push
push
dec
je
inc
dec
push
xchg
test
ss
es
outsb
inc
mov
lret
fwait
pop
inc
lock
cmp
mov
ljmp
xchg
pop
cmp
int
out
in
push
pop
sub
mov
mov
add
inc
push
incl
out
rcll
push
scas
sub
loopne
jno
adcb
mov
add
sbb
dec
stc
dec
lods
inc
ret
fcompl
xor
pop
mov
daa
dec
fcoms
pop
inc
sub
cmp
js
inc
add
xchg
push
shll
pushf
fnstcw
xchg
jo
push
into
pop
outsb
jecxz
pop
xchg
into
pusha
cmp
push
enter
fsubrp
inc
inc
xchg
sub
cltd
mov
adc
rclb
inc
pop
ret
lods
pop
pop
cltd
xchg
int
sub
testl
and
pop
das
lods
mov
add
insb
and
pop
add
push
sub
dec
mov
adc
out
inc
or
mov
mov
es
sub
sarb
out
cmpsb
jbe
sti
jl
push
and
dec
outsl
inc
fwait
sarl
xlat
lea
ret
mov
popf
lcall
out
add
pop
call
dec
stos
call
mov
pusha
mov
in
xchg
mov
popa
mov
jp
in
jmp
rcl
sti
cmp
or
jne
out
adc
xchg
push
adc
add
dec
pop
xchg
repz
cwtl
push
adc
shr
pop
scas
sti
push
enter
aas
fdivr
inc
jecxz
dec
popf
push
in
sqrtps
inc
js
cld
inc
lret
fcomp
push
ficoms
data16
rcrl
pop
add
lret
into
cld
mov
outsl
rcll
lahf
test
stc
test
inc
mov
push
xchg
mov
push
outsl
lret
sbb
pop
or
mov
lods
push
or
and
xchg
repnz
dec
in
xor
pop
int3
pushf
rcll
lods
pushf
out
mov
cmp
xor
fcomi
js
adc
mov
mov
hlt
cmp
xchg
or
xchg
cmc
loopne
mov
jno
fcomps
mov
repz
adcb
int
push
ljmp
push
fwait
and
push
dec
mov
jp
inc
lcall
sahf
mov
xor
dec
or
fimull
jb
int
outsl
stos
jns
test
orl
rorl
cmpsl
cltd
mov
lcall
adc
mov
xchg
mov
inc
cmpsb
out
adc
or
bound
cmp
out
mov
pmullw
inc
test
dec
hlt
dec
push
xchg
adc
aas
fimull
mov
and
in
push
movsb
test
jb
sti
sub
jmp
or
dec
cmpsb
test
nop
cmp
push
aad
lea
xor
add
test
pop
in
adc
sti
js
mov
loop
sahf
dec
cmpsb
js
dec
cmpb
mov
xor
ja
fiaddl
aas
js
sbb
dec
stos
pop
int
inc
mov
push
cmp
or
lea
mov
sub
push
fs
pop
jecxz
cwtl
iret
xor
xor
jp
push
fadds
xchg
shl
sub
adc
lea
popf
sahf
ljmp
mov
sarb
imul
adc
into
jbe
test
mov
and
pop
cmpsl
lock
das
mov
ret
push
aam
es
xchg
clc
aaa
icebp
sahf
lcall
fisubrs
mov
pop
nop
stos
lock
mov
sbb
inc
pop
ror
adc
insl
fs
jmp
stos
sbb
push
pop
scas
mov
incb
dec
mov
pop
aas
cmp
std
dec
mov
fucomp
jecxz
dec
fidivrs
int
jle
js
lret
adc
xor
or
sub
inc
shlb
stos
mov
pop
subb
fildl
jl
je
jl
add
xor
scas
inc
inc
mov
js
adc
push
mov
jg
or
enter
dec
or
xchg
add
imul
xchg
test
je
insl
fwait
iret
push
enter
gs
dec
xor
xlat
arpl
inc
daa
xor
aam
outsl
xor
icebp
sbb
sub
enter
daa
xchg
aas
jle
inc
pop
je
imul
test
dec
cli
arpl
adc
push
cmp
aam
shrl
push
loop
je
jno
jns
push
inc
divl
cs
sub
lock
int3
mov
cltd
inc
or
xchg
movsb
mov
cmp
lcall
out
sbb
lea
xchg
mov
imul
xor
add
pop
pop
sbb
or
jmp
jl
ss
lds
add
xor
fldcw
mov
push
push
push
sbb
sub
dec
mov
mov
ds
and
inc
mulb
outsb
stos
and
scas
ficoms
aas
xor
test
push
test
and
mov
out
push
daa
adc
pop
cld
pop
sti
inc
jmp
pop
aas
lret
xchg
out
sub
jmp
or
xchg
jecxz
push
fiaddl
sbb
loop
sbb
mov
mov
and
pusha
mov
jno
mov
cmp
addr16
mov
inc
pop
in
imul
mov
mov
in
sbb
jno
lock
xlat
dec
adc
jnp
loope
test
mov
xchg
add
xchg
scas
lahf
push
mov
push
pop
sub
das
leave
mov
mov
inc
and
dec
pop
rcrb
mov
sti
movsb
dec
dec
outsl
mov
repz
cwtl
jge
out
add
mov
roll
shrb
faddl
and
idivb
div
shrl
or
out
int
sub
push
lds
sbb
xchg
dec
push
scas
mov
pop
xor
cmp
in
push
stc
je
xor
dec
xchg
or
mov
jmp
push
pushf
and
aaa
aas
cwtl
out
pop
jb
cli
and
les
add
shrb
lahf
incb
xlat
inc
outsb
sbb
lock
jnp
ja
addb
rclb
or
or
shrl
icebp
push
add
xor
gs
mov
rorb
jbe
int
pop
cmpsb
push
jg
call
fisttpl
pop
xor
dec
cltd
js
fstl
cmp
fwait
out
pushf
inc
loopne
add
daa
mov
ja
xlat
fiadds
sub
insb
add
xor
or
adc
cmc
cld
pop
push
adc
cmpsb
ds
jb
xor
aad
int3
mov
pop
imull
hlt
and
cmp
push
adc
sbb
stc
sbb
js
cld
cmp
inc
popa
stos
mov
ljmp
inc
rol
test
scas
test
test
stos
out
push
nop
jno
inc
mov
movsl
and
and
push
xor
int
shlb
das
jle
stc
sbb
jg
out
or
das
ret
xor
lock
push
repz
push
lret
xlat
mov
jbe
sbb
movb
inc
mov
icebp
adc
sub
dec
pop
test
dec
cmp
mov
das
std
mov
iret
jecxz
mov
push
and
aam
mov
das
adc
adc
movsb
mov
push
rol
rorl
fisubrl
mov
xchg
out
push
in
add
and
loop
and
inc
jnp
push
arpl
sbb
mov
stos
xchg
jae
xlat
cmp
mov
mov
push
pop
and
repz
add
pop
mov
in
mov
ret
shlb
pop
adc
sbb
dec
inc
mov
adc
xlat
mov
dec
sbb
lret
cwtl
lock
ficomps
insl
push
xchg
pop
cld
sub
push
or
sbb
or
fmuls
out
insb
jno
ljmp
mov
addr16
sbb
sbb
lret
lea
scas
mov
xor
adc
jo
fstpt
fs
cmp
xlat
xchg
fsubrl
sbb
imul
jmp
mov
jg
xchg
sbb
mov
bound
movsl
fwait
push
mov
pusha
into
or
pusha
xor
xor
jb
into
int
psubd
xchg
test
movsb
xchg
lock
pop
test
or
push
scas
dec
shll
mov
into
sti
ficoml
cmp
ficoms
or
sbb
popa
xor
push
in
int
pop
sub
jl
mov
rcrl
mov
insl
dec
es
jne
ret
jno
fwait
cmp
int
sbb
xor
cld
mov
test
and
mov
in
pop
sbbb
push
sub
jl
sub
mov
push
sbb
sbb
push
fcoms
fmul
fwait
cli
adc
mov
test
mov
xchg
jne
sbb
or
and
lods
int3
jmp
mov
dec
mov
push
inc
scas
nop
mov
push
cmp
and
xchg
in
mov
jmp
enter
add
inc
jmp
lahf
or
jbe
adc
mov
shll
scas
in
btc
ds
in
sbb
pop
sub
fbstp
inc
jb
loop
push
fbld
scas
fnsetpm(287
add
pop
and
jmp
sub
sub
out
ja
stc
scas
out
aaa
inc
clc
ss
push
sbb
add
inc
fistpl
mov
adc
and
ret
xchg
and
cmp
and
popa
mov
sbb
mov
fs
cli
dec
loopne
or
fwait
sti
jg
xor
dec
nop
dec
popf
shr
inc
cwtl
gs
ret
aas
adc
jo
cmp
stc
xchg
dec
ret
insl
out
lcall
inc
inc
mov
add
fs
into
adc
mov
jne
dec
mov
ljmp
mov
movsl
mov
aam
popa
xchg
int3
cmp
out
mov
lods
data16
cmp
cld
test
fistpll
aad
push
popf
push
loope
push
out
xor
jg
das
repz
stos
sarb
mov
ljmp
repz
repz
push
sbb
movsb
inc
push
ljmp
movsl
push
jecxz
lret
shrb
in
add
pop
mov
mov
xlat
xor
fisubl
mov
loope
push
cmp
dec
mov
mov
mov
mov
adc
or
dec
push
out
imul
cmp
push
cmp
clc
or
cmpl
xor
pop
ja
mov
mov
call
js
xor
ret
mov
jl
pushl
imul
adc
imul
sub
ss
mov
cmp
adcb
or
xor
js
mov
push
cmp
fs
cmp
jbe
sti
adc
pop
call
push
aad
add
movsl
lods
xorl
mov
lret
fwait
mov
sbb
or
cmp
sahf
mov
das
push
bound
xor
push
push
dec
inc
pop
in
out
mov
xchg
dec
xchg
ss
mov
stos
xchg
ljmp
xchg
fstl
sbbb
dec
xchg
js
addl
aad
ljmp
data16
repnz
js
pop
dec
int
xchg
outsl
bound
scas
add
mov
movsl
mov
xlat
xor
xor
data16
pushf
pop
mov
inc
sysexit
dec
rorb
push
fimull
fmuls
movsb
sub
jl
ss
popa
vpavgb
imul
into
sarl
pop
mov
xlat
leave
adc
ljmp
fimull
adc
popa
test
lods
loopne
push
ficoms
inc
mov
or
int
mov
mulb
mov
lcall
dec
push
call
in
test
inc
cltd
inc
sti
outsb
idivl
aam
or
jo
outsb
sbb
mov
loope
pop
push
xchg
cld
aad
addr16
pop
mov
xchg
in
pop
sub
xor
dec
les
xchg
push
fwait
stc
mov
push
dec
adc
mov
inc
lock
lea
je
popf
loope
pop
pop
mov
rorl
adc
in
test
repnz
sub
nop
and
xchg
mov
fisttps
ljmp
into
cmpsl
or
sub
mov
inc
hlt
je
das
push
xor
nop
mov
movsl
and
outsb
dec
cli
xchg
jmp
fnsave
mov
jnp
mov
adc
jmp
jge
lret
push
gs
sbb
sbb
mov
sub
or
cli
mov
xor
sbb
cmpsb
jo
push
ret
mov
mov
and
ret
jle
inc
cld
daa
mov
in
movsl
sub
rol
ss
pop
fildll
les
stos
or
dec
sub
rclb
mov
ret
push
arpl
pop
out
mov
cmpsb
push
push
xchg
mov
in
adc
cmp
loope
mov
inc
or
fstpt
and
xor
mov
mov
add
ja
xor
aaa
cltd
cmpsb
ret
int
xor
add
dec
xor
jb
jbe
mov
lcall
adc
in
lods
jmp
adc
leave
jle
mov
sbb
fldl
filds
paddq
push
dec
out
js
jae
pop
es
subl
mov
int3
ljmpw
shl
mov
outsl
insb
ret
andl
mov
mov
out
into
inc
imull
pushf
add
jmp
mov
scas
shr
or
mov
add
or
pop
insb
sbb
test
sahf
movsb
inc
repz
sub
push
push
mov
ljmp
ljmp
jecxz
loope
pusha
rcl
xor
aam
hlt
cwtl
outsl
cld
rol
bound
inc
mov
mov
mov
or
or
cwtl
push
mov
test
sub
push
loope
hlt
sub
lock
sti
mov
or
add
fnstsw
repz
xchg
dec
push
ret
jno
adc
adc
inc
scas
dec
popf
sub
in
cmp
xchg
loop
mov
push
or
in
and
adc
xor
enterw
negb
int
mov
sub
xor
bound
leave
xorb
xor
lock
jbe
dec
or
push
mov
fisttpl
lds
enter
adc
inc
daa
cld
xchg
sub
sahf
xor
out
add
pusha
push
xchg
ss
pop
stos
xchg
mov
cmp
rcrb
into
lds
push
dec
sahf
adc
inc
call
lods
inc
insb
sbb
cmp
in
stc
daa
std
adc
scas
scas
into
mov
test
add
pop
push
outsl
mov
dec
jb
dec
mov
add
rol
aaa
xchg
inc
aas
ss
cwtl
dec
pop
xor
push
or
int
repnz
mov
mov
out
in
lahf
dec
pop
push
rorl
dec
xchg
pushf
jb
fidivl
dec
add
outsl
jnp
mov
lods
pusha
sub
fs
test
hlt
enter
mov
pushf
test
mov
pop
movl
shrl
and
orl
outsb
das
movsl
loop
ja
push
test
orb
sub
mov
pop
cmpsl
movsl
mov
scas
mov
push
addl
aas
xorb
movb
mov
or
or
mov
int3
pop
add
and
ljmp
pop
shrb
call
aam
call
aad
jbe
fwait
icebp
insb
mov
ds
add
repnz
movsb
hlt
fstl
dec
add
lds
imul
in
lock
xor
xor
nop
adc
loop
gs
pop
out
dec
lret
in
cmp
xor
mov
xor
mov
jle
dec
push
mov
sbb
jle
mov
ret
pop
test
out
adc
jne
cmc
and
pop
fcomp
adc
pop
push
insb
mov
sub
jp
outsl
mov
icebp
sub
sar
xor
xchg
fnsave
sbb
push
and
int3
in
xchg
sub
scas
pop
test
cmpsl
into
or
mov
fisubrl
dec
mov
mov
aas
jecxz
jge
adc
jns
hlt
mov
xor
call
sub
push
ljmp
cmpsl
rcrl
mov
dec
lock
lds
mov
in
push
leave
stc
jne
cmpb
xchg
cmpsb
pushf
outsl
xor
push
sub
jbe
mov
icebp
fsubl
shl
loopne
das
roll
shrl
scas
in
cli
fs
iret
cmp
sbb
dec
add
lock
push
push
outsb
loope
lahf
mov
add
icebp
xor
adc
pop
sbb
sub
jae
imul
inc
cmp
sub
movsb
dec
sub
pop
stc
ljmp
sbb
scas
dec
loope
ret
imulb
jo
int3
cmpb
jle
adc
sub
adc
and
pushw
pop
repnz
cmc
and
mov
fisubrs
dec
cmpsl
aad
xor
push
xlat
xchg
xor
out
add
mov
aad
gs
ficomps
or
pushf
data16
lods
es
scas
movswl
and
mov
push
ja
in
pop
outsb
cltd
cmc
sub
jns
arpl
shll
xchg
adc
cltd
xchg
in
fsetpm(287
imul
jl
int
mov
cmpsl
mov
mov
mov
in
fistpl
xor
test
dec
enter
ss
sub
mov
mov
push
outsb
adc
sbb
testl
inc
or
jp
dec
movsl
mov
xchg
sbb
pop
jg
push
ss
inc
xchg
or
push
adc
stos
rorb
adc
mov
add
das
addr16
add
mov
fmuls
enter
lds
push
js
bound
mov
dec
sbb
mov
adc
dec
sub
stos
inc
lods
and
jl
popa
push
mov
mov
mov
movsb
mov
imul
int
call
ficomps
jecxz
adcl
sbbb
stos
pop
xchg
pop
xor
sub
mull
cs
and
stos
fsubr
jp
cmp
repnz
pop
mov
xlat
lods
cmp
inc
mov
sbbl
sahf
call
mov
movsb
adc
lods
xchg
daa
pop
pushf
xor
lret
or
ljmp
leave
ret
xchg
fs
xchg
lea
das
mov
xorl
enter
fidivrs
dec
xchg
pop
push
pop
lods
xor
or
inc
in
mov
cmp
aam
andl
jge
clc
mov
cmp
fadds
popa
mov
push
pop
aam
or
adc
cmpl
dec
ja
dec
push
mov
loopne
mov
or
cmp
fimull
psubusb
jmp
fistpll
stos
xchg
inc
call
add
out
repz
push
insl
adc
cld
cmc
mov
and
cmp
push
icebp
mov
jge
hlt
insb
ficompl
in
loop
cmp
push
cltd
stc
dec
rolb
and
leave
es
xorl
out
and
aad
and
pop
mov
mov
in
pop
cmp
js
xchg
mov
dec
test
stos
cli
sub
xor
sbb
mov
cmp
negl
jno
ret
jmp
adc
insb
push
push
pop
xchg
sub
out
int
out
xchg
stos
mov
xchg
in
dec
pop
dec
aad
jnp
cmp
clc
dec
daa
pop
pop
sahf
insl
lods
imul
mov
mov
nop
scas
jecxz
sub
loope
hlt
loop
es
add
xor
push
and
scas
in
pop
inc
xor
out
insl
and
cltd
dec
inc
push
in
xchg
icebp
push
push
cmp
xor
gs
mov
mov
inc
dec
xor
or
test
mov
dec
sub
je
pushf
add
cmp
pop
push
jmp
fwait
int3
les
sbb
fstpt
dec
imul
mov
jmp
mov
scas
mov
dec
out
sbb
dec
cmpsl
inc
fisubrs
dec
adc
test
xchg
sbb
or
in
sti
push
fwait
insl
cld
fsubrs
mov
icebp
and
mov
cmp
and
jge
xor
rcr
popf
inc
pop
ja
data16
icebp
clc
insb
sbbb
setno
or
inc
cmp
outsl
ja
push
call
int
mov
sub
push
pushf
out
push
rorb
pop
cmpsl
popf
call
cltd
loop
and
pushf
jb
insl
dec
das
mov
insb
ds
fisubs
in
jg
xor
mov
add
or
jo
out
fwait
fcomp
add
push
sbb
xor
iret
or
or
jle
jecxz
ss
add
and
es
scas
mov
mov
into
lcall
pop
mov
scas
or
or
out
lods
inc
bound
ss
test
adc
aaa
or
mov
lea
cs
mov
push
loopne
xchg
cmp
out
rclb
xchg
scas
jbe
inc
push
adc
pop
pop
sbb
add
rclb
dec
xchg
ds
and
mov
mov
or
ljmp
jno
aaa
xor
jecxz
out
pop
nop
insl
dec
stos
dec
movsb
cmp
popf
out
orb
add
jb
and
inc
das
push
jmp
push
pop
inc
mov
cwtl
mov
sub
xchg
push
stc
stos
loopne
roll
push
ret
adc
les
fucomip
adc
lcall
gs
sbb
in
push
mov
test
clc
decl
cld
fstps
cs
stos
xor
in
mov
fists
mov
pop
out
and
lahf
sbb
pop
dec
lret
andb
aas
jae
pop
push
sbb
js
mov
test
fisttpll
and
stc
aad
fdivrp
xor
cmp
jle
mov
std
pusha
es
xchg
adc
jge
cli
mov
xor
xchg
lods
icebp
fwait
dec
push
pop
das
lock
test
stos
mov
lods
sbb
and
loop
stos
pusha
scas
xchg
jns
dec
int3
mov
dec
add
mov
fs
nop
mov
cmpsl
rorb
dec
jecxz
push
push
jno
ret
jb
cli
mov
jge
mov
xor
fildll
arpl
aaa
lahf
aad
sahf
inc
insb
lods
or
stos
jne
aad
push
xchg
cmp
pushf
leave
push
push
movsb
decb
mov
inc
inc
cvtps2pd
frstor
push
lds
mov
cs
lock
ret
std
mov
stos
insl
enter
gs
in
dec
rorb
pushf
nop
ret
xor
mov
popf
add
loop
jecxz
leave
jg
push
xor
out
inc
cmpl
outsl
dec
cmc
pop
xchg
jg
mov
pusha
mov
xchg
test
push
jp
ljmp
or
in
pop
mov
sti
jmp
call
lods
lahf
sarb
shll
pop
add
subb
and
pushf
leave
stc
pop
repz
test
jns
pop
aad
sahf
xchg
icebp
hlt
pop
mov
insl
push
jmp
cmp
sbb
fldt
lret
fcomip
scas
lods
test
cltd
jno
bound
xor
mov
neg
mov
iret
aas
sahf
sub
inc
repnz
jp
and
out
cmp
and
and
push
es
cli
addr16
movb
lcall
lcall
xchg
ljmp
nop
mov
sarb
test
cmpsl
mov
and
dec
mov
adc
xor
ja
int
cltd
iret
cltd
mov
je
xchg
adc
sbb
outsb
and
insl
les
or
dec
or
dec
int3
and
dec
sub
inc
in
cld
xchg
sarl
xchg
or
cwtl
fisubl
sbb
add
in
repnz
arpl
popa
pop
test
inc
lahf
add
sbb
mov
iret
xchg
rcll
xchg
cmp
stos
lret
cwtl
mov
je
ret
fdiv
stos
fdivrl
mov
mov
int
fdivs
push
cmpsl
sbb
pop
mov
mov
shl
push
das
xchg
cmp
test
cmpsb
xchg
sahf
les
aad
cli
in
or
jno
xchg
aas
xchg
sub
and
mov
and
popa
sub
loope
popf
das
jnp
jg
jb
xchg
jnp
inc
cli
xchg
cmp
rol
xchg
fdivrs
push
or
mov
pusha
xor
lock
mov
xor
sub
sti
ljmp
lods
daa
stc
mov
popa
loop
pop
or
into
jge
mov
lods
data16
mov
cs
push
push
jmp
or
push
cmp
xchg
aam
inc
scas
iret
or
test
mov
pop
in
xchg
mov
jg
push
ficoml
dec
mov
jle
in
xor
dec
mov
adc
idiv
xchg
cld
lcall
or
fmul
jl
sahf
ficompl
push
cmc
in
xor
enter
mov
pushl
ljmp
and
mov
jae
mov
jmp
adc
pushf
dec
pop
addr16
mov
xchg
addb
pop
mov
in
push
sbb
ljmp
mov
jbe
xchg
cli
inc
les
dec
es
js
sbbl
nop
jne
fidivrs
sbb
lods
push
mov
dec
pushf
mulb
iret
or
xor
or
cli
sub
lcall
mov
inc
push
movl
add
popa
or
imul
xchg
bound
ret
scas
ja
js
xchg
cmc
inc
sub
lret
pop
addr16
jp
pop
daa
push
pop
pusha
or
xchg
add
lret
inc
test
std
and
sub
add
push
gs
pop
push
cmp
in
push
and
push
dec
rorb
cmp
clc
add
enter
inc
aam
mov
push
xor
popl
movsl
out
mov
push
push
popa
cmp
jl
xchg
cmpsb
mov
xchg
aam
mov
mov
insb
popa
pushf
xchg
mov
sbb
mov
and
xchg
addr16
cmc
cmp
lahf
cld
adc
scas
test
cli
dec
mov
xor
mov
push
pop
push
std
or
addr16
inc
sbb
mov
fwait
mov
hlt
mov
jge
lea
pop
push
push
mov
pushf
push
cmp
xchg
repnz
in
inc
or
mov
fdivs
jg
mov
mov
mov
adc
inc
ja
mov
ret
out
jo
sbb
aaa
xor
and
in
aas
gs
ljmp
leave
xchg
dec
pop
xor
adc
mul
shll
pop
ljmp
lea
inc
xor
out
pushf
mov
xchg
aam
lahf
pop
in
mov
jl
sub
rorl
les
dec
mov
sbb
or
inc
pop
negb
nop
sub
call
cwtl
je
xchg
std
ljmp
mov
mov
mov
sbb
mov
adc
mov
jo
xor
mov
jno
sti
push
pop
popf
clc
mov
test
and
decb
aas
in
in
popf
and
idivl
push
dec
daa
insb
pop
pusha
repz
cltd
insb
pop
push
lea
add
pop
arpl
ljmp
ljmp
dec
lret
fdivrl
imul
push
clc
push
sbb
shrl
orl
mov
lahf
jecxz
mov
sahf
rorl
add
push
push
jno
push
lahf
in
repnz
aas
jle
fsts
or
rorb
lcall
lret
sarb
cmpsb
mov
sub
repnz
pop
mov
add
lcall
imul
jae
mov
add
or
xchg
mov
xor
outsb
scas
inc
fisubrs
rcrb
iret
push
pop
inc
ljmp
iret
mov
mov
ret
adc
jne
dec
inc
pop
jecxz
insb
or
pop
out
sti
mov
and
popf
push
lret
adc
nop
mov
inc
lods
xorb
out
mov
jecxz
test
dec
jg
dec
outsb
cs
or
scas
cs
sub
in
fbstp
mov
cltd
sbb
aad
insb
dec
mov
cld
cmpsl
loope
ja
insl
and
dec
pop
and
mov
fs
mov
nop
les
test
out
and
inc
and
lods
push
mov
adc
in
into
lahf
shlb
sub
push
adc
add
push
cs
int
fsubr
dec
mov
cmpsb
or
daa
mov
aad
adc
imul
in
jns
push
fnsave
push
fisttpl
lcall
pop
iret
cmpb
in
sbb
jecxz
int
jae
mov
test
sub
push
push
inc
dec
mov
mov
ret
jmp
js
outsl
ss
pop
es
mov
or
add
mov
daa
xor
stc
das
lds
jecxz
les
xor
adc
mov
dec
cld
mov
insl
pop
or
stos
inc
mov
pop
addb
cmpsb
mov
ret
in
sbb
pusha
mov
dec
nop
mov
inc
fbld
adc
sbb
and
mov
sub
in
and
shlb
or
out
je
and
outsl
sub
adc
sub
loop
push
or
or
adc
sbbl
mov
mov
arpl
jmp
adc
pop
mov
out
in
and
cmpl
cmp
iret
es
cmpsb
pop
cmpsb
in
mov
mov
jle
add
push
mov
arpl
inc
sbb
cmp
xchg
cmp
mov
dec
sbb
sub
pushl
repz
mov
ficomps
loop
cmp
test
sarl
sbb
xchg
sub
icebp
popa
movsl
hlt
fldl
sub
mov
push
mov
data16
punpckhwd
popa
imull
pop
rclb
xchg
ss
lods
mov
mov
aaa
add
repz
imul
sbb
out
pop
push
mov
cmp
jb
addr16
shrb
inc
mov
stos
mov
add
test
dec
xor
in
push
pop
xchg
out
or
sbb
mov
dec
cld
sar
movl
adc
out
aam
clc
imul
or
push
jle
je
in
mov
shll
ret
sub
das
xchg
arpl
test
push
sub
xchg
inc
dec
mov
or
shl
dec
cmp
pop
aaa
test
mov
cmp
or
lcall
or
push
aam
push
pop
inc
out
inc
cltd
or
loope,pn
out
shrl
fsubrp
addr16
mov
sbb
push
cmpb
mov
aam
xor
scas
fnstsw
cmp
cmp
lea
into
or
jecxz
idivb
sbb
push
popa
sahf
or
dec
out
fsubl
adc
push
call
or
mov
imul
outsl
add
gs
and
lods
test
cli
hlt
jmp
repnz
es
daa
pop
jge
enter
mov
fs
xor
lock
test
push
push
mov
je
fdivrl
ret
mov
int3
test
sub
cli
mov
arpl
xchg
cmp
or
and
leave
and
mov
bound
inc
shll
sub
aam
lods
in
push
lret
les
xchg
aam
jno
les
push
aaa
jg
inc
leave
insb
aad
fisubrs
outsb
fnstsw
and
and
lret
pop
in
dec
push
fldcw
adc
stc
and
rorb
pop
divb
adc
pop
int
push
cmp
dec
lret
or
sbb
add
fdivrl
insl
mov
arpl
nop
sbb
mov
mov
addr16
adc
imul
inc
add
pop
xor
aam
xchg
jnp
daa
or
add
loopne
jb
movsl
sub
mov
sub
sbb
push
andl
cmc
rcrb
test
aas
test
test
fnsave
jno
sbbl
and
add
fiadds
icebp
inc
sti
xchg
push
and
js
mov
cmpsb
fsts
test
lods
cld
sbb
jo
push
xor
inc
test
clc
xchg
push
and
jp
add
ror
pop
push
mov
xor
cmp
jmp
in
inc
push
pop
iret
xor
iret
out
dec
inc
cmc
mov
and
jge
pop
cmpsl
jo
iret
add
push
dec
mov
les
mov
lahf
dec
push
push
mov
mov
insl
out
icebp
addl
sbb
lock
inc
mov
add
mov
movsb
push
sub
jg
hlt
in
cli
mov
stos
shrb
addr16
je
out
jae
adc
jl
leave
jl
adc
sbb
jle
and
fnsave
pushf
pop
xchg
pop
inc
insl
insb
mov
movsb
mov
inc
mov
push
cmp
add
inc
push
add
or
stos
dec
mov
xchg
cwtl
cld
inc
scas
xchg
pop
inc
icebp
fistpll
in
push
fimull
mov
adc
add
popa
ja
sub
repnz
sub
out
add
mov
push
sub
mov
add
sbb
into
adc
or
jo
icebp
sti
inc
call
out
mov
jae
inc
cmp
arpl
adc
data16
xchg
test
and
outsl
ret
ljmp
sub
ret
push
jo
stc
and
imul
hlt
dec
jmp
fadd
pop
test
cmp
add
jo,pn
cmp
jmp
cmp
xchg
repnz
adc
xchg
pushf
lret
mov
pop
adc
push
loopne
push
je
iret
dec
push
cmp
sub
fwait
jl
aas
push
bound
jl
pop
push
scas
mov
xor
ja
inc
nop
sbb
gs
push
jmp
nop
pop
xchg
push
daa
sbb
into
in
inc
jp
push
mov
cmp
sbbl
or
cwtl
out
scas
inc
sub
mov
enter
pushf
test
fstpt
into
xchg
jle
push
icebp
add
imul
popa
xchg
loope
push
stc
xor
pop
push
mov
cmp
dec
daa
adc
in
mov
dec
into
popa
dec
div
neg
mov
in
xchg
add
imul
into
mov
xor
int3
push
insb
fisubl
repz
pop
test
inc
or
lods
pop
xorl
sbb
iret
mov
loope
arpl
push
mov
cmp
dec
lea
sub
notb
int
movsb
dec
adc
rol
call
arpl
mov
mov
stos
mov
in
cmp
or
stos
out
cmp
aas
sub
push
lahf
adc
sub
mov
call
aad
js
es
movsb
inc
adc
and
jl
push
xor
leave
in
shll
es
icebp
shlb
fildl
sub
xor
sti
sahf
movsl
pop
add
test
jge
in
xor
mov
movsl
cltd
rcll
test
inc
rcrl
je
cmc
shll
jno
mov
xor
add
pop
xor
mov
push
rcl
dec
test
sbb
cmc
mov
cmp
loop
or
shrb
pop
pop
inc
cld
roll
dec
ja
bound
loop
jg
inc
aaa
je
sti
mov
loope
xchg
stos
xchg
xchg
xchg
xor
add
push
and
xor
aaa
jbe
push
sub
int3
pop
and
jle
xlat
pop
aaa
aad
out
out
jmp
mov
stos
sarb
loop
bound
fstpt
add
aam
mov
push
aad
xorb
iret
xor
push
xchg
daa
add
jecxz
pop
xchg
mov
fdecstp
sbb
lcall
cmp
mov
mov
add
popf
dec
sbb
in
pop
test
faddl
cli
xor
out
mov
dec
cmc
pop
sub
loope
cltd
sub
or
push
aad
jae
pop
js
dec
jnp
popa
jb
jo
stos
test
lea
jp
sub
ds
hlt
int3
xchg
fnstsw
arpl
and
or
sub
jl
pop
xor
std
insb
mov
insl
and
lds
fisttps
and
hlt
push
push
fildl
or
ja
cld
mov
xchg
dec
aam
les
ja
ja
xchg
lcall
ret
lock
push
lcall
xor
mov
aad
jae
cmp
stos
pop
push
ja
subb
adcl
aam
stos
jl
mov
sbb
or
loopne
out
push
dec
call
xchg
pop
rorl
cmpsb
add
lods
adc
loopne
xor
fwait
mov
mov
adc
mov
nop
out
inc
adc
pop
pop
or
movsl
arpl
or
cmp
je
jns
jecxz
mov
mov
faddp
mov
fldl
jmp
jmp
fs
negl
lds
inc
js
and
adc
jae
stos
cmc
insl
rcr
mov
mov
jae
push
inc
dec
stos
push
xchg
xchg
aas
pop
add
mov
jae
ffree
or
dec
ss
pop
mov
mov
mov
add
jb
rol
mov
push
push
out
outsb
lret
inc
std
mov
push
movsb
and
out
jp
add
add
test
insb
jecxz
xor
jg
and
pop
sarb
and
fs
xor
test
sbb
jns
or
inc
lret
pop
sub
jnp
scas
cli
push
aaa
add
ret
sub
ffreep
sub
xor
fisttpll
sbb
out
out
fcompl
ljmp
mov
dec
pop
mov
mov
test
loopne
sbbb
ljmp
test
push
and
jge
and
push
mov
sbb
mov
repz
popa
or
out
fnstsw
stos
sub
dec
iret
push
lret
sub
mov
dec
push
mov
cmp
mov
ret
movsb
fimull
and
mov
sbb
push
imul
pop
or
add
push
in
mov
inc
insb
fwait
repz
cmc
sbb
or
inc
push
mov
inc
mov
sarb
into
leave
mov
adc
stos
inc
jge
insb
adc
outsb
push
mov
add
push
inc
in
and
xchg
mov
mov
test
lea
nop
rcr
jb
pop
fists
gs
jne
lock
xor
pop
pop
mov
mov
das
bound
repz
lods
cmp
jg
int3
fisubs
out
jnp
mov
and
xor
cwtl
jg
ret
outsl
aam
xor
in
cmpsl
cmp
leave
lods
lods
sub
xor
ljmp
cmp
std
lea
popa
jle
push
cs
inc
cmp
stc
sub
shlb
cmp
test
mov
inc
repz
ror
int3
fwait
xor
movb
xchg
test
pop
xchg
pop
xor
and
js
cld
sbb
mov
insl
dec
cmp
lcall
cmp
lahf
inc
push
scas
movsl
fdivrl
mov
mov
cwtl
sbb
mov
mov
int
shll
out
xor
mov
lods
scas
pop
int
arpl
push
enter
add
mov
xchg
lret
mov
insb
dec
ds
xchg
dec
push
loop
mov
mov
cli
mov
jo
push
cmpsb
mov
std
aam
cmp
adc
xor
push
repz
xchg
lods
inc
push
jbe
lea
pop
xchg
das
push
inc
dec
lcall
pop
loop
ret
mov
or
orb
mov
fwait
mov
push
mov
in
pop
lea
xchg
mov
xor
mov
je
push
xchg
out
xchg
xchg
jp
imul
pop
jb
faddp
or
sbb
ret
int3
push
in
fs
notb
dec
xor
enter
mov
das
mov
outsb
cli
xor
sub
notb
shrb
xor
icebp
mov
or
mov
mov
jne
out
arpl
bound
cmp
jmp
out
setl
pop
dec
es
mov
pop
dec
pop
rolb
and
ret
mov
cmpsb
ja
sbb
mov
jnp
dec
fnstsw
cld
movsb
dec
sahf
shrb
dec
push
xchg
fisttpl
and
push
jne
cltd
push
pop
rclb
add
and
ror
lock
sub
rcrl
xor
sub
divl
std
and
sbb
mov
push
fs
mov
inc
xchg
mov
dec
dec
adc
mov
negl
leave
jecxz
or
inc
cmp
dec
sbb
test
pop
sbb
movsb
pop
xor
mov
add
dec
rclb
mov
adc
mov
xchg
dec
sbb
pop
push
lods
mov
jg
jb
les
and
or
shll
mov
push
loopne
into
fdivrs
out
mov
add
mov
enter
sub
and
popa
push
mov
jnp
iret
or
clc
stos
in
dec
push
inc
arpl
scas
push
gs
roll
test
xchg
xor
cmpsl
push
push
sub
lret
fs
pop
dec
xorb
sub
lock
dec
push
jbe
xchg
aaa
add
jle
ss
mov
push
sub
pop
jo
or
les
pop
and
out
jb
imul
mov
and
inc
jmp
inc
pop
fwait
mov
mov
stos
xchg
sti
mov
inc
push
push
mov
mov
daa
mov
cmp
loopne
in
rcrb
je
sub
xchg
fistps
jb
cwtl
add
mov
mov
add
xchg
out
mov
fadd
xchg
pop
lahf
dec
jp
sub
pop
sub
cmp
jmp
arpl
xor
mov
hlt
stos
add
loope
mov
pop
sub
mov
ret
xor
aaa
mov
in
ret
adc
mov
jle
mov
js
pushf
push
fisubrl
mov
addr16
dec
loopne
jae
xchg
loop
sarb
lcall
push
xor
push
popa
popf
push
and
xchg
outsb
jecxz
test
loope
fbld
sub
push
cmp
or
pop
fs
test
imul
insl
dec
call
xlat
push
loop
adc
lea
jge
sub
dec
dec
nop
ret
aas
push
inc
mov
xchg
das
repnz
sub
into
scas
xorb
mov
ss
imul
rorb
mov
mov
mov
dec
sbb
leave
pusha
xor
data16
inc
jl
pop
mov
in
outsb
push
jne
nop
pop
into
stos
outsb
jae
ja
mov
movsl
stc
pop
xchg
aas
in
rol
lret
mov
mov
mov
lahf
gs
mov
or
or
xor
cmp
in
xor
sub
mov
mov
add
outsb
xchg
fadd
mov
imul
cld
push
inc
adc
movsl
pop
jg
nop
ss
aaa
arpl
mov
iret
adc
pop
insb
repz
addr16
or
pop
ljmp
sbb
jl
dec
pop
inc
outsb
adc
clc
and
sub
pop
jmp
mov
sub
jne
adc
xlat
inc
pop
mov
push
push
cmp
insl
mov
push
aas
addr16
add
out
imul
sub
add
shr
imul
and
bound
xor
xor
push
add
pop
je
jbe
test
and
sbb
sub
nop
inc
or
fwait
cmp
dec
sbb
xor
je
scas
xchg
stos
mov
sub
jmp
dec
pop
stc
mov
pop
test
gs
fiaddl
mov
and
jge
orb
lret
xor
add
stos
xor
and
add
stos
rorl
fwait
in
in
inc
inc
cmp
jns
sbb
and
xchg
loop
push
push
mov
scas
je
lahf
adc
mov
int3
mov
or
sbb
xchg
fcmovb
loope
pop
popf
xor
bound
movsb
dec
out
push
push
sti
mov
cli
insl
pop
sbb
mov
or
fdivp
or
int
cmp
and
mov
aas
mov
push
and
cltd
rolb
pop
sbb
push
xchg
inc
into
sti
mov
daa
or
popa
inc
pop
enter
cmc
mov
repz
test
xor
les
xor
ja
adc
ret
mov
movsl
ds
shll
dec
cltd
or
cmpsl
enter
shlb
stos
les
jne
scas
outsl
jge
lods
sbb
loope
push
inc
push
push
dec
out
dec
mov
loope
rorl
sbb
dec
pop
je
fs
cld
xchg
push
and
sbb
loopne
in
data16
je
pop
push
xor
ja
mov
aam
arpl
jbe
div
and
bound
aam
xchg
push
mov
inc
ss
ljmp
mov
test
loopne
sub
loope
or
in
jns
repz
adc
popa
lret
adc
jg
mov
in
pop
xchg
out
ja
fdivr
mov
mov
mov
jnp
js
xor
lcall
sbbl
decb
out
mov
mov
int
test
loopne
jb
fstpt
popa
out
insb
stos
mov
in
je
mov
pop
jne
shll
rcll
out
outsl
push
lods
and
jb
push
and
ret
jle
inc
scas
or
dec
scas
movb
repnz
sub
push
syscall
sbb
add
push
sbb
div
out
int
mov
jmp
popa
inc
test
fidivl
js
shll
sub
mov
inc
jmp
testb
mov
mov
xchg
push
js
adc
addl
sub
fldenv
fcomps
mov
mov
add
cmpsb
push
scas
add
and
push
jmp
cld
int3
aas
sbbl
xor
imul
test
cld
inc
cmp
mov
nop
scas
inc
push
push
jmp
pop
arpl
pop
sub
jle
shlb
sbb
dec
test
pop
mov
out
sub
mov
cld
fcoml
pop
rcrl
es
test
aaa
dec
sbb
jle
mov
pop
dec
cs
data16
add
add
xchg
jb
fldcw
jae
mov
lea
push
in
mov
mov
aaa
mov
ds
jns
sbb
stos
sub
jge
sbb
xor
ds
mov
pop
lock
cmp
mov
sbb
mov
jb
cmp
repnz
lret
cmp
jecxz
aam
and
movntq
rorb
cld
ret
cwtl
data16
jge
jp
inc
fcomps
xchg
add
adc
cmp
cmpsb
gs
int
pop
testl
sbb
cld
or
in
out
orb
push
ret
daa
xor
xchg
and
mov
aaa
pop
mov
adc
js
jno
lahf
sbb
mov
test
jo
dec
and
cmp
cmc
stos
daa
push
push
outsb
jo
je
testb
mov
shlb
pop
sub
mov
clc
add
aas
jns
stc
roll
mov
cmp
jnp
dec
inc
scas
xchg
jecxz
and
leave
rorb
repnz
push
es
mov
aaa
xchg
cmp
push
cmpl
enter
xchg
push
ficoms
xor
icebp
jg
shrb
push
pop
mov
cmpsl
aam
push
pop
jl
and
push
pusha
pushl
ljmp
andb
sub
dec
mov
hlt
sub
nop
mov
inc
pusha
testl
mov
cld
adc
push
out
jp
add
mov
loope
push
push
mov
cmpsl
adc
push
mov
or
jno
sub
sub
cmp
or
mov
andl
fistps
push
xchg
mov
and
mov
jge
xchg
decl
or
int
cmp
test
les
dec
mov
pop
ss
lret
push
stos
xor
xchg
push
cwtl
movsb
push
adc
sbb
aaa
mov
sbb
or
les
in
fdivrl
sub
adc
push
inc
pop
in
inc
scas
popf
rclb
test
bound
cmpsb
pop
adc
sbb
inc
nop
outsb
fwait
dec
mov
out
scas
or
sarb
sti
mov
mov
adcl
repz
imulb
jns
mov
push
lods
ss
out
mov
xchg
pusha
ret
movsl
push
pop
cmpsl
insl
inc
push
sarl
xchg
or
inc
out
imul
push
push
mov
icebp
imul
ret
xchg
pop
ljmp
repz
mov
arpl
pop
jno
mov
or
mov
cmp
mov
mov
jmp
adc
or
mov
insb
pusha
mov
stos
rcl
outsb
jne
xchg
sahf
push
pop
mov
sbb
or
push
dec
sub
outsb
out
addl
cmc
das
aam
arpl
cmp
int3
push
shl
adc
dec
mov
xchg
fdivl
push
sub
in
lcall
inc
mov
out
adc
test
hlt
add
inc
lock
loope
xor
sbb
mov
inc
in
push
dec
shrb
cltd
adc
iret
scas
mov
mov
or
cmp
pop
push
and
sub
mov
ret
pop
adc
inc
xor
adc
push
add
test
push
insb
adc
stos
lods
jns
pop
arpl
iret
rclb
in
out
iret
push
inc
fadds
fldenv
ret
adc
or
shll
or
pop
or
ret
fisubl
test
cld
arpl
lret
shrl
jne
push
aad
dec
pushf
shll
add
push
mov
rclb
cmp
xchg
cmp
xchg
loop
jae
popf
imul
ret
pop
mov
jo
test
cwtl
inc
inc
nop
lahf
decb
and
jb
sub
inc
cmpl
sbb
inc
mov
pop
pop
stos
cmc
push
lods
fistl
fcomps
ds
test
icebp
movsb
cmpsl
jge
mov
dec
mov
es
mov
inc
mov
pop
clc
xor
dec
pop
sahf
mov
sub
arpl
jg
jnp
outsb
push
test
ds
mov
sti
inc
loop
hlt
stc
mov
adc
lods
ss
dec
fldenv
xchg
mov
and
fstpt
sbb
notl
int
mov
push
add
pop
fmul
dec
or
jg
mov
pop
cwtl
jmp
lret
fs
cwtl
xchg
ljmp
jg
shll
addl
and
mov
push
lcall
fists
aas
pop
sub
in
add
dec
cwtl
mov
adc
xor
push
ds
movsb
mov
inc
and
sub
xor
pushf
cmp
negb
lret
xchg
stc
add
ficoms
lock
js
test
pop
insl
mov
xchg
inc
and
inc
push
sbb
mov
stos
jnp
stc
bound
in
cwtl
sbb
mov
jmp
rolb
push
sub
repnz
push
push
lahf
mov
xchg
int3
and
loop
cltd
dec
js
scas
xchg
jl
sub
imul
and
inc
sbb
insb
push
cli
xchg
in
or
rolb
push
add
test
icebp
addr16
imul
lods
mov
dec
xorl
lret
jno
es
mov
lock
sahf
jb
inc
cmc
popa
push
fnstenv
fbld
ret
pop
sbb
sbb
scas
and
les
inc
lds
sub
push
je
mov
xor
insl
in
jno
pusha
test
lret
addb
cltd
in
or
and
mov
pop
dec
add
sub
mov
imul
mov
jb
mov
cmp
xor
icebp
and
test
or
sbb
sub
call
shrb
or
xor
jmp
mov
xchg
push
adc
mov
lcall
mov
inc
cmp
push
xor
rol
pop
scas
pop
cmp
mov
jns
imul
cwtl
add
sbb
fcomps
nop
test
lock
jno
or
int
cmp
orl
vpcmpeqb
fisubrs
in
loopne
push
ljmp
sub
sub
or
cli
and
adc
loope
ds
push
repz
inc
insl
push
or
xchg
mov
push
aam
cmp
inc
xor
in
mov
lods
inc
cmpsl
iret
add
pop
popa
shll
cmpb
mov
mov
add
stos
cmp
fldl
ljmp
ss
mov
lock
mov
outsl
mov
add
ficoms
add
dec
lea
mov
ret
xorb
mov
stos
inc
in
add
add
ss
sub
ss
inc
fnstsw
pop
in
jecxz
inc
jb
shrb
sub
or
pop
inc
fistpl
ja
repz
and
sbb
push
popf
pop
inc
xchg
add
je
sbb
lret
adc
sahf
mov
xorl
jnp
sbb
or
cwtl
fiadds
test
jg
insl
lds
or
xchg
xchg
and
aam
jge
insb
sub
xchg
inc
adc
pushf
nop
and
cmp
and
inc
gs
cmp
sub
sub
dec
pop
mov
cmpsb
xchg
mov
jno
scas
push
dec
mov
bound
inc
dec
push
mov
fisttpl
push
xor
sub
pop
rol
mov
arpl
push
ja
xchg
push
adc
jb
aas
and
push
mov
cwtl
test
lods
xchg
nop
rcl
sub
sbb
pop
inc
aam
fwait
xchg
jbe
fwait
das
add
lret
faddl
insb
aad
cmpsb
push
cmp
xchg
movsb
push
push
pop
pop
leave
mov
fs
loopne
or
lcall
pop
stc
gs
jbe
popa
ret
aad
mov
inc
sub
mov
shr
push
jp
rorb
jmp
jmp
and
xor
ja
sbb
sub
pop
stc
popf
fs
nop
dec
ja
or
scas
mov
mov
bound
lods
mov
cli
mov
adc
xchg
in
in
lods
out
ds
jbe
cmp
ds
sbb
ljmp
negb
sub
out
ja
adc
stos
cmp
push
icebp
jne
cld
xor
sub
lds
push
mov
xor
sbb
lock
add
gs
fwait
xchg
ss
or
xchg
inc
into
jecxz
pop
pop
sahf
push
stc
les
lret
inc
mov
add
push
test
stos
inc
cltd
int3
cli
push
or
das
mov
cmp
in
xor
sbb
jbe
pusha
cmc
shl
xchg
sbb
in
xchg
mov
mov
jecxz
adc
jle
cmp
fcoml
push
push
lahf
rcll
push
and
lods
jmp
loope
rcl
xchg
jbe
rcrl
rcrb
xchg
ljmp
loopne
fsubs
je
xor
push
stos
int3
call
stos
aam
or
push
or
cmpsl
xor
sbb
lcall
jge
ret
pop
adc
mov
repnz
and
cmpl
inc
fs
es
sbb
scas
ret
pop
test
mov
sub
pop
jae
rolb
stos
adcb
pop
xor
stos
sbb
in
adc
test
inc
mov
insl
and
repnz
sarb
clc
nop
imul
mov
mov
pop
sub
and
mov
xchg
pushf
mov
pop
push
push
ljmp
out
loop
adc
rorl
ja
adc
scas
ljmp
xor
mov
fucom
js
mov
mov
es
loope
arpl
inc
push
repz
outsl
lds
inc
leave
iret
enter
push
ret
pop
adc
or
test
in
push
adc
dec
xlat
ds
jne
push
iret
xor
jno
nop
lea
aaa
lods
cmp
or
fsubrs
fldl
fstpl
not
sub
test
jp
rol
loope
or
jecxz
ret
or
xor
mov
pop
mov
movq
stos
out
pop
les
sub
xchg
pop
or
lahf
fsubrl
mov
bound
mov
aas
mov
fidivrs
xor
inc
rcrl
push
dec
jbe
movsl
add
push
int3
xchg
mov
xchg
imulb
in
sub
clc
mov
mov
aaa
adc
ds
add
xor
divl
pop
loopne
push
dec
sbb
add
arpl
cmp
inc
cmp
ss
push
add
xchg
mov
dec
sbb
test
lock
scas
movsb
repz
mov
jle
mov
jge
ja
mov
or
push
inc
dec
das
rcrb
imul
xor
jne
xchg
arpl
leave
push
mov
clc
lods
adc
mov
cltd
inc
xor
dec
jmp
inc
cli
push
test
pop
sbb
popf
stos
inc
xchg
lcall
cmpsb
dec
or
jge
inc
push
xor
and
add
dec
or
fsub
dec
mov
push
jp,pn
push
dec
push
sbb
roll
sub
sti
sub
push
mov
push
cmp
es
xchg
sbb
mov
sti
push
fidivrs
add
leave
lds
cmpsl
lcall
sbb
mov
sub
lcall
stos
dec
cmp
fildl
pop
cmp
xchg
cmp
insl
jnp
and
adcb
xchg
imul
xor
lods
lret
jp
jecxz
mov
imul
mov
adc
and
dec
repnz
data16
pop
xchg
pop
sahf
jns
add
pop
dec
enter
adc
cmp
or
push
in
and
xorb
pop
cli
mov
rcrl
loopne
mov
bound
mov
xchg
inc
and
sub
stos
jne
cmp
cmp
pop
testl
mov
int
cmp
int3
call
loope
jl
std
cmc
imul
jmp
inc
mov
cmp
inc
xchg
mov
bound
in
test
dec
push
jo
dec
repnz
mov
scas
test
adc
mov
adc
scas
enter
roll
jl
shrb
inc
jmp
jae
fadds
lahf
xchg
test
or
jg
std
sarb
push
sbb
fiadds
mov
outsb
xlat
pop
push
xlat
and
popa
icebp
mov
pusha
insb
pop
adcl
push
jecxz
or
lods
outsl
mov
mov
cmp
aas
mov
sub
test
lock
dec
rcrb
inc
and
nop
aaa
out
in
lea
dec
push
sub
ja
sbb
mov
loopne
cmpsb
test
mov
mov
xchg
fnclex
mov
fwait
cmpsl
inc
jnp
gs
xchg
jns
or
xchg
sbb
sbb
jns
xchg
movsb
in
add
mulb
data16
dec
jno
mov
lcall
and
pop
add
xchg
inc
and
cmp
rorl
pop
ss
push
push
sbb
ficoml
movsb
lock
sti
push
hlt
and
xchg
aaa
mov
lret
push
pusha
mov
into
and
pop
push
inc
mov
sub
int
jl
jl
mov
and
xor
call
and
mov
sub
adc
sbb
push
pop
daa
outsb
ret
fldl
fdivs
in
fiaddl
fstl
dec
lcall
mov
xor
or
mov
cltd
imul
cmc
dec
jmp
gs
mov
xchg
daa
rcr
flds
sbb
pushf
xor
mov
fnstcw
dec
and
cmpsb
pop
addr16
out
scas
jl
push
std
mov
ss
out
lret
stos
repnz
pushf
cmp
add
dec
mov
imul
repz
or
xchg
pusha
cmpsl
test
icebp
stos
rclb
mov
std
push
insb
cltd
or
fcoms
lea
jae
int3
mov
insb
mov
int3
scas
or
xor
je
mov
fmuls
popf
ljmp
fldt
imul
fcmovnu
dec
adc
and
lret
or
fisttps
loop
mov
or
in
aas
adc
xchg
jp
add
mov
es
test
dec
xchg
rcrb
adc
notl
cmp
push
inc
scas
push
adc
mov
into
adc
mov
adc
test
lcall
pop
iret
int
adc
imul
mov
or
stos
inc
cs
pop
adc
adc
or
and
fstl
fisubrl
jp
das
jns
jne
shl
add
push
xchg
pop
or
and
sub
or
das
insl
cli
js
movsl
rclb
adc
scas
aas
mov
xor
mov
enter
clc
les
mov
mov
sbb
aam
rorl
jns
cmpl
jecxz
aaa
frstor
sub
inc
jno
in
mov
mov
pop
push
stos
fsubl
hlt
xchg
movsl
hlt
sbb
push
sysret
jle
adc
jle
cmp
mov
cmc
jg
cmp
cmpsl
cmp
lea
ret
sti
pop
adc
imul
rcll
shrl
js
mov
test
inc
mov
mov
lahf
add
imul
jge
popf
sub
add
inc
jo
fucomp
push
sbb
test
dec
dec
push
jecxz
into
scas
ljmp
jbe
adc
mov
pandn
nop
imul
mov
insb
mov
push
jg
adc
loop
xchg
sarl
pop
lahf
adc
inc
lods
test
sub
push
cwtl
lods
sub
out
mov
lret
loopne
or
lret
jp
ds
xchg
jb
or
dec
mov
fcompl
xchg
sbb
xor
sub
pop
stc
shlb
test
sbb
enter
aaa
adc
mov
inc
mov
xchg
ljmp
iret
dec
jb
aas
das
clc
out
dec
xchg
inc
adc
inc
out
shll
adc
lret
aad
stos
add
xor
imul
sahf
les
inc
lahf
xor
cmp
daa
xchg
fisubl
call
repnz
lods
out
add
mov
xchg
xor
mov
push
mull
sahf
fistpl
adc
outsl
mov
mov
mov
imul
push
negl
push
push
dec
push
mov
scas
sub
mov
lret
cwtl
dec
or
xor
inc
or
mov
stos
int3
outsb
fisttps
ret
fbld
push
out
imul
fmull
push
dec
ret
clc
cld
lret
xchg
xor
and
data16
into
sti
adc
pop
dec
mov
ds
jns
jno
sub
cwtl
jbe
addb
dec
inc
xlat
mov
mov
lea
xchg
and
dec
dec
sbb
or
inc
notb
shll
shl
jo
xchg
out
data16
lds
xchg
sbb
in
ja
add
xor
push
mov
mov
cmpsl
out
pop
lcall
into
mov
scas
lret
fisttpll
sub
add
mov
aad
pop
cmp
dec
and
lahf
jno
rorb
or
sti
rol
dec
sti
fildl
jno
testl
insl
jl
into
rcll
push
cmp
push
adc
lahf
icebp
jmp
aaa
shl
and
shrl
test
in
sbb
and
sub
fcmovnb
sbb
shlb
mov
enter
mov
ja
cmp
jns
vaddpd
cmp
ret
jae
pusha
xor
sbb
cmp
inc
aad
pop
pop
dec
into
std
mov
ficompl
stos
push
xlat
cli
push
sub
aas
mov
jmp
jecxz
mov
pop
push
rolb
push
xchg
cltd
cltd
fwait
inc
adc
pop
cmp
sbb
sarl
push
mov
push
sahf
test
jecxz
cmp
neg
jbe
lock
adc
inc
pop
movb
aas
jg
je
mov
mov
in
or
sub
aas
scas
jo
adc
pop
test
subl
insb
mov
xchg
and
test
mov
lds
out
push
push
mov
ret
dec
jns
xchg
mov
cmp
test
sub
lret
push
sbb
mov
daa
pop
popf
test
jo
dec
rclb
jns
pop
imul
cwtl
add
push
jmp
lret
lahf
insb
pop
jae
nop
stos
dec
ret
mov
cs
in
orb
xor
jne
push
add
xor
fiadds
sub
jmp
xchg
sub
xlat
repz
into
push
shll
adc
cmp
mov
inc
stos
in
mov
fwait
push
addr16
xlat
stos
dec
js
rorb
xchg
and
shrb
js
cmpsl
sbb
fidivrl
dec
fsincos
push
ret
fistpll
je
repnz
je
out
or
fsubrl
jns
mov
jp
insb
lret
dec
scas
cltd
add
sbb
divl
mov
daa
adc
and
add
and
cmc
out
in
jb
sub
inc
andb
cmp
out
mov
mov
add
fld
lcall
bound
mov
push
adc
sbb
mov
push
xchg
and
add
ror
ljmp
aas
add
xchg
ret
xor
mov
insl
nop
into
mov
ljmp
push
jge
sbb
call
inc
nop
pop
pop
aas
xlat
push
ret
push
adc
jg
sarb
popa
pop
clc
mov
push
pop
xlat
sahf
loop
cmp
cld
mov
repz
push
arpl
int
loopne
xchg
sub
xlat
or
xchg
sbb
cmpsb
fwait
mov
in
dec
sub
push
sub
fsts
cmp
fs
aas
out
in
out
lret
das
push
loope
cs
push
rol
sbb
ret
in
and
fcmovnu
sub
decl
cmp
jb
mov
nop
mov
aad
cmovs
lea
push
lahf
leave
mov
cmp
inc
stos
mov
push
dec
jmp
jmp
ds
jle
lock
shr
xor
cltd
xor
iret
iret
stc
cld
xor
int3
cmp
sbb
dec
sbb
bound
xor
rolb
xchg
hlt
cmp
fcoms
icebp
sub
adc
lods
ret
or
hlt
push
mov
add
cmp
rcr
pusha
jmp
cmp
xchg
xchg
stos
xchg
push
scas
sub
fbstp
into
push
mov
mov
andl
stos
jp
pop
cwtl
mov
fcmove
stos
xchg
jle
cmpsb
mov
cmpsb
icebp
jno
pop
adc
cmpsb
jle
inc
add
pop
outsl
add
mov
or
xlat
rcrl
pop
pushf
sub
mov
jae
out
clc
orb
inc
dec
sub
mov
int
jne
in
stc
jl
dec
pop
int3
repz
dec
xor
mov
mov
mov
outsb
xchg
rcll
movsb
xor
push
sbb
sbb
stos
push
jbe
inc
outsl
enter
sbb
adcb
pop
xchg
pop
mov
push
push
xor
in
add
fcoml
jmp
add
shlb
mov
pop
subb
cmp
mov
mov
cmp
push
pop
popf
xor
cmpsb
cmpsb
mov
pop
pop
in
loopne
mov
into
cmpsb
or
add
int3
lds
lods
mov
xchg
xchg
pop
or
pushl
test
jl
scas
push
mov
push
or
mov
sbb
mov
mov
mov
int3
xchg
in
ja
sarl
fistpll
aad
hlt
jb
xchg
pop
or
mov
xor
loop
jbe
cs
xchg
pop
shll
cmpsb
push
jne
sbb
mov
je
in
or
or
cmp
in
pushf
clc
lods
sbb
mov
ret
push
flds
mov
sbb
pshufw
jne
pop
mov
loope
jno
mov
lds
enter
jnp
in
call
sbb
and
push
push
xorl
cmp
or
stc
sub
in
and
jmp
add
imul
xor
push
dec
or
orb
jno
cld
mov
mov
loope
outsb
outsb
xor
mov
push
stos
pop
sub
pushl
not
mov
insl
xchg
cmp
mov
sub
push
imul
loopne
data16
or
mov
inc
lea
xlat
cmp
test
xchg
xorb
adc
dec
ljmp
sub
out
pop
mov
inc
cmp
lea
pop
movsl
add
xor
push
lods
mov
pop
dec
or
fucomi
xchg
push
jge
pop
jg
aas
or
mov
mov
roll
jb
push
adc
clc
add
inc
out
call
sub
mov
jl
iret
fsubp
add
inc
aaa
and
cmp
outsb
out
scas
xchg
movsb
mov
xlat
es
pop
scas
fdivl
dec
movsb
sbb
sbb
std
inc
pop
shlb
mov
mov
aad
and
pusha
push
loope
aad
adc
pushf
ucomiss
xor
push
pop
repnz
dec
cmpsl
pop
add
jne
jo
xor
loope
or
imul
cs
xor
movsb
sbb
xchg
repnz
and
repnz
jle
xor
adcl
ret
pop
mov
lret
mov
insl
mov
xchg
jl
pop
jae
adc
shr
jecxz
add
dec
scas
mov
les
and
cmp
outsb
mov
in
popa
cmp
imul
fnsave
sahf
sub
mov
mov
and
xchg
gs
ljmp
mov
je
scas
cmp
mov
scas
and
aam
jnp
jno
sub
rclb
jmp
cmp
or
xchg
inc
jns
xor
add
xchg
in
lcall
inc
add
lcall
jge
pop
sbb
iret
inc
push
jmp
dec
cmpsb
pop
or
orb
ja
jmp
xchg
dec
ret
add
jo
push
pop
mov
sbb
lds
inc
cmc
fistps
cs
mov
and
test
inc
rclb
scas
aam
mov
cltd
bound
andb
pop
enter
in
jno
rcl
sti
jo
div
sbb
sarl
push
dec
dec
cmp
push
sar
mov
es
pusha
js
lret
or
jl
test
adc
xchg
jnp
stos
sub
dec
in
mov
imul
mov
idivl
arpl
or
mov
cli
setae
mov
push
dec
dec
out
pop
mov
dec
out
dec
icebp
jge
iret
mov
or
dec
stos
push
push
orb
inc
pop
xchg
lds
or
ret
loopne
loopne
mov
jmp
popf
fnsave
movsl
pop
pushf
adc
pop
push
ret
xchg
dec
and
push
jg
mov
mov
pusha
mov
xor
ficoms
jmp
outsb
es
mov
out
add
fiaddl
add
mov
arpl
shlb
xor
fnsave
shrl
fistl
iret
sarb
inc
fs
sbb
rol
dec
sub
push
xchg
insb
sub
jmp
test
icebp
into
mov
mov
lea
xchg
sub
mov
faddl
jl
adc
jl
repz
loop
dec
call
out
inc
ja
std
jecxz
xchg
aam
fst
xor
out
lods
jle
aad
xchg
or
pop
test
setno
pop
cmp
clc
add
int
les
adc
test
jnp
sbb
sub
mov
pop
jmp
sbb
hlt
xchg
cmp
mov
xor
rorl
mov
inc
clc
cmp
cwtl
pop
pop
adc
cmpsb
fcmove
roll
push
mov
mov
arpl
jno
xchg
dec
sbb
popf
cmpsb
pushf
mov
faddl
sub
enter
aam
xor
in
sahf
push
xchg
jbe
testb
adc
out
mov
and
in
aad
adc
int3
mov
jg
fstl
decl
in
ret
mov
sub
xchg
dec
cmp
push
inc
push
gs
divl
pusha
push
cmpsl
sub
inc
shlb
aad
or
dec
inc
aas
push
xchg
mov
pop
xchg
lret
push
movsl
dec
movsb
dec
add
jb
pop
dec
xor
test
dec
js
inc
ret
fiaddl
movb
int3
adc
outsl
add
nop
push
dec
lods
nop
nop
test
push
ficompl
cmp
xlat
jle
das
push
xchg
stos
push
mov
or
mulb
jb
mov
xchg
sti
orl
int3
stos
int3
in
jmp
add
lea
cwtl
rolb
shrb
jg
adc
insb
sti
out
lods
clc
ds
outsb
cmp
adc
sbb
lcall
mov
sub
mov
shlb
inc
flds
push
pop
push
inc
xchg
int3
aad
add
push
xor
bound
xor
adc
test
inc
pop
add
outsb
stos
mov
jp
mov
push
push
dec
jmp
scas
enter
cltd
jg
imul
mov
repnz
jo
lret
adc
jp
andb
adc
mov
mov
or
add
arpl
mov
jnp
pop
scas
mov
mov
xchg
lea
dec
sti
setae
mov
and
xchg
loop
jnp
mov
loopne
push
cwtl
mov
sbb
add
xlat
bound
inc
dec
mov
movsb
sarl
mov
mov
dec
dec
push
in
out
dec
sub
lret
loope
xor
lret
push
stc
dec
stos
aam
shr
mov
les
push
adc
cmp
lock
pusha
mov
adc
fists
and
hlt
sub
sbb
pop
sti
push
out
pop
ljmp
inc
in
xor
js
lret
or
adcb
mov
xchg
jmp
mov
push
das
pop
xchg
sahf
push
mov
gs
fwait
stos
xor
pop
test
jecxz
mov
mov
rclb
sbb
out
fwait
push
das
push
push
jne
fmuls
dec
xchg
das
pop
cmp
pop
jp
pop
cmp
lock
mov
adc
loopne
and
xchg
inc
sbb
inc
icebp
neg
xor
std
or
outsl
shrb
cmpsl
and
mov
adc
add
mov
into
mov
or
jecxz
js
arpl
dec
xchg
leave
push
addr16
in
fwait
dec
mov
push
mov
outsl
aas
sub
cmp
or
mov
js
imul
jo
push
je
jl
mov
stos
push
imul
loop
arpl
dec
imul
les
lds
dec
ret
jle
popf
inc
cmp
outsl
arpl
shrb
dec
testl
pop
push
pop
ja
lahf
sti
inc
cli
dec
lea
aad
adc
cmp
nop
in
clc
shlb
jge
adc
adc
pop
hlt
xchg
inc
lods
ljmp
aas
inc
stos
js
sbb
dec
rcr
mov
xlat
mov
mov
fsts
pop
outsb
mov
fwait
cmp
push
fidivrl
imull
xor
test
mov
or
rol
cmp
nop
dec
int
mov
lea
dec
enter
jbe
je
jmp
cmp
in
and
xor
lahf
bound
dec
out
inc
adc
pushf
mov
cmp
aam
fdivrs
or
xchg
test
adc
xor
push
ljmp
inc
jmp
sbb
xor
shrb
sar
sahf
rcrl
ficompl
gs
mov
add
aas
mov
in
notb
out
pop
xchg
inc
hlt
xchg
mov
push
xor
mov
mov
clc
pop
aaa
dec
cs
or
ljmp
push
pop
xchg
imul
jo
rcr
stc
jne
cmc
sub
sbb
jg
lea
and
pop
push
push
rorl
fdivrs
stc
mov
ja
pop
pop
mov
insl
mov
jl
or
pop
imul
xchg
xor
repnz
subb
cmp
in
pop
loop
jae
xchg
cmpsl
add
movsb
sub
pop
cmp
js
rcrl
js
xor
pop
and
push
pop
fs
popa
in
mov
popa
test
js
mov
lahf
jge
push
cmp
pop
sub
lods
mov
mov
dec
decb
mov
ljmp
shrl
cmp
insl
xor
out
push
sub
jle
ror
cwtl
scas
pop
cmp
and
adc
dec
js
mov
mov
adc
movsl
mov
xchg
pusha
mov
orb
xchg
sahf
mov
lcall
leave
and
mov
jle
sti
push
daa
bound
jae
xchg
and
mov
fs
cld
xchg
cltd
xchg
add
add
addr16
loop
mov
lahf
jno
inc
mov
adc
pop
cmp
adc
mov
dec
out
adcl
and
adc
jne
mov
add
jle,pn
mov
mov
lret
int3
pop
adc
push
xor
inc
mov
fstl
lret
gs
adc
cmc
insb
leave
mov
xchg
cmpsb
inc
mov
mov
mov
in
data16
sbb
notl
scas
test
shrl
mov
push
mov
or
sbb
jl
or
mov
xchg
es
inc
mov
iret
mov
pop
div
fs
cwtl
mov
jbe
aam
pop
push
sarb
cli
mov
push
push
inc
shrb
int3
dec
imul
pop
cmp
jnp
cmp
aad
pop
lods
xchg
jnp
sub
lahf
stos
movsl
mov
jge
cwtl
daa
pop
pop
push
or
scas
add
fwait
or
stc
std
inc
dec
scas
sub
es
adc
sub
call
fadds
cmp
xchg
sub
imull
adc
jle
dec
sub
mov
test
jne
lcall
add
aas
cli
movsb
and
fs
aaa
mov
sub
movsb
or
int
cmp
out
push
jmp
xchg
scas
addr16
push
pop
cli
dec
dec
adc
xchg
push
sti
pop
jecxz
mov
mull
dec
xchg
inc
mov
and
sub
imul
rolb
scas
rcrb
dec
in
mov
add
jns
sbbb
test
cmc
dec
or
popf
loop
cmp
ss
mov
call
clc
sub
xchg
in
mov
ljmp
subb
stc
mov
je,pn
retw
mov
outsl
cmpsl
insl
inc
jbe
arpl
pop
fmuls
and
push
and
jo
outsl
cmp
fcompl
dec
xor
shr
in
xor
std
adc
mov
push
imul
inc
push
mov
and
lea
mov
and
add
fldenv
shl
jge
sbb
faddp
imul
fwait
sub
leave
cmpsb
and
jne
jg,pn
insb
inc
cmp
lock
jne
sub
xlat
mov
sub
cmp
add
inc
outsl
iret
lcall
inc
hlt
mov
mov
add
nop
and
lahf
lea
not
ds
inc
rclb
dec
push
mov
mov
adcl
das
or
sbb
sbb
mov
xchg
mov
mov
sti
pop
cmc
push
imul
xor
imul
mov
in
cld
dec
dec
sub
aaa
adc
pop
or
call
pop
aas
hlt
icebp
ljmp
addl
or
xchg
sbb
or
mov
and
or
and
cmp
adc
sub
stc
in
jge
dec
cmc
repz
xor
xlat
in
movsb
ds
dec
or
pop
std
mov
mov
in
subb
adc
xchg
jecxz
and
sub
fsts
imul
xchg
js
jp
repnz
lods
or
sub
mov
clc
or
mov
dec
add
sbb
gs
mov
jg
sub
mov
inc
adc
loopne
fldenv
cli
test
push
pop
mov
xchg
loope
push
sub
int
jmp
dec
xor
push
cmpsb
popf
ss
in
sub
mov
leave
fcmove
sub
sub
jl
out
mov
out
mov
jg
int
jnp
xchg
enter
cltd
xchg
jge
stos
movsl
mov
movsl
cmp
cs
jo
out
sahf
cmp
ljmp
mov
dec
sub
or
ror
loop
outsl
adc
hlt
out
or
add
rorb
xchg
mov
mov
out
xor
pusha
push
inc
out
jne
jae
mov
push
mov
sub
and
icebp
mov
jne
testb
add
rorb
enter
imul
int3
pop
xchg
std
mov
in
mov
hlt
xorb
daa
pop
popf
sub
pushf
std
sbb
imul
sub
sub
andb
js
fldt
sub
dec
inc
test
addr16
addr16
cmp
call
pop
xlat
pop
mov
cltd
xor
mov
out
lea
or
pop
push
push
sti
cmp
pop
pop
sahf
and
adc
dec
mov
fiaddl
cmp
add
push
sbb
lock
mov
scas
test
rol
dec
sub
clc
cwtl
cld
sub
jne
les
fdivrs
lds
sbb
test
pusha
sub
dec
je
pusha
push
jg
pusha
data16
sub
lret
jecxz
adc
pop
ss
dec
dec
pop
out
pusha
loop
sbb
adc
call
insl
inc
jl
mov
fidivrs
sub
inc
mov
movsb
data16
jecxz
in
cmp
jmp
inc
or
fisubs
cli
pop
adc
outsb
movsb
cld
imul
sbb
aaa
xchg
sub
out
and
aaa
push
sub
sub
out
adc
pop
addr16
cmp
icebp
jb
jp
adc
jb
rcll
outsl
stc
lock
sub
xchg
add
mov
mov
mov
gs
or
dec
lock
sti
pop
mov
dec
fisttpl
push
dec
xchg
cli
add
iret
leave
adc
aas
xor
ljmp
sbb
xchg
mov
push
outsl
leave
mov
aaa
xor
in
sbb
fsubs
mov
adc
outsl
mov
xor
lret
ljmp
inc
data16
nop
xor
insl
jge
lods
pop
sbb
xor
or
outsl
jg
mov
ret
pop
jb
movsl
add
in
xor
mov
es
cli
inc
sbb
fstpt
jp
xchg
mov
and
into
sbb
push
lea
shr
mov
or
or
subl
nop
into
mov
cmpsl
or
cmc
lds
mov
pop
sbb
add
mov
or
es
dec
rclb
repz
daa
xor
xor
pop
fsubl
mov
lret
sub
lahf
xor
add
xchg
ret
cmp
sti
jp
stos
cmp
xchg
xor
or
testl
xor
insl
pop
cli
sarb
xchg
lea
orb
sbb
or
scas
jmp
shl
dec
daa
xor
popf
aad
mov
cwtl
in
mov
insl
lock
addr16
push
dec
cmp
jbe
inc
mull
out
ja
bound
jp
xchg
and
adc
push
mov
rcrl
ffreep
push
sbb
mov
test
in
cwtl
popa
inc
xor
je
xor
xor
fs
add
push
push
mov
push
sar
cmp
out
xchg
dec
adcb
or
add
xchg
jp
test
ror
dec
sahf
xor
out
mov
sub
test
mov
cmpsl
or
outsb
call
mov
sbbb
outsl
ret
leave
pushf
cmpsl
dec
je
test
jg
outsl
mov
negl
jae
inc
add
mov
imul
or
pop
lcall
jl
lds
daa
jl
loopne
cmpsl
stos
pop
mov
or
gs
and
inc
dec
adc
push
daa
jle
into
push
fidivrl
imul
decb
push
pop
or
pop
movsb
or
dec
jl
enter
mov
mov
fidivrs
adc
push
jecxz
sbb
out
jecxz
aad
mov
or
adc
movl
arpl
out
mov
add
push
cltd
mov
in
cmp
incb
adc
sub
cmp
iret
mov
push
add
pop
sahf
arpl
lock
cwtl
test
aam
ds
pop
ss
fidivrs
enter
push
inc
pop
stos
notl
out
jecxz
rcrl
lea
sbb
sub
repnz
je
enter
je
push
jbe
xchg
jb
inc
push
mov
jge
stos
lret
rclb
fisubrl
aad
sub
loopne
pop
mov
mov
fadd
jge
push
pop
cmpsl
out
or
mov
aas
fimuls
mov
jnp
inc
test
push
inc
xchg
nop
jp
lods
sbb
mov
mov
adc
pop
push
mov
pop
push
sub
pushf
push
addr16
or
mov
ret
aas
fisubs
mov
insb
fcmovu
mull
jle
cmpl
jne
push
jns
pop
and
ja
mov
xlat
das
cmp
lock
push
mov
and
pop
cmc
test
cmp
xchg
and
mov
and
ret
cmp
jge
filds
sub
leave
mov
mov
add
jns
mov
xchg
adc
incl
fcmovnb
lcall
mov
jecxz
cmc
adc
lds
mov
pop
push
mov
mov
jge
negl
dec
fistpl
test
add
add
xor
and
xchg
pop
dec
outsl
mov
mov
mov
jbe
add
sub
outsl
dec
and
jl
dec
movsb
inc
mov
and
sbb
push
je
and
or
movsb
mov
daa
aas
imul
jns
cli
inc
fsub
xchg
les
pop
sub
inc
jmp
repz
loope
jmp
add
test
scas
popf
in
pop
and
add
xchg
and
xchg
pop
loope
repnz
mov
sbb
dec
mov
dec
push
sub
popf
popf
dec
sar
out
mov
pop
les
or
stos
fwait
in
push
cltd
in
cmp
cmpsb
inc
popa
mov
pop
das
rcrl
je
or
xchg
les
xchg
xchg
in
cmp
fistps
loope
jns
rol
outsb
in
xor
jge
mov
lcall
outsl
aam
js
mov
mov
xor
sahf
mov
xchg
pop
jb
call
mov
iret
cmc
mov
pop
push
ja
mov
push
cmpsl
xchg
negl
les
push
aam
repz
or
lds
lahf
pop
xor
mov
fwait
xor
stos
push
call
sub
bound
push
mov
mov
xorb
mov
loope
push
sub
popf
inc
js
mov
scas
inc
cmc
es
inc
push
outsl
aam
loopne
mov
mov
pop
mov
and
cli
scas
int
xor
and
mov
push
jl
arpl
hlt
je
xchg
daa
xchg
fbstp
iret
push
adc
and
cmp
stos
cmp
movsl
push
inc
popa
push
add
add
loopne
daa
pop
jbe
xor
push
xorb
enter
jle
mov
push
sbb
imul
push
sub
jno
xchg
cmc
jbe
xor
addr16
das
test
adc
jp
sbb
xor
jns
jno
rclb
imul
call
mov
xor
pusha
cmp
pop
sbb
mov
xchg
ja
stc
inc
push
mov
mov
jmp
stos
dec
or
outsl
adc
adc
mov
dec
aas
idivb
in
loope
int
sbb
and
lahf
push
pop
lcall
mov
xchg
sub
lcall
fadd
inc
push
sti
adc
mov
xchg
cmc
repnz
pushf
cmp
mov
jp
cmp
arpl
pop
add
jae
inc
mov
sbb
dec
dec
ror
pop
enter
dec
sub
lahf
test
jp
fdivs
inc
dec
inc
inc
mov
ret
sub
loop
jno
mov
mov
jmp
arpl
push
dec
xor
cmp
cmp
aas
mov
in
add
mov
mov
mov
cmpsl
mov
pop
add
mov
test
insb
mov
mov
adcb
stos
ret
or
mov
adc
int3
outsb
sbb
mov
cwtl
sbb
dec
and
push
shrl
sub
in
xchg
dec
scas
xchg
or
mov
movsl
std
int
lret
adc
movsl
lods
push
repnz
lods
add
stos
insl
push
movsb
lret
fists
mov
push
in
push
jae
inc
hlt
das
mov
mov
adc
mov
pop
sub
mov
cmpsl
movsl
inc
outsb
adc
xchg
jmp
stos
mov
int3
jae
mov
sti
and
xor
and
movsb
adc
jb
fisttpl
push
cli
out
mov
xchg
aaa
inc
jp
dec
divb
jp
mov
sub
jmp
scas
mov
xor
xor
dec
sahf
ljmp
rcll
or
xchg
scas
test
aam
and
lods
add
mov
pop
mov
movsl
and
push
mov
xchg
pop
jns
ds
daa
jbe
arpl
das
repnz
aam
in
jns
imul
and
pop
pop
loopne
inc
push
push
scas
outsb
insb
adc
ljmp
adc
xor
out
or
xor
mov
lcall
xor
xchg
mov
cmpsl
xchg
lods
pop
popl
fwait
mov
aam
cmp
enter
pushf
sub
dec
push
adc
dec
and
jge
xor
add
pop
call
adc
add
clc
ret
pop
pop
mov
mov
inc
xchg
stos
pop
xchg
test
scas
cmc
and
xor
xor
aad
in
dec
xchg
in
and
mov
adc
push
push
push
repnz
or
pop
mov
popa
cmpl
or
lods
push
jne
and
incb
pop
push
cmc
pop
inc
or
xchg
sar
mov
pop
popa
shll
xchg
dec
and
push
inc
jg
sbb
cmc
js
add
lret
jp
fsubrs
outsl
fxch
lods
scas
lea
mov
jmp
jp
xchg
xchg
pop
jb
rcl
fisttpl
push
loop
jge
dec
adc
out
add
inc
push
mov
out
xchg
push
dec
clc
sahf
mov
iret
cmpb
mov
pushf
adc
mov
pop
sbb
add
cmp
adc
ret
add
mov
mov
dec
mov
jnp
cmc
or
xor
sti
mov
fsubl
push
lret
popf
scas
lcall
shll
xchg
out
test
xor
mov
jmp
inc
cmpsb
fisubrs
adc
aaa
popf
ja
mov
mov
std
cmp
pop
dec
repz
roll
cmpsb
pop
out
xchg
lea
cs
and
pop
push
stos
out
cwtl
ret
and
jp
ds
gs
pop
iret
jae
inc
xor
cmp
inc
in
iret
pusha
cmp
xorl
test
mov
xor
icebp
call
enter
xchg
jl
ja
or
jle
dec
out
nop
lcall
fcomps
xor
sbb
mov
pusha
jno
cmpsl
xchg
jo
in
ret
ja
inc
cmp
out
test
scas
jo
push
cs
std
shlb
xor
cmp
mov
sbb
and
mov
lret
cmp
mov
mov
ss
cmpsl
pop
dec
dec
cmc
into
pop
iret
xor
xchg
jg
nop
out
sub
xchg
ljmp
movsl
mov
js
loop
sbb
push
dec
and
mov
arpl
sub
or
jnp
cmp
xchg
js
adc
aam
shll
fsts
sbb
fidivrl
test
cld
lcall
push
cltd
popl
popa
jp
or
jmp
adc
mov
sahf
in
mov
mov
xor
lahf
add
andb
xlat
cmp
mov
out
leave
jb
fmul
daa
mov
test
inc
lcall
cltd
inc
jge
test
and
int3
jno
subb
insb
nop
and
in
add
push
mov
outsb
dec
addb
inc
shl
xorb
aas
inc
dec
popf
cltd
call
xchg
push
cmp
sti
jne
cltd
adc
clc
jb
addl
lret
inc
es
cs
inc
xchg
xchg
or
sub
mov
and
movsl
adc
pusha
xchg
dec
cmp
cmp
jb
les
mov
pop
in
imul
imul
popa
adc
orb
ljmpw
pop
dec
scas
and
push
cltd
fbld
je
xchg
sahf
bound
leave
insb
mov
sbb
cld
insl
or
arpl
adc
cli
mov
test
xor
xrelease
enter
gs
jg
lcall
jmp
xchg
adc
sub
or
dec
dec
out
dec
ret
cmp
sub
jo
push
cmp
push
sub
and
mov
jmp
add
inc
cltd
imul
xor
lret
cmp
add
push
int3
cmp
cmp
cmp
fistps
push
mov
lock
jnp
stos
aaa
push
out
inc
jnp
sub
aas
orb
pop
inc
lcall
adc
pusha
add
gs
loop
les
push
sbb
or
mov
idivb
movsl
out
xor
cmp
scas
pop
add
sbb
aaa
shlb
cmp
jne
pop
imul
xor
lds
insb
jge
inc
lahf
push
pushf
shll
cmpl
and
adc
out
iret
idiv
out
mull
push
leave
push
dec
inc
xchg
and
icebp
rcl
dec
repz
shrl
scas
scas
push
push
pop
imull
fwait
jb
jmp
pop
or
jge
jle
mov
lods
add
nop
xchg
cli
pop
push
push
cmpsb
sbb
lret
push
scas
push
mov
cmpb
sbb
xorl
bound
lea
je
pop
and
clc
outsl
push
pop
rcr
jle
mov
or
lcall
pop
dec
loopne
xor
icebp
sub
test
aaa
pop
lods
mov
inc
push
jno
popf
jb
push
scas
sbbb
cmpsl
xlat
and
call
or
jg
icebp
enter
push
mov
mov
subb
pop
fisttps
rcll
cmp
stos
dec
out
sbbb
lods
ret
jb
push
pop
mov
mov
mov
lahf
mov
movsb
out
ljmp
sbb
cmp
fsubrs
xchg
lods
mov
pop
in
cli
pop
push
bswap
jl
pop
add
sbb
sub
pop
sub
pushf
or
pop
cld
bound
add
or
sbb
hlt
cmc
pop
push
jbe
popf
orb
je
jge
cmp
movsb
sti
jp
and
scas
push
stos
out
add
mov
lds
dec
inc
stos
cmp
iret
decb
sub
sub
out
push
lods
cltd
pushl
cmp
pop
shll
test
add
into
stos
xor
pop
fadd
sub
leave
clc
inc
mov
fmull
add
fistpll
test
or
xchg
mov
lahf
je
or
lds
ficoms
enter
in
sub
or
or
mov
neg
mov
xchg
popa
fimull
in
xchg
ret
xor
jge
dec
out
in
ds
xchg
insb
cmp
lahf
push
sub
ss
jg
popl
mov
xchg
mov
mov
xchg
ja
xor
jg
int3
test
sbb
popf
push
lds
gs
addr16
push
pop
aaa
cld
add
filds
xchg
fidivrs
add
mov
sub
push
or
daa
mov
xchg
ret
sbb
and
ds
jmp
test
push
sti
push
sbb
mov
popl
add
inc
mov
xchg
jbe
mov
fists
push
into
cld
add
scas
es
ret
mov
cld
mov
js
test
sub
mov
scas
push
sub
lcall
jmp
push
push
leave
outsb
mov
or
or
mov
cmp
mov
cwtl
mov
loope
cmc
dec
lret
data16
pop
lea
pop
mov
fidivrl
std
jge
sub
or
aaa
jmp
out
add
test
les
out
xor
insb
stos
xchg
das
lcall
xchg
push
outsb
pop
xorb
sub
test
lods
mov
js
shl
pop
test
dec
lcall
pop
mov
loop
inc
push
hlt
mov
jg
xchg
in
mov
out
je
lock
or
rclb
out
jl
sub
xchg
or
cmpsb
mov
loopne
inc
adc
subb
stos
repz
je
sub
add
lods
jne,pt
fsub
push
add
xor
mov
cmpsl
fidivrl
mov
loopne
data16
jg
mov
mov
call
out
mov
push
inc
dec
ret
es
jmp
jge
mov
jae
mov
stos
fwait
mov
add
je
dec
jno
jae
fs
sub
cmp
adc
adc
int3
sbb
mov
cltd
add
test
js
jnp
loop
into
bound
cli
incl
xchg
dec
mov
sbb
jne
negb
std
fdiv
call
imul
rorb
in
cmpsb
outsl
rcrb
pushf
in
repnz
enter
add
push
cmp
and
pop
std
pop
icebp
mov
mov
ljmp
sub
add
sar
sub
in
fsubs
mov
mov
cmpsb
sbb
daa
fcmovne
or
mov
ja
test
shrb
cmp
push
sub
xchg
scas
js
sahf
lret
outsl
dec
cmp
cld
stc
mov
mov
push
jbe
sbb
movsl
test
mov
mov
push
sahf
inc
cmp
scas
cli
sbb
loope
and
mov
pop
addl
or
test
into
mov
lods
mov
pop
in
lea
je
loop
sub
call
dec
in
scas
or
ja
mov
lahf
cmp
pop
test
in
call
es
inc
cmp
xchg
mov
pop
inc
mov
and
sub
cmp
dec
mov
pushf
mov
lret
lea
lcall
jne
mov
mov
aaa
adc
bound
push
sub
push
movsb
lret
jb
sbb
or
mov
fisubl
sti
cld
pop
out
cwtl
jmp
cmp
push
sbb
lock
fildll
bound
in
daa
cmpsb
adc
imul
repz
xchg
mov
int
push
scas
adc
jo
mov
inc
dec
jb
lock
xchg
mov
cmp
fbld
addl
scas
int3
or
xchg
pop
insl
cld
scas
mov
adc
xchg
lcall
xor
dec
jb
cs
mov
mov
pusha
push
pop
fsubr
inc
push
and
dec
mov
push
xchg
add
je
mov
and
push
pop
out
add
repz
out
mov
stos
inc
std
push
hlt
repz
inc
pop
jecxz
ret
fs
fimuls
xchg
test
pop
enter
mov
cltd
inc
jb
fisubs
add
xlat
cmp
lods
mov
xchg
xor
jp
lahf
or
adc
mov
out
inc
movsl
in
sub
ja
mov
or
movsb
test
movsl
push
jmp
add
fadds
out
sti
sub
andb
stos
cli
xchg
ret
loop
cs
cld
mov
pusha
aas
sub
in
sahf
cld
movsl
adc
push
jnp
push
sbb
adc
jge
lahf
hlt
or
aaa
mov
stos
cltd
mov
inc
loopne
jmp
andb
cmc
out
mov
mov
shl
fwait
jge
dec
jnp
xchg
sbb
jge
push
sub
mov
rcrb
sub
aas
push
cmp
ljmp
jns
xor
lcall
push
ds
jne
adc
adc
push
movsb
cmc
inc
mov
fstpt
sbb
sbb
iret
pushf
popa
pop
pop
js
pop
mov
add
push
xlat
sbb
imulb
call
out
rcrb
add
add
insb
xchg
xlat
gs
adc
repz
aaa
dec
icebp
jg
imul
xor
cmp
in
sub
mov
or
sarb
test
adc
shl
fwait
movsb
dec
sbb
out
imul
rcll
jge
mov
divl
int3
pop
lahf
repnz
cli
jb
out
into
pusha
ljmp
cmc
xchg
push
push
or
data16
mov
popa
sbb
movsl
ret
sbb
or
push
leave
mov
pop
or
mov
xchg
jne
pop
pop
aaa
adc
mov
mov
or
add
xchg
movb
mov
cmp
push
outsb
jg
sub
rolb
test
fidivs
xchg
add
movsl
cmp
dec
dec
rcl
ficompl
pop
les
and
sarb
aad
lods
xchg
push
mov
push
push
out
insl
cld
xlat
repnz
sbb
xchg
ds
call
inc
clc
fstpl
ret
jnp
shlb
inc
mov
sahf
jp
shll
and
inc
js
xchg
xlat
dec
push
stc
sub
arpl
jns
cli
mov
mov
pusha
ret
fdivs
addr16
test
call
repnz
inc
out
outsb
fdivl
cmc
and
testb
adc
ljmp
xor
jnp
scas
mov
ret
jp
cmpsb
and
arpl
mov
fdivrl
adc
and
pop
mov
and
gs
icebp
sbb
fdivrl
lahf
subb
sub
or
mov
aaa
push
add
rolb
jl
mov
mov
mov
adc
mov
jle
fstl
lods
in
ja
test
lods
out
int
xchg
jmp
add
dec
cmp
out
movsl
adc
jnp
cmp
pushf
mov
jl
imul
mov
test
cmp
inc
add
pop
sarl
push
es
fidivl
insb
mov
cmp
es
or
imul
dec
xor
or
fstl
icebp
xor
das
xlat
sub
mov
fstl
cld
repnz
cmp
inc
push
stos
xor
outsl
xchg
adc
mov
loop
cli
pop
pop
ret
pop
addr16
xchg
pop
cs
xchg
mov
dec
add
sub
pop
inc
xchg
xchg
repnz
mov
imul
aam
add
mov
adc
hlt
jl
sub
xchg
lds
xor
xchg
and
mov
cmpsb
in
test
stos
ljmp
mov
sub
adc
adcl
inc
mov
xchg
js
mov
bnd
jg
fadds
dec
or
lea
clc
cmpsb
sub
push
imul
addr16
scas
sub
inc
jp
int
pop
jnp
push
aad
push
or
loope
fbstp
pop
cmp
bound
xchg
sbb
enter
xchg
bound
pusha
sub
jae
outsb
in
cltd
adcl
xor
cmp
adc
inc
or
mov
data16
cs
das
jo
sub
pop
into
fisubrl
sarb
jmp
outsb
add
popf
xor
iret
test
cwtl
xchg
sub
push
cwtl
mov
inc
add
shlb
inc
ja
andl
mov
push
mov
pushf
push
mov
std
pop
inc
das
rcr
hlt
movsl
mov
ficoml
ja
sbb
sub
sub
pop
hlt
jmp
lods
cmpl
repnz
sbb
add
sub
or
adc
sarb
pushf
fwait
inc
int
jne
sub
push
outsl
xchg
mov
enter
dec
jne
pop
xchg
fldt
punpckhwd
xchg
xchg
mov
push
push
jno
mov
fisubs
in
xchg
stos
mov
add
and
negb
mov
push
inc
push
pop
jecxz
jb
aad
xchg
jb
mov
push
dec
push
or
fsubrs
or
in
popf
call
gs
pop
fcompl
mov
push
xchg
imul
mov
and
jl
jnp
dec
xchg
dec
lcall
xor
fwait
xor
cmp
bound
movsb
push
pop
sbb
ror
sbb
sar
aaa
hlt
loope
xchg
sbb
jecxz
pop
mov
std
test
adc
adc
mov
mov
sbb
aaa
out
sub
xor
push
xchg
stc
stos
stos
lds
adc
sarl
int3
jl
movsb
jo
jo
xor
neg
add
sti
mov
lret
jne
jo
ja
outsb
movsb
sub
push
mov
iret
xchg
pop
cld
test
jns
das
adc
stos
or
adc
inc
ror
imul
mov
sbb
rorl
mov
imul
stc
test
enter
pop
pop
inc
idivl
test
mov
aad
addr16
and
mov
inc
push
push
mov
and
inc
adc
pop
add
hlt
dec
pushf
xchg
pop
jp
sub
dec
mov
dec
imul
sbb
cmpsb
je
inc
dec
sbb
and
sbb
rorl
and
mov
aad
hlt
jns
mov
gs
hlt
cmp
push
lods
xchg
mov
xchg
cmp
vmovsd
or
xchg
aaa
clc
fwait
stc
iret
xchg
nop
nop
popf
inc
test
lahf
dec
pop
mov
cmp
mov
mov
test
add
mov
shrl
fdivrl
andl
in
jns
aaa
les
adc
mov
pop
rcrl
inc
push
inc
cmpsl
cltd
sub
dec
mov
xchg
cli
mov
cltd
lahf
ss
pop
fbstp
loopne
mov
mov
stos
mov
lret
loope
repnz
int3
imul
aam
fsubrl
stc
lods
sbb
jecxz
cmp
xor
pop
adcl
int3
cmp
lcall
insl
inc
out
cld
hlt
js
add
andb
jno
int3
je
mov
jne
jg
les
sbb
cs
jp
mov
xchg
fdivl
xchg
push
mov
stos
cs
adc
sbb
mov
pop
sub
cmp
call
pop
or
adc
arpl
sbb
aad
gs
cltd
add
in
pop
punpckhwd
gs
cmp
adc
out
xchg
repz
mov
test
scas
insl
shrl
adc
push
pop
cltd
mov
dec
ret
mov
std
mov
xchg
dec
push
add
xor
sahf
dec
aas
in
push
push
mov
cmp
add
push
mov
add
fnstcw
test
add
jp
es
out
out
sbb
lret
iretw
inc
pop
repnz
mov
lds
flds
adc
mov
aam
adc
adc
xorl
loope
iret
test
in
ljmp
mov
mov
mov
jbe
inc
push
out
lea
scas
icebp
sti
int
adc
gs
sbb
into
pop
orb
pop
mov
aas
bound
movsb
sub
movsb
das
adc
dec
push
add
mov
mov
int3
fs
int
outsl
insb
in
add
or
je
lods
es
fisttpll
js
stos
ret
push
cmp
pusha
repz
inc
popa
lcall
cmc
test
cmp
jl
int
cmp
imul
movsb
nop
and
and
push
mov
popf
jecxz
insb
fistl
add
test
outsb
loope
jbe
mov
in
sbb
sbb
shrl
dec
out
repz
out
cmp
fstp
jmp
test
iret
movsb
xchg
outsb
sbb
mov
fst
mov
loopne
inc
pop
movsl
jge
shlb
xchg
xor
lock
xchg
lea
repnz
fsubl
call
mov
incb
out
dec
faddl
scas
js
dec
lods
ret
inc
hlt
fisttpl
jnp
ret
jl
push
mov
sub
inc
xchg
rorl
sbb
aam
and
mov
outsb
out
mov
cmpsb
push
mov
sahf
jno
cmpsl
enter
mov
ja
jmp
lcall
cmp
xorl
mov
jmp
sti
xor
fdiv
lret
movsb
jl
sbb
mov
mov
dec
dec
das
sbb
mov
cmp
call
cmp
push
bound
push
sub
dec
enter
notb
or
cli
and
cld
negl
dec
loope
in
xchg
jmp
sbb
pop
bound
sbb
or
xchg
and
das
jmp
cli
xor
repnz
inc
int3
dec
push
xor
loop
pop
ret
jp
iret
sub
mov
xchg
scas
mov
jbe
mov
call
sbb
and
jne
lret
das
insl
xchg
lahf
test
inc
mov
pop
movsb
clc
rcrb
xlat
adc
or
dec
push
mov
adc
mov
rclb
sub
xor
push
cld
inc
sub
in
jmp
insl
fstl
push
out
and
mov
iret
out
das
les
add
mov
jns
mov
pop
xor
or
arpl
inc
cmp
mov
jb
cld
cmpsb
ret
mov
aad
and
mov
adc
lock
xchg
jmp
clc
pusha
into
aas
xor
cmp
aam
mov
lock
mov
sub
pusha
jns
je
dec
push
stc
pop
adc
mov
mov
repnz
xor
cmp
lret
addr16
push
cmc
jmp
push
mov
xor
loope
add
int3
mov
lret
mov
cmpb
ja
scas
enter
ljmpw
mov
mov
inc
pop
call
loop
sub
add
ficompl
jmp
out
mov
repnz
insb
xor
movsl
cmp
push
push
mov
jp
js
adc
and
sub
xor
iret
push
dec
jo
fcmovnbe
scas
xor
add
out
pop
sub
push
roll
fsubrl
mov
pushf
xchg
scas
sti
jp
cmc
gs
mov
xchg
into
arpl
clc
xorl
enter
out
add
lock
subb
icebp
jp
shlb
pushf
notl
jb
inc
fidivl
xchg
push
inc
jmp
iret
sti
popa
jb
cmp
mov
fwait
push
pop
call
clc
insb
test
idivb
lcall
add
inc
adc
inc
adcb
into
mov
pop
ds
int3
mov
push
cmp
xchg
loop
scas
lret
nop
add
sbb
lret
add
cmp
dec
inc
es
je
lahf
jmp
test
sbb
aaa
ljmp
pop
icebp
jae
mulb
and
stos
xor
cmpsl
dec
mov
andb
out
sub
xor
out
or
mov
xchg
movsb
xchg
push
jl
stos
repnz
xchg
dec
jb
dec
popf
stc
iret
aad
lods
cltd
lock
add
inc
xchg
xchg
ss
add
insl
mov
and
xlat
arpl
dec
pop
movsb
sbb
int
or
jns
hlt
mov
arpl
scas
int3
inc
mov
jae
mov
data16
push
mov
cmp
int
mov
inc
rclb
negl
sub
pushf
xchg
addl
das
jp
add
aaa
xor
add
sub
push
push
add
or
and
dec
push
pop
sahf
test
sbb
and
std
sbbb
mov
std
or
hlt
inc
xor
cmpl
jo
and
daa
cmp
mov
loopne
pop
imul
mov
rorl
and
jb
int
scas
fmul
icebp
mov
dec
jne
mov
aaa
shlb
scas
btc
outsb
mov
hlt
andb
fisubs
mov
jmp
sarb
fucomip
dec
mov
jae
jnp
mov
cltd
outsl
cmp
jbe
not
sub
pushf
mov
xor
addl
insl
mov
jae
pop
sbb
mov
inc
mov
cmc
gs
mov
ds
push
mov
in
mov
clc
mov
int3
sbb
lret
mov
jp
sbb
cli
sbb
test
mov
cmp
jl
xchg
in
dec
push
fldl
subl
mov
outsb
scas
sub
push
sbb
fs
loopne
outsl
ds
or
push
ret
cmp
loop
test
insl
bnd
cs
clc
cmp
mov
bound
fsubrs
pop
ret
xchg
loop
jle
lcall
div
jbe
push
xor
fs
and
cmp
stos
mov
int
sti
sub
inc
lcall
in
lods
pop
xchg
sub
movb
fistpll
dec
popf
cld
or
aad
mov
push
pop
mov
cmpsl
hlt
cmpsl
aas
fdivrl
mov
lods
sbb
cmpsl
test
negb
adcb
xchg
add
mov
popf
push
jle
push
mov
jle
xchg
ret
fcoml
cli
lds
addr16
cltd
inc
jo
ret
loop
dec
push
stc
push
mov
das
jg
cmpsb
or
jecxz
pop
xor
adc
popa
loopne
les
repz
in
cltd
cmpsb
adc
lret
popf
data16
jl
in
pop
mov
push
cmpsl
pop
cmpsl
icebp
jmp
mov
pop
add
sub
mov
dec
sbb
mov
call
lock
inc
loopne
daa
mov
dec
mov
push
fstpt
shlb
push
popa
or
outsb
jl
xlat
xorl
dec
iret
push
out
mov
std
and
jns
std
mov
popa
icebp
out
sti
jo
adc
cmp
sahf
loope
stc
insl
call
outsl
dec
sub
cmpsb
fmull
int
fistpll
decl
lret
outsb
sahf
sbb
cmp
and
js
in
ss
std
cmpsb
fmull
lods
inc
rclb
ds
cmp
jp
icebp
dec
cmpsl
int3
sti
sbb
imul
or
aaa
jl
sti
jp
inc
out
lds
filds
enter
out
out
adc
sbb
cmp
les
lret
fsts
sbbb
into
mov
fldcw
ret
sub
sub
jae
xor
xor
pop
call
or
and
in
add
aad
ret
fdivrl
and
test
mov
adc
mov
in
mov
cmpsl
ror
sbb
cmc
jae
lret
mov
push
and
xchg
pop
add
bound
ss
out
mov
mov
inc
mov
inc
mov
mov
xchg
push
mov
pop
cltd
mov
xor
adc
dec
imul
add
out
mov
inc
loopne
cmp
push
or
pop
xlat
push
dec
popf
cmp
outsb
jl
mov
test
cmp
and
sti
dec
shrb
adc
or
imull
gs
and
xorb
cmp
mov
movsb
dec
pop
shlb
dec
jg
inc
xor
insl
sub
push
add
xchg
mov
jle
fcmovu
jno
in
pop
cwtl
fchs
les
pop
sub
push
xchg
xor
stc
push
ss
cmp
pop
push
data16
mov
imul
cmp
mov
icebp
into
and
sbb
ror
jnp
orb
inc
xchg
or
xchg
lock
and
daa
jns
fcmovb
xchg
mov
pop
lahf
mov
add
mov
pushf
sub
sbb
dec
repnz
inc
jle
dec
lahf
ja
mov
into
push
inc
jle
into
enter
adc
lcall
push
and
xor
mov
out
scas
sub
jmp
push
mov
jae
push
imul
xchg
push
push
sub
pushf
jle
push
adc
push
popa
jg
adc
add
aad
cmp
xchg
add
aas
pushf
pushf
rol
aaa
sarb
inc
sbb
in
mov
mov
into
xor
pop
subl
xchg
jmp
dec
mov
std
jle
in
sub
sub
xchg
cmpsl
mov
repz
enter
aas
das
add
popa
sahf
ficomps
cmp
sbb
ret
add
jle
pop
div
lcall
inc
pop
fidivs
sbb
nop
jae
int
loope
lahf
test
mov
insb
pop
insb
pop
and
xor
jle
jg
push
pop
mov
pop
xor
mov
jp
clc
int
pusha
inc
and
xor
sbb
mov
out
cmp
lahf
pop
push
dec
pop
push
sbb
loope
test
ret
sbb
and
stos
outsb
aas
push
sub
in
mov
clc
dec
loop
push
jbe
jge
lock
pop
hlt
movsb
jno
pusha
lahf
jbe
dec
adc
dec
lds
jge
cmp
test
bound
dec
mov
orl
or
lock
adcl
fnsave
clc
jo
and
inc
or
push
push
pushf
push
rorl
out
jecxz
repnz
and
in
sbbb
mov
mov
mov
xor
adc
test
daa
push
fistpll
mov
int
cmp
call
mov
fstps
or
insl
cmc
xorb
rclb
jle
push
flds
adc
push
cmc
loop
adc
jp
inc
add
mov
lds
cmp
test
out
imul
pop
enter
inc
scas
ss
dec
cmp
das
rorb
aad
cmc
stc
loope
jb
mov
sbb
or
pusha
rcrl
scas
mov
ja
std
mov
xchg
daa
xchg
inc
idiv
xchg
aad
cmp
jp
repnz
xchg
leave
fidivs
cli
jl
testl
sbb
call
lock
loop
push
push
pushf
mov
lret
popa
sub
jmp
mov
imul
cmp
test
mov
in
jnp
es
xor
dec
jge,pn
out
add
cltd
out
mov
dec
mov
arpl
inc
mov
repnz
mov
mov
testl
test
in
pop
xchg
mov
sub
dec
gs
dec
xor
mov
addb
repnz
std
cmp
inc
mov
ficoml
es
pusha
in
in
pop
andb
lret
cmpsb
stc
jo
mov
bound
int
or
and
pop
fwait
and
cmp
adc
jp
pop
inc
fisubl
leave
push
add
jmp
in
mov
add
jo
push
pop
cmpsb
in
jg
loope
iret
ss
and
cmp
adc
push
and
icebp
jg
adc
mov
cwtl
fnstenv
jne
fwait
or
mov
fdivrs
dec
xchg
sbb
lret
jmp
ret
mov
roll
fldl
inc
dec
push
sbb
mov
adc
pop
sbb
and
jo
or
out
adc
bound
pop
lea
out
je
adc
push
lods
js
outsl
js
jnp
dec
fistpl
cwtl
pop
push
xchg
lret
or
dec
mov
int
fdivs
out
mov
adc
mov
adc
dec
enter
sbb
cmp
ds
fdivl
fcoml
enter
xor
out
aad
fadds
repz
and
loope
insl
rcll
dec
sbb
jbe
or
mov
xchg
inc
xor
xchg
mov
mov
inc
xchg
shll
outsb
adc
sbb
mov
xor
cmp
lods
jo
ja
add
mov
adc
fstpt
jae
sahf
sbbb
pop
jbe
sbb
clc
ficomps
lret
loop
cwtl
fimull
sbb
pop
in
add
adc
scas
add
and
in
ficoml
into
mov
test
cwtl
add
dec
adc
ret
ja
out
into
push
je
mov
sbb
cmc
rcrl
ss
cli
out
xchg
test
scas
dec
popf
pop
push
dec
adc
mov
adc
mov
push
and
lret
fcompl
jge
pop
pop
test
lods
pop
fs
pop
add
sbb
aam
sti
and
sti
xchg
adc
sub
sbb
jae
int3
sbb
jns
out
imul
fidivs
add
mov
gs
aam
xchg
pop
xorl
jle
mov
lods
in
mov
fsubrp
rol
das
sub
pop
pop
inc
dec
rcll
lret
imul
sarl
push
icebp
test
incl
imulb
hlt
out
xor
sub
fiadds
vpackssdw
nop
push
imul
aam
movsb
cs
add
xor
adc
pop
out
add
aas
xchg
clc
xchg
jecxz
xor
stos
xchg
adc
jmp
jp
push
ss
icebp
mov
pop
push
pop
cs
scas
jbe
mov
fstpl
dec
mov
loop
mov
inc
fists
cli
xchg
std
aaa
and
cmp
jbe
arpl
push
les
aad
add
inc
pop
rol
adc
push
dec
test
sbb
sub
lret
outsb
mov
lds
sbb
or
clc
loope
mov
push
pop
inc
sbb
cmpsl
inc
in
xchg
into
pop
mov
int3
addr16
sbb
iret
xchg
leave
in
dec
mov
cmp
ds
mov
leave
movsl
sub
jnp
insb
fsubs
iret
mov
jmp
cmpsl
ja
shl
aad
push
out
push
loopne
and
push
les
add
xorl
aas
test
call
adc
add
mov
nop
xchg
xor
pop
push
mov
imul
sub
and
pop
add
into
repnz
add
icebp
in
cs
stos
push
jp
add
add
mov
mov
push
jmp
ds
popa
popf
xchg
sbb
cmp
jge
sbb
jns
sub
mov
inc
jno
mov
xor
mov
jae
loopne
and
or
es
sub
mov
lods
fidivl
aad
mov
mov
or
inc
fldl
or
mov
shrb
xchg
push
sarb
xor
push
mov
sbbl
sub
push
pop
pop
pop
and
inc
ret
mov
fucom
sub
push
mov
int3
cmpsl
push
or
adc
call
sub
adc
add
inc
in
mov
pop
jb
dec
inc
insb
jp
or
popf
movb
loope
pop
das
push
pusha
dec
xor
sahf
sbb
add
aaa
outsb
or
pop
sub
test
mov
mov
mov
lahf
pop
add
repz
mov
pop
and
ljmp
fdivrl
ret
dec
cmp
outsl
fs
mov
cwtl
cmp
push
inc
je
cltd
adc
push
jmp
scas
mov
mov
mov
push
mov
push
jno
movb
notb
in
imul
dec
icebp
xor
stos
loop
mov
cmp
xchg
xor
sbb
notl
shr
push
dec
hlt
sub
mov
mov
add
in
xlat
adcl
jbe
dec
out
jl
movsl
hlt
test
mov
cld
adc
cs
cltd
xchg
mov
xlat
add
xchg
leave
negl
mov
xor
test
inc
dec
mov
push
and
js
popf
push
xor
lds
jg
rcrl
psubusw
mov
push
inc
jno
pop
mov
dec
lea
lret
aaa
imul
or
mov
aad
imul
out
sub
out
fcmovne
mov
jp
sahf
sub
dec
push
or
aad
cmpsl
aam
mov
mov
in
test
out
adc
fprem1
xchg
adc
fwait
mov
inc
imull
js
into
popf
test
scas
addr16
sub
pop
add
sbb
popf
int3
and
mov
mov
fnstenv
jmp
add
lahf
stos
push
pop
inc
cli
cltd
dec
dec
ficomps
cmp
neg
scas
popa
int
scas
push
enter
mov
cs
outsb
xor
in
movsl
sbb
sub
cmp
add
mov
adc
roll
xlat
insb
out
push
data16
rcr
sahf
jns
addb
enter
dec
xor
xchg
cmp
aas
ja
adc
call
xor
js
lods
inc
enter
add
add
fistpl
adc
jne
adc
out
outsl
jbe
push
leave
adc
jecxz
loop
icebp
sub
test
hlt
push
lret
xchg
add
mov
jnp
repz
std
cmpsb
and
outsb
ja
jg
push
mov
lods
jmp
pop
inc
inc
filds
imul
fnstenv
insb
imul
ljmp
jae
cmpsb
and
xchg
test
pop
and
out
jecxz
add
jnp
fidivl
out
jb
leave
xchg
jno
xchg
js
loop
xor
cltd
adc
psrlw
cs
or
sub
push
xor
pop
arpl
pop
and
jmp
mov
jae
adc
das
es
test
adcb
sub
sbb
std
mov
pusha
xchg
aam
cmp
jne
push
pop
mov
bound
std
adc
pop
adc
xchg
lret
dec
cmp
dec
aas
popf
mov
push
cmp
lods
js
mov
inc
sbb
lret
cmp
and
dec
popf
mov
fwait
adc
mov
ss
cltd
mov
push
inc
lock
cmpsl
xor
jno
test
aas
cmp
sbb
lods
jmp
insl
insl
hlt
sub
jb
or
push
clc
int
cwtl
add
sub
mov
out
mov
push
mov
jge
shl
pop
and
fcom
ss
orb
test
insl
popf
ror
in
sarb
insb
mov
fdivrl
shlb
fwait
shl
imul
aaa
push
inc
lret
into
sbb
nop
gs
mov
push
pop
push
mov
popf
or
xchg
idivl
add
add
jns
xchg
xchg
push
mov
clc
jecxz
jmp
mov
sub
sub
loop
outsl
push
mov
int
pop
add
push
lcall
push
mov
stos
cmpsb
sub
dec
clc
xor
jl
jecxz
add
arpl
cmp
dec
dec
mov
add
push
fcmove
jge
sti
add
aas
or
fimuls
push
sbbl
lcall
int3
and
test
xchg
xchg
flds
cmp
ret
pop
in
ja
ret
mov
jae
rolb
lret
movsl
push
or
mov
mov
gs
pop
sbb
mov
imul
xchg
pop
pop
xchg
mov
push
xchg
or
lcall
lcall
icebp
aad
imulb
mov
aaa
mov
fisttpl
testb
xor
pop
or
xchg
dec
push
adc
call
jg
repz
cmp
xor
call
pop
jbe
jecxz
sbbb
ret
pop
imulb
adc
push
addw
cmp
jmp
mov
or
and
fisubl
mov
jp
iret
fwait
xchg
add
mov
dec
imul
jo
sbb
inc
jne
into
sarl
dec
fs
xchg
cwtl
mov
scas
or
push
mov
push
adc
ret
and
or
int
test
scas
xor
xor
dec
test
xor
stos
push
ds
dec
clc
cmp
movsb
fdivr
pusha
adc
adc
insb
mov
lock
testl
add
faddl
xorb
insl
or
cmp
jno
dec
shlb
xchg
jmp
aaa
scas
xchg
ja
lret
mov
cli
mov
mov
in
xchg
fwait
cmp
cmpsl
movsl
xchg
mov
outsl
aad
mov
jle
scas
xor
repz
push
mov
loopne
test
jle
mov
cmp
and
adc
test
jae
dec
lcall
add
cmp
jge
fldcw
out
mov
xchg
push
xchg
push
push
and
fwait
std
sub
repz
jl
into
inc
stos
fwait
sti
out
push
lods
and
out
ss
test
pop
mov
xchg
or
jge
mov
and
jge
loopne
popf
pusha
lea
sbb
jg
inc
in
iret
ficoms
mov
punpcklbw
shll
loopne
xchg
sbb
jg
ja
dec
icebp
jmp
fldl2e
or
and
push
mov
mov
insl
pop
mov
scas
cld
jno
adc
and
je
mov
cmp
mov
shll
xchg
push
ljmp
pop
jae
xchg
xchg
and
insl
xchg
sti
add
dec
xor
fnstcw
mov
push
cmpsb
adc
sbb
int
jg
push
mov
test
movd
daa
fcoml
xor
xchg
mov
jmp
mulb
insb
bswap
int
lret
sti
dec
int
aad
fyl2xp1
sub
xchg
ss
dec
repnz
or
popa
insb
pop
lahf
mov
flds
xchg
into
nop
mov
aam
xlat
mov
lock
push
inc
pop
push
sub
cmp
pop
sub
jg
out
pop
xchg
sub
lcall
xchg
ja
add
ret
sub
jp
sbb
mov
add
dec
clc
and
icebp
das
insb
sub
xchg
xor
adcb
mov
mov
aad
les
or
mov
inc
xlat
je
es
xor
cli
imul
pop
mov
movsl
ret
lods
or
mov
inc
fsubr
imul
sahf
ret
sar
xlat
xor
inc
fcmovne
ljmp
push
mov
fs
xchg
test
fsubrl
push
in
sbb
xlat
xchg
mov
mov
xlat
xlat
dec
push
loop
and
sub
je
push
inc
pop
pop
loop
push
add
mov
xchg
add
inc
adcl
adc
out
mov
testb
lock
inc
cld
jmp
inc
nop
dec
es
add
out
pop
mov
fidivl
fnstsw
bnd
shll
mov
dec
mov
les
jge
mov
loop
aam
xchg
test
fists
cmc
jne
mov
lods
shl
repnz
mov
adc
mov
push
add
push
std
test
xor
popa
and
cmc
call
outsb
push
dec
adc
mov
xchg
lret
repnz
adc
mov
in
mov
sbb
pushf
test
mov
jecxz
ret
adc
dec
popa
cmpsb
sbb
dec
popf
cmp
cltd
lahf
faddl
in
xchg
mov
out
pushf
popa
pop
jge
xor
not
testl
aad
ret
imulb
sub
pop
mov
pop
addb
lock
es
inc
jo
sahf
cli
movl
repz
stos
inc
jae
icebp
es
loope
push
jmp
and
daa
xor
or
outsl
jg
jmp
fcmovu
xor
outsb
xchg
daa
mov
psllq
pop
les
sbb
sti
or
mov
dec
jo
pop
mov
mov
cld
xchg
jge
inc
adc
xchg
fbstp
mov
out
shll
test
inc
out
sarl
adc
stos
data16
pushf
das
jbe
lods
lea
adc
cmp
or
xorl
dec
jge,pn
lret
fwait
addl
mov
add
ret
scas
mov
add
fwait
pop
imul
xor
sub
xchg
ja
pop
jmp
icebp
lods
rolb
mov
add
repz
repz
daa
xor
nop
mov
xchg
stos
jb
xchg
aaa
pop
fiadds
ret
sub
sbb
fimull
mov
mov
mov
clc
dec
sbb
nop
test
cmpl
xor
xchg
mov
sub
adc
push
pop
push
jge
shll
fs
mov
pop
es
lret
and
pusha
inc
or
inc
out
lock
ja
adc
ret
xor
add
xchg
sarb
xchg
pop
push
in
xchg
adcl
call
push
movsb
ret
movsl
and
mov
jmp
dec
js
mov
mov
jmp
cmp
jge
or
orb
loop
cmp
aam
pop
iret
loopne
stc
pop
pushf
pop
sub
pop
xor
sub
mov
mov
sbb
adc
fsubl
jno
movsb
pop
adc
cltd
sahf
sahf
dec
ss
lock
jno
inc
mov
addr16
and
icebp
and
aam
xchg
insb
add
sub
jge
push
les
gs
test
xchg
call
in
loop
fstpt
leave
rclb
xor
jecxz
aam
imul
sarl
mov
push
or
pop
lods
scas
arpl
add
push
das
push
pop
pusha
and
xor
je
subl
ret
push
int
and
add
test
xchg
mov
cld
push
pop
rcrb
divl
into
cwtl
aad
cmp
out
xchg
push
adc
mov
pop
loopne
test
in
add
lea
dec
cmpsl
lcall
inc
pop
pop
stos
repz
mov
loopne
jp
icebp
or
sub
xchg
push
xchg
adc
ret
xchg
inc
imul
adc
cmp
jo
test
dec
dec
pop
out
rcrl
and
mov
nop
pop
loop
pop
mov
push
test
add
mov
arpl
and
lea
ret
dec
sbb
sbb
dec
sub
imul
inc
das
cmp
hlt
cmp
dec
xchg
lds
sar
int
hlt
daa
ljmp
notb
jno
cmp
add
jbe
adc
rorl
aaa
cld
inc
adc
pushf
jnp
nop
jge
shll
dec
jle
popf
push
lcall
clc
sub
fdivl
adc
push
inc
sbb
mov
arpl
mov
ljmp
psubw
call
dec
lds
adc
data16
testl
dec
test
out
fwait
jg
mov
mov
pop
pop
adcb
mov
push
cwtl
inc
shlb
inc
xchg
paddw
inc
data16
and
insl
mov
or
dec
es
or
aad
shll
mov
push
adc
das
push
push
rorb
das
dec
inc
sbb
sbb
push
mov
stos
pop
sarl
rcrb
ret
lock
int
jp
cltd
sbb
inc
das
fwait
jae
jns
outsl
and
roll
adc
push
cmpsb
clc
and
sti
scas
in
ja
lret
fnstsw
jb
lods
bound
cmc
mov
xchg
cwtl
mov
push
inc
leave
repnz
out
mov
sub
loope
push
xlat
pop
pop
jge
add
jmp
out
add
mov
inc
mov
rolb
pop
orl
pop
popa
or
or
pop
fldenv
inc
inc
aaa
outsl
and
pop
pop
dec
lcall
mov
out
adc
insl
mov
dec
pushf
out
clc
dec
pop
mov
ficomps
push
push
adc
pushf
lret
mov
sub
push
mov
popa
cli
push
pop
xchg
cmp
mov
add
dec
xchg
dec
cli
xlat
icebp
xor
in
int
adc
sti
test
les
cmpsl
or
push
lahf
or
inc
shll
push
fsubrs
pop
sub
sub
sub
and
mov
repnz
push
rorb
fnstsw
pusha
sub
loope
out
insb
lret
repz
sub
stc
xor
jecxz
iret
insl
das
jmp
mov
lahf
mov
fnsave
push
pop
cmp
lods
adc
stos
sub
cmp
int
adc
aaa
and
mov
inc
xchg
xor
sbb
add
adc
sbb
shr
xlat
mov
mov
add
xlat
cmp
test
mov
and
mov
push
bound
pop
imul
mov
imul
cmp
mov
mov
sbb
sub
mov
sub
fdivl
add
mov
in
jnp
push
xchg
sbb
mov
fs
imul
xchg
inc
add
jmp
pushf
cwtl
adc
xchg
lret
and
clc
pop
insl
jo
mov
sahf
adc
jecxz
and
cmp
or
adc
inc
or
cmc
out
sub
pop
mov
jg
xchg
hlt
push
mov
test
repnz
jo
mov
push
fsubrl
jmp
xchg
adc
add
jbe
inc
in
cld
ds
mov
mov
stc
mov
fcompl
in
xchg
test
fcoms
push
daa
fs
xchg
fdiv
jb
outsl
inc
or
push
lret
pusha
mov
jns,pt
out
mov
or
sub
cmp
ja
jecxz
and
outsl
insb
inc
insb
mov
pop
sti
xor
mov
in
es
roll
dec
lret
loopne
adc
cs
jge
loopne
lret
push
subb
fistpll
mov
lea
cmp
arpl
lock
xor
cmp
bound
inc
aas
or
clc
leave
outsl
mov
int3
sub
lock
ret
es
leave
cmpsl
xchg
sbb
push
mov
int
icebp
cmp
clc
js
cmp
repnz
scas
test
cmp
add
clc
lahf
xlat
ljmp
jno
dec
sub
arpl
cmp
xchg
jnp
pop
mov
mov
add
fistps
mov
cmpsb
ret
xor
add
push
insl
mov
mov
xor
add
and
das
fcmovbe
nop
inc
cli
xlat
fildl
add
int3
sub
subb
mov
cld
arpl
jle
add
mov
xor
mov
xor
cmp
rolb
ljmp
mov
push
jg
gs
sub
lock
push
mov
mov
dec
icebp
mov
mov
and
dec
xor
in
stos
xor
sbb
mov
dec
icebp
mov
ljmp
das
je
jecxz
mov
cmp
and
xchg
imul
push
pop
rclb
dec
notl
push
test
xchg
add
lods
jae
pop
jmp
enter
push
popa
cmp
xor
mov
dec
or
add
cmpb
sub
mov
xor
fsubp
cmp
and
mov
ret
icebp
jno
iret
inc
inc
jg
and
inc
insl
aad
clc
cwtl
mov
mov
ja
je
outsl
int3
jmp
dec
les
jns
lods
xor
fs
or
jno
fnsave
test
xchg
mov
mov
lods
push
out
and
clc
dec
icebp
test
xor
cli
adc
push
scas
leave
mov
lods
insb
xchg
pop
xor
jge
lea
ljmp
push
dec
mov
shr
lret
ret
fsubr
xor
bound
fwait
inc
cs
cmp
dec
jecxz
adc
sub
loopne
xchg
pop
jns
xlat
test
repnz
fbld
pop
mov
fstps
stc
mov
loopne
iret
sbb
in
notb
xor
or
push
adc
push
pop
fsubrs
call
jns
xorb
pop
les
lods
mov
in
mov
call
ja
xchg
jmp
add
and
aam
lahf
popf
aad
imul
fcomps
leave
push
and
vmovshdup
dec
add
add
mov
je
mov
dec
lods
inc
hlt
addb
mov
lret
pop
mov
das
iret
pop
push
mov
add
bound
mov
pop
inc
inc
xchg
inc
sbb
xor
sub
inc
mov
and
push
mov
xor
jae
lods
out
sbb
push
sbb
fstl
fdivrs
push
leave
sbb
or
add
sub
cmp
fwait
add
sub
movl
shl
popl
cmp
cmp
push
sbb
mov
out
xchg
loope
and
adc
jne
lea
sbb
dec
cwtl
ret
pop
add
mov
pop
and
jnp
test
in
fdiv
test
into
or
sub
loope
imull
lahf
pop
sub
mov
dec
xchg
out
cmpsl
fsub
shl
pusha
leave
add
xchg
cmpsl
frstor
sbb
clc
jl
cltd
add
mov
loope
mov
imul
pop
out
movsl
pusha
cmp
pop
ret
sub
cmpl
mov
frstor
pop
insl
cmc
cltd
sub
push
pop
push
adc
pop
iret
xor
add
imul
das
rcrl
dec
xchg
mov
xchg
ja
test
and
dec
ljmp
sub
jle
jle
mov
rol
scas
mov
pusha
inc
sub
hlt
inc
pop
pushf
or
loop
and
imul
in
mov
lahf
push
jae
int3
in
pop
fisttpl
test
fldenv
mov
hlt
xor
ret
fldt
adc
sub
dec
cmpsb
push
jae
dec
xlat
xchg
clc
pushf
and
shlb
out
daa
sbb
inc
mov
add
push
outsb
add
lods
popf
fnstcw
ja
adc
in
test
cmp
insb
xchg
sub
lret
or
loope
xchg
inc
push
fidivs
or
mov
push
jmp
pop
ret
jmp
add
lods
mov
inc
clc
fldt
sbb
add
mov
scas
xchg
mov
inc
cld
push
vstmxcsr
cmc
jg
aas
sbb
sub
call
mov
adc
pop
shr
clc
call
or
outsb
sbb
jge
movl
jmp
jbe
mov
lock
mov
push
mov
xchg
dec
je
mov
push
lret
add
add
test
mov
push
push
sti
test
mov
xlat
pop
cmp
jne
push
stos
cmpsb
icebp
test
pushf
sbb
stos
xor
aaa
dec
pushw
xor
hlt
jo
mov
mov
mov
popf
loope
mov
aad
cmp
and
inc
sub
dec
stc
lret
push
nop
negl
mov
lahf
int3
xor
fwait
sete
daa
stos
cs
idiv
ret
fs
into
ret
data16
insb
jmp
adc
xor
out
xchg
out
fistl
push
cmp
or
push
sarl
mov
ficomps
pop
xchg
jg
sahf
xchg
lock
loope
lods
mov
xorl
std
sbb
stos
push
aas
and
push
sbb
mov
or
cmpl
insb
ljmp
call
fistpll
repz
test
jecxz
fs
jge
jae
push
addr16
add
insb
lcall
jmp
repnz
lretw
cmp
mov
xchg
cmpsl
scas
cmp
lret
subb
jge
lds
cmpb
cld
subb
es
aas
sbb
fnsave
dec
sub
xchg
or
mov
sub
int3
dec
test
call
push
adc
scas
daa
and
lods
jae
insb
inc
jl
subb
movsb
or
xor
sub
xor
fdivrl
pushf
loope
leave
arpl
add
decb
popf
and
aaa
push
aaa
cmpsb
iret
add
repz
pop
test
or
pop
shlb
pop
pop
xchg
scas
mov
and
cmp
add
mov
push
inc
adc
push
push
and
cmp
outsb
jmp
mov
hlt
pusha
ds
sbb
add
lods
cmp
test
jne
mov
or
push
push
lcall
pop
mov
push
push
pop
dec
pop
out
or
push
sbb
outsl
sub
leave
mov
lods
loop
mov
jo
hlt
icebp
and
inc
sbb
dec
xchg
cmp
icebp
pop
jge
mov
mov
adc
xchg
pop
or
lock
fdivl
scas
xchg
and
cs
add
data16
out
adc
push
and
jo
mov
xor
inc
xchg
nop
lds
add
lock
dec
and
shl
xchg
or
mov
imul
loopne
xchg
xadd
roll
addr16
xchg
repz
das
dec
aaa
mov
loopne
rcr
adc
and
fnstenv
inc
lea
mov
push
add
pop
mov
jbe
divb
ret
jns
das
call
xchg
adc
sub
push
cmpsb
mov
cmpsl
cmp
adc
or
mov
mov
int3
shll
ficoms
cmc
adc
sub
dec
cld
out
or
aas
push
pop
fstps
adc
int
push
xchg
imul
mov
inc
inc
dec
shrb
add
adc
mov
stc
xor
pop
fildl
jb
addb
add
xchg
movsl
sti
xor
mov
or
sub
add
lods
mov
or
outsb
and
push
nop
enter
cmp
scas
cld
mov
push
adc
cli
out
pushf
lock
popa
clc
xor
cltd
mov
push
jecxz
sub
ss
fistpll
clc
xchg
lea
jb
and
out
je
dec
dec
ljmp
mov
mov
pop
rcrl
push
fmull
fldenv
lods
mov
out
xor
mov
addl
or
jno
out
popf
adc
or
lret
out
cmc
inc
jae
jno
cmp
out
push
mov
pop
loope
sub
les
jb
xchg
push
jge
mov
mov
das
and
scas
fists
xchg
or
test
les
push
or
mov
shll
push
cmp
inc
fistpl
cmpsb
dec
icebp
mov
icebp
sbb
inc
pop
pushf
dec
cmpsb
add
bound
cmp
add
dec
es
mov
and
xchg
adc
cli
mov
mov
repnz
stos
lahf
adc
stos
fsubr
dec
xlat
inc
lret
sub
loope
into
mov
adc
fisubrl
std
and
pop
scas
fcmovne
pusha
or
insb
gs
mov
add
mov
dec
scas
inc
cli
repnz
mov
ljmp
adcl
pop
lahf
std
test
loop
ljmp
xlat
aaa
mov
gs
mov
mov
in
fisubs
cmp
add
jnp,pt
xchg
mov
dec
test
jle
cmp
sahf
fldcw
push
in
and
jo
mov
mov
jge
fidivl
push
rcrl
cmp
inc
shlb
mov
out
xor
sub
mov
int
cmp
jge
aam
sbb
std
ficompl
or
in
iret
cltd
ret
cmp
out
in
push
mov
filds
lret
orl
cmp
sbb
add
jge
sbb
jp
jge
rcrb
nop
mov
loope
mov
nop
and
fnstsw
in
push
shll
mov
aaa
shr
sahf
subb
inc
outsb
mov
sbb
rcrl
das
cli
cmc
stc
out
fstps
sub
mov
xchg
and
add
push
mov
in
xchg
push
jno
jb
ja
and
mull
movsl
cmpsl
or
mov
mov
cwtl
xchg
xor
lea
mov
scas
ret
das
xor
dec
mov
aas
push
aaa
aad
sbb
lcall
add
mov
lds
push
inc
dec
fldcw
or
js
pop
or
rolb
mov
bound
xor
jb
les
addl
mov
lret
mov
in
mov
dec
fucomip
fwait
aad
mov
mov
jmp
lret
add
cli
xchg
lock
pop
es
fdivs
mov
and
inc
xchg
adc
sbb
add
pop
rcrl
stos
xchg
push
and
add
repnz
xor
xchg
es
mov
push
push
pusha
mov
cmpsb
test
mov
mov
inc
mov
ljmp
outsl
pop
mov
xchg
imul
fisttpl
push
insb
push
shlb
pop
loopne
les
jge
loope
pop
dec
out
aam
dec
mov
push
call
ss
mov
xor
lods
inc
ud2
bound
pop
ljmp
push
and
mov
cmp
push
and
repz
mov
push
popf
sbb
dec
pop
push
mov
push
imul
cld
xor
and
mov
mov
sahf
testl
stos
mov
bound
mov
lock
mov
repnz
sub
cmpb
jg
fisubrs
push
or
adc
inc
out
xor
mov
jne
sbbb
mov
pop
cltd
jbe
cmp
or
xor
jge
loope
and
imul
pop
pop
cld
and
out
and
outsb
fdivrs
push
adc
dec
lods
mov
jl
xchg
fdivrl
stc
inc
in
pop
inc
roll
iret
xchg
ficompl
outsl
popa
fdiv
add
push
cmp
ror
in
push
inc
testl
jae
hlt
pop
movsl
cld
mov
jmp
lahf
rolb
jb
hlt
fwait
sarb
push
xchg
imull
fisubrs
mov
push
imul
xchg
xchg
push
mov
mov
rclb
mov
xchg
out
test
dec
add
popf
loop
mov
loopne
xchg
xchg
insb
mov
into
mov
jo
cmp
lea
clc
incb
push
inc
push
adc
dec
mov
addr16
pop
in
push
push
lahf
test
cmp
test
dec
adc
loopne
dec
loopne
and
lcall
lods
sbb
fdivrl
mov
mov
leave
sbb
push
xor
loopne
and
add
pop
jns
in
jmp
xchg
dec
dec
adc
js
fidivs
mull
orl
sbb
jo
stc
sub
mov
adcb
jge
fucomip
xchg
imul
xor
xchg
into
fstps
outsb
xchg
fistl
push
inc
add
daa
push
add
lahf
add
mov
sub
mov
sti
pop
ror
sti
jp
fsubl
aad
fbld
pushl
adc
cmc
cmpsl
mov
push
xchg
retw
retw
or
add
sbb
push
push
mov
sbb
mov
stos
xor
mov
pushf
push
test
mov
dec
dec
je
cmp
or
pusha
addb
pop
imul
mov
mov
call
dec
je
icebp
push
ret
inc
ret
mov
jmp
xchg
sbb
jl
arpl
mov
mov
xchg
shl
push
mov
and
push
mov
outsb
xchg
lds
cmp
jno
xor
stc
inc
testl
aas
push
pushf
sub
mov
mov
push
test
pop
sbb
int3
inc
stos
cmp
dec
jne
mov
mov
sub
pop
sbb
scas
xchg
cltd
xchg
imul
test
mov
and
pop
shrl
sub
into
sbb
cmp
mov
mov
popa
es
cmp
and
xor
icebp
jge
int
push
jecxz
cmc
dec
pop
std
cmp
cmp
sub
push
cmpsl
xor
out
adc
sbb
insl
sub
jno
cmpsb
lock
xor
add
fiadds
cmpsl
mov
adc
and
dec
out
loopne
pop
xlat
push
test
jne
ja
mov
mov
mov
adc
mov
adc
notb
fcompl
pop
mov
dec
mov
pop
push
adc
and
xchg
stos
push
sahf
add
pop
fnstsw
cmp
cmc
adc
jl
push
leave
sub
sbb
jo
lea
pop
adc
popf
in
lock
scas
xorl
jb
mov
add
out
shrb
pushf
push
loop
cwtl
cmp
test
aaa
or
pop
rcrl
pop
mov
xor
pop
les
out
jp
add
add
rcrl
in
mov
mov
sbb
jb
mov
jle
dec
lret
ret
xor
scas
push
ret
and
mov
lock
jl
movsl
faddl
pop
or
outsl
rcr
cmpsb
insl
test
cmp
cwtl
les
jl
insl
testl
lcall
mov
js
lods
mov
add
sti
xchg
ja
adc
lret
insl
adc
adc
xchg
push
rolb
dec
or
cmpb
out
es
testb
sub
inc
mov
into
or
out
and
mov
scas
pop
sub
test
into
sub
dec
pop
xchg
and
add
inc
arpl
and
fldt
add
stos
sub
ds
fimull
bound
cltd
adc
shl
ficoms
outsl
mov
test
jne
inc
out
cmp
adc
xchg
mov
insb
insb
aam
sarb
cs
adc
dec
bnd
or
dec
pusha
sti
sub
pop
cltd
add
outsl
std
cs
repz
push
xchg
inc
in
test
pushf
cmp
and
inc
add
jbe
xchg
dec
repnz
add
and
movsl
jl
adc
test
xor
subl
jp
in
test
sbb
adc
and
cmpsl
ja
xorb
mov
dec
sti
lret
lods
ret
test
jb
push
mov
testl
dec
jg
mov
bound
inc
divl
lods
fs
add
and
push
and
push
or
push
push
fsubrl
scas
jno
and
aad
jbe
push
mov
orb
lcall
adc
pop
std
mov
outsb
sub
jmp
lret
xlat
and
inc
popf
fisttps
daa
test
imul
ja
or
clc
lods
lods
call
cmp
mov
and
in
sub
orl
rolb
sbb
and
insl
mov
das
imul
cmp
cmp
pop
outsl
add
jp
cli
ret
or
mov
pop
gs
xchg
shl
xchg
inc
clc
push
adc
cmpsb
leave
int
ljmp
int3
sbb
negl
push
xlat
xchg
and
inc
ja
and
sbb
pop
add
scas
fcomp
scas
inc
cmp
or
stos
mov
push
xchg
int3
sub
repnz
das
lds
leave
andb
mov
cmp
ss
mov
outsb
push
sti
dec
shll
jo
mov
push
jecxz
ja
clc
cmp
jne
push
mov
or
test
outsl
mov
xchg
xlat
das
xchg
jno
mov
xor
into
xchg
xor
loop
mov
nop
cmp
dec
xchg
dec
aam
scas
pop
popl
cs
in
adc
mov
cmp
cmp
leave
call
and
xchg
and
scas
fiaddl
fldt
addr16
xor
inc
cmp
stos
das
or
leave
and
dec
cmp
out
stos
lret
pop
mov
cmpsl
cmpsb
and
lret
xor
movsl
push
es
test
movsb
in
pop
pushl
mov
ret
outsl
and
mov
inc
into
negl
fdivl
cmpsw
mov
push
sbb
lods
test
adc
pop
xorl
popf
lret
pop
in
mov
sbb
inc
ret
sub
insl
push
jo
aaa
xor
dec
imul
in
push
mov
aas
pop
sbb
mov
inc
lods
sbb
stos
adc
lcall
or
pop
fwait
lret
mov
mov
xor
vpshaq
mov
pusha
push
sbb
lahf
add
sbb
pop
ret
shlb
jecxz
xorb
loop
pop
stos
addr16
cmpsl
roll
clc
cmp
fwait
movsl
scas
lds
insl
push
in
adc
add
lods
jecxz
popa
imul
aad
cmp
daa
xlat
aas
negb
mov
jle
movsb
bound
lcall
inc
jge
shl
fcomps
leave
mov
sub
mov
push
in
repz
imul
cwtl
sbb
faddl
fildll
xor
call
mov
jl
in
cmc
dec
mulb
enter
rclb
adc
imul
and
xchg
idiv
adc
xchg
mov
or
fstpl
mov
rcl
sub
out
jbe
pop
ja
shl
sbb
jbe
xchg
ds
jp
mov
shlb
pop
popf
dec
xchg
sub
pop
call
push
push
daa
cmp
ret
movntq
push
adc
and
or
or
and
je
insl
int
xor
out
mov
push
jnp
test
call
mov
icebp
xor
cwtl
pop
out
or
pushl
mov
sbb
mov
push
xchg
adc
int3
jmp
out
call
add
stos
xchg
dec
sub
cmpsb
or
sbb
xorl
or
xor
mov
je
lahf
or
movsl
cmpl
pop
cltd
aam
dec
out
and
jbe
mov
mov
loope
xchg
or
bound
mov
fsubrs
or
adc
mov
adc
jp
dec
push
mov
mov
push
dec
sahf
dec
int3
inc
cmpsb
pop
call
rol
adc
lods
mov
mov
push
loope
inc
xor
xchg
cmp
test
lret
push
jo
lret
jbe
adc
mov
mov
inc
mov
lods
repz
sub
push
dec
cmp
push
inc
xor
jge
cmc
pop
add
loopne
popf
das
popl
inc
sub
ss
or
fldenv
mov
test
cs
pop
cmp
adc
inc
jbe
cwtl
push
xor
stos
inc
jb
pushf
shrb
mov
pop
sub
mov
idivb
add
stc
push
cltd
faddl
or
xchg
in
cld
jecxz
adc
sub
aas
inc
gs
inc
mov
mov
fcoml
pop
xlat
mov
outsb
push
xchg
dec
mov
sti
ret
data16
inc
cmpsb
dec
and
mov
jo
sbb
xchg
push
fnstcw
lahf
sarl
mov
rcrl
incl
sub
fildll
dec
cmp
lods
adc
and
loope
push
xchg
and
pop
outsb
cmpsl
mov
scas
xchg
lcall
pop
lcall
movsl
jno
movsl
sbb
call
pop
mov
inc
imul
pop
fwait
daa
rcr
mov
data16
es
sahf
inc
fsubrs
in
adc
and
fstpt
xor
outsl
jns
mov
mov
xchg
in
jb
je
pop
and
xor
inc
jle
push
hlt
pop
add
add
jmp
adc
xor
lea
dec
mov
lods
lods
mov
xchg
std
pop
mov
nop
mov
in
xchg
or
adcl
cmp
jle
adc
jmp
inc
and
mov
push
jge
divl
rcr
sbb
dec
stos
dec
adc
mov
scas
test
xchg
aas
addr16
ja
push
fcmovnu
xor
repz
es
fwait
test
dec
stos
or
sub
clc
inc
in
aad
and
mov
in
rcrb
dec
insb
ret
cld
jbe
shlb
jnp
mov
rclb
leave
mov
add
in
mov
es
aam
or
jp
mov
fstps
adc
sub
ds
in
or
sbb
sbb
cmpsb
push
add
push
inc
test
cmp
outsb
pop
jae
mov
clc
iret
xchg
mov
sarl
push
inc
push
add
dec
xlat
sbb
fsubrp
cli
xchg
xchg
adc
sbb
or
or
nop
loopne
sahf
push
gs
es
fiaddl
and
dec
xor
movsb
xchg
adc
lods
clc
outsb
mov
cs
xor
int3
lods
cmp
xlat
outsl
iret
lock
mov
jbe
push
popf
ljmp
movsl
push
lcall
out
pop
testb
mov
lds
cmp
std
lret
rorl
jne
outsb
cld
or
mov
aad
decl
test
xor
psubb
xor
xchg
push
movsl
lds
mov
sbb
mov
cmpsb
testl
sub
ret
movsb
add
push
fnstsw
rorl
aaa
aaa
das
stc
dec
pop
add
aam
loopne
pusha
pop
adc
dec
sbb
sub
mov
inc
loope
mov
addr16
or
rorb
push
push
lods
pop
cmp
sahf
nop
in
dec
mov
push
push
orb
imul
mov
lock
jae
xor
loop
pop
mov
push
and
mov
roll
sub
pop
in
fsubr
addl
cmp
mov
pop
fs
mov
fcmovnu
jecxz
push
lds
mov
push
xchg
push
push
jb
and
mov
mov
popf
cli
bound
clc
sub
lret
or
sbb
lret
and
push
dec
sbb
arpl
push
mov
jmp
mov
cmp
mov
adc
sbb
push
das
inc
jne
xchg
fcoml
js
push
dec
jp
scas
xor
in
mov
pusha
lods
push
add
dec
cltd
xchg
loopne
fldt
or
push
std
insb
mov
mov
mov
xor
mov
pop
mov
out
pop
adc
mov
sub
dec
insb
cmp
fistl
dec
add
inc
cwtl
adc
mov
push
sbb
aaa
mov
je
sbb
push
adc
pop
fsubr
addr16
stos
xlat
push
inc
jge
out
push
mov
pop
xor
pushf
pusha
push
pop
sub
int
xchg
pop
insl
sahf
repz
dec
inc
sbb
in
push
pop
pop
jl
and
rclb
shrl
mov
insl
mov
ficoms
adc
mov
jo
push
adc
mov
out
sub
ret
sbb
fnstsw
jno
mov
sbb
addr16
fcompl
es
pusha
add
and
test
lea
mov
mov
push
lea
cmp
jecxz
and
cmp
dec
ss
ja
dec
icebp
mov
push
dec
loope
sti
sbb
xor
sbbl
pop
or
add
xchg
aad
lea
sbb
lret
mov
dec
fdiv
sub
in
xor
pop
sbb
arpl
cmp
mov
test
rcrb
fldl
xor
adcl
stos
xchg
and
adc
cmpsl
shlb
or
leave
jp
je
sub
pop
sub
addr16
std
fldt
out
xor
insl
jecxz
mov
ljmp
pop
mov
imul
adcb
rclb
mov
jnp
mov
dec
pop
mov
xchg
imul
in
in
fiaddl
jmp
pop
and
mov
jns
js
pop
push
inc
loopne
and
mov
mov
inc
pop
fimuls
ss
jmp
les
inc
and
push
xor
inc
inc
in
jb
stc
jl
inc
ret
sub
hlt
adcb
test
adc
or
xlat
scas
jno
lds
mov
sub
jmp
push
les
fdivrs
mov
sarb
loope
rcr
lds
out
xor
cmp
mov
mov
mov
mov
loope
push
mov
or
mov
adc
fcmovnb
add
dec
jmp
jnp
push
enter
subl
pusha
pushf
mov
push
add
adc
mov
adc
jge
dec
xor
mov
push
and
sbb
sbb
xchg
clc
pop
jge
cmc
lock
sub
imul
int3
notl
mov
mov
rorb
xor
cmp
jp
jg
shlb
jl
fisubrl
out
movsl
insb
mov
adcb
bound
mov
push
xchg
rol
lret
jae
jo
and
outsb
pop
andb
divl
insb
mov
push
das
xor
adc
jl
mov
cmp
out
push
adc
cs
hlt
adc
add
sub
lcall
xchg
icebp
sub
outsl
sbb
cld
lahf
daa
lret
mov
pop
pop
movsb
movsl
cmp
jp
adc
jge
pop
fadds
lods
push
push
mov
loop
sub
pushf
inc
sub
stos
pusha
iret
cmpsl
iret
mov
outsl
and
dec
in
lret
mov
xor
dec
pop
inc
or
jp
into
mov
movsb
int3
push
pop
cmc
ret
decb
xor
jno
mov
mov
adc
push
fnsave
repnz
std
popa
dec
or
ficomps
xlat
movl
je
dec
xchg
subb
mov
orb
cmpsb
imull
mov
or
int
insl
mov
jle
push
fbstp
cmp
addr16
add
arpl
movsl
insl
inc
in
ljmp
or
cmp
in
js
jmp
addl
adc
lock
mov
movsb
data16
pop
ss
cmc
jne
leave
pop
pushf
xchg
push
adc
jecxz
repnz
inc
xor
negl
arpl
call
jo
mov
xor
cmpsb
cwtl
out
xor
mov
jg
cmpsl
roll
out
jae
fwait
push
loop
shl
pusha
push
dec
out
sub
inc
and
cmp
test
mov
ljmp
pushf
jmp
sbb
testb
into
clc
aam
rcr
cli
pop
cmp
mov
mov
xor
int3
push
sbb
addr16
adc
and
cmpsb
or
xor
fsubrl
clc
test
inc
lea
mov
jg
dec
popf
pusha
sbb
sbb
int3
nop
sti
leave
add
mov
xchg
mov
add
adc
enter
outsl
jb
pop
pop
push
dec
in
popf
jge
push
fwait
xor
and
mov
adcl
cmp
pop
leave
cmp
push
cld
add
xchg
pop
xchg
mov
lret
mov
fadd
xchg
rcll
imul
insb
lret
orb
jnp
mov
scas
inc
dec
testl
cmc
popf
add
adc
popa
inc
cmp
sbb
jp
test
jno
cmp
adc
mov
adc
push
adc
jg
hlt
xchg
insb
in
sbb
push
mov
mov
loope
insb
dec
ret
jb
pop
stos
jp
cmp
sub
push
je
jge
dec
xchg
pop
addr16
notb
in
addr16
cmp
push
xchg
and
shlb
add
or
out
in
out
dec
sbb
jmp
filds
xchg
faddl
popa
inc
or
dec
jge
mov
repz
in
imul
cli
dec
nop
adc
and
push
push
or
dec
pop
aaa
push
mov
xor
inc
test
lahf
sbb
jb
add
test
cli
data16
xchg
popf
cmp
je
fstpl
pop
fsts
sti
sbb
add
cwtl
xchg
ljmp
scas
mov
and
test
ja
jnp
adc
or
push
push
in
pop
mov
aam
cmp
jno
daa
cmp
xor
sarl
rcr
sbb
mov
fistpll
adcl
loope
jb
fidivs
pop
fdivs
jg
and
sbb
popf
fs
sub
or
clc
xlat
mov
push
or
mov
inc
iret
pop
mov
mov
data16
in
jbe
xor
push
es
mov
daa
or
and
mov
insl
insb
not
dec
ja
nop
mov
daa
and
leave
jl
push
push
int3
xor
out
hlt
adc
jp
jb
jb
out
jg
push
sbb
andl
subl
sub
addr16
sbb
push
or
sbb
inc
loope
nop
shlb
xchg
xor
dec
sub
xlat
inc
mov
test
sarl
addr16
cmp
rorl
clc
pop
icebp
fistps
dec
in
adc
fmul
mov
sbb
cmovo
dec
je
adc
fidivrl
inc
lcall
ret
adc
xor
mov
jbe
push
repnz
mov
frstor
pop
inc
mov
push
dec
and
iret
insl
jl
jecxz
aaa
xor
xchg
add
adc
sbb
mov
adc
mov
add
cmp
xor
adc
xor
shr
dec
xor
rorb
cmpsb
aaa
jle
fcmovnbe
enter
aam
pop
jns
and
pop
test
inc
inc
in
mov
movl
clc
das
bound
cmp
data16
mov
stc
mov
cmp
in
fwait
sub
jns
shll
push
cli
stc
les
jo
sti
cmpb
xor
lret
sti
clc
sbb
mov
imul
xor
mov
icebp
xchg
fwait
and
xchg
inc
roll
xor
dec
or
and
dec
out
dec
push
pushf
pushf
push
sbb
insl
test
mov
outsb
test
push
jns
cmp
lret
cwtl
add
test
cld
jae
dec
adc
push
cld
mov
jnp
int3
push
lret
pop
pushf
mov
cmp
rclb
test
loope
cli
cmp
js
adcl
hlt
test
inc
lds
push
andl
aam
ds
and
xchg
cld
das
pop
or
mov
cli
data16
call
or
push
stos
inc
leave
cmpsb
popf
inc
dec
stos
test
dec
or
push
xor
movsl
into
cmp
pop
inc
xchg
orb
outsb
jae
cmc
dec
in
das
jne
adc
testl
pop
aad
xor
cld
jo
loopne
inc
popf
dec
cmc
repnz
dec
mov
mov
mov
xchg
fistps
rcll
pop
popf
push
mov
cld
test
xlat
push
int
sub
subb
jl
sbb
lcall
in
dec
std
dec
jge
xchg
xor
cmpsl
iret
sbb
daa
mov
cmp
mov
cmp
push
jmp
les
push
cmp
test
fsubl
bound
dec
andl
mov
fwait
stc
nop
mov
out
mov
fisttpl
mov
xchg
xchg
jle
and
and
fcoms
dec
divb
cmp
mov
sbb
pop
ds
mov
andb
dec
xchg
in
sbb
mov
icebp
cmc
jne
mov
xchg
jno
test
cmp
rorl
and
or
dec
cmp
cwtl
ljmp
imul
rcrl
or
mov
xor
adc
dec
test
fisubl
and
in
jno
std
mov
frstor
lods
and
fwait
jbe
cs
loop
sbb
mov
pop
lret
sbb
jns
addr16
sahf
and
xor
or
rolb
lahf
xchg
dec
out
lock
stc
xchg
sbb
jnp
dec
imul
jle
test
popf
sbb
lahf
stc
gs
sarl
jb
mov
jno
fnstenv
sub
jl
inc
sub
mov
jbe
adc
das
sahf
sub
gs
push
xchg
xchg
or
sbb
cld
fdiv
cmp
mov
aad
mov
inc
leave
dec
repnz
data16
push
and
inc
dec
fucomp
adcb
xchg
sbb
out
jne
sbb
test
stos
test
outsl
xchg
xchg
xchg
jns
and
dec
mov
mov
test
and
test
lahf
mov
std
mov
mov
insl
xor
mov
sub
cmpsb
mov
sbb
lds
out
xchg
fisttpl
mov
std
mov
loop
orb
add
mov
test
inc
cmp
dec
jle
jl
pop
leave
xor
cld
push
inc
sub
stos
mov
add
rorb
aaa
sti
mov
jns
js
test
mov
jl
insl
pop
pushf
mov
push
add
mov
pop
cmp
dec
cltd
push
jb
stos
inc
or
xor
popa
or
ds
nop
pop
test
sub
fidivrl
xchg
xchg
fimuls
nop
and
push
push
and
dec
loope
jecxz
cmpb
mov
xchg
rcl
mov
pop
je
pop
mov
jecxz
pop
mov
lock
ret
in
adc
or
sbb
shll
repnz
push
cmp
lea
mov
lahf
dec
in
sbb
sub
sahf
xor
dec
lds
cmp
inc
aaa
xor
lcall
or
popa
pop
jb
rolb
arpl
mov
push
inc
mov
out
rcrb
adcl
and
and
imul
je
shlb
fstl
jge
sbb
push
push
and
sbb
inc
rorl
pop
xchg
push
dec
fdivs
push
popa
test
inc
xchg
mov
es
fiaddl
jl
call
fstl
cmp
jae
clc
aam
mov
inc
jecxz
repz
and
push
mov
mov
mov
mull
pop
stos
mov
cmp
ret
enter
dec
inc
and
into
fmul
xor
cmp
mov
or
clc
arpl
push
pusha
cmp
data16
cmp
or
lcall
push
mov
loope
sarl
push
and
dec
jae
leave
cmp
repnz
mov
sub
dec
rorb
and
fldenv
lcall
dec
mov
sbb
into
movsb
and
fwait
xor
inc
cmp
daa
cmp
jmp
cmp
mov
repnz
xchg
inc
pop
mov
fnstsw
pop
pop
xchg
inc
scas
sarl
stos
pop
aad
push
imul
rorl
loopne
rcrl
pop
inc
cld
fsubp
popf
lret
mov
mov
pushf
jae
push
push
add
mov
ret
and
xor
mov
out
dec
stc
sbb
push
nop
and
js
mov
int
mov
aas
cmpsl
sub
jne
cwtl
lock
scas
int3
xchg
test
jnp
xor
add
adc
lahf
jo
pop
shrl
repz
repnz
push
sbb
mulb
das
sbb
clc
cli
xor
cwtl
inc
ret
mov
xor
ljmp
sar
cmp
fcompl
jnp
movsb
inc
lret
enter
xchg
push
iret
fcompl
dec
loopne
inc
sahf
sbb
xchg
mov
test
fstl
push
mov
enter
add
mov
test
adc
mov
mov
pushf
test
mov
push
xchg
adc
push
fstl
into
mov
ficoms
inc
loopne
mov
cld
sbb
mov
sub
mov
stc
jp,pn
xor
loopne
out
push
movsl
push
nop
adcl
pop
jg
das
mov
aad
mov
pop
add
call
lret
ds
fildll
inc
insl
xchg
or
cmp
fisttps
mov
jle
xorl
lcall
scas
paddw
sbb
rcrl
in
mov
aaa
pop
aad
scas
mov
ja
pop
xchg
in
sbb
xchg
jns
aad
adc
or
repz
cmpsl
ror
sarl
test
pop
test
repz
imul
mov
mov
loopne
int
mov
and
push
arpl
loop
lock
pop
in
add
pop
inc
jo
fdivrs
into
mov
add
subl
ror
imul
cmp
push
lods
jns
sub
dec
pop
or
mov
gs
inc
jl
scas
mov
and
or
cmc
xchg
push
outsb
dec
mov
add
aad
clc
popf
bound
outsb
cmp
ljmp
jp
popf
loope
fldt
jb
out
pop
xor
rcrb
or
lret
scas
fisttps
scas
sarl
hlt
or
adc
sbb
bound
scas
test
sbb
xchg
sbb
test
sub
xor
je
das
cli
test
xchg
jo
push
lea
enter
adc
and
or
xlat
flds
cld
pop
dec
pop
mov
cmp
inc
daa
cmpsb
or
or
sbb
push
cmpsb
in
or
imul
repnz
add
jno
push
addr16
movsl
jecxz
fidivrs
sbbb
lcall
and
cmp
pop
cmpsl
add
xor
cltd
pop
xchg
adc
lcall
sti
int
cltd
mul
mov
mov
mov
out
push
push
popa
out
leave
gs
enter
movsb
mov
addl
or
mov
dec
roll
lret
subb
mov
fisubrs
lahf
mov
loope
mov
lahf
int
sub
pop
lods
mov
inc
xchg
ds
scas
pop
rol
loope,pn
add
fwait
test
push
int
push
inc
jo
mov
outsb
fsubl
inc
jbe
jle
mov
dec
lcall
subb
test
push
push
movsl
stc
in
in
loope
jg
jae
sbb
mov
int
adc
inc
inc
push
mov
movsl
mov
pop
fidivrl
lds
or
mov
cwtl
outsl
hlt
adc
pop
mov
int
loop
or
inc
xchg
mov
xchg
push
or
lret
mov
push
lds
jno
les
bound
mul
sub
jnp
jle
ret
sub
sbb
or
dec
cmc
xor
clc
mov
inc
pushl
jp
cli
jmp
inc
push
pushl
mov
sbb
sub
mov
ja
mov
mov
jae
insl
mov
sbb
stos
clc
cld
ret
fsubrp
adc
add
ja
xchg
pop
fdivrs
cmpsl
sbbb
movsb
or
shr
pop
mov
je
pop
adc
or
hlt
jmp
paddusw
pop
shrl
and
jb
lea
test
pop
in
dec
les
mov
roll
dec
cmc
rcl
lea
hlt
jge
arpl
push
repz
fnstenv
cmp
scas
xorb
sbb
bound
jl
cltd
pop
andb
insl
jb
data16
sti
subb
jmp
cmpsl
mov
xchg
cmpsl
sahf
out
ret
test
mov
mov
push
icebp
and
mov
ja
enter
dec
pop
insb
test
sbb
cmp
fdivrl
icebp
movsl
xchg
gs
sub
mov
xchg
movsl
out
mov
pop
sbb
push
inc
ret
test
repz
adc
jbe
cmovno
cmp
fs
int
mov
lock
incl
pop
icebp
lds
dec
adc
sbb
mov
jp
jp
xorb
dec
fildll
mov
or
dec
je
movsl
pop
sbb
jle
xchg
mov
divb
shll
sbb
jbe
sbb
or
dec
xor
push
cld
call
sub
or
loopne
cmc
lock
lahf
cmp
xchg
ss
sub
ljmp
shrb
popa
and
rclb
stos
pop
xchg
cltd
in
mov
push
in
jae
mov
icebp
cmp
pop
mov
xor
imul
test
lds
lds
pop
rolb
pop
out
stos
movsb
xchg
xchg
xchg
popf
mov
sarl
inc
lcall
push
lcall
inc
push
out
andl
cltd
test
sbb
sub
jne
cs
int3
mov
xor
fsubrl
fs
jnp
mov
dec
stos
adc
negl
jbe
pop
insl
and
adc
lret
dec
mov
mov
std
cmp
or
lods
sub
das
sub
push
arpl
xorl
dec
pop
push
leave
pop
inc
inc
cli
fcomps
mov
aam
sbb
test
jbe
inc
dec
lock
cmpsb
pop
repz
sbb
xchg
and
jno
push
and
jle
int
xchg
xor
jae
int3
insb
pushf
jmp
mov
lods
ss
sti
addr16
iret
xchg
xchg
pop
push
cmp
jl
xchg
xor
or
pop
icebp
xor
push
xor
js
adc
ret
lods
cs
repz
aad
inc
pushf
xchg
jo
test
inc
mov
add
mov
sub
jmp
lods
cmp
mov
mov
xchg
call
das
cmp
xchg
lock
cs
hlt
outsl
aam
mov
decb
loope
cld
test
pop
jl
test
je
jae
scas
fwait
cmp
sbb
in
sub
lock
xchg
std
fidivrl
dec
mov
inc
inc
loop
adc
dec
addl
mov
dec
fnstenv
push
push
jb
mov
lock
movsl
fiadds
mov
jns
xchg
pop
mov
testl
push
sub
lcall
stc
cs
aad
xchg
xor
fnsave
sahf
add
mov
mov
popf
test
xor
lahf
shll
adc
sti
inc
iret
sbb
jae
ljmp
push
inc
sbb
add
lret
lret
jle
insl
test
adc
sub
sbb
out
push
jb
cmpsb
mov
push
fsubrs
push
bound
and
add
mov
insb
xlat
pop
dec
shll
sub
mov
mov
loopne
fs
outsl
mov
mov
xchg
mov
test
adc
mov
lods
orb
fiadds
cltd
leave
xchg
cs
or
sub
pop
push
fistl
test
adc
mov
xor
call
inc
or
aaa
and
sub
aam
sbb
pop
jge
dec
jnp
jbe
mov
movsb
incl
nop
scas
jl
push
jo
sub
cmpsl
jo
test
and
xor
mov
out
fildll
dec
cmpsb
insb
or
outsl
stos
ljmp
sub
mov
or
int3
rcr
into
pop
insb
fwait
sahf
pop
in
lret
call
xor
pop
cmp
ss
in
push
jno
sub
sbb
add
xchg
cld
ss
outsl
jecxz
adc
mov
stc
ja
adc
push
in
mov
dec
mov
xchg
repnz
cmpsb
ss
nop
repz
fs
xchg
hlt
xchg
loope
pusha
push
jb
pusha
out
imul
hlt
push
test
fs
out
mov
scas
lods
out
pop
test
push
jnp
pop
jge
mov
mov
imul
mov
lret
mov
cmp
mov
loopne
or
xchg
cmpl
sarb
mov
push
jmp
sbb
and
mov
jp
std
mov
fucomp
pop
xor
pop
fsubrl
inc
imul
xchg
jb
pop
pop
jge
mov
orb
jnp
inc
popa
mov
pusha
lods
bound
mov
sub
sbb
sbb
pop
mov
push
lret
cmp
fistpll
test
jae
insl
pop
jmp
and
outsb
xchg
lcall
cwtl
stos
mov
ret
incl
pop
xchg
push
scas
adc
push
cmp
and
cmpsl
lcall
sarb
jg
dec
push
mov
rcr
jnp
cmpsb
mov
dec
dec
movsl
adc
xchg
aam
adc
cmp
pop
mov
or
lea
xchg
xchg
cmpsl
cmpsb
nop
push
mov
add
and
fistpl
jnp
dec
jae
hlt
insl
inc
lods
or
icebp
insb
rcrl
xchg
push
and
push
sub
jecxz
les
mov
mov
loopne
inc
mov
xor
xchg
out
adc
outsb
mov
shll
aad
lahf
fsubrp
enter
test
or
sub
mov
push
out
dec
dec
and
nop
in
ja
push
add
pop
dec
cs
dec
dec
in
push
pop
adc
add
clc
mov
mov
cltd
js
dec
fcmovu
and
adc
or
std
adc
mov
outsb
xchg
pop
jbe
mov
mov
xor
mov
pusha
ret
test
xor
jecxz
lcall
xchg
daa
stos
mov
lret
stos
adc
add
into
or
push
push
mov
dec
not
rcrl
or
outsl
sbb
inc
xchg
adc
mov
fcmovne
xchg
mov
es
clc
scas
xchg
or
sti
adc
mov
pop
adc
daa
in
mov
jne
add
fs
outsb
inc
lods
loop
jne
jmp
lods
stc
nop
sahf
adc
xchg
outsb
popf
inc
mov
out
jecxz
sbb
fcomi
popl
mov
or
and
push
adc
cmc
scas
out
stc
push
add
inc
pop
xor
pop
pop
lods
dec
adc
xchg
mov
aaa
pop
mov
lcall
test
jbe
mov
outsb
inc
push
mov
jecxz
ss
xchg
pop
aas
leave
mov
cld
and
outsb
mov
inc
xchg
sub
mov
mov
pop
out
in
addr16
mov
sbb
push
adc
out
lea
cmp
push
out
sahf
cmp
or
cltd
jno
aaa
jnp
add
daa
mov
cwtl
sub
sti
dec
mov
mov
mov
das
jl
sub
or
cmpsb
lea
incl
fstps
ja
sarl
inc
lcall
mov
cmc
fistl
icebp
aad
stos
ljmp
sbb
negb
fisubrs
and
add
dec
jmp
push
lds
sub
xor
inc
cs
xor
addb
and
enter
add
or
lcall
test
inc
xor
imul
adc
mov
cwtl
cmp
ret
data16
fstpt
fidivrl
mov
pop
push
mov
push
mov
and
cmpsl
lods
out
jnp
or
jle
movb
mov
test
xchg
mov
sbb
xchg
js
in
enter
fidivrs
xchg
mov
out
push
sbb
arpl
mov
in
iret
xor
xlat
adc
and
sti
jecxz
jp
jb
inc
imull
imul
and
push
movsl
xor
sbb
clc
mov
xor
lods
push
int3
in
add
push
cmpsb
mov
ja
imul
adc
dec
mov
mov
mov
js
xorl
lock
jns
mov
adc
fists
jns
mov
cmp
cmp
dec
pop
mov
xor
js
notb
loope
mov
scas
push
adc
icebp
and
mov
sar
hlt
sbb
sub
out
rolb
fcoms
cmp
ds
test
xchg
mov
aam
push
mov
xlat
mov
fsubrl
fists
int3
clc
push
repz
sahf
loop
mov
mov
cmp
cmpl
inc
add
fwait
mov
mov
pop
pop
scas
daa
jle
fldt
mov
jae
cwtl
adc
insl
adc
jp
pop
in
ds
sti
outsb
popf
shr
sarl
and
adc
inc
adc
xor
fcoml
adc
fiadds
and
pop
jne
stos
xor
push
das
xchg
divb
in
and
shl
push
push
xrelease
movsb
jl
cli
mov
outsb
adc
push
sub
lods
xchg
xor
inc
inc
out
jg
shrb
fdivs
cwtl
pop
adc
mov
mov
push
aam
jmp
ficoms
das
test
push
aaa
push
icebp
hlt
or
int3
inc
xchg
outsl
movsl
std
addb
fwait
jmp
xchg
push
and
notl
inc
jmp
fistps
mov
fiadds
mov
addr16
lock
adc
push
xor
jne
js
xor
sti
lcall
sub
pop
mov
mov
ret
xchg
rcll
aam
mov
cld
or
mov
fildl
jb
jbe
add
fsub
sub
xorb
xor
into
sahf
inc
cmp
insb
and
mov
jne
push
adc
lock
push
arpl
test
dec
dec
out
pop
push
cmp
arpl
inc
call
fstpt
jo
test
rcrl
sbb
call
cmpsl
or
stos
pop
dec
cmpsl
mov
imul
mov
int
pusha
aam
xchg
sub
jae
fdivrs
pop
mov
fidivs
lret
push
adc
data16
repnz
jnp
lret
cmpsb
push
mov
daa
sbb
jmp
sub
imul
movsb
daa
shrb
outsb
popa
or
pop
aaa
repz
je
mov
movb
inc
insb
in
idivb
pop
mov
jge
sbb
pop
add
mov
ds
add
movsl
dec
fwait
adc
jbe
add
jl
cmp
sti
xchg
loopne
inc
js
xor
mov
mov
fs
std
outsl
dec
inc
cmp
lahf
mov
cld
or
incb
int
inc
sbb
sub
int3
scas
lds
xlat
jb
sub
mov
mov
mov
rcll
repnz
movsb
cmpsl
outsb
imul
repz
dec
xor
pop
xchg
inc
xor
sbb
mov
cmp
shlb
fwait
or
daa
movsb
xor
scas
jbe
push
adc
std
dec
xchg
mov
adc
sbb
xor
jmp
cmpsb
rorl
dec
sbb
mov
inc
lods
push
sub
cmc
mov
pop
jmp
ficoms
int
push
or
sbb
in
push
cld
push
dec
xor
or
adc
jbe
stos
add
and
ffreep
loope
xchg
inc
or
cmpl
nop
add
imul
mul
mov
push
arpl
sti
push
or
or
fisttpl
daa
sub
das
aas
pop
inc
jne
cmp
stc
xor
fbld
dec
and
fwait
jnp
jno
add
push
xchg
fs
xchg
mov
into
mov
and
mov
icebp
inc
aaa
add
lock
clc
xchg
fimuls
test
decb
and
pop
push
cli
adcl
mov
inc
adc
push
or
bound
jbe
or
dec
cld
xchg
push
jge
jmp
jnp
ret
bound
fldt
adc
mov
mov
push
inc
test
add
test
fwait
loope
pusha
fld1
pushf
xor
push
arpl
inc
in
loope
add
xchg
cmp
xor
repz
pusha
imul
hlt
sub
push
mov
mov
ds
in
pop
jge
jae
fs
mov
nop
and
jp
adc
out
jb
pop
mov
in
mov
push
xchg
in
jo
lret
cli
xlat
icebp
adc
or
imul
lds
inc
jae
js
sbb
leave
outsb
pusha
jb
mov
cld
ja
cmpsl
jecxz
mov
lea
into
aas
movsl
test
sti
std
dec
in
jae
call
fistps
out
out
xor
jp
loopne
and
pop
adc
mov
aam
clc
popa
xor
push
popw
cmp
pop
sub
mov
jp
mov
lods
cld
or
in
xchg
jl
decb
jb
pop
push
pop
lahf
idivb
test
xor
push
dec
fcom
xlat
adc
addr16
popa
mov
xchg
insb
out
sti
cmp
fcoml
lret
mov
adc
mov
xlat
pop
out
scas
mov
aad
repz
pop
shlb
dec
push
jns
popf
push
push
jne
adc
inc
add
inc
sbb
cmc
add
mov
aaa
das
scas
pushf
sbbl
jg
repz
movsb
xchg
dec
or
aaa
push
stos
inc
cmp
cmpsl
cmp
xchg
dec
add
jne
dec
xchg
xor
jmp
mov
mov
fnstenv
fs
inc
xlat
subl
xor
inc
mov
dec
fsubrs
iret
adc
pop
mov
mov
addr16
int
xchg
mov
push
cwtl
xchg
cmp
cmpsl
fnstenv
mov
or
push
sub
ret
lret
pop
pushf
cwtl
sub
xor
pop
add
repz
add
mov
es
adc
and
xchg
sbb
outsl
notb
xchg
dec
pop
cmpsl
stos
gs
push
mov
jne
int
ja
add
movsl
inc
mov
push
adc
push
fwait
or
cltd
out
add
shrl
mov
jp
in
or
je
aas
subb
loopne
cmp
enter
shll
xchg
and
insb
fcompl
inc
stos
shrl
mov
push
adc
adc
rcrl
adc
pop
xor
push
inc
int
mov
sbb
dec
inc
fsubs
imul
add
pop
pusha
pop
shlb
xlat
mov
mov
movsb
inc
xor
jmp
xchg
cmp
aam
cmp
dec
xorl
or
aas
cld
ljmp
stos
mov
inc
and
cld
cmp
mov
jae
or
popf
pop
cmpsb
pop
out
stos
pop
jb
jmp
and
idivl
fdivs
push
sub
cmpsl
inc
bound
sbb
je
and
pop
jno
push
sbb
xor
insl
xor
jge
mov
jp
lods
mov
rcrb
mov
mov
int3
stos
xor
fbld
mov
jecxz
cmp
int3
pop
cmp
cld
mov
int
or
aad
arpl
loope
sub
lret
or
lcall
popf
xor
push
mov
lahf
aaa
aad
sbbl
adc
sub
adc
sbb
mov
loop
sub
adc
lcall
shrb
add
sub
xchg
cmp
negb
loop
ret
mov
lret
int3
mov
cwtl
aaa
xor
roll
scas
jp
dec
add
lret
popf
fidivl
aad
inc
sub
dec
fcoml
shl
pop
inc
dec
leave
dec
out
cmpsl
outsl
lds
push
mov
popa
xchg
incb
xchg
es
jle
pop
ss
mov
add
and
add
sbb
sub
dec
dec
ror
cmp
aas
ret
and
daa
jmp
stc
mov
jb
loop
add
stos
xor
aas
inc
f2xm1
loope
jl
mov
lcall
sub
push
pop
or
lret
mov
push
fldcw
outsb
fwait
shll
and
lds
imul
outsl
inc
or
mov
or
and
adc
adc
loope
out
popa
test
add
jae
shlb
icebp
es
pushl
push
fldt
sti
xchg
and
adc
jecxz
xchg
adc
or
inc
nop
pop
popa
jg
in
test
xchg
dec
pusha
rcl
sbb
mov
mov
jnp
mov
sub
push
cmp
adc
lock
loopne
push
adc
sub
mov
cld
sub
xor
inc
iret
int3
adc
sbb
inc
mov
pop
ret
mov
int3
or
inc
xlat
arpl
cmp
add
int3
insl
imul
adc
mov
lcall
adc
hlt
mov
stos
ja
loope
test
mov
cmp
mov
pushf
mov
clc
lods
mov
jo
sbb
pop
mov
stos
in
mov
clc
popf
adc
push
fadds
mov
shrb
cmc
rorl
fsubrl
bound
mov
adc
mov
xchg
mov
ja
out
pop
pop
test
xchg
mov
mov
xchg
cmpb
loop
loope
jge
xlat
notl
add
lahf
mov
movsb
repz
mov
jl,pn
xor
jp
outsl
in
test
mov
lret
pop
inc
pop
sub
mov
xor
adcb
xchg
adc
or
gs
rcll
in
outsb
push
and
enter
fwait
pop
int3
mov
jle
popf
mov
dec
adc
adc
insb
push
cmpsl
inc
and
andl
out
enter
fstpl
rclb
cmp
xor
push
sub
sti
idivl
nop
and
xchg
loop
or
push
aad
push
mov
loope
and
and
shrb
arpl
daa
push
xchg
adc
pop
sti
mull
dec
mov
popa
stos
call
les
in
push
push
je
ss
pop
adc
xor
cmp
inc
cmp
xchg
and
xor
pop
int3
mov
cmc
cmpsl
or
loope
dec
inc
xor
cld
mov
ret
add
dec
roll
fcoml
inc
cmp
addr16
xor
mov
lret
std
filds
scas
sar
std
and
mov
sbb
dec
or
arpl
clc
pop
push
ja
into
loope
in
mov
sbb
jns
mov
dec
mov
ja
arpl
add
aam
sbb
fisttps
jne
out
xchg
adc
add
xor
mov
mul
jle
mov
mov
fsubrl
xor
xor
bound
inc
rorl
ret
xchg
mov
aas
sti
rcr
jl
mov
nop
ja
in
out
push
adc
xor
aas
cwtl
outsl
jge
and
jmp
mov
xchg
stc
and
xor
push
bound
fwait
sbb
outsl
and
lods
cmpsl
fcoml
inc
mov
cmp
mov
inc
divl
in
bound
adc
pop
in
shll
pop
inc
xchg
xor
das
cmp
stos
mov
faddl
mov
cli
loopne
add
cmp
pop
in
push
lret
mov
repnz
adc
mov
mov
mov
rcrb
mov
dec
ficomps
sub
mov
jo
add
jge
pop
rorb
push
mov
and
push
adc
out
adc
mov
cli
xchg
inc
icebp
add
test
cmp
div
adc
fs
push
ret
movsb
sub
jmp
jecxz
divl
cmpsb
adc
pop
xlat
les
sub
lret
mov
push
hlt
adcl
dec
int3
dec
xor
mov
ja,pt
xor
xor
lcall
adc
cmp
inc
jl
gs
mov
add
lret
sarb
mov
jle
sub
mov
scas
scas
push
sub
mov
and
and
popa
mov
daa
cltd
rcrb
adc
add
clc
out
and
test
data16
pushf
scas
jmp
pop
jo
pushl
and
jecxz
test
sub
lahf
cmpsl
shll
in
pop
and
mov
mov
dec
enter
xlat
out
pop
es
hlt
xor
inc
push
cmp
cltd
dec
iret
pusha
into
xchg
xchg
fidivl
cmp
sub
es
pop
int3
int
pop
xchg
lcall
inc
fiaddl
leave
imul
repz
and
cmp
push
stc
out
sbb
sbb
test
rcrb
popf
aaa
mov
bound
jno
cli
out
movsl
call
lds
xor
pusha
push
fmull
mov
jb
je
enter
and
inc
jecxz
aas
xor
or
pop
mov
push
mov
insl
jge
adc
mov
iret
loop
outsl
les
loopne
cmpsl
fcomps
repz
movsb
adc
push
scas
ds
lret
mov
adc
movsl
mov
xchg
je
mov
mov
daa
movsb
jne
mov
mov
and
push
sub
enter
sbb
arpl
in
jl
in
test
lea
stos
jecxz
rclb
fiadds
xchg
inc
mov
in
ss
fsubl
push
into
adc
mov
pop
out
sarb
or
repz
in
enter
inc
xchg
andb
out
sub
scas
lret
icebp
inc
fildll
test
or
ss
dec
dec
negb
cmp
push
jo
repz
add
jb,pt
dec
and
icebp
xor
jecxz
loop
mov
jecxz
xor
dec
mov
std
xchg
das
pop
cmp
sub
filds
enter
or
dec
push
std
mov
add
out
jb
les
sahf
out
test
push
rcll
jnp
jnp
es
into
lea
dec
dec
adc
das
pop
jmp
in
incb
cmp
enter
jmp
push
in
mov
adc
fs
add
fucomp
hlt
mov
andb
xor
movsl
ror
loop
or
pop
inc
jp
sub
mov
sbb
rcrb
negb
ficoml
rclb
ret
jno
push
loope
cmp
rorl
data16
addr16
test
mov
fmuls
loope
xchg
mov
cmpsb
sbb
pusha
popf
mov
aaa
or
push
imul
bound
mov
cmpsl
insb
in
sub
leave
push
negl
rcl
dec
jp
fiadds
push
sub
adc
jno
lcall
adc
cmpsl
icebp
or
lods
cmp
std
pop
fcmovne
loop
jb
jmp
call
sub
and
js
pop
jl
xor
fs
in
nop
pop
aad
push
sahf
rcr
mov
cmp
adcb
dec
repz
push
clc
mov
int3
jae,pn
rcrb
std
aam
push
jo
mov
xchg
xchg
dec
push
out
mov
add
cmpsb
loopne
mov
jo
std
pop
mov
pop
xor
enter
fiadds
adc
in
mov
mov
inc
cmpsb
cmpsb
icebp
rolb
pop
or
sub
imul
icebp
mov
mov
adc
mov
enter
push
adc
nop
and
das
pushf
fcoml
pop
add
cmp
sti
cmp
fcoms
jae
shufps
mov
dec
inc
dec
mov
dec
inc
shrb
cwtl
cmpsb
xchg
mov
test
out
jmp
inc
test
test
mov
pusha
out
movsb
mov
in
sub
mov
mov
shrb
out
xor
add
loopne
jns
mov
jns
std
fdivrl
or
cmp
cmpl
insl
fisubs
ja
mov
mov
xchg
push
mov
inc
mov
outsl
loopne
pop
in
pop
repz
dec
mov
aas
or
in
jne
mov
cli
lea
mov
sbb
pop
and
out
les
jp
add
xchg
cmpsl
xchg
push
insl
inc
cmp
popf
leave
imul
inc
adc
sbb
movsb
popa
les
mov
xchg
and
inc
mov
adc
jg
push
lret
loope
push
insl
cmp
leave
jp
adc
lcall
jp
rcrb
fbstp
scas
xchg
pop
lcall
mov
xor
mov
mov
cmc
xchg
xchg
pop
pop
dec
gs
stos
cmp
imul
mov
ret
pusha
push
rcll
add
movsl
nop
imul
xchg
movsl
mov
lods
xchg
or
and
inc
les
or
inc
adc
push
and
jp
dec
and
aas
int
std
adc
cmp
pop
sub
movsb
adc
stos
mov
aam
mov
sub
in
mov
xor
leave
adc
cmp
gs
es
mov
loop
mov
push
xchg
cltd
shl
push
sub
mov
cmc
cmpsl
xchg
jbe
cwtl
jg
mov
adc
enter
or
jbe
cltd
out
loopne
fdivl
test
xchg
inc
pop
fldcw
in
dec
outsb
lock
pop
lods
mov
sub
mov
xor
rclb
aaa
negb
pop
mov
hlt
ljmp
int
xchg
nop
loope
jp
cmc
cltd
ret
mov
lock
jae
xchg
pop
mov
sub
movsb
aas
cld
repnz
mov
loopne
out
sahf
int
sub
ret
dec
test
xchg
ja
shll
dec
inc
insb
fs
das
mov
pop
sub
or
jb
adc
xor
and
mov
idivl
or
call
roll
push
pop
fmuls
sub
mov
cmp
cmpsl
into
pop
lahf
out
xchg
repz
data16
loop
adc
adc
lods
in
push
xor
clc
enter
xchg
xchg
lret
shrb
mov
inc
popf
vpaddusw
pop
arpl
push
aam
mov
xor
mov
adc
mov
leave
mov
mov
clc
adc
add
loopne
mov
and
das
xchg
adc
setb
mov
pop
out
cs
sbb
loopne
xor
adc
ds
fwait
insl
shl
cmp
inc
sahf
addr16
int3
push
icebp
imul
stos
dec
movsb
dec
cmpsl
mov
cmc
aaa
mov
stc
jbe
mov
jae
cmp
pop
lds
sub
fs
fdivrl
mov
add
inc
lock
jl
mov
lock
push
xchg
push
push
enter
add
mov
arpl
xor
push
mov
add
inc
mov
sbb
and
jns
xchg
pop
lret
dec
xchg
into
push
insb
das
daa
ja
sti
sub
test
mov
mov
movl
mov
sub
lea
cmpsb
or
mov
ljmp
sbb
imul
test
xlat
xchg
imul
leave
and
out
cmc
mov
addr16
lods
std
loope
fldcw
sbb
lods
lea
push
js
loope
cmp
push
stos
les
movsl
sbb
mov
out
push
inc
enter
push
data16
mov
xchg
jmp
mov
xor
dec
jmp
inc
test
test
sti
pop
mov
adc
xchg
jg
sub
cmpsl
mov
nop
movsl
aad
xchg
sub
test
in
lahf
adc
jbe
lahf
andl
arpl
jae
loope
cltd
insb
mov
lods
xchg
jo
iret
out
lahf
xlat
sbb
push
dec
pop
inc
leave
xchg
dec
in
pop
mov
dec
push
push
or
cmpsl
mov
test
mov
inc
inc
mov
mov
stos
imul
dec
sub
adc
fsts
jae
std
pusha
cmc
js
dec
lds
xchg
push
add
out
xor
stc
repz
int3
and
cmp
lahf
pop
jge
arpl
lock
mov
push
jbe
mov
pushl
mov
push
pop
std
fmull
mov
mov
jl
lea
jns
sbb
push
jbe
in
inc
shl
cmp
push
cmc
lret
adc
lcall
mov
test
ss
jge
sub
xor
pop
mov
sahf
push
rolb
and
lds
cltd
imulb
cmc
inc
dec
sub
shrw
push
mov
bound
out
enter
pop
jge
roll
and
ja
mov
xchg
push
push
dec
cwtl
mov
mov
cmp
xchg
inc
insl
fadds
lcall
in
push
aas
mov
push
mov
loop
push
icebp
loope
xor
inc
loopne
lret
push
je
mov
lea
inc
shrl
out
cmp
pop
lds
pop
icebp
psrld
repz
cmpsl
stos
imul
xor
add
xor
sbb
push
dec
jo
cmp
xlat
in
or
push
jo
mov
lea
aam
fisubs
fxch
cwtl
test
jae
cmp
xor
jo
insb
mov
filds
out
addr16
sahf
shr
xchg
jo
mov
js
dec
sub
cmpsl
nop
xchg
and
lcall
mov
or
mov
adc
cmp
cli
jae
and
aam
mov
mov
cmp
sti
sbb
in
bound
bound
jne
lahf
mov
iret
test
icebp
inc
jae
inc
push
cmp
out
mov
mov
hlt
pop
xchg
mov
nop
cmpb
call
sub
rorl
or
sarl
pusha
jnp
js
inc
loop
cmp
and
jecxz
loopne
stos
ficompl
mov
sub
in
fldenv
mull
add
pop
loop
in
sub
ja
imul
nop
xchg
inc
and
clc
cltd
inc
push
vpmovmskb
mov
sub
sub
jmp
push
sub
movsb
das
sbb
cmpsl
stc
mov
inc
cmp
mov
push
insl
aad
mov
lcall
shll
std
pop
daa
pop
gs
and
jo
mov
dec
dec
inc
jno
pop
call
cmp
enter
and
int
int3
pop
mov
or
sbb
adc
cmp
movsl
pop
mov
push
push
and
xchg
mov
xchg
cmp
cmp
inc
ss
sbb
iret
dec
xor
lahf
cmp
mov
pop
add
push
ljmp
mov
xchg
and
ja
mov
fcmovnbe
xchg
or
shl
std
mov
inc
sbb
mov
lret
jecxz
inc
icebp
enter
loop
and
lcall
pop
push
xchg
cs
outsl
pop
lds
mov
push
add
mov
mov
imul
xchg
dec
outsb
xor
scas
mov
outsb
and
fiadds
cmpsb
push
enter
je
and
fiadds
popa
jae
repz
clc
sti
sbb
and
pop
loop
mov
push
push
notb
jge
bound
xor
int3
or
pop
cli
or
xchg
sbb
xchg
sbb
and
sbb
or
imul
push
jb
sbb
xchg
cmp
int3
mov
std
call
sub
xchg
and
leave
imul
icebp
jle
jbe
mov
jb
xchg
pop
xchg
xchg
clc
mov
dec
or
mov
movl
orl
cmp
into
pop
fistl
dec
cmp
pop
mov
and
add
push
mov
jbe
insb
inc
mov
inc
adc
jb
or
pop
or
mov
sbb
popf
xor
xchg
hlt
ja
dec
into
orb
adc
mov
xchg
xor
mov
sti
pop
sbb
or
fsub
cmp
pop
lock
insl
mov
xchg
adc
out
fsubs
dec
cmpb
jbe
arpl
pop
data16
push
mov
mov
in
or
xor
fdiv
adcb
jmp
mov
ret
mov
fwait
dec
jne
hlt
sub
pop
cwtl
lods
xorl
rcrb
popa
xchg
in
icebp
es
fdivl
mov
cli
aas
jb
jbe
mov
or
mov
les
inc
or
xchg
fimull
xchg
hlt
dec
clc
sbb
jae
movsb
cmp
imul
sbb
test
mov
rclb
push
pop
call
push
sbb
push
scas
jl
lret
xchg
loope
and
std
daa
cs
insl
dec
jns
mov
pop
inc
adc
orb
mov
adc
xchg
outsl
pop
adcl
scas
sub
cld
call
ljmp
out
pop
imul
pop
jg
pop
mov
xchg
lea
jg
imul
aad
pushf
inc
mov
adc
in
push
xor
rolb
jbe
aas
sarl
sub
sbb
mov
pop
push
push
test
mov
pop
and
lret
nop
pop
pop
xchg
mov
add
sarl
orl
lret
xchg
icebp
xlat
xor
adc
jl
mov
sbb
mov
mov
outsb
mov
xchg
mov
push
stos
pop
dec
testl
mov
dec
lods
jmp
add
sahf
pop
das
xlat
add
pop
jns
push
xor
iret
push
mov
iret
adc
lret
pop
sub
push
fnstcw
mov
push
push
pop
out
ss
xor
mov
js
out
pusha
aam
in
push
mov
xor
incb
xchg
mov
fsubr
scas
js
inc
enter
shl
hlt
push
xchg
jl
adc
fucomp
pop
or
and
cmp
js
lea
xor
outsb
jns
addr16
push
pop
call
xchg
fdiv
xor
insl
stos
test
add
cltd
sti
fbld
mov
shl
dec
push
popf
sub
xchg
cli
add
jns
clc
jecxz
mov
filds
ret
inc
insb
clc
test
push
mov
mov
push
inc
arpl
test
or
repz
mov
ds
and
mov
mov
imul
mov
call
aam
xor
add
into
mov
or
mov
jo
pop
shl
xchg
fimuls
jmp
in
rcrl
std
test
loope
inc
adc
sbb
js
shll
or
xchg
bound
jl
das
lahf
mov
nop
inc
xlat
jmp
in
pop
bnd
xor
fistpll
cmp
bextr
inc
mov
xchg
addr16
cs
fcomps
jmp
mov
xor
push
push
pop
jle
les
mov
pop
andb
mov
dec
fs
jns
add
dec
scas
in
test
popf
cmp
fldenv
lret
sbb
push
test
cmpb
es
cld
cmp
mov
mov
adc
or
push
dec
sahf
or
outsl
pop
xchg
sbb
mov
mov
lahf
mov
cli
mov
adc
mov
out
or
call
cmpsb
jmp
in
pusha
cltd
cmp
inc
daa
stos
jge
movsb
pop
xor
pop
dec
repz
adc
sub
dec
es
jle
mov
sub
lret
jge
add
mov
rcrb
adc
jle
std
mov
add
out
sti
pop
in
outsl
push
xor
sub
fwait
sub
test
jl
out
cmp
cmp
add
xchg
pop
idivb
sbb
mov
dec
lahf
add
adc
int3
sbb
lcall
push
lods
cmp
push
jo
pop
push
outsb
loope
ljmp
daa
in
imul
jl
add
add
loopne
lods
mov
jne
sub
fs
js
xor
loop
mov
std
outsl
pop
push
cld
lahf
lds
test
mov
xor
pusha
jge
mov
fs
cmp
dec
jle
push
scas
ds
xor
aam
jo
addl
test
jns
arpl
inc
clc
push
add
cmpsl
jecxz
int3
push
xor
repz
movsb
xor
mov
fildll
dec
xchg
dec
cmp
adc
mov
ja
ret
mov
push
xchg
mov
enter
and
pop
pop
popf
xor
add
lock
xor
scas
clc
icebp
adc
push
aaa
pop
shll
dec
jns
das
gs
xchg
lret
xchg
push
pop
adc
xchg
loopne
inc
xor
xor
test
imul
xchg
dec
ficomps
inc
or
rorl
aaa
mov
daa
fists
mov
xchg
dec
rcrb
movsb
or
xor
mov
mov
movsl
mov
cmp
push
inc
pushf
test
addl
aad
sbb
pop
ja
push
cs
js
cmp
lds
push
cmp
sbb
sub
or
scas
ret
shrl
mov
mov
aaa
push
sub
pop
mov
jb
xor
or
push
fucomi
cmp
cmpsl
fwait
xor
xchg
sub
call
fistps
in
shlb
pop
leave
xchg
xchg
sbb
dec
dec
rcrl
fnstsw
mov
pop
cmpsl
dec
mov
or
aad
xchg
dec
into
test
jle
xor
and
jnp
repnz
mov
push
andl
sub
addb
in
mov
out
mov
sub
inc
lret
adc
fstpt
dec
lock
ror
movl
loopne
mov
lcall
repz
lock
in
out
xor
popa
push
shrl
sub
lcall
es
dec
mov
mov
lods
in
std
jecxz
pop
stc
cmp
jno
addl
in
push
lahf
stos
sub
or
insb
sbb
daa
or
mov
push
enter
aaa
mov
imul
push
and
pusha
cmp
lcall
cmc
inc
jle
test
and
mov
scas
sti
les
inc
sbb
shrd
in
in
ss
jnp
fmuls
inc
mov
push
ja
push
lret
cwtl
pop
mov
mov
jnp
mov
sub
add
jle
and
xorb
int
mov
mov
cmp
xor
pop
add
into
and
mov
and
subl
adc
fdiv
mov
pop
loop
push
dec
in
or
popa
jno
test
clc
cmp
xchg
pop
mov
mov
sbb
addb
icebp
pop
into
lock
add
stos
xor
lahf
out
push
lock
outsb
loop
sahf
xchg
fidivrs
jno
pop
mov
repnz
outsl
orb
icebp
int3
push
and
js
call
stos
out
sbbb
dec
jno
into
out
imul
xchg
sub
addr16
xchg
pop
mov
fs
mov
ljmpw
mov
dec
cmpsl
out
fadd
leave
sbb
and
pusha
and
pop
fldt
notl
arpl
pop
jg
fnstenv
rolb
bnd
jae
mov
arpl
imul
jo
sub
lret
sbb
dec
sbb
lods
add
test
mov
ja
cmpsl
cmpsb
fmull
xchg
in
imul
inc
and
mov
test
mov
notb
sahf
xor
xchg
movsl
test
mov
push
push
shlb
mov
inc
xchg
cmpsb
cwtl
dec
sbb
pop
pop
cwtl
insb
push
jns
int
mov
or
push
cmp
mov
cmpl
push
fs
jns
push
lret
loopne
jle
adc
xchg
sbb
inc
mov
add
int
clc
leave
dec
bound
pop
push
stos
xor
fwait
cld
daa
out
pop
inc
hlt
mov
push
popf
xor
mov
clc
les
lods
aas
dec
add
jg
mov
cmp
sub
lods
test
ss
sti
fcom
push
mov
pop
mov
pop
or
push
sahf
push
insb
sub
call
mov
xchg
cmp
lret
in
mov
xchg
mov
sarb
pop
adc
lret
mov
enter
jnp
ss
ss
push
jecxz
mov
jl
and
push
xchg
or
enter
mov
pushf
popa
push
outsb
das
aad
jge
push
scas
dec
loop
sub
sbb
cmp
mov
cmpsb
jecxz
push
and
cmp
hlt
xlat
inc
out
xor
jge
into
push
jnp
movsb
jge
aas
pop
fisttpll
xchg
pop
into
inc
scas
mov
popa
cltd
lods
cvttps2pi
pushf
xchg
add
and
xor
push
or
icebp
jmp
into
dec
adc
mov
mov
push
jbe
enter
loop
mov
lds
push
ds
jp
mov
sub
fldt
ja
rcrb
adc
aam
jne
aaa
xchg
inc
ljmp
push
cltd
inc
jmp
in
les
out
jnp
pop
sub
xor
lcall
add
rorl
cwtl
mov
cmp
adc
addl
sub
cmpsb
lea
pop
lret
in
clc
and
iret
dec
ficomps
push
push
andb
cmpsb
test
xor
int
inc
dec
bound
push
pushf
jno
inc
mov
adc
dec
xor
cli
into
fimull
add
lods
mov
mov
jne
mov
xadd
push
sbb
pop
fisttpll
push
icebp
mov
pop
scas
mov
lahf
divl
push
pop
out
sub
mov
repz
mov
negb
push
mov
pop
pop
movups
sahf
jno
xor
loopne
test
mov
add
sub
mov
add
call
fimull
xor
cmp
aam
ret
clc
lret
sbb
jno
adc
add
inc
add
adc
adc
mov
mov
shlb
pushf
sbb
or
fnstsw
pop
call
add
jae
push
outsl
mov
ret
stc
nop
test
and
push
mov
inc
jl
mov
movsb
cmc
scas
xor
add
aaa
xchg
sbb
pusha
add
pop
dec
mov
imul
and
cltd
jmp
xor
sarb
test
loope
xchg
mov
pop
mov
lods
arpl
bnd
inc
movsl
imul
jno
xor
lea
and
cs
cmp
add
pop
mov
ss
xlat
imul
pop
add
dec
lods
mov
lods
in
fstps
mov
sub
imul
shlb
mov
jle
sti
loope
imul
lcall
movsb
jmp
push
dec
sbb
push
xchg
arpl
sub
cltd
add
pop
out
inc
mov
stos
dec
and
or
lahf
dec
xchg
ss
int
ret
and
in
es
xchg
mov
add
or
or
mov
loope
les
jl
orl
cmp
lahf
aas
fs
push
ret
mov
mov
xor
mov
xchg
neg
gs
pop
in
push
sbb
scas
aad
mov
mov
jmp
mov
cmp
pop
jae
loope
test
and
pop
adc
out
mov
cwtl
cmp
xor
sbb
adc
push
mov
imul
out
mov
lods
mov
push
inc
aam
mov
push
cmp
inc
jns
fcomps
and
push
daa
mov
imul
or
jb
or
das
cmpsb
mov
stos
push
push
and
jg
xchg
mov
dec
xchg
jns
push
in
push
or
cmpl
or
daa
jl
insl
scas
lea
pushl
dec
mov
mov
inc
sbb
mov
mov
mov
sub
icebp
mov
sbb
imul
inc
adc
lret
xor
inc
inc
arpl
popf
sub
mov
push
xchg
pop
mov
sbb
sbb
jbe
outsl
in
negl
sbb
push
jp
jp
xor
inc
fdivs
pop
mov
insb
fdivrs
test
pop
sbb
dec
sti
push
xchg
mov
jae
lods
xchg
scas
xchg
int
mov
inc
fnstenv
mov
cmp
cli
mov
imul
aam
test
pusha
hlt
sub
into
xchg
push
hlt
pusha
mov
sbb
test
pop
mov
push
arpl
push
mov
xor
es
push
outsb
shll
sbb
or
cli
xchg
jl
sub
mov
jg
lock
mov
sub
mov
gs
adc
fcoms
loopne
pop
mov
xlat
jl
aaa
loope
xchg
arpl
imul
test
outsb
mov
mov
pop
das
pop
mov
test
pop
aas
stos
pop
pop
xchg
dec
es
ja
mov
ds
xchg
inc
imul
push
xor
ret
sub
push
mov
nop
jecxz
aad
adc
jno
hlt
sub
xor
cmp
out
add
repnz
mov
inc
cmpsb
and
mov
cltd
and
mov
or
jge
in
addr16
jge
pop
cmpsl
movb
fsubl
fcompl
jg
frndint
mov
pop
pop
out
xor
xchg
fistpl
insb
lds
in
iret
out
mov
jb
lods
lret
xor
adc
out
std
loop
les
lea
pushl
jbe
xor
pusha
mov
sub
cld
cmp
lcall
ss
std
loopne
pop
icebp
movsb
xchg
sub
xor
pushf
movsl
mov
inc
inc
idivb
push
adc
sarl
dec
sbb
push
lahf
daa
and
inc
iret
les
and
dec
dec
movsb
push
adc
and
aaa
cwtl
ss
subb
leave
in
bound
fcompl
addr16
or
pushf
sahf
dec
jns
fdiv
lods
push
dec
add
xchg
test
call
test
sbb
cli
aas
cmp
mov
sarl
fsubrl
aam
test
sbb
xor
ret
or
dec
movsb
inc
nop
inc
sbb
hlt
cltd
lds
pop
mov
jl
or
mov
mov
and
jecxz
or
daa
dec
adc
cmpsb
pop
jge
outsb
mov
arpl
fstps
movsb
push
out
push
js
sbb
shlb
jns
dec
xor
out
sbb
fsubrl
adc
xor
ret
mov
push
repnz
mov
fs
cs
add
popa
addr16
sahf
movsl
or
das
popa
nop
adc
adc
cld
pop
lods
popf
push
popf
xor
fistps
test
or
push
mov
mov
mov
jge
cmpl
divl
les
std
push
iret
dec
outsl
aad
aam
loopne
int3
in
pop
test
xor
rcrb
cltd
xchg
mov
xor
push
sbb
mov
pop
movsl
scas
fmul
loope
or
stos
push
call
jnp
push
faddp
mov
xor
and
stos
pop
rcrw
ret
mov
popf
rolb
sbb
cmp
mov
cli
out
cmp
shl
jo
add
pop
dec
aas
and
add
cs
jmp
inc
jae
add
nop
add
sub
jns
mov
shrl
mov
jp
and
rolb
push
arpl
pop
into
sbb
aam
sbb
push
or
adc
aam
dec
xchg
cwtl
pop
sbb
test
push
pusha
fsubs
out
repnz
fdivrl
iret
inc
xor
popf
orb
push
push
fistpll
cmp
std
mov
addr16
mov
inc
orb
cmpsb
xor
dec
pop
insl
push
sbb
call
jmp
pop
add
inc
jbe
testl
dec
xor
mov
data16
in
xchg
pop
jp
jbe
jae
fcomps
adc
sbb
jmp
mov
outsl
cmpsb
add
loope
add
mov
fidivrl
popf
xchg
scas
jo
pop
dec
enter
cmpb
test
xor
pop
icebp
xor
jg
mov
and
insl
in
scas
mov
adc
daa
sbb
mov
jno
mov
int
insl
sbb
dec
int
sti
pop
push
dec
dec
fwait
cmpsb
xlat
pop
mov
test
mov
mov
loope
push
je,pn
sbb
pop
jne
xchg
out
jg
setno
adc
dec
sbb
lcall
repnz
xor
insl
mov
insb
pushf
test
mov
adc
subl
sub
dec
sbb
fdivs
daa
test
in
enter
ret
jne
in
lret
cmpsl
mov
xchg
add
jl
jp
fstps
mov
jbe
sbb
cmc
pop
aad
push
jne
stos
dec
sub
mov
dec
push
push
inc
mov
mov
aas
adc
pop
scas
popa
pusha
mov
sub
mov
pop
inc
mov
scas
pop
mov
inc
pop
js
xchg
jnp
pop
push
popa
into
je
cld
xchg
test
xchg
xor
xor
adc
inc
add
mov
insb
pop
pop
mov
inc
arpl
xchg
addr16
dec
fcmovu
jl
das
divl
ja
push
inc
dec
movsb
sbb
inc
scas
jge
jne
jne
cld
scas
adc
sub
int3
mov
bound
int
add
cld
sub
adc
dec
jmp
sub
xor
jne
mov
outsl
push
inc
dec
subl
test
sub
pop
inc
mov
pop
or
lret
cmc
rcrb
shrb
nop
cmp
andb
movsb
mov
cmp
nop
xor
rclb
aad
scas
int
outsl
push
cmpsl
in
mov
cli
mov
aas
xchg
lahf
xor
test
fyl2xp1
outsl
or
sub
pop
push
or
mov
sahf
movsb
lea
add
aad
push
and
adc
add
rcrl
stc
pop
in
jge
xor
mov
mov
sbb
xor
ljmp
std
movl
inc
mov
cmc
mov
std
loop
adc
in
test
and
shlb
jp
rorl
push
jg
mov
mov
test
jo
pop
movsl
xor
jns
fcoms
cmp
sub
sub
xchg
orb
sub
pop
and
inc
hlt
aaa
mov
daa
jnp
pop
pop
testb
xor
inc
rcll
adc
inc
add
inc
fsubrl
jno
jmp
mov
cs
mov
je
lahf
or
mov
and
add
out
shlb
cmp
out
outsb
mov
insb
daa
data16
lret
shlb
test
and
out
dec
inc
xor
test
lds
jno
pop
cs
mov
fdivrs
xor
cltd
add
in
insb
iret
fcomi
mov
adc
jbe
aaa
mov
scas
xchg
jp
jns
int
adc
movsb
outsl
sub
add
jbe
adc
jno
add
mov
lret
jmp
mov
lea
xor
aaa
xor
ficoml
and
xchg
add
add
arpl
jge
fdivl
pop
push
cmp
test
add
jle
scas
and
jo
mov
adc
fimuls
cwtl
inc
into
mov
outsb
or
adcb
data16
push
adc
push
pop
cmpsl
dec
jns
negl
add
mov
or
jb
or
mov
je
out
and
pop
rorl
in
arpl
addl
pop
inc
and
mov
loop
sti
or
mov
bound
cld
jp
xlat
lret
pop
callw
sar
sub
les
mov
fcmovu
xor
push
xchg
sbb
jle
xor
xchg
xchg
aam
imul
jge
add
dec
ljmp
les
loop
mov
or
outsl
sub
inc
mov
mov
cmpsl
shlb
and
sub
inc
sbb
inc
rcl
lods
sbb
hlt
int
cmp
jg
test
arpl
aad
aad
iret
les
movsl
addl
adc
jl
ret
cmc
add
movsl
xorl
adcl
arpl
xorb
movsb
repnz
mov
fldenv
outsl
mov
jmp
sub
push
pop
jnp
mov
or
pushf
mov
loopne
lcall
jge
ret
lods
add
aam
std
dec
enter
cmp
add
dec
cmp
dec
dec
cwtl
lcall
fsubrp
dec
sub
in
lret
repz
scas
push
in
loopne
cmc
bound
sub
jbe
out
std
cwtl
xor
imul
cmp
pop
int3
adc
pop
pop
push
cmc
push
adc
pop
into
dec
adc
mov
sti
pop
stc
aaa
and
inc
xchg
cld
std
sbb
in
ss
sti
loopne
movsb
fldcw
mov
imul
test
cld
cmc
aaa
mov
fnstenv
and
cmp
das
psubd
in
or
fucomip
inc
dec
clc
xchg
leave
xlat
lahf
shlb
ds
mov
push
rorl
mov
rcrb
pop
xchg
mov
into
aaa
call
pop
cld
inc
test
sub
cmpsb
sub
mov
nop
mov
pop
xorl
cmp
jecxz
out
sub
mov
test
jle
xor
sub
pop
iret
je
aam
mov
mov
add
xchg
sub
popa
out
repz
inc
loope
inc
loop
sbbl
cmp
idivb
xchg
ret
mov
loopne
cmpsl
loop
shlb
inc
push
sbb
xor
pop
mov
vpcmpeqd
fdivl
pop
movsl
fcomi
sub
adc
lret
xchg
dec
mov
stos
out
jmp
mov
mov
fistpl
xchg
jl
shlb
push
pop
repnz
sub
clc
lcall
push
and
lock
dec
dec
cmp
jle
dec
sub
lret
sti
lahf
or
fmull
pop
das
cmp
mull
arpl
pop
push
sti
xchg
fisubs
test
shl
and
aas
mov
stos
xchg
mov
out
inc
sbb
xchg
jg
dec
aad
mov
rcrb
mov
imul
add
push
negl
pop
shll
push
popf
out
adc
lcall
add
sahf
lock
fwait
push
push
outsl
aas
dec
dec
xchg
mov
mov
rcll
jae
out
lcall
lea
lahf
jmp
mov
out
pop
loope
imul
pop
pushf
setge
ficoms
add
es
mov
cmp
fs
enter
pop
fcmove
fstpl
dec
add
jge
dec
jae
jecxz
xor
dec
shr
pop
add
pop
inc
lahf
lcall
cmp
and
cltd
push
clc
or
push
adc
icebp
repnz
inc
pop
iret
pop
push
or
clc
push
in
pop
ret
jae
int
cld
mov
inc
mov
imul
repz
test
pop
dec
pusha
test
vandnpd
sti
and
push
inc
roll
fistpll
mov
cmpsb
mov
mov
test
sub
sbb
outsb
lea
sub
and
fcomi
jge
fsts
loope
add
mov
xor
push
sub
dec
leave
inc
dec
cmpsb
jbe
loop
cmp
ss
lcall
repz
dec
sbb
std
test
fnsave
mov
mov
scas
lds
test
hlt
test
out
out
loope
add
pop
mov
inc
cli
and
xor
push
adc
cmc
je
xchg
jnp
sti
mov
mov
sbb
aam
mov
adc
dec
in
inc
pop
xor
fwait
add
cmc
dec
out
inc
shrl
cmp
aam
dec
mov
and
leave
ja
shl
sub
mov
mov
push
fdivs
shl
dec
cwtl
jmp
pop
and
int3
fisubl
lcall
or
cmp
addr16
xor
xchg
call
or
test
pop
pushf
mov
sbb
leave
pop
push
jno
xchg
arpl
insb
sbb
pushf
loopne
sbb
int3
sbb
neg
inc
adc
push
and
out
xchg
fmul
add
mov
cmovb
jns
cmpsl
xchg
mov
mov
sbb
hlt
aaa
dec
push
mov
test
mov
mov
fsubl
mov
outsl
rolb
xor
movsl
or
or
sar
inc
adc
aaa
in
movsl
and
xchg
aad
lea
sbb
je
pop
dec
test
or
adc
sarb
call
lea
rorb
les
mov
jne
xchg
lea
cwtl
push
sti
outsb
in
mov
insl
out
cmp
ret
jp
nop
adc
in
push
inc
adc
push
loope
lahf
jge
jo
xchg
popf
and
fidivrl
jmp
es
cmc
sub
sahf
mov
insb
inc
push
push
sbb
test
dec
sbb
adc
cmp
xchg
ja
psraw
insb
popa
jnp
push
and
mov
pop
adc
lret
mov
sub
scas
dec
pop
test
push
mov
cs
aaa
mov
scas
sub
mov
mov
or
cltd
movsl
sub
and
mov
lods
add
mov
adc
push
cmpb
cmp
mov
xchg
icebp
inc
and
add
push
add
scas
push
out
stos
fbld
and
lret
xor
or
push
xlat
jo
popa
shll
je
das
inc
mov
cmpsb
adc
pop
and
jp
pop
inc
outsl
inc
adc
in
call
ficompl
pop
mov
or
dec
ret
mov
es
mov
inc
jnp
out
cmp
sahf
jle
sub
divl
cs
jl
loope
vpaddd
xchg
int3
mov
jmp
ds
jmp
das
pop
sahf
mov
gs
sub
add
sbb
mov
popl
loope
sub
mov
cmp
imul
sbb
mov
clc
adc
lock
pop
add
mov
inc
adc
push
cmpsl
dec
jne
fs
adc
and
inc
pop
and
pop
popf
stc
call
ficoml
sub
push
xchg
or
adc
icebp
int
scas
pop
scas
adcb
push
in
imul
pushf
dec
xor
mov
jle
pop
xchg
cmp
jmp
es
mov
xor
push
into
and
bound
adc
das
sbb
mov
and
sbb
fisttpl
pop
rclb
xlat
add
mov
std
sbb
int3
arpl
ds
fwait
pminub
mov
dec
movsl
imul
adc
jnp
push
sbb
mov
ss
cmpsb
les
cmp
leave
stos
in
fisttpl
push
sub
scas
sub
inc
jns
and
shl
xchg
in
andl
fsts
dec
sbb
sbb
xor
leave
fldenv
std
scas
and
jge
dec
out
int
arpl
dec
mov
push
and
inc
mov
jo
inc
and
je
mov
push
pop
sub
mov
loop
add
jle
je,pn
hlt
or
scas
clc
or
mov
cmp
mov
fsubrl
add
loopne
xchg
mov
add
pop
outsb
sub
inc
lret
mov
pushf
dec
xchg
sbb
aad
leave
jmp
sbb
xor
push
mov
pop
lods
cwtl
jle
dec
push
pop
fstps
push
xor
dec
push
mov
cwtl
shll
or
push
dec
std
cmpsb
cmp
mov
or
jbe
sbb
ja
insl
shl
or
icebp
sbb
xchg
cld
sub
gs
dec
fimull
adcl
and
cmpsl
test
push
pushf
dec
add
lret
jmp
imul
pop
cmp
xchg
jmp
jge
fdiv
test
lds
enter
loope
sbb
rclb
out
add
std
ret
in
xchg
aaa
leave
aam
mov
pop
mov
in
in
push
mov
ljmp
cwtl
mov
test
rorb
mov
shl
pop
mov
in
mov
push
cmpsb
mov
push
push
mov
jae
out
addl
push
lods
aas
pop
mov
imul
add
sbb
jg
sbb
fidivl
jl
shr
fsubs
xor
push
add
inc
lret
ss
es
bound
mov
jmp
dec
cmpl
int
aad
or
loopne
push
jnp
push
push
jb
jmp
scas
mov
movsl
cmp
fs
cmpsb
ret
pusha
and
in
inc
pop
push
pop
negl
xor
imul
cmpsl
xor
in
add
data16
jno
and
shr
mov
xchg
dec
or
pop
int
mov
ljmp
outsb
mov
movsb
addb
lcall
xchg
outsb
push
fdivrs
addb
sub
push
pop
or
dec
push
adc
jl
movsl
ret
adc
add
insb
insb
lds
fs
push
mov
call
test
lods
rcl
es
push
mov
das
fisubs
xchg
push
js
aam
jl
dec
cmpsl
ja
push
mov
scas
fcom
mov
push
stos
jle
pusha
jg
mov
sub
and
subl
or
out
mov
bound
cli
jg
es
sbb
out
adc
mov
cltd
cmp
outsl
inc
and
aad
cltd
clc
push
mov
sbb
or
ret
xor
push
shrl
fsubr
or
jns
outsl
jns
add
lock
orb
leave
lea
int
xor
xchg
insb
lahf
mov
push
lock
fiaddl
mov
jecxz
pop
pop
dec
dec
adc
pop
mov
out
xor
adc
outsb
add
jl
sub
mov
mov
movsl
repz
mov
dec
cs
and
aaa
fistpll
jge
jp
mov
add
mov
es
or
xchg
cli
fstpl
inc
jae
push
std
dec
lods
icebp
pop
out
loope
add
leave
cmp
pop
jmp
mov
call
adc
and
lahf
dec
xchg
shll
mov
jle
or
arpl
enter
iret
xchg
data16
lods
shr
dec
sbb
mov
dec
inc
or
or
mov
xchg
jae
call
out
sti
push
sub
lock
loope
nop
pusha
js
dec
fdivrl
jne
jno
mov
leave
imul
and
jge
fsubp
mov
lret
insl
lahf
inc
les
cmpb
sbb
sub
jge
mov
loop
fxch
or
mov
and
scas
cmp
jne
adcb
mov
mov
in
mov
in
xor
out
jns
lods
movsb
or
cmp
sbb
inc
xchg
mov
gs
adc
push
xor
and
repnz
cmp
mov
xor
push
rorb
pop
aam
jl
leave
sub
add
stc
sbb
iret
add
and
addr16
incl
shll
xchg
inc
dec
mov
mov
sbb
sbb
fisubl
arpl
ljmp
add
adc
sahf
aas
pop
and
xchg
inc
ror
or
inc
pop
or
jno
pushf
xchg
test
js
push
fimull
insb
mov
mov
push
mov
fsub
lods
loopne
jne
adc
out
test
inc
in
scas
or
sbb
sbb
clc
jmp
fbld
mov
shlb
and
outsl
pop
aaa
cmpsb
xchg
pop
or
mov
ds
adc
das
mov
lea
dec
fs
mov
dec
adc
cmpsb
cmpsl
push
lahf
aas
sbb
test
and
inc
leave
dec
add
xlat
inc
dec
fdivl
pop
imul
or
mov
std
and
sub
xchg
lea
popf
fsubl
test
inc
and
mov
ss
dec
dec
push
mov
mov
jo
mov
xchg
jl
xchg
mov
ss
iret
push
pop
fstpl
lds
ret
in
subb
and
cmp
adc
jmp
and
les
adc
mov
or
loop
sbb
mov
fimuls
cmpsb
stos
adc
mov
pusha
push
jg
je
cmp
nop
aad
push
cmp
sbb
fdivs
and
or
mov
mov
hlt
scas
pop
sub
adc
xchg
sub
and
imul
inc
popf
mov
out
sbb
sbb
pushf
aad
in
lock
fsubrl
fstpl
push
pop
movsb
cwtl
cld
cli
mov
js
jmp
cmp
enter
lods
imul
out
ret
sub
xchg
cwtl
push
inc
jo
out
hlt
jg
jne
cmpsl
mov
inc
mov
sub
sbb
sti
fildll
clc
cli
sbb
cmp
or
lcall
mov
push
lret
push
cmp
sbb
clc
enter
enter
repz
stos
pop
cmp
push
fndisi(8087
cld
cmp
xorl
in
xor
adc
and
jp
test
int
gs
push
adc
test
out
rcrl
js
fiadds
push
fbstp
push
inc
sub
push
rolb
rorl
pop
sahf
outsb
rolb
inc
idivb
ss
data16
adc
and
int3
aad
or
mov
jmp
sahf
xor
test
lret
popf
push
mov
hlt
ret
sar
cmpsl
mov
inc
xchg
jno
push
es
mov
and
mov
xchg
jae
insb
mov
push
fldl
hlt
paddb
movsb
in
cmp
in
inc
mov
je
inc
arpl
xchg
jae
xor
dec
fisubrl
ret
adc
dec
testl
jmp
testl
cmp
xor
cmc
pop
cmp
pop
sbb
repnz
cmpsb
push
pusha
scas
xchg
imul
ret
push
fildll
and
rorl
push
lods
jne
sbb
pushf
frstor
or
loopne
push
mov
out
mov
jg
ret
jae
sub
or
pop
adc
pop
sub
mov
pop
fnstcw
mov
mov
mov
stos
mov
inc
sub
lods
pop
ss
sarb
rolb
mov
test
orb
xor
and
mov
mov
push
dec
mov
loope
stos
push
insb
aad
shlb
adc
dec
aas
or
js
cmp
xor
ljmp
inc
mov
orb
cmp
add
in
hlt
jne
ds
xchg
mov
inc
lods
xlat
inc
pop
pop
dec
dec
mov
ret
inc
repnz
mov
shlb
ljmp
add
test
sahf
push
pop
cli
test
inc
fisttpll
or
insb
or
xor
shlb
enter
popf
inc
add
push
dec
push
dec
xor
insb
pop
cmc
jae
sbb
xlat
movsb
aas
xor
push
stos
fsubs
xchg
inc
inc
shlb
loop
bound
pop
or
sar
adc
push
dec
pop
lcall
pop
mov
loope
sbb
mov
xchg
cs
jae
stos
aas
dec
es
mov
loop
lahf
sbb
pop
aas
pop
pushw
vmread
inc
mov
xchg
nop
ret
mov
add
dec
pop
xor
out
jmp
push
and
mov
pop
sbb
shlb
ret
sub
inc
sbb
repz
in
add
sbb
sbb
fisttpl
jnp
dec
cmp
rolb
ljmp
xchg
repnz
cmp
out
iret
loop
test
sub
shll
push
shll
push
ret
inc
ljmp
push
int3
movl
dec
cmc
mov
aad
ja
mov
dec
sbb
push
out
cwtl
xchg
cmpsl
imul
andb
imul
es
aaa
xchg
loop
fisttpll
ds
mov
mulb
dec
or
lods
push
cmp
sub
adc
cmp
mov
inc
ja
add
dec
mov
rcll
xchg
xchg
addl
int
adc
int3
pop
pop
nop
dec
pop
out
xchg
mov
test
mov
cmp
hlt
xor
mov
pop
outsb
jno
dec
adc
scas
mov
daa
cmp
sub
sbb
xor
or
mov
sbb
inc
pop
out
xchg
add
jmp
sub
xchg
push
xor
sar
pushf
jb
xchg
push
lcall
ds
nop
mov
insl
mov
lahf
push
lcall
push
in
mov
lret
pusha
scas
test
pop
pop
sbb
rcrl
dec
add
pop
push
fbld
mov
pop
mov
xchg
aad
and
movsb
fiaddl
xor
repnz
inc
movsb
mov
orb
mov
pop
adc
outsb
add
out
add
fs
cs
lea
orb
sti
pop
das
xchg
mov
push
push
stos
adc
js
stos
add
push
in
mov
mov
sbb
add
jns
inc
jo
adc
sub
fistpl
add
xchg
int
add
sub
cmp
lret
ficoms
mov
and
or
outsl
ret
pmullw
cmpsl
nop
pop
pop
in
mov
pop
test
das
scas
sub
mov
or
rorl
xchg
sub
out
lea
jmp
jg
or
test
mov
jmp
js
test
xchg
jle
das
call
fdivs
test
mov
popa
pop
jle
cld
sbb
push
mov
xchg
ss
push
jae
push
insb
sbb
ret
inc
push
push
cmp
daa
mov
xchg
leave
fs
in
push
mov
testb
cmp
and
rsm
sbb
fwait
inc
and
xor
sbb
pop
aam
lea
add
aas
and
and
fs
push
adc
or
mov
push
scas
or
xor
push
test
or
push
push
dec
dec
xchg
jbe
mov
scas
and
stc
sbb
dec
jl
inc
sbb
mov
ret
or
decb
jb
aad
ret
and
push
ret
xorb
shrl
add
imul
push
lds
fstpt
divl
adc
pusha
adc
jge
outsb
mov
ret
orb
xor
cmp
outsb
push
inc
ss
ja
cmp
inc
or
std
sti
add
enter
jmp
sub
cs
movsl
scas
lret
sbb
out
cmp
jmp
inc
inc
mull
das
jb
add
out
dec
enter
push
mov
or
imul
xchg
lock
mov
jecxz
loopne
or
int
xchg
sbb
filds
pop
mov
int3
jecxz
mov
and
test
fcomps
push
js
scas
out
inc
insl
mov
dec
iret
fistpl
int
test
mov
sbb
mov
sbb
pop
test
pop
xchg
lahf
fsubl
pusha
push
sarb
pop
mov
mov
aas
in
and
push
fdivrl
xchg
orb
cld
sub
cmc
rorl
inc
dec
lods
fisttpl
dec
sub
dec
lea
adc
dec
idivb
call
int3
inc
push
pop
pop
outsb
std
inc
imul
and
lods
push
jb
add
fildll
js
outsb
loope
mov
dec
adc
xor
mov
xor
loopne
sbb
test
xor
jne
or
arpl
sbb
push
push
mov
jle
lcall
adc
adc
dec
mov
enter
iret
dec
mull
or
ljmp
loope
iret
push
cmp
lea
xchg
mov
test
jl
adc
pop
jmp
test
lret
jno
test
stos
push
inc
insb
fsubrs
fs
dec
push
inc
icebp
mov
push
jmp
das
cmpb
cltd
int3
mov
inc
mov
xchg
dec
mov
lahf
cmc
push
fcoms
outsb
movsl
jmp
lret
inc
xor
pop
mov
cmp
xchg
pusha
es
push
insb
push
xor
xlat
jmp
jae
in
lcall
out
inc
push
or
fsubrl
pop
fcompl
mov
inc
mov
out
xlat
jns
flds
inc
push
iret
fwait
push
stc
pusha
cmpsl
xchg
xchg
dec
push
hlt
ror
daa
inc
fimuls
pop
aaa
rcrl
stos
arpl
shll
enter
xchg
lahf
and
push
jo
pop
inc
xor
and
aad
adc
out
fs
xor
rcl
mov
jmp
gs
cli
push
test
cmpsl
inc
mov
mov
pop
aam
je
jmp
push
imul
push
jecxz
jns
mov
aam
icebp
jae
push
push
insb
cmp
cltd
push
xchg
adc
mov
push
jb
jmp
push
loop
mov
and
adc
sbb
ja
ljmp
rcrb
loopne
aaa
popf
and
push
cmc
ljmp
sbb
or
and
out
mov
push
outsb
cli
dec
push
call
xchg
out
fldl
add
pop
push
movsl
pop
cltd
pushf
xchg
push
decl
sub
push
test
es
sbb
lock
inc
scas
out
cltd
stos
fiaddl
jbe
push
mov
sbb
out
push
in
addl
adc
jo
loopne
test
es
push
mov
inc
inc
push
or
fwait
pop
mov
xchg
jmp
sub
out
ja
sbb
stos
push
aaa
sahf
jns
xor
or
inc
xor
mov
popa
or
movsb
popf
add
dec
sbb
lods
add
jmp
push
jle
xchg
cmp
add
fisttpll
repz
mov
sbb
sub
mov
inc
or
scas
inc
pop
sub
cltd
jne
aas
out
cmp
cmp
mov
adc
mov
mov
out
or
mov
add
pop
jmp
mov
adc
ret
cmp
mov
nop
sbb
jns
mov
xchg
pushf
out
xlat
inc
or
adc
test
mov
xchg
jbe
xchg
test
enter
int
xchg
jmp
adc
dec
in
pusha
mov
fdivrl
aad
test
aam
test
mov
in
gs
mov
cmpsb
add
sbb
insb
popf
jbe
sbb
insb
xchg
push
pusha
filds
xchg
insb
add
or
or
mov
mov
pop
dec
xor
jne
adc
leave
sbb
js
sub
inc
mov
roll
out
pop
jne
es
xchg
xchg
sub
inc
test
and
pop
or
ficoms
stc
pop
mov
push
push
push
scas
or
cmp
mov
movsl
lret
mov
cli
add
rcrb
sub
add
stos
ss
scas
scas
in
pop
lods
fisubrl
push
out
adc
pop
add
insl
jg
push
xchg
cmp
push
cmp
or
xor
push
int
cmp
mov
shlb
lds
jns
inc
inc
test
cwtl
jae
rcrl
pusha
dec
jb
push
aaa
andb
inc
fcomps
xchg
lds
mov
or
idiv
fnstenv
pop
repnz
outsl
aas
pop
xor
lret
into
ret
pop
push
out
xchg
push
pop
mov
pop
cltd
pushf
rorb
or
push
xor
int3
orb
adc
mov
xor
jno
aaa
mov
cmp
in
sub
xchg
sub
sub
push
outsl
fsubrl
nop
adc
and
mov
ljmp
addr16
mov
imul
out
add
or
or
sbb
inc
fwait
dec
out
pop
push
mov
and
jno
loope
sbb
xchg
xchg
add
xchg
decl
mov
push
call
cmp
xor
lea
add
adc
push
in
mov
or
sub
sbb
sub
nop
lea
add
repz
jo
imul
mov
sti
stos
cmpsb
ficomps
out
and
inc
std
pop
jl
pusha
in
outsb
dec
pop
sub
mov
xchg
hlt
das
mov
das
lcall
push
loope
cmp
dec
sub
mov
xorb
inc
shlb
cmpsl
xchg
xor
or
adc
or
add
movsl
inc
dec
inc
mov
ret
sbb
lock
scas
gs
cmp
jecxz
push
les
mov
insb
loope
or
inc
orb
int3
xchg
mov
scas
pop
dec
add
and
jg
or
mov
cli
pop
in
and
xchg
jl
mov
test
and
jae
or
aad
mov
insb
sbb
jo
dec
mov
sbb
sub
ss
cmpsl
sbb
mov
mov
daa
iret
scas
xor
and
adc
stos
push
sbb
insl
pusha
adc
es
sahf
je
lods
imul
fstpt
adc
out
mov
in
and
popa
inc
es
rorb
xlat
add
xchg
xchg
xor
test
cmpsl
add
sub
cwtl
sbb
frstor
clc
xchg
cmc
fcoml
xchg
xor
inc
test
cmp
dec
fcomp
clc
jl
into
lcall
repz
loopne
icebp
aaa
repz
fcoms
xchg
loopne
and
shl
sub
sbb
inc
lock
add
jl
pop
xchg
xchg
push
jnp
xchg
pop
cmc
sub
pushf
arpl
inc
ret
andl
cmpsl
inc
data16
das
test
sub
jne
cmp
into
cmp
and
push
xchg
mov
add
mov
mov
mov
cmp
repz
bound
and
clc
scas
pop
adc
leave
or
lea
or
dec
nop
verw
push
paddusw
adc
mov
aaa
jp
out
inc
or
sub
xchg
stos
or
mov
mov
out
xor
in
je
jmp
stos
out
scas
cmp
jne
push
hlt
repnz
in
adc
xor
js
sub
sahf
pop
jge,pn
cwtl
das
xchg
push
scas
adc
fisubs
pop
cmpsl
xor
fiaddl
scas
xlat
pop
je
cld
pop
mov
lret
dec
out
sub
lock
loopne
idivb
xchg
or
rol
les
dec
in
fmulp
lcall
loopne
int3
cmpsb
push
jns
loope
cmpsl
mov
push
push
mov
and
adc
sbb
rorb
cmc
cmp
inc
mov
pop
or
fnsave
mov
gs
add
arpl
and
test
pop
sbb
fisttpll
add
cld
in
popa
iret
inc
stos
es
mov
and
addr16
xlat
cs
or
fldl
add
dec
mov
out
filds
mov
pop
adc
gs
jg
pop
mov
jmp
imul
mov
xor
leave
data16
sub
xchg
cmp
jno
xchg
add
mov
dec
mov
pushf
or
enter
sbbb
lret
in
push
push
sub
stos
add
inc
cmpsb
mov
loopne
and
adc
sub
clc
dec
fnstenv
lret
std
push
int3
icebp
add
push
pop
mov
fcom
push
jb
lods
and
frstor
or
sbb
loopne
sub
std
sub
je
call
adc
mov
xor
sub
mov
lods
pusha
add
mov
mov
mov
decb
or
int3
scas
and
fildl
jne
pop
mov
out
inc
andb
shrb
cmp
pop
cmp
repz
subl
mov
into
push
scas
add
cmp
aam
jmp
popa
mov
aad
mov
mov
faddl
shlb
scas
andb
jns
xchg
adc
inc
test
or
aam
pop
push
dec
mov
clc
nop
or
mov
pop
and
pop
scas
and
xor
fs
inc
pushf
stos
ljmp
call
test
pop
mov
sub
jle
imul
fwait
adc
sbb
add
mov
cltd
fcomps
pushf
das
jbe
std
jle
shll
adc
sub
cmp
fsubrl
xchg
jae
sar
shl
ret
outsl
mov
ret
mov
mov
scas
xor
jp
divps
jb
xchg
loop
in
xchg
out
xlat
cmpsl
jns
mov
outsl
stos
jbe
stc
dec
rcrb
test
pop
jo
mov
mov
das
xchg
in
cmp
dec
or
cmp
lods
mov
pop
pop
addr16
loopne
xchg
popa
dec
push
cs
push
lock
mov
push
out
inc
lahf
inc
cmp
leave
or
pop
out
movsl
and
push
dec
or
and
loopne
jno
test
in
hlt
and
cmp
nop
andl
fisttpll
mov
adc
push
ja
sbb
je
loop
out
mov
mov
test
pusha
stos
xor
pop
mov
imul
mov
add
dec
mov
cwtl
daa
sbb
lahf
outsb
jb
push
mov
xor
adc
or
adc
mov
jns
dec
loope
xchg
xor
ret
jbe
mov
ds
sbb
cmp
mov
and
cld
je
fists
aaa
pop
int
sub
in
loop
sbb
std
push
repz
mov
sahf
sarb
or
lret
rcl
lods
jge
dec
pop
add
bound
push
outsb
pop
outsl
repz
xor
push
xor
cld
arpl
inc
stos
cs
add
push
jecxz
and
xor
jae
push
mov
mov
pop
lods
adcl
push
enter
pop
inc
in
scas
sub
loope
push
cmp
sbb
movsl
aaa
mov
lret
sub
ret
sarb
jns
jnp
cmp
lods
aad
jp
mov
mov
negl
int3
ret
ljmp
stos
fstps
add
inc
push
pop
jg
sbb
push
or
dec
mov
push
call
movups
jp
or
push
pop
inc
test
jb
clc
mov
fistl
daa
pop
hlt
cwtl
cmp
cmc
pop
aaa
inc
je
fstpl
out
movb
xor
popa
mov
add
lret
mov
xchg
xchg
aas
push
insb
cmp
adc
in
in
dec
bound
dec
out
imul
out
in
pop
lock
push
aas
mov
test
sbb
push
mov
xchg
mov
cmp
inc
sub
stos
mov
lret
sub
testb
test
and
pop
sbb
cmp
sahf
or
shll
xor
sbb
sub
pop
nop
xchg
ja
mov
ror
mov
in
out
sub
mov
cmp
mov
xlat
jmp
sbb
or
insl
sub
popf
sub
xor
sbbl
cmp
shrb
cmpl
mov
hlt
jb
mov
out
ds
hlt
jl
cmpsl
fsubrs
sub
sahf
iret
sbb
pop
ret
pop
ret
add
mov
daa
inc
push
xchg
cs
in
mov
lods
ss
pushf
mov
dec
add
adc
ja
repnz
xchg
mov
pop
aas
sub
cmp
sbb
mov
icebp
test
push
imul
mov
sub
add
or
add
push
sahf
in
rolb
xchg
lods
mov
xor
xchg
sarb
sbb
xchg
mov
cmp
sbb
pop
sbbl
jo
repnz
push
xor
or
lock
ret
pop
pop
fisttpll
sub
lea
sub
dec
and
int
ljmp
xchg
call
shl
jo
clc
and
jl
test
jo
sbb
pop
mov
jns
sub
outsb
pushf
ret
insb
push
add
jo
sbb
movsl
ds
loopne
out
in
cmp
mov
aad
jecxz
add
mov
clc
dec
and
insb
push
sub
mov
pop
mov
mov
cltd
jne
cmc
xlat
xchg
sti
and
adc
clc
popf
inc
sub
sbb
jns
mov
lock
sub
jg
scas
or
mov
push
arpl
inc
mov
enter
mov
push
test
push
xor
sbb
loope
outsb
mov
flds
cmp
pop
cmp
test
dec
mov
xchg
ja
mov
add
es
sahf
mov
mov
jle
ss
mov
mov
sarl
test
fbstp
mov
fnsave
clc
inc
xlat
push
in
mov
mov
fld
inc
mov
jp
stc
arpl
pop
insb
aas
cmp
stc
mov
xchg
lret
lret
sub
xchg
repz
ret
and
xchg
push
dec
rorb
mov
movsl
in
jns
cmc
push
adcl
add
dec
xor
or
cmp
sub
neg
push
mov
popf
cmp
or
jge
repnz
out
in
sub
adc
mov
aaa
xor
pop
fs
ja
cmp
mov
and
rclb
and
out
adc
jae
sbb
xor
scas
xor
jecxz
ss
sar
into
inc
mov
call
dec
ja
dec
jb
imul
sub
pop
mov
repnz
inc
add
mov
clc
or
sub
pop
int
inc
dec
or
sbb
loopne
out
push
mov
test
aad
dec
mov
out
jae
ret
xchg
lods
adc
mov
dec
repnz
xor
xchg
rcr
out
outsb
pop
std
aas
cmp
xor
push
arpl
cmovae
sbb
icebp
sub
xchg
xchg
int
stc
in
lds
loope
cmp
push
pop
or
scas
adc
pop
aam
xchg
xor
or
push
or
scas
inc
mov
in
cmpsb
out
push
cmpsl
jno
stc
jno
ljmp
lret
xchg
mov
jp
mov
xchg
pop
or
leave
pop
jns
lods
mov
pop
hlt
outsl
or
sbb
rcrl
hlt
lcall
sbb
mov
and
test
daa
sub
or
scas
push
sar
and
push
mov
ljmp
andb
insb
outsb
hlt
lods
mov
mov
jmp
inc
or
jns
les
loop
ljmp
pop
cmpsb
cmp
loop
out
cmp
sbb
shl
mov
pop
movsb
scas
xchg
jae
sub
fbstp
pusha
inc
inc
add
loope
and
add
xor
sahf
sbb
jg
xchg
add
lods
data16
xor
mov
mov
repnz
insl
mov
pop
dec
and
mov
xlat
inc
sahf
loopne
xor
addr16
out
sbb
call
cmp
pusha
or
cltd
jne
xchg
test
mov
push
cmp
or
add
pop
or
mov
cmp
pop
push
inc
outsl
ret
test
sub
jp
sbb
jg
addr16
data16
add
add
lcall
shlb
loop
cmp
push
pop
iret
jnp
mov
mov
fistpll
or
mov
sahf
cmp
jnp
add
inc
jns
int3
out
loop
movsb
je
mov
or
fabs
jne
adc
test
lcall
xlat
push
into
jo
jle
lds
add
or
xor
lock
pop
int
adc
pop
mov
mov
inc
mov
sarb
fdivrs
dec
inc
sahf
pop
adc
pusha
jnp
cmp
mov
xorb
jecxz
icebp
or
sbb
jo
cmp
add
or
push
cmp
aaa
push
mov
pop
sub
out
pusha
jnp
loope
or
push
dec
nop
cmpsb
pop
inc
push
push
bound
jb
cmpl
sbb
mov
daa
inc
dec
in
mov
or
or
outsb
cmp
fwait
loopne
pop
xor
imul
movsl
movsl
sahf
mov
add
test
cld
lcall
sbb
push
jle
push
icebp
pop
ficoms
popa
cmp
in
in
and
das
sub
add
lret
pop
or
cltd
inc
mov
cltd
str
adc
dec
mov
or
lcall
sub
sub
bound
lock
mov
sbb
jb
lcall
jp
enter
and
inc
and
jo
sub
xchg
push
insl
adc
sar
popa
dec
inc
push
push
xor
mov
jle
jecxz
pop
sbb
subb
jno
and
das
jge
mov
int3
xchg
and
push
lods
push
lcall
jl,pn
adc
aaa
or
xchg
pushf
int
in
or
jmp
mov
fildll
stos
adc
xchg
stos
cmp
push
lret
aas
jnp
dec
stc
xor
loop
and
jmp
add
sbb
out
pop
sbb
clc
rorl
jge
cmp
loope
mov
fists
cld
roll
push
sti
sbb
mov
xor
sbb
ljmp
lods
sahf
mov
dec
jbe
stos
mov
das
ljmp
lret
fdivs
mov
or
inc
loop
mov
jecxz
bound
and
fdiv
in
mov
jge
push
mov
lcall
push
add
xchg
mov
ret
data16
push
scas
arpl
lret
add
mov
mov
cmpsl
test
mov
or
scas
jb
ret
int3
dec
mov
pop
roll
sbb
std
push
mov
dec
movsl
sub
mov
in
je
dec
sub
inc
jle
out
lock
loopne
or
mov
sti
test
cwtl
mov
lret
cs
pop
shrl
scas
jb
and
push
je
dec
mov
call
push
clc
test
or
pusha
mov
adc
movsl
dec
add
ret
lcall
adc
pushl
xlat
dec
repz
aam
xchg
dec
in
sub
shl
bound
pushf
loope
aaa
andl
imul
xchg
fistl
stc
test
cmp
push
jp
pop
sbb
dec
rsqrtps
sbb
mov
fwait
xor
bound
and
aad
insb
and
push
and
out
scas
imul
jle
mull
sbb
mulb
lea
popf
pop
fcompl
xchg
fimull
scas
mov
sub
out
mov
ds
test
movb
fwait
dec
adc
mov
or
bound
pop
mov
pusha
cwtl
aam
enter
lret
and
inc
movsl
mov
sub
inc
hlt
imul
sub
xchg
mov
shlb
pusha
push
xchg
leave
fldcw
rclb
lcall
lds
push
jle
pop
fisubl
xchg
lcall
ret
xchg
and
pop
mov
test
jg
test
pop
test
insl
rcll
fldcw
cmpl
push
in
clc
mov
js
imul
jecxz
in
ljmp
movb
stos
orb
sbb
xchg
push
mov
ljmp
addr16
pop
mov
pop
out
daa
or
mov
int3
test
popf
dec
push
push
mov
cmp
jp
dec
adc
and
push
dec
addr16
xor
add
dec
test
add
nop
jmp
test
mov
mov
pop
cmc
aad
dec
int
and
hlt
mov
pmovmskb
push
iret
sub
and
aad
cli
pop
jnp
sahf
cmp
sub
popl
and
orb
test
arpl
pop
idivl
mov
ljmp
cmp
push
ja
adc
xchg
lods
sbb
mov
mov
fnstsw
sub
out
into
mov
inc
push
pop
sahf
lahf
mov
sarb
dec
push
jecxz
cmpsb
jge
out
movsb
xor
xchg
cmp
mov
int
mov
cmp
imul
mov
add
adcl
xchg
jns
pop
adc
dec
push
call
xchg
dec
ljmp
mov
arpl
jb
andb
pusha
mov
sub
jp
mov
cmp
cmpsb
jbe
ret
add
nop
into
ret
inc
cmp
jle
scas
xchg
sub
push
out
add
and
xchg
sub
pushf
sti
inc
add
stos
push
ja
les
bound
mov
mov
cmpsb
cmp
sub
frstor
test
aad
xor
mov
cs
fdiv
sbb
mov
cltd
pushf
shlb
mov
test
xchg
or
out
mov
mov
jecxz
sbb
in
scas
adc
mov
mov
mulb
loopne
sub
outsb
and
cmp
add
stc
sahf
xor
jle
pop
stc
xchg
subb
add
push
mov
mov
push
cmpsb
loope
cmp
je
jae
pop
mov
mov
sbb
cmpsl
dec
cmp
pop
mov
cld
scas
sub
sub
jg
xchg
mov
mov
sub
sbb
in
out
je
scas
scas
lods
xchg
ret
je
jo
icebp
mov
and
bound
dec
mov
cli
mov
cwtl
and
mov
dec
push
jne
jne
stc
fistpl
mov
lea
sub
hlt
xchg
push
stos
dec
add
aam
cmp
xchg
jnp
loop
sub
sbbb
jae
fadd
scas
les
and
push
mov
insl
add
imul
les
out
jns
js
jo
adc
lea
cmp
subb
cli
jo
adc
mov
mov
push
push
cmpsb
out
xchg
jno
mov
lods
xchg
jmp
aas
and
js
sbb
imulb
lret
stos
sbb
arpl
and
jae
sahf
mov
lock
repz
jl
mov
push
jmp
mov
xchg
push
pop
and
mov
out
out
imul
dec
and
arpl
orl
lret
sbb
adc
adc
fistpll
cld
xlat
sub
cld
in
js
lods
pop
xchg
inc
xchg
or
lock
xchg
and
aaa
lock
movsb
push
xchg
add
or
sbb
gs
xchg
js
mov
push
rcrb
icebp
and
xor
mul
data16
sarl
xchg
or
ss
gs
leave
cmp
loope
shll
and
aas
scas
jecxz
sub
clc
in
leave
xor
scas
insl
or
adc
outsb
push
push
lret
xchg
fstpt
xchg
and
jnp
popf
lret
out
mov
fmul
cs
sub
clc
outsl
sbb
in
jo
idivb
mov
pop
lock
fs
jae
fwait
mov
stos
and
int
repz
int
insb
sbb
mov
push
mov
add
test
dec
loopne
mov
jns
cmc
push
and
push
lods
xchg
in
mov
mov
int
in
and
lds
sub
xor
mov
shll
out
mov
push
popfw
or
repz
sbbl
es
jno
cmpsl
jo
sbb
pop
jbe
nop
lods
shll
and
sbbl
mov
in
mov
or
aad
ljmp
jo
fs
fstpt
cltd
call
bound
add
sbb
dec
inc
pop
in
shll
mov
insb
mov
lahf
subl
pop
add
sub
mov
dec
loope
cmp
stc
lock
sub
lock
push
jo
clc
pop
add
or
push
inc
scas
xor
lcall
cmpsb
xchg
mov
pop
rol
pop
pop
add
addb
stos
push
cmp
addl
bound
les
inc
cmc
ljmp
mov
cwtl
jne
popf
in
out
jle
cmp
jbe
jae
out
aad
sub
adc
mov
rcrb
pushf
jg
cmp
insb
lods
in
sbbl
test
adc
push
mov
arpl
lods
jo
inc
pop
add
negb
mov
fstpl
dec
jns
or
push
rorl
mov
ss
or
adc
pusha
shll
in
ds
test
xor
es
mov
cmp
sahf
sbb
out
lock
movsl
aas
cltd
sbb
mov
add
pusha
jno
ja
aaa
pop
push
mov
sub
or
ror
ret
ss
leave
xor
movsb
add
lea
int3
cmp
sti
pop
jle
imulb
mov
push
xlat
in
lret
int3
icebp
inc
jge
mov
cmp
out
jp
loope
adc
aas
mov
xchg
enter
out
addr16
scas
dec
xorb
cwtl
rcl
arpl
jp
shl
outsb
stc
fs
pushf
sti
and
scas
dec
bound
push
out
lret
xchg
pushl
ret
mov
jmp
repz
dec
lret
and
loopne
mov
loope
adc
data16
stos
in
nop
fistpll
hlt
cmpsb
xor
pop
sub
cld
inc
scas
xchg
push
bnd
push
stos
cli
dec
mov
add
ror
arpl
jbe
push
and
aas
push
mov
sbb
cwtl
enter
out
ljmp
dec
into
lods
sbb
fidivl
sbb
mov
mov
stos
loopne
mov
cmp
pop
xor
pushf
cmp
dec
out
loope
pop
sub
in
cmp
gs
or
cmpsl
inc
push
cld
sti
stc
add
mov
andl
and
lock
lret
lcall
cmc
push
les
lods
jnp
je
cwtl
lds
movups
or
dec
pop
ljmp
outsl
sub
mov
xchg
lods
fisubs
mov
enter
outsb
inc
iret
inc
xor
and
adc
cmp
push
and
inc
adc
pop
mov
iret
mov
addb
dec
dec
adc
test
mov
test
fwait
or
aam
bound
adc
add
add
and
das
inc
push
push
sub
mov
imul
mov
dec
lahf
test
ret
mov
jmp
jnp
and
mov
aas
sub
mov
jbe
inc
cmp
jb
imulb
jge
pusha
and
pop
fwait
dec
fstpl
stos
jg
mov
jmp
fcos
rcrl
and
push
xchg
sbb
sub
mov
popf
sbbl
mov
les
mov
push
fs
xor
andl
sub
sub
dec
jg
lods
xor
adc
iret
lret
push
push
scas
inc
xor
inc
loope
adc
repnz
xchg
jge
cmp
and
outsb
rol
fwait
cmpb
adc
pop
repnz
inc
dec
cmova
fsubp
push
movsb
push
sbb
mov
fisubrl
mov
mov
fstpl
fst
sub
je
sti
in
ljmp
jno
je
add
xor
aam
or
xlat
mov
and
in
mov
daa
xchg
lahf
add
xor
jo
out
in
mov
cmc
xor
repz
or
mov
fisubs
and
and
xorl
iret
xchg
lods
xor
inc
pop
lods
inc
in
mov
insl
push
jmp
icebp
inc
ret
out
cld
xor
mov
ss
fs
clc
cltd
fdivrs
sbb
daa
mov
cmc
and
mov
adc
daa
mov
add
mov
mov
inc
dec
ss
imul
or
sbb
add
imul
popf
das
push
fisttpll
xor
pop
data16
out
mov
shll
mov
addl
or
xchg
loope
out
pop
sub
inc
iret
iret
xchg
cmpb
repz
out
repz
jle
mov
mov
mov
dec
icebp
aas
sbb
pop
dec
in
push
mov
adc
pop
push
jae
notl
lahf
insb
pop
scas
fwait
rclb
xchg
icebp
xor
jno
cmp
push
les
out
rorl
mov
bound
mov
adc
cwtl
inc
in
sub
iret
xchg
pop
movsb
cmp
lea
jmp
daa
jmp
insl
or
imul
lea
jmp
mov
gs
in
add
or
dec
cmp
mov
add
adc
cltd
cmp
test
cld
xor
dec
and
or
mov
mov
mov
xchg
idivb
lcall
call
es
fnsave
or
outsl
loop
cmpsl
out
mov
call
xor
push
sub
fldl
mov
out
ljmp
fadd
outsl
insb
in
and
stc
arpl
ret
rorb
in
add
xor
push
push
push
lods
hlt
sbb
out
add
daa
repz
shr
cltd
ret
mov
inc
inc
cmp
insl
data16
xor
push
push
pop
xor
cmp
pop
mov
cmp
xchg
xor
int3
icebp
pop
dec
out
leave
jo
int3
xor
pop
data16
mov
push
enter
mov
lahf
cmp
push
mov
xchg
xchg
or
xchg
xor
out
push
imul
test
hlt
cmpsb
mov
into
gs
sbb
xlat
jl
mov
mov
decb
arpl
fimuls
sar
cld
and
shr
or
push
adc
cmp
ficompl
fistl
test
xchg
enter
movsb
dec
ret
jle
pop
mov
mov
dec
icebp
xchg
iret
xor
lea
mov
mov
xor
ds
mov
dec
fidivs
jae
or
imul
and
in
fiaddl
mov
rclb
lods
test
jne,pn
push
sub
imul
xor
adc
lock
lds
gs
jge
fisttps
sub
mov
cmp
clc
ret
pop
jns
xchg
insb
lods
sbb
addr16
lds
jb
adc
sub
aam
popa
push
in
ret
push
into
sti
mov
clc
ds
push
lea
adc
cli
pop
xor
pop
sbb
mov
gs
adc
and
sbb
lcall
xchg
movsb
or
movsl
dec
ljmp
xor
orl
push
enter
mov
fcomps
push
fs
dec
aas
inc
insb
jge
mov
xlat
mov
xor
jl
loope
aaa
test
add
icebp
ss
pop
mov
int3
xor
mov
cmp
aam
aaa
push
cwtl
es
mov
push
sti
push
nop
imul
scas
mov
dec
inc
cmp
test
aam
cmp
adcb
adc
fsubrp
insb
mov
sbb
xchg
add
pop
cmp
sub
cmp
xchg
fwait
fs
scas
stos
daa
stc
pusha
int3
lds
add
mov
add
or
pop
mov
pop
and
popa
nop
push
jmp
xor
push
push
push
out
xchg
pusha
inc
iret
popf
stc
sahf
and
push
dec
das
mov
mov
out
jge
les
dec
lods
push
sub
pop
and
push
pop
mov
push
xchg
pop
pop
cmp
push
fcomps
jmp
and
jns
aam
fdivrs
insl
cmp
mov
divl
cmp
cmpsl
sarb
push
test
add
cs
mov
sub
inc
std
dec
mov
pusha
stos
lahf
pusha
loopne
jecxz
jo
lds
cmp
aam
cmp
in
popf
sbb
scas
mov
fwait
mov
inc
dec
cmp
xor
shl
enter
frstor
loop
jno
test
aas
jo
imul
mov
mov
int
imul
mov
stos
xor
cli
lock
sbb
popf
fidivrl
cmpsl
arpl
test
mov
out
cltd
les
xor
xlat
nop
mov
pop
in
or
imul
push
add
xchg
hlt
and
outsb
mov
or
test
sbb
scas
xchg
notb
add
lds
bound
inc
into
jmp
add
pop
sbb
rcl
sbb
xchg
test
mov
pop
sti
out
scas
add
iret
mov
add
push
aad
xor
or
mov
sub
sbb
movsl
push
pop
inc
lods
fadds
pop
mov
xchg
jnp
inc
mov
lods
lds
lock
mov
or
pop
ja
sbb
push
pop
fildll
or
push
add
push
mov
mov
daa
fbstp
mov
aam
orb
xchg
pop
icebp
fwait
xchg
popf
mov
xor
inc
xor
dec
push
lahf
stos
sar
sti
sahf
cwtl
and
adc
stc
lcall
push
inc
mov
add
jnp
lds
cld
xor
pop
incl
lods
into
push
jnp
mov
pop
loopne
inc
nop
flds
mov
jg
pop
je
inc
sub
test
xor
xorb
cmp
in
addr16
idivb
pop
dec
pusha
cmp
popa
and
pop
fsubs
xor
jo
das
daa
cmp
add
cmp
cmp
sub
std
stc
lock
push
popf
imul
iret
push
jmp
xor
dec
xchg
repz
pop
into
leave
std
jl
test
xchg
mov
pop
nop
adc
mov
pusha
push
adc
bound
stc
pop
lds
incb
jl
and
ds
sarb
and
cli
out
mov
aaa
lds
in
mov
adc
dec
stos
mov
add
or
lds
or
enter
insl
mov
sbb
jns
sahf
mov
mov
out
jge
mov
sub
lahf
lcall
adc
xor
mov
push
aam
xchg
outsl
add
sbb
cmp
mov
insb
aaa
fcoms
fistpll
dec
sbb
andb
jnp
sti
xchg
test
repz
call
clc
mov
sbb
outsl
mov
cmp
xchg
sub
imull
mov
popf
fmuls
xchg
ds
mov
cmp
dec
repz
push
xor
push
shll
ss
xchg
push
in
sbb
sub
jge
mov
cmc
dec
inc
add
mov
xlat
inc
and
imul
hlt
shlb
call
xlat
jle
mov
mov
pop
add
add
test
in
and
jle
and
out
sysenter
jnp
inc
and
aad
mov
add
loopne
add
mov
clc
cmc
into
in
jb
jmp
shlb
xor
imul
shrl
sbb
enter
jns
cmpsl
mov
jecxz
rcrl
hlt
insb
pop
out
adc
or
pop
bound
inc
les
testb
sbb
jmp
xlat
dec
pop
dec
arpl
push
dec
rcrb
mov
adc
sahf
jb
data16
ds
or
paddb
scas
dec
lods
pop
in
pop
call
adc
mov
aas
mov
sub
popf
push
in
mov
lcall
call
pop
mov
inc
cmc
xor
add
imul
inc
cmp
push
and
fisubrl
adc
leave
loope
jg
jb
add
cmp
mov
cmpsl
arpl
mov
movsl
add
sar
sahf
mov
jnp
lcall
mov
pop
and
in
mov
adc
aas
nop
cltd
sbb
and
add
test
stc
cmpsl
lea
mov
sub
in
dec
push
or
aas
sahf
lret
cmp
push
daa
sbb
inc
xchg
mov
scas
cltd
xchg
out
insl
sarb
fisttps
dec
popf
stos
cmc
cs
cmp
orl
mov
xchg
fcompl
shl
push
mov
push
sub
sbb
xor
adc
cs
pop
or
and
fidivrs
xchg
outsl
sub
test
in
xchg
ret
lods
xlat
cld
popf
fsubrp
loop
ds
jmp
pop
clc
mov
jecxz
out
gs
sub
gs
ds
jae
insl
xchg
adc
jb
decb
jb
pop
std
es
cmp
nop
js
nop
push
xor
mov
jle
and
add
pop
je
jge
pop
fnstsw
mov
cmp
mov
mov
fldt
inc
cmpb
jmp
xchg
mov
outsb
cmpl
adc
mov
xchg
sbb
addr16
cmp
insl
ret
or
pop
add
xchg
pop
pop
push
mov
lcall
cmp
mov
outsl
push
jne
and
sub
xchg
push
fdivp
mov
es
cmp
xchg
cld
mov
mov
lea
jb
pushf
adc
sbb
xor
push
jge
jg
lock
aas
sub
sub
shr
es
pop
xchg
dec
mov
fwait
sbb
roll
insl
xor
pushf
dec
xchg
sub
cltd
mov
lods
lds
idiv
mov
ds
repnz
jge
js
xchg
mov
xor
hlt
ljmp
neg
movsb
mov
sub
bnd
sbb
cmp
cmp
fnstcw
cmp
movsb
jb
ret
mov
into
jb
cmpsb
jl
cmp
rorl
jb
stos
incl
mov
and
xchg
lods
ss
xor
clc
fwait
lods
jns
in
xlat
dec
cmp
push
lods
pop
adc
xchg
cmp
mov
imul
sbb
jo
pop
fimull
jmp
pop
sub
add
mov
test
push
push
jno
dec
xchg
jmp
lahf
jg
fcomps
pop
aam
ret
push
loopne,pn
subl
xchg
rorl
cmc
popf
das
dec
fs
insb
imul
adc
add
jns
inc
std
enter
call
xchg
sub
popa
sub
daa
call
repz
push
enter
ret
push
lcall
test
sub
jae
dec
test
xchg
cmp
dec
shlb
dec
mov
and
push
push
insl
jb
mov
xlat
add
int
arpl
add
cmc
loop
arpl
notb
adc
jge
lret
mov
mov
aam
push
pop
xorb
lds
jecxz
mov
xchg
jne
add
dec
test
mov
pop
arpl
arpl
pop
or
cmpsb
mov
sbb
out
pop
push
cmp
je
int3
dec
aam
aam
push
inc
jmp
lds
push
inc
cmpsb
pop
push
jecxz
or
lods
fcompl
nop
sbb
test
adc
mov
lds
jle
int
jb
scas
out
cmp
stos
cmp
shll
fnstsw
mov
mov
sub
inc
stc
sub
adc
cmp
push
imul
push
sbb
shl
stc
push
sub
cmp
pushl
daa
data16
jl
pop
dec
mov
jne
je
push
fidivs
sub
push
mov
xorb
push
and
popa
movsl
jbe,pt
data16
push
ja
jns
dec
cmp
push
cmp
mov
push
jl
jb
aaa
and
dec
mov
setns
xor
xchg
aad
jecxz
jae
xchg
mov
push
scas
sbb
out
adc
adc
imul
push
mov
orl
pop
pop
lahf
ljmp
nop
aaa
and
or
lahf
call
cmpsl
into
sub
in
loopne
movb
arpl
cmpsb
adc
in
push
push
adc
inc
xor
sbb
ret
fbstp
inc
xchg
dec
sbb
jge
notl
xor
mov
test
iret
push
pop
pusha
adc
jae
cmp
mov
jbe
loop
push
push
mov
dec
mov
dec
je
lcall
shl
insl
jae
scas
push
xor
arpl
fiadds
inc
stos
testl
pushf
mov
mov
xchg
or
bound
sti
lcall
xchg
pop
lret
cwtl
pusha
xlat
orb
mov
arpl
ja
push
movsl
cltd
xchg
je
fxch
ja
inc
adcb
add
mov
aaa
mov
jmp
sbb
mov
inc
dec
or
jb
popa
ret
mov
call
iret
movsb
jle
ja
mov
aam
out
sub
mov
push
xchg
or
lock
faddl
in
out
adc
shrb
mov
or
shlb
lahf
dec
in
sahf
or
orb
inc
ss
jno
xchg
call
aas
cltd
pop
int3
sub
hlt
xchg
jae
adc
jmp
sub
shrl
jl
aas
arpl
fsubs
ss
push
lock
iret
inc
push
lods
mov
dec
lods
movsl
push
push
xchg
sahf
push
mov
sbb
ficomps
adc
jmp
in
clc
jp
lods
mov
enter
sbb
std
les
inc
jge
jae
mov
jge
mov
enter
test
xor
pop
cld
arpl
push
lods
mov
daa
pusha
outsb
adc
arpl
nop
cld
mov
add
jl
fwait
jp
iret
mov
jp
or
inc
cmpsb
insl
dec
sti
sbbl
cwtl
mov
stos
mov
mov
inc
jle
sub
data16
mov
mov
and
mov
negl
outsb
aaa
add
ret
repnz
movsl
testl
add
imul
mov
lock
rcrb
shrl
je
mov
movsb
sbb
jp
jnp
or
pop
cwtl
scas
outsl
popf
rcrb
push
or
xlat
mov
pop
push
fwait
jo
rcrb
jns
jge
pushf
test
shr
cmp
xor
xchg
push
dec
add
sbb
aad
dec
push
cli
and
inc
and
or
pop
jnp
xchg
push
insw
adc
sbb
add
mov
pop
jb
lock
inc
shlb
fs
decb
fcoms
inc
stos
jnp
pop
clc
mov
jae
mov
imul
lods
fdivl
fldenv
pop
test
std
xchg
pop
inc
fsubr
and
push
xchg
cs
cmp
push
pop
lods
add
mov
rorb
cmpl
data16
imul
or
xchg
iret
mov
in
mov
leave
pop
mov
addb
pop
mov
idivb
xchg
insl
inc
xor
sbb
jge
cld
sub
xor
xchg
into
cmpsl
and
pop
add
dec
mov
jbe
mov
out
cmp
sti
testb
mov
ss
insb
lods
mov
or
ja
lock
or
rorb
jnp
inc
and
ss
gs
leave
loop
aad
sbb
in
sub
sbb
std
out
xchg
sub
out
add
daa
sbb
mov
pop
jl
movb
fistpl
iret
or
sbbb
mov
in
call
fcom
aad
and
mov
mov
pop
lods
and
or
mov
repnz
mov
adc
jnp
mov
cmpsl
push
pop
nop
push
pusha
test
data16
pop
les
xor
dec
movsb
pop
sub
out
int
sub
mov
negl
sub
jmp
jge
mov
inc
push
stos
or
mov
ret
icebp
cmp
jecxz
stc
mov
mov
jmp
mov
mov
sbb
push
dec
sub
inc
adc
imul
roll
inc
insb
sbb
testb
inc
sbb
push
mov
lcall
inc
stos
mov
jp
adc
clc
int
sub
push
adc
push
fs
pop
movsb
add
inc
scas
or
jecxz
test
jo
daa
popa
cmp
iret
shl
icebp
add
sar
pushf
sbb
test
cmp
push
push
mov
inc
mov
mov
jnp
jb
sarb
ficoms
scas
cmp
jnp
jns
xchg
cmp
stc
in
data16
lret
dec
repnz
aaa
lahf
inc
test
jmp
and
jbe
adc
sub
out
or
daa
xchg
in
inc
mov
bound
inc
sbb
xchg
std
test
mov
mov
aam
push
imul
sbb
outsb
mov
and
in
movsl
mov
icebp
ficoms
mov
dec
test
test
cld
je
mov
rorb
and
cmc
jae
aam
ficompl
icebp
ret
mov
les
push
ficoms
and
inc
jle
in
mov
ret
sbb
and
movb
clc
cmp
dec
std
out
fnstcw
lea
push
mov
dec
dec
mov
outsb
pop
pop
inc
popa
test
enter
shr
ja
subb
int
push
dec
mov
jmp
dec
sub
push
jb
push
mov
adc
mov
bswap
shlb
mov
stos
and
leave
sbb
cmpsl
or
push
jne
push
sub
imul
xor
xor
lcall
div
add
and
mov
aam
push
scas
mul
add
xchg
popa
test
adc
cmpb
dec
xchg
add
icebp
push
cmc
stos
xchg
xchg
jb
aas
xor
into
mov
and
mov
outsb
dec
xor
lret
ds
pop
lock
int3
add
xor
sub
repz
or
pop
mov
loop
sahf
movsl
sub
mov
pop
pop
adc
xchg
inc
nop
sbb
les
sbbb
inc
in
push
push
jp
int
fsubl
outsb
les
push
cmp
xor
sbb
or
or
hlt
mov
ret
sbbb
testl
pop
xor
mov
add
stos
stc
sub
sbb
mov
push
cmp
inc
rcrb
mov
xchg
push
shrb
xor
or
std
nopl
ds
jnp
xor
sub
jecxz
push
fnstcw
fnop
repz
push
cmpsb
gs
adc
rcll
cwtl
mov
daa
mov
cmc
in
adc
cmp
push
clc
lock
jl
mov
cmp
sarb
sbb
sbb
imul
js
mov
insb
hlt
pop
addr16
loope
sbb
lcall
sbb
sub
pusha
call
ljmp
incb
inc
jge
rorb
xchg
pop
xchg
dec
adc
bound
pop
clc
lcall
insl
cmp
pop
sarb
mov
in
or
cmpsl
clc
push
add
jg
cmp
lahf
iret
jecxz
xchg
add
aad
sub
incl
fs
xchg
scas
lods
mov
jl
xorb
mov
push
push
adc
sub
sub
xor
jl
lret
dec
and
dec
aas
mov
mov
int
nop
leave
dec
push
sbb
outsl
mov
dec
int
fmuls
lea
xor
stos
in
pop
pusha
fucomi
sbb
test
sti
in
lods
enter
sub
fistpl
lock
sub
cmp
lock
push
jne
jmp
and
cmpsb
gs
mov
push
mov
push
es
cmp
mov
and
test
mov
xchg
js
int
pop
out
push
mov
mov
in
jl
shrb
int3
mov
pop
cmp
mov
or
clc
push
out
jge
mov
xor
mov
dec
xor
sahf
nop
xchg
aam
aas
inc
je
int3
xchg
outsb
pop
leave
mov
pop
add
enter
loop
insb
mov
or
dec
es
xor
addr16
xchg
aam
pop
ds
xor
mov
shll
xor
mov
dec
sub
dec
dec
cli
stos
daa
sbb
lods
inc
adc
or
mov
sbb
lcall
adc
xor
push
hlt
in
xlat
pusha
xchg
int3
nop
mov
fldenv
xlat
and
pop
pop
lcall
xchg
mov
pop
test
insl
je
jge
add
mov
fiadds
lods
mov
sbb
sbb
add
icebp
test
lea
fwait
jp
mov
insl
xor
lret
jecxz
add
ja
add
lds
pusha
lods
adc
iret
mov
sarb
push
dec
jl
mov
xor
or
xchg
int
push
shll
inc
dec
mov
out
cs
pop
push
sub
stc
call
and
out
adcb
mov
test
sbb
scas
test
imul
sub
sbb
xchg
push
rcrb
xor
insl
nop
cwtl
ja
iret
xchg
adc
gs
cld
insb
adc
imul
int3
jmp
scas
int
push
cmp
pop
in
dec
jge
xor
ss
jmp
ja
mov
push
movb
mov
sub
sbb
sahf
push
pop
fistl
xchg
je
pop
xchg
add
fiaddl
ror
inc
int
mov
dec
leave
scas
orl
sub
inc
cli
roll
test
mov
inc
jmp
vpsllq
lret
cmp
or
repz
jns
les
and
lods
out
mov
movsl
xchg
dec
movsb
shlb
xchg
adc
fs
dec
fucom
mov
sbb
push
push
push
sbb
mov
pop
clc
adcl
aam
cwtl
cmp
adc
pop
dec
insb
xor
lret
js
inc
incb
add
mov
mov
or
xchg
sarl
je
sbb
js
sbb
lea
repnz
mov
cltd
and
adc
inc
inc
push
iret
lock
stc
xor
gs
pop
ffree
or
mov
xor
repz
xchg
pushf
jne
mov
sbb
nop
or
clts
out
insl
push
cmp
mov
fstps
mov
clc
xor
ljmp
ds
cmp
or
lods
inc
add
movsl
hlt
xor
aaa
in
mov
loopne
mul
lods
sbb
shlb
outsl
lods
push
movsb
jbe
ljmp
mov
outsb
idivb
sbb
pop
leave
dec
mov
scas
adc
jno
pusha
jns
add
pushf
mov
mov
add
sbb
lcall
lahf
xchg
push
jbe
and
popa
jb
insl
or
cmpsl
fsubl
mov
pop
iret
jno
mov
dec
mov
and
add
mov
sarb
lea
imul
push
mov
mov
mov
pop
fwait
subb
pusha
xchg
jp
test
mov
jae
or
dec
outsl
adc
jecxz
push
inc
arpl
xor
lea
mov
ret
insb
inc
jb
das
xlat
push
pop
mov
mov
ds
mov
sub
push
mov
jo
adc
les
fadd
pop
out
sbb
sbbl
sub
sbb
add
aas
or
or
stos
mov
cli
ja
pop
popa
bound
mov
sub
mov
test
pop
imul
loop
add
mov
test
scas
lods
push
das
daa
and
loop,pt
xor
sub
mov
inc
insl
ja
xchg
mov
aaa
es
clc
jg
cmp
jg
loope
das
idivb
fwait
repz
jg
xchg
imul
jl
xor
inc
shrb
xor
jp
lea
jge
repz
xchg
pushf
sbb
repz
mov
out
jg
pop
and
fisubrl
xor
sti
je
movsb
jnp
bnd
push
push
or
add
dec
inc
mov
std
movsl
les
xchg
leave
cmp
in
stos
pop
jnp
cwtl
push
add
emms
loopne
add
scas
test
push
inc
aam
push
sbb
xor
mov
mov
ret
fildll
pop
mov
sub
not
jmp
daa
push
enter
push
pop
enter
mov
dec
sbb
xchg
mov
push
call
sahf
stc
imul
into
jecxz
dec
jb
xchg
cmc
pop
sbb
mulb
test
mov
fsubrl
fcomps
orl
incb
cmc
fs
mov
cld
cs
and
rcll
push
jge
nop
jg
pushf
test
xlat
sahf
sub
leave
xchg
lcall
or
pop
pop
sbb
and
imul
xchg
sbb
and
cmp
out
jae
dec
pop
add
mov
test
dec
xchg
dec
sahf
adc
or
add
test
imull
mov
dec
cs
addr16
int3
adc
loopne
xchg
cld
add
sti
or
test
adc
pusha
jge
arpl
aad
nop
or
daa
sub
pushw
xorl
jmp
testb
sbb
lahf
aad
leave
xchg
mov
mov
pop
loope
les
cmp
cld
xchg
ss
scas
stc
pop
jg
enter
in
fiadds
imul
xor
daa
pop
mov
enter
cmp
xor
lock
das
jmp
insl
push
xor
push
sub
xor
pop
xchg
add
jae
leave
fsubp
cwtl
js
lcall
or
cmc
lock
dec
dec
adc
cltd
mov
out
andl
jl
out
jns
or
push
xchg
mov
repnz
imul
imul
stc
jnp
cmpsl
mov
loop
clc
ret
xor
lods
sub
mov
and
int
mov
dec
jp
sbb
inc
mov
and
fstl
pop
dec
adc
cld
lret
insl
mov
mov
mov
push
fs
sti
dec
jae
mov
int
or
mov
into
mov
stos
ret
adc
in
push
lods
cmp
enter
je
sbb
jmp
cli
jnp
xchg
test
or
push
sub
pop
stc
stc
mov
inc
out
cmp
mov
and
and
or
les
inc
xor
mov
or
push
or
insl
lock
cs
in
sub
cs
icebp
xchg
pushf
push
and
lret
pushf
out
cmp
cmp
mov
dec
add
lds
jne
out
sbb
imul
lahf
scas
cmpsl
shl
lret
push
imul
cmp
roll
fcomps
add
or
cmpsb
lock
and
sub
dec
sub
fcompl
dec
in
xchg
or
ja
pop
mov
lret
es
adc
lcall
gs
xchg
imul
dec
pusha
mov
and
and
xor
xchg
shrl
pop
mov
popa
addr16
adc
lods
shrb
dec
outsl
in
mov
jbe
cmp
enter
mov
or
pop
hlt
pusha
xlat
int
cli
sub
and
xchg
adc
mov
out
jge
and
xor
movsl
push
stos
lods
in
clc
or
xor
subl
and
in
jb
je
popf
xchg
fbld
arpl
popa
test
addr16
cmp
shr
movb
mov
xorb
bound
in
sub
in
lahf
fs
and
ficoms
sbb
insl
jg
cli
in
mov
push
push
inc
mov
into
scas
insl
loope
inc
test
fldt
cmpsb
lcall
or
fidivrl
addr16
push
sarl
push
cmovae
or
int3
adc
lods
push
pop
add
loopne
and
ss
test
push
movsl
repz
add
jle
mov
cmpsl
mov
ficoms
add
sub
imul
fs
pop
gs
or
dec
cmp
mov
sub
dec
outsl
push
jb
xchg
or
addb
stos
pop
push
std
out
lea
adc
xor
ret
popf
subl
cld
stc
lahf
jne
les
xchg
out
cs
sbb
out
std
lret
gs
pop
insb
and
or
inc
fiaddl
xchg
push
dec
jae
gs
or
inc
cld
sub
sub
mov
or
cltd
pop
std
adc
or
fistl
lret
out
push
rcl
lods
mov
adc
fiadds
pop
imul
out
cmpsb
cmpb
dec
sub
aas
cmpsb
aas
popa
js
cmpsb
hlt
lods
subl
hlt
je
stos
cmp
data16
mov
aas
ret
leave
cld
jne
cltd
mov
cmpsl
insl
mov
mov
sbb
or
imulb
add
sti
xorl
mov
movb
cmc
scas
aaa
adcb
icebp
call
dec
orb
push
loope
andb
pop
shlb
pop
call
xor
int
push
jge
pop
jbe
push
pop
mov
cwtl
xchg
jg
or
mov
xchg
push
out
push
xchg
xor
xlat
sub
cmp
movsl
sbb
ljmp
repz
xchg
mov
fidivs
mov
sbb
inc
pop
inc
xchg
stc
movsb
loop
push
icebp
mov
inc
mul
or
cmp
cli
subl
orl
imulb
std
mov
mov
pop
jo
mov
fisubl
inc
adc
lahf
pop
rcrb
adc
push
fcompl
out
pop
hlt
xchg
insl
scas
and
cwtl
xor
fiadds
ret
or
inc
push
push
sbb
stos
adc
cmp
shll
hlt
push
lret
sbb
cmp
mov
xchg
out
pop
pushf
xor
mov
xor
aaa
js
cmpsl
and
mov
sub
mov
pop
jb
adc
lods
adc
rcrl
aas
test
test
pop
inc
imul
jbe
fdivrs
cmpl
mov
cmpsl
lock
mov
lock
jb
dec
xor
mov
add
xchg
bound
cmp
in
push
lds
ja
mov
jnp
inc
xchg
loop
mov
adc
and
sbb
test
jle
pop
push
bound
aad
loope
cmpsb
jns
dec
xchg
mov
insl
and
pop
push
loop
xchg
in
repnz
mov
dec
push
movsl
scas
and
ret
call
leave
adc
inc
jg
mov
gs
outsl
pop
xchg
pop
fmuls
or
xchg
push
sub
jno
movsl
sbb
jge
cmp
outsb
stc
aas
sti
out
inc
jp
sbb
and
loope
jbe
dec
lods
aad
and
fnstcw
mov
icebp
jg
ljmp
mov
lret
push
sub
mov
cmp
xor
sub
or
ret
scas
xchg
fstps
fcom
fdivr
jmp
mulb
jmp
test
cli
pusha
out
xchg
inc
push
pop
bswap
je
mov
and
out
cli
mov
push
stc
insl
fs
sub
mov
gs
sub
mov
dec
sub
dec
jae
adc
mov
test
mov
jp
sub
jle
adc
inc
pop
jbe,pn
popa
lock
cmp
rorl
das
dec
rorl
shl
jl
mov
mov
jmp
movsl
sahf
and
loope
push
push
cltd
cmp
scas
ds
scas
dec
pop
xor
jge
inc
add
vpaddsw
jne
push
xlat
rorb
xchg
js
xchg
fbstp
loope
in
add
mov
sbb
lahf
repnz
cmp
jge
xchg
sbb
mov
roll
push
push
cmpsb
xor
mov
test
cmpsl
xchg
sub
push
into
outsl
out
mov
and
repnz
or
inc
sbb
pop
les
cmp
push
xor
mov
test
mov
jle
xchg
cmp
popf
pop
push
or
jo
aas
xor
xchg
icebp
xchg
scas
mov
push
nop
xchg
dec
into
xchg
imul
sub
stos
adc
aas
inc
out
cmpsl
enter
scas
fadd
push
data16
xchg
mov
stos
xor
cmp
enter
pop
es
test
lds
dec
imul
jbe
jae
and
push
push
sbb
sbb
hlt
xchg
sub
outsl
xor
pop
sbb
scas
sbb
scas
out
fsub
cmpsl
in
lods
mov
imul
pop
stos
daa
call
stos
dec
mov
rorl
test
jae
and
add
dec
cmp
jbe
nop
dec
inc
daa
xchg
mov
les
xor
adc
idivl
call
idivl
lods
daa
fisubs
mov
inc
mov
fchs
stos
add
adc
xor
lock
shlb
cmpsb
mov
xor
inc
push
xchg
lods
xor
imulb
mov
sarb
jnp
push
push
sub
jnp
loopne
addr16
xchg
out
jo
xor
dec
sbb
add
lds
pop
adc
fs
lret
mov
jne
dec
rclb
je
mov
jae
dec
fmull
or
mov
pop
stc
fs
scas
lret
jl
inc
popf
xchg
and
sti
loope
test
dec
inc
push
jl
loope
mov
mov
push
jg
pop
inc
or
sbb
xchg
shll
mov
in
push
mull
jae
lock
xchg
imul
jp
pavgb
pop
dec
jp
dec
add
lock
call
mov
aaa
movsl
adc
cwtl
in
fiadds
cmp
push
mov
jl
inc
jne
mov
mov
inc
inc
push
or
pop
jle
and
jp
test
adc
push
rcrl
mov
add
dec
cmp
push
xchg
mov
cmp
sbb
pop
data16
lds
addl
push
add
dec
sub
in
ret
repz
loope
aad
aaa
push
dec
icebp
xor
pop
push
dec
jmp
xor
mov
adc
dec
test
xchg
sub
in
or
les
loop
ja,pt
cli
inc
and
cmp
inc
std
sbb
xchg
addr16
orb
jecxz
out
data16
mov
lahf
es
cld
adcb
lret
loop
dec
outsb
jl
fmuls
testl
xor
sbb
outsl
mov
mov
fnstsw
push
xchg
jge
cmp
stos
sarl
sbb
mov
mov
mov
int3
outsl
xor
lcall
test
sub
rorl
mov
in
sbb
pop
lahf
jecxz
sbb
and
dec
daa
push
push
inc
ret
lods
dec
and
mov
mov
xchg
insb
stos
gs
fsubl
fsubrp
leave
xor
popf
jns
rorl
mov
fs
test
movsl
hlt
into
jg
and
fwait
cld
sbb
arpl
dec
dec
mov
pop
jns
push
fs
ss
out
fadd
aas
outsl
xchg
cld
pushf
cltd
out
fsubrp
jmp
xor
jge
jge
repnz
mov
cmpsl
lret
les
iret
dec
stc
fsts
cltd
add
popf
cld
sbb
xchg
fs
insl
in
mov
cmpsb
sub
jmp
jg
lahf
dec
jl
call
cmp
inc
mov
mov
xchg
popf
sbb
mov
test
loop
bound
in
imul
xchg
js,pn
sti
mov
xlat
popf
jle
fcomps
test
pop
push
popf
int
iret
das
and
mov
jl
xchg
insb
inc
push
pop
xchg
sub
dec
sbb
push
xchg
sbb
add
inc
pusha
ret
filds
lahf
xor
xchg
sbbl
iret
movsl
dec
sub
mov
pop
rorb
xchg
jl
into
mov
sarb
xchg
fldt
pop
jmp
sbb
mov
pushf
xchg
xchg
and
lahf
outsl
inc
pop
xor
sbb
stc
fnstenv
imul
and
push
bound
sbb
inc
lods
push
lahf
adc
jo
pushf
xor
pushf
lret
fisttps
mov
pop
dec
xor
or
or
mov
data16
int
sahf
outsb
and
mov
test
mov
daa
jmp
mov
sarl
jge
cli
pop
mov
mov
daa
pop
dec
into
xchg
sbb
cwtl
cmc
in
sar
xor
fcmovnb
dec
add
pop
mov
push
or
jae
sub
adc
or
mov
decb
int3
aad
stos
mov
mov
cmc
jl
mov
dec
out
aas
arpl
add
dec
xchg
mov
in
scas
jg
aas
dec
call
sub
push
jge
sbb
mov
mov
mov
jge
mov
gs
push
sub
je
inc
inc
mov
add
sbb
push
mov
mov
idivb
cmp
mov
pop
xchg
lcall
add
out
mov
mov
dec
push
stos
mov
push
or
dec
std
jns
sbb
gs
push
fidivrs
pop
mov
fdivs
repnz
test
loop
rcrl
stc
cmpsb
ficomps
mulb
add
stos
dec
push
xor
clc
mov
fdivrs
scas
mov
jg
roll
hlt
test
hlt
add
push
aad
ret
dec
test
push
and
aas
cltd
out
pop
cmp
sub
push
loope
ss
push
stos
pop
pusha
xor
ja
shll
fnsave
pop
inc
sbb
cmp
mov
adc
xor
adc
and
js
jo
dec
sub
push
in
mov
jmp
cmp
addb
outsb
in
pop
loop
xchg
push
lret
sub
push
lret
sub
mov
insb
scas
sub
bound
fwait
jecxz
cli
pop
jo
xor
and
mov
fcomps
imull
or
jmp
ficoms
adc
push
test
sub
stos
addr16
jmp
aas
cmp
xchg
mov
mov
sti
fldcw
es
mov
or
pop
imulb
lea
mov
pop
in
cmp
push
fcomip
dec
mov
xchg
cmp
xchg
test
lahf
jae
mov
pop
jmp
lods
dec
add
or
cmp
sbb
sbb
xchg
je
jmp
inc
loop
push
sbb
sbb
xchg
stc
aas
je
insb
add
iret
bound
testl
testb
dec
mov
pop
seta
add
test
cmpl
or
push
inc
fistps
jecxz
pop
mov
push
nop
hlt
enter
dec
xorl
inc
cmp
inc
mov
ret
mov
add
popa
popf
popf
and
mov
mov
sub
mov
sbb
mov
jbe
out
mov
out
cmpsl
cmp
xchg
test
popf
mov
jns
dec
sbb
dec
mov
jmp
cmp
aaa
or
mov
inc
enter
insl
and
xchg
movsl
addb
cli
imul
jmp
jns
sar
xchg
xor
aam
fwait
jmp
call
mov
dec
xchg
pop
sub
xor
cwtl
pusha
or
jb
push
in
mov
push
cmpsl
push
cmp
insb
push
icebp
loop
push
data16
push
lds
out
adc
xor
and
cmpsl
subl
xchg
mov
sahf
push
jne
and
out
jne
sub
ja
mov
into
mov
cmp
xchg
arpl
jo
cli
ljmp
push
pop
inc
sbb
dec
or
cmpsl
xor
repz
sbb
xor
cmpsb
jnp
push
cmp
ror
and
test
cmpl
rcrb
or
ret
std
sbb
sbb
sbb
int3
inc
in
push
in
cmp
mov
mov
push
in
push
cmp
inc
faddp
lds
popa
lea
fistpll
sbb
icebp
repnz
jp
daa
lcall
repz
mov
sarb
leave
test
test
ss
mov
xchg
and
mov
bound
push
pusha
mov
cmp
mov
push
inc
push
push
and
xor
and
pop
ljmp
mov
ss
mov
adc
enter
mov
jecxz
cmp
dec
and
jg
out
loopne
jno
jns
outsl
dec
xor
xchg
xchg
sub
test
ror
popf
jne
cmp
cmp
cmpsb
incl
cltd
jmp
mov
mov
push
pusha
jne
pop
push
dec
inc
cmp
push
gs
lods
bound
push
mov
mov
imul
rcrl
push
insl
fwait
sbb
push
xchg
sbb
pop
dec
paddsw
in
ja
lcall
cli
or
call
jge
mov
mov
adc
sbb
jl
cmc
jbe
cmp
arpl
or
shrb
jne
in
out
push
loop
mov
mov
add
push
es
lea
stc
int3
lcall
inc
or
jmp
dec
pop
adc
add
inc
fcmovnbe
xchg
gs
lock
xor
mov
sub
enter
cld
xchg
sbb
into
mov
add
push
repnz
bound
shl
aas
mov
jl
incl
cwtl
addl
sbb
fldl
imul
cmp
inc
popf
xlat
repz
aad
mov
jbe
xchg
or
xchg
icebp
bound
jle
loop
imul
adc
dec
sbb
cmp
dec
dec
hlt
xchg
popf
or
or
xchg
and
lds
stos
cwtl
call
mov
cld
dec
xchg
jnp
dec
rclb
and
test
add
adc
mov
fwait
pop
sbb
cmp
sarb
pushf
repz
mov
adc
in
xchg
jle
iret
mov
cmp
inc
inc
push
into
stos
inc
ja
xor
mov
mov
xchg
jae
repnz
xor
jno
xchg
pop
addr16
or
push
mov
or
aad
mov
push
mov
das
subl
aad
nop
pop
aad
out
cli
into
adc
mov
push
xlat
les
add
lret
fwait
aas
call
lock
and
cltd
je
sbb
push
scas
mov
xchg
xor
pop
int
shll
aaa
jno
fstpl
push
cmp
stos
mov
push
cmp
leave
xor
jecxz
inc
mov
pop
push
or
xor
pusha
dec
dec
ds
fisubrs
adc
mov
jmp
add
dec
xchg
fstl
in
dec
push
je
xor
icebp
mov
adc
outsb
xchg
mov
cmpl
mov
mov
mov
les
stc
fcmovne
cli
call
mov
or
jno
jg
insb
scas
ret
pop
bound
mov
je
xor
push
sbb
mov
into
push
ret
push
dec
pop
aam
in
adc
cwtl
cmpb
cmp
xor
push
jae
xchg
mov
out
ficompl
mov
mov
push
notl
scas
adc
rorl
dec
arpl
jge
aad
jl
cmc
cli
subl
and
push
push
xchg
push
add
paddb
add
jo
xchg
pop
or
inc
adc
fs
and
mov
dec
inc
mov
and
js
mov
and
out
shlb
dec
inc
iret
test
mov
xchg
cmp
cmp
jnp
dec
add
pusha
in
std
psraw
push
sub
mov
repz
shlb
add
lret
lods
pushf
mov
in
mov
add
or
cltd
subb
popf
or
daa
add
hlt
cmp
jl
push
imul
cmp
push
pushf
xor
push
push
cmpsl
repz
mov
mull
jo
jnp
xchg
mov
jmp
es
xor
rclb
popa
fidivs
test
rcr
cmp
sbb
das
mov
pop
clc
int3
jmp
in
or
pop
push
or
jno
out
imul
xor
inc
push
dec
loopne
xchg
jecxz
dec
in
adc
mov
ja
lcall
insb
and
mov
arpl
fcmovnb
mov
lods
adc
sbb
insb
lods
enter
xchg
sbb
dec
add
mov
gs
sub
out
dec
sub
in
aas
fnstsw
nop
mov
bound
push
dec
adc
dec
fsubs
mov
idivb
pop
addb
int3
add
fxch
fistpll
cmp
mov
sub
xor
push
sbb
fdivrs
ds
insl
mov
or
adc
fcmovu
sti
cmpb
sbb
jmp
sub
rcll
in
shll
cli
jp
outsb
jg
sub
aaa
movsb
icebp
push
sbb
sbb
adc
aas
xchg
xchg
ret
leave
loope
fsubr
outsb
cli
or
loop
repnz
or
or
xlat
dec
insb
and
aam
dec
clc
sbb
jp
jl
dec
jns
into
mov
adc
mull
pop
mov
sti
popfw
xchg
sbb
leave
icebp
test
cmp
and
lret
in
lahf
sbbb
divb
adc
cmp
nop
cmp
xchg
cmpl
lahf
jnp
rclb
xlat
in
xchg
scas
dec
and
arpl
jecxz
and
xchg
sub
mov
jecxz
shl
dec
fbld
sbb
stos
xchg
out
std
outsb
xchg
negb
iret
test
push
pop
adc
fs
sbb
movb
roll
xor
sbb
xor
pop
adc
iret
int
mov
xchg
hlt
mov
faddl
and
or
pop
out
fdivs
pop
jo
cmpb
xor
push
dec
fisttpll
pusha
jmp
or
mov
pushf
sub
imul
test
and
test
lret
inc
jecxz
mov
lahf
popa
xchg
or
sbb
cmpsb
outsb
repnz
int3
loopne
in
insb
stos
mov
hlt
xor
and
stos
pop
xchg
fldl2t
adc
daa
lods
mov
jmp
sbb
sub
pop
movsb
jbe
fbld
pop
or
enter
test
es
imul
jp
adc
ljmp
cmp
les
movsl
add
pop
imul
out
or
loopne
mov
cld
cltd
add
stos
imul
push
dec
leave
jns
mov
in
mov
faddl
jp
js
jbe
test
mov
or
mov
pop
mov
dec
ljmp
loop
or
cmp
in
mov
adc
add
push
insl
pop
adc
mov
sub
movsb
insb
pop
jge
inc
loope
cmp
push
addr16
or
pop
stos
pusha
sbb
push
or
adc
or
outsl
inc
mov
pop
jmp
mov
dec
mov
jl
aaa
enter
xchg
loope
cmp
stos
and
clc
cmc
je
movsb
and
pusha
aam
addl
and
lret
pushf
ja
mov
mov
hlt
mov
in
movsb
jmp
insb
les
fcomip
test
sbb
lea
push
pop
adc
xchg
jmp
adc
mov
popl
ror
into
imul
lcall
inc
dec
in
xchg
jge
xor
ljmp
pop
pop
add
jl
es
xchg
lds
or
call
push
fldt
ljmp
cmp
mov
mov
dec
bsf
fs
push
xchg
mov
popa
add
movsb
lret
fildll
push
fsubr
icebp
ljmp
pop
pop
push
push
pop
in
mov
inc
ja
push
mov
imull
in
fistpll
sti
popa
outsl
in
push
in
test
mov
leave
shll
cmp
mov
cmp
xor
mov
in
mov
xlat
xchg
adc
jnp
hlt
xor
pop
mov
pop
pop
adc
and
daa
in
sbb
fwait
rcll
test
add
jp
push
dec
mov
mov
cs
xor
aad
out
shrb
adc
fsubrs
int
cwtl
das
push
fisttpll
pop
inc
push
std
sub
je
shll
jo
imul
cmp
push
mov
or
int
cmp
and
xchg
test
je
push
mov
or
fst
jne
les
sbb
xchg
rorb
fld
leave
arpl
pop
inc
fdivs
fbld
outsl
cmp
pop
or
dec
pop
mov
pusha
push
addr16
mov
mov
push
aad
and
sbb
mov
jp
jne
sub
or
aas
lods
sub
stos
or
inc
stos
dec
xchg
negl
pop
into
bnd
xchg
addr16
call
les
repz
cmc
jp
jns
rcr
test
pop
out
inc
or
rcrl
inc
push
add
cs
xchg
ret
mov
mov
dec
mov
xchg
and
pusha
sub
jo
cmp
nop
adc
aam
arpl
cmp
xchg
mov
pop
jp
pusha
daa
fwait
push
es
inc
ficoml
add
lcallw
sbb
cmpb
jne
shr
outsb
cmpl
loopne
sub
jae
xor
mov
in
addr16
or
jns
int3
call
cwtl
push
xorl
movsl
and
outsb
lds
pop
cwtl
push
push
test
inc
mov
iret
or
ja
and
dec
iret
add
jae
push
lods
cmp
cmc
aaa
int
outsl
pop
cmpl
enter
push
add
and
jo
mov
lahf
les
sbb
nop
sub
pop
pushf
xchg
adc
insb
push
sbb
stc
mov
int3
mov
loop
mov
jb
add
mov
sbb
loop
sbb
jmp
out
es
xor
push
lahf
dec
lahf
dec
inc
xor
cmc
adc
pop
xchg
mov
adc
stc
cmp
push
add
xchg
shrl
fiadds
js
cltd
cmp
push
jg
enter
scas
pop
xlat
shrl
popf
int
push
dec
fucom
sbb
dec
push
mov
or
inc
xchg
push
adc
js
test
mov
clc
xor
mov
sbb
mov
fnstcw
adc
out
sahf
loopne
mov
out
mov
nop
xlat
pop
sbb
out
pop
cmp
test
dec
dec
test
dec
sbb
push
mov
add
dec
fwait
add
inc
call
leave
and
bnd
gs
mull
mov
pop
fsubr
mov
sub
movsl
cmp
pop
xlat
mov
sub
popa
hlt
fiadds
das
popa
fwait
dec
jne
fmul
pop
xlat
push
or
inc
out
shr
fnstcw
fbld
mov
adc
cwtl
jnp
mov
sub
pushf
js
sbb
iret
or
mov
cmp
dec
sub
mov
shlb
dec
adc
in
adcl
xchg
push
mov
sbb
jb
and
leave
pushf
sub
mov
sub
pop
enter
fisubrs
dec
sbb
pop
inc
xchg
test
dec
in
mov
fdivp
imul
adc
adcb
dec
add
and
mov
imul
pop
push
pop
pop
imul
dec
cwtl
cmpsb
jmp
in
aas
push
sarl
push
mov
sahf
push
das
cmpsl
ss
sub
push
out
lea
mov
jae
sub
inc
adc
xchg
hlt
stc
or
out
xchg
and
mov
shlb
add
fwait
sarl
stos
imul
sbb
push
lret
cmc
out
jl
jns
repnz
push
mov
push
mov
jne
dec
sub
add
sub
loopne
push
lahf
jne
cmp
fisttps
dec
loope
mov
fs
adc
fcmovnbe
inc
test
cmp
aad
push
repnz
xorb
push
enter
lcall
cmp
dec
jg
add
pop
inc
aad
mov
push
imul
mov
or
repz
mov
call
fidivl
mov
push
loop
sbb
jmp
mov
push
movsl
lret
push
jp
xchg
cld
ret
and
dec
out
pop
push
clc
mov
sub
addl
inc
fldcw
repz
jo
popa
mov
and
inc
and
clc
fistpl
lcall
es
lret
sbb
adc
ret
fisubs
addr16
dec
pop
pop
cmp
jge
loope
mov
mov
push
rolb
inc
test
in
dec
jge
jge
pusha
flds
ss
movsb
cmp
shll
js
insb
pop
cmp
jp
and
and
aaa
push
inc
mov
psadbw
fs
xchg
mov
negb
lcall
leave
ljmp
cmp
mov
ja
cmp
pop
shll
in
leave
mov
aaa
lock
icebp
adc
repz
pop
push
sarb
lret
push
pop
sub
mov
ret
in
push
push
pusha
cmp
dec
cmp
loope
pop
mov
out
dec
mov
pop
lahf
lock
jp
mov
sbb
jle
sbb
mov
cs
ret
sbb
xchg
or
lock
mov
loope
pop
xchg
bts
cwtl
fmuls
pop
cli
bound
insb
pop
out
xchg
enter
push
loop
cld
imul
xorl
push
pop
dec
adc
mov
inc
and
inc
iret
icebp
adc
ljmp
in
movl
mov
inc
call
rorl
and
ret
mov
ret
mov
pusha
mov
pop
popf
adc
or
push
inc
xor
or
fbld
loop
popa
mov
lret
mov
sub
mov
lahf
sti
mov
in
call
cmc
aad
inc
inc
loopne
fisubl
sub
leave
dec
aam
pop
adc
sub
cld
fimuls
in
addb
lods
pcmpgtb
fsubs
out
mov
addb
out
aad
mull
rolb
iret
jae
insb
rorl
adc
cmp
jno
scas
sbb
xor
addr16
pop
iret
orl
inc
jbe
es
sub
movsb
mov
mov
setno
mov
jnp
data16
pop
adc
mov
pop
mov
daa
out
push
fsubrl
pusha
jns
mov
pop
inc
cmp
aaa
xor
xor
or
or
mov
cltd
cmp
sti
xchg
pushf
aad
pop
lcall
inc
ljmp
xchg
outsl
sub
popf
dec
popf
sti
imul
test
mov
xor
sbb
ljmp
adc
cmp
or
jmp
pop
cwtl
sub
push
fsubl
fbstp
cwtl
cltd
fldcw
sub
cmp
lock
mov
push
and
jnp
dec
push
nop
xchg
push
mov
inc
sti
xlat
lock
data16
repz
mov
popf
push
pop
mov
push
inc
nop
stos
adc
pop
testl
and
cmp
cli
sti
clc
pop
fldl
pop
sub
mov
dec
push
fcompl
call
cmp
int3
loop
cmp
sub
sub
push
gs
mov
dec
das
scas
out
shlb
xorb
dec
loopne
jle
cld
pop
das
test
out
jmp
mov
jo
nop
dec
mov
pop
xor
mov
adc
dec
xor
jg
push
mov
jp
lea
xor
dec
fdivl
inc
pop
mov
pop
mov
xchg
insl
inc
popa
or
shll
ja
and
lret
mov
test
adc
les
inc
pop
push
sarl
ror
pop
mov
sub
or
lods
arpl
je
addb
push
xor
je
push
xorl
sub
ljmp
ret
cmp
imul
pop
in
pop
xchg
cmc
push
mov
add
add
fnsave
lret
adcl
mov
xchg
inc
arpl
adc
xor
insb
mov
jge
mov
jb
mov
jb
xchg
sub
mov
stos
hlt
sbb
sti
mov
jnp
and
inc
jae
pop
mov
or
jb
jne
xor
popa
call
sub
mov
in
jo
jmp
push
in
xorb
cltd
pop
loopne
jne
cmp
aas
je
iret
hlt
pushl
sahf
mov
popf
jg
push
cwtl
iret
mov
add
ret
or
les
addr16
out
imul
cli
aam
push
push
mov
adcb
sbb
mov
mov
add
shrl
sbb
cmp
mov
int
xor
dec
add
call
or
decl
lret
outsl
mov
loope
fdivs
repnz
cmp
or
add
add
cmpsb
ljmp
sub
mov
aam
inc
mov
mov
popa
xchg
mov
rcll
xorb
aam
mov
push
push
push
andl
fs
jp
or
cmc
je
mov
loopne
rcl
cmp
xorb
mov
pop
push
sub
and
lret
mov
add
sub
pop
jmp
gs
movsl
cld
nop
pop
push
or
repz
add
js
pusha
cs
jno
and
mov
push
rcll
mov
jno
cmp
cmpsb
jnp
sub
pop
in
clc
mov
cli
jb
scas
and
and
inc
ror
jb
jecxz
cmp
mov
inc
aas
popa
scas
pop
dec
jb
push
je
xchg
ret
pop
or
mov
out
cmp
mov
lret
inc
mov
fucomp
xorb
dec
aad
mov
cs
mov
and
inc
icebp
outsb
and
cmp
jb
mov
jnp
cs
pop
popa
outsl
stos
popa
call
mov
sbb
mov
dec
xchg
std
jle
pop
add
mov
mov
cmp
and
jp
and
xor
add
xchg
and
jno
rcrb
cli
ljmp
outsb
aaa
sub
pop
mov
jbe
ret
bnd
pop
loope
adc
lods
lods
mov
popa
mov
xchg
iret
mov
ret
dec
sahf
seto
add
add
cwtl
fisttpll
inc
loop
movsl
cmp
and
lds
pop
or
sbb
mov
fs
or
xchg
es
cs
jbe
lods
xchg
cmp
push
mov
push
mov
cld
push
test
mov
and
insl
test
adc
dec
pop
enter
and
loope
jl
sbb
rclb
cmp
mov
fiadds
pop
out
test
js
addl
ljmp
mov
xchg
mov
test
or
movsb
and
mov
icebp
mov
in
cs
mov
mov
xchg
rorb
popf
lcall
dec
push
sbb
dec
cli
mov
jecxz
pop
cmpsl
testb
lret
loopne
pcmpgtw
adc
jae
imul
lcall
mov
cwtl
std
js
arpl
jmp
sbb
lcall
in
in
stos
xchg
dec
mov
scas
mov
add
cltd
addr16
sub
sahf
adc
inc
andl
and
fisubl
ljmp
and
test
clc
jg
dec
sub
jo
hlt
gs
cmp
movsb
lods
inc
dec
jnp
loop
sahf
xor
xchg
jb
fwait
cli
cs
jp
lods
pushl
jg
roll
mov
std
call
js
int
jle
repz
arpl
pop
adc
cltd
mov
or
sub
movsl
lret
ja
lods
push
lods
arpl
dec
dec
lods
js
sub
fwait
or
and
orl
inc
add
pusha
and
jne
iret
push
xchg
xor
out
ljmp
or
cmpl
dec
mov
pusha
add
and
stc
sbb
cmp
cvtpi2ps
movsl
adc
mov
or
scas
ret
je
or
push
mov
or
mov
jns
fsubrl
xchg
push
sub
mov
data16
and
xchg
loope
cmp
sar
adc
insb
shll
fbstp
cmp
inc
jb
inc
dec
jb
fdivrp
xor
mov
sti
xchg
and
mov
jnp
pop
aam
push
lret
mov
mov
xchg
jl
xchg
std
dec
add
clc
popa
inc
pop
imul
sbb
int
mov
mov
pop
testl
cmp
shrl
sti
stos
out
ficompl
pop
dec
push
js
or
rcrb
les
int3
pop
pop
aas
aam
shrl
mov
mov
push
or
in
into
mov
inc
loop
cmp
or
dec
aad
fwait
mov
enter
insl
push
pop
sbb
ret
outsb
shll
data16
adc
stos
cmp
adc
xor
or
jnp
imul
int
cmpsl
mov
push
insb
mov
icebp
scas
movsl
pop
icebp
dec
cli
xor
in
xor
xorb
push
cmp
mov
loop
xor
ds
fidivrs
xor
jb
enter
add
scas
icebp
cli
mov
cmpsl
iret
fnstenv
mov
push
test
aad
inc
xor
je
arpl
xchg
cltd
bound
ret
xor
out
push
jnp
push
repz
mov
xchg
stc
mov
in
jmp
sbb
push
push
adc
mov
faddl
ret
xor
stos
pop
adc
mov
stos
sub
shrb
jmp
inc
inc
cmp
mov
mov
or
cmp
inc
ja
sti
jl
cltd
mov
lret
stos
out
int
dec
insb
outsl
imul
aad
add
iret
jo
jnp
and
dec
lock
xchg
insl
mov
daa
loopne
cmp
mov
in
mov
cmpsb
jp
jno
dec
inc
sub
pop
fidivrs
inc
aas
sahf
test
pop
or
ljmp
cli
pop
cld
pop
ss
fsubrs
add
jns
inc
sbb
frstor
lods
fisttpll
adc
push
das
shrl
in
inc
negl
ss
cmp
dec
pop
and
add
xor
aad
adc
lods
je
insl
ljmp
mov
adc
dec
mov
repnz
cmp
aas
push
ret
jns
xchg
mov
aaa
cmc
pop
aam
es
jge
xchg
sbb
inc
mov
ja
pop
pusha
push
cwtl
mov
cwtl
inc
push
add
jae
dec
xchg
sti
hlt
aaa
xor
lds
in
sahf
push
cli
lods
popa
sbb
and
mov
cwtl
jecxz
aas
or
test
outsb
dec
dec
dec
std
xlat
dec
arpl
inc
pop
ret
add
jle
sub
repz
jg
fdivl
aas
inc
ds
dec
xchg
in
cmp
das
ret
bound
xlat
inc
ret
adc
add
sbb
push
out
push
outsb
pop
sbb
cmp
test
push
push
mov
adc
xchg
inc
int3
sahf
cmp
push
mov
mov
mull
cmp
out
sbb
push
pop
lahf
xor
lods
cmc
scas
or
scas
daa
pop
cmp
cmp
adc
sbb
lcall
pop
ljmp
shrb
fdivs
aad
inc
xor
daa
sub
inc
xchg
push
push
mov
pop
push
arpl
test
sahf
or
in
subl
dec
sub
mov
mov
and
sbb
aad
ficomps
push
int
cmp
sub
in
xchg
shll
out
imul
push
sbb
pop
push
dec
jmp
mov
dec
jp
stc
xchg
test
adc
sbb
bnd
clc
adc
sbb
test
out
xchg
ret
dec
cs
or
inc
sahf
mov
push
es
pop
insl
ja
imulb
pop
out
mov
aam
repz
xchg
insl
es
aad
daa
jns
in
sbb
push
push
push
push
push
aad
and
add
cmc
and
mov
mov
or
rcll
dec
ror
mov
subl
push
subb
dec
in
sbb
jle
shl
sub
xor
gs
fadds
sbb
xchg
orl
in
pop
pop
and
sub
stc
xor
jmp
mov
les
jecxz
insl
mov
xor
push
pop
jmp
cmp
es
xchg
fwait
sub
cmpsb
nop
pop
imul
inc
sar
idivl
jo
push
aaa
cmp
out
inc
jnp
mov
es
xchg
and
sbb
xchg
mov
out
int3
pushf
push
ficompl
dec
fisubl
xlat
in
sbb
jp
mov
int
xchg
xchg
scas
add
mov
loope
push
and
repnz
scas
sub
popf
or
add
sti
fildl
mov
in
movsb
mov
pop
popa
cs
xchg
mov
arpl
daa
shrb
stos
mov
pop
je
cmc
mov
mov
psrlw
fists
ds
jns
inc
sub
bound
mov
lret
sub
stos
repnz
popa
pop
mov
or
negl
cmp
loope
dec
and
popa
xor
sti
push
xor
push
or
cltd
sub
sbb
sbb
sbb
and
inc
sub
xor
inc
xchg
pop
sbb
insl
sub
mov
sub
fs
nop
es
sbb
shll
xchg
xor
outsl
cmc
jecxz
sarb
mov
dec
cmp
mull
testb
push
sub
in
clc
mov
jns
adc
pusha
leave
jge,pn
or
mov
movsb
int
inc
shll
adcb
push
push
lods
xlat
pop
shll
jae
into
xchg
dec
push
pop
cs
ja
pusha
mov
sub
push
mov
cmp
mov
push
clc
in
or
ret
orb
lea
icebp
inc
inc
or
aas
lods
jns
mov
in
mov
bound
ja
fs
jl
das
ja
xchg
dec
mov
inc
xlat
mov
call
jbe
mov
dec
cmp
adc
cmc
sub
inc
lock
sub
mov
jb
pop
jns
adc
int3
jle
in
pop
cmp
pop
cmp
hlt
loop
decl
dec
xchg
mov
jae
inc
xchg
adc
jge
and
mov
push
mov
mov
xchg
sub
outsl
addr16
nop
notl
xor
push
out
pop
jl
imul
mov
cmp
cmp
es
push
push
push
cmp
xlat
nop
aaa
push
dec
test
lcall
sub
or
adc
rcr
mov
mov
push
jns
adc
xor
andl
xchg
and
mov
or
arpl
jg
push
lret
xchg
popf
in
or
push
sbbb
call
notb
xchg
in
pop
push
aad
jl
cmp
scas
gs
push
push
push
es
ja
andl
fcmove
inc
cmp
adc
cld
add
mov
mov
xor
inc
and
dec
into
sbb
stos
dec
mov
pop
andl
loop
add
mov
push
aad
cmp
scas
push
xchg
loop
push
repnz
dec
mov
mov
fmuls
adc
fsubr
jns
stos
popf
sub
cmpsl
or
push
push
push
inc
test
jp
jp
mov
movntps
fdiv
push
add
daa
jmp
orl
ljmp
stc
popa
aad
in
outsl
data16
fisubl
mov
sub
mov
push
icebp
jne
aad
cmpb
xor
sbb
nop
mov
mov
mov
ljmp
ss
mov
add
dec
sbb
cmp
roll
mov
xchg
shrl
dec
and
jne
and
pop
scas
mov
pop
mov
or
enter
daa
push
pop
cmp
jle
sbb
dec
mov
cmp
mov
ror
pop
ljmp
mov
dec
jb
mov
sbb
mov
dec
xor
or
cltd
xlat
dec
sub
scas
ficompl
mov
or
mov
pop
mov
ret
lea
sub
sbb
notb
push
pop
test
repz
jbe
jmp
mov
dec
mov
mov
push
xchg
rorb
xchg
loop
cmpsb
push
idivb
mov
mov
cmp
fcoms
mov
aaa
movl
loope
mov
inc
arpl
lcall
sarl
xchg
xchg
pop
fstl
xchg
js
mov
gs
stos
jl
cli
cld
call
enter
in
or
cmp
pop
pop
mov
aam
test
sub
pop
not
mov
popa
pandn
xor
mov
mov
pop
mov
data16
jle
fistl
push
sub
icebp
repnz
xchg
divl
cmp
adc
xor
dec
sti
je
into
xor
ret
imul
inc
jns
and
mov
add
mov
pop
lods
je
pop
imul
push
popa
add
mov
loop
mov
lock
xchg
aam
orl
cwtl
fwait
mov
nop
pop
inc
scas
sub
nop
stos
in
sbb
push
rolb
fistl
sub
ss
outsl
pop
dec
and
push
add
aas
bound
dec
dec
dec
sub
push
js
addb
mov
jo
loope
mov
cmpsl
lahf
sub
pop
adc
pop
mov
mov
pop
jp
insl
mov
leave
addr16
test
push
pop
inc
inc
test
ret
push
lahf
jmp
outsl
jo
or
mov
shrl
les
or
add
cmc
mov
jno
xor
mov
sbb
adc
scas
adc
imul
rorl
into
test
ficoms
bsr
mov
fmuls
sub
out
js
rcrb
fcomip
cmp
and
ss
mov
fdivl
mov
jo
int
mov
xor
or
adc
fs
je
test
popa
or
shll
and
adc
xor
push
fldt
push
fwait
rcrl
mov
outsl
mov
or
jecxz
mov
cmpsb
or
jmp
xor
or
adc
xor
pop
xor
mov
add
jne
mov
inc
je
cwtl
adc
je
cwtl
sar
and
mov
xor
sbb
daa
stos
xor
push
mov
mov
call
leave
jns
shrl
mov
adc
cld
xor
sub
add
fdiv
or
and
scas
add
pusha
sbb
js
ret
outsl
pop
pop
stos
icebp
xchg
rcrb
add
xor
jbe
dec
jge
pop
shrb
sub
pop
push
fistl
add
in
mov
xor
inc
sbb
aaa
ljmp
hlt
dec
out
out
fistl
in
pushf
or
popa
adc
daa
mov
stc
sbb
mov
shl
rcr
lock
push
or
arpl
lods
xor
pop
adc
mov
pop
push
std
dec
xor
mov
addr16
dec
outsb
fimull
std
cmp
popf
lret
push
mov
cmp
shr
mov
fs
lock
sub
xlat
leave
add
xor
cmp
sub
fiadds
pop
push
lods
cs
out
test
cld
dec
add
mov
mov
push
ss
jno
iret
mov
push
pop
cmp
xchg
ljmp
add
aam
dec
lods
or
outsb
pop
test
stc
lahf
idiv
sti
lret
aaa
mov
or
mov
ljmp
setp
aad
int
xor
or
xchg
lods
xor
mov
mov
lods
in
in
jb
test
jg
mov
ret
subb
lock
inc
daa
jg
pushf
daa
popa
xcrypt-cbc
cmpsl
xchg
dec
inc
xor
or
adc
mov
int3
cmp
add
xchg
and
jle
inc
mov
repz
xchg
sahf
dec
pushf
fs
stos
push
repnz
cld
gs
loop
inc
jbe
xorl
mov
movl
arpl
lea
dec
into
lock
push
pop
xchg
ror
and
rcrb
stos
xor
add
jecxz
xor
data16
cmp
cmp
add
inc
cld
rcrb
in
movsl
popa
cs
or
popf
fstpt
pusha
push
addr16
xor
add
push
mov
xchg
hlt
xor
dec
mov
mov
push
js
lock
ljmp
push
adc
mov
xchg
sbb
dec
xchg
sub
mov
fsub
loope
insb
mov
cmp
and
out
or
or
sbb
rclb
dec
cmpsl
push
cmpsb
arpl
inc
movsb
push
sub
aam
call
shrl
jmp
outsl
cmp
sbb
popa
lds
add
movsl
pop
std
jne
ret
and
fs
cmpsb
mov
dec
and
xchg
dec
pusha
push
or
and
nop
test
cmp
aam
repz
ljmp
jle
scas
clc
shl
add
lds
mov
ja
gs
fisttps
lds
mov
rcrl
iret
xor
cmpsb
push
jmp
notl
fld
mov
mov
mov
lcall
or
xchg
arpl
clc
lcall
adc
out
pop
loop
or
mov
xchg
or
ss
jns
xor
rorb
pop
mov
in
bndstx
or
sar
xor
mov
jle
lcall
xor
int
push
push
fsub
dec
rcl
adc
adc
push
or
add
mov
ret
outsl
or
pop
sahf
pusha
insb
imul
xchg
adc
cld
repz
sub
shl
push
aam
lods
mov
lret
mov
cld
outsl
add
enter
jecxz
xchg
ljmp
sbb
lret
scas
ja
cltd
add
xchg
out
cmp
dec
mov
adc
sub
jle
sbb
jle
lods
fs
into
xchg
pushf
push
test
add
into
jne
out
sub
mov
cmc
lds
sti
pop
push
add
sbb
out
xor
inc
push
pop
bound
bound
mov
mov
jmp
dec
js
xorb
xchg
out
add
jg
jnp
xor
stos
cmp
xchg
je
aam
push
inc
mov
cmpw
sub
popf
out
cmpsb
test
mov
xor
ret
mov
lret
in
cmp
ss
push
jp
repz
iret
jecxz
in
fsubl
sub
orb
leave
xchg
xor
mov
cmc
or
jbe
xor
pop
stc
ljmp
push
lock
jnp
scas
lcall
adc
push
mov
sub
mov
xor
xor
cmpl
cmp
adc
xchg
xlat
shll
xor
pushf
add
mov
mov
ret
push
jmp
xchg
pop
sbb
scas
inc
pop
ror
push
xor
loopne
xchg
jg
mov
sbb
pop
out
out
sub
les
mov
mov
mov
push
push
out
xchg
loop
adc
shrl
sbb
mov
xchg
pop
mov
sbb
test
ret
int
xchg
test
ljmp
fisubrl
sbb
dec
inc
jl
outsl
push
stos
pusha
adc
cld
aaa
lahf
xchg
aad
sub
sti
push
es
ret
icebp
pop
jecxz
cmp
sahf
aad
ss
fnstcw
loope
stos
movsl
inc
int
shlb
mov
in
mov
shlb
xchg
stc
xor
rorl
lret
xlat
fwait
sub
pop
xor
mov
imul
cmp
lods
jbe
aam
cltd
and
sub
in
sti
ja
les
push
pushf
sub
out
sub
aaa
mov
addr16
xor
xor
inc
mov
jmp
mov
in
test
cmp
lods
sahf
stos
push
test
jne
leave
push
out
lock
loop
imul
sti
fsubrl
pop
mov
jle
int
orl
fmuls
adc
pop
fs
rcll
xchg
jge
test
push
lret
xor
insl
ljmp
cli
push
mov
inc
and
jmp
test
sbb
pop
push
and
aaa
pop
dec
fcoms
fbld
inc
push
mov
add
inc
test
adc
and
lds
movsb
cmpsl
push
sub
push
push
jns
daa
push
inc
cmp
js
dec
daa
cltd
popa
into
icebp
inc
je
jle
loope
jns
add
xchg
inc
jge
cli
cwtl
and
scas
dec
inc
pop
jmp
xchg
xlat
pop
dec
cld
fdivl
fcoms
add
stos
sbbb
subl
mov
out
mov
nop
aaa
pop
mov
mov
adc
mov
testl
stos
enter
push
into
test
loop
cwtl
xchg
xor
adc
rorb
fcompl
push
jns
jle
jp
or
movsb
loop
mov
jmp
sbb
xor
inc
and
int
jp
lret
cld
jne
bound
mov
sbb
add
jmp
aad
xchg
lock
add
pop
and
loope
pop
inc
stos
outsl
loop
shll
mov
fs
jne
pop
cvtdq2ps
push
jns
addr16
lret
xor
xchg
movsl
jo
xor
or
sbb
inc
popl
mov
adcl
pop
or
adc
dec
mov
mov
xor
ss
mov
xor
lahf
mov
roll
nop
sub
push
sub
lcall
imul
cmpb
inc
pop
cmovnp
mov
inc
test
icebp
mov
in
sub
jl
test
pushf
jb
jg
sub
gs
lock
rclb
inc
test
pop
add
mov
adc
push
pop
push
inc
sub
pop
lret
mov
pushf
movsb
insl
and
or
push
outsb
push
push
cmp
lahf
out
stos
pop
mov
sbb
fisubrl
pop
cld
aaa
inc
rcrb
cld
mov
jp
pop
jns
add
sub
jns
clc
xlat
pop
and
lods
jno
mov
mov
jmp
fwait
cs
pusha
pop
pop
les
dec
or
jne
or
call
sub
xchg
in
push
loope
sbb
aam
lret
out
addl
mov
mov
lcall
jo
dec
std
in
inc
pop
pushf
cmp
mov
jecxz
mov
incl
adc
ja
mov
test
add
int
outsb
push
mov
loope
and
dec
push
gs
pusha
push
sbb
mov
in
pop
rorl
xchg
add
adc
xorl
mov
imul
mov
xchg
aaa
inc
mov
jecxz
push
test
add
jp
mov
mov
sub
jns
mov
sub
xchg
jle
and
imul
cmp
stos
data16
ret
in
rcrb
test
xchg
dec
push
push
pushf
aad
decl
sbb
cltd
scas
inc
out
lcall
mov
in
cmpsb
mov
or
xor
comiss
rcll
adcb
mov
xchg
js
inc
call
xchg
lret
dec
mov
adc
stos
test
fcompl
inc
subl
push
mov
stc
ljmp
sub
mov
insl
mov
cmp
mov
sbb
xchg
cmp
push
xor
out
jmp
ljmp
shrl
pop
in
nop
mov
sub
in
pop
sub
xchg
push
xchg
and
jp
daa
loope
jmp
push
mov
sub
push
js
std
sbb
popf
add
jo
hlt
test
sub
imul
out
dec
adc
push
rcrb
xchg
cwtl
push
mov
xor
mov
sub
or
paddq
test
or
push
pop
idiv
pop
dec
test
aas
imul
je
loopne
jne
adc
dec
pop
stos
mov
inc
sbb
sahf
jmp
or
cmpsl
fidivl
in
sub
mov
xchg
adc
xchg
movsb
insl
cmp
jge
or
dec
sub
ss
sub
mov
add
repz
rcl
fldl
sti
or
nop
fildl
and
icebp
sub
cmp
mov
dec
jo
iret
cmp
daa
fld
pop
lock
and
out
aad
mov
pop
xchg
in
jg
insl
sub
fneni(8087
adc
sbb
pop
xor
das
xor
fwait
cmpsb
mov
add
rclb
dec
movsb
or
and
or
xor
sbb
mov
cmp
stos
cld
lahf
inc
xor
push
ja
dec
mov
popf
stos
mov
or
xchg
loope
ja
aaa
adc
pusha
jmp
adc
pop
mov
xchg
movsl
add
jb
fisubs
jp
movsl
shrl
mov
push
test
mov
xchg
push
mov
sti
push
pop
shl
insb
test
je
movsl
and
aaa
sub
xchg
xor
es
adc
rcl
stos
jmp
sbb
out
into
or
int3
add
rcrl
iret
or
xor
xor
outsb
xor
jg
jae
fidivrs
mov
and
xor
dec
sub
cmp
sub
add
leave
inc
cmpsb
or
adc
les
ss
cmp
arpl
sbb
jnp
mov
shr
and
aas
out
cmp
mov
push
xor
add
std
test
push
filds
sbb
xor
push
addr16
pop
or
into
mov
test
cmp
repz
pop
ja
gs
add
xor
cmp
jo
dec
adc
mov
icebp
pop
push
jno
stos
inc
dec
inc
xor
cld
js
mov
inc
jmp
fidivl
pop
jp
imul
ficoms
fisubs
push
jl
sub
stos
sub
clc
inc
and
ds
sub
mov
jno
xor
in
iret
dec
jecxz
in
mov
add
stc
gs
xlat
cs
fsubr
pop
mov
cwtl
daa
negl
jmp
cld
enter
aaa
popf
sbb
movsb
pop
and
xor
xchg
je
fisttpl
pop
je
ret
sub
pushf
xor
cmp
xchg
jne
dec
dec
cmp
sahf
lahf
jp
mov
add
push
adc
mov
movsl
inc
mov
jbe
inc
inc
leave
xchg
adc
cmp
pop
sbb
xchg
negb
stos
cmp
cmc
std
push
call
insl
add
gs
sbb
inc
ffreep
ja
mov
push
or
jno
add
out
lods
add
or
and
add
mov
aam
jmp
sub
and
xchg
cmpsb
jne
aas
scas
orb
out
int
cmp
imul
push
ja
daa
mov
leave
push
xor
xchg
mov
int
ja
jno
movsb
mov
inc
out
out
sub
in
or
inc
sub
mov
jle
iret
pop
popa
jg
inc
sti
jb
xchg
add
ds
dec
dec
stc
aaa
mov
lret
repnz
fmul
popf
and
xlat
jb
dec
xlat
paddw
imul
mov
lock
sub
outsl
xchg
dec
fwait
cmc
scas
lcall
adc
gs
div
jae
mov
jno
dec
fwait
inc
jg
ljmp
mov
popa
inc
repz
inc
test
lock
nop
ja
cmp
add
adc
xchg
mov
fwait
lock
jb
cmp
incl
cli
lea
xchg
es
mov
xchg
push
sbb
push
push
jl
adc
ds
adcb
add
je
or
cltd
add
xor
mov
bound
in
icebp
stos
movsl
push
gs
dec
sub
jecxz
leave
call
jbe
roll
mov
xchg
ds
or
mov
dec
mov
data16
bound
adc
xchg
clc
push
cmp
dec
orb
mov
mov
pop
into
mov
es
cld
sub
jmp
push
jae
out
xchg
outsl
inc
cmp
mov
mov
cmp
and
and
scas
loope
sub
add
cmpl
lea
pop
cld
jns
cmp
push
and
mov
adc
fs
inc
stos
nop
mov
mov
fstpt
cmp
int
aad
iret
andl
sub
pushf
cmpsl
push
addb
adc
loope
jg
out
mov
mov
sub
push
push
das
bound
jo
adc
shll
data16
aas
inc
mov
push
stos
jne
aad
es
loopne
push
xchg
fdivrs
mov
aad
pop
sbb
push
mov
sub
leave
addr16
fmuls
add
add
ja
std
pop
cld
xor
test
jge
movsb
popf
jno
sti
gs
ficoms
sbb
das
clc
mov
mov
sbb
inc
adc
and
ja
sub
mov
std
xor
lods
ljmp
ds
jne
cmp
mov
mov
in
rcll
lahf
mov
fidivrs
xor
dec
push
and
mov
daa
pop
xlat
or
pop
cmc
cmp
cld
mov
subl
ror
divl
xchg
movsb
test
xor
mull
cmp
inc
lret
xchg
popf
aas
jae
push
js
imul
xlat
in
test
icebp
mov
mov
popa
sub
sub
adc
fstps
cmovae
mov
pop
xchg
scas
sahf
data16
push
sbb
sub
mov
mov
mov
fcompl
jne
ret
std
into
xchg
adc
fwait
xor
gs
repz
xor
push
in
jne
outsl
add
iret
popf
inc
jae
add
fldt
sbb
push
lcall
jns
test
repz
shrb
test
adc
jbe
ja
xchg
mov
add
popf
dec
dec
adc
lret
loope
push
jno
lret
and
or
push
imul
mov
or
add
enter
adc
rorl
xor
dec
inc
xchg
jbe
cwtl
jae
add
mov
popa
sbb
mov
xor
or
pop
adc
std
mov
push
or
or
cmpl
xchg
and
insl
shr
pop
xchg
loopne
jg
mov
insl
lcall
outsl
scas
xor
cmp
and
xor
repnz
lret
jge
popa
out
sbb
test
pop
pop
dec
ja
in
ja
mov
jno
push
out
hlt
sbb
mov
sub
inc
scas
iret
pop
or
inc
jb
jno
dec
dec
xor
in
daa
dec
cmp
outsb
nop
out
aad
push
pop
pop
inc
sub
sahf
movsb
dec
jae
mov
or
push
pop
and
pop
sbb
cmp
mov
out
dec
in
cmc
xor
shr
mov
xchg
inc
fdivl
or
mov
add
decl
and
rcll
pop
imul
mov
inc
mov
inc
packsswb
cli
xor
cmpb
push
and
dec
xor
and
push
inc
push
adc
pop
divb
inc
and
aad
push
and
popa
imul
pop
or
sti
cmp
fs
popf
dec
or
in
and
push
mov
fadd
int3
cmp
ss
jp
cli
cwtl
lods
test
rcll
lret
int
jnp
add
push
in
fisubs
adcb
std
jge
inc
cmp
cld
cmp
ret
fwait
push
inc
cmc
cmp
inc
jne
rolb
inc
inc
pop
jne
pop
dec
insl
cld
aam
cli
pop
stos
rclb
inc
push
mov
cltd
push
push
int
push
bound
int3
pop
xor
jbe
adc
orb
ret
mov
xorl
adc
pop
and
test
je
lahf
inc
in
les
iret
fadd
sub
pop
jge
and
sbb
inc
adc
popa
inc
or
xchg
lods
aaa
icebp
cmp
scas
mov
jbe
xchg
rolb
lcall
es
pop
not
cs
mov
lock
jg
mov
cmpsb
sbb
int
stos
inc
and
lds
lods
and
pop
sbb
sub
popa
std
adc
or
jp
fildll
leave
add
ficoms
shl
jg
imul
dec
mov
popf
fld
jp
daa
and
push
push
ret
mov
dec
mov
mov
stc
hlt
shll
cmp
fstpt
inc
sbb
sahf
mov
cmp
subl
aaa
xor
lcall
mov
divb
int
cmpsb
add
inc
cmpsl
mov
or
mov
push
add
syscall
sbb
cltd
xlat
xchg
pop
arpl
repnz
jbe
outsl
cs
pop
jecxz
aad
gs
pop
outsb
pushf
add
dec
dec
enter
jns
pusha
mov
mov
jbe
xchg
bound
xchg
cld
cmp
pop
testb
or
jecxz
mov
jge
and
mov
insl
jl
push
push
xchg
popf
rolb
in
sahf
imul
or
and
sbb
or
enter
orl
mov
int
orl
addl
adc
sti
cltd
pop
adc
add
jp
lock
inc
lret
orb
fcomi
add
jo
and
xchg
test
je
fcoml
mov
stc
das
dec
jb
xchg
mov
xor
fbstp
push
mov
mov
rcrb
shll
xchg
ds
call
push
lods
into
inc
sub
inc
cli
ljmp
cli
dec
insl
lahf
in
and
sbb
ja
es
xor
mov
sti
jge
loop
dec
insb
sbb
inc
cmpl
pop
pop
icebp
add
xor
pop
int
push
mov
repnz
or
sahf
fcomi
mov
movsl
mov
jg
mov
fnstenv
cltd
pop
lcall
into
clc
mov
sub
add
pop
xor
jae
and
cmpl
shll
jae
xor
es
ret
xchg
mov
push
jb
mov
xchg
imul
in
imul
cmp
sub
jecxz
sbb
mov
dec
push
sbb
mov
addr16
pop
xchg
add
out
sahf
dec
dec
jmp
push
inc
mov
int3
or
ret
in
mov
jae
leave
push
push
cmp
cmp
mov
scas
mov
sub
adc
int3
sub
icebp
adc
push
mov
or
mov
mov
sub
adc
mov
je
jecxz
xchg
mov
and
mov
and
mov
mov
outsb
out
push
gs
dec
jae
push
call
dec
addr16
aas
pop
sbb
pusha
mov
sbb
pop
lods
push
xchg
dec
das
pop
nop
inc
lahf
adc
mov
test
int3
sbb
ljmp
es
in
daa
pop
add
sub
adcl
popa
repnz
sbb
test
and
lods
push
jbe
mov
jae
push
rcl
adc
xor
in
and
adc
sarl
in
scas
xor
cmpsl
cmpsb
jb
ficoml
mov
dec
mov
lods
add
gs
aaa
lock
mov
jmp
insb
ficompl
clc
or
or
fiadds
sahf
push
data16
inc
jecxz
mov
and
loop
push
jp
test
fwait
mov
sbb
or
xor
jnp
cmp
and
xorb
insb
xchg
cmpsl
out
mov
movsw
sahf
sub
popa
aas
test
in
xor
cltd
icebp
std
and
push
outsl
rol
dec
es
dec
aam
gs
add
es
mov
mov
in
xchg
xchg
cmp
and
or
dec
pop
or
imul
pop
arpl
dec
adc
out
iret
inc
mov
std
or
movsl
rclb
or
jne
cmc
fwait
pop
add
movsb
mov
sahf
gs
subb
mov
sub
adc
mov
adc
mov
adc
jno
mov
mov
add
xor
shrb
movsb
mov
pop
or
insl
testb
jp
and
cs
loope
mul
fucomip
scas
lret
xor
daa
push
lret
call
add
jecxz
jecxz
ficompl
std
push
imul
cld
mov
scas
lahf
add
pop
mov
adc
add
xor
dec
sti
scas
sbb
pop
nop
ja
pop
push
inc
jns
xor
gs
cmp
push
mov
adc
je
sbb
cmp
cmp
mov
addb
sub
test
insb
loope
enter
sub
jbe
inc
not
sub
test
inc
out
sub
push
pusha
cmpsb
mov
addr16
cld
inc
and
addl
lret
ror
jg
cmpsb
push
add
in
mov
jp
test
movsb
lock
mov
je
in
lods
imul
mov
lods
arpl
mov
push
pop
test
push
fmul
shl
xor
jne
aam
xchg
lcall
fs
mov
scas
jmp
mov
loopne
cmp
shll
loope
mov
xor
sahf
jnp
jmp
jmp
mov
inc
lock
xchg
push
mov
adc
cmp
insl
mov
addb
test
pop
dec
xor
lods
mov
sub
imul
sbb
les
dec
fst
pop
xor
sub
jmp
aaa
inc
xchg
arpl
fsts
sub
jle
inc
xor
jge
fildll
xor
mov
mov
sub
push
jp
or
scas
push
add
push
jbe
enter
and
iret
fs
fistpll
lcall
mov
push
cmp
mov
adc
test
xor
mov
ja
push
aaa
inc
inc
ja
xchg
inc
cmpsb
push
imul
pop
test
mov
pop
cmp
cmp
out
mov
pop
aam
test
push
fld1
pop
lahf
testb
pop
adcb
xor
fdivrl
daa
sti
fdivl
xchg
jo
and
push
cvtps2pd
add
add
cli
mull
and
aam
std
pop
xor
fnstcw
sbb
cmp
imul
sbb
pusha
cli
or
xchg
mov
add
in
jle
xor
rolb
cld
clc
test
lds
push
mov
leave
sbb
mov
lcall
test
push
mov
add
sbb
inc
aad
outsl
sub
fiaddl
pop
cmp
cwtl
pop
testb
inc
inc
lds
fmull
and
shrb
mov
push
loopne
daa
and
outsb
lock
pop
aaa
loope
xchg
adc
push
sarl
add
jg
clc
dec
sub
test
outsb
mov
mov
dec
outsl
mov
leave
cmp
add
mov
orl
sahf
aaa
cmp
call
lods
and
push
rclb
fwait
leave
mov
ret
lock
in
xor
gs
inc
call
mov
cmpsl
jnp
aad
aas
test
cld
mov
out
in
fnstsw
and
in
ds
xchg
xchg
fstpl
xchg
mov
pop
pop
out
icebp
dec
mov
arpl
xchg
adc
push
and
or
mov
pop
test
call
xor
lret
sbb
icebp
mov
jp
dec
int
fnsave
mov
in
push
adc
inc
xor
xchg
js
and
iret
fbld
sub
push
jle
xor
jmp
lea
sbb
enter
jns
stos
mov
mov
or
pop
les
loopne
imul
gs
stos
and
lock
and
call
inc
sbb
iret
sbb
mov
sub
mov
mov
xor
mov
mov
movsb
mov
sbb
je
int
or
fdivrp
dec
adc
adc
push
or
icebp
rcrb
lcall
adc
push
outsl
insl
das
inc
mov
ret
rcrl
sub
int
orb
cmp
sbb
clc
sbb
cltd
or
stc
cmp
dec
bound
xchg
loopne
dec
ds
mov
gs
js
mov
pop
mov
sahf
lret
dec
mov
negl
and
fwait
inc
or
sub
cmp
cmp
adc
insl
and
stos
insl
dec
mov
jcxz
data16
data16
dec
pusha
out
mov
mov
mov
loop
fcmovu
push
ds
sahf
gs
pop
push
push
xchg
add
stos
lea
out
out
pop
imul
lea
xchg
jb
mov
leave
xor
lock
loope
mov
mov
xlat
leave
mov
bound
jb
mov
lods
pusha
cs
jecxz
sub
fmul
or
mov
inc
sbb
dec
into
pop
cmp
mov
addr16
outsl
jbe
push
mov
jge
xchg
xchg
stc
ss
or
sbb
xorb
mov
aaa
xchg
out
sbb
sahf
cmp
xor
imul
scas
or
or
inc
movsl
inc
test
inc
jnp
xor
icebp
xchg
jge
js
out
sti
sub
stos
mov
cli
int
mov
leave
add
push
cwtl
mov
mov
mov
and
inc
mov
push
insl
jmp
or
xchg
int3
repz
test
inc
push
stos
sub
hlt
sbbl
xchg
xor
test
cmp
gs
mov
or
testl
xor
faddl
xorl
or
lret
mov
lcall
mov
scas
mov
in
adc
adc
mov
es
sar
add
cmc
mul
jns
push
jecxz
outsb
mov
insl
mov
jno
sub
sbb
ljmp
ret
cltd
lods
pushl
movsl
sbb
cmp
aam
push
pushf
dec
repz
cmpsb
leave
daa
inc
mov
pushf
and
and
inc
jae
push
add
adc
sbb
leave
sub
test
cmp
jl
mov
mov
push
adc
xor
ja
js
xchg
cmp
mov
mov
mov
scas
dec
fcmovnu
sub
pusha
cmc
rcpps
inc
add
inc
test
call
enter
adc
mov
pop
mov
pop
cltd
cs
jle
addb
adc
lea
or
and
outsl
jmp
sti
sbb
jne
subb
mov
pop
xlat
xchg
lea
adc
aas
sub
movsb
mov
cltd
sbb
push
xchg
push
push
push
and
dec
out
or
fimuls
fistpll
dec
sbb
lret
std
sbb
xchg
insb
jns
dec
lods
ffree
enter
imul
mov
or
ss
imul
push
push
je
lea
sub
mov
stos
mov
push
ficoms
movb
or
sbb
lret
out
push
and
jbe
lret
mov
and
loope
mov
imul
pop
cmpsl
hlt
push
int3
mov
hlt
stos
jmp
add
test
leave
test
pop
lods
xor
cmp
inc
xor
mov
jo
jle
inc
notb
loope
mov
test
mov
ljmp
test
divl
sbbl
pop
cwtl
pop
in
sbbb
pcmpgtd
inc
push
imul
xor
imul
jns
dec
cmc
or
adc
test
pusha
in
inc
mov
adc
add
aaa
mov
fiadds
adc
les
cmpsl
aas
ret
pop
and
enter
aas
mov
xchg
divb
inc
inc
lods
add
aaa
cltd
pop
xchg
popf
dec
mov
fucom
mov
mov
sbb
mov
lret
cmpsl
add
pop
jp
mov
inc
mov
enter
cmp
push
mov
mov
xchg
subb
jbe
and
push
lds
repz
mov
sbb
sahf
cmp
dec
cmp
xor
test
fisubrl
jbe,pt
sbb
into
out
fmul
outsb
mov
out
xor
sub
sbb
fs
sahf
push
into
fs
mov
sub
stos
mov
pushf
out
pop
adc
lahf
pop
or
stos
inc
popa
inc
pop
cmp
mov
xchg
push
data16
icebp
jbe
xchg
add
add
and
pop
scas
repnz
scas
xor
pop
stos
or
insb
push
hlt
cmp
out
fwait
pop
stc
push
xchg
inc
sarb
mov
loopne
je
jp
jae
jnp
outsl
fisubs
ljmp
sbb
mov
cmc
dec
adc
iret
pushf
mov
or
fbstp
lcall
adc
sub
inc
or
sbb
or
push
fdivrl
sarl
or
cld
and
xchg
sbb
mov
fsubrp
jns
sub
lds
loopew
xchg
das
or
mov
les
dec
arpl
mov
shlb
adc
cmp
cmp
inc
jbe
cmc
icebp
xchg
cltd
lods
adc
inc
sub
add
cs
das
and
xor
inc
pushf
insl
nop
mov
scas
mov
pop
fwait
cmp
shrb
mov
xor
push
sbb
push
dec
inc
gs
es
sbbl
push
out
pop
test
jb
xor
out
pop
xchg
dec
pop
idiv
les
or
dec
and
or
or
incl
push
daa
aad
aas
fidivrs
outsl
lock
push
mov
out
insl
test
clc
insb
ret
or
pop
push
fs
dec
mov
fadds
mov
adc
mov
es
mov
dec
scas
mov
sbb
repnz
imul
filds
aaa
loopne
int3
pop
stos
sub
arpl
sbb
les
mov
pop
xlat
adcb
addr16
push
cmpsl
pusha
arpl
jp
fcomp
idiv
movsb
sbb
mov
add
xchg
xchg
into
int
xor
mov
jg
xchg
mov
in
lds
sahf
movsl
cs
push
das
scas
dec
ret
jl
inc
imul
lods
std
rcrl
into
add
lahf
or
sub
orb
ljmp
cmpsb
jno
push
pop
iret
sub
fstpt
xor
cmpsb
xor
int3
lock
iret
ja
imul
mov
fnstsw
add
out
xchg
or
iret
mov
and
dec
add
jns
mov
jp
sar
adc
jl
push
lea
jl
pop
daa
mov
xor
aaa
lret
pop
xchg
out
imul
sub
rclb
jb
inc
xchg
inc
push
fcoms
mov
jne
outsb
in
repz
test
xchg
pop
mov
cmpsl
fcomps
addb
mov
push
sub
rcrl
scas
ss
in
jg
fwait
lds
push
in
loopne
dec
ds
jo
adc
incb
stc
xchg
enter
dec
xor
les
int3
inc
adc
mov
sbb
out
push
clc
aad
sub
imul
mov
push
ss
mov
data16
outsb
push
lar
inc
stos
fwait
jl
int3
test
push
jo
xor
addb
jns
jl
push
mov
mov
sub
jae
lret
mov
push
ret
push
add
adc
dec
or
sbb
jo
push
sub
pop
mov
cmpsb
cmc
or
mov
mov
cmp
cmp
and
addl
insb
outsb
jg
outsl
insb
cld
jne
and
es
dec
lcall
cmp
dec
mov
xor
subb
jg
sbb
sbb
fstpt
inc
bound
push
inc
sub
nop
mov
mov
in
fs
adc
imul
loop
les
jne
addr16
pop
rorl
es
push
pusha
inc
in
lock
mov
mov
ljmp
lret
pushf
jp
mov
out
pop
cli
cld
push
push
jl
push
sbb
push
jo
push
inc
scas
icebp
sub
xor
out
leave
iret
pop
divl
adc
jo
mov
push
mov
int
pusha
repnz
add
push
cmpsl
pop
fsubrl
pop
popa
adc
flds
adc
lahf
sahf
xchg
sbb
pop
mov
mov
xchg
dec
mov
jmp
cmp
xor
lods
add
hlt
rclb
adc
pop
cmpsb
outsb
out
mov
fbstp
lcall
clc
push
add
shl
dec
fadds
add
ret
sub
pop
pop
nop
cmp
xor
ficompl
or
fcmovu
mov
popl
adc
mov
shll
jbe
jl
int
or
push
mov
mov
xor
fs
cld
pop
mov
sbb
movsb
mov
test
outsl
fnsave
arpl
jno
dec
insb
pop
in
pushf
cmp
pop
das
aas
xor
aam
in
daa
test
lods
nop
jecxz
push
out
adc
cld
insl
cmpl
inc
ret
inc
mov
cmp
imul
rcl
sub
pop
fstl
jge
arpl
pop
pop
mov
lods
pop
and
inc
xchg
xchg
out
push
lock
arpl
mov
icebp
imul
test
add
out
fsts
rolb
test
repnz
mov
popf
adcb
sbb
dec
push
in
mov
add
lret
xchg
cs
adc
fs
rclb
push
out
mov
dec
shrb
jecxz
std
mov
nop
nop
push
lret
ds
iret
icebp
push
aaa
ja
ror
xchg
mov
outsb
sbb
in
les
xchg
xor
add
mov
leave
cltd
sti
fildll
mov
xor
adcl
call
cmp
sub
cmp
sub
nop
fwait
clc
test
or
lock
inc
mov
nop
std
mov
dec
loop
into
pusha
sbb
mov
jl,pn
arpl
and
pop
xchg
add
pop
lret
dec
aam
mov
jne
fdivl
sub
cld
add
aad
jg
pop
ja
ficoml
enter
inc
cmpsl
mov
js
push
scas
mov
inc
dec
mov
movsl
push
mov
subl
jns
push
out
hlt
xchg
popf
out
dec
sub
mov
or
push
aad
cmp
sbb
loop
dec
jne
fisttpll
xor
cltd
sbbb
sub
cltd
pop
sub
inc
and
push
push
pushf
xchg
sub
jmp
loopne
lret
and
leave
pusha
push
push
cmpsb
shll
dec
cmpsl
or
push
inc
inc
jl
negl
add
sub
arpl
pop
cmpsl
or
inc
out
jmp
bound
loopne
push
mov
mov
fists
out
and
outsb
jae
in
inc
into
jmp
or
in
jns
push
xchg
movsl
nop
mov
mov
mov
dec
jb
and
in
test
insl
mov
iret
stos
fucomip
aad
scas
test
stc
sbb
insl
ss
jno
xor
ljmp
xchg
cld
or
cmp
mov
mov
lock
repnz
rclb
rcl
add
icebp
add
sbb
pop
pop
xor
mov
inc
fistpll
sti
push
gs
jmp
adc
js
test
sbb
aad
aad
ret
xlat
test
ret
stos
mov
jb
sub
outsb
or
ds
adc
ljmp
sbb
mov
inc
call
ret
pop
mov
push
add
jmp
adc
mov
sub
xor
jne
jnp
sbb
lock
jmp
mov
call
ret
lahf
ret
xchg
or
mov
cltd
mov
and
adc
insl
push
adc
push
addr16
pop
push
lcall
mov
lds
mov
cltd
sbb
jge
addr16
ja
sbb
add
and
outsl
gs
in
insb
inc
mov
daa
dec
iret
add
and
adc
repnz
das
mov
popa
push
nop
js
gs
inc
jbe
js
cmp
outsl
pop
inc
sbb
sbb
int3
add
cmpsl
fsubp
mov
notl
in
test
popa
cmp
dec
popa
inc
sahf
dec
pop
aam
and
mov
push
push
popa
ret
sub
add
in
cmpsl
imul
in
add
adc
jb
pushf
cmp
sub
jbe
add
dec
in
mov
lret
gs
int
jp
cmpsl
shlb
outsb
loop
push
cmp
xor
stos
adc
mov
scas
sahf
int3
or
loopne
clc
stc
pop
sub
out
pop
mov
jmp
stos
and
mov
jo
lret
inc
push
jg
int
testb
nop
xor
add
mov
ljmp
stos
loopne
loop
mov
dec
pop
xchg
rol
pop
shr
cmp
mov
lock
mov
inc
jmp
je
adc
mov
ja
mov
dec
pop
jns
cs
and
push
sub
cmp
push
cmp
or
aam
mov
sub
ljmp
bound
gs
xchg
sub
idivb
fcmovnu
dec
int3
decb
mov
cmp
cmc
jg
out
or
push
cmpsb
pop
call
lret
dec
mov
jnp
in
test
mov
and
pop
icebp
and
dec
push
insb
xchg
mov
aad
inc
ds
mov
scas
adc
shrl
loop
hlt
icebp
cld
outsb
add
adc
ret
pminsw
sub
daa
cmp
cmp
xchg
adc
cld
lar
mov
lcall
sahf
int3
seta
repz
adc
pop
insb
addr16
and
fcoml
cmp
adc
shll
pop
adc
les
ret
lahf
mov
jg
icebp
cmpsb
push
pop
and
lret
sahf
icebp
xchg
out
lahf
push
pop
out
dec
aas
mov
movsl
push
jb
inc
pop
cmpsb
hlt
stos
adc
idivl
mov
and
iret
mov
xor
jg
push
xchg
xor
nop
adc
int
mov
xor
hlt
mov
scas
insl
adc
nop
jl
fisubs
hlt
push
pop
std
mov
xor
loope
pop
dec
adc
push
sub
jae
into
or
mov
jnp
int
mov
sbb
stos
movzwl
dec
mov
dec
jae
sub
pop
flds
mov
dec
shlb
mov
dec
add
adc
mov
dec
out
lods
mov
inc
inc
xchg
mov
test
jecxz
push
rcrb
cs
js
test
testb
cmp
cltd
es
pop
xchg
lock
or
cmp
jmp
fidivl
lods
jg
push
sbb
mov
aam
xor
iret
imul
push
push
call
inc
or
and
idiv
lcall
push
fistps
int
push
or
test
sbb
adc
or
ljmp
jbe
push
dec
rol
sbb
xchg
sub
sbb
pop
sub
and
test
jno
out
outsb
mov
roll
int
out
inc
fdivrp
repnz
rorb
enter
mov
jnp
mov
mov
call
js
pop
andb
sahf
jno
rclb
lret
rorl
pop
test
outsl
das
pushf
sti
rorb
add
psubusw
sbbb
sub
inc
int3
xchg
dec
les
repnz
mov
add
int
pop
xlat
mov
call
mov
mov
out
lods
xchg
test
push
add
jle
popf
inc
or
std
adc
inc
sbb
dec
loop
test
aad
add
into
adc
jae
and
or
pushf
sub
sbb
andl
js
cld
mov
cmp
or
mov
fwait
mov
inc
push
sbbl
in
pop
and
popf
daa
fldt
jle
hlt
adc
push
and
inc
cmpsb
add
sub
or
sub
pop
jg
sub
lahf
cmpsl
cmp
mov
sub
dec
add
cmp
adc
lcall
push
in
dec
aam
rolb
pop
pop
adc
add
mov
sub
pop
or
mov
cmpsl
fldl
xchg
movsb
movq
push
sbb
xchg
das
in
test
lods
std
les
mov
mov
push
push
mov
or
cmpsl
mov
std
xor
jmp
add
ss
xchg
xor
add
xchg
sahf
mov
in
pop
lahf
loopne
iret
popa
out
mov
icebp
or
xchg
test
insl
dec
push
jge
xlat
jae
aad
pusha
mov
insb
and
and
mov
in
sbb
es
bnd
and
hlt
lcall
mov
cmc
jo
pop
mov
enter
rcrl
xchg
outsl
mov
mov
jle
fstpl
lea
int
fadds
in
sub
add
insl
jecxz
cmc
bound
push
or
loop
iret
lcall
push
pop
push
sub
fistpl
push
dec
cmpsb
jg
out
rcrb
scas
pop
pop
mov
inc
add
outsb
insb
stos
rcr
aaa
aaa
push
adc
push
mov
xor
pop
pop
jb
int
pop
xorl
fidivs
add
pop
sbb
sbb
stos
jmp
sub
adc
in
leave
and
adc
cltd
adcb
leave
icebp
enter
adc
push
lods
in
pop
pop
xchg
push
xchg
pop
jg
insl
xlat
jne
jb
out
int
nop
negl
test
and
mov
or
adc
aam
mov
sub
lret
xchg
adc
dec
pop
mov
repz
stos
mov
mov
cmp
add
movsl
push
xchg
outsl
jns
pop
xlat
or
in
and
test
clc
or
mov
mov
or
push
xchg
adc
push
pop
mov
xor
adc
fs
push
enter
add
ret
vcomiss
popa
daa
pop
inc
dec
dec
jmp
fucomp
mov
cmp
popf
cmp
dec
inc
add
aam
push
rclb
xchg
shrb
mov
stos
out
sbb
jno
test
or
and
fwait
gs
out
sahf
test
fists
or
xchg
cmp
inc
aaa
xlat
shrb
lea
out
testb
inc
pop
inc
add
push
loope
pop
dec
mov
jle
call
adc
push
lods
cmp
adc
xor
dec
filds
push
pop
cmpsb
jmp
push
in
jne
iret
subb
xchg
shr
pop
xchg
cltd
fsubs
fcoms
adc
dec
lods
arpl
out
pop
mov
push
and
lcall
lods
lret
and
inc
fwait
les
hlt
iret
jmp
loopne
dec
sbb
popa
sub
or
cmc
ss
ds
loopne
or
imull
jmp
inc
mov
sbb
push
movsl
dec
pop
movsl
mov
jo
insb
js
cmpb
push
icebp
xlat
aas
iret
jo
pop
sbb
xchg
sarb
aad
sub
ja
shlb
jge
out
iret
cmp
fsubs
ret
in
sbb
inc
adc
fwait
out
out
sub
mov
xchg
lret
popa
or
in
push
in
lods
into
jns
adc
push
mov
cmc
push
inc
rclb
pop
add
data16
and
popa
pop
or
loop
lcall
pushf
dec
dec
fucomi
xchg
cmp
es
pop
xchg
xor
mov
add
lret
pushf
outsb
repnz
xchg
adc
mov
dec
enter
std
jae
subl
sub
es
xor
ss
pop
dec
test
out
adcl
lods
cmp
data16
repz
fildll
xorb
push
xchg
add
push
mov
sub
addr16
in
fwait
call
mov
add
shlb
jne
push
xchg
loopne
cld
adc
jecxz
mov
mov
mov
xchg
mov
dec
int3
inc
and
aad
aam
mov
test
add
pushf
pop
xlat
jnp
mov
pop
cmp
and
sti
ss
data16
lcall
std
jne
add
inc
dec
adc
scas
aaa
cld
in
pop
and
jle
dec
sub
cmp
mov
fdivrp
xchg
rolb
cmpb
test
cwtl
cmpsb
fisttpll
out
dec
les
mov
and
pop
push
xorb
push
mov
sub
pop
pop
cs
sti
and
cmp
jle
push
push
repnz
add
push
xor
addl
or
negl
mov
int
pop
stos
sub
aas
inc
sbb
mov
popf
jecxz
cmp
pop
hlt
nop
push
add
push
jns
jmp
xchg
cwtl
bound
add
mov
or
xor
test
out
pop
lret
cmpsl
hlt
std
add
fldenv
mov
mov
mov
lcall
aas
popf
addb
pop
fstps
test
aad
fnstenv
or
scas
subb
jg
mov
imul
std
in
add
dec
or
int
sbb
add
mov
add
sbb
adc
shrl
shlb
fbstp
jp
dec
std
push
xchg
sbbb
or
loope
arpl
xchg
or
xor
lds
loopne
jno
cmp
dec
orb
xchg
push
fcoml
dec
popa
push
push
push
mov
push
popa
nop
sbb
sbb
dec
pop
jae
dec
xchg
pop
mov
scas
je
and
or
leave
cmpb
inc
jb
lods
lods
push
fbld
stos
add
test
cmp
lods
rcll
cs
je
shll
out
sahf
cmp
jne
mov
mov
push
pop
and
cli
cmpsl
test
jl
scas
push
leave
or
out
int
cmpsb
mov
repnz
arpl
int3
jge
aas
out
enter
out
call
shll
ficompl
call
jnp
bound
rcrl
cmp
loop
pop
pop
xor
mov
mov
mov
dec
mov
jmp
add
dec
ss
js
inc
aaa
in
xlat
loope
fadds
sub
lret
dec
ss
test
sub
and
xchg
cwtl
shll
adc
call
movsb
bound
int
push
fistps
in
xor
les
lret
imul
inc
mov
int3
cltd
lahf
in
andnps
push
pop
jmp
ljmp
and
mov
xchg
sbb
pusha
dec
rcl
icebp
sub
inc
cmpsb
cs
xor
ljmp
icebp
lcall
push
movsl
mov
add
aam
ret
iret
pushf
cmp
sub
mov
leave
arpl
pop
cmp
cwtl
mov
aas
cmp
cmpsl
test
movsb
mov
xlat
pop
pop
and
cs
mov
xchg
jo
imul
inc
cld
bound
ds
xor
jg
lahf
xor
push
scas
bound
popa
jbe
mov
cmpsb
fwait
cmpsb
inc
sbb
mov
or
in
popf
fsubrl
shrb
sub
inc
daa
push
rorb
xchg
fld
xchg
sub
add
pop
flds
or
or
adcb
repz
iret
shlb
push
dec
mov
push
push
jl
cmp
stos
lret
test
xor
xor
aam
cmpsw
insl
mov
mov
fldenv
scas
mov
pop
fimuls
or
gs
movsl
in
inc
sub
xlat
jmp
inc
push
push
and
subl
pop
js
pop
loopne
nop
pop
mov
dec
fidivrl
jmp
mov
pop
addr16
cli
jg
fs
push
or
cmp
xchg
mov
xchg
stc
das
fisubrl
ret
mov
adc
roll
sbb
mov
call
jo
push
ret
add
and
mov
dec
imul
movsb
hlt
push
lock
cmp
dec
cmp
adc
pop
fnsetpm(287
jbe
adc
jne
shlb
adc
add
lea
xor
stos
cld
insl
xor
xchg
mov
sahf
scas
dec
inc
lea
dec
jnp
popa
xchg
imul
repnz
loopne
lcall
iret
lea
scas
scas
mov
mov
jne
pop
or
jle
aam
inc
mov
xchg
dec
inc
push
dec
js
jno
sti
inc
das
mov
mov
inc
aam
lock
pusha
fiadds
outsb
mov
adc
and
push
mov
mov
sub
shl
dec
repz
lock
push
push
add
ficoml
loopne
es
or
aam
sub
pop
cmc
popf
mov
test
mov
popf
out
xchg
in
nop
xchg
mov
enter
iret
add
andb
and
adc
mov
scas
mov
xchg
mov
adcl
gs
jge
pushf
ljmp
jbe
jp
outsb
out
imul
aad
adc
clc
clc
and
iret
xor
pushf
ljmp
mov
dec
pushf
add
rcr
xchg
xchg
lret
in
pop
loop
mov
sub
daa
lods
fcompl
shr
jae,pn
ja
or
mov
or
xor
lods
inc
xor
cld
dec
jecxz
sub
imulb
out
ss
clc
and
push
std
hlt
incl
test
bound
arpl
pop
push
loop
call
dec
xor
mov
mov
or
xchg
add
jno
xlat
xchg
data16
in
ss
pop
out
mov
sbb
fldcw
mov
xor
jl
xchg
pop
add
xchg
mov
sbb
sbb
and
xor
out
out
movsl
mov
sbb
mov
mov
inc
pop
ds
xchg
cwtl
ficoml
add
movsb
fiaddl
sti
pop
mov
or
adc
xchg
pop
out
pusha
mov
push
cmp
mov
push
sti
lret
push
in
dec
mov
xchg
mov
lea
inc
mov
sahf
and
lahf
lret
xchg
sbb
sub
andl
imul
cmp
ret
add
ss
xchg
sahf
fadd
pop
pop
xchg
iret
movsl
stc
mov
or
out
lods
addb
add
xor
push
mov
mov
mov
xor
mov
pusha
in
add
mov
pop
insl
in
push
sub
out
jae
push
stos
pop
in
add
fs
and
jmp
aaa
aad
jecxz
sti
xlat
dec
cmp
lods
call
orb
and
mov
mov
outsb
add
out
sbb
idiv
jecxz
popa
sahf
xlat
pop
xchg
das
inc
jecxz
inc
stc
sub
fdiv
aad
pusha
mov
adc
lret
notrack
std
or
mov
iret
and
push
jge
dec
push
xor
xor
shll
out
imul
loope
rorb
jb
push
test
addr16
rcrl
arpl
cwtl
push
and
jns
cli
sub
inc
jo
gs
arpl
loopne
xchg
insb
jge
xor
xor
push
sub
sahf
popa
inc
int
js
std
adc
push
pop
es
ljmp
sub
mov
fimull
or
dec
push
sbb
adc
sub
xor
loopne
clc
xor
mov
fwait
push
stos
xchg
push
push
mov
test
or
jbe
push
pushf
adc
outsb
divl
xchg
mov
mov
mov
nopl
or
arpl
pop
int
jbe
in
cmp
lcall
incb
and
xchg
pop
enter
mov
mov
mov
xor
daa
mov
mov
mov
mov
in
cwtl
aas
clc
mov
push
dec
or
mov
cmp
jnp
pop
gs
mov
push
cmpsl
outsb
das
pushf
inc
sbb
aam
xor
push
lret
arpl
jae
dec
call
lods
mov
pushf
pop
imul
xchg
je
xchg
inc
inc
add
out
mov
and
aas
add
stc
stos
push
mov
cwtl
outsb
es
pop
shr
mov
push
inc
sub
cmp
mov
add
lods
or
pop
inc
adc
cmp
mov
mov
mov
je
mov
clc
adc
nop
popa
push
push
bound
pop
stc
enter
lret
ljmp
pushf
and
mov
shl
or
push
je
xor
jle
loope
sub
dec
inc
mov
sbb
jge
cmp
out
loop
and
testl
and
cmp
lea
stos
xor
pusha
ss
in
sub
sub
add
fcompl
into
sahf
lret
popf
call
lds
shll
mov
adc
leave
nop
mov
cmp
scas
loopne
out
pushf
jecxz
movsb
dec
jns
sub
add
arpl
bnd
push
pop
add
push
ficomps
std
cmp
loop
scas
and
mov
xchg
push
es
gs
jbe
test
jbe
add
es
mov
pop
and
arpl
push
mov
fs
mov
adc
pop
pop
pop
jno
jmp
push
or
sbbl
add
mov
mov
ret
movsb
sub
pop
in
popf
cmp
mov
iret
xor
lock
and
and
repz
sub
add
aas
pushf
popf
mov
arpl
scas
loopne
adc
cmp
xchg
mov
mov
insb
sub
jecxz
shrl
push
stos
sbb
push
inc
iret
int3
pop
add
outsb
jno
mov
fs
or
in
jge
insb
cs
jle
xor
je
mov
lcall
inc
outsb
jb
aaa
pop
aas
and
jo
mov
int3
std
push
add
jb
xor
inc
add
cmp
xchg
and
ret
popf
or
inc
inc
pop
jmp
adc
xchg
sarl
pop
dec
mov
pop
imul
xor
in
pop
mov
inc
add
or
mov
out
pop
mov
xchg
repnz
fsubrs
scas
je
lds
pusha
js
inc
pop
pop
dec
pushf
inc
fs
lock
or
sbbb
insl
sub
xchg
rolb
leave
cwtl
lcall
jp
jne
sbb
cli
pop
sbb
ret
xor
or
sar
cmpsb
imul
mov
roll
outsl
aaa
add
mov
mov
cwtl
xchg
fisubrl
aas
stos
and
fwait
sub
cmc
popf
je
cltd
xchg
push
xchg
loop
jno
xchg
push
mov
mov
xchg
or
testb
sbb
cmpsl
les
out
jb
cmc
insl
mov
sarb
stos
mov
aad
lods
repz
mov
ret
stos
int3
rcll
adc
dec
sbb
into
xchg
hlt
cwtl
push
lods
xchg
iret
xor
fisttps
dec
ja
pop
addr16
xchg
sbb
mov
pushf
jae
pop
ror
es
mov
stc
notb
adc
std
out
scas
mov
call
jb
out
sbb
int
mov
ss
adc
lods
out
cmpsl
jbe
stos
insl
testl
les
xchg
test
aam
mov
add
cvttps2pi
insl
ljmp
imulb
int
test
out
sbb
and
add
lods
enter
and
rorl
aas
or
stos
push
or
daa
adc
pop
outsb
sub
addr16
loop
mov
pushf
add
dec
inc
stos
in
imul
loopne
mov
test
jo
pop
sahf
iret
fistl
adc
testl
nop
cli
adc
xchg
imul
testb
es
cmp
lods
dec
cli
in
lahf
int3
je
mov
in
test
cmp
pop
stc
test
mov
arpl
fdivr
jg
fcomps
cli
cmpsl
repnz
push
mov
cli
mov
lods
je
sbb
push
push
mov
inc
clc
pusha
aaa
push
fsts
push
mov
or
pusha
xor
jle
inc
mov
add
mov
adc
or
adc
mov
adc
xor
mov
adc
mov
sahf
aad
push
lcall
or
add
stos
pop
push
jb
mov
jno
xchg
xor
mov
mov
adc
in
sbb
dec
test
mov
mov
sbb
cwtl
sti
mov
in
sub
cmp
rclb
jecxz
pop
mov
mov
mov
lods
push
lret
jo
inc
out
les
inc
sbb
shlb
xor
push
cmc
fs
xlat
cmpsb
lret
push
dec
in
cwtl
xor
mov
pop
repnz
test
fs
rcrb
jge
cmp
fwait
cmp
out
pop
aas
dec
lret
mov
and
mov
les
rcll
or
push
or
decl
ret
imul
stc
or
int3
mov
xchg
pop
mov
sahf
out
sub
add
jmp
jge
sbb
nop
outsl
enter
adc
enter
adc
adcl
frstor
add
scas
xchg
dec
push
pushf
or
test
stos
pop
sbb
jb
dec
inc
popf
clc
call
sub
or
sti
js
sub
movsl
fwait
mov
test
pop
daa
jne
push
push
shrb
scas
mov
test
dec
pop
iret
xchg
pop
loop
xor
and
cld
or
push
loop
nop
les
push
or
or
xor
ret
jae
ret
out
sbb
sub
pop
addr16
loope
xchg
xor
sbbl
shlb
outsb
xchg
and
int
adc
hlt
imul
sub
mov
sub
std
xor
and
jae
mov
mov
pop
ja
mov
sahf
mov
mov
jno
je
into
popa
mov
xor
std
push
xchg
mov
inc
push
sub
sbb
or
push
dec
sub
imul
sub
sub
imul
jmp
xlat
push
push
ja
ret
mov
cmpsb
push
jecxz
and
mov
cwtl
push
inc
int3
stc
dec
sbb
rolb
pop
mov
xchg
or
jb
jne
pop
jge
into
je
xchg
sbb
les
and
in
ss
push
sbb
ret
cmp
sti
cmpsl
fistps
lods
fadds
pushf
nop
cwtl
fdivr
cwtl
fwait
sti
add
xor
or
test
adc
loopne
imul
dec
shrb
out
stc
xor
clc
stos
mov
ficoml
fldenv
das
pop
std
jge
call
cmp
pop
insl
mov
scas
dec
aad
movsl
jecxz
push
jecxz
cmp
addr16
mov
mov
jbe
lods
xchg
xchg
out
out
push
mov
lcall
xchg
adc
xchg
leave
loope
cmp
fildll
xor
inc
sahf
ja
std
dec
adcl
add
mov
or
fwait
scas
mov
mov
sar
int3
add
mov
sub
lahf
or
mov
shlb
ljmp
ja
sbb
mov
inc
jno
and
jge
lahf
jle
pop
sarl
pushf
cmpb
jl
xor
outsl
test
dec
imul
jecxz
cmpsb
popa
xchg
xchg
mov
lea
xchg
push
movsl
mov
add
jle
std
push
iret
mov
and
add
mov
arpl
ret
aad
ja
cmp
push
sbb
mov
mov
adc
sbb
lahf
stos
test
divps
dec
mov
sahf
aaa
shll
mov
lock
lea
push
loopne
jg
pop
std
push
mov
mov
ss
or
hlt
mov
xor
cmp
push
test
mov
scas
leave
test
inc
pop
test
push
cmc
stc
mov
dec
sti
xor
fadds
aaa
jns
or
push
sub
mov
fwait
sub
int
adc
stos
pushf
mov
jmp
lahf
fcmovu
arpl
ret
js
ret
andl
and
lret
dec
aad
mov
imul
mov
jnp
orl
cmp
aam
xchg
xor
in
aam
clc
imul
adc
mov
jno
fdivrs
adcb
inc
inc
pusha
push
incb
outsb
fistpll
or
addr16
jl
ds
mov
xchg
iret
inc
and
imul
test
mov
and
inc
rcrb
mov
cmp
mov
pop
out
mov
lret
clc
pop
sbb
sbb
call
xchg
push
lds
sbb
jae
push
in
int3
adc
add
jae
xor
inc
xchg
pop
das
push
icebp
ret
inc
push
iret
xchg
jne
jno
fcom
sahf
cmp
mov
xor
mov
push
and
or
and
mov
cmp
mov
or
add
cmp
xorl
test
lea
cmp
xchg
pop
xor
jle
int3
sbb
jbe
push
aaa
push
aas
movsl
jae
cld
jmp
inc
adc
lods
lods
cmp
add
mov
aad
mov
sub
loope
jb
mov
bound
cmp
push
xor
fidivrs
cs
ss
jns
xor
xchg
and
cmpsb
push
pop
es
sub
mov
jbe
mov
jno
test
mov
aas
or
lods
fcompl
out
test
pop
lcall
push
aaa
adc
out
sbb
repz
and
inc
mov
mov
lcall
in
stos
jmp
gs
js
and
pop
mov
in
pop
push
out
mov
fldln2
jae
lock
mov
int
mov
lods
pop
sub
cltd
inc
jae
and
incl
ret
jg
imul
sti
incl
cwtl
std
cmp
push
adc
minps
stos
mov
je
lret
jno
lods
adc
je
addr16
or
xor
push
sub
jmp
dec
and
daa
outsl
ja
aad
clc
addr16
dec
inc
mov
mov
jo
fmull
js
ds
jge
stc
xchg
cld
loope
nop
or
sub
xor
mov
int3
rclb
out
clc
push
fisttpll
mov
out
cs
out
fst
xchg
mov
ds
lret
dec
ss
popf
adc
xor
cld
jb
dec
lret
mov
mov
fcoms
ds
and
add
mov
mov
fs
jle
jnp
or
jne
bound
les
sbb
les
xor
popa
mov
cmp
leave
xor
in
mov
addr16
mov
xor
mov
cmp
xlat
std
ret
out
pop
sbb
aam
mov
xchg
popa
lea
dec
jbe
jle
and
jno
pop
arpl
push
lahf
std
popf
arpl
test
push
or
mov
fwait
lock
push
adc
jne
sbb
jmp
popa
xor
sub
mov
aas
add
fistpl
cmp
dec
dec
das
mov
and
repnz
adcb
addr16
fnsave
pop
cmp
cmp
fsubrs
lock
mov
sub
ja
int
jle
sbb
pop
test
adc
cltd
fisubrl
sti
jnp
xor
push
pushl
xchg
or
outsb
xchg
subb
hlt
hlt
outsb
mov
icebp
and
inc
enter
ret
dec
mov
test
aas
add
cwtl
push
arpl
cmp
push
inc
in
cmp
sub
out
out
and
pop
jmp
das
cmp
cmpb
aaa
jl
inc
mov
jecxz
adc
mov
jae
push
ret
cmp
scas
xor
inc
inc
push
xchg
or
in
data16
or
repz
addr16
mov
dec
xlat
inc
dec
mov
and
test
push
dec
xlat
aam
mov
mov
add
aaa
imul
in
inc
out
jl
test
or
pop
ret
ja
add
pop
fisubl
cmp
pop
repnz
repnz
outsl
mov
sub
push
lcall
sarl
insl
pop
shl
mov
push
adc
popf
inc
ss
mov
sub
and
popf
sbb
loope
leave
xchg
test
xchg
daa
mov
je
cwtl
push
jl
imul
loopne
or
xchg
les
inc
popf
xor
mov
aaa
pushf
in
inc
rcrb
fs
gs
int
stos
lret
nop
sub
leave
cmp
sub
pop
dec
dec
fnsave
mov
fdivrl
icebp
nop
jb
lret
mov
xchg
jl
add
popa
or
pusha
xchg
enter
push
lods
jno
les
mov
aaa
xchg
jne
js
cmc
into
int
push
into
fldz
aad
shl
adc
lret
xor
mov
mov
jns
mov
add
sbb
dec
sub
mov
add
push
xchg
pmaddwd
push
jnp
add
and
cli
loop
mov
cltd
push
loope
mov
dec
dec
notb
lea
xor
inc
xchg
mov
out
dec
or
repnz
cltd
sub
sub
xchg
sbb
push
adc
loop
mov
mov
mov
popa
sub
adc
dec
stos
jo
subb
mov
dec
sbb
popl
clc
shrl
sub
stc
stos
mov
pushf
xorb
sahf
lods
int
ja
out
adc
iret
fldt
mov
pushf
pop
vphadduwq
hlt
and
dec
mov
pop
push
xchg
test
rdmsr
gs
ja
jnp
lret
lods
les
popf
out
imul
loop
hlt
stc
jge
test
or
inc
xchg
enter
arpl
aam
gs
push
cmp
lods
ljmp
xchg
cmp
xorl
out
and
fstl
aaa
ja
repz
add
dec
adcl
mov
sbb
lds
sbb
std
movsb
pushf
jmp
xlat
sub
idivl
mov
add
cmpsl
fdivrp
or
inc
mov
cli
sub
pop
or
aaa
daa
ret
popa
cmc
scas
icebp
cmp
mov
sub
and
adc
outsb
dec
je
cwtl
jge
xor
in
cli
adc
xchg
or
iret
adc
test
orb
pop
pushl
nop
jo
mov
xchg
pusha
inc
scas
test
sbb
xchg
xor
mov
dec
cwtl
insb
pop
les
das
js
and
mov
test
fiaddl
dec
repnz
dec
push
jo
hlt
aas
mov
pop
gs
or
addb
mov
divb
insl
and
data16
sbb
repz
mov
lea
jnp
adc
rcrl
jl
dec
dec
cli
insl
dec
xchg
dec
adc
nop
xor
dec
add
ja
cmp
aas
inc
aas
dec
cltd
push
mov
mov
mov
push
mov
mov
add
mov
push
int3
jg
lret
jns
in
mov
mov
ljmp
divl
test
out
out
stos
ret
loop
rolb
loop
adc
insb
outsb
and
pop
pop
mov
push
xor
mov
ficoml
add
aas
mov
push
adc
gs
arpl
push
sbb
in
adc
fnstcw
xor
mov
pop
pop
and
sub
ficompl
test
mov
jg
pop
data16
push
jb
and
mov
push
mov
out
rorb
mov
ljmp
inc
ficoms
js
add
dec
jb
mov
insb
sub
jbe
pop
test
sbb
jle
shrl
and
pop
loop
sub
ret
fstpt
mov
or
sub
inc
ds
jns
push
xor
cmp
and
stos
subl
adc
movsl
jmp
xor
mov
push
loopne
jmp
push
cli
push
mov
aaa
outsl
mov
dec
shr
xor
xchg
stos
ds
cmpsl
push
imul
cmpb
test
adc
sub
test
mulb
nop
pop
and
test
cmovle
or
repnz
inc
mov
sbb
xor
xor
fstpl
mov
sub
sbb
fcmovbe
mov
adc
cmpsb
add
pop
fnstsw
or
sub
arpl
movsl
ficoml
and
mov
call
xor
lods
rolb
int3
fidivrl
push
pop
mov
fs
pop
mov
insl
iret
mov
cmc
cmp
lahf
push
das
lahf
sub
cltd
repnz
out
popa
lea
jge
roll
sub
pusha
sbb
and
repnz
imul
push
pushf
in
out
icebp
shll
xchg
fadds
lret
xchg
cmp
fwait
xchg
stc
sbb
sub
lods
mov
test
dec
outsl
std
sub
loopne
ret
sbb
loopne
xchg
pop
sub
cli
mov
stos
pop
cmc
mov
pop
push
pop
adc
mov
scas
jle
fwait
icebp
jae
and
fsubrl
dec
cmc
repnz
or
mov
lcall
cli
cmc
add
in
cmovo
rol
fildl
inc
xor
xlat
pusha
push
outsb
jbe
or
mov
pop
shl
pop
jmp
jo
fnstcw
add
inc
sub
enter
jns
leave
fwait
push
mov
mov
add
inc
or
aam
push
dec
repnz
inc
mov
ljmp
shl
xchg
bound
xchg
mov
test
sbb
sbb
addr16
push
pop
call
xor
push
mov
stc
jae
shl
mov
xchg
gs
loopne
scas
mov
outsb
daa
outsl
push
idiv
jle
scas
inc
dec
fsubrs
aaa
andb
aad
lahf
shl
push
adc
add
pop
sbb
loope
mov
jae
mov
cld
cwtl
jmp
mov
inc
std
cmp
jle
dec
arpl
fisubs
lock
clc
hlt
xor
fldcw
sub
andb
movsb
test
and
bsr
cwtl
std
mov
imul
test
or
jb
popa
xor
mov
push
jno,pt
test
insl
dec
rclb
sbb
or
loopne
inc
call
sbb
into
fldenv
pop
nop
xchg
lahf
insb
inc
cmp
cmp
adc
rcrl
push
clc
neg
inc
popf
jae
rcrb
push
cmp
xor
int
lds
or
inc
rorb
mov
jmp
insb
mov
xchg
push
inc
stos
pop
movl
popf
test
or
add
mov
jl
lock
add
sub
jb
pop
push
cmp
repnz
loope
jmp
mov
int3
add
pop
xor
xchg
cld
mov
addr16
adc
jp
jnp
sbb
bound
test
lcall
ret
mov
std
adc
dec
cmc
inc
mov
lods
sub
popf
idiv
add
xor
mov
pusha
stos
sub
pop
mov
adc
ret
inc
inc
mov
push
add
dec
sbb
popf
inc
rorl
int
lcall
add
cmpsb
mov
jns
inc
push
roll
cmp
sbb
dec
fcoml
shrl
pop
loopne
lret
mov
xchg
andl
push
mov
adc
fadd
test
mov
roll
dec
loopne
lret
mov
add
sbb
loop
pop
ja
sub
ljmp
adc
inc
incb
daa
jg
rcl
cmpsl
hlt
out
pop
or
data16
fistpll
mov
push
push
mov
adc
sbbb
xchg
pop
fwait
sti
push
aaa
jo
jne
cmp
ljmp
repnz
js
jg
cmpl
arpl
or
out
or
scas
aad
pop
push
adc
lahf
lcall
iret
jecxz
sbb
pop
xlat
xor
popf
mov
dec
roll
xchg
pop
xor
les
pop
lret
inc
mov
mov
jne
pop
pop
pop
cmp
jo
mov
and
inc
push
adc
inc
ljmp
out
xchg
push
icebp
arpl
clc
fimuls
push
or
pop
lret
xor
dec
pusha
adc
fcmovne
shl
xor
mov
mov
cmpsl
xchg
push
lds
push
pop
lahf
mov
scas
sbb
std
inc
fmuls
push
dec
pop
jmp
lahf
or
mov
stc
cmp
mov
subb
hlt
idivl
xchg
sarl
adc
mov
out
ljmp
mov
xlat
in
popa
xchg
push
jg
iret
mov
sti
jne
sub
or
ss
sbb
call
and
std
fs
or
inc
jecxz
inc
scas
fs
adc
push
out
cmpsl
lret
loopne
test
lods
jp
rorl
mov
insl
mov
mov
lret
sbb
in
jne
mov
add
in
bound
xchg
sub
adc
repz
jb
popf
lds
xchg
cwtl
insb
push
lret
sub
adc
add
mov
pop
sbb
cmp
int3
inc
sbb
addr16
loopne
jmp
jl
sbb
jae
pop
sarl
xor
and
cltd
push
xchg
cwtl
mov
sbb
bound
cltd
outsl
xchg
mov
mov
sahf
imul
shll
les
xchg
mov
mov
les
out
aam
cmp
jno
mov
jl
mov
scas
imul
push
cmpsb
idivl
orl
push
call
aaa
test
push
mov
test
jecxz
xchg
ss
fimull
rclb
lods
arpl
xorl
fadds
clc
lock
addl
outsb
ret
hlt
cmp
pop
push
fnstcw
stos
inc
sbb
pop
in
mov
mov
cmp
aam
icebp
lret
sub
fsubr
fcomps
mov
test
out
sahf
movsl
lret
fmull
das
loop
stos
or
pusha
scas
mov
adc
in
shrb
inc
test
out
addr16
scas
jns
cmp
les
push
xchg
loop
out
mov
js
les
jo
aaa
push
xchg
int
in
ret
pop
bound
mov
jne
inc
mov
jbe
out
cmp
sbb
aam
mov
imul
lods
jmp
lock
jno
cs
mov
push
xlat
inc
mov
mov
scas
outsl
mov
aad
and
dec
movsb
aad
cmp
pop
imul
xlat
mov
lods
jno
and
test
loopne
ffree
loopne
mov
mov
cmpsl
aad
push
xchg
pop
popa
out
pop
sar
test
dec
insb
push
cmc
lods
dec
cmpsb
push
arpl
test
out
hlt
mov
lret
ljmp
mov
sub
pop
in
fldt
xchg
and
adc
ror
lcall
dec
xor
ds
jns
mov
cmp
pushf
stos
and
test
adc
cs
mov
fwait
xchg
cld
in
es
sbb
inc
mov
repnz
xchg
hlt
adc
cvtpi2ps
xchg
adc
mov
xor
push
xor
add
imul
outsl
lcall
cmp
cmc
pop
push
shrl
data16
adc
sbb
rol
mov
jmp
movsl
and
jg
rorb
dec
gs
inc
pusha
out
fidivl
pop
je
adc
add
push
mov
dec
inc
ja
fcomps
push
mov
mov
or
scas
adc
jno
push
xor
stos
cmp
xor
jae
jge
movsb
xor
popf
movsl
fsubl
ret
sbb
xor
shrl
sarl
push
jmp
mov
push
mov
lods
repz
push
fstpl
pop
xlat
into
clc
das
lea
adc
mov
and
and
dec
dec
or
inc
mov
jle
push
cli
movsb
aad
cmp
daa
push
sub
or
cmc
je
sti
rcrl
rcl
or
mov
ja
cmp
pop
push
dec
bound
or
pop
inc
xor
or
cltd
popa
inc
int
hlt
imul
ret
in
mov
jle
sbb
outsb
jae
test
inc
xorl
cmp
cmp
push
jmp
dec
mov
enter
aas
leave
fbld
or
in
test
cmpsl
mov
lods
push
xor
scas
or
xchg
test
xchg
lea
dec
mov
or
mov
clc
iret
enter
ja
int
fwait
std
xchg
lods
inc
int3
movsl
xor
mov
jl
mov
adc
adc
outsl
into
stc
pop
filds
movl
jp
out
push
add
pop
lods
push
cmpsb
loop
adc
stc
fidivl
jg
add
dec
push
push
xchg
xchg
call
sti
push
push
xchg
or
in
and
shlb
jmp
lods
aaa
inc
test
or
pop
dec
outsl
icebp
insl
dec
push
loopne
movsb
adc
mov
dec
ret
xchg
xchg
add
nop
push
xchg
mov
cmp
jno
pop
xchg
test
fdivs
mov
and
cmp
icebp
roll
add
fldcw
or
jnp
lcall
insl
js
mov
js
out
shr
fnstenv
cs
and
add
lcall
clc
pop
add
bound
cmpb
lcall
sbb
xchg
daa
mov
cwtl
cltd
dec
xor
lods
add
inc
xor
xor
popf
mov
popf
imul
loop
xor
pop
roll
dec
ja
fistpll
jg
jl
sub
stos
arpl
or
xchg
pop
mov
push
pop
pusha
add
push
or
pop
rcll
int
outsb
enter
hlt
add
adc
sbb
cmp
sub
push
test
movsb
adc
sub
and
dec
sub
fsub
fimuls
push
gs
clc
mov
cmc
or
mov
mov
lahf
hlt
mov
repnz
or
inc
into
pushf
shlb
in
inc
xchg
scas
mov
dec
out
jbe
fnsetpm(287
aaa
jb
sbb
int
insl
adc
aas
fildll
and
push
sbb
cmp
xchg
rcrl
inc
xchg
mov
xor
mov
sub
mov
xchg
insb
aaa
leave
movsb
int
lahf
enter
fmuls
rorl
pop
into
xchg
xchg
jp
ror
push
pop
mov
repnz
cs
mov
sbb
add
mov
lret
cmpsb
inc
jmp
fiaddl
jnp
popa
inc
adc
fcomps
xor
mov
jb
jmp
jecxz
push
xor
mov
pop
add
mov
push
sti
movsw
dec
aas
aad
orb
add
mov
push
pop
shlb
xchg
or
fisubrs
inc
shrb
mov
xor
xchg
sbb
mov
push
insl
bound
dec
fiadds
pusha
int3
mov
cli
jecxz
sub
sub
daa
flds
lea
and
jnp
xchg
das
add
jbe
cmp
sub
ds
clc
cmpsb
inc
jo
cltd
imul
xchg
push
pop
or
bound
push
cs
push
or
shlb
sbb
loopne
sub
and
sub
outsl
mov
in
xor
roll
sbb
movzwl
mov
inc
add
pop
push
in
sti
dec
mov
out
mov
aaa
jae
sbb
jbe
or
sub
xor
mov
in
leave
sbb
mov
andb
mov
and
cmp
cmpb
or
cli
fucompp
aaa
in
cwtl
stos
jne
jecxz
dec
xor
aas
popa
addr16
sbb
js
scas
jp
lret
adc
push
fiaddl
clc
arpl
mov
sbb
cmp
dec
xor
xchg
inc
mov
dec
dec
sub
addb
xlat
shlb
jle
or
adc
stos
in
jbe
roll
icebp
cltd
pusha
fistl
outsl
xchg
lock
leave
mov
sub
cmc
pop
je
int3
arpl
lret
mov
adc
mov
push
shl
mov
sar
clc
mov
sar
mov
pop
sub
mov
push
rorl
xchg
sbb
mov
fs
lock
mov
in
push
fildll
daa
js
adc
imul
xor
adc
rcrl
ret
mov
dec
xor
inc
lret
dec
je
jmp
insb
scas
add
xchg
test
pushf
or
xchg
xor
push
mov
out
mov
xchg
cli
data16
in
mov
xchg
lret
add
cltd
add
pop
outsb
movb
lcall
mov
mov
mov
push
sub
aam
dec
gs
pop
cs
fadd
add
cmp
mov
aas
cmovns
pushf
or
int3
adc
daa
loope
jb
add
inc
jge
jbe
in
push
xor
push
mov
push
shrb
in
icebp
je
or
ret
inc
push
imul
fwait
js
int
push
ret
pop
lahf
sub
inc
add
pushf
xor
and
js
mov
push
pop
mov
cmc
jecxz
mov
call
lods
andb
ljmp
mov
nop
pushf
pusha
mov
sbb
lret
in
sahf
push
lock
es
pop
push
xchg
mov
in
into
arpl
mov
mov
js
pushf
sarl
adc
inc
jg
idivb
jne
into
out
and
jge
mov
fidivrl
rcrl
xchg
mov
xchg
mov
data16
push
sub
push
lcall
je
mov
les
and
stos
shll
mov
mov
into
push
fidivl
pop
jns
mov
and
and
and
sarb
stos
out
test
mov
std
test
mov
jae
stos
xor
mov
das
dec
mov
add
aas
enter
push
addr16
fwait
cmp
test
xchg
mov
inc
in
stos
mov
out
push
movsl
pop
lds
cmp
push
test
ss
js
cwtl
repnz
sub
dec
adc
loopne
xchg
cmp
jo
imul
jnp
sub
aas
lea
scas
or
sbb
sub
inc
inc
pushf
movsl
push
subb
data16
fdivrs
in
popa
pop
cmpsb
aad
mov
lods
sub
jle
add
pop
add
push
js
add
mov
outsl
outsl
lahf
jle
daa
dec
push
xchg
sub
sarl
call
xor
or
movsb
cmc
pop
cmpsl
outsb
cld
push
sbb
lods
cmpsl
lahf
stc
in
icebp
mov
pusha
into
cmp
add
mov
mov
je
cmp
out
or
push
test
inc
adc
daa
fdivrl
and
dec
mov
xchg
jb
pop
sbb
inc
push
cwtl
dec
fsubrp
in
rcrb
sahf
push
clc
xchg
jle
or
stos
lret
xchg
adc
xchg
add
stos
sti
xchg
pusha
and
repnz
cmp
gs
aad
aam
cmp
fucom
inc
jmp
into
xchg
loope
and
lahf
fwait
and
ds
inc
cmpsb
out
push
add
cmp
bound
pop
scas
hlt
or
pop
jns
andb
addl
clc
sub
jp
xor
loop
add
sti
pop
addl
outsb
repz
jne
or
xchg
push
add
adc
test
nop
jnp
insb
bound
test
fldt
nop
mov
cmp
andb
mov
inc
jge
dec
out
repnz
outsb
dec
adcl
ficomps
inc
mov
mov
mov
push
push
jecxz
outsl
xchg
inc
pop
sub
xor
fsubr
push
dec
xor
fnstenv
add
xor
dec
popl
adc
mov
add
mov
dec
mov
sbb
mul
inc
push
movsl
into
clc
push
cwtl
bound
hlt
mov
aam
je
lock
mov
xchg
jge
cmp
fistpll
mov
inc
mov
arpl
ss
sbb
test
adc
dec
scas
adc
aam
pop
imul
cmp
movsb
inc
sub
das
pushf
dec
subb
and
mov
div
les
ficoml
sbb
fs
cltd
or
push
add
jns
or
sbb
and
popf
pop
decl
fsubp
mov
adc
les
dec
shrl
arpl
jge
outsl
cmpsb
movsl
sub
xchg
dec
subl
mov
sahf
fldl
test
je
repz
lea
lods
divl
cmpsb
push
mov
push
jmp
cmp
inc
xor
ja
jl
xchg
fcmovnbe
cs
lahf
test
ffree
outsb
adc
inc
shlb
popa
stos
imul
das
aam
cmp
adc
sbb
push
jle
int3
adc
sbb
loopne
dec
add
pop
ret
lods
hlt
pop
cmp
loop
mov
gs
push
mov
outsb
sbb
loopne
cltd
pop
xlat
xor
cmp
mov
mov
aad
aad
and
or
pop
adc
mov
adc
sub
sub
iret
int3
mov
dec
adc
mov
lret
test
dec
adc
scas
dec
and
mov
add
std
into
sti
push
clc
clc
movsb
cmp
imul
sub
xor
mov
jne
pop
imul
and
dec
mov
sub
popa
pop
aam
lods
jmp
xor
mov
pop
adc
adc
int
push
mov
cmp
in
xchg
cmp
cs
inc
rcll
push
lret
dec
push
push
dec
xchg
xor
pop
inc
fadd
inc
imulb
inc
sti
sub
mov
jns
sbb
lods
add
xchg
scas
sbb
stos
pop
loope
adc
push
mov
xchg
test
out
and
jnp
shll
adc
addr16
rol
mov
idivl
stos
xchg
ret
fbstp
xor
jne
xchg
test
mov
decb
pusha
in
rorb
std
inc
pushf
test
or
fnstenv
xchg
fcomip
mov
cli
jo
daa
or
inc
mov
pop
imul
pop
xor
cltd
sbb
pop
dec
loope
jb
out
call
repz
in
lahf
nop
xchg
lea
add
adc
or
gs
sub
adc
adc
sti
jbe
movsb
pop
std
aad
pop
push
data16
add
fwait
and
xchg
out
adc
push
sarb
loope
xchg
push
pop
jae
pop
xchg
adc
mov
jns
fdivrl
inc
sub
aad
mov
dec
flds
rolb
mov
into
xchg
loope
mov
out
mov
es
dec
adc
leave
dec
xchg
jnp
add
adc
nop
pop
xor
arpl
lods
adcb
push
mov
shrb
mov
and
jecxz
xor
jae
enter
out
xchg
push
and
arpl
adc
mov
inc
in
cmp
pop
xor
push
cmpsl
je
ja
push
or
or
mov
cmp
in
clc
cmp
xchg
mov
sub
xchg
out
hlt
cli
in
add
xchg
out
shr
fxtract
jl
and
movsb
jno
sub
cld
jg
cmp
sub
sub
rcrl
insb
and
fcomip
adc
sbb
pop
call
popf
je
adcl
inc
mov
es
aad
sti
sahf
fcmovbe
imul
cli
sbb
xor
repnz
dec
adc
push
mov
add
pop
sti
jns
cmpsb
jge
clc
inc
imul
or
jge
iret
mov
mov
ljmp
push
xor
mov
push
jl
xchg
cmp
mov
nop
lds
pop
adc
imul
pop
arpl
std
mov
sarl
out
xchg
int
cwtl
sub
cmpsb
mov
lods
clc
pop
fmul
jp
jbe
cmp
in
in
ret
loop
sub
ficomps
lcall
mov
sbb
mov
jbe
das
fisttps
scas
sbb
test
pop
out
xchg
pop
arpl
pop
out
mov
pop
mov
outsb
insb
and
test
in
dec
inc
or
fdivs
xchg
and
out
mov
pop
xlat
xor
dec
mov
xor
lcall
repnz
jns
popf
push
push
mov
ds
cmp
scas
push
bts
aaa
mov
mov
push
sbb
scas
mov
and
in
fisubrs
pop
in
cmpl
inc
xchg
push
dec
aaa
add
out
mov
pop
inc
xchg
nop
ret
ficoml
imul
mov
scas
xchg
push
subl
xor
movsl
push
xor
xchg
dec
mov
cli
or
cs
inc
cmp
add
inc
cmp
dec
cmp
xchg
fiaddl
mov
push
dec
movsl
into
sbb
push
flds
sub
inc
mov
pusha
in
pop
into
mov
call
popa
imul
bound
dec
adc
mulb
adc
xchg
mov
fidivs
mov
mov
test
inc
lods
fs
xor
and
jle
imul
cmp
lods
mov
inc
cld
cs
cld
xchg
or
mov
pop
add
inc
adc
jmp
sub
stos
push
repz
pop
xlat
inc
insb
popa
es
ljmp
mov
popl
add
mov
mov
xor
prefetch
insl
lret
push
mov
sub
outsl
fisubrs
lods
fisubrl
leave
repz
nop
lret
in
sub
popf
jae
clc
repnz
push
int
xlat
mov
call
push
shll
data16
call
scas
xchg
inc
xor
filds
mov
push
jo
es
aas
mov
ret
js
or
adc
dec
clc
aad
adc
xchg
pop
mov
in
cltd
mov
xchg
scas
pushf
into
pop
cmpsl
sbb
pop
add
outsb
jg
or
cmpsl
filds
in
adcb
add
clc
jecxz
and
std
mov
inc
sahf
mov
stc
cmp
or
lds
pusha
in
xchg
stos
inc
adc
xchg
mov
adc
push
arpl
sub
mov
mov
jae
mov
push
dec
movsb
cmp
nop
outsb
lods
cmpl
das
shlb
pop
dec
push
arpl
mov
push
cli
mov
popf
ja
in
movsl
mov
push
scas
lret
pop
sub
xor
jp
scas
sbb
cs
mov
fs
or
xlat
int3
cwtl
subb
mov
or
push
aad
mov
fadds
mov
jns
cltd
mov
sbb
ret
inc
addb
sub
mov
jnp
adcl
arpl
sarl
orl
xchg
pop
fwait
jnp
cld
jecxz
fcoml
scas
shl
insb
sahf
out
enter
sbb
sbb
sbb
jbe
cli
mov
out
test
ret
cwtl
pop
adc
cmp
cmp
ret
popa
movsl
cmp
adc
dec
sub
adc
adc
sub
fwait
idivl
xor
cmpsb
int3
out
sub
inc
inc
mov
ret
xlat
jno
iret
popf
fbstp
call
push
icebp
inc
jp
adc
sub
ret
lahf
cmp
dec
and
xor
jnp
or
stos
and
aaa
divb
cmp
push
cmpsl
sub
in
dec
lcall
push
xchg
js
rorb
pop
adc
jnp
jns
jb
xchg
sbb
popf
in
decb
cmp
int3
xchg
or
lods
addr16
dec
aam
adc
in
jo
stc
push
sarb
outsb
andl
stos
sub
nop
xlat
jmp
pop
outsb
les
dec
push
mov
das
push
dec
cmp
mov
cmc
sar
lcall
or
add
repnz
mov
sbb
xchg
aam
or
inc
ficompl
dec
mov
sti
je
pusha
fidivl
cmp
scas
sbb
test
loop
ljmp
cmp
mov
inc
sbb
inc
cs
pusha
dec
dec
fwait
popf
cmpsb
dec
cmp
and
cwtl
pop
or
cwtl
sbb
fwait
cmp
jp
inc
leave
mov
sub
ss
lret
mov
xchg
mov
fstp
push
leave
ret
int3
sti
and
mov
pop
mov
insb
dec
and
stc
loopne
xchg
mov
pop
jecxz
dec
and
repnz
imul
icebp
ja
mov
or
or
cmp
mov
sub
fstpt
add
pushf
mov
xchg
sti
lds
push
aaa
fwait
sub
popf
push
sub
add
xor
out
jmp
stc
inc
mov
dec
stos
rcll
pop
adc
rcll
out
or
cmp
mov
dec
inc
inc
and
jp
pop
mov
mov
das
cmpsb
imul
mov
stc
es
mov
testl
lods
daa
xchg
inc
push
insb
fimuls
enter
insl
jmp
mov
add
cwtl
imul
out
stos
push
iret
xchg
add
subl
xor
pop
lock
aad
jle
lods
test
repz
lret
dec
pop
mov
in
adc
scas
inc
sarb
les
popa
xor
int3
lods
or
je
mov
insb
repnz
test
cwtl
ret
ds
bnd
mov
mov
scas
sar
fwait
ja
pop
test
push
pop
push
xchg
push
jecxz
movsl
dec
in
hlt
or
adc
fs
jmp
int
sbb
daa
daa
lods
or
adc
inc
sub
push
es
shrl
stos
aad
xchg
inc
outsb
in
and
call
fucomip
repnz
push
testb
and
and
shl
in
xor
add
push
or
imul
push
or
mov
ret
cs
shlb
jle
dec
inc
cld
xchg
inc
ljmp
mov
roll
movsl
loop
fldcw
mov
fwait
xlat
dec
rorb
or
xchg
dec
add
xchg
fimull
fucomip
cltd
test
lods
inc
add
imul
popa
cmp
out
les
out
sub
adc
repz
push
mov
push
bound
jno
arpl
fwait
movsl
sub
mov
sbb
cmpb
pop
push
xlat
dec
aas
or
fsubrl
sbb
out
inc
jl
cld
dec
std
pop
insb
and
sbbb
test
je
pop
jnp
mov
add
adcb
aas
mov
xchg
push
bound
mov
xchg
mov
pop
xlat
lods
test
xor
dec
mov
adc
in
pop
rorl
inc
in
and
lods
mov
hlt
push
repz
pushf
xchg
int
sbb
or
test
pop
adc
mov
mov
mov
and
or
fidivrl
and
pop
push
inc
jmp
and
lcall
or
pushf
insb
pop
mov
fstpt
jb
daa
in
pop
lret
jne
sbb
not
adc
xchg
lret
cmpsb
stos
in
sub
sbb
imul
add
xor
loop
sbb
aam
loop
into
xor
sub
mov
mov
popa
cli
in
aas
hlt
sar
movb
mov
sbb
add
in
cmp
ss
push
rcrb
and
mov
push
lea
jle
data16
hlt
push
push
inc
xchg
add
aam
mov
and
and
ljmp
outsl
and
jo
es
push
pop
jg
pop
sbb
dec
pop
push
pop
inc
fisttps
rclb
scas
pop
mull
or
sti
icebp
das
dec
in
mov
xchg
inc
movsl
and
cmp
je
add
in
repz
dec
and
lcall
xor
pusha
shlb
lods
cmp
lods
clc
ljmp
and
mov
xchg
jae
scas
xchg
mov
mov
pushf
cmp
ds
or
or
mov
push
dec
add
call
cmp
ret
mov
or
shll
fnstcw
or
in
repz
lea
and
fsubp
pop
lds
cmpsb
jge
mov
or
xlat
push
pop
mov
adc
dec
loopne
clc
jle
data16
nop
sahf
mov
mov
cmp
test
dec
push
ror
imul
inc
jle
adc
mov
repz
fwait
rol
loope
insb
xor
mul
xor
push
add
jmp
jecxz
mov
and
ss
mov
gs
sub
test
shll
sbb
pop
lret
and
out
xchg
xchg
mov
mov
mov
adc
sub
je
jmp
mov
popa
pop
mov
repz
insb
jge
xor
and
in
dec
mov
jg
jg
and
stos
ret
xchg
cmp
aaa
push
je
test
fucomip
dec
xchg
sbb
or
xor
push
out
cwtl
add
push
cmp
inc
push
cmp
aad
and
fwait
retw
pop
push
jne
pushf
leave
mov
cltd
or
out
and
cld
loopne
xchg
sbb
call
xor
test
popf
testl
xchg
jl
lods
sub
faddl
loopne
popa
xchg
in
scas
cmpsl
inc
nop
jo
loop
lret
mov
and
outsb
orb
xlat
sahf
fmuls
in
inc
dec
sbb
cmp
aas
imul
adc
fsubrl
inc
cmp
inc
add
in
lock
jecxz
test
lods
and
sub
das
xchg
pop
test
jg
insl
sbb
adcb
mov
xor
xlat
mov
fisubrs
imul
push
mov
lods
inc
out
sbb
pop
xchg
push
dec
xor
iret
jp
gs
jmp
pop
sbb
rcrb
in
xor
jne
lahf
loope
mov
repz
lock
iret
lea
pusha
fimull
int
insb
sub
dec
int3
adc
ja
mov
push
cli
test
lods
mov
or
add
xchg
stc
cmp
test
lahf
pop
or
xchg
sbb
inc
or
mov
fildll
out
movsl
stc
xchg
push
icebp
cld
fwait
jmp
lods
gs
rorl
movsb
push
scas
lea
lret
push
jg
inc
or
xchg
push
cmpsb
shlb
xchg
ret
push
lcall
int
mov
add
shll
cmc
xor
pusha
test
adc
adc
movsb
ret
addr16
sti
lods
and
mov
mov
sbb
push
fsubrs
jge
into
mov
adc
adc
in
or
or
out
sbb
add
pop
popa
ret
pop
pop
dec
mov
call
cmp
shll
test
lcall
in
hlt
xchg
sbb
filds
and
and
mov
aam
xchg
out
daa
push
xor
ffree
jle
adc
xor
andl
lahf
mov
sbb
xchg
out
dec
in
into
pop
push
insl
sti
insb
mov
cltd
jno,pt
jo
inc
std
aam
decl
dec
xlat
or
xor
jbe
aas
push
cli
call
jg
icebp
xchg
jge
pop
test
js
xor
sbb
ja
add
mov
pop
ja
jg
jg
divl
int3
mov
xchg
int
jmp
shlb
dec
pop
shl
sbb
xor
and
mov
sub
or
add
rcll
repz
inc
xchg
dec
xchg
sbb
fdivs
jne
push
jge
mov
fstps
pop
mov
addb
sbb
mov
and
sbb
jb
dec
pop
addl
jl
cs
xor
movsb
pop
jo
jmp
jno
push
dec
add
cmc
aad
add
push
pop
jle
xchg
fwait
imul
xchg
pop
push
add
sbb
mov
sub
arpl
lret
and
xorl
push
cmp
dec
sub
push
mov
xchg
fistpll
sbbb
fnstenv
inc
xchg
xor
sbb
idiv
in
cwtl
pop
jne
and
rcl
add
mov
ret
pusha
xor
mov
out
pop
dec
cmpsl
imul
pop
push
sbb
rolb
aaa
mov
subb
jmp
dec
pop
jle
pop
pop
mov
in
sbbb
inc
xor
daa
lock
dec
or
nop
fwait
jb
ss
pop
fs
inc
jl
inc
test
mov
movsl
mov
mov
call
xchg
adc
pop
jno
xor
idivl
push
cmpsl
mov
sub
addr16
shrl
jb
cmp
movsb
addr16
andl
or
cmc
clc
out
add
jg
and
into
stc
lods
decl
sub
loopne
adc
clc
movsl
mov
adc
movsb
mov
inc
pop
push
loopne
fidivs
xchg
scas
sub
imul
rol
inc
orl
mov
push
or
mov
repnz
inc
xchg
xchg
cmpsl
mov
mov
adc
insl
cmp
xchg
push
enter
push
mov
pop
push
out
pop
xchg
xor
sbb
push
or
clc
daa
sarb
stos
addb
rol
jle
jno
push
in
cmp
outsb
sbb
jne
pop
mov
loope
icebp
add
cmp
lock
aaa
imull
das
sbb
sarb
sub
xchg
stc
mov
test
clc
jo
adc
adc
jo
xlat
cmp
add
inc
xor
daa
push
pop
out
cmp
and
mov
mov
imul
and
jbe
jb
pop
jnp
add
dec
notl
pop
jg
pop
mov
hlt
xchg
xchg
sub
push
mov
sar
adc
xor
in
or
outsb
mov
mov
xchg
mov
jl
mov
add
test
or
push
and
mov
es
push
jo
jge
popf
push
and
movsb
and
nop
xor
mov
idivb
mov
jmp
sub
mov
mov
mov
cmp
xchg
jle
cmp
xchg
lret
push
cmpl
cmp
add
cmp
mov
sub
sbb
or
mov
push
mov
cmp
mov
xchg
or
push
pusha
aam
aad
mov
int3
adc
in
inc
or
int
ja
mov
mov
pop
out
pushf
xchg
ljmp
pop
jae
sbb
jp
cmc
inc
insl
pop
orb
test
and
jl
repnz
fcmovnu
dec
xorb
add
lds
ss
and
mov
pop
scas
dec
mov
roll
xor
outsl
push
pop
pushl
xchg
add
shl
xorl
jae
cld
lods
scas
or
sub
adc
pop
cli
fs
inc
ja
dec
out
xchg
fs
push
lods
outsl
jo
insl
in
int3
test
sub
gs
pop
aad
cwtl
cmp
rolb
push
xchg
mov
dec
jns
stos
hlt
cmc
in
cmp
inc
add
pop
add
in
ljmp
mov
call
pop
fwait
pop
mov
es
leave
ret
decb
pushf
cmpsl
ret
xchg
add
sarb
sti
aad
imul
je
or
roll
int
xor
int
and
dec
lods
sbb
add
in
aaa
cmc
dec
lret
sub
pop
mov
testb
xchg
sbb
repz
and
dec
pop
popa
or
outsb
push
push
mov
repnz
push
stos
or
push
lods
ljmp
push
insl
or
insl
lods
jmp
stos
call
dec
mull
cmpsl
popf
movsl
mov
imul
cmp
add
pop
scas
jo
or
xchg
xor
xor
and
mov
sbb
loopne
pop
or
push
mov
subl
push
lock
cs
mov
aam
mov
add
cmp
and
call
mov
cmpsb
test
inc
lahf
mov
inc
in
filds
jb
xchg
fimull
aam
and
mov
pop
push
jb
and
std
movsl
mov
outsl
cmpsb
std
lods
xchg
push
stc
outsb
loopne
lods
jae
push
int3
cmp
inc
jge
cmc
imul
mov
loopne
cmpsb
xor
cwtl
sbb
push
adc
push
pushf
mov
dec
pop
mov
pop
mov
rol
push
pushf
loop
mov
or
ss
nop
orps
arpl
push
xorb
xchg
aam
lahf
ljmp
push
out
sub
xor
push
movsb
jle
call
pop
repz
push
adc
mov
cmc
mov
lret
push
in
fs
xchg
pushf
cmc
and
mov
sbb
sub
dec
outsl
push
movsb
pop
ss
jo
xor
clc
sti
in
push
mov
dec
cmp
sub
push
cmp
mov
mov
sbb
xchg
mov
cs
push
sbb
fadd
lcall
push
sub
mov
adc
xchg
dec
fldenv
jmp
mov
insb
gs
cli
dec
mov
jo
adc
rorb
xchg
aas
mov
frstor
xorb
xor
outsb
jle
pop
scas
push
clc
cli
mov
dec
cmp
add
mov
inc
xlat
loope
icebp
jg
orb
pop
mov
cli
push
pop
aad
add
mov
cmp
inc
loope
imul
xchg
sub
and
sti
jbe
stos
enter
mov
mov
dec
inc
push
dec
and
inc
shll
fwait
arpl
xchg
popf
cmp
mov
mov
push
addr16
ret
push
test
sub
es
pop
rcr
or
test
in
je
and
xor
push
je
test
arpl
mov
test
ret
lds
popf
in
out
dec
mov
mov
pop
lea
cli
add
jno
xlat
test
repz
xor
scas
rcll
aam
sub
loop
mov
mov
push
loope
rclb
jl
insb
inc
jg
lcall
xor
sti
jno
stc
pushf
iret
data16
sub
inc
arpl
mov
insw
bound
adc
inc
xchg
pop
pop
movsb
pop
imul
loopne
bswap
bound
gs
jbe
in
out
popf
rcrb
mov
nop
xchg
xchg
out
pusha
push
and
popa
mov
jmp
adc
xor
add
stos
pop
mov
loopne
or
std
mov
sbb
and
mov
cmc
inc
std
jbe
ss
mov
fs
aas
roll
stc
shrb
add
sub
push
out
rcrl
inc
sbb
testl
mov
lods
outsb
inc
push
lcall
inc
cmp
enter
sbb
mov
sti
inc
sarb
sub
scas
lods
mov
inc
xor
push
lea
sub
ffree
jns
jb
push
aam
pop
mov
xchg
sbb
xor
jmp
pop
andl
rclb
add
inc
mov
mov
sub
xchg
roll
dec
sub
sub
xchg
insl
adc
mov
leave
imul
inc
add
push
and
add
outsb
pop
test
scas
jmp
rclb
cld
daa
mov
add
xchg
sar
mov
or
mov
mov
xchg
cmpsl
xchg
or
fdivl
popf
mov
test
inc
ficoml
mov
or
sub
xchg
fwait
push
inc
jno
fisubrl
aam
mov
pop
xor
and
jb
out
out
or
or
dec
sbb
sbb
adc
cmp
and
fwait
sahf
mov
dec
aas
sbb
scas
mov
jmp
add
jp
not
mov
xor
in
sub
push
sub
cmc
adc
cld
add
mov
cmp
adc
sbb
leave
cld
aas
cmp
sub
mov
xchg
arpl
aaa
adc
pop
inc
pop
andl
xchg
imul
out
addr16
fbld
lret
push
inc
lods
mov
lock
cli
jo
mov
jle
jns
xchg
mov
dec
xchg
cmp
push
shlb
mov
std
out
jo
mov
xor
lods
ss
popf
jg
adc
ds
pop
cmp
cmp
sub
mov
enter
mov
pop
lret
shrl
pop
cmc
in
and
in
shlb
jle
sahf
adc
daa
dec
inc
loope
shr
movsl
xchg
cmp
dec
inc
pop
ja
jno
std
stc
outsl
popa
jge
cwtl
lods
mov
andl
cld
popf
mov
mov
in
test
dec
divl
aam
sarl
inc
arpl
cmp
lret
into
shrl
jecxz
test
test
adc
cld
mov
xor
push
cmp
fs
inc
loop
cmp
movsb
dec
dec
xor
fstl
or
sub
pop
mov
lahf
ss
inc
add
push
jge
sbb
insl
push
and
xchg
xor
dec
mov
mov
shlb
mov
incb
data16
sub
or
or
dec
and
jbe
aam
lahf
pop
aam
les
xchg
pcmpeqd
repz
fadd
cmp
adc
push
xor
sub
push
shl
pop
loope
cmp
fidivrl
push
mov
sub
sbb
cmp
stos
imul
push
push
xor
and
sub
sub
mov
and
add
inc
jl
lahf
addr16
xor
in
pop
xlat
test
mov
cmpl
sbb
pop
in
lahf
mov
adc
shl
pop
bound
jmp
rclb
xchg
push
dec
daa
push
ljmp
mov
sub
test
xchg
inc
imul
fcmovb
popa
and
insl
and
push
jno
mov
xchg
aas
xor
jecxz
mov
cmpsl
gs
in
notl
js
hlt
mov
mov
fildl
arpl
jg
or
mov
js
mov
pop
imul
pop
lcall
xor
repz
popf
and
lret
cmp
mov
movsb
test
xor
cmp
adc
sbb
outsl
xchg
dec
xchg
xchg
mov
hlt
out
insb
inc
loope
ja
xor
test
lahf
fsub
xor
gs
loop
mov
push
xchg
fists
inc
sub
push
jnp
mov
add
mov
xor
dec
mov
cmp
cmp
push
in
outsb
shrb
lret
std
inc
push
mov
mov
stos
fsubrl
jge
scas
inc
sahf
xchg
push
popf
imul
sbb
adc
adc
pop
mov
jmp
jg
fildl
mov
add
adc
imul
or
inc
out
iret
pop
sar
xchg
lcall
cmp
addr16
call
xor
sub
shr
int3
mov
inc
or
cwtl
ret
sub
loopne
lret
nop
adc
mov
jne
insl
insb
gs
gs
out
xlat
cmpsb
fsubl
insl
or
push
pop
inc
shlb
add
lods
popa
enter
stc
xchg
in
test
or
mov
sbb
add
pushf
xchg
jle
push
repz
nop
push
xchg
xorl
add
mov
sbb
and
dec
cmp
xchg
imul
ljmp
ret
jbe
jp
test
shlb
nop
mov
pop
mov
cld
push
xchg
add
in
in
jnp
and
mov
arpl
outsb
aad
mov
iret
cltd
movsl
push
out
es
pop
sbb
sub
xchg
jb
loopne
fiadds
mov
xor
mov
mov
into
add
jno
sub
push
fstps
and
mov
in
les
cmp
cs
lea
and
mov
int
fisubs
mov
movsl
sar
pop
fsubl
cmp
js
cmp
dec
jmp
stc
pop
and
cwtl
xchg
in
push
adc
or
xlat
lahf
cmp
mov
out
cli
lods
adc
popa
testb
stos
mov
lahf
pop
jae
mov
sub
jae
dec
rolb
ss
int
cmp
imul
pop
or
pop
xchg
add
iret
ret
pusha
pop
out
sub
pop
mov
jno
dec
pop
or
repnz
mov
mov
adc
cmp
aam
fs
sbb
push
scas
cmpsb
shlb
jb
mov
inc
jecxz
cld
or
test
adc
scas
adc
mov
sbbl
mov
icebp
fidivrs
imul
rcr
push
fisubrs
call
xchg
push
or
fwait
mov
adc
out
push
add
addl
jb
or
inc
sbb
js
sbb
loope
mov
and
movsb
ret
mov
and
setbe
stc
cld
fmull
adc
pop
adc
sub
lcall
jb
dec
popa
cli
push
pop
add
mov
adc
pop
ja
repz
data16
jno
loop
push
mov
aam
ffree
push
fmull
cwtl
ret
lock
jle
adc
mov
ja
add
movsb
dec
cld
inc
xor
fs
dec
jmp
add
sbb
lret
or
push
and
sbb
xor
dec
or
push
aam
in
stc
orl
shl
lods
cmp
in
insl
xlat
jne
lahf
push
pop
cmp
xchg
add
cmp
leave
cmp
inc
mov
dec
sbb
fisubrs
loop
arpl
mov
add
inc
cmp
or
daa
sbb
pusha
add
popf
mov
pop
in
addb
lahf
outsl
mov
lahf
inc
push
add
pop
das
jg
add
jle
adc
add
je
push
cmp
xor
mov
jbe
cmp
sbb
mov
repnz
imul
mov
lcall
push
xor
sarb
push
cmpsb
repnz
dec
inc
out
push
popa
fbstp
stc
mov
incb
adc
sbb
dec
fs
outsl
enter
xchg
outsl
push
lret
jae
jl
iret
inc
and
jo
nop
imul
dec
outsb
mov
fcmovb
jbe
aad
call
clc
mov
sbb
sub
mov
push
insb
ja
adc
cmp
pop
xchg
leave
mov
cli
pop
xor
or
fstpl
mov
pop
pop
cmc
nop
pop
lea
mov
fwait
inc
test
jns
mov
mov
dec
mov
push
adc
mov
test
shll
mov
inc
fwait
jmp
cmp
ja
adc
mov
xor
out
out
jae
imul
fisttpl
xor
lcall
add
je
sbb
and
cmp
ja
stos
fcmovb
inc
xorb
and
or
hlt
rcrb
inc
movsl
ds
sub
and
data16
inc
push
and
xchg
jno
and
cmp
out
xchg
adc
in
mov
pop
fildl
dec
lahf
ret
cs
sti
ficomps
add
ret
rorl
mov
push
mov
inc
das
fwait
lret
jne
js
jge
pop
test
test
ret
dec
jg
dec
inc
iret
enter
lretw
sbb
sub
sbb
lret
and
leave
and
jne
add
xor
and
xchg
cld
or
outsb
and
push
les
cld
div
icebp
leave
mov
adcl
jno
pop
outsb
cmpsb
xchg
mov
xchg
rcl
jns
push
jge
push
dec
mov
mov
scas
add
sbb
enter
pop
stos
sbb
pop
das
add
jbe
bound
xchg
sahf
jae
fldt
mov
add
jb
add
add
outsl
movsl
mov
mov
sub
inc
xchg
xchg
jne
xor
fidivrl
or
sbb
loope
xor
stos
or
movsl
out
dec
dec
inc
movsl
dec
aam
test
stc
lea
jg
xchg
adc
cltd
cltd
popa
test
cmpl
sub
inc
daa
int
rorl
fwait
pop
sbb
cmp
fcmovb
arpl
cmp
inc
or
inc
test
ficoms
push
add
fwait
orb
cmp
push
rorl
mov
out
loopne
xchg
jp
add
inc
inc
popf
orl
int3
pop
aas
popf
ja
int3
das
mov
imul
inc
cmp
loop,pn
inc
and
xorl
adc
nop
ss
push
les
sub
and
fisttpl
ljmp
mov
mov
sub
lahf
bound
pushf
mov
pop
and
dec
cmp
popf
outsl
movsb
xchg
xchg
ljmp
cmp
es
pushf
filds
sbb
test
pop
add
push
mov
mov
mov
lds
das
lods
mov
ja
test
mov
faddp
nop
repz
lcall
mov
jle
arpl
in
jb
push
or
imul
sbb
int
std
pop
cmp
cmp
sub
or
xor
shll
sbb
out
push
pushf
jmp
pop
cli
and
add
mov
push
pop
jl
call
scas
dec
outsl
lret
dec
push
push
js
fisubl
xchg
jb
icebp
aas
in
pop
cmp
test
dec
sub
or
lds
jns
or
decl
mov
std
mov
or
xchg
lea
lds
pop
ja
and
xor
add
int3
xchg
or
enter
sti
ss
stos
jb
mov
mov
ret
add
mov
mov
pop
pop
lea
sub
rcrl
leave
das
ljmp
push
fsub
mov
inc
jne
adc
inc
adc
fistps
aad
jge
lea
ds
fs
mov
ret
push
mov
adc
add
push
pushl
pop
ffree
xor
das
jae
loope
or
in
mov
jl
test
addr16
js
fnstcw
sub
xor
negb
inc
mov
sbbl
jp
push
or
adc
pushf
adc
dec
jmp
and
aas
popa
daa
adc
outsb
lock
pop
iret
push
jge
add
js
adc
es
out
dec
jge
data16
rolb
insl
stos
adc
dec
jl
sbb
xchg
sbb
fs
jmp
ret
leave
inc
lods
fistpll
dec
repz
clc
in
sarb
aad
cmp
or
aam
mov
mov
cmc
shll
sub
das
enter
jno
mov
je
pop
inc
roll
or
mov
cmc
xor
pushf
add
iret
mov
xor
jb
mov
or
addb
mov
xchg
mull
fidivrs
mov
add
jg
cmp
and
pop
pop
inc
inc
orb
xchg
cmp
gs
adc
push
mov
movsb
insl
add
lods
in
or
leave
cmp
mov
xchg
dec
jnp
mov
mov
pop
scas
mov
lcall
cmp
call
loopne
jle
test
xor
add
fistps
pop
push
fcoml
inc
push
cmpsl
cwtl
xchg
iret
aaa
arpl
xchg
std
mov
dec
movsl
pop
loopne,pn
iret
loopne
xor
inc
int3
dec
notb
idivb
push
and
rcll
push
ds
push
rclb
dec
jg
cmp
outsl
push
loopne
or
sub
stc
push
push
push
ja
pop
mov
ljmp
sub
push
lods
dec
sub
jbe
and
adc
jnp
pusha
pop
and
data16
pop
xor
and
fimull
mov
or
mov
push
dec
aaa
repz
xor
push
inc
rcrb
mov
jo
sbb
mov
outsl
inc
fwait
mov
dec
mov
dec
cld
add
dec
mov
mov
add
testl
in
jle
jo
jae
add
stos
mov
insb
mov
sbb
inc
jno
inc
lds
mov
dec
lret
push
ret
sbb
push
or
push
push
mov
and
cmp
pushf
adc
rcrb
stc
cmpsl
orl
pop
mov
mov
push
and
test
mov
ret
ret
js
cmp
and
push
imul
jae
sub
mov
add
cmp
cs
mov
movsl
ret
out
movl
lea
int3
adc
and
pop
and
push
rol
sub
in
push
ljmp
xchg
mov
orl
jno
jl
mov
xchg
outsb
xchg
rorl
xor
outsl
lret
outsb
nop
cld
cmp
push
mov
mov
mov
leave
leave
or
icebp
xchg
test
int3
jno
adc
push
and
fmuls
xchg
leave
aam
les
ror
out
xchg
jmp
rorl
mov
mov
ljmp
push
andb
mov
jle
leave
ja
mov
xchg
mov
inc
cmp
and
in
mov
inc
sbb
cmpsl
ds
xlat
rolb
out
leave
cmpl
ret
push
adc
xchg
jp
pusha
repnz
jo
push
adc
xchg
dec
add
testb
call
fisubs
push
sub
adc
imul
test
loope
arpl
and
sbbl
add
bndstx
ffreep
enter
mov
pop
inc
or
test
popa
or
sar
ljmp
cltd
dec
sar
lods
negl
mov
shll
scas
dec
cmp
mov
fs
test
jae
pop
mov
ja
pop
cmpsb
mov
fisubl
push
jg
lret
and
out
out
aam
pop
das
sbb
in
test
cwtl
add
cmp
andb
cmc
and
jae
repnz
insb
fwait
clc
lods
jo
mov
xlat
loop
ret
adcb
repz
mov
dec
add
or
inc
fdiv
scas
cwtl
int3
gs
mov
sub
jge
loope
dec
mov
cmp
lds
jne
push
vpunpckhqdq
cs
gs
test
adc
sub
xchg
mov
cmp
push
mov
push
mov
out
lock
pop
cmpsb
and
or
aam
pop
and
adc
jl
ret
addb
aad
movsb
dec
xor
add
test
std
stos
mov
clc
loopne
pop
arpl
fisubrs
or
xchg
adc
ss
jne
dec
push
and
fmul
mov
cmp
sbb
daa
enter
sbb
pop
cmpsl
clc
ret
test
adc
arpl
mov
xchg
inc
out
int
sbb
nop
ret
push
cmp
jge
sbb
fxch
in
cli
mov
xchg
popa
lock
in
js
out
jmp
mov
sub
mov
xchg
js
clc
sub
mov
jmp
out
stos
shld
xlat
jge
adcl
stos
jmp
lea
cmp
jge
dec
lea
push
daa
sub
mov
jle
xor
pushl
push
dec
iret
rcl
dec
push
jne
std
in
stos
imul
rcl
out
adcl
xchg
and
ja
sahf
lcall
popf
mov
pusha
lahf
mov
and
xor
arpl
cmp
pop
and
mov
stos
cmp
addr16
subb
inc
lods
mov
in
insb
mov
adc
and
fbld
jl
ljmp
shrb
daa
addr16
push
mov
cmp
inc
push
or
dec
or
hlt
cmp
xchg
or
das
mov
lret
or
sub
lds
fwait
jae
loopne
mov
jle
push
dec
insb
decl
jmp
xchg
dec
fdiv
mov
mov
fsubp
out
jns
cs
iret
int
jge
cld
sub
aas
out
loopne
aaa
dec
dec
daa
test
idivb
or
push
and
imul
leave
inc
out
add
pop
lods
fs
icebp
out
jnp
and
arpl
mov
nop
adc
sub
dec
mov
gs
xor
push
sarb
rorb
mov
sbb
inc
dec
test
movl
jns
sti
ja
jo
push
rcr
stos
cwtl
cs
imul
pop
cmp
mov
or
dec
xor
xor
addl
ret
mov
stc
lea
inc
mov
dec
lds
nop
jb
in
aad
cs
dec
fnclex
mov
mov
leave
shlb
mov
aas
movsb
mov
insl
sbb
mov
xchg
incb
ss
xchg
mov
outsl
jmp
adc
jp
loopne
int3
fsts
cmp
sbb
adc
add
daa
xor
scas
test
xchg
lods
dec
outsl
into
cltd
dec
fcos
jae
jl
sbb
movsb
insl
push
cltd
mov
test
jae
push
cmp
sbb
rcl
clc
mov
adc
sbb
jmp
iret
cmp
dec
mov
mov
dec
xlat
andl
dec
push
clc
ljmp
scas
ret
inc
dec
mov
mull
sti
xor
xchg
push
popa
imull
fcompp
fmuls
fmull
cli
mov
xor
fmull
pop
jp
xor
add
adc
mov
loope
rorl
cmp
dec
pop
pop
lea
jl
inc
js
pop
scas
or
sub
loop
jb
sbb
add
sti
xchg
fistpl
in
xor
jno
jne
jmp
test
ret
les
out
xchg
or
sbb
adc
adc
jne
inc
fstps
test
jp
mov
cwtl
dec
and
fwait
or
ja
sbb
lret
push
jle
aad
test
into
mov
bound
pop
mov
jo
jge
subl
mov
rolb
and
jo
stc
jl
cmpsl
jae
and
lds
add
jg
mov
add
xor
cwtl
sbb
daa
pop
nop
in
or
and
xor
lods
aas
cmp
xchg
mov
fisttpll
sub
clc
inc
fwait
mov
inc
xor
test
push
sbb
ret
push
sarb
dec
cltd
mov
lahf
sub
mov
test
xor
insb
cmpb
mov
into
outsb
push
outsb
ja
mov
hlt
push
mov
daa
sbb
xchg
divl
es
iret
mov
jge
add
stos
dec
int3
mov
mulb
les
ds
sub
and
sub
fildll
test
js
dec
out
cmp
and
mov
sub
cmpsb
cmp
stos
fcomps
call
jns
jp
pop
push
ja
adc
sub
testl
adc
test
ja
or
add
adc
mov
ret
mov
repz
lcall
arpl
popa
jae
cwtl
cmp
js
xor
xlat
insb
push
jecxz
pop
and
aas
jmp
sbb
addr16
inc
lret
call
mov
mov
cmpsb
cltd
shl
mov
mov
loope
and
pop
mov
dec
cld
xchg
stos
je
sub
inc
jmp
dec
mov
push
jbe
fs
movsl
dec
lods
inc
xorl
dec
lret
xchg
mov
lret
dec
sub
mov
in
sub
jno
scas
lret
mov
xchg
cmc
dec
lods
repz
test
lret
jl
pop
fptan
sbb
mov
incb
pop
xor
aaa
mov
xchg
sbb
inc
hlt
jnp
mov
or
mov
shrl
xor
and
add
pop
jbe
dec
pop
cmp
lahf
xlat
shl
cmp
lock
dec
ret
addr16
pushl
out
xchg
lock
lret
sahf
orl
cmp
and
loope
jnp
or
ret
loopne
jo
xchg
enter
loopne
sub
call
xor
insl
imul
sub
dec
adc
insb
rcrl
es
out
aaa
pop
inc
push
xor
int3
es
jl
pop
lock
imul
lods
call
adc
adc
sub
std
jnp
and
test
cmp
xchg
scas
dec
and
out
inc
fimull
addr16
clc
lods
lea
xchg
notl
dec
xchg
cmp
lods
dec
xlat
dec
push
and
cmp
cmp
sub
aam
loopne
aam
or
rcl
loopne
adc
mov
ret
cmp
dec
out
jle
fwait
and
fsubr
inc
xchg
mov
stos
adc
mov
call
inc
mov
sub
add
adc
jg
into
scas
sub
lods
imul
rorl
push
dec
mov
dec
sub
loop
pop
inc
insl
pop
xchg
mov
xchg
push
hlt
and
push
xlat
add
add
lock
and
xor
aaa
cmp
mov
gs
mov
mov
fisubl
mov
add
add
xchg
adc
repz
mov
xchg
xchg
pop
in
out
popf
sbb
jno
mov
sbb
mov
and
addl
ret
daa
sbb
fnstenv
inc
dec
into
sub
sar
mov
dec
or
and
xor
mov
out
pop
testb
and
mov
cwtl
jbe
fimuls
ret
jp
mov
mov
mov
insl
dec
add
or
dec
xor
jns
pop
xchg
lret
iret
mov
dec
imul
out
andl
inc
lock
iret
inc
mov
adcb
push
bswap
adc
mov
ret
mov
mov
mov
add
or
xor
js
mov
adcl
mov
dec
in
cmp
int3
sub
divb
out
xchg
push
shll
ficoms
mov
cmpsb
aam
jb
loope
jl
xor
or
push
inc
adc
jmp
lds
int
or
into
mov
sub
fistpl
icebp
push
mov
aaa
out
sarl
scas
cli
or
mov
loope
jp
rcr
xor
clc
pop
sub
fsubrp
ret
fcoms
fwait
push
outsb
jecxz
insl
push
popf
cmp
sbb
jns
xor
js
in
rcll
mov
push
mov
sbb
push
and
xchg
or
mov
sbb
push
xlat
shl
out
dec
lods
inc
and
sbbl
jmp
dec
pop
xchg
pop
adc
add
pop
fwait
jge
xorb
jne
dec
push
in
test
jecxz
sbb
mov
xlat
sub
xor
jp
xchg
outsb
int
out
add
push
out
cmpsl
fsub
loope
xchg
mov
pop
mov
xor
addl
cli
nop
lods
xchg
add
mov
not
outsb
scas
dec
nop
cmpsb
nop
outsl
shlb
mov
mov
pop
or
mov
push
ds
add
adc
fbstp
lcall
cmp
das
or
xchg
rcl
ficompl
add
lock
packuswb
or
jl
xchg
insb
add
mov
pop
popa
stc
and
mov
int
aad
in
and
je
mov
sbb
sbb
in
jp
setno
imul
sbb
dec
rcrb
mov
push
push
outsb
dec
add
jge
cwtl
dec
sbb
movsb
cmp
jns
xchg
push
xchg
push
movsb
xor
nop
outsb
jb
inc
cmp
xor
push
cmpsb
leave
dec
out
cmp
jns
cli
xchg
clc
push
movl
mov
frstor
sarb
out
xorb
ret
jp
dec
and
pusha
loop
data16
out
clc
cltd
cs
xchg
in
js
cmp
cmpb
adcl
mov
adc
jmp
adc
jnp
fst
and
push
push
push
fwait
hlt
mov
das
jge
pop
sahf
enter
data16
cli
ret
dec
sbb
mov
lods
inc
jl
adc
lds
lock
jne
mov
add
clc
push
sbb
cmc
lahf
xor
inc
xchg
hlt
out
dec
push
aaa
test
leave
add
or
or
data16
ss
mov
mov
xchg
out
pop
dec
jbe
hlt
cltd
xor
cs
imul
jae
lods
insl
lock
xchg
and
push
xchg
ss
cs
inc
pop
inc
fstps
mov
push
lock
push
iret
rorl
mov
out
push
dec
mov
jg
shrb
or
jp
out
sarl
fiaddl
pop
icebp
test
fsubrs
ss
xor
aas
inc
pop
pop
push
xchg
sub
insl
daa
push
pushf
fs
push
mov
adc
popf
xor
arpl
scas
fisttps
shl
pop
push
testl
insb
movsb
mov
orl
lock
popa
inc
loopne
out
rcrb
repz
lret
and
cmp
pushf
push
sbb
pop
cmp
sub
or
sbbl
insb
push
dec
imul
dec
inc
mov
shrb
jle
pusha
mov
test
das
aam
sti
pop
popf
pop
inc
mov
cmpsl
loopne
mov
dec
ja
xchg
decb
push
sti
pop
mov
mov
js
sub
and
call
nop
sbb
pop
cli
and
repz
mov
jns
mov
cmp
ja
mov
mov
sub
jmp
cmp
cmc
popaw
cmp
xchg
fnstenv
jmp
in
fs
mov
les
add
dec
mov
push
add
call
sbb
xchg
test
mov
xor
aas
out
stc
stos
or
mov
mov
mov
roll
and
insb
add
arpl
push
sti
imul
sub
pop
addr16
sbb
stos
cli
enter
pop
jae
adcl
xchg
add
push
jo
sbb
or
jbe
loopne
cmp
je
jnp
out
pop
mov
leave
push
adc
mov
dec
mov
pop
cmp
add
xor
repnz
cmc
and
rol
jb
mov
cmpsl
movsb
mov
sub
cltd
loope
pop
fnstsw
cmp
sub
js
add
lods
jnp
arpl
mov
sub
pop
clc
sahf
inc
push
lods
mov
lea
jg
inc
push
mov
push
jp
repnz
dec
jmp
add
xlat
ret
ljmp
out
mov
ds
dec
mov
sbb
in
or
inc
cmp
ret
mov
pop
xor
imul
push
inc
dec
dec
cmpsl
test
dec
mov
pop
mov
test
push
adc
mov
lcall
sbb
inc
fsubs
test
mov
and
mov
aaa
cmc
xchg
or
mov
outsl
lods
psubq
mov
fdivr
sbb
fidivs
mov
aad
mov
mov
mov
add
imul
add
push
push
insb
jb
dec
jle
push
add
push
push
rcll
fs
cli
and
mov
pop
pop
jp
add
jne
or
push
ret
loop
jmp
jl
insl
enter
xchg
stos
or
les
fcoms
pop
ret
jo
out
bound
int
cmp
cmpsb
mov
sbbl
mov
or
pop
cmp
jp
fbstp
mov
push
mov
xor
mov
das
xor
cli
in
jne
pshufw
dec
lahf
in
aad
arpl
div
bound
or
push
cvttps2pi
pop
wbinvd
sbb
ss
stc
cmc
pop
xor
mov
jmp
push
pusha
jnp
jp
int
lcall
scas
hlt
xor
push
sbb
lods
ja
xor
fdivr
fistpl
rcrl
outsb
rol
cmc
jne
bound
aaa
and
dec
mov
jp
shrb
pop
sub
mov
ret
and
xacquire
sub
xor
clc
test
aam
sahf
pop
lea
mov
popf
fldt
mov
fwait
cli
xchg
inc
push
cmp
punpckhwd
out
movsl
push
jg
xchg
xor
pop
aaa
ret
xor
test
sub
sbb
fstl
test
xchg
outsl
jne
idivb
mov
popa
int3
and
xchg
push
jmp
lds
push
les
scas
cli
sbb
aaa
insl
ss
cmp
ljmp
leave
insb
mov
add
fcmovne
aaa
and
ds
leave
add
dec
push
shl
clc
rcll
out
cmp
fs
xchg
xlat
fucomip
js
test
or
sub
mov
or
add
inc
or
xor
mov
sub
in
sub
ret
mov
test
pop
shrl
leave
and
push
mov
dec
push
scas
lret
inc
push
aaa
cmp
cltd
test
xor
jmp
insl
inc
push
mov
push
in
mov
dec
or
dec
jb
rcrl
popa
xor
aaa
lds
cmp
sub
call
mov
pop
lock
mov
inc
mov
add
rorl
shlb
testl
psubusw
test
cmp
mov
clc
shlb
sbb
cmpsl
mov
push
cwtl
inc
ds
arpl
adc
cmp
aad
cmp
cs
aas
and
pushf
sbb
push
scas
fs
jne
stc
out
test
insl
xchg
fdivp
xchg
lds
mov
mov
pop
mov
sbb
xchg
dec
out
cs
dec
mov
mov
aad
negl
mov
outsb
stos
inc
inc
mov
jbe
mov
push
sub
sbb
js
lods
mov
dec
mov
fcmovu
ljmp
or
pop
dec
sahf
andl
push
xchg
ljmp
adc
jmp
lods
adc
nop
pusha
dec
sbb
or
sbb
pop
into
jno
lock
clc
push
out
loopne
xchg
add
int3
pop
leave
or
lds
xor
rorl
sti
cwtl
cmp
jmp
mov
push
bound
mov
mov
dec
mov
jo
push
xchg
imul
inc
push
cmp
je
adc
cmp
mov
rcl
mov
inc
push
pop
out
shr
cmpl
lret
lods
xchg
sti
loope
xchg
movsl
xchg
movsb
test
rorb
sbb
int
adc
pushf
cltd
inc
push
sub
add
stc
in
sub
and
add
ss
call
mov
xchg
les
dec
movsl
xchg
xchg
loope
jmp
fsubr
mov
cmp
sbb
scas
das
dec
repz
push
jg
or
roll
adc
int
cmp
out
mov
sahf
lods
ljmp
pop
xor
mov
xor
rcrl
cwtl
adc
fistl
adc
loop
xchg
lods
fs
mov
clc
dec
lock
loope
fs
in
shr
hlt
fistpl
stos
loope
adc
ds
sub
sub
cmp
dec
adc
adcl
out
fmul
jp
orb
cmp
mov
les
loopne
stc
sub
sbb
or
or
sbb
leave
add
cwtl
sub
push
mov
fdivrs
pop
xor
mov
xlat
mov
mov
repnz
iret
outsl
scas
aad
test
es
dec
lea
movsb
jno
ljmp
cmpsl
xchg
dec
stos
mov
dec
cmpsl
pop
push
lea
xchg
mov
shl
xchg
jecxz
bound
sahf
cmpsb
test
loope
scas
or
cltd
push
hlt
bound
xchg
pop
pushf
stos
in
xorb
imul
mov
je
das
mov
nop
ret
iret
sbb
push
test
add
js
dec
mov
rolb
jg
flds
testb
sbb
inc
test
push
lock
mov
jbe
adc
push
test
bound
in
jl
icebp
aad
les
sbb
add
leave
push
rclb
cmc
mov
and
pop
pop
and
rclb
data16
loop
fdivs
test
push
stos
aad
adc
pop
mov
stc
cmp
jmp
and
test
sahf
push
mov
xchg
pop
les
inc
call
out
mov
sub
sbb
xchg
dec
and
aas
adc
jmp
cld
pop
popf
iret
mov
dec
mov
test
sub
inc
into
andl
push
stos
jno
push
mov
and
dec
cltd
fdivs
pusha
jnp
jg
push
aaa
mov
fnstsw
or
imul
addr16
enter
sub
nop
xor
jno
dec
idivb
enter
into
mov
fwait
mov
movsl
push
adc
lock
ret
in
andl
mov
mov
push
in
hlt
cmpsb
call
jo
js
loope
pushf
loopne
pop
and
in
adc
imul
jae
fisttpl
andb
insb
je
test
jo
into
pop
loope
rorb
fcomip
cmpsb
add
xor
xchg
push
pushf
push
andb
inc
jno
ret
sahf
test
inc
in
lret
or
sbb
xor
data16
stos
enter
xor
or
cmp
dec
xchg
dec
subb
imulb
cmp
and
pop
cmp
xchg
cmp
xchg
sub
mov
scas
out
loop
sbb
sbb
mov
xor
sahf
inc
adc
cwtl
jge
xor
nop
test
mov
sub
or
sub
insb
lods
pop
push
fisttps
sub
sar
push
scas
gs
jnp
int
int3
or
fprem
cmp
cltd
movsl
inc
inc
ljmp
mov
shrb
sub
sahf
cld
out
test
xchg
jmp
jle
stc
cltd
sub
cld
inc
pop
lods
and
shlb
pop
jbe
fs
mov
out
dec
lods
mov
outsb
dec
mov
add
js
mov
dec
jno
sub
inc
lds
mov
pusha
and
inc
push
mov
test
test
in
push
fwait
ret
outsb
adc
insb
sbb
mov
inc
out
pop
adc
loop
push
lret
repz
mov
out
sub
pop
inc
xlat
sub
mov
movsb
and
mov
cmc
fnstsw
and
enter
or
jb
inc
dec
push
in
popa
cmp
in
dec
push
push
push
inc
aad
es
cmpsl
push
outsl
sbb
out
insl
sub
iret
in
out
aaa
mov
int
xchg
jl
icebp
loope
or
mov
xchg
sub
and
lds
xchg
push
cmp
sbb
push
add
mov
pop
add
mov
sub
sbb
out
lds
call
test
add
loop
and
mov
adc
filds
repz
pop
fs
out
mov
ljmp
cli
ss
inc
in
dec
add
cmp
lods
icebp
mov
pushf
mov
mov
pop
pushf
loopne
pop
imul
inc
cmp
push
iret
cmp
sbb
mov
mov
mov
mov
testl
mov
lods
movsb
mov
addr16
pop
data16
sbb
pop
enter
test
mov
and
push
orl
test
lahf
jmp
or
push
adc
jmp
jp
adc
xchg
push
jle
xchg
mov
mov
mov
daa
das
sbb
and
ret
es
cmp
pop
cmp
or
fmull
into
jne
jb,pt
sbb
inc
bound
jle
jnp
xor
sbb
lock
fdivs
or
xchg
dec
push
dec
in
movsl
bnd
aas
mov
inc
mov
sbb
fistpl
dec
inc
int
aas
icebp
cmp
inc
jg
out
cmpsb
rclb
mov
jb
dec
xchg
and
es
push
lahf
test
dec
sub
xchg
bound
sbb
pop
push
into
sbb
inc
aas
sti
dec
mov
pop
lods
adc
daa
aas
shll
sub
not
fisttpl
fs
and
test
and
bound
mov
dec
add
aad
ja
push
sbb
pop
sbb
repnz
int3
xor
in
cmc
sbb
fisttpll
xor
mov
out
jge
mov
add
test
outsb
adc
inc
in
add
outsb
add
fldt
pop
test
out
push
xlat
ljmp
adc
arpl
and
sub
rcr
test
mov
ss
xor
push
jnp
sbb
mov
fldenv
pop
arpl
stos
addr16
pop
leave
sub
or
dec
dec
sbb
dec
dec
mov
test
in
pop
pop
fwait
mov
scas
or
nop
pop
popa
adc
data16
mov
mov
std
pop
add
cmp
lret
add
xchg
inc
inc
and
add
and
xchg
sti
scas
pop
fnstenv
fnsave
push
std
sar
sbb
mov
cld
es
rorb
repnz
xor
mov
inc
ljmp
mov
orb
xchg
xor
pop
xlat
sub
int
inc
mov
push
mov
push
lds
loopne
shrb
lcall
cmp
xchg
arpl
mov
pop
or
cmp
in
js
sub
outsb
mov
lock
test
push
xor
xchg
jmp
daa
push
and
aaa
inc
push
add
pop
cli
outsb
ljmp
aaa
and
in
dec
repnz
sahf
xlat
xchg
xchg
mov
push
sub
dec
sub
jo
or
iret
addr16
xchg
fiaddl
cs
sub
mov
ret
mov
das
stc
jb
dec
setg
push
cmc
lea
mov
popa
aaa
call
mov
ds
movsb
jl
add
hlt
mov
shrl
jb
pop
push
leave
mov
xchg
adc
jae
pop
ss
sbb
pop
push
bound
int
add
adc
add
sbb
push
push
add
dec
sub
ret
and
push
mov
rorb
jnp
test
stos
scas
bound
pop
cmpsb
dec
lcall
loopne
daa
cmp
cmp
jns
jns
mov
fistps
push
in
jns
and
pusha
jmp
pop
inc
inc
ds
das
xchg
int
xchg
repnz
push
sub
andb
into
std
and
or
xor
out
add
push
mov
mov
cmp
popf
jge
add
ja
mov
outsl
in
add
mov
repz
scas
stc
repnz
dec
lahf
in
push
push
or
push
punpckhdq
cmp
enter
je,pn
inc
adc
or
cmpsl
in
fwait
jle
insb
sub
and
rcrl
pop
add
in
pop
add
mov
push
lods
pusha
and
inc
and
loope
mov
mov
mov
fsubl
das
jo
inc
je
adc
lods
xchg
iret
pop
fmull
stc
sub
repnz
cwtl
pusha
clc
pop
into
std
and
shlb
jecxz
inc
sahf
shll
inc
mov
xorl
fnstcw
or
or
push
nop
lock
hlt
lret
push
fcompl
test
cld
sub
mov
repnz
adc
mov
xchg
push
fsts
stos
idivb
lcall
call
aad
js
insb
cmp
sbb
push
mov
xor
icebp
mov
cmp
dec
lods
cmp
iret
add
sbb
xor
adc
push
and
adc
test
js
mov
dec
add
data16
mov
pop
and
dec
or
ds
xor
frstor
pop
xchg
sbb
mov
cmc
popaw
sahf
js
pushf
imull
imul
pop
add
jge
mov
in
sbb
dec
push
jge
je
add
rclb
mov
into
insb
movsl
inc
data16
or
and
mov
xchg
pop
daa
add
scas
pop
repz
ss
ds
or
jae
aad
lea
push
push
or
jmp
sbb
dec
sbb
jg
daa
rsqrtps
xorb
mov
int
fmull
popf
add
pop
mov
push
adc
pop
pcmpeqb
popa
add
cmp
jnp
js
push
mov
stos
mov
das
xchg
push
cmp
inc
shlb
inc
xchg
ret
jecxz
mov
or
sub
cbtw
lahf
movsb
insl
mov
xchg
pop
pop
cmp
lods
cmp
mov
nop
mov
negb
stc
xchg
mov
mov
push
in
test
sbb
kxnorw
aaa
dec
cmpsb
std
sbb
nop
jb
sbb
push
push
fstpl
push
adc
xor
and
cmp
mov
and
jl
cmp
lahf
test
mov
jno
sbb
sarl
add
mov
xor
pop
push
fdiv
aaa
mov
or
bound
fsts
dec
jp
mov
sub
fnsave
add
mov
mov
gs
pop
bnd
mov
daa
lock
xchg
adc
ror
mov
add
cmpsl
out
lods
mul
lock
js
jmp
pop
jo
push
das
dec
dec
iret
mov
out
insl
jle
in
andl
pop
aaa
notb
mov
lock
xor
cmpsb
test
sbb
mov
fisttps
subl
rcrb
ja
or
dec
and
pop
fimull
pop
leave
and
divb
and
hlt
repz
lock
mov
sub
add
popa
adc
or
sub
push
pushf
fiadds
xchg
hlt
outsb
add
xlat
sahf
mov
xlat
in
icebp
mov
mov
int
xlat
pop
push
fcoml
fstp
dec
adc
mov
mov
push
or
inc
mov
aaa
xor
fstl
and
adcl
sarb
enter
dec
xor
push
orl
scas
cli
cmpsl
mov
fists
decb
push
loopne
das
aaa
shl
clc
lahf
mov
lods
push
stc
cmpsb
pop
dec
push
jl
mov
mov
xor
pop
inc
adc
data16
push
sbb
cld
mov
loopne
cmp
icebp
mov
jge
pop
leave
pop
sub
sar
push
movsl
lret
aad
xchg
pop
mov
lock
add
or
stos
lret
mov
cmpsb
mov
sbb
addr16
and
sbb
andb
test
cmp
mov
mov
mov
xor
in
or
pop
sbb
jnp
and
pop
mov
sbb
and
test
jl
xor
cwtl
or
push
dec
xchg
movsl
inc
aad
xchg
xlat
repnz
roll
js
push
push
mov
sahf
into
xlat
push
sbb
ja
sti
sahf
inc
mov
stos
adc
jo
sub
cs
in
pop
iret
js
lods
fcmovnbe
in
adc
pop
div
mov
int3
xor
ss
sti
out
je
dec
xor
cli
jecxz
aaa
addb
sub
push
pusha
dec
fistpl
leave
les
insb
cmpsl
sub
mov
adc
add
xlat
icebp
into
and
pop
cmpl
xor
push
or
push
sbb
mov
adc
push
fidivl
mov
popf
or
adcb
movsb
popl
testl
ud0
dec
dec
mov
sarb
lret
movsb
scas
push
cmpsb
call
bnd
lock
cmp
xchg
mov
cmpl
loop
jae
mov
aas
mov
js
sub
inc
mov
mov
jo
std
dec
inc
add
inc
inc
cmpb
mov
and
je
das
inc
inc
test
lock
mov
testb
pop
push
mov
and
push
scas
hlt
dec
mov
mov
imul
cs
mov
fsubs
jns
or
sub
dec
int
in
btl
sahf
shl
sbb
bound
ror
iret
push
fsts
dec
cmc
imul
inc
cmp
pop
inc
in
les
test
ljmp
das
fsts
mov
pop
enter
int3
jns
mov
cmp
into
in
insb
xor
lret
mov
fstpl
and
popa
jb
loop
pop
lock
cmp
cld
out
push
jo
push
sub
jmp
xchg
cwtl
cli
jg
push
push
push
pop
and
pop
sbb
insb
push
and
sbb
js
cmp
int
adc
popa
stos
push
fcoms
or
cs
fstps
mov
hlt
dec
and
pop
dec
test
arpl
xor
push
or
push
jp
jne
jne
pop
xor
push
jb
pop
gs
sub
das
push
cmp
cmpsb
loop
in
pop
test
ja
mov
mov
popf
xchg
ljmp
and
xchg
fsts
loope
arpl
outsl
in
inc
cld
cltd
jecxz
out
or
adc
jb
rol
inc
leave
shlb
and
jno
pop
jge
cmpsb
int
in
mov
test
and
enter
out
inc
xor
lods
cmpsb
pop
pusha
shl
dec
push
adc
hlt
sbb
in
inc
int
rclb
test
lock
xchg
pop
lods
and
jl
es
aas
mov
dec
jnp
test
mov
mov
adc
sub
and
mov
in
and
dec
and
js
lds
inc
sbb
or
dec
pop
test
inc
dec
dec
lods
or
mov
sbb
arpl
cmp
pop
or
or
imul
stc
cli
xor
test
lret
mov
or
add
add
imul
sti
fisubl
daa
mov
testl
pop
test
sub
popf
arpl
scas
outsl
xchg
nop
cmpsl
fbld
inc
fisttps
imul
cld
sti
cmp
add
andb
mov
xchg
adc
cmc
xchg
icebp
cmp
mov
push
cmp
gs
pop
mov
xchg
add
fnstcw
cmp
mov
push
imul
fidivrs
sar
mov
mov
push
dec
add
imul
adc
ficompl
adc
push
cmpsb
xor
push
dec
inc
sub
int3
out
cmp
ret
xchg
je
aam
inc
xchg
adc
dec
aad
call
jno
jl
add
lock
pop
incb
cs
fimuls
sbb
sbb
outsb
push
fdivrs
adc
std
js
push
push
or
bound
out
jns
mov
leave
ss
push
adc
or
and
repz
lods
push
call
or
lret
xchg
out
pop
mov
cld
rclb
xchg
mov
pop
das
mov
jecxz
add
ds
ss
mov
push
mov
mov
sti
push
jle
imul
aas
lret
sbb
out
jnp
jae
xor
pop
adc
imul
scas
cs
add
mov
leave
mov
loop
lahf
cmp
mov
fs
faddl
mov
in
aaa
test
sbb
fsubrl
test
cmp
add
pop
lds
inc
dec
xor
push
dec
fidivrs
icebp
sbb
mov
imul
sarl
dec
push
cmc
pop
jl
cltd
popa
mov
cmp
dec
mov
xor
mov
push
or
lahf
and
pushf
mov
xchg
fxch
and
sub
jl
lcall
pop
enter
mov
mov
xor
or
ret
inc
pop
jbe
in
loopne
rorb
out
fnstcw
lea
out
cwtl
jg
dec
fincstp
cltd
pushf
repz
mov
add
xchg
jmp
mov
cli
in
mov
mov
push
adc
fstp
lahf
popa
push
push
je
inc
jns
mov
enter
mov
cmp
shl
mov
loop
add
sbb
out
jge
add
mov
cmovp
mov
insl
or
xor
fcoml
outsl
bound
mov
cmp
fiaddl
lret
dec
in
push
into
lock
mov
jle
dec
rorl
mov
fcmovbe
fldt
ret
data16
subb
shl
and
ss
insb
sarb
sub
cmpl
add
pusha
cmp
sub
in
sub
in
mov
fcomip
pop
sub
push
popf
pop
cmpsb
and
icebp
mov
out
mov
jl
or
push
ljmp
pop
add
mov
iret
xor
cmp
adc
lds
adc
popf
scas
dec
leave
jle
mov
pop
cmp
and
test
dec
stos
pop
push
notb
mov
or
adc
pop
add
mov
sub
ret
and
jns
nop
jle
imul
dec
and
aaa
inc
mov
sarb
sarb
sbb
push
cvtps2pd
mov
dec
jmp
sub
mov
fs
push
inc
jno
daa
imul
scas
jbe
subl
fstl
lods
jns
and
stc
inc
in
xchg
cmp
xchg
lahf
xor
std
add
lret
movsbl
movsb
lahf
lods
add
fmul
sbb
movsl
xchg
addr16
adc
fwait
icebp
mov
gs
stc
push
movzwl
inc
or
jno
scas
push
sahf
in
push
cltd
sbb
jb
ljmp
int
movsl
add
xchg
das
jg
mov
mov
je
cs
stos
sub
mov
ds
push
inc
lea
test
lds
lods
bound
scas
lret
daa
test
xor
sbb
push
sub
stos
mull
cmp
dec
inc
hlt
dec
inc
add
xorb
cmpsb
dec
sbb
xor
sarl
push
dec
lock
adc
sbb
push
ret
enter
gs
faddl
nop
addb
jbe
jge
lret
lcall
pop
push
xor
insl
jmp
ja
out
xchg
jge
lahf
xchg
and
and
add
xchg
les
lret
adc
outsb
iret
iret
fcom
cli
inc
std
or
xor
jae
cld
pop
push
xorl
aas
sbb
addr16
jno
dec
xor
pop
popf
call
mov
testb
cmp
sahf
aam
mov
cmp
xchg
out
movsl
mov
ss
ja
mov
xchg
into
pop
add
shll
pushf
xor
scas
pop
lahf
lods
jmp
and
mov
mov
mov
sbb
mov
sub
in
int3
xor
enter
adcb
hlt
sub
outsb
and
xbegin
xor
sbb
lods
lcall
pop
xchg
jecxz
in
add
mov
push
test
ljmp
cmpsb
cmpsl
add
decl
xor
inc
rolb
test
int
pop
sub
icebp
dec
pusha
outsl
mov
add
sub
out
aad
arpl
mov
push
xchg
dec
push
inc
test
pmaxsw
aaa
fnstenv
cltd
leave
xor
bound
data16
aam
mov
lret
and
push
mov
mov
mov
scas
pusha
or
mov
sbb
cwtl
pop
xchg
push
leave
jle
out
mov
imul
aam
sub
push
loope
loop
clc
sbb
sti
xor
rcll
xor
outsl
add
sti
push
jnp
daa
aam
and
out
lock
mov
fnsave
hlt
das
push
dec
add
ljmp
fiadds
test
mov
lret
shrb
divb
repz
mov
mov
jmp
mov
or
dec
testl
stc
popa
ljmp
and
push
test
fwait
test
add
in
xchg
cld
pop
outsl
dec
pop
mov
adc
js
xor
mov
mov
mov
dec
icebp
scas
fists
push
fs
test
iret
jno
inc
jbe
mov
mov
pop
jecxz
xchg
lock
xchg
scas
loope
adc
scas
notb
in
pop
arpl
pop
mov
cwtl
sbb
dec
mov
inc
sbb
pop
dec
dec
add
test
add
popa
cmpsl
or
add
mov
enter
lods
xchg
loopne
lahf
mov
test
scas
dec
cltd
jnp
cmp
lcall
or
inc
pop
shr
dec
and
adcb
cwtl
les
jbe
aam
mov
xchg
sbb
inc
dec
out
push
fisttpl
push
sti
jle
lea
xor
cmpsb
imul
push
xor
inc
sbb
or
adc
aas
pop
push
fcmovu
test
ljmp
push
sbb
test
cmpsb
pop
inc
sbb
mov
xlat
imul
xor
shrb
jmp
jp
fst
sub
aaa
pop
enter
shrl
inc
xchg
aam
mov
aam
jae
sub
or
sub
test
test
andl
mov
movl
lock
pop
mov
mov
push
popa
sbb
leave
sbb
pusha
jle
mov
lcall
ds
pop
ss
sub
lods
pop
mov
lret
mov
sbb
and
xor
dec
sbb
add
inc
mov
dec
add
or
loope
cli
push
in
and
dec
xlat
fsubrl
sbbl
popf
hlt
mov
daa
repnz
push
pop
inc
addr16
fadds
cli
sub
cs
ja
leave
scas
vminss
gs
scas
hlt
out
in
cwtl
out
dec
or
xchg
ljmp
inc
insb
aas
sbb
jns
idivl
pop
out
xchg
jbe
test
mov
and
aaa
mov
popf
in
pop
call
icebp
stos
push
sbb
lea
es
fld
ds
lods
push
push
fs
dec
mov
xor
movsb
stos
jne
out
fstl
test
inc
pop
movsl
cmp
call
push
sbb
pushf
sbb
and
iret
push
add
add
loop
inc
cwtl
and
dec
mov
pop
mov
imul
lea
pop
jg
sub
lret
mov
pop
shll
lcall
fcompl
push
cltd
and
ss
inc
stos
xchg
std
add
xchg
pshufw
jg
mov
add
or
cmp
fcmovnb
add
dec
cmp
xchg
dec
fists
mov
cmp
ds
mov
xorb
testb
mov
shlb
sbb
hlt
dec
test
rcrb
pop
lea
push
cmp
and
mov
inc
push
adc
ret
ljmp
adc
cmp
loop
sub
jne
sar
cltd
outsl
int
dec
inc
repnz
scas
add
add
outsl
mov
add
shl
or
jae
pop
xlat
and
sbbb
movsl
inc
mov
ror
stos
outsb
jae
and
jmp
xorb
inc
dec
mov
test
mov
push
push
inc
xchg
mov
out
jb
std
and
adc
push
lret
stc
pmaxub
pop
nop
pop
in
fldenv
sarb
ds
sub
dec
movsl
pop
inc
pop
ja
push
fsubp
add
cwtl
mov
repnz
pop
mov
ljmp
add
adc
xorl
shll
imul
mov
xor
mov
loopne
xchg
pop
aaa
jecxz
movups
xchg
mov
int
iret
adc
sub
mov
popa
leave
push
cli
mov
adc
inc
in
cld
rcrb
mov
push
mov
mov
and
mov
jp
hlt
jge
mov
in
xorl
mov
arpl
inc
lea
add
paddb
push
lcall
sarl
cmc
mov
in
test
cwtl
aad
sti
ret
inc
adcl
or
inc
and
andl
das
rolb
jg
xchg
mov
insl
adcb
sub
jmp
cmp
xrelease
je
adc
out
cmpsl
fucom
push
push
dec
das
pop
mov
andb
sbb
sub
popa
lock
xchg
inc
mov
imul
sub
mov
js
rcl
lock
mov
cmc
lahf
adc
inc
in
call
ds
jge
xchg
sbb
xchg
das
pop
shrl
clc
stos
sahf
gs
push
dec
nop
adc
sbb
or
pusha
pop
pop
fsubrl
sbbb
jns
pushf
pop
xchg
xchg
stc
ret
int
add
frstor
adc
jle
inc
pop
cmpsl
sbb
and
sbb
data16
pop
lahf
leave
cmpsb
insl
fldcw
push
cmp
sbb
jp
ljmp
mov
call
test
pushf
hlt
jmp
xchg
jb
cli
mov
out
inc
nop/reserved
int3
rorb
adc
fucom
adc
adc
pop
iret
mov
mov
lock
adcb
push
test
add
mov
scas
xor
xchg
dec
in
movsl
adc
cs
inc
jl
stos
fcmovbe
mov
fstl
sti
jg
and
cli
inc
and
mov
or
pop
enter
dec
leave
lahf
adcb
arpl
lret
inc
pop
inc
dec
adc
push
jb
dec
aaa
mov
in
int
inc
add
xchg
cmpsb
inc
sub
es
ret
ja
call
negl
in
shlb
jg
shrb
adc
xchg
or
push
push
insl
xchg
pop
jp
or
xor
mov
daa
xlat
data16
adc
or
and
cmc
xchg
lods
xchg
in
ljmp
push
xor
and
pusha
xchg
lock
xchg
dec
mov
nop
dec
lret
jnp
cmp
les
push
cmp
mov
call
movsb
mov
out
aaa
xor
sbb
xor
inc
popa
mov
push
aam
push
cmpsb
int
or
add
dec
sub
frstor
jmp
jg
push
push
mov
xchg
icebp
fwait
sub
or
outsl
in
cmp
mov
and
in
jno
mov
mov
sub
test
loop
inc
in
bnd
mov
stc
mov
push
xchg
mov
popa
jp
jmp
inc
sub
jns
pop
mov
xor
mov
jp
aam
mov
xchg
push
adc
and
out
push
stos
cmp
imul
mov
negl
lods
cld
xchg
test
sbb
aam
adc
rol
pop
adc
fistpll
xchg
cmp
mov
hlt
bound
dec
nop
ret
or
out
cmp
mov
int3
jl
inc
push
and
cmp
dec
sahf
push
test
fstpt
cmp
jmp
outsl
cmpsb
mov
cs
inc
sub
cmp
or
mov
test
mov
test
imul
push
rorl
sbb
loopne
and
xor
inc
xor
sub
test
cmpsl
adc
inc
push
das
dec
mov
mov
push
daa
inc
push
lds
jne
inc
fbstp
ss
push
adcl
lret
dec
adcb
dec
pop
movsb
incb
insl
add
xchg
lods
out
js
jnp
pop
xor
fistpll
test
into
adc
lds
push
xchg
fwait
mov
in
jnp
mov
sub
leave
ficoml
add
xchg
add
leave
inc
add
and
inc
jecxz
jp,pn
add
les
lret
ds
jae
shrl
mov
ja
push
sub
xchg
mov
insl
fcoms
add
and
or
mov
repnz
push
out
jae
inc
fldenv
mov
sub
xlat
inc
xlat
sbb
imul
sbb
mov
mov
fists
push
lea
inc
xchg
cmp
fildll
test
sub
lcall
pop
popf
push
lret
sar
dec
mov
enter
nop
test
in
mov
loopne
or
pop
add
sbb
aaa
jb
mov
cmovno
bound
mov
adcl
js
push
xchg
cmp
dec
loop
mov
add
call
push
dec
rcrb
jbe
jns
jmp
adc
ja
cwtl
push
mov
mov
aas
jecxz
pop
shll
scas
js
adc
sbb
lret
gs
jp
and
cmp
fnstcw
jns
sub
cwtl
lea
in
push
imul
inc
aad
jne
pushf
mov
xchg
sbb
je
xor
aam
lds
push
sarb
xor
popf
popf
rorb
call
mov
adc
cwtl
xor
mov
popa
icebp
mov
xor
cmc
adc
jecxz
jns
ss
cmp
or
nop
loope
call
cmp
shll
fisubs
xchg
or
addr16
arpl
mov
leave
lret
push
and
loope
cmp
push
mov
int3
adc
mov
mov
in
fnstcw
and
cmpsb
xor
jb
loopne
lock
mov
adc
pop
push
mov
sub
cmp
lods
sbb
xchg
aad
rcrb
andl
mov
icebp
add
jo
imul
ret
and
popa
xor
jnp
fldenv
scas
repnz
mov
mov
lods
sub
stos
mov
cli
aas
aad
cmpsb
xchg
sub
cmpsl
ret
ret
rol
je
dec
lea
outsb
jg
jge,pt
jmp
jle
add
cmc
xchg
push
outsb
test
xchg
fcomi
test
rolb
sbb
xor
pop
push
scas
or
lea
cmp
sbb
sbb
mov
into
inc
cmp
adc
in
push
aad
ret
int
mov
xchg
pop
mov
jnp
jo
mov
pushf
push
ja
push
adc
int
pop
and
ficoml
sti
add
sbb
sbb
push
dec
pop
inc
push
psraw
sbb
sub
test
xlat
inc
push
repz
jae
into
adc
or
lea
jno
imull
adc
pop
cltd
mov
bound
cmc
sbb
dec
jne
je
lods
xchg
inc
popf
shll
push
pop
fcmovb
incl
daa
push
cwtl
and
inc
push
push
push
mov
adc
lret
jl
jle
js
add
clc
dec
mov
xor
mov
jmp
inc
mov
out
jge
or
outsl
push
add
cmp
mov
mov
mov
cmp
ja
hlt
and
lea
push
push
push
rcrl
add
adc
fistl
push
sbb
pop
mov
mov
xchg
fdivrs
pop
dec
movsb
stc
lahf
rolb
nop
push
js
mov
inc
lock
xchg
cltd
sub
fimull
or
test
dec
inc
sub
dec
and
data16
xor
daa
int3
push
cmp
cwtl
pop
out
test
xor
rolb
xlat
ljmp
daa
or
adc
js
imul
cltd
testl
shlb
inc
jmp
shll
fisttpll
arpl
cltd
push
jns
jecxz
pushf
idivl
std
test
mov
mov
stos
sbb
mov
mov
in
fs
idivb
inc
jmp
mov
nop
out
loop
push
rcr
out
pop
mov
test
insb
test
out
fptan
outsb
imul
adc
movsl
xor
sub
and
pop
dec
cld
push
les
popf
xchg
cwtl
out
aaa
push
sub
jns
sbb
xchg
mov
cld
push
jle
pop
jnp
lahf
and
xor
add
test
mov
pop
push
lret
xor
pop
das
aam
or
dec
dec
jg
out
mov
mov
xor
clc
repz
cmova
sbb
lret
lods
push
cmc
popf
lcall
movsb
lret
imul
push
dec
popf
and
mov
pop
jbe
push
cmp
in
and
jo
cmp
int3
ja
in
mov
pop
and
repnz
out
jp
xchg
push
data16
iret
cwtl
jle
sbb
cmp
iret
dec
icebp
mov
cwtl
in
add
data16
mov
out
imul
sub
push
mov
xor
dec
movsb
popa
mov
mov
push
lods
xchg
into
mov
scas
push
inc
dec
fucomip
je
xchg
xchg
xchg
je
rcrb
push
xchg
push
aam
dec
orl
mov
sbbb
adc
outsl
dec
fisubl
imul
sbb
mov
cmp
cld
dec
enter
lods
movsb
push
sahf
inc
sub
sub
push
in
adc
inc
movzbl
dec
insl
mov
je
popa
negl
cwtl
fcmovu
inc
sbb
mov
pop
jnp
and
pop
enter
aas
outsl
lahf
adc
add
arpl
push
push
enter
sub
or
add
subb
jno
insb
jg
mov
mov
call
pop
js
fisubs
push
fidivrl
add
lock
cmp
shrb
leave
push
bound
in
clc
cmpsl
inc
mov
push
push
xor
pop
push
add
lret
or
xchg
mov
nop
sbb
pop
jns
cmp
popf
mov
aam
imul
mov
repnz
and
int
dec
insb
xor
out
or
and
adc
outsb
mov
xor
xchg
pop
add
shrb
and
dec
xchg
xchg
mov
subb
xor
pusha
scas
push
xchg
inc
or
push
fs
mov
leave
sub
popa
jl
jle
xchg
mov
sub
orl
ja
out
rorb
stos
adc
mov
int
and
adc
divb
cmc
dec
movsl
xor
mull
out
mov
out
nop
imul
pop
push
dec
pop
jb
aaa
push
in
pop
inc
test
pop
pusha
fwait
sbb
aas
inc
repz
pop
movsl
add
inc
dec
push
outsb
scas
flds
add
jl
test
in
pop
nop
push
cmpsl
dec
imul
aaa
imulb
int
inc
ljmp
ljmp
mov
and
xchg
dec
jl
xor
or
lret
and
jmp
fmuls
addr16
data16
jbe
xchg
jnp
adc
ljmp
rcrb
aaa
mov
mov
cli
dec
xor
and
shll
ljmp
add
nop
xchg
int
movsb
test
idiv
dec
mov
arpl
out
mov
xchg
sbb
jle
hlt
or
add
stc
mul
push
push
loopne
cmpsb
out
shrb
cmpsw
popf
jae
jb
aam
scas
lods
xchg
or
jle
mov
or
mov
or
repnz
add
popa
sbb
inc
fwait
mov
aas
pop
jns
and
sub
push
pop
negl
je
and
mov
leave
rorb
fimull
popf
sahf
jge
push
inc
cmp
mov
sbb
cmp
add
inc
dec
jns
repnz
test
ret
popa
mov
aaa
shrl
xchg
mov
in
xchg
xchg
pushf
sub
dec
ficomps
xchg
rcrb
jle
insl
ja
xor
push
sahf
xchg
pushf
in
fstpl
loopne
or
push
mov
add
mov
cli
nop
fwait
pop
subb
rcll
inc
int
push
mov
out
movsl
leave
test
fs
and
dec
and
fildl
jns
andb
in
cmc
addr16
outsl
xchg
mov
imul
pop
out
test
xchg
cmp
pop
divl
mov
adc
adc
and
push
in
or
mov
sub
out
sbb
cmp
inc
push
pop
mov
iret
pop
mov
ss
mov
add
xchg
mov
mov
or
mov
push
test
push
mov
ret
loope
push
mov
pop
mov
xchg
mov
jbe
add
dec
pop
adc
mov
jo
sbb
xorl
lock
push
cmc
pop
ja
clc
hlt
and
sub
fstps
pmaxub
fists
adcb
jne
push
pop
dec
mov
pop
xchg
push
jl
push
test
mov
lret
push
mov
movsl
pop
mov
cmc
mov
pop
imull
outsb
xor
std
pop
inc
loop
mov
popa
xchg
ja
xchg
push
sub
test
scas
rcr
fwait
repnz
imul
jae
imulb
jg
jecxz
imul
int
add
jae
xchg
or
addr16
and
sar
xchg
insb
fisubrs
mov
insb
aam
pop
push
imul
adc
mov
sub
push
mov
test
rorl
lods
shlb
enter
imul
push
outsl
inc
pop
mov
sbb
pop
out
mov
add
loop
filds
sub
out
movsl
pop
xor
fs
cs
inc
sbb
mov
addr16
addb
sbb
ret
mov
fstpt
enter
or
in
sbb
add
out
adc
inc
loope
adc
aaa
xor
inc
mov
inc
out
push
pop
sbb
and
lods
jge
stos
pop
les
xchg
sbb
mov
insl
inc
lahf
js
lret
jno
test
push
outsb
fld
cmp
dec
xor
lods
xchg
push
mov
inc
xchg
jl
add
inc
out
add
daa
cs
std
shr
add
hlt
cmp
in
outsb
icebp
out
fs
dec
or
scas
fdivl
and
sub
ds
pop
mov
cs
outsb
jge
aam
pop
test
inc
fcoml
nop
movsb
dec
jbe
mov
xor
jne
outsb
jmp
aas
jo
inc
out
push
xor
add
cmp
dec
fldl
dec
imul
mov
scas
push
sbb
cmpsb
dec
std
je
xor
les
sub
sub
ds
or
xchg
pusha
cmp
jg
add
jno
loop
mov
mov
mov
fdivrl
inc
fwait
jge
adc
lock
mov
js
mov
ret
cmp
sahf
enter
pop
adc
xlat
push
sub
aam
test
dec
dec
or
mov
in
mov
add
enter
jg
xor
jecxz
inc
dec
mov
jp
mov
mov
into
jbe
pushf
test
mov
inc
push
push
adc
loop
cmp
xchg
in
mov
ds
or
and
mov
leave
and
or
adc
pop
dec
insb
sub
dec
xchg
push
xchg
arpl
movsb
in
fdivl
ret
mov
mov
pop
xor
push
call
aas
mov
xchg
push
sbb
loop
cwtl
scas
lret
roll
push
jl
pop
push
dec
adc
push
nop
push
mov
sbb
lds
mov
subl
lahf
dec
jecxz
cltd
inc
or
inc
sub
js
jns
sbb
mov
dec
lcall
mov
rorb
pop
pushf
out
add
or
rolb
mov
mov
jmp
loope
mov
add
push
ljmp
dec
sbb
call
xor
cs
jecxz
test
dec
popf
jl
loope
jbe
push
push
lods
dec
mov
dec
add
jmp
cmp
adcl
inc
cli
rorb
pop
int3
jle
aam
mov
shr
repz
xchg
mov
inc
adc
cli
mov
pop
mov
enter
jecxz
fisubl
cmpsb
insl
addr16
jnp
mov
sub
sub
xor
leave
clc
fsubp
sub
in
push
push
dec
aad
sub
lds
jl
jae
xor
clc
cwtl
mov
or
mov
pop
and
es
sub
cmp
jmp
push
adc
add
sbb
fs
movsb
mov
lods
dec
std
int
shll
jl
pop
pop
push
pop
pop
int3
out
mov
fsts
mov
push
lahf
fmul
xchg
xor
pop
les
dec
xchg
pop
xchg
or
or
push
mov
adc
jno
scas
cltd
ss
pop
sbb
pop
fnstcw
pop
fidivs
popa
pop
xchg
or
mov
std
xchg
mov
lahf
subb
lock
jbe
shll
lret
mov
pusha
lahf
nop
movsb
jb
fdivrl
in
push
rcr
cmp
psllw
sub
xchg
or
jo
mov
sarb
stos
xor
mov
xor
dec
inc
out
mov
jnp
xchg
fs
jl
mov
fildll
pusha
inc
hlt
dec
mov
or
sub
call
mov
dec
push
ss
stc
push
sti
mov
dec
add
jne
inc
test
cmp
sti
inc
cmp
imul
int3
or
dec
inc
mov
and
xchg
or
or
dec
ficoms
sub
sbb
lock
sub
lahf
pop
in
lahf
iret
dec
mov
mov
loop
sub
popf
xor
cmp
add
rcll
or
mov
sahf
jnp
repz
loop
sbb
xchg
adc
adc
addb
aad
stos
adc
inc
pop
adc
add
adc
lds
repnz
mov
shlb
cmp
popa
rolb
xchg
popa
pop
mov
popf
cli
push
push
ret
push
cmp
push
pop
pop
sub
out
mov
jl
xor
mov
nop
xchg
rorl
jmp
push
adc
ja
popa
mov
mov
push
sahf
sbb
scas
sub
ss
ret
pusha
addr16
dec
xchg
lcall
sbbb
or
mov
pop
test
nop
add
add
fimuls
shll
ret
xchg
mov
pop
jmp
ror
nop
inc
dec
ret
sbb
jg
stos
icebp
das
mov
ds
out
or
out
or
mov
jo
into
enter
cmp
jmp
cmp
out
lock
imul
int
lods
jle
xchg
push
iret
ret
cmpsl
repz
loop
sub
gs
dec
test
js
mov
mov
loope
push
jge
push
xchg
pop
add
out
and
shlb
and
call
rorl
pop
mov
pusha
mov
push
rcll
cwtl
jo
lcall
add
xchg
push
pcmpgtb
push
filds
insl
cmc
aas
xlat
add
inc
sti
cmpsl
fiadds
aas
in
stos
lds
mov
or
add
pop
mov
xchg
mov
into
xchg
out
addr16
and
push
enter
jne
movsb
dec
sub
mov
mov
mov
xor
sahf
int
testl
adc
pop
pop
xor
mov
cmpsb
adc
fdivrl
cmp
clc
in
je
jns
mov
sbb
pushf
aaa
ret
pop
cmp
pusha
popf
cmpsl
cmc
add
test
sbb
aas
or
mov
repnz
adc
lds
inc
in
push
adcl
les
push
jo
lods
stos
aad
dec
and
dec
cmpsl
call
shrb
in
mulps
pusha
xchg
and
fucomp
mov
mov
lods
jg
outsb
and
cli
mov
jl
lcall
pop
xchg
push
negl
in
inc
inc
in
jno
push
pop
ret
jns
push
in
adc
xor
or
jge
cmp
adc
xor
adc
fstl
push
pop
jb
sbb
dec
faddl
sub
mov
movsl
out
leave
lahf
sub
lret
in
or
lret
pop
push
outsb
mov
xchg
xor
mov
and
shlb
push
stos
jns
les
clc
xchg
jo
arpl
cmp
lods
out
imul
stos
loop
add
xchg
and
sti
rcl
mov
in
dec
out
arpl
xchg
shll
std
xchg
loopne
or
lea
inc
shll
add
adc
fistps
sbb
push
dec
outsl
push
inc
inc
push
or
in
call
ret
pop
insb
ret
mov
cmp
mov
add
push
and
sub
mov
mov
xor
mov
inc
mov
test
mov
outsl
push
inc
pop
mov
sbb
xchg
loopne
xor
pop
jae
mov
sbb
jo
stos
mov
out
jle
dec
push
cmp
ret
xchg
sub
fs
fidivrl
lock
fwait
ds
ds
cmp
mov
test
push
push
into
jmp
ljmp
repz
dec
cmpb
data16
addr16
mov
out
xor
js
lock
mov
outsl
add
arpl
icebp
sbb
inc
mov
inc
fwait
mov
test
popf
sarb
jmp
in
loope
int
sbb
insb
pop
dec
call
dec
addr16
es
jnp
addr16
lcall
xchg
imul
push
fimuls
xorl
xchg
dec
test
inc
jmp
stc
add
das
es
cmpsl
les
in
lds
lret
leave
and
mov
divb
out
or
xchg
dec
jp
es
in
movsl
cmpsb
std
lock
fwait
mov
dec
mov
rorl
sbb
lods
mov
inc
out
enter
mov
fisttps
mov
lods
mov
pop
pusha
insb
mov
and
push
add
or
mov
xor
sbb
ds
cmp
xchg
stos
out
cmc
jae
push
dec
adc
in
outsb
sbb
xchg
mov
push
add
xchg
adc
fsubrl
fsub
or
mov
sub
stos
pop
or
ret
adc
jle
adc
push
out
insl
andb
in
cmpsl
movsb
icebp
pop
adc
lret
cmpsl
sahf
out
adc
push
stos
mov
push
xchg
sbbl
mov
mov
shl
loopne
jno,pn
mov
cli
push
pop
cmpsb
sahf
in
pushf
pop
sub
js
pop
and
mov
popf
sub
inc
fucom
dec
and
stc
mov
cwtl
mov
adc
pop
into
mov
ret
sub
cwtl
xor
fsubrs
xchg
sub
int
jns
xor
mov
adc
sub
cmc
test
and
aas
popaw
jnp
sub
sbb
mov
imul
dec
dec
jecxz
repz
rcl
ss
jp
sbb
xlat
jmp
lahf
repnz
pop
pop
jge
out
push
clc
imul
mov
push
or
arpl
call
inc
or
aad
or
gs
aam
add
negb
push
in
imul
lahf
fisttpl
cmp
arpl
lods
out
ds
pop
adc
cmp
mov
push
and
adc
cltd
jecxz
pushf
in
rcrb
icebp
mov
cwtl
inc
clc
adcb
decl
mov
adc
xchg
clflush
mov
fsubrl
lret
int3
cwtl
push
sub
fcoml
sbb
icebp
lcall
pop
lods
inc
dec
mov
das
and
pop
test
fs
cld
clc
fistpl
push
jne
aas
fs
ffree
dec
scas
pop
xchg
sti
mov
out
cwtl
sbb
mov
xchg
jnp
out
pop
ss
test
sub
clc
xchg
push
imul
ror
sub
sbb
jnp
and
imul
jecxz
push
cmpsb
in
and
lods
imul
lods
lret
ficomps
cmpsl
sub
push
pop
ds
sbb
cmp
push
fadds
push
dec
cmovs
mov
scas
cs
cltd
ja
fwait
pop
dec
xchg
xchg
cltd
or
popf
bound
stos
loopne
call
cld
notb
cmp
cli
stos
jno
fisttpl
mov
sub
in
jne
mulb
mov
push
shll
jge
dec
mov
test
pushf
jo
enter
dec
pop
aaa
cmpsl
add
xor
jmp
test
push
movsb
sbb
ljmp
orl
inc
lret
mov
std
movsb
insb
xor
push
sahf
xor
sub
jmp
sbb
jns
orb
inc
add
dec
adc
dec
mov
out
sbb
sahf
gs
arpl
icebp
hlt
gs
adc
leave
enter
pop
imul
mov
aas
shr
push
and
add
pop
adc
cmpsl
xlat
ss
adc
mov
xor
mov
inc
add
outsl
test
sarl
or
xchg
inc
and
pop
or
clc
xor
insl
xorps
outsb
adc
add
in
fisubs
mov
jmp
icebp
in
data16
sub
push
ds
jbe
test
mov
pop
mov
cmp
in
loopne
jp
xor
movsl
hlt
sbb
xchg
popf
arpl
mov
aad
nop
jnp
arpl
mov
push
mov
xorl
movsl
mov
cmp
add
push
push
insl
mov
jg
leave
js
dec
stc
adc
out
pop
push
fsubrl
ja
xchg
pop
cli
aad
lods
or
cmp
cmp
das
fs
sbbl
data16
lea
and
pushf
and
pushl
std
inc
dec
repnz
shlb
popf
mov
and
xchg
popa
mov
xor
aas
add
xor
nop
movsb
xor
dec
mov
insl
pop
lret
ficoml
aad
adc
mov
mov
mov
jge
mov
or
fcoml
rolb
std
ss
dec
xchg
enter
scas
jno
cmp
test
repnz
jne
cmpsl
jmp
mov
cmp
mov
cmp
lret
stos
push
mov
js
push
jle
push
in
xchg
or
mov
cmpsb
xor
jne
dec
std
mov
test
sbbb
sub
shll
push
outsb
popf
cmp
je
push
jb
fsubrp
insb
fimuls
pop
mov
dec
loope
mov
movsl
insl
aaa
inc
ret
jmp
cmpsl
loopne
push
stos
fsubrl
adc
jge
ret
sahf
mov
imul
decl
insb
add
jecxz
mov
clc
xor
fmuls
mov
push
pusha
dec
lds
jnp
jge
int3
add
lcall
into
pusha
cmpsl
dec
inc
or
shrl
or
or
leave
loop
adc
mov
mov
mov
cmp
xor
gs
pusha
lret
mov
leave
inc
sub
or
xchg
pushf
aam
push
pop
mov
adc
mov
xchg
dec
lods
iret
repnz
cld
adc
ficompl
lock
fs
rorl
gs
mov
leave
dec
andl
aad
popa
std
cmpb
or
pop
loopne
push
cmp
leave
mov
int
popf
sbb
lret
cli
xchg
shll
adcl
xor
cmp
jo
scas
adc
scas
daa
dec
adc
enter
aad
xor
mov
out
mov
cli
pop
mov
and
into
xchg
call
and
aam
jecxz
add
outsl
outsb
ljmp
adc
or
les
andl
cmpsb
pop
and
fidivl
mov
stos
les
aaa
mov
test
or
mov
inc
mov
xor
aad
in
fwait
stos
call
or
push
inc
enter
into
rcl
mov
sbb
adc
pop
scas
in
call
push
lock
neg
or
addl
xchg
aad
adc
mov
cmp
je
cltd
xor
sub
sub
adc
sub
push
mov
push
inc
dec
test
dec
sub
jle
aaa
and
ret
sbb
mov
mov
xor
adc
jle
push
insb
std
ror
mov
popa
mov
jae
pop
mov
sub
out
fidivrs
cmc
sbb
in
les
push
sbb
lods
and
fdivrl
sarb
mov
subl
fcomps
cmp
loope
lcall
mov
not
jmp
cmp
sub
jecxz
out
sbb
jae
pop
xchg
sub
jne
inc
mov
insl
in
cltd
incb
or
adc
mov
push
pushf
out
or
aam
out
insb
sbb
mov
sub
pop
movntq
out
je
sbb
incl
shll
or
jae
ss
loope
stc
lcall
std
les
or
push
inc
adc
inc
dec
out
sbb
insb
mov
lock
ret
jo
addb
adc
sub
movsb
mov
movsb
xchg
push
xor
adc
jg
and
adc
movsl
mov
pop
mov
add
dec
cmp
iret
xchg
dec
mov
test
sub
jno
xor
and
mov
sbb
jg
shrl
push
test
lcall
lods
cltd
aas
loope
or
push
adc
xchg
cmpsb
lods
xorb
loope
fsubs
dec
test
addr16
arpl
movsl
outsb
sbb
lea
imul
hlt
mov
insl
xchg
lret
fsubrs
lods
inc
repz
pop
or
mov
call
mov
js
out
je
or
rcrb
mov
les
repz
or
or
jmp
xchg
add
aaa
dec
adc
arpl
leave
cmp
rcll
ljmp
in
sub
xchg
inc
cmp
pop
mov
fcmovne
pop
adc
push
xlat
shlb
ja
loopne
lahf
ds
sbb
and
jle
dec
idivb
add
jae
jne
xor
pusha
push
pop
fidivrs
ljmp
daa
int
inc
dec
sarl
xor
jl
mov
pop
pop
mov
cmpsb
xchg
in
mov
std
or
cmpsl
andl
push
xor
inc
dec
mov
xchg
loopne
test
jbe
sub
mov
es
jecxz
ret
mov
xchg
testl
sti
fimull
je
repz
sti
xchg
fwait
mov
test
or
lods
inc
jecxz
ret
jge
sub
mov
mov
sub
and
imul
out
sub
mov
jp
fwait
and
or
jle
ret
xchg
cld
mov
out
aad
dec
loop
mov
data16
outsb
jp
insl
stos
jno
lods
in
jmp
pop
inc
mov
sahf
jne
push
enter
stos
ds
push
clc
fwait
pop
mov
xchg
mov
inc
mov
mov
pop
sar
sbb
dec
push
push
divl
push
and
fmuls
jbe
dec
push
adc
mov
cwtl
mov
stos
inc
enter
or
mov
insl
or
inc
pop
push
inc
lcall
fwait
enter
aaa
scas
mov
sub
sbb
xchg
popl
rorb
test
jecxz
xor
test
sbb
and
imul
btr
sbbl
cmp
movsl
mov
and
fs
aaa
jae
mov
mov
andb
in
sub
jl
cs
fisttpl
dec
stc
add
add
mov
jb
xor
testl
xor
adc
cld
inc
and
ffreep
lock
xchg
mov
sub
and
mov
mov
aad
mov
sahf
xor
cmp
jecxz
ja
in
and
stc
mov
sub
xor
insb
xchg
dec
fldt
cmp
aam
cmp
nop
int3
sub
cmp
mov
jo
call
cwtl
xchg
out
cmp
xor
mov
cmpb
lock
fistps
sbb
push
jge
loopne
dec
imul
cmp
fucomp
sbb
outsl
loopne
add
push
scas
sbb
std
xor
push
pop
pusha
jge
fs
or
mov
lea
hlt
lret
stos
adc
repnz
sarb
out
shrl
inc
or
xor
mov
add
mov
pop
ja
shld
dec
mov
int
pushf
dec
ret
inc
shll
cmpsb
inc
test
fwait
cmc
jb
je
jne
or
test
fisubrl
movsb
fnstsw
xor
std
pop
ljmp
sub
test
repnz
and
loope
outsb
nop
adc
frstor
loopne
jae
mov
push
mov
pusha
outsb
mov
test
es
push
mov
or
ffree
es
push
out
inc
xlat
test
cmp
xor
adc
adc
outsl
fdivs
das
add
cmp
xchg
ret
xchg
fs
or
pop
scas
sbb
jo
mov
outsb
lds
divb
jmp
imul
mov
pop
das
jo
jle
scas
movswl
roll
sahf
mov
cltd
sub
inc
adc
bound
xchg
and
dec
and
push
sbb
or
fwait
mov
and
loop
xlat
arpl
xchg
lods
sarl
inc
lods
pop
enter
jl
lret
movsb
dec
mov
test
pop
mov
or
repz
jns
mov
out
add
fcmovu
rol
or
cmp
add
popf
or
sub
adc
ret
jl
dec
into
pushf
imull
xchg
fwait
adc
push
pop
push
xchg
xor
jecxz
and
call
ds
jb
ret
xor
lret
ret
push
stos
adc
ds
loope
add
cmpsl
or
lea
pop
sub
lret
xor
xchg
mov
cmpl
fidivrl
cmpsl
lret
pop
cmp
inc
add
xchg
adc
dec
inc
js
push
repz
push
imul
inc
hlt
lea
je
addl
mov
sbbb
sbb
lds
lcall
es
fnstcw
push
fcmovu
sbb
insb
xchg
jge
mov
jne
test
daa
out
rcrl
dec
xchg
xor
dec
out
stc
movsb
push
test
daa
stos
adc
mov
dec
mov
mov
mov
mov
adc
aam
je
test
mov
lock
lcall
lds
xchg
mov
ljmp
or
stos
fcomip
xlat
ret
jecxz
test
and
add
sbb
in
adc
mov
or
push
mov
dec
mov
lahf
aaa
es
jecxz
pop
sbb
cltd
jne
xor
mov
ljmp
and
jge
pop
mov
xor
dec
xchg
inc
add
adcl
jnp
dec
ljmp
xchg
jne
or
ja
into
pop
hlt
or
lahf
lcall
xchg
mov
aad
and
mov
test
in
ds
pop
lods
jno
rclb
xchg
lock
popa
shll
test
aas
inc
adcl
dec
cmp
insb
fstpl
sti
push
jnp
ret
push
shll
add
ljmp
sbb
cwtl
stos
mov
jbe
add
subl
pop
pop
jg
dec
test
decl
insb
push
leave
jecxz
cmp
js
loop
or
shl
ljmp
sbb
nop
add
and
xchg
inc
xchg
cmc
jbe
outsl
rdtsc
xchg
jmp
hlt
into
ror
pop
adc
inc
pop
jecxz
sar
jle
test
mov
sub
hlt
dec
out
faddl
or
clc
mov
adc
popf
pop
int3
pause
adc
test
add
pop
repnz
leave
cmpsl
jnp
add
cs
cltd
cmpsb
lret
push
dec
xor
in
push
and
test
mov
xchg
lock
or
mov
mov
mov
aam
insl
xchg
adc
bound
sub
jbe
and
cmpsb
dec
scas
inc
lods
push
cmp
push
int
out
xchg
cltd
mov
jl
aaa
in
pop
or
xor
sbb
mov
push
lret
adc
pop
loope
dec
fucomip
push
inc
in
movsb
imul
js
in
jle
inc
shl
cltd
andl
cmp
or
mov
addb
pop
aad
fisttpll
data16
shll
repz
jecxz
in
sti
pop
ljmp
and
jle
jmp
or
add
test
lods
das
jno
out
inc
push
loopne
iret
dec
cmpsb
aas
cmp
or
pop
pop
cmpsl
fwait
out
lahf
push
dec
dec
test
mov
push
inc
jle
push
scas
stos
out
sti
or
xchg
leave
jbe
pop
bound
sub
sbb
sarb
add
xchg
sub
jno
xchg
incl
cld
ljmp
jnp
setp
fst
cmpsl
les
inc
addl
jb
les
and
js
xchg
add
inc
nop
add
mov
pop
enter
pop
mov
ss
movsb
inc
daa
cmp
jmp
adc
push
movsb
xchg
xlat
dec
rcrb
jl
into
arpl
xchg
push
mov
js
mov
int
push
cltd
push
cltd
push
jmp
and
aam
sbb
jg
cmc
xchg
xor
stc
aam
or
pop
xor
mov
dec
lret
aaa
adc
mov
jmp
push
aam
insl
in
sbb
pop
pop
jns
jmp
outsb
push
sub
sbb
sbb
and
add
jecxz
mov
rcr
inc
mov
xchg
dec
and
adc
push
mov
repnz
ret
test
and
cwtl
xchg
repnz
add
mov
jmp
sbb
add
inc
mov
xchg
fldcw
or
jp
jle
lea
mov
add
into
mov
stos
pop
sbb
mov
mov
or
into
out
pushf
jb
sbbb
data16
jbe
cltd
pop
add
mov
out
iret
lahf
jnp
sbb
or
int3
das
or
push
ds
dec
mov
mov
add
test
rsm
fs
std
push
scas
mov
dec
push
xor
std
mov
fsubs
inc
ret
mov
dec
adc
push
mov
add
je
inc
sub
je
pop
mov
ficoml
jp
mov
jl
mov
push
gs
ret
mov
sub
or
sbb
rcrl
mov
jp
or
mov
inc
jae
sar
add
mov
push
cltd
outsl
pop
cmp
out
scas
adc
js
add
jg
dec
aam
imul
jp
movsl
push
rcl
out
enter
js
mov
pop
int
ret
clc
pop
fiadds
dec
mov
fisubs
movsb
xchg
dec
add
xor
fcmovbe
sbb
outsb
or
inc
jne
stos
lahf
cmp
mov
jae
mov
rorb
jecxz
into
frstor
ret
hlt
lds
cmpsl
adc
jmp
mov
movsl
cli
push
lds
stos
aaa
dec
push
push
sbb
sbb
ds
xchg
gs
xchg
aam
or
mov
or
arpl
adc
movsl
lock
sbb
push
jmp
add
test
ja
test
xchg
loope
shr
or
push
in
nop
mov
ljmp
xor
sar
inc
inc
icebp
out
or
xchg
leave
in
cmpsb
sub
test
enter
mov
sub
out
fsubp
pop
cmpsl
mov
stc
enter
ss
xchg
jge
call
sbb
js
push
mov
xchg
lea
dec
pusha
lret
xor
jmp
cltd
movsb
fdivr
xchg
dec
adc
xchg
inc
mov
stos
mov
xor
lret
adc
fsub
fwait
jle,pt
rclb
xchg
push
jno
lds
shll
push
jo
cmp
pop
sbb
cli
icebp
repz
jge
iret
add
insb
imull
or
lahf
pop
adc
pop
jmp
dec
incl
or
xor
inc
ljmp
add
xchg
jnp
cmc
aas
in
or
jb
push
fs
scas
sarl
add
std
inc
xchg
cmp
pushl
mov
cmc
mov
idivl
mov
xor
mov
push
cmp
fadd
pop
clc
sti
lods
jge
out
inc
adc
jp
add
mov
int
and
dec
pusha
and
sbb
test
rclb
adc
pop
jns
sbb
hlt
pop
adc
mov
adc
fistps
into
pushf
data16
popa
mov
aam
sub
mov
mov
jno
add
aad
rcll
xchg
push
jmp
insl
jnp
jmp
mov
pop
roll
pop
pop
jne
sub
bound
fldcw
in
and
shl
ret
mov
lret
test
mov
mov
and
lods
aas
dec
push
stc
enter
pop
xchg
stc
into
pop
test
js
shl
or
mov
xor
shlb
push
lods
or
pop
xor
je
movsl
aad
sub
cwtl
stos
inc
iret
inc
or
cltd
xchg
mov
negl
lods
sarl
cli
mov
int
jl
adc
mov
adc
mov
xchg
adc
enter
fwait
dec
mov
xor
cmp
shrl
add
lds
popf
lds
sbb
jge
or
push
cmp
mov
jg
fs
sbb
and
das
add
jno
cltd
out
push
adc
lods
pop
or
out
popa
movsb
mov
fnstsw
ljmp
xchg
pop
movsl
and
and
je
add
add
ret
in
and
es
daa
and
jl
sub
ds
dec
aaa
or
or
inc
ds
fwait
xor
add
dec
in
jo
mov
cmp
ljmp
test
fsubrl
testl
testl
mov
ret
or
add
xchg
icebp
xor
mov
movsb
leave
das
ja
rorl
stos
sub
dec
dec
shll
or
loope
inc
xchg
rcrb
inc
int3
lds
xchg
or
out
inc
mov
aaa
in
les
pop
xlat
sbb
lock
movsb
sub
push
dec
into
push
sbb
add
jnp
shll
or
add
cmpsb
aas
hlt
cltd
jbe
cs
sub
test
mov
aam
bnd
xor
xchg
mov
lods
test
mov
pop
imul
push
and
xor
lods
scas
adc
ret
push
or
dec
push
xchg
loope
lea
pusha
inc
ficoms
daa
xchg
cmpsl
nop
jno
mov
lock
cmp
cmp
call
in
or
scas
mov
push
or
sbb
xchg
das
or
xchg
mov
jecxz
or
aas
divl
mov
inc
mov
inc
es
outsl
in
and
test
mov
push
sarl
xchg
fildl
fsub
push
inc
push
popa
je
idivb
aam
adc
mov
fs
sbb
xchg
aas
mov
mov
les
mov
outsb
cmp
jmp
insb
jmp
ljmp
imul
mov
orl
mov
andb
js
mov
popf
pop
imul
push
pcmpgtw
frstpm(287
sub
in
xchg
lods
aaa
int
push
inc
shl
mov
mov
push
clc
cmp
in
or
jno
insb
fstl
mov
cmp
out
mov
jl
push
mov
adc
in
push
cmpsl
dec
add
mov
xchg
inc
mov
adc
and
mov
sahf
add
and
mov
push
and
sub
insl
sti
cmp
mov
or
adc
inc
bnd
popa
sbb
icebp
mov
out
adc
or
rsm
imul
sbb
mov
dec
test
sbb
jns
mov
stos
mulb
sahf
out
vunpckhps
inc
cmpsb
insl
les
ret
cmc
ret
ljmp
inc
xor
mov
jbe
inc
dec
mov
data16
cmp
sar
mov
sbb
shl
das
out
cmp
push
lahf
push
ret
aaa
jo
sub
xchg
add
jmp
xor
cmp
pop
xchg
push
and
xchg
mov
popl
fcmovbe
jp
pusha
and
scas
mov
push
push
out
fdivs
inc
add
mov
ljmp
loopne
mov
adc
dec
inc
or
repz
in
test
dec
cmp
lret
adc
cmpsl
push
call
les
sbb
xor
jne
xor
stos
mov
ror
and
xorl
inc
fbld
pop
lock
jle
test
movsb
icebp
push
aaa
stos
jecxz
xchg
push
xor
or
cwtl
push
xchg
mov
test
test
push
stos
mov
insl
sti
sti
inc
lock
push
pop
sbb
cmpsb
mull
stos
outsl
aad
jecxz
ss
std
xchg
loop
adc
cld
not
add
mov
xchg
lahf
lods
sub
notb
ret
fdivl
scas
sbb
or
push
or
inc
movsb
pop
xor
aas
xchg
fwait
cmc
inc
testb
inc
mov
lock
das
add
add
jno
inc
xorb
mov
rcrb
pushf
push
inc
movsl
cltd
ljmp
mov
mov
es
or
push
into
pop
and
rorl
test
shrb
in
mov
out
std
mov
shl
loope
sbb
jp
xchg
cmp
xor
ficompl
in
jne
cmp
sbb
mov
jl
rcl
loopne
jmp
pop
jo
insb
xchg
xorl
cwtl
negl
jae
adc
mov
push
inc
in
sahf
cmp
repnz
jno
lods
pop
xchg
sahf
dec
test
lea
aam
cmc
out
or
mov
aas
pop
sbb
mov
mov
in
cmpps
sub
mov
arpl
mov
pop
rcrb
icebp
mov
imul
push
pushf
fxtract
arpl
or
outsl
jns
aaa
adc
jmp
jns
lret
fstl
scas
xchg
ds
mov
mov
lahf
push
mov
inc
sbb
xchg
push
shl
sbb
cmp
sbbl
in
or
and
jp
adc
test
rorb
fbld
inc
roll
pop
stc
adc
aam
or
xchg
dec
lret
insb
insl
adc
movsb
imul
outsl
divl
mov
movsl
dec
repz
and
out
xor
mov
jl,pt
pop
mov
fdivrl
inc
int3
test
adc
dec
cwtl
push
mov
leave
or
hlt
inc
aam
pop
icebp
jbe
mov
mov
addr16
mov
loope
ljmp
cmpsl
push
out
shlb
dec
xchg
pop
fwait
xor
lods
cmp
pop
fldenv
and
jg
aad
data16
adc
jne
test
sub
ja
daa
scas
je
out
pop
cmpsl
or
jle
es
fisttpl
and
pop
mov
adcb
mov
inc
loope
pop
mov
fwait
jo
in
inc
and
movl
xchg
jmp
sub
int3
jg
pop
call
pop
and
push
cltd
mov
cmc
movsb
sub
cmpsl
push
push
cmpsb
mov
out
ja
ret
push
push
dec
mov
mov
mov
and
sbb
ja
mov
fisubs
and
popf
jne
mov
nop
ss
push
sti
push
es
pop
fwait
cld
gs
or
and
shll
xchg
sub
bnd
pop
test
mov
and
test
cmp
cmp
jnp
xor
andb
mov
cli
xlat
std
std
and
lcall
loope
sbb
push
sbb
ja
cmp
mov
icebp
xchg
xchg
sbb
push
or
rclb
scas
pop
test
mov
inc
pushf
setne
sub
mov
push
xchg
mov
out
or
xchg
mov
adc
pop
je
push
shr
pop
inc
mov
mov
into
and
aad
xchg
aam
sub
insb
jl
xchg
pop
mov
or
fs
mov
mov
mov
push
shl
xor
jmp
lret
loopne
test
sbb
ret
arpl
mov
ds
mov
stc
addr16
cmpsb
push
lods
pop
push
pop
cmp
ds
xchg
mov
call
mov
cli
outsb
mov
pop
jne
je
cmp
sbb
xchg
lods
jmp
jbe
xrelease
cmpsb
dec
stc
or
jne
stos
cltd
pop
inc
int
int
test
cmp
lods
in
lods
ffree
pop
nop
cmc
lret
cmp
stos
add
push
inc
jae
push
cmpsb
xor
inc
dec
jbe
jo
orb
scas
repz
sub
sub
push
dec
ss
and
dec
push
xchg
dec
xchg
les
xchg
cmp
xchg
or
aam
bound
scas
cld
pop
dec
int
adc
in
jnp
movsb
sbb
fisubrs
fs
add
mov
push
jbe
popa
xchg
leave
inc
loopne
int3
lea
gs
mov
ja
jbe
xlat
mov
push
cmp
loop
lret
fwait
sbb
or
mov
loope
mov
sub
lahf
loop
idivl
mov
or
dec
clc
adc
pop
jo
inc
js
out
and
std
mov
and
fucom
xor
jnp
cmp
lret
imul
lcall
dec
pop
dec
and
mov
icebp
scas
adc
loop
mov
sbb
or
jecxz
inc
test
xor
adcb
shr
and
mov
adc
popa
ja
push
and
cmp
bound
push
fnstcw
or
loope
lcall
mov
loop
dec
iret
xchg
xchg
test
or
push
pop
pop
outsb
xchg
adcl
mov
sbb
pop
adc
dec
mov
mov
adc
rolb
mov
push
cmp
je
mov
fldt
jecxz
cmpsl
and
sbb
adc
imul
kmovw
stos
cmp
push
lret
xchg
out
sub
jecxz
stos
inc
fldt
and
cltd
sub
push
lods
mov
scas
ret
xchg
xor
pop
and
or
push
out
popf
lahf
push
or
ret
iret
push
adc
xor
mov
cmp
repnz
dec
jnp
or
push
and
sbb
push
or
jne
pop
ljmp
cmpsl
bound
cmp
inc
movl
ljmp
nop
subb
hlt
shr
fistl
xchg
setno
add
pusha
insl
repz
and
xor
imul
cmp
jl
adc
stc
add
mov
test
add
push
es
inc
push
mov
or
and
mov
mov
in
mov
loop
add
lods
ret
aam
mov
shll
push
mov
mov
scas
xor
inc
mov
cltd
xchg
cmp
mov
adc
mov
std
mov
les
in
movsl
xor
idivl
dec
push
fsubrs
jo
mov
xchg
daa
mov
xchg
cld
mov
push
pop
mov
sub
gs
mov
jg
add
std
xchg
mov
shr
push
or
mov
mov
hlt
push
jno
sbb
or
cmp
in
negl
push
mov
aad
popf
or
dec
sbb
iret
lahf
and
mov
mov
insb
pop
movsl
sub
aam
xor
and
lret
insl
jns
xchg
divl
mov
addr16
mov
call
xor
or
push
dec
xchg
sub
mov
mov
add
mov
hlt
pusha
sahf
inc
mov
repz
xchg
mov
icebp
aam
scas
sbbb
into
xchg
mov
xchg
ret
mov
mov
scas
push
std
test
and
mov
fwait
in
test
les
xchg
dec
aaa
add
and
les
mov
mov
test
mov
idivl
pop
jo
cmp
xchg
push
xchg
inc
jbe
pop
stos
rclb
ret
addr16
test
jecxz
outsl
lods
je
in
inc
jno
xor
ljmp
or
lea
or
or
jmp
test
pop
test
cmc
mov
jl
inc
loopne
xlat
aas
jae
mov
fldpi
in
addb
sbb
xchg
popf
leave
pop
rorl
cmove
cmp
lret
sub
pop
or
sbb
je
cli
mov
sub
add
lock
into
dec
inc
hlt
andl
ja
repnz
jl
push
sbb
and
inc
jg,pt
fxch
jbe
lods
mov
add
xor
mov
repnz
jle
sbb
lods
fsubrl
les
mov
stc
mov
movl
mov
jmp
jno
js
ret
inc
mov
shrb
and
aaa
fistpll
icebp
dec
leave
adc
sbb
rcrl
cs
push
popa
gs
pop
jg
mov
test
dec
jp
pop
adcl
scas
mov
or
movsb
mov
hlt
pop
mov
mov
cmpsl
mov
lds
mov
fbstp
mov
sti
add
test
add
stos
sarl
or
sub
pop
shr
rcll
rcrl
mov
lods
xor
imul
mov
dec
ret
enter
mov
sbb
and
xchg
pop
or
jg
pop
sysexit
cmp
dec
pop
test
out
addr16
cmpsl
push
mov
cmc
iret
loop
stos
jae
add
imull
sub
nop
xchg
cmpsl
add
xchg
enter
pmaxsw
jmp
je
in
adc
jmp
mov
xchg
sub
adc
mov
mov
mov
pop
js
es
data16
sbb
imul
paddusw
repnz
testl
mov
lahf
test
int
ds
ljmp
jmp
cld
bound
fcomi
shrl
sub
pushf
pop
dec
push
sbb
jne
xor
add
ds
test
or
ficoml
outsl
pusha
gs
xor
inc
fidivs
or
push
gs
repnz
mov
mov
ficomps
xchg
xchg
icebp
xlat
in
stos
imul
jle
mov
xchg
lahf
mov
dec
push
hlt
mov
dec
sub
test
aaa
scas
push
or
imul
dec
add
cmp
mov
or
inc
enter
lcall
sbb
stos
stos
cmc
adc
call
jecxz
or
pop
cmp
ljmp
inc
aad
or
adc
jecxz
xor
insl
ret
fdivs
mov
test
and
pop
jge
adc
and
fildl
mov
xchg
cmp
inc
or
jnp
std
jmp
arpl
push
call
mov
adc
mov
mov
movsb
stos
call
dec
movb
stos
test
add
in
int3
stos
ret
and
add
fildll
lods
cmp
sbb
pop
adc
pop
jbe
loopne
sub
stos
out
inc
adc
xchg
mov
cwtl
fcomps
adc
stos
dec
fdivrs
arpl
or
jb
sub
pushf
cmpsl
insl
test
movsl
sbb
mov
dec
addr16
fstpl
pushf
je
adc
jns
call
sbb
les
testb
insl
inc
scas
or
mov
sub
or
jmp
push
mov
push
int3
dec
sub
sbbb
add
adc
cli
xchg
xchg
push
add
sbb
mov
mov
xchg
sub
in
xchg
cmpsl
pop
subb
int3
pushf
mov
mov
and
imul
inc
dec
sbb
outsb
test
sti
mov
mov
add
cmpsb
cwtl
inc
test
mov
aad
push
je
ficoms
nop
ror
mov
push
scas
ljmp
jle
dec
imul
pop
jg
out
mov
dec
or
and
and
pop
in
in
mov
push
xlat
push
js
loopne
hlt
pop
nop
inc
pop
lcall
mov
cli
icebp
clc
lahf
cld
push
fnstcw
insb
sub
adc
hlt
jecxz
shll
xchg
xchg
xchg
push
pop
pop
sti
sbb
stos
xor
add
push
in
mov
iret
and
push
push
sbb
stos
stos
jno
and
jp
push
or
adc
mov
mov
jge
mov
pusha
xor
repz
movb
push
sbb
pop
in
pop
test
adc
fwait
sub
test
mov
pop
mov
iret
inc
lods
outsl
mov
jmp
xchg
dec
or
sahf
dec
lods
and
fwait
mov
test
mov
push
pop
jl
arpl
pushf
cld
jbe
sbb
in
sbb
in
cmp
cmpsl
and
cmp
lea
cmp
push
jmp
shrl
pushf
pop
orb
sahf
mov
push
mov
cld
test
fimuls
out
loope
mov
out
mov
sbb
xchg
pop
mov
pop
cltd
inc
rclb
out
cli
in
xor
sbb
pop
add
ret
sub
mov
insb
mov
aad
inc
hlt
mulb
pusha
xchg
icebp
mov
inc
gs
dec
inc
rcrl
pop
leave
test
add
push
push
in
repz
jae
sbb
cmp
mulb
rcrb
call
cwtl
es
jae
fldenv
xchg
fwait
or
aaa
mov
add
lret
pop
imul
loop
inc
and
sub
adc
imul
fsts
cmp
imul
or
jl
test
lods
je
mov
sbb
pusha
push
bound
dec
aam
push
stos
push
iret
mov
mov
mov
cli
mov
mov
incl
fisttps
xorl
mov
pop
mov
popf
sub
pop
rclb
shrb
scas
mov
daa
jbe
adc
int3
je
dec
cld
jmp
lret
pop
loopne
addr16
pop
cld
mov
jle
into
jnp
jns,pn
jo
andb
jmp
jge
bt
pop
and
insl
and
addl
inc
shlb
ljmp
sbb
insl
lcall
dec
mull
in
popf
mov
xlat
loopne
xor
dec
outsl
push
xor
movsb
or
and
test
loopne
mov
popa
js
int
mov
movsb
pop
xchg
imul
stos
sbb
dec
jne
shll
and
xchg
movsl
test
iret
out
aas
or
push
test
mulb
insb
xchg
push
and
fildll
push
sub
jg
ljmp
in
or
mov
ja
xchg
mov
push
inc
outsl
aam
lea
push
scas
xchg
inc
or
xor
mov
jae
cwtl
sbb
pop
jno
mov
aaa
jo
or
sub
js
fcmovnb
and
sbbl
push
int3
enter
gs
pop
leave
inc
add
leave
stos
sbb
roll
mov
repnz
pop
jmp
setno
xchg
push
adc
gs
jl
add
es
stc
cmpsl
test
lcall
repz
xchg
or
inc
jp
inc
scas
fstpl
test
ljmp
or
in
jecxz
jle
cmp
xor
shlb
sbb
in
pop
xchg
imul
cmp
xor
cmp
repz
scas
lret
test
or
test
mov
sub
jno
ret
arpl
or
dec
cmp
sbb
cmc
lods
rcrb
or
data16
enter
fwait
mov
aam
sbb
xor
mul
loopne
xchg
sbb
cmp
xor
xor
adc
fcomi
lahf
sbb
testl
adc
mov
mov
sti
dec
push
cmp
aam
sbb
cmpsl
dec
mov
or
mov
pop
and
push
inc
mov
mov
sbb
mov
in
xchg
mov
sbb
lahf
or
pop
test
mov
cmpsl
popa
test
cmp
in
js
add
cmp
sbb
pop
mov
ss
aaa
mov
fimuls
arpl
inc
lret
cmpsl
cmpsl
andl
fs
fdivrs
sbb
cmp
or
movnti
fs
loop
ror
sbb
ret
ror
xchg
scas
xchg
roll
scas
xchg
xor
test
cld
fildl
in
fadds
testl
mov
ss
dec
dec
movl
mulb
ljmp
jge
out
fdivrl
pop
shll
out
dec
lcall
jne
mov
cmp
imul
push
or
xchg
or
into
mov
and
mov
cli
and
cmc
lcall
sub
ret
sti
mov
imull
repz
pop
outsb
cmpb
xor
cmp
pop
loopne
xchg
divl
xchg
ss
mov
inc
xchg
mov
das
ret
jl
sub
lock
mov
cmp
arpl
rcr
sub
dec
rcrl
mov
mov
aad
mov
xor
xchg
inc
into
jmp
or
popf
loope
ret
dec
stos
pop
mov
jnp
loop
or
jl
and
jo
test
sbb
std
test
xchg
stos
jnp
push
xchg
repnz
lea
clc
pop
cwtl
pop
inc
push
jecxz
pushf
fstps
sbb
mov
mov
lods
bound
pop
pop
mov
cmpsb
jecxz
push
push
add
mov
sbb
push
sub
mov
lcall
ds
fcmovu
add
outsb
das
prefetch
fsubrs
jmp
mov
lret
pop
push
push
test
or
and
jmp
cmp
das
push
filds
xchg
leave
mov
xchg
mov
xchg
mov
and
scas
pushf
fs
aas
xchg
xchg
imul
push
stos
cli
pop
js
xor
arpl
pushf
pop
std
mov
push
add
daa
dec
mulb
dec
dec
push
push
push
push
jnp
mov
adc
nop
aam
add
dec
mov
xor
pop
mov
mov
cwtl
testb
jne
add
inc
lods
les
dec
push
pop
mov
fisttps
scas
sbb
mov
jp
mov
xorb
cli
xchg
addb
cwtl
or
fwait
pop
lods
push
lahf
jecxz
fldl
sub
test
add
mov
push
pop
in
or
adc
push
xor
mov
in
pop
push
cmp
push
xorb
dec
dec
pop
mov
js
outsl
adc
xchg
jge
je
pop
scas
cmp
push
imul
and
sub
fs
ljmp
fsubrp
out
ret
cltd
or
fs
fidivrs
jb
mov
pop
aas
aam
aam
mov
mov
ss
rcll
jnp
jle
inc
insb
sub
jns
stos
and
lcall
lock
icebp
or
int
nop
xchg
stos
xor
pop
fiaddl
icebp
mov
insl
hlt
or
add
pop
xor
stos
ds
iret
add
test
xchg
jle
inc
outsl
mov
movsb
mov
push
daa
xor
cmpsl
sahf
std
sub
jae
lods
jp
hlt
xor
fnstenv
cmp
dec
rcr
fmuls
std
nop
fbld
push
stc
adc
and
std
aad
popf
mov
scas
sar
popf
cmp
dec
cmp
inc
seto
pop
xchg
dec
fcmovbe
inc
daa
xchg
les
shll
adc
xor
push
or
mov
movsl
leave
adc
push
scas
adc
xchg
sahf
dec
in
mov
gs
jmp
pop
bound
fldcw
sub
dec
ret
sbb
sub
imul
lahf
repz
in
ljmp
pop
inc
or
cmp
cmpsl
icebp
lods
mov
shrb
cmpsb
loopne
cmp
hlt
dec
dec
push
lcall
fisttps
bnd
scas
dec
or
insl
popl
fsubrs
frstor
cmp
imul
fldcw
jo
xchg
mov
mov
push
sbb
xchg
js
cwtl
add
and
pop
push
scas
add
in
push
arpl
xor
lret
sbb
add
dec
test
mov
aad
adc
inc
mov
ja
gs
adc
sub
dec
pusha
and
push
mov
and
std
cli
scas
movsb
push
dec
out
inc
cmp
popf
ret
xchg
mov
notl
sub
inc
push
lret
aas
popa
push
mov
cmp
ss
mov
or
jns
imul
test
mov
cld
test
xchg
cld
iret
sbb
dec
popf
bound
dec
jnp
pop
clc
sub
adc
shrl
add
mov
repz
lock
sub
push
mov
out
dec
fs
ret
shr
or
push
push
fldl
insb
dec
movsb
xor
dec
ljmp
dec
lcall
lock
pusha
out
inc
mov
mov
mov
adc
push
cmp
mov
addl
mov
xor
adc
mov
fisubrl
out
xchg
sub
out
rorl
fstps
and
or
ffree
rcll
inc
xchg
lock
fidivl
in
push
ljmp
lret
shll
cmc
nop
or
ja
adc
out
sub
jno
pop
sbb
and
int3
call
jno
jge
pushl
dec
repz
test
cmc
add
or
test
dec
cmp
add
aad
cli
cld
mov
iret
mov
ficompl
xor
mov
lods
js
mov
xor
push
push
pop
xlat
cmp
nop
sub
inc
jecxz
imulb
pop
cwtl
inc
lock
cmpb
sbb
insl
cmp
jg
loop
scas
adc
and
push
inc
push
xchg
or
hlt
xor
lcall
lods
xchg
xor
sarl
mov
pop
mov
cmpsb
xor
fs
fistpll
and
xchg
and
fucomip
into
pop
sub
cmp
lea
je
int
cwtl
outsb
lret
mov
scas
aaa
leave
mov
jecxz
cli
inc
or
cmp
and
and
loopne
inc
sub
mov
jg
out
mov
xchg
inc
mov
mov
add
lods
repnz
lea
xchg
pop
ret
cwtl
imul
sbb
pop
mov
dec
jns
pop
dec
mov
mov
cmp
lods
into
push
adc
sub
pop
scas
mov
add
arpl
dec
sub
lea
dec
jnp
jg
test
mov
test
xchg
inc
jle
nop
repnz
lock
iret
in
adc
std
lahf
into
lods
xchg
test
adc
jno
dec
sti
adc
mov
sarl
test
lods
arpl
and
dec
xchg
dec
bound
add
xchg
pop
in
movsl
sarb
cmpsl
add
pop
add
xchg
xchg
lret
bound
out
stos
scas
cmpsl
sub
shl
insb
mov
out
pop
jno
push
add
lock
sbb
insb
mov
dec
imull
lcall
adc
push
mov
inc
int
mov
in
aad
xor
idivl
pop
imul
imul
ljmp
cmpb
or
xor
jge
and
in
add
cli
add
adc
call
jmp
sub
mov
sbb
jae
sub
fmuls
movsl
jmp
jp
sbb
sub
pop
sbb
inc
xchg
mov
jae
xchg
xchg
movsl
jmp
adcl
push
jle
push
mov
jno
in
mov
sub
in
cmpl
lds
inc
cmp
jmp
inc
inc
fsubrl
ret
cld
ss
stc
sub
mov
xchg
loope
rsqrtps
int3
aam
cmpsl
jge
jl
addr16
jb
adc
sbb
pop
test
jbe
xchg
or
scas
adc
add
mov
mov
fwait
mov
inc
adc
jb
push
into
push
jg
mov
mov
sahf
and
jmp
add
ror
pop
pop
mov
jb
mov
push
cmp
ss
cmpsb
push
movsb
sbb
or
add
mov
mov
gs
mov
push
cmp
sbb
arpl
pop
repnz
addr16
and
aam
and
stos
mov
pop
push
xchg
lea
out
lods
mov
jge
push
xchg
or
xor
or
pop
notb
dec
dec
and
cwtl
popf
pop
xor
dec
outsb
out
pop
popa
sub
and
and
sbb
les
je
cmpb
or
pop
mov
xor
notl
scas
aaa
inc
cmc
ja
jl
cli
lahf
xchg
or
cmp
lcall
jmp
cld
push
in
sahf
ret
mov
inc
aas
test
int
in
repz
ss
jmp
jns
int3
into
in
call
sahf
pop
sub
pop
inc
scas
xlat
pop
jno
xor
push
mov
sbb
xchg
push
pusha
mov
adc
in
push
cmp
into
push
aad
cmpb
js
je
or
sarl
push
pop
fxch
push
xchg
sarb
xchg
sub
rcl
or
repnz
adc
cld
push
stc
push
mov
pop
cmpsb
stc
imul
and
inc
jo
ja
jle
enter
sahf
mov
cmc
pop
fcmove
hlt
aaa
cmc
iret
mov
cs
out
aam
pop
lret
push
enter
xor
aaa
inc
out
xor
cmp
xor
lock
aaa
cmpsl
mov
lock
sbb
repnz
sub
jb
fildll
decl
movsb
push
aaa
movsl
int3
mov
imul
and
cltd
pop
inc
mov
cmpsb
es
lods
or
push
test
jge
out
push
mov
pop
notb
pushl
scas
dec
les
sarb
sbb
sub
pop
mov
lds
test
xchg
adc
cmp
mov
cld
pop
je
jmp
jge
addr16
mov
cwtl
sub
imul
cld
addl
neg
sub
cs
add
daa
and
sbb
adc
icebp
rorb
push
cltd
xchg
andb
lcall
int3
adc
cmpsl
jno
repnz
in
jp
push
ds
pop
stos
loope
inc
aad
sbb
call
xor
mov
dec
push
and
add
pop
pop
or
jl
mov
outsl
pop
pop
mov
stc
mov
lds
clc
xchg
and
sbb
loopne
insb
test
mov
outsl
mov
mov
rol
mov
inc
mov
pusha
xlat
sti
pop
rorl
add
insb
lea
mulb
out
aam
jbe
dec
pop
xor
aam
xor
sub
dec
mov
mov
enter
daa
loopne
daa
enter
push
insb
mov
enter
inc
aaa
std
mov
jp
mov
cld
push
xchg
iret
neg
lcall
and
xchg
ret
or
aas
lods
int
data16
push
adc
cmp
insl
mov
lahf
in
xchg
and
cmp
mov
mov
xor
movsl
mov
stos
movsb
jns
or
mov
loop
cmp
or
push
xchg
mov
sbbb
in
into
adc
push
jl
pop
adc
in
rsqrtps
push
insl
bound
lea
xchg
in
sub
iret
pop
jp
adc
and
insb
pop
and
call
inc
lret
int
mov
mov
add
jb
lods
in
mov
int
jmp
pop
pusha
mov
andb
and
pop
ret
lock
loop
popa
adc
shrl
call
imul
in
andl
fs
push
orb
int
in
sti
fisttpl
frstor
cmp
xchg
jle
pusha
xor
popf
loopne
lret
in
sub
mov
mov
inc
inc
fcomip
in
pop
pop
xchg
jb
cld
shrb
lahf
js
adc
int3
stos
out
shr
test
leave
aaa
xor
lcall
ror
jne
fiadds
jmp
fmul
andb
sti
cmp
sub
mov
loop
dec
sti
imul
fstpt
sub
jmp
movsb
cli
fnstsw
sbb
adc
mov
pop
dec
test
adc
cld
pop
divb
jge
sti
pop
push
adc
pop
dec
out
mov
into
stos
aas
movsl
mov
add
and
cmp
mov
push
mov
outsb
iret
mov
mov
test
cmpsl
popa
mov
add
pop
lods
outsb
int
shlb
stc
mov
xchg
dec
mov
aaa
push
lret
pop
add
add
shr
xor
pop
jae
in
loopne
clc
adc
dec
cmp
pop
xor
or
adc
mov
cwtl
xor
lret
xor
stos
out
fisttps
bound
pusha
inc
pop
xorb
lahf
movsb
lahf
arpl
out
sub
push
sbb
dec
jno
xor
xor
sbb
fwait
imul
das
push
xor
adc
sbb
dec
mov
sub
adc
or
xlat
stos
mov
stc
xchg
pop
icebp
aad
mov
repz
push
xor
pop
pushf
addr16
inc
stos
fbld
add
lds
lods
into
push
lcall
sub
or
inc
inc
addr16
jecxz
jmp
loope
fstps
xor
cs
cwtl
dec
mov
shl
loop
hlt
stos
addr16
inc
or
ret
adc
jl
dec
jge
xchg
xchg
mov
dec
xor
push
ret
scas
dec
sub
cmp
inc
mov
cmp
dec
mov
testb
inc
scas
mov
cmpsb
ja
daa
xlat
lods
push
lock
xor
les
cld
pop
mov
stc
pop
pusha
sub
data16
dec
scas
jmp
js
dec
sarb
idivb
sbb
push
je
imul
repz
mov
addr16
cltd
xchg
jae
test
mov
push
cwtl
adc
adc
ja
pop
pop
out
aas
mov
dec
mov
jne
leave
jp
or
jl
loop
andb
push
xchg
dec
dec
and
movsl
and
and
inc
call
data16
mov
iret
jo
and
rcl
mov
ss
xor
jbe
cli
ret
adc
out
pusha
xor
mov
les
jg
pop
pop
mov
mov
out
and
jmp
into
xor
xor
add
cmp
bound
jns
xor
pop
clc
in
sub
fs
or
dec
arpl
cmpsb
adc
icebp
push
xor
or
sahf
sub
in
xchg
push
addr16
add
push
inc
ljmp
jne
leave
xchg
fsubrl
dec
dec
inc
sbb
mov
mov
imul
push
push
mov
dec
mov
jnp
es
leave
xchg
sahf
movsb
jno
mov
inc
insb
xor
data16
in
cs
mov
movsb
sbb
push
push
mov
aaa
insb
fistpll
add
inc
inc
push
ds
pusha
lahf
mov
pop
inc
xor
dec
das
std
inc
fcoms
sub
pusha
lods
leave
adcb
mov
dec
or
loope
sbb
jne
test
adc
xchg
lret
popf
enter
testb
jno
mov
xor
sbb
mov
xchg
and
and
outsb
cmp
mov
xchg
cmp
jnp
incb
jne
bndldx
and
sbb
cmpsb
ljmp
shl
addr16
and
and
cmpsl
adc
enter
mov
or
mov
xchg
out
int
ffreep
andb
test
pop
in
and
aaa
out
dec
in
lock
enter
cmpsl
pop
lea
xor
sbbb
cmp
out
push
or
push
and
xor
cltd
sub
xchg
test
push
ja
adc
rcl
jb
cwtl
dec
and
out
pop
or
xchg
lods
pop
hlt
mov
adc
xor
dec
mov
mov
cmp
cs
jo
xor
icebp
outsb
test
add
xchg
enter
mov
popl
das
mov
pushf
push
jns
mov
pop
sbb
movsl
pop
loopne
sbb
adc
xchg
xor
repnz
jnp
rorb
repz
cmp
outsb
jg
mov
dec
icebp
popf
jle
test
ljmp
xchg
push
jno
dec
mov
daa
mov
mull
daa
inc
clc
sbb
pop
xor
cmp
in
je
xchg
movsl
xor
scas
icebp
leave
mov
dec
js
mov
xchg
adc
pop
adc
jae
xchg
int3
mov
inc
dec
sub
inc
add
inc
or
addl
sub
sub
and
xchg
jno
into
mov
aad
or
and
mov
sub
jno
fisubs
push
push
icebp
fstp
test
inc
and
jmp
mov
or
roll
inc
sub
cmpsb
sbb
pop
pop
push
dec
fisttpl
push
es
aaa
sbb
xchg
push
adc
orl
es
jae
jge
popf
sti
sub
mov
and
loopne
ret
test
js
in
shll
leave
arpl
int3
call
es
sub
xor
xchg
ret
mov
dec
enter
mov
xorl
and
sbb
mov
mov
aad
mov
leave
insl
loope
push
xchg
xchg
cld
call
aas
add
inc
sahf
cmp
sbb
jae
std
gs
cmpb
je
lret
std
scas
fisttpll
mov
sbb
ds
loope
dec
mov
fistpll
mov
push
xchg
hlt
or
mov
mov
jb
inc
sarl
out
adc
insb
cmc
insl
dec
lret
ja
xor
rorl
xor
movsl
jmp
and
mov
rcr
nop
add
aas
repnz
or
xor
ss
popa
sub
mov
in
scas
mov
fisubs
pop
insb
movsl
and
cwtl
mov
xor
pop
and
pop
add
leave
ja
pop
or
and
dec
repz
out
imul
mov
fsub
pushf
push
sbb
sbb
orl
adc
xor
in
jmp
fidivs
sbb
mov
xchg
mov
inc
fwait
sbb
aam
pop
mov
mov
psubsb
stos
cmpsl
jb
jns
popa
aad
mov
cmpsl
sbb
iret
scas
push
test
imul
jecxz
out
gs
mov
dec
cvttps2pi
cld
lret
dec
mov
popf
mov
and
or
mov
mov
xchg
es
ret
xchg
and
xchg
mov
jge
jmp
stc
scas
jbe
xor
dec
dec
add
arpl
stos
aaa
cwtl
and
aam
test
xlat
xchg
fst
movsl
test
cld
inc
sub
pop
rclb
outsb
xchg
fdivrl
cmpsb
ss
shrl
movsl
aaa
faddl
or
push
and
jle
pop
cld
fs
imul
mov
call
pop
add
cltd
adc
movsl
push
shl
es
test
jmp
lock
inc
popl
inc
or
pop
in
js
sbb
pop
aam
jnp
xchg
ss
jb
jne
jg
scas
je
adc
mov
imul
mov
mov
pushf
xor
aad
add
push
fadd
push
js
daa
mov
nop
outsl
out
ja
outsb
popa
mov
sub
adc
lret
repz
stos
or
les
ljmp
cmp
lea
aad
push
cltd
shll
leave
add
out
push
outsl
lds
adc
aad
outsb
xchg
out
mov
sbb
cwtl
es
and
and
mov
addr16
sub
jge
inc
xchg
out
and
mov
xchg
loope
sahf
dec
cmp
pop
aam
dec
arpl
int
cmp
add
fs
loop
punpcklbw
mov
sbb
push
cwtl
push
xor
out
loop,pt
call
inc
rclb
cmpl
jmp
inc
in
push
int3
push
jno
sbb
stc
mov
sbb
cs
cmp
sbb
lret
fiadds
std
mov
mov
aas
ljmp
idivb
jge
loop
hlt
int
sub
xchg
loop
fdivl
cmp
xchg
dec
hlt
sub
aaa
enter
dec
mov
and
pop
je
fcomip
and
push
or
mov
sbb
stc
pcmpeqw
xchg
adc
test
das
mov
jp
aam
xor
dec
test
xor
bound
in
inc
scas
enter
sub
sarb
mov
lock
lods
xchg
pop
enter
iret
adc
ja
sub
push
pop
lods
aas
test
outsb
xchg
jno
pusha
xchg
pusha
stos
fwait
mov
adc
lods
aam
hlt
clc
rcrb
mov
adc
scas
aam
ja
jnp
lcall
ss
lret
fstl
xorb
mov
ficoms
push
daa
mov
inc
scas
sub
ret
repnz
leave
cltd
or
xor
int3
test
lock
mov
jg
imul
sbb
mov
imul
call
lock
adc
cmpb
les
inc
cmp
jge
insb
mov
sbbl
insl
mov
fidivs
push
dec
insb
aaa
hlt
inc
leave
punpcklwd
pop
xor
movsb
pop
pop
mov
rcr
jg
sbb
adc
mov
popf
push
xor
or
dec
ds
and
adc
insl
icebp
lret
cs
sbb
or
fnstenv
dec
ljmp
in
adc
data16
out
in
push
and
out
or
dec
jb
ss
xor
scas
mov
test
sti
xchg
div
mov
mov
rcrl
sbb
arpl
lds
loop
lock
fwait
scas
movsb
loopne
pop
fsubl
jbe
pop
xchg
or
jns
cmp
adc
jne
mov
xchg
sbb
jo
jb
stos
xchg
jns
mov
mov
adc
dec
inc
and
subb
adc
stc
jbe
test
js
mov
mov
adc
push
rolb
test
leave
insl
aas
mov
sbb
adc
je
nop
int
mov
les
add
fistpll
addr16
push
outsl
inc
test
hlt
xchg
jg
outsl
fcoml
xor
mov
in
pop
sub
cld
add
aam
cwtl
xor
repz
movsb
sub
pushf
xor
sbb
jl
movsl
xchg
or
cld
adc
sti
leave
dec
jmp
jns
out
pusha
mov
xor
push
push
and
stos
jo
mov
popa
push
mov
decb
ret
cmp
lret
or
pop
call
dec
data16
lods
sub
push
mov
pop
data16
mov
fisubrs
arpl
ja
sub
sub
push
lahf
add
shlb
fimuls
dec
xor
pop
or
lcall
fdivrs
mov
xor
and
jmp
xchg
testl
adcw
sbb
sub
test
iret
aad
cli
repnz
orb
lret
hlt
test
push
ret
mov
push
sbb
xor
shlb
push
imul
pop
insl
cltd
add
lods
pop
add
xchg
shll
hlt
add
lret
xor
loopne
xchg
and
dec
jae
xchg
cmp
jl
push
xchg
cmpsb
lds
inc
call
bound
mov
es
xorl
add
push
imul
sbb
adc
jo
iret
and
in
lahf
jno
or
popaw
movsl
or
nop
insl
pop
pop
jmp
xchg
in
mov
push
imul
dec
scas
and
mov
or
push
inc
sub
pop
dec
mov
cmpsb
xchg
pop
leave
lock
cs
clc
or
sub
enter
fwait
ljmp
mov
sub
xor
sbb
repz
jp
push
push
fldt
mov
adc
mov
xor
sub
adc
test
cs
cmp
xor
and
out
dec
inc
aaa
mov
inc
sbbb
in
adcl
push
ss
mov
dec
jns
bound
ret
and
xchg
dec
ss
sbb
xchg
xlat
add
jmp
mov
push
filds
data16
movsl
nop
sbbl
mul
mov
push
pop
cmc
scas
xor
push
repnz
pop
cmp
rclb
mov
into
dec
mov
dec
xlat
loop
cmp
mov
cmpl
or
das
push
aaa
mov
scas
jp
jl
jb
pop
sub
cs
sbb
jl
shlb
push
lods
jb
negl
cmp
inc
test
ja
jbe
ret
test
mov
inc
shr
dec
cltd
stos
mov
lahf
sbb
sub
hlt
ss
fbstp
mulb
ret
xor
sub
fsts
pop
and
sub
mov
push
scas
popa
jbe
std
inc
xor
push
jo
push
adc
inc
mov
insl
in
lock
in
mov
imul
xchg
fdivl
or
iret
es
pop
shlb
jbe
int3
xor
mov
cmpsb
hlt
push
cwtl
sbb
sub
sub
mov
or
sbb
inc
outsl
push
dec
xor
push
cmp
in
mov
mov
pushf
cmc
add
pop
xor
scas
call
popa
jl
sbb
sbb
xor
movsl
pop
jle
in
in
or
test
mov
push
or
aad
out
lcall
popf
or
sarl
addr16
fnstsw
cmp
call
xchg
ss
in
mov
push
movsl
cmp
cmpsl
cltd
pop
daa
inc
adc
in
lret
push
inc
jmp
push
movsb
inc
sbb
inc
ds
lret
xor
sbb
outsl
inc
mov
je
lods
push
lock
clc
xchg
aam
lcall
cmpsb
popa
loopne
sub
repnz
out
xchg
dec
pop
mov
mov
sbb
fmuls
aaa
outsl
into
sbb
xlat
xchg
int
sbb
cmpsl
cli
push
push
test
mov
push
gs
fidivrs
stos
int3
add
or
js
arpl
mov
dec
addb
mov
jne
sti
pop
in
rolb
and
add
xor
pop
or
js
inc
jg
mov
mov
jle
mov
push
negb
pop
aam
mov
les
push
out
or
or
enter
scas
adc
pop
and
pusha
cwtl
pop
cmpsl
icebp
out
mov
sbb
lcall
stos
addr16
rorl
mov
fidivl
and
dec
mov
cmpsl
push
mov
mov
fs
inc
mov
mov
out
ss
rclb
add
push
push
rcrl
cmpsl
arpl
out
jnp
test
icebp
and
cmp
rorb
fcmovbe
push
sbb
jg
adc
jmp
sub
mov
jmp
sub
pop
cmpsb
lahf
test
ss
sub
loop
dec
push
popa
xchg
xchg
jp
repnz
fstpt
jnp
movsb
stos
adc
xchg
mov
in
pop
subl
data16
bt
pusha
mov
arpl
sbb
pop
push
xor
leave
mov
mov
test
add
inc
xchg
das
es
pop
repnz
sbb
sbb
dec
fistl
sbbl
inc
inc
adc
mov
lret
mov
outsb
pusha
sbb
add
imul
xchg
and
cmp
test
ret
cli
jecxz
add
mov
aas
in
ret
stos
add
xchg
push
add
fists
and
xchg
ret
cmp
leave
sub
xor
push
mov
frstor
pop
cmp
pop
sub
jae
dec
sub
xor
pop
jnp
add
jecxz
std
cmpsl
stos
ja
sbb
out
lock
adc
and
sub
mov
fwait
shll
std
ret
pop
sub
cmp
mov
movsb
sub
mov
inc
inc
and
xchg
adc
ret
sar
das
test
jge
sahf
dec
mull
jmp
mov
out
and
dec
in
aam
icebp
sahf
out
mov
nop
or
sub
jl
mov
cmp
sahf
pop
pop
or
add
mov
repz
repnz
xor
sti
mov
cmp
cmc
in
jae
in
mov
xor
xchg
ss
push
mov
shl
and
push
push
movsl
xor
pop
outsb
lret
es
outsb
inc
mov
push
jecxz
ficoml
sub
push
out
lock
stc
jb
jb
scas
lods
insl
mov
movsl
mov
into
and
lods
mov
cmc
jmp
sarl
loopne
jae
arpl
jle
jbe
sub
sbb
je
cmpl
add
lock
lahf
cmc
inc
sbbb
imul
add
cmp
daa
jp
push
pusha
out
addl
mov
sub
mov
xchg
movsl
jbe
test
pop
mov
out
mov
push
sub
cs
int3
inc
shrb
loop
aaa
push
xor
jb
lds
mov
stos
jg
subb
xchg
pushf
test
xchg
mov
mov
xchg
push
xchg
dec
mov
or
pop
idivl
lods
sbb
cmp
test
jl
and
fnsave
or
cwtl
pop
xchg
ret
mov
dec
dec
sub
sbb
mov
ss
jo
dec
addr16
xorb
xchg
mov
incl
rcll
inc
or
je
inc
pop
scas
dec
aad
inc
pop
enter
mov
movsl
pop
fwait
adc
pop
pop
into
jnp
loopne
push
call
mov
rorb
or
jbe
and
ljmp
lods
mov
sbb
enter
fsubl
movmskps
jl
nop
xor
pushf
mov
and
xor
cld
jb
add
add
cmc
orl
cmp
push
mov
repz
std
stos
mov
xchg
or
cld
shrb
fcmovnu
repnz
cmpsb
lret
adc
push
and
or
adc
sub
pop
ss
out
xchg
xchg
adc
fadds
xchg
fsub
lahf
xlat
push
or
inc
mov
loop
mov
paddq
mov
mov
pop
shll
lret
mov
pop
mov
dec
fadds
sub
shl
xchg
sub
mov
in
sub
stc
push
int3
in
or
lods
push
pop
out
divl
lock
xchg
decb
cmp
cltd
dec
leave
shll
mov
fs
fs
stos
clc
lret
sbb
pusha
inc
jno
jg
jb
popf
loope
mov
outsb
xchg
ud1
shrl
xlat
mov
sbb
xor
inc
loop
mov
xor
pop
ret
mov
xor
jne
add
imul
outsl
roll
jb
xchg
ficoms
push
js
scas
push
out
ljmp
fldpi
ret
jbe
xor
popa
movsl
inc
out
rcrl
jle
les
or
stos
push
sbb
xchg
pop
dec
sub
push
dec
imul
fsubrl
in
roll
push
fdivs
jecxz
inc
dec
shll
add
fnstsw
es
jp
shrl
mov
test
cmp
daa
adc
rcrb
inc
adc
mov
into
xchg
dec
mov
call
imull
xchg
pop
test
mov
lods
or
pusha
inc
xchg
pop
mov
xchg
push
frstor
aas
cmp
sbb
pop
cld
movsb
jmp
jbe
xchg
cld
mov
mov
scas
rclb
insb
push
and
int3
dec
inc
or
lcall
das
shr
out
sub
jo
cld
mov
and
jo
add
leave
dec
jae
or
push
clc
mov
sub
xchg
inc
movsl
in
dec
mov
in
scas
pop
fistl
fisubl
out
ds
imul
push
or
dec
inc
hlt
nop
lcall
fisubrl
test
xor
sbb
mov
or
jp
jno
mov
roll
xorl
cmp
push
jae
jg
mov
daa
pop
hlt
dec
movsb
fidivs
pop
shll
and
lea
into
mov
inc
sar
push
and
and
add
mov
adcb
add
addl
mov
stos
xlat
adc
jp
sbbb
out
pushf
jge
push
cmp
cmp
mov
cmp
mov
mov
push
jbe
rol
subl
push
in
xor
xchg
loop
sbb
add
fucomp
mov
pop
pop
and
sarb
jg
jo
jmp
xor
das
je,pn
lods
lcall
enter
add
xchg
stos
loop
pusha
mov
stc
lret
mov
out
and
scas
sbb
mov
inc
inc
cltd
scas
adc
mov
dec
pop
jnp
pop
xchg
fwait
pop
and
jge
int
ss
xchg
das
adc
fwait
test
add
popa
dec
dec
arpl
jg
rcrb
imul
loopne
ficomps
call
sub
or
mov
test
pop
mov
enter
sti
xor
aas
cmpsb
fisubrs
loopne
stos
jmp
sahf
pop
lret
mov
xchg
pop
adc
sub
mov
xchg
push
enter
jns
leave
mov
inc
fdivrp
jb
push
jecxz
js
jbe
jb
add
out
jb
mov
insl
mov
and
adc
xor
cs
mov
nop
arpl
pop
sbb
dec
shlb
mov
cmp
rol
add
sbb
ss
movsb
push
inc
mov
stos
adc
mov
outsb
fdivr
cmp
sub
cld
inc
sub
inc
jne
and
out
shll
adc
pop
pop
cwtl
stos
mov
stc
out
aam
dec
mov
aad
mov
jb
iret
fabs
pop
movsb
push
mov
mov
mov
mov
stc
jne
cmp
xchg
std
outsb
lock
mov
inc
andl
mov
push
mov
sbb
jge
or
xchg
jae
xchg
test
cmp
in
push
lds
lds
jl
dec
outsb
sub
sub
mov
rclb
xorl
add
add
mov
fadd
inc
fwait
outsl
popf
mov
lahf
ds
insl
sub
jg
ss
repz
test
cvttps2pi
sub
or
push
cli
sarb
dec
add
pop
pop
cmpsl
and
in
out
adcb
cmp
xchg
stos
lret
inc
add
mov
mov
adc
mov
das
push
pop
adc
cmp
push
xchg
add
push
addr16
and
adc
ljmp
mov
lods
dec
loopne
fimull
jo
dec
pop
pop
cld
pop
hlt
jnp
pop
and
test
mov
fs
or
sbb
and
jmp
jne
or
mov
sub
mov
push
out
xor
xchg
test
inc
hlt
and
in
scas
aad
mov
add
jmp
scas
mov
jne
ds
push
clc
int
sahf
push
inc
loope
sarb
sub
sbb
sub
hlt
out
shrb
jmp
loopne
pop
xor
fisttpll
test
mov
xor
sub
fwait
add
loop
mov
xor
pusha
and
push
adcb
je
stos
xchg
jge
push
xchg
pop
jg
sbb
insl
add
fucomip
xchg
dec
inc
add
in
mov
sbb
add
rolb
mov
loopne
imul
add
shrl
mov
into
mov
sub
inc
adc
rol
lret
mov
sub
in
das
mov
cmp
dec
jb
test
addr16
cs
popf
dec
ss
pop
and
decl
xor
shlb
lcall
xlat
mov
inc
pop
xchg
fsubrl
cmp
cmp
shll
or
and
lahf
cmp
xlat
jbe
push
lods
adc
in
adc
pop
out
outsl
mov
cld
call
sarl
or
sub
xor
sbb
jns
mov
imul
pop
lret
rorb
cltd
aad
add
cmp
sarb
jecxz
push
mov
mov
xchg
rcll
inc
jbe
jns
sbb
jns
imul
std
push
mov
adcb
in
daa
frstor
jns
xlat
into
jg
mov
scas
in
mov
pusha
insb
jl
cs
stc
dec
sub
jg
orb
mov
fwait
lods
stos
cld
sub
cmp
push
adc
xor
add
jmp
pop
cmp
jo
dec
pusha
dec
dec
mov
imul
shlb
cmp
mov
mov
lods
addr16
insb
sub
sub
fdivrl
push
add
pusha
sub
xchg
cmpsl
fcoml
mov
add
sub
or
add
pop
xor
sti
icebp
push
lods
add
fidivrl
leave
or
or
sub
cli
mov
pop
into
cltd
orps
add
inc
or
mov
add
pushf
sti
jns
jl
sub
mov
repnz
rorb
mov
sbb
repz
add
inc
rcrb
scas
push
jle
icebp
lds
adcl
hlt
and
in
mov
mov
ror
and
sahf
or
or
mov
loopne
or
cmc
call
adc
clc
mov
dec
clc
sahf
mov
jp
in
inc
faddl
insb
sub
xor
fimuls
shl
pop
stos
cmp
cmp
je
int
adc
addr16
push
cltd
dec
push
ss
push
call
fsubr
sub
adc
imul
or
cmc
mov
xor
jne
pop
mov
dec
ljmp
fidivs
fildl
cs
xor
jl
push
mov
sub
pop
out
imul
int
stc
das
sbb
movsb
sti
repnz
xchg
scas
inc
mulb
push
fisttpll
mov
adc
jmp
cmp
rcrb
scas
push
inc
cwtl
jecxz
sbb
fs
sub
xor
sub
sub
out
insb
ja
adc
adc
out
push
and
xchg
push
iret
xor
inc
cmpsb
das
and
mov
call
cmp
xor
jo
test
aas
scas
sub
pop
clc
insb
jge
cmp
mov
sbb
ljmp
mov
mov
insl
lock
std
lahf
sub
stc
xlat
xchg
rol
testb
das
inc
imul
mov
and
aam
mov
ficompl
cli
xchg
xor
sub
push
mov
push
jae
push
or
pop
loopne
jbe
out
cmp
cmp
call
mov
xchg
sub
adc
cmpl
add
ljmp
hlt
lods
push
xchg
add
hlt
das
cmp
mov
pop
fcomp
sub
cs
stc
adc
xchg
jbe
out
cmp
test
stos
leave
or
jne
pop
gs
lds
cwtl
mov
cmpsl
push
add
iret
insl
add
dec
mov
ret
add
pop
cli
add
movl
adc
js
sarb
push
and
mov
fistps
aas
nop
fisttpl
js
mov
mov
repz
out
xor
sbb
test
int3
push
mov
inc
mov
mov
jns
je
sbbl
imul
adc
push
fwait
pop
mov
fs
ja
cwtl
imul
push
sub
scas
or
or
aaa
sarl
dec
outsl
and
or
out
fbld
iret
aam
dec
out
roll
mov
in
data16
lahf
push
and
cmp
popf
inc
popa
xor
fdivl
in
fisubrs
insl
into
jb
outsb
aam
add
lods
cmp
aam
imul
mov
mov
sar
cmpsb
lret
push
out
out
jne
push
faddp
push
push
pop
rcrl
push
jnp
nop
xchg
add
xor
lea
mov
inc
mov
ja
xchg
jl
pushf
push
scas
mov
mov
shr
add
aam
mov
sbb
sahf
ljmp
mov
add
aaa
mov
icebp
cmp
shl
or
dec
mov
cli
lcall
push
mov
mov
mov
stos
mov
mov
cmp
cmp
cmp
mov
xor
jle
out
aaa
imul
cltd
ja
or
lds
cwtl
popa
dec
call
push
inc
ret
mov
dec
dec
mov
das
dec
movsl
stos
fildl
dec
add
stos
push
push
adcl
dec
cli
jb
xor
addr16
imul
addr16
movsl
lods
pop
push
pop
in
add
and
jnp
adc
sbb
nop
lock
pop
inc
aaa
int3
icebp
stc
push
sub
inc
in
xor
js
pop
cld
pop
fiaddl
gs
outsl
std
sub
fsubs
xlat
xchg
pop
pop
popa
adc
xchg
out
iret
sub
imul
sbb
mov
shll
xor
inc
jecxz
divl
outsb
pop
loopne
pop
and
sbb
sarb
pop
inc
xor
in
stos
or
call
mov
aaa
ds
in
loop
lods
sbb
int
dec
xor
mov
mov
xchg
inc
add
lret
jno
lds
les
repnz
into
mov
in
cli
into
imul
scas
lods
adc
out
les
and
ja
adc
pop
xor
je
outsb
stc
in
icebp
sbb
fucomip
or
ss
and
or
repz
inc
add
cs
lds
rclb
pusha
out
push
cmp
out
mov
sbb
push
icebp
cltd
mov
xor
dec
sarl
sbbl
pop
mov
add
xor
shrl
imul
and
xchg
ret
cmp
les
adcb
xchg
xor
out
cmc
aas
inc
cmpsl
das
xlat
adc
lret
and
push
adc
dec
xchg
cld
inc
inc
loopne
jl
mov
lret
sub
jne
pop
pop
or
lret
add
add
and
dec
jecxz
mov
adc
lcall
cmpb
sub
pop
jmp
mov
stos
popl
dec
jge
add
push
push
inc
mov
ja
jbe
mov
add
mov
in
or
jo
push
ljmp
fistl
cmp
pop
mov
mov
pop
mov
lds
jmp
and
scas
and
in
mov
cs
adc
arpl
testl
sub
xor
js,pn
pop
out
cmpsb
cmp
sub
lahf
adc
insb
inc
inc
sbb
mov
cld
adc
daa
aaa
ljmp
xor
sbb
ficoml
sbb
and
sub
out
icebp
push
mov
fidivl
das
cmp
icebp
out
jmp
pop
pushf
in
popa
cmp
push
sub
pop
repz
inc
insl
jle
pop
cltd
loope
mov
xor
adcb
mov
xor
pop
jge
cmp
std
call
bound
sbb
cmpsb
xchg
insl
movsb
mov
aam
or
cmp
data16
push
rcrb
mov
std
xchg
mulb
test
enter
arpl
daa
outsb
inc
mov
ret
sub
scas
push
lea
push
mov
mov
push
movsl
push
fst
rclb
sub
inc
pop
lea
test
sub
mov
inc
xchg
lea
inc
cld
sub
mov
cmp
jae
aas
xor
lock
cmp
cmp
inc
jle
dec
lret
mov
fwait
ret
cld
in
jns
cmp
bound
es
push
mov
les
mov
lods
int3
lcall
push
and
sar
mov
jle
stos
inc
add
xor
insb
mov
lds
push
inc
sbb
mov
cli
mov
mov
adc
cs
push
inc
jns
fwait
mov
mov
jl
adc
inc
imul
fistpll
jg
inc
adc
das
loope
dec
repz
push
lahf
arpl
cmp
daa
sti
callw
mov
fs
insl
mov
icebp
std
rcr
jle
add
jno
int3
and
xor
test
leave
mov
sbb
mov
fs
xor
movsl
clc
sahf
push
lcall
stc
pop
ja
jno
lods
sbb
dec
add
hlt
js
stos
ja
mov
jmp
fdivp
add
leave
push
scas
xor
fmuls
mov
dec
pop
add
jle
cmpsb
mov
cmpsl
jecxz
out
xchg
xchg
andb
and
in
or
icebp
bound
add
jo
ror
cmpl
js
adc
mov
mov
notl
add
ljmp
cmp
lea
jnp
lcall
pop
jnp
inc
sti
inc
push
pop
dec
mov
outsl
mov
cmp
ja
pop
or
shl
and
in
cmp
subl
pushl
mov
or
or
sbb
sub
mov
daa
iret
add
imul
das
inc
in
out
mov
mov
mov
push
fstps
in
mov
dec
and
loop
shlb
iret
adc
inc
lods
adc
push
aam
pop
mov
mov
sub
sub
leave
jp
lds
mov
lds
add
in
das
mov
ja
inc
and
mov
xor
inc
int
and
push
cmp
cmp
dec
call
sub
adc
shrb
repnz
lret
add
jne
inc
xor
loopne
inc
push
jmp
sub
mov
mov
leave
pop
add
mov
shll
push
push
pop
cmp
fwait
ljmp
add
out
mov
pop
movsb
dec
mov
xor
test
lds
test
mov
stos
mov
xlat
lret
push
ljmp
pop
mov
lret
jne
xchg
cmp
cltd
aam
add
cmp
subb
sub
adc
sbb
and
nop
shll
and
arpl
xor
pop
xlat
mov
flds
jnp
jp
test
fucomi
mov
xchg
adc
sbb
out
js
stos
sbb
jae
scas
bound
push
push
inc
xchg
mov
pop
mov
loope
xchg
fs
pop
pop
lahf
dec
jmp
outsb
in
or
rcrl
into
jge
jcxz
inc
ret
mov
rclb
xor
sbb
cmpsb
add
fsubl
lret
bound
dec
loope
jmp
lret
es
sub
mov
xchg
push
cmp
push
pop
and
sub
mov
sar
aas
movsl
xchg
and
ret
lahf
adc
nop
sub
arpl
sahf
adc
and
xor
lds
sub
mov
mov
out
clc
mov
sub
cmpsl
out
mov
push
lcall
sbbl
cmp
pop
xor
dec
and
pushf
jne
inc
sbb
scas
xlat
sbbb
push
iret
in
divb
push
das
in
and
inc
adc
or
outsb
scas
pop
lcall
push
std
adc
in
stos
adc
cmp
adc
push
pop
loope
pop
lret
cmp
lods
sahf
cmp
push
mov
or
mov
sbb
sbb
sbb
lahf
mov
jmp
add
mov
in
lahf
cmp
js
stc
rcll
and
call
pushf
push
inc
lods
mov
aas
add
lods
pop
popa
jle
mov
iret
imul
lret
pop
add
mov
pop
sub
and
insb
jp
sbbl
sub
stc
mov
jecxz
add
gs
adc
push
push
nop
popf
jmp
out
dec
sar
mov
jno
test
xor
mov
fcmovnb
dec
cltd
push
mov
popf
imul
push
pop
inc
adc
cs
mov
adc
adc
push
xchg
icebp
inc
divb
imul
jg
mov
js
dec
inc
ret
lods
into
push
in
and
mov
or
daa
or
imul
out
mov
sub
mov
cmp
fwait
mov
jo
rcr
mov
pop
jmp
pop
mov
mov
stc
mov
cmp
xor
cwtl
loope
cmp
aas
or
les
cmp
das
sub
idiv
xor
enter
add
ljmp
mov
gs
add
fmuls
mov
and
xchg
ss
dec
sbb
fcompl
fadd
fs
and
mov
or
addr16
mov
or
mov
inc
xchg
mov
sub
jne
or
jno
cmpsb
and
adc
dec
call
mov
jae
xchg
rclb
mov
mov
jb
adc
lret
inc
sbb
mov
daa
jne
cmp
adc
pusha
pop
jne
fnstenv
add
les
rorb
rcrl
sti
mov
cwtl
out
sbb
mov
mov
mov
xor
test
loopne
in
xchg
xchg
hlt
nop
stc
mov
pushf
cmpsb
push
sub
add
sar
jbe
jecxz
call
pop
cld
stos
dec
inc
fadds
hlt
inc
into
jb
adc
push
add
and
mov
dec
add
dec
cltd
imul
bound
cmp
aaa
mov
mov
out
sbb
xchg
mov
mov
clc
mov
divl
cmc
push
in
ljmp
sbb
into
xor
pop
sub
std
jmp
add
push
dec
loope
push
adc
mov
xchg
loopne
jae
fadd
mov
or
dec
cmp
test
std
and
and
outsb
in
add
add
scas
sbb
inc
mov
lahf
fisubl
dec
fidivl
fsub
mov
push
shll
rclb
mov
xchg
xchg
aaa
fdivrs
in
push
fmull
and
ds
jg
popa
lcall
loop
aaa
arpl
popf
push
xor
mov
outsb
in
gs
pusha
out
test
mov
mov
push
roll
or
mov
dec
shl
mov
mov
nop
pusha
jno
test
mov
dec
inc
outsl
sbbb
test
int
in
or
lret
movsl
sahf
fbstp
inc
xchg
rorb
mov
or
fiadds
sub
testl
shl
fcompl
ja,pt
lds
mov
shlb
mov
ret
iret
mov
or
push
add
sti
pop
push
iret
scas
push
cvttps2pi
and
mov
in
fwait
sbb
sbb
cmp
adc
rorb
insb
adc
pop
xor
imul
mov
inc
pusha
inc
aam
pop
xor
shl
fcomi
pop
jo
out
and
or
or
in
aam
movsl
ljmp
shl
ss
jne
lds
mov
ljmp
cld
out
inc
dec
aam
rcrb
xor
iret
imul
test
repz
call
adc
sahf
jae
inc
roll
push
fisttpll
or
cmp
loopne
adc
or
dec
out
inc
mov
mov
cld
cli
adc
gs
daa
add
insl
imul
fwait
jno
lock
mov
jae
and
pop
mov
cmpsl
cwtl
push
repz
mov
xor
es
xor
imul
push
mov
add
cli
mov
mov
adc
mov
insl
cld
mov
jmp
lea
or
sbb
jp
cltd
jae
lcall
out
mov
pop
mov
or
push
mov
adc
das
inc
imul
mov
push
lea
push
repnz
mov
nop
pop
cmp
push
addr16
fistps
scas
imul
cli
dec
das
iret
addr16
push
and
ret
xchg
jl
or
ljmp
stos
divb
push
pushf
int3
inc
jle
int3
iret
out
rorb
ds
std
aas
fwait
clc
stos
dec
sbb
test
sti
push
jp
imul
mov
in
popa
imul
std
lret
jp
imul
test
out
punpckldq
pop
or
jns
in
outsl
daa
xor
je
inc
sbb
in
lret
or
adc
lret
inc
and
mov
loopne
out
sarl
add
or
rcl
incb
xchg
je
or
inc
std
mov
call
adc
mov
xor
mov
xchg
jmp
jno
sbb
adc
test
adcb
push
mov
popf
jecxz
dec
out
cli
ret
cmp
gs
sub
xor
inc
jns
outsl
mov
movl
xor
insb
call
ds
inc
shll
xchg
push
dec
test
pop
nop
and
test
add
cmp
cmp
ret
mov
orl
xor
ret
js
inc
inc
push
jg
add
cmpsl
stc
inc
call
jl
movsb
add
xchg
and
out
sub
mov
pop
cmp
pmulhuw
fucomp
mov
int3
mov
adc
gs
cs
sub
xor
jecxz
negb
jle
orb
ret
out
inc
mov
out
dec
pop
xchg
cmpsl
cwtl
adc
adc
mov
pop
cmp
sbb
movsl
xchg
aad
xor
push
mov
jb
jns
push
jo
sti
inc
or
test
in
add
test
add
out
push
jg
cmpsb
jmp
jg
push
and
lea
in
cmp
loope
pushf
fs
int
add
stos
pop
leave
xor
or
daa
ljmp
imul
pushf
daa
inc
sub
stc
in
into
push
push
call
ljmp
inc
lret
les
stos
iret
push
imul
add
fmuls
push
fsts
aam
fnstcw
scas
add
aad
stos
outsb
push
xchg
mov
rcr
subb
and
sub
pop
iret
jbe
mov
add
mov
js
fists
mov
mov
arpl
sbb
sub
dec
mov
ret
lock
cmpsb
or
popa
stos
scas
jmp
data16
les
mov
xchg
adc
sbb
and
icebp
sub
fnstenv
mov
xchg
xchg
jp
out
lahf
nop
call
cmp
mov
push
loopne
shrb
mov
inc
test
ja
inc
je
mov
lahf
jns
ror
mov
jecxz
orb
cli
jo
les
fimull
pop
sbb
jl
dec
js
js
lahf
jle
aaa
nop
shll
sub
adc
jb
pop
js
inc
inc
xor
mov
sub
in
stos
data16
lock
sbb
neg
push
dec
mov
nop
inc
dec
lock
loopne
dec
bnd
inc
ja
push
xchg
pusha
cmpsl
imul
add
pop
gs
ss
mov
int
adc
aas
outsl
loop
mov
push
sti
pop
lea
adc
push
xlat
lahf
lea
mov
adc
inc
stos
mov
cmp
mov
js
ret
lahf
movsl
loopne
fsubr
dec
ficomps
dec
cmp
xchg
mov
dec
mov
aaa
add
cmp
aas
in
leave
add
cmp
or
cltd
scas
inc
lret
inc
lret
lods
jae
inc
sbb
hlt
dec
sub
js
mov
jle
pop
in
push
mov
es
lahf
fdiv
enter
dec
daa
sahf
push
mov
fwait
bound
pop
call
int
inc
shl
orl
push
push
std
dec
inc
data16
xchg
xlat
dec
out
xor
jb
les
mov
and
jge
out
adc
inc
subb
mov
test
addr16
into
sub
es
in
fs
sub
jg
jle
out
adc
xor
adc
xor
inc
sbb
divl
add
ficoml
shll
std
mov
loopne
mov
scas
cwtl
cmpsl
cmc
sbb
mov
test
pop
out
xchg
dec
out
test
xchg
mov
inc
mov
mov
pop
sbb
roll
xor
cmp
stos
xchg
leave
jmp
sbb
mov
lea
dec
in
cmp
jb
outsl
sub
sahf
sti
lds
stos
xchg
sub
cmc
fiaddl
dec
push
xor
fistpll
mov
clc
cli
inc
add
adc
lcall
add
add
fldl
imul
xchg
sar
nop
mov
jp
push
sub
mov
xor
xor
cmp
sub
mov
inc
mov
popf
adc
mov
jp
std
out
jo
pop
jle
jo
cwtl
sahf
decb
push
pop
lds
and
push
mov
push
add
cmpsb
adc
int3
int3
lock
es
into
sahf
pop
and
into
dec
ret
dec
clc
shrl
lods
pop
jle
pop
cmp
inc
insb
fsubl
test
scas
ficomps
pop
push
add
pop
ds
mov
push
cld
das
mov
into
stos
push
loope
loopne
mov
and
sbb
imul
and
push
xor
xchg
insl
movb
ljmp
adc
test
adc
sar
subb
lret
sub
jae
aas
xchg
inc
pushf
or
lock
push
mov
out
push
ficoms
testb
mov
cwtl
jb
dec
insb
or
and
fcoms
cmp
stos
dec
or
sarl
loop
fwait
dec
push
loop
pop
xlat
sub
movsl
out
inc
popf
jnp
inc
push
or
stos
sbb
das
out
and
lret
pop
enter
mov
adc
cmp
xor
jno
push
orl
push
or
fcomip
add
xchg
cmp
addl
sub
dec
push
clc
movsl
rcrb
lcall
sbb
stc
enter
jnp
aas
jl
stc
add
xor
lahf
adc
pushf
xchg
popa
in
cmpsl
cmpsl
jg
add
jno
push
dec
fsubrl
fldl
outsb
adc
mov
jge
inc
sbb
insb
daa
and
jp
jne
or
imul
jg
pop
cmc
pop
addl
add
sub
daa
test
adc
stc
lret
mov
lahf
jno
pop
inc
out
pop
mov
dec
xchg
leave
js
adc
jo
mov
cmpsb
and
scas
out
sub
stos
mov
negl
sub
cmpsl
test
mov
scas
xor
mov
inc
lods
inc
adcl
mov
es
push
call
imul
pop
jo
mov
inc
pop
sbbl
mov
aad
aaa
inc
loope
insl
adc
insl
sahf
xor
and
and
jae
cmp
std
mov
push
add
fsub
in
xchg
xlat
nop
nop
jg
sbb
fimuls
sub
stos
xchg
stos
adc
push
ret
hlt
call
je
adcl
pushl
iret
mov
cmc
jge
repnz
out
idivl
jnp
pop
dec
repz
mov
clc
out
repz
add
inc
mov
lret
iret
popf
or
pop
pop
mov
cmc
lcall
sbb
fsubrl
addb
mov
ss
jmp
ss
sbb
xorl
sbb
test
ljmp
xor
push
cmc
pushf
push
or
mov
xlat
pop
scas
mov
shrl
inc
pop
or
std
mov
call
aaa
pop
push
lods
jne
inc
jge
cwtl
insl
jnp
call
jae
pop
mov
aas
andb
xchg
outsl
sbb
in
jg
repnz
and
int
add
mov
jnp
enter
mov
xor
jg
adc
pop
adc
inc
dec
decl
cwtl
pop
sahf
dec
sub
or
popf
sti
imul
ljmp
pop
dec
pop
pop
mov
es
je
jle
cmp
dec
addb
cmp
add
mov
decb
sbb
xchg
dec
jb
mov
fdivrs
call
mov
add
das
xchg
fwait
ljmp
dec
in
leave
push
cwtl
lods
fsubp
add
loope
mov
jb
inc
pusha
xor
outsl
daa
es
mov
insb
and
add
je
add
scas
imulb
sub
cmp
stos
shll
popf
sbb
popl
stos
cmc
cmp
daa
outsl
test
leave
lret
lret
or
sub
and
lcall
fsubrs
test
cmpb
xor
sub
jb
add
pop
dec
fwait
imul
xlat
sbbl
cmp
clts
add
fsubrs
or
or
ss
push
std
mov
clc
orl
fadds
lret
mov
in
sub
sbb
aas
or
sti
orl
arpl
pop
in
ds
shlb
cmp
inc
imul
shl
insb
icebp
or
mov
stos
or
mov
push
std
inc
mov
mov
ljmp
jecxz
inc
jne
jle
les
jl
sahf
dec
adc
addr16
sbb
add
mov
insl
mov
incb
pusha
jae
ret
fs
pop
jne
jl
jae
xor
js
xchg
shll
loopne
or
add
fsubrp
xchg
mov
lods
cmp
psllw
inc
sbb
jnp
lea
sahf
mov
aad
les
jno
mov
inc
inc
hlt
test
push
mov
sub
fbstp
ss
fildl
xchg
push
xchg
push
imul
jl
push
test
cmpl
dec
xor
push
adc
pop
sbb
scas
sbb
xchg
repz
add
xchg
stc
repnz
pop
cs
push
fldcw
inc
in
jbe
pusha
shll
adc
adc
shl
out
popf
dec
bnd
jo
dec
test
les
push
loop
lods
in
cmpsl
xlat
je
and
sar
sbb
mov
enter
xor
mov
xchg
loop
inc
adc
mov
scas
insl
popf
mov
movq
push
add
dec
fisttpll
or
jl
mov
fsubs
mov
jl
xchg
lcall
js
mov
adc
pop
jp
stos
mov
push
sub
movsb
pop
jno
outsb
sub
xchg
push
jl
subl
jmp
sub
inc
xor
mov
mov
push
test
push
loopne
outsb
mov
mov
gs
xchg
sub
push
imul
std
rcll
xchg
push
jg
repnz
pop
in
jo
pop
jae
js
notl
sub
sub
ss
fmulp
dec
leave
imul
mov
xchg
add
movsl
push
sub
subl
mov
and
stc
nop
fdivrs
fwait
adc
scas
sbb
jnp
pop
lock
mov
leave
stos
dec
inc
xor
add
ss
addl
mov
flds
xchg
cmp
out
and
xchg
cmp
or
mov
cmp
rclb
cs
scas
int
jae
xchg
jp
xor
xlat
andl
sub
lock
jp
adc
repnz
out
cmp
arpl
rorb
dec
inc
or
pushf
fiadds
push
add
cmc
adc
and
lods
cmp
outsb
push
pop
cmp
jp
mov
mul
mov
fisttpl
dec
and
jo
stc
pop
xchg
push
mov
je
imul
fisttpl
fs
ret
mov
xor
push
xor
cmp
inc
dec
xchg
ds
cmpsb
inc
mov
push
and
incb
mov
mov
in
call
or
dec
leave
or
push
push
mov
roll
mov
xor
dec
or
loopne
dec
jae
test
add
pop
or
sbb
mov
mov
cmp
pop
in
jnp
dec
insl
jp
mov
mov
adc
sbb
mov
adc
push
inc
or
adc
jb
addr16
and
jnp
aas
out
shr
push
inc
push
mov
dec
nop
mov
jge
sub
bnd
lcall
jg
lea
cli
fimull
lcall
and
in
pushw
push
outsb
or
imul
pop
sub
inc
jo
dec
imul
out
scas
xchg
in
dec
push
inc
dec
mov
xchg
mov
push
mov
pop
das
gs
xchg
lret
divb
and
jns
push
mov
aaa
push
outsl
subb
imul
fucom
sbb
sub
call
cld
fidivrl
mov
ficoml
jne
xor
xchg
add
fistl
fistpll
shlb
fdivl
add
xorb
xchg
push
test
pavgw
popa
lret
pop
hlt
sub
xor
xchg
sub
jecxz
sub
sbb
mov
and
jp
push
in
and
mov
sbb
insb
ds
pop
aad
test
or
pop
fisttps
mov
test
mov
mov
dec
pop
hlt
mov
test
jns
leave
mov
and
lahf
jo
cmp
push
inc
xchg
pop
push
cltd
testb
outsl
push
xor
or
lods
mov
mov
cs
fistpll
ss
out
cs
adcl
je
aam
out
imul
shr
mov
lea
sub
rcr
into
adc
dec
push
into
mov
xchg
ret
xor
add
in
jne
clc
jg
inc
cmp
jmp
jns
out
iret
ret
clc
sbb
sub
loopne
hlt
inc
shll
dec
pop
mov
and
bound
dec
sbb
sub
push
dec
stos
stc
lcall
mov
fs
arpl
jg
push
cmp
or
inc
fistl
test
mov
subb
adc
lods
add
daa
pop
or
aas
aam
push
ds
cmc
mov
jp
adc
mov
xor
push
out
or
lock
aas
fidivrs
cli
xchg
cwtl
dec
movsl
mov
pop
xor
cld
dec
push
jo
out
xor
cs
xchg
jbe
out
in
pop
mov
popf
lods
mov
cli
inc
mov
out
shlb
adc
inc
add
test
mov
das
loop
pop
xor
ret
xchg
xor
jbe
dec
cs
mov
repz
mov
pop
dec
in
nop
cmp
add
push
aas
adc
in
aam
mov
popa
test
add
jno
iret
ret
leave
in
pop
sub
push
test
test
pop
cmpsl
jmp
and
mov
mov
fiadds
dec
in
icebp
jnp
and
mov
cld
loope
sub
jp
les
movsl
fildll
mov
jmp
out
pop
push
jmp
incb
add
shrl
int
sbb
adc
shl
sahf
add
sbb
lret
pop
bound
std
int
scas
mov
jae
je
inc
mov
test
andb
add
mov
js
popa
lahf
outsb
repz
mov
lods
rcrl
mov
lcall
shrb
in
mov
mov
dec
das
sub
add
or
mov
add
inc
xor
mov
or
or
movsb
scas
push
hlt
rcrl
imul
jmp
lret
icebp
dec
insl
test
pop
jo
imul
das
lahf
in
std
lods
adc
out
and
test
icebp
push
or
loopne
dec
sbb
adc
xor
mov
cmp
cltd
pop
push
or
xchg
mov
dec
int3
cmpb
mov
rcll
cmp
mov
aaa
lret
jge
imul
std
fldcw
lret
outsb
push
dec
add
mov
test
adc
lds
lods
movsb
xorl
lds
inc
es
call
and
inc
xchg
icebp
jnp
mov
xchg
pop
cli
mov
sar
cmpsb
cmp
dec
cld
imul
adc
sti
test
jecxz
outsb
dec
repnz
sti
cld
mov
jle
jne
ret
jge
cs
sbb
lods
xor
dec
xchg
roll
xchg
mov
stc
and
outsb
and
dec
ljmp
inc
add
dec
maskmovq
negl
xchg
dec
cmp
aam
popa
pop
mov
jg
inc
pop
jp
div
cmp
imulb
insl
test
lret
loope
icebp
xor
minps
and
sti
in
xchg
xchg
and
and
mov
pushl
clc
push
xchg
jne
lods
and
push
aas
sarl
daa
outsb
mov
out
pop
outsb
mov
xchg
cmp
xchg
jp
or
lods
pop
mov
aaa
mov
cld
mov
sbb
lret
scas
fxch
addr16
je
lret
icebp
test
or
sub
adc
xchg
dec
rorb
mov
pop
ss
sbb
push
xchg
xlat
in
call
inc
in
dec
lods
fcom
xor
shlb
sbb
pop
jge
xor
stc
int
bound
fwait
and
scas
test
jecxz
fcoml
xchg
ret
dec
xlat
jne
test
and
fwait
pop
mov
push
in
out
xor
fnstsw
dec
pop
push
shrl
fsubrl
and
cmp
push
xchg
cli
lods
xchg
cmpb
mov
jge
clc
mov
mov
popf
or
xchg
xchg
pop
pop
lcall
inc
dec
mov
das
push
xor
icebp
push
xor
stos
fildl
push
stc
icebp
push
add
cmp
cmp
fstps
scas
dec
lock
fcompl
mov
adc
jl
insb
repz
cmc
or
or
jns
pop
fwait
mov
nop
popa
cmc
movsb
in
mov
loop
push
daa
inc
adc
outsb
jmp
test
add
js
pop
lahf
jne
xchg
bnd
sbb
dec
push
daa
inc
mov
xchg
stos
hlt
xchg
sbb
bound
pop
fs
push
sub
mov
insb
cltd
cmp
inc
shl
fst
in
adc
js
fcompl
test
int
mov
movsl
jg
popa
pop
lahf
push
push
filds
or
push
test
call
ja
fnstenv
cs
negl
mov
sub
mov
jp
nop
scas
sti
mov
aas
dec
mov
or
ja
out
adc
fstpt
inc
sar
pop
inc
cmpsl
and
aas
mov
insl
cli
jmp
pop
pop
push
cmp
fisttps
or
cs
fldt
xchg
loope
lea
popf
dec
mov
mov
xor
jmp
imul
xor
mov
inc
loop
mov
push
mov
or
sbb
mov
andl
sbb
lea
stos
scas
push
pop
push
xchg
repnz
add
pop
jle
xor
adcb
adc
rolb
jno
mov
lcall
daa
inc
inc
add
xchg
repz
repnz
aaa
cmp
or
ret
sarb
xor
movb
push
ja
push
mov
fwait
loope
lcall
push
and
in
or
sub
dec
cmpl
les
sbb
mov
dec
lret
loope
popa
test
sub
push
mov
or
lret
loope
lcall
inc
notb
ds
mov
out
jl
repz
mov
ret
cmpsb
mov
adc
pop
data16
and
sbb
mov
pop
mov
cmpsl
lea
jge
cmp
push
outsb
push
lahf
fsubs
lahf
add
nop
jg
mov
roll
sbb
jo
mov
int3
sub
and
sub
sbb
sub
ficompl
or
mov
or
mov
sub
dec
inc
cmp
sti
dec
arpl
pop
mov
fstps
sti
lahf
lea
dec
dec
cltd
jle
test
in
ficoml
dec
or
cs
movsl
sbb
pop
imul
dec
in
cmp
enter
or
sahf
or
add
lea
pop
inc
loopne
mov
daa
nop
and
mull
scas
in
add
add
push
mov
xor
pop
mov
imul
pop
and
inc
cmp
sbb
inc
adc
kmovb
sub
lcall
leave
or
jecxz
jp
inc
inc
xor
cmp
leave
aas
aas
mov
jne
dec
fs
popf
inc
jge
add
outsb
xor
sarb
lret
fdivs
ja
mov
mov
out
jg
arpl
xchg
ljmp
lahf
and
leave
mov
popa
in
mov
stos
imul
ret
push
jle
jns
push
js
shrb
insl
jle
imul
mov
sub
xor
in
jp
outsl
pop
sub
fidivrs
aam
dec
adc
inc
jns
addr16
fwait
out
cmpsb
loop
aad
test
push
jnp
lret
cmp
or
cmc
push
push
push
sbb
call
inc
repz
mov
enter
pop
xorb
cmc
xchg
mov
fstpt
aas
mov
or
mov
dec
push
add
jle
and
or
sub
sbb
pusha
int3
mov
pushf
scas
push
lcall
mov
pop
cmpsl
lods
std
iret
fldl
pop
pushw
or
pop
sbb
sbb
popa
aaa
das
ret
lahf
aas
and
push
jge
lods
jmp
jg
cmpsb
sub
push
pop
imul
loop
das
lds
loope
adc
pop
or
cmpsl
rolb
mov
mov
sarl
lret
mov
mov
dec
loope
in
leave
scas
popf
push
push
dec
outsl
out
in
das
and
inc
les
cmp
stc
test
adc
xlat
mov
mov
push
mov
push
inc
cmp
ds
xchg
pop
mov
ja
out
or
shrl
and
or
arpl
gs
xor
in
and
fwait
pop
in
xor
fildll
mov
mov
ss
mov
sbb
popf
inc
or
movsb
enter
dec
jp
bound
cmp
or
in
div
xchg
mov
inc
rorb
jnp
sbb
mov
out
push
sub
or
cli
jmp
mov
rol
jl
cmpsl
sub
mov
iret
lcall
or
or
shll
inc
in
mov
add
out
sbb
mov
jg
mov
sub
mov
fnstsw
js
inc
mov
mov
sub
jmp
pushf
les
testl
mov
dec
mov
fdivr
adc
sbb
rclb
mov
sub
xor
push
arpl
pop
test
sub
je
mov
sbb
inc
dec
and
add
xchg
mov
stos
jle
push
movsb
mov
jge
sub
out
pop
adc
addr16
fwait
jmp
adc
push
sub
mov
adc
mov
inc
xchg
xchg
cmpsl
dec
xor
lahf
dec
push
jne
daa
in
pop
shlb
mov
or
lret
fsub
push
push
std
inc
in
outsl
sbb
pop
int
add
dec
pop
push
pop
shll
and
add
sub
or
movsb
mov
movsb
pusha
fisubs
push
sub
sbb
add
cmc
xlat
adc
pusha
icebp
push
lret
rorb
xor
outsb
jno
xor
mov
out
stos
lods
or
stos
daa
out
cmp
push
lea
cmp
in
shlb
and
xor
jge
inc
add
xchg
cmc
adc
mov
mov
lcall
jns
leave
jb
pop
mov
mov
pop
cmp
jo
fisttpll
push
sbb
jb
xchg
adc
push
popa
mov
ja
jne
adc
repz
jl
cwtl
fisubrl
je
pop
std
cwtl
das
cwtl
cmp
xor
add
push
inc
lods
add
or
or
cs
nop
pushf
jle
pusha
in
mov
push
aad
or
out
add
push
dec
xchg
das
add
scas
mov
pop
xchg
lds
adc
xor
dec
xor
in
sbb
insl
test
mov
lret
clc
arpl
jno
or
add
lcall
cmp
pusha
sub
add
jns
sar
lods
dec
out
shrb
xchg
xchg
adc
cmp
scas
pop
outsb
mov
push
lcall
lds
sub
mov
int3
mov
clc
sbb
arpl
lcall
adc
int
inc
stos
pop
and
outsl
test
test
mov
sub
iret
adc
add
pop
ds
lret
mov
mov
cmp
fstpl
inc
frstor
dec
pop
fisttps
leave
std
xchg
roll
mov
push
mov
lods
inc
clc
sub
movsb
fs
gs
jo
xor
cmp
mov
sub
jmp
rcr
dec
sbb
out
cmp
jnp
into
mov
bound
mov
leave
dec
repz
adc
mov
push
add
and
cmp
push
out
pushf
add
ret
adc
imul
jnp
jmp
xchg
add
std
sub
jae
cli
imul
lock
sti
lock
insl
rcr
cmc
cs
and
mov
cmovo
jb
loopne
ljmp
test
mov
imul
hlt
mov
mov
rolb
aas
ret
loope
jle
aam
ss
jl
inc
cwtl
es
and
lret
jb
xor
pop
lcallw
dec
out
icebp
sub
sbb
nop
push
popf
xchg
and
cs
jle
jle
out
sar
sbb
add
mov
bound
inc
lret
lea
or
out
xlat
sti
push
jo
daa
mov
orl
jl
jmp
mov
and
ret
in
push
cmc
pop
insb
mov
lret
sbb
mov
jmp
ficompl
subl
fsubl
jno
xchg
xchg
jge
jbe
lret
lods
gs
mov
sub
adc
mov
jp
sbb
pop
xor
lahf
add
fwait
jno
rol
mov
and
rcll
cmpl
lcall
xchg
in
scas
sbb
sbb
into
fmull
mov
dec
cli
fildl
mov
mov
mov
pop
inc
scas
and
and
inc
cli
pop
into
dec
mov
push
fimull
cmpsb
test
pop
outsb
pop
push
jge
call
inc
inc
les
scas
fwait
in
ret
jno
repz
sub
sub
push
lret
fmull
mov
jg
popa
outsl
mov
jg
or
testb
call
dec
out
jecxz
xchg
dec
sti
cmp
pop
mov
jbe
and
test
bnd
or
enter
nop
dec
or
cmp
imul
xchg
xor
outsb
mov
mov
dec
and
movsl
ljmp
dec
push
inc
iret
cmp
aad
dec
ret
add
and
jle
dec
mov
pop
push
mov
mov
inc
push
sub
pop
clc
lret
mov
mov
push
addr16
test
dec
fcoml
bound
xlat
je
push
mov
or
shll
insb
xchg
shlb
lcall
mov
sub
cmp
idiv
push
cltd
and
xor
xor
pop
mov
fdivrl
mov
std
pop
push
aas
mov
sbb
xchg
xchg
addr16
xchg
into
sbb
mov
fiaddl
popa
sbb
into
divb
lret
cmp
or
cmpb
je
cmp
std
jmp
and
test
ds
xchg
testl
jp
daa
fdivl
jne
test
jno
ret
jns
shlb
enter
sbb
jo
aad
mov
mov
mov
adc
sub
xchg
dec
mov
ret
jg
pop
jecxz
jo
out
sub
outsb
jge
and
push
xor
daa
ss
adc
cmp
mov
or
sahf
dec
push
mov
or
fcomip
push
mov
test
aad
fucom
cmp
pop
addl
bound
xlat
inc
loope
in
stc
push
inc
xchg
mov
sbb
push
call
call
daa
push
fisubrs
faddl
sub
and
hlt
test
ds
mov
adc
imul
and
cmp
mov
outsl
push
lds
or
jl
dec
add
scas
sub
or
loop
enter
clc
mov
pop
add
out
cmp
push
dec
and
pop
lods
pop
sbb
jno
gs
call
shll
and
xchg
das
sub
push
int3
lahf
add
loop
jecxz
mov
dec
xor
mov
or
sarl
data16
pop
in
loop
add
mov
leave
xor
mov
fdivl
jmp
sbbl
out
push
pop
cmp
aas
xchg
adc
mov
or
aaa
fnsave
cltd
ror
jl
or
pop
fwait
mov
andl
mov
fs
or
pop
aaa
fidivrs
fs
mov
outsl
or
out
aas
sarb
push
addr16
icebp
mov
fs
push
filds
mov
xchg
jo
test
mov
fimuls
cs
sbb
stos
sarb
iret
add
mov
cmp
popl
dec
mov
xchg
mov
cmpsl
xchg
jnp
and
aas
jmp
aam
push
add
xchg
adc
ret
mov
push
pop
test
dec
lds
ja
sub
xor
stos
mov
jmp
imul
pop
pop
jbe
int3
mov
mov
xor
mov
push
jo
sahf
mov
insl
out
mov
scas
jle
mov
dec
ds
xchg
cmp
sahf
xchg
dec
mov
inc
jae,pt
mov
sbb
mov
data16
push
pop
movsl
push
add
jmp
enter
mov
xchg
jbe
mov
sar
adc
outsl
int
jl
aam
xchg
lods
pusha
push
loopne
mov
fsubrs
mov
test
pop
xor
mov
mov
push
mov
outsl
sbb
or
pop
xchg
xchg
inc
inc
mov
inc
aad
imul
ja
and
mov
ja
cli
addr16
pop
xorl
xchg
repz
xor
lcall
push
imul
and
cmpsb
icebp
shlb
or
ret
jmp
push
repz
add
scas
in
push
les
mov
imul
mov
mov
xor
ja
test
out
lods
int3
and
inc
mov
jmp
outsl
cmpsl
fs
leave
mov
fldpi
cs
push
xor
fneni(8087
add
and
push
in
pop
es
inc
fwait
les
pop
ja
daa
dec
les
pushf
fidivrs
das
and
adc
ret
and
xchg
gs
mov
rcll
icebp
sti
or
mov
js
xor
sbb
cmp
push
je
push
cmp
repnz
imul
stos
out
mov
rcrl
fdivrl
pop
push
pop
xor
jno
out
mov
mov
adc
repz
add
mov
cmp
mov
pop
ja
or
outsb
scas
cmc
or
pop
xchg
int3
out
in
mov
lea
xchg
or
sub
in
je
out
or
std
mov
into
andnps
lret
mov
push
sbb
decl
aam
fwait
dec
aaa
add
push
sti
xor
add
pop
and
ret
movb
ljmp
xchg
push
sbb
sub
lods
ds
popf
out
js
jno
jecxz
mov
ror
mov
push
sub
stos
stos
push
cwtl
add
jno
addr16
mov
loop
dec
sub
cltd
mov
fsubrs
sbb
aas
push
push
popa
mov
push
inc
fldcw
and
push
push
push
pop
fisubl
das
pop
mov
std
lods
and
adc
fstpt
pop
fstpt
inc
add
inc
sbb
inc
stos
cmpl
data16
movsb
mov
addr16
pop
cmpsl
lcall
sub
sbb
icebp
adc
and
add
mov
loop
insb
les
hlt
cli
lods
test
jp
lret
pop
scas
or
jbe
std
sbb
pop
std
push
xor
sbb
mov
js
or
and
pushl
add
mov
mov
js
dec
mov
aam
mov
sar
popa
inc
dec
arpl
jl
test
ret
push
mov
jmp
insl
pop
sbb
adc
jno
mov
shll
pop
sbb
pop
jne
pop
mov
xchg
addb
fadds
mov
push
xchg
sbb
xchg
negb
add
pop
mov
mov
jl
pop
mov
mov
mov
cld
divps
push
arpl
dec
push
jno
rcrl
mov
fs
repz
fistpl
pop
adc
mov
cmp
jns
inc
cmpl
cmp
or
mov
adc
outsl
mov
imul
cmp
mov
mov
xor
dec
inc
inc
or
jg
push
imul
mov
dec
mov
fisubl
xchg
sub
mov
arpl
push
cmp
cmp
sbb
push
js
in
outsb
repnz
test
addr16
sub
pop
jnp
lahf
sbb
mov
repnz
and
sub
mov
out
cmp
jg
cmp
ljmp
insl
inc
lds
pop
sbb
movb
test
jmp
faddp
int
push
loop
lock
or
or
dec
addb
fistpl
adcb
test
pop
lahf
jae
lods
cmp
xchg
orb
or
or
dec
mov
arpl
in
jge
adc
dec
push
xor
xchg
sub
fistps
pop
je
adc
imul
movsb
sub
idivb
or
pop
xchg
orb
cltd
add
test
add
fs
rcll
xor
js
lret
ret
idiv
mov
pop
fwait
mov
sti
popa
inc
and
sbb
mov
mov
ret
fisubs
imul
xchg
jns
pop
cmp
push
jl
mov
jle
nop
lock
pop
rol
and
lret
mov
je
jbe
ss
cmp
jp
addr16
scas
push
cmp
cld
cs
pop
out
loop
cmc
jp
dec
addr16
int3
test
jg
xor
mov
xor
ret
hlt
add
cmp
jae
mov
xchg
stos
mov
jns
lcall
xor
xchg
loop
lret
scas
out
in
pop
push
sub
aaa
xchg
frstor
scas
movsb
pop
push
push
mov
outsl
push
sub
adc
xor
jb
stc
hlt
jb
and
mov
fsubr
fisttpll
and
test
repnz
fcomp
add
cmc
mov
and
push
dec
sub
loope
mov
inc
pop
xchg
jg
push
jnp
jno
push
sub
or
ss
nop
in
and
fiaddl
ljmp
hlt
jmp
popf
and
nop
mov
jge
stc
xchg
lret
popl
mov
pop
js
add
es
mov
int3
mov
mov
mov
jmp
cld
sbb
push
idiv
xchg
cs
faddl
dec
addr16
push
call
ss
and
mov
test
mov
stc
mov
push
xchg
inc
mov
cli
and
int
aad
jno
cmp
xor
push
adc
in
repz
mulb
out
or
inc
mov
jno
dec
out
cld
sub
sbb
aam
popa
xor
insl
mov
sub
jl
jmp
xchg
test
xor
cli
orb
mov
xor
mov
call
xchg
sti
fisttpl
inc
pop
and
loopne
fstp
leave
std
lret
or
test
cmp
scas
xor
xchg
cltd
jp
jp
mulb
push
call
jge
es
idivl
imul
neg
inc
rclb
dec
mov
gs
test
xchg
jl
enter
mov
pusha
xchg
pop
lods
mov
xchg
clc
insb
or
xor
repnz
rolb
inc
insb
adc
enter
cmp
movsl
push
xchg
ud0
inc
push
cmp
jge
std
cld
pop
test
push
inc
xchg
std
imul
push
sbb
in
loop
movb
jno
pop
lcall
test
lods
daa
into
add
and
mov
xor
add
or
add
les
jno
or
ljmp
jecxz
and
and
repnz
int
dec
rcr
mov
mov
adc
push
pusha
pop
mov
pop
jmp
fidivrs
pop
les
out
lock
adc
divl
into
fildl
stos
adc
cmp
fnstsw
push
cltd
pop
mov
les
mov
xchg
dec
cli
pop
xor
mov
mov
jecxz
mov
dec
roll
pop
xchg
jge
push
rorl
and
je
or
ret
or
mov
stos
into
mov
mov
push
jmp
cld
ret
and
push
cmp
call
test
out
jne
cld
imul
jae
jmp
data16
jge
sbb
mov
aam
jo
push
subl
scas
cmp
sbb
rcll
inc
adc
pusha
adc
xor
mov
je
enter
pop
es
mov
mov
enter
bound
jg
int3
sbb
cmc
and
fyl2xp1
aad
dec
adc
sahf
sub
fsqrt
push
push
pushf
sub
hlt
stos
scas
lock
popa
push
and
leave
into
cld
cmp
loopne
test
xor
nop
popf
mov
cmp
mov
jp
cmp
mov
test
imul
cmp
pop
jg
cmp
test
xchg
add
push
bound
fldl
pop
fwait
popa
adc
cli
mov
aad
shll
pop
lock
jle
xchg
call
ss
cs
sbb
jb
mov
jecxz
and
pushf
ret
leave
es
dec
pop
or
add
mov
rcrl
or
mov
sub
mov
notb
xchg
out
mov
pop
cmp
lock
pop
in
lods
and
sub
push
adc
ss
jl
fwait
pop
out
sub
sub
mov
int3
arpl
mov
ret
adc
in
ret
int3
repnz
mov
rcr
inc
adc
flds
push
dec
es
inc
ss
dec
cmp
lret
or
addb
mov
icebp
scas
or
inc
test
jns
jo
xor
out
and
pop
popa
pop
sub
mov
insl
xlat
and
ss
push
ss
add
pop
out
into
ret
add
add
rorb
mov
and
inc
xchg
stos
leave
push
xchg
je
outsb
mov
and
xor
cltd
sub
mov
inc
mov
icebp
int3
in
int
dec
xlat
js
inc
sub
xchg
adc
das
xor
adc
out
inc
shr
fidivs
shll
enter
mov
and
test
dec
cmp
fnstsw
int
push
xchg
jnp
mov
mov
sbbb
xor
stc
jb
ljmp
and
mov
rolb
inc
xchg
pop
sub
movsb
and
outsl
jae
sbb
daa
shrb
pop
mov
sub
movsl
or
fimuls
push
insb
mov
std
fmull
inc
sbb
shll
aas
cmp
adc
insb
sub
pusha
cli
sub
pop
addb
insl
sub
sub
xchg
mov
repz
sbb
stos
jmp
jbe
pop
push
iret
in
dec
cs
movsb
xor
pushf
int
sbb
mov
aas
loop
or
lock
jmp
sub
outsb
loope
lods
aas
aas
dec
cwtl
int3
loope
cmp
push
les
lcall
lret
sbb
fwait
mov
gs
xor
mov
cmp
and
jbe
ds
inc
arpl
pusha
mov
lret
insl
loope
dec
jbe
or
scas
push
sub
jmp
adcb
push
push
adc
cmp
test
imul
sti
adc
lcall
dec
cld
adc
jmp
ret
sar
daa
repnz
push
cmpl
cmp
and
mov
pop
push
fcoml
mov
jns
pop
mov
mov
mov
pop
clc
inc
dec
jge
cs
sbb
add
jns
pop
jne
lahf
leave
push
sub
outsl
jb
mov
orb
je
pmaxub
es
testb
shll
in
std
sub
mov
fld
fistl
sbb
xchg
xor
or
aam
das
rclb
dec
cmp
cld
and
repz
push
ja
add
loopne
sahf
gs
dec
fstpt
sbb
push
mov
ret
aad
sahf
xor
insl
add
inc
dec
jne
cmpl
call
pusha
imul
daa
sti
mov
mov
add
mov
mov
sbb
imul
outsb
push
arpl
insb
out
rcrl
ret
jl
ja
inc
and
sub
rorb
and
notl
inc
sbb
xor
push
pop
xchg
stos
xchg
test
es
lret
fcoms
dec
lds
jge
push
fiadds
inc
jns
and
jnp
inc
pop
out
and
adc
jp
es
add
mov
mov
xor
add
push
lods
dec
aad
xchg
push
pop
dec
inc
hlt
clc
mov
test
les
into
sbb
push
and
dec
fdivrs
xor
in
inc
js
cmpl
pop
add
out
bound
add
lret
or
imul
jno,pn
loope
fcoms
in
sub
aas
movsl
mov
sub
repnz
xchg
ss
lods
mov
pop
xor
into
jp
cmp
aas
js
rcll
call
mov
jmp
test
fdivr
mov
clc
and
jno
dec
add
mov
shlb
movsb
imul
out
dec
sbb
gs
fwait
xor
jae
lahf
xor
loope
xor
mov
xor
jnp
sub
fwait
pop
and
aam
sti
jno
push
pop
inc
xchg
out
cltd
mov
xchg
outsl
dec
xor
sbb
or
in
pop
icebp
out
jbe
mov
or
icebp
dec
lret
test
add
jae
mov
nop
sub
mov
repz
stos
inc
loopne
dec
es
sub
inc
imul
jle
mov
into
in
and
packuswb
je
dec
fs
loop
les
lea
push
add
out
jecxz
cltd
pop
adc
dec
fisubl
testl
stos
mov
fcmovnbe
scas
jl
testb
data16
outsb
ljmp
mov
xor
rolb
xchg
ljmp
into
int3
sub
cmp
push
lods
adc
out
cmpsb
or
inc
enter
sbb
bnd
jae
sbb
lea
add
jnp
leave
fwait
and
push
xlat
int
mov
fcmovnb
std
leave
or
testl
scas
jne
mov
std
sbb
movups
into
mov
bswap
fnstcw
sub
imul
mov
and
cltd
add
mov
cmp
pop
stc
cmp
jmp
xlat
xchg
ret
rorb
repnz
pop
test
imul
lock
loop
ror
repz
enter
pushf
je
xor
aad
cmp
adcb
cmpsb
jmp
mov
testb
cmp
js
jle
jno
ret
lcall
mov
outsl
dec
xor
pusha
dec
push
outsl
mulb
sbb
pop
mov
xchg
repnz
jbe
pop
shr
xchg
sub
cmpsl
movsb
push
stos
cmc
stos
mov
xor
aad
je
std
ja
mov
adc
das
push
repz
mov
add
inc
pop
cltd
popf
pop
add
pop
lock
mov
jle
mov
sbb
ret
xor
jns
inc
mov
jne
test
adc
sub
shll
pop
push
and
shl
mov
rclb
dec
cmp
sub
jp
loop
mov
movsb
lea
movb
stos
insl
daa
jle
xchg
inc
xchg
mov
nop
and
mov
ds
scas
sbbb
lock
push
mov
cli
and
sub
mov
or
cmp
sti
mov
push
ret
sbb
pop
into
fcomps
je
jnp
xchg
fistpl
xor
fcoml
and
xor
adc
and
push
shr
das
jge
adc
jbe
sti
gs
push
inc
lock
dec
rorl
fildl
adc
mov
addr16
mov
push
cwtl
lret
xlat
mov
mov
insb
inc
pop
pop
cmpsl
dec
cmpsl
cltd
insb
cmp
mov
push
scas
jp
dec
repnz
mov
adc
imul
lds
push
adc
cmp
loop
adc
mov
mov
pop
adc
fiaddl
adc
pop
fs
mov
jb
or
out
push
lret
lahf
cmp
movsb
mov
lret
push
jne
lcall
pop
jle
sar
jmp
sbb
cmp
jbe
and
dec
sbb
pop
dec
test
cmp
mov
cli
lock
hlt
clc
xchg
pop
mov
inc
div
andl
add
roll
and
inc
in
aaa
mov
inc
loope
cmp
dec
mov
push
sub
mov
cmp
test
cmc
jl
scas
adc
jbe
push
leave
jl
pop
mov
xchg
test
push
in
daa
fistpll
clc
rcrb
icebp
mov
aas
fwait
insl
or
sti
and
mov
push
clc
sbb
sbb
dec
mov
mov
ds
push
aas
mov
hlt
mov
dec
pop
xlat
pop
sarb
push
addb
pop
adc
mov
add
cmp
fldl
stos
lds
loope
add
adc
into
cmp
add
dec
mov
call
mov
sub
or
out
dec
dec
fnstenv
cld
pop
subl
pop
cmp
mov
add
push
add
into
push
cmp
jno
nop
xor
jbe
in
ja
jmp
lcall
pop
pop
js
adc
dec
out
sti
dec
mov
or
loope
pop
inc
test
jbe
clc
lods
ljmp
dec
ljmp
mov
push
insl
nop
add
in
cmp
fldlg2
nop
inc
jecxz
aaa
icebp
dec
adc
loopne
cli
mov
mov
adc
out
push
testl
in
inc
iret
gs
lahf
jbe
fmull
cs
test
xchg
adc
aaa
mov
bound
test
xor
mov
cmp
push
dec
cwtl
mov
push
push
push
add
aas
push
sahf
push
out
or
mov
xor
sub
out
push
add
out
das
inc
jmp
mov
repz
loop
xchg
or
jno
pop
popa
shrl
xor
ds
pop
cmp
inc
jnp
jmp
add
pop
scas
bound
adc
pop
sbb
adc
leave
rol
sti
fcmovu
cmp
data16
leave
cli
ss
jp
outsb
jae
cmp
mov
jns
adc
outsb
fwait
xorl
jo
insl
int3
inc
jo
dec
insl
insl
jae
and
data16
scas
jno
push
jb
aas
in
arpl
adc
add
ds
fdivs
jge
jecxz
fsts
movsl
cmp
jg
jp
jae
dec
jge
cmp
in
sti
inc
mov
ret
cwtl
mov
and
jnp
or
lods
into
sub
jne
lret
notb
test
mov
into
cs
imul
adc
out
xchg
pushf
and
push
push
cmc
mov
sbb
add
adc
and
mov
push
pop
sub
mov
ja
ds
notb
xchg
daa
and
sub
lcall
scas
push
leave
cmpsb
xchg
sub
inc
push
in
iret
imull
stos
xor
lea
test
test
ss
add
fwait
hlt
dec
pop
sub
sbb
aam
cmpsb
and
push
mov
in
out
mov
mov
sub
jb
push
insl
xchg
ror
test
mov
xor
pop
push
sti
imul
xchg
adcb
mov
cltd
jl
and
add
inc
in
or
xor
and
lahf
sub
minps
sbb
xorl
andb
sbbl
push
paddd
inc
or
fisttps
or
out
xchg
sub
push
xor
int3
out
je
aas
xor
pop
inc
lret
movsb
fisttpl
mov
dec
mov
jmp
jbe
icebp
out
xor
sub
or
pusha
add
adc
xchg
dec
leave
sub
ds
adc
jne
pop
arpl
cmp
mov
roll
mov
mov
pop
out
mov
scas
cmp
adc
ss
mov
loope
xlat
sub
xor
push
cmp
mov
cmc
cmpl
imul
jl
xchg
mov
lea
jae
in
push
aas
stc
mov
xchg
pop
outsb
sub
adc
jb
push
push
pusha
jo
jle
ficompl
sbbb
inc
lret
push
negl
fsubrp
sar
push
mov
lret
popa
push
adcl
or
sar
inc
adc
xchg
mov
push
mov
add
lcall
pop
sub
add
mov
sbb
push
cmp
xor
test
add
mov
mov
sbb
cmpsb
cli
mov
sbbb
inc
pop
push
inc
push
lret
ljmp
enter
add
lods
int3
mov
shr
aam
pop
std
pop
push
test
outsb
out
dec
cmc
ljmp
cmpsb
daa
pop
fxch
push
in
lea
lret
add
or
dec
test
xor
jmp
insl
jo
jecxz
ficoml
ret
push
test
xchg
lret
jg
repz
xchg
and
cmc
lea
insb
popf
sbb
int3
imul
ds
jae
mov
jns
fsqrt
jb
cmp
test
fs
das
jno
jnp
dec
xchg
dec
jns
or
aas
imul
int
lahf
lods
stc
mov
lahf
mov
pop
pop
popa
call
je
add
inc
imul
out
cmp
jnp
xchg
mov
aam
loopne
mov
nop
cwtl
imul
sbb
mov
mov
cmc
clc
pushf
xadd
test
mov
call
jo
sbb
xlat
xchg
out
dec
adc
lahf
sti
icebp
ljmp
jmp
les
scas
push
imul
arpl
sub
pop
inc
pop
jae
inc
and
xor
pop
push
inc
cld
cwtl
adc
jne
das
aaa
mov
daa
adc
inc
or
js
bound
pop
and
cmpsb
lahf
inc
stos
sub
test
pop
xor
inc
and
xor
aad
xor
push
push
push
cmp
leave
push
sahf
repnz
into
mov
dec
add
xor
fstpt
sbb
mov
daa
push
imul
cltd
jne
mov
pusha
lret
iret
movb
xchg
fs
pop
add
inc
popa
mov
fs
cltd
pop
addl
jle
or
push
mov
fst
sbb
xchg
test
add
and
ss
dec
fnstsw
or
rorl
dec
push
imul
push
inc
loopne
push
pop
and
mov
pushf
ljmp
xor
movsb
out
xlat
jne
or
jno
sarb
movsl
mov
lret
adc
fwait
aad
add
inc
dec
adc
pop
daa
dec
mov
cmp
mov
out
mov
mov
vcmpps
outsb
test
and
pop
push
jmp
cmp
add
lods
fstpt
arpl
das
scas
andl
and
fwait
mov
jne
lret
mov
icebp
mov
loopne
js
lret
call
cmpsb
int
clc
mov
sub
cmp
xchg
mov
pop
push
ds
mov
inc
scas
lahf
fimuls
mov
fwait
orb
ja
idivl
fwait
xor
into
push
popa
inc
aas
out
nop
icebp
push
or
and
fists
pop
jns
movsl
xchg
ja
jge
aas
rorl
call
lds
jnp
fistl
push
inc
std
js
pop
inc
push
and
outsb
icebp
iret
loop
inc
jns
xchg
sahf
int3
dec
push
cmc
out
mov
loope
dec
adc
gs
fcom
shll
imul
add
daa
gs
stos
lretw
fwait
pop
jbe
inc
scas
jp
sub
mov
lret
push
int3
pop
scas
movb
andl
stc
add
lret
mov
inc
xlat
bnd
sbb
sbb
outsl
and
xor
xchg
je
xchg
lea
rorb
rorb
incb
and
jmp
adc
stos
push
mov
scas
push
sbb
fs
cmpsl
push
lret
arpl
loop
jp
mov
out
jmp
cwtl
or
aaa
xor
add
lods
pushf
xchg
push
das
push
mov
es
pusha
scas
inc
fadds
sahf
lods
or
inc
mov
and
pop
popa
in
xor
lahf
and
jns
jp
xor
mov
sahf
out
mov
fwait
stos
fmul
jg
int3
popl
xorl
outsw
dec
dec
es
xchg
inc
out
jo
xchg
sbb
rcll
call
mov
cmpsl
add
mov
das
test
xor
cmp
mov
dec
pop
adc
pop
and
clc
fisubrl
aam
dec
int
subl
push
lods
out
sub
pop
enter
xor
or
into
ljmp
or
mov
mov
sar
mov
leave
mov
inc
out
mov
xlat
enter
sub
aas
and
adc
push
sbb
insl
int3
adc
jmp
imul
fmull
jmp
xchg
ss
push
int3
inc
sbb
repz
xor
xchg
repnz
daa
enter
pop
lods
xlat
xor
lods
rcll
and
adcb
icebp
test
push
cmpsl
pop
stos
hlt
add
stc
lahf
into
xor
js
leave
sub
push
lea
popl
add
hlt
mov
test
and
push
add
xchg
lods
sbbb
addl
bound
pop
cmc
push
dec
dec
imull
mov
je
or
adc
call
andb
adc
inc
ud2
add
mov
pop
sub
cmp
jb
ljmp
loop
mov
andb
jmp
repnz
rcrl
jge
mov
or
sbb
cmp
jns
push
ljmp
push
adc
lods
xor
andb
cli
ficompl
out
adc
mov
lret
out
gs
mov
inc
sbb
adc
xchg
pop
cmp
pop
cmp
mov
xor
mov
test
dec
dec
pop
insb
jge
stos
inc
cmp
dec
stos
cltd
push
or
push
lds
rorl
in
lret
in
stos
cmp
loope
cld
out
xchg
and
push
mov
pop
push
stc
aaa
idiv
pusha
mov
stos
dec
pop
adc
pushf
jecxz
cmp
jne
mov
call
adc
xchg
test
or
mov
push
mov
xchg
sbb
ljmp
push
jb
scas
mov
inc
or
cltd
outsl
lea
pop
sbb
xor
aad
fisttpll
pop
pop
adc
notb
loope
ficoms
shl
and
sarl
and
fdivs
cmp
mov
xor
xchg
subb
mov
scas
xor
andb
mov
inc
sti
andnps
xchg
jp
pop
and
xchg
cwtl
out
mov
call
out
jnp
mov
leave
inc
push
xor
inc
aam
pop
mov
push
push
mov
sbb
fsubrp
call
loope
xor
enter
fildl
pop
jnp
pop
sub
cmp
loop
iret
push
daa
inc
dec
rorb
dec
daa
ret
jo
sub
ja
popf
sub
cmpsl
fsubrl
insb
jmp
adc
aaa
into
in
inc
popf
mov
cmp
jle
test
and
push
cltd
into
daa
cmpsl
jbe
cwtl
cwtl
ljmp
jmp
sbb
or
pop
inc
inc
and
push
jle
cmp
stos
pop
cwtl
into
mov
mov
pop
idivb
fldl
out
into
cmp
sahf
out
xchg
shll
cmp
jmp
jle
int
lcall
dec
dec
adc
jbe
rcl
jnp
adc
clc
xchg
push
cmpsb
pushf
inc
jecxz
dec
xchg
sub
ss
xchg
jg
cmp
out
loopne
add
rol
jmp
sti
inc
fistps
sbb
sbb
push
cwtl
aad
sbb
pop
add
test
repz
in
test
and
jo
test
mov
cmp
sub
mov
xor
pop
jns
mov
mov
dec
dec
sbb
sub
ljmp
cmc
icebp
cmp
mov
and
xor
pop
jb
and
adc
pop
aas
outsb
jnp
sbb
hlt
insl
cmpsb
sbb
iret
jle
xchg
jo
and
sbb
and
jp
push
pushf
rcr
cmpsl
adc
pop
ret
dec
out
cwtl
pop
lock
clc
cmp
sub
push
push
xchg
mov
lahf
adcl
addl
inc
sbb
jl
jmp
daa
or
fucom
and
cmp
push
test
into
cwtl
jno
leave
mov
xchg
and
adc
aaa
mov
fcompl
orb
pop
popa
xor
fs
push
jo
sbb
in
sub
test
fwait
cmp
bound
jo
cld
xor
cmp
jno
xchg
xchg
mov
fisttpll
mov
hlt
xor
mov
lret
pop
out
jl
shlb
or
jo
jmp
sti
icebp
cmp
xchg
inc
data16
insb
push
rcrb
dec
xchg
push
jnp
pop
push
or
rcll
jmp
mov
sbb
xor
lahf
scas
mov
add
inc
xchg
fisubl
lret
sbb
dec
xorb
sub
js
mov
or
cmc
scas
mov
xchg
mov
add
ss
cmpsb
stos
mov
xor
scas
adc
push
push
push
mov
mov
xchg
add
sub
frstor
popf
lds
cmp
mov
lods
adc
lret
test
adc
sarl
frstor
xor
call
adc
shrl
imull
sbb
filds
bound
mov
mov
mov
orb
pop
push
jmp
xchg
jge
inc
adc
icebp
test
cmp
pushf
sbb
pop
sub
out
xchg
lock
shrl
movsl
xchg
int3
cmpsb
test
loope
xor
int
pop
mov
sub
scas
or
sub
adc
pop
testb
sub
out
jo
data16
xchg
pushf
inc
fsubrs
imul
add
adc
and
gs
clc
stos
cld
pop
xchg
loop
sti
xchg
xor
inc
mov
pop
fwait
cmp
jle
ss
pop
stos
jns
mov
fisubl
push
sbb
stos
test
fwait
roll
push
or
add
cmpsb
repnz
mov
rclb
ret
xchg
movsl
xor
dec
dec
dec
cmp
fstps
movsl
jnp
gs
cmp
dec
in
repz
les
je
loop
jno
push
xor
les
dec
dec
fistl
pusha
jg
jns
daa
pusha
xor
cmpsl
adc
inc
dec
iret
arpl
inc
jl
loop
ds
ficoml
lods
pop
cld
pop
mov
imul
sub
gs
adc
jge
movsl
push
stos
lds
aaa
and
scas
out
pop
in
out
add
iret
adc
push
pushf
lret
mov
sub
push
mov
xlat
adc
jns
add
jnp
das
in
into
add
jns
jo
pop
hlt
hlt
jecxz,pn
aam
iret
jmp
or
jb
mov
sub
insb
cltd
fstpl
clc
push
adc
lock
mov
outsl
sbb
xor
or
mov
divl
nop
xchg
push
and
sub
dec
pop
fsts
ja
pop
xchg
jp
mov
icebp
pop
rolb
loop
xor
mov
cmpsb
inc
mov
dec
mov
negl
pop
sub
test
inc
xchg
leave
pop
fsts
ljmp
sbb
or
mov
das
xor
adc
sbb
aas
adc
and
push
add
inc
in
adc
sub
cld
dec
cs
loope
sbb
into
iret
jno
sub
jnp
fcomip
sub
ljmp
fcmovne
jns
lea
dec
outsl
js
daa
mov
aas
cwtl
inc
fstps
mov
arpl
mov
add
icebp
movsb
jne
clc
adc
adc
lret
jge
jg
cmp
lods
cld
mov
jns
jns
mov
dec
sti
inc
call
adc
mov
jmp
xchg
movsl
loopne
cmpl
jb
inc
loop
sti
or
or
mov
mov
es
rorl
popl
cmp
pop
add
mov
clc
dec
sub
lds
cmp
idiv
sub
push
orl
scas
mov
jne
push
mov
scas
and
sub
insl
cli
jl
sbb
scas
pop
jl
and
push
mov
push
in
cltd
shlb
or
hlt
in
add
inc
xchg
inc
fsubrl
outsb
push
icebp
leave
into
aas
xchg
jo
fbstp
iret
sbb
xor
dec
add
push
fstps
iret
sbb
mov
insb
in
mul
out
xor
not
sub
dec
sahf
pop
test
sub
fmuls
cli
dec
shlb
cmp
jge
rorb
dec
mov
ja
and
adc
xchg
repnz
sbb
leave
ret
push
push
push
jecxz
mov
mov
inc
outsl
stc
cmpsb
xor
xchg
and
sbbb
decl
aad
add
xor
fimuls
repz
stos
sbb
aad
into
and
loopne
fwait
roll
pop
clc
cmpsb
pop
fwait
aas
sbbb
xchg
sub
clc
push
fisttpll
pop
push
pop
bnd
mov
and
stos
enter
push
xchg
dec
cmc
into
add
sub
or
popf
mov
fsubrs
sub
or
dec
pop
ljmp
add
push
push
out
dec
or
mov
or
loopne
aad
js
mov
cli
jp
add
mov
movsl
xor
jbe
arpl
mov
inc
lcall
cmp
subb
xor
cwtl
adc
insl
daa
push
xchg
sbb
add
push
jae
outsb
outsl
fcoms
dec
add
shlb
xchg
inc
lods
movsb
add
mov
push
add
icebp
or
mov
cmp
stos
lret
push
imul
shll
in
dec
jl
and
pushf
out
push
pop
mov
cmpb
inc
adc
sub
outsb
inc
mov
and
repz
shlb
sub
jecxz
mov
fptan
gs
mov
or
sbb
lds
es
iret
cmp
jnp
in
rclb
mov
push
leave
mov
add
bound
pop
loop
xchg
fldcw
sti
std
adc
adc
cmp
or
jno
xor
stos
mov
mov
mov
xchg
cmp
push
push
or
shl
mov
insl
inc
add
in
inc
mov
outsb
ret
sahf
outsb
test
add
push
ret
popa
aaa
fs
test
nop
test
aaa
mov
or
inc
cmp
pop
add
jbe
pop
sub
xchg
outsb
mov
in
int3
mov
negl
add
lcall
iret
mov
cmp
pop
jbe
mov
shlb
imul
push
pop
scas
mov
insl
stos
push
mov
imul
mov
dec
inc
int3
js
arpl
cltd
push
insl
lock
or
stos
cmpsb
mov
in
aad
jnp
inc
cmp
ret
lahf
popa
ffreep
aaa
loop,pn
bound
pop
je
mov
dec
cmp
test
icebp
add
adc
movsb
nop
in
pop
lret
add
and
cltd
shrb
orb
scas
adc
sub
mov
jp
jno
adc
out
mov
push
xor
add
lret
mov
mov
js
pop
inc
mov
xor
in
ljmp
jg
test
jae
cmp
mov
cmp
fcomp
ret
rorb
mov
push
dec
mov
aaa
mov
adc
pusha
frstor
xor
addr16
aad
xchg
out
shl
mov
std
adc
push
cmp
fnstcw
in
test
dec
out
add
popf
inc
fwait
es
mov
mov
mov
dec
movsl
push
inc
inc
lods
push
dec
data16
aam
jns
xor
cmp
repnz
add
je
jg
cmc
std
jae
dec
inc
xor
call
in
xchg
fnstcw
pop
into
push
popa
fadd
push
mov
push
sub
adc
fs
fnop
inc
ja
or
sbb
jbe
mov
cmpsl
pop
xchg
sbb
jmp
cwtl
adc
pop
add
jo
jbe
lret
xor
fimuls
xchg
or
push
ret
or
or
in
add
cmp
or
fadds
test
in
jle
add
or
sub
out
or
add
xchg
lcall
pop
into
inc
adc
lods
cmpsl
icebp
cmp
add
nop
and
cli
pop
or
jg
push
or
sub
dec
out
cmc
xor
loopne
sti
loop
and
or
or
mov
or
aaa
leave
mov
pop
inc
sub
mov
pop
iret
mov
pop
xor
jb
out
aad
jae
test
mov
mov
andb
push
xor
loop
pushf
rolb
aad
cwtl
cld
jg
jg
jne
dec
sahf
and
lods
jbe
cwtl
aaa
add
pusha
int
stos
dec
loope
mov
xor
jae
mov
shlb
push
adcl
sub
mov
ja
insb
jne
dec
adc
neg
fimuls
xchg
mov
mov
push
fdivrl
rcrl
mov
sbb
dec
or
les
add
push
rorl
mov
push
pop
or
push
mov
lods
pop
inc
loop
in
jecxz
xchg
ret
enter
sbb
push
and
rcr
out
pop
mov
sub
imul
cmp
pop
ja
cmpl
leave
xchg
call
push
or
ljmp
push
popa
jo
xchg
fwait
les
add
cmp
iret
dec
push
jo
imul
clc
shr
lret
js
fldl
mov
inc
dec
shlb
loopne
lods
pop
jns
xchg
in
adc
add
xor
xor
mov
icebp
cmpsb
pop
jl
push
or
mov
cltd
out
push
out
cmp
mov
pop
mov
ds
imul
int3
pop
mulb
xor
push
inc
adc
or
inc
inc
cwtl
mov
shll
mov
dec
or
cmp
int3
mov
sbb
mov
test
pop
aaa
or
repz
pop
jmp
loope
pop
xor
lret
cmc
xor
dec
jge,pt
dec
xchg
divl
sbb
push
gs
mov
mov
lcall
cmp
loopne
lods
stos
adc
cmp
in
and
mov
fcomip
sub
cmp
push
fimuls
inc
ret
xor
or
mov
scas
cmp
dec
adc
roll
sbbb
push
btr
jae
push
rolb
into
mov
pusha
into
sub
inc
or
imull
repnz
inc
add
xchg
pop
das
inc
arpl
hlt
repnz
push
int3
cmpb
int
mov
shll
mov
cmp
dec
jmp
cmc
cmp
cmpsb
incb
adc
fadd
sub
lods
test
push
mov
rcrb
sbb
mov
popa
lcall
stos
pop
mov
pop
add
pop
add
repnz
pushf
xor
pop
repnz
aaa
mov
cmp
add
inc
test
jno
inc
xor
int3
mov
iret
mov
cmc
inc
add
cmp
in
sub
mov
out
jae
xor
rorl
rorl
mov
mov
popf
pop
aaa
lods
jnp
mov
in
mov
cmp
int3
or
pop
mov
cwtl
inc
mov
xchg
cli
test
sub
ljmp
scas
adc
cs
dec
cmp
inc
aaa
aas
sbb
out
outsb
cs
add
mov
cs
cmpsl
push
jmp
pop
xor
dec
jp
loope
jg
pop
iret
add
clc
xchg
leave
cmc
xchg
adcl
cld
out
je
scas
es
insb
fs
inc
iret
mov
test
sub
inc
int3
adc
pusha
xchg
mov
in
das
jno
je
pop
fadd
shlb
push
ret
and
dec
add
stos
ret
scas
pop
mov
dec
lods
aad
xchg
adc
jl
jl
cmp
lret
sub
repz
push
or
cmp
or
sbb
aaa
sbb
outsb
adc
dec
jle,pt
outsl
mov
ret
int
int3
std
jp
mov
lret
jmp
push
jno
mov
cmc
and
sbb
dec
aam
pcmpgtd
pop
fstpl
fcmovu
jp
out
sub
adc
cs
aam
and
lea
rclb
or
sbb
jle
call
push
lret
push
fnstcw
jle
xchg
cmp
adc
std
xchg
jno
jns
and
aad
mov
jg
push
cmp
pop
pop
mov
add
sub
push
data16
or
data16
les
mov
add
or
repz
ret
fstpl
dec
insl
repz
mov
cwtl
or
push
mov
or
cmc
ljmp
jmp
js
cmp
aam
or
pop
dec
mov
jb
jns
mov
xchg
mov
and
xor
out
popf
fisttps
aad
cwtl
ljmp
mov
xor
cmp
dec
jle
add
shr
xorb
sarb
fbstp
es
aaa
sub
mov
push
mov
jbe
loope
jb
and
sub
push
bnd
inc
ret
pop
clc
mov
stos
enter
das
cmp
int
insl
xchg
pop
mov
cmc
pushf
sbb
pop
xchg
lock
and
sbbl
subb
mov
fwait
cmp
and
ret
pop
testb
xchg
cmpsb
loopw
xor
addr16
leave
jb
movsb
jb
ret
add
insl
and
mov
sbb
imul
lods
adc
sbb
mov
aad
testl
mov
mov
cwtl
loope
pop
adc
pushf
pop
loope
mov
jecxz
imul
pop
fldcw
iret
into
push
hlt
pop
cwtl
jo
mov
and
cmpsb
xchg
scas
push
mov
xor
in
call
push
loopne
andb
cmp
test
sti
aaa
fwait
outsl
inc
loopne
dec
setl
fnsave
mov
stos
insb
je
in
push
bound
inc
xchg
dec
jne
jp
cmp
pop
inc
adc
std
cmp
sahf
ret
adc
xchg
aam
sub
ret
jecxz
adc
push
outsl
jl
xchg
adc
imul
loop,pt
mov
andb
xchg
daa
aam
cmpb
in
jecxz
xor
lahf
repz
pop
nop
ret
mov
ret
cli
aam
sbb
fdivrs
xor
pop
aas
jns
imul
jmp
pop
push
push
lret
xchg
stc
xor
in
add
push
mov
fcoms
jmp
mov
push
ffreep
daa
scas
inc
jecxz
ds
mov
push
rorb
pop
lret
stos
dec
mov
adc
inc
mov
push
repnz
or
jb
aad
aas
ljmp
cmp
jge
out
insl
and
xor
push
neg
mov
fwait
and
xor
push
stc
inc
shll
inc
lahf
add
stos
push
jmp
cltd
push
jecxz
pop
or
cmpsb
mov
outsb
cltd
push
mov
jnp
mov
insb
jle
mov
adc
jnp
std
mov
jns
shrb
push
inc
mov
jle
mov
xchg
iret
push
jecxz
cmp
daa
ja
pop
jl
jne
adc
dec
and
outsb
mov
adc
and
jge
sub
lret
xor
hlt
cmc
int
shrl
sar
lcall
pop
test
fyl2xp1
in
lock
sub
cmp
cmc
cmp
jae
cmp
inc
cmp
les
int3
lods
repz
sub
sub
idivb
mov
push
int3
push
in
movsl
enter
test
mov
or
out
sbb
pop
push
test
in
cli
jb
pop
outsl
adc
lret
cli
lret
add
jle
jne
ljmp
push
xor
mov
adc
insl
or
push
cmp
inc
xchg
sub
lret
xchg
pop
das
xchg
pop
popa
sbb
jbe
pop
lea
std
push
dec
inc
mov
mov
aam
outsl
jnp
loopne
push
xchg
outsb
aaa
cmp
xlat
fstp
push
cmp
inc
pop
push
scas
push
jg
in
mov
push
pop
cwtl
mov
jg
xchg
call
push
sub
dec
or
dec
int3
xchg
mov
sbb
inc
push
xlat
xchg
cmp
mov
sarl
jb
jge
sub
mov
shlb
push
std
imul
xchg
iret
int
pop
mov
inc
sbb
bound
pop
sub
or
sbb
insb
adc
fnstcw
jecxz
addb
push
loopne
aas
sub
pop
jo
push
push
cmp
scas
xor
sbb
iret
jno
jnp
sahf
jne
loopne
push
jbe
mov
insl
shll
test
cmpsl
mov
sbb
inc
daa
loop
daa
out
insb
sbbb
mov
and
xchg
inc
lods
flds
incl
mov
xchg
mov
mov
mov
xlat
mov
cmp
jno
adc
xor
daa
filds
notl
loopne
mov
push
inc
stos
hlt
adc
mov
shl
and
test
sbb
mov
ret
in
dec
mov
mov
or
xchg
dec
push
ficoms
cmpsl
dec
inc
inc
push
lods
or
mov
mov
jae
jmp
lcall
sti
sarl
add
movsb
cmp
adc
sbb
push
setge
loope
lea
mov
es
std
mov
int
jge
mov
mov
fisttpll
mov
lds
lahf
jbe
mov
xchg
sbb
mov
mov
xorb
lock
mov
mov
mov
es
xor
seto
in
inc
rorl
in
jecxz
add
inc
mov
ss
sbb
cmp
nop
icebp
jmp
xchg
shlb
pop
das
aam
cld
jns
rclb
into
or
push
sbb
addl
arpl
inc
test
arpl
sbb
shrb
stos
or
in
inc
and
mov
mov
inc
pop
cs
std
lahf
mov
rorl
movsl
or
daa
adc
push
jg
pop
sbb
scas
cmc
lret
adc
repz
push
adc
sahf
dec
cmp
ret
or
mov
sbb
sub
les
jb
std
dec
mull
sti
add
inc
daa
les
movsb
aad
pop
pop
cltd
sub
pop
mov
ds
jg
int3
push
hlt
push
lods
scas
inc
cmp
hlt
mov
fcmovnbe
lahf
jp
pop
sbb
test
dec
sub
jns
jae
stc
insl
imul
push
pop
insb
or
int
icebp
orb
repnz
dec
stc
push
sub
adc
adc
subb
xchg
hlt
pop
imul
dec
iret
push
dec
cltd
push
fisubl
fwait
push
mov
mov
inc
inc
bound
fidivl
sbb
push
mov
dec
inc
lods
sbb
aam
adc
inc
aas
out
xor
cltd
sbb
jp
test
aaa
push
test
imul
sub
add
es
ss
jmp
incl
mov
jecxz
inc
adc
push
cwtl
aas
pusha
mov
push
stos
inc
lods
xchg
xor
orl
xchg
enter
sti
cmp
mov
cltd
mov
dec
dec
and
repnz
dec
call
pop
icebp
lcall
mov
inc
icebp
aas
aas
lret
mov
mov
lea
lcall
sub
jl
push
mov
imul
loopne
pop
push
xchg
data16
mov
dec
and
jns
rcr
aam
punpcklbw
xor
cmp
inc
or
jo
rolb
push
std
jbe
or
sub
pop
icebp
ror
leave
and
sbb
repz
jle
scas
jnp
push
ja
dec
xchg
jbe
aad
cwtl
cld
mov
das
push
push
mov
mov
or
imul
cmp
xor
lea
lods
dec
sub
xor
adc
pop
mov
outsb
mov
lcall
dec
out
xchg
int3
add
inc
popa
mov
out
ret
dec
xchg
cmpsl
pop
ficoms
sbbl
or
repz
lcall
xchg
inc
push
fldt
push
js
sbbb
negl
sub
stos
lahf
jno
mov
in
lcall
dec
aaa
xlat
push
lret
sbb
add
stos
mov
adc
or
adc
rorb
adc
mov
add
jl
imul
bts
in
mov
or
sbb
test
cli
xchg
dec
leave
pop
xchg
jnp
adc
xchg
hlt
fisubrl
out
xacquire
fwait
and
insl
scas
add
std
inc
sbb
test
mov
mov
jg
std
xchg
add
cs
cmp
cli
ret
fwait
mov
cmp
cmp
jne
enter
loop
inc
pusha
push
jne
sbb
ss
xchg
mov
jg
aad
or
imul
pop
sbb
adc
cmp
bound
leave
lahf
mov
mov
nop
and
xorl
lea
pop
mov
xor
aad
lock
cmp
add
mov
add
or
jmp
ja
cmp
mov
pop
jp
push
lcall
fs
push
clc
or
cs
mov
scas
repnz
enter
imul
push
jmp
xchg
push
jno
cmp
add
sub
cmp
mov
fxch
in
cmpsl
sub
leave
addr16
sti
mov
jbe
rorl
imul
in
pop
jmp
test
dec
xor
fxch
ret
js
adc
mov
lds
out
jno
fadd
xchg
pusha
loope
js
popa
inc
inc
imul
int3
sbb
aaa
jg
xor
inc
fnstsw
jb
addr16
mov
insl
movsl
cmp
aas
leave
lea
stc
cmp
rcrb
ret
adc
arpl
mov
leave
xchg
push
jnp
clc
mov
das
push
push
mov
and
scas
sbb
mov
cmp
xchg
lods
add
popf
jle
aad
xchg
popl
popa
push
fnstenv
hlt
cld
pushf
jmp
pop
cmc
fcmovnbe
push
fcoml
xchg
icebp
ret
or
push
ds
mov
icebp
mov
in
fistps
movsl
outsb
mul
les
xchg
scas
test
loope
imul
push
mov
push
adc
push
sti
push
xchg
mov
and
inc
or
lods
add
inc
pop
icebp
test
mov
jb
movsl
pop
jne
cltd
rcrl
fwait
movsl
lds
outsl
cli
repnz
addr16
sbb
cmp
sub
cmpb
ss
in
call
cmp
add
lea
push
mov
mov
popf
or
mov
in
and
mov
pushl
mov
push
inc
mov
mov
out
lahf
les
xchg
fistpll
ds
xchg
adc
mov
xchg
movsb
rcll
rorb
add
mov
add
xchg
cli
lds
out
in
mov
call
int3
and
cmp
es
pop
in
mov
mov
push
and
and
cmp
faddl
lock
lret
in
jecxz
xchg
adc
shlb
and
xor
ret
test
or
ds
in
xchg
daa
or
push
inc
stos
xchg
leave
jmp
mov
mov
outsl
inc
adc
mov
jecxz
psllw
pushf
and
fisubs
mov
sti
in
out
ficoml
loopne
dec
andl
sub
test
into
cmp
inc
or
divl
or
movsl
mov
rcrl
sarl
roll
inc
sub
mov
adc
xchg
cmc
mov
lds
cmc
int3
sarl
and
mov
inc
xor
inc
out
jp
out
js
in
adc
in
je
cli
arpl
lea
out
sub
pop
jne
mov
stc
jmp
orl
loopne
sti
ljmp
jae
stos
gs
int
gs
es
pop
xchg
incb
loopne
imul
mov
dec
adc
testb
push
or
push
pusha
ds
test
mov
push
xchg
je
cs
je
fidivrs
mov
mov
add
push
xchg
test
cmp
shl
push
push
sbb
and
cmp
sbb
inc
ds
and
pop
jle
lods
cmpsl
or
hlt
xchg
out
imull
sub
leave
je
add
dec
sub
xchg
dec
push
mov
jae
mov
mov
and
fadds
mov
mov
xlat
mov
push
sub
mov
lock
rorb
inc
loop
push
scas
mov
repnz
cld
cmpsl
pop
inc
testl
dec
jp
repz
insl
dec
or
jb
mov
or
sbb
out
pushl
push
repnz
int
ret
loope
adc
loopne
call
fistpll
cmp
cltd
je
sub
push
jno
push
fidivl
shrl
fidivrl
repnz
dec
cmp
cmp
icebp
dec
repz
cmp
fldcw
mov
in
hlt
mov
lahf
out
or
mov
stos
sub
pop
addb
dec
mov
mov
bound
dec
or
pop
cmpsb
enter
dec
mov
push
jmp
popa
arpl
iret
inc
and
pop
push
jnp
lds
pusha
xchg
pop
lods
and
push
stos
add
inc
popa
or
pop
popf
cmp
test
shrb
int3
mov
in
cmpsb
push
fsub
push
jp
mov
mov
out
jbe
add
xchg
popa
xor
addb
out
xor
jo
ds
ja
fsubl
mov
cmp
add
dec
dec
push
pop
mov
lret
in
jecxz
mov
cmpsb
cmpsb
jbe
push
loop
movsl
and
and
leave
adc
hlt
xchg
fisttpl
popa
mov
movsb
jecxz
mov
testb
in
push
daa
add
fisubl
sub
sbb
outsb
hlt
dec
xlat
adc
inc
fistps
cmp
lock
stos
sbb
mov
ja
inc
inc
das
or
jl
xchg
add
lret
mov
jbe
aam
mov
insb
repz
cmp
out
mov
testb
inc
and
idivb
sbb
movsb
data16
imul
fiadds
push
xchg
or
aas
pop
push
pop
cmp
push
aaa
xchg
dec
popl
inc
inc
andps
repz
mov
or
movsl
movsb
push
mov
mov
add
fadds
jle
xchg
cmpsb
xchg
repnz
pop
js
jo
push
sub
xchg
stos
inc
aad
xor
add
stc
add
push
mov
cmp
fs
ret
dec
fs
std
aam
pushf
incl
xchg
mov
mov
aaa
leave
mov
popa
in
or
std
decl
pop
repnz
dec
adc
gs
mov
mov
jns
mov
into
xchg
xchg
rcl
mov
imul
andl
insl
pop
sbb
lret
fnsave
aaa
btc
adc
inc
adc
call
cmp
xor
repnz
mov
stos
mov
add
std
adc
mov
divb
ja
push
ljmp
test
mov
and
fisttpl
mov
dec
push
enter
outsb
roll
push
out
sbb
ds
nop
aaa
jmp
aas
mov
andl
fnsave
aad
das
xor
pushf
cli
mov
xchg
mov
ss
lcall
js
mov
sbb
ds
into
popa
or
jge
outsb
fcomp
jnp
pop
and
push
inc
add
or
rcrl
roll
xchg
call
mov
inc
sbb
push
push
andb
xchg
inc
pop
sub
es
xchg
cmp
pop
inc
cmp
fsubl
rcrb
and
xchg
mov
out
orb
push
lods
cmp
mov
pushf
jmp
mov
pushf
mov
dec
jno
addb
out
dec
lods
xchg
inc
sbb
pop
arpl
sar
cltd
sahf
xchg
sub
push
add
xor
push
ja
add
imul
cmpb
xchg
jbe
cmc
push
imul
test
cmpsb
mov
mov
ss
int
jmp
pushf
es
xchg
add
dec
lods
lea
scas
clc
sbb
mov
inc
and
aaa
dec
xchg
xchg
cmp
test
fisubl
pop
aas
fidivrl
daa
iret
std
scas
sti
xor
jmp
sbb
mov
ss
xor
loopne
jge
out
lods
ljmp
ja
nop
lret
in
je
fcom
icebp
push
push
loop
push
sbb
fisubs
jne
mov
test
das
rcll
shlb
imul
scas
ss
mov
pop
leave
lret
xchg
orb
stc
popa
jb
pushf
pop
xchg
xor
cmp
add
adc
pop
shl
sbb
das
test
and
decb
adcb
int3
ja
bnd
out
cld
push
or
mov
lds
inc
sbb
adc
mov
mov
into
lods
fwait
popa
repz
lods
xchg
pop
jb
inc
push
or
push
inc
mov
jne
xchg
stos
movl
rorl
xchg
sahf
jno
movsb
or
sti
aas
into
pop
scas
loop
add
cmp
inc
cmpsb
fcmovnbe
jmp
pop
jecxz
fbld
mov
mov
mov
dec
into
in
and
out
and
adc
or
ficoml
xor
popl
sti
mov
push
xchg
xorb
mov
and
int3
pop
repz
outsb
fldl
pop
and
mov
sub
mov
ja
jle
push
xchg
dec
mov
cmp
retw
xchg
push
ret
pushfw
scas
hlt
sahf
xchg
mov
pop
fneni(8087
pop
js
push
enter
xor
lods
and
stos
push
fsubl
xchg
hlt
stos
and
ret
mov
addr16
push
push
cmpsb
jb
sub
cmp
add
push
hlt
jp
into
loopne
jae
leave
ror
sbb
mov
sbb
int
mov
jmp
mov
pop
or
mov
sbb
inc
lods
push
lods
jecxz
and
shrb
adc
add
adc
cmpsb
cmpsb
pop
mov
sub
outsl
int3
cmpb
repnz
ljmp
loope
cld
icebp
push
push
xor
or
adcl
dec
imul
mov
add
adc
sub
inc
nop
xchg
adc
sub
mov
ret
cmpsl
adc
cmp
mov
pop
xchg
ljmp
repnz
pop
movsl
fbstp
sub
xor
fucom
outsl
and
pop
fst
in
mov
aad
pushf
inc
jecxz
test
mov
ds
test
pop
pop
repnz
js
pusha
scas
scas
leave
lods
int3
add
mov
shlb
jle
pop
outsb
mov
in
popa
mov
add
in
jns
adc
outsb
or
nop
and
adcb
pop
jmp
cs
sbb
xchg
dec
scas
clc
cld
leave
xor
sub
mov
xchg
xchg
leave
loope
pop
mov
sbb
and
sar
test
sub
enter
cltd
push
mov
stos
bound
shlb
or
adc
lods
xor
lods
jmp
int3
inc
shlb
pop
jns
mov
and
xchg
sahf
pop
mov
sbb
lret
pushf
stos
loop
pushl
xchg
mov
mov
push
xor
out
outsl
rcrb
inc
xchg
pop
and
sbb
mov
into
testl
cli
jbe
cltd
loope
jnp
fwait
jne
lea
mov
sar
push
daa
scas
out
jns
cmpsb
jns
stos
jbe
xchg
push
cwtl
dec
xchg
or
out
dec
insl
movsb
or
test
mov
repz
xor
out
fsubrl
pop
cltd
roll
lcall
xor
xor
cwtl
jo
dec
dec
push
or
pop
rcll
in
in
xchg
ds
sbb
stc
mov
add
jae
scas
mov
xor
jmp
test
push
push
sbb
lods
roll
lret
jno
flds
push
int
shlb
cli
mov
xor
lods
enter
jb
jl
stc
subl
cmpsb
ret
shr
mov
loop
dec
leave
push
out
and
iret
add
clc
mov
jns
negb
leave
push
mov
repnz
push
bound
xchg
mov
rcll
fcmovu
and
ss
scas
insb
mov
mov
mov
data16
movsl
jbe
cltd
inc
push
push
sub
xor
adc
testl
add
dec
add
mov
cmp
sub
std
loop
les
push
add
lods
sub
nop
xlat
ret
xor
mov
add
xchg
cmpsl
lahf
pushf
iret
aam
mov
fwait
push
jl
mov
jbe
jge
adc
jmp
dec
mov
clc
pop
repnz
nop
leave
cs
movsb
cmp
push
shrb
jns
add
loope
loope
cmpsb
xchg
fadds
pop
inc
je
stos
ret
sub
aaa
inc
mov
adc
das
pushf
arpl
fidivrs
pop
movsl
xchg
lahf
jo
cmp
cs
int
int
shll
popf
or
push
popf
xchg
test
aaa
insb
mov
mov
scas
mov
cli
xor
adc
mov
or
cmp
std
cmp
xchg
fwait
mov
pop
into
test
inc
out
repnz
push
sbb
and
aaa
aam
adc
roll
jne
and
xchg
xor
fdiv
or
sub
cmp
movb
in
dec
cmp
andb
ret
cli
sbb
adc
mov
std
jmp
movsb
or
ss
dec
adc
or
incl
testb
mov
aad
rcll
aam
mov
fsubl
lahf
and
jp
repz
sub
push
rcrl
nop
xor
in
mov
xor
lock
in
scas
cld
mov
sarl
incb
pop
inc
sbb
dec
ds
ret
popa
mov
mov
cmp
jmp
mov
sti
cmp
mov
cmp
xchg
fsubrs
sbb
sub
popf
inc
dec
testl
or
sarl
or
sti
xchg
repz
xchg
xchg
mov
aas
sbb
mov
cmpsl
pushf
mov
clc
pop
add
out
sbb
pop
mov
mov
pop
mov
mov
in
push
jecxz
mov
mov
test
ret
dec
dec
in
jp
xchg
jns
rcll
clc
int3
jmp
dec
cmp
xchg
in
pushf
mov
lcall
and
jne
data16
out
js
sahf
adc
inc
rcrl
inc
aas
arpl
leave
lret
mov
cmp
or
pop
cmc
lods
enter
stos
jecxz
mov
adcb
jmp
push
pop
push
push
push
push
xchg
or
mov
andl
jg
push
inc
inc
jg
adc
imul
pop
xchg
fildl
stos
lods
pop
xchg
jg
std
xchg
adc
lock
jbe
in
shll
adc
cs
xchg
rcll
cli
jb
xchg
mov
ret
loopne
mov
pop
and
ficoms
push
in
hlt
fldenv
faddp
sbb
jg
lods
sub
fwait
xor
and
stos
movsl
cmc
pop
inc
cwtl
pop
ss
xor
negl
dec
mov
jbe
popa
mov
int
sti
sbb
mov
into
repnz
call
adc
in
int
test
lea
or
xchg
pop
in
std
xchg
test
mov
loopne
sbb
pop
adc
pop
enter
sti
sbb
inc
fmul
and
lods
cmp
pop
lret
cmpsb
bound
pop
sar
out
push
les
andb
mov
jo
out
ret
xchg
xor
pusha
enter
bound
in
stos
xchg
insb
inc
loop
dec
test
les
jle
int
dec
or
lret
rorl
sbb
call
pop
push
inc
icebp
mov
fdivr
je
testb
xchg
hlt
hlt
xchg
fiadds
jp
in
jb
les
nop
out
je
jne
push
in
adcb
lret
int3
cli
scas
lret
movsl
xor
in
addr16
pop
sbb
cld
xchg
cwtl
aad
fildl
push
movsl
cltd
inc
scas
sub
cld
shlb
sub
and
jge
mov
sub
mov
lcall
push
test
sbb
inc
ret
add
negb
lock
jge
test
cmp
dec
pop
fwait
addb
jg
fs
into
pop
pop
popf
and
test
imul
ror
icebp
aaa
data16
mov
inc
and
stc
mov
xlat
mov
pop
mov
nop
imul
pop
stc
jg
jecxz
arpl
mov
iret
push
scas
popf
inc
cmp
scas
std
push
jo
and
daa
adc
inc
ja
stc
ret
daa
pusha
mov
inc
aas
stos
je
xchg
jle
mov
sbb
push
lret
jne
push
push
dec
jp
sbb
pop
rcrb
in
cmpsl
pop
enter
xor
decl
sbb
adc
and
shll
ret
sub
lahf
xor
xchg
je
mov
jle
cmpl
icebp
loopne
dec
in
stos
cld
or
insb
or
mov
sbb
cmpsl
or
movsb
rolb
jge
mov
ffree
popf
clc
mov
mov
fwait
mov
xchg
ror
lcall
cmpsb
inc
cli
pushf
push
jno
rcrb
jge
daa
xchg
jns
rcrb
xor
das
pop
andb
cmp
mov
or
lcall
mov
int3
les
sub
test
imul
lods
aam
gs
outsb
stos
rcll
adc
and
inc
sub
or
into
push
je
mov
roll
adc
mov
popf
cwtl
sbb
jnp
gs
pop
pop
das
inc
scas
pop
dec
addr16
pop
sti
push
cwtl
inc
mov
sub
std
mov
xlat
je
int
das
mov
sbb
lret
clc
cs
in
pop
or
leave
out
add
outsl
or
xchg
iret
jecxz
jno
mov
ror
mov
sub
loope
sub
cmp
inc
icebp
push
lods
sbb
ret
ljmp
jnp
in
inc
scas
fcoms
rcrb
xchg
and
bound
inc
mov
in
fsubl
fs
add
sbb
or
daa
mov
stos
dec
or
mov
jecxz
movsl
dec
jg
xor
flds
adcl
pop
and
idivb
subb
mov
mov
pop
je
movsl
add
call
adc
out
and
pop
push
push
pop
inc
scas
adc
andl
inc
inc
lods
lret
or
daa
in
add
fcmovnbe
test
mov
iret
push
push
lcall
sub
adc
mov
lods
mov
mov
popf
int
mov
test
arpl
mov
mov
inc
stos
mov
mov
into
pcmpeqw
xchg
push
pusha
jne
lret
sti
sbb
stc
lea
jle
into
popa
dec
dec
adcb
sti
into
aam
dec
into
psrlw
lock
push
lods
test
std
out
out
out
dec
scas
movb
ficompl
out
cld
dec
pop
inc
ffree
out
imul
xchg
ljmp
mov
sub
mov
dec
scas
mov
mov
int
fwait
ja
ds
pop
cmpsl
aad
iret
inc
push
pop
pop
mov
mov
test
dec
sbb
mov
pop
adc
and
fcmovu
push
adc
dec
and
jns
xchg
outsb
mov
sub
std
aam
jg
leave
mov
ja
inc
sbb
stos
stos
jbe
xor
movsl
adc
cmpb
adcl
test
xor
push
pop
lret
add
cmp
mov
cmp
cmp
lods
repz
cmp
cmp
fwait
aam
loope
aas
push
pop
and
xlat
adc
pop
int
iret
jmp
sub
jp
mov
test
jns
and
sbbl
add
mov
dec
in
mov
or
lahf
mov
or
or
fiaddl
lods
cltd
mov
xor
dec
mov
or
stos
mov
loop
add
xchg
cmp
ja
jb
add
mov
mov
sub
and
pusha
push
out
pop
insl
xchg
xor
sti
stc
ds
and
cmp
outsl
into
adc
sub
ja
arpl
aam
ror
inc
jmp
ficomps
cmp
sub
sti
jne
stos
pop
dec
mov
scas
push
add
in
sbb
ss
adc
sub
adc
sarb
xchg
mov
sub
fnstcw
mov
movsb
jnp
jmp
push
dec
or
or
and
out
and
bound
dec
adc
mov
repnz
lods
mov
lahf
sbb
les
dec
in
pop
cmp
mov
rclb
mov
sbb
sub
data16
loope
fnstsw
rorb
inc
cmc
clc
stc
loope
and
xor
mov
sbb
or
push
xchg
mov
scas
xor
adc
sahf
pop
aam
add
dec
shlb
jmp
sub
fstp
mov
pop
sbb
dec
or
pop
jo
jno
inc
jbe
jns
dec
dec
hlt
inc
mov
mov
test
cmp
sbb
add
in
fsubrs
mov
pop
mov
test
xchg
in
jns
xor
sbb
xor
iret
sub
cs
and
ds
cmc
scas
and
push
or
fldt
sub
insb
in
lret
lds
add
mov
push
in
lds
shll
or
lret
insl
xchg
xchg
add
mov
pmulhw
mov
xchg
sbb
pop
push
add
inc
jmp
nop
daa
sbb
js
and
int
roll
sbb
xchg
fcomp
inc
mov
dec
icebp
rcrl
and
push
xchg
pop
pop
xchg
jb
xchg
add
lods
cli
insb
mov
jle
out
sub
xchg
mov
inc
adc
push
xchg
popf
aad
jnp
lret
jg
insl
es
sub
mov
and
dec
lret
inc
xlat
outsb
in
lahf
imul
push
cmp
push
mov
xor
lcall
addr16
es
sub
sub
mov
push
les
add
or
std
mov
lds
rolb
pop
ret
ret
or
add
aad
jle
push
in
push
cwtl
out
mov
lods
sbb
push
sbb
xor
lods
arpl
dec
add
jp
xor
in
lock
mov
xor
pushf
daa
in
xchg
add
pop
add
minps
in
mov
lock
jns
add
cli
mov
insl
xchg
lods
xchg
in
ja
sti
xlat
nop
test
mov
jmp
xorb
and
jle
mov
mov
lock
rolb
enter
test
adc
sbb
and
rclb
xchg
es
dec
xchg
push
jns
mov
xchg
jl
sub
test
push
xor
xor
push
lret
xchg
pop
adc
out
frndint
cmpsl
jmp
push
adc
enter
and
adc
or
lret
rorl
mov
mov
lock
clc
es
inc
out
std
and
ja
mov
es
mov
les
adc
adc
rolb
lods
lret
maskmovq
divl
les
mov
outsb
and
jns
or
inc
stos
mov
jle
jne
xlat
ss
jnp
sbb
ja
js
xchg
push
cltd
incb
push
and
mov
scas
testw
lcall
pop
das
sti
adc
push
cmp
sbb
test
cmp
pop
mov
sahf
and
fstps
adc
add
xchg
das
cwtl
jne
mov
rcl
int3
dec
push
sbb
lods
mov
sub
aas
test
cmpsl
test
mov
adc
rcr
jb
dec
jecxz
and
ja
daa
daa
pop
lods
inc
inc
mov
out
mov
xchg
cld
push
jle
jbe
dec
sbbl
je
cmpsl
in
int
push
icebp
ret
mov
lock
mov
mov
mov
cmp
icebp
nop
cmp
xchg
jns
xchg
fwait
stc
sti
outsl
jp
dec
in
mov
ja
andl
movlps
in
push
fstpl
sti
xchg
imul
ss
inc
mov
mov
inc
inc
xor
jg
clc
bound
sub
fnstcw
dec
pop
movsb
sub
daa
sub
mov
lret
mov
add
addr16
or
sbb
loop
xchg
data16
adc
sub
out
add
jo
movsb
sub
mov
sub
jp
push
push
xchg
imul
pop
mov
cmp
push
mov
lcall
in
sub
adc
lods
sub
insb
shlb
mov
xchg
xchg
push
push
sub
rcrl
push
sbb
mov
sub
icebp
cmp
push
cmp
xchg
push
mov
ja
jle
cli
rol
sti
adc
sub
adc
pop
mov
subl
ret
jecxz
xlat
and
mov
push
pop
and
daa
mov
sti
pop
jnp
mov
add
sub
inc
and
mov
jle
movsb
dec
pop
jg
cmp
jno
or
cmpsb
cmp
std
fildll
xchg
fdiv
test
mov
inc
xchg
scas
sbb
cmpsb
hlt
std
xchg
jae
cmp
or
mov
add
movl
cld
jle
cli
shll
js
cwtl
sbb
es
cmp
or
fs
imull
xchg
mov
sti
cmp
add
gs
xor
imul
cmc
test
leave
pop
jns
loop
mov
in
pop
mov
mov
mov
push
mov
or
movsb
jae
fldenv
or
mov
leave
inc
stc
dec
add
popa
push
sub
ljmp
mov
dec
dec
pushf
test
shr
cmpsb
sbb
outsl
push
sbb
repz
and
cmpl
cmp
fwait
add
adc
cmpsl
and
into
nop
xchg
cmp
es
js
inc
enter
adc
ja
out
ss
sbb
mov
mov
cmc
test
jg
push
cmp
lret
jmp
in
pop
cmp
movsb
popf
jo
jbe
ljmp
test
cltd
sarl
lret
daa
fidivl
in
jbe
negl
push
jge
pop
or
pop
push
mov
xor
dec
and
mov
loope
in
xor
daa
test
xchg
shrb
pop
xorb
cwtl
jle
push
cwtl
cli
sbb
loope
rorl
popa
sbb
or
push
scas
dec
repnz
push
xchg
dec
cmp
or
es
daa
pop
inc
test
add
std
fbld
clc
fldcw
xchg
mov
dec
hlt
and
imul
cmp
pop
mov
fistpl
dec
sbb
outsb
sbb
es
and
test
imul
call
sarb
inc
jp
test
cld
aas
xor
loopne
push
out
sbb
testb
cmp
push
scas
out
insl
mov
pop
or
test
out
into
stos
mov
test
lret
sbb
adc
xor
sub
sahf
mov
sub
stc
not
loope
push
xlat
addr16
xchg
xchg
in
lea
xchg
mov
or
inc
jb
mov
test
pusha
or
cmc
and
cmp
jp
mov
scas
add
ret
test
dec
clc
sti
push
cmp
pop
aam
fsubr
pop
call
jns
sbb
or
flds
cli
and
mov
jnp
sbb
in
les
int3
aam
faddl
cs
fld
addb
push
adc
frstor
rcll
in
decb
ret
mov
xor
test
or
xchg
adc
dec
sbb
fisttpl
addr16
sub
lea
sbb
call
inc
test
imul
add
mov
cs
nop
repz
xor
enter
out
pushf
stos
cmp
ja
add
sbb
mov
scas
mov
push
rclb
pop
test
fists
ja
mov
dec
rclb
inc
jp
sti
jmp
les
repz
in
addr16
test
xor
lahf
inc
je
inc
cmp
shl
or
jecxz
mov
and
lods
in
push
inc
xor
mov
repnz
and
mov
imul
icebp
dec
sbb
aam
ljmp
jno
pop
adc
dec
cmpsb
out
cld
dec
inc
lock
mov
pop
jge
xor
sahf
cmp
lcall
shl
jg
pop
jl
push
add
xchg
push
xor
shll
lock
loope
and
enter
addr16
sub
cltd
cmp
test
fwait
add
cmpsb
lahf
rcrl
adc
jae
mov
xchg
fnsave
xchg
ja
push
cwtl
fs
mov
out
sub
imul
cmp
xor
dec
push
shlb
jbe
pop
lock
pusha
andb
push
ss
add
dec
popf
cmpsb
loop
jno
cmp
jbe
mov
push
inc
repnz
adc
sahf
aam
xor
pop
ja
add
hlt
int3
imul
push
in
push
push
stos
ljmp
push
inc
jl
aam
push
sub
push
sub
dec
cmp
mov
outsb
stc
out
ficomps
xchg
mov
lahf
push
stos
lcall
mov
inc
dec
test
or
nop
popa
loopne
cwtl
roll
outsl
iret
pusha
fdivrs
incb
rcrl
xor
out
jg
ret
pop
adc
shl
push
subl
sbb
add
adc
out
shrl
insl
xlat
loopne
mov
jbe
adc
movsl
lret
inc
mov
dec
xor
in
add
test
lods
cwtl
mov
je
std
mov
nop
cmp
out
sub
loopne
repz
add
dec
xchg
cmpl
lahf
aaa
push
stos
lods
in
test
or
dec
push
xchg
xchg
sub
inc
inc
sbb
or
jecxz
adc
repnz
ror
xor
aaa
shr
nop
lds
pop
sbb
je,pt
xor
jg
dec
pop
add
push
out
nop
xor
pop
inc
hlt
js
fsubs
ds
repz
or
mov
inc
jb
imull
cmp
add
sub
in
dec
mov
mov
fdiv
jbe
pop
rcrl
sbb
cmp
inc
mov
enter
enter
iret
sbb
pop
fld1
xchg
or
ljmp
ds
out
push
mov
jo
xlat
push
pop
ljmp
out
jge
decl
cli
add
sbb
inc
sbb
jmp
es
addr16
jae
fcompl
lret
add
push
scas
xchg
jbe
mov
add
lds
das
sahf
push
pusha
and
dec
inc
icebp
cs
mov
mov
outsb
push
std
clc
stos
and
test
mov
leave
pop
stc
pop
dec
add
addl
ss
js
call
mov
mov
jne
out
imul
mov
dec
fcomps
in
mov
mov
and
or
inc
fnstsw
mov
loop
xor
js
xorb
lea
jno
popa
jae
bound
inc
inc
repnz
stos
sbb
imul
sub
dec
sbb
sub
push
lahf
cld
sarl
enter
out
sbbb
lahf
pushf
sub
xchg
jbe
shll
mov
mov
push
dec
loopne
nop
push
negb
sbb
jno
inc
aad
ss
push
pop
mov
insb
aad
dec
jns
add
cmc
scas
hlt
adc
mov
lock
cmc
icebp
icebp
out
fs
inc
scas
rcrb
lahf
mov
cmp
mov
pusha
rorb
test
or
std
xor
jo
or
jge
loop
pop
lret
out
sahf
mov
cli
stos
enter
sahf
xchg
add
aam
movsb
lds
in
in
mov
lret
push
push
xchg
jo
mov
lahf
mov
shrl
ljmp
mov
inc
push
adc
inc
cmp
fcoml
xor
adc
cli
inc
mov
jmp
inc
pop
mov
test
push
dec
test
bound
add
mov
je
xlat
ret
fisttpl
gs
push
jbe
xchg
aaa
stos
mov
adc
push
rcl
sub
aam
test
fsubl
mov
shl
fsubrl
int
sbb
pop
sub
xchg
int3
dec
push
loopne
into
fwait
int
gs
pushf
in
jle
fistps
mov
out
push
mov
add
shrl
lsl
xchg
popf
push
fidivrl
sub
and
push
push
aad
ja
cmp
lea
call
ret
mov
jno
call
adc
je
gs
xchg
push
lea
fwait
adcl
pop
or
mov
imul
imul
stc
call
imul
lock
jge
push
mov
xchg
test
jbe
sbb
and
ja
out
jg
cwtl
stos
cwtl
or
pop
pop
dec
dec
push
sbb
pop
stc
ror
sbb
inc
repz
jne
jae
call
dec
popa
adcb
xorb
shrl
adc
ja
repz
adc
rcl
cld
sahf
mov
test
inc
fwait
sub
mov
inc
mov
pop
inc
dec
arpl
test
stos
cmp
and
test
mov
fbstp
sub
mov
push
mov
lea
inc
dec
jecxz
into
mov
iret
les
adc
xchg
xchg
lock
add
pushf
repnz
push
xchg
dec
adc
rcll
sbb
mov
push
ljmp
add
lock
les
xchg
push
aas
in
sbb
add
dec
fmulp
pop
sti
cmp
add
or
cs
or
repz
hlt
xchg
sbb
mov
dec
push
and
mov
or
fs
pop
mov
lock
xor
push
mov
or
or
adc
sbb
lock
pop
xor
xor
adc
sbb
mov
les
flds
lret
mov
popl
mov
mov
ret
ja
int
xchg
repnz
das
mov
ror
sbb
cmp
outsb
xor
scas
lea
mov
or
loop
pushf
xor
mov
cmp
add
xchg
mov
add
in
jecxz
out
in
shll
mov
sub
cli
push
xor
dec
lock
addr16
mov
xorb
inc
ret
or
jl
out
popa
mov
cmp
das
ret
cltd
fadds
test
in
je
push
in
push
cs
jmp
into
std
push
ss
aaa
nop
in
push
push
scas
cmc
jp
stos
loop
inc
call
mov
iret
and
xor
push
es
shll
sub
adc
cmp
pop
jno
fcoml
push
mov
incl
subb
movsb
and
xor
scas
fisubrs
fisubs
cmp
dec
into
pop
js
lret
loopne
ja
aas
sub
dec
mov
xchg
xchg
pushf
mov
mov
popa
jl
jns
outsb
pop
jno
jl
fidivrs
xchg
mov
daa
mov
dec
lahf
xor
ja
pop
je
js
add
xchg
shl
ret
jnp
bound
cmp
scas
and
adc
stc
adc
or
jno
outsb
mov
push
gs
pop
in
jl
adc
push
stos
inc
mov
xchg
ja
jo
pop
subl
pop
mov
in
arpl
packsswb
mov
pop
test
cmp
xorb
repz
jg
jecxz
idivl
loopne
arpl
pop
inc
cmp
mov
ffreep
mov
xchg
cmp
das
mov
mov
loope
cmp
dec
and
out
inc
pop
jo
aad
aam
fcmovnbe
jmp
into
or
jge
xorl
pusha
int
in
cld
sub
push
push
pop
shl
dec
fsubrs
mov
mov
stc
jo
xchg
xor
roll
add
dec
xlat
mov
mov
dec
pop
dec
ljmp
lods
rcrl
xchg
xor
add
mov
jmp
add
jb
lret
xchg
data16
jle
sub
xor
adc
inc
jbe
mov
sbb
mov
adc
aam
push
into
cli
fisubl
lcall
aad
mov
insl
pop
lds
aam
add
hlt
or
sbb
mov
lods
jnp
lret
rcrl
and
xchg
push
mov
or
lret
adc
imul
fildl
jnp
and
xor
or
xorb
test
pop
jne
and
ds
push
push
sub
adc
int
mov
fldcw
dec
loope
js
bound
dec
lret
ljmp
lock
pushf
and
jno
add
cwtl
jle
scas
mov
es
adc
loop
rcl
cmp
push
push
into
and
leave
dec
or
add
imulb
scas
in
sbb
and
enter
out
aaa
xlat
int
imul
cmp
int3
push
pop
mov
sbb
andb
out
sahf
mov
pop
imul
xor
hlt
sbb
ror
or
dec
adc
push
aad
in
call
stc
fstpl
sbb
in
cmp
xchg
adc
or
sbb
and
fwait
ljmp
xor
outsl
rcl
int
arpl
xor
std
jo
mov
leave
xchg
cmp
jns
hlt
ss
rcrb
jmp
repnz
decl
mov
orl
decl
mov
loopne
imul
xchg
jg
mov
mov
mov
loopne
clc
sahf
xchg
cmp
inc
scas
aaa
lods
in
insl
sbb
fs
popa
js
rclb
adc
or
shll
adc
dec
cld
gs
xor
outsb
add
popa
and
addr16
imul
loop
xchg
out
jmp
inc
push
sub
adc
shlb
outsb
inc
lods
fidivl
jmp
mov
mov
xchg
out
xchg
sbb
and
outsb
cmp
icebp
jnp
lret
sahf
cld
test
jbe
adc
fwait
inc
jl
pop
arpl
adc
mov
nop
sbb
sar
cmp
push
dec
cmp
in
inc
push
mov
dec
lret
xchg
xchg
in
bnd
adc
inc
mov
in
mov
fldl
fimull
sbb
cmp
lahf
sahf
bound
dec
stos
jp
jmp
push
and
stos
cmpsb
insb
mov
push
inc
jbe
loope
mov
outsb
push
mov
sahf
lods
mov
test
lcall
mov
fldenv
ss
jbe
jns
push
icebp
lahf
jecxz
push
jg
in
out
pop
test
xor
push
lock
or
je
enter
push
push
aam
sub
test
push
mov
mov
xchg
sub
addb
in
loope
popa
mov
push
add
pop
mov
add
push
lock
adc
xor
cmpl
inc
cmc
in
repnz
sub
dec
pop
addr16
lock
sbb
mov
or
gs
and
das
fistps
and
or
int3
sahf
inc
fdivl
dec
insb
icebp
jge
add
in
lret
mov
into
xchg
in
mov
ljmp
pop
push
sub
cmp
sbb
xchg
cltd
mov
insb
jb
pop
mov
mov
test
push
dec
jl
into
and
iret
dec
jo
popa
sub
add
dec
clc
pop
xor
pop
push
inc
xor
push
inc
les
mov
daa
push
add
mov
mul
add
pushf
pusha
sbb
add
xor
xchg
fs
decb
pushf
cwtl
repz
ret
sahf
lods
std
aaa
jno
pop
scas
cmpsb
in
inc
inc
or
dec
pop
mov
shl
inc
or
bound
stos
stc
sub
movsl
ret
jl
or
test
mov
push
es
xchg
or
mov
lahf
outsl
loopne
lcall
mov
loop
add
dec
jecxz
and
cmp
push
push
xchg
add
jae
inc
dec
mov
adc
data16
iret
subb
fiadds
lahf
stos
aad
ss
ficoml
ss
imul
scas
push
movsl
and
ljmp
repnz
add
inc
jmp
push
sbb
adc
leave
pop
fwait
lods
cli
movsl
in
adc
inc
aam
fs
mov
sub
mulb
dec
pushf
cmp
sub
out
pop
inc
inc
test
mulb
and
out
scas
mov
xlat
mov
aaa
lahf
aad
lock
icebp
lea
dec
jp
nop
jnp
ss
fsub
adc
xchg
cltd
nop
pushf
roll
lret
add
jle
bound
mov
sbb
jo
outsb
iret
gs
jb
xchg
mov
adc
arpl
loope
lods
movsl
sub
jo
stc
mov
push
pop
movsl
cmp
pop
int3
sbb
roll
shll
adc
xlat
push
xor
push
adc
xchg
push
loopne
jge
hlt
int
scas
sarb
lret
adc
inc
and
lods
push
mov
sahf
andb
rcrb
lds
rclb
dec
xchg
das
mov
jmp
sub
mov
jecxz
sbb
sub
mov
push
fidivrs
xor
and
sub
dec
fstpl
adc
ret
sbb
sub
sub
push
xor
jge
mov
mov
jle
sti
push
push
sahf
xlat
into
xchg
mov
ficompl
cmp
inc
gs
ss
and
jmp
and
shrl
arpl
adc
daa
jle
xchg
sahf
loope
xchg
xchg
xchg
pop
in
sbb
and
in
andl
lcall
xor
ljmp
fldenv
sbb
dec
movb
and
call
lea
lret
out
or
loop
mov
cld
add
push
push
in
in
jno
decb
std
push
cmpsl
sti
mov
xchg
mov
xchg
fcompl
or
outsl
loope
addl
xchg
jns
and
inc
ret
stos
sub
pop
scas
idivb
jle
mov
cvtps2pd
dec
outsl
push
push
movups
adc
cmpsl
je
add
xlat
jge
pusha
mov
fadds
movl
test
xor
pop
popa
add
dec
shrl
xor
shr
inc
movsl
jp
jo
test
mov
icebp
ret
mov
jno
gs
lret
and
pop
in
nop
lds
dec
jp
jnp
add
xor
xor
mov
mov
mov
sub
shll
pop
insb
iret
fmul
sub
insl
sub
jae
push
cmp
inc
push
sbb
push
fdivs
addr16
enter
dec
dec
cmp
icebp
lock
push
mov
cmp
mov
testb
or
scas
mov
dec
mov
fisttps
jae
mov
cmp
cld
int3
shl
test
fistpll
std
ret
mov
dec
pop
dec
test
jns
ficompl
gs
dec
popa
sahf
fs
mov
mov
cmp
sub
mov
lods
mov
in
or
sub
int3
push
rcll
in
sub
push
int3
sarl
js
insb
sub
pop
fldcw
add
dec
jae
or
movsb
push
aaa
inc
cmpsb
int3
test
sahf
mov
sub
pushf
push
sbb
enter
mov
jmp
das
inc
sti
out
notb
jbe
in
jae
rcl
je
stc
adc
fwait
or
xchg
pop
mov
push
scas
and
cmpsb
mov
aam
xor
aas
imul
mov
dec
pop
xchg
test
into
fnstcw
rorb
jns,pn
loope
aas
das
jmp
in
xchg
subl
je
insl
icebp
lret
mov
out
xor
mov
arpl
cltd
sahf
or
add
push
push
and
jae
lret
rcrl
cmp
jne
mov
jmp
and
adc
xchg
stos
or
mov
mov
lahf
test
arpl
rolb
xchg
fidivrs
out
sbb
pop
icebp
mov
mov
xchg
mov
sub
rolb
insl
mov
test
and
shll
loop
daa
int
jo
fisubs
nop
pop
popa
imul
adc
dec
mov
imul
hlt
jle
mov
push
int3
movsb
mov
cli
adc
and
movsl
jl
aas
aam
xchg
ret
mov
divl
pop
jecxz
mov
add
xorl
cmpsb
lret
mov
rcrb
cmp
or
bound
sbb
rcrb
mov
inc
xchg
or
cltd
and
insl
xchg
mov
jp
push
adc
jg
mov
out
enter
and
shl
shrl
repnz
and
inc
test
scas
dec
inc
xchg
sub
and
fbld
adc
imul
or
stc
insl
push
dec
inc
repnz
xchg
pop
or
or
sbb
rorb
mov
repz
push
lods
iret
jno
aaa
pop
push
push
js
data16
scas
push
mov
lahf
xchg
ja
or
push
inc
mov
mov
aam
jne
outsb
outsb
data16
lds
fs
xchg
rcrb
pop
shrb
rorb
sub
or
mov
insb
aas
pop
sbb
xchg
cmp
insb
add
mov
fstl
dec
inc
fildll
shll
inc
fstpt
push
sbb
mov
in
fdivp
or
cld
push
sbb
add
jg
add
mov
xor
andl
xchg
sub
xchg
push
mov
repnz
cmpl
stc
in
xor
in
jmp
jmp
xor
adc
popa
inc
xchg
shr
cmc
lret
int
xor
shlb
pop
cmp
out
in
rcl
xchg
pop
and
or
and
cli
adc
mov
pop
ret
repnz
cltd
in
or
and
je
inc
lahf
push
cwtl
inc
sbb
incb
mov
pop
fmuls
and
roll
lcall
push
call
adc
shl
scas
adcb
aaa
ret
mov
neg
xor
add
ret
lret
adc
nop
xchg
xchg
loop
inc
sbbb
xor
mov
out
add
adc
out
ret
ret
rcl
out
call
dec
rorl
mov
mov
sti
outsb
jg
xlat
jp
mov
cmc
pop
loopne
xchg
sbb
push
cmp
pop
outsl
jp
jb
insl
jb
jp
scas
in
ret
fsubrp
xorl
jne
mov
push
mov
jne
push
lds
enter
mov
jb
stos
fs
xchg
xchg
sub
lret
mov
mov
or
jne
dec
loop
xlat
pmuludq
fidivrs
xchg
movsb
aam
xchg
repnz
movsl
xor
je
mov
nop
dec
push
inc
mov
dec
fmull
xchg
adc
jae
pop
mov
mov
add
mov
mov
call
cmpsb
jp
adc
inc
shl
cmpsb
aas
fiadds
loope
adc
aam
push
push
adcb
les
inc
dec
cmp
loop
and
fcmovb
ljmp
push
push
cmp
inc
push
cli
xchg
push
pop
xchg
rorl
sub
iret
xchg
cli
movsb
ljmp
adc
inc
cmc
rcrb
jns
mov
inc
mov
jle
ret
inc
sub
daa
idivl
hlt
inc
mov
in
stos
xchg
jnp
stc
mov
aad
cs
rcll
jmp
jo
aas
xor
mov
rcr
inc
je
insl
and
jg
sbbl
arpl
mov
lret
rcl
clc
push
fidivrs
dec
dec
aas
pop
jo
pop
dec
addr16
or
push
sbb
int
pop
subl
jl
jp
into
stos
mov
add
popf
xlat
inc
lods
jmp
daa
jge
mov
out
or
mov
cltd
push
repnz
js
fimuls
shlb
jb
jecxz
bound
xor
adc
jnp
push
jp
inc
clc
jle
fwait
test
aaa
push
mov
loop
pop
xchg
sbb
mov
orl
punpckhbw
pop
cmpsb
mov
jmp
ret
inc
push
bound
out
shlb
pop
rep
out
mov
mov
xor
jns
jge
dec
xor
sub
mov
jg
cmpsl
mov
jno
sub
sbb
in
test
scas
and
mov
jb
out
inc
cmp
subl
adc
iret
adc
push
nop
sbb
push
popf
pop
pop
push
dec
pop
stos
das
mov
jmp
jns
sbb
pusha
mov
rorl
idivb
loopne
int3
adc
adc
cmp
mov
fs
xlat
scas
push
jg
stos
mov
mov
xchg
and
mov
xor
mov
adc
lods
push
repnz
imul
out
cmp
xchg
adc
adc
and
rolb
inc
jmp
mov
data16
and
pop
and
sbb
fisttpl
stos
adc
js
cmpsb
outsb
outsl
mov
lods
lods
clc
stos
cli
push
enter
inc
xchg
mov
push
or
add
iret
mov
jge
daa
push
iret
mov
mov
call
dec
push
stc
and
mov
mov
orl
popa
pop
inc
dec
sub
xor
icebp
xchg
rcrl
mov
outsl
test
xor
lret
xchg
pop
dec
les
sbb
pop
xlat
jge
lret
mov
mov
fcom
stos
push
std
imul
mov
push
push
mov
mov
mov
sub
adc
mov
mov
and
inc
andb
out
shll
push
push
xchg
test
add
inc
js
cmc
in
dec
mov
mov
insb
insb
seta
push
stos
cli
cwtl
add
mov
mov
fnstcw
lds
push
cmp
lret
add
add
pop
fs
mov
addr16
out
push
push
test
and
mov
arpl
sahf
loopne
scas
or
cmpsb
inc
mov
fcom
int
or
mov
mov
pop
rorb
rcl
shll
push
nop
pop
xorb
cmc
test
cld
xor
and
fildll
js
mov
call
jne
call
sti
leave
sbb
lret
daa
mov
xchg
inc
es
sbb
leave
es
sub
ljmp
or
jnp
outsl
das
mov
sbb
sub
inc
jae
xlat
shll
xchg
mov
mov
les
jge
jns
xor
cltd
into
dec
mov
xor
sub
scas
outsl
mov
push
mov
imul
idiv
ficoml
arpl
xorl
mov
iret
cmpl
mov
adc
mov
in
filds
fdiv
xlat
in
mov
shll
outsl
loopne
adc
push
sar
into
cmpsl
sahf
sahf
or
cmp
fmul
test
xor
jg
into
push
es
mov
dec
fstps
test
outsl
pop
das
divb
jecxz
out
sahf
dec
cwtl
es
pop
clc
add
insb
and
not
cmc
ficompl
sbb
sbb
roll
rcll
mov
jbe
sub
jmp
sbb
sbb
or
sub
scas
dec
or
or
xchg
dec
dec
mov
mov
aas
mov
sahf
sub
pop
movsb
stos
sbb
cmovp
fs
lret
xchg
in
int3
inc
dec
dec
repz
sub
pop
sub
mov
test
mov
les
aam
cli
ds
sbbl
aad
bound
mov
ret
daa
in
pop
mov
ljmp
xor
lock
cmpsb
dec
iret
inc
sub
add
sbb
sub
add
or
in
xchg
cli
sar
insb
lret
popf
and
aam
lock
fldl
repz
orl
data16
jbe
daa
xchg
mov
dec
push
mov
test
scas
mov
or
popf
and
jmp
por
and
fdivrs
xor
push
fwait
sub
ljmp
xchg
add
pop
mov
adc
outsl
or
repnz
ror
or
adc
stos
dec
orl
ss
mov
sysexit
loop
lods
inc
sysenter
dec
ljmp
mov
mov
mov
fcomi
imul
xchg
popf
jb
cmp
add
xchg
mov
xor
cmp
out
aam
adc
xchg
push
jmp
mov
inc
out
mov
mov
addr16
xor
stc
ret
adc
jl
sti
in
cmp
pushf
insl
in
jns
lock
rorb
ljmp
dec
movsb
movsl
mov
mov
adc
cs
jbe
outsb
clc
push
ret
dec
sbb
jg
cmp
jae
lcall
ret
popf
adcb
sub
test
jns
xor
jno
adc
stos
cltd
aaa
es
sub
idivl
jo
test
or
inc
cmp
popf
push
xor
mov
pop
mov
or
aam
inc
andl
push
arpl
insl
sahf
dec
push
jbe
pop
shlb
repz
loope
xlat
pop
in
faddl
aam
loopne
mov
dec
jmp
sub
out
jbe
or
fwait
pusha
adc
adc
shlb
mov
jnp
ja
shrb
stos
mov
add
testl
call
stc
enter
test
je
sbb
pop
mov
cmp
outsl
xchg
roll
xor
in
mov
mov
pop
sub
mov
jmp
or
ret
test
ja
out
jmp
aad
adc
fwait
xor
fs
lahf
push
int3
sti
push
and
es
in
loope
cmp
pop
je
adc
je
fcompl
xor
fmull
ja
xlat
lds
in
std
xchg
popf
les
adc
pop
or
rol
sub
mov
xorl
sbb
adc
sbb
jle
cmp
pop
inc
call
sub
pop
mov
call
pop
repz
lahf
rcll
popf
mov
clc
aas
push
cmp
std
xchg
push
mov
js
jo
pop
adc
cmp
pop
jne
dec
sub
hlt
into
fstl
pusha
jno
sub
add
cmpsl
icebp
mov
lahf
stc
or
mov
and
addr16
sti
sbb
fldt
push
sub
push
jmp
pushaw
inc
xlat
nop
sbb
push
fisubrs
arpl
in
dec
adc
iret
pop
cmp
jp
std
rcrl
xchg
jo
pusha
and
popl
lahf
bnd
jb
shll
jns
imul
scas
ss
pop
mov
sbb
and
jecxz
mov
dec
add
in
js
cmp
pop
push
and
test
shrl
and
loop
pop
icebp
push
sub
sub
repnz
dec
repz
jb
loopne
out
and
js
push
in
into
loopne
stos
mov
push
pop
cmp
scas
push
gs
inc
xchg
mov
mov
mov
and
and
addl
test
and
andb
push
arpl
in
aad
in
dec
mov
clc
rcr
adc
cmp
mov
ret
inc
xchg
dec
mov
pushf
add
push
je
xorb
pop
fwait
push
iret
sbb
xor
and
cmp
or
adc
insl
or
xchg
dec
or
dec
loopne
dec
jge
sub
pop
jne
pop
inc
das
mov
aas
movaps
aam
cwtl
outsl
xchg
cmp
shll
or
insl
mov
inc
xchg
dec
dec
pop
mov
sub
dec
in
dec
shl
shrl
movsb
shr
push
lret
adc
xchg
sahf
mov
stos
mov
or
aaa
decb
mov
jg
rcll
or
jmp
fmull
jmp
cs
mov
and
push
aad
or
mov
das
dec
scas
imul
out
addl
movsb
sbb
inc
xor
or
mov
dec
jo
add
lret
int3
add
fs
aas
push
aam
jns
es
sbb
xor
outsl
push
fwait
out
cld
jle
pusha
daa
shll
fcmovnb
jmp
sbb
inc
vfnmadd132ss
xchg
std
rcll
inc
and
adc
push
orb
mov
mov
mov
jae
frstor
outsb
cs
rorb
divl
out
pop
ficomps
sub
cs
add
shrb
gs
sbb
and
sub
ljmp
mov
mov
push
in
fisttps
pop
inc
sub
leave
mov
stos
test
lock
int3
xchg
push
jge
sub
or
lret
jb
push
rolb
pop
mov
loope
pop
sub
jno
mov
add
inc
leave
fsubr
fs
mov
cmp
scas
hlt
push
dec
setle
in
or
pop
mov
movsl
rcrl
lret
mov
inc
gs
mov
aam
xchg
lods
jnp
push
sbbb
cmp
adc
les
push
push
inc
or
sbb
out
push
inc
scas
pop
enter
xor
loop
imul
ja
xchg
mov
sub
int3
mov
cmp
push
inc
sbbb
jae
loop
sbbl
xchg
fcomp
aaa
xchg
cltd
adc
aaa
jns
push
pop
jne
xchg
int3
xor
inc
sahf
xor
fmul
mov
ljmp
fwait
inc
shrb
jno
jne
insl
push
sub
sub
aas
and
jb
mov
out
and
cmp
jae
insl
jecxz
lods
push
sbb
pusha
sbb
push
cs
lret
and
hlt
popa
popa
and
mov
sub
repnz
mov
dec
fstpt
add
sub
mov
dec
insl
icebp
aas
imul
cmp
push
lods
xor
dec
lods
clc
dec
push
xchg
xchg
loope
inc
movsb
scas
and
mov
inc
xor
out
stos
shr
aad
pop
and
push
rcrb
imul
into
stc
xchg
jbe
push
int
sbb
push
sbb
subb
dec
sbb
imul
cs
xchg
push
jg
sbb
stos
push
mov
loopne
xchg
mov
out
adc
hlt
rorl
dec
push
pop
cld
and
fidivrl
inc
or
pop
inc
or
clc
dec
mov
outsb
mov
cmp
adc
jns
insl
dec
inc
in
jecxz
pop
sbb
sti
xchg
test
add
cs
push
es
shll
jno
cld
jecxz
aas
mov
idivl
mov
data16
fwait
or
shrb
scas
aas
pop
mov
loopne
mov
sti
ja
ds
mov
cmp
jbe
fnstenv
xlat
setno
test
pop
pop
pop
jo
lahf
cmp
inc
addr16
stos
jecxz
mov
mov
xor
pushfw
mov
insl
stos
dec
adc
gs
cmc
add
pop
mov
xchg
xor
pop
mov
rclb
mov
dec
mov
insb
xchg
loope
ret
data16
jo
out
sub
in
loope
lahf
xlat
outsb
fcoml
pop
idivl
aam
cmp
scas
sub
adc
or
movsl
out
loopne
add
out
leave
and
in
cmp
lret
mov
mov
pop
dec
or
jg
pop
shll
xchg
xor
add
lock
mov
mov
mov
xor
push
mov
shll
mov
out
mov
in
imul
or
stos
add
stos
sarl
xchg
adc
and
mov
mov
jns
std
popa
jmp
pop
pop
sti
aas
ret
ljmp
rcl
js
call
out
and
dec
mov
leave
jb
xlat
outsl
fadd
xchg
sbb
add
push
jge
scas
loop
scas
and
test
push
mov
xor
clc
lds
sbb
outsb
inc
aaa
lods
or
ret
sub
xchg
pop
insl
subl
ret
data16
sbb
jo
bound
in
dec
push
add
pop
jmp
test
sbb
in
je
dec
sbb
shlb
roll
aam
les
mov
lds
sbb
jbe
mov
dec
mov
sub
sahf
jbe
lea
sub
jb
addr16
xchg
jp
cmp
jno
test
xchg
out
xchg
rorl
stos
mov
dec
movsb
nop
insl
out
sahf
mov
push
cmp
cmp
mov
test
push
roll
xchg
pop
and
sub
mov
repz
xor
loope
out
pop
inc
xor
jle
mov
add
add
enter
adc
hlt
pop
mov
cmp
mov
femms
pop
adc
adc
cmc
xor
cmp
inc
push
in
xor
in
movsl
lds
adcl
dec
invd
popf
inc
sbbl
xchg
out
mov
test
xchg
mov
in
dec
in
cld
cmpsb
and
pushf
out
pop
orl
sub
das
aam
xor
movsl
lea
dec
mov
adc
mov
aaa
popa
inc
lret
repnz
xorl
mov
lds
dec
or
scas
ret
into
ret
das
les
mov
sub
cmp
jg
inc
jbe
repz
lods
xor
das
push
sbb
shr
or
addr16
mov
lret
or
icebp
inc
lds
inc
fildl
inc
xor
mov
pop
cltd
push
push
jne
adc
das
movsb
xor
push
adc
loop
daa
and
add
jb
out
test
pusha
sbb
mov
sbb
mov
push
sbbb
xor
adc
hlt
xchg
mov
xor
int
jnp
xor
ja
gs
dec
sbb
lock
mov
xor
mov
dec
test
jge
or
and
gs
push
rclb
jecxz
rol
data16
push
jecxz
cmc
dec
out
and
sub
pop
ja
daa
inc
cmp
and
add
and
jge
sbb
mov
fstl
xor
cld
in
cmp
push
or
call
mov
add
lock
mov
loop
test
aam
in
inc
data16
loopne
jns
pop
sub
leave
push
in
int
jns,pt
xchg
sbb
sti
stc
xchg
sbb
mov
test
iret
das
sbb
aad
in
fs
test
ljmp
lods
cmp
xchg
dec
js
stc
mov
pop
in
lcall
adc
mov
jl
xlat
out
jmp
mov
pop
add
dec
cmp
jbe
add
cwtl
in
repz
xor
jns
jecxz
daa
add
mov
xchg
jmp
jne
iret
test
mov
mov
cmpsb
movsl
gs
jg
jge
push
mov
inc
mov
add
sbb
shlb
ja
aas
adc
push
sahf
js
pop
pop
dec
cmp
dec
shrb
fwait
mov
and
xchg
xchg
xchg
or
dec
cmp
fdivrs
pop
cwtl
xchg
mov
or
negb
test
std
test
push
xor
pushaw
jno
adc
lahf
ror
in
cmp
daa
sarl
mov
mov
stos
cmp
jne
leave
insl
xor
scas
aad
in
sahf
dec
clc
out
or
out
loopne
xlat
lods
inc
ficoml
add
loop
inc
jae
mov
sti
push
stc
scas
pop
cld
pop
into
out
daa
sub
cmpsl
jns
fimuls
call
ret
cmpsl
call
lea
andb
dec
push
sarb
pop
adc
das
dec
enter
pop
dec
popf
loopne
cmp
adc
or
cmp
add
aam
push
icebp
fsubs
mov
jle,pn
pop
inc
mov
js
pop
into
call
adc
lods
iret
fs
adc
sub
rcll
test
add
and
mov
cs
les
cmp
sub
mov
cmc
pop
dec
sub
sub
mov
nop
ret
enter
pusha
test
mov
lahf
add
inc
push
daa
pop
inc
cmpsl
dec
je,pt
mov
mov
adc
ret
pop
and
fdiv
imul
std
leave
lret
in
fsts
pop
ret
cltd
add
xchg
lret
test
ret
pop
jno
nop
jns,pt
mov
pop
es
insb
push
int3
add
mov
popf
or
in
and
cmp
inc
xchg
mov
fistpl
cmpsl
lods
mov
adc
in
aas
movsl
push
hlt
sub
shr
mov
jne
mov
sbb
inc
xchg
lea
mov
jle
pop
cmpb
xchg
imul
dec
mov
in
lock
and
push
and
hlt
ds
add
cmpsb
daa
mov
cld
inc
dec
cmp
aaa
insb
or
pop
test
int3
lods
jle
or
add
hlt
jmp
loop
pop
in
dec
dec
imul
orl
jle
pop
xchg
aaa
clc
jns
push
leave
clc
cmp
loopne
push
add
cwtl
lods
mov
mov
inc
int3
push
adc
xchg
and
lret
out
cmp
pop
jge
push
cmpb
xchg
mov
fwait
mov
cmp
loop
es
shrl
movsb
inc
or
jmp
loopne
mov
pop
icebp
das
cmp
shll
cltd
jae
fisubl
repnz
push
subl
ret
test
push
out
or
popa
adc
xchg
and
inc
jge
ret
mov
ret
cmp
and
push
daa
fxch
out
das
arpl
movsb
pop
flds
mov
fbld
cmp
mov
adc
jp
adc
negb
jbe
enter
popf
scas
jg
add
cmpsl
push
add
aaa
pop
stos
lock
xor
xor
call
or
mov
stos
sub
invd
jno
xchg
xor
xor
loop
mov
mov
jp
stc
test
xor
dec
rcr
and
ds
test
rcrb
mov
mov
int
aam
xor
test
shr
pop
push
pop
xchg
inc
cwtl
arpl
imul
scas
pusha
jno
mov
int3
jo
push
cmp
inc
clc
ss
aam
dec
test
cmp
or
enter
das
lcall
inc
push
mov
inc
pop
mov
xchg
fstps
inc
test
jle
and
adc
stc
je
jae
pop
into
cmp
lods
fimuls
addr16
aam
and
cmp
roll
and
testb
mov
or
pop
push
mov
and
clc
jne
cmp
aad
pop
lea
xor
xchg
mov
inc
movsl
ds
mov
xchg
in
adc
data16
adc
cmp
pop
xor
cmp
mov
add
push
push
enter
aas
test
fsubr
inc
mov
sbb
out
sbb
xchg
push
stos
mov
jae
mov
cmc
sti
or
clc
or
dec
pop
das
mull
push
inc
dec
lds
sbb
mov
cmpsl
and
jle
imul
ss
stos
das
cmp
cmp
xor
jg
sub
xor
loope
jmp
fucomip
enter
xor
push
ds
pushf
pop
cmp
ret
data16
cmc
fstps
stc
fimuls
cmpxchg
and
push
jecxz
jmp
fcom
ret
mov
in
shll
into
sub
inc
dec
xorl
aaa
pushf
jno
leave
adc
in
jbe
cmp
dec
adc
cld
inc
fildl
int3
xor
ljmp
jns
loop
cmp
lret
iret
mov
ds
lods
cmp
adc
and
add
daa
jp
enter
jo
push
sbb
adc
out
xchg
cmovs
imul
dec
cli
out
in
cmpsb
and
xor
inc
mov
sahf
loopne
xor
outsl
or
adc
jo
pop
add
shll
sbb
insb
nop
add
xchg
test
push
pop
stos
sbb
ds
lods
stc
cmp
xor
pop
xlat
or
loopne
dec
aaa
popa
fidivs
addl
mov
into
inc
xchg
jb
cli
mov
add
xor
les
int
idivl
pop
xor
bound
xor
or
lods
cs
lods
dec
imul
rcrl
push
repnz
xchg
lcall
mov
and
inc
xchg
inc
add
lds
addl
adc
hlt
insl
dec
idivb
int3
dec
mov
leave
sahf
jge
fs
ja
jbe
mov
cld
push
push
sbb
jecxz
mov
sbb
pop
push
pop
aam
scas
pop
or
icebp
jg
adc
and
loope
testl
sbbb
mov
or
enter
add
imul
dec
adc
lahf
setae
mov
nop
scas
clc
rol
jnp
les
scas
xor
leave
xor
aam
pop
inc
jg
cmovne
fsin
fmul
mov
mov
into
stc
sub
pop
inc
jae
or
add
sub
lahf
js
out
jmp
scas
scas
cmpsb
fimull
je
stos
cmp
testb
incb
mov
rorb
dec
jnp
and
mov
in
xchg
mov
leave
xor
test
pop
or
out
mov
xchg
pop
repz
dec
fcoml
cmp
pop
dec
mov
mov
push
and
fs
shlb
adc
addr16
inc
adc
shll
jne
adc
sbb
popa
cmpsl
jnp
cmpsl
mov
sub
xchg
les
or
and
imul
pop
cwtl
shrb
ret
sahf
pop
xchg
or
repnz
out
cmp
in
add
pop
insb
cmp
arpl
fwait
lea
xor
pop
lahf
cli
mov
dec
pop
arpl
add
cmc
std
fcompl
adc
cld
sub
daa
mov
rep
push
in
enter
cmpl
add
in
mov
mov
dec
pushf
cwtl
sti
inc
sti
mov
out
call
adc
ret
xchg
mov
dec
mov
sbb
daa
xlat
jmp
ds
popf
and
xor
jns
bound
jp
mov
jns
pop
push
sar
cltd
cli
sub
stc
sub
inc
add
mov
inc
cltd
or
xor
icebp
push
xchg
xchg
cs
scas
sub
in
dec
cmp
mov
ds
in
ja
les
lock
lods
jb
filds
aas
sub
or
sahf
sahf
inc
jp
rcl
push
jmp
cmp
cmp
push
stos
clc
cmp
cld
pop
xlat
test
scas
repz
movsb
lcall
movsl
shlb
loop
and
scas
bound
jmp
jae
pop
inc
sahf
inc
stos
aas
push
repnz
sbb
sbb
popa
dec
sahf
dec
fstpl
dec
mov
and
push
mov
les
ljmp
inc
mov
scas
pop
pop
or
sti
mov
movsl
xchg
sbb
inc
arpl
loope
push
sub
push
jne
pop
xlat
roll
or
push
loop
cmp
lahf
jl
pushl
lret
rcll
dec
decl
loop
cmc
in
push
imul
dec
sbb
bnd
movsl
stc
jp
das
push
addr16
mov
xchg
mov
pop
movsb
in
cld
mov
xorl
jnp
jmp
je
lods
and
or
fiaddl
sub
sub
cmp
pop
push
pusha
jmp
pop
mov
sub
mov
xchg
pop
pusha
fiaddl
fisttpl
outsl
ret
test
pop
loope
gs
inc
je
and
push
add
adcl
stos
movsb
gs
push
sahf
fwait
add
xor
mov
icebp
inc
adcb
and
mov
dec
xchg
fldenv
pushf
fs
mov
lcall
add
add
jnp
push
jne
popa
mov
iret
mov
test
pop
fiadds
lcall
mov
or
lret
xchg
cmp
or
pop
mov
lds
fsubl
popf
loop
test
push
stos
rcrb
push
sbb
xchg
cli
ret
dec
push
dec
sbb
or
inc
jbe
imul
adc
test
cs
sub
sub
inc
mov
or
jge
mov
sbb
sbb
and
mov
stos
insb
lods
stc
lret
cmpsb
or
pusha
data16
fmulp
dec
bound
xor
inc
or
test
inc
ja
loop
jnp
push
scas
or
mov
jp
push
mov
out
and
lret
push
cmpsb
add
lds
test
xor
aam
je
into
push
jo
jbe
mov
ficoml
xchg
xor
pcmpeqb
fidivrs
insb
jno
pop
sbb
popa
cmp
xchg
rol
cmpsl
sbb
lock
mov
faddl
pop
cld
test
pop
addr16
jno
push
or
dec
mov
lea
loopne,pn
cmc
xor
mov
and
enter
pop
sahf
das
or
or
and
lds
jo
mov
test
cmp
xchg
pop
adc
add
daa
lret
je
pop
pop
int
enter
jl
cmc
aas
mov
jns
jns
in
dec
repz
xchg
and
popa
cmpsl
iret
mov
arpl
mov
dec
adc
and
xor
ja
sub
mov
mov
ret
in
leave
dec
mov
pop
mov
xor
mov
pushf
ds
or
lds
in
fstl
lcall
mov
add
rcrl
subb
outsl
cmp
bound
shrl
js
inc
pushf
popf
cli
push
cmp
int3
test
dec
fs
sub
mov
inc
int
rorl
jb
aas
mov
scas
xchg
mov
add
test
mov
lret
push
cmp
inc
mov
cli
mov
enter
cmp
ficoml
ret
test
hlt
lods
adc
mov
jb
adc
int
ficoml
test
pop
dec
push
cs
es
or
pop
cmpl
idivb
pop
arpl
in
mov
jle
jo
ret
arpl
cmp
insl
jbe
mov
movsb
adc
shrl
lds
pop
sahf
pusha
shl
imul
xor
jo
and
or
jmp
pop
mov
jge
inc
jl
enter
push
imul
add
mov
iret
mov
mov
lods
stc
sub
call
jl
pop
lret
sub
cmp
jbe
out
pop
imulb
cld
jmp
pop
lcall
sub
imul
cs
add
pushf
xchg
out
test
dec
in
adc
push
out
xchg
jmp
sbb
push
push
xchg
adc
mov
imul
jle
sbb
mov
lock
arpl
pop
test
mov
ret
out
mov
pop
ret
jp
or
insb
mov
dec
add
stc
jno
fisubrs
fwait
push
xor
or
sbb
ret
loopne
or
pop
fwait
sub
mov
adc
pause
dec
mov
dec
mov
xor
lea
xchg
icebp
sahf
jg
inc
mov
imul
xor
emms
mov
pop
mov
cmpsl
cmpsb
xor
xchg
iret
imul
andl
arpl
jbe
pop
inc
out
pusha
ja
addl
sbb
fildll
into
loope
lds
ja
xchg
mov
and
popa
das
jmp
cmp
mov
xchg
pop
dec
cmp
and
jle
cmc
dec
fstl
fcomps
mov
lds
dec
adc
pmulhuw
repnz
sar
ret
outsl
sub
loop
test
js
rcrb
lcall
sar
aaa
pop
jno
dec
in
data16
iret
ss
add
stos
pop
ja
push
sarb
jbe
pop
push
rorb
enter
enter
xor
sbb
or
mov
cli
add
dec
mov
or
cmpsb
pusha
pop
push
ficoml
leave
xchg
repz
inc
jp
jl
cmp
sbb
lret
popa
xor
xor
sbb
push
lahf
inc
in
inc
rol
jnp
inc
or
sbb
jb
inc
insl
cs
cli
aam
inc
cmp
in
sahf
testb
dec
scas
div
inc
mov
or
lea
pop
push
gs
jb
cmpsb
push
mov
cmpsl
jnp
add
out
pop
into
dec
dec
mov
xchg
lcall
push
and
cltd
lahf
or
dec
les
aas
push
mov
mov
mov
int3
inc
scas
insb
mov
sub
divl
dec
lds
in
sub
mov
xchg
add
pop
fnstenv
in
push
pop
add
sub
dec
mov
mov
call
out
push
aam
jns
push
aas
loope
ljmp
les
push
dec
inc
sbb
ja
xchg
mov
or
xor
outsl
bound
popl
popa
mov
imul
adc
lods
mov
loop
inc
in
nop
sbb
sarl
xor
gs
leave
or
cs
hlt
xor
jbe
xchg
mov
mov
inc
cli
pop
adc
pop
jnp
lea
incl
das
dec
gs
mov
pop
cmp
leave
sbb
xchg
pop
mov
outsb
scas
aam
cmpsl
push
adc
sbb
or
pop
sbb
clc
mov
repnz
shrl
inc
out
xchg
out
dec
xor
mov
pushf
jge
aaa
fmull
popa
sbb
icebp
lds
xchg
sub
sub
mov
pushf
stos
push
bound
xchg
or
aas
pop
sub
mov
pop
ror
dec
shlb
xchg
push
cmc
sahf
mov
inc
je
lds
sahf
sub
dec
adc
xor
mov
adc
mov
subl
mov
mov
dec
push
adc
xchg
into
fstps
filds
cmp
jnp
stos
shlb
lds
out
fisubl
imul
adcb
xor
ret
loopne
rcll
push
and
dec
scas
lret
mov
adc
repnz
aam
mov
push
aad
jle
bound
sub
bound
sbb
mov
bound
mov
movsl
dec
jnp
xor
sbb
pop
push
and
icebp
gs
les
aas
aam
aas
mov
inc
and
test
int3
cmp
enter
enter
fmul
add
test
jae
cli
add
js
lock
test
sarb
dec
jo
stc
sub
jg
lea
out
xor
jb
repz
add
lods
leave
cmc
adc
mov
push
aad
mov
popa
dec
fnstcw
insb
dec
cld
ret
dec
out
loope
dec
pop
mov
sar
inc
mov
daa
in
add
sahf
lahf
pop
out
xor
stc
pop
cmpsb
push
fdivrs
or
inc
cli
jae
add
icebp
cld
aas
and
mov
jb
push
xchg
in
inc
daa
movsl
jmp
or
adc
mov
les
xor
or
jbe
cmp
in
sti
mov
mov
xor
lea
jnp
mull
cli
adc
ret
pop
imulb
sbb
adcb
sbb
pcmpeqw
xchg
fwait
dec
sub
or
cmp
inc
ljmp
imul
mov
cmpsl
scas
mov
cltd
hlt
in
test
mov
add
mov
loop
xor
popa
cmp
es
or
push
add
stos
pusha
add
in
jl
xchg
test
xor
aaa
add
test
dec
lods
lahf
jge
lock
out
iret
or
int3
xor
lea
test
sbb
nop
lret
out
mov
stc
sahf
ds
test
cmp
pop
aaa
cmc
and
fistpl
ret
adc
orl
mov
std
xchg
dec
xor
xor
cld
imulb
cli
in
out
push
pop
loop
cmp
add
mov
shrb
loope
sub
addb
movsb
fists
jle
push
xchg
and
scas
idivb
mov
ds
mov
add
int3
add
dec
imul
mov
inc
insl
jp
in
in
push
inc
jge
push
pusha
in
and
aam
lcall
xchg
add
mov
push
in
cs
pop
pop
cmp
cmp
js
xor
enter
cs
xchg
repz
mov
xchg
inc
lods
cmp
add
in
aas
hlt
sub
test
xchg
ja
cmp
fldl
sub
shll
int
ljmp
stos
and
dec
xor
jno
push
dec
ds
cli
sub
stc
cmp
aad
push
xor
ljmp
pop
jnp
std
gs
leave
outsl
movsl
pop
xchg
pop
imulb
daa
cmp
stos
pop
lock
mov
rcr
cmp
cld
xchg
into
dec
test
push
mov
movsb
or
push
mov
or
inc
sbb
ljmp
mov
xchg
mov
iret
adc
sti
jmp
xor
jo
xchg
fsubrl
sub
ss
push
pop
mov
cmp
jmp
jg
xor
sbb
ljmp
daa
cmp
push
das
or
sbb
or
push
lret
incb
je
clc
and
lock
outsl
stos
push
pop
mov
lds
sarb
es
add
xchg
mov
cmpsb
fildll
loopne
sbb
push
iret
sub
mov
xor
loop
sbb
ret
and
repz
pop
std
repz
sahf
xchg
arpl
icebp
adc
sarl
adc
jnp
aas
lods
sbb
sbb
pop
sub
add
sub
sub
sti
das
enter
mov
das
and
negl
in
sbb
cld
ret
cmp
mov
jnp
mov
jbe
add
fistpll
xchg
lock
aas
sbb
xor
fcmovnbe
push
pop
xlat
mov
jle
sub
adc
and
das
incb
xchg
sahf
cmpb
mov
sahf
add
jnp
or
out
mov
daa
push
xchg
fmuls
sbb
mov
mov
sub
xor
sbb
adc
ret
jne
pop
test
pop
mov
sbb
adc
xchg
insb
arpl
xor
adc
mov
or
outsb
icebp
fdivl
daa
adc
mov
sti
ret
rorl
mov
jmp
les
rorl
and
jmp
add
aam
lea
aas
lods
ds
inc
push
inc
mov
pop
xchg
shrl
jnp
arpl
dec
daa
dec
jecxz
cld
pop
push
adc
sarl
or
sub
scas
push
pop
sbb
loopne
popf
inc
pop
pop
dec
pop
int
arpl
sub
pushf
and
sub
and
xchg
andb
ret
lds
push
xorl
mov
inc
push
xchg
mov
cmp
sahf
es
jp
mov
push
push
ret
dec
xor
aaa
fldcw
xchg
xchg
mov
jl
cmc
outsl
jg
mov
jo
lds
mov
cmpsb
push
xchg
iret
int
ja
pop
pop
aas
sbb
loope
sbb
or
jp
das
mov
addr16
and
mov
int
shll
insl
inc
stc
fisubl
push
ds
pusha
push
in
shrb
mov
les
mov
mov
cmp
and
pop
out
in
pop
cmc
and
xor
sub
pushf
adc
scas
mov
mulb
adc
xor
out
xchg
gs
aaa
lds
sub
inc
ss
cmp
sbb
stos
mov
push
cmp
inc
int
mov
je
adcl
dec
cmp
bound
rorb
push
pushf
cli
dec
sub
and
orl
addr16
sub
mov
aaa
std
ret
out
cmp
inc
jl
xchg
jle
cmp
stos
push
xchg
in
or
or
pop
sbb
in
add
pop
sbb
out
sbb
xchg
mov
insl
fstp
sbb
lcall
xchg
push
pop
movsl
xor
inc
mov
sub
sbb
sbb
mov
jns
fidivrl
outsl
jne
dec
jg
dec
das
orps
dec
sbb
jnp
inc
mov
adc
mov
xchg
out
mov
je
jo
xor
jmp
add
pop
aas
aam
and
mov
in
jg
outsl
test
xchg
rol
mulb
jo
xor
mov
inc
add
xchg
and
hlt
cmp
outsb
scas
daa
mov
dec
or
ficoms
aaa
sbb
scas
pop
xchg
and
icebp
popa
sub
sahf
pop
lea
sbb
outsl
stc
xor
mov
xor
test
fisubl
call
push
aad
jno
inc
cmp
std
ret
sbbb
inc
imul
mov
add
es
repz
mov
addl
dec
jnp
dec
cmp
pop
cmp
sbb
fildl
dec
mov
jbe
dec
push
jg
mov
outsb
lcall
push
cmp
xchg
sub
pop
sbb
das
xchg
push
push
mov
andl
int
scas
cmpl
enter
mov
sub
das
fbld
xor
mov
sbb
xchg
mov
daa
and
xlat
andb
and
outsb
xchg
cli
iret
sub
pusha
fistpll
xor
mov
inc
cmp
cmp
mov
xor
sub
fimull
jge
push
push
pusha
stos
aad
mov
pop
rcll
mov
pop
mov
in
rcrb
sbb
mov
loope
xchg
jecxz
cs
jne
sbb
jecxz
fidivrl
stos
into
test
into
xor
pop
outsl
pop
mov
cmp
lock
add
les
shlb
xchg
mov
loop
aam
gs
adc
xor
push
mov
pop
aad
or
and
cli
rclb
mov
adc
pusha
shll
shlb
ficoml
sub
jg
into
add
mov
std
bound
lcall
call
and
repz
xlat
jbe
mov
push
sub
int
idivl
mov
fsubs
pop
aam
call
clc
ljmp
icebp
arpl
mov
xchg
call
push
xor
mov
jns
ret
and
jle
sar
std
push
cwtl
lds
aaa
push
cli
insb
lea
insl
pop
fstl
stc
add
xchg
cmc
fs
mov
fcoms
std
jmp
inc
out
test
inc
loop
add
adc
je
cltd
push
adc
call
out
shl
xor
adc
movsb
outsl
dec
jl
xor
and
out
clc
xchg
aam
inc
rdpmc
and
filds
sbb
add
addl
and
enter
add
or
sbbb
ljmp
add
adc
or
lahf
out
add
imul
push
pop
stos
xor
jge
and
jns
lock
jnp
fmulp
dec
dec
add
and
mov
shr
cli
mov
xor
not
icebp
stos
ret
js
roll
mov
xchg
mov
add
insl
roll
jmp
popf
inc
movsb
mov
cmc
add
mov
dec
add
int3
mov
and
adc
pop
cmpsl
adc
stos
inc
in
mov
dec
pop
movsb
popf
jo
push
test
push
lds
scas
push
pop
cmc
sbb
mov
out
test
inc
and
inc
adc
and
frstor
jmp
pop
daa
xchg
andb
jmp
arpl
mov
mov
bound
xchg
int
ds
push
push
je
cli
jb
push
iret
mov
insl
jo
es
lahf
push
dec
mov
std
push
in
dec
pusha
sub
mov
fldl
cmp
out
shrb
cmp
fs
or
sub
xor
mov
and
ds
cmp
sar
sahf
jp
add
call
pop
sub
frstpm(287
in
orb
and
inc
xlat
cmp
aam
in
xor
sbb
xchg
popa
js
pop
or
xor
ficompl
or
notb
adc
dec
pop
test
cld
push
sbb
mov
fldt
das
nop
pop
dec
mov
sub
sahf
and
idivb
cld
jecxz
pusha
dec
jg
mov
idivl
mov
xchg
mov
aad
push
cmp
outsl
or
lods
outsl
sbb
test
ret
int
and
sar
loope
mov
cmc
dec
decl
out
push
test
mov
pop
loop
loopne
in
add
test
jl
ja
in
orl
jp
or
dec
xor
arpl
push
outsb
inc
and
mov
rolb
cmp
mov
out
test
popf
mov
sbb
je
arpl
cmc
mov
je
loop
push
cld
adc
les
vcomisd
jnp
inc
mov
push
jb
xchg
aad
ja
sbb
sbb
stc
popa
mov
sbb
ret
popa
xchg
or
push
in
cmpsl
adc
fidivl
pop
addr16
sub
fs
pop
popf
clc
shll
adc
subb
sbb
and
inc
mov
and
mov
dec
add
hlt
clc
dec
popa
lds
cltd
xor
aas
or
std
pop
or
pop
test
js
xor
fstpt
ljmp
jge
das
bound
push
loop
mov
push
and
inc
repnz
mov
and
mov
dec
incb
fnstsw
inc
or
push
lods
lret
or
dec
ss
push
adc
mov
mov
push
es
dec
movsl
std
std
fsub
rcll
fmull
mov
rcrb
sahf
rolb
mov
ds
lret
add
fwait
decb
imul
pop
mov
pusha
ret
mov
sub
or
adc
sbb
inc
inc
dec
rcl
mov
push
enter
rcrb
push
test
push
cltd
mov
out
outsl
jmp
in
push
inc
aaa
aad
clc
inc
test
dec
lods
imul
pop
mov
enter
mov
push
pop
add
daa
gs
fs
fs
dec
and
cmp
add
inc
mov
ss
ljmp
mov
add
dec
lods
sbb
in
inc
push
sbb
les
scas
loopne
pop
call
mov
xor
test
sub
outsl
mov
dec
jl
scas
sub
sub
fistpl
insl
loope
jge
insl
push
notb
xchg
cmpsb
mov
mov
fbstp
fcmovnbe
shr
int3
cmc
cltd
pop
mov
test
add
data16
aas
int
xchg
je
call
bound
xlat
sub
mov
jecxz
stos
mov
mov
sbb
cld
jb
int
repnz
iret
jnp
push
jp
xor
pop
pop
jmp
int
xchg
call
popf
push
and
add
icebp
fnstsw
stc
or
test
inc
orl
lahf
push
fmulp
xchg
xlat
pushf
pop
leave
rcll
push
or
inc
into
hlt
jbe
or
xor
fmuls
fnstsw
out
dec
stos
mov
pop
std
iret
outsb
inc
es
shrb
mov
mov
cmp
fcmovnbe
jne
fsubs
ficoms
test
push
cs
add
or
lret
movsb
and
mov
mov
in
and
adc
andl
frstor
fdivl
dec
es
xchg
pusha
call
sarl
sbb
addr16
popf
arpl
add
imul
lea
push
sbb
je
xchg
mov
jp
call
out
stos
push
ljmp
pop
fwait
sub
fildll
add
popa
xchg
lahf
inc
nop
adc
inc
mov
sarl
arpl
mov
cmpsb
cmp
xor
add
and
pop
sub
mov
add
lea
xchg
pushf
test
sbb
dec
ljmp
jno
cs
pop
ljmp
mov
or
lahf
sahf
or
or
repnz
popf
sbb
repz
rcrl
fsubrs
icebp
lds
imul
shrb
data16
inc
push
mov
aas
das
fsubs
push
mov
outsl
mov
push
fwait
cmp
enter
in
fwait
out
sbb
mov
adc
dec
gs
push
cwtl
inc
icebp
pop
pop
cltd
xchg
pop
mov
add
lret
scas
mov
xchg
ja
popf
dec
fnstenv
mov
mov
cwtl
aam
xchg
movsl
adc
and
mov
adc
jno
cmpl
sbb
mov
lock
andb
in
icebp
adc
push
into
lret
or
popa
sub
clc
push
loop
or
xor
push
adc
and
jp
push
dec
pop
sub
pop
xchg
lds
cmpsb
xlat
add
add
pushf
mov
and
jne
push
push
pop
inc
ljmp
lods
adc
push
mov
ljmp
sbb
popa
out
test
cmp
mov
cli
sub
stos
lcall
xchg
mov
es
test
packssdw
jnp
cmp
out
jb
fs
sbb
lret
mov
cld
shll
push
add
lahf
leave
fwait
out
push
push
lret
or
jb
cmp
int
or
in
lahf
in
out
xor
xor
sbb
sbb
cmpsb
sbb
push
test
test
int
inc
icebp
push
stos
inc
mov
rorb
mov
arpl
jbe
addr16
arpl
imul
lret
xchg
jp
inc
es
int
dec
jno
and
push
insl
fsubrp
or
xchg
cmp
divb
xlat
test
adc
xorb
aas
les
add
jo
adc
mov
xchg
cmp
xor
and
addr16
test
mov
add
js
imul
shrl
jl
in
fcoms
cli
xchg
mov
push
in
pop
mov
jb
jl
jge
push
into
add
fildll
les
outsl
shrl
xchg
test
adc
lret
and
mov
mov
filds
paddb
out
pop
scas
call
push
outsb
jno
repz
push
les
xchg
sbb
aas
mov
lahf
push
push
push
movsl
stc
into
popf
and
xchg
imulb
push
xor
dec
pushf
mov
xor
mov
push
loope
insl
popf
loope
push
dec
mov
or
dec
sbbl
jno
bound
sub
adc
decl
lcall
xchg
and
pop
push
push
scas
dec
insb
jl
or
rolb
fimuls
jp
rep
in
push
push
xor
jno
pop
cmp
gs
notl
lea
stos
pop
scas
push
and
out
mov
pop
mov
loop
das
push
jp
idivl
dec
mov
lea
sbb
rolb
repz
clc
popa
jge
sub
push
cltd
xlat
jmp
xor
xor
rcr
cli
arpl
sub
lock
dec
or
out
cmp
jbe
push
loope
aaa
test
or
mov
xchg
cmp
xor
adc
mov
pop
rclb
fidivs
mov
orb
jmp
fwait
je
xor
sbb
push
dec
or
sti
mov
pusha
dec
push
ret
idivb
scas
inc
lods
loop
xchg
push
mov
jne
insb
cmp
sbbl
jno
cmp
sbb
xchg
push
les
lds
mov
jle
and
inc
ds
aas
bound
xor
insl
lods
adc
jno
out
filds
jmp
or
or
lock
pop
and
mul
cwtl
mov
shll
jno
inc
scas
inc
cmpsb
lret
je
inc
inc
les
mov
sbb
cmp
fwait
jg
jecxz
mov
mov
out
fnstcw
mov
icebp
stos
push
cwtl
mov
aaa
and
rcr
cmpsl
repnz
xor
cmpsb
push
add
int
pop
cmp
mov
sbb
mov
sti
int
jge
mov
jg
aad
cmpsl
fdivs
hlt
movsb
mov
jge
cmp
repnz
adc
lea
and
lods
mov
adc
xor
jmp
pop
and
or
push
push
movl
and
pop
mov
add
mov
rcrb
lock
xchg
or
sub
push
jno
mov
loop
inc
arpl
aad
aad
jecxz
stos
iret
lcall
jno
loopne
mov
pusha
std
ret
xchg
pop
pop
pop
push
cwtl
mov
ja
lcall
xor
aas
les
je
cld
dec
or
and
xor
das
fisttps
hlt
lahf
mov
loope
repz
jp
jo
jl
jmp
pop
ror
cli
ds
xor
movsl
jg
jg
ffreep
inc
dec
clc
and
ds
mov
cwtl
sarl
mov
inc
sub
jg
fs
fdiv
adc
pop
popf
jecxz
daa
shr
out
icebp
cmp
sbb
cmc
xchg
popcnt
mov
mov
iret
sahf
inc
sbbb
popa
jp
dec
adc
les
or
fcmove
and
xlat
jnp
dec
cwtl
int
or
xor
lcall
adc
clc
adc
xorb
fwait
push
jae
xchg
mov
xchg
shrl
scas
sti
jmp
popa
filds
insb
insl
and
pop
sub
sbb
shrb
adc
adc
lahf
lret
add
pop
repnz
rolb
add
or
xorl
test
jb
rolb
cmp
xchg
call
sbb
xor
int
imul
cmpsl
movsl
sbbl
push
out
rcll
dec
push
mov
and
mov
shl
and
dec
test
mov
out
pop
loop
fisubl
sbb
dec
dec
jge
test
pop
shr
aam
subb
pop
outsb
add
or
sub
add
sbb
ljmp
mov
mov
sti
push
dec
sahf
movsl
fdivs
int3
aad
or
rol
xchg
cmp
insl
dec
jno
out
pop
jno
lret
add
push
pop
popf
imul
insl
add
inc
bound
in
pop
popa
cli
call
mov
fsubrs
out
add
test
js
mov
in
fcmovnb
pop
in
pusha
negb
test
insl
adc
in
or
pop
scas
out
loope
push
and
stos
sbb
xor
test
std
lods
or
ficoms
jo
cmp
lret
insl
jg
lock
ret
cltd
fidivrs
mov
dec
sub
mov
aaa
bound
es
xor
pusha
in
movsb
mov
iret
lods
rorl
stc
loopne
cwtl
cmc
sbb
or
shlb
cld
inc
dec
sbb
cmp
rcll
stos
sti
mov
mov
data16
es
or
sahf
cmpsl
out
or
aam
pop
mov
pop
jne
lds
and
mov
dec
sti
dec
push
outsb
mov
in
dec
mov
call
add
js,pn
mov
inc
jmp
xor
mov
mov
cmc
sti
mov
sar
dec
stos
test
cmp
call
aas
add
jo
jbe
imul
outsb
or
xor
sbbl
mov
js
fmul
cmpsb
repnz
cmp
mov
sbb
stos
lahf
addr16
loopne
sub
fsts
mov
sbb
pop
stc
aaa
adc
inc
lcall
sub
add
sub
mov
ret
push
xor
dec
cld
or
mov
test
test
jg
shl
or
cmp
inc
adc
cltd
aas
lea
inc
mov
ds
xor
push
aam
push
fnstcw
addl
jge
xor
jge
sub
or
mov
sub
mov
push
clc
jno
adc
fucomi
xchg
stos
aad
icebp
mov
sahf
or
orl
mov
je
in
inc
gs
pop
sbb
pop
xadd
sbb
mov
mov
inc
adc
aas
iret
xchg
rcrl
xor
pop
into
lea
loopne
lods
jp
xchg
ljmp
mov
dec
sbb
add
jnp
sbb
pop
in
jae
out
mov
inc
sub
sub
pop
dec
out
push
adc
add
outsb
shlb
pop
addr16
jp
sbb
call
jl
mov
fimull
inc
js
or
fdivrl
dec
call
stos
xlat
popf
inc
stos
les
aas
inc
jae
movsb
shlb
sub
lock
mov
out
iret
xor
mov
js
fldl
leave
pop
loopne
dec
jno
jae
gs
cmpsb
leave
and
sbb
adc
cmpsb
lret
sbb
mov
int3
pop
sbb
sbb
cmpsb
ficomps
out
loopne
mov
popa
sbb
or
cltd
pop
pop
and
xchg
fsubs
xchg
cmp
cli
pop
icebp
pop
hlt
xor
test
dec
pop
jo
mov
sub
cli
insb
pop
sub
jae
fadd
sbb
jp
sbb
lret
popf
mov
push
stos
dec
rorl
push
jne
mov
push
test
cmp
aaa
dec
push
out
jmp
subl
xlat
ss
std
push
lock
mov
mulb
or
xor
cmp
xchg
dec
xchg
xor
and
popa
lret
dec
inc
xchg
sub
and
or
cs
inc
int3
push
lret
mov
je
mov
sub
out
push
fldcw
cmp
test
or
leave
push
add
cmp
rol
jnp
sbb
mov
mov
fs
xor
add
cmp
xchg
mov
sahf
mov
mov
orb
xor
insl
iret
int
shr
fxrstor
test
push
fisubl
jecxz
pop
mov
push
les
and
sbb
fistps
cltd
mov
xchg
sar
mov
popf
stc
sarl
shrl
fisubrl
xor
sub
scas
fstp
mov
or
dec
nop
lahf
xchg
sub
cmp
jns
sbb
fsubp
jge
mov
mov
jbe
xor
ret
push
push
pop
inc
adc
push
jg
es
inc
test
dec
test
and
or
or
fistps
mov
cli
or
xor
xchg
mov
test
pop
inc
clc
or
adcb
aaa
rorb
or
inc
clc
inc
in
pusha
push
jnp
aas
repz
cmp
and
xchg
sbb
mov
cwtl
jno
push
push
adc
sbbl
aas
test
rcl
in
scas
loope
mov
inc
inc
dec
in
ds
mov
xchg
insb
add
adc
xchg
xor
dec
in
dec
aas
pop
xchg
in
xchg
push
insl
mov
inc
stc
icebp
mov
and
call
push
loope
push
addr16
and
outsb
popa
jmp
mov
loope
pop
jp
dec
cmp
xchg
pop
and
push
frstor
lea
jb
xchg
or
xor
aad
sub
sbb
insb
xor
mov
pushf
cmpsl
inc
mov
xchg
cld
pop
bound
std
xchg
fmuls
imul
es
xchg
jo
ljmp
xchg
xchg
outsb
jb
or
insl
clc
mov
mov
mov
or
and
or
jecxz
sbb
and
out
inc
cmp
jg
hlt
popa
xchg
roll
xor
std
sub
out
sub
repnz
push
rorl
sbb
mov
ss
pop
push
dec
add
outsb
iret
shlb
loop
jl
std
inc
adc
outsl
cmp
sub
xchg
or
inc
sbb
je
mov
movsb
jmp
lods
into
lret
call
mov
and
movsb
pop
xchg
movsl
pop
test
jbe
sbb
push
cwtl
js
push
inc
add
xor
sbb
sahf
rcrl
mov
add
mov
lret
mov
dec
and
cmp
mov
cmp
pop
fucompp
dec
xor
and
xchg
sub
jmp
or
or
or
add
fs
fstps
das
jo
ja
call
adc
jns
mov
and
mov
and
push
dec
inc
testl
mov
call
test
ljmp
sti
in
xchg
cwtl
sbb
mov
fnstsw
imul
test
mov
or
mov
adc
mov
xchg
iret
mov
dec
push
cmp
sub
mov
adc
addr16
outsl
cmp
mov
incl
jecxz
hlt
insl
adc
test
inc
test
rcrb
popa
xchg
repz
or
pop
pop
gs
movsb
sbb
jp
dec
or
lret
jmp
daa
pushf
or
mov
push
inc
pushf
sbb
mov
pop
int3
inc
push
rep
mov
dec
xor
cmpsl
shr
pop
cli
xlat
cmc
push
je
mov
dec
pushf
sub
aaa
xorb
xchg
flds
into
mov
inc
daa
fldl
mov
insl
test
pushf
inc
mov
stos
push
imulb
addr16
mov
pop
xchg
stc
pop
pop
and
mov
mov
out
push
out
insb
inc
sbb
jae
in
scas
push
insb
ja
mov
sub
andps
aas
sbb
mov
stos
mov
lcall
jp
fisubrl
add
sahf
add
outsb
leave
xor
enter
inc
outsb
and
in
jbe
and
mov
movsb
mov
push
push
stos
jae
pop
pminub
push
pop
xchg
fbstp
lret
fistpl
ljmp
leave
int
lds
adc
enter
dec
outsl
mov
add
fidivs
fcmovbe
das
lret
push
movl
add
jp
rcll
ss
scas
movsb
xor
in
ds
sub
push
andb
outsl
in
enter
scas
aaa
lock
outsl
pop
call
or
jge
iret
jg
add
inc
dec
or
xchg
or
mov
add
cli
dec
cmp
or
in
inc
push
aam
psubw
push
pusha
pushf
add
mov
sub
push
in
fsubl
mov
push
or
daa
ljmp
add
mov
mov
add
shll
adc
mov
adc
das
out
mov
inc
add
rorl
dec
mov
lret
decb
xor
mov
test
push
pop
mov
sub
jbe
iret
sbb
inc
xchg
xchg
xor
dec
das
call
or
clc
fiadds
das
mov
test
lea
or
movsb
jo
imul
in
and
outsl
xchg
cmp
imul
subb
pop
les
sarb
in
push
rolb
jne
sbbb
or
ret
stos
add
loop
pop
test
cmp
xchg
dec
sahf
leave
sbb
fisubl
fdivs
mov
and
fisubl
push
aam
cltd
decb
cli
xor
xorb
out
push
adc
pop
or
adc
cmpsl
sahf
dec
fsubrs
xchg
test
int
jae
repnz
ret
mov
sti
dec
in
insb
adc
das
push
and
into
enter
xchg
push
ljmp
out
mov
iret
loop
fdivrl
imull
sub
cmp
inc
xchg
pop
add
push
adc
sbb
data16
ss
js
decb
imul
adc
lods
push
out
inc
test
push
push
jecxz
mov
div
mov
mov
mov
xchg
addr16
pop
push
cwtl
mov
test
out
sub
fs
add
push
lds
gs
int3
aam
insl
mov
pop
mov
push
mov
xor
and
sbb
fwait
adc
jo
das
pop
popa
cwtl
jl
jno
iret
jae
ljmp
sub
and
inc
pop
mov
outsb
jl
or
cmp
sub
mulb
or
stos
out
popf
aad
mov
and
inc
xor
or
jne
cs
cltd
ja
daa
les
push
popa
inc
sbb
mov
adc
les
dec
mov
movsb
inc
inc
js
cmpsl
cmp
insl
mov
cmp
inc
insl
test
sbb
dec
arpl
cld
sub
xchg
mov
xor
mov
xchg
dec
bound
frstor
push
cmc
into
sbb
rcrb
fists
enter
leave
inc
hlt
xor
sub
add
sti
mov
jne
shll
sbb
icebp
clc
std
and
hlt
rorb
inc
dec
test
mov
fwait
or
cmpsb
xor
and
mov
rorb
shrl
sub
in
lahf
mov
cs
stos
enter
mov
xchg
lods
mov
fildll
pop
sbb
jge
stc
xor
fdivp
mov
mov
cmp
mov
jecxz
cmpsb
mov
jle
sub
sub
or
sub
push
sub
roll
pushf
imul
dec
push
mov
out
mov
shrl
clc
aam
jns
repnz
int
add
xchg
xlat
ss
mov
dec
mov
add
xchg
jb
or
mov
push
xor
nop
dec
inc
movsb
xchg
mov
arpl
cmp
inc
in
or
inc
cmp
jb
outsl
or
jl
orl
and
add
jb
bswap
test
mov
mov
xor
aas
mov
dec
cmpsl
out
out
xchg
mov
shr
or
vpaddq
sub
aad
mov
push
sub
mov
jle
xor
push
movsl
cmpsl
test
insb
int3
push
fsubrs
repnz
xchg
nop
cld
sub
lret
dec
jnp
outsl
insl
scas
js
cltd
cmp
cltd
inc
adc
ds
sub
test
andl
fsts
sub
adc
aam
adc
iret
inc
or
mov
and
dec
mov
cmp
sbb
xchg
mov
jo
xlat
scas
gs
test
xor
dec
hlt
jb
jne
lcall
ret
in
test
cld
ss
push
xchg
xchg
mov
dec
addr16
fstps
fs
mov
fstps
mov
int
in
sti
insb
repz
inc
cmp
outsl
lret
mov
pushf
fwait
cld
fcmovb
xchg
aaa
inc
add
xchg
mov
push
loop
mov
popa
daa
popa
notb
out
mov
pushf
mov
push
imul
cmpsb
lods
fwait
or
add
loope
or
clc
aas
lcall
out
insl
pushf
xchg
xchg
and
test
lea
repz
inc
jo
xor
xchg
lock
and
xchg
xor
cwtl
or
out
jecxz
mov
adc
inc
jp
cmp
and
adc
shrl
xlat
lahf
fwait
dec
mov
sbb
addr16
sub
xor
lods
dec
and
push
insl
pop
or
jbe
bound
pop
repz
mov
adc
test
std
sbb
fadds
loopnew
je
mov
xchg
mov
adc
fadds
xchg
push
ja
lods
jno
xchg
pop
push
cltd
sbb
lock
shlb
js
xchg
cmp
bound
inc
dec
aam
mov
stc
jae
mov
inc
mov
mov
and
int
xchg
jno
add
clc
xor
sub
out
mov
adc
and
fldcw
mov
stos
leave
jae
stos
test
or
pop
push
mov
pusha
mov
imul
xchg
mov
jecxz
lods
mov
and
mov
pop
mov
in
iret
cli
lock
pop
sbb
fdivrl
xchg
mov
popf
ds
fdivrs
adc
sbb
je
ficompl
cmp
movsb
repz
in
adc
mov
divb
or
push
dec
inc
xor
addr16
xor
sbb
cld
inc
stos
sub
jae
aad
sbb
jns
sbb
add
mov
xchg
cltd
inc
cmp
xor
ja
sti
dec
sbb
lret
in
js
pcmpgtb
sub
push
sbb
movb
xor
ds
push
cmp
xchg
jecxz
pop
sbbl
data16
in
repnz
faddp
aam
testb
mov
lea
test
sub
mov
sbb
sub
inc
adc
hlt
rclb
gs
orl
sub
aam
push
in
mov
cmp
mov
mov
mov
xchg
movsl
inc
call
bound
sarl
pop
jne
mov
out
sahf
and
lea
insb
mov
sti
outsb
test
lea
sahf
roll
cmp
int
sub
repnz
xor
mov
fstl
inc
sub
xor
add
mov
testl
cmp
sbb
xor
in
scas
aaa
subl
insl
testb
adc
movsl
mov
out
jp
sbb
js
sub
lret
push
cltd
push
notl
pop
xchg
xchg
add
cmp
jg
jge
std
pushf
add
in
cmp
mov
testl
lcall
hlt
push
inc
orl
pop
pop
fs
cs
cli
je
jge
sbbb
in
cmp
mov
int3
mov
les
pop
adc
mov
adc
inc
int3
pop
adc
push
cmp
lahf
call
jne
lock
jb
stos
stc
mov
popa
in
pop
pop
movsl
sbb
imul
mov
mov
sub
shlb
mov
or
outsl
pop
dec
js
mov
leave
jp
xor
add
in
and
push
test
inc
mov
mov
pusha
in
mov
cmp
lods
xchg
dec
xchg
addr16
xchg
bound
mov
fs
js
adc
fldenv
test
mov
dec
sbb
sbb
add
lret
push
xchg
xchg
xcrypt-cbc
cmpsl
xchg
fildl
rol
cli
mov
outsb
cwtl
imul
repz
xlat
std
outsb
ffreep
inc
dec
enter
loope
mov
lret
and
or
icebp
and
lds
cmp
and
dec
mov
inc
pop
jge
in
xchg
and
sbb
int3
xorl
mov
loopne
pusha
insl
fistpll
mov
mov
pop
shll
sbbl
in
pop
stc
ja
pop
into
icebp
dec
ret
out
add
pop
leave
fistpl
daa
data16
dec
shlb
jg
imul
adc
sub
jne
nop
cmp
and
mov
iret
push
adc
xor
xchg
sbb
fs
mov
repz
dec
mov
cmp
pop
mul
clc
mov
dec
inc
and
lret
push
mov
icebp
push
push
clc
xchg
add
lahf
inc
hlt
push
dec
test
sti
les
jae
and
cli
popa
pop
arpl
push
addr16
mov
add
jne
dec
sub
xchg
mov
xchg
jg
gs
inc
jmp
lret
mov
mov
add
outsl
stos
stos
dec
int
pushf
push
mov
dec
xchg
jbe
dec
aaa
std
or
adc
adc
pop
mov
bound
jmp
dec
push
cmp
push
xor
test
rcll
dec
sbb
cltd
mov
loopne
xor
sub
js
lds
adc
aad
or
lods
push
das
je
and
cli
dec
and
fwait
fwait
xor
insb
enter
inc
sbb
cwtl
jecxz
popa
adc
push
mov
out
mov
fwait
xchg
adc
sbb
rorb
stos
inc
push
pop
movsl
aas
mov
push
nop
sub
dec
mov
or
mov
jl
fsubp
aaa
mov
sbb
fwait
sar
loopne
aaa
and
outsb
daa
jp
repz
dec
push
sbb
add
sbb
or
mov
stc
adc
shrl
pop
xchg
or
xor
ror
mov
dec
dec
fs
push
pop
sbb
jmp
in
pushf
dec
pop
fwait
xchg
jbe
fstcw
sar
jne
xchg
and
sti
jns
mov
xor
mov
pop
fsub
mov
ret
jle
jge
in
xchg
xchg
pop
jecxz
icebp
adc
sbb
in
push
lea
test
mov
leave
mov
push
jno
cmp
aad
xchg
call
mov
sbb
and
aad
cli
dec
sbb
lea
jecxz
jnp
xchg
xchg
cli
dec
ss
repz
push
push
pop
cld
and
sbb
mov
mov
les
ds
fisubrl
mov
pop
mov
xlat
ljmp
add
mov
fcmove
add
add
xchg
xor
data16
leave
dec
std
jge
lcall
cmp
xor
cmpsl
in
fwait
or
ret
dec
lret
dec
int3
mov
je
inc
or
cmp
push
dec
lret
mov
lds
sbb
addr16
mov
xor
movsb
repnz
pop
fcoms
fwait
sbb
into
sahf
enter
hlt
cmp
push
mov
xor
into
adc
mov
add
push
push
ret
fcmovnb
jae
pop
sbb
jmp
lods
jp
xchg
pop
sbb
mov
mov
int
test
and
and
fdivl
mov
jbe
fnsave
jbe
mov
or
arpl
pop
test
xchg
mov
scas
bsr
aas
xchg
ja
jmp
pop
pop
insl
aad
jmp
dec
fldcw
push
cltd
cmpsl
cwtl
sub
cmp
ja
cmp
imul
shrl
movsl
jne
jae
adc
ds
xchg
dec
dec
pop
scas
mov
fdivrl
and
stos
push
mov
mov
lcall
fwait
xchg
push
fcoms
mov
cltd
fsubl
push
sub
mov
adc
mov
leave
ret
lret
mov
jecxz
xor
push
fdivr
xor
cmp
ror
sbb
addr16
and
imul
jne
mov
loopne
sub
fwait
mov
dec
sub
sub
jb
test
out
jne
inc
scas
insb
jno
cld
fistpll
pop
dec
xor
fs
sub
lds
or
test
ss
push
push
push
inc
jle
imul
xchg
or
outsb
dec
cs
sub
das
and
mov
dec
mov
push
lock
inc
xchg
mov
xchg
aam
les
imul
daa
in
push
mov
and
ret
cmc
sarl
in
cmc
cmp
imul
mov
pop
hlt
fldt
incl
popa
mov
add
rorl
push
cmp
jbe
dec
push
popf
repz
dec
lahf
loop
test
pop
lods
rcll
dec
jmp
adc
ljmp
mov
fstpl
sbb
leave
xchg
cmpsb
lahf
xchg
xor
popf
inc
xlat
adc
in
loope
push
sub
adc
lahf
jbe
call
mov
or
and
and
out
sti
nop
sbb
push
xchg
cmp
cli
call
push
pushf
sbb
sbb
stos
arpl
inc
xchg
dec
nop
jne
xor
xor
clc
mov
add
jb
into
fisttps
cmp
xchg
dec
mov
lods
insl
pop
popf
pop
add
jle
cltd
test
movsb
add
push
in
xchg
xchg
lods
adc
das
sbb
mov
mov
mov
incl
mov
popl
es
cmp
movsl
stos
es
divb
dec
call
jle
clc
sub
loope
pop
sarl
and
mov
fistpll
jmp
ljmp
pop
cwtl
mov
js
pop
mov
lods
ret
rorb
sbb
lret
mov
add
adc
pop
adc
adc
dec
mov
aaa
jbe
inc
cmp
dec
lret
mov
jg
pop
dec
rcll
mov
insl
jae
or
pop
jg
jnp
lret
pop
ljmp
lret
mov
add
lret
cwtl
ret
push
sbb
jb
call
nop
repnz
mov
shll
shlb
lea
lods
mov
out
xchg
out
or
cmovl
es
inc
sub
lahf
sub
popf
inc
or
popa
inc
adc
xor
mov
aaa
jns
arpl
fcoml
cltd
mov
clc
push
sbb
shl
hlt
daa
push
mov
fcompl
xor
mov
push
push
data16
bswap
cmp
int
imul
jbe
inc
clc
mov
mov
fisubs
mov
test
xchg
call
push
filds
sub
pushf
cmp
loope
push
mov
jg
cld
and
dec
push
mov
mov
in
ror
jmp
jne
or
mov
push
xchg
jge
repnz
mov
inc
outsl
mov
shr
sbb
flds
jp
mov
sbb
loope
daa
cwtl
push
int
rorb
movsb
ljmp
mov
test
xor
jo
inc
push
adc
aad
jl
xchg
inc
cld
xchg
enter
dec
inc
jmp
cltd
fbstp
pop
mov
pop
mov
aad
cmpsb
mov
sahf
arpl
add
cli
add
mov
rorl
jno
je
or
xchg
ret
sub
jo
sahf
in
cmp
aas
adc
push
xchg
adc
fldenv
in
stos
icebp
mov
sbb
inc
arpl
div
mov
xchg
sub
mov
fwait
push
inc
sbb
pop
out
enter
sbb
popf
aas
lock
inc
fwait
xchg
rcrl
iret
int
in
insb
jbe
in
mov
imul
std
sar
mov
subl
cld
push
mov
or
ret
popa
pop
lock
rol
mov
add
test
sti
movl
clc
push
adc
out
scas
inc
scas
pop
mov
repz
mov
inc
adc
ret
leave
mov
xlat
lret
cli
inc
frstor
cwtl
mov
sbb
aas
dec
cltd
aad
jmp
fwait
addb
cmpl
aaa
movsl
arpl
movb
inc
or
scas
add
adc
shr
jae
pop
cld
adc
xchg
push
mov
push
outsb
inc
rcll
insb
add
idivb
adc
sahf
push
aam
adc
add
sbb
movsb
adc
pop
mov
lcall
sahf
add
dec
aad
xchg
fs
cld
sbb
shl
repz
push
jne
enter
lds
adc
sahf
sub
push
aam
les
mov
cmp
rep
mov
inc
or
mov
je
mov
cmpsb
in
out
addr16
xor
push
adc
add
xchg
mov
rorl
jne
fildl
sub
cmp
sub
loop
ret
pop
es
inc
pushf
xchg
push
test
xchg
xorb
inc
push
fsubr
or
roll
cmpsb
mov
push
push
jg
mov
jl
ja
icebp
pop
shlb
or
mov
outsl
into
insb
rorb
sub
jp
ret
add
fnstsw
sub
stos
cmp
fnstsw
push
jae
movsb
xor
loop
jno
and
mov
pop
sub
in
out
jo
sub
out
ja
xchg
adc
dec
ret
pop
inc
lahf
lret
or
cmc
scas
sbb
mov
cmp
pop
ret
inc
inc
imul
jmp
int
jno
dec
dec
lock
xor
mov
push
ficompl
addl
out
jno
jo
dec
imul
aad
and
scas
test
cmpsb
cmp
sbb
movsl
out
pop
ret
mov
lret
sub
pop
lret
call
ljmp
rorl
adc
sbb
add
pop
fldcw
sbb
inc
xlat
push
js
mov
mov
or
and
stos
mov
jp
adc
and
rorl
sub
outsl
add
loop
rolb
outsb
loopne
push
xchg
ljmp
push
ja
jg
cmp
add
test
dec
push
and
mov
xchg
fidivrs
cmp
and
ret
std
or
mov
loopne
jne
inc
mov
daa
xor
test
xchg
sbb
push
out
mov
mov
push
pop
mov
xchg
jnp
fwait
notb
lret
fldt
push
pop
add
xchg
shl
leave
aam
add
push
mov
dec
push
dec
enter
roll
inc
push
sar
pop
lods
aam
or
xchg
add
lods
enter
mov
add
lahf
outsb
dec
insb
xchg
mov
sub
jnp
in
out
pusha
add
out
inc
out
or
push
jecxz
fwait
iret
add
mov
or
ljmp
jg
iret
xor
jae
out
or
pop
mov
repnz
das
aas
das
lea
pop
pop
test
xchg
dec
ficoml
pop
push
mov
inc
dec
dec
add
into
ret
push
daa
pop
sub
mov
or
call
jg
inc
and
aam
mov
addr16
cmp
xchg
xor
pusha
scas
mov
shll
repnz
dec
inc
int3
out
mov
into
and
popa
cmc
sbb
movsl
fimuls
in
test
pop
sub
cmp
dec
push
mov
arpl
int3
cwtl
add
lret
leave
andb
xchg
or
push
fiadds
or
inc
lahf
insl
or
jmp
call
xchg
jb
leave
fdiv
es
test
sub
or
and
pop
call
or
and
repz
int3
jmp
xor
cli
sahf
scas
pop
sbb
jne
lea
loopne
pop
repz
add
sub
dec
repnz
jl
cs
xchg
aam
add
or
repnz
push
in
mov
jb
pminsw
idivl
cmp
add
pop
dec
call
movhlps
pop
aas
loop
loopne
in
rol
cli
lcall
sub
aam
jnp
xchg
push
mov
leave
mov
sub
insb
lods
stos
pop
mov
aad
idivl
jle
and
fcomps
loop
jo
pop
mov
push
or
sbb
cli
lods
jne
jp
adc
jns
pop
pop
shl
jl
enter
mov
mov
add
into
mov
stc
jp
inc
jecxz,pt
mov
mov
push
pop
test
lds
and
adc
jp
movsb
push
xchg
stc
xchg
loopne
stc
fisubrs
stc
xchg
fwait
push
add
lret
or
aas
xor
imul
ds
ljmp
sahf
in
rclb
lret
add
popf
stc
daa
dec
and
lods
jecxz
js
pop
adc
jb
lahf
xchg
jns
out
fwait
or
jne
aas
lock
sub
cmp
push
shrl
aaa
inc
insb
and
mov
sbb
adc
inc
popa
fstpl
orl
add
stos
icebp
rcl
push
jg
mov
push
out
scas
jg
and
in
es
inc
pop
pop
mov
mov
in
or
popf
sub
ljmp
mov
scas
cmp
xor
add
dec
bound
in
and
and
ret
shrl
in
out
sub
cltd
insb
stos
dec
iret
dec
outsl
in
shrl
sbb
mov
mov
jbe
mov
fildl
js
cli
scas
outsb
mov
mov
daa
inc
pop
ret
and
or
sbb
ss
rorb
pop
mov
outsb
xlat
ret
orb
mov
mov
cmp
out
push
cs
push
cmp
sbb
mov
ds
aas
cmc
mov
rorl
add
repnz
and
push
lcall
inc
fadds
shlb
xor
pop
mov
cmp
lea
cltd
xchg
mov
pop
mov
inc
push
in
cmp
lock
jl
or
mov
push
dec
jnp
sub
xchg
notb
movsb
cmp
and
push
sbb
in
dec
loope
mov
cltd
jbe
lret
xchg
xchg
sub
mov
lahf
leave
xor
jo
add
testb
push
mov
in
jp
int
mov
xchg
mov
or
adc
fildll
fwait
cmpl
lcall
out
xchg
aas
mov
push
fs
mov
sti
cwtl
js
enter
xor
in
aaa
pop
cmp
lret
fldenv
popa
imulb
add
push
pop
out
iret
pop
popa
sarb
ret
or
fisttpll
movsl
movsl
ret
lret
cmp
jg
outsl
pushf
aam
or
ja
mov
sub
fstp
mov
ss
or
and
movsb
sbb
pop
adcb
rcll
popf
sbb
xchg
adc
push
aad
lahf
test
leave
mov
mov
sarl
fiadds
ljmp
fldl2e
dec
and
insl
cmpsl
popf
push
pop
shlb
sub
ret
push
mov
aaa
mov
into
mov
and
mov
rorl
addr16
nop
mov
xor
je
mov
jnp
aad
addb
lods
sub
shl
jle
test
xchg
push
pop
lea
and
test
rclb
mov
lods
aas
dec
lock
mov
adc
shrb
cmpsb
lea
pop
loop
mov
dec
shlb
push
pop
mov
icebp
stos
adc
leave
mov
out
dec
sub
or
xchg
jb
push
test
push
push
cmp
cmpsl
call
xchg
or
and
push
lahf
lds
imul
das
sub
push
add
jns
pop
roll
hlt
pop
pop
jge
inc
cmpsl
sarl
mov
leave
adc
popa
xchg
sti
aam
and
xor
pop
call
push
test
scas
enter
lods
push
mov
pushf
es
pop
ret
and
dec
jb
movsl
out
dec
push
loope
insb
stos
pop
mov
js
mov
repz
lea
test
pop
mov
or
movsb
cld
rcr
cli
or
mov
push
shl
jp
cltd
push
xor
xor
inc
and
dec
mov
cli
fnsave
mov
mov
push
fbld
mov
imul
pop
shll
mov
and
lock
ss
icebp
lods
test
gs
ds
xchg
fiaddl
addr16
mov
mov
dec
xchg
adc
out
push
inc
sub
jno
cmp
xchg
mov
lret
mov
xor
jae
mov
add
popf
enter
inc
push
or
ljmp
mov
movsb
or
adc
lcall
aaa
cmp
adc
je
pop
test
mov
fisttps
ds
xchg
push
aaa
cmp
xor
in
addr16
lret
pop
inc
adc
cli
es
add
jg
lret
addr16
inc
cs
push
mov
imul
fmul
lds
jg
je
or
xchg
paddb
jge
cmpsl
lods
shll
in
push
dec
and
daa
inc
movsl
rolb
movsl
sbb
stos
fldenv
cwtl
dec
lret
popf
pop
loop
cmpsb
xchg
in
cmc
sub
aas
xor
aam
in
stos
repz
and
ss
pop
ss
jp
nop
or
dec
test
or
xor
sub
add
cmpsl
addr16
inc
pop
jo
insl
mov
adc
mov
xor
repz
mov
fmuls
imul
and
mov
cmp
lahf
aam
sbb
add
ds
push
pop
in
mov
push
sbb
cld
stos
mov
inc
lret
mov
cmc
jno
repz
jle
fsts
test
jl
fisttpll
aaa
mov
subb
mov
dec
or
rcrb
xchg
jo
adc
stc
std
xchg
xchg
jne
mov
push
xchg
test
call
xchg
ret
fwait
fwait
out
scas
xchg
mov
outsl
fmuls
fcomps
dec
mov
mov
mov
xor
jle
dec
mov
aam
loopne
inc
or
mov
xchg
popf
lods
mov
dec
push
pusha
xchg
xor
fwait
outsb
push
das
add
cmp
and
xor
cmp
inc
data16
lret
inc
fnstenv
jmp
mov
icebp
dec
imul
jb
shrb
adc
mov
bound
xchg
loopne
pop
sbb
test
mov
cmc
jmp
ret
lods
cltd
sti
shl
repnz
lahf
fmull
jae
jecxz
mov
jmp
xchg
je
fstl
and
test
iret
push
xchg
cmp
movsl
jnp
push
jb
cmp
out
mull
ret
jbe
dec
inc
inc
mov
testl
lret
daa
popf
aad
mov
hlt
mov
mov
lods
dec
and
mov
lcall
pop
decl
sahf
imul
add
mov
andb
push
ljmp
sbb
in
int3
pop
je
pop
push
imul
xor
push
arpl
xor
test
movsl
out
sbb
mov
mov
dec
adc
xchg
xchg
ds
mov
pop
dec
clc
loop
dec
mov
sbb
xor
pop
pop
fdivr
mov
rorb
int
add
pop
notl
std
jle
xchg
sub
mov
dec
cmp
xorl
les
xchg
jp
xchg
xchg
fisttpl
dec
imul
dec
mov
pop
int
xor
ret
outsb
dec
or
enter
hlt
mov
int3
cmc
ds
outsl
dec
inc
loop
lahf
into
clc
adc
rcrb
adc
jl
cmp
inc
pop
inc
divl
add
lods
aas
fwait
push
mov
cmpsl
jne
lcall
cmpsl
mov
add
in
push
fsubl
xor
std
push
loop
sbb
inc
add
push
loope
jmp
aas
adc
jo
out
clc
pop
xchg
movsl
mov
xor
fidivs
gs
dec
jne
adc
loop
push
lret
dec
leave
jo
jnp
insl
jno
cwtl
xor
out
movl
inc
mov
inc
shl
daa
in
loopne
xchg
xor
ss
dec
aaa
sbb
cmpsb
jns
xor
aaa
sbb
xor
and
mov
rol
mov
mov
lods
jnp
mov
mov
jo
in
pop
xchg
lock
sti
adc
push
aad
loopne
pop
mov
push
imul
ss
or
mov
lcall
sahf
ud2
andb
cltd
lods
dec
jge
negb
sti
adc
and
pop
pop
mov
mov
rcr
out
faddl
ret
mov
test
and
xchg
loop
cmp
jns
ja
cltd
push
movsb
cmp
mov
xchg
add
in
dec
loopne
movsl
inc
shll
jge
pop
pop
dec
push
push
push
add
rolb
sub
repz
push
mov
pop
ret
fbld
idiv
mov
addb
add
out
insb
fsubrs
pop
popf
inc
push
imull
mov
ret
rcrl
push
mov
mov
addr16
fwait
push
in
sbb
dec
push
push
notl
inc
adc
pop
push
in
push
flds
out
outsl
in
xor
sbb
scas
jb
pop
mov
les
push
adc
aad
incb
in
sbb
fnstenv
inc
mov
add
mov
mov
sahf
pop
outsb
std
shr
lahf
mov
or
jo
xor
cmpsl
mov
push
lods
out
cli
and
test
enter
ret
fisubrl
sub
inc
test
test
xlat
mov
stos
fnstenv
sbb
nop
cmp
stos
dec
int3
mov
lods
cld
shr
xor
sti
pop
popa
adc
ja
dec
mov
hlt
xchg
adc
aaa
mov
int
cmpsl
cmc
mov
pop
imul
mov
es
xchg
mov
in
idivl
cmp
mov
mov
clc
lds
subb
mov
add
out
inc
inc
shrb
pop
daa
push
cmp
ret
or
mov
pop
cwtl
xchg
push
inc
cmp
in
push
xor
test
add
mov
test
adc
hlt
ljmp
push
push
sub
xchg
sub
bound
cld
xor
sbb
adc
push
mov
leave
lock
leave
lock
jmp
outsb
iret
in
mull
xchg
loopne
fisttpl
pop
push
fidivl
lds
fdivs
mov
and
pop
scas
fsubs
in
or
in
icebp
inc
scas
push
xchg
fs
lods
call
inc
fmul
sub
cmp
jge
mov
sbb
inc
push
leave
jae
push
fsubl
pop
mov
push
mov
out
cwtl
mov
sub
cmp
fsubs
pop
dec
int
gs
xor
mov
gs
je
mov
inc
add
adc
mov
lock
cli
cmp
inc
lds
int
cmp
sub
mov
fdivr
lahf
mov
xchg
mov
mov
lahf
imul
adc
mov
int3
clc
pop
jge
jno
dec
dec
mov
hlt
mov
pop
mov
lret
sub
fsubl
pushf
movsb
test
addr16
adc
cmp
sub
rcll
mov
dec
sub
je
data16
lcall
mov
fdivs
lret
adc
aam
add
xor
out
sbb
lahf
aad
or
adc
fwait
test
je
addr16
ret
ja
lock
mov
jl
out
inc
jl
inc
xlat
jb
pop
adc
jp
nop
out
sti
fdivrs
outsl
jns
je
lods
add
fdivl
int3
push
sbb
scas
jecxz
inc
dec
lods
push
xor
or
out
cmp
pop
pushf
test
in
adc
stos
jbe
mov
push
mov
push
xor
jmp
add
sub
sub
mov
jae
mov
sub
in
stos
addr16
mov
sub
popa
push
imul
ret
insb
push
cmp
adc
mov
js
enter
mov
mov
inc
out
xor
xorb
rcrb
dec
pop
push
xchg
sbb
sti
jae
mov
cmp
adc
inc
iret
xor
fildll
and
dec
xchg
decl
es
mov
jle
call
push
js
xlat
shlb
in
inc
mov
shll
jbe
and
scas
mul
ror
xor
lea
push
xchg
cmp
or
add
and
call
sub
in
sub
clc
dec
and
inc
mov
adc
and
mov
xlat
call
mov
mov
orb
jge
fdivrs
xchg
aas
cmp
jbe
inc
add
mov
idivl
sbb
sbb
mov
ss
or
cld
vprotd
add
dec
adc
pushf
int3
sahf
adc
inc
jbe
mov
xor
jge
shlb
sbb
fs
pop
lods
movsb
push
adc
es
xchg
out
lock
jg
bound
inc
out
bound
std
mov
insl
clc
cmpsl
lahf
inc
inc
mov
xorl
inc
dec
sarb
fnstcw
xor
insb
adcl
fwait
add
rorb
stos
inc
push
mov
xor
mov
loopne
cmp
dec
scas
cmp
push
xchg
dec
daa
mov
mov
fs
pop
out
lret
mov
loope
lcall
sbbl
mov
dec
jo
fimuls
or
push
je
adc
xor
fbld
loop
cmp
xchg
push
lods
cmp
sarb
inc
hlt
inc
ficoms
push
dec
push
xor
ljmp
sub
js
dec
or
in
add
sti
push
sub
cmc
pop
pop
lcall
xor
pop
addr16
and
mov
fwait
repz
inc
add
xor
mov
lods
jecxz
idivb
mov
fnsave
push
mov
mov
xchg
cli
and
pushf
add
mov
mov
movsl
jle
popa
or
outsl
loopne
fcomps
lcall
lret
dec
popa
in
dec
repnz
sbb
dec
mov
subb
jne
loope
or
sbb
sub
rep
sub
push
xor
les
in
cwtl
leave
frstor
cmpsl
pop
lcall
popa
cmp
incl
add
lret
cmp
outsb
adc
pop
negb
stc
jbe
arpl
add
mov
cmpl
aas
aam
test
lds
or
or
shll
lds
loopne
pop
inc
pop
cli
popa
add
add
aad
in
mov
pushf
hlt
mov
out
or
nop
data16
fwait
inc
or
stos
lret
and
lahf
xorb
mov
mov
sbb
into
mov
js
inc
xor
inc
data16
add
xor
mov
push
mov
cmp
push
jl
jl
imul
dec
and
pop
xor
push
ss
mov
xor
sbb
testb
jno
je
jg
xor
and
int3
jecxz
popf
xlat
sub
fs
dec
test
xor
jp
adc
xor
stos
rcrb
adc
lods
cli
fwait
orl
jnp
xchg
out
in
lret
inc
mov
inc
shll
cmc
js
daa
inc
mov
xor
add
aad
mov
out
jg
popf
loopne
outsb
inc
lds
cmpsb
adc
outsl
add
sub
addr16
lock
cmp
mov
mov
mov
mov
xchg
inc
mov
out
cmp
mov
pop
pop
dec
roll
sti
xchg
leave
lods
xor
clc
xchg
aad
daa
push
outsb
sub
leave
dec
rep
xchg
out
jle
and
xchg
push
ret
pop
decb
adc
cli
aad
pusha
mov
xchg
aad
pop
subb
clc
xor
mov
ds
adc
pop
scas
cmp
sub
pop
loopne
loope
outsl
call
mov
fstl
pop
repnz
jb
mov
ljmp
in
mov
aas
stos
lahf
mov
sbb
jge
out
subb
xor
xchg
push
imulb
test
cmc
ret
jns
sbb
subl
imul
jle
rcll
cmpsl
pop
stos
pushf
cmc
jg
loop
das
int3
sbb
loope
stc
subb
or
or
lea
jmp
dec
push
pop
sub
push
mov
push
lcall
push
popa
push
es
sbb
hlt
scas
loopne
ret
out
lds
cli
and
fidivs
scas
cld
int3
sbb
sbb
push
xor
int3
sbb
push
popf
push
jle
scas
adc
mov
scas
sub
jne
push
push
jle
int
pop
or
pop
fldl
add
mov
je
fisubl
aaa
fs
bound
adc
or
sbb
add
push
and
sbb
and
stos
add
inc
movsb
push
jno
popa
xor
repnz
sti
test
inc
add
push
shll
sub
jnp,pn
mov
ret
pusha
aas
inc
xchg
sub
mov
sbb
sbb
jmp
fisttpl
pop
in
mov
adc
add
xchg
push
xor
cmp
add
js
ljmp
fnstenv
mov
jle
cmpl
cmp
sarb
pop
rolb
movsl
jmp
aaa
jno
divl
aas
pop
ret
out
xchg
mov
add
addr16
and
addb
ficomps
or
dec
sub
fimuls
aas
jbe
jl
repz
lret
or
mov
ds
mov
fimuls
cmp
cltd
sub
sub
mov
and
and
push
mov
mov
sub
sbb
ja
add
rorb
push
sbbb
mov
mov
lods
push
or
mov
fdivrp
mov
mov
cltd
dec
shlb
adc
lds
cmpsb
mov
nop
icebp
mov
jp
or
aam
test
fsub
shlb
ss
dec
cmp
pop
fs
mov
push
in
and
jl
dec
enter
jle
dec
ds
pusha
pop
or
dec
ret
pop
and
lods
popf
mov
pop
mov
lret
mov
divl
push
add
enter
lods
cwtl
jle
dec
pop
repnz
dec
mov
imul
push
sbb
std
add
dec
xchg
sub
rclb
and
jmp
mov
pop
and
cs
xor
or
xchg
inc
dec
in
jb
lds
andl
movb
push
fistl
punpcklbw
pushf
jns
push
mov
into
dec
inc
imul
jl
mov
push
test
inc
test
push
aas
fwait
clc
xchg
pop
sahf
aad
or
mov
enter
repnz
and
sub
daa
pop
add
jb
das
dec
mov
dec
test
js
lea
cltd
and
dec
into
das
xchg
ljmp
arpl
in
clc
call
mov
scas
jecxz
lcall
cwtl
dec
int
xchg
adc
bound
push
xorb
pop
inc
xchg
mov
mov
rcr
bound
mov
xor
in
xchg
adc
push
rorl
mov
xchg
sbb
push
add
aas
shl
inc
mov
pop
xchg
dec
cmp
hlt
push
mov
jo
sbb
fsubs
jns
mov
insl
push
inc
xchg
xlat
cld
out
xchg
xor
lcall
cmp
fsubs
out
insb
fsubr
mov
sub
pop
xor
sub
xchg
xchg
es
xchg
cli
out
je
mov
jno
push
movsl
std
push
fs
pop
mov
sub
je
stc
cwtl
imul
lock
into
mov
imul
jp
test
cld
and
aad
xchg
jp
push
test
xchg
loope
pushf
divb
aas
into
out
inc
inc
or
mov
push
mov
add
mov
fidivrs
popf
add
mov
sbb
adc
dec
aad
mov
jg
notl
or
inc
mov
mov
stc
sub
push
aad
div
cmpsb
les
rcrl
fstps
xchg
jge
xor
in
out
dec
cmp
xor
les
mov
dec
or
sub
xchg
jge
insl
xlat
cwtl
add
lahf
frstor
mov
mov
dec
ret
inc
imul
aaa
mov
mov
xor
cltd
and
es
scas
inc
fs
stc
push
fs
andb
cmp
push
outsb
lahf
loopne
scas
lret
mov
mov
fstps
xor
out
cmpsb
jge
add
add
out
shl
lds
movsb
dec
sbb
rorl
xchg
mov
sub
mov
adc
rcrl
xor
into
cmpsb
xchg
rorb
or
mov
jbe
jge
addb
push
fwait
sarb
daa
or
arpl
push
add
notb
jne
pushf
cmp
adc
jo
xor
sub
test
pushf
xchg
jne
xor
loop
mov
inc
daa
inc
pop
mov
xlat
jl
jp
or
and
bound
ret
jmp
fdivs
ss
xchg
sub
fidivrs
cmp
arpl
push
pop
sbb
push
stc
pop
lds
xchg
das
xor
mov
xor
mov
sbb
mov
aas
daa
push
lret
in
nop
cltd
pop
lahf
out
mov
es
sbb
in
adc
int3
addb
mov
shrl
dec
in
cmp
mov
pop
add
test
cltd
mov
lret
inc
insb
ljmp
mov
jne
dec
cmp
push
inc
xor
ds
and
fildl
jnp
stos
sahf
into
pop
ds
mov
mov
pusha
jae
mov
in
xchg
mov
pop
aaa
mov
add
sub
aas
into
out
mov
aam
outsl
mov
rcl
aaa
jl
aaa
stos
dec
pop
fists
pusha
in
stos
aad
inc
mov
adc
outsl
push
xor
inc
inc
inc
pop
enter
cmp
pop
sbb
int3
cwtl
scas
lock
jmp
ret
inc
es
push
iret
xorl
sub
cmpsb
add
cmpsb
push
loopne
push
arpl
lret
mov
fwait
hlt
loopne
cmpsl
dec
push
sub
cmp
not
aaa
mov
xchg
cmp
cmp
in
cmovp
stos
mov
jbe
or
jle
jnp
xchg
mov
in
int3
inc
or
bound
rolb
testb
addr16
ret
cwtl
mov
inc
negb
jo
push
add
mov
xchg
iret
pop
pop
nop
xor
xor
mov
jmp
inc
add
cmpsb
roll
adc
pusha
aam
test
cmp
xchg
mov
lcall
xor
jp
push
cs
orl
cmpsl
int
addr16
pop
icebp
pop
jmp
xchg
sbb
daa
dec
cld
shrb
test
add
inc
inc
adc
adc
dec
sbb
xor
dec
jg
hlt
ss
push
incb
sub
mov
adc
jae
lret
loopne
inc
mov
jl
std
daa
mov
jmp
sbb
test
in
pushf
imul
fdivrp
insl
sub
outsb
inc
or
fimull
or
xchg
and
push
scas
mov
lret
lahf
xchg
out
outsl
push
xchg
sbb
push
ljmp
subl
mov
ds
add
cmpsl
jae
add
test
pop
cli
in
shrl
ret
inc
mov
inc
jae
cmpsl
das
out
and
jle
xchg
adc
pop
insb
stc
stc
mov
pop
loopne
pusha
leave
scas
push
inc
andl
out
jl
stos
scas
mov
sbb
enter
outsl
scas
mov
je
add
mov
xchg
lods
sub
add
inc
pop
push
xor
cmp
rolb
xchg
add
pop
pop
lea
push
mov
lret
hlt
xchg
xchg
fidivrs
sbb
mov
push
ror
lret
inc
or
test
inc
pop
dec
cmp
or
jecxz
in
add
mov
adc
mov
pop
dec
les
shrb
rcrb
ret
mov
fldl
xor
sarb
dec
add
in
lcall
xchg
test
pop
adc
sahf
sbb
and
dec
pop
push
fstpl
mov
mov
stc
loop
xor
or
mov
daa
repz
gs
jno
mov
add
jecxz
xor
mov
sbb
orb
cwtl
mov
iret
jle
mov
mov
sub
aad
in
fsub
adc
sub
add
arpl
ds
xchg
and
mov
into
mov
in
mov
sub
std
or
cmp
jmp
je
mov
mov
cmp
push
ja
mov
test
xor
pushl
out
pop
pop
cmp
xchg
jecxz
mov
test
icebp
mov
push
jp
push
fucom
sarb
xor
or
pop
outsb
call
dec
inc
xchg
cmp
mov
sub
jl
je
pop
mov
jo
or
and
cld
cmp
sbb
iret
subl
jnp
shl
lret
cs
push
mov
push
sub
inc
pop
fistpl
into
addb
mov
xchg
inc
or
addr16
xchg
pop
mov
sub
inc
insl
xchg
dec
xchg
and
xchg
dec
push
femms
stos
stc
jecxz
add
cmc
decl
jg
dec
mov
or
lahf
adc
jl
pusha
push
xchg
push
shll
les
in
jmp
xchg
mov
jbe
adc
mov
sub
loope
push
loope
mov
mov
data16
sub
or
std
repz
pop
pop
rcr
aam
mov
lret
pop
fmulp
mov
xchg
notl
rolb
xlat
cld
push
sub
push
mov
dec
fcmovbe
scas
dec
imul
ds
stos
pusha
adc
stos
push
fldcw
and
mov
mov
scas
mov
insl
ret
sub
lret
adc
xchg
leave
leave
fsub
es
add
mov
scas
push
mov
lea
les
aam
arpl
cmp
xchg
adc
adc
mov
jl
mov
mov
mov
xchg
xor
cld
mov
cmp
notl
jg
pusha
shll
pop
pusha
jge
xchg
push
rcrb
es
jae
push
out
cwtl
ret
sub
or
and
enter
aad
and
pop
push
cmp
mov
jle
aaa
mov
call
inc
mov
dec
sub
adc
lahf
pop
pushl
fcmovnu
xchg
lret
movsb
negb
dec
loop
inc
es
add
mov
inc
outsl
decb
sbb
mov
pop
xchg
test
dec
out
jmp
insb
pop
inc
mov
sub
sbb
mov
scas
out
aaa
inc
loop
push
push
cld
pop
mov
adc
sbb
pushf
sub
dec
push
roll
inc
or
scas
pop
xor
aam
fsts
adc
repnz
out
push
aaa
sbb
xchg
jo
adc
sbb
push
inc
jle
push
sahf
das
leave
jno
stc
or
std
shr
in
stc
adcb
hlt
out
jp
scas
add
pusha
push
inc
mov
hlt
fwait
out
or
add
test
subb
popa
adc
cli
cmp
jne
jmp
cs
dec
popf
pop
cmp
adc
fisttpll
in
mov
pusha
xchg
mov
aam
dec
pop
jp
add
out
stos
cmp
dec
push
fdivs
in
ljmp
adc
mov
nop
in
mov
or
stos
dec
mov
inc
dec
jecxz
daa
push
xchg
int3
xchg
cltd
mov
jmp
add
adc
adc
stos
outsl
mov
and
mov
or
pop
jnp
aad
fiaddl
lret
sbb
in
shrl
jg
lahf
xchg
pushf
fnstsw
out
jae
fdiv
in
jg
mov
push
ficomps
push
or
pop
outsb
and
push
inc
sbb
mov
adc
incb
mov
imul
pop
divb
inc
xor
jge
fsubp
subb
xor
repz
je
jmp
xchg
ret
jmp
insl
les
or
in
mov
out
popf
stos
cwtl
out
fs
add
adc
jmp
dec
inc
test
mov
jge
insb
mov
pushf
mov
push
movl
sahf
push
aaa
lret
mov
mov
inc
icebp
ret
adc
dec
jno
add
popa
lahf
inc
es
mov
jno
or
gs
cli
vdivpd
pop
cwtl
jmp
aad
insb
add
push
and
mov
add
test
cmpsb
pop
fcoms
jbe
mov
inc
ss
lods
mov
fwait
test
jb
cmpl
push
push
jg
imul
dec
ret
int3
cmp
push
addr16
jns
push
mull
das
inc
int
push
xchg
mov
call
mov
sbb
frstor
data16
cmpsl
rolb
pop
inc
rcll
adc
les
add
arpl
aad
fs
call
out
sbb
ds
mov
cmc
or
jae
in
adc
xchg
xor
dec
jb
stc
es
jg
add
inc
mov
out
mov
nop
dec
and
xchg
dec
ret
aad
hlt
cwtl
rcll
lods
stc
mov
shll
jae
pop
xor
rcrl
mov
sub
jne
mov
movsb
lahf
mov
dec
cmpsl
int
pop
xchg
sub
fs
sbb
or
mov
mov
or
push
lea
mov
sub
xor
stos
push
or
xor
test
or
lock
inc
push
iret
mov
mov
sub
lahf
lret
and
push
test
ss
xchg
xor
mov
cmp
pop
sub
xor
inc
call
les
mov
or
push
roll
cmp
icebp
mov
sub
stc
jo
bound
cmp
jg
xor
xor
cmc
and
sbb
dec
mov
jo
jp
insl
pop
gs
dec
lea
dec
popf
xor
jp
movl
xchg
dec
mov
mov
cld
push
dec
mov
test
clc
imul
mov
xlat
into
push
and
sbb
jl
test
mov
clc
sbb
or
test
bound
add
mov
jp
and
sbb
xor
mov
xchg
xor
jle
inc
iret
jmp
mov
sbb
push
enter
and
pop
fmuls
inc
test
jl
imul
xor
or
xor
cmp
xlat
dec
cmp
in
inc
or
ficoml
inc
add
fwait
mov
ss
hlt
sub
push
mov
mov
jge
adc
mov
push
adc
scas
cmp
sub
push
adc
sti
adc
push
arpl
test
jp
testl
sahf
pop
mov
pop
inc
push
mov
hlt
mov
leave
push
xchg
sbb
cmc
xchg
cld
inc
hlt
arpl
mov
jecxz
mov
xchg
xchg
sub
aad
addr16
mov
xchg
and
subl
jmp
repz
repz
sbb
sbb
xchg
repnz
ja
jnp
dec
imul
sub
jge
jmp
lret
pop
mov
repz
adc
mov
scas
sub
push
ret
xchg
mov
loop
mov
fbld
push
fidivs
addr16
inc
sub
push
sub
shrl
xor
push
dec
pusha
pop
add
dec
out
mov
divb
or
sbb
xorl
lret
lahf
je
xor
or
inc
push
xor
or
dec
adc
clc
sub
out
pop
ret
mov
mov
jns
lahf
imul
mov
mov
dec
daa
test
adc
int
fidivl
pcmpeqb
leave
cmp
jno
jp
adc
push
lods
dec
jg
jecxz
dec
push
icebp
cs
adc
lret
test
mov
cltd
lea
push
and
dec
mov
leave
adc
dec
mov
cmpsl
sub
fcmove
push
xchg
loopne
hlt
rorl
rcrb
mov
jmp
enter
dec
lods
jno
dec
push
mov
iret
xchg
mov
push
ja
or
jo
jae
and
rclb
inc
das
sub
mov
mov
mov
sub
and
bound
xchg
sub
pop
sbb
inc
out
sub
mov
nop
adc
mov
jecxz
enter
scas
sub
push
sbb
or
imul
cwtl
and
mov
loope
stos
sub
xor
cmpsl
jl
add
mov
jb
adc
xor
dec
enter
xchg
maxps
xchg
outsl
inc
jl
aas
mov
scas
lds
loope
out
jns
aas
jno
loope
shl
mov
fwait
inc
dec
sub
inc
sbb
add
loope
push
sub
push
adc
xor
fbld
sti
xchg
and
ret
jb
fistpl
stos
mov
popa
sbb
rolb
shrb
push
sahf
push
mov
adc
add
mov
mov
lods
lea
lret
xor
call
in
inc
scas
push
nop
or
pop
mov
push
mov
xchg
xor
inc
cld
lock
outsl
into
popa
les
shr
dec
repnz
sub
mov
sub
sbb
fldenv
xchg
push
in
roll
imul
in
cld
sbb
test
stos
bound
mov
pop
xor
sub
cmp
shrl
mov
mov
dec
and
and
pop
sbb
in
mov
sub
cld
xchg
xchg
mov
push
ffree
mov
cmp
push
pusha
js
cwtl
fildll
shll
mov
mov
and
das
jmp
aad
stos
loop
mov
and
dec
dec
xor
nop
imul
loop
ret
xor
jns
dec
dec
mov
sbb
xor
aam
add
and
sub
loop
pop
add
jge
push
lret
sub
or
cmp
hlt
sbb
pop
mov
ret
mov
repz
ja
daa
sbb
mov
jnp
adc
addr16
sahf
cs
and
sub
ret
insl
sbb
dec
dec
sub
sub
fdivrs
mov
enter
in
sbb
xor
push
jp
scas
test
int3
out
sbb
into
mov
jg
xor
ret
inc
cs
sub
lds
cmp
rcll
iret
mov
jbe
pop
ja
mov
pop
mov
orl
dec
push
push
mov
cmp
paddd
dec
adc
or
lods
jne
cmp
mov
add
xorb
adc
cltd
push
icebp
les
cltd
mov
push
dec
sti
sbb
cmp
lahf
push
jmp
inc
data16
in
mov
push
push
xor
shrl
movsl
and
incl
jnp
lods
mov
pop
push
cmp
ret
js
sbb
jp
sub
lods
dec
adcb
cld
mov
mov
add
push
dec
outsb
lahf
scas
jns
lret
or
sbb
push
incl
shr
cmpb
mov
inc
das
cmp
jae
push
cmp
adc
daa
pop
ret
adc
test
outsb
pop
ret
push
loopne
cmp
mov
xchg
xchg
inc
xchg
mov
cltd
lock
mov
mov
call
inc
mov
pop
bound
int
dec
sub
mov
jb
aam
xchg
int
xchg
xor
andb
xor
push
sub
inc
iret
mov
pop
cmpsb
daa
iret
aad
ret
cli
sahf
hlt
add
jmp
adc
shlb
mov
js
mov
xor
mov
mov
mov
mov
test
mov
inc
call
aad
test
or
fdivrl
test
mov
xlat
cmp
mov
mov
xor
mov
cltd
addr16
rcl
xchg
or
into
subl
movsb
or
imul
shrw
imul
rorb
sub
cmc
inc
xchg
add
push
add
movsb
enter
js
and
repnz
cmpsl
imul
scas
imul
sahf
testl
sub
inc
push
lahf
inc
stos
push
push
mov
mov
mov
and
push
imul
insb
jecxz
xchg
add
mov
lret
push
jb
cmp
sbb
bound
rcrl
mov
push
sbb
xlat
arpl
xchg
pop
and
mov
pop
movsb
jne
pop
adcb
sbb
push
loope
push
jmp
and
ja
push
sbb
xor
and
dec
mov
adc
jbe
inc
pop
sti
out
push
nop
inc
fimull
shlb
sub
nop
dec
ds
es
stos
shrl
sub
jge
jle
and
jae
cmp
jmp
mov
mov
mov
sub
lea
ret
fcmovbe
imul
xchg
shll
cmpl
pop
sbb
es
inc
fwait
pop
nop
inc
add
xchg
fisubs
popf
cmp
data16
mov
inc
cmp
call
xchg
stc
or
pop
jae
cmp
out
cltd
sub
add
stos
addr16
test
xchg
adc
mov
adc
adc
icebp
push
mov
xchg
cmc
enter
pop
lock
xchg
cwtl
lods
pop
dec
mov
fldt
adc
mov
xor
sbbl
push
int
or
jl
mov
addr16
inc
lods
cmc
jb
pop
mov
test
popa
icebp
pop
push
push
ljmp
xor
mov
push
lds
mov
enter
fidivl
mov
push
mov
sub
mov
pop
std
test
arpl
andl
inc
mov
cltd
movsb
push
cmc
pop
pop
in
cmp
or
jo
fcoms
mov
add
and
mov
fistpl
fstps
push
add
stos
adc
mov
pusha
or
rcrl
insb
int3
js
sbb
inc
add
xlat
mov
aas
arpl
cmp
out
les
push
dec
pop
add
call
aam
aam
dec
mov
mov
divb
outsl
jae
and
movsl
add
push
push
dec
push
popa
or
dec
stos
movl
aas
and
xchg
cmp
imul
fildl
pop
jo
jg
les
inc
add
outsl
jmp
shll
aas
mov
add
nop
ds
test
shlb
jbe
adc
or
mov
mov
lahf
mov
outsl
data16
out
mov
and
stos
jbe
roll
fstpl
das
ja
pop
je
mov
mov
push
es
jne
xchg
sbb
xor
inc
dec
mov
sbb
xchg
jp
aam
out
sub
aaa
mov
outsl
jbe
jmp
jbe
push
cli
ljmp
jno
mov
hlt
in
pop
addl
hlt
or
test
or
iret
xor
dec
in
push
int3
mov
add
lds
xchg
xlat
jge
and
and
mov
lds
int3
shll
pusha
jp
push
push
fxch
dec
jmp
push
push
js
add
inc
ds
jle
or
insl
mov
cli
aas
xor
mov
sar
int
aas
add
aam
ss
std
cld
outsl
sbbl
push
stos
cld
xchg
xchg
mov
xchg
push
push
lock
cmpsl
in
push
dec
cmp
xchg
mov
outsb
xchg
call
add
arpl
movsb
xchg
shlb
and
bound
fisttpll
lret
xchg
repz
push
cli
sahf
fsubs
dec
data16
lods
push
xchg
mov
les
hlt
dec
inc
inc
imul
dec
mov
push
lods
mov
adc
addr16
lock
pop
xchg
andb
int
mov
ja
cld
test
iret
mov
rcrb
dec
sbb
and
test
jne
stos
dec
sub
adc
sbb
pusha
repz
fmulp
or
xchg
mov
xchg
jne
jo
dec
lods
sub
rorl
aad
cltd
dec
aaa
push
and
out
pushf
hlt
ret
xchg
rorl
test
add
cmp
jo
ror
scas
mov
cmp
xchg
out
stc
iret
fstpl
pop
rorb
pop
jno,pt
test
lock
in
movsl
loope
push
mov
jl
mov
xchg
mov
jg
push
mov
scas
pop
xchg
mov
sbb
jecxz
es
cmp
cmpsb
jge
repnz
je
and
dec
jp
fcompl
imul
das
push
rorl
mov
xchg
mov
inc
test
push
lods
jle
aad
push
inc
lea
fwait
insl
xchg
push
adc
sahf
xchg
mov
lods
je
and
ljmp
mov
pop
jno
lds
in
cmpsb
pop
mov
mov
leave
ret
pusha
mov
push
pop
cmp
sbb
call
data16
xchg
dec
cmp
in
in
push
inc
jmp
dec
jno
sbb
mov
mov
icebp
fcoml
test
aas
push
dec
inc
fsubl
inc
dec
out
sti
pop
cltd
out
enter
int
scas
loope
or
js
or
iret
ss
ret
push
outsb
add
into
cmp
hlt
add
or
mov
loopne
fdivrs
cmpl
push
mov
clc
movsl
aad
adc
inc
ror
add
push
xor
repnz
adc
lea
pop
popa
mov
sub
fidivl
dec
outsl
inc
mov
or
sahf
lock
lahf
sub
jmp
popa
loope
imulb
cmpsl
into
mov
inc
inc
aad
frstor
icebp
stos
aam
xchg
sub
in
cmp
sbb
jo
xchg
dec
aad
jle
repz
and
in
add
sar
mov
push
jo
cwtl
cmp
movsb
leave
pop
pop
push
sarb
les
or
adc
lods
sti
xorb
jb
xor
and
adc
add
or
pop
jo
ljmp
jle
pop
xlat
or
inc
add
inc
mov
fiaddl
xlat
push
arpl
hlt
fs
mov
jb
xor
lods
mov
xor
jae
mov
insl
cli
ja
testl
mov
adc
and
nop
add
repnz
pop
or
movsl
out
stos
pop
mov
dec
inc
add
mov
xlat
push
andb
mov
sbb
mov
jbe
les
add
mov
jge
xlat
mov
jmp
test
add
adc
icebp
sbbl
pop
mov
pop
and
mov
js
data16
xor
or
and
ret
addr16
jecxz
mov
push
in
loopne
mov
add
cmp
in
in
xor
sti
jmp
call
push
fadds
adc
mov
xor
shl
cmp
xor
inc
push
inc
and
pop
pop
sbb
out
out
dec
push
inc
add
pop
sub
lock
arpl
ss
fwait
sub
dec
mov
jnp
pop
ret
aas
xlat
es
data16
clc
mov
cmp
ja
out
pop
repz
cs
xchg
ret
jnp
push
loop
sbb
addb
push
fisttpll
orb
and
fnstenv
mov
sbb
imul
mov
dec
xor
inc
inc
ds
lahf
add
mov
xchg
pusha
repnz
es
cmp
leave
arpl
stc
fildll
ss
push
or
jns
jo
push
push
cmc
shl
mov
movsb
sbb
push
lds
in
test
shl
xchg
pop
dec
jl
fisubrs
cwtl
pushf
push
pop
rcll
fnstenv
fcmovnu
xchg
in
cld
lret
cli
or
cmp
ret
lock
jns
into
lret
jnp
bound
mov
push
and
push
imul
lds
cmp
pop
jo
mov
ja
or
shl
lods
mov
xchg
out
jno
xor
movsb
movsb
aad
test
mov
dec
mov
in
mov
jne
jae
fadd
mov
push
pushf
push
imulb
rcrb
cmp
aaa
jp
cltd
ja
sbb
and
bound
int3
ret
push
js
add
stos
jo
xlat
testl
lods
cmp
rdmsr
xor
test
mov
testl
xlat
cli
dec
jmp
hlt
es
xor
lods
sub
dec
cmpsl
das
jmp
test
loope
inc
lcall
add
or
push
ss
mov
inc
push
ficompl
ljmp
and
push
ret
dec
mov
addr16
fidivs
jns
aaa
sbb
loop
push
dec
xchg
jmp
jne
ja
sub
dec
xchg
pop
adc
inc
sub
inc
scas
rcl
sbb
xor
sahf
cltd
jg
or
scas
andb
xor
xlat
xchg
pop
pop
stos
stos
dec
pop
push
lds
add
cmp
mov
cli
in
shrl
and
sbb
stos
insl
sti
mov
pop
jmp
outsb
mov
repz
push
xor
dec
ss
mov
cmp
and
mov
push
inc
rcll
or
sbb
jp
clc
fwait
icebp
rolb
mov
in
mov
test
mov
aam
sub
frstor
cmp
jg
aaa
sti
scas
icebp
into
cmpb
shll
int
ja
in
and
imul
pop
les
call
scas
aam
nop
leave
rcll
pop
sti
push
loop
cs
aaa
add
jge
test
aad
std
ja
mov
faddl
mov
stos
push
dec
das
jmp
shlb
ljmp
int3
lods
cli
dec
out
jnp
pusha
lahf
cmp
add
pop
or
iret
inc
inc
pop
add
sbb
aas
xchg
fimull
lds
push
mov
repnz
or
lds
je
xor
mov
out
mov
jecxz
rcrb
lods
pop
data16
dec
repz
lcall
and
add
je
jo
push
lahf
push
pop
and
out
out
cmp
shlb
js
aaa
insl
int
movsl
inc
or
jb
loope
movsl
arpl
push
fsts
xor
mov
pop
std
fwait
cmp
lods
fnstcw
mov
int
or
fst
adc
inc
cli
lahf
pop
dec
in
loope
insl
or
loopne
popf
emms
jb
lret
jo
stc
dec
push
out
cli
sbb
or
out
add
inc
add
push
sbb
push
aas
popf
movsl
add
sub
fwait
add
loopne
add
jb
cmc
dec
pop
pop
cmpsl
out
cmp
jo
sbb
fstpl
cwtl
subl
push
mov
push
or
push
jae
fbld
xlat
int
loope
leave
push
in
lret
ja
mov
lret
xchg
push
pop
cli
or
push
ret
jns
loop
call
pop
add
jl
mov
jne
pop
mov
inc
mov
pop
lods
gs
decl
out
mov
mov
test
cmp
outsb
xchg
jge
push
xchg
ret
es
scas
fiaddl
insb
inc
adc
and
cmp
rorb
in
sub
or
outsl
and
inc
mov
mov
movsl
or
push
les
adc
pop
xchg
mov
xchg
xchg
ret
out
and
dec
jnp
pop
mov
mov
inc
int3
jo
add
notl
jl
arpl
rcrb
in
adc
sti
movsb
shr
popf
into
into
mov
clc
push
xlat
fidivrl
push
scas
ds
mov
subl
jge,pt
xor
inc
inc
push
sub
sahf
pop
dec
sub
insb
pusha
enter
in
cmc
shll
lods
cmp
push
fcoml
add
mov
sub
mov
rorl
imul
xor
leave
lods
sub
andb
or
mov
fisubs
sbb
sbb
lods
push
cmpsb
mov
pop
push
pop
js
das
int3
in
insb
push
mov
outsl
neg
repnz
inc
lahf
cltd
syscall
push
sbb
xor
jne
ror
test
fidivrl
loope
test
push
loope
mov
mov
xchg
inc
das
add
sub
rcll
lds
jmp
or
int3
imul
scas
rorl
fsts
movsb
test
std
loope
loope
sub
stc
loope
aam
nop
pusha
repz
stos
addr16
in
stos
inc
inc
lods
cmp
daa
lock
push
fstl
subl
pop
lret
in
push
mov
add
and
or
out
pop
shl
fsubrl
push
insb
test
arpl
inc
sub
test
pushf
fistpl
mov
sub
outsl
push
lock
xchg
mov
fs
jle
outsl
je
pop
adc
std
add
lret
test
mov
xor
and
and
and
sbb
and
cld
idivl
mov
xor
test
adc
jb
movsb
rcrb
mov
jmp
cmc
dec
add
jg
or
ljmp
jns
mov
enter
repnz
lcall
enter
jns
cmp
mov
sbb
mov
cmp
int3
mov
add
insb
je
jecxz
sub
cmp
cwtl
cltd
arpl
pop
jmp
dec
or
dec
cmp
dec
ficoml
xchg
adc
mov
cmp
je
push
scas
jmp
movsl
fsubrp
push
leave
mov
pop
mov
jne
ja
popa
addb
cs
je
repz
lcall
movsb
jb
int
xchg
or
sub
mov
ret
mov
notb
xor
test
stos
push
xchg
dec
syscall
stc
into
add
adc
andb
inc
mov
ja
in
dec
andl
loop
add
mov
icebp
dec
cwtl
lret
aaa
hlt
inc
int3
inc
aas
xchg
sbb
jns
xchg
dec
repnz
mov
cli
sbb
xor
shr
adc
es
xchg
adc
xchg
mov
rolb
scas
fcoms
inc
xchg
repz
add
pop
mov
int
jmp
mov
insb
xchg
or
sbb
xlat
inc
dec
cwtl
cld
jp
mov
mov
jne
test
dec
fstl
shll
jns
lea
in
lea
ret
or
cmp
push
fldl
adc
push
roll
xchg
sti
test
daa
mov
inc
aas
in
mov
lret
mov
dec
fiaddl
movsb
lock
popf
fisubrl
test
std
sbb
xchg
inc
push
mov
hlt
out
adc
test
and
cmp
xor
sub
dec
es
or
push
xor
mov
mov
fs
dec
xchg
fidivrl
sbb
fdivrp
pop
jle
je
adc
outsb
mov
rcr
sar
push
jo
jnp
lods
lods
cmp
ret
dec
pop
xor
push
aaa
rcrb
xchg
subb
hlt
inc
test
lret
push
add
ss
bound
adc
jo
inc
sbb
lea
jb
cmp
es
xchg
pop
or
xchg
push
fmulp
mov
repnz
add
mov
xor
or
pop
xor
mov
and
push
push
xchg
movsl
cli
cmp
add
dec
pop
scas
shlb
insb
aas
inc
mov
shrl
fbstp
jmp
lahf
dec
and
sub
cmpsl
lods
inc
popf
and
pop
daa
movb
cli
inc
sbb
adc
orb
sub
pop
xchg
fs
and
adc
xor
add
cltd
in
aaa
stos
lret
inc
sar
jg
pushf
push
push
add
jp
test
or
and
sbb
enter
mov
scas
adc
je
cltd
lods
mov
cli
and
fcoml
arpl
xchg
punpckhbw
jl
pop
xor
imul
movsb
popf
popf
mov
mov
sbb
jns
mov
push
das
mov
ja
xchg
and
jecxz
iret
inc
xor
and
test
add
cmp
pop
insb
loope
leave
cld
push
push
inc
es
out
push
fists
adc
ficomps
adc
mov
pop
and
push
mov
clc
and
in
jecxz
push
gs
and
jmp
fstpl
testl
xor
arpl
push
dec
es
jae
mov
and
addr16
leave
mov
xor
ss
ljmp
adc
mov
mov
loope
mov
jecxz
mov
add
push
mov
sub
lahf
sbbl
shrl
fdivrl
in
lcall
mov
stc
add
xor
push
inc
and
push
popa
xchg
cli
jae
jae
xorl
adc
jecxz
repz
repz
sbb
fldcw
and
enter
xchg
out
pop
pop
outsl
add
sub
push
pushf
repnz
movsb
xchg
sbb
ljmp
xor
sub
mov
das
xor
cmp
mov
add
mov
les
aas
inc
cmp
lret
push
inc
and
add
divl
es
jle
lods
dec
jl
imul
nop
insl
jecxz
repnz
sbb
rcll
inc
dec
iret
cmc
inc
add
mov
push
mov
loopne
or
jae
cld
adc
or
jle
mov
jp
mov
xchg
push
stc
insb
push
dec
cmp
lcall
jnp
xor
dec
rcrb
lods
dec
imul
test
fwait
cmp
cmp
mov
into
mov
aas
jne
or
lret
push
dec
outsl
jge
pop
fdivrs
adc
scas
cmc
mov
adc
add
cmp
inc
pop
cmp
je
int
es
jno
adc
xchg
mov
aaa
push
jg
jne
sub
cmp
pop
dec
pop
mov
mov
out
nop
jbe
mov
cmpsb
loopne
cmp
mov
adc
sbb
les
cmpl
xchg
sbb
and
mov
mov
xor
cpuid
inc
pop
mov
test
pop
add
outsb
sbb
push
push
dec
adc
cs
jl
notl
je
or
jge
mov
mov
mov
notb
xchg
loopne
in
jae
scas
rcl
bound
adc
gs
or
loop
and
out
cmc
ja
aam
cs
scas
sbb
mov
ss
mov
std
cs
into
flds
adc
popl
sub
orl
fldt
test
jmp
mov
add
sarb
xchg
mov
mov
inc
lea
and
bswap
xchg
cmc
jo
test
test
adc
cmp
inc
aad
add
jnp
cmp
jle
mov
adc
pop
dec
cmp
mov
jns
ret
jl
push
mov
xor
or
mov
aas
mov
push
jecxz
insb
fwait
add
jns
leave
cmp
push
mulb
jmp
leave
mov
shl
jmp
outsl
in
pop
cmpsb
pop
mov
xchg
mov
push
jg
in
xlat
push
std
mov
xor
nop
add
orl
inc
out
bound
xchg
lcall
fwait
out
xor
lea
out
pop
jne
lret
insl
dec
repz
sbb
jge
aas
sqrtps
imul
into
jae
push
in
out
add
addl
test
aaa
loopne
adc
fdivr
test
popf
int
hlt
sbb
mov
and
aam
cmp
dec
xchg
mov
mov
aaa
int3
mov
scas
nop
rolb
mov
pushf
ficoms
adc
into
add
or
pop
sar
lret
dec
add
in
push
rcrb
xchg
outsl
loopne
repnz
insb
shr
sbb
lcall
nop
xor
out
xor
popf
jb
ret
mov
cmp
je
mov
loop
repnz
rcrb
fs
out
inc
out
mov
mov
cmp
adc
repz
std
les
dec
jns
les
lret
push
push
push
sub
call
loope
sub
mov
into
sahf
imul
adc
jne
push
loopne
adc
jmp
popf
sbb
fs
into
orl
adc
repz
inc
fwait
jmp
test
xchg
inc
pusha
pop
fcoms
out
push
roll
iret
sbb
ja
inc
cli
sbb
inc
cli
mov
jb
dec
pusha
outsb
push
push
xor
bound
add
inc
and
sub
adc
stc
sbb
out
pop
dec
jecxz
cli
add
stc
out
sub
outsb
or
prefetch
cmp
pop
mov
and
mov
js
jmp
repnz
out
jmp
or
mov
stos
divl
jmp
and
push
test
lret
leave
mov
adc
xor
addr16
ds
or
sub
sub
shlb
inc
dec
mov
xor
sub
ljmp
notl
rclb
leave
pushf
pop
xchg
mov
sti
jle
cmpsl
add
mov
stos
push
xchg
cmc
test
add
mov
cmp
outsl
sbb
rolb
aad
dec
js
pop
sbb
mov
adc
int3
scas
and
add
fadds
jnp
scas
out
aad
rcrl
mov
icebp
or
test
adc
mov
mov
enter
into
mov
lret
rolb
cmp
lcall
mov
and
jnp
lret
pop
inc
pushf
popf
mov
arpl
mov
je
das
and
mov
xor
cmp
pop
movsb
mov
inc
mov
pop
push
into
mov
insl
pusha
or
mov
test
mov
dec
push
mov
xor
xchg
lret
ja
jne
pop
ret
xlat
sbb
fsubr
xor
mov
pop
fsubr
sub
lods
dec
ja
test
mov
cwtl
adc
insb
subb
mov
nop
sub
dec
popf
cld
mov
insb
pop
jp
adc
inc
pop
jnp
sub
in
in
xchg
xchg
lds
adc
cltd
mov
push
cmp
sbb
push
jecxz
xchg
push
dec
hlt
xor
jns
pusha
call
mov
mov
les
mov
lods
jnp
lahf
jmp
aaa
pop
mov
cmp
ljmp
idivl
push
sub
and
push
rcll
lock
lock
mov
mov
leave
cmp
rolb
push
inc
sar
mov
inc
js
pusha
lcall
mov
and
jecxz
jbe
inc
movsb
push
mov
addb
pop
or
or
enter
add
in
ljmp
xorb
repnz
addr16
scas
push
or
mov
not
daa
pop
lods
ficomps
add
shlb
mov
lcall
and
pop
mov
sbb
pusha
push
pop
into
rcl
pop
aas
shlb
fisubrl
mov
es
or
bound
jo
mov
or
lds
lahf
movsl
fwait
inc
mov
outsl
push
mov
adc
push
les
fldenv
stos
or
mov
pop
dec
rcrl
mov
sub
cmpsl
xchg
and
call
test
push
cs
popa
xor
aas
mov
xor
xlat
push
push
jg
fistl
xor
push
mov
jo
xchg
addl
xchg
int3
cmp
scas
or
adc
mov
stos
ja
mov
aad
pop
hlt
mov
mov
and
js
xor
and
xor
cld
lret
nop
pop
mov
gs
push
dec
aas
inc
pop
std
xchg
popa
outsb
sub
cs
jecxz
jne
ret
cli
jecxz
pop
js
push
loop
jno
xor
je
lcall
add
add
and
dec
scas
xor
cmp
jecxz
leave
adc
jmp
inc
stc
test
and
idivl
pop
and
jge
sub
insb
inc
andps
fwait
jne
pop
loope
xchg
lds
add
ss
cmp
jge
dec
rorb
stc
das
xor
and
int3
jecxz
lret
bound
add
loope
sbb
test
fdivs
push
mov
dec
push
into
dec
test
adc
dec
lea
push
add
pop
mov
mov
xor
bound
sahf
push
lods
jno
std
loop
lret
ret
cmp
fmuls
mov
adc
xor
jns
sub
lahf
testb
mov
pop
in
in
jecxz
clc
xchg
aaa
or
cld
push
nop
mov
mov
std
fisubrs
or
dec
or
jns
test
lret
and
std
pop
fnsave
scas
pushf
pop
pop
jno
arpl
aam
movl
mov
jmp
les
clc
and
jge
repnz
addl
popa
xchg
jl
insb
push
lods
call
xchg
fwait
stc
mulb
es
roll
pop
pop
sahf
outsb
mov
pop
addr16
xlat
jbe
mov
int3
xlat
push
shrb
data16
cld
aas
sar
out
movsl
shr
mov
or
fimuls
cmp
js
lds
jae
pop
inc
fucomp
xchg
fnstenv
xchg
sub
gs
cmpsl
sub
ror
mov
enter
cmp
sub
adcb
cmpl
imul
das
jne
cltd
out
pop
jmp
xchg
mov
add
test
push
mov
xchg
mov
sbbl
add
mov
sbb
shrb
rolb
and
popa
sar
sbb
icebp
mov
aam
rcrb
mov
daa
and
jno
ss
rclb
mov
mov
movsl
adc
mov
dec
aaa
sub
pop
lahf
adc
jmp
adc
push
dec
and
arpl
push
xor
sub
call
inc
inc
sti
xchg
or
inc
int3
xchg
popa
lods
jae
sbb
inc
add
ficomps
sbb
es
fcmovb
clc
jno
inc
inc
cmp
repz
std
mov
xchg
int3
add
and
xchg
and
add
or
rcll
arpl
stos
aaa
jnp
and
aaa
mov
add
clc
test
dec
add
dec
imul
or
leave
jns
loop
in
mov
xchg
lds
pop
add
icebp
and
xchg
test
xor
cmc
pushf
inc
leave
enter
cltd
aam
push
inc
fsubl
dec
test
dec
movl
sbb
in
iret
add
aad
jb
xchg
int3
lret
clc
adc
lcall
hlt
add
inc
mov
mov
mov
mov
mov
xor
xchg
mov
or
icebp
cwtl
gs
pop
popf
insl
or
pop
dec
lock
mov
mov
or
in
cmpsl
and
jo
jecxz
xchg
mov
ss
push
and
hlt
mov
pop
inc
inc
cmp
or
xor
in
jbe
add
cs
cs
test
popa
mov
pop
mov
cmp
into
addr16
dec
push
pop
mov
fiadds
add
mov
xor
push
or
jmp
loope
push
pop
add
insl
push
jne
and
sub
cmp
test
cmpsl
cmp
imul
pop
fimuls
lds
xor
mov
inc
sbb
jge
jg
cwtl
jnp
mov
mov
in
sbb
add
or
mov
cmpsl
mov
cmc
or
jmp
lock
sbb
mov
sub
cli
cld
insb
mov
mov
mov
das
movsb
inc
add
add
loopne
sbb
addr16
inc
jae
cmp
fwait
push
cmp
mov
scas
sub
xor
movsb
push
popa
mov
lret
fisttpll
lret
call
insl
fwait
sbb
mov
or
sub
fisttps
jl
inc
mov
cltd
imul
jg
dec
and
xlat
je
pop
cmpsl
sahf
pop
push
and
int
mov
lods
pop
inc
mov
or
mov
flds
pop
dec
leave
mov
or
cmc
ret
das
outsb
test
pop
sar
testl
in
add
arpl
out
mov
sbb
pop
jg
fbstp
jmp
roll
mov
cmp
and
xor
inc
dec
movsl
jmp
int
sti
inc
int3
iret
or
adc
clc
inc
and
ljmp
xchg
adc
mov
and
inc
pusha
fidivl
cmpl
stc
jge
or
aam
mov
mov
scas
sub
push
int3
add
stc
cs
sub
or
mov
loop
test
shl
jb
imul
rolb
movsl
xchg
cmp
pusha
sbb
push
je
mov
jecxz
insb
sahf
andl
pop
cmp
je
sbb
push
insl
fisubrl
std
mov
mov
das
leave
mov
sub
sub
inc
frstor
push
out
into
cmp
xlat
mov
sbb
mov
fiaddl
lods
loop
and
scas
push
inc
das
jnp
or
sub
pop
cmp
sahf
mov
mov
addr16
fwait
rcl
mov
mov
jns
sbb
ficoms
ljmp
xchg
imul
mov
xchg
dec
cmpl
pop
or
inc
cmp
sub
sbb
insb
cmp
cli
outsl
pop
jmp
jle
pop
loope
aas
mov
push
in
xor
jo
and
jmp
sbbb
psadbw
popa
sub
pop
rcl
leave
cmc
aad
imul
and
test
mov
push
insb
das
hlt
mov
xor
add
call
aam
push
inc
daa
dec
imul
bound
adc
shl
sbb
mov
dec
fldl2e
mov
xchg
call
mov
mov
pop
loope
sub
test
add
push
adc
and
or
jmp
enter
sub
jbe
jnp
sbb
fwait
bound
push
and
daa
add
or
mov
adcl
cmp
pop
ret
aas
stos
sub
dec
mov
lahf
xchg
xor
jnp
inc
ds
inc
push
mov
aaa
mov
cmp
aaa
outsl
in
movsl
cmp
sahf
jg
or
and
idivb
je
leave
mov
mov
mov
push
rol
xorl
ss
push
cmp
outsl
mov
xor
and
aam
je
jne
in
bound
xchg
mov
fstl
jecxz
add
je
stos
mov
inc
push
fisttpll
das
add
loop
dec
orl
rcrl
scas
sub
lods
jge
push
or
aaa
pop
pushf
cmp
cld
sub
cmp
or
aam
mov
jae
xchg
cmp
in
lcall
mov
xchg
adc
lods
push
lret
orl
pop
jno
or
xchg
xchg
test
and
outsb
cmpsb
jl
mul
jnp
sahf
dec
or
mov
cld
sahf
iret
push
fcmovu
mov
sub
stos
mov
xor
dec
push
xlat
mov
jp
sbb
pushf
inc
cli
dec
cmp
shrb
jne
aad
push
add
and
pop
dec
call
loopne
iret
shl
pop
stc
jl
scas
enter
inc
and
sub
je
mov
arpl
xorl
dec
shll
pop
xor
mov
sti
notb
pusha
lea
les
mov
fcoms
orb
out
inc
sbb
xlat
outsb
pop
inc
hlt
inc
incl
adc
popa
int
test
adcl
adc
dec
stos
cmpl
arpl
and
xor
adc
push
jne
sub
daa
xor
mov
lea
sub
popf
shll
movsl
roll
and
lret
adc
cwtl
jecxz
ret
jb
xchg
push
and
sbb
hlt
cmpsb
cmp
movsl
push
mov
adc
adc
pusha
fildll
lret
mov
ja
lahf
lret
stos
xor
popf
repz
loop
nop
mov
mov
or
jns
notb
mov
repnz
xor
sbb
xor
adc
ljmp
push
add
ja
sbb
js
pop
xchg
and
cmp
shlb
xchg
pop
adc
mov
mull
mov
mov
mov
mov
add
xchg
mov
ret
dec
bound
jno
mov
imul
rolb
bnd
mov
in
pop
mov
jns
xchg
mov
and
rorl
pop
push
imul
push
push
lret
in
mov
xlat
or
stos
cmp
mov
cld
sbb
jns
jecxz
cmp
lods
cmpsb
pop
pop
incb
and
andl
int3
test
lock
mov
inc
jo
or
cmpsb
cltd
ds
cmp
mov
push
imul
out
testl
je
adc
add
sbb
loop
hlt
sub
push
inc
out
sahf
mov
ffree
inc
loopne
dec
mov
cmp
sbb
sub
movsl
lea
or
mov
std
and
in
out
loope
loop
shl
xchg
repz
aaa
add
ret
push
xchg
outsl
lds
shlb
push
out
cwtl
outsl
ror
sbb
adc
inc
xor
pop
lea
xchg
add
andl
push
push
mov
mov
or
sub
mov
xor
cmpsb
inc
add
scas
insb
sbb
or
cltd
flds
ljmp
and
inc
ss
std
int
ja
add
rorb
mov
enter
pop
int3
mov
mov
cmp
and
or
daa
sbb
adc
into
aas
sarw
add
cmp
fidivrs
push
inc
jge
push
cwtl
je
xor
les
insb
mov
push
into
cwtl
pop
mov
mov
mov
dec
repnz
faddl
xchg
outsb
jecxz
xor
and
and
dec
sbbl
stos
and
ret
jmp
popf
mov
test
enter
pop
and
sbb
or
mov
xlat
repnz
es
fwait
popf
int3
adc
in
xorl
sub
bound
test
ret
loope
outsb
pop
mov
inc
ss
movsl
pop
cmp
push
rcrl
lahf
xchg
jns
cmp
jne
mul
bound
movsl
push
xchg
or
hlt
fidivs
in
sbbb
cli
and
in
pop
push
jl
mov
sub
cmpsl
mov
popf
loope
fwait
jecxz
push
ds
xchg
xor
xor
inc
lcall
mov
sar
iret
sub
mov
fbstp
add
sub
cld
fsubr
hlt
mov
push
fucomip
dec
popa
mov
lret
adcl
dec
inc
ss
push
cwtl
pop
imul
or
sbb
std
add
xor
fnstenv
mov
imul
je
leave
jge
dec
sti
stc
incb
xor
aas
outsb
in
cmp
push
scas
xor
stc
add
mov
jno
push
push
ficomps
mov
dec
mov
stos
cli
pop
stc
inc
pop
push
bound
fsubrl
cmp
xchg
pop
sahf
sahf
cmc
xor
shrl
das
inc
cmpsl
sub
clc
pop
mov
push
pop
ffree
shll
pushf
xor
loopne
call
pop
pop
xorl
test
mov
rcll
add
or
dec
adc
and
sbbl
and
jl
xor
mov
push
test
popa
bound
lods
aas
xchg
psrlq
in
mov
rorl
sub
inc
and
mov
jg
mov
cmp
sub
inc
std
adc
inc
dec
pop
cmp
sub
adc
and
mov
push
fiaddl
pusha
iret
cmp
adc
sub
ret
test
aaa
push
js
test
mov
pop
push
jne
push
xor
loop
lahf
aas
test
pop
mov
mov
lahf
adc
sbb
aas
pop
es
xor
sbb
notl
jae
imul
adc
cli
aad
nop
pop
mov
jecxz
jmp
cmp
mov
sbb
push
mov
cmpsl
fidivl
int
pop
mov
mov
out
push
pop
testl
jp
les
mov
or
push
mov
push
cmp
fidivrs
sbb
xchg
test
push
sahf
jbe
and
enter
pop
cmp
pop
stos
nop
adc
cmp
imul
data16
cli
adc
push
mov
push
push
lock
xlat
jae
or
daa
mov
ljmp
sbb
scas
add
dec
jecxz
push
push
es
and
mov
xchg
loopne
jb
cmp
jae
stc
enter
insl
mov
dec
add
adc
push
jge
jno
cld
scas
or
cmp
out
cli
fidivl
mov
testb
xchg
jb
jp
mov
push
or
sub
test
mov
pop
pop
cld
je
push
jmp
das
mov
or
es
fildll
outsb
lcall
data16
mov
dec
push
repnz
aas
add
ret
scas
jns
jmp
add
mov
mov
xor
and
dec
aas
pop
fisttpll
and
xchg
mov
xor
addl
lods
out
in
pop
mov
pop
orl
adc
rol
mov
add
cmpsb
push
int3
test
pop
xor
sub
loop
jb
or
sub
mov
fwait
push
sbb
jl
addl
rcr
pop
push
ror
loopne
sub
push
rol
ret
xchg
daa
push
rol
inc
jno,pn
or
into
dec
or
mov
jle
lock
fildll
ds
sbb
cmpsb
sahf
adcl
jb
repz
mov
xchg
stos
add
xchg
inc
arpl
xchg
inc
xor
inc
in
fists
xchg
jb
mov
pop
lds
xchg
cs
test
mov
aad
xchg
gs
inc
xchg
xor
mov
notl
repz
lods
lcall
adc
sub
in
in
jmp
pop
sbb
jmp
fistl
insl
xchg
fisttpll
xchg
pushf
xchg
jbe
push
icebp
push
push
xchg
push
ret
movsb
inc
pop
rcr
outsl
mov
sbb
inc
addr16
mov
push
leave
and
pop
mov
test
inc
sbb
push
mov
push
sub
and
bnd
jmp
sti
jmp
fbld
fwait
dec
jnp
bound
ficoms
mov
les
jno
mov
sub
mov
or
cld
and
and
test
int3
pop
cmpl
or
js
pop
pop
imul
mov
cmp
es
cmp
inc
repnz
push
cmp
leave
int
pop
out
jns
adc
icebp
mov
cmp
pop
ret
test
std
cmpsb
push
ds
pop
mov
test
pop
hlt
lods
push
stos
imulb
add
pop
loopne
mov
lods
ja
mov
fstps
call
sbb
mov
stc
push
rclb
cmp
cmp
mov
data16
push
add
pop
fdivs
dec
imul
and
addl
push
cmp
stos
js
aaa
flds
xchg
cltd
mov
or
ss
inc
push
sbb
pop
call
sub
mov
jmp
ljmp
cmpsl
test
mov
sub
ret
int3
inc
jbe
add
pmaddwd
xor
pop
fbld
pop
movsl
mov
jmp
push
ret
or
sub
dec
test
sub
fidivl
sti
add
push
push
mov
mov
inc
inc
add
call
leave
or
pop
fstpt
iret
push
notl
push
sbb
inc
xorb
mov
add
repnz
ljmp
jns
add
aaa
jmp
jnp
pop
mov
and
xchg
mov
jg
pushf
out
je
mov
jg
xchg
and
lods
xlat
scas
nop
inc
fstps
xor
sub
sub
daa
cmpsl
lods
push
sbb
jae
adc
mov
call
cmp
mov
xchg
stos
cwtl
jp
scas
into
pop
mov
gs
ss
ds
cmc
stos
arpl
xchg
xchg
mov
cwtl
testb
xchg
adcl
outsl
xchg
imul
jle
push
xchg
inc
loop
or
jg
jmp
cld
mov
push
xchg
addr16
arpl
aas
adc
dec
or
sbbb
movsb
push
jle
fwait
idivl
lods
cli
dec
adc
mov
xchg
test
push
xchg
push
pop
and
xchg
push
lret
popf
test
sub
fs
addr16
out
adc
cmp
aas
xchg
in
mov
icebp
ficomps
pop
out
pop
cmp
ljmp
fstpl
add
xor
jnp
dec
nop
out
jl
in
inc
or
sub
jno
mov
jne
sub
dec
andl
jg
mov
push
shl
xor
or
jmp
nop
pop
adc
rclb
xorb
jmp
fidivrl
int3
mov
push
adc
adc
xor
push
shll
jne
aas
or
fistpl
adcb
das
dec
gs
inc
sub
jecxz
push
loope
ljmp
add
push
push
pop
aas
ror
aaa
daa
paddusw
mov
add
je
lea
xchg
jno
add
mov
lods
pop
adc
sbb
out
mov
push
fmull
adc
ds
push
mov
sarl
lret
mov
adc
fdivs
arpl
ret
lods
std
sahf
pop
mov
dec
mull
adc
mov
imul
cmpb
aad
call
and
pop
pop
sbb
mov
setg
mov
fimull
adc
jg
xchg
out
adc
fimull
ja
pop
adc
aad
push
inc
ds
xor
cltd
sub
pop
mov
xchg
int
clc
mov
dec
jg
mov
pop
arpl
add
xorb
movsb
ret
jle
btc
rorl
incb
sub
cmpsb
xchg
sbb
les
in
inc
repz
aam
fdivr
les
pmaxub
shrb
sti
push
data16
xchg
in
mov
sub
test
cmp
outsl
mov
pop
hlt
push
pop
add
shrl
out
pop
std
fdivr
popa
iret
aaa
mov
shr
rorl
lods
sub
xor
adc
nop
insb
push
mov
push
sahf
and
mov
es
sahf
sbb
pop
aaa
push
mov
inc
xor
or
ljmp
pop
repnz
rorb
test
pop
jno
add
dec
cmp
jg
inc
push
pop
mov
pop
addl
sbb
push
aas
sub
jl
add
add
cmp
add
cmp
sub
inc
call
jp
cmp
push
imul
jne
xchg
sarb
sbb
fistps
testb
jae
add
test
cmc
stos
xchg
cmp
mov
or
fwait
push
push
pop
aaa
mov
inc
mov
mov
push
test
push
mov
pop
es
aas
push
fisubrs
test
rclb
das
dec
repnz
nop
xlat
int3
test
incb
mov
mov
jg
mov
lret
aas
pop
shlb
int3
cld
fbstp
add
pop
dec
inc
add
repz
hlt
in
jp
stc
inc
mov
je
push
addr16
pop
cmc
popa
xchg
testl
pushf
les
rcl
dec
jns
adc
stc
mov
mov
scas
and
pusha
sub
fwait
aas
ljmp
icebp
test
jmp
mov
dec
xchg
push
test
fbld
xor
es
push
jl
stos
cmpsl
jl
scas
ret
xor
inc
cmp
add
mov
push
test
add
iret
fwait
ret
sbb
and
cmp
xchg
iret
xchg
sbb
pop
lcall
addr16
mov
cmc
jb
pop
mov
mov
imul
gs
pushf
dec
pop
arpl
ret
fiadds
roll
pop
or
lret
clc
inc
cmp
movsl
movsl
sar
mov
add
sub
cmp
sub
addl
mov
xchg
mov
dec
sub
jbe
and
mov
jo
pop
dec
cmp
push
add
or
push
sbb
or
scas
pop
stos
scas
test
jb
inc
xchg
clc
xchg
pop
stos
out
add
add
sbbb
sahf
cmp
iret
pop
sbb
ds
imul
sbb
pop
fiaddl
movsl
fwait
nop
lret
cwtl
pop
xlat
jmp
cmc
xchg
inc
test
mov
in
call
fsubl
cmova
and
enter
sub
push
int
xor
push
or
outsl
in
cmpsl
lock
loope
loop
sbbl
and
clc
rorb
dec
fs
dec
popf
addl
test
adc
loope
dec
push
pop
jecxz
pop
pusha
pusha
cmp
push
out
push
je
test
les
jbe
in
inc
in
adc
in
adc
xlat
jecxz
push
mov
dec
popa
outsl
push
sti
faddp
gs
or
inc
push
cmp
les
add
popa
mov
das
xchg
fs
lahf
repnz
sub
lods
arpl
rclb
mov
add
add
aas
and
negl
adc
cmpsb
and
dec
ja
dec
sub
std
sbb
mov
xchg
lret
lret
cmp
jbe
hlt
mov
add
xlat
test
cmp
out
cwtl
mov
jae
orb
push
aam
sub
addb
jmp
mov
outsl
push
in
cmp
aad
add
adc
cmc
call
push
inc
xchg
and
jp
push
fcomps
jge
test
add
push
mov
push
push
dec
imul
add
mov
stos
add
mov
les
mov
mov
les
imul
sub
cwtl
and
addr16
daa
pop
pop
mov
int3
gs
xchg
pop
mov
js
je
inc
pop
pop
cmp
cli
das
fistpl
inc
out
adc
cwtl
stos
cmp
jecxz
add
cmp
clc
out
stos
inc
cwtl
cmp
mov
lods
es
or
dec
jae
cld
jae
jp
push
push
push
push
loope
pop
repnz
dec
jg
cwtl
movsl
jb
or
dec
pushf
insl
and
dec
pop
jp,pn
fldl
mov
out
cmpsl
inc
inc
add
jb
sub
frstor
mov
repz
sub
xchg
mov
cld
bound
jmp
push
fwait
mov
enter
adc
pop
pusha
cmpsl
decl
loop
fidivs
jbe
mov
fadds
xor
jg
or
shlb
xor
lcall
popf
xor
sub
out
pop
gs
cmp
sub
scas
inc
subb
bound
jle
mov
gs
scas
xchg
adc
mov
push
insl
jge
jnp
pop
stos
lret
jo
out
cmc
mov
f2xm1
mov
daa
jnp
mov
hlt
call
jl
shrb
fucomi
imul
sahf
pop
cld
mov
jnp
into
push
loope
jne
sub
cwtl
loope
in
in
mov
xchg
mov
fimuls
in
idiv
aam
enter
arpl
shlb
popa
push
iret
fsubs
mov
imul
dec
push
adc
jle
hlt
or
pop
shrb
jns,pn
orl
add
mov
jg
pop
add
fldl
and
adc
sub
pop
scas
sti
pop
xor
ret
mov
int3
push
fwait
aas
call
cmp
mov
rcl
mov
ret
sete
decb
fisubl
cmp
pusha
test
stos
mov
and
adc
jge
pop
mov
inc
ds
cmp
push
jl
aad
add
out
gs
das
xchg
in
pop
xor
jle
inc
into
pop
popf
jo
dec
loop
leave
in
popa
in
xor
inc
inc
lods
insb
sub
sbb
push
outsl
lret
cmp
add
cwtl
mov
movsb
inc
xor
mov
adc
out
daa
das
or
push
js
fisttpll
jbe
insl
data16
std
addl
das
addr16
mov
iret
adc
inc
jo
xchg
mov
or
and
mov
adc
cmp
push
jmp
nop
aad
push
jb
call
pop
xchg
cmpsl
lods
dec
and
xchg
aad
cmpl
sub
xchg
orl
test
sahf
sbb
std
xchg
jnp
add
aas
sbb
jle
or
cltd
sbb
mov
or
dec
pushf
lret
or
pop
pushf
sub
js
inc
test
xor
ficomps
in
xchg
sub
jnp
in
jb
ja
xchg
adc
and
ret
mov
sbb
inc
xchg
jmp
incl
or
in
sbb
mov
xor
pop
cmpsb
jmp
jo
loopne,pn
xor
ret
pop
cmpsl
sub
and
fildl
outsl
mov
lea
or
mov
fwait
cmp
jle
std
hlt
or
adc
subb
and
imul
fsubs
mov
jmp
hlt
sub
and
cs
enter
jge
jle
mov
inc
add
cmp
xchg
rclb
int3
nop
inc
scas
mov
hlt
mov
sub
inc
or
add
push
and
xchg
aad
lods
cmp
rcll
cli
mov
dec
jae
pop
sub
sub
sarb
xor
int
dec
add
movsl
popa
add
jmp
mov
add
mov
pop
push
dec
pop
shll
aaa
inc
mov
dec
adc
inc
push
adc
adc
rclb
cmp
popf
daa
in
aaa
aad
mov
push
js
sub
sbb
cld
fneni(8087
andl
ja
xchg
adc
push
and
lret
add
sub
xchg
inc
pop
fmul
push
iret
push
push
jo
inc
cmp
inc
lods
enter
dec
sti
jno
fld
sub
inc
push
stos
xor
pop
sub
sbb
xchg
cmp
push
xor
or
pop
movsl
idivb
les
mov
xor
jno
xor
jl
aaa
lahf
arpl
scas
or
or
pop
xchg
inc
cmpsb
pop
mov
sbb
test
pop
into
shrb
mov
rclb
dec
fwait
sbb
aam
repz
lahf
and
sub
xchg
push
subb
mov
dec
nop
cmp
cmp
stos
call
mov
out
pop
jo
outsb
mov
lock
lcall
inc
push
sub
repnz
lods
hlt
add
cmpsl
add
mov
push
sti
sbb
imul
xor
sub
mulb
xchg
in
and
lods
popa
lods
cmp
movsb
cmp
repnz
inc
pop
popa
xor
xchg
test
xchg
test
pop
dec
pop
jae
jbe
in
add
xor
aad
incl
lods
insb
xchg
pop
xchg
jp
stc
pop
jo
pop
inc
xchg
cmp
inc
sub
adc
xchg
pushf
imul
mov
inc
iret
jne
adc
jl
outsb
mov
sub
push
fwait
dec
adc
adc
insb
xor
imul
fxch
cmpsl
test
mov
cld
test
pop
lods
in
daa
jmp
rcll
test
fs
sti
pop
push
in
mov
jnp
mov
out
pop
mov
adc
sbb
xchg
mov
pushf
cltd
mul
dec
jge
push
lock
cmp
cmpsl
fists
pop
and
mov
mov
push
mov
std
xor
movsl
push
and
insl
jecxz
xchg
ret
and
jle
enter
cmp
or
mov
pcmpgtb
dec
inc
je
sbb
pop
pop
add
or
aad
lock
adc
xor
push
add
or
jge
sbbl
sub
lcall
push
lea
leave
push
cmp
add
imul
fnstsw
insl
cmp
cmc
fistl
mov
std
xchg
cltd
sbb
push
test
dec
pop
shlb
icebp
test
mov
mov
ss
movb
fsubs
inc
xor
sub
lods
push
outsl
dec
jo
sub
xchg
je
loope
dec
add
aam
nop
fiadds
or
fsts
stos
scas
pop
pop
pop
sub
push
jae
pop
mov
jp,pt
popf
lahf
loop
add
add
inc
pop
lahf
loopne
sbb
sub
and
repnz
or
test
jo
pop
pop
push
pop
lret
push
xorb
mov
loopne
int
lods
popa
jno
push
lds
mov
mov
repnz
adc
fildl
loop
sar
out
adc
push
xor
xchg
inc
xlat
scas
data16
decl
std
ficoms
adc
repnz
aam
cmp
inc
fcoms
notl
pop
sahf
lcall
and
lret
jle
or
enter
inc
mov
stc
out
xchg
adc
dec
sub
dec
mov
adc
add
andl
sbb
in
arpl
jns
cmp
pop
mov
xlat
jno
fs
mov
mov
mov
sbb
lret
lret
sub
stc
jge
ds
sbb
leave
je
sub
call
addr16
mov
add
dec
data16
aad
cmpsb
testb
ret
rcrl
fs
nop
add
adc
push
mov
xor
jb
dec
outsb
jmp
test
pop
dec
ljmp
pop
pop
fmuls
push
call
xor
loop
adc
insb
sbb
movsb
int3
or
stos
inc
pusha
xlat
outsb
in
and
mov
xchg
mov
stos
push
hlt
xchg
int3
enter
data16
enter
inc
pushf
cmp
mov
scas
lods
add
in
icebp
sub
mov
jmp
xorl
out
jns
sub
cmp
and
cli
test
mov
pop
mov
add
test
lcall
add
xchg
mov
call
movsb
out
aas
sbb
lea
popf
cmc
cli
sub
lret
dec
ljmp
jmp
idivl
dec
mov
cmpsb
imull
xchg
cmpsb
push
ficompl
je
lods
jnp
and
in
jno
cld
dec
lahf
ret
jno
in
fs
jmp
cmpl
adc
aaa
mov
xor
and
lock
add
aaa
movl
ret
stos
push
mov
xchg
aas
js
fidivrs
dec
insl
mov
sbb
add
dec
test
mov
xchg
lods
push
cmp
sub
xchg
xor
xchg
push
rcl
sbb
or
dec
stos
sub
sub
add
pushf
test
sub
xchg
imul
std
insb
cld
and
or
xor
xorl
xchg
faddl
xchg
gs
dec
rorl
inc
jge
ret
mov
aam
or
js
or
pushf
mov
popa
dec
inc
pop
inc
xchg
mov
mov
inc
test
pop
and
and
in
gs
in
sub
pushf
leave
cmp
mov
fldenv
push
icebp
sub
stc
pop
mov
sahf
or
outsb
repz
push
minps
xchg
xor
push
mov
rorl
in
mov
jae
xor
sub
push
std
in
jnp
cmp
je
xchg
jge
push
jbe
mov
lods
out
xchg
add
int3
adc
imul
cmp
ss
cs
mov
stos
add
and
into
jp
scas
outsl
add
sub
into
jne
fildl
push
cmpl
mov
nop
lds
dec
pusha
pusha
icebp
jmp
jl
xor
sbb
push
inc
fwait
test
mov
sti
fwait
adc
sub
xchg
ret
sbb
inc
fdiv
push
gs
add
jmp
and
cmpsl
mov
movsb
testb
into
xchg
scas
loopne
int3
sub
xchg
test
xor
mov
out
jecxz
out
cmp
lea
repnz
int
jnp
push
loopne
stos
dec
push
gs
cmp
fmull
lret
decb
pop
pop
or
cmp
pushf
in
arpl
sbb
inc
ss
and
test
mov
stc
jecxz
movsb
add
pop
adc
sbb
dec
in
mov
jp
xchg
jb
imul
push
mov
call
jmp
dec
test
add
pop
subl
mov
insb
scas
lds
cltd
sahf
and
scas
and
in
inc
imul
mov
je
mov
mov
xorb
rcr
mov
pop
sahf
movsl
pop
xor
gs
test
aam
cli
popa
jle
mov
push
push
in
jb
ficomps
xor
repnz
imul
and
and
mov
xor
xchg
test
add
jmp
nop
insb
add
and
icebp
jno
aas
pop
sbb
sbb
pop
dec
sub
pop
sarl
mov
icebp
push
mov
into
loopne
loop
aaa
mov
lock
sub
mov
jbe
enter
mov
push
lods
in
fsubrl
pop
rcrb
in
dec
jmp
sbb
mov
aaa
push
pop
lock
pop
loopne
call
mov
pop
bound
inc
push
add
cmpsb
repnz
sbb
push
jnp
sub
mov
pop
fs
add
push
arpl
outsb
jae
punpckhdq
pop
mov
sub
fbstp
in
lret
xchg
mov
push
jg
jl
cwtl
ret
popf
sbb
cld
dec
sahf
imul
jmp
mov
sub
fists
cmpsb
mov
cli
or
into
cmp
or
test
xor
adc
addr16
mov
push
inc
inc
mov
decb
xchg
push
pop
jnp
or
fnstsw
jne
adc
jbe
lahf
mov
sub
loop
mov
dec
add
or
cmp
dec
cmp
add
dec
or
pop
lea
aad
jb
ret
add
mov
push
xchg
push
shrl
scas
je
jo
jno
push
popf
push
mov
scas
call
jo
inc
lds
jecxz
sbb
jne
push
loop
clc
add
cltd
xorb
test
jmp
xchg
mov
imul
shr
inc
nop
add
and
into
mov
clc
adc
pop
or
push
inc
xchg
hlt
js
push
mov
mov
cs
adc
cmp
jp
jns
inc
xor
sbb
addr16
jmp
pushf
stos
inc
mov
xchg
decl
xor
imul
lret
sub
pop
sub
mov
scas
push
sbb
loope
mov
xlat
mov
pop
xchg
pop
mov
std
cmc
xor
jno
mov
push
pop
jbe
jae
stos
fsts
rcr
fidivl
sbb
add
jo
call
xchg
pusha
push
jae
mov
add
push
and
jecxz
in
or
push
sub
inc
pop
cld
xlat
ds
pop
jne
shrb
xor
mov
mov
xor
or
testl
data16
dec
push
dec
mov
aad
and
push
add
aam
test
fs
xor
pushf
mov
cmpsb
mov
cmp
mov
das
cmovs
mov
movsl
sub
mov
mov
jne
je
mov
dec
xchg
xchg
int3
or
mov
data16
je
inc
addr16
pusha
pop
cmc
arpl
cwtl
pop
and
inc
call
adcb
jne
sub
push
dec
jp
nop
pop
push
leave
pop
xor
xchg
loop
cmovno
adc
jmp
out
mov
clc
and
cltd
and
hlt
mov
insl
in
aas
addr16
cmp
cwtl
and
xchg
mov
cmp
aam
sub
sbb
adcl
push
cmpsb
and
testb
push
add
cmp
sub
mov
ds
mov
out
xlat
inc
push
xor
xor
jle
fcomip
xchg
sub
cmc
and
jecxz
dec
sub
push
neg
dec
pusha
push
std
out
ljmp
adc
adc
xchg
add
pop
fiadds
mulps
addb
sub
pop
stos
mov
cs
add
shl
jo
outsb
mov
xchg
or
and
xor
jno
fcompl
sub
xchg
insl
sub
iret
push
mov
cs
mov
xchg
sbb
scas
dec
mov
fldpi
incb
xlat
mov
aaa
stos
xor
sbb
mov
add
xor
sbb
xchg
push
or
cwtl
hlt
aad
std
dec
and
mov
sbb
movsb
jmp
pop
xchg
jae
arpl
je
sbbb
insb
fisubs
mov
xorl
adc
dec
push
mov
fwait
or
iret
xchg
scas
sbb
jp
push
sub
rclb
xchg
adc
push
gs
pop
aaa
ljmp
add
and
push
fimull
push
sub
push
mov
or
call
add
pushf
sar
shl
jb
fistpl
adcl
xor
lods
dec
in
dec
mov
ljmp
gs
sub
clc
xor
cmp
push
pop
fdivr
out
inc
mov
shr
push
arpl
mov
mov
xchg
aas
mov
jg
sub
add
iret
mov
stc
cld
sbb
loope
or
dec
aas
loopne
pop
ret
lock
mov
pop
mov
fucomp
xlat
cmpsl
mov
shll
leave
ret
xorb
pop
inc
stc
adc
cmp
add
inc
xchg
push
add
cmpsb
adc
pushf
movsl
and
mov
xchg
or
adc
js
pop
dec
cmp
xor
xlat
iret
and
mov
test
mov
jnp
in
push
pop
loop
fdivrl
call
icebp
hlt
lret
push
dec
push
jne
or
mov
clc
push
stc
imul
stc
sub
dec
imul
sub
ret
pushf
in
push
cltd
sub
into
enter
add
xor
popa
pop
fisubl
or
fstps
xchg
movsl
lret
xchg
lret
popf
lea
in
mov
jb
or
jne
mov
and
add
or
sbb
test
push
addr16
add
mov
push
dec
xor
add
push
jp
mov
cmpsb
cmpsl
inc
jl
push
jno
add
dec
and
call
xlat
mov
sbb
jl
mov
add
push
mov
sbb
decl
mov
loop
sti
std
mov
xchg
or
imul
mov
and
cmp
fstpl
push
dec
sub
xchg
mov
pop
dec
pusha
outsb
jne
shrl
and
insl
mov
loope
jmp
ja
jne
pop
or
mov
flds
lods
or
xor
mov
fisubrs
or
sahf
dec
cli
push
or
adc
sub
sahf
jo
rclb
sti
ja
nop
jae
dec
xchg
fstpl
sbb
add
sbb
jl
push
aad
inc
pop
lcall
inc
movsb
outsl
cmp
fldcw
insl
mov
test
xchg
sbb
fldenv
js
inc
jo
add
sub
les
enter
and
cmp
fwait
aaa
mov
hlt
lea
orl
adc
push
pop
or
jge
or
ret
cmpsb
test
movsl
xchg
mov
addr16
out
and
sti
mov
in
std
test
call
shll
rcr
push
mov
mov
mov
cmc
adc
xchg
sti
mov
ret
xchg
or
dec
cmp
sub
call
jbe
cli
fsubrs
xor
loope
mov
xlat
and
jge
shr
or
sbb
cwtl
mov
sarb
cmp
sbb
fcmove
sub
shlb
in
push
inc
dec
rolb
lods
roll
inc
sbb
mov
iret
dec
arpl
or
mov
dec
jbe
cld
jae
inc
cmpsl
das
xchg
mov
and
fs
inc
jb
ljmp
pop
imul
shr
xchg
imul
push
js
js
push
subl
jo
cwtl
sub
fdivrs
cmp
mov
sbb
and
rcr
xlat
gs
imul
xor
jnp
xor
xor
adc
mov
sarb
jl
loopne
mov
aam
fldcw
pushf
cli
xor
pop
mov
fsubl
cwtl
pushf
and
mov
fsub
scas
movd
fs
in
loop
push
xchg
mov
js
sbb
mov
cmp
mov
or
cltd
xchg
int
clc
ret
push
pop
aad
outsb
adc
mov
movsb
jne
or
mov
outsb
and
sar
cmp
rcll
enter
push
fisttps
ja
or
jg
icebp
or
movsl
out
adc
xchg
sub
dec
push
in
mov
testl
negb
js
out
hlt
push
sub
cmpl
test
push
pop
cli
or
call
jo
scas
sub
and
rorl
lods
ljmp
loopne
outsl
xchg
repz
sbb
push
ffree
push
adc
sbb
imul
jp
fdivl
movsl
adc
xor
out
push
xchg
push
test
daa
xlat
sahf
mov
push
fstps
rcll
sbb
jmp
pop
jl
adc
int3
cmpsb
daa
ja
jmp
movsl
outsb
sub
in
iret
cmp
dec
push
mov
test
out
xor
cmpsb
pushf
mov
fdivl
mov
pop
sbb
cmpsl
mulb
inc
cmp
leave
mov
imul
mov
and
fwait
mov
sub
clc
mov
gs
decl
mov
das
ret
ret
movsb
sub
lret
es
mov
fwait
adc
jmp
in
lock
idivl
and
jnp
clc
cmp
push
rcrl
test
mov
rcr
aad
mov
inc
jae
icebp
mov
cmp
cmp
rorl
xchg
sbb
popf
mov
std
add
or
pop
testb
cld
cwtl
xchg
aas
sub
sbb
sbb
jmp
inc
push
push
insb
lea
cwtl
leave
lds
pop
testb
adc
jns
or
popf
pop
popf
xor
mov
dec
xor
das
mov
mov
call
pushl
sub
addr16
fucom
into
push
sub
cli
mov
std
test
in
cmp
pop
jo
roll
sarb
lea
loop
adc
out
imul
push
sub
jae
fcmovbe
xchg
inc
test
push
sarb
imul
inc
inc
mov
or
add
adcb
shlb
jecxz
cmp
add
pop
imul
mov
or
aaa
mov
jg
push
cmpsb
jne
dec
fsub
jecxz
sub
xchg
lcall
fsubl
mov
mov
faddl
stos
sub
or
fildll
jle
mov
pop
popa
in
inc
lcall
mov
lods
add
pop
jbe
stos
xor
int
lcall
inc
jmp
rclb
lret
cmp
jecxz
in
xchg
scas
add
test
lahf
jge
pop
ljmp
mov
xlat
mov
sbb
mov
outsl
clc
cltd
xor
mov
sbb
nop
stos
sbb
jns
inc
subl
lock
pusha
dec
lock
mov
sbb
xchg
arpl
insb
xor
jne
push
lret
inc
repnz
fisttpl
dec
in
xchg
mov
orb
xor
push
mov
adc
stos
add
lret
or
lret
clc
adc
xchg
inc
pop
imull
ret
arpl
fldcw
xor
push
loop
xor
fadds
adc
repnz
and
lock
mov
xchg
sub
lock
and
jle
cmpsb
addb
push
mov
je
and
adc
call
xor
and
xor
cmpsl
outsl
lahf
ljmp
push
xchg
cmp
cwtl
cmp
pop
fidivs
mov
push
sub
xlat
cli
ja
adc
gs
mov
mov
mov
fisttpll
popa
fldcw
in
adc
mov
lahf
imul
imul
sub
adc
or
xor
std
mov
lahf
outsl
rcrb
mov
lods
push
push
les
out
es
xchg
xor
sbb
cmc
das
and
adc
dec
fucomi
stc
sbb
mov
mov
xor
mov
dec
xchg
jns
jae
js
inc
push
add
push
cli
negb
or
hlt
jns
add
pushf
ja
mov
sbb
pop
sbbb
outsl
ret
xchg
xchg
or
add
shll
add
insb
mov
pop
ret
sti
cmpsb
aas
sbb
inc
inc
mov
mov
dec
mov
je
jmp
ror
jne
es
mov
xchg
daa
pusha
loopne
xchg
in
xchg
sub
ficoml
push
add
xchg
add
lcall
fistpll
mov
dec
mov
test
rorb
push
xchg
adc
lods
mov
fadds
adc
ds
mov
fcomps
test
dec
scas
cmp
push
jo
push
loope
in
cmpsl
push
sahf
xchg
icebp
mov
in
or
mov
lret
es
inc
cmp
lock
shlb
stos
lods
iret
in
aas
fimull
mov
test
xchg
sbb
jns
ret
mov
xor
jmp
or
fistps
adc
lret
cwtl
in
add
sub
subb
sbb
sub
dec
inc
dec
push
cmp
push
rcr
jge
xchg
push
enter
in
inc
out
mov
les
mov
jbe
les
movsl
rorl
jmp
nop
xlat
push
xchg
inc
pop
mov
imul
lret
lret
or
mov
xor
lea
jecxz
inc
test
mov
mov
mov
fistpll
mov
fstl
sub
xor
push
pop
or
xor
pop
pop
movd
or
adc
push
lret
sub
cmp
inc
stos
scas
outsl
sarl
subb
lret
sbb
inc
xor
aaa
cmp
dec
xlat
sahf
cld
cmp
push
dec
xchg
imul
dec
dec
pop
dec
nop
pop
mov
or
frstor
pop
test
ret
shrb
push
lret
adc
test
xchg
je
fcmovnu
iret
mov
test
cmp
std
icebp
repnz
adc
in
push
fwait
movsl
push
into
add
cwtl
inc
sarl
xchg
lods
cltd
mov
sub
rcl
daa
jns
popa
xor
lret
dec
and
inc
xchg
ja
scas
das
inc
inc
stc
fwait
cmp
gs
jl
decl
icebp
sub
push
cmp
mov
mov
lods
add
jecxz
push
dec
xlat
pop
loope
test
jne
bound
mov
mov
in
aad
cmc
and
leave
xchg
lds
lret
mov
dec
pop
dec
sti
push
shlb
pop
shll
pushf
sbbl
mov
lods
fldcw
clc
sbb
mov
cld
pop
and
addb
dec
cmp
xchg
das
mov
rclb
loop
mov
or
call
cli
jb
mov
cmc
push
in
cmpsl
xor
pop
push
in
cmp
imul
xlat
sbb
xchg
sbb
mov
js
and
loope
adc
scas
movsl
scas
xchg
xchg
or
push
mul
mov
outsb
fsts
rol
lcall
mov
popa
inc
faddl
mov
shlb
int
ds
pushf
cmpsb
hlt
arpl
pop
roll
xor
sbb
ror
into
push
hlt
push
cmp
mov
test
mov
mov
lahf
ret
loopne
jge
je
dec
xchg
mov
scas
cs
mov
pop
cmp
push
stos
das
cmp
add
push
sub
xchg
jge
loopne
or
mov
fists
jl
out
fistl
inc
sbb
es
mov
stos
mov
push
inc
cmp
mov
dec
xlat
pop
sub
outsl
movsb
lock
lea
int3
orb
sub
lcall
out
xchg
mov
cwtl
aam
cmp
incb
jmp
fistpll
iret
insl
dec
inc
mov
mov
hlt
outsl
and
adc
sbb
sbb
xor
ss
in
fisttpl
lret
std
ds
adc
repz
adc
js
ret
jno
ror
or
dec
pop
jmp
jecxz
inc
and
icebp
inc
xchg
add
push
repz
sbb
testb
nop
sbb
cmp
aam
sub
loopne
dec
xor
test
shr
lret
mov
jg
imul
sbb
jns
xchg
enter
test
sti
pop
or
negb
mov
shlb
clc
aas
lds
cmp
or
add
dec
andl
xor
mov
clc
popf
mov
cmp
movsl
sbb
pop
cwtl
mov
lods
loopne
roll
mov
scas
pop
das
cli
movsb
lret
xchg
sbb
mov
xlat
dec
call
jg
mov
imull
jl
dec
inc
std
in
imul
lret
push
add
fldcw
popa
inc
pop
add
sub
aas
cmp
test
push
dec
mov
or
xchg
cwtl
pop
call
pop
jno
sbb
add
add
dec
fstp
mov
sarl
ss
aad
shlb
mov
js
in
popa
mov
and
in
xor
mov
call
mulw
xchg
gs
xchg
add
and
mov
mov
xor
push
and
movsb
and
xor
pop
stos
sub
fldl2t
repnz
rcrb
and
fldt
mov
repz
in
addr16
fistpll
or
cmc
data16
int3
data16
out
sti
push
sarb
jl
stos
push
dec
inc
jecxz
insb
push
fcmovnb
cs
imul
push
push
js
add
xchg
out
aaa
fmull
sbb
mov
adc
lret
or
cld
xchg
pop
outsl
mov
filds
adc
mov
cmp
stc
xor
insl
pop
lds
sbb
pushf
pop
mov
into
ljmp
fs
pop
adcb
aam
cwtl
pop
enter
outsb
cmp
inc
cmp
lea
sub
mov
mov
lods
iret
pop
stos
mov
inc
fs
sahf
cmc
jmp
and
jg
lods
jne
push
pop
sub
stos
ss
jns,pt
iret
add
push
inc
cmp
xlat
cbtw
sub
jae
add
lea
loop
cmp
sub
lret
jns
adc
arpl
fmuls
int3
sub
xor
fstps
test
xchg
call
movsl
fidivl
cmp
pop
aam
mov
xchg
adc
mov
sbb
imul
mov
aas
inc
dec
push
leave
les
pusha
or
data16
sti
add
std
pop
testb
sub
popa
fistpll
out
dec
sbb
mov
lea
add
shlb
xchg
shlb
vmread
sub
pop
cmp
rorb
xor
xchg
mov
jge
fwait
mov
mov
out
sub
push
lods
xor
mov
jo
out
sub
add
out
mov
or
dec
fmuls
movsl
and
js
fiadds
js
push
mov
jmp
pop
inc
mov
lods
je
pop
rolb
cmpsl
mov
cmp
std
mov
cmpsl
inc
ja
mov
in
lock
push
push
xchg
xchg
repnz
jmp
sub
jns
ja
mov
xchg
call
dec
gs
cmp
mov
xchg
and
sti
jbe
xchg
xchg
jnp
sahf
and
push
mov
iret
or
add
mov
subb
fsubs
loope
sub
pop
in
mov
mov
movsb
je
xor
mov
in
rcll
xor
add
mov
sti
je
adc
or
aam
pop
in
xchg
add
aaa
sub
mov
sahf
inc
mov
cltd
cli
lock
enter
sub
fisubs
jns
aaa
int3
push
lret
lret
test
je
bnd
addr16
rcrb
inc
es
in
ds
cmp
in
pop
stos
xlat
cmp
or
clc
insl
std
xor
inc
mov
dec
imulb
adc
pushf
fisubrl
mov
cltd
and
test
mov
xchg
pop
xor
xor
ljmp
test
jnp
cmova
lret
inc
mov
mov
aas
cld
and
mov
fwait
mov
mov
cmpsl
mov
test
jge
xlat
mov
mov
pop
push
adc
outsl
fs
ljmp
insb
leave
or
xor
lahf
dec
push
daa
pushf
jmp
dec
pushf
sub
inc
and
pop
jmp
push
sub
cltd
jmp
test
stos
jecxz
in
push
jnp
and
pop
xor
pop
insb
mov
xchg
cmp
enter
lds
add
xchg
outsb
or
cmp
stos
mov
cwtl
and
mov
repz
mov
mov
rcrl
dec
push
cli
aad
aad
adc
push
xchg
enter
mov
lret
mov
nop
sub
xchg
cmp
mov
and
lods
add
pushf
sub
loop
fsubl
add
jae
adc
call
push
jo
outsb
mov
stc
mov
mov
jae
dec
mov
std
add
jae
adc
adc
cmpsb
push
dec
jnp
push
sub
pusha
sbb
adc
push
mov
adc
or
fsubrs
jb
push
and
mov
movsl
jmp
icebp
jb
push
movsl
sub
add
scas
mov
lds
movsl
sbb
fidivl
inc
jmp
adc
pop
dec
nop
mov
fnstcw
cmc
std
fwait
cmc
aam
dec
xor
sub
shlb
cmp
push
pop
sarb
mov
cmovb
mov
cmc
sub
aaa
dec
icebp
repnz
mov
outsl
dec
jnp
pop
push
xor
jae
inc
sahf
idiv
jle
or
imul
push
mov
mov
and
addl
mov
mov
mov
jl
xor
mov
arpl
call
mov
fs
fcoms
imul
lods
cmp
xchg
sbb
outsb
inc
push
pop
and
dec
sti
mov
lea
push
xor
fdivrl
xor
insb
jns
iret
dec
push
loope
test
mov
and
adc
out
mov
sub
adc
dec
cmpsl
rcl
xor
mov
adc
sub
dec
pop
pushf
dec
je
pop
int3
mov
mov
mov
fstps
inc
push
cmp
lret
sahf
pop
push
jb
fnstsw
popf
mov
dec
ja
je
xor
fwait
pop
dec
clc
dec
lds
sbb
stos
or
dec
insb
push
jb
sbb
ss
or
or
movsb
out
pop
fldcw
mov
repnz
and
popf
mov
sbb
test
xchg
push
daa
jbe
or
pop
mov
cmc
mov
mov
jl
mov
stos
add
shlb
xchg
cmpsb
fcmovb
dec
xor
imull
dec
dec
orl
adc
jb
push
sbb
fxam
mov
scas
nop
sbb
dec
cmp
jl
xchg
sbb
jne
mov
pushf
shr
adc
xchg
sbb
mov
fisubrs
in
pushf
mov
mov
sbb
mov
sub
pop
mov
inc
imul
insb
mov
jp
sub
push
mov
lods
push
cs
mov
popl
into
mov
fisttpll
push
repnz
sbb
push
add
jle
sub
mov
outsl
and
mov
in
jns
jl
and
xor
xor
mov
mov
sub
mov
insl
sbb
cltd
lods
rcll
xchg
and
adc
fcoml
mov
stos
and
in
imul
ds
out
sbb
insb
arpl
dec
pop
xchg
in
divb
movsl
fstps
or
pop
inc
std
pop
inc
dec
aas
sbb
outsl
in
push
mov
popf
rorb
les
ret
or
popf
push
scas
mov
jo
test
sub
loope
js
clc
iret
or
cld
mov
sub
sub
and
or
sbb
inc
jmp
xchg
mov
or
ds
jo
arpl
enter
repnz
cmp
lcall
cli
and
incb
cwtl
ror
xor
out
stos
jp
in
cli
push
sti
push
sbb
jbe
pop
out
fwait
add
mov
xor
pushf
mov
das
es
hlt
xor
xor
cmp
aad
pop
std
icebp
or
push
repz
scas
pop
out
inc
rolb
into
jp
rcrl
insl
jnp
push
mov
repnz
pushf
cld
push
aas
push
lods
enter
mov
lcall
int
pop
fs
pop
lods
or
test
cmp
lock
sbb
mov
jne
mov
loopne
xor
call
int
and
addr16
std
andb
adc
dec
adc
dec
ret
and
out
push
xor
aaa
mov
xchg
aam
inc
mov
inc
in
imul
jbe
into
pop
addr16
mov
mov
fmul
lock
out
xor
dec
jecxz
pop
mov
xor
mov
loope
inc
mov
das
pop
cmpsl
inc
flds
dec
pop
in
push
inc
ds
shrl
outsb
cwtl
dec
repnz
jl
adc
pusha
call
pop
mov
jg
xchg
mov
jbe
cmp
dec
fdivr
dec
mov
insl
fisubrl
mov
mul
mov
shll
or
push
mov
mov
les
mov
sbb
movl
into
cs
adc
push
or
xor
mov
xchg
shl
in
lcall
hlt
cmp
pop
pop
mov
rcrl
lock
decl
or
cmpsb
pop
or
lcall
enter
clc
or
test
sub
jg
nop
jae
popf
nop
adc
mov
shrb
orl
mov
outsl
mov
cmpsl
inc
mov
dec
je
jne
les
nop
cwtl
out
into
inc
ret
jmp
push
mov
in
pop
movsb
xchg
addr16
and
ljmp
xor
mov
sbb
jmp
sbb
xor
xchg
add
ljmp
fisttpll
push
push
xor
das
cmp
sub
or
pop
imul
iret
popf
or
inc
mov
stos
imul
push
loopne
or
sti
outsb
les
xchg
fnstenv
fmuls
lea
jnp
scas
lret
cmp
lret
in
fwait
addr16
imul
inc
xchg
insb
xlat
imul
lea
fimull
lret
mov
stos
lods
loope
repnz
push
cli
cmp
loope
mov
jmp
jae
mov
insl
js
push
cltd
dec
xor
add
mov
mov
gs
and
ret
ret
cltd
jns
adc
adc
bound
lret
pop
push
pop
testl
fldl
cmp
mov
mov
call
out
pop
mov
push
out
enter
or
mov
hlt
mov
int3
mov
xor
enter
sbb
dec
pop
pop
or
cmpsl
aaa
mov
dec
dec
dec
push
fsubrs
pop
aad
push
loop
sahf
pop
inc
push
xchg
push
std
aam
outsb
mov
inc
movsl
cmp
adc
lods
inc
pusha
rcrl
aas
les
inc
jmp
popa
mov
mov
test
loop
jb
inc
aaa
aaa
jp
mov
mov
jmp
out
stos
or
dec
dec
popf
popa
std
pop
mov
rdmsr
out
rorb
les
push
xor
dec
gs
insb
jmp
mov
lods
inc
and
rorl
sarb
push
push
idivb
test
pop
inc
repz
ja
push
adcl
jo
repz
and
push
iret
std
jbe
into
in
out
xorl
add
scas
adc
pop
outsb
and
xor
outsl
xchg
daa
jmp
sub
jb
cmp
outsb
sbb
xchg
lahf
dec
mov
cltd
clc
jmp
and
rcrl
fisubrl
xchg
adc
mov
mov
xchg
and
fwait
xor
jle
pop
ja
push
sub
pop
addb
imul
adc
mov
xor
test
sti
dec
pop
xchg
adc
mov
or
scas
inc
popa
call
and
push
dec
in
cli
mov
push
sarl
out
xchg
jo
pavgb
adc
int3
inc
adc
dec
mov
push
cmp
gs
ljmp
jb
mov
out
les
shlb
dec
pop
leave
and
aaa
xchg
and
clc
repnz
insb
or
add
push
add
sahf
mov
or
inc
popa
testl
adc
jl
jb
sub
jne
out
mov
xchg
pop
jge
push
jne
pop
and
bound
add
std
fdivrl
cmp
xchg
ret
mov
cli
out
data16
lock
mov
cld
inc
xor
inc
int3
dec
sbb
cmp
jp
and
or
fiadds
mov
arpl
and
mov
adc
or
mov
clc
lret
mov
movsl
jae
pandn
pop
dec
mov
mov
or
inc
imul
mov
or
mov
cmpsl
test
cmp
je
js
sti
punpckhbw
sbb
push
xchg
push
pop
dec
roll
sbb
pushf
out
test
repz
test
add
dec
inc
jl
xor
mov
jns
sbb
mov
sbb
outsl
lds
pushf
jb
xchg
icebp
xor
cmp
pop
sar
es
cld
mov
inc
fwait
mov
xchg
cmpsl
stc
jp
sbb
cld
mov
testb
mov
inc
nop
xchg
mov
push
pop
fwait
xor
sbb
pop
in
mov
les
mov
fwait
out
xor
xchg
pop
lcall
xchg
je
lods
mov
inc
push
xor
sub
ja
mov
sub
enter
mov
bound
jle
add
xor
dec
insl
lds
mull
mov
sbb
scas
jb
jp
mov
bound
test
jle
dec
or
inc
xlat
or
cmp
sub
cmpsb
dec
push
lods
jns
inc
mov
es
sbb
mov
cli
call
or
jno
xchg
jge
cmp
push
sub
cmp
lods
jmp
mov
push
lret
mov
inc
mov
cmp
test
dec
cmp
fisubrs
fwait
std
inc
jge
ret
mov
mov
mov
mov
mov
xchg
add
jmp
in
fmuls
imul
push
cmp
xchg
sub
aas
call
inc
cmc
adc
outsb
xor
inc
rcrl
leave
inc
call
mov
outsb
mov
int3
movsl
mov
dec
cs
cmpsb
js
lcall
lods
ret
cmpsl
mov
cli
int
leave
adc
cld
or
mov
sbb
pop
or
add
cmpb
out
mov
mov
fildl
sub
stos
mov
adc
fidivrs
rorb
cld
call
nop
mov
daa
cltd
push
mov
jge
push
cwtl
js
into
pushf
cmc
fistps
add
orb
xchg
jae
inc
xor
xchg
aas
push
sbb
push
sub
dec
rorl
jne
and
das
movsl
stc
and
adc
and
dec
xchg
pop
cmpl
mov
sbb
in
mov
cli
sarb
data16
repnz
pop
add
enter
dec
xchg
xchg
aad
mov
mov
push
or
jmp
mov
outsl
cmp
and
xor
aam
inc
cmp
in
mov
repnz
push
push
or
mov
sbb
call
aad
test
inc
mov
fdivs
mov
test
inc
push
ror
repz
and
out
inc
mov
add
push
call
or
pop
shlb
cmp
jae
add
rorw
scas
add
inc
lret
fists
out
or
mov
bnd
sbb
xchg
test
xchg
add
jg
mov
xchg
rolb
stos
and
fcomps
lss
jg
jmp
ss
imul
add
outsb
stc
loop
leave
jg
adc
push
sub
and
sbb
movsl
in
and
xor
shlb
aaa
mov
mov
test
movsb
fistps
pop
mov
loopne
mov
mov
dec
fstp
movsl
pop
popa
mov
sbb
outsb
xchg
gs
sub
or
jnp
aaa
push
mov
cs
add
cmp
insb
aad
xorb
inc
mov
cmp
jbe
jae
and
out
mov
mov
out
sub
sti
dec
popa
iret
adc
arpl
add
lods
movsl
sbb
cwtl
sti
idivl
clc
or
inc
repnz
or
mov
mov
ror
jmp
mov
mov
faddl
mov
lcall
xorb
repz
hlt
sti
mov
xchg
dec
inc
ss
loopne
xchg
add
lahf
nop
mov
cltd
jno
neg
pop
std
scas
adcl
sub
cmc
out
pop
jno
push
xchg
push
fmuls
jnp
loope
mov
jl
mov
out
enter
pop
dec
mov
mov
xorl
dec
or
push
jmp
arpl
into
daa
pop
inc
imul
xor
xor
push
adcl
aad
movsb
xchg
sahf
ficompl
fldlg2
mov
jne
jbe
lret
inc
cld
sbb
dec
sub
fistps
daa
push
push
popf
xchg
outsb
jle
adc
or
stos
cltd
cmp
out
or
or
cld
call
aas
and
or
bound
dec
fsts
popa
and
shr
dec
xchg
sti
int3
mov
and
ds
mov
pop
ljmp
daa
mov
jle
jno
mov
inc
das
stc
lret
sti
dec
les
sti
das
push
pop
inc
das
incb
mov
int3
mov
mov
das
dec
sub
xor
test
push
mov
mov
fadd
cmp
mov
repz
or
lods
aas
adcl
nop
mov
dec
addr16
sbb
mov
scas
sub
sbb
aad
les
sarb
addr16
cmp
adc
adc
into
clc
imul
aad
xor
jae
adc
in
push
cmpsb
xor
mov
dec
mov
out
add
test
mov
adc
cltd
mov
aam
mov
and
mov
ret
adc
add
sub
hlt
test
pop
lds
push
call
add
inc
xchg
jl
fdivrs
xchg
mov
repnz
sub
imul
add
xor
cmpb
addb
inc
cmp
daa
punpcklwd
add
lret
mov
stos
into
mov
jp
adc
ja
sbb
mov
inc
stc
cmp
push
sub
stos
aaa
or
es
mov
mov
jae
adc
icebp
mov
sbb
dec
mov
push
fwait
mov
and
sbb
cmp
test
int
jno
sbb
addr16
ret
sbbb
repz
lahf
mov
push
mov
and
in
lock
push
shll
iret
adc
dec
push
jmp
inc
in
xor
ret
jle
push
daa
scas
out
mov
xchg
fadds
popf
push
cmp
mov
outsl
cmp
cmp
loopne
cli
cmp
std
cmp
xchg
and
ficoml
adc
int
inc
mov
pop
xlat
lcall
mov
add
add
pop
repnz
mov
push
outsl
sarb
cmp
sbb
icebp
mov
stc
xor
lret
sub
int
and
faddl
sbb
push
jg
nop
jns
adc
ljmp
ret
loope
jl
push
int3
ljmp
shll
pop
lret
sbb
arpl
outsl
inc
test
faddl
pop
or
shll
ds
cltd
popa
shl
lock
pop
or
sbb
lahf
jno
imul
adc
out
or
into
int3
dec
or
call
xchg
sbb
adcl
dec
inc
pop
enter
lret
fisubl
xchg
cmp
lret
mov
ljmp
rclb
rcll
test
sbb
sub
pop
aas
cs
rcr
push
jecxz
mov
push
adc
push
ljmp
les
mov
xor
pop
gs
ds
icebp
mov
dec
jno
jmp
pushf
into
jnp
adc
pop
out
lcall
insl
es
sbb
je
addr16
push
mov
cmp
fbld
mov
cmpsl
ja
aam
js
ret
xor
or
cmp
ret
dec
adc
imul
mov
cltd
out
adc
stc
ja
js
push
movsl
rcl
ret
ds
enter
loope
or
xor
mov
and
inc
mov
fldcw
std
test
enter
nop
xchg
inc
lret
xchg
mov
adc
std
stos
or
add
mov
mov
call
insl
int3
xchg
pop
shr
shlb
ljmp
out
inc
xchg
mov
std
ret
imul
fcmovu
bound
insb
outsl
sub
aas
into
fcoms
decb
fs
dec
aas
push
insl
pop
mov
shl
aaa
sub
add
push
mov
add
mov
cmpsb
push
sub
iret
iret
and
jns
sbb
iret
into
pop
pusha
dec
xchg
movsb
cmp
sahf
daa
pop
xor
fcoml
ljmp
std
cmp
imul
and
rcrb
add
lods
test
rcll
cwtl
cmp
xor
gs
pop
loopne
lods
stos
lock
lods
or
push
les
sbb
dec
rclb
inc
icebp
mov
add
xor
enter
xlat
cmp
push
dec
jle
out
into
and
inc
lcall
or
stos
cs
sub
xchg
mov
mov
out
cltd
lgs
mov
inc
sbb
enter
add
ljmp
cmp
inc
mov
fcompl
ret
sbb
cwtl
mov
sub
and
fwait
sub
inc
xor
dec
lods
insl
cmp
popf
repnz
das
sbb
jno
inc
mov
sbb
fisttps
loopne
fdiv
pop
in
movsb
fidivrl
and
cwtl
inc
mov
xchg
incl
popf
sub
push
mov
scas
xchg
mov
jmp
pop
push
roll
mov
sub
frstor
test
adc
mov
mov
cmc
pop
pxor
mov
add
rcrl
test
lcall
ljmp
push
faddp
call
adc
jmp
jg
add
decl
lds
cmp
cli
loopne
std
push
adc
or
ja
jo
adc
scas
repnz
xor
int3
jne
lock
sub
or
stos
mov
pop
lds
mov
jno
jle
repz
add
jno
arpl
mov
dec
sti
sub
push
xchg
rorb
mov
out
ret
jge
pusha
inc
data16
sbb
inc
ret
lcall
mov
push
push
and
lock
pushf
shrl
pop
dec
xchg
mov
je
popf
insl
imul
xor
jno
jmp
mov
xchg
push
jae
out
fs
mov
mov
inc
insb
sub
fcomi
rcrb
fnsave
xor
or
push
mov
push
jne
rclb
push
test
jmp
popa
dec
push
dec
fs
pusha
add
xchg
je
loopne
mov
pop
mov
mov
ret
scas
push
jne
addr16
mov
imul
xor
and
mov
pop
shll
sub
xorb
sub
cs
adcb
decb
in
jp
pop
jb
cwtl
push
int3
loopne
sbb
popa
xor
les
xchg
pop
sti
mov
xor
dec
xchg
jns
rol
mov
xchg
jmp
xchg
lock
pop
jmp
aad
ret
outsl
movsb
fsubrs
cmpb
jecxz
mov
xchg
jle
push
adc
rol
in
jnp
pop
push
dec
xor
imull
std
cli
mov
push
adc
cmp
and
stos
push
xor
shl
xor
out
int3
call
push
pop
cmc
pop
add
gs
jo
sti
mov
js
pop
outsl
jae
data16
popf
mov
fisttpl
sub
jg
cltd
dec
pop
mov
shlb
pop
add
jg
lock
push
adc
cmp
jo
jne
jo
int
jecxz
scas
dec
filds
test
ds
add
in
jl
jnp
push
push
lock
mov
and
jge
outsl
mov
jmp
cmp
dec
test
xchg
testb
xor
imul
jns
in
jb
mov
push
jmp
sbb
hlt
test
push
xlat
out
sub
push
adc
pusha
rcl
sarb
pop
push
xchg
sub
mov
mov
imul
popa
mov
inc
in
mov
psrad
cmp
pop
or
loopne
add
aas
popa
psraw
js
bound
cmpl
outsl
pop
add
push
push
in
cmp
fisubs
jl
add
pushf
xchg
xor
add
inc
gs
pusha
cs
test
stc
mov
fidivrl
adc
lret
pop
inc
jo
pop
in
iret
lds
leave
pop
pop
push
sarb
xor
pop
push
jno
push
dec
push
idivb
mov
test
aaa
scas
xchg
fdivl
push
je
dec
sahf
shr
lret
mov
int3
cmp
jl
popf
and
xlat
stc
cmp
dec
push
sub
rolb
outsb
sub
rolb
sbb
adc
mov
imul
lahf
dec
cld
mov
outsl
adc
dec
ret
fwait
adc
shlb
inc
leave
into
inc
xor
sub
dec
sbb
jge
loop
out
adc
pop
cli
stc
adc
xchg
push
xchg
ja
je
inc
jp
mov
or
in
mov
pop
ret
fwait
mov
fistl
pop
push
sahf
dec
push
sub
xor
lret
shrl
fsubl
sub
xchg
jl
data16
imul
in
mov
es
add
xor
pop
mov
test
fcmovb
pop
xor
clc
pop
popa
dec
sub
cld
mov
pop
rcpps
out
sbb
idivb
jl
jecxz
or
out
jne
rcrb
dec
or
mov
stos
outsb
pop
mov
add
mov
mov
mov
mov
pop
inc
adc
das
gs
cmp
sbb
and
pop
inc
out
repz
or
xorl
ds
insb
mov
mov
mov
add
lret
lret
ljmp
lret
setnp
cmp
dec
pop
adc
clc
jo
jg
push
jbe
xor
mov
mov
sbb
jge
sbb
cmpsl
stos
pusha
adc
xchg
jecxz
mov
add
mov
les
call
lret
loope
mov
out
in
and
push
adc
inc
jmp
and
cmp
mov
addl
push
xor
or
addb
cmpl
xor
imul
push
bound
ja
rcr
outsb
ss
lods
xor
out
int3
mov
shlb
push
and
mov
adc
adc
xchg
loop
or
push
mov
ja
adcl
pop
daa
push
sti
iret
add
notl
mov
jae
pop
daa
in
mov
xchg
adc
inc
inc
fldenv
aam
lods
sub
push
cmc
sub
scas
cld
mov
outsb
xchg
dec
mov
mov
lahf
leave
adc
out
jno
negl
xor
fprem1
sahf
mov
sub
stc
addl
icebp
imul
sarl
addr16
dec
aad
cmp
xchg
jl
cmc
ror
fs
push
push
retw
jno
adcb
imul
dec
mov
aaa
dec
cmpsb
cmpsl
mov
test
mov
scas
inc
push
mov
fnstsw
in
xor
ja
in
pop
fldcw
inc
das
dec
cmpsl
pop
lcall
lahf
or
repnz
popa
mov
scas
push
inc
les
inc
test
push
inc
xor
xchg
movb
cli
adc
ret
dec
xchg
dec
cmp
mov
cmp
cmpsb
mov
xlat
and
and
inc
jecxz
in
ljmp
sub
mov
in
into
mov
dec
pop
lcall
out
adcb
or
hlt
jmp
inc
shll
and
fdivl
dec
push
cmp
dec
xor
sub
pop
xchg
cmc
dec
call
clc
mov
and
mov
gs
jge
inc
scas
mov
pop
mov
les
xlat
iret
push
idivl
addr16
add
mov
incb
shrb
push
sub
adc
lahf
xor
push
fists
adcb
inc
aas
mov
pop
loope
cs
fsubp
cli
lods
mov
mov
add
out
xor
push
mov
jae
jmp
mov
lret
push
je
pop
push
dec
mov
inc
scas
pop
mov
adc
inc
in
adc
and
or
imul
mov
in
fmuls
rol
pop
add
adc
mov
jle
and
clc
pop
iret
inc
cmp
pop
pop
test
mov
subl
aam
mov
loop
movq
xchg
not
pop
xor
xchg
scas
out
pop
inc
stc
sti
es
jb
mov
push
jbe
iret
mov
mull
call
cmp
sub
lret
push
xor
jne
push
xor
mov
xchg
out
stc
daa
cmp
xor
jnp
repnz
icebp
nop
icebp
inc
es
jl
lahf
adc
pop
sbb
sub
push
xor
cmp
sti
lods
out
loopne
arpl
jne
rcll
lock
cmp
jp
push
out
jg
push
pop
out
mov
cmp
mov
pop
lret
jne
enter
dec
scas
push
push
bound
push
fwait
mov
rcll
adc
loop
lcall
in
ret
xchg
addr16
cmp
ljmp
and
adc
sbb
dec
cmp
lcall
pop
xor
sbb
push
push
int3
dec
divb
test
push
jo
repz
push
ret
cs
out
mov
xor
test
jb
lret
lock
mov
movsl
mov
in
inc
lret
dec
and
mov
xor
js
push
sub
and
mov
call
cwtl
push
adc
shl
dec
mov
test
push
jecxz
push
orb
cmp
sbb
jb
dec
adc
jge
adc
les
es
inc
inc
icebp
stc
fdivrl
call
xor
pop
in
dec
mov
test
gs
sbb
xchg
lcall
dec
fisttpl
shl
sbb
pop
and
out
add
mov
cltd
outsb
test
push
lcall
loope
mov
and
push
lcall
mov
sbb
rcrl
fsubrp
add
sarb
out
inc
nop
jp
mov
hlt
mov
jg
sahf
jbe
lds
push
add
mov
adc
push
pop
bound
stc
mov
hlt
jl
sarl
or
dec
mov
add
pusha
std
mov
cwtl
ss
iret
out
insl
xor
insl
jg
cmp
push
push
sbb
mov
cld
imulb
xchg
or
ja
insl
pop
test
cli
sub
xchg
mov
stos
mov
stos
cmp
ret
aam
lds
jge
inc
sub
outsl
push
ljmp
cld
out
pop
dec
je
iret
xchg
pusha
ja
inc
fs
lods
push
test
sbb
fldl
jo
adc
mov
icebp
mov
daa
jge
sti
lods
orl
mov
xchg
int
mov
xchg
movsl
xor
loop
push
sarb
lds
inc
push
shl
xlat
and
out
or
add
pop
xor
or
out
mov
push
aaa
sbb
ja
xchg
pusha
mov
dec
add
or
in
push
pop
cltd
and
push
xchg
sub
mov
mov
shrb
pop
and
aam
jbe
adc
std
lcall
es
in
notl
mov
sub
inc
or
movsb
ja
pop
or
mov
inc
mov
out
xchg
mov
in
push
int3
int3
scas
jecxz
jle
mov
dec
xor
in
in
in
inc
lret
ljmp
jmp
fcmovb
das
adc
mov
push
mov
adc
jo
adc
pusha
ds
jp
shll
pop
int3
cld
push
rolb
push
and
cmp
fstps
xchg
push
add
jbe
and
dec
inc
call
jae
mov
inc
push
cmp
mov
pop
and
pushf
cmp
movsb
xor
or
ds
jo
std
test
test
adc
fxch
inc
xor
dec
xor
mov
outsb
das
jle
stos
cltd
call
fstps
xchg
lahf
cmpsl
mov
fdivs
ret
and
pop
popa
mov
sub
push
push
rcrl
out
mov
addb
jecxz
ret
mov
insb
pop
pop
push
jmp
pop
out
or
mov
mov
dec
jo
nop
dec
fisttps
ljmp
mov
inc
xchg
int
inc
xor
inc
rol
pop
cmp
push
in
sub
aaa
pop
jmp
xchg
into
xchg
sub
ja
mov
jge
lods
mov
js
cwtl
je
cmp
xor
aad
jb
stos
call
outsl
cmp
cmpsl
add
scas
xchg
mov
add
mov
lret
test
cmc
fstpl
lods
adc
lea
mov
adc
cmp
leave
flds
push
test
cltd
jmp
imul
mov
xchg
jl
mov
pop
xchg
or
xchg
pop
cmpsb
dec
out
insl
addl
xchg
mov
add
fwait
ljmp
scas
mov
loope
stos
push
lea
inc
es
ret
inc
lcall
pushf
push
and
and
mov
mov
sbb
int3
pop
cmc
push
push
das
sub
das
cld
inc
daa
leave
cmp
or
mov
int3
xchg
mov
xor
inc
lahf
fwait
adc
cli
es
icebp
jmp
outsb
jecxz
outsb
inc
dec
or
adc
adcl
jns
pop
push
or
in
mov
stc
sbb
push
sub
jbe
jnp
dec
js
jmp
sbb
cmpsl
sbb
mov
mov
repnz
adcb
sbb
repnz
pop
pop
mov
test
or
and
xchg
mov
xorl
scas
insl
nop
addr16
adc
jg
stos
push
sbb
jle
lds
movsb
cmp
pop
lods
das
mov
jp
icebp
sbb
cli
mov
inc
and
loop
push
jl
test
mov
jbe
lret
xlat
or
push
test
pushf
mov
add
imul
inc
daa
fstps
daa
jne
cld
dec
gs
or
cmpsb
in
jecxz
cmp
cmpb
in
fdivs
ret
cmp
dec
out
xor
sbb
cmp
fsubrs
js
push
sub
pop
dec
lahf
scas
mov
fnstcw
mov
dec
sahf
in
ret
sub
daa
sbb
pop
mov
pusha
or
lock
sub
xor
adc
int
pop
mov
sahf
mov
sub
and
dec
adc
fstps
ret
xor
push
mov
sub
ret
push
bound
jl
adc
outsb
idivl
dec
dec
jnp
repnz
imul
cmp
pop
das
or
out
and
push
jg
ds
lret
xlat
jae
dec
mov
fcoms
pop
sbb
incl
bound
push
sbb
and
pop
stc
adc
mov
inc
add
in
fdivrl
scas
cmp
mov
rcrb
enter
js
add
cmp
filds
icebp
inc
stos
cltd
je
cmp
jo
push
clc
std
daa
aas
sub
or
in
mov
push
mov
mov
inc
add
sub
pusha
mov
mov
jecxz
out
mov
xchg
insb
or
shr
out
mov
add
cltd
jb
and
out
xor
cld
rorb
lahf
xchg
pop
cmc
xlat
sbb
int
adc
cmp
sarb
cmpsl
add
adc
std
xor
insl
stos
xchg
push
mov
jne
test
pop
jb
push
push
stos
jns
stc
jns
jb
dec
repz
orl
lahf
fsubrp
and
xor
fldcw
rcr
sbb
xor
or
test
sub
loop
dec
xrelease
gs
xlat
mov
in
mov
lods
dec
add
rorl
push
xchg
adc
out
mov
xchg
push
cmp
ja
push
cmp
push
xor
push
xchg
xor
adc
push
mov
add
enter
pusha
imul
mov
jmp
jae
mov
mov
dec
push
xor
test
mov
dec
and
mov
imul
mov
lahf
pop
mov
aad
pop
push
mov
outsb
sub
add
pop
mov
push
imul
xor
dec
sbb
std
xor
das
jp
xor
test
xor
emms
mov
movsl
sub
sti
sti
mov
out
xchg
popa
out
add
std
dec
pop
shrb
fsubr
stos
scas
roll
aas
jns
and
sbb
mov
fidivrl
adc
mov
testl
fmul
out
push
gs
mov
add
jno
xchg
sub
pop
repnz
pop
int
sub
inc
aam
adcb
add
cmp
dec
pop
lea
dec
lcall
push
mov
mov
cmp
mov
adc
jo
inc
sub
cmp
mov
and
pop
sub
mov
daa
sarb
xchg
cmpsl
pop
inc
ret
call
sbb
cmp
mov
xchg
movsl
fimull
dec
pop
jo
lods
and
pop
out
shrl
imul
jg
lcall
and
ss
bound
add
cmp
mov
leave
add
push
jp
adc
or
cli
dec
xchg
mov
movsb
mov
js
loopne
pop
jge
xor
mov
aas
rcl
shlb
movsl
jmp
ss
sti
sbb
and
scas
adc
fldenv
pop
shl
push
movsb
enter
daa
arpl
test
push
pushl
int3
aas
xchg
mov
cmp
test
jnp
mov
das
loope
xchg
cmp
mov
stc
sbb
mov
or
inc
adcb
stos
pop
cmp
mov
mov
jae
pop
stos
push
in
or
shlb
in
shlb
inc
movsb
xchg
mov
test
push
jecxz
xchg
out
sbb
mul
pop
adc
xchg
jae
aaa
adc
or
cmp
inc
xor
sbb
cmp
shll
jg
pop
repz
cs
divl
mov
mov
outsl
inc
add
jmp
imull
insl
ja
fiaddl
sarb
xchg
out
cmp
mov
xchg
lds
xor
ret
dec
rcll
imul
sarb
push
or
push
arpl
sarl
inc
xor
ja
adc
mov
mov
in
int3
inc
mov
add
ja
addr16
insb
cmpsl
xchg
jecxz
inc
rol
je
push
pop
adc
inc
call
mov
cmc
add
test
fs
jbe
cmp
aad
andl
xchg
movsl
inc
dec
inc
mov
dec
push
sub
repnz
cwtl
das
and
arpl
rcll
inc
jae
xor
or
lret
push
inc
dec
les
dec
bound
and
add
adc
jbe
shr
push
jns
loop
xor
aaa
mov
sahf
jne
mov
fisttpl
test
push
insl
in
out
add
sbb
aam
int3
daa
sbb
mov
add
pusha
mov
mov
jo
mov
add
sub
fwait
sub
or
xchg
xchg
ret
or
imulb
xor
lea
fdivrl
xor
xor
or
addr16
or
pushl
out
or
lds
out
push
pusha
in
insb
jp
adc
flds
clc
push
scas
aam
pop
pop
adc
push
aaa
cltd
sbb
stc
sar
lret
sbb
jnp
mov
or
and
push
sbb
or
sti
nop
xchg
imul
lea
lret
imul
push
and
ret
loopne
adc
lock
inc
push
mov
ret
icebp
adc
xchg
daa
ss
mov
push
push
mov
cmp
es
fimull
popf
fstpt
clc
int3
pop
in
lock
sarb
add
pop
adc
cli
push
push
arpl
fsub
cmpsb
xor
ds
or
pop
fiadds
xchg
or
insb
sahf
push
and
ss
mov
pop
lods
fwait
cmp
bound
je
cmc
fisttpl
aaa
add
jns
mov
out
mov
adc
mov
push
fnstenv
aas
fwait
xor
pop
mov
loope
sbb
arpl
mov
push
push
xlat
fsubr
push
jbe
in
aas
xor
add
addl
testb
imul
ficoms
ds
ja
sbb
test
lock
push
ret
clc
xchg
cmpsb
scas
pop
mov
jne
insb
jl
repz
push
sub
out
and
fcomip
mov
mov
ljmp
xchg
insb
ftst
aas
pop
xor
dec
add
xchg
out
pop
iret
xor
leave
mov
adc
test
pop
mov
mov
xor
mov
sub
sub
bound
push
imul
test
or
lods
and
ret
jmp
in
nop
cmpsb
icebp
dec
jecxz
or
sub
movsl
add
mov
popa
mov
adc
jne
mov
adc
xchg
scas
into
jbe
icebp
sub
popa
dec
jge
in
lahf
popf
insb
jecxz
mulb
cmp
push
aad
push
loope
cmp
push
lcall
shrb
and
inc
movl
dec
add
jnp
adc
jb
and
pop
push
int
mov
sbb
and
jl
cmpsl
cmpsb
mov
stos
dec
outsb
jp
dec
aam
push
mull
mov
fnstcw
outsb
cmpsl
jmp
leave
lcall
rcll
movzwl
adc
mov
lahf
dec
scas
xor
jne
leave
or
mov
out
cmp
xchg
jnp
sbb
fisubrl
xor
sbb
push
mov
nop
enter
pop
add
lcall
inc
repz
stos
scas
fadds
scas
cmp
jg
mov
fistpll
call
lcall
sbb
dec
push
in
jg
test
inc
mov
inc
mov
in
insl
mov
mov
lahf
pop
inc
jg
int
lahf
push
out
int
push
jbe
sbb
fwait
ret
inc
aas
sahf
rcl
and
ss
add
call
movsl
xor
inc
push
lret
sbbb
push
fimuls
fiaddl
testb
orb
sbb
fwait
das
lock
xchg
outsl
fsubrs
mov
inc
es
inc
loop
and
xchg
fsubl
add
dec
dec
xchg
cmpsb
into
cmp
sub
std
xor
xor
rorb
sbb
rorb
mov
xchg
sub
mov
mov
pusha
pop
pop
sbb
scas
mov
mov
cli
jbe
xchg
mov
js
lret
sub
repz
xorl
inc
mov
dec
and
cli
add
popf
mov
test
pop
sbb
movsb
push
shl
mov
loopne
xchg
jmp
add
in
mov
mov
sbb
mov
mov
dec
jbe
arpl
pushf
jle
jnp
insl
sbb
push
push
fstps
iret
bound
mov
ret
inc
push
outsl
fs
pop
mov
adc
sbb
or
push
cs
sub
ljmp
int3
jecxz
xchg
xor
xlat
outsl
jecxz
push
outsl
stc
mov
pop
test
mov
cwtl
sbb
and
movb
std
in
sub
stos
adc
test
out
leave
inc
cli
js
jmp
popa
jg
sub
mov
fistpll
mov
push
xchg
iret
pusha
sbb
pop
inc
in
fwait
aad
inc
loop
sbb
sub
stos
adc
adc
inc
fnstcw
xchg
insl
xchg
lret
pusha
hlt
jmp
sub
mov
pop
testl
push
mov
jb
ss
mov
inc
jb
sbb
loop
movsl
push
adc
sbb
loop
pop
sahf
and
enter
std
mov
dec
and
das
call
vandnps
sbb
and
sub
push
pop
pop
and
push
cmp
stos
xchg
mov
lahf
jle
xor
push
dec
and
shl
sub
push
cmpsl
outsl
jle
in
inc
lahf
sarl
sub
dec
push
add
cmpsl
jb
mov
and
adc
inc
mov
mov
sbb
into
sqrtps
and
adc
lret
int3
roll
movsl
dec
xadd
push
mov
mov
dec
jae
xchg
jmp
xchg
mov
clc
arpl
add
lea
out
jmp
mov
pop
cld
je
and
andl
xchg
jmp
pop
scas
pop
pop
scas
mov
mov
int3
xor
lods
into
lock
add
xor
in
xlat
addr16
fistps
stos
sbb
addr16
push
dec
nop
rclb
test
sub
ret
test
inc
mov
sbb
sbb
idivb
lds
js
insl
mov
rorl
adc
pop
mov
mov
and
inc
add
mov
pushf
not
ja
cmp
mov
es
scas
mov
add
sub
movsl
jae
inc
sub
adc
ss
test
pop
inc
data16
xor
or
and
popa
mov
push
pop
lods
shrb
push
in
sbb
add
or
xor
push
mov
or
ds
lcall
xchg
adc
scas
and
gs
pop
out
add
mov
dec
jle
sbb
jge
lret
std
pop
dec
lods
stc
lds
xchg
cmp
cmpsb
icebp
scas
adc
inc
inc
mov
lock
inc
mov
js
jg
sbb
or
ljmp
in
repnz
pop
js
cmpl
jge
dec
addr16
cmp
fnstenv
int
inc
inc
aaa
lret
xadd
fidivs
inc
xor
popa
movsl
push
jp
ljmp
icebp
fwait
out
push
test
cltd
scas
addb
lcall
rcr
test
xchg
cmp
xlat
cwtl
push
adc
loope
pop
imul
das
jne
shll
shlb
add
das
pop
cmp
pop
fs
xor
jle
arpl
sbb
inc
loope
hlt
and
adc
jo
mov
repz
xlat
cmp
pop
inc
outsl
mov
mov
int3
cmp
shll
and
std
in
xchg
lods
xchg
iret
adc
pop
jmp
insl
std
mov
or
fidivrs
sub
cmpb
xor
ss
aad
pop
xor
popf
js
xor
leave
jb
pop
cld
insl
push
inc
sbb
outsb
jecxz
mov
je
xchg
je
leave
xchg
add
fisubl
mov
int
push
mov
mov
int3
push
pop
fidivrl
aam
fwait
in
push
cwtl
jge
push
xchg
mov
fsubs
jne
push
cli
cwtl
add
in
xor
and
dec
jae
mov
and
mov
mov
adcl
gs
pusha
dec
insl
and
int3
lret
loopne
sub
mov
sub
cmp
pop
imul
mov
in
inc
jne
push
or
mov
incb
xchg
stos
xor
jns
mov
lds
push
add
jbe
loope
fsts
adc
xchg
pop
push
sub
mov
cwtl
insl
push
cmp
jns
rcrl
cmpsb
mov
ret
sub
xchg
mov
inc
xchg
dec
or
test
imul
cld
dec
jl
sbb
pop
or
and
mov
movsb
push
xor
aad
icebp
outsl
add
and
daa
inc
cmpsl
cmp
mov
jb
bound
mov
cmp
jno
dec
push
mov
lret
aad
cwtl
arpl
mov
add
fwait
repnz
mov
shr
sti
push
pop
xor
movsl
jecxz
inc
add
mov
or
dec
sub
xchg
scas
cmp
movsl
inc
addr16
xchg
cmc
add
iret
push
rolb
dec
aas
loope
shr
fidivs
mov
dec
daa
sub
iret
mov
push
and
popf
arpl
mov
add
ljmp
jo
mov
pushf
add
cmpsb
xor
pop
cmpsl
outsb
cmp
mov
cmpsb
fwait
les
cmp
jne
out
mov
ljmp
sahf
sti
rorl
jmp
mov
loop
ljmp
rcll
lret
shl
jns
mov
jge
push
jbe
pop
scas
movsb
mov
or
imul
inc
jmp
lock
in
cmp
stc
iret
inc
loopne
stos
push
testl
cmp
pop
fwait
jecxz
push
pop
dec
outsb
pop
mov
mov
fsub
sbb
mov
aad
mov
stos
icebp
int
adc
adcl
jb
jp
cmp
cs
dec
adc
jg
push
fs
pop
add
fcmovb
adc
gs
or
xchg
push
sub
cmp
test
in
sbb
mov
add
test
add
sub
pop
mov
pop
jo
push
push
lods
mov
in
xchg
mov
insb
fdivp
cmp
jbe
bound
jnp
cmpsb
jmp
mov
xchg
cwtl
add
enter
enter
dec
shl
mov
xchg
cwtl
adc
arpl
sub
mov
ljmp
fs
xchg
aad
or
pop
out
loopne
adc
cltd
es
adcl
fcompl
xchg
fwait
leave
inc
insl
sahf
xchg
loope
popa
cld
bound
push
out
sub
leave
adc
es
mov
pop
ja
data16
iret
jns
add
push
cmpsl
out
mov
movsl
dec
aam
xchg
cmp
test
les
cmp
aas
sub
mov
movsb
std
dec
mov
push
sbbl
fdivs
mov
mov
push
ds
pcmpeqw
nop
enter
in
iret
in
mov
xchg
cmpsl
xor
xchg
sub
push
xor
into
out
push
out
or
xor
ret
mov
mov
pop
fs
sub
cmp
xchg
aas
fdiv
add
or
xor
jb
xor
mov
fldenv
push
cmp
jnp
push
jp
dec
sbb
adcb
dec
icebp
jge
cmpsl
sti
ret
lea
out
add
clc
adc
jle
aas
or
fwait
xor
or
push
xchg
jo
push
stos
dec
xor
cltd
and
jns
cld
insl
movsb
add
dec
daa
test
divl
push
mov
iret
or
jge
lock
xlat
sar
jb
out
adc
lock
lds
dec
and
push
xchg
jp
ret
push
and
fcom
jo
mov
in
adc
xor
movsl
lods
subb
lea
add
xor
push
xor
movsb
pop
or
lds
push
lcall
pop
mov
sub
inc
loop
mov
mov
lcall
xchg
mov
lock
xchg
js
mov
popf
sti
jle
test
xor
xchg
dec
mov
mov
mov
push
cmp
orl
pop
or
pop
or
adc
mov
aas
sub
pushf
mov
outsl
xor
cmp
inc
sub
in
out
or
sub
cmpl
lock
mov
mov
enter
pop
test
rolb
mov
enter
je
jecxz
mov
ja
pop
and
mov
shl
pop
cmp
xor
dec
xchg
jo
and
icebp
dec
xchg
add
mov
dec
movsl
call
xchg
rcrb
or
cmp
testb
repnz
mov
adc
dec
cmp
pop
stos
inc
movsb
or
adc
inc
idivb
mov
sub
mov
xor
jne
je
mov
mov
jmp
test
add
add
and
push
add
shrl
push
leave
jb
js
test
dec
fsubs
adc
sbb
sbb
stc
jae
adc
out
lcall
das
push
dec
or
xchg
fnstsw
lea
fsubl
mov
add
and
xchg
jbe
inc
and
out
mov
enter
add
xchg
mov
mov
pop
dec
xchg
inc
xor
out
cmp
lret
negl
xchg
mov
negl
xor
lods
ja
fidivs
inc
adc
push
aad
mov
push
int3
imul
fs
pop
in
dec
add
inc
push
jae
ss
push
cs
pop
inc
cmp
and
sbb
jno
or
adc
pop
xchg
mov
cmpxchg
in
test
insl
xlat
lea
add
xchg
xchg
sbb
test
cmp
xchg
loop
repz
lea
push
icebp
mov
and
pop
mov
cmpb
dec
popf
mov
stc
fcmovnb
in
ss
adc
jbe
mov
gs
sar
cld
sahf
roll
fiadds
loopne
and
xor
fs
or
push
jbe
mov
sub
adc
int
add
movsb
push
xorb
adc
js
pusha
jle
std
mov
mov
jns
adc
in
hlt
mov
ficomps
popa
ss
outsb
push
pop
sub
jle
add
or
sub
mov
push
js
xchg
adc
ljmp
xchg
xchg
ds
das
fisubs
fistl
push
lods
adcl
lret
sub
dec
inc
inc
ja
xorl
add
aad
pop
ret
dec
or
mov
cmc
icebp
outsb
pushf
cmp
cmp
sti
cmc
imul
gs
push
or
mov
inc
jp
push
in
adc
cld
mov
push
iret
and
mov
scas
add
xor
cld
jb
jle
mov
xchg
hlt
test
pusha
into
imul
lret
sub
adcl
jne
pop
adc
repnz
in
sub
and
xorb
pop
fcompl
sbb
jo
pop
stc
inc
mov
xor
icebp
jp
cmpsl
xor
or
jno
mov
xorb
cmpsb
or
mov
push
push
mov
or
in
in
pop
jle
cmpsb
in
shr
sub
inc
pop
sub
stos
jbe
mov
and
in
call
sbb
filds
dec
cmpsb
cmc
pop
and
in
and
cli
push
test
push
xlat
sub
xchg
and
mov
add
into
xor
dec
rcrl
push
xchg
and
into
add
iret
xchg
mov
sub
shlb
push
mov
stos
add
scas
int
icebp
or
add
dec
dec
in
mov
xor
scas
das
jno
setns
lret
xor
bound
insb
in
push
mov
std
pop
xchg
or
ds
leave
push
jg
test
insb
inc
in
adc
icebp
adcl
push
mov
dec
and
out
cs
aam
inc
cmpsl
not
sbb
push
enter
add
pusha
pop
push
add
lcall
inc
jno
pop
and
xor
ret
sbbb
lcall
loop
sub
mov
sub
xchg
test
push
je
icebp
iret
ret
lods
dec
dec
or
dec
in
scas
inc
or
or
push
lods
popa
test
jbe
lret
andb
mov
out
cmp
out
mov
fsubrs
and
lea
jne
pop
imul
or
mov
int3
push
les
sbb
dec
loopne
add
cmpsl
and
pop
daa
jge
mov
jge
fnsave
cmp
jecxz
movsb
test
sbb
ja
sub
mov
xor
inc
mull
fadd
or
cli
mov
lahf
cmc
das
xchg
gs
mov
xor
repnz
pusha
scas
mov
out
adc
push
jo
push
aad
cld
pusha
pop
cld
pop
iret
xchg
sbb
cli
pop
add
pop
call
mov
lcall
cmp
enter
mov
pop
sub
insl
popa
pop
push
mov
movsl
orb
mov
and
mov
xchg
pop
add
popa
push
add
pop
xchg
push
cli
aam
pop
cmp
dec
pop
fistpll
jge
test
adcl
bound
mov
out
push
pop
adc
and
out
fcmovb
push
sarb
add
inc
subl
mov
cld
push
inc
shlb
mov
aam
dec
out
lods
cmp
or
add
and
ds
nop
lcall
cmp
mov
cmp
dec
mov
loop
and
jne
sbb
mov
int3
xchg
jns
xlat
jmp
add
jnp
jns
inc
mov
scas
mov
lret
mov
flds
mov
mov
mov
jbe
data16
aas
push
insl
repz
and
or
fistpl
or
xor
ret
ja
clc
cwtl
xchg
ret
dec
lcall
test
jne,pn
and
fmul
sahf
xchg
adcl
arpl
xor
iret
scas
push
lds
cmp
cmpl
mov
outsb
daa
out
mov
pop
push
add
popa
inc
xchg
cmpb
fs
rol
or
cwtl
cmp
jno
stc
adc
jg
in
push
push
movsl
lods
ficoml
mov
cmp
shll
out
cwtl
xchg
ret
test
in
outsl
mov
rcl
jns
ljmp
iret
xor
xchg
sahf
rcrl
lret
rol
push
add
cmpsl
push
mov
ret
dec
mov
mov
loop
xchg
testb
das
dec
add
push
cmpsb
and
sub
bnd
adc
push
sbb
sbb
and
and
pop
cld
flds
pop
push
cmpsl
or
out
pop
jl
and
std
lock
mov
adc
jmp
xchg
pop
es
stos
add
out
mov
fbld
inc
andl
mov
pop
inc
adc
lods
fs
mov
loop
mov
or
xchg
iret
cmp
inc
aam
xor
xchg
cmp
sbb
pop
lret
sub
mov
push
sub
inc
daa
sub
imul
ds
mov
scas
mov
sbb
or
les
pop
pusha
jl
je
repnz
fwait
daa
push
xchg
sub
addl
movsb
movsb
fidivrl
aad
movl
imul
aam
dec
std
scas
jne
dec
and
popl
sbb
sar
push
insl
mov
xor
lods
les
sub
mov
mov
in
sub
jge
pop
div
inc
in
test
enter
xchg
pushf
dec
jecxz
or
mov
xchg
jb
dec
push
decl
ficoms
sub
mov
mov
jo
or
ss
jp
sub
leave
adc
pop
pop
push
cwtl
inc
xchg
leave
out
mov
shr
xchg
jle
outsb
in
sbb
add
jecxz
jbe
jae
movsl
or
fsubrl
ljmp
imul
mov
outsb
sub
pop
dec
pop
imul
or
sbb
call
addr16
xchg
add
ja
add
movsb
das
lret
pop
insl
add
pop
hlt
cmp
jge
pusha
test
imul
test
mov
cmp
out
mov
sub
lahf
shll
cltd
sub
or
sarl
mov
test
push
push
pushf
dec
sahf
xchg
lcall
xor
sbb
les
gs
out
cmp
fstpl
push
lods
push
or
or
arpl
cmp
fs
cmp
fisubl
mov
cld
repnz
scas
push
hlt
inc
es
and
shrl
or
sub
out
popa
mov
imul
push
lds
fadds
lock
movsbl
filds
mov
pop
adc
mov
sbbb
aas
or
push
or
loop
mov
es
pop
clc
fidivl
insl
test
stos
aas
popf
sub
iret
fsubrs
add
repnz
daa
adc
pop
push
xor
xchg
add
add
movsb
ret
xchg
lods
or
and
negb
test
push
imul
outsl
push
push
pop
push
push
adc
inc
imul
push
jno
add
jg
xor
int3
fidivrs
jns
test
js
in
inc
mov
test
mov
stc
push
pop
aam
push
dec
xchg
jmp
pop
adc
jle
sub
mov
dec
adc
sub
mov
sahf
in
sub
in
jge
out
or
insb
cmp
aas
sarb
xor
and
mov
add
fnstsw
ret
mov
outsl
xor
test
push
jg
ror
jns
leave
and
jmp
push
loop
lods
sbbl
inc
cmpsl
xor
and
mov
xor
aas
fcomip
sub
sbb
lock
mov
mov
jb
divl
lock
jns
sbb
dec
xor
cmp
inc
xor
fsubrs
mov
cmpsb
cmpl
imul
adc
adc
jno
cwtl
das
stc
je
sub
pop
in
mov
notl
sbb
jp
cld
inc
cmp
test
into
sub
cmp
push
push
sub
fsubr
mov
jp
xlat
sarl
mov
sub
push
pop
movsl
cmp
add
popf
stc
nop
ror
out
fwait
jmp
rcrl
jmp
and
movsb
in
invd
insl
ret
js
mov
jne
iret
inc
mov
clc
cmp
dec
mov
sahf
popa
cmpb
xchg
jb
xor
imul
and
movsb
pop
xchg
pop
arpl
mov
cld
ltr
push
test
popa
in
and
scas
or
scas
inc
push
mov
mov
add
inc
in
pop
pop
mov
data16
xchg
daa
mov
lcall
dec
inc
push
xor
inc
mov
jbe
dec
test
push
cli
and
ja
cmp
adc
pop
fs
rorb
ficoml
dec
adc
stc
jge
dec
lock
lea
and
push
jl
adc
xchg
jecxz
jg
bound
jo
pusha
lock
mov
aam
jne
xchg
and
lcall
inc
push
xor
cmp
add
repnz
test
xor
sub
je
xchg
mov
xor
cs
test
shl
lret
int3
in
add
jno
xchg
mov
fldt
push
sub
and
fcomi
inc
mov
dec
jae
pop
aaa
jno
and
test
push
sub
mov
clc
or
stos
fwait
mov
ss
inc
push
push
mov
add
pop
fldenv
mov
ss
rcl
push
cwtl
imul
cmp
ret
js
adc
xchg
mov
enter
jmp
sbb
xchg
rorl
testl
xlat
cli
push
insb
in
enter
loopne
pop
jg
leave
decl
push
jecxz
and
pop
ljmp
add
cs
cmp
movsb
lods
jns
movsb
fcmovnbe
mov
add
mov
sbb
fnsave
mov
scas
mov
jle
mov
sbb
mov
imull
pop
xlat
or
insb
fwait
xchg
xor
popa
and
dec
jle
sub
repnz
shl
ljmp
add
cmp
xor
fisubrs
addr16
jnp
rolb
pop
or
ret
not
pop
scas
stc
sub
adc
cwtl
sti
pop
xchg
mov
or
and
je
mov
adc
sbb
jge
xchg
cmp
shlb
insl
jae
cld
in
sbbl
repz
jbe
push
insb
cmp
or
mov
inc
sub
or
inc
mov
or
sti
lahf
jle
adc
mov
pusha
dec
call
xor
cli
outsl
imul
sbb
leave
add
mov
pop
ja
ret
test
pop
jae
ds
out
xlat
nop
cs
xor
sti
ss
mov
cltd
inc
dec
fsubrl
sbb
xchg
aam
mov
xchg
xor
pop
xlat
push
imul
in
test
cld
cmp
paddsw
cld
movsl
push
pop
inc
inc
mov
sbb
push
mov
or
int
ljmp
jns
and
aaa
in
clc
sahf
lods
pop
stc
cwtl
mov
testb
xor
xor
xor
mov
pop
cmp
aad
je
dec
sbbl
testb
into
xor
jp
jae
pop
cltd
sbb
cmc
adc
mov
or
add
mov
mov
imul
add
sub
int
adc
lock
dec
cli
push
call
imull
lcall
mov
inc
cwtl
jno
cmp
into
mov
add
sbb
push
sub
leave
into
rcrl
cwtl
xchg
and
xchg
or
xchg
cli
xlat
sbb
ss
fisubrl
ret
mov
pusha
into
or
aaa
sbb
mov
jp
mov
adc
xor
inc
out
pop
int
adc
push
pop
jne
add
mov
stos
xor
iret
or
loopne
dec
mov
jo
xchg
data16
mov
je
xchg
lahf
jne
lock
sbbb
jecxz
xchg
push
mov
nop
or
mov
cwtl
pop
jno
outsl
add
loopne
imul
leave
mov
sbb
jne
push
fcompl
xchg
mov
ljmp
daa
scas
cmp
outsb
outsl
pushf
and
xchg
adcl
adc
int
insl
shr
or
jl
mov
jecxz
jno
icebp
dec
andb
cs
popf
ret
jne
jne,pn
test
mov
inc
lods
mov
pop
loop
fdivrl
ret
dec
dec
xchg
cmp
cwtl
mov
mov
cmp
or
adc
ret
and
add
or
push
inc
ret
lods
or
inc
sti
ja
inc
mov
sub
inc
jns
lret
xchg
arpl
push
sbb
push
and
in
insb
in
adc
in
cli
xchg
neg
enter
cltd
cmp
mov
pusha
pop
dec
mov
cmp
or
idivl
sbb
sbb
sahf
sti
inc
jmp
outsb
mov
arpl
aad
rol
lahf
mov
inc
inc
aas
mov
xchg
outsb
inc
adc
rcrb
add
mov
dec
lea
or
sbb
pop
cmp
dec
in
shrl
mov
mov
stc
xchg
movsb
js
push
cmc
dec
pop
test
add
ret
es
pop
push
jbe
jae
mov
imul
lret
jl
mov
cmp
sub
ds
lahf
adc
xchg
add
test
lods
repnz
cmp
add
popf
iret
xor
imul
cmp
sub
sub
mov
shlb
cltd
in
and
arpl
push
xlat
add
in
and
jmp
les
mov
xorb
sbbb
popf
inc
mov
leave
sbb
mov
xor
pushf
add
icebp
cltd
cmp
push
imul
xchg
add
ficomps
cli
ljmp
mov
js
fisubrs
adc
test
adc
loop
dec
push
and
data16
ss
into
int
stos
push
lock
or
cmpsb
mov
dec
insb
out
dec
adc
loope
dec
insl
sti
push
add
fildll
sub
inc
into
pusha
fwait
in
adc
inc
hlt
pop
sbb
xor
pop
arpl
fcmovnbe
pop
push
sub
xlat
imul
imul
lea
cmp
dec
sbb
sbb
outsb
stc
rorb
pushf
dec
lods
loope
sub
fimuls
push
fidivrl
mov
xor
lret
icebp
inc
push
mov
sbb
ds
lret
clc
fmull
jecxz
movsl
and
xor
mov
notb
cli
addr16
pop
and
jb
xchg
scas
imul
cmp
addr16
ljmp
das
test
mov
push
je
mov
fadds
rcll
xchg
push
lea
jnp
lods
dec
out
in
xor
sbb
push
ret
ds
xchg
ss
fwait
cmpsb
ja
les
mov
push
xor
cmp
sub
jmp
daa
mov
call
in
push
sti
cmc
arpl
sub
dec
ret
xchg
jno
loope
xchg
or
bound
aam
shrl
loop
jg
popa
cmc
iret
pop
push
into
es
icebp
out
insl
push
xor
or
call
add
mov
mov
sbb
push
ljmp
or
mov
jmp
lret
push
xor
inc
out
mov
mov
aas
push
idiv
xor
aaa
cmc
dec
lods
call
push
data16
cld
fwait
roll
addr16
and
cmpsb
xchg
cld
stos
push
mov
jecxz
inc
cmp
add
mov
fiadds
and
push
adc
aaa
inc
imul
mov
xchg
je
ljmp
pushf
adcl
pop
mov
xor
pop
fstpt
push
adc
std
jmp
imul
jne
or
sub
out
xor
enter
push
mov
push
or
fadds
sahf
insl
mov
les
fisubl
inc
fxch
xor
rorb
sub
hlt
and
cmpb
imul
cld
rclb
fiadds
mov
pusha
jbe
fstp
stos
scas
mov
fsubl
aas
loope
mov
pop
jl
mov
xorl
or
das
sub
and
pop
icebp
add
xchg
and
stc
pop
mov
pop
push
mov
xchg
daa
jno
test
sub
inc
scas
xor
xor
add
adcl
test
mov
shlb
and
cmp
rorb
cmp
jp
or
mov
in
push
mov
mov
lock
insb
dec
pop
push
dec
adc
rcrb
xchg
pop
mov
outsb
cwtl
cmpsl
iret
dec
lods
xchg
and
outsl
mov
les
aad
jge
cmp
add
push
mov
pusha
sti
shll
in
clc
pop
push
pop
or
int
roll
pusha
repnz
loop
mov
sbb
jle
mov
pop
mov
negb
popl
cmpl
pop
sub
mov
js
sub
leave
push
mov
jo
std
cld
lcall
fstpl
mov
test
out
sub
mov
dec
dec
out
addb
outsb
rorl
stos
out
push
pop
fidivrl
push
mull
pop
test
and
ret
add
shrl
xor
dec
mov
cmp
mov
shlb
dec
mov
adc
push
xchg
mov
xchg
xlat
loop
lock
bound
mov
test
mov
inc
sahf
jl
and
or
sbb
int
cmc
jle
jle,pt
jb
lods
repnz
and
dec
fs
add
jp
mov
lock
sbb
cltd
sbb
push
jecxz
repnz
sbb
jmp
out
push
mov
lea
push
cli
aaa
mov
xchg
and
loope
roll
insb
les
sub
jae
call
loopne
mov
mov
jns
mov
xchg
imul
jns
dec
fcomip
rorb
sbb
sahf
mov
lods
shll
stos
movb
ja
aam
and
and
cli
roll
xorl
dec
cmp
in
shll
aad
mov
cltd
outsl
mov
jo
pop
jno
sub
inc
adc
mov
int3
push
repnz
iret
xchg
pop
nop
stos
mov
jno
popf
xchg
fldcw
daa
mov
ret
push
shrl
cmp
stc
pop
aas
js
js
cmpsl
add
mov
cmp
pop
and
xchg
fbstp
mov
data16
sub
movsb
inc
cmp
inc
dec
sub
xchg
fiaddl
not
dec
push
mov
dec
mov
ret
into
cmp
dec
dec
xor
ljmp
bsr
loopne
xor
pop
aas
imul
mov
pop
jmp
icebp
sbb
imull
mov
out
shll
sti
aam
pushf
or
dec
enter
jno
jb
cmp
mov
inc
pop
out
dec
loop
jo
cmp
lock
or
push
sti
and
pop
stos
mov
push
mov
int3
arpl
xchg
lahf
out
jbe
fs
or
xor
shr
push
leave
dec
jne
cmp
push
ja
shlb
and
sti
orl
sub
imul
lock
inc
sub
pop
pop
addr16
or
mov
or
jp
pop
imul
faddl
dec
pop
jle
xchg
icebp
shrb
mov
push
cmp
int3
xor
xor
leave
popa
push
inc
mov
xlat
adcl
fstpt
xchg
jge
stc
mov
mov
pop
out
sub
in
cli
xchg
imul
mov
mov
xchg
test
dec
push
data16
lret
imul
jbe
aad
mov
fdivl
push
jne
ffreep
loope
push
xor
pusha
mov
fbstp
cli
jo
pop
push
lahf
cld
mov
jle
mov
adc
leave
xlat
lret
mov
shl
jge
jp
and
pop
dec
xor
xchg
xchg
jmp
mov
enter
adc
jl
imul
inc
aam
jnp
mov
test
jmp
sbb
sub
cvtps2pi
add
inc
dec
push
xor
lods
bound
mov
scas
dec
pop
cltd
popf
adc
xlat
xchg
sbb
pop
imul
cmp
sub
js
jb
pushf
sbb
das
adc
inc
out
push
sbb
sbb
pusha
sbb
sbb
dec
mov
lods
pushf
cltd
out
scas
call
mov
mov
add
daa
popa
pop
mov
aad
jecxz
out
iret
cmc
js
inc
push
adc
in
aam
xchg
or
outsb
out
les
pop
aad
push
lea
push
pushf
dec
fwait
cmp
mov
lods
xchg
lahf
and
push
in
pop
gs
jmp
push
std
sub
pusha
hlt
sub
ret
mov
das
mov
adc
mov
add
dec
cmpsb
lds
or
popa
ret
adc
mov
pop
push
dec
mov
jbe
mov
jbe
inc
pop
mov
mov
ljmp
and
jle
jmp
imul
push
pop
jno
sbb
xor
cmp
pusha
fdivl
cmp
mov
xchg
sahf
xor
xor
cmpl
adc
dec
jmp
enter
mov
fldcw
cmpsl
mov
fisubl
pop
outsl
shrl
or
add
xchg
sbb
pop
cmp
xchg
fs
jl
or
shr
icebp
andl
xchg
scas
xchg
dec
mov
jo
cs
fidivl
mov
jbe
popa
dec
shll
pop
mov
addr16
xchg
push
push
inc
and
sbb
lods
xlat
mov
test
xorb
ds
xor
mov
loopne
xchg
lret
push
lds
test
pop
leave
and
xchg
dec
sub
mov
xchg
jae
int3
test
jp
mov
movsl
pop
pop
pop
xchg
xchg
loop
sub
adc
addr16
fsubl
xchg
cmp
cmp
in
jae
cltd
mov
cmpsb
cmc
mov
inc
add
cmpl
jae
xchg
ljmp
mov
cld
lods
or
mov
adc
ret
mov
es
xor
and
jge
fldl
sbb
fcoms
popa
adc
mov
repz
xor
sbb
xor
int3
pushl
inc
mov
adc
leave
push
fistpl
adc
stos
dec
imul
insl
daa
lods
data16
jl
jmp
loop
mov
subl
or
xchg
or
pop
mov
js
sbb
lret
movb
cmp
xchg
popf
cmp
mov
fisubs
push
pop
pop
mov
dec
popa
inc
shr
push
jb
jg
sub
inc
jecxz
out
cltd
sbb
loope
jg
rorb
jbe
adc
jp
cwtl
add
sbb
push
std
std
data16
addb
ljmp
lahf
dec
into
push
in
adc
aas
loopne
xchg
loopne
jo
jnp
in
xlat
f2xm1
cmpsl
enter
sbb
lea
in
xor
repnz
test
ss
sarl
cmp
sbb
cmp
mov
adc
sbb
iret
xor
sub
inc
fnstenv
and
jecxz
lahf
lcall
ja
pusha
fsubs
cwtl
sti
insl
cld
push
iret
fiaddl
mov
cltd
adc
cmp
jno
adc
xor
dec
out
pop
mov
pushf
mov
repz
push
mov
xchg
mov
ret
pop
sub
and
xchg
enter
push
mov
insb
nop
shll
mov
outsb
test
aaa
lret
jle
les
xchg
insl
notb
sub
add
out
call
mov
xorb
jo
cmc
mov
dec
insl
cltd
movsl
daa
or
mov
in
jmp
jo
loop
repnz
into
fildll
cmp
aad
jbe
mov
popf
mov
xor
inc
ret
pop
out
int
cmpsb
pop
xor
sub
and
push
test
or
jae
adc
dec
and
add
loope
ss
fnsave
adc
stos
jmp
fisubrs
in
mov
xchg
mov
jp
leave
jne
aad
push
dec
push
hlt
imul
sub
mov
and
dec
nop
pusha
mov
jmp
xchg
aam
jno
fsts
sahf
mov
jno
adc
sub
pop
pushf
jae
push
xor
xchg
xchg
arpl
dec
cmpsb
cmp
jo
aam
sub
ret
dec
lahf
test
adc
mov
mov
cltd
jae
out
pushf
lods
lret
clc
add
sbb
les
xchg
inc
stc
sub
and
sti
pop
ss
cmp
mov
pushl
xchg
negb
cmp
dec
mov
aas
stos
out
aas
xchg
inc
loop
mov
sbb
shrl
int3
cmp
mov
mov
jmp
das
mov
adc
push
ja
lahf
int3
mov
in
movsb
call
loop
xchg
push
dec
stc
jmp
xor
mov
outsl
stc
jmp
outsb
bnd
add
movsb
popf
leave
cwtl
pop
popa
clc
aam
shrb
sbb
inc
mov
mov
mov
sbb
loop
mov
jo
cwtl
xchg
push
add
int
pop
fs
in
movsl
or
jns
popa
jge
fimuls
repz
cmp
inc
cmpsl
arpl
xchg
mov
adc
cmp
and
dec
xchg
imul
inc
shlb
jns
into
sub
jns
iret
repz
std
add
addb
divl
loope
testb
lds
or
jo
fwait
popa
test
into
rclb
inc
loop
lds
fdivrl
aaa
clc
sti
data16
cmp
sub
push
push
stc
mov
fwait
mov
dec
pop
dec
mov
aaa
call
sti
pop
inc
sbb
jge
adc
in
imul
filds
add
cld
nop
fs
xchg
in
dec
pusha
fiadds
dec
pop
fstpl
sar
jmp
cmp
leave
jp
pop
hlt
push
sbb
mov
pop
sub
inc
sub
pop
movsb
data16
adc
aaa
push
and
insb
mov
bound
mov
inc
mov
xlat
daa
cwtl
sub
or
xlat
cld
mov
ret
scas
inc
cwtl
mov
addr16
add
test
mov
mov
shll
pop
lret
adc
pop
jmp
cmpsl
repnz
test
adc
lcall
popf
fildl
sbb
xchg
mov
push
shrb
shll
nop
pop
xchg
mov
data16
and
mov
sbbl
jne
jmp
jbe
mov
rcll
mov
cs
or
mov
aad
sbb
mov
mov
arpl
jbe
jge
in
aas
mov
mov
sbbl
push
aas
or
stos
inc
xor
jl
test
mulb
mov
sub
test
imul
leave
push
sub
xor
jg
cs
dec
sbb
xor
mov
adc
out
jno
shrb
andl
xchg
pop
dec
pop
xchg
sub
imul
adc
sub
mov
js
pop
and
stos
iret
mov
push
xor
ret
sbb
xchg
add
mov
mov
leave
mov
je
or
imul
es
decb
xor
sbb
das
leave
lret
and
mov
pop
mov
mov
sbb
add
in
jnp
adc
aaa
insl
fcoml
mov
cwtl
icebp
movsb
rcrb
add
cmpsb
jg
pop
je
pushf
lods
mov
mov
or
icebp
mov
dec
push
or
xor
adc
test
cwtl
push
ds
jg
mov
out
xchg
sub
mov
nop
pop
hlt
fmull
shrd
nop
adc
add
sbb
pop
pop
sar
or
pop
push
lds
and
fmul
mov
pop
xlat
outsb
or
dec
sbb
ret
notb
cmpsb
cmc
test
fwait
jns
shl
rcr
fnstcw
inc
aaa
out
jl
or
and
cltd
mov
fldl
dec
mov
pop
test
xchg
call
push
mul
dec
into
dec
sbb
lret
adc
mov
push
iret
inc
pop
push
movsb
mov
push
clc
inc
enter
int3
call
dec
mov
jne
mov
roll
shr
xor
jbe
rclb
mov
lcall
pop
popa
xor
cltd
test
lret
push
mov
popf
mov
sbb
xchg
sarl
push
jp
sub
push
cmc
sub
sbbb
insb
and
fbld
sub
imul
pop
jg
in
sbb
andl
outsl
xor
pop
int3
ret
cmpsl
cmp
fdiv
add
mov
cltd
sbb
icebp
or
dec
ds
push
jmp
ljmp
enter
mov
pop
mov
xchg
mov
sbb
xor
mov
inc
sbb
enter
outsb
dec
push
testl
dec
fistpl
cmp
mov
add
add
out
test
iret
pusha
push
daa
fidivrl
sbb
add
adc
mov
dec
add
ja,pn
call
mov
xchg
jbe
push
ds
and
nop
scas
adc
pop
xchg
mov
mov
outsb
dec
mov
xchg
fcomps
mov
push
insb
in
test
movsl
and
lahf
sub
imul
jae
popf
and
mov
push
aas
push
and
in
packssdw
cs
sti
mov
into
xchg
popa
add
adc
lret
mov
or
or
add
je
out
jnp
into
outsl
dec
in
sub
mov
dec
jbe
cmp
dec
movsl
ja
loope
jecxz
fstl
data16
inc
xchg
sti
mov
call
mov
push
popa
imul
adc
sar
sbb
and
ja
out
pop
imul
ljmp
xor
mov
ss
aaa
cwtl
xchg
xchg
jge
xor
sbb
fwait
sub
push
xor
mov
lahf
jmp
xchg
dec
mov
push
frstor
mov
sbb
sbbb
jo
cs
mov
test
push
mov
push
jns
popa
fcomps
orl
dec
and
xor
std
push
mov
sbb
and
fldz
jne
cmpl
dec
add
mov
mov
xchg
imul
ret
mov
dec
das
xchg
leave
ss
es
adc
lret
and
nop
fwait
cmp
sub
cmpsl
out
mov
push
inc
adc
in
insl
dec
ss
sahf
and
notl
mov
jb,pt
movsl
mov
lahf
rorl
jns
sar
nop
stc
aad
das
jle
out
ror
push
mov
push
stos
loopne,pt
fsts
out
mov
sbb
cmpsl
ret
out
jle
add
and
cmpb
stos
xor
jp
pop
je
inc
push
aas
sbb
cmpsl
fidivs
mov
les
cmp
or
mov
aas
or
pop
jge
xor
cmpsl
mov
fistpll
mov
xchg
jge
fstpl
outsb
fisubrs
push
push
test
testb
dec
adc
mov
clc
mov
add
cmc
sbbl
mov
addr16
or
mov
aam
test
and
inc
iret
insl
cmpsb
fdiv
and
bound
cwtl
fcoml
loop
xor
xchg
mov
mov
aas
repz
sbb
sub
lret
enter
into
cmp
and
sarl
xor
add
xchg
movsb
pusha
loope
and
sbb
in
aam
sub
je
xorb
das
add
sbb
ret
mov
jp
push
test
shll
and
fistps
int3
mov
loop
push
mov
jl
or
sub
mov
movsb
push
mov
jmp
shl
int3
popf
mov
mov
cmp
cmp
xor
xor
sbb
ss
xchg
mov
mov
insb
mov
jae
loope
cli
test
inc
mov
fs
imul
mov
cltd
xor
mov
aaa
cmpb
jp
xor
add
fs
or
inc
stos
pop
fadds
lods
cmp
inc
and
mov
nop
pop
sub
shlb
lds
and
aam
mul
es
clc
mov
imul
ret
out
pop
outsb
das
xchg
cld
inc
pop
sbb
add
add
rcr
adc
mov
stos
jge
lahf
adc
cmp
mov
mov
repz
xlat
jb
hlt
xor
test
aas
xchg
xchg
push
call
and
cmp
loop
mov
sub
sbb
dec
stc
pop
pop
xor
xor
xor
in
jne
rcrb
cmpsl
adc
hlt
test
pusha
les
mov
xchg
xor
lods
movsl
fs
mov
inc
aam
mov
mov
jo
sub
mov
ficompl
cmovl
and
pop
imul
popa
and
jno
cmc
mov
xchg
stos
jns
leave
outsb
jnp
adc
xchg
sbb
mov
subb
inc
roll
nop
cmp
inc
js
ss
loopne
add
scas
jmp
adc
sbb
lods
call
lods
push
aad
sahf
sbb
xor
mov
fmul
and
xchg
mov
lods
mov
mov
lret
mov
mov
test
lahf
stos
dec
cwtl
outsl
test
cld
jmp
rorl
mov
sub
ja
mov
shrb
fcompl
or
popf
cmp
or
cmp
mov
fdivrp
jnp
loope
cmpsl
mov
cmpsb
hlt
int3
jg
std
mov
mov
and
sub
divl
cmp
sarl
lea
aad
mov
loope
iret
stc
and
dec
xor
fs
xlat
roll
lret
mov
add
insl
imull
scas
lock
inc
loop
popf
sbb
ret
mov
gs
fbld
mov
int3
lds
or
mov
nop
jo
mov
mov
cmp
jecxz
loope,pt
in
gs
out
sub
fstpl
adc
ret
xor
movsb
aas
xchg
and
aaa
in
test
jo
inc
mov
pop
sub
adc
icebp
pop
mov
xchg
cmp
inc
je
in
imul
push
inc
jle
nop
insb
cmpsl
or
mov
jbe
sbb
testb
pop
movsl
or
lds
sub
imul
jl
rclw
and
mov
test
lods
jnp
loopne
xor
mov
loop
sub
lock
inc
imul
fstps
xchg
mov
in
mov
xor
mov
mov
pop
cmp
in
imull
pushf
jle
xchg
add
fs
addr16
mov
dec
jle
sub
fsubs
test
stc
adc
and
aas
or
mov
rcrw
aam
cmpsl
cmp
pop
orl
jae
jbe
jg
inc
addr16
push
mov
mov
mov
nop
sahf
push
mov
loope
and
jle
sbb
adc
or
mov
jmp
xchg
aas
push
test
aad
push
cmp
popf
int
inc
cmp
into
stos
mov
cmc
sub
sarl
xchg
test
cmc
das
scas
in
in
outsb
cltd
pushf
xlat
mov
in
xorb
xlat
fs
add
mov
loopne
lods
loop
test
dec
clc
je
mov
jmp
pop
sbb
or
aas
jg
inc
fildll
pop
outsl
and
jl
inc
nop
iret
push
aad
xchg
aas
sub
stos
xchg
dec
sub
test
loopne
int3
lods
pop
jle
arpl
jne
mov
dec
and
vandnpd
or
mov
adc
and
jne
mov
mov
test
and
sbb
mov
push
push
mov
fimuls
mov
addr16
inc
inc
imulb
je
loop
or
cmp
arpl
fimuls
ret
add
clc
bound
test
sub
icebp
push
sbb
cmc
test
insl
lea
fs
and
jl
lcall
xor
icebp
in
jns
mov
adc
stc
xor
cmp
add
xor
nop
inc
and
push
lods
add
jle
lret
loope
adc
aam
fincstp
out
imul
aad
add
loope
in
sbb
jmp
xor
mov
fsubrl
and
mov
roll
pusha
cs
fcmovb
test
adc
xor
pushl
pushf
push
frstpm(287
push
xor
push
ret
or
pusha
pop
add
mov
enter
int3
iret
out
cmp
mov
movsl
daa
adcb
push
cmp
mov
cmp
aas
cwtl
mov
neg
xchg
and
les
mov
mov
lcall
add
in
xlat
arpl
mov
sbb
pop
mov
xchg
fwait
mov
cld
leave
mov
and
ja
xchg
mov
cld
or
mov
jne
stc
jg
mov
test
sbbb
xchg
in
cmc
fs
lahf
jmp
stos
cmp
data16
inc
jae
xchg
dec
test
test
mov
outsb
sbb
mov
hlt
lret
leave
cmp
fs
out
movsl
clc
repnz
push
sbb
pand
stos
cmp
xchg
mov
popa
aad
xorb
cld
cli
jl
jmp
xchg
lods
stc
insl
and
mov
out
xor
ljmp
popf
test
and
aas
sbb
jo
cmpsl
pop
outsl
pop
test
ss
je
ds
mov
push
fs
shl
test
inc
loopne
stc
adc
test
or
cmp
or
sbb
mov
fildl
lcall
out
mov
push
or
or
or
sub
es
stc
movsl
imul
fwait
and
dec
mov
imul
jns
out
push
mov
mov
dec
pop
ret
scas
in
out
subl
adc
enter
sub
imul
and
cs
mov
adc
cwtl
push
add
aam
mov
sbb
xorl
insb
scas
out
out
push
xchg
into
and
aad
mull
push
aas
adc
imul
in
nop
jge
in
xor
mov
mov
repz
mov
push
inc
mov
push
dec
mov
add
mov
popa
int3
pop
mov
jecxz
xor
mov
loope
fsubs
daa
inc
and
or
call
cmc
xchg
fistps
pop
mov
movsb
adc
test
xchg
into
xchg
xor
out
inc
sub
cmp
lret
enter
fsubrs
mov
aam
and
sbb
jnp
pusha
dec
jbe
push
cwtl
loop
imul
push
push
shll
sbb
inc
mov
mov
sub
outsl
bound
pop
jp
pusha
fnstsw
inc
sub
mov
call
and
ljmp
adc
mov
out
jl
rclb
push
rol
enter
loopne
clc
das
xor
cmpsb
outsb
out
mov
leave
pop
xchg
movsl
mov
xchg
or
cmp
jmp
jge
in
das
jmp
popa
lret
ds
int
adc
adc
lds
cmp
push
negb
dec
data16
fnstcw
mov
cld
fadds
sbb
lock
pop
repz
cmp
mov
jl
leave
sub
xlat
xchg
repnz
movsb
shrl
clc
cmp
ja
lods
testl
rolb
cmp
push
pop
and
xchg
loop
cmc
mov
movsb
mov
es
in
sbb
add
push
or
mov
or
inc
test
lock
cmpsb
ja
mov
sub
nop
add
mov
dec
mov
jo
and
arpl
pop
pop
daa
inc
jo
jnp
out
sbb
cmp
xor
sub
hlt
and
jecxz
jnp
outsl
in
jb
loop
cmp
inc
outsb
inc
les
xchg
arpl
popf
or
jno
mov
jmp
call
and
loopne
aad
jno
out
or
bound
jecxz
mov
fs
out
inc
push
dec
clc
fisubrl
cltd
inc
sub
xor
fldz
jae
mov
cli
popa
add
andl
mov
pusha
dec
in
push
loop
ja
dec
dec
ret
xorb
cmp
sub
pop
xor
xchg
add
subl
pusha
mov
xchg
push
icebp
xchg
inc
fisubl
dec
iret
in
mov
lock
sub
into
lds
sub
xor
adc
scas
jmp
outsl
arpl
roll
sub
jns
push
inc
pop
xchg
mov
jb
ret
xchg
int
push
add
adcl
daa
dec
aad
sub
xor
insl
dec
mov
adc
mov
test
and
sub
push
ret
or
and
aad
daa
fadds
jno
scas
fsts
jae
addb
cld
scas
in
cmp
dec
pushw
inc
jbe
ret
lds
mov
shlb
cmc
adc
orl
xchg
or
and
pop
int
sbb
mov
mov
cmp
imul
mov
fsubrs
lret
jge
add
xor
mov
add
sbb
sub
int
xor
add
arpl
and
std
cwtl
popa
sbb
jp
adc
xlat
adc
xor
sbb
add
fldt
rorl
mov
mov
sbb
mov
arpl
out
xchg
js
cmp
xchg
cltd
xor
sub
scas
jno
pop
addl
inc
std
in
mov
mov
pop
push
push
in
fsub
xchg
ljmp
mov
push
or
sub
loope
push
ret
and
js
stos
lret
jno
sahf
aaa
adc
not
push
xchg
xor
shll
vpsubw
lret
xor
das
xor
mov
lods
mov
sti
mov
ds
ss
aaa
pop
dec
push
int
add
push
insl
and
popa
cmc
outsb
outsw
push
addr16
gs
pop
cmpsb
movl
lret
ljmp
xor
jae
or
fdivrl
hlt
pop
mov
bndstx
inc
push
pop
les
mov
enter
jp
fcmovne
sbb
dec
xor
jp
nop
shr
mov
pop
xchg
push
cmc
inc
xor
sar
pop
pop
xchg
xchg
out
into
mov
mov
push
cmp
xor
pop
add
ret
rol
shlb
push
push
push
mov
or
scas
cmc
insl
add
test
in
sahf
xchg
fiaddl
fildl
sbb
popf
mov
lret
fstl
jg
les
ret
sahf
test
adc
dec
dec
lahf
hlt
arpl
lods
xchg
jnp
in
cmpsl
ret
lock
inc
xor
jle
or
pop
hlt
adc
dec
call
xor
outsl
jne
cld
lret
cmp
int
iret
iret
mov
sbb
cmp
test
data16
cmp
mov
add
sbb
gs
push
hlt
mov
in
jle
in
leave
aad
push
inc
pop
cmpsl
and
jns
inc
inc
aad
pop
sbb
lret
shrb
push
test
negl
add
mov
pop
push
push
repz
mov
dec
xchg
xor
sub
add
inc
cld
mov
shll
mov
xor
test
inc
sub
dec
mov
outsl
pop
push
push
adc
lods
cli
sahf
and
inc
leave
fsubrs
mov
push
scas
jnp
cmp
sbb
xchg
cmp
pop
jge
sbbl
mov
adc
sub
repz
rcrb
mov
push
icebp
and
mov
adc
vhsubps
nop
stos
adc
rolb
daa
and
movsb
sub
sub
out
and
ja
fbstp
pop
xor
dec
dec
cmpl
push
out
sub
adc
daa
and
adc
or
lds
ljmp
add
ja,pn
ljmp
in
inc
pushf
lock
pop
xchg
push
das
jmp
not
pop
fnstsw
movsb
int
ja
mov
push
es
fadd
or
ljmp
ljmp
in
lods
sub
std
cwtl
inc
andl
test
arpl
dec
xchg
cmp
lds
add
lods
or
push
and
insl
cmpsl
lret
out
ret
push
mov
cmp
mov
xor
test
shlb
out
jp
lcall
jge
dec
pop
in
test
jnp
daa
fldl
fsts
and
dec
pop
aam
notl
into
outsb
ficoml
sub
push
pusha
popa
xor
enter
retw
adc
mov
cmp
cmp
or
insl
out
mov
push
cmp
cltd
and
mov
xchg
jmp
push
aad
dec
pusha
cmp
int3
cmp
dec
dec
xor
arpl
in
clc
jnp
loop
and
xor
adc
js
inc
dec
inc
out
cmpsb
clc
aaa
dec
sub
mov
mov
pop
adc
cld
stc
lahf
pop
loopne
lock
inc
ret
or
adc
mov
push
arpl
into
divl
sahf
pop
inc
inc
add
pusha
test
dec
mov
fwait
xchg
push
sti
cmp
lods
dec
sub
jno
push
stos
adc
std
mov
mov
push
push
fwait
mov
repnz
aas
or
cltd
notb
xchg
lock
shl
ss
sub
dec
cld
xor
sub
jmp
xchg
sbb
mov
mov
pop
sbb
rcll
dec
lahf
jns
ja
xor
scas
pop
and
gs
es
add
testl
inc
push
repnz
mov
lret
mov
xchg
aam
sub
addb
outsb
jno
lahf
add
mov
decl
inc
mov
mov
xor
int3
sbb
pop
shlb
push
in
fldt
rcrb
mov
mul
in
ret
adc
sub
rol
adc
push
xchg
lds
dec
insb
jnp
cmpsb
mov
gs
push
pop
xor
stc
in
ret
ret
dec
roll
inc
or
mov
pop
push
cmp
out
mov
in
in
fisubs
add
or
enter
dec
cs
xor
xor
fisubl
cli
aaa
add
in
xor
test
lret
das
lods
jae
ret
bound
dec
fisubrl
sub
push
adc
shlb
jbe
into
pop
mov
jo
jns
lahf
xchg
aas
call
jne
or
mov
dec
push
lock
pop
lods
mov
fiadds
mov
and
movsl
mov
jmp
xchg
cli
test
xor
cmp
pop
pop
jno
lea
aam
fdivrl
adc
inc
xor
add
sub
cmp
xor
xor
ret
pop
addr16
sahf
push
jo
inc
xor
stos
movsl
mov
jbe
rcll
xor
xor
fidivs
not
and
push
in
ficomps
outsl
aas
arpl
popa
xchg
arpl
and
aad
add
int
inc
pusha
pop
fcmovu
inc
dec
inc
test
enter
jo
scas
mov
punpckhbw
or
xor
sbb
in
cltd
pop
add
push
cmp
orb
xchg
cmc
sub
ja
mov
daa
loope
data16
ljmpw
dec
sahf
ljmp
dec
call
scas
movsl
jl
out
in
pop
push
jbe
bound
sahf
daa
outsb
push
insl
jecxz
dec
dec
outsb
jmp
xlat
xchg
int3
fisubrl
daa
cltd
cwtl
cmpsl
pop
mov
sub
pop
and
loop
insb
mov
add
xchg
and
fildl
sarl
enter
shrb
stos
mov
mov
inc
call
dec
sub
dec
cmp
faddl
inc
lods
sti
popl
or
int
imul
pop
loop
rclb
fistpl
fsubr
or
test
pop
mov
lcall
lahf
fsubrl
mov
pop
loope
pop
inc
imul
xchg
icebp
inc
jmp
adc
adc
sbb
add
popa
cmp
cli
bound
jge
pop
repnz
loop
out
jle
lahf
pop
lds
xor
mov
inc
mov
into
sub
out
lahf
push
mov
out
cli
inc
repz
movsl
mov
mov
adc
adc
lods
out
jae
xchg
sub
pop
in
mov
cmp
stc
adc
int3
test
adc
rolb
sbb
mov
ljmp
add
fimull
std
add
jbe
int
cmp
or
arpl
cmpsl
in
jge
sbb
sub
mov
adc
lods
pop
popf
cmp
push
inc
xchg
cmpsl
into
mov
and
int3
movsb
stc
pop
xchg
out
lret
stos
out
scas
and
jo
fs
sbb
add
inc
loopne
imul
jle
dec
xchg
or
cltd
mov
pop
sbb
hlt
add
mov
jecxz
push
mov
xor
rorl
pop
jo
adc
in
mov
or
test
repnz
es
es
mov
loope
and
stos
cltd
cli
pop
sbb
ja
jmp
add
xor
xorb
scas
adc
addb
mov
pusha
and
pop
push
scas
call
sahf
jl
lahf
je
divb
popf
or
or
pop
into
adc
xor
fldt
jge
pop
xor
psubd
cwtl
leave
aam
and
pop
stos
std
jo
pop
pop
jno
arpl
lret
push
xchg
cli
das
mov
fimull
mov
pop
mov
stos
aad
add
inc
inc
test
sbb
pop
rclb
out
or
mov
nop
push
adc
cmp
jno
jl
ss
jb
stos
jne
mov
ljmp
orw
enter
inc
or
pop
and
stos
push
nop
add
push
mov
std
lds
and
adc
inc
fwait
mov
cltd
mov
imul
inc
mov
inc
in
jo
sbb
stc
mov
xor
inc
inc
pop
dec
repnz
shlb
mov
sbb
xchg
fldcw
or
xchg
les
add
clc
cltd
pop
pop
loopne
cmpsl
das
int
in
js
sbb
xor
aam
inc
jno
xchg
inc
vmread
mov
loope
and
enter
xchg
inc
roll
in
pop
imul
enter
inc
dec
cmc
xor
enter
int
int3
cwtl
mov
dec
call
cmpsl
dec
int
jge
cld
xor
cmp
outsl
mov
push
jmp
xchg
sub
pop
and
adc
and
and
pop
movsl
nop
mov
mov
in
sbb
bound
cmp
das
xlat
mov
cs
icebp
divl
imul
leave
add
mov
jmp
push
pop
rcr
std
imul
jns
cld
inc
rclb
sbbb
jge
loop
jecxz
add
icebp
jl
mov
and
xchg
jl
lods
cmpsb
or
cmpsb
arpl
xor
dec
adc
adc
mov
mov
int
xchg
into
popf
jmp
popl
xchg
xchg
test
aaa
mov
mov
popa
xchg
inc
insl
fwait
popf
pop
jae
inc
sahf
mov
cmp
out
outsb
pop
in
adc
test
add
jnp
out
or
jnp
mov
xor
repz
cmp
sbb
pop
iret
ss
jp
lret
mov
mov
push
push
cltd
push
cmp
lock
aas
jecxz
push
adc
sub
nop
jno
push
mov
inc
out
aad
add
sub
js
arpl
xchg
jl
jnp
outsl
or
xchg
outsl
cld
mov
ljmp
je
mov
xor
xchg
fcos
cmp
stc
mov
or
mov
lods
ja
mov
sbb
cmp
mov
aad
xchg
mov
jp
imul
dec
cmpl
sbb
or
dec
mov
into
daa
jno
xor
push
inc
fisubs
int3
sub
pop
dec
fistl
cmp
cmp
sub
jg
pop
sub
adc
xchg
xchg
cmp
out
jae
cmc
jecxz
and
daa
cs
adc
adc
stos
out
and
pop
sbb
es
mov
test
mov
jne,pt
jmp
xchg
loop
mov
out
stos
fmuls
adc
daa
inc
mov
lret
cmp
shrb
mov
hlt
sub
out
outsl
adc
jb
bnd
xlat
shr
mov
push
rcll
mov
repnz
mov
mov
dec
add
aam
cmp
out
jmp
and
cld
ja,pn
divb
daa
outsl
hlt
rclb
int3
fbld
sub
mov
push
lahf
scas
cs
lock
xchg
out
adc
add
or
push
loope
aad
sub
cli
cld
dec
mov
lcall
jmp
in
xchg
mov
lea
addr16
or
sub
pop
sub
cmp
addr16
cmp
pop
sub
test
lret
testb
mov
mov
or
scas
rcr
flds
outsl
aas
loop
xchg
lcall
cli
clc
loope
mov
jnp
rorb
dec
imul
sti
mov
dec
fninit
pusha
dec
outsl
dec
imul
cmp
pop
fdivrs
xor
mov
sub
shrl
ret
shll
mov
test
clc
inc
addl
sbb
cld
xchg
and
cvtps2pd
sbb
sub
pop
mov
jno
scas
sub
frstpm(287
sbb
les
mov
inc
jnp
cli
push
setae
out
jp
aas
popa
cmp
es
xor
je
jmp
out
dec
mov
daa
into
push
inc
xchg
ret
addl
pop
dec
into
mov
fisttpl
and
call
mov
iret
clc
push
xor
repnz
fnsave
adc
add
or
rorl
and
fstp
jecxz
in
cmp
push
push
fists
subb
xchg
jnp
das
push
xchg
and
sbb
scas
or
shrb
or
xor
arpl
neg
jg
sub
adc
iret
and
jmp
movsl
sahf
mov
adc
push
nop
div
jb
ljmp
ss
fiadds
movsb
aaa
fs
push
mul
sahf
cmp
aad
sbb
mov
aam
aam
mov
mov
pop
add
test
mov
mov
out
stc
aaa
inc
mov
inc
pop
xchg
add
mov
dec
and
fldt
repz
and
push
add
jmp
sub
in
hlt
jns
mov
es
mov
mov
xchg
cmp
cs
xor
imul
mov
cmp
fsubrl
arpl
inc
inc
mov
testb
outsl
add
jecxz
cltd
loopne
gs
lds
xor
and
jmp
pop
inc
sbb
loopne
pop
call
adc
pop
mov
rorb
popl
ljmp
mov
adc
outsl
pop
lret
in
jecxz
cli
add
pop
fsubl
cli
js
out
fnsave
pop
arpl
pusha
popf
jno
jp
jl
enter
mov
mov
and
mov
lcall
aas
dec
repnz
jge
mov
hlt
into
fcomps
add
repz
scas
mov
je
leave
xor
ret
ret
add
mov
sarl
add
pinsrw
rolb
addr16
into
mov
dec
or
aad
jno
push
sahf
shlb
std
push
int
xchg
and
mov
mov
pop
lahf
outsl
push
mov
cwtl
add
daa
and
lods
push
lcall
jnp
data16
push
cmpb
dec
push
xor
mov
pop
mov
add
aaa
lea
shl
mov
dec
push
and
push
lcall
in
jno
sbb
dec
push
mov
adc
fs
daa
mov
repz
loopne
jl
sti
mov
adc
ja
xchg
xor
sti
jnp
das
mov
arpl
mov
and
xor
push
mov
add
mov
jecxz
lods
fnsave
jbe
pop
ror
mov
aam
sbb
and
cs
adc
adc
mov
out
ret
xchg
adc
ja
psubusw
jl
lahf
and
mov
or
xor
into
fwait
fdivl
repz
adcb
xchg
jae
add
pop
and
adc
mov
pusha
adc
fwait
and
adc
cmc
in
xchg
jo
pop
testb
mov
cmp
shrb
outsl
setl
mov
add
bound
imul
mov
adc
int
pop
and
call
or
cmc
mov
pop
neg
dec
stos
addr16
leave
mov
add
push
icebp
add
jns
or
add
mov
testl
fs
ljmp
ja
std
sbb
cmp
xor
or
std
addb
insb
xchg
fisttps
negl
inc
mov
pop
push
daa
sub
pop
iret
mov
shrl
pushf
sub
lcall
add
jmp
cmc
mov
insl
xor
xchg
and
loopne
shl
in
mov
mov
push
adc
xchg
and
loope
aad
shrb
push
addb
push
js
mov
in
adc
mov
lahf
mov
or
fdivr
sub
jnp
in
mov
adc
ja
push
int
popf
pop
js
adc
je
ret
test
ret
jmp
mov
sub
and
clc
push
pop
mov
loope
sarl
and
pusha
sub
popf
call
fimuls
std
repnz
iret
es
xchg
push
xchg
xorb
leave
dec
cwtl
insl
shll
pop
dec
movb
loope
jbe
pop
dec
insb
xchg
cwtl
cmp
adc
dec
sarl
iret
xchg
adc
ret
popf
mov
es
jne
leave
fwait
xchg
mov
out
call
dec
cmpsl
int3
incb
shlb
test
loope
fadds
and
jl
jp
jmp
fxch
cmp
ret
in
dec
lret
in
lcall
mov
cs
jg
icebp
decl
and
mov
cld
xor
iret
pop
loope
xor
hlt
mov
jle
ret
cmp
fisttpl
xor
mov
les
adc
shlb
jae
xchg
jg
sbb
fisttpl
in
mull
stc
push
add
subb
jmp
inc
orl
pop
je
mov
mov
jo
xchg
push
xchg
cmpsb
test
sti
aas
mov
jge
add
mov
jno
cmp
pusha
and
and
outsl
xorl
cs
jbe
in
adc
imul
xor
sbb
dec
ret
andl
bound
xchg
in
insb
or
cmp
out
mov
cmp
adc
xor
loopne
sbb
dec
cwtl
fldpi
aaa
rorl
into
idivb
push
mov
mov
loopne
mov
arpl
xor
fwait
decl
mov
inc
aaa
push
and
mov
ss
push
jns
pop
and
in
dec
mov
sub
sub
add
notl
xchg
dec
sbb
inc
icebp
rcll
jb
iret
and
inc
popf
je
and
mov
jne
loop
popf
mov
aam
scas
dec
dec
stos
aad
xchg
insl
jge
sub
and
icebp
jb
movsl
xchg
lock
jp
test
xchg
xor
divl
xchg
out
cltd
xor
xor
cli
stc
and
pop
jo
xor
jnp
sub
lea
mov
cltd
dec
sbb
mov
aad
cmp
ljmp
mov
ds
testb
xor
sub
fldcw
cmp
sub
daa
cmp
inc
in
inc
mov
pop
xor
aas
xchg
fsubp
lret
test
mov
xchg
inc
cmp
fimull
xchg
aaa
out
lret
and
xor
aas
lods
into
add
rorb
mov
ficomps
push
push
adc
fs
sub
mov
stc
jb
fimull
fcomip
or
xorl
jne
add
adc
nop
test
int3
and
push
pop
std
jae
lods
jne
cmp
push
xor
cmc
mov
pop
and
pop
jnp
mov
das
in
je
lds
jne
dec
je
sbb
sbb
imul
jmp
dec
sub
lea
lret
cs
into
int3
dec
jae
daa
lcall
and
inc
pop
fisttpl
jmp
jge
jo
ds
pop
mov
addr16
inc
push
inc
test
add
inc
pop
cmpsl
pop
shll
cmpsl
inc
lret
xlat
cltd
ret
jle
xor
mov
xchg
push
call
xor
add
ret
out
mov
mov
jp
or
sbb
adc
ss
test
and
lods
leave
pop
or
xchg
mov
and
out
xchg
inc
xchg
cmp
popa
sbb
mov
sbb
movsl
mov
pop
daa
loope
pop
mov
xor
push
sub
lods
sub
daa
inc
in
sub
gs
push
dec
in
jecxz
xchg
aas
ds
test
js
std
test
jle
clc
sub
add
xchg
cwtl
jns
cmp
aaa
adc
dec
jg
int
enter
aam
xor
cld
or
mov
or
ret
sub
call
mov
pop
movsb
mov
lock
stos
in
adc
iret
mov
mov
out
int3
add
negb
pop
das
in
pop
out
sbb
mov
xchg
movsb
push
popa
xchg
pusha
mov
leave
mov
add
fiaddl
sbb
xor
cmp
xor
ret
pop
jle
pop
mov
aam
pop
mov
cmpsl
push
push
xchg
jmp
mov
cmp
mov
cmp
fcoml
lcall
xchg
fstpt
in
cs
cmp
jecxz
pop
xchg
lods
enter
and
aaa
xor
add
adcl
pop
pop
test
xchg
cmc
add
mov
out
mov
pop
push
and
sahf
cmp
pushf
ds
mov
or
add
mov
int
pop
fsubrp
mov
testl
lret
cltd
mov
call
fldl
mov
psubb
mov
mov
xor
imul
popa
sbb
ror
mov
xchg
jnp
push
mov
and
jmp
jo
ret
loop
ja
pop
stos
jb
jno
fistps
sbb
push
stos
call
mov
push
mov
aad
xchg
test
jo
das
fdivrl
xor
xor
mov
or
mov
jno
push
xor
incl
sub
popf
sbb
xchg
cmp
ror
mov
psllq
xchg
in
xor
int
pop
outsb
jecxz
and
jno,pt
jge
push
mov
cmpsb
mov
sub
rcll
insb
push
mov
mov
sbb
xchg
add
movsl
mov
stc
bound
icebp
pop
push
or
or
mov
into
repnz
rorb
outsb
jo
sti
mov
or
les
loope
mov
jg
adc
addr16
xchg
pusha
movsl
jnp,pt
lcall
pop
std
adc
mov
sbb
popa
in
test
out
pop
add
pop
jo
imulb
cmc
xor
fstpl
sbb
lds
xchg
pusha
xchg
insl
dec
imul
aas
mov
fwait
jno
imul
js
push
out
pop
jle
stos
aaa
mov
sub
jmp
int
pop
testl
sbb
subps
fcmovb
fists
xor
mov
and
lods
test
push
sub
loop
mov
mov
or
inc
pop
fs
cli
push
cmc
aad
aaa
mov
dec
aam
jo
and
sub
mov
sub
jmp
mov
lods
loopne
add
fidivl
arpl
mov
mov
insb
xor
rcrl
pop
adcb
cld
lret
les
cmc
mov
cmp
xchg
cmp
mov
lret
into
adc
scas
loope
movsl
push
pop
shr
xchg
xlat
lret
add
lods
xorl
imul
sbb
cli
ja
jbe
lret
sahf
mov
jp
outsb
inc
mov
popf
in
fnstsw
test
test
stos
das
pushf
mov
lock
mov
and
pop
out
pop
push
xchg
cmc
push
sbbb
inc
xor
pop
rcll
into
lea
shll
movsl
add
mov
mov
lahf
mov
cmc
cmp
dec
stc
pop
loopne
jecxz
jecxz
cmpsb
pusha
push
bnd
jp
mov
push
sub
out
lahf
push
aam
sahf
and
push
mov
lret
fiadds
jno
repnz
sbb
cmpsb
and
cltd
iret
mov
shrl
sbb
movsb
sbb
sub
jns
push
inc
mov
pop
mulb
pop
mov
mulb
popf
mov
daa
ds
lret
int3
mov
xlat
inc
xchg
and
insb
jmp
aad
xchg
jmp
xchg
loope
adc
addr16
push
std
js
enter
sub
xchg
adc
das
sarb
add
lcall
or
mov
push
je
push
iret
ret
sbb
mov
dec
rcl
movsl
fs
jnp
lahf
and
aam
xor
xchg
cmp
inc
jnp
push
mov
pop
xor
xlat
xchg
lods
clc
jbe
addr16
std
out
cwtl
clc
xchg
adc
push
add
mov
jne
cli
xchg
sub
loopne
adc
pop
push
mov
pop
test
lods
sub
fscale
jo
aad
mov
sub
add
dec
call
xchg
and
xchg
jb
or
inc
sahf
dec
push
sbb
mov
icebp
insl
xor
cmp
test
jnp
sahf
in
or
hlt
test
add
iret
adc
aad
cmpsl
shrl
dec
mov
mov
sub
xor
xchg
push
hlt
sbb
cmp
lds
std
es
xor
mov
push
sahf
xor
push
xchg
je
sub
aad
sub
or
pusha
aas
mov
or
cmp
sub
ss
sub
cmc
nop
xlat
mov
pminsw
popa
bound
loop
or
mov
pusha
data16
hlt
stos
aas
sub
nop
ror
mov
imul
fs
or
add
test
or
cs
stos
insl
push
pop
je
call
cltd
push
cmp
mov
push
incb
mov
push
push
dec
sub
outsb
and
dec
mov
int3
pushf
ficoml
or
mov
stos
lds
shll
adc
push
jp
sub
lods
cmp
stc
popf
cli
aad
fbld
inc
cmp
sub
jbe
inc
xor
movsl
clc
test
out
or
shl
xor
cmp
inc
jo
adc
jnp
and
adc
mov
ja
cltd
aas
mov
mov
xor
push
add
sub
inc
mov
dec
test
add
xor
mov
lods
jo
xchg
pop
sub
cmp
and
frstor
addr16
push
mov
jo
repz
loop,pn
cli
test
mov
jge
mov
movsl
jne
cmp
test
mov
or
insl
test
xor
mov
dec
jl
cmp
rcr
inc
das
push
xchg
cmp
sub
add
pop
sub
xchg
xchg
inc
loopne
mov
loopne
aad
jno
out
ret
aam
icebp
dec
cmpsb
in
cmp
pusha
push
leave
int
or
fstpt
stos
call
inc
adc
inc
sub
in
and
cmp
mov
adc
push
sbb
adc
or
jmp
push
push
inc
outsl
les
cmpsb
in
pop
mulb
sbb
jecxz
or
xlat
fstps
lods
push
mov
mov
and
fwait
out
loop
popf
push
iret
pop
mov
test
jne
adc
inc
in
cld
cmp
mov
test
test
jne
dec
out
xor
pop
and
ret
sub
jo
rolb
sbb
dec
into
add
sbb
scas
in
ljmp
mov
mov
pop
sub
ret
inc
sbb
aas
fwait
stc
mov
mov
je
popf
je
mov
xor
cltd
pop
daa
movsb
sbb
jo
aam
mov
sub
jnp
add
mov
hlt
shll
sub
shll
mov
push
dec
pop
pop
xor
sub
adcl
sub
or
push
mov
push
mov
stos
stos
push
mov
lcall
jecxz
fbstp
out
and
daa
cmpps
add
jae
test
or
outsb
mov
xor
cmp
push
xor
nop
ja
mov
leave
add
and
sub
or
jle
cs
mov
icebp
mov
je
inc
xchg
push
pop
sti
inc
mov
movsb
lret
inc
gs
leave
mov
popa
mov
sarl
rorb
out
cmp
add
insl
jecxz
inc
popa
and
movsb
test
rclb
jne
add
jns
out
sbb
sbb
jo
mov
pop
jge
push
xchg
sub
adc
push
cld
adc
imul
ljmpw
lret
inc
aam
pop
push
cmp
sahf
and
pushf
mov
es
cmp
pushl
mov
jb
lods
movsl
ret
and
cmp
dec
mov
mov
sbb
xchg
or
mov
les
shlb
xor
pop
xor
scas
push
sahf
idiv
cld
movsb
add
stc
loope
cmp
testl
scas
jns
sub
cmp
inc
adc
sbb
sbb
pop
test
call
sbb
in
out
int
and
and
jo
add
sub
dec
sti
xlat
add
scas
aas
add
mov
push
cmp
rolb
nop
ja
or
mov
xor
bnd
inc
xor
addr16
xlat
push
addl
iret
cs
mov
ljmp
pop
call
jecxz
cltd
stos
xchg
aas
mov
cmp
cmc
test
rclb
xchg
pop
xchg
jl
push
ljmp
mov
mov
out
jns
mov
jae
xchg
daa
lcall
push
roll
jnp
dec
jle
pop
outsb
mov
xlat
add
sbb
xor
std
divl
or
repnz
and
push
repnz
stc
sub
cmpsb
setns
loopne
insl
cmpsl
out
in
sarl
js
cmp
or
mov
cltd
das
out
pop
and
xor
sub
mov
xchg
mov
bound
mov
and
sbb
mov
je
into
imul
pop
arpl
and
sbb
mov
dec
and
pop
adc
pop
inc
cmpsb
mov
shll
das
popa
mov
ja
cs
les
test
cli
or
ljmp
pushf
scas
imul
shll
push
pushf
ja
sub
shrb
or
xor
pop
and
and
lss
add
lahf
in
inc
mov
fcoml
bound
sub
repz
push
repnz
movsl
jle
cli
js
dec
adc
mov
xor
idiv
pop
and
mov
out
fbstp
leave
sti
ficoms
psrlq
dec
xrelease
adcl
sub
push
lcall
andl
cmp
popf
js
repz
fadd
jbe
and
jmp
adc
std
inc
mov
xlat
sub
shll
push
pop
les
cmp
clc
jns
test
das
aas
lret
push
sub
add
xchg
lods
push
aas
xchg
push
push
or
cmp
pushf
add
jnp
mov
in
dec
cmp
mov
aad
and
ss
daa
out
ss
in
js
xor
mov
outsl
jg
loopne
add
add
mov
jecxz
pusha
dec
std
xchg
aas
mov
lock
push
push
push
rcrl
sub
andb
in
data16
push
js
faddl
sbb
fmuls
xchg
jns
ljmp
in
sbb
sub
or
pop
leave
test
das
add
ret
nop
sarl
and
sbb
xchg
adc
das
mov
sahf
or
loope
add
mov
pop
jg
jae
and
insl
add
xor
add
inc
push
sub
pop
scas
dec
xchg
jp
jae
insb
lea
jp
int
subl
push
or
les
and
dec
jle
pop
nop
out
gs
test
sub
mov
or
stos
xor
sub
loope
in
add
imul
mov
inc
shll
push
pop
xchg
dec
cmp
push
ss
mov
icebp
push
in
dec
hlt
mov
je
push
or
arpl
notl
and
or
je
testl
or
cmp
jle
lret
aad
and
and
fcmovb
hlt
jp
inc
in
dec
rcll
adc
hlt
sub
pop
imul
pop
cmpsb
cmc
cmp
xchg
pusha
adc
mov
add
mov
mov
jo
popa
arpl
mov
sbb
lret
mov
addb
cmp
mulb
mulb
out
push
xchg
xchg
adc
into
or
dec
push
xor
pop
cli
in
in
pop
fcmovnb
out
xchg
lret
push
jns
lcall
push
or
inc
fucom
lahf
jle
out
outsl
xor
jb
out
sbb
pop
xlat
cmp
adc
dec
mov
xchg
repnz
fucomp
pop
pop
jmp
mov
push
mov
fsubl
popf
rorb
sbb
and
inc
in
sahf
xor
mov
divl
movsb
xchg
mov
and
mov
cld
bound
fidivl
fidivl
clc
faddl
rcrb
out
rclb
int
mov
xor
stos
mov
into
aam
aad
imul
mov
rclb
sub
jne
jle
mov
push
into
pop
sub
push
push
loopne
sub
rcl
inc
adc
mov
inc
sbb
sbb
push
jp
sub
push
jbe
fstl
adc
add
aas
sbb
mov
or
dec
pop
and
add
roll
or
data16
jl
out
add
outsl
mov
iret
addl
xor
hlt
daa
jl
pop
pop
add
add
addl
add
or
outsb
loope
je
jecxz
sub
cwtl
outsl
popf
repnz
stos
rep
cmp
mov
ljmp
mov
fucomp
cmp
stos
inc
add
inc
dec
adc
rorb
fadds
loopne
icebp
push
into
test
mov
sub
or
xchg
mov
cmp
testb
pushf
bound
stos
jmp
ss
int3
out
les
push
loope
out
pop
xchg
push
ljmp
sbb
sbb
fbld
push
loope
cmc
insl
stos
dec
jno
gs
add
xlat
mov
rep
jmp
lcall
mov
mov
push
out
sub
jecxz
xchg
outsb
push
mov
jge
mov
sbb
add
pop
inc
inc
outsb
mov
not
inc
pushl
popf
sub
das
cmp
subb
mov
jae
push
dec
pop
cs
fisubs
pop
pop
push
test
dec
dec
xchg
out
ja
jg
cld
xchg
aad
add
lods
jnp
sub
in
xlat
adc
je
imul
orb
lods
into
sub
sbb
xor
push
add
aaa
mov
pop
xor
sbb
loope
in
push
ret
jmp
imul
mov
leave
sarl
lock
mov
ficomps
outsl
adc
cmp
inc
movsb
and
sar
lret
jnp
mov
and
push
rcrl
cmpsb
dec
push
pop
inc
push
lahf
mov
call
lods
adcb
dec
dec
or
jne
mov
inc
mov
mov
jl
enter
or
add
adc
shr
movsl
es
shrl
mov
pop
add
or
xchg
lret
repnz
cmc
add
mov
cli
push
sbb
jmp
xor
push
xchg
es
dec
ret
stc
mov
dec
sub
scas
cmp
jno
sub
sbb
xlat
jns
std
jl
ds
jns
xor
pop
movsb
dec
dec
xchg
or
mov
ret
dec
aas
aad
cwtl
inc
imul
fimuls
fwait
lods
notl
shl
sbb
jb
ret
js
hlt
fidivl
pop
sub
ficoms
stc
add
fldenv
cli
xor
stos
lcall
cmpsb
pusha
cmp
movsl
pop
cli
popa
jb
dec
sarb
xchg
test
push
cmp
fdivrs
adc
mov
imul
lret
adc
fmuls
lods
jae
sbb
xchg
daa
adc
int3
in
jg
fwait
pmaddwd
loop
pop
pop
repz
sub
inc
mov
jno
pop
loop
xor
and
mov
int3
std
sbb
push
int3
mov
xlat
mov
es
stos
es
imul
or
mov
pop
jae
js
imulb
cmpsl
fidivrs
pop
les
cmp
inc
sbb
flds
orl
fisttpll
mov
jo
lds
shl
mov
aas
test
fistpl
prefetch
or
mov
add
mov
jp
xchg
fstps
popf
orl
test
movsl
mov
andb
sub
aaa
mov
fcmovb
shlb
scas
push
mov
jns
mov
cmp
jno
idivl
pop
mov
adc
lock
inc
pop
push
ss
jmp
or
cltd
std
cmp
stos
jae
ror
insl
cmpsb
test
and
je
xchg
and
xor
negl
out
pop
bound
aas
call
andl
pop
fs
icebp
adc
jbe
or
ja
mov
dec
lds
test
cmp
cli
push
adc
lcall
mov
jnp
sbb
and
lret
or
ljmp
frstor
arpl
clc
jg
pop
jle
or
stos
add
jl
test
add
sbb
shll
addr16
xchg
data16
sbb
sbb
jle
xchg
out
loope
not
cmp
clc
scas
inc
sar
push
lock
mov
xor
ret
mov
cs
pusha
dec
test
loop
xor
xchg
cmp
push
cmp
dec
pusha
lret
push
int
mov
xor
jnp
jne,pn
cli
add
bnd
dec
mov
jae
jns
inc
mov
fstcw
mov
pop
inc
popa
in
or
das
fldt
push
xor
divl
sti
cmpsb
inc
jl
sahf
test
lcall
mov
js
jp
jp
add
stos
loopne
or
imul
sbbb
xor
neg
loop
pop
pop
jns
and
cmp
sbb
xor
out
dec
mov
add
mov
xor
gs
mov
mov
mov
aad
push
test
push
loop
insl
mov
push
push
mov
xchg
insb
ret
dec
data16
stos
add
enter
mov
jge
loop
cs
fists
mov
lods
xchg
hlt
jne
nop
mov
movsb
xchg
jb,pt
in
push
fcompl
push
adc
mov
xor
dec
xchg
sub
repz
xor
inc
aas
shrl
lret
fmull
mov
and
pop
movsb
inc
insb
repnz
xor
sub
lret
test
mov
or
jecxz
xchg
sub
pop
aas
decb
push
or
mov
call
mov
mov
repz
sbb
cmpsl
mov
mov
xchg
cmpsl
add
dec
pop
loop
cmp
xor
cmp
cmc
sbb
stos
mov
push
ret
inc
inc
sub
lahf
mov
frstor
stos
decb
mov
add
and
mov
cmp
cmp
mov
sub
pcmpgtw
aaa
mov
mov
jns
insl
inc
mov
cli
adc
repz
movsb
cmp
shll
fsts
cld
je
or
icebp
jmp
mov
cs
sbb
dec
and
push
mov
imul
inc
outsb
repz
push
lds
stos
rcrb
inc
adc
sbb
jl
sub
out
inc
test
rolb
and
pop
fwait
jnp
sub
test
adc
mov
aas
and
xchg
lret
movsl
mov
cmp
mov
ja
ljmp
aad
cltd
xchg
aad
jge
out
cmpsl
scas
daa
mov
fisttps
adc
or
sarl
inc
test
lds
imul
mov
shrb
bound
cmpsb
repnz
cmp
and
xlat
sub
outsb
sub
lcall
repnz
jne
push
or
dec
xchg
cmp
loope
pop
xlat
out
js
xchg
mov
push
and
aaa
cmpps
mov
lret
mov
cmp
ret
loope
mov
adc
jns
cmp
sub
cmpl
dec
xor
adc
mov
cmp
mov
xlat
lods
js
es
add
push
out
push
sbb
add
cld
rcrb
shlb
xchg
push
mov
fstpt
movsl
adc
mov
sbb
xchg
cmc
cwtl
pop
int3
lea
in
scas
in
mov
jne
add
sbb
push
inc
dec
imul
sbb
jns
js
add
imul
mov
scas
mov
test
or
stos
dec
ficomps
xchg
inc
xchg
negb
mov
pop
lcall
int3
cmp
idivl
jg
push
add
test
adc
or
fwait
rolb
popf
adc
movsl
and
add
push
lahf
scas
mov
jmp
cmp
scas
mov
push
lea
fstpt
lods
adc
lret
in
pusha
mov
pop
enter
sbb
or
negl
loopne
int3
xor
sbb
test
arpl
fdivr
cmp
mov
jo
lock
xor
adc
and
or
adc
or
inc
arpl
dec
or
or
test
movl
inc
cmp
dec
jno
jo
test
sub
out
sbb
imul
jno
imul
adc
push
add
inc
insl
push
mov
add
std
cld
lods
adc
fsubrl
pop
mov
jb
mov
sbb
out
dec
mov
jne
jns
mov
push
adcl
xchg
mov
mov
cmpsl
shlb
cmc
addl
pop
dec
add
cli
scas
jne
das
mov
shlb
nop
push
das
or
add
push
loope
mov
jmp
pop
mov
lods
loop
cmpsb
repnz
in
pop
adc
xor
mov
add
nop
pop
cli
mov
jge
mov
sub
mov
pmuludq
stos
je
pop
shll
loop
pop
sbb
inc
and
fisubl
enter
jg
outsl
fiadds
fldenv
nop
dec
xchg
jnp
add
data16
fimull
pop
cmp
jns
pop
sub
push
ss
sbb
mov
lret
dec
adc
xlat
in
ds
mov
jb
fisttps
cmpsb
mov
jl
jne
fsubl
mov
push
loop
hlt
repnz
cmc
lret
mov
jae
stc
mov
movb
push
and
aas
or
movsb
mov
push
add
test
push
inc
mov
xchg
sbbl
jmp
push
sbb
pop
jmp
mov
pushf
pop
jbe
jae
dec
push
pop
cmp
sub
adc
in
jbe
or
sub
cli
andl
add
pop
cmpsl
pop
jle
and
sbb
js
and
push
loopne
popf
rol
sub
data16
out
jb
add
out
test
mov
dec
inc
loopnew
pop
fsubs
lods
das
int3
push
mov
lahf
push
into
pop
mov
sub
arpl
sub
inc
pop
xor
inc
vdivps
enter
adc
hlt
mov
jl
scas
xchg
or
mov
xor
into
lret
pop
jle
arpl
jp
adc
lret
or
repnz
mov
inc
movsl
inc
cmp
test
test
add
gs
cli
sub
mov
sub
fmulp
xor
jbe
pop
mov
fnstsw
jmp
inc
or
sub
insl
shl
mov
push
out
loopne
jecxz
xchg
dec
xchg
xchg
aam
mov
lret
xchg
mov
inc
int3
sub
stos
lahf
cmova
mov
pop
add
incl
arpl
fcoml
hlt
das
add
rcrb
fidivrs
inc
and
enter
nop
adc
jnp
xor
jmp
lret
imul
mov
add
testb
out
repz
cmp
lods
push
xchg
testl
inc
push
out
loope
or
jb
mov
push
repnz
cli
add
pop
dec
mov
stos
outsb
loop
fbld
cmp
push
cmp
lods
lea
pop
stos
mov
xor
call
sub
xchg
test
cmc
cltd
loopne
sti
repz
dec
lods
aaa
adc
mov
loop
mov
jecxz
xor
fsubrs
test
add
inc
push
sub
xor
xchg
inc
fildll
int
pop
pop
add
inc
in
daa
je
inc
es
iret
push
add
mov
movsl
add
ds
inc
adc
fildl
fwait
pop
popa
cld
dec
xchg
xor
cltd
rorl
cmp
jno
mov
insl
push
push
sbb
movhlps
les
lahf
pop
adcl
xor
mov
push
rcll
sti
mov
shl
push
lea
push
jno
ljmp
mul
inc
movsl
mov
push
inc
loopne
xor
jbe
ret
adc
int3
mov
sub
sub
push
clc
or
and
lea
sub
lea
pushf
and
lahf
ja
bound
adc
pop
lea
mov
pop
in
xchg
into
pushf
cmp
xor
movsl
sbb
or
fsubrs
rclb
ret
mov
pop
pusha
and
jg
xchg
ja
or
push
xchg
fidivrl
test
in
add
pop
adc
clc
mov
and
outsl
inc
dec
enter
mov
cmp
xor
mov
add
pop
int3
inc
pop
inc
data16
push
cmpl
push
lods
dec
cltd
call
loopne
daa
pushf
test
lods
lret
xorb
enter
xor
in
shrl
inc
adc
sbb
jl
cmp
loopne
rcrl
adc
mov
bound
xor
rorb
pop
push
cmp
aam
and
sbb
ss
outsb
add
jge
cs
mul
adc
xor
out
andb
ds
movl
cmpsb
xchg
test
movsb
push
cltd
and
mulb
ret
stos
xor
std
or
scas
xchg
js
pop
ja
data16
ds
lods
int3
dec
jle
scas
out
jnp
arpl
jmp
shll
sub
ret
add
inc
hlt
aam
push
out
mov
mov
pop
mov
adc
mov
sbb
mov
inc
mov
cmp
les
xor
aam
cmp
sbb
or
cltd
push
cmpl
sub
dec
and
inc
cmp
scas
adc
push
cmp
lods
in
mov
mov
ljmp
rcrb
scas
das
inc
dec
dec
mov
mov
pop
mov
xchg
jmp
cltd
mov
mov
cmp
xchg
imul
xchg
sbb
ret
inc
mov
enter
ret
jecxz
ret
push
mov
icebp
outsb
out
mov
aam
jp
sarl
pop
sub
xchg
xchg
sbbb
imul
jns
je
aas
in
cmpsl
lahf
adc
sbb
sbbb
test
or
xchg
xlat
aad
popa
insb
mov
push
repnz
shll
push
loop
cmp
mov
dec
sarl
inc
int3
rorl
dec
lret
dec
int3
mov
mov
repnz
lcall
fmul
idivl
adc
les
mov
sbb
mov
in
push
nop
lret
push
mov
mov
mov
pop
cld
es
mov
imul
mov
enter
icebp
push
cmp
pop
in
repz
push
mov
xor
or
push
call
fs
sub
call
repnz
seto
out
pop
std
mov
push
test
ret
inc
pop
fisubrl
xchg
inc
cmp
sbb
imul
js
mov
push
pop
push
ja
insl
pop
mov
addr16
push
or
cmpsl
xor
imul
addb
pop
mov
stos
or
neg
in
mov
adc
inc
mov
in
les
cmovs
jnp
loopne
push
pop
movsb
les
cmc
test
add
inc
add
mov
mov
dec
adc
mov
ja
dec
jle
mov
aam
xlat
ljmp
es
jne
xchg
lock
adc
xchg
push
fidivrs
xlat
insl
jge
jb
sti
mov
outsb
hlt
jge
mov
cmp
je
push
sub
shlb
fwait
pusha
add
arpl
lods
mov
imul
pop
scas
xor
outsl
xacquire
aam
pushf
sbbb
or
aas
xchg
mov
and
add
clc
cs
adc
adc
mov
cmp
dec
and
stos
jge
jns
stc
dec
cmp
xchg
fdiv
fwait
jo
gs
mov
les
scas
sub
fsubrl
call
jp
fsubs
cmp
enter
data16
in
stos
ja
imul
lea
pop
xlat
fwait
sub
lret
xchg
fidivs
sub
push
maskmovq
negl
dec
jae
lods
and
pusha
insb
inc
addr16
fdivr
pop
mov
ss
lds
mov
jmp
push
test
pop
sbb
cmp
xor
and
push
leave
fsubs
xchg
test
shll
shlb
sbb
mov
add
sti
call
les
jl
rclb
mov
push
sbb
aas
push
push
sbb
mov
lret
test
ja
nop
cwtl
push
jo
jne
dec
jbe
out
cs
repnz
cmpsb
cmc
mov
mov
mov
pop
push
js
jmp
mov
or
mov
jl
sub
pop
repz
notb
test
sub
stos
movsl
mov
fstpt
fwait
pop
lods
and
jno
jno
rdmsr
lahf
roll
cs
and
js
lods
outsb
int3
add
das
insl
insb
mov
pop
mov
dec
adc
jl
adc
push
inc
repnz
xorb
mov
call
neg
sbb
mov
loop
inc
stc
xor
dec
negb
daa
test
xlat
rorb
jae
dec
push
cmp
ja
push
int
dec
movl
loopne
mov
adc
mov
fistl
xchg
cltd
or
pusha
pusha
xlat
insl
loopne
fnstcw
aam
jmp
mov
adc
push
lahf
aam
pusha
and
mov
dec
push
cwtl
xor
adc
imul
dec
leave
pop
fwait
pop
out
xchg
cmp
sub
jnp
xchg
jmp
mov
push
imul
das
inc
pop
daa
iret
popf
in
pop
lods
push
sub
add
ror
lcall
xor
iret
xchg
js
sahf
inc
outsl
or
mov
mov
inc
inc
push
mov
sbb
and
fisttpll
or
lds
iret
jno
jp
push
dec
shrl
cmp
dec
pop
sar
iret
addr16
icebp
push
ja
cmc
imul
shlb
and
hlt
pop
cmp
clc
mov
inc
repz
inc
les
adc
dec
push
rcr
ljmp
sbb
incl
ficoms
dec
shll
imul
push
pop
aad
add
mov
and
mov
add
in
incl
sbb
or
push
xchg
imul
jne
dec
mov
cltd
insb
push
ret
mov
mov
cwtl
in
sub
push
mov
inc
cmp
in
jp
mov
jae
cmpsb
xchg
pop
push
popa
loope
mov
rclb
jmp
mov
outsl
int
xchg
jno
jbe
pushf
aam
push
int
jb
inc
inc
fildl
aad
push
test
ret
test
mov
pop
outsb
adc
scas
pop
adc
subl
aaa
push
dec
jg
loop
imul
aam
jnp
das
fildll
popa
jne
test
cmp
cmp
das
add
cmpsb
rcll
ficoms
mov
dec
dec
fwait
jp
pop
push
nop
cmp
cltd
mov
jl
sbb
scas
push
nop
pop
scas
xor
ret
arpl
push
sub
jmp
mov
adc
xchg
xor
roll
les
mov
inc
inc
or
xchg
adc
in
mov
les
loop
lds
sbb
lcall
leave
out
test
xor
mov
jle
in
test
mov
jae
aas
cld
insb
cmpsl
rorb
sub
dec
int3
enter
mov
fdiv
shll
data16
or
jl
out
mov
push
pop
stos
fisttpll
rcr
mov
push
xor
fld
push
out
stos
push
shl
mov
cmpsl
or
and
fimuls
jp
dec
adc
inc
push
nop
cmp
imul
hlt
hlt
adc
mov
ret
pop
adc
sbb
mov
cmp
fimuls
mov
dec
outsl
jb
or
jmp
loope
dec
mull
andb
push
mov
mov
adc
jle
filds
mov
enter
popf
dec
pop
xor
adc
in
adcl
cmpsl
cmp
stos
push
popf
test
out
mov
testb
mov
arpl
clc
fidivs
ret
xlat
insb
push
dec
cltd
cmc
mov
and
shl
subl
pushf
cmovl
or
ficompl
push
push
inc
popa
add
mov
icebp
in
pop
adc
mov
addb
pop
mov
ror
pop
xchg
push
fsubs
or
sbb
int3
aad
std
xchg
sbb
scas
sbb
inc
add
scas
xchg
std
inc
out
adc
les
mov
push
pop
inc
popa
mov
mov
lret
lock
xlat
or
inc
cmp
mov
jns
cmc
jmp
daa
fisttpll
mov
fstpt
jmp
imul
jle
lret
sbb
add
cmp
cli
and
movsb
sbb
mov
test
es
pop
xchg
lea
inc
or
arpl
out
ret
sub
fidivs
fs
insl
out
stc
repz
jp
pop
mov
dec
int
addb
divb
sbb
lds
and
push
push
mov
test
imul
mov
lret
andps
lea
dec
cld
stos
mov
push
into
out
push
mov
punpcklwd
cli
inc
mov
mov
inc
xchg
das
push
hlt
repnz
jp
xchg
cmp
cmp
pop
cwtl
or
fwait
xchg
or
and
sti
mull
movsl
dec
je
sub
add
mov
scas
sub
mov
cli
out
out
xor
sbb
and
mov
aad
inc
cmp
or
or
das
int3
dec
mov
pop
xchg
cmpsl
jg
pop
push
sti
call
lea
or
orl
sti
ljmp
mov
js
cmp
fwait
push
jb
xlat
out
push
das
fistl
dec
mov
les
and
dec
mov
jl
dec
test
mov
cmpsb
jmp
xor
arpl
xchg
lret
cltd
push
xor
movsl
sbb
mov
cltd
cwtl
pop
arpl
cs
jp
popf
das
mov
adc
cmp
adc
mov
daa
enter
and
and
fwait
mov
enter
mov
mov
mov
loop
jnp
mov
lods
popa
and
gs
cmp
mov
pop
fcomp
cld
fidivl
dec
inc
inc
nop
mov
popf
daa
cmp
cmp
lods
loope
jae
jl
cmovne
nop
lret
lods
and
mov
cmc
and
pop
scas
mov
andl
or
adcl
or
mov
in
jb
ds
pop
xor
xor
lcall
and
mov
out
push
sarl
pop
repz
or
or
mov
push
imul
add
xchg
lahf
addr16
out
push
pop
cmp
nop
lods
cmp
pusha
push
lock
rolb
in
xchg
xlat
mov
and
adc
push
fiaddl
pop
jnp
sub
jge
xchg
sahf
and
fists
mov
lods
cmp
push
inc
xor
inc
and
mov
dec
add
test
or
add
add
cmp
fnstcw
jb
sbb
push
cli
dec
inc
lods
call
sbb
xchg
enter
pop
pop
mov
mov
jne
jge
sub
or
dec
mov
sub
int
test
xchg
loop
xchg
sub
pop
mov
jge
dec
ficompl
mov
das
mov
shl
jae
gs
or
cmp
test
push
and
cmpsb
lods
insb
lods
ja
js
cld
repz
das
dec
adc
dec
xchg
pop
dec
mov
fstps
sub
out
les
pop
mov
pop
mov
pop
into
scas
push
repnz
out
loop
mov
fsubrl
fldt
dec
in
mov
imul
int
inc
mov
insl
in
xor
pop
inc
sahf
lahf
rclb
ljmp
sbb
cmpsb
gs
mov
mov
mov
jne
sub
sbb
push
jns
cs
mov
inc
sub
insb
aam
xchg
stos
inc
pop
outsl
cmp
mov
jnp
mov
fnstcw
jns
mov
jp
mov
xlat
push
jnp
cmp
jno
mov
mov
xchg
cmpsl
lret
inc
cwtl
add
cs
xchg
jmp
push
jp
push
shlb
ljmp
mov
int
cmp
jae
shr
mov
jae
lods
aad
cltd
or
push
out
clc
arpl
insb
adc
jbe
lret
arpl
popa
jecxz
pushf
mov
xor
pop
xor
mov
mov
in
repz
add
cmp
mov
dec
jne
scas
cmp
and
push
jmp
in
or
sub
loope
mov
xor
pop
aam
mov
leave
xchg
or
aad
shlb
lea
xchg
cli
xor
loopne
andl
insb
jb
les
xchg
jns
sbb
push
aas
divl
shrl
or
ret
imul
xchg
mov
test
clc
fisttpl
out
hlt
loop
iret
xor
fildl
mov
mov
sahf
lret
or
ret
pop
aam
ret
jo
cmpsl
stos
scas
sub
insl
fidivl
aam
push
les
pop
fsub
jmp
mov
push
pop
iret
push
sarl
lahf
add
test
mov
insl
test
dec
ds
jl
inc
outsl
test
movsl
push
pop
pop
shlb
inc
push
sub
imul
popf
mov
push
loop
or
cltd
push
sbb
test
lock
cmp
inc
arpl
andl
out
jno
pop
lahf
push
mov
cmp
xchg
jno
lret
je
push
mov
movsb
push
imul
mov
push
xchg
out
ret
jnp
mov
rcr
cld
pop
mov
jmp
sub
pop
dec
jp
fmuls
add
mov
pop
push
cltd
jb
push
fstp
jae
mov
hlt
sti
dec
jbe
imul
stc
push
adc
insl
je
cli
bound
inc
add
inc
pop
sub
push
cmp
adc
push
fs
dec
push
pop
daa
adc
imul
pop
inc
in
movsb
push
mov
inc
into
mov
jb
pop
iret
into
dec
lcall
cs
imull
stc
lret
xchg
shll
push
or
shrl
push
sub
inc
xchg
gs
mov
daa
cwtl
sahf
push
mov
xor
lock
pop
hlt
pop
lret
adc
sub
clc
adc
jmp
ja
cwtl
push
cmp
xor
sahf
cwtl
mov
inc
fsubrl
xchg
inc
sbb
mov
pop
adc
in
arpl
test
test
add
fcomps
xchg
mov
push
cmc
push
ret
aaa
mov
rcr
pop
mov
cmp
idivb
je
fdivrl
lods
gs
loop
xor
inc
sub
into
mov
pop
stc
pop
xchg
push
or
nop
mov
daa
add
or
fstpt
fdivrl
sarb
pop
hlt
mov
pop
divl
insb
loopne
into
sub
and
push
out
cli
fmuls
sub
jl
mov
jo
jecxz
mov
loop
jbe
fwait
bound
pop
mov
arpl
mov
pop
xchg
sbb
jbe
adc
inc
int3
and
sub
dec
xchg
mov
adc
and
dec
pop
mov
rcr
mov
cmp
js
push
das
loopne
push
xor
pop
outsb
cmp
mov
push
leave
insb
push
test
xor
rcl
int3
out
repnz
add
add
out
sbb
test
mov
ret
stos
sbb
add
shll
aas
aaa
jp
jge
mov
scas
inc
mov
lret
xor
xchg
mov
cmp
push
pop
and
fs
push
dec
lahf
pop
lcall
jb
pop
or
jl
adc
and
xor
pushf
das
pop
addr16
popf
xchg
mov
test
mov
out
aam
cltd
lds
xor
xlat
mov
adcb
imul
jge
repnz
imul
addr16
xchg
mov
cmc
loop
mov
jle
mov
stc
lods
adc
and
push
aas
dec
push
mov
loopne
cmc
mov
rcrb
cmp
xchg
pop
mov
sbb
mov
in
loopne
or
push
es
xchg
loopne
imul
sarb
push
inc
daa
mov
les
fprem
cld
ss
and
mov
mov
movsb
cld
jnp
dec
cmp
jp
adc
jne
adc
sbb
xor
call
dec
subl
xchg
pop
push
jle
push
adc
mov
sub
pop
mov
jae
fidivrs
les
mov
xor
cmp
gs
or
sub
sub
pusha
xchg
jge
jb
frstor
aas
jmp
mov
repnz
sub
clc
sbbb
sub
mov
imul
scas
outsb
fsincos
mov
mov
jle
and
push
add
pop
pushf
scas
sub
jmp
out
dec
jns
fisttps
aaa
pop
in
dec
dec
xchg
and
mov
push
mov
lcall
or
lods
push
std
pop
sbb
jge
ljmp
mov
adc
aaa
jnp
ficoms
inc
aad
enter
fxch
fdivrl
inc
fnstenv
rclb
xor
dec
add
push
xchg
fxch
push
jo
inc
cmp
dec
out
push
mov
mov
mov
imul
gs
add
in
fwait
dec
pop
jo
jg
pop
xchg
leave
and
ja
loope
adc
xchg
scas
adc
or
ret
in
and
aam
ficoms
fstpl
xchg
mov
jmp
in
cmp
jns
jg
int
inc
lea
lods
pop
pop
sub
rorl
test
cs
out
dec
dec
mov
xchg
aaa
xor
lods
dec
shl
loop
adcl
add
jne
lds
fnstenv
mov
dec
xchg
loopne
sbb
jbe
ficomps
adc
inc
cmc
inc
rorb
push
fwait
iret
push
cmp
imul
dec
arpl
int3
adc
sbb
sbb
xchg
movsb
shlb
lds
push
ja
enter
fisubs
mov
xchg
jb
add
inc
xchg
and
mov
and
hlt
lcall
movb
stos
mov
fbld
out
jo
jno
push
sbb
aam
aam
dec
push
push
push
faddl
insb
add
imul
jg
das
jl
pop
in
gs
push
pop
push
xchg
mov
cmp
and
and
pusha
cs
inc
push
in
pop
fdivs
dec
rcrb
sub
cmp
and
pop
daa
js
adc
andl
bound
pusha
push
pushf
sub
cmp
mov
jp
dec
pop
movsb
pop
ss
popf
jb
out
xor
pop
xchg
mov
xlat
sub
push
sbb
aaa
call
xchg
or
js
ds
ret
dec
add
pop
shlb
faddl
mov
loopne
inc
and
push
sbb
or
dec
adc
or
popf
bound
test
add
les
js
addl
pop
mov
add
pop
out
push
jmp
sbb
mov
mov
fimuls
js
ja
lea
dec
or
cli
mov
sbb
pop
inc
fcomp
es
inc
jl
imul
addl
outsl
in
or
stc
mov
sub
xor
inc
push
bnd
xchg
jnp
in
jb
out
test
in
bound
and
inc
add
or
cld
jle
inc
pop
repz
or
adc
ficoms
or
pusha
jno
ja
add
cmpsb
popf
cmp
addl
xchg
into
add
cmpsl
cmp
push
test
lods
xor
mov
out
mov
jae
loope
sbb
ljmp
cmp
or
add
jle
mov
stc
test
daa
mov
bound
xchg
in
dec
pop
mov
sbbb
addr16
sarb
adc
adc
rclb
cwtl
sub
lods
data16
jns
sbbl
adc
sub
out
mov
push
aas
xchg
mov
cmpsb
inc
mov
fmul
movsb
dec
push
sbb
xor
push
in
in
scas
add
out
pop
mov
xchg
nop
inc
in
and
ja
mov
incl
jg
jb
das
pushf
xorl
push
js
test
mov
mov
movsl
xchg
mov
jecxz
or
mov
xchg
movsb
stos
jno
add
lret
cmpsb
xchg
lods
lds
in
xchg
xchg
push
jle
inc
mov
movsl
xchg
lods
gs
cmpsl
and
xor
cld
xor
sub
or
inc
adc
out
out
cwtl
mov
push
xchg
xchg
loopne
cmp
in
xorl
or
cltd
scas
xchg
add
and
mov
mov
divl
int3
pop
jmp
sbb
fs
pop
push
aad
xchg
sbb
inc
out
test
xchg
lock
cmc
and
into
in
into
test
leave
xchg
repz
pop
jl
push
movsl
sub
ja
ljmp
rclb
call
push
lret
ret
xchg
pop
dec
dec
pop
lret
adcb
and
push
outsl
mov
pop
mov
fidivs
nop
and
adc
cmp
pop
icebp
loop
sbb
push
dec
xchg
fdivrs
nop
cmp
and
sub
push
pop
mov
je
xchg
loop
mov
sbb
and
stos
test
dec
icebp
sub
add
aaa
pusha
jbe
loop
adc
in
ror
mov
bound
jo
xchg
nop
movsb
pusha
loope
imul
or
cltd
cmp
test
or
sbb
pop
xchg
jp
movsl
aam
sub
repz
repnz
pop
xchg
in
xchg
adc
xchg
popf
adc
adc
jae
push
icebp
jne
fcmovne
pop
fsubr
xor
pop
nop
push
sbb
lock
sbbb
aaa
add
ror
out
push
mov
pop
data16
mov
mov
pop
sub
dec
cmpsl
outsb
pop
arpl
hlt
add
ljmp
int3
or
mov
outsb
jae
popa
xchg
and
fnstcw
repnz
add
clc
push
lods
mov
fmul
xchg
fsubp
mov
adc
std
cmpsb
add
pushf
inc
orl
shrl
outsb
adcl
mov
lahf
test
ljmp
loop
lods
pop
enter
loopne
jmp
arpl
dec
mov
rcrb
sbb
mov
icebp
add
sahf
push
cld
sub
dec
push
setg
inc
inc
dec
repnz
and
mov
mov
dec
lret
xor
repz
mov
in
scas
sbbl
and
pop
stos
stos
pop
adc
xor
out
and
cmp
mov
and
push
lea
pop
pusha
dec
or
xchg
je
inc
xchg
jg
fbld
arpl
cmpsl
xchg
movsb
gs
inc
test
addb
and
sbb
cltd
iret
mov
out
sahf
dec
insl
cltd
out
aam
cmpsl
and
nop
mov
out
ret
mov
xor
lret
gs
sub
cs
xchg
in
clc
scas
sub
pop
xchg
dec
sarb
pop
push
inc
inc
pop
mov
dec
lret
mov
enter
cmp
pop
test
jg
rcrb
mov
lret
dec
pop
loopne
push
adc
jno
mov
cli
push
clc
jle
pop
movsb
popf
test
loop
sbbl
inc
fnstenv
rorb
outsb
shl
jns
repnz
pop
add
nop
in
outsb
and
pop
sbb
test
mov
add
or
lods
or
xor
mov
daa
mov
lods
aam
xchg
xor
pushf
int3
subb
pushf
ret
call
pop
dec
cltd
cmp
das
pop
dec
mov
mov
icebp
jno
jae
scas
in
lahf
adc
push
cmp
or
add
movsl
or
ljmpw
aam
test
cmpsb
dec
jns
fs
and
sbb
hlt
fstps
add
mov
add
sahf
add
add
scas
insb
push
push
fwait
dec
pop
outsl
mov
addr16
dec
enter
mov
pop
adc
and
ja
jp
rcrl
cmp
ja
xor
sbb
fisubrl
xor
and
aad
mov
adcl
mov
or
inc
out
and
aad
mov
fcmovu
out
mov
out
mov
cmp
inc
popf
ss
lods
enter
pop
mov
popf
or
mul
mov
sub
clc
xchg
xor
cmp
lds
add
mov
shlb
push
outsb
imul
sarl
mov
pop
test
rolb
mov
inc
js
lret
test
fnsave
sbb
jmp
push
fiaddl
insl
sbb
sbb
popl
mov
xchg
adc
call
outsb
xchg
test
test
jecxz
fwait
stos
insl
pusha
pop
cmp
xchg
sub
adc
jne
or
pop
inc
lds
cltd
pop
mulb
in
push
push
int3
mov
lea
mov
jecxz
cmp
pop
mov
popa
add
add
cmp
bound
cwtl
jne
jmp
shll
aam
cs
pop
jno
lea
inc
into
xchg
inc
js
imul
jle
cmpsb
aas
jmp
fdivr
mov
jno
dec
movsb
leave
xor
stc
xor
dec
adc
aam
xchg
lahf
sti
adc
icebp
cmpsl
fnstsw
jne
clc
mov
lcall
ss
push
js
mov
adc
ds
mov
shl
push
and
fwait
mov
adc
adc
into
test
dec
jnp
adcb
cmpsl
mov
mov
or
popa
mov
pop
stos
mov
subl
sbb
inc
subl
dec
cmc
lret
dec
lahf
ret
adc
fstpt
sti
mov
adc
movsb
adc
popf
lret
fdivr
ret
xor
jecxz
pop
adc
adc
mov
jae
push
xchg
mov
and
scas
xchg
mov
push
iret
jle
ja
push
dec
jmp
push
sub
les
adcb
sbb
push
or
loopne
sahf
loopne
sbb
divl
jns
in
mov
inc
cmp
push
out
jo
inc
sub
ds
lcall
jo
mov
popf
ds
xchg
fnstenv
pop
xchg
test
stos
ds
fstps
cmp
sub
jecxz
mov
cmp
pop
cmp
fsubrl
push
jg
mov
mov
mov
cmp
outsb
jnp
sbbl
lods
in
dec
jmp
or
fstps
pop
sbb
pop
js
cmp
in
lock
js
sti
mov
mov
ljmp
insb
lret
sbb
gs
push
gs
sub
pop
xchg
cmp
pop
pop
or
and
les
daa
xchg
sub
inc
nop
mov
cli
ficoml
lret
jecxz
out
mov
addb
cmc
inc
jge
mov
jmp
jno
leave
cmp
sub
or
or
pusha
push
loop
jp
pop
sub
or
fldenv
jl
inc
nop
ror
out
mov
jns
lahf
mov
dec
loope
das
adc
dec
cmp
adc
mov
lods
mov
shll
test
sub
repnz
pop
lret
mov
es
les
and
negl
jge
cs
fimull
push
fldenv
xor
adc
arpl
sbb
mov
movsl
out
outsb
flds
mov
fwait
lock
push
xchg
add
int3
insl
adc
test
mov
loop
ficomps
xchg
sbb
push
in
pop
ss
ds
fcomps
inc
add
and
adc
sub
stc
or
mov
xor
sahf
repz
outsl
cmpsb
mov
xchg
ret
pop
add
sub
add
arpl
add
cmp
sbb
push
cwtl
lcall
dec
imul
push
add
test
inc
adc
mov
mov
dec
pop
je
inc
fbld
test
in
ljmp
adc
pop
inc
inc
sbb
outsb
loopne
enter
adcl
xchg
mov
stos
adc
pop
sub
adc
mov
mov
movsl
pop
xor
mov
je
dec
add
lds
mov
cmc
lret
iret
pop
rolb
mov
int3
sub
int3
sub
cmp
mov
jl
loop
mov
fbld
mov
imul
lret
xorl
out
lret
lahf
lahf
insl
add
add
xchg
lods
adc
cmc
inc
pop
mov
mov
jbe
fcompl
popf
bound
mov
leave
ds
cli
or
xor
pop
and
cld
dec
add
xchg
iret
pop
or
cs
jnp
jbe
insl
and
or
pop
lcall
loopne
xchg
pop
fiaddl
cmp
sbb
push
addl
and
repnz
mov
mov
insb
shl
and
cltd
push
fsubl
aad
stos
dec
bnd
xchg
mov
iret
ror
mov
push
mov
inc
mov
loope
js
cmp
into
sbb
dec
fldl
in
fdivl
dec
idiv
ss
cwtl
sub
xor
add
adc
jmp
cmp
mov
pop
dec
push
and
fs
dec
aaa
mov
cmp
mov
popa
test
das
push
jnp
fbld
out
mov
cmp
push
inc
add
stos
int3
sbb
xchg
scas
ss
popf
int
dec
cmp
ja
jb
in
jge
dec
push
jle
mov
push
inc
out
push
cwtl
jb
xchg
or
xor
loope
sub
push
adc
mov
stos
push
sbb
adc
std
jo
or
shrb
push
lods
push
inc
inc
es
aas
andl
daa
sbb
add
or
inc
inc
cli
mov
add
loopne
xchg
ss
out
push
sbb
and
es
dec
popf
add
sub
jp
mov
rcrl
aad
dec
jns
sbb
lret
xchg
dec
pop
xor
xlat
jno
xchg
cmpsl
push
push
pushf
sbb
cmp
nop
sbb
mov
jge
xchg
les
sbb
mov
dec
lret
dec
adc
jo
mov
shrb
fnstenv
out
imul
pop
push
mov
cli
in
icebp
imul
in
jne
jbe
jl
lea
lret
or
test
xrelease
adc
sub
ret
cmova
cmpsb
push
add
xor
test
xchg
repnz
cmpsl
push
sub
adc
pop
leave
pop
sub
pop
and
outsb
test
or
in
mov
shll
leave
xor
jne
shll
pop
call
adc
mov
fcomps
movsb
xor
cld
pop
pop
mov
jae
sub
cmp
cmp
xchg
shrl
pop
cmp
xchg
xchg
mov
test
mov
imul
push
fscale
pop
in
mov
jl
push
subl
cmpsl
add
xor
movsb
repnz
dec
and
subl
ret
sub
xor
sub
cmpb
sbb
ds
sub
mov
shll
push
adc
call
addb
outsb
andb
les
push
xor
and
dec
roll
aas
pop
mov
adc
pop
daa
push
add
rcll
ja
lcall
test
sti
xor
mov
sbb
sarl
aas
in
add
mov
insl
lea
data16
sbb
jnp
dec
dec
es
int
inc
pop
inc
adc
sub
lock
bound
xchg
fistpl
adc
adc
cmp
push
dec
cmpsl
push
setp
scas
push
inc
mov
leave
and
sti
pop
or
icebp
ss
pushl
jle
fldenv
int3
push
in
ljmp
lret
sub
jge
xchg
stos
sub
dec
jecxz
stc
das
pop
scas
aas
ljmp
mov
cmp
mov
inc
or
cmpsl
mov
push
and
mov
popf
mov
adc
out
aas
pushl
scas
sahf
bound
fildl
fdivrl
frstor
movsb
add
sbb
lds
jno
fwait
in
in
xchg
lds
out
pop
popa
cltd
adc
enter
and
bound
enter
xor
mov
stos
sub
mov
ss
mov
movsb
std
cmp
xchg
jecxz
jbe
mov
add
inc
inc
outsb
shl
sub
mov
jmp
sbb
pop
mov
dec
push
fwait
jno
das
int3
dec
pop
and
repnz
push
pushf
jmp
xor
adc
pop
push
xchg
movsb
lret
out
dec
test
mov
divl
fmuls
mov
shl
dec
sub
pop
jne
push
xchg
push
fisttpl
push
sbb
or
insb
adc
testl
fwait
sahf
mov
sub
add
xor
or
cmp
push
push
lret
out
ljmp
call
jnp
inc
imul
out
mov
mov
cli
int
pop
add
fst
sbb
xor
into
aas
mov
lods
js
sub
call
insb
push
cmp
sarl
cmc
loop
aad
arpl
les
cmp
imulb
sahf
les
inc
hlt
mov
jno
jns
mov
cs
andb
lods
loopne
push
test
jbe
and
add
push
in
ret
mov
or
push
dec
mov
pop
out
xor
xorl
push
fwait
pusha
out
or
and
sbb
mov
aad
jae
or
xchg
push
xchg
or
shr
adc
dec
mov
sub
je
jge
push
daa
jl
ret
and
mov
clc
pop
or
mov
adc
les
jmp
adc
sbb
ja
pop
adc
push
pop
xlat
nop
data16
adcb
jns
mov
in
filds
out
push
sbb
jno
push
loope
daa
outsl
and
in
mov
push
and
aam
mov
push
fcomip
inc
jecxz
outsl
jo
add
mov
icebp
aaa
xor
xor
sbb
push
ret
lret
mov
fdivrs
out
in
xor
fldcw
fsqrt
add
imul
adcl
add
push
mov
mov
or
mov
xchg
xor
sbb
sbb
and
popa
or
xchg
lods
out
popa
ljmp
mov
lea
sbb
cmpsl
insb
sarb
icebp
popf
lods
sub
outsl
rolb
or
das
mov
lret
mov
push
inc
mov
mov
addr16
jno
aas
imul
or
push
mov
mov
mov
out
xor
mov
add
jle
mov
mov
sbb
or
pop
fldenv
push
pop
lods
fwait
cmpb
lret
mov
testb
pop
push
ljmp
imull
and
pop
je
jbe
inc
or
jno
xchg
cmp
xchg
cmc
scas
cmpsb
int3
or
cmp
jecxz
pop
aad
mov
fwait
xchg
fcomps
inc
lret
xchg
es
arpl
repz
push
dec
das
dec
mulb
mov
cmp
cmp
xor
pop
ljmp
add
out
insb
cwtl
sbb
ja
sti
mov
test
addr16
mov
push
ja
push
jp
xchg
jmp
pop
faddl
xchg
sbb
out
mov
jp
in
cmpsb
push
fidivrs
or
addb
inc
mov
stc
cld
sar
or
jno
pop
lock
cmp
push
test
pop
jp
or
sub
add
sbb
call
sub
notb
cmp
xchg
inc
mov
pop
das
push
stos
xlat
ficoml
shr
xchg
dec
out
push
out
jb
sbb
out
mov
scas
popl
call
mov
mov
mov
bound
add
adc
xchg
outsb
gs
lcall
dec
stc
jp
pusha
xchg
loop
xchg
aam
clc
cld
push
lret
mov
out
lock
mov
add
popa
repnz
in
dec
movsb
dec
cmp
sub
and
pop
into
dec
decl
cmp
jo
mov
leave
sbb
sub
test
or
icebp
push
cmpsl
out
hlt
mov
pop
ret
outsb
add
or
popf
mov
adc
pop
adc
out
mov
popf
ret
int
stos
test
addb
xrelease
lahf
push
add
sbb
and
rol
mov
adc
aad
dec
and
fnstenv
sbb
pop
push
jle
ss
inc
js
mov
fstl
inc
sbb
std
idivl
sbb
loop
and
xor
hlt
inc
int
repz
jbe
cld
mov
and
cld
adc
dec
push
or
inc
dec
xchg
ret
and
jns
lret
jns
and
movsb
or
sub
xchg
call
stc
dec
call
push
jb
popa
adc
test
jno
push
in
ljmp
cmc
xchg
or
cmp
sub
sbb
sub
out
aad
pop
jmp
pop
cmp
pop
pushf
loope
push
pushf
jae
out
add
arpl
dec
xor
or
mov
dec
hlt
mov
mov
dec
push
jmp
pusha
fwait
lock
cmp
imul
sbb
push
xor
lods
sahf
inc
cwtl
pop
lahf
mov
add
testb
aas
bound
jecxz
jb
inc
imul
mov
pop
mov
std
push
fldl
aam
xor
mov
ret
pusha
push
stc
add
jne
loope
xor
mov
fnsave
cmp
lcall
sub
test
ja
xor
bnd
mov
popl
xchg
nop
inc
xlat
shrb
fists
or
js
adc
ljmp
and
or
inc
mov
es
mov
lret
sbb
and
imul
pop
test
mov
ds
push
xorb
sub
jl
sub
or
in
fisttps
push
inc
and
xor
adc
ficomps
lods
add
aas
dec
cmp
cmp
sbb
sbb
xchg
dec
jb
fucomp
jae
es
xor
cmpsl
sbb
add
shlb
mov
mov
adc
in
xor
fst
sub
movsl
or
mov
lods
cmpsl
cltd
stc
cwtl
out
lret
and
cmpps
push
insl
add
cltd
icebp
iret
les
ficomps
out
ja
pop
mov
pop
nop
lock
bound
pop
pop
or
mov
push
pop
dec
out
add
lret
xchg
adc
jb
test
test
sbb
lods
xchg
js
jb
adc
cli
call
sbb
push
outsb
mov
xor
pop
sbb
shrl
pop
inc
add
adc
xor
jmp
jns
xor
inc
emms
mov
ja
mov
leave
or
cs
repnz
ds
mov
je
ds
jg
cmpsb
lds
out
xchg
enter
mov
jnp
sub
push
in
xchg
cltd
xor
and
daa
out
ds
pop
out
xor
mov
jle
xchg
data16
xchg
jg
adc
xchg
xchg
pop
fldt
aam
pop
cmp
pop
and
out
adc
adc
or
adc
mov
arpl
aam
nop
cmp
or
push
and
and
pop
mov
mov
sbb
sub
fscale
cwtl
inc
popf
sbb
sbb
xchg
addl
xchg
dec
jle
push
push
xor
push
pop
aas
inc
dec
inc
jmp
xor
loop
xorl
xchg
mov
aas
mov
js
jle
add
pop
sahf
mov
out
fiaddl
or
mov
enter
test
lods
bsr
pop
in
jge
xchg
mov
int3
enter
or
dec
lcall
or
test
inc
in
and
inc
cmp
test
jge
mov
xchg
scas
insb
imul
push
enter
pop
lock
dec
mov
inc
sbb
xlat
flds
pusha
insl
inc
dec
pop
mov
rorl
mov
pop
into
lea
xor
repz
dec
or
jmp
inc
arpl
cmpsb
adc
aaa
test
ret
mov
pop
es
xchg
push
insl
cmp
fs
adc
and
and
jne
push
shll
orb
shrl
inc
mov
push
shrl
out
cmc
inc
hlt
sbb
les
aam
or
shrl
outsb
jge
rcl
jno
faddl
mov
jb
mul
shlb
xor
sbb
cltd
ss
sub
test
push
mov
mov
jmp
mov
inc
xor
sbb
mov
sbb
inc
jl
sahf
aaa
or
cltd
jge
clc
sbb
add
cld
into
and
subb
xor
pop
cmpsl
fcoml
imul
pop
into
jmp
inc
faddl
std
test
mov
inc
or
and
ror
repnz
mov
push
add
ja
push
out
ret
sub
enter
sarl
in
sub
fistpll
xlat
adc
lods
dec
repz
aam
ss
xor
cs
mov
pushf
lahf
out
xchg
loop
cli
mov
or
jne
popf
arpl
dec
leave
mov
add
jp
jmp
add
fdivl
cmp
xor
pop
jle
in
or
in
rcrl
jno,pt
mov
std
sbb
cmp
xchg
push
stos
in
mov
cli
iret
call
push
and
scas
negl
dec
in
xchg
testl
or
jg
lcall
add
mov
lahf
cmp
lahf
xchg
pusha
ljmp
sbb
jb
dec
sbb
pop
adc
add
xchg
fldl
outsb
cmp
xchg
lret
mov
mov
cmp
inc
test
jb
mov
int
or
mov
xor
fmull
in
mov
pop
pop
ljmp
mov
push
lock
dec
lods
in
push
xchg
or
xor
push
fcoml
aaa
pop
xchg
add
idivl
pusha
mov
push
mov
jge
push
mov
sbb
push
je
sbb
or
insl
xlat
or
bswap
dec
push
xchg
hlt
xor
mov
cmpsb
push
lods
daa
pusha
shl
in
push
dec
sub
into
sub
mov
in
mov
mov
cmpsb
out
push
pop
and
cmovg
sub
hlt
jp
xchg
dec
in
jmp
push
cmp
jb
lahf
test
mov
mov
negl
push
or
int3
outsl
cmp
sarb
mov
ljmp
arpl
cmp
ss
adc
mov
dec
je
and
dec
xchg
loop
lret
hlt
jbe
js
push
shl
sbb
or
xor
dec
mov
daa
sti
subb
es
sbb
les
adcl
xor
jno
mov
inc
sub
dec
jecxz
xchg
idivb
flds
lods
fwait
test
dec
in
adc
sub
fstpt
sbb
ljmp
fcompl
dec
mov
jmp
negl
fdivs
dec
jb
pop
mov
int3
div
mov
shlb
lea
inc
jae
inc
adc
mov
dec
and
or
sub
inc
mov
fcomp
int3
cli
xor
sub
cmp
inc
fisubrl
pop
dec
dec
fucomip
jo
dec
and
xor
daa
dec
stc
dec
adc
sub
xchg
mov
jne
cmp
mov
pusha
imul
rcll
dec
adc
fcmovnbe
mov
mov
lahf
push
xchg
leave
adc
fwait
stc
lcall
or
or
std
cltd
dec
sub
cmp
das
sub
and
lods
push
sbb
mov
ret
nop
popa
out
icebp
js
aas
pop
fs
fwait
xchg
iret
jmp
roll
push
mov
das
cmpsb
dec
cmc
pop
jb
jp
push
push
daa
inc
sbb
and
mov
mov
mov
add
nop
and
jl
testb
sub
pop
mov
xchg
pop
js
and
call
cmp
mov
sahf
das
jb
aad
xor
int3
ret
aaa
mov
ds
push
in
and
pop
cmp
cmp
sub
mov
mov
scas
push
mov
out
repnz
jo
and
out
fwait
imul
and
shrl
mov
xchg
sub
in
mov
adc
and
jno
lea
out
lods
mov
add
lahf
lret
addb
fcomi
repz
aad
and
scas
jl
xor
and
insb
jnp
fstps
stos
lea
aas
in
cs
sahf
sub
lcall
sbb
mulb
pop
bnd
popf
cmp
test
pushf
inc
ja
sbb
jmp
cmp
scas
or
add
out
push
ljmp
xlat
or
jle
and
xor
or
pop
imul
out
sub
sahf
lahf
jo
dec
push
lea
dec
shll
and
test
sub
add
push
insl
pop
fnsave
dec
aas
pop
sub
daa
push
jecxz
jmp
bound
aas
hlt
arpl
jo
ss
imul
in
cwtl
sub
sbb
pop
adc
test
fisttpl
insb
add
jmp
and
mov
xor
into
lret
incl
test
sub
aad
popf
fstl
cmp
push
pmuludq
ljmp
and
and
aaa
jg
cmp
iret
imul
inc
mov
and
inc
mov
icebp
ds
add
fldcw
imul
clc
xor
sub
xchg
loopne
push
jno
vminps
inc
gs
cmpsl
jge
fwait
into
adc
popf
jo
adc
inc
js
dec
jmp
jne
mov
ret
inc
aad
fwait
mov
aas
int
adc
pop
icebp
pop
xadd
mov
stos
cmp
push
jns
push
in
push
dec
pushf
scas
cmp
and
dec
cmp
cmpsb
inc
mov
mov
xchg
fs
lret
pop
nop
dec
lahf
mov
test
out
mov
add
rcll
ljmp
jo
das
aad
cmp
mov
stc
sti
hlt
pusha
pop
ja
test
adc
dec
lock
push
out
sbb
push
test
adc
mov
lret
dec
mov
into
and
addr16
pop
xor
mov
push
inc
jnp
icebp
mov
mov
addr16
sete
clc
and
mov
jbe
das
jmp
subl
arpl
inc
out
push
bnd
repz
sbb
xchg
xchg
lret
in
jb
cs
pop
pop
pop
fld
je
les
jle
sti
pop
or
popa
xchg
inc
sti
push
loope
jno
jle
cmc
adc
shrl
int
frstor
xor
imul
adc
jae
roll
pop
sbb
fstps
daa
aas
mov
sbb
rcrl
roll
call
jmp
daa
fstpt
push
cmp
les
jne
and
sahf
scas
in
push
sbb
stc
mov
push
stc
rorb
adc
cld
in
aaa
mov
mov
daa
lods
cs
xchg
fs
roll
rcl
fimuls
lret
sbb
clc
inc
fnstcw
cld
shll
jns
xor
cmpsl
jecxz
xor
adc
pop
pop
adcb
popa
ja
inc
and
leave
gs
stos
repz
in
mov
jg
aad
outsl
and
or
cmc
outsb
addl
fcoml
add
pop
sub
dec
cmp
pusha
push
inc
int3
dec
mov
mov
nop
sti
roll
pop
outsb
and
inc
jge
repz
scas
cmp
fwait
xchg
stos
jl
loop
push
loope
or
add
dec
int3
push
lods
fsubr
cmc
leave
xchg
push
xlat
shrb
stc
push
test
nop
mov
lahf
dec
push
and
cmc
xor
std
out
nop
jmp
or
mov
xor
stc
subb
add
leave
mov
and
and
int
mov
fists
insl
bound
inc
xlat
jge
inc
test
push
or
mov
xor
jmp
adc
pmaxsw
mov
std
add
fmuls
faddl
pop
aad
lods
bound
mov
cmpsl
add
lahf
mov
mov
stos
xchg
dec
inc
or
dec
mov
xor
fsubl
xor
mov
xlat
and
shr
int3
add
xor
and
mov
movsb
xchg
rcr
addb
push
scas
sub
rolb
inc
inc
fcoms
sbb
loop
out
call
int
out
add
jne
xchg
cmp
fs
in
dec
mov
sub
jb
aaa
mov
incl
dec
popa
lret
mov
scas
leave
gs
gs
inc
insl
sub
xor
add
psllq
dec
daa
and
sbb
clc
out
in
negl
out
and
sub
jo
add
gs
pop
add
add
sbb
sar
popa
addb
mov
mov
aas
test
in
push
movsb
jge
xor
fadds
jp
or
fmuls
or
cmp
sbb
in
jge
mov
xchg
or
js
xchg
xchg
rolb
cmp
inc
enter
push
inc
and
fs
loopne
outsb
call
fs
push
pop
pop
sbb
jae
dec
push
dec
add
xor
xor
pop
mov
aaa
ret
gs
fistpl
push
mov
stos
outsl
loop
inc
popf
dec
inc
and
cmp
popf
inc
jb
andl
fsubr
outsb
fsubrl
int
cs
es
in
pop
adc
mov
pusha
loopne
aaa
xor
call
mov
jno
xor
cmp
mov
or
out
cld
xor
pop
xor
aam
push
cwtl
mov
js
adc
sbb
ljmp
and
ret
adc
inc
out
dec
aad
jb
fiaddl
adc
gs
sbb
and
repnz
dec
leave
dec
leave
sub
push
es
sub
pusha
sbb
pop
test
shr
sbb
lods
or
xchg
dec
xchg
dec
js
jge
scas
mov
fidivrs
cmp
mov
repz
inc
shlb
jne
adc
loope
mov
dec
dec
je
xor
xchg
push
push
xor
xor
pop
pop
nop
out
pop
fs
xor
cltd
ljmp
inc
fmull
stos
lret
pop
popf
fdivrs
mov
add
dec
dec
loopew
nop
jmp
mov
inc
mov
test
orl
les
mov
pop
fwait
or
lret
push
jp
out
jbe
inc
push
test
or
pop
jmp
mov
shrb
xchg
jnp
adc
mov
les
hlt
lods
repnz
fs
dec
mov
xchg
mov
fstpl
xor
lcall
in
push
lods
shrl
jb
sub
bound
lods
push
lret
pop
psrlq
shlb
pop
or
subb
and
pusha
mov
or
push
sub
bound
push
mov
je
mov
xchg
aas
dec
and
fsts
push
sti
testb
testl
or
xor
popa
rcll
mov
test
fmuls
fiaddl
or
movsb
cmp
fcompl
in
pop
inc
std
sbb
and
ffreep
jmp
mov
jns
lahf
jae
loopne
jge
sbb
shrl
inc
pop
mov
ljmp
sbb
adc
push
sbb
in
lcall
mov
mov
insl
repnz
insb
push
bound
lods
jle
xor
pop
mov
sub
repnz
das
xor
dec
lahf
in
dec
in
jnp
or
xchg
mov
and
or
add
and
mov
and
xchg
or
mov
cli
in
loope
add
xor
sub
lods
nop
out
movsb
cmp
data16
xchg
push
cmp
insb
sub
xor
mov
fmuls
lods
pop
ja
sbb
orb
pop
jne
fisttpl
push
sarl
icebp
mov
addl
addr16
jb
or
cs
addr16
push
dec
pop
lret
add
lret
imul
jns
ljmp
xor
mov
inc
outsl
cwtl
sub
scas
pop
xchg
inc
sbb
imul
pop
dec
mov
popf
shll
mov
lahf
pop
imul
dec
sub
jne
dec
pop
in
or
push
mov
mov
movsb
xchg
popa
rcll
mov
xchg
shrl
lahf
mov
decl
jle
pop
fstpl
or
xchg
jns
add
scas
adc
push
lods
cmc
jne
push
sub
jl
fsubrl
out
pop
xchg
rclb
cmp
push
rolb
pusha
cmp
sbb
es
push
xor
xor
push
pop
aad
int3
lea
inc
add
push
and
jge
ret
scas
or
cmp
add
negl
int
sti
scas
push
jmp
cmp
popf
fsts
pushf
ja
sarb
jns
and
loope
jo
pop
xchg
cmp
lret
mov
sbb
push
in
inc
rcrl
stos
pop
inc
cmc
xchg
adc
and
stc
push
fucom
adc
rclb
xor
out
push
test
add
iret
sbb
dec
in
ret
iret
aas
data16
sti
pop
sub
arpl
sub
add
push
lods
add
mov
sbb
sbb
out
int3
outsb
je
xor
mov
jae
sbb
adc
and
icebp
inc
pop
mov
and
pop
inc
je
sbb
xchg
out
push
sbb
dec
lds
call
popf
adc
out
lock
inc
lods
jns
xorl
mov
sbb
push
aaa
call
or
jb
xchg
in
inc
cmp
popa
add
push
stos
xor
pop
lods
add
movb
xor
pop
outsb
sbb
dec
inc
cmp
out
loope
xchg
push
xor
dec
dec
shll
pop
push
out
loope
int
and
loopne
xor
iret
adc
xchg
lahf
iret
lret
sub
int
mov
lahf
push
and
cld
sahf
mov
xchg
ja
xchg
push
test
mov
add
push
sub
cmp
pop
stos
xor
xchg
mov
shrb
pop
pop
push
imul
nop
adc
add
popa
lods
sbb
cwtl
xchg
aam
xchg
popl
mov
mov
lea
sbb
sub
andb
loope
push
ss
stos
jp
xchg
test
insl
and
lret
sti
mov
es
push
add
fldenv
dec
adc
test
cmp
push
and
ds
es
aam
push
mov
mov
int
sub
adc
pop
scas
pop
test
nop
dec
stc
jge
cmp
cs
movsb
int3
sbb
inc
adc
rorb
and
negl
gs
xor
std
cmp
push
stc
jns
insl
mov
jmp
pop
fists
popf
ret
nop
pop
outsb
pop
xor
dec
adc
pop
sti
mov
int
cmp
pop
push
test
jle
test
pop
loope
repz
adcl
outsb
js
and
pop
mov
xor
fists
je
mov
fisttpl
cmc
mov
dec
leave
push
cmp
arpl
mov
scas
cmc
out
and
ret
xchg
je
test
mov
bnd
inc
jmp
dec
mov
out
sbb
xchg
rsqrtps
push
push
out
dec
push
insl
mov
sahf
lods
adc
pop
and
inc
mov
ss
movsb
ss
fs
cltd
pop
inc
cmp
negb
fidivs
or
hlt
cmp
out
mov
insb
add
dec
int3
mov
js
adc
jno
push
xchg
mov
outsb
mov
adc
clc
out
jo
mov
js
imul
pop
adc
xchg
es
jle
xchg
xor
es
fs
sub
cli
popa
out
mov
cmp
mov
mov
jmp
xchg
mov
arpl
iret
addr16
xchg
int3
xor
ss
pusha
mov
enter
and
xor
into
cmp
jecxz
pushf
cwtl
adcl
cmpsb
aad
ret
dec
out
xchg
in
adc
sbb
outsb
nop
push
std
sbb
lock
jg
jge
and
fimull
in
popa
mov
jl
mov
testb
mov
push
je
subb
stc
xlat
add
push
pushf
mov
rcr
insl
sub
xor
jne
or
rcrb
add
ds
jge
or
jecxz
outsl
icebp
in
or
xlat
jno
add
stos
int3
adc
xorb
test
xor
xor
shlb
gs
dec
cmp
pop
push
ljmp
push
cwtl
pop
jge
mov
mov
xchg
push
mov
mov
popa
test
or
lahf
mov
mov
jne
jns
push
xchg
popf
dec
inc
cmp
or
inc
and
jp
pushf
pushf
ljmp
pop
add
jbe
mov
rolb
sub
pop
push
mov
outsl
adc
int
add
xchg
shrb
xor
cld
mov
fstps
push
sti
mov
mov
roll
mov
push
inc
mov
cmp
xor
sub
hlt
sahf
cmpb
scas
test
mov
mov
aad
jb
cs
add
adc
int
or
subb
movl
xchg
aaa
and
mov
aam
mov
xor
sub
lret
sub
add
syscall
pop
hlt
xor
add
shlb
inc
lods
fisubrs
scas
scas
mov
inc
or
inc
xor
into
mov
cmpsb
pop
outsl
daa
sub
mov
xchg
sbb
inc
mov
xor
mov
movsl
in
xor
lods
lret
enter
ret
add
or
fmuls
add
fmul
and
stc
iret
cmp
sahf
jp
test
test
call
adc
jg
pop
popa
nop
enter
lret
lret
test
sbb
shlb
mov
mov
scas
xlat
clc
pop
js
sub
mull
fmul
sub
mov
aas
pop
inc
push
mov
push
imul
mov
ficoms
outsb
adcb
jmp
out
pop
push
jbe
or
and
faddp
adc
xchg
xchg
pop
lods
loop
xor
popa
jns
xor
xor
pop
pop
xchg
xor
sbb
push
cwtl
es
ja
lods
cmp
inc
add
test
jne
test
adc
mov
xchg
in
pop
inc
mov
std
pop
data16
mov
lods
sarl
incl
or
fdivrl
in
fisubl
jecxz
or
clc
jnp
xchg
adc
pushf
jbe
decb
outsl
mov
iret
push
xchg
inc
cltd
push
jp
mov
orl
inc
mov
jb
lcall
decl
mov
adc
and
dec
inc
shll
nop
and
xchg
fadds
aad
sub
test
add
into
mov
and
lcall
shll
stos
hlt
ret
fidivl
or
repz
fdivl
xchg
stc
sbb
push
and
sub
fld
outsb
inc
repnz
nop
mull
test
push
adc
mov
sub
inc
fcos
cld
mov
imul
das
cmp
aas
repnz
or
xchg
int3
lods
imul
clc
jp
dec
in
rcll
popa
mov
ss
jp
dec
pop
mov
jmp
inc
jge
ja
push
popf
xor
rclb
loopne
fsubr
aam
and
inc
hlt
jecxz
mov
inc
push
xchg
sbb
and
sub
outsl
in
dec
sti
jb
test
sub
mov
fnstsw
rcl
sub
in
cmp
pop
les
test
push
mov
jbe
jo
lcall
pusha
in
lods
enter
sahf
shr
test
arpl
notrack
leave
inc
enter
shlb
je
sbb
in
mov
adc
lods
mov
cmc
loop
movsl
dec
inc
mov
int3
mov
jmp
je
sbb
bnd
es
ret
gs
cs
das
mov
je
lret
fld
gs
ret
mov
push
pop
mov
insl
jb
loopne
clc
xor
lahf
imul
mov
sbbb
dec
dec
in
or
mov
in
cmpsl
lea
insb
movsl
test
out
and
je
push
inc
rcll
xchg
lret
fdivrl
mov
rcr
push
jmp
dec
xchg
test
test
push
pop
mov
aad
cmc
cs
dec
outsb
std
pop
mov
inc
movsb
lock
xchg
pop
mov
stos
sbb
push
mov
mov
sahf
out
out
in
cli
lcall
insl
nop
cld
rol
xchg
in
sahf
out
push
add
int
vpaddb
cmp
and
jle
push
push
lea
adc
adc
stos
and
cmp
xlat
and
jmp
pop
stc
fisttps
outsl
inc
loope
mov
fisubrl
std
ja
out
loope
stos
movb
les
cli
test
mov
mov
shlb
mov
mov
cld
or
dec
in
mov
pushf
mov
jg
pop
cli
icebp
ja
jae
jae
adc
js
jmp
mov
in
or
popf
pushf
push
popa
dec
negb
ret
lea
cs
mov
jmp
lds
lret
rolb
or
jmp
test
mov
pop
mov
cld
mov
xor
loopne
add
into
out
test
hlt
dec
jbe
cmp
pop
mov
in
ja
aaa
fistpl
or
rcll
stos
adcb
mov
ret
divb
int3
test
imul
inc
into
jno
pop
dec
pop
cmp
mov
leave
mov
outsb
sub
pop
cmc
ret
jns
lds
mov
jns
andb
add
subl
pop
out
lret
cld
and
cmp
add
testl
pushf
aam
pop
sbbl
aam
sarl
sbb
int3
aam
mov
dec
lret
adc
mov
fisubrs
xchg
popa
vpmullw
and
or
insb
mov
stos
iret
fdivrl
ficomps
and
cmp
movsl
cmp
jo
popf
dec
adc
xor
cmpsb
cmc
stos
adc
push
pusha
out
push
sbb
cmp
lahf
or
pop
in
fnstenv
neg
jg
inc
xchg
test
xorl
js
mov
cmp
pushf
cld
cmpsb
into
into
cwtl
xchg
xchg
dec
lret
clc
dec
pop
dec
ror
mov
dec
sub
lea
ljmp
mov
iret
mov
pop
push
pop
ret
adc
mov
test
lds
mul
xchg
inc
mov
xlat
jo
pop
sub
jns
sti
orl
roll
mov
lret
scas
xor
lock
jp
push
aas
or
into
mov
mov
imul
dec
mov
cld
notb
mov
xor
add
nop
test
stc
lods
xchg
xchg
xor
mov
rcrb
pop
xchg
addb
test
lods
mov
cmp
mov
mov
cwtl
gs
jge
icebp
in
js
scas
sbb
adc
xrelease
mov
mov
jne
and
lods
jmp
xor
cmp
sub
mov
jne
sub
xlat
int3
in
aaa
push
jmp
dec
or
icebp
movsl
xor
mov
mov
out
push
pop
addr16
xor
jo
into
rolb
shll
sub
pop
fdiv
jg
in
ljmp
xchg
fldenv
movsb
fnstcw
or
aam
jp
incl
shll
mov
scas
jo
fcoml
mov
or
repnz
std
add
cli
outsb
mov
pusha
pop
xor
int3
out
xlat
xchg
rcrb
rcll
xor
roll
mov
inc
out
bound
xor
sarb
sub
push
cmp
mov
jmp
loopne
mov
xor
adc
popa
imul
dec
popf
jb
std
sbb
scas
ljmp
int3
ret
fstl
adc
popa
cmp
cmp
and
pop
adc
rcl
movsl
sbb
push
mov
int
in
sbb
sbb
icebp
xchg
sarb
fldl
push
adcb
repz
popf
inc
pusha
push
cmp
pusha
ds
push
push
xchg
lods
adc
lods
xor
mov
insb
inc
cli
mov
mov
out
fdivs
jo
cltd
stos
xor
mov
add
dec
loopne
and
test
push
mov
addb
xchg
shll
mov
pop
out
mov
cmp
ret
incl
mov
or
rep
inc
mov
and
inc
imul
rcrl
xor
jmp
fucom
insl
mov
imul
pop
ret
out
add
pusha
cmp
movsb
dec
pop
jge
popa
das
loop
out
mov
loope
push
inc
fnstcw
hlt
cmpsb
adc
in
adc
out
xchg
nop
pop
je
fiadds
xor
nop
sub
or
dec
aas
arpl
cmp
je
push
sbb
pop
push
push
inc
push
add
sbb
daa
test
xlat
test
sbb
push
adc
pop
jne
andb
pop
movsb
es
jo
sub
jg
shrb
addr16
pop
adc
xor
lods
andl
sti
scas
fmul
or
mov
lret
mov
mov
mov
loope
pop
in
mov
mov
jl
stos
and
xchg
fimull
cmp
pop
sbb
jo
je
push
xchg
sbbb
shl
jno
mov
in
leave
aas
test
add
push
lds
ja
jbe
in
aas
outsl
add
and
jg
dec
daa
push
aaa
fwait
ret
dec
pop
inc
repz
push
mov
in
inc
jb
das
jge
fdivl
jecxz
imul
into
mov
ja
imul
lds
pop
or
sbbl
mov
int3
push
mov
and
test
int
movsw
mov
ljmp
movsl
pop
sbb
imul
sbb
xchg
into
adc
sahf
xchg
push
jnp
mov
or
add
outsl
mov
pop
mov
cli
mov
lret
in
int
mov
adc
jnp
cmp
xor
xchg
cmp
mov
push
mov
cmp
enter
inc
dec
test
js
push
and
mov
leave
mov
jmp
lods
in
aam
mov
xchg
jmp
or
xor
in
ss
jno
and
xor
jb
repz
mov
xlat
jmp
mov
sub
aam
add
repnz
dec
pusha
add
repz
js
cmp
xchg
pop
cmp
hlt
icebp
pop
or
xchg
cmp
or
dec
cld
push
in
std
xchg
jnp
xor
or
xchg
in
jmp
push
jbe
mov
lods
mov
pop
bound
mov
pop
or
ret
mov
mov
xchg
dec
fnstsw
enter
loop
scas
cmp
push
push
mov
imul
dec
cmc
push
aas
addr16
cmp
scas
push
sbb
lret
adc
sahf
and
orl
lahf
daa
into
insl
pop
jno
fsts
mov
ret
in
pop
iret
mov
stos
imul
xlat
loope
push
push
cmc
sahf
pop
dec
or
mov
xor
cmp
push
scas
jle
repz
aad
pop
ret
adc
xchg
xor
clc
inc
jo
or
jne
mov
mov
scas
add
pop
out
loope
jle
cli
sbb
xchg
dec
xchg
ja,pt
mov
mov
mov
inc
movsb
ret
dec
out
aas
jge
add
adc
insl
jae
pushf
test
cmpsb
lods
bound
dec
or
shll
in
and
in
jmp
push
xchg
fbstp
mov
sbb
fdivrs
vpaddsw
rdtsc
xchg
add
mov
in
sti
iret
xor
out
jne
xor
mov
cmp
mov
pop
pop
sbb
outsl
add
mov
mov
lods
mov
lds
loopne
xchg
popf
dec
pusha
dec
mov
cvtps2pi
mov
mov
dec
iret
cmp
jne
lret
and
mov
cmp
sub
ja
out
mov
out
repz
cmpsb
pushaw
negb
dec
or
push
mov
into
mov
mov
cmp
push
mov
or
mov
or
mov
in
ss
push
rorl
test
jb
cmpsb
rorb
repnz
add
mov
aam
xor
stc
cmp
sbb
out
loop
stc
mov
mov
mov
dec
ss
in
mov
and
loopne
pusha
aam
xor
push
cwtl
cmpsb
lods
aaa
xchg
dec
xor
add
popf
jnp
xor
dec
and
int3
fsubl
dec
ror
and
cmp
xchg
inc
jg
or
cs
aas
jg
add
pop
push
lods
push
lods
jbe
or
std
maskmovq
divl
pop
cld
in
test
cltd
and
pop
arpl
adc
testb
jecxz
push
movsb
imul
sar
mov
icebp
mov
imul
pop
pop
cmp
test
call
lcall
jae
sbb
inc
dec
mov
daa
mov
jmp
pop
enter
repnz
cmpsl
in
imul
outsb
movsb
or
push
pushf
xchg
jl
add
jo
dec
sbbl
cmc
pop
dec
or
mov
js
shrl
aas
jnp
in
mov
mov
aad
xchg
sub
inc
rcll
pop
scas
flds
rolb
mov
mov
xor
xchg
push
outsl
mov
rcll
ss
lods
fwait
xchg
dec
xor
mov
push
nop
cmp
das
add
prefetcht0
cld
inc
mov
lock
mov
repz
dec
jne
mov
test
sbb
jae
es
adc
dec
das
inc
fsts
lea
pushf
ret
sub
aam
dec
and
pop
divb
sbb
xlat
mov
add
imul
xchg
sbb
loopne
imul
mov
cmp
shlb
push
mov
fucomp
out
testl
push
or
inc
sbb
popf
sbb
mov
rorl
mov
inc
push
lods
adc
icebp
pop
loopne
lcall
out
push
jmp
sub
dec
push
or
xor
inc
imulb
loopne
xchg
fstpt
in
mov
clc
xchg
mov
and
aad
xor
fs
mov
jg
in
pushf
dec
js
mov
fists
mov
or
lds
daa
or
shlb
test
jge
movsl
mov
jo
dec
xor
sub
call
outsb
sub
es
data16
das
sub
clc
adc
sarl
and
rcll
adc
fs
sbb
or
ds
sbb
xor
fistl
scas
cwtl
or
es
dec
jbe
jae
sbb
sti
lret
jecxz
repz
push
adc
inc
divb
andl
push
mov
scas
cli
jge
in
popf
inc
add
and
mov
mov
mov
and
dec
or
xrelease
sub
xchg
inc
jno
sub
into
pop
movsl
daa
stos
pop
into
mov
pop
mov
loop
enter
jb
int
or
jmp
sbb
mov
xchg
jmp
ds
sahf
loopne
push
ljmp
leave
inc
pop
push
sbb
cld
repz
or
lret
sub
mov
xchg
jmp
addl
mov
imul
cmp
dec
cmp
sub
ret
mov
push
std
fisubrs
jl
jle
lahf
cmc
cmp
int3
sub
fadds
xor
sbb
int3
sub
scas
lea
xor
sub
loopne
out
ret
dec
sub
or
les
pop
iret
cld
pop
gs
cmp
ss
adc
pop
mov
shlb
or
stos
dec
mov
bound
fsubrs
sub
pop
cmpsl
sub
dec
in
xor
js
push
fcmovnb
aaa
stc
inc
xchg
loop
and
pop
and
stos
dec
inc
cmp
xlat
and
imul
add
sub
sbb
rorb
rcrl
mov
addr16
push
push
iret
pop
inc
subb
pop
cmc
push
out
fwait
loopne
das
mov
int
repnz
sub
add
mov
fldt
mov
out
lcall
add
adc
dec
mov
ror
fisubrs
mov
shrb
pop
inc
scas
stos
sahf
inc
repz
mov
pandn
imul
imul
std
jb
lret
adc
add
and
ljmp
jg
xor
aaa
pop
dec
in
push
scas
fs
aam
sarb
dec
repz
sub
push
int3
inc
jmp
nop
push
xlat
fcoml
int
mov
test
call
scas
and
sub
mov
push
cmp
test
into
mov
sarb
jmp
loopne
sbb
enter
incl
hlt
rol
stc
xchg
push
mov
and
add
mov
call
cmc
sub
mov
mov
into
call
xlat
mov
adc
xor
push
cmp
cmp
sbb
imul
pop
add
cmp
adc
std
imul
cltd
icebp
ljmp
inc
cwtl
daa
mov
cmp
xor
or
aam
pop
mov
int
ljmp
notl
and
sti
fidivrl
lods
sbb
cmp
add
adc
xchg
sub
ss
mov
mov
push
ljmp
aad
mov
sti
xor
sti
imul
jge
sahf
xchg
lahf
loope
xor
dec
inc
lret
sbb
cli
push
add
xchg
jp
adc
int
mov
mov
dec
mov
js
mov
or
and
subl
xor
cmp
xlat
loop
xor
sbb
inc
xor
cmp
push
inc
adc
mov
lret
shr
rcrb
bound
sbb
adc
and
mov
ljmp
fdivr
mov
test
shll
fnsave
outsb
std
stos
fs
pusha
xchg
cmp
xlat
sbb
aas
dec
xchg
dec
jo
inc
jge
inc
mov
cwtl
jl
mov
ss
or
cwtl
in
nop
shr
and
xchg
in
test
jb
cs
xchg
loopne
add
xchg
sahf
mov
jge
cmp
cmp
xor
or
das
lods
arpl
out
push
add
and
test
adc
lock
lods
psubq
sbb
movb
sub
icebp
jbe
mov
cli
icebp
xlat
out
es
and
adc
scas
mov
mov
aam
jmp
xchg
and
dec
adc
rcl
push
out
test
jl
cwtl
mov
imul
jbe
pop
mov
lds
sbb
push
mov
mov
ret
cmpsb
mov
pop
mov
sub
push
pushw
pop
inc
ds
pop
jno
mov
cmp
aam
jp
pop
dec
scas
call
jns
stos
dec
test
jl
adc
pusha
jle
dec
sub
pop
fs
inc
cmp
test
xor
and
xchg
ss
jmp
loop
sti
jle
dec
aas
cmpsl
andb
mov
je
xorl
rcr
adc
cmp
in
dec
stos
xor
loop
xchg
xlat
shl
in
das
xor
mov
mov
hlt
imull
jge
loope
add
fildl
inc
xchg
pop
jbe
imulb
dec
inc
icebp
cs
sbb
je
adc
ja
scas
jbe
mov
push
xchg
in
pop
test
and
xchg
dec
adc
insl
pushf
iret
cmpsl
cmp
mov
mov
les
iret
lahf
xchg
or
xor
stos
mov
fisubs
cmp
push
add
mov
arpl
lret
push
xchg
adc
inc
xchg
cmpsb
sub
inc
sbb
sub
int3
testb
cmpsl
mov
jmp
cmp
mull
add
fcomip
mov
enter
dec
mov
jb
scas
mov
jmp
daa
not
cli
or
xchg
and
jo
stos
pop
enter
pop
mov
pop
add
mov
dec
cli
mov
fistl
pop
in
pop
mov
in
pop
ret
inc
sbb
or
stos
and
lods
dec
mov
shrl
das
lods
movb
fildl
cld
loope
cmpsb
xor
and
and
je
adc
in
ss
dec
xor
jne
lods
xchg
jo
jg
add
aam
xchg
dec
add
outsb
add
add
mov
add
jb
loop
jns
xchg
push
mov
xor
dec
dec
jmp
cmp
fdivs
xchg
out
aad
lea
pop
xchg
out
sbb
adc
aas
jmp
xchg
shll
mov
fmul
and
xor
insb
pop
cmpsl
xchg
shrd
shll
orl
dec
in
sbb
mov
inc
pop
popf
xchg
addb
mov
jns
mov
push
out
add
xor
stos
test
aad
cmpsl
and
jmp
sti
ja
adc
pop
jecxz
pop
inc
orl
pop
clc
hlt
pop
sub
sub
add
xchg
dec
mov
jmp
mov
movsb
mov
cmp
daa
int3
xchg
out
jmp
aas
cmpsl
add
notb
lret
lock
push
call
push
pop
pushf
fcoml
lret
push
mov
jmp
cmp
or
loopne
push
leave
out
test
scas
xor
jno
daa
and
cmp
imul
xlat
and
test
push
mov
push
cmc
or
pop
jae
in
out
out
push
lods
rorl
jge
mov
negl
cmp
mov
das
xchg
jmp
mov
cmpsl
testl
icebp
fsubrl
dec
sbb
adc
sub
stc
mov
test
ss
sub
lahf
iret
jb
sbb
outsb
mov
mov
icebp
sub
push
and
cmpsb
jne
adcl
mov
iret
push
cmp
aam
repz
xchg
mov
push
fs
add
mov
sub
pop
push
out
dec
xor
cmp
inc
pop
movsl
xchg
jle
into
je
jp
or
es
jge
xchg
ret
sub
mov
stos
insl
push
mov
cmc
test
cmc
es
push
clc
rolb
ljmp
loope
sub
mov
push
xchg
inc
and
or
add
pop
jge
std
cmp
out
xor
inc
adc
mov
xchg
test
and
mov
jnp
lods
and
addb
adc
mov
mov
stos
fiaddl
ljmp
int
jge
or
rcrb
in
cmp
sbb
cmpl
std
out
mov
cmc
push
or
loope
cmp
jb
inc
fnsave
jnp
filds
fnstcw
sub
sbb
mov
mov
nop
push
adc
add
fst
fildll
mov
xor
or
sbb
nop
cmc
add
mov
pop
push
test
inc
mov
cltd
cmp
mov
push
cwtl
push
inc
cmpsl
lock
bound
xor
mov
imul
ljmp
out
cmp
fmuls
outsb
test
call
xchg
mov
mov
out
push
jns
int3
pop
fisttpl
test
pop
inc
fwait
mov
clc
mov
sbb
xchg
xlat
jmp
ret
or
cld
das
rcll
pop
cld
mov
int
inc
push
jae
xchg
dec
mov
movsl
cmpsl
inc
inc
test
jp
jge
movsl
iret
addr16
scas
out
and
insb
je
aas
repnz
aam
sub
inc
inc
xor
mov
scas
repnz
pop
cli
imul
out
or
bound
arpl
inc
sbb
jle
xor
mov
popa
cmp
fwait
lret
push
xchg
add
push
sbb
dec
mov
xchg
adc
test
or
sub
lret
xor
cmpsb
inc
insl
pop
inc
mov
sbb
rorl
adc
cmp
addl
mov
movsl
sub
xrelease
out
dec
iret
je
mov
sub
loope
movsl
lea
push
xor
dec
daa
aam
push
daa
stc
xor
loopne
sub
jecxz
push
sbb
cmc
imul
adc
add
faddl
mov
insb
sarl
jge
shll
cmp
aad
jns
fwait
mov
ret
push
xor
jo
dec
pop
outsb
test
adc
cwtl
adc
das
ja
jbe
fildl
pop
pop
jle
sbb
dec
lcall
insb
test
mov
xchg
push
idiv
das
sahf
push
jmp
xchg
test
add
mov
mov
jb
cld
sub
lea
loopne
inc
jne
mov
push
aad
movsl
mov
mov
sar
add
or
hlt
jbe
movsb
mov
mov
pop
add
pushf
cmp
pop
mov
loop
push
rolb
mov
xor
jg
dec
aas
jns
sbb
test
lahf
in
lahf
jmp
sarb
lcall
or
insl
sahf
inc
sbb
inc
add
aad
fimull
bound
sub
fcomps
scas
repnz
sarb
xor
sahf
jbe
inc
cmp
cwtl
scas
sahf
bound
add
add
data16
xchg
ret
add
mov
sahf
insl
inc
std
pop
mov
jg
inc
loope
mov
pop
test
test
mov
mov
sbb
shlb
verr
mov
dec
pop
adc
subb
adc
decl
add
push
js
mov
and
dec
xchg
shl
aas
add
xor
pusha
jg
les
pop
push
inc
and
adc
aas
bound
stos
ljmp
arpl
fwait
and
or
and
lods
cmp
shr
push
push
lcall
or
inc
sbb
pop
sbbb
inc
dec
pop
dec
sahf
lcall
call
xchg
xor
in
mov
push
in
sub
imul
test
lods
in
and
cmpsb
movsb
mov
mov
xor
pop
push
lods
out
cmp
add
iret
lea
push
xchg
fimuls
sar
insb
pushaw
repz
sarb
ret
sub
adc
adcl
sar
lcall
sub
or
bswap
dec
push
push
mov
sub
xchg
rolb
stc
pushf
divb
push
and
popa
pop
addb
cmpsb
sbb
xchg
sub
les
and
sub
shlb
mov
inc
in
shlb
out
aas
mov
jl
mov
test
out
xor
fstps
pop
sub
push
mov
sarb
dec
fdivl
mov
jb
adc
into
nop
xchg
adc
pop
into
mov
addb
sub
sbb
aam
popf
test
shlb
add
mov
and
inc
js
xchg
movsb
fisttpl
outsb
jb
mov
pop
out
or
sub
ret
jne
add
xchg
or
ljmp
xor
ss
inc
mov
pop
inc
lcall
push
cmpsl
push
xchg
xchg
jae
add
push
dec
testl
mov
cmp
ds
pop
or
add
cld
mov
ds
push
mov
xlat
and
mov
enter
add
push
cmp
or
push
and
mov
and
xor
add
xor
push
dec
pop
int3
mov
test
daa
lret
xor
ret
lea
mov
fs
movsl
scas
test
pop
cmp
and
jl
ja
filds
fstps
std
ds
addr16
mov
fs
mov
dec
cmp
outsb
jnp
bound
aam
add
xchg
jge
shll
dec
adc
inc
cwtl
ljmp
das
call
adc
adc
ret
xor
les
push
push
fadds
jne
cli
mov
or
xchg
cli
cmp
test
pushf
call
ret
cmp
sti
sub
xchg
loopne
push
orb
sahf
in
js
sub
fdivrl
mov
add
ret
push
cmpsl
add
loope
add
test
aad
jbe
sbb
xorl
mov
inc
mov
xor
pusha
push
cmp
lods
rcll
mov
jns
adc
xchg
xchg
mov
mov
jo
push
imul
cwtl
out
divl
data16
mov
sbb
mov
lock
filds
cs
lret
mov
jae
out
jo
adc
adc
insl
jnp
inc
lcall
leave
cltd
ds
std
ret
mov
cmp
popa
in
ja
aad
and
into
je
hlt
shlb
xchg
iret
rorb
xchg
jecxz
lods
jmp
dec
and
mov
inc
add
push
push
dec
mov
imul
xor
rdmsr
test
cmp
mov
xor
dec
pop
cmp
ficompl
adc
adc
insl
sbb
sbb
xchg
dec
outsl
imul
popa
pushf
jo
inc
test
aam
lock
rorb
sub
arpl
imul
dec
jo
rclb
popa
add
js
sub
popa
popf
pop
int3
popa
aad
jp
push
popa
and
das
mov
mov
aad
inc
fs
insb
cmc
in
loopne
rcll
aam
add
push
inc
scas
cli
dec
jp
sbb
push
das
pusha
push
pop
pushf
movsb
add
insl
pop
inc
mov
stc
mov
adc
mov
and
fidivrl
xlat
data16
mov
aas
iret
out
popf
movsb
jg
mov
inc
test
mov
rcrl
sbb
mov
sbb
nop
negb
std
and
in
jns
push
mov
sbb
dec
sbb
mov
neg
rorl
xor
cmp
sub
pushf
leave
xchg
jle
jb
mov
movsb
lret
int
sbb
js,pt
xchg
test
insl
outsb
cmp
sub
sbb
iret
adc
rolb
data16
push
dec
xchg
push
dec
arpl
mov
fiaddl
push
popf
cmpb
cltd
cmpsl
or
xor
lods
jge
mov
jno
mov
mov
sub
sbb
push
cmp
inc
hlt
lret
pop
lcall
loope
xchg
xor
rolb
inc
xor
addl
loopne
mov
loop
sub
push
das
lock
cmp
lcall
mov
leave
bound
pop
dec
pop
ret
add
je
cmp
stos
js
aad
xchg
cld
test
pop
lcall
sub
mov
dec
jae
pop
sbb
hlt
arpl
and
mov
cmp
mov
cmp
ret
jecxz
inc
imul
jle
bound
jo
mov
addr16
lret
faddl
mulb
jae
ss
push
fmuls
gs
loop
cmp
scas
mov
stos
jp
in
cli
xchg
repnz
roll
jns
loope
outsl
icebp
repnz
xchg
jle
popa
dec
shll
clc
sti
in
add
mov
mov
fwait
xor
movl
xor
pop
orl
inc
lds
and
mov
push
mov
outsl
adc
jae
imul
ficoms
int3
add
loop
lret
xor
pop
push
fisubl
int
rorl
aas
outsl
in
mov
jmp
pop
inc
call
arpl
or
aas
pop
stos
subb
out
xorl
push
fwait
lds
or
xchg
out
add
decb
dec
popf
shr
dec
mov
push
mov
nop
mov
std
insl
shlb
mov
push
rcl
and
sub
xchg
pinsrw
mov
adc
fwait
lret
test
fwait
out
dec
scas
jmp
shl
dec
xchg
pop
dec
cmc
adc
iret
push
pop
mov
jl
sub
pop
push
pushf
mov
or
daa
imul
imull
orl
mov
push
jle
inc
ret
pop
cli
lret
push
xchg
pop
imul
lea
pusha
mov
cmc
dec
sbb
call
or
rol
outsb
cmpsl
cltd
cmp
rorl
orl
jl
call
xor
out
mov
or
cmp
leave
jne
cmpsl
xor
mov
lret
xchg
and
mov
xor
aad
leave
mov
pushf
pop
rol
stos
adc
fs
push
inc
in
fadds
in
fs
jle
push
ja
mov
and
std
push
xchg
mov
lods
call
cmp
shll
cmp
repnz
loope
cmp
out
xchg
mov
sarl
mov
jge
cmc
bound
nop
icebp
dec
add
mov
stos
test
jae
cmpl
test
inc
pusha
push
jbe
je
enter
xchg
and
js
loop
decl
rorl
mov
mov
in
hlt
gs
xchg
addl
xchg
xchg
out
add
inc
sbb
sub
dec
jbe
and
mov
cwtl
mov
ror
and
sub
sbb
rcrl
sbb
xor
xchg
test
inc
fdiv
push
call
fcompl
xsaveopt
lret
cs
or
aaa
pop
sbb
mov
popa
inc
lods
aas
pop
mov
xchg
into
cltd
outsl
xor
cmp
or
fwait
in
xlat
ljmp
icebp
ret
lds
pop
and
push
jo
das
sbb
subl
outsl
paddsw
fists
xor
xor
out
into
inc
js
lret
cmpl
fmuls
into
scas
rcrb
rcr
icebp
pop
stc
cld
and
scas
lods
dec
in
xor
sub
out
cmp
cwtl
es
insb
icebp
fsubl
aad
fstps
adc
es
ret
mov
push
imul
mov
adc
arpl
inc
fbld
or
mov
push
fisubrs
insb
fwait
popa
and
fistl
xchg
inc
dec
rolb
or
jp
int3
insl
pop
out
mov
adc
mov
adc
loope
aad
fisttpl
sbb
mov
xchg
cmp
push
pop
clc
gs
xchg
mov
xor
inc
sahf
xlat
fldenv
mov
addr16
popf
cwtl
sub
cmp
jb
jp
js
sbb
aas
adc
xorb
sahf
push
stos
shll
sbb
jecxz
sbb
movsl
out
and
xchg
mov
lea
pop
popf
sub
pop
insl
sbb
aad
and
push
cmpb
test
pop
leave
scas
vpsllq
sbb
pop
test
or
lcall
data16
jle
mov
sahf
stos
icebp
xchg
jno
lock
das
add
out
cmpsb
sub
add
push
mov
and
add
add
add
les
aam
jo
inc
clc
adc
jle
ds
pushf
cwtl
push
mov
fildl
icebp
dec
jbe
jne
jae
fstpt
enter
push
in
and
adc
aad
dec
inc
sub
mov
xchg
pop
addb
mov
mov
out
push
lods
push
bound
arpl
lret
and
xchg
imul
lahf
cs
mov
imulb
test
pushf
aaa
xor
arpl
fisubrl
lods
stc
divl
xchg
mov
sbb
push
mov
nop
insb
dec
dec
push
or
jnp
mov
dec
sbb
js
jmp
sub
in
dec
into
push
cltd
push
xchg
lea
mov
dec
ja
dec
sub
in
jg
fs
mov
out
xor
xor
repz
push
pop
push
int3
xor
das
add
pushf
cli
mulb
daa
loop
and
sub
imul
jns
add
and
lahf
cmp
pop
lds
test
xor
jbe
mov
fdivrl
and
lahf
xorl
cmp
icebp
jge
lret
movsb
push
and
mov
mov
icebp
aaa
adc
cmp
test
js
xchg
cmp
jne
xchg
push
sub
jbe
loope
mov
and
mov
push
or
nop
and
xor
lods
pop
adc
xor
and
pop
int
push
cmpsb
adc
mov
sub
push
rclb
mov
cmpsb
das
and
jae
inc
iret
sahf
je
sbb
les
push
fs
jb
mov
js
int
stos
mov
dec
push
or
jo
dec
mov
fildll
lahf
xor
inc
std
movsl
adc
shrb
push
mov
add
lcall
xor
mov
or
xor
xchg
cwtl
jmp
push
jo
ja
loope
repnz
mov
cmp
sti
sub
inc
mov
xor
sti
dec
xchg
sub
rol
or
incl
sahf
movsl
push
xchg
sub
jae
add
ret
sarl
mov
push
sub
pop
mov
jns
xor
gs
mov
mov
jp
loop
subl
jg
push
or
or
fucomi
outsb
outsl
scas
lds
cmp
xor
push
aad
jns
lahf
mov
push
and
pop
push
sti
and
mov
mov
test
adc
cmp
pusha
dec
lahf
je
mov
push
sub
dec
cs
icebp
and
testl
mov
add
fstps
loop
test
in
aam
repz
shrb
jmp
lret
jmp
push
pop
xor
movsb
lahf
out
sarl
adc
arpl
sbb
dec
xor
xor
xor
pop
pop
adc
enter
cmpsl
and
add
js
fmuls
inc
mov
decb
outsb
outsl
push
loope
sbb
and
jmp
lods
jl
lea
jnp
mov
test
xchg
call
dec
jg
inc
inc
sbb
xor
int3
sub
or
or
ja
xchg
std
add
faddl
jg
pop
idivl
mov
mov
leave
add
fmuls
in
pop
sub
imulb
pushf
js
scas
and
or
jbe
stc
xchg
jmp
ret
jno
rcrb
mov
out
in
or
jmp
xor
xor
addl
repnz
cltd
mov
xchg
sbb
cmp
xchg
adc
or
fwait
cmc
icebp
push
stc
add
fdivl
ficomps
fsubs
lcall
xchg
movsb
dec
pop
aam
rcll
loope
xchg
pop
mov
sub
iret
cmp
cmp
sbb
mov
test
sbb
pop
and
out
int3
sarl
adc
sub
scas
or
out
imul
mov
and
jp
cmp
and
mov
arpl
mov
dec
xor
push
lret
or
testl
mov
int
and
mov
mov
rorb
jl
mov
les
je
or
fidivrl
jp
mov
cli
push
bswap
addr16
in
xor
cwtl
pop
add
repnz
adc
daa
pop
jb
push
hlt
dec
pop
insl
xchg
inc
ret
jno
jecxz
fdivr
xor
sub
test
cltd
loop
pusha
insb
scas
outsb
lret
pop
xor
lods
daa
pop
out
inc
cmpsb
cmc
cmp
clc
mov
cmc
int3
sbb
inc
or
add
inc
push
xchg
mov
hlt
adc
mov
in
push
or
add
jg
aad
xlat
pop
push
mov
xchg
inc
cmp
mov
nop
jns
sbb
maxps
and
jns
sub
loope
adc
shlb
inc
scas
outsb
outsl
push
clc
or
aad
cmpsl
mov
lcall
in
loopne
shrb
or
enter
sbb
ret
pop
js
lock
push
xchg
pop
mov
rcl
sbb
stos
cld
lret
in
xor
lea
into
adc
js
es
push
mov
push
lods
sbb
xor
fbld
push
mov
mov
out
pusha
daa
arpl
xchg
bound
sub
cmp
mov
mov
dec
fcomp
idiv
out
mov
jb
dec
mov
subl
and
out
jp
popl
xchg
sbb
add
sub
ljmp
pop
jmp
xchg
push
inc
cld
pop
je
cmc
add
pusha
jb
fwait
iret
rolb
xor
inc
adc
sub
sbb
mov
ja
xlat
fwait
mov
hlt
push
lds
add
jmp
inc
cs
dec
push
mov
and
xchg
clc
movsl
lods
add
mov
mov
test
imul
xchg
sahf
cli
insb
jb
fistpll
jne
jp
into
push
mov
mov
mov
push
sbb
in
data16
mov
mov
sahf
adc
and
jnp,pn
pop
out
clc
out
sub
push
sbb
push
in
mov
push
push
dec
mov
negl
add
jns
cmp
invd
testb
and
out
dec
faddl
cmp
jg
sub
lock
and
bound
insl
and
out
or
addr16
test
or
sub
or
dec
inc
out
or
pop
movsl
cmp
mov
insl
xchg
sahf
push
faddl
mov
inc
mov
inc
addr16
mov
and
cli
lahf
xchg
sbb
mov
test
push
gs
sbbb
mov
das
push
fwait
icebp
dec
ljmp
lret
packssdw
mov
sbbl
add
xchg
jmp
popa
test
int
cmp
jmp
mov
movsb
shr
mov
mov
testl
daa
ret
aaa
mov
sbb
sbb
pop
xchg
dec
movsb
or
push
xchg
jp
xor
int3
icebp
xor
sbb
mov
icebp
pusha
in
in
xor
popf
cmp
repnz
mov
pop
mov
call
loopne
dec
push
push
pop
pop
mov
push
adc
xor
mov
ficomps
mov
mov
add
mov
dec
jno
pop
mov
add
xor
mov
jne
mov
dec
xchg
xlat
test
arpl
jne
jbe
mov
add
adc
imul
shlb
dec
cld
push
outsb
stos
add
stos
int3
add
xor
sbb
or
lock
pop
mov
xchg
mov
mov
push
fdivrp
mov
pop
mov
cmp
mov
mov
fcomp
cltd
stos
push
xchg
lods
sub
sarl
cmp
dec
mov
loope
sub
jo
insb
cmpsb
addr16
adc
sub
lea
xchg
out
mov
xchg
xlat
jne
and
jecxz
int3
cmc
pop
push
flds
pusha
adc
sbb
dec
cmp
dec
dec
pop
jle
aaa
shlb
mov
xorl
and
push
mov
jbe
mov
es
sub
stos
pop
leave
cs
lds
sbb
or
popa
fistl
pop
negb
xchg
pop
push
push
mov
push
lcall
push
popa
push
es
mov
mov
and
dec
push
inc
imull
test
bound
imul
ljmp
xor
jnp
insb
mov
fnstcw
pop
lea
lret
xchg
sbb
adc
shrl
loope
dec
jno
seta
ffree
iret
mov
insb
add
inc
xchg
out
data16
and
push
xor
jge
xor
or
add
push
lods
or
movsl
loopne
adc
loopne
fistl
add
jbe
clc
das
mov
idiv
xchg
lahf
stos
pop
mov
outsb
jp
flds
mov
mov
lcall
arpl
mov
int
insl
std
aas
push
or
xchg
mov
outsb
pop
loop
mov
add
aas
xor
sbbl
outsl
jo
aad
sub
ljmp
adc
push
xchg
push
pop
push
mov
sbbb
xchg
mov
enter
cmpsl
add
mov
pop
cmpsl
ljmp
fnstcw
inc
dec
int
adc
fidivs
add
lock
icebp
dec
jns
and
dec
adc
int3
push
insb
sbb
movl
push
push
in
xor
sbb
enter
push
sub
std
pop
inc
stos
sub
pop
insl
in
outsb
push
and
add
adc
and
cmp
pop
je
push
fs
jo
push
jecxz
loop
xchg
sbb
das
sbb
adc
cltd
outsb
or
cmc
fcomi
jo
aam
pop
inc
bound
cmp
pop
stos
into
movsb
adc
js
mov
nop
int
insl
xor
push
ret
inc
iret
gs
mov
popa
je
mov
out
ss
stos
jne
stos
cli
sbb
ret
jo
mov
sub
jp
inc
pop
and
xchg
lahf
lahf
dec
rolb
fdivr
in
js
out
iret
stos
popa
shlb
jns
sarl
lods
adc
push
cwtl
rcrl
adc
inc
lods
fdivrl
cmp
jecxz
insb
je
test
push
mov
dec
xchg
cld
cmc
rcrb
sbb
pop
stos
aam
cmp
sbbb
mov
xchg
or
repz
push
mov
or
push
mov
push
mov
or
pusha
stos
jecxz
dec
loope
pop
xchg
aam
push
test
push
jae
jmp
jmp
insb
mov
xchg
inc
cltd
incl
mov
cmp
dec
jmp
jl
roll
jbe
adc
push
in
sbb
pop
notb
in
repz
cmp
and
xor
out
shl
inc
adc
jno
insb
pop
or
xchg
lret
dec
pop
adc
push
sbb
cmp
mov
hlt
lods
dec
out
aad
movsb
stc
push
or
daa
insb
jb
icebp
sbbl
fwait
sahf
dec
movsb
sub
icebp
adc
add
xor
lahf
fwait
mov
dec
fsubl
add
hlt
sahf
xlat
fdivrl
fcmove
out
mov
mov
or
lahf
lods
jne
dec
call
and
mov
inc
xchg
loopne
inc
iret
movsb
sub
clc
in
push
sub
jnp
cs
xorb
shll
mull
jge
clc
xlat
pop
daa
mov
mov
stc
inc
push
sub
ss
cmp
or
lcall
lods
add
lea
mov
out
mov
ds
out
addb
mov
dec
repz
test
hlt
inc
iret
add
and
xchg
inc
fildl
loopne
dec
aas
test
inc
es
aad
push
inc
sub
ret
add
mov
sarl
lcall
push
out
or
cmc
cmp
daa
sbb
mov
cwtl
and
outsb
mov
push
or
pop
jo
pop
and
push
movsl
std
loop
out
es
xor
mov
out
cmp
movsb
push
sbb
rorl
iret
sarb
cmp
push
in
les
push
sbb
sub
jns
mov
sbb
fnstcw
mov
cmc
sub
repz
pop
rorb
jne
cwtl
in
popf
inc
and
inc
andnps
adc
ja
add
adcl
hlt
pop
leave
in
push
push
xor
imul
clc
cmp
mov
sub
ret
dec
adc
sub
cltd
and
adc
xor
mov
or
pop
jae
outsb
add
fisttpl
xor
jbe
imul
inc
imul
cmp
jbe
mov
sbb
lret
mov
push
pop
popa
into
xor
fwait
aam
sarb
movsl
pop
xchg
cli
jg
stos
add
rcrb
test
adc
jecxz
ret
out
xlat
iret
and
in
orl
mov
nop
arpl
pop
cmp
pop
hlt
lret
dec
jmp
mov
lcallw
enter
lret
jge
add
xchg
pop
sahf
push
add
cmp
jb
das
or
aas
push
cmc
mov
mov
ss
adc
insl
add
scas
xchg
ret
movsl
aaa
fstl
add
push
and
cmpsl
and
add
popf
andb
stos
ss
push
and
lahf
inc
sub
dec
jmp
aaa
and
jp
idivb
cld
out
js
pop
or
cmp
dec
call
and
cwtl
xor
clc
lahf
jb
mov
pusha
cwtl
push
cli
fistps
stc
cmp
sarb
leave
fistpl
inc
out
movsl
dec
repnz
push
movsb
stos
cmc
lods
outsl
call
cmp
adc
push
jmp
dec
mov
pushf
jb
das
xor
mov
pop
push
out
aas
xor
popa
jae
out
mov
je
std
loope
adcb
cs
into
mov
lds
outsb
cs
jmp
out
rcll
enter
loop
das
sti
lods
pop
push
jmp
mov
push
jmp
popf
lea
jle
pushf
mov
adc
push
push
push
ret
test
add
pop
cmp
lret
bswap
mov
mov
inc
mov
cltd
mov
out
fwait
sbb
xchg
fucomip
ja
inc
adc
scas
mov
and
xor
xchg
bound
dec
in
insb
loopne
jae
dec
hlt
mov
cmp
jg
push
lock
cmpsl
push
into
lret
xor
lahf
pop
fnstcw
in
inc
cs
js
test
or
shl
jo
and
mov
repz
mov
rcll
cwtl
lea
mov
insb
shlb
sbb
or
xchg
data16
popa
ret
sub
add
aas
ja
dec
inc
shrl
or
add
sbb
rcrl
and
jge
xchg
mov
fldcw
pop
cmpsb
aas
lock
pop
dec
mov
cmc
sub
frndint
je
outsb
cmc
addr16
out
dec
das
enter
sub
stos
lods
incb
dec
push
ds
push
mov
lds
and
daa
push
out
xchg
fdivrl
add
decl
into
aad
ljmp
adc
push
mov
imul
loop
or
adc
sub
loopne
dec
insl
jmp
or
push
xchg
push
mov
scas
jo
scas
mov
dec
add
dec
aaa
or
sysenter
mov
mov
divb
sbb
xor
jbe
jbe
in
xor
jb
lods
jb
in
sbb
mov
dec
call
ljmp
mov
lods
dec
insl
shl
add
cltd
faddp
sub
daa
inc
and
addr16
adc
fcmovnu
push
adcl
repz
jnp
test
xchg
jno
cli
daa
scas
fs
xchg
nop
jno
xchg
pop
adc
ss
jge
js
iret
in
jge
sti
je
iret
loope
out
or
dec
adc
movsl
test
out
jmp
fcomi
jecxz
sbb
push
add
jge
js
rcr
mov
in
out
pop
inc
jmp
lods
inc
shl
insb
out
or
lock
pop
sbb
int
pop
into
pop
jae
mov
daa
cmpsl
pusha
add
and
cmovp
lahf
jo
mov
stos
pop
inc
cmp
jge
sbbb
inc
and
out
jecxz
add
cli
data16
rol
movsl
sbb
mov
shrb
inc
xchg
imul
aas
lret
loopne
or
movl
cs
stos
cmp
dec
mov
clc
jbe
xor
jo
ret
sahf
and
adc
dec
lret
pop
or
js
gs
fwait
pop
jecxz
mov
push
enter
dec
and
out
sbb
lods
cmp
je
mov
sub
lea
sbb
push
pop
or
dec
lret
arpl
sub
xor
cli
movb
aaa
mov
mov
and
pusha
and
xor
pminub
mov
ss
insb
pop
add
mov
and
push
xor
mov
add
jecxz
stos
sub
daa
clc
xchg
or
push
dec
xor
push
lahf
cmpsl
add
pop
cmp
or
cmp
push
lcall
and
imul
pop
jbe
cmp
pop
rcll
loopne
push
and
xor
xchg
jmp
push
les
or
insb
fidivrs
push
inc
lock
sbb
in
jno
loop
mov
adc
lods
mov
mov
jge
in
int3
iret
push
jl
inc
sub
insb
mov
stos
outsl
xor
jle
sar
pusha
mov
jo
jno
hlt
addr16
dec
iret
aas
xchg
add
jb
rclb
mov
subb
adc
jle
mov
mov
std
test
shlb
movsb
dec
movsb
dec
and
in
xor
fmul
sub
insb
adc
cmp
scas
xor
in
mov
mov
enter
iret
fistpl
adc
dec
aas
adc
xor
add
pmaddwd
jl
mov
out
sbb
out
xorl
arpl
jg
add
pushf
jp
inc
push
and
dec
rorb
jle
or
jmp
mov
cli
daa
inc
cli
jmp
mov
fimull
divb
scas
sbb
and
inc
sbb
cmp
pop
test
shrl
push
mov
pop
arpl
cmpb
cmp
inc
fadd
dec
cmpsl
xor
sbb
mov
ficompl
sti
inc
dec
inc
cmp
sub
pop
adc
minps
push
stc
cmp
sbb
jl
dec
stc
add
and
cwtl
inc
xlat
pop
rclb
jecxz
adc
cmp
dec
lds
lahf
xchg
testl
mov
and
xchg
into
mov
pop
leave
shrl
cmc
rcll
or
mov
bound
stos
cmp
xchg
in
insb
xor
mov
push
sub
sub
je
test
or
xor
jae
push
xchg
mov
push
inc
in
dec
push
in
frstor
push
inc
adcb
ret
adc
mov
test
and
icebp
mov
fwait
test
negb
mov
dec
xor
sub
je
pop
push
rorl
fucompp
sub
inc
push
dec
or
nop
xor
and
orb
and
sbb
sbb
pop
aad
and
jo
or
xor
xchg
sti
leave
or
aad
xchg
test
cmp
ja
cli
je
and
push
xor
push
xor
aaa
int3
repnz
fcomip
aas
cmp
pop
fwait
and
mov
sbb
data16
jle
sbb
lea
xor
inc
lds
mov
imull
cwtl
cli
mov
and
mov
lahf
add
stc
inc
xor
loope
rorb
scas
ss
aas
test
sub
cmp
mov
cwtl
loop
mov
test
dec
sbb
ss
lock
jge
pusha
add
bound
xor
addl
mov
cld
push
idivb
xchg
dec
js
xorl
ret
fsub
outsl
movsl
inc
out
dec
mov
push
sbb
test
fs
shll
add
dec
pop
shlb
ret
fldenv
jns
and
out
in
jne
cmpsl
xchg
adc
ss
xor
jl
cmpb
test
xchg
adc
rcrl
imul
repz
sbb
arpl
leave
scas
mov
push
ja
mov
pop
add
and
xorb
scas
xor
mov
stc
dec
negl
add
jo
ljmp
aas
inc
sahf
subb
addr16
lods
fwait
sbb
roll
push
popf
and
xchg
or
call
lea
test
push
xor
dec
dec
gs
add
mov
xchg
fidivrs
rolb
hlt
les
pop
jmp
dec
and
adc
fildl
mov
mov
das
add
cmp
rorl
repnz
dec
jo
pop
pusha
enter
fisubrl
das
sbb
and
sbb
iret
push
add
mov
sub
call
popf
cmp
pop
pushf
loope
scas
mov
stos
mov
loope
cmp
fsubrs
test
and
mov
dec
in
pop
movlhps
push
cmp
dec
ret
ret
cwtl
mov
dec
cmpsl
ss
push
push
mov
xor
xchg
cmc
push
and
pop
call
cmp
jns
repz
jmp
xchg
sahf
mov
push
or
lret
sbb
hlt
mov
pop
push
inc
fcomp
leave
popf
or
ficoms
lahf
add
push
call
push
inc
add
mov
sub
fs
in
icebp
or
arpl
das
in
data16
mov
inc
xchg
adc
call
faddl
fbld
pop
fsubr
mov
mov
nop
jecxz
insb
add
mov
sbb
push
fsubs
or
ljmp
jl
and
cmc
repz
sarb
int3
icebp
in
push
pop
and
loopne
sbb
xchg
cmp
xchg
rcr
pop
inc
les
mov
ja
sarl
sbbl
out
ljmp
dec
mov
pop
aas
es
jne
jae
leave
test
sbb
incb
sub
outsl
cmc
pop
bound
or
dec
into
pop
fs
rorl
pop
mov
cmpsl
lret
outsb
sub
inc
cmp
into
fnsave
fs
pop
mov
cmpsl
mov
test
loope
and
add
mov
lods
cmpsl
cs
jnp
jl
test
inc
mov
cmp
das
mov
jae
int3
fisubrs
pop
lea
mov
fcmovnu
dec
aam
stos
ds
mov
notb
add
fmull
outsl
jle
mov
jecxz
dec
pushf
loope
and
test
inc
ret
mov
jno
loope
and
pop
inc
mov
pop
jns
sub
inc
std
mov
xchg
cs
and
popf
roll
mov
and
imul
test
push
outsl
les
stc
adc
movsl
inc
icebp
ficompl
shll
and
dec
fisttpl
popa
or
loop
scas
cmp
int
xor
or
sbb
cmc
jp
and
mov
xchg
popf
jge
iret
gs
pop
fsts
mov
and
jl
hlt
adc
pop
repz
xor
ds
push
jle
cmp
notl
xchg
in
dec
dec
mov
cmp
fstpt
out
xor
xchg
pop
in
sbb
in
and
dec
call
ret
inc
fstl
sahf
pop
jle
push
or
fidivl
mov
xor
in
ror
xor
mov
stos
jle
push
jle
cmp
push
insb
adc
movsb
scas
cli
or
lret
lret
mov
loop
jl
in
jo
or
movsl
outsb
in
imul
js
and
lahf
xlat
push
push
dec
mov
fldl
adc
sbb
movsb
ljmp
sub
mov
mov
aas
mov
add
add
lods
js
popa
int
out
std
aas
add
dec
loope
int
test
lock
divl
dec
sar
push
popa
imul
mov
filds
loop
and
xchg
cmp
push
sub
nop
jecxz
sub
mov
inc
pop
push
inc
shll
xchg
cmp
jnp
mov
pop
test
jno
sahf
mov
or
xchg
mov
bound
mov
mov
rorl
movsl
add
fmulp
pop
fisttpll
xor
in
adc
jmp
fistpll
pop
add
icebp
mov
pop
int3
aam
arpl
inc
leave
es
and
mov
lret
sti
outsb
dec
ss
enter
fisttpll
pushf
and
repnz
ret
fldt
popa
inc
sub
mov
pop
xor
scas
sub
rcll
aam
lods
test
dec
cmc
dec
shll
cmp
mov
out
mov
bound
lods
xlat
or
add
outsl
cwtl
sub
push
push
dec
fidivl
xchg
fldl
stos
sti
push
sub
andl
jo
shrb
jl
fs
insb
fadds
push
xor
adc
jge
lods
sbb
jle
cmpsb
test
repz
and
cwtl
inc
xchg
jecxz
stos
jne
movsb
es
pop
xchg
sbbl
cmpsl
mov
roll
cmp
cmp
sub
dec
movsb
pusha
dec
dec
mov
insb
mov
aas
lods
aad
or
lcall
arpl
mov
add
and
movsl
push
sbb
mov
mov
or
cwtl
outsl
mov
dec
sti
sysret
testb
mov
sahf
movswl
fxch
mov
mov
push
mov
mov
jl
shll
cmc
pop
mov
rcl
movsb
sbb
and
addl
mov
fs
roll
cmp
mov
xchg
mov
xchg
adc
loope
jne
mov
bound
cmp
adc
les
ret
in
inc
mov
xor
repz
dec
sbb
mov
jns
xor
ja
shl
jl
jns
daa
mov
jle
ror
dec
pop
addr16
shrb
js
testl
sbb
adcb
adc
jge
leave
dec
imul
cs
shrl
ljmp
adc
and
pop
sbb
ss
adc
or
jb
arpl
sahf
loope
add
adc
push
mov
outsb
push
insl
push
lock
add
fldt
aad
int
inc
jo
call
xchg
cli
xor
push
adc
leave
cwtl
icebp
andl
jg
mov
pop
rcl
fdivl
out
add
or
adc
xchg
lock
call
inc
insl
lret
jle
sbb
pop
stc
dec
fs
inc
sub
sbb
cwtl
mov
jl
xor
fimuls
sub
fimull
mov
mov
ret
outsb
arpl
fcmovbe
add
lds
in
inc
movsl
repnz
push
lret
fcom
pop
fcomps
fimull
insl
outsl
or
cli
repz
cwtl
jecxz
loop
rep
mov
ret
inc
test
cmp
sahf
imul
stc
cmp
ljmp
push
loope
add
xor
js
sub
dec
push
mov
fdivs
mov
mov
hlt
lret
test
ja
mov
movsl
dec
jecxz
bound
cmp
ficomps
jle
pop
or
dec
or
sub
xchg
aaa
addb
cmp
out
cmp
test
jle
shr
mov
or
lods
inc
inc
adc
sub
cmp
jne
test
cmp
sahf
sbb
dec
push
cmp
mov
jo
sbb
movsl
cmp
cmp
xchg
test
cwtl
dec
push
bound
add
dec
shlb
cmp
idiv
ds
fdivs
xor
mov
repnz
aas
sbb
or
mov
jmp
push
lea
pop
mov
or
int3
mov
sbb
movsb
lods
outsb
out
push
xchg
pop
dec
pcmpeqw
sub
dec
out
in
std
mov
loopne
add
pop
or
mov
and
nop
pushf
pop
cwtl
stos
add
incb
stos
cltd
or
cmpsb
scas
mov
sti
bound
mov
mov
add
inc
mov
push
lods
imul
inc
pop
pusha
inc
fistpl
pop
sub
inc
out
pusha
aas
loope
jbe
xchg
outsb
rcrl
mov
repz
xchg
pop
fistpl
pop
inc
ja
push
push
pop
add
pop
leave
inc
mov
mov
mov
cld
adc
popa
sbb
into
sbb
pop
pop
idivb
mov
pop
pop
fidivs
movb
sub
adc
outsl
mov
sbb
je
rcrl
shrb
imul
or
fstps
inc
mov
hlt
dec
xchg
lods
push
dec
xchg
inc
mov
aad
mov
ja
xchg
test
sub
sti
mov
mov
jle
ret
test
jge
andb
jmp
adc
into
xor
pop
jae
cmp
lock
shrb
pop
movhps
mov
ds
push
outsl
movsl
fwait
aam
jmp
push
jle
push
stos
das
pusha
push
fnstcw
pop
stos
xor
dec
in
pop
xor
addr16
or
idivb
mov
sub
or
jne
in
cmp
iret
xor
mov
jp
mov
add
sbb
xchg
icebp
sti
adc
mov
dec
sahf
xorl
xchg
inc
sub
bound
adc
jbe
test
xchg
cmc
repnz
fidivl
fadds
xor
fildll
das
xor
jnp
out
xor
push
lds
pop
xchg
aaa
lret
mov
sbb
outsb
call
lahf
mov
xchg
icebp
xchg
adc
test
push
lds
lods
sub
pushf
xchg
outsl
outsb
inc
add
pusha
mov
sarb
pop
shlb
dec
in
dec
cwtl
push
ret
add
andps
pop
mov
and
stc
popa
fdivp
movsl
out
aad
mov
pop
mov
jle
xchg
or
push
xor
mov
out
mov
stos
aaa
mov
xchg
aam
or
in
and
push
push
clc
sub
frstor
jbe
sbb
mov
das
shrl
ds
adc
mov
add
stos
add
mov
popf
or
lea
ret
sar
dec
daa
aas
jl
sar
scas
add
lds
xchg
cltd
pop
mov
lcall
clc
arpl
movsl
cmovp
jle
push
jl
or
or
mov
pop
les
lods
aam
jle
sti
popf
mov
add
jmp
lods
adc
pop
ljmp
es
jno
stos
and
test
dec
in
js
sub
icebp
cmp
lock
mov
xchg
movsb
outsl
inc
mov
fistps
inc
jae
push
fwait
into
insb
push
dec
pop
sbb
ljmp
lret
call
shrl
mov
jle
js
add
cld
loopne,pn
xchg
sub
shlb
pop
fistpll
pop
or
cmp
leave
mov
mov
sub
sub
xchg
repnz
sub
lea
lods
cmp
xchg
loopne
notb
push
mov
adc
push
xor
ficompl
in
outsb
cmpsb
fcmove
xchg
not
push
stos
xchg
leave
sahf
cmp
aad
add
fwait
lods
push
movl
mov
outsl
iret
jbe
and
mov
adc
xchg
and
sti
iret
or
mov
sub
cltd
lret
aad
jo
hlt
push
aad
scas
push
fsubs
or
xor
es
cltd
cmpsl
outsl
andl
pusha
push
sti
push
and
pop
mov
or
leave
push
pop
sub
ljmp
dec
popa
pushf
int
cmpsb
out
xchg
les
cmp
mov
mov
andb
cmp
hlt
mov
daa
dec
cmpl
rolb
hlt
sub
cld
lcall
clc
adc
add
shlb
iret
fwait
addr16
es
cld
xchg
test
and
in
add
or
push
cmp
pop
inc
mov
mov
aas
pop
jbe
dec
mov
ss
or
push
stc
shrl
push
addr16
loope
daa
inc
cs
in
mov
pop
movsb
mov
rclb
and
loop
clc
pop
push
outsl
xchg
jp
fs
int3
in
clc
cld
mov
add
loopne
mov
fwait
add
xor
push
mov
cmp
mov
out
nop
mov
cmpsl
add
add
sub
adcl
ja
in
push
addr16
mov
repnz
decb
mov
in
iret
orl
lahf
addl
dec
push
not
sbb
out
mov
add
sahf
idivb
push
repz
jo
xchg
jbe
push
imul
adc
inc
insb
and
fisttpll
cmpb
ja
jp
cmp
pop
addr16
mov
push
jmp
dec
cmp
pop
mul
sti
jl
nopl
test
std
mov
shll
and
or
bound
stc
in
mov
mov
insl
push
adc
clc
stos
cmp
xchg
fdivr
dec
orb
dec
pop
rcl
push
cmp
in
mov
les
lret
mov
std
sbb
inc
push
push
js
aas
cmp
xor
iret
dec
push
adc
fbld
cmp
mov
mov
pop
test
xchg
rolb
lret
clc
xchg
rcr
push
or
sub
aaa
mov
ss
in
mov
mov
mov
mov
cmpsb
add
into
jne
pop
xchg
jns
push
mov
dec
mov
add
dec
sub
scas
add
mov
push
in
push
pop
fcoms
dec
mov
mov
inc
dec
and
and
inc
mov
xlat
mov
fdivp
xor
add
jo
jo
pop
jnp
push
aam
in
ds
sbb
fwait
inc
add
les
repz
repz
nop
jle
adc
cmp
push
jne
cmp
ljmp
adc
push
cmpsl
adc
fcomip
sub
out
pop
xlat
daa
mov
sarl
mov
sub
pop
dec
pop
popa
and
pop
test
cltd
addl
mov
mov
xchg
enter
xor
in
aas
test
aam
cwtl
fsubl
shrl
xor
mov
add
push
decb
dec
jmp
cmp
cmpsb
cltd
inc
pop
lret
add
mov
lds
in
loopne
add
pushf
iret
pop
stc
stc
bound
mov
jge
push
dec
inc
repz
mov
les
lds
sbb
sub
nop
dec
mov
mov
ja,pn
lahf
push
hlt
icebp
pop
xchg
ret
mov
lahf
mov
mov
bound
inc
xchg
adc
add
out
gs
mov
adc
jp
push
push
int
dec
es
into
into
sub
ljmp
add
xchg
pop
lea
call
leave
mov
lret
push
popa
aam
xchg
lods
dec
jge
cmp
jnp
and
xchg
and
pop
xchg
xor
sbb
je
mov
aad
loope
aam
mov
mov
mov
push
jne
ljmp
cmp
adcb
fisubs
mov
inc
push
and
icebp
jb
add
mov
or
mov
xor
sbb
mull
push
scas
xor
es
adc
in
pushl
adc
mov
mov
cmp
inc
out
jnp
sti
xchg
mov
push
bound
aam
sbb
popf
add
xlat
mov
xchg
push
cld
inc
jmp
das
adc
pop
sub
xor
adc
stos
iret
mov
pop
mov
xor
jno
jnp
push
jp
jle
fldenv
jno
sahf
inc
in
inc
adc
pop
jae
mov
push
xchg
adc
ljmp
pop
push
push
ret
out
mov
mov
imul
mov
adc
xchg
push
push
loopne
mov
pop
jae
cmpsl
jle
loop
adcb
sbb
lds
sub
push
imul
mov
dec
inc
sbb
inc
lods
mov
jl
movsb
loop
pop
jb
ss
cmp
lret
outsl
inc
lds
jns
mov
lock
test
xlat
jae
xor
pop
xchg
flds
lea
in
xorb
aad
loop
adc
cmp
push
cli
dec
dec
sahf
loope
mov
out
or
aas
xchg
mov
jb
mov
xchg
in
sub
rep
or
iret
lods
and
lds
insb
in
sbb
sti
scas
inc
adc
xor
das
std
aaa
shlb
shrb
sub
jnp
int3
leave
int3
rolb
scas
imul
nop
xor
cltd
push
dec
arpl
mov
inc
jmp
mov
dec
call
mov
pop
pop
push
lods
jmp
fistl
int3
add
int3
jno
xor
mov
sti
sti
dec
shlb
fstl
leave
add
mulb
sbb
icebp
dec
lock
stos
and
lods
addr16
dec
mov
repz
inc
shl
adc
lea
fisubl
jge
jbe
lea
aam
mov
dec
mov
js
xchg
inc
fcoms
xchg
xchg
loope
inc
ja
test
fsubr
sub
jnp,pt
xchg
shr
jno
fisubrl
sub
mov
out
xchg
movl
adc
mov
daa
mov
test
or
lods
mov
pop
xchg
fldcw
out
jo
jo
mov
test
es
aas
jno
divps
xor
sub
jmp
inc
add
int
sbb
adc
insb
mov
lahf
testl
std
or
jnp
jae
jecxz
imul
fs
sub
inc
mov
push
fdivrs
ss
inc
icebp
xor
and
dec
jle
xchg
sbb
cmpb
and
jg
dec
pusha
xchg
pop
fidivl
nop
mov
mov
flds
or
pop
nop
loop
dec
out
push
andl
jo
movsb
cmp
sub
mov
int
push
mov
imul
xchg
push
add
enter
push
mov
imul
pop
sahf
xor
xchg
sti
and
lock
xor
lods
imull
add
lret
inc
add
inc
mov
push
fnstenv
dec
mov
xor
or
ss
lea
adc
inc
jae
add
and
inc
mov
xor
inc
sbb
inc
mov
xchg
inc
adc
mov
mov
push
insl
xor
mov
insb
inc
jbe
inc
adc
scas
jo
mov
mov
push
fimull
loope
fcompl
push
pushf
lahf
sbb
loop
dec
out
dec
testl
push
pop
and
ret
dec
fsubr
pop
dec
cwtl
push
lods
add
cmp
addr16
call
xlat
push
sbb
adc
xchg
pop
sub
std
and
adc
pop
pushl
cli
push
mov
sub
pop
push
mov
xor
std
xchg
push
sub
popf
xlat
in
inc
jmp
in
jb
mov
jne
xchg
cmp
lds
inc
out
sub
xor
test
fidivl
adc
dec
popa
mov
cmp
shlb
mov
push
dec
insb
iret
shll
xchg
nop
aas
sbbb
mov
mov
pushf
lret
adc
adc
lods
out
push
bound
bound
cmp
pusha
outsl
mov
int3
push
mov
sub
xchg
pop
int
xor
jne
mov
mov
decb
daa
hlt
sub
lds
loopne
cmpl
mov
or
and
sbb
in
fcomps
dec
scas
sbb
mov
xor
rolb
push
mov
jbe
fmull
xchg
movsl
arpl
aam
movsl
jmp
fists
sub
arpl
outsb
jae
hlt
jb
call
sahf
loope
xchg
dec
pop
data16
ret
push
lea
dec
movsb
cmpsl
orb
push
movsl
lea
mov
dec
aaa
testb
dec
adc
sub
mov
push
aas
ficompl
cmp
jle
enter
xor
int
xchg
dec
sub
jecxz
addr16
push
mov
cmp
mov
popa
test
loope
repz
dec
inc
and
sbb
lods
mov
mov
cs
fidivrl
and
and
sti
cmp
es
cmp
gs
inc
inc
dec
or
mov
loopne
jle
cmp
add
mov
gs
dec
xchg
ficoms
mov
test
sub
or
subb
sbb
popa
mov
lcall
stos
inc
mov
lock
adc
icebp
ss
clc
mov
cwtl
je
xchg
ja
adc
test
jecxz
and
nop
xor
and
aad
push
pusha
and
cmp
xchg
mov
stc
push
insb
add
xor
pop
pop
insb
mov
cmpsb
mov
add
xor
push
xor
xchg
cwtl
and
push
xchg
cld
push
rorb
xlat
mull
xor
pop
cltd
mov
ds
pusha
shrb
dec
inc
adc
pop
pop
test
mov
push
pop
outsb
addl
pop
jle
sbb
jne
push
insl
sub
xchg
dec
dec
sbb
ret
xchg
xor
stc
enter
xchg
sarl
xor
ss
repz
in
pop
fisubl
mov
aam
pop
or
clc
push
daa
inc
push
xchg
test
fwait
xor
cmp
lock
jmp
clc
test
int
push
fldcw
lret
pop
rorb
cmpsb
inc
into
aaa
push
jecxz
push
shl
sbb
cmp
nop
jecxz
jecxz
xchg
hlt
sub
cmp
jne
pop
adc
inc
dec
or
les
adcl
mov
repnz
dec
lret
pop
jbe
shlb
lea
mov
lds
ret
push
popl
cmp
push
pop
pop
fs
mov
test
ja
into
dec
xor
add
cmp
stc
pop
mov
movsl
dec
xchg
push
aad
xchg
xlat
push
jb
xchg
imul
or
outsl
sbb
inc
inc
sub
or
cmovo
or
icebp
push
sbb
cmp
adc
lock
pushf
pop
cmp
pop
lods
cmp
push
mov
enter
aas
pushl
pop
or
imul
addr16
sbb
cmpl
leave
mov
jl
xor
mov
inc
mov
xor
int3
mov
adc
xlat
jge
jle
pushf
notb
test
dec
adc
and
push
das
cmp
cwtl
pop
inc
fstpt
dec
sub
clc
xchg
push
inc
mov
movsl
insl
add
adc
mov
jg
testl
addl
add
mov
pop
pop
push
cmp
pop
pop
pop
pop
movsl
hlt
cltd
insl
fs
cmp
fs
push
xchg
pop
lds
xchg
mov
adc
arpl
aad
int
xchg
les
mov
std
xchg
divl
inc
std
scas
lret
rolb
xchg
out
mov
xchg
std
mov
fisttpl
and
in
adc
fwait
lods
ja
lcall
fbld
fidivl
pop
popf
and
cmp
inc
and
xchg
shl
imul
out
outsl
mov
mov
dec
pop
testl
jl
pop
lret
fnstcw
daa
xchg
pushf
lock
sbb
sub
sbb
lcall
mov
mov
xor
adc
stos
adc
or
jl
jnp
movsl
adc
dec
sbb
jnp
lret
dec
pop
cmp
push
or
in
dec
xchg
xor
push
or
outsl
mov
out
mov
mov
jnp
xor
add
orl
or
sti
and
xor
shrl
jl
add
mov
xlat
adc
std
iret
push
lret
hlt
xchg
je
sbb
mov
push
mov
mov
imul
jns
popa
mov
popl
int
shll
add
lret
jno
mov
xchg
rcrb
sbb
loopne
cmp
shl
fisttpll
jg
jno
pop
mov
rolb
jp
das
xor
inc
jb
inc
mov
inc
and
dec
call
mov
pop
mov
push
and
mov
outsl
cwtl
jo
inc
loopne
out
mov
cwtl
orl
add
xor
push
fwait
dec
movsb
roll
repz
ret
leave
out
inc
mov
add
testl
adc
pusha
push
cli
cwtl
xchg
sbb
stc
mov
fsubrs
outsb
leave
sub
out
mov
inc
sti
mov
mov
leave
inc
inc
ja
nop
filds
roll
push
fs
pop
sub
pop
dec
xchg
and
or
into
adc
xor
push
pop
jae
push
repz
sub
test
nop
out
push
dec
lret
push
cmp
pop
icebp
xchg
push
shrl
mov
jne
sub
movsb
fldcw
and
or
daa
or
mov
call
mov
int
cmp
and
xchg
shll
ret
or
shr
fistps
mov
push
fnstenv
insb
out
loope
jl
sub
xor
mov
pushf
push
fistpll
out
jno
cmp
test
xor
lods
pop
jnp
jecxz
adc
cmc
loop
aas
pop
sbb
test
das
mov
std
cmpsl
inc
inc
pushf
fwait
and
mov
and
sbb
mov
mov
leave
scas
imul
mov
cmp
icebp
rclb
rcr
inc
pop
mov
push
leave
fcomps
push
mov
adc
mov
negb
inc
sar
rorb
pop
imul
adc
stc
dec
loopne
out
bound
ffree
loopne
xchg
sbb
enter
jg
es
push
shrb
inc
mov
sbb
fmull
scas
xor
rol
imul
xchg
push
jmp
shlb
sti
jae
loope
mov
cmp
inc
out
sub
je
aam
mov
ret
rcrb
mul
adcl
ficompl
inc
rcr
pop
or
xchg
gs
adc
inc
ffreep
iret
or
adc
inc
stos
mov
in
mov
jmp
pop
nop
inc
ds
mov
aad
mull
pop
push
push
icebp
gs
push
fdivr
out
mov
mov
in
cmp
cmp
cli
shrb
jns
icebp
outsl
cwtl
sbb
mov
ja
xor
dec
cli
dec
or
ret
mov
and
mov
mov
nop
ja
inc
stos
adc
imul
push
fsts
dec
dec
hlt
xchg
pop
mov
mov
push
mov
or
lahf
lahf
xor
sbb
test
hlt
ret
mov
mov
mov
jns
test
dec
call
iret
cmp
adc
sub
mov
adc
in
add
lret
sub
jae
ljmp
xchg
add
ja
mov
call
bound
pop
jecxz
shrb
xor
aaa
dec
inc
loopne
and
jne
jecxz
mov
cs
lret
push
fwait
ja
and
xor
arpl
sub
test
arpl
and
jle
adc
fistl
mov
mov
imul
xor
mov
add
inc
jmp
jg
jp
pop
scas
cmp
push
data16
add
adc
adc
mov
or
dec
pop
xorl
fnstcw
sub
and
stos
adc
loop
int3
xchg
or
bound
xchg
popf
inc
lods
lahf
jle
mov
mov
imul
gs
je
jo
inc
scas
inc
push
sub
ljmp
jg
pop
xchg
clc
xchg
lods
cmc
mov
es
in
out
pop
add
adc
or
lret
push
cmp
dec
ret
mov
test
pushf
sub
add
mov
ds
pcmpeqb
int
mov
mov
std
out
aam
sbb
push
pop
in
and
mov
and
shlb
ud0
loope
repnz
mov
cld
mov
cs
dec
in
loop
cld
stc
into
jg
fsubrs
or
out
push
push
loope
add
dec
mov
mov
ror
adc
inc
hlt
push
cmp
pop
cwtl
sbb
mov
negl
sub
cs
xchg
dec
inc
ret
sub
mov
sbb
sub
fsubp
gs
xor
pop
adc
daa
mov
es
icebp
insb
mov
mov
or
sbb
stc
out
cmp
inc
insb
shll
gs
lret
lods
and
adcl
xor
push
dec
mov
xchg
fs
lea
mov
ss
repnz
pop
iret
std
xchg
das
lds
push
popa
icebp
outsb
sbb
leave
xor
ss
mov
xchg
jb
adc
popa
xor
int3
pop
out
and
mov
inc
imul
xchg
pop
ja
imul
jle
push
jnp
mov
jbe
movsl
test
insb
mov
ds
jl
jbe
xchg
lcall
loop
mov
pop
lahf
mov
rclb
sbb
je
dec
mov
test
lds
lds
loopne
mov
jne
int
mov
jle
mov
or
cmp
fcoml
jb
cmp
loop
addl
xor
jmp
icebp
xchg
ds
icebp
inc
lds
and
mov
outsl
sub
sub
fistl
mov
fists
push
push
or
push
outsb
push
fwait
or
and
in
or
andl
out
xchg
push
outsb
inc
push
es
jo
daa
repz
xchg
andl
fwait
or
jge
or
fs
fwait
push
fucomip
std
push
add
mov
mov
in
or
pop
loop
ljmp
popa
enter
adc
cmp
mov
dec
aaa
fcoml
sub
mov
mov
mov
insb
adc
and
dec
xchg
push
jmp
orl
jge
int
int3
je
adc
fadds
jp
pop
xchg
and
scas
push
fnstenv
fldenv
fnsave
out
and
pop
and
int
sub
in
out
and
fdivs
pop
int
mov
xchg
insl
adc
lcall
stos
iret
inc
jo
das
mov
shr
into
cmp
pop
inc
adc
pop
mov
rcll
and
das
add
inc
sub
xor
fistpl
dec
cwtl
mov
and
dec
mov
jg
xchg
addr16
ljmp
fwait
imul
jp
mov
cmp
adc
and
sbb
leave
call
fs
xchg
sub
sti
scas
jecxz
push
add
leave
add
or
js
dec
pop
xchg
test
lods
push
les
dec
inc
test
pop
inc
xchg
push
xor
push
xchg
cs
cmp
dec
pop
dec
mov
mov
popf
jnp
data16
stos
data16
shr
sub
xchg
das
jg
fidivl
or
leave
jbe
je
and
dec
std
inc
cli
shr
das
aaa
aad
imulb
jnp
shll
jnp
out
xchg
dec
lock
fs
mov
sbb
inc
cmpsb
scas
js
push
jle
hlt
mov
in
scas
mov
lret
rorl
mov
out
roll
lret
mov
mov
into
and
mov
fs
fprem1
bound
mov
fsubs
xor
dec
pop
ss
pop
in
lods
cmp
inc
pop
ficoml
jmp
insb
mov
fwait
insb
add
xlat
mov
and
adc
lret
enter
daa
dec
out
jbe
idivb
mov
jns
mov
scas
adc
jge
mov
in
dec
lods
pop
aas
sbb
in
xor
loop
out
xor
sub
inc
dec
push
add
in
cwtl
out
sub
push
jbe
nop
cmp
xor
negl
xchg
rorb
sbb
mov
fisttps
fistpl
bound
pop
sarb
lea
cli
mov
sbb
cltd
dec
push
std
sub
nop
adc
andb
cmpsb
adc
mov
in
ljmp
inc
sbb
in
data16
pop
jae
imul
lret
mov
or
pop
dec
push
inc
push
cli
js
ficoms
or
outsb
lret
or
or
mov
insb
xchg
push
or
pop
in
push
scas
dec
push
out
lahf
test
or
movsb
cmc
in
dec
stos
xchg
jb
mov
loope
sbb
cmp
mull
adc
lahf
push
mov
loope
dec
into
je
sbb
cmp
into
mov
test
aas
pop
fistps
imul
out
jmp
jno
rcl
jo
shll
popf
lods
popa
loope
and
mov
popa
push
bound
and
aas
dec
cmp
mov
outsl
add
imul
insl
lea
mov
enter
fcomps
repz
lods
and
cmp
sub
sti
xchg
sub
push
decb
xchg
xchg
les
lods
inc
mov
xchg
push
addr16
adc
sbb
subl
cmpsl
lds
xchg
inc
outsb
dec
fs
mov
mov
mov
push
dec
filds
or
daa
or
mov
fistpll
std
dec
push
push
int3
sbb
mov
pop
into
fldt
aas
xchg
idivl
and
adc
xor
jne
xor
mov
rcl
mov
mov
popa
roll
cwtl
pop
fdiv
mov
pop
hlt
je
lods
test
jno
scas
int3
out
pop
fwait
loope
ret
mov
imul
pop
daa
lea
insl
mov
sub
lods
mov
bound
mov
inc
jnp
in
cmpsb
data16
fistl
fistpl
mov
mov
inc
push
call
and
ret
mov
std
movsb
xchg
pop
mov
inc
cmp
fsubr
push
pop
shlb
std
mov
sbbl
dec
mov
mov
js
mov
or
add
adc
inc
iret
mov
xor
pop
fnstcw
push
inc
sbb
ss
or
sarl
dec
dec
jge
notl
cwtl
jae
stc
jmp
fwait
mov
mov
xchg
inc
or
xor
push
shr
clc
dec
mov
mov
xchg
sub
xor
mov
mov
cltd
jbe
xchg
add
fwait
cmp
mov
clc
mov
les
xchg
inc
jge
outsb
pop
and
mov
and
mov
and
mov
xor
nop
int3
mov
lcall
jno
jno
inc
dec
out
cwtl
test
mov
loopne
jecxz
xchg
out
insb
sbb
mov
mov
cli
lock
js
inc
mov
jp
xor
repz
repnz
sbb
sub
push
clts
pusha
fstps
xor
xchg
in
and
push
fisubl
cmp
sub
inc
jp
cmp
mov
xchg
inc
pop
jb
lods
mov
sub
or
mov
daa
loop
sti
or
aam
adc
and
xor
dec
add
arpl
lret
and
addr16
dec
fwait
mov
icebp
cld
cmp
xchg
shlb
ds
inc
fcoms
jns
inc
xchg
xor
ds
loopne
mov
add
mov
push
or
das
mov
movsb
cltd
sub
fcmovnu
sub
xor
xor
jle
inc
cmp
jb
inc
inc
mov
push
ss
mov
cmp
xor
or
sbb
xchg
test
cmp
sarl
pushf
adc
jno
clc
cmp
add
into
jecxz
dec
hlt
xchg
insl
shr
mov
jae
popa
sbb
dec
into
nop
aad
pop
int3
and
mov
jg
cwtl
or
sti
push
es
dec
sbb
xor
xlat
lahf
jmp
std
lea
inc
or
pop
pop
mov
loopne
aad
subb
push
out
and
or
mov
lods
jp
cmp
jo
les
test
scas
bound
int3
stos
outsl
mov
jo
pop
pop
xchg
fcompl
dec
mov
daa
dec
das
pusha
push
sub
push
loop
sbb
jecxz
shrb
std
lcall
or
lahf
cmp
mov
popf
dec
lea
sbb
pushf
and
mov
jmp
das
aaa
xor
mov
imulb
sub
add
cmpl
je
fsubrs
cltd
ja
loope
fcomps
mov
out
out
stc
lahf
je
mov
add
sub
pop
mov
sbb
mov
fcomps
pop
dec
mov
mov
call
in
sub
inc
fadds
repz
xchg
mov
xchg
and
ret
mov
adc
std
push
jo
movsb
out
cmp
adc
cli
add
cli
jnp
pop
jg
dec
xor
stos
jmp
lahf
rol
or
dec
jp
add
pop
mov
cmp
dec
rcr
aas
loop
adcb
jg
jne
lea
push
repnz
scas
add
out
hlt
inc
into
push
sti
pop
movsb
into
jbe
pop
push
jae
ja
out
xor
outsl
xchg
dec
js
out
jnp
jmp
xchg
dec
dec
hlt
subb
xchg
loopne
xor
pushf
stos
push
mov
pop
dec
jmp
mov
pop
insb
pop
insb
jae
out
sbbb
xchg
lret
adc
in
jnp
jmp
stc
ja
xchg
icebp
cmpsl
inc
stc
inc
add
aam
push
jnp
jg
jo
cmpsl
das
or
mov
mov
push
imul
int3
adc
xlat
pop
shl
adc
dec
scas
dec
aam
push
filds
sbb
push
fwait
loope
mov
neg
stos
sti
sbb
std
popf
sbb
add
mov
mov
insl
out
decb
lret
inc
jl
xor
ljmp
sahf
cmpsl
pushf
jmp
mov
inc
loopne
dec
xorl
pop
inc
adc
or
push
insb
push
je
jne
mov
lods
inc
sarb
ljmp
cmp
mov
lds
mov
cmc
fidivl
jnp
sub
mov
adc
sbb
inc
dec
xor
adc
mov
add
repz
frstor
je
pop
fs
mov
je
jne
dec
mov
rep
sbb
xchg
inc
inc
jb
outsl
loop
outsl
mov
sbb
cmpb
cwtl
xchg
mov
pop
push
cltd
jp
into
cmp
or
dec
dec
imul
mov
sahf
jp
mov
xor
es
push
pop
xor
ljmp
pushf
cmpb
leave
sub
ret
push
insl
xchg
add
popf
fmuls
aad
inc
test
mov
rcl
jnp
mov
es
leave
xchg
cmpsl
push
daa
mov
add
sbb
je
daa
mov
or
mov
mov
sbb
jp
push
xchg
adc
test
jns
call
ss
sti
enter
ds
arpl
sub
pop
fwait
outsl
lcall
sbb
hlt
push
fildll
mov
aas
push
push
popa
testb
lret
dec
adc
xor
lods
stos
push
xchg
dec
push
inc
popa
nop
popa
push
adc
push
and
pop
dec
in
cmp
dec
mov
test
pop
cmp
adc
inc
lds
jge
aad
cmp
iret
mov
pop
cli
imul
icebp
adc
push
push
lcall
sub
cld
out
jl
aad
cmp
sub
in
xchg
fildl
fwait
lret
mov
aas
add
pop
ret
leave
xchg
push
jle
repnz
sub
xchg
fnstsw
or
pop
fadd
and
and
jecxz
jnp
add
push
inc
mov
sbb
dec
fnstcw
mov
adc
cmp
loop
pop
xor
scas
and
mov
cmp
arpl
jecxz
xchg
sbbb
sub
dec
jae
and
ja
pop
cwtl
insb
inc
test
xchg
aaa
xor
cmc
push
test
jge
movb
addl
shll
pusha
test
shlb
imul
cmpsb
lock
insb
pop
sbb
dec
fcmovnbe
jmp
outsb
mov
mov
xor
mov
sub
leave
ret
lods
dec
test
das
xchg
pop
adc
jb
push
std
fisubrs
stos
push
jno
cmpsl
adc
fcmovbe
inc
xchg
std
xor
imul
loope
outsl
call
mov
out
loop
fistps
leavew
or
test
icebp
xchg
adc
pusha
jno
dec
push
mov
andb
pushf
adcb
pop
xor
pop
inc
data16
shlb
lock
adc
dec
ret
and
sbb
cld
mov
jle
mov
fnstenv
pop
scas
mov
js
outsl
jns
repz
pop
in
clc
sti
inc
mov
fstp
mov
jle
pushf
popa
int
rorl
in
mov
mov
pop
lds
lea
popa
mov
mulb
outsl
mov
pop
mov
or
xor
sub
aam
sub
inc
mov
pusha
imul
addb
jnp
ficoml
hlt
fistl
fcmove
bnd
inc
lret
imul
jg
pop
mov
int
xor
test
test
sbb
insl
sbb
lcall
test
sarb
pop
cmpsb
inc
imulb
cmp
lock
dec
mov
lahf
push
lock
mov
lea
sbb
sbb
es
sub
add
das
and
ljmp
inc
mov
daa
xchg
cmp
stos
xchg
jb
add
mov
int
flds
ja
int
fcoml
lahf
icebp
shrl
stc
pop
fs
out
mov
popf
stos
cmp
dec
adc
leave
jno
andb
or
mov
out
leave
lahf
sbb
pushl
mov
adc
aas
xor
fcompl
int
xor
jge
fdivl
inc
inc
mov
pusha
mov
pop
adc
and
push
test
xor
push
shlb
adc
push
lods
movaps
shll
ljmp
jmpw
in
das
negb
repnz
in
mov
xchg
and
and
mov
xchg
test
pop
imul
pop
scas
mov
xor
dec
sbb
test
pushl
jg
das
xchg
stos
subl
fcoms
pop
and
std
jecxz
pop
mov
mov
test
stos
push
mov
movsb
mov
mov
xorl
arpl
lea
test
outsb
gs
mov
outsl
jns
mov
test
push
cmpsl
xchg
icebp
test
push
mov
dec
mov
pop
cltd
lret
mov
mov
mov
ja
cmp
imul
int
stc
adc
outsb
mov
and
test
xchg
ljmp
pop
push
aad
xor
stc
cwtl
repnz
sub
jo
add
jns
add
mov
fisttps
dec
mov
lds
movsl
test
int3
fadds
pop
mov
adc
pop
iret
jbe
in
sub
mov
je
addr16
addr16
addr16
and
xchg
or
push
ret
dec
inc
test
jae
dec
push
ljmp
xor
mov
or
inc
jmp
inc
out
or
cmp
outsl
loope
inc
and
mov
cmp
and
sbb
cmp
call
mov
xor
and
xor
lahf
enter
add
inc
mov
fldcw
xor
jl
lret
add
mov
jbe
test
xchg
lret
in
out
sbb
fistps
cmpsb
push
jmp
pop
push
lret
pop
adc
ja
out
scas
mov
testl
or
sub
inc
lds
and
sub
ja
jp
jecxz
jbe
cmp
cmp
cmp
jns
mov
fs
mov
stos
pushf
push
jmp
js
addr16
xor
jge
repz
fnstsw
xchg
fisttpll
arpl
push
mov
inc
add
xchg
aad
hlt
jecxz
fcoml
pusha
dec
jg
xchg
in
push
xchg
jp,pt
add
scas
clc
and
cmp
popf
sub
icebp
in
mov
cmp
sub
arpl
cmp
lcall
cmp
push
lock
add
mov
std
sti
int3
jbe
loop
push
xchg
push
dec
mov
sub
mov
cmp
mov
xchg
cltd
xchg
scas
push
mov
stos
jg
ficoms
int3
adcb
mov
movsl
xchg
call
and
mov
fidivrs
adc
push
jns
dec
inc
cwtl
mov
loopne
sbb
adc
repnz
js
aaa
aaa
jns
popa
jle
test
push
sbb
jl
in
ret
test
mov
movsb
cmp
pop
add
in
cs
fwait
dec
outsb
cld
xor
inc
pop
stos
repz
push
sti
sarl
and
jl
out
roll
dec
jno
jb
mov
gs
gs
sbb
ror
add
dec
test
sub
test
inc
sbb
mov
pop
sbb
add
pop
jmp
mov
lds
sbb
les
ljmp
std
push
pusha
push
xchg
outsb
sbb
cmp
movb
and
cmp
mov
dec
pop
add
mov
mov
iret
pop
cmpsl
lcall
add
popa
das
dec
jmp
stc
jmp
cld
fwait
cmp
xchg
jnp
in
div
cmp
lds
repz
add
jp
lcall
adc
mov
jb
cmpb
pusha
test
rolb
icebp
jge
in
mov
xchg
out
das
out
jl
add
jns
dec
jae
nop
mov
popa
and
mov
movsl
adc
fs
cmpsb
or
fadds
pop
mov
push
pop
je
popa
repz
sbb
movsl
mov
test
notl
insb
push
fidivs
data16
add
cwtl
and
loop
jg
outsb
mov
sbb
divl
dec
and
pusha
leave
hlt
push
lahf
int3
fsubs
and
sbb
movsl
mov
xor
and
cmp
cmp
or
sbb
xchg
sub
cli
pop
sar
cld
orb
sub
leave
jae
shlb
aam
repz
movsl
xchg
icebp
mov
mov
icebp
hlt
inc
jp
mov
xor
mov
or
sub
xlat
loopne
pop
adc
pop
les
imul
lock
sbb
out
and
mov
aaa
inc
nop
test
push
jno
adc
insl
jle
lea
les
xchg
mov
push
pop
rcrl
jno
daa
sarb
outsl
lret
cld
fldcw
int3
insb
sahf
mov
cmpl
flds
int3
fstpl
pop
dec
jbe
add
arpl
sub
sub
popa
fldcw
mov
adc
lock
rorl
adc
arpl
das
sbb
rcr
and
sbb
adcl
mov
add
cmpsb
imul
push
mov
rol
dec
push
cs
adc
fcmovnbe
dec
add
push
adc
imul
sub
ljmp
fcomip
cmp
leave
fwait
lods
jecxz
das
add
imul
aam
rcr
xor
ret
fimull
inc
mov
push
lods
mov
aam
test
add
adc
mov
test
movsb
cmp
scas
aam
and
mov
push
mov
push
scas
aas
pop
mov
xchg
je
call
out
cmp
xor
xchg
or
xchg
inc
int
and
mov
fmul
sbb
loop
pop
pusha
add
push
pop
cmp
xlat
sbb
rcrb
stc
dec
jg
pop
js
mov
lds
popf
inc
std
cmp
mov
pop
dec
fimull
xor
cltd
or
daa
and
inc
pop
movsb
pop
shlb
mov
in
and
cmpsb
shll
fists
jmp
cmp
push
xchg
cmpsb
rorl
xchg
hlt
leave
inc
call
pop
incl
dec
lret
arpl
mulps
sarb
sbb
cmp
push
jmp
ljmp
push
ret
sub
rorb
add
test
sahf
xor
sbb
sbb
imul
sbb
and
mov
sub
mov
in
es
adc
cmp
sbb
adc
out
adc
jle
je
out
fsubs
fcom
mov
pop
adc
mov
js
in
sti
in
clc
xchg
sti
popa
shlb
lahf
pop
xor
and
mov
jl
loopne
sub
inc
decb
pop
mov
nop
adc
sub
and
decl
loopne
shrb
test
shll
cmp
outsl
pop
jmp
aam
xor
inc
cmpsl
mov
fsub
insb
jle
jp
or
leave
push
xchg
push
mov
cmp
mov
dec
pause
push
or
push
aad
iret
fldl
cli
mov
and
lahf
int3
js
mov
mov
aas
fptan
in
ds
jae
arpl
ss
test
add
insb
leave
inc
pop
dec
mov
jo
popf
imul
sub
or
out
pop
pop
lods
aad
in
sbb
lods
jle
dec
dec
out
xor
jle
mov
sbb
mov
ret
icebp
inc
xorl
push
pop
mov
stc
lret
sbb
clc
scas
add
aaa
in
dec
mov
pop
xchg
push
pop
inc
or
xorb
enter
test
jmp
jne
es
dec
or
xor
sub
cld
mov
push
cmp
js
int
cmp
jmp
ljmp
and
stos
inc
aad
xchg
aam
adc
lods
fistpll
testl
repz
xlat
and
cwtl
mov
inc
push
jnp
pop
cmpsb
xchg
xorps
or
cs
fcoml
mov
loopne
ja
or
pop
xor
inc
enter
gs
dec
psrad
scas
lods
add
sbb
int3
fiadds
mov
mov
popa
xchg
dec
push
mov
adc
mov
ret
inc
dec
or
jg
out
pop
inc
dec
jne
ret
mov
mov
sarb
lahf
inc
jb
mov
in
fwait
jb
gs
and
loope
idiv
por
dec
push
sub
sub
es
or
pop
add
jb
gs
mov
scas
test
test
jmp
andl
stos
jp
inc
push
fldcw
test
rclb
xchg
ret
es
cmc
xchg
lods
ss
sbb
mov
cmp
in
inc
movsb
or
sub
stos
mov
mov
dec
rolb
inc
in
scas
ret
push
push
dec
sahf
stos
andl
and
ret
inc
aam
sarl
shl
lret
pop
out
in
test
jbe
std
push
ljmp
mov
mov
and
add
xchg
mov
xor
or
out
sub
add
into
or
sbb
leave
mov
inc
mov
test
jl
mov
xchg
pop
and
pop
into
dec
lea
add
enter
sbbb
pop
pop
sub
call
fdiv
aaa
sbb
sub
in
mov
push
call
push
iret
movsl
lahf
cmp
xorl
sub
and
dec
out
fmulp
ss
sbb
outsl
push
push
mov
aam
lods
ss
out
jg
cmpsb
pop
pop
cmc
rcl
sbb
roll
sbb
in
adc
and
icebp
loopne
loopne
stc
pop
rcrb
and
insl
mov
int
aad
inc
xchg
adc
mov
sub
inc
xchg
das
cmp
pop
cmp
lret
aam
out
mov
fdivrs
push
imul
add
and
push
ss
movsl
enter
add
jl
fldenv
shl
fisttpl
fdivrs
push
bound
adc
lea
jns
dec
push
mov
call
push
adc
test
xchg
or
test
outsb
mov
inc
outsb
das
and
push
sub
aas
aas
ds
sti
out
or
or
sub
lahf
mov
clc
and
pop
scas
stos
call
jae
mov
sarb
lods
cmc
daa
popf
mov
into
insb
nop
int
or
sti
enter
outsl
imul
jl
push
mov
test
movsb
loopne
std
push
rcrl
add
gs
outsl
lret
mov
leave
fidivl
mov
dec
sub
lods
mov
mov
rcr
imul
nop
decl
adcb
dec
xchg
mov
test
mov
in
pushf
rcrl
enter
popf
sarb
xchg
mov
cli
mov
test
push
cmp
sahf
lret
jl
ror
stos
and
sub
fadd
aam
in
stos
mov
daa
pop
clc
xchg
push
xchg
cmp
lcall
adc
testl
lret
push
jp
push
lock
inc
adcl
fs
jns
aas
pusha
cmp
mov
popf
fisubl
mov
and
insl
ret
cmp
loopne
fwait
shlb
push
sub
mov
push
pop
popf
adc
adc
les
mov
jae
xchg
add
mov
pop
add
aad
or
int3
into
adc
js
lods
cmc
mov
lret
sub
cmp
jecxz
ljmp
xchg
push
js
xchg
aam
loop
dec
adc
sub
loope
orb
in
cltd
int
sub
je
mov
xchg
sbb
rcll
pop
out
mov
sub
aad
les
add
dec
or
in
testl
xchg
imul
addr16
enter
add
jmp
popf
movsl
in
out
pop
push
and
ljmp
inc
xor
aaa
sub
jmp
test
adc
sub
in
repz
out
mov
dec
pop
inc
lds
dec
add
cmpsb
add
mov
or
jg
push
daa
fwait
or
mov
inc
les
testb
or
test
pop
add
sub
push
pop
adc
mov
lcall
inc
out
sahf
push
lcall
call
outsl
xor
cmp
adc
das
xchg
daa
sub
pop
shrl
pop
inc
test
or
sbb
mov
cmc
in
cmp
loop
lock
add
dec
sbb
insl
sbb
pusha
gs
dec
pushf
mov
es
test
xchg
ret
pop
test
xor
jg
outsl
lcall
sub
test
xor
lahf
push
outsl
mov
and
sbb
jo
fs
fcompl
bound
or
cld
negl
ljmp
pushf
mov
add
mov
ret
jg
xchg
mov
push
cmp
mov
and
jnp
jbe
popf
fcoms
fstl
mov
cld
and
adc
jns
mov
mov
fwait
xor
fistpll
add
dec
aas
and
xor
jl
mov
jmp
popa
xchg
sbb
push
jle
leave
xchg
das
mov
insl
icebp
imul
jp
mov
rolb
loopne
adc
pop
test
repz
scas
sbb
pop
mov
loop
jp
lcall
xlat
push
pusha
xor
adc
sbb
inc
adc
jg
repnz
push
lods
or
xchg
mov
outsl
jo
fidivs
push
mov
pop
test
push
mov
bound
jg
push
lret
mov
adc
cmpsl
cmpsb
xlat
sub
pushf
aam
insb
mov
das
jecxz
pop
mov
pop
inc
aam
popl
add
sbb
cmp
out
shr
mov
add
pop
shll
fs
push
pop
mov
loope
lret
mov
mov
bnd
or
sbb
add
lods
jno
outsl
dec
mov
add
ret
jne
mull
nop
fdivrs
pusha
cld
xchg
xchg
xchg
push
xchg
push
out
jmp
cltd
add
int
decl
sahf
sahf
xor
fiaddl
dec
push
mov
mov
xchg
jmp
jb
push
rcl
imul
jecxz
xor
neg
insb
fsub
fmul
enter
adc
pop
pop
test
or
mov
nop
mov
sbb
cmp
fs
and
out
add
sub
mov
xor
les
mov
dec
nopl
std
sub
std
cld
sbb
cmpsb
mov
mov
mov
or
xchg
inc
cmp
stos
cs
cltd
xchg
popf
push
pop
mov
imul
mov
test
cmp
hlt
mov
fidivl
pop
stos
clc
bound
inc
jle
inc
xor
mov
add
jno
jae
jns
adc
outsl
stos
dec
ds
stos
movsl
add
sbb
mov
sbb
mov
xchg
pop
fimuls
jge
mov
cmp
imul
mov
pop
sub
es
fnstsw
jmp
xor
lcall
dec
mov
xor
lds
call
jne
test
jecxz
inc
or
test
jmp
and
fistl
inc
xchg
scas
dec
jl
push
xor
push
mov
addr16
xchg
lods
rcrb
mov
call
scas
jecxz
inc
xor
dec
loope
ret
inc
loop
dec
sub
cmpxchg
mov
mov
pop
jbe
sahf
inc
inc
xchg
or
out
mov
out
ljmp
xchg
add
inc
sbbl
mov
jno
dec
aaa
mov
std
rcl
rcr
dec
leave
xor
inc
ja
pop
lea
and
imul
mov
gs
xor
movsl
mov
sub
or
in
pop
in
mov
sub
jmp
jnp
xor
out
dec
sarb
data16
sbb
or
mov
cwtl
add
cmpsb
inc
fbld
cmp
popa
nop
or
pop
cmc
sbb
mov
mov
repz
sahf
xorl
cmc
or
imul
mov
decl
ret
ja
add
add
adc
outsl
add
dec
xchg
push
clc
dec
cmp
cmp
enter
mov
or
outsb
jb
cmp
stos
or
in
mov
mov
mov
outsl
fstl
insl
dec
mulb
jg
loope
fsubrs
push
jo
jbe
inc
out
std
sub
test
lea
outsl
cmc
fistpl
jae
cwtl
lea
mov
movsl
push
mov
push
sub
and
stos
jmp
or
xor
insl
xchg
mov
jl
rcr
mov
dec
push
rorl
add
push
xor
pusha
repnz
push
ret
or
pop
sbb
pusha
xor
addr16
dec
add
pop
ret
dec
and
in
and
jp
dec
mov
cmpb
sub
or
lret
pop
pop
fsubrp
das
inc
mov
jno
cmc
push
fs
pop
inc
call
fwait
mov
cwtl
stos
rcll
sbbl
mov
out
push
cltd
insb
scas
sbb
repz
mov
sub
dec
es
ds
or
sbbl
scas
fisttps
fdivs
ret
out
lea
icebp
test
scas
nop
adc
jae
jo
dec
push
push
pusha
daa
call
cmp
mov
adc
add
fnop
pop
inc
cs
xorb
je
test
push
xor
push
je
inc
dec
lahf
inc
cld
das
xchg
pop
lea
inc
insl
lods
shl
pop
pop
mov
or
and
fidivrl
and
push
and
idivb
stc
test
div
xor
add
cmp
lret
jle
or
fdivl
push
xor
leave
inc
jns
mul
das
cs
scas
daa
dec
sub
jbe
xchg
xchg
cmp
loopne
mov
sbb
cmp
push
js
call
dec
mov
adc
fwait
out
test
cmp
fadds
inc
dec
iret
sarl
adc
fnsave
mov
mov
pop
dec
mov
jp
shrb
cs
imul
cmc
push
or
and
pusha
cmc
mov
pop
jo
movsl
add
out
stos
in
or
loopne
jnp
movsb
xor
nop
int3
sbb
cld
dec
inc
aaa
dec
mov
repz
sub
pop
xor
loop
je
data16
fldcw
sub
cmp
scas
sub
jae
adc
iret
test
imul
xor
lods
sbb
cltd
ror
push
adc
mov
jnp
sbb
xchg
std
hlt
pop
dec
addr16
sbb
xor
push
jae
inc
mov
fs
sbb
jne
mov
subl
sbb
jle
orb
mov
mov
loop
repnz
cli
aas
xchg
adc
push
pop
add
sbb
rolb
add
je
fs
inc
inc
mov
lods
scas
dec
iret
stc
jb
inc
jecxz
and
fsubs
cmp
cmpsb
jg
xlat
jle
ds
popf
adc
adc
jno
cltd
in
jns
sbb
push
push
mov
dec
imul
movsl
int3
sub
sub
stos
test
sahf
dec
pop
mov
mov
dec
xchg
lcall
pop
rorl
push
dec
rcll
push
lds
or
jno
ret
xchg
cmp
adc
aas
int3
rorb
fisubrs
ds
enter
mov
std
jns
push
loopne
push
ja
cmp
lds
mov
iret
sbb
pusha
sub
add
ret
mov
adc
pushf
mov
xor
in
ficomps
gs
cmp
mov
xor
outsb
test
scas
orl
pop
jo
adc
jp
shll
pusha
stc
test
mov
aam
dec
push
inc
mov
push
sub
dec
and
fwait
adc
dec
pop
std
sbbb
rorl
rcrl
or
leave
push
leave
adc
je
push
mov
jle
cmp
movsb
ja
pop
jecxz
jbe
and
scas
jle
adc
scas
lret
gs
adc
xchg
popf
mov
xchg
shl
jmp
outsb
popa
cmp
outsb
and
xor
cmp
ds
ret
repnz
ss
or
mov
dec
and
xchg
add
inc
inc
xchg
dec
or
cmp
subb
ret
enter
sti
inc
rolb
mov
clc
lods
xchg
cs
mov
xchg
dec
repnz
imul
xor
xchg
add
dec
push
cmp
in
fsubl
inc
call
stc
push
stc
mov
movsl
in
idivl
je
mov
push
adc
xor
xchg
jmp
and
daa
ret
outsb
sbb
fs
repnz
jne
cmp
stc
sti
bswap
add
pop
cld
dec
xchg
sub
neg
sbb
and
push
cli
xchg
mov
and
mov
int
pop
or
out
scas
lods
add
mov
dec
dec
jo
js
xor
mov
shr
mov
shl
pop
jle
jmp
push
repnz
fldl
out
aad
or
dec
addr16
icebp
jl
cwtl
xor
aas
ja
aaa
push
call
rol
pushf
pop
inc
xchg
loope
popw
pop
xchg
mov
leave
enter
in
adc
sub
or
adc
movb
ljmp
add
dec
into
lock
lret
sbb
cld
mov
fdivl
in
mov
xchg
sub
mov
jg
movsb
ss
xchg
mov
mov
iret
sbb
mov
aaa
sbb
fcoms
xor
push
adc
fstl
add
or
repnz
xor
pop
ret
jg
pop
fcoml
pop
dec
aam
or
shrl
pop
push
sarb
mov
fiadds
inc
out
and
dec
sbb
jmp
test
and
add
cmpsl
or
push
xlat
and
lds
jno
mov
and
in
dec
lea
pop
dec
in
dec
outsl
data16
cmp
xor
ret
dec
ja
lret
push
dec
pop
mov
aaa
adc
sbb
gs
in
cmp
imul
cmc
in
sbb
imul
dec
in
sub
outsb
outsb
push
push
push
and
in
lods
dec
popf
mov
negl
push
push
in
jge
mov
mov
call
adc
movsl
push
jno
xor
pushf
imull
push
cmp
push
adc
daa
push
and
xor
cmp
repz
pushf
lock
add
stc
leave
xchg
jg
and
aaa
mov
iret
cmp
gs
cwtl
sahf
ja
xor
gs
add
dec
or
adc
cmp
push
pop
and
sbb
inc
arpl
mov
stc
shrb
hlt
jae
aaa
cmp
stos
inc
int3
sbb
repz
jbe
add
mov
or
call
in
dec
jle
dec
fidivrl
jl
push
lods
out
sarb
test
or
outsb
and
not
jge
inc
pushf
jbe
shlb
negl
ret
dec
lea
inc
jmp
fstpl
jecxz
xchg
daa
lods
jp
aad
outsl
mov
jmp
enter
sub
sub
inc
pop
dec
scas
add
ss
and
mov
add
insb
test
aad
rcl
push
outsb
bound
xor
test
mov
call
lock
sbb
jg
jbe
adc
fs
lret
sbb
lret
lret
cmp
test
xlat
push
dec
xchg
cmc
mov
pushf
xor
pusha
and
inc
or
xchg
out
leave
outsl
inc
pusha
adcb
dec
cmp
sub
and
fmull
xor
sbb
mov
lock
mov
cli
mov
fisubrl
or
aas
cwtl
add
les
jmp
shlb
call
popf
jnp
ds
fnstenv
jns
or
aam
sub
adc
es
push
xor
cs
xor
fldcw
lock
adc
cltd
out
sbb
dec
loopne
imul
add
std
xor
mov
push
adc
add
ja
xor
xchg
rcrl
lods
mov
andb
sub
dec
pop
int3
sbb
ja
mov
fisubrl
cmpsb
loopne
and
cs
stos
enter
xchg
inc
push
rcrl
pop
jo
mov
popf
jo
call
pusha
xchg
in
popa
movsb
cmp
push
cld
jmp
andb
mov
pop
mov
xchg
mov
dec
insl
inc
sbb
addr16
jns
imul
in
movsl
pusha
ficompl
mov
std
jle
mov
cmp
loop
mov
pusha
idivb
roll
loop
push
xchg
outsb
cs
sub
dec
mov
cmp
bound
xchg
aas
js
lahf
ror
popf
std
lahf
jbe
loop
fistpl
jl
insb
adc
bound
scas
push
mov
jae
pop
mov
pusha
add
add
into
bnd
test
dec
sbb
xor
inc
cmpsl
pop
jo
imul
dec
insb
sbb
fdivs
mov
ds
into
sbb
stc
xchg
js
or
stos
mov
fdivrl
fiaddl
xor
add
in
and
mov
or
mov
mov
xchg
xor
push
insb
insb
rcr
cmpsb
mov
add
mov
mov
mov
mov
mov
mov
ret
shr
pop
xchg
int3
dec
xor
cltd
mov
dec
jns
fwait
xchg
mov
pusha
jl
daa
icebp
std
call
mov
lods
lods
push
movsb
xchg
xor
push
cltd
inc
inc
push
out
loop
in
cmpsb
xor
stos
cmpsl
ja
insb
sub
insl
adc
pushf
mov
std
cmp
imul
jmp
mov
sub
ret
rorb
gs
pop
mov
or
sub
mov
faddl
shll
push
push
sub
das
adc
loopne
cmc
sbbl
ljmp
addb
add
mov
pop
pop
ret
jle
out
jbe
orl
cmc
mov
sub
mov
popa
or
adc
mov
pop
sub
push
imul
push
xor
mov
cmc
sbb
aam
pushf
imul
jle
mov
xor
fmull
negl
pop
mov
dec
sbb
or
jnp
out
cmp
lret
pushf
int
idivl
inc
mov
xchg
adc
pop
mov
mov
xor
jge
sub
jecxz
xlat
dec
cli
xchg
mov
mov
adc
adc
cld
xor
pop
xchg
adc
stos
mov
jno
mov
sbb
mov
lea
adc
mov
push
push
sub
push
movsl
adc
dec
cltd
jno
out
popa
mov
es
mov
mov
fcomi
bound
mov
sbb
sub
mov
lea
lret
jl
cmp
xor
xor
xchg
cli
outsb
pop
pusha
repz
aaa
jl
cmp
mov
sahf
rcrb
icebp
scas
cmp
and
cli
pop
mov
clc
movsb
push
inc
xlat
mov
push
mov
ja
js
add
lods
popa
test
dec
fcomps
fnstsw
and
push
dec
clc
std
imul
test
cltd
aaa
popa
andl
sbb
and
mov
imul
push
mov
movsl
mov
sub
movsb
orb
or
lret
sub
mov
jp
stos
push
push
mov
mov
jmp
xor
sub
adc
mov
cld
mov
stos
movsl
mov
xchg
sarb
pop
aas
ja
add
sbb
enter
xchg
shll
mov
test
dec
sahf
cli
pushf
adc
xchg
mov
in
jge
jb
sbb
mov
xor
fmull
jae
stos
or
jp
ss
pop
or
mov
mov
xchg
jne
call
ror
mov
nop
mov
mov
mov
mov
sub
outsb
lea
adc
xor
pushf
lea
lods
in
pop
das
jno
ljmp
daa
and
or
flds
mov
ret
lcall
jae
or
popf
xchg
xor
insl
test
enter
stos
mov
stc
out
lods
iret
push
lahf
cmpsb
mov
push
mov
jno
testb
dec
dec
cmc
addr16
cmpsl
lock
jae
stos
pop
and
adc
mov
mov
xchg
xlat
jmp
cmp
xchg
jmp
mull
xchg
jnp
loop
mov
dec
sbb
mov
lret
nop
fucomip
lcall
in
mov
ret
inc
mov
sub
jge
push
mov
jns
push
jno
repz
push
mov
xchg
movlps
fbstp
jmp
hlt
xchg
aas
or
out
std
jmp
sti
out
sub
adc
fsub
and
and
adc
xchg
mov
loopne
mov
fcoms
add
lods
and
aam
sahf
jle
mov
push
lahf
rcl
adc
dec
sbb
pop
pop
int
pop
xlat
jb
inc
dec
outsl
divl
xchg
jmp
ret
jo
and
in
jge
int
mov
xor
and
mov
cmpsl
out
pop
into
scas
loop
push
cltd
dec
cmp
sub
add
bound
and
jp
ljmp
jo
imul
xor
movsl
push
push
sub
mov
lock
sbb
sahf
ret
filds
mov
cld
adc
cltd
cmpsl
fadds
mov
cmc
in
mull
add
xchg
jns
sub
adc
sub
cmp
sarb
sub
or
and
data16
hlt
pusha
sbb
pushf
nop
aas
mov
cltd
adc
add
mov
out
adc
sub
and
and
and
dec
sbb
or
cmp
repz
and
lods
cmp
sub
fstpt
or
xlat
test
jne
ret
mov
imul
cmp
mov
cmp
xor
mov
mov
push
loop
fucomp
movsb
je
lcall
lahf
mull
xchg
and
jae
inc
in
aad
xchg
push
pop
std
jbe
mov
mov
scas
lods
hlt
sub
cmp
xor
and
jns
pop
lret
mov
cli
jmp
cmpsl
pop
xchg
ret
aad
mov
mov
cld
push
pop
loopne
push
stos
rep
lea
data16
push
and
or
shlb
push
pop
cmpsl
cmc
and
addr16
cmp
mov
pop
fmull
test
pusha
jbe
lds
mov
decl
push
int
mov
mov
test
jo
mov
movsl
bound
repnz
or
pop
movl
sahf
sub
loop
jnp
cs
int3
xor
sbb
orl
jmp
repz
testb
std
xchg
push
int3
pop
add
jnp
and
xchg
xchg
pop
out
sub
mov
add
and
xor
in
xor
cmpsl
test
push
scas
pop
add
outsb
inc
ds
jmp
popl
xor
cwtl
or
ljmp
pop
outsl
jl
mov
xchg
add
push
xlat
mov
call
pop
mov
pop
ficoml
xchg
sbb
xchg
mov
cmpl
fiaddl
popa
pop
or
mov
or
outsb
and
jecxz
mov
jno
scas
sbbb
aad
iret
push
cmpsl
cli
mov
and
ret
lods
jae
inc
outsl
cmp
orl
popf
dec
das
mov
push
ds
hlt
mov
loop
cmp
data16
dec
cmc
inc
outsl
or
mov
lds
out
or
call
sahf
lds
addb
xlat
movsl
scas
jno
cld
mov
icebp
add
sbb
push
jmp
scas
pop
xor
sbb
outsl
lret
mov
mov
scas
pusha
aam
xor
cltd
scas
mov
push
das
lds
inc
dec
sub
scas
cmpsb
ret
pop
fists
sbb
xchg
xor
movsb
mov
dec
jae,pt
fdivl
mov
pop
jae
mov
insl
loope
fistpll
lds
jge
aaa
loop
rorb
call
lret
icebp
xor
jl
ret
pop
clc
movsl
xor
test
je
lds
mov
mov
cmc
outsl
sti
subl
xor
jae,pn
mov
xor
insb
add
std
es
cmp
add
pop
push
rolb
push
jno
and
das
shrl
mov
imul
xchg
xor
xor
adc
mov
mov
cmp
outsl
xorl
repnz
testb
sbb
icebp
mov
cmp
xchg
xchg
int3
jo
and
sub
lret
bound
ljmp
std
loope
xor
push
sahf
sbb
mov
pop
adc
adc
mov
xchg
decb
in
scas
xor
or
adc
out
in
fsubs
sbb
das
pop
stos
dec
popa
cmpsb
adc
iret
iret
je
mov
sub
pop
jmp
add
test
dec
mov
xchg
in
fs
cmp
testb
jmp
mov
sub
add
jbe
mov
pop
stc
xchg
movsl
enter
aas
cmpb
dec
dec
fs
cmp
ja
pop
andb
push
pusha
mov
xor
push
xchg
or
and
mov
ret
data16
jecxz
push
and
pop
fucomip
pop
jns
jle
pusha
ud1
push
test
nop
int
enter
jge
sbb
sub
push
jg
push
mov
scas
mov
orb
push
cs
add
xlat
sub
cmpsl
imul
jne
mov
adc
je
hlt
in
pop
or
gs
inc
sbb
xorl
xor
test
aad
push
mov
roll
in
addr16
movsl
cwtl
pop
pop
pop
pushf
scas
loope
and
movb
fsubr
pop
ret
ljmp
push
pop
dec
and
pusha
jo
out
imul
sti
cmp
mov
and
cwtl
daa
cltd
and
aam
cwtl
inc
jge
jecxz
js
cltd
dec
fnstcw
or
lcall
iret
jmp
into
add
pop
dec
inc
in
jle
cli
negb
add
fimull
out
scas
cs
add
xchg
pop
js
inc
mulb
cmp
stos
xchg
pop
dec
inc
shlb
jp
push
pop
loop
sbb
mov
cmpsl
aam
lods
push
push
arpl
inc
into
or
push
dec
sarl
jae
in
popa
and
in
fs
mov
fists
xor
aad
inc
lahf
dec
mov
inc
stc
lock
fmul
movsl
xor
jp
or
cltd
adc
pop
mov
add
mov
movsl
inc
stc
pop
ja
sbb
adc
xor
call
gs
inc
push
outsl
mov
cmp
xchg
push
cltd
jne
cltd
adc
daa
or
jns
aas
xchg
adc
jb
inc
sbb
out
mov
xor
pop
daa
mov
xor
sti
scas
sub
xchg
ret
cmp
jmp
mov
pushf
dec
or
cs
loope
mov
nop
pop
or
icebp
dec
dec
lods
push
mov
push
lret
push
arpl
sub
sarl
hlt
cli
shl
adcb
mov
jo
cmp
sub
mov
aas
xchg
jo
sub
mov
xor
ds
clc
rclb
mov
imul
loope
pop
insl
xlat
adc
sti
mov
jbe
inc
ficoms
xchg
pop
lret
jmp
movb
mov
push
data16
in
adc
out
pop
jmp
ja
xor
inc
inc
jmp
or
sarl
pop
negb
sbb
shrl
and
out
enter
mov
xchg
movsb
inc
add
push
xor
inc
mov
into
mov
inc
or
mov
lods
or
xchg
or
sub
jmp
icebp
push
adc
mov
cmpsl
or
jo
inc
mov
inc
imulb
aas
mov
sub
pminsw
sti
and
fdivs
xor
out
out
insl
jns
fsubr
lret
xchg
jle
mov
sbb
add
adc
push
push
dec
shll
sbb
inc
stos
in
cld
lahf
sbb
imul
sbb
jle
lcall
es
xchg
bound
setp
xchg
jge
pop
movsl
clc
jo
push
mov
and
fmull
adc
into
push
fistpll
adc
mul
loopne
push
pop
es
dec
aaa
popa
adc
mov
or
lock
xchg
sbb
lock
xchg
or
ljmp
pop
test
ds
clc
mov
bound
cmpl
cmp
jp
inc
xchg
jle
push
sbb
or
idivl
xlat
mov
in
adc
mov
sub
sbb
jge
shlb
lock
ja
sbb
push
push
outsl
push
lcall
or
repnz
cmp
lret
mov
repz
or
cmp
call
clc
add
xchg
push
icebp
test
daa
imul
testl
arpl
cltd
lret
cmp
push
imull
fstpl
dec
js
ljmp
inc
mov
dec
fisttps
out
scas
mov
jl
xchg
cwtl
push
jns
nop
data16
add
inc
gs
stos
cmp
inc
ffreep
pop
aam
mov
or
pop
mov
adc
jo
lds
inc
lret
ret
or
add
push
in
and
fs
and
inc
dec
cld
movsl
mov
out
mov
jbe
pop
push
ret
out
inc
out
and
in
inc
sub
scas
shrl
int
repz
test
outsl
scas
xchg
das
mov
dec
aaa
test
inc
mov
in
inc
sbbb
or
cmc
or
add
in
ret
xorb
and
push
icebp
loopne
mov
cmpsl
pop
jl
movsb
mov
mov
aam
sbb
xor
xchg
sub
adc
aaa
fiaddl
adc
cmpsl
movsl
adc
jmp
orl
cmp
inc
popf
mov
das
xor
std
fisubs
in
mov
jo
pusha
popf
dec
ds
mov
ja
and
adc
lret
push
cmpsl
push
scas
jnp
inc
jmp
out
mov
mov
inc
idivb
jl
xor
test
fs
ljmp
add
sti
xor
inc
scas
lock
into
sub
cmp
iret
or
xor
test
sbbb
scas
sbb
inc
push
xlat
stc
mov
cmp
mov
sub
mov
sub
sbb
mov
shl
or
sarb
and
dec
push
sbb
nop
popf
push
sub
js
mov
loopne
clc
jmp
neg
push
push
jnp
mov
adc
call
mov
jecxz
jb
or
outsl
fsubr
cmp
and
xchg
scas
or
inc
sbb
inc
stos
orps
dec
mov
xor
mov
gs
lret
cmp
loopne
mov
shll
jns
push
int
xchg
aas
add
mov
lods
mov
jl
push
pop
pop
popf
xchg
xchg
cmp
xor
inc
movsb
push
pop
xor
xchg
inc
sbb
or
ud2
jecxz
mov
jb
movsl
sbbl
mov
cmp
mov
mov
xor
inc
inc
cmp
inc
push
ja
cmpsl
push
push
mov
xchg
sti
insb
rorl
testb
fcomp
mov
pinsrw
insb
dec
and
call
mov
xchg
inc
pop
lahf
xor
fbstp
pop
cmp
dec
mov
and
shrl
pop
jecxz
sti
mov
jno
nop
les
xor
test
adc
repz
xor
shr
scas
ss
push
xchg
and
es
mov
loopne
std
mov
xor
fstpt
mov
xchg
mov
aaa
mov
aas
in
sub
pop
adc
mov
xchg
adc
js
insl
out
lret
ljmp
dec
add
fisubl
sbb
popf
das
aad
lcall
push
inc
jle
les
xlat
xor
sub
push
cmc
mov
adc
je
andl
out
and
movsb
in
mov
int
cld
sti
pop
outsl
sub
dec
and
adcl
add
bswap
ficompl
mov
push
rcll
xchg
mov
or
cmp
jl
mov
hlt
sbb
cmp
mov
dec
lret
inc
dec
test
push
adcl
into
icebp
adc
pop
or
nop
aas
mov
sub
out
dec
cltd
loopne
es
loopne
addr16
rol
test
inc
fisubs
sub
push
mov
aas
add
xor
bound
or
cmpsb
cld
sbb
xor
inc
sbb
sbb
cmp
and
fistpll
out
cmpsl
andl
mov
jbe
popa
lahf
jmp
mov
das
arpl
imul
and
cmp
cmpl
les
fsubr
icebp
and
iret
push
push
out
je
das
repnz
out
gs
sti
dec
mov
cli
loope
aam
push
jp
mov
cld
jg
test
mov
lret
sbb
push
scas
lods
mov
push
cmp
mulb
sbb
popf
rol
inc
push
lods
or
xchg
inc
mov
adc
cmp
int3
shr
jnp
popa
mov
sub
imul
jl
aaa
add
adc
adc
out
xchg
or
jae
ret
loope
arpl
daa
add
aaa
inc
push
pop
jo
inc
cmp
rolb
je
dec
lds
cwtl
xchg
push
mov
insl
mov
les
mov
sbb
mov
call
repnz
mov
icebp
and
mov
fstl
loope
or
popa
out
add
mov
dec
sub
dec
jae
fisubrl
pop
mov
mov
adc
pop
adc
push
cld
arpl
push
mov
xchg
rcl
js
sahf
dec
call
adc
lock
les
out
xchg
jp
daa
xor
les
loope
or
pop
test
jl
clflush
mov
sarl
int3
dec
roll
push
cmp
sbb
dec
or
fisubs
and
subl
hlt
dec
xchg
int3
daa
mov
xor
jb
inc
push
in
lahf
jo
sub
jmp
adc
cwtl
pop
out
sbb
cli
iret
pusha
outsb
and
and
xchg
outsb
icebp
fld
mov
out
scas
call
test
fs
adc
pop
mov
jecxz
fidivrs
sti
jno
or
mov
roll
sbb
xor
lahf
dec
adc
aad
das
inc
mov
inc
xchg
pop
inc
sbb
in
popf
cmp
xchg
sti
imul
lods
fisubrl
jg
mov
jle
sub
xchg
cld
jno
stos
and
mov
mov
dec
cmp
push
hlt
lods
sbb
push
popf
out
lea
and
sub
push
bound
lea
sub
leave
or
mov
addb
jg
sub
loop
cltd
xchg
inc
iret
jo
adc
stc
xchg
push
and
cmpsb
jmp
in
mov
cld
jo
sahf
aam
rclb
jns
ljmp
push
and
lcall
notb
push
rcrl
ss
sub
xlat
push
mov
xchg
lret
imul
push
lret
sbb
lret
xchg
xchg
sbb
or
and
loopne
jae
dec
pop
xchg
lcall
in
movl
outsl
sarb
cs
push
outsl
iret
icebp
sbb
cmpb
sbb
push
fcoml
jl
fstl
mov
adc
and
mov
sub
and
sub
icebp
or
push
dec
add
stc
sub
jnp
jp
mov
loope
lcall
fsubs
repz
xor
add
das
or
pop
pop
pusha
pop
jns
adc
mov
inc
lret
jge
pushf
cmp
shll
test
xchg
daa
cmp
lret
inc
in
je
stos
xor
cmpsl
jbe
push
leave
mov
xor
push
xchg
ja
mov
js
sti
clc
mov
adc
or
jle
xor
xchg
scas
cmp
jecxz
pop
add
xorl
sub
ds
mov
in
pusha
adc
sti
jmp
nop
adc
jbe
call
mov
pushf
testl
jp
sub
or
jbe
das
enter
cld
aam
mov
stos
jge
ja
mov
addb
icebp
sub
push
popf
in
jo
jb
jae
es
mov
sti
inc
int
out
shll
loopne
push
mov
mov
pop
mov
repnz
jp
cmovp
adc
lret
xchg
dec
les
loopne
push
out
gs
pushf
gs
icebp
mov
cmp
insb
and
sahf
insb
xor
gs
mov
rclb
ret
xor
iret
movb
cmp
pop
push
int
cli
push
enter
cmp
orl
dec
xor
shlb
sub
jne
pop
sub
cmpsb
test
add
or
fisubs
nop
sbb
loopne
into
sbb
xor
inc
and
mov
pop
cs
repz
aas
xchg
jp
jo
test
mov
sahf
sub
add
addl
mov
in
lret
mov
shrb
lods
jp
popa
and
int3
fisubs
cmpsb
loopne
adc
lahf
enter
inc
lret
int3
mov
xorb
and
cmpsb
jecxz
int
ss
outsb
adc
sbb
test
js
popf
jl
loopne
jo
mov
fisttpl
lods
enter
in
ss
or
shl
stos
adcb
icebp
dec
mov
jmp
push
pop
ljmp
rclb
adc
nop
mov
pop
pop
into
fdivr
aaa
arpl
xchg
dec
xchg
je
out
outsl
and
orb
or
jmp
mov
and
inc
xchg
add
sub
pop
sub
fcom
inc
jecxz
insb
sub
push
call
mov
sarb
cli
je
dec
shlb
nop
in
adc
loop
into
xchg
cmpb
enter
fnstsw
mov
pusha
insl
movsb
dec
mov
pop
dec
sub
cmp
add
dec
sbb
push
or
cwtl
jmp
sub
aaa
sub
mov
iret
lret
clc
clc
mov
dec
pop
popf
pop
movsl
sbb
cmc
or
dec
add
shrb
aad
insl
mov
fdivrs
fldcw
lods
push
jecxz
cmpsl
and
or
mov
rorl
xchg
xchg
push
ds
loopne
and
sub
rcrl
add
sub
dec
and
adc
jb
scas
jp
mov
and
lcall
inc
pop
shl
dec
pop
aas
mov
enter
xchg
and
mov
adcb
je
ja
negb
iret
call
data16
in
seta
jle
sbb
addb
icebp
incl
into
lcall
cmc
sbb
or
insb
cltd
test
pop
jle
outsl
xchg
or
jp
cmpb
push
jae
mov
xlat
pop
repz
andl
subb
add
adc
dec
ficompl
fnstsw
pop
fmull
mov
popf
and
mov
or
frstor
in
lahf
pop
inc
xchg
sbb
aaa
dec
dec
push
lods
fs
xchg
loopne
mov
outsl
jns
dec
pop
push
ss
dec
sbb
sbb
jae
inc
stos
scas
xchg
stos
jge
mov
divb
push
imul
inc
out
push
jg
addr16
cmpsl
mov
add
call
mov
xlat
in
loop
in
or
mov
fst
addr16
inc
or
in
push
push
jne
arpl
jo
les
push
cli
adc
and
jae
dec
and
test
aad
jae
and
sbb
fmull
icebp
add
adc
or
cmp
test
mov
lret
cwtl
add
mov
sbb
and
xor
jp
or
in
pop
add
xchg
jb
xchg
lahf
loope
jbe
push
rorb
jne
popa
inc
cwtl
and
ja
rcll
lock
mov
movsl
negb
or
lods
cmpsl
and
and
mov
or
cld
adc
push
cmc
nop
icebp
sub
mov
insl
xor
inc
fxch
mov
loope
push
rcrb
dec
clc
pop
xor
je
imul
arpl
dec
leave
pop
add
stos
add
sub
mov
push
lea
xchg
jne
mov
jb
pop
and
and
rcl
dec
sbb
sbb
das
and
sbb
data16
add
cmp
sbb
xchg
js
andb
inc
adc
shl
xor
pmulhuw
cmp
mov
push
pop
xchg
mov
cli
xchg
enter
sub
xchg
lods
shll
sbb
out
adc
test
mov
dec
out
lcall
or
ret
in
inc
mov
nop
push
xchg
mov
push
cmpsb
pop
test
clc
sti
jb
add
sbb
jmp
sbb
jg
mov
rcrl
mov
mov
xchg
jle
xor
fnsave
cmp
push
mov
dec
or
shlb
das
jbe
xor
jns
mov
nop
adc
enter
shll
jge
xchg
sub
pop
sub
sbb
cmpb
aad
jl
adc
xor
mov
test
cmp
ja
stos
in
jae
pop
movsl
push
cmp
mov
ja
pop
int
sub
pop
cwtl
or
sub
jo
outsl
cwtl
scas
pop
ss
push
inc
or
inc
std
jne
andl
adc
movsl
mov
dec
xchg
push
mov
mov
movsb
lahf
mov
insb
pop
daa
adc
xchg
xlat
movl
push
mov
xor
rol
out
arpl
push
lcall
and
dec
push
stos
out
and
cmp
push
xorb
mov
fs
or
xchg
movsl
mov
mov
rcll
lea
insl
repnz
test
and
adc
mov
push
mov
inc
jmp
lds
dec
ror
pop
xchg
mov
lret
push
lods
ficomps
movsb
mov
pop
notl
bound
out
cmp
fsubrs
mov
rorb
and
cmp
out
std
mov
push
push
or
cmpsb
jecxz
push
push
ds
jb
subl
mov
stos
aam
push
lahf
test
jle
jmp
xchg
xor
mov
pop
cltd
pop
sbb
ja
imul
stc
or
mov
pop
push
aas
xchg
stos
inc
dec
pop
xchg
xor
aas
clc
cwtl
mov
loop
rcll
int3
int
inc
push
outsb
push
push
fwait
dec
cmpsb
xchg
daa
ficoms
adc
jle
adc
out
or
aas
xchg
mov
push
rcrl
aas
jnp
jecxz
sbb
arpl
gs
int3
ss
cmp
add
jns
xchg
jge
movsl
or
pop
mov
dec
inc
and
pop
in
scas
jl
jb
and
inc
in
jno
data16
stos
cmpsb
cmp
sbb
out
adc
xor
jae
dec
add
push
rorl
pusha
fsub
addb
inc
rclb
shl
pop
mov
sub
xor
cmpsl
scas
cli
cmp
sub
cltd
iret
nop
je
mov
and
mov
inc
lds
xchg
pop
sbb
jne
mov
fimull
aam
mov
inc
gs
sbbb
cmpsl
jnp
xlat
mov
add
mov
mov
inc
xchg
mov
imul
mov
mov
dec
je
xor
adc
or
mov
es
add
icebp
std
sti
out
adc
or
cmp
lret
xor
cmc
push
adc
sbb
sbb
lea
pop
pop
adc
inc
mov
mov
outsb
nop
pop
rcll
and
mov
dec
add
out
jb
mov
jae
mov
push
mov
and
sbb
xlat
iret
repnz
rcrb
leave
add
jmp
in
mov
add
andl
repnz
dec
cmp
nop
xchg
jne
std
or
cmp
xchg
int
or
sbb
add
std
loop
and
jns
pmaxub
mov
fs
fwait
dec
leave
lahf
xor
mov
jmp
enter
js
mov
push
test
loop
push
pop
mov
pop
test
mov
aad
or
xor
outsl
cmp
arpl
loopne
insl
mov
pusha
xlat
push
jnp
daa
inc
repz
xchg
push
adc
add
mov
nop
mov
arpl
pop
fwait
rcll
dec
repnz
les
sbb
cs
fsubrl
iret
adc
enter
scas
sbb
loope
xchg
loope
repnz
jae
sbb
negl
mov
sbb
mov
mov
arpl
scas
add
lret
dec
or
mov
ds
loopne
cmc
push
gs
movsb
test
mov
xchg
aad
and
xlat
mov
and
add
cmp
loop
jecxz
inc
push
or
pop
fsubs
cld
dec
mov
adc
test
mov
mov
out
jbe
sbb
dec
out
xchg
imul
in
pop
sbb
jg
sub
adc
add
in
loope
inc
push
lds
or
in
adc
fs
jbe
fcoml
mov
sahf
pop
lock
inc
xchg
shll
bound
pop
scas
fsubrl
mov
dec
dec
aas
mov
inc
sub
shll
jmp
mov
mov
adc
cmpsb
mov
push
inc
mov
mov
xor
aas
cmp
jo
push
fistpll
imul
dec
rcll
xor
sbb
icebp
sub
push
add
cltd
cld
in
fsubl
mov
inc
jb
fidivrs
or
mov
addr16
test
lret
ja,pt
mov
clc
gs
lds
and
js
dec
fnstcw
jo
popf
outsl
pop
xor
sbb
lds
lret
insl
cs
jbe
xor
adc
sti
push
mov
imulb
xchg
mov
int
into
mov
gs
addb
aas
daa
push
add
inc
imul
push
ja
test
outsl
mov
mov
xchg
xchg
loopne
lds
test
cmp
mov
clc
int3
cmpsl
bound
movsb
nop
sub
mov
xchg
scas
pushf
and
out
imul
xor
jb
cmpsl
dec
adc
jmp
xchg
in
ret
pop
jle
stc
sub
lock
push
outsw
stos
add
sbb
mov
shll
or
mov
in
movsb
xchg
cltd
popa
ljmp
idivb
into
xchg
xor
fisttpl
mov
loop
addl
test
lods
aaa
aas
stc
jge
jo
xchg
or
fstpt
lret
sti
call
inc
dec
lea
cmp
xchg
dec
clc
push
adc
adc
push
push
xchg
test
imul
jg
xchg
cs
jmp
cmp
mov
inc
or
sarl
pop
data16
xchg
lret
stos
cmp
sbb
mov
xor
pop
push
jecxz
pop
fisttps
and
sub
pop
ss
cli
cs
lcall
sub
cmc
mov
dec
addr16
pop
decb
pop
cmp
pop
out
sbb
fcmovb
shll
mov
mov
lea
or
sub
pop
mov
mov
icebp
repnz
ds
inc
push
pop
sub
push
mov
imul
aad
imul
mov
push
and
mov
ljmp
icebp
sbb
ljmp
and
lret
push
jge
xchg
cmp
ss
xchg
pop
inc
pop
aaa
sub
push
rclb
mov
mov
fwait
mov
mov
sbb
mov
lods
sub
shlb
xchg
mov
and
in
mov
and
and
cltd
ja
sub
imulb
leave
std
cmp
imul
movsl
ret
push
sub
jmp
mov
mov
adc
jg
pop
add
adc
test
sbb
push
jge
ret
roll
sbb
imul
inc
xchg
cmpsl
pop
and
dec
jae
sub
mov
push
stos
mov
jl
cmpsb
movsb
insb
dec
xor
fwait
adc
loope
stos
and
loopne
mov
add
fmull
insl
lahf
or
cmc
jmp
jge
je
into
jmp
lods
xor
jb
pusha
enter
test
popf
lock
jp
fistpll
mov
add
inc
mov
shlb
stos
lock
push
rolb
or
ljmp
jmp
sbb
cmp
and
push
ljmp
in
xchg
das
cltd
hlt
aam
adc
push
xchg
aaa
mov
cmpb
nop
xchg
lock
pop
gs
sti
js
push
dec
mov
cld
adc
lea
aas
jns
mov
iret
repnz
lahf
mov
sbb
mov
adc
mov
cmp
add
mov
mov
out
jae,pt
sub
inc
pop
int3
mov
xchg
mov
xchg
cmp
xorl
mov
or
aaa
xlat
je
ror
out
mov
xchg
mov
pop
int
pop
sbb
mov
or
and
push
addb
testb
movsb
cltd
fs
and
inc
arpl
push
cmc
test
or
lret
dec
or
sub
mov
mov
sbb
mov
sub
enter
jae
fs
repz
dec
mov
push
sahf
mov
arpl
xor
mov
and
sahf
out
repnz
xor
scas
movsl
iret
test
jb
test
jne
add
jp
mov
cmp
fstpt
adc
test
enter
sahf
jmp
ljmp
aas
js
mov
mov
fists
and
pushf
sti
xchg
mov
subl
mov
rcrb
mov
jns
lds
cmp
rolb
pop
mov
xchg
xchg
add
pop
xchg
sahf
call
popa
fdivl
idivl
cs
mov
jp
adc
push
xorl
push
xchg
loop
ljmp
pop
jl
cld
and
jnp
pop
fadds
pop
les
loop
pinsrw
scas
xchg
xchg
cmp
sub
xlat
fbstp
push
notl
mov
dec
js
arpl
pusha
dec
jg
int3
jnp
leave
add
in
xchg
ficoml
sbb
das
sbb
or
in
mov
loope
div
es
neg
repnz
sub
decl
push
out
pop
call
xor
arpl
stos
fisubrl
xchg
pop
iret
mov
mov
xchg
xchg
int3
xor
xchg
jno
ss
icebp
sbb
mov
ljmp
popf
cmp
xchg
popf
shl
add
inc
xor
mov
or
cmp
pop
push
pop
pop
push
inc
fmuls
cmc
xchg
and
in
mov
pop
or
pop
fisttpll
insb
cmpsl
mov
testb
pop
sub
lahf
cmpl
pop
mov
out
xor
out
and
mov
lods
mov
je
data16
lret
ret
cmp
sbb
aaa
test
cmp
add
and
outsl
lea
or
stos
and
cmp
push
mov
jbe
lock
mov
subb
ss
test
sbb
mov
or
push
int
mov
mov
push
sbb
cld
loopne
xchg
mov
add
nop
imulb
into
mov
aaa
movsb
pop
jb
pop
pop
test
js
pop
stos
dec
arpl
into
sbb
gs
and
jg
mov
dec
pop
orl
xchg
xor
in
cmc
dec
fiaddl
sbb
test
and
jnp
mov
and
mov
push
and
xchg
aas
loopne
das
xor
mov
xchg
xor
or
mov
or
lret
test
movsl
jmp
jg
xchg
xchg
jl
cmp
and
and
jae
call
lahf
add
fidivl
push
mov
shrl
jp
adc
and
jle
into
repz
jecxz
mov
lock
inc
daa
les
push
iret
xchg
out
pop
adc
xchg
pushf
cmp
mov
lahf
stc
mov
sub
cmpsl
mov
lret
push
pop
shl
push
mov
fnstsw
or
roll
or
loop
nop
aas
data16
and
out
cmpsb
fwait
test
dec
or
inc
dec
test
std
dec
ds
lds
push
xor
dec
inc
jecxz
bound
mov
push
cli
inc
pop
push
repz
mov
mov
cmp
xlat
adc
dec
das
cmp
mov
push
cli
ret
cmp
mov
inc
gs
mov
mov
sbb
mov
pop
or
ret
add
jmp
scas
sub
aaa
inc
jmp
mov
inc
push
rcll
jecxz
inc
adc
ja
sbb
or
jl
push
add
cmp
es
mov
fs
xor
mov
lds
push
sti
outsb
mov
mov
sub
icebp
and
shl
enter
ret
and
xor
daa
call
fbld
mov
call
inc
in
or
filds
out
in
dec
sbb
ss
aas
int3
fcmovnbe
xorl
sbb
mov
xor
jae
dec
cmp
cmp
ret
lock
and
or
aad
jne
sbb
mov
aaa
shll
push
orl
adc
insb
dec
xchg
push
rcll
adc
bound
fwait
xchg
pop
xor
or
scas
ret
movd
out
daa
inc
cmp
dec
ret
pusha
jae
push
mov
xor
sbb
jns
sbb
mov
sbb
pushf
pop
jb
les
aas
call
cltd
scas
mov
cltd
out
adc
call
push
mov
sti
inc
lahf
push
dec
in
aam
and
inc
dec
jg
mov
pop
push
cltd
outsb
ja
imul
mov
movsb
cmp
sti
scas
jp
mov
scas
push
mov
inc
psubb
jae
movsb
insb
mov
pop
imul
dec
sub
inc
xor
xchg
xor
or
loop
shlb
fidivrs
rclb
rorb
data16
push
xor
mov
xchg
into
cltd
cmp
cmpsl
fwait
cli
lods
in
adc
out
mov
in
rcll
xchg
push
mov
mov
outsb
ds
cmp
pop
idiv
push
pop
lock
pop
int3
int
push
inc
mov
hlt
lock
cmp
xor
sbb
adc
xlat
popa
xchg
imul
adc
addr16
cld
mov
lock
std
sbb
mov
in
cld
test
adc
rclb
xor
sub
add
lods
push
push
lods
xchg
jbe
inc
cmc
fistl
mov
mov
sets
aaa
mov
jnp
or
mov
mov
push
gs
xchg
xchg
push
out
imul
subl
sub
sbb
nop
stos
or
cmp
sahf
add
jge
lods
insb
pop
dec
test
dec
loopne
jp
add
lret
lcall
mov
xchg
inc
sbb
loope
mov
inc
test
js
mov
shrb
jae
movsb
add
mov
popf
jp
in
sub
mov
adc
mov
test
outsl
jl
or
push
movsb
call
cli
aam
addl
loope
mov
push
adc
cmp
repz
outsl
addl
loop
sarb
and
mov
fisubl
mov
or
into
pcmpeqd
ja
cmc
or
negb
pop
rol
pop
xchg
inc
xor
mov
shrb
sbb
xchg
adc
jg
or
xor
lock
mov
sub
cmp
and
and
call
arpl
cwtl
mov
sbb
sbb
test
loop
ret
mov
imul
add
lds
popa
mov
pop
xchg
cld
dec
inc
mov
mov
dec
sbb
js
sub
ja
test
cmp
bswap
xchg
jp
jo
in
add
je
aam
or
and
pop
es
cmp
inc
cmp
cltd
pop
and
rep
call
sti
cli
pop
cmc
xchg
xchg
xchg
into
cmpsl
rolb
movsl
mov
gs
enter
neg
push
pop
inc
inc
and
jns
mov
pushf
das
cmc
sub
fwait
inc
outsl
cmp
jp
sub
cmp
pusha
imul
int
push
xor
xchg
push
lret
cld
sbb
dec
je
cmc
aas
imul
pop
push
ret
es
jo
mov
scas
fcom
inc
stos
pop
das
insb
and
jbe
cmp
test
ficompl
adc
add
mov
into
cmp
cmp
dec
lcall
divb
hlt
push
sbb
mov
fwait
loope
xor
icebp
sub
test
sub
fistl
xor
in
inc
iret
lods
dec
lods
mov
lret
inc
xor
inc
repz
clc
mov
sub
jmp
mov
xchg
lea
fs
cmp
jmp
jle
bound
xchg
jg
xchg
mov
add
pop
pop
push
lahf
cld
cli
jge
sti
pusha
jecxz
cmpl
jo
gs
pop
daa
sub
jecxz
into
or
xlat
movsb
lods
test
mov
mov
xchg
cltd
cmpsb
ret
add
and
xchg
cmc
sbb
lret
adc
jne
lret
sbb
mov
rcrl
or
pop
pop
in
or
movsl
xor
cltd
xor
dec
repz
ja
cli
imul
in
pushf
enter
jmp
mov
mov
loop
enter
sub
push
les
adc
imul
xlat
mov
push
repnz
mov
push
xchg
pop
and
cmpsb
jmp
stos
hlt
jmp
jne
pop
jno
add
push
pusha
stos
mov
cmpsl
fs
xor
js
out
pop
inc
shlb
adcl
js
scas
rcrb
wrmsr
inc
sub
sti
mov
push
and
jecxz
and
outsl
sub
sbb
movsb
je,pn
subb
shrb
addr16
xchg
add
sarb
out
out
xlat
sti
mov
mov
lods
cmp
rcl
adc
out
sbb
push
push
pop
inc
mov
jnp
add
lods
mov
push
jg
or
jmp
lds
in
mov
or
cld
or
jmp
mov
add
jo
mov
pushf
xchg
and
sahf
insb
ss
pop
dec
xlat
icebp
and
inc
jo
rolb
or
addr16
and
ljmp
stc
dec
pop
mov
sbb
push
jno
mov
or
jmp
or
lds
cli
andl
add
lock
sbb
pop
scas
xchg
xchg
mov
cmp
mov
cwtl
shrb
shl
repnz
pop
test
cmp
loopne
xchg
add
mov
lods
sbb
cwtl
or
jb
in
mov
cmp
xchg
and
and
push
mov
cmpsb
pushf
or
dec
sarb
push
xchg
fnstenv
cmp
xor
xor
loopne
adc
push
in
xchg
pop
enter
aas
xchg
fcomps
jp
addr16
je
jecxz
add
mov
or
xchg
pop
fnstsw
andl
xchg
inc
fstps
test
repnz
mov
mov
dec
lods
mov
lret
pop
push
cli
jo
lock
adc
mov
out
xchg
jp
mov
add
mov
jae
jb
int
pop
rcl
jp
mov
aam
fmull
push
push
add
js
cltd
clc
adc
cmp
out
cmpsl
cmp
and
inc
sbb
iret
ja
adc
lea
dec
and
or
mov
pop
cmp
xchg
push
xor
mov
imul
test
movsb
es
sub
es
sub
imul
add
jnp
add
rolb
adc
rcr
xor
je
stos
mov
pop
jge
ret
ret
stos
pop
iret
inc
in
jnp
shr
pop
shlb
jns
pushf
mov
ss
mov
jmp
das
pop
pop
mov
mov
aas
jl
daa
fwait
add
mov
test
and
fimull
mov
xchg
pop
movb
ret
je
pop
jg
add
mov
cmc
popa
jl
mov
mov
fadd
push
sbb
adc
push
insl
call
out
and
inc
call
sbb
jne
jle
js
mov
fsts
popf
sub
sbb
sub
dec
shrd
mov
mov
or
mov
jnp
mov
out
inc
imul
in
sub
adc
dec
xlat
xchg
ja
inc
sbb
cmpsb
idiv
pop
pop
addr16
dec
cltd
cmp
insl
mov
push
mov
xchg
stos
icebp
and
loop
rorb
dec
jle
dec
stos
loope
sub
insb
cmp
push
insb
or
add
lods
cld
and
or
scas
mov
aaa
mov
cmp
mov
xor
loope
sbb
mov
fists
lret
xor
xchg
xchg
pop
and
mov
std
dec
outsl
negl
js
cmp
pop
xchg
or
stc
mov
sbb
mov
mov
inc
or
cmp
test
jns
js
fbld
sbb
lret
sub
or
loope
xchg
arpl
mov
nop
add
fcmovu
mov
inc
jle
aam
pusha
nop
lods
xchg
add
imul
jae
fcompl
inc
jnp
xor
cmpsl
sbb
xor
sbb
in
sbb
mov
push
sub
daa
mov
ds
push
imul
sub
lea
lcall
loope
inc
ror
pop
in
jb
lock
mov
test
jo
stos
mov
push
ss
fstpt
push
jbe
jge
arpl
fists
adc
pusha
xchg
nop
outsl
cmp
in
cltd
xchg
sub
mov
push
sbb
pop
or
mov
and
aam
or
stc
xchg
jbe
cmp
or
pop
sti
sub
aam
negb
insl
mov
cmp
inc
je
mov
icebp
mov
leave
into
inc
loope
jb,pn
fsubrl
pop
add
or
cmp
adc
push
bound
mov
xchg
mov
or
das
cld
clc
pushf
jmp
imul
jecxz
mov
fildl
in
pop
js
ds
test
xor
cmp
jbe
repz
sub
or
fildl
jl
push
les
icebp
mov
aas
jmp
add
fimull
clc
int3
adc
fisubs
testb
mov
sub
inc
inc
scas
clc
gs
mov
xchg
nop
mov
push
mov
out
push
repnz
lds
mov
mov
or
std
inc
lods
jo
mov
mov
es
cmpsb
jp
in
xchg
mov
stos
xchg
aam
push
cmp
or
lcall
imul
rorb
mov
add
ss
pop
nop
out
mov
add
pop
jne
mov
imul
fdivr
dec
inc
addr16
lods
sub
cmp
sti
push
cli
cld
nop
fs
inc
lds
out
sbb
into
push
lods
das
cld
and
or
in
lgs
adcl
pop
insl
push
cmpsl
sti
ret
shlb
mov
mov
sub
mull
mov
inc
lahf
or
mov
push
roll
ror
aad
or
fsubs
pop
xorl
push
mov
in
adc
gs
inc
pop
adc
out
sbb
out
xchg
leave
fsubrl
mov
movsb
inc
lds
pushf
or
daa
les
pop
push
ljmp
cmpsl
fdecstp
popa
movsb
jbe
lods
pop
cltd
pop
sub
mov
ljmp
movsl
push
lea
mov
jmp
push
and
xor
jbe
fcoml
insb
sub
addr16
int3
push
cmp
and
fisttpll
popa
push
dec
loopne
xchg
cmp
fdiv
outsb
xchg
dec
std
adc
push
pusha
adc
and
cmp
jge
xor
js
ss
imul
fprem1
add
cmpsl
dec
ret
stos
fs
test
and
ficompl
cli
sbb
adc
cs
cmp
in
cmp
fs
pop
jg
mov
xor
pop
mov
cmpsl
cmp
xchg
inc
mov
fildll
inc
sbb
cmc
and
or
add
dec
std
pop
pop
adc
push
mov
jne
jns
push
sub
add
mov
dec
or
loop
aas
hlt
cmp
xchg
lea
mov
or
pop
lret
mov
fisubrs
aad
ret
ljmp
flds
inc
mov
ja
jle
jp
repnz
inc
mov
sbb
inc
mov
pop
xchg
sub
cmp
pusha
test
gs
mov
repz
xchg
xchg
xchg
test
push
mov
ja
fdivrp
imul
fstl
out
fldl
es
sbb
out
xor
test
loope
pop
xor
push
nop
jp
andl
adc
xchg
or
fmull
inc
lcall
aas
mov
cmpsl
and
nop
int
mov
dec
dec
add
addr16
or
cli
add
test
leave
repnz
fsubl
into
pop
adc
inc
pop
adc
test
test
and
and
cmpsb
mov
dec
dec
out
xchg
clc
sub
push
xchg
notl
loope
icebp
mov
ss
xchg
fisubrl
mov
rolb
sub
and
gs
jle
mov
dec
fildll
adc
js
cmpsb
mov
addr16
into
repz
mov
jle
and
mov
dec
mov
das
test
xor
in
loop
add
push
jnp
arpl
outsl
cwtl
cmpsl
push
xor
stos
call
push
dec
lahf
in
mov
jmp
adc
mov
jp
scas
push
adc
push
add
mov
add
adc
pushf
push
mov
or
and
mov
jl
push
or
add
pop
pop
shr
cmpsl
ret
and
int
nop
xor
out
add
in
ficoms
mov
dec
mov
xor
add
loopne
repz
stos
jmp
sub
or
into
push
aaa
sbb
inc
clc
dec
rcrl
outsb
addb
push
xor
insl
cli
cmp
lods
stos
or
xchg
les
sbb
setg
dec
xor
cmp
cmp
sub
outsl
xchg
sahf
mov
cld
sbb
cmp
dec
push
cmp
pop
sbb
shrl
aam
call
xchg
sbb
ret
sub
in
inc
cmp
arpl
xchg
xchg
cmp
jbe
pushf
xor
dec
shrl
lret
add
mov
insb
ljmp
mov
pop
pusha
pop
inc
jl
dec
add
jne
fs
addr16
stos
mov
xor
jno
push
lcall
sbb
je
inc
jl
adc
adc
imul
inc
and
jnp
xchg
scas
cltd
inc
jne
ret
ja
int3
out
daa
mulb
push
fsubl
xor
shr
iret
mov
inc
mov
adc
test
fcoml
jg
cmp
sbb
lods
mov
sbb
imul
push
pop
je
pop
in
and
or
sbb
jl
fs
rol
push
mov
push
test
ja,pt
jns
jle
cltd
pusha
and
xor
out
xchg
inc
sahf
pop
fisttpll
jne
dec
inc
pop
ret
adc
mov
mov
dec
inc
jno
jp
xchg
sub
jae
ret
or
pop
test
leave
or
into
dec
pop
imul
cmpsb
mov
add
lock
inc
cmp
add
inc
pop
out
fisttpl
xor
jle
mov
out
and
arpl
sub
inc
jae
call
btr
les
cmp
stos
iret
jle
lods
add
fidivs
sub
imul
push
push
ja
adc
lods
push
xchg
aam
push
and
adc
stc
dec
ror
insl
xchg
mov
lods
mov
popf
es
push
aas
jne
add
cmp
inc
xchg
popf
aaa
ljmp
cmp
movsb
jbe
push
push
cs
sahf
inc
pop
jbe
and
incb
pop
mov
enter
movsl
pusha
push
push
negl
test
psrad
dec
and
cmpsb
mov
jge
mov
add
and
arpl
mov
iret
cwtl
mov
sbb
daa
jno
adcl
xlat
or
bound
iret
adc
sbb
clc
out
jno
sbb
sub
sbb
leave
xor
test
sub
inc
push
mul
inc
jb
sub
cmp
xor
mov
push
mov
pop
std
int3
dec
sub
adc
out
push
pusha
mov
fbld
xchg
dec
dec
push
push
testl
outsb
aaa
out
ljmp
jmp
adc
jle
xchg
fstl
dec
sub
or
sbb
lods
call
into
loop
push
and
dec
ss
sbb
addl
fldt
in
cli
gs
pop
push
xchg
jg
cmp
lods
rcrl
push
pusha
inc
push
push
jg
es
and
xchg
xchg
mov
sub
xor
xchg
mov
in
js,pt
stos
push
sarb
cmp
adc
jl
cmp
mov
das
mov
or
fmull
outsb
out
cld
sbb
or
push
repnz
lock
andl
jbe
test
cmp
or
lods
inc
fcompl
cld
addr16
mov
nop
into
pop
add
movsl
inc
je
gs
dec
cld
stos
lahf
shlb
call
mov
out
inc
aas
repz
cmp
xor
push
mov
cld
push
sarl
or
xor
ja
push
psubw
pop
pop
xor
movl
adc
push
imul
xor
lods
out
pushf
roll
and
into
pop
sub
mov
cmpsb
jp
jl
stos
js
mov
xor
jb
int3
adc
leave
mov
or
sahf
in
cmp
inc
mov
and
push
jno
ror
push
adc
mov
add
scas
push
aas
jecxz
push
mov
in
lock
mov
arpl
aam
loopne
push
pusha
jae
lods
int3
mov
divl
addr16
and
lds
outsb
sti
push
mov
or
add
cmpsl
scas
jns
mov
mov
test
and
mov
out
sbb
pop
test
xchg
mov
mull
fcomi
inc
adc
cmpsb
cmpb
cmp
repnz
xor
outsl
inc
add
add
xor
stc
lret
inc
jmp
shll
sbb
add
call
push
lods
sbb
sub
adc
or
pop
add
dec
aaa
sti
push
imul
pop
push
fisubl
jne
and
jo
mov
and
test
jbe
out
ret
lcall
in
mov
cld
cmp
test
ret
jnp
testl
push
jno,pt
xchg
jg
sbb
or
xchg
mov
mov
cmpsl
jp
inc
shlb
mov
orl
lea
jl
inc
icebp
sbb
xor
cmc
stc
sbb
push
dec
fldt
pop
xchg
aad
mov
xor
inc
scas
push
outsl
inc
xor
or
testb
stc
push
jp
cld
lea
sub
loope
call
jecxz
mov
rorl
lcall
ja
aaa
xorl
daa
mov
fucomi
or
arpl
cli
cmc
sbb
fs
loopne
es
decl
les
aad
out
inc
sarb
and
sub
lahf
xor
gs
mov
cmpsb
ss
mov
sbb
js
repz
iret
shll
mov
push
icebp
mov
or
test
inc
std
cmpb
adc
pop
ret
jg
lods
fidivrl
inc
push
and
xor
and
mov
pop
jle
add
iret
xor
stos
jnp
mov
lcall
jno
xchg
or
mov
insl
imul
les
leave
xchg
ficoms
repnz
loop
fbstp
insb
inc
jecxz
sub
cmp
xorb
add
sbbb
jg
pop
sarb
push
mov
push
mov
in
hlt
mov
call
loop
cmp
mov
je
jg
mov
push
loop
xchg
adc
adc
mov
inc
pusha
stos
adc
xlat
sub
pop
adc
icebp
and
adc
pop
inc
iret
cmpsl
jmp
cli
jecxz
adc
sub
test
enter
sub
xor
xor
imul
imul
aas
nop
inc
inc
shr
or
cmp
sti
add
divl
push
sub
movsl
cltd
jmp
scas
xchg
arpl
mov
mov
xorb
jmp
ss
push
inc
imul
lock
aad
pop
ret
push
popa
cmp
out
int
adc
or
or
xorl
and
test
repnz
jle
inc
inc
mull
pop
jecxz
out
mov
pop
inc
inc
cltd
mov
outsb
push
negl
xchg
push
and
outsl
push
cmp
pop
inc
idivl
repnz
adc
in
push
out
es
clc
inc
es
adc
xchg
mov
cmp
or
lahf
fwait
jns
mov
adc
sarb
sbb
movsb
scas
mov
icebp
lcall
sub
inc
imul
rcrb
pop
movsl
add
in
dec
jmp
mov
mov
xor
ss
fwait
and
rcl
pop
cltd
cltd
int3
lcall
jge
push
inc
fisttpll
xor
bound
mov
mov
push
mov
xchg
mov
xchg
xchg
mov
pop
mov
add
jge
xchg
mov
imul
or
jns
test
or
jne
mov
push
arpl
jge
fs
dec
cs
xchg
xor
mov
addb
stos
sub
push
inc
and
mov
inc
ret
or
sbb
addl
cmp
mov
aam
popa
xchg
shrl
xchg
je
in
sbb
push
imul
sub
insb
mov
nop
xchg
sub
leave
mov
movsl
push
mov
jp
pop
jl
pop
mov
adc
dec
mov
sbb
adc
int
sub
add
add
cmp
data16
xor
xor
cmc
jns
inc
mov
roll
stc
addr16
std
data16
ljmp
cmp
mov
enter
push
jne
test
fwait
cltd
test
or
sub
sub
mov
into
inc
ret
jmp
clc
hlt
pop
out
jb
add
fsts
popa
xchg
mov
xchg
testl
cmp
int
add
jp
cwtl
pop
and
dec
sub
bound
das
jno
or
je
lahf
cmp
adc
add
xor
sti
std
inc
inc
or
jo
dec
add
pop
outsb
xchg
cmp
pop
bound
jmp
dec
pop
test
out
loopne
sub
cltd
lret
push
inc
fnsave
arpl
stc
out
out
pushf
mov
int
aas
std
lea
add
sbb
icebp
lods
inc
pushf
ja
dec
mov
and
xor
test
dec
and
dec
push
cli
imul
cs
ja
cmp
push
cmpsb
sub
movsb
loopne
in
mov
mov
lea
cmpsb
xchg
push
fldt
lcall
jp
dec
jle
lods
int3
jbe
gs
push
or
loop
sub
push
mov
shlb
adc
dec
mov
bound
subb
cmpsb
jmp
lret
imul
mov
sbb
and
ror
sub
xor
inc
in
das
in
sbb
add
pop
push
lods
xor
sub
insl
lret
push
sub
push
pop
mov
rcrb
mulb
mov
and
xchg
mov
jo
cmp
xor
cmpsl
sbb
int
lcall
inc
clc
pop
cmpsb
add
inc
adc
cmc
pop
xchg
push
xchg
add
jbe
lock
ds
xchg
repz
out
adc
scas
dec
or
insb
add
jne
fsub
cmp
adc
mov
push
shll
push
fcoms
adc
aaa
push
mov
push
xchg
push
int
pop
xchg
xor
outsl
sub
data16
ret
shr
lds
mov
call
dec
rcrl
int3
cmp
xchg
xchg
cmp
xor
rclb
jp
cs
jbe
ja
fisubs
mov
inc
test
cli
popf
out
mov
mov
pop
mov
xor
les
jecxz
out
nop
cwtl
mov
cmp
outsl
jg
jle
sub
or
sbbb
movsl
xchg
mov
jnp
inc
lret
cmc
mov
lret
xchg
lock
lret
dec
mov
ficoml
pushf
in
mov
dec
jns
xlat
lea
sti
ret
insb
lret
dec
pushf
push
ss
test
jae
sahf
jnp
out
cmpl
xchg
fcmovbe
or
aaa
mov
sbb
sbb
aaa
sub
fistpl
ret
pop
cmpsb
out
stos
gs
test
insl
push
inc
dec
es
xor
popf
xor
add
pop
lods
mov
inc
pop
mov
or
cmp
movsb
sahf
xor
es
adc
int3
rorl
jnp
or
aam
and
cmp
mov
add
gs
test
stos
inc
and
xchg
jg
cmp
sbb
xor
pop
push
in
ficoms
dec
shrb
inc
xor
leave
int
pop
xchg
and
inc
jl
scas
inc
pop
xor
mov
aad
push
adcb
dec
cmpsb
dec
lods
gs
ret
mov
cmp
or
addr16
push
fistps
mov
sbb
xor
ljmp
inc
aad
sbb
lods
mov
sub
sbb
mov
add
loope
add
ret
jae
loopne
sub
cltd
imul
sbb
outsl
push
jge
outsl
adc
xchg
icebp
xor
popf
arpl
das
js
insb
repnz
sub
mov
dec
pop
push
clc
clc
call
dec
sahf
xchg
or
and
dec
dec
xchg
mov
mov
cwtl
lret
insl
adc
pop
test
mov
cmp
mov
xchg
mov
js
dec
pop
push
icebp
lcall
jae
incl
jo
pop
movsb
sbb
insl
imul
sub
cmpsl
in
addr16
xor
dec
int
dec
jp
fildll
xchg
js
cwtl
inc
or
fldt
in
mov
jl
pop
jns
notb
xchg
test
mov
mov
pop
lcall
iret
lods
mov
xor
out
cmc
add
adc
out
ficoms
insl
sbb
inc
or
les
inc
les
push
mov
in
cwtl
mov
inc
mov
lret
inc
push
in
iret
pop
movsl
xor
ret
fldln2
dec
shl
mov
das
push
addr16
es
cmp
dec
sbb
movsl
cli
mov
in
in
cmp
lret
mov
pop
subl
xchg
mov
inc
xor
std
dec
subb
bound
fisubs
lods
mov
int3
int
cmpsb
jae
adc
test
pop
mov
and
jns
in
dec
les
push
jb
jb
cmpsb
xor
ret
fcoms
mov
flds
push
jl
popf
dec
lock
repz
std
add
and
pop
push
dec
jbe
insl
and
mov
cmpsl
out
cmp
jle
cld
jns
jge
lea
cli
pop
std
sbb
test
cli
stc
repz
mov
xchg
fdivrl
movsb
pop
sbb
rcrb
inc
jmp
stos
push
out
or
mov
mov
cmp
int3
mov
xor
lods
fcomp
pop
cmp
addr16
cmp
or
pop
outsl
jp
pusha
xor
sbb
adc
sbbl
adc
sub
sub
and
pop
push
xchg
nop
mov
pop
cmc
jmp
inc
out
scas
jae
je
icebp
clc
push
adc
fsubl
aam
push
ljmp
mov
icebp
addr16
xchg
mov
pop
inc
addr16
data16
cs
sbb
imul
sti
cmc
xorb
add
cs
inc
xor
lea
insl
and
enter
cmp
ss
mov
subb
test
repnz
and
pusha
arpl
jo
testl
out
out
and
ret
mov
cmpsl
dec
dec
in
lods
ret
cmp
push
mov
sbb
pop
arpl
xor
pop
cli
test
lret
push
xchg
test
stos
pop
xor
mov
mov
cmp
in
pop
cltd
dec
xor
int3
xor
xlat
inc
out
xor
ss
ds
loope
int3
inc
cmc
cld
ss
mov
cld
push
mov
insb
jo
or
inc
mov
add
fsub
push
pop
shll
sbb
adcl
sub
jbe
icebp
es
mov
inc
push
inc
fnstenv
cld
daa
scas
cld
fnstsw
shr
imul
mov
push
inc
fistl
jge
mov
mov
mov
imul
cmpsb
pop
popa
mov
out
pop
dec
sub
movsb
jae
mov
adc
pop
xchg
cmpl
xor
mov
in
xchg
cmp
mov
inc
push
in
in
jmp
sbb
stos
pushf
sub
mov
pop
in
dec
xchg
pop
push
int
jge
lret
xor
cmpsb
or
mov
enter
icebp
imul
sub
sbb
jbe
enter
pop
sbb
ret
daa
std
movsl
sbb
fs
mov
mov
cltd
and
fmul
push
mov
loopne
or
sub
scas
adc
xchg
in
jae
cmp
in
add
rcl
sub
icebp
sub
pop
dec
or
jmp
adc
sbb
sti
je
and
dec
add
shl
or
mov
iret
mov
fwait
xchg
cmp
subl
mov
cli
push
rorb
es
in
inc
mov
adc
aas
xchg
popa
jae
bound
push
shl
xchg
dec
sti
xchg
cmp
adcl
mov
int3
push
sti
xchg
cs
push
lcall
push
loop
cli
popf
mov
jmp
sarl
add
bound
stos
repnz
fistl
sub
pop
repnz
cmp
js
adcb
xchg
ret
mov
dec
push
dec
icebp
stc
popa
push
or
pop
movsl
fs
daa
imul
mov
jp
xchg
jecxz
mov
cmc
inc
orl
or
inc
frstor
sub
rolb
push
cmp
push
pop
lret
ss
fucomi
roll
jmp
jmp
stc
ja
ljmp
jge
not
pusha
mov
and
aam
pop
out
mov
scas
stc
jo
lret
jno
pop
out
push
push
inc
xchg
inc
leave
jmp
out
gs
in
cltd
pop
xor
sbb
mov
dec
mov
gs
xor
lret
jmp
arpl
xchg
imul
xchg
or
mov
inc
shll
sub
icebp
in
out
js
xor
sbb
jecxz
shlb
and
icebp
push
ss
and
arpl
sahf
cmp
adc
mov
hlt
insl
inc
movsb
rcrl
cmp
adc
cmp
inc
pop
jne
mov
adc
jg
or
fdivr
add
push
jae
adc
repz
push
outsb
xor
loope,pt
rol
aaa
test
xchg
dec
jnp
sbb
into
push
push
pop
mov
pusha
loopne
pop
in
scas
xor
cmpsl
cmp
enter
test
sbb
adc
stos
xor
inc
mov
gs
push
in
jno
mov
pop
movsb
fisttps
mov
adc
mov
fldcw
adc
mov
mov
cld
dec
pop
xchg
inc
or
xchg
or
add
pop
cmp
cmc
pop
xchg
loop
insb
add
dec
pushf
dec
dec
jae
push
jle
mov
daa
dec
xor
mov
and
lret
cltd
push
iret
shl
movsl
cld
out
lret
sti
js
data16
jo
mov
cmc
cltd
inc
movsb
sbb
cli
jae
inc
or
inc
or
adc
stos
std
aam
xchg
lea
inc
xchg
inc
lea
jle
push
or
xlat
scas
shrb
dec
jecxz
test
sbb
mov
out
xorl
sar
cs
test
adc
out
cmp
xlat
xchg
maskmovq
testl
inc
das
mov
mov
lcall
fwait
lea
push
sub
in
ror
xlat
jns
dec
mov
inc
ror
imul
inc
out
jns
stc
fsubr
sbb
inc
cltd
push
adc
cltd
sub
leave
adc
in
mov
cmp
int
loope
arpl
fistps
insl
push
pop
mov
jp
aaa
mov
gs
in
repz
jg
das
sub
fstl
sti
addb
dec
add
xor
lea
adc
out
aam
dec
sbb
or
clc
cli
jne
mov
js
jno
sbb
push
mov
pushf
jmp
or
mov
sbb
fdivr
out
xchg
dec
ljmp
push
sub
cmpsb
ljmp
iret
roll
dec
repz
dec
sarl
pop
add
push
mov
sub
hlt
jmp
flds
cld
scas
loopne
sti
and
stc
sub
out
inc
repnz
std
in
lods
xor
jmp
xchg
mov
sbb
jno
jecxz
andl
cmp
mov
jbe
sbb
add
in
xlat
adc
adc
andl
repz
cmc
push
pop
gs
jo
sbb
xlat
add
push
lcall
inc
cmp
cld
shl
cld
test
jg
or
das
ret
mov
nop
cltd
std
or
jmp
insl
loope
ljmp
repnz
xor
pop
mov
test
lcall
icebp
jbe
mov
mov
push
lcall
mov
adc
add
iret
ret
mov
outsb
sbb
aas
imul
movsb
push
rolb
sub
das
rorl
cmp
pusha
fwait
jae
push
push
adc
xlat
cltd
stos
aam
jbe
mov
jb
shrl
push
push
out
stc
movlhps
jge
lods
xchg
jne
jae
pusha
neg
pop
mov
rcl
sbb
bound
mov
xchg
testb
dec
pop
fsts
sub
les
es
shlb
fistps
pop
je
out
mov
fs
sub
push
mov
mov
add
push
add
push
mov
mov
inc
rorl
loopne
ss
mov
scas
js
movsl
in
sbb
or
mov
mov
es
push
adc
cltd
add
or
xlat
dec
push
movsl
xchg
outsb
stos
mov
jae
pop
mov
ret
mov
jmp
loop
incb
js
in
repnz
mov
cmp
push
shl
pop
jne
xor
mov
repnz
sarb
xchg
insb
add
sbb
sbbl
insb
lret
idivl
call
push
jle
push
xchg
cmp
imul
pop
add
cmpsl
pop
mulb
mov
xchg
push
imul
aas
and
and
xor
aas
nop
sbb
sub
gs
cwtl
stos
push
lret
add
pop
mov
ljmp
sahf
std
in
stc
into
adc
rcrb
adc
les
das
mov
out
data16
out
xor
lret
pop
or
jp
push
mov
cmp
test
add
jnp
mov
addr16
data16
lock
xchg
mov
out
mov
loop
push
mov
mov
scas
add
ds
push
mov
ds
sub
push
insb
into
jne
movsl
std
or
inc
xchg
push
inc
xor
adc
mov
jge
push
cmp
add
mov
sbb
out
popa
jle
inc
xor
pusha
enter
add
xorb
jns
mov
push
hlt
xchg
fidivs
insl
nop
mov
jnp
push
jl
xor
fidivs
adc
jae
aas
inc
scas
cmc
daa
xchg
xchg
js
stos
sbb
scas
mov
mov
dec
sub
mov
and
pop
xchg
sahf
sub
pop
daa
or
lcall
addr16
xchg
ljmp
dec
dec
mov
fiadds
dec
les
leave
jb
jle
es
pop
cmp
lea
dec
test
insl
cld
adc
xor
rclb
idiv
sbb
sbb
jecxz
dec
mov
mov
sbbb
loopne
and
ja
loope
inc
cmp
dec
aam
ret
cli
xor
mov
lods
sbb
frstor
pop
std
je
add
sub
aad
push
push
shlb
sub
dec
or
ret
push
das
movsl
popa
jmp
mov
movsb
loopne
push
ja
inc
dec
inc
push
adc
sbb
mov
sbb
dec
dec
fs
sbb
dec
and
xor
push
or
fwait
mov
loope
int3
scas
cmp
dec
pop
dec
adc
roll
lock
and
mov
je
sbb
xor
ret
push
lods
fsubrs
mov
mov
adc
dec
and
mov
gs
jp
leave
jmp
push
pop
push
or
xchg
mov
xchg
fwait
or
adc
fisubl
clc
test
mov
data16
mov
es
mov
adc
movsb
pop
push
imul
inc
and
and
dec
mov
gs
aam
push
pop
cmp
sbb
loopne
xor
adc
or
adc
jae
xor
dec
sub
lcall
xchg
push
push
and
pop
pop
pop
mov
mov
daa
adc
ja
jno
pusha
add
shrb
jle
test
add
gs
sahf
adc
std
dec
add
jo
xchg
pop
pop
mov
mov
stc
mov
push
icebp
test
fcmovnb
pop
ret
push
sbb
cs
ss
and
subl
jmp
clc
jbe
jnp
cmp
mov
mov
dec
dec
xchg
xchg
aas
or
jne
jns
sbb
popa
mov
pop
repnz
filds
out
sub
cmpsb
insb
mov
sbb
movsb
pop
mov
enter
xchg
pop
iret
adc
jb
lret
xchg
lock
xchg
sti
adc
lea
inc
dec
push
mov
testl
faddp
mov
mov
dec
mov
ret
jp
mov
leave
mov
pushf
and
pop
imulb
cmp
push
push
lret
cmp
sbb
loope
cmp
adc
and
mov
push
pop
adc
mov
xchg
vmulsd
inc
jbe
aam
int3
push
ret
adc
jns
xchg
pop
inc
xor
mov
ror
jle
bound
pushf
xor
inc
fidivrs
in
push
push
adcb
shll
cmp
imul
push
mov
cmp
and
loope
jne
out
arpl
lret
sbb
xchg
or
lret
in
imul
clc
ret
jno
adc
or
xchg
shlb
roll
add
mov
xorl
and
sbb
xchg
lea
push
mov
and
pop
aas
hlt
push
pop
cmpsl
enter
push
lds
mov
loopne
es
dec
jmp
mov
cmpb
push
jle
out
insb
shl
addr16
clc
test
movl
ljmp
sbb
add
xchg
or
jecxz
loope
lret
mov
div
cs
xlat
repz
xchg
cmp
pushf
pop
addb
push
fldcw
mov
mov
adc
jb
movsl
movsl
stc
jns
dec
cltd
cwtl
cwtl
test
dec
inc
pop
xor
and
adc
movl
pop
mov
adc
ss
lea
fcom
push
add
fwait
and
add
mov
dec
pop
sbb
pushl
sti
lret
aad
or
stos
adc
int
es
jnp
imul
cmp
jmp
fimuls
das
arpl
mov
push
inc
ret
filds
popf
and
ds
xchg
in
jne
mov
jmp
imulb
and
jnp
mov
xor
rol
scas
jge
dec
mov
xchg
scas
idivb
ss
fs
sub
inc
jo
orps
bound
gs
mov
mov
sbb
xor
into
imul
sbb
sub
adc
es
pushf
sub
shll
je
adc
cltd
xchg
or
addl
sbb
lret
stos
cmp
nop
push
jno
inc
lcall
mov
iret
stos
fadds
scas
mov
pop
stos
mov
sahf
test
mov
fisttps
and
cmpsb
adc
dec
outsb
jbe
sub
scas
jle
inc
mov
bound
add
aaa
adcl
xchg
sub
cltd
lahf
scas
mov
adc
enter
in
xor
cmp
daa
or
push
inc
fucomp
cmp
mov
lret
jl
shl
jns
sbb
enter
sub
add
ljmp
je
faddl
roll
add
jb
xor
lea
add
pop
jg
jb
jb
jp
insb
pop
aaa
xchg
cmp
sahf
iret
lods
or
ds
andb
ss
and
push
mov
jg
push
outsl
adcl
into
pop
push
mov
add
jo
fs
xchg
cmp
clc
test
sbb
xchg
adc
cmp
bound
dec
adc
jle
dec
jns
add
out
test
xlat
cmp
loope
pop
pop
mov
scas
adc
in
sub
xor
dec
jge
push
pop
cmp
push
addr16
clc
push
loope
les
into
test
mov
mov
rorb
movsb
aad
add
jbe
xor
pusha
jmp
js
mov
add
leave
ja
jge
adc
repnz
pop
xor
stc
imul
repz
stos
lds
dec
jno
scas
mov
pop
lock
fidivrs
fnsave
sbb
jg
dec
pop
xchg
jae
inc
out
imul
and
mov
dec
lock
iret
lret
aas
xchg
inc
pop
xchg
jb
adc
xlat
and
lea
sbb
and
sub
dec
sbb
frstor
in
inc
cmove
inc
mov
dec
shll
add
jae
mov
fstl
mov
mov
stc
push
adc
das
aam
mov
xchg
mov
push
aad
cmc
mov
push
jb
mov
lds
enter
mov
and
aad
mov
jmp
fidivrl
shl
std
ja
pop
movl
in
test
jo
mov
inc
out
repz
outsb
or
cmp
les
add
fmull
and
cmc
rcrb
jb
sub
mov
mov
cmpsl
fsubr
push
repnz
sbb
aaa
adc
je
loopne
std
inc
or
je
ret
xchg
stos
push
iret
add
add
inc
or
mov
or
cmp
xor
clc
mov
mov
rclb
push
push
sub
int3
loop
pop
mov
mov
data16
inc
push
cmpl
in
mov
repnz
test
cmpsl
aas
jns
data16
ficompl
and
fmul
and
jle
dec
mov
mov
jecxz
clc
in
mov
stc
sbb
mov
adc
movsl
rolb
ja
mov
dec
dec
mov
out
ds
adc
sbb
or
cmp
and
cld
andl
add
jge
imul
adcl
or
inc
mov
mov
jbe
adc
xor
sbb
and
int
pop
dec
in
jmp
jnp
enter
or
add
inc
sub
cld
or
movsl
cli
test
add
into
mov
jecxz
mov
mov
fs
in
ret
mov
addl
push
jno
in
js
and
pusha
pop
in
or
push
adc
shlb
or
sub
mov
fsubrl
scas
ret
es
test
scas
outsl
sub
sub
push
jns
jae
loop
xor
pop
cmpsb
and
jg
daa
or
mov
jg
xchg
add
punpcklbw
bound
sub
aad
adc
add
xchg
xchg
inc
sub
fs
sbb
xor
mov
roll
adc
push
dec
aam
push
mov
ret
mov
xlat
inc
inc
sbb
shlb
fwait
cmpl
cmp
xchg
lret
in
pop
inc
sahf
xchg
xor
jo
cmpsl
test
dec
push
loopne
fnsave
scas
or
ds
arpl
cmp
shll
mov
fwait
ret
fistpl
add
inc
jae
sar
incl
xchg
sub
out
inc
mov
cmp
mov
or
xchg
test
enter
sbb
lcall
cmpsl
jno
fcoms
sbb
push
fisttpl
inc
pushf
mov
cs
mov
outsl
sbb
jp
mul
sbb
popf
insb
fwait
lods
or
inc
repz
sub
je
cmc
sahf
cltd
jmp
jne
and
jecxz
mov
jns
imul
dec
jae
cld
push
leave
lahf
dec
xchg
jns
mov
jo
inc
sbb
pop
push
xor
testb
dec
or
mov
push
jmp
and
addr16
inc
addr16
out
mov
shl
dec
add
xchg
add
mov
dec
sar
mov
jmp
xchg
fsubrl
mov
and
imul
orl
imul
mov
jnp
adc
fdivs
mov
mov
notl
and
cmpsb
ljmp
dec
jp
add
cs
scas
fcomp
mov
ja
mov
sarb
lods
clc
dec
xor
and
sub
repz
xor
sbb
adc
orl
pop
inc
aas
jne
dec
stos
sub
mov
push
inc
aam
aaa
loopne
les
xchg
xorb
dec
mov
mov
insb
inc
movsb
rclb
xor
push
out
jns
ret
insb
mov
xor
popf
cmp
jge
movsb
push
dec
ret
cwtl
std
ret
insl
cmp
out
in
cmp
jbe
addr16
xchg
lahf
cltd
mov
rcrl
je
fnstenv
into
lock
jg
adc
or
in
cs
out
mov
pushf
lret
mov
xchg
xor
adc
adc
sbb
sbb
push
popf
int
shll
push
nop
insb
iret
push
push
mov
mov
or
sub
stc
data16
or
mov
leave
xchg
adc
or
aas
pop
mov
adc
or
aad
and
mov
cltd
pop
dec
and
out
addr16
jno
ljmp
rorb
mov
mov
in
outsl
popf
subl
adc
dec
mov
mov
mov
or
pop
imul
lcall
lcall
lds
hlt
clc
mov
push
lods
xor
push
mov
pop
add
mov
mov
orl
pop
aam
outsb
mov
inc
mov
hlt
inc
and
push
cmp
jo
dec
loopne
mov
push
jae
faddp
scas
xor
hlt
sarl
scas
data16
mov
cmp
add
cmpsb
jb
rcrb
xchg
lcall
add
pop
and
xor
jbe
jmp
sub
mov
repnz
push
sub
cmp
gs
xor
pop
add
mov
pop
jo
inc
inc
js
cmpsl
lock
mov
xchg
sahf
mov
push
repnz
jge
jne
pop
mov
fucomp
or
jae
into
cmp
adc
outsl
mov
out
aaa
clc
ficoms
jb
shll
outsl
add
inc
jns
push
fnstenv
fldenv
mov
popa
fsubp
adcb
sub
lcall
xor
dec
dec
pop
fildll
xchg
pop
mov
and
jns
in
lds
xchg
ds
adc
jmp
call
das
sub
lea
not
cmp
jecxz
jmp
sti
adc
aas
lahf
add
mov
lds
xor
aad
test
hlt
mov
add
mov
sub
lods
mov
dec
dec
jae
arpl
ljmp
mov
cmp
mov
mov
in
jae
in
fsincos
xor
jns
adc
dec
or
pop
in
stos
iret
lret
inc
lock
mov
xor
jb
cwtl
scas
or
inc
pop
mov
cli
aad
imul
je
mov
into
lock
sar
lds
fsubp
jnp
mov
cwtl
into
das
mov
inc
xchg
push
sub
dec
enter
jno
push
sarl
and
and
sbb
sbb
sahf
aas
fbld
lret
nop
xor
mov
xchg
scas
jne
xchg
pop
dec
add
icebp
fld1
testl
mov
mov
jge
pop
fimuls
arpl
mov
aad
mov
shlb
sbb
mov
lock
xchg
mov
ljmp
lret
je
insb
dec
into
push
loop
gs
insl
mov
std
addb
inc
test
or
sbb
mov
adc
pop
enter
sbb
push
xchg
insl
push
jp
jnp
jne
arpl
xor
movsl
pop
popf
and
sti
jl
std
sbb
mov
imul
jle
pusha
arpl
cmp
aaa
mov
jo
jo
cs
sahf
and
stc
loop
xchg
shl
mov
enter
sub
jo
pop
loopne
scas
cld
dec
mov
mov
push
addr16
mov
enter
mov
fwait
cmpsb
pushl
mov
or
and
insl
aam
lret
ja
fisubs
out
pop
inc
xor
push
push
lret
pushf
dec
xchg
pop
mov
pop
ret
inc
loope
ds
arpl
pop
in
imul
pusha
sti
sbb
mov
into
inc
test
mov
cmpsb
xchg
ljmp
xor
cmp
iret
and
les
xchg
jle
or
adc
cvtps2pd
xlat
ljmp
mov
mov
adc
scas
int3
int3
imul
mov
loope
arpl
lret
div
mov
sub
loopne
jnp
inc
pslld
shrb
push
in
push
cltd
pop
cmp
and
add
movsl
popa
stos
cmp
iret
sub
pop
rol
dec
dec
bound
push
xchg
adc
in
insb
and
and
mov
dec
repnz
mov
cmp
xchg
pushf
es
addr16
sbb
lret
mov
repnz
inc
inc
loop
lds
xor
insb
rcr
fdivl
sub
aam
push
loopne
xor
jnp
jmp
mov
movsb
pop
ror
stos
cmpsl
jb
frstor
pop
rorb
xchg
cmp
aas
mov
jno
xlat
leave
orl
cmp
cmp
push
mov
in
adc
sarl
out
xchg
out
roll
clc
insb
xchg
scas
loop
loope
call
loope
test
es
jg
xchg
adc
xchg
inc
mov
mov
mov
jmp
repz
cmp
icebp
mov
daa
inc
sub
pop
or
xor
lret
mov
cmp
cs
adc
mov
xchg
sti
ficompl
pop
dec
and
into
xor
mov
out
xor
mov
cmc
mov
pop
dec
repz
testb
push
cltd
xchg
lods
imul
addr16
scas
xor
pop
out
sub
jge
scas
fwait
adc
cs
popf
mov
jno
mov
dec
adc
sahf
jg
lcall
jno
out
push
testb
push
mov
jae
mov
xor
imul
xchg
std
add
rolb
into
xor
shl
mov
push
out
cmpsl
inc
add
add
push
jge
mov
icebp
stos
je
sub
imull
ret
sbb
in
mov
in
stc
or
aam
mov
cmp
jno
cmpb
ret
jmp
mov
push
jg
je
loop
lret
pop
jnp
mov
cmp
cmp
cltd
in
push
xchg
les
aam
sub
into
jae
jae
or
sub
mov
scas
mov
jl
fs
loopne
jecxz
dec
repz
push
push
push
data16
loope
sbb
jmp
nop
pop
icebp
fsubs
push
xchg
inc
xor
or
cmpsl
mov
sbb
dec
pop
into
pop
lcall
mov
shll
pop
pop
jns
xchg
sti
add
shrb
xlat
sbb
int
lahf
mov
stc
pop
dec
or
in
xor
push
cltd
mov
jne
outsl
addr16
lcall
dec
push
lcall
stos
pop
cmpsl
outsl
sub
cmp
mov
ja
cltd
aas
or
in
leave
leave
xchg
mov
cld
inc
jl
mov
test
pop
xchg
dec
aaa
daa
daa
inc
test
les
nop
inc
cmp
inc
cs
test
popf
sub
jns
dec
sti
xchg
daa
in
and
mov
ds
aad
inc
imul
into
in
push
adc
push
push
popf
and
iret
xchg
loop
or
push
test
mov
mov
daa
fwait
mov
sub
lcall
mov
jb
ret
fadd
imul
push
pop
cld
push
mov
mulb
movsb
shl
jne
jmp
fiadds
movsb
sbb
lret
insl
or
mov
add
je
xor
lods
shrl
out
setae
imul
pusha
ret
movsb
and
xor
jno
xor
ljmp
std
adc
repnz
mov
lcall
pop
shrb
push
add
iret
pop
xor
or
push
fwait
mov
loope
lcall
mov
mov
push
sub
mov
cmp
adc
sub
stc
xchg
mov
mov
popf
dec
cs
mov
dec
xchg
cmp
mov
scas
or
cld
bound
cmpsl
or
pop
movsb
or
ds
fcmovb
push
out
fiaddl
xor
test
add
mov
js
jle
push
or
test
ss
jecxz
je
and
push
dec
std
lahf
outsb
movsl
addl
jnp
xchg
aaa
cmp
push
popa
pusha
insl
lock
das
push
mov
sub
fnstenv
mov
adc
jle
fs
pop
xchg
jno
mov
pushl
push
mov
icebp
mov
enter
mov
xor
mov
push
and
xchg
xchg
aam
cmpsl
in
test
mov
add
sub
or
pop
aad
mov
pop
cmp
loope
cmpsl
out
je
or
idivl
pop
mov
xorb
push
popl
pop
push
sbb
mov
ljmp
loopne
lds
mov
int3
sbb
outsl
lret
adc
add
xchg
adc
pop
repz
cwtl
bound
sub
pop
fildl
cmp
fs
rclb
subl
out
testb
xor
xchg
subl
cmp
stos
jo
sub
sub
dec
ss
xchg
in
gs
inc
in
stc
or
mov
fwait
cmp
iret
mov
mov
ja
dec
xor
pusha
cmp
imul
mov
xchg
and
lcall
and
sub
pop
mov
repnz
rcr
insb
adc
mov
out
lret
pop
dec
pushl
mov
push
cmpsl
imul
rcrb
mov
mov
movsl
cmove
dec
adcb
xlat
or
pop
hlt
or
lret
mov
and
mov
mov
cmp
jp
js
por
mov
aas
iret
dec
or
lahf
push
adc
adc
fs
add
or
sub
imul
mov
inc
pusha
pop
and
adcl
lock
dec
push
sub
popa
stc
repnz
out
ret
xchg
sti
imul
inc
decl
out
sub
lock
fcmovnbe
test
pop
in
and
icebp
mov
mov
or
and
rorl
or
sbb
lret
jno
icebp
stos
subl
in
mov
shlb
fidivrl
pop
test
push
sub
sub
sti
inc
fldt
lock
jmp
push
cmpsl
call
cmc
test
jns
aad
fsubrl
pop
cmp
mov
ja
or
and
shll
fsubrs
or
push
mov
sub
add
xchg
mov
pop
mov
mov
jge
std
adc
faddp
inc
push
es
test
rcrb
or
ja
cltd
dec
mov
sbb
mov
mov
add
inc
repnz
movsl
clc
nop
and
push
sbb
les
dec
dec
dec
cmp
jl
lds
pop
fstl
cmp
or
stc
dec
jae
out
add
sbb
das
or
ljmp
mov
cmpsl
mov
push
or
xor
mov
cs
lea
push
into
lock
pop
pushf
jmp
mov
or
adc
jb
sti
in
cmp
repnz
mov
mov
push
xchg
mov
xchg
pop
arpl
xor
outsl
push
jnp
fmull
and
mov
cmp
add
loop
mov
sub
or
insl
mov
rcrb
pop
sub
out
and
pop
fdivp
fldcw
int
ret
pop
pop
mov
fsubrl
mov
repnz
mov
into
nop
jmp
pop
mov
popa
mov
push
cmp
insl
je
mov
sub
les
fstpt
mov
lea
jo
inc
into
adc
mov
fbld
cmp
pop
mov
sbb
push
imul
jbe
clc
or
dec
pop
incl
xchg
xchg
int
pop
scas
push
mov
cmp
add
mov
test
xor
pushf
test
xor
mul
aad
inc
daa
sub
std
jle
mov
ds
pusha
dec
out
pop
and
pop
pop
outsb
jmp
xchg
jo
jae
mov
add
int3
dec
sbb
or
cmp
orb
or
orb
cmpl
mov
sub
imul
or
jp
sub
jmp
add
xchg
stc
pop
test
mov
mov
add
cmp
sbb
out
movsb
pop
and
dec
aad
imulb
fbld
push
dec
or
leave
out
sarb
pop
outsb
pop
mov
xor
and
inc
cld
popa
adc
mov
sub
xor
pusha
dec
pushl
loopne
dec
pop
xchg
mov
mov
sbb
or
popf
mov
bound
jmp
pop
outsl
sub
lea
in
cmpsl
out
jns
pusha
in
inc
gs
and
dec
cmp
fsubl
xor
mov
rorb
inc
fists
mov
std
popf
rcrb
lea
addl
add
mov
xor
push
pop
es
jno
enter
mov
addr16
das
pop
pop
pop
cmc
cmpb
mov
cmpsl
out
imull
adc
cmpsl
adc
frstor
imul
rcll
loop
mov
lcall
or
mov
xlat
pushf
int
inc
push
mov
sub
push
cmp
fsub
sbb
push
pop
mov
les
sar
mov
and
xchg
mov
mov
dec
dec
cmp
push
mov
adc
push
or
cmp
pop
and
and
andl
jbe
call
ljmp
adc
push
lcall
mov
adc
sar
mov
cmpsl
insl
adc
mov
mov
jmp
pusha
aas
jl
test
push
mov
mov
mov
pop
cmp
clc
aas
cmpsb
fst
mov
or
dec
movl
out
cmp
mov
incb
jno
fwait
xchg
fsts
repnz
dec
sub
mov
std
js
pop
testl
jg
push
lods
inc
adc
ljmp
jg
popa
xor
inc
orb
es
jne
push
rcrb
xchg
aam
mov
lahf
enter
push
das
gs
mov
aaa
push
repnz
addr16
pop
out
hlt
icebp
into
push
sbb
push
push
xor
roll
mov
mov
and
xor
adc
sbb
fwait
sarb
jbe
xchg
ss
mov
sbb
jno
lahf
stos
xor
orb
dec
stos
loopne
lret
push
test
jns
in
xor
in
push
or
mov
aas
imul
call
roll
mov
mov
nopl
test
mov
mov
push
stc
mov
cltd
in
push
pop
test
mov
nop
dec
fs
dec
data16
out
jecxz
inc
stc
mov
icebp
std
aas
or
out
dec
cwtl
ja
les
inc
mov
fdivrs
lret
jge
push
cmp
or
or
xchg
mov
pop
adc
sbb
jl
add
dec
popf
dec
inc
out
mov
int
out
xchg
mov
popf
cmc
icebp
movsl
cmpsl
pop
stc
mov
xchg
pushf
loope
push
loop
filds
repz
mov
adcl
imul
mov
lcall
push
sub
add
push
xor
call
dec
movl
aas
dec
jbe
jmp
jl
pop
dec
push
and
movsl
or
push
adc
push
sarb
mov
es
mov
or
test
mov
pop
jne
mov
push
inc
fwait
stc
dec
xchg
repz
hlt
jmp
lock
lea
inc
cmp
adcb
sbb
dec
mov
mov
sub
aaa
out
cmc
lret
cwtl
cmp
push
insb
dec
jge
lods
movsl
sub
lcall
sub
aaa
mov
cmc
test
add
add
add
pop
sti
aaa
leave
fcmovnbe
lds
cmp
and
mov
push
popa
fiadds
lahf
aam
fstpl
sub
lock
jp
or
cmc
js
stos
sbb
push
js
or
push
mov
lret
iret
push
cmp
mov
pushw
add
stc
mov
shrb
bound
add
mov
jae
or
mov
out
popa
sbb
lcall
sub
xchg
iret
dec
or
or
lret
nop
imul
hlt
xchg
ja
jo
in
mov
add
xor
iret
sbb
mov
insl
sbb
test
sbbl
lods
scas
push
mov
cltd
mov
adc
in
inc
cmp
pop
ss
sarl
in
insb
mov
fcompl
out
cmp
push
ds
jb
cmp
shrl
push
mov
push
je
add
cmpsl
jae
lahf
jle
cwtl
outsb
push
daa
pop
lods
sbb
pushf
test
or
sbb
stos
out
inc
and
mov
aaa
cli
inc
popa
push
sbb
lret
aam
push
out
and
dec
lods
ja
jns
push
fwait
xchg
incb
push
lret
fsubr
clc
cs
ds
cmp
out
insb
js
mov
faddl
add
stos
in
inc
mov
push
out
push
pop
mov
adc
sti
dec
fs
lcall
outsl
adc
insb
pop
lret
notl
test
fscale
add
xor
insb
insb
fwait
js
fadds
lcall
movsb
mov
mov
lds
xchg
cmp
cmpsl
sbb
adc
push
fwait
imul
ja
add
mov
movsb
sub
or
dec
cwtl
stos
adc
pushf
repnz
cmpsb
enter
jmp
lret
jle
push
push
dec
lret
and
shll
stos
rcr
jle
enter
xchg
jne
stos
into
cmp
xchg
push
lea
test
into
scas
jno
lds
push
pop
xchg
jmp
inc
imul
in
jp
fcmovne
outsb
aad
inc
mov
into
and
leave
adc
jle
je
mov
sub
mov
pop
cmpsl
jo
mov
fdivp
icebp
ret
aad
pop
fidivrs
cld
dec
push
imul
pop
pop
sbb
mov
cmpsl
mov
push
sub
and
sti
insl
push
pusha
pop
jne
adc
std
aam
idivb
cmp
mov
pop
inc
loope
push
lret
lds
lds
dec
jbe
sub
adc
mov
out
or
add
cltd
dec
stc
sub
test
mov
data16
xlat
adc
sbb
pop
in
ja
iret
aaa
sbbb
cwtl
std
push
fisttpl
idivl
mov
ds
out
xchg
xchg
mov
inc
dec
adc
das
ja
and
roll
scas
xor
lds
sbb
test
pop
rclb
pop
xor
sbb
mov
xchg
iret
or
pusha
sub
adc
nop
inc
cmp
cmpsl
cltd
dec
or
mov
jno
lahf
sbb
fnstcw
pop
inc
adc
cltd
lcall
addl
out
mov
cmp
mov
mov
stos
dec
add
js
fildll
stos
stos
and
adc
loopne
push
push
push
push
stos
push
xor
dec
loop
xor
sub
pop
mov
jmp
js
pop
inc
pop
in
fiaddl
jbe
les
and
xor
pop
jb
mov
mov
mov
xchg
xor
pop
inc
cli
pop
sarb
push
inc
sub
aam
sub
lahf
and
dec
fs
dec
mov
lods
xor
mov
jne
jnp
pop
cmp
add
mov
iret
xchg
push
leave
mov
mov
stc
dec
in
outsb
filds
inc
cli
lret
icebp
jbe
sbb
decl
fimuls
or
mov
pop
addl
frstor
mov
scas
movb
xor
jno
and
das
jl
int
inc
out
cmc
nop
xor
xor
jge
mov
add
sub
jg
stos
xchg
mov
mov
cltd
sub
repnz
je
cmp
xchg
inc
xchg
add
cli
xor
and
pop
and
sahf
cmp
fiadds
pop
xchg
scas
cld
jmp
pop
mov
sbb
add
cmp
std
faddp
sbb
xor
into
scas
sbb
dec
mov
cltd
cmp
cwtl
cmp
push
std
jmp
test
pop
out
dec
pop
or
sbb
daa
mov
jle
pop
fnstsw
and
pop
sub
cs
add
es
pop
scas
lret
push
xor
loopne
sbb
pop
je
adc
sub
stos
inc
xchg
outsb
fucompp
inc
es
push
les
shrl
aam
mov
sub
inc
stos
js
arpl
stos
bnd
cwtl
add
sbb
lds
cmpxchg8b
mov
inc
imulb
lret
xchg
pop
or
push
adcb
movsl
lcall
out
cmpsl
leave
inc
or
lret
xchg
xchg
sbb
or
nop
xchg
jmp
iret
bound
shl
lcall
mov
subb
jge
add
fst
mov
pop
mov
xchg
lret
out
mov
adc
sahf
lea
imul
sub
pop
aas
lret
imul
sti
push
cs
cmp
movb
xchg
sbb
scas
stos
js
sbb
mov
loope
ljmp
sbb
testl
aaa
xchg
and
add
int
xor
iret
pop
add
xchg
dec
sub
pop
pop
fdivrl
mov
aam
stc
dec
fidivs
addr16
cmpsl
mov
jbe
inc
adc
sarb
rol
outsb
repnz
shrl
mov
ret
mov
js
cmpsl
fisubs
js
les
loopne
fidivrs
cmp
push
xchg
add
xchg
inc
dec
daa
stc
movsl
mov
lods
mov
bnd
sbb
sub
push
and
arpl
push
test
lods
ss
jmp
pop
popa
notl
pop
mov
pop
repnz
pop
sub
aam
push
cltd
int
xchg
or
mov
cmp
pop
or
mov
scas
adc
adc
and
xchg
aam
scas
gs
iret
lahf
adc
lock
hlt
cs
sbb
repnz
es
jmp
sti
xchg
pushf
in
repnz
sub
jmp
mov
repnz
and
jecxz
add
fimull
pop
or
cs
stc
stos
and
imul
xchg
add
int3
or
and
ss
or
fbstp
pop
insl
aad
push
mov
sti
rcr
jle
xor
mov
fstpl
movl
ss
adc
xlat
inc
inc
repnz
jecxz
push
jb
fisubrs
mov
or
call
and
sub
push
lret
int3
jl
lea
in
ljmp
stos
adc
pop
adc
push
mov
mov
js
dec
fldenv
mov
mov
daa
aaa
ret
jne
aam
sub
sub
or
xchg
push
shrb
jb
fnstenv
jae
lret
cmp
sbb
or
icebp
mulb
push
sbb
sbb
mov
or
stos
or
aad
aaa
mov
pop
mov
sub
push
mov
or
fwait
or
popa
nop
lret
insl
add
or
sahf
and
iret
sbb
pop
and
call
cmpsl
pop
jb
es
pop
in
mov
addl
fidivrs
pop
adc
fsubrl
cmpsb
push
push
xchg
ret
xchg
dec
cwtl
lods
fistpl
sub
lods
mov
scas
ret
lcall
push
lods
xor
testb
inc
lcall
lcall
sarb
imul
pop
xor
or
xor
xor
sub
mov
subb
xor
out
cmc
push
sbb
int
xchg
lret
push
and
cmpsb
push
out
mov
ja
je
ja
lods
push
mov
cmpb
xor
ret
mov
addr16
sub
add
dec
ja
pop
push
in
out
mov
decb
bound
stos
push
or
mov
int
fsubr
xchg
cvtdq2ps
in
aad
mov
mov
pop
and
adc
leave
ljmp
xchg
pop
xchg
cli
sub
movsb
int3
push
js
cs
push
mov
xchg
les
cmpsl
pop
fsubs
pop
adcb
sbb
add
cli
out
inc
or
lods
sub
adc
or
pop
dec
mov
aas
sti
movsl
mov
in
pusha
push
adc
xor
aaa
adc
dec
add
pop
inc
into
stos
lret
adc
inc
jno
in
or
cmp
and
sar
mov
stos
lds
mov
add
add
jae
and
rorb
dec
je
and
cmp
mov
mov
shr
push
push
mov
popf
sbb
lret
pop
sbb
popa
rolb
ja
mov
push
cmp
stos
pop
lahf
inc
cwtl
shld
es
sbb
mov
inc
xchg
shll
aaa
cs
mov
add
add
das
out
jmp
push
sub
pop
cmp
scas
sbb
cs
pop
jmp
lret
sub
mov
stc
mov
add
cmp
push
add
cmpsl
mov
pop
mov
iret
and
jl
adc
cmc
lea
and
dec
aas
es
mov
loopne
iret
dec
aam
cmp
ret
incb
lahf
ret
ja
mov
push
stos
in
into
insb
or
sub
cmpl
lcall
repz
test
sub
lret
jnp
mov
sub
es
das
mov
jg
ja
jmp
mov
inc
sub
xchg
arpl
pop
ds
cmp
rorb
mov
lods
sahf
or
and
sti
cmpl
jp
jg
test
adc
divl
xchg
outsl
mov
mov
rolb
out
loope
pop
jl
push
dec
inc
sbb
inc
imul
jae
add
and
decl
pushf
sbb
dec
lcall
daa
xchg
dec
insl
ss
adc
inc
imul
ficompl
outsl
push
or
xchg
hlt
loope
xchg
xchg
loopne
testl
call
push
xor
mov
jg
mov
dec
test
push
sti
imulb
out
mov
mov
xor
stos
push
push
or
or
inc
pop
gs
sarl
sbb
push
adc
aaa
inc
mov
arpl
mov
aad
test
iret
dec
in
imul
xchg
or
es
std
pop
xor
add
sar
repnz
adcb
pop
add
jmp
aam
fcomip
mov
int
jle
mov
or
or
pop
xor
daa
cmp
mov
and
jmp
mov
xchg
das
dec
push
adc
sbb
xor
fbld
scas
imul
mov
int
pop
mov
mov
scas
push
or
ret
aas
lds
dec
pop
imul
jnp
stos
fsub
and
inc
inc
cmp
mov
dec
jge
mull
fstps
inc
dec
leave
jge
inc
mov
add
cmp
dec
pop
pop
les
mov
xorl
adc
push
pop
loopne
dec
popa
sub
mov
mov
xchg
test
inc
aad
mov
mov
sarl
lea
pop
dec
and
movsb
mov
cmp
orb
es
push
pop
jge
dec
loopne
ss
sahf
cmp
insl
enter
sbb
add
fldlg2
xlat
xor
cmp
scas
inc
test
push
std
lods
aaa
imul
lcall
int3
loopne
mov
jl
jmp
call
stos
and
fiaddl
mov
push
mov
cmp
dec
stos
xor
movsb
cmp
push
dec
pop
mov
shl
scas
push
mov
mov
pop
mov
pusha
shrb
jge
fwait
ret
jle
mov
add
jg
dec
loopne
mov
scas
subb
popa
sub
insl
jl
and
jle
sub
jo
xor
test
xlat
adc
aas
adc
or
sub
fadds
lods
dec
push
cmpsl
add
lock
bound
sub
shlb
adc
ficoml
dec
sti
or
lods
lea
xchg
sbb
pop
test
test
jle
jmp
or
adc
mov
mov
dec
xchg
pop
mov
sub
or
in
lea
shlb
or
or
lods
pop
jae
and
inc
mov
hlt
push
xchg
push
adc
push
dec
pop
stos
mov
add
mov
in
sbb
cmp
div
lahf
gs
repnz
lods
mov
sub
test
cmp
jmp
mov
mov
or
xor
jmp
andb
xor
hlt
scas
icebp
jnp
mov
push
cli
mov
stc
aaa
pop
and
jle
inc
mov
sti
xchg
outsb
xchg
scas
lea
lea
fadds
addb
cs
into
movsb
imul
in
mov
insb
stc
jl
xor
arpl
jg
stos
imul
mov
mov
mov
inc
jae
dec
and
mov
out
fwait
cld
dec
add
cs
stos
jl
pushf
aad
in
dec
push
mov
jl
rclb
sar
cmp
mov
scas
decb
push
shrl
lahf
aad
sar
dec
xchg
jmp
xor
out
std
pushf
dec
sbb
add
out
mov
lret
lret
dec
pop
scas
mov
or
aam
jmp
jb
or
stos
sbb
lds
outsl
xchg
popf
pushf
test
add
xor
dec
call
insb
fs
push
fstp
arpl
jmp
ds
mov
mov
push
fcmovu
les
popf
xchg
or
popl
ret
imul
ret
test
cmp
inc
add
fs
and
adc
mov
or
hlt
fmull
test
je
rcrb
xlat
loopne
repnz
inc
xchg
cmp
popf
leave
lods
jge
mov
xchg
jmp
dec
push
sbb
adc
push
dec
xor
je
nop
adc
or
data16
jmp
xchg
jbe,pt
and
and
dec
ja
into
mov
test
gs
in
xchg
subb
push
bound
xchg
jbe
out
stos
ja
in
fimuls
js
loopne
vmovdqa
and
jmp
pop
xor
push
inc
es
fs
xchg
xchg
adc
mov
cmp
inc
inc
jnp
clc
adc
and
int
das
push
mov
imul
icebp
out
add
cmc
andl
repnz
sub
das
loope
or
xchg
sub
adc
mov
inc
cmp
inc
mov
ret
xchg
in
dec
xchg
or
push
aas
ret
dec
rcrl
lcall
lret
cmp
dec
sbb
xor
mov
jle
cltd
xchg
adc
adc
out
mov
cmc
lock
fs
inc
in
dec
shrb
xchg
aas
mov
ss
fwait
outsb
popf
movsl
lcall
sti
std
xchg
int
out
sub
test
test
cmpsl
outsl
icebp
loopne
stos
mov
xchg
lret
icebp
imul
lods
fsts
cmp
lock
xor
fidivl
jno
repz
idivl
fwait
pop
fmul
mov
xor
stos
enter
lea
xchg
imul
jecxz
adcb
xor
push
into
pop
push
dec
imul
mov
sub
jg
je
aas
lods
insl
xchg
scas
mov
scas
dec
jo
stos
sbb
negb
adc
push
jns
xor
and
or
xchg
mov
aaa
imul
outsb
cmpb
aam
sbb
rcr
mov
fldenv
rcll
js
xor
repnz
push
adc
rolb
test
xor
gs
inc
pop
mov
data16
cmp
jge
push
pop
lahf
add
lea
hlt
sbb
jo
jg
ljmp
call
repz
push
aad
cmpsl
mov
mov
pop
push
sti
dec
inc
fidivrs
push
add
jne
roll
add
loop
cmp
jecxz
arpl
mov
ss
nop
mov
xchg
add
ja
mov
add
out
sub
ljmp
mov
data16
test
testl
mov
js
mov
iret
mov
mov
lret
push
fs
iret
pusha
shll
xor
cmpsb
sub
cmc
imul
pop
repnz
mov
in
xchg
mov
mov
push
jmp
shrb
stos
pop
jmp
jmp
dec
data16
sub
jmp
adc
les
xor
inc
rorb
jbe
xchg
adc
and
pushf
jno
das
fwait
insl
push
icebp
inc
shlb
mov
punpckhdq
xchg
pop
add
aaa
addb
jbe
push
adc
subl
cli
addr16
xchg
hlt
in
cmp
ret
ret
loop
jl
mov
push
inc
xor
mov
shl
pop
sbb
loop
pop
xor
inc
movsl
movsb
xor
cmp
push
fs
mov
rolb
out
hlt
test
pop
bound
cmp
sbb
incb
add
and
push
jge
lods
jne
jb
fisttpl
xor
stc
cmp
daa
xor
push
mov
fs
cmp
stos
int
and
mov
gs
add
jbe
sbb
or
std
call
mov
outsl
cli
cs
jno
int
repnz
push
in
push
xor
cmpsb
inc
sarb
add
insl
cmpsb
mov
dec
jo
jecxz
shrl
int
or
pop
cmp
pop
nop
xchg
xchg
icebp
xchg
pop
and
adc
sarl
leave
pusha
ret
test
sbb
mov
cli
sub
jne
mov
sbb
test
lods
sub
out
or
sub
fsubs
outsb
mov
inc
fbld
in
jle
ds
jmp
fstpl
jg
nop
mov
cld
fsubl
xrelease
scas
sarb
pop
clc
xchg
ret
inc
mov
jp
xlat
pop
mov
pop
adc
and
imul
and
lock
aaa
fstpt
xchg
push
jo
iret
mov
das
cmp
jmp
inc
and
mov
iret
cld
inc
xchg
add
jl
fs
mov
jnp
orb
push
push
gs
mov
sub
aam
push
mov
inc
cmp
mov
or
ds
push
arpl
jle
idivb
ret
movsb
inc
in
cmp
jle,pt
mov
decb
mov
sarl
in
rorb
inc
ret
sub
loope
loop
inc
pushf
push
or
or
and
adc
add
out
inc
ret
addr16
or
xchg
xchg
inc
push
sbbb
push
jae
push
mov
inc
and
pop
push
adc
sub
mov
je
and
cmp
push
adc
and
pop
testl
jno
mov
xorb
outsl
pop
xor
pusha
scas
sub
stc
mul
dec
cli
movl
push
mov
adc
aas
push
xchg
dec
fists
into
sbb
loopne
lret
or
daa
imul
and
js
data16
mov
aam
adcb
daa
sahf
lods
outsl
sbb
push
adc
les
or
divb
jb
in
test
test
loopne
outsl
data16
pop
xor
push
jae,pn
clc
xchg
clc
xchg
xlat
add
in
int
sbb
adc
push
mov
das
nop
pop
stos
mov
or
xchg
ds
xchg
shr
sbb
jbe
icebp
dec
bnd
and
add
outsl
shll
jno
jno
stc
adc
lock
push
jle
shlb
add
and
test
add
add
mov
dec
push
addr16
xor
inc
add
leave
scas
cmpsl
pop
push
arpl
shr
mov
mov
test
sbb
mov
pop
aaa
cld
addb
repnz
adc
insl
or
mov
into
cwtl
mov
push
loopne
xchg
js
sbb
or
mov
pop
xlat
cmp
daa
pop
add
sbb
cmpsl
ret
test
sub
outsb
mov
lret
push
cmp
and
adc
xchg
ret
lods
rolb
xchg
adcb
pop
cli
add
add
inc
lods
sahf
sub
inc
add
or
insb
xchg
pop
dec
xor
adcl
lret
adc
lret
insb
out
imul
dec
scas
pop
les
enter
imul
adc
sub
adc
mov
mov
or
sbb
es
xor
call
das
scas
out
fimull
cltd
inc
sub
pop
xor
iret
cmp
and
mov
xlat
mov
sub
inc
inc
outsl
stc
lods
mov
push
test
das
lds
iret
mov
xor
les
dec
adc
push
dec
lods
cwtl
std
cld
sub
aas
pop
repz
adc
in
sub
mov
icebp
cld
mov
movsb
jbe
lret
pushf
jnp
mov
repnz
pop
xchg
inc
add
pop
cs
fsubrp
xchg
lods
cmpsb
jle
mov
or
sbb
or
mov
or
cmc
pop
ds
xlat
mov
outsl
int3
outsb
fmuls
out
adc
fmull
aad
popf
pop
scas
arpl
mov
jbe
sub
out
lods
or
jmp
fbstp
pop
mov
lahf
mov
or
fisubl
mov
jae
jnp
sbb
stos
cld
outsb
push
push
dec
mov
mov
int3
cld
iret
push
lahf
js
testb
push
mov
jo
xchg
shrl
push
lret
push
mov
lahf
fs
ret
cmpsb
push
aaa
dec
add
je
inc
adc
xchg
mov
je
cmp
outsb
pop
or
mov
push
inc
movsl
leave
add
jle
ss
push
push
inc
xchg
add
movsb
cmpsl
imul
lahf
iret
lret
lahf
push
cmp
xor
ret
lds
test
mov
inc
pop
ret
push
dec
mov
or
int
rcl
cmp
jno
repz
out
mov
pop
not
int
cs
ret
cmp
cmp
xchg
inc
fdivs
inc
jno
or
out
jo
aad
enter
push
into
adc
into
outsb
mov
mov
add
out
or
idiv
adc
les
ljmp
cmp
les
je
fdivl
push
lret
adc
loope
jmp
push
adc
popa
jno
es
popf
and
ret
cmp
test
shr
or
ljmp
movsl
xchg
add
out
or
lcall
jp
fwait
sub
leave
mov
jo
lret
outsb
iret
test
mov
add
add
fcomps
jae
jg
pop
push
nop
xchg
adc
jno
add
aaa
sbb
jge
repnz
aaa
or
arpl
push
push
xor
repnz
out
pusha
aad
int
sbb
lahf
jo
dec
int3
lret
fwait
rcr
rclb
pop
lahf
fstp
or
shlb
adc
lahf
sbb
int
lcall
test
mov
nop
in
xchg
and
cmc
into
and
test
pop
push
jno
add
stc
jae
mul
or
loop
cmpsb
and
push
arpl
pop
jmp
mov
jl
movsl
in
cwtl
rcr
ds
iret
cltd
adc
sub
mov
icebp
cli
jbe
jp
pop
sbb
popf
adc
mov
inc
adc
xor
inc
movsb
cmpl
fistpl
aaa
mov
orl
dec
jae
enter
add
lret
sbb
push
mov
adc
outsb
xchg
pop
cmc
scas
xchg
js
inc
andl
outsl
daa
les
jo
addr16
bound
lret
clc
jle
jae
sub
das
push
sub
imul
iret
dec
rorl
push
or
arpl
mov
bound
jno
call
addr16
xchg
xchg
adc
addr16
push
outsb
leave
loopne
jbe
inc
mov
popf
xchg
int
outsb
pushf
push
push
ds
pusha
mov
sub
mov
xor
xorl
ja
push
add
lods
mov
or
out
xchg
movsb
xchg
nop
xchg
lods
ljmp
test
ret
sub
sbb
mov
stc
ftst
jae
sahf
xor
mov
ss
inc
adc
das
ja
movsb
adc
xor
mov
fs
rclb
scas
mov
push
xchg
ss
sub
in
jl
pusha
or
inc
iret
jb
daa
movsb
adc
jns
out
xor
je
add
jge
clc
pop
test
out
gs
pause
or
std
adc
pop
mov
hlt
cmp
jge
or
xchg
cli
inc
test
loop
clc
and
stc
arpl
repnz
and
mov
lahf
add
loopne
and
insl
sub
pop
mov
inc
inc
jmp
push
std
mov
pop
out
pop
popa
orb
mov
imul
xchg
cmp
repnz
lahf
cmp
and
mov
xor
into
mov
add
test
imul
pop
cmc
mov
jno
and
lods
lcall
dec
mov
xor
push
cmpsb
cmp
add
fdivrp
std
cmp
mov
ficompl
sbb
cmp
push
scas
add
or
cwtl
lcall
fistpl
mov
lret
repnz
jae
mov
icebp
mov
sbb
in
hlt
push
mov
sbb
pusha
jb
int3
movsb
dec
jmp
inc
stc
sbb
call
mov
aam
mov
in
filds
push
nop
insb
dec
repz
out
pushf
test
roll
cwtl
outsb
call
bound
rolb
mov
dec
adc
and
cmp
int
lds
mov
jne
push
ret
add
inc
or
aam
out
pop
popa
cwtl
jge
ds
mov
xchg
popa
dec
aas
adc
dec
pusha
ret
andl
cltd
dec
int
mov
push
pop
scas
inc
mov
push
fisubl
mov
out
push
les
xchg
or
xchg
test
push
jmp
adc
jb
fsub
addr16
pop
dec
inc
inc
sub
imul
xchg
xor
dec
cmp
xchg
insl
sbb
cmpsb
jno
pop
adcb
adc
pop
mov
pop
cli
repnz
sub
adc
iret
cli
pop
das
sub
pop
add
jmp
pop
adc
adc
cld
bound
adc
push
pop
imul
int3
and
pop
nop
mov
fdivrp
and
std
fstpl
or
and
mov
rorl
icebp
dec
ret
pop
cmpsb
hlt
rcll
pop
ds
inc
out
push
inc
xchg
mov
arpl
cmpsb
and
inc
fisubl
adc
xor
jmp
mov
xchg
mov
clc
fs
fwait
push
and
dec
lods
xor
lods
xor
mov
or
push
sbb
insb
sub
iret
pop
jle
in
fdivrl
jge
cli
add
shr
cwtl
aas
lds
fldcw
push
fnstcw
std
mov
lahf
call
push
xchg
into
cmp
mov
addr16
dec
insl
or
movsl
sbb
lahf
dec
insl
ret
orb
mov
mov
mov
repz
mov
iret
jecxz
filds
xchg
aad
les
cs
sbb
stc
int3
dec
mov
call
sub
bnd
out
out
fs
inc
notb
or
fisubl
xor
xor
jl
mov
rcr
and
mov
push
inc
add
test
xchg
pop
aaa
aam
inc
mov
outsb
jbe
mov
pop
and
call
sub
ss
aad
push
out
data16
add
out
jo
fwait
cmc
jge
aaa
pusha
cmp
data16
arpl
push
mov
dec
lock
jno
mov
push
xor
sub
lds
dec
dec
pop
dec
inc
jo
mov
cmp
das
ret
adc
ficoms
scas
lret
test
jle
sti
loop
cld
imul
xchg
daa
add
stos
pop
pop
nop
sbb
loopne
frstor
pop
lock
mov
jecxz
dec
aad
mov
sub
xor
popl
fwait
dec
jle
leave
loopne
andb
addr16
cmp
in
or
scas
out
ficompl
sarb
nop
cmp
rcl
pop
bts
cmc
mov
push
xor
ds
std
adc
push
mov
inc
ret
jb
push
mov
test
add
mov
and
cs
mov
mov
or
jmp
pop
test
mov
adc
cmp
fs
ss
mov
mov
andl
test
pop
xchg
das
repz
repz
sub
out
aaa
negl
mov
cmp
inc
arpl
lcall
inc
pop
jecxz
icebp
push
lea
ja
xchg
sub
sbb
movsl
mov
cwtl
inc
jmp
hlt
sub
mov
mov
xor
jo
push
xor
mov
loope
int3
out
mov
fnstsw
repz
push
push
out
jo
rorl
sbb
hlt
sub
in
inc
pusha
scas
sub
or
xchg
mov
loopne
stos
jl
loope
out
jg
scas
aas
push
cmp
aam
shr
jo
mov
test
loop
fstl
mov
pushf
lea
lea
cwtl
pop
jne
jnp
mov
or
sub
lret
sub
push
js
stos
mov
shlb
stos
pop
mov
in
or
pop
nop
mov
fldpi
in
mov
shlb
inc
jnp
je
int3
sbb
jecxz
push
loopne
data16
sarl
in
aaa
sbb
push
fisttps
jbe
adc
ret
cmc
push
fldt
dec
stos
xor
rcrb
gs
xor
jl
adc
push
shrb
xor
and
pop
lods
push
push
jl
test
adc
scas
cmp
test
pop
mov
cmpsl
iret
ds
xor
scas
fdivrs
arpl
arpl
icebp
lds
add
sub
xchg
mov
test
and
cwtl
sahf
push
sub
scas
inc
mov
jmp
fwait
sbb
stos
clc
push
mov
cld
idiv
in
mov
fiadds
in
or
ret
mov
lods
std
dec
xchg
mov
sub
pushf
repnz
cmpsl
movsl
push
cmp
xchg
dec
outsb
mov
push
cs
xchg
inc
outsb
out
cmp
pusha
pop
sub
ds
add
negl
loopne
lahf
jp
and
or
gs
adcl
mov
xor
inc
and
inc
or
aad
xchg
js
cltd
mov
mov
ja
into
pop
adc
inc
test
cs
enter
stos
adc
repnz
dec
insb
mov
sub
in
lea
sub
pop
xchg
es
and
fs
hlt
out
imul
mov
sbb
mov
jle
stos
test
push
lret
cmpsl
mov
lock
push
jnp
out
cwtl
mov
xchg
jb
and
inc
lahf
test
paddusb
cwtl
mov
test
push
jle
xchg
lds
aas
enter
loope
cmp
xchg
out
ja
or
and
mov
arpl
scas
xor
movsb
pop
fsubrl
pop
mov
addl
test
cmp
dec
xor
aaa
dec
mov
sbb
jle
xchg
xchg
mov
data16
cmp
negl
cmc
cmp
pop
push
mov
dec
and
fisubl
pop
ret
cmp
ss
push
fistpl
adc
jno
in
or
ret
std
jns
jge
xchg
cmp
andb
test
add
out
mov
push
iret
movsb
dec
lods
aaa
mov
sbb
ret
int
jg
loopne
fdivp
shl
stos
inc
insb
pop
push
imul
sbb
cmp
pop
pop
mov
jp
fcoml
imul
enter
daa
gs
dec
das
inc
mov
je
cmpsb
adc
dec
out
les
fnstenv
cs
addl
dec
push
push
sti
or
mov
adc
into
lret
push
or
jnp
outsl
fcoml
addb
push
push
lret
shll
adc
pushf
mov
jae
gs
jle
adc
cmp
fsubp
imul
mov
adc
jno
pop
std
ror
or
mov
or
shlb
sarl
das
jo
shl
js
xor
jle
pop
xchg
cmpb
ret
xor
stos
mov
jae
mov
jno
push
push
pop
cmp
sahf
jno
adc
ja
add
adc
adc
out
jo
mov
sahf
and
mov
out
jge
lds
rcrb
lds
stos
mov
daa
pop
in
rorl
cmp
test
cltd
adc
xor
fidivrs
push
mov
in
and
pop
test
cltd
shr
mov
pop
mov
jg
push
mov
inc
cmp
mov
inc
cmp
add
sub
mov
push
sbbl
jo
cmc
int3
mov
mov
xor
cmp
sub
xor
dec
inc
lock
notl
cmp
mov
rep
mov
out
js
dec
jge
push
addr16
xchg
addr16
repnz
sbb
cmp
jecxz
jo
jmp
sarl
or
aad
add
fwait
xchg
adc
mov
dec
es
cmp
mov
ljmp
mov
or
push
cs
ret
loop
jmp
movsl
xchg
das
out
scas
pop
and
gs
cmp
movzwl
repz
and
dec
push
cmp
or
sbb
push
dec
push
mov
imul
add
icebp
and
loope
xchg
cmp
push
loope
fldl
push
out
jbe
gs
xchg
mov
cwtl
jl
mov
into
adc
pop
cmp
mov
dec
pop
ja
enter
push
dec
cld
or
lods
push
test
daa
xchg
cld
mov
xchg
popf
insl
pop
push
jle
in
cmc
ret
xchg
mov
ret
dec
repz
inc
sub
mov
lock
imul
fwait
out
cmc
fldt
ljmp
cmp
mov
push
dec
cmc
test
rcrb
jbe
loopne
mov
xor
inc
nop
sbb
cwtl
cmp
popf
imul
rcr
xchg
push
push
sbb
aam
dec
mov
daa
mov
orb
inc
ds
test
ja
add
and
xlat
das
nopl
inc
scas
or
cs
cmpsl
out
subps
sahf
cmp
mov
xor
or
pushf
xor
testl
bnd
pushf
jp,pt
test
inc
mov
stc
cmp
cmpsb
adc
sub
je
xor
adc
xchg
add
jbe
lods
dec
call
and
std
stos
add
aas
xor
popa
or
add
and
test
push
jne
call
out
and
int3
mov
mov
lcall
jle
jg
pop
sbb
cli
push
outsb
popa
mov
sbb
cld
pandn
iret
cmp
dec
push
cmpsb
dec
push
cmp
or
pushf
cmpsb
ja
push
mov
imull
mov
cmp
filds
sub
out
sbb
into
mov
adcl
and
adc
and
xchg
push
mov
and
shl
ret
test
pop
cltd
mov
xor
lahf
shrb
std
mov
push
mov
cmp
into
rcrl
mov
mov
jmp
negl
ds
das
mov
rcrl
inc
dec
ljmp
push
loopne
jno
mov
jns
sbb
dec
pop
fildl
mov
mov
dec
xchg
mov
inc
mov
iret
iret
mov
sahf
test
add
jmp
inc
sbb
insl
scas
mov
lods
movsb
mov
xor
sbb
add
pop
xchg
jns
push
ja
pop
loopne
mov
and
sbb
jno
inc
cmp
cwtl
lds
mov
push
xlat
dec
es
and
out
and
lock
jae
dec
push
rorb
lea
xor
leave
push
cmc
inc
cld
pop
popf
sbb
push
icebp
inc
dec
aaa
jge
arpl
lret
sbb
xor
or
and
xlat
inc
fistl
sub
adcl
js
jecxz,pt
xor
ja
js
dec
sub
imul
or
rcl
sahf
and
pop
shlb
inc
mov
icebp
inc
in
or
fnsave
les
pop
pop
in
loopne
dec
out
sarb
push
fwait
lret
andb
lret
fsubrl
mov
add
cmp
mov
xchg
ja
bound
outsb
xor
mov
xor
frstor
inc
dec
jp
jge
push
mov
jbe
mov
mov
push
xchg
sub
mov
xchg
dec
loopne
data16
cwtl
loopne
repnz
fs
mov
sbb
loopne
xchg
xchg
mov
repnz
mov
adc
test
ror
mov
mulb
sbb
add
xchg
in
fwait
inc
arpl
push
inc
adc
pop
sbb
dec
pusha
bound
fnstcw
cmp
xchg
repz
enter
push
test
push
or
sahf
in
scas
idiv
sti
add
jge
dec
jle
jnp
jg
or
lock
gs
shlb
jnp
cmp
pop
jo
mov
push
cld
inc
push
pop
mov
xchg
jo
pop
loope
je
jp
movsb
stos
jnp
test
inc
cmpsl
imul
inc
adc
adc
pop
lcall
bound
pop
stos
int
jp
out
cmp
stc
mov
sbb
fildl
jno
jnp
fdivrs
push
lret
in
scas
xchg
fdivl
sub
sub
je
or
adc
subb
pop
or
fwait
and
sbb
cwtl
cmp
js
dec
into
mov
and
sbb
fsts
nop
mov
fistpll
jge
icebp
jmp
nop
in
cmp
xchg
push
mov
or
stc
or
outsb
sbb
jl
lock
outsb
aam
adc
fcoms
push
mov
xchg
cwtl
setno
xchg
jl
clc
cs
sahf
xor
mov
push
add
pushf
sub
mov
ret
push
lods
out
mov
push
in
stos
sbb
popf
inc
movsb
add
inc
repz
adc
shll
xchg
jp
daa
pop
jb
add
cmp
cmp
add
aad
jle
pop
clc
rolb
jb
mov
cmp
cs
mov
jo
or
shlb
jbe
push
test
add
pop
jo
mov
pop
test
sbb
cmp
cmpsl
or
f2xm1
cmp
imul
jl
xchg
das
addr16
mov
and
je
daa
aam
push
lret
jp,pn
decb
xor
push
fcoms
dec
idivl
add
in
adc
pop
outsl
lahf
xchg
out
lea
rcl
push
mov
pop
sub
addr16
push
insb
outsb
jbe
int
dec
sar
mov
out
out
and
cli
pop
sbb
jo
int
mov
push
sbb
popa
and
jno
insb
add
imul
fwait
pop
sbb
xchg
add
cmc
pop
lcall
fwait
in
cwtl
adc
jmp
xchg
fnsave
adc
aaa
jns
call
jp
mov
jg
out
fstpt
push
adc
fsubp
bound
jecxz
push
xorl
sub
jg
aad
mov
stos
aas
in
aas
addr16
clc
pop
pop
sbb
sbb
pop
sbb
aaa
cmc
dec
cmp
pop
xor
push
pusha
fldenv
popf
jecxz
les
adc
cld
sahf
out
and
test
push
mov
ds
push
and
cmpb
push
iret
lods
stc
xchg
inc
inc
mov
leave
ret
fnstenv
repnz
and
stc
movl
rolb
repnz
in
das
mov
mov
pop
jbe
in
lret
dec
iret
movd
bswap
pop
insb
cmc
sub
mov
adc
cmp
out
pop
cmp
pusha
pop
pop
orb
pusha
lret
mov
push
je
pop
in
lret
mov
add
nop
icebp
sbb
fcmovb
inc
push
add
mov
adc
and
jge
stos
jle
outsl
out
or
adc
xchg
pop
mov
dec
xor
xchg
call
push
outsb
mov
xor
dec
mov
frstor
inc
cwtl
fstpl
int3
faddl
pop
clc
cmpsl
pop
adc
and
sti
jl
mov
dec
dec
and
mov
add
fnstenv
leave
mov
neg
aaa
stc
mov
add
movsb
xor
out
and
or
dec
mov
add
sarl
mov
stos
lds
outsb
lock
push
xchg
bnd
loope
pop
adc
lods
push
mov
xor
out
scas
test
andb
pop
mov
push
popa
adc
pop
repnz
rcrl
sbb
ret
sbb
push
cmp
in
adcb
int3
mov
outsl
dec
xchg
mov
fbstp
and
orl
out
jle
out
icebp
mov
dec
pop
xchg
or
inc
jae
push
pop
pop
xchg
cmp
sub
xchg
adc
movsl
mov
fimull
lret
dec
lds
mov
lahf
mov
dec
repz
cwtl
and
gs
jg
add
add
push
or
jle
enter
xchg
mov
jmp
out
add
inc
stos
mov
inc
and
add
nop
push
add
push
popf
in
sub
incb
stos
sbb
dec
add
imul
data16
shll
xor
stos
mov
fnstcw
mov
incb
mov
ja
xchg
pushf
push
ds
jmp
loope
aas
insb
hlt
jbe
pop
pop
ret
xchg
pusha
dec
cs
xchg
ret
std
jecxz
mov
dec
add
sub
orb
or
in
pop
rorl
nop
dec
sub
mov
movsl
ja
dec
inc
pop
movl
cmp
inc
out
test
mov
ret
mov
inc
nop
fs
cmp
cmp
mov
scas
jns
sbb
or
fidivrl
andb
add
dec
inc
shlb
cwtl
sbbb
push
insl
decb
fisttps
stos
jno,pt
add
jnp
add
xchg
lret
sti
xchg
in
mov
loope
push
mov
adc
hlt
mov
pop
bound
testb
mov
lods
adc
sub
pop
cmpsl
dec
rolb
mov
xor
pop
fsubrs
or
nop
dec
sbb
inc
loope
std
mov
cmp
and
std
dec
or
mov
cmp
jecxz
pop
clc
pop
in
adc
cmp
dec
pop
mov
sahf
mov
test
jg
aad
pop
loope
ss
scas
or
sub
and
int3
push
shrl
jns
fstpt
in
call
mov
push
aad
sbb
pop
adc
xor
or
cmpsl
pop
xlat
dec
addr16
insl
cvtpi2ps
out
int3
dec
stos
add
shr
adc
pop
push
pop
xchg
out
xchg
push
pushf
jb
mov
insl
stc
out
cmp
popa
cmp
out
push
or
add
xchg
adc
pop
xchg
sbb
cli
or
sahf
bnd
inc
lods
or
pop
and
push
sub
jp
dec
jb
movb
cmpsb
scas
leave
push
pop
hlt
lods
out
sub
push
es
leave
std
out
faddl
mov
lods
mov
jmp
arpl
jl
fsub
pop
and
es
cs
adcl
adc
dec
lods
popf
xlat
in
mov
mov
aam
popa
mov
enter
mov
jmp
xchg
aam
out
mul
leave
addr16
xchg
mov
jno
test
mov
jl
mov
fprem1
aad
xor
lahf
leave
faddl
dec
je
or
mov
vpsubusb
sbb
das
dec
imul
jne
pop
lds
insl
divl
and
neg
xchg
cmp
sbbl
pop
sub
mov
out
xchg
pop
xchg
sub
ja
sahf
sbb
and
daa
lcall
push
sub
fucomp
cs
inc
loopne
sub
xchg
jns
enter
test
inc
cmpsb
fidivrs
leave
push
inc
push
shll
push
dec
fwait
call
mov
sti
test
insb
fwait
mov
std
lods
cmpsb
jb
xlat
or
cli
repz
out
inc
mov
jecxz
fwait
inc
sar
icebp
jnp
adc
insb
lods
mov
jge,pn
lcall
jnp
sbb
ret
or
mov
loopne
scas
mov
movsb
lds
dec
push
movsl
pop
mov
fimull
jo
fistpl
push
mov
jbe
movsl
push
xchg
addr16
ja
fstpl
ss
pop
decl
lea
ret
out
or
lahf
scas
leave
or
push
aaa
popa
push
push
dec
mov
adc
ret
dec
das
in
mov
jmp
inc
add
repz
das
ss
pop
push
leave
xchg
push
jo
sub
pop
mov
sub
cltd
inc
inc
push
cmc
mov
dec
mull
adc
daa
outsl
jnp
mov
push
cmp
repz
cmp
jno
mov
jmp
ljmp
adc
mov
test
mov
popf
cmp
cld
popa
mov
test
popa
repz
pop
add
stc
sub
sbb
addl
jns
jns
cli
push
scas
jns
sar
sbbl
test
les
inc
int
mov
inc
movsl
mov
xor
test
xor
mov
jle
loopne
or
sbb
mov
lds
fiaddl
adc
arpl
outsb
lods
xchg
inc
imul
add
fistpll
arpl
sub
xor
mov
mov
dec
push
xchg
pop
mov
push
repnz
inc
aad
lock
in
sbb
and
mov
pushf
xor
jge
adc
mov
insb
mov
pop
or
rol
jl
xchg
mov
sub
add
mov
adc
push
mov
daa
push
adc
jle
ror
or
push
lret
das
iret
inc
inc
push
sbb
mov
aad
lods
scas
cmpsb
notl
and
cltd
lock
pop
sbb
sbb
fstpt
push
fwait
shrl
sahf
jno
xor
lcall
and
aas
imul
fidivs
adc
and
clc
mov
mov
sbb
mov
aas
push
inc
addr16
or
pushw
sbb
xchg
rcr
popa
daa
sbb
jl
sti
mov
dec
out
push
jl
jge
in
lods
gs
mov
bound
pop
pop
mov
cmp
sub
adc
aas
push
call
mov
pop
push
jne
cltd
adc
xchg
and
mov
enter
bound
and
cmp
mov
mov
aaa
inc
push
insb
inc
divl
stc
outsb
inc
adc
lock
in
mov
imul
xchg
cmp
and
aas
std
adc
pop
jnp
jmp
and
mov
cmpsb
dec
daa
xchg
jp
push
pop
scas
ret
xorb
test
test
sti
fmull
xor
loop
test
xor
int3
movsl
int
inc
stos
fs
cmp
and
and
in
fs
jns
subb
out
mov
mov
lods
in
push
xor
sbb
xchg
in
ficompl
in
and
xor
out
es
enter
call
xchg
inc
xchg
cli
pusha
sub
leave
sahf
fs
shlb
or
jge
sub
aaa
js
push
icebp
out
xor
mov
gs
lcall
pop
hlt
repz
mov
or
test
enter
lods
mov
jg
add
loop
js
push
dec
loope
dec
xor
xor
lcall
xorl
jnp
rcl
js
adc
cld
mov
cs
iret
pop
ds
out
rol
fwait
jl
or
call
stos
and
sti
jmp
cmpsl
sahf
cmc
pop
jae
sbb
cltd
pop
adc
dec
and
sub
or
fisttpl
xor
inc
test
mov
stos
add
hlt
adc
lds
mov
outsb
test
dec
mov
fldl
adc
cwtl
repz
dec
in
jo
repnz
xchg
cmpsl
nop
and
pop
int
aas
jno
popa
jle
ror
mov
fnstsw
mov
outsb
test
ds
add
jg
xor
les
adc
pushf
aaa
mov
movsb
popf
cmpsl
outsb
xor
and
cmp
sbb
jl
andb
dec
sbb
lea
pop
movsb
and
pop
scas
lock
jp
xchg
cs
mov
leave
fmul
xchg
repnz
mov
js
lea
out
jno
mov
mov
xchg
test
push
fdivrl
notb
dec
adc
iret
or
out
xchg
mov
sub
jp
fcmove
ret
add
add
shrb
xchg
scas
aad
shrb
stc
orb
mov
sub
imul
xor
push
xor
rcll
cmp
pop
mov
push
or
test
ljmp
ljmp
push
les
push
cmp
loopne
push
cmpsl
adc
pop
inc
std
inc
stos
sub
mov
cmp
ret
cmp
adc
dec
mov
les
fcoms
out
lret
out
je
out
and
and
push
rorb
cmp
outsb
add
jge
loop
dec
inc
cli
dec
pop
sbb
mov
lds
ficompl
xchg
fcomi
movsl
fcomi
mov
enter
and
rcll
jbe
inc
dec
rcr
clc
cmp
jnp
icebp
icebp
and
adc
sub
orb
dec
out
popa
adc
add
std
cmp
xor
xlat
pmovmskb
jo
add
sub
dec
push
lds
andb
outsb
arpl
daa
out
data16
mov
inc
popa
mov
mov
and
mov
adc
push
lock
jecxz
out
popf
xchg
pusha
and
out
movsl
fnstsw
xchg
jmp
imul
xlat
cmp
mov
ja
mov
adc
ds
sbb
sub
or
mov
and
mov
fwait
jb
or
pusha
ret
pusha
cmp
mov
mov
testb
clc
js
mov
movsl
sub
subl
insb
inc
jb
sub
or
sub
test
pop
in
dec
push
adc
mov
xor
pop
addr16
stc
push
push
inc
ljmp
in
js
xchg
iret
addr16
xor
inc
push
sub
cmp
fwait
in
out
fs
mov
add
cmp
in
xchg
xor
pop
inc
jmp
cld
stos
pop
dec
push
mov
cmc
xchg
cs
adc
stc
xchg
mov
pop
inc
jle
stos
dec
xchg
hlt
cs
push
mov
ret
xor
xchg
idivl
loope
push
mov
xor
mov
mov
in
mov
adc
stos
ds
sbb
js
lret
sub
out
xor
mov
xlat
lret
aad
rol
in
es
sbb
or
xor
out
push
fsubrl
sahf
pushf
loopne
add
push
sub
jg
xchg
scas
js
push
jbe
in
mov
js
aas
loope
mov
xor
adc
ds
lahf
mov
fnstsw
ret
mov
push
negb
dec
out
int
nop
je
es
jbe
jae
adc
shrl
popa
iret
mov
lcall
mov
repnz
cmpsl
outsb
imulb
jl
aam
stos
cltd
xchg
xchg
sub
fsubrp
cmpb
mov
stos
xchg
stc
dec
mov
sub
leave
loope
out
cmp
xor
sbb
adc
outsl
test
test
add
fs
inc
mov
int3
daa
push
mov
lret
ds
push
stc
lret
add
push
sub
adc
imul
push
mov
jnp
imul
es
dec
mov
xor
inc
or
into
aaa
push
xchg
xchg
rorl
jno
cmp
push
pop
cld
fistps
or
cmp
repz
xchg
sub
ljmp
mov
jge
mov
int3
fldcw
out
mov
ljmp
jb
testb
fmull
mov
mov
pushf
and
loop
int3
add
dec
adc
cwtl
and
pop
xchg
aas
ficompl
or
mov
mov
jbe
dec
mov
push
mov
dec
sbbb
cmpsl
adc
rcrl
pop
pop
in
js
dec
add
stc
sub
or
subl
pushl
jge
fldt
push
lds
xchg
fisttpl
inc
push
xchg
sbb
push
mov
imul
sbb
fldenv
adc
add
dec
jnp
push
les
mov
sti
or
sub
mov
push
xchg
jmp
pop
lahf
mov
sbb
mov
fcmovnbe
add
jno
mov
xor
inc
insb
push
insb
and
in
repnz
repz
and
jae
sbb
scas
sbb
sbb
sbb
mov
cltd
test
outsb
dec
imul
jmp
loope
pop
push
out
adc
movsl
fidivrl
fisttpl
movl
pusha
jle
mov
cmpsb
or
daa
inc
loopne
out
js
insl
scas
arpl
and
dec
imul
stc
test
xchg
sti
fidivs
inc
sub
scas
jne
std
jne
lock
inc
push
test
xchg
xchg
pop
pop
inc
ret
aaa
sahf
repnz
rol
sub
xor
std
add
lea
xchg
aad
insb
ljmp
cmp
xor
sahf
fsubrl
and
js
cmp
je
push
adc
nop
xchg
dec
cmp
psllw
push
sbb
fdivrs
sbb
mov
pop
jnp
hlt
xor
mov
mov
push
hlt
adc
movsb
inc
movsb
lods
out
push
xchg
dec
cmc
jns
outsb
mov
enter
cmp
sbbb
dec
sbb
mov
pop
in
xor
in
lea
jne
lret
mov
sub
mov
inc
mov
adc
adc
fnsave
xorb
insl
int3
push
xchg
mov
cmp
xor
adc
je
mov
in
dec
mov
int
dec
mov
cmpsb
fidivrl
inc
sbb
sbb
rcl
pushf
lods
add
pop
cmp
sub
mov
mov
mov
adc
sub
cmpsl
in
sbb
stos
je
test
mov
inc
or
lahf
dec
xor
inc
call
xor
sub
dec
insl
add
lea
pop
mov
and
jne
jnp
mov
mov
ja
inc
xchg
es
test
cmpsb
cli
testl
xlat
or
imul
adc
and
daa
stos
xlat
sbb
into
add
mov
nop
sub
je
pop
xor
hlt
rclb
sub
sbb
leave
cmpsb
imul
sahf
out
out
pushf
orl
inc
cmp
out
loopne
enter
mov
inc
int
sub
mov
add
mov
lods
lea
cmp
movsb
inc
xor
adc
popf
xor
in
xor
repnz
out
into
ret
out
movl
push
daa
and
outsl
cmc
cld
dec
jmp
xchg
pop
mov
lock
push
push
out
mov
lock
pop
pusha
xchg
dec
aaa
in
push
ja
hlt
dec
cmp
cmp
test
fdivrs
pushf
popa
mov
pop
push
sub
pop
pop
outsb
sub
ffree
add
roll
sbb
aam
cmp
pop
lcall
mov
pop
clc
pop
or
jmp
daa
enter
sti
stc
stc
call
mov
pushf
xor
fcmovb
mov
jno
xor
mov
and
ficoml
jae
add
and
iret
pop
lock
rclb
cmp
inc
xor
pop
xlat
cmp
out
jmp
mov
mov
sub
mov
rep
test
sbb
das
int
in
push
pop
xor
lret
dec
js
pop
ds
or
and
mov
push
pop
lea
pop
push
hlt
pop
int3
mov
jae
push
cmp
add
ljmp
xchg
push
adc
pop
icebp
dec
and
pop
jl
inc
xor
jae
mov
jb
mov
pop
pushf
out
pusha
loopne
jge
ret
inc
mov
mov
scas
sub
rorl
pop
test
out
ljmp
ret
outsl
loope
popa
lock
imul
mov
in
xor
pushf
push
scas
movsb
lods
jmp
lock
cmpsb
push
ljmp
adc
mov
jo
mov
rorb
jmp
fcmovnbe
mov
add
xchg
into
pop
pusha
mov
in
cld
push
sub
pop
daa
pop
insl
jle
pop
sub
outsb
shl
inc
int
mov
enter
mov
aaa
loopne
jp
push
fabs
pop
dec
jg
push
insb
iret
jns
in
ret
dec
mov
xor
mov
stc
fdivrs
jecxz
fistpl
dec
push
pop
jb
jl
and
push
fnstcw
mov
sti
hlt
scas
push
outsb
push
into
pop
and
jnp
mov
jne
jb
lods
outsb
adc
pop
adc
loope
nop
xchg
lret
idivb
inc
pop
ficompl
imul
xor
sbb
jns
xor
jl
jnp
clc
cmp
ret
bound
push
dec
lret
xor
inc
cmpsl
movsb
sub
pop
sti
xor
xchg
jbe
push
or
xor
js
aad
daa
repnz
adc
mov
mov
pop
je
int
inc
and
dec
mov
jne
lret
and
or
fsubs
jle
pop
rolb
stos
pop
push
rorb
fucomi
cltd
push
nop
imul
push
push
jo
push
shlb
push
mov
in
and
mov
inc
lds
mov
pop
or
mov
mov
or
test
xor
xlat
push
cmp
insb
sarl
call
mov
or
lret
sub
adc
cltd
sti
pop
push
mov
iret
mov
aam
movsl
push
fisttpll
inc
and
pop
push
add
inc
mov
pop
ret
and
fisubs
xor
or
cli
dec
fwait
shrb
out
push
jmp
mov
jnp
xorl
adc
inc
outsl
outsb
cmc
adc
jge
mov
sbb
sti
xchg
inc
cmp
cmp
jge
cld
shrb
in
es
xor
hlt
xchg
pop
fstpt
inc
jmp
push
inc
sahf
cwtl
and
imul
leave
aaa
leave
or
icebp
aam
mov
icebp
imul
push
addb
daa
sub
imul
pop
xor
sub
movsl
orl
lcall
pop
adc
mov
xchg
add
subb
xor
ret
dec
or
inc
ret
lods
das
cli
xor
movsb
cs
xor
sub
push
cltd
jl
inc
cs
cmpsb
enter
push
test
mov
dec
test
adc
fcompl
cmp
jne
pop
mov
repz
mov
mov
inc
addr16
movntq
lret
pop
iret
imul
out
out
mov
insl
or
insl
xor
dec
cli
add
push
push
add
xchg
and
dec
adc
xchg
jnp
mov
lds
roll
mov
sbb
lods
pop
push
das
orb
bound
inc
clc
mov
xchg
sbbl
cs
lock
in
repnz
or
cmc
pop
lods
add
jb
cli
mov
push
mov
jmp
scas
aad
push
rcrb
test
mov
sub
pop
movsb
inc
lock
mov
dec
xor
mov
dec
addr16
push
loope
inc
jg
or
je
out
dec
dec
or
loopne
pusha
mov
inc
dec
mov
into
pop
addl
add
mov
cli
ljmp
js
dec
jno
daa
outsb
sahf
scas
mov
jns
ds
fldcw
mov
pop
fistpll
rorl
movsl
int
enter
arpl
fsub
stos
push
adc
pop
inc
das
mov
ljmp
jns
arpl
imul
add
sub
test
daa
std
jno
mov
and
enter
xor
rolb
fsubr
sbb
lret
cwtl
xorb
loope
adc
push
pusha
xor
and
mov
sub
jmp
pop
mov
xchg
cmp
ror
into
push
clc
push
ds
cmp
inc
push
xlat
pop
push
inc
dec
lahf
inc
xor
sarl
pop
dec
mov
jbe
scas
sahf
jb
adc
add
inc
mov
and
inc
cmp
fs
in
add
or
cmp
push
push
jo
dec
push
inc
sub
mov
adc
jnp
dec
xorb
stc
das
rorl
inc
pusha
js
pop
fnsave
and
push
mov
addr16
je
out
mov
inc
xchg
out
data16
popf
xor
ret
and
pop
xchg
adc
cmc
int3
sub
push
out
pop
cmpsb
push
adc
push
enter
daa
pop
repnz
cmpsl
subl
adc
mov
movsb
add
out
jns
icebp
lea
shll
ret
ds
xor
xchg
fisubl
test
or
nop
or
adc
pop
imul
jnp
mov
cs
inc
cld
sti
mulb
nop
test
imul
fistpll
dec
inc
dec
repz
mov
push
push
push
insl
mov
mov
push
dec
daa
and
test
add
mov
lahf
mov
or
inc
loop
xchg
xor
dec
mov
iret
xchg
xlat
adc
push
gs
mov
dec
scas
mov
mov
stos
xchg
jb
mov
cmp
jb
addr16
bound
aaa
shlb
jae
and
mov
add
or
movsl
cmc
sbb
cmpsl
lret
push
mov
loopne
or
ret
lret
mov
pushf
test
aam
call
pop
pushf
pusha
jle
mov
dec
call
std
sub
jae
jbe
or
fldt
out
pop
movsb
adc
in
xor
xor
jecxz
enter
fimull
movsl
add
inc
xchg
jmp
and
loopne
stos
testb
int
shll
and
lock
push
outsl
mov
dec
sbb
xchg
lods
test
mov
pop
mov
les
jnp
push
test
cmp
cs
pop
xchg
and
adc
insl
xor
clc
fisttpl
movsb
xchg
dec
push
ja
aaa
mov
pushl
cmp
out
rolb
test
adc
mov
cmpsl
mov
pop
or
jne
cmp
xchg
sbb
pop
jmp
push
fisubrs
mov
jb
add
sbb
lret
mov
cs
or
xchg
mov
out
test
sbb
div
xor
pusha
jge
jmp
int
sbb
add
std
insl
ret
dec
into
xchg
sub
sub
subb
xchg
cmp
out
jae
jp
outsl
cmpsl
loop
adc
ja
mov
iret
xchg
mov
ficoml
jl
jae
ss
jbe
mov
push
sub
in
dec
xor
and
dec
ret
dec
sti
fdivrl
inc
push
inc
mov
jb
and
sub
push
enter
lret
rolb
or
sub
test
mov
xchg
push
pop
adc
or
insl
push
adc
es
shl
hlt
into
addb
loopne
xchg
lods
xor
push
add
sbb
in
pusha
inc
cwtl
mov
sub
fsubrl
xchg
mull
and
sarb
repz
rorb
jb
mov
dec
pop
dec
rorl
in
aam
mov
adc
mov
mov
and
stos
dec
sbb
addr16
ds
pop
stos
push
adc
jnp
cmp
push
push
notl
lds
mov
mov
cmp
jno
std
outsb
fdivp
cmc
mov
arpl
adc
das
push
xlat
imul
and
jo
xchg
sti
pop
or
add
dec
xor
fnstcw
fs
sbb
fstpt
addr16
dec
jb
mov
shlb
loop
sub
addr16
jecxz
stos
pop
int
cmp
loopne,pn
sub
aaa
push
add
fdivrs
rcll
fucomp
movd
mov
push
out
mov
ljmp
pushf
add
ja
push
call
ss
or
outsb
out
ficomps
movsl
hlt
out
pop
pop
jns
mov
clc
jl
lret
xchg
mov
push
outsl
jno
loop
das
mov
lret
mov
and
xchg
nop
pop
add
xor
iret
xchg
inc
mov
sbb
lea
por
cmp
iret
inc
imul
or
pavgb
xchg
iret
mov
cmp
cs
pop
xchg
lahf
xor
repnz
out
je
fmull
addb
int
enter
add
jl
sub
sbb
js
bnd
ror
push
mov
pop
cmp
adc
push
mov
or
bound
jne
push
jo
in
cmp
inc
ja
cmpsl
cli
cmp
sub
mov
push
lret
ds
leave
enter
ja
psrlw
arpl
push
pop
inc
pusha
jle
daa
in
movb
cmp
je
cld
push
jbe
sbb
cmpsb
test
subl
xor
push
ffree
cmp
insl
das
idivl
ljmp
cmp
aas
mov
loop
mov
inc
mov
pusha
jg
js
aaa
dec
mov
cmp
and
mov
rcrl
rol
inc
inc
shl
jmp
sub
cltd
dec
mov
pop
scas
lahf
mov
insb
lds
inc
xchg
dec
mov
jo
lock
sub
cmc
xchg
adc
sar
and
mov
shlb
pop
cmovne
mov
fchs
out
pusha
mov
mov
jge
int
sub
pop
cmp
movsb
aaa
sub
jle
xchg
inc
lods
inc
adc
shr
sbb
loope
mov
fwait
bound
cli
mov
xor
out
pusha
es
lods
jnp
inc
mov
ljmp
loope
mov
jbe
adc
pop
in
sahf
gs
imul
lcall
add
pop
pop
dec
pop
mov
pusha
and
aad
jp
or
push
or
ja
jle
cmp
int
pusha
dec
imul
dec
out
fistl
aas
adc
notl
xlat
sbb
popf
push
xor
stc
pusha
fcompl
cld
scas
jb
pop
dec
pop
xlat
insb
mov
push
mov
mov
aas
inc
xlat
mov
jae
cmp
push
mov
inc
push
test
sbb
pop
pop
adc
pop
ljmp
jno
test
sbb
xchg
daa
push
jbe
jnp
sbb
dec
mov
shl
jge
adc
adc
xchg
call
or
push
jmp
sbb
outsl
xor
pop
imul
test
js
loop
mov
rorl
sbb
inc
pop
push
rcrl
addr16
add
cs
in
outsb
jne
in
inc
pop
adc
js,pt
and
pop
and
fldl2t
jno
mov
clc
inc
js
push
lods
xor
jmp
mov
lea
mov
sub
test
inc
les
mov
push
test
dec
fcoml
xchg
sbb
mov
xchg
xor
cmc
mov
mov
pop
lods
push
andb
pop
cli
sub
in
mov
daa
lahf
je
iret
imul
dec
arpl
pop
ret
subb
jmp
dec
test
arpl
iret
inc
mov
ficoml
mov
imul
xor
or
xor
push
adc
push
push
test
lock
int
aam
xchg
cltd
sub
lahf
out
outsb
inc
lret
adc
icebp
cld
sbb
fstl
fdivrl
loopne
imul
dec
ret
xchg
push
fcmovb
jge
dec
inc
int3
idivb
test
je
or
aad
movsb
dec
arpl
sahf
in
pop
add
lret
insb
xor
out
imulb
scas
ljmp
clc
popf
out
add
mov
mov
scas
nop
mov
rcrb
adc
or
mov
mov
mov
data16
fs
fisubrl
rol
push
outsl
jecxz
repz
adc
add
out
push
pop
push
and
cmc
xlat
fdivs
jnp
jbe
hlt
push
xor
add
aam
insb
clc
dec
fcompl
jmp
add
inc
movsl
leave
push
aas
jb
mov
sti
cmp
stos
cmp
mov
mov
xchg
mov
mov
adc
cmpsb
adc
lret
mov
mov
cmp
sub
cmpsb
push
std
pop
pop
pop
out
sub
mov
and
fstpt
andl
xor
iret
es
mov
mov
hlt
jl
repnz
ljmp
dec
push
adc
inc
loopne
lcall
mov
xor
mov
push
repz
out
shr
and
mov
inc
sahf
out
enter
mov
push
lret
mov
adc
dec
jae
push
push
mov
jecxz
and
xchg
push
cld
mov
or
jae
or
sbb
loop
popa
sahf
cmp
cli
std
rorl
sbb
jmp
mov
mov
add
rcll
mov
push
mov
jg
push
xlat
cmpsl
jns
lods
aad
jo
or
std
jne
add
lcall
popa
sub
xchg
add
mov
pop
pop
add
shlb
out
push
mov
xchg
stc
cli
pop
add
and
xor
in
movsb
shrb
xor
out
sbb
jle
dec
push
jle
xor
jmp
xchg
push
sub
ret
fistps
add
mov
in
rol
subb
cmpl
sbb
xlat
cli
pop
loope
inc
ret
xchg
inc
push
dec
inc
fsubrs
mov
repnz
mov
mov
inc
out
ja
dec
mov
cmp
pop
cmp
aaa
adc
jl
adc
jmp
pop
data16
xor
sub
je
xchg
mov
sub
xchg
jmp
pop
call
popf
dec
mov
sub
mov
das
js
push
and
out
in
out
es
xor
fwait
xchg
lret
shrl
pop
test
fnstcw
cltd
mov
mov
out
xchg
inc
gs
nop
lret
movsl
cld
scas
and
shl
dec
jne
xchg
fsubrp
and
pusha
jbe
or
xor
mov
cs
adcl
inc
cmp
out
sahf
in
repz
xchg
sbb
imul
cmp
leave
fwait
cmp
xor
fisubl
dec
rol
push
sbb
pusha
mov
push
xor
mov
enter
jp
or
in
xchg
add
or
adc
decw
mov
and
pushf
jge
arpl
push
push
xchg
gs
and
xchg
rorl
sbb
pop
int3
mov
add
dec
push
jno
hlt
das
dec
xor
fldt
push
add
xchg
insb
xor
jg
push
addl
cmpsb
outsl
and
adc
add
cmp
jo
jb
sbb
sub
mov
cli
mov
cmp
adc
cmp
in
pop
imul
cmpsb
dec
inc
das
test
lock
imul
insb
in
add
in
jb
fisubrs
popa
and
push
pop
les
lea
std
sti
ljmp
cmc
mov
jb
push
xor
and
push
ret
ljmp
adcl
cmp
loope
pop
inc
mov
out
xchg
jbe
lret
in
and
mov
mov
in
cwtl
aaa
inc
fs
cwtl
inc
addr16
push
fwait
or
lods
xor
xchg
out
add
int
sub
push
sbb
adc
inc
xor
adc
sbb
push
and
jbe
lcall
or
sub
pushf
sbb
xchg
mov
dec
mov
repnz
pushf
jl
xchg
inc
rcrl
enter
in
push
pop
stc
sub
cmp
addl
das
js
xor
mov
xor
inc
mov
sbb
bound
or
bound
cmp
or
test
xlat
js
popa
add
xor
jl
mov
andl
and
mov
repnz
enter
rclb
scas
nop
mov
xchg
dec
rcrl
jns
ljmp
sub
sub
bound
push
inc
add
mov
mov
xor
push
aaa
rcl
xchg
shl
jae
les
push
repnz
xchg
das
nop
cs
push
pusha
daa
fdivl
movsb
rorl
xor
lret
jns
push
or
xchg
icebp
sbb
and
insb
and
inc
and
gs
cmc
mov
stos
push
mov
adc
popf
jge
xor
or
imul
out
icebp
sbbb
xor
sub
stc
addr16
aam
dec
pop
sarb
mov
dec
mov
mov
xchg
fistl
loopne
vmulpd
push
clc
fs
mov
int
mov
adc
cmp
pop
sub
ds
mov
rcrl
cmp
imul
stos
dec
dec
pop
push
call
mov
enter
out
push
hlt
cwtl
scas
lea
sub
ficoms
ret
xchg
mov
adc
sahf
arpl
cmpsl
sbbl
fwait
mov
repz
inc
data16
pop
cmpsl
rorb
popf
or
jno
sub
ret
es
and
adc
mov
dec
adc
fcmovb
cmp
adc
lea
jne
lods
call
xchg
test
ljmp
orb
popa
das
push
mov
mov
and
stos
gs
cvtpi2ps
aam
loop
mov
rcll
xlat
inc
push
lock
stos
negb
xor
gs
ljmp
roll
int
pop
cmp
xchg
mov
lcall
in
xchg
fcoml
cli
mov
mov
xor
out
sbb
jp
pop
jbe
insl
add
aaa
out
dec
std
adc
cmpsl
ficoml
out
aas
ret
cmpsl
mov
push
mov
pop
jae
cmpsl
enter
mov
fdiv
into
push
mov
xchg
pop
in
ljmp
out
dec
out
xchg
in
inc
mov
sbb
mov
ja
sub
nop
jns
imul
fsubr
dec
sbb
scas
xor
sub
mov
lods
repz
stos
mov
mov
sbb
arpl
xor
loopne
cmpsb
into
dec
dec
adc
imul
lods
ljmp
adc
pop
iret
sarb
mov
dec
or
test
dec
mov
cmp
out
mov
loop
movsb
sub
mov
int3
inc
push
sbb
cwtl
sarl
enter
push
fnstcw
fisubrs
jae
stos
pusha
ljmp
xor
arpl
sbb
int
jecxz
and
inc
mov
jge
xor
inc
mov
inc
mov
mov
jno
test
outsb
add
nop
add
dec
jmp
fldcw
or
pop
out
rorl
cltd
sbb
or
or
outsl
cmpsl
movsb
inc
push
ss
mov
sub
push
lret
pusha
dec
jmp
arpl
loop
mov
test
and
sbbl
xlat
mov
sahf
xchg
pop
data16
mov
repnz
lea
mov
pushl
mov
or
mov
sbb
scas
mov
mov
dec
and
mov
pop
xor
pop
jge
aaa
pop
fcmovne
rcrl
cltd
jecxz
gs
arpl
jp
sub
repz
mov
push
js
add
push
cmpsb
pop
lret
aaa
jns
ret
mov
xchg
dec
movsl
fimuls
shll
loopne
insb
jge
adc
sbb
and
pop
push
jno
dec
lock
or
inc
stos
adc
icebp
pop
sub
imul
add
sub
popa
xchg
jg
jmp
pop
mov
and
fnstenv
cmp
dec
scas
cmc
push
in
fcompl
iret
push
push
or
je
add
xchg
mov
inc
dec
imulb
std
and
add
push
lods
addl
cmc
adc
in
push
dec
loope
mov
outsl
sub
dec
es
divl
test
xor
cmp
mov
add
xchg
ja
pop
jo
imul
scas
test
shlb
ret
xchg
or
push
dec
pusha
test
xchg
imul
mov
je
sub
jbe
push
hlt
cs
nop
xchg
pop
jmp
xchg
mov
lods
xchg
jg
fwait
jb
jns
pop
mov
std
add
clc
cwtl
scas
xchg
cmp
pushf
xchg
or
lahf
les
aaa
es
xchg
mov
xchg
push
out
pop
mov
frstor
jecxz
mov
mov
in
push
pop
adc
dec
stc
stos
jle
ret
mov
jbe
and
arpl
sub
call
mov
mov
out
adc
mov
popa
jg
jae
cli
pop
inc
add
aad
mov
aam
push
and
push
sub
sbb
mov
scas
mov
rcl
mov
lock
mov
test
and
sbb
gs
clc
dec
insl
add
dec
imul
mov
add
mov
xchg
sti
pop
adc
dec
fisubrs
and
xchg
mov
mov
xchg
mov
aam
dec
sbb
icebp
inc
add
mov
jo
sub
push
fidivs
xchg
sarb
dec
sbb
test
in
sbb
movsl
lods
inc
das
stos
push
out
xor
xor
rorl
xchg
mov
sbb
mov
mov
add
pop
sub
enter
sub
push
mov
mov
and
jp
mov
adc
pop
jecxz
cmp
imul
clc
xor
dec
into
jmp
and
add
shll
adc
dec
fiaddl
outsb
push
inc
pop
gs
xor
je
inc
xchg
mov
outsl
sub
or
clc
faddp
xchg
push
mov
xor
loopne
fiadds
or
negl
pop
scas
minps
stc
and
pcmpeqd
gs
jae
mov
int
adc
mov
pop
outsb
fcom
dec
xchg
imul
push
xchg
imul
in
push
cmp
xor
inc
cmpsl
cmp
cs
adcb
cmp
in
lods
xor
sub
adc
xorl
sbb
stos
subl
jmp
mov
xchg
out
aad
xchg
dec
cmc
xor
hlt
jle
cwtl
jmp
fiaddl
andl
mov
test
inc
out
jae
xor
push
out
adc
jge
add
mov
sbb
test
or
in
cwtl
fldenv
jmp
or
fistps
daa
sbb
cld
into
mov
push
adc
movsb
jp
mov
pop
xchg
rorb
or
cmpsl
std
mov
dec
shl
out
cld
push
fs
xchg
sbb
mov
bswap
pop
pop
jae
xchg
jge
sub
iret
sub
xchg
add
sub
and
ret
mov
or
mov
ret
add
sti
inc
cmp
test
iret
inc
sahf
pop
movsl
push
ds
or
push
out
dec
jbe
mov
in
push
jge
movsl
jge
rorb
adc
shl
pop
mov
ljmp
push
ds
inc
mov
imul
lods
out
int3
imul
into
sub
or
cmpsb
xor
sbb
push
push
sub
mov
sub
mov
mov
movsl
lods
dec
mov
or
mov
xor
ret
or
jno
xchg
das
jecxz
push
pop
mov
inc
or
xchg
and
movzwl
mov
loope
cmc
xchg
adc
repnz
lcall
pop
inc
sti
hlt
mov
mov
lcall
fadds
jl
pop
pop
addr16
or
loope
pop
sbb
xlat
dec
stc
call
movsl
adc
dec
dec
inc
subl
add
jno
or
in
or
mov
insb
or
add
pop
jbe
sarb
lcall
arpl
mov
ffree
adc
xor
adc
cltd
adc
add
dec
stos
mov
sbb
lods
push
sahf
imul
and
scas
lock
pop
stc
aaa
dec
inc
popa
mov
jp
mov
into
hlt
cmc
sub
movsb
sbb
cmpsb
cmp
inc
lods
xchg
shrl
fistpl
sti
aaa
fstpt
ja
in
or
pop
mov
push
pop
mov
fcoml
mov
in
mov
pop
fmull
cs
xchg
in
dec
cmc
inc
xchg
leave
aaa
jge,pn
es
mov
in
push
and
push
pop
pop
sbb
fcompl
hlt
mov
adc
push
js
bnd
push
sbb
jmp
fmuls
rclb
adc
xor
in
pusha
add
dec
mov
jmp
pop
cmc
add
inc
scas
dec
mov
or
jge
sub
clc
push
jns
mov
mov
adc
mov
enter
mov
xchg
pop
mov
movsb
in
sub
sub
mov
mov
lods
or
add
idivl
xlat
cmp
sbb
and
loopne
fs
scas
fiadds
jae
pop
imul
ljmp
mov
cmpsb
loopne
into
push
cmp
call
out
mov
cwtl
cmc
sbbb
fcoml
push
pop
and
dec
test
push
xchg
mov
xor
mov
fwait
mov
push
mov
xor
xorl
aam
fdiv
aaa
mov
lahf
lret
cltd
decl
push
inc
repz
in
xor
mov
adc
mov
add
mov
call
scas
mov
lret
andb
lods
pop
outsl
pop
movsl
int
and
mov
aad
mov
push
dec
lods
insl
xor
pop
jae
sub
and
stos
and
loop
inc
or
insb
movsl
imull
repnz
xor
addb
pop
push
or
daa
cmp
or
xchg
push
mov
in
loop
scas
pop
subb
pushl
imul
ret
mov
inc
inc
hlt
jecxz
sub
loopne
mov
and
loop
les
push
scas
jge
cmpsl
jecxz
cmovbe
cmp
leave
push
out
and
nop
movsb
fisttps
fs
stos
xchg
xchg
aas
xor
mov
stos
mov
leave
popa
cwtl
sub
arpl
dec
xor
xchg
std
jp
aaa
and
test
dec
repnz
push
mov
xlat
push
outsb
test
mov
jno
shlb
sub
mov
mov
sub
out
inc
jb
pop
ret
cltd
in
push
xor
add
hlt
orb
loope
adc
je
pop
xchg
sbb
aad
jp
push
jns
test
icebp
jae
inc
dec
arpl
aaa
fldl
ret
add
xchg
pop
scas
jmp
cmp
mov
int
ljmp
cld
icebp
sub
mov
pop
push
aas
jg
or
jns
shr
push
je
aaa
insl
imul
and
and
dec
jns
mov
inc
icebp
xchg
or
lret
or
in
stc
cmp
and
xchg
jge
andb
sub
or
add
int3
lahf
sub
push
dec
push
andb
cmp
inc
add
and
sbb
loopne
dec
mov
cmp
push
cmpb
fnstsw
ljmp
push
add
xchg
or
stc
cltd
leave
imul
adc
sbb
adc
scas
xchg
insb
mov
jns
mov
pop
mov
and
shr
ret
xor
lods
int3
push
test
adc
xlat
loopne
pushf
test
in
xchg
int
lahf
out
lahf
dec
dec
dec
mov
imull
jl
cwtl
adc
add
lds
ret
js
jmp
jmp
xchg
imul
test
dec
dec
mov
cmp
mov
xchg
les
mov
dec
mov
sbb
dec
mov
sub
xchg
outsw
or
inc
std
mov
or
jle
xor
fstl
sub
or
jb
in
out
xchg
adc
xor
mov
push
cmp
add
and
arpl
call
std
js
xchg
cld
out
in
push
sbb
jno
aam
jnp
jmp
std
sbb
pop
sahf
cmpsl
insl
dec
xchg
in
movsl
es
jge
xchg
sub
std
add
loope
insb
jg
loop
cld
cwtl
adcl
icebp
add
adc
lahf
clc
dec
adc
jle
ret
mov
push
jecxz
cld
pop
jl
add
ljmp
xlat
pop
jns
fidivs
inc
scas
jle
repnz
mov
mov
or
pop
pop
test
dec
sarl
mov
in
insb
mov
in
adc
and
or
cmp
cmp
shll
cmpl
pushf
or
jno
push
fmulp
or
push
gs
add
dec
and
jecxz
leave
push
dec
imul
push
out
sti
jbe
push
out
fsubrl
xchg
test
enter
and
cmpsb
insl
push
mov
les
mov
mov
stos
sub
enter
add
fisubl
outsl
jnp
xor
lcall
or
dec
xor
jbe
cmp
sub
test
repz
xlat
sub
jne
je
movsb
push
js
jb
push
or
mov
insl
rcrb
mov
cli
mov
cmp
pop
sub
sbb
cmp
xchg
push
lret
dec
inc
test
pop
pop
sub
stos
xchg
fnstsw
shl
push
in
cltd
and
xchg
inc
mov
pop
fstpl
add
je
jp
mov
add
cwtl
pop
jecxz
fdivl
cs
or
push
sub
inc
cmp
mov
mov
jmp
cmp
mov
cli
in
stos
std
jge
cltd
xchg
jle
das
lods
fs
bnd
outsl
xor
insb
lods
adc
xchg
xchg
popa
sbb
roll
or
inc
sub
out
outsl
adc
mov
mov
mov
pop
pop
xor
outsl
adc
jmp
add
xor
push
daa
popf
out
lods
in
and
lret
cli
xchg
mov
xchg
cmp
out
xchg
sbb
add
imul
cmp
or
test
xor
outsb
loopne
popf
cltd
sbb
scas
sub
loop
int3
jp
adc
lods
dec
data16
int3
and
dec
xchg
jo
cmp
outsb
mov
jp
and
pop
int
lcall
ret
fsubrs
mov
and
inc
test
lcall
pop
jno
xor
stc
ja
stos
sbb
lcall
jmp
mov
je
push
push
jge
popf
inc
xchg
mov
insb
mov
xchg
cmp
iret
loop
sbb
add
scas
stos
mov
decl
scas
in
push
pop
cld
std
mov
les
shlb
cli
movsb
pushf
movsl
loope
lods
js
es
imul
test
das
mov
jne
xor
and
mov
xchg
nop
lock
push
lahf
xor
sub
dec
adc
repz
mov
lret
lcall
sub
or
or
popf
cltd
mov
push
pop
push
mov
hlt
push
xchg
shll
gs
xchg
ss
adc
sti
sub
xchg
or
inc
pop
push
imul
xor
mov
iret
and
jge
mov
test
jns
add
xchg
xlat
add
int3
sbb
push
jmp
sbb
xchg
dec
push
dec
add
mov
insl
pop
fidivrl
mov
cmpsl
mov
insb
xchg
insl
icebp
scas
cmp
mov
push
inc
bound
cmp
mov
dec
test
int3
popf
and
dec
xor
cmpsb
std
jae
push
mov
insb
xchg
cmpsb
repnz
les
jecxz
movq
jg
xchg
aaa
sub
push
decl
mov
xchg
dec
xor
xchg
add
mov
sbb
movsb
mov
aad
loop
insb
inc
mov
dec
jecxz
pop
mov
arpl
pop
ss
cmp
jg
inc
int
jg
outsl
inc
jne
xchg
imul
xchg
testl
mov
inc
adc
int
inc
cltd
pop
in
lods
aaa
adc
xchg
or
lea
inc
bound
inc
xchg
sub
xor
ret
pop
pop
scas
or
add
cmovs
xchg
xchg
lods
lret
cli
sahf
push
mov
loop
xor
out
popf
rcll
xchg
into
xor
pop
dec
adc
mov
dec
mov
cli
pop
mov
je
dec
xor
imul
mov
push
cmp
lea
add
mov
push
insl
mov
sbb
lds
add
out
mov
mov
das
mov
mov
pop
push
push
sub
fdivrl
push
hlt
adc
push
add
icebp
and
stc
or
outsb
fisubs
and
out
cli
push
push
xchg
rorl
lds
and
in
mov
pop
and
push
adc
mov
push
hlt
add
mov
cmp
mov
and
cmp
mov
movsl
push
fistps
cmp
push
int3
push
inc
lret
ret
clc
dec
les
pop
ret
or
sbb
in
add
push
dec
xchg
ss
stos
mov
push
ds
pusha
fbld
aad
add
jl
jb
and
aas
stos
and
hlt
sbb
stos
xrstor
xchg
mov
jp
lods
ficomps
pop
inc
inc
jg
std
mov
cli
mov
testl
jp
pusha
das
sub
inc
mov
lods
es
iret
sub
cmc
in
inc
and
xor
sub
cmc
xchg
pop
ss
or
jae
loopne
in
cmc
adc
inc
adc
and
orb
xchg
mov
adc
fdivs
leave
add
popf
jns
and
ja
repz
movsl
into
sbb
push
or
sub
leave
xor
mov
fs
sbb
cmp
pop
stc
daa
ss
or
movsl
mov
jbe
jl
xchg
ljmp
xchg
aas
imul
sub
stos
daa
push
dec
inc
pop
fimull
lret
mov
mov
movsl
dec
jbe
out
imull
push
mov
aas
dec
aam
or
and
mov
xchg
mov
or
mov
cmp
sub
mov
pop
dec
scas
xchg
call
mov
scas
int3
lahf
mov
in
imul
cld
and
or
nop
shlb
testl
mov
stc
subps
mov
call
and
adc
insl
xchg
xchg
in
out
lods
decb
mov
insl
inc
call
push
cmpsb
mov
mov
popa
stc
cmp
inc
and
shlb
sub
jae
sti
jecxz
les
or
pop
pop
push
jg
pop
clc
fists
inc
and
sbb
xchg
shlb
aam
push
mov
gs
test
push
cmp
jns
lea
xor
jae
andl
sarb
mov
xor
pop
xchg
xor
pop
iret
cli
movsb
clc
cli
adc
cmpsl
roll
mov
push
mov
test
jge
lods
rcl
das
xchg
faddp
mov
in
inc
sbb
rcr
inc
mov
sbb
negl
testl
mov
pusha
or
push
notl
push
hlt
mov
mov
inc
insl
mov
add
or
cmp
push
in
je
and
inc
mov
fstp
pop
std
xchg
rolb
add
in
adc
jl
push
mov
addl
ljmp
sub
cld
and
lret
inc
cmp
test
int3
adcl
andl
cmp
mov
mov
lods
push
or
mov
jmp
js
push
push
xchg
clc
rcll
xor
in
imul
dec
mov
mov
int
or
rol
jb
insb
sub
mov
call
sub
inc
mov
sub
xor
pop
jae
mov
or
dec
pop
lcall
inc
xor
or
xchg
or
xor
es
and
inc
mov
stc
sbb
pushf
orl
frstor
add
mov
cmp
popf
lcall
adc
push
outsl
mov
mov
cmp
sarb
adc
xor
and
fsub
int3
in
fimull
and
adc
mov
xchg
mov
add
inc
adc
lret
xchg
fs
stc
adc
or
xchg
ljmp
in
xchg
xchg
pop
adc
loop
std
int3
push
loopne
imul
inc
jno
cmpsl
mov
pop
popa
lcall
jb
pop
push
pop
shr
and
rolb
pop
aaa
cmpsb
jg
ret
das
jge
pushf
pop
je
cli
inc
add
sbb
jge
adc
push
cltd
jl
adc
push
lret
pop
ds
cmp
cmpsb
mov
loope
mov
mov
cltd
push
or
mov
or
arpl
scas
sub
mov
movb
divb
jno
dec
mov
cmp
dec
jo
cs
adc
lret
jb
lahf
mov
adcb
xlat
pop
mov
cmp
daa
pushf
lahf
inc
into
dec
xchg
or
imul
das
jp
int3
shll
fsubp
pop
int3
jmp
loopne
scas
pop
daa
push
pop
push
lret
cmp
xor
mov
jle
add
int3
xor
insb
fnstcw
roll
ljmp
or
test
mov
sub
pop
and
xchg
shr
faddl
mov
dec
mov
xor
sti
xor
add
sub
pop
std
mov
or
lds
lods
pushf
popa
jp
mov
dec
rolb
mov
mov
cmp
ja
cmpsl
inc
or
push
jno
movsb
pop
sub
or
pop
cld
dec
sub
test
and
mov
lds
adc
sub
dec
cmpsb
mov
add
dec
cmp
je
inc
cmp
adc
cmp
jecxz
or
mov
jae
cmpb
push
sbb
jno
mov
push
inc
fists
leave
repnz
adc
xchg
cmp
mov
mov
jle
nop
lret
and
inc
loope
cld
sarl
sub
repnz
ficoms
movsb
adc
push
cmpsl
jb
adc
sbb
adc
lea
fwait
ret
outsb
das
leave
push
lcall
lods
pop
pop
dec
inc
sar
mov
call
sbb
in
and
mov
cmp
adc
xchg
test
dec
mov
jbe
shrl
push
js
out
nop
or
in
mov
fcmove
dec
mov
test
test
xor
inc
bound
jo
adc
sub
orl
insl
pop
cmp
dec
jne
int
and
mov
jb
shlb
bound
jb
sbb
mov
xor
stos
pop
dec
mov
test
leave
jbe
cs
loop
fidivrs
dec
les
ret
shrl
and
push
inc
or
push
mov
popf
sbbl
mov
add
arpl
les
cld
fsubrs
movsl
js
and
scas
sub
fs
cltd
decl
stos
dec
insb
push
sbb
andb
mov
lods
subl
int3
sbb
add
mov
ss
inc
movl
mov
mov
xor
ss
fwait
adc
bound
inc
rorb
pop
jns
movsb
xor
xlat
ljmp
arpl
in
addr16
out
std
les
jb
or
cmp
enter
and
dec
xchg
jb
xor
leave
out
sahf
shrl
xor
pop
aad
rcrl
adc
rclb
adc
jge
enter
fisubrl
mov
adc
mov
lods
int
div
lea
dec
jbe
mov
push
or
sti
je
std
sbb
xor
mov
inc
push
ret
fidivl
rclb
inc
pop
push
mov
ja
aaa
inc
or
rorb
or
fcoms
je
aad
add
pop
mov
sub
sbbb
sub
and
dec
ficomps
push
out
mov
push
ret
mulb
aas
mov
or
jb
repnz
jecxz
lods
mov
jns
xchg
in
std
sub
xchg
insb
ss
ret
mov
inc
sub
fcomps
shll
out
inc
pop
into
js
aam
rcll
sub
inc
lahf
mov
mov
sub
nop
inc
rcll
xchg
mov
xor
inc
jg
lock
pop
xlat
mov
push
not
xor
push
lcall
jg
inc
mov
fstpt
cmp
mov
sbbl
push
jnp
repnz
dec
addb
je
iret
mov
clc
cmp
sub
or
or
les
addr16
sub
loope
int
aaa
jge
les
lds
cmp
pop
xchg
mov
sahf
mov
daa
cmp
notb
xchg
cmp
or
xchg
hlt
jno
ja
push
int3
test
and
in
inc
test
adc
jne
out
in
xor
fst
mov
mov
push
push
cwtl
pusha
popa
pop
mov
mov
pop
testb
jmp
jns
fdivp
mov
mov
scas
mov
loope
ds
repnz
jecxz
fwait
inc
mov
loope
sub
xchg
out
inc
fimull
movsb
pushf
pop
pop
jb
xor
push
push
adc
leave
xorl
sub
mull
and
cmp
mov
mov
jecxz
push
std
addr16
sbb
fldl
lahf
sub
lret
fcompl
jb
mov
push
mov
andb
mov
adc
cmpsl
leave
cmp
push
lock
pop
xchg
fsubl
xor
aaa
pusha
inc
js
mov
gs
fdivrl
mov
fldenv
aaa
mov
std
leave
mov
jl
pop
jns
loop
aad
cltd
es
jae
fnstcw
aas
inc
inc
pop
sti
out
adc
rol
xchg
push
mov
jne
mov
or
xchg
popf
in
outsl
mov
xchg
lret
adcl
xchg
aad
pushf
mov
ds
fsubrl
bound
mov
shlb
jg
push
pop
push
ret
mov
cmp
adc
fsubr
add
fildl
mov
cwtl
sti
rol
jmp
and
dec
xor
js
lea
xor
xor
stc
sbb
les
in
pop
fldpi
pop
mov
mov
movsb
mov
xchg
lret
flds
jo
sbb
das
jmp
pop
mov
mov
orb
add
rorl
jmp
or
cmp
sub
leave
add
cmp
fsub
pop
shr
mov
xor
inc
bound
ret
daa
leave
scas
scas
js
or
ljmp
addr16
jae
or
leave
repnz
je
addb
ret
mov
dec
add
pushf
leave
cmp
hlt
sub
mov
out
push
sub
cmp
adcb
xor
pusha
adc
mov
jl
fdivl
mov
inc
fisttps
inc
call
in
and
sub
stos
in
lcall
sub
jl
arpl
dec
sub
es
pop
cmp
das
sbb
inc
xchg
jae
push
in
xchg
movsb
xorb
gs
rcl
xor
jmp
dec
out
cmpl
popa
push
cmpl
mov
popa
rorl
push
ja
lret
pop
adc
js
mov
movsb
jbe
mov
xchg
sub
ja
jmp
std
and
mov
jne
les
adc
mov
jl
repz
cwtl
mov
add
fiaddl
mov
xchg
imul
sub
xchg
add
add
mov
xchg
and
jne
adc
inc
or
in
jbe
pop
pop
andl
cmp
sub
xor
sbb
ret
std
and
inc
pop
mov
leave
in
out
jno
lods
loope
rcr
inc
sub
stc
mov
cmp
lock
pop
aam
xchg
out
xchg
cmpsl
es
mov
push
adc
jl
pop
add
push
inc
mov
xchg
jns
hlt
mov
std
imul
push
sub
aam
xor
jb
je
cli
xor
subb
inc
cmp
or
sub
push
aaa
push
jbe
push
rcr
dec
fdivrp
jg
jbe
es
adc
sub
fs
dec
cli
leave
cmc
or
out
icebp
adc
and
or
push
les
fstpt
in
jl
enter
outsb
lret
into
and
movb
loope
aas
shl
cmp
sub
push
inc
xor
jmp
or
pop
lods
lea
or
loop
pop
enter
enter
inc
loopne
mov
popa
sarl
sub
add
rorb
jns
push
mov
inc
leave
fs
pop
or
sub
pop
in
neg
jp
inc
int
stc
sub
push
cmp
out
loope
test
test
lods
adc
mov
movl
insl
push
lock
sbb
ret
fchs
out
sbb
ret
cltd
inc
push
mov
adc
push
sbb
repnz
jp
test
nop
pop
loop
mov
stc
stos
push
xor
loopne
fstpl
stos
or
jge
inc
test
rorl
out
mov
pop
push
mov
pop
xlat
in
je
icebp
dec
fcomp
xor
xchg
ljmp
dec
rol
sub
shl
mov
into
testl
mov
push
fs
sub
mov
add
mov
daa
imul
fcoml
arpl
sub
movsl
mov
xchg
add
lret
fwait
scas
xchg
pop
aam
xchg
das
outsl
addr16
push
push
jle
push
sub
xlat
mov
stos
test
add
stos
movsb
push
mov
out
loop
sbb
pop
xchg
fs
inc
cmp
adc
mov
pushf
cmp
jnp
imul
mulb
std
aam
ljmp
and
bound
push
js
and
mov
lds
cli
mov
faddl
dec
dec
cmpsl
add
out
pop
das
fwait
xor
push
push
jle
fwait
shlb
leave
pop
pop
or
ret
stos
mov
jmp
mov
mov
cmp
icebp
sahf
mov
outsl
or
lret
scas
sub
les
add
in
lds
cmpb
adc
std
xchg
daa
imul
imul
xchg
inc
or
mov
cmc
loope
pop
add
xor
out
int3
mov
or
in
and
in
imul
push
mov
inc
insb
cmp
and
pop
cmc
mov
inc
push
mov
je
inc
inc
jp
popa
lahf
pusha
lods
push
enter
lret
and
pop
cmp
adc
push
add
stos
popf
clc
std
jl
call
cmc
sarl
mov
ret
clc
sbb
subb
sub
or
sarl
pop
push
or
cmp
dec
cs
arpl
sbb
lret
cli
inc
sub
and
sub
xor
mov
inc
pushf
mov
in
lds
jmp
sub
ljmp
push
movsb
xor
cmp
or
lods
push
hlt
cli
test
retw
add
int3
rorb
cmpsb
scas
push
dec
scas
shrb
add
xor
frstor
das
jp
ficompl
lock
and
jmp
lret
lcall
mov
push
arpl
addl
pop
xor
inc
arpl
js
mov
inc
inc
fidivs
push
fs
xor
pop
stos
lds
mov
mov
shrb
test
mov
adc
dec
adc
cmp
adc
pop
std
mov
std
lods
clc
jmp
add
pop
push
push
jbe
inc
add
mov
jle
clc
push
and
imull
stc
and
pushf
lret
pushf
in
fcomps
xchg
and
sbb
dec
insb
mov
add
pop
jnp
xchg
lods
lock
and
add
sub
fldcw
decl
jb
xchg
cmp
and
push
adc
or
jge
inc
shll
popf
push
rclb
and
loop
jae
sub
cmpsb
dec
pop
jnp
pop
dec
inc
cmpsb
addr16
insb
adc
stos
testl
mov
mov
xchg
pop
sbb
aad
test
xchg
lret
lcall
stos
movsl
int
jno
shl
push
cmpsl
faddl
test
mov
adc
shll
push
push
aam
stos
es
add
shll
sub
addr16
adc
stos
sarl
sarb
rclb
das
add
cwtl
imul
dec
inc
fs
lods
lock
mov
addr16
aas
cmp
jl
outsb
mov
pop
int3
push
mov
shr
arpl
scas
in
aam
and
das
and
fs
xlat
add
fwait
sub
loope
shl
cmp
pop
outsl
cmp
push
push
add
sbb
xchg
or
pushf
cli
sub
push
scas
dec
pop
out
cmpsl
test
inc
cmp
in
xchg
jp
adc
cs
push
out
andb
cmp
mov
sub
mov
rcll
lret
dec
incb
adc
nop
in
aaa
mov
outsl
sbb
jg
gs
pop
inc
xor
sub
mov
into
and
inc
fcmovnb
sahf
jns
test
cmp
cmp
imulb
std
or
push
repnz
xor
icebp
jns
test
sahf
xor
pop
xlat
sub
enter
pop
fsubs
add
pop
add
inc
movsl
xchg
out
cmp
push
ffreep
inc
and
and
pop
sbb
cmpsb
push
cmp
or
dec
cmc
sub
push
mov
popf
push
and
sbb
or
popf
lock
push
rcrl
push
addb
and
sbb
repz
cmp
mov
mov
jle
xor
push
dec
loope
sbb
xor
jge
push
mov
dec
mov
daa
and
in
adc
lahf
mov
mov
outsl
and
lock
add
mov
mov
push
cmp
and
mov
xor
fwait
out
pushf
mov
lahf
lret
cltd
sbb
push
cmp
ja
out
sbb
mov
pushf
pop
pushf
loopne
test
cmp
and
dec
cltd
sahf
adc
xlat
dec
popa
jp
dec
push
mov
jae
push
lret
aam
or
sub
popa
xchg
mov
xor
and
mov
sbb
mov
arpl
fs
cld
in
xchg
or
or
add
std
cmpsb
inc
xchg
xchg
or
jns
sub
xchg
xchg
push
cmp
fldl
xor
sbb
lret
adc
cmp
aaa
jl
jge
xor
data16
pusha
or
mov
lcall
call
pop
out
mov
mov
push
inc
mov
push
shrb
mov
dec
cmp
mov
ljmp
push
movsl
sarb
stc
xor
mov
leave
xor
pop
mov
punpckldq
xchg
xchg
push
add
dec
loopne
movsb
mov
orl
pop
fs
hlt
mov
mov
sub
or
jb
pop
xor
or
outsl
test
fdivrl
or
jb
xchg
je
dec
pop
fistps
mov
push
subl
fwait
in
das
xor
out
push
cld
push
fidivl
outsb
or
mov
push
lea
push
andb
loop
mov
filds
xor
shll
cmpl
xchg
ret
mov
outsl
std
sub
mov
ret
and
jns
jbe
xlat
cli
ret
daa
mov
cltd
jae
pop
dec
pop
xchg
fldenv
adc
adc
lret
sub
aad
mov
aaa
leave
jmp
sub
lret
insl
dec
jge
sbb
test
cwtl
and
stos
sub
inc
int
inc
jle
push
in
lods
inc
jp
add
lds
push
jp
fwait
test
rcll
test
adc
xchg
pop
or
xor
aaa
add
test
loop
les
push
xchg
cld
jne
xchg
xchg
ret
push
ja
jle
outsl
iret
mov
push
int
or
push
mov
into
fsubrl
fildll
jg
outsb
imul
das
xchg
or
movd
insb
lret
jp
out
repz
adc
add
mov
inc
pop
sbb
inc
test
flds
dec
sbb
adc
pop
in
push
pop
xchg
shlb
dec
cs
sub
sbb
or
dec
mov
push
dec
add
mov
test
inc
ficompl
pop
cwtl
fwait
popf
pop
pop
cmp
dec
nop
out
ds
imul
dec
iret
cmpsb
movsb
push
call
fwait
adc
cmp
cltd
mov
sub
and
aam
lods
icebp
mov
pop
lods
push
fisubrs
and
test
dec
out
gs
lea
xchg
xchg
test
sahf
stos
sub
out
lock
sub
mov
mov
sbb
imul
xor
jne
or
ja
data16
cmp
xchg
sub
cmc
inc
pop
xor
divps
mov
or
cltd
int
leave
mov
xchg
xchg
add
pop
fcoms
pop
jmp
pop
fisubl
lret
xchg
sub
inc
lcall
out
xchg
aam
sahf
outsl
cld
sbb
cmp
adc
fmuls
call
push
cmp
cmpl
outsb
jnp
xchg
xor
jns
or
mov
push
mov
insb
loope
movsl
dec
lret
adc
or
aas
sarb
cmp
fabs
stos
push
sub
pop
idivb
mov
push
inc
adc
cmp
repz
hlt
arpl
mov
cmp
fnstenv
adc
std
cmc
jl
int
cmp
mov
mov
dec
or
and
sti
icebp
mov
jmp
and
out
mov
jo
insl
mov
inc
in
imull
es
pop
movsl
fbstp
push
and
xchg
and
xor
hlt
roll
add
lds
ret
lds
es
icebp
sti
std
xor
dec
fistpll
mov
jp
scas
in
sub
fnclex
push
lcall
js
pusha
push
out
std
mov
dec
cmc
pop
push
add
xchg
mov
negl
addr16
stos
daa
int3
in
stc
mov
mov
gs
inc
push
je
popf
inc
mov
in
cld
push
fstpl
bound
fdivl
xor
dec
jb
lds
and
mov
push
es
mov
sub
aad
dec
adc
add
mov
arpl
mov
cld
sub
push
xor
sbb
inc
repz
ficomps
popf
pop
insl
es
jmp
arpl
push
shlb
out
push
pop
cmpsb
and
mov
pop
loop
adc
std
inc
push
repnz
jno
imul
stos
movsb
or
nop
cld
sbb
xchg
fidivl
ret
sbb
imull
je
cs
movsl
call
or
inc
jle
lock
dec
jmp
adc
push
jmp
and
dec
jp
push
jmp
adc
mov
add
xchg
in
sahf
into
mov
ljmp
fdivs
mov
add
aam
insb
dec
mov
pop
mov
inc
test
mov
xchg
mov
lods
fcoml
loope
adc
pop
mov
pusha
out
gs
adcb
fs
jno
movsl
xchg
test
jmp
mov
insb
jg
ja
test
fldl
inc
xchg
subl
adc
js
or
dec
push
out
mov
clc
jno
xchg
aam
mov
addr16
sub
mov
jecxz
mov
mov
stos
mov
xor
std
stc
and
sbb
fbstp
sub
pop
sbb
add
fdivrs
xor
cltd
xchg
lret
dec
fildll
adc
fwait
xor
aas
in
push
push
in
mov
sub
mov
test
cmp
aaa
int3
add
mov
xchg
adc
stos
hlt
xor
push
lea
clc
cmp
jo
dec
adc
fcomip
adc
adc
movsb
or
mov
jae
add
push
xor
jo
push
jmp
ljmp
imull
mov
sbb
xchg
pop
stos
fwait
push
or
pop
jl
mov
cltd
popf
shl
movsl
gs
test
xchg
sbb
pop
push
or
dec
sub
fiadds
shr
hlt
int
pop
roll
imul
sub
std
repz
cmp
ja
ret
fadd
pushf
shrb
xchg
outsl
dec
sarl
push
pop
push
into
mov
decb
iret
inc
dec
pop
fs
sarb
pop
cmp
movsl
pop
sbb
pop
pop
jns
mov
pop
or
sti
cmpsl
sub
mov
icebp
lret
mov
push
mov
test
not
add
lds
movsb
adc
ret
mov
jmp
into
jecxz
jp
arpl
xchg
pop
sub
cli
repz
or
pusha
push
mov
dec
mov
mov
cmp
clc
inc
jae
pop
mov
test
sbb
adc
aam
orl
jb
rol
pushf
jle
bound
cmp
or
push
dec
xchg
stos
adc
jnp
mov
xlat
fbstp
cmp
dec
jnp
sub
into
int
in
pushf
gs
push
into
adc
jle
jmp
mov
cmpsb
scas
mov
lods
mov
dec
js
xlat
xchg
rclb
clc
rolb
aad
fcoms
call
or
lods
sahf
shl
stos
sbb
lods
sbb
imul
adc
sti
in
xorl
inc
sbb
add
aam
push
pop
mov
popf
movsb
dec
repz
imul
push
mov
lods
decb
dec
jge
mov
xor
sbb
xor
cwtl
test
clc
sti
addb
hlt
idiv
xchg
addr16
xchg
xchg
mov
icebp
std
dec
push
mov
insb
adc
jmp
fbstp
enter
movsb
or
pop
and
sbb
jbe
test
dec
jne
inc
pop
cmpsl
dec
sub
icebp
das
test
outsl
mov
dec
and
jmp
notl
mov
imul
cmc
leave
pop
xor
pop
das
pop
xor
cmp
sti
imul
aad
jmp
fs
dec
mov
and
xor
jle
pop
or
cltd
push
mov
inc
mov
jg
gs
mov
popl
cli
xor
or
mov
push
jg
mov
adc
jmp
cmp
outsl
notb
adc
xchg
dec
and
pop
pushf
jbe
mov
clc
or
inc
adc
stos
loope
jg
flds
cmp
add
or
lods
imul
add
dec
cmp
pop
xor
cli
cmp
pop
int
lea
bound
fsubp
dec
pop
sub
push
sub
xchg
pop
xor
mov
adc
and
adc
jmp
shlb
int
dec
cltd
or
lret
push
inc
imul
and
inc
mov
out
mov
arpl
ror
adc
mov
leave
pop
mov
aas
inc
xchg
test
pop
cmp
or
add
sbb
insb
nop
push
push
jmp
hlt
popf
cmpsb
imul
clc
xchg
mov
xchg
inc
les
and
xchg
sub
gs
outsl
push
inc
sub
ret
call
ds
addr16
out
adc
f2xm1
out
sbbb
ss
pop
pop
xchg
sbb
mov
jb
loopne
test
nop
push
into
xlat
cmp
and
push
sbb
test
jno
sub
stos
fcomps
in
cmp
xchg
movsl
push
xor
lods
push
sub
test
sub
sahf
add
sbb
scas
xchg
sbb
loope
xchg
stos
add
add
mov
lret
cld
inc
lods
enterw
enter
shlb
adc
push
aad
in
add
push
xor
test
sbbb
push
pop
sbb
push
xchg
add
pop
add
add
mov
dec
les
pop
jmp
fs
out
mov
xlat
loop
loope
fimuls
dec
adc
xchg
out
mov
jecxz
xor
test
jl
mov
jmp
lods
inc
adc
fisubl
or
jne
sub
and
push
icebp
das
xor
fisubrs
negb
jp
xchg
arpl
and
ds
test
and
nop
cwtl
push
fdivr
push
inc
sub
pusha
mov
ret
sub
pop
scas
push
push
loop
jnp
loopne
aad
sbb
lock
ss
add
les
leave
xchg
cmp
push
jmp
cmp
in
mov
repnz
pop
jae
push
sbb
mov
pop
pop
sbb
popa
pop
pop
push
mov
cld
fldlg2
mov
iret
pop
inc
aaa
jecxz
std
leave
push
pop
add
es
into
rclb
cmp
test
jno
test
pushf
mov
lret
bound
xor
mov
fldenv
xor
aad
xchg
inc
hlt
jbe
pop
mov
xor
pop
xchg
sbb
and
mov
repnz
clc
add
inc
imul
jge
pop
and
rcll
pushf
sub
int3
sarl
mov
mov
mov
call
mov
aas
adc
xchg
sbb
inc
mov
inc
mov
cmp
pop
jecxz
clc
mov
les
mov
and
push
aas
movsb
sub
add
dec
add
call
imul
lock
sub
mov
das
adc
fldenv
jnp
xor
das
and
inc
or
faddl
jae
shlb
cld
xlat
sbb
mov
push
cmp
xor
ds
out
add
jne
repnz
scas
add
pop
imul
dec
pop
cmp
sbbb
push
in
dec
push
adc
inc
xor
or
push
add
pop
xor
mov
pop
or
lds
lret
xchg
mov
add
sbb
adc
sbb
inc
xchg
loope
incb
stc
xchg
cs
push
dec
push
sbb
mov
mov
pop
jo
mov
pushf
arpl
sub
push
imul
dec
fwait
adc
rolb
xchg
out
ss
sahf
push
and
sbb
in
adc
fimull
mov
and
and
cmp
cs
mov
or
or
stos
fwait
cmpsl
enter
sbb
or
fcmovu
arpl
loope
xchg
adc
adc
rcrb
or
pusha
daa
dec
adc
inc
mov
aas
jle
sbb
sub
fmull
xor
cmpsb
mov
in
cmp
mov
cmpsb
loop
ret
and
pop
dec
imulb
adc
and
mov
cltd
outsl
stc
dec
push
or
imul
mov
adc
mov
add
lea
inc
sbb
test
pop
jne
out
and
imulb
pop
enter
mov
lcall
cmp
stc
cmp
mov
push
mov
or
daa
sbb
roll
daa
out
jnp
and
repnz
jg
pop
adc
mov
ror
xchg
sbb
sub
test
shlb
dec
popa
in
inc
lea
xchg
popf
rorb
mov
sub
in
fistl
pop
bndldx
subb
repz
movsb
xor
mov
inc
arpl
in
mov
shrl
and
scas
and
push
shrl
loop
cmp
jns
repnz
add
inc
xor
mov
jb
jae
out
mov
inc
cltd
lret
sti
jmp
roll
push
adc
imul
sbb
or
inc
push
out
push
adc
or
sub
jecxz
mov
push
test
push
xor
xlat
push
adc
cmp
sbb
call
shrd
xchg
shr
stos
invd
sub
jmp
fs
xor
jo
mov
je
sbb
roll
mov
into
shrl
pop
js
iret
aad
mov
sbb
repnz
mov
into
mov
sub
or
and
test
mov
sbb
push
mov
rolb
or
and
pushf
push
push
mov
mov
jo
test
cs
jo
pop
int
insl
cmp
inc
or
mov
cmp
pop
mov
pop
cmpsl
int
call
cld
call
pop
test
sbb
inc
lcall
sbb
aas
bound
mov
push
xor
fldcw
add
push
sub
lret
and
or
sbb
iret
inc
or
sbb
jnp
inc
or
jl
call
shrb
stos
mov
xor
mov
jb
or
inc
cmpsb
out
add
outsl
lea
mov
fstl
shlb
push
icebp
sahf
lds
pop
add
mov
cwtl
xchg
popa
cmp
push
hlt
popa
or
test
fcoms
mov
lret
out
repz
loop
scas
or
imul
cmp
xor
inc
in
sub
pop
inc
mov
pop
iret
addb
iret
fwait
mov
lea
in
jle
jmp
lret
xlat
stos
das
cs
in
aaa
mov
aad
push
inc
jl
mov
inc
xor
shll
pushf
outsb
xchg
shlb
xor
lcall
cmpxchg
add
sub
jle
iret
sub
movsl
movsb
jnp
insl
mov
inc
jg
cmp
pop
dec
mov
and
imul
nop
xchg
pop
lcall
mov
xchg
and
repnz
push
adc
and
push
xchg
dec
xor
mov
mov
dec
xor
sub
lea
out
insb
outsl
cmpsb
fwait
mov
insb
arpl
lods
push
mov
fldcw
ret
sub
lods
and
movsb
shl
out
rcll
inc
stc
lret
push
xchg
jmp
xchg
repz
in
or
mov
sbb
pop
jge,pt
fiaddl
push
fstl
push
test
lea
mov
xor
cmp
popf
outsl
or
pop
or
shll
push
xchg
adc
or
into
push
cmp
sub
mov
add
lods
lret
cmp
popa
fstp
cmc
jno
jne
leave
scas
cmp
lods
mov
mov
mov
cmc
and
push
cmp
push
out
ja,pn
test
mov
push
cwtl
jecxz
fcmovnb
rolb
xchg
add
dec
adc
adc
cs
stos
jno
jbe
idivl
add
pop
lods
int
mov
xchg
fcmovb
iret
mov
sbb
adc
mov
cltd
cmc
icebp
or
in
xchg
loop
mov
fbld
sub
push
cwtl
mov
lret
push
sti
jecxz
mov
ficoml
rorb
decl
out
pop
jg
ds
filds
push
and
cmp
test
pop
enter
fsubrp
dec
fnstenv
test
fcomip
jmp
out
pop
xchg
mov
or
mov
jmp
nop
push
lret
inc
jp
and
push
lea
ss
dec
pop
js
popf
dec
lock
in
icebp
jno
cmp
gs
add
lcall
sbb
push
ds
adc
sub
mov
mov
aaa
mov
sarl
pop
movsl
mov
nop
adc
sbb
decb
fbstp
add
cmp
sbb
and
and
movsb
scas
adc
ds
cld
shlb
xchg
xor
scas
addr16
mov
sub
jb
lret
or
add
cmc
pop
cmpl
sub
push
or
dec
cmc
jbe
push
jno
outsb
aam
cmp
andb
mov
rolb
stos
pushf
xchg
stos
cmpsl
push
xor
daa
pop
and
mov
imul
jp
lods
add
imul
sub
push
xlat
sub
cmp
int3
aad
mov
inc
jne
dec
push
add
or
mov
xor
cltd
and
jae
xor
or
xor
adc
push
dec
jb
dec
dec
rorb
aas
stos
jo
sbb
imul
sti
sub
sti
jge
cs
cli
sbb
into
ret
out
push
arpl
jp
and
cmp
sbbl
push
push
hlt
outsl
adc
and
push
sti
pop
mov
cmp
test
rclb
jle
imul
xlat
jo
or
lods
ret
std
push
add
das
fsts
sub
jno
pop
xor
inc
xchg
lds
dec
cli
mov
mov
cltd
test
xchg
xchg
mov
mov
rorb
xchg
pushf
xor
les
dec
jle
cs
adc
add
inc
mov
aaa
sub
jbe
adc
in
scas
pushf
pop
pop
and
sbb
inc
xor
insb
or
in
lods
cmpsb
pcmpgtw
in
loope
xchg
add
mov
jns
loop
and
imul
jnp
cmp
lock
jecxz
lods
sbb
and
or
sbbl
and
in
mov
pop
aaa
xor
lahf
mov
pop
aas
dec
lods
or
jae,pn
inc
push
adc
or
pop
mov
out
push
add
ds
add
out
mov
adc
cwtl
jae
push
xchg
imul
fmulp
lret
nop
mov
xlat
add
ja
and
out
enter
addr16
jnp
lret
push
fwait
or
jnp
sarb
stc
xor
arpl
mov
inc
test
inc
push
pop
jo
xchg
xor
cmp
jl
cmp
push
mov
cmp
sbb
imul
push
rclb
daa
popf
clc
jmp
pop
lret
push
mov
call
dec
outsb
adc
xlat
mov
mov
cmc
pop
xchg
mov
ds
lods
add
faddl
push
lea
jg
add
push
nop
inc
das
dec
jb
test
movsb
pop
jge
mov
insb
inc
aad
inc
mov
not
fcomps
cld
dec
cmpsb
stos
jne
fldcw
sub
stos
mov
xlat
notb
cmp
add
test
cwtl
sbb
mov
stos
push
push
or
pushf
xlat
sub
out
jle
data16
or
and
adc
and
enter
fdivs
jmp
movsl
pop
imul
xor
mov
mov
mov
cltd
add
cmp
mov
xor
frstor
mov
or
stc
fmuls
std
fnstsw
cmpsb
je
push
test
rcrb
out
jle
lar
xchg
mov
xchg
or
call
cmp
mov
test
dec
cltd
xchg
or
sti
sbbl
cltd
push
push
xor
and
mov
std
jle
loop
add
movsb
inc
jmp
out
mov
pop
push
arpl
mov
xchg
lock
lods
inc
lods
es
popa
xor
dec
in
xchg
cmp
pop
out
sbb
mov
inc
push
aaa
push
popa
sbb
movsb
and
pop
xlat
je
or
inc
inc
sbb
push
repz
xlat
mov
jle
clc
movsl
xlat
fisubl
cmp
aaa
sbb
scas
adc
fldt
ja
subl
mov
loop
inc
add
xor
ljmp
sub
xchg
mov
push
stos
lahf
sahf
or
mulb
scas
and
loopne
cltd
dec
mov
add
mov
jb
fs
and
and
pop
push
cmp
jo
add
mov
jne
lods
test
sub
dec
mov
pusha
mov
xchg
cmpsl
xor
pop
cmpl
idiv
pusha
cli
test
mov
dec
mov
arpl
xchg
pushf
push
ljmp
rorl
lahf
jb
outsb
adc
repz
jle
mov
jge
mov
mov
fwait
insb
mov
xadd
inc
ss
aam
jne
lods
lret
lret
mov
push
out
mov
adc
inc
rcrl
and
push
dec
outsl
mov
inc
je
bnd
mov
and
lods
xor
pop
add
mov
or
xchg
out
shl
jl
cmp
push
aas
out
mov
adc
dec
sbb
cld
jge
cmp
adc
enter
dec
fs
xor
cld
xor
aad
mov
or
lret
sbb
inc
fimull
subb
std
jmp
insb
ss
outsl
notl
mov
xor
and
lods
mov
rcrb
adc
jle
push
int
aad
dec
bound
pop
mov
mov
mov
and
xor
sub
data16
dec
cmp
mov
pop
mov
and
sbb
sub
or
or
push
mov
mov
pop
adc
in
xchg
add
das
imul
and
inc
mov
fsubrs
dec
pop
cwtl
insl
insl
pop
mov
flds
in
mov
push
cli
in
push
xchg
mov
mov
out
fisubrs
in
add
inc
sbb
in
int3
out
test
mov
jp
ds
jle
and
sub
shr
mov
mov
mov
xchg
lds
notl
test
les
pop
in
pop
loope
xchg
jecxz
imul
pop
xlat
lea
in
fxch
out
test
je
adc
lds
iret
add
lods
lock
addr16
sti
in
mov
loopne
jae
jae
sbb
outsl
lcall
xchg
jns
sub
push
ja
cmp
orl
push
pop
mov
sub
lcall
das
jmp
and
push
sahf
mov
add
jecxz
imul
push
fdivrs
popf
xchg
repz
test
shrl
mov
mov
mov
push
cltd
add
xor
fwait
int3
les
mov
fidivl
fildl
int
out
jmp
mov
ficoml
mov
sub
out
pop
mov
add
mov
das
adc
jnp
mov
fs
cmp
cmpsl
push
rcrl
js
xchg
mov
adc
sub
sahf
dec
dec
inc
xor
lcall
cld
sub
cmpsl
fisttpl
cmc
outsb
adc
in
mov
sbb
aam
notb
push
jns
iret
pop
adcl
sbb
shlb
sbb
sbb
mov
push
add
mov
loopne
cmc
xor
out
inc
push
and
mov
mov
inc
dec
jecxz
ja
mov
xor
xor
mov
into
dec
stos
xchg
and
lcall
aaa
cmc
push
mov
leave
xor
adc
sub
daa
sbb
loope
int
xor
jg
ljmp
pushf
test
leave
bound
inc
iret
mov
sbb
inc
je
add
inc
ja
sbb
xor
mov
jge
ljmp
and
inc
mov
xchg
rcrb
andb
or
pop
pushf
je
decb
mov
pop
push
pop
lds
addr16
xchg
and
inc
inc
inc
lcall
lcall
push
inc
or
mov
jae
cmp
jnp
je
adcb
decb
add
es
ss
and
lgs
jmp
in
rclb
xchg
adc
setne
mov
cmp
mov
sbb
pop
aam
enter
cs
inc
mov
getsec
xchg
inc
int
mov
test
mov
xor
cld
es
mov
test
imul
adc
jecxz
in
jb
cmp
jp
and
aam
and
or
lea
mov
je
test
mov
push
xchg
mov
mov
mov
or
mov
es
or
lahf
mov
daa
mov
cs
mov
and
int3
in
xchg
call
out
cmp
and
aas
imul
subl
outsl
out
mov
inc
push
js
jmp
fists
xchg
push
or
call
or
popa
sahf
test
push
in
push
sub
jg
lock
bswap
sub
imul
sub
sbb
xchg
cmp
inc
ret
fxam
loopne
roll
inc
dec
cmc
gs
mov
dec
mov
inc
and
xchg
sahf
mov
lahf
iret
jp
adc
xlat
cmp
scas
inc
stc
jnp
and
mov
fbstp
adc
jnp
sub
lods
xchg
sub
and
iret
push
hlt
push
fisubrl
shll
shlb
stc
inc
fists
inc
outsl
and
xor
rcl
call
xchg
mov
cwtl
add
add
mov
mov
fwait
mov
pusha
jmp
jmp
lret
dec
or
sub
jb
aad
repnz
insb
aas
inc
arpl
stos
int
xor
xor
pop
aas
aaa
or
and
cmc
arpl
sub
dec
lahf
xchg
sbb
mov
iret
adc
mov
das
int3
pop
xchg
sahf
mov
fstpt
or
aaa
rclb
outsb
adc
wrmsr
ror
fbld
xor
xchg
movsl
sub
into
and
iret
std
cmpsb
and
les
inc
xchg
repnz
mov
mov
outsl
std
sub
aaa
rcrb
inc
or
jmp
push
out
les
pop
mov
sbb
arpl
xchg
cmp
adcb
sub
aas
shrb
js
lock
ffreep
pop
out
adc
test
cmp
inc
mov
lea
cmp
sub
jle
popa
push
adc
sub
jp
jg
ss
cli
scas
aaa
mov
cmpsb
or
stos
hlt
add
pop
std
add
in
xchg
call
mov
pusha
push
push
lahf
inc
idivl
pop
bound
dec
dec
popl
je
nop
push
mov
ret
push
mov
movsl
mov
icebp
fwait
or
mov
leave
aaa
inc
sub
add
aas
insb
enter
dec
test
push
leave
dec
call
sub
xchg
setns
or
icebp
es
mov
mov
sbb
ljmp
mov
and
in
es
sub
jae
jmp
clc
stos
lds
xchg
pop
mov
mov
or
mov
adc
and
in
xor
xchg
fcoms
sti
arpl
and
lret
fadd
pop
dec
movsb
rclb
jo
xchg
add
dec
xchg
aam
ja
mov
push
sarb
dec
and
mov
nop
or
mov
jne
inc
test
and
push
imul
sub
inc
addr16
clc
sbb
mov
sub
sbb
pop
jne
mov
sahf
adc
movsb
ss
ret
jge
inc
or
ja
mov
push
and
rorl
push
cmp
fcmovb
jnp
nop
stos
and
sti
decl
cld
std
dec
insb
rorl
stos
mov
xor
cmp
xchg
in
mov
lea
std
fadds
int3
push
sbb
fadd
xchg
sbb
cld
in
lods
ficompl
or
in
shlb
data16
mov
dec
sbb
push
pop
imulb
test
daa
dec
lock
std
shlb
dec
sti
inc
adc
pop
sub
aaa
fiaddl
mov
cli
hlt
insb
imul
pop
stos
fcomps
loope
lods
sbbb
shll
xor
out
jmp
sbb
sbb
jo
mov
push
outsb
and
in
push
pop
into
and
stc
lcall
cwtl
setp
lret
les
mov
jp
mov
arpl
imul
lds
inc
sub
xchg
int
insl
mov
pop
adc
mov
mov
mov
in
fstps
scas
cmp
stc
fsubrs
xchg
lea
inc
xchg
push
minps
and
xchg
call
inc
addr16
mull
aaa
bound
mov
mov
mov
int
jb
loope
shl
lret
arpl
xorb
mov
ljmp
push
scas
jmp
dec
and
mov
xor
sbb
daa
imul
jl
daa
cltd
push
mov
dec
push
jecxz
and
push
push
fidivrl
fdivrs
push
loope
loop
fwait
xor
jae
adc
xorb
jns
sub
ljmp
lods
cmpsl
pushf
fstpl
fs
sub
xor
adc
jbe
inc
dec
push
movsb
stos
sub
add
adc
fwait
push
out
pop
push
mov
jecxz
gs
xor
in
jmp
push
or
pop
mov
push
xchg
loopne
in
in
pushf
jo
pop
inc
cmp
dec
hlt
push
movsb
pop
xchg
dec
and
lds
stos
js
mov
insl
ja
pop
mov
sbb
stos
dec
movsl
cmp
xchg
xor
push
bound
pop
and
test
shrb
lea
pop
fcoms
sub
gs
pusha
push
xchg
out
push
jbe
jp
cmp
arpl
test
cmp
rclb
ja
into
and
ss
jne
sub
cmpsb
leave
stc
or
nop
sbb
int
cmp
ljmp
subb
adc
clc
test
popa
stos
aad
mov
jo
mov
mov
inc
pop
fistpll
bound
stos
and
or
mov
das
and
lret
popf
xor
mov
mov
push
fcoml
dec
out
test
mov
fistl
lock
insb
inc
ljmp
cmp
or
bound
inc
xchg
and
jg
shrl
dec
jle
mov
stos
dec
mov
loope
mov
add
adc
jmp
sub
mov
fs
push
push
xor
cmp
push
scas
adc
xchg
adc
fisttpll
repnz
lahf
rcrb
fmul
dec
xchg
mov
lods
clc
mov
cltd
int
xor
adc
jmp
mov
decl
and
mov
xor
jb
cmc
pop
pop
xchg
mov
test
sbb
pop
cmpsb
adc
rcll
aam
adc
mov
and
adc
push
push
out
push
push
lret
xor
mov
aam
loopne
in
jge
or
out
lea
stos
lret
filds
cmpsl
cwtl
xchg
mov
orl
mov
mov
xchg
pushf
shll
lock
sti
xchg
mov
pop
xor
cmpsl
dec
xor
xor
cld
add
addl
mov
dec
aaa
sbb
lcall
cld
mov
lods
loopne
xchg
loop
imul
cmp
fisttps
mov
lret
push
push
ret
movsb
or
jo
add
xor
push
cli
cmp
jmp
aam
jecxz
aas
adc
pop
stos
call
pop
push
mov
arpl
rolb
sub
mov
sti
outsb
dec
push
jmp
daa
call
add
pop
pop
pop
dec
mov
adc
bound
pushf
and
and
push
fucomip
enter
sub
add
or
lds
imul
int
lods
mov
jb
fstps
cmp
hlt
adc
mov
pop
int
mov
or
inc
mov
es
pop
push
push
push
imul
or
ret
pop
dec
rorb
jmp
sub
add
bound
pop
sbb
test
xlat
jno
data16
call
push
mov
daa
xchg
das
jb
jle
pop
lret
inc
push
jnp
pop
mov
cltd
adc
subb
inc
loopne
add
mov
and
and
lahf
dec
aad
scas
fisubrl
aad
idivb
fistpl
xor
data16
test
sbb
sub
or
inc
jb
pushf
inc
filds
and
jmp
fldl
xor
imul
in
push
sbb
lea
and
mov
sarl
insl
dec
sbb
test
mov
pop
push
stos
sahf
std
lds
jl
aas
and
pop
jecxz
adc
fidivs
add
jg
rcr
decl
ret
add
enter
cltd
in
adc
dec
inc
sbb
xorl
sahf
ds
dec
pusha
les
mov
popf
xor
jne
test
std
test
sub
mov
enter
mov
sbb
cmp
test
mov
sub
std
out
hlt
out
adc
xchg
inc
add
mov
pop
cmpsb
xlat
jbe
stos
dec
aaa
aaa
pop
test
mov
pop
sub
mov
loope
test
lds
rclb
fldl
lds
in
mov
adc
loop
add
add
mov
xchg
and
xsave
sub
ror
lcall
sbb
pop
add
lock
sbb
adc
push
and
sbb
pop
cmc
sbbl
push
pop
fwait
mov
sbb
cmp
mov
lahf
pushf
lods
jo
test
mov
push
movsb
jbe
enter
and
pop
push
orb
enter
push
sbb
xor
stos
and
scas
vphadddq
sub
nop
sbbb
inc
cmpsb
cmpsl
mov
mov
sbbb
shr
push
fxch
cwtl
loopne
scas
lcall
pop
jbe
roll
adc
roll
pop
aam
or
xlat
dec
mov
pop
aad
mov
and
data16
push
add
in
push
jp
popf
ret
pop
mov
shl
fidivs
out
add
jo
imul
mov
push
mov
pop
insl
lcall
fildll
outsl
and
fstps
out
and
loop
test
cltd
xchg
hlt
iret
movsb
test
mov
test
xor
add
xchg
mov
cmp
or
mov
loope
dec
adc
bound
inc
push
adc
arpl
es
or
fs
sub
ret
mov
out
mov
in
pop
aaa
lret
mov
mov
lods
cmp
loop
aad
shl
lea
jmp
xchg
das
cli
lds
pop
inc
pusha
rorb
xchg
adc
mov
mov
inc
test
jle
hlt
jl
xor
add
incl
stos
in
je
mov
fsubrl
or
lahf
orb
cmpsb
mov
aam
or
cmp
pop
lods
add
and
in
or
mov
xchg
loopne
outsb
lea
mov
call
aaa
cltd
out
sbb
mov
adc
xor
es
leave
pop
push
inc
in
leave
mov
out
mov
add
pusha
out
shlb
add
or
cltd
sub
dec
cmp
jp
test
insb
out
dec
mov
xchg
cltd
dec
pop
imul
stc
notl
test
adc
mov
test
fcompl
clc
dec
pop
or
adc
pop
popa
mov
mov
adc
mov
mov
fimull
pop
pop
and
pop
push
inc
dec
out
push
or
jo
mov
pushf
lahf
test
mov
test
push
in
scas
pop
mov
das
inc
mov
and
push
aas
dec
leave
movsb
mov
jg
ret
jnp
movsb
xchg
lret
xor
nop
loop
int
addr16
mov
in
scas
pusha
adc
jb
pop
lcall
pop
and
in
sbb
je
sbbl
cwtl
sub
repz
enter
push
pushf
mov
in
or
repz
push
sti
pop
arpl
sub
pop
test
daa
dec
aad
dec
inc
stos
pop
mov
cmp
js
lret
add
lret
push
lock
pop
xor
inc
jmp
rclb
mov
mov
jecxz
push
jmp
mov
punpckldq
dec
jbe
mov
nop
add
or
test
repnz
mov
mov
je
test
mov
or
cmp
jp
decb
add
mov
push
and
loop
fbstp
adc
or
add
dec
ret
push
fs
adc
xchg
xchg
popf
mov
int3
or
loopne
and
sub
loopne
jae
and
pop
inc
aas
stos
fidivrl
mov
lret
pop
xchg
ja
jle
cmpsl
bound
loope
scas
add
sete
movl
cld
adc
and
sbb
cltd
ds
and
xor
test
je
mov
cmp
jo
and
xorl
addl
dec
loopne
add
loopne
mov
jno
icebp
cltd
xor
loop
lods
inc
sbb
adc
rorb
pusha
jge
shll
call
xor
pop
call
jp
sub
int
add
cmpb
test
sbb
enter
xchg
cltd
daa
sbb
dec
cmp
push
xlat
sbb
sub
jb
daa
inc
inc
xchg
popf
cs
movsb
ja
mov
je
push
stos
lret
or
or
dec
test
sbb
fs
test
lock
out
xchg
pop
cmpsl
in
xchg
mov
jp
xor
adc
mov
jle
mov
mov
mov
stos
imul
mov
test
pop
sbbb
jl
imul
inc
in
aaa
iretw
sub
or
into
loopnew
adc
std
sarb
mov
cltd
xor
jno
nop
add
ds
jl
lea
or
call
lods
xchg
imul
xchg
mov
imul
mov
pop
daa
into
repnz
andl
in
dec
xlat
xor
aaa
fmull
dec
dec
mov
and
jg
mov
add
and
dec
or
sub
add
or
out
and
mov
leave
cli
mov
jmp
xchg
sbb
mov
or
cmpsl
cmp
leave
icebp
and
enter
cs
stc
cmp
jg
pop
jno
int
mov
rcr
enter
sub
push
adcb
fsubl
dec
aaa
rep
andl
sbb
sub
test
add
testb
adc
sbb
loop
and
jo
push
mov
or
sbbl
sub
sub
push
pop
mov
xorl
adc
push
xchg
mov
out
gs
xchg
xchg
lcall
fmulp
in
leave
gs
adc
sbb
push
inc
in
mov
and
mov
pop
iret
jae
or
cmp
jle
or
mov
cld
rcll
mov
sbb
inc
inc
mov
pop
push
in
or
lds
mov
mov
aaa
dec
dec
shl
mov
rcrl
jae
xor
ljmp
or
xchg
ja
dec
aas
ljmp
mov
jo
pop
aad
adc
lea
mov
jnp
mov
js
int
mov
dec
sbb
fs
xor
dec
jl
dec
shll
jno
enter
xchg
cld
leave
rcrl
sbb
and
push
pop
adc
je
lret
int
test
adc
push
lret
sub
lahf
lcall
push
popf
inc
sub
lret
fldt
mov
insl
mov
loop
vmovups
and
mov
push
cmpsb
pop
movsb
fwait
inc
push
mov
cltd
repz
mov
xor
fcmovbe
mov
test
sub
push
pop
popa
mov
push
test
lahf
mov
dec
insb
into
or
mov
leave
sub
add
sbb
or
and
hlt
inc
jbe
sub
int3
xorl
cli
leave
sub
repnz
pcmpgtw
pop
loop
stos
mov
mov
sub
test
jo
and
fists
push
inc
pop
cltd
fcoml
dec
push
mov
push
imul
insb
in
fs
inc
xchg
aaa
and
rcrb
hlt
pop
clc
bound
jmp
lahf
jecxz
sarb
add
jb
rcr
fildll
mov
rcrb
cmp
jns
aad
mov
add
rclb
dec
jle
xchg
sub
roll
lcall
and
flds
xchg
subl
out
push
and
cli
xchg
sbb
adc
imul
leave
cwtl
pop
lret
sub
out
or
mov
outsl
popa
mov
xchg
out
cmp
xchg
cli
add
jle
aam
cli
inc
inc
lret
mov
xchg
mov
and
xchg
pop
into
push
add
ja
cs
mov
in
incl
mov
push
sar
dec
inc
outsb
xor
mov
fistpl
mov
push
jg
xchg
cs
sub
mov
orb
in
lock
or
in
push
push
js
ss
mov
cwtl
test
add
pop
mov
push
int3
popa
mov
adc
testl
lds
out
jne
cwtl
cmpsl
mov
and
out
insl
xchg
mov
aad
xchg
mov
lret
xor
adc
int3
mov
inc
push
les
inc
imul
mov
mov
cli
add
lods
out
arpl
outsb
lea
test
fisubl
adc
out
add
pusha
fdiv
or
inc
scas
mov
xor
adc
mov
outsb
dec
add
pop
sub
idiv
mov
mov
cmp
mov
adcl
and
or
int3
stc
cmp
rorb
leave
or
div
bound
and
dec
lret
pop
lods
imul
push
mov
pop
push
xlat
jle
mov
xorb
aad
pushf
lds
das
ss
mov
add
jo
lea
test
lods
mov
sub
jg
push
repnz
jge
sbb
fimull
fidivs
inc
xchg
repnz
pop
inc
sbb
int
inc
jns
movsb
lret
jl
xchg
add
push
pop
call
or
scas
mov
in
dec
mov
scas
or
mov
jae
sub
ljmp
int
add
cmp
inc
test
jbe
lcall
adc
cmp
mov
push
adc
outsb
push
mov
jnp
les
insl
arpl
cld
loope
xor
xor
xchg
push
pop
add
cld
mulb
rorb
cmp
or
mov
add
mov
adc
mov
xor
ja
shl
scas
fldenv
mov
popf
dec
xchg
fiaddl
push
repnz
jnp
leave
jp
xchg
les
sbb
clc
pushf
and
or
cmp
jae
cmc
fdivrs
push
aad
sarb
jnp
push
mov
or
repnz
inc
loope
test
ret
push
mov
and
jge
testl
imul
mov
cli
sti
popf
pop
test
ror
cmp
cmc
or
in
insl
pop
daa
leave
pop
sub
ja
repnz
xchg
test
jle
inc
cmp
sub
push
test
fwait
pop
jp
inc
leave
cld
mov
push
pop
test
mov
sub
sbb
or
fistl
in
insl
cmp
and
pop
aad
test
ss
mov
jo
movsl
xorl
mov
mov
js
xor
mov
jl
data16
ja
mov
mov
cmpsl
sbb
cmc
lock
cli
sub
les
pop
lods
push
jl
daa
ret
pop
in
mov
je
ljmp
mov
lds
adc
gs
xchg
push
out
and
mov
adc
jle
scas
adc
jne
jb
adc
movsl
pop
cmpsb
insl
mov
jno
imul
and
mov
dec
push
ja
xor
setge
pop
push
pop
in
mov
xchg
pop
add
mov
arpl
test
sub
in
lfs
leave
mov
or
pop
push
call
push
jno
addr16
mov
ret
scas
jge
mov
imul
xlat
in
movsb
push
inc
sti
lret
sbb
fsubrs
ret
iret
les
fisttpl
loopne
xchg
sub
imul
jecxz
bound
inc
and
ljmp
sub
mov
push
rclb
cmpsb
out
lock
shll
mov
test
sbb
add
xchg
daa
enter
cmp
xchg
sub
imul
add
lea
scas
and
sub
or
out
pop
push
rcll
mov
mov
movsl
jo
sahf
cmc
in
mov
sahf
xor
or
out
leave
test
lea
lea
cwtl
adc
jmp
pop
adc
hlt
ror
sub
xchg
sahf
inc
mov
ja
aad
pop
scas
dec
push
xlat
jns
test
mov
xor
fcmovb
push
push
sbb
imul
push
int
jnp
lret
mov
insl
fsts
jle
xor
nop
jo
shll
dec
dec
pop
jno
push
push
andl
dec
dec
pop
xchg
out
xchg
rcll
cltd
or
lcall
cmp
out
sbb
push
jne
pushl
jae
mov
pop
mov
shll
cmpsb
loopne
das
nop
insb
dec
and
nop
sbb
and
jg
pushf
mov
das
jno
mov
sub
mov
dec
push
addr16
je
add
add
jnp
mov
inc
stc
into
inc
pop
push
repz
in
xor
cmp
or
clc
xchg
in
xchg
pop
scas
sbb
ja
lds
push
xchg
sti
std
inc
push
jbe
jne
dec
xor
inc
lcall
mov
xor
or
sbb
or
dec
ja
in
or
loop
insl
xchg
sbb
gs
jg
in
jo
jge
call
mov
ret
and
jecxz
inc
sbb
test
pop
cld
out
test
jb
and
cltd
test
rorb
mov
dec
test
xchg
sub
lret
adc
xlat
xor
dec
push
and
out
call
popf
push
push
gs
sub
fs
sub
inc
addb
mov
pop
push
or
outsb
xchg
popa
adc
lahf
inc
sti
out
xchg
add
mov
into
repz
cli
mov
jg
pusha
fmul
mov
and
mov
sub
lods
adc
icebp
cmp
mov
push
out
repz
dec
push
lahf
mov
subl
stos
cmc
nop
dec
dec
adc
cmp
aas
lret
bound
add
mov
adc
int3
cmpsl
and
fisttpll
push
repz
iret
dec
repz
iret
pusha
or
fmull
in
sbb
dec
mov
push
aad
pop
adc
mov
sbb
inc
inc
push
pushl
out
int
test
les
cmc
cld
xchg
mov
ss
loop
pop
or
nop
dec
or
bound
push
fs
xor
add
xlat
jns
and
fildll
jmp
xchg
in
scas
jle
jnp
sbb
jl
aaa
mov
scas
inc
push
loope
into
xchg
ss
sbb
fstpt
repnz
movb
jg
out
shll
int3
push
mov
fsts
jge
cmpsb
icebp
mov
into
mov
jne
and
fs
mov
sti
jnp
subb
mov
pop
rorl
xchg
xor
lods
pop
jmp
orl
stos
jge
or
adc
fbstp
int3
jecxz
jl
out
mov
push
sub
movzwl
stos
cli
cmp
inc
sarb
enter
ds
and
mov
ficompl
mov
adc
js
repz
imul
mov
popa
lret
dec
testl
ja
shll
and
jecxz
repz
ss
icebp
lods
cmc
push
xchg
sbb
lahf
dec
addr16
shll
clc
ljmp
jnp
in
call
push
lods
sub
sub
sbb
jg
sti
stc
mov
jle
adc
xchg
faddl
jnp
rolb
mov
in
inc
popl
and
int
movsl
bts
hlt
xchg
sub
in
addb
and
sbb
in
out
dec
lgs
mov
mov
jg
enterw
and
loop
rclb
jmp
xchg
popf
fists
pop
cmpsl
lcall
jb
mov
ret
rcrb
xchg
push
dec
push
lcall
xchg
xchg
leave
ss
fistps
enter
cltd
fstl
or
in
add
dec
pusha
dec
cmp
ss
pusha
push
jnp
push
xor
out
notb
pop
mov
rol
xchg
xlat
cltd
scas
xorl
add
xor
insb
xchg
adc
add
dec
adc
or
mov
stos
sub
and
jb
sahf
mov
mov
xchg
add
data16
loope
or
push
sbb
dec
out
pop
xor
fisubrs
mov
mov
pop
inc
loopne
mov
mov
in
jbe
pop
inc
jo
mov
in
sbb
es
pop
pop
mov
mov
pushw
xchg
in
pop
mov
jg
roll
popf
nop
sarl
mov
mov
movsl
outsb
dec
or
xchg
pop
sub
xchg
cld
sbb
lock
jnp
mov
cmp
jns
scas
cmpsl
adc
call
mov
fists
shlb
jl,pt
and
adcl
seta
mov
popa
push
xor
movsl
push
cmpsb
lods
fcmovnb
xchg
andb
mov
fsts
ficoml
xlat
push
loop
bound
fwait
jne
rcll
lock
das
mov
loopne
call
push
out
push
adc
push
int
jo
and
add
cmpsb
ja
dec
mov
xchg
fisttpll
bound
hlt
mov
neg
rorl
aam
es
fdivrs
jle
xor
stos
or
int
pop
cmpsb
mov
aas
mov
sbb
sbb
push
scas
sbb
mov
dec
mov
push
mov
enter
xor
popa
mov
scas
or
mov
ljmp
sahf
cmpsb
sub
cmc
js
mov
fnsave
lea
dec
xchg
dec
insb
leave
pop
test
lods
cltd
inc
mov
xchg
outsb
xchg
outsl
jnp
pop
mov
xchg
shr
gs
sbb
or
dec
dec
rorb
jb
dec
dec
loope
sub
mov
cld
dec
std
lock
push
push
mov
aas
icebp
loopne
cmc
jb
or
push
js
cmp
fs
cld
jl
data16
or
push
aas
data16
mov
fwait
shr
jo
in
mov
jge
xor
mov
push
rol
jae
adc
hlt
ret
sar
push
xchg
jb
xor
aaa
mov
mov
lret
loop
inc
cwtl
int
stos
dec
subl
xor
sbb
xchg
ret
and
mov
fs
out
enter
sub
aam
add
jl
mov
scas
shlb
shlb
shl
adc
push
adc
les
and
pusha
mov
mov
cmp
aad
push
stc
or
mov
in
imul
rolb
dec
jo
cld
add
jmp
and
lock
out
movsl
pop
xchg
dec
fiaddl
cltd
imul
mov
adc
outsb
sahf
dec
adc
xor
ss
sbb
mov
add
push
data16
cmpl
call
xlat
mov
scas
and
push
jae
mov
cmp
pop
lods
fldenv
out
cld
xor
xchg
push
sbb
sbb
mov
xchg
std
lea
inc
xchg
mov
jb
fists
mov
pop
lods
test
test
mov
push
jg
stc
fidivs
ja
push
in
out
sbbb
mov
in
sbb
inc
fsub
into
in
mov
pop
int
mov
and
xchg
mov
bound
arpl
lret
cli
js
mov
jo
push
jnp
dec
cli
jmp
mov
or
or
cmpxchg
ret
xlat
pop
out
notb
jnp
jg
scas
xchg
jbe
cli
dec
loopne
data16
sbb
pop
insb
and
adc
and
xchg
das
in
int3
scas
lock
xor
aad
xor
dec
lcall
pop
sub
cltd
faddl
int3
and
lret
das
aas
stc
pop
int
inc
push
icebp
add
mov
shrb
test
sbb
lcall
roll
xor
pop
lret
ja
inc
test
xchg
dec
idivb
repnz
sub
push
mov
or
cli
in
clc
ljmp
jl
inc
fdiv
int
cmp
cs
popf
mov
sub
xor
push
pop
sbb
mov
add
lret
std
lret
lock
outsb
pushf
fsubs
cwtl
inc
adc
stc
outsb
test
stos
or
dec
mov
je
jge
push
push
scas
fxch
fwait
rclb
mov
loop
fstpt
sub
bound
dec
jecxz
jbe
adc
mov
rol
sbb
popf
mov
mov
dec
aas
ret
ret
mov
fldt
clc
pop
insl
aad
fidivl
lods
or
shrl
push
filds
subl
lock
inc
cmp
mov
lcall
mov
xchg
in
lock
pop
aam
mov
test
or
int
ret
sbb
dec
lret
sbb
shl
xor
stos
call
in
push
in
dec
xor
mov
adc
mov
mov
scas
repnz
sub
sbb
cli
in
mov
lods
cld
addr16
or
xor
xor
cmp
icebp
cmp
sub
repnz
loop
in
fdivr
shlb
dec
adc
pop
xchg
dec
push
bound
add
mov
stc
push
cmp
outsl
popa
dec
addr16
pop
orl
jne
insl
xchg
xchg
dec
or
sub
std
hlt
push
push
scas
xor
hlt
mov
or
sbb
out
lds
inc
and
lea
mov
inc
cmp
xor
xor
in
push
dec
jo
sub
int3
dec
rcrb
lcall
mov
mov
ficoml
pop
xchg
or
inc
inc
pop
mov
push
jp
xchg
add
dec
dec
mov
push
mov
mov
jbe
push
adcl
mov
cmp
lods
pop
lcall
and
outsb
rcrl
cli
call
or
adc
pop
idivb
and
sub
loop
dec
adc
ljmp
sbb
call
xor
mov
cs
js
sarb
pop
and
imul
push
fwait
lock
in
add
daa
sub
clc
cli
clc
sbb
sub
pop
insl
iret
or
clc
jl
push
rcrl
pop
cli
xchg
mov
cmp
jbe
clc
repnz
out
adc
je
xchg
push
lret
push
jb
movsw
push
movsl
imul
sarl
fisttps
cmp
insb
xlat
data16
scas
jmp
xchg
movsb
scas
dec
data16
push
shr
jno
ja
sub
pushf
sub
sahf
rol
dec
clc
cmpl
mov
fistpl
fbld
sbb
and
pop
pop
push
pop
jnp
into
cmc
adc
dec
lret
stos
pusha
sti
add
sbb
push
mov
add
add
movsb
mov
sti
mov
mov
mov
inc
das
push
lds
push
dec
and
out
xchg
into
loope
and
stos
xchg
dec
lret
test
gs
and
add
jno
sub
and
xchg
mov
adc
fsubrs
sub
fcom
sub
sbb
mov
cmp
divw
test
inc
mov
add
popa
ret
imul
xor
dec
pop
test
jb
call
inc
ror
test
xor
push
out
les
mov
rorl
enter
cltd
xchg
sub
push
mov
mov
mov
imul
ds
fcomps
pop
inc
icebp
sahf
in
addr16
cmp
lret
mov
mov
cmp
testl
push
imul
push
ds
jmp
lahf
add
jb
cli
cmp
ja
inc
add
or
cmpb
sbb
fdivrs
cmp
pop
or
mov
mov
push
push
push
rorb
dec
inc
mov
out
lcall
lea
mov
jecxz
outsb
imul
and
adc
std
dec
notb
xchg
sub
fldl
test
dec
ret
inc
rcr
cmpsl
xlat
and
ja
jle
enter
or
nop
push
clc
pop
negb
enter
mov
or
sti
mov
add
xchg
rcll
lock
popa
popf
popa
mov
sub
js
mov
lods
test
filds
sub
mov
into
ljmp
lods
lods
pushf
leave
adc
sub
ret
fdiv
sub
gs
repz
mov
jbe
and
inc
popa
adcb
out
out
mov
inc
faddl
and
mov
mov
cmp
addr16
or
jbe
sbb
ror
xchg
pop
pop
sbb
subl
cs
push
pop
ret
enter
arpl
and
cmpsl
mov
cwtl
adc
ret
idivl
push
push
or
xchg
dec
mov
aam
sbbl
push
or
push
sbb
and
cmp
jmp
fisubrs
je
lret
popa
pusha
in
adc
mov
lcall
repz
xor
adc
aas
cmp
mov
insb
bound
test
adcl
sub
sbb
add
push
mov
enter
mov
cwtl
mov
hlt
cmp
xor
repnz
jne
clc
jbe
adc
out
mov
test
adc
cmp
js
lock
clc
rol
test
and
inc
jecxz
dec
inc
ds
ret
aaa
leave
push
or
mov
mov
repnz
lock
inc
push
xor
outsl
xchg
sub
jecxz
pop
jbe
jns
pop
aaa
cmpsb
mov
add
aaa
andb
cs
xor
jbe
xlat
push
mov
loopne
lahf
faddl
and
xchg
setae
mov
pop
xchg
xor
cmp
fs
fstl
add
dec
insl
xchg
pusha
lret
and
mov
aas
ret
and
out
in
lret
sti
cld
adc
add
in
jns
je
outsl
daa
pushf
mov
ret
dec
fistps
test
shrl
popf
pop
pop
fistpll
mov
sarb
cmp
loope
adc
cmc
dec
sti
into
or
inc
in
mov
adc
inc
push
mov
cmp
mov
or
push
mov
imul
nop
mov
les
xchg
stc
insb
addr16
mov
xchg
cli
pop
and
jns
xlat
ljmp
inc
inc
mov
out
jge
and
or
mul
flds
push
movsl
outsl
or
scas
arpl
xorb
jl
inc
jo
lcall
pushf
pop
insb
sub
mov
mov
add
mov
into
int
loope
jecxz
lahf
adc
add
dec
add
mov
dec
jo
push
cmpsb
mov
cmc
mov
add
mov
imul
jo
gs
test
dec
fidivrl
or
aad
mov
cmp
lret
jae
sbbb
lods
adc
inc
data16
sub
outsb
jns
lea
jecxz
cs
test
arpl
add
pusha
jne
cmpsb
int3
call
and
pop
add
and
add
lock
movsb
xchg
lret
lock
and
and
cld
push
pop
orb
int
jbe
sahf
test
inc
dec
sbb
push
mov
and
add
xor
les
scas
pcmpeqb
std
out
sub
ret
aas
cmpsb
sub
roll
call
xchg
nop
adc
test
add
repnz
sub
xor
fidivrl
shl
sarb
mov
push
mov
add
xchg
inc
inc
jae
daa
pop
pusha
sbb
ror
insb
xor
lods
dec
jecxz
add
mov
sbb
sbb
add
pop
sarb
fstpt
jnp
ja
add
pop
movsb
arpl
dec
mov
fmulp
out
test
mov
insb
lret
or
outsb
xchg
jae
sahf
jge
sub
or
sbb
in
inc
lahf
xchg
lea
sub
push
inc
std
xlat
or
cld
sub
out
pop
insb
addr16
mov
mov
scas
cmp
mov
or
mov
dec
js
adcl
mov
or
dec
jbe
movsl
int3
bound
cmp
pop
outsb
xor
fstpl
mov
adc
sbb
stos
pop
shlb
fwait
outsl
pop
cltd
push
insb
mov
dec
stos
xor
xchg
dec
in
mov
es
enter
aad
int
mov
inc
out
out
mov
loop
cmp
xchg
cmp
mov
pop
jnp
xchg
mov
pushf
mov
sbb
fwait
cmc
lcall
sbbl
cmpsl
xor
sahf
inc
fs
js
arpl
or
xor
imulb
pextrw
push
test
mov
jp
inc
lods
fs
movsb
iret
movsb
dec
cltd
dec
jo
mov
inc
mov
cmp
or
pusha
in
jbe
dec
pop
inc
cltd
add
jne
es
adc
pop
add
sbb
negl
jle
push
add
lahf
mov
lods
adc
inc
push
clc
ljmp
jl
rorl
dec
cli
shl
mov
jmp
pop
push
push
push
xchg
int3
jb
mov
or
push
jbe
sub
jb
lods
sub
jmp
pop
ja
flds
push
or
cmpsb
cmpsb
ljmp
scas
mov
cmp
pop
inc
mov
pop
ljmp
push
sbb
in
mov
adc
pushf
call
movsl
fistps
mov
and
and
cmpsb
das
fistpll
pop
loop
or
inc
movsb
dec
fst
jmp
pop
push
test
push
mov
repnz
xor
loop
stos
or
sub
inc
push
xchg
lret
pop
bound
inc
and
sub
inc
push
xchg
inc
cmp
mov
mov
xor
mov
mov
in
and
jg
cmp
add
jg
arpl
pop
cmp
repnz
mov
mov
cltd
or
data16
scas
mov
inc
popa
out
jae
pop
movlps
test
mov
add
push
pop
cmp
jb
add
jbe
xorb
sti
adc
cmp
mov
push
ds
xchg
push
xor
push
int3
incl
xor
leave
mov
mov
fisttpl
push
test
cwtl
out
pop
sub
dec
push
pop
and
ss
mov
jns
fldl
jbe
sub
js
insb
addr16
cmp
jge
sub
call
jmp
xor
push
insb
repnz
aas
push
mov
xor
push
icebp
lods
push
push
mov
push
int3
aaa
adc
sub
out
mov
arpl
xchg
sub
imul
mov
cmp
es
jp
in
inc
daa
push
ret
arpl
popf
ljmp
or
scas
cld
addb
icebp
adc
jbe
inc
pop
sub
add
imull
xchg
mov
mov
faddl
incl
fs
fimull
iret
inc
lret
mov
loope
push
sub
mov
fisttpll
mov
pop
gs
fsubrl
cwtl
sub
nop
pop
lea
push
cmovne
lret
roll
icebp
xchg
pop
jle
push
incl
incb
mov
pusha
sub
dec
data16
push
cmpsl
ljmp
push
sub
mov
cmc
pop
fld
cwtl
jecxz
mov
lods
pop
adc
dec
inc
jle
sahf
icebp
ret
pop
int
fdivrs
sub
imul
add
imulb
jl
popf
cmpsl
addr16
in
popa
sti
cmp
dec
xor
jp
push
rorl
push
rclb
adc
cmpsl
pop
std
mov
fldcw
xlat
into
jne
dec
dec
bound
dec
gs
mov
rorl
xor
mov
daa
xor
jnp
ss
fwait
in
jne
pushf
cmp
popf
sub
fldl2e
add
push
sbb
lds
mov
jo
xchg
das
movsb
push
aaa
enter
xchg
mov
das
pop
popa
fwait
inc
test
shlb
aaa
movsl
mov
pop
dec
mov
jl
jg
cld
or
push
jo
pop
pop
ret
xchg
cmp
pushf
loop
cmp
shl
sbb
xor
aas
jae
fstl
jno
cmp
aad
imul
push
popf
inc
push
lret
arpl
jb
scas
mov
pop
rcrb
out
add
mov
jb
jp
and
imul
push
cli
add
es
jmp
lret
push
jmp
dec
lock
repnz
addr16
jno
mov
enter
cmp
cwtl
stos
mov
scas
dec
and
cld
cld
les
mov
add
add
mov
or
ja
stos
outsl
dec
mov
lret
sub
jge
push
push
cld
xchg
jg
pop
and
out
aaa
in
shr
push
push
in
sbb
sti
inc
mov
sub
dec
testb
inc
insb
scas
loope
icebp
dec
pop
xor
mov
fstps
push
push
push
mov
mov
mov
mov
aas
aad
stos
daa
pop
and
xchg
mov
push
sarl
push
or
sub
cmp
vmovaps
push
push
cmp
pop
cmpsb
lcall
cmp
mov
iret
xchg
stos
ret
iret
js
rol
inc
add
int
ret
push
aas
push
adc
gs
loope
fidivl
ja
jae
sub
shlb
subb
cmp
aad
adc
pop
leave
xchg
cmp
cmp
enter
into
pop
and
stos
mov
xchg
mov
addl
popf
sub
mov
jns
in
ret
and
jne
scas
pop
xchg
sahf
loopne
push
subb
add
sub
cmp
adc
dec
xchg
stos
data16
cmpb
add
loop
pop
test
and
jge
outsl
lret
add
push
xchg
cmpl
pop
jo
mov
test
addl
lahf
jns
push
mov
jae
mov
jns
movsb
fstl
mov
adc
sti
std
jmp
ss
daa
cmp
adc
xor
insb
rorl
repz
sub
mov
mov
pop
mov
cmp
shll
ljmp
adc
mov
pop
jp
arpl
cmp
adc
pop
es
fmull
dec
sbb
cld
das
lret
sahf
cwtl
and
push
cmpsl
sbb
sub
jl
sbbb
adc
test
mov
jmp
fdiv
aad
lods
rcrl
jmp
rorl
push
pop
push
cltd
lock
xchg
xor
mov
xchg
mov
jae
popf
adc
or
pop
mov
gs
jle
loope
int
in
ja
insl
cmp
push
xchg
in
mov
sbb
repnz
js
jle
mov
mov
daa
insl
movsb
xor
sbb
mov
add
hlt
inc
fstps
ja
fisubl
lret
repnz
push
cli
cmp
xchg
test
outsb
daa
mov
fwait
inc
jbe
add
xorb
jg
jbe
jne
mov
ret
dec
mov
xlat
xor
cwtl
cmp
xor
arpl
adc
mov
loopne
dec
fidivl
nopl
lea
mov
dec
push
dec
push
dec
test
dec
subl
bnd
xor
inc
in
mov
push
movsb
aas
ret
or
dec
out
icebp
push
or
pop
jle
aam
fistpl
xlat
jecxz
jno
sub
std
cli
push
loop
or
inc
sub
xor
xchg
js
jae
bound
roll
in
ss
outsl
sub
push
repnz
xchg
addb
jmp
or
lods
xorb
test
push
js
outsb
mov
add
arpl
add
ret
repnz
aaa
jle
and
fnstsw
add
lcall
adc
jbe
lea
pushl
arpl
repnz
cmp
adc
push
lcall
pop
mov
lcall
iret
repnz
insb
dec
out
lock
mov
adc
cmpsb
cs
pop
xor
imul
add
push
jno
inc
pop
mov
enter
sbb
dec
push
pop
xchg
xchg
or
jecxz
shll
add
sahf
in
mov
jno
xchg
push
xor
stc
sbb
sbb
xchg
pop
jge
sbb
mov
xchg
dec
push
dec
dec
push
mov
fsubl
dec
rorb
lcall
adc
loop
and
jmp
mov
loope
fisubl
sbb
into
xchg
lock
enter
jmp
imul
mov
lcall
xor
jmp
leavew
xchg
sub
sahf
scas
stos
inc
out
daa
stos
test
cmp
fdivs
iret
inc
push
mov
jns
aad
out
aas
test
ljmp
sub
sbb
cli
outsb
xchg
lret
mov
and
jecxz
xor
loop
xchg
mov
leave
arpl
incb
icebp
add
loope
lods
aas
insb
subl
orb
jns
bound
cmpsl
jmp
xor
push
add
push
push
add
hlt
mov
data16
sub
rolb
gs
sub
repnz
jbe
and
xor
or
push
and
or
jne
lret
xor
sbb
cmpsl
or
mov
cwtl
add
test
in
mov
sbb
test
push
and
jo
mov
pop
hlt
aad
and
jg
test
je
jne
dec
cmp
inc
jg
subl
jns
mov
push
xchg
les
jne
cmp
sti
mov
xorl
mov
mov
adc
or
outsl
xchg
stos
cmp
icebp
mov
cli
test
dec
jmp
jno
mov
sti
or
sbb
lods
insb
shrb
insb
outsb
test
enter
or
andl
or
shll
fisubrl
and
mov
xchg
clc
cmp
fs
adc
push
sti
dec
mov
mov
in
hlt
lahf
jae
lds
mov
xlat
fcmovbe
out
inc
and
xor
hlt
push
push
jge
int
mov
test
mov
aad
xchg
add
xchg
clc
jl
fcom
mov
sti
lods
adc
jnp
and
in
inc
rolb
insl
xchg
sarb
push
sbb
sbb
jl
sbb
dec
insl
mov
push
hlt
or
pop
add
dec
mov
xchg
insl
xchg
je
add
cld
in
mov
or
notb
les
lret
pushf
fs
mov
test
sbb
cli
in
mov
cmpsl
ds
ljmp
pop
mov
add
cmpsl
mov
and
add
addb
test
dec
sbb
pushf
push
inc
jno
dec
nop
out
and
aam
mov
mov
sub
mov
dec
daa
in
jno
repz
xchg
add
adcb
out
cltd
xor
imul
loop
mov
sbb
mov
jp
fsubrs
xorb
lar
ja
push
js
mov
cmpsb
xor
shll
pop
xor
xchg
rcrl
sub
push
roll
sub
jnp
jbe
mov
popf
nop
lcall
shlb
jbe
out
sbb
out
jns
xchg
xchg
test
push
leave
cmp
rclb
inc
movsb
stos
movsb
add
movsb
mov
sbb
roll
sub
cmp
sti
cmp
inc
out
push
aaa
mov
or
cmp
enter
cli
jp
in
shlb
pop
sbb
dec
cltd
mov
fisubs
or
push
pop
or
rclb
negl
jo
pop
notl
fwait
xchg
push
rcr
repz
adcb
sub
mov
cmp
aam
sbb
cmp
push
mov
movsb
pop
lret
and
loopne
and
in
cs
scas
les
fisttpl
jb
push
mov
mov
push
mov
pop
dec
cmp
xor
and
mov
push
dec
pop
xor
jmp
jo
cmpsb
xor
sub
push
sahf
jmp
push
imul
jae
push
and
and
jo
sbb
ss
es
xor
sub
icebp
jb
inc
repz
loope
dec
ljmp
movlps
xchg
out
data16
or
cmp
mov
aad
sbb
dec
pop
pop
adc
mov
push
pop
push
mov
push
mov
popf
jge
ljmp
insb
test
repz
mov
sarb
inc
inc
push
ret
call
in
rcrb
lea
inc
std
bswap
dec
and
iret
inc
jae
xchg
mov
and
push
sbb
mov
icebp
mov
add
cmp
pop
xchg
adc
jbe
jbe
clc
aaa
jns
lock
jo
inc
mov
imul
add
push
push
adc
ret
int3
add
out
or
test
in
sbb
sti
add
fisubrs
scas
movsl
js
lret
xlat
cmp
push
inc
data16
jg
xchg
push
maskmovq
testl
fisttpl
and
jmp
lcall
and
addb
ficomps
sbb
and
repz
cmpsl
inc
adc
shlb
in
jg
xchg
icebp
xor
jecxz
fdivl
orl
lock
inc
adcb
xchg
data16
test
fwait
mov
xorl
add
js
ficoms
push
mov
or
inc
mov
or
fisubl
adc
dec
fidivs
popa
aad
mov
rcrl
xchg
adc
stc
enter
push
les
aaa
push
add
lret
or
xor
lock
loopne
dec
ja
or
sub
jb
mov
out
jno
stos
sbb
jnp
outsb
cmp
pop
xchg
icebp
daa
xchg
add
js
push
jg
into
pusha
ja
aaa
das
inc
mov
and
arpl
sbb
dec
dec
pop
pop
fistpll
cmp
mov
lret
int3
outsl
push
cs
push
mov
gs
aaa
jns
daa
popa
mov
push
jae
jo
test
dec
mov
inc
sbbb
outsb
in
mov
cmpsb
inc
cmc
cmp
mov
jge
xchg
sub
push
sub
pop
int3
cmp
andl
into
mov
lret
into
ss
sub
fwait
cld
jge
out
jmp
ret
pusha
into
jg
aam
pop
pop
jmp
addr16
outsl
mov
inc
inc
lcall
fsubrl
add
shll
adc
mov
push
mov
mov
sub
in
inc
adc
loope
mov
ja
jns
xchg
fwait
push
or
mov
cld
bound
daa
js
xor
sbb
or
popa
fld1
adc
je
xchg
das
xchg
mov
outsb
repz
mov
pop
lods
shll
dec
and
outsl
cmp
and
std
dec
into
jo
shlb
push
hlt
dec
ret
sbb
das
add
pop
sbb
xor
icebp
mov
lods
arpl
sub
adcl
xchg
inc
cmp
hlt
lahf
pop
inc
push
inc
stc
into
jecxz
imul
mov
dec
out
mov
push
les
mov
aaa
mov
int3
adcl
stos
adc
lahf
frstor
mulb
mov
jmp
mov
cmp
daa
daa
push
cmc
inc
xor
xor
add
nop
test
popf
mov
xchg
popa
sbb
pop
push
sti
out
in
cmp
push
push
ror
cmpsl
mov
addr16
pop
pop
mov
fmulp
iret
cmc
sbb
dec
xchg
or
pop
cmp
leave
sbb
or
inc
out
jnp
inc
cmp
mov
pusha
rcll
into
popl
movsb
mov
push
xchg
mov
testl
mov
mov
lret
mov
movhps
notl
sbb
stos
in
fwait
sbb
mov
filds
sbb
fwait
bound
in
js
jmp
sub
loopne
pop
call
push
pop
out
inc
mov
mov
xchg
out
scas
insb
cmp
jne
cmp
push
add
aam
sahf
rorl
adc
jne
add
push
sbb
cmpsl
pop
lahf
xchg
fistpll
insl
andl
mov
loopne
rolb
fdivp
les
xor
push
mov
cmp
or
outsb
sbb
inc
cmpsb
idiv
mov
mov
xor
jmp
cli
dec
es
sbb
test
cmp
sub
aaa
outsb
orl
lahf
out
and
ss
pusha
and
pop
pop
rorl
add
adc
and
and
popf
sarl
mov
faddl
int3
cmp
xchg
push
cmpl
adc
jb
hlt
and
int3
sahf
cmp
push
lret
ret
dec
stos
push
lods
imul
adc
hlt
clc
push
pop
mull
cs
mov
addr16
ljmp
and
xchg
loopne
rorl
js
push
cli
ds
sahf
cld
andb
ficompl
jle
ss
pop
jp
popf
negb
sub
dec
hlt
cs
lods
pop
adc
pushf
cmp
jp
fidivrs
mov
pop
mov
sbb
fsts
subl
scas
xor
adc
mov
bound
lock
xchg
sub
scas
dec
lea
cmp
cmp
f2xm1
fisubrs
imul
add
mov
test
iret
cmpsb
in
sbb
push
cld
jmp
rorb
or
sahf
add
popf
cmp
addr16
push
lretw
pop
nop
push
inc
js
push
or
xchg
imul
lods
fidivrs
pop
daa
and
pop
xchg
gs
xchg
jae
shll
push
sbb
lods
mov
sbb
popf
or
mov
jmp
cmc
mov
scas
out
enter
sbb
xor
xor
adc
adc
cmp
les
jecxz
frstor
aam
dec
mov
call
cmpsl
push
sbb
pusha
fimuls
out
jo
sbb
lock
ret
or
repnz
inc
cmp
mov
jl
add
fwait
jg
or
xchg
and
cmc
stc
lahf
aam
loopne
inc
lods
adc
fwait
mov
and
push
ljmp
xchg
cmp
inc
pop
sbb
sbb
pop
inc
dec
push
push
mov
jl
add
mov
jns
push
jno
test
adc
popa
inc
popa
cmpsl
js
sub
data16
push
insl
jb
lods
sub
repz
push
and
ja
cmp
jge
and
pop
xchg
in
mov
jp
jmp
push
fmuls
cmpsb
les
insl
pop
jecxz
pop
fdivl
fs
orb
nop
test
lea
enter
dec
fdivl
movsb
loop
int3
mov
fs
pop
add
je
stos
fnstenv
inc
mov
lcall
cmc
push
and
push
and
add
int
mov
mov
fs
jmp
mov
mov
jno
mov
sub
stos
addr16
out
push
push
enter
jno
mov
test
pop
jle
adc
inc
pop
flds
mov
add
loopne
inc
cmp
cmp
popf
xchg
add
push
xchg
cmpsl
filds
mov
push
xor
sub
movsl
jno
and
ficoms
xchg
xchg
xchg
sarb
mov
cmc
insb
cmp
in
dec
push
test
add
nop
imul
add
das
enter
es
sub
sbb
xchg
popf
dec
clc
roll
pusha
sub
xor
pop
or
cmpsl
and
dec
in
push
sub
sbb
xchg
addl
xor
shll
or
add
and
pop
xor
idivl
outsb
xchg
mov
sti
addr16
xor
jge
mov
adc
ror
cmp
jg
inc
mov
push
xchg
cwtl
pusha
xchg
rol
pop
pop
in
cmp
fimull
adc
clc
js
jp
idivl
mov
mov
mov
out
shlb
sbb
xchg
push
sbb
mov
outsb
repnz
mov
imul
gs
lock
int3
pushf
lahf
out
insb
mov
sahf
inc
das
jecxz
fs
and
jmp
fisubrs
enter
lods
insl
lods
popf
aas
repnz
mov
sbb
movl
mov
scas
insl
xorl
shl
insl
in
ljmp
mov
pop
jmp
jne
push
cmc
cmpsl
rcrl
sub
fidivl
pop
pop
cld
fsubrp
in
aam
lret
testl
add
arpl
rcll
jbe
dec
mov
mov
jmp
push
dec
mov
pop
mov
popf
lds
mov
inc
jne
int
in
leave
das
sti
popf
pmulhuw
lods
cmpsl
xlat
rolb
mov
sub
icebp
inc
jg
and
call
cwtl
adcb
imull
push
dec
xchg
int
sbb
popa
leave
add
cmc
cli
shll
and
xor
outsl
push
enter
loopne
cwtl
mov
test
mov
sbb
or
push
sbb
add
cmp
repnz
push
pop
jbe
loop
mov
fnstenv
adc
loopne
loope
pusha
dec
cmp
push
out
xchg
sub
mov
inc
jle
test
sbb
mov
jnp
jg
mov
dec
sbbb
add
mov
pusha
mov
mov
out
dec
adc
pop
repz
and
mov
ljmp
clc
lret
sbb
jns
cltd
mov
ret
lock
jne
push
dec
add
dec
aad
shlb
xor
decb
pop
mov
pop
mov
movsb
sbb
inc
test
push
sub
sti
loope,pt
mov
jbe
cmp
sub
sbb
jb
dec
or
xor
std
sbb
push
mov
sar
in
mov
int
mov
mov
jg
clc
xchg
push
add
jp
xchg
and
das
xor
inc
pop
out
cmp
push
loopne
xchg
add
out
jecxz
xorb
push
scas
sub
mov
cs
cmpsb
enter
cmpsb
push
pop
in
out
adc
mov
fsubrl
and
xor
iret
inc
pushf
ja
ljmp
mov
loope
lods
sbb
in
adc
addl
inc
pop
subl
icebp
jmp
cs
cmp
xlat
pop
lahf
cmp
aam
pop
mov
add
es
jecxz
push
inc
cli
aam
mov
sti
xor
sqrtps
mov
add
mov
xorb
mov
leave
cmp
push
push
and
or
mov
mov
xchg
jge
cmpsl
push
ret
and
lods
xorl
inc
gs
nop
mov
cmp
fcoms
mull
jns
cmp
fwait
int3
ja
in
or
lea
mov
xchg
push
mov
decb
push
not
insl
mov
in
jno
mov
nop
movsb
xchg
insl
movsl
scas
outsl
mov
nop
jnp
hlt
mov
add
enter
inc
mov
icebp
fcoms
dec
movsl
out
jne
es
shl
jmp
lods
mov
cmp
dec
pusha
nop
inc
out
xor
dec
test
rol
inc
into
rcll
cld
mov
lock
mov
aaa
adc
mov
xor
cwtl
fsubl
dec
ja
ficoml
xchg
mov
insl
clc
jg
sub
mov
sbb
push
scas
aaa
nop
inc
jbe
movsb
pop
into
loop
jp
sub
movb
or
test
lret
test
xchg
xchg
adc
cli
leave
or
mov
and
insb
jnp
xor
scas
mov
sub
in
dec
jge
mov
cmp
or
cmp
mov
fcmovnbe
bound
leave
jno
inc
or
dec
pusha
dec
add
push
lods
adc
outsl
outsl
stos
lods
in
cmp
lods
mov
out
lret
stos
jl
adc
sarl
xchg
jnp
enter
jbe
mov
loopne
std
movb
fimuls
xlat
add
into
std
jo
rcrl
jae
mov
shll
lret
push
dec
outsb
js
push
loope
lods
imul
cmp
xlat
loope
repnz
ret
sbb
std
repnz
mov
mov
mov
test
aas
mov
fldcw
and
xchg
fmuls
leave
mov
push
and
loopne
push
insb
xlat
adc
shlb
test
je
roll
int
scas
mov
cmp
cmp
movsb
dec
sbb
icebp
addr16
mov
aas
mov
fwait
push
xor
les
sub
mov
fistps
mov
in
cmp
out
subb
faddp
rcl
inc
dec
mov
cmp
pop
daa
pop
xchg
mov
lea
scas
xor
icebp
xchg
je
popf
mov
xchg
mov
xchg
and
scas
sub
push
pop
sub
mov
cli
lahf
fsubl
xor
leave
push
add
xor
mov
jle
cwtl
loop
sub
dec
inc
push
repz
sub
daa
loope
ret
push
dec
js
xchg
fdivs
fisttpll
mov
xchg
and
pop
push
cwtl
adc
addr16
fmull
inc
faddp
pop
mov
cmpsb
fadds
lods
into
sub
bound
xchg
inc
pushf
jo
mov
in
cmpsl
or
xchg
inc
cltd
clc
inc
xchg
popa
mov
mov
adc
mov
les
into
lock
xchg
xlat
mov
inc
adc
cld
bound
iret
daa
dec
lds
jle
fildl
repnz
int
enter
repnz
mov
icebp
add
cmp
mov
dec
jle
cmp
jb
scas
jnp
push
cmpsb
xchg
mov
push
or
fisttpll
aaa
mov
mov
addb
icebp
pop
ret
cmc
in
xchg
into
mov
dec
push
cmpl
repnz
leave
pop
movsb
add
negl
jl
ficomps
mov
mov
mov
push
pop
stos
clc
cltd
js
mov
xor
popa
fsubrl
movsl
jge
hlt
arpl
xor
adc
dec
inc
es
jecxz
notb
pop
loop
test
cmpsb
push
mov
pop
pop
inc
ret
add
test
mov
insl
jmp
adc
test
mov
fucomip
jbe
xor
fwait
lret
add
xchg
sbb
mov
in
push
xor
and
xchg
jae
xchg
rcrl
pop
jg
outsl
jns
rcrb
mov
not
sbb
imul
pop
cwtl
add
repz
out
xchg
loopne
jecxz
dec
std
mov
pusha
outsl
fldt
dec
jmp
jbe
imul
xchg
cmpsl
addr16
ret
pop
cmp
lcall
mov
loopne
cmpsl
sti
push
inc
jnp
push
repnz
dec
jp
fwait
push
add
fdivl
push
scas
lahf
lods
or
stos
cmp
sbb
data16
cmpsb
nop
push
ss
jmp
inc
insl
and
testb
pop
cwtl
xlat
pop
hlt
add
fcmovnu
and
into
stos
stos
pop
movb
pop
jb
add
jnp
mov
mulb
lods
leave
out
add
xchg
xchg
sahf
ds
sarb
add
xchg
inc
jo
sub
lret
and
sti
js
xchg
xchg
mov
lcall
pop
mov
fsubrs
lahf
cmp
shll
icebp
adc
mov
pop
fldl
cld
lahf
xor
xchg
sbb
pop
pop
faddl
data16
jae
sub
adc
inc
subb
iret
pusha
cs
xchg
and
sbb
sub
int
xor
popf
mov
xor
push
jne
js
and
ja
sub
insb
ja
call
cmp
dec
in
in
outsl
icebp
cli
pop
inc
sarl
sbb
rcr
adc
rorb
mov
jp
xchg
xchg
sbb
jb
imul
addr16
mov
xor
movsl
jge
xchg
cs
push
je
mov
pushf
dec
and
and
std
cmp
pop
mov
jg
cmc
das
testb
mov
jecxz
pop
dec
xor
sub
cmpsb
pop
push
adc
pushf
mov
xor
decl
int
fwait
outsb
fsts
pop
sub
lock
cmp
mov
stc
mov
jle
mov
mov
cli
push
cmc
pop
xor
jp
push
call
inc
jae
lods
data16
or
push
pushf
mov
sahf
mov
jne
mov
pop
adc
insl
mov
rcrl
sub
sub
pop
mov
shlb
jae
pop
test
push
mov
xchg
jns
sub
and
push
popf
mov
jecxz
xlat
mov
ljmp
aam
sub
jae
pushf
jo
hlt
lea
jns
or
xchg
ja
sub
xor
push
orl
adc
lret
jg
ja
mov
xor
mov
movsb
andb
mov
push
ds
push
in
xchg
mov
push
push
xor
dec
mov
int3
arpl
dec
mov
test
loop
in
xor
xorb
push
fs
mov
mov
inc
fdivrs
push
jb
movsl
std
mov
outsb
inc
imul
jmp
xlat
test
push
aam
cwtl
stc
jo
pop
pop
mov
xchg
or
test
xor
and
push
test
clc
aaa
lret
mov
call
jle
dec
push
gs
pop
scas
push
pop
out
sbb
dec
or
mov
adc
test
icebp
nop
into
movaps
push
insl
ret
int
ljmp
clc
data16
cmpl
dec
cmpsl
xchg
dec
sbbl
ret
hlt
jb
dec
xor
mov
sbb
mov
cmpsl
aaa
rclb
movsl
cmp
jnp
in
daa
nop
add
inc
lcall
lods
mov
sbb
rcl
cmp
or
arpl
mov
das
fcomp
mov
mov
inc
jnp
mov
mov
add
lahf
call
scas
in
in
out
adc
add
sub
stos
jge
mov
out
mov
push
mov
push
jge
fists
loop
mov
nop
add
notb
pop
roll
mov
pusha
and
xor
adc
pop
iret
es
adcl
mov
jge
outsb
fnstsw
adc
xor
push
fs
mov
sti
pop
mov
inc
push
push
dec
sbb
cmp
outsl
mov
neg
mov
or
cld
push
push
mov
rcll
pop
setae
fnstcw
jp
addr16
or
pop
stc
push
lods
add
or
gs
mov
je
and
mov
cltd
jp
mov
hlt
test
addr16
orl
bound
lods
aad
sti
fistps
sti
or
cmp
jge
cmpsl
scas
lock
into
inc
and
sti
mov
popa
insb
add
mov
push
lcall
jno
mov
aam
inc
push
ja
jecxz
adcl
mov
cwtl
xorb
add
mov
into
pushf
push
xchg
in
xchg
xor
stos
jne
negl
fdiv
out
pop
add
dec
sub
pop
popa
rol
adc
shll
mov
aam
jae
push
cmp
insb
mov
test
or
push
nop
andb
iret
mov
pop
mov
mov
mov
mov
sbb
or
into
rcrb
imul
sub
enter
xorb
xor
pop
lcall
outsl
jl
adc
cmp
push
push
lock
push
dec
stos
add
scas
loopne
testb
out
mov
pop
adcl
push
adc
add
sub
xchg
das
lea
nop
push
pop
frstor
dec
in
xor
sub
imul
into
adc
mov
fdivrs
mov
mov
stos
or
sahf
sub
mov
sub
pop
scas
mov
or
push
xchg
push
inc
or
or
cmp
sbb
lods
or
icebp
orb
fwait
mov
pop
faddp
nop
enter
ds
lods
add
mov
mov
repz
es
cmp
push
xor
dec
mov
test
pusha
icebp
mov
sbb
mov
arpl
in
fidivs
push
ss
inc
lods
sub
cmc
repz
xchg
xchg
fisubl
mov
sub
xlat
jbe
sub
cmp
out
test
cmp
fucom
lahf
xor
adc
addl
fwait
aas
mov
pop
lret
test
outsb
pop
jecxz
xchg
jecxz
data16
push
bswap
pushf
jl
mov
push
cmp
je
push
into
stos
xor
mov
insb
mov
mov
inc
sub
aam
or
imul
mov
dec
loop
mov
sbb
icebp
testl
pop
xchg
in
and
jae
jl
or
fnstenv
cld
sbb
or
cmc
out
mov
subl
fwait
cmp
sar
xchg
xor
lods
fs
jecxz
mov
sbb
adc
les
fmulp
add
xor
cltd
dec
xor
pop
and
out
xchg
cli
adc
loope
xchg
iret
and
mov
js
or
push
cmpl
mov
std
push
ret
hlt
in
mov
imul
push
stos
fadds
push
bnd
stos
sbb
pop
sbb
sbb
sub
cmp
xchg
repz
pop
shl
fs
xlat
je
cli
ss
sbb
movl
inc
xchg
dec
cltd
movsl
gs
sub
xor
test
cltd
and
ret
fwait
ret
xchg
lcall
mov
mov
jg
xchg
lock
lock
or
adc
mov
es
inc
testb
pop
lea
imull
jl
sbb
or
mov
mov
fs
daa
call
mov
sub
pushf
fbld
pop
jns
adc
mov
pop
mov
cli
loope
into
ficoms
movsb
sbb
stos
shlb
leave
es
pop
or
jo
repz
cli
fcoml
push
mull
cmc
xchg
dec
jl
inc
and
jne
bound
xor
pusha
pop
out
inc
jno
xor
out
loope
and
mov
mov
jmp
inc
cmp
in
mov
popf
ror
inc
add
adc
rcrb
divl
jl
aad
cmp
fdivl
in
ret
loopne
movsb
push
enter
and
jecxz
adc
add
jge
and
in
out
andl
sbb
test
inc
push
push
icebp
or
mov
jle
sub
cmp
xchg
fmul
sbb
lock
lcall
cmp
movsb
jmp
pop
in
push
jp
jl
scas
xchg
sub
les
dec
sub
insl
loopne
addr16
pop
jecxz
or
sub
outsl
xchg
sbb
xor
test
nop
lds
sbb
sbb
rcr
add
loopne
inc
loop
cltd
cmpsl
jne
sti
rorb
sub
das
sub
fstp
mov
adc
gs
adc
jecxz
gs
movb
hlt
sbb
mov
push
popa
jecxz
cli
sub
dec
loopne
xchg
mov
mov
lcall
f2xm1
fildl
iret
add
inc
stc
jno
adc
inc
daa
icebp
xor
inc
dec
fdiv
inc
addr16
cmp
cwtl
inc
popf
fwait
pushf
jb
ljmp
int3
ds
or
out
cmp
mov
mov
and
mov
dec
pop
or
aas
pop
inc
or
scas
std
cmp
pop
faddp
rclb
jge
daa
adc
leave
adc
push
jg
jae
call
stos
aad
xchg
add
scas
lock
je
adc
popf
push
adcb
and
xchg
lds
jg
push
push
popf
jae
cld
push
adc
lret
popa
inc
fwait
iret
iret
push
loope
test
xor
jbe
jno
lret
in
idivl
fistpll
add
or
xor
sti
xchg
add
sub
cmc
lds
aaa
cmpsl
insl
xlat
dec
stc
mov
pop
pop
repnz
popa
idivl
xchg
push
ror
xchg
cmp
mov
xchg
adc
aam
push
push
int3
nop
and
push
rcr
notb
jp
mov
insl
pusha
clc
scas
js
je
push
push
push
adc
pusha
xor
clc
sub
jecxz
sub
int
pop
or
shrb
cmp
and
mov
ljmp
xchg
fadds
imul
xchg
mov
dec
stc
adc
jns
push
mov
dec
mov
rol
sbb
gs
lds
stc
sbb
mov
lods
lods
pop
or
bound
cmc
push
sub
pop
or
int
xchg
xor
fnstenv
mov
inc
jge
shlb
or
mov
dec
or
ja
cmp
popl
fldt
xchg
dec
or
dec
je
sub
push
add
sti
cmp
arpl
out
xchg
es
roll
cmp
lret
leave
xor
jns
mov
int
push
mov
lock
es
push
add
aaa
pop
fistps
sbb
push
and
inc
and
pop
pusha
rclb
arpl
int3
test
or
adc
jae
adc
scas
lods
and
adc
xchg
fldenv
aaa
mov
call
push
sbb
aam
arpl
sbb
jg
inc
pop
pop
xchg
cmc
pushf
shlb
out
xchg
jns
mov
sahf
lret
jne
or
cmpsl
adc
lds
mov
mov
pop
mov
movsl
jle
push
in
daa
dec
mov
sbb
push
mov
out
mov
stc
leave
sar
mov
mov
test
mov
in
stos
mov
cmp
mov
pushf
jmp
pushf
les
ret
sbb
ljmp
mov
cmp
mov
addr16
and
test
sub
adc
popf
mov
lods
xchg
dec
stc
mov
aam
pop
xor
outsl
jg
aam
addb
mov
stos
fs
subl
aad
cli
arpl
daa
adc
pushf
faddp
sub
test
aad
mov
outsl
hlt
mov
mov
push
insl
adc
sbb
or
cmp
inc
out
test
dec
leave
cmp
stos
push
xor
sub
nop
out
stos
dec
jmp
test
sub
fildll
cmp
mov
xchg
sbb
lock
jae
pop
test
push
pop
in
add
orl
stos
stos
pusha
sahf
movsb
hlt
or
sub
cwtl
fsubs
mov
lds
enter
sub
inc
dec
inc
sbb
movntps
lcall
push
idivb
pop
ret
out
fsubrl
clc
pop
add
shll
in
rcr
shl
jne
sarl
mov
lods
ret
outsl
push
push
js
sbbl
dec
add
int
inc
jbe
mov
sub
or
jle
fwait
and
xor
cmp
ja
ret
pusha
xor
and
lcall
nop
mov
dec
movsl
cmpsl
jno
loopne
pop
iret
popa
mov
mov
cmp
lret
mov
scas
ja
push
push
adc
shlb
flds
mov
popf
ret
aas
xchg
repnz
push
leave
xchg
stc
inc
mov
lds
cmp
stos
xchg
push
sbb
fists
test
and
sarl
sbb
sub
std
out
pcmpeqb
mov
xchg
push
pop
pop
pop
test
scas
push
cmp
push
xchg
outsb
lret
daa
fistpl
ja
cmp
cmpsl
inc
nop
mov
movsb
push
or
shr
mov
int3
mov
scas
aam
dec
subb
and
mov
push
ss
andl
test
flds
inc
push
dec
orb
inc
and
nop
mov
hlt
dec
cmp
movsb
lret
clc
push
pop
sub
push
test
lret
mov
pop
movsl
icebp
jg
push
jne
adc
pop
inc
mov
lret
lods
jne
ret
subb
fdivrl
sub
mov
ret
push
sbb
scas
les
es
ja
shr
xor
jp
adc
adc
ja
stos
push
mov
add
loopne
xchg
das
sbb
sbb
ja
mov
sub
into
das
xor
mov
push
xchg
cmp
bnd
sbb
je
cmp
add
push
aas
sbb
sahf
cmp
dec
fwait
pop
adc
sub
mov
jg
bound
dec
pop
repz
jbe
xchg
cmpsl
popa
sub
test
shll
cmp
repz
pop
addr16
lock
inc
sub
lret
or
sti
popa
aas
mov
dec
pop
in
mov
pop
das
js
dec
ja
int
sbb
sbb
cmc
aaa
pop
mov
cli
add
jae
pop
outsl
sub
jb
mov
xor
jecxz
cld
or
enter
in
xor
jmp
pop
sub
sbb
dec
ja
lods
mov
cmp
adc
sub
daa
jecxz
and
sub
xor
adc
sbb
es
adc
cmp
jbe
push
pop
les
jae
or
cmp
loope
cli
lahf
xchg
sbb
adc
loopne
andl
imul
test
loope
or
testb
pop
mov
xchg
lds
push
mov
out
xor
mov
push
jle
sbb
adc
push
sub
xchg
cmp
sbb
insb
push
test
or
out
je
mov
xchg
cmpsl
ljmp
or
sbb
sahf
cmp
and
hlt
and
sub
sub
mov
sbbl
pushf
insb
sub
inc
arpl
add
adc
popa
mov
out
and
inc
push
push
fcom
mov
mov
leave
repz
jge
pusha
sbb
xchg
cmp
lods
stos
adc
xchg
mov
mov
mov
mov
inc
jmp
ficompl
push
cmpsl
mov
imul
push
pop
mov
sub
es
push
mov
xchg
push
sbb
xor
shl
xor
fisubrl
inc
clc
daa
jbe
dec
adcb
lods
adc
rorl
ss
data16
push
xor
leave
dec
xchg
xchg
mov
jmp
xor
rcl
pop
out
mov
mov
jge
fs
nop
mov
stos
pop
pop
outsl
mov
add
inc
push
icebp
sub
push
and
push
lock
stos
fsubl
sar
jp
jp
pushl
push
add
mov
dec
or
jns,pt
out
inc
out
orb
movsl
xchg
dec
xor
fnstsw
mov
mov
or
pusha
mov
call
data16
mov
pushf
or
pop
jo
call
jnp
xor
call
pop
ss
jne
dec
mov
or
mov
xchg
stc
jno
ds
cmp
pop
pop
pop
popa
cwtl
addl
pop
cmp
cli
in
pop
push
jmp
cwtl
jo
js
sti
stos
dec
std
xchg
hlt
and
mov
insb
sbb
icebp
outsl
dec
sub
or
sub
sub
mov
or
test
dec
and
pop
not
fs
loope
mov
xlat
inc
rcrl
or
rorb
daa
jns
adcb
enter
xchg
ds
dec
divb
nop
jl
xchg
xor
xor
out
and
cmp
and
das
lock
sub
pop
pop
insb
fisttps
mov
repz
cmp
iret
dec
lea
pop
mov
or
fcomps
sub
xchg
sbb
repz
fdivs
and
mov
or
dec
aas
inc
mov
lret
and
notb
and
fisttps
push
add
and
pop
dec
aam
aad
mov
das
clc
xchg
jp
rorl
xlat
pop
fadd
lret
sbb
dec
stc
shll
cmpb
sub
mov
adc
cmpsl
gs
movsb
cwtl
jo
call
xor
push
mov
sar
lahf
xchg
and
pusha
enter
mov
leave
xchg
test
test
mov
adc
loope
mov
inc
push
les
out
mov
call
mov
xor
cmp
cli
cmpsb
push
fcmovne
pop
sahf
xlat
orl
rclb
and
rolb
out
xchg
imul
sahf
dec
or
mov
aam
jmp
bound
ja
cltd
jno
repnz
mov
in
cmp
or
ficoml
addr16
fimuls
aam
repnz
fucomi
cwtl
imul
test
ret
jecxz
sub
mov
in
fwait
adc
mov
test
fidivs
popa
mov
inc
into
icebp
mov
and
data16
fcomi
inc
xor
cmpsb
xor
xchg
cmpsl
pusha
stos
push
add
sahf
cmpsl
mov
daa
into
push
xchg
lods
xchg
fildl
pushf
leave
add
dec
add
pop
jo,pn
arpl
clc
les
and
je
lret
test
mov
and
in
cmpsl
mov
je
and
in
and
rcll
shlb
daa
clc
lds
inc
out
mov
cmpsb
rolb
stc
sti
mov
dec
mov
popa
xlat
fistl
adc
adc
rorb
adc
std
add
inc
mov
leave
xchg
lds
sub
int3
stc
inc
test
add
mov
fcoml
test
and
mov
in
aad
shr
jns
dec
lods
cmpsb
sahf
cmp
push
shrl
xor
stc
iret
pop
mov
rolb
in
mov
jp
pusha
add
sub
pop
arpl
pop
lds
in
adc
idivl
repz
adc
into
jle
faddl
mov
xchg
jbe
test
pop
shll
shlb
xor
xchg
and
sub
in
movsl
adc
rsm
jecxz
inc
xorb
cld
push
sub
adc
addl
jno
push
out
std
shll
pusha
in
stos
mov
test
cmpsl
jae
test
ret
xchg
cltd
xor
mov
ss
call
pop
je
cmc
ljmp
cltd
fistps
adc
outsb
xchg
repnz
sbb
mov
cwtl
sti
addr16
mov
inc
sbb
popf
loopne
mov
inc
cmpsb
fisttps
lods
dec
sub
cmp
mov
cmpsb
shll
mov
cli
lahf
cmp
sbb
sub
jmp
mov
and
inc
sub
push
test
cmp
sahf
mov
xlat
adc
test
pop
iret
bound
pop
sbb
mov
mov
icebp
dec
sbb
sti
ja
inc
aam
push
cli
jmp
pop
jne
bound
dec
adc
lods
ficoms
mov
and
out
popa
push
out
or
push
arpl
pop
push
sub
push
jmp
in
adc
jle
sbb
dec
out
cmpsb
mov
loop
inc
push
xchg
arpl
add
jnp
push
cmpl
sub
jmp
cmp
sbbl
sub
adc
pop
push
jns
lds
inc
jo
xor
test
inc
inc
fildl
sbb
mov
std
cld
mov
xlat
shrb
lea
fwait
notl
mov
in
adc
pop
ds
ss
pop
xor
jg
mov
mov
pop
adc
mov
fstps
test
push
cmp
jle
or
xchg
dec
xchg
inc
sub
addr16
shll
mov
outsl
fcoml
sub
or
and
aad
jp
leave
fdivp
call
loope
push
addr16
and
add
popl
xor
arpl
jbe
les
addr16
outsl
das
jbe
xor
or
cmpsl
cld
cltd
dec
xchg
rcrb
cmp
sbb
fcmove
jmp
insl
ret
pop
jne
out
in
arpl
or
aad
xor
loopne
mov
in
pop
push
test
or
fistpl
xor
mov
cwtl
fdivr
pop
mov
jl
jmp
xchg
and
adc
pop
aam
aam
cltd
push
in
outsl
std
jae
mov
adcb
fstpl
addb
sub
lahf
jbe
xor
int
jmp
xchg
sbb
icebp
stos
dec
enter
push
cmp
iret
inc
dec
mov
cmpb
dec
popa
mov
sbb
push
pop
mov
sbb
mov
enter
sub
cmpl
out
jnp
fiadds
nop
shrl
addr16
pop
mov
orb
fs
gs
pop
cs
iret
pop
mov
cmp
into
lret
adc
xor
sar
fmuls
jb
ja
popa
rcrb
push
and
dec
mov
dec
sub
lret
jmp
add
mov
pop
hlt
gs
lock
dec
xor
hlt
repz
outsb
and
orl
mov
movsl
shll
aad
js
ljmp
insl
sub
aam
dec
jmp
inc
imul
lods
jno
and
loopne
ret
add
jle
cmpsl
sbb
jno
sbbl
mov
outsl
out
je
pop
in
or
outsl
decb
cmp
shrb
xchg
out
cmc
ja
shrb
mov
ret
out
and
clc
cwtl
std
xchg
mov
mov
test
out
jp
jg
and
add
dec
pop
xor
adc
fdivrl
push
test
mov
sbb
xchg
sub
sbb
int3
imul
push
mov
dec
sbbb
jbe
mov
out
lds
cmp
xchg
jns
sub
mov
mov
cmp
jae
and
out
pop
or
decb
cs
aad
popa
loopne
and
out
lods
enter
jp
stos
cmp
pop
add
dec
and
movsl
xor
sbb
imul
xchg
or
pushf
adc
and
call
mov
icebp
or
mov
push
out
adc
jns
lahf
rolb
shl
and
aam
cmp
test
or
js
mov
mov
pop
cs
jb
mov
imul
jno
leave
cmpsl
fistpl
or
dec
aas
jne
dec
mov
mov
ret
push
in
lcall
jecxz
xor
push
push
and
mov
mov
inc
mov
ret
sarl
imull
mov
mov
mov
ret
jmp
adcb
ljmp
cmc
xchg
stos
mov
popf
adc
and
out
mov
out
push
test
mov
jl
arpl
jp
into
mov
mov
scas
and
adc
out
push
loop
imul
int3
ja
sbb
mov
pop
jl
or
in
inc
mov
fdiv
dec
sti
aad
cmp
adc
scas
jns
cltd
cwtl
ljmp
jae
pusha
in
scas
push
mov
test
cli
xor
je
pop
mov
divl
inc
test
btc
lods
fidivs
insl
xor
imul
jmp
inc
cmp
jl
std
aad
rol
xor
loop
das
jbe
enter
push
push
bound
mov
movsb
stc
ficoml
push
and
add
leave
pop
jno
and
and
push
jae
adc
xor
es
divl
pshufw
lret
push
js
sub
test
dec
es
cmpsb
jle
aas
stc
lret
adc
mov
pop
xorb
leave
loop
pushl
stc
xchg
enter
pop
popa
push
rolb
inc
sub
dec
pop
dec
mov
lds
loop
dec
inc
mov
jno
push
mov
mov
aaa
ja
xchg
adc
mov
sbb
scas
mov
lret
roll
mov
out
call
or
loope
idivl
ds
in
insb
fistpll
cmp
and
xchg
subb
imul
sbb
sub
das
pop
sti
aam
pcmpgtb
cmpsl
btr
outsl
push
aaa
mov
js
xor
cmp
push
push
xchg
shrl
imul
jo
or
xor
push
fs
jmp
cmp
jl
stc
jp
sahf
popf
mov
pop
inc
mov
sbb
cwtl
cltd
jge
cmpl
outsl
popf
inc
xchg
pop
or
insl
or
aad
mov
pop
xor
int3
dec
cli
mov
orb
test
push
fisubrs
and
adc
les
lret
dec
mov
add
mov
lods
cmp
jne
in
jl
ds
fbstp
and
out
andl
adc
xor
pop
addr16
push
sub
dec
ja
add
xlat
mov
mulb
cmpsb
mov
addl
gs
push
and
sbb
jno
pop
sbb
fwait
test
adc
mov
inc
sbb
out
lcall
push
mov
mov
popa
xor
in
orb
mov
stos
fadds
fstps
sub
dec
insb
and
jg
cmp
dec
jno
push
adc
mov
daa
pause
push
sub
cs
int3
mov
pop
jmp
ficoml
or
scas
out
dec
in
ficompl
mov
cmp
ss
mov
sti
out
xor
push
sarb
jae
or
and
cmp
or
push
imul
dec
jo
cmp
adc
sub
je
mov
mov
mov
inc
mov
icebp
cmp
es
adc
cmp
pxor
fnstenv
out
jno
cmpsl
mov
loopne
cwtl
inc
imul
adc
mov
and
ss
jns
sub
addr16
ss
dec
push
sahf
mov
nop
popf
out
ds
add
jl
aam
stos
out
lret
xor
push
push
stos
scas
cltd
lret
push
jne
adc
movlps
add
sbb
dec
inc
out
mov
cwtl
jo
int
das
repz
mov
cmpsl
jne
imulb
sbb
rol
je
sbb
and
cmpsl
ret
and
adc
pop
fcomip
push
push
rcrb
add
arpl
xchg
lods
add
push
pop
cmpsl
add
stc
cmp
call
dec
rolb
adc
and
lahf
cli
xchg
and
lcall
outsb
aad
hlt
and
fldcw
push
or
cmp
mov
data16
std
push
mov
insb
inc
in
inc
or
add
adc
in
out
mov
mov
das
cmp
xchg
rep
mov
mov
pop
jle
mov
aam
cld
xchg
sub
and
cmp
iret
cmpb
pop
cmpsl
pop
cmp
cmp
iret
push
mov
into
aad
orl
xchg
pushf
mov
inc
stc
pop
mov
cmp
jg
syscall
jns
andb
mov
and
push
lahf
jae
lahf
push
scas
pop
jae
popa
xorb
fiaddl
cwtl
bnd
cld
rcl
push
mov
pop
push
cmp
jo
inc
sbb
mov
xchg
inc
mov
movsl
adc
aad
daa
adc
dec
xchg
or
pop
rcrl
int
rcrb
popf
jnp
push
xor
adc
xchg
ss
test
push
cmc
scas
push
cmp
mov
mov
pop
ljmp
testb
insb
jns
dec
and
pop
or
xchg
hlt
cmpsb
push
dec
lahf
inc
sub
mov
jmp
out
pop
aas
popa
adc
or
iret
xor
inc
mov
fs
ffree
fisubrs
inc
cs
rorb
stos
aaa
sbb
int
inc
stos
leave
jnp
mov
lret
aas
xchg
test
mov
fs
push
pop
pop
mov
mov
lock
pop
out
leave
or
pop
lock
xchg
xor
negl
mov
cmp
cwtl
xchg
push
adc
add
js
cmp
sbb
pushf
sub
iret
mov
ror
inc
mov
mov
push
outsl
nop
lods
xor
push
rcr
lret
jmp
aaa
cmp
popf
jo
jno
or
dec
pop
push
pop
rclb
idivb
pop
stos
push
cs
mov
fninit
lods
movl
push
gs
and
call
fnstcw
pop
rcrl
fwait
pushf
pop
in
popa
leave
addl
gs
mov
push
out
or
das
cwtl
cmova
mov
push
pop
scas
ss
lret
jae
adc
push
pop
shl
mov
shlb
inc
iret
jno
fmull
sbb
xor
test
dec
or
pop
mov
cmp
mov
fs
xchg
mov
mov
out
sbb
or
aam
cmc
movsb
addr16
dec
shl
jne
int3
mov
lahf
mov
add
mov
lds
or
fsubs
or
push
lea
cmp
loope
lret
jno
adc
cmpsb
cmpsb
push
ds
mov
sbb
pop
jnp
or
out
aam
cmp
sbb
into
sar
push
mov
loopne
jno
mov
inc
in
mov
xchg
mov
sbb
jl
into
aam
neg
frstor
inc
stc
shrl
sub
mov
or
cmp
xlat
mov
mov
mov
and
out
and
push
in
pop
fcmovb
pushf
or
jb
push
xchg
roll
mov
pop
mov
bound
mov
inc
add
pop
jb
lea
addl
ljmp
or
fs
xchg
aad
lcall
inc
jecxz
adc
fnstcw
mov
adc
sbb
or
sbb
les
sub
jne
inc
and
dec
test
jo
call
mov
mov
scas
xlat
dec
stos
loopne
pop
adc
lahf
push
mov
add
pop
mov
icebp
mov
push
aam
jmp
mov
jae
fistpll
push
cmp
movsb
push
mov
adc
ret
mov
pop
sub
insl
jne
cmpsb
push
and
imul
inc
sbb
sub
mov
adc
bound
add
lret
mov
inc
xor
stos
dec
out
mov
and
sub
push
in
sub
mov
arpl
jnp
lret
orb
dec
mov
ds
mov
xor
dec
jae
push
sbb
jl
jmp
push
cmpsl
or
cmp
lret
and
and
lcall
movsl
imul
mov
out
gs
cwtl
fildl
aad
fildl
and
xor
lret
or
loope
push
and
cltd
sub
pop
out
push
aam
jb
pushf
loopne
add
or
mov
cmpsb
test
and
adc
shlb
jmp
cmp
cmc
bound
mov
call
clc
xchg
std
jl
sbb
popa
in
sub
dec
enter
lods
or
fistpll
lock
add
int3
pop
sbb
sub
mov
push
sbb
jg
movsl
or
push
aam
mov
cs
gs
je
lret
pop
fmull
subl
dec
dec
jne
ret
cs
ljmp
hlt
hlt
and
dec
mov
jo
mov
popf
flds
xor
in
fcoms
inc
and
aam
add
jnp
sub
adc
jmp
sub
adc
test
insl
inc
out
lahf
mov
mov
jbe
test
push
loope
lds
push
add
iret
ret
mov
lahf
jno
int3
sbb
fs
xor
xchg
outsl
jne
outsl
clc
in
add
pop
aaa
out
popa
push
mov
push
mov
mov
into
and
adcl
xor
cld
mov
add
inc
aam
and
rclb
and
jmp
and
adc
fnstenv
icebp
pop
jno
call
sub
xor
mov
or
test
adc
mov
rorl
ds
clc
or
dec
bound
fsubl
lds
cmpsb
pop
adc
push
add
or
mov
jbe
lds
push
inc
xor
andl
pop
mov
fsubp
mov
lods
or
jo
adcb
cmp
sbb
imul
nop
pop
dec
cmp
or
aaa
cmp
pop
xor
lock
jle
push
push
push
add
adc
callw
or
pop
push
mov
imul
es
fst
xchg
sar
cmp
jl
and
mov
imul
fcompl
stos
and
fs
pop
lahf
pop
sub
mov
fdivrs
mov
pop
lea
mov
jmp
fwait
xchg
mov
in
adc
xorl
loope
out
dec
sbb
repnz
mov
andb
inc
xchg
mov
int3
pop
push
sub
xchg
jbe
adc
push
aam
cmpsl
and
push
inc
das
adc
fistps
insl
out
push
lcall
lds
loop
lcall
enter
xchg
clc
xchg
mov
and
xchg
out
pop
xchg
out
push
lods
fnsave
leave
add
or
push
stos
mov
push
ucomiss
mov
scas
lret
js
and
mov
ficomps
push
scas
lea
xor
push
push
and
addr16
push
lahf
pusha
and
out
roll
in
rcl
out
mov
jae
xor
inc
das
push
add
shrb
add
arpl
jge
fstl
fs
repnz
sysenter
rolb
test
mov
stc
dec
mov
ficoms
dec
add
cltd
adc
gs
int3
cs
add
cltd
sbb
pop
pop
or
enter
mov
ds
adc
rcl
jb
or
sbb
pop
jle
scas
hlt
mov
cli
adc
mov
ficoms
cmp
test
mov
cmpsb
popl
mov
cli
dec
in
popf
les
fadds
xchg
das
pop
not
leave
jne
sub
inc
xchg
sahf
ficomps
push
repnz
ljmp
push
mov
and
cmp
mov
lock
mov
cmp
sbb
ds
mov
jmp
stos
dec
and
test
xchg
mov
mov
adc
int
mov
fisttpl
jmp
cmpsl
pop
es
xchg
jo
ss
lcall
push
in
inc
mov
out
jno
dec
xor
xchg
sti
mov
push
xor
pop
insb
jg
inc
jmp
xor
jg
xor
ret
sub
ja
daa
adc
icebp
add
cmp
loope
mov
cmp
notl
inc
pop
jae
mov
mov
cmp
cmpb
pop
dec
mov
aam
jge
jnp
aam
dec
js
aaa
hlt
mov
and
or
jecxz
cltd
and
mov
js
cmc
inc
es
xlat
icebp
test
xchg
sahf
cmp
pop
jle
shlb
pushf
fcoml
ss
js
cmp
xchg
xchg
xchg
xor
inc
stos
jl
jnp
mov
test
in
daa
jecxz
push
sbb
push
cwtl
sahf
add
or
and
mov
les
xchg
aad
scas
cmc
in
or
and
or
in
push
mul
push
leave
inc
cmc
stos
sub
into
cli
test
jmp
dec
mov
mov
xlat
es
cmp
push
cli
inc
mov
xlat
cmp
push
xchg
stos
js
cmpsb
arpl
push
mov
xlat
lcall
cltd
cmp
lret
bound
into
dec
pop
pop
sti
dec
loopne
xchg
xchg
jp
or
xor
decb
mov
xchg
mov
loope
aam
fildll
xor
mov
mov
xor
pop
mov
xor
popf
cmpb
mov
test
imul
test
ljmp
jmp
lcall
int3
fmull
ret
inc
in
data16
mov
popa
cmp
imul
inc
xor
mov
pop
lahf
outsl
inc
mov
and
xchg
mov
imul
inc
mov
xor
adc
aaa
pop
pop
push
insb
in
andb
cmp
or
fxrstor
cmp
mov
sbb
fdivs
or
sarb
lret
mov
mov
in
xlat
ss
outsl
dec
loopne
sbb
sbb
shl
ret
mov
out
cs
aaa
test
cmpl
xor
xchg
pop
outsl
xor
in
jl
push
dec
xchg
aad
add
bound
fldl
xorb
sub
jmp
xchg
and
dec
sti
sbb
and
outsl
mov
repnz
cmpsb
lcall
movsl
dec
push
inc
push
inc
mov
mov
xchg
jbe
outsb
xchg
sbb
int3
addb
mov
push
fsts
push
adc
mov
cmp
cmpsb
out
dec
mov
xchg
mov
mov
loopne
pushf
les
stos
push
jp
andl
jg
out
mov
outsl
call
and
movsb
nop
data16
out
push
ret
xchg
mov
xchg
pop
push
icebp
stc
arpl
jle
or
scas
mov
dec
test
aaa
push
or
mov
mov
addr16
push
jecxz
push
jo
loop
pusha
jnp
jbe
adcl
xchg
dec
push
fadds
out
or
inc
add
decb
mov
push
dec
ficoms
insl
sbb
pop
pop
fidivrs
mov
mov
lods
out
js
in
loope
sbb
ljmp
popa
cmpsl
popf
mov
jmp
push
xor
stos
pop
inc
std
fisttps
int
xchg
rcrl
jns
jge
sbb
lds
out
cmpsl
or
lret
pop
fisubrl
adc
aas
loopne
dec
addr16
insl
dec
add
insb
in
rorb
xlat
pop
cmp
ljmp
jmp
repz
pop
adc
ja
xor
aam
and
ret
out
adcb
inc
stos
int3
addr16
xor
mov
mov
xchg
inc
push
ds
mov
cmp
repnz
pop
adc
or
hlt
aad
loopne
dec
inc
mov
out
jno
insb
push
mov
icebp
mov
cwtl
fsubrs
movsl
xor
and
sub
lods
xor
jns
xchg
add
dec
sti
arpl
xor
mov
and
test
jg
data16
sbb
daa
sub
sbb
je
stos
add
fisubrl
daa
or
pusha
out
fcmovbe
cmpsl
adc
pop
fwait
aad
pushf
es
scas
popf
arpl
add
mov
adc
xlat
push
xor
cmp
add
push
data16
mov
sub
in
test
fcomps
push
jge
cltd
inc
outsl
movsl
int
jl
dec
xchg
insl
jo
xchg
jb
outsl
in
mov
mov
rcr
adc
xchg
sub
lret
outsb
hlt
rol
pop
mov
mov
outsb
insl
xor
xchg
xor
pop
outsl
into
inc
shll
fsub
fcompl
loope
cmp
or
icebp
dec
ss
xor
scas
sub
mov
ret
push
fistl
jno
push
dec
shrb
inc
icebp
push
rorl
ret
jne
pop
dec
aad
jns
cmpsl
icebp
adc
imul
xchg
jecxz
mov
xor
mov
jne
je
shll
mov
dec
pop
test
pop
xchg
pop
sub
mov
out
test
fcom
int
mov
cltd
xor
and
scas
and
xor
xchg
ljmp
mov
mulb
inc
orl
add
sarl
iret
mov
push
or
xchg
cwtl
aam
xchg
jo
or
adc
jecxz
call
les
jg
dec
aas
mov
aad
add
loop
int3
push
bnd
or
xor
mov
outsl
pop
mov
cld
fprem1
mov
pop
test
out
inc
push
cmp
ja
lea
mov
repnz
mov
gs
dec
std
sbb
bound
and
fwait
jo
mov
int
mov
cmc
mov
mov
popa
lods
mov
add
movsl
xor
push
movsl
jne
mov
push
dec
lods
cmpsb
jmp
sub
aam
add
out
popa
cmp
mov
xchg
or
xchg
xor
outsl
dec
jge
cmp
and
mov
lods
rcrb
movsb
push
pop
inc
jne
out
fcoms
cltd
xchg
or
add
sbb
xor
inc
addps
mov
mov
lea
popa
and
arpl
lahf
jecxz
loopne
fidivl
pop
and
sub
gs
movsb
cmp
jg
ret
inc
pop
pop
jns
or
add
mov
mov
ret
inc
in
sbb
enter
popf
pop
mov
lret
adc
or
jne
aad
fldt
and
xor
xor
fiaddl
jmp
mov
lret
dec
xchg
jbe
mov
pop
add
add
xor
sahf
sbb
mov
mov
inc
scas
xor
jg
aam
ret
mov
xor
mov
mov
ljmp
je
mov
sbb
xor
les
pop
mov
orb
mov
repnz
cmp
test
sbb
aas
loop
inc
imul
rclb
and
mov
add
sbb
bound
mov
sbb
fs
lcall
cmp
cmpl
mov
mov
mov
aad
jns
jmp
sbb
pop
adc
mov
outsl
sbb
roll
jge
mov
mov
bound
cmc
sarb
cmp
pushf
or
mov
ret
xor
inc
icebp
clc
mov
xchg
enter
mov
je,pt
pusha
pop
addb
cwtl
lret
fimuls
leave
jo
ljmp
add
lea
mov
and
or
inc
stos
jbe
xchg
mov
dec
sub
scas
xchg
mov
test
or
or
scas
xlat
adc
repnz
sub
dec
mov
or
or
xchg
imul
push
lods
rcrb
enter
cmp
pop
cmpsl
daa
mov
rcl
xchg
into
xor
dec
mov
cmp
das
xchg
fucom
fisttpl
sbb
xchg
testl
fwait
int3
xchg
mov
call
fisubs
sbb
cwtl
inc
je
dec
or
mov
gs
fistpll
xor
dec
mov
jae
stos
mov
out
test
add
pop
inc
mov
loopne
xchg
jb
dec
adc
aad
pop
mov
aam
pop
movsl
rolb
and
addr16
jne
xor
fcmovnbe
pop
outsl
insl
mov
cmp
fdiv
xchg
adc
int3
and
push
and
les
jnp
pop
imul
dec
mov
ror
outsb
mov
xchg
jno
push
and
and
jbe
xlat
negb
rcl
pop
jb
pop
xchg
in
cs
ret
or
fwait
xlat
cmpsl
das
cltd
or
pop
lret
mov
mov
xorb
xchg
xchg
mov
fcompl
or
addr16
pop
mov
out
loopne
outsl
lret
push
testb
and
adc
xchg
or
push
sbb
ljmp
mov
fnstsw
aad
mov
loopne
xor
adc
mov
sbb
pop
lods
jge
sbbb
or
jnp
mov
xchg
std
and
hlt
clc
mov
loop
jg
frstor
std
pusha
loope
int3
loope
xor
sahf
sti
sub
ja
lcall
add
cmpsb
or
fcmovnbe
loopne
ja
push
aad
aad
sbb
sub
ds
dec
sub
es
negl
out
fxch
fwait
repnz
imul
sbb
insb
push
in
mov
sarl
das
jb
sbbl
les
mov
bound
xor
sub
sub
and
and
mov
pop
dec
jb
in
sbb
fbstp
or
fisubrl
xor
jns
sbb
xchg
inc
stc
mov
mov
lret
popf
jle
clc
movsl
les
mov
movsl
rorl
cmc
test
sbb
mov
fbld
mov
aas
or
sub
adc
push
dec
pop
sbb
imul
inc
mov
pop
addr16
in
fwait
pop
mov
clc
mov
adc
jecxz
dec
iret
jns
cli
cmc
dec
aam
dec
shrb
jno
loopne
fwait
pop
ds
cmp
call
dec
lods
scas
sub
cmp
cmp
adc
sbb
insl
insb
jo
cmp
inc
insb
cwtl
das
imul
cs
mov
jecxz
and
aas
fistps
mov
repnz
mov
das
xor
icebp
cmp
fdivl
cmp
mov
loope
push
adc
cmp
jl
rcrl
cmp
xor
imul
popl
ss
cs
pop
jl
mov
adc
int
call
fnstenv
cmp
jne
das
pop
jo
inc
sbb
xchg
xor
imul
sub
fildl
xchg
xchg
int
add
cmp
test
inc
test
push
and
pushf
add
or
xchg
add
inc
mov
loopne
xchg
mov
js
or
mov
jge
pop
lcall
es
orb
xor
add
rcrb
jns
push
and
clc
es
lods
ficoms
adc
andl
mov
sbb
add
adc
stos
mov
test
lret
or
lods
push
cmpsb
xchg
sbb
call
pop
mov
pusha
dec
das
andl
xchg
dec
mov
add
jns
sub
dec
jecxz
scas
sub
sbb
sti
dec
cmp
mov
pop
sbb
imul
jge
sbb
cmp
cld
pushf
test
and
xchg
stos
fcoms
out
pop
push
inc
insb
inc
fisubrl
push
mov
out
out
sub
cld
test
jbe
mov
cs
btl
cmpsb
cli
and
xor
incb
sub
xchg
dec
out
imull
cmp
jge
mov
dec
popa
dec
xchg
xchg
xchg
push
scas
pop
scas
pop
mov
sahf
jmp
fucomi
movsb
and
popa
subl
jmp
fcomip
sti
add
mov
mov
roll
lret
negl
stc
pop
out
insb
cmp
push
sbb
iret
xor
stos
stos
sub
jnp
in
and
out
orb
ja
adc
out
into
inc
jmp
mov
sahf
sub
cmp
pop
inc
sbb
xchg
jecxz
call
loopne
je
pop
pop
ret
cltd
mov
mov
lods
outsl
test
stos
and
mov
mov
xchg
push
repnz
jnp
pop
mov
lcall
push
ljmp
inc
lahf
mov
cmc
js
add
sub
ss
sub
push
loop
gs
inc
mov
repz
mov
dec
pop
adc
push
dec
sub
add
pop
mov
lret
sub
js
movsl
arpl
dec
lret
jecxz
stos
fs
loope
cmpb
and
or
or
mov
xor
or
aam
fld
out
xor
pusha
lahf
or
sbb
or
loopne
add
sbb
ficomps
push
addr16
jne
cli
inc
pop
ja
jae
sbb
and
add
cmp
jne
sub
push
into
push
and
sti
and
repnz
inc
gs
xor
test
dec
mov
sahf
sub
mov
lea
lock
mov
sub
ds
movl
addr16
lcall
xchg
pop
xchg
ds
xor
xor
and
adc
pop
jle
nop
jo
adc
lahf
stos
repz
popa
mov
add
fcomps
adc
clc
jnp
pusha
ret
sub
adc
sar
cli
repz
insl
rcr
aaa
mov
test
pop
test
hlt
or
adc
clc
sbb
aaa
test
or
pushf
das
ljmp
test
nop
popf
pop
mov
outsl
insl
stos
icebp
cltd
rol
inc
inc
pop
pop
icebp
out
movsb
test
lret
cmp
xor
adc
shr
ror
ja
movsl
lret
int
es
jne
aam
mov
cmp
cmp
jp
fiadds
or
xchg
push
or
xorl
sub
inc
pop
roll
xlat
lock
fsts
cmp
popa
lods
pop
add
and
mov
cmp
or
sub
pop
fisttps
cmp
mov
xchg
sub
mov
lcall
repz
loope
pop
aam
pusha
std
pushf
sahf
jbe
mull
lods
push
xchg
cmp
xchg
jl
mov
lock
int3
call
jae
lds
orb
inc
mov
fcomps
lods
stc
jbe
stos
cs
adc
mov
cwtl
mov
test
xorl
imul
insb
nop
and
or
inc
dec
mov
sti
jecxz
and
fnstcw
pop
cltd
in
mov
les
pushf
xchg
in
sub
outsb
mov
jmp
mov
test
or
mov
jp
mov
pop
adc
pop
dec
or
nop
cs
incb
je
dec
xchg
and
rcll
rclb
jne
sbb
push
cli
ja
xchg
fmull
sbb
xchg
xchg
dec
pop
pop
or
int
arpl
dec
in
dec
xchg
cltd
and
push
rcrb
adc
dec
and
out
jns
or
xchg
stos
cmp
addb
imul
iret
dec
and
mov
lock
sarb
xor
dec
jb
aam
mov
movsb
xor
mov
inc
insl
rolb
aaa
sub
jecxz
aas
add
mov
leave
pop
jnp
mov
pop
stc
and
or
xchg
add
lcall
cmc
aaa
or
fsubr
or
pop
cld
push
xchg
loopne
dec
gs
ds
push
js
inc
cmp
mov
arpl
mov
mov
les
cmp
jge
sbb
insb
push
shr
into
fucomi
fisubrl
push
jno
das
push
js
pop
jnp
inc
insb
push
jg
pop
pop
inc
jmp
ret
je
repnz
fidivl
addb
jmp
xor
sti
fisubl
faddl
jb
insb
or
ja,pn
vprotb
cmp
xchg
cmp
inc
dec
cmp
cmp
leave
jbe
sub
lret
bnd
lds
mov
jg
jb
pop
inc
inc
cmpsl
in
cmp
lahf
adcl
xbegin
mov
fimuls
sub
daa
mov
mov
xchg
push
xor
add
clc
cmpsl
push
jge
lret
int
sub
dec
xchg
sub
jnp
out
sti
scas
and
mov
ficoms
lock
fnstenv
popa
loop
scas
sbb
mov
lcall
pop
xchg
nop
jns
subl
movsb
out
in
and
pop
adc
cmp
xchg
icebp
mov
lret
cmc
xor
cltd
andb
xchg
scas
repz
outsl
sti
or
mov
nop
cmpsb
xchg
test
and
xchg
jl
stc
daa
stc
adc
repnz
xor
leave
repz
inc
mov
out
jl
push
outsb
and
imul
fstps
jmp
mov
loop
sahf
into
mov
push
scas
xor
pop
pop
std
mov
push
movsl
dec
push
aam
ds
popf
mov
mov
cltd
inc
mov
aas
mov
add
outsl
jl
repnz
cmp
hlt
and
leave
dec
jbe
ljmp
sub
sbb
lea
jecxz
cmp
inc
sub
cwtl
lret
sub
mov
cmp
and
mov
or
repnz
pop
push
adc
sbb
add
jbe
mov
mov
push
mov
xlat
push
js
scas
pusha
mov
out
fwait
cld
jbe
sbb
into
push
ja
pop
push
sbb
popf
cltd
fisubrl
rcl
cmp
mov
sbb
xor
pop
pop
inc
sbb
scas
dec
jae
push
add
pop
gs
js
cmpsl
sbb
push
cld
divb
xor
in
leave
or
aaa
pushf
and
pop
jnp
xor
pop
jle
negb
dec
leave
xlat
mulb
loopne
call
repnz
frstor
cmc
push
clc
and
gs
xchg
mov
adc
in
aad
enter
push
or
cmc
lea
in
add
arpl
loopne
mov
inc
pop
lcall
xchg
rcl
sbb
inc
sub
hlt
push
inc
dec
clc
jb
hlt
call
psrad
ret
cli
cmp
fiadds
push
push
daa
outsl
jno
lds
in
jg
movsl
mov
mov
pop
dec
in
cld
cmp
xchg
std
or
xor
arpl
into
cld
pop
pop
mov
add
test
mov
push
push
jmp
adc
jp
or
inc
pop
push
stc
cmpsl
jbe
pop
xor
add
mov
push
divl
mov
fld
shl
push
out
sbb
cmp
jo
std
repz
lahf
sbbl
sub
jmp
and
and
arpl
clc
jae
movsl
shrb
adc
lods
jecxz
jne
mov
push
xor
insl
add
fidivl
pusha
cwtl
fxch
in
mov
loop
in
jl
xchg
inc
das
and
add
test
sub
jmp
or
test
mov
mov
mov
push
stc
es
ljmp
daa
inc
pop
jb
out
mov
aaa
cmp
adc
pop
inc
jge
inc
or
repnz
push
fistpll
inc
in
mov
sbb
pop
adc
mov
rcl
gs
call
jle
sbb
in
mov
nop
mov
lods
xchg
xchg
outsl
hlt
faddl
idivb
mov
les
or
pop
xchg
dec
fwait
sahf
push
jecxz
fwait
inc
sbb
pop
fucomp
cmp
inc
jl
pop
ror
xor
faddp
and
das
fisttps
arpl
rclb
xchg
sahf
dec
or
testl
loope
fildl
add
mov
cmp
iret
push
pop
scas
adc
pop
push
lea
sbb
cmp
mov
les
add
mov
out
mov
xchg
icebp
push
cmpsl
insl
jne
xchg
out
in
push
lret
popf
cmpsl
push
movsb
sbb
cmp
mov
mov
aaa
int
jno
or
pop
mov
xorb
xchg
lea
pop
xor
call
fisubl
cmp
repnz
dec
mov
les
or
scas
bound
dec
gs
push
adc
add
daa
lahf
or
jmp
jmp
or
xchg
aaa
loop
sub
movsl
ja
xor
int
cmp
push
sub
dec
mov
cmp
fxch
scas
divl
mov
mov
popa
pop
inc
fstl
aam
imul
js
cmp
fbld
in
testl
xchg
leave
fnstcw
xor
je
mov
mov
sub
aaa
cmp
xor
rolb
icebp
mov
and
pop
add
lods
mov
in
stos
inc
push
adc
out
sahf
fstpt
rol
xor
xor
inc
adc
ss
jp
movsb
jbe
add
je
jbe
xchg
cmp
lcall
or
and
faddl
jmp
add
or
xor
fistpll
pop
mov
push
fadds
fsubs
push
ja
sub
pop
mov
jns
lods
add
int
inc
inc
xchg
xchg
sahf
xor
pop
inc
repnz
icebp
dec
mov
sub
es
subb
mov
and
cmp
outsl
xchg
cmp
dec
je
lods
push
lock
mov
add
pcmpgtw
push
cltd
addb
test
insl
xlat
cs
int3
add
cld
cmp
imul
inc
mov
mov
cld
sub
int
add
add
pop
and
mov
mov
aas
cmp
stos
stos
xchg
in
jno
sti
xor
cmpsl
and
inc
cmp
adc
lret
push
pop
push
cltd
jle
adc
imul
pop
imul
js
mov
or
adc
in
or
dec
and
sbb
icebp
cmp
repz
stos
inc
dec
lds
adc
rcl
andb
cmp
iret
mov
and
fimull
in
aam
add
jno
cs
imul
imul
out
mov
cld
js
pop
push
jbe
jp
roll
data16
test
lahf
testl
int3
jne
push
push
jge
js
or
and
testl
frstor
aas
fcomi
fcomps
ja
leave
test
sub
jns
repnz
adc
in
nop
cs
test
ja
cmpsb
addr16
lret
sub
scas
out
arpl
cmp
push
shll
push
mov
movsl
inc
sub
pop
cmp
lock
int3
jne
cwtl
mov
jo
out
ds
fsubrs
mov
xlat
jne
push
push
aas
mov
or
jno
mov
cmp
pop
pop
dec
sbb
sar
into
jecxz
xchg
xor
or
inc
in
jns
cltd
fimull
popa
in
loopne
repnz
ficompl
cli
push
sbb
add
sub
out
das
fmull
sub
dec
out
add
jnp
pop
stc
in
cmpsl
daa
movsb
and
test
mov
mov
jnp
xchg
lods
pop
inc
mov
sub
push
fs
inc
sbb
ja
sahf
pop
mov
jnp
and
mov
xchg
ljmp
mov
fcos
stc
data16
faddl
sbb
bound
cmp
sub
rcrb
and
sub
das
maskmovq
mov
nop
addr16
mov
aad
aad
add
fldcw
jo
cld
data16
jno
rdpmc
sub
arpl
aad
ds
jmp
mov
xchg
aas
mov
js
mov
fwait
mov
leave
cmpsl
mov
jl
or
inc
sub
shlb
jae
or
jbe
cmp
push
sbb
dec
clc
lahf
cmp
pop
addr16
pop
or
stos
cmp
int3
cltd
movsb
imul
pushf
or
stc
mov
adc
pop
push
imul
sbb
xchg
mov
add
ss
cmp
nop
aas
cmpsl
out
push
fwait
mov
std
jmp
push
xor
and
inc
stc
cmp
fcmovnu
cmpl
ret
lret
jmp
mov
scas
push
cmpl
cwtl
jnp
icebp
ja
sbb
sbb
xor
aaa
push
cmpsb
mov
clc
pusha
out
jle
fwait
aad
outsb
pop
cmp
out
jmp
sub
add
std
inc
xchg
pop
cmp
pushf
ret
push
or
xor
movsl
sti
sub
cmp
pminsw
and
inc
mov
imul
das
pusha
cmp
adc
jns
fsubs
jge
jno
mov
test
test
rcrl
dec
dec
and
mov
cld
xchg
lcall
addr16
test
cmpsb
pop
mov
and
xchg
lods
push
xchg
ret
push
xchg
in
xchg
ficomps
jmp
pop
scas
out
insb
loope
lret
lret
ret
mov
mov
or
fbstp
pop
dec
fiadds
lods
push
push
pop
pop
icebp
adc
test
pop
mov
dec
faddl
inc
xor
lods
cli
ja
mov
movsb
js
jp
xor
pop
gs
in
nop
dec
into
jo
dec
mov
xlat
shll
jecxz
aam
ds
add
push
imul
jmp
jo
and
insb
nop
xor
cmp
push
inc
mov
inc
lock
leave
adc
punpckhwd
sbb
js
dec
jb
leave
add
jl
or
dec
sahf
lods
add
sahf
dec
outsb
cmp
cwtl
movsl
push
push
test
mov
push
hlt
inc
cmc
bound
mov
jo
cltd
pop
xor
dec
add
enter
push
sub
dec
je
add
xchg
jne
hlt
stos
add
std
rorl
and
jmp
xor
fs
pop
pop
and
outsb
ss
orb
ss
mov
dec
shrl
fidivrs
dec
mov
push
mov
int
aas
mov
or
cmp
and
adcl
or
mov
pop
and
lret
std
dec
mov
nop
mov
push
repz
add
dec
jge
pop
rcrl
jbe
push
pusha
mov
lret
aaa
add
insb
dec
jae
insl
pop
jecxz
mov
test
aas
js
mov
cli
mulb
push
mov
sbb
lcall
lret
mov
fisttpll
push
push
loopne
loope
add
outsb
mov
pcmpeqd
cmp
push
mov
lock
pushf
cmp
adc
adc
pop
xlat
sbb
and
insb
lret
lods
jb
bnd
loope
mov
pop
out
mov
bound
fiaddl
cli
test
push
ss
xor
sub
icebp
ds
mov
stc
jp
push
and
ljmp
cli
inc
or
repz
rorb
cmp
iret
jg
push
jmp
mov
push
loop
movsb
xor
subl
mov
loopne
popl
inc
fwait
push
icebp
xorb
movl
dec
or
push
pop
pop
inc
jge
dec
aad
push
lcall
inc
or
scas
push
jmp
gs
lahf
mov
adc
adc
xlat
ljmp
xor
cmpl
fmull
sub
fstps
pop
mov
inc
jmp
push
imulb
mov
jo
stc
dec
add
dec
negb
loop
roll
mov
mov
icebp
jg
pop
arpl
loopne
leave
jg
xchg
testb
mov
js
sahf
adc
lods
lahf
lds
rolb
enter
inc
push
pop
xor
jae
jg
lock
jge
lds
push
jg
mov
shlb
mov
xchg
enter
lahf
mov
mov
scas
jp
loope
mov
xchg
push
push
sbb
cwtl
mov
lods
jge
das
mov
add
and
pop
ret
add
lods
mov
jo
mov
dec
dec
ss
cld
mov
cmp
iret
dec
ret
inc
mov
or
repnz
mov
sub
lsl
dec
mov
cld
mov
scas
mov
addr16
sbb
sbbl
les
mov
jbe
add
leave
cmp
add
jb
icebp
xor
popa
inc
add
daa
pop
and
inc
paddsw
sub
lods
inc
out
loop
and
aam
sbb
sahf
xor
xor
clc
fldt
xor
je
mov
cmc
push
sub
inc
adc
shr
or
lea
idiv
iret
adc
pop
push
jo
mov
fidivl
sahf
inc
negl
movsb
movsl
out
fadds
add
fisubrl
inc
mov
dec
mov
test
pop
lahf
inc
sbb
sub
jbe
lods
in
push
add
daa
mov
clc
fistl
addr16
lret
lcall
inc
aad
aad
or
mov
out
jbe
jno
or
scas
cmpsl
es
enter
push
sub
mov
movsl
repnz
sbb
sbb
sbb
sbb
out
scas
orb
dec
xlat
cmc
dec
jno
push
adc
sbb
sub
mov
pop
mov
xor
mov
add
or
lret
pop
jmp
push
loope
and
ljmp
cmp
jecxz
hlt
lea
xor
pop
add
sbb
pop
xchg
xor
sbb
dec
and
jle
pop
fiaddl
shl
adc
insl
cmp
cltd
pusha
test
repnz
call
scas
sarl
push
adc
mov
mov
imul
ja
imul
ffree
add
ror
fisttps
je
and
adc
addr16
mov
pop
and
outsl
dec
cmpsb
push
fs
push
jl
ss
cs
jmp
jge
lds
cli
sbb
mov
pop
and
loop
add
fwait
dec
and
add
jl
xor
cmpb
scas
arpl
stos
loop
inc
dec
out
cmovge
mov
daa
xchg
adc
inc
das
ja
nop
mov
mov
cmp
xchg
add
pop
loop
push
mov
mov
std
je
loope
mov
pusha
push
int
stos
dec
jo
jns
enter
cwtl
flds
ret
in
jne
xor
rcrl
adc
or
arpl
lods
cmp
mov
ljmp
out
fwait
push
inc
mov
jge
popa
inc
adc
jg
psllq
mov
jp
sbb
arpl
cmc
and
push
sbb
iret
lods
inc
cwtl
int3
fwait
and
loop
stos
add
sbb
sbb
test
cmp
gs
and
sub
lret
pop
mov
mov
mov
daa
pop
aam
xchg
add
adc
ds
loopne
mov
cmp
sub
ret
jbe
scas
and
pop
shl
call
or
movsb
mov
and
jl
adc
std
fcoms
fidivs
movsl
adc
or
data16
jne
sbb
into
push
dec
clc
cltd
movsb
mov
sar
xchg
pop
inc
dec
xchg
jg
xor
fisttpl
int
mov
xchg
inc
testl
mov
dec
int
hlt
sub
sbb
and
icebp
cmpsb
cmp
push
popf
pop
xor
out
imul
adc
jmp
or
add
pop
stc
dec
addb
mov
in
imul
mov
cld
xor
movsb
imul
adc
mov
fwait
xor
or
js
arpl
sti
stos
inc
insb
out
lret
mov
in
outsl
arpl
mov
jmp
or
inc
popa
popa
sti
xchg
rolb
jnp
mov
pop
mov
lret
xchg
sbb
sbb
fisttpl
sbb
out
subl
adcb
hlt
loop
pop
push
ja
mov
std
insl
xchg
lods
das
add
sub
and
pop
pushf
xor
dec
inc
push
xor
insb
out
lods
test
pop
push
or
lods
inc
out
iret
cwtl
mov
and
sahf
inc
out
and
mov
dec
mov
xchg
jl
inc
mov
mov
adc
in
xchg
ljmp
pop
or
stos
dec
lea
sub
rcll
or
jns
roll
dec
inc
ds
dec
out
xor
sub
add
sub
sbb
lods
test
adc
push
and
insl
scas
push
xchg
push
dec
ljmp
shll
ljmp
sbb
cmp
adc
add
enter
cmp
adc
add
loop
es
rolb
mov
and
sbb
xor
push
dec
out
nop
gs
loopne
sbb
push
loop
stc
xchg
hlt
sbb
jge
jl
das
cmpsl
mov
daa
sbb
sbb
xchg
test
and
lea
ds
mov
loope
cld
sub
pop
pushf
xchg
inc
mov
jbe
push
xchg
mov
sbb
or
in
jmp
adc
push
das
mov
and
out
outsb
cmpsb
stos
loope
scas
pushf
sbb
jnp
and
add
cmp
xchg
or
cmpsl
mov
mov
xlat
loope
out
shlb
push
orl
mov
data16
ds
or
leave
addl
mov
sarb
and
test
mov
scas
and
repnz
mov
add
iret
mov
ss
pop
or
sub
mov
xchg
push
lds
mov
jp
sarb
jne
sub
and
loope
or
jl
adc
mov
inc
xchg
popf
jp
js,pn
mov
pop
jo
sbb
cld
test
push
and
xlat
mov
push
xchg
jecxz
jecxz
stos
sti
repz
lahf
jae
fbstp
call
cmp
add
pusha
pop
fwait
scas
dec
jae
jecxz
int
cmpsb
loop
in
das
add
xchg
adc
and
repnz
orl
imul
add
ss
mov
negl
movsl
stos
push
push
jecxz
adc
loop
sbb
aaa
cwtl
lret
sbb
inc
push
push
test
push
xorl
cmp
cmc
pop
and
int3
test
dec
iret
and
mov
divl
into
xor
loop
and
rcll
inc
add
add
icebp
mov
std
pop
jl
fwait
xchg
inc
dec
inc
xor
mov
jo
fbstp
cmpsb
loopne
test
and
push
inc
sbb
jg
fcmovnbe
pop
push
arpl
xor
ret
in
hlt
inc
stos
inc
lcall
mov
roll
in
sarl
xor
pop
imul
or
push
insl
mov
leave
jb
mov
cmp
and
cmp
movsl
adc
leave
pusha
mov
inc
and
push
lock
mov
and
ret
sbb
adc
or
in
pushf
test
and
cmpsb
xor
sbb
add
cmp
cmp
sub
popf
push
or
fsubrs
inc
xor
push
pop
dec
lcall
jmp
cltd
in
leave
sbb
lods
sbb
adc
jo
jle
add
mov
ljmp
xor
lods
cli
shlb
pop
or
pushf
push
fwait
loopne
das
pop
mov
je
mov
mov
sub
xor
adc
jecxz
lahf
dec
pop
aaa
xor
or
std
out
inc
mov
inc
outsb
xchg
shrl
push
sub
loop
fcoms
cmp
dec
cmp
cmp
cmpsl
and
push
in
lea
sub
outsb
cmp
pop
mov
out
jp
fisttpll
xchg
out
push
fdecstp
jno
sub
xchg
mov
rcrb
out
out
sub
dec
xor
jle
cmp
fiadds
jo
jge
insl
outsb
popf
dec
jnp
xchg
in
cltd
pop
icebp
mov
mov
dec
enter
ds
cs
dec
imulb
pushf
sbb
sahf
sbb
or
push
jo
shrb
jge
lods
pop
loopne
ret
es
mov
dec
jne
cld
pop
inc
mov
dec
mov
dec
popa
adc
ret
inc
cmp
test
sub
loope
and
fdiv
jb
sar
xchg
loop
lds
xor
or
and
cwtl
cmp
pop
mov
fsubrp
test
cs
pusha
mov
mov
xchg
pop
je
bnd
stos
xor
mov
aaa
ljmp
adc
popf
lret
xor
sub
rcll
incb
sub
addl
inc
btr
inc
inc
aas
xchg
mov
int3
hlt
sub
adc
mov
les
movsl
jg
xor
mov
insl
jle
lret
insb
xor
hlt
fisubs
outsb
push
push
adc
dec
xor
jle
xor
or
es
and
or
dec
inc
cltd
jne
int3
xchg
jmp
pop
jnp
xor
cmp
dec
jle
imul
insb
jae
ret
nop
add
add
aas
dec
addr16
adc
pusha
popf
xlat
inc
sub
mov
dec
gs
xchg
xchg
lahf
sbb
mov
test
dec
outsl
addb
movsl
sbb
test
push
mov
addr16
pop
mov
aam
imul
nop
lcall
jbe
ja
stc
xchg
js
not
outsb
mov
pop
hlt
data16
cmp
lods
arpl
sbb
inc
jg
mov
fiaddl
loop
mov
ret
icebp
int3
into
leave
and
testb
out
sub
rcll
sti
aam
cld
test
add
pop
sbb
push
or
ss
jb
adc
pop
gs
sbb
loope
xor
idivb
and
xor
jns
cmp
adc
aaa
push
mov
in
mov
push
mov
ss
stos
xchg
clc
sbb
outsb
cmpsl
sahf
sarl
dec
arpl
filds
sbb
sbb
sbbl
ficompl
rep
test
imul
cmp
push
in
sbb
push
in
push
add
jge
aas
push
sbb
pop
cli
in
add
movb
outsb
xor
fsubrl
cmpsb
popf
loop
xchg
mov
or
push
je
mov
mov
mov
inc
pop
jle
mov
inc
xor
mov
mov
lds
pop
and
xchg
dec
push
jbe
jge
fdivrp
out
movsb
insl
repz
dec
out
in
cmc
loop
xchg
imul
inc
fisubrs
and
aam
inc
js
pop
ljmp
xchg
into
push
sub
pmulhw
sbb
cltd
data16
push
loopne
adc
jmp
add
lds
xor
sahf
dec
push
pop
fidivl
clc
push
or
jbe
cmpsb
cmp
stos
loop
sbb
nop
and
leave
dec
or
int
push
rorl
pop
mov
das
xlat
xchg
jo
mov
test
adc
inc
xor
or
aas
pop
popf
and
push
bound
xchg
add
lea
mov
dec
xchg
sbb
js
jno
rcl
test
aas
aam
jecxz
rolb
jne
mov
jmp
or
or
imull
mov
aaa
pop
pop
pusha
movsb
lods
movsl
and
dec
mov
lods
and
inc
inc
inc
pop
or
out
cmp
ja
push
sbb
mov
test
add
repz
cmp
shrl
and
xchg
adc
scas
jnp
fdiv
bound
jmp
icebp
iret
push
ret
test
ljmp
arpl
dec
addl
test
and
stc
push
movl
std
and
stc
pop
jo
pop
and
sbb
and
adc
int3
jb
and
add
dec
aad
sarb
sbb
sub
mov
pushf
sub
and
nop
push
pop
inc
cmc
mov
aad
insl
je
add
lods
lods
cmpl
inc
push
clc
call
and
and
test
idiv
ret
xchg
xchg
inc
jae
sbb
cmp
mov
sbb
mov
add
cmpsb
or
push
bswap
sbb
inc
cwtl
hlt
sti
xchg
add
pop
enter
outsl
adc
mov
dec
sarl
scas
pop
sub
test
add
mov
lock
adc
sbb
stos
inc
jno
xchg
mov
ss
sbb
daa
arpl
jo
sub
pop
pop
test
in
and
cwtl
or
int
pop
xchg
sub
fistpll
movsb
or
xchg
and
sub
pop
jns
mov
adc
mov
and
jb
stos
sub
rcrb
xor
push
jl
inc
dec
push
lds
scas
out
mov
dec
push
pop
inc
and
pusha
lret
xor
xchg
mov
push
outsl
jns
and
rorl
js
mov
xchg
ret
dec
out
cli
push
push
shrl
add
fmull
inc
cmp
scas
insb
cmp
jbe
sarb
ficompl
repz
fldt
jo,pt
popf
sarb
xor
lcall
test
in
mull
xchg
les
and
movsb
xor
insl
lods
or
cmpb
cltd
inc
fs
mov
ret
xlat
jae
lock
jmp
add
cmp
in
shlb
in
xchg
cmp
jnp
push
or
popa
sub
out
xor
inc
jecxz
test
lods
std
loopne
mov
mov
sbb
inc
lods
js
xchg
lret
pop
lods
in
add
arpl
mov
arpl
lea
mov
lods
dec
mov
push
jns
inc
aam
mov
mov
mov
lea
test
push
sub
push
popa
repnz
push
cmp
or
repz
or
pop
out
stos
inc
jmp
mov
daa
sub
scas
push
out
sar
aaa
out
add
xchg
mov
cmp
push
fdivs
call
insl
jne
xchg
clc
pop
addr16
mov
push
mov
imul
ss
hlt
outsb
shl
or
mov
xorl
and
fs
insb
push
cmc
mov
push
mov
xchg
jmp
je
test
leave
jmp
nop
adc
adc
lds
outsl
popa
xchg
les
pop
insb
movsl
in
fldt
pop
fucomp
and
mov
or
push
mov
cli
and
inc
test
daa
fucomip
ret
les
test
mov
pusha
and
or
cmp
fdivs
jbe
sub
loopne
xchg
mov
icebp
jge
dec
mov
xor
push
jmp
out
test
jnp
sub
jbe
pushf
aaa
in
add
cld
imul
loopne
mov
mov
insl
jmp
mov
dec
xchg
test
lock
pop
inc
push
imul
loop
adc
lds
xorl
xor
fwait
sbb
lea
dec
addl
lea
lea
test
cmpl
lods
and
into
xor
out
xchg
adc
imul
pusha
jne
push
jns
mov
loop
popf
daa
ja
insl
add
xor
inc
repnz
or
jno
lcall
aaa
xchg
mov
xchg
add
lret
jg
xor
xor
adc
pop
and
sar
scas
adc
adc
sub
dec
lret
mov
fisttps
xchg
pop
gs
aaa
push
pop
xor
stos
scas
jle
mov
push
lcall
cltd
mov
dec
sbb
jg
sbb
xor
mov
add
dec
add
jo
sbb
cmpsl
pushl
dec
inc
adc
cs
out
adc
and
pop
inc
pop
push
ja
push
inc
divb
pop
fadds
dec
cmp
popf
lods
nop
jns
mov
adc
add
mov
xor
loopne
jno
cmovbe
pop
fiaddl
nop
sub
push
data16
jno
idivl
inc
shrd
inc
or
mov
loop
ja
jne
dec
and
popf
aam
divl
rorl
inc
pop
out
sub
mov
mov
imul
lahf
daa
icebp
adcl
xor
in
mov
fadds
call
lret
in
cli
test
in
inc
mov
and
lret
jmp
push
movsb
lahf
dec
jno
and
out
pop
or
mov
mov
test
ds
jnp
outsb
or
add
mov
pop
inc
sbb
and
ss
sahf
movsb
into
xor
mov
jecxz
enter
push
sbb
mov
adc
js
cld
dec
pop
cmp
cmp
leave
jg
mov
in
into
push
out
lret
adc
loope
sub
mov
sbb
jp
push
es
hlt
fsts
inc
stos
jmp
mov
iret
enter
aam
lds
cmc
nop
lock
push
pop
xor
mov
add
outsb
dec
arpl
mov
mov
push
and
sub
movsb
mov
xor
aas
jbe
and
cld
fdivrl
xor
not
sbb
adc
xor
push
add
pusha
pusha
andb
cmp
insb
call
jmp
or
outsl
dec
mov
add
insl
cmp
lods
xchg
mov
pop
dec
test
xchg
pushf
cmp
dec
call
cld
aaa
jge
movsb
std
cwtl
dec
push
adc
xor
orb
xchg
notb
fcmovnbe
mov
jmp
in
stos
inc
loope
jo
dec
add
mov
push
jg
es
stc
and
repnz
sbb
add
arpl
inc
and
mov
cmpsb
dec
or
add
call
ljmp
dec
lret
inc
filds
out
mov
push
pop
cmp
xchg
xor
mov
jmp
ljmp
sahf
xlat
xchg
cmp
insl
adc
add
and
mov
mov
xchg
pop
add
mov
shlb
ja
add
mov
add
fs
enter
cmp
in
mov
int
ds
cmp
dec
andb
push
xchg
data16
arpl
sbb
sbb
sub
sub
mov
dec
cwtl
nop
movsb
insb
adc
insl
xchg
in
cld
clc
lahf
sbb
sbb
call
aam
out
aas
mov
cld
jbe
ret
mov
push
dec
jae
jp
ret
out
push
mov
or
sbb
mov
aaa
jl
call
cmc
std
popf
sub
pop
popa
test
jmp
movsl
pop
mov
testl
sbb
xchg
mov
stos
sbb
xor
adc
addl
rcll
cmp
leave
cmp
xor
jns
ret
stos
adc
lcall
push
push
jae
sahf
dec
pop
pop
xor
xchg
movsl
mov
lcall
aas
into
jbe
gs
scas
or
push
pushf
or
dec
je
sbb
mov
subl
mov
pop
pop
ss
into
xor
dec
into
xor
aas
jb
pop
and
popa
xchg
and
imul
jg
rcll
jbe
lock
push
mov
inc
xchg
outsl
and
iret
divb
mov
cs
jne
pop
clc
pop
cwtl
jp
orl
and
in
jns
and
mov
test
mov
or
outsl
adcl
push
xchg
lret
mov
mov
pusha
add
je
insl
pop
push
add
cmpsl
dec
or
mov
cmp
dec
cmpsl
add
pop
push
jns
fisubrs
int3
sub
gs
fs
push
and
stc
in
mov
cwtl
mov
mov
mov
mov
vpshld
jle
imul
mov
scas
adc
adc
adc
sub
mov
outsw
and
int3
jns
aad
mov
ljmp
cmp
pushf
xlat
in
xchg
sti
add
aaa
aad
xor
iret
insl
jne
in
in
stc
pop
dec
js
int
into
in
insb
int3
cli
in
loop
test
daa
pusha
mov
sbb
pop
arpl
add
popa
push
insl
xchg
sbb
cmp
push
hlt
adc
xlat
std
std
mov
sub
ljmp
stos
jbe
lret
and
mul
bound
sbb
adc
fcoml
cmc
rcl
dec
adc
xchg
or
sbb
push
cmpsb
cmp
pop
sub
sub
cmpb
fisubl
push
and
mov
lea
inc
movsl
adcl
imul
jl
and
and
hlt
rep
out
pop
mov
mov
pop
sbb
inc
push
push
shr
imul
rolb
push
xchg
mov
inc
mov
sub
scas
add
push
and
xor
daa
cwtl
xor
mov
bound
or
bound
js
fisubs
sbb
sub
fmull
mov
sahf
inc
clc
outsl
mov
scas
and
xor
xchg
cs
test
jns
mov
adc
cltd
imul
out
mov
mov
inc
ror
jl
mov
das
cmpsb
pushf
loope
sub
adc
aad
iret
lea
scas
cmp
xor
out
lock
rolb
mov
lods
ds
outsl
xor
dec
fs
lcall
sub
test
adc
push
dec
inc
pop
pop
push
out
xchg
js
pop
jl
in
pusha
nop
adc
xorl
xorb
mov
test
cmpsb
ja
decl
xor
inc
xor
push
sahf
pop
mov
in
fdivrs
cmp
clc
adc
and
hlt
fimuls
cmp
xchg
xchg
and
addl
fildl
lcall
inc
insl
push
data16
pop
sarb
dec
rcr
ror
pop
push
sub
mov
sub
loop
repnz
std
pop
inc
popa
jmp
cld
arpl
popa
jne
pop
lea
or
out
xchg
xor
ds
xlat
lcall
and
and
repz
dec
notb
cmp
std
adc
daa
lret
mov
das
mov
mov
lea
movsl
jle
pop
cmp
xor
sahf
xlat
jecxz
jle
rol
ja
pop
or
popf
mov
jecxz
cmpsb
out
loop
imul
inc
hlt
jo
lea
cmpb
daa
push
mov
sub
outsl
in
pop
mov
adc
push
or
add
sbb
insl
ret
jmp
mov
pushf
jnp
dec
pop
pop
sub
ds
pop
push
stos
gs
fisttpll
xor
imul
insl
pushf
cs
xchg
into
lcall
cli
or
nop
dec
loopne
not
lahf
mov
gs
aam
out
popa
andl
js
cmc
add
push
jge
pop
data16
popa
or
mov
adc
mov
ss
mov
in
cmc
or
es
inc
jo
bound
sub
xchg
ljmp
sbb
inc
dec
lret
cmp
std
adc
fdivs
repz
sbb
mov
insl
loop
mov
lea
rcr
outsl
push
push
and
or
mov
out
dec
insb
or
xor
lods
psubb
ja
jno
jge
xor
jge
fucomp
xchg
decl
inc
int3
xchg
dec
loopne
out
or
int
cltd
jnp
cli
pop
dec
pop
and
xlat
sub
push
scas
sbb
fistpll
mov
out
pop
push
loope
ret
pop
jl
jae
sbb
ss
rcll
xlat
jbe
xchg
jae
ror
push
and
or
or
and
mov
arpl
popl
pop
xchg
mov
lret
ret
je
mov
hlt
outsl
adc
add
push
mov
or
push
ss
pushf
out
mov
sbb
mov
les
stos
inc
pop
dec
push
aad
cltd
fidivl
adc
int3
or
fsubrs
cld
push
pop
jbe
fcoms
mov
xor
loope
xor
je
lods
cmc
or
les
sbb
inc
or
push
lock
xchg
mov
arpl
xor
rcr
cmp
mov
insb
fldt
stos
fwait
xchg
out
sbb
or
loope
test
or
subl
push
cmpsb
mov
aas
les
add
test
fidivl
hlt
and
out
clc
xor
aaa
mov
movsb
pop
push
mov
ficomps
mov
xchg
lds
in
push
push
jg
std
xor
or
cwtl
add
xor
jp
outsl
and
or
adc
xchg
inc
cmp
fsubs
cmp
jp
call
pop
rcrl
or
sbb
je
imul
dec
cld
push
xchg
xor
sub
js
mov
nop
je
cmp
outsb
mov
mov
sbb
mov
shrb
sub
je
out
addb
lret
cmp
hlt
nop
das
ja
divb
into
xor
enter
sbb
xor
mov
loope
dec
adc
mov
ja
arpl
movsl
das
rorb
in
mov
loope
das
test
inc
jno
xchg
mov
push
lods
lods
xchg
arpl
cmp
sbb
mov
sub
stos
and
adc
mov
add
ss
add
mov
inc
xchg
xchg
inc
pop
les
xchg
jbe
cltd
or
daa
out
sbb
dec
cmp
mov
add
mov
out
jmp
rorb
fimuls
das
mov
inc
pop
lods
cmp
iret
sub
sbb
jmp
sarb
insl
add
ret
mov
jae
mov
movntq
cltd
jno
cld
fmulp
xor
dec
ret
cli
gs
imul
xchg
stos
cwtl
push
fucom
inc
loope
jmp
repnz
mov
jle
sti
outsl
ljmp
ds
rcl
ret
xchg
xchg
xchg
dec
adc
jle
inc
popa
inc
ja
shll
push
sub
adc
xchg
iret
lods
mov
mov
inc
aam
jp
es
ret
jle
in
lret
enter
test
jp
frstor
loopne
int
dec
fmuls
mov
mov
inc
jg
inc
mov
movsl
xchg
sti
in
lds
jge
inc
xchg
in
lret
push
mov
adc
inc
loopne
pop
cmc
ret
sbb
ret
test
mov
xor
pop
cmp
pop
fnstenv
out
hlt
push
and
fcoml
xchg
fucomip
push
or
push
into
std
inc
aam
pop
lods
insl
fiaddl
xchg
add
cmpsb
push
test
lock
loop
xchg
incl
ja
iret
inc
cmp
sbb
decl
add
punpcklwd
xchg
aas
jle
idivb
daa
push
lods
push
xchg
cld
sbb
adc
testl
lods
jb
sub
clc
imul
xor
mov
xchg
mov
sub
cmp
adc
in
fcoms
jns
shlb
sbb
and
xchg
jmp
fdivrl
and
push
mov
xchg
xchg
push
dec
mov
adc
mov
gs
add
stc
or
inc
ja
popf
mov
ss
mov
repz
xchg
and
int
xchg
gs
jecxz
jno
mov
cmpsb
xchg
sub
js
jecxz
shlb
stc
inc
mov
inc
insb
es
sub
mov
cmp
or
pand
pop
xchg
jp
fwait
hlt
mov
scas
in
stos
xchg
cli
dec
loopne
loope
mov
ret
in
xchg
or
ret
or
jns
mov
jmp
xor
fbld
fistpl
or
mov
clc
mov
daa
adc
pop
xchg
xor
pop
and
mov
dec
sbb
push
sahf
test
add
outsl
jmp
aaa
mov
lcall
mov
pop
test
vphaddbq
pop
dec
xchg
or
mov
sub
leave
fmull
inc
fisubrs
jmp
into
jne
fwait
xor
jb
xchg
in
mov
test
gs
stos
les
or
cmp
shrb
sub
sub
cmpsl
inc
sub
lods
scas
leave
gs
pop
sub
dec
into
mov
or
incb
mov
pushl
mov
push
mov
test
jb
into
es
dec
popf
data16
mov
inc
push
lahf
pop
scas
or
popf
fnstsw
xchg
int
push
inc
jae
stos
and
fisttpll
lds
ret
lods
sub
push
jae
or
jmp
push
sahf
cmp
imul
jl
outsb
jns
dec
setb
ss
add
push
gs
pop
out
cmp
movsl
ja
xor
push
or
xor
dec
jmp
mov
stc
jp,pn
xor
repnz
movsb
jle
es
pop
xor
dec
inc
dec
mov
fs
aaa
pop
add
fcoms
jnp
sarl
movzwl
mov
test
in
xchg
cmp
es
fidivs
lcall
mov
mov
push
cli
push
ror
jl
addl
lret
popa
dec
cmp
orl
or
mov
mov
repnz
mov
pop
arpl
and
insl
pushf
pop
sti
repnz
adc
mov
jmp
and
pop
push
or
mov
fldl
imul
inc
pop
pop
push
cmpsl
ja
or
jae
xchg
pop
dec
clc
rcr
call
sub
test
stos
pop
aad
xchg
xlat
mov
lret
aas
mov
cwtl
out
bound
push
imul
sbb
push
xchg
xor
loopne
pop
bound
fnstenv
out
xor
js
icebp
xor
add
mov
push
dec
jnp
push
pop
pop
pop
es
fwait
pop
mov
sti
in
aad
dec
test
leave
stc
bound
adc
fwait
movsb
and
dec
sub
adc
repz
cmpb
orps
icebp
mov
pop
jne
je
xor
orb
gs
out
push
jne
aaa
mov
lcall
inc
fldt
leave
addr16
in
sbb
or
enter
inc
jl
adc
mov
dec
xchg
daa
gs
in
scas
inc
shrl
jbe
pop
das
push
icebp
clc
test
stc
sub
jno
hlt
pop
sbb
sbb
mov
jge
aam
xor
test
inc
insb
mov
cmp
sahf
mov
mov
inc
or
rorb
inc
push
inc
or
sbb
push
and
and
inc
push
in
lods
leave
das
xchg
or
jmp
dec
rorl
adc
std
cld
movl
cltd
xchg
in
add
bound
shr
popf
xlat
adc
pop
cmpsb
cmp
and
sub
and
inc
xchg
cwtl
adc
lea
popf
jecxz
test
loope
lret
test
push
test
cmpb
lahf
dec
lcall
in
mov
xor
dec
lret
xchg
in
inc
mov
lea
lods
push
out
sahf
les
outsl
adc
push
ss
xchg
loopne
pop
or
insb
fdivr
es
push
shl
out
scas
pop
adc
adc
pop
cmpsb
and
rolb
jecxz
repnz
jbe
stos
push
lock
pop
mov
jno
cld
sbb
movsl
aam
mov
mov
dec
fists
fsubr
jae
and
jg
ja
aam
jns
es
in
mov
shrb
adc
out
test
bound
push
sub
cmp
add
loope
subb
dec
pushf
jnp
ss
and
cli
xor
mov
loope
hlt
mov
call
pop
mov
dec
das
inc
mov
add
fs
addr16
in
rcrb
add
scas
scas
inc
mov
add
xor
push
xchg
adc
inc
sbb
mov
je
push
inc
mov
std
and
xlat
push
pop
or
xchg
adc
xor
in
rcrb
iret
mov
sub
mov
cmpsb
mov
ja
xchg
std
push
in
or
cmp
push
clc
sub
xchg
fwait
cmp
push
lock
in
inc
mov
add
pop
je
pushl
mov
add
gs
lret
jo
mov
jmp
dec
jle
ljmp
fbld
cmpsb
icebp
enter
or
push
repz
or
lcall
jne
xlat
loop
test
xchg
lcall
ljmp
mov
movsl
lretw
mov
addr16
daa
test
in
in
shll
mov
or
cmp
cld
cmp
push
xor
in
sbb
aad
pushf
pop
bound
ja
xchg
ficoml
mov
movsb
imul
mov
cld
pushf
std
loop
gs
dec
xchg
lret
sbb
mov
jmp
sahf
push
popa
aaa
inc
mov
dec
je
test
jns
ficompl
fstpl
inc
mov
mov
add
std
cmp
stos
repnz
movsb
xor
je
les
inc
test
dec
insl
sub
cmp
mov
push
scas
push
pop
sub
cld
xchg
lods
cmp
lret
pop
fs
and
push
decl
mov
xor
test
in
sub
dec
mov
mov
popa
xchg
push
inc
dec
dec
sarl
and
hlt
cmp
mov
cmp
lods
std
pop
punpckhwd
sbb
mov
dec
pop
push
add
cmpsb
mov
sahf
cmc
add
nop
or
std
add
jmp
sub
xchg
or
sub
mov
mov
aam
mov
test
ja
rol
mov
aad
cmp
hlt
fidivrl
stos
inc
outsl
push
fists
rcll
fdivs
jle
jp
or
sbb
jbe
iret
mov
pop
aaa
clc
rcr
adc
xor
mov
push
lret
imulb
push
xchg
pop
fsts
rorb
push
fiadds
cmp
xchg
jge
jmp
and
rclb
push
out
shlb
ja
ja
dec
daa
sbb
not
out
imul
add
pop
cmp
mov
xor
mov
sub
test
pop
call
out
push
ja
insl
pop
mov
xchg
cmp
daa
lock
add
mov
pusha
adc
xchg
jge
loop
jae
pop
adc
movsl
inc
mov
rcrl
fstpt
scas
or
into
hlt
andb
xchg
push
ret
cli
out
xor
fbstp
out
cmc
mov
addr16
cmp
mov
in
hlt
imul
lcall
and
jae
aam
xchg
cli
repz
gs
outsl
cmp
pop
fnsave
sbb
repnz
xchg
out
mov
pop
sub
outsl
push
cmp
and
data16
repz
push
arpl
xchg
int
sub
in
ret
out
stc
add
sbb
enter
in
push
lds
mov
push
fiadds
andl
xorl
xor
scas
clc
call
jo
stc
mov
pop
jne
or
mov
mov
ss
enter
and
sbb
mov
mov
adc
lahf
jnp
sub
int
xchg
lahf
cmp
nop
in
rorb
jmp
sub
push
int3
adc
jmp
pop
ret
out
mov
popf
jg
pop
repnz
aam
or
femms
scas
jne
push
dec
xor
movsb
mov
xchg
jnp
out
fsubs
xlat
lret
and
mov
jg
jle
mov
xchg
or
jo
or
outsb
lds
xor
mov
mov
pop
das
shrl
mov
call
adc
fmuls
cmpsb
sub
mov
mov
inc
daa
mov
sti
xlat
push
pushf
rcl
mov
shlb
scas
mov
cld
sub
mov
movsb
inc
arpl
nop
out
mov
cld
insb
rcr
xchg
gs
pop
xor
fstpt
sbb
or
aad
jnp
or
cld
push
mov
cmp
inc
leave
pop
fs
pusha
fidivl
js
pop
fnstcw
jecxz
pop
test
into
mov
mov
popa
xlat
iret
inc
cmpsb
dec
jge
call
ljmp
mov
pop
in
cmp
mov
sbb
adc
testb
xchg
inc
mov
iret
mov
xchg
aas
mov
push
out
icebp
jns
adc
dec
lret
cs
ja
jp
push
stc
jnp
flds
sbb
mov
imull
cwtl
mov
in
ss
les
jmp
push
sti
ficoml
xchg
xor
ja
hlt
jg
movsl
jae
negb
add
fidivrs
sbb
pushl
pop
xor
lea
pop
sbb
add
out
and
mov
cmp
data16
rsm
adc
fiaddl
ja
das
pop
push
push
loope
sbb
div
xor
xchg
sti
pop
pushf
jecxz
shl
das
ljmp
stos
pop
xor
repnz
xchg
or
adc
fwait
xchg
scas
xor
push
jge
jo
rcll
adc
aas
out
loop
test
pop
dec
xchg
pop
jo
mov
and
cs
stos
jbe
rcrl
dec
mov
addb
add
ja
pop
or
add
cmpsl
mov
or
and
xchg
pop
mov
mov
add
mov
sbb
cmp
arpl
and
and
mov
add
push
testb
outsb
add
je
xor
in
dec
cltd
mov
ss
pop
push
mov
dec
enter
repnz
insl
jle
hlt
popf
sti
mov
mov
fwait
adc
jne
sub
lock
fwait
ss
xchg
test
das
sti
test
imul
mov
rcr
in
xchg
stos
sbb
and
shl
test
loope
imul
add
push
hlt
pusha
in
xor
cltd
out
movsb
sub
pushf
sub
dec
std
sub
test
lret
sbb
in
mov
sub
mov
xchg
test
call
in
cmp
or
lcall
push
pop
sub
aaa
faddl
jmp
pop
lock
push
lcall
loop
enter
inc
ret
pop
out
push
push
pop
mov
addr16
pop
dec
dec
repnz
sbb
fcmovnbe
xor
sub
sbb
icebp
inc
jmp
xor
adc
stos
sub
enter
jl
jns
imul
into
cmp
mov
addr16
shrl
pop
cmp
call
sbb
inc
mov
xchg
mov
lock
ja
push
xchg
xchg
add
jp
arpl
daa
lahf
jae
aas
sbbl
and
lcall
in
mov
sub
aam
mov
loopne
call
and
sbb
mov
inc
pop
add
or
add
pop
pop
into
inc
mov
inc
in
pop
sub
out
cltd
idivb
dec
push
or
xchg
sbb
sub
loopne
xor
arpl
dec
jno
test
and
jmp
and
inc
scas
add
pop
mov
aam
mov
repnz
jecxz
pop
cmpsl
dec
or
loope
push
push
dec
mov
cwtl
sub
lds
rorb
mov
lret
jge
call
adc
xchg
shrl
in
xor
xchg
add
push
clc
push
add
adc
daa
jl
mov
movsb
cmp
or
push
sti
dec
adc
pop
sbbl
movsl
sahf
aas
shll
pop
arpl
xchg
jb
adc
mov
repnz
loop
sub
cmp
adc
dec
mov
xlat
dec
mov
ret
das
mov
pop
and
fwait
sub
pop
jmp
ret
inc
loopne
xchg
loope
push
movb
add
leave
dec
aad
cmc
push
push
shll
mov
jb
mov
jae
cmp
rolb
cli
int
mov
push
mov
loopne
inc
lahf
or
jle
pop
rclb
xor
jns
aaa
sub
mov
iret
push
and
into
aas
scas
jb
push
sbb
mov
push
jg
sub
ljmp
mov
pop
inc
mov
cwtl
lods
adc
movsb
gs
or
add
out
or
lcall
jp
push
sti
clc
add
jno
lods
jno
cli
lods
das
hlt
push
and
and
or
mov
fsubl
sub
cmpl
push
dec
cmp
stos
jae
ss
pop
es
mov
jecxz
in
dec
dec
and
jge
xorb
lcall
and
jbe
add
xchg
out
mov
divl
leave
cld
rolb
mov
lahf
mov
or
inc
pop
lret
shrl
sub
push
adc
add
or
push
je
adc
rcll
aas
fldl
mov
es
hlt
xchg
insl
cmp
push
pop
mov
jg
out
jb
shlw
xchg
add
insb
fstps
movsb
adc
push
ret
lcall
pushf
sub
jg
inc
out
cmp
ret
cmpsl
ret
pop
mov
stc
lcall
fistl
loope
aaa
stos
xchg
push
lods
jb
or
pmullw
sub
or
ret
add
sarl
inc
test
aad
jge
scas
sub
jae
call
push
rclb
xchg
mov
lock
cld
divb
sbb
push
sub
ds
leave
xor
ret
mov
lea
jo
stos
cmp
hlt
push
arpl
jns
jg
or
push
jo
das
or
lock
cmc
add
cmc
inc
ds
lock
push
pop
test
sbb
jl
cmpsb
mov
jno
into
cmp
push
in
push
cmp
aas
adc
mov
sbb
cmc
shlb
add
jae
lea
sub
jmp
mov
mov
daa
aaa
mov
add
test
nop
repz
mov
xchg
pop
mov
mov
decl
jmp
jns
inc
or
mov
sub
es
mov
outsb
push
das
jecxz
push
jg
fldt
enter
and
cmp
lcall
jo
testb
cwtl
les
mov
fildll
fsts
or
add
jle
mov
jne
popf
mov
inc
ss
xchg
jno
jp
and
xor
lret
sub
ja
hlt
jecxz
rclb
fnstsw
sbb
rcll
into
sub
clc
das
xchg
inc
inc
xchg
jg
aad
movsl
popf
sti
sbb
mov
stc
mov
ret
inc
push
and
dec
subl
ret
aam
xorb
add
push
mov
xchg
mov
repnz
pop
xor
cltd
in
xor
and
xchg
sbb
int
rcrb
repnz
jo
mov
mov
test
dec
xor
cmp
pop
stc
in
sub
aad
data16
jne
adc
fcomi
stc
and
xor
dec
jmp
push
jmp
into
mov
iret
pop
subl
out
loope
ljmp
incl
mov
add
ss
inc
sarl
movsl
sub
cld
out
bound
lea
out
pop
mov
mov
andl
xor
fiaddl
mov
dec
mov
xor
mov
adc
scas
push
mov
fstpt
dec
mov
adcb
aam
shl
dec
jle
jae
xor
ret
push
not
mov
push
je
add
insl
loopne
xchg
xchg
xor
push
out
mov
sbb
mov
pushf
xlat
push
xlat
jb
pop
adc
pushf
add
aaa
adc
xchg
pop
jp
and
andl
andb
fstp
int
clc
test
es
push
lret
int
sbb
lahf
cmpl
imull
jne
pop
sbb
dec
mov
cli
movsl
les
stc
push
lahf
jp
or
xchg
lcall
nop
or
add
stos
fadd
aaa
loopne
add
mov
push
xor
sub
dec
xor
test
imul
pop
inc
pop
pop
cli
stos
sbb
aam
or
push
jne
jle
dec
sub
or
cmp
ret
ljmp
mov
xchg
dec
pop
hlt
ljmp
xchg
std
adc
dec
aas
fnstcw
jnp
cld
adc
lcall
adc
push
icebp
out
cmpsb
dec
dec
mov
aam
mov
push
mov
insb
popa
xchg
aas
sub
cld
popa
ja
rcll
addb
sub
or
lock
lahf
les
xchg
push
and
popa
test
fwait
mov
jp
inc
ja
sbb
add
lock
jmp
dec
shrb
fwait
aas
or
cmp
sbb
cmp
mov
mov
out
inc
mov
mov
cmp
aas
int
cmp
test
and
fisubrs
xchg
arpl
xchg
jno
lcall
sbbl
mov
out
std
aam
loop
cmp
jnp
fsubs
div
leave
mov
sub
dec
xor
mov
adc
cmp
push
mov
shr
lret
ret
out
and
or
jp
fidivrl
out
test
call
icebp
repnz
xchg
sub
adc
xor
shlb
sub
dec
das
cmp
sub
jl
scas
push
jae
out
or
mov
cmp
inc
push
adc
pop
popf
cmp
add
and
lds
cmc
bnd
pop
das
cmp
rorb
dec
add
out
lret
adc
push
xchg
xor
hlt
insb
or
add
cmp
inc
call
testl
and
out
lret
imul
push
add
imul
es
cmp
push
inc
mov
out
fcompl
repnz
into
dec
push
insl
scas
cmp
mov
sub
mov
jb
jmp
repz
js
sahf
xchg
xor
scas
pop
jge
test
iret
rorl
cmp
test
cmp
and
adc
pop
sbb
insb
test
and
inc
mov
sbb
mov
imul
add
mov
push
cld
shll
xor
fnsave
in
sahf
mov
negb
push
mov
out
loopne
scas
out
int
push
sub
sbb
test
or
mov
cmp
aaa
shlb
fcoms
in
pop
das
bound
xchg
test
lret
pop
insb
ljmp
xorl
mov
addl
pushl
stos
mov
inc
jo
sub
push
subb
out
pop
add
mov
insb
aas
iret
mov
cmp
pop
movsb
push
loopne
cli
out
movsb
xchg
push
push
ret
mov
imul
lods
push
cwtl
push
mov
add
clc
sbb
popf
in
in
shlb
cmpsl
and
push
frstor
mov
je
leave
leave
pop
pop
loop
xlat
bound
cmp
adc
cli
pop
sbb
dec
or
fcmovbe
xor
jmp
testl
ret
sub
inc
add
inc
inc
jg
shll
mov
xchg
sahf
adc
test
cld
dec
into
push
jmp
rclb
inc
jecxz
add
jae
push
faddl
adc
push
fcoms
mov
mov
lock
inc
rcrb
jecxz
cmpsl
jae
inc
orb
stos
dec
dec
lods
jne
int3
scas
and
mov
loop
sub
jno
ds
mov
push
stos
inc
jg
pop
hlt
outsb
ds
imul
mov
sub
cmp
push
jne
or
hlt
imul
pop
fwait
pop
adc
sub
lea
jle
pop
mov
outsl
jle
mov
and
adc
push
loope
fmul
mov
lds
mov
outsb
sbb
add
pop
inc
imul
mov
fiadds
sub
jmp
hlt
xchg
hlt
push
xchg
xor
stos
inc
dec
mov
hlt
mov
ds
out
mov
cld
jae
push
mov
adc
subl
les
inc
cld
lcall
inc
cmp
lea
inc
sub
in
add
xlat
les
sub
repz
adc
mov
pop
ret
sub
into
pop
mov
jmp
mov
mov
push
into
js
and
cltd
cmpsl
jnp,pt
nop
es
push
scas
pop
lahf
repz
addr16
mov
xchg
add
mov
dec
or
pop
std
adc
rcl
cmp
dec
or
aaa
jns
ds
stos
cmc
mov
fstl
lret
shlb
push
xor
mov
daa
jp
push
roll
js
into
dec
mov
xor
fwait
xor
lret
and
mov
sbb
xchg
lret
sbb
dec
sbb
cs
pop
sub
and
lea
andl
enter
xchg
mov
movsl
or
mov
cltd
aas
das
adc
push
dec
pop
int
pop
fcmovu
mov
aad
jb
sub
ss
call
mov
push
insl
or
push
ja
insl
pop
lds
ds
push
lds
fcmovnu
loop
iret
pushf
repz
dec
iret
aad
jo
xlat
out
lock
push
push
gs
cwtl
xlat
stc
call
and
imul
repz
filds
cmc
push
sub
jb
push
jmp
sub
or
shrl
mov
and
inc
mov
pop
jae
adc
adc
fsubrl
cld
cmp
lcall
out
aaa
xor
inc
lds
xor
aas
ficoml
xchg
cmpsb
imul
push
jg
call
pop
mov
sbb
insl
scas
push
jp
leave
dec
outsl
xchg
and
in
mov
xlat
cwtl
rcl
xchg
or
push
xchg
jnp
mov
shl
xor
and
sub
je
fs
arpl
xor
cmp
jge
insl
xchg
dec
in
in
jo
movsb
movsl
push
rclb
fs
jecxz
adc
dec
mov
pop
clc
pop
ja
ret
clc
mov
inc
jle
inc
inc
pop
daa
cmc
sub
stos
shrb
xchg
das
mov
mov
xchg
dec
outsl
sub
outsl
out
cwtl
inc
cmpl
pop
and
popf
popf
jnp
xchg
stos
mov
mov
mov
icebp
lock
xlat
jge
and
data16
scas
cmpb
push
and
bound
sub
sahf
dec
rolb
jnp
scas
lahf
jg
jb
pusha
ficoms
cmp
mov
cmp
pop
mov
imul
es
jne
and
xor
adc
sbb
cld
and
cwtl
dec
out
rclb
sub
test
add
add
or
loop
sub
jle
mov
cmp
inc
insl
cmpsb
aad
jns
pop
xchg
dec
xchg
push
lea
xor
adc
repnz
leave
mov
mov
fs
and
sahf
adc
aas
mov
or
cs
pop
outsb
in
mov
cmp
or
dec
cmpsl
scas
sbb
adc
inc
ret
jp
mov
mov
outsb
add
mov
mov
pop
stc
shll
cli
in
sahf
es
fmuls
push
inc
mov
aaa
xchg
jae
xchg
xchg
ja
iret
sbb
stc
iret
jl
mov
int3
mov
dec
into
mov
ret
sbb
in
mov
or
leave
mov
cmp
lods
arpl
arpl
outsb
cmpsl
pop
push
xlat
shl
xor
push
popf
scas
and
mov
sti
xor
sbb
cmp
push
faddl
adcl
sub
dec
mov
add
mov
ja
push
insb
inc
lods
insl
add
cltd
sbbl
fnstenv
inc
dec
lea
cli
mov
push
xchg
pop
fmull
mov
sbb
add
stos
mov
pushf
push
ljmp
sub
shrb
push
movsb
int3
jae
sarl
int3
mov
mov
inc
jo
mov
xor
push
stos
filds
or
mov
jae
push
push
cmp
ja
mov
and
fstpl
mulb
push
mov
jmp
mov
sub
xchg
mov
xchg
xlat
inc
sahf
sbb
dec
out
sbb
movb
mov
scas
or
movsl
test
fsubr
jae
aas
stos
clc
add
add
stos
call
loope
pop
lahf
mov
inc
cmp
ret
clc
inc
inc
ds
add
dec
imul
imul
sbb
sub
pop
pop
and
cmp
cmp
adc
shr
gs
rclb
je
jo
adc
jbe
insb
sub
pop
mov
ja
scas
cs
xor
xchg
xchg
mov
ljmp
pop
jge
mov
in
cmc
cmpsl
loope
cli
dec
cmp
imulb
mov
adc
ret
insl
fwait
cmp
mov
xchg
loope
jae
dec
rorb
out
pop
pop
adc
adc
sbb
mov
lret
pusha
pop
icebp
pop
pusha
addr16
popl
call
subl
cmpsl
addr16
mov
xchg
loop
sbb
push
jl
jge
lret
stos
mov
shl
xchg
sbb
aas
push
sbb
pop
movsl
jb
jl
inc
lea
rcrl
add
pop
or
inc
andl
lock
les
daa
xchg
hlt
lea
popf
fdivs
mov
imul
xchg
enter
or
ret
xchg
sbb
fs
hlt
mov
inc
cwtl
lret
mov
pop
insb
repnz
rcrb
cmpsl
daa
test
mov
in
les
push
loope
push
fldt
mov
xchg
fucomip
int
pop
pop
rcrb
dec
dec
dec
jae
cmovle
lret
fmuls
inc
lea
scas
xchg
nop
outsb
cmp
cmp
or
in
dec
sbb
out
insb
pop
cwtl
sbb
pop
or
dec
movsb
stos
adc
pop
and
and
push
cmp
les
and
mov
dec
mov
mov
pusha
cmc
sbb
mov
js
push
insl
in
mov
inc
mov
xor
mov
or
mov
out
mov
sti
arpl
sahf
call
dec
js
les
inc
dec
loope
repz
push
jae
mov
mov
push
lret
mov
xor
nop
jecxz
jnp
cmp
sub
mov
ja
push
stos
ret
mov
and
mov
inc
adc
loope
push
mov
mov
stc
repz
mov
rclb
ret
loopne
sti
nop
push
enter
stos
pop
out
les
xchg
xor
jl
icebp
xchg
jns
aas
pop
out
mov
jae
mov
pop
xchg
mov
repz
cmpsl
std
les
repnz
into
mov
pop
std
bound
stos
addl
outsl
mov
mov
sbb
test
pop
ret
inc
push
xchg
cmc
in
cmp
enter
leave
mov
cmp
decb
add
jb
xchg
xor
cld
popf
pop
mov
dec
adc
sub
je
mov
mov
scas
inc
adc
and
sarl
pop
cmp
mov
notl
dec
push
fsubs
sub
lods
decb
xor
loope
loop
arpl
jge
add
paddq
test
xchg
push
sbb
popf
pop
mov
add
and
lret
lods
addr16
movsl
addr16
push
adc
and
or
outsl
or
fldenv
pop
imul
testb
or
jecxz
fimull
xor
and
and
sub
push
jne
or
lea
cld
jne
pop
mov
dec
gs
push
jle
dec
pop
js
imul
pushf
mov
push
leave
std
add
push
pop
rcr
xlat
push
jle
jae
mov
rolb
in
adc
xchg
repz
cli
insl
push
pop
loopne
insl
mov
loopne
aaa
jb
and
and
loope
std
cwtl
negb
xchg
rclb
push
mov
jg
push
dec
mov
push
fcoml
pop
inc
aaa
mov
pop
push
loopne
daa
push
cli
push
sbbl
iret
jg
push
jp
cwtl
cmpsl
divb
sub
mov
daa
fstpl
js
movsl
inc
jo
inc
std
hlt
mov
mov
dec
mov
and
xchg
jb
fiadds
test
sub
dec
js
lret
or
xchg
stc
fbld
or
cld
lods
jns
inc
repnz
or
in
inc
ficoml
mov
aas
movsl
xor
mov
out
xor
cs
mov
lahf
and
movsb
mov
or
ss
dec
in
std
rcll
push
test
aad
je
popf
outsb
mov
jbe
sbb
add
pop
mov
or
mov
inc
adc
add
mov
jl
sub
mov
xlat
lds
xor
inc
adc
jl
sti
mov
xor
or
mov
bound
imul
xchg
sahf
idivb
out
pop
xchg
jne
in
adc
clc
shl
pushf
inc
sub
repnz
les
lfs
sub
lea
fidivrs
add
mov
cld
or
mov
xchg
jae
pop
ret
xchg
sbb
out
xchg
mov
ficomps
inc
pop
mov
cld
xchg
mov
cmpsb
insb
xchg
fcoml
mov
mov
in
pop
testl
mov
iret
pop
test
sbb
or
shrb
mov
arpl
test
test
testb
xchg
icebp
in
add
out
into
xchg
imul
fcoml
cltd
dec
pop
or
das
jne
fs
jge
aaa
hlt
add
mov
mov
mov
mov
pop
or
xchg
imul
lahf
fsubs
fdivl
fnstcw
and
pop
adc
sar
mov
scas
push
add
fildll
jns
aas
mov
mov
lock
adc
sbb
out
xor
fistpl
cmp
adc
xor
pop
and
inc
sub
and
ljmp
add
add
jl
andl
pop
and
shlb
lock
push
cmp
out
xchg
adc
adc
sarl
fbld
movsl
fs
imul
mov
push
js
aad
or
ss
mov
iret
enter
sbb
pop
testb
push
leave
adcb
adc
xor
add
xor
cld
sar
xor
in
dec
pop
adc
sbbl
xchg
mov
inc
out
sahf
inc
push
cmp
push
popf
or
inc
dec
mov
pop
test
lcall
push
mov
scas
aaa
xor
sbb
lahf
fbstp
or
add
inc
iret
pop
stos
push
xchg
sbb
sub
xchg
mov
add
sbb
xchg
push
imul
push
out
xchg
icebp
cld
fdivl
add
pop
aaa
imul
lcall
mov
push
cmp
mov
or
fsubrs
jl
dec
mov
adc
cmpsl
jge
ret
imul
jecxz
hlt
fdivl
pop
mov
mov
mov
mov
adc
mov
rorb
mov
xchg
push
mov
sbb
cmpb
js
or
mov
lock
insb
xor
jp
or
sub
jnp
addr16
or
roll
pop
push
adc
jl
xlat
dec
cmpsb
call
bound
pop
sbb
xor
in
rolb
in
push
lret
stos
mov
mov
ret
sub
lods
and
add
arpl
loopne
dec
loopne
jecxz
inc
inc
jmp
sbb
xlat
jmp
lret
jmp
mov
xor
pop
inc
inc
jne
and
mov
inc
daa
scas
adc
dec
fwait
cwtl
add
pop
mov
jecxz
jl
xor
mov
push
out
cwtl
ljmp
push
dec
fimuls
jne
dec
imul
xchg
std
cld
mov
filds
in
xchg
mov
adc
jmp
dec
mov
in
mov
cmp
pop
movsl
xor
jl
adc
mov
pushf
add
add
add
dec
nop
popa
pop
or
sbb
fimull
push
in
xor
push
mov
adc
add
imul
adc
cmp
stc
insb
xchg
or
inc
pop
sub
mov
daa
std
test
mov
stc
add
push
test
leave
inc
nop
cld
sarl
jne
mov
daa
out
add
test
ds
jge
xlat
jnp
aaa
in
hlt
jle
push
pop
mov
mov
push
js
pop
sbb
mov
bound
enter
out
inc
add
adc
aad
xchg
fs
je
or
push
cmp
pop
lds
or
cmpsl
icebp
imul
ja
add
jge
mov
and
xlat
shll
fmuls
adc
clc
or
adc
sub
mov
test
pusha
sub
sbb
add
adc
mov
mov
jp
repnz
cmp
adc
out
mov
repz
mov
pop
inc
push
out
pop
cmp
mov
mov
jb
js
out
jg
lods
push
aam
outsl
jmp
aas
add
add
xor
sbb
sbb
mov
jge
jne
push
xchg
push
pop
xchg
shrb
les
pop
outsb
scas
sbb
aad
mov
xor
mov
or
pop
fs
adc
cmp
adc
push
and
mov
lods
lahf
divb
lock
add
cmc
imull
jecxz
cmp
push
inc
mov
ficoml
repz
xor
cmp
mov
stos
outsl
xchg
outsb
nop
xchg
in
pusha
sub
pop
pushf
mov
sub
hlt
clc
inc
push
hlt
hlt
fisttpl
xchg
inc
pop
pop
push
adc
fs
bnd
cltd
rcrb
mov
sub
push
in
out
jbe
lcall
push
cmp
push
and
dec
pop
mov
mov
xchg
mov
mov
das
xchg
mov
adc
mov
cmp
sbb
jmp
or
loope
gs
cs
sbb
repz
lea
std
mov
outsb
xchg
jecxz
dec
aad
cmp
out
mov
and
imul
dec
rclb
xchg
adc
mov
mov
cmc
pop
movsl
xchg
iret
sub
push
jbe
cli
pop
and
fldenv
mov
cmp
fs
cwtl
push
fisubl
inc
jbe
xchg
call
dec
xor
mov
push
ljmp
les
mov
test
push
pusha
jp
js
je
ffree
xchg
setle
mov
bound
fcmovnu
push
mov
xchg
xor
push
cmp
push
leave
repnz
in
cmp
dec
jo
aad
ret
pop
insb
loope
pop
out
xchg
jb
arpl
sub
and
in
xchg
pop
daa
mov
gs
cmp
push
jmp
lods
ret
jp
dec
sbbl
out
clc
xchg
and
fnsave
push
sti
out
js
iret
andb
test
jbe
mov
jle
hlt
sub
mov
xor
std
or
stos
mov
xchg
lock
int3
cmp
jnp
mov
icebp
fwait
in
push
xchg
in
pusha
notb
inc
xlat
mov
mov
in
add
jnp
test
mov
push
and
or
jae
shll
out
inc
push
int3
fsubp
xor
ds
xchg
push
dec
movsl
cmp
inc
shll
aas
sti
mov
dec
in
pusha
int3
lahf
fstpl
iret
dec
xor
mov
fisubrl
jns
adc
dec
daa
sbbb
inc
pushf
stos
daa
icebp
mov
xor
cmp
dec
lock
stc
sbb
push
inc
and
sarb
loop
outsl
pop
and
aad
sbbl
jmp
mov
dec
sbb
push
sbb
call
mov
in
push
pop
iret
dec
and
adc
add
adc
cmp
loopne
mov
mov
cmp
xlat
sarb
dec
pop
dec
push
and
leave
mov
add
mov
jne
lods
cmpsl
fidivs
mov
enter
push
xorl
or
paddsb
fildl
add
clc
test
insl
dec
scas
mov
loope
and
icebp
pop
sub
repnz
sbb
xlat
sub
popa
ljmp
jae
mov
push
sahf
sarb
push
bound
lret
jae
in
fstps
jmp
sbb
loopne
movsl
cwtl
mov
add
pusha
mov
lods
mov
aam
and
pop
and
sub
sub
lcall
inc
cmp
adc
fcoms
insl
pop
sbb
in
push
jnp
mov
add
mov
pop
jae
adc
lock
fmulp
pop
enter
or
test
std
pop
stos
fcomps
insb
xchg
out
mov
cli
or
loop
push
std
add
pop
adc
sub
jae
fadds
inc
mov
or
inc
roll
xorb
fsubl
mov
mov
js
cs
xchg
mov
into
pop
add
mov
movsl
jle
frstor
int
pushf
nop
cmp
das
xlat
bound
pop
xorl
stos
aad
nop
clc
scas
out
xlat
inc
arpl
inc
jg
or
aam
test
push
out
pop
test
daa
dec
push
or
add
cmp
popf
push
bound
lahf
push
mov
ret
xchg
and
xchg
lods
push
pusha
testl
roll
shl
cmp
add
cwtl
arpl
and
cmc
xor
in
incb
lock
aaa
or
pop
push
sahf
adc
loopne
mov
movsb
rorl
push
jge
add
hlt
or
sub
repz
pop
cmp
push
cmp
fldenv
push
loope
stos
pop
inc
xchg
mov
sar
out
mov
fwait
ds
jl
mov
mov
movsl
fimull
fldln2
out
sbb
nop
xchg
sub
mov
loop
lea
test
pop
mov
popf
adc
sub
ds
mov
scas
mov
xor
dec
bnd
hlt
je
dec
add
sub
sar
cli
xchg
mov
push
cmpsb
daa
or
xor
push
add
adc
and
or
sbb
add
pop
fistl
cmpb
push
sub
loop
push
mov
repz
xchg
mov
ss
cmp
ficomps
add
cmp
fisubrs
mov
mov
data16
addr16
jo
dec
push
jge
adc
cmp
lods
into
mov
xorl
mov
aas
jg
cwtl
sbb
addr16
inc
test
shr
mov
mov
xchg
jle
push
push
pop
or
sub
dec
ss
sahf
in
mov
jbe
lret
mov
sub
mov
fsts
cmpsb
mov
cmp
cwtl
cmp
cmp
mov
call
pop
inc
jle
ljmp
shlb
lods
mov
inc
xchg
outsb
inc
or
cwtl
gs
mov
ret
inc
ret
mov
mov
scas
aaa
add
clc
mov
pop
std
push
and
sub
cmpl
stos
or
arpl
jo
xchg
mov
insl
add
dec
mov
push
inc
cmp
mov
mov
jns
dec
fwait
inc
or
or
cmp
cltd
cmp
loope
js
idiv
cmp
in
mov
subl
sbb
mov
jno
inc
cmpsb
push
scas
out
outsb
and
sub
out
mov
jecxz
add
xor
jns
dec
ret
inc
or
xor
int
or
ret
cmp
push
adc
cmp
xor
stc
push
mov
aad
push
cs
out
add
lret
in
mov
mov
ret
pop
push
mov
xorl
add
lahf
cmp
test
mov
popl
jg
leave
fnstsw
insb
or
stos
into
xor
clc
cmp
pop
push
out
addr16
dec
pop
adc
scas
or
hlt
push
in
xor
imul
lods
shll
sub
mov
popa
inc
mov
adc
in
stos
in
sub
sub
mov
xchg
test
lret
sub
mov
push
and
mov
gs
jmp
jmp
mul
fwait
xchg
mov
or
sbb
dec
or
or
cmp
std
ljmp
mov
scas
in
mov
lcall
lock
roll
jo
jmp
inc
or
js
addr16
movsb
fistl
rcll
cli
int
sub
xchg
adc
xor
push
pop
sbb
add
gs
dec
stos
daa
sub
inc
mov
jae
or
loope
aam
jno
test
je
ss
inc
icebp
mov
ss
fnstenv
cmp
mov
adc
bound
push
or
jl
pop
cli
dec
xchg
mov
dec
int
mov
scas
pop
and
mov
or
ds
jbe
add
fistps
mov
jg
test
dec
lods
dec
mov
cmpsb
push
push
cmpsl
and
pop
adc
inc
add
mov
mov
xchg
lret
xlat
mov
mov
ja
adc
ja
lret
or
data16
int
test
adc
scas
xor
sbb
mov
cmp
rclb
lods
or
mov
sahf
xchg
jl
add
inc
notl
repnz
pop
cli
add
test
adc
mov
xor
scas
pop
and
ret
or
fnsave
aaa
mov
sbb
lea
mov
pop
mov
pop
ds
xlat
mov
mov
cwtl
and
sbb
cli
cmp
cmpsb
js
fs
shll
cmp
push
test
rcrb
clc
inc
test
cld
idivl
fwait
mov
lahf
add
pop
clc
and
mov
push
add
inc
jecxz
out
mov
xor
mov
mov
insl
lret
arpl
and
mov
cmp
dec
clc
test
lods
outsb
clc
fwait
cmpsl
cmp
xor
call
movsb
aas
lods
or
xlat
adc
mov
pop
cmp
mov
enter
subl
push
or
cmpsl
fcmovbe
pusha
fstpl
nop
arpl
ja
jae
sahf
xchg
mov
ret
sbb
faddl
outsb
and
insb
in
cmp
lret
nop
lea
loopne
rcrb
in
cmp
or
sar
stos
sbbl
cmc
inc
lret
sbb
pop
dec
icebp
out
inc
or
or
sub
test
mov
mov
mov
xor
ret
loop
jo
leave
inc
dec
ljmp
stc
dec
les
popa
or
add
addr16
daa
pop
mov
mov
sbb
outsl
aam
repnz
popf
cmc
xchg
mov
leave
mov
add
jns
xchg
and
loopne
xor
inc
mov
add
jno
xor
shrl
pop
lds
xor
test
orb
inc
imul
test
add
popf
jnp
and
arpl
data16
psubusb
mov
aam
in
cmpsl
js
xchg
mov
jae
adc
add
lcall
divb
mov
insb
aaa
je
repnz
int3
sarl
js
mov
cmc
push
std
jmp
int
sbb
push
and
mov
xor
divb
daa
mov
ljmp
add
sub
fucomip
mov
fstpl
push
fisttpll
rolb
js
or
push
popf
dec
jmp
dec
xchg
test
das
adc
lds
adc
add
add
movsl
test
inc
adc
pop
outsb
daa
mov
and
test
cmp
ret
pop
test
lods
mov
bnd
bnd
popf
push
or
push
in
push
ljmp
xchg
mov
push
nop
pop
pop
popa
roll
or
xor
mov
jno
out
lret
jbe
mov
jo
aam
jge
imul
movsl
push
sti
jp
pop
xchg
push
cltd
jnp
or
push
or
jnp
cltd
ficoms
or
test
cmpsl
jmp
mov
aas
push
test
mov
sbb
iret
popa
fcom
mov
mov
adc
mov
popf
aad
mov
sbb
std
call
fiaddl
push
jecxz
sub
daa
push
out
int
mov
adc
jne
cmp
fldl
sbb
or
aad
xchg
jbe
ss
sub
outsl
sub
push
sub
sbb
xor
adc
test
dec
mov
adc
notb
test
mov
mov
dec
insb
ss
jge
leave
aas
sbb
xchg
and
dec
scas
mov
cmpsl
xchg
inc
shll
push
push
lahf
icebp
dec
mov
pop
push
and
movsl
jo
mov
mov
dec
add
and
inc
xchg
sub
adc
xchg
test
sbb
push
mov
cmp
jle
mov
stc
adc
repz
pop
push
test
insb
sub
popf
fdiv
cwtl
jle
and
jecxz
or
or
leave
fistps
fcmovne
adc
mov
cli
lret
xchg
push
adc
mov
sbb
jp
xchg
mov
test
das
daa
nop
push
pop
adc
movsb
sub
pushf
xor
rcll
dec
in
sbb
sbb
pop
inc
mov
jne
lret
aaa
arpl
hlt
inc
enter
xor
sbb
decl
dec
cmpsl
loopne
outsl
xchg
jb
cmp
aad
add
fcmovu
out
fnstcw
jecxz
inc
cmp
ljmp
lret
mov
jo
push
inc
mov
je
push
vcvtsi2sdl
mov
popa
movl
icebp
and
xchg
lds
adc
arpl
jae
xor
adc
cmp
jle
lods
mov
clc
cmp
mov
add
push
mov
sbbl
cmc
push
popf
jns
stos
jp
mov
in
mov
mov
jg
lret
lahf
sub
inc
xchg
cmp
xor
test
fstps
push
pop
lret
pop
add
outsb
and
sahf
js
sub
adc
cltd
xor
int3
jg
addl
int3
movsl
xchg
lahf
and
fbstp
ljmp
outsl
call
mov
pop
xchg
xor
pop
lahf
jle
sbb
pop
push
lcall
push
test
loope
in
fistl
lret
sbb
sub
outsl
push
mov
aaa
je
insl
jle
adc
pop
fdivrs
mov
mov
cmpsl
inc
test
jmp
or
sub
sbb
xchg
shrb
das
dec
test
es
pop
stc
inc
mov
out
mov
dec
dec
mov
sbb
xor
jno
or
hlt
repz
aas
sub
xorl
push
loope
lcall
sub
icebp
hlt
jno
ret
xor
ds
je
and
loop
flds
xor
fptan
push
mov
and
cld
mov
pop
cmp
shl
mov
mov
push
lods
mov
add
sbb
cli
es
mov
scas
and
cs
mov
dec
dec
mov
ficomps
iret
inc
std
xchg
or
aam
push
jb
dec
add
cvtps2pd
inc
repnz
aaa
pop
or
dec
cmp
inc
inc
mull
and
insb
outsb
xchg
mov
int3
sbb
enter
rcrl
in
decl
push
sbb
aaa
pushf
jb
xchg
dec
mov
and
call
imul
dec
loop
or
cs
movsb
int3
add
sbb
sbb
pop
loop
test
rclb
out
dec
pop
stos
leave
imul
aas
sti
in
and
mov
sbb
sbb
inc
jo
mov
imull
mov
outsl
in
cmp
movsl
pop
mov
ss
xor
fwait
mov
mov
cs
mov
or
pop
imul
or
insb
mov
sub
stos
and
pop
add
pop
add
pop
or
ja
jns
or
mov
pop
sbb
vmovsldup
mov
mov
incb
cltd
imul
fdivp
notb
into
and
jle
sub
pushf
inc
mov
inc
jp
push
fs
xchg
xchg
rorb
pop
je
push
xchg
popa
pop
out
cmc
mov
jnp
dec
clc
mov
mov
xor
jb
fnstcw
pop
mov
push
mov
xor
and
adc
test
es
arpl
jb
xchg
aam
cmp
push
lahf
or
testl
and
push
incl
xchg
ret
push
test
inc
inc
cmp
movsl
hlt
mov
idivl
cmp
stos
jmp
sub
aaa
xchg
out
daa
adc
ret
insl
hlt
insl
stc
cmp
lea
inc
sarb
or
cmp
mov
adc
popf
je
add
sahf
pop
pop
outsb
dec
loop
stc
mov
pop
jl
mov
sbb
dec
lods
dec
pop
sub
sbb
sahf
jnp
test
mov
outsb
mov
fnstsw
outsl
out
loopne
dec
xchg
cmp
mov
aaa
stos
lods
mov
mov
dec
jb
mulb
or
sbb
mov
push
adc
rolb
cmovs
xchg
mov
mov
push
and
mov
call
out
mov
aas
out
out
shll
jg
and
repnz
push
pushf
sub
mov
test
jecxz
fmuls
pusha
inc
dec
scas
sbb
imul
les
es
mov
arpl
mov
xor
mov
roll
stc
cmp
movsl
test
pop
sbb
mov
xchg
lock
add
mov
cmp
xor
xchg
cs
in
cmp
or
enter
cmp
xor
jmp
sub
addl
test
jno
xor
popf
sub
sahf
xchg
push
and
pop
popa
cmpsb
outsb
dec
mov
mov
mov
cmpsl
xlat
orb
cmpsb
add
stc
cld
mov
scas
push
inc
je
js
push
mov
xchg
push
dec
push
dec
pusha
fidivl
xor
pop
in
cs
dec
dec
pop
aas
jns
inc
xor
push
arpl
in
arpl
push
in
imulb
pop
cmp
mov
imull
and
push
sbb
jns
int
addr16
dec
in
cmp
push
or
into
add
pop
fbld
push
xchg
sbbb
xchg
hlt
sub
sbb
push
or
mulb
jle
fldenv
notb
loope
xor
sbb
in
test
mov
xchg
loop
mov
xor
xlat
pop
test
pop
cli
sub
jb
jae
insl
in
adc
fidivl
outsl
test
xor
leave
std
pop
dec
sbb
fcompl
jns
mul
pop
mov
jne
test
jg
je
insl
mov
inc
xor
pop
jl
pusha
xchg
imul
push
and
stos
fldl
cmp
mov
xchg
loopne
out
and
repz
pop
mov
ficoml
and
xor
inc
dec
inc
pop
cmp
in
rcrl
mov
xchg
push
jbe
mov
push
xor
dec
mov
mov
xor
lahf
in
adc
or
mov
pop
jmp
cmc
outsb
pop
out
sub
in
mov
cmp
adc
imul
push
out
mov
xor
mov
cli
or
mov
add
or
pop
fildll
xchg
scas
or
xchg
push
icebp
adcl
test
stos
enterw
scas
jo
call
loopne
insl
loopne
sbb
stos
mov
pop
ds
push
add
repnz
jl
loopne
adc
xor
push
mov
ret
leave
push
add
push
je
jno
aaa
mov
inc
jne
out
fs
xor
pop
mov
adc
aaa
adc
jbe
push
in
lret
adc
imul
rol
ror
mov
mov
scas
js
aaa
pushf
loopne
loopne
xor
dec
ss
xchg
cs
loope
adc
jge
jmp
mov
imul
mov
push
popf
vphaddbd
lock
lcall
popf
outsb
xor
cs
cmc
and
add
cmp
pop
jl
cmpsb
xchg
cmp
mov
mov
adc
add
adc
sahf
rcll
adc
push
test
xchg
lds
movsb
fcmovne
sbb
arpl
dec
add
inc
pop
mov
cltd
out
scas
jns
push
cli
mov
in
xor
mov
fildl
in
push
in
add
sub
fisubs
jo
jmp
dec
mov
or
add
stos
cmpsl
movsl
jnp
add
sbb
out
mov
sahf
xor
dec
adc
fyl2x
fisubrl
rcl
insb
mov
or
sbb
rolb
and
mov
iret
push
pushf
dec
xchg
mov
rcrl
in
mov
xor
insl
sub
aaa
sub
imul
clc
adc
stc
mov
stc
xchg
cli
adc
movsb
out
mov
das
lcall
mov
mov
scas
inc
and
in
and
cmp
imul
ret
mov
arpl
add
lahf
ja
je
data16
loope
sub
and
adc
fwait
cltd
sbb
les
aas
add
outsl
repnz
xchg
stc
ja
das
test
jo
push
cmp
cmp
in
push
pop
idivl
push
pop
in
push
lds
icebp
ljmp
ds
dec
lcall
fsubr
jb
mov
rclb
shlb
and
nop
jnp
dec
pop
xchg
leave
pop
out
cmp
fisttps
in
sbb
icebp
shl
mov
jbe
cmpsl
xlat
daa
lds
insb
in
cmpsb
out
sub
cmp
adc
inc
das
fbld
or
adc
stc
scas
cltd
push
sbb
fstps
dec
fcmovu
sti
jl
lcall
mov
in
jne
outsl
dec
inc
push
les
mov
push
mov
dec
rcr
popl
incb
sbb
sub
mov
and
adc
cmp
xlat
add
call
mov
sarb
pop
pop
popl
scas
or
in
xor
stos
cld
rcrb
pop
frstor
or
stos
rcll
add
jnp
aaa
push
add
inc
lret
mov
fwait
test
imul
ja
push
mov
fldenv
out
shrl
xchg
rcll
jl
cmp
pop
rcll
insl
dec
lds
xor
icebp
fsub
pop
push
ja
push
or
pop
ljmp
push
mov
lahf
inc
mov
push
mov
fisubrl
jle
inc
cmp
adc
test
cwtl
mov
pop
rcrl
rorl
jns
cld
mov
aad
jecxz
data16
xchg
dec
pop
jb
out
ljmp
jecxz
mov
ljmp
loop
shr
push
push
mov
sub
movsl
movsl
aam
imull
sbb
pushf
pop
push
hlt
mov
xchg
out
daa
cli
mov
cmp
xchg
movsl
fimuls
in
inc
mov
setp
enter
lahf
jae
es
mov
mov
out
add
mov
shll
sub
inc
in
cmp
cmp
int3
lea
adc
jae
cmp
lods
push
fildl
ljmp
xor
add
adc
out
add
in
mov
jge
cmp
pop
call
xor
je
in
mov
imul
repnz
pop
add
dec
addr16
dec
notb
sub
jno
lock
out
cmovb
js
jg
mov
cmpb
pop
negl
inc
mov
sti
clc
cmp
mov
cld
lock
and
aam
add
push
adc
lcall
add
mov
imul
addr16
andb
maskmovq
notl
xor
push
dec
popa
lahf
mov
mov
sti
add
add
mov
lcall
sbb
xchg
out
andb
and
add
das
fsub
stos
push
mov
fwait
xor
sub
gs
iret
movsb
pushf
xor
movsb
mov
jnp
xchg
lret
cmp
and
push
mov
sbb
add
aad
mov
and
repz
insl
xor
outsb
insb
add
push
mov
dec
pop
mov
movsb
jno
aad
cs
jmp
xor
or
frstor
repz
fmuls
push
and
mov
cmp
dec
mov
pop
aas
roll
sbb
fiaddl
imul
or
retw
sub
push
pop
idivl
in
idiv
out
inc
clc
mov
std
push
or
pop
stos
iret
push
ficompl
sbb
mov
inc
fisubrl
cmp
fnsave
push
jo
icebp
call
or
mov
lcall
out
mov
daa
xchg
inc
ljmp
aas
sahf
jl
adc
fidivl
movsb
xlat
divl
incl
jbe
add
test
loope
mov
dec
xchg
andb
xchg
push
movsl
mov
push
addl
push
sbb
sbb
jp
add
clc
lahf
loop
adc
cmc
pushf
in
sub
jle
cs
xchg
sbb
xchg
add
jl
and
cmp
adc
xchg
adc
jge
fmull
call
outsl
add
xchg
into
and
mov
dec
mov
cmp
push
loopne
xor
bound
xchg
in
bound
gs
jp
mov
stos
sub
and
fisubrl
add
das
xchg
cmp
stos
sarl
aad
cmpsb
and
in
clc
mov
addb
lcall
xrelease
popa
cwtl
jo
and
cmp
loope
addb
popa
add
roll
mov
outsb
bnd
xor
add
xorb
add
cmpsb
lcall
dec
ret
ljmp
cmpsl
push
mov
mov
fsubl
es
aam
sub
cmc
divb
add
lcall
jle
outsb
pop
inc
sti
scas
into
cmp
xchg
std
push
sbb
insl
lods
pop
pop
add
fmull
rcrb
adc
mov
mov
rcl
negl
mov
jg
mov
xchg
mov
or
loope
and
ret
jg
xlat
mov
cmp
aaa
inc
scas
out
cld
mov
mov
and
adcb
mov
aad
adc
lea
or
flds
pop
aam
pop
xor
lock
mov
ja
ds
xchg
mov
push
xchg
lret
pop
dec
push
loope
leave
mov
repnz
xchg
add
shlb
xchg
into
addb
aam
adc
pop
sub
das
shl
mov
cmc
cmc
dec
sub
mov
cli
push
jmp
into
mov
fs
sbb
inc
in
std
call
add
mov
ljmp
rolb
daa
push
outsl
ljmp
xchg
add
lret
sbb
add
ja
into
dec
push
repz
adc
fsubr
adc
mov
push
das
push
fcoms
cmpsl
or
in
xor
bound
push
cld
mov
stos
jg
push
movsl
aas
lret
adc
mulb
xchg
mov
lods
lods
adc
adc
mov
xchg
mov
shlb
decb
push
mov
adc
jae
push
pop
ss
sub
adc
jb
push
inc
mov
std
push
psubsw
popa
fcomp
mov
cmp
or
mov
into
pop
in
xchg
icebp
jbe
in
loop
mov
ds
scas
loopne
mov
sarl
or
shl
decl
jecxz
popf
ja
clc
pop
fs
xchg
std
sbbb
dec
icebp
mov
fld
mov
inc
mov
xchg
flds
fdivr
lahf
popf
adcl
jno
fildll
das
pusha
xchg
cmp
idivb
mov
movsb
lds
popf
inc
push
lods
into
mov
cmpsb
cmp
scas
push
out
std
adc
sbb
addr16
scas
repnz
bound
iret
enter
loopne
cmp
lock
sbb
aam
dec
cmp
cmp
dec
mov
mov
cltd
fsubl
call
in
in
mov
xorl
adc
add
jo
orb
xchg
xchg
mov
pop
stc
jns
xor
popf
fs
mov
hlt
dec
jmp
cmpsl
add
inc
xchg
rclb
mov
add
mov
scas
popf
scas
hlt
jae
stos
jge
pop
aas
rclb
in
ja
leave
pop
outsl
popf
dec
cmp
pop
pusha
lret
jge
cld
xor
scas
jb
hlt
addl
fwait
pop
outsl
push
xchg
xchg
imul
inc
icebp
pop
push
pop
push
dec
sbb
sub
addr16
jae
sbb
lret
mov
pop
lods
popf
insb
dec
roll
int3
inc
or
xchg
cmp
lret
cmp
xchg
jo
mov
mov
hlt
adc
mov
in
cmpsb
push
add
mov
movsb
or
sbb
fnop
jo
stos
hlt
mov
negl
ret
iret
into
xchg
call
pop
fiadds
lods
sbb
out
dec
add
xchg
xor
mov
fisubrs
sub
dec
mov
cli
mov
orl
jno
inc
adc
sbb
push
fisubrs
fmull
scas
lds
movsb
inc
daa
fstps
js
fists
push
hlt
add
lret
mov
subl
repnz
les
fnstsw
cmc
lds
pop
cmpsl
add
loop
aas
jbe
in
je
idivl
mov
cmp
inc
sub
aad
nop
in
pop
loope
ja
ds
sti
movsl
dec
lcall
push
jno
fcomps
push
mov
push
mov
les
nop
adc
test
inc
lret
mov
dec
pop
jl
cwtl
repnz
leave
ljmp
mov
dec
nop
xor
sbb
leave
fsubs
lcall
push
pop
std
jecxz
dec
call
out
in
int3
xor
jge
pop
mov
sub
ffreep
testl
adc
sbb
lahf
push
jecxz
xchg
sbb
pop
jecxz
imul
test
jge
sbb
lds
insl
nop
movsl
dec
cltd
bound
jl
sbb
mov
jmp
jle
test
out
inc
adc
loop
rclb
sub
bswap
push
inc
pop
jecxz
test
jmp
xchg
stos
or
xor
in
mov
andl
sbb
or
sbb
mov
in
les
inc
push
mov
jmp
lret
idivl
xchg
sbb
orl
or
push
enter
rclb
int3
mov
mov
inc
cs
inc
pop
sbb
adc
jb
cltd
dec
ret
push
xchg
dec
in
push
pop
movb
push
out
or
mov
ret
call
stos
mov
mov
icebp
inc
in
cld
ljmp
jmp
cmp
subl
out
lock
fcom
jge
and
movsb
orb
push
and
popf
cli
inc
dec
stos
pushf
aad
mov
sahf
inc
mov
pushf
jg
or
das
int3
aas
push
cmpsb
shll
inc
fwait
inc
repz
ja
mov
pop
sarb
js
out
sbb
xchg
mov
jecxz
sbb
cli
sbb
movsb
pushf
cmpsb
mov
lea
loopne
push
lcall
xchg
jo
out
sub
sub
pop
insb
std
adc
hlt
cmp
xchg
xchg
push
cmp
outsb
cmpb
out
outsb
sub
dec
hlt
enter
jmp
add
movsb
cmp
bound
imul
out
nop
cmp
and
lds
fs
pop
mov
and
rcrb
movsb
or
jo
andl
or
daa
or
inc
loopne
mov
stc
fwait
pop
xor
mov
inc
mov
or
add
in
xchg
sub
into
lea
sbb
inc
mov
jbe
fmul
mov
leave
popf
mov
bound
je
icebp
enter
hlt
xchg
and
and
sub
les
mov
cli
lods
gs
movsb
popf
outsl
jecxz
sbb
jp
decb
sub
dec
ljmp
sbb
fs
mov
enter
in
lret
scas
mov
mov
inc
adc
push
fs
mov
pop
outsb
mov
or
pop
sar
mov
mov
ret
repnz
mov
mov
mov
aad
adc
in
shlb
ret
push
xchg
cmp
test
imulb
cmc
and
mov
repnz
cld
sbb
dec
add
sbb
xchg
mov
ficoml
adc
icebp
mov
fwait
lods
shl
cltd
imul
ret
pavgb
sbb
mov
mov
dec
xchg
adc
mov
icebp
push
pop
jp
jns
add
jge
xchg
ss
lcall
test
push
mov
js
mov
jns
pop
pop
incl
pop
jl
leave
inc
in
mov
in
pop
add
movsl
pop
adc
insb
jns
call
imul
xor
dec
pop
lods
cmp
imul
je
dec
mov
adc
in
push
loop
cmp
jg
ds
mov
repz
xlat
cli
jl
out
cmp
or
jge
push
shrl
fimuls
pop
sub
fisubs
inc
xchg
or
sbb
inc
sbb
dec
rcrl
jge
sub
xor
push
add
mov
add
mov
outsb
cmp
cltd
add
or
or
xchg
lahf
sbb
adc
dec
aam
cmp
ss
fs
and
lods
dec
pop
dec
sti
and
sbb
in
sub
pop
push
aaa
sub
push
lds
adcb
mov
xor
iret
mov
inc
mov
mov
xacquire
inc
daa
pop
test
insb
xor
lahf
cmpsl
nop
jbe
xrelease
arpl
rolb
shr
push
pop
nop
gs
push
xchg
or
mov
pop
mov
stc
mov
std
mov
mov
xor
je
pushf
sub
push
outsb
and
jmp
jne
movsb
push
mov
cltd
ret
call
pushl
sbb
sub
jb
add
adc
je
lcall
or
repz
popa
daa
test
outsb
xor
out
repnz
dec
dec
or
stos
rcl
dec
lret
sbb
lahf
xor
fsubl
data16
setae
scas
xlat
fwait
lahf
jp
mov
push
cmp
sti
lea
int3
mov
out
les
loop
or
jns
or
dec
into
push
test
pop
mov
lret
in
scas
loope
and
push
sub
test
jb
pop
adc
push
loopne
imul
add
fdivs
clc
cmp
fdivrl
push
inc
cltd
push
lds
imul
push
pop
mov
sub
fwait
push
test
xchg
or
xchg
or
std
movsl
push
popl
xchg
mov
fcmovnu
loopne
xchg
jo
aam
std
loopne
jno
fidivrl
pushf
cmpsb
mov
pop
popa
dec
fisubrl
or
jmp
fwait
stos
ss
cmp
pop
popf
outsl
lret
cmp
push
inc
push
ud0
or
jae
add
xor
lods
cwtl
ja
test
call
imul
cs
arpl
cwtl
out
daa
jmp
inc
scas
push
repnz
and
mov
mov
ret
xor
push
inc
mov
jnp
nop
pusha
sub
les
divb
inc
xor
not
cmc
daa
and
adcb
xchg
sub
aas
sub
fwait
test
pop
push
or
mov
roll
inc
mov
jno
jp
aad
leave
pushf
push
lahf
and
inc
adc
movsl
mov
inc
or
sbb
stos
fmull
inc
mov
mov
js
pop
mov
out
pop
ja
adc
or
js
mov
aad
push
xlat
pop
loope
imul
inc
jo
pop
mov
mov
jge
and
mov
jb
jae
xor
cmp
jno
push
clc
out
mov
imul
out
or
insb
sub
xchg
push
orl
jle
jns
mov
push
xchg
pop
ret
push
inc
and
ds
pop
xchg
jg
and
cmp
push
fimull
insl
push
loope
lods
inc
and
mov
pop
icebp
popf
inc
and
xchg
ret
lret
mov
or
cmc
push
gs
mov
in
sub
pop
and
mov
push
movsl
imul
sbb
ljmp
mov
in
pop
and
xor
adc
xchg
mov
into
int
push
adc
push
in
test
out
out
sbb
repz
dec
jo
or
dec
das
pushf
xor
lea
outsb
or
jge
xor
adc
adcl
pusha
mov
insl
add
xchg
scas
aaa
hlt
test
outsb
mov
and
in
inc
cwtl
mov
jo
push
inc
shll
inc
iret
scas
lret
daa
cmpsb
push
xchg
cli
sbb
cli
ja
and
sahf
push
inc
out
xchg
sbb
ja
ss
cmp
icebp
mov
out
mov
mov
or
daa
jp
jp
jge
sbb
inc
xor
push
xlat
adc
fs
push
inc
sti
sub
and
add
in
stos
mov
xor
mov
mov
mov
mov
mov
fwait
sti
add
and
inc
leave
jne
push
lock
stos
imul
cmc
push
inc
fwait
mov
mov
xor
dec
outsb
add
dec
pop
mov
push
fidivl
sub
xor
lea
aaa
mov
mov
mov
fucomp
add
fildll
inc
dec
or
mov
mov
adc
stos
jmp
lcall
lahf
xor
push
sub
test
sub
leave
push
loop
and
add
inc
out
in
ds
jmp
jmp
sbb
and
push
dec
imul
ds
cmp
arpl
lods
xlat
push
shrl
lret
lods
ljmp
arpl
gs
jmp
cld
pop
and
imul
sti
inc
jecxz
in
test
cmpsb
inc
push
sub
and
pop
sub
jae
xchg
cmp
sbb
sub
xchg
lods
jno
jge
sbb
xchg
xchg
or
inc
sbb
in
pop
lcall
sbb
scas
cwtl
xor
xor
popa
and
adc
jne
std
mov
xor
add
movsb
dec
jns
cmpsl
lods
xchg
out
mov
push
and
sarl
push
jecxz
or
icebp
jo
jne
notb
inc
or
aam
loop
test
xor
sbb
cmc
sbb
sbb
xlat
fldenv
gs
je
mov
push
jne
in
sahf
mov
jns
flds
inc
out
mov
add
pop
xlat
cmp
sbb
and
fadds
mov
in
jno
push
jp
sti
lret
pop
lcall
jae
or
out
add
shrb
sbb
mov
xchg
popa
test
sahf
adcb
int3
mov
addb
xor
pop
in
in
xchg
cld
pusha
mov
jb
in
inc
push
dec
mov
pop
lock
jg
movsl
xor
mov
pop
inc
out
jecxz
mov
iret
and
or
cmp
sahf
xchg
sub
cmpsl
dec
syscall
add
loopne
das
ret
popf
pusha
adc
jmp
mov
dec
mov
fisubrl
sbb
daa
jo
clc
std
push
mov
notl
mov
xor
mov
bound
dec
daa
fstpt
jmp
push
pop
imul
ds
mov
push
aaa
xchg
sbb
lock
adc
sub
adc
mov
xchg
xor
out
stc
or
flds
push
inc
lcall
ficoml
loopne
adc
xor
mov
dec
stc
xchg
out
daa
sub
mov
add
or
inc
adc
sub
aas
ljmp
loope
fcmovnb
sbb
dec
addr16
jnp
dec
outsb
fstps
jne
and
mov
aaa
pop
fisubrs
in
loopne
pop
jle
out
inc
notb
push
outsl
sub
mov
xor
mov
imul
stc
lcall
xchg
frstor
in
or
add
ret
mov
scas
lahf
imul
iret
loope
cmpsb
aam
lds
jmp
push
jg
push
jne
xor
sub
cltd
cmp
jmp
mov
sbb
kmovb
xor
iret
orb
push
and
dec
xchg
or
fsubrl
iret
ljmp
outsl
xchg
inc
in
cltd
xor
loope
sbb
xchg
push
in
daa
inc
xor
push
addr16
xchg
leave
daa
jns
fstl
test
loop
into
mov
mov
inc
sbb
push
push
lods
pusha
xchg
aaa
and
gs
cmc
dec
jl
stc
fmulp
xchg
sub
cmp
ds
and
add
jmp
push
fadds
inc
jns
push
movb
mov
cwtl
loope
adc
mov
xor
mov
in
repnz
or
out
jb
jo
mov
cs
pop
fmull
icebp
xlat
cmpsb
add
xchg
test
sub
icebp
mov
daa
lods
cmpsb
add
sbb
addl
sub
test
aad
add
mov
outsl
daa
and
add
std
push
xor
inc
ror
jle
mov
testb
add
gs
mov
stos
sub
inc
int3
adc
mov
push
loope
insl
mov
pop
cld
cmp
jbe
xchg
hlt
cmp
and
sbb
call
cmpsl
fldenv
cmpsl
imul
cli
mov
push
movsb
xchg
sbb
mov
aam
hlt
out
clc
mov
mov
xchg
jmp
and
push
cmp
inc
aad
dec
dec
push
jmp
lods
insl
stos
rcll
ret
mov
adc
sbb
mov
cwtl
sbbl
int3
int
jmp
jb
std
push
inc
out
addl
push
inc
mov
push
cmpsb
ja
sti
or
jp
mov
ja
insb
mov
pusha
fwait
inc
int
mov
sub
call
mov
adc
insb
adc
lret
and
adc
inc
cmp
mov
into
jge
nop
mov
mov
pusha
pop
fidivl
decl
arpl
movsl
aam
xchg
jnp
ret
dec
dec
and
mov
dec
mov
lock
pop
add
dec
add
mov
adc
mov
dec
adc
or
mov
loop
cmp
pop
or
flds
movb
jecxz
adc
or
shlb
pop
push
imul
mov
pop
jo
sub
insl
loop
iret
jp
adc
in
sub
shrb
movsb
es
and
add
ja
test
adc
pop
insl
xor
ret
les
dec
aam
stc
xor
stc
div
add
jno
add
cmp
xchg
jne
mov
scas
mov
pop
jne
inc
add
xor
jp
push
mov
testb
outsb
rorl
std
inc
xchg
mov
sub
loopne
fidivrl
lods
dec
shll
stos
idivb
xor
dec
lods
xchg
je
sub
xchg
cmpb
aad
sti
clc
jle
mov
or
mov
psubq
insl
pop
mov
scas
bound
clc
stos
sub
cld
lahf
mov
mov
xor
mov
dec
lahf
push
dec
pushf
mov
push
je
js
in
ljmp
dec
sbb
jae
jmp
mov
hlt
push
sub
mov
jg
in
test
jecxz
xor
xor
push
mov
pop
adc
xchg
xor
int
pop
sbbl
pop
and
adc
out
push
push
aam
push
cmovnp
lock
cmp
loope
cmp
aaa
sub
pop
and
cmpsb
xchg
pop
sti
xor
push
insb
jo
ss
int
cmpsb
and
xchg
test
ret
lods
leave
and
xor
lret
into
add
ret
in
push
xor
mov
rclb
mov
xor
cmp
cli
rcll
lea
lret
add
decl
daa
pop
lea
jl
addb
pextrw
imul
jns
ret
xchg
rclb
ret
adc
icebp
test
mov
jo
pop
andb
in
imul
test
std
sahf
gs
repz
xorb
push
es
lods
hlt
fldl
and
imul
les
inc
push
and
ret
push
xor
lods
pop
arpl
mov
or
cld
lret
negb
add
and
lods
negl
sti
mov
in
and
lock
fwait
xor
mov
mov
push
mov
lods
fldcw
or
mov
pop
hlt
notl
jle
mov
repz
push
mov
es
jnp
shl
dec
repnz
aaa
repnz
xchg
cwtl
mov
sti
xchg
push
cs
ds
xor
loope
dec
mov
xor
xchg
fwait
push
sub
mov
nop
sbb
mov
cs
in
loop
dec
hlt
orl
mov
pusha
sbb
adc
insl
jmp
jno
cs
leave
mov
pop
push
xchg
test
out
ret
mov
xlat
repnz
enter
mov
sar
xor
mov
mov
or
in
push
sub
data16
aaa
mov
andb
stc
push
add
aas
aaa
nop
jmp
inc
sbb
dec
mov
in
scas
nop
in
pop
mov
lods
adc
pop
cld
push
cli
push
and
jg
ljmp
adc
push
sbb
aam
out
lods
out
mov
lods
shll
ret
in
int
adc
xchg
es
cmp
or
jmp
jge
daa
adc
dec
scas
int3
mov
fwait
int3
xchg
aaa
cmpsl
pop
ret
push
sub
pop
int3
in
jle
fwait
xchg
cmpsl
aas
mov
fwait
imul
roll
inc
sub
xlat
out
add
insb
lds
ja
imul
mov
lods
rcl
push
repnz
into
mov
pop
cltd
push
pop
cmc
mov
shll
mov
cmp
shlb
sbb
adcb
outsl
into
test
xlat
call
fbstp
jno
orl
jbe
push
push
xlat
and
inc
sarl
or
icebp
mov
sub
cld
sbb
cmp
outsb
pushl
jbe
adc
mov
imul
aaa
pop
sbb
mov
out
xchg
dec
xchg
xchg
mov
pusha
aad
dec
lods
mov
and
movsl
arpl
pop
cmpsl
addb
mov
xor
fisttps
mov
into
insb
daa
mov
mov
outsb
push
push
inc
imul
pop
movsl
sub
outsb
jo
orl
fdivl
bound
shlb
pop
fcoms
xchg
adc
insb
mov
clc
jle
adc
adc
outsb
mov
jns
xchg
test
lods
cmp
inc
sbb
xor
pop
imul
adc
orl
mov
push
jne
inc
push
into
sbb
aad
movsb
fists
mov
mov
sub
adc
gs
add
mov
adc
in
not
dec
frstor
jge
out
or
cmc
push
ljmp
icebp
les
inc
dec
ja
fcoml
or
sub
push
jns
mov
pop
icebp
roll
xor
out
sbb
fcmovnbe
sbb
testl
rorb
flds
mov
insb
xor
lahf
mov
imul
aam
popa
mov
sbb
fisttpl
pop
mov
enter
out
lds
shll
or
mov
in
rol
xor
pop
in
in
cmpsb
xor
and
cmp
test
loope
inc
jmp
mov
test
mov
inc
mov
xchg
movsb
sahf
hlt
ds
ss
sarl
inc
lock
ljmp
outsl
mov
pop
stc
les
rol
lods
jmp
xor
scas
aam
pop
pushf
and
outsb
iret
test
insl
or
mov
iret
icebp
imul
sbb
sbb
stc
es
loop
xchg
adc
sbb
in
xlat
movsl
or
pop
mov
rclb
dec
push
cmp
fistl
mov
and
inc
sub
ret
mov
arpl
test
dec
inc
push
stc
lret
push
push
jl
cmp
or
mov
or
jns
mov
adc
insl
lea
pop
dec
jg
pop
xchg
jecxz
mov
and
or
xor
pop
arpl
sahf
add
cmpl
fs
shll
jne
mov
je
cli
fcoml
std
rclb
jl
mov
add
xchg
jns
enter
and
jmp
lret
xchg
xchg
fsubrs
or
pop
sbb
imul
push
push
xor
mov
loope
leave
push
lcall
das
pop
orl
loop
popa
push
mov
cmpsl
mov
xor
repz
outsl
pushf
ja
inc
adc
int
pop
aas
in
call
jge
enter
mov
inc
and
xor
add
clc
loop
or
jns
movsl
sub
scas
and
xchg
mov
int
mov
testl
jno
xor
push
jae
je
sub
mov
lret
testb
imul
add
mov
sbb
or
sub
aam
xor
pop
mov
push
pusha
or
push
pop
fisttpl
sub
f2xm1
xor
and
cwtl
stos
dec
insl
sbb
or
aaa
movsb
lock
pop
out
jmp
xor
pop
fcoml
push
inc
and
lock
aad
mov
xor
fstl
orb
sub
aaa
divb
xor
shll
outsl
lcall
movsb
daa
test
lahf
jp
push
jle
sbbb
or
sbb
mul
xchg
in
jle
test
imull
jnp
xchg
cmp
int3
add
mov
je
sbbb
jo
lds
stos
jecxz
loop
cwtl
idiv
enter
loop
push
repnz
inc
pusha
jmp
js
lods
dec
aas
sti
fcmovne
inc
enter
aaa
dec
jle
adc
push
ss
cmpsl
and
or
cmp
mov
rol
xchg
push
in
cmc
sub
int
xor
mov
xchg
push
sub
out
or
xchg
mov
mov
in
cmpsb
sub
pop
mov
mov
mov
gs
stos
mov
mov
add
xchg
mov
add
cmc
dec
hlt
test
sbb
or
lret
pop
push
inc
and
lea
pop
data16
loope
or
adcl
call
push
jmp
adc
mov
jo
stos
push
enter
mov
push
push
arpl
dec
jmp
cmpsl
fbstp
popa
adc
aaa
ss
sarl
les
out
stos
ds
nop
mov
pop
mov
push
xchg
jle
dec
fwait
je
mov
loope
pusha
jmp
adc
or
jecxz
fcompl
pop
les
pop
ret
faddp
lock
repnz
out
call
xor
jle
in
testb
repz
cmpsl
add
add
sbb
push
pushf
les
roll
mov
sarb
repnz
into
inc
outsl
lcall
cmp
sar
adc
jl
jno
movsl
bound
gs
jae
lcall
xchg
filds
push
sti
dec
shll
jb
enter
cmc
adc
and
or
mov
add
xchg
lea
lock
stos
cmpsb
mov
mov
cmp
clc
sbb
test
ficoms
adc
jecxz
pop
into
inc
cmc
sbb
out
dec
pop
and
out
out
je
adc
mov
outsb
dec
xor
mov
dec
jmp
jp
cli
pop
or
mov
and
sub
cs
aam
and
faddl
pop
shr
shrl
xchg
repz
sub
call
mov
pushf
aaa
sbb
cmp
mov
adc
cwtd
or
sbb
xor
icebp
xor
xchg
stc
mov
or
pop
sub
aaa
adc
jo
adc
cmp
dec
xor
popf
ds
aam
push
mov
in
sbb
mov
sahf
js
lret
pop
sbb
sti
push
movsb
mov
popa
jbe
clc
inc
repz
ss
mov
add
movsb
sahf
or
sub
sub
inc
xchg
push
iret
lea
fcomps
mov
dec
icebp
inc
ret
xor
idivl
pop
xchg
in
or
popa
add
sub
xchg
mov
dec
pushl
testb
add
addl
xchg
push
jge
xchg
jns
adc
outsl
inc
or
fcmovbe
and
dec
mov
push
adc
mov
sbb
dec
inc
faddp
cs
dec
xor
dec
push
lret
jno
fwait
push
push
das
nop
icebp
jmp
movsl
dec
ds
mov
and
jnp
mov
adc
call
sahf
sahf
or
jg
aad
cmp
push
fildl
xor
jb
xorb
popf
add
jb
inc
mov
jmp
int
test
mov
jns
cld
mov
insl
xchg
dec
fucom
xor
out
mov
stos
cs
inc
popa
add
mov
test
stos
jge
mov
lcall
dec
hlt
xor
fs
scas
ja
nop
push
in
mov
out
sahf
cmpb
cld
imul
pop
clc
in
cmc
pop
push
pop
push
jbe
mov
mov
in
push
fs
and
jbe
imul
dec
mov
mov
sbb
into
mov
out
lret
movsb
jb
and
fyl2xp1
gs
xor
lds
pop
mov
aaa
call
ret
lods
mov
scas
lods
mov
xor
mov
xchg
cwtl
mov
cmpsl
cwtl
inc
sub
fistl
scas
sahf
adc
addb
mov
inc
dec
push
stos
pop
int
scas
jl
xor
cmp
leave
pop
fdivl
push
cmp
stc
xor
dec
mov
mov
clc
leave
into
divb
cld
push
call
mov
fstpl
jle
inc
xchg
jge
sbb
leave
lock
insl
addr16
repz
inc
and
cli
push
pop
lret
daa
adc
call
xchg
jo
imul
inc
and
jno
inc
pop
sub
ss
sbbb
ja
stc
or
mov
push
call
js
or
lods
sti
cli
pop
lock
xor
dec
sub
out
loop
insb
ss
inc
cmpb
insl
pop
push
cs
and
fsubp
cmp
jae
jno
fidivl
les
hlt
push
out
addl
scas
fistpl
lods
pop
cmp
mov
mov
lea
jge
pop
mov
bound
insb
jmp
pop
or
cli
cs
inc
cmc
jns
shrb
push
jne
jns
cmp
lcall
mov
in
sbb
mov
cmp
xchg
loope
popf
mov
inc
inc
lret
scas
adc
lods
das
sub
add
jmp
add
sbb
ret
mov
lds
xchg
call
repnz
pop
fisttps
mov
fstl
lea
push
std
dec
xchg
lret
cmpsb
cmpsl
xchg
xor
clc
cwtl
mov
xlat
push
adc
fucompp
mov
pop
mov
fmul
add
aaa
mov
mov
xchg
sub
std
push
nop
imul
stos
std
inc
dec
jp
daa
sub
fcmovb
cmp
or
sbb
dec
or
push
adc
jmp
mov
mov
sub
ja
sub
sub
sbb
xchg
aas
mov
bound
sbb
mov
lret
xor
cmc
imul
lahf
shll
inc
dec
mov
in
mov
in
das
mov
sub
push
movnti
out
lds
leave
sub
push
sbb
rcl
and
call
adc
xchg
mov
add
aas
or
push
push
and
popf
cmpsl
clc
mov
andl
xchg
add
mov
pop
push
scas
xchg
add
mov
push
out
scas
mov
lds
icebp
pop
stos
push
cmp
leave
jnp
shl
cmp
es
inc
mov
hlt
insl
insb
jmp
xchg
stos
fnstenv
sub
mov
sbb
push
push
leave
popf
cmpb
stos
mov
sbb
sbb
add
adc
dec
movl
cmp
jle
xchg
mov
xor
jp
xor
adc
les
imul
lahf
fidivl
lret
lods
mov
int
hlt
ja
rcr
push
mov
mov
decl
add
push
scas
cmp
jnp
pop
cmpsb
int
inc
loopne
sbb
mov
jl
jo
popl
or
incl
out
jmp
mov
lret
sbb
push
data16
dec
mulb
mov
pop
fstps
fmuls
int3
mov
mov
mov
xor
ret
push
push
call
cmc
test
jns
addr16
push
in
inc
mov
cltd
pop
lahf
adc
pop
jbe
jbe
aad
push
or
adc
neg
inc
pop
cmp
jne
popf
mov
inc
sbbb
add
aad
adc
add
rcrl
aad
sarb
sbb
inc
sub
sbb
dec
shlb
add
jae
inc
out
leave
repz
stos
rol
fisubrl
pop
ds
pop
sub
fdiv
sub
popa
daa
cmp
outsl
loopne
movsl
and
add
loope
add
fisttps
xor
rorb
mov
lahf
insl
roll
jbe
mov
dec
mov
pop
pop
in
out
mov
push
sub
dec
fsts
adc
mov
lods
jle
sub
xor
out
imulb
sahf
adc
jp
cmp
cmp
jo
mov
mov
dec
pop
fs
sbb
repz
cmp
and
push
mov
mov
mov
cmp
push
lahf
jo
jae
inc
fisubs
outsl
adc
fistl
loop
xlat
shlb
inc
mov
cmp
lcall
jae
pop
es
sub
notl
and
fucomi
push
cmp
cmp
lods
enter
mov
aad
cld
stc
ret
into
fs
leave
or
inc
loopne
fs
inc
inc
lret
scas
adc
xor
out
shrl
or
rorb
mov
sahf
mov
sub
mov
pop
fs
insl
stos
je
xchg
sahf
sbb
in
fs
mov
fs
pushf
lods
push
add
je
pushf
jecxz
hlt
xor
pop
cli
fnstenv
sbb
fstpt
pusha
les
outsb
scas
jmp
loop
adc
jp
daa
nop
bound
sub
pop
das
or
call
mov
cmp
dec
or
ljmp
inc
inc
cmpsl
scas
popa
cmp
push
arpl
sti
fbstp
pop
jo
jae
dec
xchg
jae
inc
in
aaa
mov
les
sub
push
dec
ljmp
movsb
movsb
jmp
gs
decb
addr16
les
push
in
lods
stc
push
xchg
call
cmc
fdiv
xor
cmpl
sti
jle
mov
xor
testl
or
adc
test
neg
mov
in
and
lea
xchg
mov
xlat
cmpsl
sahf
xchg
popa
in
push
sub
jmp
add
ja
fimuls
std
sbb
leave
jmp
mov
sahf
mov
fcompl
icebp
sub
loopne
add
in
or
sbb
xor
rolb
add
out
bound
arpl
lcall
adcb
pop
fucomi
cwtl
inc
cmp
sbb
add
mov
sub
in
int
hlt
clc
bound
push
rcrb
dec
pop
and
pop
add
inc
pop
sub
push
sbb
and
push
mov
pop
shrb
jne
lret
mov
xor
aad
push
movb
dec
cmp
lcall
inc
cmc
sbb
jmp
adc
adc
addr16
jle
jg
push
mov
ja
sub
nop
xor
imul
int3
out
fwait
xchg
loope
fildll
mov
mov
push
and
fwait
out
inc
movsl
or
mov
push
mov
fwait
clc
sahf
test
sbb
sub
jb
xor
ss
dec
data16
cmpsb
add
or
adcl
pusha
push
mov
lret
push
sbb
dec
and
js
sbb
aaa
fnstcw
sbbb
jb
pushf
lds
jne
gs
cmp
icebp
xchg
jle
fcom
rcrb
mov
roll
js
repz
lods
inc
push
loope
sarl
popa
loopne
ror
rcll
or
push
push
push
daa
mov
loope
call
or
lods
sbb
or
mov
adc
push
icebp
mov
add
jo
inc
sub
out
idivl
pop
ds
mov
push
xchg
dec
push
mov
repnz
mov
shl
fidivs
ja
addr16
adc
xchg
fcompl
pushl
jbe
jae
es
in
mov
mov
das
or
into
in
push
push
add
test
mov
and
add
cmove
pop
adcl
push
jnp
adc
popa
mov
pusha
sahf
mov
adc
sub
ret
push
inc
in
insl
mov
jns
stos
adc
jo
pop
inc
xchg
jg
inc
nop
xchg
mov
jo
lock
sbb
sub
and
or
cs
shll
and
loopne
mov
xor
js
pcmpeqw
push
scas
jae
aas
scas
mov
mov
cmp
xchg
das
data16
xchg
movsb
test
int
xor
fisubrs
jle
mov
xor
xchg
ja
loopne
ja
aaa
and
push
out
mov
xor
jg
dec
push
hlt
frstor
jnp
and
je
std
sbb
mov
push
jb
ficoms
cwtl
pop
fsubs
mov
iret
je
rorb
dec
xchg
jp
and
scas
push
test
clc
std
push
push
xchg
push
incl
xor
mov
jb
imul
cltd
jns
or
aas
sub
pop
xchg
inc
test
and
mov
xchg
xor
adcb
jns
call
cmp
movsl
sub
cmpsl
mov
iret
lcall
push
inc
lods
adc
dec
xchg
inc
fdivrl
jmp
or
jp
pop
mov
sbb
adcl
test
aas
cmp
add
loop
mov
aaa
lock
call
lret
pop
jo
loopne
mov
ljmp
jno
mov
in
mov
and
in
cltd
or
xor
in
inc
xor
out
xor
inc
data16
pop
and
push
add
addr16
cmp
push
xchg
adc
cmp
loop
in
cmpsb
mov
cld
mov
outsl
loope
add
inc
mov
jl
lea
je
mov
cmp
jo
leave
jns
xor
cmp
jnp
int3
xchg
sti
lea
lret
sti
cmp
and
or
leave
arpl
lret
mov
jbe
xchg
mov
add
stos
insb
lds
stc
lea
in
mov
int3
stc
add
dec
sub
mov
insb
adcl
jb
cmp
pusha
or
xchg
aad
ret
cmp
mov
jecxz
jp
adc
shll
mov
dec
js
std
fwait
cli
xor
addr16
popa
and
rolb
adc
icebp
jmp
clc
pop
or
mov
bound
nop
and
les
movsl
and
js
adc
xchg
adc
push
dec
jge
push
cwtl
mov
leave
mov
and
xchg
test
hlt
fistps
int
sub
xchg
push
jl
xor
ret
cltd
cmp
loope
call
add
pusha
xlat
mov
add
sub
lods
sbb
repnz
call
cmp
add
lds
sbb
jmp
or
shlb
out
push
mov
insl
mov
cli
fwait
int
out
aad
scas
add
xchg
mov
imul
pop
mov
xchg
jno
push
sub
cltd
cmp
lahf
lret
addl
add
je
outsb
loope,pn
push
aaa
subl
sbb
sub
aas
jecxz
aaa
dec
add
mov
push
roll
sub
sbb
inc
cltd
cs
xor
add
inc
fdivs
dec
insb
ja
dec
or
pop
sub
dec
es
pop
call
dec
xlat
arpl
push
mov
push
je
mov
push
into
jne
int3
mov
cmpsb
leave
xchg
sbb
imul
pushf
lcall
add
xor
loopne
mov
push
push
fisttpl
insb
pop
cmp
mov
xchg
cmpsl
cwtl
lcall
add
divl
push
scas
bound
xchg
and
jnp
les
add
test
fildll
fs
movsb
mov
dec
cmp
shlb
jnp
ja
aad
mov
inc
jg,pt
lods
dec
mov
sti
xlat
shll
and
jp
mov
xchg
imulb
push
lret
fsts
sti
adc
mov
loope
test
popf
dec
sub
inc
cs
popf
jo
out
testb
loope
loope
jge
mov
jae
sarl
out
jbe
clc
sub
jbe
pop
subl
and
cmp
push
cltd
aam
push
or
add
scas
xor
inc
ljmp
push
xchg
std
jl
inc
testl
jp
jg
sbbb
xchg
cwtl
pop
sub
xchg
loope
adc
sub
cmp
mov
ss
xor
icebp
dec
inc
scas
sub
cld
jp
lcall
out
pop
dec
ss
push
xchg
cmpsb
mov
push
call
mov
xchg
mov
dec
mov
inc
leave
aad
leave
pop
and
push
cmc
fidivs
push
js
call
sub
out
pop
mov
addr16
jmp
mov
mov
out
sti
and
ljmp
out
mov
jmp
xchg
mov
pop
loop
xchg
jmp
leave
call
mov
lods
out
push
fisubrs
push
mov
pop
popf
out
push
fisttps
sbbb
dec
cmp
ss
lods
and
inc
push
add
mov
stos
xor
jecxz
add
mov
add
sbb
outsl
imul
jmp
xlat
cmp
or
cmpsl
movsb
movb
mov
cld
mov
cvttps2pi
jo
sbb
xchg
sbb
lods
in
push
mov
cli
gs
mov
and
stc
iret
lcall
enter
sub
das
mov
pusha
cs
ljmp
cmp
jl
ljmp
adc
push
js
ds
mov
out
or
mov
insb
push
into
test
xchg
in
lret
dec
push
jnp
add
cmc
fldl
fldenv
sbb
sub
push
int3
xorl
xorl
fidivl
xor
cmp
test
cli
jne
into
adc
mov
imul
lcall
aad
dec
lods
mov
call
hlt
mov
lea
ret
stos
and
test
push
out
cmp
lahf
movsl
sti
outsl
data16
mov
xchg
outsb
jecxz
test
cmp
inc
and
sbb
out
enter
ret
mov
adc
into
lock
xchg
testb
add
aad
in
leave
clc
xor
xlat
fcoms
adc
mov
jns
or
inc
xchg
sub
inc
mull
jle
repz
popf
push
loop
jmp
je
xor
cld
jp
mov
cmp
lcall
popf
or
and
mov
into
mov
add
and
ljmp
dec
add
fimull
push
mov
xchg
and
lods
rorl
loopne
sub
mov
arpl
inc
daa
push
iret
push
cld
sbb
movsb
cmp
cmp
mov
cmp
cmp
xchg
lret
lret
xchg
out
stos
test
aaa
jno
loop
fcoml
mov
cmc
fsubrs
mov
pop
int3
fadds
or
pop
hlt
push
adc
fwait
mov
xchg
out
jae
sbb
sbb
rclb
loope
push
sbbl
sub
adc
mov
aam
sti
dec
push
in
add
jno
mov
pop
sbb
pop
push
mov
in
jmp
cmp
mov
adc
inc
xchg
inc
fcmovnu
inc
aas
les
and
rcrl
push
cmp
nop
nop
xlat
push
ret
mov
inc
pop
jp
push
xchg
movsl
add
fwait
add
xchg
and
lcall
push
jg
adc
adc
int
cs
jne
in
movsb
sub
mov
pop
add
outsb
out
xchg
xchg
cmp
push
mov
jmp
js
adc
adc
movb
outsb
bound
icebp
rclb
mov
cld
in
xor
adc
cmp
xchg
push
xor
mov
jb
jnp
rol
sub
add
subl
dec
fs
push
insl
inc
push
xlat
cmpsl
scas
cmc
jnp
shr
ffreep
mov
outsl
movsb
ret
arpl
sub
push
cmpsb
test
test
push
jae
mov
loopne
or
popf
cmp
test
mov
pushf
xor
inc
dec
jb
cld
push
testb
adc
push
ss
fs
sbb
popa
test
jecxz
adc
mov
iret
lds
push
jle
mov
das
test
mov
cwtl
xchg
xchg
ret
fucomip
and
or
push
jecxz
lahf
dec
xor
lods
dec
neg
scas
xlat
scas
lahf
and
je
sub
cwtl
out
inc
rorl
cltd
add
loope
imul
lods
addr16
outsb
sarb
stc
aad
xchg
imul
mov
in
outsb
hlt
mov
cmc
gs
cmc
iret
inc
xchg
push
adc
imul
add
and
dec
push
sub
sub
mov
add
xchg
in
clc
ud2
imul
inc
mov
rcrl
lods
les
jle
loopne
push
jge,pt
sbb
rsm
mov
sbb
clc
clc
inc
in
iret
push
mov
mov
dec
sub
stos
aad
mov
sti
cmpsl
popa
imul
push
push
mov
sbb
mov
test
sub
push
inc
popa
mov
cmpsb
cmp
jp
call
icebp
jno
push
jbe
sbb
loop
sub
mov
outsl
movsb
add
and
dec
cmc
aas
shl
push
sahf
fldpi
jecxz
stc
fwait
mov
bound
subl
mov
mov
lret
js
js
aas
mov
sti
push
xor
mov
outsl
lret
push
icebp
addb
dec
std
pusha
push
fists
xor
hlt
popa
out
jge
push
jb
lods
ljmp
fsubr
les
lahf
test
xchg
jno
push
sub
bnd
push
sbb
jecxz
loopne
ds
and
outsb
push
lock
popf
aas
call
repnz
fwait
mull
xor
adc
cmp
xor
dec
loope
cmc
cli
imul
sbb
inc
pop
mov
imull
cmp
fwait
add
lods
sub
mov
frstor
xlat
or
dec
frstor
enter
inc
loope
jg
adc
sbb
dec
mov
movsl
add
cli
xchg
mov
and
scas
or
nop
test
add
mov
ret
dec
je
inc
and
inc
fmull
or
pop
test
scas
lock
jbe
push
inc
fsub
cs
jo
movsl
inc
jae
sbb
mov
ljmp
jnp
je
xchg
ss
add
stc
xchg
fsubrl
jne
adc
pop
lods
xchg
int
insb
pop
addr16
sarl
icebp
aam
pop
mov
push
and
aam
ja
sbbl
fadd
add
mov
call
fisttpll
sbb
loope
lcall
inc
scas
rcll
leave
mov
adc
mov
xor
push
fwait
jnp
push
jns
jp
dec
xor
ja
jge
xor
xor
push
sbb
sub
rol
pushf
call
xor
ficompl
jb
ss
adcl
pop
adc
push
ret
jecxz
les
adcl
xchg
aaa
inc
outsl
mov
popa
mov
push
je
mov
rorl
outsl
xchg
sub
rorb
pusha
sub
ficoms
jb
and
jmp
dec
sarb
pop
in
sar
pop
loop
ret
sub
imul
in
scas
lods
or
int3
cmpsl
mov
xorb
xchg
xchg
inc
mov
pop
push
hlt
out
push
pop
sbb
les
sub
aad
mov
adc
repnz
sub
mull
ljmp
inc
mov
mov
cmp
jmp
jl
pop
mov
sbb
ljmp
inc
jno
lcall
inc
sbb
iret
fimull
je
std
leave
cwtl
fwait
mov
xchg
sbb
in
out
cld
xchg
push
f2xm1
fisttpll
imul
in
sbbl
or
xor
mov
inc
mov
add
xchg
test
out
outsl
inc
jae
and
fidivl
add
add
and
sbb
fiadds
popa
mov
test
push
pop
cli
dec
push
fimuls
test
repz
xor
and
dec
xchg
jae
stc
int3
int3
incl
mov
and
stos
vpmacssdd
leave
push
ret
cs
mov
mov
mov
icebp
stos
push
mov
aas
push
inc
xor
insb
aad
ja
mov
outsl
inc
mov
hlt
adc
cld
lock
enter
lret
lcall
xchg
call
mov
pop
lcall
cmc
ret
fdivrl
movsl
adc
mov
std
icebp
pop
pcmpgtd
mov
mov
xchg
sub
insb
int
fisubrl
lahf
xchg
lret
push
or
scas
pusha
jmp
out
push
jg
push
mov
pop
js
inc
out
dec
inc
iret
xchg
outsl
or
test
aas
inc
xor
cmp
inc
fistl
dec
add
and
fisubrl
test
inc
fnstcw
pop
dec
sub
leave
in
adcl
test
test
test
test
mov
in
or
dec
aam
push
dec
ror
adc
mov
sti
nop
mulps
inc
mov
insb
xorb
add
lret
ljmp
adc
xor
rcll
lds
shr
jbe
in
fwait
mov
jp
lods
cs
push
aad
sbb
rcll
and
sub
sub
xor
test
js
stc
sbb
lret
gs
mov
pop
test
and
xchg
enter
idivl
fs
mov
lods
xchg
dec
scas
enter
lahf
jnp
ret
and
xor
cmp
cmp
jnp
mov
push
daa
cltd
test
js
dec
and
out
add
out
outsb
sub
fcmovnb
adc
push
sub
aad
sahf
ret
fsts
jl
sub
xor
jb
fdivrl
mov
cli
xor
or
add
mov
rol
out
mov
and
stc
aas
jg
or
jmp
movsb
xchg
gs
sbb
repnz
cmp
mov
sub
stc
jmp
cmp
cmpsl
imul
rorl
push
cmp
int3
sub
das
xchg
mov
mov
hlt
inc
movsl
pop
add
or
push
pop
add
enter
scas
add
and
data16
in
mov
in
dec
lret
inc
out
mov
lods
and
popa
mov
dec
sub
push
xchg
mov
js
out
mov
xor
ret
js
xor
dec
inc
push
lahf
loop
jg
xchg
mul
es
fnstenv
inc
sarb
mov
xchg
mov
add
leave
ds
mov
sbb
loop
push
cmp
ds
mov
leave
fsubl
xchg
xchg
repz
jb
sti
orb
stos
stos
pop
sbb
lock
adc
cmpsl
out
lds
add
jnp
or
pushf
repz
adc
int3
add
mov
jmp
xchg
cmpsb
and
addr16
orb
or
xor
xor
push
fistl
sbb
mov
fcompl
push
adc
ret
xchg
jne
ss
and
in
cmp
icebp
xchg
pop
mov
xlat
pop
popa
aam
inc
repnz
and
mov
mov
bound
stos
ds
cmp
sub
lods
add
cmc
sub
xor
adc
lret
mov
pop
cmpsl
add
push
add
inc
in
insl
shr
mov
cmpsb
es
daa
jmp
mov
call
fdivrl
shrb
dec
pop
nop
or
movsb
cwtl
into
inc
jecxz
push
jg
je
idivl
jl
jo
sarb
leave
leave
insl
addr16
das
adc
jbe
push
mov
je
ja
dec
cwtl
and
jns
inc
add
movsl
int3
and
outsb
sti
sbb
adc
jo
sarb
sub
push
dec
adc
dec
and
push
fbld
fsts
mov
sbb
sub
ljmp
cs
dec
scas
test
mov
inc
fidivs
pop
movsb
ljmp
mov
xor
push
es
sub
lcall
out
leave
mov
inc
mov
jae,pt
fwait
inc
enter
iret
or
ret
mov
stos
and
lcall
movsb
nop
push
movsl
daa
scas
adc
mov
xor
imul
pop
jl
loope
clc
sbb
or
and
clc
pop
add
clc
and
sbb
xor
cmp
shlb
pop
jg
adc
pop
add
push
fists
test
das
sbb
nop
dec
xchg
cmpb
push
lcall
imul
push
addr16
adc
test
push
xor
addl
std
cmp
xor
xor
xadd
xchg
push
sbb
lahf
xchg
lahf
sahf
xchg
jo
cmp
pop
data16
sub
test
ret
mov
nop
push
add
pop
fs
mov
cmpsl
jae
or
inc
adc
cmp
mov
nop
fs
inc
js
out
aam
push
sar
fimuls
xor
xchg
std
fnstenv
repnz
dec
insl
aad
push
outsb
sub
adc
imul
out
cld
inc
inc
mov
aas
mov
or
pop
ss
lods
mov
sar
inc
jecxz
nop
dec
cmp
push
xchg
mov
pop
stc
into
mov
rolb
inc
push
jne
leave
out
das
and
dec
les
pushf
dec
scas
xchg
dec
scas
xor
adc
sbb
xchg
addr16
in
xchg
addr16
cmp
int
lods
or
pop
xchg
data16
pop
lret
hlt
sub
inc
inc
mov
movsb
movsb
mov
mov
push
push
sbb
jbe,pt
out
xchg
les
adc
lock
or
sbb
or
out
push
jmp
cwtl
inc
in
lcall
or
sarl
aaa
bound
fwait
lahf
aas
aam
loop
mov
pop
lret
push
adc
leave
hlt
xchg
mov
mov
movsl
adc
sahf
icebp
jge
iret
lret
pop
mov
outsb
sti
pop
xchg
dec
fwait
popa
js
pusha
xchg
or
and
lods
cld
pop
inc
inc
lea
adc
les
stos
dec
adc
and
loope
rorb
rolb
popf
mov
xchg
adc
test
int
xchg
fldenv
pushf
pop
adc
ret
sti
mov
lcall
lcall
stos
push
add
inc
mov
cmp
adcb
inc
lret
cs
pop
adc
call
xor
movmskps
inc
adc
sbb
mov
push
pop
xor
and
stos
sahf
add
add
insl
adc
jnp
iret
add
cmpsb
xor
repz
subl
add
jns
stos
iret
jmp
pop
mov
adc
daa
jp
in
mov
lret
add
lock
and
jecxz
adc
lea
pop
mov
and
cmpsl
sti
ret
dec
pop
xchg
cwtl
scas
jns
pmaxub
cmp
mov
xchg
or
jns
pop
jbe
jg
pop
inc
daa
jge
out
adc
loop
cltd
js
imul
jb
jno
lret
pop
sub
pop
ret
push
jg
ss
sbb
xchg
sub
lcall
jle
xchg
sti
ja
out
xchg
inc
mov
repz
lret
cli
push
shrb
push
add
test
jb
cwtl
inc
les
xorb
in
xchg
rorb
jae
shrb
push
adc
push
or
aam
mov
add
add
outsb
dec
jno
xor
ret
int3
scas
scas
cmp
sti
xor
fsts
lret
shl
jbe
or
pop
sbb
mov
arpl
xchg
fcmovnbe
orb
insl
repz
xchg
ds
out
inc
mov
es
enter
aam
xor
es
mov
shlb
and
not
jne
jns
xor
loop
aaa
stc
xor
cmpsl
sub
inc
xor
jecxz
fcmovu
jmp
sti
shlb
leave
push
jnp
and
push
adc
test
aas
mov
sub
push
push
cmp
clc
das
fadds
xor
ret
xchg
xor
jne
std
dec
mov
inc
and
xchg
repz
mov
push
insl
pop
insb
je
rcrb
pop
xlat
in
xchg
xorl
into
inc
sbb
fnstenv
push
std
out
fs
mov
mov
in
popf
xchg
call
pop
andb
cmpsl
scas
pushf
icebp
cmp
sbb
mov
pop
pop
jbe
insl
shlb
fscale
fdivrl
repz
push
repnz
sbb
ja
rcll
insl
mov
pop
and
iret
and
repnz
inc
mov
ss
push
jg
xor
jo
notb
sbb
ret
arpl
repz
repz
lret
stos
repnz
sbb
aad
mov
fildl
cmp
ljmp
cmp
shrb
es
outsl
popf
xor
push
pusha
mov
xor
add
inc
aaa
mov
ljmp
imul
lret
xchg
es
mov
sahf
mov
stos
stc
cmpsl
and
mov
repz
inc
or
out
ss
faddl
cs
cmc
aam
mov
pop
mov
mov
imul
in
mov
sub
cmpsl
test
movaps
lcall
xchg
mov
cltd
lcall
add
dec
inc
outsl
lahf
negb
dec
push
in
xchg
sahf
mov
pop
ss
adc
fwait
jecxz
cmp
repnz
push
fcom
enter
or
xor
cmc
inc
push
shrl
int
dec
loope
out
pop
dec
arpl
fcompl
xor
jmp
and
mov
ret
hlt
pushf
mov
outsl
movsl
sbb
mov
mov
mov
loope
aad
sub
in
fiaddl
push
int3
rcl
or
dec
push
xor
out
dec
sub
jnp
ljmp
data16
sti
nop
jl
inc
dec
cmp
lock
add
inc
inc
push
xchg
or
insb
loopne
mov
and
cs
pop
xor
mov
jle
ljmp
clc
sub
popf
fimuls
adc
test
add
cld
or
mov
cmp
xor
xor
leave
popf
mov
stos
sub
xor
test
mov
jns
cltd
pop
sbb
insb
lcall
or
push
and
inc
or
mov
push
aas
add
sahf
pop
sub
jne
cltd
push
pop
mov
ja
enter
ret
lahf
inc
xchg
aaa
or
pushf
cmp
mov
sub
test
lret
inc
sub
out
enter
xchg
lahf
lcall
xacquire
xor
or
stos
push
mov
ret
lods
or
fld
movsb
pop
into
ljmp
pushf
ss
out
into
leave
mov
jnp
jbe
cld
xlat
js
inc
in
cmp
xor
sub
mov
mov
mov
loopne
fidivs
adc
clc
loop
push
loope
push
in
cltd
xchg
lock
out
fdivr
aaa
adc
sti
mov
xchg
mov
sbb
das
les
filds
loope
ljmp
or
dec
dec
xor
push
clc
cli
push
xor
and
orb
mov
jmp
out
xchg
lahf
push
push
idivl
out
jle
sub
clc
into
pusha
xchg
daa
mov
jecxz
and
cltd
mov
jnp
popa
pop
sub
lea
xor
call
loopne
les
leave
or
pop
in
jle
in
cld
mov
jl
fwait
sub
fs
cmpsl
xchg
dec
mov
push
les
mov
jle
and
dec
pusha
cmp
sti
hlt
aad
add
call
lock
call
daa
inc
dec
dec
jb
xchg
sar
xchg
loop
add
lods
dec
jns
stos
out
jmp
repz
cmpsl
adc
popa
cmp
pop
cwtl
fstpt
icebp
cmp
push
notb
pushl
sbb
mov
ret
les
mull
cs
add
jmp
sbbl
movsb
mov
sahf
mov
ss
mov
movsl
lcall
xor
pop
mov
mov
push
shl
dec
pop
lea
in
pop
cmpsb
cmpsb
xchg
mov
jmp
or
scas
cmpsb
repnz
aaa
xchg
shl
dec
sbb
scas
test
mov
add
xor
test
xor
hlt
jle
add
mov
into
movsb
ja
ret
imul
lret
sub
mov
mov
es
lahf
das
bound
cmc
int
push
mov
rolb
xchg
aas
ljmp
jle
jno
adc
xor
sbb
xchg
gs
mov
add
shrl
xor
ret
lea
xor
mov
mov
incb
jae
jle
mov
lods
or
sbb
out
jmp
incb
data16
popa
pop
lea
sti
adcl
xor
and
add
sub
cmc
and
rcll
push
lret
addb
js
and
lret
jp
pop
aaa
stos
scas
lods
test
out
lds
pop
mov
cli
js
sub
loope
jae
clc
inc
jne
mov
movsb
and
frstpm(287
push
mov
push
and
in
imul
xor
jmp
shl
popf
jmp
into
cmpl
inc
outsl
shl
jl
jbe
popf
inc
shrl
push
sub
push
jl
in
or
xchg
and
and
inc
stos
xchg
es
adc
mov
lods
add
call
push
sub
xchg
mov
mov
xor
mov
lds
push
ds
xor
ret
insb
rcl
repnz
inc
ja
test
out
fcmovnu
fildll
aas
lahf
and
xchg
adc
and
jo
pop
sub
push
jp
lret
jge
pop
push
cli
xchg
fidivrs
in
imul
add
repz
adc
das
jl
mov
and
xchg
stos
movsb
enter
in
sbb
mov
cmc
ljmp
and
imul
pop
add
jl
push
int3
or
loopne
push
mov
jg
mov
xchg
jns
mov
rorb
and
dec
pop
ja
rcrb
and
xchg
fs
sbb
ljmp
xchg
lcall
push
ljmp
scas
mov
rorb
fcomps
fiaddl
movl
call
sbb
pop
jge
icebp
cwtl
jbe
jmp
xor
lret
mov
fldl
xchg
shrl
jns
iret
test
mov
dec
jno
or
pusha
inc
sahf
mov
mov
mov
sbb
xor
cmpsb
dec
and
movsl
repnz
je
ficoms
out
push
imul
out
add
clc
fcmovnbe
mov
adc
lcall
jns
shlb
mov
sub
push
movsb
hlt
add
push
push
mov
insl
jne
jg
int
ficoms
popf
mov
pop
nop
test
mov
jne
pop
fs
adc
mov
adc
mov
sub
inc
movsl
shll
sbb
mov
fwait
mov
jns
das
push
es
das
fwait
addr16
mov
mov
movsb
std
out
les
xchg
pop
jnp
pop
pushl
es
enter
fistpll
leave
mov
push
push
rcrb
adc
fnstsw
xchg
push
mov
outsl
cmpsb
loop
js
in
pop
and
addr16
pop
loope
imul
xchg
pop
and
clc
lods
pop
std
xorl
mov
jmp
pop
push
sbb
shlb
fimull
pop
mov
mov
mov
lock
jge
icebp
aam
push
pop
fildll
adc
shlb
jnp
insl
mov
mov
pop
daa
push
fimuls
sbb
xchg
imul
xor
pop
mov
out
fnstcw
jo
push
ja
lds
out
sub
loopne
jle
sub
dec
jle
xchg
loopne
dec
ja
popf
adc
fs
loope
gs
dec
jnp
dec
ss
pop
ret
mov
mov
jne
add
and
dec
mov
sub
mov
and
dec
out
mov
push
leave
inc
lcall
xor
insl
outsl
cmp
ljmp
push
and
mov
bndldx
loope
mov
movswl
xchg
mov
adc
aaa
inc
dec
push
jl
push
push
xor
jmp
inc
mov
ja
mov
scas
cmp
faddl
sahf
and
fcompl
fidivrs
sub
push
es
rclb
aas
push
movsl
call
pop
in
sbb
push
fimull
insl
test
pop
lods
in
xor
imul
and
je
stos
cmp
test
cs
inc
and
push
xor
rolb
adc
leave
sbb
mov
js
loopne
add
and
fnstcw
loope
repnz
sub
movsb
subl
mov
shl
inc
xor
and
lret
das
xrelease
mov
jp
jbe
jmp
add
dec
jl
pop
inc
xchg
rorl
hlt
dec
stos
push
data16
mov
std
pop
jp
repnz
pop
bswap
jbe
mov
mov
lods
movsb
aas
and
push
pusha
mov
or
loope
jb
lods
adc
inc
lret
jecxz
lahf
cmp
pop
dec
xchg
cltd
cmpsl
inc
sbb
test
push
cmpsl
mov
movsb
adc
fcoms
lods
decl
notl
in
hlt
icebp
ss
xchg
push
out
popf
mov
mov
incb
dec
sub
insl
cs
or
adc
xor
and
out
into
push
mov
jae
sbb
xchg
ljmp
mov
push
nop
pushf
xchg
adc
lahf
sub
roll
in
xchg
pop
aaa
jp
jnp
dec
adc
ss
std
lcall
scas
mov
nop
cwtl
pop
push
jmp
add
mov
enter
jae
add
and
sbb
sub
outsb
outsl
xor
fistpll
jnp
iret
outsl
inc
pop
pop
mov
out
inc
outsl
jb
fwait
clc
jmp
sbb
and
mov
and
insb
scas
scas
movsl
sahf
sbb
adc
scas
push
jo
sub
push
jmp
cmp
mov
dec
jns
cmc
ljmp
ret
std
or
push
sbb
xorl
aad
push
xor
pop
loop
jmp
loop
inc
push
ds
push
add
fwait
and
int
cmpsl
outsb
dec
lods
divl
leave
out
cmpsb
jne
inc
jno
rcll
loopne
xchg
jl
test
fscale
movsl
mov
inc
dec
mov
push
xchg
sub
inc
sbb
shll
adc
mov
add
sub
xlat
repnz
sbb
mov
out
xchg
pop
jl
loop
adc
cmpsl
cmc
inc
or
filds
fsubs
jbe
mov
xchg
lret
sbb
cmpsb
lcall
fdivl
in
lret
xor
xchg
das
lea
sub
imul
std
nop
push
idiv
dec
adc
pop
dec
or
cmp
mov
xor
adc
dec
mov
sub
popf
jae
jg
pop
sub
loop
data16
aam
cmc
popa
xor
add
in
fildl
xlat
dec
add
jg
jmp
jmp
imul
cmp
scas
fsubs
les
int3
xchg
repnz
cmpsb
in
in
jno
dec
lods
into
ret
test
sub
mov
cmc
dec
mov
xchg
sbb
clc
jg
ds
mov
jecxz
xchg
mov
dec
roll
cli
xchg
or
std
jb
loopne
shll
fnstenv
cmp
xor
ret
mov
dec
jne
push
bound
jl
sarl
and
xchg
mov
enter
orl
addr16
mov
ret
mov
xor
dec
fldcw
and
xchg
pop
test
mov
cs
cwtl
ljmp
lock
es
or
dec
out
mov
loope
dec
xchg
test
imulb
insb
movlps
mov
sbb
test
lods
xorb
out
add
pop
dec
push
add
xchg
add
inc
jecxz
cs
sub
mov
inc
jno
inc
jmp
pop
mov
mov
mov
gs
test
push
xor
cltd
xchg
push
jb
pop
mov
fmuls
sahf
lock
jg
rcrb
inc
xlat
ja
sbb
int3
sahf
test
and
add
xor
push
dec
gs
pushf
subb
ret
jo
xor
jno
sbb
lds
jno
insl
std
movsl
imul
ljmp
jge
mull
js
call
mov
in
data16
andb
jecxz
cmp
fistl
mov
or
aad
push
and
fs
arpl
mov
cmp
pop
je
into
cld
ss
sbb
int3
repnz
lods
enter
pop
adc
sbb
sbb
add
inc
divb
push
daa
sub
movsl
push
jo
fs
out
mov
das
inc
adc
out
pop
xorb
movsb
cmp
adc
xchg
adc
ficompl
push
subl
add
dec
xor
adc
jne
push
mov
mov
cmp
mov
aaa
popf
jb
roll
jnp
andl
xchg
clc
dec
movsl
jo
flds
push
lahf
loopne
inc
push
and
jno
lret
push
rol
mov
push
or
repnz
push
jns
iret
mov
aaa
inc
das
and
imulb
lcall
jbe
fld
mov
icebp
popa
push
jg
mov
imul
dec
pop
or
jge
xor
adc
std
mov
jb
inc
loop
fidivrl
jo
push
xlat
movsl
mov
das
clc
gs
test
add
mov
movsl
scas
ficomps
dec
lcall
inc
shrl
mov
cmp
lret
jno
jle
incb
clc
fstpl
add
mov
ret
inc
mov
stos
ja
clc
daa
arpl
cltd
sar
mov
jle
add
pop
faddl
cmpsl
imul
rcr
mov
sbb
mov
push
movsb
cltd
lret
dec
inc
ss
outsb
mov
mov
out
inc
je
jbe
orb
shrb
sub
test
jno
sahf
cmp
sbb
xchg
xchg
jg
jbe
and
ret
fs
ds
repz
push
push
je
loopne
iret
ret
xchg
sbb
ret
sbb
pop
ljmp
xchg
into
pop
pusha
test
push
je,pn
in
dec
mov
cmp
in
clc
sti
mov
mov
lea
test
fcomps
xchg
mov
inc
lea
clc
pop
inc
mov
push
cld
call
and
insl
pmaxub
mov
test
jo
xchg
in
jo
push
push
pop
mov
sub
out
nop
flds
sub
fsubr
cmp
pop
mov
xor
or
into
mov
xchg
outsb
imul
shll
xchg
repnz
mov
jne
push
in
inc
cmp
lret
scas
aas
lea
sarb
mov
mov
adc
lcall
test
pop
fiadds
mov
loope
pusha
jbe
jmp
rcr
or
rorl
mov
popa
sbb
in
sbb
inc
or
pushf
pusha
dec
sahf
lret
cmpsb
pop
or
cmp
pop
add
cmp
mov
mov
mov
incb
nop
sbb
jns
in
add
mov
push
and
xchg
sbbl
pusha
rcrb
inc
cmp
dec
pop
mov
fldt
sbb
mov
xor
and
fwait
and
xchg
std
sti
sbb
and
inc
jp
aas
movsl
adc
in
dec
mov
add
or
cmpsb
stc
sub
jns
mov
inc
pop
fnstenv
adc
fisttpll
and
lock
movsb
or
mov
roll
xor
iret
xchg
dec
ret
aad
outsb
inc
pop
lods
mov
adc
pop
mov
mov
in
inc
enter
mov
movb
mov
mov
repnz
daa
inc
arpl
mov
adc
imul
aad
mov
mov
sbb
inc
and
shlb
mov
jp
loope
rcrl
loop
or
aad
dec
and
into
bswap
sti
push
sti
and
jl
sbb
xchg
daa
jae
nop
xchg
mov
data16
mov
cmpsl
movsl
pop
mov
les
sub
fimuls
push
stos
out
fistpl
and
pop
lock
mov
jb
sbb
dec
mov
test
dec
jns
cmp
xchg
aad
mov
sbb
sub
idivb
int
sbb
xlat
aas
push
mov
fistpl
mov
out
cs
test
ds
push
mov
int3
call
adc
mov
fs
dec
adc
scas
pop
je
xor
inc
dec
je
mov
cmp
adc
mov
mov
mov
xchg
rorl
xor
mov
cmovno
fsubr
shrb
sub
adc
sarl
push
leave
sub
test
mov
inc
pop
lret
aad
mov
adc
inc
cmp
rcll
adc
js
adc
adc
mov
cs
aas
pop
mov
jbe
roll
adc
dec
mov
fs
push
or
cmp
and
inc
bound
xor
jle
inc
jns
sub
popf
jbe
adc
daa
jbe
test
movsb
adc
int3
and
or
in
xor
jle
lods
popa
movsl
mov
sbb
mov
pop
xchg
sub
sub
js
icebp
rolb
pushf
push
test
mov
mov
js
loopne
xchg
jl
iret
xchg
lret
push
xchg
mov
lods
mov
mov
add
sbb
lcall
test
jnp
out
or
jae
xchg
jge
jmp
cli
xchg
mov
imul
clc
sbb
cmp
div
call
mov
dec
ljmp
add
jl
stc
jl
aad
lods
push
add
repz
mov
xchg
mov
pushf
mov
cmp
xchg
push
leave
pop
or
aam
mov
icebp
jnp
outsl
cmp
pop
repnz
pop
arpl
inc
sub
sub
outsb
sub
jne
or
sbb
jge
mov
xchg
rcl
out
mov
xor
push
and
pop
pop
daa
dec
in
sub
in
inc
nop
xor
lret
fs
add
lock
push
sbb
fdivrs
and
lcall
jne
pop
je
cmp
add
dec
add
lret
popa
movsl
mov
or
es
rcr
ljmp
aam
les
mov
lds
xchg
inc
add
dec
xor
mov
sbb
test
jns
mov
adc
or
mov
add
adc
mov
shlb
loope
mov
outsl
cmc
sub
popf
shlb
mov
cmp
xchg
mov
rolb
jo
sub
test
jnp
testl
add
mov
pop
imul
loope
cmp
sub
dec
cld
movsl
sbb
push
scas
fs
daa
sbb
push
test
arpl
xchg
std
sub
dec
xlat
adcb
xchg
or
jp
or
in
dec
add
or
mov
push
adc
test
mov
ljmp
mov
in
es
add
mov
add
in
dec
sbb
shrb
ljmp
sub
xchg
dec
imul
lcall
je
xchg
sbb
in
sbb
imul
cli
fists
cmp
jecxz
test
test
mov
adc
mov
pusha
jmp
adc
sub
test
xchg
jae
and
lret
jae
mov
push
outsl
mov
cmpsb
mov
dec
out
mov
push
insb
mov
mov
xchg
outsl
insb
scas
cmp
dec
js
mov
pop
pop
movsl
subl
jge
mov
adc
lock
cmpsb
push
imul
cmp
push
rorb
sahf
test
xor
cmc
lret
inc
xor
shlb
notl
xchg
mov
test
addb
outsb
aad
fs
loope
jmp
mov
ja
pop
jmp
lahf
cld
cmp
mov
adc
rclb
xchg
out
in
ret
jbe
mov
mov
cs
and
imul
data16
ds
push
inc
sbb
xor
dec
mov
insl
in
push
xor
push
cwtl
pop
dec
inc
adc
cmpsl
icebp
in
rcll
jl
ftst
shl
loopne
mov
xchg
sub
hlt
xchg
inc
jae
out
jl
cmp
cld
jmp
aam
or
xor
out
xor
mul
lret
xor
pop
mov
repnz
stos
mov
adc
int3
insl
loope
sarb
add
subb
dec
pushf
sarb
test
xlat
sub
mov
or
ja
ret
in
or
jp
sub
xchg
sbb
daa
in
repnz
push
push
pop
pop
mov
inc
adc
push
jne
push
es
push
jo
and
or
int
test
jno
mov
push
add
aas
xchg
dec
jmp
and
mov
repnz
mov
push
push
push
mov
testb
inc
fsubrs
xor
sbb
or
xor
inc
and
mov
sbbl
dec
jno
jmp
mov
sbb
jmp
pop
mov
sbb
cmc
imul
test
pushf
jmp
movsl
cltd
cmp
in
lea
and
mov
mov
lcall
dec
cmpsb
filds
data16
cmp
pop
lods
ds
testb
dec
rcr
dec
add
sub
fldl
lods
mov
xlat
punpcklbw
or
push
xchg
inc
xchg
adc
ret
nop
adc
xchg
cmc
sub
sub
pop
fiadds
push
sbb
xchg
pop
sti
pop
mov
inc
popf
test
pop
push
repz
adcb
add
cmp
jne
lods
dec
out
inc
scas
imul
fsubp
adc
and
rcl
mov
add
jbe
lcall
ljmp
subl
lret
cmp
mov
dec
test
sub
ret
or
out
rcll
bound
pop
mov
sahf
adc
gs
mov
test
pop
or
popf
pop
xchg
std
adc
mov
repz
mov
cmc
inc
dec
pop
sahf
add
sti
cltd
mov
dec
mov
push
inc
loopne
outsl
out
mov
ret
addr16
pop
sbb
pop
push
outsl
cmp
and
sub
incl
pusha
jmp
fwait
test
pop
jns
mov
pop
xchg
in
push
cmp
mov
sti
cli
cli
inc
mov
push
mov
and
ret
cltd
jg
divb
int
push
dec
pop
clc
push
lret
sbb
push
jge
adc
push
xor
push
mov
and
cmp
inc
cmpsl
enter
inc
add
inc
cld
rolb
dec
fsubr
addr16
fdivrp
fldcw
xor
jecxz
cmpsb
jp
jne
inc
or
adc
pop
mov
pop
sub
pop
jae
inc
fisubrs
push
fidivrl
scas
jle
test
mov
aas
jmp
lds
stc
or
mov
or
insb
ret
sub
js
popl
pop
data16
push
jno
es
ret
repz
ficompl
sbb
or
inc
test
mov
push
push
mov
jl
fpatan
push
push
or
jmp
fwait
iret
pop
xlat
leave
xchg
adc
jecxz
push
cmp
ret
fisubrs
or
push
push
add
mov
aaa
divb
insl
out
js
stos
adc
dec
add
addr16
in
icebp
pop
jne
pop
or
cld
pop
stos
jns
xchg
fld
jl
aaa
mov
inc
pop
clc
or
inc
js
pop
pop
push
lods
dec
mov
jno
cmp
and
outsb
cmc
xor
and
jecxz
fistpll
fildl
push
push
mov
out
mov
mov
enter
mov
ret
stos
outsb
lret
mov
in
mov
cmp
lds
ficoml
inc
stc
xchg
push
fadds
out
ret
add
mov
leave
add
outsl
out
jns
outsb
mov
sub
mov
adc
lret
popa
jl
mov
and
mov
das
lret
test
jnp
mov
mov
sbbb
xchg
add
push
fwait
dec
add
dec
outsl
in
push
xorb
cli
fsub
dec
aas
fwait
out
int3
adc
test
adc
push
sbb
mov
mov
pop
xor
mov
scas
push
inc
dec
adc
add
inc
lea
push
lods
adc
imul
cli
xchg
sti
adc
fldt
or
dec
mov
push
add
pop
pushf
mov
mov
lret
les
cmp
jne
scas
cmpsb
in
notl
fsubrs
mov
sbb
cmp
fmuls
adc
or
and
shl
cmp
xchg
mov
jle
mov
jge
sbb
pop
push
jl
rcr
sbb
aaa
shll
add
mov
cmp
or
mov
xchg
pop
mov
or
ret
in
xchg
fistpl
lds
outsb
mov
imul
mov
fdivs
inc
shrl
shl
xor
cmc
pop
xchg
andl
dec
mov
or
int3
in
sub
enter
out
mov
popa
mov
addr16
in
mov
stos
repnz
xchg
jbe
mov
pusha
push
or
ret
aad
pop
popf
stos
dec
xchg
ret
iret
clc
jb
xor
mov
or
mov
int
xlat
popf
jo
push
sub
orl
xchg
and
sub
pushf
adc
xchg
push
pushf
bound
gs
fs
inc
jne
lods
out
faddl
cltd
lock
mov
jnp
sti
mov
movsb
push
lea
inc
push
fwait
mov
push
sahf
mov
and
xor
mov
cwtl
nopl
lods
or
div
jb
dec
movsl
test
mov
into
js
mov
arpl
sbb
stos
or
in
adc
lcall
and
call
jl
mov
add
xor
lds
mov
ds
sbbb
rcrl
lds
les
mov
add
xlat
add
xchg
lods
inc
dec
gs
ss
cmp
push
movsl
loop
and
xor
test
lret
out
lret
xchg
rcl
repnz
in
adc
rcll
popf
lret
pop
or
push
inc
rcrl
in
rorl
incb
loop
insb
and
loopne
mov
loope
pop
cmp
jae
mov
push
stc
pop
insb
push
xchg
adc
pushl
aas
mov
or
jg
outsl
xchg
loop
mov
stos
loopne
sbb
mov
sub
stc
jl
loop
sbb
mov
roll
xor
and
mov
nop
stc
cmp
mov
mov
cmpl
xchg
jns
jge
xor
push
jmp
stos
xor
aad
pop
lock
add
jae
loopne
add
into
mov
or
rcll
pop
popf
inc
sbb
cs
js
or
inc
hlt
add
add
push
ja
and
test
xor
and
fistl
add
add
mov
or
mov
adc
aas
xchg
jp
or
jnp
jo
sbbl
jb
decl
jns
xor
dec
fcmove
test
neg
jg
adc
aas
mov
aas
bnd
cmpsl
out
xlat
dec
popl
leave
mov
mov
adc
notb
scas
inc
repz
fcmovnb
das
sbb
cli
jbe
lea
mov
in
cmpsl
shll
cmp
cs
inc
push
lret
fstp
lods
repnz
sbb
cwtl
dec
or
and
sub
pop
shlb
loop
sub
lea
or
mov
lods
iret
fmull
xchg
push
cmp
cmp
jnp
out
inc
popa
sbb
jnp
test
ja
dec
jb
imulb
jle
ja
mov
shll
dec
mov
movsl
aas
lret
stos
not
bound
es
xchg
in
cltd
xchg
jae
test
shlb
jae
mov
stos
test
cmp
addr16
sub
int
aaa
pop
jle
aam
sbb
lods
das
jo
push
insb
loope
ret
lods
call
mov
mov
sti
int
addr16
enter
les
loopne
dec
scas
and
push
loop
dec
testb
std
add
jnp
xchg
cmp
inc
rorl
out
add
pusha
adc
popa
mov
mov
test
outsl
fists
mov
mov
sbb
test
inc
stc
out
imul
int
mov
jnp
mov
andb
shrb
and
mov
fdivrp
insb
mov
pop
leave
fisttpll
lret
cld
into
je
sbbb
pop
insl
sub
sub
popf
in
btcl
lret
fndisi(8087
cmp
push
sub
ja
mov
hlt
test
insb
add
out
mov
jae
stos
push
adc
or
add
aad
mov
push
adc
pop
leave
nop
adc
or
aam
test
adc
mov
in
push
inc
dec
out
loopne
and
outsb
jmp
dec
xchg
inc
call
fisttpl
add
push
mov
addr16
fadds
dec
adcb
dec
popf
lea
cmpsl
gs
inc
mov
ret
bswap
sar
mov
bound
or
push
movsbl
rorb
pop
repnz
andb
xor
shll
adc
xchg
fildll
sub
out
addr16
jge
ja
ja
jmp
pop
push
loope
int3
mov
shll
mov
inc
cltd
jae
pop
out
adc
push
rcrl
adc
cltd
mov
outsb
xor
and
mov
mov
test
sahf
out
add
add
add
dec
sub
add
mov
popa
xlat
cmp
xlat
and
inc
mov
and
mov
push
in
lods
lcall
sub
mov
push
push
popf
or
jp
mov
scas
or
cmpl
lods
dec
jne
add
dec
shl
outsl
cmp
push
test
sub
stc
or
leave
push
lds
filds
test
testb
pop
fwait
jbe
mov
insl
fstl
lahf
out
add
hlt
sub
inc
into
in
pusha
neg
test
mov
lock
subl
adc
jb
ds
out
xor
or
xchg
inc
scas
icebp
push
push
fdiv
or
xor
mov
js
gs
imul
pop
cmpsb
cld
les
sti
xor
inc
lret
mov
sub
aad
test
add
cmp
lock
ret
mov
jg
aas
sbb
mov
imul
dec
movsb
in
loop
mov
xor
cmp
sbb
mov
in
jle
in
test
int3
and
pop
lods
push
sbb
push
jne
lret
push
lods
mov
aad
clc
fsts
pop
jbe
dec
xchg
test
cmp
adc
and
dec
clc
arpl
and
ret
out
les
fnsave
dec
sbb
xchg
pop
bnd
pusha
push
jb
sub
stc
sub
cmpsl
adc
jo
add
in
repnz
test
xchg
dec
push
cwtl
xlat
sti
test
inc
daa
es
and
sbb
sub
popa
in
fdivrl
push
les
xchg
add
outsb
icebp
sbb
std
pop
imul
add
mov
cmp
xor
add
push
in
dec
cmp
popa
add
test
xchg
shrb
out
jne
movsl
mov
outsb
jo
ljmp
mov
stos
insb
mov
push
inc
mov
cmpsb
fldl
dec
pop
inc
adc
or
xor
xor
cmp
and
xor
sbb
mov
xor
stc
jnp
sub
and
lcall
adc
cmp
xchg
jl
loopne
fsubrl
nop
or
adc
inc
rcr
mov
addl
lea
sbb
std
enter
lods
xchg
outsb
jmp
das
bound
scas
aaa
arpl
test
jl
in
jecxz
push
out
sbb
mov
adc
xor
push
dec
inc
pusha
mov
hlt
loopne
movsb
lock
xchg
rcr
shlb
xchg
fiadds
mov
push
lret
mov
push
lods
aas
aam
pop
inc
rcrb
mov
std
mov
jg
sbb
bound
dec
adc
rcll
xor
xchg
lods
incb
cmpsb
push
and
pop
popa
js
xor
outsl
sub
ret
fdivl
stos
pushf
and
dec
addr16
jg
xchg
out
pop
xor
aam
or
repz
cmp
cmp
in
shr
daa
cmpsl
scas
mov
inc
mov
imul
inc
shl
imul
pop
xchg
mov
mull
aas
sbb
leave
inc
fnstenv
enter
mov
popf
imul
shrl
cmp
inc
fs
and
mov
data16
out
jae
mov
inc
pop
aas
cmp
andl
mov
int
or
data16
push
lahf
cmp
cmp
out
sub
in
scas
daa
adc
mov
lahf
mov
aam
das
lret
inc
test
dec
inc
popf
inc
mov
test
pop
xlat
mov
mov
dec
mov
mov
ss
inc
call
iret
ret
lret
pop
add
cmpsl
xor
out
adc
push
jp
sbb
fisubs
int
pusha
jne
or
dec
jb
push
lock
mov
lret
or
or
roll
xchg
or
in
cmpsl
outsl
repz
mov
imul
or
mov
fstpl
mov
lock
dec
pop
icebp
push
xlat
pop
pop
es
out
stos
std
mov
daa
jno
popf
in
sub
je
shll
gs
fcmove
lret
ss
mov
dec
ret
mov
lock
gs
xchg
and
lahf
sub
push
insb
jl
js
aaa
dec
roll
call
lock
jecxz
test
rcrl
imul
and
add
in
sub
fidivs
inc
add
mov
ljmp
mov
int
jp
int3
mov
push
fdivs
cli
loop
aaa
mov
sahf
outsb
popf
add
pop
xchg
jae
push
ja
jno
divl
data16
fistps
adc
push
jo
mov
jl
std
mov
rolb
sbb
mov
adc
dec
xchg
in
jbe
adc
lods
inc
sub
cmp
mov
push
sbb
inc
sahf
cltd
mov
cld
xor
daa
push
loopne
xchg
pushf
test
adc
lahf
in
pop
mov
lcall
jg,pn
jbe
ss
ljmp
loopne
xchg
xchg
xor
outsb
jbe
adc
faddl
pop
outsb
cld
jp
scas
icebp
test
push
popa
xchg
into
push
mov
cmp
add
testb
adc
ret
ret
pop
or
pop
mov
cmp
pop
popf
xor
cwtl
jb
mov
adc
sbb
adc
jnp
and
jno
iret
push
sbb
cmp
das
xchg
xchg
inc
sahf
lock
mov
sbb
test
movsl
jmp
repnz
lods
movsb
sbb
jno
or
ret
repz
push
cmp
imul
jmp
sub
fidivrl
fcompl
cltd
cld
sub
dec
pop
leave
lret
mov
fdivl
hlt
dec
adc
jge
add
je
stc
mov
xlat
mov
int3
test
scas
xor
pop
inc
add
xor
shrb
xchg
xor
pop
sbb
iret
aad
cmpsb
in
dec
mov
pop
nop
fiadds
icebp
pushf
rclb
and
icebp
dec
cmp
fmuls
xchg
icebp
mov
or
sar
push
adc
cmc
arpl
xor
push
mov
push
mov
popf
lcall
outsb
pop
cmpsl
lcall
push
insb
sahf
fs
subl
fsubrp
sub
push
test
test
mov
or
dec
dec
rcr
movsl
data16
and
adc
add
xor
jmp
sub
pop
sti
sti
mov
mov
mov
movsb
das
inc
inc
aam
or
sbb
push
sti
ficomps
and
mov
pop
push
add
sub
pusha
fstpl
and
sub
pop
and
cmc
test
mov
dec
push
ss
addr16
push
repz
cmc
push
sub
inc
shr
sbbb
cli
sbb
add
dec
sub
adc
pop
and
fs
ficoms
dec
mov
push
mov
repz
add
gs
mov
push
rcll
pop
and
add
mov
call
rcrb
lret
and
mov
jge
xor
or
dec
icebp
mov
ficompl
hlt
mov
sub
add
dec
mov
je
sub
mov
adc
jg
adc
mov
cmp
es
add
int
push
sbb
push
es
xchg
xorb
push
xchg
fwait
mov
jle
mov
jo
pop
dec
jle
movsb
or
cmpsl
lods
popa
push
and
loopne
shrl
cld
mov
add
jg
xlat
arpl
jecxz
in
xchg
or
cmp
loope
out
outsb
or
rclb
mov
push
flds
loopne
cld
cmp
lods
fwait
xchg
addr16
inc
repnz
loope
jns
mov
dec
stos
xchg
mov
in
pop
inc
pusha
or
in
sbbl
fldt
mov
aam
cli
fidivs
rcr
cmp
bnd
cmp
xor
fs
inc
pop
adc
lahf
enter
push
inc
shll
pop
jno
inc
inc
inc
fucomi
das
mov
cwtl
repnz
and
shlb
lds
cmp
sbbl
lods
push
and
or
hlt
call
int
and
jge
cmp
sub
lock
lock
and
shlb
sbb
adc
sub
mov
lods
stc
inc
push
popa
clc
inc
lods
stos
jne
sub
push
jbe
xor
fwait
testl
mov
cmc
xchg
jo
add
jo
ds
cmpl
mov
in
jmp
mov
in
pop
jo
inc
jb
sub
mov
add
pushf
outsb
dec
push
fdivl
cltd
adc
dec
xchg
xchg
push
xchg
adc
pop
cmp
sti
xor
pusha
push
lods
rcrb
and
or
inc
xor
das
pop
shl
xor
jge
add
push
cmp
push
jns
das
loope
lcall
shl
xor
negl
add
cmp
or
jne
push
faddp
in
dec
aaa
fs
popf
xchg
dec
and
leave
pop
jge
out
jp
movsl
xchg
ss
dec
pusha
in
jmp
les
pop
notb
dec
xchg
pop
andb
lds
int3
fnstenvs
push
mov
mov
test
and
adc
adc
daa
xchg
ss
xor
loope
and
mov
mov
jae
cmp
stos
cmp
lret
icebp
popf
push
popa
scas
mov
stc
sbb
adc
fisubrs
xchg
fcmovnb
ficomps
popf
mov
sub
daa
xchg
in
inc
pushf
jns
dec
add
mov
xorb
dec
negb
jbe
mov
push
mov
clc
dec
jns
mov
bound
xchg
cmpb
sub
add
test
jle
xor
fwait
lcall
mov
jmp
cs
lods
cmp
mov
scas
cs
inc
and
das
popa
lods
mov
mov
or
push
jp
movsl
pop
aaa
xchg
rcll
sbb
xchg
xchg
jmp
mov
pop
rorb
in
ret
xchg
adcl
lea
test
gs
lock
jae
mov
cmp
mov
lahf
push
fwait
and
insl
icebp
ror
cmpsl
aam
ret
stc
push
imul
cmp
inc
jns
addr16
rcl
push
jge
adc
jo
leave
fimull
cmp
pop
mov
mov
adcb
sarl
notb
sbb
pop
cmp
stos
cmp
xchg
imul
dec
fidivl
mov
xor
jb
mov
int
add
je
nop
push
jnp
xor
xor
insb
out
fs
mov
mov
pop
mov
jmp
mov
mov
fcmovu
ss
leave
mov
dec
cld
adc
rcll
xchg
or
xor
daa
xor
mov
dec
add
xlat
and
imul
xor
push
lahf
ja
iret
inc
xchg
lods
jno
adc
push
popf
add
and
jmp
mov
mov
callw
imul
xchg
sbb
mov
maskmovq
notl
pop
mov
mov
sbbb
cld
mov
inc
add
mov
mov
mov
setle
push
pushf
push
mov
xor
mov
cmpsb
popf
int3
imul
adc
mov
pop
sahf
pushl
lock
dec
mov
outsb
loopne
mov
aam
lds
cwtl
das
adc
add
les
rcl
jge
cwtl
xchg
fwait
pop
mov
jg
std
shrb
popf
rclb
out
jg
mov
fwait
sub
je
and
cmp
push
lret
sbb
pop
into
inc
sti
inc
mov
xor
jnp
sbb
cs
pop
out
sbb
shll
out
push
je
jmp
inc
push
leave
inc
jmp
test
or
pop
adc
sub
lods
pop
xor
cmp
push
sub
pop
xchg
stos
push
sub
sahf
sub
inc
jmp
jo
pushf
leave
sbb
mov
or
adc
addl
aad
xchg
mov
gs
cmovb
orl
cmc
push
dec
add
cmc
clc
mov
int
push
lea
dec
cli
mov
iret
cmp
push
ret
mov
cmp
mov
add
mov
iret
stos
mov
lods
or
cs
shl
sub
out
jns
roll
xor
mov
pop
xchg
xchg
in
xor
aaa
mov
pop
mov
scas
pop
xchg
xchg
call
test
or
jnp
loopne
or
pop
cmp
movsl
dec
cltd
and
cwtl
imul
aaa
in
xchg
inc
xlat
inc
add
jo
clc
jle
jnp
and
stos
shrl
mov
rorl
popf
out
subl
cli
jno
jo
jae
popf
sarl
jne
sbb
or
xchg
mov
mov
negl
mov
xchg
xchg
and
fs
test
mov
sar
jmp
popa
jnp
aam
ud0
into
shll
adc
and
mov
mov
and
dec
push
push
xchg
push
stos
je
je
test
pop
mov
or
mov
adc
gs
fst
dec
or
lods
pop
mov
sub
lret
ja
stos
push
or
pop
xchg
repnz
jns
call
inc
loope
jae
jle
adc
xchg
ret
inc
int3
js
sub
ret
std
or
mov
dec
hlt
jmp
inc
fisubrl
dec
in
push
pop
dec
adc
push
jae
cmovle
aam
mov
and
lahf
inc
fidivrl
cmp
jmp
lahf
ds
jmp
ljmp
fsts
loop
mov
in
push
rcll
out
sbb
xorb
clc
jno
jp
or
pop
sub
jbe
xor
out
jne
inc
xor
dec
ficoms
xchg
arpl
testb
xchg
data16
les
iret
test
test
dec
sub
test
pop
sub
jne
push
insb
and
inc
insl
dec
test
add
add
fbld
inc
mov
mov
xchg
jbe
insb
enter
ss
xor
push
adc
fs
jmp
ret
rorb
stc
fiaddl
ret
ret
mov
movsl
insl
testl
mov
lods
pop
push
out
mov
pop
jnp
jne
imul
cmc
inc
scas
jbe
into
dec
lcall
call
rcrl
add
push
aam
cmp
dec
dec
lahf
daa
pop
adcb
sub
outsl
jl
pop
daa
test
sub
and
xchg
into
jnp
lea
fs
mov
pop
jno
sarb
cmpsl
jle
ucomiss
sbb
inc
enter
mov
stos
mov
imul
dec
push
and
fstps
or
loop
pop
mov
inc
ret
jnp
sahf
int
cld
call
and
popa
dec
dec
xor
adc
and
out
aas
fs
jb
test
jbe
shll
jg
sbb
call
es
fildl
pop
lret
push
and
mov
aad
test
loopne
mov
fnstsw
mov
into
imul
out
adc
stos
ret
mov
cld
repz
sbb
xchg
adc
pusha
fs
inc
xchg
aaa
xchg
rcl
xor
xchg
es
stos
cmp
jecxz
loop
es
scas
xchg
into
dec
xor
and
mov
shlb
jmp
jne
or
dec
repnz
mov
dec
xchg
adc
stos
sub
cmpsb
jmp
and
sub
sbb
mov
cmp
dec
shrl
popa
fcoms
ds
repnz
out
or
pop
repz
jle
repz
in
mov
jge
xchg
add
lock
cwtl
inc
dec
repnz
adc
or
jb
movsl
les
or
push
out
xchg
aam
push
cmp
fistl
fs
daa
add
xchg
fisubrs
data16
sarb
jecxz
push
ds
jns
jno
adcb
push
jl
pop
mov
sbb
sub
xor
in
lret
and
ja
bound
jne
in
mov
xor
loop
add
push
mov
add
rcrl
js
and
mov
jbe
addr16
ljmp
jb
push
jecxz
js
dec
dec
push
ja
jle
mov
je
setp
ret
cmp
xchg
ficoml
mov
mov
in
dec
call
pop
lcall
outsb
sahf
ret
addr16
push
pop
out
addr16
pop
mov
push
xchg
mov
insb
mov
shr
fwait
xchg
and
js
insb
daa
pop
mov
ficomps
fwait
and
mov
leave
addr16
loope
les
lahf
xor
add
mov
mov
aam
xchg
jnp
fldt
xchg
stc
cmp
pusha
ja
lods
rclb
xchg
lea
dec
jns
and
leave
xlat
movb
inc
dec
mov
sub
popa
popa
or
cld
mov
jl
jmp
lahf
outsb
xor
adc
adc
popf
xchg
bound
push
test
test
jl
rorb
inc
bound
dec
out
xchg
push
push
or
xchg
ret
rcll
pusha
sub
adc
xchg
mov
pop
cs
test
jno
or
cld
test
dec
dec
xchg
push
inc
lret
lea
mov
adc
and
shlb
insl
mov
mov
out
push
pusha
sub
xlat
insb
xchg
pop
fdivr
movsl
std
dec
push
sahf
jg
jns
cmp
ljmp
pop
xlat
pop
lds
dec
test
rclb
add
sti
testl
aas
insl
stos
in
cltd
psubq
mov
call
cli
inc
xchg
sub
jp
or
push
leave
icebp
push
movsl
gs
xchg
sbb
xor
popa
add
out
jp
xchg
mov
lods
dec
ljmp
pop
cmpsl
pop
push
mov
das
fisubrl
mov
push
mov
inc
dec
inc
arpl
mov
fstps
out
popa
enter
cltd
push
adc
daa
aaa
ficompl
xchg
sti
and
insl
popa
rclb
cltd
jbe
pop
xlat
popf
mov
scas
jb
and
lea
push
cld
aam
loop
adc
loop,pt
jnp
iret
clc
lods
outsb
lods
jo
mov
mov
pop
or
push
jmp
sarl
testl
or
outsb
fisubrl
lods
movsl
xchg
jle
xchg
mov
and
mov
shll
pop
mov
mov
or
mov
andl
jo
inc
push
in
stc
dec
lahf
adc
pop
aad
scas
jnp
sub
mov
les
add
push
roll
shll
mov
iret
out
loop
mov
inc
rcrb
out
pop
cmpsl
daa
fadd
mov
pop
jl
xchg
iret
fxch
jg
data16
mov
std
das
push
and
orb
or
or
and
movb
adc
cmpsl
stos
aam
inc
mov
sbb
fldz
cld
test
cmpsl
lahf
fnsave
mov
inc
xchg
jae
mov
push
inc
jp
sub
or
push
sti
rep
sbb
fwait
add
cmpb
push
cmp
add
stc
or
mov
popf
orb
shl
jns
cmpsl
lods
mov
xor
aaa
mov
push
dec
xchg
sub
out
int
cli
jle
push
hlt
cmp
popa
adc
dec
xchg
cltd
dec
sbb
lods
pusha
in
jge
int3
sbb
rcll
dec
outsl
cmp
jbe
jo
in
test
push
push
mov
push
and
out
or
mov
inc
mov
imulb
paddb
test
icebp
aam
negb
push
test
imul
leave
ljmp
cmp
lret
repz
sbb
mov
dec
push
adc
mov
repz
adc
les
sub
sbb
fs
mov
jnp
clc
lds
subl
pop
cmp
and
inc
ljmp
andb
mov
mov
data16
jmp
and
mov
das
sti
stos
shl
mov
arpl
mov
movsl
call
out
out
xchg
test
movsl
sbb
in
jg
test
mov
ds
sub
pusha
cli
or
fwait
loope
pop
bound
pop
cmp
dec
add
roll
push
mov
hlt
dec
dec
js
fs
push
mov
dec
outsb
mov
js
aas
rolb
inc
fcoml
cli
cmpsb
mov
sub
push
insl
pusha
stos
fbld
dec
cwtl
xlat
rcll
je
sbb
sbb
bound
cmpsb
push
cmp
adc
lcall
inc
pop
cltd
sub
cmp
lods
insl
lahf
cmpsb
inc
repz
cmp
mov
dec
sbb
xchg
adc
mov
inc
dec
push
sbb
mov
cmpsl
pop
shl
xor
movb
test
sbb
mov
jmp
negb
lods
mov
into
push
xchg
call
pop
mov
dec
pop
jnp
dec
out
add
movsb
dec
and
enter
adc
std
scas
jae
add
movsl
xchg
repz
pop
sbb
mov
xor
xor
std
mov
push
jle
insb
xchg
cmp
cld
cmc
pop
enter
shlb
test
push
and
xchg
and
repz
jecxz
or
lds
jno
push
push
mov
jmp
mov
aaa
cwtl
and
in
sbb
push
xor
movsl
dec
mov
pop
mov
iret
daa
mov
adc
aad
mov
push
pop
mov
xchg
fisubl
iret
jo
ret
sti
out
ss
mov
pop
es
or
add
ret
out
out
jecxz
scas
mov
insb
xchg
xor
jecxz
js
and
repnz
ja
dec
inc
adc
cmp
cld
arpl
inc
loop
pop
cmp
mov
repnz
push
nop
cmp
xor
inc
xchg
out
fistpl
xor
lds
or
ret
outsl
mov
in
jl
or
xor
mov
roll
test
rcll
add
cld
into
cwtl
xchg
and
sbb
in
mov
push
int
div
pop
inc
and
mov
add
loopne
inc
inc
imul
push
dec
jbe
add
adc
jne
je
or
lret
mov
cltd
or
lahf
negb
data16
add
inc
mov
rcr
loope
push
xchg
adc
sbb
push
imul
shl
push
xorl
outsl
addr16
pop
jp
push
repz
int
cmpsl
add
mov
loopne
aad
xchg
adc
sub
xchg
xchg
iret
mov
mov
shrb
fcoms
int
aaa
lret
inc
clc
add
add
jnp
or
fldcw
or
pushf
outsb
push
in
push
and
ljmp
mov
sub
arpl
mov
push
icebp
lods
mov
or
xor
lods
mov
pop
adc
das
dec
mov
add
xor
out
hlt
hlt
push
mov
adc
test
imul
das
or
and
pop
cmp
mov
push
inc
jge
sub
pop
adc
inc
out
inc
test
jno
repnz
sbb
mov
mov
xchg
scas
xor
enter
sub
and
cmp
fwait
scas
ret
mov
cmp
sahf
xchg
fnsave
cmp
jmp
sub
pop
or
popa
sbb
mov
scas
jg
loope
push
cmp
rolb
inc
flds
cld
pusha
movl
pop
adc
mov
ljmp
inc
jmp
jnp
and
cmpsl
lods
stc
imul
fcmove
mov
sub
insl
xchg
add
push
cmp
mov
adc
scas
ljmp
inc
insb
add
aaa
cwtl
inc
mov
sbb
mov
test
cmpsl
sub
rcll
push
cmc
mov
xchg
gs
jl
data16
xor
test
int
enter
sub
adc
fists
push
and
cmp
lea
lods
lods
lds
or
stos
rol
aaa
lahf
pop
in
shr
jbe
xchg
fcoml
push
xchg
ss
mov
es
iret
sbb
adc
push
call
ljmp
fbld
mov
std
or
in
shl
pop
out
inc
cmp
je
imull
ds
pop
inc
pop
xchg
dec
mov
rcl
ficomps
testb
imul
dec
or
push
ds
inc
mov
push
mov
call
adc
adc
jb
pop
sub
xlat
jl
mov
addr16
push
sub
xor
pop
sahf
lcall
push
scas
xchg
pop
mov
daa
mov
adc
push
lret
dec
jo
loopne
jge
or
push
xchg
clc
and
stos
jno
mov
dec
ret
fsubrl
leave
clc
insl
sbb
jae
pushf
mov
jmp
int3
cmp
pop
sub
xor
in
call
outsb
xor
push
jne
outsb
ja
push
inc
bnd
mov
push
cmp
jne
or
or
jge
ficoms
adc
or
imul
test
rcll
dec
jne
iret
nop
sbbb
fwait
xchg
mov
mov
fwait
shlb
sahf
pop
mov
xor
icebp
xchg
les
sbb
mov
push
sub
mov
cmpsl
sbb
xor
ja
jmp
fistl
xor
cs
cs
imul
sub
mov
mov
call
mov
mov
xchg
popf
mov
xchg
popf
daa
xor
aas
loop
xchg
sbb
mov
loopne
mov
outsl
xor
cmp
pop
adc
enter
mov
mov
dec
ficoms
adc
cmp
push
xor
dec
xor
sbb
popf
cld
dec
xchg
dec
sbbl
sarl
fimuls
xchg
repz
out
loop
shrl
add
into
jle
dec
roll
insl
aad
sub
mov
ficompl
std
dec
fidivrl
inc
ret
sub
mov
icebp
gs
sbb
push
xchg
inc
jbe
popa
mov
imul
sti
clc
adc
push
jg
cmc
hlt
ja
in
mov
and
mov
rcrb
pop
pushf
icebp
rorl
arpl
and
sub
mov
xorl
out
push
ljmp
mov
arpl
insb
mov
imul
cmpl
push
repz
inc
fucomip
add
and
scas
ljmp
stos
mov
xor
inc
nop
lahf
mov
pop
cs
mov
cmp
cltd
aas
xchg
push
mov
aas
mov
shlb
inc
push
push
lret
pop
test
imul
mov
test
int3
push
jno
adc
lahf
sub
fisttpl
xchg
adc
repz
push
or
xchg
cmp
xlat
nop
pop
aad
sub
cmp
mov
or
scas
cmp
add
lret
mov
repnz
xchg
movsb
fstps
sahf
stos
cs
push
dec
fidivrl
in
pop
jno
scas
pushf
sub
mov
push
mov
dec
mov
stos
xor
fs
int
sub
stos
mov
bound
mov
lds
loopne
mov
push
rcrl
mov
pop
fstpl
xchg
orb
cmp
xchg
add
dec
sbb
arpl
push
mov
idivb
pop
or
rcrb
repnz
gs
movsl
shlb
cld
test
jne
les
and
cmp
mov
pop
pusha
pop
push
add
cmp
xchg
adc
cmpb
adc
push
xor
add
inc
lods
jmp
and
jb
sbbl
cmp
scas
mov
cmp
fstl
ljmp
shll
jae
fidivrl
imul
or
adc
mov
dec
and
adc
popf
fcomps
dec
fldl
mov
lret
cmp
outsb
and
push
ret
int3
xor
movsb
mov
pushf
xor
jle
xlat
lret
xchg
ljmp
inc
push
dec
mov
ljmp
xor
xor
dec
sar
aad
xchg
sub
push
xchg
cmpsb
jo
int3
sub
hlt
inc
and
scas
pop
ds
fdivl
xchg
sbb
pop
aad
pop
cmpsl
dec
sub
sbb
dec
push
xchg
rcrb
pop
mov
push
jmp
enter
jecxz
sub
dec
mov
and
mov
jne,pt
bound
mov
mov
ret
hlt
insb
xor
or
aad
std
arpl
jmp
cmp
adc
cmp
ss
cmpsb
sahf
rcr
pop
jle
inc
fisttps
mov
mov
out
dec
mov
inc
je
xor
jne
cmp
ficoms
dec
mov
jns
cmpsl
mov
fildll
lgdtl
int
xor
std
lods
xchg
pushf
lcall
mov
rorb
in
mov
xchg
jge
xchg
mov
enter
fwait
loope
jle
jg
jae
movsb
nop
outsb
loop
sti
dec
xlat
or
fs
daa
shr
into
jp
dec
lock
out
aad
sbb
loop
pusha
push
mov
push
cmpsl
adc
mov
fwait
xchg
sub
inc
cmp
inc
push
jle
xor
dec
mov
mov
pop
push
jle
bound
lahf
nop
std
das
mov
jns
lret
ljmp
push
mov
scas
adc
lcall
out
cmp
cld
pop
xchg
sti
ficompl
push
inc
andb
lock
fldl
fxch
fisttpl
mov
mov
loope
fabs
popa
cltd
mov
fistl
mov
or
jge
jmp
or
ja
sub
movsl
adcl
adc
sbb
ja
mov
mov
std
daa
out
cwtl
mul
mov
repnz
outsl
pop
fnop
insl
push
mov
mov
or
in
xor
adcl
inc
fdiv
inc
cmp
frstor
xor
mov
cld
jle
loopne
or
jnp
loop
lahf
mov
sub
mov
cmp
cmpsb
xchg
push
lahf
ret
mov
mov
xchg
mov
std
pop
movsb
pavgb
mov
test
popa
push
test
scas
out
pop
mov
pushf
sbb
sub
mov
jecxz
cli
in
call
sub
sub
add
pop
mov
imul
xchg
and
jno
das
xor
lods
sbb
mov
mov
sub
lods
push
pop
into
int
xchg
adc
mov
stos
outsl
int
jmp
call
jns
das
ret
sahf
out
and
inc
mov
enter
shlb
nop
dec
in
xlat
xorb
dec
divl
push
push
mov
enter
push
mov
jmp
mov
xchg
mov
shr
and
ret
mov
aaa
xor
cwtl
mov
aas
sbb
test
inc
mov
push
add
sbb
pop
mov
and
addr16
test
inc
mov
mov
xor
xchg
arpl
cli
cmp
adc
cli
arpl
sbb
insl
push
shlb
test
mov
inc
repz
push
mov
test
lea
mov
jl
test
clc
cwtl
add
popf
aam
sbbb
out
mov
xor
push
adc
je
nop
cmc
jg
hlt
mov
sbb
repnz
aas
orl
lcall
nop
leave
sbb
lret
jle
int
lcall
mov
mov
imul
cmp
dec
lret
jb
je
dec
mov
loope
and
mov
and
stos
jno
mov
add
les
shlb
mull
push
adc
fld
jae
xor
add
mov
or
pusha
pop
mov
and
std
sub
dec
pop
movsb
and
mov
fwait
adc
fs
outsb
inc
arpl
lret
cmp
xor
inc
dec
cwtl
mov
cmp
cmp
mull
iret
fisttpll
cmpsl
mov
adc
jbe
andb
lahf
into
xor
xchg
mov
shlb
and
bound
out
jbe
mov
aad
adc
rcr
inc
sbb
xchg
cmpb
pop
rol
xchg
fs
xchg
inc
push
cmpsb
in
push
lods
mov
mov
fdivs
leave
sbb
mov
std
mov
fidivl
movsl
mov
pop
xchg
repnz
fwait
adc
jo
jp
dec
inc
sub
mov
int
rcpps
roll
fwait
adc
mov
xchg
outsb
fnstsw
xor
push
fnstcw
push
sbb
or
and
sub
shll
mov
dec
imul
push
cmp
in
ret
enter
rcrb
push
adc
lret
outsl
cli
dec
jnp
lods
hlt
cmc
jbe
xor
push
mov
outsl
push
test
loopne
imul
jbe
jl
bnd
dec
ret
aas
add
lds
scas
sub
movsl
jmp
pop
mov
pusha
cmp
insl
jns
pop
test
xchg
xor
pop
jge
adc
add
test
fcoms
inc
mov
jns
and
mov
inc
sti
bound
ret
sbb
mov
outsl
aad
jnp
daa
jo
or
fcomi
xor
adc
into
and
ljmp
test
add
push
sbb
stos
sbb
or
mov
stos
sbb
jecxz
cmp
in
cmpsb
lret
sbb
dec
add
cmp
es
outsb
rorl
sbb
in
cmp
inc
out
sub
lds
mov
adc
inc
cmovl
adc
insb
fidivrs
xchg
hlt
xchg
jmp
pop
lret
push
jmp
lcall
push
lret
inc
leave
sub
cmpsb
push
mov
fsts
data16
jle
je
ds
repnz
and
sahf
lret
fld
mov
cmp
push
jnp
mov
fwait
inc
sti
pop
data16
in
je
jle
leave
idivb
xchg
xor
daa
pop
test
sub
divl
xlat
push
inc
sbb
xchg
test
jno
xlat
test
inc
mov
mov
sub
mov
cs
xor
fcmove
cmp
inc
mov
pop
out
cmp
jl
push
push
fstps
jne
push
inc
push
push
scas
ljmp
mov
cmp
jl
mov
ret
mov
add
push
pop
add
push
adc
xor
jmp
jnp
xor
loop
mov
jae
sti
int3
enter
jl
cmpsl
ja
dec
lods
rolb
insb
ret
jecxz
push
cltd
int3
pop
leave
mov
sub
movsl
fdivrs
adc
mov
in
mov
cmp
xchg
std
pop
cmp
sti
adc
dec
ss
push
dec
mov
jecxz
mov
jmp
les
jp
mov
stc
andb
cmp
inc
sbb
jecxz
or
mov
fwait
cli
mov
pop
pop
mov
mov
leave
repz
and
or
shlb
std
push
std
pop
add
cmp
out
call
xchg
xchg
jo
stos
cmp
mov
out
adc
lea
ja
and
or
add
sbb
mov
jnp
gs
mov
repz
frstor
repz
or
icebp
fidivrs
rorb
fucomip
xchg
or
pop
outsb
adc
mov
fcoms
mov
mov
add
sub
inc
imul
jno
stc
inc
jo
xor
in
push
dec
int3
pusha
mov
arpl
jne
ja
and
jns
dec
xor
pusha
in
push
outsb
imul
mov
imul
sbb
lods
cmc
mov
sar
daa
mov
inc
jnp
push
jae
push
std
and
jne
jl
outsb
cmp
loope
popf
xor
ss
mov
xor
push
push
push
shll
inc
dec
js
xchg
ss
inc
in
jne
or
pop
insl
btc
cltd
add
rcrb
out
les
pop
mov
adc
shr
mov
pop
mov
repz
xor
cwtl
lret
jb
xor
adc
jnp
outsl
xor
clc
push
jb
mov
fcomps
fldl
sub
inc
add
add
rcll
cmp
pop
hlt
sbb
stos
in
popf
test
mov
jb
xor
test
cmpsl
rorb
shrl
push
std
mov
or
aad
or
pop
or
test
jne
andb
mov
jo
aas
inc
ljmp
inc
orl
sbb
ret
repz
adc
jns
sysexit
in
fwait
les
push
dec
jne
repnz
cwtl
inc
hlt
cmp
lahf
mov
lea
pop
out
negl
push
lea
pop
adc
adc
std
fmulp
outsl
xlat
stos
add
rcrb
xchg
sbb
mov
outsl
mov
mov
sub
loope
stc
pusha
pop
inc
dec
test
pop
xor
cli
ret
xor
push
rclb
and
mov
adc
jne
pusha
cmovg
mov
xchg
mov
test
inc
test
lret
dec
hlt
mov
mov
pop
mov
jl
out
cmpsb
inc
adc
mov
mov
xchg
sub
mov
cmpsb
mov
rclb
outsl
lods
push
and
xor
adc
lds
inc
hlt
jae
lods
xchg
mov
shl
pop
fcomps
jb
mov
xor
add
adc
lret
mulb
out
or
add
pusha
stos
imull
push
lods
call
jmp
push
mov
in
stc
sbb
cmp
in
dec
xchg
les
jg
inc
aas
clc
pop
cmpsl
inc
cmp
scas
dec
nop
es
imul
jle
sbb
shll
xor
adc
pop
push
jecxz
sub
test
add
test
inc
push
negl
lret
jmp
push
movsl
mov
push
pushf
add
aam
ss
nop
jge
inc
dec
xorb
push
movsb
mov
mov
imul
dec
ret
cmp
jmp
rolb
mov
enter
inc
xchg
sub
pop
inc
xchg
in
or
xchg
test
mov
pop
movsl
jno
js
xor
mov
in
cmp
enter
mov
shl
leave
jle
sbb
and
js
mov
lea
test
negl
andb
jne
or
addl
cld
sbb
mov
jbe
and
pop
jp
fisubrl
xor
bound
cmpsl
xchg
dec
ffree
clc
cmc
push
sbb
das
addl
stc
or
test
dec
movsl
test
xlat
dec
pop
mov
inc
shll
add
cmc
xor
jmp
lret
cmp
push
aam
xor
or
mov
adc
popa
and
mov
addr16
jmp
clc
lds
and
pop
pop
std
das
sti
fildll
ds
jae
xor
popa
rorl
testl
cmp
adcb
xchg
lahf
in
jbe
and
cmpsl
push
xchg
dec
js
imull
test
add
cmp
jbe
mov
jbe
movsb
fs
lcall
ret
sti
call
add
imull
lret
sub
ret
popa
jmp
xchg
dec
jmp
pop
cmp
inc
mov
push
out
xchg
xchg
ror
sbb
jbe
and
push
pop
rol
mov
shlb
js
cld
icebp
xchg
or
and
or
stc
pop
je
shlb
call
cltd
divl
es
pop
in
sbb
int3
push
in
cmpsl
loope
fisubrl
xor
arpl
pop
jnp
fidivl
jmp
cwtl
repnz
mov
out
dec
mov
mov
push
pop
sub
mov
mov
test
daa
cmp
mov
dec
mov
mov
test
jle
mov
in
jne
mov
movsb
pop
adc
xor
mov
adc
adc
imul
sarb
arpl
jae
cmp
and
leave
and
inc
rcrl
xor
lret
in
sub
pop
or
out
into
jns
lret
push
jecxz
pop
in
cmp
ss
inc
lcall
pop
aad
adc
stc
xlat
in
mov
test
adc
out
pusha
gs
int3
mov
sarb
inc
outsb
dec
scas
pusha
inc
int
xchg
icebp
es
mov
cltd
jecxz
xor
jb
jno
and
push
popa
mov
shrl
sbbl
movsl
out
int
int3
push
pop
lods
scas
mov
pop
icebp
stc
or
divl
ljmp
mul
adc
in
repz
xchg
imulb
xchg
rcr
mov
mov
inc
scas
push
adc
or
and
cmpsl
test
mov
mov
lds
daa
and
jmp
jmp
outsl
mov
xchg
add
adc
mov
dec
enter
inc
adc
fucomi
lods
mov
loope
mov
cmp
or
jno
xchg
cld
stc
jo
ret
lahf
popa
insl
fcoms
cmp
push
inc
fiadds
mov
mov
sub
inc
push
fistps
outsb
ljmp
or
sub
das
popf
mov
cmp
lretw
das
mov
adc
push
add
pop
aaa
enter
sub
test
js
lods
dec
ljmp
lods
iret
dec
xchg
push
cli
rcrb
jmp
jl
and
pop
push
xchg
in
hlt
or
cmp
mov
lods
mul
push
ret
and
das
jne
js
aad
xlat
inc
jne
push
nop
cwtl
mov
cwtl
scas
lds
fs
sbb
pop
cmp
cmp
fstpl
xchg
das
cmpsb
pushf
popf
xor
call
negl
sub
sub
push
jl
sti
rcr
add
nop
aas
jbe
dec
pop
mov
lea
nop
fdiv
cwtl
jae
push
das
xor
jecxz,pt
clc
shlb
test
inc
push
les
add
adc
xor
sahf
enter
push
pusha
xchg
mov
and
sar
mov
sub
dec
dec
cmpsb
lret
jns
mov
mov
push
mov
adc
and
push
scas
stos
mov
sbb
ljmp
and
fldcw
push
fwait
pop
jp
scas
aas
mov
ss
pop
pop
jge
xchg
xor
test
xchg
mov
mov
rcr
ret
push
divl
inc
jle
pop
mov
mov
fldl
or
cmp
inc
fcomip
pop
sub
xorb
pop
inc
leave
jmp
cwtl
jmp
sub
inc
and
push
aad
cmpsl
lock
push
insl
mov
jp
jno
xchg
ret
jg
enter
fstl
adc
jecxz
lods
test
sti
mov
lahf
jge
pop
sbb
rolb
or
mov
sub
jns
scas
data16
rorb
loope
in
and
lock
fdivrp
mov
sub
mov
sbb
sbb
adc
ds
jmp
or
mov
push
xchg
imul
lret
hlt
push
imul
int3
and
sub
mov
mov
pop
mov
pop
sbb
mov
mov
sub
and
jb
cmp
pop
jge
jmp
mov
jnp
cmp
sahf
push
rclb
adc
loopne
fnstsw
out
mov
lods
mov
adcl
xor
addr16
fisttpll
add
sahf
dec
jbe
push
cld
int3
or
mov
xor
inc
fwait
pusha
push
bound
xorl
adc
and
sub
imul
aaa
mov
jecxz
fwait
clc
outsl
push
cli
inc
popa
jne
inc
add
mov
mov
lods
jbe
and
mov
popf
pop
add
arpl
mov
cmpsl
jne
mov
dec
sub
and
mov
sub
lahf
divb
cmpl
repnz
ret
mov
fisttpl
out
fsub
gs
fidivrs
cmp
in
scas
repnz
cmp
and
xchg
jnp
inc
cmp
insb
mov
cmp
dec
scas
xor
mov
mov
es
pop
out
add
mov
bound
idivl
out
adc
or
jbe
int3
int
mov
std
sub
pop
stos
imul
sti
mov
xor
jnp
jno
jns
orb
pop
testb
or
adc
out
or
jns
fs
adc
fisubrs
mov
dec
sub
push
std
aaa
inc
mov
jg
lods
sbb
mov
imul
xchg
test
cli
fcmovbe
movsl
push
and
movsb
aas
xor
std
subl
in
xchg
adc
fwait
pop
out
movsl
imul
mov
jle
call
ss
push
pop
out
addr16
out
pusha
shrb
std
sbb
test
out
popf
push
xchg
sbb
pop
xchg
pop
shll
mov
add
sbb
fs
sahf
mov
mov
mov
divl
aad
add
sahf
jbe
insb
test
movsb
out
insb
icebp
movsl
sbb
jl
jne
in
mov
dec
sbb
push
jg
enter
inc
js
call
mov
push
scas
out
clc
and
test
pop
or
cmp
jbe
gs
xor
out
adc
and
outsl
lods
cmp
popf
mov
imull
mov
pop
sub
cmpps
push
lock
adc
sbb
jmp
lcall
in
aad
stos
adcb
jb
nop
xchg
imul
vmovups
ret
sub
aaa
push
roll
cmp
faddl
xor
pop
inc
inc
out
xor
loopne
das
and
cli
jo
loopne
or
mov
cmp
inc
push
mov
inc
repz
enter
push
sbb
lahf
jge
and
pushf
xor
mov
pop
enter
mov
mov
mov
inc
pop
mulb
aaa
sbb
sub
jbe
dec
jl
pop
jae
loop
sbb
nop
adc
dec
jno
push
scas
xor
fnstenv
mov
test
les
lret
push
aam
pop
adc
dec
mov
gs
mov
pop
push
lds
int3
repz
xlat
push
movsb
push
dec
mov
jb
pop
add
psubsb
push
pop
in
andb
test
leave
push
mov
cmp
pop
scas
lcall
push
pop
mov
sbb
sbb
and
pop
xchg
mov
xchg
sbb
call
rcrb
imul
cmpsl
test
mov
push
pop
push
pop
scas
pop
clc
pusha
dec
or
jp
jle
aad
add
xchg
sbb
cmp
mov
and
call
jge
cmc
xor
flds
gs
cs
shrb
lock
sub
sub
addr16
add
leave
ror
sahf
add
int3
js
pop
insl
lods
gs
pop
mov
xor
lret
xor
sub
es
inc
inc
lds
out
repz
mov
ja
pop
mov
lock
cltd
subb
lret
adc
and
icebp
xor
mov
cmpsl
jbe
js
nop
push
xor
movsb
mov
sbb
leave
xlat
mov
dec
outsb
add
int3
ljmp
adc
jnp
fwait
pop
lcall
test
shll
subb
insl
aad
in
mov
cwtl
popf
add
adc
dec
jmp
shll
cwtl
push
lsl
jb
mov
bound
mov
cltd
xchg
rcrb
xchg
pop
ja
pop
pusha
xchg
cwtl
adc
and
aad
push
jle
lret
jle
pop
or
push
adc
sbb
push
cmp
jmp
push
rorl
sbbb
enter
fisubs
aam
arpl
pop
push
outsl
rcl
mov
lcall
adc
sbbb
pop
xchg
loope
movsb
or
add
inc
xor
push
inc
out
mov
lods
mov
cmp
push
in
in
pop
lret
mov
in
sbb
ja
int3
sub
sar
dec
jns
fstp
pop
aas
cmp
rcll
imul
and
push
icebp
mov
dec
daa
pushf
hlt
testl
into
fs
jno
sbb
ret
jmp
xor
mov
test
add
push
fmuls
push
cld
imul
sub
push
mov
enter
int3
cltd
fisttps
icebp
setne
sbb
rolb
cmp
mov
and
sub
jo
mov
pop
fldcw
sbb
ret
xor
cmp
adc
cltd
xor
push
inc
data16
xor
ljmp
cmpsl
push
outsb
fcompl
out
leave
out
in
add
mov
adcl
rclb
and
test
xchg
jnp
das
adc
cs
inc
dec
inc
jb
adc
pop
sub
xor
outsl
mov
jecxz
xor
jb
lods
or
scas
pushf
mov
inc
or
push
fdivs
sbbb
in
or
inc
rcrl
mov
xchg
popa
dec
popf
in
mov
cs
popa
and
push
sub
mov
lds
cmp
call
xor
or
mov
mov
pop
dec
addr16
lret
hlt
in
sub
mov
pop
sub
and
or
cmc
adc
inc
xlat
pushf
mov
ljmp
push
lcall
adc
sub
adc
add
mov
testl
jp
gs
inc
popf
je
aad
out
add
or
nop
out
scas
out
sub
sbb
call
xchg
jp
xchg
inc
mov
push
sahf
jne
sub
lcall
push
cmp
xchg
test
and
bound
adc
xchg
mov
dec
icebp
lcall
sub
or
cmp
jne
dec
loopne
push
cmp
rorl
loopne
insb
icebp
push
ret
dec
add
jnp
or
andb
aam
aad
inc
add
daa
mov
mov
out
cmp
pop
stos
pop
inc
daa
push
dec
sub
add
adc
push
call
fnstsw
fldl
or
outsb
fcomip
mov
jg
sub
enter
loope
adc
js
mov
shll
push
mov
imul
sub
inc
rorb
test
test
mov
int
sbb
shrl
xchg
adc
addr16
imul
hlt
rcrb
add
dec
scas
fnstsw
aas
outsl
xchg
mov
les
push
mov
pop
fstl
or
je
add
push
jle
scas
xlat
lret
dec
pop
hlt
push
div
ror
add
cmp
xor
push
popf
int
mov
mov
xlat
test
cs
insl
shlb
sbb
rcrb
xchg
scas
add
mov
xchg
push
orl
addr16
sbb
shll
jno
push
cli
addb
stos
and
inc
mov
adc
dec
nop
xchg
push
jle
pop
dec
dec
aas
iret
and
pop
loop
mov
add
gs
xchg
mov
inc
sub
pop
daa
mov
sarl
pop
adc
outsl
jae
add
push
das
sbb
ret
sub
pop
pop
mov
fs
or
pushf
cmp
leave
jge
mov
mov
mov
pop
icebp
leave
movsl
push
sbb
mov
jle
push
pop
mov
mov
cmpsl
and
push
pushl
dec
aas
pop
repz
jne
daa
add
cld
cld
mov
adc
add
gs
mov
out
lret
ja
imulb
pop
mov
std
push
in
or
cwtl
stc
in
pop
push
scas
and
aad
add
in
bound
je
xchg
push
rcll
data16
and
jmp
mov
cld
cmp
or
jns
shr
sti
xchg
mov
aas
jmp
mov
std
sbb
scas
adc
fucomi
sub
decl
dec
insb
icebp
lcall
aad
jae
popa
sbb
mov
mov
lock
stos
mov
lds
loop
fwait
and
cmp
sub
enter
test
xchg
nop
push
sti
mov
adc
pushf
or
jno
cmpl
fstpt
popf
xchg
test
mov
or
mov
pop
sbb
scas
dec
cmp
jns
push
push
dec
je
mov
mov
mov
jae
inc
aad
jmp
sub
push
cltd
scas
loopne
xor
ss
call
into
push
cmp
dec
jecxz
adc
add
cmp
loope
scas
mov
cmp
lods
das
adc
shrb
enter
and
add
mov
je
leave
fldt
xor
orb
ds
out
int
inc
mov
push
sbbl
dec
mov
jmp
xor
add
push
shlb
pop
outsl
aaa
push
sub
sbb
mov
stos
lret
test
dec
cmpb
repz
dec
scas
ds
pop
ds
hlt
lcall
jecxz
sbb
rorb
gs
ds
lcall
xchg
inc
pop
mov
int
cmc
push
dec
xor
push
jp
inc
or
push
pop
fsubl
imul
iret
jo
lock
add
push
out
and
or
push
imul
shr
popa
or
mov
mov
mov
movsb
ja
inc
adc
in
xor
push
ret
push
scas
sub
insb
outsb
inc
fcomp
test
scas
xchg
mov
fbld
push
mov
mov
xchg
xor
jge
jae
dec
mov
mov
mov
outsl
or
cmp
xlat
or
dec
xor
leave
sub
out
push
ss
xchg
lds
movsl
adc
cmc
and
insl
test
push
cmc
adc
cmp
jnp
dec
popf
xchg
sub
pusha
bnd
mov
push
cld
outsb
dec
jge
sub
adc
mov
cmp
lret
movsl
lds
cmpsl
prefetcht2
loope
xlat
xor
out
mov
adc
pop
insb
fldenv
outsl
push
out
mov
pop
fisttps
adc
mov
sbb
aas
dec
sbb
enter
mov
jne
push
insb
fmul
xor
das
fs
pop
ja
outsl
pushf
pop
push
outsl
das
fs
and
in
scas
lret
add
cmpsb
js
push
test
shll
sarl
inc
flds
xchg
jbe
jecxz
scas
ja
add
das
addb
or
push
shll
rclb
mov
stos
add
xor
xchg
xor
jmp
js
add
mov
in
sti
inc
jns
jecxz
fisubl
adc
popa
test
dec
dec
mov
ret
add
lods
fstl
push
test
es
std
shl
jmp
mov
dec
fstcw
jl
jnp
add
xchg
cmpsl
cmp
xchg
leave
mov
jno
sahf
aad
arpl
pusha
cmp
outsl
or
pop
xlat
int
call
cmp
scas
mov
fisttps
rdtsc
movsb
aas
stos
xor
xchg
lret
adcb
ss
js
push
push
mov
std
jns
cwtl
jecxz
hlt
cvtdq2ps
pop
aas
push
cld
wrmsr
and
arpl
jmp
push
push
lcall
mov
push
lcall
or
in
ret
sbb
jp
pop
push
pop
jnp
scas
in
leave
lock
mov
leave
adc
out
add
mov
in
adc
cmp
xor
movb
cmp
adc
divl
ret
repz
scas
push
sahf
scas
aas
push
mov
pop
stos
xor
shl
nop
lds
jg
jge
ret
test
dec
mov
xchg
sbbb
cmp
push
mov
cs
cmp
incl
push
mov
xchg
lcall
mov
popa
mov
repz
cwtl
sub
jge
lahf
daa
sbb
pushf
and
mov
jmp
or
push
shrb
adcb
xor
in
lea
out
xlat
xlat
xchg
xchg
or
testb
pop
lret
cmpsb
adc
sbb
dec
jecxz
adc
arpl
xor
lcall
movsb
sarl
adc
inc
ja
cmp
mov
je
pop
je
jle
lods
push
aad
fwait
outsb
lret
xchg
test
pop
into
sahf
add
xchg
lret
xlat
dec
lods
mov
orb
jmp
mov
data16
cmp
sete
sub
and
shll
add
lods
jp
jne
jo
addr16
test
sbb
and
cmpsb
insb
add
outsb
push
mov
lods
movsb
push
mov
fidivrl
clc
xor
mov
imul
pop
fdivl
jle
mov
jb
scas
pop
aaa
adc
push
adc
xor
lahf
in
jp
shl
mov
or
pop
jge
xor
dec
mov
fiaddl
xchg
data16
jp
xchg
hlt
lock
and
push
jno
mulb
mov
std
inc
sbb
pusha
loop
or
lods
mov
out
xor
jo
cli
mull
mov
shl
inc
nop
nop
fnstcw
mov
fptan
hlt
pop
inc
and
mov
jp
stc
std
mov
js
xlat
sub
sbb
int3
je
mov
and
lahf
test
in
mov
or
pop
mov
out
cmc
mov
fldt
jle
in
sbb
sbbb
xchg
sub
mov
xchg
mov
pop
int
loope
jo
int3
scas
sub
ss
sahf
jno
sbb
cmp
popa
mov
aaa
sarl
test
push
mov
inc
loopne
and
jns
or
xlat
sbb
pop
or
lods
sub
test
test
xchg
out
inc
jle
leave
adc
cmc
out
dec
jo
mov
jl
cmpb
mov
outsl
adc
cmp
mov
pop
mov
add
daa
nop
or
pop
sbb
pusha
pop
and
mov
pop
push
movsb
or
cmp
aas
pop
cmp
fdivrs
mov
leave
xor
push
in
add
push
ja
enter
fdiv
xchg
test
xor
aas
add
fwait
mov
repz
mov
pop
in
out
lret
mov
cmp
mov
sub
je
lds
fnstcw
dec
xor
lret
lahf
push
fists
loopne
dec
add
sub
pop
mov
aad
mov
loop
cmpsb
pop
xchg
or
fs
sub
les
ficoms
adc
mov
outsb
flds
lret
mov
test
rcrl
mov
push
cmp
cwtl
jg
inc
fs
jae
lcall
out
fisttpll
shll
imul
lods
stos
insl
fsts
push
popf
fmul
push
sub
sub
jo
xchg
stos
fimuls
out
push
loope
pop
pop
rorb
and
and
jge
jbe
int3
shlb
add
mov
mov
dec
call
repnz
dec
add
cmpl
jmp
xchg
scas
sahf
stos
mov
fcoms
idiv
sub
cmp
data16
out
inc
adc
negb
bound
out
mov
test
adc
or
jnp
sarb
xchg
je
dec
shll
ret
mov
ds
testl
out
fwait
test
jo
adc
iret
jge
ret
repz
or
and
cltd
adc
inc
mov
pop
push
sbb
dec
icebp
call
outsb
and
icebp
fdecstp
mov
in
push
stos
stc
cltd
sub
int
adc
jecxz
ret
or
xchg
xor
jb
cmpb
xor
cld
fcoml
lods
aaa
int
int
or
add
sbb
xor
adc
push
cli
ss
data16
fildl
push
int3
adc
jb
push
lea
jbe
add
popf
or
add
dec
and
cmp
inc
push
add
ljmp
and
std
test
cmp
out
out
fs
pop
fldt
add
jle,pn
push
arpl
and
dec
out
cmp
push
mov
and
aas
outsb
jmp
fwait
arpl
clc
mov
out
stos
js
cmp
movsl
ss
jne
adc
cld
test
ret
jg
in
clc
mov
push
dec
sbb
xor
push
arpl
mov
es
fwait
ror
pusha
or
pop
inc
gs
stos
jbe
pop
scas
lods
loope
hlt
mov
int3
xor
or
mov
lock
ja
xor
sub
lea
and
shlb
gs
loop
fcomip
int
pop
cmpsb
mov
xchg
stos
xcrypt-cfb
cmpsl
mov
roll
pop
cli
movsl
inc
lds
and
mov
out
mov
ret
mov
mov
cmp
or
sub
sbb
iret
aaa
jno
push
or
aam
out
cltd
sarb
fwait
test
cmp
movsl
pop
push
or
ljmp
sub
je
cmp
mov
xchg
aam
mov
push
jbe
aam
mov
mov
cmpsb
scas
fsts
mov
add
subl
cwtl
dec
mov
dec
jae
pop
cltd
jo
rol
adc
call
xor
fiadds
mov
lret
dec
xchg
jo
xor
in
pushf
mov
mov
push
pop
push
mov
push
mov
and
or
sti
fs
cmpsl
adc
sub
das
cmpsb
inc
and
mov
inc
mov
test
arpl
cmpl
loope
lret
add
sbb
push
imul
pop
ret
jb
popf
inc
ja
jmp
jo
in
mov
leave
das
pop
data16
sbb
out
xchg
fdiv
mov
lahf
dec
jno
cmp
rcrb
lea
mov
mov
dec
add
rorl
vpunpcklqdq
sub
test
or
out
push
shll
pop
mov
mov
add
cltd
adc
sahf
jb
sub
int
xor
mov
and
iret
dec
mov
enter
dec
inc
push
jl
iret
mov
cmp
xor
cmp
inc
mov
divl
out
fidivrs
lcall
adc
shl
sub
in
jg
loopne
lods
cltd
push
pop
xorb
test
inc
out
scas
les
je
cmp
iret
insl
sbb
add
je
idivl
sub
mov
pusha
xchg
mov
test
and
aad
and
cmp
repnz
push
mov
jno
cmpsb
jp
jb
xorb
out
cmp
jg
inc
xchg
sbb
push
sub
mov
adc
jns
wbinvd
mov
lds
mov
dec
dec
andb
mov
movsl
mov
pop
xchg
es
in
dec
lods
shr
daa
mov
or
sbb
pop
loope
sub
pop
ret
mov
and
ds
rclb
notl
cmp
push
movsb
lds
xor
icebp
loopne
xlat
scas
inc
push
dec
dec
pusha
sbb
add
fdivrs
push
into
lret
call
clc
rolb
dec
jae
popf
add
pushl
rcl
adc
jle
xchg
mov
pop
xchg
adc
sbb
lret
pop
pop
pop
inc
mov
lods
lods
outsl
sarl
mov
mov
int
or
cmp
cwtl
sbb
bound
test
cs
shrl
test
pop
inc
ret
int
xor
xchg
push
add
inc
out
outsb
and
sbb
mov
pop
cmp
xchg
out
xor
in
sbb
adc
inc
scas
xor
adc
jo
and
cltd
ja
mov
nop
subl
add
xor
push
pop
dec
jno
out
sub
jl
ja
gs
push
clc
sti
adc
dec
jg
movsl
xchg
cmp
sti
jno
cmp
mov
or
aam
jae
insl
cmp
bndldx
rcl
jb
sbb
cs
aaa
push
lret
js
sub
push
xor
pop
aad
cmp
and
in
arpl
sbb
outsb
loopne
jge
mov
xor
sub
addr16
adc
test
aaa
dec
or
stc
adc
outsb
sbb
or
mov
out
fbstp
test
inc
into
scas
arpl
mov
xchg
dec
adc
rorb
xor
push
pop
mov
pop
gs
pop
test
mov
xor
test
xchg
jns
lcall
inc
imul
add
mov
adc
arpl
xchg
ret
push
xor
jns
dec
insb
push
jecxz
sub
dec
or
lahf
jl
push
dec
out
xor
jno
jne
mov
imul
fadds
dec
pop
pop
sbb
incl
ret
lcall
pop
pop
push
adc
test
aam
mov
xchg
add
xchg
dec
incl
in
cwtl
sbb
inc
test
loop
pop
imul
inc
and
pusha
lea
movsl
insl
sbb
daa
push
dec
lret
cmp
pop
stc
cmp
cli
adc
fcmovb
mov
adc
les
test
push
jbe
and
push
shrl
cmpsb
cmpsb
mov
xor
cmp
xchg
popf
jnp
cli
cmp
and
cs
in
fwait
add
stos
jle
add
mov
pop
cmp
ud2
out
adc
mov
mov
or
iret
out
sbb
sub
lahf
xor
mov
or
imul
and
pop
fucomi
jecxz
push
cwtl
mov
test
jl
push
mov
cmp
sarb
xor
or
out
incl
sbb
adc
mov
enter
mov
xlat
loope
pop
jbe
and
adc
cmpsl
jg
jbe
andl
aas
sahf
lds
outsl
outsl
pop
lret
pop
mov
mov
xchg
inc
or
cmp
push
aas
lock
pusha
mov
pop
or
in
cmp
pop
icebp
xlat
int3
dec
inc
rorb
pusha
dec
sub
jg
sbb
into
aad
mov
inc
loop
fimull
fsubrp
xor
mov
xchg
int
loope
xor
cltd
xchg
out
xrelease
stos
xor
in
hlt
outsb
push
pop
sub
add
cmp
out
push
mov
mov
sahf
fs
lds
imul
mov
adc
cmc
js
pop
and
shrl
loopne
into
mov
sbb
loope
fnstenv
sub
in
cld
fwait
out
aad
mov
scas
pop
pusha
sbb
fcomps
cmp
and
dec
dec
gs
pushf
xchg
je
pop
sbb
jg
outsb
inc
mov
xchg
jecxz
push
adc
inc
pop
test
adc
xchg
push
mov
adc
in
push
xchg
shlb
xchg
sbb
out
je
insb
fnstcw
or
js
mov
popf
push
pop
jns
dec
dec
aas
xchg
lods
mov
cmp
xchg
idivb
call
sbb
mov
xlat
jp
sbb
pop
les
sub
xchg
in
dec
cmc
icebp
adc
imul
jb
mov
shrl
sbbl
xor
jp
ds
push
aaa
sub
lds
mov
mov
dec
sbb
mov
mov
add
shrb
movsb
pop
mov
or
mov
shll
imul
xlat
xor
sahf
dec
insl
aaa
and
push
sbb
stos
inc
inc
clc
movsb
jmp
mov
push
mov
cmp
lret
jo
pop
inc
inc
pop
out
mov
mov
and
cltd
repz
adc
lahf
scas
push
jg
mov
jl
ljmp
insb
pop
push
fistps
mov
dec
cwtl
aad
xor
sbb
in
jns
dec
in
out
or
pop
adc
scas
add
jnp
clc
dec
rcrb
sub
repnz
mov
pop
cmpsl
lea
in
ffreep
pusha
cltd
mov
adc
or
pop
pop
pop
xor
cmp
mov
sub
sub
inc
adc
jae
xchg
cli
ret
push
xchg
std
inc
aaa
xor
les
or
and
xchg
mov
imul
xor
xchg
jae
sarb
jo
mov
sbb
loop
mov
jno,pt
mov
mov
rorl
jb
jmp
jo
or
sbb
shll
fistps
xor
fcmove
dec
lods
pusha
jp
aas
out
gs
outsl
dec
sub
and
and
arpl
fimull
xchg
mov
inc
ds
jle
cmpsl
jne
mov
sbb
ficompl
push
or
iret
xor
iret
sub
loope
and
xchg
xchg
mov
aaa
ss
add
and
or
popa
push
mov
je
push
mov
in
mov
xchg
lods
mov
int
push
movsb
mov
push
mov
pop
jp
sbb
inc
movsb
inc
lock
xchg
cs
sbb
mov
mov
int3
test
jle
xor
bound
adc
stos
mov
pop
call
dec
call
aam
test
add
fistl
arpl
mov
and
xchg
cmp
fiaddl
loope
inc
inc
push
repz
mov
mov
or
xlat
mov
push
or
dec
xorl
add
std
inc
cmp
repz
repz
mov
into
xor
in
hlt
enter
jle
test
out
cld
ret
lods
jno
fcoml
add
ret
cld
call
repz
in
jo
xchg
lods
sbb
or
xchg
fsubrl
or
xchg
push
jp
jae
inc
push
or
out
adc
into
xchg
es
out
ds
mov
adc
cmp
mov
mov
push
pop
pop
or
repnz
fcompl
scas
int3
mov
pop
test
insl
sub
jns
inc
jno
in
inc
fwait
aam
and
fmull
push
add
fsub
inc
dec
fstl
sub
fcmove
dec
cltd
sub
mov
cmc
or
in
pop
shr
pop
pop
mov
and
xor
subb
ds
add
cmp
mov
xlat
je
mov
jb,pt
scas
outsb
dec
adcl
jp
inc
or
das
gs
add
enter
lret
scas
jo
jmp
fsub
cmp
mov
lds
mov
sub
aaa
fldl
test
rcll
dec
inc
xlat
xchg
dec
int3
jo
sbb
int
movsb
das
fldt
daa
fbld
xor
out
xor
jg
adc
pop
xchg
pop
out
mov
dec
jnp
sbb
cmpsb
repnz
xor
jg
aaa
cmp
xor
hlt
jp
and
inc
ljmp
fwait
rep
or
or
orl
dec
xchg
xor
inc
loopne
je
ds
sbbl
aam
or
out
push
out
push
lods
mov
jnp
ret
push
outsl
jne
or
adc
mov
sbb
xor
pop
pushf
jl
ljmp
btc
out
std
imul
pop
incb
cmp
inc
xor
xchg
nop
lock
xlat
adc
and
psadbw
sub
shl
shlb
sub
inc
aam
into
pop
test
test
imul
xchg
xor
stc
iret
movsl
mov
imul
jnp
je
cmp
sub
adcl
inc
mov
jmp
dec
mov
fcoml
popf
cld
arpl
lea
scas
cmp
jecxz
xchg
push
adc
dec
mov
pop
mov
push
jecxz
pop
xchg
or
push
data16
lahf
into
add
xor
xchg
mov
mov
mov
loopne
or
arpl
mov
rcll
add
das
push
xchg
mov
lock
test
imul
sbbl
sahf
dec
cmpsb
and
xchg
jb
cmp
mov
xchg
add
jno
adc
incb
test
mov
mov
xor
aam
jo
mov
enter
lods
movsl
fistl
loope
push
lret
out
jae
adc
bound
repz
stc
in
jle
mov
sbb
cmp
out
leave
fcmovu
das
aaa
loope
lret
fwait
mov
fld
mov
int3
push
shlb
in
cs
sub
pop
cmp
out
inc
nop
pop
inc
xchg
insl
mov
les
ljmp
insb
les
scas
mov
sbb
out
imul
adc
cwtl
adc
ljmp
xor
cmc
xlat
sbb
jmp
inc
sti
xchg
es
out
jo
mov
and
pop
adcb
sbb
pop
and
dec
pop
insb
mov
loop
mov
dec
lcall
adc
push
pusha
cmp
mov
or
or
scas
inc
clc
pushf
lods
push
inc
mov
in
jb
adc
lcall
push
mov
aas
stos
lea
mov
dec
and
stos
incl
sbb
jne
cmp
repz
in
hlt
cmc
jb
rcr
mov
sub
out
xchg
mov
andb
adc
shll
xchg
and
cwtl
mov
lea
jmp
movsl
and
sub
out
std
push
in
les
xchg
stos
out
pop
sbb
into
jne
aas
xchg
movsl
sbb
mov
rorb
xchg
jb
sbb
repnz
inc
fidivs
packuswb
popl
push
and
pop
loope
bound
xor
xchg
jne
cwtl
lds
mov
jge
mov
scas
lock
mov
out
rclb
push
or
cmp
xchg
lret
mov
mov
jo
cmc
mov
mov
push
shr
xchg
push
mov
sahf
dec
jne
add
pop
xor
outsb
xchg
out
xchg
out
call
inc
pop
sub
fiadds
shll
inc
add
out
jp
rorb
ds
mov
ret
dec
jnp
mov
jge
insb
lret
dec
jae
jns
sub
lret
shlb
jg
push
outsl
mov
iret
lcall
pop
push
xchg
cmc
ss
gs
mov
mov
hlt
mov
divl
cltd
lock
je,pn
lods
repz
icebp
out
les
in
aas
andl
loopne
sbb
das
jns
push
push
notb
cmp
negb
pop
fs
into
stc
leave
lea
inc
pushf
das
enter
adc
fsub
out
ljmp
jnp
cltd
mov
stos
mulb
dec
sub
pop
and
mov
mov
pop
in
sbb
xchg
lea
int3
int
and
popa
je
iret
fisttpll
mov
gs
mov
add
mov
mov
mov
or
ljmp
adc
fcomps
fs
pusha
in
dec
push
mov
popa
mov
pop
fwait
mov
sahf
add
cmc
push
lods
sub
icebp
cmp
push
cmp
pop
add
mov
imul
popf
leave
sbb
cmp
and
or
fnstsw
cmp
arpl
jo
add
cltd
roll
sub
fld
loopne
call
out
cmc
add
int
cmp
test
add
repz
add
adc
aaa
sub
xchg
inc
add
xor
or
sbb
stos
xchg
inc
sbb
sub
std
push
add
jnp
pop
push
outsl
and
dec
push
mov
jl
cwtl
lret
fcoml
sbb
dec
inc
je
xchg
arpl
xchg
or
add
cs
push
sahf
push
jbe
sbb
cmp
push
insb
in
fnstsw
and
add
pop
movsl
cmp
rcll
jne
xor
push
lret
sbb
test
nop
outsb
fwait
outsl
mov
inc
addr16
sbb
push
jp
push
jns
pushf
mull
sub
testl
push
cli
mov
lret
xchg
mov
out
mov
add
imul
add
addb
loop
lea
push
bound
adc
xchg
testl
mov
mov
adc
lock
lcall
mov
lahf
fildll
rcr
dec
mov
test
inc
lods
sbb
lods
ja
mov
cmp
add
stc
ss
and
jns
sbb
sbb
jae
outsb
mov
mov
dec
cmp
sub
xchg
test
xor
ret
and
out
cld
mov
or
cmpsl
mov
push
mov
push
sub
ret
mov
call
addr16
rol
push
aam
test
popa
inc
pmullw
stos
daa
das
out
ret
push
rcrl
rcrl
sbb
lods
push
mov
addl
push
mov
jp
jbe
jmp
adc
push
paddd
mov
adc
inc
fisubl
fcmove
xor
popa
cmp
push
sub
mov
inc
or
mov
inc
lds
sahf
jns
in
fs
xor
outsl
test
aas
ljmp
xchg
popf
and
xor
outsl
popf
or
jl
xchg
inc
mov
xorb
cmp
sbb
les
fcomps
pop
call
shll
push
or
sbb
stos
cmp
cmp
or
je
incb
xchg
jae
sbb
sbb
data16
xor
xchg
cmc
test
push
jg
add
icebp
jecxz
bound
add
sub
inc
pop
in
adc
fsubrs
jo
subb
cmpsb
insl
adc
mov
mov
sub
xor
pop
in
notb
movsb
jge
xchg
in
repz
mov
mov
add
inc
mov
adc
mov
sbb
cmp
ficoms
stos
test
add
xor
jecxz
or
xchg
inc
jae
insl
sbb
and
je
dec
bound
inc
in
cmp
cmpsl
sbb
lods
or
mov
jbe
ficoml
or
mov
pop
movsl
mov
lret
sar
fs
js
pop
xchg
push
jp
pop
addr16
adc
shl
mov
sub
imul
insb
xchg
scas
cwtl
push
push
push
sub
jl
loop
sarl
mov
loope
sbb
push
or
sbb
jl
jne
pushf
push
rclb
fistps
cmpsl
shlb
orb
fucomi
shll
add
cmp
pop
inc
aad
cmpsl
lods
icebp
jge
shrl
fwait
dec
push
mov
pop
jb
add
outsw
pop
xor
jecxz
cwtl
sub
cwtl
aam
movsb
push
int3
inc
mov
xchg
mov
call
push
repz
dec
pusha
xchg
aam
cltd
push
rolb
test
mov
cs
xchg
mov
fwait
dec
repz
push
loopne
cmc
lea
mov
mov
movsl
push
out
call
sbb
sub
shll
test
dec
fisubrl
xchg
rcll
scas
aaa
sub
jecxz
loopne
les
loopne
aas
adc
into
cmp
ret
lds
out
dec
test
cmp
jge
nop
adc
mov
sub
fimuls
pop
or
test
pop
push
push
jnp
or
and
jge
push
sti
pop
inc
sub
pop
enter
cmp
add
pusha
lods
jb
or
sub
mov
andb
les
push
jb
sahf
mov
mov
outsl
stc
add
test
pop
add
push
mov
insl
adcl
mov
jg
clc
loopne
push
mov
xchg
movsb
rorl
fdivl
xor
inc
lods
fsubrs
add
cmp
mov
test
xchg
mov
bound
int
inc
xchg
js
dec
cmp
clc
daa
notl
cmp
mov
xor
dec
lret
add
xlat
fsubs
jae
jns
mov
std
repz
xchg
push
jo
aam
and
jb
std
mov
dec
and
ret
pop
sbb
xchg
adc
jle
aaa
add
lret
cli
cmp
pop
fldt
idiv
push
sbb
in
inc
cmp
adc
outsb
call
outsb
popf
out
mov
dec
cmpsb
enter
adc
add
or
jp
dec
flds
ror
adc
cli
test
shrb
leave
xchg
xor
pop
rolb
adc
rorl
inc
roll
push
stos
mov
inc
push
test
andb
dec
pusha
xchg
out
cmp
lahf
js
std
fstpt
adc
out
jl
or
ficomps
and
add
or
jg
idivb
mov
adc
sbb
jns
sbb
dec
mov
mov
fisttpll
mov
dec
pop
ret
lds
adc
lds
hlt
cmpsb
mov
cltd
lret
add
sbb
popf
mov
incl
cli
inc
or
jnp
sub
xor
into
add
push
andb
scas
mov
cmp
aaa
jmp
adc
jle
xchg
push
and
in
dec
ficomps
rcll
mov
add
push
icebp
test
jle
or
into
push
sbb
or
xor
stc
shrl
faddl
cli
sti
sub
pop
subl
inc
ljmp
ret
loope
call
int
cli
mov
pop
jge
adc
add
add
xor
adc
push
add
js
outsl
mov
rep
and
out
mov
adc
sbb
or
adc
out
mov
lods
xchg
push
pop
int3
mov
sbb
push
mov
in
cmp
add
gs
xchg
or
std
or
sbb
mov
pusha
adc
xor
sti
insb
jle
push
jae
ret
pop
and
int
mov
xor
rol
mov
insl
shlb
and
loop
or
sub
cltd
popa
jecxz
xor
sbb
aaa
push
ds
xchg
cmp
inc
je
adc
std
andl
pushl
push
inc
mov
insl
adc
mov
xchg
enter
mov
mov
mov
fs
lcall
test
xchg
pusha
pop
psubusw
arpl
imulb
repz
mov
scas
push
xor
lock
xor
and
and
jg
jne
cmp
lock
xchg
popf
mov
in
divb
icebp
mov
or
rcll
mov
add
adc
push
or
and
movsl
movsl
lcall
rolb
movsl
cmp
jns
or
mov
sbb
xor
jp
xor
fisubrs
sbb
out
xchg
mov
lret
add
push
add
arpl
jmp
mov
call
int
mov
sub
xlat
sub
mov
mov
mov
shrl
dec
pop
int
push
push
insb
mov
in
gs
arpl
lock
ss
dec
pop
ret
and
pop
xor
jge
fmul
out
or
andb
testb
cmp
mov
repz
inc
movsb
and
xor
pop
mov
mov
incl
sub
xchg
adc
gs
nop
sbb
push
cmpsl
ret
pop
test
push
scas
lods
mov
test
jg
jle
imul
out
outsb
repnz
arpl
inc
mov
pop
divb
leave
sbb
pop
adc
daa
jp
and
insb
pushf
xorl
jb
or
mov
test
add
insb
adc
cwtl
fwait
outsb
xchg
sub
pop
mov
fsubrp
push
pop
jecxz
inc
stos
inc
out
fwait
pop
ja
jmp
dec
ss
sar
xchg
shlb
pop
fimuls
mov
add
mov
sbb
pop
ljmp
xchg
jg
decb
sbb
xor
xor
out
xchg
bound
lods
adc
test
mov
push
add
jge
fiaddl
cmp
dec
subl
clc
das
xchg
ljmp
daa
sahf
xchg
test
sub
inc
subb
pushf
jns
jmp
push
push
adc
pop
add
scas
and
sub
jecxz
xchg
sbb
ds
test
mov
je
sbb
cli
jnp
mov
orb
fs
shr
sub
scas
test
dec
push
in
adc
mov
and
call
js
mov
or
daa
add
add
das
lcall
mov
js
cli
stos
mov
jg
pop
fbstp
and
nop
or
push
pusha
dec
out
mov
mov
mov
lock
js
xchg
arpl
push
data16
add
pop
adc
sbb
xchg
push
out
div
les
dec
mov
dec
arpl
push
xor
fstpt
stos
sbb
xchg
in
pop
cld
inc
std
dec
cli
notb
push
scas
inc
push
xchg
pop
aaa
scas
push
aam
pop
lahf
test
inc
dec
mov
aam
adc
insl
mov
dec
ja
xor
out
shr
xor
add
adc
lock
stc
or
cli
aad
outsb
repz
cmpl
adc
sub
insl
je
sub
cli
std
and
testl
xchg
adc
push
ss
push
pop
lods
std
lcall
sub
jb
ret
jg
add
dec
iret
mov
lret
addb
out
adc
out
in
sub
lock
pop
adc
repnz
or
jmp
cmp
jge
sahf
sbb
fadds
lock
ds
mov
cld
cs
out
and
les
and
pop
mov
mov
movsb
inc
out
mov
pop
in
push
jnp
jne
mov
test
shr
xchg
test
sbb
mov
mov
rcll
xor
inc
push
cltd
int3
je
es
mov
call
adc
jge
in
xchg
popa
cwtl
int
pop
mov
push
push
push
pop
jmp
sub
xor
lret
iret
or
arpl
test
imul
je
cmovae
jge
stos
inc
mov
mov
imull
js
popw
addr16
sbb
dec
cmp
push
push
jo
cli
pushf
mov
xchg
jb
mov
repz
xchg
mov
jns
pop
insb
xor
scas
pop
outsb
and
dec
mov
je
ja
adc
pop
xchg
xor
pop
or
cli
mov
fidivrl
pushf
mov
jg
jb
pop
sbb
ret
adc
outsb
adc
cmpb
insl
mov
mov
int3
daa
stos
daa
cmp
sbb
dec
pusha
movsl
loopne
shll
sub
mov
inc
add
or
dec
loop
scas
sahf
xchg
xor
cmp
loop
mov
xchg
sub
add
mov
jp
dec
inc
push
inc
jle
jno
jl
xor
dec
nop
andb
or
pop
sbb
mov
in
xor
inc
xor
enter
cmp
fistps
ret
inc
cwtl
fstpl
cli
jge
out
inc
fadds
mov
or
xchg
daa
and
sbb
push
adc
pop
inc
das
jae
cmpsb
dec
hlt
cmp
push
int3
dec
mov
jb
xor
push
jl
xor
mov
jne
lahf
out
popa
repz
inc
mov
mov
xor
popa
gs
xchg
and
jb
ljmp
cmpsb
push
mov
aam
dec
pop
shrl
nop
xchg
mov
leave
and
in
pop
icebp
mov
mov
sub
sbb
mov
xor
rorl
or
jns
sbb
mov
lds
pop
push
negl
loopne
xchg
rolb
fbld
fs
push
scas
aas
pop
xchg
xchg
xchg
sub
repz
into
repz
push
sbb
sub
and
sbbb
jb
sahf
mov
fisttpll
sbbb
stc
push
imul
dec
xor
inc
pop
jmp
pop
add
fwait
mov
lret
mov
pop
mov
lods
sub
or
cmpsl
jnp
mov
mov
or
xor
es
inc
cmp
imul
insl
icebp
xchg
aad
loope
mov
adc
jae
insl
lds
adc
mov
jge
stos
mov
push
shr
in
add
lret
loopne
or
jae
lcall
push
push
pop
and
popf
dec
lahf
icebp
fiadds
loope
mov
adc
pop
movaps
stos
daa
jo
in
je
add
repz
clc
xorb
gs
and
sbb
fcoml
sbb
fsubrl
add
adc
out
cltd
pop
mov
dec
push
pop
test
enter
mov
cli
push
add
dec
jno
push
or
cmp
xor
pop
loope
fimuls
in
xor
pop
outsb
pop
sub
out
dec
in
jge
inc
movntq
loopne
shl
stos
push
mov
es
sbb
adc
ss
inc
jbe
mov
sbb
clc
mov
add
xchg
sub
outsl
fiadds
inc
addl
push
nop
push
repz
jle
pop
cmp
cmp
cmp
sub
lahf
sub
movsb
mov
jae
push
pop
xchg
test
pop
stc
arpl
or
sub
mov
in
push
pop
xchg
mov
sbb
sub
ret
or
rolb
lods
or
ror
in
inc
pop
in
aas
jb
psubd
sarb
adc
sahf
push
xlat
rep
push
xor
int3
add
or
das
adc
sub
cwtl
xchg
aaa
mov
inc
mov
pop
repnz
push
lock
in
ret
push
mov
or
cs
bound
fiadds
jno
out
or
outsb
sbb
mov
imul
push
or
add
mov
ljmp
iret
mov
sbb
push
in
subps
mov
push
fwait
mov
pop
loopne
xlat
pop
iret
sbb
es
or
in
repnz
test
stos
pop
inc
xchg
scas
rolb
fsubrs
xchg
jno
inc
xchg
jmp
sbb
push
out
ret
inc
notb
movb
shrb
push
xchg
and
hlt
es
mov
adc
int
fldl
xchg
pop
sbb
stos
loopne,pt
scas
jl
mov
sbb
test
loop
or
or
mov
add
or
call
aas
or
enter
idivl
mov
test
mov
add
test
sub
push
xchg
out
mov
sbb
jnp
jo
cmc
sbb
cmc
mov
sbb
mov
and
cmp
fiadds
stc
sub
cmp
icebp
js
sahf
jecxz
xchg
lds
pusha
es
adc
lds
mov
shl
mov
or
cmp
xchg
push
lahf
int3
mov
mov
pop
push
fucomi
lock
jne
push
mov
pop
mov
out
popa
mov
es
xchg
cmp
ficoms
lea
inc
cmp
jne
jg
rol
mov
mov
inc
sbb
sbb
test
shr
insb
jecxz
rorb
push
xchg
lods
daa
push
add
mov
es
xchg
cmp
xor
int3
mov
cmp
lds
push
xchg
jg
mov
mov
sbb
test
xor
popf
sub
cmp
mov
cmp
mov
add
xor
pop
dec
call
cmc
cmp
and
cmc
lahf
inc
icebp
ret
xlat
jg
pop
pfrsqrt
mov
js
jp
xorb
jl
mov
push
ss
lret
int3
sbb
fisubs
xchg
xchg
mov
adc
inc
add
fcmovnb
cltd
or
add
dec
rorb
aaa
je
sub
out
popf
fisttpll
sbbb
pop
lods
lret
test
sbb
lret
push
add
repnz
push
bound
jns
movsl
std
push
cli
popa
jmp
jl
adc
cmp
mov
add
push
rcrb
mov
imul
sub
in
lret
xor
xchg
mov
sbb
jae
aad
ds
cmc
orb
pop
cmc
jbe
fwait
cmp
dec
dec
cwtl
push
cmp
or
ret
sbb
sub
cmp
or
add
xor
push
mov
mov
xchg
xor
insl
mov
mov
insl
sub
and
xor
xchg
inc
xor
cmp
lret
pop
pop
xchg
or
dec
imul
add
rcr
or
pop
jp
lds
mov
mov
nop
das
lods
aam
push
frndint
pop
shlb
ja
or
mov
aaa
or
dec
dec
xor
push
ret
insb
out
mov
cmp
mov
or
imulb
ficomps
inc
mov
test
adcl
scas
sub
cmp
test
jg
jae
shlb
jbe
cmpsb
lahf
movsl
add
mov
jno
and
xor
adc
sbb
clc
lds
or
jns
jb
adc
clc
jae
mov
pop
out
mov
mov
xchg
fisttps
inc
movsb
icebp
push
push
jno
std
pop
push
rol
adc
xor
adc
adc
ljmp
push
lret
push
fildll
cmp
jnp
pop
push
cmpsl
test
ret
pop
icebp
mov
imul
jno
pop
das
jno
xchg
ret
cmp
jae
jne
das
sub
xchg
xor
and
push
sbb
mov
shlb
cmp
add
inc
xor
aaa
push
mov
mov
shl
das
test
sbb
or
jmp
mov
sub
das
adc
mov
cmpsl
add
dec
popa
pop
repnz
loope
pop
or
stos
and
and
aaa
xchg
xchg
das
add
inc
dec
roll
push
jne
adc
hlt
int
and
jno
jnp
fidivrl
mov
add
xor
stc
sbb
and
stc
loop
in
or
fimull
mov
fldl
sbb
fistl
dec
nop
repz
mov
sbb
fwait
jb
push
fldl
or
cli
dec
inc
mov
xorl
mov
lods
adc
cmp
nopl
add
pop
sarl
mov
xchg
std
push
xchg
xlat
pop
lods
imul
loop
jecxz
fsubp
mov
mov
sbb
pop
out
ja
adc
sub
std
fldcw
adc
stc
sub
mov
sbb
sub
sbb
les
xchg
mov
sbb
popa
pushf
and
sub
test
clc
push
push
add
iret
aam
or
mov
loope
pop
mov
nop
inc
lcall
and
enter
mov
rcll
mov
adcb
cmovne
js
fisttpl
jo
out
sbb
and
xchg
sbb
fcompl
add
es
or
xrelease
sbb
dec
aaa
popf
sub
add
mov
scas
lret
mov
lahf
out
mov
sub
xor
xchg
inc
jne
ret
xchg
cli
xchg
rclb
movsb
lcall
inc
adc
mov
inc
jno
sbb
xlat
mov
int3
out
fistpll
leave
int
cmp
movsl
add
imul
into
jbe
push
in
push
scas
inc
rcrb
adc
mov
sub
cwtl
or
mov
mov
mov
stc
pushf
pop
sbb
push
jb
pop
and
push
dec
xlat
ljmp
push
push
sbb
jbe
sbb
or
xchg
push
outsl
pop
jbe
fstps
cmp
data16
jmp
pop
and
loope
adc
jp
sbb
addb
xchg
pop
ljmp
jno
inc
fcomp
pop
mov
js
xchg
or
mov
ldmxcsr
out
scas
scas
shlb
push
or
cmp
aas
in
push
iret
cmp
ret
fmuls
leave
inc
mov
sub
lret
rorb
jbe
outsb
xor
es
mov
int3
lea
cmp
xor
lea
pop
cmp
sub
fs
mov
xchg
pop
inc
movsb
aaa
mov
ljmp
sbb
jge
fildl
mov
jnp
in
insb
push
rorl
dec
adcb
inc
inc
mov
mov
js
pop
mov
stos
mov
stos
xor
shrl
das
pop
syscall
adc
insl
cld
jno
shll
loopne
jnp
sti
xor
xchg
inc
mov
pop
seta
scas
aad
mov
movsl
push
movsb
lods
sahf
jp
mov
out
movsl
ljmp
push
adc
or
outsb
mov
test
sar
daa
dec
fsubr
cmp
sbb
adc
out
mov
mov
lea
test
fcompl
enter
fwait
aas
xor
inc
or
faddl
or
inc
push
test
xchg
jno
test
dec
fst
cli
or
repz
lahf
mov
jae
sarl
sub
jecxz
cmpsl
out
mov
icebp
mov
insl
xlat
es
shrb
and
pusha
std
adc
add
adc
or
ret
mov
arpl
inc
xlat
cli
stos
pop
ljmp
cmp
int
imul
js
fisttps
jb
dec
mov
pusha
xchg
sbb
jp
sub
outsl
pop
lods
test
and
xchg
push
dec
nop
lahf
mov
xchg
insb
ret
lods
add
arpl
xor
leave
out
sbb
cmpsl
sub
mov
nop
std
adc
sbb
adc
iret
lret
cmc
scas
je
xor
add
inc
xor
stos
incl
mov
pop
test
push
sub
pop
xor
inc
pushl
jno
loopne
push
push
cmp
sahf
sbb
dec
js
xlat
out
cmc
jg
test
push
aam
sub
dec
scas
stc
lds
lock
arpl
or
lahf
das
repnz
sahf
notl
lds
mov
inc
adc
shll
sbb
or
sti
push
xchg
sbb
jbe
xor
push
add
inc
nop
mov
push
adc
cld
adc
cltd
mov
mov
jp
fildll
pop
iret
mov
xor
push
adc
sub
jecxz
cs
jge
es
in
or
lods
in
lods
mov
dec
and
cmp
sti
mov
sub
push
mov
jmp
xchg
insl
in
sbb
dec
jo
imul
imul
dec
mov
jo
sub
stos
and
mov
and
pop
cltd
push
movsb
rcl
jne
and
aam
lods
push
cmp
cmp
sbb
jns
roll
aas
xchg
xchg
jle
jmp
push
les
mov
pop
jl
jae
xor
loope
xchg
inc
cltd
or
mov
inc
push
in
fiadds
popf
lret
push
out
rcr
fistpll
push
in
mov
mov
inc
dec
pop
pop
xlat
in
stc
cmp
jp
cmp
cmp
sub
mov
push
xchg
cmp
je
pushf
scas
and
popa
push
sub
mov
xor
cmpsb
arpl
jnp
xchg
jo
add
mov
out
inc
mov
data16
lret
je
jecxz
das
in
sub
pop
in
ret
push
jne
xchg
jb
aas
test
adc
pushf
or
jbe
cmp
div
sbb
dec
std
jae
in
dec
xlat
push
rorb
xchg
push
mov
testl
dec
jb
pop
pusha
and
es
movzbl
insb
rep
xlat
xchg
jmp
in
lods
imul
pop
add
xchg
sbb
and
pop
adc
and
enter
fildll
xchg
jne
pop
jle
fstp
lahf
push
and
in
sahf
jge
ficompl
adc
movsl
xchg
ja
mov
xchg
xor
pop
jno
sbb
test
sbb
insl
lret
aam
pop
add
jmp
xor
lods
add
in
inc
imul
bound
and
addr16
es
imul
rcrl
inc
mov
xchg
aas
pop
sti
and
mov
scas
push
cmp
inc
sahf
xchg
movsl
stc
insl
xchg
pop
jo
or
pop
mov
popf
lods
jnp
shr
cmp
add
or
add
into
lcall
mov
jae
das
add
mov
mov
add
rcl
push
sbb
xor
in
cmpl
or
dec
out
fbld
pop
into
add
in
mov
mov
inc
dec
setge
mov
and
mov
int
imul
jle
lret
or
push
xchg
lcall
das
adcb
mov
sbb
pop
mov
inc
xor
sbb
dec
popa
cmp
pop
mov
stos
mov
mov
sbb
adc
popa
xchg
mov
mov
int
pop
sarl
jo
stos
push
into
and
and
dec
enter
insl
adc
sub
dec
push
testl
int3
mov
ret
in
out
sbb
aas
lret
das
popf
mov
pop
jg
xor
dec
int
out
mov
push
test
or
cmp
les
out
xor
js
cmp
sbb
pushf
lret
dec
into
aas
mov
push
shrl
outsb
insl
jns
jae
sarl
dec
fsub
je
mov
pushw
iret
adc
cmp
sbbl
or
jmp
fcompl
daa
out
add
popf
push
pop
xchg
inc
loopne
or
mov
xchg
addl
push
mov
jb
inc
inc
mov
imul
scas
in
mov
ja
repnz
into
cmp
cmp
adc
sub
pop
inc
cmp
fwait
xor
mov
test
call
sbb
out
pop
jne
pop
sub
shll
add
add
or
or
stos
and
add
shll
sbb
outsb
xchg
jo
mov
stc
roll
pusha
mov
stos
mov
cwtl
jbe
fwait
cli
cld
imul
ds
dec
fisubs
pushf
repz
orb
and
mov
in
fiaddl
xchg
push
les
test
cmp
or
add
add
pop
mov
jp
sbb
ja
inc
xchg
in
cmpsb
pop
leave
mov
jg
xor
or
jge
in
ja
adc
or
mov
mov
adc
xchg
enter
test
mov
lods
jmp
sti
out
imul
je
insb
mov
inc
mov
test
fisubl
out
inc
pop
cmp
outsl
xor
insl
sbb
and
pop
add
in
repz
into
cli
pop
loope
arpl
cli
push
rcrb
push
pop
arpl
repnz
dec
lock
rolb
sbb
test
inc
sub
inc
sahf
jae
push
add
sub
fwait
out
gs
stos
inc
dec
jns
jo
or
mov
cmp
jmp
clc
lods
ss
add
or
data16
xchg
ficoms
sbb
hlt
rcl
jb
push
fcompl
insb
enter
pop
add
pop
stc
mov
shrl
mov
xchg
and
rcll
sub
inc
push
mov
inc
test
in
out
clc
int3
xorl
imul
pop
xor
or
sbb
jbe
cmp
lret
bnd
inc
leave
adc
xchg
fildl
insb
iret
sub
dec
insl
int
jb
push
aas
sbbl
and
mov
inc
xor
arpl
dec
add
das
jnp
jle
adc
popa
mov
xchg
orl
mov
aam
hlt
aad
push
xor
mov
pop
cmp
mov
xchg
push
cmp
out
cs
or
sub
inc
in
flds
push
add
test
cmpsb
or
sbb
mov
push
cld
xor
xor
inc
add
sub
mov
cmc
test
xchg
in
xorl
lods
fmull
popa
ljmp
shlb
sbb
test
aaa
adc
push
push
test
xor
fmull
pop
xor
xchg
in
jp
cmp
mov
adc
and
data16
and
shrd
jl
ret
cmpsl
push
ror
ljmp
mov
fwait
test
dec
pop
sbb
xchg
pop
and
popf
xchg
call
loopne
mov
int3
das
jecxz
mov
cwtl
out
cltd
cmc
ret
leave
cmp
xchg
or
stos
shll
xchg
jnp
mov
ja
jns
fidivrl
mov
dec
insb
mov
and
neg
cwtl
iret
dec
int
js
test
pop
popa
cmp
push
xor
pushl
push
xchg
into
pop
pop
jle
in
insb
or
jnp
int3
add
pop
jl
mov
or
ljmp
aam
aas
cmp
xchg
stc
iret
mov
adc
inc
int3
pusha
and
scas
mov
fs
in
mov
lds
popf
sub
incb
jns
add
mov
xor
mov
pmaxub
adc
cmpsl
xchg
cltd
fsubrp
xor
adc
js
sbb
das
jecxz
jge
fs
out
loope
idiv
repz
fimull
xchg
and
cmp
sahf
fisttps
jp
lret
icebp
sbb
in
jmp
jg
sbb
and
cli
cmpl
dec
shlb
cmc
or
or
rcl
sbb
pop
lret
lds
ret
sbb
xor
movsb
data16
add
mov
icebp
sbb
inc
mov
mov
scas
cmpl
rolb
das
and
jns
xchg
or
and
add
add
test
xchg
sub
mov
mov
dec
jnp
pop
push
and
sahf
xlat
arpl
inc
add
loopne
jo
mov
std
push
out
cmp
or
fbld
nop
push
dec
lds
dec
sbb
gs
jmp
push
mov
out
inc
aaa
cmpsl
jg
mull
inc
cmp
shl
jo
sub
insl
jnp
xchg
sti
rcrb
fdivrl
test
cltd
repz
sub
mov
mov
subb
imul
adc
xchg
daa
insl
cld
bound
outsb
and
out
cmp
imul
push
dec
lcall
xor
daa
jmp
lock
repnz
mov
rcrb
repz
cltd
or
sub
int3
push
sti
loopne
insb
sbb
bound
pop
pop
stos
andb
loopne
or
adc
or
pop
mov
mov
fisttps
and
lds
out
loop
lds
cmp
out
fwait
pop
scas
test
jb
aas
lea
add
mov
push
mov
pop
dec
lock
jbe
and
sti
rclb
shll
mov
mov
xchg
cmp
icebp
sbb
xor
call
sbb
push
xchg
xor
out
ds
cmp
rolb
pop
and
xchg
xor
nop
jl
cmp
jae
clc
mov
fbld
adc
rorl
ljmp
rorl
mov
and
fstpt
enter
in
push
es
loop
mov
add
movsb
movnti
mov
cwtl
mov
nop
pushl
arpl
in
mov
adc
and
lods
test
jbe
or
pop
nop
adc
imul
fs
jb
stc
mov
jae
pushf
push
clc
xchg
sbb
or
mov
testb
add
call
movsl
imul
bound
es
fnstenv
bound
fisttps
xchg
xor
push
je
xchg
mov
add
pushf
repnz
xlat
pop
jmp
adc
int
jmp
push
mov
sub
mov
pop
mov
mov
xchg
mov
sbb
jb
pusha
jno
sub
add
sbb
inc
pop
shlb
cmp
xchg
xor
imul
mov
cltd
push
pop
shr
jnp
xor
sar
pop
xchg
imul
repz
ss
ljmp
and
shr
insl
push
mov
cs
inc
sbb
ljmp
pop
push
repnz
pop
lds
sub
jbe
mov
pop
test
cmp
arpl
or
xchg
sub
mov
xchg
add
mov
jns
mov
inc
insl
mov
rcrl
cmp
jnp
mov
sub
divb
mov
dec
lcall
mov
aas
mov
push
arpl
inc
shl
pusha
dec
call
bound
add
enter
bound
daa
in
or
jl
inc
add
adc
insb
out
mov
mov
jns
ds
inc
xor
push
addb
fnstsw
cli
cs
dec
fs
nop
xor
push
mov
clc
or
pop
mov
and
aad
jae
int3
rcrb
dec
outsb
inc
sbb
xor
es
lods
scas
sbb
int3
xor
xor
imull
test
out
adc
sti
mov
andb
call
cmc
xorb
push
xor
jmp
push
dec
adc
fisubrl
divb
scas
or
mov
test
or
ds
rcrb
cli
sahf
xor
xchg
and
loope
add
sti
push
jecxz
sub
popf
pop
test
fdivrp
stos
int
sub
nop
inc
andb
jbe
fisubl
cmp
pmaddwd
int
inc
or
jecxz
test
cmp
mov
or
inc
xchg
addl
icebp
dec
ja
aas
inc
add
sahf
fs
ja
cmpsb
lods
enter
pop
or
imul
out
pop
pop
lret
pop
fstps
add
shr
std
push
xchg
pushf
fwait
inc
stos
in
dec
pop
inc
fwait
nop
ret
jno
out
dec
sbb
jecxz
push
cmp
jecxz
aas
sbb
lds
leave
pop
sub
inc
mov
test
xrelease
push
xor
loop,pt
test
iret
or
dec
push
mov
sub
jmp
stc
inc
adc
stos
dec
sbb
jp
inc
ljmp
aas
pop
insl
in
shlb
sub
enter
incl
xchg
jge
mov
and
push
xchg
icebp
pop
aam
add
inc
es
lcall
in
ss
push
fisttps
sub
inc
jmp
outsl
xorb
cmp
in
cmp
push
aaa
jmp
imul
nop
stc
cmpsl
dec
pop
xlat
push
mov
mov
imul
mov
adc
or
sbb
sbb
incb
mov
jle
add
jmp
in
mov
jnp
sub
xlat
in
call
inc
stos
pop
pop
dec
mov
jp
int3
ficoml
and
loopne
and
out
push
xchg
fidivs
dec
and
mov
lea
xchg
mov
in
arpl
jmp
mov
add
orb
jmp
nop
add
int3
inc
sbb
sbb
pushf
test
dec
lret
mov
repz
cmp
xor
lcall
push
or
or
ror
adc
mov
stos
push
or
in
or
push
pop
dec
lods
cmp
sbbl
mov
pop
dec
movsb
lret
lods
js
sbb
movsl
pushf
dec
add
push
iret
push
and
xchg
outsl
in
lret
sub
pop
divb
pop
insb
aas
notl
add
cmp
jne
movl
sahf
or
push
inc
test
mov
loop
pop
ds
pop
cli
dec
xchg
movsb
mov
sar
xor
jge
jns
ficoml
repz
xorb
sub
cmc
shl
or
or
mov
mov
dec
or
inc
pusha
test
stos
sbbl
inc
and
sbb
cld
inc
pop
addl
and
aam
insl
pop
pop
sarl
pop
sbb
popa
and
addr16
push
in
das
jae
sti
xchg
call
sbb
aam
mov
out
icebp
lods
lods
and
push
imul
mov
popa
add
xchg
add
popa
or
shll
ja
ret
jnp
in
fdivr
or
scas
add
ljmp
add
push
cltd
xlat
test
add
lret
pop
nop
jp
or
sbb
xor
stos
cmp
call
stc
and
int
mov
sbb
lea
imul
dec
xorl
out
sbb
cmp
push
mov
ds
pop
js
jle
sub
inc
sbbl
leave
xchg
mov
xlat
cmpb
and
push
mov
xchg
dec
cmp
mov
insl
xor
adc
cmp
push
pop
inc
test
cmpsb
lea
fwait
cmpsb
fsubs
mov
imul
or
frstpm(287
stc
push
jo
jge
das
push
sub
outsb
jno
inc
cmc
sbb
sbb
and
pop
inc
aad
add
dec
mov
jg
in
or
aaa
cltd
pushf
jecxz
testl
and
movsb
rcr
pushf
popw
push
xor
lret
inc
push
pop
fidivrl
xorl
fidivrl
xchg
mov
inc
fcomps
int
pop
inc
jno
cmp
mov
js
adc
repz
adc
and
mov
jne
clc
xor
shl
fldenv
xchg
adc
cs
rcl
pop
stos
rorb
loope
into
pop
inc
push
and
add
imul
jne
lea
je
je
adc
mov
in
stc
jp
or
mov
jmp
inc
icebp
mov
ss
jo
mov
pop
enter
mov
inc
arpl
jnp
adc
mov
and
jne
mov
mov
inc
or
movsl
adc
negb
pop
fwait
mov
out
cmp
mov
lret
jecxz
xor
mov
or
xchg
mov
xchg
pop
lods
ja
inc
jbe
xchg
pushf
mov
sbb
dec
xchg
xorb
insb
push
xor
sti
test
push
adcb
mov
or
fwait
and
adc
aas
xlat
or
sbb
sbb
insl
push
repz
cmp
push
sti
rol
jns
mov
jbe
rolb
or
js
xchg
xchg
fiadds
mov
cmpsl
inc
test
pop
and
mov
xchg
subb
jge
mov
and
dec
cmc
pusha
push
data16
cltd
add
loop
adc
mov
shrb
ret
pop
xchg
shll
int
sub
sub
xor
test
int3
imul
shlb
adc
addr16
scas
dec
imul
movsb
sbb
adc
outsl
idivb
mov
icebp
das
push
add
and
adc
mov
lcall
mov
jg
adc
sub
loopne
adc
push
std
mov
dec
dec
mov
les
dec
bound
mov
inc
mov
pusha
cmpsl
into
pop
movb
pop
sub
sbb
mov
aas
xor
lea
dec
iret
imul
repnz
jp
xchg
and
and
cmp
adcb
movsl
out
jmp
imul
sbb
xor
jb
mov
stos
es
test
rol
adc
add
xchg
test
mov
add
add
add
dec
loop
fdiv
ss
and
js
movsl
xor
rorl
and
xor
adc
enter
add
xlat
xchg
icebp
lods
sbb
pop
test
and
pop
jecxz
lret
push
subl
and
and
mov
pop
shlb
fstpt
adc
shlb
in
xor
out
pop
mov
repnz
les
gs
js
mov
xor
mov
rcr
cmp
in
gs
data16
sbb
jno
gs
das
outsb
clc
in
fisubrs
fadd
enter
mov
sete
cmp
shll
outsl
cmp
pop
pop
pop
daa
add
xchg
xchg
or
mov
inc
les
test
imul
jae
jl
push
dec
adc
js
lods
in
inc
or
cwtl
xlat
jb
pop
icebp
mov
int3
inc
inc
jl
jae
call
call
popf
xor
push
sar
lret
cmpsl
popf
scas
pop
mov
dec
mov
jge
popf
call
sbb
nop
sub
es
cmp
insb
lahf
cli
lds
lret
inc
jno
fs
lock
call
dec
push
xor
ds
jae
outsl
sub
outsl
mov
inc
sub
dec
lcall
or
repz
xchg
adc
and
loop
out
dec
out
je
or
add
pop
shrl
pop
lea
pop
addr16
mov
and
push
adcl
jl
push
jle
dec
or
or
mov
push
jg
pop
jae
or
daa
out
or
pop
jb
inc
xor
dec
outsl
dec
sbb
xchg
mov
inc
jo
push
psllq
adc
xorb
or
test
sbbb
jl
fcomps
add
mov
mov
mov
aam
js
addr16
daa
or
mov
pushf
xchg
pop
stc
push
fmul
aaa
push
push
mov
adc
mov
sarl
mov
fs
arpl
mov
adc
mov
add
xorb
sub
lods
mov
repnz
xchg
sbb
aaa
stc
movsl
sbb
pop
push
xor
pop
cs
lret
fsubs
push
mov
mov
outsb
inc
addb
or
mov
inc
xor
es
mov
movsb
insl
repz
cmpsl
gs
inc
push
xor
pop
xor
lods
push
mov
dec
inc
xchg
in
lock
xchg
xor
mov
cld
out
mov
jne
pop
cli
bound
xchg
add
and
xlat
outsl
cmp
das
fildll
lahf
repz
mov
fld
mov
testl
das
mov
sbb
mov
push
sbb
pop
jmp
idivl
add
jnp
xor
lea
jmp
jle
pushf
push
test
sbb
pop
jg
sahf
out
addr16
inc
push
fs
push
mov
cli
pop
fcoml
or
and
jno
xchg
adc
inc
outsb
add
add
adc
leave
loopne
xor
jp
jge
in
lock
or
mov
jnp
lea
negl
cli
mov
addr16
aas
mov
es
mov
popa
leave
mov
sbb
pop
and
xor
mov
pop
jmp
int3
out
ljmpw
shl
scas
jbe
sub
subb
sub
pop
xchg
push
or
jle
scas
sti
and
icebp
push
roll
outsb
and
stos
in
or
and
stos
clc
mov
repz
andl
or
nop
insl
test
outsl
xor
push
jp
outsl
xlat
xchg
movsb
xlat
aas
ficoms
out
lret
xor
test
jbe
scas
fidivrs
ret
pusha
or
fsubrl
add
push
xchg
outsl
cmp
push
cmpsl
mov
sub
int3
jne
fs
test
inc
pop
push
pop
ljmp
lock
mov
je
cmp
cs
or
sbb
sbb
lret
adc
push
mov
add
cmp
mov
fwait
mov
and
rorl
daa
je
sar
int
mov
outsb
loope
enter
pop
xchg
pop
cmc
outsl
mov
sbb
mov
hlt
cmp
mov
imul
xchg
mov
fcmovbe
push
xlat
fsubrs
in
dec
or
mov
fs
outsb
push
mov
jne
mov
xchg
leave
and
ss
jmp
jb
fxtract
jge
cmpsl
push
outsl
gs
gs
or
jecxz
push
fldt
push
les
outsb
adc
inc
xchg
push
int3
icebp
mov
or
rcll
pop
insb
hlt
orl
dec
cmp
int
inc
sbb
and
mov
inc
idivb
xchg
pop
inc
push
mov
in
pop
outsl
movl
add
call
jb
sbb
jns
fbstp
or
sub
mov
jecxz
jmp
dec
int3
mov
aas
sub
int
stos
adc
fwait
dec
cmp
xor
jl
in
xchg
sub
enter
sbb
mov
aas
mov
aas
adc
ret
mov
js
addr16
adc
push
ja
xchg
push
in
call
fsubrs
jns
call
and
int
gs
rcr
adc
cli
push
lcall
mov
shrl
pop
mov
or
mov
mov
outsb
ror
or
adc
sbb
rclb
push
cwtl
loopne
sub
xchg
jo
push
popa
lret
adc
movsl
fsubrl
adc
push
dec
aad
imul
push
lret
pop
jno
fmull
and
outsb
mov
mov
icebp
test
mov
orl
loope
xor
lret
mov
pop
iret
sub
inc
xor
imul
push
fisubs
mulb
and
into
lahf
dec
push
ret
aam
fwait
rcrl
cmp
stos
movsb
jl
icebp
cmpsl
ret
push
push
push
cmp
push
xor
loop
lret
cltd
inc
in
clc
lea
ja
push
aam
add
add
jno
adc
jmp
daa
enter
sub
mov
fdiv
aam
ljmp
xchg
push
or
aaa
inc
inc
cmp
push
jne
enter
out
les
ljmp
icebp
ja
es
xor
pop
ljmp
arpl
mov
data16
lcall
sub
or
loope
sub
xchg
fcompp
roll
sbb
fld
gs
push
sbb
sbb
sti
sub
mov
cmpsl
pusha
icebp
inc
pop
sbb
adc
rclb
mov
outsb
iret
dec
flds
mov
mov
in
xor
sbbb
fldenv
inc
pushf
xor
and
test
adc
xor
cmp
lock
push
add
stos
outsl
por
inc
lds
or
sub
cld
xor
in
dec
inc
mov
cli
jnp
dec
ja
pop
cmp
sub
icebp
jae
sbb
inc
mov
mov
rcll
lods
aad
cltd
pop
iret
ret
adc
and
outsb
mov
jno
xor
adc
loopne
pop
stos
xchg
lret
mov
out
adc
ljmp
sub
pop
mov
adc
or
push
pop
jae
subl
imul
cmpsb
nop
aam
andb
or
push
lret
adc
lods
lods
mov
test
push
push
je
pop
ss
adc
push
test
int3
jge
ds
loop
mov
add
bound
push
in
dec
shl
sub
sub
sub
lods
mov
cld
neg
xorl
jb
sarl
pop
pop
lods
sbb
jo
ds
outsb
sbb
mov
and
lea
popa
mov
in
cmpsl
ja
push
mov
movsb
sbb
sbb
or
in
jbe
pusha
adc
sub
push
xor
jmp
jns
inc
test
xchg
xchg
dec
enter
ret
fistpll
stos
icebp
mov
inc
loop
jae
mov
std
push
xchg
stos
adc
ss
jno
pop
mov
in
or
loop
or
and
and
fwait
push
test
sti
test
std
stos
sti
fwait
jnp
cmpsl
sahf
scas
enter
or
fnstsw
repz
mov
pusha
roll
or
push
push
and
aas
iret
add
push
fidivl
insb
scas
push
sbb
mov
jb
dec
inc
cmp
stc
inc
loopne
push
push
fdivp
inc
pop
jbe
js
or
and
idivl
dec
inc
call
add
leave
jp
dec
push
sub
sub
addr16
lds
shlb
negb
gs
mov
js
push
je
fs
lods
sub
cmp
sub
push
adc
lcall
mov
xor
pop
adc
cmp
xor
inc
scas
inc
pop
popa
or
xchg
ficompl
push
ficomps
sbb
test
test
and
test
add
jge
or
or
adc
sub
pop
dec
lcall
mov
inc
jl
push
insb
rcll
fimull
rcll
mov
mov
push
int
dec
stos
pop
jg
dec
or
xor
data16
mov
mov
cmp
xchg
sub
add
xchg
shll
jecxz
pop
pop
loope
test
jl
xor
xchg
mov
outsl
pop
jecxz
xchg
dec
mov
ss
pop
push
push
mov
jg
jl
inc
es
iret
xchg
xor
stos
mov
or
adc
xchg
sbb
sahf
fistpll
xchg
xchg
bound
adc
nop
jns
fildl
repnz
push
mov
cmpsl
shll
sbb
sub
xor
fs
push
and
mov
sbb
pand
mov
push
enter
in
lcall
lods
mov
mov
fisttpl
lret
test
pop
stos
aaa
and
and
jp
out
repz
icebp
lods
pop
movsb
testl
mov
jb
xor
xor
aad
ret
sub
in
cld
mov
inc
fstps
jl
cmp
sub
push
repz
dec
jo
fcom
xor
xchg
adc
scas
cmp
fisubrl
jbe
push
sbbl
add
dec
lea
gs
add
ss
insb
inc
xchg
imul
push
adc
or
inc
into
pop
xchg
repnz
pop
nop
idivb
cmp
repz
dec
push
outsb
mov
into
pusha
mov
pop
jne
push
xchg
movsl
test
ret
cltd
repz
testl
adc
mov
fbstp
aad
inc
xchg
dec
sbb
shl
test
mov
inc
lahf
nop
ficoms
into
push
daa
mov
mov
xor
in
mov
mov
add
or
add
pushf
pop
xchg
mov
push
xchg
outsl
movsl
cs
jp
or
xchg
adc
lret
dec
repz
push
popf
push
loop
jge
sar
popf
cld
mov
mov
out
in
ret
popf
rolb
adc
mov
or
fists
jl
std
lods
stos
repnz
pop
cmp
enter
loope
daa
out
aas
scas
and
adcl
jae
jo
xchg
dec
pop
into
stos
pop
jge
mov
cwtl
add
aad
pusha
iret
call
idiv
sub
jecxz
mov
mov
es
push
out
jno
data16
imul
lea
stos
cmp
popf
mov
push
xchg
add
fwait
gs
jge
jbe
mov
hlt
add
add
mov
and
xchg
xchg
not
adc
mov
jno
jno
and
insl
adc
dec
push
lahf
mov
lahf
mov
xor
sahf
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fwait
sub
in
icebp
das
and
xor
addr16
sub
repnz
loop
ficompl
adc
sub
pop
mov
fiaddl
mov
daa
cmpl
pop
pop
loope
cmc
ret
xchg
mov
hlt
pop
or
xchg
jge
test
xchg
psllq
int
in
and
jl
mov
cwtl
negb
psubb
push
cltd
xchg
jae
mov
inc
mov
mov
mov
insb
jmp
aaa
mov
dec
outsb
cltd
dec
jle
jnp
and
imul
ja
cmp
les
rclb
jl
gs
push
mov
fisttpl
mov
push
movsb
lea
hlt
popa
cmp
inc
cs
sub
lahf
jg
cld
inc
fcmovbe
sub
jp
hlt
stc
mov
mov
out
lret
cltd
into
leave
fwait
add
es
jecxz
cmp
repz
fiaddl
or
shlb
ja
and
cmp
xor
pop
mov
jno
adc
xchg
inc
pop
scas
sahf
clc
adc
mov
mov
sub
add
jle
xor
xor
pop
add
lret
ret
repz
out
daa
pushl
mov
cltd
xchg
pop
les
arpl
fcomip
icebp
dec
xchg
in
adc
push
inc
jle
popf
xchg
xrelease
pop
aam
mov
push
push
cld
push
and
inc
jmp
adc
or
mov
push
sbb
xor
inc
push
out
push
mov
das
les
inc
inc
mov
push
xor
sub
or
mov
jecxz
pop
outsb
inc
and
movsb
xchg
cwtl
mov
or
ja
dec
fcmovu
mov
out
push
or
dec
je
sbbl
je
stos
outsl
or
pop
mov
push
lds
movsb
mov
pop
aas
jb
scas
cmp
js
and
fiaddl
jbe
mov
lock
in
adc
xchg
call
dec
dec
and
shlb
leave
cmp
int
push
mov
dec
ror
sub
sbb
add
aaa
fs
stc
mov
in
add
dec
leave
cmp
mov
int
loope
test
add
jle
ret
shll
rep
pop
lahf
dec
sahf
pop
bound
push
fiadds
test
mov
and
popf
mov
popf
mov
fcoms
xchg
cld
push
xchg
sbb
out
insl
sbb
in
imul
mov
testb
cs
enter
pop
and
aaa
xor
pop
lcall
lret
add
and
mulb
imul
sbb
mov
in
fisttpl
inc
jno
push
std
sbb
sbb
mov
fldl
imul
sarb
outsb
add
cmp
xchg
popa
jmp
or
shlb
fbld
es
rclb
or
cli
adc
xor
roll
call
cmpsb
fidivs
movsl
sub
xchg
fcmovu
jae
or
xor
or
mov
pop
jp
cs
mov
aam
mov
ds
inc
inc
mov
mov
push
pop
sub
cmp
cld
idivb
out
and
mov
xor
xor
popf
jbe
ljmp
ret
jmp
ljmp
shrl
xchg
jecxz
sub
sub
daa
jmp
add
xchg
lret
bound
cmp
or
mov
sbb
stos
psubd
add
xor
aam
or
mov
sbb
aad
inc
pusha
insl
inc
push
popf
push
stos
sub
orl
xchg
cmpb
js
xor
das
pop
and
je
std
mov
ja
notb
popa
pop
dec
pop
sbb
sbb
mov
push
xor
aaa
or
les
adc
xor
push
hlt
in
xchg
clc
push
mov
testb
pop
test
scas
xchg
xor
hlt
fcomps
repz
lea
in
test
xchg
or
push
dec
dec
ficoml
jg
icebp
push
push
stos
cmp
dec
mov
fwait
andl
xor
inc
add
aad
mov
push
pop
jg
sub
into
imul
add
fiaddl
flds
in
scas
xlat
inc
push
fwait
mov
cltd
cwtl
fadds
inc
hlt
sbb
sbb
leave
push
add
add
jae
inc
stc
jmp
pop
mov
loope
sub
and
push
stos
push
sahf
cli
std
sub
jbe
mov
test
add
sti
mov
std
std
and
sub
lock
cli
sbb
push
cmpsl
sahf
and
sti
sti
test
cwtl
popf
insb
lods
jl
xlat
or
je
mov
aaa
out
enter
xchg
mov
ret
cwtl
sub
lock
add
xor
mov
jl
dec
cmc
dec
mov
adc
dec
mov
add
cmpl
mov
pusha
bound
jne
movsb
xor
cmpsb
shlb
xchg
add
adc
mov
aam
pushf
xchg
fiadds
cmpsb
test
dec
fsubs
rcll
dec
fadds
das
mov
push
push
xchg
pushf
or
pushf
das
ljmp
hlt
adc
push
pop
ret
out
add
cmp
adc
jp
push
cld
lret
mov
xlat
and
int3
test
test
sub
rol
cmc
fstpl
lods
sbb
and
leave
xchg
adc
ds
fisttpll
in
jg
add
and
fld
mov
ret
mov
mov
mov
mov
mov
mov
xchg
inc
pop
push
sub
stos
sub
xor
jg
imul
push
jo
pop
jp
in
dec
pop
dec
insb
mov
movb
loopne
les
jl
negl
push
ret
xlat
ss
jmp
add
dec
outsl
sahf
movsl
xor
mov
push
les
iret
mov
cltd
inc
sbb
loopne
cmpsb
adc
popf
or
cld
add
xchg
mov
add
clc
negb
cmp
inc
je
mov
jg
fistps
lea
int3
and
add
push
adc
in
mov
les
pop
lods
inc
repz
add
inc
lds
ud1
mul
push
aad
fwait
inc
fdiv
push
ss
pop
lahf
rolb
xor
jle
or
add
mov
aam
mov
xchg
in
sbb
dec
xor
dec
loopne
adc
xor
insb
mov
orb
shll
pop
pop
xor
fldcw
addr16
rclb
inc
mov
daa
pop
std
mov
in
mov
jb
pop
scas
fbld
in
mov
push
and
ret
in
adc
mov
adc
ret
xor
aam
jnp
inc
clc
mov
dec
loopne
clc
sbb
dec
add
jg
mov
jmp
pop
loope
cmp
push
jne
adc
or
inc
outsl
mov
jae
sarl
cli
push
insb
lcall
insb
dec
stos
cld
subl
dec
xchg
xchg
insl
repz
push
xorl
push
imul
jge
sub
lea
shl
int3
fistps
mov
lahf
stos
pop
clc
and
shlb
icebp
jg
ds
lcall
inc
adc
lret
arpl
add
inc
lret
add
push
cld
mov
sub
mov
sarl
jp
mov
std
or
int
xor
push
in
mov
in
fsubl
jg
add
sahf
mov
subl
insb
xchg
inc
cmp
lret
mov
out
icebp
adc
lods
push
jl
lea
jae
push
shlb
fs
push
jge
adc
fisttpl
jnp
add
push
pop
mov
pop
dec
sbb
test
dec
sbb
and
popa
scas
lea
shlb
push
dec
popf
aad
xor
xor
cmp
adc
loope
jle
cmpsl
sub
bound
shll
push
sub
rclb
aas
sarb
scas
and
lods
jmp
sub
or
into
push
add
jnp
movsl
inc
push
lcall
shll
loop
push
fildl
stos
sbb
mov
xor
test
mov
jno
xchg
xchg
and
xor
push
jl
test
shrb
mov
dec
jae
std
aam
mov
or
xchg
cmpsl
dec
and
jno
jg
jno
in
pusha
dec
pop
xor
arpl
lret
sbb
adc
dec
xchg
cmp
jno
dec
add
push
test
mov
loope
sbb
dec
cmp
addr16
sub
sub
movsl
jp
sub
lods
sbb
xchg
test
mov
adc
stc
lods
dec
mov
daa
push
push
cld
dec
adc
jle
clc
cmp
int
test
pop
arpl
sbb
xlat
test
mov
mov
jl
or
xchg
xchg
and
ja
pop
movsb
ss
rol
inc
repz
push
sbb
mov
aad
mov
divl
adc
clc
inc
sahf
push
cmpsb
mov
insl
xor
push
xor
test
lock
fistl
dec
fs
mov
cmp
pop
fiaddl
aaa
xchg
jp
mov
inc
pop
in
jecxz
adc
aad
mov
cs
scas
cld
jg
jecxz
fidivrs
mov
out
mov
pop
cmp
stos
mov
mov
xchg
icebp
push
or
dec
daa
sub
scas
xor
pop
sarb
cmpsl
shrb
sbb
or
insl
jb
jo
mov
imul
mov
xor
jno
repnz
enter
ljmp
or
ljmp
jne
jnp
into
xor
jb
movsb
sbb
aaa
in
out
bound
sbb
mov
data16
repnz
into
cmp
mov
dec
mov
jmp
jp
rolb
push
push
repnz
cmp
xchg
je
mov
cmp
les
or
sub
out
movsl
mov
adc
mov
jb
faddp
add
sbb
or
dec
xor
js
mov
xor
outsl
je
aad
shlb
pop
inc
mov
mov
shrb
js
xor
mov
cmpsl
xchg
add
bound
push
test
aam
and
cmp
mov
cmc
lods
jbe
stc
xor
inc
test
xchg
xor
adc
in
popf
mov
mov
sbb
test
and
outsl
cs
mov
shrl
add
pop
sub
gs
fimuls
mov
inc
sub
pop
dec
xchg
loopne
rol
xchg
arpl
add
mov
xor
cmpsl
shll
loopne
xor
jae
xor
jb
xchg
mul
add
inc
pop
jecxz
ss
jl
jmp
ds
adc
ja
es
fdiv
sahf
popf
mov
sbb
push
mov
lods
int
cs
cs
stos
imul
mov
lret
jnp
mov
jb
push
inc
xor
gs
out
rcrl
repnz
sub
cli
or
and
jne
inc
mov
push
data16
subb
mov
out
dec
xchg
lret
mov
fst
xchg
mov
dec
enter
stos
inc
ljmp
mov
pop
fisttps
pop
fs
xlat
scas
xor
loope
xor
push
shlb
sub
push
pop
enter
cli
xchg
mov
sub
push
mov
outsl
push
xchg
jle
xor
jns
and
test
fucomip
dec
mov
jmp
mov
nop
jo
es
pop
dec
int
lret
ret
movsb
hlt
sub
inc
loopne
push
add
cmp
jp
ds
add
fbld
inc
nop
push
not
adc
sbb
ds
inc
dec
and
fildll
cli
lret
cmp
add
insl
inc
fs
xchg
es
rcrb
out
push
out
xor
pop
insl
not
movsl
jnp
inc
jae
ss
mov
xor
inc
rclb
cmp
in
or
sub
jge
or
inc
sti
test
sub
jle
addl
gs
stc
adc
mov
pop
lret
pop
fisttps
mov
pop
cmp
popf
gs
mov
sar
in
jmp
int3
mov
jae
jmp
test
jg
xchg
ret
or
mov
pop
iret
mov
fcmove
lods
xor
sbb
sub
jmp
inc
fnstsw
adc
rcll
orb
jl
lds
test
in
jb
test
jnp
dec
rcr
dec
push
imull
popa
pop
popf
loope
scas
filds
jle
xor
xchg
not
lret
add
stos
in
sub
jg
sub
ret
push
inc
adc
rcrb
lds
fstpl
pop
addr16
pop
sbb
sbb
rcrl
xchg
subb
subl
sub
jb
mov
and
lea
add
sbb
rcl
inc
jecxz
and
cwtl
test
adc
dec
fwait
arpl
faddl
inc
cli
out
jl
inc
adc
stos
inc
insl
lcall
lods
adc
aad
jo
pushf
sub
cld
push
fbld
adc
cmp
out
sti
pusha
sub
ljmp
call
mov
sub
sahf
pop
push
or
icebp
sub
inc
clc
dec
and
and
aas
inc
jle
sub
push
je
std
mov
repz
push
dec
xor
incl
dec
fistpll
pop
push
cmp
pop
insl
or
pushl
mov
test
push
fildll
jb
mov
fstps
testl
cmc
inc
jne
cmpsl
xchg
xchg
insb
adc
inc
add
bound
lcall
repz
fadd
push
xor
mov
pusha
stos
fildl
mov
cld
ss
sti
iret
sub
addr16
loope
lock
dec
xor
pop
dec
ret
jl
push
push
loopne
mov
cmp
into
xor
and
inc
mov
add
push
pusha
lods
jmp
adc
cmpsb
xchg
adc
xchg
cmp
sub
jecxz
fwait
adc
outsl
je
adc
loop
add
roll
mov
clc
in
mov
js
ja
push
dec
lods
xorl
lods
xchg
imul
pop
mov
faddl
and
add
jl
jge
aaa
jle
icebp
and
mov
pop
inc
mov
push
xchg
add
cmp
rclb
xchg
in
cs
dec
or
and
mov
cmpsl
dec
jg
test
pop
pop
bound
or
dec
ret
jnp
int
cld
jne
lds
je
aam
pushf
add
inc
jns
adc
addr16
lods
add
pusha
sbb
xchg
loope
movups
jo
daa
dec
fucom
lock
dec
cs
nop
ds
sbb
mov
mov
pop
sub
inc
adc
adc
push
cltd
into
sub
sub
xchg
dec
push
fidivrs
push
lcall
pop
xlat
fisttpll
inc
test
arpl
add
dec
add
xchg
inc
pushf
insb
fidivrs
pop
or
or
cmp
repz
loopne
inc
sub
cmpsb
inc
mov
cwtl
push
lods
dec
cltd
jg
sbbl
sub
add
or
mov
mov
cld
push
cmp
call
cmp
rcrl
fnstenv
inc
test
push
mov
xchg
jne
xchg
jae
xchg
add
lahf
imul
or
jno
jg
iret
stos
rolb
out
xor
xchg
push
cld
or
shl
lret
xchg
mov
fnsave
into
movsl
out
gs
mov
dec
jmp
xor
or
lods
orps
test
stc
xchg
jge
mov
mov
in
xchg
arpl
pop
stos
dec
jae
rorb
daa
mov
and
outsl
sarl
xchg
sub
imul
data16
sub
test
sbb
sub
mov
fimull
sbb
mov
test
adc
aaa
xchg
dec
pop
or
xor
add
jecxz
mov
cmp
imul
sahf
sub
rol
loop
or
pop
fcom
addr16
mov
mov
sbb
xchg
out
out
xchg
push
out
mov
add
popaw
xchg
js
dec
jp
sbb
sub
mov
jg
pop
mov
lret
adc
mov
mov
jecxz
jnp
pop
test
mov
idivb
and
sti
int
cmp
pop
or
dec
insb
push
dec
test
sbb
imulb
inc
out
xchg
adc
jae
xchg
pop
adc
outsl
xor
scas
loopne
mov
lcall
xor
cmpsb
pop
add
fistpl
cmp
rcll
ret
std
xchg
lods
xchg
je
lahf
ds
ffreep
or
cmp
loopne
popa
or
mov
loope
sbb
mov
testb
adc
loop
bound
mov
fwait
call
jae
shll
mov
and
mov
fdivrl
mov
clc
xor
pop
pushf
xor
in
sbb
jle
rcrb
inc
gs
jns
gs
subb
negb
adc
pop
dec
enter
dec
pushf
inc
mov
imul
push
cltd
cmp
pop
xchg
cltd
int
out
mov
pop
jmp
inc
mov
mov
jbe
scas
pushf
call
jle
dec
pop
xchg
aas
adc
ret
sub
aad
or
dec
inc
add
loope
popf
loop
push
lds
jp
jg
bound
fdiv
sbb
cli
jne
mov
xchg
dec
jno
cmp
mov
shll
sarb
adc
loop
ffree
xor
cmovns
test
xchg
fsubrs
int3
push
cli
sub
push
push
jle
out
cmp
push
mov
adc
mov
stos
lcall
hlt
pusha
sub
sub
in
mov
outsl
hlt
mov
imul
nop
int3
xorb
cmp
inc
shlb
push
pop
loop
pop
out
int
or
add
rcll
push
int3
fisttpl
in
dec
icebp
aas
mov
mull
popl
inc
mov
sub
or
mov
push
out
or
push
adc
mov
mov
inc
mov
jmp
xchg
xchg
test
lret
sarb
push
in
les
dec
fnstsw
xchg
mov
sbb
dec
pop
adc
testb
lahf
stc
ds
adc
xchg
cmpsb
jo
subl
jns
stos
mov
xorb
xchg
sub
jo
stos
les
xchg
test
ret
xchg
sti
jecxz
ret
shrb
add
ja
mov
mov
in
aam
jmp
lahf
push
sbb
mov
push
dec
dec
pop
inc
div
push
push
cmp
loopne
mov
pushf
and
add
fsubrl
inc
xor
ror
jp
scas
or
mov
mov
mov
cmc
mov
js
jno
inc
jo
mov
pushf
mov
jo
fwait
mov
cld
out
add
in
xchg
leave
inc
xchg
loopne
lods
popa
hlt
adcb
lret
push
lcall
ss
mov
insb
add
mov
jecxz
int
dec
ljmp
pop
je
gs
mov
mov
iret
push
pop
pop
imul
cltd
loop
icebp
adc
movsb
mov
loopne
dec
jp
and
mov
sub
inc
sub
push
insl
popf
inc
and
out
xor
adc
js
push
mov
aas
sarb
xchg
cmp
les
ss
mov
sub
test
mov
inc
movsb
lret
dec
mov
addr16
jnp
sub
imulb
repnz
out
cs
in
pop
xor
shlb
jg
es
mov
and
ja
lcall
out
ja
pop
test
xchg
dec
jl
iret
ds
xchg
jg
add
mov
inc
dec
jecxz
imul
sub
shl
jns
shll
scas
jl
xchg
or
ret
ss
pop
cli
lahf
add
xchg
push
sbb
fwait
je
stc
call
sbb
data16
cmp
xchg
outsb
cmp
and
jmp
testb
clc
mov
arpl
pop
push
adc
pushf
add
in
push
push
dec
fisttpl
pushf
jecxz
loop
push
fs
cli
mov
pop
add
sub
lahf
ret
leave
mov
imul
popa
call
cmp
in
sbb
enter
push
add
pop
adc
cmc
scas
adc
call
xchg
vmread
sub
sub
xchg
fbld
inc
fisttps
mov
lods
cwtl
push
lret
outsb
pop
repz
sbb
and
test
js
jno
call
mov
jp
cld
leave
add
jg
iret
mov
outsb
sub
and
sti
jns
mov
int3
icebp
xlat
xor
lods
push
lret
xchg
add
pop
ljmp
lret
shrb
jecxz
imul
cwtl
adc
jle
imul
cli
enter
ljmp
in
jp
loopne
rcll
outsb
cltd
int
cmpsl
or
or
repz
outsb
sbb
jnp
mov
lock
inc
dec
dec
out
jnp
leave
jmp
adc
cmpsb
add
xor
push
loop
fbld
ljmp
cmp
lret
pop
inc
xor
fadds
push
jno
pushl
mov
and
ljmp
mov
or
sbb
outsl
xor
jmp
mov
inc
xchg
movsl
ret
dec
xor
xor
pop
or
js
pop
xor
jmp
sbb
sbb
leave
inc
iret
dec
out
ds
cli
push
data16
out
dec
adc
loopne
push
lret
jmp
cmc
bound
xor
loopne
cli
pop
ret
push
and
sbb
dec
arpl
les
lock
pusha
xor
fs
mov
push
rolb
push
sarb
mov
and
lds
or
int3
adc
pop
leave
out
push
mov
pop
inc
add
pusha
movsb
mov
cmp
sub
or
sarl
mov
xor
cmp
cmp
sbb
mov
pop
daa
mov
je
out
lret
mov
in
add
and
fld
sti
in
out
mov
in
loope
sarl
hlt
popf
fisttpll
nop
mov
ret
fmuls
cmp
rcll
pop
xchg
lock
insl
cmpsb
repnz
imul
test
jb
add
pushf
aas
mov
add
push
sub
xor
out
adcl
fadds
adcb
cmc
test
inc
sub
hlt
ret
pop
lret
js
mov
push
popf
testb
in
jmp
out
popf
insl
xchg
call
inc
repz
push
rcrb
in
mov
imul
imul
mov
cmpsb
mov
push
ffreep
stc
push
out
je
and
or
xor
xchg
call
push
imul
iret
lcall
cld
push
inc
mov
leave
and
es
xchg
ljmp
fldcw
fs
push
outsb
sbb
adc
notb
add
mov
sbb
in
push
xchg
sbb
popf
and
sbb
arpl
lds
cs
inc
jl
cmp
lds
pop
in
xor
or
xor
test
insl
rcl
adc
adc
push
into
mov
clc
in
lea
iret
iret
icebp
lahf
fmull
mov
xchg
pop
push
mov
clc
and
pop
mov
mov
dec
xor
daa
test
arpl
push
cwtl
push
jl
mov
cmp
ds
int3
pop
repz
iret
xchg
aad
out
test
xchg
and
in
cltd
adc
fwait
sub
sub
stos
inc
test
pop
int3
js
push
xor
enter
xchg
or
mov
mov
fistps
fnstenv
dec
adc
scas
xchg
pop
rclb
mov
pop
stos
mov
xchg
popf
pop
inc
sub
xchg
gs
xchg
out
je,pn
scas
mov
dec
gs
sti
jo
or
sbb
call
sbb
add
lock
xchg
stc
sbb
adc
pop
pusha
pop
fiadds
stc
inc
jp
idivl
mov
insb
xor
inc
add
fstps
dec
ljmp
cmp
push
and
add
mov
mov
lock
sub
push
add
shlb
inc
xor
outsb
in
stc
push
dec
jp
mov
push
mov
and
cmp
mov
pusha
ljmp
jbe
mov
cld
lea
fsubs
add
xlat
int3
dec
mov
call
or
mov
xor
adc
out
outsl
and
jp
call
push
mov
in
outsb
cmp
out
ds
dec
adc
mov
lds
jg
push
cli
nop
mov
sbb
push
lahf
leave
ja
sbb
cmp
sbb
inc
dec
push
int3
rorb
les
xor
loopne
ds
filds
push
fldt
add
bound
mov
loopne
mov
andb
movsl
xchg
mov
pop
adcl
mov
xor
test
inc
xor
repnz
or
xchg
mulb
shrb
scas
aas
adc
xchg
mov
sbb
push
push
rcrl
js
mov
inc
dec
sub
into
or
fdivrs
insb
cmp
lea
lret
cmp
or
shrl
std
xchg
je
mov
cmpsb
aaa
cmp
and
cmp
shlb
cmp
repz
or
lds
xlat
inc
call
dec
xchg
fcoms
aaa
push
pop
jae
xchg
xchg
enter
lret
call
and
and
or
lock
cld
mov
mov
popf
cmp
adc
push
bswap
cli
inc
mov
popf
fwait
push
ds
dec
xchg
decl
cltd
fs
push
outsl
cmpsl
xchg
test
or
xor
lcall
decl
fxch
inc
insl
xchg
lea
insb
sbb
or
addr16
ret
test
gs
outsb
imul
rcl
sub
jae
cmp
ja
sbb
mov
in
push
ja
repz
lret
std
notb
repz
and
xchg
push
inc
jge
mov
pop
sub
mov
lds
test
leave
sub
test
addl
sbb
fadds
push
insb
push
insl
jae
in
pop
fildl
fcompl
mov
rcll
fstl
push
mov
pop
inc
es
inc
aas
subl
shl
pop
scas
adc
out
push
push
leave
shlb
sub
push
shl
stos
imul
das
sub
ja
mov
rol
adc
bswap
es
xchg
imul
aas
or
cmpl
jl
push
lock
xor
cmp
mov
jmp
lock
out
mov
mov
push
pop
push
mov
pop
pop
fisttpl
fisttpl
xor
jns
data16
pop
add
xor
sbb
in
or
icebp
cltd
fstpt
mov
shlb
jns
ja
cs
or
jle
sub
stc
inc
in
lock
lret
out
xor
out
out
mov
mov
cmp
pop
repz
shlb
test
js
xlat
out
out
push
movsb
gs
and
cmp
test
fs
pop
mov
push
mov
inc
rclb
std
bound
sbb
mov
jl
js
pop
xor
shrb
fmull
insl
pusha
fucomp
shl
dec
mov
push
xchg
jmp
bswap
sub
imul
xor
xor
in
enter
fsub
xchg
adc
scas
in
rol
ss
push
adc
xor
fstpl
mov
imull
mov
jbe
shrb
shrw
sub
dec
in
add
inc
sti
or
mov
in
push
sub
aam
notb
push
fs
pusha
nop
sbb
xchg
push
xor
xor
xchg
mov
or
sub
xor
mov
movsl
or
xchg
jae
ror
je
and
add
popf
lods
dec
push
or
ja
imulb
es
std
adc
and
cltd
mov
sbb
fsub
stos
xorl
outsb
cmp
xchg
jmp
xchg
mov
rcr
adc
push
imul
cmp
add
mov
add
hlt
in
sub
cmp
pop
sub
mov
mov
je
faddl
cmc
mov
and
cmp
or
das
add
outsb
shlb
pushf
adc
shll
fbld
jne
xchg
lahf
insb
sahf
shr
xchg
out
scas
ds
rol
pushf
out
imul
mov
xchg
cmp
sbb
adc
repz
push
clc
mov
mov
pop
push
movsb
cmp
scas
mov
daa
mov
leave
adc
jmp
js
push
mov
fsts
sbb
arpl
xchg
dec
and
mov
imul
call
js
adc
mov
or
nop
adc
inc
sbb
cmp
addr16
lcall
dec
cmpsl
add
push
mov
sbb
sbb
pop
mov
ja
xchg
popa
fsubs
cli
or
sub
not
push
insb
aam
xor
adc
or
lss
in
in
push
mov
pop
ret
mov
push
inc
adc
mov
inc
pop
imul
cs
mov
xor
mov
pusha
sub
in
ficoms
dec
or
pop
or
cmp
mov
aaa
jne
stc
push
aaa
adc
int3
mov
ret
mov
hlt
cmp
shlb
rcll
scas
in
adc
test
xchg
shrl
movb
movsb
into
push
test
fbstp
add
add
cmpsb
repnz
leave
mov
push
sbb
movsl
ret
nop
dec
inc
insb
mov
or
sbb
test
add
mov
xchg
push
sbb
sti
sbb
ss
pop
stos
fdivs
push
mov
lret
mov
sbb
int3
dec
mov
insl
aad
pop
dec
sbbb
sub
pop
das
sbb
pushf
mov
pop
clc
js,pt
fwait
movmskps
lods
sub
jle
cli
and
or
bound
pop
imul
loop
jbe
push
xlat
pop
sbbl
icebp
out
scas
dec
push
test
xchg
add
sbbb
cmpl
lds
mov
xor
jno
or
js
insl
ficoms
push
stc
inc
mov
in
push
jmp
sub
hlt
in
lods
mov
or
xor
aaa
sarb
pop
mov
pusha
add
pop
popf
popf
paddq
sarb
ss
imul
dec
push
mov
sub
pop
cmp
scas
insb
mov
xlat
adc
cltd
negb
adc
sub
inc
sahf
push
jne
inc
gs
or
push
test
mov
push
sbb
mov
ljmp
mov
sub
mov
mov
pop
xchg
dec
notb
rep
test
out
mov
cmp
out
es
and
sbb
pop
fildl
cmp
mov
sbb
inc
fcmovbe
outsb
add
call
xchg
lea
push
ja
sbb
xor
je
push
push
mov
jns
mov
int
add
mov
adc
lcall
lods
mov
jp
inc
pop
lock
mov
inc
xor
cmp
ds
mov
jp
push
fs
out
xchg
mov
add
pop
cmp
mov
xor
and
filds
dec
lcall
popa
sub
mov
repz
xlat
dec
imul
dec
mov
mov
or
sti
mov
xlat
lods
xchg
pop
jo
nop
sub
out
in
inc
lock
nop
inc
mov
adcl
rcrb
ucomiss
lahf
push
xchg
dec
and
sub
xor
and
in
ds
add
jmp
xchg
cmp
movsl
les
mov
jmp
jmp
dec
push
push
pushf
lea
jp
push
sahf
sub
add
sub
adc
mov
pusha
imul
sbb
das
adc
mov
ret
leave
jmp
pop
inc
std
ljmp
dec
cmpsb
repnz
in
js
ss
sub
xor
dec
les
scas
andl
divb
jp
push
outsb
cmp
mov
adc
xchg
add
repnz
stc
xor
fistpll
xchg
push
in
nop
mov
movsb
push
subl
ficomps
or
push
push
adc
rcrl
adc
std
iret
or
repnz
sbb
xchg
xor
jg
jnp
adc
mov
push
scas
push
mov
sahf
dec
aas
cmc
and
and
or
pushf
add
push
inc
jnp
je
movsl
popa
jo
xchg
call
mov
xor
push
fstpt
sbb
test
pop
mov
cli
ror
cs
xor
imul
jnp
jge
lds
es
cmc
fdivrs
dec
inc
es
push
cmp
dec
pushf
adc
iret
sub
or
sbb
xor
sbb
sub
mov
jns
dec
out
cmp
das
hlt
pop
xor
mov
sbbb
mov
hlt
dec
std
cmovns
mov
loopne
ljmp
and
std
sbb
dec
adc
inc
mov
mov
stc
lahf
or
pop
mov
adc
xlat
call
jl
xor
and
mov
dec
mov
push
and
jae
fidivs
xor
push
or
push
sub
outsl
jno
repz
and
fs
mov
jecxz
push
imul
ja
mov
cltd
fidivrs
inc
xchg
push
fistl
test
fsubl
movsb
lods
pop
aas
add
inc
addr16
sub
jns
ljmp
add
lods
cmp
pop
sbb
xor
pop
dec
stc
test
subb
aam
xchg
add
dec
xchg
cmp
hlt
inc
sbb
fs
ffreep
add
out
daa
sub
jg,pt
cli
mov
and
dec
dec
dec
mov
cmp
cmp
cwtl
movsl
movsl
xchg
mov
jg
scas
shll
inc
outsb
pop
mov
add
js
push
lea
jp
xchg
cld
xchg
test
push
pop
loop
mov
cld
or
pop
sbb
out
mov
xor
pop
dec
jnp
pop
outsb
fbstp
dec
dec
test
enter
mov
psrlq
jle
sub
test
imul
push
in
test
aas
js
cld
in
aaa
test
inc
pop
mov
dec
ret
push
inc
sub
or
pop
or
mov
fiadds
cmpl
cmp
cmpsb
jg
int3
xlat
ljmp
mov
pusha
shlb
int
mov
pushf
add
test
testl
add
xchg
add
inc
xchg
lock
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
jl
mov
add
