leave
push
mov
add
add
and
add
add
add
push
sub
add
add
mov
mov
test
aad
adc
adc
mov
mov
or
enter
mov
mov
sbb
dec
rclb
add
mov
shll
add
pop
orl
popa
in
push
rorb
enter
push
jns
add
and
mov
lock
decl
add
repnz
out
xor
mov
out
test
add
cwtl
or
rcrl
adc
adc
add
pop
lcall
shlb
int
jg
imul
adc
adc
imul
jg
push
add
scas
jns
clc
mov
add
cmp
fadds
inc
test
sbb
dec
mov
fwait
add
bound
push
decl
shrl
and
inc
clc
sub
lods
sti
std
outsl
add
pusha
add
inc
push
mov
add
mov
ret
lods
mov
pop
pop
notb
dec
leave
jle
and
mov
mov
clc
loopne
mov
decl
cmpl
mov
or
add
add
rolb
mov
add
mov
mov
adc
add
call
call
ja
push
mov
mov
mov
inc
sar
mov
rolb
movsb
jns
or
out
push
pop
mov
mov
aas
add
lea
push
cltd
pop
add
add
cmpsb
pop
int
jns
pop
inc
rolb
pop
aam
mov
jns
push
add
mov
rep
mov
mov
mov
dec
dec
shrl
jmp
sti
add
mov
and
and
jne
adc
add
mov
or
mov
divl
sete
add
lods
icebp
ss
out
das
out
popf
mull
pushf
clc
and
imull
test
cmpsl
lods
add
xor
mov
arpl
jno
imul
add
inc
unpckhps
inc
fcoms
push
scas
scas
bound
push
or
or
test
les
enter
mov
arpl
add
mov
bound
pushf
jnp
sub
lahf
lret
ljmp
sbb
push
sub
mov
adc
sbb
ds
jb
xchg
into
inc
imul
jmp
adc
cmp
mov
jg
mov
int3
inc
out
sti
insb
mov
movsb
outsl
sub
or
out
ds
cs
pushf
inc
ret
mov
sbb
add
sbb
cmp
push
pop
xor
adc
mov
xchg
into
inc
pmuludq
jg
xor
mov
insb
xchg
mov
xadd
ds
cltd
add
xchg
aas
inc
push
xor
aas
aam
push
inc
adc
pop
repz
mov
into
adc
pop
cmp
mov
adc
pop
repz
mov
and
xor
adc
cli
inc
setno
mov
pop
ja
setno
das
sbb
stos
ficoml
cmp
loope
stos
into
xchg
into
inc
and
mov
data16
arpl
sbb
xchg
mov
les
into
cmpsl
out
popf
stos
ret
aam
mov
test
push
xor
out
daa
jne
inc
pcmpgtb
cmp
and
xchg
xchg
or
lock
jl
fnstsw
pop
inc
popa
pushf
ror
and
bound
mov
ss
insl
mov
mov
push
xlat
inc
in
jnp
push
sbb
mov
aas
mov
ret
xchg
push
test
sbb
dec
daa
xchg
into
inc
movups
inc
xchg
inc
setno
cli
push
inc
mov
xchg
iret
mov
sbb
dec
dec
cwtl
jbe
cmp
and
push
inc
mov
fwait
ljmp
jge
xchg
xchg
iret
xchg
xchg
cli
push
inc
in
pushf
mov
push
inc
push
or
inc
setno
inc
test
in
stos
jbe
mov
xchg
push
dec
adc
pop
stos
jbe
mov
xchg
xlat
lds
inc
fistpll
mov
into
ret
add
xchg
push
mov
int3
sbb
into
push
test
add
jbe
inc
pop
cmp
mov
mov
sbb
or
and
enter
pop
sti
xchg
aas
or
adc
pop
pop
mov
lret
cmp
sbb
dec
mov
or
pop
adcb
bound
push
mov
lret
xor
inc
in
and
mov
cmpsl
add
daa
mov
cmpb
xchg
into
inc
xor
into
inc
adc
mov
mov
divb
mov
ds
dec
and
mov
in
pop
push
data16
cmp
mov
pop
sbb
mov
mov
xchg
push
mov
pushf
aas
mov
popf
ljmp
xchg
adc
rcrl
loope
xchg
ja
cmp
mov
push
test
push
jge
loopne
mov
lret
pop
sti
jp
ja
shl
jns
loopne
rcr
clc
jae
into
inc
setge
mov
xchg
into
inc
mov
cmp
xchg
cmp
xchg
sub
mov
insb
scas
cmp
pop
insb
xchg
int
divl
jns
aam
lret
mov
adc
xor
xchg
ret
mov
pop
push
enter
inc
xor
push
lock
xchg
into
inc
adc
dec
xchg
push
rcll
test
in
stos
adc
mov
or
imul
inc
mov
into
inc
nop
movl
lahf
fiaddl
popf
loope
or
push
adc
and
pushf
mov
mov
mov
add
sbb
dec
mov
out
in
lds
pop
popf
iret
punpckhbw
pop
les
sub
leave
ljmp
push
lea
mov
fisubs
jnp
sbb
aad
adc
mov
dec
xchg
xchg
out
aaa
xchg
inc
dec
dec
jo
inc
lret
push
aad
cmpsl
mov
cld
sub
mov
sub
mov
aaa
mov
data16
xchg
stc
sub
fwait
mov
rcrl
fnstenv
cmp
adc
fidivs
and
xchg
inc
pop
mov
call
in
fisttps
pop
jb
repnz
sti
xchg
push
adcb
mov
inc
dec
incl
pop
cmpsl
sbb
ffreep
adc
lret
nop
cs
mov
ljmp
fsubl
dec
mov
jb
lock
fimuls
xlat
loopne
movl
out
fiadds
js
mov
pop
clc
xlat
jle
int
popa
mov
push
ret
add
in
and
icebp
mov
out
pop
push
out
push
shll
in
mov
xchg
push
jnp
cld
mov
adc
push
inc
loope
scas
fists
push
shll
mov
jnp
dec
lods
rorl
sbb
in
mov
xchg
js
and
dec
outsb
lds
jge
test
sbb
dec
add
scas
jno
xchg
int
push
push
lret
cwtl
test
loopne
mov
rclb
leave
dec
loope
lods
outsl
add
les
cld
fs
out
adc
cmp
aad
xchg
aam
cmpsl
iret
push
insb
inc
or
mov
sub
pop
inc
mov
mov
pop
mov
xchg
cwtl
enter
or
push
push
pop
mov
loopne
sub
xadd
ljmp
inc
xchg
push
or
rcll
or
adc
sub
data16
add
es
mov
sbb
outsl
dec
push
je
adc
mov
jecxz
repz
shlb
call
out
xlat
and
inc
incl
mov
mov
loope
out
xchg
jmp
mov
push
ret
repz
insb
sbb
popf
shll
and
jo
cli
rcll
rolb
pop
push
in
testl
aaa
and
pushf
add
aam
xor
ret
mov
adc
dec
arpl
fwait
inc
fidivrs
loope
add
mov
nop
sbb
mov
shrb
push
clc
dec
orl
stc
xchg
mov
adc
cltd
xlat
ss
push
push
mov
bound
ds
leave
aad
loop
add
push
pusha
adc
stos
iret
out
aaa
xchg
add
mov
push
push
jo
fistpll
stc
stos
imul
inc
inc
mov
or
push
xchg
sbbl
ret
or
ja
rorb
scas
dec
gs
xchg
fisubrs
mov
xchg
ss
jbe
jp
dec
xchg
add
and
shrl
xchg
adc
xor
add
lcall
jecxz
repnz
fcmove
or
lahf
out
add
inc
push
fcomps
or
movsb
shlb
dec
or
inc
push
adc
adc
add
fs
inc
pop
jne
mov
dec
or
js
fbstp
mov
iret
popf
mov
xor
xor
rcrl
mov
mov
xchg
xchg
adc
loop
popa
fdivrs
adc
pop
add
and
mov
mov
mov
jge
cmp
and
sub
cmp
in
cmp
push
mov
xchg
rcr
sub
push
push
adc
pop
jno
cmp
push
call
shrl
dec
div
and
dec
push
divl
jno
test
test
repz
pop
testl
dec
aas
hlt
bnd
sub
dec
inc
popa
repnz
sbb
push
dec
lods
dec
aam
loop
mov
mov
mov
sub
in
sbb
jno
repz
add
xor
xchg
mov
loop
mov
pop
xchg
xor
in
dec
and
inc
pusha
out
adc
mov
xor
fbstp
mov
xor
or
stos
lds
fmul
add
xchg
add
add
jb
push
lds
pop
xchg
xchg
dec
or
xchg
xchg
sahf
push
arpl
lods
mov
sbb
mov
dec
xor
iret
xchg
bound
cltd
mov
mov
lods
pop
jmp
sbbl
xchg
pop
adc
inc
aas
sbb
lret
dec
mov
arpl
shl
lods
sbb
or
inc
push
adcb
out
aad
ficoml
int
pop
adc
testl
lahf
jne
insl
mov
jge
adc
sbb
mov
xor
mov
fadd
int3
mov
xchg
adc
shl
inc
popf
pop
push
out
fscale
jle
mov
or
cmp
inc
cltd
jno
mov
push
outsb
sbb
js
jmp
sub
ret
and
add
leave
or
push
dec
daa
inc
pop
hlt
fcoms
popa
cmpsl
aas
adc
sub
sub
outsb
incl
rcrl
add
in
rorl
cmp
push
cli
mov
xor
rclb
mov
jge
outsb
test
sbb
add
lea
push
xchg
push
jmp
dec
out
out
dec
sub
adc
movsb
jg
jns
push
inc
mov
sbb
in
pop
push
subl
nop
leave
mov
inc
xchg
push
addr16
add
push
xchg
cmpsl
push
or
adc
pop
mov
sub
cmpsl
std
lea
loop
mov
pop
push
add
add
sbb
cli
sub
inc
xchg
push
ja
cwtl
mov
mov
into
mov
imull
mov
out
jecxz
adc
xor
cmpsl
mov
mov
mov
sbb
outsl
push
test
jae
nop
add
fidivs
cltd
xlat
jmp
je
adc
call
shr
and
out
mov
xchg
and
loopne
in
sbb
ret
fwait
or
pop
shll
xchg
loopne
mov
mov
sub
mov
ss
cmc
ljmp
push
outsb
inc
dec
stc
pop
jbe
push
fwait
xor
lcall
cmpsb
push
enter
shl
enter
neg
push
adc
pop
push
test
mov
mov
lret
loop
jno
repz
jb
notl
adc
stc
cmp
cmp
xor
dec
jmp
pop
repnz
add
adcl
mov
add
sbb
dec
dec
ret
imull
sbb
loope
mov
sbb
icebp
push
pop
loopne
pop
xor
mul
rolb
loop
push
cmp
insl
fsubs
ret
outsl
dec
inc
adc
mov
jbe
jbe
pushf
xchg
iret
pusha
cmpsl
imul
in
imul
mov
inc
dec
or
xchg
jnp
and
fldl
popa
mov
out
bound
add
xlat
xchg
lcall
cmp
stos
in
sbb
mov
xor
insl
out
sub
sub
or
dec
add
in
sbb
inc
jo
push
jecxz
xor
sarl
out
xchg
push
ss
dec
fdivl
adc
int
jae
lret
push
cwtl
fiaddl
popl
or
int3
stos
jl
dec
push
sub
es
lods
push
cmpsl
aas
push
aaa
fstps
xchg
pop
fildll
pop
push
xchg
repnz
add
mov
ja
cmp
xor
ljmp
inc
ret
addr16
je
push
pop
or
sbb
std
lcall
into
aas
div
mov
and
fiaddl
inc
mov
repnz
shll
push
xchg
add
lcall
adc
dec
sbb
jo
mov
fdiv
push
mov
pop
mov
inc
mov
icebp
push
pop
subl
sbb
aad
xlat
mov
sar
adc
les
pushf
mov
in
jb
xor
stc
daa
outsb
and
aad
push
cltd
adc
and
and
mov
xchg
add
adc
call
nop
enter
fcmovb
add
rcrb
or
push
jg
mov
arpl
mov
jmp
icebp
pusha
orl
aad
push
jp
lods
rclb
xchg
cmp
leave
add
xor
ret
push
in
fcompl
frstpm(287
pop
dec
imul
loope
dec
inc
jp
imulb
subl
and
adc
repnz
mov
mov
repz
ja
and
pop
push
sub
push
movsb
sub
jb
jae
ja
pop
xor
addr16
and
dec
jle,pn
in
push
push
or
negb
shlb
dec
or
cmpsl
test
lock
adc
fdiv
cld
cmp
loop
lea
out
jecxz
stos
cmp
mov
xor
mov
mov
fildll
push
or
push
inc
stos
xor
addr16
pop
rorl
adc
push
dec
add
outsl
imull
jle
and
jp
or
mov
outsl
jl
add
dec
arpl
mov
sbb
lret
out
mov
lret
add
clc
mov
sbb
out
data16
mov
nop
pop
sti
les
dec
cmpsl
shll
jae
xor
inc
xchg
fbld
push
jecxz
push
gs
sti
inc
ffree
cwtl
push
shrl
imul
jns
and
pop
cmp
icebp
test
inc
out
outsb
enter
cltd
mov
int3
dec
rcr
adc
mov
xor
fs
sub
xchg
pop
mov
adc
adc
cmp
ror
xchg
xchg
fidivs
xchg
add
aas
cmp
jp
fldenv
inc
fimull
push
xchg
insb
sarb
xchg
lret
xchg
pop
push
cli
stc
imul
in
insb
cmp
movsl
sbb
imul
int3
mov
jns
cltd
bound
sub
ljmp
xchg
in
daa
clc
adc
xor
loop
movb
pop
mov
push
or
cmp
dec
fstpl
in
mov
test
and
push
pop
adc
addb
push
lock
mov
fstps
mov
or
lock
mov
xor
dec
and
fcmovnu
mov
andb
and
and
pop
jne
push
cmpsl
push
push
sub
cltd
test
and
sbb
outsb
mov
jg
lods
lahf
lcall
dec
push
out
arpl
mov
dec
xchg
mov
iret
ret
imul
jb
int3
fisubrs
mov
push
inc
or
jne
add
call
pop
sar
mov
arpl
mov
cli
aam
ss
push
loop
push
push
fldt
cmp
out
out
add
ret
fwait
cmp
bound
inc
push
and
sbb
cmpsl
dec
mov
and
xor
add
xchg
inc
add
into
sbbl
loope
push
xlat
add
push
ja
push
fbld
test
dec
cmp
or
pop
iret
mov
mov
loop
push
in
or
sub
jae
pop
lret
mov
out
mov
sbb
dec
dec
mov
add
cld
sub
fmuls
in
ss
push
sbb
ja
adc
pop
in
inc
mov
xchg
ficoml
mov
sbb
movsl
jo
lcall
adc
or
adc
xchg
fwait
ja
mov
xchg
das
les
aam
mov
call
ret
or
call
jge
pop
int
jg
ret
push
cmp
iret
mov
pop
jae
pop
flds
inc
or
dec
cmp
and
loopne
out
nop
shrl
lret
les
fs
push
push
pop
insb
std
fidivl
cmpl
dec
mov
cmova
outsb
jae
pop
pop
mov
mov
divl
lds
lret
add
or
pop
xchg
les
sbb
stos
insb
mov
xchg
xor
sub
lret
push
push
sub
popa
xor
add
or
adc
inc
xor
or
and
push
jne
rol
xchg
push
or
arpl
pop
jb
push
inc
dec
sbb
xchg
lock
nop
xchg
jge
jns
sahf
pop
stos
push
xchg
and
pop
outsl
mov
out
cltd
jmp
adc
mov
pop
andl
out
adc
cltd
adc
iret
sar
mov
add
push
jne
stc
pushf
mov
sub
and
xorb
inc
les
pop
movsl
xor
pop
lret
sbb
cmpsl
add
push
lods
pop
lret
cmp
jg
js
popf
dec
cmp
add
inc
sbb
and
push
push
dec
repz
insl
xchg
xchg
and
mov
pop
repz
jle
add
call
pusha
inc
xchg
jl
lds
pusha
add
xchg
ret
add
rorl
dec
sti
cmp
pop
add
sbb
ret
lret
jno
ret
push
out
sbb
dec
fistps
fists
pop
ja
out
hlt
push
movsl
fcomps
rcr
inc
push
rclb
rcrl
fidivl
sub
or
xor
js
test
cmpb
push
jns
mov
insl
mov
lret
inc
cmc
xlat
and
inc
int
xchg
clc
ds
je
and
popf
add
negb
fs
pop
push
xor
cmp
dec
arpl
jecxz
es
icebp
mov
sbb
jb
cmp
jo
adc
lea
int
pushf
inc
pop
pop
push
push
in
aam
jmp
enter
inc
test
imulb
jnp
iret
xchg
cwtl
test
add
pop
stos
fadds
icebp
push
or
loope
into
push
dec
ficoms
xchg
push
dec
int3
and
mov
popa
ret
cmpsb
push
jne
dec
and
cmp
lahf
popf
je
jne
imul
les
add
pop
jns
subb
rol
insl
cmp
mov
cmpsb
and
je
scas
and
sbb
leave
cli
and
push
xor
aad
mov
arpl
enter
mov
cmove
xchg
lods
rcr
mov
sahf
out
enter
rorb
xchg
jp
out
jle
rorl
jle
neg
stos
movsb
xor
push
add
mov
out
xchg
sub
or
push
push
outsl
das
lock
and
push
in
adc
shrb
shrb
leave
xor
mov
int3
mov
xor
call
and
mov
push
pop
push
xchg
add
sbb
sub
mov
sub
pop
push
pushf
js
adc
lcall
imul
lea
sub
xchg
push
les
pop
fwait
aam
add
loope
int
push
adc
mov
test
mov
inc
sbb
push
ljmp
enter
pop
cmp
xchg
pop
mov
cmp
xchg
shr
push
sbb
push
fnstcw
jge
repnz
or
mov
roll
cmp
call
mov
xor
les
push
pop
fsubs
mov
ss
add
dec
sbb
add
cli
inc
lea
sbb
cltd
ret
lea
pushf
mov
sub
or
ret
in
daa
dec
mov
mov
ljmp
push
out
or
es
push
add
mov
out
ret
cwtl
add
test
loope
pop
inc
jae
xor
push
xor
clc
inc
ds
pop
jae
out
pop
cmp
iret
cmp
lock
pop
lret
stos
jl
dec
pop
xchg
test
lods
in
ret
inc
lods
jecxz
push
rcr
mov
sahf
or
jne
sbb
adc
gs
jge
dec
push
xor
jae
jbe
add
fisubs
sbb
int3
cmp
jmp
iret
or
and
stos
fistps
pop
xchg
inc
push
js
xchg
das
pop
test
dec
xor
dec
mov
ja
push
cmp
pop
ficoml
mov
fisttps
inc
jne
mov
pop
cltd
xchg
add
sbb
stos
sahf
push
mov
and
pop
xchg
lret
push
lret
pop
add
cmp
fistpll
and
dec
cmc
xor
and
imul
data16
stos
jbe
dec
xor
enter
ret
das
adc
sar
popf
int3
stos
popl
rcll
lea
push
fildl
cmc
pop
or
enter
daa
mov
movsl
loope
mov
xchg
hlt
jp
int3
leave
test
in
cmp
leave
adc
and
into
dec
cli
push
mov
shll
test
push
push
jg
popa
fadd
lock
rcrl
cmpl
scas
fldt
or
jle
mov
loop
enter
iret
add
loop
sub
aam
add
aam
insb
shrd
xor
leave
xchg
ret
xor
lods
insb
movsl
fimull
push
pop
mov
or
punpcklwd
rcrl
cmc
mov
pop
popa
cmpsb
or
sahf
xor
add
push
ss
mov
arpl
lret
ror
xlat
arpl
dec
mov
insb
cli
inc
aad
fldl
and
pop
push
popf
clc
loope
cltd
xlat
mov
cltd
jecxz
xchg
xor
cmp
fwait
cmp
pop
mov
movsl
test
or
stos
test
shl
inc
fstpt
inc
into
xor
jl
shl
sbb
mov
xchg
aaa
jp
sub
dec
mov
inc
test
loope
push
jl
repnz
decl
jae
cmp
daa
push
and
sbb
inc
lock
dec
dec
ret
adc
sbb
jb
jg
test
dec
test
sub
inc
dec
sti
ret
adc
aad
pop
jle
pusha
lcall
jmp
pop
lods
pushl
add
mov
inc
xchg
int
sub
lods
or
push
sbb
rcr
repnz
lods
mov
mov
jbe
outsb
pop
xchg
push
xor
and
jb
xchg
dec
or
mov
cmpsl
sbbl
out
push
mov
mov
mov
inc
roll
mov
cmpsb
rcl
mov
stos
sub
sti
hlt
rcr
loop
pop
and
cmp
fbstp
pop
jecxz
dec
pop
into
mov
mov
in
test
lcall
icebp
jae
inc
xor
test
mov
call
decb
fisubl
cwtl
mov
leave
add
and
scas
inc
aaa
pushf
cmp
lret
or
push
mov
hlt
and
add
mov
rorl
mov
cli
aas
lahf
pushf
jg
xor
jl
ficoms
sti
mov
and
int3
shlb
jmp
ljmp
mov
out
cmpsl
inc
test
stc
xchg
xchg
sub
cwtl
pop
push
cltd
or
pop
ror
mov
pop
lods
xor
lods
xor
mov
loopne
pop
divb
cmp
push
leave
mov
movsb
xchg
rcrl
js
test
fistps
jg
mov
mov
jmp
mov
mov
rorb
fidivs
pop
xlat
subb
addr16
sti
push
jno
das
cli
psrlw
mov
dec
je
add
in
inc
jno
cltd
movsl
adc
xchg
testb
adc
ficoms
sub
xor
dec
inc
scas
addb
andb
push
sub
mov
xor
movsb
xor
pop
xchg
cltd
push
pop
add
je
test
xchg
in
mov
fsubrp
mov
mov
repnz
sbb
dec
xchg
mov
xlat
rcrl
daa
inc
lods
mov
adc
add
fnsave
cs
sub
add
sbb
ret
loopne
push
jmp
jmp
pop
xor
pop
xor
sbb
adc
jbe
mov
movsb
push
mov
aas
and
inc
jle
je
outsb
lret
dec
imul
adc
sub
clc
imul
and
inc
xchg
rcll
cmp
jae
adc
mov
dec
pop
pop
xlat
int
adc
stos
les
addr16
xchg
lea
mov
lahf
jg
add
or
xchg
leave
xchg
adc
mov
imul
imul
cmp
mov
mov
push
iret
faddp
mov
inc
in
repnz
xchg
in
ss
out
or
xchg
jp
adc
jbe
mov
rclb
out
jmp
icebp
leave
sahf
bound
fildll
pop
push
rorw
dec
and
testl
lret
mov
test
inc
daa
repz
sub
mov
cmp
xchg
xor
mov
fdivs
aas
jae
xchg
cli
es
pop
loop
idivb
cmpsl
mov
stc
int3
insb
sbb
rol
into
movsb
sahf
xchg
or
sub
orb
push
jae
je
pusha
rclb
rol
dec
mov
xor
or
popa
push
enter
lret
sub
dec
adc
jo
push
inc
popa
jae
rolb
or
cmp
push
cmp
dec
xchg
mov
repz
rcrb
stos
pop
test
xchg
adc
mov
jo
and
sub
pusha
aad
or
dec
popf
int3
fwait
aam
and
cmp
add
test
and
in
pop
aas
jnp
adc
mov
aam
ret
cmpsl
ja
mov
int3
lcall
pop
cli
xchg
rcll
jae
mov
jl
popf
add
xor
cmp
pop
je
mov
outsb
fmull
push
pop
push
int3
xchg
mov
clc
mov
add
je
sbb
mov
clc
push
bound
mov
lock
push
pop
jae
sub
add
icebp
sub
int3
fsts
aas
sarl
mov
scas
mov
imul
push
push
iret
dec
jge
xorl
lods
sahf
jbe
int
xchg
and
xor
dec
icebp
mov
pop
sti
ret
dec
jecxz
mov
fimull
jbe
cmp
in
ret
xchg
mov
xor
andb
dec
pushf
stos
sub
fists
bound
xchg
jb
mov
push
mov
jno
and
cmp
mov
call
shrb
movsb
mov
jno
imull
or
jle
add
mov
push
insl
xchg
in
lret
stc
testb
scas
add
mov
fisubl
xchg
mov
cwtl
nop
loopne
shlb
inc
les
in
fiadds
scas
fwait
inc
mov
les
adc
test
jbe
fs
daa
addr16
ss
int3
fists
mov
lret
xchg
jne
enter
mov
mov
cmpsb
out
test
insb
fcoml
jmp
push
loopne
mov
push
lock
or
mov
mov
std
xchg
inc
nop
push
mov
aas
popf
scas
inc
ja
pop
loope
mov
rcpps
sub
popa
fisubs
imull
rcll
scas
dec
enter
test
push
jg
adc
push
adc
fwait
dec
sub
inc
sbb
sahf
adc
fdivrl
add
add
sbbl
push
into
sahf
adc
dec
mov
jno
pop
fwait
push
insb
iret
sub
jb
es
or
hlt
inc
out
push
repnz
adc
adc
jae
into
mov
js
lods
add
sahf
xchg
jmp
mov
add
mov
out
in
movsb
inc
outsl
fidivl
pop
in
pop
aad
xchg
andb
lds
fstl
jbe
mov
sbb
pop
jb
cmpsl
or
adc
std
jae
dec
or
fdivs
call
das
negb
push
inc
inc
ja
mov
mov
push
iret
mov
jp
xor
scas
cmpl
sti
mov
mov
test
loop
jg
popa
mov
xchg
addr16
inc
and
jge
rcrl
xchg
cmpsb
dec
dec
das
mov
mov
icebp
mov
addr16
pusha
repz
sbbl
push
cmp
push
gs
jnp
rol
pop
sub
push
iret
xchg
dec
fisubl
popf
iret
rclb
popf
xlat
jbe
int
cltd
int3
out
sub
dec
adc
pushl
pushf
sahf
xchg
nop
cmpsl
mov
test
daa
jne
mov
mov
stos
adc
xchg
mov
hlt
jns
jle
pop
or
rcll
pop
flds
or
shlb
addb
mov
cltd
lahf
or
outsb
in
shlb
mov
dec
mov
in
sbb
push
enter
test
jne
and
push
jg
mov
mov
inc
or
cmp
dec
mov
inc
cmp
sahf
nop
aad
insl
xor
pop
mov
test
mov
add
mov
int
sbb
lock
mov
stos
js
ret
cld
sahf
jl
and
sbb
out
ret
jne
jae
in
xchg
or
add
mov
or
jnp
and
popa
and
mov
repnz
sub
and
or
adc
rclb
cmp
sti
xchg
inc
aad
das
push
popw
popf
jb
les
xchg
push
mov
fcoml
pop
outsb
xchg
pop
test
and
inc
mov
negb
fstpl
mov
int
inc
rcll
fmulp
nop
out
popa
pusha
adc
bnd
pushf
test
mov
into
xor
leave
dec
std
push
add
rol
cltd
rol
xchg
cmpsb
outsl
xchg
sub
jge
jg
mov
je
inc
out
cs
shlb
stos
add
fsubrs
fwait
inc
in
xchg
sbb
adc
jmp
mov
out
mov
lahf
xlat
aas
inc
ja
fldt
pop
mov
push
test
imul
ss
jle
sub
dec
out
gs
test
xchg
pop
scas
or
icebp
movsl
cmp
xor
test
xor
mov
hlt
pop
mov
inc
cmp
mov
add
xchg
popl
aas
jle
inc
mov
xchg
and
lods
mov
mov
lcall
in
stc
inc
xchg
add
aas
ret
dec
ljmp
ret
ret
add
incl
movsb
enter
stos
outsb
mov
sahf
push
leave
lods
lcall
mov
in
sbb
outsb
mov
and
imul
adc
or
daa
mov
out
xor
and
fbld
faddp
sbb
pop
fwait
fwait
in
and
out
add
cmc
push
cmpsl
jne
scas
outsb
jge
lret
test
jl
out
stos
push
imul
dec
mov
xor
les
push
es
adc
or
dec
inc
and
stos
mov
aam
sub
sbb
int3
or
and
aas
or
mov
xchg
adc
xor
mov
xchg
xchg
arpl
jge
inc
dec
cmc
push
je
cwtl
adc
mov
out
or
shr
adc
push
repnz
lret
outsb
push
cltd
cwtl
test
lret
bound
sbb
sti
sub
es
add
xchg
enter
inc
jae
dec
insb
je
pop
cltd
fcmovne
inc
jnp
dec
inc
loopne
std
leave
pop
outsb
repz
pop
mov
stos
lcall
add
jbe
fwait
sub
mov
push
and
adc
leave
xchg
fimuls
cmp
cmpsb
pusha
inc
bound
jb
sbb
xchg
gs
fldenvs
mov
outsl
repnz
mov
addr16
repz
fists
mov
and
sub
cmp
pop
popf
pushf
or
sbb
fidivrs
sbb
xchg
or
fstpl
inc
lea
jge
or
inc
fcom
lods
fcmovnb
out
imulb
jno
scas
fwait
sbb
fldcw
addr16
pusha
xor
cltd
hlt
mov
pop
xchg
pop
fmuls
nop
sub
std
xor
or
arpl
ja
ljmp
or
inc
insl
les
add
addr16
push
fs
jnp
adc
mov
adc
mov
pop
cmp
sub
push
shll
mov
mov
loop
jae
pop
mov
arpl
ja
or
stc
push
push
add
mov
repz
mov
sub
push
cmp
xchg
fldt
int
sub
pusha
shrb
fcmovbe
in
inc
out
lods
inc
jecxz
adc
adc
xor
push
out
mov
jl
dec
and
cld
sbb
aam
movsl
xchg
loopne
fcom
cmp
inc
inc
dec
in
fisubl
sbb
bound
or
pand
adc
sbb
rcl
and
lea
addl
call
incb
jno
movsb
pop
out
mov
imul
sahf
pop
lcall
pop
out
sbb
adc
xlat
mov
jbe
sti
out
adcb
dec
fidivl
xchg
rclb
add
cs
cmp
out
addr16
into
test
ror
mov
mov
jnp
inc
sub
fbstp
dec
mov
shrb
jbe
int3
push
cmp
adc
mov
sub
or
mov
push
lea
or
mov
fcmovb
aam
inc
sub
stos
test
aad
lcall
pop
addb
jg
aad
aad
fcmovbe
ja
pop
sub
cltd
lahf
cmpsl
jmp
jbe
mov
aad
mov
repz
aad
jmp
cmp
xchg
sbb
push
add
sub
fidivl
pop
push
jecxz
and
xchg
in
lret
sbb
xchg
xchg
icebp
mov
jns
mov
jmp
mov
pop
cmp
cs
dec
mov
and
data16
pushf
lods
lea
jbe
call
xor
lret
mov
lods
outsb
jo
movsb
cmp
hlt
or
rcr
push
sti
dec
clc
cmp
and
or
icebp
add
mov
insl
roll
mov
stos
adc
lods
scas
mov
es
jae
push
scas
xchg
sahf
aam
or
out
mov
daa
out
adc
subl
mov
movsl
xor
push
movl
daa
mov
nop
in
jecxz
mov
and
add
push
or
xchg
xchg
pop
mov
inc
pop
xchg
es
or
jns
loop
leave
push
dec
mov
outsb
fimuls
xchg
xchg
lret
mov
mov
movsb
lahf
xor
popf
leave
or
faddl
leave
rorl
xchg
scas
push
imul
dec
dec
mov
add
popa
jecxz
cmp
cwtl
add
xlat
fmul
adc
ror
test
loop
test
sbb
mov
scas
scas
in
add
mov
popf
push
sbb
mov
scas
dec
sub
or
cmc
add
push
sbb
fbstp
jno
es
repnz
cld
cmp
sub
inc
lret
dec
pop
arpl
fisubrs
lret
xor
cmp
adc
inc
or
or
xchg
pop
cmpsl
xlat
int3
jle
scas
mov
lret
and
sbb
xlat
sub
add
and
mov
add
stos
dec
das
push
jns
je
pop
xchg
arpl
or
push
sahf
cmc
out
jns
jnp
push
adc
movsl
ljmp
xchg
movb
bound
adc
ljmp
rorl
add
gs
mov
add
mov
cmp
fldl
and
out
fucomip
mov
dec
loopne
adc
je
stos
pusha
sbb
iret
lds
mov
js
or
or
lds
fists
mov
int3
addb
lret
jae
or
adc
aas
adc
std
es
aam
mov
pop
xchg
outsb
jbe
xor
mov
push
jmp
in
fwait
mov
push
ds
push
mov
in
jns
addr16
fstps
dec
mov
std
outsl
popa
call
jle
repz
call
popf
test
incl
fcom
mov
push
loop
pop
sbb
fsubl
mov
mov
les
jmp
adc
jge
sahf
shl
cmp
cmpsl
dec
shl
and
jne
roll
rorb
jbe
push
mov
sti
dec
fwait
mov
push
sbb
in
cld
push
jp
add
adc
mov
push
aam
imull
lock
cmp
mov
jmp
loop
sbb
daa
xchg
mov
push
in
xchg
xchg
scas
or
adc
movsl
mov
lock
out
mov
out
lret
jmp
add
hlt
or
fwait
ret
mov
jl
rcrb
cltd
mov
push
ret
iret
loope
aas
iret
sub
mov
pop
ja
cmpsl
or
es
faddl
mov
dec
or
xchg
out
adc
dec
adc
out
and
adc
cmc
out
sahf
lock
cmp
xchg
lds
jbe
sti
mov
push
jp
mov
pushf
leave
shlb
xchg
push
jmp
add
and
icebp
sbb
out
jecxz
mov
jmp
dec
jno
loop
mov
jp
xor
fs
je
lahf
fstpl
jle
ljmp
div
lret
daa
pop
out
add
mov
jne
scas
and
lahf
adc
int
ficoms
sub
aad
movsb
xor
inc
mov
mov
daa
and
mov
fmuls
dec
pusha
popw
leave
imul
aam
sbbl
psubsb
rclb
addb
mov
divb
icebp
xor
jg
push
testl
dec
pop
jle
adc
insb
les
add
xchg
shrl
xchg
mov
or
mov
icebp
out
inc
imul
mov
dec
and
dec
repnz
pushf
dec
mov
cmp
stos
mov
jae
stos
es
loop
jae
stos
and
shl
jl
and
sub
pop
dec
repnz
pop
mov
jae
adc
fstpl
mov
shl
cwtl
iret
lock
popf
leave
movsb
pop
jg
and
pop
cmpsl
subl
notl
xor
aas
clc
stos
in
out
mov
lods
pop
jecxz
lods
add
dec
mov
mulb
pop
sbb
mov
sbb
loop
inc
daa
adc
mov
int
adc
add
sub
js
sbb
ret
mov
dec
xlat
ljmp
inc
fmuls
outsb
je
imul
ja
cmp
jns
dec
loopne
roll
pop
filds
leave
sbb
clc
movsb
ljmp
xchg
inc
sub
pop
pushf
jmp
sbb
sbb
and
and
lahf
mov
adc
nop
sub
hlt
les
ret
sbb
sbb
cmpsb
xchg
mov
inc
pop
xchg
mov
stc
jnp
subb
jae
jmp
int
add
jns
in
inc
clc
mov
or
cmpsl
pop
incb
lds
jecxz
pop
xchg
jnp
sbb
inc
jbe
test
jbe
aam
in
xchg
aas
sbb
lea
movsb
imulb
adc
lret
outsl
mov
or
mov
bound
and
pop
sub
jmp
pop
and
mov
mov
mov
adc
adcl
xorb
pushf
test
add
lock
repnz
shll
repnz
daa
dec
pushf
pop
pusha
lahf
nop
dec
aad
bound
sti
or
mov
out
push
mov
inc
nop
or
lock
mov
in
xchg
lock
adc
or
ss
push
insl
repnz
fisubs
adc
les
sbb
sub
sbb
pop
mov
pushf
fcomip
cmp
mov
pop
lds
je
and
or
cmp
push
pop
mov
or
leave
imul
fwait
sbb
orb
sbb
lods
out
negb
shrb
pop
in
mov
mov
mov
ficompl
mov
loopne
lods
pop
mov
jmp
jl
cmpsl
not
adc
data16
and
divl
popa
lret
or
sub
jg
ds
stc
lock
loopne
jl
xlat
xor
cld
pop
fisubrl
adc
rclb
cmpsb
adc
xor
adc
jae
popf
adc
popf
xlat
int
mov
in
add
push
sbb
pop
xchg
es
push
mov
sti
mov
push
sub
mov
mov
or
cs
movsb
pop
mov
jecxz
int3
fnstcw
loope
lret
or
pxor
or
mov
inc
mov
hlt
jg
loop
leave
je
jp
rorl
lea
lock
jg
shlb
mov
test
or
xchg
adc
mov
int
leave
fsubs
jg
push
ds
and
daa
jne
aaa
fdivr
in
inc
loope
mov
mov
daa
test
or
xlat
mov
xor
cmp
xor
fcmovb
and
xchg
xchg
xchg
test
lahf
adc
fwait
cmc
inc
adc
das
mov
pop
cmp
popf
pop
jae
aam
and
loope
fisubs
scas
cli
or
jbe
pop
cli
sbb
pop
lods
mov
xor
in
popa
push
out
js
xchg
push
and
push
dec
ja
stos
mov
mov
scas
push
adc
and
and
sub
dec
ret
out
shll
daa
les
pop
dec
fadd
lcall
imul
xchg
mov
sti
mov
out
repnz
js
mov
out
mov
cmpsb
repnz
xor
jns
sub
ret
mov
pusha
xchg
clc
movsb
cmpsb
imul
lcall
psllw
jne
pop
mov
pop
pop
sbb
fnstsw
mov
sbb
cmpsl
add
and
testl
mov
add
scas
dec
jle
mov
push
jns
inc
movsb
lret
push
dec
and
mov
jb
test
cmpl
lock
dec
mov
or
jp
out
dec
lcall
es
lods
lret
and
sub
mov
cmp
icebp
pop
add
insl
ja
xchg
idivb
pop
add
andl
std
inc
push
jno
jo,pn
cmp
stos
aad
pop
jle
imul
or
dec
pushf
loopne
xlat
jno
mov
nop
leave
mov
dec
pop
mov
adc
push
out
fdivl
mov
dec
lea
jle
mov
add
fisubrs
cmpsl
rorl
out
cmpsb
lret
outsb
push
nop
inc
xor
bound
mov
data16
or
in
lcall
jbe
xchg
dec
rcrl
pop
aam
push
adc
cmpsl
rol
jp
jb
dec
sti
ret
or
roll
decb
push
push
jbe
fwait
dec
dec
movsb
push
lret
add
icebp
stos
mov
in
sti
rclb
xor
fsub
push
push
or
jle
popf
adc
ret
pop
cmc
dec
mov
shll
push
xchg
enter
push
inc
sub
popa
jae
or
xor
iret
mov
dec
rol
int3
sbb
dec
les
stos
clc
stos
push
jmp
out
pop
pop
inc
sub
test
loop
gs
fbstp
imul
test
jp
cwtl
divb
dec
cmp
popf
xchg
inc
mov
sbb
mov
push
into
out
dec
jge
loope
test
mov
cmpsl
sub
mov
daa
int3
dec
push
into
fcomps
leave
or
push
or
mov
inc
cmc
sbb
mov
jl
insb
fwait
push
jo
cld
mov
mov
repnz
andnps
push
adc
jo
push
pop
dec
lods
xchg
xchg
pop
pop
xchg
jo
jl
xor
and
mov
jnp
pop
data16
lds
inc
popf
mov
push
xor
jge
enter
mov
add
ja
aaa
mov
mov
and
add
mov
lods
lock
fwait
in
test
fsubs
push
addr16
test
xchg
mov
pop
inc
or
aad
scas
inc
xchg
leave
xchg
out
out
lret
arpl
mov
mov
aam
dec
cmp
inc
xchg
inc
mov
mov
xorb
xor
cmp
movb
dec
push
outsb
repz
jmp
adc
adc
jl
adcl
fnstcw
repnz
pushf
pop
inc
push
cmp
xor
loope
js
jns
and
cs
aaa
push
hlt
pop
data16
sub
lods
push
ffreep
test
and
arpl
rcr
mov
popf
adc
dec
popf
fistpll
pusha
je
lret
adc
dec
and
mov
or
repnz
jle
fsubrl
inc
das
fcom
mov
and
xchg
dec
cmc
push
dec
sbb
push
xor
or
jne
div
dec
arpl
ljmp
test
push
push
xchg
lods
adc
and
dec
mov
pop
mov
mov
cmp
daa
push
pop
jle
iret
inc
xlat
mov
jmp
sub
xchg
fidivs
inc
cwtl
jns
inc
jmp
les
inc
in
ret
adc
ljmp
std
pop
inc
mov
popf
cmp
push
inc
lea
dec
xor
repz
adc
sbb
mov
fisubrl
pop
mov
pop
xor
and
shll
cs
test
sub
in
cmp
add
adc
sub
or
arpl
lea
out
arpl
lcall
adc
fcmove
ror
rcll
scas
pop
jns
lods
fisubl
inc
ret
mov
mov
adc
dec
xchg
faddp
aam
gs
xchg
sbb
ljmp
popa
out
mov
jnp
int
or
pop
pop
cmova
xchg
pop
add
mov
pop
mov
jb
push
mov
arpl
xchg
orb
or
mov
jmp
arpl
dec
cld
mov
adc
repnz
fimuls
icebp
dec
mov
das
pop
or
lock
fiaddl
bound
dec
jb
mov
enter
jge
jno
and
ljmp
lods
sub
sbb
push
es
fiaddl
jl
int
push
fs
lods
xchg
sbb
ret
int3
xchg
dec
xchg
jmp
loope
adc
and
jge
cltd
cwtl
orl
arpl
cmp
xchg
leave
and
pushf
cmc
push
sbb
lods
push
xchg
scas
fstpt
pop
cmpl
addr16
jmp
and
ds
imul
cs
bound
lods
jb
push
pop
xor
mov
jg
out
sbbb
leave
fidivl
lds
push
fchs
jne
cmp
loope
stos
test
pop
lret
es
xchg
scas
dec
xchg
mov
jae
gs
gs
mov
ss
or
pushf
outsb
xlat
mov
xor
pop
push
idivb
jle
mov
out
popa
push
dec
cmp
xor
or
dec
cmpsl
int3
fildll
mov
push
push
outsl
test
cltd
lahf
add
sub
push
inc
push
in
scas
and
out
cmp
in
inc
fdivl
pop
sbb
out
xchg
aaa
in
lret
lahf
fcoms
jb
pop
cmp
aas
push
dec
or
scas
pop
lea
cmpsl
test
xor
ds
dec
test
jmp
cmc
sarl
and
pop
xor
mov
pop
loopne
or
lahf
xchg
jmp
or
mov
jns
vprotq
dec
add
xlat
push
in
jecxz
mov
sbb
add
mov
inc
pop
xchg
push
in
popa
arpl
addr16
subl
adc
lds
sbb
sbb
pop
or
repz
ror
mov
pop
ss
leave
stos
add
push
imul
filds
jle
jbe
std
xchg
jo
xlat
js
push
adc
sbb
mov
fwait
add
cmp
decl
in
ljmp
pushf
adc
test
jge
jnp
subl
lock
push
adc
imul
das
ja
mov
cmp
dec
pop
arpl
leave
movsb
and
shlb
add
es
les
push
das
dec
sbb
loope
rcr
arpl
or
push
xor
mov
sub
mov
push
add
nop
pop
push
inc
test
push
stos
xor
add
adc
inc
push
push
cmp
vminpd
add
fistl
push
je
sahf
insb
mov
mov
fidivrl
aad
cmp
stos
fsubr
adc
rclb
hlt
inc
ret
jns
cmc
in
mov
rorb
icebp
popa
xor
pop
pop
outsl
adc
jae
insl
or
insl
std
fldenv
clc
xchg
leave
enter
leave
stc
std
push
into
loope
leave
sub
sbb
je
negb
add
and
bound
aaa
popf
fcoms
das
mov
cli
loop
in
inc
outsb
ret
xchg
jl
sub
test
bound
add
cmp
js
jns
sbb
adc
xchg
pop
dec
or
scas
inc
loop
xorb
jne
inc
adc
int3
sbb
shll
xchg
mov
popf
adc
or
adc
aam
and
fisubs
pop
pusha
stos
push
pop
pop
insb
inc
and
mov
ret
cmpsb
inc
leave
sbb
mov
and
adc
jnp
scas
adc
popf
xor
ja
mov
adc
jne
movsl
or
sbb
pop
jae
dec
lods
fsubrp
fs
push
pop
daa
pusha
cmp
lret
orl
pop
test
jp
or
mov
push
mov
jnp
stos
idivb
jbe
cmp
scas
mov
leave
xchg
mov
dec
rcll
xchg
cmp
jbe
sbb
pop
subb
lods
nop
inc
test
pop
fcom
mov
out
push
fadd
dec
popa
sbb
stos
push
push
leave
lret
mov
add
daa
jp
mov
js
ss
aaa
and
push
push
test
mov
inc
inc
dec
sbb
stos
sub
pop
icebp
fisttpll
test
dec
mov
cmpsl
ror
das
jb
dec
sub
xor
adc
jecxz
sarl
push
mov
push
push
lcall
dec
clc
es
mov
arpl
repnz
pop
xchg
fnstcw
and
fcomp
xor
fidivs
dec
ret
cltd
out
les
jg
jo
mov
adc
cmpsl
pop
xchg
nop
mov
inc
add
je
mov
int
je
sbb
xor
cwtl
scas
loope
adc
fldl
loop
pop
mov
sbb
leave
insl
or
xchg
cmp
shrb
sub
sbb
pushf
in
pop
xchg
or
sbb
adc
lahf
or
aaa
xor
or
fisttpl
cmc
lea
mov
fisttps
pop
sahf
or
or
ret
add
inc
pushf
insl
mov
push
mov
xchg
iret
clc
add
and
out
adc
lods
mov
push
bound
aad
mov
cwtl
call
dec
mov
ds
incl
and
mov
in
popl
sub
out
sbb
aam
addr16
out
in
xor
mov
pop
xchg
add
push
or
aad
mov
ss
jo
adc
andl
into
test
cmc
xchg
lahf
dec
add
out
fisubl
mov
out
xlat
inc
sub
xchg
dec
pusha
sbb
sahf
shlb
outsl
mov
ret
push
cmp
daa
push
mov
jae
rcll
or
jge
sbb
push
outsb
ret
lods
dec
push
aam
scas
pop
push
jno
int
out
mov
nop
in
icebp
js
ret
lcall
movntps
fwait
cmpsl
lcall
push
pop
xor
nop
push
test
insl
pop
push
insb
jnp
or
jae
mov
loopne
push
add
ret
scas
inc
js
mov
fdivl
mov
testl
mov
mov
testl
addr16
xchg
inc
scas
pop
cld
out
test
ret
pop
jp
adcl
jl
ret
cmp
addr16
jl
xchg
out
add
mov
int
jl
lea
pop
cltd
jno
or
ror
sub
mulb
arpl
inc
jnp
pop
popa
jbe
ficompl
xchg
adc
mov
jmp
fwait
sahf
adc
mov
test
repz
test
and
xchg
inc
dec
jns
into
mov
int
gs
push
or
jle
sbb
add
mov
mov
popa
lea
cmp
sbb
sbb
pop
adc
inc
adc
shlb
sub
out
cmp
or
push
jge
in
jnp
out
and
jg
and
dec
and
sbb
fnsave
in
dec
int
adc
outsb
push
push
js
add
fdivrp
sahf
shll
imul
fucomi
push
mov
ficomps
aad
mov
mov
daa
addr16
sti
mov
mov
jecxz
and
orb
adc
push
aam
mov
pop
mov
push
fs
inc
jns
das
pop
sbb
push
add
ret
dec
rcrl
cltd
jbe
adc
mulb
xchg
cmc
addb
cmp
aam
jg
pop
shlb
or
fmuls
dec
push
nop
out
pop
outsl
mov
pop
push
sub
mov
xor
loopne
add
add
daa
out
dec
pop
add
cmpsl
inc
repz
repnz
pop
cmpsl
leave
pop
push
jecxz
idivb
mov
pop
ja
jl
xchg
sahf
addr16
daa
test
ss
adcl
xor
or
shlb
mov
ljmp
out
inc
cld
push
int3
retw
sbbb
aad
xor
loop
insb
les
mov
push
mov
and
aas
cvtps2pi
dec
sti
lods
sbb
add
add
movsl
push
lds
scas
movsl
sahf
fidivrl
xchg
pusha
pop
sbb
push
sbb
outsb
sti
ret
in
push
roll
or
and
imul
adc
sbb
sbb
or
lods
mov
pop
pop
adc
not
mov
jb
lret
ds
frstor
subl
cli
int3
testl
les
hlt
sub
fwait
and
or
jb
popf
mov
outsb
lods
mov
jecxz
lret
scas
mov
imul
fs
sub
inc
mov
xchg
popa
cmp
dec
sarb
popa
push
xchg
push
push
pop
ja
push
bsr
lcall
lods
xchg
push
movsb
fmulp
jo
iret
xor
xor
or
ror
movsl
fdivrl
add
lods
add
stos
push
std
shrb
mov
dec
pushf
mov
fidivl
lods
sarl
test
push
mov
inc
into
lea
adc
push
pop
jg
pusha
imul
iretw
mov
dec
in
sub
out
mov
inc
dec
leave
and
and
push
sbb
push
dec
movsb
mov
int
ret
jl
jmp
jecxz
add
xchg
loop
ror
daa
jl
inc
call
xorl
in
das
jecxz
cmp
mov
call
addl
jmp
mov
aam
je
jge
ljmp
push
lods
rorb
inc
arpl
jecxz
cwtl
mov
mov
dec
stc
cmp
mov
cmp
ljmp
pop
sub
xlat
repnz
push
or
adc
iret
inc
jmp
fmuls
mov
push
into
dec
lock
push
lahf
cmp
push
adc
sbb
push
adc
sbb
clc
mov
sub
add
repnz
fisttpl
xchg
push
loopne
jg
out
xchg
nop
cmp
rolb
pop
jmp
lahf
sbb
or
xchg
dec
in
fs
out
and
sarl
and
push
dec
out
adc
jle
or
mov
push
inc
mov
xchg
adc
addb
jl
push
fwait
lret
stos
xor
rorl
lret
push
mov
dec
repz
fildll
aas
push
jae
pusha
ret
gs
mov
rcl
or
jmp
add
xor
push
sub
lret
jnp
xchg
push
add
divl
int
arpl
mov
cmp
sar
dec
and
loope
pop
mov
mov
daa
js
mov
sub
incl
push
push
mov
or
test
in
popf
fiaddl
shlb
sub
dec
out
mov
in
out
inc
add
adc
dec
pop
sbb
test
cmpsl
vrcpps
lahf
cli
pop
add
xor
sbb
inc
mov
push
shrl
hlt
fcmovnb
ja
aaa
lahf
cmc
push
jno
sahf
aad
js
dec
cltd
scas
mov
push
hlt
lds
mov
pop
or
or
clc
gs
cltd
mov
jp
or
lahf
sub
xlat
push
or
int
lcall
fcoms
cltd
aaa
rclb
jb
out
outsb
jo
add
and
sub
ljmp
lea
shl
pop
loopne
sbb
mov
mov
rol
mov
sub
xchg
and
xchg
lcall
or
mov
pop
pop
or
int3
clc
cmpsl
mov
push
add
test
mull
jne
pusha
loopne
xchg
fadd
hlt
daa
mov
xor
cmpsl
fs
test
mov
fdivr
cwtl
xchg
jge
jp
mov
push
fxtract
das
imul
xchg
clc
or
add
cmp
loop
enter
fs
and
outsb
daa
mov
faddl
outsl
aaa
adc
lahf
subb
mov
cmpsl
sub
add
lods
cmpb
test
cmp
xlat
pop
jmp
pop
loopne
sub
push
mov
mov
mov
dec
shll
enter
int
pop
mov
adc
sub
adc
pop
aaa
jmp
xor
push
std
xchg
adc
inc
out
sbb
orb
add
in
call
cmp
int
popf
int3
iret
fcmovnbe
inc
mov
xchg
mov
xchg
hlt
aas
daa
int3
dec
mov
push
in
mov
mov
mov
sbb
bound
inc
cmp
push
dec
inc
mov
popa
out
cmp
lds
sbb
mov
and
es
xchg
xchg
xchg
dec
iret
and
mov
mov
rorl
push
dec
sub
add
fisubs
stos
xor
in
xor
adc
gs
leave
jne
loope
in
mov
cltd
lret
xlat
shll
adc
hlt
gs
pop
mov
aad
or
xor
sti
popf
mov
rclb
mov
sbbb
mov
xchg
xor
sbbl
lret
cmp
enter
jg
mov
inc
jecxz
es
pop
mov
loopne
out
xchg
imul
ss
arpl
mov
or
fsubl
jmp
mov
jnp
mov
repz
push
iret
sahf
loop
test
inc
or
jecxz
and
or
enter
lahf
jbe
nop
xchg
mov
fimull
mov
or
aas
mov
movsb
rcll
sub
cwtl
test
fcoml
pop
cmp
adc
xchg
sub
mov
out
xor
sbb
pop
test
add
sub
dec
cltd
aas
add
mov
mov
insl
mov
popa
fcmove
push
popf
loope
sub
or
jecxz
imul
xlat
rolb
pop
mov
sub
adc
pop
push
jge
call
mov
jmp
xlat
loope
pop
scas
hlt
mov
and
xchg
mov
sub
rcrb
aaa
and
mov
mov
mov
sti
and
xchg
mov
pop
adc
neg
add
fcompl
push
mov
mov
cld
fucomip
pop
test
js
inc
sbb
or
imul
test
sbb
shlb
fldcw
nop
mov
adc
test
jmp
dec
mov
repz
in
inc
and
dec
ficompl
dec
dec
inc
test
mov
int
out
cmc
mov
adc
ljmp
xchg
pop
or
push
mov
inc
sub
loope
and
mov
mov
inc
pop
dec
lods
lods
jmp
jne
outsb
add
lods
add
pop
and
mov
jmp
xor
mov
test
inc
out
fnstcw
imul
fstpt
addl
popf
lods
and
call
add
cli
jl
dec
leave
icebp
mov
das
testb
xlat
out
xlat
mov
ljmp
jmp
lret
sbb
or
inc
cmc
jmp
or
cmpb
sbb
fcmovne
rcrb
mov
mov
adc
frstor
mov
ret
enter
cmp
imul
aam
dec
and
jbe
add
push
out
hlt
pop
add
popf
adc
mov
call
xor
cs
ret
cwtl
scas
int
in
sbb
cmpb
insb
insl
fwait
mull
jmp
cmp
insb
cmc
push
fsubrp
lret
jmp
mov
rorl
in
lods
jae
pop
lods
and
cwtl
sarl
xrelease
imul
xor
aas
dec
fdivrp
push
add
aas
ljmp
shrb
lods
fcompl
ret
icebp
shrl
push
ds
adc
arpl
xlat
jns
int
shlb
ret
ljmp
adc
lods
cmp
xchg
sbb
lgs
loop
negb
inc
dec
mov
aad
add
sub
sbb
je
jo
cmpsb
testb
pop
xchg
pop
adc
jmp
xor
aad
cwtl
push
test
call
sub
or
or
push
aas
push
lret
mov
inc
outsb
repz
inc
out
rcrb
lret
repz
insb
icebp
kmovb
insl
leave
dec
fnstenv
repnz
fwait
inc
push
sbb
daa
das
mul
rclb
fsub
call
insl
dec
mov
and
dec
cmpsb
sti
lcall
and
push
jle
and
xchg
aam
and
orl
or
outsb
fs
dec
out
or
pop
in
mov
sbb
scas
lahf
xchg
sahf
daa
mov
jp
out
out
les
cltd
push
sbb
loopne
add
fcoml
gs
ljmp
adc
leave
popf
jb
sub
jmp
test
push
cwtl
insl
loop
enter
sbb
and
pop
jmp
mov
add
loop
imul
hlt
shlb
enter
or
notb
push
cli
pop
out
ja
xchg
jbe
insl
push
mov
loop
fsubrs
shrb
orl
test
insl
dec
add
cltd
mov
cmp
out
adc
dec
test
jmp
xor
adc
hlt
sbbb
adc
mov
pop
mov
adc
cmp
cmpsb
aaa
and
iret
cmp
fs
and
outsb
dec
sbb
loope
fsub
mov
in
push
inc
jmp
mov
push
pop
fldt
nop
jo
leave
ss
testl
pop
push
inc
int3
sub
adc
fadds
pusha
shrb
xor
xchg
xor
stos
inc
adc
dec
insl
mov
cmp
stos
popf
lret
fistpl
cmp
mov
adc
ds
xchg
ret
xchg
popf
loopne
out
cli
fnsave
mov
sbb
jb
jbe
or
sbb
std
push
push
enter
push
jnp
lea
int3
ds
adc
lret
loopne
xchg
mov
inc
pop
adcl
lds
xlat
xchg
data16
ljmp
and
push
jne
jge
inc
in
push
xchg
stc
pop
xor
in
fs
mov
loop
adc
xor
movlps
popa
adc
pop
pusha
jge
adc
sti
mov
push
stos
call
fbld
jns
dec
lahf
enter
jge
pop
movsb
xchg
lcall
inc
xor
mov
sbb
into
push
pop
xchg
mov
dec
adc
test
mov
push
adc
test
sbb
pop
cmp
adc
xor
xchg
sub
ret
pop
and
mov
stos
loop
sub
push
lcall
sub
sbb
jecxz
sub
push
enter
adc
jge
push
adc
push
pop
repnz
jp
adc
mov
cmpsb
pop
iret
fcmovb
arpl
inc
stos
je
or
sti
pushf
mov
cmp
sbb
fsubs
push
hlt
hlt
imul
or
nop
sbb
mov
loop
mov
mov
stos
pop
mov
hlt
add
fstps
fists
xor
fs
add
mov
pop
mov
pop
dec
cld
cmpsb
cmp
sbb
push
or
add
xchg
pop
cmp
repz
fstpl
cmpsl
sbb
shlb
mov
rcrl
sahf
clc
add
jmp
mov
insl
jnp
pop
imul
in
es
mov
xor
sahf
cld
repnz
lock
dec
std
into
in
mov
popa
jo
popf
adc
jo
cltd
cmpsl
rolb
add
jo
add
fsubl
adc
cmp
popf
in
in
loopne
ja
inc
pop
shl
xchg
mov
std
or
lret
stc
cld
ss
ret
sar
or
cmpsb
mov
arpl
and
pop
pop
push
pop
fstpt
daa
aaa
pop
int3
push
dec
fdivrl
mov
sar
loope
cli
pop
add
imul
mov
mov
fldt
mov
push
push
and
rcll
repz
dec
add
mov
gs
mov
sti
nop
cmc
cs
inc
fsubrl
pop
dec
mov
lcall
or
inc
fidivrs
xchg
fwait
push
ja
sbb
test
mov
push
jno
sbb
ds
lods
or
sub
or
cmp
mov
push
dec
and
js
adc
sub
jg
xchg
adc
in
xchg
or
xchg
inc
pushf
addl
mov
fadd
jb
pushf
and
jl
loop
dec
push
inc
add
fwait
push
inc
mov
ja
fisubl
pop
ror
push
mov
mov
or
cld
or
adc
xlat
mov
aad
mov
cmp
stc
push
lcall
and
push
fstpt
test
fistpl
jmp
pusha
imull
jo
arpl
push
or
pop
mov
mov
sub
les
mov
repz
leave
out
arpl
mov
fcom
mov
mov
mov
out
xchg
xchg
je
mov
pop
loopne
outsb
daa
add
fs
cmp
lret
jo
sbb
and
fstpt
push
sbb
jns
adc
adc
call
jmp
mov
push
outsb
xchg
pop
pop
pop
fcomip
aad
enter
cmc
daa
sub
mov
mov
dec
pop
pop
cwtl
les
adc
mov
clc
test
mov
sbb
inc
push
jmp
adc
cmc
jbe
push
xchg
jno
add
movb
pushf
lock
sahf
sub
lds
mov
mov
dec
jge
mov
mov
in
add
into
mov
sbb
sub
repz
xchg
mov
or
or
loopne
cwtl
adc
test
cmp
push
dec
ret
jne
adc
faddl
pop
inc
out
call
aas
cli
out
ficoml
popf
shll
ret
cmp
mov
cmc
in
jbe
fcoml
cmc
push
adc
push
jno
pop
adc
sbb
popa
add
mull
xor
cmp
mov
push
add
dec
or
fnstsw
add
cmp
sbb
or
push
mov
jnp
aad
mov
das
dec
mov
pop
aas
cmp
notb
ret
int
pop
into
mov
test
pop
xchg
mov
sbb
mov
data16
jge
or
xor
dec
pusha
adc
sub
mov
cld
pmuludq
adc
test
aam
hlt
xchg
mov
repnz
sub
stc
dec
icebp
or
cmp
and
inc
ret
jbe
jl
test
pop
loopne,pt
divb
lods
jecxz
pusha
add
mov
xchg
lret
jns
add
inc
or
push
dec
mov
adc
or
pop
xchg
popf
fnstenv
les
cmp
sub
add
jl
in
add
shll
out
sbb
cmp
xchg
pop
sbb
sub
inc
add
clc
nop
out
cmp
sti
pushf
shlb
sbbl
sti
cltd
shrb
adc
stos
arpl
shlw
xor
push
movsb
xchg
push
dec
sbb
lcall
xor
push
movsb
outsb
scas
cmp
jnp
push
test
and
mov
fdivs
mov
icebp
scas
dec
pop
movsb
shll
in
movsb
sbb
mov
sbb
jno
xor
cmp
bound
sahf
jbe
iret
stos
bound
iret
pop
push
xchg
sbb
xor
das
int3
daa
xchg
cmc
orb
dec
adc
push
jae
cmc
incb
lret
mov
subb
mov
not
pop
mov
ficoms
loopne
int3
mov
jo
mov
mov
cmp
xor
jmp
imul
into
adc
sbb
fdivrs
xor
adc
ds
inc
jno
flds
mov
lea
sub
jg
popf
into
or
jmp
lcall
shll
mov
bound
fidivs
xchg
orb
cmp
pusha
scas
adc
loope
repz
push
mov
sbb
pop
or
inc
in
lds
or
js
movsb
ret
and
lret
mov
push
adc
or
movsb
ds
sub
movsl
cli
sti
out
je
out
js
pop
xchg
xor
std
inc
or
les
adc
adc
and
cmp
gs
inc
push
lds
mov
add
push
mov
push
iret
lret
popf
in
mov
movsb
loopne
and
ret
stc
or
aad
pop
pop
stos
stos
mov
call
fdivrs
jmp
pop
ds
lock
dec
mov
xchg
push
mov
mov
scas
loopne
sub
sub
xchg
sbb
xchg
les
loop
dec
and
inc
pop
pushf
fisubrl
fldt
clc
into
sub
mov
scas
imul
xchg
push
mov
xor
add
rol
xor
aam
movsl
pop
xchg
and
rorl
mov
cld
sbb
lds
es
mov
addl
and
arpl
push
jle
pop
cltd
dec
es
cld
pop
mov
pop
rclb
push
mov
lea
adcl
andl
lods
or
pop
jecxz
aaa
adc
sub
addr16
or
shrb
cmp
mov
sbb
or
out
sbb
rorb
pop
repnz
add
test
dec
mov
cmp
sbb
push
mov
std
push
rcl
sbb
test
rcll
sbb
mov
lods
mov
pop
mov
lahf
orl
jp
gs
sbbb
and
rol
cwtl
ficomps
xchg
sub
push
xchg
push
ljmp
sub
jbe
nop
and
push
subb
repz
push
jno
in
pop
inc
dec
xorl
insb
std
or
dec
scas
adc
xor
aam
fldenv
jg
fdivs
add
and
aas
mov
int3
rol
rcll
cmp
int3
adc
add
loopne
add
push
push
xor
sbb
outsb
in
test
filds
dec
xor
ss
mov
sub
nop
cs
mov
cwtl
xchg
mov
mov
loope
cmp
mov
ret
sub
dec
popf
inc
loop
xchg
lcall
fcomp
adc
loopne
cld
add
sbb
mov
pop
arpl
inc
add
out
xchg
push
dec
out
push
lock
jns
adc
inc
ljmp
icebp
mov
into
cmpsl
outsl
leave
sub
and
scas
je
xchg
sbb
mov
testb
cmp
lock
or
sbb
push
pop
push
jle
daa
dec
cmp
aaa
dec
xor
sub
add
fmul
lea
arpl
push
inc
dec
xchg
mov
hlt
xor
in
or
mov
addb
sub
int
hlt
fistps
ret
fwait
cmp
or
popf
mov
fadd
inc
out
aam
xor
mov
leave
ljmp
sbb
xchg
jmp
lods
inc
cld
lahf
and
pop
movsb
dec
sub
fs
aam
sub
pop
das
sub
adc
pusha
test
add
shl
adc
aad
pop
mov
cmp
test
scas
add
pushf
ljmp
pop
in
add
jg
adc
lcall
ljmp
lret
dec
sub
pop
add
jb
xchg
rcrl
jg
inc
sbb
insb
in
fs
dec
std
xchg
dec
add
jecxz
lods
fcmovnu
mov
and
sbb
xor
ja
pushf
stos
stos
pop
mov
or
mov
rclb
sub
lods
hlt
sub
push
sti
push
mov
sbb
insb
leave
sub
cmpsl
xchg
mov
cwtl
mov
sbb
or
in
sti
inc
sub
mov
sbb
cmp
lea
sbb
sbb
js
jge
je
fsubrl
sarb
push
mov
mov
cmpsl
dec
jl
lock
adc
test
pop
mov
push
sbb
sarb
add
xor
outsl
pushf
stc
call
xchg
aaa
adcb
inc
mulb
xchg
cmp
or
inc
popf
cmp
scas
dec
cmp
adc
std
call
ds
and
pop
mov
test
cmc
ss
data16
mov
and
loopne
setne
inc
xchg
sbb
sbb
ss
jne
dec
add
decl
push
add
mov
adc
adc
decl
add
std
add
lods
sti
pop
fisttps
lahf
enter
mov
push
negl
scas
dec
pop
xchg
int
sbb
or
inc
xchg
cmpsl
xchg
adc
xchg
iret
push
ja
aad
add
jg
jno
sbb
rcrb
inc
loop
xchg
in
mov
adc
fcomps
mov
lods
and
push
mov
nop
pop
inc
inc
xchg
lahf
adc
jmp
fwait
popa
xchg
jb
inc
inc
cmp
inc
mov
mov
push
ret
arpl
push
stos
or
mov
cmp
xchg
rcl
mov
bound
shrl
addl
dec
lods
jbe
push
pop
iret
sbb
aas
jecxz
aas
jecxz
fs
daa
orl
les
sub
add
fwait
aam
xor
invd
mov
or
add
testb
inc
sbb
lcall
push
dec
aam
or
stos
push
pop
mov
pop
push
push
into
aas
dec
mov
jbe
out
test
push
test
mov
push
fists
es
sbb
jns
cmp
dec
jecxz
dec
sbb
cmp
or
jo
shrl
das
pop
push
inc
neg
lea
mov
scas
mov
mov
pop
adc
jl
fcmovb
mov
fnsave
sbb
push
xor
xor
mov
jbe
push
bound
xlat
fstl
or
jnp
add
pop
bound
icebp
idivb
xchg
sub
mov
or
or
test
lods
xchg
dec
into
into
aad
pop
dec
jmp
nop
imul
xchg
cmp
int
stos
ja
arpl
mov
sub
rcrl
push
fstpt
in
ret
in
push
mov
and
push
daa
mov
and
int
dec
cmp
outsb
or
popa
dec
fwait
mov
test
cmpsb
dec
sbb
push
push
pop
pusha
lods
xor
movb
movsl
add
sub
shrl
cmp
icebp
pop
iret
mov
movsb
mov
loopne
pop
sbb
push
arpl
test
add
or
or
lahf
loop
jmp
loop
xchg
dec
xchg
ds
lcall
loop
and
push
daa
dec
sub
mov
mov
inc
or
sub
sub
mov
jle
jbe
sbb
mov
xchg
movsl
dec
mov
mov
or
mov
jmp
in
cmp
cmp
rcll
jmp
add
xchg
push
loopne
je
out
jb
pushf
and
inc
xor
mov
lock
rclb
dec
pop
xchg
mov
pop
test
push
mov
fisubrs
sbb
bound
std
iret
scas
sbb
jo
into
inc
fldt
sar
jmp
cmp
jp
lret
and
jne
popa
out
push
outsl
das
add
das
out
add
sbbb
stos
push
dec
mov
mov
lahf
in
lret
jns
sub
mov
add
dec
jmp
lods
sarb
das
xor
mov
sbb
idivb
and
jmp
dec
dec
sub
pop
and
icebp
cmovp
pop
cmp
shlb
test
out
shlb
adc
push
rorb
pop
push
inc
loopne
xor
jg
jae
cmpsl
jnp
in
mov
mov
fimuls
xlat
sbb
jecxz
arpl
out
mov
arpl
lea
jns
idivl
das
gs
scas
scas
int3
adc
int
jns
insl
mov
mov
popa
push
push
jl
cs
push
xchg
lock
sub
lcall
pop
mov
negb
ret
sbb
jle
imul
imul
adc
aas
outsl
sub
pop
pop
shrl
mov
and
sbb
pusha
fisttps
outsb
pop
cltd
stos
mov
out
rcll
jbe
loop
sbb
add
lcall
popf
mov
inc
push
popf
insb
push
adc
scas
xchg
dec
iret
xor
sub
enter
jmp
adc
adcl
add
test
mov
sub
xchg
out
sbb
lret
and
es
jno
adc
scas
mov
pop
movsb
aad
aam
fildl
ret
xchg
aaa
bound
dec
xor
sbb
cmpb
fwait
inc
iret
or
push
ficoms
arpl
ret
imul
and
adc
xlat
inc
daa
arpl
and
out
out
dec
repnz
mov
das
aas
pop
ror
dec
cltd
movsl
add
jmp
mov
cli
adc
push
loop
push
clc
lret
xchg
or
mov
ja
mov
flds
jno
mov
adc
imul
mov
mov
shlb
int3
icebp
divb
jmp
sbb
lcall
imul
mov
cltd
mov
add
and
cmpsb
hlt
test
insl
repnz
and
mov
or
jbe
out
push
jg
ja
mov
push
cmp
push
cltd
jae
mov
jle
push
jmp
sub
pop
sub
or
vminps
jge,pt
movsb
lahf
leave
dec
push
es
ret
sub
mov
mov
push
inc
cli
inc
add
nop
movsb
or
ret
sbb
js
fsubr
int
mov
sub
push
loope
xchg
jae
int
fiaddl
cmpsb
frstor
xor
push
outsb
call
aaa
fdivrp
outsl
int
push
push
adc
lret
xchg
adc
mov
dec
cli
inc
cld
es
xchg
sbb
xlat
cld
hlt
sarl
dec
adc
rol
sub
push
pop
xchg
pop
sbb
adc
push
and
mov
jg
jl
ret
xchg
int3
lret
xchg
push
inc
cli
xor
sbb
sbb
push
mov
and
sbb
or
js
xor
in
xchg
or
sbb
xchg
jmp
pop
mov
jbe
jl
push
or
mov
inc
nop
cmp
sbb
inc
xchg
push
movsb
loop
les
out
int3
out
fistl
mov
push
es
ss
and
sub
adc
subl
out
jge
lret
fnstcw
and
lahf
cmp
mov
mov
dec
pop
out
xor
dec
dec
daa
push
lahf
aam
xlat
pop
test
push
dec
aad
jae
add
daa
negl
and
inc
jg
and
mov
aas
int3
sbb
inc
jle
inc
mov
jge
and
adc
push
push
mov
int3
sahf
lret
mov
mov
rcr
in
lods
out
mov
testl
mov
jb
js
lahf
mov
mov
subl
cmp
mov
sub
scas
test
xchg
js
push
int
xchg
jge,pn
cmp
push
decb
sub
xchg
push
roll
xchg
out
xchg
xor
jmp
push
rclb
enter
mov
cmp
and
jo
daa
divb
int3
mov
cwtl
and
push
and
pusha
xchg
imul
mov
jae
ds
insb
mov
lret
dec
jae
jno
inc
fdivl
and
jns
or
pop
popa
jae
push
inc
out
sbb
mov
inc
dec
push
fldl
ja
mov
cwtl
xchg
outsl
mov
call
test
sbb
ljmp
push
in
sbb
inc
pop
fisttpl
sbbb
jecxz
int3
push
pusha
cmp
cmp
fwait
or
add
mov
out
jg,pn
xor
or
and
mov
enter
or
xlat
shrb
xor
lret
mov
nop
out
dec
pop
loop
dec
inc
xchg
test
inc
xor
xchg
pop
sub
ficoms
or
push
adc
or
sub
sub
fnstcw
xchg
clc
scas
loop
mov
in
jmp
js
adc
lcall
ret
inc
and
jmp
inc
shll
inc
push
xor
inc
repnz
adc
or
xchg
nop
or
ret
les
in
roll
push
ret
cmp
in
cli
or
pop
roll
cmp
mov
inc
mov
mov
shrl
jae
lods
fdivrl
jbe
pop
shll
mov
dec
dec
jae
test
or
outsb
push
xchg
jae
adc
push
stc
scas
out
icebp
mov
aas
jb
loope
daa
jg
dec
clc
test
pop
ss
fldt
pop
dec
lods
sbb
stos
and
mov
or
dec
jo
cmovne
std
pop
inc
movsb
or
xor
add
aam
pop
cld
sub
popa
mov
inc
insl
sub
leave
les
sbb
adcb
mov
adc
mov
sbbb
lods
sahf
fnsave
pop
xchg
cld
pop
or
popf
ffree
adc
lret
jne
mov
fwait
es
std
cmc
loop
scas
out
idivb
xchg
or
scas
mov
lcall
fmuls
insb
mov
xchg
movsb
add
lea
adcb
pop
jae
sbb
lods
movsb
jne
pusha
inc
lcall
imul
fstps
fsubs
mov
jb
xchg
call
mov
popa
imul
jno
push
inc
adc
inc
repnz
pop
loope
inc
orl
ja
jns
xlat
adc
mov
stc
push
mov
add
jno
mov
or
xor
or
or
scas
add
mov
cmp
push
jae
pop
das
aaa
push
inc
xor
jmp
mov
ja
adc
add
dec
adc
jp
pop
dec
pop
mov
jmp
push
push
lods
insl
es
add
pusha
cmc
int
dec
xchg
nop
mov
sub
pop
dec
sti
cmp
rorb
aas
fbld
or
movsl
loope
shrl
lods
js
cli
pop
fwait
ja
fxch
cmp
iret
and
sub
movsb
mov
nop
repz
pop
std
mov
bound
jae
lret
cld
leave
or
mov
jbe
rcll
push
mov
add
xchg
sbbl
flds
push
jae
pop
xor
push
out
or
mov
push
pop
inc
or
jmp
adc
shll
int
dec
mov
push
jae
in
shlb
sub
xor
jb
sub
das
mov
imul
lods
fdivl
repz
push
lret
mov
jns
push
jno
push
jns
call
rorb
aas
jle
or
pop
pop
mov
aad
lret
add
mov
cmp
cmpsl
ficomps
icebp
aad
jns
sbb
dec
cmp
scas
or
mov
dec
pop
stc
icebp
stc
adc
adc
pop
dec
iret
jae
push
sbb
mov
dec
ret
xorl
mov
sbb
stc
jae
push
pop
lea
and
sbb
fwait
je
mov
int
add
pminub
push
int
push
adc
insb
sbb
mov
lret
in
and
scas
imulb
test
mov
xor
mov
add
test
jae
arpl
outsl
add
imull
inc
out
shrb
and
pop
ret
mov
nop
adc
dec
rorl
fildl
pusha
out
loop
rorl
xor
ja
mov
aad
lahf
xchg
out
addr16
sbb
sub
lahf
cltd
scas
add
pushw
out
mov
mov
decl
cmp
lahf
shrb
rcll
rcl
les
mov
cs
cmp
pop
dec
imul
push
xor
scas
jns
xorl
aaa
pop
jmp
es
cmpsl
cmp
mov
jns
add
xchg
or
xchg
adc
orl
sbb
dec
popa
or
scas
fisttpll
xor
mov
and
repnz
or
cmc
mov
push
scas
add
and
xor
out
jne
rcll
sbb
popf
lods
ret
roll
jge
or
shrb
push
fisubrl
push
into
dec
outsl
xchg
sbb
fldenv
xorb
cs
or
pop
or
xor
scas
or
push
mov
cmp
into
imulb
pusha
mov
je
scas
rcll
cwtl
adc
clc
push
es
jo
adc
lods
dec
cmp
scas
sahf
insb
scas
xchg
bound
adc
iret
call
ficomps
pop
sbb
out
push
sub
popa
in
or
fdiv
bnd
cltd
sbb
and
xor
or
xchg
dec
ret
pop
jno
rorb
inc
lods
mov
cmpb
sbb
int
xor
jo
fadds
mov
inc
and
adc
xchg
mov
inc
rorb
jmp
daa
iret
cmpb
subl
mov
rcll
dec
inc
sbb
fcmovu
sbb
lahf
push
je
mov
jae
cmp
inc
popl
cmp
loop
pusha
ja
cwtl
or
dec
loop
xchg
mov
loope
fimull
in
call
cli
inc
add
bound
aaa
jecxz
in
std
popf
aad
and
inc
xchg
test
sbbb
mov
cmc
pop
inc
pop
jae
mov
adc
pop
xorb
adc
in
push
or
push
pop
std
pop
aad
lods
mov
in
iret
jl
push
xchg
xchg
inc
push
repnz
and
sub
addr16
leave
das
adc
pop
add
pusha
dec
shl
mov
mov
cli
adc
arpl
sbb
lret
addr16
imul
jno
pop
shr
mov
pusha
cmpsb
iret
or
sarl
outsb
pop
adc
cmp
inc
fistps
pop
jmp
mov
icebp
test
stos
dec
xor
loopne
and
sqrtps
test
nop
scas
sub
insb
test
adcl
and
adc
pop
mov
lahf
fisttpll
pop
nop
es
adc
dec
arpl
sub
mov
gs
fwait
inc
sub
leave
add
inc
jecxz
pop
jge
cmp
nop
or
out
popa
jbe
out
xor
idiv
leave
ja
lret
js
push
mov
cmp
sub
push
aad
scas
mov
sub
push
mov
pop
cmpsl
sti
leave
scas
test
add
fisubs
mov
xchg
mov
loop
out
adc
lahf
in
lret
and
or
stos
push
lods
dec
mov
fdivs
test
add
adc
lods
cmpsb
add
sbb
add
lds
push
mov
das
jo
in
sub
xor
push
sbb
data16
sub
fcom
inc
loop
add
xor
sbb
pop
adc
sbb
or
mov
addr16
loopne
loop
sti
push
cmp
mov
sub
call
sbbb
call
jo
xor
mov
int3
jo
mov
test
and
movsb
dec
stc
pusha
push
mulps
rorl
jle
jo
sti
mov
sarl
icebp
cmpsl
sbb
or
or
fnstenv
xor
clc
adc
mov
adc
or
sar
mov
cmpsl
xor
ret
cld
mov
in
sbb
pop
inc
mov
movmskps
mov
add
in
pop
testl
les
add
add
or
inc
fsubrs
mov
xor
stos
lock
mov
and
push
rcrb
cmc
bound
xchg
clc
sarb
mov
cmp
bound
adc
jns
cmp
jb
push
ds
mov
mov
imul
add
and
or
jmp
in
add
push
stc
and
sub
xchg
push
mov
clc
in
sbbl
sub
or
repz
or
in
loop
test
clc
add
mov
dec
cltd
jns
jl
leave
lods
sti
orl
push
mov
int
xor
jae
xor
dec
pop
dec
mov
xlat
es
into
or
stos
add
ret
sbb
dec
lods
test
mov
mov
pop
push
popf
addr16
rcr
jmp
scas
loop
mov
dec
adc
sbb
lahf
lds
push
inc
adc
gs
mov
inc
mov
cld
add
pop
repz
outsl
dec
insl
mov
pop
xchg
sub
lods
out
ds
sbbl
in
sbb
sbb
aad
pusha
jno
fcoml
mov
in
push
push
sbb
pushf
out
movsb
iret
cli
xor
mov
in
mov
adc
mov
or
loopne
pusha
test
pop
into
es
fcomps
out
mov
jg
cmp
sub
cmp
cmp
dec
imul
pop
stc
mov
jne
jnp
cmp
int
out
and
and
adc
shr
fdivl
add
sub
test
psllq
mov
lds
and
into
mov
fidivl
xor
inc
addr16
xlat
ret
push
mov
pop
jbe
jge
hlt
js,pt
xchg
bound
push
cmp
sbb
idivl
mov
hlt
inc
imul
inc
mov
or
fucomip
int3
jg
insl
mov
xchg
lock
fwait
hlt
and
push
and
sbb
xchg
arpl
int3
or
mov
sub
mov
push
adc
test
push
jmp
mov
orb
out
xchg
inc
lds
iret
jo
in
add
pop
fst
stos
mov
sbb
inc
in
adc
fnstenv
ss
movsb
mov
pop
ss
shrl
enter
or
jl
fstps
lret
js
loope
rorb
push
sbb
xchg
pop
inc
pop
or
ljmp
pop
dec
or
xchg
xlat
lods
mov
je
loopne
dec
sbb
test
daa
dec
jl
data16
inc
outsl
shl
pop
sbb
and
imul
lahf
repnz
mov
lret
std
fdivl
mov
dec
xchg
adc
inc
jno
movl
mov
xor
mov
sub
and
fs
and
sub
loope
and
jmp
jmp
nop
push
pop
push
push
nop
push
pop
pop
pop
push
push
push
nop
nop
call
nop
nop
nop
nop
push
nop
call
nop
nop
nop
sub
nop
nop
nop
lea
nop
nop
nop
push
nop
nop
nop
push
nop
nop
nop
nop
push
nop
nop
push
nop
push
nop
call
nop
nop
nop
nop
add
nop
nop
mov
nop
nop
nop
nop
nop
mov
nop
nop
shr
nop
nop
nop
nop
jmp
nop
nop
lods
nop
nop
nop
nop
nop
add
nop
nop
nop
nop
xor
mov
nop
nop
nop
dec
nop
je
nop
jmp
nop
nop
nop
nop
nop
pop
nop
nop
nop
nop
pop
pop
nop
nop
nop
nop
jmp
