push
push
call
cmp
jne
push
push
push
call
mov
xor
inc
ret
xor
ret
push
mov
push
push
push
push
xor
sub
mov
mov
mov
mov
and
jns
dec
or
inc
cmp
jne
cmpl
jbe
mov
imul
lea
mov
xor
jmp
test
jne
cmpl
ja
mov
xor
lea
mov
sub
mov
addl
and
rol
add
inc
cmpl
jb
pop
mov
xor
pop
inc
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
mov
cmp
jae
mov
add
mov
add
mov
mov
jmp
leave
ret
push
mov
sub
push
push
push
push
call
mov
mov
push
call
mov
push
push
call
cmp
jne
movl
jmp
mov
sub
and
mov
pushl
mov
mov
call
pop
cmp
je
mov
jmp
push
push
push
call
mov
mov
xor
push
pop
div
mov
mov
shr
mov
xor
push
pop
div
push
pop
sub
mov
shl
or
mov
mov
xor
push
pop
div
mov
push
mov
neg
sbb
and
push
pushl
call
mov
push
pushl
pushl
call
add
push
call
push
call
push
call
pop
pop
leave
ret
aas
iret
cmpsb
jnp
int3
int3
int3
int3
int3
int3
int3
neg
jmp
push
push
push
push
push
xchg
sbb
test
adc
mov
and
and
sbbl
mov
es
out
mov
cmp
mov
ljmp
loop
lods
repnz
pop
or
test
and
mov
jp
mov
in
lods
das
dec
aam
xchg
xchg
stc
or
add
outsl
out
and
adc
lret
xor
push
mov
push
imul
bnd
mov
fistpll
lds
sub
in
in
cmp
imul
mov
lcall
movsb
sbb
push
adc
loope
add
ret
sub
ret
out
cltd
repz
jno
jmp
cmpsl
dec
loop
cmp
out
mov
sbb
aas
add
and
leave
jmp
dec
fwait
jl
jmp
cmp
xchg
mov
nop
xchg
adc
push
push
mov
push
inc
push
cmpsb
mov
inc
rorl
stos
jge
add
or
mov
shrl
jno
xlat
addr16
jge,pn
fimuls
mov
enter
adc
inc
icebp
or
mov
into
mov
inc
mov
loop
fisttpl
stos
loopne
xchg
jmp
ret
cwtl
push
fadds
test
and
xchg
and
jmp
pop
hlt
sub
and
mov
pusha
sub
pop
lods
scas
std
cmovg
push
pop
mov
shlb
cmc
dec
pop
mov
sub
cmovnp
fiadds
xchg
or
outsb
je
int3
out
fidivrs
push
push
jne
push
mov
sub
adc
xchg
insl
loopne
pop
dec
std
idivl
push
pop
mov
repz
outsb
cmp
inc
icebp
push
mov
test
push
and
dec
ret
dec
insl
sbb
lods
dec
pop
fsts
mov
mov
les
xchg
repnz
fdiv
lock
mov
add
icebp
fidivrs
ret
add
mov
out
out
pushf
aaa
out
fimuls
pusha
dec
lods
shrb
data16
adc
or
int
loop
push
incb
jne
mov
push
popf
ret
push
les
and
xchg
stos
imul
mov
dec
dec
adc
and
arpl
popa
cmp
out
shrl
mov
std
and
rcll
clc
call
fsub
pop
jl
popa
mov
nop
in
pop
fistps
sbb
cmc
popf
mov
aam
ffree
pusha
xor
orb
mov
aas
shrb
adc
or
bound
mov
or
push
sbbb
in
mov
jno
jb
rcll
scas
adc
cmp
minps
push
mov
scas
ljmp
cmpsb
cld
cmc
jle
and
dec
inc
sti
or
pop
scas
pop
out
sub
xor
push
mov
enter
cmp
fldt
pop
int3
mov
xor
push
xchg
scas
rcr
or
cmp
sub
scas
mov
mov
dec
loop
pop
cmp
inc
ds
xor
lods
xor
pusha
fisttps
stos
sbb
ljmp
pop
mov
jle
sub
jecxz
loop
sub
ret
sbb
lea
cmp
nop
xchg
int3
mov
inc
adc
in
jae
arpl
test
cs
adc
addr16
mov
lds
aam
lret
and
pop
mov
lret
or
mov
inc
jle
std
and
nop
add
jnp
mov
and
add
xor
mov
lea
inc
mov
in
imul
jnp
icebp
movq
adc
int3
sbb
cmp
sbb
push
clc
push
nop
gs
sub
scas
shl
mov
pop
mov
pxor
shlb
aam
popa
fs
je
and
dec
leave
mov
add
arpl
imul
cmp
jno
arpl
arpl
out
lret
js
repz
cmp
mov
mov
xchg
mov
enter
push
rorl
or
xchg
xchg
in
inc
jmp
cmc
gs
adc
mov
lock
dec
adc
das
sbb
cmp
shlb
mov
jns
lcall
cmp
adc
push
cmp
push
gs
lahf
out
jecxz
jle
mov
add
add
jg
xchg
int3
sti
mov
mov
mov
mov
mov
out
add
inc
mov
mov
sahf
shlb
test
pushf
nop
scas
sub
push
fdivrs
mov
shr
push
or
mov
aas
dec
pinsrw
jne
inc
into
repz
mov
xor
push
cmp
int
les
push
out
bound
xchg
adc
dec
hlt
jle
mov
dec
mov
cli
or
stos
in
insl
adc
addr16
fsubr
and
popf
add
orb
aas
lcall
aad
mov
xchg
dec
dec
xchg
outsl
std
test
movb
fdivr
jp
pop
arpl
inc
mov
fisubrs
jo
lahf
data16
dec
sbb
inc
xchg
adc
fwait
pop
sbb
mov
add
in
repz
xchg
dec
mov
in
pop
imul
xor
adc
mov
sub
push
add
push
mov
fistps
sbb
cli
daa
fcomps
mov
push
sti
sbb
mov
hlt
xchg
xor
jnp
lock
ret
mov
adc
mov
mov
cltd
jns
sub
fldt
mov
mov
pop
jecxz
sub
or
dec
cmpl
stos
inc
outsb
push
iret
stos
push
cltd
cmpsb
jecxz
push
xchg
cmpsb
cmc
aam
push
insl
dec
adc
pop
into
ds
cwtl
addr16
sub
inc
pop
outsl
gs
std
call
xchg
ficompl
push
je
aam
pop
jno
sbbb
lcall
mov
outsb
xchg
jp
sub
lret
je
insb
idiv
scas
das
jnp
push
jns
insb
fstpl
inc
ret
insl
insl
mov
lcall
dec
add
test
or
mov
or
sub
jp
add
test
add
mov
ss
daa
sbb
cmpsl
sahf
subl
sahf
mov
xorb
cmpsb
fistl
jno
enter
orl
push
insb
inc
and
fcoms
sbb
stc
dec
jp
in
jmp
in
push
mov
cld
pushf
daa
mov
mov
leave
add
out
movsl
into
ror
pushf
shll
int3
cmp
cltd
mov
nop
cmp
popf
dec
scas
call
loopne
lods
adc
loope
lock
xchg
mov
and
pop
stos
jle
sbb
fcmovu
fbld
pop
jecxz
jle
xchg
dec
mov
adc
push
dec
xchg
cld
mov
sub
orl
cmpb
push
sbb
push
ja
and
addb
cmp
lea
mov
cmp
push
pop
pop
mov
sub
sbb
and
loop
mov
outsb
popa
aam
adc
jb
push
out
dec
add
push
dec
mov
or
mov
add
mov
xchg
xlat
mov
pop
lahf
mov
and
cmpsb
je
push
in
jnp
mov
xor
xlat
divb
or
in
dec
rorb
sbb
ficoms
enter
popf
sbb
imulb
or
mov
pop
pushf
mov
cwtl
mov
popl
out
jmp
outsl
inc
mov
add
enter
jge
lcall
stos
int3
es
outsb
lcall
and
push
cmp
hlt
pop
das
ss
mov
outsl
add
inc
xchg
faddl
adc
test
inc
mov
mov
inc
fucomp
dec
dec
mov
xchg
aad
and
adc
aam
cmp
pop
pop
inc
mov
and
stos
fidivrs
or
repnz
arpl
insb
cmp
leave
pop
mov
xchg
in
mov
test
repnz
arpl
inc
ljmp
sti
xchg
addr16
or
ljmp
pop
pop
lock
pop
sti
pop
push
lock
rcr
pop
in
leave
xor
in
mov
loop
sbb
xchg
inc
push
xor
scas
mov
mov
jl
cmp
std
sbb
push
das
nop
lea
sbb
repnz
xchg
mov
add
jno
mov
outsl
jecxz
pushf
or
and
and
iret
jne
sub
fs
inc
iret
mov
lea
ss
add
xchg
push
xor
gs
repz
test
rclb
mov
mov
adc
es
lahf
sub
inc
fistl
fdivs
loope
sbb
sbb
scas
push
push
mov
cmpb
les
dec
dec
dec
xor
push
cmp
int3
mov
sub
ret
pushf
in
jg
push
xchg
mov
loopne
pop
in
xor
shlb
pop
add
lock
adc
mov
mov
inc
fs
xor
js
jecxz
push
aas
jmp
xlat
inc
cmpsb
movsb
adc
mov
repz
adc
subl
mov
push
and
cmp
je
adcb
mov
push
sbb
in
insb
cmp
imulb
jl
cld
dec
in
or
in
jbe
mov
add
inc
iret
inc
cltd
ljmp
sub
adc
adc
stc
push
imul
add
cmp
addr16
hlt
out
cmp
cmp
into
ficoml
jmp
sbb
daa
and
jg
fstpt
and
mov
insl
popf
int3
int3
xlat
sub
loope
add
shll
fsub
enter
xor
sub
jnp
inc
popf
orl
jmp
lea
cld
ja
mov
xor
test
sbb
dec
dec
pusha
mov
aaa
out
jae
in
imulb
dec
stos
or
and
sub
and
push
pop
xchg
adc
in
sbb
mov
mov
cld
dec
inc
lahf
movsb
xchg
out
insl
dec
push
ret
push
inc
mov
jnp
xchg
cmpsb
arpl
mov
push
mov
sbb
imulb
inc
add
push
sub
fstp
push
add
stos
push
mov
xorb
mov
and
pop
lret
dec
jmp
mov
in
or
add
iret
cmpsl
stc
ljmp
dec
lea
fwait
hlt
jg
or
test
fisttpll
mov
mov
pop
jg
int
mov
add
mov
dec
push
mov
pop
and
cmpb
in
or
fsubrl
jb
daa
mov
xchg
adc
push
gs
pusha
pop
stc
dec
bnd
or
sbb
dec
jecxz
std
jmp
add
int3
daa
aaa
idiv
mov
mov
addl
mov
call
sbbl
mov
test
jne
xor
jb
push
orb
icebp
shlb
or
cld
and
mov
inc
push
mov
test
cmp
shrl
adc
test
loop
inc
repnz
xchg
cwtl
or
ret
mov
int3
pop
xlat
aaa
in
dec
enter
mov
jg
jns
add
das
mov
movsb
loope
ret
inc
cmp
stos
insb
jnp
clc
dec
xor
or
mov
or
scas
mov
and
loope
stos
sbb
xchg
sub
jmp
sbb
mov
sbb
adc
pop
push
add
dec
ret
push
and
sbb
pop
mov
int3
stos
adc
cltd
sub
mov
stc
inc
dec
dec
xor
dec
jae
and
jbe
or
rorl
adc
and
ret
je
lahf
insl
mov
in
imul
push
rcl
pop
dec
jg
dec
jns
es
js
push
jmp
je
out
addr16
xchg
add
daa
mov
dec
and
add
and
jle
outsl
out
or
les
out
fs
jmp
lods
test
pop
out
dec
rcrb
sub
fwait
push
bound
jmp
add
lds
pusha
aad
aad
mov
adc
mov
mov
cmpsl
xchg
mov
stc
addb
add
sbb
pop
scas
and
mov
sahf
sub
iret
pop
mov
or
mov
inc
push
loop
dec
add
cld
sbb
mov
insb
dec
stos
data16
xchg
add
aaa
or
imul
mov
xchg
jecxz
es
loope
jns
sbb
jbe
enter
out
jbe
aaa
pop
push
popf
xorl
das
mov
and
scas
lret
rol
pop
stc
sti
dec
fwait
int3
xlat
out
fisubrs
cmpsb
negb
es
xor
scas
pushf
xchg
imul
xcrypt-cfb
cmpsl
loope
fucom
mov
mov
aaa
inc
daa
fcompl
ja
ficompl
pop
leave
out
cmc
add
repz
dec
mov
add
xor
add
mov
adc
stos
jns
xchg
out
imul
add
gs
inc
and
sub
sbb
and
mov
loopne
les
cltd
gs
cmp
mov
jp
rcl
mov
cmp
inc
xchg
ja
sbb
adc
pushf
out
adc
cmpsb
mov
rcr
ret
adc
popf
daa
sbb
imul
add
mov
push
nop
cmp
mov
fisubrs
sahf
mov
sarb
adc
fistps
mov
mov
push
test
xchg
pop
shlb
push
ret
jae
daa
ds
xorb
adc
cmp
loop
insb
call
aas
aas
leave
in
cmp
shrb
push
jmp
and
mov
andb
ret
negb
gs
xor
sbb
add
mov
xor
xchg
sub
pop
insl
sub
mov
pushfw
cmp
jbe
adc
decl
jp
sarb
mov
xchg
sahf
push
cmp
mov
sub
iret
ss
mov
mov
push
jge
dec
xor
dec
std
cmp
add
stos
bnd
fsubrs
mov
bt
xchg
lcall
mov
mov
adc
adc
in
iret
adc
add
pushf
cmpsb
cs
clc
lcall
lods
pop
or
push
jl
dec
dec
pusha
cmp
rorb
push
mov
insl
dec
push
dec
xchg
xchg
testb
insb
aad
ret
push
enter
push
mov
stc
cli
add
jmp
scas
stc
push
pop
jmp
sub
ja
xor
lahf
mov
lods
in
and
mov
inc
push
out
outsb
popa
push
loop
xchg
iret
xchg
repz
divl
and
lods
and
mov
sbb
inc
pop
push
or
cmp
mov
lea
xchg
fmulp
enter
ret
nop
and
pop
sahf
jo
repz
insl
xlat
or
inc
sub
push
xchg
popa
adc
adc
mov
int3
push
and
ret
scas
and
xor
fdivrs
aas
repnz
loope
fisubrs
mov
je
xlat
pop
cli
cmpsb
int
inc
and
les
add
mov
adc
adc
pusha
xlat
xchg
nop
pop
jnp
dec
shlb
push
mov
jl
daa
xchg
jnp
cmp
fnstcw
cmp
callw
insl
ljmp
cmp
jge
test
push
pop
dec
push
mov
mov
jg
xchg
movsl
iret
lahf
push
ret
push
fldl
insb
rorl
xor
movb
xor
xchg
icebp
cmpsb
mov
call
mov
or
inc
aam
adc
dec
lret
pop
jg
aaa
inc
xchg
jbe
test
cmc
fcoml
repz
movsb
jbe
inc
sub
imul
ret
int3
cmp
push
mov
xchg
ljmp
mov
bound
loopne
test
cli
loop
xor
sbb
or
loop
mov
mov
lea
inc
sbb
xor
stc
or
insl
imul
test
ret
mov
sub
mov
mov
rcrl
mov
lahf
aad
pop
cmpsb
ds
pop
pop
arpl
jl
shrl
and
inc
inc
xchg
mov
pop
cmp
hlt
inc
pop
fiaddl
dec
iret
push
out
pop
dec
mov
leave
pop
add
cmp
xor
bound
jb
fnstenv
inc
sbbb
outsb
out
add
loopne
dec
cmpsl
xor
adc
xor
jmp
sbb
cmp
movl
loop
sbb
push
pop
and
cwtl
cltd
loopne
lods
ror
dec
lahf
in
cltd
cmp
pop
jb
mov
call
jl
ja
and
dec
movlps
subb
jg
and
inc
cli
bound
jmp
in
stc
stc
cli
pop
xchg
rcll
sbbb
lea
fistl
test
ret
push
maskmovq
mull
das
fwait
mov
popf
ret
xlat
add
ds
jg
jmp
add
sub
cmp
jp
jnp
mov
std
fnstcw
add
jle
mov
fisubrs
repnz
into
xor
sbbb
popa
cmp
outsb
stc
add
ljmp
xor
flds
in
sub
pop
add
mov
shl
scas
mov
mov
inc
jbe
sar
out
jg
push
and
push
cmp
push
aas
jae
scas
popa
repz
xchg
daa
movsl
inc
stos
call
pop
pop
rolb
out
cmpsl
xchg
mov
xor
repz
loope
jmp
and
aad
and
repz
mov
cmpb
or
xchg
jae
xchg
xor
lock
xchg
mov
jle
aad
xchg
xor
mov
addr16
pop
fnstcw
mov
je
mov
pop
sub
sbbb
lcall
dec
mov
das
orb
jge
lahf
lock
mov
mov
or
es
jmp
rol
sub
sub
imull
insl
insb
jp
icebp
pop
scas
jb
pop
fistpl
je
stc
lahf
xchg
xchg
mov
out
int
mov
addr16
cli
in
push
mov
das
xlat
ja
xlat
in
lcall
pop
shr
dec
adc
mov
out
shl
int3
mov
push
xor
and
call
mov
js
std
dec
cmp
dec
hlt
jecxz
dec
cmp
stc
shlb
sub
arpl
imul
pop
test
pop
lock
pop
dec
sub
pop
pop
mov
mov
popa
add
cmp
sbb
sbb
dec
rorl
fadds
lret
inc
add
sub
mov
imul
insb
or
add
xchg
jnp
adcl
pop
or
sub
loopne
adc
into
inc
loop
and
dec
dec
inc
ret
xchg
inc
mov
test
es
push
and
pop
std
jo
jbe
and
movl
xchg
in
orb
data16
nop
inc
adc
jnp
add
and
sbb
shll
push
push
loope
jle
push
in
rclb
pop
fcmovne
fnstsw
fwait
sub
or
mov
lret
sub
mov
push
xor
testb
mov
jl
pushf
adcl
mov
cmp
test
inc
cmpsl
popf
push
sbb
popf
fwait
mov
pushf
cltd
add
xor
lds
push
mov
hlt
and
mov
add
sub
int
or
shll
jno
aam
sahf
lahf
add
push
int
outsl
lds
jnp
fwait
out
fsubrl
out
pop
dec
mov
add
xor
cld
xor
pop
cmp
sbb
dec
jo
sbbb
mov
addl
or
in
pop
dec
pop
leave
cmc
fidivrl
gs
push
imul
hlt
out
mov
loopne
adc
push
je
pop
dec
cmp
test
sub
jmp
or
mov
sbb
sub
pusha
cli
jnp
or
sbb
popa
das
cmp
in
rclb
aas
pop
cs
dec
xchg
mov
movsl
sub
stos
push
loope
inc
push
sbb
xor
pop
jmp
mov
mov
pop
roll
sub
add
lahf
or
lods
cwtl
pop
xor
stc
xchg
and
insb
aas
scas
lock
mov
movb
sub
imull
bound
and
ja
adc
out
push
pop
cmc
mov
mov
xchg
mov
lret
xchg
mov
aaa
test
lock
fs
mov
sbb
int3
push
test
js
pop
sub
xchg
fidivrs
rcrl
push
mov
in
mov
ret
or
or
fs
push
xchg
loopne
jp
enter
cmpb
adc
sahf
adc
adc
jg
push
dec
cltd
loopne
or
push
push
aam
push
lods
inc
sub
inc
push
shrb
mov
jo
inc
cmp
std
lods
sarb
ret
jo
or
outsb
je,pn
mov
mov
and
test
loop
or
fcomi
mov
pop
xor
std
push
push
add
dec
popa
gs
js
div
fdivrs
jne
das
lahf
adc
jbe
leave
jno
xchg
xchg
jge
fdivl
mov
xlat
fs
incl
ljmp
mov
cmp
stos
cwtl
jbe
fcom
add
je
in
imul
js
cld
jb
inc
inc
mov
or
cmp
inc
pop
mov
dec
push
or
jle
cmp
xchg
mov
or
aad
cmp
ret
fists
add
mov
out
out
add
adc
lock
sub
push
dec
jne
fs
test
cmp
test
mov
ficompl
leave
add
les
fimull
mov
aas
push
cs
mov
adc
mov
fsubrs
push
push
enter
cli
or
mov
push
dec
jmp
xor
fldt
cli
arpl
sti
jb
fnstsw
mov
xchg
adc
or
push
adc
jle
ret
lods
mov
add
jae
xchg
out
roll
icebp
sbb
jns
cmc
adc
pop
push
inc
in
jp
adc
mov
leave
sahf
xchg
sbbb
jp
push
adc
mov
std
aad
push
fdivrs
mov
add
jge
pop
jns
mov
mov
aam
inc
add
cmp
xchg
xor
rolb
lahf
imul
scas
mov
sub
stos
sahf
out
pop
pusha
orl
insl
pushf
xchg
dec
lahf
mov
jmp
mov
ja
mov
ret
andl
mov
and
sete
divb
mov
xchg
lock
test
les
push
fimuls
cwtl
gs
adc
aaa
ret
loop
jge
imul
aam
or
jbe
cmp
jg
xor
rol
adc
jne
arpl
push
outsl
into
mov
push
xor
push
sar
mov
adc
in
daa
nop
call
mov
xchg
out
outsl
ljmp
popf
adc
inc
in
push
lods
xlat
inc
shlb
push
mov
les
imul
push
adc
and
into
shrb
jmp
filds
or
inc
mov
inc
pushf
incb
lock
sub
sbb
loop
mov
jecxz
es
add
mov
mov
pop
int3
aaa
cmp
lret
and
scas
sahf
adc
xor
gs
sub
sbb
aam
data16
fnclex
rol
inc
xlat
cli
dec
aas
jg
gs
int3
jne
adc
test
mov
test
jg
mov
pop
outsb
fistl
rcrb
imul
sub
or
mov
pop
cli
inc
xorl
icebp
push
dec
mov
flds
and
jl
sbb
f2xm1
mov
js
dec
leave
jnp
and
dec
inc
movb
adc
push
mov
xchg
pop
loopne
je
shlw
xchg
and
pop
mov
stos
inc
psrlw
pop
fwait
iret
xchg
icebp
jge
xor
adc
mov
cmpsl
daa
sub
test
call
sub
cmc
and
mov
cld
mov
mov
and
aas
mov
jbe
cmpsb
stc
je
xchg
das
pop
int
incl
jnp
cmp
in
jmp
pop
ret
addr16
cmp
test
mov
shlb
mov
inc
cmc
fxch
and
shlb
test
insb
adc
hlt
jmp
pop
inc
sub
cmp
adc
out
fstpt
mov
pop
inc
add
vpcmpgtd
push
jb
jo
mov
xor
cld
lret
or
cmpsb
test
loopne
adc
mov
adc
jle
cmp
jg
adc
mov
lahf
adc
cmp
hlt
xor
mov
bound
sbb
inc
push
flds
mov
sub
dec
pop
aad
ret
in
leave
pop
mov
fildl
pusha
arpl
fnclex
push
push
mov
sbb
add
cmp
addb
aaa
mov
adc
add
jge
add
std
icebp
adc
and
add
inc
nop
mov
call
fistpl
add
cmp
mov
jmp
fistpll
pusha
subb
push
lods
xchg
jle
data16
and
and
shlb
add
sarb
int
lds
cmpb
insb
out
jmp
cli
add
dec
mov
std
push
popa
cwtl
add
xor
cmc
xchg
ljmp
scas
int
cmp
pop
movsb
mov
stc
in
ret
test
sbb
inc
adc
loop
xchg
iret
dec
shr
and
lcall
test
test
inc
cld
enter
outsb
movsl
rolb
popa
cmpsl
cmpsb
cwtl
mov
cmp
cmpsb
pushf
dec
jnp
aam
pop
lahf
mov
push
data16
push
mov
sub
lret
or
out
pop
test
dec
inc
in
sbb
clc
adc
pop
mov
sbb
push
loop
jmp
and
sub
aaa
push
mov
subb
push
push
xchg
fldcw
pop
pop
mov
call
or
and
loopne
out
jmp
cltd
out
and
test
or
inc
test
dec
add
adcl
mov
outsb
fdivrp
mov
lcall
mov
testb
pop
rcl
mov
mov
cmpsl
pop
hlt
movsl
icebp
xchg
jne
movsl
mov
fs
mov
push
or
sub
lea
mov
stos
cmp
sbb
andl
mov
lods
outsb
ja
nop
add
jns
ja
sti
and
cmp
jl
cs
xor
fwait
sbb
jg
and
lahf
sub
mov
cmp
cs
push
mov
pushf
addr16
lods
into
jg
fstpt
sbb
dec
pusha
inc
and
call
cld
int3
and
aam
jge
pop
xor
push
out
cli
jge
test
add
push
dec
out
mov
mov
stos
lea
dec
rolb
rorb
push
inc
dec
xor
lcall
mov
aaa
cmpsb
sbb
xchg
in
loopne
xor
sbb
mov
xor
mov
sti
jno
cmpsb
pop
push
sti
fisttpl
scas
sti
ds
inc
pop
nop
mov
mov
pop
mov
lock
xlat
sar
add
pop
mov
cwtl
fwait
arpl
push
stos
sbb
xor
lds
pop
dec
stc
or
pop
sbb
dec
mov
xchg
cmp
xchg
sbb
push
aam
ds
rcrb
sahf
pop
xor
mov
cltd
or
cmp
mov
and
sub
xor
add
pop
sbb
mov
dec
add
mov
outsb
xor
ret
ljmp
icebp
pop
push
adc
loop
lea
jg
test
shl
jge
pop
mov
gs
pop
test
aad
pop
xor
or
mov
push
sbb
aaa
mov
notb
cld
sbb
push
les
cmp
push
and
outsb
in
or
mov
pop
jle
mov
xchg
or
arpl
jbe
mov
sub
cmp
fs
in
inc
lock
add
popf
addr16
inc
mov
xor
add
dec
lock
pop
add
ljmp
adc
ret
loopne
mov
cmp
cmp
out
xor
int3
jmp
cmp
sbb
mov
nop
arpl
mov
and
mov
imul
pop
cmpsb
stos
inc
out
outsl
jle
fdivl
and
popa
jmp
cwtl
jge
dec
lret
repz
es
xchg
jmp
stos
pop
mov
adc
and
sub
into
cltd
add
jbe
out
jge
adc
scas
ficoml
mov
movsl
into
jg
xchg
adc
mov
andl
jns
lods
lods
in
add
mov
fstps
mov
xchg
scas
leave
xchg
xor
aad
negl
xchg
fdiv
add
mov
adc
loopne
dec
adc
adc
mov
stos
mov
test
mov
shr
stos
jae
xor
int3
les
cs
cmp
mov
xchg
sbb
lock
hlt
vmovdqa
arpl
add
xor
cmp
shrb
repnz
pop
sub
pop
xchg
mov
hlt
cmp
fadd
in
hlt
ja,pn
add
sbb
sbbb
fwait
sbb
cwtl
or
fidivs
lock
pushw
aad
and
xchg
pop
cmp
loope
jmp
xlat
push
push
sub
int
in
inc
fs
cld
pop
lret
mov
mov
std
cld
and
cli
sub
aad
dec
test
pop
imul
and
adc
fcomi
xchg
popf
cmp
adcb
mov
and
pop
insl
xchg
push
or
jl
jae
and
loope
sahf
push
jg
insl
xchg
push
into
icebp
jno
cmp
pop
lds
jnp
out
mov
jmp
mov
fiaddl
dec
dec
into
js
dec
adc
mov
pop
xchg
mov
jno
push
in
lock
push
inc
repnz
and
lret
pop
mov
sbb
mov
dec
lock
dec
push
push
enter
xor
ret
arpl
mov
push
push
rcrl
adc
daa
stos
inc
and
dec
bnd
sub
or
and
mov
and
pop
sbb
lret
inc
cli
cwtl
jmp
aam
icebp
or
push
js
in
sub
pop
xchg
fisubrl
scas
add
jmp
mov
addl
adc
xlat
outsl
xor
addr16
jg
popa
aas
mov
ds
jg
jg
rorl
lock
or
adc
idivb
xor
imull
sub
out
jne
inc
xor
fildll
xor
aas
daa
sbb
jge
js
pusha
ljmp
cmp
xchg
cmpsb
aaa
aad
dec
and
scas
push
xor
adc
push
cwtl
mov
pop
mov
dec
xchg
cmpsb
xor
imul
adc
add
xchg
gs
rorl
es
dec
mov
in
or
jno
add
pop
lret
lret
mov
and
cltd
lret
sbb
push
mov
push
inc
mov
pop
jae
jns
arpl
out
pop
adc
sub
pop
xchg
push
pop
mov
cwtl
mov
rcl
sbb
outsl
push
jg
movsl
ja
jle
jb
push
sub
mov
es
lods
sub
sub
adc
clc
mov
jl
loope
sbb
jnp
inc
bound
insb
push
jp
mov
rcrl
adc
push
lgs
int
cld
sbb
insl
pop
jmp
jae
popa
sub
dec
rcll
inc
test
je
dec
cmp
out
sar
inc
ret
pop
and
sub
sarl
mov
fnstcw
pushf
sbbl
sub
jecxz
sub
pop
fldenv
fcmovbe
inc
les
out
xlat
sbb
push
xor
call
add
mov
aaa
dec
nop
push
test
fnop
imul
sti
popl
js
inc
jmp
push
xor
jl
push
test
sarl
aas
push
repz
arpl
mov
jno
test
in
arpl
dec
jg
ja
lods
inc
jne
inc
push
mov
mov
rcrl
popf
sbb
add
stos
in
or
inc
xchg
loop
outsl
popf
insl
push
pop
mov
mov
mov
xchg
insb
jg
or
pushl
or
dec
call
jb
xchg
sarl
setge
cltd
sbb
xor
cmpb
xchg
insb
mov
enter
hlt
jo
add
sub
xor
push
pusha
mov
fstpt
adc
dec
add
fstps
in
push
push
in
aad
pop
adc
hlt
dec
outsl
outsl
ret
into
mov
int
inc
cmpsl
sub
sbb
aam
decl
rcl
pop
push
lea
insb
lds
lret
adc
or
mov
or
icebp
mov
jg
shl
mov
mov
das
xchg
xchg
ds
shr
scas
or
push
ret
push
pushf
mov
push
mov
inc
dec
fcomip
dec
sbb
test
stc
inc
pushf
xchg
insl
jg
repz
test
loopne
lret
scas
xor
push
add
cmp
dec
ss
mov
ljmp
aas
mov
xor
jmp
mov
push
mov
cli
mov
jb
loopne
icebp
push
lods
cmp
pop
andl
xchg
jo
push
xchg
cmp
call
sub
mov
mov
clc
adc
loope
jae
es
pop
push
loop
adc
fidivrs
sbb
mov
pop
mov
je
sbb
jo
stos
ds
mov
cmp
mov
mov
add
out
pop
iret
adcl
mov
inc
nop
dec
hlt
imul
pop
inc
into
rorb
cmp
cmp
cltd
xorb
dec
inc
leave
lods
mov
lods
add
rcll
icebp
shlb
dec
pushf
jle
sbb
jns
test
inc
enter
pmulhw
movsb
enter
sahf
xor
rclb
mov
or
cmp
insb
outsl
imul
add
shlb
jecxz
popl
xor
rcr
mov
sub
iret
cld
sbb
cmp
pop
pop
mov
test
cmpsb
cmpsb
call
in
shrl
adc
dec
jge
mov
aas
pushf
inc
pop
int
outsb
ret
cmp
push
xor
jmp
cmp
jl
sub
add
sbb
rclb
aaa
mov
in
sti
ljmp
divb
add
pushf
mov
mov
adc
loopne
sbb
int
loope
pop
jns
mov
jb
sub
inc
sub
out
icebp
shll
adc
sbb
inc
mov
inc
cltd
dec
xor
fwait
push
sub
and
inc
mov
adc
stos
test
loop
mov
xchg
xchg
cld
stc
jnp
sub
gs
xlat
std
lds
inc
andb
push
mov
in
pop
out
pop
pop
cmp
xor
rolb
insb
lcall
sbb
lock
ljmp
add
loop
mov
outsb
push
test
movsb
xchg
adc
inc
adc
xlat
cs
mov
push
push
jb
inc
in
sub
lea
inc
test
xor
mov
xchg
mov
inc
sbbl
and
push
lret
out
stc
mov
push
sub
insb
push
scas
mov
outsb
movsl
xchg
mov
rol
stos
jns
mov
aaa
repnz
loop
mov
fimuls
repz
sub
repz
clc
pop
sbb
xchg
sbb
imul
mov
daa
loop
std
or
fidivl
or
fwait
dec
sbb
jge
xchg
shlb
popf
and
dec
xor
inc
stos
or
mov
stos
pop
aas
ljmp
push
jl
mov
push
jno
int3
mov
insl
cmc
mov
xor
movsl
lock
jp
cmp
sub
mov
inc
and
dec
inc
xlat
adc
loop
outsl
cmp
jmp
jo
in
lret
sbb
push
push
mov
push
jp
adc
fildll
das
and
mov
xchg
add
lahf
fwait
iret
xchg
loopne
pop
push
xor
adc
jo
inc
jbe
call
push
mov
nop
sbb
mov
js
icebp
push
std
sbb
mov
es
push
push
mov
xor
scas
mov
cmp
gs
loopne
jge
sub
pop
mov
out
jno
scas
and
ds
jge
xlat
dec
js
fbstp
repz
aad
imul
and
and
mov
lcall
orl
das
mov
lahf
add
jge
push
enter
mov
fisubl
test
dec
or
dec
jl
jp
outsb
mov
flds
mov
dec
les
mov
inc
shrl
movsl
inc
jle
mov
pop
addr16
pusha
xchg
jecxz
mov
in
push
jge
sub
fsts
insb
pop
lahf
or
cmpl
mov
sbb
rep
inc
imul
pop
mov
jg
je
mov
inc
mulb
or
jb
jecxz
mov
mov
fisubs
into
push
into
pop
dec
fwait
add
push
dec
add
sar
or
dec
xor
push
aad
popa
clc
repnz
fcmovbe
pop
add
jle
sahf
adc
xchg
xchg
insb
in
inc
int
fisttpll
lahf
add
movsl
shlb
dec
xchg
fnstenv
mov
xor
mov
xor
mov
push
call
pusha
cltd
test
lret
fimuls
in
pop
test
jb
or
aam
add
add
mov
push
mov
fdivs
mov
sub
out
xchg
jae
mov
icebp
stos
loop
lret
pop
fs
cmpsb
jne
arpl
adc
xchg
scas
push
inc
cmp
outsb
les
cli
dec
and
into
push
jl
adcb
xor
cmc
sbb
fwait
std
insb
movsl
and
xchg
loop
pop
sub
push
testb
xchg
out
test
mov
dec
dec
cmp
push
jmp
je
sub
test
or
push
mov
pop
mov
cli
imul
scas
popa
imul
sub
movsb
dec
pop
or
loop
adc
ret
pop
push
push
sbb
cmp
int3
push
cwtl
dec
in
mov
mov
and
mov
or
dec
in
fs
sub
andl
in
and
mulb
pop
dec
mov
clc
or
repnz
push
cltd
mov
push
sub
sub
mov
popf
mov
nop
cwtl
cmp
mov
in
xchg
loope
inc
cmp
push
movsl
out
imul
push
dec
jns
loopne
and
outsb
jne
push
ja
lahf
pushf
xchg
mov
jge
or
add
outsl
cs
mov
sub
add
nop
jl
cmp
lcall
shrl
push
and
push
ret
nop
std
and
jnp
ss
loope
mov
mov
mov
pop
adc
mov
adc
out
xor
sahf
or
inc
lock
stc
mov
fwait
or
clc
rcrl
push
orb
inc
mov
inc
pop
push
push
call
sbb
mov
jo
cmpsl
add
push
cmpsl
push
addb
ss
insl
sti
push
xlat
sbb
cld
out
stc
adc
dec
xor
or
adc
mov
cmp
xchg
xor
out
aaa
repz
cmp
pushf
insl
cmc
and
aam
push
lret
arpl
pop
bound
push
out
lods
dec
imul
and
jae
inc
xchg
popf
cmp
iret
fbstp
fs
fs
leave
dec
divb
push
lahf
lods
jmp
pop
rcrb
inc
mov
mov
jbe
gs
loopne
sub
mov
aas
movl
pop
lods
fisttps
ret
pop
fidivrs
sbb
push
and
push
pop
lret
or
push
add
push
sbb
push
sahf
add
lahf
popf
stc
sahf
movsb
psllq
jno
sbb
xchg
and
into
or
sub
cmp
sub
jp
or
pop
mov
xchg
sbb
xchg
jp
out
dec
vcvtps2pd
lds
cli
mov
call
stos
pop
mov
push
and
adc
imul
xchg
add
or
or
adc
mov
fidivrl
jp
loopne
push
pusha
test
ljmp
imul
sub
loopne
mov
xor
push
mov
mov
mov
push
adc
les
and
xchg
pop
fdivs
jecxz
jp
ja
jp
add
mov
adc
leave
in
cmp
add
adc
cmc
gs
xchg
imul
cmc
gs
int3
xchg
lods
jmp
sbb
push
add
jne
rclb
sub
or
lcall
sbb
andl
lcall
loope
dec
mov
lahf
ljmp
cltd
jle
push
std
ret
bswap
jno
pop
mov
sbb
pusha
roll
adc
push
loope
stc
test
shlb
push
cltd
in
xor
cli
push
adc
pop
add
daa
data16
push
in
xchg
loope
pop
mov
xorl
ret
popl
es
arpl
ljmp
cs
inc
mov
pop
mov
inc
outsb
pop
xor
dec
mov
enter
xchg
xor
fadds
lock
jae
push
mov
mov
repz
sub
push
ljmp
aas
cwtl
mov
lcall
push
pop
into
outsb
scas
aam
sub
cmp
icebp
push
outsl
movsl
cs
sbb
or
stos
popf
add
lods
xchg
dec
cmp
repnz
push
jmp
or
adc
inc
dec
jge
icebp
inc
mov
aad
add
dec
data16
pop
dec
daa
pop
aas
push
cmp
ja
push
xlat
add
js
fwait
mov
mov
cmpl
and
clc
in
and
fdivs
movsl
mov
push
aaa
pop
mov
pushf
arpl
stc
dec
inc
ss
mov
idivl
call
je
jp
das
xchg
jp
inc
xchg
aad
lods
jmp
inc
push
dec
sarb
and
inc
add
inc
lret
push
out
outsl
ja
test
movsb
jle
sub
pushf
add
scas
mov
hlt
or
and
pop
mov
in
xor
inc
adc
dec
mov
dec
mov
push
fldl
push
inc
les
cmp
test
pop
cmpsb
inc
jg
mov
mov
cmpsl
shlb
or
pop
jns
lret
push
push
fsubrp
mov
out
sti
orb
xchg
or
test
aad
jae
mov
or
in
inc
jg
sarl
sbb
mov
xorb
aad
ljmp
pop
inc
xchg
sbb
ljmp
fwait
sbb
xlat
cwtl
pop
and
out
insl
orb
shrb
push
push
inc
mov
clc
xor
inc
test
sbb
cmp
aam
and
pop
lret
pop
lcall
test
mov
cmp
and
adc
or
xor
jge
push
loope
adc
sarb
jl
xor
imul
adc
repz
inc
mov
xchg
movsl
icebp
out
ja
sub
pop
xor
mov
adc
sbb
add
lods
hlt
out
mov
jns
cmp
test
outsb
popa
xchg
mov
dec
pop
shrb
fisubrs
mov
add
cmpsl
call
xchg
or
mov
or
pop
mov
clc
loop
dec
add
in
inc
out
ss
mov
xlat
xor
aaa
popa
pop
and
xlat
icebp
sub
decb
icebp
mov
adc
test
xchg
or
push
or
scas
lahf
lret
inc
xchg
push
xchg
ds
mov
repz
pusha
xor
repz
dec
lcall
xchg
daa
xor
or
aas
jae
addr16
ss
bound
icebp
movsb
inc
push
dec
mov
ret
jp
imul
and
jmp
jns,pt
mov
lock
xchg
xlat
xor
mov
cmpsb
lock
jne
push
cld
fldt
pop
adc
test
sbb
cld
movb
xor
jg
psrad
pushf
push
js
add
mov
outsb
dec
cmp
and
pop
mov
cmpsl
scas
bound
push
mov
sahf
loope
sahf
xorb
mov
adc
cwtl
add
sarb
or
xchg
js
xchg
pop
xor
and
test
push
add
jno
sar
in
popa
or
jecxz
cmp
sub
imul
jnp
popa
je
adc
mov
aaa
subb
inc
mov
cwtl
iret
in
sub
and
add
fisttps
jp
or
ds
into
aam
enter
sub
ret
icebp
fstps
enter
jecxz
dec
jl
int
pop
addr16
mov
jne
clc
fwait
pop
hlt
mov
dec
or
sub
jmp
movsb
repnz
mov
insb
aaa
lds
fbstp
into
dec
mov
cli
push
enter
push
xchg
and
xchg
rclb
loope
lret
xabort
dec
mov
pop
sub
or
mov
insl
push
shrb
add
jg
sarb
loopne
daa
imul
je
mov
sbb
pushw
push
in
pushf
stos
sbb
sbb
scas
lock
fmul
xor
fistpll
inc
pop
ja
loopne
sub
scas
or
cli
loope
sub
loopne
jmp
test
xor
pop
pop
inc
fs
rcll
dec
jb
push
std
bound
stc
repnz
and
test
fsubp
mov
pop
inc
sub
cs
pop
add
inc
cli
daa
test
mov
xor
mov
ret
and
sub
out
sbb
xor
fdivrs
test
mov
sub
jp
outsl
jge
sbb
cmp
add
dec
lahf
push
pop
xchg
iret
sub
add
pop
std
sbb
std
push
fistpl
jl
dec
movsb
scas
mov
fstps
in
mov
repnz
fcmovnbe
or
ljmp
out
adc
lods
mov
sti
xchg
outsb
push
and
adc
mov
and
sbb
mov
cmp
jo
push
out
cltd
aaa
mov
add
les
inc
aam
repnz
aad
jp
popf
inc
call
or
rcrl
push
jg
cmp
ffreep
pop
lcall
mov
jne
icebp
das
and
shlb
adc
adcb
xchg
cs
sub
cs
cmp
daa
mov
das
mov
xor
add
mov
mov
leave
xchg
and
xor
pop
mov
mov
loopne
insl
xchg
call
idivl
fidivrl
push
pop
dec
dec
jp
aas
xchg
inc
or
ret
sub
lods
push
mov
xchg
and
push
shll
or
mov
mov
stc
mov
jge
jge
sub
dec
xlat
or
push
les
je
add
or
push
pop
and
pop
repnz
dec
inc
idivl
or
mov
sub
dec
test
out
enter
rorb
in
inc
add
lea
xchg
das
dec
lret
dec
cltd
fcompl
dec
scas
and
add
sub
clc
and
ljmp
add
dec
aam
mov
pop
push
divb
daa
or
fimull
sarb
ljmp
pop
push
in
call
xchg
mov
pop
movl
xor
adc
push
rorl
and
adc
fistpl
xor
popa
cmp
imul
aam
xor
mov
adc
std
dec
fdivs
adc
fisubrl
mov
mov
rep
push
pop
repnz
push
iret
popf
cmpl
stos
or
outsb
cli
aas
jnp
push
adc
or
xor
fcmovb
stc
test
sbbl
pop
outsl
add
fbstp
xchg
push
cld
lahf
xor
fs
sub
push
repnz
cli
jb
nop
iret
pop
bound
sbb
outsl
jl
lahf
test
adc
loope
ss
push
sub
and
rcll
in
cs
lret
repz
and
or
cmp
in
ljmp
cmp
sahf
adcb
push
pop
sub
cld
popf
lock
sub
fwait
pushf
movq
rclb
cltd
jb
dec
mov
cs
fisttps
cmp
mov
out
fstps
dec
dec
pop
sbb
inc
add
cmpsl
out
push
outsl
xor
pusha
xchg
daa
bound
fiadds
jo
test
xlat
jnp
cmp
add
ficoms
repz
scas
cmp
sbb
adc
mov
andb
fs
sti
cmp
lods
xchg
cmc
sub
mov
lret
lret
mov
bound
jmpw
jge
xor
xchg
test
or
lods
xchg
into
int3
aas
xchg
push
or
push
and
lods
xchg
enter
mov
mov
inc
sar
sbb
mov
cwtl
and
faddl
sub
jmp
xchg
dec
jo
mov
pop
lret
pushf
inc
mov
loopne
jp
push
cmp
jo
xor
add
and
mov
rol
lret
jbe
pop
jns
testb
test
sub
lea
mov
cwtl
ret
pop
mov
ret
lods
scas
mov
hlt
push
mov
stos
and
test
test
mov
sbb
cmp
int
pop
sarb
iret
mov
sbb
push
sar
dec
in
xchg
cmp
xor
cmp
dec
int
scas
les
xchg
cmp
pop
cmp
mov
mov
in
in
pushf
cmpsl
and
rol
push
sbb
pop
je
pushf
aam
cmp
hlt
popl
pushf
pxor
std
or
push
dec
cmc
push
sub
subb
sahf
push
push
adc
gs
cld
inc
and
cmp
nop
lahf
xor
mov
std
je
testb
repnz
je
shll
push
or
or
loope
icebp
add
add
in
mov
xchg
mov
mov
ss
push
cs
loop
outsl
ja
mov
dec
or
push
repnz
lock
jecxz
cmpsb
loopne
add
xor
fisttpl
into
inc
cmpsb
js
mov
lods
adc
pop
sbb
xchg
fdivr
inc
jmp
and
mov
gs
movsl
push
adc
popf
xchg
xchg
lahf
xor
je
cli
data16
dec
fyl2xp1
outsb
dec
loope
xlat
nop
sbb
mov
imulb
cmpsl
cmp
mov
add
ficoml
cld
sub
cmc
das
adc
popf
lcall
fildl
jecxz
inc
push
push
fs
incb
int
mulb
repnz
inc
stos
pop
fnstcw
fldlg2
andb
sti
sub
lods
xchg
insb
mov
push
and
xor
dec
adc
ficoml
adc
sarl
jmp
mov
out
fucomp
push
push
add
xor
inc
push
shlb
movsl
popa
add
jnp
adc
push
gs
sarl
xor
mov
sahf
pop
divl
inc
sti
repnz
test
test
sub
dec
sbb
shl
fcompl
sub
in
sahf
mov
sbb
push
je
xchg
sarl
sub
push
mov
imul
dec
adcl
out
flds
cs
jge
imulb
inc
lock
test
es
iret
mov
add
arpl
jo
sbb
sub
mov
fbstp
pop
xor
and
adc
call
cmp
mov
lds
fdivrl
jp
sbb
inc
jo
insb
out
mov
cli
cltd
mov
dec
sbb
cltd
mov
rcl
and
shll
out
push
fisubrs
inc
lock
inc
cmp
ret
int3
pushf
sbb
or
sbb
mov
arpl
cmp
loop
aaa
xchg
das
xor
fcoms
notl
adc
call
mov
mov
inc
test
xor
cmp
lods
dec
insb
outsl
ficoms
cli
mov
out
jmp
mov
xor
test
repz
rcrb
insl
pop
and
icebp
pop
jl
test
lock
pushf
std
mov
xchg
das
lods
sub
popa
mov
in
ret
lds
gs
add
imul
imul
fldt
call
dec
shlb
dec
xchg
mov
mov
sub
cmp
adc
xchg
scas
mov
push
mov
mov
adc
mov
mov
stos
inc
and
mov
or
push
cmc
and
mov
inc
loop
test
loopne
daa
adc
ljmp
inc
ds
pop
and
lods
cmpsl
cmp
stc
cli
lret
lods
daa
std
jnp
popa
dec
cmp
movl
pop
adc
roll
xor
jge
cwtl
addr16
cmpsl
loope
and
sbb
push
mov
push
mov
inc
push
adc
or
lret
mov
xchg
jl
idiv
push
call
mov
dec
mov
adc
faddl
sahf
aad
lret
xchg
enter
dec
outsl
cld
popa
imul
jnp
inc
and
jecxz
stc
pop
popf
fimull
xchg
cld
insl
mov
cmpl
sbb
les
ficoml
repnz
mov
pushf
nop
pop
loopne
mov
fadds
mov
xor
sti
adc
mov
or
adc
fs
add
loop
in
xchg
mov
sbb
mov
push
in
xchg
adc
add
mov
cmp
pop
xchg
fsubrl
push
testb
leave
sbb
and
in
push
xor
lods
clc
xchg
push
jo
ret
add
cld
jns
les
dec
and
pop
mov
std
pop
ret
mov
jo
dec
cs
mov
lods
ljmp
xlat
test
adc
shr
addb
and
dec
push
inc
faddl
xor
or
dec
or
jbe
adc
inc
mov
jle
sbb
or
cmp
sub
outsb
sbb
dec
push
sbb
clc
xchg
add
fadd
into
ret
mov
fwait
sti
sbb
cmp
push
push
dec
lock
mov
or
pop
loope
popl
call
hlt
cmp
pop
repz
dec
das
cltd
push
dec
pop
imul
inc
fists
dec
xor
push
sbb
xchg
jo
xor
dec
fcompl
leave
addr16
xchg
mov
loop
cmp
data16
rcll
mov
push
js
cmpsl
xchg
push
xor
in
jb
xor
push
jnp
jbe
xor
cmp
mov
lcall
scas
dec
into
addr16
pop
aad
fidivrl
mov
imul
mov
or
mov
sti
mov
pop
test
jmp
pop
mov
out
cltd
lock
loop
std
loopne
cmp
sar
out
cmp
dec
inc
scas
or
dec
lea
nop
xchg
add
push
shll
sti
repz
pushf
test
sub
xor
pop
in
cmp
loopne
loope
jae
xchg
aaa
or
dec
fbld
jmp
dec
lods
cs
inc
push
inc
pushf
dec
fnstcw
mov
insb
test
je
fs
mov
xchg
mov
lahf
mov
adc
xchg
aas
jmp
daa
mov
das
push
adc
sahf
xchg
in
and
fisttps
out
add
sbb
and
push
adc
xchg
xor
in
dec
lret
sahf
inc
push
inc
add
push
dec
cwtl
xchg
loope
adc
cmc
inc
xlat
scas
cmpl
js
loop
cmpsl
inc
ljmp
fists
fstpl
or
pushf
stos
es
mov
xchg
and
rcll
jnp
bound
adc
test
mov
fisttpl
add
rcrb
jmp
sarl
bound
inc
fstl
sti
int3
nop
and
jno
imul
sbbb
subl
iret
jmp
pop
inc
nop
pop
add
mov
jbe
dec
xor
imul
scas
and
data16
jp
loopne
or
shl
in
sbb
loopne
je
in
test
ret
xchg
cmp
add
push
push
into
or
dec
arpl
in
jmp
jle
mov
sbb
cmp
jge
test
adc
repnz
adc
scas
and
xchg
push
jg
sub
dec
pop
aas
cmp
adc
rcl
mov
idiv
sub
int3
iret
std
mov
rclb
stos
xor
imul
insl
or
insl
pop
mov
daa
mov
dec
push
ljmp
jnp
fdivs
sub
in
je
dec
xchg
cmp
sbb
sti
and
sbb
lret
movsl
xor
xor
dec
addr16
cmp
out
xchg
sub
aas
mov
jp
stc
pop
push
std
sahf
lods
aam
pop
scas
cmp
lss
std
push
dec
out
xlat
pop
pop
dec
lcall
faddp
test
je
xchg
adc
lret
outsb
inc
cmp
int
les
dec
fwait
pop
fsubrl
pop
sub
loopne,pn
inc
push
inc
cltd
sahf
push
repnz
inc
cli
inc
addr16
and
jl
clc
movsl
add
test
je
push
push
jge
or
test
aam
push
lret
dec
xchg
pop
mov
or
jb
gs
inc
data16
and
push
mov
cmp
into
sub
lea
sbb
mov
jle
mov
int3
iret
mov
test
pop
push
shl
call
mov
inc
mov
push
cmpsl
push
aad
sub
mov
xchg
iret
nop
pusha
fs
pusha
push
adc
adc
lock
adc
popf
mov
iret
sub
dec
lret
pop
sbb
mov
imul
xchg
cwtl
or
fcom
lea
in
jns
fmull
xor
insl
sahf
ret
cmpsl
xlat
rcr
adc
sarb
xor
push
adc
test
nop
in
xchg
jne
leave
dec
inc
adc
add
hlt
jb
subb
daa
cmp
adc
out
aaa
xor
inc
or
imul
mov
adc
mov
sbb
aam
popa
lds
sub
cmp
jns
cs
mov
loop
pop
mov
add
mov
mov
xorb
pop
mov
pop
loopne
jmp
add
sub
jle
add
jmp
int3
aaa
test
pop
insb
test
mov
in
out
cli
addr16
stos
enter
sbb
sbb
cmp
pop
adc
test
pop
and
dec
and
sub
dec
jle
aaa
mov
or
jge
pop
dec
add
insb
into
jp
add
cmp
sub
push
xor
or
sub
pop
dec
inc
ret
fadd
call
sub
out
popf
hlt
inc
imul
inc
jl
jmp
jmp
iret
mov
dec
xchg
mov
add
add
jl
lahf
mov
loopne
nop
add
push
mov
push
mov
rolb
or
pop
outsb
aad
sbb
mov
ss
icebp
cltd
idivl
cmp
pop
jg
push
inc
mov
pusha
ja
mov
and
adc
inc
imul
out
test
jae
lods
push
fnstenv
daa
sub
in
pop
popf
ret
ds
jbe
cli
lock
pop
into
lret
xor
loopne
fwait
adc
jge
xor
sbb
jmp
pop
mov
push
lret
xor
call
mov
adc
adc
loopne
push
stos
addr16
imul
jns
and
pop
jns
lcall
jns
addr16
push
cmpsl
scas
sti
inc
mov
ja
pop
xchg
and
outsl
fisttpl
pop
pop
stos
mov
jbe
and
or
in
movsb
dec
xlat
andb
dec
paddsw
jb
fs
jmp
push
mov
dec
test
jl
cmpsb
jle
popa
into
sbb
sahf
jecxz
js
push
sub
cmpsb
out
and
loopne
xchg
pop
jne
imul
test
jp
imul
dec
adc
push
mov
bound
mov
mov
jmp
pop
pop
dec
inc
push
mov
xchg
add
pop
stos
mov
add
out
xor
inc
in
add
ja
in
cmp
fwait
pop
xchg
add
mov
clc
pusha
dec
popa
sbb
fsubr
int3
in
inc
inc
arpl
sub
dec
sub
ljmp
xor
cmc
xor
roll
fldenv
mov
push
das
in
test
fisttps
push
mov
push
dec
jns
lsl
jmp
dec
mov
cmc
push
adc
lcall
push
or
lret
data16
adcl
shll
sbb
lds
xchg
or
popa
mov
fadds
shl
js
jns
leave
or
xchg
int3
ss
pop
adc
out
mov
dec
lret
cld
adc
int
xchg
and
dec
add
sub
jne
mov
insb
pop
lea
lahf
and
insl
lods
or
jecxz
or
cmp
add
sbb
cmp
dec
lds
jb
ss
cmp
aam
adc
int
call
fnstenv
cmpsb
faddl
adc
lcall
add
movsl
jns
clc
out
in
mov
adc
test
fstps
dec
es
ss
push
cmpsb
mov
pop
mov
scas
out
pop
jl
mov
xchg
sub
ret
jae
ss
loop
incb
fisttps
xchg
test
sbb
adc
pop
mov
add
cmp
pop
sub
aad
jo
sbb
sbb
lods
jecxz
jo
xorl
stos
ficoms
lret
lret
push
aas
fdivrl
std
cmp
insb
or
mov
push
cli
fbld
rolb
flds
ret
add
pop
arpl
mov
fs
mov
sub
shll
push
mov
lcall
push
mov
insl
pop
jnp
shr
testb
pop
or
ss
inc
sbb
in
mov
outsb
lahf
inc
lods
or
shrl
cmpsb
ss
and
repz
leave
and
ds
push
rolb
hlt
add
jno
jnp
sbb
sahf
and
cs
xchg
mov
sub
ja
stos
out
jp
mov
std
or
repz
out
andl
daa
jne
and
dec
test
enter
add
pop
xor
pop
adc
jl
stc
sbb
out
cmp
dec
push
sti
lock
pushf
xor
sub
dec
mov
loop
js
call
xchg
fists
cmp
dec
clc
insb
loop
cltd
inc
mov
xlat
mov
and
imul
mov
pop
jg
das
mov
aas
pop
mov
loop
sbb
fnstenv
jmp
jmp
test
adc
cld
cmp
arpl
mov
sub
mov
das
mov
daa
push
addr16
push
pop
shll
jg
test
adc
jne
sub
mov
shrb
xor
xor
jno
cmp
jl
int
cwtl
scas
repnz
cmpsl
js
cmp
cmp
and
jg
cmp
cmpsb
les
enter
jo
push
mov
dec
test
inc
sub
inc
pop
cmp
dec
and
mov
fldcw
out
ret
repnz
pop
jle
sub
sub
lretw
in
dec
adc
fidivrl
scas
dec
insb
scas
iret
cs
jle
pop
push
push
or
aam
dec
ret
scas
xchg
daa
cld
fisttps
mov
scas
push
cwtl
ds
stos
push
inc
jp
popf
add
jg
jbe
rorl
aaa
loop
push
repnz
bnd
loopne
mov
xor
sub
pop
mov
fnstsw
add
sub
push
adc
jno
addr16
jg
das
mov
dec
xchg
push
pop
repz
pop
or
fisubrs
notb
sub
les
xor
out
jp
cmp
inc
inc
testl
pusha
iret
mov
jnp
push
sub
lea
sub
mov
rcr
shll
std
push
pop
push
jns
insl
fs
icebp
jnp
pop
lock
sbb
ret
imul
xorb
push
rolb
insl
inc
push
mov
sarb
dec
ds
jl
cmp
mov
popa
sbb
mov
icebp
or
icebp
cmc
mov
imul
xor
or
adc
mov
push
jle
aam
push
out
mov
sub
jg
in
add
cmp
dec
in
pop
mov
movsb
fldt
jl
ds
sahf
xor
mov
push
cmc
call
pop
mov
dec
js
sbb
pusha
fdivrs
into
sub
adc
imul
and
movsb
inc
lea
loope
es
xor
sub
sahf
xchg
pop
fnstenv
pop
dec
sub
out
mov
cld
jmp
data16
ficomps
dec
jno
dec
xor
leave
add
xor
push
mov
sub
mov
jbe
mov
lret
jp
xor
cmp
icebp
pop
cmp
cmp
hlt
test
loope
cwtl
xor
mov
int
mov
ss
popa
inc
cli
aas
and
inc
push
cmp
xchg
clc
mov
sbb
cltd
push
in
lahf
lahf
cmp
lods
cmp
add
adcb
adc
adc
lock
cs
sbb
mov
jmp
out
mov
lods
aad
xchg
push
inc
inc
mov
mov
das
or
in
fsubrp
lahf
add
inc
addr16
cli
sub
mov
cmp
ljmp
popf
int3
push
mov
dec
adc
push
pusha
or
add
cmp
pop
iret
enter
fistpll
mov
and
jle,pn
mov
pop
jns
dec
pop
sbb
subb
out
fidivrs
xchg
dec
jle
iret
lock
mov
dec
xor
pop
shrl
lret
pushf
add
inc
add
add
out
inc
into
hlt
mov
adc
push
ss
lods
mov
push
imul
pop
xor
adc
xor
loope
mov
adc
cmp
pop
push
mov
and
clc
fidivs
movsl
insb
cmpsb
xlat
sti
adc
push
jb
push
adc
arpl
adc
add
pop
dec
mov
in
rorb
adc
clc
cmpsb
repnz
jae
push
dec
pop
lcall
sbb
fstpt
mov
dec
sbb
push
addr16
nop
fisttps
or
in
in
inc
cltd
mov
comiss
or
and
out
add
inc
xor
lret
adc
dec
mov
xchg
xchg
out
subb
cmp
mov
dec
imul
dec
into
pop
insb
dec
aaa
fidivrs
xchg
sub
xchg
add
repz
cmpsb
jmp
add
jae
jle
add
mov
adc
mov
pop
mov
push
sub
outsl
pop
js
push
int
adc
stos
pusha
push
or
mov
push
inc
add
fwait
pop
push
mov
dec
pop
fcoml
push
fcmovne
fxch
jne
int
jns
jg
jno
dec
mov
jl
xor
push
repnz
and
xchg
scas
mov
arpl
lock
sub
lods
add
dec
adc
out
pusha
lret
lods
in
xchg
cltd
jno
rcrb
jle
mov
push
mov
shlb
idivl
shll
int3
and
cmp
repnz
aas
mov
call
inc
mov
pop
stos
add
jle
and
sbbb
imul
inc
mov
sbb
mov
sbbl
loop
popf
or
xor
jo
mov
cltd
popf
scas
mov
jns
jae
mov
jb
repnz
or
sbb
repz
and
inc
mov
int
mov
sbb
std
rol
es
ret
popf
jmp
js
addr16
outsb
mov
sub
lea
aam
or
sarl
lea
add
mov
or
push
pop
push
add
repz
mov
fstps
int3
fisttps
push
xor
outsl
xchg
xchg
xlat
jns
add
leave
xor
jne
cmp
jp
les
out
cmpl
jmp
lcall
mov
pusha
mov
sbb
je
mov
and
mov
repz
add
movsb
sbb
and
jae
push
lods
inc
pshufw
adc
dec
sub
xchg
stc
inc
arpl
adc
aam
inc
scas
jbe
inc
jnp
fbstp
push
aam
jl
inc
dec
xor
jbe
mov
xchg
fs
aam
nop
push
add
inc
dec
lcall
repz
rol
aaa
fistl
xchg
popa
lret
loope
cltd
adc
mov
xlat
movsl
scas
xchg
add
jno
scas
sbb
push
pushf
sbb
inc
cmpsb
pop
adc
adc
jnp
xchg
in
adc
dec
stos
pop
or
arpl
add
mov
cwtl
rolb
jmp
add
fcoms
fisubrl
dec
movsl
push
mov
in
pusha
inc
in
pop
les
in
xor
inc
inc
pop
adc
pop
cmp
inc
inc
xchg
cli
mov
out
fstpt
mov
inc
popf
or
cli
cwtl
inc
push
mov
cmp
pop
stos
in
or
out
and
push
or
fidivrl
dec
arpl
mov
fistpl
xor
jg
xchg
repz
xchg
ss
addb
leave
push
pop
sub
gs
inc
ret
js
sbb
addr16
jg
lea
pcmpgtd
adc
xchg
out
loope
aas
ss
test
dec
adc
pushf
in
sti
add
pop
mov
gs
push
fldt
mov
test
push
jno
fidivs
dec
fcoms
xor
sbb
into
jle
jl
adcl
add
addr16
sub
jmp
cmp
and
cmp
sbb
add
lahf
sub
ds
lret
add
jo
movsl
je
add
out
jne
ljmp
mov
fdiv
xchg
adc
das
push
push
fwait
int
into
sbb
mov
push
adc
adc
in
js
adc
out
mov
dec
lock
outsl
adc
xchg
sbb
loopne
mov
popf
je
adcb
bound
pop
in
movsl
test
test
adcl
xchg
mov
mov
jle
push
jl
inc
pop
add
adc
mov
outsb
clc
xchg
icebp
dec
mov
mov
fcomps
adc
cmp
pop
push
andl
insb
sarl
push
mov
mov
enter
sbb
dec
ljmp
loope
mov
gs
mov
jmp
cmp
nop
jmp
addr16
mov
testl
pop
mov
daa
arpl
lea
jae
cmpsl
scas
or
xor
cmp
iret
mov
in
das
into
xchg
outsl
xchg
loope
cs
adc
arpl
mov
xchg
xchg
pop
mov
std
cmp
jmp
pop
arpl
fisttpl
mov
aam
cwtl
or
mov
or
pop
out
cmp
inc
xor
mov
iretw
outsb
or
clc
or
dec
outsl
testl
dec
les
xor
movsb
movsb
in
repnz
and
repz
into
scas
mov
out
popa
xchg
add
aad
add
insl
mov
scas
sbb
sbbb
sbb
movsb
inc
jo
mov
or
and
mov
movsl
and
push
lea
cli
fstps
push
stos
and
and
cmp
pushf
xor
jb
push
inc
cmc
xchg
sbb
cmp
das
dec
test
mov
int
jb
mov
lret
mov
lea
xchg
inc
inc
xchg
xchg
jbe
xchg
cmpb
lds
test
xchg
mov
shll
lahf
fsubrs
mov
pop
sbb
sub
or
cmp
mov
mov
xor
jns
cmpsb
int3
shll
mov
inc
push
ja
sbbl
push
icebp
lret
adc
fstl
jb
insb
sti
and
xor
aas
xor
repz
adc
mov
shlb
add
pop
popa
cmpb
test
jl
pop
lods
in
xchg
mov
xchg
sub
popf
es
daa
push
fsubrl
mov
and
out
js
jecxz
xor
push
jle
aam
in
mov
pop
and
or
cmp
mov
jl
and
xor
inc
add
adc
pop
out
mov
xchg
outsl
bswap
cwtl
lahf
ja
js
lds
sbb
mov
mov
xchg
les
lret
loopne
lcall
bound
cld
sbb
cli
int
lock
or
std
pop
add
sub
aas
out
int
cmp
push
scas
int3
dec
add
mov
aad
out
xchg
je
inc
or
sbb
pushl
fmull
dec
sbb
xor
xchg
popa
xchg
jge
jne
push
shll
and
or
out
sbbl
test
ds
jecxz
or
inc
cltd
sbb
daa
insl
andl
jbe
lods
movsl
in
xor
mov
out
jbe
mov
fadds
cmp
push
test
mov
xor
test
shlb
mov
adc
cmp
std
inc
jge
fldt
mulps
inc
pop
jmp
xchg
jecxz
jae
and
sti
stc
dec
aaa
sub
fildl
ja
mov
fisubrl
stos
ss
fnsave
jecxz
into
lds
fistps
pop
jg
sbb
clc
cmp
insb
mov
pusha
inc
aam
fmull
je
jae
cmp
int3
movsl
arpl
test
cli
adc
inc
sbb
inc
jne
aam
jp
icebp
sbb
inc
push
rclb
je
jbe
or
testb
jne
xor
mov
xchg
cmp
jbe
popa
repnz
pop
xor
fwait
lods
lods
jg
int
mov
or
fwait
insb
out
icebp
testl
int3
icebp
cmp
ljmp
lret
inc
sub
jl,pt
les
aas
test
and
mov
jp
fnstenv
test
jp
out
add
sub
push
sbb
sbb
adc
push
cmpsb
xlat
stc
test
mov
test
mov
mov
sub
sub
cmpsl
loop
and
inc
fwait
cmp
adc
scas
push
inc
out
aad
pushf
mov
adc
pop
pop
mov
cmc
cmp
out
lods
call
dec
int3
shl
xchg
xchg
cmp
arpl
push
ret
and
pushf
cs
dec
cmp
mov
mov
fsubs
xchg
cmpsb
out
inc
adc
out
fisubrs
lcall
cmp
inc
inc
nop
rcr
mov
mov
pusha
mov
or
int3
pop
push
aas
lods
sbb
mov
cmp
cld
inc
pop
lcall
or
jp
mov
jno
flds
testl
aaa
shll
dec
aad
adc
dec
cmp
std
loopne
cmp
clc
shl
shlb
test
fiaddl
movsl
ficoms
push
pop
ss
mov
sbb
sbb
or
das
movsb
sub
adc
xor
sub
in
adc
mov
and
inc
sbbl
push
push
mov
das
test
or
pop
mov
jecxz
sbb
pop
jmp
adc
jnp
aad
stos
add
sti
sbb
xchg
cld
sub
push
mov
xor
in
sub
push
mov
stos
cs
loop
repnz
out
mov
movl
aas
mov
mov
jmp
mov
ror
xchg
lret
dec
fimuls
test
das
pop
adc
push
lret
subl
mov
out
fimull
push
shll
out
cwtl
je
sti
push
pop
dec
push
fadds
mov
scas
adc
inc
fidivrs
iret
es
mov
ret
in
fsubl
push
cmovg
icebp
dec
mov
mov
xor
jb
in
fdivl
push
jnp
loop,pn
push
and
rol
test
mov
push
sub
dec
dec
ret
call
enter
adc
inc
jecxz
or
cmc
sahf
dec
add
sbb
or
pmuludq
add
popf
outsl
jl
jmp
movsl
inc
in
inc
fstps
leave
fidivs
js
repz
outsb
pop
push
jge
mov
outsl
nop
out
cmp
in
test
adc
and
pop
dec
call
addr16
push
daa
jb
push
cmp
sbb
pop
sbb
add
pop
jle
out
sub
lods
cld
sub
arpl
cltd
push
int
cmp
insl
cmc
push
cmp
jmp
mov
jl
nop
loopne
sbb
roll
push
cs
mov
mov
and
lea
jecxz
mov
ja
and
pcmpeqd
test
xchg
mov
jmp
jno
hlt
inc
mov
inc
jnp
cli
es
cltd
cs
mov
aad
push
sbb
inc
hlt
push
mov
int
or
mov
scas
outsb
pop
pushf
cwtl
aaa
mov
out
adc
jno
or
aad
stc
lods
pop
ret
xchg
out
lahf
add
pop
movsb
outsl
dec
nop
lret
jo
pop
jne
xchg
cmp
cmp
fidivl
nop
lahf
cltd
mov
adc
sarl
jecxz
ret
scas
mov
mov
loop
inc
jne
aas
cmp
lock
aas
and
imul
jge
inc
int
mov
add
mov
adc
add
dec
lcall
leave
sbb
xchg
daa
imul
in
or
add
aaa
mov
push
or
rcl
pusha
xor
adc
imul
add
jp
dec
sub
push
cmp
scas
lcall
shr
mov
cmp
mov
add
xorb
add
or
lahf
repnz
pop
cmpsl
jne
xchg
outsb
or
xor
icebp
enter
cmc
cs
imul
mov
push
scas
subl
lods
cmp
in
sahf
sub
fisubs
inc
jo
pop
cmp
addl
xor
aaa
pop
fdivp
add
icebp
pop
out
cwtl
ss
or
add
test
js
jns
mov
and
push
sbb
hlt
xchg
mov
jl
repz
sub
jecxz
loopne
lods
and
cmpsb
push
mov
ficomps
incl
sbb
movsl
outsl
sub
inc
pop
ret
mov
and
mov
xchg
inc
cmpsb
mov
jae
push
push
repnz
push
push
popf
fstpl
stc
ss
pop
pop
lret
mulb
pop
add
ret
int3
xor
xchg
in
push
in
scas
repz
inc
xchg
fimull
add
jo
jle
sub
hlt
std
popa
jbe
clc
cmp
sbb
cwtl
mov
jle
inc
mov
push
lret
mov
or
pop
xor
fucomi
repnz
jmp
xchg
adc
pop
xchg
aaa
leave
push
xchg
or
decl
push
pop
sub
repz
mov
movsb
notl
push
outsl
imulb
popl
mov
mov
pop
push
aad
lret
divb
add
js
pop
xor
pop
xchg
inc
negb
popa
sub
int
inc
pop
cld
and
in
pushf
inc
jb
dec
test
mov
sbb
dec
pop
mov
mov
sti
pop
push
sbb
push
ret
fbld
and
inc
test
fimuls
dec
outsl
repz
inc
in
dec
ljmp
pop
loop
push
cmp
xchg
aaa
les
ss
sbb
aaa
stos
cmc
in
pop
scas
sub
jb
xchg
jecxz
divl
hlt
aaa
xor
dec
push
sub
add
mov
loope
lret
test
js
mov
jp
and
lea
and
inc
and
and
cmp
outsb
sub
pop
xchg
jns
or
cmpl
test
ljmp
cmpsl
lds
mov
andb
and
leave
lcall
test
insl
out
xchg
lahf
in
sub
jb
and
inc
sbb
push
fsubrs
jg
add
and
push
nop
sbb
sbb
scas
push
stos
adc
fimull
mov
xor
test
mov
xor
mov
jno
shll
decl
jns
cltd
rcrb
mov
mov
inc
and
sub
dec
lea
arpl
or
inc
sti
clc
nop
sete
fisttpl
add
filds
adc
mov
sub
lds
add
jecxz
hlt
jo
pop
or
push
imul
push
inc
and
loop
jb
mov
cli
cwtl
lods
xor
or
xchg
push
movsb
gs
call
xchg
ja
outsb
cmp
mov
sbb
mov
jg
mov
lahf
gs
out
adc
addb
pop
lret
jle
popa
or
aad
mov
mov
mov
inc
inc
sahf
test
cld
ja
or
repnz
sbb
and
mov
test
outsb
lods
les
out
cmpsb
in
mov
jg
rclb
cmpsl
fidivrs
xchg
shr
ret
dec
xchg
or
ja
xlat
cwtl
jo
or
inc
adc
xchg
push
sahf
mov
adcb
cmp
in
aas
add
dec
fbstp
into
or
nop
lea
mov
in
jmp
dec
repz
jp
lea
js
pop
loopne
lods
and
mov
mov
inc
das
lcall
mov
mov
lret
add
pop
sbb
lret
sub
inc
fsubrp
out
cmp
arpl
add
mov
mov
mov
cld
fwait
in
pop
mov
inc
inc
mov
and
cmp
fs
pushfw
adc
push
dec
push
shlb
xchg
cmc
pop
subl
mov
std
hlt
xor
cmp
in
inc
sbb
lods
shll
cltd
fwait
lods
stc
adc
or
pop
add
scas
push
cli
mov
cmpsl
push
rcrl
xor
jl
mov
in
cltd
ret
push
lea
mov
or
mov
ds
aas
lock
js
jae
jp
int3
add
lcall
cmc
insl
loope
mov
int3
mov
je
mov
pop
sti
adcb
sub
mov
ja
pusha
dec
add
dec
iret
imulb
popa
mov
popa
xor
es
xchg
aas
hlt
or
lret
arpl
sbb
inc
insl
push
and
mov
fs
repnz
cmp
inc
fstl
or
shrl
adc
sbb
sarb
jecxz
scas
sub
push
push
add
inc
mov
lock
add
adc
sti
aad
or
lock
sbb
fnstenv
and
mov
mov
fsubl
adc
in
xor
inc
stos
int3
nop
add
aad
xor
mov
dec
dec
inc
negl
or
jbe
clc
cwtl
xchg
pop
xor
xchg
or
out
pop
jne
pop
out
jge
mov
fcmovnb
shlb
adc
repnz
and
inc
test
lods
sbb
pop
sahf
xor
mov
mov
sahf
push
pusha
and
cmp
dec
cmc
call
fsts
pop
out
stos
or
aam
cld
fisttpl
sbb
testl
push
mov
sub
in
push
mov
mov
iret
adc
cld
mov
pusha
mov
pop
and
dec
push
dec
sub
inc
addr16
gs
imul
mov
mov
xor
mov
or
leave
jbe
mov
or
inc
adc
mov
cli
outsl
sbbb
push
inc
cli
xchg
sbbb
pop
ss
daa
pop
ss
xor
inc
std
jecxz
arpl
popf
lahf
jae
bound
mov
pusha
mov
cmp
cmp
js
aad
push
fisttps
pop
lods
mov
jb
into
xchg
movsl
fldenv
movsb
outsb
jb
std
push
mov
push
or
pop
cmp
mov
sub
mov
xor
mov
cld
lea
sti
add
xchg
xchg
mov
pop
sbb
add
popa
and
cltd
pushl
add
inc
enter
jmp
scas
test
dec
movsb
popl
repnz
xadd
in
movb
int3
push
and
aas
pop
xor
mov
es
pop
jg
shrl
sbb
fidivl
into
dec
mov
xchg
jnp
and
outsb
ret
sti
or
ja
stos
nop
scas
adc
pop
xor
inc
push
in
fildl
mov
mov
pushf
repz
adc
sahf
xchg
repnz
xchg
aas
sahf
sbb
fwait
in
nop
roll
pop
or
hlt
mov
mov
add
and
rclb
push
push
out
addr16
add
dec
bound
jns
std
insl
aam
out
jecxz
lods
movsb
fwait
mov
sbb
fidivrl
xlat
idivb
repnz
test
mov
cs
imul
mov
mov
fisubl
test
out
movsl
inc
mov
mov
ret
out
pop
adcl
and
outsb
scas
sti
repnz
xor
adc
add
mov
xor
in
adc
mov
mov
scas
lret
inc
dec
lret
add
xor
lcall
aam
dec
adc
jnp
xchg
xor
sub
loopne
rcr
cmc
inc
mov
jmp
inc
in
mov
repz
jb
in
dec
and
or
fiaddl
push
inc
mov
sahf
mov
mov
mov
dec
mov
jae
sub
lock
fwait
push
push
fisubl
inc
cmc
cmp
fimull
stc
lret
aam
push
jne
stos
call
fsts
mov
cwtl
inc
shll
fs
imul
add
adc
inc
dec
sub
xchg
popf
rcl
into
rcll
ret
push
loopne
lahf
cs
dec
xor
push
pop
movsb
and
icebp
jmp
jmp
aaa
adc
push
es
mov
or
aas
cmp
and
imul
push
jnp
movsb
push
mov
lock
or
cmpsb
sahf
add
int3
jmp
fcoml
gs
stc
jb
cli
inc
xchg
lds
push
pop
pop
push
adc
xor
jns
pop
data16
in
adcb
mov
mov
pop
pop
or
dec
sti
ret
les
push
push
xor
pop
scas
or
lret
dec
xor
and
lock
loopne
fs
push
xor
or
pop
insb
gs
fcoms
xor
jae
shlb
jl
mov
cld
adcl
popf
mov
lds
aam
inc
push
and
xchg
test
aad
push
fisubl
sbb
pushf
cmp
inc
ss
in
add
notb
inc
pop
and
lods
sub
gs
lds
jbe
loop
mov
shlb
out
iret
pop
cmp
and
in
and
and
pop
mov
int
jbe
sub
sbb
shlb
int3
leave
and
hlt
push
mov
add
mov
call
inc
outsl
jmp
sbb
out
cmp
cli
lcall
push
mov
lock
sbb
inc
inc
cltd
cmc
imul
mov
and
out
into
stos
data16
arpl
mov
movsb
add
nop
fidivrl
xchg
repz
sbb
fimuls
add
daa
push
xchg
cwtl
inc
or
jne
stc
popf
inc
mov
lods
test
and
movsb
aaa
mov
add
pop
shrl
mov
out
ja
cs
jne
adc
test
xor
jae
mov
xchg
andb
movsb
inc
fs
jmp
jge
movsb
leave
add
sub
push
int
negb
lret
cmpsb
mov
jo
mov
add
ljmp
mov
fistpll
ja
inc
aam
nop
ja
jns
lea
stos
das
fbld
xchg
pop
mov
out
push
and
pop
add
aas
dec
pop
inc
dec
xlat
sbb
fsubrp
lods
es
add
outsb
cs
cli
lcall
inc
scas
adc
pushf
in
xchg
movsb
adc
mov
js
in
out
nop
pop
inc
mov
inc
cltd
ret
lods
mov
loopne
cmp
mov
sbb
pop
rcl
loope
je
or
xorl
or
jg
pop
in
push
mov
fdivs
loope
mov
cltd
notl
xchg
dec
sub
fiadds
iret
fildll
cli
or
mov
sub
xchg
pop
aam
insb
mov
adc
and
bound
mov
jecxz
gs
pop
pop
rep
mov
pop
int
pop
mov
nop
fsubs
xchg
jb
nop
addr16
addr16
mov
ds
mov
cmc
add
imul
jae
pop
cmp
test
cltd
fsubrs
imul
inc
lcall
stos
movsl
mov
orb
mov
mov
mov
add
les
sahf
or
pop
inc
addr16
popf
call
jmp
scas
xchg
push
xchg
test
adc
xor
repz
pop
cmp
lret
push
sbb
dec
jp
cmp
push
jae
ja
fidivs
dec
mov
mov
pop
add
mov
leave
out
cwtl
pop
mov
cmp
aas
sub
mov
adc
nop
movzbl
mov
or
js
cmp
inc
push
and
sub
aad
jno
pushf
push
and
dec
cmp
sub
add
mov
pop
inc
es
sbb
bound
call
cli
leave
in
jb
imul
pop
or
adc
mov
inc
int3
add
in
xor
mov
fdivs
es
into
aad
jns
fiadds
dec
xchg
es
and
add
outsl
sub
pop
pop
outsb
ds
cli
pop
imul
mov
mov
push
push
arpl
stos
jl
push
push
jge
repnz
popf
test
adc
push
and
fistpll
ja
loop
jo
mov
aas
pushf
sbb
mov
and
outsb
xchg
xchg
mov
pop
or
pop
insb
ljmp
mov
add
test
gs
fidivs
int3
sbbb
adc
inc
out
jl
inc
outsb
popf
dec
loopne
cmp
sbb
aad
inc
repz
mov
addr16
mul
mov
mov
pop
jne
push
out
bound
mov
jg
imul
mov
stos
cs
cld
out
or
jns
mov
xchg
xor
pop
lcall
cld
xchg
testb
out
xchg
shlb
xorl
scas
dec
and
ljmp
sbb
test
bound
pop
outsl
orb
es
dec
xor
mov
movsl
and
push
jbe
xor
push
lret
mov
cmp
xchg
pop
push
leave
inc
dec
cwtl
or
sub
je
push
mov
bound
addl
test
daa
push
adc
out
mov
xor
sub
movsb
fildl
hlt
mov
call
inc
mov
push
jae
and
add
icebp
faddl
xchg
cmp
pop
add
add
lahf
cmp
daa
mov
inc
pop
sar
je
dec
xchg
iret
in
jg
gs
mov
and
adc
sub
subl
cld
ja
mov
cmp
xor
out
faddl
ds
dec
out
xchg
dec
sti
stos
icebp
mov
cli
std
das
jbe
jecxz
dec
jns
jno
push
outsl
inc
jne
pop
jae
inc
fsubrs
xlat
stc
dec
or
gs
das
jne
jnp
jbe
scas
push
movsb
addr16
in
adc
mov
add
lds
imul
push
test
insb
mul
dec
popa
in
mov
cmp
xchg
cmp
insl
mov
add
mov
enter
push
add
out
addr16
cmp
dec
jmp
lret
mov
leave
iret
retw
sbb
arpl
adc
notb
jp
sahf
mov
inc
bound
sbb
pop
sub
jge
lock
sbb
sub
mov
sub
xor
addr16
adc
loop
jmp
xor
xchg
and
and
dec
leave
outsb
mov
mov
mov
clc
cmp
mov
jmp
orb
adc
xchg
push
sub
sub
jns
cltd
les
scas
xchg
insl
jge
lock
sbb
mov
mov
mov
cmp
scas
mov
je
stos
pop
mov
push
jmp
lahf
pop
nop
cmp
negl
and
cld
popa
test
sub
add
sub
jo
ret
arpl
mov
or
cltd
lods
jg
push
add
mov
dec
jecxz
sti
cld
xor
nop
mov
adc
mov
data16
in
add
test
jbe
lods
jmp
nop
push
inc
sub
push
shl
xchg
lahf
sub
lahf
popf
aam
data16
mov
jle
mov
ret
adc
stos
inc
out
mov
push
addb
call
sbb
pop
stos
jecxz
nop
ja
call
cmp
shll
lea
jp
push
mov
movsl
adc
push
insb
cmpsb
push
jae
f2xm1
inc
mov
iret
popf
repnz
fcompl
pusha
pop
pop
mov
pop
fdivl
cld
cld
mov
mov
jmp
enter
stc
sub
jne
adc
scas
cmpsl
inc
inc
xchg
adc
mov
in
loopne
andb
jl
pop
or
xorb
or
push
push
and
gs
scas
xor
iret
clc
pop
jmp
mov
cmc
cltd
mov
outsl
cmp
cmpsb
in
and
sbb
aam
adc
add
into
cmp
jle
jl
dec
and
or
push
inc
pushf
repz
jg
cli
add
inc
ret
sbb
inc
cmp
cmpsb
scas
push
dec
sub
mov
pop
daa
dec
daa
xor
dec
into
inc
pusha
fs
ss
jmp
es
loopne
dec
xor
or
xchg
in
std
and
dec
and
jl
push
push
mov
shrb
pusha
push
dec
js
mov
dec
or
xchg
in
sub
fwait
shll
in
push
dec
mov
sbb
mov
clc
scas
mov
fldt
loope
mov
iret
xor
jl
lret
aas
stos
dec
cwtl
cwtl
xchg
dec
inc
insb
test
cmpsl
xor
ds
push
movl
sbb
call
leave
cmpsb
fs
outsl
js
push
cmc
dec
or
adc
inc
jle
rcll
aaa
push
and
dec
or
jno
jg
xchg
add
ss
dec
std
xlat
xlat
loop
xor
cmp
push
push
mov
jns
mov
jae
cmp
enter
arpl
lods
stos
ljmp
mov
xor
ja
enter
cmp
sbb
std
mov
xor
call
sbb
iret
pushf
sbb
cmp
movsl
cwtl
mov
aad
jo
sub
cmpsl
mov
cmp
rorl
jne
shl
jb
aaa
mov
jb
pop
or
fldenv
xchg
pusha
jg
jmp
lret
icebp
mov
rcrl
mov
cmp
fsubs
js
call
stos
adc
pop
shlb
or
push
lahf
add
xor
mov
stc
mov
lock
pop
loope
scas
or
je
stos
dec
stos
in
xchg
scas
das
cmpl
loope
push
mov
clc
fs
lret
xor
xorl
jns
ret
mov
into
mov
and
call
fcmovne
pop
orb
lods
push
push
xchg
pop
dec
jl
enter
stos
ja
sbb
add
call
inc
xor
pop
incb
movsb
movsb
mov
stos
mov
mov
loopne
test
cltd
sbb
pop
in
in
adc
dec
orb
jp
dec
inc
push
mov
fsubrl
out
jno
push
pop
push
sbb
hlt
sub
mov
cmp
ret
mov
xorl
mov
inc
cmpsb
and
cmp
jb
cmp
nop
arpl
inc
mov
icebp
pop
cli
testb
or
mov
add
notl
ljmp
and
out
push
aam
mov
data16
sub
dec
pop
mov
fst
mov
leave
inc
popl
hlt
cmpsl
shrb
push
movsl
pushf
movsb
std
sub
or
outsb
fisubrl
into
cltd
and
dec
orb
xchg
xchg
xlat
ss
int
vsubsd
cwtl
mov
mov
dec
push
inc
mov
mov
pushf
cmp
mov
jne
clc
and
xchg
xchg
cltd
rcrb
jno
xor
shll
out
mov
sbb
jae
mov
insb
jg
cltd
cmpsl
sub
mov
aas
xchg
mov
insl
lahf
mov
rol
push
testl
xchg
pop
mov
mov
and
inc
push
addb
push
decl
cmc
jmp
scas
outsl
push
js
cmp
aaa
pushf
leave
shr
leave
xchg
add
dec
addr16
push
shll
lahf
push
ljmp
dec
lods
shr
sub
inc
insb
adc
mov
cli
dec
adc
cmp
pop
mov
jo
mov
cmovp
push
jnp
pop
dec
rcrb
jo
sarb
lods
fsts
xchg
push
data16
jb
jnp
shl
les
adc
repz
lahf
and
ds
push
int
sub
push
dec
es
or
ljmp
dec
mov
xchg
orb
cmp
xlat
jbe
gs
mov
shl
mov
lock
mov
pop
xchg
shr
jbe
pop
shl
mov
pop
aad
lds
call
mov
imul
pushf
sub
push
jecxz
popa
pop
pop
jbe
ds
mov
into
push
jbe
pop
adc
add
sahf
nop
xchg
jbe
lret
cmpsl
mov
jb
popf
mov
jmp
push
movsb
sar
cltd
xchg
push
imul
cli
or
pop
xlat
addl
outsl
negb
mov
imul
and
enter
dec
xor
sti
icebp
lret
adc
inc
xor
push
lcall
cmp
movsl
call
fnstenv
cmpsb
jmp
pop
xor
fsubl
mov
cli
pop
sbb
cmc
stos
ret
mov
and
xchg
pusha
cmpsl
pop
std
mov
lea
jmp
jbe
xor
cmp
add
jae
popa
push
push
cmpsl
add
test
xchg
sbb
out
frndint
ficoml
mov
subb
scas
and
add
lds
mov
push
xchg
subb
cld
mov
push
or
cs
fildl
ss
icebp
add
insl
add
pusha
lea
mov
std
mov
popf
pop
test
xorl
scas
iret
fwait
aas
mov
push
js
inc
jo
dec
xor
in
xor
cmpsl
popa
rcr
in
std
out
fsub
jno
subl
insl
cmpb
push
adcb
xor
addb
lock
dec
int
lock
xchg
pop
mov
dec
adc
addr16
dec
int3
in
push
fldl
cmp
inc
or
mov
bound
dec
sub
lods
insb
dec
cmpsb
je
roll
mov
jmp
sbb
repz
into
inc
jecxz
pop
adc
clc
xor
test
push
pop
addr16
jge
bound
ja
nop
or
aam
pushl
call
push
sub
leave
into
fists
rorl
out
xor
test
sub
jmp
mov
sbb
cmc
int3
jns
pop
or
imul
jbe
arpl
add
stos
imul
xchg
hlt
inc
pop
imul
jge
pop
sahf
packuswb
jle
push
push
mov
inc
adc
sbb
stos
xor
push
lds
and
aad
in
cmp
cli
into
jecxz
inc
sti
cwtl
jb
jno
fwait
sarl
aam
or
push
repnz
shlb
mov
jns
mov
cmp
xor
xor
pop
dec
sub
push
sub
jmp
ja
cmp
stos
icebp
mov
ljmp
cld
movl
int3
mov
daa
shrl
test
xchg
inc
lret
scas
xor
mov
pushf
lret
jle
mov
xchg
lret
es
scas
sub
out
push
mov
xchg
push
int
xlat
push
ja
leave
push
pop
jno
fdivrp
xchg
jp
outsl
stos
xor
shll
int3
rep
lret
ds
hlt
pop
sti
outsb
inc
pop
adc
in
mov
jns
adc
mov
in
adc
xchg
mov
shlb
push
and
sub
gs
and
jge
iret
push
pusha
insb
pushf
mov
movsl
inc
jle
nop
dec
stos
jns
inc
repz
movsb
xchg
or
pop
mov
cmp
push
pop
imul
xor
nop
test
js
imul
shlb
in
popa
inc
aas
cmp
movsl
sbb
pop
pop
jge
shll
mov
imul
decl
stos
mov
fcom
cmp
addr16
jge
pusha
jnp
into
adc
and
loopne
gs
or
orb
add
lods
mov
xor
fnstenv
int3
movsb
xchg
repnz
movsl
mov
out
cmpsb
movsl
xchg
test
sbb
jns
aam
and
mov
pop
inc
sub
fwait
aam
out
mov
add
mov
std
adc
mov
mov
mov
pop
adcb
aas
mov
mov
push
lret
and
nop
test
movl
adc
test
push
ds
testb
test
or
or
std
vcvttss2si
xor
adc
outsl
or
lret
lret
test
or
pop
loop
pop
push
pusha
icebp
lahf
or
dec
mov
sbb
sbb
sbb
sahf
js
out
xchg
mov
mov
cs
sbb
out
divl
mov
ss
out
jl
push
cs
mov
mov
out
out
and
fstpt
and
hlt
mov
add
incb
pop
and
cmp
mov
cmp
xor
jmp
subb
out
test
ja
js
call
mov
xor
repnz
movsl
idiv
fimull
pop
jmp
in
push
in
sbb
pop
jo
pop
std
or
dec
mov
pop
js
nop
push
pop
dec
mov
mov
inc
fwait
daa
inc
push
ds
lds
and
push
stos
sbb
jae
jnp
shrb
dec
mov
shrb
pop
ljmp
popa
sahf
mov
push
cmp
hlt
xor
pop
xor
outsl
add
and
pop
jecxz
fsubrs
fidivl
inc
pop
jb
xchg
test
insb
cmp
mov
and
push
jg
divb
adc
mov
add
cld
push
out
pop
insb
mov
and
jl
std
push
xor
jno
fcomps
or
inc
sbb
add
lds
adcl
roll
or
adc
inc
mov
pop
outsb
lret
lods
jmp
jp
fidivl
xor
scas
incl
xlat
jmp
or
xor
push
repz
mov
jb
xor
sub
xor
cmp
loop
ficoml
dec
ds
out
add
shrb
stos
lcall
xchg
inc
add
jno
fimull
pop
mov
fcoml
jo
testl
outsb
les
or
dec
lds
push
cltd
push
or
mov
pop
sbb
inc
mov
es
pop
orb
push
in
pop
lea
in
mov
xchg
sbb
push
sub
ljmp
or
cld
jl,pn
push
notb
out
dec
imul
icebp
cmp
add
shr
jcxz
push
or
nop
movhlps
pop
jnp
fistps
cmc
es
push
ss
dec
mov
fiaddl
cmpsb
fcmovb
dec
mov
imul
jae
add
movl
adc
xor
cmpl
out
jno
mov
mov
cld
and
icebp
adcb
push
dec
cs
mov
jle
xchg
outsl
mov
cmp
mov
fmull
add
dec
jo
adc
adc
jne
jne
pop
lcall
fldt
lods
ljmp
pop
inc
cmp
mov
and
aaa
mov
mov
and
lcall
xchg
fcompl
data16
sarl
inc
mov
push
xchg
outsb
sub
icebp
gs
jl
dec
mov
inc
ja
mov
push
mov
jg
jo
shl
mov
aam
rorb
xor
cld
call
pusha
test
xchg
je
lret
pop
xor
sahf
inc
push
int
sub
insb
adc
mov
cmp
mov
inc
or
mov
test
test
scas
les
icebp
xchg
mov
sarb
fistpll
nop
push
clc
popf
inc
inc
rolb
int
xchg
cmp
in
jno
loop
dec
ljmp
in
pop
pop
mov
cltd
push
mov
test
leave
push
add
std
ljmp
out
or
cmp
push
js
stos
dec
cmp
sbb
adc
add
cltd
aad
ds
aam
sub
jae,pt
into
fdiv
outsb
jae
testl
dec
orb
fcmovnu
jbe
push
imul
jnp
repnz
int3
add
and
xor
pop
xchg
addr16
xchg
mov
mov
mov
std
dec
insb
lea
mov
lods
das
repz
punpckhdq
mov
push
pop
pop
inc
xchg
mov
mov
out
mov
sbb
inc
mov
stc
lods
cmp
xchg
pop
and
push
inc
out
imul
jb
faddp
push
inc
or
shll
push
mov
cs
stos
loope
mov
pop
sub
and
ror
push
ret
pop
pop
lret
add
lret
add
movsb
das
addr16
jge
dec
mov
enter
fidivs
fadd
push
leave
fldln2
stos
je
scas
shl
sub
dec
addb
or
fsub
add
jnp
sbb
mov
fs
sbb
xchg
mov
add
in
sbb
out
mov
roll
in
xacquire
lods
push
xchg
out
lcall
xchg
push
std
mull
or
cmp
lret
or
stos
inc
stos
ss
mov
mov
sti
mov
xor
mov
js
jg
cmp
cmp
lea
stos
xor
xchg
dec
and
gs
fstpl
pop
jb
hlt
sbb
icebp
dec
repnz
push
cmpsl
movsb
xchg
or
clc
mov
loop
jl
xchg
xchg
and
scas
mov
adc
pop
cmc
mov
cmp
add
mov
sbb
roll
push
popa
or
jecxz
pusha
xchg
ficoml
inc
and
mov
xchg
xchg
adc
xor
sub
pusha
test
inc
mov
sub
sbb
faddl
in
cmovs
inc
and
jg
push
push
shlb
imul
push
clc
jmp
or
int
pusha
dec
lret
inc
pop
stos
je
insl
mov
mov
rcll
cmp
jmp
jo
xor
ja
rorl
inc
ret
pusha
aas
push
push
mov
icebp
sub
ret
je
lods
pop
push
and
and
push
fwait
and
stos
lods
and
fimuls
sahf
pop
and
mov
clc
ds
inc
sbb
jae
fcoms
push
loopne
add
sbb
inc
xor
notb
stos
nop
xlat
fbstp
cmp
outsl
push
lret
outsl
inc
push
lods
pop
cmp
pop
inc
jge
sub
sti
sti
xor
cs
xchg
cmpsl
sahf
inc
jnp
add
pusha
adc
adc
sub
jbe
mov
sub
add
sbb
jp
loop
jns
es
and
mov
aas
in
cmpsl
int
iret
cmp
je
xchg
dec
sub
mov
sbb
sbb
jns
push
movsb
sub
aas
xchg
out
mov
div
cltd
mov
out
xor
test
aaa
mov
push
fistl
outsl
xor
or
mov
dec
iret
repnz
sbb
imul
pop
mov
data16
sub
stos
xor
push
subb
mov
add
imul
aam
and
ljmp
stos
popa
das
mov
lahf
cmp
mov
ffree
cli
int
mov
rcrl
mov
jl
mov
ljmp
outsb
movsb
decb
lcall
loopne
testb
lods
or
mov
jno
mov
jl
nop
lods
xchg
test
testb
pop
mov
outsl
aas
fiadds
mov
xchg
inc
xor
leave
icebp
gs
cmc
enter
adc
sbb
mov
bnd
gs
and
in
mov
cmp
cmp
jmp
scas
sbb
sbb
rcll
fwait
mov
inc
xchg
xchg
insl
aam
xor
push
add
fisubrl
mov
lock
ds
inc
mov
jns
dec
push
es
cmc
or
addr16
orb
pop
aad
and
mov
repz
sahf
and
dec
movsb
push
aaa
dec
pop
push
aam
iret
mov
push
jmp
add
jnp
pop
aas
negb
xchg
loope
xchg
in
adc
push
push
jmp
mov
ljmp
sbb
or
out
repz
cmp
adc
push
xchg
mov
mov
loop
mov
xchg
mov
add
test
inc
pop
mov
push
mov
xchg
jp
mov
cltd
ret
ja
xchg
ret
outsl
xchg
loop
test
sarl
orb
cmp
les
jmp
loopne
out
movsl
adc
jmp
push
mov
lret
in
push
mov
repnz
test
outsb
fs
call
icebp
xchg
js
in
xchg
sub
or
roll
mov
push
dec
add
arpl
push
jnp
add
subb
adc
cmp
mov
pop
nop
jge
iret
loopne
or
xchg
adc
mov
out
xchg
outsb
fidivs
ret
repz
scas
fs
rorb
gs
lods
aaa
pushl
pop
cmc
cs
test
mov
mov
dec
rcrb
ss
jp
xor
dec
leave
imul
dec
arpl
popf
shlb
cmp
cltd
mov
lods
xchg
inc
stc
and
mov
rcl
cmp
pop
leave
test
daa
add
pop
mov
jo
jmp
addr16
out
adc
cmpsl
mov
lret
dec
jp
cmpb
mov
popa
ret
jmp
push
cmp
jg
shrb
cmp
add
push
ss
lret
push
in
jo
mov
sbb
movsl
jl
cs
and
les
lret
xchg
cmc
sti
arpl
addr16
push
jmp
sub
add
icebp
add
rorl
js
jge
push
movsl
movsb
outsl
xchg
push
or
mov
imul
push
dec
nop
jl
xor
js
push
filds
and
or
add
jae
xchg
loope
rcrl
push
push
push
xlat
lret
push
push
adc
in
or
jg
mov
pop
pushf
push
or
add
das
dec
sub
outsb
aad
inc
sbb
es
sbb
popa
cmp
movsb
xor
dec
inc
push
mov
xchg
pusha
popa
push
add
cmc
push
lea
push
rorb
sbbl
push
dec
adc
scas
add
out
sarl
aas
in
jae
fwait
sub
int3
pop
cmp
pop
stos
inc
popa
mov
mov
lcall
pop
mov
dec
mov
adc
hlt
mov
mov
push
in
jno
dec
mov
jbe
jmp
mov
push
pushl
mov
mov
adc
dec
or
ficompl
push
push
mov
mov
lahf
iret
jb
je
aas
js
xlat
testb
mov
and
push
cmpsl
clc
jbe
pusha
add
into
lods
jecxz
jmp
repz
aad
mov
cmc
in
call
add
ret
jle
dec
dec
mov
jg
shlb
aam
and
testl
xor
cmp
fiadds
push
inc
lret
mov
cmp
mov
sub
cmp
jns
mov
jo
ss
push
scas
push
icebp
jp
das
or
push
loop
ret
push
fnstcw
les
xlat
int
push
inc
dec
add
cmp
push
jns
ficomps
or
ja
or
insb
jg
push
loope
xchg
in
aaa
movsl
movsb
add
sbb
xor
js
aaa
inc
cli
dec
lock
shll
inc
scas
xchg
fnstcw
dec
lret
int
es
arpl
xor
adc
data16
repz
pop
cli
cld
sarb
cmpsb
pusha
mov
leave
das
repz
push
test
xchg
js
cwtl
pop
icebp
cmp
filds
stc
imul
into
fiadds
les
mov
insb
xchg
pop
xchg
lock
sub
ja
and
lods
push
push
int
adc
arpl
test
into
fwait
add
jecxz
xchg
mov
cmp
mov
mov
dec
mov
mov
jp
pusha
push
out
pop
stc
or
notl
xchg
imul
xor
sub
daa
and
push
loope
cmp
pop
xor
repz
jmp
outsl
fadd
jbe
in
jecxz
fwait
cmp
jne
jl
jle
mov
push
mov
roll
pop
stos
mov
or
dec
inc
and
jno
in
cmp
pop
xchg
or
das
push
sub
popf
in
aaa
push
movsl
out
and
jp
pop
or
push
les
pop
leave
stc
jnp
in
popa
sbb
ljmp
outsl
ret
xor
push
push
sbb
enter
sub
mov
scas
out
and
push
out
andb
jecxz
jae
adc
xchg
fxch
fsub
add
mov
pop
xor
adc
loope
sub
gs
gs
add
cmpsb
rcl
leave
push
arpl
arpl
std
mov
cmpl
or
push
lret
loope
pushf
adc
popf
mov
int
xchg
xor
pop
ret
dec
ficoml
xor
xor
jnp
ja
lock
xor
add
lcall
mov
and
add
insb
clc
pop
jecxz
outsb
in
xor
scas
and
out
lds
sbb
scas
adc
mov
pushf
aam
mov
popf
jp
mov
and
out
inc
aas
adc
dec
push
sbb
or
or
push
jnp
inc
je
xchg
bound
cli
adc
cmpsb
in
jmp
jmp
daa
shr
pop
push
cltd
rcll
adc
dec
in
xchg
rcrl
dec
orl
jp
jl
aam
mov
rcll
or
sbb
js
fwait
adcl
cmp
inc
push
sub
sub
add
sbbl
inc
push
leave
add
ljmp
sub
call
xor
enter
dec
xchg
adc
dec
xchg
adc
sti
push
cs
pusha
outsb
jl
push
fsubl
insb
and
out
aaa
std
lds
outsb
outsb
cmc
lcall
push
shl
mov
mov
xor
mov
bound
xlat
push
shr
ret
dec
sub
imul
dec
je
sar
ficomps
inc
mov
lods
jo
mov
pop
aaa
dec
dec
or
mov
repz
and
or
push
les
and
jae
das
call
loop
arpl
and
sub
xchg
fisttpl
xor
push
pop
nop
mov
int3
xor
into
xchg
nop
mov
dec
scas
aad
movsl
testl
xor
xor
in
scas
pop
imulb
xchg
lret
fcompl
lcall
sub
sub
adc
shll
stos
pop
mov
lods
mov
addb
dec
adc
mov
idivb
dec
mov
dec
mov
mov
mov
iret
adc
je
cmp
pop
int
jl
cwtl
aad
loopne
cmp
or
pop
xchg
enter
loope
mov
jmp
daa
leave
lock
cmp
or
or
add
jae
mov
aam
mov
sub
adc
xchg
outsb
push
xlat
adc
cltd
lret
stc
fwait
adc
jb
xchg
push
fwait
add
push
lea
aad
xchg
push
ss
adc
cs
adc
lcall
cli
add
loop
add
hlt
ficoml
xchg
mov
imul
mov
scas
sar
pop
or
icebp
sbb
jp
jb
ds
mov
pop
xor
mov
sbb
scas
js
xlat
mov
and
lock
lret
mov
aam
inc
std
push
movsb
sahf
dec
rol
cmp
xchg
or
sbb
pop
testb
fldl
pop
inc
xchg
aam
xchg
sbb
jmp
fistl
mov
in
orb
orl
rcrb
mov
or
jecxz
mov
dec
repz
cmp
inc
jb
ja
loopne
sbb
jecxz
push
rol
add
fists
lock
xchg
or
shll
test
sub
inc
xor
mov
add
add
icebp
xor
sub
je
sub
and
imul
xor
add
or
mov
xor
data16
add
xchg
ret
loopne
push
add
push
call
push
add
inc
xor
jl
or
rclb
rorl
roll
xor
mov
movsl
subl
js
push
add
call
daa
in
stos
pop
cmpl
loopne
lret
loope
imul
ja,pn
adc
jle
sbb
and
mov
aam
adc
push
sbb
jge
push
out
mul
testl
fwait
xor
iret
in
js
dec
jno
ror
jno
cli
inc
sub
out
inc
push
fsubs
sahf
test
neg
loop
cmp
sbb
jle
xchg
xchg
cmpsl
js
jbe
clc
les
xchg
fiaddl
ljmp
and
jbe
in
inc
mov
ljmp
pop
fsub
rcl
dec
outsl
mov
adc
into
nop
pop
jg
sarb
push
cmp
popf
lods
ficompl
fists
imul
jg
push
in
adc
fiaddl
aam
sub
dec
fnsave
sbb
fwait
sahf
ret
jns
call
or
in
xchg
scas
pop
jb
out
filds
push
xchg
call
addr16
pop
push
std
rorl
leave
xchg
push
in
pop
dec
mov
fnsaves
test
cmc
inc
bnd
and
sub
adc
push
pop
lcall
movsb
out
inc
bnd
mov
xor
push
aas
fdivl
push
in
add
cmc
and
jge
mov
ficomps
out
roll
rorl
and
arpl
in
dec
aaa
add
mov
aas
lret
xchg
pushf
repnz
sub
ret
lret
std
inc
or
push
jmp
pusha
adc
ret
movsl
sub
or
and
inc
fs
sub
sub
mov
xchg
fwait
jne
lock
aam
push
pushf
jbe
imul
scas
and
and
and
call
int3
mov
mov
in
add
cmp
sbb
and
sub
or
or
dec
sarb
sbb
cmp
cltd
xchg
icebp
push
jle
sbb
and
dec
add
mov
gs
adc
gs
icebp
dec
inc
lahf
pop
insl
and
pop
fwait
push
ficompl
push
insl
out
imul
out
push
mov
fstps
add
lock
in
movsl
sub
popa
test
sahf
push
mov
or
and
notb
jg
dec
dec
sub
shlb
mul
movsl
in
pop
inc
mov
scas
in
movsl
xor
negl
fisubrl
add
ror
inc
push
std
cmp
xor
adc
insl
mov
jns
mov
out
mov
mov
adc
dec
data16
test
out
je
xchg
popf
add
mov
cwtl
sti
mov
mov
loope
pusha
xchg
ret
cmc
pop
daa
pop
lock
test
cld
or
cmpsl
cs
dec
popl
xor
sub
out
xor
js
pop
lock
in
sub
or
jecxz
mov
popa
es
jae
scas
push
lret
mov
xorl
adc
cmp
push
pop
mov
add
movsl
out
dec
ret
sub
adc
test
adc
mov
cmp
pusha
lahf
pop
mov
add
adc
jp
iret
pop
dec
inc
or
push
sub
cli
repnz
addr16
pop
bound
loopne
ret
jne
add
jae
mov
sub
dec
adc
add
aas
lea
cmpsb
or
test
fstpl
adcb
js
rclb
sub
dec
xor
test
and
mov
or
adc
pop
loop
cli
mov
or
std
decb
pop
sub
jbe
negb
or
xchg
aad
push
fwait
aam
xor
push
int
pop
enter
push
rcll
jmp
mov
inc
shll
stos
sub
scas
icebp
mov
add
push
add
and
scas
mov
dec
xorl
sub
sub
leave
inc
adc
pop
push
dec
loop,pt
negl
repz
roll
out
roll
cld
xchg
mov
jb
jne
iret
dec
adc
xor
shll
and
inc
cmpl
sbb
ret
or
adc
sub
fwait
pop
stc
xor
push
insl
repnz
les
sbbl
out
push
pop
test
adc
or
enter
leave
push
dec
inc
jecxz
mov
fldcw
add
scas
push
jp
inc
or
stos
xchg
xchg
jg
mov
xor
popa
add
and
int3
lods
mov
fdivl
jo
leave
push
jno
in
mov
cltd
mov
fbld
scas
jb
adc
xchg
dec
inc
insl
inc
cmp
mov
and
mov
movsb
addl
and
lods
icebp
dec
cmp
inc
push
adc
push
mov
dec
fs
pop
or
pop
cs
dec
sbb
in
clc
xlat
push
mov
subb
rcl
aam
add
lret
pushf
push
mov
jne
xor
sbb
fwait
movsl
pop
dec
movsl
cmp
call
jl
jo
jae
mov
pushf
cmp
cmpsb
or
push
movsl
mov
stc
and
jmp
fisttpll
jecxz
outsb
movsb
sub
jg
xor
aas
mov
xchg
pop
fstps
fwait
daa
xchg
neg
sahf
fstl
xchg
lea
and
jge
das
xchg
inc
sbb
scas
sahf
mov
cmp
clc
mov
push
xchg
jb
mov
fwait
sub
inc
insb
cmp
cld
pop
sbb
clc
dec
das
pop
aas
mov
sbb
xchg
mov
jl
or
rclb
nop
jecxz
call
loope
shrl
mov
pop
sbb
jb
jge
dec
jmp
jmp
sbb
mov
sti
inc
rcrl
sub
or
xchg
xor
xor
sbb
repz
sahf
gs
loopne
xchg
and
cmpsb
sub
jnp
shlb
add
outsl
lods
mov
xor
in
mov
nop
adc
mov
scas
pop
xchg
outsb
dec
shll
cld
cmp
pop
mov
out
fsts
es
fcomps
rcl
imul
push
adc
ss
sbb
or
sbb
imul
mov
push
rclb
inc
jo
mov
call
xor
sbb
push
mov
outsb
mov
adcb
mov
scas
addr16
sbb
out
leave
adc
xorl
ljmp
push
sub
add
pop
add
cltd
aam
and
bound
dec
fimull
in
nop
js
xchg
xchg
call
lret
dec
mov
cmpsl
sub
pop
push
in
test
shl
mov
dec
mov
inc
jp
imul
dec
loopne
mov
jbe
jb
pusha
loope
push
ds
inc
push
mov
scas
inc
test
cli
cs
arpl
adc
adc
jns
in
jl
stc
cld
xchg
das
xchg
push
and
iret
jae
xor
cmp
js
shll
jmp
in
fstpl
cs
shlb
jno
clc
mov
arpl
js
addl
mov
xor
push
aam
pop
cltd
pushf
push
shlb
fsubrs
xor
mov
daa
lcall
bound
mov
jl
adc
test
jge
and
imul
test
mov
jecxz
out
cli
push
nop
repz
mov
rorb
clc
mov
pop
in
stc
loope
cmp
push
add
sarb
dec
xor
push
push
sti
clc
repnz
lret
inc
fs
cmc
rcrl
gs
adc
jae
fwait
lock
push
sbb
loopne
out
jbe
addl
pusha
sbb
and
divl
hlt
int3
fs
outsl
and
add
fldl
dec
mov
pushf
cmp
mov
sbb
push
in
ljmp
cmp
push
sar
mov
inc
pop
mov
outsl
cltd
add
or
pop
xor
jno
sub
lret
imul
add
incb
shrb
mov
jp
jmp
out
pop
jbe
inc
push
inc
mov
xchg
sbb
clc
xor
sbb
clc
dec
or
push
sbb
xchg
xor
sbb
push
jl
dec
ror
cmc
popf
mov
push
inc
xor
jae
cmp
mov
nopl
add
push
shl
data16
hlt
xor
aas
mov
push
mov
jns
cld
sahf
popa
inc
sbb
sti
lods
lods
roll
dec
sub
das
gs
sbb
nop
xchg
lea
insl
sahf
pop
mov
aaa
in
cld
and
mov
push
hlt
jne
jae
jge
or
insb
jne
xchg
js
xor
call
mov
inc
lds
loope
test
lods
sarl
push
xchg
sbb
cmp
mov
inc
pop
adc
xor
jl
adc
popa
arpl
pop
inc
push
divb
out
or
movsl
and
xchg
out
xchg
jb
cld
push
add
loopne
jl
loope
jle
jle
jmp
sub
sub
lods
mov
push
add
dec
xor
in
mov
mov
xor
jno
dec
out
mov
scas
xlat
sub
enter
xchg
push
cmp
es
and
scas
daa
repnz
scas
es
dec
ds
dec
or
jecxz
push
add
sti
sbb
mov
loop
add
inc
loope
daa
pop
popa
cld
pop
sbb
jl
rol
and
sbb
sti
dec
mov
xor
lcall
mov
dec
aam
cmp
notb
pop
jmp
lea
sbb
pop
add
push
lret
and
and
out
xchg
call
out
xlat
repz
sub
lock
xchg
out
mov
fildl
sbb
xlat
jo
gs
fcoml
pop
and
pop
xchg
rorl
push
and
sbb
sbb
jg
imul
jl
and
push
lods
mov
in
sbb
stc
adc
lea
cld
arpl
stos
cmpsb
mov
ja
mov
cli
shrl
cmpsl
nop
or
fadds
fnstenv
jmp
xchg
in
lret
xchg
shll
jno
rol
imul
mov
mov
dec
test
aaa
sbb
fmul
and
cmp
push
mov
ret
jne
aam
mov
mov
xchg
popa
sbb
push
mov
fstpt
push
push
push
sbb
or
jae
dec
pop
addl
nop
push
adc
jo
inc
and
adc
mov
xchg
enter
cld
lret
call
lcall
js
insl
dec
mov
mov
add
outsb
xchg
push
stos
out
xor
mov
cmpsb
fdivrl
push
jle
xor
loop
mov
dec
mov
sbb
or
insb
jae
rcl
adc
cmc
jp
inc
push
test
cld
cmp
jbe
mov
je
std
aam
jae
inc
inc
pop
popa
es
push
popl
shlb
jns
je
sbb
icebp
mov
jge
sub
add
cs
mov
popa
push
repz
stos
imul
repz
jle
outsl
andb
dec
xor
repnz
scas
rorb
mov
push
lods
xchg
sub
adc
add
push
mov
in
mov
pop
dec
jo
lods
fwait
mov
aam
jno
adc
test
dec
lcall
int
push
incl
and
enter
mov
xchg
mov
inc
loope
mov
sbb
mov
push
or
bswap
jnp
cmpb
or
aaa
shl
xchg
shl
pop
xchg
inc
sub
out
push
outsb
mov
mov
scas
pusha
in
std
in
mov
js
adc
and
sbbl
cmp
adc
icebp
sub
ficompl
jmp
cmp
out
cmp
loop
pop
pop
hlt
jne
or
mov
je
dec
pop
ret
add
stos
lret
out
arpl
outsl
ror
popf
out
or
sub
push
cmp
in
adc
push
test
xchg
push
push
mov
pop
jns
lods
mov
and
mov
push
adc
sar
jl
add
mov
inc
mov
pop
add
pop
mov
call
push
inc
sub
mov
mov
add
les
fildll
aas
cmp
gs
push
and
sbb
rcrb
mov
hlt
fisubs
fsubs
add
int
pop
lret
dec
add
imul
arpl
fldl
daa
and
inc
lret
xor
outsl
pop
jns
xor
fisubrl
arpl
popa
push
scas
add
add
imul
pop
mov
int3
stc
inc
setl
shl
mov
sbb
mov
imul
outsb
dec
and
xchg
adc
or
ficoml
shr
inc
cmp
scas
xchg
pop
adc
lahf
mov
insb
add
out
xchg
mov
cltd
sbb
fwait
das
repnz
pusha
cmc
dec
inc
add
dec
mov
ficoml
fidivrl
in
inc
sbb
stos
aad
ja
or
xchg
adc
xchg
adc
in
test
ds
mov
int3
stos
mov
and
push
xor
gs
inc
sub
aad
sbb
fs
out
adc
mov
push
sarl
pusha
mov
cmpsb
in
mov
call
or
pop
fdivl
push
dec
fnstenv
adc
lcall
sub
inc
lcall
clc
push
mov
lret
inc
and
sub
sub
bound
add
dec
stos
sub
pop
out
cmp
pop
push
fidivrl
dec
ja
rcrb
xor
ljmp
or
add
mov
mov
sub
xor
movzwl
mov
jnp
fwait
xchg
es
dec
nop
jecxz
cmp
pusha
out
jnp
fcomps
flds
sub
add
add
dec
push
enter
rcl
jl
xchg
jle
push
mov
cwtl
xlat
jmp
push
cmp
push
push
xor
dec
cmp
sub
or
cwtl
xor
scas
fsubl
or
fsts
push
add
int3
inc
jge
xchg
or
ret
jb
cmp
xchg
dec
inc
mov
or
mov
fs
add
adcb
cmp
test
test
mov
popf
int3
and
dec
jle
pop
mov
je
mov
daa
push
sub
sub
mov
jl
pop
in
scas
and
mov
loop
enter
add
sbb
fwait
jle
data16
mov
cmp
inc
inc
pop
call
jge
sbb
mov
shlb
dec
addb
out
inc
icebp
rcl
es
fiaddl
xor
pop
xchg
pop
pop
mov
push
add
cmp
dec
mov
jae
nop
push
dec
mov
dec
xorb
jnp
add
push
pusha
cmp
adc
sub
mov
pop
pusha
in
ret
cmp
outsb
outsb
adc
mov
xchg
cmovp
mov
push
leave
ja
cmp
inc
les
push
add
pop
xor
and
sub
leave
call
mov
call
bts
or
push
pop
sub
add
ljmp
outsb
sahf
rorl
pusha
ret
movsb
out
repz
fistps
mov
mov
xchg
repnz
mov
incl
aas
addl
and
call
mov
test
iret
mov
lock
dec
divl
call
lea
jbe
mov
pop
iret
dec
sub
lret
and
jecxz
sti
mov
add
lret
cmp
jns
mov
lea
rol
lods
push
inc
cmp
popf
inc
pop
pop
aam
sbb
repz
lock
hlt
mov
jl
pop
clc
loopne
xor
add
dec
sub
cwtl
int3
or
nop
xchg
movl
call
shlb
sub
lods
add
aas
test
lea
mov
push
nop
js
add
add
cmc
leave
pop
or
xchg
mov
xor
mov
stos
leave
and
loope
sahf
mov
or
aas
inc
lock
dec
lds
pop
and
or
jg
push
popf
out
add
inc
insb
jl
loopne
or
mov
sahf
pop
sub
jle
inc
mov
jae
dec
fstl
push
inc
jecxz
movsl
adc
inc
push
mov
inc
sbb
stc
scas
xchg
fbld
mov
in
push
and
ror
icebp
fidivrl
aas
lret
aas
aam
and
sbb
push
adc
push
cmc
dec
lret
pop
ds
jno
shlb
xor
mov
or
xlat
scas
ja
dec
je
nop
loop
in
in
push
mov
cli
pop
xchg
dec
fwait
and
and
ss
adc
xor
xor
fwait
mov
xchg
cmp
cmp
loop
push
sbb
mov
cmpsb
std
and
fs
fmuls
cmp
mov
icebp
insb
frstor
inc
mov
dec
add
mov
and
sub
or
into
or
pushf
movaps
pusha
inc
daa
scas
cs
dec
push
shrb
je
mov
out
sarl
push
or
dec
jno
xor
add
aaa
pop
lret
and
xchg
mov
arpl
add
pusha
int
js
faddp
out
sbb
xchg
rorl
pop
sub
clc
jle
insb
inc
cmp
cli
stos
nop
cwtl
pop
mov
dec
dec
push
xchg
inc
iret
std
out
lea
hlt
sub
mov
mov
dec
or
fistl
hlt
fildl
bswap
or
imul
mov
cmc
or
inc
shlb
outsb
out
xor
icebp
jle
out
dec
mov
loop
daa
out
popa
jae
xchg
xchg
push
jo
inc
in
loopne
lds
das
int3
and
loopne
stc
fcoml
mulb
xchg
pop
pop
or
sub
adc
imul
inc
setg
jge
cmp
xchg
sti
add
shl
pop
es
jl
je
pop
xor
or
sbb
pop
insb
inc
mov
or
dec
adc
gs
xchg
imul
adc
repnz
das
mov
add
pop
mov
xchg
dec
push
clc
mov
pop
es
jns
push
rorl
sub
or
inc
rcrl
push
pop
xor
dec
and
addr16
cmc
mov
js
push
add
das
dec
jae
mov
or
mov
dec
dec
xchg
jno
inc
lret
or
stc
aad
ljmp
dec
lcall
enter
bound
shlb
add
and
shl
movsb
ljmp
sub
add
mov
scas
xchg
subb
out
push
test
jnp
popw
repz
mov
xor
jp
orl
popf
sbb
or
jp
mov
push
into
push
push
jp
jecxz
jg
add
push
iret
add
stos
dec
xchg
add
cmp
int3
sbb
stc
out
loop
adc
imul
push
mov
push
mov
or
dec
push
aad
sub
pop
cmpsl
push
jle
mov
jecxz
rcll
test
xlat
out
ljmp
push
call
mov
ja
or
and
int3
aam
or
mov
push
insb
leave
xor
cld
sarl
mov
xor
mov
jno
push
outsl
loopne
xor
pop
shlb
mov
cmp
imul
ret
push
call
jb
jo
jne
jp
call
cmp
aam
insl
lods
sbb
rolb
dec
push
lahf
in
pop
outsb
inc
inc
pop
inc
pop
jbe
pop
int3
xchg
sub
leave
lcall
xor
mov
or
xor
bound
movsb
not
in
cltd
add
mov
mull
push
aaa
jnp
rcrl
aas
jne
cltd
outsl
mov
push
mov
dec
lods
mov
cwtl
pop
rorl
dec
and
outsb
or
cmc
pop
pusha
mov
pop
inc
cmp
pop
and
sub
movsb
sbb
xor
rcl
popf
outsb
shrl
xchg
xor
int3
xchg
ja
adc
adc
in
jb
clc
adc
jge
jg
popa
add
lret
pushf
push
mov
inc
sbb
cmp
jl
mov
pop
out
int
imul
sbb
call
adc
pusha
and
dec
and
inc
hlt
jle
and
xorb
aad
lea
repnz
les
and
std
test
mov
dec
sub
jmp
subb
scas
lods
loopne
mov
fidivs
push
sub
push
mov
je
jp
or
push
aaa
mov
aas
push
repnz
rolb
sub
cld
push
inc
mov
xchg
jle
ret
adc
stc
cmp
insb
mov
cmp
and
lds
lods
xlat
mov
inc
out
mov
push
cwtl
enter
pop
pop
or
lret
sti
add
jecxz
addr16
inc
dec
and
js
add
loope
outsl
imulb
lock
mov
cli
out
rcr
lret
lret
add
add
lods
dec
pop
int3
mov
mov
or
sbb
sub
adc
sbb
and
push
stos
call
sbb
lret
xchg
cmp
aas
pop
jecxz
cwtl
add
adc
pop
filds
mov
xlat
daa
jle
sbb
insb
testl
cmp
je
pop
xor
popf
add
in
pusha
push
je
cmp
mov
dec
arpl
pop
setns
jl
mov
cltd
jb
mov
out
fnstsw
pop
jmp
fcompl
pushf
sbbb
mov
pop
fmul
push
xlat
loop
mov
push
dec
aam
sarb
cwtl
xchg
dec
insb
rcrl
pop
cmp
loop
xchg
xor
or
stc
cld
pop
push
mov
in
out
pusha
jmp
bound
cmp
iret
inc
das
mov
outsb
outsl
or
adc
push
sti
aam
mov
pop
int3
mov
scas
cmc
mov
cwtl
lods
jp
and
pop
sub
orb
testl
xchg
sub
and
push
or
mov
mov
jae
push
mov
jbe
aam
sarb
xchg
xlat
pop
cmp
push
push
test
popf
sti
jle
push
xor
push
push
add
pushf
jb
lar
mov
add
adc
stos
mov
scas
jnp
sbb
mov
in
popa
mov
jmp
faddl
adc
pop
notb
out
ret
jg
popf
ja
mov
clc
jl
pop
push
pushf
pop
nop
push
enter
and
aam
lea
jno
and
sarb
push
cmp
repnz
xor
cmpsb
stc
pop
cltd
lds
push
cmp
jle
pop
jno
ret
out
scas
jp
xchg
lods
call
ss
movsb
cltd
cmp
mov
dec
or
fsubr
xchg
jg
bound
iret
mov
sub
lret
shll
std
cmp
into
mov
cmp
cld
les
aad
pop
lea
shr
mov
push
pop
out
lods
je
mov
inc
sub
mov
dec
dec
imul
inc
xlat
sbb
pop
ret
add
neg
cmc
fcoml
rcrb
jbe
das
jp
xor
roll
mov
cmc
cmp
pop
jno
cltd
cld
pop
sti
pushf
and
pop
pop
aad
cmp
fcoms
dec
movsb
mov
jecxz
filds
jle
adc
adc
mov
mov
cmp
xchg
into
xor
push
jmp
stos
stc
and
mulb
mov
pop
pop
outsl
mov
fsubl
mov
je
push
jae
in
inc
add
jp
out
addl
pop
cmp
leave
add
addl
enter
or
mov
and
ja
add
jns
cli
mov
sbb
dec
adc
jno
scas
in
popf
imul
add
pop
sub
cmp
js
mov
cmpsl
xchg
sbb
xchg
cld
loopne
adc
inc
dec
or
xchg
add
sub
fwait
aad
ljmp
jb
cmp
adc
and
mov
sub
in
push
push
adc
and
cli
icebp
fstpl
add
fwait
mov
stos
xor
jp
cmp
insl
sub
xor
cltd
push
decl
sub
push
addr16
xchg
mov
test
xor
pop
or
or
test
pcmpeqw
push
and
and
xor
mov
stc
aad
test
mov
fisubs
pop
stos
cmp
int3
xor
and
pop
push
jmp
xchg
sub
testb
jnp
mov
repz
push
shlb
sub
out
jbe
popa
xchg
leave
dec
jecxz
fadds
mov
jbe
test
pop
fisubs
sahf
xor
je
out
inc
enter
push
insl
cli
and
aad
adc
xor
xor
inc
clc
push
idivl
mov
inc
add
sub
jns
std
add
mov
xchg
and
fadds
lea
test
sarl
lret
or
movsb
sub
and
shrl
inc
inc
popf
xor
xor
pop
lcall
imul
cmpb
mov
push
outsl
sarl
fs
push
dec
jo
adc
and
int
xor
add
push
scas
jl
fidivrs
pop
inc
int3
add
and
xchg
sbb
and
shrb
and
out
pushf
mov
mov
sbb
nop
jmp
jecxz
leave
daa
inc
or
pop
or
andl
xlat
repz
pusha
les
inc
xor
push
xchg
push
testb
inc
xor
mov
repz
mov
inc
pop
popf
mov
pop
cmp
and
pop
hlt
mov
pusha
pop
inc
fwait
or
sub
inc
negl
push
push
pop
lret
mov
push
mov
push
adc
and
sbb
data16
push
scas
push
jo
sbb
xor
insb
es
sahf
xorb
cmp
mov
ja
add
adc
cmp
nop
pop
clc
out
and
jp
xchg
mov
push
mov
mov
movsl
add
int3
pop
mov
fcmovnbe
jle
mov
mov
lea
js
lahf
push
mov
jne
popf
mov
and
pop
push
imul
loop
lret
push
aas
add
push
xor
mov
fmulp
fsubl
push
divb
add
repz
gs
loop
jbe
or
pop
clc
mov
fstps
les
mov
stc
andl
pop
push
and
cld
xchg
dec
push
jb
mov
ss
push
mov
dec
jp
rorl
cld
not
jmp
jge
xchg
pushf
sub
inc
add
scas
jg
jmp
lods
aaa
notb
je
sahf
push
mov
insl
lahf
fs
ljmp
jecxz
dec
frstor
mov
jae
xchg
mov
jle
push
add
add
inc
mov
dec
sarb
dec
mov
lock
adc
inc
call
add
das
jl
push
mov
test
lahf
addr16
pop
cmpb
xchg
outsb
push
dec
xor
mov
inc
push
hlt
fsubs
inc
push
mov
jo
dec
inc
andl
int3
push
les
and
in
outsl
sbb
add
shl
jae
ret
cmp
notl
sti
imul
jns
pop
push
clc
or
and
cmp
fcomps
fdivrs
in
jmp
inc
mull
adc
sahf
sbb
mov
insb
or
sub
ret
mov
dec
push
clc
pop
xchg
mov
pop
pop
hlt
mov
add
test
loop
mov
mov
jbe
ds
clc
movsb
add
fdivrl
aas
or
xor
pop
lods
push
push
xchg
sbb
mov
jbe
sbb
out
fsub
sbb
pop
inc
ljmp
sarl
pop
xchg
sbb
cmp
xchg
ja
arpl
xchg
xor
js
es
jae
jb
insb
xchg
add
mov
xor
inc
outsb
shlb
in
shlb
insb
pop
jg
movb
mov
sub
cmpsl
mov
xchg
xchg
in
in
mov
push
mov
mov
lods
dec
inc
js
xchg
js
gs
dec
push
adc
inc
push
or
cwtl
jns
out
lea
and
bound
add
adcl
out
data16
ljmp
sahf
xchg
loope
push
xchg
or
andb
pop
sub
clc
iret
popf
dec
jb
and
inc
int
fstpl
push
dec
sbb
xchg
push
aas
clc
fs
sbb
push
dec
mov
push
inc
mov
aam
jp
push
movl
je
leave
push
inc
lea
shll
popa
aaa
pop
add
test
add
push
and
sbb
mov
add
inc
call
xor
stos
lret
repz
jp
push
pop
rclb
mov
add
pop
push
andl
test
mov
ret
pop
out
xchg
add
jb
cwtl
push
jg
fwait
push
pop
dec
rcrb
fisubl
sbb
pop
cmp
and
xchg
xchg
ret
pop
test
iret
push
inc
outsl
inc
daa
dec
fwait
sub
mov
mov
sbb
cmp
xchg
js
xor
sbb
jae
mov
sub
mov
add
lcall
dec
addr16
aas
ds
jb
data16
dec
add
dec
aam
test
jmp
repnz
jne
mov
cmp
mov
sbb
in
adc
push
push
dec
rcll
mov
aad
add
mov
fnstcw
cmpsb
hlt
jge
xor
in
fwait
sbb
imul
add
test
out
jbe
xchg
sahf
add
inc
push
shlb
jle
dec
pusha
push
pop
xchg
pusha
add
int3
xor
pop
add
mov
xchg
or
push
out
test
nop
cmpsl
lahf
cmp
clc
or
dec
jo
fdivrs
decb
fwait
and
fs
add
jge
cltd
sub
adc
mov
xor
inc
mov
shll
adc
mov
add
mov
push
scas
sub
ret
es
sbb
addb
adc
popa
addb
hlt
mov
inc
add
xorb
in
out
movsl
xchg
add
stos
cmp
aaa
push
inc
cmpsb
sbb
fidivs
and
aam
jno
daa
sub
mov
in
clc
mov
pop
xchg
cmpsl
fldcw
fstpl
loop
mov
ficoms
gs
and
mov
mov
pop
insb
xchg
inc
xor
push
rcrl
loopne
cmp
add
pop
sbb
popa
or
pop
into
sub
movb
mov
sub
inc
div
xor
and
xchg
lds
xchg
int3
mov
adc
out
xchg
mov
push
test
aaa
jp
cmp
add
push
xchg
jp
push
leave
pop
gs
jl
lods
mov
rcll
out
inc
lret
inc
push
js
push
jns
adc
jle
insb
js
jle
outsb
rcr
xor
shlb
adc
aam
in
fcmovbe
dec
shr
repnz
xchg
mov
inc
pop
addl
testl
jge
testl
push
push
test
pop
adc
les
addb
cld
fldt
pop
pop
movb
cmpsb
mov
xchg
mov
xchg
add
and
mov
mov
push
sbbb
fbstp
incl
lret
push
lret
push
lods
jmp
inc
push
mov
lea
std
inc
add
ret
add
inc
ja
ret
mov
icebp
addr16
mov
test
out
mov
shlb
and
jb
cmc
jns
rolb
inc
rcrb
jle
adc
push
add
jle
xor
fdivs
mov
sbb
ds
in
and
lret
cmpsl
scas
push
int3
das
mov
in
hlt
cmp
lahf
pop
pop
jne
sahf
dec
mov
xchg
lock
mov
pop
notb
sub
mov
sub
push
dec
inc
stos
and
jns
mov
sub
repnz
xchg
jnp
test
popa
ds
out
mov
jo
nop
jns
push
outsl
pop
xchg
pop
mov
cmpsl
test
aad
jne
ret
xor
and
in
mov
and
adc
stos
xchg
cld
cmp
fcmovne
mov
cmp
xor
insb
pop
repz
cmp
aaa
dec
outsl
jae
xchg
pop
fildl
dec
insl
loop
xchg
and
lahf
and
inc
pusha
lea
or
xchg
daa
sub
jge
push
pop
outsb
xor
sbb
add
push
push
in
inc
ljmp
cmp
test
push
mov
jne
jecxz
insb
mov
cmp
mov
test
xor
outsb
xchg
push
add
das
mov
add
inc
pop
shll
rorb
jb
loop
sahf
or
and
icebp
pop
enter
mov
scas
int
in
cld
dec
in
mov
in
lret
jp
and
push
pop
les
iret
rolb
repnz
mov
les
xor
inc
js
mov
mov
les
iret
test
sarb
dec
sub
push
inc
cli
cmc
xor
call
arpl
sbb
push
and
stos
cwtl
jl
int
push
adc
rolb
fnstsw
dec
popf
fisubrl
mov
shlb
ror
lcall
sub
mov
out
and
fdivrs
sub
lret
pop
aas
clc
sub
or
jecxz
addb
loope
notb
xor
pop
jecxz
ficompl
and
inc
aas
subl
xchg
pushf
test
popf
aam
jg
inc
cmp
jg
and
mov
es
dec
daa
mov
mov
cwtl
adc
lods
push
push
lds
sbb
pushf
pop
sub
sub
pop
pop
and
xchg
pop
mov
ljmp
xchg
sti
pop
ficompl
loope
pop
jo
mov
pop
ss
xlat
jmp
xchg
mov
jbe
jb
or
imul
add
inc
inc
jl
mov
cltd
shl
jmp
mov
loope
leave
fidivl
in
ss
jnp
sbb
fnsave
xchg
stos
fnsave
mov
inc
fsubs
int3
mov
jg
mov
sar
dec
lods
or
pop
pusha
xor
cwtl
loopne
mov
sub
insb
lods
dec
xchg
xor
in
sti
bound
addb
xchg
rorb
mov
sbb
fsubrs
dec
imul
stos
dec
mov
sub
adc
push
ret
imul
popa
fcmovnbe
xchg
mov
into
jg
arpl
add
sub
add
iret
jbe
jg
stc
sti
mov
scas
mull
push
mov
popa
ret
or
js
lret
stos
push
mov
pop
sub
sub
aas
cmpb
push
aam
mov
push
call
sbb
aam
rcrb
mov
std
dec
test
jmp
mov
lret
push
and
inc
xchg
push
cmp
test
in
push
inc
cmp
ds
xchg
and
fdivrs
ss
aam
add
imul
mov
mov
nop
sub
inc
jb
ret
xor
nop
mov
imul
aad
mov
enter
out
loopne
fs
sub
add
xorb
addr16
in
leave
xlat
add
cmpl
loopne
xor
fbld
insb
repz
in
pop
ret
pop
mov
add
pushf
aam
xchg
adc
scas
pop
or
sarb
shlb
popa
pop
add
push
sbb
jns
ja
test
enter
sbb
xor
cli
mov
sbb
xchg
cld
xor
popf
sbb
xchg
test
iret
cmp
cli
sbb
inc
mov
addr16
outsl
mov
clc
jecxz
xor
inc
jp
cs
adc
clc
sub
add
lock
push
push
xor
arpl
repz
mov
jo
fs
push
cwtl
xlat
adc
fistpll
cwtl
scas
pop
push
xor
cmpsl
sub
mov
push
lods
sub
jbe
and
in
xchg
or
dec
sarb
xchg
and
and
pop
dec
cmp
das
push
lcall
add
and
push
mov
and
xchg
sub
adc
pop
enter
inc
mov
in
mov
sub
or
mov
je
mov
repz
imul
push
cmp
pop
inc
sub
lahf
sbb
push
test
push
push
add
mov
pop
dec
jge
mov
mov
jge
xchg
add
pusha
fistps
inc
outsl
lret
out
out
fimull
arpl
adc
gs
mov
xchg
mov
mov
daa
sbb
scas
pop
sub
xchg
sbb
inc
je
out
push
cmp
and
jg
fldl
mov
push
xor
stc
mov
je
je
push
jge
and
mov
mov
insb
push
shll
push
lods
into
mov
pop
cs
es
jle
scas
and
icebp
add
dec
cld
add
mov
jl
pop
push
pop
jne
mov
fwait
pushf
inc
insb
jne
sahf
in
dec
scas
jno
mov
leave
or
mov
jg
loope
pop
mov
adc
and
cmpsb
inc
sub
js
inc
push
stc
pop
out
jae
rorl
mov
mov
sub
sub
hlt
mov
dec
sub
push
pop
out
test
xor
cs
cmp
repz
sbb
xchg
mov
inc
jmp
mov
or
xchg
outsb
lds
inc
add
aas
les
adc
shrb
fsubrl
adc
push
or
sbb
mov
xchg
shlb
push
imul
daa
jmp
dec
les
mov
orl
test
cs
jmp
data16
int
shll
testl
mov
pop
mov
push
or
sbb
cmp
sbbl
popf
sbb
mov
mov
jne
cmc
inc
mov
adc
mov
aaa
popa
sbb
lret
ja
sahf
adc
test
dec
sbbl
sti
and
sub
cmp
fldcw
inc
pop
adc
mov
repz
popf
push
dec
stos
jbe
pop
fcomp
inc
pop
push
sub
std
rorl
jnp
cmc
cs
pop
dec
pop
push
fcmovbe
xor
aas
mov
lock
sbb
cmpsb
int3
fcompl
sahf
pop
rcr
adc
or
stos
cmp
leave
enter
and
popa
das
out
xchg
gs
xlat
sub
mov
add
idivb
out
jno
es
sbb
mov
pop
xchg
lcall
lea
pushf
or
inc
out
mov
add
sub
jne
daa
xchg
push
loop
mov
mov
jge
lds
xchg
or
gs
aaa
xor
pushf
mov
jb
jbe
xchg
inc
std
mov
lcall
pop
mov
push
inc
add
push
out
pop
mov
fidivrs
arpl
inc
cmp
xchg
jge
xchg
aad
gs
in
and
xor
fistps
cmp
xchg
dec
pushf
stos
int3
leave
or
and
fwait
gs
mov
stc
inc
or
mov
mov
sub
fs
dec
inc
nop
in
jl
inc
push
mov
roll
mov
popa
cmp
xor
push
mov
sub
jbe
mov
cmp
outsl
or
lahf
flds
pop
or
lcall
and
lods
lods
cmp
sub
jmp
dec
jmp
or
xorl
jo
pop
das
jge
push
fcmovnu
add
sub
das
xchg
frstor
mov
xorb
sbb
sbb
jno
es
mov
or
xor
cli
pop
ja
sti
loopne
fwait
push
pusha
jae
psubb
xor
mov
mov
in
mov
sti
adc
aam
inc
cmp
pop
jns
jg
and
add
in
cmp
xchg
xor
push
scas
enter
aam
lock
xor
adc
sbb
les
sub
mov
loope
leave
lcall
imul
test
cmp
fbld
inc
js
push
idivb
sub
not
xchg
dec
dec
adc
inc
or
out
fwait
outsb
dec
mov
pop
push
push
ja
mul
sub
mov
out
in
pop
inc
xchg
test
ret
sub
xchg
repnz
jb
mov
push
fidivrs
sub
cmp
dec
pop
iret
lock
jne
orb
xor
leave
loope
xor
int3
daa
outsl
mov
pop
push
ficoms
notl
adcb
push
popf
or
stc
repz
addr16
mov
leave
mov
ljmp
push
sbb
stos
cmp
xchg
arpl
aaa
or
cwtl
mov
das
jmp
outsl
and
jne
push
unpckhps
lret
and
ror
dec
dec
cld
hlt
stc
stos
out
mov
test
call
inc
cmpsb
in
clc
mov
pop
cmp
add
adc
rcl
fldcw
push
cwtl
mov
add
fwait
push
es
in
sub
adc
mov
pop
sub
xchg
mov
xor
inc
cmp
cli
test
hlt
push
or
int
into
addr16
jne
mov
clc
mov
vcvtsi2ss
cmp
das
add
inc
test
nop
or
pop
pop
js
dec
push
sub
cmpsb
std
push
add
out
pop
cmpsb
sbb
subl
jno
push
sub
jl
sbb
sar
cmp
nop
mulb
outsl
and
test
jae
mov
call
cwtl
das
mov
sbbl
jg
xchg
cld
add
aad
pop
sub
jne
rcrl
xor
xor
and
sub
mov
enter
je
push
and
jecxz
movsb
pop
fcmovu
ja
test
jns
icebp
mov
jl
mov
test
push
or
adc
mov
cmp
push
out
inc
push
and
sbb
cli
shlb
push
pop
aad
jmp
inc
or
adc
cwtl
in
cmpsb
mov
out
call
in
mov
push
pop
arpl
loopne
push
adc
or
scas
push
loope
xor
mov
pop
or
out
mov
mov
pop
and
mov
pop
aad
push
mov
cmc
inc
fistl
sti
leave
test
adc
dec
rorb
mov
add
dec
scas
pusha
aaa
xchg
dec
push
fbld
es
jae
fildll
dec
xchg
ret
mov
push
fisubs
insl
mov
dec
fidivrs
pop
ja
inc
xor
in
sbb
leave
mov
mov
leave
mov
in
dec
mov
stos
add
dec
inc
mov
mov
ret
shll
jne
in
ljmp
movsl
test
sub
push
xchg
data16
pop
sub
inc
and
push
mov
lea
push
jmp
mov
add
mov
in
xchg
add
xchg
mov
xor
sub
jecxz
or
add
xlat
inc
decb
or
mov
fcmove
inc
push
push
mov
sbb
jge
pop
or
in
xchg
pop
icebp
outsl
mov
pop
mov
arpl
or
test
addr16
xchg
mov
into
pop
xchg
cltd
sbb
fwait
out
out
fisttpl
lcall
pop
dec
stc
cmpsb
shr
mov
loope
fadds
jg
mov
jp
test
sub
xchg
adc
mov
mov
mov
push
lods
add
sub
mov
cltd
int
ret
out
loopne
nop
scas
adc
jns
mov
pop
mov
fldcw
push
es
aaa
cwtl
ret
daa
fldl
add
dec
pop
into
xchg
push
mov
cs
rol
fstpt
xchg
lods
fisttpl
or
insl
mov
ds
cmpsl
xchg
aad
lcall
and
mov
int3
icebp
jge
leave
sub
jb
scas
das
icebp
xchg
lods
lock
popf
fidivs
daa
sti
shlb
in
push
adc
cs
sti
mov
imul
out
sub
jecxz
outsl
bound
xchg
push
pop
out
xchg
dec
outsl
push
je
int
add
mov
inc
es
fdiv
dec
add
jecxz
mov
shlb
pusha
pushf
in
adc
outsl
mov
and
imul
mov
ret
push
mov
and
outsb
mov
cmp
shll
lea
xor
addr16
push
xor
subb
lret
clc
add
fdivrl
or
and
add
adc
sti
adc
imul
inc
cli
jns
cmp
aas
js
push
sbbb
jo
or
loopne
int
or
push
inc
movsl
shr
add
in
push
xchg
mov
into
rcl
sbb
mov
fisubs
and
push
out
adcb
lock
and
add
fcoml
repz
lea
ljmp
sub
loope
inc
icebp
sbb
or
or
xorl
sbb
inc
mov
shlb
sbb
mov
jbe
mov
jecxz
cmp
mov
cmpsb
loop
fcomps
cmpsl
ja
xor
out
lods
outsl
cmpsl
rol
imul
mov
lret
fstps
std
negl
fisubrs
cmp
sahf
push
and
and
lods
int3
ja
notl
mov
and
int
xor
insl
imul
test
sbb
insl
mov
lods
rcll
sub
mov
sbb
and
dec
enter
ja
bnd
ret
and
test
int
xchg
and
cmp
xor
pop
xor
sub
or
jbe
call
pop
jbe
mov
dec
ja
cmp
sbb
sbb
mov
aad
pop
sar
outsb
mov
mov
push
mov
xor
and
ret
push
cmp
pusha
mov
inc
data16
subl
scas
leave
jo
mov
pusha
repnz
jg
cmpsb
and
shl
call
jp
pop
dec
clc
in
bound
sbb
popf
addb
addr16
addr16
fs
xchg
adc
and
dec
fmul
arpl
out
popa
pop
and
mov
pop
sub
mov
inc
insl
daa
orl
cli
or
popf
iret
jmp
in
rcll
pop
adc
pushf
pop
shrl
sbb
out
mov
fwait
jo
xchg
xor
push
notl
mov
cmpl
mov
dec
jmp
sbb
cmp
lcall
or
or
mov
jbe
pop
shrb
dec
or
jp
cmp
sbb
ja
cmp
sbb
sub
jl
sti
dec
popa
cmp
sbb
sbb
xchg
fistpll
inc
push
rcrl
and
in
adc
nop
dec
cld
dec
pop
adc
sub
pop
jg
or
or
clc
out
xchg
or
icebp
dec
out
jb
mov
arpl
movsl
mov
adc
add
mov
pop
push
mov
loop
fdivrp
repnz
xchg
xchg
push
int
loopne
mov
lcall
cmpsl
jle
mov
outsb
lods
int
insl
mov
xchg
sarl
mov
dec
cmpsl
lret
dec
daa
inc
or
sbb
fnstenv
aam
push
sub
stos
jge
xorl
xchg
jmp
hlt
aam
out
in
mov
pop
into
clc
dec
adc
xchg
in
mov
std
jae
repz
lds
add
jp
pusha
mov
fbld
in
push
stc
and
jge
inc
dec
mov
xor
xor
xor
int3
and
push
lods
divl
ss
xchg
lock
push
mov
mov
mov
popf
jmp
xchg
xor
push
cmp
push
imul
in
cltd
ljmp
inc
sysexit
mulb
daa
pop
je
pop
push
in
fsub
pusha
xchg
fwait
std
nop
xchg
push
mov
xor
fsub
notl
push
jle
add
mov
and
ljmp
pop
inc
stos
mov
mov
ja
shlb
pop
imull
fiadds
add
adc
and
inc
ds
lods
adc
dec
and
xor
and
push
loop
cmc
scas
outsb
and
add
sub
lret
adc
pop
nop
xor
in
cmpsl
pushf
pop
lcall
mov
jbe
test
in
out
jle
sub
test
je
xchg
pop
rorl
loop
mov
sub
xchg
jp
push
ds
sbb
push
test
cmp
mov
movsl
sub
imul
dec
xchg
mov
or
andl
call
adc
movsl
or
fnstenv
mov
sbb
push
mov
mov
or
mov
repz
mov
fdivrl
popaw
leave
in
shll
daa
mov
mov
int
add
popf
mov
inc
mov
call
xchg
sbb
push
cmp
push
mov
fsubp
add
inc
mulb
lcall
pusha
inc
loope
sbb
jg
andb
sbb
loope
or
andl
sbb
jo
pop
sbb
lods
ret
sbb
ja
mov
jae
dec
inc
cli
sahf
in
aaa
sbb
push
imul
xchg
dec
push
rclw
aas
jo
imul
fbld
sub
test
dec
ja
push
aas
push
dec
mov
data16
push
mov
insb
scas
cmp
add
adc
dec
mov
addl
fsubs
lcall
pop
mov
cli
pop
jg
sti
push
push
pop
in
out
and
inc
sbb
sarl
aad
inc
sub
mov
jmp
mov
mov
int3
in
insl
out
fdivl
dec
scas
movb
jne,pt
add
push
add
in
jbe
mov
pop
cmp
hlt
fisubrl
pop
mov
cmp
jo
in
xchg
inc
and
and
rorl
orb
push
je
imul
push
inc
mov
mov
nop
dec
adc
jmp
std
xor
adc
jge
push
stos
fimuls
stos
clc
sub
lock
lcall
xchg
push
sbb
pop
paddw
or
xchg
sbb
repz
dec
mov
xor
sub
es
dec
in
push
int3
lods
fs
push
pushf
movsl
mov
xchg
rcll
xlat
mov
sub
popa
dec
adc
sbb
sub
mov
cmc
jns
fcmove
repz
fimull
cmpsb
pushf
sbb
adc
push
lea
js
cmpl
xchg
pop
mov
and
fistpl
pop
and
push
mov
lcall
jbe
mov
jmp
xor
aam
pushf
bound
jns
insl
mov
dec
sti
mov
das
test
push
dec
adc
stc
xor
pop
mov
and
leave
push
dec
sub
mov
lock
jo
cmp
fldenv
or
fisttps
lahf
and
jp
cmp
jae
fimuls
lds
lret
mov
mov
lds
hlt
mov
mov
ds
inc
test
jmp
sub
cltd
xchg
fisubrl
dec
jns
xchg
popl
int3
loopne
pop
add
cwtl
int
xchg
repnz
push
sbb
das
lods
lods
mov
shlb
pop
sub
es
sbb
push
cmp
fwait
pop
andl
dec
jmp
sahf
insl
xchg
cmp
mov
or
lea
dec
outsb
sbb
xor
pop
push
inc
std
in
insl
mov
ds
lods
push
int3
adcl
divl
cs
push
fs
and
in
xor
ds
subb
scas
add
stos
jp
test
pop
lcall
rol
jmp
dec
push
notb
in
inc
jl
lcall
push
cltd
out
push
push
pop
or
sub
movb
mov
push
ss
dec
clc
divb
faddl
inc
mov
pop
mov
dec
dec
fbstp
push
and
dec
xchg
sbb
subl
and
in
loop
dec
mov
addr16
push
jae
dec
push
inc
ror
add
lahf
stos
or
push
das
test
jp
pop
out
lcall
ljmp
fs
push
sbb
lods
inc
cmpb
xor
aas
mov
xor
mov
aaa
xchg
lods
pop
add
inc
jnp
repz
mov
sbb
gs
call
pop
xor
sub
inc
push
push
inc
daa
sub
ljmp
jb
lods
cmp
imull
ret
cs
inc
lods
icebp
add
sub
test
cmpsb
pusha
repz
jo
ret
gs
stos
jl
or
mov
cs
xchg
adc
xor
jo
push
mov
fdivl
sub
xchg
fbstp
inc
lock
inc
sub
or
cmpsl
fdivrs
stc
pushf
loopne
lods
cld
sub
mov
loopne
out
cwtl
in
fadd
or
and
aad
movb
int3
test
adc
imul
or
xchg
rorl
aam
pop
adc
pusha
xchg
sbb
mov
int
xor
cwtl
jmp
push
push
cmp
xor
xchg
xchg
cld
xchg
mov
pusha
jp
mov
adc
pop
or
pop
jne
mov
rcl
out
daa
push
lock
pop
insl
shrb
sub
push
adc
mov
sub
int
adc
mov
mov
add
jp
lcall
mov
jne
fs
subl
addr16
xchg
xor
push
xchg
hlt
xor
mov
mov
mov
xor
pop
mov
sub
sti
clc
dec
add
sbb
in
mov
std
add
clc
push
sub
add
lds
sbb
dec
gs
sbb
dec
cs
mov
add
repnz
es
jg
mov
fstpt
mov
imul
push
test
sub
or
rorb
imul
in
test
xchg
cld
cs
loopne
sub
sub
sbb
icebp
jo
imul
mov
dec
jp
mov
cmpsl
dec
ror
dec
loopne
and
es
js
adc
xor
sbb
pop
ficoms
jne
lahf
fdivrs
dec
push
cmpsb
adc
shrb
dec
lods
mov
int3
add
adc
inc
imul
out
push
mov
pusha
mov
and
outsl
icebp
pop
push
pop
pop
fiadds
jb
imul
xchg
add
fstpt
fcomp
test
into
jbe
shrl
outsl
js
xchg
adc
jecxz
cli
insb
cltd
jmp
movsl
movsb
mov
js
mov
movsl
dec
dec
stos
mov
mov
push
xchg
dec
pop
inc
cmp
dec
pusha
mov
lock
lds
push
arpl
pop
pop
xchg
bswap
aaa
outsb
inc
fstpt
add
sar
cmp
pop
jb
in
push
hlt
je
fidivl
jae
pop
or
push
imul
push
xchg
aaa
iret
stc
lea
lds
sub
mov
gs
cli
jecxz
or
sub
xchg
push
mov
pop
xor
xchg
mov
mov
int
stos
or
jle
shrl
sarl
pushf
sub
out
mov
cwtl
sti
jnp
fiadds
cmp
xchg
cmp
ljmp
test
and
dec
jns
fists
mov
adc
and
testl
sbb
inc
xorb
inc
leave
jae
xor
jg
push
jmp
adc
adc
and
lds
cltd
dec
ret
frstor
fcomps
fstpt
shl
jne
nop
int
inc
lcall
movsb
test
xor
repnz
dec
cmp
adc
js
sbb
mov
dec
shll
fiaddl
mov
or
mov
lods
dec
add
insl
jo
cmp
push
dec
mov
push
scas
imul
pop
push
lods
adc
add
push
jecxz
out
ljmp
out
mov
leave
cmp
adc
mov
cmp
arpl
mov
push
movsb
mov
add
xor
dec
dec
pop
outsl
dec
fmulp
mov
inc
popf
daa
popf
mov
sub
jecxz
cwtl
lea
rol
dec
lods
cs
jecxz
fidivrl
xchg
adc
loope
and
sarl
xor
scas
mov
fldl
repz
mov
in
jge
jmp
test
sbb
xorl
adcb
xchg
mov
jmp
sub
adc
xor
sbb
shll
lea
stos
or
hlt
cmp
push
xor
adc
std
mov
inc
fbstp
int
je
pop
es
fs
je
xor
andb
xor
xor
pop
aad
mov
jle
insb
xchg
mov
sub
dec
mov
cmp
inc
xor
pop
pop
mov
subl
out
rcr
and
adc
mov
pop
fsub
lods
add
xchg
adc
scas
test
lcall
repz
add
popa
pop
in
sub
sbb
pop
xor
pop
dec
shr
mov
inc
mov
rclb
addr16
sub
test
xchg
mov
or
xlat
or
loop
sbb
jle
fsub
xchg
das
dec
cmp
sbb
pop
or
mov
das
jno
aaa
sahf
push
or
mov
xor
jae
and
lods
sub
sti
cs
push
mov
out
int3
jmp
mov
test
popf
sbbl
popf
out
in
adc
mov
xchg
add
xlat
ds
push
ror
pop
lods
xlat
fsts
push
sbb
aam
cmp
ret
into
pop
test
adc
mov
inc
arpl
in
fwait
mov
adc
lcall
jle
std
rorb
mov
iret
jo
jge
jp
pop
movsl
clc
ret
int3
pop
idivl
and
push
xor
push
cmp
jae
cwtl
enter
inc
jnp
jno
push
jno
push
and
xor
dec
xorb
mov
loope
aad
xchg
std
loopne
xchg
shr
int
cmpsl
repz
dec
xchg
add
insb
add
insb
add
pop
sub
sub
dec
pop
cmp
mov
pop
inc
adc
ja
loop
sbb
cltd
pop
mov
mov
mov
imulb
add
and
pop
xor
mov
jge
add
or
lods
sub
icebp
lock
mov
rol
test
and
mov
into
jle
mov
lods
repnz
dec
cmp
dec
adc
test
pushf
mov
daa
aas
lds
jo
js
leave
cmp
bound
mov
sbb
inc
popf
aas
jmp
pop
idivl
xor
ret
sbb
js
inc
push
sbb
pop
je,pt
cmp
iret
push
addr16
add
aam
mov
and
jg
or
shrb
dec
inc
xchg
xchg
es
and
arpl
arpl
aaa
lea
jns
popa
pop
and
insl
add
pop
cmp
dec
cmpsl
iret
fs
mov
enter
aaa
jno
inc
sbb
movsl
jne
rorl
mov
icebp
inc
jl
push
pop
jle
push
cmpsl
fdivrp
mov
jno
pop
fs
xchg
pop
mov
push
paddb
pop
mov
or
mov
mov
dec
pop
sub
shlb
or
inc
cld
mov
cmpsl
adc
mov
xchg
sub
adc
jmp
mov
fisttpll
mov
lock
sahf
js
push
and
cwtl
mov
ret
loopne
fsubr
rcrl
xor
mov
pop
jle
rorl
push
aad
rclb
pop
testl
inc
push
sti
jmp
cmp
push
sub
mov
xchg
in
sti
shl
add
pop
jb
out
dec
mov
ljmp
inc
in
je
jge
enter
test
xor
in
or
add
fidivl
cmp
iret
adc
or
int
test
ds
pop
pusha
jmp
fcomi
xor
jmp
jnp
xchg
pop
pushf
add
dec
icebp
mov
pop
jl
aas
push
fsubl
arpl
imul
incl
xor
pop
inc
call
shrl
testl
xchg
xchg
and
sub
mov
cmpsb
test
jmp
pop
femms
outsl
sar
out
push
fwait
pop
lea
cmp
fstpt
iret
or
inc
and
aad
aaa
and
dec
push
or
push
repz
xchg
mov
xorb
into
test
xor
xchg
jns
fistps
sbb
and
addr16
inc
hlt
dec
xchg
imul
mov
fildl
add
jp
sub
mov
xor
insb
mov
and
adc
fistps
push
add
cmc
gs
ss
loop
arpl
push
jp
mov
pop
inc
push
sbb
or
sti
stc
mov
xor
add
in
pop
rcrb
aas
sbb
out
push
jecxz
aas
iret
add
cmpsb
enter
pop
add
dec
xchg
jl
aas
out
call
jge
cli
cwtl
adc
add
rcl
mov
jmp
ja
adc
mov
in
sub
movb
xchg
inc
lret
adc
xor
pop
sub
jnp
orb
jae
ljmp
outsl
pop
add
cmp
xorb
shll
out
fcomps
popa
jp
repnz
push
filds
sub
adc
xchg
clc
push
roll
ss
std
push
add
mov
ror
outsl
and
jbe
lock
dec
pop
mov
shl
cmp
push
into
fwait
insl
push
inc
mov
cmp
int3
pusha
outsb
mov
mov
inc
lods
push
movsl
clc
and
shr
mov
repnz
scas
mov
lock
push
es
push
in
cmp
cmp
or
xchg
sub
ficompl
and
lds
push
and
adc
mov
mov
inc
or
or
push
aad
mov
adc
call
cmp
inc
and
mov
push
pop
dec
xrelease
xor
mov
pop
adc
ja
cltd
dec
and
lods
bound
mov
mov
fimull
sbb
aas
gs
mov
jbe
and
jns
add
inc
mov
or
and
cmpsb
mov
fld
push
xchg
push
mov
sti
fwait
mov
mov
and
imul
data16
push
movsl
subb
je
pop
add
shlb
mov
dec
xchg
and
scas
add
mov
sbb
inc
je
pop
pop
gs
mov
xchg
shll
cmp
cwtl
sarb
fdivs
and
mov
dec
add
pop
je
mov
xor
and
fs
stos
or
cmp
cltd
outsl
pop
clc
ja
imul
ds
fs
mov
mov
sbb
jecxz
xchg
dec
jo
out
jp
sub
pushl
shlb
adc
jb
pop
inc
imul
loopne
cltd
les
pop
dec
sub
mov
leave
pop
xchg
insb
cmp
pop
mov
imul
test
leave
dec
stos
mov
mov
mov
call
adc
orl
adc
arpl
cs
mov
push
scas
jns
stos
jge
jecxz
xchg
pop
out
mov
mov
xorb
push
out
jo
scas
es
aam
or
clc
daa
lods
push
flds
inc
iret
xchg
or
sub
jbe
xchg
js
lock
int3
xchg
iret
ljmp
cmp
cmp
or
ret
dec
imul
subl
add
pop
out
loope
xchg
push
imul
cli
mov
cmp
ss
dec
adc
mov
sub
mov
or
es
or
clc
push
push
shlb
mov
ret
in
ja
mov
push
loop
mov
scas
adc
arpl
adc
jb,pn
fstpl
adc
xchg
lret
jne
fs
jmp
mov
dec
jmp
and
ds
fdivr
pop
ror
push
jo
jle
push
out
cmpsl
inc
sub
in
mov
hlt
mov
mov
mov
out
test
das
outsb
loopne
scas
gs
xchg
xor
xchg
shrl
pop
or
imul
pop
lea
out
mov
adc
xchg
pop
adc
mov
cs
adc
push
fisubs
movsl
popl
dec
nop
push
test
fcoml
stos
xor
pop
adc
mov
cltd
shrb
xchg
xchg
mov
int
cmp
mov
daa
fidivrl
call
js
mov
push
orl
cwtl
xor
dec
add
faddl
fdivrs
cltd
outsb
movsl
notb
movsb
jns
xchg
repz
mov
mov
stos
nop
add
shrl
cltd
mov
cmpsl
sarl
inc
jle
mov
pop
in
mov
dec
mov
sbb
add
jns
sub
das
nop
outsb
xor
iret
ret
addb
arpl
stos
movsb
mov
xor
inc
mov
les
ffree
bound
out
xor
cmp
pusha
rcll
ret
cmp
pusha
add
jmp
add
push
jge
gs
inc
xor
push
loopne
dec
imul
sti
test
jge
jmp
xor
clc
insb
rorb
pop
lods
cs
mov
cmc
in
push
loopne
pop
ja
jl
mov
mov
les
arpl
add
dec
int3
xchg
pop
sub
in
sti
jns
fwait
aas
inc
lcall
idiv
xor
lock
push
xchg
call
pop
in
xor
mov
or
test
mov
pop
cltd
jmp
insb
shl
cmp
fsubl
xchg
pop
ficomps
leave
pop
jb
cmpl
pusha
lcall
mov
mov
xchg
mov
push
gs
sub
mov
ss
cmp
adc
push
movsl
iret
mov
notb
fidivs
inc
cltd
or
fimuls
ds
mov
lret
ret
dec
repz
adc
jae
mov
or
sbb
cwtl
jp
jg
dec
mov
stc
shrb
dec
cld
cmp
adc
sbb
idivb
mov
fs
adc
lods
pushl
cmpsb
insl
cmp
xchg
stc
out
testl
iret
jb
xchg
int
popa
or
xchg
or
jnp
loope
loop
pop
fbld
notb
stos
cmp
scas
dec
push
imul
mov
pop
adc
lods
or
mov
in
jl
loope
outsb
cwtl
dec
sbb
xor
mov
push
adcb
pop
mov
jo
sub
pusha
addr16
icebp
ds
add
adc
fldt
std
rcr
xor
insb
push
insb
adc
sti
sub
rep
nop
cmp
xlat
sbb
mov
cmp
ja
cs
jnp
lds
xor
test
dec
xor
pop
shl
les
aas
sub
xlat
lods
mov
mov
and
aad
fcmovb
adc
cltd
mov
or
out
paddusw
mov
xor
mov
sti
or
jle
faddp
ja
insb
xor
mov
sti
or
fcmove
push
adc
adc
movsl
inc
outsb
jns
fnstcw
or
sub
xchg
jmp
jle
js
and
cmp
mov
push
cltd
ret
jno
enter
xor
inc
push
iret
aam
imul
fnstcw
or
sub
sarl
into
mov
arpl
push
jge
loope
loop
shll
fnsave
push
push
ss
xor
outsl
testb
scas
jecxz
jae
data16
outsl
orl
pop
mov
ljmp
xorl
in
in
neg
and
sub
mov
call
cld
in
sub
or
lret
imul
cmpsb
stos
leave
cmp
mov
outsl
cmpsb
xor
sar
jge
in
cmpb
outsl
cmc
popa
xchg
popf
out
fisubl
jp
inc
add
sti
js
iret
filds
sbb
outsb
pop
mov
enter
and
pop
pushf
cmpsb
xchg
int3
adc
pop
mov
in
mov
fadds
aaa
js
imul
inc
shrb
je
adc
push
cmpsl
int3
add
inc
insl
jmp
int
jecxz
inc
sbb
cs
sbb
xor
sbb
sub
dec
cmc
inc
movsl
leave
fs
add
fisubrs
repnz
jae
pop
test
loop
mov
xor
xchg
out
mov
subb
lock
add
lea
mov
cmp
push
jb
call
movsl
adc
fwait
mov
xchg
or
xlat
add
outsl
fisubl
sub
xchg
notl
jle
cmp
repnz
jns
stc
imul
popf
pusha
and
das
js
xchg
test
jnp
lock
pavgw
dec
adc
adc
pop
les
les
cmp
cmp
or
xor
test
std
nop
pop
fldt
sub
sub
jp
push
sarl
jl
and
mov
cwtl
cld
lcall
push
jl
daa
stc
jae
das
leave
pop
imul
rorl
and
rorb
daa
out
rcll
in
add
jecxz
sbb
pusha
std
cmp
dec
in
daa
or
mov
rcrb
sbb
sti
in
ljmp
jmp
movsl
add
inc
cli
popf
lret
adc
push
arpl
or
sub
push
mov
icebp
dec
xchg
in
adc
xchg
lcall
jecxz
mov
mov
adc
mov
sbb
aam
xor
rorl
push
gs
dec
dec
xor
jns
pop
ja
mov
xor
or
cs
in
je
jnp
popa
cmp
les
dec
repnz
repz
jp
dec
cmp
fisubl
pushf
mov
adc
sub
lahf
adc
adc
jne
push
andl
sbb
push
movsb
daa
out
mov
pushf
sahf
scas
inc
arpl
push
nop
xorb
lods
clc
mov
out
je
scas
ja
nop
mov
jmp
stc
fidivl
or
scas
lods
mov
adc
mov
pop
fnstenv
or
mov
push
sub
mov
sub
jo
jmp
jne
jp
cmc
mov
dec
and
cmp
jns
push
jae
rcl
sbb
pop
clc
pop
fisttpl
mov
leave
pop
pop
fisubrs
mov
sub
in
fisubs
ljmp
dec
mov
xchg
fiadds
call
and
mov
nop
int
rcrl
xchg
mov
notl
mov
enter
push
fs
fcom
adc
sbb
pop
pop
repnz
add
jae
and
das
push
lcall
pop
xchg
stos
pop
fnstcw
mov
nop
stos
fdiv
in
mov
xchg
xchg
mov
fiaddl
movsl
mov
xchg
add
fsubrl
bound
cmpsl
hlt
sub
inc
mov
lcall
cwtl
jnp
ret
outsl
pop
addr16
loopne
and
gs
imul
addl
test
and
add
push
sub
pop
fwait
imul
adc
movsb
jns
dec
mov
movsb
push
xchg
mov
and
gs
jne
sub
inc
test
out
stc
cs
popf
and
stos
cmpsl
add
fwait
shl
lcall
gs
mov
jecxz
les
jp
movsl
xorl
ret
push
add
into
or
jl
and
dec
test
sbb
cmpsl
push
testb
mov
add
movsl
inc
ret
loopne
out
sub
or
cwtl
inc
and
es
pop
call
jg
daa
call
mov
lahf
cmpsb
mov
loopne
call
mov
rcrl
jmp
pop
ret
pop
int
and
push
in
les
mov
mov
aas
imul
pop
sahf
add
jnp
xor
gs
dec
dec
test
cmpsl
xlat
lahf
lds
xchg
mov
aad
jecxz
lcall
or
dec
add
adc
jnp
xchg
inc
in
ljmp
and
jno
dec
rolb
pop
repnz
push
and
mov
subb
test
jo
jae
stc
in
cmpsb
pop
clc
jb
loope
mov
pop
lret
movsl
ljmp
adc
mov
loop
into
or
push
dec
inc
dec
add
in
mov
jbe
adc
icebp
lds
pop
mov
arpl
test
in
aas
push
icebp
xchg
fwait
xlat
and
cmp
lods
jb
adc
cmp
inc
stc
or
in
push
jno
push
sub
lds
shll
call
or
aam
mov
cwtl
fwait
and
nop
movsl
ret
mov
sub
repz
mov
icebp
inc
fsubrl
cli
ret
or
mov
sti
or
loope
add
ljmp
sahf
lcall
aaa
daa
dec
xchg
ds
stos
jb
cmp
les
das
cmp
push
inc
mov
mov
pusha
pop
nop
and
mov
adc
add
mov
push
xchg
mov
out
aam
ds
push
xor
loop
mov
cmp
sub
mov
or
cmp
rorb
fisubrs
pandn
sbb
out
mov
mov
xlat
hlt
scas
fld
pop
cmp
popa
mov
repnz
push
mov
fdivrs
push
adc
out
enter
cmc
inc
cld
imul
bound
lods
jp
cmpb
push
sahf
dec
daa
xor
aaa
into
int3
inc
mov
cmp
mov
adc
add
pop
mov
push
arpl
xor
scas
incl
pop
je
adc
and
add
push
fidivrs
push
jbe
sub
out
mov
mov
xchg
lods
cmpsb
jge
repz
xchg
aad
pushf
dec
mov
add
jns
ds
repnz
ret
xor
hlt
sub
cli
mov
cmp
clc
scas
int3
xchg
ret
cmc
xor
pop
push
fs
popf
repz
lcall
pop
jae
ss
loopw
inc
push
shl
xchg
xchg
ja
pop
fcoml
dec
daa
push
mov
pop
ja
add
jl
out
fsub
push
dec
mov
dec
jne
mov
std
mov
cmp
cmpsb
stos
or
mov
or
shl
ss
lret
test
cli
add
loop
ret
stos
jne
or
int3
mov
sub
or
data16
pop
mov
jnp
test
mov
cmpsb
aas
pop
sbb
xor
es
mov
mov
fsubs
mov
out
test
xor
fcmovne
das
mov
cmpsb
clc
and
arpl
jecxz
ja
aas
adc
push
loope
aam
inc
push
aaa
or
push
mov
jecxz
jp
lods
std
in
punpckhbw
sub
adc
xchg
fwait
and
pop
movsb
ficoms
sahf
rclb
int
rcrl
sarl
inc
adc
sti
inc
pusha
sbb
mov
pop
test
test
adc
clc
pop
test
pop
lahf
jp
jl
push
cmp
mov
mov
jl
mov
sub
push
sbb
jl
add
push
loope
dec
dec
cmp
or
out
sub
fs
in
cmpb
lods
fwait
xor
push
pop
pop
cs
mov
xor
jb
dec
rcll
sarb
outsb
mov
adc
add
xchg
mov
ret
or
imul
outsl
push
scas
mov
push
fisubrs
in
out
sahf
cmp
push
jb
mov
popf
sbb
movl
pushf
pop
es
out
push
lahf
loope
pop
or
xor
iret
and
jbe
call
push
movsb
mov
aas
push
lret
movsl
mov
pop
repnz
in
adc
adc
dec
fmuls
dec
sub
xor
jecxz
cmpsl
imul
mov
mov
ret
popa
add
adc
testl
ss
pop
test
clc
pop
mov
in
dec
mov
mov
pusha
mov
jno
roll
push
dec
xchg
call
lret
push
mov
push
jnp
inc
mov
cmpsb
xchg
movsb
je
cld
aam
push
jno
out
pop
mov
movl
inc
and
dec
dec
jno
sbb
dec
add
inc
test
xchg
mov
ret
xor
inc
adc
ficoml
pop
cmp
cmpsb
xor
mov
sbb
adc
jp
out
out
sbb
call
gs
push
pusha
and
jo
dec
mov
sub
push
iret
adc
jns
pop
push
or
test
sarl
or
or
xchg
aas
ret
jl
pop
arpl
cltd
dec
aam
loope
in
leave
mov
inc
xor
sub
jae
roll
sub
xchg
gs
nop
icebp
jmp
pop
sahf
imulb
adc
inc
loope
sahf
push
cmp
pop
fisttpl
scas
xchg
adc
lods
mov
and
inc
out
lahf
loope
or
inc
jmp
rcll
mov
inc
popf
aas
push
ret
call
jae
add
repnz
inc
add
pop
mov
std
push
adc
popf
xchg
into
fsin
ret
mov
dec
movb
sub
subl
adc
and
sbb
and
mov
shll
sub
lea
out
and
cmp
gs
xlat
lret
xor
rorl
mov
mov
mov
and
pop
push
sub
icebp
cmpsb
pop
mov
loop
and
mov
hlt
pop
inc
xor
adc
fsub
aad
stos
mov
adc
shlb
inc
out
and
or
mov
aad
jns
xor
inc
int
bound
mov
dec
xchg
lret
punpckhwd
jae
test
shrl
pop
sbb
sub
ret
in
sbb
push
in
mov
sbb
mov
lea
dec
mov
pop
push
lds
xchg
jbe
cmpsl
insb
test
sbb
mov
xlat
push
and
out
popf
cli
enter
pop
lods
mov
push
test
js
mov
mov
xchg
dec
pop
or
mov
adc
xchg
mov
sub
ret
out
pop
mov
pop
dec
call
adc
push
cld
mov
add
pop
mov
jl
enter
call
pop
xorl
daa
inc
andb
mov
fwait
adc
sti
into
mov
jmp
push
jb
or
loopne
das
in
xchg
jg
aad
enter
aaa
jne
mov
inc
jle
cmp
imul
movsb
aad
loope
mov
ljmp
mov
roll
mov
xchg
adc
xlat
testb
xor
mov
stos
test
push
dec
push
out
xchg
or
pop
pop
mov
cltd
cmp
cmp
push
xlat
ds
push
nop
push
mov
adc
ljmp
rclb
push
inc
ficompl
movsb
jmp
ret
and
repnz
test
lret
xchg
xchg
in
xor
inc
pop
rcll
mov
js
ja
cs
cmp
inc
inc
scas
lahf
mov
mov
inc
sbb
inc
icebp
push
jmp
ljmp
dec
xchg
add
jo
push
sub
or
push
aad
mov
push
ret
test
das
add
mov
ret
cmpsl
jle
mov
das
cmc
mov
nop
dec
push
and
in
add
aam
push
mov
mov
icebp
mov
jbe
pusha
dec
iret
xchg
enter
lds
push
aaa
sub
add
nop
mov
mov
mov
sti
inc
fiadds
stc
adc
rcrb
pushl
dec
push
add
dec
aaa
shlb
stc
jp
std
das
int3
iret
sar
sub
xlat
cmp
cmp
adc
aam
dec
lahf
sbb
pushf
sbb
bound
push
xchg
imul
add
dec
sub
jp
xchg
and
cmp
mov
jmp
add
sbb
inc
loop
cmp
push
addr16
cli
cmc
cwtl
xchg
dec
enter
lret
int
scas
or
or
rolb
mov
sbb
jae
jb
pop
lret
lret
ja
icebp
lahf
jp
imul
rcll
hlt
cltd
test
negb
push
or
jmp
aad
or
dec
jnp
push
daa
inc
cmp
ljmp
out
push
fcmovbe
ds
rcr
out
jo
pop
sub
and
push
sub
pop
stos
and
lods
sub
jg
pop
cwtl
mul
pop
jmp
mov
inc
clc
mov
int
add
xorb
cmp
inc
mov
cmp
sbb
lret
adc
mov
in
or
popf
mov
gs
imul
std
ficoml
adc
xchg
push
in
inc
hlt
cmpl
mov
lret
das
pop
cs
in
mov
iretw
lds
insl
dec
mov
and
xor
xchg
push
pusha
fcoms
in
shrl
inc
out
insl
enter
sub
popf
dec
mov
push
push
adc
add
test
adcb
out
pop
push
sti
out
or
dec
sub
les
xor
sbb
test
mov
cltd
stos
cmpl
movsl
out
push
cmp
jae
pop
add
pushf
mov
push
mov
add
aaa
push
cmp
outsl
mov
test
mov
dec
int3
xor
and
in
test
dec
test
push
vpcmpgtd
jp
lods
fistps
stos
jbe
mov
mov
pop
mov
or
xor
xor
dec
shll
sbb
nop
inc
sub
pop
out
add
inc
xchg
mov
fwait
int3
ss
add
loopne
popf
testl
ffreep
push
mov
or
pop
push
sbbl
lcall
lret
or
inc
add
adc
test
loope
xchg
and
jns
push
cs
jmp
in
lcall
sub
or
fcomps
cmp
outsl
or
sbbb
pusha
and
jb
pop
daa
addr16
xchg
lret
cmp
cmc
dec
sbb
lods
test
out
cld
jo
jp
or
into
scas
lahf
shll
inc
daa
xchg
dec
push
inc
hlt
pop
js
mov
cmp
sub
ror
sub
dec
neg
dec
push
and
inc
and
xchg
cmpsl
out
lahf
cmp
mov
out
push
aas
in
enter
daa
pop
xchg
xchg
sub
mov
jg
add
mov
or
test
inc
dec
jp
sub
cmpsb
int3
lcall
lret
sbb
push
inc
mov
loopne
in
mov
movsb
nop
fldt
movsb
pushw
cmc
jg
cmp
arpl
inc
dec
in
mov
inc
sbb
test
adc
les
fidivrs
inc
cmp
xor
outsl
push
pop
test
mov
test
cwtl
scas
scas
in
paddsb
fs
jbe
mov
inc
test
bound
dec
xchg
push
push
inc
dec
xchg
push
push
out
and
in
ja
inc
lock
push
popa
aam
cmp
sub
aaa
jbe
in
dec
lcall
lods
icebp
cmp
in
jp
out
fidivrl
pop
push
lcall
mov
fiaddl
bound
xchg
jns
jg
stos
mov
test
xor
inc
lahf
mov
jle
add
mov
xor
xchg
into
in
ret
cmp
cs
adc
popf
cli
call
test
mov
push
dec
insl
or
and
and
les
xchg
lds
cmpsl
and
xlat
mov
pop
push
push
bound
inc
push
pop
and
cld
test
movsb
mov
mov
jg
enter
cmp
sub
dec
mov
dec
xchg
addr16
jnp
cli
and
mov
das
outsl
cmc
insl
pushf
mov
nop
add
pop
cmc
pop
and
sbb
mov
mov
in
xchg
rol
xchg
popf
ret
add
mov
les
int3
sub
xchg
lret
arpl
mov
sar
inc
out
xchg
mov
and
lea
sbb
adc
mov
cmp
hlt
stos
mov
xchg
push
and
imul
sub
enter
sub
xchg
ja
or
adc
push
pop
sahf
jge
cmp
push
mov
jns
xchg
rclb
or
push
mov
ja
out
sbb
mov
inc
add
or
aas
or
mov
aas
pop
mov
jle
scas
mov
mov
fs
call
pop
lock
in
mov
jl
push
push
cmp
add
push
aad
adc
adc
pop
mov
loopne
jno
data16
xor
loope
stos
xchg
popf
arpl
lret
cmp
jl
inc
addl
sub
mov
mov
aas
mov
mov
sub
popa
ljmp
inc
shrl
mov
clc
fsubl
cmp
dec
and
data16
sahf
mov
xor
out
ja
inc
xchg
insb
jge
stos
dec
std
fcoms
repz
mov
xor
pushf
sbb
mov
fildl
ja
mov
sub
sbb
mov
fistl
lret
icebp
in
inc
rep
xor
aam
mov
jp
addr16
add
inc
sub
push
testl
sub
js
out
aas
dec
lahf
or
pop
lret
fnstcw
cs
int
es
push
in
out
bound
leave
mov
loope
pop
lods
iret
lret
sub
dec
xor
ljmp
sbb
dec
and
std
scas
aas
fwait
jge
fisubs
js
mov
add
jg
lods
push
push
push
xlat
sbb
shlb
mov
test
and
xchg
fcompl
mov
test
sub
andb
aaa
das
dec
pusha
mov
ds
das
mov
inc
xchg
int
imul
inc
xor
mov
shrb
pop
mov
fwait
cmp
fistpl
mov
cmpsb
adc
out
fs
pop
mov
out
je
rorb
fisttps
sahf
xorl
std
cmp
dec
xchg
les
fdiv
jmp
out
adc
xlat
cmp
subb
xchg
clc
fisttps
imul
mov
pop
sub
call
jne
std
mov
imul
xchg
jg
loope
mov
pop
pusha
cmp
xlat
sbb
aaa
hlt
dec
push
fwait
jno
int
stos
fisttps
jbe
loope
aad
cwtl
aam
adc
xchg
fisubl
inc
jmp
loopne
mov
out
and
mov
or
and
loopne
dec
aaa
les
or
filds
jmp
and
gs
in
sbbb
mov
mov
adc
mov
repz
lcall
inc
shll
fdivrl
and
popf
push
test
sbb
jnp
call
std
sub
add
pop
rcr
aaa
sub
dec
insl
push
insl
pop
cmp
mov
push
fcoms
add
inc
push
aad
repz
nop
pop
out
test
cld
icebp
jb
and
xor
cmp
fcomps
aam
mov
aas
add
add
into
lret
jne
sbb
push
inc
mov
outsl
ret
incb
jne
cli
sbb
pop
xchg
out
xchg
shl
pop
stos
dec
mov
out
add
dec
scas
outsb
pop
pop
out
ds
stos
lods
push
push
push
inc
lretw
jl
inc
sub
test
ret
adc
and
ss
push
aam
in
jle
jge
test
push
out
xor
cmovnp
jl
popa
push
add
xor
and
lret
call
push
ljmp
adc
pop
imul
mov
negl
lcall
xchg
cli
cmpsl
and
pop
push
subb
xchg
cmc
push
arpl
mov
jne
sti
call
hlt
js
cwtl
push
sbb
movsl
inc
jle
cmp
mov
mov
mov
xor
lea
jecxz
cmpsb
inc
sbb
xor
adc
fiaddl
add
pop
aaa
add
fidivrl
fnstenv
ret
outsl
mov
aaa
je
stos
and
ret
add
iret
ljmp
push
sarb
addr16
dec
cmp
jns
push
and
pushf
sbb
mov
mov
mov
sbb
add
push
or
es
inc
stc
inc
fstpt
dec
out
orb
fdivs
xchg
mov
adc
mov
in
cwtl
push
inc
dec
inc
stos
lock
mulb
inc
outsl
lcall
lahf
repz
push
jns
jne
xor
add
inc
dec
cs
subl
mov
sti
push
jo
mov
psllw
and
outsb
shlb
jmp
test
or
mov
frstor
scas
testl
cs
mov
addl
pop
add
inc
imul
sub
jae
stos
or
push
aad
dec
mov
stos
out
and
push
mov
addr16
mov
in
enterw
mov
jne
test
sarl
add
push
rcrb
sbbb
dec
cmc
movsl
fldenv
testb
mov
popa
adc
test
push
subb
xchg
mov
xorb
repz
jp
pop
fsts
adc
ds
test
cltd
ret
jmp
xor
sub
or
cmp
dec
mov
sarl
push
cmc
and
sbbb
smsw
icebp
sbbb
int
je
out
sti
adc
push
jns
jnp
ror
aad
xchg
mov
fwait
adc
test
aam
popa
cwtl
iret
sbb
nop
mov
fbstp
insl
xchg
std
mov
rcrl
into
pop
mov
fwait
dec
stos
pop
inc
xlat
into
lret
mov
mov
lods
push
mov
jne
in
testl
cld
adc
out
sbb
repnz
jae
outsl
hlt
mov
add
dec
lahf
add
xor
mov
mov
adc
or
or
test
outsb
lret
pushl
inc
mov
shlb
int
je
bound
xor
pop
shll
mov
cmp
cmp
jl
shl
mov
xor
add
lret
pop
add
sub
cmp
xchg
xchg
pusha
sti
mov
daa
cmp
xchg
int
scas
les
aad
daa
subl
in
lea
mov
push
xchg
dec
mov
fisubrs
ret
mov
xor
cmp
out
or
push
and
idiv
nop
leave
mov
or
xchg
mov
pop
add
add
repnz
shl
lret
xchg
jae
xchg
lock
push
pop
daa
adc
pop
mov
or
mov
lods
inc
or
sbb
int3
jnp
ss
mov
dec
mov
inc
and
dec
dec
inc
popa
popf
push
pop
lods
inc
in
mov
jo
xchg
add
jae
inc
add
and
call
cmp
push
ret
adc
mov
data16
xor
mov
push
ficoms
popa
dec
testl
push
imul
iret
xchg
xchg
adc
mov
adc
fld1
add
mov
jb
sahf
ficoml
ret
and
jmp
std
push
in
in
pop
lods
dec
frstor
xchg
mov
jne
xorb
das
cmp
pop
jb
ja
jo
xchg
xor
and
cwtl
mov
and
out
pop
and
or
ss
insb
sub
xor
mov
jge
scas
dec
jp
add
sbb
ss
movsb
and
mull
cltd
outsl
cs
imul
sub
sbb
mov
adc
in
xlat
aas
fisttps
sbb
enter
je
adc
sbb
ljmp
sub
test
pop
loop
loop
xchg
and
into
cmp
xor
xlat
int3
and
inc
cmpsb
adc
push
sti
lcall
cmp
xor
cmpsb
sub
shlb
sub
sbb
or
shll
mov
dec
pop
add
inc
xor
or
push
cltd
pushl
inc
in
fstl
add
loope
mov
ret
outsl
test
or
adc
add
pop
bound
pop
test
jmp
in
sbb
not
stos
je
and
pop
dec
ss
jle
fstpl
popf
cli
and
and
sub
fs
push
inc
fadds
mov
pop
adc
add
stc
cmp
push
cmp
ss
lea
out
push
popf
imul
push
xor
scas
es
repz
in
push
inc
lret
fnstenv
xchg
or
or
or
push
mov
xor
sbb
jmp
or
mov
pushf
sub
dec
fildl
xchg
add
xchg
cmp
fistpll
xchg
add
sbb
lds
mov
adc
or
sub
es
xor
sub
icebp
jnp
arpl
sbb
sub
ret
xor
xchg
jo
xorl
jbe
lock
jnp
flds
adc
dec
or
into
pop
sbb
add
push
xchg
xor
js
pusha
push
insl
and
cmp
fsubrl
popf
loop
test
imul
cmp
pop
cmc
hlt
shll
rolw
mov
mov
jo
jl
sub
clc
mov
sub
ja
ljmp
inc
jae
sbb
adc
bound
lods
inc
mov
sahf
mov
mov
ret
in
cmpb
jo
daa
je
xchg
dec
xchg
imul
mov
int3
rcrl
dec
out
mov
inc
xchg
js
sbb
inc
popf
dec
divl
dec
popf
adc
clc
sub
ss
jl
rcrb
cmp
push
pop
repnz
dec
or
jecxz
mov
adc
mov
cmp
lea
pop
pop
mov
std
js
xchg
dec
and
push
cmc
pop
imul
and
int
adc
out
mov
movsl
imul
add
mov
mov
xor
mov
loope
sub
inc
cmp
xor
stos
inc
mov
leave
daa
addb
xor
nop
add
inc
adc
jae
xor
das
rorb
popf
stos
mov
fcmovb
mov
jno
sub
ret
jg
jo
shll
lods
inc
jg
and
mov
cmpsb
fsubr
aaa
pop
inc
outsb
cmpsl
sbb
sub
or
test
jns
stc
fdivrl
jg
enter
shlb
push
sub
lods
popa
push
aas
loop
inc
jmp
push
in
mov
xchg
clc
ds
scas
pop
xor
call
sbb
lea
sbb
xor
and
mov
or
lret
push
cmp
mov
dec
imul
rclb
std
daa
adc
je
push
js
add
imul
push
notb
sub
outsl
lods
stos
imul
mov
mov
and
inc
inc
dec
push
and
adc
jecxz
loope
and
in
mov
and
cmp
int3
pop
inc
mov
mov
or
jl
mov
nop
push
out
lods
pop
mov
sahf
in
stos
mov
lret
dec
xchg
fucomp
scas
pop
jae
inc
jne
and
hlt
repnz
xchg
cwtl
in
lods
lods
sbb
addb
and
inc
add
cwtl
push
pop
ljmp
outsb
push
push
pop
outsb
jg
mov
les
dec
out
addr16
jmp
mov
aad
into
test
jno
cmp
push
inc
sub
jle
pop
push
js
adc
ror
adc
js
and
cltd
fsubl
push
popf
inc
add
ss
imul
xchg
data16
mov
insb
inc
add
mov
aaa
push
arpl
and
push
adc
das
push
fwait
jae
stc
sbb
or
decb
add
ja
inc
stos
dec
outsl
popf
jb
xor
push
jb
sarl
shl
cs
leave
dec
stos
fmull
inc
add
dec
xor
stc
test
sbb
pushf
pop
jo
jb
mov
pop
sbb
bound
mov
xor
add
xchg
mov
dec
pop
add
push
hlt
pop
test
fdivrp
dec
adc
mov
lcall
jne
push
outsb
and
insb
cwtl
clc
pop
decl
xchg
fxch
cs
lret
jne
std
leave
ret
jo
pushl
push
bound
je
das
xor
repz
ficoml
mov
pushf
ja
or
push
fwait
mov
pushf
mov
add
ret
gs
mov
aad
mov
xchg
dec
mov
and
and
daa
jg
mov
leave
mov
pop
arpl
sub
jecxz
pand
mov
jmp
inc
mov
mov
ret
push
and
loop
cs
int
inc
enter
push
arpl
and
jecxz
or
into
push
inc
ja
cmovns
mov
divb
fwait
sahf
jmp
mov
clc
shlb
or
dec
inc
mov
push
iret
aas
loopne
mov
shll
mov
or
call
fs
mov
jge
into
test
pusha
sub
lds
js
in
fdivrs
outsb
adc
sub
inc
imul
mov
mov
in
dec
lret
sahf
pop
cld
cltd
jbe
test
out
scas
fmuls
push
fdiv
or
cmp
mov
pop
popa
cs
mov
scas
jmp
and
lret
push
fs
inc
or
push
stc
mov
push
popf
add
mov
aas
les
jnp
imul
mov
and
pop
inc
sub
mov
push
pop
adc
lds
into
jmp
jecxz
jp
pusha
shll
movsb
aas
push
into
inc
sbb
ficoml
cmpsl
ja
and
add
shl
popf
sub
cmpsl
xor
aad
lods
fidivrl
mov
scas
xchg
daa
imul
test
dec
ljmp
faddl
sub
enter
pop
jns
inc
cld
jecxz
xor
sbb
data16
cli
pusha
pop
push
insb
mov
scas
clc
lcall
mov
pop
out
sbb
mov
test
pusha
add
lret
lret
into
jns
jecxz
mov
fildl
in
rol
or
and
mov
movsb
mull
dec
push
sub
mov
mov
cmp
and
mov
call
dec
cmpsb
repz
lods
out
pop
fcmove
mov
mov
out
mov
push
ljmp
fisubl
inc
pop
imul
sub
jle
pop
jg
int
jle
fsub
xor
arpl
or
pop
sbb
inc
in
loope
xchg
nop
jno
fbld
dec
mov
cmp
xlat
pop
mov
mov
lea
popf
add
lods
or
fmulp
mov
je
xor
jae
and
fidivs
sub
mov
int3
cmp
test
test
jbe
ljmp
sbb
adcb
pop
pop
int3
and
xor
inc
inc
mov
loopne
or
enter
mov
dec
arpl
test
adc
xchg
push
js
inc
sarb
pop
sub
xor
lods
mov
mov
nop
out
dec
sub
int
jecxz
test
xchg
jae
popf
stc
mov
adc
or
pop
arpl
iret
jnp
ficoml
aaa
out
push
xchg
ss
lret
movsl
sbb
mov
outsb
dec
and
imul
jge
aad
or
scas
or
xchg
es
xchg
movsb
cmpsl
es
daa
mov
fdivrs
adc
pop
add
lods
xlat
xor
mov
push
in
pushf
xchg
aas
adc
xor
sbb
mov
xor
sahf
in
pop
sub
cmp
stos
cld
cmp
cmp
nop
cmc
cmp
xchg
and
fsubrl
inc
xchg
fdivrs
pop
add
cmpsl
cmp
mov
jo
mov
push
pusha
sbb
jmp
pop
pop
inc
sub
ror
xchg
or
dec
stc
sub
inc
dec
leave
adc
aad
adc
outsb
add
rorl
push
int3
add
jo
sti
adc
gs
idivl
mov
arpl
dec
pop
insl
mov
pop
mov
imul
lcall
sbb
pop
inc
xlat
inc
and
sarb
shll
jle
push
fnstcw
dec
sub
jno
ret
xor
fistpll
testl
sbb
sbb
pop
repnz
dec
js
mov
ja
mov
xor
add
jp
popa
ret
adc
fldl
adc
cmp
ss
xlat
jno
shlb
xchg
pop
jmp
test
ret
scas
aad
or
lock
cmpsl
mov
xor
cmpsl
push
sbb
aad
xchg
add
test
bound
and
and
adc
xor
mov
mov
push
stc
fwait
cmp
push
adc
or
mov
sbbb
popa
sbb
mov
pop
pop
xor
lahf
stos
sbb
adc
ss
ret
push
lret
sub
pop
mov
mov
fnsave
mov
pop
arpl
xor
pop
fimuls
jae
sbb
mov
or
mov
sbbl
push
sbb
ret
mov
add
xchg
lahf
and
pop
fbld
daa
stos
sbb
push
pop
daa
int
mov
sbb
inc
stc
adc
pop
lea
xor
and
aam
popf
sub
add
xor
dec
in
daa
jne
pop
iret
xor
int3
mov
sub
sbb
cli
pop
mov
or
inc
jo
gs
lods
inc
push
lds
inc
pop
sub
hlt
inc
sub
or
lcall
lea
and
add
pop
aad
pop
ja
or
adc
push
adc
out
mov
mov
gs
mov
aad
inc
dec
push
adc
push
lods
mov
test
cmp
push
test
xor
jmp
shll
adc
mov
gs
dec
paddb
or
mov
mov
inc
ret
and
cmp
repnz
jnp
les
ret
filds
pop
inc
dec
push
jbe
pop
fnstcw
mov
adc
dec
pop
inc
mov
loopne
es
inc
rorb
dec
stc
xchg
imul
fwait
push
pusha
cltd
or
sti
shll
cmc
mov
aaa
daa
call
or
push
jo
in
xchg
xchg
int
jno
xchg
orl
js
jl
pop
lock
ds
nop
xor
sarb
setl
mov
ret
aam
icebp
push
std
dec
mov
insl
jns
inc
test
sti
scas
dec
xchg
pop
jle
mov
xor
in
repz
mov
std
mov
adc
lods
xchg
es
test
test
test
addr16
fisttps
cmp
loope
add
add
lods
mov
fdiv
daa
push
mov
mov
inc
stc
mov
cli
cmpb
in
into
negb
cmpb
iret
pop
cmp
mov
lods
adc
aas
insl
xchg
xchg
in
sarl
arpl
sub
jge
lods
test
adc
lcall
mov
lods
jg
leave
push
decb
add
sub
out
mov
int
sbb
ret
and
lcall
lretw
ret
shlb
adcl
add
sbb
std
add
dec
push
pop
pop
mov
arpl
or
or
cmpl
pusha
fsubs
shlb
jge
dec
in
inc
inc
push
inc
int
push
and
icebp
cld
ss
lret
add
popl
sarl
dec
mov
and
fisubrs
pop
and
dec
loop
in
mov
daa
jmp
push
sub
pop
add
movsb
pop
push
push
cmp
jge
fadds
loopne
mov
bound
or
sbb
push
sub
xchg
pop
mov
dec
lcall
imul
mov
xchg
pop
adc
das
push
pusha
sub
mov
cmp
ja
mov
lret
inc
in
jb
pop
push
and
mov
xor
pusha
jb
lods
call
lods
jns
push
shrl
jns
cmpsb
aam
icebp
mov
jmp
jle
sub
jp
push
pop
jnp
push
xor
outsl
xchg
mov
and
movsl
je
arpl
mov
sub
or
mov
xor
push
and
dec
int
or
adc
out
adc
lock
pop
and
call
xchg
mov
inc
pop
sti
xchg
mov
rcrb
popf
add
pop
cmp
dec
mov
push
or
jno
jae
shrb
push
add
pop
and
insl
addr16
test
mov
adcl
hlt
je
ror
jne
outsb
mov
mov
addl
mov
cmp
enter
or
mov
cmp
cwtl
iret
call
push
test
lods
pop
mov
int
icebp
push
fistps
add
xchg
outsl
jp
in
xchg
scas
stos
push
or
xor
rclb
xchg
outsl
adc
rolb
push
stos
frstor
ret
or
jmp
pop
push
cmp
and
xchg
addb
test
es
push
pop
imul
mov
mov
clc
sarl
jbe
cmpsb
mov
fwait
lahf
jmp
fidivl
aaa
adc
push
fld1
fnstenv
fimuls
fsubrp
test
lahf
shl
xchg
mov
sub
nop
test
fldl
adcl
insb
andb
pop
into
pop
mov
mov
pop
jno
scas
out
mov
or
sbb
jmp
movsl
and
test
lahf
mov
jl
sbb
in
outsl
sbb
push
addr16
rorl
xchg
mov
xchg
mov
sbb
xorl
sbb
cmp
push
imul
fstpt
push
ljmp
xor
push
mov
xor
out
mov
pop
int3
push
mov
nop
xorb
mov
pop
int
adc
fsubrs
imul
sti
test
adc
jno
sbb
inc
lea
orb
pop
push
sbb
mov
add
outsb
gs
aaa
push
push
adc
jb
mov
insb
dec
idivl
fwait
mov
inc
lea
xlat
mov
adc
and
inc
out
js
daa
lods
stos
pop
jp
push
dec
les
test
test
aaa
sbb
push
imul
adc
notb
or
xor
sub
data16
and
ss
cs
repnz
push
std
pop
sbb
sub
std
push
or
pushf
and
gs
pop
addb
jge
mov
stos
mov
lods
testl
pop
adc
and
pop
jge
lods
icebp
dec
lods
scas
repnz
mov
aad
fs
orl
and
and
mov
sti
cwtl
cmp
push
and
movsl
push
and
mov
mov
fistl
xor
lds
inc
adc
insl
mov
out
pop
sbb
fidivl
jle
fs
mov
repnz
shlb
jb
mov
sub
in
or
push
popf
sub
lahf
adc
pop
fnstcw
repnz
xchg
add
lret
stos
orb
pop
daa
test
je
fcomp
out
shll
cmp
adc
incb
pop
and
addr16
popf
adc
dec
and
add
scas
cmp
jge
mov
sbb
and
xchg
push
dec
jg
cs
cmp
aad
mov
icebp
mov
nop
push
cmp
pop
out
popf
cmp
cmp
xchg
outsb
xlat
in
enter
jo
rcl
pop
dec
ss
cmp
jg
mov
hlt
sahf
pop
push
push
fisttpl
lods
mov
dec
jg
scas
dec
mov
stc
push
movsb
inc
jl
jecxz
jnp
push
add
gs
imul
sahf
ret
jl
cmpsl
mov
pop
sbb
call
cmp
xabort
and
outsb
aam
mov
mov
jno
push
int3
xchg
icebp
jae
and
pop
mov
inc
inc
ficoms
mov
test
adc
xchg
inc
test
jl
or
sbb
movsl
jl
and
dec
aaa
jno
mov
adcb
jne
mov
xchg
mov
dec
push
push
xchg
adc
lods
dec
stos
sahf
mov
popf
xor
lods
js
mov
lock
xlat
into
sub
hlt
mov
jmp
jge
and
xchg
cwtl
icebp
push
mov
xor
mov
add
out
insl
sub
jno
rcr
out
push
call
cwtl
fcmovnb
fnstcw
iret
sbb
in
nop
cs
ret
add
jmp
nop
test
pop
add
clc
je
mov
jb
push
mov
fcomps
xorb
sub
pop
js
cli
cmc
lds
sbb
adc
mov
scas
mov
push
les
inc
add
add
sub
imul
xchg
les
pop
repz
mov
mov
dec
or
arpl
cwtl
xchg
mov
push
push
iret
mov
arpl
adc
cmpl
cmpb
roll
adc
sbb
pusha
cmp
ljmp
fs
stc
pop
sub
sub
pop
dec
cltd
sbb
or
xchg
bound
inc
adc
or
enter
push
mov
pop
adc
std
call
mov
stc
loop
ret
sbb
into
mov
and
pop
mov
pop
loop
cwtl
setne
sub
dec
fildl
pop
cwtl
hlt
mov
gs
fstps
aaa
enter
pop
je
adc
xlat
inc
mov
pop
ret
jo
jmp
aad
ret
pushf
mov
mov
addr16
outsb
inc
push
mov
hlt
arpl
cmp
inc
rolb
dec
sbb
ds
divb
test
es
jecxz
loope
ret
add
rorb
and
cmp
pop
test
fcoml
fs
sbb
out
pop
adc
sub
cmp
mov
xor
xor
gs
das
out
jmp
add
xor
ret
fcmovb
ljmp
loopne
jl
and
jno
out
add
mov
cmp
je
push
sbb
jp
push
mov
sub
dec
inc
out
jb
xor
cmp
adc
mov
jmp
fs
test
shll
or
pop
xor
push
mov
mov
adc
push
sbb
mov
and
sub
jae,pn
gs
xor
cmp
mov
mov
leave
mov
lods
roll
mov
xchg
shrb
ljmp
cmp
cs
xchg
xchg
hlt
jo
mov
adc
lahf
orb
fsubr
es
xor
push
sbb
pop
lods
jp
jnp
pop
xchg
loope
in
xchg
add
pop
sbb
ffreep
or
adc
jne
and
std
out
lret
and
add
int3
cmpsb
lock
inc
lds
js
mov
dec
pop
push
shlb
jns
mov
pop
cmc
xlat
iret
out
repz
leave
add
push
mov
jmp
andb
cmp
idivb
jne
inc
lret
xor
es
xchg
fwait
xor
aas
mov
inc
fcom
lcall
repnz
test
push
ret
mov
loopne
data16
and
cmp
imul
pop
xor
lahf
adc
xchg
js
adc
push
pop
jno
lea
stc
pop
push
loopne
push
push
sti
mov
pop
adc
push
cld
clc
ja
in
fiadds
sbb
es
mov
xor
mov
aam
adc
push
and
xchg
int3
sti
push
fiadds
cmpsb
or
out
in
sti
or
dec
shufps
jmp
or
mov
or
push
xchg
fdivl
sti
ljmp
dec
stc
lods
lods
add
lea
inc
lock
pop
mov
fisubrs
jns
push
lds
loope
pop
pop
or
fnstenv
scas
pop
mov
mov
jecxz
cmpl
xchg
fiadds
pusha
sti
js
mov
outsl
andb
pop
aaa
push
ja
mov
inc
imull
pop
sub
or
ljmp
pop
sub
sbb
outsl
add
rcll
hlt
in
mulb
pop
cld
loop
dec
adc
lea
int3
add
dec
pop
loope
test
data16
scas
push
inc
out
lahf
inc
push
mov
or
mov
enter
test
frstor
xor
pop
adc
icebp
mov
pop
xor
dec
xchg
xchg
or
shlb
orl
into
clc
leave
test
ds
pop
xor
push
lds
lcall
inc
push
jg
sbb
sub
cmpsl
nop
sub
xchg
jmp
sbb
rorl
inc
cmp
enter
jbe
out
ss
push
mov
pop
and
sti
pop
or
test
xchg
mov
cmpsb
pop
btc
xor
cmpsl
pop
mov
pop
les
mov
jbe
jns
dec
ret
push
sbb
cmp
das
xchg
repnz
xor
pop
or
cmpsl
int3
lods
neg
loopne
jnp
dec
test
jno
jecxz
and
sbb
and
negl
push
mov
dec
dec
test
je
adc
or
mov
pusha
add
aas
add
neg
pop
mov
mov
int
popa
jns
in
adc
mov
xchg
cmp
jecxz
je
jg
cmp
test
inc
ljmp
clc
cltd
inc
sub
loope
jbe,pn
lea
sbb
push
lret
das
mov
xchg
loop
cltd
xchg
cmp
in
into
pop
cmpsb
in
xor
imul
or
adcb
test
sbb
int
mov
cmp
sahf
loope
ret
outsb
int
imul
jno,pn
shll
mov
sbb
in
scas
jg
inc
imul
mov
pop
aam
ficompl
fimull
jecxz
pop
daa
imul
call
fwait
rolb
shlb
xchg
dec
pop
add
or
push
and
mov
push
jp
sbb
sub
lods
inc
pop
xor
pop
mov
mov
mov
push
test
jae
incb
shl
dec
jmp
mov
inc
pop
ret
pop
mov
rcl
fistpll
mov
mov
jl
nop
movl
faddl
inc
sbb
stos
jecxz
lods
or
js
mov
jmp
int3
dec
ss
cmp
data16
jno
dec
jl
cli
pop
in
inc
fisubl
and
and
movl
dec
mov
pusha
fadds
mov
aam
dec
pushf
xchg
fists
insb
repnz
ss
les
cmc
xlat
icebp
xchg
push
mov
xlat
push
js
rcrb
push
push
jo
push
pop
sub
int
push
jno
cmpsl
inc
cmp
xchg
jno
outsb
jle
lea
sbb
mov
jl
in
shrl
stos
sti
and
sbb
pop
sbbl
js
mov
das
inc
mov
enter
lods
xchg
mov
pusha
xor
loope
movsb
jo
push
popa
int
adc
leave
cmp
fisttpll
sti
and
mov
sahf
jnp
leave
cmp
pusha
leave
into
das
test
stos
fnsave
dec
pop
jmp
push
jns
push
sbb
adc
fcoml
xchg
mov
mov
and
dec
dec
int3
xor
and
decl
inc
sub
dec
push
arpl
lods
sbb
sbb
add
rorb
sbb
testl
or
adcl
add
and
pusha
xchg
fiadds
fisttps
mov
push
add
add
repz
pop
push
jns
iret
xor
push
sbb
mov
jg,pn
aad
mov
subb
lea
fnsave
pop
cmp
iret
stc
dec
sub
nop
out
das
bound
cmc
push
cmc
aam
cld
in
data16
mov
fsubrs
in
jae
xchg
andb
push
and
inc
mov
sub
add
andb
push
dec
aaa
xchg
or
cmp
cld
leave
js
fwait
mov
mov
mov
ja
lret
xchg
jnp
out
inc
push
sbb
add
jb
pop
shll
add
jge
cmp
lcall
ficomps
or
add
cmp
xchg
hlt
fdivrl
sti
add
pop
cmpsl
cmpsb
aas
xlat
xlat
or
aad
sub
adc
mov
data16
add
in
arpl
push
inc
push
orb
mov
pop
add
rcrl
sub
pop
cmp
push
mov
jg
mov
push
scas
add
xlat
clc
mov
scas
xor
cmc
inc
pop
ret
and
mov
pusha
push
fldt
shll
fcomi
stos
jbe
and
push
ljmp
pop
ds
or
mov
dec
jl
in
xchg
jo
scas
scas
rorl
cmp
stc
and
std
jb
fistps
rclb
rcr
and
ja
mov
ficompl
mov
pop
mov
mov
and
or
pop
int3
lret
jge
mov
and
dec
je
jb,pt
dec
jae
push
mov
add
fstpt
in
jo
outsl
pop
popa
mov
leave
dec
xchg
cs
sbb
dec
xchg
sub
xchg
inc
imul
leave
push
xor
stos
xchg
add
lcall
rorl
pop
mov
inc
mov
inc
fisttpl
mov
jle
and
ret
and
jnp
sub
push
push
fsubs
xchg
adc
lcall
inc
adc
popf
jnp
subl
cmp
cli
mov
mov
push
insb
bound
sub
adc
in
mov
pshufw
into
lods
std
pushf
ds
mov
rcll
in
xor
inc
jp
ja
je
pop
les
mov
jno
sub
jne
xchg
push
rorl
mov
cwtl
std
in
enter
cmp
jmp
xor
push
loope
mov
je
popa
mov
in
mov
mov
inc
add
test
ja
lret
aaa
mov
int3
jne
jbe
fwait
inc
addr16
push
jle
pop
popf
and
inc
cmpl
aas
mov
lods
push
cltd
in
lods
cmp
push
lea
cs
daa
and
mov
mov
xor
lahf
dec
cmp
sbb
stos
aad
xchg
push
popf
fnstcw
add
and
addr16
rclb
cmc
adc
fistl
dec
pop
scas
mov
adc
or
xchg
scas
mov
or
sub
das
cmp
xchg
popf
push
out
push
and
cmp
or
jmp
insb
dec
push
fnsave
jle
inc
push
rcrb
fs
mov
sub
or
dec
mov
and
dec
push
pop
mov
or
sarl
fdivr
lea
mov
loop
fbstp
push
jg
out
addr16
cmp
mov
mov
aas
in
mov
and
rcll
les
shll
roll
cmpsl
outsb
test
adc
xor
pop
fidivs
fldpi
stos
out
jg
cmp
das
inc
jle
jbe
xor
in
adc
jne
idivb
cmp
push
push
les
push
leave
sub
insl
mov
jge
jp
mov
ret
jg
add
enter
sbb
ljmp
adc
lahf
loope
pop
mov
cmpsb
adc
cmp
test
in
icebp
movsb
data16
xchg
dec
sub
scas
sub
inc
int
adc
or
std
scas
mov
and
push
insb
bound
and
jl
sbb
loop
mov
fs
movsb
popf
lock
notl
adc
mov
test
stos
inc
cmpsb
push
mov
sub
dec
push
mov
xchg
push
popa
mov
jnp
test
sbbl
adc
sbb
mov
sbb
jecxz
dec
inc
mov
std
in
or
ja
adc
mov
sbb
clc
adc
and
cmpl
lahf
sete
fld
repnz
sub
mov
nop
test
cmp
rclb
inc
pushf
mov
cli
xchg
dec
mov
psraw
pop
aaa
cmp
popf
jmp
cwtl
mov
xor
sub
js
arpl
pop
rorl
lock
pop
xchg
repz
xchg
push
ds
pop
mov
test
add
sarb
stos
mov
fstpl
sti
rorb
xchg
sbb
sub
mov
imul
mov
out
fdivrp
mov
xchg
mov
and
xchg
aas
add
scas
outsl
lret
sbb
and
or
inc
dec
pushf
bound
xor
xchg
ss
and
pop
sbb
adc
push
sub
dec
push
cmp
cld
lcall
or
lret
xchg
push
sub
cs
test
stos
test
push
dec
test
sub
cmp
mov
add
sub
add
rcl
lds
sub
pop
sbbl
incl
mov
xlat
shrb
imul
scas
mov
aas
cmp
jne
inc
push
aas
sub
cmp
inc
dec
out
xchg
xor
pop
mov
push
repz
lret
xchg
cmp
cmp
cmc
jno
mov
sbb
test
push
pop
nopl
mov
and
lret
jmp
sub
fucomip
jp
push
or
out
sbb
dec
aaa
mov
inc
loope
push
cmpsb
xchg
jle
andl
sub
test
dec
out
cmp
faddl
jge
roll
fdivrs
and
les
sbb
shrb
cmpsb
dec
xor
xchg
xchg
pushf
rorb
or
mov
aas
sub
andb
or
jnp
jbe
pop
inc
adc
pushf
and
sbb
xor
xchg
ret
cld
pop
adc
mov
rcrl
mov
inc
pop
jmp
das
inc
add
sub
imul
add
cli
cmpsl
call
fwait
testl
inc
loopne
aad
adc
cmp
fisttpl
jnp
push
clc
sbb
add
arpl
cld
sub
sbb
xlat
hlt
jg
dec
cmc
fwait
int3
iret
bound
aaa
sub
add
or
adcb
setns
pop
pop
pop
mov
adc
cmp
loop
mov
inc
push
ja
fcomps
lret
lcall
sbb
adc
pushf
mov
test
cli
cmp
add
pop
push
incb
stc
adc
pop
les
jo
cmp
clc
and
cmpsb
mov
cli
lret
mov
xor
or
pop
mov
pop
inc
cmp
sub
ret
jl
jp
data16
in
cmp
cmp
scas
cltd
imul
lea
nop
or
nop
cmc
add
and
push
or
orb
ret
addl
out
inc
clc
xchg
pop
sub
or
je
xor
dec
loope
xchg
dec
inc
or
dec
jb
sub
arpl
ljmp
inc
push
ljmp
sub
dec
rcrb
stos
ljmp
mov
bound
dec
dec
mov
jle
pusha
cmc
mov
and
testl
mov
cmpsb
jl
adcl
dec
xor
mov
ss
sub
jmp
mov
push
jbe
cmp
inc
daa
push
icebp
cwtl
pop
fists
and
add
ss
sub
mov
cmp
outsb
mov
cmpsl
xchg
and
leave
cmpsb
jecxz
push
add
pop
fdivrs
aam
ret
cs
dec
sbb
in
out
cmp
and
notl
decb
add
incb
cs
loop
xchg
dec
mov
repnz
cmpsl
pop
xchg
dec
in
xor
ret
xchg
fsubl
loope
out
cmpsb
or
push
jns
fisubl
aas
inc
stos
mov
ficoms
fdivs
jo
dec
xchg
negl
push
push
push
dec
pop
ret
inc
or
sub
xchg
popa
ja
call
pushl
dec
out
or
pop
jg
adc
mov
insb
lods
jnp
sub
sbb
dec
and
pop
xor
mov
mov
push
ds
adc
pop
mov
dec
mov
popa
xor
test
stos
push
aaa
mov
call
adc
push
xchg
adc
out
xor
in
out
cwtl
add
xor
add
jno
bound
cmpb
jo
leave
nop
sub
or
arpl
out
sub
jae
mov
repnz
sub
std
sar
mov
cmpsb
out
enter
mov
mov
and
push
cltd
sbb
jno
push
jmp
std
xchg
xchg
ljmp
pop
mov
adc
jg
outsb
and
sub
scas
popa
adc
cmpsl
adc
jecxz
lret
clc
sub
push
les
pop
dec
das
test
ror
into
or
push
stc
xlat
push
in
std
add
sub
lea
jmp
out
mov
add
shll
mov
push
or
pop
dec
or
lea
push
sub
jp
push
fcmovnb
jp
adc
icebp
sar
aaa
jge
popf
mov
xchg
push
scas
cmpl
ret
adc
xor
pop
outsb
and
or
mov
pop
repnz
and
dec
jle
mov
test
fs
out
jb
enter
js
subb
dec
mov
jmp
jns
mov
test
nop
addr16
and
aaa
mov
clc
roll
divb
aas
repz
mov
add
jns
out
fisubl
inc
and
dec
mov
in
jmp
int3
sti
adc
push
cwtl
mov
or
and
verr
jnp
loop
add
pop
cmp
xchg
pop
sub
cmp
adc
inc
sbb
adc
push
mov
cmp
rol
xchg
fidivrs
mov
loop
push
mov
jbe
iret
out
and
sbb
adc
jl
lret
shl
scas
in
xor
dec
scas
or
ficompl
mov
int3
lods
mov
test
lret
push
mov
fs
pop
and
bound
mov
leave
lds
sbbl
jne
arpl
adc
idiv
cmp
fwait
jl
lea
cmp
jecxz
mov
dec
pop
fisubrl
fcompl
sbb
mov
icebp
lods
sbb
jle
jbe
je
cli
push
inc
mov
jb
shl
int3
js
push
push
bound
jp
lock
call
mov
sub
push
enter
xchg
push
movsb
adc
mov
mov
sbb
and
adc
pop
rcrl
push
sbb
fs
push
jg
addr16
mov
dec
mov
jne
sarb
and
xor
popa
sbb
cwtl
dec
xchg
mov
je
inc
stos
or
pop
shr
push
ss
pop
ret
incb
ret
sbb
das
enter
clc
loope
sbbl
xchg
adc
sbbb
rcll
lcall
hlt
pop
dec
dec
pop
cs
test
mov
mov
push
xchg
dec
xor
imul
subl
or
and
adc
push
adc
mov
pop
call
pop
mov
outsb
push
sub
scas
std
and
inc
mov
outsb
xor
adcb
sub
push
sti
cltd
out
js
or
xchg
mov
pop
out
bound
jb
mov
cmpsb
push
fcoml
mov
sub
ret
pushf
call
sub
or
mov
mov
jg
jecxz
xor
jb
sub
ss
mov
cmp
cmp
out
stc
out
aam
jle
imul
inc
sub
and
je
iret
pop
adc
fldcw
cld
and
add
push
gs
out
testb
push
mov
cld
sub
mov
jno
iret
test
cmpl
inc
inc
sub
sbb
inc
jnp
xchg
pop
outsl
femms
mov
push
cmp
ret
dec
scas
xor
out
dec
repnz
inc
inc
pop
les
pop
fildl
gs
xchg
inc
sbb
xlat
cmp
popf
aas
pop
in
xchg
sub
cmc
hlt
push
insl
insl
dec
sbb
mov
inc
mov
rol
jecxz
pop
gs
icebp
shll
jl
xchg
jns
mov
pop
sbb
mov
inc
inc
fs
insl
fmuls
pop
lods
or
jg
shlb
push
into
imul
sti
inc
hlt
and
lds
ja
mov
loop
pop
mov
or
push
shrl
xor
sub
jae
inc
aam
mov
clc
ss
hlt
sarl
mov
adc
xlat
sbb
aaa
pop
pop
insl
fcmovb
jge
add
mov
inc
push
sar
sub
popa
fistpl
push
jae
sbb
pushf
jb
ret
pop
sub
andb
jo
add
sub
push
adc
mov
sub
mov
fistpl
pop
cvtps2pi
es
xlat
inc
imul
sbb
push
lcall
xor
cmp
xor
cltd
cmp
cmp
fwait
and
mov
stos
xchg
cmp
repz
adc
mov
into
xchg
stc
and
loope
mov
cmc
jno
outsb
divb
xchg
inc
icebp
mov
repz
movsb
mov
loope
dec
jge
call
sub
push
sbb
cmp
fndisi(8087
fstps
and
xor
inc
filds
xchg
pop
ds
aaa
bound
stc
gs
mov
shl
push
mov
outsb
setb
int
jb
in
mov
insb
lock
dec
rorb
nop
roll
outsb
mov
add
xor
iret
sub
fstl
aam
cld
xor
and
cmp
add
adc
ror
lods
xor
xlat
rolb
mov
lcall
cwtl
fnsave
sbb
adc
cmp
int3
out
inc
xor
imul
mov
dec
and
ja
add
mov
mov
test
cli
dec
daa
jne
fsubr
and
jo
je
add
popf
jg
mov
jg
pop
push
lret
mov
mov
enter
add
mov
test
and
lahf
mov
neg
mov
push
lds
dec
aas
movsb
mov
dec
pop
cmp
cltd
or
lds
cmp
pushf
pop
xchg
das
int
scas
mov
xchg
push
jno
jnp
or
xchg
xchg
in
mov
cmp
push
pop
jecxz
mov
pop
cli
cltd
jnp
push
sbb
xor
inc
sbb
mov
push
repnz
cmp
std
dec
sti
into
mov
loopne
add
xchg
fimuls
cld
lods
or
out
loope
rclb
shrl
jo
mov
seto
out
jo
ss
sub
out
pop
fcmovnb
aam
cmp
fcmovb
dec
push
shll
je
gs
xchg
rcrl
push
insb
pop
xchg
into
and
mov
xchg
insl
daa
fdivs
adc
jp
jns
mov
or
inc
xor
fildl
arpl
sub
daa
pop
dec
jmp
loopne
push
add
shlb
adc
nop
addr16
mov
mov
lock
aaa
jbe
jns
sub
and
pop
mov
sub
and
push
pusha
jle
adc
lcall
pushf
mov
repnz
cmp
or
push
pop
pop
xlat
pop
xchg
mov
shld
pop
insl
and
jl
pop
xchg
inc
mov
push
and
mov
xchg
mov
or
addb
or
push
or
pop
scas
insb
shlb
and
jmp
xor
leave
lahf
push
dec
nopl
sub
jg
sbb
xchg
cmc
cmc
push
popf
dec
and
mov
xchg
scas
adc
xchg
das
movsb
lock
pop
inc
xchg
cli
imul
cmpsl
std
jnp
xchg
enter
mov
and
jb
xchg
rclb
ficoml
test
jnp
popf
stos
inc
in
push
fs
lods
fwait
outsl
subl
rcll
movsb
out
lods
stos
or
mov
ficompl
cmpsb
sahf
mov
fs
ljmp
inc
and
fnsave
cmp
xchg
xchg
stos
sub
test
cmc
jge
inc
mov
loopne
stos
pusha
or
out
ret
dec
add
jne
inc
lret
je
sub
add
jne
stos
xchg
pop
int3
test
test
ja
dec
scas
jge
and
sbb
mov
divb
stos
sub
sbb
mov
ror
xlat
fnstsw
stc
pop
aaa
push
aam
pop
movsb
gs
ds
cmpsl
pop
pop
add
mov
icebp
xchg
adc
mov
xchg
xorl
jg
mov
sub
sahf
pop
arpl
push
sbb
js
mov
jecxz
loope
daa
push
fdiv
js
fndisi(8087
jb
ja
push
adc
xchg
bound
jnp
jg
out
std
fimull
adc
push
iret
adc
jg
cmp
mov
push
fs
xor
pop
or
adc
adc
pop
scas
cmc
push
and
mov
in
js
cli
mov
mov
mov
mov
adc
inc
cld
xchg
or
jnp
xchg
arpl
xchg
jmp
mov
xor
mov
cmp
push
jmp
pop
in
cli
ficompl
sbb
push
dec
mov
pop
lea
sti
mov
call
lods
shl
xchg
clc
and
out
dec
mov
lea
mulb
stos
add
scas
mov
sbb
and
es
xor
push
lds
fildll
cmp
inc
mov
gs
xchg
repz
imul
daa
mov
inc
pop
mov
dec
xchg
aas
addr16
outsb
mov
pop
rcll
xchg
lret
sti
popf
fildl
mov
pop
movsl
mov
out
pop
jb
xchg
testl
shrl
jmp
cmp
out
rolb
push
sbb
fisttpl
popa
sbb
mov
or
jns
jecxz
jg
cmp
sub
lret
push
cmpsb
flds
inc
sbb
and
outsb
add
cmp
add
and
orb
mov
or
or
or
aas
insb
inc
fldt
push
mov
or
inc
frndint
inc
ret
es
xor
push
repnz
loope
sub
dec
mov
adc
add
lahf
in
stos
sub
outsb
sahf
xchg
mov
fstps
jbe
in
push
sbb
scas
mov
std
jecxz
mov
cmp
cmp
pop
inc
scas
in
ljmp
mov
add
pop
dec
cmpsl
add
sub
mov
fwait
cmp
inc
outsl
jo
lds
std
clc
mov
mov
dec
mov
fidivl
loopne
xchg
aad
xor
rcrl
sub
out
mov
inc
outsl
jl
and
lods
gs
sub
sti
sbbl
ljmp
in
xlat
fsubrs
out
push
imul
bswap
jecxz
popf
into
pushf
sub
fstp
mov
push
add
add
es
pop
shlb
loopne
lea
movsb
inc
jl
enter
cmp
orl
mov
scas
ret
sbb
dec
mov
inc
add
xor
daa
adc
leave
add
fucomp
aaa
xor
shll
jmp
shlb
xchg
mov
je
out
mov
shrb
mov
mov
ja
mov
dec
mull
xor
jmp
xchg
jbe
xor
das
sub
xchg
cmp
ljmp
cwtl
jp
push
sbb
jmp
xor
mov
add
xor
mov
subl
hlt
dec
in
ss
mov
add
add
mov
test
pop
adc
push
sbb
jbe
dec
push
xor
cmp
dec
cs
lcall
pop
jne
aad
sbb
inc
jge
add
fs
sub
push
jae
sbb
mov
mov
fwait
push
cmp
cli
jp
cmp
rol
jp
lahf
xchg
cmp
pushf
pop
mov
daa
call
push
fsubp
leave
lret
xor
xor
xchg
fcoml
jns
gs
jecxz
mov
xor
insb
inc
out
stos
sbb
mov
aad
xor
add
jmp
xchg
cmpb
inc
mov
lahf
adc
ds
mov
in
insl
mov
imul
adc
add
pop
inc
sarb
dec
xor
cwtl
xchg
ret
pushl
push
scas
sbb
std
jmp
ds
fsts
xor
int
dec
dec
sub
sbb
aad
xchg
inc
or
adc
rdpmc
lods
jecxz
jns
push
pop
mov
pop
inc
arpl
pop
imul
stc
and
mov
pusha
pop
das
repnz
xorb
test
cmpsb
jmp
stc
popl
test
cmp
mulb
push
push
sub
push
inc
jae
imul
lahf
xor
or
jge
rclb
xchg
stc
inc
sti
push
out
pop
push
mov
add
mov
test
aad
js
push
int
push
fs
lock
sbb
push
fldl
dec
xlat
and
popf
mov
cmp
xor
jecxz
sbb
out
mov
xchg
in
lret
jo
push
into
and
or
aas
ficomps
bound
mov
sub
ret
cmp
jp
aad
sbb
xchg
cltd
scas
sbb
shlb
rcll
aad
xor
and
cmp
aaa
mov
nop
ljmp
mov
cmp
in
popf
call
push
lds
pop
cmovne
mov
test
insl
outsl
adc
jp
and
test
adc
sahf
in
xchg
cmpsb
inc
es
mov
scas
in
cli
or
push
jae
inc
decb
add
add
pop
pop
dec
cmp
add
inc
fs
sbb
or
xlat
sbb
cmp
sub
pop
cmp
pop
mov
call
shlb
jg
mov
insl
addr16
lcall
mov
int3
pop
insb
les
xor
mov
stos
imul
ja
add
dec
pop
pcmpeqb
idivb
xor
mov
das
inc
iret
mov
ljmp
mov
loope
stos
mov
movsb
mov
fstpl
jo
or
hlt
push
cmc
mov
jnp
ljmp
insl
pop
and
cwtl
xchg
cmp
sbb
lcall
fwait
pop
fwait
les
sbb
sbb
aad
out
xchg
repz
ds
xchg
sub
push
sbb
lcall
test
movsb
jmp
pop
add
sub
enter
add
pop
pop
jl
jg
fmull
cmp
jno
dec
ret
stos
sub
aaa
adc
aam
xchg
repz
scas
push
mov
aam
ljmp
mov
mov
mov
push
and
out
sbb
pop
xlat
sub
mov
mov
mov
push
pop
in
sbb
xchg
mov
negb
cwtl
arpl
push
xchg
dec
rorb
lahf
mov
push
fldt
dec
leave
addr16
clc
push
les
ret
test
jl
xlat
and
insl
fnsave
mov
int3
sub
out
cli
idivb
xor
mov
sub
sahf
mov
lcall
rorb
pandn
mov
enter
scas
pop
mov
fnsave
lcall
shl
xor
jl
lcall
fisttpll
addl
xchg
inc
lods
aas
inc
jg
pop
mov
mov
cmp
imul
pop
mov
lcall
add
sub
inc
cmp
jmp
mov
mov
fimuls
sub
jecxz
cmp
cwtl
je
jns
iret
jecxz
shr
xor
test
pop
inc
daa
jo
subl
jnp
jl
push
dec
dec
aas
pop
adcl
dec
xchg
rcl
mov
test
jl
scas
fdivr
sub
mov
inc
repnz
leave
das
cmp
add
movsl
adc
rol
adc
icebp
orl
int3
or
jge
mov
cmp
out
out
fcompl
inc
movsb
xchg
sti
aaa
outsb
add
sti
aad
ds
enter
sbb
jns
loop
push
mov
fstl
in
jle
into
fcomi
mov
je
call
push
sub
cmpl
xchg
and
jge
sbb
sub
inc
iret
imul
iret
gs
mov
je
mov
sub
inc
out
pop
mov
mov
shlb
fimull
out
inc
mov
mov
pop
xchg
pop
pop
mov
cld
jno
aam
add
ss
sub
fstpl
std
aaa
xchg
cmc
imulb
add
popf
cmp
and
push
outsb
in
pop
jle
push
xor
mov
mov
das
cld
pop
lds
xor
sub
xor
adc
pop
pop
aaa
jbe
and
outsb
icebp
adc
shr
inc
and
cltd
fnstcw
mov
mov
dec
je
stos
and
shll
dec
iret
icebp
aas
lods
mov
lods
orb
inc
cli
sbb
inc
and
lods
mov
aaa
pusha
pop
imul
adc
mov
xor
psubq
inc
leave
loopne
inc
xor
lock
dec
testl
inc
mov
popa
aad
mov
push
dec
pop
mov
jae
pushf
cmpsl
cmc
push
xor
in
push
push
loope
popf
add
push
mov
icebp
and
mov
aam
lcall
xor
xor
mov
pop
pop
mov
cmp
lods
xchg
lds
mov
push
movsb
in
xchg
int3
mov
or
push
jbe
enter
pop
data16
sbb
fildl
enter
mov
sbb
lret
mov
cwtl
test
mov
cli
pushf
mov
fnstsw
cmp
test
in
mov
jbe
adc
adc
push
mov
lcall
mov
in
pop
enter
pop
dec
in
cmp
pushf
rorl
ds
and
xchg
sub
in
xorb
les
das
cmp
arpl
lock
add
push
adcl
dec
movsl
lret
pop
gs
inc
xor
push
inc
or
in
mov
mov
test
je
or
mov
adc
pusha
enter
xor
jbe
cmp
ret
mov
shlb
pop
push
es
and
test
enter
inc
mov
cwtl
hlt
je
pop
out
push
pushl
dec
sahf
loope
mov
mov
or
jb
mov
cmpsl
mov
pushf
and
push
aas
xor
mov
mov
ja
je
leave
cmpsl
jo
push
sbb
mov
into
insl
jl
xchg
push
inc
sub
sbb
nop
inc
repz
int
mov
mov
push
xchg
int3
mov
lods
cmp
inc
cmp
add
lds
xor
nop
and
and
sub
popf
mov
out
movsl
or
xor
mov
fdivr
aas
pop
mov
dec
adc
add
negb
ret
dec
lret
pop
sbbl
and
mov
mov
adc
pop
ss
scas
inc
xchg
inc
out
and
jp
jg
add
xchg
adc
out
jg
mov
inc
pop
das
cmpsl
xor
dec
lods
and
adc
or
mov
xchg
push
and
outsl
fisttpl
pop
popa
mov
inc
push
clc
push
iret
xchg
mov
push
jne
outsb
sub
sahf
and
push
sbb
mov
jb
xor
push
sbb
lcall
mov
dec
test
xchg
pop
lret
mov
xor
call
xor
cmp
and
loope
ror
adc
jns
mov
icebp
cld
ja
mov
or
dec
or
imul
or
jge
test
insb
jo
cmpsl
or
mov
mov
lahf
dec
xchg
sar
sbb
mov
fidivrs
sbb
repnz
in
pop
addr16
pop
or
xor
ud1
pop
inc
push
pushf
dec
bound
push
lods
mov
push
bound
movsb
iret
fsubr
cmp
mov
add
or
jmp
rcrb
scas
and
lcall
jg
iret
sbb
xor
dec
xchg
add
mov
test
dec
bound
pop
jo
xchg
xchg
sbb
adc
out
mov
call
in
jno
jnp
mov
cmp
cli
mov
mov
stos
cmp
test
jg
outsb
sbb
jnp
in
sbb
adc
jp
mov
rcl
push
cmp
and
push
jecxz
imul
aas
and
fs
push
aad
cmp
shlb
jg
in
push
repz
cwtl
mov
or
jecxz
adc
shl
inc
mov
add
sub
xchg
xor
arpl
mov
sbb
add
xcrypt-ofb
cmpsl
in
cmp
mov
sti
inc
mov
sbb
daa
xchg
call
fstp
adc
dec
mov
dec
imul
sbb
mov
adc
std
or
test
sub
jnp
rcrb
sub
outsb
mov
mov
mov
inc
mov
aas
test
xor
fdivrl
jmp
shrb
and
stos
lret
mov
aaa
cwtl
imul
jp
sbb
lds
sbb
cwtl
adc
scas
fs
xchg
shrb
xchg
push
push
mov
add
xchg
mov
push
shll
add
push
fisubl
xlat
dec
pop
inc
add
loopne
push
pop
mov
jno
inc
cmpsl
and
mov
push
fidivrs
lods
lret
sti
mov
mov
sbbl
in
pop
sub
mov
xchg
adc
xor
cli
inc
cld
sbb
xchg
icebp
dec
sbb
mull
push
mov
cwtl
test
in
cmpsb
in
or
les
dec
sub
ljmp
insb
insl
std
sahf
into
sbb
sub
jp
arpl
xor
lcall
dec
adc
mov
fs
sub
cld
movsl
cld
shlb
inc
and
clc
jae
cmp
das
cltd
or
lods
decb
jo
push
adc
test
push
ljmp
add
jl
pop
sub
or
mov
dec
inc
xchg
jmp
cmp
jno
mov
fsubrp
subl
test
aas
mov
xor
add
ds
pop
xor
cwtl
je
cmpsl
or
push
call
push
test
mov
out
fcmovu
push
inc
mov
js
stos
das
negb
dec
mov
cmp
fidivl
adc
shlb
shlb
inc
mov
sahf
adc
jg
sbb
pop
test
mov
or
xchg
inc
pop
add
cmpl
cmp
sahf
mov
or
mov
mov
inc
jae
mov
cmp
add
xor
dec
ret
loopne
pop
xchg
add
cwtl
xlat
push
mov
xor
inc
pop
cmp
dec
sub
mov
mov
data16
pop
dec
or
sti
push
inc
scas
in
mov
sub
js
arpl
mov
mov
jmp
mov
mov
xlat
in
push
push
push
push
xchg
js
stos
xchg
jb
pusha
rolb
xlat
dec
inc
ret
test
adc
add
mov
lcall
out
cmp
out
popa
mov
clc
ljmp
lds
int
enter
cmpsl
arpl
cmpsb
dec
pop
and
out
cmovge
inc
stc
push
idivl
xor
push
jmp
or
xchg
push
push
out
cmc
and
lds
loope
data16
fs
push
movsl
fnsave
test
leave
out
mov
test
xchg
dec
cmp
movsb
xchg
dec
adc
mov
cmpw
aas
jb
addl
xchg
dec
mov
in
sbb
popa
inc
test
xchg
scas
dec
std
mov
out
daa
bound
nop
jns
cmp
out
push
inc
mov
inc
sti
adc
jns
les
inc
stos
cmp
popa
cld
xor
push
cmp
push
pop
imulb
adc
mov
xchg
imul
xlat
mov
es
add
in
xor
js
fidivl
mov
imul
and
push
sbb
cmpsl
jae
cmpl
sbb
mov
in
push
jns
pusha
and
loope
push
jnp
ja
and
sbb
enter
popl
jns
pop
and
lods
xchg
loop
sub
adc
loopne
addr16
dec
out
mov
cmc
bnd
fs
mov
mov
mov
mov
mov
pop
push
mov
imul
or
in
scas
jl
fsub
or
xor
sarl
push
fiadds
lret
lret
jmp
mov
mov
mov
test
insl
adc
push
mov
sbb
xor
pop
cmpsb
jg
dec
mov
sub
es
pop
dec
mov
push
test
iret
pop
aad
adc
iret
pop
aad
es
cmpsb
mul
dec
cwtl
outsl
inc
inc
ror
and
test
push
sbb
or
cmp
push
mov
popa
scas
pop
fs
cld
mov
xchg
dec
and
or
ret
jge
cmpsb
xchg
stos
push
fstl
fnstcw
jno
mov
adc
dec
jge
mov
dec
sub
std
cmp
fbstp
cmpsl
xchg
and
push
fadds
mov
mov
std
mov
pop
dec
cmp
adc
stos
sbbb
je
xor
orb
cmc
adc
inc
cli
and
fcompl
xchg
xor
lret
mov
sti
sub
arpl
inc
mov
leave
push
sbb
scas
xor
out
test
popa
add
std
pop
mov
add
rolb
jns
add
mov
jmp
mov
inc
pop
xchg
das
data16
mov
inc
fs
lods
cmp
fidivs
cmp
into
pop
adc
push
jb
sbb
inc
stos
js
stos
in
mov
sti
test
ja
mov
jae
scas
jge
jnp
or
sub
xchg
inc
add
loope
add
sbb
dec
jmp
xchg
out
lcall
mov
push
push
pop
or
es
pop
inc
pop
rorl
roll
ret
mov
pop
fdivrl
out
cmc
in
insb
popf
jns
inc
xor
inc
out
repnz
add
int3
xor
sub
addr16
dec
pop
addr16
mov
jmp
mov
sbb
add
movlps
push
dec
mov
std
cmp
stos
cmp
xor
clc
or
push
sub
add
sbb
pop
movsb
insb
mov
push
mov
lock
data16
sub
dec
imul
inc
add
dec
xchg
sub
int
sahf
icebp
bound
sub
andl
jno
inc
rcrl
adc
inc
adc
pop
test
repz
inc
mov
stos
mov
lods
mov
inc
psubw
mov
clc
or
push
cmp
xchg
test
mov
movsb
incb
add
cmp
sbb
mov
mov
lcall
insl
sub
push
es
cmp
out
cmpsl
das
add
cmp
pop
and
fdivs
mov
dec
addl
pop
cwtl
fisubrl
push
or
popf
xchg
aad
sub
pop
inc
mov
mov
inc
sahf
mov
push
mov
or
xchg
hlt
xchg
pop
fldcw
out
jl
sub
movsl
lret
decb
add
hlt
xor
popa
sahf
in
adcl
cmp
push
push
mov
or
scas
add
ret
pop
shlb
subl
pop
arpl
add
std
popf
mov
jp
icebp
fs
in
aaa
sbb
mov
les
sub
mov
mov
lods
push
ficompl
pop
add
lds
jne
mov
ficoml
mov
mov
lods
mov
outsl
jo
dec
dec
mov
loop
cmp
pop
adcb
pop
xor
dec
xchg
xchg
pop
sbb
test
ja
sahf
leave
inc
test
inc
jns
hlt
sbb
shlb
outsl
jp
aam
or
stos
or
or
push
shrb
mov
lods
cmpsb
lock
cmpsl
cmp
js
or
push
sbb
pop
push
pop
mov
push
dec
xor
xchg
cmpsb
add
sub
fstpl
lahf
dec
sti
or
or
fs
xchg
mov
outsl
lds
mov
pop
out
cmp
sbb
pop
aaa
cmp
xchg
pop
stos
popa
mov
jge
push
adc
sub
xor
sbb
outsb
and
jns
dec
fcmovb
inc
xchg
loope
sbb
adc
int3
add
aam
lds
adc
xor
in
jl
push
mov
hlt
repnz
test
ljmp
sbbb
ret
or
mov
ret
push
icebp
imulb
sti
ljmp
test
add
or
stc
fmull
ja
arpl
loop
gs
sbb
push
jnp
adc
adc
cmc
pop
roll
sub
and
scas
fucomip
fcoms
sub
dec
fldt
jns
jb
jge
iret
popf
xchg
jb
sbb
push
sbb
sbbl
xchg
adc
sbb
in
jns
lods
xorl
orb
out
aam
stos
lret
mov
xchg
jg
popf
mov
lret
test
jne
pop
inc
hlt
or
out
lods
imul
inc
sahf
in
xchg
cld
ret
or
cli
rorl
dec
push
push
jns
xchg
shr
js
xor
leave
add
push
lcall
imul
shlb
test
push
sub
jo
ret
mov
sub
pop
popa
xor
sub
sub
es
adc
push
xchg
push
and
xchg
jne
and
and
jne
fcmovnb
push
call
dec
fistps
mov
rorb
and
mov
test
xor
add
and
xor
scas
sub
fstpl
popa
scas
out
enter
js
jbe
in
xor
out
push
jno
mov
ds
mov
scas
lods
mov
loop
mov
push
sbb
dec
pmulhuw
push
leave
lcall
mov
dec
mov
or
jbe
sub
das
dec
divb
mov
outsb
mov
mov
jge
fidivs
mov
mov
dec
lahf
fs
sub
loope
movsb
das
sub
push
xchg
dec
rcrl
push
imul
jbe
pop
inc
jne
mov
popa
lret
sahf
shrl
shll
sarl
add
arpl
mov
aas
sti
call
stos
mov
jle
shlb
dec
add
sub
out
cld
es
fcomi
inc
scas
jle
pop
dec
xchg
push
repnz
testb
lock
mov
cltd
cwtl
push
out
cmpsl
rorl
loope
xlat
and
aaa
loopne
inc
repz
lock
es
pop
lahf
xchg
les
cli
sbb
mov
daa
pop
out
lret
hlt
aad
ljmp
jmp
push
ret
stc
push
dec
das
in
push
fnstenv
data16
cmp
fcompl
daa
cmp
xor
pop
dec
int
mov
and
or
jb
aad
pop
je
adc
fdivrl
cmp
cmc
sub
neg
mov
mov
pop
pop
enter
pop
inc
sarl
jle
xchg
aad
out
fwait
xchg
xchg
add
shll
adc
lahf
jg
lds
jecxz
ss
in
faddl
clc
out
test
shll
mov
and
sub
dec
adc
sbb
xor
pop
xor
mov
lcall
or
pop
rcll
negb
scas
nop
gs
pop
movsb
inc
ja
add
cmp
cwtl
mulb
fsubrl
cmp
sbb
xchg
test
mov
push
ds
test
icebp
mov
repz
xor
push
imul
xchg
and
lret
mov
sub
xchg
jl
jno
jo
dec
jns
out
and
into
je
aas
pop
dec
push
icebp
shlb
xchg
rol
inc
aas
mov
xchg
int
aas
mov
pop
inc
test
call
cli
jae
cmpsl
jne
cmpsl
push
mov
sbb
cltd
dec
lahf
aam
inc
fwait
adc
test
mov
nop
test
sti
rclb
inc
lds
stos
pop
or
push
call
cli
out
cmp
adc
add
mov
stos
lds
les
arpl
ret
pop
lret
aad
cmp
push
cmp
imul
mov
stc
shlb
das
or
call
test
cltd
imul
add
fistpl
fsubl
cmc
adc
push
xchg
mulps
stos
and
lock
negb
mov
rolb
mov
xchg
add
outsb
mov
jbe
jle
cmpsl
sarl
cmp
push
sarl
test
scas
loopne
xchg
stos
push
hlt
mov
or
mov
gs
and
inc
mov
rolb
dec
mov
jns
lret
in
inc
push
push
aas
adc
push
sti
inc
inc
popf
xchg
inc
mov
sbb
ss
rorl
test
jl
adc
sti
nop
cs
mov
mov
repz
adc
and
fs
or
loope
xchg
aaa
mov
fsub
out
mov
cmp
iret
les
mov
lcall
push
js
adc
psrlw
enter
inc
outsl
je
aam
subl
xchg
dec
mov
les
pop
ficoms
mov
mov
cmp
jmp
adc
push
outsl
movsb
cli
inc
jle
sbb
sub
addr16
sub
xor
dec
and
or
xchg
cmpl
stc
sbb
and
xlat
xchg
or
aaa
adc
lock
cmp
pushf
adc
xchg
mov
lahf
popf
push
pop
jp
test
lea
pushf
mov
xor
and
xchg
sub
adc
in
cmp
sub
or
jg
out
dec
scas
inc
push
out
daa
pop
in
iret
inc
or
fcmovnbe
stos
xor
push
shl
push
sub
add
cmpsb
in
hlt
sub
testb
dec
inc
xor
push
popf
add
insb
test
mov
mov
loope
jne
adc
mov
bound
mov
scas
inc
into
mov
pop
mov
adc
ds
xor
jno
movsb
jo
jecxz
nop
movl
push
mov
xchg
sbb
mov
scas
xchg
inc
mov
aas
mov
cmp
scas
jbe
scas
or
sahf
sbb
ret
leave
push
dec
inc
out
inc
in
jl
and
pop
loope
sbb
push
or
std
mov
scas
inc
cmp
loopne
cmp
addr16
in
fdivrp
xchg
hlt
pusha
gs
fs
adc
cmpsb
or
and
ds
and
ret
fsubrl
sub
ds
data16
cmp
jno
rcrb
sub
sbb
scas
add
seto
add
pusha
adc
es
sbb
xor
jo
fwait
inc
cld
mov
or
loopne
push
divb
xor
mov
inc
inc
inc
and
mov
fidivrs
jnp
iret
inc
pop
sbb
jmp
sbb
iret
addr16
jno
pop
ljmp
mov
mov
popa
sub
lret
or
icebp
int3
adc
icebp
loopne
scas
jg
pop
adc
mov
jnp
sahf
pop
mov
cmpsb
xor
stos
jp
cs
test
xchg
sbb
mov
jnp
pop
lods
mov
dec
jne
mov
iret
jmp
cmp
leave
je
sbb
jo
lds
sub
inc
mov
daa
cmp
cmp
bound
push
fnstcw
pusha
mov
mov
push
xchg
lds
pop
xchg
adc
push
aaa
xlat
or
lods
stos
lcall
jp
imulb
pushf
mov
push
popa
push
jp
movsl
mov
mov
mov
inc
cmp
popf
and
loopne
mov
and
mov
sahf
jg
jne
push
rcrb
lock
fsubr
push
adc
pushf
cmp
xor
je
test
xor
adc
inc
int3
cltd
inc
fs
push
scas
iret
aaa
jmp
push
dec
pop
popa
push
dec
lret
jl
ja
cli
mov
xor
fnsetpm(287
pop
lret
sahf
mov
scas
fldl
xor
cwtl
cmc
enter
cmp
sub
sub
jbe
sbb
xor
push
jno
push
movsl
cmp
into
dec
mov
scas
push
dec
jg
jmp
pop
popa
ffree
mov
jae
mov
call
push
sarl
jl
in
gs
in
and
aad
pop
loope
negb
sub
lcall
call
adc
cmp
data16
mov
push
fidivs
push
loope
mov
sbb
in
in
pop
pop
lret
push
stos
adc
sbb
push
jecxz
pusha
mov
aam
gs
sub
push
dec
sbb
aas
ret
cmpsl
sbb
fisttpll
movsl
and
mov
push
mov
cmpsb
inc
xchg
mov
xor
ss
inc
loop
scas
cmpsl
js
ret
mov
mov
jae
lahf
cld
xor
jns
fsubs
sar
cmp
push
mov
pop
xor
and
sub
inc
push
out
shrl
out
dec
dec
sub
inc
dec
pop
shrl
lcall
inc
test
pop
lods
lea
mov
into
xor
add
ljmp
jne
pop
mov
sbbb
les
fdivrl
fidivrl
xchg
cmp
and
ljmp
daa
add
push
push
or
scas
mov
inc
in
nop
jo
in
xchg
cmpsl
adc
push
mov
stos
mov
int3
and
mov
repnz
jge
xchg
popf
sub
inc
push
add
pop
dec
xor
pop
sub
add
sub
sub
repnz
rcr
sub
mov
ficompl
int
sahf
mov
call
fwait
aad
dec
jnp
stos
ret
xchg
out
pop
push
pop
cmp
push
dec
xorb
push
mov
les
sbbb
pop
pop
out
jo
adc
cwtl
sbb
or
xchg
inc
int
ss
push
sbb
xchg
fcmovbe
jb
fwait
popa
aam
fwait
scas
mov
push
jl
add
add
repnz
mov
inc
dec
test
or
inc
jb
movsl
xor
cli
in
inc
in
xor
loope
mov
jg
fisubs
sbb
aad
xor
xchg
push
sar
cmpsb
daa
notb
adc
jne
dec
sub
push
push
fmull
xor
pop
dec
jmp
push
or
jno
mov
mov
pop
mov
ret
lds
int
sti
adc
pop
hlt
lock
sti
lret
mov
aaa
call
mov
sub
jnp
lcall
and
dec
jo
pop
pop
xchg
jno
stos
out
loop
mov
rolb
mov
dec
loope
push
popa
inc
pushf
jne
lret
push
pop
cmp
lds
pop
les
nop
add
xor
popa
ss
cmpb
add
xchg
stc
jge
arpl
cmpsb
dec
repz
movsb
pop
scas
mov
mov
lock
ss
ja
sti
popa
and
mov
xchg
fwait
xor
push
loope
ret
out
sti
xor
gs
lret
mov
aad
ret
outsb
push
or
dec
pop
cmp
pushf
add
aas
loope
pop
cmp
lock
pusha
pop
and
test
mov
pop
and
les
clc
sti
push
or
cmp
or
and
xchg
ljmp
jecxz
mov
js
pop
fmul
push
push
add
inc
push
cwtl
sbb
popl
pop
mov
inc
sub
sbb
inc
sbb
mov
jp
ss
lret
mov
ret
fistps
mov
adc
jle
inc
cmp
mov
cmpsb
sbb
aad
shrb
rorl
pop
ja
and
add
adcb
adc
xchg
mov
and
adc
sti
sbb
fnstenv
shr
lret
or
or
inc
fidivrl
sbbl
inc
or
xchg
cmp
mov
pop
pop
adc
sbb
and
jns
mov
push
jg
gs
mov
pop
orl
sub
ror
insb
cmp
movsb
push
rclb
pop
aam
mov
ljmp
mov
jno
or
sub
je
jecxz
inc
test
and
sbb
mov
repnz
jp
int
aaa
pop
int3
dec
test
repz
sbb
int
ret
xchg
cmpl
and
sbb
lcall
push
xlat
inc
sbb
jecxz
push
lea
insl
in
lahf
or
xor
pop
out
fs
out
lret
xchg
add
into
cmp
push
jbe
jno
cltd
mov
sub
inc
jge
das
fimull
dec
fbld
mov
xchg
xor
fnstcw
or
stos
push
mov
shlb
xchg
sbb
dec
add
shll
inc
or
mov
subl
les
divb
lahf
ja
cmp
mov
add
lret
lods
push
rcrb
sub
xchg
jmp
loopne
pop
and
ds
cmc
dec
int
addr16
adcl
inc
lea
ds
mov
cwtl
pop
sbb
xor
xchg
pop
inc
pushf
mov
xorl
sarl
fwait
or
jbe
xchg
or
dec
mov
xor
std
push
rclb
pop
std
lret
iret
sub
bound
jge
inc
pop
outsb
repz
mov
mov
js
jno
mov
mov
les
mov
push
mov
das
sahf
leave
lea
sub
jbe
xor
push
jecxz
sahf
es
push
jae
inc
inc
sahf
adc
pop
add
scas
int3
lock
or
push
jno
ret
ja
enter
sub
inc
cld
dec
cld
jmp
shlb
cmp
std
js
aam
sbb
addr16
and
cmc
sarb
xor
aas
push
or
xlat
sbb
xorb
das
lahf
dec
outsb
or
bound
in
mov
push
into
mov
lods
cltd
arpl
xchg
push
mov
popf
pop
rcrb
mov
dec
xor
push
inc
lds
and
dec
adc
rorb
mov
call
cld
and
out
push
mov
mov
das
push
lds
stos
aas
jb
repnz
lret
cmpsb
out
cmp
insb
lea
or
xor
jp
inc
push
dec
sbb
sub
xor
jbe
lods
fcoms
cmp
icebp
and
adc
sub
subb
xchg
adc
jmp
int
cltd
inc
mov
gs
arpl
mov
mov
jo
lds
dec
scas
lret
sbb
daa
stc
insb
jb
mov
cltd
xchg
cmp
push
repnz
inc
scas
sarb
jecxz
xchg
shll
mov
inc
popf
testl
imul
add
sti
addr16
and
pop
xchg
arpl
outsb
pop
mov
mov
sbb
mov
jnp
out
adc
shll
inc
lret
insl
leave
push
insl
mov
add
cli
ds
cmp
cmp
outsl
test
repz
sub
ss
cmp
adc
push
div
lret
jb
push
stos
outsb
sbb
mov
push
add
push
push
popa
int
bound
fsubrl
out
cmpsb
repnz
in
popa
loop
lcall
mov
mov
outsb
mov
xor
cmp
lods
fisubrl
inc
sbb
push
enter
jnp
mov
nop
mov
pop
pop
cmp
ljmp
scas
fistps
repnz
mov
rcrb
imul
push
push
je
ja
or
inc
lea
fistpll
aam
inc
test
cltd
sbb
out
pop
sarl
stos
mov
test
lfs
cwtl
fstl
je
repnz
ss
std
mov
call
movl
fimuls
sbb
xor
dec
popa
cwtl
cmpsb
ds
mov
inc
mov
jmp
lods
lock
mov
fsubrl
dec
cmp
loopne
and
lods
imul
std
fs
jnp
insl
push
daa
mov
ljmp
pop
xor
sahf
sub
xchg
jecxz
sbb
imul
mov
inc
push
xchg
cmp
mov
repnz
mov
dec
or
and
out
push
xor
out
sbb
pop
add
movsb
push
xor
lahf
pop
sar
popf
clc
mov
xor
fcmovu
jnp
fdiv
or
and
lcall
scas
mov
ja
cli
dec
mov
dec
fisubrs
mov
lods
inc
in
dec
shl
sbb
ret
jg
iret
or
stos
fnstcw
jl
jmp
shlb
mov
enter
inc
clc
arpl
push
xchg
xchg
mov
xor
xchg
scas
add
sbb
pop
inc
cmpsl
ds
add
sub
sbb
das
xchg
xchg
xor
loope
clc
sarl
iret
sbb
xlat
xchg
test
add
cs
fmuls
clc
adc
test
call
add
imul
jle
outsb
mov
xlat
mov
inc
pop
dec
js
or
mov
imul
test
mov
sub
jo
loop
inc
xchg
negl
adcl
fwait
push
sbb
mov
adc
push
jmp
mov
clc
ljmp
repz
loop
inc
std
add
rolb
xchg
stc
pop
leave
push
pop
icebp
cmpl
out
popf
xlat
out
and
test
mov
cmc
sub
leave
mov
mov
jmp
add
shl
mov
test
push
popf
and
jo
xor
adc
mov
add
mov
pop
mov
and
jle
mov
popa
lock
cld
clc
mov
popa
repnz
push
icebp
cmpsl
and
loope
xor
cltd
jbe
in
aam
xor
dec
mov
lret
mov
xchg
sub
mov
mov
inc
addl
push
pop
aam
mov
or
in
lcall
aas
xor
pop
stc
mov
xchg
cmp
dec
mov
jge
ret
xor
pop
repnz
and
xor
ljmp
lods
cmp
dec
xlat
cmp
mov
cld
sbb
xchg
sti
icebp
enter
lods
push
inc
add
sbb
aad
enter
mov
punpckhwd
scas
inc
push
add
lret
push
inc
jb
mov
inc
jp
cmovp
and
or
fildll
test
neg
test
mov
push
cmpl
fs
xor
rorb
sarb
in
cld
cmp
add
jbe
push
mov
hlt
cltd
dec
jecxz
jp
imul
inc
and
jmp
js
mov
ret
repnz
test
lahf
test
dec
dec
add
orl
andb
loope
jo
inc
sub
dec
outsl
shrl
jl
jne
inc
mov
inc
stos
push
aad
loopne
mov
loopne
test
or
pushf
add
jmp
dec
xchg
out
pop
loop
xchg
pop
in
sbb
push
sarb
jecxz
cld
loop
and
cmp
inc
pushl
mov
hlt
xchg
iret
sub
pop
mov
aad
jmp
mov
push
stos
sub
ret
mov
mov
mov
int3
movsl
mov
add
popf
fiaddl
scas
mov
or
movsl
pop
in
enter
cmp
scas
cmpsb
jl
cmpsl
push
aas
mov
pop
mov
add
es
pop
mov
aam
jle
lret
pop
mov
pop
push
push
in
int
in
mov
and
cmpsl
mov
stos
in
xlat
inc
subb
mov
push
pushf
je
loop
jge
sub
and
jne
jmp
aam
outsb
cld
movsl
xor
gs
cmp
sahf
inc
mov
pop
pusha
roll
and
or
pop
add
or
xchg
xchg
cmp
mov
lahf
pop
mov
stos
aaa
xchg
mov
xchg
bound
cs
dec
pop
fimuls
pop
xorl
xchg
fcomps
gs
pop
xor
int
xchg
or
pop
or
stos
xchg
xchg
mov
push
sti
mov
xchg
dec
push
ss
nop
call
sbb
pop
mov
addr16
addb
push
fidivs
lcall
aas
mov
pusha
lret
mov
test
mov
mov
inc
mov
stc
sub
rcrb
test
xchg
cmp
les
sub
add
mov
adc
push
mov
inc
and
ds
dec
cmp
and
push
in
hlt
cli
xchg
aad
cmpsb
mov
ret
ja
sub
mov
mov
dec
xchg
iret
scas
sti
mov
sub
mov
sub
test
jnp
or
insl
mov
bound
in
call
icebp
pop
out
dec
xchg
out
mov
call
cmp
nop
cmp
and
je
fstp
cmp
push
mov
jno
dec
dec
ljmp
jmp
popf
inc
pop
aas
xchg
xchg
fwait
insb
insb
idivl
jp
out
popa
push
mov
aad
sbb
jbe
icebp
adc
mov
xor
sub
cmp
fimull
clc
decb
push
push
mov
adc
mov
mov
loope
pop
adc
nop
inc
jo
jbe
shl
cmp
popaw
cmp
add
lret
add
adc
xor
mov
lods
add
test
loop
push
pop
lods
std
mov
adc
xchg
iret
cwtl
iret
nop
sbb
outsb
popf
sbb
sbb
xor
jo
fiadds
sub
xchg
aam
mov
and
lods
aaa
fstps
lds
sub
popa
popf
fstpl
stos
jle
xchg
and
lahf
push
xchg
cmp
cs
dec
adc
cmp
xlat
jo
mov
bound
cwtl
sbb
mov
mov
cmp
mov
xchg
mov
add
into
stos
lds
cmpl
sbb
sbb
hlt
ljmp
out
jb
jnp
fadd
addr16
mov
push
jae
hlt
jg
mov
je
das
xchg
and
clc
push
cmp
dec
pop
and
aas
jno
cwtl
pop
aad
int3
repnz
mov
sbb
pop
or
inc
fdivs
add
adc
ljmp
mov
jb
js
xchg
push
mov
or
jmp
jp
pushf
divl
mov
dec
cmp
adc
test
jp
add
pop
jmp
and
mov
xorl
or
xchg
fs
call
sbb
pop
testb
in
push
sahf
pusha
push
fimull
sub
in
lods
out
pop
lea
hlt
insb
push
scas
outsl
andl
inc
add
enter
cs
mov
cmp
enter
mov
test
xchg
dec
movsl
xchg
sub
mov
outsl
mov
leave
cli
inc
inc
into
add
mov
jns
orl
jb
andb
out
lcall
out
dec
pop
pop
popa
sub
das
pop
xor
iret
sbb
mov
sbb
sti
pop
pop
insb
bnd
orl
cwtl
sti
xchg
dec
jecxz
mov
xor
xor
adc
mov
mov
loopne
mov
inc
push
dec
or
cltd
mov
xchg
addr16
fsubrl
enter
adcb
mov
xlat
test
mov
mov
jne
sbbb
jae
mov
push
xor
stos
xor
push
aas
or
xor
xor
adc
cld
mov
loop
adc
add
push
test
sbb
mov
dec
aam
ror
xor
imul
outsl
add
and
sahf
and
push
fucomi
ss
jo
pop
movsb
inc
pop
lret
or
xchg
aaa
stc
call
jge
push
orb
mov
cmp
test
mov
sub
pop
jbe
xchg
enter
push
mov
das
or
cwtl
dec
repz
fwait
cmpsl
in
pop
xor
xlat
pop
pop
xchg
xchg
adc
ja
lret
mov
leave
and
dec
and
cmp
inc
ret
mov
loopne
xchg
aad
xor
xor
mov
xor
in
addr16
xor
xor
scas
sbb
mov
out
jle
adc
out
cmp
lods
mov
sti
add
mov
in
pop
cmp
xchg
rol
mov
mov
testl
stc
push
push
add
xchg
or
imul
push
shll
in
cs
jge
push
test
mov
fwait
dec
idivb
mov
divl
xor
pop
cmpb
and
lods
sbb
and
add
dec
shl
call
outsb
cmp
sub
push
lcall
pop
push
cli
mov
cmp
pusha
call
sbb
shl
mov
ud0
popl
lds
test
outsl
pop
adc
test
stc
aad
pop
cmpsb
pop
insl
dec
and
mov
js
inc
xorl
push
pusha
stos
into
dec
dec
cs
inc
loope
jl
sahf
repz
aad
pop
outsl
out
prefetch
or
je
cmpsb
xchg
outsb
add
or
mov
insl
pop
nop
mov
loop
xchg
sti
and
and
xchg
iret
cmp
jno
mov
cmpb
cmp
push
repz
jle
loopne
out
jmp
pop
jecxz
mov
xchg
sub
xchg
cs
enter
pop
clc
call
jb
lds
andl
pop
das
cld
or
mov
or
or
cmp
leave
add
xchg
cmp
xor
and
cmp
xchg
test
sbb
scas
das
addr16
fwait
dec
scas
in
pop
ret
lahf
jb
sbb
and
je
sub
add
nop
add
ja
xchg
test
sbb
setbe
mov
movsl
fdivs
and
mov
addb
pop
pop
mov
adc
movsl
push
dec
mov
add
adc
into
scas
push
in
mov
stc
lds
icebp
mov
sub
xor
scas
lahf
inc
ficomps
mov
aaa
fsubrp
push
inc
aam
mov
sub
inc
xchg
xchg
cli
outsb
jge
aas
pushf
fidivrs
shl
or
add
jo
pop
sbb
repnz
push
mov
sub
into
dec
leave
mov
lock
and
mov
cmp
aas
je
nop
idivl
sub
mov
and
mov
sub
jo
mov
jmp
dec
adc
jmp
frstor
jns
mov
sbb
mov
in
jne
xchg
push
lret
outsl
inc
dec
stos
pushf
xchg
mov
cmpsl
mov
jae
cmp
jecxz
and
arpl
sub
nop
add
add
pop
push
xchg
mulb
lock
pop
push
or
sbb
je
out
rep
xor
adc
lea
mov
xchg
jbe
iret
cmpsl
or
mov
mov
jb
adc
mov
test
ljmp
xchg
enter
push
jp
jle
dec
lcall
lret
ret
cmp
lcall
and
shlb
fdivl
lret
push
loope
mov
out
daa
sub
mov
shl
imul
add
test
inc
imul
fucomp
dec
jae
notl
clc
clc
dec
fisubrs
adcl
sbb
rcl
inc
dec
xor
les
out
xlat
movsl
dec
jg
mov
ret
push
repnz
jl
add
add
cmp
push
and
pushf
mov
cmpsb
mov
out
push
jp
or
cmp
inc
out
rolb
mov
dec
loop
imul
jne
stc
push
pop
inc
in
rcr
imul
mov
cmp
xor
pop
test
add
addl
adc
mov
mov
cmc
mov
jb
icebp
ljmp
popf
ret
push
stos
repnz
push
pop
push
int3
mov
cmp
push
pushf
xor
movsb
push
xchg
dec
aam
dec
jno
test
out
fucomi
lea
adc
fistl
mov
aad
sub
push
push
lret
enter
lcall
loopne
stos
jl
sub
inc
sub
addr16
icebp
aaa
aas
cld
addr16
incb
loope
dec
cld
cmp
push
push
insl
js
cmpsb
push
aaa
cmp
mov
cwtl
adc
sahf
insl
xchg
add
mov
xchg
inc
pop
movsb
es
mov
push
es
je,pn
push
cmp
cwtl
ficomps
inc
cltd
sbb
inc
es
xchg
mov
pushf
and
xor
mov
fidivs
cld
or
std
and
mov
dec
add
mov
pushf
dec
cmpsb
adc
xor
sbb
xchg
mov
out
sub
lcall
iret
jb
xor
fisubrl
repnz
ret
xor
fstl
shrl
ret
dec
cltd
sbb
call
shr
sub
loope
xchg
and
pop
out
jmp
jb
arpl
push
sbb
push
inc
adc
test
mov
cs
or
dec
fadd
hlt
fisubs
sbb
adc
or
adc
mov
xchg
js
mov
iret
scas
jo
push
ret
mov
pop
int3
test
lret
dec
movsb
push
sbbl
rclb
movhlps
or
sbb
cmpb
clc
out
mov
prefetcht2
notb
sub
icebp
push
ljmp
or
sub
movsb
jle
pop
cs
sbb
push
loope
xchg
aaa
int3
gs
fisttps
push
inc
pop
mov
in
pop
mov
jg
ret
inc
shrb
cmc
cmpl
add
loopne
xor
aaa
mov
out
mov
insl
and
or
cld
ret
dec
dec
mov
ret
and
xor
and
cmp
orl
dec
add
adc
test
mov
mov
cli
outsb
xor
mov
lahf
stos
mov
sub
inc
jb
iret
cmc
xor
push
into
repnz
iret
insl
inc
loop
insl
inc
cmp
aas
push
jo
in
dec
jns
sub
mov
xchg
fcomps
inc
test
sub
lods
pushf
and
frstpm(287
fcomps
or
shll
jecxz
sbb
xchg
push
lcall
pop
lret
notb
push
adc
mov
es
mov
xor
popa
xor
fst
cld
sub
dec
dec
rorb
lret
add
mov
pop
daa
jecxz
sub
loop
push
aas
pop
push
icebp
xlat
jne
bound
inc
mov
aas
std
in
pop
lcall
stc
fldcw
sub
pop
or
rclb
adc
incb
imul
or
inc
adc
jge
push
cmp
hlt
cli
and
popa
mov
cwtl
dec
push
test
fwait
pushf
data16
fiaddl
xchg
mov
inc
cmp
aas
xchg
ja
repz
push
aad
cmpsb
inc
mov
test
adc
cltd
outsb
add
loop
leave
fs
pop
out
icebp
clc
imul
sub
pop
mov
xlat
dec
sbb
mov
cmpsb
fldcw
dec
mov
and
insb
ds
sbb
jo
js
xor
xchg
sbb
rcrl
stos
mov
add
mov
mov
mov
mov
mov
addb
loop
leave
mov
cmp
mov
subb
sub
std
ss
in
cmpsb
mov
leave
mov
les
mov
sbb
cli
inc
shrb
push
add
stos
lds
mov
popa
sbb
jno
or
repz
and
xor
ss
push
xchg
popf
mov
mov
scas
jb
jp
fnstcw
adc
inc
arpl
mov
ficompl
add
arpl
inc
mov
adc
mov
adc
outsb
test
add
dec
dec
out
mov
push
sub
lock
pushl
dec
loopew
sarl
popa
jns
icebp
push
sub
sbb
mov
fdivs
lcall
dec
adc
dec
lret
lret
dec
cmp
insb
std
repz
decb
jg
add
lcall
add
lret
cmc
cmpl
jle
stos
and
lods
in
aas
jb
faddl
xorl
out
dec
sbb
stos
push
vpinsrw
lret
xchg
xchg
jp
lds
mov
cltd
and
jp
jl
and
repz
or
test
lahf
cmp
mov
in
subb
mov
inc
loope
fildll
scas
push
xlat
dec
xor
sti
lock
pop
cmc
cli
and
jne
mov
inc
xchg
cmc
popf
ret
xchg
jnp
jl
sahf
jecxz
mov
dec
int3
or
xchg
ja
xor
ljmp
push
mov
data16
gs
dec
cmp
sahf
data16
mov
mov
lea
pop
adc
lret
dec
aad
dec
imul
pop
out
bound
out
sbb
xor
pop
mov
rcrb
sub
dec
popf
das
xchg
push
in
push
lahf
mov
mov
mov
fwait
ret
mov
mov
cmp
test
xchg
cmp
add
dec
add
jmp
sbb
jmp
nop
xlat
jle
xchg
out
cmp
adc
mov
push
push
or
mov
scas
push
std
xchg
pop
loope
shrb
les
cmpsl
ds
lret
mov
jg
lret
cmp
popf
xchg
in
add
es
inc
adcb
adc
icebp
das
pop
push
jbe
in
pop
aas
pushf
jmp
push
push
es
xchg
cld
and
adc
ja
or
imul
icebp
in
push
lcall
mov
fbld
jo
orb
stc
cmp
out
scas
adc
pop
pop
and
jmp
inc
call
dec
in
dec
sub
xchg
test
data16
stos
xchg
jne
loope
ficompl
ja
imul
test
inc
aaa
imul
adc
fcoms
enter
popf
xor
xchg
aad
mov
icebp
jmp
dec
mov
stos
repz
insb
scas
lds
fbld
aas
lds
out
iret
scas
add
lret
jge
xor
jae
jbe
dec
movsb
adc
push
insl
xor
test
mov
hlt
inc
inc
mov
test
jb
out
outsb
cli
out
out
and
inc
lret
pop
dec
push
adc
dec
and
add
push
addb
or
lcall
out
std
repz
xchg
add
mov
arpl
repnz
ja
adc
fmuls
jg
sbbb
or
mov
jge
mov
mov
int
js
pandn
clc
in
xchg
xor
adc
sub
rcrb
lock
int
inc
scas
cmpsb
bound
push
add
cs
pop
push
out
cmp
pop
xor
jmp
rol
adc
dec
sub
add
and
daa
sub
or
pop
cmp
sbb
jmp
or
pop
in
xchg
enter
sbb
int3
jmp
add
addl
imul
sub
rolb
add
aaa
mov
popf
adc
into
jo
mov
divb
call
adc
pushf
mov
jl
inc
mov
xchg
jo
and
pop
sub
fisubrs
fs
dec
shrl
mov
push
aaa
push
std
in
enter
popf
mov
ljmp
mov
cli
sahf
pop
cmp
or
clc
lds
lods
jne
sbb
sbb
xchg
das
push
push
jns
scas
sbb
xchg
pop
push
ss
adc
aad
aaa
iret
dec
ds
data16
add
cmp
daa
xchg
insb
mov
test
and
mov
adc
fsts
nop
or
orb
xor
addr16
test
adc
jecxz
jns
xchg
je
out
mov
je
das
push
xchg
negl
mov
mov
repnz
push
mov
imul
outsl
dec
mov
inc
out
mov
push
inc
scas
mov
in
mov
out
stc
lods
push
rcrl
push
iret
popa
pop
mov
lahf
inc
push
popa
or
mov
sbb
shll
out
les
icebp
mov
adc
push
or
insl
mov
push
xchg
jns
pop
cmp
std
jo
xchg
ret
mov
insl
insb
sti
int
sarl
pop
loope
inc
sub
enter
inc
push
stc
add
stc
pop
push
sbb
imul
jl
leave
push
nop
pop
sbb
ficoms
mov
mov
pop
push
xor
aaa
dec
clc
add
adc
or
inc
xchg
enter
repz
in
or
lods
sub
xchg
cmpsl
inc
pop
push
jge
icebp
arpl
jb
jle
repnz
pop
rorb
in
mov
adc
inc
sub
pusha
mov
fcomp
lea
testb
sbb
sahf
enter
cwtl
cmp
sbb
jmp
lret
pop
lret
mov
push
dec
and
hlt
push
inc
xor
fcmovu
add
sub
in
pop
lcall
xchg
test
ljmp
out
add
and
fbstp
xchg
les
scas
mov
or
out
or
bound
pop
and
jnp
lock
xchg
js
mov
out
mov
xor
inc
jne
in
insl
lcall
test
inc
bound
leave
jg
push
test
xchg
jle
sarl
test
adc
xchg
dec
gs
repnz
sub
fcmovne
in
popa
xchg
sbb
pop
sbb
jp
popf
movsb
and
negl
stc
fxam
push
adc
hlt
push
enter
push
fistps
orl
arpl
push
lds
clc
cmp
adc
mov
test
jg
pop
sub
push
fcmovne
dec
jmp
jg
sub
adc
push
adc
jecxz
das
mov
mov
arpl
divb
xchg
add
add
mov
cli
pop
push
inc
out
icebp
out
mov
push
jmp
mov
ja
push
lret
je
gs
mov
mov
sbbl
in
add
inc
adcl
stc
cmpsl
stos
mov
push
xchg
inc
cmpsb
in
cltd
shlb
fcmovnb
mov
cmp
xchg
mov
pop
fs
push
divb
test
mov
add
cmp
mov
mov
add
stc
negl
mov
insl
and
sub
and
push
in
add
mov
xor
ret
popaw
xor
mov
xor
gs
lret
sti
xchg
fs
dec
lahf
in
jecxz
repnz
test
jg
mov
mov
bnd
pop
push
mov
jge
pop
add
cmc
cmp
ja
sbbl
gs
insb
adc
or
inc
sub
ret
inc
ds
cmp
jnp
lods
cmc
xor
shll
mov
push
sub
scas
or
ffree
jmp
sbb
hlt
ror
and
and
fistl
xchg
lods
pop
out
ja
rcll
or
xchg
sub
repz
jmp
test
repz
imul
repnz
mov
std
sti
push
test
push
fsts
inc
or
xchg
inc
cmp
ret
xchg
adc
add
push
nop
in
int
into
loop
sbb
in
jge
aad
sahf
mov
mov
xchg
cmp
dec
lcall
es
add
dec
lcall
cmp
xor
iret
and
outsb
sub
pop
pop
mov
ret
filds
jno
cmpsb
ljmp
xchg
js
push
insb
mov
out
xor
push
and
xchg
xchg
pop
imul
inc
and
inc
lahf
ljmp
mov
mov
mov
xchg
out
adc
mov
stos
inc
cwtl
clc
inc
xchg
mov
xorb
movsl
jo
adc
jne
cltd
sub
pushf
enter
cmp
imul
jns
xchg
cwtl
out
pop
cmp
jns
sub
dec
inc
out
inc
mov
jl
mov
out
inc
inc
push
adc
xor
fcmove
js
or
jg
outsl
jp
cmp
jmp
jg
insl
sarl
mov
dec
aas
jle
sub
push
and
dec
sub
mov
mov
or
mov
int3
shlb
addl
movsb
inc
mov
jle
push
fistl
rcrb
lea
mov
pusha
mov
popf
ljmp
stos
jmp
cmp
cmp
jmp
or
cld
cvtps2pd
les
xchg
test
cld
cld
arpl
or
xor
pop
adc
xchg
inc
jg
call
jl
and
repz
mov
lahf
stos
and
cmc
jecxz
mov
mov
popf
xchg
int
popl
pop
xchg
outsb
in
lcall
rorb
xor
mov
lods
mov
pop
cmp
sub
push
clc
sahf
test
das
push
mov
mov
cmpsl
les
adc
dec
xor
mov
xor
xchg
mov
jp
xchg
mov
mov
dec
mov
mov
cld
dec
bound
jns
data16
imul
orb
inc
fiadds
sbb
sub
xchg
inc
adc
push
dec
in
arpl
jbe
adc
mov
leave
sbb
xchg
add
jp
and
add
push
movsl
cmp
mov
mov
shlb
mov
or
pop
add
aaa
inc
cmpl
pop
outsl
out
jmp
cmpl
arpl
inc
sbb
inc
mov
cli
je
mov
xor
fwait
cmc
inc
lahf
lods
cltd
lahf
sub
push
rcrl
ja
adc
xchg
daa
loopne
mov
stos
aaa
inc
dec
rorl
stos
repnz
test
mov
cmpsb
sbb
push
enter
pop
mov
popf
xor
push
psllw
mov
xor
push
les
jne
pusha
xchg
jle
adc
scas
aad
cmp
bound
inc
add
out
fmuls
bound
movsb
jg
cltd
xor
push
cltd
cmc
adc
out
mov
cmp
mov
and
ljmp
xor
addr16
dec
sub
test
push
inc
scas
nop
imulb
cs
sti
mov
and
cmc
setnp
jae
pop
adc
mov
jae
mov
sbb
aam
cmc
fisttps
pop
inc
mov
pop
jo
movnti
dec
loopne
addl
enter
aam
fcmovu
pop
call
sahf
xchg
sbb
movsb
shrb
or
push
mov
out
push
inc
jecxz
in
sbb
push
inc
or
push
pop
out
xorl
popa
or
in
cmp
popf
test
sbb
data16
sbb
push
lods
popa
cmc
daa
xorb
push
xchg
or
pop
aas
jl
pop
repnz
pop
add
lret
push
mov
sbb
vmptrld
dec
sbb
daa
rcrl
add
test
push
jnp
inc
aam
dec
out
push
mov
dec
clc
add
sub
mov
gs
adc
dec
xchg
sbb
inc
loop
push
pop
leave
lcall
cld
cltd
in
ss
fldcw
xlat
lcall
lahf
and
test
cs
sub
test
inc
mov
or
shlb
adc
mov
daa
out
daa
cld
jns
idivb
out
add
lock
scas
imul
sub
jmp
adc
and
mov
push
xrelease
cli
pop
push
mov
ss
scas
or
xchg
gs
loope
scas
xchg
out
shrb
call
cmp
scas
mov
push
ffreep
scas
test
lcall
repz
cmp
lods
or
sbb
jp
scas
mov
dec
mov
imul
ret
xor
cltd
fstp
adc
xlat
cmp
imul
outsl
int3
pop
push
cmc
jns
jno
or
call
cltd
inc
cmpsb
scas
int3
outsb
je
xor
pop
adc
mov
xchg
mov
fs
shrb
dec
push
dec
sub
out
fmull
or
sarb
sbb
sbb
adc
cmpsl
shrb
push
push
aad
test
dec
push
mov
xchg
mov
dec
pop
dec
dec
push
stc
adc
icebp
add
dec
adcb
xchg
adc
cmp
mov
std
test
dec
testb
or
popf
pop
add
mov
xchg
jbe
mov
sbb
jne
incl
or
xchg
add
gs
out
lods
test
call
mov
xor
shrl
loope
inc
rcl
idivl
rcll
sub
dec
call
xor
sub
sub
and
lock
ss
out
cmp
ss
stos
pop
repnz
inc
lea
fists
mov
mov
jb
imul
add
lods
xor
xchg
outsl
jne
pop
or
test
sbb
sub
xchg
je
cmp
mov
dec
pop
cmp
xor
popf
xchg
cltd
addr16
stos
inc
sub
repz
sub
inc
sub
clc
fcmovnu
inc
jb
enter
mov
sub
sbb
dec
aaa
enter
stos
dec
mov
pop
push
jae
adc
mov
or
mov
out
mov
mov
cltd
mov
mov
mov
and
adc
lea
mov
mov
and
idivl
inc
sbb
push
mov
inc
xor
dec
xor
sub
xchg
lock
pop
adcl
js
or
ja
int
sarl
push
sahf
xor
mov
or
int
aad
hlt
sbb
jmp
mov
add
jns
addr16
mov
push
inc
enter
push
inc
lods
out
mov
pop
pop
xchg
les
aaa
xlat
sahf
insl
shr
es
iret
cmp
xchg
fidivrs
test
addr16
enter
push
stos
stos
sub
aas
cmp
cmp
mov
jno
mov
dec
or
loop
sahf
cmp
mov
add
pop
xor
ficompl
dec
mov
adc
popa
mov
sahf
push
ss
cld
sub
adc
fcomp
and
lock
xchg
cmp
or
push
ret
pop
js
jecxz
hlt
push
lahf
mov
test
xchg
clc
or
cmc
add
lds
rorl
popa
loop
aam
int3
in
insl
aas
and
mov
xor
xor
lock
cmpsl
or
xchg
iret
lods
jmp
inc
cmp
add
fstpt
mov
fbstp
pop
jl
roll
dec
jo
pop
lahf
sarl
call
sarl
dec
scas
sub
in
stos
lcall
stos
inc
int3
je
push
jae
jnp
cwtl
movsb
push
ror
inc
cmp
xor
xchg
jle
jae
sbb
add
mov
pop
ret
icebp
or
mov
mov
jle
mov
push
out
call
cmp
andb
fdivrs
lds
in
lcall
in
sahf
push
mov
js
mov
sub
clc
mov
push
xor
pop
jbe
mov
sahf
jae
outsl
xor
divl
stos
cmp
push
addr16
int
shl
lret
or
repnz
iret
aam
out
cmp
roll
cwtl
jne
mov
aas
mov
in
xchg
fwait
data16
adc
fiadds
stc
and
xchg
les
ret
cld
sti
sbb
mov
xlat
les
stos
jl
insb
sbb
dec
adc
sub
lods
add
adc
jbe
in
pop
rclb
inc
lock
dec
jns
cmp
addr16
mov
pop
bound
cmp
xchg
inc
sbb
clc
push
pop
mov
lret
inc
inc
mov
xchg
jne
pop
inc
jb
mov
inc
push
lcall
in
jmp
lret
jp
xor
inc
push
mov
jmp
mov
mul
imul
dec
pop
aaa
push
pop
mov
outsl
dec
xor
mov
jns
jae
push
or
cmp
fsubrl
push
ljmp
push
jae
xchg
mov
inc
push
sub
fs
shll
ja
test
clc
xor
fdivrs
xor
sti
inc
in
mov
fwait
imul
aas
imul
std
sub
and
add
sub
out
sub
jo
inc
dec
sbb
out
jne
rolb
mov
nop
xchg
xor
jo
in
or
data16
jp
into
aad
and
or
jg
inc
loope
scas
xchg
clc
push
xor
xor
mov
inc
nop
and
in
sub
pop
add
adc
fists
in
into
nop
movsl
les
nop
xchg
mov
addr16
pop
test
inc
inc
add
push
mov
fcompl
push
loopne
xor
dec
inc
sbb
cmp
arpl
cmpsb
and
sub
adc
pop
mov
push
mov
cltd
adc
aas
outsl
xor
mov
stos
mov
cmpsb
out
loopne
xchg
lods
mov
push
pop
mov
nop
cmpsl
add
inc
adcl
pop
cli
inc
mov
adc
lahf
popa
out
sub
mov
sbb
into
and
pop
jg
mov
movsl
pushf
inc
pop
push
push
or
cmp
test
mov
in
rorl
pop
cmp
mov
shrb
lds
aas
pop
pop
lock
jbe
push
shlb
push
js
fldt
and
jne
pushf
dec
shl
pop
push
repz
xchg
push
adc
and
cmp
mov
or
fwait
test
sahf
fisttps
ret
lahf
jle
shrl
loopne
jp
lods
in
jnp
mov
mov
mov
imul
out
into
push
fwait
shr
sbb
mov
dec
mov
iret
pop
clc
call
rcr
movq
sub
and
es
out
mov
dec
lods
push
test
scas
enter
cltd
lahf
adc
xchg
loop
sahf
nop
rcl
mov
insb
add
es
cmp
testb
sbb
push
in
mov
je
mov
fs
mov
orl
dec
repz
aaa
sub
dec
mov
jle
test
call
push
jg
lds
fwait
ret
jl
or
pop
ss
addr16
mov
mov
inc
push
jge
jo
pop
and
lretw
lcall
mov
xchg
pop
clc
xor
lcall
jle
movl
xchg
outsl
xor
xor
sub
jge
nop
cmp
jbe
rcr
xor
dec
mov
sbb
mov
test
addb
stc
lret
hlt
std
roll
jbe
mov
leave
and
movsl
jle
adc
adc
and
push
push
leave
inc
add
sbb
add
xchg
push
les
or
mov
subb
std
adc
mulb
mov
fisttpl
push
jnp
mov
or
mov
ror
push
add
leave
sar
mov
xlat
sub
sbb
jg
bound
je
test
add
xchg
and
push
negb
sti
inc
xchg
and
psllq
das
daa
dec
xor
mov
jp
push
xor
outsb
xchg
inc
mov
popf
push
pop
and
cmp
out
dec
mov
repnz
outsl
repnz
iret
repz
push
add
adc
test
sub
ja
ja
bound
test
and
es
insl
dec
pop
dec
xchg
sti
lods
jle
mov
pushf
jl
jno
loope
mov
in
sti
pop
out
push
sub
stc
popf
dec
int3
xlat
pop
pushf
loope
pop
xor
mov
loopne
or
inc
test
lea
jp
mov
mov
adc
int3
mov
sahf
mov
or
and
cmp
test
xchg
inc
sub
xchg
push
push
test
xor
adc
into
mov
mov
cs
cmp
push
sbb
and
lret
dec
call
xchg
dec
cwtl
scas
cmp
push
ljmp
repnz
inc
dec
cs
lock
or
cmp
aaa
jle
lds
iret
shr
loop
sbb
pop
fmuls
sub
mov
cmp
and
fdivrl
aaa
movsb
aam
cmp
lock
fwait
out
rcll
mov
xor
imul
fbld
mov
mov
add
jne
outsb
mov
sub
pop
fidivrl
jnp
out
xchg
xchg
lds
jnp
cmpsl
dec
push
push
add
xchg
cli
xor
ror
adc
insb
add
sbb
xchg
pop
scas
jns
and
xor
jmp
shlb
les
push
sub
xchg
repnz
adc
cmpsl
int3
push
mov
xchg
inc
pop
cmp
rcl
scas
negl
fiadds
cmp
mov
inc
lods
jl
loop,pn
ret
sub
stos
push
outsl
pop
mov
sbb
jmp
lods
fwait
dec
out
mov
stos
mov
dec
sub
add
cmpsl
rolb
fsubl
pop
enter
sti
dec
xchg
adc
mov
mov
test
inc
jl
xchg
pop
scas
outsl
or
test
cmp
data16
scas
xlat
mov
negl
xor
rclb
test
push
scas
icebp
mull
bound
add
and
ud1
incb
test
xlat
mov
or
ret
pop
sub
mov
fsts
mov
mov
cmpsb
cli
xchg
xor
push
movsl
inc
jp
dec
sbb
cmp
jg
insl
mov
sbb
mov
cmp
repnz
mov
mov
sbb
cmpsb
cmp
nop
icebp
add
or
in
xchg
loope
mov
add
enter
scas
daa
mov
cmp
in
xchg
cmp
jle
dec
xchg
clc
mul
nop
ret
adc
cmp
jne
movhlps
jecxz
adc
roll
out
sbb
cmc
and
lods
negl
dec
xor
or
dec
sub
xchg
dec
ret
xor
pop
flds
aam
inc
and
loopne
mov
xchg
clc
mov
cld
or
cmpl
pop
movsb
lret
xchg
mov
repz
loope
dec
shlb
add
sbb
sub
nop
into
lods
or
outsl
lds
sub
rorl
movsb
lahf
dec
fsub
mov
mov
in
add
clc
add
popa
gs
test
or
lods
mov
push
aaa
push
jl
fstpl
push
sbb
sub
mov
sbb
cltd
cmpsb
xor
rcr
repz
mov
adc
outsb
xor
dec
cmp
dec
xchg
popf
mov
stc
xchg
pop
mov
pop
sbb
pusha
add
jae
lcall
in
sahf
out
jo
mov
in
pop
stos
lea
mov
mov
sbb
sbb
pop
into
mov
xchg
cmpsb
pop
mov
and
xchg
outsl
xchg
rcl
fdivrl
sbb
cwtl
icebp
push
sbb
addr16
and
push
mov
push
or
push
jmp
fsubrs
xlat
cmp
pop
int
inc
push
psubq
out
ret
mov
outsl
js
mov
lret
pop
cmp
iret
xor
hlt
adc
pop
imul
cmpsb
and
push
fucomp
mov
sbbl
sub
push
xchg
cmp
push
cmpsl
sub
xchg
js
mov
pop
iret
sbb
outsl
test
ret
bound
pop
xchg
pop
cltd
pusha
dec
gs
push
xchg
mov
jno
mov
add
pop
jbe
fcoml
outsl
jecxz
popf
add
pop
int
mov
cmpsl
pushf
xorl
mov
push
scas
xlat
cmpsl
aam
pop
mov
mov
cmp
add
dec
cmp
push
sbb
scas
test
xor
xchg
rcrl
ret
mov
pop
jl
stos
daa
add
loopne
sahf
jo
mov
inc
pusha
data16
dec
mov
popf
xor
lcall
add
lds
pop
shl
sub
jg
arpl
adc
les
ljmp
pop
clc
mov
mov
inc
dec
sub
pusha
dec
xchg
push
into
sti
testb
mov
push
sbb
incl
fwait
pop
out
sub
adc
mov
xchg
and
movsb
std
aas
in
sub
mov
call
pop
neg
cmp
mull
lcall
faddl
cmp
sti
dec
lods
or
mov
cmp
mov
sub
fdivrl
jmp
test
loop
scas
inc
lods
mov
cmp
comiss
xlat
popf
lock
out
stos
cmc
clc
mov
repz
test
das
inc
mov
xchg
shlb
rcrl
sbb
jecxz
inc
nop
mov
out
mov
pushf
pop
lcall
cmc
xchg
test
testl
outsl
sbb
ret
add
or
and
divl
fdivrs
test
scas
mov
cmp
insb
sahf
lods
roll
into
jbe
popf
mov
loopne
scas
in
push
pop
pop
cwtl
pop
sub
adc
aam
je
inc
aad
inc
jp
data16
inc
bound
mull
adc
jg
leave
mov
cwtl
pop
push
adc
ficoms
xor
sahf
inc
je
mov
dec
mov
andb
mov
push
xor
ret
adc
movsl
add
jbe
aas
xor
sbb
dec
adc
adc
aas
push
cld
lds
adc
or
mov
cmc
aam
mov
fisttpl
mov
loop
jnp
mov
lret
je
sbb
jne
sub
fisttps
lahf
mov
idivb
lock
cs
xchg
pop
lcall
mov
cmp
jecxz
mov
mov
movsl
mov
nop
pop
stc
rcrb
jg
sahf
push
fucomip
jb
pop
push
sbb
dec
stos
pop
fs
pop
push
cwtl
mov
iret
mov
lods
ljmp
xchg
into
test
xchg
int
in
inc
mov
adc
push
insb
enter
cwtl
lret
dec
push
fs
mov
push
imul
mov
and
jp
lahf
fs
mov
xor
stc
addr16
inc
in
sub
movsb
je
mov
ret
insl
leave
outsl
push
into
shll
inc
insl
and
mov
mov
and
push
mov
mov
pushf
cld
mov
clc
mov
push
add
inc
xchg
xchg
jo
xor
rcrl
jp
adc
cli
cmc
daa
push
rorl
xchg
or
inc
xchg
bound
stos
incl
jae
push
cmp
sbb
fwait
insb
inc
xrelease
mov
cmp
gs
inc
sub
mov
rclb
call
test
adc
pop
sbb
clc
sbbl
in
mov
pop
jecxz
fs
xor
pop
add
cmp
cmpsl
lods
into
cwtl
outsb
and
clc
dec
push
and
daa
dec
xchg
cmp
mov
imul
sub
xor
int3
mov
mov
adc
inc
and
or
mov
fst
jae
adc
or
popf
sub
addl
inc
fstl
push
dec
es
pop
adc
cmc
or
ds
adcl
xlat
adc
enter
jae
add
adc
loope
mov
aas
out
sub
loope
jg
inc
outsl
fidivs
icebp
enter
lds
push
mov
insb
dec
add
pop
and
pop
aad
in
mov
jb
jo
mov
push
pop
int3
adc
les
push
movb
outsb
ja
xor
jne
stos
and
loopne
xor
mov
xor
mov
incl
xor
cmp
out
xor
mov
push
popf
or
inc
data16
inc
outsb
inc
int
xchg
pushf
mov
xor
inc
sbb
lock
bound
movsl
mov
ja
cwtl
xchg
insl
pusha
cli
xor
loope
movsb
arpl
cmp
mov
and
xchg
dec
cmpb
fdivr
xchg
pop
inc
xchg
push
push
cs
or
inc
add
add
xchg
lock
mov
or
mov
rcl
lcall
xchg
mov
xor
imul
cli
jnp
out
mov
ret
imul
add
xchg
dec
pop
incl
loope
mov
in
xchg
sahf
dec
fidivrl
aas
cmp
pusha
cwtl
dec
fstpt
scas
fs
sbb
sbb
or
and
out
push
lcall
mov
int
repnz
inc
push
sub
sub
ljmp
cmp
ljmp
mov
nop
mov
sub
andl
lods
mov
stos
push
mov
out
out
inc
pop
pusha
out
jnp
inc
and
and
xor
jp
cmp
stc
call
xor
cmpsb
std
aad
stc
push
mov
fcmovu
test
push
in
mov
add
cltd
test
rclb
pop
clc
cmp
stc
pop
cs
add
mov
into
gs
mov
rol
inc
mov
push
jmp
stos
and
out
xlat
inc
jg
mov
xchg
adc
lea
or
insb
sub
std
pop
icebp
jbe
in
mov
or
push
sbb
sub
add
repz
and
jl
lret
enter
and
mov
or
jecxz
mov
sub
test
lret
jae
lods
jne
decb
lods
mov
inc
dec
js
and
add
inc
inc
jge
scas
lret
mov
clc
push
sti
sahf
xchg
popf
or
xchg
push
outsb
fsubrl
in
out
sub
ret
loop
cli
or
lcall
dec
xor
sbb
lods
pusha
jecxz
sub
pop
das
mov
push
xchg
sub
pop
push
fwait
das
cmp
add
push
pop
jle
arpl
lahf
test
mov
out
fcompl
dec
add
push
cmp
fwait
xor
jle
adc
cwtl
test
cmc
push
sub
mov
mov
mov
add
stos
leave
inc
pop
out
cli
mov
and
xrelease
xchg
jle
push
int3
out
xchg
inc
xchg
dec
xchg
add
sub
orb
ja
push
mov
clc
fcoms
lods
mov
repz
or
inc
jmp
jmp
out
popa
xchg
scas
rcrl
add
lock
das
rcr
mov
fdivrs
sbb
dec
stos
pushf
or
cltd
fdivrl
icebp
inc
ja
test
sub
jmp
daa
sub
stc
and
adc
stos
and
insl
add
mov
push
pop
cmp
push
rcl
mov
fstpl
mov
sub
cs
sti
xchg
fwait
or
sub
test
lcall
sub
mov
inc
daa
mov
cli
cmp
rclb
rorb
scas
shlb
push
add
repz
in
jne
add
adc
mov
mov
mov
mov
sbb
jne
or
sbb
and
xchg
lahf
jl
jg
ja
pop
repz
dec
sti
xor
mov
scas
xor
flds
movsl
sbb
or
dec
movsb
lea
xor
adc
sub
mov
loope
jo
dec
test
jmp
mov
dec
loopne
pop
outsl
mov
push
mov
or
push
mov
std
sarb
or
mov
and
es
cmp
in
fisubrl
jae
push
add
fwait
lret
xchg
ret
repz
mull
mov
sub
aas
shrb
jne
scas
clc
push
mov
in
sahf
sub
or
pop
jns
inc
mov
imul
sub
mulb
punpcklwd
inc
sub
adc
mov
rep
add
xor
cld
and
lahf
inc
mov
push
popa
mov
push
pop
lods
lea
inc
jle
testl
fisttps
adc
jmp
adc
call
shll
xlat
fwait
mov
dec
sbb
movsb
mov
rcll
fstpt
rcrb
cmp
push
dec
out
test
inc
je
adc
cli
jg
stos
jg
mov
iret
rcrb
inc
adc
inc
sbb
test
sarb
ljmp
ss
int3
mov
sbb
cmc
push
rorb
add
sub
fs
cmp
sahf
or
cmp
push
mov
dec
and
sub
inc
push
aad
scas
sbb
shll
sarb
sub
jmp
enter
pop
jns
pop
in
jle
mov
iret
pushf
or
cmp
xchg
and
xchg
mov
ret
pusha
pop
mov
cmc
cmp
shrb
cmp
mov
jp
dec
f2xm1
rcll
mov
out
sbb
enter
add
in
rcr
lods
mov
int3
addb
data16
sub
outsb
pop
loop
mov
icebp
sbb
mov
lcall
cmpsl
in
std
push
jle
loop
jo
dec
jae
mov
lods
sub
aas
dec
ret
sbb
or
lea
dec
iret
jmp
add
dec
shr
das
or
cmpsb
xlat
rorb
inc
cli
mov
dec
xorl
fxch
xor
sbb
add
inc
inc
cmpsb
sahf
call
rorb
xchg
mov
pop
pop
sbb
add
push
xchg
loopne
out
pop
inc
sbb
aaa
out
sbb
dec
or
rorb
addr16
in
clc
push
imul
lret
pusha
push
mov
hlt
mov
fcomps
aad
push
dec
sar
push
jmp
int3
xor
mov
xor
xchg
cmp
stc
hlt
aad
insl
ret
sarl
pop
inc
aaa
fisttpl
leave
adc
adc
cmp
sub
cld
mov
push
adcb
mov
sub
sub
mov
repz
xorb
cmpsb
fdivp
int3
pop
or
out
shl
rorl
xchg
es
fldl
jge
fwait
aaa
pushf
rcl
popf
lea
in
aas
jg
lea
adc
pop
sbb
je
ret
jae
negb
and
fimull
cli
dec
dec
mov
cmp
adc
and
mov
mov
and
mov
test
sub
pop
and
ja
orb
mov
push
cld
mov
sub
mov
ret
jmp
push
sbb
test
jne
mov
dec
lret
fcom
and
sbb
mov
push
imul
sub
push
and
xor
std
dec
nop
stos
sbb
push
jl
sahf
xor
cli
testl
out
pusha
int3
addr16
aad
pop
add
pop
aam
add
xor
add
aas
adc
add
dec
mov
fisubrl
adc
push
push
popa
outsl
mov
outsb
mov
jl
xchg
and
inc
imul
pop
leave
icebp
movsb
inc
dec
outsb
push
sahf
mov
push
add
xchg
add
lods
aaa
es
stos
test
rcr
and
repnz
ret
jbe
addl
clc
pop
outsl
mov
mov
stc
mov
dec
mov
pop
sub
test
xor
idiv
pop
inc
inc
jp
or
sub
mov
lea
sub
inc
pop
cli
rorl
fdivrs
iret
mov
dec
pop
imul
imul
xor
fidivl
pop
ja
aaa
pop
mov
cld
movsb
rcrl
mov
sub
cltd
mov
add
push
shll
pop
imul
push
ficoms
sub
inc
mov
aaa
pop
mov
mov
movsb
xor
xlat
icebp
push
sbb
push
dec
xchg
mov
dec
ja
jb
cltd
mov
add
jle
pop
stos
fistl
pop
lret
int
lahf
gs
cmpsl
sahf
sub
push
pop
daa
pop
cltd
push
cmp
std
out
in
mov
fucomp
push
mov
ljmp
fadds
pop
or
ja
fistps
jns
xor
add
ds
fwait
jb
andl
inc
xor
xchg
dec
jmp
jnp
scas
fs
xchg
popa
sbb
lds
or
xor
xchg
jle
add
repz
aaa
dec
fsin
fildl
pop
mov
sub
fwait
inc
mov
sti
mov
cmpsl
cmp
mov
out
fwait
pop
mov
push
and
mov
addb
outsl
sbb
mov
or
sbb
inc
int
sub
je
ret
popf
cmp
in
fldl
or
inc
and
dec
xchg
pop
inc
rolb
and
sub
outsl
inc
lret
and
stos
cmp
popf
js
add
lret
ror
ds
andb
jns
mov
jnp
lcall
and
xchg
sub
cli
sub
outsb
and
stos
clc
arpl
xchg
xchg
lds
xlat
mov
in
popf
pop
icebp
and
jo
mov
pop
sub
arpl
bound
repnz
ret
sbb
frstor
xchg
test
sar
rcrl
es
sbb
inc
mov
call
pop
inc
adc
bnd
add
inc
lods
jge
dec
in
xor
adc
jmp
sahf
clc
or
sbb
popa
dec
pop
fisttps
dec
xchg
or
cwtl
and
sub
cli
sbbb
pop
test
pop
mov
or
cltd
adc
dec
out
mov
ret
mov
push
or
push
xor
push
pop
and
lods
jp
push
jg
aaa
jle
mov
pop
ss
int3
popf
loop
ljmp
mov
jle
cmpsb
pop
xchg
pop
test
jns
pop
push
or
fcmovnb
mov
xchg
mov
adc
idivl
add
addb
adc
mov
int
stos
cmp
orb
fnstsw
outsl
fs
mov
xlat
insb
or
ljmp
mov
lds
pop
aas
sub
add
and
inc
cld
lods
mov
outsb
stos
loop
aad
sbb
cli
shll
in
orl
test
and
shll
fdivr
iret
mov
clc
in
pop
mov
repnz
mov
or
sub
pop
mov
inc
pop
or
jae
in
inc
mov
adc
adc
jo
sbb
std
lea
loope
dec
je
mov
das
cwtl
out
addl
in
mov
adc
adc
sub
push
push
mov
xlat
repz
imul
loopne
pop
dec
xor
xchg
jp
pop
xchg
data16
stos
je
cli
fcmovnbe
inc
inc
fcomip
pusha
lcall
or
xor
cmp
fdivrl
call
mov
out
in
addl
sbb
push
or
dec
ds
in
push
xchg
add
test
pop
enter
jnp
cmpsb
loope
xchg
or
fdivrl
stos
or
dec
fisubl
out
cmpsl
sub
jl
out
rcl
mov
int
int3
adc
jo
xchg
mov
mov
lret
fsubrl
xor
movsb
mov
not
pusha
add
jp
inc
lahf
cmp
imul
mov
insb
imul
ja
ds
cld
jg
fiadds
ror
lds
enter
inc
jecxz
nop
xor
dec
and
ret
les
jle
mov
outsl
xchg
inc
pop
fwait
adc
inc
frstor
movsb
or
and
or
xchg
push
mov
stc
sbb
dec
add
jmp
pop
cmc
mov
movsl
mov
dec
std
je
mov
jmp
jmp
mov
test
xor
dec
sbb
sbb
in
xor
sub
fnstenv
jge
mov
mov
xorl
jnp
rol
mov
test
xorps
hlt
pop
adc
shll
jb
out
loope
xor
dec
lahf
fwait
sub
sar
adc
mov
aad
inc
fs
xlat
jo
das
fisubl
insb
daa
loopne
cmp
jno
jge
xor
and
add
cwtl
pop
xchg
cld
adc
mov
aaa
xor
mov
inc
clc
mov
cmp
cmp
push
jne
les
jno
cltd
push
cwtl
fcomi
or
xchg
cmp
stc
loope
je
and
xor
aad
and
jg
push
shrb
push
es
push
fimuls
shll
mov
mov
and
mov
dec
fnstsw
loope
push
mov
and
inc
cld
jp
fisttpll
sub
pop
ret
in
icebp
sub
add
movsl
cwtl
ja
inc
fsts
jno
pop
mov
dec
rcrl
push
scas
xor
sbb
rol
movsl
push
xor
push
lods
ss
pop
and
jmp
in
popa
lock
ja
mov
stc
aaa
cmc
scas
cmp
shlb
jp
add
ret
xor
and
jle
mov
subps
jns
adc
nop
test
adc
imul
ja
jbe
cmp
jecxz
mov
cmp
xor
movb
xor
dec
push
fcomp
pop
sub
mov
and
adc
sbb
push
cmpsl
inc
mov
ss
dec
das
push
hlt
pop
pop
iret
mov
cmp
div
arpl
test
rorl
sti
sub
into
sti
lds
push
fistl
loop
sbb
roll
ljmp
jae
xchg
inc
pop
xor
fistpll
sub
jae
and
andl
outsl
lret
mov
and
push
and
xchg
nop
pop
add
inc
cwtl
mov
in
movsl
mov
dec
sub
fidivrs
imul
test
cmp
das
insl
mov
inc
adc
jne
pop
into
into
out
lcall
or
pop
sub
add
jge
inc
mov
xor
or
inc
dec
es
cltd
push
sub
mov
rolb
cmp
subl
mov
popa
cmp
sub
out
adc
rcr
inc
sbb
out
add
dec
jne
add
test
push
or
dec
bound
hlt
movsb
out
push
jnp
shrb
and
sahf
lods
sbb
shll
xor
inc
xchg
add
lea
into
dec
xchg
xchg
jmp
dec
mov
mov
nop
loope
fcoml
out
sbb
test
inc
jmp
stc
pop
lods
das
push
pop
xchg
push
pop
dec
insb
scas
xchg
mov
pop
cld
nop
or
pop
lahf
lock
push
gs
add
xor
outsl
mov
push
pop
sub
inc
xor
adc
fiadds
jnp
stos
pop
scas
xchg
fwait
sub
cwtl
mov
fwait
add
inc
mov
addb
push
sahf
mov
outsl
testl
xlat
sbb
les
gs
shrb
push
imul
adc
mov
nop
sub
jmp
imul
jecxz
push
mov
int
stc
inc
cmpsb
push
dec
pop
mov
pop
popf
pop
add
fldl
add
mulb
mov
sub
xor
push
imulb
cmp
push
xchg
test
nop
les
xchg
int3
loop
mov
push
mov
fimuls
pop
stos
int3
adc
mov
push
mov
data16
cwtl
outsl
popa
fucomi
movsl
mov
cli
sbbl
daa
add
shll
inc
test
je
xlat
test
cmp
pop
cli
mov
dec
mov
cltd
push
in
std
es
or
jb
add
loopne
add
fdivs
ret
sbb
lds
adc
fsts
daa
or
sub
stc
or
ret
cltd
lret
fwait
adc
lret
into
push
sub
xchg
dec
xor
lods
outsl
pop
aaa
loope
movsb
sti
out
jecxz
stc
jg
jne
test
push
and
mov
rclb
add
fistl
mov
mov
repz
rolb
mov
fptan
mov
push
lods
and
or
ljmp
dec
das
daa
std
fwait
and
cmpsl
push
add
xor
add
repz
push
fmuls
jnp
cltd
scas
add
jae
aas
fst
sti
leave
popa
lds
pusha
rcl
leave
call
std
stos
movsl
ret
jae
jle
in
mov
dec
sbb
popa
outsb
xor
movsb
aas
fidivrs
add
in
mov
jecxz
cmpsl
outsl
jmp
scas
push
inc
mov
data16
lret
mov
fisubl
scas
jg
jge
cmp
lret
dec
pop
mov
xor
out
adc
jnp
xor
add
imul
cmp
aas
inc
push
roll
scas
jp
mov
or
jg
pop
sub
xorl
jb
iret
sub
jbe
enter
xchg
test
and
or
xchg
fwait
xrelease
xchg
push
mov
xor
lods
rcl
das
insb
mov
aam
push
arpl
inc
push
push
adc
iret
sub
movsl
in
adc
or
push
push
pop
mov
dec
insb
inc
or
add
in
sbbb
sub
mov
dec
inc
sub
sbb
mov
test
cwtl
sbb
clc
dec
cmp
mov
loope
push
cmp
pop
add
inc
sbb
adc
cmc
sub
int
pop
cli
dec
dec
and
push
fadd
adc
loope
cwtl
xchg
call
cmp
pop
push
xor
popf
cmp
test
sti
pop
push
lcall
or
dec
fwait
lret
or
fstpt
fsubr
and
dec
push
push
fidivrs
mov
repnz
jno
mov
jne
adc
pushl
loopne
xchg
mov
pop
mov
repnz
rep
sbb
add
push
adcb
pushf
sbb
xor
sbb
fwait
jle
sahf
cmpl
push
imul
xchg
xchg
imul
pop
or
xchg
ret
adc
stc
cmp
fucomip
leave
test
fnsave
jle
pusha
rcrl
lds
add
and
loop
and
aaa
and
push
fwait
push
xor
loopne
mov
movsl
inc
sarb
test
fstps
ror
pop
xchg
xor
rcr
jae
push
add
daa
fldcw
aad
and
in
and
xor
sti
xor
sbb
insb
rolb
push
jae
mov
shrl
fs
shl
cld
fildl
pop
subl
cmp
fcmovne
jns
ljmp
mov
outsl
xchg
hlt
mov
fldenv
mov
mov
push
in
nop
ret
push
mov
and
xchg
mov
test
push
enter
inc
or
icebp
xor
vmovsd
jmp
mov
insb
push
in
loop
mull
or
fsubl
out
pop
int3
ja
jle
and
call
cmpsl
enter
inc
aad
dec
pop
sbb
out
out
mov
and
mov
adc
cs
push
sar
adc
adc
icebp
jb
bound
mov
ret
stos
jmp
es
divl
push
mov
lods
push
add
scas
mov
add
into
mov
ret
pop
pop
fimull
xchg
orw
pusha
inc
repnz
and
ret
mov
fcomip
insl
and
mov
ljmp
lret
dec
pop
icebp
or
sahf
adc
out
sub
test
jg
jmp
dec
nop
in
aam
push
cmp
arpl
jmp
and
rorb
and
push
cmpsl
add
ror
add
push
or
scas
shl
leave
and
add
xlat
fbld
mov
mull
push
ror
nop
imul
mov
sti
mov
push
push
mov
inc
pushf
push
fstl
mov
fisubrl
mov
test
aas
cld
or
xlat
sarl
mov
xchg
or
lahf
adc
xor
shlb
mov
mov
repz
scas
cmp
sahf
sub
mov
pop
jmp
ljmp
mov
in
jae
idivb
sub
xchg
cs
xchg
icebp
cld
ss
dec
jb
fs
icebp
mov
or
js
push
test
das
xor
mov
fucomip
test
out
pusha
cmpsl
out
lea
cmp
leave
cli
popl
popf
mov
pop
jns
lahf
inc
imulb
pushl
lock
adc
insb
test
mov
mov
jnp
shll
js
pop
repnz
sbb
mov
or
xor
mov
xor
andb
add
int
or
adc
popf
and
mov
ljmp
mov
popl
push
mov
in
sbb
clc
incl
aam
movl
stos
daa
jle
nop
mov
mov
hlt
sbb
test
scas
in
stos
cmc
inc
addl
jno
xchg
jg
jp
addl
push
ds
xchg
aaa
fs
aaa
cli
in
pop
jp
shlb
lret
dec
rsqrtps
repz
sub
mov
or
sahf
test
shrl
xchg
iret
pop
dec
mov
pop
dec
inc
cmp
or
add
pop
dec
arpl
xchg
mov
enter
popf
cmpsb
mov
mov
cmpsl
xor
mov
lock
jns
fwait
mov
pop
fldt
dec
mov
cmp
decl
mov
fcompl
movq
rclb
ss
les
mov
or
testb
push
pushf
xchg
mov
push
cltd
cmpsb
mov
cmp
je
pop
mov
fcomp
jl
and
into
in
push
loopne
out
loopne
imul
bound
dec
mov
push
sti
mov
dec
dec
sbb
mov
xchg
int3
std
js
adc
mov
dec
or
lcall
movsb
push
mov
xchg
mov
std
inc
test
ret
arpl
lahf
testb
scas
adc
adc
lds
mov
add
jp
sub
pop
sbb
jns
stos
fistps
icebp
in
xlat
push
mov
movsb
push
icebp
dec
sahf
aam
jo
add
xor
ret
lods
test
xor
mov
fwait
call
sbb
jmp
jmp
addl
scas
cmp
jle
sbb
shlb
xor
xor
cmc
ret
aas
sbb
add
xchg
push
inc
rcll
pop
pushl
mov
adc
fistl
dec
jns
inc
adc
inc
add
pop
cmp
mov
mov
or
mov
sbb
mov
aam
test
imul
add
jno
dec
add
mov
aad
jae
int
gs
repnz
pop
mov
xchg
rorl
js
and
rcll
imul
push
and
add
jle
jb
and
lahf
ficoml
addr16
and
subl
vpshlq
or
in
push
fucomip
sbb
lea
push
movsl
adc
out
repz
inc
pop
push
fs
mov
cmpsl
pop
pop
lds
repz
mov
test
mov
fs
daa
insl
push
insl
and
bound
das
jmp
jno
leave
shlb
sub
push
pop
stc
push
insb
pop
and
inc
sbb
enter
popf
push
pop
es
add
add
cmp
idiv
lock
lret
out
imulb
cmp
frstor
bnd
mov
jle
sub
cwtl
nop
jne
mov
jnp
daa
mov
insb
ffreep
adc
loopne
sar
adc
pushf
fst
mov
mov
ret
jbe
sbb
repz
iret
push
addb
cld
or
js
das
leave
xor
aas
int
shlb
mov
mov
in
mov
mov
je
into
sub
rorb
add
aad
or
sbb
addb
testb
mulb
js
sub
xchg
jbe
das
add
and
adc
fisttpll
rcll
clc
outsl
push
es
jb
and
xchg
pop
icebp
iret
push
mov
subl
sti
dec
fpatan
xchg
mov
cmp
daa
cwtl
mov
inc
pushaw
xchg
adc
xor
pop
mov
ja
dec
pop
clc
jle
xchg
dec
aas
addr16
aad
lea
xor
jge
add
mov
in
and
psubd
dec
xor
add
mov
push
lods
pop
and
lcall
mov
arpl
dec
outsb
loop
pop
js
mov
cwtl
dec
dec
inc
push
popfw
jp
mov
stos
enter
and
out
cmp
xchg
inc
sbb
xchg
sbb
sbb
adc
lcall
shl
cmp
push
pop
and
lock
nop
icebp
mov
add
sub
movsb
pop
test
stos
xor
cmpsl
mov
cmp
cmpsb
adc
in
jge
jno
jle
stc
sti
mov
rcl
loopne,pt
and
pusha
inc
jle
jnp
mov
stos
push
xlat
loop
repz
xor
mov
and
mov
mov
sbb
ss
cld
push
dec
repnz
adc
inc
in
pop
addr16
shl
mov
cmpsb
je
and
adc
loopne
sbb
cld
rolb
push
jae
push
popa
popf
aas
sti
pop
cwtl
rolb
xchg
pop
xchg
aaa
push
sahf
sub
bound
push
add
jecxz
icebp
inc
js
shlb
mov
rorl
mov
sbb
jle
xor
lods
add
xor
or
xor
addb
out
mov
jl
sub
andb
inc
xchg
mov
jbe
sub
out
inc
stc
sbb
loop
divb
ret
out
insl
popf
rcrl
aaa
mov
ljmp
and
lds
icebp
dec
pop
adc
mov
pop
lock
cmp
mov
inc
lcall
sahf
movsl
repz
repnz
mov
push
daa
or
mov
or
cmp
jecxz
cmp
jl
out
dec
insl
inc
or
inc
mov
addr16
dec
pop
loope
xchg
add
lock
add
lods
jmp
inc
nop
test
pop
mov
sub
mov
dec
mov
adc
jb
jne
lock
aaa
stos
jp
xor
mov
cltd
sub
sub
idivl
pusha
out
movsb
lds
cmpsb
lcall
int
xlat
push
ss
div
addr16
fcmovbe
mov
test
push
scas
mov
aas
fstpl
push
dec
cmpsb
adc
nop
lahf
stos
jbe
mov
cmp
and
sbb
pop
movsl
inc
loope
xor
xchg
mov
bound
dec
loop
fwait
jmp
ja
out
inc
mov
jb
mov
aaa
or
sahf
push
popa
ljmp
dec
out
mov
push
jo
lds
daa
jmp
outsl
mov
mov
iret
icebp
lahf
add
push
inc
out
aas
jmp
sahf
std
mov
inc
and
not
mov
dec
ljmp
sbb
jbe
jmp
push
xchg
aas
sub
xor
andl
repnz
push
jae
sbb
test
rcl
and
mov
mov
fs
jp
insb
adc
cs
in
fyl2x
or
add
dec
insb
out
test
shll
push
fld
inc
push
sahf
push
mov
out
pop
sahf
sarl
insb
jo
cmp
xorl
sbb
loopne
scas
icebp
cs
fmul
js
ljmp
jl
mov
adc
mov
in
jae
xlat
cmp
testb
loopne
insb
cmpl
incb
test
fcmovnb
mov
lods
fdivl
in
push
or
xor
xchg
or
jmp
cmpsl
pop
mov
int3
xchg
push
jo
int
das
pop
outsl
inc
dec
fwait
into
push
mov
mov
cwtl
les
dec
pushf
adc
push
pop
or
add
cli
movsb
dec
xchg
fimull
cld
dec
jns
sub
pop
test
push
mov
inc
movsb
mov
call
add
icebp
ds
push
add
jne
xchg
mov
sbb
mov
inc
mov
test
jp
pop
imul
jnp
xchg
add
out
cmpsb
data16
ret
cld
sbb
scas
or
sbb
xchg
jno
gs
cld
xchg
xor
inc
adc
sbb
clc
lods
ljmp
test
in
pop
and
pop
xchg
mov
rol
jmp
xchg
lods
jb
jmp
outsl
cmpsb
cmp
int
rol
jge
inc
scas
push
jb
cmpsl
pop
movsb
imul
mov
xor
mov
mov
lcall
es
mov
lea
mov
mov
or
xor
xor
mov
jg
jecxz
sbbb
sbb
int
fwait
or
push
jne
roll
pushf
cld
das
cmp
mov
xchg
add
mov
in
daa
pop
pop
jae
fabs
sub
pop
lret
and
inc
shrl
or
mov
xchg
and
push
gs
sub
pushf
and
bound
inc
inc
in
sub
lea
jg
stos
inc
fldcw
fsts
dec
xor
fs
iret
inc
out
adc
cltd
sarb
mov
or
and
xlat
jo
mov
xchg
ret
sub
js
jge
mov
add
mov
jne
mov
or
dec
in
movsb
mov
in
imul
jno
and
fwait
nop
int3
mov
and
div
mov
ret
pop
movb
sbb
push
dec
ljmp
clc
cmc
leave
sbb
cmp
and
push
fidivrl
test
out
push
stc
push
xlat
cmp
xor
push
roll
pop
mov
pop
aas
jg
es
add
int3
push
sbb
and
lock
cmpsb
mov
pop
cltd
push
mov
cmpsl
imulb
mov
mov
ja
loop
sbb
push
aam
jmp
clc
add
ret
les
loop
scas
adc
dec
cld
neg
out
gs
imul
shl
and
pop
mov
mov
pop
mov
ret
mov
pop
xchg
jo
xchg
fisubrl
pusha
add
ficoms
imul
add
iret
shr
fwait
ljmp
mov
or
mov
xchg
sar
daa
scas
gs
xor
jle
lock
add
call
rol
out
cld
jne
mov
bound
hlt
jecxz
jne
mov
iret
push
cmpl
inc
add
mov
and
loopne
mov
add
inc
inc
repz
sbb
dec
imul
test
cld
cwtl
sub
add
leave
push
aas
mov
cmpsb
fisubrl
pop
popa
inc
cmp
ret
mov
sti
jp
sti
jae
dec
add
lods
sahf
jle
mov
or
bnd
inc
add
aas
enter
add
orl
and
xor
push
and
sub
sahf
xchg
das
subb
idivb
mov
int
loope
xchg
pop
jns
lcall
or
jne
shl
xchg
pop
push
jg
add
sbb
add
sbbl
inc
jbe
repnz
stos
out
shlb
ljmp
dec
test
or
js
les
push
jp
pop
inc
adc
mov
inc
jb
loop
jns
lock
inc
sti
mov
ljmp
mov
pop
adc
and
sub
sub
push
mov
sbb
jmp
add
enter
mov
inc
push
sub
mov
sbb
fs
add
push
dec
push
jg
pop
inc
sbb
sbb
sub
insl
insl
mov
ljmp
dec
repnz
aad
movsb
and
sti
push
scas
jmp
pop
inc
push
sbbl
inc
out
mov
jge
out
ret
sbb
and
push
cmc
dec
pushf
popa
or
add
jnp
sbb
jmp
imul
mov
lods
xchg
pop
daa
mov
and
in
loop
add
mov
xorb
sbb
pop
out
push
cmc
push
jne
inc
es
mov
jns
test
jle
bound
gs
jno
push
mov
or
aam
lret
mov
or
nop
stos
aaa
js
stos
fisubs
lds
pop
das
jno
pop
mov
cmp
jle
add
push
lea
cmpsl
jbe
pop
mov
mov
and
adc
add
fistl
sub
nop
sub
mov
push
cs
mov
imull
pop
arpl
push
pop
jnp
sub
in
shl
std
sahf
sti
lods
cmp
sub
test
or
mov
pusha
int3
mov
jns
jmp
lahf
leave
daa
jle
xor
lods
jae
sbb
test
inc
xorb
mov
dec
out
cmpsl
les
cvttps2pi
adc
sbb
add
mov
mov
cmp
andb
mov
adc
pop
jl
repz
fnstsw
jns
les
mov
in
or
ss
scas
dec
xchg
inc
icebp
or
adc
jo
repz
jp
outsb
push
cmp
dec
inc
test
add
adc
push
cltd
xchg
add
mov
push
icebp
stos
jae
adcb
mov
cmpl
in
decl
jle
inc
fsts
cmp
xor
lret
sub
scas
xor
mov
xor
xchg
adc
js
out
push
mov
mull
pop
mov
out
insb
call
int3
push
xchg
pop
mov
pop
xchg
adc
icebp
out
jae
push
dec
mov
push
pop
out
cmp
xor
pop
pop
in
sub
test
sub
jle
add
jb
sbb
push
cmp
xchg
stc
in
xchg
ds
xchg
xchg
push
jmp
nop
dec
lds
push
in
outsb
cmpsb
or
in
xchg
pop
icebp
dec
push
lret
subl
daa
std
add
push
dec
dec
xchg
push
fdivl
icebp
mov
ret
hlt
or
cs
nop
ss
xor
call
pop
jo
std
xchg
popf
mov
fbld
sub
mov
ljmp
mov
push
xchg
rcrb
scas
xor
cmp
mov
or
mov
into
pop
cmp
push
repz
icebp
mov
pop
mov
or
dec
cmpsl
push
cmc
fldl
xor
inc
push
mov
cmpsl
sub
pop
loope
sub
push
mov
mov
adc
xor
popa
mov
sti
add
mov
fildll
lods
push
cli
sub
loopne
dec
xchg
in
leave
pop
sub
pop
inc
adcl
and
ds
pop
into
mov
rorl
int
cli
repz
dec
jmp
dec
out
loope
outsl
testl
test
lea
dec
and
imul
mov
movsl
cwtl
ret
inc
fldcw
in
sub
sahf
pushf
xchg
inc
movsl
or
scas
inc
sub
fdiv
or
int
dec
inc
out
ror
shlb
sub
imul
test
mov
pop
inc
push
mov
inc
nop
adcb
es
loopne
out
inc
inc
jb
mov
cmc
std
jns
movsb
in
hlt
inc
int
push
jecxz
and
xor
inc
outsb
xor
mov
and
cmp
push
push
push
mov
mov
scas
mov
sbb
or
mov
shlb
dec
rol
outsl
leave
mov
mov
subl
out
fidivs
or
xor
inc
loop
jnp
imul
sarl
fimuls
sbb
push
xchg
adc
xchg
cmp
sahf
jo
or
movsb
data16
and
sbb
jo
jmp
pusha
xchg
call
rclb
orb
call
push
dec
mov
add
mov
das
adc
and
ja
in
push
mov
jl
imul
clc
push
mov
hlt
sub
popa
sbb
mov
pop
testl
push
sarl
andl
xchg
xor
dec
mov
dec
push
mov
push
jecxz
pop
push
xor
mov
lret
addr16
enter
adc
mov
pusha
or
push
roll
mov
inc
fistpll
add
xchg
je
cld
in
inc
xchg
cltd
dec
pop
ljmp
sub
ret
mov
and
popf
push
xchg
add
inc
fs
jmp
mov
jo
je
mov
dec
or
test
pop
mov
xchg
mov
insl
imul
add
inc
scas
mov
xchg
xchg
jae
mov
sti
mov
or
jne
inc
xlat
fsubp
in
mov
xlat
mov
sbb
dec
in
sub
les
add
mov
lods
lahf
xor
sahf
mov
loopne
loop
cmp
mov
outsl
loop
test
cmp
inc
and
ja
cmc
push
push
add
call
subb
jns
adc
add
mov
cmpsb
push
cld
inc
sub
sub
push
popf
jns
pop
movsb
jge
mov
pop
push
imul
and
jmp
jmp
adc
and
sbb
dec
scas
sti
daa
daa
stos
out
daa
out
dec
jl
xchg
js
test
lods
daa
popa
xlat
sbb
shrl
cltd
xchg
mov
add
xchg
or
or
jge
and
mov
mov
test
xchg
aam
lods
mov
push
adc
mov
ret
ljmp
dec
enter
or
leave
mov
pop
xor
out
push
addl
cmp
jbe
mov
ret
aaa
sahf
mov
sub
cmp
dec
cmp
out
addr16
jg
dec
push
ret
cmpsl
fsubs
movsl
or
sbb
mov
xor
add
repz
xchg
or
rorb
mov
out
push
mov
outsl
ds
inc
sbb
adc
lods
and
insb
movsb
xchg
ret
ss
or
rcrb
dec
lods
xor
adc
insl
std
push
sbb
hlt
jmp
jne
les
xchg
int
cmpsl
pop
add
sbb
add
or
inc
and
or
es
mov
mov
pop
sbb
pop
gs
pop
pop
mov
add
and
pop
lock
mov
arpl
cmp
mov
lret
inc
xchg
push
movsb
fnstenv
cltd
push
mov
imul
stc
ds
movsb
scas
test
in
shrl
and
movsl
out
sbbl
sbb
mov
sbb
push
push
test
fwait
sbb
ret
ret
mov
inc
test
out
mov
dec
lret
bound
lcall
xor
cld
fwait
cmp
cmp
sahf
mov
add
jge
sbb
inc
mov
cmp
pop
cmpb
cli
jns
aaa
icebp
sarb
dec
data16
in
push
mov
iret
or
xchg
jle
repz
fsubs
pop
rcrl
out
cltd
movsb
in
mov
cmpl
push
das
and
sbb
and
adc
gs
out
scas
push
sub
add
or
test
sub
and
sbb
jnp
hlt
stos
xor
pop
roll
movntps
es
fwait
mov
sbb
dec
stos
jnp
popa
jns
or
inc
pop
rorl
jb
or
add
adc
inc
sbb
cmpsb
dec
jle
adc
sti
dec
out
push
add
std
lret
inc
psubusb
in
inc
mov
sbb
or
pop
pop
jmp
adcb
or
adc
add
adc
lahf
fdivp
xchg
pop
mov
das
repz
jno
pop
sub
add
dec
jns
add
fidivrs
arpl
icebp
dec
inc
in
push
pop
fcmovu
push
xchg
jle
mov
fs
cmpsb
out
inc
push
and
adc
fmuls
out
mov
not
sbb
and
out
inc
test
icebp
sub
out
imul
sti
scas
xchg
jae
xchg
lret
pop
insl
aas
out
iret
imul
in
gs
cmp
inc
push
xor
out
test
push
in
mov
jmp
je
inc
sarb
rcr
cmpsb
jno
xchg
add
in
inc
mov
les
in
cmpsb
push
xor
pop
mov
lock
add
in
and
mov
dec
mov
dec
in
and
das
movsb
retw
mov
inc
lahf
jge
int
fs
pop
cltd
test
out
push
pop
mov
mov
femms
js
negl
nop
dec
aas
fs
xorb
fisubrl
outsb
out
sub
mov
jmp
mov
rcl
sub
into
fidivrs
adc
popf
loopne
imul
mov
iret
jns
or
mov
mov
mov
mov
cli
mov
xor
cmp
dec
test
cmp
lea
insb
andl
enter
sub
xor
xchg
aad
test
inc
sbb
test
mov
idivb
mov
sub
mov
movsl
xchg
test
mov
dec
xor
push
fcomps
ret
mov
jmp
sbb
fmuls
adc
dec
gs
pop
push
add
cmp
iret
adcw
mov
test
pushl
mov
xchg
cmpsl
or
sub
push
push
mov
inc
xlat
dec
pusha
cli
jne
xlat
test
mov
mov
out
int3
or
push
mov
data16
rorl
pop
jg
repnz
or
fwait
and
out
push
repz
fsubs
sahf
pop
aaa
sbb
test
inc
mov
scas
clc
cltd
push
lea
cs
loopne
or
aam
icebp
lods
sbb
jns
xor
mov
leave
ret
mov
rep
andb
push
inc
movsl
stos
dec
ss
call
xor
jge
sub
add
mov
addr16
lods
popa
mov
mov
lea
popf
mov
daa
scas
aad
jae
cmpsb
xchg
push
sbb
mov
les
jae
inc
cmp
movsl
or
pop
xor
lods
fs
cli
out
inc
sbb
adcb
pop
lock
sbb
lcall
pop
jnp
adc
hlt
jno
pusha
add
add
mov
int3
pop
and
xchg
arpl
jge
xor
mov
rclb
push
inc
sub
cmp
mov
push
loopne
pop
pop
inc
es
jae
test
mov
movsb
roll
adc
dec
xchg
and
jns
jmp
cmpsl
sahf
sub
push
outsb
lcall
inc
aaa
addr16
mov
popf
fildl
sarb
aas
inc
sbb
dec
es
dec
or
ljmp
or
daa
or
dec
insl
negl
pop
add
jnp
pop
insl
addr16
sahf
cmp
mov
jmp
icebp
shrb
jle
movsl
mov
sub
stc
bound
cld
pop
cmp
ds
mov
js
pop
in
insb
pop
in
push
jno
cmp
xor
shlb
xchg
sbb
mov
arpl
cmp
pop
mov
cltd
and
lods
popf
pop
jno
das
insl
decl
int
pop
xchg
mov
lods
push
fmull
inc
leave
or
inc
ss
stos
xor
inc
jbe
je
aad
xor
out
and
push
pop
xchg
pop
aad
andb
ret
out
dec
enter
adc
mov
mov
aad
leave
mov
inc
pop
mov
in
mov
push
lret
dec
shll
sbb
jae
ljmp
pusha
lods
xor
pop
xchg
or
sbbb
add
fdivr
int
mov
mov
lods
scas
and
gs
fldl
bnd
xor
test
pop
dec
cmp
jae
inc
push
cmc
xchg
xor
stc
adc
sar
in
and
sbb
movsb
fcoms
rcr
xlat
or
push
xor
cmp
sub
cli
scas
jne
outsb
outsl
fsubrs
les
xchg
and
and
mov
mov
add
mov
jb
fisttpll
and
or
sti
mov
insb
add
push
push
lret
mov
ss
sbb
pop
fmull
pop
jns
jns
push
nop
mov
pusha
mov
mov
mov
or
and
lea
sarb
je
rcll
mov
cld
inc
sti
pop
mov
pop
pop
adc
sbb
outsl
outsl
jp
and
sub
mov
add
fcompl
inc
add
inc
xchg
jae
je
sub
cmpsl
push
decb
testl
and
inc
adc
mov
jb
pop
jo
mull
xor
out
xor
andb
sub
int
out
cmp
sbb
jbe
insl
or
cmp
inc
lcall
pop
fsubrl
xchg
mov
sbb
xchg
push
fbld
jnp
out
out
fwait
cltd
jb
mov
cmc
dec
and
lcall
aaa
pop
loope
lahf
push
enter
shlb
cmp
cli
test
leave
test
sti
out
popa
testl
push
jae
dec
cmp
loope
mov
inc
inc
lds
scas
lea
mov
dec
jg
nop
push
std
subb
pop
js
mov
call
into
or
inc
jmp
push
mov
lock
pop
fisubs
sahf
negl
dec
inc
and
jns
out
pushl
xchg
cs
popa
out
or
popf
xor
or
rclb
mov
jmp
push
push
mov
lods
fs
jmp
testb
mov
inc
cmpsb
sub
jle
jl
imul
adcl
and
int3
pusha
cmp
lock
data16
aam
orl
sub
xor
cmp
xor
push
loopw
mov
push
xor
jns
pop
lret
loope
ss
xlat
or
fcoml
push
stos
mov
lret
cld
mov
insb
pop
jne
out
jge
ljmp
fcoml
insb
mul
out
sub
mov
mov
push
or
dec
add
sbb
call
push
push
jns
fdivrl
jg
stc
out
mov
int
fsubl
shld
xchg
ljmp
and
pop
les
fdivrl
test
mov
std
popf
lea
cli
out
lcall
xor
push
pop
lret
mov
pop
pop
lea
mov
cltd
xchg
int3
pop
call
add
jne
scas
imul
outsb
mov
mov
ret
imul
or
push
test
out
call
ds
notb
push
push
inc
adc
jmp
lret
lcall
xchg
negl
daa
mov
or
mov
mov
cmpl
dec
addr16
pop
cmpsl
inc
jb
pusha
cli
pop
pop
aaa
inc
int3
sub
sbb
mov
push
push
sbb
cmp
shl
lret
mov
in
mov
rorb
mov
xchg
adc
repz
repnz
loop
cmp
scas
imul
inc
scas
sub
pop
or
pop
pop
sbb
sub
nop
inc
or
clc
sub
sbb
mov
sub
scas
movsb
cs
push
movsl
cwtl
inc
and
adc
shll
jo
fidivs
sbb
push
sbb
sahf
fnstenv
xchg
xchg
xchg
push
xlat
in
out
adc
or
jns
mov
dec
in
cmpsl
xor
push
pop
xchg
mov
jge
fistpl
add
xchg
stc
subb
or
adc
xchg
sbb
fcomps
dec
mov
mov
mov
fsubs
pop
or
pushf
aam
add
lcall
loope
and
in
or
mov
in
pop
out
imull
fnstenv
jge
popa
mov
sub
mov
mov
mov
mov
imul
iret
mov
and
scas
xchg
mov
mov
adc
mov
cmp
clc
addr16
loopne
adc
adc
ss
inc
cmp
jnp
rcll
fcoms
mov
pop
in
lods
jg
or
mov
pop
sbb
push
aaa
mov
sahf
mov
popa
push
mov
lcall
sbb
pop
popa
out
shld
xchg
aaa
ficompl
push
jno
leave
or
out
cmp
lods
pop
pop
andl
mov
mov
test
jo
push
mov
lock
mov
cmpsb
aam
andb
insb
in
cld
or
inc
stos
sbb
inc
pop
int
sbb
jae
clc
test
and
addr16
in
out
lods
loopne
or
push
xor
daa
jmp
xor
bnd
je
inc
mov
mov
je
or
sub
movsb
sbb
stos
push
adc
sti
cmpsb
pop
xchg
and
aaa
mov
mov
mov
aaa
cltd
addl
mov
clc
leave
mov
jnp
mov
das
adc
xor
add
aas
dec
pop
mov
jecxz
cmc
add
cli
in
hlt
lea
jno
push
mov
in
sarb
pop
stc
dec
push
add
and
mov
fxtract
lret
mov
jnp
jno
movsl
pop
and
imul
mov
popa
into
int
js
repz
xchg
lea
mov
test
pop
mov
jmp
push
iret
js
lret
mov
or
cmpsl
xlat
setle
mov
pushf
mov
or
shll
push
jp
and
fldt
sbb
clc
sti
orb
xlat
jnp
imul
cmp
aad
lock
pop
arpl
jecxz
out
adc
stos
rol
loope
dec
pop
push
inc
mov
push
or
inc
rcrl
stos
sub
ds
lods
push
and
clc
ja
imul
daa
dec
jge
test
shl
pushf
xor
jle
adc
cmp
negb
or
test
push
icebp
test
adc
imul
xor
dec
push
lret
add
ljmp
frstor
xchg
or
xchg
adc
adc
pusha
cmp
lret
in
mov
cmp
push
ret
pop
lds
pusha
lcall
fcomps
lea
ficoms
fwait
loop
jmp
or
dec
mov
test
adc
aad
je
fisubrl
mov
je
xchg
pushf
sbb
test
add
fidivrl
lock
mov
inc
fs
mov
test
sub
pop
movsl
incb
lret
cwtl
push
dec
aaa
jnp
mov
cmp
cmp
pop
add
jnp
gs
push
lcall
xor
adc
call
arpl
mov
adc
mov
pushf
scas
gs
xor
xchg
jno
ja
lahf
mov
and
mov
aas
jp
jne
test
dec
jne
outsb
ljmp
out
push
mov
and
roll
mov
push
mov
or
mov
jmp
imul
int
fdivl
mov
or
push
jnp
inc
push
sbb
shr
lret
mov
add
call
jb
test
jo
icebp
out
aaa
jp
imul
mov
pop
fstps
popf
popa
dec
mov
xchg
pop
lea
out
out
pop
sarb
mov
cmp
lret
xchg
mov
push
xchg
dec
sti
adc
es
ljmp
fwait
cmp
jecxz
out
mov
and
ja
push
push
ftst
aam
arpl
stos
or
pop
movl
mov
es
inc
test
jns
mov
pop
push
inc
mov
jns
jnp
insl
xchg
movsl
cmc
or
out
outsl
xor
mov
xchg
lret
inc
dec
leave
movsb
mov
iret
sbb
clc
jo
push
and
or
jl
mov
fldl
push
xor
mov
outsb
enter
cld
insl
push
stos
pop
mov
iret
testw
xor
jnp
fs
std
in
fsubs
mov
sbb
clc
pop
push
mov
push
mov
aam
or
jg
jo
sbb
sbb
icebp
inc
inc
xlat
or
xor
fwait
jge
dec
xlat
jbe
ds
bound
sbb
jp
lahf
icebp
popa
mov
in
pop
adc
loopne
subl
dec
or
cwtl
int3
mov
lea
pop
inc
lods
lea
cmp
jns
xor
incb
and
push
lret
into
in
fimull
pop
add
pop
xchg
pop
es
or
add
mov
in
jge
xchg
and
ret
mov
pop
mov
jge
or
xchg
xchg
int
add
das
cmp
shll
insb
fld
jl
xchg
add
sub
ret
jecxz
mov
jne
push
hlt
jns
push
jge
movb
cmp
sub
adc
lods
or
aas
dec
ljmp
add
mov
jecxz
sbb
adc
dec
idivb
cmp
stos
fnstcw
xor
pop
loop
push
sbb
push
cmp
mov
and
sti
push
or
cwtl
xchg
repnz
loopne
adc
mov
push
loop
out
inc
clc
out
sbb
mov
jb
xor
loope
and
rclb
cmpsb
mov
adc
adc
pop
push
lds
or
clc
mov
lret
icebp
or
cwtl
cmpsl
sub
jecxz
or
test
mov
sbb
stos
jnp
push
mov
repnz
mov
or
sub
stos
jg
in
loopne
leave
sbbb
cmpsb
aas
mov
out
stc
insl
jns
pusha
mov
stos
jmp
cli
test
scas
mov
shlb
push
cmp
mov
dec
add
push
test
dec
call
stos
or
mov
fidivs
aam
push
test
cs
dec
cmp
mov
push
insb
mov
loop
lret
cmp
pop
mov
imulb
push
call
sub
xchg
fildll
std
xor
test
push
subb
pop
dec
aaa
hlt
or
cmp
push
jb
mov
xchg
lock
cmp
and
xchg
push
repz
out
ret
jmp
repz
jne
ficomps
push
data16
mov
cs
fsubrl
enter
dec
push
hlt
adc
adc
insl
xor
sub
addr16
dec
in
stc
inc
mov
call
scas
sub
cmp
jge
pop
mov
inc
push
dec
cmp
ret
cmp
inc
test
cltd
popa
and
int
jno
jne
scas
add
inc
addb
push
ljmp
inc
xchg
push
fisttpll
xchg
int
sbb
add
cmp
xor
rcrl
push
inc
inc
sub
cmp
loop
pop
ret
lsl
cmc
sub
sbb
pop
or
sub
popf
inc
add
stos
push
mov
add
dec
jecxz
jecxz
ret
cmpsl
jmp
icebp
sub
pop
popf
adc
xchg
fnstcw
sar
xor
mov
mov
outsb
adc
cli
daa
dec
push
call
mov
test
pop
xchg
rcrl
mov
xor
xor
jb
add
mov
fisubs
sbb
mov
stos
ljmp
insl
and
sub
adc
test
xchg
mov
lods
pop
incl
adc
outsb
jnp
out
je
outsb
mov
insl
jbe
in
aam
in
ja
xchg
icebp
clc
sbb
mov
dec
fwait
ja
int
inc
sti
ja
fmul
jl
pop
mov
insb
fcoml
and
mov
rol
call
mov
inc
sbb
pop
xchg
outsb
add
push
fisubl
les
sub
or
mov
insl
or
dec
dec
xor
mov
jbe
xor
inc
cmp
fdivrs
mov
mov
aaa
cmp
mov
push
push
xchg
cmp
leave
push
lods
or
fstpl
leave
mov
jbe
int3
jbe
cwtl
pop
ret
pop
mov
mov
xchg
pop
inc
jb
outsb
fucomp
mov
aam
cli
jmp
mov
cmc
dec
pop
loope
aaa
cmp
push
jne
aas
jne
popf
mov
adc
loopne
subb
push
daa
and
push
aas
stc
mov
mov
pop
xor
sti
clc
aas
sahf
jno
sub
cmp
or
cmp
jno
ljmp
aas
das
dec
and
and
mov
jo
sub
nopl
push
push
adc
iret
or
or
testb
or
ljmp
pop
jg
push
mov
out
lods
icebp
inc
jmp
idivb
mov
out
sti
xchg
int
cmc
pop
movsl
adc
into
sub
pop
jno
xor
arpl
adcb
iret
dec
sub
mov
mov
idivb
push
pushf
mov
xor
lea
add
pop
push
arpl
cld
cmp
cwtl
sbb
lock
cmp
push
lret
jne
dec
push
push
xchg
mov
jmp
fistps
inc
jae
push
loop
fisubs
push
mov
sbb
call
movsl
mov
iret
jbe
popf
jl
push
push
cli
les
fistl
divb
outsb
xchg
notl
clc
loop,pt
imul
pop
stc
sbb
sbb
adc
push
mov
cmp
pushf
mov
inc
sbb
jge
inc
dec
jp
je
mov
cld
jb
loope
mov
mov
add
lcall
lods
jg
push
jne
aas
jo
cltd
xchg
sbb
bswap
int
adc
nop
mov
push
les
pushf
stc
bound
push
xchg
test
mov
adc
ss
dec
stos
mov
mov
xchg
add
movsl
test
jecxz
xchg
insl
ret
arpl
lds
sub
inc
subl
ret
xchg
lock
adc
and
out
dec
sub
mov
hlt
insb
fcomps
jo
movsb
pusha
cwtl
xchg
into
sbb
push
sub
das
mov
shll
add
sub
ret
inc
mov
inc
into
xchg
jne
std
test
xor
jle
call
mov
movsb
cmp
pop
dec
movsb
roll
dec
dec
push
rorl
test
and
gs
jmp
lahf
shll
movsb
idivb
inc
pop
sbb
mov
aam
call
jae
push
les
cmp
std
rcrl
mov
pop
mov
call
jge
sbbb
inc
cmp
fdivrs
sbbl
or
adc
fwait
out
xchg
fcmovbe
mov
inc
in
xchg
mov
lret
dec
imul
clc
inc
cwtl
jl
sub
push
stc
scas
add
mov
lret
flds
int
xchg
inc
cld
aam
stos
or
add
push
cltd
and
push
stos
inc
pop
cmp
push
sub
cmpsb
pop
adc
mov
push
push
mulb
dec
jg
imul
add
mov
std
dec
loope
pop
inc
xchg
mov
jecxz
xchg
das
xchg
out
repnz
mov
arpl
xlat
hlt
sub
dec
push
pop
in
pop
sub
push
xchg
ret
jl
add
jae
pushf
mov
ds
lds
add
xor
or
int
xchg
sub
push
jb
js
mov
aam
shlb
int
add
or
fs
scas
rcrb
gs
leave
scas
add
mov
sbb
push
fwait
outsl
clc
mov
loope
jmp
inc
push
or
scas
lcall
or
lds
cmp
pop
mov
out
sub
jecxz
mov
pop
xor
cli
dec
cmp
mov
shl
cmpsb
and
stc
es
pop
xlat
popf
xchg
test
dec
aam
jno
mov
roll
cmc
inc
or
jmp
stc
pop
mov
cmc
xor
mov
outsl
add
and
push
sti
jl
mov
idivl
andb
inc
movl
jb
add
pushf
sbb
stc
and
ja
into
bound
inc
adc
pop
and
or
push
test
add
jb
lock
pop
lcall
adc
cmpsb
aas
das
sub
add
add
mov
subl
fldt
stos
jb
push
movsl
jp
fldcw
sbb
sbb
shl
out
rclb
loopne
and
pusha
pop
lea
aad
pop
outsl
iretw
add
mov
adc
mov
enter
lods
jmp
in
pop
mov
lods
cmp
sub
add
cmpb
inc
rcrl
subb
push
insl
and
cmp
movups
mov
pop
adc
sahf
and
outsb
jne
and
addb
int3
jo
flds
mov
push
in
cmp
dec
inc
fidivl
pop
pop
daa
jge
pop
adc
jo
mov
es
daa
pop
adc
jecxz
aas
jl
mov
into
imul
xchg
push
int
push
pop
push
sub
cmc
inc
xlat
xor
xchg
or
imul
popa
jmp
pop
sbb
push
fwait
push
gs
aaa
andl
out
mov
out
xchg
cmp
ljmp
leave
or
fs
jl
idivb
insb
mov
cmpsb
mov
cmp
aad
wrmsr
shrl
sub
jge
cmp
lret
adc
push
xchg
push
xchg
outsb
xor
inc
cltd
popa
loope
mov
ret
cmp
xor
insl
adc
add
jle
inc
pop
insl
pop
xor
sub
into
inc
je
stc
inc
dec
sbb
xchg
pop
mov
add
mov
in
js
stc
hlt
addl
orl
and
cmp
movsl
lea
and
out
insl
inc
mov
clc
sbb
fisubl
inc
lods
push
lret
aam
repnz
nop
test
mov
shrl
add
stc
scas
in
mov
jbe
sbb
xchg
mov
aaa
jp
add
jnp
inc
arpl
adc
inc
xchg
ret
nopl
jmp
xchg
jb
test
mov
and
or
cmp
ja
out
cmp
fmuls
sarl
scas
adc
inc
and
movsb
dec
loope
cmp
sbb
sub
jnp
adc
loopne
jo
mov
xor
or
lret
mov
stos
mov
sbb
icebp
shll
roll
jge
js
aas
jne
xor
mov
xor
or
mov
pop
ljmp
inc
cmp
popf
std
and
sub
pop
add
adcl
loope
stc
mov
notl
add
mov
inc
sbb
mov
lock
out
movsb
lret
inc
scas
adc
sub
addr16
stos
pop
pop
mov
adc
cmp
xor
in
popf
popa
mov
mov
dec
push
mov
adc
aaa
enter
pop
add
out
jecxz
add
adc
or
loop
or
pop
push
imul
in
lods
sahf
repnz
aad
inc
filds
sub
jle
scas
dec
cmp
ljmp
jbe
loop
ret
mov
aam
test
sbb
inc
out
test
sbb
mov
lds
hlt
pop
aas
std
adc
adc
push
lock
test
jne
xchg
fadd
aas
xchg
mov
subb
mov
mov
cmp
mov
cltd
or
sahf
mov
test
imul
dec
mov
cmc
iret
cli
push
lahf
cmpl
sub
nop
inc
dec
dec
into
test
je
adc
xchg
sub
hlt
lret
xor
loop
stos
dec
iret
jne
pusha
mulb
mov
xor
mov
data16
mov
ret
sbb
out
enter
into
icebp
mov
jno
xchg
rclb
mov
xchg
arpl
jb
xchg
inc
push
jo
pushf
mov
mov
sti
es
xchg
enter
loopne
sti
pop
testl
dec
mov
fstpt
mov
xchg
dec
icebp
pop
and
shll
pop
mov
sti
mov
out
and
adc
jge
inc
sbb
decl
cmpsl
cmc
adc
mov
add
cmpsb
shlb
pop
inc
mov
add
insb
inc
cs
not
jp
je
add
out
sbb
mov
jl
leave
dec
loopne
pop
sbb
loope
push
repnz
imul
cmc
rclb
ss
mov
mov
jmp
push
inc
test
xsaveopt
and
mov
stos
movsl
into
push
cmp
mov
cmp
mov
jmp
nop
and
lds
push
jmp
fsubp
and
push
movsb
mov
nop
and
pop
pushf
and
mov
push
and
cltd
and
or
pop
mov
and
xchg
dec
dec
pop
mov
arpl
icebp
xchg
sub
inc
push
mov
in
idivb
dec
push
xchg
les
mov
xchg
mov
pop
sarb
mov
inc
jae
jmp
lret
pop
jp
push
mov
fidivl
push
popa
push
xor
dec
cmp
pop
inc
mov
xor
xlat
in
push
push
xchg
add
push
lods
sub
dec
or
loope
push
int
movsb
push
lret
out
pop
xchg
xchg
cli
out
xor
push
stos
sub
popa
es
mov
inc
int3
xorb
movsl
add
sub
loopne
pop
pop
dec
arpl
dec
and
fs
stos
out
xchg
add
dec
and
mov
cmp
xor
je
xor
rolb
push
mov
and
inc
push
loope
rcrb
mov
mov
imul
lret
popf
sub
out
ljmp
dec
add
and
fnstsw
repz
xchg
and
cmpsl
mov
sub
insb
ss
das
adc
scas
cmp
faddp
cmc
sbb
pop
gs
xor
jns
imul
std
xor
repz
or
shr
mov
imul
mov
sbb
jmp
push
or
dec
jne
int
sub
cltd
div
mov
xchg
test
pushf
xlat
scas
xchg
test
hlt
sbb
pop
adc
loop
xor
xchg
add
pop
fs
or
imul
nop
push
lds
cli
loopne
adc
sub
mov
dec
gs
int3
std
in
xchg
rolb
ljmp
cmpsl
pop
leave
arpl
scas
loope
sub
bound
push
adcl
xchg
popf
and
dec
pop
pop
fadds
push
inc
mov
test
mov
inc
xchg
xor
cmpsl
psubsw
enter
add
daa
pop
pop
mov
inc
push
push
repz
es
or
push
xchg
rorl
inc
push
and
xchg
push
sbb
insl
xchg
inc
mov
xchg
rcll
fadds
fisttps
stc
adc
sbbl
cmovg
mov
cld
mov
adc
or
mov
sub
or
mov
aad
loopne
je
pop
mov
sub
movsb
mov
push
insl
fildl
clc
sub
jnp
and
push
fldl
rorb
add
mov
popf
mov
pop
mov
ret
jbe
xor
ficoml
adc
loope
cmp
in
popl
fdivp
repnz
dec
mov
lods
mov
dec
xchg
sbb
jo
addr16
insl
xor
sbb
jns
lods
pop
aaa
aad
ret
mov
in
popf
inc
pop
jge
stos
xlat
sub
fs
js
and
int3
popf
fildl
pop
ja
cmc
lock
sahf
push
ljmp
mov
xchg
sti
xor
mov
cmpsb
sbb
aad
aaa
out
pop
pop
lea
xor
mov
lods
sarb
out
rcr
test
leave
lock
or
xorb
test
lock
sarl
sbb
std
jge
or
adc
and
hlt
mov
jmp
mov
sbb
ds
mov
dec
movsl
xchg
push
pop
cwtl
push
cli
rcr
xchg
xlat
xchg
lods
dec
cmp
adc
pop
daa
jp
push
cmpsb
adc
pop
xchg
sarl
std
inc
push
nop
in
dec
inc
sub
fldt
aam
mov
xor
mov
and
cmp
inc
mov
inc
push
es
add
jne
inc
lret
outsl
pop
or
sarl
mov
ficompl
mov
dec
je
in
push
lret
dec
inc
sarl
pop
jae
sub
push
mov
jl
jg
mov
push
imul
subb
pop
jge
adc
dec
cmp
ss
jg
sbbl
mov
mov
or
int
and
inc
bound
sbb
sahf
push
adc
xchg
scas
and
jne
pop
jecxz
enter
mov
and
pop
jbe
push
or
repnz
or
call
push
mov
ljmp
jns
in
divl
and
jns
sbb
movsb
or
cmp
pop
out
jmp
stc
or
pop
mov
dec
dec
lcall
jno
xchg
cmp
int3
fld1
rol
in
sti
fisubs
rcr
andl
mov
cwtl
movsb
mov
ljmp
mov
sbb
jb
ja
rolb
fiadds
cmp
outsb
loope
lret
jl
add
arpl
sub
imul
lods
and
jecxz
jne
adc
test
fnstcw
xorb
cltd
or
or
mov
out
sbb
pop
mov
rcr
cmp
in
stos
cmp
mov
xchg
cmpl
adc
fwait
jns
add
push
clc
int
add
int3
out
aam
ss
mov
pop
lea
iret
sbbl
or
sbb
push
test
je
inc
adc
inc
mov
adc
cmp
jae
mov
cld
jns
xor
jno
mov
js
pop
jnp
xor
or
xorb
sbbl
in
mov
jmp
movsb
mov
xchg
dec
push
sbb
lahf
sub
andb
inc
mov
xchg
sti
pusha
xchg
fs
sbb
push
clc
fwait
mov
mov
ds
mov
repz
pop
adc
jnp
add
out
xor
inc
mov
das
mov
scas
or
adc
sbb
inc
iret
pop
fldl
test
lcall
or
fdivl
cmc
les
ror
push
dec
cmp
nop
iret
fiaddl
pop
jno
mov
mov
lock
cmp
scas
xlat
and
popf
and
imul
in
cli
mov
dec
jb
dec
fcomps
cmp
adc
lret
arpl
mov
aad
insb
pop
pop
sbbb
lds
and
shl
mov
jmp
popa
daa
push
mov
inc
scas
test
push
aas
pop
into
cmp
push
shll
or
jne
repz
lock
ds
cmp
addr16
xor
mov
jmp
fists
mov
stc
ret
movsl
out
pop
inc
xchg
mov
bound
cmc
scas
cmpsl
nop
add
dec
or
fcmove
xchg
mov
and
or
xor
out
push
cmp
cwtl
xor
stos
jne
test
push
adc
or
pop
dec
call
hlt
clc
jge
add
add
push
repnz
mov
pop
cwtl
sbb
movsl
lds
pop
and
jnp
or
or
movsl
jbe
cld
jnp
es
fisttpl
icebp
js
pop
es
les
xor
push
mov
shr
mov
cmp
mov
test
pop
int3
jg
or
inc
cmpsl
das
sub
mulb
sbbb
sahf
test
imul
add
sarb
add
push
ss
cmp
inc
lret
decb
xchg
nop
inc
mov
mov
fs
insl
xchg
cs
lods
imul
xor
mov
push
jg
pop
inc
dec
pop
dec
xchg
xlat
sbb
cmp
add
and
in
cmpsb
scas
aaa
push
or
adc
adc
stos
xor
call
sbb
xchg
inc
inc
ja
cmp
pop
sbb
sbb
cli
dec
dec
into
insb
shl
loop
mov
iret
mov
push
adc
mov
into
adc
outsb
cs
stc
jmp
or
inc
fildl
sahf
jo
mov
rcll
fnstcw
or
cld
push
icebp
or
lods
dec
lods
inc
cmp
jnp
cmp
jmp
or
outsb
cmp
sbb
stos
pop
outsl
pop
pop
jno
adcb
popa
sub
mov
orb
cmp
ds
push
test
mov
push
xchg
jle
inc
cmpb
pop
xor
inc
mov
push
push
jb
cld
daa
add
xchg
jo
hlt
mov
in
out
cmp
js
call
idivl
inc
test
inc
inc
lret
in
cmpb
cmp
arpl
jns
mov
cmp
xchg
ljmp
sub
daa
xor
imul
xchg
push
pop
bound
push
fadd
int3
clc
outsl
inc
add
mov
xor
es
cmp
loop
or
pop
adc
das
rorb
push
outsb
mov
jle
mov
fdivrs
je
dec
ds
inc
or
mov
je
mov
sbb
stc
mov
cmpl
xchg
pop
daa
test
fcmovnbe
xor
ja
mov
sahf
imul
sarl
push
gs
pop
jle
pop
mov
addl
std
aas
cltd
mov
cmc
dec
jnp
call
jecxz
in
lds
and
frstor
pop
in
fwait
xor
enter
pop
and
clc
mov
out
je
cmp
test
push
mov
xchg
add
call
push
imul
call
xchg
pop
mov
scas
xchg
test
das
arpl
pop
xchg
addr16
fstps
jg
mov
cmp
pusha
outsl
mov
xor
int3
test
pop
stos
add
lods
sti
icebp
loop
mov
mov
inc
xchg
sahf
mov
push
jnp
xorl
cld
push
cld
xchg
cwtl
adc
push
sbb
popf
lods
cmpb
cmp
pop
or
loopne
rcrl
pop
fnsave
adc
cli
adcb
cwtl
stos
mov
cld
in
push
sbb
and
shrb
and
xchg
add
out
test
pop
mov
xor
ljmp
scas
fistpll
sahf
shrl
push
cmp
in
imul
pop
pop
outsl
addr16
pushf
mov
test
clc
movsl
in
stc
mov
jmp
pop
push
int3
insb
and
fisttps
movsb
testl
and
cs
cmp
fidivrs
stc
push
mov
popa
ljmp
test
pop
aas
sahf
lds
jl
lds
adc
or
ret
fidivrl
xor
pop
xchg
mov
mov
addr16
cmp
fstpl
sbb
clc
dec
mov
adc
js
int
inc
les
lds
mov
mov
popf
push
mov
cld
xlat
push
idivl
mov
pop
arpl
pop
loop
jmp
out
cmp
mov
mov
fldl
cmp
mov
and
mov
mov
pop
and
rcll
dec
push
lret
clc
sbb
inc
iret
and
mov
lea
push
mov
out
addb
xchg
test
jns
aaa
in
fcomi
jnp
fisubl
sbb
lods
and
cltd
pop
daa
xchg
mov
shlb
fisubs
loopne
push
sbb
push
clc
sti
call
add
cmpsl
jp
push
daa
mov
insb
fsubrl
cmpsb
push
rorl
xor
leave
jb
imul
jbe
shl
mov
xchg
adc
fisubl
cmp
cmp
stc
fidivl
jl
mov
or
pop
imul
sub
cmp
int
in
std
scas
mov
stos
push
jb
test
sbb
sbb
mov
push
pop
push
lods
int
int3
adc
or
adc
mov
xchg
in
inc
mov
adc
and
sbb
adc
loopne
push
test
cmp
test
sbb
mov
aam
out
mov
dec
sbb
movl
xchg
jle
lret
int3
fs
imul
adc
add
add
adc
out
cs
movsb
push
std
popf
xchg
adc
les
in
popf
jnp
mov
push
push
adc
lret
mov
dec
xchg
adc
test
mov
mov
data16
jge
jecxz
push
pop
or
aam
ret
sub
outsb
cwtl
loopne
xchg
sbb
lock
imul
xor
repnz
in
daa
xor
dec
jl
fnstenv
lcall
add
inc
insl
xchg
sub
stc
lret
loopne
jmp
cmpsl
push
fstl
inc
int
lahf
test
pop
cmp
jmp
stos
aad
inc
in
and
adc
loopne
in
inc
movb
cmp
or
je
out
outsb
push
sbb
daa
xchg
sub
popa
into
aaa
test
lea
pushf
xor
std
arpl
dec
bound
in
das
test
inc
fldl
sub
sub
shll
jle
push
dec
jae
cwtl
ret
lea
fisubl
aas
dec
je
add
fldl
loopne,pn
xor
add
idiv
cmp
xchg
add
adc
and
call
jge
cmp
test
fbld
ret
or
pop
aad
mov
idivl
mov
dec
insb
mov
mov
xchg
jmp
mov
ret
pusha
mov
push
sub
stos
idivl
push
in
insl
sti
mov
mov
pop
lds
cmp
scas
test
test
das
add
mov
add
sub
leave
cmp
mov
std
jae
pop
mov
out
aaa
enter
filds
xchg
mov
ret
pop
outsl
lcall
lock
dec
add
fdivrs
fisubl
cmp
sahf
inc
mov
jmp
add
push
inc
aas
push
fisttpll
add
push
lea
je
orl
notb
aas
push
xchg
loopne
hlt
mov
xor
shrl
sub
arpl
cmp
dec
mov
or
or
xor
adc
adc
popa
ret
lea
xor
dec
jmp
imul
jl
lods
xchg
xlat
enter
push
outsb
cmpsl
add
je
test
jmp
sar
push
in
mov
cwtl
and
out
dec
imul
jge
dec
pop
dec
mov
sub
in
ss
adc
sbb
dec
xor
aaa
push
test
cwtl
lods
mov
sti
movsb
loope
or
or
jns
inc
out
or
sbb
in
xchg
test
loopne
test
out
jb
lods
push
cmp
outsb
xchg
jnp
sub
fisubl
cltd
popf
data16
xchg
and
mov
ret
mov
seto
dec
mov
pop
dec
xor
aas
insb
or
imul
out
lahf
jp
xchg
xchg
sbb
sub
add
cmpsl
push
inc
andl
cmc
sbb
lock
or
mov
sbb
xchg
mov
jne
sub
cmp
push
push
push
shl
clc
lods
adc
sbb
and
icebp
adc
add
fisubl
mov
or
in
cli
fwait
call
add
mov
cmp
nop
xchg
mov
mov
lret
jmp
out
loopne
inc
mov
movsb
mov
xor
sbb
cld
fidivs
and
and
cmp
xchg
call
out
mov
stc
mov
ljmp
popa
cwtl
push
fadds
pushf
adc
cmp
mov
dec
cmp
flds
std
testb
imul
push
data16
fs
lods
lret
jp
repnz
insb
push
lret
pop
inc
xchg
jb
popf
fdivrp
cli
sbb
out
in
fabs
and
add
outsb
adc
sub
icebp
add
enter
icebp
dec
mov
jns
and
or
addl
xor
bound
ficomps
push
inc
cmc
dec
cltd
ja
sbb
xlat
movsb
sbb
jnp
fwait
and
mov
fwait
push
mov
jp
dec
cmpsb
sbb
cmpsl
in
popf
cwtl
loopne
ds
push
pop
int3
dec
fcoml
or
adcb
loopne
pop
and
lcall
sbb
mov
lcall
lea
das
fcomps
imul
xorl
push
adc
mov
scas
mov
ds
out
inc
decl
mov
sbb
leave
jmp
loope
mov
xor
xor
or
jae
mov
cmpsl
xchg
add
out
add
cltd
mov
xor
push
dec
push
dec
sbb
dec
jo
and
insl
out
cmp
gs
scas
dec
mov
pop
dec
call
loopne
push
pop
adc
cld
push
fcoml
aas
dec
out
flds
bound
clc
mov
inc
adc
loop
push
jnp
cmpsb
out
outsl
xchg
outsl
pop
out
jle
push
mov
insl
popf
loop
in
and
sarb
cmp
sarl
shrb
ret
bound
mov
inc
lds
jle
scas
push
mov
xchg
js
jbe
adc
xorl
rorl
hlt
dec
int3
sub
popf
das
cmpsl
neg
enter
test
negl
jle
or
jno
mov
in
jae
in
mov
push
mov
iret
notb
cltd
data16
lods
lods
jp
bound
je
movsl
sbb
xlat
xchg
bound
lret
mov
loope
mov
cmp
repnz
mov
inc
popf
xlat
cmp
mov
inc
xchg
push
in
jl
inc
lds
add
out
sbb
mov
repz
pop
mov
std
mov
pusha
sub
shrb
pushf
mov
loopne
cmp
and
sahf
lock
inc
add
mov
movsb
lret
adc
xchg
jle
push
push
ret
data16
jge
xor
scas
rcr
cmp
sbb
and
bound
mov
push
and
xchg
lret
lods
adc
lds
xchg
add
mul
sbb
mov
push
lahf
sub
and
add
aaa
xchg
sub
push
daa
arpl
xor
mov
mov
or
movsb
nop
iret
push
sti
imulb
inc
in
or
lock
aam
push
sti
xchg
push
aad
ret
lahf
pop
mov
adc
sbb
imul
sub
mov
adc
jl
sbb
test
or
xlat
xchg
mov
xor
jp
imul
pop
js
nop
cmc
das
mov
xchg
stos
sub
adc
mov
arpl
jbe
in
lds
mov
test
mov
dec
and
insl
ljmp
stos
popf
push
inc
xor
movsb
addr16
jp
jae
pop
sub
sbb
dec
in
xor
mov
mov
mov
lds
cmpl
jns
stos
ss
lahf
mov
xchg
push
cmpsl
xchg
andl
mov
pop
lods
movb
push
mov
adcb
jmp
xlat
mov
cmc
fisubl
adc
insl
jl
mov
jno
fiadds
out
mov
add
dec
mov
aam
adcb
mov
jp
shr
sbb
jg
mov
aad
adc
imul
into
inc
push
and
cmc
mov
xchg
and
push
add
clc
sub
addr16
fs
pop
loope
xor
loope
out
hlt
jecxz
and
xor
test
mov
lea
xlat
lahf
sub
pop
jg
xor
js
test
outsb
mov
sbb
push
xchg
adc
mov
out
stos
outsl
mov
sub
iret
push
sbb
jmp
xchg
aad
xlat
mov
dec
lods
stos
push
pop
inc
aas
das
das
dec
arpl
insl
pushl
mov
inc
std
mov
inc
movl
aam
xchg
cmp
hlt
mov
add
ljmp
inc
xor
add
inc
mov
inc
inc
inc
or
sub
sub
and
sbb
out
adc
jge
out
leave
cmp
cmp
int
inc
into
loopne
inc
jge
imul
cmp
rclb
dec
ljmp
pop
dec
lahf
out
xor
out
scas
ret
lock
mov
dec
ss
mov
sub
sahf
fwait
xlat
dec
loope
push
cmp
xor
jns
hlt
mov
dec
or
push
mov
into
inc
and
repz
xor
inc
mov
aaa
out
call
and
mov
fcoms
or
cmp
mov
xchg
dec
fidivrl
or
aad
xor
nop
fisubs
addl
pop
or
pop
imul
pop
sarb
jle
pop
fwait
push
enter
fildl
push
sahf
sti
pop
push
mov
inc
sub
cmc
pop
sbb
mov
mov
jle
sub
push
xor
ret
mov
mov
icebp
add
adc
fwait
pop
mov
les
jbe
scas
lahf
jns
pop
adc
dec
dec
inc
push
sbb
jmp
lret
gs
pop
push
fdivl
xor
popa
popa
and
out
aad
xor
mov
mov
sbb
cli
out
lds
hlt
popa
or
test
xchg
pushf
bound
dec
in
xorb
cld
aas
out
push
sti
mov
adc
or
fsub
pop
ret
nop
ja
cmp
out
hlt
add
and
sbb
push
jmp
mov
xchg
sbb
sbb
fcmovne
lret
arpl
cmp
insl
nop
sub
in
and
ss
adc
dec
pop
pop
jg
aad
pop
pop
push
mul
mov
adc
mov
mov
fisttpll
and
sub
mov
cli
mov
cmp
push
shl
mov
mov
dec
out
xlat
dec
insl
out
adc
mov
fcmovnb
aam
fisubrs
push
es
pop
sbb
mov
stos
xrelease
mov
push
aas
mov
cmc
jbe
shll
insb
dec
pop
push
call
inc
lods
adc
cs
add
sti
mov
stc
mov
test
insl
ret
lcall
push
cmpb
pop
cs
inc
out
shr
ja
ds
and
mov
mov
pop
push
mov
xchg
rcrb
or
mov
les
xchg
push
adc
add
cmp
mov
int
scas
into
loopne
in
in
js
fadds
fs
out
jo
ja
lret
cmp
lret
pop
xor
sbb
jo
lret
xchg
ret
jmp
and
jb
and
pop
sub
sahf
adc
inc
or
int3
nop
test
ret
insl
inc
sbbl
or
dec
aad
cltd
cmp
sti
fdivrs
xor
lds
cltd
jae
jl
push
sbb
mov
cld
popf
xchg
sbb
fldcw
movsb
daa
sub
pop
push
mov
add
adc
or
test
popa
mov
dec
lahf
js
push
leave
repnz
jno
sub
stos
pop
and
pushf
ja
out
int
mov
movsb
push
aaa
insb
push
ja
or
les
mov
call
rcrl
test
cmp
push
pop
outsb
xchg
fistl
add
insb
sahf
mov
stos
inc
mov
shr
adc
scas
xor
xchg
js
cmpsb
in
fwait
inc
sbb
xorl
incl
jae
xchg
jl
mov
push
dec
add
bound
pop
sub
inc
int3
dec
movsl
flds
mov
adc
sbb
adc
in
or
dec
frstor
rorb
nop
mov
adc
cwtl
and
xor
pop
gs
add
inc
jecxz
jp
push
mov
push
add
into
lds
lds
lods
cmp
icebp
addr16
sub
ljmp
int3
add
pop
dec
je
out
adc
in
mov
scas
add
xchg
hlt
mov
cli
cmpsb
pop
or
or
cmpl
jl
in
dec
cld
out
leave
and
addr16
aam
cmp
xor
dec
or
cs
dec
dec
shll
mov
cs
push
lret
out
imul
test
and
mov
and
ret
jns
adc
mov
repnz
xor
inc
js
mov
add
mov
int
and
add
pushf
pop
xor
movsb
xchg
push
mov
add
scas
sub
and
in
cmpsl
sbb
out
popa
add
mov
sbb
jnp
xchg
stos
dec
jle
int3
aam
xchg
adc
or
out
mov
and
jl
lea
xchg
data16
mov
popf
add
mov
xchg
call
std
sbb
fs
xor
cmpsl
dec
jl
dec
cmc
add
add
cli
xchg
push
sbb
sub
dec
test
mov
leave
mov
pop
mov
out
mov
mov
fisubs
lock
mov
inc
mov
pop
add
adcb
cmp
add
inc
jne
cs
ret
or
dec
sub
dec
mov
mov
pop
sub
push
divb
pop
cmc
insl
sbb
and
push
sbb
mov
cld
lods
int
fstps
jae
imul
sbb
adc
test
adc
je
push
add
cld
ror
sbbl
add
int
xchg
test
mov
bound
fwait
sub
lods
mov
push
mov
xchg
pop
adc
call
adc
roll
mov
std
pop
inc
int3
pushf
outsb
pop
jbe
add
aam
and
cmp
mov
pop
add
adc
js
pusha
jp
inc
xchg
dec
mov
jp
rorl
push
sbb
adc
pop
clc
ficompl
xchg
repnz
or
xor
fisubrs
sub
mov
pop
shlw
sub
or
imul
mov
push
sbb
jmp
sbb
das
data16
fidivrl
inc
bsr
leave
xlat
jmp
je
xor
push
out
loop
jg
shrb
lret
sbb
orl
data16
iret
and
sbb
imul
dec
xchg
not
jmp
inc
stos
jg
out
lods
int3
fists
pop
int
cmpsl
add
pop
out
xchg
jecxz
mov
lret
inc
pusha
icebp
mov
dec
ret
sbbb
imul
pop
sbb
add
popf
xor
addr16
faddl
push
ljmp
mov
in
out
fisttpl
push
fldcw
rclb
xor
in
insb
xorb
pop
mov
jle
ror
xor
lods
push
mov
and
stos
imul
stc
inc
jns
pop
orl
stos
dec
cmp
mov
js
insb
mov
in
cld
pusha
or
lods
push
push
add
lret
jne
in
inc
in
dec
mov
push
pusha
sarl
xor
push
add
insb
adc
xchg
cwtl
daa
sbb
mov
xchg
pushw
push
sbb
bound
add
cmc
jmp
sbb
out
mov
cmp
mov
stc
and
jmp
or
jle
mov
into
sub
in
out
sbb
and
pushf
popf
lret
push
aas
lret
jo
pop
jns
inc
jb
cmp
mov
pop
push
idivl
rol
enter
add
mov
sub
insb
add
ficomps
cs
loop
adc
sbb
and
cltd
bound
dec
mov
cmpsb
jecxz
dec
sub
pop
flds
daa
xor
mov
adc
xor
cmp
mov
mov
ret
push
stc
jmp
pop
add
and
ss
les
inc
int
add
das
enter
mov
mov
hlt
dec
push
push
sbb
xchg
push
shl
mov
jne
push
inc
repnz
mov
mov
into
jnp
fwait
push
hlt
psllq
pop
sbb
ss
outsl
push
fimuls
inc
dec
jns
cli
xchg
sbb
popf
ror
jns
push
add
addr16
scas
cmp
xor
mov
and
adc
scas
sar
push
sti
loopne
fmul
test
cmpsb
jl
loopne
add
outsb
add
lea
xor
cwtl
jne
xor
cmp
dec
cmc
ret
vmovsd
jp
adc
cmp
dec
add
add
inc
inc
cld
les
mov
daa
cwtl
dec
push
mov
xor
mov
jns
outsl
dec
cmc
call
loope
je
xchg
fists
daa
mov
mov
rcr
imul
mov
lods
sbb
sub
add
aad
aas
dec
jno
mov
and
inc
gs
scas
and
xlat
adc
and
dec
or
mov
mov
pop
ror
orb
leave
push
and
shlb
jnp
lret
int
in
pop
aaa
xor
into
imul
jg
addr16
in
stos
in
push
ljmp
out
out
cli
cmpsl
cwtl
jb
pop
and
sub
cltd
andl
mov
leave
lods
mov
dec
imul
dec
inc
mov
and
jecxz
pop
xor
adc
imul
lea
sub
pop
pop
mov
arpl
mov
pop
or
xor
inc
popf
xor
loop
loopne
push
adc
ret
push
mov
pop
dec
pop
pop
jmp
adc
shr
outsl
mov
mov
adc
mov
sbb
jl
or
pop
and
push
movsl
push
xchg
inc
sti
in
jge
mov
push
push
mov
push
out
lods
jns
in
insl
mov
adc
subl
inc
imul
dec
sub
cmp
fisttps
roll
inc
push
adc
push
cmp
nop
mov
repz
pop
loop
imulb
out
jl
pop
push
insl
lea
mov
insl
out
fdivl
sbb
js
mov
xchg
sbbb
pop
out
push
sbb
adc
mov
and
mov
sub
xor
rcrl
addl
push
jg
in
mov
add
stc
mov
aaa
out
lock
daa
sub
sbb
mov
inc
cmpsl
out
mov
or
cwtl
push
inc
movsl
in
sti
loopne
lcall
outsb
jle
fdivr
push
or
mov
imul
fistps
adc
xchg
out
mov
cld
push
andb
icebp
fcompl
sbb
cld
adc
sbbb
loop
idivl
sub
add
and
sub
addr16
fistpll
test
fucomi
pop
mov
stos
sahf
jno
jge
push
jne
fimuls
imul
adc
fistps
enter
cmp
insl
cwtl
add
aaa
jle
adc
lock
ret
mov
dec
mov
or
cmpsl
ljmp
popf
xchg
mov
cmp
pop
push
push
popf
dec
repz
cmc
cld
xchg
bound
mov
push
push
ja
sub
sub
inc
cmp
std
mov
loop
cmp
lea
shll
nop
stc
sbbl
decb
inc
mov
xor
out
xchg
je
sahf
add
clc
mov
jbe
lods
cmp
jg
into
insl
fistl
mov
inc
hlt
lret
out
es
jg
mov
rolb
add
sti
cmpsl
stos
das
sub
fwait
cmp
sub
inc
cmp
les
pop
scas
aaa
sbb
inc
ja
cmp
rcrl
loopne
sub
pop
jb
and
add
inc
dec
and
mov
repz
jmp
lret
xchg
ds
pop
mov
loope
imul
sbb
es
push
cmp
cmp
pop
mov
fldt
mov
mov
push
pop
hlt
es
prefetch
add
xlat
lods
sub
mov
test
iret
aas
addl
add
add
repnz
bound
jge
loopne
popa
popf
jl
adc
mov
insl
cmp
pop
sbb
pop
stc
in
and
jno
roll
or
and
stos
xchg
or
cmp
das
and
push
xor
mov
testb
outsl
out
fidivl
loopne
and
and
fiadds
xor
xchg
rclb
sub
xchg
xlat
jl
pop
pop
shll
xchg
sbb
daa
aam
les
clc
sub
hlt
repnz
sahf
or
xchg
frstor
adc
jmp
bound
test
sbb
inc
xor
aaa
adc
in
out
xchg
cld
xor
cmp
inc
sbb
sub
test
arpl
and
aas
ja
aas
outsb
sub
daa
and
add
xchg
and
ret
subb
add
and
pop
add
test
into
lds
jl
mov
movsb
movsb
pushf
loope
sahf
mov
pop
push
sahf
cmp
cmp
sar
fstpl
mov
mov
mov
cwtl
adc
and
stos
and
sarl
rcl
insb
inc
gs
cmp
test
jnp
or
jle
mov
mov
call
jge
adc
mov
inc
and
lcall
xchg
movl
js
push
insl
insb
insl
xorb
movsl
dec
insb
jl
ljmp
mov
mov
lods
movsl
jge
pop
mov
out
adc
insb
dec
mov
or
jmp
or
andl
xchg
mov
pop
pop
lea
sub
mov
clc
and
sbb
aam
lea
les
jmp
cs
sahf
mov
add
cld
aad
daa
jg
or
divb
test
adc
hlt
lahf
in
xchg
and
fwait
lds
rcll
pop
pop
call
test
jmp
inc
mov
sbbb
cwtl
nop
push
repz
movsl
mov
xchg
jnp
ficoml
clc
popf
test
push
test
sbb
mov
xorl
add
lods
movsb
xchg
xlat
sbb
mov
push
movsl
pop
xchg
mov
imul
cld
sbb
bound
into
mov
sub
movsb
add
or
popf
jg
dec
rcll
xor
jecxz
sbb
fmul
mov
jge
das
into
aas
lock
inc
cmp
jg
shll
mov
into
rclb
cld
mov
adc
lcall
mov
mov
mov
outsb
cmc
js
int
and
push
jns
inc
dec
lcall
xchg
ljmp
add
stos
push
xchg
jle
pop
add
subl
ror
fdivrl
pop
mov
jg
outsl
push
outsl
outsb
dec
sbb
pop
leave
lods
fstpt
jne,pn
lret
outsl
adc
jp
mov
dec
push
popa
into
mov
pop
outsl
cltd
in
lods
cs
imul
xor
es
rclb
outsb
in
enter
out
adc
dec
lods
mov
inc
jl
fisttps
lcall
adc
mov
out
loop
cmpsb
icebp
clc
and
fs
leave
dec
pop
cmp
jg
push
maskmovq
stos
pop
clc
clc
popa
scas
jnp
lea
mov
je
cmp
pop
addr16
movsb
jecxz
icebp
dec
mov
hlt
cli
mov
into
rcr
push
mov
dec
js
cmp
xchg
dec
test
mov
mov
jmp
les
cld
mov
mov
adc
subl
sub
or
shlb
out
fmull
mov
aad
out
fmul
cli
sub
push
xchg
sbb
xor
nop
and
fidivl
cwtl
push
cmpsb
lods
sub
rolb
or
adc
mov
dec
push
nop
push
mov
hlt
add
jbe
mov
and
enter
les
rcrb
push
test
fldcw
repnz
and
mov
aad
sti
sbb
bound
sbb
movsb
and
mov
mov
sbb
sbb
mov
mov
or
adc
inc
or
pop
movb
pop
add
arpl
test
add
push
push
cwtl
mov
xchg
inc
push
hlt
aas
js
pop
fcompl
bound
pusha
xchg
pop
leave
xor
into
xor
push
mov
imul
or
ds
adc
sub
mov
outsl
cmp
loope
imul
xchg
jbe
push
lea
icebp
pop
mov
aam
or
mov
cmpsb
adc
jle
repz
xchg
arpl
jl
add
jns
js
xor
aam
icebp
lret
jns
std
paddb
inc
insb
stos
sbb
cmp
mov
mov
mov
dec
out
dec
lcall
orb
mov
iret
lods
mov
notb
test
and
out
xor
xlat
jg
out
in
adc
dec
push
or
sbb
jmp
xchg
shrl
fldl
mov
xor
jbe
and
rol
loop
sbb
pop
sbb
pushf
cmc
in
scas
arpl
enter
popl
add
mov
push
sarb
sti
out
fdivp
inc
xor
push
jp
int
pop
mov
mov
xchg
and
cld
outsb
sahf
jne
cltd
push
rorl
es
ret
or
xor
cmp
rolb
hlt
cltd
push
das
fsubr
cmp
or
fdivrl
jne
jp
fidivrl
enter
mov
jbe
pop
push
lods
psrld
jge
cwtl
or
add
scas
call
movsl
into
inc
push
lods
repz
mov
pop
pop
mov
cltd
test
ss
jg
cmpsb
push
mov
xchg
mov
cltd
pop
or
sbb
pushf
mov
cmp
test
shl
or
out
jb
cmp
and
popf
inc
test
movsb
mov
fdivrs
xchg
mov
idiv
pop
call
pop
or
xor
lret
into
push
adc
lahf
shrb
aam
jmp
and
das
nop
shlb
cltd
mov
loope
jge
out
cmp
sub
ja
fimuls
push
sub
xchg
in
adc
movsl
iret
loop
mov
mov
dec
adc
or
repz
mov
mov
test
push
sti
in
daa
mov
add
emms
mov
jle
in
mov
mov
xchg
xchg
repz
lea
sub
and
call
jmp
dec
testl
nop
pop
xchg
pushf
mov
add
mov
cltd
push
add
sbb
outsb
xor
cmp
lret
int3
sub
dec
cmc
jle
aas
cmp
addr16
fistps
dec
xorl
sub
xor
jb
orb
cltd
jnp
inc
pop
scas
mov
roll
lahf
pushf
xchg
pushl
idivl
mov
lods
es
xor
outsb
stos
das
dec
jle
subb
repz
loopne
push
mov
ja
cmpl
sbb
jle
xor
les
in
mov
lea
cld
inc
clc
shlb
jp
into
xchg
push
mov
stc
push
jne
jle
mov
fnsave
das
xchg
pop
ljmp
push
cwtl
push
mov
or
cmp
lea
jg
push
sub
and
sbb
mov
sbb
dec
dec
and
lds
cmpsb
es
int3
outsl
inc
pop
xchg
and
aad
mov
mov
inc
push
orl
cmp
dec
lret
in
adc
inc
mov
je
xchg
stos
cmpsl
insb
mov
lret
inc
insb
cmp
mov
addb
lods
es
mov
jb
sahf
pushl
xor
sti
cmp
rclb
adc
jge
outsl
dec
push
pop
xchg
lahf
into
int3
mov
inc
add
jae
sbb
insb
enter
lea
mov
or
jnp
lahf
push
xor
out
test
std
cmpsb
pop
mov
inc
mov
in
mov
repnz
sbb
rclb
adc
flds
jg
push
jmp
or
push
lahf
xchg
rorl
push
ret
incb
xor
adc
cbtw
pop
lock
xor
jmp
cld
ljmp
fiaddl
push
or
push
fdivrs
pop
mov
mov
fdivl
sti
mov
enter
mov
outsl
popa
xor
sbb
mov
insb
test
xchg
xor
ja
rorl
clc
pop
xchg
out
adc
sbbl
or
shrl
stos
cwtl
xor
pop
mov
mov
call
sbb
sbb
xchg
in
leave
ret
mov
jnp
fildll
xorl
add
add
mov
shl
inc
inc
ljmp
pushf
xchg
pushf
gs
incb
mov
fs
arpl
outsl
fiadds
in
movsl
pop
jns
hlt
cli
inc
sub
in
add
outsl
jbe
jmp
xor
in
idivl
cmp
sbb
push
or
sbb
test
mov
pop
jnp
jno
and
stc
sub
jb
test
xchg
adc
je
push
xor
imul
jbe
and
push
push
jge
add
sti
jb
or
in
insl
add
bound
aad
xor
xchg
js
mov
mov
cmc
icebp
sbb
jecxz
enter
xor
addr16
movsb
mov
mov
inc
push
adc
jmp
pop
and
or
lahf
sti
adc
mov
cmp
push
icebp
dec
stos
jb
xlat
xlat
mov
inc
cmpsb
icebp
or
orb
xor
iret
ret
cltd
test
jmp
and
ljmp
ret
or
mov
adc
jl
mov
popf
and
inc
xor
pop
pop
xor
sbb
push
add
int3
rorl
push
add
or
in
mov
pop
jl
cmpsl
mov
shr
fs
push
jb
lods
pusha
mov
xchg
fstl
lret
mov
pusha
clc
divl
xchg
mov
out
negb
aam
cmp
fmul
mov
ret
push
jb
imul
adc
or
dec
sbb
sarb
xchg
cmp
jg
pop
out
cmp
les
int
test
sahf
pop
fbld
push
dec
add
das
out
inc
add
mov
add
mov
dec
scas
mov
cmp
sbb
mov
add
inc
jne
dec
roll
mov
ret
ljmp
iret
arpl
call
pop
inc
lret
ret
ljmp
lahf
xor
xor
out
adc
push
xlat
aam
add
outsl
or
orl
fwait
xlat
sub
mov
stos
inc
negb
leave
inc
add
repz
sbb
sbb
xchg
add
cmp
or
popa
or
mov
jns
pop
jne
dec
pushf
imul
fsubs
shl
mov
push
out
iret
cmp
orl
mov
in
adcl
mov
movsl
js
sbb
xchg
and
and
in
jnp
sbb
push
mov
je
pop
outsl
ljmp
lret
dec
sbb
out
jp
cmp
lds
push
or
xchg
inc
lret
mov
inc
xchg
jl
data16
stos
cmp
es
ret
pop
mov
rcl
call
test
sub
add
aas
add
xchg
std
aaa
mov
pop
lahf
xchg
and
sti
sbb
xchg
add
pop
int3
jecxz
mov
xor
xchg
mov
nop
in
mov
in
or
jle
jle
sbb
mov
push
shrl
jge
cmp
xchg
ljmp
sbb
and
mov
stos
mov
fdivrl
ret
inc
inc
pop
out
cmpsl
fadd
das
lret
xchg
pop
mov
add
sub
jne
clc
or
jmp
movsl
es
aaa
popf
aaa
push
pop
sub
mov
insb
and
movsl
xor
mov
out
jp
cmp
xchg
div
aas
lcall
jle
push
mov
mov
mov
jg
xor
jnp
xor
xchg
sti
lock
jecxz
or
ljmp
xchg
lahf
movsb
or
cmc
dec
inc
test
jg
push
xor
sbb
sar
push
jl
cmc
lea
inc
leave
and
or
xchg
lret
sub
jmp
mov
lea
xchg
mov
or
pop
cmc
scas
push
test
mov
mov
pop
xor
subb
xchg
frstor
pop
or
bound
outsl
push
pusha
push
sub
ror
mov
lea
adc
xorb
mov
cltd
or
add
ds
js
repnz
inc
in
jmp
icebp
push
pop
arpl
shll
sub
fidivrl
xor
jge
rorl
xor
sarb
cmp
dec
xor
fs
sbb
shlb
jae
jne
test
or
mov
aam
aad
repnz
dec
adc
adc
cmp
aas
test
movsb
call
mov
push
pop
cltd
mov
push
loopne
xchg
xchg
shr
movsb
and
push
cmp
enter
add
mov
rclb
pushf
fidivrl
es
cwtl
scas
pushf
mov
fs
mov
mov
fcomps
rclb
clc
mov
ss
out
shll
pushf
jge
dec
inc
sbb
mov
mov
xor
xchg
add
ret
sub
inc
pop
pusha
pop
stc
mov
pop
sub
or
mov
aad
mov
add
std
mov
sub
lcall
je
jno
insb
pusha
sub
jne
or
in
cmp
and
add
push
enter
mov
scas
sarb
fnstcw
and
lahf
scas
xor
adc
and
and
scas
daa
imul
out
push
mov
xchg
jmp
fbstp
das
mov
push
lods
rorl
mov
mov
in
xchg
lock
mov
jbe
xchg
stos
mov
jo
dec
and
jecxz
xor
dec
test
es
inc
in
and
mov
xlat
jb
mov
movsb
add
lea
mov
test
cmp
mov
dec
js
mov
push
adc
jmp
xor
sub
and
cmp
and
xchg
shll
addr16
sub
push
les
lock
int
test
es
sub
popf
fmuls
je
shll
xor
mov
data16
push
xchg
cmp
inc
jns
fs
outsb
pop
push
and
pop
xorl
test
mov
call
fmul
repnz
insb
scas
dec
mov
repnz
mov
aas
add
dec
ret
jecxz
je
iret
in
cwtl
popa
jl
aas
sub
pushf
rclb
mov
xchg
mov
or
push
and
stc
or
inc
clc
sub
bound
push
lods
xor
xchg
sub
ljmp
shrl
fwait
sbb
insb
jo
popf
inc
fs
sarl
or
adc
sti
cs
pop
ds
mov
xchg
out
popa
mov
xchg
lret
lods
nop
push
pop
out
fmuls
int
incb
jne
fs
push
cli
imul
inc
data16
in
jae
popf
lds
pop
ret
jo
dec
or
arpl
sbb
test
cs
jp
sahf
push
icebp
and
push
jg
dec
xchg
xchg
pusha
xor
imul
loope
ret
lret
mov
push
fiadds
mov
push
daa
dec
pop
or
int
jns
sbb
pushf
loope
cwtl
daa
sbb
es
push
jle
mov
insb
add
jno
inc
mov
mov
insb
and
or
fmuls
lods
lret
jnp
and
loopne
test
repnz
sub
cmpsb
inc
mov
xchg
inc
mov
cmpsl
inc
cmc
or
arpl
fsubrs
add
xor
in
dec
sahf
mov
lock
cmp
jle
icebp
imul
test
push
dec
jecxz
adc
cmp
fadds
in
xor
icebp
jl
and
cs
jae
push
aaa
jo
testb
pop
pop
jle
cmp
mov
sbb
out
mov
das
sbb
push
xchg
jns
mov
pushf
ds
adc
push
push
jno
leave
add
les
add
add
adc
inc
jge
int
mov
lcall
fs
adc
lea
rorb
test
out
xor
jne
jecxz
jmp
addr16
mov
mov
inc
pop
lret
push
jns
icebp
jno
and
lods
sbb
add
sbb
mov
mov
out
and
aad
aaa
fistpll
fcoms
sbb
jecxz
and
dec
xor
xor
ret
aam
inc
unpckhps
aaa
movsl
pop
push
cli
cmp
push
ret
ret
dec
fdivr
jmp
mov
cmp
dec
jp
jmp
xor
movsb
jns
loope
xor
lahf
imul
movsl
push
inc
in
jnp
adc
or
inc
xor
jne
in
fmul
mov
test
sbbl
xchg
jnp
inc
pop
pop
xchg
or
dec
xor
sbb
fwait
adc
movsb
decb
stos
loope
pop
cmp
xchg
in
inc
mov
cmp
inc
mov
fimull
cmpsl
test
repnz
orl
push
lds
hlt
sub
adc
mov
mov
lea
js
cmpsl
cli
pop
sahf
test
ljmp
aaa
jmp
std
xor
jmp
add
jle
xor
cmp
and
inc
je
jl
dec
cmpsb
xchg
dec
pusha
insl
es
mov
add
xor
cli
frstor
stc
clc
and
xor
pop
movsl
dec
xchg
push
cmpb
xchg
pop
mov
sub
aaa
dec
daa
ss
fnsave
pop
stc
mov
iret
cmp
inc
jno
data16
cmp
pusha
bound
xor
clc
inc
js
stos
mov
jo
rorb
scas
inc
inc
cwtl
cmp
inc
ss
mov
inc
shlb
push
daa
mov
fnstsw
push
push
xor
cmp
aas
xchg
lea
mov
xchg
push
ret
xchg
or
sub
ret
mov
mov
iret
ds
mov
mov
pop
inc
cmpsl
mov
inc
inc
push
mov
gs
pop
lret
imull
rcr
sbbl
in
pop
outsb
scas
jae
rol
out
and
dec
push
stos
test
push
lods
fimuls
call
pop
aam
xor
idivb
mov
cmp
pop
maskmovq
divl
add
xchg
outsl
xchg
int
jg
daa
pop
rorb
inc
dec
jp
sbb
outsb
dec
mov
pop
testb
pushf
jae
lods
mov
repnz
or
push
or
jbe
shll
pop
mov
dec
jno
leave
adc
and
dec
adc
sub
mov
lea
cltd
xchg
std
notb
cmp
cmp
je
xor
sub
xchg
cmp
push
out
xchg
repz
cmpsl
push
mov
out
push
sub
pop
and
mov
pop
in
ret
jno
mov
test
insb
or
mov
dec
push
add
jecxz
adc
mov
xor
pop
frstor
js
sub
iret
and
xor
lcall
mov
xchg
mov
in
pop
mov
push
out
insb
cmc
popf
xor
jns
mov
fwait
call
gs
in
add
or
pop
scas
adc
sub
pop
mov
ljmp
movsb
sbb
lahf
jne
mov
adc
xor
jbe
cmpsb
in
addb
mov
lret
jl
iret
sub
loope
cmp
jne
mov
pop
sbb
test
setg
push
mov
popa
loop
and
or
push
and
inc
ss
fisubrl
ret
icebp
movsb
add
into
or
jae
rclb
movsl
dec
fwait
lds
sub
ljmp
sbbl
xchg
mov
outsl
inc
fcomps
jns
lea
ds
add
fs
pop
leave
movsl
jge
shll
je
xchg
or
add
mov
in
in
jle
addl
xor
iret
sub
repnz
inc
imul
mov
loopne
repnz
push
pop
cli
fisubrl
inc
sbb
adc
int3
mov
stos
sbb
into
push
iret
popf
xchg
into
aaa
in
ror
lock
outsb
push
inc
mov
sti
push
adc
aam
lods
cmp
in
jno
mov
test
sbb
outsl
leave
jae
adc
dec
pushf
movsl
mov
mov
subb
dec
cmovae
mov
cmp
adc
das
push
sub
xadd
enter
std
add
add
mov
nop
mov
sub
mov
jne
lret
jmp
in
push
sub
or
jecxz
insl
aas
push
jnp
sub
pushf
mov
cmp
dec
test
xor
sbb
or
adc
jle
xor
push
bound
jae
repz
jmp
movsl
and
add
test
xchg
ret
or
or
cs
pop
repnz
mov
xor
negl
sti
push
fcmovu
dec
pop
adc
jmp
sbb
jo
loop
and
ljmp
dec
push
mov
pop
push
xchg
pop
mov
shlb
cmp
insl
cmpsl
jbe
lods
push
push
jle
insb
xchg
daa
shr
outsb
sub
and
repnz
bound
pop
mov
mov
outsl
xor
jnp
scas
xchg
mov
pop
rcrb
xchg
aas
in
mov
daa
sbb
ficoml
dec
int3
repnz
testb
rolb
sub
jbe
pop
mov
add
scas
lahf
test
ja
jb
fsubl
imull
and
add
mov
lea
shll
dec
lods
or
mov
sub
dec
mov
std
jae
mov
fmuls
sbb
or
das
cs
imul
gs
mov
cmpsb
aam
adc
cmpsb
inc
push
inc
in
test
pop
jb
xchg
faddp
add
cld
jg
das
shl
insl
push
mov
das
rorl
mov
xlat
mov
xor
loopne
fimull
stos
adc
push
pushl
out
das
dec
mov
add
mov
pushf
pop
cmp
cmc
cld
nop
add
daa
jecxz
test
add
mov
les
out
int
in
mov
and
movsl
call
lcall
xchg
pop
add
js
xor
add
pop
stos
jmp
les
mov
jno
loope
and
daa
jo
aam
dec
add
orl
mov
cmp
mov
test
and
dec
les
mov
mov
mov
push
clc
push
movsl
cmp
xchg
xor
pushf
dec
out
pusha
sub
push
test
fisubrl
in
scas
add
mov
aam
inc
add
cltd
mov
aam
adc
mov
xchg
mov
jnp
or
fcomp
mov
cltd
sub
push
and
and
sahf
inc
jae
lods
jl
repnz
in
mov
inc
rcrb
in
mov
jmp
test
sarb
push
pop
mov
dec
sub
sub
fcomp
or
into
or
mov
mov
mov
push
push
pop
push
jne
iret
xor
stos
mov
iret
adcl
push
inc
shrl
xchg
push
jg
dec
ja
push
addr16
loopne,pt
xchg
inc
bnd
stos
mov
adc
std
or
jecxz
maxps
cmc
inc
aaa
cmp
stos
es
jbe
hlt
inc
xor
add
adc
int
and
pop
lret
mov
xchg
jge
es
ror
sub
es
sarb
dec
mov
xchg
mov
sarl
in
insl
push
adc
fldl
out
jp
dec
inc
cmp
iret
ret
push
sbbb
test
std
outsl
in
out
aaa
dec
fiadds
inc
js
dec
add
repnz
jmp
dec
cs
imul
mov
inc
or
xchg
pop
xchg
mov
sbb
lds
nop
iret
lahf
into
xchg
pop
inc
cwtl
jmp
jae
xor
inc
mov
pop
jnp
lods
mov
jae
div
cmp
rcrb
xchg
or
ljmp
les
push
add
loope
cmp
icebp
ret
and
inc
icebp
jns
call
test
mov
sbbl
xorl
sub
pop
ret
push
loop
xchg
xchg
inc
xor
xor
push
testb
ljmp
arpl
add
movsl
jp
xor
add
ja
insl
fld1
int3
and
in
jp
xchg
add
mov
std
fstpt
inc
mov
xchg
das
lret
cmp
imul
push
inc
imul
jmp
rcrl
add
hlt
fimull
push
and
test
punpckhbw
sbb
push
pop
das
fists
mov
pop
push
cmp
add
mov
ficompl
sbb
fists
hlt
and
not
xchg
out
bound
test
icebp
sbb
cmp
cwtl
dec
pop
enter
xchg
adc
repz
add
movsl
sbb
pop
xor
adc
mov
push
mov
sahf
mov
ret
fs
rorl
xor
mov
bound
or
pop
sbb
adc
int3
ss
add
cmp
lret
es
jp
mov
subb
and
arpl
inc
das
inc
cltd
sub
cli
int
fidivrs
pusha
or
xchg
xchg
jnp
or
ret
in
jmp
rcr
sub
lock
adc
cltd
inc
imul
jo
ss
sahf
sub
pop
push
add
pop
mov
loope
sub
mov
jge
andb
ljmp
rcrl
sbb
clc
lret
lock
xor
sub
data16
in
fidivrs
mov
mov
aas
leave
push
adc
xor
int
mov
cwtl
sti
ret
xor
in
lret
iret
fmull
xchg
jl
div
push
js
dec
or
jae
fdivrs
and
push
sbb
or
sbb
jecxz
add
test
adc
mov
adc
and
sti
inc
xchg
fstps
xchg
pop
push
arpl
negl
leave
xchg
sti
in
sarb
fnclex
leave
mov
dec
pusha
clc
shufps
js
mov
subl
mov
femms
sbb
divl
insl
out
addr16
rol
mov
repz
addl
mov
add
cmpsb
jp
sub
test
adc
enter
pop
pop
pop
ficompl
je
roll
insb
cmp
subb
sbbl
fs
loop
jle
ss
mov
dec
sbb
int
aas
push
ror
andl
pop
lcall
shrl
cltd
jne
repz
pop
pop
test
pop
fisubrs
pop
mov
mov
sarl
cmc
jbe
in
rcll
aad
inc
and
pop
mov
stos
das
pusha
xor
stos
in
push
push
daa
cwtl
jmp
scas
pop
add
ja
data16
fisttps
shlb
lods
xchg
imul
inc
inc
mov
daa
es
shl
outsl
negb
test
sbb
rcr
mov
mov
adc
shrl
and
cltd
stos
pop
pop
in
cmp
fs
js
popf
sbb
out
aas
fcmovb
int
jae
xchg
sbb
sbb
shll
or
test
cmp
inc
mov
add
jns
push
dec
or
mov
dec
sub
int
fwait
pop
outsl
aaa
inc
or
and
mov
jle
pop
xor
sarl
lret
sbb
ss
push
enter
outsb
outsb
mov
push
into
cltd
push
outsb
lea
lahf
gs
mov
add
or
rclb
and
push
pop
mov
mov
jge
cltd
mov
xor
or
daa
push
enter
lods
mov
lock
mov
aam
lcall
pxor
in
in
clc
test
in
lock
mov
inc
xor
adc
push
pop
sarl
iret
mov
cmp
inc
push
xchg
sub
jl
outsl
pusha
jb
sti
xchg
aas
cmc
out
out
loope
and
push
inc
sbb
stos
xchg
stos
shlb
mov
xlat
push
dec
jne
and
inc
mov
push
lcall
sbb
push
pop
inc
lds
add
scas
mov
loop
loopne
adc
sub
call
jge
leave
call
movsb
nop
fsubrl
imul
mov
std
sub
lock
mov
sub
sbb
int3
popf
and
movsl
xchg
enter
fldl
jo
stos
inc
in
ja
test
or
jbe
sub
sahf
cmp
pop
jb
and
push
sbb
adc
cmp
add
push
sar
push
xchg
pop
sbb
insl
push
sub
outsb
dec
std
les
icebp
repnz
dec
ficoms
lahf
in
mov
sub
clc
imul
dec
scas
rolb
fildl
fwait
imul
shrb
fstl
adc
in
fcmovnb
sub
jl
push
mov
mov
mov
out
into
aaa
pop
mov
popa
test
push
cmp
mov
sub
mov
imul
and
divb
orb
and
out
cmpsl
test
test
push
popf
push
pushf
jle
cwtl
stc
jl
jae
dec
mov
jg
inc
jge
sub
ljmp
fwait
push
mov
repz
pop
add
in
jle
mov
pop
cmp
fidivrs
cld
lock
or
pop
add
jae
pop
or
xor
pop
movsl
push
ficoml
pop
jl
or
sub
cltd
or
lret
daa
jno
imul
or
or
push
jno
stos
bound
sub
sub
mov
push
push
and
push
iret
push
pop
inc
push
lret
popf
adc
jo
xchg
xor
sub
sbb
aas
xchg
jae
xchg
mov
es
loope
daa
xchg
shrl
loopne
xor
dec
mov
mov
inc
pcmpgtd
mov
mov
stos
xor
movsb
inc
cmpsl
call
les
inc
ja
cli
outsb
and
lods
setno
int3
mov
xchg
push
push
and
sub
push
je
push
jecxz
add
fwait
mov
loope
xor
xchg
stc
mov
add
mov
sahf
andl
add
pushf
dec
scas
mov
lahf
jecxz
into
scas
pop
push
imul
sub
cwtl
xor
and
enter
fldenv
into
inc
mov
push
and
in
push
jmp
je
loope
loop
xchg
cltd
inc
lcall
gs
mov
hlt
jo
jp
imul
inc
and
or
fnstenv
cwtl
xchg
add
inc
push
iret
bnd
pushf
dec
addr16
fisubrl
mov
jns
out
mov
ljmp
xchg
xchg
sti
mov
sub
pushf
enter
clc
push
cld
add
or
daa
adc
cmpsl
mov
add
fistpl
add
jno
clc
ja
pop
jo
mov
add
or
ss
cmpsl
mov
and
addl
lcall
ss
stos
pop
sub
lahf
iret
popf
call
int3
add
leave
push
addb
jge
mov
test
sub
mov
repnz
sbb
mov
dec
fsubrl
test
cmp
sub
jnp
mov
jne
notl
mov
mov
jmp
sub
xchg
fbld
arpl
addr16
inc
in
mov
out
enter
and
jge
push
das
jecxz
sahf
dec
leave
adc
or
adc
jle
xor
pop
mov
xor
xchg
cltd
ja
inc
jge
and
dec
insb
sbb
enter
mov
xor
add
loopne
push
insl
push
mov
cld
add
mov
mov
inc
pop
negb
loop
subw
popa
into
and
loop
push
and
fdiv
in
push
sti
insb
jnp
shlb
add
xlat
cbtw
and
sbb
jge
mov
push
push
lods
in
jb
jge
mov
mov
es
imul
pop
fimuls
fwait
pop
dec
cmpsb
add
cwtl
mov
push
sbb
add
js
dec
fldl
fdivl
ja
das
mov
pop
fs
ss
jp
push
or
popa
and
and
loop
popa
jle
add
pop
fldt
setb
add
lock
xchg
popf
xchg
push
ficomps
scas
cmp
pop
testl
jmp
lea
scas
lret
jecxz
insl
aas
es
mov
fidivrl
sub
xor
push
insb
add
sub
out
addr16
pop
sub
es
sarl
popa
jp
hlt
lret
sbb
sub
xor
arpl
and
mov
push
jnp
jle
daa
std
mov
pop
outsl
ds
in
jns
clc
pop
pushf
pop
sub
adc
cmpsb
negb
jno
lea
mov
mov
divl
mov
fmuls
fcomps
pop
int
inc
scas
daa
imul
icebp
and
push
mov
sbb
sbb
movsb
aas
or
pop
pusha
cld
cld
insb
dec
mov
push
enter
cmp
adcb
mov
sbb
leave
pop
push
cltd
ljmp
or
pop
cmp
insl
fstpt
or
push
icebp
in
pop
fbstp
stc
ds
adc
lcall
mov
cmpsl
cmpsb
fwait
das
ret
adc
inc
lock
xchg
adc
ret
add
jnp
call
test
pushf
divb
mov
in
orb
push
leave
adc
mov
add
ja
xor
add
add
mov
bound
sbb
mov
mov
outsb
push
cmp
inc
push
adc
int3
out
icebp
pop
push
or
stos
sbb
int
loope
adc
mov
aas
lods
leave
xor
in
xor
cmpsl
xor
push
je
popf
scas
sbb
je
ret
or
or
mov
dec
loope
mov
cmp
inc
and
add
hlt
scas
jo
shl
pop
dec
xchg
loope
add
out
out
xchg
sbb
sbb
cmpsl
pop
sarb
or
and
in
cld
fwait
jae
push
mov
fwait
hlt
or
push
jmp
or
rcr
shll
push
pop
out
push
fldcw
push
cwtl
mov
pop
adc
iret
lods
jmp
mov
mov
into
aam
ror
add
mov
push
repz
call
fwait
mov
mov
sub
popa
or
jb
inc
ficompl
push
mov
sub
pop
fnstenv
fdivp
push
mov
xchg
lret
gs
add
inc
fcmovnb
jg
sub
shl
andl
in
in
out
or
sahf
pop
fwait
pop
ficomps
fsubrl
pop
cmc
pop
dec
test
xchg
inc
mov
mov
xchg
lahf
sbb
js
aas
enter
pop
es
dec
pop
ret
lcall
xchg
push
xor
jo
jl
in
aaa
dec
and
shrb
pop
enter
pop
out
xchg
jle
push
jg
in
adc
mov
push
inc
test
mov
imul
push
sub
cs
stos
xchg
mov
push
pop
pop
xchg
xor
loop
and
mov
cmpsl
pop
int3
xchg
int
imul
mov
push
and
repz
xchg
mov
add
stos
outsl
mov
fsubrl
and
add
loope
mov
fld1
repz
xchg
test
pop
sarl
pusha
aas
cmpl
movsb
lods
pop
lret
inc
cmc
push
inc
pop
loop
mov
arpl
insb
adcb
adc
aaa
xor
rcrb
out
bound
fcmovne
inc
nop
jmp
or
dec
icebp
jns
sbb
out
ret
pushf
in
mov
sbb
sub
mov
pop
sahf
xlat
jg
aas
imul
mov
xchg
ss
pop
mov
test
adc
cld
xchg
mov
mov
scas
sbb
mov
movsb
andl
sahf
mov
sti
bound
add
dec
push
les
push
fs
scas
rcrb
cmp
xor
mov
mov
insl
mov
mov
jb
mov
out
sbb
inc
ret
jo
sub
dec
ss
push
sbb
sbb
cmp
loopne
cmp
adc
xor
jo
mov
or
movsl
add
arpl
addl
or
or
cmp
and
aad
mov
push
pop
movsl
push
inc
sub
xlat
xchg
out
shll
mov
clc
dec
add
or
xor
sbb
sahf
pop
jnp
dec
push
jle
xchg
stc
testl
mov
movsl
andl
icebp
add
mov
fwait
cltd
test
inc
xchg
stc
push
push
push
mov
sbb
inc
scas
pop
adc
jb
jb
aad
jb
xchg
enter
pop
outsb
sub
lret
push
push
cmp
xchg
dec
sbb
in
sub
cli
mov
and
mov
jl
sbb
xor
jl
fwait
jbe
mov
iret
movsb
add
outsl
scas
mov
leave
lea
fisttps
fisubl
mov
sti
jmp
insl
lea
imul
sub
addr16
fidivrs
jmp
pop
outsb
pop
inc
aad
xchg
lcall
xchg
insl
movsb
loopne
push
loopne
repnz
rorl
and
xchg
cwtl
scas
add
add
sbb
ds
lcall
or
hlt
pop
cmpsl
test
mov
dec
loop
scas
pop
dec
pop
add
jbe
push
jne
push
out
and
add
xchg
inc
aas
lds
ret
pop
test
inc
inc
call
and
mov
cmp
push
xchg
pop
sahf
stc
out
loope
call
cmp
loope
add
lods
out
sbb
lret
shl
div
push
dec
jnp
or
push
mov
out
push
sub
cmpb
lret
mov
test
pop
mov
dec
mov
jg
sub
sbb
xchg
xchg
movb
xchg
or
push
cmpsl
rorb
jnp
dec
stos
xchg
mov
addr16
das
scas
scas
adc
sub
rorl
inc
insb
das
mov
jbe
push
popf
push
push
sbb
fnstcw
jp
iret
mov
aad
sbb
push
add
jp
bound
push
jle
mov
dec
lret
mov
call
gs
sub
mov
addr16
mov
test
movaps
std
nop
repz
or
and
das
push
scas
jns
cmp
or
outsb
mov
pop
pop
inc
rcrb
adc
aas
ret
inc
stc
addr16
mov
ret
inc
inc
xor
in
lret
sub
ss
and
les
daa
pop
pop
fwait
jae
jnp
xchg
mov
inc
jbe
mov
sti
or
mov
lahf
mov
loop
in
or
cmpsl
xchg
jge
lods
es
ss
sbb
imul
scas
xchg
push
call
pop
add
mov
mov
adc
pop
ljmp
or
pushf
push
mov
fwait
sbb
push
pop
shlb
sbb
in
cmpl
adc
rcrb
imulb
xchg
fs
push
sbb
xlat
pop
pushf
xchg
push
adc
insb
push
cmp
xor
clc
test
stc
inc
sahf
insl
push
cmp
jae
jnp
inc
pop
mov
dec
jne
push
adc
or
sub
pop
outsb
xchg
rorb
fsubl
push
sbb
sbb
jae
fwait
lret
push
mov
dec
es
jle
lret
mov
mov
lods
xor
jmp
inc
les
andb
out
push
add
ljmp
aas
pop
pop
cmp
jmp
pusha
cmp
jne
aad
in
nop
punpcklwd
mov
sbb
push
pop
sub
sbb
testl
jnp
inc
pop
inc
ret
add
adc
daa
or
cmpsb
push
xor
inc
jle
or
mov
mov
hlt
jno
xchg
inc
push
arpl
sti
das
push
jb
inc
pop
cmpsl
cs
je
ss
in
push
jns
inc
dec
ss
popa
les
mov
cwtl
loope
daa
mov
mov
insb
pop
sbb
jg
add
mov
lds
aas
sub
cmp
dec
les
xlat
jo
cmpsb
mov
ss
das
pop
add
jno
add
dec
adc
xor
cs
xor
push
stos
insb
faddl
or
stc
fsts
mov
xchg
xchg
rcl
mov
jmp
data16
movsl
adc
roll
pop
ret
lock
sub
pop
dec
adc
jno
iret
xchg
pop
add
loopne
mov
push
clc
add
jg
scas
pop
sbb
pop
push
xor
push
cmp
xchg
lods
insb
sbb
xor
mov
jmp
aas
xor
js
out
call
mov
icebp
outsl
or
pop
scas
loopne
test
fcomip
pop
mov
imul
outsl
push
in
loopne
loopne
add
or
dec
scas
cmpsl
movsb
ja
adc
xchg
scas
loope
aam
xchg
lods
or
cld
push
cmp
push
adc
add
push
loop
push
jmp
mov
and
sti
adc
pop
push
jecxz
mov
rcl
faddp
popf
jp
jns
iret
xor
loop
cmp
mov
push
popl
aaa
cmpb
cmpsl
ja
dec
repz
ds
adc
shlb
pop
lock
fsubrs
sub
mov
jl
popf
mov
mov
dec
fimull
push
loop
cli
arpl
inc
imul
pop
add
cmc
cwtl
movsb
jo
xor
fimuls
inc
jg
push
cmp
mov
arpl
add
test
mov
les
jns
shlb
jae
and
xor
lock
mov
in
arpl
add
in
bound
repz
cmp
mul
int
or
test
ss
mov
ljmp
pop
pop
movsl
pop
scas
jne
mov
sahf
stc
cld
jle
repz
push
pop
push
insl
fcomps
loopne
or
add
mov
add
fldenv
mov
cmp
adc
push
aaa
push
xor
iret
popf
dec
mov
push
pop
and
xorb
mov
sub
aam
and
jecxz
jmp
lods
pop
cli
dec
xchg
out
cld
icebp
mov
movaps
mov
andb
or
aad
pop
int3
mov
aam
mov
sahf
bound
sub
aas
push
mov
or
push
jp
jg
shr
sbb
cmp
push
mov
fidivrl
inc
xchg
inc
int3
scas
xchg
dec
sarl
sarl
push
push
stc
popa
mov
pop
and
push
scas
fmuls
rolb
fucomip
cmp
int
sub
hlt
ret
adc
cvtps2pi
sbb
jae,pn
adc
push
lahf
inc
cld
fbld
xchg
scas
push
inc
int3
aaa
or
imul
mov
jbe
sub
in
ret
jmp
and
add
ljmp
push
repz
dec
lcall
push
hlt
fsubrl
shll
mov
sti
and
xor
lret
sahf
roll
and
xchg
je
xor
push
popf
es
push
call
repnz
sbb
das
fstps
iret
pop
push
cmp
mov
or
fcoms
leave
jg
enter
sub
aas
sbb
inc
sub
nop
mov
pushf
sbb
inc
push
loop
sahf
cmp
arpl
ljmp
jae
add
les
xchg
jno
mov
cs
inc
lret
xor
ficoml
inc
and
cmpsl
iret
or
push
cmp
icebp
int
sti
imull
add
dec
add
lcall
fcoml
iret
iret
addr16
dec
in
arpl
mov
or
mov
and
xchg
xor
andb
fstps
dec
das
or
fcoml
xchg
jecxz
lods
mov
sub
fldenv
sahf
add
mov
insl
ret
adc
push
repnz
mov
out
inc
jno
or
int
mov
mov
adc
cmp
dec
fists
mov
jbe
mov
ja
ds
ja
bnd
repnz
mov
test
movsb
sub
bound
in
and
aad
push
cmc
add
dec
not
push
scas
mov
jecxz
adc
lret
jne
cmc
ror
popf
mov
sub
cmp
rcr
dec
fs
outsb
outsl
aam
mov
mov
in
mov
packuswb
mov
fiaddl
dec
lods
inc
add
mov
push
adc
mov
sbb
mov
lods
cmp
out
fs
int
movsl
out
aad
ljmp
stos
cltd
popa
xor
mov
test
xor
test
mov
pop
inc
lds
cmp
xchg
and
or
movsl
xor
aas
aad
enter
xor
xor
test
or
push
jecxz
out
sti
lock
data16
inc
cmp
or
xlat
mov
es
sbb
test
test
fisttps
xchg
pop
xor
push
sbb
inc
popa
cmp
testl
insb
jbe
xlat
loop
mov
mov
inc
or
rolb
roll
mov
xchg
int3
lods
mov
outsb
push
dec
bound
inc
add
fimull
sbb
stc
xchg
or
inc
fdivr
movsb
sub
cli
lcall
xchg
inc
sbb
jl
addb
mov
mov
cld
mov
xchg
pop
push
add
mov
add
add
mov
imul
ds
ret
jp
xor
test
cltd
fdivrs
fs
inc
push
mov
sbb
jns
xchg
ja
into
push
push
xchg
aad
dec
mov
jne
pop
int
pop
cli
sub
call
faddl
adc
lea
mov
mov
lret
cmpl
pop
dec
adc
push
sub
std
xchg
push
xor
adc
shll
cmpsl
in
xchg
and
xlat
ret
in
sbb
or
mov
xchg
insl
mov
shrl
adcl
insl
leave
mov
add
add
nop
pop
and
xchg
mov
aam
xlat
mov
gs
sub
inc
cmc
stos
sub
xlat
pop
ljmp
adc
ret
cli
cmp
pop
cmpsb
dec
or
xchg
cs
xchg
push
and
mov
inc
sbb
jno
mov
sti
repz
mov
xor
jp
xlat
mulb
mov
fmuls
jmp
sahf
shrl
adc
lds
xor
mov
dec
xchg
push
push
cld
test
adc
add
repnz
hlt
cmp
imulb
add
xchg
lock
cwtl
xor
jp
cwtl
mov
lods
sbb
pop
cmc
inc
ds
and
loopne
push
in
cmpsb
jb
out
daa
sbb
outsb
mov
pop
out
sbb
not
pushf
mov
popa
icebp
sub
mov
sub
jmp
imul
push
mov
jne
cld
das
test
xchg
push
push
shrb
mov
sbb
push
fsts
fidivrs
xor
pop
jno
mov
jmp
bound
das
sbbl
cmp
or
imul
jle
jmp
ret
subb
xchg
mov
std
jnp
push
lcall
adc
adc
mov
jne
mov
je
out
and
xchg
sbb
jp
mov
jle
movsl
imul
loopne
cmp
repz
fnsave
clc
inc
popa
mov
adc
fidivrs
push
mov
jns
sub
xor
scas
pop
push
mov
ret
mov
pop
xlat
mov
sbb
sub
dec
scas
pop
sbb
cld
shrl
xchg
aaa
or
add
out
xchg
sbb
sbb
push
lods
sbb
dec
and
or
xchg
popf
lock
lret
xor
lea
lcall
fmul
pushf
test
test
sub
popf
test
pop
push
lret
sbb
pop
xchg
insb
xchg
je
xor
clc
pop
cmp
addr16
leave
fwait
xor
jns
movsb
sub
mov
repz
jl
jae
insl
movsl
or
inc
mov
fidivl
mov
fs
xchg
mov
add
and
mov
ss
scas
std
je
bound
leave
push
pop
adc
or
test
sbb
mov
add
loope
andb
in
push
pop
mov
inc
adc
lcall
push
sbb
ss
into
dec
out
dec
ror
dec
and
int3
adc
pop
stos
das
pop
push
ja
xor
mov
xchg
mov
pop
dec
pop
int3
cltd
jo
jo
in
jg
lcall
mov
stos
mov
cmp
movsb
lock
into
js
and
push
push
popf
push
xor
test
mov
sub
adc
sbb
dec
jae
dec
loope
pop
dec
sub
cmp
push
sub
cltd
fimull
ljmpw
imul
jecxz
inc
dec
cmpsl
or
inc
fisubrl
sbb
dec
lahf
pop
ds
insb
cmp
adc
or
outsb
popl
xchg
add
in
pop
ror
jle
jmp
mov
outsl
sbb
ret
cwtl
sbb
je
mov
into
xchg
xchg
xchg
repz
lahf
fldenv
clc
mov
adc
sub
test
cmp
test
xlat
jl
adcb
mov
xchg
jne
add
push
nop
iret
sbb
adc
mov
in
or
mov
push
imul
jle
jge
aas
paddsw
xchg
cmp
int
iret
leave
movsb
push
xlat
sbb
imul
clc
cmpsb
mov
cmpsl
cmpsl
cld
addl
cli
adc
xchg
or
mov
pop
sahf
xor
and
or
inc
aad
adc
mov
icebp
jecxz
test
fdivs
cwtl
xor
insb
sbb
iret
push
fsqrt
and
jns
pop
out
xor
sub
pusha
pop
lea
fmuls
dec
imul
jbe
addr16
sbb
push
outsb
stc
inc
aaa
nop
loopne
icebp
subl
jecxz
xor
mov
mov
jl
mov
xchg
imul
add
loopne
test
cmp
daa
pop
and
cld
add
test
lldt
mov
sti
push
push
add
je
push
stos
movsb
add
mov
int
sub
jl
shll
fimull
sub
mov
ja
mov
insl
or
mov
jnp
icebp
out
jp
shlb
pop
fcomps
stos
fs
ja
fbstp
cmpsb
call
call
xor
jno
enter
push
movsl
mov
push
jmp
jnp
push
data16
fcmovnbe
push
mov
pop
cli
imul
inc
xchg
mov
mov
clc
xor
jg
adc
scas
in
inc
cmpsb
xchg
inc
arpl
jno
hlt
aam
dec
stos
fsubrl
test
mov
add
push
fidivrl
lret
into
cmp
ficomps
repz
cmp
call
push
test
xor
popa
enter
or
push
sarb
cmp
push
jno
push
addl
aaa
and
jno
push
adc
js
int3
ja
mov
jbe
dec
mov
mov
addr16
mov
fnstsw
inc
fwait
das
adc
xchg
mov
stos
jmp
aam
ljmp
xlat
push
dec
das
scas
pop
push
lds
and
pop
iret
test
or
movsb
sbb
es
ret
icebp
add
cmp
int3
push
pop
xor
xchg
pop
xlat
push
jp
pop
and
cld
pop
pop
mov
mov
adc
fchs
mov
or
stos
leave
addr16
push
adc
mov
andl
xor
repnz
into
or
stos
and
call
pop
add
test
jmp
scas
call
sub
pop
repz
jecxz
std
xchg
andb
or
pop
ficoms
jecxz
frstor
rolb
push
ljmp
mov
data16
int
ja
jbe
sub
lods
mov
mov
add
arpl
insb
adc
popf
fcomps
cwtl
sub
imul
dec
jecxz
jb
fsubrl
push
out
mov
jge
xor
mov
mov
mov
mov
je
sbb
enter
ljmp
sub
cld
inc
call
rolb
and
add
push
inc
loope
out
adc
pusha
xor
adc
cmc
orb
push
data16
sar
scas
das
xchg
mov
push
cs
cmp
in
fcmovnu
adc
sub
rcrb
lret
xor
xchg
pop
pushf
out
and
orb
aad
sahf
jge
sub
in
bound
into
jl
cwtl
cmp
xlat
mov
dec
lods
rdmsr
out
test
add
ret
outsb
push
stc
pop
xor
xchg
pop
mov
push
lcall
or
sbb
sub
ficompl
sbb
movsl
inc
imul
rorb
fmull
xchg
clc
xor
mov
xchg
sarb
mov
stc
jp
and
jg
add
or
jae
imul
mov
adc
jbe
and
dec
int
ds
data16
mov
mov
jnp
and
cmp
or
jmp
jno
sahf
sbb
cmp
or
fdivs
add
inc
and
mov
sbb
daa
ss
enter
mov
xchg
jecxz
test
cmpsl
fsubrs
insl
hlt
test
aad
sbb
inc
push
aad
pop
xchg
mov
push
fidivl
fsubrs
leave
loopne
inc
add
loop
jo
imul
or
xor
sahf
inc
enter
cmpsb
xlat
cmc
ficompl
xlat
cs
cmp
cli
inc
mov
subl
mov
je
mov
push
test
fdivrs
bound
inc
fdivl
jne
jb
mov
lock
stos
repz
test
pop
push
xor
cmp
ljmp
or
push
cmpsb
add
ret
das
andb
add
negb
cmpsb
addr16
jg
adc
push
and
push
out
mov
cltd
mov
or
cli
jno
lea
js
jp
mov
xor
dec
jmp
rcr
int3
popf
and
adc
dec
lods
or
ja
int3
shll
xor
aaa
inc
cwtl
push
or
xor
movsb
ljmp
movsb
outsl
cli
sub
popa
inc
andb
je
xorb
fsubrs
out
stc
sbb
cmp
lcall
push
add
jno
fwait
mov
inc
lcall
fisttpll
sti
and
push
push
mov
mov
shrl
push
shrb
mov
cmp
int3
cwtl
int3
loope
int
data16
ds
sarb
cs
push
xchg
stos
fidivs
adc
ds
mov
lcall
dec
into
scas
jmp
pop
cmpsl
mov
notb
adc
adc
push
jl
sub
repnz
les
ljmp
sbb
adc
dec
test
sarb
jg
pop
jle
ljmp
das
sub
cmp
add
inc
cmp
or
jg
pop
loope
jecxz
ret
fisttpl
cmp
subb
dec
dec
call
fsub
mov
mov
sbb
add
mov
or
fimuls
lds
sub
xor
mov
push
loope
jl
push
or
xchg
popf
test
hlt
jns
push
bswap
xchg
push
nop
cmc
xor
xchg
pop
xlat
jne
in
cmp
bound
mov
jno
nop
mov
adc
sbb
jae
mov
rcrl
outsl
mov
jb
out
cmp
push
sbb
xchg
idiv
and
pop
and
fsubl
xor
mov
mov
enter
insb
push
sub
movsb
sub
pushl
gs
jo
addb
mov
inc
fimuls
fists
int3
xor
xor
inc
sti
adc
popf
daa
add
movsb
push
mov
insb
push
dec
ja
inc
rolb
inc
cmpsl
cli
add
add
and
and
add
lret
dec
stos
pop
pushf
pop
mov
loop
pusha
dec
dec
imul
nop
les
std
sbb
push
outsl
push
inc
xchg
rorl
fmuls
js
andl
in
icebp
pop
sbb
cmp
stc
popa
cmp
pop
cmp
pop
push
out
add
mov
bound
inc
sarb
lds
mov
loop
push
push
out
inc
mov
and
dec
rcr
hlt
push
rcll
mov
stos
test
fnstenv
or
insl
jmp
lods
pop
les
and
mov
xchg
xor
jmp
inc
xor
gs
mov
mov
jae
adc
or
jge
mov
je
and
lods
scas
frstor
add
popa
mov
mov
and
aaa
pop
hlt
sub
mov
rol
loop
adc
mov
mov
jae
bound
in
add
dec
movl
out
lret
cmp
pop
xchg
sbb
ret
test
jecxz
mov
pop
sbb
sub
roll
into
sub
pusha
pop
imull
jbe
and
push
test
jp
fcomp
aam
rorb
loop
inc
out
push
fmuls
fwait
in
mov
ret
or
jle
sbb
pop
adc
mov
ds
mov
rcrl
mov
and
popa
mov
out
js
lock
jns
or
push
repnz
inc
notl
xor
or
inc
jl
jg
loop
std
jnp
cwtl
in
mov
mov
aaa
sbbb
xchg
dec
inc
mov
add
adc
mov
imul
and
pusha
nop
arpl
sub
adc
pop
rcr
mov
mov
sub
and
stc
xor
jmp
inc
jnp
xor
aaa
fsubl
insl
xor
pusha
ret
ljmp
mov
pop
and
pop
mov
mov
cld
insb
shll
or
xchg
leave
jbe
les
int
dec
stc
xchg
inc
mov
lea
lods
and
add
fcomip
in
dec
sbb
xchg
outsb
jno
xchg
xchg
adc
adc
into
xchg
mov
ja
jg
mov
inc
mov
sbb
inc
sub
addr16
jecxz
pop
lock
inc
lahf
inc
fldl
adc
stos
xor
xchg
xor
pushf
dec
cld
das
pusha
mov
ret
pop
sub
fcomps
xor
call
enter
mov
loop
jbe
test
stos
pop
dec
test
jmp
sub
movsb
lret
ret
out
in
adc
xchg
jge
mov
lahf
loop
add
lea
lahf
sti
push
jbe
xchg
sbb
mov
add
sub
xor
stc
stos
xchg
and
fdivrs
dec
add
sbb
cwtl
in
push
iret
mov
mov
lock
and
mov
dec
les
call
xchg
les
jmp
jg
push
dec
insl
mov
fildl
sub
imul
fs
dec
lret
or
ja
imul
scas
test
and
fcom
or
sbb
jne
sbb
mov
mov
pop
push
adcl
cmpsb
rcrb
mov
xor
pop
and
int3
fcmovnb
jl
lret
in
out
inc
addb
xor
fidivl
hlt
or
sub
sub
push
dec
pop
cli
mov
sbb
dec
in
iret
jge
mov
sbb
lret
mov
pop
cmpsl
loop
enter
add
xchg
xchg
add
daa
aaa
nop
clc
mov
roll
xchg
jb
movsb
ret
pop
addl
test
jecxz
loop
loop
lods
push
rolb
xchg
aaa
loop
adcb
dec
aas
mov
xchg
adc
cmp
pusha
push
inc
mov
cmp
mov
add
and
aas
push
rolb
and
test
mov
xchg
hlt
dec
rorl
mov
loopne
xchg
lods
sub
mov
scas
lds
dec
fisubl
fcoms
sbb
mov
cmpsl
fstpl
lods
jmp
int
enter
mov
mov
mov
or
sub
jmp
push
pop
mov
ja
push
xchg
icebp
lods
jns
lahf
pop
mov
pop
xchg
dec
pop
pop
and
push
lds
in
xor
jp
fisubrl
shl
addr16
xor
jg
mov
lods
push
pop
loope
fimull
aaa
jbe
mov
test
lcall
adc
into
subl
enter
nop
xrelease
fdivrl
aas
mov
test
jp
test
data16
pop
test
inc
adc
imul
sbb
pop
dec
lock
call
rorb
cmp
xlat
je
mov
pop
dec
add
push
xchg
jnp
cld
mov
mov
and
jge
adc
call
mov
mov
or
jbe
bound
mov
mov
loope
in
sahf
int3
arpl
fsubrl
notb
pop
stc
pop
test
add
jae
leave
xor
ja
jle
mov
je
fwait
arpl
popf
push
outsb
test
pop
jnp
cmp
push
inc
mov
cmpl
std
test
adc
ret
or
mov
and
xchg
inc
jp
dec
out
shl
call
mov
fistpl
movsb
xchg
test
ja
mov
daa
mov
adc
das
xor
jmp
lods
inc
push
push
mov
push
xor
cltd
inc
out
popa
rcll
push
outsl
in
xor
pushf
dec
sbb
shl
test
scas
xor
jmp
push
lods
test
pop
mov
cwtl
mov
mov
idivl
ja
stos
popf
loop
loop
in
adc
lcall
adc
push
ljmp
aas
mov
dec
ja
sbbl
hlt
je
mov
mov
mov
addr16
fidivs
push
mov
adc
mov
loop
cmpsl
mov
hlt
add
push
out
cmp
fwait
xchg
mov
imul
pop
shlb
andb
and
sub
pop
push
bound
cwtl
mov
push
inc
into
cwtl
xchg
cmp
test
dec
outsl
movsl
jae
jbe
sbb
adc
in
hlt
lods
ret
pop
fistpll
pop
test
insb
ds
scas
add
callw
out
inc
lds
testb
fisubs
sub
movsb
sbb
sahf
iret
cmp
lret
push
sar
aaa
lcall
test
test
push
hlt
jg
sbb
jno
adc
adc
or
clc
test
lcall
daa
cmp
cld
mov
aas
or
aam
adc
mov
loop
sarl
xchg
mov
je
das
pushf
aad
into
push
rep
add
clc
mov
and
mov
push
sub
sub
or
mov
sahf
jae
adc
out
lret
jns
lock
test
fwait
push
push
lea
cmpsl
in
mov
cs
ficoml
das
test
cmc
mov
cwtl
jns
pop
sub
xor
push
mov
loope
aad
push
es
dec
imul
cltd
inc
stos
sbb
stos
mov
pusha
dec
jle
xchg
daa
xchg
imul
scas
out
mov
and
sbb
pop
sbb
pop
add
scas
ja
mov
mov
xchg
cwtl
mov
cs
dec
ret
jbe
xor
mov
icebp
insl
call
xchg
cmp
add
xchg
and
adc
ss
push
mov
imul
and
loop
test
inc
sub
add
lea
pushf
jg
push
adc
xchg
xor
mov
cmp
xchg
cli
cmp
ljmp
pop
mov
xchg
mov
add
js
movsb
nop
shr
movsb
mov
popa
sub
sbb
ja
dec
cli
aam
sub
shlb
in
xchg
mov
paddsw
movsl
rcrl
xor
fwait
pop
or
addr16
es
ljmp
fldcw
cmp
mov
xchg
in
movsb
sbb
mov
jg
outsl
or
add
push
push
mov
shll
xchg
jle
bound
mov
test
shll
cmpsl
mov
pop
dec
sahf
roll
or
xor
sub
jmp
inc
inc
test
aaa
iret
jl
repz
xchg
cmp
mov
inc
lahf
aad
ret
dec
in
cmp
xchg
jmp
pusha
mov
push
pop
aas
inc
fistpl
lahf
cmpsb
inc
out
jo
jne
or
mov
cli
ret
stos
cld
out
xor
cmpsl
stc
scas
fimuls
lods
fwait
or
xor
jne
add
jbe
fbstp
pop
sub
nop
rcrl
into
aam
mov
fcmove
ret
push
sub
mov
enter
adc
hlt
les
push
jo
pop
int3
pop
add
je
call
ret
icebp
pop
jmp
mov
or
inc
xor
sbb
sbb
test
xorl
pusha
push
enter
jl
shlb
pop
mov
fistpl
fistpl
aas
pop
imul
arpl
push
mov
mov
iret
callw
into
xchg
cmpsl
jne
pop
xor
jnp
inc
movzbl
inc
inc
xchg
addb
lahf
mov
mov
pop
mov
imul
jmp
outsl
aam
sub
push
push
addb
sbb
jo
test
test
jg
bound
fildl
adc
in
mov
and
adc
adc
stos
add
sbb
ss
push
dec
cwtl
in
xchg
xor
jne
scas
jnp
imul
mov
adc
mov
jp
daa
pop
cmp
int3
jne
and
cli
out
jbe
xchg
push
adc
fisubrl
sti
jae
dec
movzbl
aaa
dec
in
ficomps
jb
jge
ja
fsub
push
cmp
mov
outsl
aad
dec
xchg
push
xor
test
push
mov
pop
int3
in
imul
rcrb
inc
out
ffreep
jecxz
shll
dec
faddl
xchg
mov
add
pop
mov
push
cmpl
insb
imul
xor
sub
xchg
cmp
ss
aaa
stc
inc
mov
sbb
sar
or
cmp
or
out
mov
inc
scas
mov
fwait
jmp
mov
sub
pop
sbb
fwait
adc
push
pop
pushf
jmp
bound
jg
and
push
shll
add
sub
push
fwait
add
xor
loopne
pop
inc
rclb
aas
jmp
sbb
nop
mov
int3
loope
dec
xor
jge
out
test
or
out
jge
lret
imul
repnz
cwtl
jmp
in
ret
lret
mov
jns
pop
dec
sub
fnstsw
jo
adc
push
punpckldq
aaa
bound
and
loopne
pop
and
jne
pop
insl
jbe
gs
ja
arpl
sbb
push
cltd
cmp
out
ss
stos
mov
out
mov
lods
sub
test
dec
movsb
sub
leave
insb
cltd
cmp
adc
int
mov
or
add
imul
fs
jmp
pop
adc
xlat
and
cmc
dec
and
imul
test
jns
arpl
add
pop
jmp
xchg
jmp
je
and
jge
dec
jecxz
dec
bound
pop
data16
sbb
pop
out
cmp
insl
sbb
into
cli
ret
cmp
shll
addr16
ds
adc
xchg
lret
mov
jle
inc
or
movsb
int3
jbe
stc
push
in
pusha
stc
jecxz
mov
insl
loopne
jo
add
dec
sbb
push
add
pop
and
push
jno
inc
insl
jae
fcmovnbe
daa
push
push
push
jmp
xchg
adc
xchg
and
aam
cmp
scas
shll
mov
jno
mov
out
call
inc
mov
pop
lods
popf
xchg
pop
addr16
cmp
mov
xlat
inc
and
pushf
mov
cli
xchg
aam
js
aas
scas
rorb
xchg
test
push
shrb
mov
mov
cmp
repz
mov
fisubrl
aad
pop
scas
cmp
mov
cmpsl
stos
xor
xchg
fcomps
inc
jle
das
xchg
divb
insb
dec
cmp
test
int3
xor
cmp
out
notb
je
fcoms
xchg
leave
lret
add
dec
sti
lds
jp
dec
into
lds
sti
mov
mov
es
mov
cmp
pop
scas
cs
sbb
je
push
fidivrs
in
arpl
outsl
lcall
lret
xchg
in
in
adc
cmpb
leave
insl
lret
in
cmp
inc
hlt
mov
dec
cwtl
inc
push
or
aam
sti
inc
pop
pop
clc
test
and
dec
sbb
adc
fsts
and
fwait
or
pop
mov
cld
push
and
dec
enter
cmp
pop
dec
test
xor
xor
push
pop
iret
lods
xchg
cmp
fwait
in
mov
je
dec
stc
xchg
or
push
mov
out
mov
dec
ss
ljmp
mov
lock
test
stc
rolb
push
lock
mov
adc
inc
xchg
outsb
ss
xchg
outsb
call
push
or
sbb
xchg
dec
cmp
fstps
stos
push
imul
adc
arpl
push
rcll
stos
mov
add
mov
push
or
and
dec
mov
xchg
xchg
repnz
int3
xchg
rcll
or
sbbl
lods
mov
and
inc
lret
repz
gs
pop
xor
fldl
scas
cmpsl
sub
push
lret
je
mov
icebp
fsubs
imul
pop
data16
mov
lahf
addr16
and
shlb
inc
es
sub
lods
mov
xor
ljmp
pop
xor
mov
push
jmp
dec
cmp
cmpsl
push
das
out
push
daa
popf
mov
cmp
mov
mov
xorl
adc
ds
pop
fiaddl
xchg
pop
cmpsl
mov
in
xor
das
outsl
test
out
fdivl
inc
jp
test
adc
sbb
and
fwait
cmp
and
pop
daa
mov
in
xor
jb
iret
mov
xor
adc
xor
ficompl
push
add
xchg
out
in
sub
mov
pushf
xchg
scas
adc
pop
push
mov
data16
inc
ret
sbb
push
and
xchg
cmp
rorl
jno
cld
inc
adc
push
repz
hlt
adc
test
push
mov
jb
je
out
and
push
movb
sbb
call
dec
dec
stos
aaa
or
jno
xchg
pop
ds
cmpsb
cmp
leave
lods
push
push
cmp
loop
mov
pop
lret
push
or
cmpsl
or
push
leave
inc
sbb
icebp
mov
imul
add
in
adc
inc
cmp
clc
fiadds
jae
iret
or
xor
pop
jecxz
test
push
add
movsl
shll
stos
scas
test
mov
sub
mov
fs
sub
imul
push
stc
push
xor
dec
pop
inc
add
push
and
adc
xlat
popf
movsb
shlb
rcll
push
xlat
mov
shll
das
in
fcmovnbe
xchg
cli
mov
and
mov
mov
lahf
dec
icebp
pop
aas
xchg
inc
lock
test
aad
xchg
inc
push
mov
mov
xchg
sbb
dec
sbb
daa
and
inc
pop
packsswb
pop
popa
xchg
inc
sbb
cmp
rcrl
cmp
and
mov
or
pop
fisubl
xchg
repnz
sbb
mov
movsl
stos
sub
enter
mov
ret
ljmp
dec
xchg
push
in
int3
cs
jne
adc
dec
mov
stos
std
push
cmp
xchg
add
mov
add
mov
jnp
into
int3
idiv
xchg
mov
in
mov
sahf
cmp
mov
mov
dec
or
jbe
xor
sbb
out
xor
cs
int3
out
mov
cld
ss
or
mov
rcll
out
daa
add
mov
inc
inc
out
pushf
add
rorl
inc
sbb
out
aam
add
out
add
popa
mov
mov
and
xor
mov
mov
jae
mov
push
mov
stos
mov
test
mov
test
and
subb
jmp
jg
sbb
loop
and
jg
in
lahf
pop
scas
int3
and
dec
pop
jb
jnp
daa
cmpsb
shl
aad
cltd
inc
lea
rclb
lods
in
les
dec
daa
cmpsl
sbb
mov
pop
pop
scas
iret
filds
sub
nop
adc
xchg
xor
add
jb
mov
leave
mov
xchg
cmpsl
push
lret
arpl
mov
mov
rclb
xchg
scas
inc
jle
pop
cmpsb
psubw
pop
aas
push
in
sti
addr16
fwait
cmp
mov
outsb
outsb
clc
imul
repnz
mull
xchg
or
in
popa
pop
les
pop
pop
jne
nop
divb
sbb
nop
lds
inc
mov
mov
pop
jmp
jg
outsb
xchg
ss
pop
aaa
daa
out
pusha
adc
sub
inc
mov
shr
jns
jg
inc
adc
mov
icebp
jle
roll
pop
cli
and
ja
pop
ja
mov
int3
pop
je
mov
pop
imul
cmp
or
xor
mov
in
mov
mov
push
pop
repnz
shrl
pop
add
and
or
mov
mov
adc
fisubl
pushf
and
or
rclb
jnp
and
jle
divl
enter
inc
andw
mov
lcall
push
pusha
jae
sbb
sub
lods
push
stos
stos
jp
shll
in
xor
dec
mov
pusha
mov
inc
mov
mov
cs
rolb
push
das
stos
or
jle
jne
ds
call
rcr
jno
inc
or
aaa
sub
inc
std
fwait
test
jbe
addl
movsl
clc
cmp
xchg
jmp
aam
push
dec
dec
pop
movsb
repz
adc
and
test
jmp
nop
enter
sbb
popf
add
movsb
ja
sub
add
bound
subb
aas
push
mov
lret
or
ret
sti
sub
ds
dec
stos
and
pop
inc
sbb
imul
lret
push
jbe
or
imulb
rcl
dec
in
inc
mov
xchg
pop
fisubs
sub
out
hlt
aaa
pop
jnp
jle
mov
inc
shl
cmpsl
dec
and
lds
stc
pusha
push
cmc
mov
push
orb
shr
sub
faddl
push
cmc
pop
add
hlt
pop
cmp
push
iret
ljmp
xchg
dec
inc
aam
test
sub
dec
jmp
adc
or
cmp
push
ss
jns
sbb
lahf
jb
mov
push
xor
mov
or
mov
out
test
and
dec
jge
adc
push
imul
jo
xchg
or
aas
push
dec
pextrw
cmp
aas
add
in
loop
scas
add
jecxz
sub
je
push
inc
pop
mov
aaa
jnp
dec
jns
mov
cmp
ss
pop
mov
xor
push
hlt
sub
rcrl
orb
mov
inc
mov
mov
inc
emms
pop
push
push
subb
inc
outsl
dec
xor
mov
inc
or
leave
sbb
inc
push
ss
inc
add
dec
ss
mov
ret
ss
mov
jl
cli
addr16
movl
stos
mov
enter
push
add
adc
aam
shlb
ficoms
jg
aad
in
fnsave
imul
insl
scas
mov
xchg
dec
out
aas
mov
addr16
rcl
sarl
cwtl
imul
xchg
mov
adc
or
jnp
pop
push
subb
push
fwait
push
mov
add
fdivl
ss
cwtl
inc
sbb
push
mov
and
push
outsl
cwtl
and
mov
rorl
mov
xor
xchg
loopne
cld
je
push
or
adc
imul
dec
mov
fdivr
add
cwtl
imul
fidivs
push
fbld
dec
inc
test
xchg
push
shlb
inc
shl
pusha
adcb
cmp
lods
incb
fldenv
xchg
mov
jb
mov
div
roll
inc
cmp
dec
flds
push
ret
pop
pop
popa
outsl
cli
push
cmpsl
or
in
add
filds
sub
ficoms
inc
inc
add
jo
adc
push
mov
jge
loop
or
xor
pop
push
mov
addr16
sbb
mov
mov
pop
cmp
jecxz
iret
int3
push
mov
push
push
adc
mov
das
cmp
inc
sbb
pop
mov
loope
iret
cmpl
mov
in
in
test
xchg
push
repz
sbb
stos
mov
pop
hlt
sub
mov
into
enter
inc
orb
pop
adc
or
in
cltd
test
cmpsl
loopne
xchg
daa
pop
lret
filds
pop
sbb
movsb
aad
xchg
icebp
lret
cmp
add
pushf
cmp
and
jo
into
mov
movsl
push
push
xor
or
xor
inc
sbb
jecxz
adc
in
xor
adc
sub
pop
jmp
daa
dec
mov
mov
adc
test
insl
add
ljmp
jle
ja
outsb
ja
or
iret
int
xchg
sub
xlat
cmpsb
jne
stos
add
add
lcall
push
jnp
cltd
into
inc
mov
dec
sti
sti
mov
mov
adcb
ret
mov
push
pop
daa
lcall
adcb
jb
jns
pop
jnp
cmp
dec
ja
add
mov
mov
push
mov
mov
xorl
iret
fwait
xor
add
pop
aaa
dec
inc
div
cmpsb
sarb
je
mov
xchg
pop
cld
xchg
out
xchg
xchg
jge
dec
faddl
out
adc
movsl
add
sub
fstpt
jmp
fcoml
pop
loopne
cmpsl
pusha
js
mov
sbb
test
addb
jmp
std
lcall
iret
xor
mov
push
mov
ret
aas
shll
into
or
add
lcall
bound
pop
negb
jmp
sub
push
cli
daa
test
jl
xchg
push
jge
pop
and
mov
fsubrl
xchg
out
mov
popa
out
mov
add
arpl
push
popa
cld
cmpsb
pop
dec
mov
or
dec
lea
mov
mov
xchg
jl
pop
aam
xchg
in
arpl
rorb
inc
inc
dec
xor
neg
aad
jo
loope
mov
pop
fnstsw
jb
pop
jl
icebp
jle
inc
jb
or
xor
inc
fisttpll
stos
cld
clc
loope
mov
outsb
out
aad
and
sbb
ret
testb
int
orl
mov
mov
lret
sbb
xor
pop
call
sbb
loope
xor
sti
jb
jae
or
or
mov
push
cwtl
shrl
and
test
add
pop
xchg
aam
fiaddl
lret
imul
jecxz
xor
enter
repz
dec
cli
mov
mov
fildll
push
add
mov
outsb
jns
cltd
fcomps
cltd
sbb
cmp
push
xchg
fstps
fwait
add
push
lahf
jbe
fwait
push
fmul
dec
sbbb
cltd
roll
xchg
lahf
push
inc
xchg
push
movsl
adcb
data16
inc
cmp
pusha
mov
lahf
mov
pop
mov
mov
into
out
cmovns
aaa
push
cs
push
out
xchg
shrl
not
xchg
rol
mov
mov
cmp
mov
mov
add
xor
xlat
push
jg
push
iret
shr
cwtl
or
fxch
cwtl
test
cwtl
or
dec
cld
out
mov
add
dec
popf
push
imul
jae
rcr
ds
loope
and
popa
xchg
ljmp
xor
or
or
test
mov
xor
sbb
repz
and
in
mov
pop
pop
enter
lret
in
ljmp
xor
sub
pmuludq
bound
popf
inc
mov
loopne
pop
test
sub
push
mov
sub
jno
mov
inc
icebp
movq
dec
and
adc
cltd
dec
jnp
inc
add
mov
aad
jp
or
enter
mov
dec
loop
xor
ss
cmc
sub
in
push
mov
enter
daa
leave
lea
cs
sub
add
and
mov
jl
cmp
into
jp
xor
dec
mov
cmp
xchg
push
pop
mov
jp
bound
or
lret
add
add
push
fisttpl
outsl
loope
in
popa
adc
xchg
hlt
mov
icebp
mov
pop
cmpsb
pop
mov
fimull
pop
mov
mov
pop
lods
cmc
fs
xchg
enter
pop
push
leave
mov
mov
xchg
dec
outsb
push
pop
fwait
in
sar
jb
cmp
repnz
fldenv
inc
inc
rcrb
jmp
test
out
or
xchg
int3
dec
clc
movsb
mov
cmp
subl
lea
ret
mov
popf
mov
jae
mov
addr16
mov
data16
jecxz
popf
or
mov
cmp
in
cmp
and
mov
mov
jle
mov
sbb
pop
xchg
sbb
into
adc
xchg
fst
push
fs
push
push
sbb
je
aas
gs
add
jl
fdivrp
popf
packsswb
pop
or
pop
inc
inc
pop
mov
jecxz
add
add
lcall
push
aas
fbld
js
lock
subl
add
das
pop
sbb
xchg
movsb
shll
add
cwtl
ret
aaa
push
push
xor
cmp
jne
and
mov
add
pop
in
pop
dec
paddusb
pop
mov
dec
pop
test
iret
pop
in
sub
cld
sbb
mov
sub
sub
loope
push
pop
adc
xchg
push
and
jl
gs
int
sub
int
xchg
xchg
jno
jl
sbb
ljmp
in
or
aas
fwait
cmpsl
fucomp
dec
mov
in
stos
cmpsl
js
out
fnstsw
outsl
scas
push
cmp
mov
sahf
jl
mov
iret
mov
add
es
subb
pushf
fimuls
jns
xorb
loopne
xor
pop
mov
push
adc
shlb
mov
sub
outsb
pop
cwtl
sub
mov
inc
xor
pushf
lret
jecxz
popf
loopne
inc
mov
mov
push
adc
lods
push
jle
int3
in
xchg
fs
ss
or
mov
pusha
aam
ds
lea
mov
jae
xchg
hlt
out
in
in
adc
les
adc
pop
mov
fs
inc
outsb
arpl
sti
xchg
int3
sahf
popf
adc
cmp
xor
mov
sub
add
mov
call
dec
out
push
inc
es
adcl
mov
mov
stc
mov
pushf
push
addl
or
push
pushf
jb
roll
pop
inc
mov
cmp
pop
mov
jno
fs
mov
sub
pushf
jl
jp
mov
cmp
pop
jne
mov
loop
pop
adc
lahf
sub
data16
xor
cmp
and
adc
sub
nop
inc
fisttps
inc
shrl
in
rcrb
lea
into
mov
mov
fldcw
cld
fidivrl
leave
mov
cs
repnz
or
ret
mov
xchg
push
adc
and
cmpsb
outsb
sbb
out
pop
add
movsl
sti
cwtl
daa
and
or
inc
popa
movsl
inc
insl
add
sub
pop
je
fists
loopne
xor
jmp
xor
loope,pn
and
xchg
adc
loop
push
mov
cwtl
arpl
add
cmp
dec
fidivs
fbstp
repnz
outsl
sahf
ret
cmp
movsl
test
mov
mov
and
ja
pusha
and
jb
sbbl
dec
xlat
cmp
fdivr
or
inc
insl
outsl
shl
pop
or
fiaddl
sub
ret
mov
ficoml
std
cmc
hlt
popf
or
jnp
enter
sub
pusha
sbb
mov
lcall
cmp
out
stc
add
daa
mov
or
shl
push
outsb
mov
xor
and
pslld
or
pop
adcl
fwait
or
aad
pop
lret
push
dec
adc
shrb
leave
mov
std
xchg
dec
push
leave
push
sub
inc
mov
pushf
pop
inc
push
fnsave
mov
xlat
xor
cli
rclb
jp
push
xchg
pop
leave
mov
popf
cmc
or
xchg
scas
call
cltd
cmp
cmpsb
ds
pop
das
xchg
push
jl
call
ret
xor
fiaddl
repz
push
push
sub
dec
jl
lods
add
leave
fbstp
and
sbb
inc
das
inc
sub
lods
jge
sbb
mov
loop
or
andl
test
push
or
cs
push
dec
xchg
inc
sbb
mov
inc
pushf
add
dec
jmp
xchg
pop
mov
jnp
adc
mov
xor
stos
imull
jp
test
mov
andl
rorl
mov
xchg
rolb
mov
gs
fcmovnu
test
mov
push
inc
pushf
adc
inc
or
mov
sub
push
xchg
push
cltd
out
std
inc
cmp
jg
sahf
inc
fnstenv
dec
jae
es
and
mov
jnp
rolb
mov
into
enter
test
mov
dec
daa
jns
sarl
stos
in
daa
sub
pop
or
adc
ret
aam
ss
loopne
or
iret
icebp
mov
jb
xor
xor
inc
xchg
cs
repnz
inc
add
and
sar
mov
stos
daa
dec
lods
loope
xor
and
lods
iret
pop
dec
xchg
mov
push
jno
aam
fistl
or
mov
jbe
mov
xchg
in
inc
dec
pop
sbb
cmpb
inc
cltd
xchg
mov
cltd
adc
push
adc
sub
and
cmc
sub
jne
push
pop
loopne
mov
adc
mov
mov
inc
xchg
lock
push
lea
stos
or
ret
insl
sbb
sub
xor
in
pop
inc
fmull
lea
fcmovu
in
jl
stos
jge
roll
xchg
xchg
adc
fucomp
sbb
sbb
fistl
fs
adc
nop
xchg
rorb
std
xchg
adc
fbstp
ja
out
mov
xchg
adc
mov
push
idiv
mov
sbb
out
inc
mov
xorl
mov
ds
fimull
inc
xor
pop
stos
mov
mov
lods
sub
jle
pop
mov
xor
and
mov
lahf
cltd
lcall
ja
clc
sti
rorb
lea
stos
enter
aaa
inc
loopne
mov
xor
xor
les
mov
pop
dec
push
xchg
push
pop
es
popf
mov
and
ret
repz
pop
push
fstps
rorb
popf
std
ret
mov
add
xor
fs
cli
sarl
mov
inc
mov
mov
xchg
clc
pop
mov
shll
sub
mov
xchg
stc
mov
aas
sub
cmp
pop
mov
or
inc
push
in
mov
jp
rcr
and
mov
push
pop
out
loope
mov
push
adc
jp
scas
cmp
xlat
mov
lods
sub
xchg
pop
push
adc
cmpsb
sbb
pop
adc
inc
in
cmp
leave
dec
lahf
fiaddl
call
sub
jmp
or
std
push
and
pop
psubd
es
add
xchg
subl
xlat
xchg
dec
pop
push
lret
add
arpl
imul
lods
sub
shl
mov
movsb
push
fnstsw
lock
ret
movsb
rol
negl
jns
mov
jnp
pop
add
xor
fmul
in
mov
in
xlat
xchg
aas
rcll
cmp
fwait
adc
dec
loop
inc
adc
loop
sti
jns
loopne
std
mov
arpl
in
lea
jbe
adc
ja
dec
mov
sti
and
push
call
movsb
sbb
mov
dec
and
sbb
jmp
pop
sub
cmp
sbb
and
inc
fnsave
jno
mov
gs
push
fldcw
dec
sub
xchg
cmpsb
jl
inc
loope
imul
cmc
add
out
lcall
lret
repz
hlt
xchg
jb
popf
xor
jnp
mov
test
sub
stos
xchg
outsb
or
fs
aaa
dec
and
outsb
mov
popa
cmp
cld
dec
mov
cmp
pop
push
shlb
fsubrl
stos
outsb
inc
dec
sbb
push
mov
sahf
dec
mov
outsl
das
inc
in
jle
shrb
rorb
aam
dec
jb
int
ss
sub
inc
jmp
clc
sub
es
ja
cmp
mov
or
push
and
call
xor
and
push
enter
mov
es
mov
int3
xor
adcb
jmp
mov
cmp
push
lds
pop
adc
add
mov
movq
inc
es
adc
mov
cs
aas
dec
and
push
cmp
push
push
or
repnz
sub
out
test
cmp
mov
cmp
shlb
hlt
or
jnp
pop
xor
fcoms
xor
push
loope
jle
sub
xor
xchg
fstpl
cmpsl
fsubl
xchg
jle
rorl
cmpl
orl
out
add
inc
mov
sub
push
push
adcb
cli
mov
outsb
stos
or
dec
mov
das
mov
ret
movsl
jne
sbb
xchg
aas
or
test
lret
push
push
les
mov
push
insl
ret
push
pop
loope
lds
pop
lods
add
js
jns
mov
xchg
sbb
or
pop
call
sahf
movb
nop
ret
ret
or
insb
jno
mov
fwait
leave
dec
or
cmpsl
icebp
pop
mov
dec
shlb
dec
mov
shll
pop
xchg
sub
cmpsb
or
push
pop
lcall
incb
sub
add
mov
stos
adc
xchg
stos
add
dec
lock
xchg
jae
add
data16
mov
in
popa
sub
out
call
jp
inc
daa
test
test
dec
mov
das
mov
out
imul
gs
xchg
daa
sub
loopne
xchg
aas
fwait
mull
xchg
sbb
out
mov
gs
xchg
fadds
adc
xor
jo
rcrl
push
add
mov
mov
je
loopne
test
in
mov
cmp
sbb
js
sbb
insl
packsswb
jmp
cmp
and
xchg
enter
clc
cmpsb
int3
pop
xorb
xchg
lret
cli
call
mov
xchg
sbb
movsb
mov
and
pop
sbb
inc
cmp
dec
stos
inc
add
jo
sahf
pop
scas
jo
aad
pop
mov
lret
es
imul
dec
test
mov
faddl
cmp
enter
adc
pop
cwtl
lret
imul
cltd
in
aam
inc
sahf
mov
sub
mov
fistl
xor
gs
cmp
adc
cmp
pop
push
push
hlt
mov
loope
sahf
xchg
jecxz
cmp
fists
mov
mov
and
inc
das
icebp
push
push
mov
mov
leave
push
ljmp
jae
into
sub
pop
ss
jae
ljmpw
adc
std
aam
xor
loopne
test
push
call
fwait
sahf
rep
add
dec
adc
pop
cmp
cmpsb
imul
jns
inc
std
adc
or
pusha
repnz
dec
test
fcmovnbe
fists
aaa
xchg
mov
and
push
movsl
pop
call
mov
push
insl
sub
aaa
sti
jae
addb
jle
mov
jecxz
cmpsb
mov
popa
lea
jnp
sbb
mov
jae
pop
gs
dec
lcall
aad
mov
imul
test
ds
jmp
mov
loop
outsl
pop
ret
int3
dec
mov
call
xchg
imul
xor
push
out
jns
mov
jno
lret
adc
arpl
aaa
add
loopne
jbe
xor
in
mov
or
inc
rcl
sub
dec
xchg
adc
pushf
jne
mov
sub
mov
addb
dec
add
mov
cmp
pop
lods
and
fsubl
jecxz
sbb
xor
cmp
inc
bound
roll
in
in
jmp
sti
pop
hlt
in
ds
es
lret
add
or
insb
sbb
stos
fwait
sbb
jp
mov
out
ds
jle
xchg
adc
xchg
lds
sbb
fcmovne
sub
ljmp
in
and
and
repz
pop
fldt
jle
sbb
sti
cwtl
in
scas
inc
es
dec
xchg
aaa
mov
loopne
gs
pop
sbb
sub
add
pop
fistpll
push
sub
adc
aam
ror
rclb
fnstsw
inc
mulb
cmpsl
sbb
mov
push
aas
test
dec
movsb
subb
jae
or
jbe
inc
add
ja
movsb
aad
lock
cltd
and
inc
mov
imul
dec
ljmp
in
aad
mov
pop
mov
ficomps
lret
test
xchg
shlb
or
shll
daa
lsl
hlt
mov
push
xchg
bound
popf
inc
lock
test
shlb
imul
mov
adc
add
sub
dec
dec
sbb
push
and
test
in
stos
lahf
jmp
xchg
xchg
add
cmpb
icebp
mov
dec
mov
jmp
jle
clc
test
mov
fdivrs
iret
test
mov
in
hlt
fcomps
clc
add
sahf
pop
push
imul
addl
xchg
adc
mov
arpl
hlt
xlat
push
fst
mov
jmp
sbb
dec
out
incl
dec
add
adc
int
aad
inc
pop
scas
jns
hlt
dec
xchg
xchg
leave
mov
std
push
aas
cltd
jge
cmp
adc
xchg
mov
scas
sub
xor
nop
aad
lods
or
push
pop
test
popf
mov
mov
aaa
clc
in
adc
es
stos
test
mov
mov
scas
mov
hlt
add
lods
mov
enter
adc
mov
dec
das
push
rclb
lods
sbb
and
les
insb
sub
cli
cs
and
mov
into
arpl
inc
push
fwait
leave
aaa
mov
test
fsubl
addb
mov
lds
mov
jnp
or
mov
shll
pop
fisubs
push
and
test
jmp
and
sub
push
decb
jne
sbb
cwtl
popa
icebp
das
repz
fcmove
pop
xor
mov
or
xchg
arpl
add
adc
fcoml
lds
mov
mov
or
movsl
jb
js
inc
test
mov
xor
mov
call
push
and
push
push
psrlw
push
cld
cli
es
cld
gs
add
loop
cmp
add
adc
push
dec
pop
mov
outsb
or
hlt
dec
mov
mov
sahf
sbbb
pop
sbbl
mov
shrl
add
mov
cmc
in
stos
xchg
aas
movsb
mov
es
movsl
mov
sub
mov
push
popf
xor
sub
fmuls
inc
jbe
jg
add
cltd
dec
rclb
notl
jg
or
pop
data16
and
or
lret
and
adc
ret
mov
scas
mov
push
xchg
mov
insl
mul
push
adc
xchg
cmp
pushf
imul
clc
xchg
std
loopne
sub
test
int
sub
jl
std
sub
inc
dec
in
cs
mov
add
das
icebp
inc
add
jmp
pop
lret
sub
or
push
xchg
ja
add
jcxz
or
inc
cmpb
and
les
lds
inc
leave
mov
mov
mov
test
std
and
fsubs
mulb
insb
jnp
ret
jo
out
or
jns
xor
pop
xor
dec
stc
orl
out
mov
add
jecxz
inc
sahf
adc
cmpb
add
popf
test
push
pop
cmp
scas
or
repz
test
lret
dec
test
popa
xchg
es
jp
xlat
imul
out
fwait
cli
ljmp
push
xchg
add
xchg
into
mov
loop
mov
mov
hlt
push
fstpl
sub
imul
out
xor
xor
loop,pt
inc
adc
xchg
sbb
jno
cmp
xor
xor
cmpsl
imul
cld
adc
pop
fsubr
gs
lock
and
jbe
cltd
push
aad
xchg
test
add
addr16
into
lret
filds
fildll
into
adcb
pop
jmp
jle
mov
jle
loop
pop
bound
jmp
call
pop
hlt
sub
in
mov
mov
test
cld
lret
push
mov
aaa
bound
mov
xor
fildll
cmp
repnz
repnz
mov
aad
xchg
cmp
mov
pusha
mov
sub
mov
mov
dec
xor
loope,pt
lahf
jecxz
mov
data16
jnp
iret
arpl
fcmovb
xor
xchg
xchg
sbb
sub
subb
sbb
lock
daa
mov
and
jae
or
push
cli
mov
xchg
cmpsl
mov
mov
push
cmp
and
in
and
xchg
cld
xchg
loope
inc
std
inc
pop
aaa
into
or
inc
sub
test
mov
stc
xor
popf
rcr
xchg
mov
mov
in
ret
and
mov
and
icebp
add
pop
stos
cmp
fistl
cltd
sub
and
xchg
decl
mov
clts
jmp
mov
les
dec
jp
xchg
les
add
lret
shlb
xor
jbe
cmp
sti
mov
mov
xor
call
insl
outsl
xor
ret
xor
xchg
mov
mov
sarb
xor
mov
sub
and
inc
into
mov
mov
lods
cmp
outsb
stos
mov
dec
jno
push
and
mov
xchg
push
sbb
push
push
sbb
loope
mov
mov
test
xor
mov
sbb
in
mov
insl
cltd
mov
sub
test
cmp
fistpl
subb
fidivrs
add
ss
js
sub
push
or
adc
cmc
enter
mov
addr16
cmpsb
outsl
sub
and
sbb
sub
push
mov
aam
mov
inc
pop
push
test
jnp
add
lcall
mov
arpl
arpl
shrb
and
decw
or
jbe
adc
xor
pop
outsl
cmp
ret
mov
test
pop
imul
repnz
cli
cmp
pop
das
jae
jno
pop
call
mov
clc
jl
cmc
orl
lret
das
scas
or
and
test
mov
push
test
dec
dec
push
push
pop
jbe
xchg
shr
aad
gs
out
shrb
repz
cmp
push
test
jb
rclb
mov
mov
add
dec
stos
xor
and
mov
lock
cmp
and
add
icebp
js
xor
bound
cmc
js
jmp
int3
mov
in
jle
or
mov
pop
adc
jle
rcrb
mov
add
jp
jl
dec
push
pop
sub
push
xchg
imulb
adc
sub
int3
sbb
cli
sub
xlat
fisttpl
fisubrl
push
scas
imul
fimuls
add
imul
scas
lcall
mov
pop
add
mov
data16
enter
mov
rolb
inc
dec
cltd
push
and
or
pop
mov
inc
mov
or
icebp
fildl
mov
mov
push
or
out
ss
xchg
add
add
les
fisubrs
sub
sarl
sbb
into
loop
push
in
cmp
sbb
js
pop
rcrl
mov
pusha
lock
gs
mov
std
xchg
mov
pop
mov
mov
cmp
mov
bound
loope
and
pop
mov
insb
jg
into
repnz
inc
bound
movsl
mov
xchg
outsb
pop
aad
sub
add
jne
fdivl
shll
fwait
and
shl
or
sub
lret
cwtl
xor
sahf
xchg
pop
filds
xchg
fcoml
xor
hlt
shrb
mov
aad
add
cmpsl
mov
and
pop
jnp
jo
sub
aaa
aad
iret
inc
and
cmp
xchg
mov
out
nop
mov
rcl
xor
scas
popf
into
mov
mov
dec
mov
aam
cmpsl
inc
lret
cmp
aaa
dec
mov
bound
aas
pop
ficoml
and
lods
clc
mov
inc
or
hlt
cmp
les
push
push
jle
out
xchg
cmp
cmp
sbb
lahf
mov
shll
rcll
jns
pop
out
ret
xchg
stos
int3
adc
inc
and
popf
out
data16
out
mov
shrb
inc
hlt
pushf
movl
add
fsubp
push
data16
push
jnp
in
pop
push
rcll
cmp
jl
pop
pop
push
ret
jnp
mov
jno
bnd
push
cmc
pop
adc
notl
roll
lea
adc
ljmp
movsl
cmp
insb
xlat
adc
xor
in
or
mov
sub
sbb
push
add
hlt
sahf
pop
jp
jbe
scas
pop
loopne
out
outsb
imulb
enter
arpl
xchg
ljmp
push
xor
fsubl
xchg
push
jecxz
mov
jne
mov
push
into
int3
inc
mov
pop
push
cmp
int
jle
sti
in
jae
dec
fimull
add
sbb
or
enter
xor
sbb
jp
and
sub
pop
stc
mov
nop
adc
fldln2
lds
add
mov
jg
dec
pop
loope
xchg
pop
outsl
imul
into
xchg
push
scas
lea
mov
das
mov
inc
mov
add
icebp
dec
popf
clc
pop
dec
dec
int3
mov
sbb
repz
mov
cvtps2pd
inc
jo
sti
or
mov
add
xor
enter
pop
xchg
jae
bound
inc
mov
or
push
adc
xor
jmp
xchg
iret
and
mov
stos
push
mov
sbb
jns
aaa
mov
loopne
or
sbb
call
out
mov
push
ret
add
divl
sub
mov
call
adc
mov
les
jecxz
es
mov
mov
pop
bound
xchg
fadds
test
lret
mov
mov
lock
test
push
lcall
or
cmp
inc
call
sbb
ja
dec
and
orl
jmp
push
in
cmp
sbb
push
shr
outsb
sbb
push
jecxz
imul
or
in
mov
sbb
rcll
adc
incl
daa
xchg
outsb
pop
cltd
sub
faddl
iret
cmpsl
roll
mov
push
ja
lahf
xor
jmp
mov
movsb
mov
lahf
sub
rclb
test
lcall
mov
and
lret
add
add
xchg
xchg
cld
cltd
inc
pop
xorl
mov
jl
orl
adc
adc
cs
mov
sbb
xlat
mov
adc
mov
add
mov
icebp
pop
adc
lret
and
movsl
or
dec
cmp
inc
adc
loopne
or
mov
cmp
sbb
dec
adc
les
out
xlat
aas
scas
cmp
sub
out
push
pop
mov
mov
pop
rcrl
pop
inc
xor
popa
movl
std
aas
xchg
xor
pop
fbstp
nop
lret
dec
lods
daa
mov
std
jmp
sub
mov
les
mov
orb
sub
mov
lods
cmpsl
sbb
rcr
fwait
popa
sti
rclb
dec
das
push
shl
inc
das
bound
out
arpl
aas
and
cmp
or
pop
cli
insb
add
sub
lcall
mov
ja
jl
jae
es
jg
push
dec
jg
inc
or
in
xchg
xchg
int3
mov
hlt
and
push
fidivrs
push
sahf
shr
rclb
jns
mov
lret
out
dec
adc
mov
shrl
mov
dec
orb
push
add
adc
pop
lods
popa
stos
out
jl
jl
push
xchg
jne
icebp
mov
push
push
bound
aaa
fiaddl
jle
jg
jbe
mov
pop
out
cmp
mov
mov
pop
shl
inc
dec
xchg
gs
push
sbb
pop
inc
jo
lock
scas
sub
popa
add
scas
movsl
pop
add
movsb
inc
inc
dec
inc
lods
scas
js,pt
shr
lods
jmp
mov
mov
push
or
dec
adc
data16
push
mov
lret
in
jns
sbb
insb
jg
mov
xor
push
test
das
and
pushf
sub
mov
add
addr16
push
insl
or
fdivr
xor
add
mov
mov
xor
outsl
outsl
shrb
adc
stc
loop
lock
sbb
dec
cmpsl
in
shrl
mov
inc
ss
ds
mov
dec
insb
or
or
sti
lret
mov
cmc
inc
out
out
jb
mov
out
in
mov
lret
inc
test
mov
push
and
gs
ja
inc
into
jecxz
jno
lret
sbb
push
lock
xlat
dec
jnp
jbe
add
icebp
pop
sbb
sbb
daa
cs
lret
decb
ljmp
leave
sub
mov
cltd
and
jne
aad
outsl
bound
test
test
out
mov
addl
adc
popl
lret
mov
fildl
jb
cmp
repnz
pop
mov
nop
sbb
mov
insl
iret
mov
mov
adc
mov
outsl
outsl
add
roll
adc
in
jbe
dec
adc
mov
fcompl
adc
add
mov
je
sbb
icebp
push
push
dec
lods
add
mov
scas
loope
pop
or
repz
stos
cmc
push
mov
jae
std
scas
imul
mov
je
xchg
pushf
stc
xchg
cmp
ficoms
imul
shr
out
and
fists
fsts
pop
nop
ret
and
jecxz
outsl
mov
mov
clc
lcall
lods
push
inc
adc
call
out
mov
add
cmpsb
ljmp
xor
sub
incb
mov
inc
sbbb
test
xlat
jbe
cmpsl
hlt
mov
je
and
xlat
cmp
out
jns
insb
xchg
cmp
jae
sti
negl
dec
mov
add
xchg
fsubl
mov
cmpsl
mov
lret
xor
test
push
lcall
and
xchg
mov
imul
rolb
push
adc
mov
sbb
and
pop
pop
sbb
fmull
popl
cmp
in
add
test
push
pusha
mov
dec
xchg
dec
and
xchg
xor
lret
std
pop
inc
rcl
jnp
push
jae
mov
imul
xchg
inc
test
mov
and
pop
xchg
pop
jno
int
out
and
sub
cmp
and
pop
mov
addr16
out
or
popf
lcall
mov
and
mov
adc
inc
das
jl
push
add
sbbl
mov
or
repnz
call
jle
rclb
mov
rcrl
pop
jle
inc
adcb
into
outsb
jmp
jns
and
repz
iret
arpl
jg
std
add
scas
mov
push
jge
sub
movb
shlb
ja
popa
adc
mov
sbb
rol
addr16
adc
mov
xor
mov
in
xor
push
popa
daa
dec
into
or
icebp
add
arpl
cld
aad
xor
arpl
movsb
mov
cltd
cmp
shll
jno
out
icebp
js
xchg
test
fs
cmpsl
sbb
cli
jns
divl
lds
add
imul
leave
pop
cwtl
aas
adc
jno
xor
pusha
aas
stos
leave
add
cwtl
into
adc
jg
pop
enter
push
call
mov
outsl
cs
fisubrl
loop
dec
xchg
jg
mov
jle
aaa
cmc
mov
imul
dec
pop
sub
pop
data16
shll
je
scas
push
lcall
pop
push
jae
aad
popf
js
call
cwtl
loopne
mov
mov
add
pop
test
adc
std
mov
adc
jp
mov
cmp
pop
hlt
fstpl
add
out
sub
pop
shr
jo
insl
cmpsb
adc
cmc
pop
dec
out
movl
es
pop
mov
xchg
xchg
gs
sbb
aas
fwait
les
xor
mov
fists
lods
mov
sbb
pop
add
movsl
sbb
test
add
rcrb
xor
div
mov
jae
mov
dec
xchg
pop
pop
iret
rorb
cmp
std
nop
dec
pop
ljmp
mov
adc
dec
cmc
mov
jns,pn
test
xchg
pop
mov
pop
push
cli
mov
ficompl
scas
movsb
xchg
inc
xchg
pop
cmpsl
push
dec
mov
subl
add
inc
sub
lea
es
in
cmp
pop
push
adc
hlt
sahf
clc
or
push
in
mov
sub
xchg
sbb
sbb
loope
cmpsb
sbb
rcr
push
inc
push
cmp
xchg
aas
inc
negl
and
cs
xor
or
sahf
dec
in
pop
out
stos
jae
jns
fidivrs
or
dec
push
stc
pop
push
bound
pop
test
jnp
mov
lret
jno
shll
out
outsl
xor
loopne
jns
sub
pop
insl
repz
shrb
sub
jge
sub
sbb
jecxz
or
xchg
mov
mov
negl
cli
jecxz
mov
ret
sbb
cmp
divb
cltd
roll
aam
jne
pop
shlb
test
and
cmp
les
pop
pop
stos
lods
mov
sbb
test
xor
lds
lea
ja
xchg
mov
fwait
mov
mov
cltd
hlt
hlt
andl
insl
jle
add
push
pop
subb
adc
sub
and
mov
shrb
mov
aaa
cmpsb
hlt
or
sbb
decb
adc
jg
xor
std
out
lea
stc
lret
mov
test
xorb
nop
xchg
mov
xchg
inc
scas
clc
stos
sbb
or
mov
dec
xchg
jp
push
adc
leave
mov
xchg
stos
and
sub
jl
mov
mov
sbb
push
adc
out
pop
sbb
jecxz
cwtl
test
sbb
pop
xchg
nop
rorb
loopne
add
push
pop
inc
mov
sub
xchg
push
std
test
xchg
test
mov
inc
mov
sbb
imull
stos
jg
inc
stos
cmp
fwait
add
mov
add
xor
mov
mov
aas
mov
cmp
pop
bound
je
mov
pop
mov
sub
mov
pop
jns
shrb
les
cld
dec
pop
mov
lea
sti
dec
xor
mov
dec
push
cli
adc
mov
add
cmp
or
mov
push
pop
faddl
or
mov
cmp
shll
iret
jbe
insb
pop
add
pop
test
addr16
rcll
adc
mov
cltd
lahf
pusha
cwtl
negb
xchg
xor
icebp
jle
rclb
or
sub
out
and
inc
push
adc
push
mov
mov
rclb
xchg
imul
int3
or
xchg
adc
int
nop
jb
movsb
mov
pop
ret
mov
xlat
push
push
nop
inc
xchg
jmp
cltd
mov
pop
push
popa
in
add
das
inc
ja
scas
xor
pop
mov
and
test
mov
insl
add
pushf
pop
dec
xor
push
leave
sbb
stos
cmp
ret
mov
test
mov
fdivrs
add
popl
cmpsb
dec
repz
daa
adc
stos
fabs
lret
ret
jmp
out
lret
popa
adc
pop
xchg
xor
lahf
jnp
add
mov
sbb
jle
add
sub
or
push
fidivrs
int
pop
addr16
or
mov
sbb
ret
insb
loop
pop
repnz
add
cmpsb
inc
shrb
jmp
inc
daa
out
nop
add
cld
rorl
ja
sbb
xchg
or
push
aaa
jbe
dec
sti
mov
subb
or
cmp
cmc
xlat
fimuls
les
cmp
xor
bound
push
xor
mov
jp
aam
adc
repnz
cmp
negb
add
inc
insl
cs
sbb
out
xchg
call
adc
cmp
pop
sub
sbb
dec
std
adc
mov
sarb
in
dec
fistl
lock
arpl
and
dec
ror
sbb
mov
cmp
pushf
mov
fstpt
orb
inc
leave
sbb
loope
jmp
pop
xor
call
dec
push
and
xchg
dec
xchg
xchg
fidivl
arpl
addr16
out
in
sahf
inc
mov
out
call
dec
push
pop
arpl
into
mov
inc
or
add
ja
popa
lret
mov
int3
call
pop
xor
and
fwait
cmc
pop
and
or
je
arpl
gs
jmp
pusha
mov
inc
aam
aad
or
add
mov
mov
cmp
or
lret
stc
sub
pushf
mov
loopne
leave
pop
xor
xor
inc
mov
push
mov
inc
mov
iret
push
lds
mov
or
in
fld
pop
repnz
and
push
push
hlt
iret
xchg
out
add
mov
jle
rcll
aad
cmpsl
sub
lods
mov
mov
mov
aaa
and
jb
xor
push
mov
add
jne
add
pop
add
inc
mov
fsubrs
jns
test
pop
out
mov
sub
dec
sbb
mov
gs
add
lahf
mov
loope
xor
inc
xchg
or
jle
dec
je
aam
inc
xor
addr16
or
fdivs
mov
out
in
jno
pop
rorl
test
enter
and
cld
xchg
cmc
or
jecxz
adc
mov
sub
loop
outsb
pushl
and
ljmp
test
repnz
fiaddl
mov
orb
shrb
push
stos
jo
lods
mov
cmpsl
mov
push
cmpsl
cmp
adc
mov
cmp
hlt
adc
fcoms
lahf
or
sbb
or
xor
mov
mov
inc
xlat
add
or
mov
mov
pop
sbb
repnz
enter
xchg
decl
sbb
and
loop
cld
xor
addb
or
xlat
and
notl
and
jmp
into
mov
dec
mov
pop
insb
daa
jmp
push
add
inc
xchg
push
inc
ljmp
sbb
mov
rorl
test
scas
ss
fsub
cli
xchg
xchg
push
jbe
sbb
push
mov
mov
stos
sbb
movsb
in
sbb
fnstenv
scas
out
mov
lock
mov
inc
and
mov
nop
in
cmp
popf
jae
and
xor
cmpsl
and
dec
test
adc
or
push
sarl
jo
xchg
dec
adc
xor
sbb
mov
loop
loope
in
cmp
aas
in
push
leave
mov
jae
popf
inc
mov
push
mov
clc
fadds
dec
mov
jge
add
jns
lods
stc
push
pop
pop
push
fmuls
cmp
dec
jae
mov
jae
int3
mov
out
mov
sub
inc
add
sbb
mov
out
in
fbld
cwtl
mov
aaa
gs
je
ficomps
fistl
inc
mov
sub
stos
add
int
adc
push
jns
aas
bound
shll
and
dec
bound
cld
push
lahf
enter
or
loopne
lods
sbb
repnz
mov
nop
xchg
repnz
test
bound
in
jno
cmpsb
xorl
dec
lahf
ror
ljmp
and
mov
stc
addr16
mov
adc
sti
in
or
mov
lock
cmpsl
mov
jo
cmp
jbe
xchg
xor
lods
lods
arpl
mov
mov
sbbb
jmp
dec
iret
into
daa
clc
push
xchg
stos
sub
test
adc
mov
xchg
out
and
jo
ret
adc
xchg
cmp
inc
and
xor
push
cmp
testb
or
clc
fcmove
mov
std
test
shl
arpl
sub
mov
iret
out
jl
xor
or
jns
mov
fadds
adc
mov
scas
push
jns
test
push
add
call
stos
rorl
push
add
lcall
inc
mov
dec
push
mov
jmp
jo
jg
lcall
movsl
imul
push
sub
mov
test
arpl
icebp
arpl
cmovl
ss
pop
inc
shlb
movsl
test
in
imul
and
jnp
inc
mov
pop
dec
int3
sbb
push
data16
fistpl
xchg
mov
cmp
inc
test
dec
int3
inc
enter
cmp
insl
or
cmp
cli
cmc
test
cmc
arpl
dec
cmp
adc
movsl
imul
mov
rol
xchg
stc
cmpsb
imul
lods
add
imul
in
push
pushf
cs
mov
xchg
dec
imul
in
cli
and
shrl
jge
call
pop
mov
mov
mov
or
rcrb
adcb
mov
or
jnp
push
out
aas
dec
and
enter
mov
and
aaa
fprem
inc
fcompl
jmp
ja
jg
loopne
push
pop
movsb
addr16
cmp
dec
dec
fucomp
adc
shl
or
imul
scas
test
pop
sbb
jp
pop
gs
shrb
flds
lods
insl
mov
add
das
pop
aad
cmc
xor
mov
aaa
rcr
scas
cs
jne
jnp
sub
mov
sbb
xor
arpl
insb
xor
in
out
xchg
sbb
fmul
push
lock
mov
test
sub
iret
mov
pushf
das
inc
test
stos
push
xchg
leave
jns
outsb
icebp
cli
push
das
lods
ss
mov
mov
inc
pop
sbbb
sbb
push
mov
aaa
cmp
jno
lret
mov
jae
sahf
sbb
push
xchg
pushf
sbb
inc
lock
inc
push
dec
scas
and
cld
inc
iret
shl
lea
stos
mov
push
imul
lds
jmp
into
in
pushf
jmp
es
jae
xor
add
sbb
xor
or
imul
dec
outsb
aaa
jns
nop
or
sbb
mov
pop
adc
pop
jno
sahf
bound
jp
outsl
outsb
jmp
loope
stc
xchg
cmp
es
sub
hlt
jg
mov
ja
adc
xchg
pop
mov
xchg
test
mov
add
andl
pop
adc
push
pop
scas
sti
outsb
inc
xchg
xchg
mov
adc
jb
cmp
es
mov
mov
lret
pop
push
in
sbbl
dec
pop
jb
es
ljmp
pop
lods
mov
xchg
dec
dec
call
andb
loopne
das
aam
imul
movsb
lock
adc
repz
stos
popf
shlb
leave
push
lcall
xchg
rcrb
or
lods
leave
mov
fldt
or
inc
mov
out
jno
and
dec
test
icebp
sbb
fsubrs
adc
sub
push
inc
push
ljmp
fisttpll
mov
rcrb
mov
push
out
mov
and
ss
lret
out
jle
pop
mov
xchg
sbb
pop
sbb
pop
dec
lea
xchg
or
test
rcl
int3
in
dec
xor
jno
imulb
mov
sbb
es
pop
das
cmp
lea
pop
and
sahf
loopne
mov
and
add
out
mov
rcr
arpl
dec
xor
nop
mov
out
imul
inc
orb
cmpsb
scas
xor
xchg
mov
nop
xor
xchg
int3
lret
xchg
jp
push
push
jns
hlt
jne
dec
int3
xor
xor
sub
ret
dec
pushf
xchg
add
ret
push
nop
in
inc
test
inc
stos
in
ss
add
cmp
iret
xor
pusha
push
mov
inc
push
jns
mov
fldlg2
mov
ret
fisubrs
adc
lea
lock
mov
test
std
out
outsl
jns
cmc
push
jbe
out
pushf
pop
jae
insl
dec
inc
jg
mov
jae
adc
scas
test
pop
lds
cmp
adc
pop
push
inc
es
out
xor
mov
test
int3
fldl
xchg
fmul
mov
arpl
ret
pushf
jnp
or
add
add
jne
xchg
add
arpl
ror
mov
cld
shrl
ficompl
sbb
addr16
pop
mov
sbb
mov
orb
mov
xor
dec
aaa
fisubrl
and
and
jecxz
jnp
sub
shrb
mov
inc
shrb
ljmp
lods
in
test
xor
jbe
mov
outsb
cmp
dec
push
inc
push
xlat
bound
pop
fcoms
sbb
insb
push
ret
xchg
push
jle
js
inc
dec
adcl
push
pop
fld
fbld
cmp
cli
call
push
fisttpl
mov
and
mov
jbe
mov
lods
adc
dec
frstor
jns
mov
orb
mov
mov
mov
xchg
mov
in
movb
sahf
shr
jmp
mov
ss
fcomps
mov
mov
insb
fsubrp
jbe
mov
icebp
in
mov
rolb
sbb
jp
lcall
adc
mov
dec
adc
sti
push
ljmp
out
test
pop
je
rolb
pop
mov
jp
std
jl
ljmp
dec
test
dec
and
mov
sub
sbbb
jl
mov
sub
mov
jmp
negl
add
sbb
outsl
xor
les
pusha
test
inc
cld
mov
inc
clc
or
jo
or
jg
out
lds
adc
jb
js
cmpb
jp
out
xchg
sub
or
hlt
and
adc
inc
and
sub
aam
sub
std
sbb
cmpsb
adc
into
xchg
sti
mov
xchg
flds
or
fldcw
dec
push
shl
in
cwtl
push
push
imul
push
mov
fstpl
rorl
sbb
sti
push
push
lret
push
xchg
out
mov
gs
mov
cmp
ss
repnz
insl
jne
arpl
cmp
outsl
subb
movsb
mov
lods
out
movnti
int3
jmp
test
mov
mov
adc
mov
dec
shlb
sti
mov
adc
pushf
repnz
pop
jae
xchg
or
cwtl
out
dec
andb
mov
xchg
push
push
pop
movsb
and
testb
mov
daa
or
repz
xchg
jae
lds
stos
push
scas
sti
lahf
out
addl
shll
push
jmp
jb
fmuls
addr16
and
push
fwait
clc
mov
mov
int3
lea
sti
pop
mov
push
aaa
inc
cmc
movsb
jb
cltd
and
dec
icebp
pushf
fiadds
imul
adc
out
idivb
sti
jmp
popa
pop
mov
cmc
test
fdivl
mov
sbb
push
dec
push
enter
mov
lcall
mov
jnp
add
in
or
call
inc
pop
sub
push
ljmp
dec
hlt
jecxz
shr
or
pop
xor
fmuls
or
in
outsb
imulb
xchg
outsb
sbb
adc
jb
mov
sbb
std
cld
ds
jl
jno
push
mov
inc
mov
xchg
jne
loope
ss
es
pop
cmpl
das
hlt
pop
and
iret
sub
ret
sub
imul
add
enter
stos
dec
out
sbb
cmp
inc
xchg
xor
inc
cwtl
and
stos
scas
mov
fwait
jns
xchg
hlt
pop
cs
inc
clc
aaa
aas
fs
add
test
xlat
cltd
fmuls
mov
fldenv
xchg
test
repz
xlat
shl
in
lods
mov
dec
test
lea
inc
push
cmp
fisubs
js
jbe
imul
push
pusha
adc
adc
push
daa
daa
cmpsl
pop
adc
and
add
mov
adc
push
shrb
fwait
or
lea
xchg
les
inc
popf
inc
adc
lcall
mov
jp
jecxz
dec
cmp
in
imul
shrb
push
and
mov
add
insb
adc
xchg
in
sub
adc
aas
or
test
pushf
test
or
lea
xor
add
dec
out
xor
into
jnp
push
push
shlb
dec
jns
aad
mov
adc
sub
and
repz
mov
call
insl
cmp
xchg
aam
add
dec
ret
ret
mov
sbb
outsb
pop
in
mov
jne
and
push
nopl
jnp
inc
aam
testb
stos
inc
imul
cmp
aam
inc
ds
cld
xor
cmpb
sbb
movsb
and
mov
lret
jne
add
lock
fndisi(8087
xchg
daa
outsl
pop
aas
or
out
push
mov
in
nop
or
push
imul
clc
xor
cmp
jb
cmp
push
std
mov
ret
push
mov
jmp
xlat
mov
jl
push
inc
jno
ljmp
std
pop
std
hlt
cmp
ss
insb
mov
cmp
sbb
mov
sbb
push
jnp
push
mov
xchg
pop
adc
in
mov
jmp
fwait
sbb
mov
inc
sbb
sti
adc
addl
cs
add
shlb
call
push
jnp
iret
adc
data16
cmp
add
push
push
push
mov
lahf
outsb
sub
jns
cs
xchg
or
pop
mov
mov
adc
xlat
mov
or
push
xchg
xchg
lea
and
xchg
push
mov
mov
and
jnp
stc
cld
jne
mulb
add
aas
push
fpatan
xchg
sbb
outsl
or
daa
inc
dec
out
cmpsl
pop
or
mov
daa
pop
pop
or
push
pop
shrl
mov
jo
dec
jecxz
mov
stos
adc
push
sti
lods
mov
sbb
fisubrl
clc
aas
add
xor
cltd
sahf
cmp
data16
jo
fidivl
insl
test
pop
out
adc
insb
shl
movsw
scas
add
add
mov
cld
jl
in
jb
xchg
leave
add
jns
lret
das
in
push
imul
movsb
xchg
pop
jbe
xchg
mov
and
mov
dec
xor
push
and
cmpsl
add
ds
outsl
js
add
out
xchg
iret
push
and
les
xor
out
adc
in
rol
lahf
lahf
lret
pop
adc
push
outsb
mov
xor
dec
cmc
jecxz
cld
call
pop
xchg
dec
lods
xchg
in
mov
inc
mov
loop
pop
jno
adc
inc
sarl
dec
xor
or
mov
mov
mov
movsb
popf
xor
loopne
cli
lcall
xor
dec
cmp
ljmp
cmp
adc
jb
cmp
mov
pusha
scas
mov
insb
pop
mov
pop
bound
sahf
cmp
cmp
imul
loope
std
sti
out
jp
jle
cmc
test
inc
clc
hlt
mov
or
jb
pop
adc
dec
scas
sub
lret
sub
and
add
sub
test
rclb
sbb
or
jb
cltd
out
out
sarl
rolb
push
inc
inc
cmc
cmp
and
cld
xor
int
scas
fcoms
das
pop
push
aaa
dec
mov
mov
bound
dec
stc
mov
mov
push
es
arpl
int3
rclb
test
and
int3
dec
xor
lds
test
xchg
movsb
pop
inc
sti
imul
xor
icebp
and
cmp
out
cmp
pop
lret
outsl
loope
mov
inc
int
scas
lds
mov
stos
add
iret
dec
loope
cmpsl
std
in
sbb
adc
fst
or
dec
or
test
xor
popa
cmp
mov
ds
sbb
and
and
testl
mov
sub
add
pop
ljmp
mov
lcall
in
repnz
or
jo
fwait
in
push
imul
dec
inc
mov
stc
rolb
push
out
dec
clc
add
ss
jmp
push
in
cwtl
mov
sqrtps
push
andb
mov
cltd
jno
cmp
aaa
push
cmp
enter
icebp
sbb
add
and
aam
lds
cmpsl
mov
mov
push
jo
inc
or
sarl
loop
sbb
fisttpl
and
daa
cmpb
std
mov
fptan
lock
cmp
and
ljmp
popa
push
mov
mov
mov
pushf
sbb
mov
mov
push
push
mov
arpl
and
adc
and
ja
frstor
repnz
loope
lret
jo
inc
add
daa
hlt
push
xorb
mov
xor
or
jnp
xchg
pop
icebp
add
or
dec
das
push
or
pushf
mov
sub
fcmovnbe
push
loop
add
pop
aam
testb
shll
aam
push
or
shrl
or
pop
add
sti
lods
gs
sbb
dec
or
mov
push
add
ret
leave
out
dec
inc
cli
sahf
mov
xchg
ds
iret
fisubrl
and
subb
aas
int
pushf
pop
mov
mov
leave
sbb
and
cltd
sbbb
pop
cmp
cmpsl
adc
add
cmovns
mov
stos
inc
ja
sub
sub
dec
sbb
icebp
scas
subl
sbb
adc
aad
mov
pop
int
mov
in
add
push
dec
sbb
cmpsl
int3
jmp
addb
push
sbb
sub
sbb
fldcw
and
icebp
int
pusha
and
outsl
ret
or
mov
push
mov
jns
dec
idivb
rol
es
jg
xor
dec
f2xm1
divb
jne
arpl
dec
pop
test
js
xchg
or
pusha
sahf
pop
xchg
icebp
add
fildll
inc
adc
sbb
arpl
dec
int
push
sbb
cmp
or
pusha
test
movsb
in
cmp
cmc
test
mov
fwait
out
lahf
outsl
and
je
or
out
and
inc
pop
das
in
cmpsb
cmc
call
dec
loopne
cs
insl
sub
mov
pop
or
add
in
cmp
cs
lods
js
pop
aaa
add
xchg
sbb
loop
xchg
ja
test
outsb
loope
pushf
test
insb
into
rcrl
sbb
idivl
mov
mov
fldt
shr
shrb
dec
or
je
fcompl
aas
xchg
mov
loopne
mov
icebp
xchg
cmp
cmc
int
outsl
or
shl
add
mov
lods
push
mov
xchg
push
push
mov
add
pop
les
xor
pop
adc
mov
and
push
xchg
add
mov
out
push
cmp
add
adc
in
sbb
jns
fldenv
imul
cld
adc
xor
mov
mov
stc
jne
or
add
leave
and
inc
cmpsb
xchg
andb
clc
rcrb
dec
xchg
cwtl
les
pop
cmc
jle
enter
mov
dec
enter
aam
enter
movsb
cmpsl
test
add
cltd
sbb
push
enter
dec
dec
sarb
and
sub
jl
and
jle
pushl
jmp
mov
rcll
mov
xchg
mov
push
sbb
or
scas
push
outsb
mov
dec
int3
xlat
xchg
aas
repnz
jnp
sub
lods
lods
sub
aas
inc
std
xchg
clc
cmc
sbb
dec
xchg
sti
ret
fistpll
cmp
sbb
mov
mov
dec
sti
push
and
outsl
push
jb
cmpsl
mov
call
xchg
jge
xchg
int3
nop
std
push
mov
sub
repnz
or
push
cltd
sahf
jl
or
jg
add
xor
xlat
shlb
jnp
lods
xlat
mov
or
mov
sub
and
mov
inc
in
movsl
mov
dec
inc
xchg
in
sub
cmc
jle
mov
mov
test
push
mov
cmp
cli
xor
loope
scas
bound
dec
pop
adc
loopne
icebp
xlat
ss
icebp
jns
adc
je
jae
test
test
rolb
sti
add
dec
jg
or
sbb
pop
call
pop
pop
mov
xchg
mov
arpl
xchg
sahf
rcrb
aam
lret
mov
call
addl
and
enter
xchg
or
push
enter
mov
mov
lret
fcoms
or
mov
inc
or
mov
fcomps
xlat
call
and
iret
adc
xchg
out
out
mov
sahf
fisubrl
pop
shll
dec
loope
lcall
cmpsl
dec
xchg
lret
lahf
insl
mov
repnz
fmuls
jno
pushf
std
fistl
out
jnp
lahf
push
cmpsb
mov
fmuls
and
repnz
call
xchg
movsb
pushf
inc
mov
test
push
outsb
and
xchg
sbb
push
sub
decb
addb
insl
sub
add
and
push
xor
in
cmc
mov
outsl
cwtl
mull
pop
int3
addl
sbb
jp
adc
loopne
cmp
int3
pop
sub
xchg
cmp
cmp
jae
data16
push
xor
xchg
cli
mov
pop
push
icebp
sahf
imul
push
xchg
jne
cmp
ret
sub
cli
sub
sub
ljmp
repnz
dec
xlat
jge
pop
aad
sahf
push
lret
jge
lret
repz
cmp
loop
in
and
jle
cmc
dec
stos
sbb
imul
sbb
inc
lea
outsl
jle
aad
cmp
adc
xlat
push
out
xor
jns
add
in
xlat
clc
xlat
cwtl
ja
sub
dec
ja
orl
lds
mov
out
mov
xlat
mov
xchg
cld
and
lods
cli
int3
sbb
cs
leave
mov
add
jmp
jne
addl
ret
fildl
mov
inc
and
aad
in
cmpsb
mov
repnz
stos
insl
cmc
mov
cmpl
mov
out
xor
add
stos
les
cmp
dec
pop
or
mov
add
pusha
jnp
rorl
addps
dec
movsl
sub
shlb
ficoms
mov
sbb
int3
sti
inc
push
cmp
cwtl
je
in
outsb
repz
xor
repz
aam
call
fisubrs
mov
nop
addr16
mov
outsb
fldl
imul
test
inc
xchg
mov
mov
cmp
xchg
push
sub
mov
lret
cltd
stos
pop
cmp
cltd
mov
iret
dec
gs
in
cli
cmp
testb
pushf
aas
xchg
inc
inc
or
push
iret
mov
xchg
sbb
idiv
mov
xchg
fidivl
mov
mov
nop
push
or
mov
sub
dec
sub
add
fdivrs
sub
lods
popf
imul
xorb
sbb
sbb
cmp
stc
mov
push
xchg
imul
xor
pop
stc
add
sub
adc
insb
and
cs
pusha
push
fwait
mov
xchg
and
outsl
mov
sbb
jbe
fldt
loopne
mov
pop
xchg
pop
add
push
lcall
addb
dec
and
mov
dec
mov
sbb
sti
add
addr16
ja
dec
sub
xor
lods
nop
push
arpl
fsubrl
push
inc
dec
cld
sub
leave
incl
xorl
repz
pop
in
inc
in
pop
arpl
jmp
xchg
loope
adc
dec
xchg
jae
out
push
xlat
insb
pusha
in
ret
mov
add
dec
mov
mov
sarl
imul
lea
shrb
mov
dec
test
jmp
cwtl
mov
nop
fst
xchg
jb
aaa
mov
pop
jle
pop
xchg
fcmovne
pop
loope
je
cli
movsb
adc
das
lcall
pusha
cmp
hlt
pop
subl
adc
iret
push
pop
sbb
or
jae
inc
push
mov
mov
iret
adc
lahf
mov
test
jno
call
pop
out
or
jge
sbb
ret
out
push
mov
lahf
cwtl
into
fsubr
lods
outsl
nop
cli
push
and
lods
cmp
cltd
ds
dec
and
push
cmp
sbb
mov
sbbb
xchg
xor
sub
out
pop
mov
in
ljmp
and
andl
nop
mov
call
int
sub
add
sbb
lret
sub
pop
fisttpll
pop
popa
and
dec
xchg
add
xor
mov
clc
out
stos
jae
mov
movsl
pop
rolb
out
cli
out
mov
shr
push
pop
loope
mov
adc
inc
mov
add
xor
fildl
inc
add
aad
pop
loope
stos
inc
ds
lahf
insl
leave
call
cmp
dec
or
dec
lret
cmp
mov
ret
stos
xor
scas
mov
jmp
in
adc
dec
push
pop
sbb
fistpll
xor
lahf
push
jno
orl
adc
enter
mov
fsubrs
xchg
insl
jne
xchg
fdiv
add
sbb
push
jnp
dec
and
cmp
in
es
cmp
mov
mov
mov
mov
out
jo
shlb
orl
flds
movsb
jle
xor
inc
fwait
xor
xor
loopne
gs
add
mov
add
sbb
xchg
int3
ret
jb
mov
stc
add
jbe
cmpsb
inc
je
loop
or
fwait
decl
push
add
ss
mov
cs
out
imul
adc
fimuls
jo
movsb
divl
sub
scas
dec
add
idiv
popa
lret
repz
fwait
xchg
sti
mov
pop
mov
dec
data16
inc
jno
and
stos
leave
push
mov
lret
push
ja
xor
mov
test
xchg
sub
inc
xor
fadds
fnstcw
mov
push
aaa
mov
aam
cmpsb
push
add
adc
xchg
jnp
js
mov
ljmp
xorl
ja
popf
or
iret
mov
xchg
shrb
fldt
repnz
mov
dec
cmp
stos
jl
inc
pop
or
jb
adc
ss
add
ljmp
sbb
imul
data16
push
or
ds
dec
jno
xor
xchg
int3
nop
scas
push
jmp
cld
mov
stos
adc
sarb
ds
dec
sbb
aas
inc
dec
out
hlt
mov
js
inc
mov
push
outsb
adcl
outsb
add
adcl
inc
sbb
enter
int
add
fdivs
dec
mov
notl
dec
ljmp
add
pusha
mov
jg
mov
mov
dec
dec
mov
loopne
adc
sub
mov
sbb
cwtl
jb
loope
pop
xchg
and
push
sbb
or
cmp
ficoms
jne
mov
pop
rcrl
lods
sbb
loop
mov
inc
xor
xchg
pop
repnz
xchg
cmp
mov
adc
xor
jb
pop
pop
into
lods
sub
mov
movsb
hlt
xor
mov
inc
lret
ret
mov
adc
pop
xchg
mov
les
inc
xchg
ror
push
loopne
scas
pop
cmpsb
out
test
loop
push
cmpsl
je
dec
int
insb
sti
xor
mov
jg
xor
or
addr16
and
xchg
je
repnz
ret
jns
pop
jge
popa
mov
inc
push
cmpsb
sbb
sbb
xchg
daa
rorb
push
idivl
pop
pop
out
jl
arpl
pop
pop
cmc
adc
inc
cmpsb
mov
loop
ss
mov
xchg
pop
or
pop
mov
sub
enter
jl
ret
cmp
xchg
cmpb
test
push
cmpsb
lahf
sbb
subl
jns
push
jo
sub
in
push
mov
pop
lods
cmp
es
arpl
dec
lds
push
xchg
xchg
repz
inc
popa
sub
fcompl
pop
cli
cltd
aam
xlat
iret
orb
mov
fucom
inc
jo
aas
push
mov
pushf
out
aaa
js
add
cmp
adc
push
jp
jbe
add
arpl
sbb
lds
dec
push
jp
aam
mov
jmp
mov
mov
iret
lock
xor
jne
leave
fcmovnu
sbb
scas
test
adc
gs
out
les
out
pop
mov
loope
lahf
testl
or
xor
fs
stos
mov
add
stc
lds
push
and
out
out
inc
shr
jb
std
fmull
xor
rcl
sbb
mov
movsl
pop
jns
dec
iret
mov
mov
push
mov
push
pushf
xorb
fs
sarb
lds
inc
xchg
scas
cmp
adc
adc
call
adc
push
inc
add
sbb
loopne
inc
lcall
clc
xchg
xor
adc
mov
outsl
repz
xor
arpl
enter
jns
mov
xor
pop
and
insl
lret
inc
movsl
push
push
jbe
das
xor
mov
jo
ja
les
stos
sbb
subb
arpl
scas
lock
sbb
pusha
scas
pop
addb
dec
les
movsb
fwait
fwait
bound
mov
lret
xor
push
push
xchg
push
call
mov
cmp
pop
test
addr16
test
sbb
xchg
adc
out
ja
sahf
loopne
mov
rclb
sbb
stos
mov
aaa
popa
inc
jecxz
out
dec
xchg
cmp
aaa
jbe
in
push
xor
shll
sub
dec
mov
cmpsb
adc
out
stos
xchg
pop
add
fs
adc
jae
mov
mull
aaa
fcmovbe
pxor
lods
push
pop
sub
repnz
stos
cltd
mov
js
push
mov
jo
std
cmpsb
add
scas
iret
ret
or
push
test
ret
xchg
lea
and
imul
jns
jp
aam
mov
pop
adc
xchg
fildll
call
in
inc
fldcw
adc
js
out
outsb
jo
add
xchg
aam
cld
push
out
add
fcomps
dec
je
stc
in
and
xor
jae
insl
nop
jo
mov
aas
jnp
sbb
inc
movsl
adc
scas
data16
and
enter
aam
mov
pusha
aaa
jno
movl
cld
mov
mov
lods
push
fs
mov
sbb
repnz
out
mov
sarb
fsubl
inc
xor
mov
pop
movsb
nop
repnz
and
fdivs
xlat
xchg
adcb
xor
rcr
rorl
movsl
dec
int3
jmp
pop
and
call
sbb
clc
xchg
adc
or
in
or
int
pop
cmp
shlb
cltd
mov
hlt
fwait
out
or
call
fcmove
cmp
and
or
sbb
sbb
dec
push
imul
xor
adc
fmul
push
dec
push
in
mov
in
dec
cmp
je
stos
mov
imul
lahf
mov
addr16
call
repnz
ret
out
enter
inc
jno
clc
sub
test
push
iret
repz
in
push
out
mov
repz
push
jmp
xchg
jmp
push
xchg
loopne
dec
int3
adcb
mov
imull
pop
mov
daa
push
push
cmp
xchg
aad
je
xchg
test
jbe
sbbl
jle
push
std
mov
scas
cwtl
cmp
psllw
jnp
ds
roll
mov
pop
sub
roll
xor
pusha
xor
pop
mov
xor
push
xor
sbb
imul
dec
scas
inc
add
lock
fstpl
pushl
push
mov
mov
xor
sub
call
loop
inc
xchg
mov
cmc
inc
push
jmp
scas
xor
movsl
dec
cmpsb
mov
mov
call
sub
nop
call
jge
sbb
sti
int
shlb
out
out
out
enter
mov
cs
push
cmp
jns
adc
cmc
push
clc
ja
loopne
inc
lret
repz
ljmp
outsb
sbb
loope
jbe
mov
leave
pop
mov
aas
ja
enter
lcall
scas
popf
in
jo
pop
shrl
and
pop
mov
sbb
mov
mov
imul
inc
cmpsl
inc
mov
xchg
ja
pusha
test
scas
push
dec
es
bound
push
add
in
jae
iret
shrl
dec
pop
aaa
mov
dec
push
js
sub
inc
test
aam
hlt
dec
xchg
add
push
xchg
mov
insl
mov
pop
adc
or
mov
mov
pop
test
push
mov
lea
push
mov
sbb
jmp
mov
shl
movsl
mov
dec
dec
shrb
negb
out
lds
dec
push
lea
leave
push
mov
nop
sbb
xor
sub
rcrb
pusha
jbe
test
fnstcw
fwait
and
lods
fcompl
and
add
and
pushf
cmpsb
push
popf
loopne
inc
cmp
stos
fildll
pop
mov
clc
popa
xor
decl
movsl
mov
push
cmp
lods
xchg
aad
sub
insb
movsl
inc
push
push
lret
fldl
add
push
sbb
mov
jb
fiadds
fstl
push
shrb
fists
mov
cwtl
xor
push
testl
shlb
xor
mov
or
out
movsb
mov
sbb
data16
js
loop
mov
out
xchg
in
xorl
xor
add
lret
push
push
jecxz
inc
pop
sub
jmp
sub
pop
sti
sub
inc
jmp
mov
or
sbb
ljmp
orl
aas
add
pop
mov
aam
loope
and
sbb
hlt
push
adc
jo
sbb
xchg
ss
pop
mov
mov
jmp
cmp
lret
adc
push
add
dec
cmp
xor
or
cwtl
mov
dec
pop
push
and
cmc
call
sub
repz
xchg
fistl
lds
adc
jns
pop
sub
xchg
or
xchg
cmpsb
into
cltd
dec
jp
and
add
jae
pop
rclb
mov
xor
ljmp
icebp
fs
lret
fdivrl
out
mov
mov
divl
push
add
popa
call
dec
jae
lods
xlat
loop
sub
ljmp
gs
daa
dec
mov
fwait
push
lea
lea
int
outsl
jb
stos
jo
sbb
and
adc
je
mov
lahf
xor
daa
adc
dec
fdivp
andl
dec
dec
hlt
sub
cmp
pop
stc
pop
xchg
lret
inc
cmpsl
lods
leave
fidivs
mov
add
ljmp
test
test
inc
rcr
imul
popa
push
pop
jae
mov
sub
cs
dec
jg
push
and
bound
xchg
mov
mov
test
adc
stc
and
sbb
clc
mov
xor
shr
xlat
fnsave
repnz
inc
ret
mov
adc
xchg
xchg
or
das
addr16
jle
xor
mov
loop
shrl
movsl
adcl
mov
scas
mov
mov
xchg
icebp
jmp
mov
bound
pop
jl
pop
dec
and
test
aad
frndint
xchg
pop
and
push
repnz
rcll
dec
scas
xchg
leave
sbb
icebp
push
mov
pop
or
sarl
out
stc
je
test
or
mov
dec
inc
add
inc
scas
andb
lahf
cmp
sub
cmpb
outsl
or
and
sbb
dec
jg
movsl
push
rolb
push
into
js
inc
cs
mov
popf
sbb
adc
xchg
push
cltd
js
js,pt
icebp
inc
jb
pop
test
mov
xchg
cmp
sub
shll
inc
wrmsr
dec
push
mov
jmp
mov
jae
in
adc
out
or
mov
pusha
jne
repnz
adc
aad
in
fisubrs
xor
mov
stc
std
inc
add
jle
or
fisttpl
lea
in
out
repnz
pop
ret
pop
in
ja
cs
hlt
xor
fiadds
push
pushf
jns
jecxz
push
dec
cwtl
sub
repnz
mov
jns
call
jg
push
lds
in
popf
shrl
jp
inc
xchg
imull
lock
mov
mov
inc
dec
lods
call
in
out
jp
test
xchg
mov
fistpll
add
es
add
icebp
xor
leave
lods
andl
cmp
adc
mov
jg
push
adc
jbe
sub
xchg
fs
add
mov
fidivs
and
dec
ficoml
fadds
xor
aam
mov
cmp
clc
sub
add
notl
xor
sbb
cmp
mov
lods
pusha
daa
mov
mov
push
sti
arpl
test
in
les
fxam
test
pop
sahf
jmp
xchg
jg
mov
testl
adc
mov
xchg
mov
sahf
mov
dec
sahf
jle
mov
das
jg
negl
out
ficoms
imul
mov
dec
sbb
out
dec
jmp
lret
arpl
jmp
andl
xor
cltd
sbb
mov
cmp
xchg
scas
lret
jne
outsl
test
mov
xor
inc
pop
ficompl
in
mov
xor
jne
ja
add
bound
dec
mov
gs
rcl
push
sbb
out
xor
push
mov
lock
mov
mov
sbb
fidivrs
pushf
js
add
pop
or
data16
and
clc
push
ja
mov
jns
jmp
movsb
dec
adc
addb
mov
leave
lcall
xchg
sti
sbb
test
sti
mov
mov
jae
bound
sti
dec
cld
mov
pop
push
sub
rol
call
fcom
lds
mov
in
sbb
out
clc
scas
dec
adc
push
jo
sub
mov
ror
mov
jle
jb
adc
daa
cli
adcl
sub
fisubs
ljmp
aad
and
pop
push
ret
cwtl
pop
adc
and
xchg
jmp
adc
cwtl
negb
mov
ss
cmpsb
notl
sahf
movsb
sub
adc
inc
cmpsl
vpminub
inc
push
mov
push
fcmove
scas
or
sbb
sub
dec
out
rcr
fs
movsb
andl
iret
inc
rcl
push
sub
cs
adc
leave
dec
push
cld
sub
into
adc
push
or
scas
mov
sahf
dec
loope
lret
js
lea
sarl
cmp
aaa
add
ficoml
ds
je
add
jg
push
and
repz
add
lcall
pop
dec
popaw
xor
loop
loop
flds
cmc
mov
pop
push
add
in
stc
ljmp
mov
pushf
mov
lock
inc
int
lahf
outsb
jo
pusha
lcall
mov
jp
xor
jne
scas
out
outsl
jae
cmp
or
push
shll
add
aaa
ss
mov
jl
mov
push
mov
xchg
xor
lock
xor
faddl
add
ret
xor
ds
jbe
aaa
pop
inc
and
push
sub
adc
test
fwait
or
movsl
mov
pop
in
subb
mov
out
outsl
notb
clc
int3
mov
loopne
mov
sbbl
stos
mov
fimull
xchg
pop
sub
jno
fisubrl
fidivrl
push
cmpsl
lret
cmc
xlat
clc
ljmp
loope
aam
mov
std
adc
jo
es
pop
inc
inc
cmpl
jne
mov
fisttps
pop
fstl
lahf
in
cli
mul
adc
mov
cmp
jo
or
cmp
lea
mov
clc
sub
addb
cmp
inc
daa
push
lods
out
mov
push
movsl
inc
jo
jp
data16
gs
enter
rclb
mov
lock
push
and
rcr
in
orb
std
and
std
subb
cld
loop
lahf
mov
cmp
mov
mov
pop
pop
mov
xchg
inc
cmp
jg
dec
fadds
mov
arpl
adc
xchg
data16
in
inc
xor
das
insl
insl
sbb
imul
mov
mov
das
xchg
xor
in
insb
inc
arpl
jae
and
pusha
call
fistpll
cmova
xor
loope
jp
inc
add
dec
sub
and
daa
push
int
ret
clc
stos
lret
dec
mov
jge
cmp
out
sbb
cs
in
arpl
mov
int
xchg
cmp
pusha
repz
cmp
lea
fmulp
inc
cli
ss
lahf
repnz
jnp
add
pop
test
fidivs
xchg
mov
xor
pop
fnstsw
xchg
dec
mov
js
rclb
sti
ja
pop
jno
sub
mov
test
xchg
cli
mov
ret
sahf
insb
dec
jnp
test
or
sbb
scas
mov
mov
xor
lahf
cmp
and
add
pop
cmp
lcall
dec
sub
repz
dec
aaa
cmp
into
fs
cmp
negl
je
cs
push
sahf
jb
mov
cwtl
dec
outsb
call
stos
inc
pop
das
lods
in
adc
mov
xchg
fstpl
int3
in
aad
cmp
xor
jb
cmpb
js
insl
shl
sub
subb
jmp
xchg
sub
or
dec
pop
sub
cmp
jle
stos
cs
jge
sub
jo
sub
pop
ret
pop
fldt
mov
popf
pop
iret
jmp
mov
mov
aam
xor
push
mov
mov
shl
adc
out
sub
incl
jge
iret
inc
or
inc
shlb
mov
out
pop
repz
add
pop
addb
xlat
rcl
jb
xchg
xor
enter
pop
cmp
movsb
fs
sbb
out
outsl
add
call
in
push
out
popa
loop
or
dec
dec
sub
cmp
mov
faddp
fwait
sarb
xchg
and
imul
and
testb
arpl
mov
insb
daa
mov
xchg
ja
popf
cmp
mov
push
cli
cmpsl
sti
inc
fistpl
cmp
das
arpl
dec
cmp
addr16
fwait
pop
cs
in
data16
jno
or
or
cmp
add
movsb
adc
inc
jmp
xor
ficoms
push
xor
mov
add
mov
jbe
mov
pop
ffree
push
scas
jnp
outsb
test
or
xor
inc
xchg
fildl
mov
mov
pop
daa
sub
fnstsw
in
pop
cmp
or
fmull
lods
push
cld
int3
jae
cmp
bound
lahf
iret
repz
jge
mov
aam
aas
inc
inc
mov
or
loopne
jb
stos
mov
ljmp
fisttpll
fisubs
cmpsb
scas
mov
and
mov
push
test
mov
cmc
mov
adc
ljmp
push
insl
cmp
mov
and
pushl
push
imul
inc
jbe
test
xchg
xor
jmp
in
aam
mov
adc
or
jg
imul
fstps
idivb
add
jne
xor
or
enter
mov
pop
das
sub
mov
xor
adc
shll
adc
leave
das
imul
adc
test
jno
xor
sub
stos
adc
orb
dec
sub
push
repnz
addr16
dec
cs
push
dec
sub
adc
pop
clc
out
pop
mov
sarl
mov
pop
mov
xchg
dec
lods
xchg
sahf
lahf
call
xor
xchg
cmp
sbb
cmpl
mov
pop
pushf
movsl
or
push
scas
loope
jno
dec
add
adc
pop
pop
sbb
sub
aad
aam
fcmovnb
cmpsl
mov
push
mov
xchg
pop
mov
dec
jae
test
or
sbbb
pop
adc
push
fcoms
inc
sub
or
mov
push
or
cmp
push
stc
mov
xchg
xchg
mov
jp
jo,pn
mov
fcomps
lods
shrb
fs
bound
lds
movsl
jg
mov
aad
call
pushf
xor
cltd
cmp
dec
and
ja
mov
arpl
mov
xor
sbb
mov
jmp
imul
lcall
nop
jge
jo
or
mov
ss
cmc
imul
jbe
dec
arpl
mov
aad
mov
inc
push
fs
or
xchg
or
jb
aas
xchg
flds
or
jo
mov
mov
and
sbb
xor
in
outsb
jge
pop
mov
xchg
pop
into
jo
out
jecxz
loope
xchg
pusha
dec
dec
push
imul
cmp
xchg
pop
rorb
add
push
mul
loopne
in
xor
lods
loope
cs
sub
inc
push
jg
ljmp
or
cmp
xchg
push
mov
movsb
lret
ret
cmp
and
lods
pop
adc
add
inc
nop
add
jno
leave
int3
in
pushf
cmp
and
loopne
lea
and
or
popf
inc
jne
stos
mov
out
orb
pop
mov
mov
loop
test
jge
and
jl
mov
pop
xchg
imul
addb
adc
aaa
add
jb
je
jg
mov
adc
ja
adc
push
pop
push
and
xchg
mov
ss
and
mov
xchg
mov
fcoml
subl
rcrl
cld
int3
push
shlb
ljmp
jo
aad
xchg
push
shrl
pop
incb
in
push
push
mov
mov
xchg
xchg
jne
jp
lret
sbb
pushf
cmp
push
xchg
pop
ds
and
pop
adc
dec
fistl
hlt
cmp
sti
add
mov
xor
imul
scas
loop
aaa
sbb
cmp
loop
sti
das
fstpt
imul
scas
xchg
cmp
xchg
xchg
mov
mov
adc
push
out
push
sbb
lods
std
pop
outsl
xchg
xchg
mov
insb
mov
shrl
out
pop
jnp
fcoml
pop
sarb
or
sub
fwait
jmp
pop
leave
stc
dec
push
dec
divl
out
daa
xor
sub
stos
lret
or
fstps
sti
push
mov
fisubrs
sbb
lods
das
cmpsl
xor
push
inc
pop
pop
jbe
pop
and
leave
sbb
cmp
les
jns
mov
mov
mov
xor
bnd
mov
adc
pop
adc
js
mov
sub
sub
pop
popf
gs
pop
xlat
cmp
mov
shrb
leave
cld
jecxz
mov
dec
inc
inc
ljmp
ja
les
int3
and
push
scas
fcoms
jmp
pop
dec
jnp
mov
cltd
jge
push
push
mov
rorb
ret
lret
cmpl
dec
in
nop
jo
add
lea
sti
in
or
insb
loopne
jnp
or
fbld
sub
jle
or
mov
mov
andb
ja
sub
scas
mov
lcall
mov
insl
out
loope
int3
xchg
outsl
xor
popa
add
add
or
dec
sbb
stos
lock
pop
inc
inc
imul
cld
jge
and
lcall
insb
or
xchg
arpl
js
sbbl
add
mov
sarb
repnz
test
lods
test
xchg
andl
fst
in
jo
into
and
aad
ret
sbb
adc
push
into
and
inc
sbb
mov
cwtl
and
add
mov
mov
cmpsl
jo
or
or
push
je
shlb
stc
aas
cmp
and
or
pop
xor
nop
pop
out
mov
pop
xor
and
loop
les
push
jno
das
dec
mov
aaa
dec
dec
sbb
jbe
in
cltd
jo
push
mov
pop
pop
sbb
std
ja
out
subb
push
fdivl
jnp
mov
pop
stos
cmp
mov
test
pmaxsw
mov
xor
lods
add
xchg
lcall
cmp
and
rcl
fcom
or
into
pop
jmp
scas
cmpsb
push
mov
inc
xchg
aad
imul
pop
fs
pop
test
jge
adc
and
hlt
lret
int3
or
jae
adc
les
fstl
les
scas
adc
cmpsb
mov
icebp
call
sbb
pop
mov
cltd
rolb
mov
lcall
cltd
mov
xor
push
je
stc
sub
sbb
jo
xchg
pushf
push
cmp
inc
lock
int3
pusha
movsb
xor
push
scas
jle
std
loopne
mov
arpl
ret
jmp
pop
sbb
xchg
add
cmc
inc
rcrb
pop
das
mov
sub
test
pop
mov
arpl
dec
insb
jnp
lods
pushf
js
int
js
leave
push
push
fcoms
cltd
clc
ret
imul
popa
stos
pop
addr16
dec
popa
and
call
inc
rorl
add
sbb
mov
adc
push
lret
jne
mov
orl
xor
loopne
cltd
add
inc
lods
xchg
push
test
arpl
icebp
mov
cmc
aam
mov
sub
imul
divb
pop
adc
lcall
cwtl
and
fdivrs
mov
shlb
xchg
pop
pop
xchg
out
cmpsl
push
push
iret
jmp
rcrl
pop
inc
stc
xchg
jp
sti
sahf
jo
sub
pinsrw
pop
je
in
mov
lods
lahf
mov
or
jnp
out
gs
sub
and
mov
outsl
fistl
movsl
pop
cmp
xor
and
push
sub
xor
data16
jo
cmp
ret
cmp
in
mov
mov
jbe
mov
out
aad
xchg
xor
lock
test
stos
pop
sbb
pop
adc
cmp
dec
cmp
rcrw
jecxz
mov
push
out
xchg
xchg
mov
pop
test
mov
fs
push
cmp
sbb
mov
push
cmp
in
and
add
shlb
nop
add
and
mov
xorl
jbe
hlt
push
or
mov
sub
pop
cmp
outsb
inc
loope
pop
adc
lcall
dec
or
mov
push
sub
sbb
adcb
repnz
mov
lret
ds
testb
mov
inc
call
xchg
mov
dec
data16
addr16
xor
fwait
in
mov
add
dec
nop
in
sbb
leave
cmpsb
daa
pop
aas
xchg
lahf
cmpsb
inc
xor
or
stos
cmpsb
or
lods
pushf
rol
jmp
outsb
push
stc
xor
and
in
mov
int3
push
outsl
xchg
jmp
rorb
in
inc
repnz
mov
les
and
xor
mov
ljmp
sbb
jns
lock
mov
aad
sub
je
scas
rorb
bound
push
pop
int3
mov
lcall
imul
jl
jmp
scas
push
ds
repnz
imul
add
dec
stos
fsubrl
mov
sub
out
fdivrs
xorb
adc
ljmp
and
adc
xor
sti
aas
xor
sbb
scas
enter
daa
sub
sbb
fidivrs
jl
loop
test
push
fcmovne
mov
cmpsb
lcall
cwtl
icebp
std
out
lds
pusha
dec
addr16
ret
sbb
xor
scas
mov
ja
js
shll
shlb
cmp
out
bound
mov
out
mov
fidivs
mov
sbb
jecxz
mov
sbb
in
adc
sbb
dec
jle
rcll
sbb
pop
ror
dec
mov
rcrb
sub
call
mov
cmpsb
in
mov
nop
in
mov
inc
sbb
ss
loope
xchg
cmp
inc
cs
std
data16
xchg
or
dec
rclb
dec
pop
movsl
shll
mov
iret
aaa
leave
xor
lods
add
addr16
arpl
imul
ja
hlt
imul
idiv
inc
int3
pop
push
or
sub
les
adc
clc
pop
xchg
push
rol
cmpsb
and
sti
adc
scas
stos
push
cmc
loope
xor
jecxz
pop
nop
sub
imul
addl
cltd
pop
mov
push
dec
or
fsubrs
push
xchg
or
inc
inc
lret
fs
aaa
inc
pushf
pop
push
repz
push
mov
xchg
call
movsb
jbe
sti
bound
cli
inc
inc
je
push
cmp
ljmp
nop
xchg
in
jne
sub
cmp
xlat
ror
push
divb
jae
repnz
cmpsl
mov
mov
pop
shlb
cli
testb
imul
xlat
scas
xor
ljmp
push
rcr
aam
les
pop
test
xor
xchg
lods
cmp
outsb
inc
pop
mov
icebp
cmp
icebp
sbb
jp
cwtl
xchg
incl
es
and
add
dec
jae
rcll
dec
xchg
dec
ret
aam
inc
enter
in
mov
movsl
loopne
xchg
mov
mov
fs
cmpl
or
test
sub
or
sbb
add
repnz
inc
jne
sbb
lret
pop
fcmovnbe
pop
sbbl
leave
repz
add
sub
dec
or
push
call
call
lret
dec
fldt
stos
or
add
arpl
inc
fidivs
test
push
mov
repnz
in
mov
or
xchg
mov
jg
test
mov
insl
and
rorb
cli
push
mov
sub
fists
adc
xor
fimuls
mov
fsubrp
in
popa
cmp
dec
fiaddl
aaa
and
scas
sub
xchg
mulb
jp
sub
cmp
mov
js
enter
cmp
dec
test
imul
ret
add
cmpsb
arpl
xchg
pop
or
ja
dec
push
push
scas
testl
es
dec
xor
sbb
lcall
pop
or
imul
xor
repz
sti
pop
rorl
mov
popf
sbb
into
xchg
scas
lahf
adc
das
sbb
dec
rcrb
xchg
in
les
cmp
jno
and
jl
ret
lcall
pop
aad
push
insb
pop
dec
push
jmp
inc
shrl
mov
cmc
push
cmp
cmpsb
ja
inc
cmp
ss
add
std
pop
push
lahf
subl
mov
pop
gs
scas
adc
es
cli
jle
rcr
cwtl
or
leave
ljmp
push
xor
ja
dec
je
ss
mov
in
inc
xchg
add
imulb
pop
xchg
inc
jmp
push
rcrb
insb
in
fisubrs
mov
cmp
adc
pop
inc
or
xchg
cli
or
lret
jns
aad
push
cs
or
cmc
adc
movsb
dec
in
push
ror
hlt
mov
shl
push
jge
fidivs
into
rorb
test
push
stc
push
jecxz
inc
sub
frstor
out
adc
in
fildl
sbb
jle
std
xor
and
sti
mov
xlat
stos
cmpsb
int
xorl
add
call
push
sahf
rclb
dec
mov
stos
ds
lock
cltd
jnp
dec
mov
insl
iret
cmp
cmpsb
dec
xor
dec
in
add
mov
fiadds
scas
daa
sub
lods
gs
test
cmp
dec
fimull
rcll
es
iret
into
cld
adc
mov
and
mov
cmp
in
gs
push
je
cli
fcomps
shl
pop
jecxz
push
mov
cmp
rcrb
and
aaa
adc
jge
in
jnp
push
fcmovbe
inc
mov
mov
fisttpl
sub
mov
and
cld
adc
adc
dec
inc
mov
ja
ljmp
aaa
mov
das
addr16
in
dec
das
aam
jo
pusha
jge
mov
xor
jmp
rorb
mov
adc
out
xchg
push
inc
jo
mov
cmp
pop
fists
movsb
jno
outsb
jp
hlt
xchg
jge
push
xchg
lods
dec
jge
xchg
push
xchg
push
sbb
jb
mov
dec
dec
jp
push
or
add
popa
enter
jl
test
dec
fucomi
xchg
out
movsb
test
cmp
je
mov
inc
pop
jecxz
ds
push
or
jg
cmpsl
imul
mov
jne
and
or
inc
dec
adc
divl
ss
outsb
insb
pop
test
cmp
in
mov
mov
arpl
punpcklbw
xchg
xor
cmc
stos
ss
loope
mov
xchg
jl,pt
arpl
xchg
push
loope
sahf
mov
lock
sub
repnz
add
mov
add
adc
leave
out
mov
test
pop
or
mov
xchg
push
popf
sub
or
push
nop
xchg
hlt
lahf
or
adc
and
xor
cmp
cmp
mov
test
test
dec
sub
repz
in
and
push
popf
gs
dec
das
lods
mov
jns
in
mov
mov
xchg
cmp
rclb
mov
aas
lret
dec
dec
lea
xor
or
jp
sub
hlt
pop
test
arpl
xor
adc
les
pusha
dec
aad
xor
dec
mov
or
in
sbb
inc
ret
mov
mov
jmp
pop
or
idiv
cltd
cmp
stc
sub
xor
dec
mov
fists
aaa
inc
inc
jne
or
aaa
sbb
outsb
dec
adc
sbb
mov
sti
jmp
dec
daa
xchg
ja
fstl
jecxz
xchg
mov
mov
mov
mov
mov
dec
add
jo
push
ds
insb
push
dec
std
sarl
mov
inc
mov
cltd
mov
test
add
add
pusha
cli
xlat
xor
inc
iret
je
repz
sahf
in
ret
pop
lret
sbb
clc
dec
mov
insb
out
jnp
and
pop
arpl
adc
push
in
xchg
pop
push
jbe
mov
pop
or
jns
mov
inc
push
adc
dec
xchg
adc
ret
jmp
filds
mov
bound
push
into
inc
std
pop
cmp
sub
lcall
inc
dec
or
imul
hlt
aaa
or
rcrb
adc
adc
mov
fs
cld
data16
mov
daa
in
movsb
xchg
jge
enter
stc
push
inc
mov
jnp
pushf
das
fadds
in
adc
inc
push
mov
pushf
adc
repz
addr16
movsb
test
mov
jae
push
push
cs
cmp
push
outsb
mov
push
jecxz
int
inc
adcb
ljmp
and
cmp
jb
lods
mov
mov
arpl
orl
rcll
push
or
sarb
aad
lea
mov
xlat
test
sub
arpl
xor
cmp
cmp
add
sahf
dec
icebp
xor
fidivs
xchg
fists
xchg
cmpsl
add
add
test
jb
dec
mov
notl
in
std
lahf
je
out
and
icebp
pop
dec
into
ds
sub
jns
xchg
sti
cmp
rorb
add
shrb
xor
sub
testl
call
xor
addr16
push
inc
js
cs
or
scas
sbb
pop
mov
adc
sbb
xor
and
add
adc
cmp
jmp
add
mov
push
push
lods
cmp
stos
adc
out
mov
pop
les
shl
hlt
ljmp
jnp
jnp
mov
imul
push
pop
mov
jno
mov
xor
xchg
sarb
lock
mov
jno
jbe
stc
fwait
adc
add
fwait
fwait
xchg
in
fcompl
jne
mov
and
test
mov
mov
daa
cmpsl
fs
push
std
mov
rcll
pop
adc
ds
sbb
mov
and
add
rorb
mov
mov
inc
mov
stc
or
std
add
jg
fwait
cmp
jnp
lahf
inc
cmc
jnp
scas
sub
nop
gs
nopl
jle
fdivrl
and
mov
dec
xor
shll
hlt
dec
mov
mov
addl
pop
jge
leave
pop
out
sub
insb
cmc
add
mov
sub
and
fisubl
stos
aam
add
pop
aaa
pop
push
es
adc
aas
repz
or
pop
and
cs
loopne
test
icebp
test
push
clc
sti
xchg
dec
pop
add
sub
sbb
jg
add
mull
inc
fcoml
mov
xchg
test
rolb
clc
cmc
xchg
mov
movsl
fldl
movsl
add
test
scas
mov
pop
xchg
cld
jae
pop
and
jbe
repz
xor
add
rolb
jmp
mov
jne
inc
dec
xchg
mov
cmp
mov
xchg
add
jmp
xor
test
or
test
hlt
decb
cli
aaa
jne
gs
sbb
cmp
mov
push
mov
jmp
cmp
fwait
xor
dec
adcl
mov
insl
repnz
xchg
adc
test
fdivs
mov
push
push
or
inc
jns
mov
testb
fbstp
inc
push
bnd
mov
cmp
xlat
testb
dec
jle
out
xor
sahf
dec
lahf
or
in
adc
mov
xchg
faddl
jle
fldt
loope
test
scas
in
loope
jae
jle
dec
je
lods
inc
lea
and
imul
shll
call
movsb
out
and
out
imul
sub
adc
es
ja
out
rcl
sub
jae
xchg
lea
movsl
stos
lods
ja
or
sti
push
jp
std
dec
iret
repz
xchg
rcrb
adcl
rcrb
sbb
mov
jns
jnp
scas
xchg
outsl
xor
dec
fsubs
or
fiadds
aam
jns
leave
xor
push
ret
mov
and
cltd
inc
dec
popa
jl
sbb
inc
fists
pushf
xchg
rcl
nop
push
inc
inc
mov
imul
fdiv
or
daa
pop
jl
ljmp
mov
inc
pop
cwtl
lods
call
and
stc
je
mov
jmp
enter
push
cwtl
loopne
les
test
mov
sbb
cmp
mov
sbb
push
mov
aam
clc
cwtl
ljmp
pop
shlb
pop
in
loope
push
pop
scas
adc
add
pop
in
xchg
lea
lahf
jno,pn
jmp
xlat
js
xchg
int
cmp
leave
leave
insb
shll
test
outsl
or
stos
xchg
orb
es
sbb
ss
xchg
lock
std
pop
std
divb
mov
mov
xchg
outsl
pop
mov
rcll
loope
outsl
sub
enter
adc
mov
imull
xorl
pushf
adc
dec
cs
hlt
cmpb
xchg
pop
mov
sbbb
or
add
lret
test
and
jae
push
jns
bound
lcall
xchg
movsb
fdivrs
test
cmp
xlat
dec
out
inc
or
jmp
and
test
jle
push
enter
jecxz
aam
mov
cltd
mov
push
dec
fcmovb
inc
sub
sbb
jg
jae
mov
lods
scas
call
mov
dec
add
or
and
div
fwait
insl
adc
inc
dec
popa
jno
mov
cmp
jnp
sub
roll
cmpsb
shlb
cmc
push
xchg
xor
jmp
test
or
adc
outsl
cld
test
mov
out
loope
and
inc
js
and
test
test
lea
nop
lcall
xchg
into
in
lahf
mov
sub
sti
sub
cmp
stos
jp
cli
iret
out
adc
or
cmpsb
fldt
xchg
sahf
out
add
xchg
mov
mov
mov
xchg
pop
imul
cmp
lret
loope
and
ja
and
sub
cli
push
pop
dec
mov
push
movsb
inc
std
push
cwtl
insb
push
cmp
data16
mov
pop
jno
or
mov
movsb
popa
nop
stc
pop
add
jmp
pop
std
sbb
test
and
lret
adc
dec
add
sub
adc
and
test
inc
fdivrs
les
add
fsubrl
clc
lret
cmpsl
jmp
pushf
dec
add
inc
lcall
jne
adc
mov
jmp
xlat
aaa
aas
ljmp
add
bound
aad
mov
fldenv
and
push
outsb
inc
dec
mov
out
into
notb
mov
sbb
je
mov
push
and
loop
dec
iret
and
xchg
cmp
mov
mov
push
lcall
jbe
lods
outsb
inc
sub
popa
sti
daa
xchg
out
lret
sub
pop
mov
dec
mov
mov
push
and
or
fistpll
mov
in
shlb
das
adc
popf
mov
add
mov
push
lods
stos
sub
mov
ret
adc
xchg
lcall
loopne
popf
andl
repnz
ret
cltd
add
pop
cltd
in
sub
sub
mov
jnp
dec
mov
hlt
lods
sahf
mov
mov
mov
lea
xchg
mov
fidivrs
pushf
ret
xchg
loope
xor
sbb
pop
push
pop
fisubs
clc
fnstenv
xlat
xor
dec
and
mov
out
lret
add
sti
inc
loopne
sub
into
pusha
dec
adc
cmp
imull
packssdw
movsb
sbbl
sbb
pop
adc
das
iret
idiv
ficompl
popa
push
stos
stc
scas
inc
jle
movb
insl
inc
sbb
sub
adc
inc
loope
pusha
push
mov
push
jge
icebp
lock
ds
add
inc
scas
pop
movsb
movsl
jle
mov
pop
ret
and
push
inc
fxch
mov
lds
das
repnz
or
pop
sti
mov
jp
jb
mov
shl
dec
push
je
xchg
lret
outsl
out
fstps
arpl
push
out
arpl
orl
xlat
dec
pushf
mov
sbb
jecxz
iret
mov
add
add
and
push
add
leave
pop
loopne
mov
inc
and
cmpsl
mov
mov
negl
or
scas
shlb
push
sub
pusha
cmp
sub
push
xor
cmpsl
pop
jbe
ss
and
push
adcb
xor
mov
lahf
or
stc
inc
lea
lcall
lahf
add
add
mov
outsl
sbb
xchg
jb
fiadds
jge
movsl
add
jle
mov
adc
cmp
jo
mov
pop
pusha
inc
scas
mov
or
adc
mov
cltd
mov
sbb
es
xor
push
jo
je
sub
dec
and
out
sti
xor
mov
test
sub
sbb
pop
adc
add
push
aam
cmp
fnstsw
xchg
or
push
aaa
add
fidivl
movsl
cld
sub
stos
mul
scas
jne
pop
sbb
mov
push
adc
or
xor
loope
js
je
jns
mov
jno
out
pop
je
sbb
rcrl
outsb
cltd
dec
cwtl
mov
lahf
rorb
pop
xchg
out
add
inc
mov
aad
mov
iret
fchs
pop
jae
add
jl
or
mov
jns
and
mov
mov
in
lock
push
push
jbe
fnsave
cli
or
cmpl
lds
fsts
jp
dec
pop
test
rcl
mov
vmovdqu
loopne
std
jne
mov
or
xchg
cli
pop
cltd
idivb
loopne
jnp
push
in
xor
cmp
orl
pop
das
xor
cmpsl
test
ret
daa
aam
enter
push
roll
mov
je
xlat
enter
mov
dec
in
test
inc
push
mov
icebp
fcomi
out
loop
mov
pop
movsl
popa
rcrl
test
in
jmp
scas
add
or
imul
jb
ds
in
xchg
pop
push
cmc
loop
cmp
ss
es
xchg
push
js
mov
bound
jp
scas
adc
sbb
loop
cmp
cltd
xchg
xchg
and
daa
jns
jae
incl
xchg
fiadds
inc
iret
std
jp
ret
incl
jne
sub
dec
ret
cmp
mov
xor
jge
mov
out
sbb
cmp
xlat
insl
inc
add
cmpb
sarl
jmp
ljmp
daa
mov
lcall
and
lret
test
shll
mov
push
adc
inc
xchg
sub
xchg
dec
pushf
mov
data16
cmc
or
mov
gs
jo
and
dec
stos
adc
add
inc
popa
adc
sbb
pop
loope
movsb
push
loope
push
les
cmp
mov
test
jge
lret
xchg
jmp
das
call
es
sarl
in
pop
arpl
xor
lods
mov
mov
add
mov
cmp
test
notb
nop
pusha
jb
lods
lds
lahf
je
mov
cs
ljmp
and
pop
xlat
scas
xchg
mov
mov
imul
mov
mov
ret
sub
test
dec
sahf
mov
inc
ss
divl
mov
mov
mov
mov
lods
sbb
insl
mov
je
sub
jp
or
pop
push
fwait
icebp
les
jp
and
cmp
int3
icebp
add
mov
or
popa
xor
lock
pop
jle
and
jg
or
call
mov
cmp
daa
movsl
jmp
mov
mov
mov
test
cwtl
jne
inc
fs
inc
sbb
outsb
jl
jbe
jecxz
jl
test
ret
lret
mov
mov
push
ja
and
dec
xchg
repz
or
jge
sub
clc
scas
rcrl
ljmp
push
rolb
or
sbb
push
mov
mov
dec
roll
xchg
popf
jnp
fwait
and
pop
test
jecxz
mov
or
mov
es
push
bound
sub
jnp
test
xchg
jg
subb
je
cmp
scas
stc
pop
sbb
mov
dec
dec
leave
xchg
cmp
xchg
jmp
and
sbb
push
in
cld
enter
jb
mov
jno
inc
inc
mov
sahf
hlt
dec
xor
std
cmp
sbb
lahf
das
in
in
mov
sbb
outsb
pop
inc
ss
es
movsl
jbe
and
add
mov
test
lods
pop
mov
dec
or
test
cld
mov
push
lret
je
push
and
fmul
push
cmp
test
in
push
xor
add
rdtsc
loop
fists
cmp
adc
mov
ret
mov
sub
aad
out
shll
xor
jo
pop
lods
inc
ss
test
loop
push
inc
xchg
xchg
nop
jae
lea
and
cmp
xor
sarb
mov
lds
adc
mov
sti
xchg
mov
dec
or
sub
dec
pop
into
fidivrs
cmp
fcomps
lods
fmuls
test
sub
mov
sbb
push
ss
in
xchg
cmp
pop
sbb
mov
cmp
pusha
leave
dec
andl
cmp
rcrl
pop
pusha
mov
or
sub
inc
stc
push
ljmp
or
insl
ret
das
or
outsl
into
fs
imul
inc
icebp
test
cld
pushf
rorl
and
lods
hlt
sub
xchg
out
mov
or
push
pop
clc
leave
add
mov
mov
sub
cmpsb
pushl
jno
lds
or
test
test
xchg
sbb
scas
les
sbb
jmp
into
mov
pop
ss
cmp
lea
sub
les
jmp
scas
out
mov
std
or
jmp
or
inc
in
cmpsl
test
inc
stos
loopne
xchg
sub
das
clc
xor
cmp
cli
jmp
cmp
scas
push
lahf
mov
and
aas
nop
adc
add
incb
jbe
faddl
xor
or
pop
loop
pop
outsb
orl
mov
ffree
cmp
lds
xor
jns
pop
pop
pop
les
and
loopne
jle
dec
outsl
std
shlb
ss
xlat
or
jns
inc
push
notb
xchg
lock
jecxz
ljmp
mov
dec
add
mov
and
xor
push
mov
lret
ja
ss
xchg
or
int3
jne
dec
jno
repz
xor
mov
out
out
xor
xchg
and
jb
dec
pop
jle
scas
out
fdivs
sub
mov
add
fldt
ret
push
xor
mov
outsl
aad
inc
fildl
cmp
mov
mov
jg
fcmovnb
adc
xlat
in
pusha
xor
sbb
or
push
fstpt
hlt
sub
mov
mov
inc
sbb
add
inc
xchg
sub
xchg
mov
xchg
stos
adc
jo
push
mov
lahf
popf
mov
outsl
in
sbb
into
or
pop
lgs
sub
jle
outsl
fdivrl
cld
das
out
mov
sub
or
mov
cmp
adcb
cli
sbb
push
or
adcb
or
pop
jmp
testl
enter
cmp
out
test
mov
xchg
push
adc
adc
dec
pminub
push
call
jmp
mov
je
xchg
incb
out
sbb
call
ss
dec
rclb
jle
push
in
adc
mov
clc
dec
mov
jne
add
loope
push
stos
pop
mov
adcb
xor
jns
fidivl
inc
pop
adc
cmp
repnz
xchg
sub
int3
pop
and
and
add
ret
adc
in
inc
imul
popf
mov
push
mov
ficompl
xor
test
xchg
popf
shrb
aaa
out
xchg
and
into
hlt
lods
das
xchg
jb
xlat
repnz
add
mov
shr
pop
mov
out
cmp
fdivr
push
add
sbb
movsl
push
in
stos
jo
jge
shlb
push
fidivrl
in
cli
xor
jmp
dec
mov
imul
and
adc
in
jno
out
dec
inc
add
push
sbb
out
mov
icebp
sub
repz
rcrb
and
pop
stc
jo
dec
push
inc
dec
daa
test
loop,pn
sub
enter
pop
pop
rorb
sbb
lods
outsb
push
dec
repz
xlat
cmpsb
out
cmp
mov
outsb
xor
inc
mov
jl
inc
push
sbb
push
ljmp
loopne
sub
or
out
sahf
in
push
pop
cld
jo
nop
test
lcall
jmp
push
cmpsl
dec
stos
xor
adcb
leave
fimuls
cmp
sti
lahf
testl
xrelease
and
push
cwtl
std
roll
adc
loop
mov
loop
push
or
cli
lods
stos
inc
rorl
out
xchg
loop
jo
aam
data16
movsl
sub
stos
test
scas
jnp
int3
adc
out
push
or
cmp
cmc
stos
cmp
or
icebp
lods
pop
dec
mov
arpl
cmpsl
imul
fimuls
lret
cwtl
adc
lea
push
jmp
sub
xchg
adc
and
mov
rorl
inc
in
mov
pop
and
addb
sbb
sub
jae
mov
mull
jl
cmc
mov
jnp
sub
lret
int3
imul
movsl
pushf
and
xchg
insb
mov
pop
push
leave
icebp
outsb
js
imul
fadd
push
rcll
pop
or
popa
jecxz
mov
fists
addr16
mov
jmp
stos
mov
or
test
arpl
or
cmc
hlt
sar
es
lcall
faddl
dec
jo
inc
fmul
loope
rol
mov
push
lods
dec
adc
xchg
popa
sub
mov
loop
cmp
push
insl
mov
jns
test
jge
xor
jb
mov
movsl
adc
jae
aad
icebp
fwait
sbb
lea
fwait
pop
jbe
enter
add
and
xor
and
shlb
aam
stc
in
and
data16
outsl
fadds
ja
or
xchg
mov
call
or
pop
fstl
cmp
adc
xchg
or
cltd
sahf
in
add
xor
and
push
cli
lret
jb
xor
inc
cmpsb
rolb
andl
sub
dec
test
jno
push
out
loopne
mov
in
pop
jo
mov
lea
mov
or
jle
iret
xlat
cmp
scas
sbb
push
leave
add
stos
outsb
sub
and
mov
xchg
stc
andb
das
stos
mov
cmpsb
push
adc
pop
ret
jne
je
mov
push
push
ljmp
dec
js
mov
popf
xor
push
lret
inc
test
gs
pop
pop
cltd
ja
pop
sbb
sbbb
mov
mov
cmove
or
xchg
lods
xchg
jle
push
sahf
adc
jno
movsb
addr16
add
into
hlt
push
clc
or
mov
lahf
jbe
das
in
push
cmpl
ret
xor
movsl
movl
lahf
sarl
push
outsb
addr16
data16
or
sbb
cmpsb
and
push
inc
and
int3
ja
je
push
push
sbb
ljmp
idivb
and
jns
in
cli
sbbl
lret
ss
xor
inc
ljmp
xchg
or
mov
lahf
out
mov
xor
adc
push
stos
subps
loopne
lds
lods
xchg
cmp
inc
dec
addb
sbb
xor
dec
test
add
scas
xchg
stos
out
fsubrs
out
push
leave
push
mov
dec
mov
mov
das
xchg
js
sub
fdiv
cmpsb
in
adc
jne
inc
sub
loope
mov
sbb
add
sar
inc
dec
mov
test
add
popf
shll
pop
gs
push
fcoms
push
mov
xchg
add
outsl
ret
fwait
sbb
fmuls
test
sbb
inc
out
popa
sub
mov
mov
test
xchg
inc
add
push
cmp
pop
xor
aad
imul
dec
and
push
fsubrs
lcall
xchg
dec
in
xchg
add
jge
dec
ds
cli
fnstenv
stos
pusha
xlat
cmp
pop
enter
mov
and
jae
dec
pop
or
icebp
stc
outsb
or
mov
adc
mov
enter
mov
test
sub
dec
repz
jecxz
aam
pop
mov
aas
mov
mov
mov
je
jmp
mov
popf
inc
add
mov
pushf
lahf
test
lods
movsl
cs
bound
out
lock
sub
test
lea
add
jecxz
adc
push
and
adc
popl
xchg
fisubrs
jae
out
aam
dec
sub
mov
int
insb
xor
stos
adc
inc
scas
or
jmp
cwtl
cwtl
inc
std
cmpsl
mov
dec
icebp
dec
lcall
filds
mov
shrb
stc
and
mov
push
test
xor
faddl
lds
insl
jp
and
popf
mov
es
adc
test
popf
scas
jecxz
call
or
sbb
int3
add
sbb
xor
insb
ret
fwait
cld
jl
icebp
jne
inc
fdivp
addb
mov
pop
aas
add
sbb
stos
popf
mov
mov
fs
pop
mov
loope
outsl
mov
push
jne
data16
mov
dec
add
push
daa
or
cli
inc
xchg
subb
jmp
xor
in
cmp
and
adc
out
leave
sti
into
or
mov
std
lret
dec
dec
fists
sarl
arpl
arpl
idiv
cmpsb
pop
and
stos
push
ds
dec
stos
xchg
dec
jmp
sbb
fsts
lret
push
jae
sti
xchg
cmpsl
ret
add
cmpsl
xchg
out
add
jge
mov
int3
fcoml
insb
fstps
pushw
fwait
test
dec
mov
push
ret
cmpsb
push
int3
test
daa
jle
fistpl
loop
imul
sub
mov
sub
ds
adcl
sbb
cmpsb
cmp
add
shll
pop
cmp
mov
inc
sub
pop
movsl
jo
stos
ret
imul
int3
dec
add
and
jl
aas
repz
pop
mov
fiadds
cli
leave
lea
push
aad
xor
or
adc
popa
inc
inc
lea
push
pop
add
add
inc
cmc
push
sub
decb
repnz
fiaddl
hlt
lods
outsb
pop
ss
jmp
xchg
xor
inc
adc
xor
xlat
push
xchg
pop
rol
shrl
fstpl
lods
and
subl
xor
ljmp
and
inc
sti
mov
in
or
mov
jmp
jns
cld
and
ja
cmp
test
mov
inc
repz
shlb
loope
std
jno
out
dec
adc
or
inc
add
aam
int
mov
inc
xchg
push
xlat
inc
jge
addr16
mov
push
cs
mov
je
int3
in
dec
jge
sbb
or
dec
cwtl
adc
and
nop
jp
add
add
ficoms
cwtl
add
push
in
mov
data16
cld
fsts
mov
cs
mov
pop
adc
mov
imul
jae
test
mov
xchg
out
aam
xchg
jecxz
jp
add
mov
or
outsb
mov
add
out
ret
inc
cltd
vrcpps
cli
inc
and
js
loopne
or
push
fsubrl
dec
xchg
popa
data16
mov
outsb
xchg
jbe
hlt
jb
test
sbb
mov
pusha
sbb
in
mov
test
xor
into
adc
fldcw
push
xchg
jo
out
scas
cli
das
std
push
sbb
push
cmc
jb
adc
xchg
cltd
es
add
icebp
mov
in
cmp
enter
sti
sahf
xchg
xchg
iret
mov
repnz
add
pop
enter
pop
call
stos
xor
scas
inc
imul
stc
xchg
das
jge
sub
xchg
sbb
daa
sbb
repnz
pop
les
sbb
push
jae
inc
or
loopne
mov
pop
sub
mov
movsl
mov
mov
int3
jbe
xchg
pop
add
je
dec
inc
adc
imul
fisttpll
pop
hlt
inc
pushf
xchg
jp
hlt
and
jae
ljmp
mov
jmp
icebp
inc
ja
xchg
push
cmp
inc
movq
lock
das
icebp
mov
sbb
imul
enter
mov
push
inc
fcompl
pop
xchg
rorb
mov
idiv
mov
jae
mov
lcall
pop
sbb
cs
mov
in
pop
pop
xchg
pop
pop
push
bnd
mov
jmp
testb
push
inc
cli
addl
push
add
outsb
sarb
popf
push
loopne
sbb
movsl
cmp
jge
jns
sub
gs
mov
jmp
adc
inc
push
xor
mov
pop
outsb
into
add
outsl
pop
mov
es
mov
popf
out
in
pop
xor
mov
cmp
cmp
inc
mov
dec
xor
sbb
pusha
adc
daa
andb
mov
lahf
leave
xchg
push
lret
xchg
jbe
pop
and
icebp
add
ljmp
pop
call
xchg
ret
cli
stos
lcall
and
mov
sbb
sti
lea
rol
pop
fs
je
add
push
mov
sbb
testb
inc
or
sub
add
movsb
adc
das
fcomp
inc
in
outsb
fistpl
xchg
aam
pop
enter
loopne
int3
sub
jno
mov
das
imul
std
cmp
ficomps
jnp
fistps
mov
add
gs
push
lods
rcll
xchg
aam
int3
inc
jl
dec
lcall
dec
jne
int3
xchg
lret
sbb
outsl
rclb
pop
lret
test
fs
dec
je
jmp
pop
mov
rolb
dec
dec
es
or
and
mov
ljmp
dec
push
dec
mov
nop
mov
fcmovnbe
jmp
jg
shll
mov
lea
jmp
psadbw
mov
mov
ret
mov
pop
or
into
cmp
xlat
pop
movsl
jmp
inc
adc
xor
add
rcr
or
sbb
pop
jbe
or
pop
xchg
pushf
loope
cld
push
mov
dec
cmp
mov
mov
icebp
sbb
ljmp
in
mov
mov
cmpps
aaa
mov
mov
mov
ds
mov
push
std
cmpsw
mov
stc
negl
and
pop
es
cltd
insb
fisttpl
bnd
pusha
loope
pop
out
jbe
mov
addl
xchg
inc
fldt
rep
out
mov
pop
ja
std
push
ja
repz
enter
cld
xor
mov
adc
xchg
xchg
stc
dec
loope
ja
inc
ret
rcrl
lcall
and
test
adc
aaa
test
icebp
mov
lahf
popa
jne
cmpsl
mov
clc
mov
push
dec
mov
xchg
rorb
stos
aaa
mov
inc
or
lcall
movsl
std
and
mov
imul
push
nop
sbb
dec
xor
mov
and
int
outsl
iret
and
push
popf
mov
leave
psrad
mov
dec
sub
ds
and
test
add
mov
jp
outsl
imul
mov
push
jmp
addr16
mov
jp
pop
lcall
ret
mul
add
and
test
ret
popf
push
sbb
xchg
xchg
jle
cmpsb
repnz
mov
jecxz
dec
mov
cltd
jb
or
xchg
daa
mov
pop
loopne
dec
fdiv
pop
jmp
mov
push
rclb
incl
jp
out
dec
push
mov
dec
cltd
xchg
fbld
std
mov
aaa
jmp
fimuls
orb
mov
jmp
push
aad
inc
data16
lods
sub
insl
xchg
push
orb
sub
fdivr
xchg
mov
mov
push
fbstp
lret
insb
ss
out
jg
cmp
cmp
ret
jge
push
sub
decl
xor
fmull
inc
dec
xchg
xchg
and
adc
inc
jl
addps
pop
test
pop
and
push
lahf
stos
mov
lcall
mov
mov
push
std
popf
mov
xor
inc
mov
inc
pop
lret
jl
cli
cmp
dec
sub
mov
orb
xchg
jle
lcall
jp
jl
jnp
stc
daa
cmc
adc
filds
in
mov
mov
pop
and
add
add
test
out
mov
ret
add
orl
and
adc
aad
or
mov
lret
cmpsb
loopne
push
js
clc
call
in
in
iret
mov
and
rclb
ret
inc
in
lds
cli
xor
repz
aad
jns
pop
add
movsb
movsb
testl
ret
push
adc
mov
and
mov
inc
xor
fdiv
stos
stos
pop
push
push
movsb
xchg
xor
push
dec
insl
and
decl
inc
es
pop
movsb
and
mov
aas
jle
mov
outsb
loopne
shlb
xor
mov
pop
fst
cwtl
fwait
out
mov
repz
add
mov
orb
bnd
inc
mov
cmp
sbb
cmp
sbb
data16
mov
jecxz
lahf
xchg
leave
mov
or
pop
ror
fistps
jbe
lods
add
iret
frstor
jl
xchg
add
notb
fdivs
orl
imul
and
scas
or
loope
sbb
cli
outsl
and
lds
out
insb
dec
sbb
lds
and
mov
mov
shl
cmp
adc
mov
cmp
stos
cmpb
into
mov
sbb
sbb
pop
pop
or
cli
leave
sbb
xchg
sbb
fidivrs
aas
lahf
insb
or
loopne
mov
adc
loop
pop
inc
pushf
and
add
or
jp
add
mov
inc
push
xchg
mov
jmp
cmp
mov
test
divb
dec
dec
roll
fwait
imul
outsl
roll
sti
sub
mov
jecxz
daa
lahf
jne
inc
subb
sub
aad
pop
xorb
repz
dec
ss
xor
loop
fimuls
jecxz
xor
push
push
and
cmpsl
push
ss
xchg
dec
xlat
dec
mov
popf
sbb
push
push
push
shlb
sbb
jmp
fsubrp
fnstcw
loope
movsb
sub
js,pt
and
xchg
jb
int3
int3
add
inc
aad
mov
mov
sahf
shrb
sub
insb
dec
dec
mov
pusha
add
aas
outsl
jbe
sbb
sub
faddl
push
sarl
mov
jo
shr
mov
arpl
test
loope
mov
loop
xor
fidivl
sarl
mov
inc
mov
stos
rorl
popf
decb
xchg
nop
mov
mov
adc
scas
loop
mov
repnz
dec
scas
and
mov
xchg
in
out
popa
pop
loop
jmp
mov
loop
cmp
jno
shrb
sub
jbe
movsl
popf
imul
ficoms
in
popf
shll
popf
mov
jle
ret
frstor
push
enter
jecxz
lcall
loop
pcmpgtw
push
adc
xor
xlat
or
in
add
ficoml
fcmovnu
cmc
les
adc
dec
sub
mov
out
gs
xor
ljmp
xor
insb
add
or
fcompl
xor
fisttpll
push
aam
in
mov
mov
xor
adc
cmp
std
mov
lret
push
jmp
pop
call
int3
fmull
ret
fwait
cwtl
mov
out
in
mov
fiadds
rep
inc
add
sahf
fs
mov
in
pop
dec
jb
jl,pt
lods
aaa
mov
sbb
mov
push
call
ret
sub
daa
mov
xor
leave
inc
xchg
dec
movsb
fcoml
jge
iret
cmpsb
jo
or
and
mov
dec
sbb
ds
stc
add
dec
mov
mov
xor
sarb
dec
mov
mov
ret
out
xchg
inc
adc
lods
and
imul
call
mov
pop
adc
iret
mov
aaa
push
repnz
push
jno
xchg
sbb
jo
adc
das
jg
pop
das
in
int3
cli
addr16
in
inc
inc
sub
pop
hlt
inc
xchg
mov
xor
notl
dec
fwait
lret
or
pop
mov
add
cli
in
xchg
dec
ja
cs
stos
cmp
imul
movsb
enter
nop
push
loop
pop
inc
sti
incb
arpl
mov
and
rcrb
scas
and
cmp
in
daa
pop
bound
out
cmp
test
or
cli
xor
in
cmp
imull
mov
test
and
cmpsb
sub
std
outsl
pusha
in
xchg
or
lahf
add
dec
out
bound
jnp
sub
push
fmuls
mov
push
in
or
jnp
inc
push
rol
comiss
lret
pop
jp
pop
xchg
call
gs
mov
jge
clc
call
mov
add
ficompl
enter
imul
das
jecxz
add
int3
sti
jae
lret
jbe
xor
cmpsl
nop
lahf
mov
inc
out
test
ret
mov
ss
sub
test
pop
lahf
fucomp
bswap
je
xor
pop
testb
mov
cmc
sbb
xor
or
insb
push
or
je
ret
add
mov
je
std
lahf
sbb
es
cmp
xchg
daa
mov
rcrl
adc
cwtl
data16
adc
adc
sub
sub
push
adcl
xlat
fs
out
popf
jb
gs
add
imul
test
push
adc
or
cmp
idiv
aas
inc
mov
jmp
int
test
pop
and
inc
mov
push
imul
ss
rorl
xor
das
out
xor
jp
mov
jg
repnz
je
adc
pop
fidivs
or
pop
and
and
out
in
xor
jo
and
xchg
cmpsb
gs
stos
mov
sti
or
or
icebp
fwait
mov
hlt
mov
shlb
movsb
and
stos
xor
pusha
loopne
nop
xchg
insb
add
push
and
cli
lods
pop
xchg
jnp
cmp
imul
jb
mov
cwtl
jp
enter
pop
hlt
scas
sbb
rcl
mov
sahf
fsubrl
daa
out
loope
jmp
sbb
inc
push
push
mov
ret
inc
dec
lcall
xor
shll
lea
repz
loop
sbb
hlt
daa
jae
or
sahf
push
scas
xor
repnz
mov
mov
dec
sbbb
sbb
stos
sbb
daa
lock
mov
push
in
jb
std
push
inc
adc
int3
jg
sbb
lds
and
sbb
mov
stos
dec
lahf
lods
mov
sbb
sub
jmp
movsb
sub
cmp
mov
les
xor
je
cli
dec
add
mov
mov
test
out
inc
jp
cmp
pop
je
js
push
ret
daa
mov
xchg
mov
ljmp
add
adc
js
out
stos
inc
test
scas
lcall
mov
jae
mull
push
mulb
movsb
scas
testb
mov
subb
xor
sbb
mov
sbb
je
push
sbbb
cmp
cmpsl
adc
ds
js,pt
bound
mov
jnp
ret
mov
cmpl
jbe
xchg
xchg
mov
and
xor
fst
int3
sbb
xor
rolb
inc
pusha
or
jecxz
cltd
mov
mov
nop
xchg
cld
nop
inc
addb
xor
adc
lods
xor
fucom
and
mov
pop
push
loope
xchg
aas
mov
pop
xchg
imul
mov
dec
cmp
clc
xor
nop
xchg
pushf
inc
fidivrl
lahf
fdivl
xor
dec
js
push
ret
and
add
and
pushf
cmc
std
fs
dec
into
or
ficoms
or
test
jmp
xchg
jle
mov
icebp
sbb
imul
push
pop
movsl
test
push
mov
int
and
lret
pop
fisubrl
push
sub
fcoms
adc
pop
mov
rorl
daa
lret
iret
jns
or
pop
mov
dec
pop
adc
ljmp
inc
imul
subb
jle
iret
jmp
inc
daa
outsb
notb
pusha
arpl
fwait
cmp
sbb
pand
fisttps
mov
and
pop
dec
push
pop
push
sbb
outsl
arpl
cmc
mov
push
and
mov
ds
jb
mov
test
es
enter
cmpsl
jl
push
pop
into
cld
xchg
inc
aam
dec
shll
repz
push
data16
popf
xchg
sbb
mov
pop
inc
pop
insl
adc
cli
insl
add
cli
jmp
inc
int
push
push
jl
cwtl
pop
fwait
inc
notb
dec
or
sarl
sub
push
outsb
xchg
add
xchg
ja
hlt
add
data16
sbb
or
sti
ret
and
shl
sbbl
inc
fsubrp
jo
mov
insl
jae
xor
rorb
cmp
dec
and
cwtl
pop
mov
add
gs
push
arpl
xchg
dec
inc
cld
outsb
rcll
insl
or
xor
adc
dec
inc
jp
shl
jae
das
dec
aad
aas
pop
mov
or
xor
cli
xchg
out
mov
sbbb
and
xor
push
sub
gs
js
adcl
and
movsl
sub
aaa
xchg
xchg
inc
dec
xor
lods
sbb
fs
sbb
fnstsw
dec
out
push
dec
mov
loop
fsubrl
lock
stc
push
sbb
mov
push
inc
mov
scas
andl
in
sahf
push
repnz
js
jl
cmp
fwait
xor
in
mov
adc
mov
out
insl
pop
mov
out
ror
into
pop
pop
sbb
incb
int
shll
or
in
int
pop
mov
cli
or
dec
pop
mov
sub
push
mov
mov
sbb
loopne
ds
fs
push
jg
insl
cmp
adc
testb
test
inc
loop
mov
mov
out
cltd
xor
int3
adc
mov
data16
clc
nop
and
out
push
jbe
and
push
inc
int3
ret
mov
movsb
pushf
dec
add
subl
fistpll
mov
inc
jno
ficomps
lcall
adc
push
mov
repz
mov
dec
adc
insb
jnp
test
mov
mov
outsb
push
xchg
pop
idiv
and
push
je
push
add
fstpl
fcom
popf
gs
lods
inc
mov
jge
nop
xor
inc
xlat
xchg
jle
add
xor
mov
bound
rorb
mov
daa
mov
imul
mov
das
mov
lret
dec
pop
shll
jb
shlb
mov
icebp
push
pop
adc
jl
mov
dec
inc
xchg
dec
inc
imul
mov
mov
pushf
clc
cmp
sbb
lods
push
xchg
clc
into
pusha
pop
ficomps
outsl
insl
cmpb
clc
xchg
shrb
push
std
mov
test
bswap
inc
sti
into
adc
inc
aad
aam
pop
inc
mov
scas
sti
xor
pop
mov
add
hlt
mov
sub
cld
daa
and
out
enter
ja
pop
jns
loop,pt
insb
lea
jo
dec
pop
in
lock
jb
adc
jecxz
xchg
lds
and
pop
aas
jle
out
add
shrl
add
jns
dec
dec
leave
movsb
and
lcall
repnz
mov
mov
dec
sbb
mov
sahf
sub
mov
mov
jns
xor
sahf
aas
add
aas
mov
jo
cmp
adc
pop
icebp
sub
add
jmp
pop
adc
mov
insb
xor
mov
ja
mov
mov
pop
lock
inc
enter
mov
push
pop
pusha
fistpl
pop
cwtl
aaa
outsl
mov
jp
sbb
sbb
ja
sub
dec
faddl
paddsw
adc
int3
inc
adc
pop
adc
pusha
push
jecxz
sbb
cld
lods
sbb
jle
xchg
and
insb
pushf
test
pushw
xchg
fisubrs
rcll
mov
aaa
mov
movsl
out
inc
mov
cmp
xchg
jl
push
or
daa
repnz
jns
sub
insb
sub
pop
cwtl
adc
dec
out
and
inc
or
pop
scas
xchg
dec
std
subb
jg
in
stos
sbb
call
dec
mov
scas
mull
push
int3
js
mov
je
cmp
pop
push
inc
jnp
gs
mov
push
push
cmp
sub
inc
in
loop
jmp
aam
lea
out
sub
stos
or
or
inc
pusha
mov
pop
popa
push
int3
add
int
inc
in
pusha
and
dec
inc
lahf
or
jns
mov
cmc
daa
push
jmp
mov
inc
cmpb
movsb
roll
movsl
dec
and
xor
sub
pop
mov
paddsb
and
jae
enter
iret
stc
cmp
mov
inc
xor
std
dec
cmpb
leave
repz
decb
lret
jbe
push
xchg
js
out
mov
pop
add
rcll
ljmp
lahf
cmp
imul
into
mov
xchg
push
in
add
js
jl
notl
adc
sub
loope
push
subb
dec
hlt
xor
xchg
mov
push
insl
mov
sti
rclb
cli
and
mov
fiadds
cltd
inc
jne
bnd
sarb
pop
sbb
mov
or
insb
jg
pop
sub
test
xchg
pop
int
xchg
inc
mov
fildl
arpl
lock
pusha
dec
inc
xchg
popf
add
jg
scas
test
xchg
sahf
mov
adc
bswap
icebp
std
fndisi(8087
testl
dec
fdivl
subl
fimull
in
sbb
fwait
movsb
stos
sub
imul
lret
mov
push
or
and
mov
lret
cs
stos
sbb
pop
adc
jp
pop
test
fadds
adcb
push
aam
shlb
out
addr16
shll
mov
ja
push
jmp
insl
sahf
adc
scas
cvtdq2ps
xrelease
push
push
pop
push
jne
xchg
daa
xchg
lcall
lds
and
add
push
mov
bound
xor
jmp
jecxz
bound
out
jmp
ret
mov
fnstsw
add
push
dec
loop
push
in
xor
mov
daa
sub
inc
or
sbb
std
arpl
les
shll
ret
idivb
cld
cmp
sahf
jl
fstpt
lods
sahf
jp
or
xchg
dec
jp
xchg
or
shll
dec
popf
cmp
push
out
rorl
iret
fcomps
xor
cmp
out
jmp
jg
or
push
jp
or
loop
mov
lcall
dec
pop
in
push
cld
test
inc
clc
pop
add
test
outsl
adc
jl
dec
inc
sub
hlt
stos
mov
dec
cmp
pop
cmp
imul
aad
inc
mov
cltd
and
xor
test
lret
mov
jmp
xchg
jb
xor
popa
ja
xchg
sub
inc
faddl
pop
in
sub
pop
jmp
out
fldt
ljmp
or
subl
or
push
xchg
cmp
sti
mov
bound
dec
mov
aaa
mov
aaa
sub
add
ret
inc
in
cmp
or
popa
push
in
popa
dec
rol
adc
bound
mov
rorb
inc
pop
fsubl
push
cmp
push
aad
push
lahf
lret
loopne
mov
movsb
or
push
xor
les
std
leave
mov
test
and
cmp
mov
fidivrl
xor
roll
cmp
aas
int3
ss
ret
divb
cmp
jl
fmull
sbb
ds
loopne
aam
cmp
xchg
inc
fdivs
lret
sbbl
dec
pop
push
sarb
and
je
scas
pop
add
inc
scas
adc
or
test
pop
fwait
pop
rorl
aaa
inc
clc
mov
pop
pop
push
test
out
cmp
xchg
mov
inc
sub
push
test
dec
cltd
mov
ljmp
mov
lahf
rorl
mov
ds
lods
cmp
cmpb
ror
and
fcmove
pop
or
sub
mov
mov
adc
jns
jne
inc
loop
pop
mov
adc
jle
pop
in
loop
push
outsb
out
jb
inc
xchg
adc
xchg
inc
jge
lods
xor
popl
cli
mov
cmp
mov
jbe
cmp
shll
cwtl
arpl
pop
sahf
inc
push
cmp
and
test
xor
sub
scas
sbb
cmp
jge
enter
repnz
mov
sub
shrl
mov
sbb
cmp
cmp
aad
sbb
mov
clc
dec
pop
js
mov
sbb
push
or
int
les
repz
xor
xor
gs
pop
loope
sbb
sbb
xchg
add
and
cmp
mov
pop
xchg
mov
ret
mov
scas
das
in
sti
popa
cmp
mov
dec
xlat
lret
aad
push
ljmp
xor
inc
xor
adc
loope
sub
dec
push
jmp
xchg
lds
pushf
adc
shlb
add
enter
ss
stc
mov
pop
xchg
cmp
pushf
jmp
mov
dec
xchg
rorb
jno
icebp
int
xor
mov
sub
pop
mov
fistpl
enter
enter
imul
push
inc
out
aas
sbb
and
dec
in
mov
scas
inc
and
cld
push
mov
inc
js
pushf
mov
addr16
int3
mov
andb
sub
adc
std
sbb
sbb
push
faddl
mov
es
xchg
mov
test
popa
xorl
shl
jo
adc
shrb
push
add
xchg
adc
sahf
shll
cmp
dec
or
rcll
lea
lcall
sub
cmp
inc
mov
xlat
jmp
scas
scas
bound
pusha
mov
pushl
or
lahf
ja
mov
mov
iret
adc
fstpl
mov
ret
movsl
pop
push
rcrl
sub
mov
sub
sub
in
ret
mov
sub
dec
hlt
sub
pop
cmp
pushf
ret
add
and
or
outsb
jg
push
aas
aas
mov
mov
add
call
and
leave
inc
xchg
js
negb
xor
hlt
xchg
es
dec
mov
jp
xchg
xchg
rorl
sti
push
mov
imul
dec
push
cmp
testl
mov
rclw
imul
shlb
cmp
rclb
rorb
mov
xor
loopne
bound
sbb
in
dec
fcomps
mov
aas
jg
insl
jbe
cmp
int3
dec
mov
fidivs
mov
push
or
jns
xchg
sahf
inc
div
test
cs
out
cwtl
icebp
xchg
add
out
cmp
or
loop
mov
jnp
in
xchg
adcb
mov
sub
cmp
jnp
adc
testb
xchg
insl
inc
stc
testl
sbbb
ja
sub
stc
sbb
push
and
arpl
xchg
push
push
cmpsl
jne
lock
add
sti
test
mov
sbb
aad
adc
inc
js
push
loope
jb
js
cmp
or
jmp
xchg
inc
mov
xchg
push
jge
das
xchg
xchg
cmp
pop
mov
mov
je
and
inc
or
pop
ss
mov
mov
xchg
and
insl
in
cmc
push
jnp
mov
data16
nop
loope
nop
nop
pop
xchg
mov
call
mov
outsb
std
add
xor
xor
mov
movsl
fbld
ss
iret
imul
ret
xchg
sub
leave
jg
and
mov
mov
in
inc
hlt
xchg
repz
inc
mov
js
mov
into
xchg
adc
mov
sbb
jp
ret
scas
push
jmp
std
cmp
scas
fs
jns
inc
shr
or
xlat
loopne
outsl
outsl
or
add
pop
mov
mov
mov
add
rclb
test
sub
cmp
iret
shlb
push
mov
xor
xchg
movb
out
xor
sbb
pop
adc
shlb
jno
jae
sub
sbbb
ficomps
jg
cmp
mov
lds
sbb
movsb
aam
pop
ret
cmp
out
add
dec
fdivrp
xchg
ss
adc
dec
sbb
sbb
jmp
ficomps
mov
mov
aaa
mov
jo
lock
adc
push
adc
pushf
out
pop
cld
xor
movsb
adc
xchg
add
push
arpl
out
dec
mov
test
lret
sbb
or
shlb
adc
fstpt
shlb
mov
fsincos
bndldx
jmp
jge
loopne
sbb
mov
xor
add
cs
push
in
xor
mov
aaa
pop
lds
clc
clc
addl
loop
ret
cmp
ficomps
shlb
repnz
iret
pop
jmp
and
fisttps
cmp
xor
lcall
adc
dec
push
cltd
mov
xchg
dec
inc
jb
add
or
js
sub
popf
xor
pop
int
mov
inc
cmpsb
xchg
jecxz
sbb
xlat
aam
je
subb
jns
inc
dec
fcomps
mov
xchg
jecxz
call
sbb
jnp
pusha
cli
mov
das
xor
inc
add
lret
clc
jecxz
pop
fstl
sbb
in
adc
loop
rcrl
in
jecxz
jge
and
jae
icebp
or
fcompl
xor
push
gs
mov
lahf
jge
pop
xor
push
nop
es
jg
sarb
test
cli
lea
popf
push
hlt
ljmp
andl
daa
cmp
ds
dec
and
dec
inc
mov
mov
pop
mov
mov
adc
stc
jb
mov
xchg
insl
dec
mov
xor
cs
shlb
xorb
adcb
sub
xchg
pop
inc
es
leave
das
popa
aas
pop
out
loop
lods
mov
inc
mov
cmpsl
or
mov
and
ljmp
test
push
or
mov
rolb
jmp
pop
add
aad
lret
mov
push
in
fbld
fstl
push
sub
gs
pop
jge
and
out
es
dec
jb
nop
and
dec
cmc
adc
cwtl
nop
dec
loop
jno
cmp
or
popa
push
sub
push
cmp
mov
mov
rcl
aaa
jns
jbe
push
cltd
int
cltd
pusha
fwait
adc
loop
jp
sub
stc
mov
lock
sbb
aad
and
inc
stos
fstpl
pusha
mov
jg
cvtps2pd
test
sbb
sub
pop
and
add
push
sbbl
lods
stos
xor
cmp
xchg
out
sar
imul
mov
loope
out
xor
sbb
cli
imul
mov
inc
out
aaa
lds
add
fucomip
inc
pushf
enter
adc
inc
fadds
cmp
push
movsl
movb
clc
adc
inc
push
cmp
loope
push
sahf
das
xlat
cmpsl
stc
dec
jno
pop
test
push
cmp
lahf
add
jb
mov
jnp
jmp
outsb
sub
imul
jecxz
mov
sub
sub
cs
jmp
mov
cwtl
pop
ret
push
call
iret
jnp
sbb
push
cmpsl
jecxz
xor
inc
popf
and
call
hlt
ret
mov
icebp
movsb
jp
inc
inc
lods
mov
add
fbld
mov
gs
mov
mulb
and
ficomps
sti
out
jge
mov
sub
xchg
jmp
rorb
dec
dec
mov
xor
push
pop
sub
jle
loop
in
cmp
mov
cmpsb
push
bnd
jg
hlt
repz
xor
push
mov
inc
cld
sub
icebp
lcall
xchg
jbe
mov
xor
shlb
arpl
push
fcomip
dec
mov
pop
sub
mov
jnp
pushf
jmp
mov
cwtl
push
adc
jge
mov
xchg
lods
loope
shrb
pop
cs
jne
mov
ficoml
dec
cltd
inc
into
adc
dec
iret
or
sub
or
cmc
std
pop
insb
inc
jo
popa
xchg
cmpsb
sub
test
add
sahf
fsubrs
imul
test
pop
dec
mov
cmp
scas
les
es
sub
xchg
cmpsb
sub
mov
test
aas
adc
mov
pushf
cld
int3
mov
repz
jns
jne
and
push
cwtl
cmp
push
dec
mov
jbe
arpl
pushf
dec
fistpl
test
popf
mov
push
sub
and
adc
rcrl
sbb
xchg
and
mov
clc
sbb
mov
cmp
ret
loope
xchg
popf
ret
imul
cli
xchg
dec
cli
loopne
pop
push
inc
xchg
int3
xchg
sub
ret
stos
cmp
jge
inc
test
cli
xchg
leave
testb
outsl
enter
push
sub
sbb
push
dec
sub
in
sbb
push
leave
inc
aas
ja
test
gs
cmp
pushf
test
in
dec
pushf
add
jno
loope
dec
fs
sar
mov
repnz
mov
outsl
sub
push
movsb
xchg
lret
pusha
imul
lods
cmpb
jge
push
andb
xchg
mov
pop
sub
pop
scas
lcall
into
call
xchg
popf
call
inc
adcb
nop
jg
js
inc
pop
outsl
dec
test
repnz
leave
into
push
cs
lcall
fnstcw
fmuls
std
in
push
xchg
mov
data16
pop
loope
decl
mov
movsb
pop
sbb
adc
push
mov
sub
add
in
stos
mov
xor
mov
clc
dec
cwtl
int3
mov
jg
cmp
les
and
jnp
mov
out
or
sub
into
jg
inc
mov
jl
addl
es
aas
xor
adcl
dec
or
adc
push
ds
rorb
pop
int3
pop
mov
sub
jo
iret
mov
fs
je
and
xchg
sub
sbb
stos
sbb
cld
mov
scas
xor
out
aas
hlt
inc
push
push
push
jne
fs
es
js
sbbl
scas
roll
jmp
int3
in
shll
test
jp
rclb
or
xchg
mov
add
fldenv
dec
sbbl
adc
mov
ss
popa
cmpl
cmp
out
xchg
test
int3
or
sub
mov
inc
lret
std
cmp
pushf
inc
mov
lods
loop
jns
add
pop
outsl
dec
aad
ret
sub
hlt
xchg
push
shl
dec
test
pop
fdivs
jne
mov
fcoms
adc
popa
push
push
cmc
aaa
das
icebp
hlt
mov
inc
fsts
out
rcrl
mov
push
lods
aas
lods
pop
movsl
fidivrl
orl
jno
pop
mov
das
push
pop
fisubs
xchg
enter
inc
adc
pushf
push
and
mov
leave
in
and
pop
or
adc
inc
mov
aam
mov
out
dec
mov
push
jmp
lret
sub
aaa
adc
jno
and
dec
or
sarb
out
push
push
sub
push
arpl
shlb
clc
or
mov
icebp
in
in
shl
fmull
add
jle
push
cmp
xchg
pop
add
fwait
mov
cmpsl
jbe
cmpsb
push
sti
add
mov
lods
jp
loope
jp
js
lock
lds
cmp
nop
dec
daa
pusha
into
add
xchg
push
clc
or
mov
cmp
adc
idivb
sub
call
fstl
fs
data16
ficoml
jae
data16
dec
dec
in
mov
cmp
lret
fmull
jb
inc
push
gs
cltd
ds
add
lahf
negl
or
dec
jns
pop
pop
loopne
xchg
ret
fisttps
leave
mov
adc
aas
add
xor
loopne
hlt
jmp
sub
mov
es
push
adc
nop
dec
mov
adc
rclb
gs
dec
jns
fidivrs
cmp
insb
shlb
jnp
xor
lods
mov
clc
xchg
cmpb
and
xchg
aam
ds
mov
xchg
sbb
pushf
xchg
push
cmp
loop
dec
sub
int3
mov
test
mov
jnp
push
fcompl
mov
xchg
or
sub
aad
andl
jl
cs
cmp
fs
arpl
mov
ss
add
add
add
and
sbb
mov
scas
shll
fisubl
adc
outsl
lret
inc
stos
pop
pusha
repz
jnp
cli
push
ret
jns
and
out
into
and
cmp
test
rolb
cmp
jmp
bound
incb
cli
jge
ret
sub
mov
cmp
addr16
ds
xchg
aad
dec
out
sbb
mov
jp
stc
push
push
into
stc
fistpl
rcrb
ja
shl
lock
push
sub
dec
cmpsl
std
stos
xlat
xchg
mov
sub
pushl
pop
popf
lods
push
lds
cmpsb
pop
add
in
test
stos
xor
and
aas
mov
push
sbb
lahf
and
push
test
fs
jge
push
cld
push
push
adc
jmp
mov
cld
sarl
addl
ss
imul
fdivs
or
aas
xchg
adcl
xorl
dec
ss
insl
jl
test
xchg
and
or
and
xchg
fwait
pop
pop
les
xor
xchg
into
dec
insl
insl
orl
lods
int3
outsb
mov
or
sbb
pop
adc
cmpxchg
nop
xlat
xchg
pop
imul
lret
cwtl
fs
sar
jns
mov
mov
jge
add
pop
fdivl
or
int
hlt
and
mov
imul
push
lods
cmp
out
add
push
push
push
popf
out
dec
cs
aad
mov
cld
rclb
add
hlt
pusha
ret
mov
fistpll
inc
loopne
mov
ds
jp
cmp
ljmp
push
sbb
ret
rolb
dec
adc
jl
xchg
mov
cmpsb
mov
fsubrs
cs
jbe
jecxz
pop
push
das
jnp
into
mov
push
leave
sarb
dec
jmp
xor
adc
push
pusha
ss
scas
jbe
sub
ds
and
hlt
outsb
popa
cli
les
jno
cs
negb
mov
push
sbb
test
dec
sub
add
dec
add
cmp
mov
js
jmp
mov
mov
imul
lcall
bound
arpl
jb
movsb
es
push
mov
xor
sub
ds
push
rcrl
xor
or
jns
fnsave
mov
xor
mov
mov
cmp
insb
and
neg
std
mov
jge
mov
push
ficoml
ja
loopne
outsb
shrl
repnz
push
jl
outsb
sub
sbb
mov
and
jl
mov
cmpsb
icebp
outsl
lock
push
shll
popf
mov
nop
or
dec
repnz
lock
das
dec
shl
repnz
imul
xor
das
xor
xchg
ja
mov
mov
jbe
pop
je
lods
aad
dec
stos
sbb
push
push
pop
loope
xchg
mov
mull
out
stos
cmpsl
arpl
sub
pop
jmp
push
push
xchg
pop
adcl
nop
inc
bswap
pop
xchg
xchg
mov
repnz
xchg
cmp
in
in
sahf
fistpl
dec
movsl
lea
out
mov
sub
pop
and
daa
into
filds
loope
sub
adc
jecxz
pop
pop
into
ret
inc
pushf
sahf
lds
push
enter
aaa
ljmp
xor
sahf
push
jmp
push
or
pushf
insl
xchg
jo
pop
es
adc
cwtl
loop
dec
jne
mov
dec
pop
pop
inc
cmpsl
lcall
daa
push
add
push
das
mov
mov
jnp
add
dec
mov
xlat
xorb
dec
in
hlt
sarb
mov
dec
fidivrl
inc
out
and
in
gs
push
push
and
bound
add
out
mov
fdiv
sbb
cmp
repnz
sbb
jb
int
mov
rorb
ljmp
int3
cmp
mov
xchg
adc
addr16
sub
fs
lahf
int3
xchg
vaddsubps
iret
lods
mov
icebp
mov
and
enter
push
es
mov
mov
inc
imul
dec
cli
mov
inc
jmp
cmp
or
push
sub
add
fiaddl
cwtl
out
jne
mov
data16
jne
and
out
aas
and
das
scas
xor
mov
xor
xchg
mov
sub
jne
sbb
xor
lods
add
jnp
lds
sar
cs
add
stos
push
arpl
jmp
push
inc
xor
or
dec
jle
enter
push
fcomip
mov
or
imul
sub
les
in
cmp
jo
xchg
fimull
adc
and
fs
rorb
fdivp
mov
fs
add
cmpsb
and
ss
ljmp
and
jecxz
jo
out
movsl
fstpl
jne
jmp
pop
cmp
pop
rclb
and
rorb
pop
fwait
aaa
and
pop
in
popf
lods
mov
xchg
idiv
push
jle
xchg
mov
lods
das
ljmp
xchg
in
inc
pop
push
push
jb
sbb
adc
aas
fisttps
aad
rclb
mov
rolb
in
sbb
mov
xchg
adc
pop
lea
push
push
int
push
rcrl
inc
jb
int
ss
add
addr16
xchg
and
loope
xchg
imul
sarb
notb
xor
sub
mov
mov
in
xchg
pop
mov
imulb
aas
cld
ret
jne
dec
lea
mov
lcall
aas
adc
mov
or
push
mov
aad
cmp
cmp
sub
dec
mov
pop
sub
adc
clc
add
rcr
jnp
cmp
addr16
icebp
push
icebp
xor
test
sub
andb
and
sbb
xchg
ud2
mov
test
popa
fldcw
mov
outsl
push
push
dec
gs
mov
push
cwtl
sub
push
iret
das
fldcw
cli
jecxz
push
cmp
pop
and
in
jle
mov
mov
cwtl
idivb
jo
fstpl
jns
rol
insb
cmpsb
push
popa
outsl
jp
das
or
mov
mov
fcmovnb
xchg
xchg
pusha
jb
jbe
pop
loopne
idivl
pop
xor
dec
scas
rcll
test
mov
sub
stc
pop
in
and
mov
xchg
mov
push
mov
xchg
jecxz
imul
test
cmc
add
pusha
jno
loop
pop
out
push
in
popf
es
adc
lret
add
je
sbb
jne
out
jge
inc
push
push
push
in
inc
loopne
out
jmp
dec
decb
test
jmp
fsub
inc
push
flds
mov
in
cltd
jno
data16
push
in
pop
aam
jl
mov
shrl
add
adc
mov
push
jo
mov
or
add
movsb
rolb
aad
push
nop
and
and
mov
test
mov
xor
jnp
cld
aam
fistpl
bound
dec
fs
sahf
jl
cli
sub
imul
dec
stc
adc
dec
call
dec
int3
push
scas
jo,pn
jle
lcall
mov
bound
xor
fstpt
dec
repz
movsb
lods
movsb
fmull
js
mov
shrl
pop
aad
lods
push
sbb
je
add
mov
lock
and
mov
fcoml
lds
int
xor
jl
sbb
dec
sub
mov
inc
and
popa
pop
cmp
test
fwait
mov
dec
mov
cmp
and
aad
mov
loop
sub
out
lret
fildl
rol
push
shll
jae
push
out
jb
fisubrs
stc
or
aam
fsts
sub
mov
sub
jp
jg
pop
lret
imul
es
or
fucom
popa
mov
ds
push
cmp
cs
jg
mov
gs
inc
sub
hlt
sbb
ljmp
dec
iret
in
pop
dec
in
xchg
repz
insb
or
mov
jno
sub
cli
xor
pushf
xor
out
mov
xchg
jmp
loopne
in
dec
aaa
lahf
jnp
xor
sbb
push
or
push
fstpt
mov
out
mov
lahf
sub
repnz
cmp
push
inc
popf
leave
jecxz
xor
psrld
xchg
push
adc
mov
mov
aad
stos
add
loop
ds
gs
mov
pop
mov
push
mov
jge
mov
push
stos
and
add
outsl
cld
js
jbe
mov
pop
jl
mov
mov
je
and
mov
mov
jnp
push
mov
sahf
and
outsb
pop
mov
sub
dec
lret
add
loop
test
add
add
mov
mov
xchg
fwait
insb
dec
mov
fdivrs
inc
jae
adc
jmp
push
fldcw
mov
repz
xchg
mov
jmp
pop
inc
fwait
xchg
lea
xor
push
adc
add
in
fmull
negl
pop
call
mov
out
loope
inc
mov
push
sub
icebp
subl
dec
clc
xor
je
fisubl
xor
xor
jmp
cmpsb
or
nop
cltd
sub
or
shll
xor
mov
imul
fisubrl
mov
push
cmp
xor
adc
lcall
cmp
add
add
push
je
adcl
or
insl
pushf
sbb
sbb
xchg
mov
dec
jecxz
loop
jb
fldl
jecxz
push
sub
xor
int
loope
out
or
ror
sub
xor
mov
icebp
shll
clc
adc
imul
push
sti
loope
and
cltd
cmovp
mov
pop
nop
dec
fs
add
dec
hlt
pusha
lea
vmovapd
sbb
inc
xchg
stos
outsb
enter
jnp
cmpsl
pop
sub
fucom
pop
sbb
or
or
sti
lahf
xchg
push
movsb
sub
push
sbb
imul
les
icebp
enter
push
mov
pop
das
mov
jl
cmp
inc
mov
sbb
dec
popf
pop
in
jge
mov
mov
jne
cmpsl
imul
filds
sarb
subb
aaa
loopne
push
xchg
insl
mov
dec
sahf
mov
test
pop
jnp
cltd
clc
cmp
cwtl
pop
test
xchg
xchg
push
add
push
xor
cmp
jmp
shll
fcomp
jnp
mov
xor
xor
jo
lea
lods
sub
or
sub
sbb
int
xor
push
out
push
or
mov
jle
dec
je
mulb
outsb
xor
push
or
jl
mov
arpl
dec
cltd
add
out
jge
dec
lahf
push
cmp
cmp
int
mov
xchg
movhps
push
and
popa
sbb
ja
mov
les
sub
mov
addr16
dec
or
push
cmc
push
scas
lret
adc
mov
push
jge
in
cli
or
jae
mov
loope
stos
mov
mov
loop
sarb
insb
push
fwait
test
roll
push
mov
inc
sub
sbb
push
add
push
or
mov
cmp
mov
mov
cmp
adc
mov
sub
aad
jmp
jmp
mov
sbb
xchg
sarl
xchg
mov
mov
adcb
xchg
push
sbbl
pop
ret
xchg
nop
je
cwtl
cwtl
mov
sub
mov
cld
jne
mov
sbb
pop
push
lcall
dec
mov
or
sub
ljmp
sbb
insl
pop
jae
outsb
sbb
sahf
jnp
push
mov
fnstsw
loopne
sbbl
data16
mov
push
mov
les
arpl
adc
sub
std
jb
and
lods
sub
roll
je
icebp
cmp
xlat
arpl
xor
in
sbb
push
cmp
cmc
push
iret
shlb
jl
hlt
dec
stos
xlat
sbb
adc
loope
or
sbb
mov
std
cltd
fimull
lret
aas
ja
mov
lea
int3
push
jecxz
flds
adc
imul
mov
mov
mov
out
pop
aad
mov
sbb
mov
cld
dec
cs
shrb
fs
call
fs
add
in
pop
dec
shrb
fstps
jmp
dec
cli
sub
or
mov
dec
cmp
push
sbb
cmc
pusha
cwtl
xchg
rcll
cmp
push
enter
dec
aas
or
cli
movsl
mulb
xorb
mov
push
push
das
mov
popa
mov
and
pop
push
rorl
pop
push
sbb
and
and
scas
mov
jmp
in
fisttpll
in
pop
js
mov
std
sub
dec
lea
xlat
test
inc
xor
or
imul
sbb
jmp
gs
sub
ja
popf
add
mov
adc
mov
mov
pop
scas
add
test
cli
jle
dec
push
jae
stos
jo
push
pop
scas
fmull
xchg
mov
std
push
dec
lock
xlat
out
lret
sbb
dec
or
xor
bound
cmp
pop
fistl
pop
fdiv
mov
jb
movsb
mov
popa
int
and
imul
fisttps
adc
and
les
inc
fstp
xchg
dec
inc
sbb
or
movsl
hlt
pop
and
xor
mov
mov
jae
iret
pop
gs
les
fnstsw
mov
ret
mov
testl
int3
insb
stos
sti
inc
cli
jbe
add
cmp
xchg
mov
imul
xchg
xchg
pop
mov
pusha
push
push
out
inc
jno
cmp
lock
inc
cmp
adc
mov
jg
lret
jg
push
add
xchg
and
fdivs
or
inc
mov
bound
rorb
xchg
test
mov
add
aaa
jno
lds
scas
popf
mov
out
dec
jne
jae
xorps
aad
incl
and
push
bound
sbb
fisttpl
sbbl
pop
loope
cmp
jnp
push
inc
mov
scas
mov
aam
repnz
push
jl
shl
mov
lock
fcompl
out
adc
fs
roll
mov
dec
sub
lods
or
js
sub
in
scas
jle
divl
or
xchg
inc
stc
pop
mov
ss
lds
int
leave
add
push
mov
test
loopne
popf
add
loope
xor
test
xchg
test
in
inc
aad
mov
out
imul
je
roll
rorb
add
aam
arpl
fistl
add
leave
sbb
imul
lcall
inc
push
aad
lret
cmp
sbb
add
dec
test
sub
sub
mov
pop
repnz
jg
add
xor
fxch
add
hlt
pop
mov
scas
push
lods
pop
fadd
movsl
fmuls
push
sub
adc
aad
lret
into
mov
arpl
xchg
insb
mov
mov
mov
xchg
sbb
dec
pop
cwtl
cmp
xchg
fiadds
pop
dec
mov
sub
arpl
cmc
test
lods
test
insb
int
xchg
xchg
lcall
aam
incb
xchg
adc
pusha
xor
pop
js
sbb
call
mov
aad
xchg
iret
mov
mov
mov
mov
lahf
test
cwtl
pusha
jo
mov
pop
cmp
ja
cmpsl
or
in
dec
or
je
lret
out
pop
jge
push
xlat
jecxz
adc
loopne
jl
insl
or
push
sbb
push
jmp
ffree
test
cmp
ss
xchg
pop
sub
stos
in
pop
add
xorl
pusha
popa
mov
mov
test
ficompl
stos
pop
push
pop
inc
ret
popf
cmpsb
mov
lds
cld
fldt
push
inc
pop
mov
mov
lods
lret
push
sub
movsl
fwait
push
mov
adc
pop
pop
fsts
xor
clc
arpl
fildl
mov
fdiv
bound
aam
int
xchg
add
pop
in
ret
push
and
or
xchg
fldl
cmp
pop
call
inc
inc
push
addr16
sub
mov
outsl
mov
mov
cmp
outsb
adc
or
pusha
mov
pop
in
lahf
cmpsl
sbb
adcl
outsl
xchg
mov
repnz
xchg
pop
cmpb
hlt
dec
insl
push
popa
cmc
js
inc
or
aam
dec
xchg
or
mov
cmpb
push
inc
push
mov
scas
imul
addr16
dec
int3
faddp
iret
insb
mov
push
bound
repnz
bound
or
inc
in
cld
xor
mov
xchg
add
mov
daa
leave
jl
roll
test
mov
out
test
jle
sub
ljmp
inc
dec
aad
mov
mov
enter
push
jg
out
ret
jns
lock
fcom
pause
notl
adc
sbb
insl
cltd
test
sub
outsb
lds
cmp
xchg
out
cmpsb
test
cmc
lods
xor
mov
repnz
rcll
addr16
addr16
rclb
cmpl
cmp
testb
xor
xchg
stos
movsb
ljmp
pushf
ljmp
mov
imul
xchg
add
aam
jp
jl
dec
mov
outsb
mov
mov
test
lods
fnstcw
pop
sahf
xchg
mov
scas
lret
xchg
sub
inc
jo
sbb
lods
leave
add
fisttps
shrl
hlt
xchg
adcl
xlat
or
sbb
jno
sub
dec
outsl
ja
xor
mov
cmp
mov
mov
popf
rclb
adc
mov
ret
mov
push
mov
ret
enter
xchg
loop
xor
jmp
mov
xor
ljmp
inc
pop
dec
and
xor
xor
push
pop
adcl
je
fs
movsl
in
mov
lcall
sbb
sbb
loop
fdivl
push
arpl
adc
push
push
adc
mov
loopne
add
inc
jae
sbb
icebp
in
rcrb
xorl
adcl
push
cs
xchg
cwtl
push
dec
cmp
push
or
xchg
js
dec
test
jns
int
pop
stos
adcl
shrb
sub
mov
imul
pop
out
xchg
out
pushf
adc
addr16
sbb
pushf
sub
repz
jns
xchg
pop
mov
inc
jne
inc
pop
cmp
mov
pop
jge
out
and
sub
dec
sbb
clc
cwtl
add
mov
loope
dec
mov
dec
leave
into
push
in
in
xor
mov
clc
adc
ss
mov
mov
out
push
fwait
push
std
dec
jnp
in
or
out
mov
sub
lods
ljmp
ret
xchg
out
int
jnp
dec
fistps
sti
mov
arpl
or
ret
movsb
popl
adc
jnp
roll
mov
cld
and
repnz
mov
mov
int3
sarl
sub
add
adc
ret
aad
movsl
fwait
pop
call
or
fisttps
and
ss
aad
sti
mov
cmp
dec
jge
sbb
jnp
imul
ficompl
lods
add
mov
mov
fcompl
int
inc
ds
mov
sbb
test
sbbb
shl
or
dec
sub
push
or
push
pop
insb
jns
xchg
sbb
inc
pop
ret
mov
inc
push
mov
push
cmp
mov
push
ret
test
comiss
inc
sarl
mov
sbb
nop
mov
stos
and
inc
ja
gs
xchg
dec
insl
in
cwtl
add
add
xchg
adc
popa
push
aas
push
pop
lret
adc
add
outsb
xor
call
fidivs
pop
cs
xor
xchg
bound
jnp
xor
push
or
sbb
pop
shrb
repnz
mov
out
inc
inc
mov
sbb
mov
sub
movups
xchg
outsl
in
xor
cmp
fnsave
dec
and
dec
cmc
dec
out
incl
cmp
outsl
clc
pop
xor
sub
lret
xchg
mov
rcl
pop
mov
dec
mov
or
in
or
jnp
in
das
pop
xor
jl
push
imul
cli
xor
jno
ja
sarb
inc
movsl
push
inc
jae
push
dec
mov
cld
insl
mov
fstps
lock
add
repnz
in
sahf
shr
aad
test
push
sbb
mov
repz
lret
xchg
into
adc
lret
mov
repnz
subb
jp
pushf
add
jecxz
pop
mov
mov
fwait
inc
in
repz
iret
mov
popl
leave
adc
add
inc
fmuls
sub
pop
and
lods
push
cmp
test
test
repnz
ret
enter
ret
mov
stos
ret
daa
dec
mov
fcmovnu
xchg
adc
addr16
dec
sub
xchg
pop
and
push
xchg
cmc
push
lret
mov
lret
sbb
aam
push
xchg
daa
mov
dec
sbb
gs
dec
cmpsb
push
aad
je
dec
inc
cmp
adc
adc
inc
mov
push
test
jno
test
mov
push
insl
push
leave
nop
push
or
popa
pop
cltd
xor
inc
dec
cmovp
pop
cltd
xor
dec
jo
ja
mov
loop
out
adc
add
jmp
push
insb
adc
imul
dec
insl
daa
jb
dec
lret
adc
imul
fstps
imul
fbstp
adc
sub
nop
xor
mov
sub
xor
lret
sub
sbb
pop
pushf
jb
jae
aaa
xchg
adc
ljmp
sbb
ficoml
insb
insb
dec
addr16
xor
sbb
pop
sub
clc
mov
cmp
out
insl
aad
repnz
out
imul
dec
dec
pop
test
add
mov
add
jb
dec
mov
lahf
add
xchg
push
icebp
inc
lret
neg
pop
aaa
jno
push
outsb
xchg
cltd
xchg
shlb
push
das
lock
pop
mov
xor
inc
mov
call
push
cmpsb
xchg
into
sti
dec
stos
or
insl
in
adc
out
scas
jg
loope
ds
dec
cmp
arpl
inc
push
add
adc
cmpsl
fs
fiaddl
and
imul
pop
pop
mov
xor
jl
lea
mov
dec
stos
push
dec
shl
dec
mov
sbb
outsl
popa
in
fwait
mov
test
cs
pop
fxrstor
xchg
repnz
inc
jmp
cmpsb
pop
and
in
xor
cltd
popa
jbe
int
adc
adc
mov
das
cmp
adc
addr16
pop
xlat
xor
mov
lret
sbb
outsb
icebp
dec
ljmp
pop
sar
call
mov
push
lods
pop
fsubrl
sarl
xchg
mov
movsb
es
push
ret
leave
xchg
xor
and
in
movsb
cmp
sbb
lahf
or
and
cmovnp
stos
pop
popf
addr16
mov
jecxz
mov
push
lahf
mov
bound
add
mov
dec
test
jbe
gs
dec
and
mov
push
das
ret
xchg
call
jg
les
xor
cmp
push
arpl
je
dec
je
icebp
mov
lea
mov
mov
push
and
jne
ret
rolb
es
or
push
test
mov
lret
imul
jnp
outsb
jecxz
iret
repnz
xchg
rcll
adc
iret
jbe
mov
push
sbb
loopne
xor
mov
aam
pop
call
jg
sahf
rcrl
lret
ljmp
das
andb
sbb
rcll
scas
jno
fwait
mov
pop
fildl
push
cmp
cmp
daa
jae
notl
rcr
je
add
hlt
fwait
xor
stos
out
dec
and
cli
push
xor
scas
cli
mov
pop
and
xor
xchg
gs
mov
jnp
lds
pop
movsl
repnz
enter
cmp
jge
daa
mov
stos
lret
jecxz
or
cmp
stos
jns
stos
dec
testl
push
sub
cwtl
add
sub
add
pushf
test
repnz
mov
leave
les
push
push
jns
adc
out
adc
xor
jno
fwait
sub
outsb
sub
aas
test
ret
daa
call
imul
test
xor
add
jecxz
adc
outsb
push
adc
push
lods
cltd
fisubrs
mulb
lock
and
shl
add
out
idivl
or
scas
pop
mov
stc
daa
test
movsl
adc
mov
mov
mov
inc
xor
pop
xor
jp
push
mov
lea
cmp
xor
lods
mov
cmpsl
sub
jnp
inc
mov
lds
pusha
xchg
xor
or
sbb
stos
pop
mov
push
inc
dec
loopne
push
ficoml
das
mov
ds
push
test
ja
adc
push
adc
sti
mov
adc
sbbb
cmp
sub
mov
fstpt
fcoml
push
sbb
mov
lock
fnstcw
in
pop
sub
lods
sub
cmp
xchg
jb
jp
ds
fcmovnbe
pop
clc
push
add
push
dec
shll
dec
pop
ja
inc
mov
cmp
mov
imul
adc
cwtl
fadd
xchg
out
pop
adc
sub
push
push
jo
adc
xchg
stos
or
mov
cmc
add
rcrl
and
adc
enter
fdivl
mov
cmp
insl
jne
je
hlt
cmpsl
push
jae
out
mov
fsubp
outsl
push
adc
ds
or
aad
xchg
mov
inc
push
sbb
xor
xor
xchg
mov
ss
jae
data16
bnd
gs
push
mov
push
lahf
sbb
or
imul
sti
xchg
es
dec
mov
in
push
xchg
stos
js
and
imul
adc
xchg
xchg
fwait
jno
lock
cli
xchg
inc
add
add
rcl
fs
push
mov
pusha
push
jg
push
sbb
xor
mov
call
fwait
xchg
aaa
and
jp
popa
xor
inc
sbb
rcr
cmp
lock
cld
push
adc
das
test
adc
fwait
ds
jnp
test
dec
aaa
test
pop
jecxz
pop
xorb
push
sti
sbb
mov
sahf
sarl
pushf
inc
or
push
push
scas
movsl
loopne
out
add
imul
repz
fiaddl
movsl
inc
std
imul
jp
repz
ja
pop
mov
sbb
sbb
mov
nop
loopne
mov
stos
loop
call
and
push
arpl
into
mov
xlat
mov
mov
pop
mov
jo
inc
ss
lods
pop
adcl
call
outsb
cmp
cmp
out
push
frstor
mov
lds
or
out
xor
jnp
sbb
sub
pop
daa
movsb
or
in
lahf
shrl
rorb
pop
cmpl
jge
test
sbb
jmp
dec
xor
nop
xchg
push
pop
fisubrl
and
in
call
addb
orb
fs
test
outsb
push
cmp
imul
or
ret
push
adc
cmpsl
sub
xor
fadd
dec
inc
movsl
ret
and
iret
rolb
push
nop
dec
mov
fs
add
in
ret
cld
movsb
push
dec
mov
and
adc
inc
loopne
lds
pop
and
inc
sbb
fchs
jno
pop
push
in
and
fcomps
mov
jge
bound
or
push
test
aam
pop
shlb
lcall
loop
scas
cmpsb
jmp
movsl
outsl
or
adc
sub
mov
std
mov
insl
movb
xor
push
es
ds
imul
loope
sbb
dec
dec
popa
out
xor
sbb
mov
in
stos
in
lds
arpl
add
cmp
mov
or
ds
or
sbb
xchg
popl
fchs
insl
mov
std
mov
out
enter
adc
xchg
inc
sub
or
jo
mov
fisttpll
fldenv
lret
mov
inc
inc
shlb
mov
dec
lds
sar
iret
cwtl
cld
jnp
out
or
sub
iret
jnp
xor
xchg
push
in
xlat
xchg
mov
cmp
scas
xor
jmp
inc
mov
cmpsl
mov
and
xor
jo
das
iret
pop
enter
sub
rcll
push
xchg
sbb
adc
insl
sbb
and
imul
js,pt
adc
push
xchg
mov
and
jns
les
movb
add
in
push
icebp
xchg
sbb
dec
mov
adc
lods
mov
xor
sub
out
cmpsb
popa
inc
fnstenv
int3
out
test
jo
cmp
pusha
loop
and
fstpt
in
hlt
pop
dec
push
mov
lret
push
ret
out
neg
cmp
aam
jns
clc
mov
cmpsl
sti
data16
fs
stc
dec
fnstenv
or
mov
push
jmp
jno
dec
popa
jl
lock
loop
ret
cmp
outsl
mov
jae
add
aaa
fidivl
out
out
lock
jle
cltd
lret
push
icebp
lods
ret
push
xor
pop
outsl
andl
pop
ss
stos
jmp
push
push
sub
jnp
pop
aad
xchg
mov
add
out
int3
xor
and
jb
sub
das
fst
jg
fsubrl
add
or
stos
sub
aas
repz
adc
mov
and
ret
call
psubq
cmc
cmpb
std
sbb
popa
pop
inc
mov
fdivrs
test
fadds
mov
test
insb
in
jmp
popa
inc
outsl
ror
push
mov
add
xchg
rcll
lahf
movsb
mov
jg
xchg
ds
jecxz
and
jmp
test
push
stos
imul
sbb
in
addl
rolb
mov
insb
pop
or
loop
mov
mov
popa
mov
push
les
out
mov
push
loope
cmc
push
sti
out
hlt
jp
sub
imul
jmp
fisubrl
cmpsl
cmp
sbb
dec
gs
mov
push
mov
xor
push
inc
and
adc
adc
cmp
decb
xor
xor
or
movsb
dec
push
out
xchg
imul
lret
mov
sti
push
xchg
bound
add
ror
movsl
fnstenv
or
loopne
ret
das
popa
or
sbb
jae
xor
dec
fst
icebp
repz
lret
addr16
int3
stc
aad
std
and
sarl
mov
gs
cmp
xchg
adc
dec
xor
stc
aaa
inc
int3
jbe
aas
cli
rsm
out
out
in
xor
sbb
imul
enter
mov
inc
jae
das
jae
movsl
xorb
xor
mov
cmp
cmpsl
and
xor
push
pop
jmp
xor
imul
jmp
ficomps
sub
out
stos
pop
pop
in
jbe
movsb
shrl
jbe
inc
pusha
fidivs
mov
jnp
or
out
inc
movsb
test
cld
sub
imul
bound
sbb
lcall
cmp
aad
xchg
dec
cs
xchg
xor
or
fimuls
fistpll
movsl
loope,pt
loop
dec
js
sbb
aaa
cmp
mov
loop
hlt
or
jno
or
setnp
in
icebp
aaa
ret
sahf
jnp
cmp
je
pop
rol
mov
cmp
jecxz
sbb
je
push
cwtl
out
cmpsb
clc
sbb
sub
push
pop
je
cmpsl
cli
shll
inc
aad
pushf
lds
test
in
push
lock
push
loop
or
in
mov
movsb
pop
jl
ja
adc
sbb
andl
pop
icebp
mov
fs
sbb
cmpsb
fimuls
mov
int
pop
js
xchg
add
push
jge
push
cltd
insb
ja
and
icebp
and
andl
jp
sub
jge
inc
mov
sub
test
stos
repnz
cltd
cmc
mov
adc
dec
insb
xchg
or
mov
movsb
mov
cmpsl
fldcw
inc
xlat
jo
or
sbbl
shrb
sarb
xor
xor
cmp
loopne
xchg
xchg
arpl
push
cmp
loope
cmp
sbb
xor
nop
dec
xchg
mov
fs
inc
push
fs
pop
mov
sbb
push
loop
mov
sbb
inc
lods
shrl
mov
or
nop
call
xchg
or
inc
out
outsl
pushf
mov
mov
add
aaa
fidivs
insb
lret
fwait
aas
scas
mov
enter
mov
push
sbb
add
je
cld
pop
pop
inc
jo
add
add
in
lods
or
inc
enter
mov
mov
and
bound
lret
add
jno
inc
cmp
adc
and
aas
pop
decl
leave
sub
dec
cmp
jl
in
fidivrs
dec
xchg
out
pop
add
js
inc
lret
push
mov
mov
scas
stc
add
cmpsl
int3
inc
mov
cmp
sahf
jl
daa
pop
stos
frstor
mov
add
lods
mov
negb
pmaddwd
fstpl
int3
lock
xor
fcomps
mov
test
or
lret
aaa
jbe
mov
lds
fldenv
jmp
repnz
mov
and
jns
movsb
xchg
loopne
mov
mov
mov
push
loope
popf
add
outsl
lods
bound
es
cmp
add
sub
xlat
fisttpl
out
xchg
mov
fucomip
stos
das
mov
pop
push
insb
mov
mov
mov
mov
or
inc
fdivs
sarb
arpl
movsb
ret
pop
stos
add
pop
addr16
in
and
lret
lods
cmpsw
lcall
sbb
scas
inc
inc
mov
push
movsl
pushf
arpl
pop
sub
lods
mov
cld
jecxz
adc
add
jns
mov
jne
cmp
xchg
push
int
stos
popa
and
mov
pop
leave
or
dec
lods
lea
pop
xchg
ret
ja
jl
sbb
push
fimuls
lahf
lds
fnstsw
addr16
jmp
pop
in
pop
imul
jb,pn
adc
out
add
rolb
dec
and
add
push
in
mov
fmulp
push
outsb
loopne
iret
bound
inc
in
loopne
pusha
loopne
and
jp
push
jbe
mov
xor
js
lds
cmp
or
fisttps
sub
xchg
xlat
xchg
shl
jl
inc
ds
cmp
add
pop
mov
aas
xchg
pop
push
js
idivl
popa
mov
mov
adc
inc
inc
add
inc
or
xchg
sub
jnp
sahf
sbb
push
orl
jne
pusha
mov
mov
mov
sbb
pop
sub
imul
outsb
repnz
lcall
add
popf
cli
xchg
or
mov
add
dec
data16
push
pop
dec
inc
lods
test
push
push
lea
cld
push
jge
out
push
inc
add
push
out
mov
out
nop
cmp
mov
inc
stos
push
outsb
or
bound
ljmp
adc
dec
or
gs
mov
fs
mov
cmp
fnstcw
idivb
scas
mov
insb
mov
aam
shr
mov
mov
mov
inc
xchg
iret
pop
les
ret
lahf
jno
cmc
add
lret
testb
jle
mov
subb
jo
movsl
cmpsb
xor
push
fdivr
pop
lahf
push
adc
jb
jnp
jge
fcoms
aas
mov
ja
mov
imul
ja
outsl
icebp
and
mov
lods
sbb
jno
out
add
xor
ret
adc
loopne
sbb
mov
push
fldenv
imul
aas
pop
push
mul
dec
xchg
lock
adc
pop
push
adc
divl
xor
imul
xchg
pop
insb
insb
inc
or
jno
jecxz
inc
test
lcall
call
ljmp
sbbb
stos
lahf
cli
cmc
cli
sbb
popl
fisubl
test
lret
fsubr
js
xchg
mov
ss
mov
sarl
les
out
push
lods
add
jmp
xor
push
inc
pop
vmovss
jl
mov
orl
inc
pop
sbb
jle
adcl
xchg
inc
in
dec
sbb
je
xchg
jmp
cltd
push
sbb
or
jg
das
jbe
inc
jbe
pop
fidivs
and
mov
scas
imul
inc
rolb
fdivrl
std
or
adc
lock
jnp
xchg
into
icebp
and
jb
mov
or
and
cmp
and
xor
iret
int
pop
stos
xchg
dec
fcompl
mov
repnz
xor
iret
call
mov
dec
mov
push
fcompl
push
mov
push
aas
xlat
mov
mov
sti
out
fwait
cmc
in
lods
outsb
loopne
push
leave
sub
aam
lret
pop
or
jg
and
mov
sbb
pop
bswap
test
in
daa
push
in
jo
cwtl
cmp
inc
std
lock
out
add
fwait
mov
pop
ss
sub
setg
das
int
jmp
pop
aaa
push
mov
pop
push
xor
xchg
outsl
or
pusha
adc
sub
clc
dec
daa
mov
ficoml
rcr
and
sub
xchg
mov
push
jecxz
mov
loop
mov
cmp
inc
addr16
mov
sbb
popf
or
xor
add
ds
fmull
cmpsb
pop
inc
fwait
or
gs
xor
xchg
js
sbb
pop
mov
mov
adc
mov
ljmp
or
mov
sbbb
lcall
ljmp
sbbb
adc
lds
push
in
or
sbb
cmc
and
jge
dec
adc
ja
ds
pop
imul
insl
sahf
jbe
js
mov
or
inc
in
adc
adcb
cmp
push
sbb
shll
loope
mov
fwait
jle
test
in
dec
ds
lock
cli
mov
jmp
out
mov
sub
adc
fimuls
add
call
and
cwtl
add
lcall
jl
out
jne
out
in
clc
sub
push
xchg
ds
lods
mov
ss
pop
adc
ljmp
mov
andb
pop
jae
mov
add
ja
dec
cs
xor
leave
jb
incl
xor
test
xchg
ret
pop
out
scas
push
aaa
test
mov
int3
cmp
xchg
dec
inc
push
mov
mov
mov
push
daa
pop
cmp
sub
or
into
dec
jg
lds
test
and
pusha
inc
test
jno
sbb
cwtl
push
int
cs
mov
out
mov
shll
sti
and
sbb
fisubrl
xchg
xchg
mov
dec
mov
jecxz
fwait
push
xchg
ret
mov
jmp
cld
ret
neg
dec
sbb
xchg
in
add
inc
cltd
dec
pop
dec
lods
and
loopne
jo
push
std
dec
lea
mov
add
jecxz
call
push
jmp
push
mov
je
das
cmc
shl
xor
inc
pop
add
rorl
lret
jnp
fsubl
ss
mov
and
xchg
mov
insl
es
add
push
loop
mov
ja
stos
jns,pn
jns
gs
stos
inc
and
and
pop
int
jle
movsb
ret
sbb
mov
jns
sbb
lret
pushl
loopne
loop
pop
pushf
aas
dec
inc
or
ss
out
cmpsb
inc
test
mov
xor
mov
enter
jp
dec
push
inc
sbb
xor
nop
pop
mov
iret
sahf
rorb
lret
pop
outsb
data16
lds
mov
pop
inc
loop
mov
js
call
stos
lahf
pop
into
xor
pop
xor
addl
out
call
pusha
mov
and
jge
xchg
scas
push
xchg
out
pop
stos
push
dec
pop
xchg
sbb
dec
or
dec
icebp
addr16
lods
or
ret
jge
mov
jp
in
mov
pop
shrb
arpl
jnp
ret
fildl
stos
enter
incb
aad
adc
jb
cli
push
push
cmp
xchg
lcall
jno
sub
lcall
sbb
rcll
rorb
inc
push
aam
dec
push
pop
or
jge
or
adc
xchg
jo
negb
pop
das
jnp
sub
jne
or
inc
lret
les
pop
repz
jle
xor
clc
cmpsl
or
ret
loop
cmp
lock
insb
movsl
cmpsb
jecxz
sub
xchg
in
aaa
push
stc
nop
rolb
dec
arpl
pusha
test
pop
push
out
push
out
outsb
adc
adc
gs
movsl
push
pop
in
popf
mov
clc
out
pop
and
pop
jl
jmp
dec
int
outsl
xchg
push
test
jmp
jae
ret
pop
mov
sub
push
loope
pop
es
xchg
inc
mov
sbb
les
mov
ss
stos
je
mov
jne
or
fidivrl
mov
cwtl
or
jp
jp
lret
std
in
mov
adc
and
icebp
cmp
mov
fisttpl
xchg
aad
xor
pusha
arpl
imul
xor
add
push
in
cmpsb
fiaddl
xor
or
sub
xlat
jp
push
push
loope
pop
dec
test
or
add
jbe
insb
arpl
xchg
or
cmp
shl
inc
rorb
adc
imul
mov
sbbb
mov
mov
popf
xor
mov
ret
fidivrs
push
clc
push
dec
jne
xchg
sbb
or
cmpsl
call
enter
cmpsl
pop
add
xor
or
test
inc
and
and
pop
ret
inc
jae
jmp
or
lock
cmpsb
daa
outsl
mov
das
movsl
repnz
insl
xchg
sbb
leave
xchg
sbb
fisttps
dec
mov
jno
es
iret
sbbl
pop
or
and
sahf
rcrb
cmp
gs
test
jp
inc
mov
fmul
inc
lods
push
inc
mov
lods
fistl
xor
add
cmp
mov
or
push
sbb
mov
jle
jo
and
push
cld
mov
push
addr16
out
inc
push
int
cmp
shrl
add
insl
rcl
out
inc
mov
mov
push
inc
push
fnstenv
xlat
xor
cmp
jl
mov
testb
sub
add
mov
mov
movsl
lret
ret
movsl
cmp
cmp
add
mov
jbe
pop
lods
pop
mov
ds
call
repz
xor
pop
ljmp
mov
mov
lahf
rcl
outsl
inc
ja
cmp
cmpsl
imul
xchg
adc
push
fwait
lcall
rolb
mov
sbb
xchg
in
xor
adc
jno
test
stos
scas
add
xor
or
sub
sbb
sbb
stc
cs
mov
aam
fadds
mov
mov
push
pushl
int
jno
repz
mov
sub
cmp
lock
les
inc
sub
sbb
dec
and
stos
mov
sbb
pop
xor
adc
jns
and
stc
mov
sbb
and
ja
push
lods
lock
mov
xor
lods
aas
mov
add
sbb
aad
sahf
arpl
les
out
mov
xchg
xchg
xchg
mov
inc
push
inc
lock
in
out
jb
pop
gs
pop
cwtl
xchg
sub
stos
pop
loopne
xchg
ds
sarb
in
pop
sahf
dec
aad
cmc
mov
xlat
jbe
pop
repz
xor
and
sub
xchg
mov
ja
popa
mov
out
imul
xor
push
gs
cmp
mov
fldt
fnsave
push
and
les
insb
cmp
repnz
out
js
cli
lcall
mov
jne
adc
sbb
inc
cltd
mov
nop
scas
dec
xchg
rol
add
fnstsw
cmp
ftst
xchg
fs
jp
add
sub
jg
adc
add
add
int
mov
mov
pop
test
mov
mov
add
add
loope
jbe
imul
mov
dec
ss
mov
cld
lock
std
test
jl
mov
dec
jb
ljmp
sub
mov
cs
push
lods
xor
or
mov
aas
mov
cltd
mov
jecxz
push
pop
sbb
or
loope
lds
mov
sete
push
add
frstor
mov
rcll
jmp
adc
pop
inc
into
in
fiaddl
mov
icebp
into
in
push
sub
adc
test
div
ljmp
stc
pop
jo
int3
loop
adc
mov
xlat
push
or
shll
and
inc
dec
pop
adc
lods
pop
test
fiadds
int3
xor
jb
and
in
pop
pop
sub
cmpl
jge
js
ljmp
inc
test
sti
xchg
movsl
jo
jle
sbb
lret
or
dec
pop
sub
sbb
mov
and
adc
sub
in
inc
push
mov
mov
push
jle
jb
pushf
dec
icebp
cmp
and
dec
rcrl
scas
inc
in
pop
jmp
sbb
push
pop
cmp
push
mov
ss
push
push
xchg
mov
jp
mov
pop
push
add
cs
iretw
lret
stos
mov
es
mov
outsl
stos
fdivs
pop
out
fcmovbe
int
stos
lret
dec
imul
or
mov
inc
mov
faddl
shl
into
push
mov
hlt
mov
ss
pop
mov
and
fdivs
dec
movsl
xor
addr16
fmul
leave
mov
or
jmp
push
sub
daa
mul
add
mov
and
fstpt
loopne
call
pop
stos
mov
add
ret
mov
jge
mov
inc
cmp
push
xor
jae
push
bound
xor
mov
lds
sub
ljmp
add
bound
fs
add
cli
add
inc
jae
sbb
mov
lcall
adc
arpl
pop
xchg
mov
dec
cmp
popa
lcall
test
lds
inc
movsb
sbb
std
or
push
jne
jno
adc
rcll
lcall
mov
push
out
cmp
pop
dec
repnz
adc
fnstcw
pop
push
dec
push
incl
and
shrb
lss
sahf
dec
jae
leave
notl
dec
push
decb
popf
cli
ficomps
pushf
push
jmp
iret
mov
pop
fdivrs
inc
add
sbb
addr16
jbe
sub
or
scas
pop
hlt
pop
adc
mov
xchg
xor
mov
popf
push
cmc
out
xchg
dec
push
adc
jae
jg
mov
jge
sbb
gs
jbe
cmpsl
shlb
filds
lods
pusha
out
inc
idivb
sub
mov
adc
scas
push
lods
inc
cmp
dec
les
repz
icebp
adc
popa
in
jl
in
mov
fwait
popf
leave
in
mov
xchg
popa
lcallw
and
test
dec
mov
inc
add
mov
test
cltd
push
sub
scas
or
hlt
pusha
enter
cmp
jmp
jp
jno
mov
push
outsb
or
aad
xchg
arpl
in
xchg
or
inc
and
pop
stos
and
mov
add
mov
push
sbb
add
or
adc
sub
icebp
daa
pop
or
repz
loop
adc
repz
les
in
dec
xchg
sub
ljmp
les
sub
dec
shrl
xor
sub
xor
mov
aas
stc
fildll
addb
out
sbb
ss
or
loope
adc
fimuls
sti
push
mov
mov
mov
lods
mov
scas
or
fsubr
add
and
lcall
test
fld
test
sbb
neg
adc
mov
std
shll
pop
sbb
sub
fbstp
xchg
je
jnp
inc
imul
enter
mulps
jge
sarl
lods
and
daa
and
mov
jmp
mov
push
lods
dec
out
or
ret
cltd
cs
mov
xchg
xchg
mov
out
stos
push
loopne
cmp
sbb
loope
or
jecxz
cmpsl
rcl
cmp
int3
add
inc
and
cmp
mov
lcall
insb
mulb
pop
pop
loopne
xor
cmp
int
das
sbb
push
xchg
sub
popf
stos
dec
popf
sbb
and
xchg
hlt
xlat
inc
pusha
cmpsb
push
jge
repnz
sub
jne
dec
mov
fsubs
mov
dec
pop
ljmp
dec
aam
hlt
or
lods
sbb
arpl
sbb
cltd
cli
xchg
sbb
lcall
mov
shlb
jno
jg
into
movsl
testb
mov
dec
push
and
xchg
es
insl
cld
ret
movsl
mov
ret
popl
shl
aad
dec
sahf
call
push
fld
shll
add
add
dec
fidivs
fldt
ret
push
mov
mov
movsl
test
aad
gs
push
cmp
into
inc
lock
push
xor
dec
decb
push
leave
aam
iret
ljmp
cwtl
or
push
iret
pop
mov
or
mov
add
inc
les
fildl
pop
or
pop
ds
mov
int
je
add
fidivs
and
sub
sarb
mov
xor
test
fsts
inc
sbb
int3
or
repz
xor
lods
mov
icebp
notl
orb
adc
arpl
sbb
add
fs
jno
xchg
cmp
sbb
divb
adc
repnz
mov
insl
pop
push
scas
xchg
or
test
dec
fwait
push
test
lcall
dec
sub
repnz
jbe
sar
pop
insl
stos
mov
test
adc
cmp
jae
dec
mov
sahf
outsb
dec
jno
jecxz
sahf
sti
adc
add
xchg
in
loop
aaa
or
cmpb
push
into
insb
nop
ret
std
aam
movsb
or
or
ror
mov
xlat
pop
push
mov
jg
push
adc
xchg
data16
pushf
and
in
enter
push
add
test
js
mov
sub
sahf
push
or
gs
or
inc
and
mov
cwtl
xlat
push
push
scas
xor
mov
nop
pop
in
ljmp
repz
adc
mov
scas
lcall
mulb
out
inc
dec
cmp
dec
sarl
xor
rcr
fisubs
loop
gs
or
movsl
shl
cs
mov
jb
test
nop
xchg
cmp
iret
push
lcall
popa
pop
imul
sub
jne
stos
push
pop
shrl
or
scas
push
jmp
imul
mov
and
pusha
repnz
mov
enter
sub
dec
insb
movsb
and
inc
dec
ret
and
add
mov
add
and
popf
cwtl
xchg
add
sarl
decl
xor
mov
lock
sub
add
mov
xchg
cmpsl
js
in
stos
fidivl
pusha
and
add
ret
and
jnp
mov
adc
xchg
pop
negl
fsub
inc
mov
repnz
xor
lea
fiaddl
imul
nop
divl
or
add
dec
cmpl
mov
or
mov
and
cwtl
int
sbb
sbb
orb
bound
test
lods
mov
cld
push
outsl
adc
dec
inc
ret
jmp
xchg
cmp
inc
push
xchg
jle
imul
or
out
xchg
mov
out
add
mov
xor
push
cs
mov
outsb
shlb
sub
jle
iret
lods
mov
outsb
out
je
xor
sbb
rcl
pop
sbb
dec
mov
inc
sub
cmpsb
js
in
ret
stos
fisttpl
pop
pop
lahf
mov
sti
out
dec
popf
idivb
pop
cwtl
loope
cmp
fcoml
xor
into
out
mov
push
or
pslld
hlt
mov
fwait
into
push
mov
into
das
rcrl
jge
test
inc
push
xchg
iret
lock
xor
jmp
xchg
stos
adc
adcb
jns
fsubrp
xchg
test
dec
test
jp
jae
pop
outsb
xor
and
mov
push
js
iret
push
xchg
inc
mov
jge
out
mov
insb
and
sub
jge
ror
adc
dec
aad
fbld
push
test
xchg
hlt
adc
xor
or
mov
cmpsb
jmp
fs
test
adc
das
push
xchg
pop
imul
xchg
pop
pop
orb
les
xchg
mov
add
rcrb
subl
outsl
test
rorl
sub
aaa
lock
mov
adc
test
pop
sub
mov
das
pop
inc
jg
cld
mov
leave
pop
bound
movsl
pop
loope
sub
pop
mov
sbb
xchg
pop
mov
mov
loopne
mov
movsl
mov
inc
aam
adc
hlt
jae
pusha
addr16
jbe
push
ss
mov
notl
cmpb
leave
xor
int
or
in
int3
pop
fsts
add
ds
cli
mov
pop
cmc
mov
and
test
push
push
rolb
loope
add
mov
pop
clc
push
mov
pop
push
and
add
cmpsb
mov
pushf
xchg
insb
cmp
enter
fistpl
bound
mov
cmp
add
sub
jle
fisubrl
test
push
das
cmc
fwait
jecxz
int
je
clc
mov
and
pop
mov
idiv
sbb
cmpsl
cli
dec
mov
xchg
outsl
icebp
pushf
rol
aaa
push
dec
mov
mov
pop
repz
pcmpgtw
sbb
popa
fsubl
cltd
test
into
adc
jmp
stos
mov
mov
je
imul
fwait
mov
lods
cli
scas
mov
sub
fildll
cli
cmpsl
enter
pop
aam
mov
fisttpll
in
push
mov
fscale
ror
mov
push
xchg
xor
sbb
mov
pop
out
daa
addb
cwtl
xor
enter
inc
push
sbb
lret
add
dec
inc
mov
int
lret
leave
jle
imul
or
sub
out
inc
ja
jg
insb
rorl
pop
pop
dec
sbb
scas
lret
xor
rcll
loop
mov
xchg
jg
mov
ljmp
test
lock
push
mov
mov
or
jne
xchg
outsb
fldl
ja
ror
sti
and
int
adc
push
xchg
and
imul
ss
cmpsl
or
stc
adc
push
dec
fs
lahf
cmpsb
mov
lds
jecxz
rcrb
test
or
out
into
jno
and
xor
adc
incb
cmp
lret
jle
mov
je
cmc
cmp
mov
sub
and
clc
sub
pop
imul
mov
insl
mov
out
int3
push
cmpsb
cmpsb
ficoml
push
xchg
sahf
call
adc
sbbl
or
mov
aas
div
test
mull
jo
fsubrl
lea
push
and
or
fcomps
jl
cmpsb
adc
sti
das
js
aad
retw
mov
cltd
imul
in
add
pop
pop
arpl
jb
movb
jbe
inc
sub
cmpsl
fwait
cltd
lods
or
mov
cmp
or
cmp
iret
inc
mov
daa
push
jmp
rolb
mov
rcr
movsb
sub
jnp
int
and
fdivl
add
add
xchg
mov
jp
ret
dec
mov
mov
sub
dec
bswap
xchg
dec
sbb
mov
pushf
pop
in
cmp
popf
stos
pop
mov
lahf
cmp
movsb
mov
and
add
cld
aad
jne
ljmp
mov
repnz
xor
inc
inc
add
dec
jno,pn
lret
nop
daa
das
pop
cmp
mov
cld
mov
enter
xchg
jmp
mov
cld
lock
pop
xor
aam
push
adc
ret
lock
mov
test
stos
in
popa
sbbb
dec
push
aam
sub
push
xlat
or
pusha
cmpsb
stos
call
xchg
das
enter
lods
ss
out
dec
mov
pop
dec
jg
cld
nop
mov
les
pop
push
xor
pusha
fldl
jl
in
and
jno
addr16
mov
pop
flds
mov
mov
add
lahf
js
scas
addr16
fwait
add
push
and
push
sub
repz
cmp
divl
push
or
in
mov
mov
xor
leave
ficompl
dec
loopne
scas
dec
jmp
jl
push
unpckhps
mov
pop
mov
and
cltd
dec
mov
arpl
ds
movsl
inc
movsb
das
add
js
pusha
pusha
xchg
and
imul
sub
icebp
into
jb
pop
addl
add
aad
or
push
push
cmp
ret
inc
pop
aam
dec
pop
fistps
rolb
popf
outsb
push
inc
out
in
ds
cld
mov
xor
mov
lea
les
sub
jle
into
in
cmp
mov
movsl
mov
aas
xchg
insl
mov
sti
out
jbe
movsb
mov
cmp
mov
jno
mov
movsl
leave
hlt
cld
xchg
aas
popl
jp
push
loop
dec
add
jo
movb
sahf
add
jle
mov
ror
or
shll
add
xchg
push
or
dec
testl
out
add
in
out
andl
mov
stc
sub
xchg
das
dec
cltd
fs
cmc
jnp
lock
adc
stos
popa
xor
inc
sarb
sbb
lret
in
rorb
movsl
and
std
jle
mov
mul
cmpsl
aaa
xor
ljmp
sub
adc
rcrl
scas
mov
pop
mov
negl
sbb
inc
xchg
mov
movsl
adc
mov
loope
cmp
mov
bound
add
add
call
rclb
nop
sbb
xor
sub
mov
movsl
push
std
jns
ja
lcall
pop
cmpsb
jg
xor
or
push
push
sbb
xchg
out
int
lret
pop
jno
adc
lods
and
fsub
jae
les
mov
mov
cmpsb
push
lds
add
push
inc
stc
dec
data16
and
ffree
imul
hlt
xchg
pop
leave
sbb
cmc
jns
lds
jge
andl
xor
and
je
add
xchg
fcompl
subl
test
mov
xor
repz
xchg
mov
inc
jg
sahf
insl
outsl
ret
aad
insb
cmp
sbb
lret
mov
shlb
dec
mov
cltd
ds
sbb
fcompl
je
and
pushf
psubq
clc
outsl
gs
fildll
mov
xchg
or
lock
pop
ret
ja
jae
mov
xchg
adc
cli
sub
add
inc
pop
add
adcl
nop
out
push
jne
ljmp
cmp
jmp
repnz
pushf
lds
or
jne
mov
and
mov
out
mov
or
mov
imul
adc
sbb
es
adc
or
outsb
add
adc
mov
add
mov
sub
das
mov
aaa
pushf
jo
xchg
xchg
test
and
add
clc
pop
push
fs
add
std
add
push
cli
imul
outsb
cmp
stc
out
ret
xor
add
outsl
pop
bswap
hlt
nop
ljmp
mov
icebp
sub
inc
xchg
inc
dec
in
jbe
sub
in
in
ljmp
mov
shrl
cltd
les
or
jbe
pop
repz
ss
stos
pop
sbb
ljmp
add
add
cmp
inc
cmp
test
loopne
andl
outsl
inc
cld
dec
pop
repnz
cmc
add
rcrb
pop
sbb
mov
cmp
lock
or
pop
imul
iret
shrl
jbe
mov
mov
stos
pop
imul
gs
bswap
pop
cli
negl
pusha
aad
inc
pop
mov
inc
adc
or
inc
fdivp
sub
xlat
das
aas
adc
jle
or
icebp
xlat
xor
lret
sti
add
jl
push
inc
jb
xchg
lds
repnz
fwait
jmp
dec
pop
aaa
jle
cmp
sbb
add
movsl
rcr
stos
xchg
mov
lret
in
mov
mov
xchg
fdivrs
adc
push
mov
pop
adc
stos
jmp
jmp
in
aad
stc
cmp
rcl
test
push
inc
loope
lods
fisttpl
and
sbb
sti
cmpb
mov
pop
test
inc
es
push
lds
dec
ret
test
lea
filds
dec
in
das
cmp
stos
pop
cwtl
rcrb
test
daa
add
mov
push
andl
shrb
ret
inc
xor
inc
lods
pop
bts
sbb
repnz
pop
dec
sbb
or
cmp
and
fisttpll
in
out
jo
ss
call
lcall
ret
les
fwait
inc
cmpsb
test
test
imul
push
xchg
xchg
std
sub
xlat
rolb
xchg
movsl
fldenv
gs
arpl
ss
sbb
mov
xchg
ret
ds
inc
icebp
icebp
daa
pop
je
aas
movsl
popf
sbb
push
loope
or
xchg
inc
jnp
gs
mov
push
leave
cmpsb
mov
and
mov
cmpsb
push
mov
jne
dec
sahf
sub
popf
out
aas
mov
leave
sbb
cmp
add
ds
or
push
out
in
dec
inc
shrb
shrl
sar
cmc
sbb
add
loopne
mov
divb
dec
xchg
divb
sub
inc
inc
je
mov
pop
add
testb
scas
lods
pop
push
lcall
bound
push
push
mov
ret
out
fcoms
mov
pop
outsl
cmp
push
pop
aam
push
das
clc
mov
jns
cmc
inc
aad
fnstsw
sub
lahf
int
inc
int3
add
mov
jmp
movsl
push
jg
mov
pop
enter
xchg
sub
jnp
imul
sub
notl
pop
sub
insl
rol
cmp
pop
push
out
decb
stc
addl
sub
sub
out
mov
add
xor
cmc
cli
cwtl
xor
jg
adc
inc
mov
stos
or
rcrl
int
xchg
lods
lds
jge
push
sahf
inc
push
cmp
faddp
cmpsl
std
cmc
xchg
aad
xchg
lret
push
sahf
scas
xor
xor
cmp
cli
inc
push
inc
cltd
je
fst
xor
jbe
jg
xchg
xor
stos
mov
in
mov
mov
in
push
daa
out
xor
mov
js
xor
into
mov
shl
cmp
jge
lock
mov
out
out
pop
xchg
and
sbb
and
add
iret
xchg
test
and
xchg
jae
push
outsb
jne
push
inc
push
fstpl
fwait
and
mov
mov
mov
pop
adc
mov
punpckldq
and
iret
xor
mov
rcr
call
iret
cs
mov
xor
ficoms
out
or
mov
cli
add
cmpsb
addr16
dec
lahf
pusha
repnz
test
mov
cmpsb
add
push
pop
jl
xchg
lods
cmpsb
scas
jg
fidivl
mov
in
jg
fwait
imul
into
jmp
mov
inc
lcall
cmp
out
outsl
ja
bound
and
xor
ds
jge
cmpsl
fdivrs
adcl
push
inc
inc
xchg
int3
push
test
jns
rorl
popf
pop
orl
sub
ds
pushf
fcomp
jg
push
scas
int
push
xor
leave
insl
mov
pushf
sbb
add
push
add
rolb
sbb
loop
inc
call
sub
int
stc
mov
push
fwait
adc
cmp
das
mov
sahf
scas
jle
mov
mov
xlat
mov
outsb
xlat
test
sti
cmp
mov
jno
sbb
xor
adc
ljmp
jo
out
loope,pn
fsubl
jno
cs
in
xor
inc
rorb
cld
outsl
sbbb
pop
lea
xchg
pop
xor
cmp
scas
or
adc
jbe
adc
aaa
outsb
jns
faddl
ret
mov
push
clc
sbb
aad
jg
and
aas
ja
int
aas
je
addr16
rcrb
mov
push
add
jge
lock
cwtl
js
xchg
arpl
jo
lock
outsb
sti
rcll
dec
push
jl
push
and
lret
imul
push
or
pop
or
sub
fs
sbb
iret
push
cmp
movsb
popf
cmp
dec
ret
adc
push
pushf
mov
sbbl
mov
mov
aad
popf
scas
mov
xchg
sti
ret
bound
pop
and
mov
in
cmp
lock
inc
ljmp
sub
stos
mov
cld
pop
aas
pop
icebp
lcall
sbbl
push
mov
pop
mov
addr16
xlat
loope
rolb
and
fwait
das
bound
scas
outsb
mov
test
fisttpl
cmp
loopne
inc
mov
ja
inc
sbb
shrb
mov
imul
adc
xchg
mov
pusha
lock
loope
out
ret
out
cmp
push
mov
jmp
sbb
dec
orb
pop
sub
jnp
mov
sub
mov
mov
or
test
and
lds
cmp
adc
pop
sub
fcmovnu
inc
mov
and
jle
cwtl
in
mov
fcoml
add
daa
sub
xor
mov
mov
test
or
lcall
out
mov
fldt
adcb
movsb
scas
mov
sbb
xor
loopne
and
or
cmp
fstl
adcb
mov
cwtl
mov
aaa
xchg
inc
mov
inc
jp
cmpsl
test
roll
jne
mov
lret
movsl
cmp
or
sub
and
xor
roll
and
push
mov
loop
out
in
out
call
pop
ja
and
jne
cmpsb
bound
cltd
sub
and
pop
sahf
shlb
dec
bound
aaa
mov
aam
inc
adc
out
push
cmpsb
mov
int
shl
jmp
bound
sub
xchg
mov
gs
in
inc
sbb
mov
sub
cltd
jmp
imul
cs
loope
ficompl
xchg
sbb
aas
xchg
insb
les
dec
add
jbe
in
lea
icebp
mov
inc
push
xor
xchg
test
push
subb
and
ss
or
xchg
lea
fnstcw
mov
dec
jge
xor
inc
sub
int3
xchg
add
jp
mov
sub
sbb
sub
dec
dec
sub
cmpsl
in
cmp
push
adc
test
cmp
and
xor
cwtl
push
shlb
stos
ja
jecxz
xor
sahf
dec
aas
mov
xchg
jle
insl
cli
sub
fdiv
outsl
cmpsl
in
or
jae
nop
cmp
adc
push
leave
adc
jmp
outsb
pop
addr16
cmp
outsb
pop
adc
jmp
inc
pop
sub
xor
jae
push
fisubrs
mov
lret
gs
xor
int
inc
aas
jecxz
cltd
popa
fadds
sub
sub
pop
test
add
or
ljmp
sub
and
icebp
outsb
sbb
int
pop
mov
js
cmp
imul
ds
adc
mov
mov
fs
mov
clc
xor
xchg
dec
data16
xor
pop
push
jecxz
rol
invd
sbb
loope
sbb
sahf
cwtl
sub
jge
in
pop
mov
cmpsb
jae
roll
lods
jno
jbe
popl
xchg
cld
push
fwait
in
cwtl
pop
repnz
sbb
adc
mov
pop
out
and
popf
shlb
dec
pop
or
je
out
cmpsl
ret
sbb
sub
ds
pop
push
mov
lcall
mov
int
push
sub
cmp
sarb
out
pop
mov
pop
cmpsb
jle
stc
call
xor
sbb
pop
lahf
push
bound
lcall
xchg
hlt
jns
dec
frstor
lods
dec
add
lret
das
inc
add
add
xchg
lock
ss
pop
popf
addr16
js
popf
je
mov
xor
sub
jns
pop
jl
push
adc
sahf
movsl
in
push
daa
lea
fs
xor
push
ljmp
add
mov
jno
mov
xor
loop
adc
sar
sbb
xlat
xchg
xchg
loop
mov
jne
sbb
or
js
mov
push
jne
push
sahf
cmpb
add
fisttpll
mov
shrb
negl
and
int
sub
pop
sti
into
fstpl
and
sbbb
xchg
fmuls
pop
or
mov
jns
ljmp
aas
cmp
cmc
xlat
aaa
dec
push
mov
pop
or
call
into
or
sahf
scas
sahf
hlt
and
rolb
mov
in
fdivr
mov
addr16
inc
stos
nop
jge
out
lea
gs
xchg
fld
dec
adc
cwtl
lds
jle
in
fsubrp
inc
adc
or
adc
mov
iret
pusha
rcl
cmp
hlt
in
mov
push
or
sbb
leave
out
fs
adc
or
aaa
icebp
fmulp
pop
adc
pop
add
xchg
mov
push
cltd
cmpsl
dec
mov
mov
mov
vcvtss2si
sbb
aas
iret
inc
shl
scas
lods
popa
gs
out
lds
fsubs
adc
inc
loopne
lods
jbe
inc
fcomip
int
jecxz
push
cmp
andb
dec
pop
cmc
dec
sub
arpl
adc
mov
pop
aam
dec
sub
and
mov
mov
repz
or
inc
loope
mov
push
inc
stos
imul
test
pop
pop
lock
stos
loopne
stos
cs
mov
mov
xchg
fadds
pop
movsl
sbb
inc
mov
fistpl
fisubrs
lgs
push
xchg
hlt
jge
test
lcall
pop
dec
popf
jnp
jae
xchg
lret
cli
add
xchg
repnz
cmp
mov
sbb
rep
insl
ljmp
test
mov
iret
out
push
cwtl
jecxz
mov
lock
scas
pop
data16
push
jnp
ja
fidivs
adc
popf
add
sub
fs
es
xor
add
push
movsb
and
mov
jge
sbb
xchg
jg
dec
push
cmpsl
cltd
lds
and
mov
in
mov
divb
mov
push
sti
xor
mov
arpl
outsl
subl
in
cltd
pop
xchg
or
mul
rorb
ss
fsubrs
out
je
mov
jo
inc
xchg
mov
push
icebp
fimull
scas
push
xor
pop
xor
xchg
rclb
clc
mov
orb
lods
mov
or
andl
fidivl
leave
xor
xchg
xchg
fwait
cmpsl
adc
add
js
jge
mov
jle
arpl
mov
pop
jne
imul
cli
push
adc
pop
inc
mov
js
xchg
cmc
adc
mov
stc
outsl
dec
push
jg
jbe
fcoms
adc
pop
out
mov
sti
and
add
out
test
sub
mov
lea
pushl
mov
inc
and
mov
data16
lods
and
mov
cmp
xchg
sbb
cmp
repnz
cs
les
jno
rolb
loope
pop
cltd
test
orl
in
xlat
sub
mov
in
es
imul
icebp
xchg
test
cwtl
js
or
scas
in
or
scas
inc
enter
pusha
leave
mov
test
push
fwait
pop
fadds
xchg
dec
sbb
pop
cmc
fcoms
mov
and
inc
in
mov
out
dec
cmovbe
lcall
pop
mov
mov
adc
mov
inc
insb
addl
pop
daa
pop
xor
int3
movsb
jg
mov
cmpsl
icebp
sub
mov
or
mov
fwait
xchg
movsb
push
das
mov
xor
xlat
inc
xchg
sbb
outsl
stos
push
out
stos
sbb
dec
mov
ljmp
xchg
dec
lods
insb
scas
mov
lods
subl
cltd
sub
je
push
xchg
in
ja
pop
inc
test
adc
adc
mov
cmp
rorl
or
loop
les
ja
pop
jmp
cld
lahf
leave
retw
int3
adcl
cmp
cmp
enter
or
repz
mov
insb
movsb
push
sahf
loop
sub
pop
fdiv
pop
cld
lods
insb
pop
xchg
stc
mov
or
and
pop
leave
ficoms
movsb
cmp
dec
push
fcmovnbe
xchg
lds
lret
sbb
and
or
jne
aam
stos
push
jecxz
jnp
inc
out
push
mov
arpl
cmp
mov
int3
cmpsb
mov
daa
sbb
mov
or
fwait
jecxz
lcall
xor
mov
test
mov
and
lahf
notb
or
imul
es
mov
ret
mov
sarl
in
pop
push
mov
das
ror
jns
jg
ds
and
mov
cld
mov
add
int3
dec
add
mov
xor
dec
mov
push
and
pop
add
pop
push
xor
cmp
add
jp
outsl
add
iret
and
xchg
sti
out
lret
insl
fnstsw
add
vaddpd
cmp
cmp
jbe
sbb
dec
js
cmp
push
jnp
call
lods
divb
add
lahf
outsb
call
add
push
or
lret
ficompl
or
or
mov
lea
or
hlt
sub
sub
ret
jl
js
inc
or
decl
adc
push
std
mov
mov
sti
push
ret
push
jnp
lahf
scas
jle
rol
xor
lret
leave
cmp
andb
xor
pop
xchg
dec
mov
inc
mov
rorl
mov
mov
sub
xor
mov
inc
data16
test
inc
in
out
test
jb
jnp
loope
cmpsl
xchg
sbb
add
mov
divl
ret
mov
scas
inc
mov
sbb
mov
das
xchg
pop
and
cli
mov
add
add
mov
sub
dec
scas
xchg
aas
jge
aad
movsl
jecxz
inc
dec
push
lods
inc
xchg
dec
out
xchg
push
movsl
fwait
icebp
add
dec
iret
in
aas
stc
test
cld
adcb
monitor
cmp
sahf
in
shll
mov
clc
fs
hlt
adc
pusha
je
leave
hlt
jmp
outsl
ret
add
mov
sahf
outsl
idivb
or
cmp
pop
xchg
inc
xchg
test
les
lret
inc
xchg
test
cmp
shl
aam
dec
outsb
cmpl
gs
iret
lods
xor
mov
fstpl
inc
cwtl
mov
adc
adc
stc
aam
push
lock
jle
rcll
sbb
or
cmp
test
xor
lods
lret
xchg
push
mov
lds
push
gs
push
pop
fdivrp
sub
lods
inc
cmp
enter
pop
dec
pop
aas
inc
cltd
cmp
sub
dec
loope
cmp
fsubrl
mov
iret
mov
imul
cwtl
fs
popa
fwait
cmpsl
inc
rol
rclb
bound
adc
insb
in
add
mov
lahf
shl
in
nop
push
je
divl
jle
enter
dec
orl
shr
add
pop
inc
jg
mov
les
in
call
dec
add
pop
hlt
push
and
fmuls
jne
mov
xchg
push
enter
pop
xor
sbb
pop
add
subl
imul
or
fiaddl
cmp
push
pop
dec
fistpll
ds
cmpsl
inc
iret
lods
cs
and
sub
push
adc
loopne
iret
lods
out
push
cli
stos
out
inc
xchg
iret
pop
loope
cmp
movsb
jge
les
pop
jg
pop
add
mov
push
add
les
jl
dec
pop
je
and
lea
xchg
xchg
jbe
stos
push
mov
adc
push
pop
scas
leave
shl
pop
jb
pop
mov
out
cltd
arpl
test
sbb
fiaddl
inc
aam
push
cmp
add
ja
mull
mov
cs
and
or
push
mov
sahf
jns
inc
rolb
lock
movsl
jp
inc
jmp
out
add
adc
repnz
test
enter
mov
repz
sbb
jecxz
sbb
cmp
jno
dec
ss
mov
mov
push
outsl
and
jb
add
xchg
and
lea
jnp
add
xor
cld
int
push
sbb
lret
rclb
inc
sti
leave
bound
sahf
adc
loope
sbb
jo
cmc
push
add
stos
out
aam
dec
pop
push
cli
add
add
or
arpl
ficoml
sbb
addr16
fsubrs
sbb
sahf
mov
jge
xor
xchg
mul
cmc
aaa
popa
or
in
and
pop
cmpsl
jb
xchg
add
fldcw
jge
in
lahf
dec
hlt
and
popf
and
ficoms
rcrb
xor
jo
or
stos
repz
lds
mov
out
dec
pushf
sbb
aas
xchg
mov
and
out
test
aam
jge
inc
push
xor
cld
insl
sbb
popf
push
iret
fldcw
mov
out
cmp
data16
dec
push
sub
xchg
xor
jb
mov
mov
push
insl
icebp
jno
orl
shrl
aaa
cmp
addr16
test
outsb
jle
push
dec
ljmp
aas
push
add
imul
xlat
arpl
inc
outsb
insl
dec
xor
xor
pop
xlat
add
or
sub
sbb
filds
ljmp
mov
mov
sub
dec
mov
xchg
aad
stc
fadds
aad
cmp
sbb
xor
push
ljmp
ja
subb
out
movsbl
pop
adc
jns
mov
adc
sub
ret
mov
dec
lret
jno
lock
mov
add
fwait
sub
mov
add
movsb
imul
js
aam
push
or
loop
pop
and
test
cmp
sub
jns
je
gs
mov
arpl
sbb
sbb
cmp
dec
sti
cmp
sub
cmp
test
call
enter
mov
das
mov
imul
mov
xor
xchg
mov
cmp
fwait
xor
je
repz
movsb
pop
cmp
jecxz
aam
popf
outsl
push
inc
lret
xchg
cmp
scas
sahf
mov
xchg
in
lcall
xchg
mov
pushf
xchg
push
into
pop
std
dec
mov
lds
outsb
add
jno
jbe
pop
push
cmp
movsb
cmpsl
mov
mov
jno
mov
inc
sbb
sarl
arpl
into
adc
mov
jp
jg
push
aad
adc
mov
sarb
test
cwtl
and
iret
xchg
xchg
mov
insb
stos
mov
xor
xor
sbb
les
mov
movsl
or
movaps
xchg
scas
mov
fwait
orb
cmp
dec
in
orb
inc
dec
lret
inc
xor
push
pushf
shlb
mov
ret
test
mov
push
outsb
les
xor
loope
xlat
and
dec
xchg
outsb
lds
int
mov
fldz
mov
jecxz
adc
xchg
mov
pop
repnz
out
sbb
in
int3
add
cmp
shrl
adc
cmp
sub
scas
push
mov
pop
popa
sbb
nop
in
mov
xor
jle
rclb
sub
add
xchg
mov
rcrb
fldl
xchg
rcrb
into
jnp
movsl
testl
xchg
loope
test
pop
pop
mov
or
mov
add
mov
lcall
fucomi
fdivs
and
es
xchg
jmp
out
lcall
push
adc
add
xchg
cmpsl
jno
dec
mov
outsb
mov
dec
push
stc
fimuls
insl
sbb
dec
rclb
insb
shl
sahf
xchg
enter
cmp
push
std
jge
sub
adc
or
or
mov
lret
cmp
loop
cmp
and
push
pop
loopne
ret
jp
push
sub
mov
add
pminub
cmp
lock
sub
mov
or
mov
out
int
cld
cltd
mov
sti
addr16
fs
inc
push
out
in
out
push
aas
mov
in
imul
pop
push
xchg
cmp
imul
orb
mov
out
mov
bound
sbb
cmp
inc
xor
cmpsb
movsl
jno
mov
sub
mov
xorl
cmp
scas
inc
lods
pop
pop
add
fldl
add
sub
enter
inc
sti
and
xor
inc
aaa
addl
pop
clc
push
and
scas
es
sbb
push
bound
out
add
add
int
xchg
jne
jp
pusha
fnstenv
pop
mov
adc
dec
aad
int3
jb
pushf
call
or
pop
pusha
adc
xor
sbbl
dec
movsl
jae
and
mov
cld
xchg
lea
or
sub
fistps
jl
daa
cld
and
loope
ret
xor
outsl
or
mov
cmpb
mov
xlat
das
jns
add
and
or
inc
mov
sbb
add
popa
adcb
pop
into
xchg
inc
pop
cmp
pop
in
std
push
mov
mov
mov
lods
test
xlat
sahf
sbb
stc
repnz
mov
fadds
scas
leave
cltd
and
jp
xor
xor
add
cld
ror
jns
mov
int
imul
jecxz
jnp
sub
fwait
mov
add
jae
sub
out
inc
xchg
loop
imul
jge
sub
mov
xchg
pop
stc
fwait
mov
mov
or
jl
insb
dec
es
or
aas
pop
out
push
ds
xor
dec
in
sbb
push
or
orb
cmp
stos
fnclex
ror
xchg
fcmovnbe
pop
sahf
out
xchg
sbb
xor
mov
sub
inc
into
fsubrl
sbb
rclb
call
or
sub
ja
pop
mov
mov
push
mov
sub
mov
xchg
scas
cmp
sbb
push
adc
dec
adc
and
mov
lret
test
cmp
mov
sub
jbe
sahf
fistpl
fdivs
outsb
movsl
out
mov
lds
fisttpll
lret
or
fisubrs
push
into
jle
mov
and
flds
adc
and
scas
jne
lds
repz
das
scas
lods
dec
repz
xor
call
or
lcall
mov
mov
ret
dec
add
lret
fistps
int
and
mull
js
sub
sbb
aad
dec
arpl
lahf
pop
insb
mov
cld
arpl
jae
sbb
std
mov
or
push
and
jmp
dec
std
fwait
sub
mov
pop
imulb
inc
cmp
arpl
push
lahf
cmp
cmp
cmp
nop
pop
inc
mov
cltd
test
xor
cmp
cmpl
dec
sbb
lcall
mov
lods
add
aas
jl
mov
dec
push
sbb
xchg
fidivl
mov
inc
sub
mov
pop
mov
icebp
push
mov
mov
stc
jle
jp
cmp
mov
xor
arpl
xor
pop
dec
push
lcall
inc
popa
cltd
fwait
arpl
jb
sbb
aaa
inc
stos
xchg
and
lret
daa
in
sbb
mov
ljmp
jl
int
mov
xor
and
js
xor
dec
sub
out
pop
add
in
mov
mov
jecxz
mov
pushf
shlb
inc
aaa
cmp
adc
jae
add
pop
add
mov
cmp
sub
sbb
and
clc
mov
fdivs
cmpsb
mov
jno
cld
jmp
xchg
pushf
inc
out
add
xor
and
and
dec
add
fldl
jle
jg
lods
imul
jno
jge
and
sub
or
xchg
adc
std
test
lahf
mov
test
insb
sbb
orl
movsb
out
lret
push
lcall
pusha
mov
cwtl
or
outsl
xchg
filds
sbb
jnp
mov
cltd
jo
mov
mov
cmpsb
and
mov
clc
dec
cld
inc
adc
mov
ds
stos
sub
mov
int3
sub
lahf
push
push
or
mov
mov
adc
push
inc
cmpsb
xor
es
cmp
out
cmc
lahf
cwtl
es
mov
xchg
stos
xchg
push
stos
adc
sti
sub
push
stos
das
or
xchg
pop
aam
call
inc
pop
jnp
mov
jp
inc
add
mov
outsb
push
push
sub
je
xor
mov
dec
jmp
addr16
xchg
cmp
clc
jle
test
pop
movl
inc
inc
sbbb
lods
push
filds
xchg
pop
ljmp
sbb
test
or
jle
lahf
sbb
mov
sbbb
fildll
xchg
xchg
mov
adc
repnz
loop
fildll
xor
loope
lret
or
or
jne
mov
in
aad
aaa
addr16
popf
mov
lods
push
pop
cmp
and
filds
lret
mov
mov
mov
mov
dec
push
and
sub
aam
rcrb
repnz
fdiv
or
insl
pushf
outsl
outsb
xor
jmp
adcb
test
dec
je
mov
mov
add
fidivrl
in
mov
outsb
mov
push
mov
mov
push
addb
rcrb
lods
decb
scas
mov
cmp
mov
mov
scas
add
and
aam
pushf
push
mov
icebp
mov
inc
ss
das
leave
adc
shlb
out
shrl
ljmp
clc
xchg
bound
jmp
pop
lret
movsl
jb
dec
ret
mov
push
mov
stos
filds
in
std
add
push
mov
push
add
dec
xor
mov
mov
jl
iret
sahf
cltd
xchg
push
aaa
pop
shrl
clc
filds
fistpl
sbb
lock
and
adc
in
mov
jmp
jae
int3
push
testl
test
repnz
push
repz
push
cmp
into
fnstcw
int3
pop
jg
dec
push
daa
out
out
loope
scas
bound
call
cli
test
push
dec
pop
movsb
enter
fsub
cmp
pop
cwtl
fmulp
imul
and
xchg
jbe
adc
test
incl
add
lds
mov
push
mov
cmp
outsl
imul
or
jge
xor
cwtl
int3
jno
lds
test
jecxz
mov
jp
xchg
jg
fidivrl
mov
aad
das
xchg
nop
loope
add
lea
sahf
push
and
cmp
xor
mov
push
fwait
call
jne
sbb
inc
and
mov
or
insb
into
mov
daa
iret
mov
pop
movsl
xlat
aam
pop
gs
fsub
jo
cld
mov
mov
lock
repnz
add
add
test
lcall
pusha
jno
popa
jb
xor
adc
fldenv
sbb
ljmp
push
inc
imul
jns
cmc
je
adc
lea
int3
xchg
sbb
rolb
push
lret
fsubr
scas
mov
out
pushl
add
mov
popf
cltd
mov
movl
cs
sbb
pusha
addr16
xchg
mov
pop
insl
jno
ficoml
iret
call
push
lea
adc
cmp
adc
add
add
jecxz
lds
ds
or
aaa
push
cmp
add
pop
scas
or
cmpsl
mov
inc
loopne
mov
loope
or
pop
adc
mov
in
fucomip
loop
aaa
xor
aas
cmp
idivb
and
xchg
test
or
push
pop
into
movsb
test
test
outsl
add
shr
adc
sahf
aas
inc
or
pushf
lahf
dec
cmp
call
hlt
pop
pusha
cmpsl
data16
cmp
out
jo
adc
lods
or
xchg
push
hlt
out
nop
cmp
jns
sub
mov
inc
out
scas
cmpl
dec
call
or
cmp
inc
jns
dec
ljmp
out
dec
adc
movsb
push
aas
ret
dec
and
js
inc
movb
xchg
adc
sbb
std
cmp
shr
or
add
push
jo
or
fcoms
mov
mov
rcrb
cli
pop
arpl
xor
scas
inc
push
cmpsl
mov
out
imul
in
jl
hlt
imul
cld
xchg
fiadds
popa
aad
mov
push
cwtl
lahf
cmp
imul
leave
sbb
movsb
fnstcw
pusha
dec
repz
mov
jmp
repnz
aas
js
aad
lcall
xor
scas
dec
stc
or
int
lret
insl
in
int
fnstsw
and
in
and
pushfw
sbb
mov
inc
ja
cmp
and
xchg
sub
sahf
xchg
fisttpll
or
das
inc
in
jg
shl
push
lods
gs
pop
mov
add
inc
lock
aaa
inc
sti
outsb
and
xor
xor
xor
jp
imul
daa
in
cmp
movsl
or
jl
scas
jg
addr16
mov
stos
mov
out
push
mov
in
inc
adc
je
cmpsl
int
mov
in
push
adc
pop
jle
dec
cltd
jp
mov
fwait
inc
inc
sub
loope
addr16
jo
rol
push
dec
push
js
pop
out
cmpsb
or
sbb
in
lahf
mov
dec
sub
test
xchg
mov
mov
pop
in
mov
add
dec
lcall
subb
loope
int
mov
mov
adc
nop
mov
add
bound
cs
dec
ja
dec
sub
aam
dec
popf
sub
idiv
mov
rcr
addb
lods
xor
cltd
test
pop
ljmp
iret
push
sub
pop
dec
dec
sub
imul
clc
pop
inc
cmpsb
dec
add
std
fwait
inc
cli
push
bound
cmovb
mov
out
sub
sti
sub
cmpsl
mov
or
mov
dec
pop
in
shr
pushf
mov
lods
fmulp
int3
mov
aam
cmp
xor
inc
je
jg
inc
fiadds
out
stc
mov
add
cmp
mov
sbb
lret
iret
mov
inc
loopne
mov
in
or
or
gs
mov
daa
xchg
xor
add
mov
and
cltd
xor
fnstenv
push
xchg
and
xchg
pop
and
xchg
mov
dec
and
sbb
and
or
int
xor
outsl
sbb
insb
cmp
pmulhw
mov
imul
js
or
cmp
mov
fwait
clc
cmpsl
xor
or
enter
in
mov
inc
mov
cs
add
ficoms
call
sbb
sbb
lahf
or
push
push
mov
mov
cmp
sbb
out
pop
dec
addr16
or
es
xchg
ss
jae
xchg
sbb
mov
dec
cmp
test
add
jae
aam
sbb
push
out
iret
lahf
outsb
out
push
mov
mov
ret
leave
fdivl
dec
jnp
aam
xchg
sub
imul
jae
arpl
push
lret
ja
pop
es
push
inc
and
mov
xor
xchg
inc
adc
cmc
lahf
test
push
subl
in
add
xchg
in
pop
xchg
pop
push
stos
jp
cmp
jle
repz
cmp
mov
pop
xor
xchg
adc
insl
lcall
and
shl
mov
mov
bound
xchg
jle
cwtl
aas
dec
dec
pop
je
repz
mov
push
icebp
cli
insl
dec
pop
pop
cmp
adc
std
xchg
leave
and
ds
outsb
xchg
sbb
push
sbb
in
lods
fsubs
add
xchg
push
orb
je,pt
dec
xorb
addr16
test
sarb
in
or
frstor
xlat
fcmovbe
decl
add
cmp
nop
push
es
mov
insb
aad
xchg
sub
cmp
inc
cmp
das
ljmp
mov
aaa
mov
leave
sbb
push
call
push
jp
lret
sub
inc
push
adc
ja
add
add
adc
out
aam
adc
mov
enter
xorb
lret
repz
outsb
jo
lock
sbb
aaa
enter
jo
cmp
inc
xchg
cmc
mov
mov
jnp
lahf
sbb
sub
cmc
inc
cmp
pop
xor
test
lahf
jb
fs
mov
dec
loopne
xchg
cld
cmp
and
push
sbb
lret
jge
fadd
mov
dec
jmp
data16
ss
adc
or
fadd
pusha
xor
add
test
xchg
mov
mov
dec
mov
shrb
jp
xchg
subb
pop
scas
add
insb
jae
jbe
shlb
rolb
jecxz
add
push
push
and
inc
in
mov
push
or
inc
cld
add
pop
jl
pop
insb
jp
lret
sub
test
aas
push
xor
out
xorl
loop
cmp
xchg
cli
nop
xor
hlt
into
sbb
mov
aaa
js
rorb
xchg
hlt
lock
xor
hlt
inc
lds
cld
or
dec
push
cmp
mov
dec
lahf
in
xchg
mov
jnp
mov
popf
jbe
cmp
dec
jge
lock
test
ret
mov
sahf
mov
popf
popa
sahf
mov
pop
inc
test
les
mov
fsubl
pop
in
std
push
pushf
sub
mov
mov
xchg
les
adc
bound
lock
sbb
in
mov
cmpb
cmp
mov
sub
sbb
inc
inc
scas
iret
mov
roll
test
stos
hlt
push
or
enter
inc
shrl
push
test
iret
pop
pop
fbld
ret
and
push
push
pop
mov
mov
icebp
out
aad
inc
lret
mov
and
leave
insb
in
popf
pop
dec
mov
sub
pop
dec
aas
and
xchg
xlat
lods
testl
test
ds
push
sub
loopne
adc
in
push
jp
xor
or
sbb
push
xor
push
adc
es
cmp
mov
loopne
out
xchg
pop
mov
cmp
test
insl
sar
mov
mov
add
mov
add
mov
push
scas
xchg
cs
bound
insl
repnz
aaa
enter
adc
dec
int3
push
scas
inc
arpl
stos
ljmp
ss
int
in
int
leave
test
lret
int
test
mov
jb
out
push
cmp
ja
lods
adc
cmpsb
lock
stos
pusha
fldt
mov
movsl
in
cmp
and
pop
xorl
and
roll
aas
jp
lahf
inc
outsb
sbb
inc
cmp
sbb
test
inc
mov
add
pop
inc
push
pop
sub
push
dec
aad
mov
pop
mov
sub
push
pop
pop
insb
cs
xorl
xchg
xor
pop
push
roll
xor
dec
mov
das
fwait
loope
fcmove
pop
popf
adcl
popa
int3
ja
loopne
push
orl
xchg
or
jmp
or
sahf
cmpsb
mov
pop
inc
jle
jae
jno
lds
or
stos
aas
out
jns
outsb
inc
pushf
loop
xlat
and
cvtdq2ps
aas
sbb
out
add
jmp
rcrl
insb
bnd
xor
sbb
gs
adc
adc
mov
pop
dec
cld
shll
aas
jbe
bnd
cmp
ja
test
xchg
sbb
movsl
jns
pushf
xlat
add
test
cwtl
sbb
pop
add
in
mov
clc
jbe
cmc
es
jo
sub
sub
or
lcall
mov
in
xor
jae
into
loop
mov
push
lea
push
jmp
dec
dec
mov
push
inc
cmp
dec
jo
xor
mov
sbb
push
jne
inc
pushl
lock
pop
idivb
in
adcb
push
xchg
shlb
push
fneni(8087
mov
ret
mov
mov
add
rorl
push
dec
div
xor
leave
add
mov
push
sub
cmp
adc
inc
xchg
jo
sahf
or
pop
pop
adc
cmp
sarb
pop
mov
clc
je
cmp
pop
imul
inc
popa
push
cmp
pop
push
aas
sti
aas
andps
lahf
aad
push
mov
lods
sub
mov
jae
addr16
iret
xchg
ret
pop
mov
mov
test
movsb
or
movsl
lret
ds
cmp
push
popf
add
clc
fdivrl
js
sahf
add
shl
or
dec
and
rcrl
jmp
pushf
sahf
inc
ljmp
lcall
push
iret
pop
push
push
cmp
inc
xorl
adc
clc
roll
mov
aad
out
aad
cmpsl
cmp
mov
bound
sbbb
shlb
mov
in
mov
adc
fmull
inc
pop
mov
iret
repnz
jb
or
mov
push
inc
adc
mov
mov
xor
pop
das
cmp
pop
cs
repz
fidivrs
mov
insl
inc
ss
mov
add
mov
dec
mov
movsl
sar
loope
rol
jle
daa
mov
icebp
sbb
dec
data16
nop
cmp
in
loopne
dec
dec
fs
jmp
push
mov
test
rorl
shrb
mov
add
daa
push
test
pusha
cwtl
add
adc
cmp
xchg
cmp
lock
pop
xorb
pop
cs
cmp
push
add
inc
rsm
imul
rcrb
pop
mov
xchg
pop
cwtl
push
fistpl
xor
cmp
daa
push
lcall
or
insl
or
cmp
loopne
inc
mov
fstpl
xor
jmp
cltd
jecxz
lahf
leave
test
push
aaa
int
xor
xchg
pop
mov
push
fldt
ret
push
test
adc
loop
test
loop
adc
loope
movsb
cwtl
jno
adc
mov
and
xchg
in
mov
xor
mov
lods
mov
jb
adc
js
popf
inc
addb
popa
jmp
cmpxchg
inc
pop
add
inc
xor
movsb
cmp
jne
inc
xor
xor
mov
lcall
sti
shl
dec
cwtl
mov
sbb
push
mov
in
iret
inc
inc
cmp
enter
jge
sbb
push
sbb
or
popf
mov
shll
mov
arpl
inc
mov
filds
arpl
repz
mov
in
enter
adc
dec
mov
cmp
mov
or
pusha
jo
pop
insl
loopne
sarb
xchg
ja
leave
dec
call
fwait
js
xchg
or
pop
testb
out
mov
dec
iret
mov
ds
cli
fld
add
mov
clc
cwtl
mov
shll
mov
pop
mov
sub
ds
xor
jmp
test
outsl
test
xchg
ficompl
pop
push
js
dec
mov
hlt
pop
popa
mov
jmp
pushf
mov
mov
std
pop
addr16
add
frstor
or
mov
int
jns
dec
shrb
ds
push
xchg
sarb
sub
repz
fisttps
jle
pop
stc
js
rcr
push
add
test
cmpsb
aam
out
push
xor
add
sub
imul
mov
data16
jl
aas
addl
nop
mov
inc
add
adc
cwtl
dec
lock
cmp
fs
mov
filds
imul
out
repz
xchg
dec
mov
pop
push
mov
pop
pop
xor
cmpsb
pop
add
inc
push
push
in
fsubrs
mov
and
xchg
shlb
int
pop
dec
hlt
ljmp
das
dec
dec
cltd
cmp
jmp
stos
mov
int
and
or
pop
fstps
jno
mov
adc
jb
ret
pop
sahf
out
decl
cmp
lods
and
mov
andb
je
inc
int3
jge
stc
xchg
cmpsl
jbe
dec
inc
jp
inc
mov
flds
adc
add
add
jne
or
imul
dec
xor
movups
jp
mov
cmp
movsl
call
push
push
adc
repnz
adc
cli
mov
mov
stc
pushf
fdivs
ds
or
push
lret
adc
mov
xchg
adc
inc
ds
out
addr16
push
pop
fcompl
add
imul
sub
scas
cwtl
sub
dec
add
insb
test
ss
sbb
add
in
sbb
xchg
repz
sbb
les
mov
push
mov
inc
cmp
addr16
lret
mov
add
insb
and
push
mov
int3
jno
xchg
stc
adcb
dec
sub
jnp
add
adc
jns
repnz
mov
nop
pop
mov
test
aam
popa
xor
sbb
ret
dec
repz
sub
test
loopne
shlb
add
mov
pop
out
or
notb
out
mov
dec
aad
cmp
pop
cmp
in
pop
dec
loope
mov
xor
mov
dec
xor
push
fstps
pop
pop
mov
cmp
push
dec
and
or
inc
adc
arpl
and
cwtl
pop
cs
sub
xchg
and
push
int
inc
adc
jge
push
out
shll
mov
or
out
dec
aaa
shll
jp
xor
xchg
arpl
pop
ret
mov
outsb
mov
jae
aad
in
out
mov
daa
nop
xchg
cmp
test
insb
sub
dec
movsl
cwtl
orb
mov
cld
inc
loopne
cmp
sbb
neg
sbb
mov
xchg
adc
mov
mov
cmp
popa
mov
pop
nop
or
ret
jne
mov
mov
push
and
push
repnz
inc
dec
add
adc
mov
repz
out
mov
outsl
test
xchg
es
stos
adc
nop
and
mov
lahf
das
dec
mov
cld
cmpsl
pop
mov
sahf
xchg
xchg
adc
loopne
push
push
test
ljmp
bound
lcall
aaa
push
xor
inc
aad
cmp
sarl
clc
mov
ret
mov
sub
xchg
sbbb
push
add
aaa
faddl
popa
inc
mov
adc
inc
call
cmpsb
xchg
xchg
add
es
add
xchg
jae
sub
int3
out
adc
lret
lret
sbb
xchg
pop
scas
push
inc
clc
add
sub
mov
insl
imul
mov
pop
push
aas
xor
push
decl
fsubp
or
pop
imul
xor
sub
jo
cmp
sbb
loop
repz
test
push
or
inc
aaa
insl
push
ficomps
or
fucomp
fwait
dec
adc
cmp
jp
scas
iret
das
pop
mov
mov
cwtl
daa
pusha
fldenv
test
push
push
movsb
sti
sbb
dec
xchg
loope
jl
repnz
dec
bndcl
ret
addr16
nopl
mov
add
pop
add
xchg
fimull
sbb
adc
pop
jae
xchg
mov
sarb
std
loopne
addr16
iret
dec
pop
mov
stos
pop
data16
je
daa
cmpsl
dec
stos
inc
sub
sbb
sub
in
insb
mov
inc
scas
in
and
paddsb
js
ret
mov
xchg
dec
js
pop
mov
mov
cmp
in
ret
push
xchg
fistl
aam
test
js
nop
fisttpll
fcoms
push
aad
sbbl
cltd
cmp
aas
adc
scas
xchg
cwtl
clc
ficoms
xor
mov
inc
push
pop
int
mov
sbb
dec
stos
pop
pop
xchg
lret
inc
cmpsb
movsl
cmc
int
jbe
sbb
xchg
ror
push
sub
xor
cmpsb
in
mov
out
call
push
sbb
loopne
test
mov
loopne
les
xchg
cmpsl
pop
dec
lret
mov
xor
decl
push
mov
and
add
add
inc
fwait
dec
decl
adc
pop
mov
add
dec
mov
jbe
scas
mov
inc
stos
xor
sti
pushl
sub
pop
loopne
mov
mov
lods
fsubl
or
sbb
mov
test
push
mov
into
shlb
mov
data16
mov
and
fldt
ljmp
nop
punpcklwd
shll
fwait
orl
lds
clc
stos
lds
fwait
aad
cmpb
inc
fs
ret
rcll
jl
mov
insb
out
push
in
lcall
int3
test
stos
and
out
push
xchg
out
pop
dec
scas
pop
sbb
xchg
sbb
mov
mov
sbb
jmp
lcall
movsl
jecxz
jecxz
movsl
imul
test
jne
lods
or
cmpsb
inc
inc
and
shll
push
or
jmp
xorl
xchg
pop
cmp
xor
fisubs
lock
push
shrl
stos
fcoms
imul
push
bnd
cmp
xchg
cli
notl
cmpsb
clc
mov
int
leave
mov
fwait
inc
push
jmp
and
pop
les
dec
mov
sub
and
dec
sbb
push
inc
adc
stos
push
mov
xchg
loope
loope
sub
lds
aad
mov
xor
mov
or
mov
out
lahf
fstps
bound
add
or
imull
push
les
sub
mov
insl
pop
aam
iret
and
cmp
jp
call
mov
lea
jno
pop
inc
xchg
mov
mov
andl
aas
sbb
sub
or
inc
mov
push
push
loope
inc
pop
mov
int
ds
repnz
aam
mov
xor
xor
push
mov
ret
xchg
in
inc
cmp
jl
je
incb
icebp
mov
and
cmc
sub
loopne
shr
mov
jp
xor
pop
inc
fsub
inc
les
mov
add
and
out
inc
and
xor
add
popa
add
or
jnp
cltd
mov
sbb
mov
jne
mov
pusha
fildl
fnstsw
mov
mov
jmp
imul
xchg
xlat
ret
push
mov
cmp
rolb
jno
lock
pop
cmc
mov
cmp
subl
xlat
loopne
sbb
jmp
rcrl
pop
cmp
inc
in
cmpsb
cmpsb
jmp
js
jmp
add
test
pop
jg
xor
mov
inc
cs
dec
mov
daa
and
push
je
or
ja
sbb
ret
dec
adc
loopne
jge
sub
fstps
andb
push
xchg
daa
ja
sbb
sbbb
xor
push
je
mov
add
xchg
popf
add
loopne
push
mov
fildll
lock
mov
in
jge
ss
pushf
push
ret
repz
fcoms
mov
mov
inc
sub
push
in
add
or
jno
xor
sub
mov
inc
cmp
sub
or
cmp
mov
icebp
lock
sbb
std
ss
sub
push
je
cs
fidivs
shrl
cltd
cmc
mov
push
mov
push
stc
adcb
pop
testb
sub
ljmp
mov
xor
loopne
andb
call
popa
dec
jno
jmp
or
out
pop
jno
jecxz
icebp
lret
jg
rclb
cmpsl
sahf
mov
push
and
lods
mov
ljmp
sub
mov
pop
loopne
adcl
push
rcll
pop
dec
add
fadds
xchg
fs
xor
push
ret
mov
push
inc
leave
push
push
fsts
mov
bound
push
popl
dec
outsb
mov
and
push
popa
mov
fistpll
out
push
in
mov
xor
cmc
and
shrl
cmp
int3
out
cmpsl
mov
pop
imul
xchg
inc
mov
mov
decb
ret
inc
adc
call
jns
loopne
pop
rolb
ds
push
mov
cmc
nop
fstl
out
cltd
lea
mov
popa
xchg
ljmp
add
add
cmc
or
arpl
fcmovbe
mov
mov
add
mov
dec
out
or
frstor
dec
cmp
inc
add
jmp
jne
mov
nop
cwtl
pop
jmp
mov
cmp
ss
inc
or
jo
stos
mov
insl
mov
clc
out
mov
lds
jecxz
mov
lds
push
fimuls
pop
aad
add
dec
in
sbb
into
test
andl
lea
push
add
pop
rcrl
lds
pop
sti
scas
ja
test
fcmovnbe
dec
jno
dec
push
stos
ss
mov
cmp
insl
test
iret
adc
ds
movsl
adc
clc
xchg
cmp
mov
jmp
or
jno
sub
mov
sti
inc
sbbl
dec
or
into
adc
mov
ja
dec
testb
xlat
jge
out
push
insl
dec
fsubs
sbb
mov
popf
mov
addr16
or
xor
jbe
nop
dec
jne
xor
aas
xlat
or
mov
adc
mov
loope
test
cli
mov
sub
lcall
pop
call
mov
push
enter
mov
xorl
lods
sbb
dec
mov
cld
push
cld
xchg
adc
dec
stos
mov
cmp
orl
jle
or
insb
cmp
mov
mov
xor
push
fdivs
cmpsl
xchg
adc
jp
sub
test
ljmp
test
adc
mov
call
push
jg
aaa
adc
arpl
sbb
xor
imul
pop
pushf
addr16
aaa
mov
outsb
mov
cmpsl
push
cmpsb
fdivrs
jne
jle
add
sub
mov
roll
cltd
mov
lods
addb
outsb
xor
sbb
out
mov
xchg
arpl
gs
mov
dec
jae
icebp
in
dec
xor
dec
fcmovnbe
or
xchg
and
dec
ret
mov
sbb
and
je
lea
pop
out
sub
insb
sub
mov
movsl
fs
add
jg
mov
lods
insl
push
xchg
sub
cs
jl
adc
sub
or
pop
rorl
les
orl
stos
imul
adc
sub
push
mov
mov
int3
push
jnp
inc
in
andb
pop
jge
mov
in
out
jnp
cmc
hlt
call
loope
cmp
ret
xchg
aaa
push
sub
jp
loope
push
fyl2x
cmp
dec
ds
cwtl
and
stos
cmp
imul
in
data16
cmp
in
inc
dec
push
xor
lret
sbbl
push
addr16
jns
mov
inc
jne
lret
nop
and
sarl
push
add
add
xchg
or
pop
pop
stos
add
mov
adc
bnd
movb
enter
mov
stos
inc
sahf
fcmovu
sarb
aaa
jle
mov
stc
hlt
sarl
cmc
and
ret
cmp
clc
and
xor
daa
mov
icebp
lret
insb
int3
in
mov
pop
pop
pop
call
stc
sbb
fidivrs
fsts
sub
mov
fisubl
jnp
int
test
dec
mov
jns
push
test
int3
stos
jp
int
in
mov
add
lret
rcrb
adc
xor
out
enter
rol
sub
mov
and
aaa
popf
xchg
addb
in
icebp
dec
mov
loopne
mov
sub
cmp
or
mov
cmp
subb
fcmovnbe
add
adc
push
sti
mov
jmp
adc
mov
fbld
xchg
ja
add
xlat
add
rcr
rclb
add
xor
cmp
xchg
test
bound
aam
subb
adc
xor
sti
ss
pusha
shr
test
cld
jno
push
pop
mov
jg
push
push
and
repz
add
call
cs
fldt
mov
add
inc
sub
mov
dec
pop
sbb
daa
pop
mov
hlt
aaa
dec
aaa
cmp
cmpsb
mov
fiaddl
scas
mov
rcl
shlb
lcall
stos
push
push
fadd
add
insl
loop
bound
int3
xchg
mov
fldl
imul
adc
ss
pop
dec
cmp
test
bound
movsb
loope
or
cmp
inc
leave
xchg
scas
add
pop
sti
mov
jb
loop
adc
sbb
or
jp
sub
pop
xchg
xchg
mov
pop
sbb
imul
repnz
xchg
orb
xchg
cs
adc
and
sub
cmc
add
pop
ljmp
dec
push
ds
and
push
cs
mov
loope
ljmp
fdivrl
or
inc
cmp
cmp
mov
push
sub
js
lods
shr
cmpsb
sahf
mov
push
sub
leave
enter
mov
lds
push
mov
or
imull
jae
in
cwtl
jcxz
fdiv
lret
call
out
cs
test
jae
mov
mov
test
subl
pop
in
sub
out
cmp
push
ficoml
das
je
xor
add
add
loopne
dec
and
xchg
cmp
inc
notl
dec
movsl
mov
into
xchg
div
gs
bound
jp
xor
and
leave
fmul
fdiv
pushf
inc
sbb
push
std
pop
and
add
jno
rcrb
out
pop
lods
mov
xchg
xorl
sahf
mov
jg
mov
cmc
pop
pushf
test
mov
mov
loop
sub
mov
pop
mov
mov
stc
fldenv
mov
push
scas
add
inc
push
and
fwait
push
repz
adc
push
sbb
pop
lds
jnp
cmc
jne
jp
xchg
xor
mov
cli
xor
enter
jecxz
cmpsl
mov
xchg
cmp
aad
mov
push
xchg
out
adc
je
popf
push
push
lret
jg
ret
int
mov
jmp
outsb
jae
mov
mov
ret
aad
arpl
shll
push
adcl
adc
jbe
arpl
ss
xchg
push
loop
push
xchg
pop
add
cmpsl
push
test
mov
arpl
stos
adc
push
and
jne
cmp
pop
and
mov
fwait
and
mov
cmpsb
inc
mov
fists
faddl
in
movsl
mov
ss
dec
imul
dec
and
xor
mov
in
and
adc
sbbb
jmp
push
mov
loope
lret
out
lock
adc
mov
aas
sbb
clc
sbb
cs
xchg
mov
cmp
clc
jnp
icebp
lods
mov
dec
lods
xor
inc
inc
imul
push
mov
rolb
add
int3
aam
movhps
adc
pop
sub
inc
leave
outsl
cli
popa
es
jne
test
loope
and
fnstenv
mulps
mov
adc
xor
icebp
inc
insl
data16
inc
sbb
pop
xchg
rclb
or
test
ficoms
das
das
xor
sbb
nop
xlat
cmp
xlat
pop
pop
push
sbb
test
lock
jmp
push
adc
mov
xchg
in
push
inc
loopne
orb
std
push
adc
pop
mov
push
pop
roll
add
inc
jecxz
add
mov
repnz
inc
and
sub
mov
stc
call
xchg
cmp
in
mov
mov
popa
adc
jge
dec
aas
outsl
roll
pop
or
cs
mov
push
in
mov
sti
subb
or
mov
xor
mov
xchg
aaa
mov
int
repz
sub
nop
mov
mov
cld
xchg
or
xchg
mov
jg
push
std
jg
mov
push
test
std
jmp
frstor
lcall
aad
dec
pusha
fdivs
mov
push
jno
aaa
adc
pop
jnp
pop
cwtl
pop
stos
rorl
cmp
mov
sub
mov
pop
inc
mov
std
mov
dec
push
lahf
add
mov
sbb
dec
negl
mov
xchg
pop
clc
addr16
sub
ds
push
mov
mov
xor
xchg
push
dec
mov
sub
imul
xor
jns
lret
icebp
jnp
jbe
mov
pop
pop
push
xor
mov
mov
sbb
cmp
or
xchg
insl
sbb
mov
sar
cmp
cmp
adc
and
shl
fisttpl
incb
dec
fsubr
js
pushf
gs
iret
pop
pop
add
cmc
daa
mov
sbb
cld
movsl
lea
std
fwait
cmp
icebp
aas
mov
dec
lods
push
js
mov
iret
cld
mov
lods
cld
nop
dec
inc
and
dec
mov
jl
mov
mov
xor
outsl
lods
lret
mov
sub
icebp
imul
lods
ljmp
mov
in
or
int
mov
xlat
mul
or
rorl
push
pusha
or
ljmp
push
mov
loopne
fmulp
stos
push
push
call
in
adc
adc
imul
pop
repnz
jne
jo
cmpsb
pop
jne
push
adc
aam
mov
xor
xchg
ljmp
sbb
lds
fmull
jge
mov
shll
dec
shl
pop
insl
mov
sbb
loopne
inc
cmp
add
aas
mov
sbb
xor
in
push
negb
mov
ret
dec
je
sub
divl
inc
sbb
mov
imul
fildll
pop
jns
cwtl
adc
lret
mov
out
jl
test
mov
xor
cltd
xchg
inc
ljmp
sub
dec
push
icebp
nop
cmp
jae
xor
in
stos
mov
xchg
dec
cmpsb
imul
dec
cwtl
mov
in
fcomps
popf
cmp
pop
cltd
lret
push
pop
nop
orl
clc
cmpsb
into
mov
add
jae
nop
mov
test
lea
cmp
int
xor
mov
push
jg
shll
addr16
mov
add
loope
cs
mov
add
mov
push
aaa
outsl
and
test
popa
les
pop
in
cmpsb
les
pop
shl
jp
pusha
or
cmp
push
cmp
lcall
std
jne
pop
lret
stc
mov
push
je
into
xlat
lret
movsb
xor
inc
aas
pop
cmpsb
arpl
push
pop
push
sub
lret
sub
lock
cmp
movl
jns
inc
js
test
popf
lcall
mov
fadd
mov
adc
insb
loop
adc
lods
aas
jnp
in
dec
xchg
add
and
lods
jmp
jecxz
in
cli
jno
test
das
shrb
push
dec
jecxz
xchg
jne
mov
mov
test
lea
push
inc
loopne
mov
loope
cli
or
adc
arpl
test
gs
push
mov
xchg
sbb
in
cmp
inc
cmp
push
out
mov
in
sahf
fldl
sar
imul
sarb
addr16
in
pop
xor
into
xor
jne
out
adc
pop
mov
push
out
cld
xor
or
jg
and
inc
xor
stos
lret
sbb
stos
les
scas
push
xor
dec
cmp
mov
and
cmp
insl
and
jnp
repnz
push
pop
xchg
mov
int3
pop
jo
outsb
iret
idivb
shl
test
arpl
jmp
adc
ljmp
xlat
jnp
xchg
outsl
or
movsl
jno
or
inc
cmp
mov
pop
lock
pop
sub
jp
xchg
lods
lock
and
adc
jmp
movsl
lret
pusha
rcl
pop
adc
lods
icebp
mov
xor
lock
insl
in
loope
outsl
mov
xor
cwtl
movsl
fmull
sub
jmp
jmp
sar
lds
out
test
cld
or
cld
out
and
lcall
add
adc
subb
lods
ja
adc
push
adc
add
movsl
loopne
sbb
cwtl
push
inc
fwait
adc
je
imull
pop
pop
out
adc
jecxz
enter
out
ret
mov
jno
jmp
mov
pop
dec
lock
fcomps
sbb
ljmp
jge
pop
clc
pop
push
mov
dec
test
psubd
jb
xchg
mov
jb
fildl
cmp
mov
shlb
and
push
mov
rol
ja
jns
sub
ficoml
mov
aam
jp
test
in
ja
sbb
leave
jg
data16
jmp
or
outsl
dec
jmp
out
xchg
lock
push
mov
repnz
int
imul
ss
inc
inc
cmp
inc
and
movsl
pop
mov
inc
jle
push
aaa
mov
lods
and
mov
adc
ret
cmp
sub
cmp
push
cmpsb
movsl
xor
outsl
or
clc
and
cltd
cmp
ds
push
lods
fnstsw
repz
push
sub
dec
push
fcomps
inc
adc
xor
jmp
add
insl
out
out
sbb
and
imul
ds
arpl
add
cwtl
dec
push
into
jle
mov
dec
xchg
stos
pushf
sbb
inc
jno
push
stos
dec
pop
mov
inc
iret
ret
mov
or
fdivs
int
arpl
fsubrl
imull
inc
mov
adc
jbe
mov
add
xchg
xchg
cmpsb
loopne
push
pusha
pop
into
inc
sti
pop
mov
dec
push
xchg
test
inc
mov
aas
pop
out
pop
pop
xchg
outsl
xchg
pop
test
dec
sbb
cli
in
or
and
and
xchg
addr16
sahf
jle
in
aaa
adc
mov
mov
mov
dec
stc
js
rcl
push
loop
and
push
loope
inc
repnz
jns
dec
xchg
lock
xchg
outsl
push
jbe
sbbl
rcrl
pop
xor
push
jecxz
sub
out
pop
mov
jl
sub
cld
cli
clc
inc
cmp
sbb
pop
jge
xor
ljmp
roll
mov
push
or
sub
push
add
insb
pop
nop
dec
flds
jns
out
and
fldcw
scas
push
stos
lods
lds
sbb
xchg
and
repz
mov
mov
or
sub
fldt
imull
div
cld
pop
jmp
fs
outsb
xchg
mov
push
je
add
pop
mov
and
xor
cli
mov
repz
out
sbb
and
ret
mov
push
cmp
adc
inc
sbb
or
jmp
clc
aad
mov
and
test
cli
stos
pop
cltd
lcall
push
pop
cmp
adc
daa
adc
mov
mov
lods
pusha
mov
push
sub
jae
jmp
mov
pusha
std
stos
xlat
add
cmpb
lock
pop
add
jbe
cmpb
and
adc
or
and
add
stos
out
lahf
add
lcall
adc
jnp
mov
mov
cmp
cld
insb
dec
ja
dec
jb
adc
popl
ds
jae
js
mov
dec
movsl
idivl
xchg
popf
jp
inc
mov
mov
xchg
mov
dec
sub
insb
jmp
jne
or
dec
xor
pop
lahf
loope
call
add
dec
or
xor
negb
out
enter
jbe
scas
in
rcll
ja
jg
inc
jl
pop
test
int3
adc
insb
jo
jle
insb
ret
addl
testl
je
jbe
ror
fldl
jae
gs
mov
xchg
or
out
jne
xor
push
cli
pop
inc
lods
ljmp
cmp
aas
add
pop
idiv
fistpl
inc
inc
testb
and
std
xchg
pop
int3
nop
in
mov
pop
daa
cltd
mov
je
int
pop
int
orb
push
dec
out
mov
je
pop
sti
sub
shll
xchg
adc
sub
xchg
std
cwtl
movsb
sahf
push
cli
mov
mov
insb
cmp
push
cmc
pushf
jp
mov
or
dec
cmp
dec
in
mov
adc
jle
mov
mov
lea
inc
cmp
jl
or
jl
pop
adc
mov
cli
jns
pop
cmc
lret
xchg
fistpl
push
jne
aas
cmp
pop
pop
fwait
clc
xchg
in
fistl
mov
mov
adc
add
in
lds
lret
imulb
xchg
fsubrl
mov
int
pop
int3
sti
push
das
ret
dec
cld
jecxz
xchg
std
jmp
xchg
lcall
pushf
lret
sub
push
enter
mov
rcll
negb
movsb
out
mov
imulb
sbb
xchg
shrb
lcall
pop
push
sbb
or
scas
cmp
mov
adc
in
mov
cmp
je
aam
mov
das
xor
or
inc
shrb
add
xlat
cmp
xchg
insb
sub
sbb
mov
icebp
sub
addr16
inc
test
ss
call
add
dec
loop
push
sub
ss
add
lahf
pushf
inc
mov
jbe
jl
or
es
ss
xor
imul
ss
outsl
cmpsl
add
jae,pt
add
ja
fs
xlat
stos
sti
jno
imul
sbb
xlat
jns
mov
and
xchg
ds
cmc
into
adc
test
push
xchg
sbb
mov
lahf
data16
push
in
ja
in
test
fisubl
jle
mov
pusha
ja
enter
ja
jmp
ss
xlat
mov
add
inc
pop
fnstsw
or
outsl
push
aad
fcmovbe
or
enter
xor
sahf
fs
and
push
scas
mov
sarb
dec
adc
sti
adc
push
lcall
adc
aas
mov
hlt
cwtl
cld
xlat
ds
stc
and
add
pop
out
aam
mov
push
xchg
dec
pushf
ds
mov
out
add
imul
pop
out
adc
into
xlat
jae
arpl
mov
xchg
mov
mov
hlt
repz
cli
nop
cmp
mov
imul
adc
inc
push
ja
sahf
addr16
mov
mov
jmp
daa
sub
sbb
jge
dec
mov
inc
add
mov
nop
movsl
shl
add
dec
repnz
jbe
and
out
hlt
xor
lcall
push
sbb
or
add
add
mov
jnp
insb
mov
rcrb
jge
das
lods
ficoms
jo
fisubrl
mov
scas
mov
xchg
cwtl
and
aaa
out
add
or
cld
jns
xchg
popa
leave
jmp
inc
sbbb
hlt
pop
push
mov
mov
xor
div
xor
or
sbb
xlat
or
nop
or
stc
sbb
mov
or
pop
sbb
lock
repnz
jle
cmp
xor
fdiv
shl
and
push
or
cmp
sub
inc
dec
test
out
mov
xor
mov
jbe
ret
lods
gs
push
aas
out
and
jae
shrl
jo
mov
cs
insb
mov
jp
scas
mov
pop
pop
or
cs
lret
leave
lret
jecxz
out
notl
fimuls
test
test
sbb
push
and
push
ficomps
test
jp
or
cmc
cmp
or
xchg
fwait
test
mov
test
mov
mov
daa
and
xchg
mov
push
bswap
in
ljmp
pop
inc
sbb
ljmp
rclb
xchg
inc
pop
add
addr16
out
mov
mov
sub
mov
in
push
jmp
sub
rorb
jb
mov
dec
loop
mov
repz
std
dec
push
and
rcr
pop
push
cmp
test
pushf
jo
movsl
repz
fcos
jle
test
inc
and
push
inc
cli
fstl
je
push
mov
out
in
dec
mov
push
push
test
icebp
movsb
dec
sbb
je
pop
pop
loop
xor
pop
xchg
jne
sbb
mov
sub
mov
cmp
dec
push
dec
cmp
dec
mov
cmc
push
sbb
aas
jmp
daa
outsb
cltd
in
cmp
fidivrl
dec
push
arpl
mov
mov
je
mov
push
sbb
dec
ror
or
sbb
in
lahf
xor
ja
add
jle
push
aas
lret
adc
cltd
ja
jp
mov
sbb
js
in
mov
mov
rclb
mov
mov
dec
dec
leave
lods
mov
xchg
leave
push
and
cmp
adc
hlt
out
test
loop
mov
add
mov
push
shr
xchg
fwait
popf
adc
sbb
insb
push
lret
or
push
mov
int
mov
xchg
mov
repz
or
push
push
stos
add
sub
in
test
mov
mov
adc
inc
popf
not
out
addr16
xor
and
popf
jae
movb
mov
aam
lret
fbld
push
cwtl
ljmp
xlat
pop
dec
jge
adc
fistpll
outsb
shrl
jge
and
cmp
jmp
sbbb
jns
aam
mov
adc
pushl
jg
movsl
popf
cmp
and
mov
cmpl
popf
or
jae
loope
or
add
test
jp
fldl
loop
xchg
in
imul
and
paddw
push
dec
or
adc
loop
xchg
mov
cmp
or
leave
fstps
and
mov
pop
imul
out
jbe
cmp
push
or
pushl
mov
cltd
clc
cmpb
nop
ds
shll
repnz
divb
popa
adc
xor
adc
or
aam
pop
lret
jnp
addr16
adc
cmpsb
jge
repnz
mov
inc
shr
popa
or
daa
ljmp
shrl
aad
push
pop
fisttpll
cmp
xor
mov
mov
loopne
add
leave
out
jae
sbb
mov
jmp
push
loope
icebp
add
push
dec
cmp
adc
push
lret
aas
xor
dec
cwtl
xor
sbb
fists
pop
mov
inc
sbb
ret
jo
int3
jbe
sbb
ret
outsb
cmpsb
xchg
jb
xor
push
int
push
out
bound
add
cmp
pop
push
repz
ret
insl
jo
shlb
dec
sbb
aas
loopne
into
or
mov
adc
jne
mov
mov
out
jnp
cs
dec
dec
mov
mov
xor
dec
daa
push
or
adc
push
cltd
pop
sub
notl
loope
xor
sbb
sub
mov
sbb
sub
xchg
enter
xor
jmp
pop
mov
lahf
jb
sbbb
gs
inc
sbb
lods
cmp
inc
pop
test
xchg
mov
sub
loop
sahf
cwtl
xor
cmp
cmp
inc
xchg
push
aas
enter
mov
addr16
inc
lock
loop
cld
orb
xchg
cmp
xchg
xor
lock
or
pop
mov
in
cmp
stc
pop
push
inc
icebp
sub
stos
push
dec
xor
jp
mov
sub
sub
jmp
ficompl
icebp
in
adc
ljmp
jle
sbb
push
fwait
int
mov
jne
and
das
loope
stc
stos
pusha
roll
mov
lret
pop
push
fldl
sahf
imul
jle
jmp
rclb
xor
cmpsw
into
and
mov
jecxz
inc
scas
xor
test
pop
fwait
cmp
cwtl
sub
sub
popa
pop
adcb
inc
pop
jecxz
test
fnstenv
pop
stos
push
and
pusha
and
mov
repnz
mov
inc
inc
cmc
add
sbb
shll
fcmovnbe
rcl
inc
pushf
add
bound
or
movb
sbb
push
cmp
sub
lcall
fldenv
int3
pop
pop
lods
ja
or
inc
adc
dec
push
xchg
fadds
bound
sub
mov
into
mov
daa
sbbl
int
icebp
adc
cmp
mov
pop
fstps
pop
push
push
cmp
push
or
cmpsb
test
fs
mov
jle
int
frndint
lahf
lock
dec
outsb
jp
je
or
shll
sbb
nop
test
inc
dec
dec
mov
push
xor
hlt
aam
test
ror
rcrl
mov
pop
push
shll
pop
clc
lock
sub
aaa
sti
loope
iret
js
inc
sub
xchg
ljmp
xchg
push
inc
movsb
call
lods
sbb
lcall
sbb
fcoms
shrb
push
mov
mov
jp
fmuls
fisttps
xor
mov
repz
adc
fldt
adc
ds
rcrb
cwtl
pop
xchg
mov
mov
mov
fdivl
lahf
cs
xor
int3
jle
aaa
aaa
sub
call
sub
repz
pop
ja
pop
in
sahf
inc
lods
xchg
imul
lret
shrb
into
loop
dec
clc
lahf
lea
andl
leave
sub
pop
xchg
jmp
lret
rolb
mov
xchg
mov
push
data16
mov
ljmp
xchg
xor
nop
outsl
ficomps
mov
jecxz
aaa
adc
push
mov
sub
into
push
sbb
ja
ret
inc
add
arpl
mov
cmpsl
mov
testl
int
mov
in
popf
lea
bound
imul
test
push
lahf
mov
ret
gs
add
hlt
xchg
push
jns
xchg
das
int3
incl
mov
cmp
add
mov
mov
fwait
mov
js
sti
ffree
in
mov
inc
xchg
jb
inc
ljmp
int
outsb
shl
add
stos
mov
cli
add
divb
out
push
fsubr
mov
xchg
push
push
rcrb
enter
push
jb
fwait
pop
xorb
sub
rorb
repz
aam
aam
lea
cli
xor
xchg
xchg
out
sbb
mov
pusha
mov
arpl
in
outsb
mov
movsl
mov
popa
add
or
mov
inc
xchg
pop
mov
cmp
xchg
cmc
fsubs
aas
cwtl
insb
cmc
out
fnstenv
mov
jmp
mov
loop
into
je
dec
lods
mov
fistpll
xchg
loopne
in
icebp
shlb
pop
scas
sti
jno
jg
xorb
push
sbb
adc
xchg
shr
lea
enter
fisttpll
xor
test
fdivr
mov
stos
mov
inc
pusha
ret
xchg
and
enter
jge
mov
mov
in
or
add
jge
and
xchg
and
js
sub
and
int
add
pop
outsb
xchg
pop
fstpt
sbb
jecxz
pop
xor
dec
scas
test
cmp
popa
lcall
cmp
cmpsb
mov
lods
or
jecxz
sub
lret
out
jl
ss
pushl
mov
ss
push
sbb
add
xchg
push
lret
cmp
push
or
imul
or
dec
in
lock
lret
inc
or
dec
cmp
iret
jnp
movsl
sbb
test
sub
into
icebp
bound
in
xchg
cmc
jae
cmp
into
jae
pop
xlat
fs
sub
fstpl
dec
mov
xor
insb
outsl
and
mov
push
sar
test
mov
mov
cmp
je
mov
rorb
shr
insl
lret
pop
jge
or
sarb
lods
orl
lock
pop
jnp
pop
jae
fcomps
arpl
or
and
mov
sbb
sub
jne
lds
nop
add
push
mov
xor
fisubs
stos
mov
insl
and
push
dec
imul
jo
dec
stc
idivb
jmp
lret
mov
xor
shl
inc
jle
leave
cld
sbbl
mov
dec
xor
and
out
lods
std
std
mov
or
iret
mov
scas
push
dec
lds
cwtl
xor
and
and
xchg
pop
cmp
loopne
dec
ljmp
jne
cmp
xorb
mov
stc
cwtl
test
mov
aaa
sub
xchg
xchg
das
loop
cmp
arpl
xor
cmp
push
sbbb
out
fs
aad
subb
and
out
pop
mov
cmp
loope
pop
fcoml
dec
mov
cwtl
pop
and
cmpsl
push
cld
popf
and
insb
mov
pushf
sbb
push
out
cmp
or
push
xchg
and
push
or
sbb
mov
adc
jae
sbbl
mov
cmp
enter
jl
xor
fwait
imul
cmc
pop
mov
in
in
scas
xchg
rcl
imul
mov
mov
add
xchg
xor
dec
mov
jno
scas
dec
cwtl
loopne
or
int
mov
testl
jmp
pushf
xor
jge
dec
or
mov
aad
stos
mov
insb
les
add
push
iret
xor
jno
mov
push
fldenv
xchg
adc
repnz
add
jae
jnp
test
ds
mov
sub
mov
or
into
fsubs
adc
dec
call
push
roll
movsb
cmp
loop
mov
jmp
ljmp
inc
stc
pop
mov
int
outsb
rolb
out
fimuls
jl
push
ljmp
aad
roll
lds
jg
lea
jb
jo
mov
mov
dec
jne
or
imul
inc
int
mov
xchg
add
dec
cltd
lds
ss
sub
and
add
adc
pop
arpl
inc
sbb
dec
pop
sub
les
adc
pop
ret
xor
pop
les
inc
ds
pop
inc
jmp
push
mov
xor
xor
or
ja
jne
hlt
adc
dec
lcall
jae
mov
add
pop
ljmp
lcall
pushf
xor
mov
jl
mov
sbb
mov
mov
stos
int
stos
push
add
or
and
cmpsb
jo
xchg
pop
cmp
sub
xchg
inc
mov
shlb
in
lds
test
ret
pop
lds
add
scas
filds
sub
push
pop
sub
mov
lcall
sahf
ficoml
sub
cmp
or
cmc
pushf
and
cmp
fs
adc
data16
add
or
out
or
mov
sbb
mov
push
or
lret
or
enter
insl
cmp
inc
jae
mov
push
adc
xchg
outsb
daa
scas
lock
xlat
dec
mov
inc
mov
and
adc
cmp
cmp
dec
or
or
insb
out
aaa
push
rolb
sub
xchg
cmc
notl
movsb
sbb
pop
test
mov
dec
clc
imul
mov
std
enter
xor
fdivrs
xorl
fidivl
cld
mov
xchg
jg
add
fnstsw
mov
xchg
subb
lret
mov
sbb
xlat
pinsrw
push
cmp
fprem
loopne
in
sub
cld
fldenv
xchg
nop
xor
leave
push
pop
movsb
cwtl
cwtl
test
xor
push
jg
xchg
or
sub
jnp
cmp
dec
mov
incl
das
faddl
jb
loop
leave
fwait
pop
sbb
sbbb
jno
mov
xor
out
movsl
iret
das
push
out
pop
mov
xchg
push
or
xor
enter
and
mov
call
dec
mov
sarl
sahf
mov
mov
cmp
xchg
inc
in
popf
xor
adc
idivb
addr16
mov
inc
out
repz
jmp
lock
jb
dec
xchg
sahf
bound
enter
aaa
out
out
rcrb
push
rorl
or
sbb
jnp
or
or
sbb
lods
std
pmaddwd
mov
inc
or
cmp
arpl
jp
mov
mov
sbb
mov
cwtl
test
xchg
popa
addb
jle
cmp
cmpsb
mov
cmp
lahf
adc
das
rcll
addr16
jmp
xor
fbstp
outsl
test
mov
insl
sbb
lcall
add
aad
xor
add
sub
inc
ljmp
add
xchg
adc
dec
mov
lods
adc
in
filds
repnz
cmp
lcall
cmp
popf
repz
ret
inc
testl
lcall
ja
xchg
mov
adc
mov
aad
xor
adcl
push
dec
int
int3
xchg
mov
push
fcomp
mov
mov
fwait
call
pushf
cmp
sbbl
dec
mov
sbb
cmp
jnp
scas
sub
gs
aas
jecxz
aad
dec
cmc
sbb
and
mov
pop
loop
dec
cmp
mov
add
xor
inc
test
adcb
pop
mov
loope
cmp
scas
sbb
add
xor
xlat
outsb
lea
out
fucomip
cltd
fsubrl
inc
lea
cli
mov
ret
push
mov
out
test
mov
pop
in
test
add
cmp
add
lea
add
and
pushl
push
pushf
insl
ds
push
rorb
cmp
pop
mov
xor
push
adc
mov
or
stos
and
daa
imul
xchg
add
lret
sahf
push
sahf
es
jo
adc
loop
not
jnp
stc
loope
jb,pt
sbb
fildll
jns
data16
pop
test
dec
adc
dec
push
adc
rcrb
jne
inc
push
andl
repnz
lret
test
jne
mov
jmp
or
sub
enter
jge
xor
in
jne
rcl
shl
push
push
add
push
ss
imul
xor
pop
es
jmp
ret
cmp
outsl
into
test
jns
dec
mov
or
pop
jecxz
inc
lahf
inc
arpl
scas
mov
lahf
lock
popa
xor
js
sahf
mov
cmp
shrb
pusha
sbb
icebp
push
push
arpl
cmp
or
jl
mov
cmp
add
xchg
mov
cmp
dec
add
mov
sub
mov
push
jo
lret
pusha
in
outsl
add
lods
js
std
xchg
pushf
outsb
dec
mov
and
loop
ret
push
das
jae
int3
mov
ss
pop
xchg
xor
ffree
sub
pop
sub
mov
dec
xor
rcl
or
rclb
or
xchg
pop
or
or
neg
pop
lea
pusha
inc
mov
push
push
stos
insl
loope
nop
push
push
push
cwtl
sub
sbb
inc
out
push
xchg
push
xchg
add
push
push
or
jb
push
and
dec
xlat
mov
mov
movsb
insb
sub
cmp
xchg
sub
jp
cmpsl
mov
mov
psrld
test
ss
enter
movsl
aaa
pop
xchg
repz
inc
mov
outsl
sbb
xchg
pop
sbbl
dec
cmp
scas
or
xchg
scas
xchg
pop
cmp
push
xor
stos
pop
in
aad
sbb
icebp
fisubrl
mov
arpl
inc
fldenv
xchg
sarb
cmc
js
add
adc
popa
pop
lock
pop
or
idivl
int
lea
andb
repz
repnz
push
int
ljmp
dec
jecxz
mov
hlt
into
and
xor
dec
xor
push
cmc
xchg
mov
or
sbb
mov
inc
jge
test
jecxz
xor
cmp
xchg
mov
test
test
fwait
lods
mov
sti
xor
movsb
sub
cmpsb
into
or
sub
xchg
lods
out
fwait
rcl
xchg
sub
outsb
cmp
cmc
mov
xchg
gs
popf
cmp
mov
aas
mov
lods
int
cwtl
testb
mov
inc
test
jmp
adc
mov
stos
add
xchg
add
cmp
mov
pop
dec
out
icebp
sti
jne
xor
pusha
push
mov
mov
jno
dec
fwait
lahf
lods
cltd
mov
mov
push
testl
test
jmp
xchg
sbb
pop
std
cmpsl
or
push
adc
jecxz
bound
aaa
mov
out
or
es
mov
je
mov
dec
xor
int3
xlat
mov
mov
pop
popa
movsb
jmp
push
test
aas
dec
cmp
adc
jae
hlt
repnz
repnz
das
inc
xchg
pusha
jae
loope
mov
adc
imul
cmpsl
arpl
inc
push
test
mov
mov
insl
arpl
or
lods
push
aas
mov
xchg
pop
inc
les
in
cmp
daa
add
out
mov
imul
push
add
scas
push
stos
cmpsl
or
fdiv
pop
push
adc
jno
ljmp
scas
sbb
popa
out
cmpsl
mov
xchg
fsubl
cli
aad
sbb
dec
mov
popf
cld
icebp
mov
dec
mov
sbb
inc
outsb
nop
cmp
sub
xor
in
dec
rcr
ret
cltd
xabort
shlb
dec
adc
lods
xchg
out
cmp
push
jno
pop
sbb
aas
clc
sub
enter
cmp
dec
pop
or
cmp
xchg
dec
sbb
out
cs
data16
inc
mov
pop
jae
popa
iret
cmp
mov
clc
pop
stos
sbb
fcom
sbb
jbe
js
shll
dec
jecxz
mov
hlt
shl
add
repnz
ss
lcall
inc
jns
push
xor
into
pop
mov
fcoml
xor
mov
int
pop
ja
dec
movsl
cltd
adc
repz
shlb
xor
stc
imul
and
adc
je
push
sub
lcall
insb
dec
or
xor
ss
inc
cmp
andb
and
out
loopne
push
mov
stos
stos
xlat
or
sub
xor
or
mov
sahf
lcall
dec
or
inc
lahf
push
out
rclb
inc
lods
xor
push
jecxz
add
dec
sbb
fistpl
add
xor
loop
cmp
fwait
scas
ss
add
flds
stc
jge
jbe
mov
insl
dec
xchg
rorb
or
fld
mov
aad
jecxz
xchg
mov
out
out
ror
add
add
loop
test
mov
lds
fidivl
neg
adc
sub
push
div
fs
adc
push
mov
pop
inc
push
sbb
hlt
ljmp
aas
mov
mov
cltd
lahf
in
hlt
fstpl
ret
cmp
sub
test
add
idiv
pusha
dec
iret
aad
and
mov
xchg
pop
adc
jl
xchg
ja
enter
add
aas
push
cli
in
stc
cltd
jp
fwait
adc
popf
jnp
aas
lea
jnp
mov
add
divb
cmp
aad
cwtl
sbb
jnp
clc
in
jnp
enter
stc
adc
jns
pop
sahf
dec
stos
shrb
ds
add
in
mov
xchg
aaa
push
in
pop
mov
and
cmp
lahf
dec
insl
adc
les
xor
mov
ret
je
pop
les
iret
call
or
dec
jns
inc
dec
lahf
mov
shlb
sbb
lcall
enter
addb
fcomps
pop
idivl
cmpl
imul
and
ss
lea
popf
mov
pop
daa
jae
ljmp
in
pop
push
loopne
lret
sub
dec
enter
inc
movsb
dec
push
mov
ror
stos
stc
pop
vpand
iret
fwait
add
pop
push
bound
shrl
xor
add
insb
call
mov
pop
or
ret
xchg
jl
mov
ret
js
push
mov
adc
data16
icebp
xchg
call
adc
lret
sbb
pop
mov
addr16
mov
mov
test
ret
fs
mov
and
outsl
cmp
cmpl
addr16
les
dec
mov
sbb
aaa
or
push
ret
test
pop
in
mov
outsl
stos
cmp
fmuls
xchg
pop
adc
mov
and
mov
leave
decl
hlt
inc
xor
shll
sbb
sub
ds
add
dec
lahf
sub
in
jecxz,pn
xchg
sbb
sbb
pop
cmpsl
add
push
jmp
sbb
lret
popf
stc
cmp
mov
out
and
scas
xchg
scas
xchg
pop
loop
and
jg
scas
and
pop
add
lahf
jl
jp
jl
cmp
movsb
ljmp
mov
fimuls
push
enter
ds
mov
sbb
inc
fwait
mov
btc
subb
dec
sahf
add
scas
cli
and
outsb
xchg
sub
ds
in
jo
push
jbe
jnp
adc
or
xor
mov
lret
pop
xor
add
inc
sti
mov
add
xchg
js
lret
aaa
aam
cmp
cltd
out
outsl
inc
cmc
popf
insl
dec
repnz
mov
imul
push
adc
push
jnp
loope
orb
shll
out
movsl
sbb
leave
jae,pt
cmpsl
cmp
adc
push
jns
adc
push
mov
sahf
lret
cmp
xor
xchg
insb
lea
lock
test
dec
in
mov
cmp
in
cmp
push
and
cmp
js
cld
inc
cmc
cmp
adc
stos
fwait
cmc
or
sub
cmp
mov
jmp
add
mov
jo,pn
adc
push
xor
xor
push
or
sbb
ds
repz
popa
ss
pop
out
push
mov
aaa
jmp
xchg
mov
out
dec
call
imul
jp
xor
inc
test
inc
sub
out
mov
lock
int3
push
aam
jo
pop
loop
fdivrs
mov
push
push
sub
aam
pop
std
sbb
pop
cmp
bound
pop
test
cmp
int3
jp
enter
jp
cs
pop
push
cwtl
cmc
in
vpshld
nop
insl
iret
sub
cmp
and
movsb
jmp
xor
mulb
movsl
mov
adc
add
push
dec
icebp
dec
add
stc
inc
or
mov
leave
fucomp
jl
jno
stos
add
in
sbb
pop
sub
fcoms
add
insb
leave
fistl
push
scas
inc
and
add
ret
popa
mov
cltd
mov
cmpsb
loope
bound
icebp
and
xchg
insb
lret
sbb
inc
cmp
mov
ss
stos
push
push
push
or
push
setbe
cmpsl
clc
outsl
jno
and
push
call
hlt
jecxz
pop
sarb
xchg
cmp
jbe
aaa
lods
push
pop
fs
xchg
xor
sbb
sbb
push
shlb
aas
ror
in
jg
imul
adc
imul
push
inc
mov
sub
orl
pop
int
dec
jecxz
lcall
outsl
pop
addr16
jmp
ljmp
test
jnp
jl
rcr
insl
js
lret
pop
pop
hlt
push
in
jg
mov
pop
cmp
mov
in
ss
cmpsb
mov
shll
adc
aam
mov
sti
dec
daa
sbb
lret
les
mov
mov
fwait
ret
imul
jmp
aaa
bound
jge
jo
and
jnp
in
cmp
dec
cmp
fldenv
andl
dec
arpl
inc
pop
or
loop
popf
mov
sti
mov
xchg
sub
fadds
mov
movsb
std
hlt
sub
ret
fstpt
sbb
mov
inc
or
or
outsl
es
rcrl
mov
pop
les
frstor
in
cmp
movsb
xchg
cmp
jge
aam
and
xor
mov
pushf
stc
cs
cmp
inc
pop
push
xor
pop
xor
or
and
adc
loope
sti
fwait
or
out
xchg
jae
loopne
repnz
and
push
cmp
sbb
dec
cmp
stc
stos
leave
jp
mov
lcall
cmp
xchg
jmp
or
xor
sar
out
mov
and
xchg
nop
popf
pop
dec
adc
sbb
rol
push
or
mov
das
repnz
mov
fstps
lea
mov
rcrl
xor
mov
jle
enter
andb
fstl
push
ficoml
jg
pop
sub
je
shl
mov
lcall
in
mov
jg
jns
movsb
or
js
jnp
jmp
jg
add
aam
mov
idivb
jb
loop
insl
outsl
sbb
iret
mov
je
jae
rorl
sarl
shll
xor
fcmovnbe
or
add
out
mov
cmpsl
dec
pusha
mov
mov
lret
dec
or
inc
mov
cs
mov
sahf
mov
adc
mov
dec
rolb
push
mov
imul
fldenv
mov
scas
popf
inc
xlat
out
jns
orl
cltd
lods
adc
sahf
invd
mov
sbbl
out
fwait
repz
add
pop
aad
adc
lea
fadds
adc
aas
adc
pop
or
dec
stos
xchg
adc
cmp
cs
xchg
mov
inc
cwtl
or
pop
pop
cmp
lock
and
data16
mov
lcall
mov
sbb
or
mov
addl
inc
adc
sub
xchg
mov
orb
jl
push
adc
cli
xorb
xor
aam
in
stc
sbbl
outsb
or
addr16
fimull
adc
pop
icebp
xor
inc
data16
mov
int3
pop
mov
xchg
jl
cltd
mov
fcmovne
jne
and
or
adcl
or
push
mov
je
mov
mov
add
push
add
lahf
push
mov
inc
iret
call
fidivrl
outsl
aad
cmp
ss
addr16
xchg
int3
mov
adc
lret
push
xchg
cmp
add
jle
push
sbb
out
mov
push
jle
mov
push
rcll
pop
roll
sbb
inc
xor
fwait
in
lret
cmp
pop
lret
push
cmpsl
insl
daa
stos
cs
xchg
sar
sbb
in
push
pop
leave
inc
xorl
jg
jle
add
push
mov
inc
and
std
dec
push
xor
test
sub
dec
pop
mov
in
ret
cmp
sbb
and
pop
test
fisttpll
pop
or
movsl
jo
inc
andb
add
fldenv
in
jno
test
jbe
inc
mov
inc
cwtl
pop
insb
or
cs
sbb
rcll
mov
daa
and
jge
repnz
sbb
inc
ljmp
pshufw
inc
aad
fiaddl
mov
inc
jl
test
leave
mov
lcall
rcll
insl
push
gs
jb
mov
xlat
dec
fildll
pop
test
fidivrl
divl
js
aam
dec
iret
dec
out
mov
mov
imul
filds
ficomps
mov
push
jl
addr16
enter
insb
mov
and
push
mov
subb
jae
push
scas
sbb
and
out
push
scas
add
test
push
push
mov
lods
and
add
mov
fwait
subl
loop
dec
out
stc
sub
xor
out
ficoms
xor
mov
dec
mov
jg
sub
es
sbbb
sbb
push
pop
xchg
add
fcomps
subl
add
cmp
or
or
cmp
sbb
idivl
inc
inc
ret
addr16
adc
pop
jns
icebp
jb
mulb
mov
cmp
add
push
jge
popf
es
ret
mov
fcomi
es
dec
cli
sahf
mov
je
and
ficoml
cmp
or
xchg
outsl
xchg
pop
inc
mov
dec
jbe
movsl
inc
jg
xor
mov
xor
and
jnp
mov
and
ja
and
xchg
jecxz
push
out
ja
mov
sbb
mov
xor
adc
mov
popf
inc
mov
aas
mov
push
add
mov
lds
dec
jbe
cld
fsts
dec
leave
cld
daa
das
in
jbe
outsl
push
pop
fimuls
jns
aam
or
jmp
jecxz
xorb
js
jno
adc
xlat
mov
pop
adcb
sub
and
pop
xchg
add
lea
sub
inc
sbb
push
mov
and
adc
push
mov
imul
xchg
ljmp
pusha
ret
scas
fadds
sbb
in
nop
loope
push
push
fisubrl
add
addr16
cmp
ss
into
icebp
xchg
mov
movsb
mov
jo
fcompl
fldl2t
sbb
dec
fnstcw
sbb
imul
adcb
clc
adc
test
and
push
lods
inc
pop
pop
xchg
fiaddl
imul
imul
sbb
adc
insb
inc
pushf
inc
fs
sahf
cmp
rorl
xchg
mov
jmp
push
rcll
and
addr16
jne
nop
sbb
fmulp
pop
test
mov
in
cmp
incb
call
lahf
xor
sbbb
cs
sti
push
xrelease
lfs
push
enter
fsubs
cmpl
xchg
mov
jl
les
imul
xchg
lock
lds
cmpb
loop
ljmp
or
xchg
testb
sti
push
xor
fcomps
sti
out
and
push
ret
out
and
popa
sbb
es
pop
cmp
sti
adc
or
fdivrl
iret
sub
bound
jae
jns
in
out
mov
jmp
fdivl
sub
arpl
sub
mov
mov
emms
cwtl
sub
sbb
adc
out
sbb
jl
adc
lods
add
clflush
call
pop
mov
lahf
mov
sbb
sub
hlt
mull
mov
inc
in
repz
mov
ret
jae
fnsave
repnz
aaa
sub
faddl
test
std
mov
dec
adc
add
and
add
lcall
ds
shrl
gs
or
fsubp
sarl
jle
jge
jne
clc
inc
sahf
ljmp
dec
xor
leave
add
mov
pop
pop
mov
pop
mov
adcl
jo
sbb
inc
sahf
addr16
iret
or
adc
pop
xchg
xlat
ret
shll
and
pop
daa
xor
jg
ss
jnp
scas
mov
jle
xchg
mov
pushf
andb
push
stos
test
lret
mov
add
out
push
test
mov
mov
lock
hlt
adc
call
mov
mov
and
repz
fildll
mov
out
and
shrb
add
push
mov
cmpsl
pop
mov
arpl
dec
add
cmp
add
jnp
adc
pop
test
adc
cs
inc
int
test
out
push
mov
test
cs
or
pop
pushf
mov
xchg
aas
sbb
sbb
test
fwait
pop
jle
insb
or
sbb
call
stos
push
fldenv
test
push
push
pop
test
mov
jmp
mov
add
adc
add
inc
jle
xchg
mov
adc
inc
sub
lcall
or
pop
jle
inc
outsl
xchg
btr
in
dec
ret
and
mov
dec
dec
add
jne
int3
push
adc
call
or
in
push
popf
xchg
clc
adc
in
adc
les
pop
jae
scas
add
sub
push
push
pop
pop
jo
xchg
xchg
enter
rorl
iret
movsl
scas
push
push
mov
or
jns
mov
adc
fiadds
cmp
and
or
dec
push
addl
or
lret
inc
and
jmp
ret
dec
push
in
sub
test
add
nop
js
xor
outsb
mov
add
movsb
push
outsl
sbb
mov
push
into
pop
jmp
mov
push
lea
hlt
lock
mov
lods
and
js
mov
push
fbstp
cs
fistpl
in
notb
jno
in
ficompl
outsb
jnp
aas
mov
mov
stc
or
das
int
jo
sub
adc
gs
daa
push
movsb
data16
orb
and
xchg
lcall
mov
inc
aam
pop
repz
fdivrl
lahf
jae
xor
stos
iret
std
xchg
enter
ja
int
mov
sbb
pop
jl
mov
sbb
andl
and
cmp
add
jo
dec
cmc
mov
rcl
aam
mov
mov
lods
jecxz
aad
icebp
es
push
push
dec
xchg
andl
insl
bound
xchg
jnp
sub
fxtract
sub
xchg
mov
adc
add
scas
cmp
xchg
mov
add
pop
aad
sahf
add
add
hlt
icebp
fs
inc
push
dec
int3
iret
aam
push
fld
xor
cli
roll
mov
hlt
xor
sbb
xor
xchg
ljmp
pusha
mov
cld
xor
cli
sub
mov
out
adc
jo
mov
ds
lret
sub
dec
cvtpi2ps
jno
jno
iret
sbb
jg
xor
movsb
or
jge
test
out
and
pushf
and
insb
stos
cmp
jg
les
stos
test
inc
lods
adc
lret
mov
repnz
data16
inc
mov
sbb
lock
gs
rcr
push
pop
sbb
sbb
lds
adc
push
sbb
jo
lret
orb
fcom
loop
jecxz
fisttpl
loope
popa
pop
fimull
or
mov
add
dec
mov
into
call
mov
in
in
jnp
push
int3
push
mov
mov
sbb
mov
dec
scas
popa
jns
stos
stos
jge
fucomip
imul
imul
cmpsb
lret
lods
pop
cmp
push
test
mov
xchg
push
jp
jg
call
and
sbb
push
mov
xor
push
and
push
or
fstl
rcrb
arpl
cltd
jl
or
repz
sti
cli
mov
ja
pop
scas
imul
cmp
arpl
push
lret
cmp
outsl
hlt
adc
sbb
mov
xchg
adc
notb
jo
mov
ljmp
pusha
xchg
repz
sub
or
sub
jnp
and
or
sbb
orb
in
xchg
addr16
in
xor
cmp
xor
xor
mov
and
sub
aas
push
call
rcrl
push
jbe
push
inc
xlat
leave
fs
sub
xchg
int
lret
push
add
out
and
sbb
jmp
dec
arpl
dec
rol
cmp
jle
and
int3
fnstcw
sub
lods
cwtl
fwait
add
jae
push
or
ret
leave
dec
xorb
mov
int3
pusha
sbb
add
leave
nop
cmp
enter
ss
in
cmc
adc
sbb
loope
lret
mov
inc
sbb
xor
cmpsl
movb
mov
rcrl
pop
add
jno
aam
pushf
xchg
xor
jge
jmp
mov
xor
jb
int
dec
or
test
or
xor
data16
popf
ror
sar
popa
jl
cmp
sub
xchg
mov
dec
ficomps
mov
push
enter
aaa
push
outsb
adc
test
popa
lea
xorb
shrb
push
cwtl
cmp
cmp
jno
fmull
cs
lcall
int
scas
pop
push
xor
add
jae
xor
les
fisubrl
and
cs
ljmp
and
inc
pop
sub
push
stos
repnz
dec
test
stos
test
jl
cmp
inc
ss
dec
enter
shlb
jbe
outsl
sbbb
jge
push
and
mov
adc
cltd
mov
ss
bound
in
pop
mov
insl
cmp
push
popaw
pop
sub
inc
or
sbb
lock
movsb
test
nop
jne
or
pop
mov
lret
and
int3
fists
aas
cmp
hlt
mov
cmp
ds
test
and
pop
sbb
cmp
jne
xor
dec
mov
sti
and
xor
inc
push
push
mov
push
mov
xor
or
push
je
xchg
lea
xor
test
or
sub
or
inc
movsb
mov
jg
lock
sbb
cmp
pop
div
pop
push
popf
inc
mov
dec
pop
pusha
pop
cmpsb
lods
pop
in
addr16
dec
or
mov
test
adc
push
bound
sbb
add
mov
xor
sbb
int
sbb
push
jecxz
sbb
in
cmpsb
bound
lcall
enter
icebp
mov
stos
pop
fwait
xlat
in
xchg
push
jbe
add
lock
mov
sti
add
je
fwait
imul
mov
pop
out
fistpl
out
add
fwait
inc
shlb
jns
push
fildll
xchg
dec
pop
xchg
pop
orb
jns
mov
cli
pop
dec
dec
idivl
subl
cli
mov
xor
aad
mov
andb
test
lods
dec
adc
test
test
lcall
in
leave
repnz
pop
pop
dec
ds
or
out
jge
lock
cs
scas
sub
jg
xchg
ljmp
add
sbb
mov
xchg
rorb
in
lock
adc
or
je
jns
and
in
popf
cmpsb
jg
fidivs
fs
sbb
add
and
arpl
inc
insl
xor
dec
add
mov
or
stos
jle
xor
cmpsb
push
xor
sbb
hlt
inc
jecxz
jbe
insb
dec
int
insl
addr16
jl
adc
push
and
push
cmc
bound
addr16
lcall
hlt
xchg
sbb
int3
mov
push
iret
cmpsb
xor
daa
movsl
adc
lahf
push
scas
mov
inc
mov
mov
or
cmpsl
in
test
js
arpl
push
iret
jne
sub
push
test
xor
add
lret
mov
push
outsl
ljmp
je
test
fistps
sbb
imull
push
test
add
fidivrl
and
in
nop
lock
repnz
popf
dec
pop
cmpl
adcb
add
xchg
out
insl
in
dec
lret
jno
movsl
ret
outsb
movsl
dec
popa
lock
gs
ret
adcb
jns
jp
ficoms
jno
add
int
cmp
fsubs
jbe
shufps
in
dec
mov
cli
add
hlt
xchg
inc
mov
aaa
test
pop
or
mov
mov
gs
fcoms
aaa
push
pusha
test
push
jl
xchg
pusha
fwait
mov
push
sbb
ficoml
icebp
test
xchg
imul
mov
and
mov
xor
jg
rolb
dec
add
movsb
dec
sub
out
ficoml
xor
scas
xor
les
les
add
in
in
das
sub
ss
sub
push
push
cli
and
imul
les
xor
ret
xor
xor
mov
xchg
outsb
punpckhbw
cmpsl
mov
sti
leave
jle
jmp
push
nop
sbb
lea
faddl
cmp
adc
add
in
stos
mov
adcb
scas
xchg
adc
subl
icebp
sub
lcall
pop
fst
repnz
xchg
outsl
sub
stc
mov
cmp
dec
fstps
lahf
mov
sub
testb
ret
aaa
mov
xor
fldenv
push
or
push
push
arpl
outsb
in
or
pop
pop
inc
into
ret
mov
test
cmp
cmp
stos
pushf
popa
imull
dec
inc
loope
jle
stc
xlat
enter
and
and
insb
sbb
and
test
adc
inc
loopne
pop
dec
pop
data16
dec
mov
stos
jmp
mov
out
stc
nop
pop
rol
mov
mov
test
add
fisubl
dec
mov
mov
ret
push
mov
xlat
jl
test
add
mov
inc
mov
add
cmp
or
xor
push
sbbl
hlt
hlt
into
dec
mov
mov
fisubrl
pop
lea
dec
xorl
in
adc
inc
ss
push
and
xchg
mov
lock
mov
jmp
popl
push
xchg
movsl
nop
adc
lods
add
inc
call
or
push
out
push
sbb
mov
add
xchg
cwtl
pop
lea
jge
push
jp
js
js
xchg
cmp
sub
testb
adc
loopne
jne
fmull
adc
pop
int
cmp
aaa
add
jg
sbb
xor
pshufw
inc
adc
in
lock
mov
add
lods
mov
fwait
dec
ret
dec
iret
int
jg
aaa
and
xchg
mov
in
ljmp
or
add
and
cmp
xchg
sub
movsb
push
cmp
jnp
stos
hlt
dec
sbb
lret
push
sahf
loop
mov
repz
mov
outsl
push
push
inc
adc
scas
or
ror
inc
xchg
jmp
adc
xchg
sub
int3
push
jg
sbb
or
cmp
popf
mov
add
mov
mov
fcom
rclb
out
imul
jecxz
in
imul
les
and
mov
fldcw
out
enter
pop
jmp
mov
scas
enter
pop
or
and
arpl
out
and
nop
adc
out
jne
ljmp
jge
inc
in
and
push
inc
push
stos
dec
xor
repz
fisubs
sti
pop
or
sti
and
gs
ljmp
cmpsb
mov
dec
jne
mov
cmp
and
push
sub
roll
in
dec
pop
mull
lds
jecxz
cli
arpl
mov
fdivl
out
loop
lahf
jmp
stos
cmp
ret
je
fs
dec
mov
inc
stos
mov
lods
call
test
mov
fisttpl
inc
mov
inc
rcr
adc
mov
mov
mov
leave
and
mov
pop
shrb
adc
stos
test
das
cmc
mov
mov
dec
xchg
lret
add
imul
or
jle
push
pop
xor
fmul
pop
push
jg
lcall
xchg
mov
rorl
pop
es
pop
test
adc
lahf
fwait
shll
add
dec
mov
out
add
rcrb
or
xchg
or
mov
pop
pop
jnp
movzwl
adc
jnp
in
fbstp
mov
das
dec
add
sub
xchg
fiadds
stc
int3
stc
lock
vpshlq
jb
xor
unpckhps
scas
push
sbb
inc
cmp
fbstp
add
pop
mov
xor
int3
jecxz
rolb
gs
stos
cmp
repz
out
movsl
les
sti
aas
pop
fdivr
jno
stos
sub
xchg
add
rcrb
outsb
in
jl
mov
add
xchg
testb
mov
je
dec
add
mov
pushf
add
mov
ss
xchg
and
sti
add
mov
stc
xchg
jecxz
xor
mov
xor
xchg
sbb
gs
cmpsb
mov
loope
jp
pop
dec
movsl
or
fs
out
sbb
xchg
jge
addb
outsl
xor
lahf
add
shlb
push
dec
xor
fcomps
shrb
fisttps
dec
lahf
add
sbb
iret
arpl
or
and
sbb
je
lods
outsl
outsl
jp
sbb
icebp
push
repz
outsb
jbe
aas
mov
in
sub
jl
mov
fcmovu
push
mov
xor
mov
dec
inc
xchg
outsl
call
cmp
faddl
or
jno
push
push
jo
out
movsb
or
push
push
or
jns
push
popa
icebp
xor
insl
mov
sub
loopne
mov
mov
lock
sbb
andl
pushf
jecxz
dec
divb
fisubl
es
icebp
mov
hlt
sbb
std
jo
adc
test
push
xchg
ret
mov
pop
nop
mov
in
fs
adcb
fists
ja
jecxz
inc
pop
shrb
mov
xor
je
lea
rcr
pop
jae
repnz
dec
pusha
lcall
add
xchg
arpl
add
inc
cmc
cmc
cltd
xchg
aas
cli
mov
xchg
pop
xchg
out
sbb
sahf
icebp
sbb
call
pop
int
leave
js
sti
mov
cli
and
sub
push
lahf
inc
inc
pop
cmp
fisttpl
add
push
int3
dec
mov
xchg
adc
dec
mov
data16
fwait
lods
insl
fisubl
inc
scas
ds
mov
dec
test
and
into
jns
mov
mov
es
mov
cmp
ja
or
mov
movsb
add
pusha
cltd
mov
pop
loope
lods
mov
xchg
test
pop
push
ficoms
jecxz
mov
cli
pusha
sbb
lods
mov
loop
push
adc
cmpsb
or
add
mov
jnp
sub
jne
mov
out
js
fnstsw
pusha
data16
cltd
rcl
sub
stos
sub
cmc
sbb
or
daa
add
xor
stos
aad
clc
push
add
lret
test
lods
xchg
orb
out
fisubrl
jbe
xor
mov
mov
jecxz
xchg
call
sub
rcll
mov
arpl
lock
push
ret
ret
sub
in
pop
loop
xlat
adc
mov
jg
andb
repnz
xchg
push
out
pusha
hlt
mov
sbb
xor
test
sarl
inc
lds
out
dec
push
incb
in
das
pushf
bound
cmpsb
scas
xchg
imul
sbb
fstps
jle
sub
test
outsb
int
add
pop
jge
shrl
insb
call
cs
add
cmc
cwtl
inc
enter
fwait
add
lods
je
mov
int
jno
sbb
sub
mov
arpl
outsl
sahf
pop
pop
loope
jae
mov
mov
dec
call
fdivr
adc
mov
insl
vpshuflw
jl
fwait
dec
cmpsl
scas
loope
aaa
mov
out
dec
push
iret
std
dec
or
movsl
fs
sub
inc
add
sub
sbb
daa
jbe
movsl
mov
sub
sbb
leave
sti
fwait
stc
and
dec
mov
jb
or
lods
add
nop
jmp
xchg
insb
dec
jp
mov
imul
sbb
inc
incb
out
enter
mov
shlb
pushf
ret
cltd
iret
inc
adc
mov
mov
rol
and
cwtl
sub
and
xlat
lods
test
mov
pop
nop
cltd
outsb
cwtl
mov
or
fwait
dec
add
jl
jnp
jl
jo
ret
push
outsb
push
lcall
hlt
xchg
xchg
popf
dec
push
out
xchg
lock
mov
pop
dec
and
mov
test
enter
test
mov
mov
and
int
clc
inc
mov
cld
cmp
out
jg
popa
popf
pop
inc
and
mov
xchg
les
loop
or
inc
inc
sub
jae
sbb
mov
dec
gs
aas
sti
ja
pcmpgtb
pop
loop
mov
es
in
cmpsb
enter
inc
pop
xchg
js
pop
andb
in
push
aas
sub
shrb
test
ficomps
test
fsubrs
in
ja
jo
jnp
and
or
adc
fidivrs
imul
les
adc
rcrb
cmp
cli
test
out
jae
bound
lahf
mov
ss
fs
das
shll
adc
loope
mov
push
sarl
inc
sub
and
imul
jge,pn
inc
lods
pop
rolb
xor
and
int
loop
push
mov
or
cwtl
test
leave
sub
jb
ror
xor
push
inc
xchg
movsl
xor
adc
or
pop
dec
pop
scas
xor
incl
mov
add
lods
cmp
dec
add
fisubrl
jmp
inc
cltd
adc
das
sbb
mov
push
adc
or
mov
iret
push
cld
push
adc
mov
mov
das
mov
and
mov
xor
testl
cwtl
repnz
nop
lcall
mov
leave
push
cs
jl
in
imul
mov
mov
mov
pop
xchg
mov
test
fxch
into
adc
shll
lock
lea
pop
jb
insl
push
test
lret
cmpsb
mov
adc
push
add
xchg
push
insb
insl
stos
ljmp
daa
xor
ja
sbb
inc
mov
sar
in
js
fsubp
orl
pop
pusha
fnstenv
int3
xor
lret
cmp
fwait
xlat
ljmp
mov
test
lret
enter
in
adc
mov
mov
out
mov
pop
xchg
lods
addr16
fs
ja
dec
push
or
sahf
inc
xor
imul
adc
push
lods
fstpl
into
pusha
es
movntq
out
jl
lahf
mov
call
icebp
inc
in
bnd
cmpsl
jle
mov
mov
ljmp
mov
mov
sbb
or
add
jbe
pusha
mov
adc
sbbl
add
xor
int
jg,pn
mov
test
arpl
xchg
sahf
daa
push
cli
rclb
xor
lods
cmp
mov
andl
test
jbe
roll
mov
mov
sti
xor
or
dec
int3
lret
xor
in
in
pop
out
ds
incb
int3
mov
pop
je
rcrl
rcrb
cmc
cmp
inc
sbb
sbb
outsb
and
push
push
xor
add
roll
lods
sbb
cld
cmpsb
cmpsl
xchg
sbb
fbstp
ljmp
stc
jae
push
aas
out
scas
test
test
and
xchg
pusha
add
clc
pop
daa
fdiv
jbe
data16
push
sub
pop
sbb
cwtl
dec
dec
xor
rolb
shrb
lahf
std
call
xor
inc
ror
push
enter
sub
cmpb
mov
repnz
pusha
jae
stc
pop
subl
hlt
sub
bound
orl
push
loop
push
and
mov
fsub
inc
js
ja
jo
int3
ja,pn
sub
shlb
lahf
jge
xchg
mov
push
test
adc
in
push
mov
cmp
leave
mov
push
test
add
test
lret
jp
dec
inc
pop
iret
les
bound
shl
pop
lods
rorb
inc
test
ds
lods
leave
sbb
push
mov
test
or
adc
push
cli
or
xor
add
jge
adc
test
cmp
and
pop
mov
and
jne
mov
push
inc
push
lret
fistl
cmc
movsb
and
pop
popa
push
in
mov
jb
outsb
ljmp
sbbb
add
mov
inc
jnp
das
pop
inc
leave
inc
push
mov
pop
andl
scas
jae
hlt
je
pop
iret
pop
push
test
pop
inc
call
or
cmp
push
das
and
out
push
push
dec
sub
repnz
fs
inc
mov
mov
push
mov
push
ljmp
sub
jecxz
fistl
push
pushf
sbb
mov
xlat
call
call
push
inc
fiaddl
push
push
push
sub
jns
sahf
sub
xchg
ss
xchg
repz
iret
adc
loopne
fistl
or
jmp
mov
and
mov
in
pusha
cltd
mov
outsb
in
add
fiadds
or
mov
sbb
add
pop
into
repz
pop
fwait
cs
mov
aad
and
jl
or
jno
in
fmulp
ja
lcall
sbb
xlat
xchg
cli
mov
sahf
sti
pop
nop
into
aaa
out
mov
push
jns
add
jg
movsl
and
mov
pushf
and
pop
lret
xchg
jmp
adc
xor
xchg
cmp
inc
movsb
jnp
pusha
outsb
js
or
in
push
add
dec
adc
out
loope
stc
jns
stc
sub
push
xor
jge
fstl
scas
xorb
push
icebp
push
cmp
push
and
sbb
inc
hlt
inc
fneni(8087
scas
scas
mov
mov
mov
pop
cltd
mov
mov
push
roll
pop
inc
ljmp
xor
add
arpl
xor
ljmp
cld
shrl
sbb
shlb
cmp
and
jg
pop
adc
mov
cmpsl
mov
popa
cli
xor
pop
dec
mov
xor
ja,pn
and
adc
clc
dec
xor
dec
pop
jnp
jne
testl
add
fcoms
fiaddl
dec
test
mov
imul
jle
scas
mov
inc
mov
sbb
pop
adc
in
xchg
xchg
jle
loopne
push
pop
rorl
inc
gs
sub
sbb
adc
xchg
mov
aad
hlt
cltd
sub
scas
and
popf
fld
sbb
xor
out
and
cmp
sbb
or
and
stos
xor
fistpl
pop
pop
dec
mov
mov
inc
sbb
mov
add
daa
and
mov
add
sahf
or
mov
scas
jo
cmp
pusha
outsl
lret
mov
add
adc
hlt
addr16
int3
inc
cmp
std
inc
pop
sub
jno
movsl
addl
push
mov
jb
pop
out
and
push
push
lret
ja
dec
or
cltd
mov
repnz
sub
mov
jl
xchg
dec
cmc
gs
adc
sub
repz
fldl2e
dec
push
into
push
push
fnstcw
pop
aam
or
in
adc
xorb
sbbl
fsubrl
pushf
xor
sbbl
pop
push
lcall
sub
xlat
mov
or
rorl
mov
adc
cmpsb
mov
cli
pop
rol
loop
mov
mov
inc
jno
cs
mov
popa
cmp
cmc
mov
sub
aas
cmp
inc
test
xor
sub
or
xchg
or
xchg
push
repnz
imul
pop
push
outsb
test
dec
out
xchg
aam
mov
or
int
js
stc
mov
xchg
push
popa
dec
mov
insb
test
xorl
cli
push
dec
repz
sub
test
shl
rcl
movl
mov
cwtl
in
cmp
dec
and
stc
in
loopne
mov
push
popf
cltd
jmp
dec
pop
fisttps
add
adc
popf
enter
stc
xor
mov
jl
scas
inc
jno
pop
cmp
andb
jno
mov
or
pop
push
pop
sub
or
push
sub
scas
xor
enter
or
psubw
rolb
mov
dec
call
loopne
cmp
iret
test
inc
inc
movsb
pushf
cs
push
pop
ret
adcl
cld
mov
movzwl
mov
cwtl
mov
sbb
xchg
out
ss
sbb
push
xor
mov
rorb
and
fwait
lods
add
mov
mov
in
bound
cmp
sar
push
mov
loopne
or
test
idiv
in
cld
popf
int3
icebp
cmp
xor
sub
jp
sti
insl
lahf
es
push
inc
scas
xchg
inc
hlt
sbb
add
pop
out
shll
idivb
pmullw
jb
lock
mov
sbb
fisttpl
xchg
jp
jmp
and
in
out
fninit
or
fisttps
push
mov
mov
mov
xchg
dec
sub
jbe
push
fdivs
jb
sub
jl
and
stos
and
pop
adc
insl
lret
mov
mov
scas
stc
dec
mov
sbb
dec
sahf
add
add
repz
xchg
mov
xor
sti
daa
je
insl
cmc
loope
push
mov
sub
sub
cwtl
ret
inc
push
xor
push
cltd
sub
js
lods
jb
and
fwait
dec
ret
pop
or
or
xor
adc
repz
movsl
sub
and
jle
ret
or
inc
jle
cmpsl
cwtl
xchg
or
out
add
fiadds
cmp
rcrb
fs
xchg
jl
icebp
mov
dec
movl
adc
add
and
add
loopne
call
mov
adc
outsb
lahf
jb
aam
out
sub
or
out
in
mov
mov
fwait
test
fdivl
and
ud2
call
notl
sub
test
jns
loope
push
std
push
sbb
jge
pusha
out
scas
cmp
inc
cltd
and
pop
jge
jae
in
shlb
xchg
or
inc
pop
loope
xlat
test
sub
fstpt
mov
daa
jae
int
adc
add
js
mov
fnstsw
cmp
hlt
jnp
cld
bound
cmc
mov
mov
jecxz
imul
mov
push
pop
jmp
cmp
call
sbb
jp
movsl
add
sti
data16
jns
xchg
xor
aam
enter
sbb
jne
out
or
sub
mov
iret
xchg
push
daa
adc
jbe
jecxz
lods
sbb
stos
push
sub
and
adc
lahf
pop
sbb
pushl
push
lds
mov
ljmp
mov
fsubrs
in
fwait
xchg
fldl
xchg
or
mov
jge
push
mov
mov
pop
subb
pop
push
out
jb
sub
push
xchg
cmp
sarb
hlt
addb
cmp
xor
iret
jg
dec
sbb
inc
lret
or
and
ret
cmpl
mov
pop
pop
fwait
dec
dec
add
gs
ss
xor
xor
lea
cmp
clc
int
mov
sub
leave
rcrb
in
mov
cmp
sbb
lds
cmp
pop
jp
ret
mov
fidivs
pop
pop
push
jecxz
mov
loop
cmp
mov
add
adc
cmp
ret
mov
lods
adc
pop
int3
push
pop
xor
out
fwait
mov
pop
scas
movsl
loopne
out
cmpsb
push
test
pop
pop
mov
loop
add
pop
jns
cltd
push
or
xchg
add
add
mov
cltd
push
mov
dec
ficomps
mov
aaa
cli
lcall
stos
add
incb
in
inc
dec
dec
lret
push
popa
mov
mov
pop
pop
leave
dec
stc
jl
pop
mov
nop
inc
out
sub
aam
movzbl
outsb
xchg
sub
mov
lret
dec
dec
in
in
movsb
cmpl
jp
jl
or
fs
jno
rolb
jmp
scas
inc
out
fwait
dec
add
scas
je
pusha
dec
lock
or
and
rorb
push
jecxz
rorl
insl
sbb
cmp
pop
adc
mov
into
aas
popf
negl
inc
jo
push
xchg
xor
lods
push
cli
ljmp
add
mov
movsl
pop
fstpt
push
les
xor
dec
int
pop
xchg
fbld
es
clc
jbe,pn
hlt
mov
inc
sarl
or
inc
push
mov
imul
jmp
popf
pop
scas
out
push
push
sub
mov
cmp
es
jp
scas
pusha
popa
repnz
sbb
jg
loop
sub
cmc
mov
cmp
cmc
adc
inc
insl
lock
dec
inc
scas
cmc
test
in
xchg
jle
and
aam
mov
test
filds
ret
or
cld
xor
movsl
insl
scas
inc
jge
cld
xor
mov
test
pushf
dec
push
cmp
mov
fisttps
enter
push
sub
cli
fstpt
inc
jge
ficomps
insb
mov
sbb
push
leave
lods
in
subb
cmc
pop
fldl2t
sti
es
adc
mov
mov
test
sbb
jecxz
mov
idiv
fmul
leave
std
mov
call
mov
int
or
cmpsb
int
xor
add
push
in
push
and
enter
loope
or
ljmp
xlat
cmp
jo,pn
repz
mov
add
enter
cmp
out
push
aas
add
cld
push
inc
inc
fimuls
mov
and
cmp
sub
fld
dec
mov
jo
and
into
call
cltd
les
xor
loopne
mov
lods
js
leave
mov
and
xchg
scas
daa
cmp
pop
or
pusha
mov
movsl
out
add
insl
dec
pop
mov
adc
sbb
xor
repz
gs
push
popa
mov
mov
outsb
les
add
cmp
fisubs
add
or
aas
jnp
cmp
mov
xchg
imul
cmp
ds
js
addb
and
and
add
shlb
cmp
in
xchg
xlat
repnz
std
and
jmp
scas
and
movsb
imul
push
push
lret
mov
mov
dec
xchg
push
pop
sub
push
xlat
in
inc
xlat
add
sbb
iret
pusha
fwait
shll
das
xchg
scas
push
inc
inc
fstl
xchg
ficoms
pop
mul
or
add
out
mov
mov
jge
icebp
aaa
ret
popl
or
ja
aad
loopne
mov
inc
lods
in
mov
cld
push
sub
punpcklbw
sbbl
cmp
leave
inc
inc
into
test
adc
gs
xor
bound
lcall
xor
cmp
push
lods
or
pop
arpl
cmpl
adc
xor
add
mov
ret
and
mov
fwait
add
popa
repz
cmp
rolb
outsl
repz
ret
loop
shr
push
test
pop
fisttps
fidivrs
cs
int3
xor
scas
mov
and
data16
adcl
cmpsb
out
sti
out
in
sbb
and
pusha
ss
lret
or
mov
and
and
jmp
je
int3
sub
jno
xchg
inc
cld
stos
testb
bound
fwait
push
mulb
scas
push
sahf
int3
imul
in
iret
pop
dec
mov
or
push
sub
cmp
in
mov
pop
mov
mov
sbb
and
sbb
mov
sub
mov
adc
xchg
test
sbb
out
cwtl
cmc
mov
std
xchg
in
shll
xor
lods
xchg
mov
call
mov
cld
xchg
jns
pop
cmpsb
push
repz
cmp
xchg
jmp
in
cmp
ss
push
out
add
and
xor
and
xchg
pushf
sbb
cs
sbbb
pop
in
xchg
movsb
ja
inc
scas
outsl
lods
dec
mov
stos
xor
xchg
imull
das
jno
sub
mov
or
adc
cmpl
push
jecxz
mov
cld
insl
pop
cmp
arpl
push
and
fidivrs
push
mov
inc
and
xchg
pop
lcall
es
scas
fnstenv
adc
sub
sbb
mov
push
inc
mov
push
es
pop
cmpb
lods
clc
push
cmp
shlb
lahf
jge
ret
test
out
inc
scas
std
sub
call
fld
cmp
addr16
enter
ficoms
movsl
and
adc
cld
sbb
jnp
and
pop
jp
push
sbb
inc
mov
loopne
inc
push
mov
xor
jge
setbe
xchg
fstps
sarl
fstps
mov
imul
xor
jp
gs
jbe
mov
mov
sub
fldt
cmpsl
or
fstpt
loopne
cmp
mov
cmp
stos
lret
push
xor
int3
fnsave
inc
dec
sbb
and
imul
shr
sbb
adc
fists
shll
push
aaa
pushf
add
loop
test
ds
or
mov
test
arpl
or
aas
inc
inc
push
daa
xchg
xchg
jb
and
push
cwtl
pop
add
push
and
testb
out
shrb
das
push
cltd
fscale
imul
inc
je
mov
and
bound
pushf
mov
adc
push
imul
fwait
enter
cli
mov
leave
xchg
adc
ds
fnsave
dec
push
leave
lcall
inc
cmpsl
xchg
mov
sahf
mov
xchg
inc
mov
push
ds
ss
hlt
pop
mov
and
cli
sub
and
lds
push
stos
aad
jns
push
cli
sub
mov
sbb
es
mov
out
xchg
rcrb
push
jae
xchg
bnd
shrl
xchg
inc
lods
xchg
inc
mov
pop
dec
xchg
pop
add
cmp
mov
mov
xlat
fstp
dec
test
addr16
int
rcr
adc
sahf
pop
lret
mov
js
ror
je
shlb
jb
cmpsb
cmp
fistpll
fnstsw
sub
and
test
enter
fwait
shrl
pop
stos
in
jle
xchg
push
dec
int
into
sbb
push
xor
inc
mov
push
jle
lahf
pusha
loopne
bound
mov
mov
lods
xor
stos
mov
push
add
imul
mov
push
xchg
xchg
push
test
adc
cltd
mov
bound
pop
xchg
jo
jb
push
adc
pop
pop
scas
shll
add
in
mov
jne
cmpsb
fstpt
lahf
inc
sti
pop
or
pop
fdivs
mov
shrl
dec
pop
jo
mov
dec
mov
pusha
out
sbb
fs
in
test
arpl
mov
repnz
ljmp
or
jbe
frstor
loopne
aas
pusha
into
mov
push
scas
jae
stc
inc
inc
ds
movsl
lret
mov
sub
jb
aad
xchg
mov
inc
lods
sub
push
jnp
jno
fsubrs
out
scas
cli
cmc
out
sbb
std
mov
xchg
sub
push
fs
or
iret
or
pop
push
lcall
das
fimuls
cmp
adc
hlt
movsl
shll
sub
inc
cmp
inc
mov
addl
stc
lods
aas
bound
pushf
fnstsw
fildl
mov
popa
and
cwtl
movl
loop
cmpl
inc
out
and
orl
mov
inc
jecxz
pop
sub
lcall
and
mov
pop
sub
loope
out
loope
pop
pop
out
rcrb
lock
xchg
repz
push
push
xor
push
mov
xor
mov
or
int
stc
lahf
imul
cmp
add
cmpsb
call
cmc
mov
bound
sbb
xchg
iret
ficomps
repz
adc
mov
sbb
jbe
mov
iret
into
mov
mov
sbb
cmp
loop
addr16
call
das
mov
jno
loopne
add
movsl
inc
push
add
dec
lret
cwtl
test
lret
or
pushf
out
inc
stc
aam
inc
and
or
iret
aad
inc
add
inc
mov
adc
jmp
stos
mov
bnd
rcrl
fisubl
lock
pop
add
fcoml
inc
cld
add
xchg
fistps
cmp
inc
mov
mov
xchg
jb
jb
ret
or
jp
fs
hlt
jge
jp
mov
xchg
aaa
bound
xor
mull
jo
pop
adc
outsl
add
pop
loop
leave
ljmp
jo
leave
out
out
ljmp
in
jl
aas
sbb
mov
mov
dec
jmp
ljmp
dec
jns
aas
test
mov
jg
neg
jge
inc
add
or
rcll
add
ret
mov
push
aad
sti
xchg
inc
jl
loope
cmp
push
in
js
pushf
push
movsl
mov
jl
daa
out
xor
sub
push
jne
out
sbb
mov
inc
in
cmpsl
adcb
nop
push
aas
and
lcallw
mov
add
xor
mov
daa
jns
lret
jge
out
add
cwtl
inc
ss
dec
xchg
xor
sbb
ficomps
push
dec
mov
aas
push
pushf
scas
pushf
push
cmc
push
mov
lahf
clc
mov
cmpsb
mov
mov
out
push
lods
stc
jb
mov
and
cmp
and
adc
or
sub
xor
outsb
icebp
inc
dec
sbb
repnz
or
dec
jg
mov
fdivrl
into
fcompl
out
lods
loopne
adc
fistl
movsb
cmc
inc
stc
adc
fstpl
mov
jecxz
pop
rcrl
addr16
in
scas
incb
jne
dec
push
xor
mov
jl
repz
shll
fistps
and
cmpsw
and
pop
cmpps
jno
push
mov
mov
sti
and
fcoml
sar
pop
out
js
mov
cmp
mov
mov
cmpsl
cmp
mov
sbbb
lds
pop
push
push
xor
sarb
inc
adc
mov
pop
enter
mov
stos
ret
out
fisubs
dec
mov
imul
and
subl
adc
cmp
ror
jle
and
icebp
mov
loop
sub
ret
dec
fwait
mov
sub
fnstcw
scas
dec
push
stos
jmp
xchg
and
mov
push
xchg
aas
cmp
mov
jae
mov
lea
or
xchg
dec
dec
out
ret
lret
lds
jg
dec
and
mov
imul
or
in
scas
inc
aaa
fwait
xor
lods
or
call
jbe
push
test
jecxz
pop
hlt
sub
mov
data16
mov
lret
mov
popf
cmp
jo
inc
inc
or
std
iret
inc
gs
xlat
lahf
rcrb
aam
sbb
je
inc
sarl
cltd
dec
push
jg
push
or
mov
or
fsubrl
hlt
push
jp
and
arpl
leave
addb
sbb
xor
stos
inc
dec
lods
loopne
and
and
jmp
rcr
fsubl
or
stc
add
in
sbb
ja
inc
fcompl
mov
loopne
sti
push
add
orl
outsl
push
or
xor
dec
push
outsb
std
test
fdivl
sub
xchg
aam
lret
idiv
pop
or
add
add
mov
xor
mov
enter
cmpl
xchg
outsb
stos
jp
shrb
sahf
push
mov
adc
inc
bound
aam
pop
inc
in
and
cs
in
sbb
lock
mov
int
sbb
jmp
xor
or
push
pop
pop
add
rcr
or
cmp
cltd
pop
push
mov
pop
sub
imul
pusha
push
arpl
ja
aam
and
out
push
pop
cmp
and
or
mov
mov
lds
cmp
push
icebp
inc
cli
push
push
push
ret
fwait
pop
xchg
mov
dec
mov
enter
inc
mov
cmp
jae
mov
movsl
mov
fiadds
push
cmp
sub
mov
ret
test
push
cmpl
sahf
mov
jne
mov
fcmovnu
addl
add
frstor
push
adc
sub
jecxz
or
xchg
dec
jp
add
xchg
jg
cmp
fnstenv
push
and
cmp
add
xor
push
jo
sub
cld
xchg
lods
ljmp
or
pop
mov
and
push
sub
inc
orl
and
mov
mov
les
pop
out
cli
repz
int3
pop
cmpsl
jmp
xor
mov
inc
ret
in
out
inc
and
mov
push
mov
or
cmp
imul
push
sbb
mov
add
or
xchg
jp
sbb
mov
and
and
adc
das
fmull
rolb
lahf
xchg
jno
fdivrl
movsl
lret
stos
push
idivb
vpsadbw
inc
push
cmpsb
sbb
pusha
dec
dec
cmp
outsb
xchg
stos
jp
popf
adc
adc
jb
push
cld
loope
stos
cmp
dec
iret
cmpsb
clc
xchg
repnz
jbe
pop
and
pop
fsubrl
ret
and
cltd
pop
int3
push
push
fwait
cld
ljmp
jle
sbb
pop
aaa
data16
xor
shlb
pop
fs
negl
ljmp
clc
pusha
stc
sbb
jge
sub
ds
xchg
inc
pop
es
or
add
aaa
mov
jns
xchg
or
sub
mov
fisttps
outsl
imulb
xchg
in
test
out
mov
xor
rol
call
inc
icebp
push
fwait
movsb
mov
jb
arpl
and
in
push
loope
in
lea
imul
jle
scas
rol
ret
notl
cmp
fcoms
aam
add
add
or
add
mov
and
ja
outsb
pop
or
mov
pop
imul
cld
test
inc
or
pushf
mov
fcoms
mov
xchg
enter
pop
pop
xchg
sbb
testl
xchg
pop
cmp
stc
cmpsl
nop
add
cmp
ret
jmp
popf
test
pop
test
dec
push
arpl
jno
out
mov
push
add
nop
xor
xlat
dec
cmpsb
pop
cld
inc
in
notl
xchg
push
aaa
cmp
xor
jle
cs
adc
movsb
scas
fildl
mov
mov
out
stos
sahf
jno
ja
sahf
inc
sti
mul
mov
popf
mov
sbb
iret
jecxz
imul
mov
cmpsl
or
fucomp
or
push
fiaddl
insb
and
cs
mov
push
adc
sub
js
mov
xchg
clc
cmp
push
addr16
sbb
jnp
popa
push
iret
xchg
lds
mov
cmpsl
xchg
pop
or
test
loopne
adc
insb
inc
inc
mov
outsb
sti
in
fistpll
mov
push
loop
mov
jp
test
or
adc
jnp
aam
in
outsb
test
bound
in
mov
mov
mov
jne
pop
jae
dec
insl
aad
out
jnp
jns
in
jo
or
jl
sbb
orb
pop
and
ss
jae
push
mov
fistpl
lds
cmp
inc
popa
fimull
push
push
sbb
add
mov
cmpsl
es
cmp
cli
pushf
jbe
mov
bound
icebp
out
push
dec
xor
pop
pop
lahf
rcrl
inc
lcall
push
repz
lods
push
addr16
jecxz
or
mov
jne
call
and
add
out
lcall
mov
arpl
and
enter
lods
push
int3
scas
inc
pop
pop
out
lods
push
xchg
daa
jecxz
mov
fistpl
cmp
icebp
add
outsb
mov
pop
jecxz
in
jp
xor
loop
scas
mov
jb
fmul
out
mov
fisttps
mov
mov
in
adc
aaa
mov
fsubrs
es
ja
cmp
shll
inc
or
push
cli
notb
test
cmp
inc
aam
pop
cmp
adc
cmp
cmp
fsubrl
pop
movsl
mov
dec
shlb
stc
mov
lock
pop
push
mov
in
mov
mov
fdivrp
push
mov
imul
lret
adc
sbb
cmc
mov
xchg
rorl
movsl
jecxz
insl
andl
les
lret
pop
add
test
movsl
xchg
call
popfw
and
loop
pop
out
sub
pop
dec
pushf
add
mov
sub
insb
jbe
pop
mov
outsb
mov
sub
cwtl
xchg
pop
pusha
cmp
adc
repnz
dec
pop
and
dec
push
stc
and
mov
and
pop
inc
or
inc
sahf
push
pop
lret
daa
cmc
add
sub
or
mov
cmp
sahf
sahf
iret
cmp
cld
pop
cwtl
cmp
dec
mov
xchg
stos
jbe
mov
or
mov
and
cmpb
jb
adc
jmp
sahf
out
xchg
dec
stos
leave
pop
xor
add
lds
mov
inc
pop
sbb
mov
loop
fnstenv
lds
sbb
add
jo
push
xor
xchg
fcom
stos
mov
mov
sub
push
mov
lcall
xor
xor
orb
cmp
pop
in
clc
add
out
loope
call
out
adc
pop
div
inc
sub
mov
mov
lea
mov
fadds
mov
jb
jge
leave
xchg
dec
ret
push
rolb
push
jbe
shr
cli
pop
fistl
mov
ss
stos
add
sbb
push
mov
std
repz
scas
mov
lods
pop
and
cmp
pop
and
lock
ficompl
lcall
xor
fdivrl
push
cltd
sbb
dec
shlb
or
pop
std
jb
and
jne
lea
fwait
push
js
push
cwtl
mov
xchg
cmpl
mov
push
adc
pop
subb
insl
fstps
push
scas
push
mov
jg
sti
adcl
ret
cmp
xchg
sub
pushf
stos
fcompl
testb
loop
jmp
adc
jnp
adc
out
adc
or
inc
mov
sbb
inc
xor
push
xor
loopne
jns
out
ret
add
jnp
sub
test
cmp
xor
inc
add
or
cld
in
jne
cs
out
dec
ror
ljmp
inc
negl
inc
sbb
je
lcall
mov
in
pop
std
xchg
movsl
cmp
out
outsb
jg
sbb
jmp
xchg
dec
push
jecxz
or
out
dec
aaa
adc
cld
test
dec
in
icebp
push
icebp
add
cmp
or
orb
aad
xchg
add
fldt
call
mov
pusha
inc
mov
mov
aam
test
sub
aas
mov
cmp
adc
jg,pn
aas
dec
aas
pop
xchg
sub
mov
stos
or
inc
aad
adcb
and
pop
xor
mov
lcall
dec
jno
int3
sub
ffreep
or
mov
jbe
push
orl
and
es
sbb
icebp
divl
xchg
insb
jbe
test
in
orl
pop
push
adc
clc
sbb
sarl
mov
sbb
rolb
faddl
adc
mov
xor
xor
sub
repz
cmp
push
movb
pop
fists
shr
sub
leave
add
cmovno
lahf
movsb
int3
lcall
cmpl
movsb
dec
int3
pop
out
lods
pop
inc
sbb
cmp
adc
mov
mov
mov
je
cmc
jns
inc
divl
aad
dec
call
push
dec
je
cmp
push
jne
repnz
mov
in
jo
cli
imul
push
out
andb
add
lods
aad
outsl
sti
lcall
sbb
mov
pushf
fiaddl
inc
dec
adc
adc
or
lods
cli
aaa
push
andb
adc
testl
decb
add
fimull
mov
ss
or
movsl
imul
jbe
dec
mov
push
cmp
adc
ror
dec
addr16
subl
push
out
push
push
cmp
adc
shr
in
or
loopne
push
mov
les
neg
sbb
add
add
lret
jbe
inc
sub
into
jae
or
fstpl
pusha
dec
pop
mov
cli
and
and
mov
inc
rcr
orb
adc
jne
sub
js
adc
jae
mov
in
scas
pop
lds
iret
outsl
push
popl
sahf
mov
data16
lods
mov
in
scas
inc
lcall
pop
xchg
jne
xchg
das
cmp
sub
push
notl
mov
add
movsb
outsb
lret
push
imul
jle
mov
push
or
stos
pop
jno
loope
into
jo
shlb
xor
push
pushf
les
mov
sbb
mov
movl
sbb
in
into
jge
fldenv
pop
xchg
stos
enter
ret
je
or
xchg
add
sbb
add
sahf
out
andl
dec
fmuls
mov
lahf
divb
fisubrs
out
jecxz
es
cs
pop
fwait
lea
aam
jae
sub
mov
cmp
cmp
push
push
or
mov
mov
in
inc
in
pop
add
inc
lock
jl
cmpsl
dec
dec
adc
jo
aad
xor
push
fbstp
mov
lods
xchg
jnp
subb
push
data16
lods
add
sahf
stos
out
jg
dec
fidivs
and
insl
lods
emms
testl
movsl
std
cltd
in
mov
fistl
in
mov
pusha
add
pop
dec
stc
add
incb
rcr
xor
and
xlat
xor
sbb
add
or
jo
push
mov
mov
outsb
hlt
pop
cmp
fildll
and
and
inc
or
icebp
outsb
xchg
out
shrl
lret
xor
xchg
jg
jns
xchg
and
cltd
lock
sti
es
icebp
les
lcall
lods
mov
mov
dec
cmpsl
imul
repnz
push
inc
imul
jp
popl
jp
imul
icebp
xchg
mov
and
je
popf
popl
cld
fucompp
push
push
adc
js
jmp
mov
je
imul
mov
push
push
movsb
lods
mov
push
jo
jl
mov
xor
loopne
stc
cmpsb
stc
pop
pusha
adc
insb
ljmp
sahf
stos
jne
xchg
insb
jne
mov
test
mov
bound
sub
es
pop
jnp
cmc
dec
mov
loope
mov
jmp
mov
test
test
xchg
xchg
sar
insl
jne
pop
and
jbe
fstl
fldenv
test
mulb
dec
mov
jle
setb
mov
movsl
sbb
sub
mov
sub
lret
in
stos
mov
dec
push
mov
mov
pop
pop
add
cmp
ljmp
pop
push
inc
pop
sbb
adcl
out
into
lods
loopne
ret
add
xchg
repnz
ss
adc
out
dec
and
test
ficoml
insb
sub
xchg
in
xchg
inc
adc
fisttpll
mov
sbb
loope
cltd
pusha
add
daa
clc
xor
jg
sbb
cmp
int3
add
mov
add
push
adc
cmc
xchg
cmp
xchg
loop
add
mov
js
push
jmp
cmp
xor
inc
repnz
fsubrs
and
mov
dec
loope
scas
in
push
xlat
add
cmp
cld
push
fsubl
push
insb
or
daa
call
shll
fstp
dec
int3
mov
adcb
mov
test
vpmaxub
xchg
mov
jl
shlb
xor
gs
pusha
adc
push
fsincos
in
loopne
mov
mov
sbb
movsl
push
mov
fidivl
xor
in
adc
sub
xchg
shlb
jne
inc
add
push
dec
mov
int3
cmpsl
rol
popa
addr16
mov
adc
pop
and
shlb
scas
inc
mov
loop
leave
js
add
mov
scas
int
jge
xor
add
xor
dec
fnstsw
insb
jnp
jmp
mov
xchg
sub
xchg
cld
jecxz
popl
xor
and
shlb
inc
scas
in
mov
bnd
mov
xchg
mov
jo
insl
mov
sbb
xchg
mull
les
shl
in
jno
cmpb
push
test
mov
lahf
in
inc
jnp
std
sbbb
int
jmp
daa
pop
push
cmp
addr16
adc
imul
pop
pop
in
push
xchg
push
jmp
scas
push
sbb
dec
ljmp
fdivl
stc
cmp
stos
mov
xchg
test
pop
aaa
push
insb
sub
jnp
push
in
pop
lea
xchg
pop
lret
sub
sub
dec
stc
inc
fisttpl
sbb
orb
dec
sarb
das
lea
lret
mov
mov
mov
les
ficomps
xchg
es
jne
es
adc
cmpsl
movsl
cmpsb
mov
mov
and
push
test
pop
mov
push
popf
das
jecxz
fidivl
push
sbbb
outsl
mov
add
sahf
push
fwait
scas
jbe
xchg
push
sub
dec
aas
pop
outsb
fcomps
idivb
cmp
and
outsb
aam
xor
addr16
mov
rolb
dec
out
fmull
cmpsb
cmpb
in
ljmp
rorl
icebp
dec
add
push
cmp
out
xor
mov
mov
jecxz
lret
fists
hlt
popf
cli
add
fstpl
mov
add
xor
outsl
jle
test
ret
int
cmp
push
jnp
push
pop
imul
adc
out
notb
fisttps
push
sbb
inc
pop
mov
movsb
cmpb
push
sub
fdivrp
jecxz
shlb
push
pop
xor
lea
jg
in
dec
lds
xor
pop
ja
xor
pop
cmp
or
mov
sub
rolb
jne
outsb
sahf
push
das
popf
mov
test
xor
add
sbb
loop
xchg
mov
stc
xor
aaa
lahf
icebp
fadds
cmp
lret
fnstenv
repnz
mov
cmpl
imul
cmp
add
pop
popf
das
lretw
sub
add
pusha
das
addr16
jle
arpl
inc
sbb
lea
test
mov
pop
sbb
mov
fwait
or
sahf
lods
dec
mov
fs
out
into
pushf
pop
test
cltd
push
mov
loopne
sbb
pop
mov
imul
add
icebp
sbb
in
xor
inc
mov
add
pop
movsb
je
cli
dec
jecxz
add
and
push
dec
jp
lock
sub
mov
mov
push
cmpxchg
add
fisubl
mov
push
rclb
jge
std
je
std
stos
cs
cmp
adc
add
mov
testl
dec
call
into
mov
and
adc
pop
jecxz
mov
lods
and
rcll
dec
jbe
int
out
xorb
xor
leave
ja
enter
pushf
mov
test
repnz
es
pop
clc
sbb
jle
lcall
repnz
mov
mov
ja
fcomps
iret
jmp
xchg
mov
shlb
fs
clc
stc
loop
dec
into
sub
mov
sub
nop
mov
cmc
je
pusha
mov
enter
xchg
es
add
sub
js
mov
cs
shr
scas
lods
and
and
and
xchg
test
jae
dec
xchg
fidivl
aaa
dec
repz
repz
inc
xor
mov
push
push
std
add
repnz
mov
xchg
mov
push
ja
push
lret
nop
xchg
sbb
outsb
fcoms
cmp
loop
dec
push
pop
push
dec
ljmp
inc
jmp
lods
cmc
testl
das
xchg
mov
add
rcr
mov
xchg
in
enter
pop
pop
xchg
je
pop
enter
or
push
sub
shlb
and
pop
dec
cmpsb
out
add
sub
mov
pop
mov
mov
jb
mov
xchg
jns
add
fwait
jno
push
rcl
inc
pop
mov
push
lcall
and
dec
lret
lcall
sub
insb
aad
mov
sub
ret
stos
orb
mov
adc
add
mov
lret
ss
xor
stos
cli
lcall
sub
mov
inc
insl
jbe
fisubrl
or
lret
out
inc
push
lock
mov
cmp
lea
push
mov
scas
dec
xchg
lods
aaa
lea
or
std
sbb
out
jp
jo
cmp
out
sahf
cmp
cmc
shl
mull
cmp
inc
mov
in
pop
aad
cmc
fs
push
cmp
pop
and
clc
mov
lods
mov
add
pusha
leave
scas
jae
repz
call
xor
adc
iret
mov
loopne
xchg
lcall
adc
sbb
sahf
pushf
mov
lahf
bound
test
lds
xor
xchg
out
mov
call
lahf
add
cmpsl
lahf
sub
insb
nop
movsl
push
xchg
lds
adc
stos
inc
gs
in
pop
hlt
icebp
test
mov
idiv
shrl
fidivrs
jl
or
pop
jb
dec
push
insb
adc
dec
push
or
mul
push
sbb
xor
popa
mulb
in
fs
addb
mov
out
insl
insl
fdivl
fistpl
int3
insl
imul
pushf
addb
ds
pop
mov
mov
sahf
xchg
inc
push
lock
pusha
xchg
insl
cmp
sub
lret
mov
jg
in
loop
and
sti
shrl
aas
pop
jbe
and
addl
push
sbb
insl
cmp
lret
dec
jbe
mov
test
adc
mov
insl
push
aam
inc
xchg
xchg
popa
imul
sbb
adc
cmp
and
sub
rorl
fisubs
aad
sbb
xor
add
inc
and
push
movsb
cmp
fimull
mov
clc
and
sub
in
xacquire
outsb
xlat
rorl
push
add
push
icebp
xchg
orb
popf
mov
bound
jp
ret
push
mov
hlt
jge
fwait
add
or
and
sub
jg
iret
inc
adc
mov
adc
inc
lret
push
push
aas
mov
lods
dec
int3
bound
movsb
mov
add
bound
roll
ret
rcll
insb
popa
pop
xor
adc
adc
push
das
xchg
mov
xchg
in
movsl
es
push
out
mov
add
inc
in
mov
inc
aas
or
shll
sbb
lods
cmp
dec
ret
daa
jmp
test
pop
fwait
and
in
sub
in
adc
aaa
lea
aas
or
ljmp
jp
stc
pop
in
mov
add
add
add
mov
cs
ljmp
sub
xor
jp
dec
cmc
xor
pop
mov
pop
push
cmc
fiadds
sub
dec
push
add
shr
popa
mov
addr16
into
cmp
dec
repz
je
ficoml
sar
shll
inc
jl
scas
pop
rclb
repz
in
pop
inc
sbb
icebp
aam
loopne
jne
inc
xlat
jmp
loope
mov
dec
mov
mov
xchg
mov
inc
mov
hlt
jmp
mov
add
testb
bound
inc
mov
mov
nop
jg
adc
jnp
jns
ss
test
jae
dec
pop
cmp
cmc
xor
adc
or
test
pushf
pop
ret
jbe
inc
jmp
push
int3
addl
xchg
push
mov
mov
sbb
xchg
int
mov
inc
add
test
add
mov
in
ljmp
mov
mov
test
insl
add
dec
ljmp
mov
push
rcrb
arpl
std
dec
insl
imul
notl
mull
lods
dec
inc
inc
xchg
pop
pop
ljmp
out
bound
imul
xchg
pop
jnp
jmp
repz
xchg
push
jb
mov
mov
es
loopne
mov
icebp
mov
mov
enter
pop
mov
mov
sub
jl
lea
sbb
test
int
jnp
sub
subb
or
sub
cwtl
push
cwtl
cmp
xor
pop
scas
adc
outsb
mov
pop
adcb
adc
push
stos
xlat
mov
sub
cmp
andl
cmp
add
ljmp
jnp
push
cmpsl
int
sbb
push
or
xor
dec
cmpsb
mov
cld
jg
inc
pop
xor
pop
xchg
cmc
ljmp
stos
clc
notb
dec
add
push
or
test
inc
stos
jb
daa
leave
xor
mov
push
and
cmp
push
dec
inc
push
cmp
mov
mov
clc
mov
leave
mov
clc
xchg
aad
cmpb
adc
fstl
push
popa
insb
inc
call
and
inc
sbbl
fdivrl
mov
cmpsb
dec
or
xor
or
sti
scas
and
outsb
inc
int3
test
jae
push
cli
scas
xor
es
fisttps
cmc
fists
push
in
into
in
rclb
or
test
pop
cmc
loop
scas
aaa
clc
daa
scas
xchg
jmp
addr16
jb
stc
cmc
xchg
outsb
testb
imul
inc
mov
xor
roll
rsm
aam
data16
cmp
jae
cwtl
lea
adc
aam
mov
in
ret
pop
jge
scas
push
inc
push
fimull
and
mov
aaa
xor
mov
pop
mov
das
add
cmp
add
scas
cmp
shl
push
adc
cmp
aad
or
arpl
dec
clc
pop
mov
dec
call
js
mov
scas
cmpsb
das
adc
xor
xor
cmp
jno
mov
ss
cs
mov
or
jnp
push
fs
push
sbb
cld
jno
outsb
out
stos
ret
dec
xchg
dec
pop
push
lahf
in
sbb
pop
inc
sub
rcll
or
mov
jae
pop
in
mov
lods
mov
sti
imul
cmp
movsl
repnz
in
add
dec
mul
ret
and
cmpsl
in
cs
nop
push
xchg
mov
fwait
stos
sub
pop
imul
xor
or
lock
bound
test
insl
inc
sub
mov
aam
xchg
jns
pusha
js
pop
sub
mov
sarl
sub
fs
pop
sub
add
or
adc
rorb
shrl
cld
adc
or
sbb
sub
sbb
inc
sahf
stos
and
in
push
insb
or
adc
lcall
inc
push
in
ja
addr16
and
hlt
sbb
test
push
out
fsts
in
push
out
inc
sub
pop
movsb
stos
mov
in
cmp
adc
popa
iret
jne
jae
insl
xor
xlat
decl
mov
movsl
out
add
cld
int3
test
out
loopne
movsl
xchg
sbb
xchg
jae
jge
outsl
jg
ret
xor
dec
and
lret
cmp
adc
adc
lds
mov
mov
repz
mov
clc
test
sub
adc
mov
adc
testl
sbb
movsl
jge
jne
sbb
mov
pushf
sbb
cli
out
clc
inc
cmp
jge
push
lea
insl
fmuls
shll
xchg
adc
xchg
imul
idivl
fistps
sti
mov
repz
mov
fidivl
sub
push
jg
push
es
inc
push
inc
push
push
mov
rcrl
je
fistps
std
or
adc
mov
mov
pop
jbe
cmp
and
iret
icebp
fnstcw
dec
sub
rcrl
cwtl
out
or
mov
in
leave
fiadds
pop
dec
push
insl
push
inc
jb
fucomi
and
shrb
sbb
mov
sub
push
inc
fisubl
cmp
mov
adc
aam
aas
andl
mull
insb
or
ret
popf
push
mov
push
dec
pop
or
cmc
fisubrs
inc
out
movsl
lret
jecxz
jne
pop
push
mov
adc
pop
fidivrs
and
scas
xlat
push
xchg
jns
and
test
pop
sub
call
fimuls
pop
testb
hlt
inc
sub
push
jno
mov
aam
loopne
add
jl
sbb
xor
xchg
pop
pusha
ja
call
sbb
mov
dec
ffree
xchg
and
jno
or
nop
mov
aaa
jge
sub
inc
divb
mov
push
dec
or
js
and
sbb
xor
inc
add
mov
xchg
mov
or
cmp
sub
jmp
xchg
ret
pop
sbb
sub
cmpsb
lock
ds
fst
dec
add
in
fcomps
jb
lds
std
dec
movsl
dec
adc
mov
das
mov
pusha
out
push
mov
outsb
fildl
popa
mov
adc
andl
xchg
cmpsl
or
adc
stos
xor
out
xchg
fstl
arpl
push
mov
inc
shr
scas
jle
into
mov
lahf
int
sahf
mov
pop
out
test
loope
or
scas
mov
cmpsb
leave
in
adc
sub
cmpsl
pop
out
loop
arpl
sbb
or
test
sub
test
sbb
xchg
sbb
out
push
and
sbb
pushf
xchg
sub
mov
pop
xlat
int3
xchg
in
fbld
in
mov
xor
push
mov
or
cld
push
fxch
sbb
in
bts
sbb
mov
in
xor
fdivrl
jl
mov
stc
mov
adc
leave
popf
data16
test
dec
adc
dec
dec
int3
lock
movsl
std
push
mov
adc
adc
mov
sub
push
jns
xchg
xor
sahf
pushf
xchg
push
or
sub
and
add
xchg
mov
sub
clc
jae
jg
shlb
sub
sub
mov
push
mov
nop
xchg
add
jge
and
test
nop
adc
out
lods
outsb
nop
flds
jl
setnp
jl
push
out
ljmp
sub
xchg
add
fildl
rcll
or
mov
loop
fucomp
inc
addb
insb
jno,pn
sub
dec
mov
xor
jmp
icebp
sbb
sub
ja
insl
mov
fistpll
cmc
mov
sti
int
cmp
sbb
sbb
enter
or
cmp
inc
shlb
and
lds
lods
pop
push
and
xor
test
aad
cld
xchg
sbb
and
loopne
push
sbb
push
jl
add
out
and
jae
lock
dec
mov
sahf
mov
call
sbb
xor
mov
loope
add
cli
cwtl
in
pop
jns
pop
int
into
fsubl
and
test
and
pop
scas
sub
repz
bound
mov
scas
adc
and
std
push
fcomi
xlat
cmp
addr16
xorb
je
in
andb
mov
adc
cld
or
jno
subl
xor
jne
mov
scas
jmp
cmp
xchg
in
icebp
xchg
outsb
pop
and
lahf
lods
cs
icebp
mov
scas
mov
sbb
cmpsb
lock
push
mov
fidivs
sub
mov
test
ja
insb
les
or
int3
push
jnp
movsb
mov
clc
sahf
jae
or
cmpl
ljmp
mov
and
daa
jno
int3
mov
add
or
scas
sbb
dec
iret
ja
sub
mov
gs
dec
in
ret
nop
ret
xor
hlt
test
xchg
xor
out
out
pop
jp
push
ljmp
xor
jmp
negl
add
bound
xchg
loop
adc
push
fisttps
cmp
aam
jo
push
jo
icebp
mov
push
mov
fisubs
add
pop
cs
out
inc
mov
scas
push
mov
cmc
mov
negl
test
mov
imul
cs
fstpl
sub
movsb
push
xchg
mov
nop
test
xchg
mov
pop
ds
add
mov
add
mov
xor
xchg
add
inc
mov
inc
sarl
cmc
faddp
into
icebp
jp
xor
dec
movsl
or
mov
push
inc
shlb
sbb
mov
push
mov
mov
cld
inc
and
ficompl
add
and
scas
jae
loop
cmp
loopne
lea
scas
xchg
cmpsb
sahf
sbb
lret
mov
je
sbb
xchg
clc
pop
dec
subl
inc
dec
xor
inc
dec
les
xchg
ficoms
pop
jle
out
scas
push
xchg
lock
gs
popa
data16
nop
gs
push
fdivrl
iret
mov
sti
das
ficompl
hlt
push
push
sahf
push
or
outsb
mov
sbb
jne
add
push
int
sbb
mov
cs
mov
movsb
jnp
sub
hlt
flds
or
cmc
adc
insl
dec
xorl
xor
mov
mov
add
sarl
xlat
xchg
aaa
sbb
out
lock
testl
nop
jmp
movsb
imul
sub
ficomps
cmp
jg
inc
in
xchg
mov
xor
jl
cmp
cmpsb
inc
mov
pop
rcll
outsl
xor
dec
repz
cwtl
mov
js
inc
idivb
mov
in
cmp
mov
add
inc
or
mov
pop
add
dec
xchg
sti
or
ret
ds
mov
int
xor
or
das
xchg
aam
or
test
rorb
mov
sbbb
jle
dec
in
mov
shrl
add
daa
inc
pop
sub
mov
mov
or
mov
or
test
mov
inc
mov
mov
cs
dec
mov
pop
cli
repnz
insb
stos
das
push
adc
push
adc
dec
dec
pop
add
ficoms
repnz
aad
mov
in
jnp
dec
mov
sbb
mov
lcall
out
xchg
cmp
out
les
push
jge
ja
out
in
inc
mov
xchg
mul
lahf
jns
inc
inc
enter
sbb
mov
pop
bound
and
add
cltd
popf
test
out
dec
sub
popf
pushf
push
add
hlt
or
xor
es
jnp
leave
fdivl
leave
cmpsl
pop
sarb
enter
cli
pop
lcall
shll
or
stos
out
popf
cs
pop
aas
mov
and
pop
aad
xchg
rorl
push
mov
xchg
pop
pushf
xor
fsubs
mov
loope
ret
hlt
movl
test
std
pop
dec
movsl
push
call
pusha
inc
rorl
outsb
adc
int3
inc
enter
mov
mov
fsubr
out
fbstp
ljmp
js
loope
int3
push
xlat
pop
outsl
shlb
dec
sub
rcll
pop
shrl
setne
inc
sahf
mov
sub
jne
pop
stos
xor
xchg
push
xor
push
lahf
dec
lahf
or
ljmp
nop
pop
jge
repnz
dec
sub
cmpsl
adc
mov
pop
sbb
add
xor
loopne
xchg
mov
ja
adc
stos
jb
xor
mov
insb
jne
add
dec
push
lret
jmp
fs
mov
pop
mov
dec
inc
xchg
outsb
bound
hlt
xchg
push
xor
inc
call
push
lcall
in
sub
or
jnp
jl
imul
sbb
or
push
xchg
xchg
in
add
dec
and
sub
jae
push
cld
xchg
inc
clc
pop
add
ret
sahf
bnd
mov
test
clc
sbb
aad
lcall
and
popf
mov
aas
cmp
aad
iret
aam
xchg
fldenv
push
in
sbb
adc
add
mov
je
mov
mov
int3
lret
xor
les
into
sbb
jnp
incb
dec
shlb
mov
cmpl
jl
mov
xlat
push
adc
pop
neg
js
dec
js
shufps
ds
aaa
les
cmpsl
movl
dec
push
aad
mov
dec
dec
std
and
fdivrp
push
xor
incb
nop
adcl
jl
push
or
loope
loop
ss
xchg
lret
repz
out
push
pop
imul
loopne
inc
addr16
clc
inc
fildl
cmp
pop
jae
sub
into
out
xor
jl
xor
sbb
jmp
sub
xchg
xor
das
insl
xchg
or
inc
aas
lods
cmp
lea
pop
mov
fcoms
rcll
mov
sbb
inc
movsb
inc
dec
aad
cld
lret
cmp
scas
lods
in
pushf
into
pushf
daa
push
lret
into
movsl
sbb
xor
and
xor
fdivrl
dec
sbbb
imull
xchg
ja
adc
dec
lods
imul
fs
cld
and
insl
or
inc
pusha
nop
add
in
sub
xchg
mov
and
into
jg
jb
xor
data16
loope
xlat
pop
call
hlt
outsb
pop
and
mov
fildl
pop
mov
add
aam
or
dec
rcl
shll
inc
sarl
cld
js
xor
incb
cmp
out
xchg
fnstsw
sbb
clc
clc
data16
outsl
lret
cs
mov
imul
mov
sahf
test
call
adc
leave
dec
data16
aam
mov
cmp
movsl
add
xor
into
mov
lods
sarl
sub
aas
repz
push
and
iret
lods
aad
mov
sti
push
mov
or
pop
jns
loop
cmpsb
mov
out
clc
inc
xchg
or
push
and
sub
call
push
sbb
fistpl
xor
lret
cli
lds
gs
jbe
lods
mov
xor
ret
imul
sub
jno
xchg
cmpsb
cmpsb
test
xchg
call
jle
xchg
or
jg
fstps
pop
roll
jno
mov
or
pusha
dec
push
cmp
repnz
or
or
mov
mov
jbe
es
scas
add
fs
jno
mov
cmpsl
repnz
mov
data16
fsubrl
push
inc
jae
xor
lods
mov
inc
in
ret
popa
stc
add
mov
cmpsb
lods
add
rcrl
mov
imulb
push
ret
sbb
iret
dec
jmp
hlt
insl
outsl
lcall
leave
sti
sub
or
adc
clc
mov
enter
push
out
hlt
scas
test
mov
mov
arpl
push
mov
movsb
mov
scas
dec
mov
cmp
mov
pop
cmc
lods
push
mov
mov
popf
outsb
adc
aas
lods
clc
test
mov
adc
jb
xor
mov
xchg
dec
insl
lea
xchg
push
pop
inc
clc
lds
scas
dec
bound
cmc
mov
lods
xchg
jge
test
ja
sbb
jbe
xchg
and
outsl
mov
daa
xchg
popa
adc
add
iret
mov
jg
ds
js
cmp
dec
add
ljmp
clc
jno
cmp
pop
push
mov
xchg
pop
inc
das
stos
sub
lods
data16
arpl
cmc
out
iret
out
sub
pop
inc
or
sub
cmpsb
push
jp
outsl
sbb
push
jmp
lret
cld
xor
sbb
dec
add
dec
mov
das
pop
scas
hlt
movsl
inc
out
mulb
std
jae
xchg
mov
das
lock
push
lahf
arpl
icebp
fdivs
aad
mov
xor
push
push
mov
mov
pop
xchg
sub
fildl
rcl
push
add
xchg
cmp
cmpsb
pop
fcompp
cmp
lods
nop
in
imul
ljmp
aaa
daa
jo
mov
jg
ror
xchg
mov
ret
and
mov
mov
lods
int3
pop
xor
add
daa
cmp
dec
pop
add
mov
push
or
dec
je
add
dec
cmp
repnz
mov
mov
cli
repz
fdivr
sub
inc
adc
outsl
test
add
pop
push
mov
mov
cwtl
movsb
fildll
negl
in
ficoml
mov
dec
mov
mov
xchg
sbb
in
and
and
cltd
lahf
pop
cli
and
je
cli
push
aaa
repz
dec
and
idivb
les
xchg
sub
add
movsl
adc
push
xchg
int3
and
pop
lods
cld
inc
jno
push
push
pop
cltd
fsubl
subl
jmp
int
cltd
cwtl
inc
rorl
popf
cmp
lahf
mov
out
insl
mov
and
sub
mov
test
jns
roll
push
out
out
mov
cmpsl
rcr
data16
xor
bound
and
inc
add
lret
stc
int3
xlat
ljmp
movsl
xor
cld
pop
pop
adc
cs
out
mov
ret
sbbl
or
sbb
mov
sbb
dec
sbb
aas
dec
sahf
xchg
adc
fwait
xor
xchg
inc
enter
pop
pop
imul
rcll
push
xor
add
jae
pop
sbb
rol
dec
ss
sub
popa
gs
lds
lea
cld
push
ds
mov
rorb
imul
adc
sarb
imul
xchg
sub
aaa
and
add
add
adc
loop
les
dec
mov
lcall
into
cli
pushf
add
scas
es
rolb
stc
int
stos
xor
jb
addr16
scas
or
mov
leave
out
dec
jge
and
shll
push
dec
pop
arpl
jnp
dec
xorb
ss
shlb
push
stos
idivl
mov
sbb
lahf
lea
call
sti
test
pushf
and
adcb
jp
repz
pop
dec
lret
mov
les
das
xor
mov
mov
push
jle
popf
rcr
mov
cmp
stc
in
icebp
adc
nop
pop
add
out
call
popf
std
mov
sbb
add
or
sbb
add
jp
cld
test
cmpl
leave
repz
and
gs
jg
sbb
push
mov
dec
in
leave
and
mov
add
enter
add
lret
aad
ds
pop
pop
adc
ja
in
rcrb
lds
push
loopne
in
fnsave
or
mov
stc
loop
in
jns
std
lea
adc
ds
and
in
cmp
or
loope
and
add
sub
iret
mov
lret
aad
cmp
fdivl
mov
and
dec
cmp
mov
popa
mov
xchg
shrl
pop
aas
fdivrl
test
ss
mov
addr16
inc
ja
out
lds
fmull
jae
push
pushf
pusha
fptan
pop
push
cmc
mov
ljmp
in
nop
and
imul
add
test
and
inc
hlt
jmp
xor
pop
add
rorl
ret
cmpsb
mov
cmp
lret
gs
movsl
out
jmp
cs
fistpl
cltd
paddusb
idiv
xor
or
adc
inc
cmp
fcomps
repz
inc
pop
and
mov
stc
fcmovnbe
push
and
cld
test
ljmp
sbb
shl
sbb
scas
lret
test
mov
and
mov
sarb
enter
sub
gs
xchg
push
add
es
jne
and
xchg
arpl
mov
mov
pop
sbb
adc
pop
cmp
or
int3
jle
and
xchg
sub
aad
sub
xor
dec
fs
and
sub
or
sub
outsb
pop
mov
push
les
imul
or
pop
mov
imul
sub
add
push
mov
sbbb
cwtl
pushf
popa
cli
mov
jmp
pusha
inc
inc
test
out
in
sbb
lret
xor
out
call
loop
test
movsb
ja
xchg
faddl
mov
dec
push
pop
jle
sbb
xchg
and
xor
bound
aaa
mov
push
mov
sbb
sub
cmp
mov
or
test
adc
pop
push
jno
push
enter
push
movsl
sbb
pop
pop
ss
scas
sub
mov
insb
repnz
in
jnp
into
ja
mov
aaa
mov
inc
push
stos
lret
push
mov
dec
xor
or
cmp
test
loope
ret
pushf
loop
loope
mov
sub
inc
aaa
lea
es
repz
sbb
cld
xor
leave
icebp
jp
add
cwtl
iret
adc
jnp
ja
arpl
stos
test
icebp
sbb
negl
xlat
push
in
cmp
movl
adc
icebp
xchg
inc
inc
pop
xor
jecxz
into
push
leave
xor
push
mov
cmp
test
dec
pop
hlt
jg
lods
push
inc
lods
xlat
pop
push
pop
test
fdivp
nop
xor
dec
and
dec
mov
sub
xchg
jne
or
test
arpl
jl
xor
jnp
and
add
popf
test
dec
dec
jno
mov
jg
out
rol
pop
fisubrl
cmp
push
sbb
pop
jecxz
aas
push
popl
movsb
inc
jo
aam
js
xchg
pop
nop
mov
repnz
fwait
icebp
cmp
pop
or
movb
or
or
mov
cli
xor
lods
nop
movsb
or
mov
mov
push
cmc
sub
cmp
push
stos
shlb
in
mov
scas
movsl
mov
into
jecxz
or
jbe
ret
testb
movsl
push
mov
lock
repnz
leave
mov
lock
in
pop
sbb
cmp
mov
push
xchg
insl
lret
outsb
shl
out
andl
int3
scas
inc
push
or
mov
popf
cli
popa
not
inc
lahf
add
sbb
or
push
or
mov
stos
xchg
out
sub
pop
outsl
cmp
ss
es
cmp
subb
imul
mov
xlat
cmpsl
cwtl
sub
mov
in
pop
and
mov
add
mov
xlat
mov
negl
or
xor
out
xor
mov
and
stos
mov
mov
add
sub
or
push
xorl
addr16
imul
fwait
add
call
xor
jmp
push
mov
jecxz
inc
dec
fsubs
inc
xchg
push
cmp
rorb
cli
pop
loop
pop
or
inc
jmp
mov
add
xor
push
xchg
aas
and
adc
scas
test
fimull
and
dec
rcll
inc
xor
leave
sub
dec
inc
ret
mov
mov
sub
test
inc
cmp
adc
inc
mov
pop
cmpsl
dec
mov
cmp
mov
inc
sub
lds
push
or
and
push
mov
sti
pop
mov
data16
xchg
jp
xchg
add
hlt
dec
push
mov
jge
jne
mov
sub
cmp
in
xor
cmp
jbe
aam
stos
xor
andb
movsl
push
lds
xor
rorl
or
fucom
push
ret
shlb
pop
pop
test
inc
imul
pop
and
add
imul
mov
jmp
in
jg
adc
popa
popf
cmp
std
js
dec
sbb
idivb
xchg
int
xor
out
jmp
add
push
sub
fwait
xchg
mov
inc
pop
enter
ret
xchg
add
xor
and
addr16
dec
lods
jae
scas
pop
iret
adc
outsb
lret
sbb
loop
add
out
cmpsl
dec
cmp
aas
mov
clc
loope
cs
imul
lds
andl
jle
mov
clc
mov
insl
mov
and
dec
dec
dec
add
js
testb
dec
hlt
adc
push
and
cs
out
dec
outsb
rclb
clc
insb
sub
cmc
add
lods
pop
scas
jge
mov
mov
test
fsubrp
mov
mov
add
pop
jl
jb
test
jno
pop
xchg
fists
movsb
sbb
imul
push
push
out
sahf
mov
test
sub
sub
adc
popa
stos
lock
push
decl
imul
cmp
ja
adc
cli
pusha
mov
or
jg
and
repz
in
jnp
es
orl
lret
imul
cmpl
rol
fsubp
fdivrp
sub
lods
push
icebp
loopnew
arpl
jle
js
mov
xorb
jmp
scas
jno
mov
lods
outsl
insl
pusha
shr
mov
mov
mov
sub
inc
int3
loope
cmpsb
push
jb
int3
icebp
or
cmp
dec
push
jae
mov
aam
jmp
adc
push
inc
jno
xor
jo
lods
push
movsb
xor
subl
and
dec
push
bnd
add
or
jl
inc
outsb
mov
insl
push
adc
fidivrl
mov
mov
leavew
popf
and
adc
mov
lea
mov
push
jne
mov
ds
adc
mov
nop
sbb
mov
xchg
imul
in
outsb
cmp
shll
jecxz
stos
pushf
std
mov
nop
jp
xor
cmp
mov
or
xlat
push
cwtl
jmp
mov
jnp
and
div
in
imul
idivl
daa
cs
push
adc
roll
dec
jg
mov
pop
inc
leave
add
pop
jb
jb
cmpsb
lcall
mov
int3
popa
into
push
daa
add
icebp
jns
fmuls
insb
mov
xchg
ss
lahf
cmp
sub
and
bound
test
pusha
pop
mov
push
pop
mov
push
inc
jbe
inc
in
mov
cmp
pop
in
mul
jle
mov
inc
lret
jns
jae
les
mov
xor
push
outsb
mov
inc
add
and
cmp
mov
shl
shll
lret
cmpsl
jmp
cmp
inc
mov
outsb
cmc
movsl
dec
push
adc
les
cmp
mov
mov
in
adc
xchg
shll
or
in
push
xchg
aad
in
daa
mov
les
push
mov
sbb
mov
outsb
cli
cmc
scas
adc
xor
pushf
leave
xor
fcmovb
mul
out
jge
or
inc
test
push
fs
lods
fadds
push
xor
ficompl
jo,pt
out
jbe
lahf
inc
jp
xchg
xchg
and
cs
pop
add
outsl
add
sub
lods
jmp
arpl
sbb
imul
lahf
test
or
hlt
push
out
aas
cmc
jne
cmpsl
mov
inc
sbb
fsubrl
inc
shl
dec
pop
adc
cmpsl
jmp
iret
mov
scas
mov
xchg
push
and
insl
sbbb
enter
add
mov
mov
arpl
mov
sbb
test
xchg
mov
insl
testl
jg
inc
cmp
mov
xor
rcll
fwait
inc
lods
pop
add
movsl
cmpsl
lea
test
repz
call
icebp
inc
and
jp
aaa
dec
push
stc
gs
adcl
adc
leave
add
shrb
mov
sub
imul
int3
adc
xchg
inc
fldenv
sbb
ret
push
cmp
enter
lahf
or
repnz
loopne
addl
out
lds
in
push
clc
jle
ror
mov
add
pop
rorb
xlat
insb
mov
movsl
pop
lcall
mov
xor
scas
mov
outsb
popa
aaa
imul
leave
insb
in
cmp
jge
sbb
popf
jp
popa
xor
pusha
sbb
push
pusha
adc
pop
pop
negb
push
cmpsl
push
cltd
test
loop
xchg
aam
push
xor
lds
inc
sub
shlb
and
movb
inc
stos
test
movsl
and
push
xchg
cmpsl
out
and
mov
test
dec
dec
cltd
loop
cltd
roll
mov
inc
ss
pop
cmp
std
outsb
mov
scas
sbb
jb
lods
popf
jns
insl
mov
test
cld
xchg
xor
mov
aam
mov
pop
sbb
fchs
adc
imul
dec
push
push
cwtl
or
xor
pusha
adc
push
lret
cmp
pop
jae
jo
cmp
inc
or
jno
mov
jno
dec
push
bound
and
mov
subb
mov
clc
in
jl
jbe
iret
add
ljmp
das
pusha
inc
ljmp
dec
inc
cmp
cmp
rcll
popa
xor
jnp
cmpsl
shrd
fincstp
xor
inc
sub
outsl
push
jnp
pop
ds
dec
ja
push
notb
aam
dec
or
roll
add
pusha
es
xor
jo
sbb
or
lahf
popf
add
xor
es
lahf
or
lret
sbb
cmpsb
cs
add
push
rcll
xor
adc
add
shrl
mov
dec
xor
lret
aam
psubsb
cmpsb
cmpsl
or
sub
pop
pop
push
adcb
push
xchg
int
pushf
mov
push
cmpsb
add
push
scas
les
pop
pop
sbb
mov
adc
sbb
xor
ja
jmp
adc
push
dec
jge
pop
mov
ss
inc
cmc
dec
out
insl
idivb
imul
pop
sahf
dec
jmp
xchg
shlb
pop
sbb
adc
into
stc
xor
and
gs
inc
test
andl
mov
or
lret
xchg
popa
and
mov
push
pop
push
cmp
hlt
and
movsb
subb
pop
pop
in
adc
mov
xor
aaa
sub
aam
stc
mov
xchg
push
or
cli
fsubrp
xchg
test
mov
pushf
movsl
leave
int3
add
rcll
pop
xor
add
pop
shr
sbb
cs
test
mov
add
mov
sub
pusha
in
adc
popf
mov
cltd
dec
dec
mov
pop
push
ficoms
les
adc
insb
push
inc
daa
sbb
and
es
xchg
cmpsb
add
rolb
adc
out
rorb
push
sbb
arpl
sub
jnp
jb
lahf
cmp
shll
jns
adc
adc
mov
xchg
ret
cs
pop
xchg
loope
xor
in
out
mov
xor
add
pop
dec
mov
imul
insl
orl
push
xor
pop
xor
xchg
sbb
stc
lcall
jb
mov
add
in
sub
push
sbb
vmwrite
and
lret
imul
add
sbb
cmp
pop
mov
add
and
xor
jae
mov
xlat
stos
daa
rcll
lret
inc
test
imul
push
push
xor
inc
xor
js
ret
sbb
stc
pop
mov
mov
fcmovnbe
je
inc
fnstsw
mov
push
adc
jge
or
fcomp
jae
mov
std
andl
dec
add
xor
out
ret
test
jge
fnstcw
stos
repnz
add
loopne
imul
dec
lods
leave
pushf
and
lds
jp
jo
insb
gs
inc
pop
jne
shlb
es
imul
mov
or
das
stos
sbb
imul
outsl
or
paddsw
aam
imul
mov
sbb
push
or
jbe
out
daa
test
ror
inc
fcoms
shlb
aad
jbe
or
repnz
mov
insl
sub
pop
outsl
sbb
ljmp
mov
mov
inc
mov
push
hlt
mov
filds
add
push
fstp
mov
jecxz
andl
repz
call
stos
inc
pop
into
leave
lret
sahf
inc
adc
mul
xlat
repnz
push
movd
pop
sub
mov
cmp
jo
lret
fsub
cmp
push
ljmp
fs
adc
add
inc
sbbb
das
fcmovb
mov
leave
lods
push
push
ds
jne
ja
mov
jbe
mov
push
stos
test
sbb
xor
lea
push
vsubss
mov
sbb
outsl
fs
pop
pop
mov
dec
pop
adc
fisttpll
adc
daa
or
into
dec
dec
mov
sbbb
adc
add
or
pusha
push
pop
dec
jecxz
imul
jl
addl
jbe
mov
imul
aad
scas
jle
or
fs
mov
call
mov
xchg
cpuid
cmpsb
bound
or
frstor
adc
jmp
and
in
sbb
je
xchg
push
icebp
and
xchg
imul
dec
jle
cmp
insb
mov
pop
mov
pop
in
lock
xor
lea
cmp
push
lcall
adc
loope
pop
loop
mov
adc
dec
cmp
jg
dec
lds
cmpsl
sub
shlb
add
rcrl
pop
adc
add
mov
dec
test
or
dec
int
jb
ror
jg
xor
std
xor
sbb
jle
sbb
xlat
hlt
push
xor
fdivrl
pop
dec
in
dec
sarl
ljmp
ret
inc
cmp
aaa
outsl
clc
mov
inc
sbb
in
int
mov
out
mul
add
push
push
shrl
cmpsb
adc
fsubr
icebp
jns
xchg
sub
hlt
add
rcl
and
xchg
jge
jp
jb
inc
dec
leave
xor
and
rorl
push
and
fwait
xchg
lret
outsb
sar
daa
out
sbb
fsts
sub
pmaxsw
outsb
insl
dec
shrb
stos
xchg
repz
popf
into
jbe
xor
in
pusha
lcall
mov
mov
mov
sbb
sbb
repnz
repnz
pop
pop
insb
mov
jp
test
inc
adc
and
sahf
std
push
fs
jnp
movsb
xor
push
jecxz
fcompl
adc
enter
das
jae
and
les
jge
sti
lea
icebp
in
add
sbb
jmp
loop
and
ljmp
sub
xchg
cs
pop
sti
adc
gs
pop
and
adc
or
mov
push
clc
psubsb
xchg
push
jbe
mov
pop
lahf
xor
mov
xor
mov
mov
cwtl
in
leave
loop
mov
leave
popa
mov
out
icebp
jl
lahf
sub
pop
mov
sub
add
jo
or
sub
push
inc
int3
pop
push
or
test
loope
pusha
lea
pop
test
int3
rcrl
add
hlt
push
mov
xor
xchg
lds
pop
lods
or
inc
call
aaa
or
inc
xor
inc
and
sub
fistpl
add
jge
add
adc
shrb
cltd
jo
std
xor
xchg
insb
insl
pop
pop
dec
arpl
jl
scas
add
shll
push
push
dec
mov
hlt
fmuls
pop
gs
aas
mov
int3
clc
pop
or
std
inc
sub
cmc
mov
jnp
in
cmp
and
fdivrp
int
out
dec
lock
enter
mov
xchg
jbe
sub
mov
sub
sti
stos
sub
fisttpll
mov
pop
fsubrs
jecxz
in
inc
jns
jmp
mov
add
lds
pop
xchg
inc
repnz
jmp
sahf
cmp
mov
sbb
lds
push
fxch
xchg
insl
scas
lods
mov
outsl
rorl
add
jne
notl
aas
stos
pop
pusha
pop
aam
push
outsb
ljmp
in
pop
pop
jge
mov
rol
pop
outsl
or
mov
xor
lea
sbb
cld
outsb
dec
xchg
mov
jg
pushf
call
push
lret
mov
cmpsl
data16
iret
inc
clc
jnp
inc
add
xchg
mov
adc
arpl
pop
mov
repnz
out
fldenv
aam
loopne
cmc
mov
mov
rclb
xchg
xor
fnstenv
jle
rclb
inc
les
fistl
push
sti
shll
push
gs
imul
push
lea
and
pop
shll
sub
or
in
cmp
loope
pop
je
mov
or
cmp
inc
fstpl
cmp
or
cmp
push
adc
xor
jnp
in
les
addr16
adc
popa
jo
pushf
xchg
mov
xor
inc
or
lock
inc
push
xor
xchg
nop
mov
xor
add
pusha
call
adc
xlat
or
loop
xor
push
cmc
cmpsl
mov
jo
jns
repnz
or
icebp
add
iret
push
or
out
push
xchg
fs
dec
xchg
stos
test
or
add
and
imul
add
pop
fs
cwtl
movsb
jne
fwait
xor
mov
jno
sbb
fs
icebp
addr16
dec
mov
adc
bnd
bound
icebp
std
sbb
lock
xchg
jbe
push
loopne
xchg
mov
pop
add
add
pop
fnsave
jg
xchg
movsb
fwait
lods
cs
jmp
loop
sub
dec
gs
add
test
ficomps
push
jns
loop
cmp
mov
test
out
xchg
adc
sub
mov
pusha
lcall
pop
popa
mov
ss
pop
les
andl
jg
cwtl
test
mov
pmullw
cmp
test
xor
add
xor
lret
push
cli
or
mov
outsl
gs
adc
and
or
mov
loope
adc
insl
out
add
mov
iret
pusha
cmp
pop
sbb
mov
and
cltd
and
out
in
mov
push
imul
jge
xor
push
dec
fisubrl
and
vmptrld
shll
mov
xchg
push
jnp
cmp
arpl
mov
add
int3
clc
or
add
pop
inc
rorb
int3
shll
cmpsb
cltd
inc
lahf
xchg
adc
mov
inc
int3
rorb
adc
icebp
mov
jp
loopne
hlt
mov
es
sub
lods
xchg
jb
lret
sbb
in
jae
sub
mov
insb
adc
xchg
inc
jge
pop
sbb
pop
xchg
in
lret
nopl
and
mov
ficoml
xchg
push
mov
inc
jae
inc
cltd
jne
pushf
push
jae
push
add
outsl
mov
cltd
inc
lcall
shll
mov
sub
sub
icebp
cmp
jmp
or
push
mov
cmp
mov
orl
mov
testl
xor
test
aas
scas
mov
subb
mov
pop
rcl
xchg
xor
stos
and
mov
fists
lds
xchg
in
call
clc
sbb
pushf
xchg
sarb
sarb
adc
xchg
dec
aad
xchg
xlat
aad
clc
adcl
rcl
xor
notb
dec
nop
xor
mov
insb
dec
fisttpll
dec
mov
cmp
sbbb
hlt
adc
out
xchg
inc
sti
pusha
dec
mov
sbb
enter
sbb
dec
mov
in
testb
xchg
jp
enter
bound
daa
shrb
filds
pop
push
mov
fcmovnbe
imul
push
sbb
popa
dec
pop
movsl
jle
fs
mov
sbb
popa
icebp
mov
jne
ds
lcall
cld
mov
mov
push
orb
ds
or
pop
inc
orl
popa
inc
int3
jmp
xchg
mov
pop
and
add
iret
fsubrs
jb
cli
mov
test
insl
fildll
xchg
scas
popf
jne
push
inc
mov
addr16
jp
fldl2t
add
lods
inc
shrl
ret
lods
mov
insl
or
addr16
leave
inc
xchg
and
rorl
and
push
js
imul
nop
addr16
dec
cmpl
sbb
fdivs
xchg
fsts
mov
repnz
popa
sub
or
cmp
mov
mull
lahf
into
loop
cmpsl
cmc
adcb
cmp
arpl
lods
sub
clc
mov
mov
mov
mov
mov
mov
xor
clc
push
lret
add
repnz
cltd
jecxz
push
mov
sbb
das
jne
aad
mov
fidivl
mov
mov
mov
xor
lcall
adc
outsb
xor
out
lock
scas
rorl
cmp
les
inc
movsl
into
mov
ja
cmp
cltd
popa
jae
adc
out
pop
pop
jb
arpl
xor
push
pop
arpl
inc
xor
ficomps
cmpsb
shrb
cmc
out
fisttps
scas
dec
xchg
push
mov
into
push
pop
jbe
outsb
mov
adc
or
jg
divb
ret
inc
cltd
ja
xchg
inc
pop
fbstp
sahf
adc
mov
push
mov
jae
pop
dec
adc
jne
lock
outsb
ret
scas
or
pusha
sub
incl
scas
xchg
jg
sbb
mov
dec
jle
mov
cs
adc
jg
int
sub
mov
xchg
lret
mov
jge
roll
decb
inc
xchg
or
push
lret
sbbl
or
mov
js
aas
in
pop
xlat
rcll
push
xchg
xchg
mov
adc
stos
fldl
mov
ds
inc
aas
dec
dec
sub
xor
jns
pushf
pop
push
sahf
rclb
scas
fs
jge
jecxz
cmp
subl
fistl
hlt
sub
ficoms
subl
xchg
dec
xor
stc
stos
cld
leave
fistpll
fisubs
inc
loopne
xchg
jae
clc
lea
xchg
das
ss
mov
bound
inc
inc
stos
mov
inc
pusha
fmulp
dec
pop
out
jg
mov
sbb
addl
clc
mov
jle
daa
movsb
sub
pop
rorb
movsl
mov
xchg
stc
or
divl
mov
movsb
fsubl
orb
scas
cli
js
mov
ret
mov
sti
cltd
decb
push
push
mov
enter
add
pop
lods
sub
xor
iret
inc
jb
jge
ret
pop
push
sbb
xor
lods
test
sub
inc
xchg
daa
push
outsb
enter
fnstcw
pop
clc
popl
inc
ss
sbb
stos
lahf
fcomp
out
xchg
push
pop
aaa
xchg
into
popa
jo
cmpsb
inc
aad
dec
sti
mov
push
sub
scas
push
or
xor
pusha
xchg
add
lea
jmp
inc
adc
dec
pop
xor
cltd
xor
inc
je
fisubrs
jnp
outsl
aaa
push
add
addb
rorl
outsb
and
and
aaa
jnp
or
jb
adc
mov
sub
mov
lahf
out
add
sbb
jns
pop
sbb
lret
adcl
jbe
dec
push
cmp
fwait
scas
bound
insb
lcall
insl
lods
shll
adc
push
lods
movsb
add
lods
jg
repz
ljmp
xlat
aad
xchg
jmp
insb
iret
pop
adc
int3
sbb
out
rclb
stc
pusha
pop
or
incl
cmc
in
pusha
popa
adcl
cmp
mov
lahf
pop
ljmp
xor
nop
jmp
addr16
xchg
arpl
jle
jmp
lds
into
out
xor
fbstp
adc
pop
cmp
add
mov
outsl
rcl
mov
cmp
adc
fs
mov
xor
and
cmp
pop
scas
bound
or
jbe
pop
outsb
add
and
mov
sub
inc
xor
xor
loope
mov
sub
cmp
pusha
out
pop
add
push
ds
push
pop
ret
mov
jno
mov
jg
xchg
filds
xchg
out
mov
sub
mov
dec
mov
cli
out
dec
xor
jno
jae
cwtl
lock
sbb
fisubrs
jo
sahf
jmp
mov
mov
stos
sbb
out
pop
pop
pop
push
pusha
mov
out
mov
insl
ja
lods
and
xor
cmp
adc
adc
cmp
inc
add
fbstp
mov
push
out
adc
jg
je
aad
xchg
pop
mov
inc
fimull
cmc
jmp
mov
jmp
out
clc
push
enter
sbb
into
mov
xchg
or
fs
lcall
scas
pop
and
push
test
je
xchg
mov
into
mov
nop
mov
jns
add
adc
inc
sub
cld
js
xor
and
lods
pop
sbbl
mov
cmpsb
push
clc
rorb
lret
lret
les
je
ret
shr
loopne
call
cmpsb
in
mov
sub
je
outsb
lock
fnstsw
xchg
xchg
jno
add
mov
xchg
adc
popf
push
lcall
dec
jle
imul
sbb
movsb
and
aad
inc
lock
ja
mov
adc
xchg
imul
adc
cmpsl
dec
and
fstps
lds
popf
je
lods
push
mov
enter
pusha
dec
mov
flds
push
xor
insl
shl
dec
rolb
cmpl
mov
mov
mov
xchg
bnd
sahf
cmp
jno
inc
out
cltd
mov
mov
mov
jne
mov
xor
int
mov
lds
xor
adc
stos
mov
les
cmp
sbb
jns
mov
in
cld
mov
lahf
repnz
mov
fistpl
xor
aaa
ljmp
in
icebp
pop
fwait
xorl
fs
xchg
cmp
dec
jl
mov
ret
hlt
nop
xor
dec
inc
fcmovnb
adc
aad
cld
pop
popf
push
xor
ret
lcall
push
xchg
call
sub
ds
mov
in
cmpsb
xchg
nop
pop
push
add
in
mov
arpl
push
mov
dec
jl
push
sub
int
je
mov
mov
cmp
adc
fidivrl
and
shll
mov
adc
push
jmp
sbb
test
fucomip
fistpl
push
daa
sbb
dec
pop
cmp
push
inc
ret
or
dec
or
adc
call
mov
push
lods
or
pop
orl
mov
lds
cli
mov
movsl
js
push
cs
sbb
mov
mov
ja
in
shrb
xchg
call
sub
adc
push
jl
scas
pushf
xchg
das
rcrl
les
neg
bound
dec
mov
push
pop
fidivrs
add
add
insb
repnz
push
ljmp
mov
fsubl
fsubrs
movswl
sbb
rcrl
inc
push
or
adc
insb
inc
aas
and
jl
jae
xor
jge
or
xor
inc
push
and
rcrb
mov
inc
xor
sbb
fnstcw
push
rorb
imul
js
adc
sub
fistpll
mov
testb
adc
pop
out
or
pop
out
fcom
dec
mov
popa
adc
mov
and
ds
jecxz
cmpsb
push
sub
mov
loopne
std
scas
mov
or
call
jns
inc
or
mov
scas
insl
push
mov
mov
mov
xor
push
pop
stos
cmp
mov
cmpsb
pop
into
xor
push
in
inc
lea
xchg
aam
loop
sub
movzwl
stc
pusha
dec
adc
sub
es
push
loopne
pop
fadds
mov
pop
rcrb
aaa
test
pop
imul
outsb
sbb
cli
pop
pop
pop
mov
fadds
stos
mov
clc
jge
xor
nop
or
dec
js
mov
push
sbb
sub
pop
outsb
xor
or
inc
inc
add
repz
leave
nop
push
mov
jle
and
out
test
push
jge
lahf
sbb
in
mov
adcl
xchg
arpl
icebp
movsl
ret
rep
jbe
cs
into
lret
adc
pusha
xchg
push
jle
cmpl
jae
sarb
push
jne
movsb
aaa
fs
jae
mov
mov
jmp
fistps
pop
and
xchg
inc
or
xor
fistl
popf
pop
leave
dec
dec
std
fisubrl
dec
cs
jnp
inc
into
scas
fnstcw
test
je
inc
mov
mov
or
cmc
xor
jne
xor
cmp
int3
fdivrl
popa
xchg
cli
mov
jns
popf
push
mov
dec
add
fimuls
jle
pop
pop
jb
ss
sub
dec
pop
sub
mov
jg
jnp
or
xchg
sub
xor
push
mov
iret
xchg
sbb
pop
out
inc
adc
pop
mov
or
stc
inc
jp
adc
dec
pop
sti
pop
stos
mov
sbb
or
mov
mov
ljmp
jae
mov
test
cmp
bound
pop
mov
inc
mov
test
or
out
ljmp
fwait
and
fs
jnp
mov
mov
lret
ret
adc
adc
sub
shll
add
pop
add
mov
jp
decl
sbb
fnstcw
aam
or
inc
mov
sub
gs
jb
cmp
mov
fnstcw
jg
dec
das
aad
push
mov
pop
xchg
lods
xor
and
pop
notw
mov
stos
out
jg
pop
pusha
add
ds
add
xor
xchg
mov
data16
test
lret
loop
mov
dec
push
lds
fstps
sub
pop
cltd
push
xchg
add
adc
add
pop
dec
fistl
pop
sbb
jae
jno
mov
and
js
and
mov
test
and
cli
das
test
ljmp
cmpb
shl
enter
dec
cltd
jg
loope
mov
xor
lock
sahf
lret
ja
jns
inc
add
inc
es
cmp
inc
divl
or
jae
xor
mov
lret
fidivs
ss
mov
in
and
pop
jo
out
xor
scas
or
cmp
adc
mov
xor
data16
add
add
adc
mov
sub
jae
insl
dec
add
ss
mov
cmpsl
jl
out
add
test
jb
jno
stos
cmp
in
sub
fstl
int3
inc
or
int
stos
lock
popf
es
popa
imull
mov
test
div
fsubl
movsb
dec
imul
sbb
lahf
xor
jge
andb
sub
xor
mov
push
sub
test
mov
mov
pop
mov
fcmovnu
mov
sub
negl
jb
or
loopne
and
pop
roll
xor
push
test
sub
push
cmpsb
stc
sub
mov
test
push
notl
aad
enter
push
outsl
pop
pop
dec
pop
xchg
inc
inc
iret
push
ljmp
push
std
xor
rcl
dec
out
mov
je
dec
nop
lret
rorb
aaa
cs
push
mov
mov
dec
nop
mov
int3
test
test
stos
repz
sub
and
fdivrl
lock
aaa
imul
xorb
shlb
xor
mov
stos
lret
mov
xchg
std
cmc
lahf
jae
dec
cmp
sahf
mov
inc
pop
gs
fistps
inc
xor
scas
orl
lahf
data16
xchg
jmp
repnz
sub
and
aad
jno
jne
sub
mov
add
test
mov
ss
xchg
jns
mov
push
pop
or
push
into
pop
and
inc
mov
hlt
mov
mov
or
addr16
movsl
mov
ficoml
cmp
ljmp
xchg
test
mov
cwtl
dec
das
pop
pop
mov
sub
lods
into
loop
out
mov
lcall
xchg
insl
dec
fstps
xchg
jmp
les
push
mov
mov
adcb
stc
mov
push
pushf
and
lea
sub
movsl
repz
jns
cmp
iret
shll
cmpsb
cmp
lcall
jb
or
xlat
je
pop
movsb
in
push
cmp
xchg
data16
mov
sysexit
sbb
cmp
imul
mov
sub
push
stc
movsb
mov
dec
rorl
js
mov
rcrb
out
mov
add
pop
ss
test
out
aam
in
xchg
xchg
mov
pop
and
inc
pop
lds
push
xchg
mov
or
into
addl
xor
mov
add
push
cltd
test
add
in
out
fmull
scas
imul
and
lea
or
xor
and
xchg
mov
and
or
pop
fistpll
sub
or
mov
dec
in
sub
mov
adc
jns
add
xor
out
mov
mov
iret
pop
lods
mov
fstps
pop
inc
jp
xchg
lret
adc
call
push
test
outsb
ja
mov
dec
jge
cmp
jo
in
mov
outsb
test
ja
gs
aam
sbb
pop
subl
pop
mov
dec
inc
inc
pop
scas
inc
aad
in
out
mov
leave
sbb
ss
ret
xor
fldt
cmp
cmpsl
adc
cltd
xchg
mov
dec
test
sub
movsb
xchg
sub
in
insb
ds
xchg
sub
fmul
ds
inc
xor
cmp
mov
imul
inc
dec
or
mov
int3
mov
inc
adc
inc
and
adc
lods
mov
mov
std
ret
inc
dec
fnstcw
or
mov
cmpsl
mov
push
test
add
jl
add
divb
addr16
int
rcll
jno
mov
aad
ja
jbe
gs
stos
xlat
and
sbb
fcoml
sahf
or
sub
push
pop
aam
fstp
mov
negb
or
or
test
adc
mov
jl
xchg
push
fmul
xchg
mov
scas
add
out
repz
mov
sbb
xor
hlt
mov
cmp
sti
push
inc
pushf
fnstcw
pop
rcll
fadd
mov
aam
and
mov
in
popa
hlt
test
mov
rcll
push
repnz
lcall
sub
inc
ljmp
out
lods
mov
mov
loopne
sub
daa
dec
push
xor
rcll
aas
frstor
add
mov
fcoms
jae
xorl
adc
mov
jno
pop
adc
insb
bound
or
xlat
test
pop
pop
lds
mov
pop
dec
pop
push
sarb
ja
popa
add
popl
cmc
and
ret
xchg
add
pusha
inc
enter
pop
cmp
shll
cmp
sub
cmp
ficoms
popa
jecxz
shl
pand
xor
lret
test
fs
loope
shl
pop
stos
es
xor
sbb
jo
mov
andl
dec
add
dec
jbe
data16
ficompl
and
movsb
test
push
xchg
add
mov
adc
pop
std
pop
add
nop
xchg
jge
int
enter
add
mov
call
andl
add
stos
inc
push
push
inc
xchg
ss
rcrl
inc
fidivs
add
in
js
iret
imul
data16
out
xor
xchg
pop
fs
loope
adc
inc
pop
test
loop
mov
mov
push
push
ret
mov
mov
mov
loop
jno
cmpsl
push
sbb
xchg
ret
push
loope
mov
mov
push
lahf
ja
push
int
xchg
xchg
xchg
stc
pop
sbb
leave
push
fcom
fstpt
roll
cmp
jl
or
push
mov
test
xor
aam
stc
notb
enter
add
cmp
hlt
fstl
pop
xchg
sbb
in
outsl
or
xchg
and
cli
mov
adc
loope
popf
loop
imul
xchg
mov
push
cmp
dec
pop
pop
in
shrb
ljmp
pop
push
scas
clc
inc
add
sbb
dec
shr
sub
ret
push
mov
jp
jo
jle
jp
aad
dec
or
test
mov
ljmp
repz
test
fidivrl
mov
mov
jb
aas
ljmp
scas
fnstcw
mov
imul
stos
pushf
add
fs
sbb
roll
mov
inc
jne
xchg
enter
jle
into
pop
add
and
lcall
mov
repz
lock
sub
loopne
jae
or
fucom
sub
clc
sub
add
imul
js
inc
rorb
or
and
or
ss
aas
shll
pop
sbb
mov
shrb
adc
lds
addr16
xchg
dec
mov
pop
outsb
mov
loop
shlb
inc
popf
test
xchg
jns
enter
cmp
mov
mov
push
loope
in
popf
into
fsubs
add
minps
pop
fldl
fnstenv
mov
push
popl
push
pop
cltd
cmp
mov
sub
pop
int
mov
xor
hlt
cmp
scas
inc
mov
sbb
and
in
fcompl
inc
pop
dec
fsts
in
dec
inc
dec
sub
lahf
jmp
jno
cmc
jl
mov
daa
out
and
roll
jns
inc
pop
aas
aad
sbb
test
outsb
aam
jl
jno
js
dec
mov
mov
or
filds
rcr
cmp
orb
sahf
cs
sahf
mov
mov
lods
cs
sub
mov
dec
test
icebp
inc
scas
stos
adc
insb
sub
fcmovnu
push
inc
cli
mov
mov
add
cmp
inc
mov
jae
xchg
out
sub
mov
jbe
inc
sti
aas
sbbb
jno
sub
adc
insb
xor
or
shl
fsubs
aad
sbb
outsb
fwait
rdtsc
test
ja
ficompl
out
test
sub
cmp
and
mov
test
scas
sub
push
jb
pop
imul
aaa
movsl
mov
adc
call
out
mov
sub
fstps
int
stos
int
mov
lods
mov
test
loope
lcall
mov
add
inc
xor
popa
int3
gs
shrl
imul
shlb
dec
inc
and
stc
leave
mov
and
insb
dec
adc
jae
daa
mov
mov
test
outsb
pop
and
mov
xchg
scas
xor
shl
sarl
or
mov
push
push
outsb
jb
fiadds
lret
push
jae
nopl
popa
sub
dec
add
lock
in
std
jns
inc
sti
andb
enter
cmp
fmuls
mov
mov
nop
mov
jg
lcall
ret
mov
std
and
add
jg
scas
cmp
stc
int3
enter
or
ret
dec
dec
adc
xchg
inc
aaa
jno
push
pop
jae
inc
adc
mov
hlt
lret
add
dec
mov
hlt
xor
push
or
pop
notb
sbb
psubusw
sahf
dec
cmp
mov
sub
dec
test
mov
cltd
xchg
or
cwtl
cltd
aaa
aam
stc
push
mov
adc
leave
xchg
adc
outsb
js
jg
pop
sub
cld
mov
sbb
rolb
mov
push
add
mov
mov
repz
pop
mov
add
mov
fcomps
sahf
jo
pop
add
add
push
mov
gs
xor
imul
xor
in
setb
test
sahf
imul
aaa
jle
xor
xor
add
popf
adc
stc
or
sub
mov
mov
fcmovnbe
jecxz
push
sub
sub
inc
mov
loopne
negl
or
sarb
int3
xor
stc
or
insb
pop
push
mov
add
ja
fists
xchg
imul
shrl
pop
ret
dec
inc
add
movsb
pop
jns
hlt
push
insb
mov
sub
aas
jge
fstpl
or
jmp
std
rorb
js
xchg
lds
aam
mov
cmp
pushf
cmpsl
jp
dec
clc
sub
repnz
inc
push
xor
rcrb
mov
mov
jmp
fisubs
xchg
test
movsb
rcrb
imul
pushf
fidivl
rclb
cmp
fdivrp
mov
bnd
push
jle
iret
and
or
fmul
mov
jmp
sbb
jno
test
sub
mov
cmp
cmp
mov
repnz
pop
xchg
add
jp
adc
sub
adc
sbb
xor
mull
push
test
shll
mov
push
sub
adcb
or
in
sti
jmp
jle
xchg
hlt
into
in
push
xchg
in
push
test
pop
loopne
es
rcrl
dec
ret
xchg
pop
pop
inc
push
fs
addr16
mov
sbb
jo
cmp
ds
jmp
ret
sub
test
push
scas
std
int
jg
adc
pop
mov
or
xor
xor
into
dec
mov
dec
mov
and
leave
movsl
pop
dec
scas
mov
shr
xchg
ret
stos
dec
testl
neg
dec
repz
aam
add
sub
xor
sub
je
mov
shl
xor
mov
mov
mov
loopne
nop
sub
enter
or
or
mov
add
pause
inc
xor
je
imul
ret
mov
scas
test
push
xor
mov
mov
inc
sub
movaps
lods
test
xor
mov
mov
rolb
test
cwtl
iret
cmp
lea
jno
jae
add
rcrb
and
mov
jge
push
jne
dec
jnp
stos
cld
daa
pop
ss
js
stc
add
movsb
jge
adc
inc
call
fs
xchg
addr16
mov
stc
add
adc
xchg
lret
jbe
mov
leave
cmp
and
js
aaa
push
test
daa
sub
stos
xchg
ja
mov
cmp
ret
insb
pop
fidivrs
movsl
mov
pushf
adc
fimull
shlb
dec
pop
push
adc
ret
sub
xchg
rclb
push
mov
sub
fisubs
sub
jne
mov
pusha
sarb
or
cwtl
jns
ja
cmp
stos
ret
xorl
adc
das
jmp
out
in
sbbb
lret
cmp
sbb
inc
dec
gs
ret
hlt
div
pop
cmpsb
push
xlat
add
jg
in
outsb
cmp
and
adc
iret
aam
stos
mov
inc
pop
nop
jnp
mov
pushf
lahf
aaa
push
nop
jo
jne
mov
inc
sbb
mov
mov
decb
hlt
xor
xchg
jnp
add
movb
add
mov
out
pop
ljmp
gs
and
dec
dec
inc
add
popf
pop
out
roll
mov
push
sbb
mov
dec
sub
hlt
or
ficoml
xchg
pop
jae
cmp
sub
sub
sbb
mov
hlt
popa
addr16
fmuls
pop
imul
add
stos
or
mov
bound
jl
mov
xchg
xor
mov
and
mov
mov
sbb
sbb
ja
lds
je
xor
adc
sbb
loopne
push
xor
scas
xchg
cmpsb
rcll
cltd
outsl
rclb
sub
or
cmp
push
out
xchg
pop
mov
inc
clc
ja
adc
mov
in
xor
xchg
ss
xor
cld
test
repz
cmpsl
cwtl
je
out
or
cmp
inc
xchg
shl
adc
dec
fs
or
aam
faddl
xlat
xchg
scas
call
popl
fistl
leave
xlat
testl
dec
shrb
orb
pop
aad
xchg
into
xchg
dec
mov
push
ja
mov
arpl
ss
int3
cmp
jb
scas
mov
dec
mov
lret
std
xchg
dec
call
dec
outsb
push
pop
lea
add
or
and
popf
gs
xor
insl
std
inc
daa
mov
in
fwait
adc
mov
or
nop
ss
ja
cmpsl
push
mov
and
es
sub
mov
and
std
mov
jmp
stc
mov
sti
push
imul
out
mov
add
xchg
mov
pushw
cmp
lea
inc
lea
sub
gs
or
ret
sub
push
pop
fists
sbb
insb
sbb
or
icebp
jae
push
fnstcw
mov
dec
push
jg
pop
arpl
ljmp
jnp
add
cld
sti
cmp
repnz
cld
shlb
push
int
and
mov
aaa
mov
loope
dec
cli
int3
lcall
lods
mov
movsl
arpl
adc
dec
lret
fnsave
mov
in
ja
lret
cmpsb
out
call
fmuls
adc
push
ja
ficoml
sub
jmp
jae
mov
dec
xor
inc
pop
pop
xchg
js
daa
out
rcl
jl
fucomp
imul
pop
adc
test
mov
imul
fdivl
cs
adc
xor
in
sbb
xchg
fcmovbe
shrb
xchg
add
call
out
flds
dec
xor
jb
mov
js
push
mov
push
shrb
pushf
fucomip
inc
cmp
pop
add
cmp
loope
iret
fadds
jae
hlt
aam
pop
and
das
testl
out
addr16
pusha
cmc
scas
lret
arpl
mov
adc
fsubl
sub
xlat
stos
sub
dec
pop
daa
cmpsl
clc
fisubrs
scas
aad
aas
push
or
sbb
test
out
out
or
sub
scas
mov
test
fidivrl
jmp
inc
ficoms
cmpsb
xchg
dec
add
nop
push
enter
xor
dec
cltd
ljmp
aas
mov
mov
ret
arpl
jno
outsb
lret
shrl
loopne
jmp
mov
in
adc
lds
test
push
mov
int3
out
in
das
xor
jne
pop
rorl
call
pop
mov
xchg
cmp
sbb
jbe
in
cld
pushf
movsb
push
mov
nop
jbe
outsl
pop
hlt
rcll
js
dec
pop
mov
in
cltd
call
out
cli
cwtl
add
dec
das
xchg
cmpsb
js
jge
cmc
adc
mov
std
adc
pop
mov
mov
out
push
nop
ljmp
arpl
sub
push
fldl2t
sub
xor
jle
adc
xchg
sub
sub
xchg
jns
jb
jb
cmp
lret
jge
stos
js
add
push
jne
inc
jb
ret
aaa
pop
push
in
add
pop
and
fsubrl
sahf
mov
pop
push
sub
sbb
adc
push
aam
mov
fucompp
fsubp
mov
inc
xor
mov
mov
xor
loop,pt
sub
cmc
mov
pop
subl
cmpsl
inc
mov
pop
fcomps
fs
mov
flds
es
and
in
mov
cmpsb
mov
jp
cltd
or
pop
cmp
xchg
insb
sbb
push
lahf
xchg
jnp
outsb
sbb
jae
ret
xchg
jo
sbb
out
add
rcrl
outsl
xchg
adc
dec
xchg
test
pop
les
adc
mov
loopne
out
pop
jmp
push
rorl
or
out
xor
jmp
pop
ds
hlt
bnd
mov
fdivl
pop
test
loop
jne
xchg
out
add
daa
es
cmp
scas
arpl
int
fiaddl
std
ret
insb
mov
jb
dec
xor
and
enter
sarb
enter
out
xchg
leave
inc
mov
notb
popf
jecxz
lret
mov
outsl
psrad
add
aad
pop
add
pop
iret
xor
test
fidivs
inc
cs
cmp
repnz
aad
iret
repz
les
insb
clc
scas
inc
pop
add
std
mov
sub
jb
jg
fstps
int
jmp
jbe
insl
andl
sbb
push
or
mov
inc
mov
dec
mov
cmp
cmp
test
lock
out
aad
int3
test
imull
xor
inc
xor
outsb
out
add
or
xchg
pop
push
jle
aad
aaa
les
or
stos
push
push
inc
dec
pusha
out
sbb
add
test
dec
rorb
cwtl
aas
dec
cmpsb
shll
sub
fs
les
ds
pop
loop
or
sbb
xchg
push
xchg
sarb
movb
ljmp
aaa
aam
lock
mov
or
cwtl
cmpsl
dec
loopne
cmc
mov
mov
cmp
in
mov
cmp
xchg
cmp
lret
repz
pop
and
push
sbb
inc
jge
mov
insb
scas
test
repz
out
into
sti
adc
sbb
js
mov
leave
pop
dec
xorl
jg
out
dec
xchg
leave
adc
insl
sub
fadd
nop
inc
sbb
test
jb
lahf
cmp
int
inc
sub
enter
and
roll
in
xchg
aad
add
aam
push
data16
mov
push
mov
cli
test
es
jbe
decb
xchg
ret
imul
add
xor
sbb
jns
jne
aam
sub
pushf
inc
add
ret
xlat
sbb
or
shlb
jg
pop
ss
in
push
lcall
call
lods
ret
nop
xor
push
push
popf
lret
mov
mov
std
in
aad
sbb
jmp
pop
sub
in
out
int3
fisttpl
outsb
hlt
test
lret
push
xor
push
vpsubd
and
fbld
or
es
cmp
scas
or
xchg
pusha
scas
nop
pusha
sub
push
push
add
ss
stos
fwait
sub
fwait
test
pop
addb
push
loop
pushf
dec
mov
dec
jnp
fldl
sbb
mov
xchg
stc
aaa
xchg
push
sahf
push
pushf
xchg
cld
sarb
add
dec
sbb
mov
push
fs
dec
lock
sbb
divl
push
mov
rcr
pop
je
jae
loope
inc
jae
mov
lahf
sub
push
fcoms
icebp
pop
lcall
fwait
push
lds
sub
adc
aas
std
xchg
sbb
pushf
sar
insl
into
add
xchg
call
inc
shrb
push
hlt
or
jmp
mov
inc
mov
xchg
or
adc
rolb
dec
dec
dec
cmpsb
push
add
hlt
inc
ror
sbb
dec
sub
and
add
cmp
mov
push
in
push
and
xchg
or
push
sbb
sbb
int
and
adc
das
jnp
dec
ret
pop
fcomps
das
lods
jnp
xor
in
inc
mov
pop
sbb
lret
cwtl
add
in
shl
cltd
mov
xchg
scas
inc
adc
cmp
or
push
pop
mov
aas
ficompl
jno
je
mov
out
xor
outsb
pop
icebp
and
adc
xchg
fcomps
pop
xchg
fsubl
cs
aas
insb
mov
pop
and
adc
add
xchg
leave
xchg
shrl
mov
je
adc
sub
test
mov
je
clc
fstl
sub
inc
sbb
sub
gs
xchg
fnstsw
pop
sub
pop
cmp
js
xchg
xlat
push
and
sahf
pop
and
ljmp
sahf
es
out
mov
test
in
or
ret
test
cmpsb
xlat
add
xchg
and
cmc
incb
sbb
mov
sti
add
mov
mov
jle
cmp
mov
sbb
inc
enter
jg
iret
sub
xchg
ja
stos
jae
dec
lods
andb
lahf
insl
paddb
jb
jecxz
mov
or
mov
arpl
mov
shrl
les
test
std
lret
test
mov
pop
imul
int3
pushf
add
iret
push
xor
mov
ljmp
je
loopne
repnz
inc
scas
std
stc
mov
sbb
outsl
into
fildll
push
mov
jecxz
imul
adc
fdivrl
jg
jbe
xor
rcrb
jne
aaa
jp
sbb
and
scas
mov
and
loop
inc
lret
and
lret
data16
cltd
push
push
leave
data16
mov
stc
jge
fisubrl
pop
aam
sahf
mov
jno
pushf
pushf
not
jnp
iret
sub
add
pop
cmp
cmp
and
sub
add
loope
fidivrl
call
arpl
imul
std
dec
subl
sub
sti
cmpsl
sub
mov
mov
mov
inc
ds
not
movsb
mov
adc
pop
popf
cs
and
arpl
loopne
push
rorb
int3
lret
adc
fbld
fs
sar
adc
push
jg
iret
jno
adc
arpl
dec
andl
imul
in
jo
aaa
push
ljmp
fisttpll
cmp
sub
sbb
xlat
xlat
jb
jle
das
push
sub
cli
imul
scas
sub
arpl
add
xchg
jne
mov
ret
daa
xorb
fs
iret
or
xchg
and
pop
rcrl
xchg
mov
mov
movb
push
data16
mov
mov
insl
add
pushf
inc
dec
popa
pushl
cmp
xchg
jg
dec
mov
push
sbb
aam
sub
cwtl
das
out
mov
mov
insb
mov
fwait
ret
mov
inc
loop
jmp
mov
mov
scas
out
sbb
shl
std
pusha
scas
pop
test
fidivrl
fisttpl
mov
dec
jbe
icebp
fmuls
xchg
push
aaa
nop
daa
inc
jmp
adc
cld
dec
mov
or
push
mov
xchg
out
rcrb
lret
inc
shrl
pop
inc
inc
xchg
scas
pop
mov
or
mov
repz
sbb
fimuls
sbb
nop
jmp
insb
add
push
mov
repz
js
lock
mov
or
inc
cwtl
testb
and
pop
imul
jo
leave
pop
mov
rorl
mov
and
iret
jp
xchg
pop
jg
sti
call
or
add
daa
push
imul
and
mov
or
sti
mov
sub
les
jge
lret
into
loopne
jg
sti
notl
cs
inc
outsl
push
les
adc
or
lret
iret
mov
bound
cmp
repnz
sub
in
mov
ret
fidivl
pusha
sarb
push
xchg
insb
lods
movsl
pop
sub
xor
sbb
cli
jge
xor
cmp
sahf
mov
adc
and
fadds
out
add
shll
add
in
cmp
jmp
fstpt
add
cwtl
add
loop
loop
shll
shrb
pop
add
xchg
xchg
cmp
lock
inc
fisttpl
jo
fdivr
pop
fcmovnbe
dec
xchg
adc
add
xor
call
mov
cltd
sti
jecxz
fs
stc
push
inc
adc
and
nop
sub
int3
mov
ja
dec
push
test
cs
mov
pop
mov
jb
dec
xor
push
loopne
frstor
iret
je
sahf
out
adc
test
add
fildll
sbb
out
push
scas
mov
je
pop
iret
cmp
mov
xor
dec
pop
je
jno
adc
add
mov
fmulp
cmp
lret
lods
xchg
aas
mov
dec
nop
sbb
call
mov
les
or
sub
testl
and
xor
xor
xor
pop
add
pop
add
test
pushf
cmp
scas
pop
pop
lcall
xor
and
sbb
xor
arpl
mov
stc
subb
inc
lcall
rclb
int
in
inc
xor
cltd
dec
fbld
mov
shll
jge
or
mov
inc
fcoms
cli
mov
sti
jmp
rol
inc
std
mov
stos
mov
enter
inc
movaps
push
dec
mov
mov
mov
test
xor
mov
and
adcl
dec
mov
lret
inc
xor
mov
fisubs
mov
or
leave
test
loop
xchg
pop
add
es
aaa
cld
decb
sbb
andl
mov
popa
fcom
insb
scas
jle
pop
dec
aam
inc
cmc
sbb
out
sti
adc
test
inc
aaa
ret
push
xchg
dec
cli
out
pop
jge
mov
push
and
jo
adc
pop
dec
xor
sahf
fisttps
enter
xchg
xchg
push
sbb
das
and
or
jp
shll
scas
in
sub
dec
movd
fs
incl
jl
adc
cmp
pop
sub
stos
inc
push
sub
mov
jb
stc
out
pop
add
test
aad
or
sti
push
outsl
sbb
fcom
jb
ds
adc
jmp
push
add
arpl
jle
mov
mov
in
shrl
inc
lock
add
mov
mov
adc
xor
adc
xlat
cmp
cwtl
ficompl
sbb
push
pop
out
mov
lret
cmp
and
out
push
frstor
cmp
fucom
or
leave
js
mov
cmp
inc
in
insl
mov
xchg
jne
int3
sub
sub
xor
xchg
jno
cmpsb
scas
xchg
xchg
int3
xchg
aaa
sbb
pop
sbb
in
mov
stc
outsb
in
xchg
lock
adc
test
inc
mov
and
pop
mov
mov
lret
imull
sub
lret
push
mov
test
mov
cmc
push
lret
inc
adc
jno
inc
mov
leave
roll
test
insb
fisubl
add
xchg
repnz
stc
es
cli
jo
inc
xor
cmp
mov
push
lret
clc
movsb
push
mov
jbe
xchg
cmp
cld
or
mov
pop
sarb
lods
sbb
leave
es
push
fistl
addr16
push
push
pop
fsubr
mov
xchg
pop
and
repnz
test
in
mov
lcall
int3
sbb
cmpsl
les
lds
pop
enter
adc
cs
call
dec
sub
mov
xor
loope
das
push
mov
xor
int
push
shl
int3
outsl
enter
lds
xor
cmc
jge
inc
mov
jnp
arpl
fstps
je
pop
xor
and
push
into
cs
rorl
mov
or
adc
pusha
cmp
xor
outsb
pop
pop
mov
scas
pop
icebp
cmpb
pusha
pop
in
popf
movsb
or
lcall
add
dec
xchg
pop
mov
inc
inc
pop
in
ljmp
push
lcall
test
push
pop
jge
fs
jmp
mov
mov
in
int
cmp
inc
out
in
sub
dec
ret
adc
psadbw
test
test
imul
imul
push
mov
lds
mov
iret
push
mov
loopne
push
mov
icebp
sti
pop
xor
pushf
sub
add
movsl
dec
pop
cmp
xor
call
inc
insb
xlat
mov
dec
mov
sub
dec
lods
fsubr
xchg
iret
in
outsl
sub
sahf
or
sbb
sub
lods
inc
cld
and
adc
arpl
adc
xchg
into
jg
push
mov
sahf
out
push
push
aaa
lcall
jmp
enter
add
mov
push
and
rcl
les
inc
jl
sbb
in
std
cs
mov
sub
cmp
xchg
add
rorl
and
jecxz
ret
mov
xchg
xor
inc
cmp
enter
push
adc
mov
sbbl
push
mov
incb
jae
test
pop
je
xchg
lcall
adc
xlat
pop
lcall
and
sbb
xchg
push
fsub
ljmp
fs
test
mov
and
fdivs
iret
pop
out
movl
xor
mov
sbbb
and
outsl
aaa
or
dec
mov
inc
arpl
pop
test
jl
leave
cmp
sub
repnz
mov
push
pop
inc
sub
icebp
jno
mov
mov
mov
aad
and
repz
out
in
or
mov
int3
je
push
fwait
sub
jae
pop
push
clc
sahf
out
xchg
and
fcmovnu
inc
xchg
clc
out
icebp
pop
jp
sub
cmc
xchg
cmp
int
dec
nop
adc
pop
int
add
cmp
and
and
add
xor
rcll
rorl
lret
mov
jae
roll
mov
data16
dec
popa
push
mov
ja
mov
ljmp
or
cld
adc
jmp
fidivrs
loop
and
insl
push
popa
mov
push
sbb
sbb
cltd
icebp
push
shll
xchg
outsb
push
xchg
fisubrl
clc
mov
sub
cmp
pop
call
xchg
into
call
leave
scas
scas
xlat
pusha
aaa
cmp
shrb
rcrl
xchg
mov
pop
mov
push
or
fidivrs
cli
mov
add
les
jle
aad
add
scas
pop
addb
dec
pop
lcall
out
push
jmp
cs
inc
orb
es
stos
fwait
sub
scas
test
xor
stos
push
mov
popa
jmp
fadds
push
aad
repnz
mov
aaa
mov
fnsetpm(287
ret
lret
pop
add
data16
lods
jp
push
xchg
in
cld
sbb
pusha
adc
ja
mov
ljmp
jno
dec
in
sbb
lcall
jle
les
xlat
sti
cmp
push
dec
xchg
cwtl
inc
add
sub
add
fdivrl
sub
mov
movsl
mov
inc
dec
or
pushl
mov
mov
enter
xor
andb
daa
fwait
cltd
xchg
or
cld
outsb
test
inc
or
mov
push
ret
mov
and
pop
scas
mov
jns
iret
nopl
or
jmp
xor
dec
fwait
cwtl
ret
mov
xor
or
mov
test
lods
addr16
xchg
mov
test
xchg
or
jmp
dec
add
sti
xor
xor
sti
xchg
mulb
stos
lods
arpl
adc
mov
test
xor
pop
adc
sub
addl
insb
adc
pop
enter
fimull
adc
sbb
notb
pop
push
lret
arpl
jg
test
clc
test
mov
imul
pop
pop
loopne
jo
push
aaa
pop
fwait
icebp
das
pop
xchg
jnp
fmull
xor
sti
cmpsb
clc
stos
les
mov
xchg
std
and
lahf
stos
lock
stc
mov
push
jb
movsb
repz
adc
mov
mov
psadbw
xor
mov
mov
cltd
add
jl
or
lcall
lods
adc
add
and
cmpsl
loop
mov
daa
xchg
sahf
fwait
mov
cmpsb
push
cmp
leave
xchg
pop
aaa
and
aas
loopne
ljmp
cmp
xchg
lea
ret
pop
and
movsl
inc
mov
mov
mov
nop
dec
out
and
push
add
cmp
not
rcll
adc
lds
ret
movsb
pop
cmp
jne
or
and
lds
push
pop
nop
jno
fistpl
mov
xor
jp
nop
push
jb
adc
or
dec
mov
pop
mov
mov
cmc
popa
sbb
js
imul
aam
nop
sbb
xchg
in
sub
mov
sbb
mov
mov
xor
pop
in
mov
imul
mov
xor
nop
js
adc
mov
sub
add
or
xchg
mov
or
bnd
add
adc
in
add
push
insl
cld
mov
shrl
jle
repz
add
pop
or
inc
rep
cs
jbe
xchg
andl
inc
sahf
xchg
add
cwtl
shll
pop
lods
mov
in
sub
inc
stc
sub
pop
rcll
jmp
imul
roll
ret
movsb
cmpsb
pusha
jns
mov
mov
mov
addr16
dec
xor
in
sbb
stc
adc
in
or
fwait
xchg
xchg
mov
mov
arpl
mov
nop
sbb
cmp
push
ds
clc
loop
aam
mov
cli
movsb
jo
mov
call
call
inc
sbb
inc
icebp
mov
push
pop
incl
fdivrs
clc
jae
mulb
mov
mov
sbb
shrl
xor
jmp
shll
call
stc
sbb
mov
aam
push
in
out
cld
mov
fbstp
sti
jns
dec
push
lods
jl
cmp
repz
aad
sti
aam
jmp
dec
adc
and
lcall
je
inc
mov
sub
mov
scas
dec
inc
cmp
sbb
xchg
mull
sbb
movsb
fsub
stos
stc
sbb
jne
enter
outsl
bound
es
fdivs
push
sub
fnstenv
stos
jno
repz
fiaddl
subb
sbb
es
popa
pop
adc
test
xor
sbb
lcall
sarb
lds
lds
dec
rcll
jmp
xchg
and
adcb
lock
test
adc
sbb
test
cmp
mov
lods
sti
cmp
cmpl
into
out
mov
pop
cltd
push
mov
mulps
jge
call
outsl
jle
mov
dec
dec
or
fcoml
adc
sbb
cmp
movsb
dec
mov
sahf
mov
inc
pop
sbb
call
push
pop
pushf
outsb
mov
out
lret
adc
push
xchg
jp
ret
into
dec
ljmp
rcrb
push
mov
pop
mov
bound
jb
outsb
or
xchg
mov
jno
leave
mov
pushf
out
inc
push
mov
xchg
push
add
xchg
dec
in
lock
fcmovb
aas
or
aas
dec
cmc
out
mov
sbb
push
lods
and
and
push
gs
mov
sub
or
or
fwait
addr16
shll
pmuludq
sbb
lea
repnz
aaa
add
xchg
inc
out
pop
or
in
jae
pushf
inc
and
add
add
movsl
pusha
rcrb
pop
mov
ret
xchg
les
inc
test
add
sub
gs
stos
xchg
sbb
lods
xchg
std
and
inc
outsb
jae
lret
mov
mov
add
xchg
and
inc
xchg
cld
fildll
xor
aas
inc
int3
das
jnp
jb
out
and
sub
pusha
cmp
mov
adc
fst
popa
push
std
and
push
mov
adc
stos
hlt
pop
mov
jnp
mov
xchg
add
jns
in
frstor
push
jb
jmp
inc
mov
jmp
jl
pop
or
test
jne
inc
xor
add
or
mov
cmp
mov
es
outsb
xorb
sbb
jne
xlat
in
in
test
out
adc
movsb
movsb
mov
push
mov
shlb
shl
pop
add
xchg
stos
pop
push
add
dec
cmp
dec
dec
mov
mov
rol
loopne
or
leave
daa
pop
mov
sub
out
cli
out
pop
jp
jo
inc
mov
jmp
call
mov
test
in
pop
ss
test
mov
and
fmul
cmpsl
ss
in
sub
test
popa
sub
adc
out
cmp
ss
pop
mov
loopne
jnp
mov
cmpsb
stos
add
xchg
decl
orb
jl
cmp
scas
jns
je
pop
js
mov
xchg
jl
inc
xor
mov
pop
cmp
xchg
jle
push
fisubl
daa
xchg
push
sbb
pop
xlat
and
xchg
push
adc
xor
sbbb
or
adc
jle
push
mov
jl
xor
out
xchg
inc
adc
adc
jns
lds
mov
pop
adc
leave
nop
mov
jb
dec
hlt
fisttpll
push
sbb
sbb
lods
push
cmp
add
xlat
mull
mov
jl
or
ljmp
jg
cwtl
in
aad
push
out
outsl
sub
or
pop
les
sbb
leave
sbb
cmp
inc
js
push
rcr
scas
rcll
xchg
mov
mov
dec
mov
out
cmp
pop
lret
pop
mov
pop
mov
cmp
lahf
inc
sbb
mov
lods
imul
loope
ficomps
lds
ds
nop
mov
push
pop
jge
cmp
add
in
cwtl
das
jne
push
adc
and
push
lret
mov
mov
dec
mov
test
rorl
or
je
subb
xchg
sbb
mov
je,pn
pop
ljmp
xchg
mov
out
xadd
movsb
lods
push
fnstenv
aaa
rcrl
cltd
test
mov
into
insb
imul
cld
mov
or
xor
lret
mov
lahf
xchg
jmp
arpl
js
cmpsl
fisubl
icebp
inc
mov
mov
sbb
xchg
callw
mov
adc
push
sbb
in
repz
data16
or
cmp
pushf
xchg
inc
inc
daa
pop
into
test
repnz
cltd
dec
paddusb
icebp
sub
sub
out
sub
ja
daa
lcall
jae
fbld
jae
outsb
push
bound
pop
fwait
aaa
jge
cs
lahf
mov
adc
cmp
jb
inc
xor
and
mov
ja
xchg
xchg
xchg
push
sbbb
mov
jo
sbb
pop
mov
dec
sub
inc
xchg
addr16
sbb
popa
icebp
scas
cmp
cs
rcr
pop
rcl
sub
je
xor
xchg
mov
pushl
sub
mov
stos
movsl
cmp
ret
push
xchg
push
movsb
sti
jno
outsl
lds
movsl
pop
push
rcrl
and
mov
dec
test
aad
into
dec
outsl
in
out
xchg
pop
rol
jae
out
int3
jl
inc
lods
in
or
ret
dec
jb
cmp
push
insb
and
add
testb
dec
sub
das
inc
mov
jae
xor
inc
mov
jb
addb
add
shll
xor
and
push
mov
ret
jecxz
popa
mov
jae
mov
sbb
or
push
aaa
jb
fsubrs
cmc
pop
lea
add
xchg
mov
sbb
dec
or
fcoms
test
pop
sub
push
jmp
repnz
sbb
sub
sbb
cmp
jmp
push
rcr
icebp
loope
in
push
les
xor
sti
fucomi
cmc
adc
fwait
cltd
jl
pop
daa
xor
and
stos
mov
xor
cld
lcall
xor
into
fwait
dec
cmpsb
cmp
aam
out
jne
lods
xchg
stos
push
in
mov
pushf
jmp
lcall
ja
pop
mov
scas
lcall
mov
push
push
ljmp
ljmp
and
push
enter
push
notb
clc
add
push
push
mov
ret
cmpsl
jno
mov
xchg
cltd
inc
push
or
push
dec
or
lods
mov
rcll
mov
out
jmp
pop
leave
loop
jnp
sar
inc
test
mov
jns
mov
dec
mov
leave
and
enter
lds
jns
imul
imul
into
divl
aad
test
bound
dec
dec
sbb
push
ret
andl
insb
push
jmp
mov
jbe
xchg
mov
sahf
hlt
cmp
addr16
xchg
jge
imul
xor
rcrl
mov
je
repnz
shrb
push
push
leave
dec
jbe
xor
sarb
xchg
ret
cmp
mov
mov
adc
lret
fs
and
xor
sbb
inc
cltd
jl
insl
pop
push
test
call
sub
adc
shrb
fmuls
shll
ja
enter
decl
pop
gs
and
cmp
adc
jecxz
or
pop
or
scas
dec
in
cld
push
das
mov
push
and
sub
add
push
inc
push
xor
sarb
in
push
leave
shlb
adc
out
jmp
popa
push
imul
scas
imul
out
mov
push
bound
aaa
cmpl
dec
in
std
dec
mov
js
jo
das
aaa
in
push
mov
push
mov
cwtl
daa
repnz
sbb
jo
adc
addb
cs
sub
movsb
fidivl
jecxz
cltd
inc
daa
mov
and
add
subb
cmc
jge
test
mov
negb
das
daa
pop
add
in
repz
adc
jge
call
aad
xchg
and
mov
inc
and
pop
push
rolb
mov
pusha
mov
icebp
sub
pop
xor
stc
mov
add
sbb
incl
fnstcw
call
sbb
cmp
mov
lret
in
jg
nop
lahf
inc
mov
outsb
lods
in
adc
popa
inc
add
in
test
neg
aaa
sbb
into
sbb
pop
jo
into
fisubl
lods
in
ljmp
ja
in
fidivs
enter
adc
pusha
stos
pop
int
or
inc
fisubrs
outsb
je
loope
lds
out
and
fldcw
les
xchg
cmpsb
stc
cmp
jmp
adc
cmc
add
js
rcr
mov
pop
jmp
insl
jae
inc
sarl
rcrb
sahf
adc
jb
fstpl
jle
hlt
call
jcxz
pushl
shrb
push
add
cmpsb
and
mov
add
fisubrl
lcall
std
ret
adc
scas
fisubrs
and
insb
or
mov
jns
arpl
mov
pop
fnstcw
inc
lret
push
cltd
xor
sahf
pop
in
xor
lods
push
les
xchg
fcmovnb
add
scas
in
pop
cmpb
stc
pop
or
mov
xacquire
sti
cld
pop
mov
pop
add
mov
fmull
dec
add
and
scas
lock
add
int
cmp
rol
cmp
stc
pop
cli
leave
xor
add
or
mov
rorl
mov
movsb
aam
cmp
mov
xchg
or
sbb
sub
sub
clc
inc
das
movsb
movsl
shrb
fndisi(8087
insb
inc
fsubs
stos
and
jae
stos
jg
data16
pop
sbb
popa
mov
movsl
jg
pop
jae
je
pop
jbe
or
mov
xchg
sub
xor
inc
hlt
mov
ja
xchg
pop
dec
hlt
subb
idivb
push
sbb
inc
js
repnz
fisttpll
data16
leave
jbe
xchg
sbb
fcoms
iret
out
push
and
pusha
cmc
fwait
push
fwait
sbb
push
xor
adc
lret
add
pop
leave
sbb
negb
sbb
nop
cmp
orl
cmp
dec
cmp
jecxz
add
or
xchg
je
xchg
sahf
pop
and
shlb
jl
rorb
in
popa
je
mov
dec
mov
in
cmp
scas
negb
sti
jno
std
sbb
fstpt
into
push
jmp
imul
hlt
cmp
pushw
int3
jno
cmpsb
push
hlt
mov
into
push
adc
mov
cmp
or
dec
add
lods
jl
clc
jl
xchg
jne
cmp
out
jp
or
push
and
mov
add
mov
call
pop
bound
xlat
loopne
mov
fldt
mov
push
dec
push
sub
jl
mov
sbb
das
ficoml
insb
add
lahf
mov
nop
stc
push
pusha
setnp
jo
out
outsl
sbb
fistps
fsubrp
and
jp
push
pop
inc
int
xchg
mov
cmp
lea
orl
cmp
mov
add
or
cmc
add
stos
xor
in
fnstsw
push
leave
psubusb
mov
clc
jp
mov
insl
push
andl
test
out
rolb
add
pop
int3
ljmp
fdivs
xor
sbb
pop
out
nop
cltd
cmpsb
push
addr16
fs
dec
push
mov
xorb
push
sbb
jge
mov
lea
xorl
scas
psubb
adc
data16
aam
push
jle
or
sbb
jecxz
sbb
addr16
pop
cmpsl
loopne
test
sti
cmpsl
std
jecxz
or
cmc
xchg
add
fbld
adc
add
ficoms
imul
ljmp
outsl
int
add
loop
mov
lahf
out
mov
sbb
pop
and
sti
inc
dec
ss
roll
inc
rcrl
pop
or
push
adc
inc
or
js
sahf
jp
xchg
lret
in
lea
xor
sbb
decb
xor
fimull
dec
sub
jl
movsl
lods
add
shlb
add
repz
movsw
fidivrl
mov
cwtl
fldl
inc
sbb
lock
lods
jbe
or
pop
incl
test
dec
repnz
adc
popf
adc
aaa
push
arpl
pop
lret
bound
lahf
outsl
test
push
fnstenv
mov
push
out
arpl
sub
push
in
xchg
mov
dec
mov
stos
sbb
add
dec
mov
lcall
ret
lods
stc
gs
movl
test
dec
test
mov
sub
mov
hlt
stc
push
pop
fwait
push
jnp
lods
and
outsb
mov
sbb
aam
jle
xchg
ret
mov
mov
xchg
hlt
pushl
daa
js
xchg
call
push
add
aam
jns,pt
push
filds
pop
sub
jmp
shrb
outsb
mov
clc
pop
jbe
jg,pn
outsl
sub
jl
lock
dec
jle
hlt
into
ret
push
cmp
adc
test
leave
mov
int3
fisttps
ret
lea
xchg
push
add
pop
mov
arpl
dec
and
shrl
addr16
mov
nop
test
sbb
cld
aaa
push
adc
jmp
pop
fiaddl
in
out
add
sbb
dec
add
lods
sub
in
inc
mov
pop
int3
data16
icebp
fwait
xchg
and
and
push
pop
jl
rorl
in
test
sti
in
leave
stos
inc
pop
shrl
aaa
inc
cltd
lods
inc
sub
xlat
bound
cli
ficoml
inc
adc
daa
jo
and
loop
sbb
sti
sbb
bnd
xor
jnp
push
mov
mov
pop
lods
adc
add
enter
clc
adc
daa
and
cmp
movsl
jp
fdivl
dec
cli
fwait
imul
scas
pop
in
inc
ret
mov
pop
xor
subl
ret
jne
loop
sahf
dec
sbb
movsb
and
orb
fidivs
lods
lahf
or
or
sub
scas
popa
inc
leave
movsb
stos
add
dec
scas
int
mov
cmpsb
push
push
mov
adc
sub
outsl
mov
fisubrl
fildll
jo
inc
call
ficomps
jl
popfw
lret
in
add
orb
adc
xor
ret
jmp
or
xchg
or
ja
inc
mov
sahf
sbb
mov
mov
nop
rol
das
mov
aas
or
mov
dec
xor
fimull
arpl
xchg
fbstp
enter
icebp
pop
bound
fwait
inc
jp
fs
and
and
or
fldl
ja
ffree
inc
test
xchg
push
add
sbb
add
call
and
or
inc
movsb
cmp
movsb
mov
pushf
push
aam
mov
push
mov
test
mov
inc
xchg
cli
jge
jbe
cli
xor
aaa
cmp
repz
sbb
shlb
jp
add
cmp
mov
sbb
xchg
pop
jge
cmp
adc
lock
cmp
pop
shrb
cli
xor
lea
sbb
int3
testl
cmpsl
mov
sti
shl
fnstcw
mov
inc
adc
xchg
scas
loop
in
leave
adc
cmp
lea
pop
jmp
mov
mov
jle
int3
push
cs
add
or
add
inc
jno
mov
sti
xor
aas
dec
movsb
inc
das
ret
mov
cmp
into
arpl
push
scas
inc
daa
addr16
jp
subl
pop
cmp
mov
dec
add
xchg
scas
fsubl
divb
insb
pop
mov
rcl
stos
xor
dec
sbb
pushf
adc
push
push
scas
loope
mov
sbb
and
hlt
mov
cwtl
mov
test
pushf
adc
loope
fists
ficoml
xchg
lret
iret
jmp
xor
jp,pn
dec
push
mov
test
dec
sub
cs
loope
jl
arpl
dec
stos
and
bound
mov
scas
test
int
add
add
pop
das
jbe
dec
fwait
push
mov
mov
xlat
repz
add
push
add
arpl
pushl
push
decb
pop
push
jnp
inc
in
xchg
dec
cmpsb
add
ja
movl
icebp
leave
jbe
jnp
xor
add
adc
mov
cmp
faddl
repnz
out
mov
or
fdivrl
insl
pop
movsl
or
mov
jb
push
fs
dec
mov
mov
xchg
shl
call
cmp
gs
pusha
add
bound
mov
pop
movb
adc
in
data16
mov
repnz
sub
xor
xor
and
cmp
cltd
jo,pn
dec
pop
das
adc
inc
sbb
mov
int
xor
cli
enter
mov
popa
jnp
xorl
int
jb
inc
inc
lods
movsl
lret
push
jb
xchg
mov
rorl
hlt
jmp
aaa
dec
test
in
mov
pop
cmp
jb
and
cmpsb
xchg
in
mov
push
out
jmp
dec
sub
test
cmp
rcrl
mov
fsubs
mov
js
lods
and
xor
aam
out
aad
add
inc
inc
loopne
cwtl
pop
imul
mov
pusha
mov
jge
sahf
add
inc
fisubl
adc
adc
mov
dec
ja
cmp
fnsave
pushl
xchg
popf
mov
mov
push
daa
lds
mov
test
mov
std
shr
xor
jl
push
rol
je
jmp
out
jns
xchg
int3
dec
inc
xor
jecxz
js
xchg
push
rcrb
pop
sbb
add
testb
int3
divb
cwtl
hlt
rol
shlb
shlb
sarb
jle
bnd
push
pop
scas
std
pop
fdivl
dec
fstps
cmp
stos
dec
push
pushf
jmp
faddp
sti
mov
inc
or
inc
xchg
and
popf
inc
gs
cmp
dec
push
xchg
fisttpl
cmpsb
xchg
testl
mov
aaa
dec
mov
inc
jge
insl
icebp
pop
ss
or
lds
cmp
cmp
in
pop
xchg
insb
lret
imul
je
inc
and
pop
testl
rcrb
lock
add
out
out
mov
sbb
sub
xor
pop
add
stos
sub
or
mov
dec
xchg
fcomp
daa
xchg
pop
test
stos
jge
xchg
dec
scas
sub
jnp
bound
add
xchg
pusha
mov
fdivs
aam
ds
sub
and
add
mov
call
add
in
sbb
or
add
and
push
int
add
pop
xchg
sbb
or
pop
popa
mov
sbb
aam
lahf
add
jle
fwait
pop
xor
inc
pop
xchg
pop
jne
out
repz
cmpsl
sub
pushw
push
and
sbb
pushf
xchg
je
cltd
lret
xchg
push
pusha
cmp
push
sub
int
pop
jp
jl
xor
pop
testb
fnstsw
xorl
insl
roll
add
jne
jne
cmp
push
insb
cltd
ds
out
mov
mov
imul
and
call
mov
sub
rclb
pop
add
pop
scas
pop
mov
jl
inc
mov
mov
cltd
or
movsb
xchg
cmp
add
loope
or
sub
xlat
add
jg
test
out
movsl
clc
mov
and
lahf
inc
pop
stc
cmp
das
cwtl
mov
test
call
push
push
fldenv
adc
mov
mov
push
or
mov
out
adc
dec
mov
rol
lcall
add
sub
jo
and
inc
movsb
sbb
sub
das
xor
lcall
stos
outsb
fisttps
inc
in
mov
iret
test
jo
xor
pop
stc
lea
ret
cmp
xchg
dec
sbb
ffree
push
xchg
nop
dec
cmp
rolb
call
out
inc
outsl
lds
arpl
dec
xchg
ficomps
aas
fs
pop
mov
push
mov
sub
cltd
jno
popa
inc
popl
ds
adc
shrb
cwtl
pop
jno
fidivrl
out
cmp
mov
add
push
cmp
and
mov
rorl
sbb
add
jge
inc
adc
push
cmp
fdivrl
jne
cli
mov
aas
or
xchg
repnz
shll
push
mov
dec
mov
inc
adc
leave
push
in
or
cld
fildl
cld
icebp
xbegin
xchg
call
rcr
gs
nop
mov
push
ljmp
sahf
mov
mov
inc
rorb
ss
sub
add
sub
rcl
xor
aaa
loope
lea
repnz
mov
fdivr
pop
imul
sbb
sbb
fwait
mov
mov
repnz
addr16
scas
aaa
or
sbb
lret
push
pushf
out
inc
cld
lahf
ja
mov
imul
pop
sbb
cli
jbe
andb
push
add
dec
and
in
mov
aaa
aam
es
das
and
ret
cmc
mov
add
inc
aam
repz
fwait
push
pop
jp
mov
pop
adc
aaa
push
sti
roll
cmpsl
ss
not
xlat
data16
loope
loope
push
movsb
ja
test
in
nop
mov
and
xchg
test
je
or
repnz
push
mov
scas
or
pop
out
xor
adc
dec
or
push
cmp
jo
mov
mov
sbb
xchg
lret
push
cmp
int3
mov
sahf
frstor
inc
ret
or
inc
xor
mov
je
popa
sbbb
inc
stc
jge
popf
pop
ffreep
adc
lods
xor
call
incb
add
ror
mov
jb
outsb
sub
mov
inc
pop
pop
incl
frstor
and
aas
leave
ds
pop
sbb
jle
pop
pop
pop
xor
js
frstor
or
jbe
push
xor
and
jae
sub
ds
notb
pop
stc
jo
aaa
add
orl
mov
fmull
jge
add
xchg
jge
popa
aad
outsl
sub
pushf
lea
pop
movsb
sbb
xor
aad
dec
xchg
cmpsb
aam
shr
js
dec
mov
pushf
mov
mov
in
dec
rcrb
repz
inc
les
adc
sub
pop
jns
cmp
xor
hlt
shll
fwait
in
dec
xchg
aaa
jb
jnp
push
sbb
xchg
lcall
or
sahf
pop
pop
cmpsb
mov
arpl
test
lahf
push
jmp
les
ja
outsl
andb
jge
and
inc
into
out
sub
loop
add
push
inc
imul
les
cmp
pop
fisubrl
aam
in
cmp
rcll
sbb
or
in
fcoml
in
shr
xlat
push
jne
inc
mov
mov
adc
cmp
hlt
and
add
inc
hlt
insb
add
in
cmpsb
xor
fidivrl
adc
dec
gs
mov
incb
repnz
outsl
mov
jno
orb
dec
push
fdivs
cltd
incb
lods
mov
dec
mov
lcall
sub
jle
xor
cmp
dec
fwait
sti
xchg
bound
mov
dec
imul
pushf
xor
mulb
lcall
je
pop
test
adc
frstor
pop
fadds
push
dec
dec
xorb
lahf
popf
ja
cli
and
in
fistps
mov
pop
pop
or
mov
movsl
das
mov
dec
adc
mov
dec
cmp
and
dec
sbb
cs
jge
movsb
adc
jle
jmp
fdivrl
and
sub
push
fidivs
mov
adc
and
std
ss
loop
mov
mov
out
dec
xor
xor
or
shlb
mov
adc
adc
jns
gs
shlb
test
out
push
push
sub
jge
test
cmp
and
jbe
int3
imul
addr16
add
or
std
leave
add
aaa
repz
inc
jecxz
jne
mov
ljmp
xor
cwtl
iret
xchg
cmp
in
inc
xchg
inc
push
push
and
jg
adc
fiadds
pusha
loop
sti
cld
mov
mov
sbb
dec
dec
add
scas
pop
inc
inc
call
flds
mov
hlt
stos
pop
xchg
lock
sysret
sub
jge
pop
mov
fdivl
pop
mov
test
sbb
hlt
mov
xchg
sub
mov
xor
imul
dec
mov
adc
cltd
test
mov
loop
xchg
push
mov
fwait
int
sub
js
imul
lods
fstps
cmp
jge
test
xor
jp
pop
and
loope
adc
pop
lea
sbb
or
sbb
dec
movsb
mov
sub
shlb
dec
rorl
xor
dec
push
push
insl
mov
test
pusha
ficomps
adc
mov
or
add
icebp
pusha
jno
ja
fbld
cs
cs
ds
insb
leave
inc
mov
push
or
dec
fadd
outsb
jle
pusha
dec
out
and
mov
aaa
adcl
es
rep
mov
daa
dec
lret
push
jb
bound
sbb
lcall
incb
jno
mov
mov
dec
inc
aas
jne
jge
sbb
add
xchg
xor
xchg
cmpsb
sahf
dec
in
nop
adc
popa
into
pop
clc
jge
aam
ja
add
cld
cmp
ret
fs
lret
jne
xor
fwait
fwait
pop
and
sub
jecxz
dec
push
scas
jne
ret
inc
lcall
out
dec
cmp
test
and
push
cmp
pop
in
ret
xchg
hlt
mov
inc
sti
xchg
roll
aaa
lret
jge
jb
jnp
mov
mov
xchg
or
fs
sub
dec
mov
stc
mov
adc
dec
mov
push
dec
inc
adc
mov
xchg
push
out
mov
cmpsb
loopne
cmp
lcall
dec
divl
out
clc
cmp
xchg
sbb
push
shll
mov
sarb
push
cmpsl
and
jno
clc
in
sub
sub
add
cmpsl
pop
inc
jno
dec
sbb
lods
test
mov
inc
mov
add
std
adc
in
sbb
inc
fsubrl
fsubl
jecxz
mov
bound
jnp
mov
outsb
adc
jg
xor
mov
push
jle
lock
rolb
sbb
lret
mov
mov
xor
aaa
gs
jns
push
jge
mov
imul
xchg
push
adc
adcb
inc
fsubrs
push
fdiv
mov
aam
xchg
dec
mov
js
outsl
sarb
jns
mov
jb
dec
dec
fwait
jecxz
sub
mov
cmpl
add
mov
adc
pop
int3
loopne
cltd
fdivrs
cld
ret
mov
out
push
xchg
pop
aam
push
inc
inc
add
in
mov
dec
ret
mov
andb
pop
fucomi
or
es
ljmp
out
sbb
icebp
push
and
xor
xchg
repnz
jmp
das
pop
mov
clc
xchg
lods
pop
test
fldt
inc
mov
and
ror
add
in
icebp
xchg
out
pop
jo
sub
add
jnp
or
dec
mov
repz
stos
adc
lret
sub
adc
lods
adc
test
adc
pop
mov
dec
lods
dec
daa
xchg
in
push
pop
jg
pop
cmpsb
imul
les
mov
fbstp
inc
stos
outsl
xor
je
daa
mov
adc
int3
out
rolb
loope
jg
mov
xor
pop
in
inc
push
mov
arpl
incl
out
rol
sbb
sarl
mov
bound
scas
push
mov
mov
xor
rcl
mov
or
push
mov
or
mov
xor
pop
jbe
aam
xor
lds
sub
hlt
inc
mov
sbb
ficoms
jne
add
xchg
adc
pushw
dec
out
or
xchg
push
cmp
jmp
stc
xor
push
push
repz
call
gs
popf
jle
jle
pop
xchg
dec
xorl
xchg
push
jno
add
imulb
imul
loopne
xor
leave
loope
adc
push
popa
add
fnstenv
fadd
dec
push
inc
jb
movsb
lea
aas
mov
insb
inc
cmp
fisubrl
mov
dec
dec
inc
jne
enter
jmp
cltd
push
repz
fcmovnb
or
jo
pop
xchg
adc
jbe
adc
das
repnz
inc
daa
push
dec
imul
imulb
mov
xor
out
and
push
aaa
or
call
xor
ds
sub
iret
cmpsb
mov
xchg
fistpl
pop
jle
or
mov
xor
xor
shrl
sub
xlat
inc
std
xchg
aam
and
push
fistl
mov
adcb
shrb
adc
mov
lret
push
and
iret
loopne
lods
xor
pop
xchg
push
adc
sub
mov
pop
test
mov
pop
pop
out
cmpl
out
adc
nop
cs
jns
cs
mov
cmp
imull
aam
sub
dec
out
xchg
in
out
cwtl
mov
repz
popf
inc
xor
ficoms
sbb
mov
stos
push
xor
add
mov
mov
jae
add
or
stc
mov
dec
cld
fsubrl
in
dec
jl
cmpsl
xor
mulb
jnp
scas
jecxz
inc
cmpsb
pop
push
or
pop
call
sarb
fwait
jns
fwait
mov
enter
add
pop
inc
ljmp
adc
push
or
test
adc
int
xchg
push
insl
add
mov
lea
or
xor
jle
dec
adc
les
inc
lret
mov
push
mov
pusha
fwait
push
inc
iret
cld
jg
push
ss
hlt
pop
sub
push
inc
out
cmp
sub
lea
sub
push
outsb
in
les
sub
cmpsb
xor
mov
rolb
jo
pop
out
popa
push
pop
mov
push
data16
jno
jl
loope
stos
out
fucomip
adc
fistps
lret
loopne
sbb
add
imul
fadd
jmp
out
out
data16
sbb
fisttpl
pop
arpl
icebp
push
jno
iret
dec
sti
mov
jl
push
js
inc
sahf
mov
add
dec
rolb
scas
in
mov
nop
or
push
adc
cli
leave
xchg
fists
pop
test
cwtl
dec
dec
mov
test
aaa
jbe
cld
push
inc
push
sub
xchg
mov
jno
jbe
aas
xor
pop
dec
mov
sub
push
inc
pop
and
lahf
lock
les
das
pop
arpl
lret
mov
xchg
int
into
adcl
out
mov
xchg
cli
jno
pop
cs
in
in
mov
or
inc
sub
fiadds
push
jo
testl
inc
jo
mov
add
push
mov
jge
je
jnp
mov
loop
inc
lods
lods
movsb
ret
add
imul
test
in
cmpsl
scas
push
mov
aam
popf
cmp
mov
outsb
pop
or
dec
outsl
lret
mov
int
mov
outsb
add
bnd
jno
inc
cmpsl
leave
stos
les
insb
add
out
cmp
or
add
imul
aas
stc
rclb
jnp
mov
pop
cli
xchg
add
jle
inc
jne
jl
jns
nop
inc
fdivrl
imul
push
lods
cmp
xacquire
xchg
mov
pushf
sarb
aam
jle
je
pop
mov
jo
xchg
int
add
or
push
and
sarb
push
rclb
and
sbb
jae
test
jmp
cmp
adcl
lret
jbe
enter
fistps
mov
jmp
mov
xor
ret
int
mov
jmp
xchg
in
imul
test
cli
divb
daa
fistps
nop
pushf
int
xchg
cmovbe
cmpsb
mov
add
add
lcall
push
int3
into
jns
jl
and
xchg
push
jge
mov
xlat
data16
mov
cmpsl
fsubr
dec
hlt
jno
lret
or
ficompl
pushl
mov
mov
xchg
xchg
scas
pop
mov
enter
sbb
popf
out
sub
pop
cmp
iret
in
stos
jmp
dec
xchg
lahf
add
mov
sbb
stc
mov
fs
add
or
imul
xor
pop
sbb
mov
cmp
imul
sub
xor
jmp
jg
cmp
xorb
dec
push
cmpl
sub
add
mov
movsl
mov
pop
push
pop
movsb
in
xorl
xlat
imul
cwtl
mov
add
arpl
dec
jmp
sarl
sbb
sub
xchg
push
add
pop
into
test
mov
jl
cmpsb
das
lock
in
pop
adc
aam
cmpsl
jae
mov
push
add
cmp
push
fidivs
xor
jb
sub
jo
testl
cli
fldl
xchg
xchg
fbstp
mov
mov
rcrb
dec
mov
lret
push
fnstsw
sub
imul
cmpsl
in
add
dec
xlat
jns
loope
std
cmp
pop
stc
or
icebp
push
mov
out
loopne
cmp
call
clc
stos
pop
mov
pop
es
cltd
loopne
ffree
test
jo
add
adc
mov
pushf
or
aaa
push
leave
aam
fsubrs
icebp
daa
les
xlat
cwtl
cmp
data16
jae
mov
sbb
pop
ret
xor
adc
fmuls
cmpb
cmp
loope
ljmp
popw
in
cmp
or
cmpsb
xlat
rorb
fwait
pop
cmp
je
push
push
mov
inc
mov
jl
sbb
or
scas
and
mov
dec
dec
je
ret
and
jns
movsb
ret
lahf
sarb
daa
arpl
push
iret
test
ficoms
sbb
xlat
dec
addr16
jmp
pop
int
xor
int3
push
add
and
lcall
bound
fldl
mov
sub
dec
mov
shll
push
and
leave
lret
mov
ds
outsl
mov
push
aas
inc
push
pop
mov
xor
jbe
mov
cli
scas
push
lods
sbb
clc
test
sahf
stc
or
xchg
cmp
mov
out
in
mulb
rol
das
pop
xchg
ffreep
pop
cmp
out
cmp
out
mov
jecxz
dec
sti
enter
into
push
aas
push
test
cld
cmp
insl
mov
dec
fidivrs
fs
xor
imulb
insl
mov
inc
pop
adc
mov
sbb
add
movsb
das
into
pushf
or
mov
ret
pop
inc
xchg
cli
fcmovbe
push
pop
mov
mov
les
movsb
inc
lea
sbb
outsb
scas
or
popf
mov
jno
rorl
cmp
lcall
outsb
mov
aad
cwtl
add
sbb
pop
loope
mov
fstpl
sbb
fadd
push
repz
shr
push
adc
cs
adcl
cmp
dec
push
rorb
call
xchg
dec
out
inc
mov
adc
sub
je
cmpsb
lea
jle
shlb
mov
mov
adc
dec
cmpsl
shrb
jl
push
jp
pop
repnz
xor
popf
std
rep
push
js
dec
and
dec
repnz
push
dec
test
mov
aam
lock
aaa
xchg
and
xor
rorb
loop
mov
repz
push
lods
insb
test
fs
pop
idivb
xchg
xlat
cld
call
aaa
push
pop
push
lret
cld
mov
and
cmp
repz
push
pop
pop
mov
rcll
popa
mov
cmc
je
dec
fistl
jp
cmc
or
fwait
hlt
fnstsw
popf
popf
fdivl
fistpll
pop
insb
jbe
subb
ss
cld
push
push
stos
mov
fwait
and
or
add
lods
xchg
inc
jae
cs
lahf
dec
xchg
mov
cld
fucomp
dec
push
or
add
es
or
test
in
mov
fwait
js
popw
push
aas
cmpsl
mov
je
pop
cmpsb
xor
jnp
scas
jecxz
pusha
repz
mov
scas
roll
or
adc
mov
xchg
mov
shll
fsubs
jnp
lods
test
pop
jmp
mov
add
sub
loopne
mov
xchg
mov
pushf
call
jle
pusha
mov
dec
arpl
imul
cmp
dec
lret
xchg
outsb
mov
push
imull
out
and
jno
aas
push
dec
and
add
xchg
inc
push
xchg
ret
lods
mov
int3
or
sub
out
jne
adc
mov
outsl
xor
cmpsb
icebp
xchg
neg
sbb
xchg
xor
add
cwtl
fisubs
inc
rclb
add
sub
enter
rcrb
lods
inc
loopne
xor
int3
rcrl
ljmp
sub
jmp
mov
adc
in
add
or
xor
out
loopne
dec
mov
mov
mov
mov
mov
add
push
int3
mov
cld
aaa
or
xchg
adc
lret
inc
scas
push
dec
inc
in
cmp
add
nop
jg
add
add
inc
es
aas
xchg
push
hlt
imul
mov
jecxz
sahf
pop
out
or
scas
mov
fwait
nop
push
les
push
mov
pop
push
loop
mov
aaa
xchg
cmp
xchg
mov
dec
popf
lcall
sub
xor
dec
andb
pop
imul
pop
int3
jle
lds
test
ljmp
mov
mov
je
stos
jecxz
dec
es
jle
and
sbb
cmp
or
xchg
and
mov
mov
cmp
cli
notl
push
dec
add
mov
mov
pop
or
push
dec
ret
aam
loope
jb
adc
int
frstor
sub
sub
iret
push
add
out
in
sahf
mov
jns
mov
or
insb
add
xor
xor
inc
loopne
xchg
cmp
xor
loopne
insl
xchg
mov
lahf
pop
dec
test
leave
xlat
inc
and
xor
cmp
sbb
jle
sub
cli
xor
outsb
sti
jb
sub
lahf
lret
or
xchg
movsb
out
faddl
out
pop
in
sub
sub
leave
adc
idiv
xor
rcll
push
mov
outsl
push
das
dec
inc
fbld
push
aaa
bound
popa
pop
xchg
jno
rcrb
push
fists
sbb
dec
mov
nop
inc
cmp
mov
popf
sub
jno
mov
pop
sub
jge
mov
stos
fistpll
pop
inc
inc
mov
or
mov
push
push
inc
frstor
inc
inc
cmc
cs
mov
inc
int3
push
adc
lods
sbb
popl
xchg
fmuls
rcrb
and
jl
test
mov
bound
jbe
insb
inc
inc
mov
mov
lret
cwtl
rsm
xor
jecxz
int
add
xlat
aaa
sbb
movsb
cmp
xor
out
dec
outsl
outsl
push
mov
movl
cld
inc
mov
dec
push
mov
mov
popf
push
inc
and
enter
push
repz
fst
adc
sbb
jp
pop
fnstenv
dec
nop
cmc
mov
imul
ds
adc
pop
lcall
stos
xchg
and
aad
cmpsl
add
arpl
test
sbb
sbb
add
push
dec
les
cmp
mov
lcall
jle
call
jb
jg
sahf
pop
inc
xchg
push
mov
mov
sub
test
test
test
nop
mov
arpl
out
adc
mov
xor
gs
sarb
repz
jns
ss
inc
sbbb
scas
sub
pop
ret
adc
push
sti
repz
sbb
jae
fwait
mov
mov
xchg
pop
sbb
pop
ficoms
test
fwait
sbb
or
ds
inc
fists
iret
movsb
sbb
call
sub
adc
mov
sbb
or
lods
sti
bound
mov
daa
fwait
sbb
jl
xchg
lcall
mov
subb
lods
sbb
cmpsl
shrl
scas
mov
mov
push
xor
test
repz
das
daa
xor
inc
dec
jmp
dec
in
in
jns
insb
int
cld
lods
hlt
je
mov
or
lods
pop
adc
cmp
testb
pop
push
insb
jmp
bnd
jns
cmc
stos
xor
adcb
xchg
pop
outsl
loop
lods
inc
lea
into
mov
xor
test
xchg
ss
xchg
jnp
sbb
inc
lock
xchg
push
mov
sub
jbe
je
lea
adc
iret
push
lods
push
and
adc
cmpl
lds
mov
push
aas
dec
inc
shll
cwtl
push
inc
in
xor
mov
mov
lahf
push
jnp
mov
add
loopne
sbb
jnp
push
divb
lods
aam
dec
xchg
adc
test
sub
aam
mov
into
das
cli
clc
inc
aad
ret
mov
test
das
lret
mov
lds
rorb
and
fadds
cmpl
mov
jmp
mov
adc
xchg
xchg
sub
stos
test
mov
negb
add
and
sti
xchg
in
out
fmuls
sbb
xchg
xchg
mov
cmp
jae
pop
xchg
cmp
push
insl
push
mov
inc
mov
adc
stos
xchg
cmp
addr16
add
push
repz
rcl
in
pop
je
mov
dec
lret
push
fsts
dec
and
shrl
mov
aad
icebp
pop
add
iret
dec
xor
sub
aaa
fcoms
ds
call
and
scas
fwait
sahf
fnstenv
sbb
mov
xchg
xor
sbb
cli
addr16
ja
mov
gs
dec
lods
sbb
sub
ret
std
adcb
imul
adc
xorb
pushf
cltd
inc
pop
mov
stos
inc
pop
enter
mov
jmp
xchg
dec
dec
adc
repz
movsb
gs
push
movsl
filds
push
divl
push
mov
and
inc
leave
or
pop
mov
sti
das
jg
push
les
ss
stos
inc
inc
sbb
mov
pop
je
in
out
loopne
push
dec
mov
add
and
inc
sub
push
push
sbb
inc
popa
add
cmpsb
out
cmpsl
das
mov
dec
loope
repnz
fimull
lods
outsl
adc
call
push
and
int3
iret
out
js
lods
sub
cmp
js
rcrl
icebp
add
jne
dec
pop
data16
insl
rol
or
cs
mov
shrb
sub
push
add
or
inc
push
adc
arpl
clc
stos
jnp
cmp
adc
push
fmulp
add
sub
or
aaa
es
data16
jmp
push
jnp
fdiv
xor
lahf
cli
fs
sarb
mov
pop
push
adc
lods
push
sub
cmp
xchg
xchg
lods
mov
add
xchg
in
adc
mulb
iret
inc
xchg
dec
insb
je
int
aam
stos
add
pop
sahf
mov
jmp
cmp
jbe
int3
jno
stc
cs
movsl
pop
into
lahf
add
jge
lock
adc
shrb
pop
mov
test
mov
mov
push
push
add
push
ret
scas
cmp
adc
sbb
sbb
dec
xchg
pop
inc
lea
or
inc
mov
xchg
gs
jg
mov
les
gs
insb
ss
and
cmp
fisttpl
icebp
rcrb
int
shrl
dec
fidivrl
nop
loop
or
in
lock
mov
nop
push
inc
jo
sahf
and
sub
mov
sbb
shrb
dec
cli
push
inc
std
or
mov
sbb
mov
jle
inc
test
inc
adcb
mov
sub
xchg
xchg
jge
and
test
mov
dec
cwtl
pop
pop
in
push
and
int3
repz
out
subl
pop
into
dec
jl
and
repnz
xchg
repnz
adc
sub
insb
aam
xchg
xor
jp
adc
xchg
jecxz
dec
add
das
dec
adc
inc
sub
or
sbb
call
mov
pop
aam
push
inc
inc
xchg
or
xchg
add
nop
dec
test
in
notb
or
dec
jns
xchg
xchg
xchg
sbb
lahf
jns
test
sbb
cmp
xchg
cmp
test
push
mov
test
ljmp
out
cmpsl
mov
jne
cld
lods
cmpsl
xlat
orl
xchg
jle
mov
leave
adc
mov
inc
pushf
ds
outsl
jg
jae
and
fiaddl
in
xor
imul
push
out
xor
aas
mov
dec
inc
mov
int
loop
inc
inc
movd
jle
repnz
cmp
fldt
scas
fmull
popa
aam
ja
scas
sbb
les
cmp
aas
movsb
fwait
jne
insl
push
loope
or
das
rcr
addr16
and
mov
jg
xchg
pop
add
into
les
xchg
mov
adc
ljmp
sub
leavew
pop
loope
mov
mov
fisubs
ja
cmpsl
mov
lret
jg
xchg
lcall
mov
push
jbe
jecxz
ja
orl
mov
ljmp
aas
add
xchg
adc
jmp
js
fwait
jp
repz
pop
or
je
push
dec
mov
cmpsb
sbb
add
js
fdiv
inc
mov
pop
rcrb
lock
inc
mov
shll
fisttps
jl
jle
add
sbb
or
add
neg
cmc
mov
cmp
adc
cld
hlt
pusha
insl
pop
push
pop
outsl
mov
pop
inc
dec
cmp
and
add
fcoml
add
jle
shll
or
mov
stos
xchg
in
push
aaa
fnstenv
pop
adc
lret
mov
jle
jecxz
xchg
sub
jns
mov
inc
pop
sub
sub
rcrl
fstpt
xchg
add
cmpsl
lods
shrl
fsubl
stos
std
mov
jae
push
or
hlt
jb
stos
pop
je
mov
aad
cld
add
pop
mov
out
mov
clc
mov
mov
stos
dec
or
faddl
mov
xor
mov
or
repnz
test
inc
and
inc
dec
fdivrs
adc
cmc
jo
and
stos
out
insl
insb
pop
push
lock
dec
dec
loopne
mov
cmp
call
adc
jle
loopne,pn
inc
mov
aaa
dec
repnz
jae
mov
jmp
sbb
xchg
or
gs
scas
add
xor
jns
and
add
sbb
jns
xchg
mov
push
ljmp
fcmovne
cmp
sbb
cli
push
stos
pop
sub
sti
insl
or
data16
add
ljmp
mov
push
xor
js
loope
adc
or
inc
jg
sarl
mov
ficompl
or
fcompl
popa
and
xchg
and
loopne
out
push
enter
push
inc
in
and
ret
les
mov
aam
xchg
ja
cmp
mov
mov
test
cltd
add
push
jb
sub
lret
cmpsb
lock
cmp
jmp
jns
mov
mov
scas
xor
lcall
sbb
push
sahf
out
mov
enter
bnd
inc
test
xor
imul
mov
and
sub
test
iret
out
lahf
adc
push
fld
cmpsb
adc
mov
inc
in
clc
xor
adc
jle
popa
jmp
mov
push
out
shll
aas
jns
or
test
imul
inc
sbbl
iret
xor
idiv
mov
dec
and
cld
out
push
int
arpl
test
fdivrl
cmp
push
jns
inc
push
nop
cmpsb
and
inc
xor
jge
push
test
jg
movsl
pusha
mov
adcl
dec
adc
imulb
inc
cmp
pop
and
dec
int3
or
std
or
aas
les
jmp
cmp
cmpsl
lahf
mov
pop
inc
ss
push
cmp
add
mov
in
pop
fidivl
stos
out
aad
add
cmp
inc
cli
cli
and
mov
cmpsl
lret
in
mov
daa
mov
out
push
jp
push
bnd
mov
imul
sbb
xchg
mov
jnp
jl
jmp
repz
shll
xor
in
jne
mov
shll
jle
and
inc
pop
cmp
jmp
in
mov
jb
pop
jg
cmc
subl
mov
and
pop
fnsave
stc
push
mov
adc
frstor
push
in
loop
pop
cs
xchg
gs
cmc
fnstsw
mov
stos
sbb
xchg
insl
ja
ficoml
rcl
aaa
jae
in
mov
pop
fwait
cmovle
fdivrl
mov
cmpsb
divb
incl
je
stos
addb
mov
mov
xchg
push
stos
mov
xor
outsl
ds
cmp
mov
loope
mov
push
int3
shrb
std
mov
add
lahf
movsl
pop
cli
add
and
lock
and
bound
pop
arpl
ret
adc
xor
fildll
pushl
clc
ret
add
adc
mov
inc
and
mov
orb
sub
pop
xchg
ds
inc
add
or
loop
sbb
jmp
mov
adc
jno
in
fnstenv
mov
push
and
cmp
scas
out
repz
sti
inc
loopne
mov
lcall
lahf
cld
mov
adc
inc
push
mov
inc
lods
or
repnz
push
cmp
sbb
movl
hlt
dec
add
clc
mov
clc
cli
or
outsb
jmp
adc
movsl
and
test
xor
or
aas
ljmp
inc
out
test
mov
pop
outsb
hlt
dec
inc
mov
scas
insl
inc
mov
ret
mov
or
push
stos
cmp
cmp
arpl
adc
icebp
push
xor
jb
jae
loopne
jb
add
cmc
inc
dec
repnz
scas
jmp
cmp
cmc
push
sub
nop
jecxz
leave
dec
paddb
and
add
movsl
cmp
or
cmp
sbb
or
mov
fwait
js
xchg
sub
shl
push
iret
jae
inc
mov
inc
and
dec
mov
test
fmulp
fcoml
inc
nop
mov
shrb
test
pop
add
push
or
jb
loopne
jmp
test
mov
jmp
aad
les
jae
sbb
jp
mov
mov
cs
xlat
movsl
out
dec
ss
inc
fstl
aam
mov
lods
stos
push
bound
insl
inc
and
aaa
mov
lcall
ds
mov
call
sub
pop
adc
sbb
cmp
sub
jnp
push
push
push
push
xor
sbb
lock
shll
xchg
jb
mov
ret
movsb
gs
out
push
jnp
dec
lahf
test
xor
add
push
add
cmpsb
sbb
jae
pushf
imul
add
pop
sbbb
or
sarl
jbe
int3
imul
inc
xor
jno
ds
mov
pushf
lds
mov
xor
mov
ljmp
dec
add
xor
dec
xor
mov
movsb
xor
cmp
sti
fnstsw
mov
cs
jae
fstpt
rcl
and
filds
leave
mov
lahf
lcall
pop
fdivrp
add
adc
jnp
or
std
or
call
dec
push
mov
scas
add
push
lcall
or
and
mov
adc
testb
js
fiadds
dec
jmp
mov
std
push
popa
fisubl
xor
lahf
pop
push
hlt
lea
enter
das
xchg
add
repz
leave
pop
test
popf
fnsave
adc
es
jae
xchg
test
xchg
add
or
pushf
pop
adc
stos
out
and
hlt
hlt
in
xchg
inc
xlat
push
scas
lods
xor
pop
sbb
nop
mov
inc
stc
jbe
push
jbe
out
or
jno
fldcw
cltd
fsubl
cmpb
loop
movsb
jno
insl
xchg
sar
adc
cs
inc
add
aam
out
out
mov
rol
jno
in
pop
popa
xchg
mov
push
test
push
jb
mov
ror
jle
mov
lret
xor
lret
cli
xchg
in
sbb
jl
jnp
fstps
xchg
popf
jns
inc
inc
xchg
imul
scas
scas
adcl
ljmp
pushf
scas
adcb
enter
shr
adc
push
mov
mov
in
fsub
cmpb
lahf
cmp
jo
dec
jg
xor
lret
ror
and
lret
lods
dec
push
cmpsl
xor
loop
xor
and
pop
out
gs
or
pop
mov
cmp
xor
xchg
mov
jmp
imulb
mov
jmp
dec
lahf
pop
mov
jmp
insb
mov
nop
mov
xchg
insl
mov
mov
movsb
mov
dec
je
lods
xor
insl
sbb
jecxz
xchg
xor
loopne
fisttpl
add
stos
test
xor
push
fs
es
xor
mov
inc
mov
xor
fbstp
insl
fldenv
icebp
xor
xchg
stc
lcall
insl
adc
fsubr
push
dec
xchg
in
or
pop
pop
push
pextrw
pop
movsb
inc
shl
sbb
test
xchg
xor
es
out
ret
aad
ja
je
std
sahf
bound
sbb
jge
rclb
repnz
or
jmp
cmpsl
adc
inc
unpcklps
bound
mov
cmp
insl
sub
roll
into
cwtl
mov
pop
add
data16
adc
rcll
mov
loopne
ret
rol
fs
andb
xor
inc
jmp
or
mov
orl
mov
es
stos
inc
js
test
lea
icebp
mov
notl
rclb
test
xorps
pop
mov
stos
cltd
fstps
lret
mov
xchg
mov
mov
clc
lea
jle
xor
jmp
bound
sahf
add
ds
inc
fisttpll
mov
mov
lea
in
je
lret
sarb
add
mov
push
push
mov
pop
jg
lods
pop
jo
pop
push
stos
loopne
inc
jge
lods
xchg
add
icebp
lahf
xchg
adc
hlt
jle
cwtl
pop
ret
stos
addl
cmp
das
jmp
popa
sahf
inc
adc
dec
iret
popf
pop
pop
mov
scas
jbe
push
cmp
inc
loop
or
push
rcll
cmp
add
aam
shlb
add
dec
outsl
sbb
and
pop
vmovhps
sub
or
xor
aaa
popa
bound
aam
mov
push
sub
repnz
mov
test
sbb
lock
lods
insb
test
fs
cs
adc
jl
xchg
cmpsl
sub
lds
idiv
push
lds
mov
sbb
add
xor
push
push
xchg
stos
sub
add
and
inc
mov
insb
imul
push
xor
into
xchg
cmp
icebp
push
aad
cmp
push
xchg
repz
cmc
mov
lods
or
ljmp
sbb
mov
adc
dec
into
ficompl
adc
popf
lods
stos
and
jg
mov
add
fs
loopne
mov
mov
sbb
push
xchg
cmpsb
scas
outsb
or
add
dec
loope
jno
lcall
iret
cltd
mov
out
mov
ror
xor
negl
dec
sub
js
leave
and
adc
or
add
aaa
icebp
sarl
jo
sbbl
stc
aam
inc
mov
add
push
andl
fwait
cmp
test
movsb
inc
fnstenv
cld
out
cmp
sahf
xor
repz
mov
ss
stos
or
fldcw
dec
add
loop
push
popf
ficoml
fscale
lods
push
xor
mov
das
icebp
outsl
pusha
stc
imul
jmp
loopne
mov
aam
jne
jge
arpl
pushf
xchg
push
pop
cmp
lods
popf
in
stc
add
movsl
push
xchg
icebp
fimuls
mov
cmp
or
leave
cs
cmp
jp
loope
inc
cmpsb
push
adc
inc
sbb
pop
jns
rcrb
aam
jb
arpl
notb
std
adc
into
xlat
popf
sbb
bound
test
movsl
das
movsb
nop
pop
repnz
test
call
inc
and
pushf
push
hlt
xor
lods
or
lea
popa
jmp
addl
add
xchg
push
inc
subl
add
movsl
mov
lock
imul
jb
mov
js
mov
stos
sarb
xchg
lock
cmp
nop
dec
scas
dec
lcall
pop
or
test
sbb
fadd
jge
push
repz
mov
jns
leave
cmp
jecxz
repnz
mov
push
pop
pop
sub
push
icebp
mov
push
out
hlt
jb
pushf
loopne
xchg
mov
xorb
pop
hlt
scas
out
rolb
fmull
push
xchg
lods
pop
push
rcrb
mov
mov
mov
xlat
or
repnz
cmp
adc
lret
jge
push
cmp
xor
sub
lcall
dec
jp
inc
dec
out
push
mov
pushf
and
ljmp
cmp
cmp
pushf
or
and
mov
pop
pop
in
sbb
icebp
jmp
popf
ds
adc
adc
add
fdivrs
mov
jns
jl
loope
stc
jbe
stc
mov
xchg
add
jecxz
jo
pop
push
pop
adc
inc
push
fstps
jno
icebp
and
out
mov
add
mov
idivl
dec
mov
stos
mov
test
pop
repz
jg
movsb
jmp
lock
imul
xchg
push
adc
adc
jae
ds
stc
sbb
xchg
mov
mov
mov
pushf
outsl
dec
insb
push
xchg
nop
aam
push
push
lahf
cmp
mov
test
push
xchg
adcb
test
push
sub
js
sub
imul
aam
test
jle
stos
jnp
ljmp
cmp
test
icebp
pop
sub
mov
repnz
fimull
sub
inc
ror
mov
iret
mov
add
sub
xchg
dec
jno
loopne
lret
repnz
cmpsl
jl
out
jmp
pop
shll
jbe
xchg
roll
divb
mov
lahf
test
pop
mov
xor
xchg
push
icebp
ss
jnp
fistpl
jnp
iret
shll
outsb
add
or
ljmp
in
cmpsl
enter
jle
in
adc
or
ss
push
cmpsl
cmp
sbb
push
jge
cmp
inc
sti
jno
addl
pop
loopne
ret
adc
xchg
push
rorb
mov
inc
icebp
pop
pop
lret
mov
adcl
test
sub
cmpsb
outsb
or
js
divl
lea
push
loop
aaa
in
mov
decb
jne
pusha
and
cmp
scas
jp
xchg
xor
call
je
or
push
inc
jge
std
daa
sbb
add
mov
cmpsl
push
fisubl
or
adc
fsubrl
hlt
adc
inc
rclb
add
push
data16
mov
mov
sti
ret
scas
push
mov
cmp
mov
jae
pop
xchg
xor
mov
and
mov
jo
adc
mov
subl
dec
out
bound
ljmp
mov
mov
pop
test
mov
mov
cmp
push
push
add
pop
xlat
add
add
cmp
and
fnsave
push
cmp
ljmp
jae
or
scas
inc
dec
mov
push
ds
les
or
dec
adc
mov
push
sbb
xor
inc
add
fcompl
lahf
add
pop
faddp
or
icebp
mov
fdivrl
xchg
leave
loopne
or
fmull
mov
inc
scas
mul
xchg
inc
inc
fildl
rcrb
aad
dec
cmp
fwait
cmpsl
out
test
dec
out
push
add
jl
stos
inc
xor
jb
adc
push
popf
dec
movsb
out
pop
cmp
arpl
mov
mov
jl
jnp
xor
fsubl
arpl
lods
fdivrl
int
mov
fsub
sub
iret
pop
test
je
int
das
mov
repnz
xchg
pop
mov
scas
push
mov
cmpsl
mov
stc
dec
call
shlb
push
std
mov
clc
nop
or
rclb
mov
mov
adc
insb
mov
xor
sbb
dec
mov
in
inc
hlt
inc
sbb
xor
pop
sti
mov
xor
jo
fmull
push
xor
aas
xor
les
lea
mov
adc
jmp
int3
stos
pusha
sub
aaa
popf
jne
cmp
jmp
dec
pop
inc
xchg
aad
sbb
dec
push
push
dec
lcall
pop
shrb
loope
lods
inc
push
add
out
bound
xchg
fs
movsl
pop
lcall
rcrl
cmc
sbb
inc
enter
scas
add
subl
push
adc
add
pop
sahf
test
add
aam
push
enter
fcmovu
das
xor
xchg
ljmp
sub
mov
push
sbb
jb
fistl
in
add
pop
mov
cltd
ret
inc
loopne
mov
mov
pop
dec
inc
out
sbb
fstpt
push
jle
push
and
stos
fiadds
mov
jmp
sub
pop
repz
mov
lret
inc
int3
xor
out
xchg
jns
cmp
pop
sbb
push
sbb
decl
not
sbb
mov
jnp
and
pop
jbe
and
jne
and
inc
sub
adc
push
jg
mov
cmp
pop
lcall
repz
jbe
test
jns
mov
xchg
cmp
jmp
js
in
mov
repnz
add
pop
jnp
out
adc
sbb
push
rolb
pop
xor
push
aas
mov
push
inc
mov
inc
pop
jle
js
cmovg
fstps
daa
push
in
outsb
sbb
shrl
mov
lret
fs
pop
adc
or
pop
js
inc
dec
in
pop
ficomps
clc
cwtl
leave
ret
or
inc
aam
sbb
jmp
aad
jmp
int
mull
aaa
test
adc
movsb
fcomp
adcb
jp
cmpsb
mov
fimull
insl
orb
inc
ja
mov
pop
dec
lret
out
or
push
add
repnz
insl
pop
fldenv
and
cld
jne
cmp
insl
pop
sahf
push
rcrb
test
js
mov
loope
lret
sti
dec
int3
xchg
dec
sbb
cwtl
mov
push
ja
inc
mov
int
aas
jg
movb
push
cmc
sbb
jg
stos
scas
push
xlat
test
ret
inc
dec
sbb
adc
dec
and
mov
jle
outsl
or
jmp
popf
push
test
add
lret
out
mov
fisubl
int
test
test
loopne
and
push
dec
daa
adc
push
mov
fstp
jo
mov
leave
pusha
cwtl
hlt
fsubrl
jge
shr
inc
mov
idivl
insl
xchg
movsb
push
in
mov
das
andb
test
jmp
pop
push
shll
sbb
sbb
push
jle
or
fists
stos
xchg
in
pop
ljmp
sbb
out
xlat
lret
xor
cmpsl
and
xor
push
mov
stc
test
incl
adc
loope
sub
jmp
sbb
das
jns
pop
cmp
flds
stos
and
imul
pusha
jle
mov
loopne
fstp
add
mov
cmp
inc
loopne
pop
mov
mov
aaa
out
mov
pop
adc
xor
dec
repnz
fstps
cmp
fwait
mov
cmp
std
int3
stos
pop
push
or
aaa
dec
push
lcall
dec
push
xchg
daa
jno
ljmp
jl
ja
ss
leave
and
fldcw
loope
mov
out
or
jae
mov
daa
adc
pop
mov
mov
xorb
pop
imul
push
outsb
adc
ja
xchg
sbbl
mov
mov
jl
adc
bound
inc
sbb
push
xchg
cs
je
cmc
mov
cmp
sbb
mov
pop
push
mov
out
mov
bnd
ret
or
inc
repnz
data16
out
or
das
xchg
jge
imul
mov
xor
push
cmpsb
loopne
fs
push
mov
inc
subb
js
out
mov
js
pop
push
cs
cs
jg
dec
jmp
mov
iret
daa
xchg
xor
jp
hlt
int3
repnz
or
mov
loope
fmull
xchg
fsubp
xor
popf
ds
es
jbe
add
mov
dec
sarb
cld
pushf
sbbl
cmp
mov
mov
and
dec
inc
pop
xchg
pop
adc
dec
stos
jmp
and
ja
xchg
cmc
xor
jge
cmp
mov
insb
cmpsb
cmpb
into
and
or
stos
lcall
xlat
test
clc
push
shrl
pop
lods
push
sarl
mov
mov
stos
jo
cmpsb
fwait
lahf
xchg
cmp
movsb
xor
dec
xchg
mov
imul
into
fisubrs
pop
std
std
test
in
xchg
sbb
lret
jae
pop
add
std
fwait
and
pop
push
xchg
loopne
fistpl
outsb
testb
fmul
rcrl
lds
inc
ds
out
in
dec
mov
mov
or
imul
adc
mov
test
mov
jmp
adc
out
inc
leave
call
sub
jmp
cmc
aad
dec
aam
jmp
push
bound
or
and
push
lds
mov
ljmp
sub
and
push
nop
call
iret
mov
aaa
or
ret
push
arpl
fdivs
push
mov
xchg
adc
rcr
fcom
in
ret
mov
je
outsb
dec
js
jb
add
adc
push
mov
ret
lea
es
and
and
sbb
mov
in
loopne
xchg
pop
xlat
js
pop
decl
retw
xor
loopne
out
sub
mov
push
faddl
or
andl
or
mov
xchg
mov
int
aam
insb
lea
cmp
jl
sub
cltd
adc
mov
xor
or
push
xchg
jb
inc
and
lahf
mov
jg
jns
repz
push
dec
sub
pop
out
xor
adc
sub
xchg
cmp
dec
aam
bound
addb
ficompl
adc
push
and
cmp
es
repnz
pushf
int
mov
sbb
xor
fdivs
lea
addb
aam
lds
jmp
mov
mov
push
xchg
push
dec
shrl
repz
insb
fidivrs
lcall
repnz
mov
shl
xor
insb
xchg
les
arpl
jge
fistpll
push
add
or
ror
fsincos
imul
fwait
nop
pop
movb
add
sti
push
xlat
sub
addl
fstl
into
mov
pusha
and
popf
dec
push
jp
add
popf
cmp
sub
into
sbb
cli
jnp
imul
sbb
jbe
shlb
popf
sar
adc
mov
nop
inc
mov
ja
push
sahf
push
sub
jl
ss
sar
dec
fsubrs
adc
xchg
mov
fcompl
je
outsl
cmpsl
js
ret
or
fistps
adc
push
add
add
sahf
mov
fmulp
movl
negb
sub
call
ds
mov
loope
or
push
add
push
adc
adc
push
ret
and
pop
sub
sbb
jle
xchg
stc
mov
ffree
enter
or
jb
out
lcall
shrl
stc
les
loop
dec
mov
arpl
mov
jae
lcall
fs
fimuls
mov
aad
cmp
adc
es
cwtl
xor
pop
jnp
sbb
mov
mov
cmp
xchg
xchg
imul
jo
mov
in
mov
inc
test
aaa
shlb
or
dec
negl
cld
rol
lods
cmp
loop
in
push
ficoms
mov
and
inc
mov
scas
pop
xchg
push
push
inc
adc
cltd
ret
push
imul
rol
and
pop
js
hlt
cli
pop
or
mov
test
int
out
iret
sarl
mov
or
jno
outsl
jae
add
push
push
aaa
xor
pop
cmp
pop
cmpl
pop
shlb
orb
ficompl
fwait
ss
cmc
pop
dec
into
test
and
mov
adc
in
fistpl
mov
ja
hlt
xchg
mov
mov
fdivs
mov
mov
mov
push
or
fdivl
sbb
arpl
mov
lock
mov
fnstenvs
cmc
mov
stos
daa
sub
push
fbstp
sub
stc
ss
xorb
push
or
insb
push
push
inc
hlt
repz
notb
mov
push
mov
inc
cmpsb
xchg
movsl
fsubs
sbb
sub
shll
xchg
mov
fsubr
jnp
pop
dec
enter
dec
mov
pop
scas
mov
inc
out
sub
jno
outsl
push
add
xchg
mov
int3
rolb
icebp
lds
pop
mov
fmul
mov
cld
mov
clc
dec
rcrl
xor
dec
fucompp
push
mov
fidivl
loop
jl
fs
pop
or
or
dec
jg
scas
lcall
sub
inc
mov
fcmovbe
loope
pop
shrb
lds
inc
push
jecxz
xchg
pop
decb
sbb
push
sbb
mov
mov
sub
push
cld
outsb
xchg
ds
pushf
aad
push
stos
daa
mov
xacquire
and
insl
dec
adc
mov
shll
add
bsr
cmp
xor
mov
mov
cmp
test
aam
movsl
xchg
insb
adc
jmp
pop
loop
lods
adc
daa
call
insl
cmpb
mov
arpl
add
cmp
pushf
test
pop
and
jns
ja
cmp
dec
pop
xchg
cs
cwtl
fildl
inc
pop
and
int3
sahf
out
mov
adc
into
mov
inc
and
movsl
pop
test
in
push
inc
add
push
fisubrs
lcall
bound
mov
fisubl
mov
nop
cmp
mov
push
sbb
xor
sub
inc
cli
cmp
fmul
jecxz
cmp
and
repnz
inc
mov
scas
dec
xor
push
scas
sbb
adc
popl
lods
into
mov
inc
jle
imul
and
mov
leave
ss
fsubs
ds
adc
ljmp
jno
xor
jb
sub
xchg
std
mov
mov
or
jge
sub
clc
push
ja
inc
or
dec
mov
scas
push
imul
outsl
pop
add
dec
jmp
movl
icebp
dec
or
fisubrl
push
mov
roll
stos
sar
cmp
insb
add
mov
xchg
jmp
test
jp
movsl
scas
and
pop
dec
and
jge
shlb
push
pop
popf
sti
cmp
xchg
mov
jbe
dec
or
fs
jg
mov
daa
jns
pop
sarl
xor
push
andl
inc
cmp
or
mov
sub
sarb
lods
dec
test
mov
mov
jae
jecxz
jns
popl
movsb
pop
test
xchg
cmp
pop
out
popf
fcoms
mov
mov
sbb
shll
leave
sub
mov
cltd
add
imul
sub
pop
xor
fstl
xlat
into
jecxz
sbb
leave
lret
add
fnstenv
and
pop
inc
mov
jge
cmp
inc
pop
ret
push
bound
add
stos
jns
lea
dec
cmp
sub
cld
test
mov
fists
cld
jg
out
hlt
rclb
and
mov
loopne
adcb
mov
ljmp
add
and
test
leave
adc
int
int
xchg
notb
inc
mov
add
lods
loop
cld
mov
imul
lahf
push
imul
popf
add
xchg
sub
mov
lock
dec
lahf
in
sarl
mov
daa
dec
cmpsb
adc
mov
push
adc
cmp
jp
lret
insl
in
mov
mov
inc
jp
iret
jae
pop
mov
out
mov
add
es
fdivr
movsb
add
push
push
dec
dec
icebp
mov
dec
mov
lds
mov
popa
mov
push
xor
cmp
daa
mov
ds
dec
pop
stc
pop
imul
je
jge
sbb
fdivrs
adc
xchg
push
push
lahf
push
mov
les
lods
mov
cmp
dec
add
adc
ret
jns
pushf
lds
int
lret
icebp
and
push
js
push
shr
clc
jmp
sbb
mov
stc
mov
lahf
jne
cmpsl
push
lcall
mov
orl
jge
testl
push
sbb
imul
inc
push
mov
push
ret
push
popf
inc
loope
add
mov
mov
xchg
cli
jne
mov
cmp
orb
adc
fimull
adc
jmp
cmp
jge
dec
push
push
lcall
mov
loope
loopne
addl
ud2
and
and
clc
insb
pop
mov
mov
inc
fbld
pop
push
cmp
out
push
sbb
jnp
lds
data16
ja
out
je
or
call
cmpsl
and
pop
pusha
cwtl
scas
push
sti
cmp
repnz
shrl
add
mov
lahf
sub
arpl
js
mov
sarb
pop
shll
call
aad
push
add
sahf
and
push
shr
into
mov
out
imul
insb
push
test
mov
inc
push
mov
pop
repz
mov
sbb
in
dec
pop
adc
ljmp
scas
daa
je
dec
fnstcw
pop
cli
fldenv
enter
inc
lea
mov
mov
sti
cli
fimull
lods
fwait
bound
fwait
dec
shlb
in
add
push
loop
push
cli
mov
pop
or
movl
mov
dec
addr16
icebp
imulb
iret
in
dec
addb
xchg
mov
add
iret
xchg
mov
and
jb
xchg
shlb
sti
dec
rorl
cld
inc
jg
flds
or
mov
lahf
xlat
xor
mov
int
aas
faddl
cwtl
xor
ds
repnz
add
call
push
push
and
jnp
rclb
fnstsw
mov
pusha
mov
shlb
push
mov
lds
mov
or
or
and
inc
sbb
daa
push
addr16
jne
sub
push
cs
arpl
sbb
or
or
shrb
dec
mov
repnz
ljmp
xor
lret
shll
cwtl
dec
xchg
add
sbb
lret
xchg
repnz
ret
sub
lds
pop
stos
cmp
pushf
test
inc
pop
mov
ds
fwait
sbb
jmp
mov
or
bound
pop
les
das
mov
ds
push
arpl
data16
pop
rcrl
ja
push
cmp
lret
push
nop
and
push
outsl
mov
mov
pop
pushf
pushf
pop
nop
push
js
push
inc
lret
inc
daa
push
or
jno
scas
mov
sub
aam
or
aaa
add
and
cmp
mov
lahf
iret
insb
inc
jp
out
rclb
stos
mov
xor
orb
lcall
std
stos
sbb
inc
inc
int
dec
pushf
jns
add
testl
push
jno
xor
cs
fprem1
sahf
pop
js
cmp
or
and
std
pop
clc
movsl
push
mov
push
hlt
xor
cmp
jo
ret
fisubs
ret
pop
inc
sbb
mov
in
js
jle
jno
scas
fsubr
add
inc
fstpt
xchg
iret
in
inc
rorl
jo
gs
int
sub
mov
push
sbb
leave
popa
jge
outsl
and
push
xchg
sbb
xor
shl
mov
in
dec
xchg
fistpll
stos
stc
fldenv
push
dec
sbb
dec
lcall
xor
enter
xchg
jnp
pop
movsl
scas
cwtl
lock
insb
sub
push
popa
mov
and
shll
into
inc
xchg
and
scas
cmpsl
jbe
dec
insl
nop
push
jnp
inc
sub
repz
xchg
pop
mov
or
into
bound
mov
inc
xor
das
popf
pop
inc
insb
fucomip
int
std
pop
fildl
adc
cmp
enter
xor
js
sbb
dec
mov
mov
adc
sub
rcr
rcll
xchg
not
pop
mov
dec
xchg
fsincos
add
movsb
xchg
push
inc
or
cmp
xor
shll
test
xlat
cwtl
stc
and
adc
addr16
shrb
testl
xchg
sbb
sub
add
lock
jmp
jae
inc
inc
aam
jno
adc
das
nop
lahf
push
lds
mov
inc
dec
repnz
mov
push
inc
in
loope
incl
add
mov
ljmp
xor
add
fnstcw
imul
ss
adc
ret
pop
cwtl
cmpsb
lea
inc
fldenv
fwait
test
das
test
sub
sbb
outsl
xchg
fdivrp
ds
xchg
int3
push
mov
push
imul
out
add
stos
dec
sub
jo
aad
sbb
outsl
push
pop
movsl
cmc
in
nop
xor
test
dec
mov
out
ljmp
ja
mov
loopne
out
repz
inc
sbb
call
sub
lret
or
xchg
adc
mov
ret
sbb
stos
sbb
imul
pushf
mov
enter
pop
js
pop
leave
inc
jno
and
pop
inc
sbb
lahf
pop
sbb
pushf
adc
int
test
repz
ss
lcall
fldl
fldt
ja
pop
imul
lahf
jae
stc
cli
out
fldenv
adcl
lods
lods
repnz
push
pop
pusha
shrb
int3
sbb
sub
pop
sub
push
push
sub
stc
jnp
cmp
add
xor
sbbl
femms
test
les
call
push
xchg
mov
pop
clc
dec
out
insl
addl
mov
sbb
push
aad
sahf
mov
repz
std
ljmp
js
ret
adc
scas
pop
repnz
int
adc
dec
lods
aas
inc
sbb
sub
xor
pop
test
lahf
xor
sub
pop
cmp
mov
dec
je
xchg
pushf
stc
jo
dec
xchg
pop
or
inc
sahf
push
mov
fs
rorl
sbb
sbb
mov
repnz
roll
mov
xchg
and
adc
pop
pop
push
add
data16
mov
mov
stos
js
shrl
mov
lret
sub
jmp
adc
or
in
fsubrs
add
lea
sub
mov
sbb
add
jg
xor
in
dec
or
push
ljmp
pop
push
repnz
shll
int3
adc
les
mov
nop
sbb
fistpl
icebp
call
fcmove
sbb
sub
pusha
shlb
bound
sub
xchg
out
out
xor
ja
dec
test
out
int
mov
jmp
out
pop
pop
mov
bsr
inc
mov
and
mov
mov
cmpsl
pusha
mov
sub
jns
das
mov
leave
push
mov
mov
jae
aad
cmp
bound
call
call
push
pop
jne
ljmp
sub
xchg
sbb
lgs
push
cmp
pop
daa
hlt
adc
loop
fnsave
rcrb
cltd
addr16
xor
stc
ret
add
mov
mov
jmp
scas
clc
xorl
fwait
invd
xchg
repnz
xchg
mov
cli
jp
adc
neg
in
gs
sti
mov
jl
dec
sub
xchg
mov
je
add
outsl
scas
out
addr16
xlat
aam
rolb
lock
outsl
mov
add
shrd
pop
pop
xor
and
xchg
sub
mov
test
out
pop
mov
cld
pop
nop
mov
cli
sub
insl
arpl
inc
xchg
lahf
add
lds
or
jp
or
jecxz
cli
leave
add
gs
and
fucomi
mov
pop
xor
add
xor
sti
sub
into
xchg
dec
out
notl
mov
loope
or
in
dec
push
xlat
ficompl
push
pop
or
and
inc
jne
xchg
xchg
sahf
ret
sbb
adc
ljmp
popf
mov
inc
sahf
or
xchg
sub
out
popf
pop
jnp
outsl
std
lcall
gs
fildl
in
inc
out
fcomi
test
mov
sub
bound
mov
call
xchg
fdivrl
sbb
sbb
xor
add
pop
lock
and
xchg
jo
pop
addl
pushl
fnstcw
aaa
loopne
sbb
insb
jnp
dec
push
in
mov
out
mov
jg
lret
in
loope
in
in
cld
leave
mov
jg
cmp
dec
ret
sbb
push
mov
adc
jno
pop
cltd
rclb
inc
xor
scas
hlt
or
cmpsl
adc
mov
add
sahf
outsl
int3
imul
mov
push
stos
fyl2x
js
sub
pushf
inc
pop
outsb
sub
rcrl
loope
ret
cmp
push
insb
dec
jmp
hlt
add
adc
jg
cwtl
les
dec
roll
pop
lcall
loop
arpl
shl
adc
sbb
out
cmp
scas
xlat
cmp
insb
dec
push
addr16
add
fildl
inc
movzwl
mov
pop
inc
jb
lcall
sub
jns
dec
jmp
inc
out
stos
cmc
in
stos
add
sbb
mov
dec
xor
aaa
popa
jbe
lea
clc
lahf
jae
jl
dec
pop
pusha
outsb
in
cmp
fldcw
in
mov
popf
arpl
jmp
lods
adc
jns
cld
and
dec
es
adc
sub
repnz
test
mov
sub
data16
mov
xor
mov
rcrl
int
push
or
cmp
jp
stc
nop
cmp
mov
jbe
jle
jne
test
mov
mov
lcall
xchg
lret
fdivr
lret
ss
jge
rclb
pop
addb
jbe
jl
xchg
test
jne
dec
sbb
dec
mov
sub
cs
pop
add
sbb
shrl
jge
mov
push
scas
jmp
jg
or
or
testl
scas
mov
push
mov
xchg
pop
add
test
cmpsl
or
push
pusha
in
lahf
lea
mov
jae
cmc
imul
jne
shrl
stos
mov
fsub
add
adc
roll
popf
mov
xlat
cli
mov
fcmovnbe
mov
dec
js
jae
js
pop
push
xchg
mov
mov
mov
insl
xchg
add
out
and
shrb
mov
in
jg
cwtl
outsl
push
mov
cwtl
ja
xchg
lods
scas
cmp
outsb
out
mov
movsl
xchg
push
aaa
add
cltd
iret
jmp
jne
add
fbstp
jo
mov
out
dec
cmp
lds
sub
loop
popf
setns
inc
push
mov
sahf
push
jb
pop
aaa
test
xor
jbe
inc
test
jae
in
shlb
inc
sbb
fidivrl
fldenv
add
mov
xchg
test
inc
test
cld
icebp
sub
loop
and
inc
dec
and
divl
xor
dec
mov
lret
xchg
aas
in
pop
fsubrs
push
dec
stos
and
mov
cmp
popa
cmpl
in
or
lock
sbb
push
push
push
pop
in
cmp
dec
adc
les
shlb
enter
mov
sbb
push
sbb
mov
mov
cmc
or
in
jb
repnz
cld
mov
je
repz
add
popw
push
cld
cltd
mov
pop
mov
pop
subl
inc
cmp
insl
xchg
push
sub
xchg
mov
in
pop
fcomps
pop
mov
xchg
xlat
mov
add
pop
lret
xchg
fldl
test
sbb
mov
scas
sub
sarb
push
jp
mov
mov
dec
jns
and
lret
mov
jecxz
jge
ds
sti
or
xor
clc
pusha
insb
in
fisttpll
arpl
stc
repnz
jmp
push
add
jae
jno
out
outsl
loopne
mov
fisubs
insb
cli
sbb
dec
add
repz
test
jnp
xchg
xchg
into
sti
mov
repz
add
adc
sbb
movsl
or
dec
jbe
in
scas
fistps
std
mov
sub
xchg
xor
outsb
js
mov
cmp
add
cltd
inc
or
mov
loopne
ljmp
cmp
add
sub
jns
inc
xchg
xchg
jo
or
xchg
setne
mov
push
std
outsl
or
xor
decl
push
aas
in
repnz
leave
sbb
xchg
xor
push
movsl
out
fldt
cmpb
adc
outsb
cwtl
addb
xor
sbb
pop
pop
aas
in
mov
sub
and
xor
add
jle
cmp
mov
mov
leave
popf
ss
shl
shrl
fwait
int
dec
pop
push
lahf
jb
ja
clc
jle
inc
dec
adc
fs
add
add
in
pop
push
sub
mov
jecxz
jl
mov
mov
push
cmp
jecxz
cmp
out
frstor
shr
in
cmpsb
insb
inc
pop
adcb
in
jge
fwait
xchg
jb
fnop
lret
sarb
and
in
mov
jle
insl
int
xchg
dec
jmp
jae
mov
in
sub
stos
int
neg
mov
loop
fmull
sar
icebp
dec
cmp
mov
addl
in
jo
or
or
hlt
sahf
inc
mov
lret
insl
int3
imul
ficoml
dec
pop
mov
mov
mov
pop
sbb
in
stos
adc
push
movsl
jg
lods
jp
dec
inc
out
in
in
mov
mov
lods
lahf
sub
jle
hlt
inc
xor
std
mov
xchg
jb
jmp
pop
cld
movsl
mov
lds
or
sbb
jo
dec
loopne
fldenv
mov
cmp
xchg
add
aad
jno
and
dec
dec
inc
jmp
mov
push
je
xor
outsb
cmc
mov
in
jge
rclb
mov
repz
fwait
sti
ficoml
in
push
in
mov
test
orb
pop
sbbl
mov
add
jbe
jb
xor
ljmp
mov
sarb
mov
mov
pop
add
movsl
sti
xlat
mov
xchg
jecxz
xchg
idivb
leave
ret
roll
testl
stos
xchg
cmp
sbb
adc
stos
jle
cmp
sbb
inc
jno
aaa
xchg
mov
xor
mov
push
shl
push
ret
cmpl
loope
leave
add
ret
xlat
and
push
add
hlt
test
stos
jle
insb
popf
and
ror
lcall
dec
mov
adc
mov
adc
xlat
mov
repnz
jo
jnp
push
mov
je
in
sbb
inc
and
mov
in
insb
loop
or
aam
jo
imul
in
jle
mov
mov
mov
jl
xchg
add
inc
mov
inc
push
inc
push
jg
sub
sti
push
sub
lock
insl
mov
in
iret
mov
push
push
push
adc
add
stos
fs
mov
pop
jbe
dec
testl
dec
and
mov
xlat
jb
push
stos
lea
lds
xchg
int
add
js
adc
std
push
mov
xchg
push
adc
jnp
sti
fisubrs
mov
lcall
loope
fiaddl
push
sbb
mov
inc
inc
mov
push
adc
cmp
mov
jmp
push
mov
mov
scas
out
jg
arpl
stos
ljmp
shlb
and
jae
loopne
lahf
sbb
test
adc
lock
push
loope
adc
scas
jmp
lods
scas
repnz
stc
adc
shl
dec
pop
mov
sarb
sbb
add
dec
ret
out
fcmovb
xchg
mov
xchg
adc
jg
mov
push
int3
inc
out
sbb
in
push
rclb
dec
mov
jg
cld
push
ret
out
bound
jmp
dec
gs
in
cmp
aaa
pop
jo,pt
in
and
cs
push
jmp
mov
iret
adc
pop
and
in
pop
imul
jecxz
movsl
cmp
sub
push
fs
mov
into
in
popa
stos
nop
insb
outsb
icebp
loopne
xchg
inc
push
jmp
fdivl
les
mov
sbb
cli
and
and
loop
ret
insl
jbe
cmp
xchg
sub
lods
jl
push
stos
dec
jl
int3
popf
cmp
inc
pop
cmp
mov
pop
ja
sub
cmpsl
cmc
xchg
mov
dec
jno
xor
fwait
mov
stos
aad
adc
sub
in
std
jge
inc
fs
xchg
movsl
in
lret
cs
fs
or
outsl
pushf
scas
jmp
mov
and
mov
cltd
pop
push
lret
pop
sahf
sahf
xchg
push
popl
mov
data16
leave
jg
in
aas
div
test
mov
sbb
dec
dec
fwait
gs
xlat
negl
jo
insb
test
leave
lcall
rcrb
cmp
push
bound
dec
dec
pop
sbb
outsb
mov
lret
cmp
pop
repz
imul
inc
inc
mov
xchg
aas
jecxz
pop
out
cltd
ss
cmp
call
xlat
jo
dec
xchg
mov
mov
and
dec
lods
or
lds
dec
xchg
sub
push
lahf
pop
mov
sbb
add
pop
arpl
sbb
mov
jg
and
je
xchg
loopne
int3
push
subl
cmp
sub
leave
xchg
insl
fcomps
mov
imul
add
cs
xchg
xchg
scas
loop
jno
mov
push
dec
shl
and
push
aaa
xor
push
jmp
sub
dec
lods
loope
xchg
call
icebp
sub
jmp
out
xchg
in
incb
cmp
jne
push
mov
mov
add
add
sbb
mov
leave
ret
fbld
loope
outsb
or
mov
jmp
cltd
mov
imulb
mov
scas
out
xor
sub
stos
data16
sbb
xchg
insl
inc
xor
cmpb
mov
outsb
movsl
sub
mov
outsb
shrb
dec
insb
repz
add
push
and
cmp
mov
in
cld
pop
aas
xor
ret
imull
push
je
rorl
inc
stos
lcall
stc
cmp
push
sub
test
aaa
cmp
ljmp
sub
lret
xor
xor
loope
shrd
pop
push
adc
xchg
adcb
pop
mov
lcall
fnstcw
imul
push
push
cmp
push
testl
ret
xor
sbb
enter
imul
jae
adc
andl
sbb
push
dec
scas
xchg
iret
cmpsb
mov
pop
mov
repz
xchg
test
repz
jo
pop
ltr
in
in
mov
xchg
les
mov
sub
and
xchg
daa
dec
jge
es
adc
sti
and
cmp
gs
jg
mov
and
fsubl
lock
xlat
in
or
lret
sub
iret
test
movsb
sub
cmp
sti
xchg
or
out
shrb
notb
bound
sub
sbb
stos
or
mov
pop
inc
push
mov
cmpsl
inc
fstpl
push
shr
jb
push
outsl
mov
pop
inc
sbb
iret
test
popf
in
mov
int3
aad
sbb
ds
pop
inc
pop
mov
or
data16
jge
aam
stos
jle
mov
roll
sub
orl
idivl
jl
jns
outsb
push
or
iret
loope
sub
in
mov
mov
je
test
add
jge
in
pop
out
hlt
sahf
fdivrs
jl
lret
mov
jnp
lcall
mov
pop
sub
aad
es
out
xchg
das
xchg
in
push
fsts
push
or
mov
inc
and
in
mov
int3
jl
jcxz
rclb
xor
hlt
cmpb
adcl
push
cmp
movb
xchg
cmp
inc
cmp
addr16
xchg
xlat
call
daa
and
in
dec
fidivs
dec
pop
push
cmc
inc
jecxz
out
nop
cmc
mov
lods
xorl
push
mov
and
popa
jle
mov
in
push
xor
dec
andl
xor
es
inc
shll
xchg
aas
pmaxub
out
adc
enter
repnz
mov
stos
pusha
mov
adc
adc
sub
mov
mov
cmpsb
negb
in
pop
cmp
les
and
repnz
xor
lret
or
or
scas
cli
pop
sbb
arpl
mov
daa
and
sbb
inc
xchg
or
or
cltd
mov
inc
cmp
fisubrs
xor
or
add
lret
iret
push
in
cs
call
jo
dec
add
pusha
pushf
mov
shl
test
lds
and
jb
xor
fwait
mov
add
mov
fnsave
out
sbb
cwtl
mov
aad
lea
add
das
dec
mov
pusha
jecxz
jno
xlat
inc
scas
fmuls
or
int
fistpll
jp
mov
mov
bound
push
sti
xchg
adcb
cmpb
and
shrb
xorl
rcl
sub
mov
loope
inc
cwtl
xor
mov
pop
or
in
add
mov
popa
aam
dec
and
xchg
jl
stos
les
lret
push
vpsllvd
pop
test
xchg
mov
je
mov
cltd
es
push
cmp
cmc
mov
in
jge
mov
mov
xchg
test
cmp
idivb
pop
mov
jnp
int3
movl
bound
inc
inc
imul
pop
or
xchg
mov
sub
pop
jae
test
dec
jmp
pop
and
arpl
add
xor
jge
daa
push
push
arpl
cmp
les
iret
mov
jnp
add
nop
pop
push
movsl
sbb
and
dec
jbe
push
lret
insl
les
movsl
mov
cwtl
mov
pop
dec
lret
xchg
es
dec
dec
jge
shlb
in
xchg
mov
ficoml
lahf
lods
pop
cmp
xlat
mov
cmp
imul
xchg
adc
aaa
enter
scas
in
loope
mov
cmp
sub
lock
insb
push
repnz
fisttpl
add
lahf
xlat
adc
rolb
hlt
or
xchg
gs
add
or
mov
add
popa
pop
testl
dec
adc
mov
sub
mov
sub
loope
in
jns
mov
stc
out
je
xor
lods
mov
stos
leave
test
xor
pop
fdivs
mov
inc
cmp
outsl
sub
pop
xchg
xor
cli
mov
jle
movsl
add
inc
xchg
out
les
in
movsl
dec
adc
jmp
sub
mov
movsl
cmp
test
mov
xchg
test
ljmp
adc
mov
mov
rcrb
sub
mov
jg
fcmovbe
adc
pop
fs
je
pushf
testb
push
xchg
cs
add
push
notb
or
in
aas
jmp
nop/reserved
xor
stos
and
mov
and
push
mov
incl
test
fdivrp
lea
push
sahf
mov
and
fs
ret
mov
fnstcw
xor
xor
and
aas
sub
hlt
push
xchg
clc
fildl
mov
sbb
scas
push
je
out
push
ret
adc
add
xchg
xor
jne
or
ss
imul
dec
dec
mov
imull
mov
jl
cli
mov
movsl
cld
lea
bound
mov
mov
pushf
dec
jp
lea
fisttpll
js
jecxz
sahf
test
aas
sub
lods
bound
dec
scas
pop
inc
xlat
sbb
andl
lret
test
into
mov
stos
push
lds
jl
jle
push
cwtl
popa
loope
mov
jl
mov
xor
pop
cmpl
cmp
mov
std
mov
test
or
jge
mov
and
xchg
popf
jae
mov
in
popa
stos
test
or
fnstcw
jmp
mov
int
adc
mov
out
push
stc
jo
sub
bound
out
test
mov
mov
xor
dec
xor
lahf
mov
mov
leave
jo
daa
shl
dec
popf
inc
pop
add
push
mov
lahf
xor
pop
push
xchg
pop
mov
dec
and
shrb
inc
xchg
pop
movsl
in
jnp
faddl
rorb
push
adc
jecxz
push
mov
popf
pop
jb
xor
aaa
pop
ljmp
mov
in
mov
fimuls
push
ds
sub
test
in
rcll
pushf
loop
test
scas
or
xchg
mov
stc
dec
call
xchg
int3
clc
cmp
xchg
pusha
or
roll
xchg
jbe
test
jne
dec
fbld
xchg
aaa
cli
scas
sub
fcomi
xchg
aas
jl
aaa
mov
out
mov
xor
loopne
push
std
stc
adc
or
cmpsl
loopne
aas
and
mov
shl
xor
movsl
jo
add
out
lods
scas
push
out
pop
push
dec
mov
xchg
rolb
adc
outsb
mov
jp
inc
sub
bound
and
movsl
mov
data16
sahf
pop
push
and
mov
cmp
aas
sahf
mov
mov
aam
nop
add
mov
lods
push
sub
or
add
adc
pop
xor
into
loop
sub
sbb
cltd
add
rorl
out
cmp
xor
jno
xor
aaa
mov
dec
cmp
gs
jecxz
pop
lahf
loop
jae
fnsave
cmc
xchg
dec
dec
push
inc
pushf
mov
idivb
test
inc
repz
scas
ljmp
dec
pop
mov
test
mov
cmp
add
mov
shlb
or
data16
dec
das
mov
mov
das
pusha
in
movsb
jmp
add
js
outsl
ljmp
aas
inc
insb
or
nop
mov
and
adc
push
mov
lds
popf
cli
or
rolb
outsb
sahf
clc
sub
jae
inc
pop
cmp
and
imul
pop
mov
out
lock
inc
sahf
pop
dec
cli
lods
jmp
jns
lahf
loopne
and
xorb
mov
cli
jne
inc
adc
sbb
lods
out
aas
mov
cmpsb
jp
cmp
mov
gs
adc
fldenv
pop
jne
mov
or
repnz
pop
repz
lret
mov
ds
test
xor
orl
arpl
adc
xchg
sahf
mov
mov
mov
xor
repz
dec
xchg
stc
mov
inc
fisubl
sub
lods
rcrb
sbb
or
xchg
jg
push
jne
add
into
lds
pop
les
aaa
cli
push
dec
cmp
inc
adc
mov
dec
leave
ret
cmpxchg
ret
jle
jmp
data16
sbb
enter
inc
push
push
call
insl
imul
in
cmpsl
xor
xorl
cwtl
subb
sub
dec
cld
push
sbb
push
lcall
inc
pop
xchg
or
ljmp
adcl
out
ja
and
popa
pop
xchg
cwtl
outsb
add
sbbb
int3
clc
adc
ret
test
mov
pop
dec
cmp
outsl
daa
dec
rcrl
int
jecxz
jp
out
xor
aas
add
sbb
mov
sbb
arpl
jb
xor
negl
dec
sti
cmp
icebp
mov
push
stos
loope
xchg
sbb
push
in
addr16
aad
pop
push
aas
mov
data16
push
daa
out
js
xchg
mov
pop
lods
or
xchg
out
rorl
add
clc
lods
dec
add
add
sub
flds
adc
loop
or
nop
bound
push
and
xchg
jle
jle
add
sti
rorb
arpl
cltd
jge
cmp
or
jecxz
ret
je
sub
mov
or
rcll
jg
inc
fninit
scas
sub
out
fstl
mov
adc
repnz
loop
fbld
imul
outsb
testb
push
sub
pop
pop
lods
or
adc
push
push
sbb
push
lods
mov
orl
add
nop
sub
jno
ret
test
int
adc
mov
mov
sbb
mov
aad
movsb
sbb
pop
fidivrl
jnp
mov
xor
add
lahf
ret
dec
add
enter
pop
fistps
mov
fs
aad
notl
pop
jbe
sar
jbe
iret
outsl
stc
dec
fistpll
test
xchg
push
mov
push
inc
les
push
jnp
jecxz
rcl
insb
shrl
lahf
xchg
js
cmp
or
cmp
test
addr16
mov
xchg
pop
mov
pop
ss
push
lret
add
pop
cmc
push
inc
shll
cwtl
fisttps
cmp
push
std
int3
mov
popa
js
jle
xchg
jg
clc
jnp
in
cwtl
inc
sub
in
sub
in
adc
pop
mov
hlt
pop
call
xchg
daa
jle
adc
xlat
mov
in
enter
addr16
xor
lret
cmp
pusha
mov
insl
lret
cli
ds
std
and
mov
push
dec
fistps
insb
jp
and
sbb
jne
mov
inc
popf
push
push
adcb
in
inc
fwait
loop
mov
dec
imul
jnp
jge
inc
sbb
daa
aaa
loopne
stos
enter
jmp
gs
and
arpl
js
push
xor
push
xor
xor
fidivrs
cmpsl
data16
cwtl
in
mov
lret
add
call
inc
add
test
movsl
sub
pop
les
sbb
mov
pop
jecxz
into
jno
inc
sbb
sbbb
ds
aas
sub
dec
pop
repnz
xlat
and
add
jbe
mov
in
dec
adc
es
pop
xor
mov
fsubl
cli
movsb
int
mov
fiadds
xchg
shll
push
inc
sahf
pop
push
jnp
mov
out
pop
cltd
cmp
jle
outsl
fcompl
adc
sbbl
fidivl
ljmp
rorl
jbe,pt
mov
add
xor
dec
jg
and
sar
scas
mov
xor
ret
imull
filds
loop
test
in
mov
test
pop
lods
mov
test
mov
dec
cltd
sub
xor
movsb
aad
lret
inc
or
inc
fs
popa
imul
cwtl
add
les
cmpsb
cwtl
xchg
data16
jmp
inc
mov
orb
testb
enter
xchg
jle
jecxz
das
inc
lds
insl
fadds
vmwrite
mov
or
hlt
testb
and
mov
out
int
lods
and
jge
mov
adc
popa
jge
inc
imull
xchg
in
xchg
pushf
mov
add
enter
iret
js
push
add
push
xor
and
dec
ja
mov
lock
dec
or
lret
ljmp
xchg
ljmp
push
push
lods
jp
sbb
leave
fwait
pop
sbb
popf
call
mov
pop
les
sarl
xchg
faddl
shll
cli
aas
adc
push
and
mov
mov
xchg
mov
sahf
xchg
mov
or
adc
pop
inc
mov
imul
dec
push
jge
loop
loop
fidivrs
fcompl
xchg
adc
stos
repz
icebp
xchg
adc
sbb
lret
add
adc
lods
xorl
jne
mov
ss
adc
sub
pop
pop
mov
lods
xchg
out
das
in
movsl
cld
out
add
mov
bound
xchg
das
loope
sbb
cmp
imul
shll
ret
pop
add
lret
je
adc
mov
sbb
jge
leave
push
iret
push
sbb
or
dec
or
xor
mov
jecxz
fucomp
mov
out
mov
or
adc
ss
cmp
add
cmp
gs
xchg
je
pusha
scas
aad
xor
dec
popa
sbb
call
xor
mov
shll
jno
arpl
mov
sub
xchg
mov
push
fcom
mov
mov
loop
test
mov
xor
ja
add
push
dec
pop
pop
adc
dec
outsl
fsts
popa
stos
hlt
pop
es
icebp
jnp
xchg
jb
fmuls
ds
icebp
mov
jp
je
hlt
roll
push
and
pop
je
mov
insb
mov
cmp
aas
into
clc
clc
inc
dec
cmpsl
mov
sarb
aaa
jne
xor
mov
lcall
adc
nop
dec
fisttpll
iret
sahf
pop
jp
cmpsb
in
mov
add
out
insl
xchg
pop
aam
xchg
push
dec
or
cmp
dec
dec
jecxz
cmp
popa
dec
push
pop
gs
orb
mov
cltd
repz
add
adc
es
out
negl
pop
rcrb
jmp
ljmp
and
out
xor
cwtl
out
das
push
sti
fbld
sub
jg
aas
or
dec
xor
add
mov
repnz
lahf
inc
sahf
out
pop
ljmp
mov
hlt
ret
pop
xlat
shrb
inc
push
mov
out
lods
jp
pop
ss
and
pop
jmp
pop
jb
cs
or
cmp
outsb
enter
adc
push
in
sub
loopne
xor
push
enter
and
xchg
decl
pop
or
mov
push
xchg
push
adc
inc
mov
mov
xchg
fadd
cld
aad
mov
xorb
mov
jmp
pop
inc
xlat
fstl
scas
push
popa
jecxz
xor
add
std
jg
jge
fidivl
hlt
mov
or
testb
jmp
mov
sahf
push
adc
cmc
cmpsl
mov
cld
mov
insl
fs
and
mov
imul
adc
xchg
lret
dec
jbe
add
xchg
inc
add
and
les
jns
pop
sbb
mov
push
pop
into
test
and
movsl
mov
lret
and
mov
add
mov
js
adc
lret
inc
mov
push
out
pop
or
gs
lahf
sub
aad
lock
testb
leave
add
in
addr16
loop
call
pop
cmp
stc
in
mov
into
xor
sti
inc
loopne
idivb
gs
ljmp
xchg
add
mov
aaa
out
lret
jne
rorb
cltd
mov
fidivrl
adc
popf
xchg
fisttpl
mov
out
adc
lods
hlt
es
stos
xlat
movsl
mov
stos
lahf
mov
adc
js
addr16
or
mov
sbb
fdivr
daa
ret
cmpsl
xchg
add
fsubl
insl
outsb
das
popa
dec
add
arpl
leave
inc
insl
sar
or
mov
push
pop
add
xchg
xchg
mov
insb
adc
jno
push
les
sbb
or
pop
loop
out
int3
pop
push
int
fidivl
mov
jb
cmp
jmp
xor
clc
jno
stos
negl
mov
xchg
out
aam
je
test
cmp
inc
push
testl
test
addb
adcb
outsb
xor
pop
aaa
or
loopne
lcall
dec
inc
cs
dec
inc
xor
test
sti
mov
sub
pop
mov
addr16
in
scas
mov
out
fdivs
sbb
dec
les
push
jbe
imul
arpl
adc
addr16
sahf
test
test
add
jp
pop
lods
loope
lock
or
ret
jnp
in
jns
dec
jecxz
sbb
cmp
pop
dec
hlt
fnstenv
xchg
aam
add
mov
mov
in
xchg
aas
cmp
cmp
mov
pop
popf
dec
std
cmp
xchg
std
cli
mov
jno
mov
adc
cmp
loop
mov
add
jmp
sahf
jne
mov
fcompl
addl
clc
dec
or
adc
adc
stos
xor
mov
and
xchg
jns
lret
push
clc
enter
xor
jp
fsubrs
mov
cmp
lret
stc
or
addr16
lret
inc
daa
adc
mov
jl
inc
jg,pn
std
enter
add
mov
inc
pop
mov
inc
iret
sbb
jns
pop
pushf
jne
fcmovnbe
cs
mov
mov
or
mov
mov
int
xlat
sub
sbb
loope
popf
in
jle
pop
jle
jmp
push
data16
push
std
xor
sbb
cmc
mov
dec
jbe
inc
and
and
loop
das
sub
lcall
imul
add
roll
in
out
jge
aaa
jle
mov
mov
loop
or
and
push
mov
js
cmp
adc
inc
push
leave
jb
nopl
test
jmp
mov
adc
mov
and
sbb
push
popf
or
pop
xchg
xchg
movsb
cwtl
out
xchg
mov
out
sbb
jae
jl
iret
lods
cmp
es
test
jg
sub
add
or
mov
and
jne
mov
pop
cltd
icebp
and
lds
mov
in
lea
mov
xor
pop
adcl
pop
sbb
lock
cli
pop
and
jnp
pushf
cmpsb
jne
xchg
addr16
fcom
mov
mov
stos
add
js
dec
inc
decb
push
dec
xor
pop
xchg
sbb
push
pop
int3
movsl
xor
in
rcrl
inc
cmp
jecxz
add
or
mov
xchg
pushf
mov
fcmove
jnp
fldt
cltd
movsl
push
out
mov
mov
les
adc
push
bound
fcom
dec
ja
xchg
jl
adc
adc
jnp
in
mov
pop
insl
aad
movsl
fdivp
test
lret
das
xor
mov
loope
outsl
cmpsl
dec
push
ljmp
aaa
rcrl
jnp
fcoml
xor
lock
rolb
dec
stc
in
aas
add
andl
pop
mov
add
jne
sub
lds
xor
repnz
add
lods
dec
jg
lods
pop
in
icebp
and
cld
idivl
mov
inc
sbb
sbb
and
dec
jg
aam
stc
mov
jb
cwtl
jns
push
or
test
stc
xchg
bound
and
std
pop
or
jo
and
enter
ror
add
sub
dec
xlat
mov
mov
enter
stos
fwait
bound
fwait
pop
lock
pop
cmp
inc
cmovs
leave
fildll
push
icebp
cmp
mov
sbb
arpl
and
or
adc
cmpsb
xchg
into
push
data16
clc
dec
xor
and
aas
repnz
push
inc
in
movsl
lahf
pop
xchg
mov
xchg
popa
add
ds
jae
lods
in
repnz
lods
nop
leave
sub
in
incl
cmp
push
clc
lea
xlat
push
pop
fistpll
mov
orb
xchg
outsb
pop
lock
test
int
lahf
pop
cmc
and
rclb
dec
adc
jns
psrld
push
out
jg
push
pop
cmp
pop
mov
test
movsl
shll
mov
mov
dec
push
popf
pop
cmpb
insl
imul
mov
out
gs
loope
jbe
push
test
push
mov
cli
adc
dec
pop
sti
inc
sahf
or
mov
punpckhbw
push
and
in
ret
add
sub
cmp
fcoms
dec
cmp
xchg
sub
repnz
xor
pop
rcll
and
or
in
jae
mov
jno
cmp
stc
and
popf
shlb
jg
push
fdivl
xor
mov
push
je
shlb
inc
jge
xchg
nop
vmwrite
adcb
sbb
sub
pushf
adc
sub
sti
adc
out
and
xchg
xor
mov
repz
jecxz
sbb
xlat
aas
jmp
scas
pop
mov
inc
sub
and
push
mov
mov
pop
jae
cmp
mov
jmp
iret
jo
jb
lods
clc
stos
sub
sahf
shll
pop
lahf
jb
inc
fnsave
xor
jle
xchg
insb
inc
inc
cld
nop
dec
push
lret
lods
and
adc
xchg
outsl
and
rcl
insl
xchg
jle
mov
adc
push
or
inc
xor
xor
jo
jl
stc
in
fistps
lret
loopne
mov
pusha
jae
punpckhdq
int
dec
into
mov
adc
xchg
movl
mov
hlt
movsl
mov
rcl
cmp
test
dec
jge
inc
js
jecxz
lahf
cmp
push
js
dec
cmp
push
cmc
aam
cwtl
xchg
repnz
out
test
pop
push
add
rclb
imul
popa
dec
cmp
jae
std
mov
inc
insl
dec
negb
mov
or
adc
sti
mov
and
pop
arpl
or
add
xchg
ficoml
shrb
mov
jns
dec
inc
and
clc
cmp
mov
pop
pushl
ds
sub
sbb
stos
fdivs
outsb
or
in
int3
cmp
push
movq
jne
mov
packssdw
jle
nop
lcall
jmp
push
loope
repnz
cmc
and
sbb
in
xor
jne
repz
add
mov
push
sub
lret
sti
adc
outsb
sbb
xor
inc
xchg
flds
iret
nop
mov
sbb
mul
mov
add
xor
add
xchg
push
sub
lahf
cmpsl
xor
adc
jae
test
sarl
sub
clc
rolb
hlt
and
out
cmpsb
xlat
mov
and
or
loope
fs
fsubrl
mov
or
jbe
mov
ja
xchg
cli
sahf
push
clc
leave
xor
or
xor
bound
iret
sahf
push
fstpt
imul
arpl
add
jg
scas
fbstp
lods
lods
stc
jae
mov
mov
or
cmp
sarb
mov
dec
into
push
xchg
shlb
jnp
and
adc
fldt
stc
mov
imul
push
xor
lods
jno
cmp
insl
add
shl
xchg
xor
sbb
das
inc
xchg
mov
mov
mov
mov
add
and
and
mov
or
fwait
xchg
aas
cmp
sti
cmpsb
fnstsw
dec
pop
ret
jmp
mov
xchg
xor
or
mov
jb
ljmp
sbb
cwtl
push
es
inc
ja
push
loop,pn
sub
lahf
cwtl
cld
mov
shll
das
and
mov
xchg
jp
and
cli
pushf
int3
arpl
and
mov
push
cmp
jno
add
cmp
adc
div
adc
push
aaa
sahf
lods
lds
and
movsb
fisubrl
sbb
push
pop
imul
add
popa
pop
push
incb
lock
pop
or
or
inc
xlat
add
data16
sbb
arpl
imul
call
aad
daa
xchg
push
mov
add
fwait
dec
nop
fsqrt
sqrtps
test
cs
mov
loop
jge
dec
test
repz
add
test
mov
mov
in
rorb
movsl
ljmp
mov
dec
sahf
mov
jbe
mov
inc
fsubrl
xchg
dec
lock
mov
cmp
stc
data16
mov
xor
popa
repnz
cmp
aaa
cmpsl
lret
add
mov
pop
inc
add
jbe
mov
lcall
popf
and
push
les
mov
pushf
ficoms
repnz
fstpt
test
adc
lahf
sbb
jo
lock
stos
inc
lea
jne
movsb
stos
ljmp
lods
push
push
aaa
push
push
es
adc
or
imull
icebp
mov
adc
sbb
lods
jle
pop
push
adc
push
dec
sti
inc
mov
test
mov
mov
cwtl
out
inc
lahf
or
adc
xchg
mov
add
lock
adcl
inc
sbb
sbb
cli
sub
fstpl
in
push
mov
jns
into
xor
mov
shl
jo
nop
negl
aad
pop
leave
adc
or
outsb
mov
sub
subb
iret
aas
in
pop
jbe
push
add
cltd
xor
pop
inc
cltd
lret
icebp
mov
add
push
js
lret
jle
adc
sbb
insl
daa
cmpsl
cmc
mov
cs
adc
popa
movsb
mov
cmp
in
mov
add
data16
insb
cli
mov
jno
loopne
negl
push
fcoms
std
mov
sub
hlt
aad
xlat
pushf
stc
pusha
iret
mov
xor
test
sbb
mov
shl
call
sub
push
adc
imul
lret
add
sahf
out
repnz
sbb
dec
nop
sub
stc
stos
jmp
divl
cmp
xor
mov
gs
push
or
dec
add
inc
aad
inc
pop
mov
decb
es
mov
lret
xor
push
pop
or
sub
cmp
sub
dec
repz
dec
icebp
sub
mov
push
loop
lahf
sbb
pop
xchg
jle
les
int
push
js
lcall
adcb
outsb
xchg
sub
dec
add
leave
outsb
sub
or
mov
mov
jbe
repz
xchg
mov
cmc
cwtl
jo
cmp
stos
cmpsl
les
daa
cmp
xchg
inc
lahf
sub
addr16
jbe
or
loope
enter
mov
std
repz
arpl
mov
jg
fimuls
mov
pop
sub
ret
fnstcw
adc
ja
jno
add
push
mov
push
push
mov
sub
js
ret
push
mull
in
xor
pop
xchg
lret
cwtl
sbb
xchg
xchg
cli
repz
and
sbb
mov
aaa
scas
addb
cmpb
add
mov
mov
lds
push
call
pop
ret
jae
lahf
cmpsb
int3
sbb
sub
aaa
movsl
bound
sbb
adc
imul
push
or
and
xor
aas
bound
data16
ds
test
xchg
push
lcall
shrl
ds
movsl
adc
fimull
popf
repz
shr
in
lods
add
fs
add
mov
addr16
cmp
in
jle
jecxz
dec
sub
mov
mov
and
or
lea
xchg
or
jns
xchg
push
test
ja
mov
dec
in
ret
je
aaa
push
cli
xchg
ret
jbe
xchg
adcl
mov
pop
cmp
imul
xor
pushf
dec
loope
imul
dec
je
sub
or
daa
push
stos
cmp
std
psllq
mov
push
insl
mov
out
sub
dec
push
push
cwtl
push
mov
sub
daa
and
das
or
xor
jo
adc
sar
sub
addl
mov
mov
rolb
push
test
dec
insb
and
ficoms
lret
inc
xchg
mulb
lock
outsb
sbb
mov
push
cmp
cmc
push
and
xchg
idiv
pop
sti
xchg
mov
mov
orl
or
jecxz
aad
sbb
xor
lret
mov
mov
inc
xor
out
adc
pop
inc
arpl
jge
mov
jns
js
nop
xor
sub
add
repnz
lds
or
jmp
xlat
idivl
push
sti
stos
sbb
outsl
xor
mov
xor
mov
cmp
mov
loope
lea
js
inc
add
jae
inc
call
xchg
mov
ror
pop
or
or
shll
xor
jo
pop
mov
sahf
ja
in
mov
and
and
popa
sbb
inc
sti
nop
repz
mov
in
sahf
push
push
push
cmpsb
stos
in
dec
push
pop
sub
int3
mov
dec
mov
std
dec
loopne
inc
adc
inc
inc
cmp
pusha
sbb
jecxz
in
mov
jmp
cltd
enter
das
cwtl
pop
outsl
mov
dec
jo
movsl
cld
scas
movsb
cmp
je
cmp
int3
div
jbe
pop
fimuls
and
sbb
xchg
std
lahf
jle
xchg
push
pop
ret
cltd
xchg
xchg
and
or
or
insl
cmc
or
xchg
movsb
adc
dec
pop
or
sub
sub
xchg
pushf
fs
movsb
and
loope
add
cmpsl
mov
mov
loope
mov
mov
jae
jno
icebp
jle
fwait
iret
inc
cmp
loope
call
xor
cs
test
lds
push
insl
rcrb
push
mov
in
mov
xor
addr16
mov
enter
inc
ror
jle
mov
int3
in
call
loopne
dec
incb
and
pop
mov
hlt
fdivl
ja
and
push
push
divl
xor
in
jge
std
sub
push
popa
sbb
out
jae
in
jecxz
sub
jp
inc
push
mov
ljmp
sbb
int
test
jp
push
imul
cmpsb
push
adc
push
test
inc
filds
pusha
loopne
cmp
sahf
jne
pop
iret
mov
out
aas
imul
test
pop
push
lea
mov
je
inc
daa
popf
call
and
hlt
xor
in
shrl
mov
ljmp
sbbl
sbb
rclb
inc
dec
jb
jmp
enter
mov
sub
test
test
cs
in
mov
push
and
pop
sub
out
or
push
pop
sub
add
shll
push
lahf
sub
dec
daa
adc
or
lock
or
pusha
ret
inc
or
add
incl
inc
or
sbb
shrl
push
and
or
sub
jne
mov
test
out
fiadds
pop
add
aad
leave
or
out
or
cmp
pop
or
sbb
mov
xchg
sbb
dec
ficomps
scas
lds
add
adc
ret
inc
hlt
btc
jmp
adc
mov
lahf
sahf
stos
in
xor
dec
aam
fisubs
cmc
mov
adc
pushl
mov
pop
pop
add
mov
jecxz
stos
xor
pop
aaa
push
mov
lods
mov
out
xlat
push
or
push
popf
dec
xchg
fidivrl
shlb
push
scas
lahf
test
test
scas
cmp
fs
movsb
add
sarl
pop
scas
inc
aam
jmp
outsl
and
cmc
add
pop
adc
cmc
adc
cmpb
pop
stc
jne
sbb
push
pushf
icebp
sbbl
arpl
out
jb
inc
xor
jnp
inc
fwait
arpl
and
movsl
add
push
roll
xor
fnstcw
shrl
jno
cmp
mov
sub
push
lret
lock
fbld
add
xlat
pushf
and
call
sti
pcmpgtd
mov
cmp
push
insb
sbbl
cld
jecxz
sub
rcr
mov
push
stos
iret
pop
inc
aas
std
test
pop
hlt
sbb
push
sahf
and
sbb
mov
cli
mov
jo
mov
jp
and
lock
sbb
xchg
psrad
rorb
scas
dec
stos
pushf
aas
push
jp
shrl
in
inc
fisttpl
movsb
dec
and
sbb
pusha
cmp
mov
js
fdivrl
test
dec
pop
add
es
fs
pushf
dec
and
leave
es
xchg
inc
jl
adc
dec
mov
pop
or
dec
fxch
mov
or
and
cs
jns
movsl
test
jecxz
inc
push
sarl
pushf
aad
out
rcl
inc
cmp
dec
push
ds
or
mov
loop
je
sbb
push
xor
fcmovb
push
dec
add
cld
scas
push
sub
in
scas
ss
aas
and
imul
xchg
shl
or
xor
pop
movsl
stos
mov
negl
loopne
pop
inc
jnp
inc
cli
es
shll
cmp
mov
aam
sbb
xchg
push
andl
cltd
movaps
add
imul
mov
xchg
mov
and
fwait
sub
sub
cli
jb
mov
or
pop
mov
fisttps
lods
je
leave
jmp
xchg
push
xor
insb
aam
sub
clc
lds
ss
call
in
fstp
push
xor
pop
cmp
or
jecxz
ss
dec
jns
pop
clc
in
sbb
push
mov
cli
out
cli
mov
out
mov
jbe
sti
clc
mov
js
bound
outsl
or
ja
ss
es
mov
and
movsl
xchg
into
mov
sti
fidivl
enter
xorb
xchg
xchg
add
mov
pop
insb
popa
mov
mov
mov
mov
inc
jecxz
cmpsb
cmpsb
xchg
notb
mov
shll
xor
iret
mov
jbe
and
xor
mov
repnz
mov
outsl
pop
je
adc
or
sqrtps
dec
and
push
mov
enter
dec
cltd
int
enter
cmpsl
pop
in
pop
mov
test
lock
jmp
xchg
jg
leave
arpl
dec
std
cltd
sub
xchg
ljmp
sub
sbb
xchg
inc
daa
xchg
lcall
sub
xchg
push
imul
or
js
fnstcw
push
or
push
dec
xor
testl
jbe
push
fwait
loopne
aam
mov
jbe
lret
mov
pop
mov
dec
aaa
dec
mov
cld
out
daa
push
jae
dec
and
fwait
cmpl
mov
cmp
pop
push
or
and
pushf
jle
andl
sti
into
sti
or
and
mov
sbb
and
cmpsl
push
das
imul
pop
pushf
lcall
pop
data16
lock
and
scas
mov
cmpsb
sbb
cmp
xchg
pop
test
addb
xchg
and
adc
jle
lea
inc
imull
daa
jno
lea
add
sub
mov
dec
frstor
xchg
test
dec
or
mov
test
jnp
in
fcmovb
ljmp
or
enter
mov
mov
fimuls
add
imul
adc
lea
mov
xchg
ljmp
pop
jns
subl
adcb
sbb
xor
dec
lret
cld
sbbl
adc
inc
push
mov
sahf
test
or
push
cli
pop
jge
mov
loope
sub
lret
xchg
inc
sub
icebp
mov
sub
lods
inc
iret
and
pop
cltd
pop
jo
ljmp
imull
sahf
cvtps2pi
lock
cmp
and
fnstsw
pusha
push
cmc
fldl
arpl
mov
in
std
push
sarb
push
and
pop
mov
shrl
stc
cmpb
movb
jb
fwait
mov
lock
into
dec
mov
popa
nop
mov
pop
mov
lds
add
das
mov
fs
outsb
adc
xlat
adc
add
add
out
sub
out
into
fs
out
sbb
sbb
cs
cmp
cmp
into
jg
sbb
mov
mov
and
dec
aam
scas
jp
dec
mov
in
mov
lea
mov
aad
add
inc
cli
ret
mov
idiv
data16
inc
inc
out
dec
roll
in
add
out
xchg
daa
iret
in
inc
aad
xchg
nop
adcb
test
mov
push
adc
hlt
adc
bound
mov
sbb
outsl
in
test
scas
and
movsb
sub
mov
jge
rclw
add
in
outsb
in
mov
aam
dec
es
mov
add
iret
les
jge
xchg
jne
cmova
addr16
jmp
push
mov
call
adc
or
je
pop
lds
mov
inc
push
pop
add
add
pushf
push
or
in
ror
jbe
add
mov
pop
push
cmp
xor
fnstcw
push
iret
clc
cltd
dec
pop
ds
pusha
cld
enter
ja
scas
xchg
jmp
lods
testl
add
jle
add
fnstsw
inc
cmp
aas
enter
add
sub
xor
test
pop
cmp
inc
pop
add
js
test
cmpsl
push
call
les
push
or
jge
sub
add
push
push
mov
mov
stos
stos
and
popa
cmpsl
cmc
es
lods
daa
sub
test
mov
jnp
sbb
pop
pop
mov
lock
fcompl
into
add
xor
dec
jge
addr16
loopne
int
adc
in
lea
push
push
and
test
pop
cli
mov
mov
mov
rorl
add
and
js
jle
es
dec
nop
nop
push
mov
rol
pushf
outsb
testl
outsl
mov
pop
sbb
pop
lcall
mov
push
sub
adc
cwtl
stc
push
xchg
loope
and
dec
pop
sub
sub
out
js
push
test
adc
fstpl
jecxz
lds
arpl
rclb
roll
out
loop
test
mov
xchg
cmc
lahf
bound
jbe
test
mov
and
inc
lods
inc
adc
scas
repnz
push
negb
xchg
xchg
push
aas
mov
adc
out
je
cmpl
jb
int3
pop
sbb
jp
adc
test
ror
sti
xchg
lods
clc
sbb
push
popa
cmpl
mov
popa
mov
or
dec
inc
iret
test
cmp
das
xlat
jns
sbb
inc
mov
fwait
jecxz
push
std
and
or
aad
inc
cmpsl
mov
pop
mov
popa
adc
popf
dec
test
into
push
pushw
insl
and
or
loop
popa
and
xor
fimull
xor
sub
push
inc
shl
insb
aaa
aaa
lahf
inc
jl
mov
mov
xchg
jo
paddusw
push
incl
scas
jnp
add
lods
test
push
adc
aaa
and
js
fsts
ret
adc
sbb
cmc
push
mov
sahf
arpl
xchg
inc
xchg
fldenv
adcb
pop
push
mov
push
je
mov
mov
loop
shlb
shlb
scas
dec
jle
xor
testl
je
dec
cmp
fucomp
addr16
sbb
mov
cwtl
xchg
jl
movb
jmp
lret
movsb
cmp
jbe
inc
or
add
int3
or
jp
mov
pop
subl
mov
push
inc
leave
es
in
pop
xchg
leave
sti
fnstcw
aad
call
std
mov
mov
loope
je
incb
repnz
push
jmp
xor
cmp
jmp
loop
ret
cmpl
push
xchg
push
sub
dec
mov
sbb
loop
jp
rcrb
xchg
push
jns
push
mov
roll
or
inc
rcr
cmp
mov
stos
xlat
scas
mov
fwait
push
adc
push
adc
sbb
or
push
adc
aaa
insb
mov
mov
icebp
push
mov
stc
sti
and
push
mov
scas
addl
cltd
adc
or
fwait
adc
mov
std
xor
fisttps
inc
std
jb
add
mov
arpl
push
icebp
adc
dec
pusha
gs
into
cmp
shlb
jg
mov
lods
sub
popa
jae
repz
mov
xlat
clc
adc
out
xchg
jp
jb
sub
and
pop
test
xor
rcrl
and
sti
cmpsb
out
inc
mov
pop
aas
add
xor
call
rclb
leave
mov
loope
add
mov
test
jae
xlat
jmp
xchg
outsl
xor
repnz
clc
jl
out
outsb
lock
pushf
pop
push
mov
lods
into
arpl
out
repz
gs
test
and
addb
push
push
stos
iret
imulb
xlat
xor
inc
mov
lods
in
cltd
cmp
jb
or
push
mov
mov
add
xchg
pop
sti
cli
out
fistl
mov
adc
cmpsb
inc
inc
pop
xchg
mov
clc
jl
fidivrl
mov
addb
jo
xchg
leave
popf
dec
add
in
cmp
call
inc
mov
fisubrs
sub
pop
dec
fistpl
mov
inc
pushf
scas
pop
int3
dec
sahf
filds
push
mov
lcall
stos
enter
iret
fwait
cs
adc
and
shrl
int
xchg
inc
dec
imul
and
int
pop
adc
lret
mov
jl
ja
lds
aaa
dec
xor
out
jae
add
fwait
fwait
add
push
cmpsl
mov
int
or
pop
sti
push
inc
inc
rolb
mov
pop
arpl
cmp
push
xor
popa
pop
cmpsb
cmpsb
test
xchg
mov
cmpsl
sbb
push
inc
mov
lock
repz
xor
xor
sub
jg
roll
hlt
add
xchg
outsl
ret
mov
popf
dec
adc
bound
dec
test
adcb
dec
cmp
sbb
pop
fcoml
cmp
scas
pop
jp
jg
loop
shrb
fnstenv
mov
jo
cmp
sbb
lods
dec
sbb
popa
repnz
jne
inc
cmc
clc
adc
mov
push
xor
inc
pusha
addb
mov
jp
xor
inc
pop
lock
insb
xor
pop
test
cmp
dec
or
sahf
clc
cltd
shrl
sub
push
jns
add
inc
test
dec
lods
out
movsl
push
mov
es
sbb
pop
xor
or
sub
ss
mov
xor
mov
xchg
cmc
cmp
dec
xchg
mov
push
call
ja
decl
push
stos
sbb
inc
dec
or
cmpl
inc
mov
orl
mov
mov
add
int
xchg
lret
es
arpl
jl
cmp
inc
test
rolb
dec
pop
pop
mov
push
jno
inc
pop
dec
pop
or
xorl
hlt
lods
pop
cwtl
shlb
popa
xchg
push
outsb
or
push
sub
outsb
cmp
sbb
lods
push
ljmp
sbb
scas
push
jae
inc
sub
js
pop
fabs
out
jmp
xchg
lahf
push
outsb
addr16
aam
mov
mov
cmpsb
lock
xchg
std
push
cmp
jns
lds
sub
jle
and
push
add
push
lret
pop
jno
cmp
add
imull
sbb
mov
cmp
cwtl
sbb
ss
ljmp
int3
sub
adc
lds
xchg
cld
cmpb
stos
mov
scas
loope
rcl
shrb
cmp
push
ja
sub
pop
xchg
loopne
sbb
add
cwtl
jg
or
and
cmp
add
out
cmovge
xor
pushf
add
cmp
jmp
les
mov
dec
cli
mov
jns
mov
lret
mov
jecxz
outsl
xchg
out
pop
insl
add
fprem
aas
xlat
xor
jo
fidivrs
xchg
lods
nop
sbb
mov
mov
xchg
push
fsubs
mov
lds
test
outsb
push
xor
test
add
adcb
lret
jo
jae
cmp
arpl
hlt
add
xor
push
ds
addr16
or
std
leave
imul
ja
add
lcall
jl
pop
pop
jae
pop
test
out
jne
int
xchg
dec
sub
into
stos
fstpl
add
mov
mov
jns
cmpsl
mov
sbb
loopne
mov
mov
in
mov
jmp
sar
pop
test
cwtl
ja
mov
sub
cmp
adc
mov
aaa
mulb
cmpsb
and
xor
ljmp
ds
sub
stos
icebp
outsb
nop
roll
sbb
push
cmpsb
jl
jno
subb
jne
push
fldenv
insb
add
in
or
fsts
inc
gs
imul
fisubrs
push
lods
dec
pop
mov
std
jg
sub
repz
jge
mov
cmpsb
daa
and
and
xchg
rcr
dec
popa
call
pop
or
add
mov
dec
mov
subl
xor
clc
arpl
and
adc
adc
push
je
sbb
sub
ljmp
out
pop
aam
sti
adc
mov
sub
ljmp
mov
jbe
push
jne
loopne
in
push
push
stos
out
rclb
out
pop
ret
jb
gs
int3
push
in
cli
clc
jl
or
and
xchg
jb
cli
cmp
xchg
jnp
xor
shlb
mov
mov
or
loop
shrb
add
dec
pop
and
jp
sub
in
mov
sub
shlb
sub
inc
pop
icebp
push
ret
gs
dec
add
xor
push
add
adc
or
push
jg
movsb
sarl
mov
sub
fldcw
mov
xchg
xor
pop
add
pushf
pop
insl
cs
sbb
xchg
rcrb
and
insb
push
icebp
jmp
popa
mov
mov
jg
pop
and
hlt
inc
cld
xchg
jge
push
ds
cmp
cmp
mov
ret
and
push
imul
cmc
shl
cmpsb
iret
and
jmp
mov
dec
xlat
jecxz
popa
add
jle
leave
movsb
inc
add
inc
add
rolb
dec
xlat
call
call
sub
inc
decb
rorl
mov
pop
mov
orb
fcmovbe
mov
dec
loope
pop
jle
cmp
out
mov
fsubr
outsb
hlt
mov
lcall
xchg
xchg
aam
mov
and
pop
int
cmp
jb
mov
sbb
scas
popf
stos
xor
pop
xor
stc
jl
xchg
inc
int3
loopne
es
mov
push
insb
mov
in
sar
xchg
outsl
cmc
adc
pop
std
inc
cwtl
inc
in
leave
xchg
fists
rolb
mov
ljmp
lock
call
pop
inc
pop
cmc
popf
jg
ret
dec
add
jne
jnp
xchg
sub
lahf
mov
sbb
ret
int3
jg
inc
jmp
sbb
ret
inc
daa
xor
and
ljmp
mov
add
movl
vpavgb
jl
push
jp
adc
sbb
adc
ljmp
les
movsb
cmpl
sbb
sub
sarb
mov
sbb
push
or
inc
add
pop
cmp
imul
fmuls
ljmp
call
insb
insb
bound
stos
flds
fimuls
sbbb
cwtl
in
shll
test
test
mov
pushf
cmpsb
enter
mov
out
mov
test
sub
inc
mov
pop
in
mov
in
inc
mov
enter
cmc
leave
ficomps
repz
xchg
push
fstps
les
scas
jae
dec
fcmovnb
inc
daa
lock
repnz
push
dec
scas
sbb
lcall
mov
test
enter
stc
rcrl
xor
inc
fldcw
add
cmpb
out
push
arpl
out
aad
aaa
xorb
push
push
andb
loop
push
xchg
fmul
adc
jg
push
jl
fwait
data16
aam
aas
or
rcrb
jb
cltd
cli
dec
add
int
xchg
in
addb
pushf
jnp
push
jno
movsb
negb
rorb
dec
adc
xchg
jae
adc
mov
pop
lsl
dec
pop
into
or
lret
sarb
imul
cmc
mov
fbstp
cmc
mov
mov
and
mov
pop
or
sbb
cltd
inc
cli
xor
pop
inc
fistpl
cld
movsl
jo
jmp
rcrb
popa
out
rcrl
dec
popf
lods
pop
mov
mov
and
xorb
fidivrs
movsl
jl
push
adc
outsl
pop
sub
nop
pop
xchg
dec
dec
ljmp
pop
push
pop
inc
iret
or
in
mov
inc
in
aam
js
sbb
and
push
push
and
rolb
inc
sub
hlt
sbb
call
into
xor
push
sub
fstpt
fwait
pop
in
mov
xor
and
pop
outsl
inc
ret
scas
cmp
or
jmp
aaa
out
sbb
jmp
pushf
inc
mov
mov
push
mov
cmp
fnstsw
cmp
sub
aaa
dec
inc
cld
inc
xchg
pop
jp
jne
in
mov
pushf
jbe
mov
xchg
inc
mov
rcll
mov
cmpsb
imul
lods
insl
cmp
add
sarl
outsl
loope
mov
test
add
pop
negb
leave
push
icebp
mov
cmp
xchg
pop
nop
add
push
push
outsb
mov
jge
dec
xchg
fimuls
std
cmc
lock
out
cli
push
add
xchg
test
test
andb
push
pusha
and
cmpsb
insl
or
dec
mov
dec
shlb
xchg
add
orl
out
and
cli
or
and
pop
jmp
jmp
mov
add
pop
fwait
dec
push
mov
shrl
mov
in
adc
mov
cmpsb
shlb
movb
xor
adc
jle
iret
and
psubusw
scas
inc
pop
xchg
inc
xchg
sub
xchg
jb
xchg
cmp
sbb
aaa
lahf
pop
into
cmp
rolb
sti
jge
jg
push
sub
push
and
pop
out
testl
jbe
pusha
lods
sub
inc
std
cmp
or
popf
scas
sbb
add
int
push
add
scas
mov
addr16
arpl
decl
push
popf
rcrb
stos
mov
in
push
xchg
mov
or
aam
dec
adc
xchg
dec
clc
aas
push
cmp
sahf
sub
fsubrs
adc
das
dec
dec
popa
cwtl
mov
inc
andb
mov
lods
enter
ljmp
mov
gs
jle
cmpsl
mov
subl
jno
and
les
arpl
jp
imul
rcrl
pop
mov
je
mov
push
outsb
mov
das
sbb
cmp
es
xlat
sbb
xor
xchg
aas
mov
mov
xor
ds
inc
xor
in
add
sub
sbb
popa
sub
adc
cmp
add
xchg
cmp
popa
addr16
out
lods
or
imul
mov
add
push
out
jmp
cmpsb
cmp
sub
mov
fildl
push
push
push
cltd
sub
pop
in
mov
int
dec
sub
sub
int3
pop
mov
adc
sbb
cmc
add
cmc
cmc
cld
pop
ds
push
adc
or
addb
loopne
xor
push
jne
in
fistps
jmp
push
and
jb
ss
dec
repnz
lods
xchg
aad
or
loope
sbb
fisttps
dec
arpl
sub
mov
adcl
mov
bound
jae
mov
ret
inc
push
dec
scas
mov
mov
test
add
dec
push
and
pushf
xlat
sub
les
jle
mov
sbb
push
xchg
ja
sub
pop
sub
push
lods
jbe
lds
sti
aam
push
sbb
lods
jle
icebp
cli
iret
cs
in
jno
and
dec
push
push
mov
adc
or
pop
stos
mov
repz
lds
adc
int
pop
push
in
lock
rcll
push
ficomps
shll
daa
inc
int
cmc
jo
mov
ret
jns
stc
adc
jl
push
fdivs
jp
push
add
mov
pop
xchg
adc
ds
mov
popf
sub
pop
loop
pop
sarb
sub
jbe
popf
xchg
pushf
sbb
inc
mov
subb
xchg
orl
lea
movntps
inc
lret
adc
mov
sbb
and
lods
int3
ret
fsubl
testb
and
xchg
xchg
mov
jg
dec
lods
popf
add
fstps
stos
test
mov
repz
pop
addr16
push
lock
mov
cmp
cmp
icebp
sbb
jbe
aad
push
mov
jecxz
cmc
sub
pop
mov
adc
fidivrl
sub
jecxz
adc
lret
sahf
jno
cmp
test
jmp
xchg
icebp
jg
jge
pop
xchg
sbb
xchg
movsl
rolb
shrl
sub
mov
in
add
sahf
sbb
inc
imul
cmp
ret
in
arpl
orl
aaa
mov
lea
mov
out
inc
xor
ret
fistl
lods
cmp
mov
out
cmp
mov
leave
add
xchg
jne
out
adc
test
inc
adc
jecxz
clc
test
sub
inc
xor
fs
mov
lds
ljmp
dec
xor
in
cmp
jp
mov
push
sub
inc
inc
inc
loop
int
add
outsl
in
dec
js
pusha
arpl
dec
pop
imul
scas
xchg
mov
pushf
addr16
fiadds
daa
or
out
pop
inc
aas
jb
sub
sti
add
sub
xchg
pop
cmp
hlt
movsl
pop
or
cld
adc
lea
inc
sbb
mov
movsb
mov
xor
in
fwait
bound
jle
sbb
fmuls
sbb
ljmp
movsl
sub
adc
jl
icebp
and
pushf
pop
mov
mov
cmp
fisubs
movsb
xchg
repz
js
xchg
sub
icebp
nop
mov
push
js
adc
je
pop
pop
aad
sub
icebp
movsl
das
movsb
or
push
lahf
push
adc
pop
cli
loope
mov
int3
outsl
fmull
out
push
lahf
divl
and
std
aam
sti
scas
xor
push
sbb
adc
lea
out
pop
push
popf
add
push
mov
dec
cmpsb
ss
mov
les
sbb
pushf
add
fwait
inc
push
out
mov
sub
call
xchg
lret
or
ss
mov
pushf
bound
push
setle
cmp
push
jb
fwait
push
adc
cmpsb
dec
mov
ret
imul
call
cmp
inc
dec
shl
ljmp
xchg
and
add
pop
pop
loope
mov
mov
dec
inc
fld
jae
push
sti
pusha
lock
pop
test
dec
out
loope
lock
cmp
hlt
inc
pmulhw
jg
jbe
or
pop
xchg
scas
push
inc
clc
inc
insl
and
scas
lcall
add
add
or
imul
subb
add
cmp
test
pop
test
push
repz
pop
repnz
movsl
stos
enter
mov
fwait
jo
dec
fistpl
outsl
add
daa
jo
lret
fisubs
int3
xlat
cmpsb
test
mov
jmp
test
xor
mov
daa
sbb
xor
stc
mov
dec
out
or
dec
mov
mov
pushf
pop
dec
mov
push
imul
out
fbld
lcall
sbb
inc
aaa
add
cli
xchg
dec
xlat
push
test
sbb
ror
out
out
jb
cs
mov
ljmp
inc
pop
pop
arpl
mov
addr16
in
sbb
ret
daa
fistps
add
mov
roll
xor
adc
mov
sti
dec
jbe
push
sar
into
pop
adc
pop
jno
adc
pop
mov
ffree
fwait
mov
and
pusha
dec
out
sub
stc
fcomps
icebp
roll
jns
negb
adc
push
cmp
push
cmpb
push
mov
std
jnp
pop
pop
mov
arpl
cmp
insb
inc
frstor
sub
fstps
ret
mov
jecxz
in
lcall
dec
xor
inc
pop
ds
lret
inc
frstor
mov
leave
test
std
jns
dec
dec
shr
push
stos
in
cmp
adc
filds
cli
mov
iret
jge
test
mov
push
icebp
xor
xchg
mov
add
add
nop
popl
and
push
mov
cmp
js
cmp
inc
xchg
dec
out
mov
and
ret
std
inc
fistps
fcomip
daa
enter
sti
inc
mov
inc
push
cwtl
mov
inc
cmc
loopne
and
sbb
les
cmp
inc
inc
adc
cmp
lahf
jp
pop
cmpsb
fistpl
mov
jno
out
pusha
loop
mov
pop
pop
push
inc
mov
test
clc
cltd
dec
mov
mov
test
mov
out
loope
insb
add
cmpsl
sbb
setl
push
int3
mov
shl
mov
fs
mov
lea
aam
ret
add
add
mov
pop
mov
push
xor
mov
add
and
insl
popf
gs
call
push
jnp
aas
inc
xchg
repz
jp
or
jne
in
and
test
push
push
sub
lcall
cli
push
mov
ret
scas
and
cmp
mov
aaa
cmpsl
xlat
iret
pop
mov
push
mov
sahf
lret
out
push
outsl
and
adc
jl
mov
xor
pop
repnz
sbb
xchg
mov
xchg
pushf
and
mov
roll
cmpsb
lea
lea
orb
fdivrl
adc
inc
cwtl
mov
ret
imul
lods
mov
leave
ja
iret
mov
loope
sub
ss
decl
mov
jae
ret
lds
mov
sti
popa
fiaddl
test
push
sarb
and
cwtl
pop
loopne
scas
out
or
push
out
shlb
shl
sbb
cwtl
jnp
test
sbb
je
repnz
mov
sbb
xlat
jno
cmp
jecxz
arpl
jne
imul
out
and
shll
shrb
push
push
ret
mov
aam
popf
and
aaa
or
movsl
sbb
xor
mov
iret
inc
call
aaa
test
dec
out
cmpsb
inc
loope
icebp
xor
sbb
jns
push
cmp
adc
cwtl
xor
inc
push
out
mov
dec
dec
test
inc
mov
mov
sub
push
push
insl
cmp
jle
shrl
push
pop
out
es
pop
mov
popf
xchg
pop
rol
pop
in
xchg
scas
pop
mov
sub
shlb
pop
aaa
adc
rclb
jae
das
adc
mov
or
ljmp
xchg
mov
frstor
bound
jmp
sub
sub
mov
test
xchg
cli
je
aad
mov
jo
dec
mov
inc
test
dec
inc
out
inc
dec
cmpsb
mov
mov
icebp
sbb
cmp
push
ss
loope
nop
rorb
mov
fucomp
pop
sar
add
xlat
pop
outsb
jmp
pop
xchg
fstl
inc
jl
push
stos
and
xchg
jecxz
jne
test
mov
loope
test
aam
std
xor
lahf
dec
xor
les
lods
pop
dec
or
cmp
inc
mov
xchg
sub
xor
cmpsb
mov
jle
xchg
test
pop
loopne
sub
cmp
xchg
sbbl
shr
and
in
pop
shll
test
hlt
mov
cmp
dec
mov
jne
add
dec
sub
mov
sub
hlt
lock
cmp
and
aas
sarl
mov
add
sbb
jo
pop
jmp
inc
or
ret
mov
and
sub
push
mov
inc
xchg
push
pop
stc
popa
vpsubsw
sub
mov
fsubs
jl
in
cmp
mov
or
movsb
mov
cmpsl
shrl
es
add
cli
je
mov
inc
pop
outsb
mov
and
jnp
in
inc
call
mov
mov
clc
shll
ret
push
mov
cmp
icebp
sar
sti
mov
push
pop
imul
test
xor
jle
inc
xchg
lret
jle
mov
mov
xchg
jmp
leave
push
cltd
push
cwtl
popf
cmp
push
mov
jecxz
pop
pop
mov
sti
xor
mov
jae
sub
xor
test
mov
in
lock
in
jl
xchg
mov
jae
or
pop
jecxz
adc
lcall
daa
adc
cmpsl
xor
and
inc
inc
rcll
mov
and
push
movsb
int3
test
pushf
mov
cmp
push
inc
xor
in
push
loop
out
adcb
lock
mov
stos
aaa
add
sbb
lods
mov
sub
rorb
mov
jo
out
sub
sub
loope
fwait
das
and
pop
push
mov
cmpsl
ficomps
jg
sub
mov
pop
jmp
cmc
mulb
xchg
pushf
dec
jle
mov
test
xchg
inc
ret
test
cmp
xchg
push
popf
aam
push
sbb
mov
jno
cmp
xchg
arpl
xchg
xor
dec
lret
mov
xor
adc
pop
pop
movsb
mov
pushf
cmp
mov
push
jnp
dec
icebp
pop
mov
insb
dec
or
jg
call
je
or
add
sub
lcall
pusha
push
push
or
push
fsubp
in
sub
push
jmp
into
loopne
mov
ss
lods
add
mov
pop
scas
and
in
lods
scas
pop
cmp
cwtl
stos
sbb
out
shlb
out
pushf
les
pop
int3
lcall
jnp
sbb
mov
xor
xchg
pop
gs
sub
sbb
or
out
test
sub
stos
lret
jno
sahf
xchg
jmp
add
and
outsb
mov
sahf
in
cmp
ljmp
pusha
push
push
outsb
pop
xor
movsb
fwait
negb
repz
push
xor
push
mov
outsl
iret
sbb
fiadds
fdiv
mov
rorb
add
ljmp
mov
sti
xchg
dec
idiv
adc
sbbb
sbb
pop
in
cld
cld
mov
rcl
fcompl
mov
aaa
jae
adc
jle
lcall
mov
xor
jg
inc
sbb
repnz
in
shl
jmp
add
jecxz
cmc
add
jnp
or
xchg
addb
push
sbb
int3
clc
sbb
mov
imul
pop
push
mov
lds
and
rorb
into
push
insl
mov
adc
pop
sub
xchg
sbb
adc
adc
cmp
inc
mov
or
daa
sbb
je
push
bound
mulb
and
outsl
movsb
inc
fildl
ret
ja
fdivs
daa
xchg
or
add
jg
addb
xor
sarb
loope
int3
out
dec
inc
loopne
pop
nop
pop
es
int
cs
inc
cmp
xchg
ficomps
mov
dec
mov
mov
add
fwait
jmp
adc
push
in
movhps
rcr
or
iret
stos
mov
mov
mov
xchg
pop
jl
cmp
inc
scas
push
xor
mov
add
in
dec
inc
pushf
mov
vpshab
push
jp
pop
jno
loope
outsl
xor
gs
and
pmuludq
and
lods
scas
sub
mov
xor
sub
push
popf
shlb
or
mov
stos
jp
push
sub
xlat
mov
xor
lods
adc
lods
jmp
sbb
jae
sbb
rolb
icebp
mov
xor
push
movsb
sbb
cmp
dec
xchg
imul
adc
mov
xchg
cltd
inc
ja
inc
stos
ja
out
add
pop
cmp
lcall
xchg
scas
jg
pop
popf
mov
adc
mov
test
push
dec
movsb
popa
ficoms
into
cmc
xchg
mov
pop
std
adc
xchg
adc
ja
in
pop
in
insb
inc
mov
jae
pop
dec
aam
mov
ja
das
lods
mov
int3
jl
dec
mov
push
push
insl
or
sbb
mov
popa
loopne
cmp
lods
fisubl
test
popa
cmp
inc
or
dec
pusha
cld
lahf
sub
mov
rorb
iret
push
mov
mov
add
ds
xor
inc
xor
mov
dec
mov
add
fs
mov
sub
adc
lcall
roll
mov
and
popa
hlt
sub
sub
push
movsb
inc
cltd
les
pop
or
dec
mov
mov
insl
xchg
pop
sarl
jbe
jae
dec
push
movsl
adc
inc
std
xchg
sub
int3
popf
xchg
or
add
inc
adc
bnd
add
xor
mov
pop
dec
cmp
jle
in
xor
add
and
outsb
shl
repz
pop
push
or
shl
or
mov
dec
das
mov
and
lret
std
loopne
arpl
jb
xor
mov
and
lcall
enter
inc
xor
pop
leave
mov
mov
xchg
jb
push
add
out
fcomps
push
fsub
mov
minps
mov
fwait
jae
lea
inc
int3
pop
sub
and
jl
ss
mov
push
xchg
push
mov
gs
mov
push
inc
pop
cs
nop
xor
insl
jbe
lods
repz
pusha
push
adcl
mov
int3
aam
mov
mov
pop
scas
mov
cmova
jmp
sahf
xor
dec
jg
out
xor
sbb
pop
mov
pop
xchg
lret
fs
push
aaa
pop
mov
pop
les
pop
mov
popa
lods
clc
add
mov
mov
js
push
dec
mov
mov
pop
jno
inc
test
cmp
jo
sbb
dec
ficompl
xchg
inc
dec
ds
nop
xchg
pop
sti
add
popf
stos
bound
sub
add
jnp
enter
xlat
sub
mov
add
iret
repnz
push
in
pop
into
aad
jecxz
rorl
xor
imul
arpl
push
leave
test
imul
scas
and
sahf
xchg
mov
push
jnp
xor
xchg
push
lea
mov
sarb
push
rcll
pop
xor
test
adc
in
or
mov
fisubs
js
jle
fisttpl
inc
mov
sbb
popf
movsb
js
scas
punpckhwd
cmpsb
xor
or
les
jbe
push
sbb
sbb
jl
mov
cmpsl
sub
push
inc
dec
mov
leave
xchg
out
dec
mov
mov
inc
xlat
xlat
ljmp
pop
xor
xchg
add
int3
inc
fucompp
pop
sti
lock
iret
cli
mov
sub
es
fidivrs
dec
push
nop
scas
pop
stos
mov
fs
imul
in
mov
sub
hlt
jno
jo
outsb
mov
in
gs
loope
scas
std
lock
movsl
xor
cmp
addr16
push
cwtl
pushf
aad
jb
jns
cmpsl
pop
stos
or
shl
sbb
xchg
or
mov
cmp
dec
inc
mov
rol
loop
or
loopne
and
mov
out
dec
repnz
add
out
out
dec
bound
add
out
xchg
push
jne
mov
dec
outsb
cltd
xlat
or
pop
xchg
cmc
adcb
jno
test
sub
in
mov
fcompl
dec
mov
scas
dec
outsb
stc
lock
dec
movsb
cmp
xchg
inc
rcrl
cmp
jae
push
adcb
xor
leave
out
push
addr16
jne
imul
xchg
or
iret
decb
mov
sub
sub
pushw
mov
aaa
mov
xchg
and
xchg
push
std
fisttpll
pop
fldcw
rdpmc
push
jmp
data16
fcompl
xor
or
sbb
cmp
or
inc
bound
aas
push
push
jnp
out
js
xchg
test
mov
mov
mov
pop
lcall
xlat
push
cld
pushf
add
sar
pop
mov
mov
fcmovnb
dec
add
cmpsb
xor
push
lret
push
xchg
push
adc
sti
in
sub
inc
push
add
aad
iret
cld
ljmp
lret
xchg
lret
cld
cmpsl
inc
lcallw
push
jo
gs
cmp
inc
xchg
fcomps
pop
push
stos
sub
xchg
in
jmp
imul
jge
test
add
jg
mov
divb
repnz
cmp
jp
lcall
test
mov
lret
test
mov
cmpsb
in
rcrl
ret
scas
inc
and
fsubrl
mov
jnp
pop
leave
push
jge
inc
shrl
cmc
push
out
push
arpl
xor
fisttpl
loope
aam
sub
inc
jb
push
mov
mov
push
mov
jle
mov
add
or
test
sahf
pop
test
inc
iret
test
dec
jno
lret
xchg
sub
sahf
push
dec
fadds
inc
fwait
fwait
adc
aad
sbb
mov
stos
mov
jns
add
push
push
cmp
stc
nop
mov
dec
roll
mov
sub
aas
xor
aam
push
cmp
out
lods
adc
pusha
lcall
inc
gs
mov
push
fidivrs
push
dec
mov
leave
xlat
addr16
lock
adc
mov
rcr
adc
mov
and
mov
lahf
pushf
mov
xor
cmp
mov
rcll
jl
push
cltd
pop
xor
fstpl
xor
and
or
arpl
cmp
shll
add
or
test
insb
mov
cltd
ret
das
popf
sbb
jl
push
jae
mov
testb
mov
xor
aaa
mov
dec
sbb
mov
push
outsl
mov
xor
xchg
pop
outsb
rorl
push
mov
add
rcll
nop
pop
orl
hlt
mov
dec
mov
pop
and
push
add
andb
icebp
arpl
xor
cmpsb
and
sbb
scas
or
outsb
lds
xchg
jbe
xlat
dec
bound
push
lret
pop
movd
ficoml
pop
sub
fs
out
loope
test
mov
xchg
fucomip
cmpsl
cmp
mov
sbb
sub
in
mov
stos
test
fucom
inc
add
mov
nop
push
sbb
mov
xchg
mov
add
lcall
push
or
pop
fs
adc
adc
or
add
in
push
in
mov
xchg
fdivrs
je
aad
ss
push
add
jle
iret
cld
mov
pop
rcl
xchg
in
jp
fsub
lret
or
mov
xchg
adc
ret
sub
mov
adc
mov
dec
dec
adcl
cwtl
fmull
xor
into
inc
push
xchg
adc
movsl
std
or
call
rcll
gs
das
decb
or
push
ja
repnz
test
xchg
push
mov
jnp
outsl
mov
out
lods
push
or
sar
insb
out
movsb
jmp
popf
xchg
movsl
xchg
lcall
pop
dec
adc
push
aam
inc
loope
sub
aad
sbb
sbb
mov
push
lock
ja
mov
jbe
mov
call
dec
pop
push
or
pusha
pusha
es
dec
aaa
mov
gs
xor
cld
in
pop
in
ss
sub
pushf
adc
sbb
cwtl
mov
dec
ficoml
lods
nop
fucomi
mulb
inc
xlat
gs
mov
sbbb
mov
popa
adc
sub
cmpsb
push
and
xorb
imul
or
fwait
push
aad
fsub
dec
mov
aas
sbb
add
push
mov
jne
lret
jl
mov
mov
loope
push
scas
aad
enter
pushf
cmp
aam
lret
and
xchg
adc
jae
aaa
mulb
notb
mov
loop
shl
popa
stc
jp
adcb
addr16
cmp
pop
pop
and
outsl
repz
inc
sub
pop
push
adc
movsl
inc
es
test
movsb
cmp
js
jle
inc
mov
stc
dec
push
jge
rcl
mov
add
dec
jno
jbe
lea
cmp
repz
repnz
fsubs
inc
add
sahf
xchg
sti
out
nop
scas
popf
ljmp
fdivl
cld
jnp
das
add
mov
mov
jle
test
outsb
cmpsl
popa
add
sbb
pop
xor
int3
cltd
cwtl
mov
mov
outsb
ret
cmp
fwait
pop
mov
jae
bound
frstor
push
shrb
push
and
dec
ja
jb
call
pop
sti
fistps
sub
hlt
mov
sahf
ret
cmp
movsb
add
or
xchg
xlat
jns
pushl
das
lock
clc
stc
push
shl
insb
mov
inc
or
adc
jns
test
jbe
cmp
mov
push
push
sti
dec
stos
out
dec
loope
sti
inc
mov
inc
ja
cmp
sbb
jns
aam
cmp
or
ret
or
data16
inc
pop
in
neg
mov
or
iret
jp
lret
jge
adc
mov
fs
ret
fistpll
fsubrs
arpl
jns
mov
mov
es
xor
adc
mov
mov
lahf
add
cmp
loope
mov
cmpl
dec
aam
loopne
shll
stos
pop
add
mov
fcmovb
out
pop
popa
sarl
sub
idivb
fisttpl
js
insl
inc
mov
test
inc
push
call
jno
and
das
and
rcll
iret
fwait
inc
and
inc
cltd
mov
add
pop
cwtl
dec
icebp
cmp
sbb
jb
in
jp
sbb
mov
push
out
push
cli
lods
notb
cmp
pop
xor
or
add
pop
xor
add
xchg
sbb
sti
inc
ficoml
cmpsb
inc
dec
sbb
mov
int3
adc
jge
cmp
clc
scas
dec
shlb
inc
xor
into
or
jecxz
sub
push
jle
jecxz
sti
jno
jg
mov
sbb
test
jne
xchg
inc
scas
dec
fdivs
fs
ret
jl
adcl
shlb
jnp,pt
jmp
pusha
add
call
mov
xchg
xchg
adc
sbb
push
mov
cmp
in
loop
xor
add
ds
xor
fidivrl
scas
fldcw
and
cmp
je
push
sbb
inc
mov
mov
inc
mov
mov
stc
cltd
hlt
inc
or
push
and
inc
inc
xchg
mov
addr16
test
jb
pop
xchg
jnp
fimuls
and
mov
sub
dec
out
jb
das
jnp
test
int3
sti
or
out
popa
mov
sbb
lods
jne
sbb
push
mov
cmp
int3
testb
popa
sbb
and
push
fs
mov
or
sbb
jb
dec
dec
out
ret
push
xor
xchg
lods
leave
jmp
push
imul
enter
xchg
scas
mov
push
dec
mov
inc
xor
push
dec
adc
stos
test
jmp
inc
push
mov
adc
cld
xchg
mov
mov
xchg
cmpsl
push
push
sub
pushf
icebp
xchg
or
imul
mov
or
stc
sbb
imul
xchg
or
xor
pusha
lret
push
leave
in
out
adc
andb
int3
xchg
dec
mov
push
orb
lds
xor
jb
xchg
push
push
shr
das
jns
push
int
or
sti
xchg
mov
mov
or
inc
cmp
and
pop
test
push
xchg
mov
mov
mov
fs
and
cmp
aad
hlt
push
add
xchg
inc
fistpl
sub
xor
xchg
gs
push
sbb
xor
or
loopne
out
push
in
cmp
sub
xchg
clc
adc
push
jecxz
push
cmp
fdiv
cmc
notl
jo
lea
or
pop
rclb
popf
jae
mov
add
popl
imul
and
andb
arpl
insb
gs
nop
sbb
sbb
add
sbb
mov
out
loope
jecxz
aas
in
add
in
fdivrs
dec
mov
pop
bnd
mov
lahf
popf
mov
loop
ljmp
fdivrp
pop
aas
mov
test
jbe
adc
lcall
movsl
cmpsb
and
lods
push
jno
adc
sub
cwtl
push
outsl
in
imull
cmp
jmp
mov
dec
leave
cmp
test
cmpsl
cltd
mov
jne
ds
jmp
int3
inc
jge
mov
lcall
mov
das
xor
rclb
cli
xor
inc
mov
adc
xchg
orb
sbb
mov
cwtl
insb
xchg
push
mov
xor
insb
stos
ljmp
test
inc
pop
pusha
dec
mov
jne
test
dec
sub
jno
out
sub
inc
jmp
int3
mov
mov
loopne
fwait
cli
mov
mov
mov
fcmovnu
jne
xchg
push
cltd
inc
push
xchg
xchg
mov
int3
imul
lods
incl
in
stos
in
sub
fmull
push
mov
sbb
aam
xchg
subb
jg
or
mov
xor
idiv
push
mov
push
mov
in
jo
and
fisubs
jbe
mov
jno
lods
int3
mov
cmpb
adc
jmp
rclb
testb
mov
jne
inc
xchg
push
jle
push
ss
mov
and
add
pop
in
cmpsl
loope
movsl
jo
cmp
and
outsb
mov
flds
dec
fldln2
lcall
pop
loope
jl
fsubr
and
cld
inc
cld
dec
xchg
mov
mov
jg
bound
ss
xor
hlt
dec
enter
and
xchg
inc
jns
into
and
cmp
mov
data16
or
iret
call
jmp
sbbl
cs
fs
or
add
jmp
pop
int
push
out
inc
xor
orps
add
inc
data16
fnstenv
inc
scas
fsubrp
in
xor
lds
inc
xchg
adcb
mov
sti
cld
scas
lods
fimull
movsl
push
stos
inc
or
gs
or
iret
fwait
mov
incl
mov
aas
cmp
aas
jnp
rorl
test
sbb
test
iret
mov
dec
push
xchg
xor
scas
adc
xchg
incl
jne
cwtl
fdiv
imul
iret
adc
inc
ja
testb
insb
leave
iret
scas
iret
pop
mov
cli
int
and
lods
adc
cmp
mov
stc
popa
ret
lea
or
cwtl
push
sahf
dec
cmp
mov
and
xor
pop
fdivrs
mov
xor
in
or
dec
sbb
ds
aaa
aas
sub
jbe
add
ja
incl
or
and
mov
lds
ret
push
pop
rcll
fistl
xchg
inc
sahf
cli
dec
or
sahf
shrl
push
adc
fimuls
jmp
push
sub
mov
inc
jmp
iret
sub
std
lret
jb
sbb
push
jbe
mov
shll
xrelease
push
inc
leave
shlb
and
cmp
popa
xchg
stos
repnz
imul
fldl
mov
mov
xchg
xchg
xor
fsts
pop
repz
stc
ficomps
lock
in
mov
jno
lds
add
push
jno
mov
fidivrl
and
and
jb
xchg
fisubrs
cmp
outsl
sbbl
leave
and
mov
pop
repnz
fcompl
dec
aam
jl
xchg
insl
push
into
fidivs
mov
xchg
mov
shrb
mov
adc
add
call
enter
out
jg
stos
lds
xor
bound
sbb
outsb
mov
and
and
imul
cmp
fld
or
ret
les
unpckhps
mov
jmp
inc
push
jae
and
or
add
add
jle
xchg
dec
xchg
mov
cmp
sub
or
adc
inc
xchg
in
test
jno
dec
pop
sti
add
popa
inc
add
div
adc
enter
xor
jle
cmp
jo
adc
sub
in
mov
pop
add
jno
sub
and
xchg
sarl
mov
inc
outsb
inc
xor
mov
push
sub
xchg
scas
push
loope
popf
fsubs
and
sbb
cmp
xchg
add
xor
movsb
cmpsl
and
mov
in
lea
dec
xchg
push
jl,pt
push
push
cmp
cmp
test
xchg
inc
cmp
push
fcoml
outsl
out
aas
mov
cmp
iret
js
daa
data16
sar
adc
loopne
cld
adc
into
push
mov
dec
scas
and
stos
xlat
popa
rcrb
scas
leave
addb
call
insb
pop
ret
test
mulb
loopne
jb
pop
mov
nop
and
cmp
mov
or
mov
fcmove
dec
and
mov
pushf
in
pop
dec
movsl
shrl
idiv
pop
push
dec
inc
mov
bound
mov
adc
jmp
sub
aam
xchg
cs
inc
and
dec
fidivrl
gs
xor
mov
pop
sahf
lea
test
cwtl
dec
in
addl
popa
push
movsb
xchg
pop
pop
xor
xchg
lods
imul
xchg
xchg
and
loopne
sahf
fbstp
lock
fnsave
pop
xchg
push
in
add
mov
dec
xchg
stos
xchg
cmpsb
jbe
add
and
jmp
dec
mov
das
movsb
daa
lods
jge
inc
xchg
jb
pop
xchg
sti
mov
mov
orl
xchg
mov
insb
mov
arpl
imul
and
outsl
insl
shll
mov
xchg
stos
xchg
in
sbb
inc
inc
imul
xor
shll
pop
lea
jne
insb
inc
xchg
ret
cmp
dec
xchg
imul
mov
sarb
enter
lret
enter
sbb
jge
xor
and
sbb
lcall
mov
pop
dec
orl
icebp
add
outsb
jno
push
mov
and
dec
loop
push
cmc
cmp
mov
pop
sbb
pop
stos
inc
push
add
fidivrs
inc
add
push
icebp
nop
sub
add
mov
rorb
mov
mov
sahf
sub
popf
adc
push
jnp
fwait
mov
cld
fildl
pop
or
or
subl
mov
cli
lea
push
icebp
add
pop
rcl
jno
inc
mov
and
sub
aam
sbb
jb
pop
pop
subl
dec
leave
push
enter
mov
test
loop
in
adc
xchg
orl
iret
mov
push
bound
xor
add
test
push
sbb
dec
sar
shl
scas
pop
pop
not
add
inc
fstpl
outsl
fnsave
mov
ss
fildl
mov
addr16
jbe
dec
mov
mov
andl
addl
pop
rcr
cmp
aad
ljmp
push
cmpsl
gs
enter
repz
adc
pusha
ds
pop
bound
push
dec
inc
insb
xor
and
mov
inc
movsl
cwtl
or
loop
int3
jb
jae
adc
inc
push
dec
or
pop
inc
or
sahf
ja
stc
mov
lea
scas
loop
int3
inc
dec
das
mov
aaa
jg
pop
sahf
mov
clc
lods
mov
dec
sbb
and
stos
nop
adc
cmp
jne
cltd
add
or
insb
inc
hlt
andb
or
sarl
loope
iret
ss
pop
pop
pop
popa
inc
aam
mov
cltd
clc
ds
popa
or
pop
ss
xlat
in
jb
inc
add
insl
lret
push
mov
and
push
into
push
rcrb
or
or
pop
or
and
adc
out
xor
dec
sub
gs
mov
add
dec
clc
xchg
jecxz
inc
cmc
dec
xchg
fiaddl
mov
push
sti
jns
pusha
arpl
xor
daa
or
scas
incb
mov
fsubl
test
xchg
cs
repz
stc
and
jp
jno
bswap
sbb
mov
in
cmp
iret
imul
and
ljmp
push
xchg
bound
out
adc
ficomps
aas
push
fstl
xor
data16
cmp
popa
ret
inc
in
inc
sahf
jno,pt
arpl
ds
add
in
mov
jbe
sub
mov
mov
outsl
xchg
xchg
xorl
sub
xor
sub
add
sahf
xchg
mov
pop
loopne
fdivrs
xor
push
xchg
inc
xchg
cmpsb
call
rcrb
lea
and
in
mov
cmp
and
mov
out
xchg
fsubs
lea
xchg
es
push
pop
addr16
outsl
jecxz
mov
call
rcll
push
rorb
mov
mov
sub
and
jge
or
ljmp
int3
shrl
lret
inc
fnsave
xor
adc
and
inc
mov
dec
xor
pop
pop
test
sahf
popf
inc
and
sbb
je
js
clc
shll
je
pop
popa
cmp
add
mov
dec
fstpl
jmp
insb
imul
dec
dec
mov
inc
sub
mov
sbb
in
aam
outsb
and
push
fistpl
jg
test
repz
pop
dec
jo
inc
bound
and
dec
fwait
scas
add
inc
and
and
or
into
push
cltd
sahf
insl
mov
into
sub
hlt
out
enter
add
enter
pop
jb
jno
pop
cmc
daa
or
push
add
loop
aaa
pop
adc
inc
add
das
clc
inc
pop
xchg
push
dec
mov
cmpsb
pop
lods
dec
nop
push
mov
loop
insb
inc
das
pusha
push
or
mov
in
dec
sub
or
scas
out
lods
fisubl
mov
ss
fisubl
dec
rcrl
or
push
xchg
jmp
in
xchg
arpl
dec
call
das
or
das
or
loop
xchg
sbb
icebp
leave
into
aaa
lret
cmp
mov
pop
push
dec
cltd
mov
pop
jne
cmp
popa
mov
sbbl
add
pop
fisttps
stc
xchg
std
arpl
lds
test
into
dec
cli
fsub
in
fidivl
cs
push
pop
mov
or
jne
lcall
pop
cltd
xchg
ret
jg
test
push
into
fwait
out
lock
je
loop
scas
sahf
push
shll
fs
jl
out
dec
xchg
sbb
push
add
or
add
sub
aam
dec
popf
dec
insb
cmp
jno
cmp
stos
inc
inc
mov
icebp
dec
mov
lret
addr16
xchg
lock
inc
and
in
aad
pushw
int3
arpl
pop
cmp
jecxz
push
push
dec
push
movsb
push
xchg
inc
or
js
dec
dec
mov
pop
dec
and
mov
push
or
pop
rcr
add
pop
ret
add
pop
jecxz
pusha
mov
out
xchg
push
pop
dec
sub
out
inc
add
mov
stos
xor
into
mov
aaa
xor
pop
cmp
sbb
mov
jge
xchg
pop
sub
aas
sub
dec
push
xor
pop
movsl
aaa
mov
adc
imul
lret
imul
xor
int
inc
adc
lcall
mov
mov
mov
sbb
insb
ss
leave
or
iret
sub
jnp
xor
xor
push
ss
mov
jb
or
xor
mov
testb
jbe
mov
popa
add
data16
jge
mov
in
sbb
icebp
sub
outsb
sbb
mov
dec
jecxz
int
ret
sti
ja
movsl
idivl
in
lret
test
popa
and
scas
rol
sub
fs
jae
adc
sub
add
mov
out
sbb
aaa
dec
cmpsb
aas
fcmovnbe
xchg
cwtl
pop
mov
and
test
icebp
into
les
imulb
mov
fcmovnbe
outsb
or
add
xor
aas
xchg
xchg
cmp
les
push
cwtl
roll
mov
jp
imul
pop
add
xchg
pop
lret
mov
inc
xchg
jb
leave
out
mov
mov
lock
pop
push
insl
sbb
add
inc
cmpsb
lahf
mov
and
sub
das
adc
xchg
add
jno
pop
jnp
inc
aas
or
mov
out
or
cltd
fs
pop
dec
out
jnp,pt
outsb
jp
cmpsb
push
dec
mov
movsb
imull
mov
or
sti
ret
mov
ljmp
sarl
sbb
ss
notb
push
repnz
or
xor
or
dec
sub
mov
rcrl
cmp
pop
nop
xchg
or
mov
frstor
cltd
cld
adc
out
bound
div
fsubr
adc
loop
out
fldcw
sarb
pop
daa
into
cmc
mov
mov
lret
mov
push
lcall
add
bound
bnd
loop
in
arpl
jnp
popf
fdivrl
jecxz
sub
jp
inc
cli
pop
inc
push
addr16
xchg
cmp
rcl
lahf
or
push
lret
stos
mov
push
or
jne
repnz
mov
sbb
imul
xor
int
in
out
shlb
add
int
push
and
inc
jmp
and
sbb
mov
cmp
js
inc
sub
fidivrl
das
and
or
adcl
jae
pop
mov
pop
jne
dec
fisubs
mov
mov
xchg
adc
popf
pusha
jne
fdivs
push
jmp
jge
out
int3
jne
pop
and
add
inc
and
ljmp
pusha
xor
jnp
imul
mov
pop
mov
pop
mov
mov
add
lea
test
dec
sub
clc
std
daa
imul
repz
jnp
mov
mov
jge
out
lret
jecxz
and
sub
sbb
push
mov
ds
add
test
pop
push
push
aaa
push
inc
pop
iret
or
insb
mov
dec
cmp
in
xor
inc
mov
dec
sbb
sub
inc
dec
sbb
dec
pextrw
stos
push
arpl
push
std
call
xchg
and
int3
test
pop
mov
in
test
and
scas
mov
sahf
ja
mov
push
dec
xchg
leave
xlat
and
xor
mov
cmp
je
test
xor
popf
jo
mov
imul
mov
idivl
icebp
or
aaa
test
in
cmpl
fidivrs
test
xchg
cmp
rcl
xor
cmp
cs
inc
ds
es
adc
cli
jmp
xchg
loope
mov
cwtl
dec
xchg
fldt
dec
adc
cmp
mov
idivb
adcb
jnp
arpl
jb
xchg
aad
dec
cli
lcall
shll
cmp
pop
mov
lock
lods
sub
fcomp
add
daa
mov
ret
stos
in
inc
js
adc
lret
in
mov
xor
iret
inc
push
mov
pushf
cmpsb
push
fnstcw
pop
in
and
dec
mov
xchg
stc
clc
fistpl
and
adc
aas
jge
pop
or
jns
pop
bound
ret
cmp
or
pop
fnstcw
imul
fdivrl
sbb
sbb
sub
ja
scas
cmp
add
mov
cli
adc
dec
mov
pop
push
mov
mov
add
or
ds
jno
stos
inc
inc
jb
mov
hlt
inc
sbb
push
gs
or
and
lods
pusha
jns
mov
mov
sbb
or
sti
js
in
pop
mov
loope
sbb
and
lret
hlt
and
repz
push
stc
pop
mov
push
xchg
xchg
test
push
mov
in
sahf
ja
cltd
stos
fisubs
dec
dec
lahf
mov
out
xchg
test
and
test
test
jns
xchg
aam
mov
scas
pop
push
pop
daa
loop
movsb
and
imul
mov
pushf
outsl
sub
leave
xchg
jne
adc
or
push
loop
mov
rcrb
xchg
sub
jns
adc
mull
xchg
roll
cmpsb
mov
add
xchg
adc
cmpsl
out
and
mov
paddw
adcl
sbb
fwait
mov
mov
mov
stos
inc
ljmp
mov
andl
push
pop
loopne
inc
dec
cmc
ss
and
xor
ja
icebp
iret
xor
stos
mov
fs
outsb
ret
push
lock
jns
sub
push
sahf
popl
or
sub
sbb
pop
jbe
cwtl
sub
icebp
loopne
add
leave
dec
xchg
xchg
xchg
add
fiadds
adcl
mov
aaa
sub
add
out
mov
mov
shll
ljmp
pop
dec
pop
inc
push
cli
and
and
lcall
lea
movsl
shl
cmp
cmp
cmpsb
jns
clc
stc
and
add
lods
insl
jno
lahf
in
lock
bound
sarl
push
jae
mov
out
jl,pt
sub
andl
jl
dec
in
loop
cmp
sbb
loope
out
test
and
xor
xchg
dec
pop
lock
sbb
pop
and
scas
int3
movsl
mov
or
sbb
rcrb
aaa
in
cmc
push
inc
movsl
mov
out
sub
rorb
dec
push
add
test
je
mov
xchg
imul
test
sbb
xlat
dec
lock
rcrl
sub
mov
addr16
push
ds
repz
loop
mov
cmp
mov
out
cmp
lcall
ret
mov
fldenv
cltd
push
xchg
lahf
les
jae
sub
jge
or
popa
mov
and
ja
call
xrelease
sbb
pop
push
push
jecxz
movsl
xlat
lret
data16
js
imul
mov
mov
sub
sbb
popf
int
jl
movsl
push
cld
fdivs
lods
lcall
push
dec
stos
add
std
xchg
inc
sub
lods
cmp
xor
stc
movsb
mov
and
sbb
ret
shlb
pop
dec
fstpt
pushw
cmc
imul
jle
imulb
into
mov
jo
insb
xchg
xchg
pop
mov
aaa
sub
pop
addr16
mov
jmp
in
adc
out
adc
pop
and
xlat
lret
push
fcmovne
js
xor
add
jbe
and
push
jmp
test
das
out
popf
and
xchg
pop
les
pop
xor
push
fmull
jo
fisubrs
arpl
fstpt
push
aad
dec
aam
aaa
je
sub
aam
xor
sub
outsb
mov
lods
xor
incb
ja
mov
sbbb
pop
inc
mov
stc
jns
rorl
push
jecxz
mov
and
adc
inc
or
mov
lcall
pop
das
aas
stos
mov
pop
lds
jne
clc
gs
adc
call
sub
xchg
lcall
push
imul
push
daa
je
jecxz
dec
jp
jecxz
std
jns
and
add
daa
outsb
leave
rcll
cmp
inc
pop
xor
pop
xor
movsb
mov
xor
test
dec
cltd
mov
gs
data16
insl
cli
imul
mov
mov
push
sti
imul
scas
add
xor
in
jb
push
stc
xor
pop
cmp
xchg
mov
out
mov
cmp
bndstx
add
push
mov
fs
add
sub
test
mov
shll
push
cmc
repnz
ds
xlat
mov
sbb
add
lahf
fwait
lcall
test
cmp
scas
fidivl
add
mov
lcall
shrl
xchg
xchg
out
iret
popl
dec
pop
loop
sub
lcall
cmp
es
rolb
jae
jecxz
adc
adc
nop
xchg
push
push
jp
jnp
mov
xchg
int
shlb
fs
int
cmp
stc
movsb
pushf
and
cmc
mov
push
jbe
bound
imul
jecxz
mov
jg
push
lods
push
xchg
push
ret
int3
rorl
add
lret
jno
mov
pusha
leave
push
mov
mov
inc
loop
add
push
mov
out
rolb
addr16
dec
dec
mov
lods
sbbl
fisubl
dec
sub
loope
mov
orb
dec
scas
push
jecxz
jle
fxch
mov
scas
std
cmpsb
xchg
mov
mov
mov
sbb
add
nop
pop
mov
mov
or
outsb
vpmadcswd
mov
clc
dec
adc
inc
call
cmp
out
mov
ss
mov
adc
sbb
std
int3
je
int3
inc
and
mov
aas
push
push
sbb
mov
lods
or
pushf
aaa
jl
mov
dec
fisttps
push
mov
js
sbb
jne
adc
std
cmp
enter
push
push
dec
and
pop
pop
jmp
inc
cli
jmp
inc
in
ret
pop
xor
outsb
fidivl
mov
cmp
arpl
das
add
cld
mov
stos
xor
int3
push
loop
inc
dec
or
cmp
dec
je
notb
mov
push
sbb
lahf
cmpsb
out
mov
or
xchg
ret
jecxz
mov
jb
xchg
jmp
mov
adc
cmpsl
adc
ret
pusha
out
mov
pop
xchg
fldt
and
push
call
lds
mov
ds
es
push
mov
sub
ljmp
arpl
xor
mov
daa
jge
mov
addl
call
xlat
aas
sub
lock
cmpsb
sbb
aam
and
fisubrs
sub
stc
xchg
ljmp
lock
test
lods
sbb
jae
push
es
cmp
rol
lcall
dec
mov
hlt
fwait
pop
int3
mov
push
test
into
sbbl
movsb
dec
or
sbb
push
aas
jmp
adc
add
add
imul
push
pop
sub
mov
push
pop
pop
loope
ljmp
cmp
call
push
adc
andl
mov
adc
dec
cltd
mov
cmp
pop
fistl
insl
sbb
rclb
rcl
cmpl
scas
popf
scas
and
pop
cmpsl
xchg
dec
mov
loopne
inc
stos
cmp
imul
xchg
mov
and
scas
cmc
clc
js
mov
mov
imul
lret
in
dec
call
cmp
stos
xchg
mov
jae
lods
negl
jae
pusha
dec
pop
add
mov
mov
rorl
std
push
sub
ret
fnstenv
mov
add
mov
jae
aad
in
sti
xchg
mov
xor
add
test
jge
aas
lods
dec
fwait
adc
popf
jp
inc
mov
xor
mov
popf
xor
ret
and
push
jnp
mov
repnz
cltd
jecxz
pop
enter
shlb
and
push
xor
xor
pop
int3
mov
xor
mov
push
pushf
in
aad
lret
inc
adc
push
sub
in
mov
decb
js
sahf
rorb
cmp
stos
mov
fldcw
out
lea
dec
sbb
lds
pop
imul
shll
xor
lahf
and
idivl
mov
or
popa
ret
fstpt
xchg
adc
cmp
mov
jge
orb
es
test
pop
push
inc
ds
mov
inc
jb
pop
push
or
ss
xchg
loopne
pop
inc
sbb
mov
add
add
or
mov
mov
pop
out
in
pushl
ds
outsb
mov
sbb
mov
push
fwait
movl
adc
outsb
xor
inc
in
call
mov
mov
push
or
shrl
lods
mov
dec
stos
mov
std
and
out
popf
ss
ret
ret
lods
sbb
and
jg
gs
adc
incl
and
add
loopne
lods
sbb
or
test
fsubl
scas
notb
jecxz
aas
xchg
rcrl
ret
fmull
xlat
xchg
popf
inc
ret
inc
and
nop
popf
scas
and
popf
mov
xchg
scas
jb
out
dec
lcall
push
jecxz
sahf
mov
popa
mov
mov
scas
divb
push
pop
fists
push
pop
sub
movsl
mov
mov
lods
push
cmp
jno
sub
dec
xor
lods
push
fs
inc
cmp
mov
stos
cmp
pop
shl
not
fwait
mov
lods
enter
in
add
in
push
and
dec
rorl
and
rolb
add
les
loope
mov
or
mov
repnz
xor
cmc
mov
cltd
cs
mov
add
leave
rorb
or
icebp
fwait
jmp
loopne
adc
or
repnz
lret
mov
sbb
adc
mov
ss
pop
das
test
or
roll
or
jns
push
push
lock
dec
rcrb
jne
dec
pop
enter
std
sbb
iret
sub
lds
adcb
lahf
xor
stos
loopne
cs
or
jns
adc
adc
and
push
add
fnsave
xchg
lods
gs
mov
jne
pop
push
mov
ror
pop
addr16
pop
push
iret
ret
je
push
cli
xor
mov
dec
loop
jle
adc
jbe
mov
add
pop
push
and
pusha
xorb
pop
in
sub
arpl
aaa
shrb
mov
inc
sbb
inc
push
mov
mov
jb
xchg
mov
pop
das
movsl
dec
dec
in
xorb
xchg
mov
in
or
sbb
imul
repz
rclb
js
inc
popf
pop
imul
enter
xor
mov
inc
or
lcall
adc
aaa
stos
inc
adc
dec
inc
xor
sub
adc
inc
dec
filds
xchg
jae
pusha
fildl
adc
inc
pop
adc
out
and
xchg
repnz
loopne
add
int3
lods
mov
cmp
lods
addr16
dec
ficompl
mov
jnp
xor
and
jne
add
outsl
cmp
jnp
lret
xor
adc
rclb
mov
vpmacsdql
test
jge
pop
scas
mov
daa
rclb
fsubrp
xchg
mov
das
or
pop
xchg
bound
push
int3
xor
sub
lods
sub
scas
xchg
xor
push
movsb
cli
xor
dec
test
and
jl
lea
add
add
aas
out
push
std
xchg
cld
test
movsl
dec
fisubs
pop
or
jo
xor
lea
xchg
lods
sarl
inc
inc
inc
test
jle
lcall
cmpl
mov
lds
add
mov
lahf
data16
jp
xchg
adc
add
mov
outsl
jecxz
xor
stos
shll
cmp
test
jae
jp
sbb
mov
nop
out
fldl
xlat
mov
xor
lcall
test
and
imul
js
xchg
in
jno
jle
dec
push
jge
loopne
mov
cmp
jle
inc
xor
lret
mov
popa
jecxz
int3
cmp
mull
adc
dec
andb
fisubl
dec
pmaxsw
pop
mov
adc
jne
and
inc
sub
popf
xchg
mov
lea
hlt
adc
std
or
jl
outsb
jle
mov
xchg
cmp
scas
shll
push
xor
mov
out
in
sub
push
cmp
ret
repz
xchg
inc
cli
pop
pop
ret
stos
clc
loop
adc
cmp
popa
pop
jne
popf
xor
movsl
loopne
xor
push
xchg
push
rcll
inc
jno
cld
imulb
pop
arpl
stos
mov
jg
push
sbb
repz
jmp
lret
push
mov
fildl
loope
sub
push
loopne
jge
cwtl
xchg
lcall
stc
repnz
in
sub
scas
push
cs
push
shlb
pcmpeqw
notl
mov
rcr
test
and
mov
or
rol
mov
enter
rclb
sti
or
pop
lret
mov
sbb
add
bound
sub
out
leave
jl
xchg
pop
cmp
lock
leave
add
pushf
cmp
int3
or
in
xchg
daa
dec
cli
dec
rorl
lea
ja
or
sub
xor
je
mov
fwait
in
push
mov
adc
xchg
push
cmpsl
mov
rcr
inc
das
movsl
mov
pop
sub
pop
fidivrl
dec
jbe
lods
imul
add
push
loope
in
aas
jo
pop
out
adc
scas
pop
cld
lock
mov
mov
inc
loope
mov
das
inc
je
dec
push
in
xor
sti
cli
outsb
xchg
add
jns
in
mov
lods
ja
adc
dec
test
jb
dec
xchg
js
push
xchg
cmp
aaa
inc
outsb
outsb
ret
sub
or
push
pop
adc
rcll
cmp
rolb
fldcw
push
inc
cmp
insl
dec
jge
dec
add
pop
jb
lret
lret
sbb
mov
ret
data16
stos
xor
inc
movsl
inc
ja
sbb
add
xor
sub
push
loope
aad
xlat
jne
sahf
mov
mov
subl
jae
cmpb
or
mov
pop
fsubr
xorb
shll
lahf
js
dec
loopne
test
cmpsl
cmp
popf
cltd
pop
adc
jae
xchg
loopne
sub
ds
clc
test
pop
xor
arpl
outsb
cs
adc
mov
les
pop
lea
mov
mov
jnp
cmp
sbb
add
mov
cmc
stos
cmp
jp
mov
stc
mov
lods
test
arpl
icebp
rcl
arpl
dec
repz
push
shlb
inc
fcmovne
cmp
pop
int3
test
push
pop
loopne
inc
xchg
lock
sti
cmpsl
add
fs
xchg
fimuls
push
jbe
push
stos
daa
mov
xchg
ffree
or
mov
mov
int3
mov
sbb
push
shr
insw
and
into
pusha
fdivl
inc
jle
sbb
stc
shll
xchg
jbe
clc
in
mov
mov
jnp
lods
xchg
push
dec
fmull
lret
cmc
aas
jns
dec
cmp
jmp
adc
mov
inc
push
xor
aad
cmp
ljmp
xor
mov
push
mov
mov
lcall
mov
std
lret
or
hlt
cmpsb
and
inc
mov
jle
mov
sub
dec
adc
jae
out
lods
popa
js
adc
dec
into
loope
inc
sub
ljmp
mov
mov
mov
adc
push
mov
leave
jg
out
dec
cmp
and
cmp
and
jno
lahf
cmp
push
and
sub
ja
je
test
xchg
mov
int
lcall
jmp
sub
pusha
fldt
sbb
fidivrs
jns
clc
rolb
sub
es
adc
rorb
inc
nop
or
fimuls
jns
das
pop
notl
push
test
push
sbb
jne,pt
cmp
xlat
cwtl
daa
cmc
mov
fisubrl
cmp
loop
mov
push
fildll
call
aad
arpl
xchg
pop
loop
sbb
outsl
mov
xor
orps
pop
xor
outsl
pop
pop
push
lahf
pop
push
mov
popa
inc
les
cltd
repnz
mov
and
jp
lds
pop
cmpb
push
or
cmpsb
enter
cmp
test
test
cmp
mov
xchg
mov
lret
imul
adc
sar
adc
rorl
int3
or
subb
ljmp
mov
sub
mov
cmp
push
ja
movsb
mov
jle
out
lahf
mov
cmp
leave
jbe
sbb
or
js
out
jb
inc
add
ds
jae
ret
add
sub
cmpsb
mov
or
clc
fnstcw
por
sub
jno
cmp
xor
out
mov
xchg
push
dec
sbbl
mov
fists
pop
and
push
loop
mov
fistpl
jb
inc
shll
push
outsb
mov
imul
inc
inc
imul
jecxz
mov
das
lock
movsl
push
xchg
or
pop
stos
lret
mul
call
cmp
mov
xchg
or
xor
test
mov
mov
fdivrp
stc
lea
lret
movsb
std
pop
daa
mov
pusha
rclb
gs
decl
push
inc
mov
adc
fdivrp
inc
aas
mov
je
nop
das
addr16
fisubrs
ds
fldcw
repnz
inc
or
xor
cmp
ss
mov
orl
into
sub
sbb
or
xor
outsl
ficoms
jo
stos
out
xchg
test
insb
mov
test
scas
sub
sar
jg
pop
aas
mov
jbe
jge
ret
fadds
push
imul
jae
and
pop
jg
sbb
pushf
shlb
sti
mov
aaa
inc
lret
mov
rorl
xorb
inc
sbb
test
lds
fdivr
mov
imul
dec
sbb
adc
jae
mov
or
jnp
mov
mov
gs
popa
aam
xchg
outsb
mov
pop
adc
or
stos
fdivr
loop
mov
xchg
mov
mov
cmpl
pop
mov
data16
sub
dec
sub
pop
jmp
sbb
mov
repz
push
inc
dec
jno
dec
jo
mov
movsb
xchg
daa
fisubs
psubb
or
mov
ds
out
mov
jb
push
outsb
push
outsb
in
sub
pop
mov
inc
cmp
test
fidivrl
push
push
scas
jmp
lret
sti
sbb
cmp
jge
lds
lds
dec
cli
push
sarl
loope
repnz
inc
pop
int3
jbe
cwtl
push
ret
stos
mov
jb
ja
cmpsb
push
push
and
test
jge
mov
fs
outsl
mov
and
push
cwtl
dec
lret
inc
add
loopne
or
ja
mov
faddl
or
xor
loopne
add
fsubp
and
cmp
lods
and
mov
test
sbb
in
pop
xor
dec
add
popa
pop
fsubs
push
xlat
or
insb
xor
mov
pop
pop
in
and
mov
stc
lret
and
push
jae
and
adc
or
iret
push
ret
repz
arpl
sub
add
dec
push
outsl
pop
lds
mov
jnp
in
ss
mov
jnp
mov
fwait
sbb
lret
out
addl
jne
fwait
mov
js
mov
pop
mov
aaa
and
iret
call
sub
pop
inc
jb
test
scas
fiaddl
adc
mov
aad
std
stos
shrl
sbb
popf
fidivs
loopne
orb
test
movsl
mov
in
jo
cmpsb
sbb
add
hlt
into
add
xchg
fldt
pop
jno
pop
xchg
aad
add
dec
mov
lods
or
cmp
ja
push
mov
mov
arpl
inc
sub
fsts
mov
mov
xchg
jecxz
stos
popf
and
popa
fwait
test
roll
lret
ret
jb
test
sub
lods
ret
xchg
pop
mov
cltd
pop
pop
lret
repnz
lds
loop
xchg
cmp
pop
stc
jo
hlt
mov
jbe
push
addl
ja
mov
outsb
in
cmp
push
loope
fcomip
ljmp
cmpl
outsb
mov
ret
xchg
pushf
lahf
jnp
mov
divb
lret
sub
or
movsl
mov
mov
in
mov
dec
mov
push
shll
cmpsl
inc
jno
stc
sbb
cltd
iret
sti
insl
imul
scas
pop
xchg
dec
insl
popf
cmc
sbbl
inc
insl
ret
or
outsb
mov
faddp
popa
enter
or
loope
int3
enter
fsubl
int
fdivrl
xor
rclb
ss
jae
xor
bound
nop
mov
sbb
pop
aam
imul
push
lret
lret
lea
pop
xchg
mov
push
imul
jp
adc
stos
xchg
dec
and
popf
sub
push
cwtl
imul
mov
mov
lcall
stos
adc
cltd
mov
jecxz
xor
cs
push
cwtl
mov
xchg
dec
mov
dec
lret
fisttps
bound
mov
cmp
popa
and
xchg
in
aad
es
inc
mov
lret
or
bound
int3
sar
inc
in
js
fnstcw
andb
outsb
aas
lods
push
jnp
jo
cli
pop
movsb
loopne
enter
imul
ret
in
push
mov
sbb
cmc
inc
rorb
dec
lret
insb
test
jno
add
loope
jl
mov
lea
xchg
fwait
inc
icebp
xchg
imull
adc
xor
push
shr
sti
pop
sub
mov
movsl
cmpsb
scas
les
testb
mov
pop
test
cmp
loop
jbe
adc
inc
push
out
sub
adc
xlat
push
and
mov
rclb
pop
sub
xor
sbb
adc
jae
bound
pop
push
scas
fadds
mov
test
movsb
lods
xor
aaa
ds
je
inc
out
js
fcompl
mov
dec
dec
ljmp
jb
bound
and
rorb
push
jp
mov
jg
adc
mov
std
jge
clc
out
mov
push
add
push
leave
jge
sbb
inc
dec
dec
jo
mov
xchg
loope
dec
lea
fisubrs
stos
cld
pushl
into
xor
sbb
inc
fmuls
jg
mov
mov
sbb
xchg
xorb
dec
pop
xchg
jmp
aas
dec
and
adc
andb
cli
xor
push
mov
add
ret
mov
out
and
jno
dec
enter
loopne
mov
inc
xor
mov
xchg
add
ror
push
loop
jno
out
fidivl
inc
sbb
fstpl
jnp
js
mov
xchg
pop
dec
in
idiv
adc
test
repnz
inc
loope
pop
aas
test
sub
sub
fcmovu
fld
mov
add
cmp
jne
adc
out
popf
adc
repnz
lock
or
dec
mov
xor
adc
sub
daa
push
lock
jae
lret
scas
lahf
repz
xor
jno
jge
add
xor
les
xchg
jp
mov
rcl
das
add
aaa
push
or
pop
imul
dec
jge
xchg
mov
or
mov
and
add
pop
or
imul
cmp
push
xchg
test
lock
xchg
jno
das
or
mov
mov
mov
push
pop
or
test
fsts
fiadds
lret
xchg
lret
push
data16
cwtl
mov
sbb
movsl
stos
xor
lock
xchg
add
lahf
push
mov
dec
pop
test
pop
rcll
sbb
icebp
push
es
nop
gs
dec
pop
call
lahf
sbb
mov
push
mov
jl
cmp
mov
xorb
adcl
jbe
sub
mov
push
pop
fs
sar
fidivrl
das
in
push
pop
push
add
sbb
mov
aad
adc
mov
jb
push
add
ljmp
dec
push
adc
jb
pop
jb
xchg
les
push
xchg
pop
cltd
jp
imul
jnp
xchg
dec
hlt
aam
jmp
cmp
adc
in
movsb
in
movb
pop
jae
out
mov
push
add
notl
test
and
sub
lea
in
push
and
xchg
cwtl
out
jo
ds
loop
and
dec
aam
push
xchg
or
and
ret
sbb
jnp
aas
lahf
fstps
adc
xchg
repz
mov
test
mov
inc
lahf
push
mov
adc
xchg
pop
push
add
pusha
xor
or
mov
out
subb
in
icebp
nop
dec
mov
stos
cmp
mov
clc
dec
dec
pop
in
push
mov
mov
fisubrl
rolb
mov
cmp
sbb
mov
ja
xchg
mov
test
mov
or
jae
dec
push
fsubp
enter
push
pop
adc
cmp
fcomps
in
or
insl
in
xchg
jmp
movsl
les
test
dec
or
xchg
ds
js
test
jle
mov
lods
ja
pushf
inc
mov
addr16
mov
sbb
in
cmp
inc
stc
jbe
cwtl
or
addr16
xor
lret
xchg
mov
shrl
sub
inc
lods
mov
and
jb
test
add
push
cmp
cmp
inc
cli
popa
mov
jp
inc
data16
out
xor
sbb
es
loope
es
cmpb
movsl
or
aam
pop
add
mov
testl
imul
pop
or
inc
stos
xor
add
roll
imul
aad
ret
mov
pop
les
dec
mov
jge
adc
scas
push
mov
and
bound
adc
or
sub
mov
clc
popa
pop
push
ljmp
lcall
jg
ljmp
int
sbb
rolb
lods
out
loop
xchg
push
jmp
xchg
dec
fisubrl
shll
xor
xchg
js
in
mov
sub
cmp
daa
xor
icebp
or
scas
pop
cmp
adc
pop
fldt
push
xor
adc
mov
or
fistl
jne
inc
test
cld
arpl
adc
pop
outsl
fstpt
xchg
add
hlt
cmc
cmp
fwait
mov
adc
out
push
add
rcrl
jns
xchg
stc
bound
data16
pop
mov
inc
ret
add
sbb
cli
cmc
nop
aad
imul
mov
dec
jmp
stc
jmp
pop
adc
ret
in
pop
sub
test
repnz
cltd
arpl
ret
jle
movsl
jnp
jb
adcl
popa
das
pop
jmp
aam
xor
add
stos
mov
imul
cltd
and
iret
or
lds
loop
testw
pop
or
dec
popa
mov
repz
adc
in
sub
sub
push
insb
sahf
cmp
cmp
sub
jmp
jecxz
pop
icebp
dec
insb
mov
mul
or
xor
addb
adc
or
dec
enter
fisubrl
mov
in
dec
mov
xor
dec
cwtl
pop
shrb
sbb
adc
into
mov
and
stos
mov
dec
sub
mov
push
push
adc
xchg
stc
sub
mov
add
jp
pop
push
sub
xlat
mov
lret
mov
aaa
scas
repnz
cwtl
lea
cmp
shrl
lret
mov
js
push
push
roll
sub
dec
lret
sbbb
and
iret
cltd
into
sbb
sub
movsl
push
clc
or
xor
aad
mul
mov
femms
int
push
cwtl
ret
repz
int
adc
or
cmpsb
lods
ss
repz
sti
out
ret
jmp
mov
fwait
std
test
xchg
je
icebp
lea
shlb
and
shlb
shlb
repz
jno
mov
sub
stos
xchg
dec
inc
add
out
fimuls
adc
xor
cmp
in
cld
out
jbe
aaa
stc
sub
stc
loopne
mov
adc
mov
fcomip
je
sarb
ss
addr16
lcall
add
mov
inc
add
jg
adc
mov
cmpsb
sbb
pop
in
lods
adc
xor
in
loope
movl
inc
fdivrp
sbb
lret
lahf
xor
int3
sub
rorb
push
add
sub
ljmp
inc
inc
pop
pop
and
dec
push
mov
sbb
sub
or
dec
pushf
cld
or
rcll
mov
mov
enter
jne,pt
cmp
ss
out
mov
mov
fcmovne
add
andb
arpl
inc
enter
mov
dec
sub
push
lea
nop
mov
xchg
adc
jno
mov
test
rorl
out
adc
mov
xor
leave
pop
out
mov
dec
mov
mov
js
add
in
stos
add
in
or
je
jns
and
loop
mov
mov
pusha
add
mov
adc
dec
aas
mov
or
mov
adc
sub
pop
dec
test
fcompl
inc
les
inc
jbe
mul
fsubl
call
push
lods
mov
jecxz
xchg
ret
int3
cmp
mov
fistpl
stos
shl
push
test
adcl
daa
jg
sub
mov
std
pop
sarb
lods
sub
mov
loope
mov
and
aam
push
fistpl
mov
jno
mov
and
xchg
outsl
jbe
jo
push
movb
out
cmp
jb
mov
outsb
mov
ss
add
xor
jno
jmp
inc
pusha
test
sub
outsb
sub
or
ret
lahf
mov
jg
xor
pop
mov
addb
push
lods
jp
add
sub
arpl
sti
cmpsl
lds
inc
nop
mov
shlb
ret
movsl
jno
push
fnsave
imul
idivl
fistps
push
pushl
int
subb
sahf
sub
fimull
addl
xor
inc
push
movsb
cs
cld
mov
ljmp
loop
xor
in
adc
inc
jge
lods
adc
adc
loop
cmp
pop
rcl
or
outsl
push
rcpps
cs
loopne
in
outsb
push
push
push
fwait
jmp
pop
xor
pop
jae
pusha
not
push
xor
xor
int
daa
cmp
mov
mov
jae
xor
repnz
scas
aas
xchg
scas
xlat
in
scas
cmp
out
inc
rcrb
mov
loop
loopne,pt
adc
adc
jb
outsb
jl
mov
xchg
and
cmp
es
aaa
add
outsl
xchg
cmpsl
nop
fs
and
xchg
mov
out
lret
xchg
xor
pop
cli
cmp
mov
inc
mov
cmpsb
cmp
pop
cmp
dec
inc
andb
lock
adc
push
mov
mov
push
push
pop
jg
into
xor
sbb
pop
xchg
pushf
shl
add
mov
cmc
ret
adc
je
das
rcrl
push
pslld
fs
or
imul
lahf
or
mov
into
sarb
mov
lods
bound
pop
imul
arpl
xor
lods
shll
mov
mov
inc
ljmp
pop
sub
imul
adcl
or
int
push
mov
fistl
scas
push
fs
test
jbe
pop
scas
jae
xchg
push
push
adc
mov
jecxz
xchg
xchg
out
xchg
push
jne
pop
ficompl
mov
ss
xchg
pop
inc
test
cli
cmpsb
mov
je
mov
imul
cmp
in
inc
xchg
sub
and
outsb
dec
jmp
inc
dec
push
mov
repnz
sbb
push
push
outsb
pusha
adc
mov
jecxz
jne
add
push
outsl
pop
lret
inc
lods
dec
add
roll
int
jle
dec
imul
cld
mov
test
push
xor
mov
dec
add
push
push
fdivl
test
test
in
jecxz
jae
bound
adc
in
mov
cmc
iret
out
inc
push
jl
pop
pop
ds
push
adc
rorl
pop
test
cli
leave
push
mov
add
icebp
stc
aaa
inc
dec
mov
shlb
xchg
push
int3
lret
lcall
aam
mov
repz
es
push
test
lods
mov
outsl
movsl
cmp
inc
and
arpl
push
cmp
je
outsl
jmp
xor
xchg
xlat
test
orl
and
or
cmp
stc
push
mov
imul
lahf
adc
jg
xor
xorb
dec
adc
cmp
lcall
xchg
mov
mov
xor
cmp
pop
sbb
stos
fisubs
xchg
popf
xor
push
jns
roll
push
fidivs
cmp
lods
add
cmc
cs
xchg
fcompl
inc
lcall
inc
jno
fucomi
mov
data16
fnstsw
imul
cmc
xor
movsb
addl
xchg
in
mov
jge
add
test
rorl
adc
xor
mov
lods
xchg
daa
cmp
mov
pop
cwtl
sub
in
mov
push
aad
aas
jg
mov
cltd
orb
and
cmpsl
call
dec
jge
data16
mov
int
lock
and
ss
and
shrb
iret
xorl
dec
gs
pushf
mov
mov
idivl
adc
or
test
sti
cld
mov
lods
xor
popf
testb
add
nop
push
xor
scas
icebp
bound
or
incl
cmp
sbbb
xorb
lahf
frstor
insl
leave
cltd
cmpsb
cli
pop
in
rolb
or
ja
xor
xchg
xchg
sahf
test
leave
push
pop
pop
jne
ja
es
sti
fwait
scas
cwtl
jl
cmp
jb,pt
movsb
fprem1
inc
mov
sub
movsl
jno
fwait
lock
adcl
mov
cmp
lock
lahf
mov
xchg
std
pop
xchg
sti
push
in
jmpw
xchg
jo
sub
lcall
jle
ljmp
cmp
cld
adc
aas
or
int
mov
inc
cmp
sub
icebp
imul
xchg
fcomps
loope
xchg
call
jns
and
adc
mov
dec
aam
adc
adc
cmpsb
pop
shr
sub
sbb
and
xchg
push
movsl
mov
or
or
andb
and
cmc
ficoms
add
dec
andb
ret
mov
jmp
repnz
pop
popa
lods
pop
jecxz
pop
rep
pop
cmp
inc
jl
push
or
mov
fsubs
dec
movsl
out
push
lcall
cmp
xchg
fcoml
add
es
or
jns
jnp
sub
daa
roll
add
push
call
setne
jno
call
mov
push
or
pop
xor
cmpsb
inc
outsl
enter
in
cwtl
xor
and
ret
into
or
loopne
jo
sti
movsl
loop
mov
xor
mov
push
shlb
push
out
test
mov
test
dec
mov
push
push
arpl
daa
jge
jb
loop
lods
sub
xor
xor
pop
in
or
mov
push
xor
jecxz
adc
cmp
cmpsl
mov
or
and
std
sub
mov
adc
out
outsl
mov
fwait
fwait
xor
rolb
jo
push
js
sub
push
scas
sbb
lods
lahf
cmp
dec
mov
mov
push
inc
in
dec
add
data16
rcr
add
push
push
xchg
test
cwtl
fdivr
je
jg
mov
pop
jbe
jg
push
mov
dec
call
cmp
mov
iret
jg
sub
shll
lock
pop
nop
movsb
inc
bound
pusha
mov
stos
pop
inc
xchg
dec
and
fimull
addr16
rcl
fldenv
push
dec
xchg
mov
iret
cwtl
rcrb
les
pop
ficoms
lds
mov
mov
lret
xchg
cmc
pushf
add
out
insb
cs
sub
pop
scas
xlat
lahf
jl
mov
out
dec
lcall
shll
adc
xor
xchg
inc
roll
mov
mov
jl
sti
sbb
mov
gs
movsb
adcb
mov
pop
sub
je
xchg
sub
fnstenv
jo
jae
ja
loope
xchg
sbb
fmulp
fiaddl
leave
sbb
insb
mov
sbb
jecxz
ljmp
mov
arpl
inc
mov
xor
inc
or
in
orb
adc
sub
test
fbld
dec
mov
es
repnz
test
sahf
test
lcall
push
and
xchg
add
stc
add
fldt
mov
jp
jne
out
push
cmpl
fnsave
inc
icebp
call
mov
mov
jns
pop
cmp
sbb
cmp
dec
cmpsl
ljmp
dec
insl
fidivl
fnstsw
out
adc
jp
cmp
dec
or
add
add
xor
dec
jno
or
add
and
mov
and
popf
sbb
cwtl
loope
cltd
call
pop
sub
lret
mov
or
sub
fs
xor
pop
popa
jns
dec
pusha
add
pop
divb
sarl
fcmovb
jbe
cmp
xchg
mov
ss
js
cld
nop
fbld
mov
jo
push
leave
lcall
enter
pop
out
lods
cmp
xchg
lock
out
fldl
aas
fists
dec
mov
test
hlt
inc
push
scas
fists
movsb
sbb
adc
jb
adc
arpl
cmp
das
xlat
push
xchg
arpl
lret
xor
push
loope
xchg
out
push
repz
adc
and
clc
bound
push
in
fs
xchg
jge
rcl
mov
test
imul
sbb
repnz
popl
loopne
loopne
push
mov
movsb
mov
stos
lahf
push
add
mov
inc
mov
shrb
mov
mov
scas
push
cmpsl
out
lds
popa
lret
push
push
dec
sti
fists
add
fs
mov
ror
xchg
sub
pusha
stc
scas
sub
push
fdivs
xchg
adc
cltd
out
mov
push
stc
cmp
or
addr16
inc
enter
mov
rcrl
icebp
cli
fidivs
ljmp
xor
sbb
xchg
out
into
pop
xor
stos
out
call
movsb
outsb
fbstp
jg
pop
ktestb
inc
mov
xor
add
xor
xor
jns
inc
mov
push
xchg
jl
int
push
leave
pop
cs
sti
lcall
xor
and
mov
sti
mov
gs
inc
stos
cmpb
repnz
mov
rclb
push
mov
daa
call
lret
aas
div
jmp
fadd
std
mov
cwtl
and
repz
mov
push
adc
int
pop
pop
jo
or
inc
sahf
hlt
ja
sbb
mov
stc
mov
mov
mov
cwtl
cmp
lret
loopne
insl
and
sti
cld
repz
jne
xorl
adcl
xchg
mov
loope
mov
add
cmpsl
xlat
mov
pop
testb
loop
in
fisttpl
test
or
ret
out
adc
sub
shll
and
loop
orl
js
es
and
adc
adc
imul
inc
imul
nop
subb
int3
sbb
or
andw
pop
adc
jl
imul
mov
pushf
mov
aas
pushf
imul
mov
mov
js
sub
inc
inc
add
xchg
pop
lahf
ss
mov
bound
loop
out
or
iret
inc
jbe
dec
fmulp
loopne
dec
out
push
sbb
fmull
inc
cmp
icebp
xchg
push
iret
dec
mov
adc
mov
mov
adc
pop
jbe
or
sub
cmp
cmp
inc
adc
iret
insb
test
comiss
stos
add
sbb
push
push
sub
aaa
ljmp
sbb
insl
jno
add
dec
icebp
int
xchg
jae
sbb
sub
jns
jns
sub
xchg
xchg
mov
nop
add
faddp
shlb
or
test
dec
inc
aas
mov
movsl
outsb
mov
sarb
sub
jno
int
icebp
aad
push
sbbb
add
push
out
fcomps
dec
adcl
inc
fwait
inc
insl
lea
rcr
daa
int
out
xchg
test
stc
andb
xchg
into
js
dec
out
addl
xor
dec
add
sti
push
dec
or
pop
xor
repz
pop
inc
push
popa
push
je
aam
push
and
dec
scas
push
cld
jecxz
pop
mov
adc
inc
lret
gs
push
xchg
lea
add
daa
mov
or
cld
sahf
call
push
mov
adc
rorb
fdivrs
lods
mov
xchg
mov
mov
dec
jl
into
subl
cmpsb
or
in
scas
xchg
jp
or
mov
cmp
or
fldl
out
iret
cld
pusha
scas
lret
xchg
sub
pop
adc
out
fadd
and
enter
js
adc
push
repnz
push
lcall
mov
loop,pt
inc
sub
dec
aas
out
inc
cmpsl
jo
sbb
adc
push
pop
and
loop
and
test
add
mov
aam
add
add
fadds
xchg
sti
and
mov
leave
add
fwait
sub
push
iret
inc
and
jne
cs
je
add
and
inc
fisubrl
and
xchg
and
jbe
fidivl
enter
out
inc
js
cmpsb
dec
push
sub
add
pop
ficoml
mov
xor
push
imul
in
pop
sbb
fs
pusha
mov
into
adc
lods
xor
in
cmpsl
and
dec
adc
int3
out
xor
fisttpl
xlat
pop
bound
pop
push
enter
sbb
cmp
xchg
mov
shll
stos
sub
popf
dec
es
add
inc
jl
iret
cmp
cmpl
sbb
or
or
or
inc
mov
in
pusha
in
push
jne
arpl
mov
scas
mov
imulb
or
pop
sub
xchg
testl
lahf
pop
mov
insl
and
xor
test
push
ss
mov
add
lds
push
lret
inc
adc
sbb
loopne
ljmp
pusha
daa
push
sub
lods
add
rcll
mov
push
outsl
shll
jo
shr
popf
stos
xlat
cltd
cli
xchg
jnp
test
es
imul
push
jo
mov
adc
mov
push
xchg
push
push
fisttpl
int3
jecxz
into
add
adc
das
mov
add
loopne
repz
fs
out
lahf
jb
stos
push
push
gs
pop
sub
adc
sbb
cli
cmc
and
or
push
and
into
mov
fs
sarl
pushf
mov
in
out
jbe
xchg
xor
aam
test
lret
fadd
mov
cmp
loopne
adc
xor
or
adc
lret
sbb
pop
push
pop
inc
fnstenv
adc
lret
adcl
add
or
mov
cmp
and
imul
pop
mov
rclb
mov
jae
notb
fcoml
ljmp
gs
xchg
jb
enter
push
mov
fisubl
dec
movsl
jae
sub
scas
negl
rorl
insl
pusha
cmp
mov
mulb
popl
out
push
rcrb
dec
push
cltd
pop
movsb
mov
inc
pop
cmp
lret
pop
mov
cmpsb
jle
jle
mov
xchg
jle
mov
aas
and
lahf
ja
sbb
mov
popa
clc
xchg
lods
cmp
adc
lds
in
cmpsl
lret
xor
call
cwtl
sbb
mov
fwait
clc
inc
inc
sbb
leave
iret
jg
push
or
mov
or
hlt
pusha
or
xchg
lahf
xchg
jb
ljmp
lret
pop
je
es
dec
and
push
inc
lods
mov
jbe
jge
or
div
push
pop
fistpl
shrb
pop
pop
daa
xor
mov
jb
pop
incl
pop
ds
or
lcall
incb
in
pop
fimuls
in
xor
mov
fldl
rolb
pop
sub
enter
inc
adc
fiadds
and
loopne
xchg
cmpxchg
les
lock
dec
or
adc
leave
pop
imul
xchg
out
insb
into
cmpsb
lcall
aas
ficoml
adc
dec
sub
cmpsb
outsl
dec
mov
test
cld
das
ret
dec
adc
loope
insb
fstpt
xchg
mov
jo
adc
or
add
or
jb,pt
fldt
or
cmp
or
jnp
stc
add
shl
or
ss
sub
dec
mov
or
pop
enter
icebp
in
sbb
cmp
incb
adcl
jg
pop
ret
sub
mov
add
cmpsb
arpl
pop
aam
xchg
dec
adc
push
or
pop
add
in
mov
mov
sub
ret
in
add
fldt
pushf
leave
dec
cmp
les
mov
mov
ret
push
xchg
dec
sar
dec
sbb
das
adc
jmp
and
adc
pushw
hlt
loop
daa
sub
rorb
iret
sub
xchg
pop
sub
scas
xor
call
daa
loopne
orl
and
cltd
jg
mov
daa
lea
push
ss
sbb
nop
enter
mulb
push
pop
mov
mov
mov
fimuls
inc
and
jmp
jns
test
in
sbb
push
gs
out
pop
pusha
in
pop
scas
push
inc
test
jmp
into
addl
pop
add
sar
pop
movsl
rcrb
add
out
fistpl
pusha
mov
cs
adc
cmc
dec
sbb
sahf
add
jo
xor
sahf
gs
popa
push
push
iret
or
lea
out
xor
in
and
lcall
hlt
subl
or
sub
xchg
shll
movsl
pcmpgtd
ret
add
adc
fldenv
push
push
cmp
xchg
lret
and
fcomi
rolb
repz
mov
xlat
popf
sub
jns
mov
sahf
pusha
inc
repnz
fwait
lds
sub
ret
xchg
insb
addl
xchg
fwait
add
sub
add
repz
xchg
jne,pt
lret
mov
mov
fs
xchg
inc
loopne
fsubrs
or
ss
xor
dec
jmp
push
mov
mull
xchg
roll
sahf
jg
out
out
lcall
add
or
jne
and
sbb
xchg
sahf
mov
out
xchg
sbb
dec
hlt
inc
int
mov
jg
scas
sub
int
push
jae
ja
or
lret
hlt
xchg
sbb
rcl
into
xor
int
jecxz
add
stos
jmp
shr
mov
push
mov
incl
xchg
ljmp
xchg
cmp
roll
in
sub
mov
adc
sub
jp
cmp
shrl
xor
jmp
dec
cmp
lods
int3
insb
int3
pop
pushf
pop
into
repz
scas
fildll
or
stos
cmc
or
in
scas
daa
das
jo
aad
sbb
lods
mov
add
pop
popa
adc
pop
adc
bnd
sbbb
in
in
scas
pop
xor
pop
dec
inc
mov
jle
fwait
mov
mov
out
fsubs
add
mov
ja
popa
pop
pop
mov
shrb
mov
push
sti
add
or
push
clc
mov
sbb
mov
fisubrl
out
jae
adc
les
daa
pop
subl
xchg
push
ljmp
orl
sahf
push
cltd
lahf
sbbl
shll
mov
es
addb
sub
rcl
pusha
xchg
repz
mov
in
mov
in
mov
mov
rclb
sti
fstps
sub
inc
aaa
push
push
sub
adc
mov
mov
adc
addr16
enter
sbb
loope
movsl
outsb
js
lea
cmp
sbb
movsb
jae
pop
xchg
mov
leave
jae
xchg
xchg
push
aad
cmp
jbe
and
and
jne
sbb
cli
enter
in
in
jo
or
inc
leave
sub
xor
cmp
ret
aad
enter
cli
ss
sub
subl
rclb
fucomi
sub
xor
dec
dec
xor
cmp
rcll
cmp
ror
out
cmpsl
inc
rcr
push
shll
lret
mov
repnz
cltd
fcmovnu
lahf
popf
pop
or
add
insb
or
push
out
jno
dec
adc
jle
mov
cmp
je
mov
push
xor
push
fstp
adc
push
stos
sub
and
cwtl
jl
cmpsb
sbb
in
cmp
inc
repnz
cmpsl
repz
in
pop
xchg
mov
mov
subl
into
mov
pop
in
jno
mov
adc
outsl
test
pushf
sahf
clc
popf
jno
pop
ja
jmp
stos
inc
push
adc
fcomps
mov
pushf
pop
out
mov
jle
cwtl
push
push
jne
enter
sub
aas
xor
mov
in
lcall
ds
repz
sub
xlat
popf
hlt
push
cwtl
push
or
pushfw
lcall
call
sbb
or
int
mov
and
sub
or
int
cmp
lcall
popa
cmp
inc
out
cmpl
lret
jecxz
xchg
dec
pop
stos
xor
sbb
cli
add
sub
push
dec
add
daa
pop
cli
xchg
push
or
mov
jmp
mov
int3
insl
xchg
jp
add
push
push
pop
repnz
jg
push
in
fdivl
loop
cmpl
cmc
ja
mov
fldcw
pop
cmp
xchg
mov
mov
xchg
adc
mov
sbb
dec
flds
or
push
lods
shl
mov
add
mov
out
adc
push
push
mov
lea
mov
mov
add
repnz
int3
ljmp
mov
or
cmp
or
dec
jmp
fs
test
sarb
jp
imul
out
aam
adc
mov
inc
rorl
inc
jae
mov
mov
fnstenv
xor
loopne
cli
xchg
push
clc
loopne
std
pop
fldt
ret
and
pop
dec
and
xchg
imul
movsb
in
lcall
jbe
and
out
jmp
and
add
fsubrl
add
add
jbe
push
xchg
das
push
or
cltd
mov
pop
lock
push
les
mov
pop
pop
adc
sbb
arpl
push
fs
stos
movsb
cwtl
subl
outsl
add
adc
lret
popa
sbb
adc
out
inc
jle
mov
jnp
inc
jge
or
popa
das
stc
and
movsb
inc
inc
cmp
sbb
jne
xor
mov
out
mov
add
jle
lds
sbb
out
push
add
das
outsl
mov
mov
xlat
lret
jg
xor
pop
jp
mov
lret
mov
inc
sub
std
sbbl
lahf
mov
jl
mov
push
add
daa
mov
mov
outsb
neg
leave
mov
hlt
outsl
gs
scas
cmp
lahf
fstl
lds
push
movsb
xchg
fdivrs
into
push
loope
push
sbb
and
shrb
loop
testb
int
and
push
into
xchg
xchg
pop
dec
repnz
mov
repz
loop
or
movsl
outsb
popa
push
test
pop
xor
in
dec
scas
mov
mov
pusha
scas
and
dec
bound
aaa
mov
mov
jb
rol
cmp
mov
dec
or
adc
shrl
sahf
pop
inc
lcall
xor
ds
es
inc
in
jle
jo
loope
lcall
insb
mov
add
shl
or
mov
or
dec
lock
loop
dec
adc
aas
subl
das
push
pop
push
je
mov
push
aaa
or
or
inc
out
hlt
das
nop
incb
out
or
cltd
inc
mov
scas
iret
rcrl
push
mov
int
cmp
adc
inc
sub
xor
cwtl
loop
sub
insb
les
jne
imul
enter
pop
nop
fimuls
xor
push
mov
mov
cmpsl
jp
mov
leave
cmp
sbb
inc
clc
push
xor
imul
xor
imul
pop
xchg
mov
loope
cmc
dec
imul
je
ret
mov
inc
ljmp
add
dec
jns
jecxz
cmp
in
adc
outsl
mov
inc
and
iret
adc
fdivrl
inc
call
adc
jbe
loopne
hlt
jne
sbb
int3
push
mulb
repnz
jae
push
shl
fsts
sbb
mov
pop
out
sub
lock
push
cwtl
inc
out
cmp
jno
jb
lret
mov
imul
mov
pop
aaa
pop
call
fadds
leave
cli
or
or
es
lcall
mov
test
out
mov
add
xchg
into
enter
loop
inc
push
cmc
sub
xlat
push
in
shl
rcl
loope
outsb
subl
hlt
lods
fdivs
iret
or
inc
pop
cmpsl
ret
xor
cltd
jge
mov
shl
loop
pop
cwtl
lret
movsb
push
lahf
leave
stos
cltd
ds
xor
adc
outsb
cmc
xchg
xchg
push
pop
enter
mov
add
out
sbb
lret
pop
cmp
cmp
cmpsl
sbb
out
ljmp
scas
stos
lods
stos
jecxz
inc
dec
jne
add
dec
or
dec
xchg
mov
mov
mov
cmp
xchg
sub
pop
mov
enter
movsl
cli
addl
inc
arpl
xchg
rolb
sbb
inc
jmp
sbbl
xchg
dec
test
inc
arpl
enter
leave
cmp
push
xchg
in
add
or
adc
adc
pop
sub
xchg
pop
sbb
sbb
xor
inc
push
lods
not
push
lret
test
fstps
test
push
push
movsl
and
and
jp
mov
fldl
mov
dec
hlt
adc
mov
adc
adc
pop
lret
push
mov
pop
shrl
inc
sbbl
lcall
or
dec
jnp
scas
push
mov
sbb
xorb
lret
jae
std
xchg
lret
nop
fwait
aas
scas
cmp
adc
sbb
sbb
std
inc
mov
and
push
cmpsb
movsb
jae
xchg
mov
mov
sbbl
movsl
mov
cmpb
xchg
xchg
int
into
xor
mov
out
call
and
jno
mov
mov
fnstsw
flds
mov
cmp
stos
into
in
jno
ja
popa
jns
sbb
movntq
out
mov
dec
mov
lahf
movsb
int3
aam
inc
in
test
jl
sub
adc
add
jecxz
cmp
dec
lahf
call
ret
shlb
int3
pop
orl
sarb
inc
out
mov
jne
dec
cld
stos
xor
mov
sarb
xchg
inc
add
jmp
dec
jge
mov
psrlq
jbe
and
rorl
inc
cld
dec
add
push
cmp
out
fldt
shll
add
inc
fsub
mov
lds
in
mov
jno
movsb
dec
sbb
sbb
and
aad
enter
in
jle
mov
es
pop
or
cmp
popf
push
cmp
popa
jno
cwtl
and
dec
test
bound
shlb
adc
mov
sub
sub
jb
enter
push
add
enter
je
inc
shll
mov
mov
cmc
daa
test
nop
sarb
jnp
iret
xor
or
xor
mov
popf
out
pop
cld
roll
cs
adc
andl
stos
test
mov
cli
lea
xchg
das
cmp
pop
mov
sbb
inc
mov
leave
aas
mov
test
mov
movsl
push
int3
leave
jmp
aad
pop
mov
cmp
sub
test
sbb
xchg
jbe
mov
test
add
add
lret
jb
in
cmp
ja
hlt
into
or
mov
xorl
cli
dec
and
and
nop
enter
pushf
adc
mov
mov
xchg
xor
sarb
xor
adc
xor
test
add
mov
mov
movsl
mov
jb
inc
pop
sub
mov
jb
daa
mov
lcall
scas
ret
lea
xchg
add
sub
cwtl
cmpsl
pop
cmp
js
xchg
jnp
xchg
mov
fdivrl
data16
adc
pop
jns
sub
movsl
ljmp
popf
or
jnp
sti
stos
sarb
rolb
adc
inc
sub
cltd
shl
inc
fs
mov
xchg
inc
jecxz
xor
divb
xorb
sub
out
hlt
mov
sub
jno
pop
mov
mov
fwait
imul
xor
push
shr
push
ja
in
insb
push
inc
jmp
mov
and
lods
mov
add
cmp
aam
outsl
mov
rcrb
lods
and
pop
push
mov
pop
inc
pushf
xchg
lea
xor
pop
inc
outsb
stc
add
ljmp
loope
jg
sahf
iret
mov
nop
fldl
jmp
stc
mov
mov
sbb
test
aas
push
sahf
pop
pop
push
mov
rclb
lret
mov
dec
push
cmpsb
dec
add
dec
and
pop
addr16
scas
shlb
push
fidivs
sahf
xchg
pop
test
mov
movsl
inc
test
and
rorl
xchg
sub
mov
jns
pop
xor
into
mov
sub
push
inc
mov
fdivl
cwtl
das
cmpb
loope
das
push
sub
pusha
insb
das
push
je
lret
mov
outsl
add
mov
dec
add
arpl
int
leave
sbb
pop
pop
jo
clc
pop
mov
sub
jnp
aad
pop
cmp
fsubs
push
fbld
rorb
dec
nop
jb
xor
mov
sarb
push
dec
mov
and
jge
cli
ljmp
mov
outsl
pusha
ds
push
ss
in
mov
mov
sbb
push
cmp
push
fsubrp
fsts
cmpps
int3
pop
mov
inc
sub
out
xchg
xchg
sti
jb
in
xchg
xchg
sub
sub
inc
xor
push
fisubs
iret
adc
jae
cwtl
push
mov
and
lret
add
sbb
imul
pusha
hlt
aas
jb
push
mov
fsub
sbb
push
push
and
int
mov
test
rcrb
push
inc
gs
push
sbb
cmp
adcb
shlb
mov
aas
xor
mov
aaa
lea
lods
imul
je
mov
ret
dec
out
push
cmpsl
enter
jmp
icebp
test
mov
test
add
and
cltd
jae
xchg
adcl
and
adc
jo
outsb
inc
data16
or
and
pop
cmp
nop
clc
dec
inc
fsubrs
mov
mov
or
adc
fldl2e
jmp
mov
pop
into
jae,pt
jg
xchg
repnz
dec
out
aaa
mov
clc
cmp
gs
in
fistl
orb
adcl
lcall
ja
cmc
sbb
fidivl
xor
sbb
ds
test
addps
sahf
inc
loop
sub
lahf
pusha
sbb
push
ret
sub
xor
lods
enter
rorl
pop
pushf
mov
mov
lret
push
cld
out
add
je
fists
pop
orb
or
adc
rcrb
mov
mov
adc
mov
pop
add
shl
shll
pop
negb
into
mov
pusha
pop
sti
cmp
dec
nop
add
push
enter
sbb
rclb
addb
icebp
add
mov
dec
pop
adc
xor
ret
cmp
outsb
mov
inc
int
jb
movsl
idiv
movsl
out
cld
outsl
fstpl
call
bnd
dec
pushf
pop
lods
lret
or
es
pop
sbb
pop
lods
xchg
movl
dec
sub
xchg
xor
add
inc
gs
push
mov
push
or
loope
xlat
and
adc
std
xlat
xchg
inc
js
jp
push
jge
and
int3
jne
movsb
jmp
jp
cli
or
pop
sbb
xor
adc
mov
shlb
ficomps
mov
enter
pusha
test
stc
sub
or
push
in
lds
pusha
shll
and
scas
xor
adc
and
sub
cmc
inc
fistl
icebp
lahf
xchg
cmpsl
inc
adc
sbb
xchg
lret
mov
xorl
fbld
loope
mov
pop
mov
sub
iret
filds
xchg
popa
sub
lret
leave
cltd
mov
hlt
repnz
scas
push
fcmovnbe
cmp
std
mov
cmc
push
es
mov
cmp
and
mov
out
xchg
stos
or
lea
popf
sub
ror
ljmp
pop
shrb
out
add
movsb
pop
outsl
nop
cmp
incb
fsts
setbe
or
out
test
arpl
aam
adc
xchg
push
loop
popf
ja
in
popf
hlt
mov
cmp
cmp
jg
mov
push
xchg
shrb
add
cmp
mov
gs
mov
scas
test
nop
loopne
mov
iret
inc
orl
xor
xchg
mov
call
xlat
cwtl
jb
xorl
jg
dec
rcll
divl
adc
leave
and
js
xchg
subl
mov
mov
popf
push
ret
push
sarb
mov
xchg
fsts
fninit
mov
xor
bound
idiv
data16
jne
dec
loope
jmp
into
and
pop
ret
xchg
cmc
inc
push
notl
daa
or
lock
lock
stos
and
xchg
add
dec
cwtl
add
jmp
sbb
pop
cmpsl
std
in
cmp
gs
add
ja
xchg
adc
pop
ret
pop
gs
fidivrs
repz
ds
xchg
aas
cmp
or
repz
and
or
jge
mov
inc
xor
mov
mov
sub
cmp
cltd
sbb
ret
mov
stc
mov
inc
pusha
dec
out
mov
lock
xchg
rolb
inc
sahf
pop
mov
xor
mov
xchg
pusha
leave
js
add
hlt
mov
stos
ja
insl
aas
mov
clc
fbld
mov
je
je
pop
ja
push
mov
pushf
xchg
xchg
pushf
dec
insb
jp
ss
int3
ficoms
cmpsl
sub
xor
cmp
in
lret
push
popa
or
jno
out
outsl
or
imul
fcompp
int
cmp
pop
aam
mov
leave
std
inc
push
pop
fisubrs
addr16
dec
and
je
jb
daa
or
arpl
lock
das
dec
lret
sahf
loop
mov
lret
cltd
loope
lods
inc
js
mov
mov
adc
ret
push
cmp
mov
inc
pop
popa
fists
push
adc
adc
repz
mov
pop
mov
or
cli
cmp
add
add
je
mull
push
fnsave
mov
sub
ljmp
mov
inc
sub
out
sarb
or
add
subb
inc
lods
shrb
push
mov
inc
add
inc
cmp
stos
jmp
push
or
lcall
lret
stos
jge
and
add
mov
cmpsl
jb
das
add
bound
cmp
sbb
lahf
shrb
cltd
or
insb
aaa
pop
roll
or
pop
inc
decb
neg
into
jae
ljmp
pop
aas
movsl
pop
lret
shrb
mov
fidivs
pop
pusha
shrl
mov
and
mov
sbb
sub
test
inc
gs
dec
outsl
jns
movsb
add
cmp
addr16
push
jns
shrl
push
mov
push
add
lret
jbe
adc
jnp
jnp
xor
sbb
push
jnp
jo
shlb
pop
mov
cmp
mov
leave
lcall
push
out
push
stc
notb
gs
add
lahf
and
push
out
mov
out
dec
lahf
stos
stos
jno
fs
cmp
push
movsb
imul
sub
les
into
push
cmc
cmpsb
fistpl
sbb
das
sub
and
loop
dec
out
dec
stos
cmp
test
lods
repz
ss
ficomps
imul
and
into
sbb
inc
xchg
cmp
push
cli
sub
in
cltd
loop
dec
and
fcmovu
pushf
imul
out
arpl
popf
inc
js
fs
jno
test
jle
mov
and
sbb
scas
daa
inc
imul
mov
or
icebp
mov
dec
cmpsb
jecxz
sub
aaa
add
inc
aaa
cmp
push
dec
sub
dec
fyl2x
mov
pop
enter
mov
int3
xchg
int3
sub
or
mov
add
bound
imulb
mov
cmp
out
mov
push
js
imul
mov
xor
cmpsb
sarb
callw
cmp
xchg
adc
mov
xchg
jge
sbbb
mov
xchg
xchg
cmp
clc
les
push
pop
mov
and
xchg
insb
mov
lods
xor
jle
push
sbb
in
in
inc
cs
xor
addr16
lods
jb
mov
dec
mov
cmp
lcall
aas
nop
inc
iret
cmc
push
inc
in
pop
shlb
ret
xchg
pusha
xor
mov
dec
jg
out
mov
xor
sub
icebp
mov
lds
pop
jne
jecxz
xchg
aam
pop
or
hlt
xor
dec
add
cmpsb
adc
mov
fidivrl
popa
pop
dec
ret
repz
push
cli
mov
pop
in
pop
imul
jnp
lcall
or
push
movsl
mov
les
push
pop
std
repnz
cwtl
loope
loop
inc
xchg
notb
lcall
mov
ja
rolb
jmp
xchg
jmp
iret
dec
scas
mov
fnclex
out
jno
scas
xor
xchg
jge
xor
bound
arpl
mov
movsl
xchg
mov
jg
or
mov
cmp
push
and
cmc
and
shll
sbb
pop
pop
ljmp
mov
cs
mov
out
hlt
cmpb
mov
cli
aaa
jmp
les
mov
pushf
pop
jl
cmp
cmp
repz
pop
es
clc
in
push
testb
sub
sbbb
aas
cmp
adcl
sbb
fstpl
mov
std
mov
or
xchg
lds
push
ja
rcrb
mov
xchg
das
shlb
cli
sub
cld
and
sbb
loopne
pop
leave
fisttpl
out
push
push
xchg
call
popl
mov
xchg
inc
push
repnz
xchg
sbb
lods
daa
add
das
mov
loop
or
out
dec
mov
imul
cmp
xchg
iret
mov
movsb
insl
cmp
in
cvtps2pi
lahf
cmpsb
xchg
cmp
mov
test
aas
mov
in
mov
outsl
in
sbb
stos
aad
or
outsl
cltd
out
lods
inc
outsl
xchg
cs
pop
inc
xchg
or
xchg
push
lea
jl,pt
out
push
aam
ss
dec
inc
push
mov
out
imul
mov
xor
add
out
es
insl
or
jns
lret
mov
inc
and
popa
mov
dec
stos
jns
dec
mov
xor
xchg
add
xor
push
cwtl
xorl
popa
jle
xor
cltd
imul
mov
mov
in
push
push
inc
jo
add
loopne
add
les
push
xchg
or
je
jle
mov
cmp
lods
bound
push
xlat
sbb
xor
dec
mov
xchg
popf
inc
add
add
dec
or
divb
jnp
je
repnz
insb
in
mov
push
fbstp
sbb
repz
ds
pushl
xlat
sub
lods
insl
xchg
push
mov
mov
loope
jp
sbb
mov
test
addr16
outsb
filds
js
mov
sub
insl
push
add
scas
outsb
mov
push
test
out
in
in
mov
sbb
gs
rcll
outsl
in
lret
jg
xor
xchg
sbb
lcall
fstps
filds
out
xor
stos
pushf
mov
fidivrl
jnp
pop
sbb
dec
sbbl
push
dec
xor
in
pop
movsl
aas
cmc
add
push
inc
add
ss
out
daa
fsubrs
or
out
mov
insb
cmpsl
add
out
int
mov
fimuls
pop
stc
push
xchg
xchg
dec
repnz
and
xchg
fwait
pop
pushf
data16
inc
fld
aaa
stc
int3
idivl
in
pop
adc
pop
mov
sub
scas
adc
mov
dec
mov
inc
notb
stos
int3
je
cmp
mov
out
ret
adc
les
jmp
mov
fmull
gs
dec
gs
repnz
sbb
shlb
fdivrl
call
dec
jmp
dec
fimull
ret
pop
nop
fs
sub
mov
dec
es
xor
fsubr
jb
cmp
sbb
or
pop
popa
xor
xchg
and
pop
jecxz
dec
mov
int
iret
sbb
or
push
mov
sub
xchg
mov
daa
dec
xor
mov
mov
mov
mov
cmpb
mov
inc
jmp
pop
adc
mul
sub
adc
or
icebp
jg
fnstsw
ja
sbb
sti
cltd
stc
xchg
fiaddl
shrl
jae
mov
addr16
pop
sub
add
imul
scas
dec
icebp
inc
jns
add
out
jno
push
ret
cmp
adc
mov
popf
and
pop
add
es
shr
movzwl
stc
lea
xchg
xchg
imul
bound
mov
data16
cmp
adc
jge
pop
inc
in
test
cmp
dec
jl
je
icebp
addb
or
push
insb
es
inc
nop
popa
movsb
fisubrl
cmp
push
jp
test
dec
jecxz
jecxz
pushf
jne
push
add
arpl
xchg
cmp
cmp
roll
iret
jb
inc
inc
push
jnp
sub
rclb
test
xor
pop
mov
bound
f2xm1
push
loopne
je
jo
std
int
jnp
push
sbb
jbe
push
cmp
lret
push
push
cs
xor
fistps
mov
fs
wrmsr
or
repnz
sti
lret
cs
je
pop
imul
add
dec
inc
add
cmp
xchg
int
pop
loopne
je
out
mov
inc
mov
pop
sbb
mov
cmp
sub
add
sbb
push
aam
es
mov
stos
dec
popf
mov
dec
hlt
adc
outsl
fmuls
mov
mov
repnz
sti
pop
mov
jo
sbb
movb
inc
mov
mov
aad
test
imul
lods
pop
pop
and
mov
xchg
fildl
faddp
xchg
test
pushf
mov
aad
arpl
mov
mov
mov
xchg
xlat
mov
cmpsl
mov
add
jmp
lcall
cmpsl
test
jbe
xchg
in
add
stos
stos
mov
cmp
out
lret
pop
sbb
xor
loope
mov
pxor
pop
mov
in
lahf
cmp
mov
incb
cmp
pushf
jp
pop
add
mov
aad
push
xchg
into
jnp
fistps
fnstsw
push
mov
stos
repnz
push
cld
into
or
mov
mov
inc
push
xor
sub
add
aad
lret
push
xor
jnp
shrl
lods
lods
loope
pop
inc
dec
repz
inc
sub
jns
sbb
lds
lods
jae
cmpsb
aam
jno
popa
push
xor
mov
les
xchg
xchg
xchg
in
enter
js
lret
jne
xchg
cmp
cmp
sbb
test
mov
cli
jge
pop
mov
jnp
add
data16
mov
add
dec
dec
fisubs
add
dec
ja
rcrb
movsb
xor
jnp
cli
and
cwtl
mov
in
jg
push
fisttps
mov
cmp
cmp
push
or
xchg
rcrl
imul
dec
ljmp
jae
incl
stos
mov
and
out
hlt
adc
and
icebp
jg
addr16
jne
ds
mov
cmpsl
inc
fldl
adc
popa
adc
dec
xchg
into
pop
adc
push
jp
add
xchg
and
pop
cmp
fdivrs
xchg
cmp
mov
icebp
test
addr16
mov
xchg
xchg
ret
hlt
cmp
jbe
jg
lds
jns
leave
jmp
push
lods
sbb
xchg
gs
push
jns
gs
jns
mov
add
mov
mov
int
test
jb
add
jle
cmpsb
dec
outsl
sub
jnp
int3
inc
popl
jae
push
js
cs
test
lock
test
bound
cmpsb
jo
push
cs
enter
fcomps
xchg
loop
cmp
or
mov
int
mov
adc
imul
mov
push
sub
mov
xor
cwtl
push
aad
jnp
xor
mov
pop
jae
nop
pop
dec
int
pop
mov
shr
and
inc
add
fldt
push
jbe
inc
insl
xchg
push
lods
xchg
negl
push
cmp
or
fsubrs
dec
loopne
icebp
rcrb
ret
adc
pushf
xor
or
in
aam
jmp
mov
cmpsl
push
call
sbb
sbb
push
add
add
mov
clc
mov
adc
aam
sub
mov
dec
add
pop
mov
push
inc
test
xlat
push
lret
sahf
xchg
insl
sub
or
lcall
sub
push
fadds
jb
mov
insl
mov
addb
shll
mov
sub
pop
pop
jge
sti
test
mov
dec
mov
div
mov
mov
outsl
lds
dec
push
mov
pusha
shrb
aaa
mov
push
push
pushf
mov
push
sbb
sbb
call
add
icebp
add
xchg
test
test
dec
dec
xor
addb
sarl
fnstenv
sbb
idivl
xchg
sbb
sahf
sarl
adc
push
push
out
fwait
jle
jb
js
dec
jno
dec
cli
cmp
jg
out
sub
jl
and
xchg
or
out
leave
inc
jl
push
xchg
mov
push
lds
adc
sub
add
jno
xor
repnz
lods
pop
inc
sbb
add
mov
add
fstps
xor
push
xchg
jno
imul
lret
or
imul
lcall
ret
out
dec
push
hlt
jno
sbb
xchg
iret
pusha
outsb
ficoms
dec
outsb
mov
fucomi
insl
jnp
movsb
mov
jns
push
push
jge
or
or
mov
stc
sub
jecxz
cmp
adc
dec
data16
in
lret
push
stos
out
dec
and
ficompl
lea
or
xor
pop
add
lea
inc
movsl
mov
mov
pop
mov
loopne
test
enterw
xor
xchg
je
popa
sbb
fprem1
pop
sbbl
push
sub
and
mov
shll
aaa
pop
shlb
test
mov
lret
test
pop
push
fldl
cld
dec
flds
xchg
ja
adc
sub
fwait
mov
insl
cmp
push
in
jbe
dec
shll
dec
shl
daa
mov
fimuls
sbb
int
addr16
dec
mov
into
fwait
inc
popf
xor
and
xchg
sub
push
mov
bound
sub
fldcw
fwait
je
gs
mov
fisttps
jns
popf
jbe
outsl
pop
mov
cmp
and
call
aas
inc
mov
in
adc
sbb
adc
jmp
dec
int
or
push
js
or
test
xor
aaa
sub
int3
and
dec
inc
mov
mov
adc
movsb
arpl
sub
rcrb
ror
outsb
jo
sub
aad
popa
and
sbb
xor
jmp
push
inc
jmp
aas
mov
inc
dec
and
sbb
lcall
or
mov
pop
outsb
fucomi
sti
sub
cmp
pop
mov
mov
out
cmp
and
adc
enter
mov
mov
push
mov
sub
aad
rep
jl
pop
cmp
lds
ret
mov
stc
ret
outsb
pusha
jp
adc
sub
fcmovnb
arpl
jae
mov
mov
add
dec
adc
mov
push
sbb
adc
loope
roll
aad
arpl
fisttpl
in
lods
enter
or
mov
ljmp
sub
xchg
mov
sahf
and
jbe
sub
adc
push
mov
or
jae
add
sub
lock
xlat
aam
stos
cmpsb
dec
xor
xchg
popa
adc
aad
mov
loopne
adc
pop
mov
fadds
xor
mov
push
loope
dec
sar
cmp
sbb
or
pop
es
jge
fcoms
loope
xchg
jno
fsub
scas
xor
adc
or
loope
dec
push
sbb
pop
and
jmp
mov
jecxz
es
sahf
subb
mov
inc
adcb
movsb
add
jae
cwtl
add
lret
addr16
ret
xchg
in
and
mov
push
insb
jae
add
mov
flds
aam
clc
lahf
inc
jge
or
pop
stos
push
je
xor
mov
add
cmp
fincstp
clc
stos
xor
mov
pop
xchg
mov
adc
mov
mov
adc
rcr
int
cmpsl
test
pop
jg
xor
or
sub
nop
movsb
mov
push
mov
sarb
cmc
push
jb
imul
call
sub
mov
sub
push
sbb
imul
pop
cmpsl
and
mov
mov
leave
adc
xchg
adc
sahf
fstpt
outsb
xor
cld
inc
xor
pushf
jb
clc
add
shl
mov
and
jl
xor
xchg
stc
inc
into
pop
pop
into
cmp
in
xchg
adc
in
xchg
xor
jnp
in
xchg
cs
xor
xor
frstpm(287
arpl
insl
aaa
or
pop
fwait
js
xor
add
gs
push
lock
xlat
xchg
in
sub
addr16
mov
and
adc
lods
int
ret
xchg
mov
pop
inc
push
in
cli
out
std
or
scas
cmp
aas
fistl
int3
cmpsb
stos
loope
fld
mov
fdivrs
in
out
xchg
cmp
dec
dec
shlb
shr
cmp
fwait
and
xor
scas
mov
xchg
cmp
jmp
pop
in
fidivrl
mov
adc
lock
les
mov
inc
and
push
mov
mov
adc
cmpl
xchg
push
cmp
stos
in
clc
dec
mov
sbb
shr
scas
mov
push
ljmp
int
fidivrs
jbe
or
add
xor
jae
aad
mov
sub
xorl
fs
scas
push
push
mov
rcrl
mov
jl
mov
out
loop
cmp
clc
jmp
ret
mov
loopne
pop
cwtl
pop
push
out
mov
out
jns
cmp
jle
jmp
xor
cmp
fistpll
ss
fcoml
ss
jb
xchg
iret
mov
sbb
cmp
jl
scas
mov
mov
sub
mov
inc
pop
mov
lea
xchg
cmpl
mov
nop
shrb
fadds
sub
bound
cwtl
addb
mov
sub
mov
inc
movsb
popa
fcompl
sub
push
fsubs
mov
sbb
jecxz
pop
xchg
mov
jl
push
ficomps
adc
shrl
aas
sahf
sub
ret
pop
xorb
mov
sub
xchg
xor
xor
stc
mov
and
int
fwait
inc
jg
sbb
mov
mov
jecxz
in
add
inc
andb
pusha
dec
or
dec
cmpl
ret
sbb
mov
out
mov
lods
xchg
pusha
add
sub
xor
adc
inc
pcmpeqw
sub
cmp
xchg
cmp
fdivrs
inc
inc
push
adc
inc
lcall
jne,pn
mov
push
cld
pusha
sbb
inc
jbe
sub
outsb
push
or
or
and
xchg
pusha
loope
push
mov
rolb
add
test
and
xchg
jmp
iret
stc
xor
mov
dec
jecxz
dec
lret
xchg
es
sbb
gs
push
lock
rcl
jnp
addr16
test
icebp
pop
stos
movsl
xor
inc
cld
fadds
inc
clc
mov
xchg
xchg
inc
mov
daa
fs
out
aad
cmpsl
je
ret
push
mov
sub
push
xor
ds
jmp
mov
jmp
sbb
outsb
inc
sub
inc
mov
repz
push
dec
inc
rorl
push
es
sbb
sar
insb
imul
pop
pusha
inc
or
hlt
mov
stos
pop
xor
xchg
sub
pushf
arpl
data16
cltd
test
xchg
leave
leave
shlb
mov
loopne
jbe
xor
push
clc
testb
xlat
mov
leave
xchg
dec
sub
xchg
adc
aas
in
dec
mov
int3
addr16
mov
std
sub
shrd
jne
mov
clc
cltd
ss
in
sbb
cmp
aad
sti
or
aas
icebp
cmpsl
dec
roll
mov
sbb
int
cmp
and
aas
add
add
jb
mov
mov
movsb
sahf
sub
mov
gs
sbb
pop
jecxz
shll
pop
cmp
xchg
sub
lea
cli
insb
xor
int
enter
test
mov
aam
mov
fs
jmp
inc
imul
or
icebp
pop
test
aas
push
test
fstpl
ja
or
cli
inc
mov
push
mov
sub
mul
inc
xchg
leave
xchg
jo
jl
push
xchg
test
test
and
aad
or
sub
push
cmp
es
sbb
adc
int
adc
mov
fimuls
nop
push
and
imul
mov
mov
pop
ret
push
lahf
xor
jae
sbb
fisubrs
mov
inc
das
sahf
mov
push
push
andb
nop
push
int
out
push
repnz
mov
fs
mov
jnp
mov
push
push
cmpl
leave
sub
ds
push
add
fcos
clc
jmp
xorb
pop
dec
and
loopne
xchg
loope
gs
sub
js
imul
imul
sbb
mov
add
inc
dec
mov
mov
ss
jl
and
pop
mov
gs
popa
push
fcmovnu
shrl
test
andl
dec
sar
loop
jae
sti
and
jo
jb
xor
cmc
lcall
divb
dec
jae
sbb
and
fnstenv
and
loop
xor
sub
add
in
dec
sti
or
iret
jno
scas
sbbb
add
out
ficoms
das
je
dec
ja
xlat
inc
mov
popa
fwait
pop
push
iret
and
andb
mov
stc
mov
sbb
jne,pn
cmp
into
pop
xor
push
xlat
cmpsb
dec
dec
aaa
aaa
mov
or
xchg
adc
mov
pop
add
dec
jl
xchg
add
aas
fistl
nop
in
fnstenv
push
adc
mov
jno
and
out
inc
aas
push
adc
fistpll
xchg
mov
sbb
sahf
js
test
push
out
lret
xchg
pop
push
jne
jo
cld
jae
dec
aas
or
push
push
sub
jae
mov
jg
in
jae
cs
aas
jmp
sbb
call
xchg
lcall
jecxz
mov
subb
jns
inc
ss
loop
and
mov
pop
out
flds
or
fld
push
leave
dec
xchg
jns
sbbl
addr16
mov
adc
sbb
movsl
mov
add
shl
lea
cmp
jae
inc
ljmp
mov
push
sahf
div
add
xor
xchg
pop
or
add
mull
bound
mov
je
lock
adcb
mov
mov
cmp
mov
aas
dec
inc
inc
lret
add
enter
test
out
push
add
lahf
sbb
popf
push
or
ficomps
sub
or
sub
mov
xor
sub
sbbb
push
movsl
pop
mov
subl
ret
testl
lahf
xor
enter
hlt
adc
pusha
mov
cmp
mov
cmpsl
pop
cmp
aaa
xchg
pop
imul
cwtl
push
stos
inc
leave
and
call
push
sub
movsb
add
and
and
pop
xor
pop
xchg
addr16
repz
dec
xlat
leave
lds
aaa
cmp
popf
inc
fcoms
cmp
jns
sub
dec
mov
fwait
or
sub
jbe
lds
pop
movsl
mov
mov
sub
sub
push
shlb
pop
sbb
lds
decl
mov
sbb
or
out
imul
jnp
sub
sbb
or
or
xchg
jmp
rcll
xor
dec
stos
es
call
dec
test
cmp
pop
mov
pop
push
mov
push
jo
daa
shrl
inc
dec
push
xchg
or
dec
rcll
rcrl
fldt
sub
arpl
arpl
add
mov
adc
je
mov
cmpsb
mov
jecxz
pop
or
mov
fistps
fnstenv
push
adc
stos
shll
ret
sbb
pop
inc
sbb
jno
adc
sti
adc
test
test
mov
imul
in
ss
pushf
pop
into
push
pop
test
bound
je
cmp
jno
aas
fists
cmpl
jge
jbe
cmp
cmpsl
cs
scas
jle
loop
ds
loop
sub
xor
mov
loope
scas
inc
adc
xchg
mov
inc
sub
cmp
imul
ljmp
push
ret
mov
loopne
push
movsb
cld
dec
inc
sub
addl
aas
cwtl
xor
mov
adc
cmpsl
roll
std
dec
mov
fnstenv
mov
repz
sub
rcrb
pop
cmpsl
xor
das
mov
stc
out
inc
in
fs
pop
ret
jne
dec
int
sub
inc
sub
fwait
xlat
sbb
inc
mov
inc
or
push
je
ret
dec
out
cmc
jae
out
pop
loop
xor
cmc
sub
movl
ljmp
outsl
sti
xchg
in
sbb
or
jp
aas
cmpsl
jmp
bnd
push
jl
hlt
add
pop
add
clc
sbb
push
mov
push
gs
int3
in
ret
clc
scas
aaa
xchg
mov
cwtl
cmp
int3
es
rcrb
lea
inc
movsb
push
in
xchg
jno
jge
or
cmc
in
adc
xchg
leave
aas
jecxz
jo
ret
lahf
aaa
aas
pop
hlt
dec
mov
stos
rcrb
adc
movsl
mov
inc
fldt
mov
sti
decl
aam
fnstcw
add
ficoms
mov
addr16
pop
cmpsb
fs
sub
sbb
mov
sub
rcl
test
xor
repz
repnz
sbb
xchg
lds
sarl
leave
mov
sub
test
xchg
insb
leave
movsl
and
add
inc
mov
push
std
xorb
and
push
and
lods
dec
andl
inc
mov
bound
insl
out
xor
pop
dec
addr16
xchg
xor
and
push
lahf
popa
fcmove
mov
and
scas
leave
sub
jns
jmp
add
mov
movsb
jge
ja
add
nop
jb
mov
mov
jl
xlat
movsl
fs
jnp
jecxz
clc
cwtl
add
jg
xchg
cmp
sti
addr16
outsl
push
cmpsb
aaa
xchg
cmp
outsb
push
cmc
mov
inc
cmp
lahf
cmp
sarl
lods
xor
xor
cld
cmpb
dec
test
sub
sti
inc
jae
push
test
sub
push
ja
pop
cmpsl
test
or
xor
add
mov
addr16
add
jmp
mov
push
pop
mul
jmp
push
inc
inc
cmp
popa
push
fadds
dec
popl
neg
pop
call
dec
leave
push
in
fisubrs
clc
dec
xor
xlat
xchg
bound
fimuls
push
push
or
sub
xchg
out
pop
cmp
mov
gs
jb
inc
jae
xchg
and
fldl
fidivrs
out
push
xchg
addr16
dec
filds
out
push
loope
jno
dec
out
mov
add
mov
inc
add
out
sub
ds
lret
fcmovnu
mov
cmp
cld
lret
pushf
sub
je
in
cmpsl
ds
lahf
and
xchg
pop
cmp
shl
xchg
jnp
add
inc
int3
es
cld
cld
lds
les
popf
insb
sbb
xor
inc
mov
enter
sub
fwait
and
js
sbbb
out
xchg
add
xlat
mov
ljmp
sub
xor
inc
pusha
int
push
das
cmc
push
add
out
push
es
rorb
and
push
andl
lods
loop
test
call
cs
outsb
filds
pop
push
or
xor
pmaddwd
js
pop
adc
leave
je
sbb
stc
pop
sbb
aaa
mov
jae
lock
imulb
pushf
repz
push
mull
hlt
or
pop
fbld
pusha
push
cmpsb
scas
ljmp
mov
sbb
faddl
cmc
out
mov
shll
push
cli
mov
inc
int3
shll
in
mov
adc
xchg
xor
aad
movsb
setns
ret
lods
cld
cmpsb
pop
rorb
stos
ds
jbe
or
mov
mov
sub
insb
lret
cmpsl
jmp
icebp
mov
pop
lds
aaa
jns
ja
imul
jmp
enter
rcll
inc
insb
add
scas
into
or
cs
nop
aas
pop
jnp
insl
or
cwtl
cmp
hlt
andb
sahf
dec
adc
std
into
mov
outsl
aas
adc
push
adc
sbb
mov
jge
call
pop
out
aam
in
in
inc
shl
cmp
xchg
call
jae
fistps
lock
mov
jp
and
mov
add
loopne
rcr
sub
jmp
loop
jmp
dec
cmp
rcll
dec
data16
aas
aaa
outsl
pop
iret
insb
ds
and
fmull
mov
sbb
testl
aaa
in
dec
jno
pushf
and
xchg
popf
jmp
int3
mov
xor
sub
xchg
aaa
gs
cmc
mov
insl
xor
push
test
sbb
inc
dec
push
test
ljmp
jnp
dec
xchg
mov
pusha
cmp
sti
cltd
fdivs
mov
sub
sahf
mov
xlat
add
je
add
out
arpl
mov
pushf
ss
sbb
jecxz
sbb
mov
rcrl
stos
js
inc
ljmp
inc
decl
repnz
pop
lahf
adc
shlb
adc
jb
pop
es
xchg
mov
test
fistpl
jecxz
loop
dec
or
xchg
cld
out
sbb
test
imul
lock
shll
push
arpl
adc
sub
push
in
inc
aas
mov
negb
adc
test
jl
pusha
sub
cltd
or
mov
gs
shlb
mov
enter
push
add
lock
lods
xchg
ret
lcall
cmp
xchg
imul
push
and
mov
test
es
imul
inc
push
pop
ret
stc
fists
out
out
aad
or
pop
xchg
outsl
stos
test
lcall
mov
add
add
cmp
xchg
leave
inc
jmp
and
pop
es
bound
pop
xchg
cltd
or
incb
xchg
ficompl
push
xchg
into
mov
jecxz
cmp
mov
into
push
pop
sub
xchg
ja
push
adc
xor
bound
fidivrs
and
xlat
lret
xchg
popa
mov
push
inc
pop
mov
and
aaa
lods
fneni(8087
jne
inc
add
sbb
pop
jp
mov
xor
jg
es
sub
in
popf
mov
roll
inc
pushf
push
sbb
sti
aam
mov
scas
addr16
and
lods
das
inc
jp
in
xor
outsl
cmp
sbb
sub
addr16
sub
cmp
inc
incb
pop
lret
cmp
mov
push
or
mov
out
mov
repnz
insl
sbbb
add
dec
icebp
and
or
add
jns
aam
inc
cmpsl
adc
sarb
push
jb
scas
push
sarl
xor
or
gs
mov
jmp
ljmp
fstpl
les
ja
imul
ss
mov
xor
clc
mov
adc
mov
icebp
pop
inc
xchg
scas
xor
add
jg
pop
pop
sbb
and
pop
or
into
in
lds
cmc
adc
mov
cltd
movsb
mov
jno
call
lret
or
jle
into
jl
sbb
mov
xchg
adc
mov
mov
shrb
push
sar
mov
hlt
sbb
xchg
iret
dec
mov
ret
inc
mov
xchg
inc
in
leave
mov
jl
xor
cmc
cmp
lcall
in
mov
dec
jae
icebp
insl
ljmp
add
je
jno
mov
add
add
scas
sub
mov
adcb
arpl
jle
mov
inc
push
push
arpl
popf
mov
cwtl
mov
and
divb
xor
cmpb
sbb
insb
mov
aam
push
mov
out
adcl
sbb
ss
add
pop
flds
sub
in
sub
jmp
out
sahf
std
adc
or
sbb
rorl
iret
add
iret
loope
add
sbb
push
rorb
jmp
scas
cld
dec
and
les
mov
adc
mov
out
pop
lock
div
int3
add
xchg
fdivrs
push
scas
sbb
test
lea
rcrb
cltd
stos
and
sub
and
cwtl
js
adc
lods
ret
jg
push
jg
movsl
mov
bound
decb
pop
and
mov
sbb
mov
and
repz
mov
xchg
fstpl
mov
insl
jb
inc
cmpsb
fwait
cs
pop
and
adc
filds
fwait
je
or
jne
add
jge
jge
sbb
adc
add
loop
push
inc
jp
scas
xchg
cmp
fnstcw
pop
lahf
imul
sbb
aaa
and
mov
jo
add
sub
mov
push
inc
enter
mov
call
fs
ret
push
xor
ja
mov
movsb
add
cli
ret
pop
cmc
js
lcall
sbb
pop
adc
mov
xor
jge
lods
imul
add
pop
pop
icebp
shlb
adc
fs
adc
inc
das
inc
add
mov
daa
gs
leave
and
into
mov
jg
loopne
mov
cli
push
ret
out
xchg
js
lcall
or
and
test
loope
loop
lret
jg
fidivrs
xor
gs
lea
sub
xor
pushf
loope
push
mov
shrd
add
inc
adc
mov
aaa
arpl
aad
xchg
int3
test
mov
or
sub
mov
cltd
insl
add
out
in
dec
add
mov
ret
inc
shll
jl
jge
push
xchg
repz
xchg
andl
inc
enter
fwait
loop
mov
lods
fadd
sub
aas
pop
jp
lcall
lds
movsb
stos
lock
sub
test
cmp
or
icebp
sub
cmpsl
sub
cmp
rclb
adcb
in
call
js
loope
mov
adc
out
insb
lret
mov
xchg
inc
and
in
pop
mov
lret
shrb
orl
sbb
push
data16
and
aas
popa
sahf
insb
fwait
or
inc
push
pop
fidivl
mov
repnz
or
rcrl
in
pop
dec
inc
inc
cltd
dec
cld
sbb
add
lret
mov
adc
pop
mov
dec
adc
test
ds
jo
jle
adc
or
fimull
xchg
fcoml
cmp
es
call
pop
dec
push
jnp
mov
pop
in
lods
xchg
andl
addr16
pusha
data16
shrl
mov
or
rcrl
mov
int
jp
cmp
or
push
or
dec
dec
cmp
dec
ss
mov
inc
scas
into
inc
jb
fsubrp
mov
insb
add
sub
sbb
push
xorb
sub
pusha
dec
and
js
enter
xor
mov
jp
and
pop
jns
mov
scas
mov
mov
pop
into
imul
aas
mov
push
jmp
fsubl
adc
mov
or
int
fisubs
jl
sbb
pop
int3
xchg
push
fwait
sub
fstpl
mov
pop
sahf
cmp
test
shrl
or
mov
inc
test
dec
repz
mov
fucom
int
xchg
jmp
jl
sub
fisttps
imul
ret
and
mov
push
cwtl
push
es
cmp
adc
xor
and
sub
movb
xor
sub
xchg
jp
push
inc
cmc
arpl
lcall
cltd
shrl
and
repnz
sub
popa
mov
ret
mov
and
sub
pop
adc
sub
push
test
sub
je
test
call
lods
cld
mov
push
jno
fsts
popf
xchg
sub
fldl
in
outsb
insb
push
ds
push
into
es
pusha
add
xchg
stc
add
mov
add
fdiv
xlat
stos
add
fldcw
stc
dec
xor
mov
fists
scas
push
inc
xchg
adc
das
sub
and
out
lods
add
push
insb
out
inc
push
aaa
cli
iret
dec
lods
popf
sbb
add
pop
loopne
in
or
jp
addr16
es
xchg
adc
loopne
out
shr
mov
int
or
inc
cmp
call
repnz
frstor
push
test
dec
or
cli
jl
ficomps
fcomip
clc
test
popa
popf
fisttpl
pop
xchg
sub
add
sbb
sahf
daa
adc
ds
inc
adc
and
jne
iret
fcomps
mov
mov
jne
push
add
xor
cmpsb
inc
rorl
daa
inc
inc
test
repnz
jge
push
mov
or
cltd
cmp
inc
pop
lds
sub
fldenv
dec
sbb
pop
ret
adc
jnp
inc
add
and
xchg
sub
out
andb
push
push
inc
cli
xlat
jo
inc
jae
into
test
ficomps
out
icebp
add
cmp
in
mov
jl
cmpsl
cltd
cmp
aas
mov
add
push
or
dec
sbb
mov
call
gs
int3
xchg
hlt
repz
jns
daa
cmp
push
cmp
aad
jp
mov
sbb
or
fwait
ljmp
pop
inc
and
clc
leave
das
les
inc
lahf
add
xchg
dec
shrb
jl
lcall
and
fldl
dec
push
notl
jecxz
rcrl
lret
cmp
orb
lds
mov
and
stos
cmp
dec
out
cmp
sub
mov
nop
dec
outsb
xchg
sbb
add
push
sbb
pop
sahf
inc
pop
cli
sbb
mov
and
dec
add
cmc
dec
jo
sahf
pinsrw
jns
xor
xor
pop
cli
sbb
popa
inc
in
inc
pop
adc
push
imul
xchg
or
lret
xchg
pop
int3
call
fldenv
dec
cmp
out
in
sub
jns
cmp
cld
mov
sbb
movsl
xchg
push
or
jle
jmp
test
lds
aad
mov
stos
add
jge
xchg
sahf
xchg
cmp
leave
popf
in
hlt
aad
jb
clc
pop
cmp
push
mov
leave
aad
inc
mov
cmp
push
sahf
enter
out
push
xor
push
ror
push
dec
or
jns
cmpb
add
stos
repz
and
ret
mov
jge
cli
sbb
mov
in
clc
aaa
les
xchg
fldcw
mov
mov
pop
nop
push
pop
and
sbb
cmp
rorb
dec
iret
aad
pop
lcall
cmpsl
jns
outsb
pop
or
sahf
mov
lret
push
xchg
loopne
aad
xor
xchg
adc
cli
ss
ss
add
dec
adc
cmpsl
mov
bound
rcrl
push
xchg
pop
xor
in
loope
adc
lock
movsb
cmpsw
repz
in
inc
or
adc
mov
xchg
fwait
adc
inc
shll
xchg
jge
loope
jb
mov
xchg
xor
sbb
lcall
dec
mov
icebp
jns
or
testb
jge
xchg
test
lock
notl
push
mov
jo
mov
inc
aaa
or
aad
mov
pop
das
sahf
or
mov
or
xor
mov
pop
and
push
es
jge
and
filds
xor
test
dec
out
scas
xor
jmp
pop
sti
hlt
cmc
cmp
and
insb
sti
outsb
mov
mov
jae
jne
sbb
decl
out
aas
out
sub
or
jbe
xor
sub
sub
lret
mov
ja
inc
mov
cmp
xchg
sbb
lock
test
loop
insb
pop
pushf
outsl
jne
and
aad
icebp
popa
cmovo
sti
cwtl
out
imul
mov
mov
add
mov
es
mov
xchg
dec
and
mov
cmpsb
test
xlat
push
insb
lret
and
jb
mov
mov
pop
fldenv
out
subl
lahf
fisttpll
and
les
xchg
mov
pop
hlt
int
les
into
popf
test
jns
out
aaa
mov
cmp
push
xor
loopne
or
in
inc
movsl
je
dec
das
addb
add
cli
das
mov
lcall
sub
mov
ljmp
mov
in
inc
js
out
in
mov
cmp
aaa
adc
lcall
bound
aas
insl
ja
hlt
mov
lods
xlat
inc
dec
cmp
adc
dec
js
inc
or
adc
fcoms
or
or
pop
sbb
and
out
das
push
mov
xchg
jmp
mov
mov
xchg
mov
push
fwait
adc
mov
mov
mov
mov
inc
pop
mov
cmp
loope
cmpsb
add
inc
rclb
pop
int
sbb
mov
xor
mov
sarb
adcb
sbb
in
cmp
dec
mull
xchg
inc
jmp
sbb
pushf
mov
xchg
add
mov
xor
push
sub
loope
cs
pop
lret
xchg
adc
aas
jmp
insb
daa
and
imul
int
lea
mov
push
pop
inc
jae
inc
fcom
xchg
sub
and
clc
xor
ds
cmc
data16
test
je
or
inc
rcl
popf
pop
loopne
mov
xor
jl
aam
mov
lds
push
inc
mov
add
pop
lds
jg
lods
pushf
push
add
fcmovnb
adc
enter
pop
dec
xchg
jo
adc
xchg
sub
insl
dec
pop
pop
aaa
sbb
pop
sub
je
fildl
test
dec
cmpsb
dec
xchg
out
in
push
data16
movsl
arpl
inc
jb
iret
add
daa
xchg
mov
mov
push
and
xlat
push
pop
sbb
lea
xchg
addr16
ret
mov
add
xchg
pop
rcr
add
inc
xor
xchg
mov
in
int
arpl
mov
cld
dec
mov
lcall
leave
out
int3
int
cmpb
test
push
aam
in
cltd
jnp
pslld
mov
movsl
mov
inc
lock
xor
pop
sarl
mov
jo
push
xor
test
sub
lods
jbe
imul
cmp
mov
sbb
stos
addr16
mov
test
cmp
pop
cs
jns
out
push
xor
sbb
xor
cmp
pop
lret
mov
add
mov
clc
fdivrl
xor
xor
cwtl
test
fnsave
cmp
sahf
dec
jmp
mov
dec
mov
xor
xchg
das
cwtl
aam
jg
xor
arpl
sbb
sub
int
xor
xchg
push
dec
sbb
mov
jmp
or
or
pop
sbb
mov
and
fmull
mov
lcall
xor
ds
rcrl
iret
movsb
dec
push
cs
int3
cmp
and
fisubrl
movsl
adc
xor
and
ss
stc
popa
xchg
dec
mov
out
mov
cmpsl
psllq
nop
xchg
and
ljmp
icebp
out
popl
jp
fwait
pop
cmp
out
loop
in
es
stos
cltd
xor
cwtl
pusha
cld
fimull
repz
icebp
jnp
fmul
xor
mov
inc
mov
sub
dec
pusha
pop
jnp
mov
test
scas
push
cli
mov
add
loop
add
dec
xor
jnp
pop
pop
insl
icebp
lea
xchg
pop
movl
cmp
add
test
lret
push
pusha
xor
sbb
mov
add
mov
and
cmp
xor
aaa
pop
inc
scas
jp
cmp
inc
jae
push
sahf
cmp
movsl
mov
negb
lret
xchg
push
jg
in
push
push
dec
xchg
lock
xlat
sbb
rol
mov
add
cli
sbb
insb
mov
sbb
addr16
outsb
sbb
in
cmc
inc
push
sahf
pop
lods
pusha
push
dec
add
enter
mov
and
jns
ljmp
push
lods
fmull
imul
es
jmp
xchg
lret
jne
aas
xor
push
mov
hlt
cmp
sub
fisubl
cmp
xchg
adc
add
leave
rcrl
adc
mov
fcmovbe
mov
cmpsl
xchg
push
enter
mov
sahf
push
mov
test
int
mov
jnp
test
in
hlt
cmp
in
mov
inc
push
add
jo
pushf
gs
es
dec
mov
fsts
xchg
ret
cmp
sbb
insb
leave
ret
inc
sub
fsubrl
and
mov
and
das
rclb
push
and
jns
dec
cmc
push
dec
jae
popf
arpl
int
ret
push
dec
and
adc
test
dec
pop
cld
pop
jp
sub
arpl
add
mov
inc
shl
jp
mov
push
stos
lods
inc
sbb
mov
loope
inc
lahf
insb
stos
adc
out
mov
out
arpl
addb
ja
inc
loope
aam
lock
pop
pop
add
adc
push
fdivr
mov
or
cli
jg,pt
pop
cmp
inc
loop
js
jnp
inc
lods
enter
int3
pop
add
insb
jle
divl
frstor
in
mov
mov
sbb
or
stc
mov
lret
push
pop
inc
mov
in
lret
loopne
push
pop
icebp
rorb
loope
cmpsl
shr
inc
in
stc
cli
loop
fwait
shlb
movsl
dec
and
xchg
mov
cli
in
in
mov
sub
jg
dec
lea
out
les
in
cmp
pop
scas
and
inc
insl
sub
push
jmp
mov
mov
js
das
stc
mov
jl
or
daa
dec
fs
push
insb
jmp
xchg
xor
daa
push
repnz
push
mov
insb
sub
pop
mov
scas
les
aam
or
ret
dec
sbb
mov
stos
push
xor
sbb
out
int3
mov
mov
add
ja
lods
mov
testl
pop
mov
rcl
ret
jl
repnz
lret
dec
cmp
inc
adc
xor
arpl
xor
mov
mov
loope
mov
xor
adc
movsb
aad
or
lret
dec
dec
dec
pop
lret
and
aaa
dec
out
stc
add
cwtl
or
fdivs
mov
sti
xchg
rcrb
cmp
and
repnz
rcrl
push
xor
cmp
nop
xchg
andb
imul
sub
inc
xor
sbb
test
imul
jae
and
mov
dec
rorl
cmovne
or
xchg
mov
enter
fidivrl
mov
jg
mov
push
les
dec
loop
inc
pushf
pushf
sbb
cmpsb
or
jp
mov
xor
out
mov
mov
daa
and
push
mov
fwait
jl
sub
lahf
fcomip
inc
in
fcom
lds
jb
fmul
and
stos
out
bound
sub
cmp
out
xchg
and
xor
fistl
mov
frstor
std
mov
push
push
ret
push
mov
inc
mov
add
mov
pop
sbb
sbb
xor
pop
mov
jo
imul
inc
cmpsb
test
clc
dec
dec
ret
shrb
sub
mov
fnstsw
sub
xor
dec
pop
sub
outsl
js
push
sbb
jge
sub
mov
and
ljmp
xor
fwait
or
pop
jae
int
push
js
cli
jmp
das
rcrb
fbld
movsb
add
fwait
jae
lret
inc
sub
and
pusha
add
lods
mov
cli
ja
jge
push
int
sti
xchg
imul
xlat
dec
sbb
lods
inc
es
sub
xchg
ret
push
call
ja
in
ss
inc
jno
inc
or
mov
fnstcw
cmp
sub
sbb
mov
xchg
in
ja
dec
add
lret
adc
cmpsl
sbb
cmpsl
ljmp
aad
enter
and
fwait
add
mov
insb
lahf
cmp
mov
pop
mov
data16
jl
mov
cmpsl
cs
fwait
mov
sub
xchg
ret
mov
fistpll
lret
movsl
in
iret
dec
xchg
insb
or
cmc
fildll
out
push
insl
aad
shlb
sub
pop
push
pusha
xorl
sbb
in
push
mov
ds
cmpsb
enter
cmp
shlb
fs
push
in
sti
jmp
mov
push
stc
inc
mov
xlat
cmp
mov
xchg
test
cmpsl
lock
cltd
stos
fcompl
cmpsl
shll
push
outsl
in
sbb
lock
sbb
into
lds
incb
insb
cld
je
stos
out
jo
jmp
mov
movsb
and
mov
outsb
pop
ret
inc
cmpsb
pop
xchg
in
scas
lods
pop
out
dec
xchg
mov
cmp
or
sub
or
ret
or
dec
xchg
test
sbb
xchg
outsl
sbb
ret
je
rcrl
enter
es
fistps
add
rcll
sub
dec
mov
clc
xchg
mov
lret
mov
xchg
icebp
out
jmp
dec
xchg
inc
stos
call
sbb
hlt
enter
add
stos
lods
pop
aas
pop
mov
jno
popa
testl
cmp
cld
call
popa
xchg
mov
scas
xchg
adcl
cmp
iret
imul
dec
dec
cmp
mov
mov
xchg
and
int
xchg
sub
xchg
je
cltd
xchg
pop
add
sbb
cmp
ja
lods
out
adc
mov
sub
insl
jge
pusha
popa
pop
or
mov
inc
push
bound
fwait
xor
or
mov
mov
adcb
mov
int3
jp
test
fisubrl
pop
ja
inc
addr16
and
add
cltd
push
or
mov
in
mov
mov
and
sbb
push
clc
jp
or
rorb
mov
jno
mov
dec
sub
inc
daa
or
mov
or
loope
mov
fwait
repnz
mov
pusha
jg
fildll
int
adc
fst
not
jg
dec
mov
xlat
test
ja
pushf
dec
jle
adc
js
or
jmp
call
inc
push
ret
mov
lea
pop
imul
push
mov
nop
xchg
push
inc
sbb
push
stos
arpl
pop
test
jne
icebp
lret
xchg
mov
movsb
cwtl
sbb
xlat
adc
lods
or
and
out
xor
test
sahf
lods
pop
pop
mov
xchg
dec
nop
addr16
mov
lods
shrl
in
mov
mov
sbbb
inc
pop
iret
lcall
jecxz
imul
xlat
pop
xchg
jo
nop
and
pop
jl
test
clc
mov
icebp
fildl
lock
adc
js
out
and
mov
sub
push
ljmp
ret
sub
or
and
mov
cmc
sbb
or
xchg
je
cmp
mov
cwtl
mov
pop
lahf
into
test
add
mov
push
stos
movups
das
jns
mov
dec
imul
sahf
rcrb
push
dec
inc
mov
enter
sub
sub
xor
nop
dec
jp
pop
push
pop
mov
push
test
push
mov
jmp
out
push
dec
daa
push
mov
inc
scas
loopne
stos
inc
out
or
or
jp
mov
jbe
lret
lds
repnz
adc
in
mov
jno
adc
inc
es
add
pop
negl
cmp
lock
popa
sbb
jp
cwtl
or
mov
or
addr16
xor
mov
fwait
lcall
scas
daa
and
xor
adc
popf
mov
or
mov
fistps
add
or
in
mov
movsb
jbe
mov
lea
push
call
jae
ja
adc
mov
add
xchg
insl
cmc
cmpsl
insb
lret
inc
mov
test
ret
mov
in
dec
add
pop
add
test
pshufw
mov
jp
hlt
jbe
mov
xchg
bound
lahf
into
mov
cmp
add
daa
ret
cmpl
lahf
clc
test
or
cltd
jo
clc
dec
cs
test
push
lea
add
push
push
jae
loope
xor
int3
jp
jg
inc
scas
in
pushf
test
xlat
mov
and
cmc
mov
enter
ret
and
aas
loope
stos
cmp
in
hlt
jne
popa
jne
mov
outsb
roll
scas
xchg
js
cwtl
fildl
clc
jle
and
push
cmpsl
dec
pop
out
xlat
mov
test
fwait
dec
xchg
pop
xlat
aaa
add
sti
fucompp
lret
into
add
aad
cmpsl
cmp
adc
adc
cmpsl
sbb
fcmovnb
or
orl
xor
setl
push
sti
sahf
mov
les
sahf
cli
xor
shll
movsb
inc
pop
mov
cs
popf
imul
fwait
mov
lods
gs
sub
and
xchg
fistpl
loope
shl
sbb
cmp
stos
mov
test
lcall
sarb
and
xor
test
mov
cmp
inc
cmp
xchg
xor
mov
cmp
pop
nop
add
xchg
inc
sbb
mov
sbb
or
adc
push
cld
repz
movsb
loope
push
pusha
aas
int
add
std
pmuludq
push
test
sub
mov
and
xor
and
or
mov
inc
je
mov
or
lret
lods
xchg
or
sahf
inc
push
push
jne
sub
sbb
xor
enter
inc
rorl
jno
in
mov
es
dec
movsb
sbb
jnp
sbb
mov
sbb
fincstp
inc
xorl
inc
inc
mov
mov
mov
jl
dec
mov
add
lods
xor
xor
aas
jne
dec
outsb
imul
sbb
lea
inc
adc
or
jae
stos
xchg
and
dec
bound
sbb
scas
loop
add
out
lret
mov
jmp
jl
push
sbb
sub
push
jmp
push
xchg
xchg
cmp
lea
jbe
out
mov
jp
sar
iret
outsb
sar
mov
mov
push
push
ss
andb
out
mov
and
lret
add
js
inc
xor
xor
jle
push
dec
mov
sub
xchg
and
mov
mov
sahf
movsl
imul
xchg
inc
push
add
push
in
out
arpl
add
mov
inc
push
and
imul
xchg
pushf
push
js
xchg
pop
xchg
push
sub
mov
mov
sahf
add
mov
ds
mov
in
inc
jl
fcmovu
cwtl
mov
insl
scas
cld
mov
fxtract
test
add
data16
scas
lock
dec
ljmp
cmp
pop
test
lret
xchg
into
repz
into
pop
and
test
xchg
mov
mov
xchg
ret
mov
js
mov
imul
aam
loop
frstor
mov
mov
mov
jg
mov
jno
cmc
aad
sub
pop
std
xlat
popa
rcr
das
arpl
mov
das
test
ja
cmpsb
int3
adc
in
mov
cmpsb
imul
fldcw
adc
rcrl
popw
pop
imul
movsl
jl
out
push
stc
out
xchg
adcb
adc
mov
xor
jge
push
xor
sbb
enter
andl
shll
push
push
insl
jnp
fwait
sbb
dec
in
insb
pop
pusha
pusha
adc
insl
lahf
movsl
icebp
loopne
cmpsl
cltd
loope
push
jge
enter
and
inc
iret
cmp
mov
es
add
mov
cltd
dec
leave
int
xor
add
pop
push
jns
or
and
inc
inc
repnz
insb
fcmove
pop
insl
fistpll
shll
and
mov
sahf
dec
mov
dec
add
jp
mov
orb
jns
xchg
ficoml
sub
mov
aam
bound
jbe
sub
mov
push
mov
xor
sbb
stos
stos
jns
jg
jb
inc
adc
je
xor
sub
mov
imul
jle
mov
xchg
outsb
ja
mov
mov
pop
lret
out
sbb
test
sub
push
mov
pop
mov
out
mov
pop
dec
insl
scas
add
jmp
xchg
imul
je
test
push
dec
cmp
out
mov
shlb
fnstcw
push
xor
movsb
in
sub
aam
push
adc
push
pop
imul
pop
imul
inc
gs
pusha
cmpl
enter
movsl
stc
lods
jbe
arpl
adc
scas
sahf
jo
repz
arpl
dec
sub
xor
or
mov
lods
jg
inc
hlt
insl
into
xlat
mov
xor
bound
movsl
push
xor
jle
sahf
or
sarb
sub
test
jb
cmp
loope
inc
cltd
hlt
xchg
or
mov
or
inc
addr16
push
cmp
mov
hlt
add
shr
xor
cli
scas
gs
repz
int
sbb
lods
enter
xor
pop
inc
test
jle
data16
sar
popf
push
sub
js
pop
das
cmp
sub
cwtl
das
dec
movsl
repnz
xor
pop
pop
divb
aad
cltd
add
adc
pop
movntq
out
popa
dec
ret
loope
jp
loopne
push
pop
xlat
jp
clc
pop
jns
sbb
imul
fldenv
fisttpl
repnz
fiadds
push
cltd
out
mov
jg
popa
xchg
imul
and
into
imul
and
in
dec
int3
lcall
aad
or
dec
sub
mov
mov
leave
jbe
aaa
ret
lock
jno
std
imulb
or
in
sbb
and
imul
mulb
xor
mov
inc
xor
inc
add
mov
test
cmp
sbb
jp
arpl
jno
and
nop
enter
and
ret
popf
int3
push
mov
jbe
repz
movsb
dec
push
dec
dec
mov
arpl
loopne
into
mov
mov
cmp
out
push
push
popf
andl
cmp
add
nop
ret
loop
push
popa
xor
scas
arpl
mov
xchg
mov
in
mov
js
xchg
hlt
mov
adc
sbb
dec
das
or
mov
fdivl
jp
push
mov
xorb
cwtl
jbe
aad
cmp
sbb
test
pusha
out
mov
inc
cmp
mov
or
in
xor
test
cli
ja
mov
push
push
xor
in
outsl
in
sub
mov
mov
vunpckhps
orl
sti
aam
rcrb
pop
or
jo
mov
inc
or
out
fildll
adc
inc
push
cmp
mov
aad
jmp
cld
push
jge
inc
sub
mov
cld
push
cld
mov
xchg
and
inc
call
adc
out
out
aam
sahf
clc
adc
ret
shrb
mov
lcall
aaa
call
push
rcl
stos
pop
shl
xor
dec
addl
xlat
inc
push
xchg
fldl
movsl
or
push
addr16
lock
inc
movsl
iret
and
enter
and
in
ss
std
jmp
inc
xchg
andl
fdivrs
out
mov
push
js
dec
adc
jmp
popf
cmp
insb
pushf
inc
pop
in
inc
push
add
mov
and
pop
adc
je
sbb
mov
mov
adc
aam
mov
aas
inc
mov
fcoml
or
imul
dec
mov
arpl
out
inc
lahf
addr16
or
fwait
outsl
leave
cltd
or
push
and
adc
nop
dec
or
decl
sbb
jb
push
lret
mov
mov
sbb
jecxz
ss
push
shl
enter
into
popa
js
sarl
clc
data16
dec
push
xchg
push
inc
fucomp
pusha
fisubs
mov
aad
mov
dec
shlb
mov
outsl
scas
inc
mov
mov
mov
mov
mov
lahf
add
mov
push
ds
fucomi
mov
cmp
nop
add
xchg
dec
and
cwtl
ss
inc
jbe
inc
dec
fcomp
sub
into
ror
xor
sar
xchg
movsb
cmp
cmp
ret
data16
add
or
scas
lods
insb
xchg
hlt
jbe
mov
lahf
sbb
sbb
and
add
fisubl
dec
jae
std
mov
jl
stos
popa
les
out
inc
dec
test
jp
pop
jl
stos
aam
sub
and
sub
aaa
or
cmc
rcll
lahf
or
jbe
adc
mov
xchg
xor
mov
loopne
inc
xchg
jge
sub
sar
popf
adc
loopne
or
movsl
arpl
or
cmp
js
sub
mov
scas
push
repz
mov
data16
mov
movsb
in
mov
inc
gs
pop
jno
mov
loop
lret
cmp
adc
lcall
cmp
les
mov
gs
add
loope
in
xor
enter
andb
inc
repz
mov
aad
leave
push
icebp
sbb
dec
aas
mov
cmp
mov
pushfw
fdivs
adc
jns
inc
cld
out
xlat
in
xchg
push
sub
adc
mov
or
mov
and
xor
lret
and
mov
push
jb
sbb
sbb
or
mov
sub
mov
or
and
inc
push
stos
in
sub
ljmp
fsubrs
jmp
mov
gs
mov
push
aas
sub
xchg
divl
pop
sbb
loope
mov
dec
add
and
or
sbb
hlt
push
mov
sahf
cmovae
dec
inc
dec
ja
hlt
aaa
out
je
lret
xchg
je
out
aad
ja
rorl
add
iret
dec
jg
jno
xchg
cmp
lcall
dec
jmp
sub
daa
mov
jecxz
iret
push
dec
pop
cltd
insl
in
das
aaa
mov
es
push
sahf
inc
add
sti
imul
cmp
xlat
pop
inc
mov
ds
xor
sub
jnp
dec
mov
xchg
ret
cwtl
loop
pop
or
mov
and
push
test
sbb
xchg
loopne
out
mov
push
pusha
setno
in
aas
jge
xor
movsl
sub
gs
cmp
cmpsb
lea
shrb
bound
popa
jge
arpl
imul
in
aas
add
js
mov
repnz
lret
aam
pushf
mov
sbb
mov
inc
push
mov
hlt
dec
add
xchg
cmp
adc
enter
jns
addl
ljmp
pop
pop
ja
ficomps
jle
dec
push
out
faddl
pop
cwtl
in
xor
call
dec
mov
mov
aam
pop
push
mov
cmpsb
fsubrs
jne
cmc
jbe
sub
add
decb
gs
jg
dec
and
pusha
mov
cmp
repnz
jge
enter
mov
imulb
push
mov
dec
xchg
jno
mov
nop
jno
sbb
mov
lret
inc
outsl
push
sub
enter
outsb
testb
test
mov
fwait
pusha
and
cmp
pop
mov
and
sub
and
pop
pop
jo
out
sahf
jl
add
repz
cmp
xor
mov
fstl
push
add
int
iret
fcomps
push
jmp
mov
xor
mov
stc
dec
mov
lds
adc
pusha
lock
jnp
iret
stos
xchg
int
loopne
in
xlat
scas
xor
xchg
mov
stos
js
pop
pusha
gs
mov
aas
loope
xor
into
in
aas
inc
push
xor
ss
jbe
jne
xor
fdiv
lret
scas
pop
popa
xchg
cs
shll
sbb
xchg
stc
mov
lods
ret
das
scas
push
push
push
xchg
xor
ja
mov
mov
std
bnd
sub
xchg
fnstenv
repnz
dec
aad
cmc
repnz
lods
add
dec
inc
pop
adc
ds
test
cmp
mov
xchg
addr16
push
ss
mov
inc
dec
xor
sahf
popf
mov
lock
test
dec
sbb
shl
push
jae
lock
fmul
cltd
adc
add
lods
xchg
mov
loop
mov
mov
push
cmp
cmpsl
cmp
ret
jbe
pop
sub
cli
sub
push
aas
push
adc
outsb
inc
es
adc
and
psraw
jb
ret
mov
dec
push
scas
int3
cwtl
jbe
add
pusha
aad
loope
add
imull
jns
jns
dec
test
insl
fidivrs
call
rorl
cmp
cmp
iret
push
iret
scas
cmpb
mov
mov
or
cli
out
enter
push
je
cld
xchg
in
mov
mov
lods
sub
mov
push
inc
nop
jo
mov
jg
iret
mov
lahf
enter
in
push
iret
negb
or
lods
test
js
sub
lea
and
loope
sub
adc
jno
in
jecxz
lret
clc
xchg
adc
push
sbb
rolb
orl
fwait
aas
xchg
cmpsl
inc
push
lcall
jmp
jae
jbe
inc
xchg
sbb
xor
hlt
stos
addr16
push
fsubl
mov
hlt
in
xchg
seta
sbb
push
push
mov
je
lds
orl
or
sbbl
les
jne
push
shlb
into
push
incl
push
add
pop
xor
fwait
fs
xor
sbb
sub
mov
xor
mov
xor
sahf
in
push
imul
xor
xchg
sub
pop
outsl
push
sub
adc
jno
mov
out
add
xlat
loope
aas
cmp
insl
outsl
push
push
sbb
pop
fnstsw
jmp
repnz
push
adc
push
ret
ja
xchg
lock
ds
shl
arpl
mov
sbb
add
fs
push
outsb
jp
xchg
orb
mov
fneni(8087
mov
mov
pop
in
mov
sub
jp
fucompp
mov
lds
fwait
imul
fdivs
inc
sbb
cwtl
out
sbb
dec
shlb
mov
in
pop
cli
loop
mov
push
lea
mov
sbb
mov
mov
das
sbb
sbb
add
gs
shll
nop
cmp
mov
pop
mov
push
xchg
push
ljmp
fildl
pop
xchg
mov
lods
dec
adc
mov
push
xchg
jle
jp
or
sarl
gs
das
mov
jbe
scas
test
clc
fs
xchg
or
mov
adc
repz
lret
stos
stc
pop
pop
fidivl
or
fwait
xor
jle
jae
push
mov
ret
add
xchg
push
pop
ja
push
pop
test
add
or
shlb
pop
scas
shl
adc
add
and
pop
jmp
push
stos
dec
adc
mov
push
mov
loope
cli
adc
sub
sub
insb
sbb
ja
ja
addr16
aas
xor
mov
xor
cld
ffreep
lods
add
ret
movsb
daa
jno
insl
imul
cmp
adc
aas
imul
push
sub
jo
sub
or
mov
clc
pop
mov
and
cmp
popa
enter
cmp
push
fdivrp
xor
xchg
stc
ret
xchg
mov
or
mov
push
jne
out
hlt
pop
xor
mov
or
add
xor
notb
stc
mov
popl
leave
rcll
ret
js
sbb
sub
and
mov
movnti
push
sbb
adc
xorl
out
test
push
push
xor
cmp
loop
pop
lcall
aas
or
adc
inc
xor
inc
adc
xlat
loopne
test
adc
sbb
cmp
ljmp
out
lds
ret
repz
aam
push
mov
pop
lea
popf
xor
lcall
es
iret
inc
add
leave
lods
inc
cmp
prefetchw
and
pop
xor
inc
push
dec
cmpsl
push
dec
cmpb
and
mov
movsb
sbb
dec
mov
jmp
mov
int3
mov
arpl
movsl
push
repz
sub
jecxz,pn
icebp
sbbl
faddl
pop
fs
jge
mov
and
rcrb
js
data16
or
mov
or
cwtl
pop
fs
mov
xchg
es
fs
aam
cmpsl
push
popa
push
cmpsl
into
stos
je
or
int3
inc
scas
int3
jle
dec
pop
push
loope
dec
arpl
xchg
aam
daa
dec
inc
xor
rorb
in
fdiv
mov
lea
jecxz
gs
mov
lahf
push
push
arpl
daa
cmp
cmp
inc
aas
jno
and
and
cli
inc
lds
jecxz
pop
mov
int
sti
iret
movsl
xchg
adc
js
sub
inc
aaa
jge
das
add
fwait
aad
lcall
or
loop
imul
test
stos
jmp
jns
pop
lock
movsl
in
pop
sub
in
fmull
ret
xchg
jp
and
jl
push
cmp
mov
addr16
push
mov
lds
test
mov
ret
aam
or
incb
pop
ret
jge
in
outsl
ss
jge
mov
pop
xchg
mov
shr
sub
addr16
mov
cmp
test
incb
sbb
mov
mov
sbb
fwait
rolb
in
mov
iret
ret
and
out
stc
add
pop
lods
out
xor
cmp
jnp
leave
mov
sahf
mov
inc
mov
mov
fmuls
mov
xor
dec
inc
aad
fbld
sbb
mov
cltd
gs
mov
stos
aas
lock
pop
ss
outsb
fistps
xor
jmp
pop
imul
popf
inc
sti
arpl
lods
ror
loop
adc
pop
sub
cwtl
bound
pop
decb
enter
mov
clc
in
addr16
xchg
jg
mov
out
shrl
dec
popf
mov
test
insb
out
clc
rclb
inc
fidivl
test
pop
je
sub
test
pop
es
jp
pop
rcrl
sbb
jl
sarl
or
lds
push
stos
out
divb
sub
ret
xlat
pop
fldt
xchg
or
lcall
jmp
sub
mov
cli
fwait
lcall
loope
dec
stos
enter
and
adc
mov
mov
or
dec
or
push
or
jne
shll
push
or
ss
sbb
cwtl
mov
lock
xor
cmpsl
mov
leave
lods
xor
pop
ret
jg
mov
neg
inc
scas
mov
jecxz
push
mov
dec
pop
cmpsb
aam
call
enter
dec
xchg
mov
shrb
jl
scas
pusha
les
subb
pop
stos
mov
mov
fstps
stc
ret
ret
cmp
add
mov
mov
adc
outsl
adc
pop
ret
cltd
mov
pop
mov
lods
mov
popf
xchg
dec
nop
gs
ret
and
lret
pusha
dec
les
inc
and
movsb
push
cmp
or
jb
js
daa
pop
and
jns
pop
inc
pop
pop
lret
ficoms
cwtl
sbb
ror
add
pop
int3
test
push
fnsave
lcall
push
imul
out
dec
aad
xchg
loopne
push
mov
insb
pop
aad
test
adc
xchg
test
mov
adc
fists
mov
jg
push
mov
cwtl
fwait
ja
insl
pusha
jecxz
jge
and
sub
scas
fists
cmc
dec
subb
jae
dec
dec
bound
pop
xchg
dec
aam
dec
cmpsb
fs
cmp
xor
cmp
xchg
add
and
int3
mulps
imul
aam
aas
xchg
pshufb
jl
and
cmpsb
push
in
push
aas
cmp
xchg
dec
hlt
adc
sub
pushw
repz
add
scas
loopne
mov
jl
push
push
scas
sub
fistpll
mov
jmp
mov
push
std
sahf
cmpb
jl
jl
ret
cli
or
cli
pop
testb
cmp
les
jg
mov
adc
jnp
push
and
adc
aas
lret
dec
jmp
cld
mov
add
and
aaa
nop
pushf
pop
ljmp
mov
mov
rclb
pop
fs
dec
jge
call
mov
pop
xlat
jae
nop
rorl
mov
xchg
adc
adc
mov
jmp
mov
shrl
ret
lods
outsb
les
cmc
aaa
push
xor
mov
aad
cmp
mov
call
cmc
inc
cld
outsb
mov
in
aaa
jne
inc
das
pusha
or
jno
int
pusha
sbbb
stc
cs
cmc
loopne
lods
pop
fs
xchg
sbb
scas
in
push
dec
xor
dec
inc
cwtl
mov
popf
mov
repnz
cmpsb
clc
push
gs
or
roll
adc
outsb
cld
rol
cmp
cmp
inc
sbb
dec
inc
adc
popfw
aad
cmp
xchg
jle
and
fldcw
push
push
je
mov
jae
fucomp
ss
es
xchg
sbb
sub
cld
out
pop
push
scas
inc
sub
xchg
and
sub
je
movsb
fisttpll
xlat
aas
data16
hlt
out
mov
add
cs
call
cmpsl
lcall
inc
mov
scas
lcall
test
add
lds
ret
sahf
shlb
ja
pop
mov
sbb
jecxz
sub
gs
jbe
inc
push
xchg
pop
fwait
das
aam
jmp
push
jmp
or
je
jp
scas
outsl
pop
testb
add
test
xor
popa
push
jae
ljmp
jne
in
in
jae
test
ss
lods
push
mov
subl
cmpsb
mov
leave
pop
pop
repz
stos
loope
fdivl
pop
xor
mov
cmp
dec
mov
shll
mov
mov
jmp
and
loopew
jne
fdivrl
xor
bnd
inc
inc
call
sbb
mov
inc
mulb
outsl
dec
fisttps
mov
push
mov
xor
cmc
cs
jle
pop
pusha
lea
cmp
jp
jae
or
push
aas
loope
lret
sarl
lret
lahf
int
enter
push
stc
pop
jbe
gs
mov
mov
xchg
inc
call
sbb
out
sbbl
mov
clc
xchg
imul
xchg
pop
ret
lods
sub
mov
fisttps
daa
or
and
cltd
cmp
mov
dec
out
test
or
ja
push
pop
cmp
push
aad
cltd
jns
outsb
cmp
mov
dec
pushf
mov
sub
cmp
mov
pop
mov
jge
push
iret
daa
lret
push
out
or
stc
or
add
aas
jecxz
push
data16
or
gs
in
movsl
outsl
xchg
sub
rorl
push
inc
or
int
inc
popf
mov
inc
pop
mov
push
xor
dec
mov
mov
push
lcall
xchg
frstor
jno
js
imul
xchg
loope
push
add
mov
xlat
call
lods
add
popf
out
ja
and
dec
pop
mov
mov
cmp
or
ljmp
ljmp
xor
je
mov
imul
inc
lock
mov
xor
inc
lea
jl
cltd
shlb
add
or
dec
push
out
xchg
ja
xorb
jo
add
dec
inc
aas
add
sub
icebp
xor
cmp
push
cmp
sbb
mov
cmp
pop
mov
stc
fsubrs
push
shrl
sbb
and
std
stos
pop
inc
jl
js
dec
lcall
jmp
mov
jmp
movl
mov
cwtl
das
jle
lret
mov
cmp
xchg
cmp
pop
pop
shrl
movsl
mov
roll
adc
ss
sub
pop
clc
insl
inc
push
push
adc
lock
pushf
mov
jae
jae
or
jno
cwtl
jae
popf
in
cmp
fwait
loope
add
jo
lret
add
nop
jae
xchg
loop
dec
lret
les
movl
mov
call
inc
push
push
sub
xor
je
pop
jle
ljmp
jae
in
cltd
cmpsl
or
pushf
outsb
jae
xor
jmp
fnstsw
mov
divl
mov
jnp
inc
cld
cs
xchg
dec
xchg
jae
xchg
push
cmpb
cmp
loopne
cmpb
or
in
bound
outsb
pop
add
cwtl
and
mov
adcb
cmpsl
loopne
push
mov
jecxz,pt
jne
add
pusha
mov
std
inc
mov
popf
mov
jns
pop
out
loope
or
xchg
lret
inc
pop
out
mov
sarl
mov
das
mov
stos
ljmp
mov
scas
cmp
sbb
jo
or
popa
repnz
and
stos
loop
xchg
dec
adc
aas
hlt
push
aaa
je
test
jno
and
jae
in
mov
movsb
mov
sub
loope,pn
movsl
sub
out
push
mov
push
fisttpll
jmp
ret
jmp
mov
xchg
rolb
fwait
lret
movsb
inc
scas
aad
mov
stos
dec
stos
jecxz
das
in
mov
out
je
cmp
inc
test
lret
in
in
out
nop
or
xor
xlat
sbb
scas
ficoml
ret
pop
fldt
and
push
sbb
dec
imul
push
or
cmpsl
insb
loop
cmp
jne
cmp
cmp
sub
mov
sti
movsl
into
jmp
cmp
dec
mov
in
out
cmp
mov
pop
mov
lock
add
ucomiss
insl
clc
mov
sub
cltd
cmp
mov
shr
mov
fstl
jmp
push
ret
jle
std
push
push
repnz
sub
push
pop
out
mov
fwait
pop
popf
cmp
es
lret
push
cmp
das
cli
cmp
adc
lods
outsb
inc
fwait
xchg
push
pop
xchg
push
test
lods
mov
xlat
cmc
xor
outsb
xlat
push
add
cmp
push
lds
cmpsb
xchg
lret
es
cli
cmpsb
roll
push
xchg
cmp
in
lods
jmp
pop
repnz
mov
loopne
inc
inc
cs
fiadds
dec
lods
mov
push
pop
int
xchg
data16
push
hlt
enter
add
sbb
push
outsl
add
das
loopne
mov
sub
mov
mov
imul
sbb
or
add
pop
xor
cli
sub
movsl
push
out
cli
adc
sub
sbbb
jb
outsl
test
pop
jmp
push
dec
push
aas
xor
cmp
sahf
aaa
lcall
test
jmp
testl
inc
xchg
mov
mov
out
jge
inc
mov
jmp
jg
add
in
dec
jo
iret
out
cli
pop
cs
push
leave
sub
mov
incl
mov
sbb
fistl
fmulp
fiadds
sub
mov
out
leave
fdivs
mov
add
popf
and
pop
pop
jno
sbb
jns
pop
cmpl
mov
cmp
scas
ficompl
xlat
lss
sub
and
xor
xchg
fsub
mov
inc
jmp
pop
and
push
aas
aad
ss
loope
push
popf
enter
es
pop
sub
mov
pop
inc
cwtl
adc
sahf
mov
push
out
movsb
hlt
sub
fcoml
in
push
inc
mov
mov
fwait
push
stos
xor
fwait
sub
jmp
out
ljmp
lret
and
lahf
or
test
imul
jg
lret
pushf
xchg
mov
jbe
out
in
movsb
adc
shrb
mov
push
movsl
cli
enter
mov
push
shl
lahf
cmp
fcomi
pop
push
mov
arpl
push
xchg
roll
jecxz
push
xchg
jl
or
push
add
gs
bswap
into
fmuls
cmp
sub
ja
xor
test
aaa
xchg
xor
ret
pop
or
mov
push
xchg
and
icebp
sub
in
sub
lea
les
sbb
ss
aad
mov
mov
test
dec
add
aad
flds
mov
cmp
fidivl
sbb
lods
mov
in
pushf
outsb
push
jmp
dec
addr16
aad
dec
xchg
xor
jb
dec
notl
aaa
js
cld
fstpl
cwtl
scas
jmp
xchg
and
add
xor
cmpsl
inc
sub
xlat
lock
mov
decl
sbb
xor
scas
icebp
rorl
insb
cltd
hlt
jp
es
lds
mov
sub
orl
mov
add
fs
and
pop
mov
jmp
lcall
es
inc
add
push
mov
scas
push
xchg
cmp
notl
cmpsl
mov
mov
sar
mov
jne
ret
add
sahf
adcb
loopne
cmpl
fisubs
daa
call
and
fwait
xchg
pop
adcb
dec
subl
xor
sub
xchg
xor
out
and
cwtl
inc
data16
dec
test
cmp
mov
cld
test
leave
sub
jno
or
inc
lcall
cmp
dec
dec
mov
lds
lcall
push
es
jno
lret
shr
les
dec
sub
xchg
adc
cmp
jno
orb
pop
push
fildl
xor
in
ficompl
or
cmp
mov
test
icebp
aas
rorb
cmp
xchg
arpl
mov
inc
dec
repnz
lret
xchg
notl
and
pop
adc
mov
push
shll
push
xor
push
call
cmc
ret
and
pop
or
daa
out
mov
sub
sbb
mov
fldcw
repnz
nop
in
adc
add
add
fmull
ljmp
pop
aad
scas
push
leave
icebp
les
mov
inc
in
mov
nop
notl
fisubl
pop
pop
pop
rclb
sahf
jle
xor
cmp
enter
stc
adc
push
sbb
xor
dec
insb
jns
adc
divb
push
stos
xlat
lahf
inc
loope
or
insl
cmp
lock
add
movsb
add
jnp
loop
stos
iret
push
fiadds
stc
add
gs
aas
insb
in
or
dec
mov
aad
stos
lcall
jb
scas
adc
mov
sub
mov
add
cmpsl
and
dec
cmp
shlb
xchg
inc
sbb
cs
xor
sub
ret
and
rcrb
je
mov
inc
mov
test
jl
outsb
loope
push
xor
mov
daa
das
imul
lcall
push
lock
add
sbb
mov
mov
enter
fnsave
pop
xchg
inc
xchg
movsb
fwait
and
push
and
shlb
add
setle
xchg
ret
mov
ss
aam
imul
mov
adc
in
popf
das
out
or
repz
lock
pop
insb
or
push
mov
cmp
xchg
repz
punpcklwd
fs
icebp
mov
fdivrs
pop
movsb
cmp
push
inc
sbb
nop
mov
loopne
int3
xor
xchg
shlb
jmp
sbb
and
push
jo
mov
sbb
inc
es
mov
pop
lcall
xchg
rcll
and
mov
cmpsl
xchg
gs
ss
xchg
adc
pop
fnstsw
dec
je
adc
adc
xchg
cmpsb
dec
xor
mov
mov
test
pop
push
enter
icebp
cmp
daa
adc
ret
cmp
add
push
dec
js
mov
add
xchg
mov
add
decl
lods
mov
mov
add
cltd
mov
jnp
push
xor
or
fcomip
cmpsb
movsl
outsb
js
test
xchg
push
cli
sbb
push
je
aaa
or
inc
xchg
inc
pop
mov
jae
mov
push
in
cmc
sbb
cmp
nop
jnp
fsubrs
fistpll
jmp
aad
fwait
xchg
cmpsb
adc
mov
or
inc
pop
adc
test
aaa
pop
mov
lock
sbb
and
add
pop
iret
sub
pop
jnp
or
cmc
scas
or
icebp
cmp
push
mov
sub
or
repnz
leave
enter
xchg
ds
sbb
insl
fnstsw
insl
rcl
add
inc
arpl
les
jg
leave
imul
xchg
cmc
or
sahf
aas
xor
inc
insb
fstp
addr16
mov
adc
add
daa
ja
pop
lahf
xor
jbe
test
or
xorl
movsb
aaa
test
adc
test
xchg
adc
sub
fcomp
add
jle
xchg
xchg
sub
and
cmp
mov
adc
sarb
push
mov
call
sub
std
aaa
nop
out
ljmp
mov
ret
andnps
mov
jo
mov
in
sub
mov
cmc
clc
xor
pop
cmp
fcmovnb
lea
lds
cld
int3
test
jno
or
mov
and
lcall
mov
std
adc
push
arpl
or
sbb
fld
push
pop
xor
dec
insl
cmp
test
and
mov
adc
pop
pusha
or
or
mov
push
xchg
je
call
pop
sub
pop
rcll
dec
fsts
mov
sbb
outsl
jne
inc
dec
xchg
aaa
test
pop
mov
testl
push
pushf
jl
or
jo
adc
xchg
sbb
xlat
lret
push
lods
das
jbe
stc
xorl
xchg
stos
adc
fidivs
add
ret
fs
stos
add
cwtl
push
sub
out
outsb
scas
jo
into
xor
xor
pop
mov
jp
fs
xor
fstpt
mov
add
fistpll
addr16
loopne
lahf
outsl
add
out
inc
nop
sbb
jne
notb
xchg
rolb
stos
jns
repz
xchg
sub
int
sbb
lock
xchg
fildll
dec
xor
and
inc
scas
push
leave
ss
test
xorl
dec
cmp
sub
jl
cmp
pop
sarl
push
add
scas
push
mov
fidivs
jecxz
into
mov
adc
popa
ret
dec
dec
sbb
pop
dec
push
stos
pop
push
fdivrl
faddl
pushl
cwtl
sti
ljmp
push
scas
in
add
ret
in
fdivl
mov
push
xor
inc
jo
repz
inc
mov
pop
popa
dec
push
adc
sbb
or
sub
pop
xor
addr16
jno
pop
je
mov
mov
mov
add
nopl
ja
into
flds
and
mov
shl
xor
repnz
push
push
pop
cmpsl
cmp
push
lret
aam
inc
or
jl
fs
lock
xorl
lods
aas
sub
mov
cs
xchg
lahf
lds
popa
aad
pop
les
jl
cld
pop
xchg
mull
xor
lea
pop
mov
lds
aas
mov
lea
xchg
jecxz
pop
push
fdiv
adc
mov
jbe
stos
dec
cli
ja
or
push
pop
mov
test
gs
test
jp
insl
mov
enter
xchg
out
incl
addb
mov
addl
les
pusha
jo
push
ljmp
hlt
mov
into
and
pop
outsb
fnsave
aaa
jae
dec
mov
lcall
pushf
stos
icebp
daa
popf
cs
jg
leave
lods
sbb
test
push
add
lcall
add
popl
adc
int
pop
int
popa
inc
leave
dec
push
imul
dec
in
mulb
dec
adc
mov
leave
sub
dec
mov
pop
daa
pop
jnp
mov
sbb
add
sbb
shl
into
sbb
sbb
test
dec
mov
xor
jecxz
and
aad
add
add
dec
imul
cltd
inc
leave
jmp
inc
mov
mov
mov
xchg
ss
int3
sbb
data16
scas
adc
pop
out
out
stc
add
aam
add
xchg
xlat
pop
lret
cmp
test
push
iret
sub
out
mov
inc
fldl2t
mov
mov
mov
repz
add
xchg
pop
subl
xchg
cmpsb
mov
aam
imulb
insb
adc
push
sub
cmpb
enter
mov
push
sbb
adc
dec
ljmp
cwtl
insl
cmp
insb
and
sub
out
mov
inc
or
leave
and
loope
cli
cwtl
inc
mov
cmpsl
fs
dec
inc
je
sahf
imul
stc
pushf
test
cmp
in
dec
inc
pop
or
mov
jne
or
icebp
sbb
sahf
inc
jmp
jl
lea
dec
cs
lea
inc
inc
add
push
jmp
pusha
or
add
jb
pop
cli
test
in
mov
mov
add
repz
jmp
negb
dec
jnp
repz
in
jb
test
pop
popf
repz
pop
cmc
cwtl
test
xor
cmp
xchg
clc
jns
adc
aas
add
xor
adc
mov
mov
xchg
cmp
pop
mov
sti
sbb
daa
and
rclb
cld
pop
cltd
and
add
pop
ret
pop
xor
push
xor
sti
mov
push
int
popa
jno
mov
pop
std
cs
add
xchg
and
cmp
out
cmp
out
jnp
dec
inc
mov
popf
aaa
adc
dec
rcll
cmp
incl
popa
sub
test
pop
aam
dec
aas
jnp
es
icebp
aas
sbb
adc
mov
int3
xchg
or
das
jge
test
jecxz
loop
aam
and
mov
js
ds
int
sbb
dec
sbb
jns
popf
pop
push
push
push
bndstx
adc
push
sbb
mov
inc
fstps
push
add
sub
or
nop
scas
mov
loop
jecxz
dec
sti
xchg
mov
outsb
outsb
pushf
xchg
loop
scas
ret
xchg
les
push
insl
inc
sub
int
dec
fs
cmp
in
jmp
test
cli
ja
stc
lds
or
in
push
leave
push
ds
cltd
stos
and
lock
cs
cmp
sbb
test
push
test
es
outsb
jnp
data16
call
pop
mov
adc
mov
mov
or
pushf
push
adc
adc
lods
or
sti
add
jae
dec
or
dec
or
mov
test
out
fmuls
pop
rcll
pop
jnp
cli
ljmp
mov
jbe
scas
xchg
leave
xor
out
ja
sbb
sbb
loopne
dec
xchg
clc
mov
add
dec
jmp
mov
inc
cld
sub
push
or
mulb
xor
arpl
ret
outsb
nop
xor
pop
add
stos
ss
adc
sub
in
pop
inc
mov
lahf
daa
jb
dec
movsl
rorb
test
push
inc
and
shll
leave
jp
out
aad
jecxz
es
push
fwait
divb
and
and
xchg
push
mov
mov
ror
xor
or
jno
jl
std
jnp
popf
and
lods
pop
or
ret
push
int3
cmp
mov
mov
sub
sti
add
or
pop
lods
mov
mov
add
ja
adc
fldenv
adc
insl
sti
mov
xor
fwait
dec
push
movl
xor
fldenv
push
lret
add
fldl
push
dec
scas
data16
jmp
ja
repnz
in
jae
jl
repz
mov
mov
test
xchg
mov
movsb
pop
jmp
lcall
lock
xchg
aad
push
fdivl
sub
xor
into
xchg
out
shll
es
xchg
test
lds
adc
pop
out
lret
sbb
or
icebp
bound
dec
xchg
push
adc
loopne
adc
and
mov
pop
add
xchg
les
or
lret
enter
mov
sub
je
push
mov
xchg
jne
lret
or
arpl
xor
cwtl
push
lret
mov
popf
mov
or
push
mov
stc
mov
mov
xor
out
test
sti
lret
or
mov
fnstenv
fimuls
sarb
mov
rcll
arpl
add
cmp
jle
and
stos
mov
sbb
xor
sbb
and
lock
xor
ss
adc
mov
les
jb
add
sub
or
cmp
or
shrl
leave
std
push
push
sub
popf
xor
inc
cltd
fimull
mov
jns
lcall
in
mov
mov
ss
cmpsl
into
mov
push
pop
pop
inc
adc
divb
rcll
jb
cltd
div
aam
xchg
pop
je
mov
push
push
adc
nop
cmpsb
leave
push
outsl
das
rorl
push
sub
jne
xor
jae,pn
pop
pushfw
mov
xor
imul
lret
jno
cmpsb
das
scas
lahf
dec
sbb
dec
insb
xor
mov
out
xor
add
fstl
in
pop
xchg
fadds
dec
icebp
ja
mov
sub
stos
fcoms
cmp
mov
jne
jb
sbb
fsubrs
andl
cs
loopne
out
fidivrs
fstpt
pop
push
adc
rcl
daa
lahf
mov
rorl
mov
jmp
sbb
xor
mov
pop
push
jns
mov
inc
push
in
pop
inc
mov
call
mov
daa
and
sbb
sbb
cs
push
jnp
xlat
fwait
and
push
dec
das
inc
dec
sbb
test
repnz
pop
cmpsl
mov
ret
movsl
fstpt
jns
das
addr16
sub
dec
sbb
popa
cmp
xor
rcrb
mov
cmp
sahf
scas
mov
sar
popf
dec
rclb
test
popa
mov
push
jnp
iret
nop
dec
xlat
jns
pushf
fstps
jae
loopne
sbb
pop
ficoms
mov
enter
fimuls
test
clc
adc
cltd
xchg
lcallw
iret
push
pop
repz
dec
sub
sbb
movsb
push
cli
bound
pop
xchg
pop
jp
push
mov
mov
dec
sub
jne
pop
push
pop
fsubl
fsubp
mov
inc
shll
sbb
leave
lock
imul
hlt
mov
mov
jecxz
lahf
xchg
es
mov
sub
fstpt
ljmp
hlt
dec
mov
sub
hlt
arpl
mov
and
int3
sub
cmp
adc
dec
insb
bound
popf
push
push
inc
mov
add
or
sahf
xchg
add
jle
test
mov
push
cmc
push
xchg
inc
or
inc
fsubl
fstpl
lea
cmp
cmp
cli
pop
int
mov
inc
and
push
leave
fwait
cmp
sar
inc
jbe
movsl
xchg
pop
fisttpll
insl
xor
cwtl
icebp
insl
inc
xchg
push
mov
rolb
nop
mov
xor
ret
jge
sbb
push
outsb
movsb
es
inc
arpl
push
sub
xchg
inc
lds
push
divl
cmpsb
sbb
mov
mov
pop
out
adc
nop
sbb
add
or
inc
into
cmc
cmp
setl
shrb
jb
jno
loopne
sbb
push
or
mov
test
jbe
cli
mov
enter
adc
gs
push
inc
bound
inc
fidivrl
inc
les
jne
jl
addl
jmp
leave
xor
stos
jl
pop
out
push
and
imul
leave
fldcw
rclb
xor
fimull
adc
dec
les
cmp
sub
jp
cwtl
imul
test
inc
outsl
sbb
mov
adc
push
pop
mov
jge
aad
adc
xor
fwait
test
adc
xor
mov
negl
mov
les
int
cmp
adc
loopne
jne
aaa
or
punpckldq
and
mov
insb
inc
pusha
test
fs
xchg
jo
leave
cwtl
in
orl
fs
adc
out
mov
mov
mov
inc
fsubl
or
xor
cltd
dec
roll
inc
nop
loope
mov
lea
xchg
pop
bnd
test
lock
insb
add
push
nop
xchg
mov
insl
dec
out
cld
add
fsts
in
arpl
pop
dec
push
or
repz
mov
adc
insl
stos
and
cmpsl
jno
ja
call
les
dec
cmp
pop
enter
push
or
inc
sub
add
loope
push
push
push
xchg
in
push
lahf
sub
stc
repnz
dec
fldt
cmp
repz
xchg
movsl
adc
xchg
or
scas
inc
mov
jle
popf
push
mov
shrb
and
pusha
es
ss
mov
jo
sbb
jmp
fnstsw
out
mov
sub
daa
and
imul
cld
fnstenv
dec
pop
push
pop
stos
test
sbb
jge
push
mov
cmp
sub
cli
jo
mov
inc
jl
imul
push
dec
xorb
bound
int3
xchg
outsb
jmp
or
fs
pop
pop
insl
jg
jmp
xor
addr16
repnz
fisttpl
movsb
dec
mov
fld
push
xchg
adc
mov
push
sub
push
mov
sbb
and
pop
popf
aad
push
ret
mov
outsl
scas
std
imul
outsb
add
xor
shlb
rcll
stos
push
addr16
inc
pop
ret
int
dec
cmp
es
sbb
dec
ds
xchg
insb
sbb
pop
push
xchg
popf
pop
or
sub
jmp
movsb
hlt
insl
movsb
lock
and
cmp
cmp
cs
insl
jge
mov
inc
xchg
loope
mov
mov
movl
cltd
je
das
xlat
fldt
push
mov
repz
rcl
jno
xchg
fidivl
mov
lea
jne
daa
pop
js
loope
and
mov
add
mov
adc
rclb
aaa
and
xor
cli
jb
sbb
scas
outsl
test
inc
or
sbb
push
addr16
outsb
rcl
pop
sbb
xor
popl
add
push
notb
xor
cltd
xchg
sub
sbb
das
in
fmuls
xchg
pop
sbb
imul
testb
pop
push
mov
into
jb
popa
shl
pop
cmp
aas
mov
arpl
mov
insl
dec
in
lahf
je
shrb
mov
mov
mov
fldcw
out
jae
test
cwtl
rcr
fistpll
or
sbb
xlat
cmp
fs
std
dec
mov
jo
pushf
jp
aas
lods
out
add
ss
pop
dec
hlt
into
adc
add
pushf
cmp
fisubrl
outsl
jne
push
test
movsb
and
adc
cmp
inc
popa
sub
mov
loop
in
inc
sbb
adc
clc
ds
int
jae
vunpcklpd
mov
mov
mov
pop
test
xchg
cld
mov
jbe
outsb
lods
mov
xor
push
es
aas
mov
sub
outsl
push
sub
jo
add
pop
sub
in
fsubr
adc
clc
lcall
mov
stc
ret
ss
push
inc
dec
mov
jp
hlt
sub
sub
test
mov
fisubs
dec
mov
mov
sbb
adc
in
or
cmc
mov
push
push
and
pop
xchg
fnstenv
clc
sub
mov
fdivrl
xchg
pop
out
fcoml
int
inc
pop
adc
xchg
add
add
popa
out
subl
xor
lods
push
daa
dec
mov
cmp
cmp
inc
pop
test
xchg
or
arpl
mov
loope
and
insb
fimuls
mov
ficoms
testl
push
shlb
repz
adc
rcl
std
cld
out
icebp
fimull
jbe
leave
stos
inc
sub
push
push
mov
in
imul
adc
lcall
pop
adc
incb
ds
inc
dec
out
mov
mov
inc
pop
or
and
jns
cli
sbb
fists
divb
inc
repz
dec
cmpsb
nop
pop
mov
aaa
jno
cmp
xchg
imul
into
push
and
cmp
dec
out
add
cmpsl
push
cmpl
enter
cmc
outsl
jns
lods
sbb
or
shll
mov
fs
jp
jae
mov
scas
or
movsl
lds
push
cmp
dec
xlat
or
sbb
jae
or
xor
cld
push
pop
fs
xchg
dec
adc
lods
jne
pushf
sub
cmc
xchg
pop
ss
popa
cmpsb
fstl
lret
popf
movsl
aad
lock
ror
movsb
test
pop
cli
sub
mov
bound
ret
inc
ret
and
inc
jmp
dec
and
cmp
inc
jp
pop
xchg
inc
repz
in
mov
mov
sar
sarl
adc
push
mulb
in
lods
adc
cmpsb
pop
push
loopne
iret
insb
mov
adc
sub
icebp
xlat
push
xor
cmp
adc
lret
stos
addr16
stc
je
push
testl
pop
jnp
mov
cmp
ds
hlt
mov
adcl
testb
sti
stc
enter
sub
call
jmp
out
and
scas
xor
cs
out
jge
push
js
scas
mov
cwtl
xchg
call
cmp
lods
cmc
pushf
fcmovu
mov
loope
xchg
xchg
cli
sbb
fimuls
jecxz
or
test
testl
mov
popa
mov
adc
sbb
scas
cli
or
daa
and
out
pop
es
arpl
mov
into
pop
cmp
xlat
jl
xchg
fsubrl
jmp
loope
and
or
ja
lods
inc
and
aad
pop
dec
sub
or
push
add
mov
push
lock
mov
jne
pop
orb
stos
mov
lcall
sub
push
jg
rorl
mov
add
inc
in
push
xchg
out
add
nop
ficoms
xchg
nop
and
mov
mov
imul
xlat
adc
ja
jb
sbb
rorb
andl
pop
int3
push
fsubrs
and
jbe
push
dec
imul
fdivrl
fistps
dec
popa
out
mov
shll
insl
push
push
mov
push
pop
mov
adc
jne
mov
out
adc
hlt
ds
shlb
and
insb
push
ss
sti
sub
dec
popf
ret
outsl
insl
mov
sub
and
mov
ljmp
mov
icebp
lcall
in
or
mov
pop
dec
xchg
pop
cmp
cmp
aaa
shlb
or
pop
dec
add
mov
out
hlt
in
cmpb
xorb
pop
sub
cmp
sbb
and
xchg
and
inc
jecxz
lret
sbb
or
call
lock
add
divl
cmp
pop
pop
sbb
inc
mov
outsb
imul
testb
nop
mov
nop
imulb
fs
sbbl
stc
or
cmpb
and
stc
inc
and
jb
sti
mov
mov
xor
sub
fsubl
sbb
sub
leave
adc
jle
aam
iret
jl
lret
jl
and
lea
inc
cltd
xlat
imul
ljmp
adc
in
fsubrl
pop
imul
mov
into
or
jmp
js
sbb
adc
jecxz
cmp
sbb
lahf
scas
call
xchg
stos
and
lock
out
iret
outsb
push
in
incb
negb
aam
gs
daa
shrl
lret
repz
mov
nop
xor
push
cmp
cs
inc
pop
pop
cmp
push
mov
mov
cwtl
mov
aas
cltd
aaa
dec
mov
xchg
push
aam
repnz
pusha
movl
out
pop
js
fsts
pop
pop
fs
mov
sbb
sub
bound
add
and
add
mov
pusha
shrb
or
sahf
nop
lea
loope
jo
pop
lods
pushf
push
leave
test
adc
jmp
or
fimuls
loope
mov
pushf
sub
jl
pop
or
mov
out
mov
cwtl
cmpsb
or
adcl
pop
sbb
popa
xor
into
lock
jp
popf
scas
mov
mov
adc
enter
test
push
xchg
movsb
pop
add
lods
cmp
sbb
jne
xor
or
sbb
movsl
inc
mov
inc
mov
out
bound
jl
push
and
sub
cmpsl
pminsw
dec
popa
push
add
in
or
jmp
and
jns
push
mov
stos
fucom
cmpsl
mov
ljmp
xor
adc
push
adc
sub
imul
fs
add
or
ja
into
das
fmuls
std
jno
mov
sub
mov
int
aam
pop
mov
mov
cwtl
fdivrp
mov
push
add
imul
inc
mov
repnz
add
sbb
movsb
outsb
jbe
jmp
fisttpl
subb
imul
cltd
xchg
inc
and
movsl
and
xor
fs
aam
inc
pop
mov
in
inc
jge
lret
stos
xchg
repnz
pop
pop
xchg
xor
mov
das
mov
enter
aam
outsl
pop
gs
add
jb
leave
cmpl
xor
sub
lods
jo
lods
popa
pushf
jmp
push
into
mov
push
les
mov
cmc
gs
js
mov
sbb
jp
daa
xchg
jmp
xor
dec
sbb
dec
insl
nop
add
clc
xchg
pop
add
sbb
inc
mov
ss
cld
in
faddl
cmpsb
pop
clc
cmp
es
clc
pminub
cmpsl
jo
xor
or
jmp
loop
jp
sbb
psubw
mov
push
xchg
pop
pop
imul
or
in
mov
iret
clc
and
loope
pop
shll
cltd
mov
mov
and
inc
push
das
jo,pt
adc
dec
push
pop
sub
popa
mov
fisubl
xchg
test
sti
jecxz
leave
mov
mov
lods
js
adc
in
roll
or
xchg
inc
ss
xor
push
pop
dec
fwait
mov
js
push
or
mov
adc
add
cmc
dec
push
int
lea
mov
pop
push
or
inc
mov
xor
sbb
movsb
call
mov
mov
out
and
mov
pop
sub
stos
xor
mov
in
loope
sbb
sub
ret
mov
sub
in
add
lret
ja
bound
ja
das
xbegin
shl
push
mov
out
aas
stc
in
jp
dec
pusha
xor
je
mov
xchg
divl
inc
or
ss
xor
xchg
pop
addb
test
repz
push
movsl
adc
sub
dec
adc
pop
and
je
movsb
push
push
add
aam
icebp
pop
sub
add
je
imul
out
jae
push
enter
xchg
pop
nop
fmull
xor
push
dec
daa
addb
rcrl
sub
sub
sbb
cli
popa
sbb
dec
rcrb
push
pop
cmpb
arpl
jg
loop
stc
push
jb
sbb
testb
xchg
jecxz
dec
push
in
in
cmp
jle
bound
ret
addr16
mov
inc
data16
or
xchg
pop
pop
cmp
cmp
or
inc
not
fucomip
aas
mov
push
dec
jmp
pop
xchg
aad
cld
jmp
inc
jo
sub
insl
mov
enter
pushf
inc
or
inc
push
loopne
loopne
jle
out
jbe
loopne
fwait
mov
cmpsl
and
shrl
mov
cwtl
jge
push
into
dec
jno
shrb
pusha
faddl
shrb
jnp
dec
jbe
mov
inc
xchg
lea
enter
daa
lods
xchg
dec
mov
adc
ret
shll
and
fnstenv
mov
insb
int
sbb
cmp
enter
mov
aam
pop
push
pop
cmpsw
inc
loope
push
movsl
cmc
mov
fdivrs
gs
and
fwait
ja
jge
int3
xor
mov
sub
xor
stos
lds
adc
adc
pusha
sbb
decb
int3
xor
movsb
aaa
sti
flds
mov
pop
cwtl
xchg
mov
out
loop
jmp
outsl
jne
or
roll
pop
bound
leave
in
lret
int
mov
push
stc
pop
pop
ljmp
inc
sarb
mov
pop
sbb
roll
fildll
aas
cmp
arpl
neg
mov
int3
mov
xor
cli
in
mov
sub
subl
and
js
dec
fcoml
les
in
xchg
pushf
jl
mov
sbb
enter
hlt
jmp
xor
cmpsl
int3
sub
in
out
cmpsb
sbb
testl
cmpsl
popf
mov
cmpsb
mov
xchg
push
in
push
call
arpl
inc
in
push
cmp
mov
push
add
mov
stos
lds
or
fbstp
mov
fs
les
inc
jo
jae
mov
xor
ss
addr16
push
sbb
aad
popf
mov
loopne
or
sbb
pop
pop
lock
das
sbb
cmp
test
mov
ds
xchg
mov
push
mov
popa
inc
sbb
cmp
sub
xor
enter
lret
hlt
xlat
out
cmc
cltd
or
clc
adc
push
and
mov
mov
addr16
loope
js
jl
es
xor
dec
sub
xor
repnz
das
testb
dec
adc
cmp
adc
push
stos
je
cmp
mov
dec
ss
insb
je
fmul
jnp
push
lods
pop
je
mov
jmp
ds
dec
out
ror
push
sub
cmp
fst
sub
lahf
popa
add
test
imul
cmpsb
dec
ret
fbld
inc
dec
pop
jno
test
nop
jo
lds
repnz
push
pop
lock
fdiv
or
adcl
pusha
sahf
leave
dec
arpl
fidivrl
inc
stos
aaa
test
mov
cmpsb
xchg
scas
inc
mov
mov
jbe
add
mov
sti
xor
enter
mul
cmpsb
inc
mov
cmp
shl
push
sar
jmp
sbbl
andl
ret
push
in
and
cltd
fildll
inc
pop
adc
jnp
fildll
adc
pushf
outsb
es
and
xchg
pop
dec
xlat
jmp
pop
inc
adc
in
jp
rcrl
cltd
pusha
pop
jle
xchg
fsubrs
adc
push
mov
arpl
les
push
setno
inc
les
mov
cmpsl
mov
ss
push
pop
addr16
lret
ljmp
or
dec
divl
xchg
mov
pushf
rcrl
push
inc
xchg
stc
ljmp
pop
dec
mov
mov
leave
ret
shlb
jl
call
dec
or
pop
push
push
stos
in
add
push
cmp
inc
mov
lahf
jns
sbb
xor
les
imul
imul
and
mov
mov
jle
dec
sbb
int3
cli
stos
int
jbe
bound
insb
imul
es
inc
push
shrl
push
jecxz
iret
sbb
rorb
push
sub
sub
pop
icebp
fidivl
pop
arpl
mov
dec
jo
clc
shrb
push
mov
inc
mov
adc
push
mov
fmull
add
xor
mov
add
lock
into
repnz
xchg
cmp
sub
pop
call
jge
sahf
xchg
loop
mov
ss
repz
push
outsl
jb
ret
sbb
sti
lret
xor
xchg
adc
jbe
push
jmp
rorl
cwtl
scas
cmp
cmc
int
daa
sub
sub
xchg
fisttpl
add
pop
and
cmp
and
in
push
sbb
bound
pop
int
outsb
or
adc
std
xor
les
push
add
jp
faddl
pop
cs
xchg
dec
xchg
cmpsl
loop
cmp
inc
sbb
ljmp
je
je
adc
cmp
xlat
clc
shll
sar
xor
push
clc
xchg
inc
call
inc
push
test
ret
push
cltd
sbb
sub
fbstp
pop
inc
xchg
test
mov
inc
push
int
and
jb
icebp
iret
sarl
sub
adc
cmc
pop
fstl
mov
lahf
mov
mov
sahf
or
add
test
fiaddl
leave
pop
pop
mov
dec
jge
lret
ret
mov
pop
push
dec
and
popa
jl
mov
sbb
test
cmp
pop
inc
inc
sti
sbb
mov
xchg
iret
jmp
test
repnz
or
inc
les
push
je
movsl
pop
int3
mov
ficoms
in
add
int3
aas
jg
jne
sub
into
stos
xor
aas
daa
subl
fisubl
dec
sub
loop
dec
aad
add
mov
in
mov
cmpsb
mov
dec
scas
int
pop
pushf
je
xor
fidivl
xchg
and
stos
jno
arpl
pusha
ret
mov
push
ret
pop
jae
dec
call
cmpsb
push
and
stos
and
xchg
xor
push
test
push
inc
mov
out
add
xchg
dec
rclb
adc
cmc
mov
or
flds
xor
adc
mov
fisubrl
push
push
jg
test
push
and
lods
fbld
jl
aad
test
xor
ret
sbb
bound
cmp
aam
adc
stos
xchg
xchg
imul
lcall
push
std
scas
xchg
mulb
cld
pushf
int3
bound
or
lret
das
imul
jle
int3
in
inc
push
les
push
inc
and
rorl
mov
shrl
xchg
bound
imul
test
jge
in
insl
int
stos
jge
mov
xchg
test
cli
scas
push
or
cmpsl
cmpsb
mov
repz
movsl
fldl
les
mov
or
mov
dec
int3
movsl
lea
jmp
imul
iret
push
jl
rcrl
decl
into
shll
outsb
es
jg
test
outsw
aad
add
mov
xor
pop
cwtl
andb
mov
es
loop
pop
xchg
lret
xchg
pop
verw
mov
pop
lea
je
mov
into
adc
xlat
sti
dec
xor
mov
lcall
inc
mov
sbb
or
test
jp
nop
fcoml
lret
into
add
xchg
inc
mov
movsb
sub
rclb
push
add
xchg
andl
pop
adc
mov
stos
ss
scas
data16
loopne
cmp
lcall
ljmp
fildll
pop
std
lds
inc
into
test
jne
jne
out
mov
in
leave
gs
fcoml
jge
mov
inc
mov
movsb
daa
test
sbb
loopne
sbb
ret
jnp
or
popf
xchg
xor
pushf
push
aaa
jg
in
inc
gs
push
hlt
adc
test
jb
mov
jmp
xor
je
mov
mov
pop
lea
xor
shlb
add
jne
mov
arpl
arpl
pop
jg
dec
repnz
int
jae
loopne
negl
mov
out
mov
lods
pop
out
ds
xchg
sbb
dec
jge
test
mov
outsl
add
mov
lcall
into
les
sahf
adc
into
pop
mov
adc
test
outsl
jnp
sbb
mov
lea
cltd
stc
cli
push
outsb
cmpsl
test
je
js
outsb
outsl
xor
add
jmp
popf
stc
inc
cmpsl
jne
pushf
lock
and
jb
lock
lods
jae
outsl
cmp
jmp
xchg
test
cli
aaa
inc
add
mov
testl
push
lods
lcall
stos
jmp
and
jne
dec
push
sub
mov
mov
idiv
rorl
dec
sti
leave
add
lods
lds
sub
inc
fcoml
popa
add
mov
lods
mov
mov
int
rol
or
lahf
dec
or
fs
test
out
sbb
xchg
test
imul
je
cmp
lcall
fnstsw
sbb
and
ret
mov
out
cmp
sub
rcrb
push
bound
xchg
inc
repnz
fisubl
lcall
sbb
sbb
sub
aam
or
mov
mov
sub
lahf
cmpsl
inc
popf
push
cmpsb
or
std
rclb
jecxz
je
sarl
out
lea
rorl
add
sbb
pop
or
push
or
fadds
inc
outsb
pop
add
mov
cli
stos
ss
mov
mov
imul
sarl
test
or
shlb
dec
shrb
inc
aam
inc
repz
mov
insl
and
jbe
int
lret
outsl
jb
std
mov
loope
stc
cld
rcrl
jp
xor
clc
ja
call
jb
mov
sub
roll
sbb
dec
scas
sub
and
push
jnp
lret
mov
mov
mov
jg
push
push
imul
xor
adc
sub
xor
stos
hlt
xchg
loopne,pt
out
mov
fimuls
sbb
fidivs
in
das
jno
push
and
test
xchg
pop
mov
sbb
js
testb
mov
je
loopne
push
popa
jmp
sbb
xchg
sub
adc
sbb
cltd
sub
aaa
push
aam
lods
and
cmp
insl
shlb
pop
ja
popa
inc
jp
ret
adc
outsl
adc
xlat
mov
js
sub
out
sti
movsl
sarl
mov
dec
sbb
xor
int
fisubl
mov
ss
adc
jbe
and
jnp
out
outsb
addr16
mov
sub
fs
testb
or
mov
cwtl
and
xchg
divb
pop
jle
sbb
out
enter
and
cli
inc
iret
dec
js
sti
or
jae
pop
int
fidivrs
xorb
push
popa
sub
adc
cs
mov
jg
or
pop
xchg
enter
mov
pop
mov
dec
xlat
mov
decb
into
sub
les
mov
jmp
jmp
movsl
xchg
cmp
xchg
sub
sbb
add
stc
jle
add
popf
jecxz
xchg
int3
mov
dec
pop
dec
movsb
shrl
test
cmpl
inc
push
sub
push
cmp
inc
mov
aas
call
xchg
insl
arpl
add
stos
call
pop
inc
sub
cltd
dec
dec
pop
pop
ja
rorl
lret
out
push
into
fldt
add
outsl
jne
leave
loop
mov
inc
cwtl
ret
pop
jo
xchg
pop
mov
fisttpl
daa
jnp
or
lds
add
sbb
mov
icebp
cmpsb
cmc
ljmp
fsubrs
inc
ret
xchg
add
and
mov
dec
jg
bnd
stos
stos
sbbb
shl
fcoml
fildl
cmpb
xor
push
xchg
xchg
aas
inc
fld1
push
fdivl
sbb
das
mov
lea
jne
leave
xchg
jg
sti
xchg
dec
xor
ljmp
pop
adcb
arpl
xchg
and
xor
inc
mov
sub
pop
xchg
addl
fucomip
fwait
pop
pusha
icebp
cmp
data16
pusha
mov
inc
jp
sbbw
stc
setp
ljmp
xor
dec
sub
lock
pop
je
cmp
outsl
sbb
push
mov
lods
lahf
pop
and
push
js
popf
jecxz
add
shrl
cmpsl
jecxz
pop
inc
js
adc
sub
outsb
or
ja
jne
dec
mov
fsubrs
dec
inc
sub
jle
cmp
insb
dec
nop
mov
lds
test
je
std
ud0
mov
fcomps
in
insb
cli
and
cmp
in
in
jmp
ret
lods
jmp
lods
js
jle
push
mov
arpl
sub
cmc
icebp
push
test
adc
subl
pusha
je
sbb
inc
fmul
shll
mul
mov
add
out
ret
andl
mov
lods
push
mov
rorl
mov
sbb
xor
cmp
cmpsl
enter
push
mov
fwait
push
cmp
aad
ret
jno
ljmp
jle
gs
push
ret
lds
push
data16
pop
push
jmp
mov
cmp
adc
jle
loope
inc
faddl
call
out
fisttpll
repz
aad
aas
cmpsb
lahf
mov
icebp
data16
fstl
and
cwtl
jb
popf
aam
jae
sbb
bnd
in
add
adc
and
or
bound
pop
dec
movsl
mov
jle
mov
test
pusha
xor
roll
xor
inc
insl
aaa
cmpsb
sub
push
int3
push
cmc
js
cwtl
mov
xor
lcall
mov
lds
mov
cmp
mov
add
je
inc
in
inc
fildll
cld
jb
push
and
inc
and
sbb
test
cwtl
movsb
les
mov
or
mov
jno
es
adc
js
and
loop
lds
sbb
jp
aaa
push
or
pop
stc
das
pop
rol
pop
das
mov
mov
mov
and
lahf
xor
cmovno
pop
sbb
loop
int3
repnz
int
int3
push
jne
lock
in
sbb
mov
xchg
sub
test
push
and
cmc
dec
pop
nop
inc
dec
dec
mov
adc
ret
nop
loopne
xor
loop
repz
in
pop
sti
inc
ftst
push
imul
insw
in
sub
lahf
xchg
fiaddl
sub
nop
jg
jg
add
mov
or
adc
xor
bound
out
imul
subb
hlt
mov
aaa
dec
clc
fistpll
sbb
or
mov
ljmp
divl
sub
mov
xchg
adc
data16
lcall
es
mov
cltd
pop
add
dec
movsl
sti
push
test
jle,pn
and
sar
test
arpl
or
push
pop
test
and
js
or
mov
fimull
adc
ljmp
sbb
outsb
cmp
notb
xor
xchg
jae
jno
lock
jecxz
mov
nop
int
mov
loope
jle
fstl
rcrb
mov
into
les
insl
in
adc
inc
icebp
test
push
sbb
imul
cld
jo
pop
lret
add
ja
loope
mov
pop
add
das
xchg
sti
cltd
rorl
adc
je
imul
sbb
hlt
fisubs
inc
push
lods
add
xor
mov
mov
push
push
inc
pop
call
pop
sbb
xchg
insb
pop
dec
jmp
loop
mov
das
out
repz
mov
add
jnp
pop
fsubrl
jecxz
push
cmp
and
cmpsl
pop
addr16
testb
xchg
std
pop
add
xor
aad
ret
adc
sarb
cmc
and
adc
push
sub
sbb
daa
fistl
lods
fistpl
mov
fcoms
jg
dec
sub
int3
int
mov
mov
rcrb
addb
orl
cmp
add
xlat
fdivl
mov
jmp
repnz
jle
cmp
jnp
adc
inc
or
pop
mov
or
aam
repnz
lahf
nop
pop
cpuid
in
daa
push
adc
iret
and
rorb
pop
xchg
stos
mov
pop
xchg
pop
sbb
xchg
out
dec
fstps
sub
jmp
ljmp
popa
lods
daa
notl
sbb
jle
sti
pop
pop
ret
xchg
inc
rcr
xor
fwait
pop
mov
icebp
xchg
fldl
cld
pop
pop
out
fsubrs
lods
sub
lret
lret
ja
popa
addr16
add
cld
lds
and
out
xchg
ljmp
inc
push
test
aad
and
addr16
mov
rcrl
negb
and
sbb
mov
pusha
sti
nop
aad
jp
mov
test
sub
ror
jae
rclb
adc
inc
lcall
sub
inc
add
cmpsl
pusha
test
push
es
out
dec
and
jmp
in
in
dec
mov
push
sbb
scas
call
inc
or
adcb
add
out
inc
rcrb
out
ljmp
jo
lock
dec
lods
add
jne
pusha
out
and
add
arpl
scas
mov
xchg
add
xchg
sub
jge
lods
sub
mov
je
inc
loop
or
adcl
add
xor
mov
ret
mov
repnz
mov
dec
sub
cmpsl
xchg
int3
int3
rcrl
jle
les
adc
mov
sbb
cmpsb
out
inc
or
ret
ss
cmp
test
out
push
sub
fiadds
mov
or
jns
lahf
enter
xor
out
ljmp
repz
loope
pop
xchg
jns
fbld
jne
insl
outsb
xchg
pop
pop
loope
data16
add
xor
add
add
xlat
mov
cmpsl
adc
jl
mov
and
push
sbb
dec
and
pop
push
jmp
jp
popf
faddl
or
test
or
cmpsb
lods
add
fistps
mov
lcall
cwtl
mov
push
mov
hlt
movsl
insl
shlb
into
xchg
int
sbb
subl
push
dec
in
bound
xlat
lret
scas
gs
sub
add
mov
sti
notl
leave
xchg
mov
mov
nop
lret
pop
nop
sub
lcall
mov
xchg
in
lcall
pop
xor
in
mov
popf
jmp
jle
ljmp
insb
add
push
add
mov
xchg
adc
fmulp
xchg
negb
add
rorl
jp
test
or
jg
pop
lret
shrb
push
or
adc
mov
lcall
int3
pop
jne
notb
mov
cmp
jne
gs
call
push
sub
pop
iret
pushf
shlb
cmc
cli
ja
cld
add
mov
pop
sbb
insb
test
mov
shr
xchg
cmp
mov
push
and
nop
dec
and
cmp
ja
ds
mov
leave
loope
xor
sbb
call
xchg
push
cmp
xor
cmp
test
fs
mov
mov
pop
jae
or
popf
mov
xchg
sbb
jb
pop
xor
xor
cmc
sbb
outsb
call
sub
mov
fsubp
clc
out
popa
lock
or
sub
jmp
stos
scas
mov
mov
jns
add
int3
adc
mov
push
sahf
int
out
das
xchg
lahf
sahf
into
pop
js
cli
cmc
int
jnp
addb
cmp
fistl
xor
or
addr16
and
push
daa
mov
cmpsl
das
insl
lcall
and
std
enter
push
test
pop
cli
mov
pop
mul
pusha
xor
lret
push
mov
pop
push
cmc
jne
cld
leave
xchg
loope
inc
outsl
push
aaa
in
sub
int3
push
add
fs
or
push
test
int
scas
add
mov
fisttpl
bswap
lcall
or
jo
inc
arpl
sub
test
inc
or
imul
int3
inc
fcmovnu
push
rol
hlt
notb
inc
sbb
fiadds
hlt
scas
push
cmpsb
flds
clc
popa
cmp
int
xchg
roll
faddl
add
mov
jo
sbb
push
cmp
mov
in
cmp
lret
pop
pop
test
mov
push
mov
pop
sbb
sarl
or
ljmp
or
push
or
cld
mov
stc
shr
push
sub
mov
ret
sarl
aad
and
insb
test
scas
dec
outsl
loop
ja
push
inc
push
push
insb
and
call
repnz
cmp
std
in
jmp
cmp
pop
inc
mov
pop
sahf
in
test
sbb
push
ljmp
aaa
mov
daa
mov
popl
out
call
cwtl
outsl
movzbl
and
inc
lea
mov
jns
lcall
mov
mov
xor
movsl
and
cwtl
sbb
les
xchg
ss
push
out
enter
bound
xchg
mov
aaa
lret
ss
jb
and
cltd
loope
mov
add
sbb
int
pop
shl
push
lea
inc
test
dec
push
mov
imul
dec
lods
pop
es
push
push
pop
xor
fsub
and
mov
repnz
loope
mov
in
xchg
repnz
pop
fwait
mov
cmpsl
push
aad
mov
jns
push
jg
shll
dec
fwait
mov
out
mov
shl
xor
sub
xchg
lret
inc
and
dec
ja
add
addl
inc
and
xchg
dec
sub
dec
jns
and
repnz
mov
inc
test
xchg
xchg
sub
xchg
cmp
movsb
mov
jle
test
fsubl
mulb
mov
lds
jns
aad
rcll
lea
mov
mov
mov
pop
xor
lods
pop
sub
xchg
mov
movsl
mov
mull
call
jge
jns
ds
or
stos
rcrb
adc
and
add
mov
cmpl
pop
push
pop
xor
lods
fcmovu
xchg
daa
daa
test
bound
cmc
sbb
mov
test
data16
jecxz
mov
fnstenv
mov
or
cmp
aad
call
sbb
mov
cmp
cs
mov
mov
cmp
dec
mov
sahf
notl
sbb
std
mov
mov
out
out
mov
mov
mov
hlt
or
mov
lcall
into
into
push
pop
aam
push
cmovp
imul
shl
jecxz
les
ja
jle
cmovg
cmc
lods
hlt
xchg
loop
jbe
mov
xchg
stc
sub
pop
gs
outsl
testb
xchg
in
stos
rcr
andb
jnp
push
mov
sbb
pop
mov
cld
fmulp
mov
sti
popf
cmc
dec
cmpsl
stc
xchg
notb
xchg
pop
mov
ret
cmp
icebp
neg
pusha
sub
and
jns
rorl
mov
jp
xor
push
test
sub
push
push
in
pop
dec
pop
aad
js
fildl
mov
sub
bound
xor
dec
pop
dec
out
or
push
test
jle
call
add
mov
cmp
fistps
lea
nop
into
jnp
out
int3
push
jae
push
xor
gs
cmp
dec
push
mov
mov
xchg
ret
shll
cmp
scas
lods
les
lret
sbb
sub
shl
cli
fs
in
adc
leave
jp
outsb
sahf
aad
cmpsl
shrl
inc
stos
jge
in
cmpsb
and
xor
mov
fs
push
xchg
or
push
jns
cmp
in
jecxz
test
icebp
mov
test
push
lods
lahf
bound
mov
push
xchg
sarb
sbb
test
jg
es
out
and
hlt
and
push
adc
xchg
push
stos
mov
out
adc
jno
fsub
loopne
nop
mov
cs
xor
popa
test
pop
xchg
addr16
or
push
mov
push
pxor
rcrb
rol
jno
mov
mov
fsubp
jae
aas
adc
es
add
xchg
xor
jb
cli
add
add
repnz
les
jmp
jge
cmp
stos
shr
add
push
mov
fcoml
xor
sub
or
dec
mov
cmp
cmc
out
mov
lahf
mov
dec
mov
inc
cmp
lds
leave
sti
cmc
cltd
outsl
mov
and
repnz
pop
mov
shrl
xorb
xchg
jmp
je
popa
movb
xchg
jo
andb
xchg
aam
xor
push
mov
mulb
push
scas
movsb
insl
adc
and
sub
sub
or
es
pusha
pop
aas
push
mov
lods
shrl
mov
jecxz,pt
adc
cli
mov
jg
adcl
add
jbe
jge
and
pusha
sub
jmp
loope
add
xchg
dec
insb
cmc
clc
jp
lods
mov
dec
mov
mov
stos
popa
or
mov
xor
or
xchg
loop
cmpl
xor
add
test
imul
and
xchg
imul
pop
mov
lahf
imul
es
addr16
test
xor
in
sbb
rol
es
cmp
fldenv
das
mov
inc
inc
vmread
inc
push
out
jmp
push
push
adc
push
hlt
dec
in
jno
clc
mov
ds
das
push
pop
and
icebp
pop
mov
sub
xchg
inc
xchg
dec
or
mov
adc
inc
in
mov
pop
xchg
mov
sub
or
sti
jl
ret
mov
and
jl
cli
mov
sub
jecxz
push
aad
jnp
lcall
jno
gs
bound
lock
cmp
push
jne
clc
lea
dec
inc
test
sub
dec
cmpsl
loopne
or
mov
in
jbe
xchg
mov
inc
cltd
stos
cltd
enter
std
and
or
adc
or
aad
pop
xor
jmp
or
andb
dec
cs
push
pop
mov
or
cwtl
nop
mov
jecxz
dec
lcall
cli
in
pop
fwait
pop
or
stc
push
pop
ret
mov
int
je
xor
les
insl
loopne
in
xchg
pop
sub
and
jle
jp
and
push
shrl
and
gs
push
add
jo
mulb
insb
jae
mov
sbb
divl
sbb
sub
imul
or
int
xchg
push
ret
pop
movsl
pop
fisubl
aam
xor
negw
xchg
push
stos
xchg
jl
pusha
in
mov
lods
push
push
push
xor
push
dec
aas
inc
fisttpll
jl
xor
sbb
es
call
pop
dec
add
xchg
and
mov
sbb
imul
jae
inc
inc
pop
and
and
fwait
scas
shll
lahf
daa
add
mov
pop
inc
mov
push
push
add
fsubl
xor
pusha
adc
dec
and
xchg
push
dec
and
daa
clc
insl
xor
push
call
repz
ret
or
pop
jle
dec
xchg
cmp
je
loope
inc
mov
aad
stc
inc
out
pop
cwtl
cltd
rcrl
cmp
lret
adc
loope
add
jmp
xor
pop
or
shll
cli
jl
xchg
ret
inc
stc
mov
subl
push
rcll
mov
iret
push
popa
lods
lret
xor
dec
hlt
add
arpl
les
andl
push
lea
in
ljmp
xor
mov
pop
xchg
mov
sbb
xlat
lahf
xlat
call
mov
pop
push
inc
mov
sbb
inc
push
mov
dec
subb
imul
and
sub
repnz
push
xchg
sbb
mov
ror
ficomps
clc
ret
xor
pusha
push
pop
outsb
scas
ret
ret
ljmp
lret
cli
sbb
mov
aaa
rclb
dec
cltd
outsl
clc
push
inc
and
ja
data16
aam
ret
pop
add
cmp
mov
lock
cmp
into
pop
cmp
sarb
sub
or
mov
xchg
xor
jmp
push
mov
add
in
ljmp
int3
hlt
in
shr
ja
orl
push
inc
lods
mov
lret
iret
fwait
push
pop
or
sahf
mov
dec
pusha
aad
push
in
jb
ljmp
fwait
daa
ficoml
ja
pop
mov
sub
cmp
jns
add
mov
adc
in
repnz
jae
cli
add
sbb
mov
loop
push
jnp
and
add
mov
outsb
adc
xor
ja
fcmovnu
jp
addb
out
cmp
xor
or
movsb
inc
outsl
cmp
cmc
pop
lret
in
inc
pop
mov
jl
scas
mov
in
aaa
in
adc
push
out
xor
dec
add
jns
or
xor
dec
addr16
mov
pop
push
jge
inc
mov
mov
popa
data16
mov
xor
adc
in
fs
int
dec
mov
pop
es
call
mov
cmc
jb
adc
mov
jp
mov
nop
or
ret
jo
enter
xchg
movsl
add
xchg
std
adc
mov
and
into
push
mov
rcl
out
cmp
jbe
dec
cltd
pop
lret
stos
mov
rorl
mov
pop
paddb
mov
sub
rolb
aas
loopne
mov
mov
inc
pop
dec
pop
popf
sub
out
sub
xor
mov
or
pop
mov
fwait
or
sarb
mov
mov
out
push
lock
in
push
add
push
cmpsb
jnp
add
inc
and
test
rdmsr
ret
push
fistpll
cmp
ror
popa
ftst
mov
or
jnp
jae
jge
outsb
mov
cmpsl
push
pop
jb
inc
jecxz
test
xchg
lret
push
inc
lods
out
add
mov
dec
test
sbb
pushf
repz
and
mov
outsl
cmp
jo
imul
and
xor
pop
xchg
test
into
es
xchg
mov
loop
js
or
adc
push
fdivr
repnz
dec
out
lds
pop
push
push
push
push
mov
aas
cmp
sbb
jl
and
inc
push
xlat
xchg
insb
mov
stos
jecxz
arpl
cs
rolb
inc
jp
xor
push
int3
push
sbb
push
xor
ret
mov
mov
lret
repnz
mov
sub
test
sub
jge
mov
icebp
dec
mov
iret
pop
push
cmp
dec
lret
push
xchg
mov
shr
xchg
mov
test
xlat
sbbb
jne
or
aas
inc
je
xor
aad
jbe
jb
and
iret
sub
mov
cmpsl
out
lods
shlb
mov
fstp
sahf
and
rorb
push
sbb
stos
rclb
mov
out
cmp
sbb
mov
popl
jecxz
in
dec
in
inc
ljmp
sbb
inc
mov
mov
fstp
push
xchg
pop
mov
mov
mov
lock
or
mov
cmp
or
aaa
popf
jnp
outsl
test
push
inc
in
push
inc
sahf
pop
xchg
lock
pusha
add
mov
mov
test
cmc
aad
xchg
icebp
stos
xlat
xor
std
xchg
test
or
add
jp
stos
icebp
enter
imul
push
in
adc
fs
ficoml
int3
daa
mov
cmp
mov
and
and
jl
ret
ja
adc
dec
mov
rcll
or
addr16
out
push
fisubrs
push
jb
movsl
pop
mov
inc
mov
xor
aam
push
call
in
lea
inc
and
cmpsl
xor
sti
jb
test
push
movsb
jae
xchg
sub
dec
clc
aad
leave
xchg
in
cmpsb
mov
mov
mov
cmc
pop
cmp
roll
and
jmp
jb
negb
xchg
fs
int3
pop
mov
add
sbb
inc
stos
adc
into
xchg
cmpsb
sub
lea
inc
loop
dec
shll
addr16
ss
jo
enter
mov
loope
ljmp
jmp
stc
xor
cmpb
iret
dec
jae
cmp
hlt
fiadds
lret
pop
and
stos
lds
fdivl
or
xor
xchg
and
mov
inc
out
mov
in
add
xor
push
mov
and
cld
int3
fidivrs
adc
xchg
jnp
sbb
popf
and
dec
in
dec
mov
xor
mov
sbb
daa
pop
sub
dec
int
fsubrs
cwtl
loop
xchg
ret
addr16
pmaxsw
cs
pop
out
mov
hlt
push
inc
mov
test
mov
pop
movsb
insb
sbb
mov
rolb
pop
or
sub
add
ja
push
aad
jae
jge
fisubl
fiadds
xchg
pop
subl
add
adc
mov
leave
mov
adc
sbb
inc
lea
add
hlt
aad
lahf
unpcklps
inc
in
xor
jle
mov
mov
stc
stos
mov
jo
ficoml
adc
stc
scas
jge
int
jno
lcall
adc
pop
stos
sbb
lock
mov
test
fadd
or
dec
adc
lea
cmp
rcrl
sub
push
leave
aas
scas
mov
iret
sub
shrl
cmc
clc
insl
and
in
lods
out
sub
shlb
pop
mov
adc
ljmp
iret
data16
cmpsb
fnsave
and
push
sti
mov
xchg
out
push
pop
add
lahf
lahf
mov
dec
lahf
jae
faddp
cmp
sbb
mov
adc
xchg
ljmp
xor
inc
cmp
je
xor
pop
in
pop
mov
mov
jle
mov
shrb
sub
xchg
pop
inc
add
insb
fcomps
in
fdivrs
insb
sti
movsb
call
stos
in
xor
insb
xchg
outsl
imul
push
sub
call
xor
jl
pop
push
mov
sub
sub
sbb
xor
and
xchg
cli
mov
fcoms
push
push
xchg
addb
adc
lods
and
mov
push
inc
mov
and
into
pop
inc
cmp
pop
cld
mov
lods
mov
pop
dec
mov
adc
fs
adc
and
cmp
mov
push
cmovge
pop
pop
movsl
add
cmp
mov
jo
add
sbb
ljmp
arpl
repz
fstp
sarb
pop
fs
mov
push
insb
xor
push
cltd
push
ja
lock
cli
sbb
xchg
inc
and
jns
inc
addr16
lret
sub
mov
mov
mov
push
aam
cmp
aaa
and
aaa
loope
sbb
xchg
push
sti
ljmp
dec
push
jmp
js
mov
add
lret
popa
pop
mov
mov
sbbb
adc
outsb
cltd
jne
insw
mov
xchg
testb
fisttpll
arpl
ja
addb
lea
repz
cltd
test
pusha
jno
mov
enter
push
and
mov
inc
cmp
cmp
frstor
imul
shr
nop
adc
inc
loope
stos
addr16
ja
cmp
add
sahf
fadds
cmpsl
mov
xchg
aad
out
shr
push
add
icebp
pop
mov
not
leave
add
hlt
js
insb
mov
or
and
xchg
sub
sbb
pop
mov
push
mov
mov
shlb
mov
jns
inc
inc
pusha
les
jmp
pop
idiv
cld
push
hlt
repnz
fcoml
xchg
inc
xchg
push
add
push
jno
and
in
pop
repz
mov
into
scas
sti
bound
outsb
mov
cmp
aaa
pop
enter
cmp
push
stos
mov
pop
xchg
mov
push
es
jp
movsb
pop
jno
dec
dec
mov
mov
fldenv
push
shlb
pop
jnp
fsubr
mov
mov
mov
cli
sbb
dec
and
orb
cmpsl
jno
outsl
jmp
rcrl
inc
cs
hlt
stos
out
jae
mov
movsb
push
and
or
adc
or
daa
adc
sti
mov
ja
xor
push
or
or
iret
test
gs
xor
ret
sbb
mov
dec
pop
mov
inc
dec
fwait
push
dec
push
push
jecxz
lods
icebp
clc
bound
adc
rcrl
lcall
xor
inc
inc
add
sbbb
inc
cli
mov
ljmp
sub
xchg
lea
cwtl
jb
lcall
fdivr
gs
shlb
jmp
xor
hlt
sbb
ror
stos
bound
mov
enter
pop
xchg
in
sahf
push
out
mov
lods
adc
jmp
lds
popa
hlt
fs
jp
in
jae
or
lahf
mov
pop
inc
jbe
xchg
push
fs
js
jbe
pop
dec
hlt
rcrb
hlt
inc
mov
add
sbb
xor
push
sti
jle
sahf
dec
or
pop
jge
aaa
sub
add
xchg
cmp
xchg
xchg
mulb
xchg
movsb
and
push
push
jg
dec
lahf
je
or
fstps
ror
mov
xor
lret
fidivrs
push
mov
into
xor
sub
or
in
jmp
lds
jg
pop
mov
mov
fcomps
adc
test
cwtl
add
inc
rclb
nop
cltd
outsl
out
dec
movsb
in
cmp
push
sbb
sbb
inc
mov
mov
push
cli
xchg
inc
mov
jae
vpaddd
sahf
add
cwtl
inc
xchg
cmp
shrb
cli
jle
xchg
popa
xchg
outsb
loope
adc
adc
push
sbb
lcall
pop
cli
cld
pop
cmp
ljmp
pop
push
les
mov
xchg
add
and
and
and
addr16
data16
sbb
mov
sbb
sbb
cmc
leave
sub
cmp
jmp
cmp
sbb
push
jp
fwait
icebp
adc
lahf
mov
mov
pop
dec
xchg
pop
pop
and
and
xchg
mov
icebp
inc
cli
and
mov
not
push
lret
xlat
or
lcall
push
push
or
and
inc
dec
add
push
inc
fmul
mov
fs
push
jp
loope
or
cmp
out
ljmp
push
sub
aad
test
push
cmpsl
push
aam
fsub
cmc
xor
push
cld
inc
enter
dec
notb
sub
jp
pusha
inc
divb
or
aam
je
ss
aad
pop
shrb
cli
movd
out
sbb
out
pushf
and
test
sti
mov
jge
xchg
add
shl
les
ret
sub
push
fdivr
adc
xor
push
cmp
pop
adc
aad
test
push
xchg
shll
mov
push
enter
daa
adc
insl
repnz
data16
or
clc
and
inc
insl
push
sub
lods
cmp
psubusb
je
rcrb
mov
std
pop
mov
daa
pop
insb
mov
and
lods
jns
adcl
bnd
mov
jbe
add
stc
mov
inc
loopne
sub
add
fnstcw
out
xchg
js
jp
int3
repnz
insl
xor
cmp
mov
and
push
jno
daa
sbb
mov
push
push
xchg
lods
call
adc
sbb
pop
inc
sub
cmp
mov
js
sti
jo
push
addr16
cmpsl
push
mov
xchg
lock
add
xor
or
mov
scas
pop
xor
imul
in
xchg
test
mov
or
ja
dec
in
push
repnz
cltd
inc
pusha
and
adc
icebp
call
add
nop
and
mov
nop
dec
sbb
rol
data16
push
mov
mov
add
xor
sbb
sbb
sub
jae
std
adcl
loop
movsb
insl
movsb
add
repz
sub
and
mov
ret
adc
push
shll
jbe
jae
filds
sbb
lods
dec
lret
leave
push
push
sub
push
loopne
push
push
outsb
mov
add
dec
les
or
in
push
in
insb
or
sub
adcb
inc
sub
jg
adc
addr16
insl
stc
dec
mov
movsl
das
aaa
lods
idivl
sbb
int3
mov
mov
int3
sub
pop
or
lcall
lods
hlt
push
scas
jbe
cld
fwait
testb
or
mov
cmp
sbb
ja
aaa
cmp
loope
js
push
bound
ret
fistl
cmp
sbb
mov
jecxz
lea
xor
or
jecxz
cmpsb
sub
jl
in
push
adc
les
stos
addr16
push
xchg
add
insb
sbb
mov
insl
movsb
pop
inc
int3
adcb
push
movsl
pop
xchg
add
das
arpl
sbb
adc
or
ret
sub
shrl
or
inc
aas
fldcw
sbb
adc
or
sub
inc
mov
stc
les
mov
or
mov
ss
wbinvd
scas
cmp
in
push
xchg
lock
mov
lea
aas
outsl
ret
xchg
int
sbb
mov
dec
cwtl
sbb
subl
aas
cmp
das
repz
inc
scas
cwtl
jg
lea
sub
sbb
mov
mov
sub
jnp
push
lret
pop
mov
fmulp
clc
cmp
add
shll
imul
and
mov
push
inc
xchg
data16
add
popa
cld
dec
outsb
xchg
in
sub
ret
addr16
adc
cs
mov
adc
lret
jg
xchg
xor
lock
pop
not
or
fimull
int3
cmp
cltd
into
and
jns
push
pop
sub
leave
dec
cmpsb
mov
sub
cmp
je
lds
dec
xchg
push
sbb
outsl
mov
push
inc
fisttps
test
bound
adc
add
mov
sbb
mov
cmc
into
mov
loope
xor
and
xor
outsb
cmp
jecxz
mov
outsb
push
hlt
rcrb
mov
inc
and
pop
lods
dec
shlb
pusha
adc
ror
push
ror
xchg
jns
test
add
imul
dec
sbb
pop
and
inc
dec
stc
and
addl
rcrl
cmp
xlat
cmpxchg
xor
jmp
lahf
xchg
andl
jmp
xchg
push
ljmp
mov
cmp
and
jle
std
mov
and
subl
jae
jb
add
fmull
xchg
pop
mov
xchg
mov
lods
je
bound
sbb
mov
repz
mov
pushf
in
add
add
fsts
add
pop
mov
inc
stos
and
jle
mov
inc
outsl
ljmp
outsb
inc
add
inc
inc
jmp
xor
cld
andl
sahf
das
mov
dec
inc
es
jg
sbb
clc
int3
stos
jo
loopne
outsl
fs
in
mov
or
ret
idivl
mov
out
mov
mov
js
jg
and
fisubrs
arpl
mov
cwtl
repz
into
std
xchg
lea
add
aas
xchg
cmp
int
adc
jo
in
push
faddl
int
sbb
sub
into
test
outsb
rorl
fwait
movsb
neg
add
mov
divl
cmpsl
dec
inc
sbb
sbb
inc
xchg
in
cmp
int3
mov
jb
or
insb
fs
sbb
dec
mov
push
jle
aaa
das
scas
fstpt
outsb
push
xor
adc
sbb
xlat
aad
pop
xchg
cmp
xchg
sbb
scas
pushf
cmp
lret
pop
aad
dec
inc
loope
leave
fidivl
push
arpl
cwtl
and
mov
sub
lahf
fwait
cmp
lret
js
pop
pop
inc
fldenv
pushf
std
jmp
setns
movsl
push
dec
fsubrl
faddl
popf
and
mov
ret
cmpsl
mov
stos
mov
repz
sub
sti
addr16
pop
jg
ds
gs
les
js
xor
or
icebp
sbb
adc
neg
stos
mov
in
jg
vmovapd
repnz
mov
rcr
mov
lods
jnp
xchg
fs
xchg
dec
and
cmpsl
popf
aas
xchg
les
and
inc
scas
ret
test
cmp
arpl
mov
push
jl
test
jb
inc
ret
sbb
sbb
push
cwtl
out
in
xor
pop
rcrl
or
mov
fistps
dec
inc
jge
xorl
andb
nop
js
shlb
repnz
mov
test
ss
pop
es
test
or
dec
cmpsb
inc
or
aam
dec
push
mov
cmc
lret
pop
pop
and
or
daa
adc
test
lahf
fcoms
outsb
shr
push
xor
cs
push
cli
in
dec
arpl
imul
sub
sbb
clc
pop
pop
lret
shlb
dec
sub
jecxz
or
cmp
mov
enter
mov
fldcw
test
sub
sub
mov
ss
dec
ret
jae
adcl
xor
into
cltd
repnz
lods
shl
lea
repz
mov
std
and
jns
mov
mov
pop
mov
into
sahf
inc
mov
dec
cmp
sub
scas
push
lds
xlat
out
sti
popf
cmp
xchg
addr16
mov
push
sub
sub
add
popf
mov
jns
inc
cli
fsubrl
lahf
mov
push
sbb
bound
aam
sti
repz
std
popa
sbb
test
shrl
insb
imul
jae
xchg
in
faddl
in
les
ljmp
ficoms
fsubs
mov
enter
sub
mov
mov
xor
or
arpl
imull
xlat
aad
or
add
fwait
hlt
insb
in
pop
mov
mov
arpl
rclb
adc
ret
bswap
mov
add
call
cmpsb
pusha
push
push
inc
and
jg
lea
jbe
lds
and
or
int
fucom
xchg
and
in
test
adc
sub
gs
stc
daa
xchg
xchg
jno
xor
inc
fadds
xor
push
imul
into
sbb
add
xchg
insl
bound
push
xchg
or
in
nop
int
clc
test
mov
out
mov
fbld
sbbl
pushf
dec
mov
lret
out
adc
dec
test
push
sti
push
cltd
xchg
mov
adc
push
jnp
push
es
lds
mov
sub
mov
inc
out
xchg
mov
xchg
in
or
movsb
cmp
pop
dec
mov
mov
and
or
mov
into
das
xor
lcall
fcmovbe
fidivl
dec
mov
fiadds
mov
xchg
ret
inc
xor
mov
inc
imul
cmp
and
or
test
dec
mov
lahf
xor
js
imul
push
hlt
add
out
sub
ret
push
insl
dec
sti
das
sbb
jl
dec
sti
rcrb
xchg
mov
pop
mov
aam
mov
adc
test
inc
add
daa
inc
xchg
stos
stos
lret
and
push
jne
xor
add
push
sub
inc
push
aaa
outsb
jno
jecxz
sub
pushl
cmp
aam
jns
jbe
mov
test
inc
hlt
fisubs
xor
out
mov
xchg
scas
ljmp
les
in
rolb
sbb
lcall
arpl
mov
popa
int
daa
push
mov
sarb
push
loopne
popa
sub
adc
std
and
mov
lahf
push
loop
push
mov
xor
pop
xchg
aaa
adc
arpl
cmp
sbb
repnz
or
mov
jbe
lods
das
push
inc
jle
out
mov
pop
sahf
fisttpll
adc
outsl
int
test
and
mov
sub
icebp
pusha
xchg
xor
lcall
das
xlat
repz
fmulp
lock
mov
adc
push
adc
jnp
shlb
xor
das
call
jmp
pop
shrb
daa
leave
dec
movsb
jno
mov
sub
jno
nop
push
sbb
mov
in
xchg
inc
and
add
popf
imul
adc
scas
popf
cmpsl
inc
ret
jb
ret
insb
stc
test
or
xchg
andb
sub
int
mov
roll
pop
stc
testb
out
push
adc
bound
jo
add
les
les
pop
out
sub
push
jle
test
push
jo
jmp
in
mov
mov
fadds
fisttpl
nop
push
imul
mov
mov
adc
cmp
jae
aad
xchg
addr16
cmp
popf
jns
xchg
cmp
jno
mov
sar
es
adc
popa
push
adc
inc
mov
pop
ror
mov
cmp
cmp
loope
dec
xchg
pop
shlb
das
adc
push
clc
mov
lcall
push
cld
subb
jmp
ja
mov
dec
mov
mov
pop
in
jl
faddl
loope
mov
stos
stos
rolb
fsubrp
leave
inc
and
jmp
movd
xlat
add
xchg
pop
in
mov
pusha
lods
int
xchg
inc
js
das
xor
sub
call
jnp
inc
dec
idivb
pop
insb
adc
int
push
sti
mov
iret
jb
or
add
jg
test
and
mov
fsincos
enter
and
loope
shll
loopne
cmp
lods
xor
in
push
jae
push
fadds
cmp
adcl
sar
xchg
jge
test
adc
jo
leave
insl
movsl
mov
inc
pusha
popa
mov
sbb
sub
lcall
out
iret
pushf
fsub
roll
xchg
jb
mov
lcall
mov
push
jl
andl
loopne
jae
xchg
subb
mov
pop
jmp
push
sub
jle
aad
jns
int3
ret
jp
je
and
outsl
out
movsb
loopne
out
adc
hlt
stos
cmp
and
addb
add
adc
loop
cmp
pop
fs
divl
out
dec
and
and
sbbl
and
outsl
adc
pop
adc
xchg
or
inc
lea
aaa
pop
sbb
xchg
das
imul
fstp
in
or
dec
aaa
pop
sub
fsubl
mov
out
es
maxps
mov
leave
in
cmp
pop
call
jb
xchg
cmp
push
fisubrl
test
mov
call
dec
fwait
cmp
xor
std
ljmp
stos
cmp
std
dec
and
dec
popw
dec
imulb
pusha
mov
cld
imul
and
inc
dec
xor
inc
imulb
xchg
insb
insl
shll
pop
outsb
jno
ss
aas
dec
cmpsl
sarb
stc
jp
faddl
lret
mov
sub
inc
jo
push
lahf
dec
sbb
push
rolb
mov
addr16
push
and
adc
flds
or
xor
mov
pop
push
inc
xchg
daa
push
cmpsb
push
jo
stos
push
aam
ds
mov
mov
in
add
inc
scas
pop
mov
mov
lret
jne
insl
hlt
lea
adc
ss
mov
sbb
ss
dec
xchg
pop
mov
mov
jno
push
xor
hlt
hlt
pop
lods
push
mov
js
addl
insb
addr16
jnp
adc
imul
hlt
sub
and
cmp
leave
mov
lea
fdivrs
adc
cmp
adc
push
adc
sbb
mov
mov
sahf
cli
aam
jnp
mov
push
push
adc
jge
jno
int
mov
arpl
mov
add
sbb
popf
push
and
xor
mov
pop
xor
lret
outsl
and
nop
aad
push
pushl
es
js
and
and
mov
ret
icebp
sbb
jnp
add
jae
gs
repz
jg
pop
mov
icebp
loopne
cmp
test
pop
imul
ljmp
adc
adc
pop
les
lret
inc
mov
mov
mov
pop
out
arpl
test
ss
stc
pop
mov
push
insl
xchg
or
xchg
or
push
enter
cld
pop
sbb
fisubl
ret
dec
fisubs
mov
push
inc
add
es
stc
jg
aam
pop
popa
push
jo
add
adc
and
push
rcr
dec
pop
adc
xchg
mov
adc
jmp
imul
dec
test
jge
inc
push
adc
sub
jo
pushw
imul
inc
add
rolb
push
je
or
dec
sub
or
push
xchg
pop
jp
outsb
cmp
faddp
je
test
inc
fiaddl
shlb
mov
es
pushf
mov
mov
push
aas
xchg
cmp
xchg
call
pop
notb
std
pop
mov
dec
popf
negl
jns
fldl
inc
adc
test
pusha
jb
pop
lret
iret
in
sar
pop
out
jge
mov
loope
fldl
sub
pop
lock
mov
mov
je
xor
xchg
mov
pop
jb
xchg
lods
dec
cmpsl
pop
jns
xchg
movsb
xchg
add
xor
pushf
cmp
push
adc
loop
mov
test
leave
or
or
cltd
leave
popf
iret
inc
stos
sub
lds
icebp
daa
mov
push
jno
jns
jl
rcl
lds
imul
pop
or
sbb
and
sub
and
pop
fiadds
jge
loop
aad
add
ficoms
add
addr16
mov
cmpsb
int3
adc
or
sarb
adc
imul
cmp
jg
cs
arpl
cmc
sbb
xchg
stos
out
pop
mov
jp
lret
sbb
mov
jb
add
imul
jnp
xor
int3
push
pop
inc
jno
inc
add
mov
data16
movsl
gs
or
and
jae
push
adc
adc
addr16
cmp
mov
mov
imul
push
push
cld
mov
xor
mov
pusha
shll
arpl
adc
hlt
ret
add
outsb
loop
addl
out
mov
adc
cmc
enter
push
sbb
lcall
data16
pop
xor
add
repnz
cwtl
stos
repz
xchg
lods
cmpsl
push
sbb
xchg
outsb
cmpsl
jmp
pop
push
push
add
adcb
out
inc
inc
stos
jno
push
jo
add
xchg
rorb
pop
dec
das
pop
enter
movsb
push
sbb
mov
cmp
lods
lods
pop
jbe
fst
jecxz
lret
out
stc
mov
rorb
test
sub
mov
mov
jb
leave
lahf
loope
js
push
jge
aad
mov
je
push
out
pop
cmpsl
mov
push
lods
mov
cmpsb
pusha
aas
mov
notl
cmp
stos
popf
xchg
dec
pop
fwait
leave
data16
lock
arpl
and
and
cmp
in
scas
adc
add
mov
lock
pop
mov
cmp
je
mov
icebp
iret
push
ds
dec
lods
add
repz
out
fwait
or
test
mov
loop
add
push
xchg
jle
mov
mov
add
rcll
jo
inc
movsl
push
sbb
clc
hlt
xchg
pop
inc
and
adc
fmull
xchg
subl
mov
divl
push
into
pop
loope
loop
pushf
lcall
sbb
or
bndstx
dec
mov
push
add
aad
jno
movsb
outsb
xchg
popf
mov
inc
stc
pop
test
fisubrl
clc
pop
ss
idiv
mov
jmp
xor
sub
loope
ret
or
mov
push
scas
and
test
inc
ds
jle
add
into
outsl
dec
mov
popf
fs
and
xchg
add
mov
mov
and
fnsetpm(287
in
repz
std
cmp
std
push
sti
xor
mov
lret
data16
cmp
loope
lret
xchg
fstps
in
stos
lea
orb
aas
mov
pop
mov
mov
push
push
sbb
ds
out
out
adc
pusha
jle
inc
inc
pop
mov
idivl
sti
add
mov
mov
ret
pop
leave
mov
mov
jnp
sbb
xchg
into
mov
and
hlt
dec
into
andb
jne
aaa
stos
jo
pusha
xchg
fucomp
aaa
pcmpgtw
sbb
add
push
jecxz
inc
aaa
xor
sbb
jmp
xchg
jae
movsb
cwtl
stc
ret
leave
pop
orb
fwait
adc
cmp
cmp
in
dec
jno
lea
sti
rolb
std
mov
pop
fsts
sbb
das
adc
adc
lods
pop
lret
push
add
and
push
xor
or
push
pusha
rcll
popf
xor
inc
pushf
imul
and
push
out
adc
fdivr
pop
sub
cmp
sub
push
out
inc
mov
push
inc
or
push
push
pusha
outsl
cmp
jns
fxch
mov
enter
xchg
testl
dec
mov
sbb
in
mov
push
cmpb
int
repz
mov
mov
pop
mov
aaa
sbb
test
add
lret
push
xchg
inc
daa
sahf
xchg
pop
dec
mov
mov
rclb
dec
add
cmp
or
lock
in
outsl
loopne
icebp
xchg
test
xor
aas
lock
je
fnstsw
adc
adc
mov
xchg
unpckhps
and
and
xchg
stos
mov
add
and
popf
mov
adcb
push
test
xor
aam
gs
repnz
loopne
in
loopne
lcall
arpl
roll
sti
xchg
xchg
imul
in
into
and
dec
ja,pt
cltd
das
pop
cmp
sub
adc
arpl
inc
adc
sarb
out
das
push
addr16
xchg
pop
in
pushf
loop
imul
fdivs
xorb
mov
cmp
insb
stc
ret
dec
outsl
cmp
adc
imul
inc
push
icebp
jne
mov
mov
push
cmpsl
aaa
fwait
icebp
clc
ja
clc
sub
scas
push
xor
xchg
pop
inc
insl
test
sbb
push
pop
xchg
sbb
adc
jg
fwait
lods
loopne
int
les
mov
xchg
das
push
xlat
cmp
adc
js
out
in
mov
sbb
in
daa
push
les
mov
mov
or
fs
int3
push
test
out
lret
add
jmp
dec
test
bound
divb
jb
xchg
jle
push
cs
xchg
mov
lock
xchg
and
dec
sbb
cmp
push
ficoms
sbb
push
xchg
add
mov
push
xor
test
cwtl
push
adc
xchg
insb
stos
xor
mov
add
push
fwait
sbb
dec
call
jp
inc
nop
lret
cld
cli
cmp
add
inc
daa
rcll
stos
inc
test
and
mov
push
movsb
shrl
push
pop
xor
mov
ficomps
and
xchg
sbb
das
xchg
jge
pop
lret
hlt
jb
adc
int3
push
call
mov
hlt
dec
gs
xor
fisttpll
movsl
push
jecxz
jp
pop
fwait
int
in
lds
ror
jecxz
fnstcw
ret
mov
lea
and
cmpsb
adc
mov
xor
xor
push
lods
mov
es
orl
xchg
clc
add
stos
int3
inc
lahf
jno
cld
fs
cwtl
xchg
int
cli
lock
xchg
icebp
pop
xorl
fwait
lock
cltd
loop
andl
cmp
ja
int
pop
sub
std
cmp
push
xlat
mov
jae
mull
fisubrl
push
icebp
xchg
pop
cmp
inc
push
nop
sbb
test
insb
cmpsl
xchg
jmp
mov
imull
div
pop
sbb
mov
movsb
and
stc
pop
scas
jo
gs
mov
andb
fmul
mov
jnp
lea
push
arpl
int3
sbb
xor
cmp
and
pop
loope
mov
xchg
pop
add
or
push
clc
in
jle
mov
int
add
cmpsb
fs
sbb
lods
add
dec
outsl
mov
sarb
sub
cmpsb
inc
xchg
jmp
cltd
shrb
mov
lcall
fistpl
mov
sub
or
in
shll
mov
adc
push
bts
mov
emms
dec
cld
into
stos
push
and
out
xchg
inc
ret
insl
mov
in
pop
fistpl
inc
in
mov
dec
loope
sub
shrl
xchg
call
jne
sti
cs
es
sbb
mov
mov
repnz
add
fisttpll
scas
jns
cwtl
fwait
mov
iret
out
jp
jnp
or
loopne
push
pop
pushf
xlat
mov
sub
inc
dec
es
sub
mov
dec
ja
arpl
inc
ja
ret
sub
cmc
dec
mov
or
lret
test
xor
cmp
fnsave
movsl
or
sub
enter
loop
aad
mov
lods
pop
ds
test
mov
repz
mov
nop
mov
or
outsb
movsl
mov
sbb
inc
cmp
es
sbb
xor
setno
jmp
loope
out
dec
lods
data16
pop
fcompl
bound
mov
gs
les
jae
mov
lcall
add
nop
ret
mov
pop
push
jge
inc
pop
pop
roll
jb
mov
xchg
pop
and
bound
and
mov
dec
mov
call
loopne
js
push
add
leave
hlt
js
mov
sbb
sub
movsl
repz
jb
push
cmc
and
jo
cs
push
call
mov
mov
push
cmpsb
or
and
loop
cmp
test
das
mov
imul
adc
dec
pop
xchg
aam
push
aas
das
out
xor
loopne
in
fwait
cmp
inc
sbb
mov
sbb
outsb
clc
scas
outsb
lret
mov
push
data16
mov
xlat
fisubl
out
dec
outsl
aas
dec
and
mull
jnp
out
or
sub
movsb
cmc
mov
push
adc
lea
dec
mov
mov
add
stc
mov
jb
fsubs
add
fmull
and
xor
sub
mov
out
and
inc
cmp
sbb
movsb
mov
mov
shll
rcr
ret
lret
mov
out
bound
aam
add
jne
sahf
and
add
pop
in
mov
dec
cmp
add
cmp
sbb
lods
pop
iret
loop
mov
fmull
fcmovnu
test
xlat
pop
out
dec
add
sbb
jmp
rolb
imul
adc
push
pop
sbbb
pop
jle
stos
xor
test
ljmp
xor
sbbb
pop
sub
sub
cmp
mull
fdivrl
sbb
ja
jno
fwait
and
push
insl
mov
dec
sbb
lods
sti
outsb
mov
mov
mov
icebp
push
mov
push
jg
lret
mov
outsl
or
push
cld
xchg
aaa
xchg
and
mov
inc
cli
adc
cmp
sbb
fldcw
or
xchg
cld
sbb
lahf
mov
jae
dec
ficoml
cwtl
sub
outsl
inc
push
test
into
repz
loope
movsl
sbb
or
adc
jne
fs
add
cs
dec
mov
inc
xchg
dec
push
cmp
pusha
inc
mov
fwait
leave
lahf
ja
inc
lds
cmpsl
fists
xchg
pop
aam
jp
sbb
mov
stc
cmp
and
jnp
je
mov
inc
xor
cs
or
inc
xor
xchg
loopne
mov
aam
push
pop
xchg
pop
cmpsb
xor
lret
sub
mov
hlt
repz
jg
pop
call
pop
cmp
jnp
mov
and
stos
dec
dec
jmp
mov
int3
inc
mov
ret
in
xor
loop
mov
outsb
mov
xor
xorl
or
add
bound
daa
data16
inc
pushf
push
lods
mov
jno
inc
hlt
push
xchg
imull
aad
movsl
sub
ljmp
iret
add
jns
sbb
push
xchg
faddl
add
fistps
daa
clc
dec
mov
filds
or
dec
push
stc
xor
xchg
jb
jge
xor
sbb
lock
popa
xchg
roll
or
test
fisubrs
lods
mov
sahf
pushf
ret
add
sub
sbb
arpl
fwait
sbb
notb
mov
pop
push
cwtl
xchg
xchg
lret
push
or
test
xchg
loop
loopne
cmp
jno
clc
fisttpll
push
sub
lods
movsl
add
and
sti
pop
dec
cmp
xor
inc
cmp
rcl
xchg
scas
shlb
push
xchg
push
jne
popa
stos
sar
push
test
ss
ret
mov
fwait
and
cli
sbb
inc
push
sbb
pop
insl
les
popa
das
or
xlat
inc
adc
pop
xor
cld
add
call
or
and
xor
xchg
add
scas
jge
ds
ret
xorb
lods
xor
xor
cli
push
dec
adc
mov
sub
dec
cmp
pushf
push
or
mov
loopne
xor
push
aam
sub
aam
aas
adc
nop
cmpb
rcl
fdivl
xchg
clc
xor
inc
sbb
jl
sbb
cmpsb
push
add
cmc
imul
jne
push
inc
pop
mov
sarl
sbb
pop
adc
pop
cmp
lods
fdivl
fwait
in
sbb
and
loope
mov
iret
nop
mov
pop
xor
jecxz
or
ja
or
fidivs
inc
mov
jecxz
sti
sub
xchg
es
xchg
repz
repnz
add
insl
or
and
sti
lods
je
xor
jp
leave
ss
jmp
jmp
je
pop
lcall
outsb
xchg
cld
js
out
cmpsb
mov
inc
push
sbb
xlat
ljmp
pop
test
cmp
sbb
pushf
je
mov
adc
mov
test
jb
pop
xlat
sub
jbe
iret
insl
ss
jge
iret
mov
out
xor
xlat
pop
fnstcw
std
sub
cli
ljmp
mov
je
dec
mov
outsb
dec
xchg
pop
push
fsubrl
xor
out
jg
mov
dec
sbb
and
out
int
pop
outsl
cmpsl
in
testb
pusha
push
pop
add
jnp
iret
mov
pushf
cmp
leave
mov
ljmp
mov
push
sarb
movsb
scas
cmpsb
inc
add
popa
test
rcr
mov
adc
mov
pusha
jle
xchg
mov
fstpl
pop
push
int3
or
jnp
imul
mov
inc
xchg
outsl
test
adc
bound
aas
xor
inc
xor
mov
pop
dec
pusha
xor
pusha
sub
and
jb
xchg
xchg
ficoml
xchg
xchg
popa
sub
add
das
shlb
ljmp
clc
iret
mov
enter
es
pop
mov
mov
or
xlat
sahf
adc
arpl
inc
test
pop
aas
add
cld
xchg
das
push
dec
ds
xchg
outsb
lods
jne
adc
ret
cmc
ja
sti
cld
xchg
add
ljmp
insb
aad
loop
ret
mov
mov
ffreep
movsl
push
sub
jne
xchg
cmp
mov
pop
and
loopne
mov
rcll
popa
movsb
and
dec
sub
loop
pop
mov
lea
jo
mov
neg
aaa
inc
fstpt
push
aaa
adc
push
loope
outsl
addb
mov
fsub
sahf
mov
lea
mov
mov
int
test
xor
enter
mov
test
outsl
icebp
outsl
out
add
bound
ljmp
mov
mov
push
inc
sub
mov
loope
jmp
push
push
push
roll
into
orb
cld
dec
sub
es
popf
adc
cmc
loop
or
fs
lock
push
or
push
out
hlt
jbe
pop
ljmp
mov
in
cwtl
push
jne
aaa
mov
pop
out
subb
pop
jle
mov
dec
mov
jecxz
xor
sbb
int3
arpl
data16
je
mov
aas
outsb
or
int
mov
cmpsb
dec
bound
inc
out
mov
outsl
pop
push
push
rcr
mov
lds
sub
ds
jecxz
ds
dec
inc
cmpsb
cmc
adc
add
pop
movsb
mov
ja
cmp
dec
xchg
mov
inc
xchg
sub
push
out
inc
adc
popa
inc
jecxz
push
pop
nop
xor
into
out
arpl
repnz
mov
mov
and
mov
not
xchg
lcall
cmp
lods
aas
icebp
fstpl
adc
xchg
mov
mov
ljmp
out
or
test
sarb
mov
mov
sbbb
fidivrl
mov
cltd
fdivrs
fdivp
inc
cltd
jl
jecxz
mov
inc
pop
jne
xchg
pop
jp
push
clc
cmpsb
or
ja
push
jg
jge
sahf
std
sahf
and
jp
dec
cli
lock
pop
ss
adc
cmc
jle
jl
sub
lds
rolb
call
sub
push
test
jge
flds
xorb
xchg
cwtl
scas
adc
or
enter
push
sub
aad
push
cld
add
icebp
popf
les
arpl
cmp
cmpsl
xorl
lds
sub
jne
lods
mov
insl
insl
jmp
in
jns
mov
push
add
ret
adc
mov
push
jae
fnstcw
aas
iret
xor
fcmovu
pop
and
push
jnp
dec
dec
es
adc
lret
gs
clc
repnz
push
btr
std
ja
sub
cmp
mov
hlt
in
xor
xchg
les
jo
aas
push
sbbb
mov
pop
jl
push
fwait
subl
jl
movsb
mov
mov
ja
clc
inc
jmp
andl
enter
sbb
cmp
out
xor
adc
ja
push
mov
stc
push
cmp
and
sbb
push
int3
sub
pop
xchg
mov
inc
cmpsl
and
fnsetpm(287
test
ret
sub
test
arpl
inc
imul
push
jne
lods
mov
stc
ljmp
mov
and
ret
xor
mov
mov
push
xchg
adc
fstp
stos
outsl
icebp
inc
sbbl
rcrl
faddl
dec
jl
or
dec
cmp
cli
mov
sar
mov
sti
jecxz
aas
inc
mov
mov
in
mov
sbb
les
jne
enter
frstor
fsubrl
mov
popf
xchg
inc
sbb
add
jg
push
adc
xor
push
mov
jg
aaa
jbe
sbb
jne
adc
jp
inc
jl
repz
pop
iret
inc
push
sbb
cli
mov
mov
addr16
pop
lcall
adc
leave
jmp
sub
outsb
bound
stos
dec
mov
push
clc
pushf
int3
ljmp
add
add
jbe
xor
lods
movsb
sub
out
pop
lds
jmp
mov
add
dec
dec
pop
xchg
pop
mov
filds
jp
pop
jmp
fbld
icebp
imul
pop
add
adc
lds
push
lret
sarb
xor
das
and
mov
mov
shl
leave
repnz
iret
push
adc
mov
sahf
bound
orl
pop
push
outsb
shll
mov
pop
cmc
add
push
dec
leave
jecxz
add
aaa
mov
in
aas
push
int3
std
adc
nop
sbb
mov
dec
mov
repz
add
push
cmc
ss
mov
xchg
or
inc
lcall
jecxz
mov
jmp
cltd
out
iret
les
mov
mov
cmp
out
push
xorl
dec
inc
add
jp
mov
fucom
xlat
subb
sbb
mov
js
jmp
and
cld
movsb
pop
xchg
sahf
mov
loop
nop
add
add
movsl
jmp
push
cli
push
jp
pop
inc
aam
test
cld
push
fs
out
imulb
or
loopne
das
fldl2e
ja
mov
popl
out
andb
inc
call
sbb
bound
adc
lret
pop
pop
cmp
cmp
push
sbb
ret
pop
test
pop
cmc
xor
mov
cli
int
cwtl
inc
popa
cwtl
push
dec
imul
ja
imul
xor
inc
jg
xor
test
inc
inc
sbbb
or
mov
push
push
sti
js
or
adc
cld
cmc
inc
std
xor
mov
popa
das
pop
inc
lret
adc
stc
sub
ja
les
scas
or
mov
lods
xchg
data16
jbe
mov
dec
xchg
fstps
shrb
push
and
push
repz
mov
jg
les
mov
sub
daa
mov
ljmp
xlat
xor
xor
add
aaa
and
lret
inc
test
outsb
jnp
roll
add
mov
insb
pop
mov
inc
mov
sbb
movsl
adc
cmp
push
add
push
sbbl
mulb
in
in
xchg
sbb
aaa
mov
ds
xchg
xchg
pop
aad
add
fidivrl
mov
scas
out
add
jle
adc
enter
popa
ljmp
stc
fistpll
std
hlt
aaa
into
test
xchg
pop
xorb
push
or
push
cmpb
push
xchg
xor
mov
scas
push
jb
ret
outsl
xor
in
movsl
pop
in
xor
adc
xchg
leave
es
jge
mov
hlt
mov
cmpl
aad
ds
sbb
push
xor
push
int3
mov
or
inc
pushl
xchg
test
mov
mov
lock
sbb
jmp
sahf
cmp
xor
in
mov
sbbl
sub
mov
ss
lods
pop
pop
inc
sbb
stos
incl
cmp
dec
jne
mov
lds
pop
imul
mov
icebp
bound
mov
nop
cmpsb
cmp
push
dec
out
mov
jae
mov
shrb
push
xchg
stc
adc
jl
stos
sbb
xchg
daa
inc
add
inc
adc
cmc
fwait
and
adc
or
lds
inc
movsl
jg
iret
push
rorb
mov
mov
sub
add
pop
cmpsl
ljmp
movl
and
sahf
cmpsl
ret
push
iret
xchg
int
inc
cltd
ss
xchg
inc
stc
xchg
mull
and
outsl
dec
aaa
or
add
bound
aam
orb
add
jp
shlb
jge
pop
push
lret
or
or
mov
and
push
cld
xor
inc
xor
inc
adc
test
dec
mov
push
jg
sbb
push
cmp
xor
jb
inc
mov
loopne
xchg
int
mov
ss
pop
icebp
ja
xchg
jecxz
cmpsb
incl
xchg
mov
push
xor
ds
mov
and
out
push
or
or
lea
loopne
xor
inc
sbb
ret
insb
jg
ds
dec
cltd
push
iret
push
daa
mov
jb
mov
std
pop
adc
jmp
jae
jae
dec
cmpsl
icebp
jl
or
nop
pushf
das
mov
jg
add
out
hlt
push
jno
cli
xor
out
push
dec
jbe
mov
outsb
xor
loope
push
mov
dec
cmp
xlat
pop
pop
jae
outsl
imul
out
gs
inc
jnp
xlat
sub
jae
cs
lcall
jb
pushf
stos
inc
inc
lock
mov
xor
push
cwtl
mov
aas
call
jg
adc
dec
inc
mov
roll
mov
orl
jp
pop
cli
imul
inc
leave
jmp
and
test
ss
mov
xchg
fiadds
add
xchg
test
mov
and
insb
into
cld
std
jle
sbb
jbe
xchg
fidivrl
dec
in
mov
sar
mov
fisttpll
aad
inc
test
jo
pop
scas
mov
mov
adc
call
inc
jnp,pt
into
movsb
lahf
xor
fidivs
call
nop
xchg
push
pop
pushf
inc
stos
sub
sbb
pop
mov
push
cmp
sub
js
insb
sbb
mov
pop
bnd
add
bound
daa
js
jl
movl
sbb
scas
jno
mov
dec
inc
mov
jl
sub
repnz
data16
xor
and
jge
jne
scas
dec
jmp
lahf
sbb
repnz
clc
lea
or
ret
dec
pop
pop
insl
stc
add
pop
push
int3
xchg
and
and
out
inc
jp
daa
add
mov
and
icebp
jle
fists
xor
adc
jle
jne
push
ds
scas
jo
cwtl
cmpsl
fistpll
test
gs
mov
ds
cwtl
xchg
hlt
bound
leave
push
jo
scas
sarl
gs
xchg
adc
inc
mov
test
dec
inc
push
out
scas
add
mov
sbb
cmp
in
pop
cli
ret
mov
mov
int
mov
xchg
addl
cmp
mov
imul
mov
je
ret
adc
push
and
dec
fcompl
or
mov
push
pop
mov
fstps
push
andl
ds
jae
fbld
push
jnp
shl
xchg
testl
add
pop
test
and
in
sbb
repz
ss
jle
add
push
push
inc
adc
aad
mov
add
gs
test
mov
cs
lahf
push
or
aaa
jbe
mov
ja
outsb
adcb
negb
jg
push
decl
dec
insl
stos
adc
clc
mov
mov
lds
push
mov
sbb
sub
dec
loopne
loope
inc
out
mov
push
jge
mov
mov
cmp
dec
push
sbb
dec
jle
pop
cmp
add
or
add
pusha
test
and
cs
lret
or
fistl
jb
mov
and
es
lea
or
fadds
pop
xor
cmc
pop
and
mov
fidivrs
inc
fstps
test
ljmp
fcmovnbe
nop
mov
popf
xchg
fwait
rcrl
pop
jle
add
jno,pt
test
call
jmp
das
xchg
pop
je
clc
mov
pop
jne
or
movsl
push
sub
xchg
popa
gs
out
jg
and
xchg
sarb
sub
jmp
loope
and
sbbb
mov
pop
mov
lret
mov
sub
or
xor
and
and
jl
adc
pushf
insb
sbb
shll
pushf
lock
jecxz
call
cltd
jo
xchg
adc
in
push
push
sub
pop
add
out
enter
popf
psubusw
mov
cmpsb
sbb
psrlw
or
dec
and
adc
repz
repnz
xchg
out
popf
and
or
sub
ja
push
and
jbe
fwait
mov
out
jge
add
xchg
hlt
or
ljmp
adc
sub
and
sub
imul
push
lret
movsl
sbb
add
xchg
cmp
jno
popa
rorl
mov
adc
das
in
xchg
rcrb
inc
lds
adc
sbb
mov
nop
aam
and
xor
les
or
cmpsl
decb
loop
push
ret
jl
icebp
pop
push
test
xchg
imulb
test
stos
popa
mov
inc
adc
test
push
pop
push
rsm
mov
aas
push
pop
les
cmpsl
fs
jb
sub
call
or
out
push
or
adc
xor
jge
hlt
pop
fsts
pop
mov
es
xor
fstpl
adc
mov
xchg
les
setno
outsl
rolb
push
in
push
mov
jo
in
es
add
dec
adc
int
gs
lcall
mov
pushf
jno
adc
sbb
out
jo
jae
inc
gs
or
stos
nop
jle
adcb
cwtl
fwait
sub
push
cmc
xchg
inc
mov
sub
push
sub
pop
dec
mov
popa
sti
filds
mov
jo
mov
ja
mov
xor
insb
in
lods
or
incb
dec
pop
mov
sbb
enter
jnp
cmp
pop
mov
dec
mov
cld
add
js
imul
push
and
test
push
shlb
sbb
sub
sbb
dec
xor
mov
in
push
test
or
pop
lods
cmp
jno
frstor
cmpl
stc
lcall
adc
or
ss
push
mov
jae
lds
push
ds
ret
xchg
add
push
test
lea
xchg
jge
push
jge
push
mov
pop
xchg
lods
cmp
mov
jnp
mov
shl
cmc
xor
mov
in
or
lret
dec
jne
mov
gs
push
jmp
cmp
ljmp
outsb
pop
mov
fdivrp
int3
sbb
cmpsb
movsl
jbe
loope
ljmp
aam
adc
addr16
cmp
sub
dec
and
test
fisubl
push
and
scas
imul
jbe
cmp
shll
mov
repnz
popf
xchg
stc
loopne
cmp
or
int
movsb
push
push
and
negl
fidivrl
scas
push
aas
mov
mov
inc
shlb
mov
ljmp
lods
sbb
adc
sub
daa
cmp
jnp
aad
or
mov
fdivs
cmp
xor
rcrl
pop
push
divl
cli
out
mov
mov
es
dec
and
jns
cmp
jns
aam
in
insb
cmp
xorl
test
push
pop
or
cmp
xchg
int
divb
iret
js
fmuls
int
mov
outsl
dec
mov
xlat
xor
pushf
cmpsb
cs
imul
cld
jbe
xor
outsb
mov
stos
enter
pop
mov
inc
lcall
not
cmpl
mov
popf
jle
push
push
int3
add
mulb
or
cmp
out
imul
dec
adcl
outsb
and
lods
pop
push
jns
dec
mov
mov
or
mov
mov
aas
push
shr
xchg
or
fs
add
cltd
stos
mov
inc
into
jb
dec
cmpl
inc
push
dec
fildll
pop
into
cmp
xor
test
int3
jle
mov
outsb
fsubr
pushf
enter
sub
mov
loopne
test
lret
xor
or
fwait
push
loop
mov
inc
ffreep
xchg
jbe
pop
inc
pop
icebp
adc
fistpll
inc
sub
mov
mov
sub
xchg
jns
je
lock
pop
fnstsw
and
loope
mov
push
mov
ficompl
push
sub
lret
jb
jg
sbb
repnz
rcr
mov
pop
push
mov
inc
or
addr16
cs
mov
mov
popf
add
and
or
sbb
call
pop
sub
sti
mov
cwtl
lret
cs
mov
cwtl
out
cltd
mov
popa
jno
cmp
xlat
pop
inc
pop
into
xor
jp
scas
xor
xor
sahf
out
in
into
movsl
xor
jnp
dec
mov
cmp
sbb
xchg
loopne
xchg
dec
orl
pop
out
sahf
add
daa
mov
dec
cmp
mov
inc
sbb
jo
cmp
cld
ret
scas
sbb
js
xor
or
xor
aad
lahf
aas
push
pop
jo
mov
das
scas
mov
mov
pop
popa
push
lcall
std
sbb
push
mov
cmp
test
outsb
cmpsl
cmp
add
pop
xchg
xchg
cmp
lret
push
lea
mov
add
jbe
jb
sahf
out
ss
repz
clc
xor
in
mov
adcb
cmp
xor
and
jne
pop
sbb
sub
mov
cwtl
dec
in
arpl
mov
dec
frstor
mov
scas
mov
mov
aam
sub
test
shll
or
adc
movsb
lret
or
movb
dec
popf
add
cmc
push
jae
shl
std
sub
xor
xor
cmpsl
test
xlat
ret
xor
lods
inc
and
and
jmp
xchg
pop
and
mov
aad
sti
fwait
pop
mov
lcall
jecxz
mov
movsl
cmp
xlat
insb
or
aaa
pop
mov
dec
test
add
cmp
mov
push
loopne
mov
imul
mov
inc
lds
repz
divb
dec
xor
ret
mov
sub
mov
int
idiv
ljmp
fwait
xchg
add
mov
sub
push
ficompl
mov
sbb
repz
sar
pop
mov
mov
adc
out
imul
aaa
fwait
cmp
cmp
sbb
jns
in
andl
cmp
loope
jle
push
cmp
xchg
sub
and
cmp
mov
xchg
xor
mov
sbb
mov
fldt
enter
cmp
pop
and
lock
out
sbb
insb
mov
xchg
mov
mov
scas
pop
clc
push
push
add
jns
jno
inc
xchg
ss
aas
out
rorl
sub
int
je
dec
fists
adc
jnp
mov
push
bound
icebp
cltd
and
loope
push
xor
shr
cmc
dec
pop
aam
ss
ret
jnp
clc
dec
mov
lock
or
push
adc
jp
jbe
jecxz
jo
int3
fstpt
arpl
pop
pop
les
add
push
add
xor
popa
sarl
fildl
mov
pop
jnp
insb
adc
xchg
inc
pop
mov
xchg
mov
js
pop
cmp
cmpsl
pop
and
mov
rcr
fcmovb
mov
repz
in
in
mov
lret
ret
fs
pusha
cmpsb
pop
xor
pop
mov
cmp
xchg
jbe
pop
test
bound
cmpb
xor
mov
pop
or
or
shll
xchg
fisubs
jo
fisttpll
out
inc
jl
testl
dec
lahf
outsl
in
rorl
lcall
and
std
negb
aam
loopne
cmp
ret
sub
aad
mov
jge
stos
push
push
mov
sbb
mov
add
jnp
std
add
loope
cmp
decb
cmpsb
sarb
pop
xchg
cmpsb
movsb
test
push
div
int3
fnstcw
mov
ss
jb
dec
lahf
push
xchg
xchg
pop
hlt
mov
sbb
movsb
imul
in
push
cmc
pop
push
inc
push
pop
data16
pusha
lahf
mov
xor
adc
icebp
into
pop
fidivl
mov
adcb
std
sub
push
push
or
jnp
sbb
mov
mov
loopne
cmp
movsb
call
jae
jecxz
inc
aam
sbb
inc
mov
xchg
and
int
sarb
sbb
adcb
xchg
int
xor
subl
mov
add
mov
insl
dec
aad
popa
adc
in
enter
xchg
lock
xorb
loope
pop
dec
ljmp
mov
ret
and
aas
and
dec
dec
push
and
lret
sti
in
fwait
pop
sti
adc
into
or
cwtl
hlt
out
jbe
push
test
pop
shlb
mov
push
out
mov
sbb
and
and
adc
add
jns
push
mov
mov
mov
jns
jmp
adc
test
movsl
adc
subb
testb
jmp
mov
mov
rcll
and
xchg
roll
xchg
or
fs
dec
sub
or
or
out
lods
sub
rcll
aaa
pop
mov
push
fistps
das
mov
xor
lret
sub
mov
jo
xchg
jb
cmp
movsb
test
cmpsb
xchg
sub
inc
add
daa
in
les
scas
call
in
mov
add
jge,pn
or
mov
insl
outsl
test
mov
jne
and
jge
xchg
iret
repz
arpl
mov
sbb
cltd
xor
mov
mov
mov
xorb
sbb
in
push
mov
jge
inc
pop
bound
test
jecxz
pop
cli
shll
lcall
mov
push
fadds
xchg
int
xorl
daa
mov
adc
jns
xchg
xchg
jle
popf
xchg
mov
xor
idivl
mov
inc
ret
hlt
cli
popa
jne
mov
in
sub
pushf
mov
fldl2t
hlt
jp
cmp
call
mov
or
pop
out
add
jmp
xor
lahf
xchg
lcall
stc
sbb
xor
adc
gs
mov
push
in
stc
adcl
sub
int3
repnz
push
mov
and
sub
mov
inc
nop
lcall
and
inc
xchg
shrb
sti
iret
mov
or
leave
jecxz
mov
xor
out
daa
push
out
cmp
jb
mov
mov
jecxz
sarl
in
inc
cmp
out
stos
push
mov
jnp
mov
icebp
push
add
mov
into
cli
or
mov
lcall
sub
or
repz
test
lea
push
aas
mov
movsl
lret
cmp
push
jle
add
cmp
pusha
subb
sbb
jg
insl
mov
loope,pn
lods
xor
out
outsl
ja
aas
movsb
xchg
push
dec
jl
cld
mov
add
xchg
int3
fisttps
aas
and
cmp
shr
popf
dec
stc
xchg
scas
mov
add
test
push
adc
fisttpl
pop
mov
test
cs
lea
imul
sbb
xor
out
and
cwtl
pop
adc
out
cmpsl
inc
pop
pop
std
mov
add
iret
xchg
dec
sub
scas
cmpsb
xchg
dec
mov
in
test
sub
or
ds
xchg
cli
mov
loope
orl
js
mov
fcoml
jp
or
jecxz
and
mov
out
repnz
das
add
icebp
in
popf
mov
fnstsw
mov
fcomp
hlt
rorb
or
orl
jns
jmp
push
roll
lret
sub
xchg
adc
dec
sbb
and
add
imul
cmp
cmpsl
adc
push
xchg
pop
ss
rclb
and
jecxz
mov
leave
cmc
push
movsl
xor
mov
mov
jae
inc
cli
mov
jg
and
xchg
dec
in
loopne
outsb
ret
xor
out
test
xorb
mov
outsl
jecxz
test
jle
inc
and
das
fs
inc
xor
cltd
stos
das
sub
stc
adc
push
dec
add
dec
mov
mov
fwait
xor
ret
and
fisttps
out
cmp
mov
inc
xor
fdivrs
lcall
add
jbe
adc
cmp
inc
dec
add
sbb
pop
jbe
pop
inc
push
push
mov
mov
icebp
rcll
dec
inc
and
fwait
sub
inc
mov
jno
sbb
pop
mov
imul
sbb
adc
sub
sub
ret
jo
dec
inc
push
mov
mov
inc
fcomps
sub
pushl
rclb
pop
sub
rcr
inc
sbb
scas
pop
jle
lods
outsb
pop
or
fldcw
enter
pop
jne
movsb
lods
mov
add
xchg
inc
jb
cwtl
sub
push
sbb
cmp
xchg
mov
imul
pop
push
jle
cmp
divb
or
mov
nop
loopne
out
mov
mov
cs
push
cltd
stos
lds
negl
mov
loopne
lret
push
push
sbb
xor
insb
pop
mov
imul
flds
rorb
xchg
popa
cwtl
cmc
dec
dec
cmp
adc
push
into
xor
idiv
pop
in
arpl
lods
aam
loop
negl
pusha
lods
iret
jae
subl
dec
or
pop
out
ja
jnp
mov
pop
cmp
sub
lods
mov
scas
xchg
fsubl
push
hlt
stc
jnp
xlat
aaa
push
insb
nop
adc
and
fisttpll
sub
notl
push
mov
inc
stos
fldcw
cmp
jge
add
jl
mov
aaa
xor
pop
or
vorpd
xchg
fdiv
loopne
inc
xor
imulb
int3
fidivl
mov
and
inc
mov
fnsetpm(287
jns
call
sbb
push
popa
pop
and
inc
jo
out
xchg
push
xor
bound
mov
shll
push
data16
mov
mov
add
push
or
push
cmp
test
or
aam
nop
arpl
gs
je
pop
or
test
sbb
pop
repnz
sub
lock
icebp
sbb
adc
stc
ja
jne
mov
jbe
sahf
jns
xor
out
fpatan
jns
call
xor
int3
add
scas
cld
orb
or
or
ljmp
mov
ficomps
outsl
adcl
mov
mov
pop
mov
cld
lcall
in
rol
or
lahf
push
or
nop
inc
fdivs
daa
aam
add
scas
xor
jae
outsb
and
test
and
xorl
mov
mov
mov
and
adc
mov
jp
mov
hlt
je
sbb
xchg
cld
clc
sbb
and
or
mov
push
adc
push
xchg
mov
fbld
cli
sbb
add
mov
enter
pop
pop
push
cmp
mov
lea
adc
fstl
mov
pop
mov
ds
pop
sti
push
dec
inc
pop
arpl
inc
cmc
xor
mov
adcl
or
and
cltd
popf
push
sbb
inc
das
pop
add
mov
xchg
test
out
cmc
sub
and
fildll
loopne
inc
push
adc
out
js
or
rcl
dec
in
lods
mov
xchg
cmp
mov
out
sub
mov
arpl
mov
push
dec
mov
and
test
jne
xor
sub
das
aad
aad
sahf
ret
push
jb
mov
pop
mov
outsb
out
in
dec
out
mov
cmp
test
or
icebp
dec
aas
test
icebp
sub
push
ret
jns
cmpsl
inc
jge
xchg
lret
adc
hlt
mov
push
mov
jge
stos
or
test
popf
or
mov
jp
mov
cmp
sbb
scas
lahf
ficoml
xlat
test
and
push
into
push
iretw
scas
or
or
pop
fdiv
mov
ds
imul
ds
roll
sarl
clc
adc
stos
or
mov
jmp
fwait
pop
or
jns
lret
insb
rolb
movsl
in
cmpsl
mov
loopne
sahf
ja
int
dec
lea
adc
mov
push
sub
pop
inc
test
fwait
jle
push
nop
faddp
fimull
mov
jmp
xchg
mov
mov
rolb
bound
adc
mov
divb
test
mov
repnz
loop
mov
mov
aad
pushf
or
cwtl
mov
sahf
fiaddl
sahf
movups
xchg
dec
and
dec
fisubl
leave
pop
nop
arpl
cmp
push
push
outsb
adc
jge
jns
xor
data16
xor
aas
scas
dec
fwait
push
testb
inc
dec
imul
mov
adc
adc
or
sarb
loope
rcrl
sti
sub
push
repnz
cs
jl
pop
shll
mov
cmpsl
in
mov
fs
loop
xor
out
sti
aas
adc
arpl
push
push
mov
sub
insl
xchg
mov
xchg
dec
scas
jecxz
int
lods
gs
or
lcall
roll
push
bound
out
lods
fbstp
shlb
addb
sbb
xor
pop
jb
ret
lret
and
movsl
cmp
daa
mov
cwtl
ljmp
daa
adc
pop
sub
push
mov
rcrb
and
push
out
fnsave
push
mov
dec
xchg
cmp
pop
fistps
cmp
adc
test
flds
pop
insl
fs
sub
pop
cmp
icebp
subl
test
jle
cmp
or
stc
fadds
sarb
pop
sbb
dec
andb
inc
adc
cmpsl
lret
or
leave
mov
inc
jno
lgs
test
lods
pop
ret
add
push
mov
lret
sbb
dec
pop
aaa
adc
dec
rclb
icebp
push
xlat
mov
fistpll
sub
inc
cwtl
sbb
into
xchg
mov
bound
mov
aaa
loope
out
call
push
cld
sbb
add
daa
pop
adcb
mov
mov
mov
into
das
data16
lods
push
insl
xor
push
or
mov
add
inc
daa
pop
movsb
pop
cmc
dec
fisttpl
in
jb
or
mov
cmpb
mov
sub
aaa
std
add
add
subb
lahf
sub
stos
stc
sub
jmp
les
or
shrl
jmp
dec
leave
mov
mov
add
scas
mov
jp
cmp
xchg
iret
imul
or
mov
mov
pop
insb
and
fldenv
clc
dec
ficoms
and
and
enter
inc
test
std
push
cwtl
mov
dec
sub
mov
test
xchg
pop
inc
inc
add
adc
sbb
xchg
sbb
add
xchg
mov
xor
call
in
adc
and
push
pop
outsl
lret
pop
enter
les
mov
lret
mov
inc
ljmp
mov
dec
call
lret
add
xchg
mov
sub
pop
sub
mov
cli
xchg
dec
mov
xchg
cmpsl
or
in
popa
sub
and
dec
jbe
push
dec
dec
neg
add
and
xchg
and
cmp
lods
jnp
push
xchg
pop
shr
scas
push
xor
pop
in
jbe
addr16
push
ret
test
jecxz
sub
jno
pop
push
push
pop
jp
fdiv
cmc
adc
cld
xchg
fldl
cwtl
inc
shl
incl
sahf
rcrb
fwait
js
mov
idivb
mov
in
sbb
xchg
adc
outsb
mov
push
pop
fcoml
xchg
sbb
shrl
mov
cs
mov
cmp
adc
or
lea
stc
imul
out
cltd
add
fstpt
add
out
lock
xchg
add
aaa
sbb
rcrb
nop
xor
loopne
jae
adc
into
cmp
dec
or
test
cmp
or
lds
nop
in
dec
mov
lods
fistl
and
out
lret
cmp
push
mov
cwtl
adc
addb
data16
jp
sub
or
inc
xchg
stc
pop
push
push
jl
das
test
push
and
lds
mov
push
cmp
shrb
and
aam
incb
pop
test
out
or
sub
push
jne
push
or
jno
or
stc
enter
and
pusha
cltd
aam
popf
xor
ss
sub
sahf
pop
sub
xor
pop
push
pop
mov
rolb
cwtl
or
jle
outsl
xchg
lcall
push
sbb
fisubrs
sbb
cmpsl
in
pop
imul
into
repnz
cmc
mov
imul
jae
push
mov
bound
sbb
xchg
out
int3
push
mov
inc
mov
mov
inc
add
add
mov
push
ss
lods
mov
bound
call
jecxz
and
add
jo
xor
xchg
xchg
sarl
push
pop
ja
jecxz
xchg
jae
inc
add
sbb
mov
lcall
mov
adc
leave
into
push
push
adc
cmp
push
in
mov
aas
inc
mov
mov
sbb
push
cwtl
mov
fisttpl
roll
pusha
mov
scas
leave
add
mov
inc
inc
leave
fwait
div
push
cmpsb
ret
aad
ss
repz
das
ds
dec
roll
mov
arpl
cmp
shl
sub
mov
js
add
push
ljmp
std
out
sbb
mov
call
inc
imul
add
adc
cmp
mov
fisttpll
adc
data16
clc
inc
cwtl
push
enter
js
mov
cmp
dec
fs
es
aas
mov
xchg
mov
les
test
ja
mov
psllw
adc
jge
xor
movsl
dec
or
add
je
jns
nop
clc
fwait
lahf
addr16
cmc
movsl
pop
cmp
inc
arpl
pop
call
sbb
xor
js
test
cmp
or
adc
dec
insb
inc
mov
jb
or
daa
mov
addr16
mov
push
and
jmp
add
cmp
mov
jp
adc
out
and
or
enter
mov
in
jae
or
pop
data16
test
add
xor
dec
push
es
in
dec
fnstenv
and
loop
xchg
and
in
push
jg
push
push
adc
xor
pushf
jo
sbb
mov
lret
decl
inc
aam
test
push
sub
and
add
jmp
cltd
jmp
add
bound
or
ja
mov
imul
call
inc
gs
sbb
mov
sbb
imul
jnp
mov
dec
fyl2x
in
loop
and
mov
push
mov
jg
ret
hlt
rcll
adc
rcrb
sub
adc
pop
mov
cltd
xchg
dec
andb
push
inc
add
test
repnz
ja
dec
call
or
inc
pop
push
rcrl
es
cltd
sub
dec
xor
xor
jg
test
jnp
xchg
rorb
test
mov
cli
les
test
xchg
push
popf
cmp
mov
test
clc
or
push
sub
adc
adc
dec
mov
loop
pop
lahf
std
lret
mov
jge
sub
mov
mov
bound
hlt
js
sub
loope
scas
fisttpll
shl
bound
mov
lods
addps
test
popa
out
inc
mov
mov
dec
sub
lcall
or
adc
pop
addr16
sbb
in
or
mov
movsb
sbb
xlat
mov
cmp
mov
aaa
in
adc
orb
push
inc
push
aaa
leave
sub
rolb
xor
cmp
cmp
mov
lcall
and
cmp
loopne
mov
xchg
xor
enter
rcrb
lret
add
sub
scas
mov
das
cmpb
jns
out
mov
loop
fsts
lock
pusha
jp
std
dec
outsb
push
pop
or
rol
push
add
xor
mov
or
jae
inc
out
xchg
mov
out
stc
adc
xchg
sti
push
jecxz
pusha
sub
fdivr
clc
push
cmpsb
adc
insl
xchg
add
pop
nop
mov
imul
pop
sub
xor
xor
hlt
mov
fisubrs
lods
add
lcall
pop
lock
pop
pop
lea
or
push
jbe
dec
cmpsb
stos
xchg
cmp
and
mov
jbe
mov
ret
in
fbstp
or
cmpsb
jp
jo
dec
lret
push
shrl
inc
or
andl
sar
mov
fiaddl
leave
lret
mov
test
out
fistpll
or
nop
sbb
push
mov
mov
push
ss
bound
and
lods
push
jnp
movsl
pushf
movsl
pop
sbb
push
aas
das
mov
push
or
addps
cmpb
sbb
sarl
ret
xor
in
shl
pop
adc
stc
add
add
andl
xchg
pusha
enter
mov
nop
enter
xchg
and
ret
test
shrl
jns
out
cmpsl
pop
xor
mov
fdivrl
rolb
pop
pop
imull
adc
cli
add
push
decb
fildll
jle
arpl
xchg
iret
scas
adc
sub
or
inc
test
adc
out
jge
or
mov
add
cmpb
inc
sub
push
push
mov
pop
cwtl
cmp
lret
popf
movsl
ljmp
jp
or
push
pop
rcrl
adcl
mov
push
pop
xchg
mov
add
or
xor
push
mov
mov
popf
test
sbb
jb
dec
inc
in
cmp
popa
xlat
mov
stc
xchg
mov
push
ds
jg
jmp
aad
pop
cmp
shlb
jo
pushf
or
jge
dec
fisubrs
dec
mov
pusha
sub
icebp
jne
sub
add
lods
dec
test
bound
aas
mov
xlat
inc
sub
mov
mov
mov
lods
pop
fcmovb
icebp
es
add
in
outsl
xchg
call
dec
cmp
xchg
jmp
pop
add
mov
fistpll
jb
leave
dec
divb
adc
or
cmc
add
pusha
test
inc
adc
xchg
adc
xorb
aaa
das
xchg
or
pop
fmul
cmp
lahf
xchg
pop
mov
movsb
jp
sbb
xchg
dec
ret
test
mov
pop
ja
aad
test
dec
rcr
sbbl
idivb
cmp
dec
lcall
lock
push
adc
loop
sub
ret
orl
adc
ret
jb
xor
cld
pop
shlb
adc
fcoms
jb
scas
add
scas
xchg
dec
pop
loope
pop
fwait
xor
pushf
add
mov
inc
adc
pop
inc
stc
mov
xchg
and
jno
dec
sbbb
movsl
add
cmp
pop
movsb
add
pop
ljmp
fs
xor
push
mov
inc
jmp
dec
test
cs
jnp
sub
movsl
ljmp
inc
cmp
mov
sub
jl
cmp
xchg
push
add
xchg
pop
add
rcll
out
cmp
out
insl
jae
inc
pop
cmp
inc
daa
pop
xor
adcl
push
loop,pt
pop
jg
cmpsb
ja
leave
ja
xor
cli
lcall
popa
es
lds
stc
mov
cli
ret
cmc
push
mov
jecxz
sbb
bnd
pushf
inc
pushf
inc
mov
into
pop
sbb
outsl
cmp
cmp
std
cmp
fdivrp
pusha
adc
jmp
ret
in
xor
xor
je
mov
mov
leave
adc
xor
jp
mov
sub
cmpsl
push
inc
xchg
ret
push
movl
sub
add
push
popf
inc
movsb
seta
pop
sub
pop
add
push
iret
jg
xor
in
cmp
popf
jb
fnsave
call
mov
or
cmpsl
pop
cmp
jbe
sub
popa
rcrl
and
lods
mov
xor
or
sub
or
out
adc
or
push
cmp
movsl
sub
or
repz
test
ja
movsb
and
das
cmp
stc
out
sbb
mov
add
arpl
cwtl
sbb
aad
pop
cmp
and
inc
adc
rorb
adc
sub
gs
fs
int
xor
inc
or
dec
jmp
mov
mov
cli
fsts
cwtl
jae
in
lods
sahf
out
mov
aas
or
ret
popa
sub
jae
xor
cmp
fbstp
inc
enter
pushf
inc
sbb
cmp
add
fists
jnp
sub
adc
and
loopne
pop
pop
icebp
dec
pop
dec
xorl
push
mov
xchg
adc
jmp
imul
loope
sbb
shl
test
and
xchg
mov
sbb
es
lock
push
in
in
mov
lock
in
jmp
insb
arpl
cld
pop
mov
fcomps
adc
mov
cld
in
xor
mov
jnp
xchg
sbb
mov
sbb
aam
jnp
mov
cmpsb
sbb
sub
fiadds
dec
and
mov
sarb
cmp
cmp
ror
fmull
push
push
mov
dec
mov
adc
nop
jg
ficompl
movsl
clc
sti
fdivs
sbb
lahf
enter
push
sub
pop
lods
mov
jg
and
push
mov
lcall
mov
scas
add
decb
push
outsl
repnz
ds
sub
lret
pop
push
mov
and
stos
sbb
xor
xor
call
jb
enter
repz
mov
bound
cwtl
push
fcmovne
sti
call
mov
push
js
lcall
xchg
fdivs
adc
jmp
addr16
cmovae
call
fs
loop
pop
lret
jp
repz
inc
pop
jbe
dec
sub
sbb
mov
lds
testb
sub
add
pop
adc
js
cmp
out
dec
das
out
jecxz
push
loop
daa
jl
aam
in
stos
repz
xchg
pop
jmp
jp
sarb
jecxz
rol
clc
je
mov
push
cmp
dec
loopne
pop
inc
outsb
orb
sti
mov
or
sub
adc
leave
or
jne
xchg
imul
sbb
int
lods
mov
outsl
mov
xor
and
mov
ds
pop
and
test
lret
push
ss
movsb
ss
js
int
enter
mov
inc
loopne
xor
xor
test
sbb
mov
sbb
ljmp
push
hlt
shl
jp
test
fwait
es
mov
push
jne
inc
xor
ret
mov
test
and
push
cmc
inc
stc
dec
push
cmp
and
mov
adc
mov
and
sti
test
cltd
loopne
es
dec
gs
shll
rorl
xor
mov
mov
lds
es
push
jmp
mov
jmp
popf
add
pop
mov
xchg
add
in
cmpsl
insb
es
imul
shl
or
mov
push
mov
fs
mov
push
insb
ss
cli
je
and
outsb
fmull
aad
dec
pop
dec
outsl
inc
cmp
mov
out
dec
arpl
add
push
push
sarb
sbb
sbb
sbb
add
jle
cmpsl
jno
or
push
jge
inc
jae
in
xchg
sbb
lods
push
dec
clc
push
scas
repnz
mov
test
mov
mov
push
ret
decb
outsb
inc
mov
or
mov
cmp
mov
gs
mov
rcrl
cwtl
mov
sub
scas
or
mov
or
mov
insl
ljmp
sub
mov
adc
mov
cmc
jbe
movl
rcrb
imul
sub
pop
aas
cmpl
ds
jecxz
rcrl
dec
pop
mov
js
sub
fcoml
adc
fsubrl
imul
inc
popf
jge
pop
gs
add
mov
adc
pop
push
push
out
pop
fisttpl
push
inc
push
movsl
cltd
lret
push
pushf
movsb
scas
push
outsb
pop
inc
add
out
dec
jne
xchg
ret
popf
lret
and
cmp
loopne
cmp
test
xor
fucomip
ds
pop
mov
lock
fisubl
push
lea
aam
cmpsb
loope
mov
mov
hlt
add
xor
pop
leave
cmpsl
loop
cmp
mov
repnz
mov
bound
mov
std
add
and
inc
adc
cli
fs
iret
test
adc
out
adc
or
pop
pusha
pop
add
add
cmp
sub
cmp
jno
out
stos
fnstsw
inc
push
xchg
and
mov
cmp
int3
jae
sbb
hlt
fadds
cltd
fcoml
sub
mov
dec
cmp
es
lret
sub
pop
cmp
pop
push
push
mov
jl
xchg
mov
push
loopne
or
jecxz
mov
pop
adc
aad
mov
mov
pusha
and
jg
adc
data16
fdivl
out
inc
pop
mov
or
repnz
aad
icebp
adc
pop
xchg
aad
pop
sbb
cli
popa
sbb
lods
pushf
fcoml
xchg
je
pop
jmp
mov
iret
int
fs
or
test
jbe
inc
mov
incl
les
cmp
push
jns
mov
pop
mov
lea
add
test
push
cmp
stos
test
push
sub
pop
pop
or
push
jp
adc
jae
mov
subl
jns
imul
data16
cmpsl
xlat
sbb
loop
cmp
es
lock
cmpsb
xchg
test
xor
add
clc
hlt
dec
push
mull
push
mov
mov
inc
inc
mov
mov
stc
xchg
cwtl
push
inc
mov
push
test
push
das
cli
fs
test
ja
movsl
xchg
mov
adc
push
ficoms
sbb
ss
xor
mov
pop
sbbb
jecxz
push
mov
jo
stos
xlat
sbb
daa
sub
fs
pop
cmpsl
dec
push
fs
out
js
and
pop
ss
and
mov
push
mov
mov
shrl
sub
inc
add
sbb
stc
pop
or
out
inc
dec
int3
popf
mov
mov
mov
iret
xor
test
popa
sub
sti
xor
mov
fnstcw
lret
sub
sub
or
inc
stos
inc
scas
xchg
push
mov
adc
pop
lret
cmp
push
loopne
sbb
and
sahf
push
dec
push
jae
xlat
xchg
jg
xchg
inc
inc
mov
bound
idivb
mov
push
cli
js
movsb
dec
push
fld1
je
imul
push
mov
push
mov
mov
in
ret
inc
mov
push
pop
aad
jae
orl
flds
xor
xor
inc
cmp
outsl
push
adc
add
rcrb
mov
jae
jbe
test
jno
sbb
iret
leave
scas
xor
dec
bnd
lods
mov
into
or
adc
sbb
fnstsw
ljmp
push
in
lods
adc
dec
rcll
callw
es
out
cmp
inc
mov
adc
das
inc
inc
sbb
in
sub
xor
daa
dec
bound
movsb
sarl
push
idivb
jb
ss
xor
mov
imul
dec
jno
xor
jno
shlb
mov
xchg
mov
fidivs
pop
mov
fisubs
jp
hlt
sahf
jb
popa
adc
aad
rdtsc
cmp
ljmp
jecxz
lods
les
movsb
aad
sbb
fs
outsl
movsl
popa
loopne
mov
or
dec
push
fdivrs
push
call
mov
pop
mov
mov
adc
aaa
call
ret
fidivl
shlb
out
in
inc
repz
add
insb
cmpsb
idivb
adc
inc
jne
push
inc
jp
jecxz
in
add
pop
jle
inc
aas
cmc
xchg
pop
xchg
cltd
decl
xor
lods
mov
sub
das
lods
dec
add
cmp
loopne
pop
xchg
mov
mov
sbb
xor
hlt
mov
inc
mov
fldenv
gs
cmp
sbb
rol
sti
and
pop
pop
pop
faddl
xor
insb
dec
movsl
inc
sub
add
push
push
mov
sbb
push
cmp
mov
pop
mov
jmp
rcr
mov
lods
gs
fimuls
insb
loope
dec
adc
cld
xchg
andb
mov
xor
cmp
scas
idivb
mov
rcl
adc
orl
sahf
das
xor
sbb
std
scas
pushf
sub
out
sar
outsb
test
jns
and
jp
test
fidivl
push
dec
pushf
arpl
js
insb
loop
shlb
mov
xor
int
push
test
leave
xchg
pop
add
stos
sbb
push
mov
adc
adc
ja
mov
int3
mov
push
or
scas
mov
lods
cmpsb
cltd
adcl
cmp
xor
icebp
cld
insb
mov
lods
jle
cmp
mov
inc
xchg
dec
inc
cmc
dec
jmp
dec
push
mov
cmc
mov
shlb
cmp
mov
fstpt
fisttpll
repz
imul
pop
and
push
movsb
xchg
cmpb
outsl
jne
cmp
push
fisubs
jns
or
cmp
movsb
sbb
into
addr16
add
inc
sbb
fildl
icebp
inc
rorb
xchg
sub
inc
inc
inc
or
cli
mov
pusha
mov
mov
xor
enter
je
bound
loop
mov
popl
stos
sbbb
push
jno
xor
movsl
xchg
dec
jp
pop
jns
inc
out
fistps
adc
jbe
repnz
mov
xchg
fcmovnb
add
mov
lods
mov
jp
mov
mov
and
mov
pop
lock
mov
dec
scas
cmc
inc
lcall
pushf
cli
jne
add
mov
lock
dec
outsl
ja
adc
ljmp
ret
cmp
icebp
dec
rcrb
insb
adc
jnp
mov
pop
cmp
cmpsb
gs
jg
pushf
fsubrl
xchg
cmp
mov
in
lcall
jbe
and
cltd
jmp
out
sbb
cmp
ret
push
jno
ret
cs
stc
push
xor
and
mov
packssdw
shrb
or
scas
push
sbb
lock
ret
loope
fdivp
cld
in
js
add
imul
enter
data16
popa
enter
ffree
in
ret
bound
movsb
lods
mov
dec
imul
in
xor
or
clc
fimuls
lds
mov
mov
mov
jg
and
leave
ljmp
mov
sub
mov
stc
dec
stc
leave
pop
das
add
repnz
inc
imul
add
pop
adc
sbb
cltd
call
pop
jae
js
push
nop
les
in
jno
jno
aaa
xor
pop
jnp
xor
sub
cmp
inc
lds
rcll
int
or
cmp
mov
push
rorl
inc
push
push
loop
and
nop
adc
popa
repz
rcll
jbe
data16
mov
cmp
mov
clc
in
dec
push
mov
push
shll
ud1
jns
inc
inc
loopne
mov
jmp
dec
dec
jle
cmp
xchg
rcrb
out
dec
or
push
sub
adc
and
xor
rcr
push
and
push
cld
xchg
lahf
xor
cltd
mov
cltd
push
cmp
cmp
xor
scas
call
sub
call
lods
cmp
mov
jmp
clc
hlt
icebp
data16
nop
daa
aad
into
std
test
cmp
cmpsb
push
xor
out
test
notb
stos
es
das
test
fcomps
pop
mov
sub
ljmp
push
cmp
daa
pop
test
movsl
xchg
add
xor
subl
sub
pop
or
pop
jecxz
mov
jge
pop
pop
mov
clc
shll
inc
sbb
jp
dec
jge
jne
loopne
add
jecxz
add
mov
pop
call
mov
adc
aad
iret
neg
ss
repz
popf
test
je
sarl
test
daa
sti
jge
jge
inc
pop
pusha
std
add
dec
cmp
sbbb
xchg
cwtl
push
and
out
add
jmp
clc
lahf
bound
inc
inc
lea
xchg
call
outsb
xchg
xchg
popf
xor
testl
orb
add
push
rorb
mov
dec
jmp
std
xchg
mov
aas
dec
cltd
pop
lea
push
xor
stos
out
loopew
ror
and
pop
adc
pop
mov
push
pop
fadd
add
roll
aaa
enter
fmul
push
or
adc
clc
outsb
adc
fists
dec
shrb
icebp
leave
popf
sbb
insl
repnz
adc
sub
or
lahf
dec
aas
adc
pop
fwait
aas
adc
imul
testl
cmpsb
lock
in
out
sub
js
das
sub
in
loopne
jge
aaa
fcmovne
sub
fisubl
bound
pushf
enter
int
mov
push
fucomip
cmpsl
push
push
mov
js
loop
lret
sbb
jns
mov
arpl
push
push
out
mov
shr
xlat
xor
movsb
sbb
nop
xorl
aam
shr
jno
int
loopne
dec
popf
jmp
pop
mov
iret
xchg
push
mov
push
xorb
enter
or
sub
test
adc
inc
push
popa
in
cwtl
xchg
sub
lods
xor
movsl
ljmp
add
jo
jo
dec
ljmp
jge
push
add
insl
pop
lret
jg
stos
push
pop
sub
sub
fstpl
notl
sub
xchg
aaa
cmp
mov
cmpb
lcall
movsl
or
out
lahf
out
mov
sbb
or
dec
insb
or
cld
in
es
jne
ret
cmp
enter
ret
push
ja
ds
pusha
loop
pop
not
hlt
adc
pop
and
push
or
mov
xlat
and
add
push
int
bound
outsl
stc
mov
xchg
popf
popf
adc
call
jl
lods
movsl
arpl
push
movsb
sub
mov
sbb
adc
dec
mov
pop
sub
cmp
sbb
add
repz
sar
cmp
ret
shll
add
test
mov
add
inc
pusha
pop
stos
xor
push
xchg
data16
dec
stc
add
fdivl
mov
hlt
in
fwait
es
aaa
and
adc
pop
mov
arpl
je
pop
ds
pop
inc
fsubp
out
dec
xor
jecxz
xchg
push
mov
mov
adc
outsl
js
or
xchg
xchg
mov
mov
xor
mov
mov
push
jbe
insb
insl
cmpsl
lcall
ss
xor
or
test
pop
jmp
jno
mov
cmpsl
xchg
mov
shrb
scas
pop
mov
or
mov
sbb
ljmp
inc
rclb
mov
stos
mov
insb
jo
or
sub
push
push
jae
pop
xchg
scas
sbb
in
cwtl
push
push
add
in
pop
aad
aas
mov
push
or
pop
das
das
cmpb
jg
lea
xbegin
inc
das
out
cli
sbb
xor
fucomi
or
ffree
mov
lret
push
xchg
ret
je
jg
mov
fwait
lcall
sbb
ret
push
mov
ret
daa
or
cmp
xchg
or
lds
jns
add
mov
sub
incb
push
push
outsl
pop
std
popa
push
sti
test
dec
out
cmp
cs
fsubp
and
jle
adc
and
aam
xor
in
scas
and
out
popf
cli
inc
adc
ja
outsb
xor
mov
adc
lods
or
out
xor
test
mov
into
mov
mov
push
jmp
jbe
xchg
in
mov
xchg
jp
push
pusha
in
inc
lahf
or
xchg
out
or
mov
in
mov
repz
or
insl
push
push
mov
sub
xlat
pop
shll
movsb
dec
pop
call
test
push
pop
aas
cmpsl
adc
test
mov
insl
jp
mov
or
jle
mov
jp
cmp
cmpsl
insl
xor
inc
add
std
das
nop
mov
add
or
ljmp
lcall
push
jno
cmp
arpl
mov
test
movsb
sbb
in
lds
add
push
daa
cwtl
xchg
lods
ss
das
fisubrl
dec
jge
mov
xchg
iret
clc
test
stos
jno
aam
sub
in
sbb
js
pop
lret
jge
aam
addr16
fwait
sub
out
push
or
cmp
ret
sub
int
sbb
jg
ds
or
adc
pop
xchg
xchg
scas
adc
or
jp
fisttpll
jmp
cmp
mov
push
fiaddl
clc
dec
lea
inc
cmp
int
fidivs
pop
pop
addr16
fs
pop
inc
or
xor
xchg
cli
es
shll
sub
adc
mov
int3
mov
cld
push
jecxz
rolb
out
lcall
movl
adc
in
adc
loopne
dec
fwait
les
ret
fs
cmp
adc
scas
push
lock
cmp
aad
fsub
clc
xchg
pop
dec
cs
daa
fldz
dec
sbb
dec
pop
out
mov
jae
int
jge
pushf
and
mov
pop
jmp
dec
dec
cmp
push
lea
mov
fstps
inc
arpl
mov
int
cmp
mov
push
rcll
add
stos
dec
jmp
push
inc
subb
test
sysenter
test
xchg
jmp
imul
int
scas
enter
jb
cmp
inc
ss
std
scas
sbb
jecxz
cmpsl
push
mov
ss
add
xor
dec
in
aaa
xor
cmp
push
jmp
inc
or
adc
xor
mov
mov
sub
jle
fidivl
sub
inc
movsl
in
inc
dec
es
fmul
imul
sahf
rcrb
popaw
jle
jmp
xor
ficompl
out
fldl
jne
outsl
ret
mov
jecxz
jle
pop
cmc
ror
idivb
jg
add
es
test
sti
imul
pop
faddp
mov
or
out
jbe
imul
push
sarb
mov
jb
test
add
xor
loop
xor
lds
cmp
mov
mov
cwtl
pop
jns
jl
cmp
aam
int3
push
out
cmp
pop
fcompl
rclb
xchg
fisubrs
aam
mov
jne
js
pop
fwait
jle
jne
or
dec
shr
jae
test
xor
mov
pop
inc
jae
mov
push
adc
call
pop
mov
add
popa
and
or
loope
adcl
mov
push
leave
data16
adcl
test
out
inc
jmp
imul
pop
icebp
lcall
dec
sbbl
mov
rolb
out
push
lock
sarb
mull
inc
sahf
movsl
adc
mov
add
or
adc
cmp
cmp
repz
or
sub
fnstcw
mov
push
ds
out
pop
push
sbb
xor
imul
test
mov
cmp
xchg
test
dec
aaa
adc
dec
scas
jae
mov
mov
jl
lret
or
or
or
shrl
jb
mov
lock
popf
mov
js
arpl
dec
push
mov
imul
pop
shl
stc
cmp
fwait
push
xchg
adcb
cmp
sbb
cli
push
cmpsb
push
cmp
outsl
sub
inc
and
into
pop
sub
test
scas
cmp
icebp
aam
xchg
out
xchg
out
int
jmp
xlat
mov
inc
or
mov
mov
lahf
xchg
pop
adcl
loop
cmpsl
loope
xlat
lret
jmp
test
aad
and
sub
enter
ret
push
pusha
inc
pop
loopne
and
xor
call
ficoml
rcrl
sub
push
jp
popa
pushf
std
add
xor
fstps
mov
clc
xchg
pop
sub
ja
or
or
repnz
jmp
add
jbe
inc
jbe,pn
mov
jnp
cs
jge
dec
addl
insl
cmpsb
icebp
and
popa
std
popf
pop
icebp
xor
xor
lods
lock
sbb
hlt
cmp
lret
in
mov
cmp
xlat
pop
push
data16
lods
and
ror
or
cmp
add
fwait
inc
insl
imul
push
in
xor
bound
aad
xchg
add
in
jge
cmp
pop
and
int3
or
out
lds
sub
arpl
push
mov
push
sub
and
sub
shrl
ret
sahf
loope
push
lret
pushf
xor
mov
fs
mov
mov
mov
xor
bound
test
mov
loope
cs
cmc
mov
push
pop
xlat
jno
push
cld
jecxz
in
out
into
or
or
std
cmp
adc
pop
adc
enter
sbb
push
nop
jns
xor
cmp
cmpsl
stos
xor
sub
call
push
xlat
mov
mov
jmp
shl
xchg
jns
mov
fildl
inc
pop
push
test
jecxz
sub
adc
mov
inc
dec
push
adc
push
mov
or
insb
lahf
mov
pop
jmp
pop
inc
cmp
leave
xchg
mov
inc
and
out
fbld
add
mov
rcrl
pop
out
jne
shl
and
jb
adcl
push
push
movsb
pop
int3
std
mov
pop
inc
insb
dec
rorb
ss
xor
jg
stos
mov
adc
adc
shll
xchg
xorb
xchg
imul
jo
insb
ja
jne
out
ret
fidivl
test
add
mov
jle
add
in
jp
testb
sub
mov
mov
addr16
loopne
pop
mov
jno
and
rcl
cmpsb
loopne
mov
xchg
jb
iret
jns
out
mov
iret
xchg
rclb
std
sub
mov
andb
fwait
lcall
jp
xlat
sti
pop
jl
and
mov
xchg
pop
push
pop
popa
bound
mov
testb
mov
and
scas
js
and
adc
xor
push
jmp
cltd
and
es
jbe
jl
popf
push
jns
das
push
in
pop
pusha
pop
bound
lods
pop
or
cmp
cmpsl
or
xor
pop
jp
call
notl
outsl
mov
decb
pusha
mov
inc
aaa
mov
mov
mov
sbb
pusha
mov
test
sarb
and
adc
xlat
and
push
leave
pop
lret
xor
pushf
lods
adc
dec
inc
aas
mov
and
hlt
sbb
add
jb
push
jg
or
push
mov
stos
stos
dec
data16
bound
push
shlb
sub
sub
das
sbb
roll
pop
jo
mov
xchg
test
jle
fs
subb
fmuls
push
fwait
movb
outsl
jl
cli
jbe
ret
repnz
sub
imul
mov
or
stos
inc
test
fs
bound
add
test
jnp
xor
push
dec
or
mov
inc
cld
std
or
inc
adc
add
aad
scas
mov
inc
jno
mov
or
mov
int3
dec
cmp
movswl
add
jnp
and
add
aaa
je
or
sub
or
ss
sbb
movsl
ljmp
xchg
repnz
jecxz
insb
push
jne
mov
jns
push
inc
mov
addb
sub
sbb
pop
sarb
imulb
jb
std
insb
pop
lock
cmpsl
xchg
cmc
pusha
cmpsb
arpl
push
sbb
add
pop
test
xlat
or
enter
mov
cmpsb
in
or
lcall
sbb
decl
xchg
pop
jne
xorl
or
das
stos
adc
mov
out
imull
movsl
leave
xchg
inc
adc
pop
mov
mov
pop
stos
lret
xchg
nop
adc
xchg
adc
rolb
xchg
mov
mov
andl
clc
pop
pushf
mov
shll
dec
shr
ficoml
insl
arpl
icebp
cli
pop
mov
inc
psrad
jge
popa
jne
add
jmp
cwtl
psubusw
xchg
add
mov
push
add
and
test
cwtl
cmp
mov
clc
xor
push
imul
mov
inc
inc
jg
mov
mov
rcll
ljmp
sub
sets
and
and
movb
mov
popf
ljmp
sbb
dec
mov
mov
cld
sub
data16
lods
jle
scas
mov
cmpsb
cmp
out
or
sbb
cmp
cmpl
loopne
pop
and
pop
lods
adc
dec
sub
inc
or
mov
cmp
sti
cmp
jmp
pop
daa
std
lret
push
pop
sub
loop
shr
in
and
pop
xchg
andb
loop
sti
push
ss
sbb
in
dec
cmp
sbb
fsubrl
xor
pop
stos
adc
scas
and
and
mov
clc
cltd
js
push
xchg
shlb
sti
dec
mov
fildl
sbb
not
adc
pushf
lcall
nop
out
xchg
sub
jg
xchg
xchg
cmp
mov
push
test
xor
movsb
mov
idivb
cmpsb
cmp
pop
and
or
jne
xchg
cmpsl
mov
mov
push
lock
movsl
inc
sbb
sub
shrl
inc
inc
mov
sub
sub
outsl
push
lcall
add
push
push
push
addr16
and
xchg
addr16
cmp
jmp
jo
and
lea
sti
sar
xor
sub
jmp
mov
jb
pop
imul
outsb
fsts
pop
test
ret
nop
mov
mov
fs
repnz
mov
add
aam
imul
lret
insb
movsb
lock
inc
xchg
xlat
xor
rcrb
push
and
add
gs
inc
add
mov
loopne
aas
pop
ds
dec
sbb
cmp
clc
and
push
shrb
loopne
es
rcl
imul
lret
lea
xor
movsb
inc
iret
jnp
jle
insl
ljmp
pop
sbb
ss
lds
sbb
xchg
inc
or
xlat
jecxz
mov
ss
notl
xchg
divl
xchg
pop
pop
ds
cmp
ret
sub
mov
sti
jae
pop
aam
mov
cmc
jecxz
out
cltd
in
rcl
shrl
xor
mov
ljmp
and
adc
loopne
ds
repz
cmp
incl
icebp
lods
shr
xor
push
mov
test
xchg
adc
shrl
and
out
out
loope
inc
jae
outsb
cmp
inc
add
and
sub
jp
dec
adc
mov
icebp
push
movsb
pop
push
sbb
mov
inc
sub
xor
add
jnp
or
pop
jnp
xor
mov
pop
loop,pn
gs
xchg
fiadds
mov
into
pop
pop
int3
adc
test
or
cmc
adc
add
dec
xor
fistpl
mov
add
mov
mov
aad
cmpsb
repz
cmp
and
or
inc
repz
sbb
adc
mov
cmpsb
jmp
jecxz
das
pop
cltd
xor
pop
fwait
xor
pop
jns
scas
or
jl
andb
ss
fs
faddl
clc
or
sbb
inc
mov
mov
jne
push
imul
pop
leave
mov
mov
es
inc
in
adc
add
insb
adc
test
ja
in
imul
xchg
sti
jbe
jne
bnd
popa
adc
das
xchg
cwtl
gs
cs
adcb
mov
hlt
push
mov
sbb
jbe
cmp
int3
test
popa
test
mov
pusha
pushf
xchg
jae
clc
test
lret
test
test
push
mov
movsl
mov
add
cmc
mov
nop
add
hlt
repz
push
in
enter
pushl
xchg
mov
pusha
or
cmp
mov
jmp
mov
inc
sub
pushf
push
movsb
mov
arpl
dec
mov
xor
push
imul
adc
mov
mov
mov
shll
pop
fsqrt
and
lahf
mov
mov
jno
cmp
push
in
xchg
je
fsub
cmpsl
ljmp
loop
loopne
shlb
fxch
stos
add
leave
test
or
sub
adc
in
xor
gs
movsl
inc
sbb
pop
adc
xlat
push
adc
lret
aas
adc
icebp
sub
enter
shll
ret
bound
add
pushf
mov
dec
mov
lea
dec
fs
jl
inc
lea
sbb
add
mov
dec
adc
scas
sbb
dec
je
rolb
out
bound
xorb
aas
mov
sahf
inc
loopne
mov
fndisi(8087
cmp
icebp
add
add
fidivrl
xlat
push
shlb
cmp
xchg
sub
aad
mov
orb
dec
outsb
jge
jae
sub
test
sub
daa
out
ret
xchg
mov
rcrl
lahf
mov
aas
dec
mov
dec
loopne
scas
fidivl
pusha
movsb
test
jp
mov
movsl
xor
cld
dec
pop
imul
movsbl
pop
lds
push
pop
loope
ss
pop
push
dec
in
inc
add
add
pusha
mov
push
out
test
inc
sub
sub
mov
xor
sbb
dec
adc
mov
shlb
jmp
push
mov
fbld
push
test
add
xchg
dec
jg
leave
sbb
addr16
pop
jg
aam
xor
cmpsl
cmpsl
lret
shr
aam
xchg
lret
popa
nop
xor
fld
push
push
pop
cld
mov
jae
jae
scas
push
pop
mov
int3
cmp
mov
shlb
fwait
mov
cmp
adc
pop
xor
add
call
test
out
mov
in
or
mov
lret
andl
sbb
cmp
repz
imul
hlt
fnsave
pushf
cmc
mov
movsb
sbb
cmp
or
lret
repz
cmpsl
jne
dec
dec
icebp
enter
adc
adc
pop
xor
out
push
dec
stos
xlat
add
sbb
sub
jg
mov
add
xlat
ss
stos
fcmove
and
push
or
adc
mov
xor
fldt
dec
add
in
mov
mov
std
fldenv
inc
sbb
imul
xchg
mov
inc
lea
jp
xchg
ljmp
fldt
frstor
cli
and
xchg
cmp
ret
cmp
xor
cmp
or
push
arpl
xchg
andb
mov
les
push
cmp
movsl
dec
repnz
cmpsb
and
dec
stc
ds
jno
or
and
rclb
int
or
add
dec
mov
repz
aas
test
mov
iret
sahf
aad
jo
pop
test
fwait
lcall
sarb
mov
in
nop
data16
xor
loopne
xchg
imul
dec
cmp
and
push
cmp
jae
xor
mov
push
cld
pop
loop
mov
mov
mov
adc
fimull
jecxz
cmc
nop
icebp
lods
lcall
push
cmp
mov
cmp
bound
xchg
cld
mov
mov
and
mov
outsb
addb
push
xchg
xchg
aaa
jp
cmpl
ficompl
dec
jle
xor
pop
sbb
outsb
xchg
inc
in
xchg
mov
daa
sub
lcall
enter
pop
movsl
ret
push
pop
adc
sub
gs
xor
pusha
cmc
es
mov
sub
jbe
fisttps
lds
test
and
mov
mov
jbe
adc
mov
nop
jbe
jb
mov
inc
inc
lock
paddq
xchg
mov
cs
loopne
dec
mov
cmp
xchg
mov
sub
push
sub
push
shlb
ret
dec
popl
mov
stos
and
mov
add
push
gs
mov
aad
xchg
jne
xchg
mov
sti
sbb
xlat
sahf
sbb
sbb
hlt
fldt
push
push
in
test
addr16
rolb
xor
out
and
std
xchg
into
push
jle
push
push
and
mov
pop
xchg
xor
popa
movsl
pop
aaa
xor
shlb
sub
stc
cltd
xor
stos
cmp
mov
in
addr16
xchg
xor
jne
sbb
and
xlat
mov
sub
cmp
push
add
andb
test
jle
andb
pop
pop
fisubl
jae
dec
arpl
fisubs
push
pusha
sbb
push
fldt
pop
in
out
cli
lock
jbe
xchg
je
add
outsb
addl
jecxz
in
je,pt
sub
adc
test
jge
sub
fisubrl
xor
jae
push
das
cmpsb
jbe
cmp
mov
cmc
hlt
stos
xor
mov
bound
xchg
jae
lret
jb
insl
inc
insb
test
negl
lret
sbb
dec
mov
outsl
ret
add
inc
mov
loope
jbe
ds
lds
push
add
mov
imul
xor
ss
cmpsb
and
sub
sarl
js
dec
pop
sbb
int3
call
mov
es
pusha
movsl
xor
push
dec
out
cli
leave
movsl
lods
inc
jp
mov
cli
lret
js
add
outsb
mov
mov
arpl
in
mov
arpl
arpl
cmpsb
inc
jne
out
sub
ret
aam
or
push
pop
fists
pusha
or
sub
mov
xor
repz
movsl
xor
adc
clc
lods
sub
cmovns
jae
or
aam
mov
adc
xchg
into
cmpsl
inc
dec
cmp
cli
test
mov
and
xchg
pop
rorl
shll
jb
dec
or
ret
arpl
push
add
pop
jle
xchg
js
test
out
add
iret
test
mov
push
lds
mov
xchg
lret
call
xchg
mov
cs
iret
scas
xchg
lods
mov
ret
les
sbb
orl
push
jmp
cmc
das
jns
sub
mov
lret
xchg
or
mov
pop
faddl
push
fisttpll
out
jno
push
jb
or
cmp
adcb
mov
aad
xor
xchg
push
sti
enter
pop
xchg
test
daa
in
add
shlb
pop
leave
out
xchg
pop
sub
lret
in
push
nop
and
xchg
fnstsw
stos
imul
shll
ret
pop
outsb
dec
pop
hlt
les
jnp
insl
gs
lahf
arpl
stos
push
jmp
ss
aas
ja
mov
inc
loope
insl
lret
cmpsb
cmp
pop
mov
neg
sbb
out
xor
jp
icebp
mov
dec
scas
jbe
fdiv
mov
in
or
xlat
push
and
in
pop
popf
and
repnz
pop
adc
dec
push
fdivrl
stos
jmp
mov
mov
sbb
and
imul
and
jno
xor
adc
pop
push
fldt
xor
sub
nop
mov
lcall
scas
fwait
jecxz
sarl
lcall
movsl
stos
jne
mov
cmp
test
cmp
out
das
test
testb
stos
das
xchg
outsl
orl
repnz
rorl
shrb
mov
adc
jg
mov
push
xchg
icebp
movsl
xchg
insb
adc
dec
es
out
mov
into
dec
cvtps2pd
mov
mov
mov
shr
xor
cmp
andl
dec
xchg
adc
xchg
sahf
adc
and
add
jbe
xor
inc
out
dec
jnp
jns
movsl
xchg
jno
xor
adc
fsubp
jb
sahf
inc
mov
mov
pop
mov
jle
mov
ja
nop
test
pop
xor
add
sbb
int3
add
adc
roll
and
stos
aas
inc
fdivl
or
lret
imul
or
pop
test
xchg
mov
push
imul
clc
punpcklbw
jg
add
sub
idivl
sub
xor
mov
sarl
pushl
xchg
stos
ror
mov
add
pop
mov
sbbl
push
adc
dec
call
icebp
mov
js
shl
dec
pop
push
js
loopne
sbb
addb
ds
aas
dec
scas
sbb
incb
or
add
aam
add
xor
enter
mov
jp
mov
pop
sub
ja
xor
bound
dec
jecxz
jbe
mov
dec
and
pop
out
into
pusha
std
addl
and
pop
and
sbb
sub
loop
enter
mov
shrl
pushf
int3
sti
hlt
jl
mov
cld
cwtl
mov
imul
cmpsl
pop
mov
add
sub
mov
int
shl
arpl
sti
fnstsw
lret
xor
cmpsl
jnp
dec
push
sbb
in
mov
aaa
sbb
mov
mov
or
jnp
adc
mov
fwait
bound
leave
mov
xchg
cwtl
lcall
xacquire
ror
into
hlt
mov
push
mov
push
repnz
cwtl
mov
icebp
loop
push
scas
sub
daa
jb
push
adc
inc
dec
es
xchg
adc
push
lcall
or
ds
xor
repnz
lods
andb
adc
sbbl
mov
or
sbb
inc
mov
fwait
or
pop
mov
cmp
mov
out
cmp
orb
orl
pop
pop
push
inc
push
xor
mov
xchg
xor
std
sub
mov
sbb
mov
cmovno
inc
out
add
cld
dec
jb
out
xor
mov
dec
or
sbb
or
xor
cltd
cli
cs
insb
shl
jo
adc
les
jp
sbb
mov
lea
test
ficoms
in
sub
jbe
jns
mov
clc
pop
inc
add
pop
jno
xchg
and
loope
fnstenv
fisttps
fnstenv
lea
imul
adc
mov
mov
cmp
das
ficompl
lea
pop
or
and
leave
ja
sub
mov
push
mov
rorl
stos
dec
sub
movsb
push
dec
popf
ss
sub
cltd
je
cmp
dec
dec
xchg
jo
rorl
xlat
mov
xor
mov
ljmp
test
add
addl
icebp
mov
cltd
mov
dec
xchg
lret
push
loope
inc
and
sub
test
hlt
fildl
iret
xchg
push
fcmovnbe
push
or
xchg
jb
jecxz
dec
test
add
push
addr16
ficomps
pop
add
sahf
repz
aad
push
outsl
xor
mov
fildl
sub
ja
shlb
add
add
mov
mov
shl
mov
xor
push
sub
fisttps
pop
mov
movb
xlat
mov
testb
push
iretw
jb
scas
sub
gs
or
push
adc
int
sbbl
clc
lods
test
sbb
lods
inc
ret
hlt
cmp
add
jae
push
adc
out
adc
mov
xchg
ja
sbb
int3
mov
sbb
add
bound
pusha
cld
sbb
pop
jecxz
aaa
pop
pop
cs
xchg
lahf
addr16
dec
pop
xchg
inc
jbe
ljmp
dec
cmpsb
add
int
sub
rcrb
mov
in
mov
loopne
push
cmp
jae
in
repnz
xchg
cli
cmp
cmp
sbb
and
or
or
xchg
daa
push
shrl
lods
mov
dec
fiaddl
mov
cmc
cmp
mov
js
push
push
and
mov
aas
xorb
pop
jmp
lahf
inc
cmp
cmp
cmp
or
call
pushf
sbbl
aam
sub
mov
or
pop
adc
dec
imul
cmp
mov
es
aam
scas
lock
dec
pop
dec
ja
ss
cmpb
stos
test
outsl
cmp
push
arpl
cmp
xor
cmp
mov
add
pop
jno
lods
movsb
cwtl
insb
iret
mov
pop
popl
xorb
dec
sub
movsb
xchg
rorb
cmp
dec
pop
fcoml
sub
and
repz
out
pop
in
das
pop
mov
in
xchg
or
fwait
mov
adc
lret
pop
pushf
jnp
mov
clc
push
jmp
or
pop
subb
into
mov
push
sbb
push
lods
add
xchg
cmpsb
ss
roll
in
adc
clc
adc
or
mov
loope
push
sbb
inc
test
imul
popl
push
roll
push
add
cmc
daa
call
mov
dec
fisubrl
cltd
fwait
sub
mov
in
imul
dec
jo
aam
mov
and
insl
adc
fcmovnbe
mov
loopne
shl
stc
add
jnp
or
inc
mov
push
fstps
dec
pop
push
dec
xchg
mov
clc
sub
ds
fwait
cli
leave
jno
icebp
mov
scas
fisttpl
testb
sub
or
sub
sbb
adc
xchg
out
sub
repz
stc
out
out
pop
add
cmp
mov
lea
inc
or
aaa
ljmp
inc
jo
shrl
arpl
fwait
out
and
es
lods
push
jg
aam
sub
jmp
sub
adc
mov
pushf
fcmovbe
cmpsl
loope
outsb
pop
mov
movsl
clc
fimuls
ret
cmp
ficoms
mov
fwait
jmp
sbb
inc
aaa
test
call
jp
icebp
sbb
mov
pop
xor
in
jp
in
xor
ret
mov
pusha
push
aad
in
aaa
test
xorb
cmp
pop
imul
and
mov
and
js
xor
xchg
cmp
jecxz
sub
subl
fdivl
inc
add
push
lret
push
divb
adc
test
mov
pop
jns
and
aaa
jne
or
ljmp
adc
inc
push
sbb
shl
fbstp
add
popf
repnz
jmp
or
mov
stos
adc
out
sbb
fwait
push
idivl
mov
ds
push
jle,pt
jbe
jne
ret
aad
repnz
faddl
into
cmp
xchg
test
pop
and
add
mov
xchg
xor
or
in
pop
sbb
dec
lret
jne
sub
push
inc
and
ret
xchg
jg
aas
sub
sbbb
push
cmp
xor
cmpsl
adc
les
icebp
rorw
and
jbe
sbb
out
mov
int
movsb
gs
sbb
lods
xchg
addr16
or
lock
and
stc
adc
cmp
xchg
jnp
arpl
cmpl
loopne
sbb
mov
and
js
je
xchg
enter
jno
loopne
sbb
jns
and
stc
dec
sahf
inc
jp
lods
mov
xorl
stos
push
gs
test
inc
arpl
addr16
jle
sbb
out
cmpb
jmp
push
pop
sti
es
test
enter
ficoml
test
jl
sub
adc
or
xchg
sub
outsb
fistps
icebp
pop
sub
jmp
mov
jae
scas
sysret
out
flds
xchg
xchg
push
ja
adc
ljmp
je
ss
inc
mov
mov
and
jbe
out
inc
loope
in
shl
ljmp
cmp
mov
clc
mov
jmp
sub
je
shr
filds
iret
sbb
loopne
aad
xor
xchg
inc
in
orb
mov
or
xchg
push
clc
aam
push
add
xor
imul
testb
push
pushf
rolb
pop
mov
les
sub
xchg
cltd
push
or
sub
xlat
cmp
shlb
mov
dec
xor
test
dec
cmp
mov
jge
aas
js
ret
shlb
mov
dec
dec
jge
add
mov
push
sbb
repnz
sub
gs
incb
inc
jmp
xchg
fsubl
or
pusha
cli
inc
inc
push
je
pop
js
bound
jg
shlb
roll
pop
mov
out
ret
test
jo
mov
out
std
int
outsb
xchg
mov
dec
jecxz
dec
cmp
inc
in
nop
rcr
inc
push
aam
pop
lret
mov
js
ret
xchg
mov
mov
in
mov
cmp
sub
sub
xchg
dec
or
js
xchg
aaa
lret
adcl
stos
xor
xchg
and
lock
mov
inc
sarb
in
nop
out
inc
mov
mov
cmp
into
repz
mov
push
xchg
jg
test
fnstenv
aaa
add
push
jl
lods
call
pop
pushw
and
fs
jge
inc
cltd
inc
lods
loop
sbb
pushf
in
mov
fldcw
sar
inc
add
sub
mov
pop
js
imul
and
push
dec
or
cmp
xchg
das
cmp
je
inc
mov
mov
fs
sbb
test
mov
in
in
enter
mov
mov
sbb
mov
lahf
xchg
es
inc
aaa
push
mov
adc
inc
scas
push
cltd
out
mov
pop
ror
adc
lods
test
or
nop
stos
out
rorb
xlat
jbe
daa
and
xchg
cmp
incb
nop
out
sbb
mov
imul
sub
jl
outsb
rcrl
mov
aad
imul
mov
out
cmp
mov
lahf
fisubrs
pop
add
fidivrl
sbb
pop
and
ljmp
mov
sub
or
icebp
fwait
das
imul
dec
dec
mov
pop
pop
stos
bound
push
test
and
sub
jg
ret
jmp
shr
fs
add
cmp
imulb
subl
sbb
in
sbb
sbb
ret
dec
push
mov
jnp
mov
mov
gs
fdivrl
mov
dec
mov
incb
adc
dec
push
fadds
xchg
and
test
dec
mov
ljmp
xchg
and
mov
hlt
aad
or
sub
cltd
mov
push
lea
add
mov
out
sub
pushf
pop
jb
push
jg
fldt
sbb
lret
cli
cmp
imul
ret
or
push
pop
orl
cs
inc
mov
cmp
lds
mov
iret
stos
test
push
push
xorl
es
test
inc
mov
push
mov
mov
popf
lods
push
adc
stos
xchg
test
adc
xchg
enter
sbb
sahf
mov
pop
clc
jge
adc
faddl
add
push
lret
sbbb
fidivs
pushf
ss
in
int3
lea
mov
dec
ret
xchg
movsb
js
xchg
outsl
outsl
pop
hlt
mov
ds
scas
lahf
xchg
ljmp
addb
out
sub
and
jns
insb
out
mov
jmp
loop
pop
insb
out
push
cmp
push
cld
jne
imul
clc
out
sbb
mov
dec
mov
arpl
and
fiaddl
inc
call
pop
inc
lock
das
out
loope
adc
sub
cmp
push
js,pn
mov
pop
cli
and
push
shr
pushw
jmp
bound
xchg
cmpsl
scas
cmc
push
cmp
out
push
fldt
imul
adc
xchg
mov
sbb
sub
arpl
add
xor
dec
aas
lcall
xor
cmp
dec
mov
and
lahf
mul
hlt
mov
pop
xor
push
pop
lret
scas
iret
shrb
fisttps
sti
dec
mov
aad
mov
insl
sbbl
jg
clc
jnp
in
inc
in
outsl
push
movq
jmp
mov
add
cld
pop
and
push
int
xchg
cmp
dec
xchg
aas
ret
sub
jmp
push
jbe
movsb
mov
cmpsl
ljmp
lock
ljmp
jb
adc
ror
or
mov
gs
loopne
xor
dec
mov
inc
inc
pushf
in
xchg
mov
js
loope
int3
mov
mov
arpl
lret
es
sbb
rcrl
stc
sbb
mov
sti
dec
mov
ja
jns
stc
pop
insb
sub
lods
cltd
jno
jo
mov
out
xchg
leave
addb
jno
scas
sub
and
mov
or
jae
adc
mov
inc
dec
xchg
xchg
out
xorl
insl
push
mov
mov
jg
insb
mov
push
out
arpl
aas
enter
cmp
mov
xchg
loope
test
xcrypt-ctr
cmpsl
fwait
loopne
dec
mov
inc
dec
mov
and
clc
sbb
add
enter
cli
sarb
sub
adc
adc
ret
cmp
jae
mov
in
mov
int
jo
jnp
add
cmp
mov
test
jb
rorl
or
adc
mov
std
sub
or
fmuls
mov
mov
mov
jle
out
in
adc
and
push
mov
and
mov
daa
dec
aaa
fs
jne
mov
push
jp
inc
jnp
pop
fiaddl
mov
ret
clc
adc
push
push
push
out
mov
push
sub
idivb
jmp
inc
sbb
subl
cmp
pusha
or
mov
mov
push
or
adc
es
sbb
js
add
xor
out
adc
sbb
mov
out
js
ret
not
jae
mov
mov
dec
and
cmp
cwtl
jbe
ljmp
ds
or
adc
inc
addr16
mov
mov
int3
dec
outsl
jae
jno
sub
jae
push
mov
add
ja
fcoms
inc
ljmp
xor
imul
std
in
lea
in
ljmp
sub
mov
repnz
adc
pop
mov
call
jo
xchg
adc
mov
js
xchg
lret
out
testl
cmc
ljmp
xchg
push
cmpsl
jl
push
insb
stos
lahf
daa
das
mov
in
push
cmp
xor
sub
leave
je
loop
mov
in
ficoml
mov
push
arpl
imul
pop
outsl
fsubr
imul
xorb
leave
sbb
mov
jp
scas
pop
xorl
push
add
ret
fwait
add
pop
shrl
out
push
mov
adc
mov
addr16
push
xor
sbb
mov
out
inc
xlat
out
xor
cli
xor
adc
lock
pop
dec
cmp
lret
lods
lock
pop
add
add
xchg
fstpl
pop
hlt
xchg
out
adc
imul
out
mov
sbb
and
daa
cmp
inc
add
fwait
adc
jae
pusha
addb
adc
cltd
and
subb
mov
inc
add
in
bnd
cmp
into
jmp
dec
push
jb
cld
nop
adc
pop
push
pop
pop
inc
cmpsl
xchg
xor
aaa
movl
sub
add
pop
or
pop
jecxz
or
in
out
rcl
mov
cmp
je
movsb
loope
push
add
shll
fsubs
dec
mov
xor
and
adc
inc
mov
lds
jl
sub
in
shl
jge
dec
test
lcall
repnz
ljmp
outsb
mov
icebp
push
gs
xchg
or
jnp
jp
jge
push
cwtl
repnz
arpl
xchg
loop
loope
mov
and
je
adc
and
inc
cmc
and
jg
jg
adc
lcall
ds
xor
cltd
jmp
jnp
test
fisttpll
xchg
stos
outsb
xchg
adcl
xlat
call
rolb
inc
shl
test
roll
cltd
rcr
cld
pop
push
icebp
int
adc
jp
mov
jne
ret
mov
mov
movsb
add
push
push
xchg
sub
pushf
pop
repz
mov
push
inc
mov
fldl
adc
mov
pop
hlt
adc
and
xchg
jmp
adc
bsf
popf
aam
push
lcall
lcall
xor
mov
push
push
add
or
push
mov
sub
cli
push
jl
inc
adc
cmpsl
ds
mov
ja
movsb
cld
mov
push
clc
dec
repz
out
imul
inc
inc
add
mov
mov
hlt
xchg
add
in
lret
mov
mov
cmpsl
fwait
or
xlat
loopne
xor
dec
jg
sahf
imul
cld
push
jnp
addr16
sub
int
sbb
orl
icebp
jle
mov
cwtl
jecxz
jmp
rcll
sbb
fiaddl
mov
cwtl
cmp
inc
jb
xchg
pop
mov
daa
xchg
popa
adc
push
or
push
pop
subl
stos
mov
or
call
mov
fists
sub
pop
out
mov
mov
add
adc
inc
pop
mov
stc
adc
jecxz
xchg
movsb
push
repz
shr
mov
xor
shlb
pop
and
sbb
cmp
xchg
in
mov
push
aas
roll
sub
xor
sub
movsl
jp
aas
mov
cltd
mov
mov
pop
sarl
in
stos
inc
mov
lcall
mov
sbb
jbe
loope
stos
aam
lcall
pop
dec
mov
add
in
test
pop
dec
push
aam
or
sub
add
push
leave
jg
push
pop
imul
ret
in
mov
fsubs
inc
jl
and
aad
sub
aam
or
aad
cmp
rolb
jae
into
or
xchg
jo
loope
outsb
mov
pop
adc
sub
xchg
mov
add
adc
mov
aas
xchg
mov
data16
loop
and
add
add
mov
fidivs
adcb
or
stc
mov
or
mov
add
sti
xlat
jo
imul
fbld
push
mov
adc
dec
scas
into
lds
in
ret
stos
cmp
aas
incb
dec
mov
add
test
inc
sub
lahf
fdivl
cmpsl
push
test
inc
je
imul
mov
xor
neg
cmc
or
xlat
xchg
pop
mov
adcb
push
fs
loop
inc
fisubl
mov
push
add
or
mov
bnd
pop
xchg
or
scas
mov
xor
decb
cwtl
leave
inc
adc
xchg
jns
popa
pop
sbbl
shlb
roll
sub
jl
mov
mov
decl
sbb
sub
in
jb
xor
call
call
xor
mov
iret
cli
shlb
mov
daa
push
adc
fwait
jae
ja
pop
imul
daa
mov
or
repnz
or
fcom
imulb
cwtl
jae
lea
mov
jns
xor
mov
cmc
divl
adc
sbb
jae
cmp
test
cmc
decb
xchg
xchg
and
les
sahf
fwait
sti
movsb
outsl
push
jae
lea
sub
stc
icebp
dec
fildl
jb
add
sub
adc
sbb
jbe
lds
mov
jbe
sbb
aas
fadds
push
scas
std
gs
jo
mov
and
inc
ret
xor
cli
clc
and
pop
stc
insb
lock
dec
popf
push
cmpsl
mov
mov
jb
notl
xchg
xchg
out
mov
xor
xor
ret
sbb
aam
nop
fiaddl
xor
leave
adc
pop
idiv
adc
out
dec
mov
pop
lret
mov
pop
outsb
sahf
imul
shrb
cmc
lods
repz
xor
out
lods
pop
jnp
jno
out
mov
push
fildl
pushf
pop
xlat
cli
aam
push
push
adc
data16
dec
scas
bound
jecxz
push
mov
arpl
andb
add
mov
mov
or
ss
lcall
dec
and
lret
or
xor
or
stos
jb
fstpt
clc
ljmp
daa
lods
loop
test
lock
outsb
stos
dec
xlat
push
vmwrite
cmp
fs
lcall
in
movsb
shrb
xchg
pop
loop
push
jbe
sahf
les
packuswb
pop
not
inc
sbb
int
lea
lret
mov
test
mov
jns
xchg
popf
mov
loop
jp
pop
les
xor
sahf
jbe
dec
or
pop
cld
push
push
sahf
fcmovu
aaa
mov
fbld
out
push
aad
pop
push
mov
cld
outsl
push
lock
ficompl
dec
sub
sub
xchg
add
lods
sbb
xchg
dec
push
dec
cwtl
outsl
das
lea
add
jns
inc
gs
bound
repnz
inc
scas
call
and
mov
sub
mov
mov
dec
pop
push
into
fsubp
mov
repz
jmp
mov
and
adc
push
cltd
pop
push
xchg
gs
cmc
sbb
fmuls
in
int3
xchg
sub
jle
cli
ljmp
xchg
mov
imul
iret
and
cli
push
int3
cwtl
lahf
and
dec
lret
rclb
mov
hlt
mov
mov
adc
stos
and
ficomps
rcr
lods
dec
jp
adc
xchg
div
lcall
push
into
pop
mov
pop
jmp
popf
adc
enter
aad
sbb
fwait
cmpsl
lahf
loope
ja
dec
ds
add
push
lods
loope
fadd
inc
ss
aam
jmp
xchg
push
adc
mov
cwtl
in
push
mov
mov
gs
add
or
jge
jbe
shll
sub
rol
xchg
pop
hlt
cmp
std
int
xchg
mov
mov
adc
xchg
aas
cs
mov
mov
lds
mov
xchg
fcom
sub
mov
ret
jle
dec
addl
lret
popa
inc
lret
lock
cwtl
mov
js
int3
jns
pop
jmp
inc
dec
pop
mov
add
ljmp
push
xlat
mov
stos
pop
scas
and
xchg
pushl
xor
push
out
inc
repnz
pop
pop
push
mov
cmp
out
mov
jl
dec
data16
xchg
dec
fdivrp
jbe
inc
insb
rcl
sub
dec
lcall
adc
sbb
dec
inc
cmp
sub
clc
xor
aaa
dec
dec
and
cmp
xchg
add
sbb
dec
add
push
call
dec
mov
dec
xlat
addr16
mov
pop
dec
pop
sbb
jmp
je
rorb
cmp
mov
out
cmp
cmpsb
mulb
mov
jne
cwtl
in
sbb
fsubs
pop
push
cmpsl
shlb
es
pop
fstpt
dec
nop
sub
mov
pop
mov
out
dec
cmp
data16
inc
sbb
push
jae
fs
xor
jns
in
inc
or
or
inc
push
loopne
roll
insb
xchg
psrld
xchg
push
cmp
popa
js
movb
sbb
mov
cld
daa
test
inc
arpl
xor
jno
mov
call
mov
sbb
pop
mov
fisubrs
mov
xlat
lret
pusha
jle
out
in
scas
fiadds
dec
xchg
orb
daa
xor
pop
in
inc
inc
rcrl
ljmp
inc
aaa
bound
sbb
insl
mov
shrl
and
cwtl
clc
sub
dec
jno
cld
add
insb
ror
pusha
scas
outsl
cltd
pop
in
cmc
lods
pop
std
fisttps
pop
std
sub
jp
orl
sub
add
jns
push
dec
call
test
mov
lahf
jge
insl
sub
jns
and
in
add
mov
sbb
mov
jno
movsb
call
and
jecxz
inc
dec
cmp
movsb
push
data16
lods
outsl
lret
jne
decb
mov
mov
movsb
push
push
mov
and
jle
dec
pop
xor
mov
adc
jl
icebp
dec
pop
cmp
cmp
call
jge
scas
out
arpl
xchg
pop
sbb
or
out
dec
out
popf
out
inc
mov
data16
mov
xchg
inc
xchg
push
xchg
inc
bnd
ljmp
arpl
mov
lds
mov
or
push
lods
adc
incl
jne
pop
das
jne
movsb
rcll
jmp
pop
jbe
scas
or
testb
sbb
jg
dec
mov
sbb
or
and
out
cmc
or
sbb
jbe
xor
out
leave
scas
pop
into
mov
jl
add
test
inc
xchg
jge
cli
gs
cmc
out
cmp
cmpb
das
pop
mov
js
pop
sbb
dec
leave
inc
rclb
out
lods
xchg
leave
js
pop
or
std
cld
cmp
pushf
loope
dec
dec
inc
mov
ror
call
and
xor
out
ds
inc
mov
enter
push
push
pop
mov
cmp
inc
xor
sti
lret
pop
and
pop
and
xor
dec
aaa
xor
cld
enter
subb
or
pop
stos
mov
loope
test
xchg
sbb
aaa
mov
or
dec
jge
pop
aad
ret
dec
imul
add
lock
imul
adc
add
xchg
jle
jo
jg
mov
clc
cmc
inc
jb
xor
lea
xor
cld
pop
push
sub
into
dec
int3
imul
xor
out
mov
out
adc
loop
sbb
inc
xchg
xchg
mov
das
jg
sbb
adc
adc
out
clc
inc
push
daa
sti
cmpsb
push
aam
imul
mov
pop
pop
xchg
xchg
and
sbb
add
sub
inc
in
and
push
push
lret
jle
dec
add
jmp
push
push
cmp
push
fs
mov
stos
mov
mov
ljmp
and
or
sahf
jo
int3
roll
int
popa
subb
push
pusha
lea
repnz
loopne
add
sbb
outsb
or
xchg
into
sub
sahf
rolb
popf
push
push
pop
aad
mov
jnp
pop
ja
adc
aas
cmp
lahf
push
cltd
xchg
fwait
xor
or
scas
add
pop
mov
rorl
xchg
in
test
lock
lcall
pop
fcomps
jne
std
bound
adc
call
sub
movsl
popf
insb
fabs
and
dec
mov
mov
push
mov
fstpt
mov
cmpps
movsl
add
sbbb
test
xor
or
sub
pop
repz
jecxz,pt
sbb
aas
mov
shrl
fs
jb
xchg
ja
mov
movsl
in
cltd
pop
push
test
xor
pop
add
lahf
inc
push
xor
insl
fdivl
fwait
testl
cmpsb
cmp
imul
jnp
mov
imul
jnp
or
sub
push
mov
das
insl
push
decl
iret
dec
mov
push
jl
cmpsl
xlat
imul
pop
out
xor
lcall
mov
xor
xchg
out
push
jmp
js
flds
lahf
mulb
rolb
jecxz
inc
xchg
jg
loopne
jne
dec
and
push
and
jne
popf
addr16
xor
pop
stos
dec
dec
stos
mov
scas
pop
test
lods
cmpsb
jbe
imul
add
ret
cmp
lcall
dec
inc
mov
outsb
inc
sbb
clc
ljmp
add
jle
jg
ficoml
jle
test
stos
xor
sub
jg
sti
shlb
sbb
or
out
jns
cmpsl
sub
push
aaa
mov
sub
mov
pop
inc
push
inc
push
pop
in
mov
jle
and
add
rcrl
lods
inc
in
mov
mov
inc
or
decb
jne
lods
dec
inc
jae
shll
mov
add
jns
pop
arpl
in
add
push
hlt
mov
push
pusha
inc
dec
and
and
push
sbb
push
sbb
dec
jl
imul
or
mov
mov
out
push
test
outsb
enter
or
add
clc
leave
inc
jno
mov
and
mov
mov
in
sbb
cltd
mov
sahf
lahf
insb
lea
jmp
pusha
test
fisubrs
inc
cmp
cltd
and
mov
xchg
test
jp
bound
sbb
lods
lods
ficompl
xchg
fucomp
push
leave
and
lahf
dec
xchg
call
insb
xchg
push
loope
cmp
pushf
inc
and
cwtl
aad
js
pop
mov
pop
cmovs
mov
cwtl
lret
mov
lods
gs
add
and
aad
aaa
jbe
mov
jns
pop
push
mov
pushf
ljmp
ljmp
loop
icebp
mov
mov
adc
cmp
repnz
nop
fldt
ds
pop
je
xor
repnz
pop
out
bound
movsb
dec
pop
adc
es
fs
xchg
js
cmpl
sub
adc
nop
test
mov
add
cld
xchg
ret
inc
sub
adc
push
fwait
adc
loope
cmpsl
and
fdivrl
sub
inc
divb
or
sbb
mov
xor
jmp
inc
and
movsl
rcll
cltd
cmp
sbb
insl
mov
xor
inc
and
add
adc
outsb
mov
adcb
mov
stos
xchg
data16
loopne
insb
add
call
pusha
aad
inc
push
mov
imul
shll
mov
sub
xchg
into
mov
fucomi
inc
dec
popf
sub
adc
and
xor
orl
xchg
testl
rcl
sub
push
xor
add
sbb
mov
mov
dec
jb
add
xor
mov
cwtl
mov
sbb
ljmp
ffreep
sbb
test
cwtl
xchg
jg
jb
cs
sbb
faddl
dec
inc
and
fists
cmp
xchg
sar
fs
fimull
psubd
lods
xchg
dec
dec
mov
pop
pushf
dec
dec
mov
into
lahf
or
pop
push
out
add
or
mov
xchg
or
jl
lods
jmp
gs
pop
lds
mov
daa
repnz
aad
in
js
loop
push
testb
mov
cmp
xor
push
mov
sbb
jle
push
lcall
cmp
dec
lret
add
leave
add
lods
je
rolb
add
aad
xlat
in
hlt
mov
pop
sub
push
decb
cli
loop
mov
mov
mov
pop
rolb
mov
or
iret
xor
sbb
lcall
imul
push
add
imul
movsb
mov
cmp
cmp
and
sahf
sub
mov
adc
ret
fs
xchg
testl
ret
dec
and
mov
adc
mov
jg
inc
dec
adc
out
addr16
fwait
add
shlb
jge
xlat
mov
adcl
loope
call
pop
cli
inc
pop
out
leave
in
pop
mov
push
loopne
jae
stos
push
dec
push
out
dec
pop
or
lock
add
fs
mov
into
mov
mov
js
fisubrs
xor
daa
imul
inc
add
sub
cmp
lods
pop
aad
fsubrs
jo
mov
iret
or
int
add
and
int
adc
mov
pop
loop
lret
push
cmp
cmp
jns
or
ja
sub
mov
enter
shl
pop
les
in
lock
outsl
xchg
push
and
mov
push
jmp
sub
mov
sub
xorb
sbb
loop
sub
mov
ret
inc
mov
xchg
dec
mov
xor
pop
push
sub
into
adc
fldcw
add
mov
fwait
sbb
push
rclb
or
push
lock
jmp
jp
xchg
ljmp
adc
mov
add
mov
fmulp
lock
xchg
xor
mov
out
lret
adc
fidivrl
aam
cmp
aad
sbb
xchg
cmp
jmp
rcll
lods
push
push
sub
pmulhw
mov
jne
sbb
inc
xchg
or
js
mov
js
outsl
push
call
clc
fcoms
xchg
jp
jmp
add
jmp
lcall
jne
cmpsl
leave
ja
adc
shll
and
std
jae
xor
int3
std
out
jmp
dec
out
cltd
fldcw
sbb
dec
fs
xchg
arpl
add
jnp
leave
add
cmp
clc
lds
push
fs
push
push
ret
into
ja
mov
push
inc
and
loope
inc
xchg
or
cmpl
dec
cmp
mov
icebp
out
mov
dec
scas
xchg
pop
inc
fldenv
jecxz
test
addl
adc
mov
xchg
aaa
jnp
jg
sbb
add
mov
fistl
mov
inc
shl
pop
pop
inc
stos
in
jp
leave
into
and
pop
cmpb
sbb
xchg
movsb
add
stc
sbb
and
cs
sarb
ja
and
xchg
xchg
xchg
mov
movups
pop
out
xor
jae
and
mov
push
xchg
ret
mov
dec
cs
push
mov
dec
testb
inc
xorl
push
push
mov
push
jo
fidivrs
mov
sub
push
out
lcall
dec
xchg
or
ljmp
or
and
adc
mov
repnz
mov
xchg
popf
subl
push
popa
push
movsl
pusha
and
mov
sub
push
aam
xor
sub
shrl
call
inc
push
push
adc
rol
daa
xchg
test
fbld
xorl
jae
mov
lea
iret
lods
lret
sub
add
add
add
cwtl
add
jmp
out
jno
js
sbb
pop
mov
sub
dec
into
std
loopne
jbe
cli
adc
fs
inc
sbb
shll
pop
push
pop
dec
or
dec
jb
push
dec
pop
arpl
cmc
rcrb
jecxz
push
push
pop
scas
adcb
mov
xor
fidivrl
lret
loop
mov
add
rcrb
inc
pop
push
xchg
shlb
iret
into
dec
int
cmpsl
stos
daa
dec
cmp
mov
xchg
jmp
outsb
jmp
mov
pop
icebp
cs
jmp
pop
mov
sbb
mov
xchg
dec
lods
sbb
push
cmp
mov
aas
or
in
xor
and
jns
mulb
add
inc
fmull
fstl
push
cli
scas
out
or
and
loop
lcall
mov
dec
cmp
inc
cwtl
lock
fdivr
adc
ret
cmpsl
inc
cs
clc
push
addr16
mov
sbb
xchg
mov
cmc
sub
xchg
and
push
nop
js
pushf
sub
lods
int3
call
push
add
sub
js
fisttpll
outsb
dec
shll
xor
cli
mov
les
lods
mov
lods
sub
ficomps
repz
aaa
add
cmc
fmul
insb
pop
and
mov
mov
mov
xchg
cmpsb
aad
imul
or
int
subps
loope
cmp
mov
and
cli
jnp
dec
xor
cltd
cmpsb
ss
jo
xchg
and
sahf
xchg
mov
and
pusha
inc
or
jge
dec
insl
add
popf
and
imul
fnstsw
cmc
jecxz
mov
cs
jae
pop
xchg
aas
push
mov
add
shll
out
dec
inc
cmc
insl
adc
xlat
pop
jp
clc
mov
mul
jl
in
push
in
jmp
aad
cld
scas
xor
xchg
pop
and
push
and
cmp
sbb
xchg
fdivrl
inc
push
mov
int3
cmpsl
ss
mov
out
jmp
cmpsb
sbb
inc
dec
inc
in
mov
inc
test
sub
jne
adc
aas
sub
mov
push
sbb
frstor
outsl
mov
lds
push
pmuludq
enter
sbb
loope
scas
sbb
stc
test
mov
mov
sub
ds
pop
pop
lods
popa
sub
std
push
sub
out
sub
je
loop
mov
es
jae
stos
sub
cltd
xchg
mov
push
cld
dec
outsl
jmp
adcl
sahf
pop
aam
iret
mov
in
push
pop
jne
push
xchg
push
lret
repz
cmp
mov
sbb
push
mov
xor
xor
xchg
iret
mov
fsts
aad
and
push
addr16
inc
mov
lcall
fidivrl
or
mov
jbe
jmp
mov
sbb
dec
mov
mov
xchg
cs
mov
fistpll
iret
sbb
mov
hlt
pop
stc
jno
roll
test
xor
push
loope
test
jbe
jp
jae
jbe
jl
push
iret
xchg
or
add
outsb
jmp
inc
sbb
adc
jne
lds
outsb
gs
sti
cmpsl
jp
add
daa
sbb
mov
xor
and
fsubrs
sub
xchg
ret
sahf
mov
sub
add
add
xorb
pop
cmp
popa
pop
dec
scas
ja
scas
test
shr
xor
pop
dec
mov
popa
mov
cmpsl
dec
lock
adc
sub
ret
adc
lcall
adc
sub
push
sbb
pop
push
out
aad
mov
rclb
mov
cmpsb
push
cs
out
jecxz
adc
cmp
pop
roll
or
dec
xor
pop
in
mov
outsl
push
rcr
or
jbe
push
aad
xchg
imul
and
xchg
adc
cmp
or
pop
mov
xorb
fiadds
addb
xchg
xchg
jmp
or
out
fnsave
add
fwait
nop
nop
or
shlb
dec
mov
stc
jge
dec
dec
or
dec
mov
scas
xchg
mov
out
ds
sub
gs
stc
nop
and
push
mov
push
popf
shlb
pop
cmpsb
mov
inc
in
sahf
mov
add
fadds
xchg
pop
nop
lock
lret
je
nop
lock
push
mov
shlb
mov
nop
adc
out
jecxz
push
ltr
hlt
imul
dec
insl
daa
out
jbe
jb
jno
addl
int3
add
push
loope
outsl
jge
jg
je
decb
imul
sub
or
adc
add
test
fcomi
lods
fdivs
sbbl
pushf
sbb
stc
xor
inc
dec
sbb
add
xchg
and
xchg
pop
xchg
outsb
pop
pop
pop
rcl
xor
mov
test
insl
mov
cwtl
xlat
out
es
push
mov
dec
lds
adc
imul
xchg
dec
repz
cld
cmp
sub
mov
int
xor
sub
andl
pop
jae
fcmovu
out
fwait
dec
arpl
cmpsb
ficoml
incb
idivb
mov
xorl
je
push
std
mov
into
pusha
mov
pop
out
inc
inc
movsl
cwtl
pop
sbb
dec
test
outsb
aam
insb
out
daa
sti
addl
movaps
mov
jge
sar
popa
adc
mov
test
fcmovbe
inc
or
add
in
and
mov
xchg
jne
add
mov
bound
xor
dec
loop
sub
sub
fnsave
mov
mov
or
cs
ret
and
cmp
dec
addr16
sub
les
aas
push
jg
icebp
adc
mov
ret
push
mov
xchg
sub
sub
sub
inc
pop
adcl
jl
ljmp
daa
mov
and
dec
jle
andl
inc
jmp
adc
push
xchg
jbe
bound
sbb
lahf
push
enter
push
xchg
jmp
pop
daa
inc
push
dec
inc
popa
pusha
arpl
lods
push
pop
mov
popa
popf
adc
ds
add
sbb
add
add
dec
push
dec
clc
in
xor
add
inc
popa
fwait
pop
mov
jb
pop
jle
imul
lcall
les
cmpsl
dec
lds
lahf
sbb
or
dec
fisttpl
repz
aas
ljmp
push
adc
je
rcl
cmp
fisttpl
lock
repnz
add
cli
sub
int3
jno
mov
dec
loope
mov
mov
mov
xchg
sbb
jp
mov
std
and
push
int3
negl
les
push
mov
and
rcrb
mov
mov
mov
aam
cwtl
popf
and
les
push
int3
sub
and
repnz
cmpsb
xchg
cmp
mov
push
shl
pop
inc
xchg
in
pop
push
mov
jg
jg
insl
js
mov
into
pop
jne
push
mov
xor
outsl
cmp
pushf
fsubr
mov
mov
dec
lret
pop
and
lret
and
out
fwait
repz
pop
repnz
adc
imul
inc
rorb
pop
outsb
or
xchg
movsl
lods
add
inc
movsb
out
mov
faddp
or
pop
into
dec
in
addb
inc
cmp
xor
jbe
ret
lods
stos
test
rol
sbb
lods
aaa
shlb
sbb
xor
or
pop
test
sbb
ljmp
icebp
mov
jl
jnp
gs
fmull
and
xchg
stos
hlt
mov
cmp
mov
call
xchg
test
scas
xor
xchg
test
jp
rorb
inc
xchg
or
push
mov
push
lcall
fldl
dec
and
and
add
sbb
dec
shlb
dec
push
xor
mov
mov
es
push
sbb
pop
pop
mov
outsb
out
mov
fbstp
pushf
fsubl
add
jp
test
push
ja
bound
dec
sbb
dec
mov
mov
js
jmp
ds
jle
adc
iret
or
sahf
jnp
out
fstp
push
leave
lea
cltd
mov
fisttpl
xchg
je
xchg
dec
jp
push
repz
jbe
sub
int
pop
xchg
inc
shll
mov
negl
mov
sbb
mov
inc
push
jbe
xor
fcmovnb
movsl
cli
dec
orl
and
adc
movl
lahf
mov
into
scas
inc
or
bound
jp
and
lods
lods
idiv
popf
orb
mov
test
jnp
kmovb
add
jmp
mov
jmp
lret
cmpsl
pop
or
out
sub
cmpsl
xlat
sarb
rol
addr16
fisubl
das
dec
jns
ljmp
inc
add
imul
fs
pop
leave
xchg
or
mov
ds
mov
inc
push
or
sub
add
dec
outsl
in
dec
int
stos
cmp
push
inc
dec
popa
sar
aad
inc
lret
sub
jbe
insl
sub
out
jmp
dec
mov
sub
fnstenv
or
jae
dec
inc
cs
xlat
push
sbb
cmp
sub
mov
mov
ja
sti
out
cmp
lahf
stos
in
mov
pop
bound
jns
adc
push
mov
testb
lret
push
repz
into
xor
clc
in
rcrb
push
sarl
in
jmp
imul
dec
jb
dec
rclb
jmp
sbb
test
fsubs
ror
stc
cmp
push
ja
mov
pop
out
pop
imul
sbb
jecxz
out
jns
dec
in
divb
adc
lods
insl
xchg
lock
lods
sti
imul
push
les
inc
jns
adc
sbb
les
pop
sbb
mov
dec
cmp
fisttpll
int3
scas
jp
inc
mov
pop
xchg
jmp
into
lea
inc
filds
scas
sub
xchg
jnp
and
nop
fadds
ljmp
inc
cli
les
push
fsubs
adc
les
xor
cs
jmp
add
sbb
out
mov
rcrb
inc
mov
cwtl
pop
mov
js
jbe
sbb
icebp
scas
push
aad
sub
addr16
sahf
mov
int
popa
lret
sub
add
arpl
repnz
call
fs
jno
or
inc
dec
cmc
or
cwtl
dec
sti
jae
xchg
mov
mov
mov
mov
sub
out
andb
int3
mov
dec
xchg
mov
xchg
aaa
repz
cld
ja
les
in
nop
push
push
mov
lcall
out
inc
push
cmp
dec
scas
sub
outsb
in
fidivrs
mov
xchg
jl
insb
or
or
add
imul
mov
sbb
lahf
push
inc
loop
pop
push
xchg
notb
adc
mov
or
jmp
iret
out
sbb
movsl
lcall
or
sbb
outsb
push
xor
insb
imul
mov
mov
mov
dec
nop
fistpl
push
mov
xor
sub
jno
dec
lods
inc
sub
cli
jg
push
ja
stc
cmp
adc
mov
nop
scas
psrad
iret
fwait
sub
xchg
aaa
adc
test
mov
inc
fisttpll
push
xor
jge
cmp
loop
add
scas
fstps
pop
and
mov
xor
das
fwait
jne
int3
mov
out
cli
lcall
and
mov
cmp
in
and
je
js
cmp
in
xor
stos
fnstsw
loope
jb
enter
adc
mov
mov
fdivrs
adc
hlt
sub
jle
jp
pushl
xchg
dec
or
and
pop
je
add
pop
mull
adc
mov
jle
jns
pushw
cltd
test
inc
cltd
stos
mov
push
adc
or
inc
sub
popf
sbb
jp
xor
and
xchg
arpl
mov
test
jbe
ret
andb
js
sbb
aas
pop
in
inc
jns
pminsw
xor
out
xchg
mov
push
shll
repz
lret
imul
rcrb
push
xchg
jge
aam
xchg
mov
push
pop
sbb
and
sub
sbbb
mov
push
xor
mov
or
jle
imul
ficoml
pop
dec
and
and
sbb
int
test
nop
sbb
add
das
imul
jge
leave
inc
into
fldt
pop
je
dec
les
jbe
mov
dec
jecxz,pn
sub
pop
daa
jne
add
mov
mov
arpl
mov
out
cmp
in
or
ficoml
or
jbe
adc
push
mov
lret
aaa
mov
cmp
or
sub
mov
mov
xor
jns
decl
xchg
adc
xor
cmp
stos
lahf
jge
dec
test
shlb
jae
xor
addb
inc
pop
xchg
aas
loope
or
cltd
push
cmp
ret
dec
jecxz
sbb
mov
cmpsl
pop
ret
jne
xchg
das
push
ja
xchg
nop
sbb
aam
add
mov
data16
aaa
push
shrb
xor
in
xchg
fwait
mov
fldt
fldcw
loop
cmp
lods
inc
pop
arpl
dec
sbb
ljmp
add
mov
xchg
ret
xchg
push
mov
sahf
jnp
testl
and
inc
mov
push
fs
jns
sahf
mov
mov
fucomip
mov
icebp
stos
or
mov
adc
movb
outsb
mov
icebp
adc
lcall
les
add
incl
insb
pop
fldl
into
insb
sub
xor
jecxz
push
stc
popf
and
insl
sub
jae
jb
push
data16
sti
or
xor
mov
arpl
scas
adc
xlat
ss
scas
mov
pop
mov
pop
nop
loopne
jno
arpl
popa
pop
out
cmc
jl
xchg
sub
mov
int
in
sbb
pop
mov
mov
jbe
rclb
pop
cmp
sub
jae
popa
dec
adc
inc
lahf
xorl
mov
push
ret
xchg
sub
adc
sahf
cmp
fldl
sbb
mov
jmp
mov
xchg
loope
repnz
pushf
mov
lods
les
lods
or
and
sub
jo
xchg
mov
inc
sub
sub
outsl
cltd
push
je
outsl
aas
std
xor
imul
jns
pop
mov
shrl
outsl
cmp
dec
mov
fildl
pop
divl
push
popf
jae
jl
testl
push
jle
out
adc
jae
movsl
sub
mov
xlat
lret
rorb
mov
xchg
movsb
insb
mov
sub
pop
cwtl
bound
xlat
aad
je
push
cld
cmp
add
lret
stos
dec
sbb
push
xchg
lcall
jmp
xlat
jl
push
jne
test
test
xchg
inc
lret
sub
push
shr
stc
ror
cmp
ljmp
es
stos
insl
pop
cltd
scas
mov
scas
lock
dec
add
xchg
int
movsl
xchg
inc
lock
or
add
pop
fistps
mov
xlat
lret
pop
cltd
jecxz
inc
jae
fisttpll
push
andl
jo
xchg
xor
pop
sub
outsb
xor
mov
sub
out
and
dec
jg
mov
and
sub
fildll
jl
imul
lcall
inc
adcl
mov
cld
sti
pop
xchg
pop
mov
pop
cld
dec
jae
adc
stos
mov
sub
xor
inc
push
xchg
in
sub
jns
movsb
pop
int3
mov
ret
lock
xchg
pusha
xor
mov
mov
dec
xor
loop
in
jno
pop
dec
loope
mov
xchg
inc
insl
push
movsl
jge
pop
jle
mov
mov
sbb
mov
loop
ljmp
push
or
or
mov
daa
sbb
xchg
pop
inc
les
mov
imul
push
aaa
into
ss
loopne
push
das
jns
xchg
mov
out
hlt
sbbl
lret
pop
pusha
loopne
xorl
jo
pop
push
jb
scas
adc
stc
adc
mov
aam
push
decb
nop
dec
imul
push
sub
in
in
stos
pop
inc
jge
xlat
int
dec
shlb
sti
dec
test
lcall
lods
fs
pop
cmp
jbe
mov
sbb
xor
aad
pxor
shll
icebp
mov
and
lret
cmp
sbb
push
imul
in
pushf
imul
sbb
test
cltd
xlat
adc
cmp
xor
dec
rorb
xchg
out
arpl
mov
rcrb
pop
or
movsb
sub
repz
pop
sub
cmpsl
ds
push
xor
int3
nop
pop
jmp
sub
into
mov
jg
jmp
inc
out
inc
jl
pop
jbe
and
movaps
rolb
outsl
adc
jmp
xlat
icebp
stos
cli
push
cli
fiaddl
or
popf
orb
add
enter
dec
enter
mov
test
popf
xor
imul
xor
or
jmp
dec
cmp
call
jle
jg
orl
popf
add
xlat
loop
out
mov
push
loope
push
push
lods
inc
mov
jb
enter
pop
lahf
or
xchg
repz
or
sti
jne
inc
mov
imul
cmp
data16
push
add
hlt
sub
dec
pop
adc
test
mov
popf
stos
jns
pop
mov
adc
pop
aam
pop
cmc
xchg
rcl
int
jb
enter
xchg
xor
ljmp
pop
imul
clc
cmc
cltd
cmp
lcall
add
dec
mov
insb
jge
popa
pushf
in
fsubr
mov
repz
mov
mov
mov
pop
inc
out
inc
adc
clc
arpl
add
add
jnp
js
xlat
ja
xchg
and
popa
addl
test
testl
sbb
test
cmpsl
mov
cwtl
mov
lea
pop
movsl
movsb
jnp
das
mov
lock
lret
mov
lret
out
inc
jge
pop
mov
movsb
add
ret
inc
jg
or
mov
dec
pusha
adc
nop
orl
sub
mov
addr16
repnz
mov
push
mov
add
loope
sub
sahf
dec
adc
or
sub
cmovp
add
insl
xchg
mov
xchg
push
stos
jns
sub
dec
and
xchg
punpckhdq
ljmp
mov
jle
aam
aad
jp
push
cmp
ret
inc
aad
insl
or
aaa
enter
dec
cmp
out
xchg
jmp
in
lock
ds
and
lcall
lahf
jns
test
lods
inc
gs
lcall
bsr
xchg
test
cmpsl
mov
lea
idivb
rolb
adcb
adc
pusha
je
daa
push
pusha
or
lods
adc
pop
or
push
mov
inc
push
in
jns
mov
or
mov
lods
movl
sahf
popa
enter
cs
push
push
push
mov
ds
cli
sub
adc
pop
lcall
cmc
stos
add
stos
fnstenv
mov
daa
push
pop
rcll
xchg
outsb
sub
stc
push
aad
jb
dec
push
mov
xchg
or
cld
xchg
jns
inc
and
jle
aaa
jecxz
cmpsl
pop
test
sub
jae
jmp
fiaddl
push
enter
mov
dec
aaa
ret
aam
aam
push
pushf
cltd
hlt
jnp
mov
fidivrs
mov
out
fisttpll
lcall
js
xor
and
adc
adc
mov
orb
cmp
enter
adc
pop
fistps
jae
mov
pop
fcmovne
cmpsl
mov
in
jno
jb
push
test
add
mov
mov
sahf
out
dec
mov
rcll
or
pop
mov
notl
call
cmp
cld
sbb
sti
popa
call
pop
rcr
dec
jae
xlat
in
popf
xor
rcll
pop
and
cmpsb
lret
cmpl
sbb
aas
loop
iret
loope
andb
out
xchg
ds
dec
fdivrl
add
xchg
in
and
ss
aam
xchg
aad
lock
sbb
bsr
add
push
sub
mov
aas
add
subl
pop
mov
dec
and
jb
int3
imul
or
push
push
sub
xor
mov
lahf
mov
jg
in
movsl
cltd
lcall
jl
push
int3
flds
mov
jg
repz
pusha
dec
xchg
jae
jp
shl
mov
call
shll
pop
cld
adc
aam
andb
imul
cld
lods
push
push
leave
mov
repz
xchg
stos
pop
movsl
mov
jns
lret
mov
jg
jecxz
out
xlat
mov
sti
push
nop
or
jnp
push
cmc
aaa
ljmp
sbb
inc
and
jns
xchg
dec
adc
pop
pop
adc
bound
ret
jns
dec
outsl
sub
jbe
popa
loop
adc
mov
dec
addr16
insb
pop
lods
out
std
mov
movsl
loop
mov
push
imul
ds
test
test
or
lret
pop
stos
sub
push
mov
push
cld
adc
pusha
dec
push
or
mov
lcall
subb
jae
cmp
fwait
lahf
pop
and
xor
repnz
jl
pushl
or
xor
mov
sub
shlb
jl
sub
ljmp
mov
and
dec
sub
or
popa
subl
rcrb
jns
lcall
fwait
mov
loop
fnsave
push
xor
test
mov
insb
jo
mov
test
rcrl
rcl
sbb
jp
enter
or
dec
jae
repz
cmpsl
mov
jae
push
insb
mov
mov
dec
pop
pop
ja
pop
adc
adcb
lret
dec
dec
cmp
sbb
xchg
das
or
xchg
or
adc
add
call
fdivrs
fisubl
lods
xor
outsb
xor
pop
mov
loopne
pop
xchg
xchg
xor
adc
lcall
lds
loop
mov
loop
adc
pop
push
dec
lds
out
xor
jl
inc
and
sub
leave
add
cli
dec
lret
sti
cmpl
jno
mov
mov
cmp
cmp
jmp
xchg
mov
or
xchg
add
mov
mov
aas
and
jmp
scas
push
xorb
fcom
cmpsb
es
mov
iret
mov
mov
xor
push
xlat
jb
sbb
inc
xchg
ss
rcl
popf
ss
jl
cmp
jecxz
mov
int
adc
in
lods
faddp
sbb
out
adc
push
ret
int3
scas
jno
adc
xchg
or
lret
cmp
sbb
mov
daa
and
fldenv
jmp
or
and
inc
pop
das
repz
mov
fadds
int3
jmp
mov
pusha
dec
sbb
xchg
popf
int
mov
dec
outsb
mov
ljmp
adc
loop
fwait
out
mov
xchg
adc
sub
iret
inc
leave
cmovb
pusha
sarb
dec
adcb
lahf
stc
jge
in
add
push
pop
or
cmp
mov
cltd
in
mov
in
push
ret
bound
add
gs
ret
sub
cmpsb
mov
out
pop
lret
rorb
lds
ja
rcrb
sbb
lods
div
fwait
dec
addr16
jp
enter
pop
test
inc
and
pop
pop
jo
bound
dec
sahf
ss
add
push
xlat
inc
dec
inc
popa
icebp
jp
out
xchg
mov
dec
iret
push
cmpsb
fmuls
dec
fs
adc
mov
sub
insb
loopne
ja
dec
inc
lret
fmuls
push
out
adc
sub
das
push
ja
jne
push
mov
push
add
cli
mov
loop
pop
pop
loopne
test
add
shr
cmpsb
jmp
mov
imul
outsb
mov
movsl
loope
mov
dec
add
jl
dec
sub
ret
inc
imul
scas
dec
dec
popa
mov
loop
cli
repz
pop
xor
ret
daa
nop
or
lahf
pop
pop
dec
inc
jl
repnz
push
scas
and
lds
pop
pop
mov
loop
notb
shlb
jge
aam
leave
or
js
dec
xor
in
rolb
inc
cs
cmpsb
mov
pop
mov
xchg
pop
inc
popa
xchg
rol
or
mov
icebp
add
pop
xor
sbbb
sbb
pop
mov
insb
add
out
sub
out
inc
rcrb
sub
movsb
subl
add
fimull
pushl
enter
dec
leave
adc
jns
pop
cmpsl
add
pop
jl
rcrl
push
cwtl
enter
pop
das
aad
dec
test
push
adc
arpl
and
clc
in
sub
aam
int
lahf
mov
std
xor
cmpsb
sub
lcall
cmc
pop
jb
les
xchg
lods
outsb
mulps
xor
sbb
jbe
or
and
and
loopne
push
push
push
pop
inc
push
or
adc
mov
and
cmp
testb
and
xchg
insb
sub
pushf
add
mov
test
or
addr16
mov
stos
xchg
mov
cli
fsubs
inc
xor
ljmp
mov
inc
les
xor
xor
rep
sub
add
movsl
push
mov
test
cmp
mov
inc
fdivl
ret
jmp
sub
repz
into
push
addr16
scas
cltd
in
push
ds
fcomps
dec
cwtl
mov
mov
popf
jge
inc
cmp
pushf
mov
cmpsl
out
cmp
jae
mov
sub
pop
xor
insl
sub
in
push
lcall
mov
or
test
mov
push
xor
leave
mov
mov
pop
jbe
mov
mov
jmp
iret
cltd
loope
jno
mov
mov
mov
inc
scas
cs
push
mov
inc
jbe
outsl
inc
pop
xchg
mov
mov
or
scas
cmpsl
mov
xor
add
mov
and
dec
xchg
lea
scas
push
in
cwtl
or
xchg
jbe
jg
dec
pop
das
mov
cmp
leave
mov
shl
mov
test
stos
nop
repnz
cmp
push
std
mov
sub
add
inc
out
pop
cltd
inc
xchg
inc
push
movsb
jo
mov
adc
add
rcr
cmp
mov
inc
or
ret
cwtl
insb
aas
push
dec
mov
pop
scas
nop
cmp
or
popf
movsl
pop
jnp
pop
mov
jmp
sti
cli
xchg
mov
mov
sti
push
xor
addb
or
or
stc
sti
fisubs
cmpsb
push
push
test
mov
xlat
xchg
jns
push
lock
lock
sub
push
mov
jns
jnp
movsb
push
xchg
and
imul
insl
jnp
dec
lahf
push
add
inc
mov
out
out
inc
xchg
lahf
mov
add
dec
jg
das
cmp
and
test
addb
lea
pusha
pop
leave
sbb
push
ret
jle
fwait
and
dec
push
incl
xchg
mov
or
addl
inc
pop
fwait
and
ja
out
stos
outsl
dec
nop
loopne
inc
ret
insl
inc
push
lods
sarl
loope
sbb
push
jnp
in
jge
xchg
sub
leave
sahf
scas
cmp
add
js
das
adc
adcb
mov
pop
sub
arpl
fsts
aas
push
add
popf
cmp
fidivs
or
aaa
add
dec
jmp
cmp
adc
scas
add
jo
js
cmp
les
jmp
add
loop
mov
xor
rorb
cmpsb
xor
inc
in
pop
shrb
les
sub
push
push
mov
nop
arpl
push
arpl
mov
or
and
aaa
add
lret
cmp
mov
fidivrl
pusha
js
pop
gs
pusha
out
or
lcall
stc
js
cmpb
fisttpll
adcl
out
loope
xchg
aaa
cmp
dec
cmc
aas
mov
pop
xor
cltd
mov
xchg
dec
dec
nop
aam
subl
sbb
fsubrl
push
stc
push
aaa
insb
daa
ja
inc
sub
sub
lods
cmpl
imul
pop
leave
sub
lods
mov
cmp
lods
cld
sbb
xchg
pop
push
fstpt
mov
and
inc
xor
sti
jbe
or
mov
icebp
ja
dec
push
jmp
jle
ja
test
iret
mov
cmovb
pop
fisubs
mov
cltd
aaa
add
stos
loopne
pop
push
addr16
dec
mov
mov
push
mov
mov
fcomps
jae,pt
shrl
jne
imul
mov
aaa
mov
loope
cmp
pop
and
push
fidivs
xor
mov
mov
lds
jnp
ljmp
push
idivb
push
loope
push
clc
adc
sub
int3
pop
test
lret
shrl
rol
je
imul
je
lods
mov
pop
ret
jnp
adc
das
fildl
push
fs
ljmp
sub
adc
sub
add
flds
or
mov
xor
repnz
jo
repz
jg
in
add
fnstcw
inc
fadd
xchg
je
push
mov
ss
and
sub
or
xor
add
les
push
fiaddl
push
jg
loope
inc
stos
es
pop
insb
mov
sbb
push
addl
repnz
lcall
mov
es
int
dec
je
shll
jno
jecxz
pop
out
les
push
adc
cmp
or
push
mov
add
sahf
sbb
push
jnp
mov
dec
insl
hlt
inc
add
mov
aas
test
lock
stos
xchg
int3
pop
enter
in
jo
imul
xor
ds
adc
jecxz
mov
notb
xchg
jnp
mov
add
insl
jg
out
jl
push
xor
hlt
cmpl
movsb
test
arpl
cmp
pop
add
ja
cmc
mov
sbb
pop
movsl
ret
das
push
or
rcr
sub
add
insl
dec
rcrb
jo
es
sub
pushf
xchg
arpl
inc
and
test
pop
or
fdivrs
cs
lds
push
faddl
add
fstpt
dec
mov
or
loope
dec
sbb
adc
outsl
mov
int
int3
mov
mov
jmp
or
mov
test
and
jmp
jl
dec
mov
nopl
or
repnz
imull
jl
pminsw
roll
fcmovne
push
mov
movsb
fwait
cs
pop
repnz
roll
xchg
mov
ret
les
popf
mov
push
mov
sub
loop
jge
rorb
jle
and
stos
sub
insb
fsubl
cs
clc
add
popf
gs
iret
imul
testb
cli
lds
mov
inc
push
int
or
cmp
loop
lcall
stos
cmp
adcb
jmp
mov
testl
jne
inc
lods
and
mov
cld
pop
sbb
test
popf
sarb
jb
xchg
mov
xlat
pushf
and
fadds
sub
xor
mov
xchg
addr16
dec
loopne
scas
sub
sbb
out
daa
cmpsl
jne
popa
out
jo
push
adc
and
xor
add
shlb
dec
ror
iret
nop
xchg
jb
icebp
mov
idivl
jle
xchg
in
iret
mov
jecxz,pn
enter
push
mov
dec
inc
or
nop
add
pop
push
leave
sbbb
mov
sbb
jns
mov
sbb
push
dec
ds
fsubl
jmp
xor
or
mov
ja
inc
dec
in
push
add
sub
adc
aas
mov
sti
fsubl
mov
mov
mov
gs
ljmp
fisubl
jbe
aad
mov
mov
movsl
xor
cld
mov
repnz
mov
lods
outsl
aas
pushf
sbb
add
das
dec
and
and
push
add
mov
js
insl
adc
das
mov
mov
clc
lret
sbb
inc
mov
adc
daa
cmpsl
fcom
sub
into
or
ret
fiadds
lea
arpl
test
fidivs
cmc
push
push
xchg
fdivrs
push
mov
mov
ret
lds
lret
and
test
lods
loopne
popa
insb
sub
mov
maskmovq
jl
cs
decl
adc
sti
ret
arpl
fnstenv
sbb
lods
inc
pop
imul
lret
push
frstor
dec
shll
insl
add
or
jmp
and
cwtl
int
in
pop
cmp
sub
mov
add
js
shlb
xchg
orl
dec
icebp
js
pop
mov
adc
fmull
and
ret
es
dec
mul
xchg
xchg
aaa
and
call
cmpl
pop
cmp
addr16
rclb
jb
stos
jnp
jp
mov
ds
sub
scas
adc
mov
loope
push
popa
add
repnz
mov
pop
add
jbe
mov
push
arpl
xchg
rorl
jle
repz
mov
push
insl
lods
cmp
rcrb
xchg
or
push
mov
ret
jle
inc
das
pop
pop
dec
mov
push
xchg
leave
mov
roll
in
lods
arpl
adc
insl
adc
ret
mov
push
xor
sub
add
hlt
lret
cmpsb
jo
bound
sbb
adc
stc
or
setle
bound
imulb
xchg
sarb
jmp
call
clc
sub
push
mov
insl
insl
ss
out
sub
sub
xor
xorb
or
jb
rcr
fldt
mov
sub
jmp
popa
in
stos
enter
rol
mov
cmpsl
sbb
jb
insb
sub
sbb
dec
cmpsb
stos
jbe
aam
jno
mov
int
into
movsb
hlt
rclb
sbb
sbb
aad
imul
cwtl
imul
push
jecxz
divb
loope
movsl
loopne
push
pop
je
lcall
ljmp
push
pop
fsubr
adc
call
lret
pop
scas
xchg
imul
add
arpl
rcll
stos
xchg
sbb
insl
sub
add
jb
orb
sub
sbb
int3
out
mov
push
into
enter
cmp
shlb
je
mov
xor
add
inc
xchg
and
adc
jae
jnp
xchg
iret
cwtl
repz
dec
sahf
jne
push
icebp
adc
xor
lds
add
add
sub
push
adc
cmpb
rcrl
dec
xlat
add
in
in
sbb
and
xchg
mov
xchg
imul
adc
and
pop
inc
mov
adc
cmp
and
leave
leave
mov
mov
and
xor
or
lock
es
mov
jae
loopne
mov
bound
cmc
push
fadd
popa
xchg
call
sub
dec
rcll
dec
add
dec
sub
outsb
xchg
ds
out
push
fisttps
mov
jmp
js
pop
aaa
je
and
dec
clc
popf
loope
fistpl
or
pop
or
sub
cmpsb
mov
sbb
sub
in
add
push
ljmp
cmp
js
into
cmp
mov
dec
add
ljmp
stos
mov
xor
jns
add
pop
pop
pusha
cld
pusha
push
xchg
dec
push
shrl
or
into
out
add
xor
jp
sbb
sbb
push
mov
cmpl
push
push
push
and
stos
xchg
pop
jnp
cltd
jo
and
mov
imul
pop
loopne
inc
les
xor
pop
out
data16
dec
push
sbb
mov
arpl
cmc
outsb
aas
faddl
and
dec
out
mov
cmp
adc
rolb
jnp
xor
adc
dec
test
lcall
mov
repz
mov
inc
cmp
imul
push
mov
ljmp
add
lods
pop
pop
sub
cmp
jo
xor
loopne
jmp
lret
stc
xchg
insl
jmp
clc
jne
nop
mov
xor
stc
pop
xchg
mov
in
fldenv
mov
adc
sub
int3
cmp
dec
pop
fs
js
push
stos
int3
inc
adc
popa
xchg
mov
repnz
cmp
cmp
cmp
out
fstl
sub
sbb
or
inc
mov
xchg
dec
add
cmc
aad
jmp
lods
shlb
aad
or
push
dec
jp
mov
in
mov
inc
icebp
mov
push
sub
jmp
wbinvd
je
lods
and
mov
test
mov
shlb
lock
jl
lret
nop
aas
jns
and
mov
dec
xsha1
cmpsb
lret
mov
shlb
mov
fstpt
and
cld
sbb
ds
arpl
mov
adc
fwait
out
es
mov
inc
bound
mov
mov
mov
mov
test
out
faddl
je
rolb
or
push
and
pop
sbb
mov
fists
fnsave
mov
lods
enter
outsb
in
ficoms
lds
jb
jmp
mov
in
data16
xchg
xor
or
test
shl
cmp
jmp
jmp
dec
mov
fdivl
fisubrl
push
fistl
cmp
sub
or
cmpb
sbb
jge
cltd
mov
mov
sahf
fsubp
test
adc
sub
pushl
dec
outsb
mov
mov
xchg
in
std
cmc
push
nop
xor
add
adc
shlb
sbb
hlt
ret
out
xlat
lret
aam
push
sbb
sbb
push
outsb
gs
xchg
je
mov
sbb
lret
jne
jne
pop
sbb
or
xchg
in
add
test
add
movsl
xor
test
push
sub
or
dec
inc
push
pop
lret
outsb
lret
out
sarb
push
mov
pop
mov
or
testb
add
or
push
std
mov
and
add
pop
mov
sarl
cwtl
mov
mov
pop
subl
mov
orb
add
lret
push
fcomp
jmp
jg
xor
scas
or
lods
mov
int3
mov
xchg
dec
cmp
push
inc
sub
in
shr
hlt
notb
mov
ds
adc
mov
out
fstps
fcmovb
xchg
sub
gs
mov
leave
cmp
fstpt
ss
xor
nop
sub
ret
push
mov
jbe
in
fyl2x
dec
lret
mov
xorl
sbbb
ret
scas
roll
mov
xchg
call
mov
ds
cmpsb
xchg
ljmp
inc
jo
dec
scas
xor
lret
jge
ret
std
pop
pushf
popf
movsb
out
ret
imul
lods
outsb
ret
loopne
rcl
and
push
cmpsb
int3
push
popa
ja
test
add
pop
and
pop
mov
int3
cmp
rclb
icebp
sub
sarb
push
insb
pop
xchg
cmp
lcall
in
sti
mov
dec
dec
mov
mov
cmp
insl
repz
and
imulb
out
adc
clc
scas
push
cmpsb
inc
jmp
movsb
ret
fsts
xchg
dec
or
sub
in
std
mov
and
fisubrs
sbb
fsubrl
lds
jge
sbb
popl
adc
es
mov
jno
jae
fiadds
lods
mov
lcall
push
and
clc
sbb
arpl
addr16
lret
push
repz
jmp
mov
dec
pop
leave
iret
add
xor
xchg
or
std
and
sub
mov
sub
jnp
pop
push
cmpsb
jbe
enter
mov
mov
je
lea
jo
pop
lea
pushf
fsubl
push
push
arpl
stos
xchg
jg
into
cmp
and
xchg
sub
xor
cmp
mov
mov
andb
push
stos
or
pusha
add
inc
nop
sarl
jb
cmpsl
mov
call
mov
push
outsb
mov
jecxz
lcall
adc
call
inc
cmc
stos
xchg
mov
roll
je
push
pop
jecxz
dec
xor
out
sbb
aad
xchg
scas
xchg
dec
outsl
movsl
push
xor
scas
and
daa
push
and
push
xor
fcoms
lret
push
je
lahf
outsb
pushf
pop
jp
lock
stos
jecxz
or
jecxz
aas
pop
iret
or
loope
dec
xchg
pop
xchg
add
repz
movsb
aad
sysret
add
jns
mov
dec
out
cld
aam
push
fcoml
mov
fwait
dec
sahf
mov
lods
ja
addr16
loopne
aad
arpl
and
jno
fcmovbe
inc
sbbb
sbb
insb
movsl
pop
divl
cmc
cmp
into
lods
in
push
jnp
mov
push
mov
push
fs
xor
in
dec
dec
shlb
stos
lea
xor
test
and
sbb
les
aam
cmpsb
mov
jae
dec
xchg
push
bound
js
out
sub
pusha
lods
pop
sti
jle
xor
shrl
lock
fs
add
pop
das
sub
cmp
aam
cmpsl
mov
jnp
cmp
sbb
fists
sub
push
pop
sub
xchg
jmp
gs
lcall
inc
push
cwtl
mov
push
clc
loopne
imul
push
sbb
jmp
lret
jmp
jmp
sbb
ret
push
cwtl
insb
sbb
orb
iret
push
cmp
fs
xor
mov
ljmp
adc
fiadds
fstpt
add
ds
stos
cmp
adc
lock
fidivrl
mov
in
cmp
push
leave
mov
fwait
sbb
or
sbb
mov
mov
outsl
mov
jo
pop
pop
mov
sub
ficoms
mov
xchg
jae
sub
fnstenv
loop
sub
mov
orb
in
lret
les
add
lods
pop
rorb
jl
insb
inc
jnp
dec
push
push
push
outsl
mov
lods
mov
and
test
outsl
clc
dec
and
in
lods
or
cld
int3
or
cmp
mul
pop
aaa
cmp
test
or
jae
mov
add
fdivl
mov
push
or
and
or
jo
push
mov
mov
and
jmp
cld
cmp
mov
fistpl
fisttps
testl
cmpsb
stos
divl
in
out
cmp
scas
mov
and
icebp
sahf
ss
in
incb
sub
enter
dec
xchg
outsl
sarb
inc
pop
mov
mov
ljmp
nop
aad
xor
scas
fstl
insb
add
out
or
pusha
and
imul
cs
cmpsb
mov
jecxz
xchg
xor
dec
mov
int3
ss
dec
mov
sub
loope
outsl
jns
push
sar
pop
inc
adc
mov
or
mov
mov
movsl
test
test
repnz
and
repz
outsl
gs
push
mov
mov
xlat
subl
mov
sarb
cmp
jnp
inc
fcomi
sub
fistps
data16
daa
fadd
call
push
outsb
mov
lods
shlb
xlat
sbb
sbb
cmp
jp
mov
test
fbstp
inc
lods
loope
push
xchg
push
pop
adc
ret
sbb
andb
dec
cmp
test
jnp
pop
repnz
inc
adc
pop
js
fst
aam
mov
sub
out
pop
lret
adc
mov
mov
dec
jmp
aaa
arpl
addr16
outsb
add
int
sbb
sbb
jmp
dec
push
xor
sub
mov
gs
jb
adc
mov
faddl
outsl
aas
xor
add
stos
mov
je
xor
mov
je
iret
jl
mov
push
aas
out
nop
push
mov
sub
popf
repz
cmp
inc
cmp
in
insb
fsubl
mov
mov
fsubrp
push
dec
aas
jecxz
adc
mov
pop
xorb
sub
pop
or
inc
mov
push
mov
mov
jmp
mov
popf
push
mov
and
lea
call
dec
sub
cmpsb
js
inc
mov
push
inc
jl
and
jnp
mov
inc
testl
mov
xor
add
movsb
push
and
lret
lock
lcall
mov
cld
adc
cltd
jne
frstor
jl
in
mov
add
lret
fsubrs
in
push
push
add
xchg
xchg
cmpl
adc
jns
enter
cmp
pop
rcrl
sbb
or
jne
sub
repnz
mov
jecxz
pop
push
pop
cmpl
in
push
in
dec
enter
push
jl
iret
call
mov
cs
int
mov
jo
loop
xor
add
jge
mov
clc
dec
mov
fldenv
stc
nop
inc
loope
pusha
testl
sub
adc
add
mov
cltd
bound
stc
xchg
sbbb
dec
cmpsl
pop
in
push
das
mov
cli
clc
cmc
sbb
add
test
sbbb
popf
sbb
out
bound
add
mov
sbb
jno
inc
sbb
fidivl
inc
or
cmp
ds
fcomp
sbb
push
xchg
es
adc
sub
push
mov
xor
pop
stos
test
cmp
idivb
jg
push
sub
clc
lock
jae
lock
insb
or
icebp
adc
sahf
and
das
sub
mov
add
pop
icebp
cwtl
in
notl
mov
and
hlt
lret
mov
or
add
fs
lock
cmp
nop
mov
dec
cmp
jl
sar
pop
fldenv
or
int
inc
xchg
or
xchg
xchg
int
das
mov
popf
shrb
lea
sub
int3
or
or
call
movsb
inc
ret
mov
ss
cmp
mov
rolb
fcoml
arpl
scas
cmp
mov
lcall
cltd
xchg
repz
mov
adc
repnz
xlat
add
in
arpl
inc
hlt
mov
dec
jne
add
shrl
gs
xor
mov
loope
cmc
push
inc
add
cmp
cmp
pop
xchg
or
sarw
inc
aas
xor
ljmp
int3
aas
sbb
push
mov
push
mov
or
cmp
sub
scas
repnz
add
loop
push
fistpll
sub
fstpt
mov
ljmp
adc
stos
push
xor
push
inc
movsb
pop
xchg
ds
popf
mov
and
mov
enter
mov
shlb
fcomps
dec
adc
jle
nop
dec
stos
ja
je
xchg
mov
scas
inc
xchg
outsl
rcl
es
insb
ljmp
xor
jmp
out
call
sahf
fwait
cmp
jecxz
inc
test
out
ljmp
fisubs
loop
data16
or
cmc
les
clc
sbb
call
xlat
adc
lret
cmp
mov
push
cmp
int
push
mov
sbb
sbb
push
pop
and
outsb
in
dec
sub
inc
pusha
xchg
imul
or
imul
into
fwait
clc
sub
gs
or
jl
mov
dec
ja
scas
adc
inc
lods
add
xchg
insl
movl
movsl
fidivrl
push
mov
xor
add
aad
sbb
mov
aas
test
bound
in
fiaddl
jp
jp
enter
sti
ret
mov
adc
loop
add
fmuls
xor
sahf
fadds
dec
pusha
cmpsl
fsubrs
out
cmp
xchg
mov
fcomip
adc
dec
pop
clc
xor
ja
xchg
ja
sbb
hlt
push
cmpsl
hlt
popa
out
mov
addl
inc
xchg
sbbl
repnz
or
mov
data16
jne
cmp
adc
pushf
shrl
cmp
insb
ret
inc
test
test
sub
aaa
test
pop
jmp
mov
sbb
ds
xor
in
test
pop
decl
push
push
mov
jno
xor
cli
nop
xlat
fdivs
jb
divb
lea
outsb
dec
out
repz
xor
cld
dec
arpl
jmp
add
cwtl
orb
sbb
out
mov
sbb
mov
imul
clc
push
pop
pop
jb
and
jnp
scas
jne
inc
iret
inc
xchg
mov
fwait
call
or
cwtl
fs
mov
sub
lahf
mov
inc
push
mov
leave
inc
mov
jnp
sbb
fdivrl
insl
lahf
and
dec
repnz
or
push
or
xchg
into
and
fmull
fstpt
stos
mov
enter
int
mov
cwtl
addr16
and
das
adc
call
shlb
repz
push
mov
xor
sbb
rcr
mov
cmpsl
out
push
cli
sti
in
add
add
ja
pop
mov
cmp
dec
dec
jnp
clc
mov
push
mov
jle
inc
call
cmpsb
enter
imul
jecxz
xor
pop
push
and
lds
mov
fdiv
insb
and
das
arpl
je
jno
inc
jo
in
outsl
jae
das
add
sbbl
fbld
push
lret
xchg
sub
popf
int3
mov
mov
icebp
push
push
pop
mov
inc
lcall
jg
leave
popa
test
insb
mov
nop
pop
negb
sbb
lahf
roll
imul
pop
mov
mov
push
push
es
adc
sub
popf
js
push
jbe
mov
pop
pop
imul
mov
inc
in
sub
add
fs
fsubrs
mov
mov
cwtl
aam
jmp
or
insl
divb
in
mov
sbb
sarl
repz
sub
out
push
and
xor
pop
rorb
mov
pop
test
dec
cmp
fidivl
das
xor
mov
mov
mov
divb
aad
sbb
out
popf
mov
push
test
push
popf
test
jns
divl
aam
addr16
or
addr16
sbb
push
jge
sub
pop
push
mov
xchg
dec
clc
mov
mov
inc
jae
or
adc
xchg
add
rorl
inc
loop
mov
leave
jp,pn
adc
outsb
inc
dec
clc
xchg
push
mov
cmc
pop
outsb
cmp
lods
push
cli
orl
enter
int3
mov
pop
lods
push
cvtps2pd
rcrb
sub
or
cwtl
xor
out
sahf
shrl
xchg
inc
dec
cwtl
and
rclb
cmpsl
test
cltd
xor
xchg
pop
push
flds
xor
mov
shl
push
inc
hlt
test
data16
ja
test
dec
imul
pop
jle
jmp
cs
pop
out
aaa
cmp
mov
mov
leave
dec
inc
adc
popf
dec
mov
ret
jge
ja
xor
mov
adc
iret
imul
mov
sub
fldenv
leave
cmp
mov
out
xchg
test
cmp
inc
sub
cs
das
fiadds
ljmp
or
xor
cmc
jge
jb
dec
xchg
out
ljmp
sub
addr16
and
jae
imull
jp
aas
stos
pop
mov
into
sub
add
mov
mov
or
jb
rclb
inc
mul
pop
mov
xchg
mov
sbbl
pop
xchg
xlat
in
push
push
fdivrl
cli
test
dec
add
cmpsb
jbe
ret
and
cmp
insl
bound
popf
and
sbb
flds
dec
dec
ror
cmc
dec
addr16
jecxz
add
ja
bound
je
mov
iret
inc
inc
lret
fcomps
rcrb
xchg
stos
fcompl
stc
imul
xchg
das
jb
adc
add
ds
jo
push
pushl
jns
mov
xor
cli
or
fsubl
jns
cltd
cltd
xchg
leave
imul
cld
sub
or
inc
xor
sbb
mov
inc
sub
hlt
add
aaa
push
xor
in
lea
in
or
cmp
xor
and
dec
push
mov
call
rcl
and
fsub
jmp
adc
adc
mov
xchg
xchg
jmp
fistps
dec
mov
xchg
movl
sbb
lret
xchg
and
pop
js
idivl
fildl
dec
in
add
xor
cmp
and
mov
push
or
subb
mov
xor
cmp
clc
pop
and
push
xor
call
les
adc
jp
jp
dec
mov
ja
repnz
sub
cmp
orb
add
cli
les
sub
lret
xlat
fisubs
add
cs
push
pop
xchg
subl
sub
jg
test
inc
cmpl
clc
lret
pushf
pop
mov
add
test
rcll
inc
pop
pop
jnp
aas
add
clc
cmpb
loop
jg
mov
imul
sbb
adc
sub
mov
sbb
xorb
fs
jge
adc
insl
jg
fbld
jne
push
push
jle
mov
jno
rolb
lods
nop
push
int
cs
mov
push
jp
mov
inc
addr16
enter
ret
int
mov
ret
outsb
mov
out
scas
and
xor
pop
nop
imul
and
into
lahf
mov
outsb
jmp
js
aam
jge
test
jge
imul
fdivrl
in
test
pop
pop
pop
lods
xchg
lret
fmuls
mov
mov
mov
test
in
push
lcall
hlt
jnp
adc
in
adc
jae
xchg
jg
mov
inc
stos
pushf
outsl
aas
fmul
ss
daa
pop
nop
push
adc
xchg
or
loopne
into
mov
sub
push
out
pop
and
pop
out
lahf
in
xchg
ss
cld
mov
or
cmc
or
jb
sub
inc
scas
sub
xchg
mov
inc
cltd
jo
in
xor
adc
jne
dec
lahf
xchg
add
sbb
ja
lret
jno
loop
mov
mov
fstpt
xchg
and
xchg
jl
add
lcall
cmpsb
loope
gs
cli
mov
cmp
les
loopne
jnp
notb
cld
lea
fisubrl
xchg
cs
fisubrs
mov
fistpl
popa
in
xor
sbb
ret
shrb
push
sub
inc
aas
js
or
and
repz
pop
test
movsb
dec
bound
fwait
jae
sbbl
sub
adc
sbb
insb
pop
sub
sub
fdivr
mov
sub
inc
push
repz
inc
repz
fmull
iret
mov
push
pop
roll
mov
jne
fisubl
mov
mov
mov
aad
pop
push
fildll
xor
nop
xchg
das
sub
pushf
pusha
mov
mov
pop
jmp
push
add
pushf
scas
repz
xchg
mov
xchg
sub
js
xchg
or
mov
xor
outsl
cmc
sbb
cmp
sub
mov
in
dec
add
jns
shll
mov
pop
sub
out
jne
jb
and
inc
data16
and
or
gs
sub
inc
mov
jns
das
xchg
sub
lock
or
in
xchg
nop
dec
fisttpll
xor
add
arpl
push
pop
or
mov
add
dec
pop
jns
ja
dec
test
sarl
push
loope
aas
xor
shll
mov
xor
pusha
stos
cmp
push
fstl
adc
test
loopne
jno
xor
js
mov
dec
mov
xchg
add
push
rolb
inc
dec
rcr
movsl
mov
call
or
jbe
inc
loope
xchg
out
divb
xlat
je
in
fstpt
inc
and
push
jp
mov
ret
jbe
cltd
xchg
bound
aas
addr16
pop
fcomps
push
int
pop
xor
sahf
inc
sbb
adc
sbb
stos
pop
test
inc
fwait
pop
out
pop
add
adcb
aad
or
in
in
std
dec
stos
and
mov
aas
loopne
hlt
fistpl
fmul
inc
mov
sub
repnz
pop
xor
das
mov
cmpsl
inc
push
leave
jg
mov
insl
and
mov
cmc
out
mull
frstor
outsb
lods
mov
pushf
pop
adc
dec
add
add
iret
xor
dec
fldl
roll
xorl
jmp
xchg
pop
cmpsl
and
inc
decl
xor
lret
cmpsw
mov
xor
jae
popf
outsb
push
test
xor
scas
xlat
call
daa
movsl
test
jae
xor
ds
push
and
jne
les
inc
push
fcmovnb
dec
push
lret
rcll
test
in
sbb
sbbb
add
faddl
ljmp
fcoml
adc
lahf
xchg
sub
push
or
pusha
sbb
lret
lds
xlat
int3
sbb
jl
mov
jno
add
jbe
add
xchg
cli
xchg
jg
pop
mov
pop
add
adc
mov
arpl
sub
bound
push
or
adc
and
or
call
lahf
push
cmp
sbb
int3
pop
cltd
aaa
dec
push
gs
clc
jp
outsb
test
and
daa
fisubs
iret
scas
sarl
mov
sbb
daa
push
inc
push
clc
mov
mov
in
add
mov
cld
std
adc
shll
outsl
ret
ficompl
jecxz
push
lcall
add
push
mov
rclb
test
mov
lret
iret
arpl
xchg
imul
test
mov
scas
clc
leave
mov
inc
in
mov
ret
lods
fists
cs
outsl
jle
int3
ret
inc
push
pop
sub
loope
add
sub
pop
xor
shrb
mov
xor
xor
outsb
sbb
setnp
mov
push
test
sti
xor
pop
cmp
mov
arpl
add
sub
dec
jg
and
or
sbb
test
push
lods
adc
mov
mov
xorb
ljmp
xchg
mov
arpl
xchg
and
fidivrl
xor
adc
int3
shrb
xor
xor
inc
xchg
jbe
outsl
movsl
lret
jns,pn
nop
repnz
arpl
push
mov
mov
in
push
add
pushf
data16
rorl
mov
mov
scas
int
test
mov
jne
cs
test
sub
das
jmp
push
inc
jno
push
or
and
push
outsl
jge
pop
bnd
cmpsl
in
imul
jle
jns
movsl
cmpl
shll
fiaddl
mov
push
xchg
pop
xor
push
popf
insl
outsl
xchg
add
test
fstl
push
cmp
pop
cltd
jmp
lcall
movb
cmp
sbb
ret
or
mov
pusha
sub
cmpsl
pop
movaps
mov
xchg
testb
adc
xchg
popf
cmp
out
xchg
or
movsb
push
jmp
testb
push
ror
arpl
push
xchg
fldcw
shrb
xor
xchg
inc
pop
and
dec
movsl
lahf
jns
jno
out
mov
pop
mov
jns
icebp
das
or
xchg
hlt
mov
movb
orb
frstor
arpl
stos
jnp
orb
sbb
and
push
push
xchg
iret
pop
pop
mov
cmp
je
jp
or
mov
fistps
addr16
push
or
cli
mov
sub
mov
xchg
xor
cmovp
cld
and
loop
jno
lret
push
push
and
fisttpll
jo
dec
mov
push
dec
sub
jge
es
insb
cmp
pop
adc
mov
push
shr
scas
lock
gs
aad
cmpsb
in
outsl
or
testl
nop
lods
sub
sbb
sbb
cmpb
jecxz
ret
imul
fcoms
addr16
push
sub
sbb
scas
mov
adc
xchg
xchg
lea
xchg
cmp
sahf
push
add
sub
dec
add
push
stc
dec
aam
das
push
leave
push
xor
enter
loop
adc
or
ja
or
push
inc
add
icebp
lock
sub
sbb
popa
lods
jge
aad
cmc
mov
sub
push
rcll
in
mov
xor
mov
imul
and
adc
add
xor
xchg
imul
orb
shrl
popa
xor
rcr
and
mov
pop
cmpsb
push
test
or
inc
cmp
test
mov
push
inc
addb
xchg
inc
addr16
jo
and
mov
xchg
aaa
je
daa
test
outsb
inc
idivb
int3
xchg
adc
mov
dec
out
and
popf
or
sbb
lods
xchg
clc
shlb
inc
inc
scas
cmp
aam
push
mov
stos
dec
ja
ss
std
outsl
sbb
clc
sbb
mov
ljmp
sub
sbb
jo
cmp
inc
lcall
in
cmc
cmp
loope
inc
jns
arpl
and
pop
jbe
cmp
repnz
int
shll
push
mov
pop
bound
xor
mov
xor
pushf
fnstenv
loope
outsb
dec
and
cmc
jbe
lret
jne
in
hlt
mov
ficomps
add
lods
xor
push
push
test
jne
rcr
sbb
and
pop
jecxz
dec
das
call
or
add
jecxz
jge
movsl
int
xchg
scas
inc
mov
sub
ja
movsb
and
add
push
mov
mov
jmp
call
jns
icebp
leave
jmp
popf
jns
push
mov
scas
ret
cmp
sbb
testb
in
fiadds
sbb
cli
sub
hlt
lods
or
xor
sbb
jns
cmp
pop
and
out
in
decl
adc
enter
jno
mov
repnz
sbb
fucom
mov
inc
ret
std
gs
adc
mov
mov
aaa
loope
pop
and
lret
cld
mov
push
fnstcw
mov
bnd
jns
int3
aam
fidivs
das
inc
lret
movsl
dec
mov
push
jno
je
aas
or
sarl
pop
pop
aam
and
add
nop
jb
out
push
in
nop
add
pop
cmpsb
cmc
mov
mov
out
loopne
push
mov
lds
jbe
popf
mov
or
or
add
addr16
mov
dec
inc
loopne
lret
dec
push
pop
pop
jp
lea
clc
pop
pop
rcl
cmp
arpl
pop
gs
fnsave
fmul
imul
std
es
inc
ffree
push
call
outsb
mov
es
mov
and
lds
dec
sbb
sarl
mov
jecxz
test
mulb
sub
dec
cld
push
jle
adc
test
xchg
pop
pop
inc
jne
popf
cmp
test
jmp
cmp
repz
inc
mov
gs
daa
into
stos
xchg
lahf
pop
push
xor
nop
fwait
subl
pop
jns
sub
iret
or
js
xor
and
jnp
and
and
adc
push
lods
in
sbb
and
neg
add
xchg
dec
sub
mov
aad
aaa
inc
xchg
inc
sar
adc
incl
jb
arpl
outsb
out
addr16
dec
and
mov
int
inc
inc
sub
out
xor
dec
inc
fldcw
lea
and
xor
mov
mov
pop
test
dec
adc
imul
inc
inc
rcrb
adc
pusha
es
sti
and
lret
mov
cmc
jo
sub
fldlg2
xchg
lds
shlb
xor
fidivl
aas
dec
jns
scas
fwait
add
push
gs
std
pop
cmpsb
loop
lds
jge
mov
and
jnp
pop
testb
fsubrp
repnz
pop
cmp
push
adc
sub
repnz
das
xchg
pop
sub
and
ja
pop
xchg
lock
push
nopl
and
push
jnp
add
daa
and
rcr
mov
outsb
out
xor
mov
outsb
sub
mov
dec
and
xor
shrb
jmp
dec
dec
or
pop
outsl
loop
aam
sbb
imul
add
bound
rorl
jbe
pop
popf
pop
jae
add
mov
cltd
add
imulb
adc
pop
ret
fsubr
test
and
mov
mov
fcomps
fwait
inc
mov
out
sub
std
push
js
repnz
shrb
mov
mov
add
popa
lods
test
mov
push
mov
shr
sbb
or
icebp
mov
xor
pushf
mov
in
int
jmp
cmp
and
out
imul
les
jae
jne
jl
jecxz
xchg
xchg
push
imul
add
sahf
test
or
push
fildll
arpl
pop
mov
in
sub
dec
pop
js
faddp
sbb
out
pop
dec
lds
test
addr16
push
adc
fwait
out
cs
cltd
in
mov
cli
jb
sbb
outsb
adc
sarb
xor
pop
xlat
xchg
jl
jge
addr16
testb
mov
in
mov
jns
xchg
xchg
cli
cld
loop
inc
mov
jnp
aaa
push
out
imul
enter
xchg
mov
push
mov
pop
cmp
test
pusha
mov
icebp
pop
add
lret
xchg
negb
int
in
sbb
shrb
push
ja
test
lods
cmpsb
stos
cmp
outsb
pmullw
jne
bound
cmp
and
stos
push
cwtl
mov
les
ljmp
cmp
aam
cmp
sub
rcrl
mov
jge
movsl
aas
gs
pop
xchg
xor
push
dec
adc
out
ficomps
xchg
enter
ljmp
sub
cmp
mov
repz
lret
pop
mov
push
sub
add
adc
loop
inc
push
pop
test
les
js
or
pushf
fs
and
jb
sbb
std
in
test
bound
imul
add
outsl
push
shl
or
sbb
outsl
movsl
xchg
jae
sahf
cltd
mov
insl
imull
xchg
sar
fisttpl
jnp
jo
loopne
call
iret
shlb
mov
mov
das
push
pop
ss
cwtl
cmp
cmp
outsl
sbb
dec
dec
std
in
xchg
dec
add
pop
out
and
mov
fsub
divl
fidivrl
out
test
movsl
push
push
test
nop
xor
imul
mov
scas
mov
push
inc
imul
cmp
scas
push
jecxz
icebp
push
add
mov
js
arpl
outsl
inc
inc
mov
jle
stos
sub
addl
mov
mov
cmp
xor
mov
inc
outsb
sbb
sbb
mov
and
fsub
inc
cmp
imull
in
mov
sbb
iret
inc
out
scas
and
cmp
adc
mov
push
cpuid
add
push
or
xchg
mov
pushf
ficoms
in
popa
mov
xchg
mov
les
addr16
or
aas
sbb
mov
ss
outsl
mov
jmp
in
and
mov
jp
fistl
es
push
jae
clc
hlt
leave
push
lds
push
loopne
xor
pop
push
lea
cmc
loop
xchg
pushf
mov
insb
cmp
dec
or
imul
adc
lea
push
enter
jl
sbb
pop
mov
and
jno
jmp
cmp
push
in
cs
sub
xor
push
sbb
add
loopne
mov
mov
sub
jae
lret
sub
cmpsl
icebp
sti
push
lahf
stos
inc
dec
mov
mov
add
add
push
mov
movsl
cmp
add
adc
aas
jecxz
sbb
fs
xchg
mov
mov
iret
ret
or
cmp
cmc
out
inc
mov
lods
in
mov
xor
fistps
or
mov
aas
lds
loop
mov
or
pop
sahf
movl
xor
enter
rorl
cmp
cmc
popa
pop
jecxz
cli
arpl
jl
aaa
dec
mov
inc
pop
lahf
xchg
push
call
out
cmp
cmpsb
or
movsl
and
aad
xchg
ja
push
xlat
xchg
and
cmp
dec
push
aam
sub
push
cli
mov
data16
movsl
or
inc
arpl
jnp
mov
jmp
fcmovnbe
sub
dec
jbe
fwait
aam
pop
push
cmp
cmp
lea
xor
shlb
dec
mov
pop
pop
mov
cmpsb
xchg
sub
mov
das
push
push
iret
sbb
pushf
xchg
mov
inc
test
dec
movsl
mov
push
daa
and
pushl
mov
stc
adc
pop
xor
xor
int3
xchg
ficomps
fisubl
mov
out
mov
push
mov
sbb
lcall
xchg
add
loopne
ja
cmp
fdivrs
cli
js
loopne
push
xchg
lret
xor
icebp
mov
addr16
xchg
adc
mov
int3
fadd
and
mov
lds
ss
jbe
push
shl
lods
cmp
stos
sbb
aad
and
xchg
adc
stos
test
push
mov
imul
and
cmp
lret
sub
add
and
pop
mov
aas
cli
push
mov
or
mov
or
ret
push
nop
push
idivb
lea
jl
insb
out
xchg
xor
cltd
adc
pusha
jbe
xchg
jo
icebp
test
mov
sub
push
repz
adc
inc
inc
les
inc
sbb
jg
xchg
aam
push
cmp
sbb
aas
xor
bound
mov
jnp
lret
xor
out
fwait
dec
in
fwait
dec
cmc
fcmovnu
inc
and
in
loope
lahf
aas
subl
leave
imul
lahf
jecxz
scas
xchg
cwtl
mov
mov
test
xchg
mov
mov
sti
push
add
push
and
mov
push
adc
and
pushf
mov
mov
notl
lret
jmp
or
gs
rorl
ds
inc
adc
cmp
scas
sub
fcomps
sub
in
rcll
fwait
sti
dec
lret
push
sub
fsubr
adc
xor
add
and
cmpsb
shrl
inc
mov
shll
out
inc
into
addr16
insl
pusha
lods
lock
cmp
push
inc
dec
mov
mov
into
movsb
dec
cltd
movsl
sub
adc
or
push
fidivrl
fbstp
repnz
dec
int3
pop
or
nopl
inc
fidivs
les
cmp
add
xchg
cmpsb
les
xlat
dec
scas
push
xchg
xor
add
idivl
xchg
daa
jns
cmpsb
adc
inc
jg
cwtl
adc
pop
adc
fs
dec
xlat
mov
rcrl
fadds
and
sbb
cli
push
xchg
fistpll
mov
or
jmp
aad
addr16
lahf
into
arpl
aam
shrb
mov
frstor
jne
loopne
jb
divb
push
int3
loope
in
adc
lods
and
sbb
aam
ret
mov
or
mov
ret
loop
lcall
push
xchg
mov
push
leave
jb
jne
inc
cmpsb
jbe
dec
scas
mov
push
std
cs
das
sbbl
jmp
outsl
mov
aam
push
xor
into
pop
ds
cmp
cli
dec
mov
mov
call
mov
idivl
or
xor
into
aas
gs
add
jge
mov
mov
sarb
pmaxub
mov
repnz
js
sub
lods
fcomip
sub
jbe
lret
imul
loope
mov
inc
dec
push
sbbb
mov
sub
testl
jmp
xchg
inc
lods
test
cltd
movsl
add
clc
movsl
push
pop
mov
psubsw
fld
jmp
call
std
jge
or
jg
and
sub
pop
mul
cmpb
in
jo
push
or
push
xchg
pop
pop
lret
xor
lods
push
clc
fdivl
pop
cmp
repz
cltd
mov
popa
sbbb
jle
repz
xor
rcll
dec
push
push
stos
jb
repnz
sbb
call
dec
jmp
pop
push
or
pop
or
iretw
out
jecxz
movsb
js
dec
sub
mov
rcll
pop
test
mov
inc
xor
and
sahf
push
sbb
and
sbb
les
xorl
push
xor
sbb
add
push
sbb
cmpsl
shr
cmp
mov
mov
sbb
int3
jle
pop
cmp
gs
fcmovnb
sub
ds
or
adc
dec
out
add
in
imul
scas
pop
mov
and
push
or
cs
popf
bound
pop
addr16
stos
gs
jg
lds
lahf
jp
mov
mov
pop
mov
push
mov
ds
into
scas
ja
xchg
imul
jns
sub
in
pop
les
jnp
mov
fistl
xor
shlb
fs
repnz
sbb
shl
fcompl
imul
mov
pop
out
loope
xor
lds
push
int
sub
stc
push
dec
pushf
sti
je
jg
aas
push
in
or
mov
iret
xchg
mov
and
arpl
arpl
cmp
inc
and
ljmp
call
fucomp
sub
pop
cmp
sbb
or
fs
mov
pusha
mov
jne
ljmp
xchg
add
jnp
hlt
pop
test
imul
scas
shrb
xor
push
or
mov
js
push
aaa
punpckldq
push
dec
mov
xchg
mov
cld
adc
jle
mov
iret
mov
loopne
and
xchg
and
inc
movsl
out
dec
inc
repnz
inc
out
shlb
rorl
sbb
jo
and
pop
dec
call
lret
loopne
push
jne
ljmp
mov
xchg
clc
aam
xchg
push
fs
gs
xchg
ret
lock
mov
inc
jb
and
xchg
es
ljmp
popf
xchg
xor
pop
test
imul
sub
cltd
cmpsl
sub
push
test
in
subl
leave
sub
push
fsubr
jg
cmp
adc
fldenv
xchg
test
mov
es
xlat
das
push
cmc
push
or
inc
cmp
mov
mov
idivb
inc
mov
add
iret
ljmp
in
mov
sub
mov
sbb
cmp
enter
mov
rorb
ret
xchg
mov
fdivrs
push
cmpsb
enter
pop
cmp
dec
add
xchg
pop
test
outsb
sbb
inc
mov
jmp
adc
movsb
test
mov
aaa
mov
lret
ja
dec
jo
in
cmc
mov
xorl
push
icebp
lret
repz
loope
xchg
lahf
movl
pop
insb
and
sub
out
push
xchg
popf
or
pop
mov
push
dec
rcll
test
lret
scas
push
lds
and
outsl
hlt
daa
shrb
addr16
push
cli
or
push
scas
mov
aaa
sahf
aam
scas
hlt
data16
and
scas
xor
add
xchg
sub
outsb
mov
pop
pop
sti
arpl
pusha
mov
inc
sti
cld
das
test
dec
lods
mov
mov
ret
jg
inc
jmp
push
bound
mov
inc
fcmovu
mov
cld
scas
imul
mov
cmp
les
cmp
dec
sbb
xor
loope
lods
pop
dec
or
stos
insl
fisubrl
andl
jecxz
movsl
adc
push
cli
fisttpll
mov
pusha
mov
xchg
dec
ss
lret
mov
add
push
scas
cli
subl
sbb
into
sbb
jmp
lret
and
jb
std
inc
jnp
icebp
jecxz
or
inc
xchg
jns
mov
mov
int3
out
push
xor
shrl
aam
cvttps2pi
cs
push
bound
jbe
sahf
mov
shrb
popa
sub
lock
jge
arpl
push
das
dec
sub
ljmp
mov
out
rcl
xor
push
or
sub
ds
repnz
fadds
fidivrs
adc
push
pop
stos
push
movsl
test
pop
xor
inc
leave
sbb
lahf
out
out
hlt
xor
sub
pop
or
je
xchg
jmp
out
mov
fscale
ret
mov
addr16
or
leave
cwtl
enter
popf
out
add
sti
aas
adc
arpl
mov
dec
xchg
ror
insl
subb
inc
popa
fwait
inc
cmp
bnd
jbe
testb
push
inc
imul
cli
and
int
imulb
add
fmuls
sub
jge
xchg
arpl
shl
pop
mov
xchg
cli
push
mov
fldenv
or
dec
pushf
mov
lods
mov
inc
int
std
subb
sbb
stos
stos
inc
test
loope
call
mov
dec
notb
sub
mov
fstl
cltd
scas
lahf
mov
jne
ds
cmc
add
in
add
iret
into
mov
sbb
jns
mov
inc
inc
fdivs
lret
inc
mov
mov
jmp
xchg
dec
pop
scas
gs
add
inc
push
mov
es
pop
ds
adc
mov
shlb
lock
sbb
out
push
mov
adc
mov
scas
loope
in
shlb
lods
cmp
aam
out
testl
fimuls
or
mov
push
and
pusha
jmp
rclb
lock
pop
dec
jns
aaa
enter
sub
pop
insb
push
pop
js
inc
fistps
inc
dec
outsl
incl
add
ja
aas
add
lock
cmp
cmp
les
xchg
in
mov
das
mov
sbb
scas
movsb
sbb
insl
xorb
push
addr16
add
out
xor
xchg
js
cltd
lds
add
les
push
in
fs
jmp
cmc
inc
mov
and
cltd
push
sub
sbb
mov
and
jnp
mov
push
inc
push
bound
xor
pop
push
or
push
sub
movsl
sti
es
mov
and
push
dec
ljmp
inc
cmpsb
xchg
lahf
inc
out
lcall
shlb
inc
daa
xlat
push
sbb
das
nop
jns
scas
stos
adc
cmp
dec
les
inc
lock
push
mov
xor
push
lret
inc
js
mov
dec
mov
and
jbe
sti
idivb
arpl
rep
dec
les
adc
push
les
push
stos
in
mov
or
inc
pop
pusha
push
insl
lods
outsl
or
push
add
leave
xchg
jo
sti
nop
scas
fcoms
in
and
jns
lock
or
sbb
mov
and
retw
sub
push
lods
add
fldcw
adc
pop
cmp
fstl
sub
into
mov
mov
fdivrl
and
dec
cld
jno
outsb
or
data16
and
imul
scas
stc
jl
lahf
push
mov
jl
sbb
in
push
in
push
arpl
xchg
or
sarb
fcomi
inc
cmp
mov
insl
cmp
pop
cmp
mov
mov
das
mov
pusha
inc
xor
sbb
xchg
push
or
rcrb
hlt
push
dec
mov
test
test
jmp
add
movsb
pop
out
mov
leave
mov
dec
dec
test
dec
ljmp
lea
push
and
xor
inc
cmpsl
sub
add
jp
out
imul
test
stos
mov
arpl
mov
lock
jo
lahf
mov
sbb
jecxz
mov
dec
punpckhbw
shr
popf
ss
adc
lock
cld
xchg
or
push
mov
es
std
movb
movsb
jne
mov
imulb
fidivrs
inc
jno
push
mov
push
loope
test
arpl
imul
adc
orl
mov
fs
subb
lods
aaa
pop
jl
nop
jne
mov
sbb
jmp
cli
push
or
mov
mov
popa
mov
daa
jle
sbb
das
pushl
lret
or
or
cmp
clc
jmp
bound
sti
js
mov
hlt
push
mov
sbb
add
add
cmp
mov
mov
cltd
xor
xor
pop
out
pop
and
inc
adc
cld
jp
fs
pop
push
mov
cld
dec
cltd
mov
cs
es
test
push
add
mov
push
add
sbb
and
movsl
sbb
mov
inc
jo
xchg
outsl
pop
add
ret
and
out
sub
cmp
je
adc
and
lods
mov
and
bound
pop
pop
js
jecxz
sub
push
dec
iret
outsb
call
cmp
lcall
dec
hlt
xor
cmc
je
jp
movd
xor
sbb
xor
mov
notb
test
xchg
fbld
push
mov
jp
add
sbb
dec
inc
popf
rcrl
fsubp
xor
orb
jns
fbstp
dec
lret
or
ja
aad
push
sbb
inc
mov
ss
nop
dec
push
cs
mov
in
in
stos
jae
dec
jns
push
or
add
jns
mov
js
dec
insb
pushf
push
xchg
jl
int
lcall
adc
jg
out
dec
inc
xchg
sub
outsb
add
mov
cmpsl
cmpsb
dec
jbe
pop
inc
repnz
scas
test
pop
orb
add
fs
test
je
fnstsw
lock
rcr
and
jo
jno
sbb
aam
push
sbbl
dec
shr
imul
cmpsl
dec
mov
lret
lods
out
ljmp
jp
popa
out
cmp
push
jl
push
xor
aad
mov
jecxz
movsb
mov
sbb
cmp
stos
adc
push
leave
test
or
lahf
lods
jae
sbb
jle
adc
loopne
mov
jge
subl
pop
xor
call
adc
fdivl
adc
jl
cmp
std
adc
mov
dec
cli
push
jp
pop
adc
xor
call
sbb
pop
jno
mov
lcall
addr16
mov
out
xlat
push
mov
shll
cmp
mov
into
xchg
in
pusha
dec
pop
orl
sahf
mov
jb
leave
rcr
inc
sbb
mov
lret
rcrb
or
es
pusha
orl
aad
and
inc
fisubrl
push
cmc
jns
test
dec
daa
cmc
cmpb
out
cmp
cs
sbb
pop
cmp
data16
addb
aam
sbb
scas
mov
hlt
leave
in
fistps
pop
scas
or
stos
loope
nop
nop
leave
xchg
cmpsb
daa
dec
xchg
add
daa
push
sub
xchg
xchg
inc
aam
xchg
push
sbb
fdivp
fs
pop
les
rorb
push
adc
js
xchg
aas
jle
xor
xchg
pusha
mov
dec
jnp
cmp
dec
jo
icebp
jne
fcoml
sbb
cmovae
out
jp
mov
stc
jo
jp
and
add
cli
sub
xchg
testl
mov
fsts
orl
jecxz
mov
lahf
jo
mov
pop
xchg
sub
push
jle
xchg
stos
pop
mov
add
dec
aad
pop
dec
mov
mov
clc
xor
cmp
bound
xor
and
inc
hlt
mov
adc
dec
bound
cmpsl
lea
sti
lret
dec
out
jo
test
xchg
adc
bound
int
lods
cld
pop
or
ret
sbb
adc
mov
sub
mov
pand
sub
pop
xlat
mov
pop
and
ss
cmp
mov
xchg
sahf
pop
mov
les
fwait
fs
dec
lods
imul
push
and
jle
jmp
lods
cmp
cltd
sub
mov
mov
stos
and
push
or
xor
push
int
xchg
out
sub
inc
loopne
sub
xor
dec
mov
addl
jb
popa
gs
jmp
inc
das
and
dec
stc
aaa
hlt
in
or
mov
sbbl
aad
inc
xlat
addr16
pop
dec
mov
leave
sbb
in
pop
out
test
ret
or
out
xchg
push
push
sub
inc
aas
push
fsubr
into
cli
push
loope
jl
cld
mov
jne
sbb
insl
subl
pushf
mov
mov
jmp
icebp
xor
push
sbb
pushf
inc
add
jp
add
push
fnstenv
push
daa
negb
in
xor
jnp
dec
mov
leave
mov
push
fucomip
cmp
arpl
cld
add
and
push
sti
or
arpl
loop
cld
push
and
subl
stc
out
pop
mov
cmp
test
sti
addr16
push
mov
or
imul
or
pop
enter
popf
pop
xor
cmc
mov
outsb
fdivp
rorl
sbb
test
sub
push
pop
repnz
daa
lcall
pop
lea
add
jle
sti
psubb
cmp
movsl
movsb
lahf
push
rcll
mov
ja
int
cli
jmp
orl
mov
jbe
or
and
outsb
push
inc
clc
sbb
sbb
inc
or
push
rep
jne
jmp
dec
push
cmp
xlat
mov
inc
sbb
inc
xlat
cmp
in
cmpsb
cmpsl
mov
int
out
sbb
mov
xchg
jmp
out
out
int3
add
into
dec
int3
dec
mov
push
mov
aad
jle
scas
repnz
fstps
cmp
inc
push
sub
and
ja
rorl
jns
dec
xor
ja
es
repz
std
cmpsl
flds
insl
or
pop
and
cmc
adc
in
popa
mov
xor
fsubs
rcrb
dec
mov
cmp
cmp
out
std
push
and
mov
add
shlb
mov
mulb
imul
xchg
xor
push
add
inc
je
mov
sbb
inc
xor
mov
sbb
and
sbb
daa
testb
push
sub
sbb
outsl
dec
mov
xchg
and
mov
jbe
mov
pop
jo
pop
add
cmp
rorl
adc
ss
lods
mov
pop
testl
into
cs
add
stos
push
cmpsb
es
les
test
cmpl
dec
pop
cwtl
mov
and
aas
js
push
movsb
dec
jle
bound
xchg
fistps
out
inc
int3
stc
mov
mov
test
xchg
add
xchg
xor
insl
decb
adcb
dec
xchg
in
cmp
add
push
xchg
mov
repz
xchg
jbe
lret
leave
rol
xor
push
mov
inc
sti
fisttpll
ds
mov
pushl
xorl
inc
fxam
ficoms
add
xor
adc
jo
jp
clc
fwait
out
mov
aaa
adc
pop
mov
dec
inc
fistps
cmp
icebp
ret
inc
aas
stc
arpl
jg
negl
adc
into
out
dec
or
mov
adc
adc
xchg
or
sub
sub
jg
enter
add
pop
sub
insl
mov
pop
dec
and
std
sbb
and
adc
sbb
xchg
or
xchg
mov
cmpsl
mov
ja
stos
test
adc
push
inc
mov
mov
outsb
or
jge
dec
or
pusha
jne
cli
int3
outsl
push
or
lahf
sub
jne
ljmp
adc
iret
xchg
add
mov
mov
data16
cmp
int
mov
add
xor
cltd
add
cmp
mov
movsl
orl
test
add
pop
and
inc
mov
sbb
movsbl
movsb
movb
loop
jb
push
jne
shl
enter
jmp
loope
push
push
jo
dec
arpl
in
clc
lcall
lds
push
insb
or
jecxz
out
mov
int
lret
mov
xchg
pop
jle
and
push
mov
mov
sbb
loop
add
cwtl
jae
fdivs
lcall
int
jl
jmp
lcall
sbb
sub
lret
xchg
mov
inc
sbb
movsl
push
cmpsl
sbb
adc
and
roll
push
scas
out
leave
cmc
mov
pusha
sub
fs
and
mov
mov
pop
and
mov
jecxz
and
push
inc
mov
outsl
jno
inc
xor
pushf
bound
std
loop
jmp
aas
jne
fbstp
and
arpl
add
out
aas
mov
je
loope
addr16
popa
jo
test
or
test
jp
adc
or
push
xchg
adc
mov
and
sub
ret
jne
cld
jg
pop
mov
mov
or
das
sarl
or
scas
mov
notl
call
pushf
cli
mov
or
mov
iret
jno,pt
in
shrl
jne
xor
popa
dec
mov
jle
fs
jb
jecxz
in
movsb
out
push
cs
sub
andl
mov
call
out
dec
sub
add
pop
mov
sarb
mov
or
shl
mov
adc
jae
aam
xor
jge
loop
xchg
sub
outsb
andl
in
mov
xchg
iret
testl
gs
mov
test
jo
fiadds
mov
jno
jecxz
mov
and
and
fpatan
add
aas
subb
mov
cmp
dec
js
inc
rolb
out
push
scas
into
out
gs
fmuls
add
into
incb
mov
test
les
cmc
cmp
pop
jno
adc
repz
shrb
iret
or
dec
testb
aad
int
mov
scas
imul
stos
stos
xchg
cmp
xchg
xor
dec
sbb
aas
inc
adc
imul
dec
inc
fdivrs
and
decb
bound
into
test
dec
jle
pop
movsb
cmp
cmp
aas
js
sub
cltd
mov
mov
mov
pop
and
das
loopw
les
jg
adc
cmp
and
inc
arpl
mov
cltd
inc
mov
push
and
call
xchg
add
outsb
inc
push
js
jl
bound
std
pop
out
call
in
jmp
bound
mov
adc
sarl
xchg
or
sub
nop
xchg
test
push
loope
or
loop
xor
ret
std
cmp
lea
sub
jmp
jne
scas
mov
add
or
ficomps
hlt
cmp
stos
mov
jne
lock
loopne
cld
scas
dec
add
shlb
fadds
sub
sbb
xor
pop
jnp
and
lods
shll
aaa
pop
push
addl
mov
popa
adc
jns
lods
popf
mov
shrl
sub
xor
insb
loopne
insb
mov
or
sbb
in
mov
or
mov
out
rcll
repz
or
sub
das
mov
cwtl
xchg
fwait
mov
mov
xor
and
sub
ljmp
aam
stc
dec
out
outsb
jnp
orl
xor
out
lcall
nop
push
dec
mov
dec
pop
scas
icebp
jge
and
addb
pop
xor
stos
sbb
pop
rolb
pop
mov
mov
add
pop
pop
jb
daa
imul
xor
cli
xchg
icebp
mov
xchg
cmp
mov
jne
mov
and
dec
sbb
call
and
dec
pop
cmp
ss
imul
popa
pop
scas
dec
mull
or
out
fidivl
or
iret
ficoms
cmp
and
aas
pop
les
ret
pop
clc
rolb
pop
lahf
testb
or
sbb
jns
jmp
cmp
dec
mov
pop
xchg
and
dec
mov
ljmp
mov
insl
cmp
icebp
call
lods
jmp
sbb
hlt
push
into
adc
scas
sub
dec
jnp
xor
shll
jmp
and
int3
cmc
xor
out
push
pop
into
out
push
ret
or
adc
inc
sbb
testb
pop
mov
sti
xchg
adc
rol
xor
jmp
ds
xchg
push
stos
and
out
fcomip
in
lods
shr
or
and
mov
movsb
push
sar
daa
inc
adc
jae
int
pxor
cld
mov
and
mov
arpl
inc
mov
lahf
cld
jmp
xor
dec
mov
add
std
jnp
inc
or
movsl
mov
and
ret
dec
call
adc
mov
and
mov
iret
test
inc
pop
pop
add
jnp
cmpb
sub
mov
testb
lea
bound
loopne
es
in
jno
aaa
fs
lods
mov
cltd
shrd
js
push
out
jge
outsl
push
and
sti
mov
mov
pushf
insb
insb
sbb
mov
mov
cmp
outsl
fcoml
adc
aam
xor
jmp
sub
fadds
sbb
jb
mov
mov
push
fsub
roll
jne
push
aas
notb
sbb
test
or
fistl
sub
push
cmp
subb
sub
jp
mov
jnp
mov
enter
lcall
ja
aam
xor
mov
push
sub
iret
mov
fsubrl
repz
push
test
sbb
imul
insl
or
cmc
adc
lods
out
movsl
xlat
fldenv
sarl
xchg
pop
ljmp
inc
imul
jbe
mov
mov
sub
into
gs
std
sbb
mov
sti
cmpsl
xlat
xor
out
inc
push
and
je
dec
inc
ja
imul
pusha
xchg
adc
aam
xchg
mov
imul
mov
orl
repz
jb
mov
xchg
jmp
mov
cmp
jno
out
inc
into
fdivrs
inc
sbb
rcll
fwait
jne
pop
sub
sar
out
jmp
ds
jnp
loopne
sbb
mov
lock
stos
outsb
cmp
je
jb
jg
sbb
stos
jge
xchg
sahf
out
dec
jb
xchg
xchg
mov
addr16
int3
lds
cmp
imul
push
pop
mov
ret
xor
dec
lcall
in
data16
cld
mov
xchg
jno
repnz
stos
cmp
out
jo
mov
inc
adcl
mov
xor
ja
adc
test
js
cltd
add
add
test
and
out
lea
cmp
pop
xchg
dec
add
imul
mov
rol
mov
in
bound
sub
ret
out
in
mov
mov
int
mov
icebp
or
lods
ror
sub
in
out
aam
jbe
cmp
test
subb
fs
out
lret
lret
pop
push
or
cmp
xor
xor
inc
dec
mov
es
inc
loopne
inc
xchg
sub
hlt
ja
pop
add
mov
inc
arpl
enter
mov
cmp
jge
jb
adc
aas
fs
dec
xor
jnp
push
push
add
sub
push
and
push
add
mov
inc
xor
mov
imul
mov
jge
sti
mov
push
iret
push
adc
mov
mov
outsb
in
lcall
addb
test
xor
mov
add
sbb
push
xchg
mov
sub
fistl
outsl
aaa
lret
daa
enter
xchg
dec
and
pop
gs
dec
push
ljmp
jle
rcll
ret
ljmpw
mov
adc
pusha
push
fstpl
imul
sub
mov
roll
or
sub
add
push
mov
hlt
leave
adc
jecxz
shr
sbb
sti
imul
add
mov
sahf
push
std
dec
inc
add
mov
push
scas
push
or
in
fadds
lods
mov
in
mov
ficompl
add
and
filds
or
dec
into
jmp
stos
pusha
cmp
ficompl
mov
pop
pop
dec
jge
adc
in
imul
pop
sub
into
xchg
mov
xchg
dec
inc
jl
mov
mov
ljmp
dec
jmp
mov
jg
jb
cwtl
push
and
rcrb
push
mov
inc
adc
leave
sbb
std
xor
or
out
in
cmp
push
push
xlat
out
mov
pop
pop
pop
add
fcompl
iret
inc
mov
sbb
stos
gs
mov
push
push
outsl
lret
jmp
add
fs
pop
xchg
push
inc
clc
sub
add
imul
adc
les
jge
push
pop
jns
je
sti
and
jne
es
sarl
add
sub
xchg
jp
std
jnp
mov
outsb
stos
adc
lods
pushf
sub
xchg
xchg
inc
aad
sub
bound
out
xor
mov
nop
sub
lods
stos
cmp
sbbb
les
pop
repz
xchg
imul
sub
xchg
xor
pop
xor
xchg
icebp
add
stos
or
scas
pusha
sub
push
mov
nop
add
sub
jge
or
cmp
insl
scas
js
mov
jb
addr16
xor
pusha
sti
xchg
dec
push
scas
iret
loope
outsb
in
xchg
cwtl
cmp
cmpl
rolb
sub
in
addr16
js
insb
imul
mov
push
repz
aaa
lds
adc
repz
xor
jmp
xchg
push
fsubs
push
loopne
xlat
dec
pop
cmp
inc
pop
aad
clc
push
loop
aad
or
mov
jl
jnp
ret
or
outsl
or
fsts
ja
sbb
mov
push
cwtl
sbbb
es
scas
mov
sbb
inc
ret
jnp
cmpsl
sar
ljmp
or
cmp
sub
movsb
adc
fs
jns
jbe
adc
mov
push
inc
dec
and
aam
stos
rolb
movsb
inc
dec
push
sbb
jle
shll
cs
imul
inc
xchg
dec
sbb
bound
aas
pusha
inc
push
outsb
je
mov
xchg
int3
dec
dec
push
cs
push
adc
lret
xor
imul
stos
imul
sbb
les
andb
ds
pop
push
clc
mov
mov
fisttps
pop
jo
fsubrs
pop
pop
mov
data16
pop
jmp
mov
test
add
das
int3
or
jmp
fildl
movsl
stos
orb
lcall
pop
xor
es
adc
mov
rorl
adc
sbb
xchg
sbb
int3
add
dec
jmp
dec
out
ficoms
push
mov
icebp
dec
jmp
xchg
or
test
jae
sahf
sub
inc
ljmp
scas
je
aad
cmp
adc
add
mov
xchg
out
push
xor
xor
sbb
dec
xchg
and
jnp
test
jle
dec
stos
pop
jb
sbb
add
stos
jmp
insb
push
mov
mov
mov
loop
mov
mov
xchg
or
mov
test
or
jno
insb
cmc
lods
outsb
adc
imul
jbe
cmp
imul
push
xchg
lahf
fwait
shl
xlat
or
mov
and
dec
imul
pushf
out
mov
loopne
cmp
dec
js
adcl
add
jecxz
jae
rcll
pop
ss
mov
or
mov
xchg
lahf
push
mov
popa
bound
add
aam
jge
shrd
and
mov
cltd
out
sub
mov
scas
sbb
pop
mov
jp
out
push
push
xchg
mov
mov
push
dec
push
jmp
shrl
mov
sub
push
inc
adc
and
mov
xchg
sbbl
push
or
pop
faddl
and
xchg
inc
push
clc
lods
shrl
lea
andb
ret
orb
jge
add
jg
cmp
arpl
mov
cmpb
mov
inc
leave
ret
ret
jl
or
mov
loop
inc
aaa
inc
jbe
popa
push
mov
push
faddl
mov
xor
xor
aam
bound
stos
xchg
out
xchg
cltd
push
mov
push
aaa
push
adc
and
sar
mov
arpl
push
stc
and
incl
sub
jne
adc
cld
orl
cmpb
inc
sbb
pop
cwtl
sub
jecxz
inc
sbb
mov
jo
cld
xchg
je
pop
cltd
inc
insl
scas
movsl
loop
outsl
repnz
jne
data16
mov
fists
lcall
popf
lret
fldl
mov
fdivl
pop
imul
cmp
push
iret
and
mov
in
fidivrl
and
jne
xchg
inc
sahf
clc
js
lds
push
inc
or
add
mov
hlt
cmc
and
ret
dec
dec
les
pop
lret
aam
jo
sub
into
pop
repnz
xchg
pop
aam
xor
add
sub
jle
inc
cmp
xchg
loope
pop
or
inc
inc
mov
push
xchg
jp
dec
call
outsl
jno
bound
mov
inc
add
lods
xchg
test
xchg
test
sub
mov
xor
fwait
add
inc
adc
mov
xchg
lret
aad
push
add
xchg
sub
push
push
je
aas
popa
jb
repz
arpl
lret
mov
enter
xchg
pop
xor
mov
mov
xchg
mov
xor
and
jb
dec
add
jmp
push
adc
adc
shr
decb
cmp
lret
jg
vmovmskps
jl
push
adc
pop
cmpsl
gs
cwtl
mov
cmpsl
out
adc
es
stc
es
xacquire
sbb
repz
xchg
mov
inc
rorb
shrl
clc
xchg
cmp
lds
lods
push
or
xchg
mov
lods
jne
pushf
or
aas
dec
fldl
jge
add
in
xor
add
sub
fidivs
or
das
pop
lea
dec
mov
dec
scas
mov
mov
aas
pusha
push
sbb
cmpsb
pop
mov
dec
jno
lcall
enter
dec
mov
and
push
mov
dec
sti
cmp
popf
lds
jmp
bound
sub
jbe
pop
push
xor
mov
push
push
cmp
dec
xchg
inc
mov
repz
jns
sbb
test
mov
ret
jne
push
cmc
add
or
outsb
aad
rorb
call
inc
into
hlt
fucomp
lds
add
and
mov
add
adc
add
lcall
arpl
mov
loopne
adc
jl
test
lahf
sar
dec
sub
jg
popa
sub
adc
jg
stc
pop
xor
push
mov
pop
mov
push
jne
cmpsb
xchg
adc
mov
lret
data16
add
cld
pop
imul
pop
mov
push
sub
jno
push
inc
cmp
push
inc
outsb
loop
fcomps
test
or
aam
je
adcl
ret
rolb
lcall
xchg
jge
jnp
stc
add
fsubrp
cli
cmp
add
mov
jne
adc
xchg
cs
int3
xchg
out
mov
push
and
nop
lock
push
fcoml
mov
insb
sub
sahf
pop
hlt
inc
daa
cmpsb
fsubrl
lds
pop
aaa
mov
push
ss
ret
adc
pusha
adc
sahf
faddl
adcl
xchg
ret
addr16
xor
int3
push
idivb
push
sub
xchg
enter
mov
or
aam
insl
mov
inc
and
mov
movsl
stos
insb
pop
lcall
push
scas
lret
push
mov
rcr
mov
inc
and
xchg
push
shrl
xchg
or
and
jge
sbb
imul
stos
mov
arpl
xchg
cltd
jae
jbe
inc
icebp
add
xchg
or
mov
cmp
std
cmp
xchg
push
dec
push
cmp
pop
push
xor
fists
addr16
dec
and
test
pop
sti
inc
cmp
xchg
shlb
cmp
movsl
adc
xchg
mov
mov
inc
lret
sub
dec
push
je
mov
mov
inc
call
pusha
jl
xchg
lea
in
es
int
shlb
out
loope
xchg
shlb
mov
jmp
cwtl
inc
jp
mov
jmp
push
push
xor
mul
fstl
push
popl
pop
xchg
cld
repz
in
subl
imul
daa
stc
stos
scas
xor
mov
xchg
xchg
and
in
out
stos
test
into
fstpt
lret
mov
jmp
adc
mov
in
test
mov
xchg
or
dec
mov
and
push
das
push
adc
aaa
xor
push
and
mov
les
adc
bnd
in
sbb
sbb
arpl
inc
lcall
test
test
dec
mov
lea
outsb
fdivrs
mov
sahf
xchg
int3
and
jno
sub
ret
mov
outsb
incl
lea
ss
pop
sbb
push
push
mov
in
fcoml
shrl
dec
cmp
sub
pop
pop
dec
fnstenv
and
push
lret
adc
cmp
xor
xchg
pop
mov
insb
shl
xor
pop
gs
and
and
xor
jp
xorb
sti
mov
add
cli
in
or
ret
push
lcall
adc
scas
mov
sbb
jge
bswap
cmc
dec
fcoms
pop
scas
or
insb
sarb
pop
push
daa
inc
mov
mov
mov
lock
loop
ret
inc
out
push
adc
pop
and
cmc
xlat
sbb
shlb
and
inc
imul
movsb
enter
mov
pop
jmp
jle
xor
cmp
movsl
aad
ret
mov
cmp
sarb
clc
or
loop
sbb
push
mov
mov
js
out
pushf
lods
mov
dec
test
xor
aad
ffree
add
stos
sbb
fs
jp
jge
add
notb
add
and
ljmp
dec
test
or
mov
jno
push
fdivl
ret
jb
or
mov
hlt
adc
xchg
stos
xor
push
sbb
imul
movl
push
out
pushf
xor
stc
push
xor
mov
test
xor
test
enter
movsl
adc
jecxz
pop
lods
pop
cld
cmpsb
arpl
pop
cmpl
push
clc
lar
jge
enter
xchg
pusha
insl
gs
jp
mov
movsl
fbld
sahf
rcll
cmovb
addr16
fcoms
mov
lods
out
jae
movsl
xchg
dec
hlt
dec
xor
ljmp
stc
shl
xor
and
inc
push
sub
in
hlt
loopne
add
ds
sbb
xchg
pop
fidivs
daa
test
mov
push
add
test
and
cmpsb
inc
stos
scas
mov
dec
pop
inc
in
sub
cmpsb
insw
mov
sbbl
push
mov
cltd
decl
fadd
repnz
fldcw
xor
mov
mov
pop
adc
mov
jecxz
or
pop
adc
pop
pop
je
pop
scas
lret
pop
pop
movsl
out
lds
sub
insl
stos
push
cmp
or
add
mov
cmp
fsubr
popf
or
sahf
xchg
pop
dec
shlb
cld
jne
push
sbb
and
push
pop
ljmp
mov
mov
pop
call
push
fimuls
fxch
aas
jmp
dec
sub
jge
scas
test
sahf
cld
or
xlat
stos
daa
arpl
push
repz
pusha
mov
push
andl
leave
xor
lds
test
mov
inc
hlt
mov
xor
dec
push
cli
xor
out
pop
lahf
mov
mov
into
mov
pushf
mov
jns
push
lods
push
sub
lret
rorl
lods
inc
push
push
fimuls
insl
jns
mov
jno
mov
aaa
loop
je
jne
les
js
mov
aaa
or
jg
and
push
cltd
add
adc
mov
cmp
dec
sbbb
cli
jns
inc
pop
jge
lret
pcmpgtw
clc
mov
lods
cmp
mov
cwtl
push
lret
scas
adc
movsb
notb
cld
jo
pop
and
cwtl
push
movsl
bound
add
out
push
sub
rorb
jno
jp
and
insb
pop
pop
pop
inc
or
push
stos
imul
aad
loopne
icebp
mov
rcrl
scas
sbb
xchg
pop
imul
lds
int
call
inc
movsl
in
or
aas
mov
arpl
nop
lock
in
ret
test
mov
fcomip
aad
sub
mov
dec
btr
xchg
fiadds
adcl
notb
add
and
mov
out
subl
negl
cmpb
dec
mov
mov
loop
pop
inc
cmp
into
push
dec
mov
movsl
push
test
stc
popf
or
dec
ret
xchg
cmp
mov
popa
popa
mov
sahf
addr16
jp
jne
pop
inc
aaa
xor
push
mov
jo
mov
scas
arpl
inc
mov
sub
shll
sbb
lods
fwait
pop
xchg
add
push
fdivr
clc
inc
mov
cld
or
jns
mov
fldcw
aad
dec
mov
pop
rol
push
or
mov
pop
mov
push
xchg
sub
rolb
in
idivb
fucomp
cmp
cmp
in
or
sbb
mov
ljmp
adc
pop
jbe
dec
push
and
mov
mov
xchg
mov
sbb
scas
fwait
cmp
loop
xchg
rcll
lret
dec
test
sbb
mov
imul
or
push
push
mov
jb
jns
int
enter
mov
mov
jp
aas
aad
ds
out
jmp
leave
insl
inc
out
push
push
sarb
pop
push
pop
movsl
jecxz
and
sahf
sahf
movsl
mov
lcall
adc
dec
inc
cld
mul
jecxz
fs
sti
jno
inc
stos
pop
cmp
or
cld
jp
mov
push
push
addr16
test
int3
adc
scas
aam
mov
push
mov
push
mov
mov
lret
mov
iret
enter
gs
xor
movsl
movntps
dec
popf
pop
xor
inc
adc
repnz
pop
icebp
add
imul
iret
je
lcall
hlt
in
xchg
sbb
pop
fs
movsb
cmp
mov
mov
adc
sub
rcll
movsb
gs
sbb
jg
enter
out
shll
mov
xor
sub
negb
and
sub
movsl
push
push
adcb
sub
add
cmp
adc
out
std
cmp
jp
mov
xchg
pop
jge
mov
jno
movsb
es
outsb
lahf
andb
inc
add
cmp
push
loopne
add
loope
mov
mov
and
test
dec
sti
xchg
sbb
cmp
adc
scas
in
pushf
push
sub
xlat
mov
push
mov
add
and
fstl
pop
inc
je
lods
ret
mov
js
fs
mov
adc
push
mov
das
cmpl
movsb
xchg
lret
inc
cmp
ficoml
cltd
add
sbb
test
mov
jnp
mov
cwtl
adc
loopne
iret
fdivs
cmpsb
addr16
xchg
int
add
ljmp
cmp
xchg
mov
lret
sub
mov
call
lock
out
jns
cmp
jo
dec
call
arpl
xor
mov
int
xchg
mov
call
cmpl
mov
lods
js
ds
lock
mov
ljmp
jae
add
movsb
push
cmp
inc
sub
pop
dec
sub
cld
repz
or
mov
jg
sub
sub
sarb
adc
pop
shlb
push
xchg
xor
bound
lcall
push
arpl
sbb
lods
into
xchg
inc
sbb
sub
movsl
cmp
and
leave
mov
mov
dec
jne
dec
mov
mov
cmp
hlt
push
pop
xor
mov
inc
push
lret
cmp
mov
add
stos
lods
mov
sbb
mov
inc
xor
xchg
ret
mov
mov
addb
stos
sbb
ljmp
adc
push
cs
repz
sub
cmpsl
aad
ficoms
jl
pusha
sbb
mov
and
loopne
or
mov
fcomps
cltd
dec
out
call
data16
inc
jne
out
inc
inc
ret
inc
mov
movsb
stos
sbb
mov
pop
mov
lods
pop
out
mov
jns
jbe
jmp
lock
out
jne
and
pop
jbe
pop
aas
in
pop
and
aas
and
jno
xchg
lods
adc
mov
enter
jmp
push
in
fisubrl
aad
jmp
mov
mov
xchg
push
or
cmp
cld
inc
imul
adc
jp
loop
pop
in
insl
stc
pop
ret
gs
dec
lret
mov
xchg
cld
aaa
add
sub
or
mov
mov
sbb
push
sti
mov
xchg
sub
pop
jns
cmpsl
pop
push
pop
mov
inc
add
and
push
popa
inc
popa
add
shlb
bound
insb
ds
xchg
and
push
outsl
adc
push
mov
sti
xchg
or
jno
jb
mov
mov
int3
add
stos
inc
jle
ljmp
repnz
mov
addb
sbb
ret
imul
cmpsl
mov
inc
arpl
lea
or
mov
jbe
shr
fdivs
add
sarb
aaa
lods
cmpsb
bound
dec
orb
scas
test
fdivl
cli
pushf
cmpsl
pop
leave
mov
dec
imulb
adc
das
mov
imull
adc
push
aad
sub
pop
imul
lahf
mov
mov
or
ja
mov
mov
mov
shll
mov
jne
pop
les
das
out
bnd
cltd
or
lock
cmp
xchg
add
sbb
push
aaa
test
pop
cmpsl
je
sbb
rcr
sbb
stos
int3
jecxz
dec
pop
pop
loopne
pop
outsl
sbb
aam
and
inc
movsb
cmc
call
xor
lods
push
xor
mov
decl
sub
cmpsl
cli
add
addl
lods
popa
xchg
dec
repnz
mov
insl
repnz
push
pushf
xchg
mov
or
cmp
adc
push
arpl
jmp
inc
fldt
xchg
jb
repnz
in
pushf
push
sub
outsl
repz
or
mov
jle
inc
add
dec
mov
pushfw
clc
xchg
cli
mov
popl
inc
adc
int3
and
push
movb
jnp
xchg
loop
into
je
or
and
cmp
push
xor
sbb
daa
fdivs
pop
imul
push
test
pop
inc
and
mov
and
int
fcompl
xchg
push
add
leave
lret
xchg
cmp
test
pusha
push
xlat
inc
dec
out
or
xchg
call
mov
mov
stc
sub
xchg
dec
dec
push
and
add
pop
sub
or
fistps
dec
sub
add
cmpsl
adc
rcr
aas
push
dec
stc
loope
inc
mov
lods
cmp
mov
inc
lods
lds
rorb
out
lods
fwait
outsl
icebp
stos
sub
sbb
push
cwtl
rcll
xchg
aaa
sbb
push
lods
push
dec
das
test
mov
fisttps
xor
or
push
scas
pop
or
outsl
pusha
mov
jle
mov
ja
sub
leave
sti
test
xor
test
outsb
or
fisubl
gs
int3
cmp
nop
pop
push
ljmp
xchg
leave
inc
mov
dec
jb
pop
mov
test
jp
cmp
xor
push
fs
or
mov
fadd
adc
xchg
cmp
jne
popa
test
gs
cmp
or
cltd
inc
rorl
adc
lret
flds
mov
push
pop
jns
aaa
adc
push
sti
mov
adc
adc
inc
mov
adc
jmp
dec
int
jno
in
addr16
aas
inc
inc
test
sub
jg
sbb
push
sbb
ljmp
sub
pop
aas
mov
cmp
ret
negb
inc
push
dec
mov
clc
out
test
jne
push
cli
inc
iret
or
and
cmp
lock
add
out
inc
aaa
jb
les
orb
jle
mov
outsl
xor
dec
test
sbb
and
test
xchg
xor
adc
das
adc
inc
shr
mov
pop
pop
pusha
dec
adc
mov
sti
mov
repz
push
gs
push
sbb
leave
mov
test
xchg
dec
or
sbb
dec
cmp
rol
int3
out
aaa
bound
in
repz
sub
aam
adcl
xorl
add
xor
inc
inc
into
arpl
ss
adc
std
and
jle
dec
sbb
or
mov
cmp
mov
push
cltd
imul
push
mov
cmpl
pop
adc
imul
push
adc
add
cmp
mov
outsb
push
ds
test
aad
jge
std
popf
xor
arpl
scas
dec
addl
pushf
xor
ja,pn
dec
jb
xchg
pop
nop
push
call
aaa
mov
jge
adc
inc
pusha
imul
mov
push
xor
fs
pop
dec
and
test
icebp
dec
mov
jns
pop
ds
add
int
push
clc
addr16
cmpsl
adc
pushf
movsb
imul
push
outsl
jg
dec
cmpsb
cmpsl
iret
neg
in
xor
out
dec
mov
subb
int3
push
ret
mov
mov
push
jnp
cmp
aaa
rcrl
fcomps
or
repnz
fwait
jle
xlat
call
loop
push
stos
in
lret
popa
inc
imul
mov
mov
inc
fistpl
mov
sti
fcomps
hlt
sub
push
or
xchg
add
or
pop
enter
aam
out
mov
jno
push
in
addr16
or
test
sbb
subb
inc
out
cmp
jns
cmp
dec
xchg
push
bound
mov
aam
jge
clc
mov
jecxz
or
fistpl
inc
out
push
lret
test
fnsave
ljmp
push
enter
push
dec
dec
daa
cmp
add
test
cli
and
sub
jae
mov
rcrb
lcall
fstl
xorl
repz
jb
mov
fldenv
push
and
jge
lods
popa
add
test
lret
gs
push
insb
sub
xor
adc
addl
sub
out
mov
dec
adc
xchg
sarl
push
insb
addr16
xchg
out
mov
sub
popa
arpl
dec
pop
adc
xchg
jg
fwait
add
faddp
adc
jg
and
dec
cmp
decl
into
mov
call
jecxz
rcl
mov
in
adc
jns
rcrb
loop
cmp
xor
leave
mov
xchg
cmp
sarb
xchg
xchg
andb
test
xchg
rcr
xchg
or
rcll
ljmp
or
shr
sysenter
int3
adc
mov
and
or
sbb
xchg
mov
sub
add
outsl
enter
sub
cmpsb
fnstcw
cmpsl
cli
cmp
les
or
adc
dec
dec
push
call
xchg
jp
xlat
push
cmp
pop
cmpb
shl
push
sub
add
jmp
cmc
jns
xor
aad
inc
cmp
dec
adc
sbb
cltd
popa
in
cwtl
and
aad
mov
orl
cs
mov
movsl
or
js
mov
pop
and
mov
or
mov
sahf
repnz
subl
ficoms
aam
or
ss
jge
pop
mov
js
push
sbb
jo
jle,pn
lcall
je
jno
jae
or
xor
and
shlb
mov
or
mov
pop
mov
mov
insl
push
adc
sbb
adc
push
adc
add
add
push
xor
les
xchg
xchg
outsl
inc
iret
or
insl
sbb
xor
hlt
lods
outsl
stc
sbb
lods
xor
cmp
data16
ljmp
xlat
mov
xchg
mov
push
shrl
fimuls
adc
jb
xchg
add
xchg
xchg
shll
add
xchg
and
pop
cltd
fs
mov
or
mov
js
mov
lods
xor
mov
push
mov
int3
mov
mov
call
mov
xchg
cld
push
dec
mov
jp
and
hlt
leave
sub
mov
or
pusha
xor
jle
pop
lcall
insb
mov
xor
push
add
fdivs
or
enter
adc
dec
cmp
jg
in
and
shl
mov
movsl
in
lret
popf
movsl
out
xchg
inc
xchg
cwtl
mov
mov
sbb
inc
icebp
jle
pop
test
mov
addr16
icebp
adc
mov
iret
ret
sbb
xchg
mov
inc
mov
jb
xchg
aad
xchg
jmp
dec
pop
cwtl
mov
frstor
iret
aam
mov
mov
faddl
out
cmp
ret
bound
inc
push
push
pop
cltd
and
fwait
cmp
out
outsl
cli
orl
jmp
add
sbbb
fsubs
repnz
add
iret
popf
stos
push
sti
pop
mov
xor
push
pushf
imul
ja
ret
push
push
or
xchg
jo
adc
daa
ljmp
bound
sbb
daa
roll
out
test
pop
cs
sarb
sbb
stc
mov
jb
mov
xor
mov
into
pop
imul
xchg
dec
mov
mov
jns
and
dec
jecxz
out
inc
fwait
data16
and
shr
inc
iret
sbb
add
rcr
adcl
test
leave
sub
adc
sub
lahf
out
mov
and
sbb
dec
mov
scas
js
inc
popf
pop
ficoml
mov
pop
sbb
or
cmp
inc
add
call
out
cli
mov
sub
int
rorb
cwtl
sbb
or
fnstenv
bound
pop
push
rcl
dec
inc
int3
ljmp
xchg
repnz
and
out
xchg
ljmp
jb
shrb
aad
mov
push
addr16
mov
test
jmp
dec
xchg
mov
sbb
cli
mov
pop
xchg
cmp
mov
idivl
movsb
ljmp
pop
test
dec
fisttpll
mov
sti
adc
pushf
cs
repnz
jo
loope
pop
cmp
in
jae
mov
dec
popf
pop
int3
cmc
cmp
orb
imul
sbb
cmp
jno
cmp
and
imul
pop
sub
inc
cmp
pop
pop
pop
pop
pop
inc
or
aas
insb
jo
ret
dec
jle
mov
out
mov
cmp
sbb
mov
push
mov
sub
call
pop
adc
sub
adc
jecxz
cmp
pushf
lea
movl
movsb
iret
dec
fiaddl
push
scas
fsubl
and
xor
leave
adc
addr16
stc
inc
fsts
xchg
repnz
mov
mov
mov
dec
lods
and
notl
insb
shl
sbb
add
push
inc
enter
ret
dec
jns
test
push
cmp
int
fsub
adc
cmpsl
sahf
cmpsl
out
pop
mov
add
cli
js
xchg
shrl
pop
repz
loop
aad
xor
ja
lret
testb
lcall
hlt
imul
addb
adc
jns
out
loope
mov
dec
cwtl
xor
push
sub
movsl
call
inc
gs
ret
cmp
mov
pop
jle
cmp
xor
cmp
das
dec
push
pop
sti
int
and
pop
jb
addb
and
loop
addr16
dec
fucomp
xchg
adc
mov
aad
cmpsl
popa
cmp
dec
mov
xor
mov
shl
incl
scas
test
aad
xchg
sti
in
negl
add
addr16
push
jecxz
cmpsl
je
aas
les
out
mov
into
imul
mov
xlat
pop
mov
mov
mov
sbb
ds
nop
xchg
mov
test
out
xchg
fimuls
mov
jl
ljmp
jmp
mov
mov
xor
mov
sub
and
iret
imul
push
mov
or
jle
cmpb
jmp
pusha
xor
insb
pop
sbb
mov
mov
lods
int3
xchg
insl
fistl
out
ret
and
js
sub
push
sub
hlt
jecxz
cmc
fiaddl
pop
and
mov
xor
arpl
jb
sub
fldl
repz
subb
and
call
cld
sti
roll
cmp
rorl
aas
ret
push
lods
aas
out
mov
adc
adc
scas
jecxz
jmp
sub
pushf
lods
adc
adc
add
adc
cmp
repz
imul
jne
gs
sub
push
cmp
ret
xchg
scas
icebp
add
inc
dec
pop
ljmp
rorl
cmp
add
mov
mov
in
cli
mov
adc
dec
and
mul
and
in
push
cltd
jnp
fwait
add
inc
cmp
pop
mov
sub
loope
push
jmp
xchg
sub
mov
dec
insb
dec
push
andb
enter
adc
inc
or
dec
jae
sbb
js
mov
movsl
out
cmp
cmp
cmpl
mov
cltd
leave
xadd
mov
cmpsb
pusha
in
xor
leave
xor
jge,pt
inc
jbe
jmp
in
jmp
je
mov
outsl
sarl
and
adc
pop
adc
hlt
sub
stos
movsb
lods
pop
cmpb
mov
js
fldl
mov
push
pusha
imul
jmp
and
push
sarb
shlb
inc
cmp
addb
add
mov
pop
ss
inc
cmp
mov
orl
push
testl
xor
xchg
xchg
sbb
in
shll
xchg
lods
mov
pop
xor
sar
stos
jl
inc
push
pushf
add
scas
fstp
sti
outsl
adc
pop
dec
push
dec
pushf
icebp
or
loop
scas
xchg
inc
enter
cmp
sbb
enter
ror
sbb
inc
adc
fldcw
cli
xor
adc
aaa
lock
sub
mov
lods
push
push
rorl
or
adc
outsb
popa
aam
dec
mov
roll
xchg
push
mov
mov
repnz
xor
sub
sbb
xor
dec
clc
pop
outsl
cmpsb
add
inc
std
jae
cld
addr16
ljmp
jo
adc
jle
sbb
ret
sbb
inc
mov
mov
pop
addr16
leave
push
add
mov
leave
fadds
imul
loopne
and
pop
xor
imulb
andl
xlat
stos
adc
mov
jno
imul
sbb
jne
rcll
pushf
outsl
inc
xor
mov
int3
or
paddusw
sarb
fnstenv
mov
adc
pop
mov
insb
fildl
add
enter
lock
fcmovu
xchg
pcmpgtw
orl
lret
adc
sbb
test
in
mov
xor
xchg
xlat
cmc
xor
sti
ds
jbe
popa
loopne
pop
xor
dec
mov
test
add
or
dec
shl
js
aam
sub
hlt
adc
test
adc
mov
pop
rolb
std
aas
lea
jg
out
shrl
mov
pop
jmp
scas
push
jae
shll
adc
jecxz
xchg
and
mov
and
rorl
xor
xchg
inc
ss
mov
fisttps
adc
repz
call
add
adc
mov
mov
or
or
jno
inc
sub
cmp
sti
cmc
cmpsb
stos
xor
pop
mov
pop
clc
inc
pop
dec
jg
push
add
add
out
and
fbstp
mov
fdivr
dec
out
popa
jge
sub
or
bound
sbb
add
dec
adc
in
mov
sbb
out
inc
xlat
dec
idivb
xchg
xchg
repnz
jne
sub
sbb
jg
sub
imul
sub
ss
and
addl
lret
in
sub
push
mov
inc
cvtps2pi
sahf
cli
iret
pusha
ret
xor
shr
xor
xchg
cli
xchg
adc
addr16
jns
cmp
jl
fistps
ljmp
jo
or
out
das
sbb
andl
xor
dec
add
sahf
pop
mov
add
mov
stc
scas
inc
cmp
ret
cltd
jle
icebp
sbb
icebp
lea
push
adc
mov
pop
aam
or
jl
lods
mov
adc
sbb
push
jb
jp
into
pop
and
out
mov
mov
mov
add
push
stos
mov
repz
loopne
mov
jne
in
push
xlat
dec
sub
sub
sahf
jne
movl
cmovg
jns
jo
orb
and
push
ficoml
ljmp
scas
sbb
pop
push
call
mov
fneni(8087
rcrl
pop
incb
aaa
les
aad
cmc
jbe
pop
jnp
sbb
into
insb
fiadds
push
jne
daa
ficompl
cmp
mov
cmpb
dec
ss
out
jae
subl
fwait
insb
push
icebp
repz
push
imul
lods
or
inc
jp
push
cli
xchg
lcall
ret
pop
or
inc
out
add
insb
mov
fnstenv
pop
push
mov
cmp
nop
xor
int
testl
mov
jno
fmull
dec
xor
and
pop
pop
cmp
pusha
fistps
lcall
push
lcall
pop
movsb
jae
leave
xchg
xor
push
push
dec
and
push
incb
adc
ljmp
sbb
jp
imul
push
adc
cmp
and
lcall
icebp
jge
pushf
mov
shrl
add
aaa
mov
xchg
addr16
insl
dec
adc
cltd
mov
and
sti
imul
pop
xlat
jp
lahf
inc
out
xchg
movsl
insb
ret
adc
sbb
clc
lods
push
xchg
lea
xor
dec
pop
mov
push
scas
out
sbb
mov
push
into
cmp
xchg
xchg
pop
test
outsl
adc
or
adc
ss
test
cmp
pusha
pusha
mov
jnp
nop
push
ret
cwtl
xlat
cmp
rorl
pusha
or
repz
ret
idivb
pop
cltd
adc
sub
rcll
or
inc
shl
inc
stos
ja
add
int
ljmp
fcoml
cmpb
int3
in
jge
dec
push
ljmp
adc
es
jl
hlt
dec
stos
jns
dec
adc
pop
mov
sbb
jg
xor
xchg
mov
sub
jbe
loope
jns
jae
mov
inc
pop
adc
movsl
fildll
push
or
repnz
push
mov
test
fs
nop
lods
arpl
cmp
fsubrs
push
ficoms
xchg
xor
adc
movsl
leave
xchg
cmp
cmpsl
push
xchg
iret
push
hlt
inc
cmp
lock
int
jae
insb
call
mov
push
fsubrl
mov
nop
les
fcmovnb
jb
scas
imul
aad
stos
dec
fisubl
sti
mov
movsb
xchg
enter
mov
cmp
cmpsb
adc
or
hlt
daa
out
mov
jae
add
sbb
inc
std
addl
adc
pop
out
in
add
addr16
sahf
cmp
add
pop
jb
xchg
mov
add
loop
daa
mov
xor
movb
rolb
add
test
fscale
cmpl
pusha
std
out
mov
mov
xlat
sbb
aad
mov
clc
and
cmp
mov
subb
loopne
pop
cmpsl
ret
cmpsb
lahf
movsl
cmpsl
ja
mov
das
pop
push
pop
test
cmp
jg
fwait
dec
mov
mov
sub
mov
aad
in
es
insl
jp
mov
push
lahf
and
mov
pop
out
sub
jae
fwait
dec
push
add
and
pop
cmp
imul
push
dec
loop
and
int
sub
mov
fadd
xchg
pushf
rcrb
dec
add
lods
or
push
pusha
jae
inc
loop
insl
mov
adcl
xchg
sub
adc
daa
mov
cli
aaa
cmp
lds
rcrl
popa
mov
sub
iret
mov
adc
ret
and
pop
arpl
mov
bound
fldenv
inc
dec
les
dec
xor
mov
pusha
adc
aaa
lock
mov
fisttpl
je
and
sub
test
pop
neg
test
ss
outsb
sub
test
sbb
add
lret
pop
mov
xchg
hlt
pop
stc
movsb
and
dec
dec
xchg
pop
cltd
movsl
add
into
push
ss
or
cmp
stc
adcb
sub
mov
out
mov
adc
cld
mov
daa
xchg
cmpsl
inc
pusha
xchg
insb
fsubs
in
nop
outsl
mov
mov
mov
pop
movsb
rcl
int
es
push
push
or
das
stos
xchg
xchg
orl
xchg
lds
sbb
fidivrs
dec
lds
sahf
adc
mov
addr16
jmp
std
cmpsl
pop
aam
in
lods
ss
mov
jbe
insl
fadd
pop
and
cwtl
xor
push
sub
cwtl
addb
ljmp
movsb
mov
aad
scas
test
xchg
mov
mov
mov
dec
and
xor
cmpsl
stos
dec
movsb
cmpxchg
cltd
mov
repnz
jecxz
push
mov
and
repz
pop
lods
nop
adc
xchg
testl
es
inc
xor
cmp
imul
add
cmpsb
test
stc
adc
push
and
push
sub
mov
testb
clc
jo
aas
cmc
mov
jp
jge
fdivr
into
jg
mov
xor
add
mov
push
iret
cmp
add
jnp
mov
adc
mov
scas
imul
loope
pop
push
add
inc
sub
mov
repz
aam
sub
popf
lahf
out
xchg
pop
pop
movsl
mov
leave
shl
test
push
sbb
mov
imul
dec
jmp
add
js
ja
addr16
adc
ds
lock
jae
sub
into
js
cwtl
jae
cmp
jle
or
sub
outsl
aad
sub
call
lcall
jno
cmpxchg
lahf
fisttps
pushf
pop
adc
out
jecxz
sbb
sub
sub
mov
mov
pop
cmp
fcmove
and
incb
in
inc
leave
in
mov
dec
aad
filds
jmp
mov
rorl
mov
lock
jae
dec
xor
loopne
fwait
sub
mov
dec
and
loopne
rcl
lret
add
rorl
leave
push
inc
or
lock
insl
xlat
lcall
sbb
aas
shrl
sbb
pushf
dec
out
insl
xchg
sub
lds
or
rcll
scas
mov
into
inc
cmp
xlat
hlt
push
mov
bound
push
jb
movsb
push
xchg
ret
aam
or
in
daa
adc
aas
lds
repnz
loopne
jmp
mov
mov
popf
int3
fdivrs
sbb
jns
push
stos
sub
outsl
pop
call
data16
xchg
mov
gs
add
aas
aas
fcomip
in
push
xchg
inc
dec
repz
jle
jno
daa
pop
ljmp
dec
sbb
inc
loop
jne
cmp
mov
sbb
out
inc
pop
adc
sub
fisubrl
xchg
mov
push
insb
sbb
jmp
mov
nop
test
roll
mov
or
fidivrl
xchg
adc
pop
lret
add
aad
leave
xchg
pop
or
push
dec
cmpsl
lock
fdiv
and
cmc
or
cli
and
mov
sub
ds
call
mov
lea
xor
inc
push
int3
loopne
idivl
dec
mov
jno
mov
push
rcll
sub
adc
pop
cli
add
cmpsb
lds
ret
mov
add
repnz
mov
adc
sub
adc
jmp
negb
arpl
mov
testl
inc
popa
add
jno
mov
add
push
out
pop
fwait
mov
mov
add
jle
aas
and
adc
xchg
notl
addb
inc
ret
addr16
or
pop
cmc
imul
mov
inc
outsl
mov
mov
and
xchg
jno
test
jge
stos
outsl
loop
ljmp
cs
aaa
and
push
jle
xchg
jo
fiadds
insl
dec
mov
cmp
sub
out
scas
sti
mov
mov
adc
sub
out
das
cwtl
pop
sarb
int
xlat
shlb
inc
movsb
inc
sbb
add
insb
test
push
aad
jl
loop
or
jne
xor
call
pusha
fwait
and
out
sbb
dec
add
rclb
mov
fsubrp
dec
lds
ret
test
flds
or
cs
int3
es
inc
data16
popf
pop
fwait
or
xlat
xor
mov
mov
scas
out
cld
lret
xchg
jno
push
and
scas
ja
pop
adc
pop
stos
jb
andl
add
sbbl
aad
mov
lahf
xchg
imul
dec
sbb
aam
shrb
loop
in
pushf
jg
and
push
mov
adc
divl
sub
paddsw
inc
rcrb
add
ss
sbb
adc
mov
mov
nop
adc
enter
add
test
imul
push
repz
lret
idivl
jb
ja
test
dec
pop
cmp
mov
add
xchg
sti
repnz
push
stos
repnz
mov
stos
mov
les
inc
cs
je
mov
adc
popf
add
sbb
ljmp
sub
dec
inc
test
inc
flds
jge
push
sbb
out
je
test
mov
dec
lds
sbb
sub
sbb
adc
sbb
inc
xor
or
and
sub
scas
adc
jge
enter
push
cwtl
rolb
mov
jbe
out
sub
fsubr
cmpsb
cmp
cmp
mov
lods
insl
fsubr
xor
shlb
sub
pushf
out
push
xchg
and
sub
mov
cmp
rclb
xchg
icebp
outsl
push
rorb
and
cmc
ret
aad
stos
movl
outsl
or
dec
mov
sbb
jbe
es
imull
or
dec
xchg
out
jbe
test
mov
and
pop
outsl
xchg
pushf
gs
rcll
iret
mov
in
jge
push
xchg
sti
sub
out
inc
pop
mov
xor
stos
push
repz
jo
cmp
mov
imul
or
cs
scas
lcall
cld
cmc
int3
xorl
mov
xchg
faddp
lock
popf
inc
incl
adc
mov
jl
mov
adcb
and
lds
mov
pop
roll
cmp
dec
loopne
push
add
loopne
sbb
imul
jno
inc
lret
cmp
shlb
inc
or
jmp
inc
leave
inc
pop
cmpsb
jmp
clc
iret
mov
les
mov
jg
sbb
movsl
or
out
or
je
pop
push
movsl
addb
dec
mov
jns
xor
xchg
arpl
into
mov
push
jne
push
sarl
jge
push
cmp
mov
xchg
jge
pop
popl
pop
lcall
inc
shll
imul
sub
imul
inc
fistpl
bound
dec
jnp
aam
sub
add
pop
sub
cmp
lock
lcall
dec
add
test
xchg
mov
out
fisubrl
aam
gs
adc
lock
data16
jns
je
in
mov
mov
or
mov
subb
mov
les
rorl
fwait
int3
inc
sub
sbb
subl
ret
inc
fistl
dec
test
jg
push
sti
pusha
std
pusha
and
sbb
mov
mov
in
cmc
test
nop
mov
jge
insb
jecxz
enter
lret
out
in
push
cmpl
cmpsb
push
jle
mov
clc
sub
pop
pop
and
or
fidivs
fldt
lahf
inc
mov
mov
iret
mov
pushf
jo
out
xor
add
fisubrs
repnz
loope
cld
fsubrl
ds
in
push
out
dec
jae
pop
in
lods
mov
mov
test
mov
xor
arpl
mov
pop
test
push
mov
push
outsb
in
add
xchg
sbb
stc
sar
cld
ret
pusha
ja
push
xchg
adc
hlt
xchg
mov
xlat
mov
fstpl
xchg
jecxz
je
arpl
fcoml
add
dec
aas
cmp
cmc
ljmp
pusha
cltd
push
pop
inc
das
or
sarb
bound
sub
aaa
out
mov
xor
xchg
pop
mov
cld
add
mov
addl
dec
sarb
out
popa
inc
outsl
add
cmp
rolb
mov
lock
out
fstl
leave
mov
sub
mov
clc
je
jae
nop
cmpsb
cmpb
inc
out
push
xchg
or
aaa
jo
dec
negb
mov
out
gs
jl
cwtl
fdivp
push
xchg
inc
or
outsl
add
mov
mov
in
insl
cmp
push
jns
xor
xchg
push
test
jg
xchg
sub
cmc
jl
mov
mov
mov
scas
pusha
inc
mov
arpl
aas
imul
mov
lret
dec
pop
pop
pusha
jecxz
and
lret
stos
inc
mov
sbb
push
push
popa
xor
mov
push
icebp
mov
jno
ja
cs
lock
jns
cmp
xchg
popl
mov
inc
inc
es
out
cmpsl
cltd
mov
inc
mov
dec
mov
or
scas
in
clc
inc
out
push
rcll
call
outsl
push
sbb
ret
or
and
pop
push
insb
gs
sbb
mov
fbld
sub
mov
test
cmp
sbb
mulb
mov
inc
in
jne
push
jae
inc
out
jne
data16
pop
lcall
pop
fimuls
xchg
das
mov
add
or
add
dec
cs
stc
or
dec
mov
lock
xchg
xchg
jne
mov
xor
movsb
in
enter
or
and
mov
push
js
fs
fiaddl
dec
rclb
or
repz
std
mov
mov
mov
xor
cmp
mov
lock
mov
out
sbb
dec
arpl
movsb
rorb
out
jno
jb
or
test
pop
jae
jg
sub
dec
fidivrl
aas
mov
or
sub
dec
aam
aas
push
aas
jle
inc
repnz
mov
jg
and
mov
stos
dec
add
mov
inc
orl
sbb
jmp
enter
push
push
into
test
lods
ror
shll
adcb
test
lock
nop
inc
repz
int
or
testl
push
sbb
lret
imul
int3
fcoml
outsl
sub
inc
adc
shl
pop
and
xchg
jp
adc
inc
jne
mov
pop
dec
mov
mov
jne
bnd
out
int3
test
cmp
cmp
or
jne
ljmp
sbbl
dec
adc
fcmovnb
pop
push
sub
sub
jmp
cmpsl
cwtl
stos
aas
cld
test
mov
nop
push
sbb
out
mov
sub
jo
mov
dec
out
inc
and
cmp
mov
iret
xchg
lock
mov
jp
out
sub
jno
xchg
mov
push
mov
cmp
inc
push
orl
mov
jl
cmp
data16
sbb
arpl
jb
inc
add
pushf
and
cmp
rorl
je
rol
add
stos
mov
das
in
or
js
cli
sub
mov
in
cmp
cmc
in
lret
sub
jbe
inc
scas
inc
jns
les
mov
js
or
mov
xor
data16
aad
pop
xchg
in
cs
xchg
sub
outsl
movsl
leave
ljmp
inc
inc
and
mov
mov
mov
add
mov
lahf
insl
sbb
into
dec
cmp
fiadds
fisubrl
jecxz
push
rclb
xchg
fisubl
dec
fistl
sub
push
xlat
divl
lahf
std
gs
xor
pusha
mov
movsl
cltd
shlb
xchg
pusha
or
pushf
pop
xlat
insl
cmpsl
rcrb
stc
mov
xor
pop
add
dec
pop
rol
mov
cmp
std
sbb
pop
jge
pop
hlt
jb
outsl
add
nop
cmc
pop
lock
popa
mov
inc
lahf
sub
or
es
fs
add
out
push
fsts
daa
out
pop
jecxz
sbb
ror
sub
movsb
add
sbb
jb
test
push
cmpsb
dec
inc
mov
insb
daa
mov
fisttpll
fidivrl
enter
iret
mov
gs
lock
pusha
cmp
movsb
shrb
aam
pop
xchg
imul
or
lcall
sub
mov
jecxz
inc
fsubr
fiadds
icebp
mov
imulb
jno
jae
or
outsl
pop
les
and
push
dec
mov
out
jp
je
jle
ss
test
lock
xchg
shl
xchg
or
inc
in
xor
push
insl
lcall
xchg
nop
lock
movsl
add
jmp
mov
cmp
or
aaa
cmp
xchg
xor
cs
stc
push
xchg
sbb
cld
push
andb
inc
inc
fcomps
jg
or
inc
pop
sub
mov
int
xchg
mov
sub
pusha
cs
scas
jo
fnstenv
mov
imul
cmpsl
cmp
add
mov
or
pop
lods
jae
and
push
test
mov
decl
or
jno
adc
xchg
mov
cmp
jp
mov
mov
push
cmp
mull
fmul
pop
xlat
inc
in
in
cltd
push
add
pusha
jno
out
cltd
pop
add
push
sub
stc
inc
pusha
stos
add
mov
mov
mov
rolb
sti
dec
push
into
jae
mov
mov
es
sbb
cmp
xchg
xchg
sub
dec
mov
pop
mov
call
xchg
inc
sub
mov
test
xchg
push
into
pushf
inc
sub
or
and
fldenv
push
jmp
fstps
sub
mov
mov
sub
sti
test
ljmp
cli
xor
jbe
nop
push
outsl
adc
xchg
fiadds
push
mov
out
pop
sub
dec
pop
je
cwtl
clc
jne
stc
es
fld
cmpsb
aas
push
lods
sub
mov
mov
mov
pop
mov
in
xor
loopne
sub
int3
jae
lret
cmpsl
mulb
outsl
jmp
sbb
mov
and
mov
je
adc
mov
jmp
add
mov
je
pop
aam
mov
aaa
imul
dec
into
xchg
outsl
mov
jae
cmp
or
int3
inc
jb
aas
pop
sub
leave
pop
dec
mov
add
push
mov
pop
loope,pt
add
outsl
stc
mov
in
bound
xchg
fmul
ss
push
dec
jle
push
pop
dec
xchg
fiaddl
fdiv
enter
mov
inc
test
and
nop
clts
bound
and
out
xchg
repz
mov
add
dec
sbb
cld
bound
jne
std
push
xchg
sbb
push
imul
jbe
lahf
int3
or
gs
cmpsl
sahf
outsb
dec
xchg
pop
shrl
inc
sub
mov
or
and
bound
popf
jae
adc
pop
mov
rcll
into
aas
js
ljmp
pop
jnp
sub
cmp
sti
clc
cmp
fucomi
add
mov
cmp
sahf
pop
jo
pushf
mov
mov
pop
arpl
stos
in
movsb
push
dec
xchg
push
into
mov
cli
xor
into
xchg
inc
lret
sahf
pop
push
pushf
scas
scas
jl
jl
jbe
mov
inc
inc
mul
out
add
sti
cld
sahf
mov
orb
cmp
into
pop
roll
push
push
and
adc
mov
cwtl
mov
fildl
adc
xor
scas
fstl
push
or
push
xor
inc
mov
rcl
pop
test
pop
inc
cli
adc
mov
ret
es
mov
rolb
jmp
push
sbb
or
in
push
xchg
arpl
jns
jo
xor
cmp
rcrl
mov
les
mov
pusha
dec
insl
out
sub
cli
xchg
xchg
pop
mov
arpl
sbb
cs
pop
inc
or
daa
ja
test
jecxz
jae
xchg
andl
pushf
inc
mov
lds
pusha
rcrl
or
mov
inc
arpl
test
fwait
sub
ljmp
test
pop
xor
sahf
xchg
pop
push
xor
inc
add
cvtps2pi
jo
call
dec
jnp
mov
push
dec
mov
mov
mov
sbb
mov
mov
cmp
fisttpl
das
jecxz
dec
inc
jns
imul
fucompp
imul
inc
or
cmpsl
dec
mov
push
in
pop
in
push
sbb
mov
addr16
int3
add
mov
push
sub
movsb
test
mov
ljmp
jnp
inc
jbe
repz
pop
push
mov
jg
push
loopne
dec
rol
dec
sub
loopne
outsl
out
adc
scas
adc
sahf
sub
mov
aam
out
pop
mov
jae
inc
int
vsqrtps
push
add
fwait
icebp
pop
xor
push
addl
out
outsb
mov
cmp
ss
xchg
mov
lcall
push
fstl
sbb
sub
pop
xor
lret
mov
cmp
les
dec
imul
ret
movsb
mov
push
push
lret
ja
sahf
jbe
and
xchg
adcl
jno
fistpll
in
sbb
shlb
or
xor
mov
aaa
adc
sub
mov
fists
inc
sbb
xor
mov
cmp
shrb
outsb
sbb
or
mov
mov
clc
loopne
sbb
data16
pop
mov
inc
aad
aaa
push
mov
sbbb
out
xchg
cmp
cwtl
sti
cmp
popa
addr16
call
xchg
push
out
test
and
mov
mov
mov
mov
out
inc
or
mov
dec
lret
mov
ret
pop
lret
lahf
jl
push
or
sti
pop
pop
push
inc
pop
cvtpi2ps
sub
and
cmc
dec
out
jno
xor
mov
imul
ret
daa
mov
dec
insl
mov
pop
lret
test
jo
ds
loopne
popf
jb
xchg
jbe
rcrb
push
cmpsl
pop
xor
jge
jnp
incl
dec
call
push
fistpl
jno
mov
jmp
out
cs
enter
push
add
cmp
popa
sti
adc
cmp
outsl
pushf
pop
dec
bound
mov
dec
mull
popa
pop
pop
xchg
pop
pop
stos
andl
pop
shll
insb
adc
xchg
aaa
adc
xor
inc
notl
aaa
dec
addb
gs
movsb
xchg
cmp
rorb
xor
cmp
sub
push
jnp
mov
push
addr16
int3
or
in
mov
fidivl
push
int
mov
incl
push
outsb
mov
int3
iret
shl
test
js
mov
push
adc
mov
and
stc
or
inc
loope
ja
imul
xchg
or
xor
das
mov
pop
out
mov
adc
jg
loopne
pop
mov
popa
inc
test
sbb
cmpsl
jle
pop
ljmp
lahf
int3
adc
and
inc
test
movsl
sbb
pop
clc
jecxz
popf
icebp
aad
les
dec
je
mov
movsl
mov
adcb
nop
and
mov
cmp
xor
push
bound
repnz
or
mov
cmp
dec
pop
push
jle
mov
popf
jecxz
or
sub
ss
mov
xor
jb
xlat
lods
xchg
and
loop
jnp
cmpb
mov
push
lret
lcall
pop
fsubl
cmp
cmp
adc
add
sbb
push
cltd
cmc
push
xchg
jno
idivb
shl
mov
mov
mov
or
and
lods
std
ds
divl
pusha
xchg
xor
mov
add
mov
lea
or
add
nop
or
pop
add
and
popa
pop
or
cmp
or
lods
adc
shrb
into
popf
stc
dec
sub
cmp
jge
xchg
add
fidivl
shll
fs
iret
xchg
mov
xchg
fldcw
xor
and
aad
sbb
push
mov
jmp
mov
dec
inc
es
cltd
sarl
sbb
or
insl
xor
dec
xchg
mov
je
fildll
pop
lcall
xchg
add
ja
std
rcl
cmpb
mov
pop
loopne
push
fs
add
out
aam
push
sbb
lahf
dec
push
mov
xor
shlb
inc
inc
lahf
pop
sbb
mov
adc
xchg
dec
cmp
mov
mov
jbe
inc
xchg
test
adc
push
mov
sbb
cmp
xor
aad
fnsave
sbb
mov
aad
movsb
or
sub
xchg
ret
xlat
add
adc
fdivrp
push
lods
lret
mov
push
cmp
pop
mov
mov
adc
mov
loopne
mov
outsl
sbb
jg
mov
fimull
and
sub
stc
adc
rolb
push
adc
std
jmp
test
repnz
jge
lock
and
adc
pusha
or
add
test
repnz
push
mov
mov
adc
add
push
subb
jge
dec
enter
xor
daa
addb
out
lods
sti
add
rolb
add
and
std
push
mov
sub
icebp
sbb
mov
lahf
movsl
sbb
shl
pop
pop
sub
mov
inc
mov
xor
dec
out
pop
lret
hlt
cmpsl
test
cmp
inc
imul
jl
cmc
push
das
cmpsb
mov
inc
cmpsb
out
xor
stc
lock
pop
sbb
fildl
jne
xor
pop
xchg
sahf
lods
loopne
imul
sbb
sbb
aam
shll
jle
dec
adc
call
inc
jge
aad
pop
dec
mov
dec
xchg
in
dec
pop
xor
cmp
mov
xchg
icebp
aam
inc
inc
dec
out
mov
sub
xchg
aam
pop
sub
icebp
popa
icebp
dec
dec
pop
pusha
jb
push
cld
pop
shll
mov
push
in
iret
pop
and
or
jne
adc
lret
add
in
and
inc
insl
xor
movsl
mov
sar
mov
mov
jmp
pop
mov
iret
pusha
pusha
sahf
jno
cmp
xor
ds
cmp
jne
das
inc
cmpb
xor
fldenv
sbb
test
int
push
cmp
adc
cltd
push
es
inc
js
xchg
or
movsb
out
mov
test
cmp
inc
lret
test
sub
sbb
sub
add
repnz
in
cmp
add
gs
dec
mov
sub
mov
jle
fstpl
movsb
nop
inc
fisubrs
mov
pop
push
aad
ret
sub
cmpsb
fildl
mov
add
mov
mov
movsl
clc
dec
cmpsl
or
sub
data16
sub
sub
cs
sbb
sarb
sub
jg
dec
pop
inc
xchg
mov
mov
ja
pushf
lods
mov
xchg
mov
andb
fisubl
dec
lock
xchg
rolb
jb
sbb
sbb
mov
movsb
in
rdpmc
or
or
mov
mov
dec
push
int
sti
jns
jg
data16
rcr
test
fmull
mov
jb
iret
dec
icebp
test
test
sbb
out
mov
in
es
jmp
inc
popf
lahf
ret
cmp
test
dec
std
and
hlt
shrb
adc
jns
cwtl
lds
int3
mov
jb
sbb
mov
cmc
out
in
loope
mov
mov
in
fnstsw
push
cmp
sbb
in
xor
add
xor
jg
movsb
fnsave
lock
mov
dec
cli
sbb
mov
cmp
addr16
mov
sub
movsb
mov
imul
push
mov
pushf
mov
out
sarb
xchg
sbb
inc
cltd
pop
inc
mov
loop
insb
insl
ret
mov
xor
inc
and
adc
pop
sub
arpl
inc
mov
imul
mov
ss
out
mov
lcall
and
pop
dec
rcrl
pushf
sub
mov
xchg
imul
cmp
bound
fsts
or
and
mov
repnz
mov
push
sub
movsb
mov
test
mov
or
push
mov
xor
arpl
pop
data16
int3
adc
mov
bound
mov
pushf
pop
mov
mov
movsl
stos
inc
xor
lock
scas
test
add
aaa
xor
or
into
mov
shll
jge
pop
leave
popf
mov
or
sub
mov
das
dec
adc
xchg
jno
and
pop
pop
jl
dec
cmpsl
dec
push
test
rorl
dec
stos
shrl
mov
hlt
sbb
popa
mov
fadds
jmp
inc
test
jp
fcoml
add
mov
jp
scas
out
xchg
sbb
add
push
lods
inc
mov
mov
mov
lock
cmp
push
roll
fwait
or
push
cld
or
sub
inc
adcl
popa
jb
sbb
gs
mov
inc
jae
rorb
mov
cmp
outsl
pop
jp
loopne
loope
in
xchg
mov
hlt
inc
add
inc
cmp
adc
loope
lahf
sti
or
out
pop
xchg
and
outsb
in
outsl
sti
lret
lcall
lret
in
adc
pop
in
xor
sarb
je
or
sahf
jle
jo
dec
and
xchg
pop
fisttpl
addps
jo
cli
sar
bound
addl
sub
jb
jb
fmuls
out
outsb
xchg
in
push
push
in
and
stos
mov
ds
lods
ss
int
fcmovb
and
xchg
xor
xchg
mov
add
xchg
pop
xchg
jg
and
jmp
mov
sub
and
insl
adcl
outsb
cltd
scas
xchg
inc
daa
lret
das
orb
or
ljmp
dec
ret
sbbb
stos
or
adcl
lea
inc
xchg
jnp
faddl
push
popl
dec
movsl
cmpsl
out
push
stos
insb
inc
mov
xchg
fbstp
xchg
out
sbb
out
nop
outsl
ljmp
imul
pop
enter
mov
lock
filds
mov
mov
xchg
pusha
mov
push
mov
sbb
scas
outsl
arpl
sarb
jns
lahf
cmpsb
dec
sbb
adc
sub
mov
push
and
aaa
in
sbbl
imul
callw
adc
sbb
aas
lods
and
das
popf
pop
hlt
xchg
enter
adc
das
xchg
adc
mov
ret
in
fidivs
add
xlat
addl
pop
dec
roll
xchg
xchg
sbb
jnp
and
jnp
mov
pusha
insb
mov
dec
rorb
cmp
xchg
pop
rcrl
cmp
xor
pop
dec
lock
shrb
nop
sbb
xor
orl
mov
xor
aas
lcall
lahf
xchg
xor
icebp
out
leave
sub
inc
dec
sub
aaa
jg
adc
daa
push
ljmp
and
imul
clc
push
enter
inc
pop
nop
xchg
scas
lcall
cmc
jge
adc
daa
daa
add
cmp
push
movsb
jl
fdivrp
sarb
xor
bound
inc
and
pop
or
das
add
popa
lahf
push
mov
sub
test
and
jo
mov
mov
addl
jg
mov
inc
stos
add
push
mov
cli
add
ret
or
lea
jmp
cmc
es
int
inc
push
and
notb
jo
std
jo
mov
pusha
inc
dec
movsb
xlat
lcall
lea
jns
loopne
mov
jle
push
out
jle
inc
pop
add
lods
xchg
cmpsb
jb
jbe
inc
sti
mov
sub
push
test
rcl
stos
daa
rcrb
cmc
aad
or
lret
push
mov
pusha
scas
xchg
mov
mov
mov
shlb
sbb
mov
movsl
xlat
xchg
push
push
fimuls
stos
xor
dec
inc
cmp
test
cmp
pop
je
cltd
sub
xchg
pusha
mov
repnz
mov
movsl
fadds
push
xor
es
push
movsl
dec
mov
int
sub
ljmp
fisubs
cli
rcr
jnp
adc
fimull
mov
xor
jmp
mov
dec
iret
inc
imul
sbb
sbb
cmp
hlt
xlat
sub
mov
mov
cmc
shl
cmpsb
pop
js
mov
lds
in
jmp
pop
add
fimuls
aaa
aad
cmp
pop
ret
push
ret
push
cmp
fisubl
adc
sbb
and
repz
and
sbb
add
movl
negl
ret
shll
decb
add
popf
mov
add
call
data16
stc
rclb
daa
lods
mov
inc
ret
jmp
loop
into
imul
jbe
xchg
or
scas
jl
mov
sub
and
test
stc
int
xor
add
insl
inc
mov
out
out
xchg
ja
jmp
shrb
insl
into
fs
inc
lahf
in
pop
cmp
mov
jo
lds
dec
inc
or
rolb
sub
fwait
pop
adc
nop
lahf
gs
sub
sbb
popf
data16
push
adc
pop
mov
jae
lret
dec
sahf
fnstenv
iret
pop
scas
into
push
ret
pop
out
ss
notb
repnz
cmp
movsb
andb
repz
or
movsl
inc
ja
push
xchg
pop
and
jmp
lcall
jae
sarb
jl
idivb
pop
xchg
mov
test
push
aam
push
sbb
movsb
js
jl
dec
jae
pop
les
add
ljmp
iret
outsb
fs
cld
in
clc
adcl
fwait
in
jno
sti
pop
add
xor
ss
mov
push
sub
fnstenv
pop
inc
jnp
jno
test
xor
push
pop
in
cld
jge
mov
push
clc
cld
popa
lret
les
mov
sbb
imul
pop
pop
stos
dec
jns
jns
dec
hlt
pop
outsb
mov
stos
pop
mov
sub
cmp
dec
mov
push
mov
addr16
jbe
insb
inc
leave
jl
stos
sarl
sub
adc
add
sbb
mov
or
in
cmpb
outsb
popf
int3
or
lret
rorl
in
jnp
cmp
add
add
jae
mov
push
sbb
adc
pop
in
fsubrs
rcrl
jl
fldenv
fcomip
in
fidivrs
pop
out
push
inc
or
jo
mov
lea
pop
pop
push
fwait
int
adc
cmc
inc
popf
mov
nop
jne
inc
out
cmp
adc
jo
rcrb
mov
hlt
mov
sbbl
cmp
xchg
ss
xor
mov
cmp
pop
push
pop
rcrl
gs
outsb
ja
sbb
jo
cmp
in
push
out
add
lahf
sahf
xchg
pop
mov
pop
pusha
clc
pop
das
xchg
jge
inc
fwait
jl
pop
push
ds
jl
add
lods
and
jbe
movsb
push
add
mov
or
mov
xchg
add
and
hlt
pop
push
push
pop
daa
add
or
sbb
daa
mov
xchg
inc
lahf
or
test
inc
pop
fists
icebp
mov
test
push
fwait
cmp
pop
xchg
scas
repz
nop
mov
sub
inc
arpl
pop
mov
fxtract
jmp
ret
repz
int3
push
jp
mov
dec
dec
jno
hlt
cltd
push
cmpsb
sub
aam
mov
sbb
inc
xchg
cmpsl
inc
jmp
mov
movl
sbb
shl
fistps
push
pop
insl
in
test
sbb
pop
xchg
jns
sbb
jg
repz
and
cmp
cmp
pop
ret
sbb
je
inc
data16
jnp
cmp
test
inc
stos
cmp
mov
cmp
or
mov
loopne
fildl
icebp
xor
mov
dec
sub
outsl
xor
push
mov
loope,pn
push
call
jns
jns,pt
hlt
fsubrs
jg
pop
jb
out
aaa
push
xchg
outsl
or
bound
mov
push
lahf
mov
jbe
mov
enter
hlt
push
ljmp
test
lock
mov
lods
test
xchg
sub
dec
addl
into
cld
aam
lods
int3
int
xor
cs
jmp
jb
adc
fnstenv
pop
in
in
xorb
test
leave
xchg
repnz
shlb
ja
sbb
xchg
jbe
fwait
cmp
xchg
dec
rolb
push
dec
adc
dec
int3
xor
pop
dec
pop
mov
shll
dec
xlat
push
es
movsl
pop
insl
add
adc
call
fstl
stc
and
push
dec
or
cmp
push
jo
insl
lock
xor
stos
lods
xchg
test
fnstenv
xchg
jge
shrb
add
enter
rorb
into
push
pop
xor
popa
fs
push
daa
cmpsb
push
xor
mov
jge
sbb
jmp
scas
sbb
mov
mov
lods
mov
jl
jg
insb
popf
fdivs
leave
shll
and
push
mov
inc
push
movsb
pop
ljmp
push
dec
and
rol
cmpb
inc
sbb
ret
cld
xor
imul
shrl
jns
ljmp
and
es
hlt
xor
cmc
jge
push
push
loopne
jo
int
loope
mov
fldt
mov
mov
jmp
test
daa
mov
jmp
mov
jl
xchg
popf
add
enter
js
sar
add
add
mov
lods
ja
pop
adc
inc
xchg
movsb
and
scas
repz
cmp
add
push
clc
aaa
out
fstp
pusha
jb
pop
pop
outsb
add
jb
sub
mov
push
jle
add
and
popf
push
cmp
push
inc
lds
adc
stc
cld
or
mov
adc
cld
bound
lods
aad
cld
fs
xchg
inc
xchg
sbb
xor
sbb
inc
aam
pop
out
jnp
cli
xchg
xchg
imul
and
cs
cmp
dec
rclb
add
sbb
xor
or
stos
push
and
mov
das
xor
push
xchg
int3
test
jle
sbb
outsb
cmc
push
mov
in
out
jle
ja
imul
js
mov
es
xlat
mov
mov
sbb
cmc
in
xor
pop
sub
lods
xchg
inc
jbe
sub
test
add
mov
cmp
pop
aam
inc
jno
in
dec
test
psllw
dec
pop
loopne
jbe
test
jns
dec
lds
adc
inc
call
fs
dec
aas
ss
cmpsl
push
mov
cmp
adc
ljmp
in
cmp
sub
outsb
mov
cmp
push
nop
push
sbb
push
cmp
iret
sub
aaa
in
xchg
pop
jl
sbb
or
inc
inc
push
push
in
mov
js
lcall
pop
movl
mov
jp
add
pushf
sub
leave
mov
cmpl
xchg
lret
ja
ljmp
es
dec
cmpsb
loope
dec
adc
aaa
mov
addr16
push
mov
sbb
mov
mov
mov
pop
sbb
mov
cmpsb
push
test
push
jecxz
ja
cld
pop
fimull
aaa
inc
mulb
repz
aad
sarl
mov
js
data16
mov
adc
mov
insb
aad
repz
push
bnd
gs
cmpl
enter
mov
pop
sbb
aas
out
adc
xchg
je
in
into
hlt
je
add
xor
in
imul
mov
and
xor
cmpsl
xchg
sub
lods
loope
push
dec
add
fucomp
sbb
mov
cmp
pop
add
int3
mov
pop
aaa
test
pop
outsb
cltd
mov
push
inc
push
jno
lock
mov
mov
sbb
lods
je
ror
xor
pop
dec
sar
aas
dec
mov
std
incb
lods
inc
das
push
mov
repnz
or
insl
dec
lods
fmuls
inc
nop
mov
mov
mov
or
nop
icebp
xlat
mov
movsl
das
inc
xchg
xor
dec
dec
adcl
and
out
mov
test
pop
mov
inc
or
add
aas
lods
imul
mov
mov
and
mov
rol
sub
shlb
sar
in
jnp
mov
sbb
aad
xor
adc
and
lret
or
adc
cmp
and
pusha
or
xchg
sbb
andb
xchg
ja
mov
stc
fmul
popf
pop
andb
mov
jns
inc
in
test
sbb
lahf
daa
add
sub
iret
in
call
insb
xor
mov
mov
mov
fiaddl
sub
fld
and
or
jnp
dec
xlat
bound
mov
mov
popa
lret
int
pop
shl
out
in
cmp
dec
pop
lods
xor
rolb
in
in
and
aam
js
out
das
add
pop
sbb
and
pop
push
imul
movsl
mov
rorl
out
sbb
in
jb
fbstp
add
cli
sub
lds
or
cmp
pop
cmpsl
inc
arpl
push
stos
and
mov
dec
dec
inc
in
adcb
adc
fwait
ds
push
dec
roll
cmp
inc
dec
lock
cmp
arpl
pushf
in
outsb
ds
add
loop
mov
loopne
addr16
mov
jl
and
js
je
dec
ljmp
jle
xor
movsb
std
sbb
push
cmp
cmp
js
pushf
pop
mov
int3
sub
loop
cmp
jb
stc
mov
xor
cmp
mov
jl
dec
add
push
iret
icebp
popl
rolb
mov
bound
loop
movsl
fsubrl
das
push
test
mov
in
push
sbb
std
les
ljmp
shlb
dec
movsb
or
ds
neg
mov
mov
pop
adc
testb
lea
xchg
test
sbb
into
je
filds
push
arpl
loopne
je
fs
cmp
lods
xor
mov
jno
jnp
in
or
cmp
mov
nop
mov
adc
jg
xchg
push
cli
sti
addr16
push
mov
pop
fs
mov
dec
and
add
jg
jne
push
push
aaa
sbbb
shrb
mov
or
inc
xchg
leave
fildl
dec
popf
rcr
mov
lods
sub
aad
sbb
iret
fwait
add
add
test
xor
mov
dec
add
lcall
icebp
pop
cmp
mov
push
call
pop
rclb
lods
sahf
lcall
enter
jno
cmp
pop
mov
mov
test
sbb
arpl
push
out
xor
shl
jmp
push
insb
loop
icebp
mov
xor
sarb
fdivs
mov
loope
jge
add
outsl
adc
sub
enter
movsb
mov
loop
pop
aaa
cmp
mov
jp
mov
mov
fstp
call
sbb
ss
mov
or
cmp
imul
fldl
cwtl
add
xchg
ficomps
pop
std
gs
pmaxsw
xchg
push
sti
std
add
push
scas
pop
cmpsl
push
xchg
mov
mov
lcall
jecxz
inc
mov
mov
js
cmp
pop
sub
jmp
add
int3
data16
fdivl
pop
rcrl
lcall
in
mov
lock
adc
cmp
iret
push
cmp
ja
test
lea
pushf
jle
add
mov
adc
sub
pop
jg
jb
add
cmc
jl
add
jge
out
add
pop
mov
stos
sbb
mov
push
add
cmpsl
xor
popa
mov
sbb
lods
jecxz
nop
pop
xchg
pop
xor
les
scas
cmpsb
mov
and
cld
xor
rcrb
repz
pop
fildll
sbb
jge
fldenv
leave
lahf
leave
faddl
lcall
nop
mov
cwtl
outsb
fdivl
inc
pop
xor
cmp
out
pushf
ja
gs
mov
in
dec
or
mov
out
pop
push
loop
lods
loopne
popf
das
lahf
add
mov
sub
xchg
fcoml
sbb
in
arpl
fistpll
aaa
addl
adc
fstpl
gs
add
addr16
lahf
push
mov
inc
insb
ret
inc
or
inc
jl
sbb
leave
ss
add
pop
test
arpl
fidivrs
mov
push
sub
je
jg
daa
or
fs
sti
scas
inc
lcall
mov
jno
cmpsl
icebp
shlb
imul
jp
pop
sbb
xor
test
push
add
shll
and
movsb
adcl
into
fst
rcrb
ret
fwait
jl
mov
push
hlt
movsl
or
out
imul
flds
fnstenv
add
ds
cmc
loopne
mov
fsubrl
mov
xchg
scas
jns
cmc
push
push
ret
fst
cmp
xchg
or
xchg
mov
cld
or
fisubs
inc
aam
add
dec
pop
stc
addb
inc
ljmp
jnp
test
stos
and
fwait
stos
adc
sarl
scas
out
aad
xchg
sbb
xlat
leave
adc
stos
push
mov
imul
movsl
sub
add
rclb
add
fwait
test
imul
je
pusha
cmpsl
sub
mov
mov
jmp
stc
enter
dec
int3
and
test
int
inc
aad
sbb
sbb
sarb
add
loop
dec
icebp
push
in
jle
mov
ss
lods
jnp
mov
pop
in
cld
add
adcb
movb
xchg
call
in
mov
lcall
push
std
dec
jmp
pop
mov
xor
pop
and
sub
cs
test
pop
fmuls
repnz
cs
cmp
xchg
fstps
sbb
pop
jnp
loop
push
xchg
insl
movsb
adc
push
loope
pop
jae
push
shrl
mov
icebp
out
cmp
and
ficompl
in
cmp
div
cmpsb
in
int
mov
adc
mov
ds
jle
sbb
mul
test
mov
sbb
out
xor
cld
fistps
mov
incl
xchg
out
mov
mov
jo
pop
pop
jnp
aaa
mov
shlb
jle
lcall
cli
ljmp
mov
jl
jg
and
icebp
mov
fmuls
stos
lock
lods
mov
insb
dec
sbb
lds
xor
cltd
pop
add
shrb
mov
cmp
jmp
mov
shlb
sub
push
push
mov
push
arpl
movsb
test
pop
in
out
jbe
shr
add
lea
std
dec
loop
jns
js
mov
loop
push
inc
cli
call
lods
shll
adc
xor
fisubl
pop
js
and
sbb
mov
push
sbb
ret
mov
ret
push
mov
nop
xchg
xchg
or
and
fstpl
ret
mov
pusha
xor
repz
pop
popa
inc
add
ret
call
subb
in
adc
clc
jo
test
enter
cmp
pop
cmc
dec
cwtl
movsl
mov
loope
hlt
mov
ja
xchg
and
sub
xchg
xor
sbb
pop
xchg
pop
mov
call
cltd
sbb
inc
jmp
pop
sbb
xchg
movsl
incb
fmul
xor
orb
ja
test
jp
lahf
rorl
mov
dec
mov
pop
jae
jno
mov
inc
xor
popf
data16
add
aad
sub
pusha
ja
ljmp
push
jl
nop
xor
es
mov
add
nopl
push
pop
fldenv
mov
cltd
sbb
push
xchg
mov
gs
push
rep
mov
jge
das
xor
mov
cmp
cmp
inc
jb
sti
dec
xlat
and
sbb
in
push
dec
cmp
dec
dec
fisttps
subb
pop
mov
mov
sbb
or
cmp
and
and
mov
jns
jnp
mov
add
and
and
in
push
xor
imul
cld
sub
ds
sbb
je
inc
dec
idiv
mov
in
lds
add
test
jmp
stc
and
xchg
ret
and
xchg
adc
fmul
dec
das
fisubl
ja
repnz
dec
loope
push
inc
sub
xchg
test
or
ret
mov
push
mov
sbbl
rolb
mov
jb
add
into
fstl
js
in
mov
data16
push
mov
cmp
lcall
mov
mov
add
sbb
cld
insl
ljmp
dec
imul
cmp
pop
stos
out
imul
or
negl
jle
lock
lock
iret
jns
roll
arpl
nop
push
xor
adcl
or
lock
loope
pop
les
test
shll
ja
xchg
xchg
or
sub
xlat
in
push
test
das
ret
leave
mov
lods
xchg
xchg
aaa
shrl
stos
leave
and
mov
add
mov
xor
lods
inc
pop
outsb
push
mov
mov
jae
stc
call
cmp
xchg
test
int
mov
test
enter
sbb
stos
fdivs
jl
jle
mov
es
add
or
cmp
cmp
in
pop
pop
dec
jno
stc
jp
jmp
cmp
xor
and
clc
lcall
popf
ljmp
add
or
fstps
imul
lret
or
xlat
push
xor
dec
into
mov
and
jnp
dec
std
popl
xchg
testb
rorl
push
ret
push
iret
out
out
lcall
cli
mov
pop
out
or
adc
ret
jmp
jb
je
jb
xchg
jg
cmpsb
repz
ss
lea
roll
xlat
les
ss
adc
fmuls
aam
mov
cmc
and
les
adc
add
punpckhwd
stos
jecxz
idiv
iret
mov
mov
nop
xor
mov
pop
adc
mov
xchg
xor
adc
rol
push
in
icebp
es
popa
push
test
or
aas
int
fstps
push
das
lds
int3
and
fsubrs
dec
adc
mov
popa
shrl
ret
daa
jmp
ret
add
shrb
jle
cld
fcmovnbe
sbb
xchg
xchg
cmp
xor
pop
sub
adc
nop
or
pop
sbb
arpl
xlat
ret
mov
mov
cli
and
das
movsl
or
pop
iret
mov
ret
fsubrp
mov
and
xchg
inc
cltd
mov
outsl
pop
jge
es
adc
mov
loop
push
pushf
ret
iret
pop
lock
stos
aas
sub
or
pop
pop
loope
sahf
mov
mov
lret
adc
lock
add
fisttps
jecxz
cmp
sub
xlat
mov
sbb
xchg
jo
lea
loopne,pn
cmp
or
mov
les
or
outsl
lcall
shrb
ds
mov
das
test
shrl
les
adc
add
fwait
in
lods
jecxz
inc
xchg
ret
out
jae
cs
xchg
xlat
lea
push
inc
push
dec
in
push
push
imul
lahf
int
mov
pop
push
daa
mov
and
xchg
push
dec
daa
adc
nop
pop
cmp
lods
mov
dec
xchg
and
mov
lods
xor
adc
xchg
xlat
mov
cmp
jbe
insb
mov
pop
ficoml
lret
je
jno
push
xchg
jno
stc
xor
in
leave
divl
adc
mov
cmp
jae
test
sti
std
xchg
arpl
xor
sub
push
stos
push
xor
insl
mov
mov
lods
and
push
std
test
sti
sbb
testl
dec
lods
jge
shll
cmpsl
pop
xchg
pop
outsb
fcoml
les
mov
cmc
outsb
jg
ja
and
loope
sbb
xchg
loop
shll
mov
fidivs
cltd
inc
jg
pcmpgtd
ljmp
lock
mov
sub
out
rorb
push
sbb
loope
add
jbe
arpl
or
push
test
pop
in
mov
repnz
mov
cmp
gs
je
and
out
adc
jle
enter
insl
adc
jae
pushf
pop
sub
mov
loopne
fsubr
sahf
mov
js
jmp
dec
jno
cmp
cmpsb
and
ds
mov
aad
idivl
add
mov
cs
and
sbb
or
and
dec
std
xchg
inc
cmp
aad
inc
movsb
mov
movsl
shrb
sti
out
out
ret
adc
mov
xchg
sti
cmp
movsb
push
dec
xor
pusha
push
iret
in
push
or
jns
and
mov
mov
stos
cmpsb
aaa
mov
jp
scas
add
sub
mov
pop
aas
dec
popa
and
pop
push
ljmp
adc
inc
or
mov
mov
push
out
arpl
gs
sbb
int
imul
ret
je
mov
pop
push
pop
dec
mov
aam
sahf
cmp
jne
cs
xchg
jne
and
scas
mov
and
clc
arpl
or
add
out
inc
jmp
mov
xchg
cmpsl
lods
jg
mov
or
cmp
pop
mov
xor
int
les
dec
fdivrs
outsb
enter
ror
mov
sbb
inc
hlt
jbe
xor
std
int
push
push
jl
xchg
lret
pop
inc
jge
add
test
aam
or
pop
sbb
sbb
ja
fsubp
push
sub
dec
sti
call
push
in
sbb
mov
aas
mov
xchg
nop
jle
push
push
mov
dec
add
add
pop
mov
das
std
ljmp
hlt
cmp
popf
add
popa
push
movsb
xchg
mov
dec
stos
mov
jg
ds
dec
mov
ja
cmpsl
push
pinsrw
cmc
xchg
xchg
negb
scas
sub
scas
xchg
addr16
cmp
mov
jp
cld
in
xchg
in
pop
jmp
sbb
mov
ds
aam
cmpsl
loope
sbb
mov
xchg
adc
cmc
rclb
jo
insl
push
jno
mov
sbb
sbb
movsb
test
xchg
pushf
ljmp
dec
jp
stos
cs
sarb
addb
push
sub
mov
out
test
insl
fidivrl
mov
adc
sub
bound
arpl
jg
test
push
int
or
test
cltd
xor
cmp
push
scas
ret
lret
icebp
sbb
mov
repnz
fcompl
jnp
inc
mov
jmp
popl
aad
lods
mov
push
out
add
popa
mov
mov
jnp
incb
push
cld
test
iret
addl
daa
adc
call
sub
jl
mov
xchg
jp
lods
repnz
sahf
pop
or
enter
xchg
and
dec
adc
adc
sbbl
scas
push
and
push
add
call
xor
xlat
mov
repnz
test
jno
orb
xchg
enter
pop
arpl
jns
cli
movsl
and
adc
ret
mov
fcomp
push
mov
outsl
xchg
aas
add
ficoms
pop
mov
enter
sbb
mov
xchg
cmc
inc
xor
inc
in
shll
incl
in
outsb
mov
popa
aaa
mov
add
and
add
cmc
sbb
shrl
sub
jns
das
ljmp
push
push
ret
dec
push
clc
mov
divl
and
mov
jbe
sbb
iret
sub
shrl
pop
fldl
xor
setl
scas
leave
mov
mov
decl
xchg
pop
xchg
push
inc
ja
or
cmpsb
cs
sbb
sbb
rcrb
fs
call
mov
cmp
adc
dec
mov
dec
shlb
dec
adc
imul
push
jbe
mov
push
ja
fistpl
sub
fcoms
aaa
push
mov
inc
or
add
sub
sahf
test
pop
leave
lods
ja
pop
mov
inc
js
mov
sub
pop
sub
test
jno
in
cmp
mov
incb
mov
cmpsb
lock
jle
or
lret
xchg
shll
adc
lret
pop
and
and
lock
fs
lret
mov
cmp
lret
test
mov
cmp
adc
data16
jge
scas
out
pop
push
outsl
pop
inc
into
std
adc
sahf
iret
enter
mov
or
fcomps
push
in
aad
push
stc
push
mov
push
push
ljmp
sub
stos
mov
inc
cwtl
jg
xchg
imul
sar
pop
jmp
mov
pand
sub
shrb
or
pop
adc
jbe
ljmp
jo
arpl
aam
cwtl
scas
test
call
aad
loop
mov
xchg
stos
dec
test
cmc
sub
or
push
cltd
cmpsb
aas
call
aad
cmp
addl
jmp
iret
cmp
pop
out
add
xchg
movsl
jge
fmuls
dec
and
sbb
dec
iret
lods
xor
jge
and
enter
mov
lock
fwait
cmp
adc
std
cs
and
decl
dec
gs
or
push
sub
mov
jp
nop
and
cwtl
mov
in
mov
inc
cmp
mov
jo
jno
dec
adc
adcb
imul
iret
cmpb
shrb
mov
jo
ret
iret
push
movq
mov
cmpsb
aas
push
jge
data16
pop
mov
sbbb
adc
rorb
push
jmp
pop
and
mov
call
sti
arpl
jle
dec
pop
out
or
push
lret
sbb
pop
mov
or
ds
pushf
popa
mov
js
movsb
and
push
mov
inc
xor
push
mov
inc
push
aas
inc
outsl
pop
adc
push
ja
jmp
sbb
jge
jge
cld
ret
cli
imul
je
js
mov
cmc
push
scas
ret
mov
and
and
test
xchg
test
xchg
adc
je
and
adc
clc
push
cmp
pop
or
decl
cmpsl
mov
or
push
out
in
jo
stos
add
dec
aam
add
push
lea
mov
rcrl
lret
dec
xor
bound
ds
mov
es
mov
in
std
outsb
sub
push
out
or
add
bound
jp
dec
gs
jle
hlt
movsl
adc
dec
lock
repz
in
xor
xlat
push
add
add
mov
pop
jne
lock
cld
out
test
inc
fstl
mov
mov
hlt
les
lock
lock
mov
cmc
icebp
cmp
sbb
sub
xchg
or
push
pop
in
test
xchg
sub
lock
mov
xor
jle
les
xchg
fwait
popf
int3
sbb
pop
sbb
dec
imul
fs
add
push
mov
movsl
addl
mov
push
fldt
aam
imul
lock
and
push
inc
ret
pop
loope
fs
lret
imul
xor
lods
and
movsb
aaa
sub
dec
cs
testl
adcb
pusha
xchg
int
sbb
pop
outsb
mov
adc
mov
or
les
popf
pop
cmp
addr16
mov
mov
das
or
mov
and
arpl
das
pop
in
stc
lods
outsl
iret
fs
fcomip
jb
inc
add
adc
xchg
mov
mov
mov
int
xor
mov
cld
dec
mov
out
jg
and
in
aad
add
or
pop
mov
fcomp
mov
std
xchg
movl
movsl
jb
popf
stc
out
js
in
cld
mov
dec
or
cmp
popl
stc
mov
data16
push
xlat
jae
test
je
popf
lock
divl
xchg
aaa
pop
add
out
jle
frstor
adc
mov
std
push
orb
inc
jno
mov
mov
stc
cmp
cli
leave
adc
test
addl
negl
or
ja
pop
dec
rolb
arpl
cs
sbb
clc
dec
jo
xlat
mov
div
fdivrl
inc
leave
ljmp
fsubrs
push
mov
add
sti
xor
mov
mov
sbb
pushf
popa
in
leave
jge
loopne
xlat
insl
push
and
test
ja
push
fnstenv
xorb
jp
mov
movsl
lahf
ja
xorb
xor
ds
fstps
dec
icebp
mov
sbb
sub
insb
pop
and
pop
mov
lret
data16
and
test
popl
jecxz
dec
add
scas
cmp
xchg
sbb
fistpl
outsb
fisttpl
enter
adc
shl
addb
push
shll
add
sub
jecxz
and
mov
or
jg
pop
push
xor
dec
mov
pcmpgtw
push
mov
roll
div
xchg
fistpll
jmp
pop
lods
add
cmpb
dec
mov
out
sarb
out
scas
imul
xor
add
xchg
and
mov
jge
fiadds
push
cmp
mov
adc
sub
in
jns
pop
stc
nop
jmp
pop
nop
or
mov
lea
mov
xchg
and
mov
int
aaa
inc
arpl
rol
push
mov
dec
lea
aam
pop
sbb
adc
lcall
test
or
or
mov
in
cwtl
out
mov
xchg
andl
xchg
push
xchg
imul
mov
add
inc
adc
inc
inc
and
jb
out
push
xor
mov
dec
mov
xchg
push
in
lret
rol
lret
test
stos
fdivl
fs
cmpsl
xor
movsl
test
cld
ja
movsb
test
sub
cmp
and
cmp
and
or
imul
jo
shrl
daa
fxch
adc
out
jmp
xchg
mov
rclb
andb
call
in
addr16
add
jo
test
or
test
sub
into
inc
fldcw
cmp
dec
cld
cwtl
fmull
dec
es
sti
data16
xchg
incb
loopne
std
cmpsb
cmp
inc
xor
inc
mov
in
stc
into
cld
cmc
xor
nop
adc
cld
in
adc
xor
or
sub
dec
adc
or
and
mov
or
sahf
or
and
cld
or
mov
jnp
test
xor
fucom
mov
stc
aaa
push
or
or
mov
xlat
jno
ficoml
pop
lcall
dec
imul
jno
jge
pop
inc
daa
mov
sahf
int
outsl
mov
sub
sub
rcrb
fadd
loopne
mov
rcr
pusha
pop
scas
dec
insb
adcl
jp
xchg
adc
cmc
dec
sub
sbb
pusha
rclb
cwtl
orl
sbb
adc
jmp
mov
adc
dec
sbb
push
mov
mov
data16
inc
mov
pop
ret
in
rorl
sarl
sub
push
and
loope,pn
scas
shll
bound
dec
add
rclb
xor
rcll
mov
push
in
cli
repz
jno
cs
shll
shll
xchg
sbb
ds
sub
lahf
pop
cmp
iret
adc
inc
push
add
pop
fs
pop
mov
jp
iret
ja
lcall
clc
jle
stos
sub
sub
dec
mov
add
aad
inc
push
movsb
or
cmpsb
je
push
pop
stos
or
add
and
push
jl
movsl
push
jmp
mov
ret
push
hlt
cmp
inc
push
ffreep
sub
mov
lea
std
push
sbb
repz
les
or
add
lock
aad
jo
ffreep
pop
sbbl
incb
dec
popl
jecxz
add
jmp
cmpsb
in
lret
fsubs
shlb
aad
ss
xor
scas
repz
orb
push
jbe
nop
xchg
mov
adc
cmp
fadd
test
arpl
jne
testb
aas
sub
push
iret
jg
pushf
lret
push
push
cmpsb
mov
or
mov
pop
bound
pop
cltd
clc
push
xchg
push
cmp
stos
or
mov
dec
shrl
stc
and
scas
push
insb
xchg
out
cmpb
loope
insl
jge
inc
mov
pop
or
loop
aas
test
jl
pop
sub
cli
xor
btc
inc
xlat
js
lea
mov
dec
test
data16
push
popa
xor
pop
xchg
mov
sub
arpl
popa
cmpsl
add
rorl
xor
popa
std
pusha
mov
ret
push
or
lahf
inc
sub
bound
sub
adc
jns
add
mov
or
into
add
dec
dec
out
dec
mov
rol
pop
cmp
daa
int3
or
xchg
or
popa
mov
popf
push
int3
ljmp
ja
or
nop
iret
dec
repnz
nop
xor
cmp
adc
fistl
pusha
cmpsl
mov
stos
ucomiss
imul
mov
test
or
add
imul
jmp
sbb
repnz
dec
or
daa
leave
cmc
out
aam
out
fstpt
or
testb
push
imul
into
pop
mov
pusha
repnz
push
mov
test
clc
cmp
lods
push
sbb
xchg
inc
mov
outsb
xchg
xchg
sub
adc
adc
shll
in
cmp
mov
jle
jae
loop
add
and
mov
aad
push
xchg
cmpsl
shlb
xchg
fs
pop
rcrl
movsl
ja
test
push
xor
outsb
dec
mov
jg
sahf
cmp
les
adc
dec
ret
lods
fcoml
out
ja
cs
and
in
adc
test
xlat
push
sub
adc
cltd
fistpl
cwtl
pop
sbb
rcrb
cli
ljmp
mov
imul
in
push
cmpsb
push
xchg
mov
test
loope
shlb
in
jae
dec
stos
mov
xchg
lock
fs
adc
jb
out
jmp
mov
jo
std
test
cmp
push
sub
add
inc
jp
fwait
push
inc
mov
loope
bnd
xor
adc
mov
or
out
cli
xor
jne
popa
jnp
jg
das
sbb
aaa
and
cmp
movsl
mov
xchg
fucompp
mov
sub
jae
ss
mov
shlb
scas
jmp
push
add
or
shll
sbb
cmp
popa
lods
xlat
cmp
xchg
stc
jp
aad
mov
mov
repz
call
fwait
cld
and
sbb
jg
xor
mov
mov
cmc
mov
lods
rol
push
inc
pop
or
or
xchg
xchg
cmp
cmp
xorb
pop
ljmp
push
jp
mov
cli
stos
and
pop
push
pop
jmp
push
sahf
sahf
pop
gs
ljmp
xor
mov
fistpl
das
adc
nop
and
xchg
push
cld
mov
and
ret
lcall
fdivl
jno
cmp
pop
dec
outsl
mov
or
cmp
lock
xor
jmp
jb
add
mov
cld
aam
hlt
dec
iret
js
scas
mov
adc
lahf
pop
mov
jb
lea
loopne
popf
mov
xlat
lock
cld
mov
pop
leave
fwait
jmp
mov
and
jmp
push
notb
je
iret
fstps
ja
in
cmp
jb
cwtl
pop
stc
out
mov
xlat
cmp
cmp
mov
outsb
pop
sbb
adc
inc
inc
pop
push
lock
mov
pushl
push
push
xchg
loopne
inc
cmp
gs
shlb
xchg
test
dec
mov
jmp
push
ret
clc
adc
mov
fadd
pop
push
push
sub
xlat
inc
in
mov
divl
mov
test
adc
out
fwait
xchg
cmp
xchg
and
push
mov
sub
lcall
add
or
andl
lahf
ds
int3
cmp
lcall
notl
fimuls
sub
pop
jp
frstor
xchg
or
sbb
sahf
or
ljmp
sub
jp
sti
sub
and
xor
movsl
mov
or
xor
xor
push
test
sub
inc
and
pop
pop
and
xchg
adc
movsb
add
lret
fcoml
xor
sbb
stos
iret
sub
addr16
jle
jmp
cmp
cwtl
pop
fisubs
mov
cmpsl
movsb
jp
add
jle
dec
xchg
in
xchg
add
jnp
mov
mov
adc
mov
push
adc
jl
arpl
xchg
and
dec
mov
idiv
popa
jl
cwtl
adc
icebp
dec
iret
mov
or
fsubrs
xor
and
scas
imul
push
std
add
sub
or
mov
aad
xor
mov
push
inc
inc
ss
lcall
fcmovbe
sub
in
adc
adc
xorl
aas
push
in
sbb
lds
xlat
into
sub
mov
dec
jb
sbb
pusha
aad
add
dec
and
ret
loopne
stc
mov
int
pop
add
sub
leave
aaa
gs
sarl
leave
push
mov
fwait
mov
add
jae
mov
lds
mov
sbb
push
test
xchg
jnp
or
arpl
sbb
cmp
mov
ljmp
mov
into
xor
sub
pop
add
jns
daa
add
xor
stos
adc
divb
dec
ds
cli
sub
xor
inc
pop
mov
jns
dec
test
popa
shll
jnp
dec
outsb
sbb
push
push
arpl
shlb
lahf
or
cld
stos
mov
jne
inc
pusha
fwait
scas
aam
xchg
xchg
data16
pop
xchg
repz
xor
mov
xchg
xchg
outsb
add
popf
int
call
jne
es
ja
shlb
jne
mov
lahf
insl
mov
sub
jmp
and
jns
cwtl
fwait
dec
into
add
pop
in
xchg
into
sbb
mov
bound
xchg
jmp
xor
aam
sbb
inc
rcrl
mov
adc
pop
dec
mov
mov
loop
fdivrs
mov
dec
push
out
lods
popf
sbb
lcall
mov
sahf
lret
sbb
in
movl
mov
sahf
xchg
jmp
inc
addr16
nop
loop
and
and
mov
xchg
out
enter
cmp
push
adc
fnsave
mov
cltd
fcmovnu
push
adc
mov
cmp
sub
xor
cmp
addr16
mov
xchg
rcrl
fnstsw
je
in
notb
inc
sti
sbb
xchg
add
mov
out
jbe
pop
xor
mov
pop
xchg
mov
fadd
aas
insl
das
inc
xchg
stos
into
cmp
imull
inc
add
mov
cmp
inc
or
clc
jge
dec
mov
scas
xchg
dec
jmp
and
push
shll
jb
aas
mov
add
push
cltd
inc
add
dec
jae
cmp
dec
adc
cmp
repz
jns
lock
movsl
adc
cmp
xchg
lock
push
aas
movsb
rorl
je
dec
xor
fimuls
shrb
in
adc
and
push
mov
jnp
rcl
ror
in
pop
push
sbb
leave
jp
ja
sbb
pop
mov
out
lahf
push
pop
popf
cmp
xchg
sti
mov
dec
push
imul
xchg
inc
out
lock
dec
push
and
and
pop
in
push
mov
inc
xor
repz
in
xchg
dec
pop
cmp
adc
int
mov
into
scas
fs
les
into
mov
or
test
xchg
or
loopne
mov
sub
std
cli
mov
inc
jae
sbb
repz
lahf
and
mov
aaa
sar
cmp
fcomip
xlat
es
ja
cmp
ss
pop
scas
shrb
imul
in
add
or
in
push
sub
mov
rolb
inc
xor
mov
hlt
nop
por
or
jle
adc
xchg
hlt
mov
std
popf
in
test
push
mov
out
mov
in
xlat
or
adc
scas
xorl
mov
fidivl
jecxz
sbb
stos
xchg
into
cltd
loopne
push
js
or
test
scas
cmpsl
shlb
mov
mov
inc
xor
push
or
pop
sub
sahf
dec
adc
das
adc
push
adc
xchg
push
jae
and
sbb
dec
nop
pop
data16
and
push
lods
dec
mov
adcl
inc
loopne
xchg
ljmp
sub
dec
mov
int
xchg
out
aaa
test
jl
popf
add
push
jnp
cmp
adc
cltd
pushf
inc
add
push
mov
ds
push
sbb
or
mov
lret
sahf
adcl
jo
fimuls
mov
test
scas
fwait
jge
mov
stos
xchg
mov
nop
popa
in
mov
aam
jne
or
xchg
push
repz
dec
cli
cmp
je
or
sbb
mov
mov
push
clc
mov
add
pop
and
fadds
inc
popl
cmpl
lods
and
fldpi
in
iret
push
dec
stc
sti
xchg
push
add
bnd
xor
cmp
pushf
lock
lahf
ja
cmp
jne
repz
push
sub
mov
pop
push
das
lcall
or
xchg
jecxz
or
outsb
inc
dec
ficompl
out
pop
les
fs
sub
les
add
js
mov
adc
jns
mov
mov
loop
mov
fisubl
or
pop
nop
pop
aam
outsb
pop
mov
add
jg
cld
jmp
inc
xchg
push
and
xor
fs
into
and
xor
push
les
sub
in
xchg
aas
xor
je
mulb
rorb
cld
push
cmp
nop
pusha
push
fidivs
imul
popf
ljmp
popf
and
or
pop
sbb
notb
and
mov
ficomps
add
hlt
inc
push
adc
sub
mov
das
jb
cmc
shr
add
sub
inc
insl
jmp
lock
roll
adc
xor
inc
xchg
adc
fsubr
push
mov
scas
ljmp
aaa
cld
sbb
xchg
shlb
sbb
aaa
mov
stos
xor
jecxz
push
imul
jg
cld
lods
imul
xchg
jmp
jns
or
ficoml
insb
test
aad
in
xor
cmp
xchg
mov
in
jne
mov
out
mov
mov
leave
add
aaa
xchg
orb
rorb
in
lcall
sub
stos
inc
add
imul
sub
adc
test
test
and
mov
std
lock
inc
and
pop
jp
sub
mov
js
sub
call
pop
cli
cmp
jne
push
enter
cmp
pop
arpl
adc
xor
out
sub
cmp
int
fimuls
loop
xchg
jbe
movsb
inc
xchg
cmp
stos
decb
decb
adc
cmp
sbb
xchg
sub
mov
cli
pop
cmp
lds
push
inc
daa
xlat
mov
ja
imul
dec
insb
sbb
pop
lea
in
mov
xchg
cmp
xrelease
dec
fs
scas
into
mov
add
jno
cmpsl
and
jmp
test
or
push
push
rorb
inc
in
outsb
in
pop
mov
sbb
dec
lea
mov
xor
cld
mov
pop
xor
cltd
sbb
faddl
xchg
shlb
scas
mov
cwtl
hlt
add
cs
xor
sbb
inc
imul
imul
leave
mov
pop
ds
andl
adc
xchg
or
ljmp
sbb
dec
xchg
pop
inc
and
add
lods
lcall
adc
sti
xchg
cld
push
inc
xchg
les
cs
lret
push
insl
mov
mov
icebp
cmp
sahf
aam
stc
out
dec
jl
popa
iret
lds
pop
pop
mov
fdivs
aaa
inc
push
stos
push
fcoml
cmpps
jns
xor
in
adc
inc
js
cmpl
xchg
or
mov
cmp
mov
ret
pop
lcall
scas
push
data16
insl
sub
pop
push
sub
mov
push
lret
add
or
test
sti
call
popa
subl
and
sahf
jp
in
cmc
sbb
push
pushf
pusha
mov
xchg
inc
xchg
stos
scas
fistpl
popf
out
push
cmp
push
xchg
dec
incb
das
pushf
test
gs
mov
mov
jo
push
add
inc
fidivrl
fwait
shll
adc
movsb
hlt
mov
ret
test
out
cli
jae
into
addr16
inc
sbb
pop
es
imul
mov
fxam
mov
xor
test
push
add
jg
jmp
jb
push
jle
call
sub
clc
pusha
cmp
or
xchg
dec
sti
add
adc
repnz
into
jecxz
push
les
clc
aad
mov
xchg
lods
mov
addl
aaa
shll
movsb
and
sbb
fists
push
adc
cltd
rclb
sub
lea
mov
mov
push
jp
bound
pop
shrb
je
sub
and
inc
clts
xor
or
js
mov
push
jmp
sub
jmp
lcall
pop
idiv
icebp
sbb
cmc
fdivrl
mov
cmp
push
cmp
or
xor
je
shll
add
aam
inc
shlb
sbb
je
stos
and
stos
mov
ja
xor
xchg
add
pushf
sub
and
pop
adc
test
pop
test
cmp
aam
mov
or
inc
pop
jg
xchg
or
bound
mov
push
xchg
ss
inc
mov
sub
sarl
and
inc
inc
jge
jl
and
and
in
aaa
jecxz
xor
inc
popf
or
inc
push
lods
dec
movsl
or
inc
ja
inc
fisubrl
adc
addr16
jle
sub
jne
ror
mov
orl
shrb
addr16
cld
sbb
movsb
pop
aad
and
jg
in
les
lret
das
daa
lods
loope
add
cld
loopne
cld
inc
and
jb
leave
jno
sub
cli
aam
add
popf
xchg
xor
leave
mov
pop
push
imul
pop
fidivrl
dec
adc
add
pop
dec
push
push
dec
mov
pop
cwtl
mull
out
dec
in
enter
push
popf
imul
ja
aaa
ja
pop
pop
adc
jge
xchg
pop
sti
sbb
rorb
std
movsl
push
out
pop
lret
testb
ss
ret
add
xchg
jge
xchg
loope
fcompp
js
adc
cmp
mov
mov
imul
jnp
and
ljmp
jns
ret
repnz
jne
lret
mov
call
icebp
mov
xchg
jae
jb
ss
and
pop
movb
neg
imul
pop
dec
adc
cli
aaa
pop
in
cmp
push
push
xor
cmpsl
mov
xor
addr16
mov
andb
insb
mov
and
mov
je
sub
inc
mov
cld
loop
adc
and
mov
test
fdivs
inc
add
mov
jbe
push
xor
cmp
adc
xchg
stos
iret
adc
clc
push
lret
xchg
jae
clc
sbb
xchg
into
xchg
mov
cli
in
jbe
negl
fisubl
not
loopne
ja
cltd
popa
lds
dec
push
cmp
movsl
inc
mov
mov
mov
xor
jg
pop
aas
aas
daa
aad
inc
stos
data16
jns
cmc
adcl
push
fstl
add
mov
out
sahf
push
outsb
dec
mov
js
stos
dec
in
dec
jb
add
cwtl
push
mov
pop
add
stos
xchg
aaa
rcrl
imul
pop
cmp
je
push
sbb
iret
sub
push
push
sub
mov
scas
popf
je
and
pop
roll
sbb
in
cltd
repz
add
mov
mov
or
mov
mov
mov
or
fldt
and
fsubp
jbe
icebp
lahf
outsb
pop
push
lcall
cmpsl
xor
mov
ss
mov
add
fxch
sbb
or
rcr
jmp
adcl
jne
pop
repz
jns
mov
xor
sbb
in
popa
jns
mov
inc
aad
aaa
test
fwait
xlat
cmc
cmpsl
in
jmp
pop
and
xor
and
mov
cmp
xchg
fsub
loop
and
xor
pop
add
jg
mov
aas
dec
imulb
scas
pop
push
arpl
jg
adc
jecxz
dec
fwait
and
orb
inc
insl
stc
xchg
lcall
imul
mov
push
outsl
sub
lods
int
xchg
mulb
mov
iret
xor
mov
and
cli
arpl
pop
bound
pop
jbe
shlb
incl
dec
and
cmp
nop
mov
fnstenv
stos
xchg
aad
mov
push
ljmp
jp
rcrl
sub
int
sub
xchg
mov
dec
jmp
add
fcmovbe
adc
fcos
sbb
std
jns
mov
inc
insl
dec
je
sbb
push
inc
mov
and
add
cmp
xchg
xorb
pusha
mov
jns
sub
sub
fidivs
ret
jecxz
popf
jmp
xor
xchg
stos
sub
adc
int
xchg
arpl
addr16
and
jbe
fsubr
mov
mov
adc
aas
ret
jns
fistpl
scas
and
fsubr
outsl
clc
or
movb
add
sub
push
xor
test
mov
sbb
in
je
jns
cmc
inc
test
push
pop
sub
hlt
les
fs
gs
cwtl
pop
add
leave
outsl
jno
sbb
icebp
xchg
inc
outsb
hlt
fwait
out
pushf
push
sti
cmp
js
data16
pop
popf
cmpsl
and
popf
loope
sbb
mov
movsb
mov
xchg
dec
jp
cwtl
icebp
imul
jns
xorb
push
xorl
xor
or
pusha
push
xchg
mov
rolb
jo
int
add
sti
outsb
mov
das
mov
jecxz
aam
test
leave
dec
fs
xchg
adc
push
xchg
or
xor
xor
push
cs
add
roll
lahf
sub
mov
cmp
and
jg
lahf
sub
mov
rcl
jno
nop
dec
mov
iret
rcr
push
xor
sbb
jge
pushf
xchg
repnz
jns,pt
mov
push
data16
out
in
pop
push
andb
add
loopne
push
test
mov
adc
adcb
or
add
mov
push
adc
rcll
test
es
loope
das
testl
cmp
push
xchg
xchg
and
sub
pushf
xor
push
les
cli
loope
pop
mov
push
sub
stos
inc
or
and
test
push
test
aas
push
insl
sub
sbb
lods
adc
dec
pop
mov
outsl
icebp
adc
fmuls
cmp
pop
inc
scas
fisubl
pop
pop
mov
pop
popa
mov
mov
mov
sbb
loopne
nop
popf
repnz
mov
std
mov
inc
push
inc
push
inc
and
jecxz
fcoml
push
ret
stc
adcl
mov
call
or
icebp
icebp
in
rolb
ror
pop
out
test
xor
mov
rorb
xor
outsl
jg
cmp
dec
add
xlat
push
mov
push
cmp
cmc
ss
sbb
repz
iret
mov
cmp
fcmovbe
seta
nop
cmp
sub
mov
cltd
mov
pop
mov
jle
cli
jno
xchg
insl
bound
in
jns
xor
cmpsl
inc
add
insl
xchg
addb
jb
lea
or
testl
sti
pop
mov
sub
dec
cwtl
cmp
xor
out
mov
inc
sbb
add
rcrl
sbb
std
sub
ds
and
mov
lds
sub
pop
lea
pop
cmp
lret
jmp
insl
enter
mov
pop
or
sbb
push
out
xor
sahf
add
aas
aaa
aam
push
js
xchg
mov
mov
xchg
fucomip
adc
xchg
sahf
fbstp
sbb
push
dec
pop
add
stos
push
enter
xchg
sub
or
mov
push
std
mov
fisubl
adcb
mov
lret
movsb
cmp
scas
pop
mov
jmp
sub
mov
fisttps
inc
sbb
das
ficoml
mov
mov
es
push
leave
aas
pop
pop
aad
jns
lock
jae
out
sub
mov
xor
and
adc
jmp
aaa
pop
inc
or
pop
fstps
push
xor
cmpsl
cmpsb
push
xchg
mov
sbb
pop
cli
inc
mov
add
addb
pop
not
mov
scas
adc
je
fldl
jecxz
mov
push
push
jmp
push
inc
sub
cmpsl
cmp
sbb
or
pop
lock
int
inc
mov
xchg
sub
jno
add
cmp
xchg
pusha
xchg
arpl
les
mov
outsb
mov
cmpsb
xor
and
adc
cltd
loop
mov
pushf
test
push
jge
pushf
xchg
push
imul
dec
push
ds
enter
popa
in
lock
pminub
xchg
mov
inc
int3
pop
adc
push
call
push
xor
test
icebp
popa
out
test
mov
repz
ret
mov
mov
sbb
cmp
add
dec
push
xor
pop
fisubs
jp
mov
sbb
or
ret
stos
mov
sub
mov
mov
sbb
sbbl
not
push
nop
outsl
cmc
iret
push
and
cmp
int
sub
mov
inc
mov
stos
cltd
cmc
add
lret
ss
sub
fisubrs
cld
xor
fcomps
mov
js
mov
ror
insl
xor
in
mov
xlat
cmp
pop
sub
loopne
test
xchg
push
popf
xchg
pushl
adc
or
pop
arpl
lods
xchg
jmp
push
push
insl
mov
jmp
dec
rol
ret
mov
cmpsb
mov
std
push
jno
or
lahf
add
or
xchg
mov
jg
ja
imul
stos
das
lods
movsl
mov
cmp
adc
sahf
mov
fcoml
push
sub
adc
xorb
arpl
push
jbe
xchg
add
mov
fisttpl
inc
jle
add
imul
and
adc
dec
mov
std
add
mov
out
pushf
sub
jae
je
arpl
dec
or
scas
cmp
add
fwait
jno
aas
push
xchg
scas
push
jle
mov
pop
xor
dec
sbb
push
xorl
sbbl
fs
push
mov
lds
sub
pop
mov
cmp
arpl
push
insl
fcomps
gs
cli
push
je
xchg
enter
mov
test
lret
jbe
rcll
adc
pop
mov
dec
add
sub
aad
pop
or
das
je
testb
fisubl
jb
mov
ja
push
vpsllw
call
add
and
mov
mov
xor
loope
cld
pop
inc
popa
in
imul
fidivs
loope
loop
lods
jecxz
mov
mov
shll
xchg
cmc
ret
stos
fs
mov
popa
movsb
adc
repz
ret
cmp
sub
out
jno
mov
nop
lock
inc
cmpsl
arpl
sbbl
sbb
lret
loop
sub
js
push
fdivrp
xchg
mov
testl
pop
or
es
fnstcw
cmp
jbe
push
xor
jns
insl
sub
dec
or
sbb
inc
push
hlt
adc
scas
aam
lahf
xor
arpl
and
mov
call
pop
pop
repnz
mov
adc
notb
hlt
in
add
lods
jo
mov
outsb
lret
pusha
hlt
jnp
sub
xchg
xor
sub
sti
leave
sbb
push
ja
push
cmp
cmpsl
mov
mov
sub
loope
cld
dec
lock
lcall
mov
mov
je
movsl
repz
cmc
mov
pop
test
sub
xchg
aas
leave
aam
sbb
rclb
test
enter
mov
sub
test
sbb
mov
loope
arpl
out
es
sahf
test
mov
dec
sub
repz
jb
cmpl
and
adc
xor
or
sub
push
pop
mov
mov
out
add
cmpsb
cmc
daa
in
jl
out
push
xchg
int
popf
jmp
mov
and
cmpsl
pop
movsl
mov
bound
xor
add
xlat
jmp
jp
or
mov
cmp
into
ja
sbb
push
push
inc
fcoms
add
and
jne
rcr
cmp
push
mov
mov
ret
dec
xchg
out
loopne
clc
mov
pusha
sahf
mov
xor
bound
inc
xchg
sub
mov
mov
xor
adc
aaa
outsb
std
arpl
fdivs
les
in
and
into
push
ds
fistps
outsb
sub
push
ret
test
into
xchg
mov
pop
out
dec
inc
mov
pop
add
cmp
popf
cmp
jmp
xchg
fcomps
cli
inc
mov
mov
add
adc
xchg
shrb
sti
mov
addr16
fdivl
sbb
push
dec
mov
sti
sub
call
fsubrs
and
lret
sbb
sub
stc
sbb
daa
push
pusha
ljmp
cltd
pop
mov
jne
add
insb
out
mov
push
and
add
adc
scas
bound
mov
ljmp
fbld
dec
dec
adc
cli
popf
xor
dec
shrb
jmp
aam
xorl
ljmp
cmpsl
mov
pushf
adc
sbb
es
rorb
das
popf
rcr
out
jb
int3
jnp
imul
cmp
inc
xor
or
imul
push
movsl
mov
loop
sbb
push
inc
call
out
push
aas
bound
push
insl
ss
mov
repnz
lods
push
imul
mov
test
pop
inc
xor
mov
into
xlat
sbb
pushf
jb
stos
mov
cs
or
rcrl
iret
adc
cmp
cwtl
jp
cmc
push
out
push
je
add
xor
inc
daa
xchg
insl
adc
cs
ljmp
push
cmp
fwait
das
adc
fnsave
and
cmp
jge
and
inc
jp
jbe
jge
mov
rorl
mov
xor
mov
shll
lret
or
or
les
mov
in
jge
shll
into
jb
dec
dec
xchg
push
cmp
out
xchg
sub
adc
xchg
sbb
inc
xchg
mov
push
ret
xlat
leave
and
add
ja
sub
pop
jg
xchg
inc
incb
lea
push
sti
push
push
sarb
data16
dec
mov
inc
mov
jl
scas
inc
and
cmp
jecxz
lock
mov
imul
mov
ljmp
cmpsl
mov
ja
dec
testl
xchg
and
ljmp
mov
jb
rorb
or
sub
aaa
ret
call
xor
test
add
clc
xchg
sti
frstor
mov
daa
fistpll
out
stos
add
out
fiaddl
sahf
arpl
ja
icebp
out
ja
dec
imul
xlat
jl
xor
sbb
rcrl
or
loop
jmp
cmp
sti
lahf
int
mov
in
mov
rorb
pop
fldenv
xchg
inc
xchg
incl
subl
sub
xchg
in
popf
lret
repz
inc
imul
mov
xchg
ret
or
inc
repz
mov
imul
stc
inc
orb
or
cmp
cmpsb
mov
pop
in
push
fwait
mov
and
movsb
jmp
mov
or
pop
clc
clc
xchg
xchg
pop
xchg
adc
loopne
fbstp
das
movsb
and
popa
adc
test
mov
dec
mov
sub
or
fdivs
lea
cmp
outsb
outsl
sub
mov
inc
addl
mov
push
sbb
xor
or
push
pop
push
mov
dec
stos
push
sub
dec
es
sbb
out
xchg
pushw
add
mov
std
pop
lds
mov
es
or
pop
notb
int
jle
mov
repnz
jg
xor
xchg
out
adc
stc
in
or
daa
pop
jns
sbb
adcb
or
add
and
fs
das
push
add
cmp
cmp
mul
bound
mov
xchg
add
popa
fistps
stc
xor
pop
push
jg
or
icebp
or
and
cli
lcall
iret
gs
dec
dec
aas
adc
jge
out
mov
cmp
pop
cli
xor
dec
dec
das
fwait
cli
push
rclb
push
call
pop
fcoml
je
sbb
sti
jge
jecxz
std
inc
std
mov
mov
mov
mov
loope
xor
dec
shl
pop
mov
iret
addb
and
mov
mov
mov
addr16
push
pop
xor
test
cmp
pop
inc
jl
dec
xor
rcrl
stos
push
add
cmpsl
loopne
cld
call
lahf
mov
mov
push
xchg
or
cmpsl
nop
and
ja
lcall
inc
insb
sub
incb
lods
call
les
push
mov
jle
test
mov
inc
and
mov
jl
cmpsb
mov
inc
stos
mov
push
movsl
and
pop
push
daa
mov
lods
inc
adc
out
push
subb
loopne
insl
add
jbe
fisttpl
add
lods
add
insl
je
dec
cmp
fidivs
fldenv
negl
push
cltd
ljmp
mov
mov
push
adc
stos
jp
shrb
mull
std
rcrl
or
movsb
adc
cld
add
cmpsb
fs
and
pop
mov
adc
outsl
sub
fbstp
popl
jmp
cld
cmp
sub
or
push
sbb
test
divb
iret
stos
xlat
fldcw
movsb
xor
dec
insl
je
in
fisttpll
xor
push
adc
sbb
jo
lods
dec
xor
pop
ja
xchg
jg
mov
out
add
addr16
or
pop
daa
mov
jns
xchg
cmpsl
imulb
cmpsl
and
movsl
sub
test
mov
shr
push
outsl
mov
sub
sbb
popf
mov
inc
test
jg
adc
jb
inc
insb
cs
aad
hlt
jae
stos
inc
cltd
fldt
std
sarl
dec
pop
pushf
in
cmp
in
inc
daa
mov
fldcw
ljmp
xchg
jbe
mov
fdivrl
pushf
insl
or
add
popa
or
cmp
jle
sub
cwtl
cmpsb
aaa
mov
test
adc
mov
cmpl
out
cmp
fimull
rcll
sub
mov
push
mov
loop
xchg
sub
aad
stos
adc
adc
jnp
xor
les
test
ljmp
jb
jno
int3
dec
sti
aad
jae
mov
dec
imul
aam
call
cmp
fcoms
js
pop
push
jle
dec
out
ds
pop
fildll
lcall
add
std
cs
cmp
aam
mov
scas
test
shrb
das
lret
add
std
pushf
mov
subl
lock
mov
loop
or
andb
xlat
xchg
push
mul
daa
push
mov
push
mov
movsl
jg
idiv
jns
cmp
cwtl
xchg
fstpt
shlb
mov
addr16
mov
outsb
xchg
cmp
xor
mov
addb
push
push
xchg
popa
inc
inc
jno
fcmovu
sub
test
aam
ljmp
lahf
mov
xor
rorl
leave
push
shrb
add
or
sub
popa
xor
or
sbb
popa
sbb
lret
mov
mov
std
adc
lahf
in
cli
mov
xlat
sbb
sbb
xor
es
daa
mov
imul
nop
pop
fs
xchg
or
jecxz
ljmp
inc
subb
and
add
outsl
shl
sub
cmp
repnz
and
out
and
mov
loop
ss
dec
sti
jne
ror
cmp
ja
inc
hlt
mov
jne
out
mov
pushf
xchg
repnz
adc
and
sbb
xor
or
xor
inc
enter
lods
mov
jo
ret
leave
je
movsl
bound
xor
xchg
int3
dec
jg
js
push
push
rorb
mov
loopne
push
cmp
es
mov
imul
fcomps
shll
cli
and
xor
popf
fnstcw
xlat
loopne
nop
bnd
enter
into
addr16
test
cmp
pusha
cmp
pop
add
mov
sbbb
xchg
dec
fildll
out
sub
sbb
or
ljmp
cltd
jmp
dec
lret
mov
pop
push
pop
fcmovnb
adc
xor
jne
fisubrs
pusha
popf
inc
dec
jae
nop
sahf
jge
test
dec
out
or
pop
int3
rolb
scas
sub
xor
insb
call
mov
imulb
pushf
adc
mov
cmp
pop
test
cmp
enter
mov
and
add
hlt
in
sbb
sub
push
call
cwtl
adc
xchg
loopne
sbb
xchg
sub
pop
mov
xchg
mov
push
pop
in
dec
out
imul
mov
and
adc
push
test
fistpl
sbb
insb
and
ret
ja
mov
mov
add
aas
dec
jb
xchg
gs
into
adc
stos
pusha
mov
mov
adc
out
mov
bound
cmpsb
addl
adc
mov
sub
out
out
jl
negl
cmp
ljmp
sbb
cs
insb
popf
push
cmp
imul
mov
shll
push
adc
xchg
mov
inc
lcall
add
out
mov
cltd
lea
sub
lahf
fwait
pop
into
cmpsl
pop
sarb
addr16
or
jecxz
imul
adc
into
cld
pop
pop
or
add
jnp
push
mov
pop
stc
ds
test
incl
xor
jbe
mov
cli
outsl
adc
rolb
fldenv
sete
daa
jmp
cmp
loop
out
imul
ret
movsl
sbb
sub
js
ret
mov
adc
or
push
aas
dec
js
cmp
paddsb
mov
push
outsl
fs
xchg
inc
in
and
outsl
push
sub
sahf
xchg
push
sar
int
in
add
es
adc
ss
dec
push
test
xchg
sub
xchg
jns
mul
xor
idiv
mov
adc
push
sbb
subl
paddw
inc
add
test
sbb
cmc
jp
mov
mov
push
xchg
xor
jo
or
les
xor
rorb
iret
and
mov
hlt
insb
sub
ja
add
jae
notl
pop
aam
popf
test
ss
das
ja
push
xchg
shll
and
dec
out
jge
icebp
pop
xor
rclb
jg
loope
adcl
loop
mov
push
nop
inc
push
adc
dec
movsl
repnz
je
and
jno
or
popa
xchg
fidivl
mov
rclb
jne
andl
test
inc
and
and
dec
ret
dec
or
movsl
xchg
xchg
push
xchg
lea
xchg
adc
int
jo
or
sub
repz
push
fwait
mov
lea
repnz
adc
mov
push
jge
lods
sbb
mov
xchg
bound
imul
or
push
jnp
dec
mov
inc
add
inc
cli
mov
das
sub
popa
int3
inc
fldl
mov
call
in
dec
hlt
fldcw
in
push
mov
scas
lods
xchg
aam
mov
xor
fists
dec
addl
adc
dec
cmp
imul
in
arpl
pop
lret
push
cld
aaa
insb
shlb
push
pop
xor
bound
adc
mov
les
sub
push
arpl
xor
ljmp
push
mov
pop
movsl
mov
fistl
xchg
push
or
inc
dec
xor
jb
testb
ficomps
iret
jbe
shl
push
test
aas
sbb
push
inc
cmpsl
dec
pop
push
cmp
mov
xchg
jo
sub
lea
mov
mov
push
inc
inc
push
sub
xchg
cwtl
stc
scas
insb
insb
jmp
call
dec
adc
icebp
loope
add
shll
hlt
pop
shrl
jg
jecxz
repnz
lret
loop
movsb
jnp
negl
pop
adc
fsts
test
mov
fcompl
push
jne
mov
pop
aam
int
sub
inc
cwtl
outsb
adc
adc
arpl
xor
in
xchg
cld
sbb
fbstp
dec
or
mov
xchg
add
mov
in
jp
sub
out
push
das
lea
ds
pushf
lahf
hlt
xchg
insl
xchg
pop
mov
ds
mov
loopne
or
test
sub
orl
lahf
lds
sub
outsl
add
sub
repz
mov
fstpt
push
nop
adc
pushl
adc
cmpsl
flds
sub
daa
jb
mov
je
cld
mov
out
mov
push
sub
and
jge
pop
in
cs
and
mov
and
and
pop
test
fwait
rcr
inc
jne
dec
loope
push
pop
xor
push
mov
shlb
jno
movsb
adc
aaa
jmp
xor
fists
es
add
test
ficompl
or
in
cmpsl
in
mov
pop
stos
rol
test
insb
in
push
jae
xchg
xchg
aaa
faddl
sub
out
lret
gs
stos
arpl
cld
movsb
lcall
push
mov
fsts
jecxz
idivb
push
mov
xchg
or
pop
lods
xchg
fistps
adc
inc
mov
xor
mov
inc
fistpll
roll
pushf
lock
push
cmpsl
sub
pop
xchg
pop
test
mov
inc
sahf
jp
push
scas
add
pushf
loope
xor
sub
loope
icebp
pop
add
xor
pop
push
pop
loop
fs
jbe
add
jg
xchg
mov
lcall
jne
test
cmc
ljmp
out
pop
and
mov
pop
pop
pop
sbb
sbb
aaa
mov
mov
cmp
inc
lcall
mov
xchg
add
mov
pop
stos
out
stos
pop
cmpb
in
cwtl
adc
mov
mov
stc
xchg
dec
sbb
sbb
push
xchg
jb
pop
push
hlt
cld
jg
jmp
jmp
cwtl
inc
lea
push
jae
test
and
jge
out
push
mov
push
xchg
dec
ret
adc
cmp
dec
dec
insb
xchg
mov
test
scas
or
aas
lret
lea
dec
inc
cmp
mov
and
xor
xchg
fisttps
loopne
pop
shll
push
xor
adc
std
cmp
cmp
mov
iret
dec
jp
push
pop
subb
push
or
out
adc
in
mov
sbb
mov
cmp
cltd
sub
jnp
fidivs
push
inc
and
add
pop
mov
sahf
je
nop
pushf
xchg
dec
lret
mov
mov
and
jge
pop
fildl
dec
add
or
fnstsw
jne
hlt
dec
mov
pop
jno
pop
or
mov
xorl
pop
pop
mov
call
push
fisubs
jg
add
pop
or
fabs
dec
push
loopne
inc
les
jecxz
push
jecxz
out
inc
inc
decb
popf
dec
rolb
add
mov
out
aaa
rclb
aad
cwtl
mov
ja
ljmp
sub
test
push
mov
jp
inc
or
scas
sbb
push
mov
add
dec
inc
sub
pop
inc
daa
fwait
lock
mov
jne
mov
fistl
je
inc
mov
fs
push
sub
mov
push
push
mov
jo
insb
jl
hlt
push
dec
sub
lods
mov
inc
sbb
sub
sbb
movsb
insb
in
mov
pop
dec
sbb
sbb
test
fldcw
inc
cmpsl
inc
cmp
jae
jmp
cmpsl
hlt
test
dec
sub
in
add
in
jmp
xorb
std
daa
fs
sub
arpl
xchg
enter
pusha
dec
xchg
add
insb
pop
jle
mov
lods
jl
jns
cli
pop
nop
adc
fildll
clc
push
xchg
jae
es
and
push
je
aas
sbb
mov
mov
mov
mov
cltd
push
sbb
add
add
lret
push
mov
cmp
inc
call
and
aaa
lds
mov
fsubrl
adc
movsl
xor
subb
jle
lea
mov
jns
mov
cltd
and
mov
incb
lahf
ret
lret
lret
mov
neg
jne
pop
adc
into
fxch
imul
jae
mov
inc
mov
test
lret
imul
push
fadds
mov
add
ja
add
mov
xor
mov
mov
dec
xchg
icebp
lret
nop
mov
jg
mul
or
pop
mov
mov
mov
jge
push
repz
and
inc
push
aad
mov
adc
jnp
inc
aam
int
test
mov
mov
arpl
iret
adc
sub
jp
addl
cwtl
push
mov
dec
xchg
xor
xor
inc
cmp
or
sbb
movsl
and
out
cld
sbb
dec
push
lahf
cmp
leave
testl
cltd
mov
push
loope
cltd
pushf
mov
sti
mov
out
loope
fidivl
inc
sbb
add
sub
sub
push
data16
aaa
dec
stos
mov
nop
sbb
sub
inc
insb
add
pushf
add
ret
nop
outsb
or
mov
adc
mov
xor
sbb
sbb
ret
jl
test
scas
xchg
jne
inc
cmp
xor
outsb
icebp
adc
notl
push
jp
shll
sahf
jge
mov
push
jmp
ffree
int3
xor
jle
sub
xchg
in
adc
jmp
bound
mov
mov
lret
sbb
cmpsb
jne
faddp
and
inc
outsb
and
xor
fimull
idivb
adc
or
clc
gs
or
nop
add
int3
sbb
mov
decl
repz
push
xlat
sbb
fiaddl
pop
int
or
xchg
add
dec
push
jl
pop
sub
mov
jns
inc
add
and
mov
dec
flds
mov
dec
jg
stos
pop
jb
xchg
pop
lret
jp
xchg
mov
movl
cltd
pop
sub
cmp
insl
inc
inc
popf
jecxz
ret
xor
insl
in
and
loopne
arpl
dec
or
inc
scas
push
cmp
subl
sub
jae
sahf
bound
data16
leave
outsl
push
cltd
mov
dec
gs
pop
push
aam
mov
add
jge
arpl
inc
add
push
pusha
pop
daa
xchg
ds
pop
mov
mul
mov
jp
rcll
roll
das
jne
sbb
in
stos
mov
sahf
cmp
add
daa
or
add
dec
xchg
push
icebp
mov
push
inc
gs
xor
mov
mov
pop
mov
ret
sarl
icebp
xor
addr16
mov
cmc
cs
xchg
mov
mov
std
jl
push
aad
jle
mov
out
cmp
cli
lret
aas
scas
daa
pop
xchg
mov
lret
lcall
rolb
dec
cmc
sbb
fcompl
vpavgb
dec
add
cmp
cmp
pushf
mov
pop
jmp
flds
inc
addr16
pop
pop
iret
dec
xchg
xchg
lods
jns
cmp
mov
les
lods
jbe
mov
insb
sub
data16
mov
aas
mov
pop
rol
cli
test
mov
push
inc
adc
mov
fwait
cmp
ljmp
jmp
imul
jnp
arpl
mov
imulb
insl
subb
add
lret
stos
mov
xchg
add
lcall
push
lods
popf
and
outsb
push
in
test
hlt
xor
or
cld
push
lods
test
movsl
mov
je
fistpll
fstps
fs
cwtl
lret
push
mov
xor
dec
mov
pop
test
inc
in
push
xor
sbb
in
fs
pop
mov
cld
push
or
add
add
adc
jae
and
mov
jmp
push
add
cmp
sbb
xchg
adc
xor
jae
cs
jg
out
leave
arpl
pushf
jae
add
or
cmp
inc
adc
cmp
pop
aaa
sbb
jae
pop
aas
imul
jle
in
jae
cmp
fbstp
inc
jmp
out
inc
out
loopne
out
sbb
cmp
mov
adc
xchg
jns
pop
ficoms
jmp
rclb
imul
cmpsl
or
mov
aad
loope
cmpsl
xchg
adc
ss
push
lods
cltd
mov
or
popf
cltd
add
push
out
xor
cmp
pushf
push
ljmp
push
jecxz
rorb
jle
jb
aas
xchg
sub
movsl
and
add
jle
scas
ljmp
lods
xor
in
stos
stos
fs
cli
mov
sub
sub
jp
mov
jle
add
es
xor
or
sbb
or
bound
in
call
mov
pop
xor
ss
lahf
xchg
dec
or
aaa
cmp
shl
lret
pushf
sti
dec
js
in
jge
fimuls
xchg
ret
pushf
adc
sub
push
xor
xor
adc
mov
push
sub
pop
jl
cwtl
inc
in
outsb
cld
xor
or
iret
push
popa
scas
dec
outsb
jnp
sub
xchg
int3
push
into
push
iret
jmp
mov
jno
cs
mull
adcl
in
outsl
jl
js
push
cmp
pop
add
add
dec
mov
jne
add
outsb
lods
xor
inc
push
daa
outsl
pop
scas
fistl
xchg
push
aam
outsb
fs
repz
lock
adc
test
aas
stos
hlt
and
pop
insb
stos
or
add
fcomps
xchg
cli
shrb
and
pop
test
jo
fsts
aad
out
cmpsl
int
mov
lcall
aad
in
fimull
es
jmp
mov
xchg
mov
test
push
push
je
or
aad
andb
fldcw
add
inc
xchg
dec
mov
movl
in
pop
mov
sub
add
out
mov
or
ret
xchg
sahf
mov
imul
sbbb
sbb
cmp
adc
or
dec
lods
lret
dec
dec
repz
dec
mov
out
sub
add
push
push
shlb
xchg
stos
xchg
push
or
xor
rolb
mov
add
xchg
push
xchg
lods
leave
dec
out
leave
push
aam
pop
mov
mov
jb
cmpsb
lods
jl
icebp
adc
jp
cmc
std
stc
adc
ret
pop
cmp
call
adc
repnz
movb
push
lret
inc
pop
adcl
test
dec
or
mov
mov
mov
cltd
mov
addb
jno
inc
out
add
jae
mov
and
jmp
lcall
adc
ljmp
jne
das
mov
push
mov
inc
in
loopne
mov
jae
sti
out
or
fildl
cmpsl
hlt
add
sub
mov
int
mov
call
or
cs
incl
pushf
roll
imul
popa
imul
cvtps2pd
shlb
dec
mov
rolb
lcall
movq
mov
fisubrl
loop
stos
cmp
shl
mov
in
pop
in
inc
mov
outsb
cmp
jl
or
inc
pushf
ret
or
and
jg
jo
pop
js
mov
andb
and
in
push
push
cmpb
add
push
jnp
out
and
sub
cmpsl
pop
inc
leave
inc
das
sbb
mov
and
dec
cmc
into
mov
jbe
rcrl
lods
sbb
and
popa
lahf
lahf
mov
lcall
jo
cmp
cmp
mov
shr
imul
enterw
add
outsb
in
imull
arpl
pop
mov
into
ss
jne
add
das
jae
bound
xor
or
cltd
inc
scas
loop
sti
test
jo
sbb
pop
push
add
xor
xor
inc
inc
roll
dec
hlt
push
lods
repz
loope
ds
cmp
and
xchg
ss
push
jne
adc
fwait
add
sbb
sbb
out
push
and
cmp
repz
inc
lock
subl
aas
pop
popa
stc
pop
addl
int3
ja
push
test
xchg
mov
je
into
cmp
add
daa
es
add
push
xchg
sub
roll
jle
jbe
jnp
jb
add
js
sahf
mov
sub
mov
adc
push
mov
push
inc
jmp
and
pop
xor
mov
mov
mov
jnp
jl
mov
cmp
xlat
fdiv
lock
insb
sbb
daa
push
ja
xor
dec
les
sub
sbb
loope
xchg
repz
lahf
gs
lods
fcomps
lret
in
sti
pop
mov
cmp
mov
jle
mov
imul
inc
inc
cmp
lds
xchg
add
loope
iret
adc
xchg
xchg
and
jge
in
mov
inc
shlb
pop
imul
pop
xor
repz
mov
push
adc
and
fnstsw
sbb
push
fsubrs
push
jle
pop
testb
mov
or
aas
add
push
sbb
inc
adc
or
aas
dec
pushf
pop
push
rcll
xchg
pop
pushf
jmp
jecxz
dec
xchg
cmpsl
mov
lcall
pushf
cld
pop
and
cmpsl
mov
popf
jb
fiaddl
xchg
notb
lcall
call
int
repnz
push
add
xor
jle
add
subb
nop
xchg
fisttps
add
xchg
mov
bound
sub
fsubl
out
fldenv
cmp
and
jle
mov
inc
subl
es
mov
inc
cs
xchg
hlt
mov
xor
xchg
jo
ds
out
nop
out
fimull
mov
mov
jp
add
or
jns
push
sub
mov
repnz
fstpt
testl
dec
sarl
push
or
or
lcall
mov
mov
pop
dec
movsb
adc
xor
inc
ja
jnp
imul
adc
add
jp
cli
push
vpshufd
dec
movsl
jp
adc
movsl
std
sub
enter
inc
scas
lret
inc
push
adc
subl
mov
inc
fildl
test
insb
imul
jnp
lret
pop
out
stc
xchg
push
mov
repz
pop
and
jl
xchg
inc
mov
push
pop
or
mov
mov
cli
mov
and
jne
xchg
es
jno
xchg
aas
push
int3
into
bound
xchg
jo
faddl
setnp
fwait
add
dec
out
rcr
stos
frstor
cmp
cs
ret
lret
nop
filds
jnp
push
insl
sbb
loop
lahf
pushf
movsb
stos
iret
int3
push
and
divl
int
jns
js
lock
lret
sub
gs
jbe
inc
add
popa
cltd
jl
in
ret
outsl
dec
jecxz
das
pop
mov
loope
shrl
or
ss
push
fmul
inc
xchg
add
cwtl
in
mov
xchg
pusha
int
bound
and
jae
test
dec
or
int
test
pushw
out
cmp
aad
dec
add
push
js
lret
in
into
movsl
inc
xchg
fsubs
jmp
adc
mov
scas
clc
add
in
jns
jae
cltd
imul
inc
mov
jae
xchg
decb
push
mov
mov
movsl
push
push
push
stc
dec
mov
jbe
cmp
and
dec
ss
rcrl
add
outsl
fdivrs
aad
mov
aas
or
adc
mov
out
sahf
bound
je
add
adcl
push
test
sbb
jns
test
imul
cltd
push
mov
mov
and
call
or
adc
mov
push
ljmp
jae
ljmp
mov
jg
inc
in
cmpsb
xchg
mov
repnz
xor
icebp
loop
test
shll
xor
cmc
xor
xor
gs
stos
sbb
or
fisubl
xor
add
xchg
inc
jp
sub
dec
nop
pop
dec
dec
lahf
push
xchg
sbb
cmp
jmp
fistpl
lods
adc
push
lea
repz
mov
jle
xlat
mov
sub
clc
xor
push
bound
clc
cmp
sbb
or
ja
cmp
call
test
inc
sbb
or
enter
sbb
add
out
mov
rolb
push
and
mov
popa
or
cmc
stos
xor
or
cli
popa
roll
push
mov
jg
sarb
rcrl
or
lea
mov
add
jno
cld
pop
lods
arpl
jl
mov
jg
dec
mov
push
push
push
pushf
sahf
add
xor
ja
negl
xor
sbb
ficomps
push
sub
filds
fmull
shrb
cmp
lcall
adc
insl
adc
xor
jnp
idivb
test
adc
push
in
mov
lret
mov
pop
adc
pusha
xlat
adc
cmp
popa
ljmp
pop
enter
mov
adc
xchg
pop
out
rcrb
jbe
push
pop
cmpsb
addr16
dec
addr16
push
xchg
mov
pop
sbb
mov
and
mov
fists
ficomps
fadds
loopne
pop
test
or
adc
mov
xchg
sarl
pop
stos
aam
testb
push
stc
or
mov
sub
sub
or
sbb
aad
je
jns
and
add
and
cs
jb
testb
mov
cmp
repnz
in
aas
sub
and
mov
adc
xor
pop
inc
rcr
adc
push
xorb
and
aaa
sub
rcl
je
sbb
js
icebp
dec
ret
lahf
xchg
pop
and
xor
loop
sbb
jb
mov
fwait
xchg
mov
fnstsw
outsb
sbb
pushf
mov
fwait
scas
mov
loope
sub
aaa
mov
mov
out
xor
flds
push
jbe
jg
lea
and
adcl
and
jnp
or
jns
and
or
or
das
pushf
inc
pop
mov
pop
jecxz
or
ljmp
mov
mov
sub
das
cmp
mov
mov
mov
in
loop
daa
cmp
and
inc
scas
push
jp
lahf
lret
or
insb
lahf
mov
mov
sub
sbb
int3
or
jge
mov
sbb
adc
pop
imul
cmpsb
xor
mov
and
insl
and
sub
sub
shl
xchg
sub
xor
xchg
stc
arpl
push
repz
and
mov
sub
popa
or
icebp
cli
push
int
iret
aaa
xlat
xchg
mov
arpl
pop
ja
pop
mov
fisttpl
adc
push
insl
xor
and
cmpsl
loope
pop
fildll
adcl
dec
pusha
scas
push
sbb
push
jb
mov
or
test
mov
dec
jo
incb
into
ret
pusha
test
shrb
mov
aas
mov
pop
enter
loopne
inc
and
pop
or
push
cmp
test
xor
xchg
xchg
out
or
lods
imul
mov
jo
xor
pop
mov
mov
or
rclb
xchg
cmpsb
adc
lret
roll
and
mov
sub
int
sbb
dec
cs
movsb
xchg
mov
mov
mov
or
outsl
rcrl
cltd
icebp
imulb
repz
imul
xchg
jge
mov
xchg
addb
fdivl
mov
int
inc
popa
dec
jb
insb
xchg
adc
leave
mov
pop
sti
xorb
hlt
inc
mov
aad
out
addr16
inc
or
int
adc
mov
pop
dec
pop
and
into
sub
cs
jge
xchg
xchg
inc
repnz
ljmp
gs
lods
xchg
mov
mov
mov
fisubs
mov
lret
mov
les
ss
scas
inc
push
ja
mov
jns
pop
push
into
out
dec
mov
inc
aam
enter
inc
movsb
and
mov
ss
push
ror
sbb
popa
add
out
test
cmp
push
jne
add
int
push
dec
cli
mov
or
int3
jle,pn
cmp
push
into
jnp
mov
leave
xchg
imul
outsl
daa
xchg
xchg
ljmp
ljmp
jno
cmpsb
pusha
mov
out
adc
jnp
push
bound
std
aad
push
push
test
rorb
jnp
shl
pop
outsb
xchg
inc
dec
adc
cltd
ds
push
mov
xchg
sbb
add
adc
cltd
cmp
sahf
cmc
cs
addb
mov
lods
std
pusha
dec
lock
xor
incl
cmp
push
push
mov
push
in
push
flds
mov
sub
mov
bound
fsubs
shrb
push
pop
popa
int
loop
repnz
and
xchg
shll
mov
cmp
outsl
push
dec
mov
inc
xchg
mov
std
cmp
xor
xchg
repnz
cmp
je
push
or
stos
mov
mov
rcll
add
movsb
pop
std
jp
int3
mov
decb
adc
sbb
loop
decb
ret
pop
loope
xchg
jle
dec
sbb
rorl
lods
loop
outsb
sysexit
push
hlt
sbb
push
andps
cs
cwtl
xchg
mov
pop
test
sbb
stos
ficoml
mov
les
test
inc
jmp
leave
test
mov
fwait
nop
fsubrl
pushf
imul
lods
or
or
fsubrp
mov
je
xor
sahf
lea
mov
inc
pop
sbb
xor
add
xchg
adc
inc
or
inc
xor
imul
jb
shlb
sahf
mov
jecxz
add
adc
out
in
add
jmp
in
push
push
test
lock
ja
lds
inc
and
mov
jns
mov
test
jne
push
mov
lahf
popa
mov
sbb
xchg
push
scas
mov
or
xlat
leave
push
jl
push
xorl
mov
push
fwait
shlb
cmpsl
mov
push
sub
fsubrs
aas
jb
outsl
lea
jne
mov
jp
jg
cmp
fldcw
and
mov
mov
or
out
fmull
movq
ret
loop
jnp
mov
xor
mov
clc
sbb
push
cmp
stc
jbe
stos
xchg
jb
inc
mov
movd
imul
add
jns
sub
stc
jle
addl
mov
or
fs
shrb
aad
fcomps
jne
cmpsl
add
cmp
hlt
dec
mov
adc
xchg
sub
gs
int
adc
enter
or
inc
gs
pop
es
lahf
imul
pop
mov
pop
cli
nop
fsubs
or
mov
cwtl
leave
and
cmp
mov
xchg
add
andl
push
adc
sbb
popf
movsl
cmp
test
std
lahf
popf
sub
rorb
pop
add
pop
shrl
pop
mov
inc
cmp
mov
pushw
xchg
das
push
inc
sbb
xor
sbb
addr16
ss
insl
ja
mov
lods
mov
shll
adc
mov
jge
mov
jnp
and
pop
ret
mov
lods
inc
out
fsub
aas
scas
movsl
cltd
jp
out
cli
je
test
mov
ret
xchg
bound
pop
test
jbe
loop
pop
popf
stos
mov
sub
add
or
test
fldenv
xchg
fsts
jnp
cmp
xchg
roll
xchg
and
cld
sbb
sbb
sbbl
and
or
adc
adc
in
or
jecxz
jp
jbe
adc
dec
jbe
lret
sbb
gs
and
test
and
aas
dec
dec
inc
mov
aam
mov
in
or
inc
dec
jl
sahf
sub
cld
mov
test
insb
lock
in
and
push
xorl
and
xchg
fidivs
mov
push
fsubrs
xor
loopne
es
xchg
ret
or
mov
sarl
ds
mov
sbb
arpl
add
inc
adc
ss
call
test
mov
xchg
mov
mov
and
int3
mov
and
into
daa
and
or
fsubrp
xchg
sahf
cli
aad
lock
add
sarl
mov
mov
lahf
nop
sbb
mov
rcl
pop
cmp
out
rol
into
adc
add
xor
dec
inc
fists
clc
sbb
and
mov
mov
std
cmpsl
mov
pusha
or
mov
inc
int
mov
clc
push
mov
mov
stc
sarl
push
mov
das
sub
xor
fnstcw
xorl
dec
mov
dec
xor
inc
push
pop
jns
or
pop
xchg
push
ja
je
jg
sbb
xchg
jmp
push
imul
jns
and
test
fbld
sub
cmp
out
jle
fs
loope
stos
shl
clc
add
cmp
adc
push
mov
jne
mov
lea
jl
xor
jecxz
sbb
cld
and
push
xchg
lods
int
pusha
push
dec
clc
test
inc
repnz
icebp
mov
jmp
mov
repz
xchg
cmp
cmp
fwait
repnz
or
dec
shr
sub
jbe
xchg
jle
xchg
mov
rcrl
mov
push
icebp
mov
iret
aam
lret
or
fiaddl
sbb
js
sbb
push
psadbw
sbb
ja
or
lret
lea
push
jnp
jns
adc
xchg
jge
mov
jno
xor
sbb
push
inc
lods
je
shrl
pop
jg
fimull
fdivl
cmp
lcall
mov
jg
mov
std
mov
aam
idivb
loope
or
mov
xor
xlat
sub
sbb
mov
dec
dec
or
push
ss
bnd
insb
les
outsb
dec
nop
or
mov
jo
inc
clc
mov
cld
push
xor
xorb
cmp
push
pop
cmp
xlat
cmpsb
pop
mov
in
mov
push
lret
aaa
loopne
inc
mov
jo
in
push
stos
add
mov
mov
jg
les
mov
add
aas
lahf
shll
pop
push
sti
xor
aaa
push
pop
push
pop
lods
ficomps
pop
pop
dec
out
lret
test
data16
lds
push
fcomip
mov
xchg
out
jne
call
mov
cmp
inc
lods
scas
lods
and
dec
pop
in
push
stos
xchg
lret
pop
lret
fiaddl
insb
jb
loope
in
fucom
and
cwtl
inc
test
xor
xchg
mov
outsl
aaa
or
pop
iret
insb
neg
pop
add
call
rcll
cmc
ljmp
add
adc
dec
sbb
or
rcr
lds
int
mov
dec
cmpsl
mov
arpl
jo
das
push
pop
mov
and
pop
add
shrb
jnp
jp
or
xor
sahf
sbb
mov
add
mov
ss
mov
les
jbe
test
dec
in
sbb
push
popa
inc
cmp
scas
aas
pop
adc
pop
shlb
mov
lds
loopne
or
ss
bound
ljmp
sbb
xlat
push
dec
sub
ss
in
loopne
ja
sub
test
push
fidivl
pop
ja
stc
out
mov
mov
mov
lahf
leave
lcall
adc
jne
push
jl
mov
mov
add
inc
xchg
sarb
dec
rcl
sub
xor
insl
call
cmc
mov
fists
dec
stos
sbb
dec
sahf
pushf
dec
loop
ud0
int
loope
in
mov
mov
push
push
out
sbb
mov
mov
dec
rcrl
xor
fwait
jecxz
cli
pop
scas
sbb
sbb
add
xchg
and
ljmp
jmp
insl
pmulhuw
cmovae
cmpsl
fistl
dec
adcb
addr16
pop
jl
fwait
push
and
push
sub
cmp
push
ds
pop
sbb
in
sbb
inc
jmp
into
inc
sahf
cwtl
fisubs
cmpsb
in
psubusw
cmp
add
push
push
repz
in
xchg
scas
ror
int3
push
mov
sbb
outsb
mov
pop
scas
adc
lahf
jae
jo
jno
lar
lret
cli
mov
stos
cmp
shrl
sahf
cmp
scas
xorb
fildl
sbb
add
in
adc
mov
andl
jae
ret
stos
enter
and
repnz
inc
out
mov
pop
jge
outsl
push
adc
int
rclb
cs
call
int3
xchg
arpl
icebp
push
arpl
imul
pop
xchg
lret
push
jg
inc
mov
jmp
adcb
cld
inc
dec
jle
inc
cmp
or
cmpsl
movsb
mov
lahf
mov
pop
pop
mov
cmp
sbb
loopne
lret
pop
lea
jg
scas
jg
pop
ljmp
lods
pop
iret
insl
pop
or
adc
cld
jno
je
insl
dec
test
sti
adc
jns
and
cwtl
loop
sub
xchg
push
mov
jmp
std
mov
push
outsb
cmpsb
add
adc
pop
xchg
out
call
cmp
fstp
insl
push
pop
aam
sbb
fisubl
mov
je
adc
xor
cmp
mov
jle
sub
aad
movsl
lret
jno
and
js
pop
mov
pop
es
cmp
aas
push
dec
mov
lods
mov
je
stos
add
and
daa
mov
mov
jmp
xchg
cmpsb
mov
mov
cs
js
cmp
or
sub
jle
aam
iret
in
movsb
add
shrb
dec
mov
stos
add
jmp
movsl
int3
mov
aaa
cmp
cwtl
movsb
in
pop
push
pop
call
iret
push
fwait
cwtl
icebp
je
hlt
test
lods
pop
loopne
mov
sbb
mov
cmpsb
or
jb
and
aaa
shll
mov
mov
mov
pop
lea
jmp
out
jae
cli
adc
lods
hlt
or
push
aam
popa
and
push
fcmovnb
lahf
xchg
mov
jmp
sbb
and
xorl
shl
movsl
ljmp
ljmp
mov
data16
and
xor
js
repz
in
cmp
ret
push
or
loope
fdivl
movsb
xchg
jmp
rcll
aam
out
jle
out
test
fdivs
loopne
fs
jg
idiv
scas
xor
sub
mov
loop
std
movsl
repz
rorb
push
adc
in
mov
ljmp
iret
out
imul
mov
outsb
mov
pop
xor
pop
xor
repnz
sbbl
dec
jp
add
iret
sub
test
push
sbb
fisttpll
dec
js
movsl
fisubs
shrb
popf
cmc
xchg
add
mov
adc
shll
out
cmp
das
in
mov
xchg
hlt
lret
xlat
mov
add
sub
incl
mov
pop
mov
mov
adc
mov
push
int
dec
xchg
add
ficoml
test
cltd
mov
push
jo
mov
lods
fcom
cmp
cmp
xchg
int3
or
jne
sti
pop
call
jmp
jle
mov
xlat
je
dec
fimuls
pusha
into
mov
pop
fisttpl
in
push
cld
mov
movsb
ja
xor
mov
cmp
xchg
scas
stos
sbb
inc
xor
sbb
xor
in
push
pop
xchg
add
arpl
sbb
xchg
testb
or
scas
int3
lea
mov
stos
scas
jle
pop
xor
imul
inc
or
jl
dec
sarl
iret
rorb
lods
cmp
jle
mov
or
call
xlat
xchg
pushl
ss
push
mov
repz
jb
push
xchg
std
inc
pop
loop
sbb
jb
mov
lcall
push
fimuls
lret
dec
adc
fptan
mov
pop
mov
call
into
pop
pop
dec
mov
mov
pop
jnp
xor
in
sbb
xchg
fsubrs
sub
cmpb
shll
popa
movzwl
sub
hlt
jae
and
push
ja
into
repnz
pop
inc
and
push
dec
push
or
jno
addr16
cltd
popa
inc
sub
xchg
jmp
inc
mov
xor
gs
rol
push
js
movsb
std
leave
and
sbb
divb
mov
pop
ret
xchg
pop
push
subb
xchg
leave
adc
repnz
dec
add
jne
xchg
cmp
imul
std
sbb
and
sub
xchg
popa
cmp
pop
push
ljmp
add
xor
pop
lea
mov
adc
inc
imul
repz
popf
xlat
test
sbb
sub
cmp
int3
out
inc
out
push
jp
xor
sbb
mov
icebp
xchg
push
mov
mov
xlat
test
sub
dec
pop
aaa
lret
lock
in
mov
les
repz
pop
jge
jg
cli
pop
jmp
add
push
sbb
fsubs
into
rcrl
int3
loopne
adc
and
or
js
jmp
or
add
jnp
jbe
loope
hlt
mov
cli
inc
shl
xchg
out
xchg
mov
stos
repz
mov
aas
pop
cmc
adc
xchg
lcall
inc
mov
out
or
adc
mov
out
push
adc
cmp
inc
icebp
aam
jg
imul
or
cwtl
sbb
test
sbb
mov
inc
xor
xor
jle
arpl
scas
pop
dec
mov
mov
fcoms
pop
jnp
roll
xchg
jb
mov
pop
jmp
pop
jne
and
ret
gs
mov
popf
aad
pop
sahf
sub
and
add
idiv
xchg
leave
sub
dec
scas
push
mov
and
pop
test
arpl
mov
jns
xor
or
jp
lea
mov
mov
cmpsb
lahf
data16
cmp
gs
adc
push
popf
pop
jbe
add
xchg
movb
stos
push
fdivrl
jp
ss
xchg
mov
cmovs
ja
bound
data16
out
call
xchg
mov
imul
mov
mov
repz
sbb
xchg
mov
daa
and
rcrb
mov
xchg
pop
aam
push
lods
jno
pop
and
mov
cld
ficoms
xor
or
mov
and
adc
jo
enter
jnp
cmp
sub
jo
and
push
and
add
insl
sbb
jbe
sub
inc
jno
xor
fisubs
mov
mov
ja
pop
cltd
loop
or
mov
inc
push
pop
loope
bound
pop
cmpsl
divb
mov
jae
lods
fxch
mov
je
enter
andl
push
push
sahf
or
jp
shll
jno
adcl
mov
sbb
cmp
jge
push
xor
mov
je
shl
lds
rorl
enter
xor
daa
mov
mov
popa
cmp
dec
roll
stos
sbb
mov
mov
xchg
dec
fstps
cmp
icebp
cmp
mov
adc
cld
jne
das
leave
ljmp
adcl
pop
pushf
pop
or
sbb
mov
jbe
movsl
cmp
scas
shrb
inc
cli
decl
sbb
data16
mov
xor
add
adc
inc
push
cltd
data16
pop
lcall
xor
fstpl
jbe
mov
stos
xor
pop
test
fists
and
mov
loope
jle
mov
xor
pop
mov
je
mov
adc
pop
mov
push
scas
in
jae
insl
dec
jae
jl
fcmovnb
imulb
cmc
adc
jo
pop
fiaddl
xchg
sbb
pop
jecxz
ja
arpl
push
stc
fs
pop
sub
jl
dec
push
fisttpll
pop
mov
push
sbb
movsl
jle
cltd
cmp
popf
jle
mov
jbe
lea
jecxz,pn
js
movsl
mov
imul
movsl
pop
stos
mov
inc
xchg
enter
push
cmpb
stos
pop
push
mov
nop
andl
jb
sub
adc
add
adc
ja
cli
mov
fsubl
xor
add
call
aaa
jb
inc
xchg
pop
push
cmp
pusha
cmpb
mov
or
mov
jecxz
pop
jp
scas
inc
xlat
mov
inc
jnp
leave
in
pusha
out
jg
fildl
adc
push
dec
aam
cmp
test
xchg
fistpll
sub
cmpsb
stos
ret
stos
cmp
sbb
jbe
pop
inc
lods
cmp
mov
sbb
clc
mov
ret
dec
fdivl
lea
stos
nop
es
xchg
jae
pop
mov
cmp
and
xorl
pop
das
and
or
loop
dec
int
gs
loopne
pop
dec
sbb
adc
test
push
or
icebp
pusha
mov
push
cmp
jp
addr16
xor
dec
xchg
xchg
mov
xlat
hlt
cmp
pusha
pop
dec
and
stc
mov
loope
stos
jne
mov
jbe
mov
xchg
ficomps
sar
xchg
jp
mov
outsl
js
mov
es
data16
outsb
xchg
fdivrp
mov
mov
push
mov
pop
xchg
sub
je
sub
sbb
fdivr
in
sbb
ja
hlt
push
ret
fnsave
lock
jne
xor
out
lea
and
cmpsw
xchg
jl
lods
int3
pop
xchg
aaa
cmp
js
mov
xchg
mov
pushf
jae
shl
inc
leave
pop
jo
add
sbb
push
orl
and
jb
les
adc
jp
inc
pop
add
xchg
dec
hlt
mov
inc
shl
movb
mov
rcr
ljmp
icebp
cmp
adc
jg
sub
and
pop
dec
clc
or
mov
shld
or
mov
dec
inc
pop
cli
jle
mov
adc
jl
sti
dec
xchg
rorb
add
jne
xor
adc
mov
outsl
mov
sub
in
mov
loop
add
push
mov
jl
jno
sbb
mov
out
cmpsl
sbb
add
es
lret
pop
ds
sahf
add
pop
loopne
mov
fimuls
sahf
in
and
sbb
pop
pushf
xchg
pop
mov
mov
cli
pop
mov
enter
lret
out
or
mov
and
les
xchg
pushf
push
and
pop
mov
shrl
pop
xchg
call
add
jbe
mov
decl
repnz
inc
aas
and
stos
pop
into
sarl
jecxz
mov
bound
sbb
subb
xchg
sub
fs
popf
mov
or
sbb
stos
lcall
xchg
and
repnz
cld
lahf
sbb
ds
or
push
xchg
dec
sub
aaa
in
mov
cli
negb
jmp
ljmp
xor
testb
mov
lcall
mov
xchg
xchg
cli
and
xor
xchg
in
outsl
out
xor
xlat
adcl
adc
or
jl
cmp
push
jno
cmp
aad
mov
adc
xor
shll
push
outsb
jns
test
nop
pop
popl
mov
iret
pop
xor
mov
jecxz
sbb
cmp
cmp
sub
mull
mov
and
and
sbb
pop
jns
clc
fcmove
movsl
scas
inc
or
xchg
sub
and
inc
enter
rorb
push
ficompl
testb
jnp
sahf
repz
lret
or
inc
jg
ds
mov
mov
arpl
cmp
xchg
rcl
cltd
std
test
and
sub
stos
and
out
dec
ss
loop
adcb
pop
pop
xchg
jno
jp
insl
cld
mov
stos
and
xchg
fwait
dec
orb
pushf
add
add
pop
inc
stos
out
dec
jg
addr16
fistl
inc
rcl
insb
mov
xchg
stc
ja
pop
sahf
jmp
std
cli
inc
mov
int3
sub
pop
outsb
pop
clc
mov
mov
mov
push
mov
idiv
mov
cmp
xchg
cmpsl
mov
mov
add
sahf
push
dec
lahf
rol
jno
pop
scas
xchg
aam
rcl
push
dec
ljmp
out
sub
jo
adc
insb
add
ficoml
pop
nop
or
add
push
gs
fcmovb
sarl
stc
adc
fdivrl
jp
movsb
mov
adc
cmpsl
xor
lret
stos
jnp
adc
adc
ret
jnp
pop
push
jl
mov
jecxz
jno
inc
add
or
popa
sahf
adc
cmp
push
pmulhuw
out
dec
insb
iret
jb
sub
je
sbb
enter
and
loopne
and
loop
or
and
push
mov
jbe
adc
jb
or
loop
pop
std
icebp
mov
out
push
nop
rorl
mov
ds
jno
sti
jp
dec
inc
lret
and
xchg
cmp
and
xchg
inc
fisubs
pop
sub
add
frstors
fildl
and
dec
sahf
sbb
mov
and
push
and
cmp
shlb
pusha
aas
xchg
fwait
out
out
test
pop
adc
cs
push
and
xchg
dec
cmp
insb
fsubl
push
push
pushf
lods
insb
shll
ja
mov
addl
jb
push
fadds
rolb
fnstenv
pusha
push
sub
out
and
cmpsl
mov
inc
adc
xchg
nop
test
les
add
loop
inc
mov
aaa
mov
stos
adc
pop
loopne
aaa
hlt
jl
xchg
enter
cmp
fbstp
rcrl
push
roll
push
dec
gs
fcomi
sub
jo
icebp
pop
nop
mov
out
aad
in
inc
xor
jle
and
lret
shll
cmpsb
stos
lahf
mov
sub
inc
xor
sub
mov
inc
push
and
and
mov
push
orl
out
shll
test
js
pop
dec
jno
pusha
bswap
or
sub
mov
int
xchg
xchg
shl
push
bound
out
dec
lret
pop
jb
imul
mov
and
loop
xchg
adc
and
xor
xor
pop
fcmovb
pop
cmp
mov
pop
jecxz
mov
sub
subb
bound
nop
jle
mov
xchg
fnstenv
cmp
in
inc
mov
mov
push
sbb
add
sbb
mov
jo
or
push
cmpsl
enter
jo
cld
mov
inc
loop
mov
scas
hlt
movsl
inc
sti
icebp
push
jg
jp
dec
mov
pop
jae
inc
enter
rclb
xor
and
inc
pop
pushl
sub
shll
xchg
mov
mov
jno
xchg
ret
adc
out
or
or
mov
leave
or
add
add
dec
or
sub
adc
xchg
or
mov
lret
jl
sub
pop
lret
mov
xlat
mov
jp
pop
mov
mov
movsb
insl
pushf
cmp
mov
rorb
adc
inc
loopne
out
adc
bound
stos
mov
cmc
repz
fcomps
outsl
cmp
pop
jae
loop
xor
sbb
pop
sub
and
cli
push
popl
out
pop
cmp
fbld
push
adc
cli
mov
pop
or
test
or
and
cmpsl
cld
sbb
xor
cmpsb
gs
out
or
shlb
push
insb
xchg
xchg
xlat
lods
jno
fnstcw
cltd
pop
push
into
mov
cmpsl
mov
fwait
cmp
and
jae
add
pop
inc
or
fldenv
or
loope
mov
insb
xor
push
gs
jno
mov
xor
lds
mov
xchg
xchg
mov
decl
outsl
add
jne
add
cmp
mov
sub
mov
imul
fisttps
xchg
xorb
cmp
jecxz
icebp
out
inc
mov
fwait
test
cmp
mov
packssdw
pop
testb
mov
jge
xchg
lcall
dec
ret
inc
cmc
les
enter
adc
jae
push
dec
dec
insb
adc
adc
clc
xchg
adc
sub
sbbb
orl
push
int3
ret
mov
das
xor
push
les
lcall
sbb
std
jmp
jbe
dec
xor
out
sub
mov
pop
xor
xchg
cli
arpl
push
ret
mov
and
jg
mov
std
aas
leave
cli
fs
mov
inc
and
cmpb
adc
shlb
mov
xor
sbb
scas
adc
loop
sub
pop
adc
movsl
ffreep
xchg
rcrb
aaa
or
scas
lea
inc
addb
cmpsl
mov
sbb
cmp
fdivrp
pop
data16
pusha
repz
out
push
sub
sti
stc
sbb
arpl
and
mov
pop
subl
js
bswap
and
mov
lds
pop
xchg
int3
inc
loopne
ret
popf
inc
shll
lds
mov
mov
test
cmpsl
jno
pop
icebp
insb
mov
xor
cwtl
cmp
mov
jp
fcoml
xchg
pop
lock
jno
aad
inc
jecxz
idivb
cltd
jecxz
jb
gs
repz
outsl
aas
sti
mov
hlt
or
pop
xor
push
ljmp
sub
bound
or
mov
fsubrl
popa
rorb
sub
or
pushf
lahf
push
mov
outsb
adc
and
fstp
popa
into
inc
inc
cli
test
int3
xchg
aas
dec
xchg
pop
dec
or
adc
pop
lock
dec
or
mov
push
jb
insl
jecxz
jle
clc
lods
mov
addr16
mov
xor
xor
push
lea
loope
icebp
or
imul
add
mov
jp
data16
es
jge
or
pop
mov
add
test
or
sub
pop
dec
orb
loope
ror
adc
test
xchg
mov
sti
sarl
jle
es
scas
hlt
leave
jnp
mov
std
fisttpl
xchg
push
sbb
aam
mov
push
ss
cmp
and
test
stc
adc
hlt
sub
mov
cmpsb
mov
fsubrs
ret
inc
jae
pop
add
aad
sti
add
jb
push
call
fldcw
cmp
lret
lahf
enter
jecxz
jp
push
sub
inc
out
xchg
xchg
cmp
mov
mov
icebp
in
imul
fnsave
pop
or
cs
cwtl
dec
inc
sub
xchg
xlat
das
aas
cmpsl
pop
pop
movsb
cltd
in
out
call
mov
add
iret
xor
cmpsb
stos
insb
pop
dec
xor
popa
sbb
mov
xchg
fildl
aaa
lods
mov
dec
jp
xlat
cmpsl
and
fldln2
xor
push
je
jns
mov
hlt
movb
stos
in
xor
xchg
stos
es
adcl
push
jne
insl
xchg
jge
cmp
arpl
into
cmpsb
mov
push
mov
subb
xchg
mov
test
gs
jge
or
rorb
addr16
iret
jno
mov
rcll
jae
adcb
adc
dec
aad
inc
jae
xor
adc
or
jge
cltd
mov
out
and
sbb
ds
test
popf
xchg
inc
pop
sbb
pop
imul
cmp
fsubs
adc
call
inc
push
mov
inc
mov
and
and
xor
inc
dec
mov
jp
pusha
stos
lret
and
mov
test
pop
sbbb
mov
into
pop
mov
aas
imul
scas
and
movsl
cltd
std
sbb
xchg
push
push
mov
adc
xchg
jecxz
add
jmp
jecxz
and
ss
push
add
aam
and
dec
mov
sub
int3
jnp
leave
mov
popa
gs
mov
mov
mov
jbe
sarl
popa
mov
lods
enter
mov
sub
mov
ret
fstl
jl
iret
jmp
pop
fldl
xchg
add
pop
js
es
addr16
aas
sarl
dec
mov
xor
cmpl
lods
mov
and
out
rorl
repnz
std
out
scas
add
dec
push
xlat
ret
cmp
sbb
push
mov
and
dec
int
push
mov
inc
scas
stos
lock
das
shrl
add
sbb
mov
ja
shlb
and
sbb
loope
jno
dec
daa
aaa
lods
mov
sbb
int
repnz
push
add
icebp
jo
repz
scas
xor
icebp
inc
jne
lret
pop
fcomp
lds
call
xchg
and
ja
les
repz
add
adc
jno
inc
mov
mov
xchg
cmp
pusha
xor
push
subb
ret
sub
pop
les
pop
imul
mov
push
cmp
rcrl
fxch
adc
daa
push
push
cmpsl
dec
repnz
pop
mov
push
push
dec
mov
xchg
test
orl
adc
leave
sub
es
sub
jbe
xchg
aad
add
stos
push
sub
lds
jg
mov
popf
pop
add
jl
lods
loop
insb
jmp
andb
dec
sub
icebp
xor
jo
das
sub
inc
shl
call
jecxz
aas
jecxz
dec
add
mov
divl
mov
mov
imul
sbb
mov
cmp
xchg
sarb
xor
cmpsl
push
adc
jge
sti
add
fistpll
ss
pop
sub
mov
pusha
xchg
jns
gs
or
popa
imul
and
xchg
xor
sbb
hlt
cli
jae
and
inc
movsl
jp
imul
bound
addr16
ljmp
mov
push
std
jg
fstps
sbb
add
xchg
lahf
insb
sub
fs
xchg
outsb
push
in
stos
stos
daa
and
jmp
ljmp
rcr
in
or
subb
enter
shll
pushf
adc
arpl
dec
je
outsl
jge
or
lods
sbb
sbb
add
xchg
and
dec
popa
int
in
pop
sub
sub
cmpsb
add
jns
jne
into
icebp
adc
cmp
shl
xor
int
inc
inc
mov
push
sub
add
test
int
out
push
inc
push
xlat
push
scas
movsl
pop
jbe
or
push
xor
lods
aad
aad
push
xchg
test
lods
addb
mov
fwait
and
push
mov
adc
repnz
fisttpl
sbb
cmc
cmpsb
ds
dec
test
dec
jb
jle,pt
jns
in
xor
mov
dec
dec
lods
std
pushf
popf
and
sub
inc
lcall
popl
lret
inc
pop
test
mov
fwait
xchg
pop
mov
push
mov
cmpl
xchg
inc
jo
mov
mov
adc
push
in
fisttpl
adc
fs
and
dec
jp
rorl
pop
adc
or
xchg
cmp
or
in
fstl
packsswb
std
leavew
inc
mov
sub
push
mov
add
lret
jnp
xlat
loopne
shl
cmpsl
jo
ja
inc
mov
hlt
aaa
cmp
cmpsb
lea
in
rolb
mov
push
add
lods
or
popa
inc
add
mov
shl
cmp
mov
test
leave
mov
xor
adc
fwait
xlat
adc
mov
data16
cltd
cmp
pop
pop
insl
cmp
jl
cmp
jecxz
imull
leave
test
out
and
jno
push
push
push
mov
in
push
push
add
fidivrl
imul
in
in
adc
enter
fs
pusha
dec
int
sti
imul
insb
add
mov
cwtl
jb
mov
les
int
repnz
xor
dec
scas
push
sub
repnz
push
iret
mov
add
lods
fstpl
and
push
xor
js
jp
out
mov
xchg
icebp
bound
in
les
jnp
adcb
adc
ljmp
dec
mov
insb
cmc
sub
int
add
cmc
pop
adc
fwait
mov
mov
xor
loopne
mov
xor
rcll
daa
or
xchg
cmp
pop
cmpsb
pop
xchg
add
aas
inc
mov
jns
andb
or
in
pop
subb
lcall
popa
and
mov
mov
adc
push
and
sbb
push
jae
adc
push
sarb
push
xchg
cmp
test
ss
shr
xor
adc
js
imul
add
dec
fstpl
mov
shll
lods
sub
adc
lods
jle
outsl
cmp
jns,pt
std
in
mov
lret
sub
mov
into
outsb
inc
pop
mov
push
sti
stos
imul
jl
add
loope
cmp
lds
sbb
xor
adc
mov
insb
ljmp
daa
fldenv
stos
fldt
mov
outsb
jns
pop
or
jg
into
sbb
movsl
mov
mov
imul
pop
push
dec
shll
out
int3
push
mov
cltd
dec
push
mov
lods
sahf
cmp
sysexit
shrb
mov
test
jge
aad
cs
nop
outsb
mov
inc
popf
dec
jbe
and
mov
sub
sub
mov
rclb
mull
aaa
popf
rcl
popf
sarl
cli
and
xlat
xchg
pusha
ljmp
add
sbb
cs
mov
push
xchg
out
cmp
sub
push
adc
gs
pop
in
fildl
movq
ljmp
movsb
push
ret
push
mov
je
fidivrl
loopnew
xchg
xchg
imul
repz
fucomip
mov
jle
mov
sysret
ret
cld
cmc
and
pop
pop
pop
outsb
cs
push
cs
mov
push
sub
or
fidivrs
pushf
out
inc
push
push
out
xchg
xchg
rol
adc
and
leave
mov
or
aaa
xchg
in
and
mov
rolb
push
cli
mov
xor
pop
lahf
pop
test
xchg
xchg
mov
jnp
sbb
xorb
loope
xor
add
jne
test
fiaddl
mov
test
jge
popa
iret
xor
into
out
data16
cli
xor
or
lock
lret
and
dec
mov
cs
fldl
arpl
jecxz
test
stos
test
and
add
mov
xor
sahf
and
xchg
out
jne
daa
sub
sbb
jg
cwtl
adc
jno
je
sbb
jno
mov
sti
mov
out
scas
imul
jno
mov
cmp
bound
aas
dec
pop
or
mov
jle
mov
outsb
inc
leave
pop
cwtl
subl
pop
jle
sarb
hlt
xchg
pop
sub
jne
out
cli
jne
gs
jmp
cmp
jmp
setle
xchg
dec
pushf
les
or
push
sahf
jno
pop
push
and
mov
lods
mov
inc
inc
out
fbstp
lcall
loope
inc
inc
into
add
idiv
adc
xor
ret
and
mov
lds
mov
push
and
sar
mov
and
popf
in
leave
mov
iret
cmc
pop
xchg
fwait
int3
in
and
or
and
cs
add
jl
adc
ror
lods
jns
stos
inc
pop
into
and
sbb
jle
mov
fwait
test
lods
fbld
rorb
or
push
call
scas
push
repnz
lea
in
xchg
loopne
push
ja
movsb
fstpt
cbtw
stos
add
out
xor
jno
shrl
cmp
dec
inc
mov
cmpsl
cmpsl
addl
sub
sub
cmp
mov
movb
popf
repz
out
lcall
std
xor
lcall
dec
adc
aaa
mov
pop
lock
push
inc
rcll
or
cmp
jae
xor
fcomps
sub
jl
cmp
les
lret
stos
lock
ss
in
add
ss
and
mov
mov
or
pop
jno
icebp
enter
rolb
stc
jbe
cld
cs
loope
repz
lock
int
mov
lret
pushw
pop
adc
mov
cmp
push
cmp
mov
test
rcr
inc
xor
mov
dec
div
pop
popa
adc
mov
mov
fildll
sar
xchg
int3
aam
xor
dec
xchg
iret
dec
add
insl
shlb
data16
das
cmp
xchg
outsb
xchg
in
cs
adc
or
loope
pop
icebp
test
js
lea
mov
loop
andnps
cltd
xchg
iret
and
adc
cld
mov
int
scas
dec
dec
imul
jmp
in
push
repz
mov
sbb
clc
xorl
test
mov
in
ss
je
je
xor
loope
movsl
xor
jp
pop
pop
mov
adc
addr16
addr16
adc
daa
mov
test
jo
pop
push
xor
push
movsl
adc
fdivrl
stc
in
cld
nop
cmp
adc
cld
and
mov
push
add
lock
add
cmpl
push
mov
mov
push
inc
or
pop
out
dec
mov
in
pop
stos
push
pop
inc
cmpsb
cmp
xchg
stc
pop
or
insl
cmc
inc
psrlq
fimull
jno
stos
in
xchg
push
ljmp
idivb
push
cwtl
das
cs
imul
inc
or
pop
and
movsb
jecxz
stos
cli
sub
mov
lods
mov
push
and
lret
mov
jo
ds
scas
xchg
push
push
mov
jg
add
cmp
fimuls
sub
pop
adc
and
cs
or
cmpsl
mov
jns
sbb
pop
xchg
popa
fstps
popa
jecxz
nop
popf
jnp
cmp
movsl
push
mov
call
push
dec
dec
testb
mov
sahf
pop
daa
loope
int
out
flds
jo
mov
es
gs
test
or
jmp
push
sbb
stc
sub
pop
mov
inc
xor
cmp
div
jge
out
xor
test
ret
cmp
push
pop
pop
lret
and
inc
jmp
out
in
sbb
sarl
repz
inc
je
sarb
jb
mov
rcll
icebp
sub
out
inc
cmp
inc
add
pushf
sub
push
cmpsb
adc
inc
dec
xchg
fisubrs
shr
lods
repz
jge
fidivl
sarl
inc
addr16
loop
or
testb
lds
lock
inc
pop
push
push
mov
outsl
call
dec
jge
push
scas
and
xchg
inc
out
cmp
jmp
dec
xchg
and
inc
sbb
lcall
inc
jmp
mov
inc
xor
ja
in
lret
lret
sub
fistpl
mov
push
push
out
ficomps
xchg
fldcw
or
cmp
jns
jae
rorl
cmp
dec
aam
rclb
sub
adc
iret
or
xlat
jmp
dec
loope
icebp
stos
out
clc
in
mov
push
sbb
std
and
jp
enter
loop
enter
xor
jno
pop
test
lea
jbe
shrb
xchg
sub
popf
lods
cli
sbb
cwtl
cwtl
jp
xchg
test
add
push
mov
inc
outsb
mov
mov
push
stos
jne
movsl
mov
xor
aad
jns
imul
push
xor
les
pop
clc
add
ret
cmp
cli
cld
push
std
push
xor
test
int3
xor
add
pop
popa
xchg
repnz
cmp
and
jmp
pushf
mov
and
loopne
inc
xor
fs
ljmp
and
xchg
cs
repz
outsb
fcmovnu
stos
lds
mov
sbb
cltd
shl
in
pop
mov
mov
and
xchg
xchg
sbb
lret
mov
fldl
xchg
push
xchg
rolb
movsb
add
hlt
mov
add
inc
into
xor
cltd
hlt
cs
orb
or
push
fs
sbb
repnz
adc
cmp
stc
cmpb
aam
jbe,pn
xchg
icebp
xchg
cmpsl
jnp
lea
sub
out
add
bound
adc
or
adc
pop
push
adc
aam
adc
inc
repnz
adc
pop
jle
dec
jns
les
insl
cmp
dec
sbb
push
lcall
fiadds
sbb
add
inc
aas
leave
fistps
movsl
addr16
aad
mov
rorl
dec
pop
add
in
sahf
pop
add
ja
xor
lds
bound
and
enter
and
jecxz
cmp
mov
fiaddl
inc
dec
inc
test
es
dec
fwait
lcall
cli
and
push
push
test
lods
popf
pop
fsubl
jno
or
or
jb
sahf
adc
cwtl
stc
or
adc
int
xlat
add
call
pop
jbe
adc
mov
pop
mov
inc
sbb
pop
adc
inc
adc
sbb
insb
filds
jbe
lock
xlat
push
pushf
gs
cmp
jmp
mov
out
lods
cmp
gs
shlb
pusha
mul
cmpsl
jl
or
lds
and
lea
pop
inc
lcall
sub
sbb
imul
sub
mov
jae
cmp
test
xor
movsb
and
es
xor
sub
fdivl
popf
pop
sub
insb
dec
cmp
mov
push
dec
cmp
lcall
aaa
sub
test
or
adc
mov
push
fwait
and
fwait
mov
inc
cld
call
jne
daa
xchg
idivb
sbb
add
cli
mov
daa
jge
outsl
push
jno
lods
sub
data16
inc
test
enter
int3
xchg
rorb
sub
dec
and
push
mov
iret
mov
pop
or
xorb
add
xchg
jl
js
mov
adc
mov
movsl
or
sbb
sbb
sub
jnp
mov
pop
jp
cs
add
gs
jp
cmp
mov
mov
dec
sahf
xchg
jnp
inc
lods
mov
cwtl
fcmovnb
cmp
addr16
jb
movsb
sub
sub
xor
pop
inc
cmp
push
test
mov
flds
leave
imul
orl
dec
int
divb
mov
fsubrl
pop
add
pop
dec
or
mov
ljmp
dec
loopne
push
mov
mov
pop
mov
insl
push
mov
push
out
cmpsb
out
arpl
cmpsb
bound
push
subl
cmp
mov
pushf
xchg
das
insl
mov
mov
add
arpl
dec
lea
out
les
or
shrb
sub
lcall
in
fists
out
mov
out
inc
add
dec
mov
cmpsb
addr16
lock
stos
not
and
in
jb
out
dec
icebp
mov
fucompp
push
aas
mov
aad
sbb
push
adc
push
pop
and
in
ljmp
dec
sbb
out
rcl
out
sub
dec
daa
int3
push
push
push
mov
sti
push
lcall
push
shll
scas
add
inc
push
fsub
scas
push
sub
lds
aad
xchg
leave
movsb
push
push
xor
jp
sbb
mov
add
les
pop
lret
sbb
mov
sub
testl
fnsave
call
or
push
push
pop
testb
sub
mov
xchg
add
in
inc
bound
inc
shll
cmp
xchg
sbb
imulb
push
cmp
les
adc
push
test
dec
cmp
insl
dec
push
subl
push
out
sbbb
pop
sub
insl
fucomi
push
sub
push
dec
pop
rep
movsb
jb
scas
sub
sar
test
lea
cmp
stc
lods
jne
xchg
sub
dec
mov
shll
scas
push
cmpsl
sbb
mov
xor
jle
movsl
es
adc
outsb
or
pop
sub
and
dec
shll
push
mov
add
jp
rcll
popf
mov
lea
scas
cmp
aaa
adc
bound
cmp
movsb
sbb
dec
int
movups
in
fstp
push
sbb
aaa
pop
repz
mov
mov
jg
loopne
adc
test
jmp
sbb
push
add
repnz
pop
adc
int3
fists
jl
and
out
push
mov
xor
push
dec
mov
mov
mov
inc
cmp
push
popf
mov
xor
test
mov
adc
repnz
pop
lock
inc
jae
in
cmpsb
mov
or
in
cmp
test
inc
mov
pop
add
push
imul
sub
idivl
xchg
mov
rcl
push
imul
or
mov
mov
repz
mov
fldlg2
movsl
jmp
mov
ret
pop
mov
pop
adc
adc
push
cs
in
and
dec
or
in
hlt
pop
addr16
daa
push
arpl
call
xchg
and
xchg
aas
lcall
leave
jge
aaa
ficomps
jg
pop
jge
adc
push
mov
rclb
mov
sbb
jge
popa
mov
mov
cwtl
fwait
or
push
loope
add
mov
jmp
jne
push
xchg
fs
mov
cmp
cs
addr16
mov
aam
jb
mov
sub
lahf
std
dec
add
push
xchg
gs
test
dec
push
lcall
nop
repnz
pop
sti
and
sahf
and
repz
movsl
xchg
mov
pop
xlat
add
mov
mov
addl
mov
pop
inc
lret
sbb
inc
lods
push
mov
push
push
cmp
test
cmpsb
frndint
shrb
test
mov
xchg
and
hlt
enter
fucomip
mov
push
int
repnz
in
mov
mov
xchg
inc
fiaddl
jnp
pop
pop
jecxz
mov
add
add
cltd
jmp
stos
xchg
popf
inc
inc
out
sbb
mov
adc
mov
mov
jp
push
divl
into
mov
dec
rorb
mov
sub
lds
xlat
fmull
mov
ret
sbb
test
or
adc
call
fldl2t
ja
cmp
sbbl
pop
in
jecxz
push
clc
cmpsl
mov
push
mov
jbe
xchg
cmovno
jb
mov
xor
xchg
or
fs
xor
xchg
test
push
xchg
and
ds
mov
jns
ret
pop
add
mov
rolb
jecxz
filds
dec
push
mov
stos
or
xor
addr16
mov
mov
or
xor
fdivl
inc
imul
data16
cmpsb
out
or
sbb
clc
sub
into
cmp
mov
fidivl
fsubl
sub
xchg
xor
fidivs
mov
popf
aam
shl
push
inc
cmp
lods
loop
iret
mov
sahf
mov
mov
push
dec
repnz
js
aam
and
mov
das
push
mov
faddl
bnd
or
push
aaa
pop
stc
pop
adc
pop
and
pop
out
test
mov
or
aam
inc
jne
cmp
jmp
dec
push
cmc
xchg
js
sbb
or
inc
adc
adc
sbb
iret
xchg
js
cmpsl
test
pand
sbb
fsub
loopne
jg
sub
pop
shl
movsb
in
ret
xchg
mov
mov
idiv
imul
mov
ljmp
outsb
jo
sbb
mov
adc
or
into
xor
out
fldcw
mov
sub
xchg
pop
imul
add
subb
mov
notb
in
push
cmpsl
xor
lock
and
and
in
int3
xor
push
push
pop
mov
dec
push
dec
mov
mov
sbb
adc
clc
stos
jne
sub
push
mov
loope
add
jno
mov
xor
leave
int3
pop
js
in
xchg
lret
ljmp
scas
mov
mov
faddp
stos
xchg
daa
sbb
mov
lcall
lods
fcomps
shlb
xchg
jo
lea
shlb
mov
js
int3
jb
call
jnp
out
pop
dec
hlt
xor
aad
adc
enter
or
lea
fisubs
popf
or
sub
jb
xchg
lahf
mov
inc
inc
or
push
jg
add
cmpsl
xchg
push
xchg
hlt
or
cmpsl
test
mov
push
jle
mov
fs
mov
loope
sbbl
icebp
repz
mov
push
jl
lret
pusha
mov
call
adc
adcl
rorb
jnp
sub
xchg
xchg
repnz
rcll
jl
shrl
pop
daa
cmp
int
and
ja
or
pop
das
mov
dec
add
add
and
jae
les
mov
adc
cmc
into
and
push
mov
lret
xchg
mov
mov
push
jp
jl
loope
fdivrs
mov
cmpb
jo
shrb
push
mov
ret
rcll
and
or
adc
or
jecxz
stos
pop
jne
xchg
jo
jg
aam
pop
hlt
clc
into
imul
scas
loope
fidivs
lods
loopne
mov
mov
stos
insl
imul
jne
dec
insb
rclb
xor
cmc
lahf
jp
ss
push
enter
inc
loop
imul
add
cld
cmp
xchg
les
sub
pop
popf
lret
negb
push
fstps
inc
inc
sbb
outsb
lods
mov
jnp
mov
add
inc
sbb
pop
inc
jmp
adc
js
dec
out
and
out
faddl
sub
mov
jnp
mov
jno
enter
jno
lahf
repz
outsl
xor
cld
aas
sti
xchg
inc
dec
xor
lret
jg
adc
jg
jle
lock
mov
mov
in
mov
js
aaa
pop
dec
xlat
cmpsb
jne
or
fiaddl
pop
mov
mov
push
dec
push
fisttpll
cwtl
cmpsl
jmp
cmp
push
xor
iret
sbb
les
daa
push
mov
pop
mov
inc
in
jle
xchg
bound
mov
jno
mov
sbb
push
dec
lock
in
pusha
int
mov
fidivrs
icebp
pop
cli
push
jo
cmp
cmpsl
inc
lds
inc
sub
call
dec
fildll
jmp
dec
adc
inc
test
mov
dec
pop
enter
iret
jns
inc
into
dec
mov
push
or
in
sti
mov
addb
mov
sbb
jmp
ljmp
std
mov
outsl
repnz
fldz
mov
sbb
daa
aad
and
mov
xchg
pop
cltd
adc
pop
ja
pop
push
fcmovb
outsl
mov
add
add
aad
movsb
sbb
fdivrs
inc
lods
cmpsb
cld
mov
loop
stos
xor
mov
or
lret
mov
iret
mov
sbb
xor
pop
subl
mov
cmp
lea
and
xor
movsb
dec
mov
mov
ljmp
push
pop
sbb
push
xor
cld
jns
mov
add
imul
popa
and
or
sar
in
dec
addr16
lods
adc
mov
xor
jecxz
nop
inc
fwait
push
test
and
mov
xor
cmp
out
mov
ret
push
dec
lods
loope
or
pop
inc
inc
dec
ja
loop
sbb
mov
or
dec
call
adc
scas
es
mov
lret
jg
scas
add
jno
test
xchg
push
test
cmp
fdivrp
push
mov
sub
push
adc
inc
cmpb
out
andb
ret
add
scas
rorl
fists
test
out
adc
pand
test
test
push
jmp
mov
mov
repnz
or
xchg
data16
mov
pop
jbe
andl
sub
pop
mov
data16
mov
cmp
mov
scas
in
dec
adc
add
adc
imul
jae
iret
fdivp
jg
scas
int3
add
cld
aad
cmp
rcll
push
stos
call
cmp
add
cmpsb
xchg
and
insl
xor
stos
int
aam
cmc
mov
fnsave
mov
mov
in
lods
xor
rorb
inc
fdivs
out
les
push
add
in
xchg
fwait
or
stos
mov
xchg
bound
mov
mov
mov
sub
push
arpl
je
mov
nop
or
andb
frstor
sbb
jbe
or
sahf
push
mov
lds
outsb
imul
cmpsb
mov
mov
sbb
inc
and
inc
jmp
push
cltd
inc
mov
daa
gs
mov
dec
mov
ja
repnz
xlat
popa
std
adc
sbb
adc
xchg
mov
mov
pop
in
std
int3
in
aam
sub
jmp
subb
cmpsb
mov
xchg
and
add
mov
add
mov
pop
mov
jl
std
nop
into
mov
push
cmp
mov
arpl
nop
push
xchg
push
mov
call
lret
jmp
adc
push
or
scas
addr16
lret
dec
hlt
insb
jo
jno
mov
cltd
pusha
int3
stos
cmc
xlat
mov
scas
and
andb
call
push
negb
jo
mov
push
pusha
out
add
ja
js
jo
mov
inc
inc
ss
nop
ret
cli
push
jae
jl
add
jl
xchg
das
ss
into
movsb
daa
in
or
add
jae
fsubr
fcomip
in
sarl
aad
cmc
dec
cmp
cmp
xchg
xor
dec
sub
push
loop
aam
pop
fdivs
movsb
loopne
shrl
repz
mov
ret
cs
mov
and
iret
js
xchg
aaa
and
fidivrs
ror
dec
fdivs
clc
inc
lret
sbb
ds
in
or
jle
int
repnz
loopne
add
mov
push
jmp
mov
xchg
fprem
and
jno
pop
ds
pop
sbb
inc
out
sbb
xor
jnp
add
out
sub
in
js
aas
or
inc
ret
jmp
xchg
aam
into
rcr
pop
jnp
mov
jg
cmp
push
pop
in
push
sbb
sbb
arpl
mov
dec
mov
jmp
lret
imul
in
ljmp
push
adc
stos
mov
push
dec
lret
xchg
inc
xor
mov
in
adc
fistl
push
stc
sbb
sbb
dec
mov
test
test
lods
loope
loope
mov
xlat
push
fsubr
aaa
popa
stos
cmpb
call
ret
push
mov
es
mov
jle
aaa
insb
rcr
xor
int3
dec
fcoml
push
or
dec
bound
ljmp
imul
xchg
insb
push
mov
and
imul
test
int3
mov
shrb
mov
add
cmp
cld
mov
sti
data16
std
jb
mov
mov
mov
or
lret
movsl
stc
push
mov
ds
jne
push
ds
mov
mov
mov
xchg
jmp
fwait
lcall
int
shr
shrl
xor
sub
mov
cmp
add
xchg
or
fadd
popa
iret
decl
xorb
pop
xchg
push
fbstp
ljmp
icebp
dec
xor
fistps
mov
aad
cmp
adcb
enter
mov
mov
sub
out
adc
aaa
add
xchg
jno
dec
lock
mov
mov
and
rolb
sti
sbb
arpl
popf
pop
ss
push
inc
stos
shrl
or
adc
rorb
cmpsl
pop
and
stc
mov
inc
mov
xor
dec
notl
sub
leave
push
mov
pusha
lods
imul
inc
xor
bswap
mov
or
dec
adc
mov
aad
bound
into
mov
xorb
sub
loope
cs
jae
cmp
sbb
and
mov
dec
mov
sbb
inc
outsl
ret
cmc
cwtl
fiadds
cmpsb
mov
js
mov
cmp
pop
pushf
jge
or
or
push
mov
pop
ja
in
das
push
inc
fbld
xchg
jo
test
or
out
mov
test
xchg
es
add
xchg
adc
das
add
inc
add
fsubrs
popf
mov
or
cmp
cmp
divl
mov
push
addr16
jle
stc
lahf
xorb
xchg
lcall
jecxz
pop
pop
dec
xor
iret
pop
insb
xor
outsb
xchg
iret
jb
push
or
mov
fstpt
fstpl
lock
cld
sub
shr
outsl
cmp
push
aas
loop
inc
decl
adc
mov
sbb
jge
lock
gs
adc
decb
xchg
jmp
sbb
lock
cli
pop
jo
jne
or
in
loope
pop
mov
fdivl
sbb
mov
fmulp
sbb
fwait
lret
push
orl
xchg
mov
sub
ljmp
inc
jle
popf
or
lret
mov
push
mov
mov
stos
push
outsb
sub
sub
popf
pop
addr16
jnp
imul
sbb
xchg
stc
ljmp
cmp
pcmpgtw
fstps
sbb
push
mov
sbb
jbe
popa
jno
movsb
fnsave
push
fsub
hlt
stos
xchg
xchg
jmp
cmpsb
jge
mov
mov
pop
cmp
movsb
iret
nop
pop
inc
cmp
or
mov
sbb
lods
icebp
in
push
dec
imul
mov
rorb
cmp
push
cmp
sub
cmpsl
dec
xor
push
xor
fwait
push
xor
test
pop
mov
ret
sub
and
mov
sbb
xchg
rolb
xchg
mov
sbbl
add
out
xor
pusha
jge
jle
rcll
test
sub
push
adcb
or
stos
sbb
add
add
test
push
cmpsl
mov
fidivrl
out
xor
and
in
jp
and
mov
pop
sbb
push
pop
mov
cmc
popa
divl
mov
xor
xor
mov
insl
mov
mov
lcall
sub
or
filds
cmp
add
xchg
stos
out
scas
insl
movsb
add
mov
and
and
xchg
ja
ljmp
and
lods
or
popf
mov
adc
sub
shlb
dec
sub
daa
insl
fwait
sbb
push
mov
mov
ja
in
jae
inc
stc
sub
dec
pusha
iret
sbb
popf
xor
popa
pop
fsts
pop
out
outsl
push
pushf
js
lock
imul
movsb
cmpsl
stc
add
pusha
and
adcl
inc
jae
cmp
daa
int
cld
rclb
popa
stos
test
xor
rcrl
jle
push
in
pop
cmp
enter
cmp
movsb
rol
adc
mov
adc
pop
ret
push
add
inc
sbb
jmp
mov
jmp
pushf
mov
sahf
xchg
clc
cli
xchg
and
or
es
dec
sti
jb
test
repnz
in
jne
lahf
and
pop
mov
pop
mov
jl
cmp
movsb
cld
adc
xor
mov
inc
cld
cmp
mov
enter
std
jmp
ljmp
sbb
fisubrl
pusha
lds
xor
mov
lcall
outsl
xchg
adc
pop
aaa
sub
scas
ret
out
insb
pop
inc
divb
popa
fldcw
sub
or
lock
pop
fidivs
mov
mov
ja
push
in
xchg
lahf
push
xor
out
xor
inc
jbe
in
dec
movsb
shl
xor
in
ljmp
mov
std
push
lds
mov
movsl
lahf
clc
cmp
pop
and
fsubs
sub
jnp
rolb
ret
orl
pusha
adc
iret
mov
loope
xchg
pop
adc
mov
sarb
push
ret
int3
add
test
sbb
imul
cld
add
push
adc
enter
mov
shl
adc
loope
sbb
aas
mov
je
mov
pop
mov
pop
pop
add
fs
mov
inc
lret
mov
scas
les
lcall
cld
outsb
aaa
cwtl
icebp
repz
ljmp
mov
jbe
mov
inc
sub
das
ljmp
cmp
ds
sub
test
fsubp
test
sti
push
xor
mov
cmc
test
sbb
and
imul
rolb
call
out
xchg
dec
lret
pop
ss
aas
repnz
arpl
inc
jp
mov
push
push
call
mov
cmp
push
aas
xor
jge
pop
push
add
xchg
jmp
insb
dec
out
mov
stc
and
mov
int
gs
inc
pushl
pop
and
jnp
mov
stos
stc
enter
push
push
mov
adc
pop
call
push
push
orb
pop
jne
scas
or
jp
lcall
repz
xorl
repnz
adcl
pop
ja
loop
xchg
push
push
add
pusha
dec
push
fbld
add
push
cmp
mov
dec
sub
daa
in
pop
and
les
sbb
shrl
les
xchg
rorl
inc
mov
fldenv
test
xchg
ljmp
aad
cmp
rclb
data16
xor
repz
jcxz
or
pop
push
xor
mov
inc
push
ljmp
inc
or
mov
fisttps
int3
jo
imul
loopne
cmpsb
lret
lods
arpl
sub
push
insb
dec
jns
sbb
mov
or
jge
not
add
btc
mov
cmp
sub
or
nop
insb
int
pop
movsb
sti
mov
in
sbb
jbe
push
rolb
jnp
push
pop
sbb
lea
push
int3
jno
dec
lcall
inc
xchg
ficompl
inc
clc
jle
lcall
pop
pop
push
xchg
mov
inc
rclb
iret
and
orb
stc
push
test
mov
jae
and
and
fsts
shll
push
jns
sbb
aaa
dec
dec
push
sarb
ss
out
inc
xor
and
loopne
mov
cmc
xor
stos
sub
mov
mov
ss
cmp
rcrl
test
xor
add
cmc
rorl
rol
insb
fdivrl
aad
jmp
pop
out
sub
in
and
in
add
call
mov
push
push
adc
inc
addr16
subl
imul
or
sahf
ret
pop
and
mov
and
js
outsl
mov
jge
or
jne
push
pushf
mov
mov
lock
movsb
jg
test
dec
fs
push
mov
das
jae
cld
scas
movsl
push
inc
test
and
xchg
sub
mov
cmp
ret
mov
out
sub
pop
movsb
mov
rcr
mov
jns
sub
sbb
test
cwtl
mov
cmp
gs
pusha
loop
ds
jno
loope
dec
dec
lds
mov
movsl
enter
fstl
loope
mov
jmp
ja
std
mov
nop
inc
sub
imul
adc
jg
or
out
pop
bound
inc
adc
mov
dec
into
cwtl
xor
or
push
nop
and
xchg
popf
test
int3
loop
cmpsb
hlt
arpl
adc
test
fmul
subb
or
mov
test
mov
push
jge
pop
cmp
push
sbb
movb
push
mov
sub
cmp
xchg
mov
stc
mov
je
jo
and
xorb
jp
cmp
xor
imul
sub
dec
sub
in
and
add
je
scas
mov
xor
dec
sub
fidivrs
clc
mov
mov
cld
cmp
ljmp
mov
lret
xor
adc
dec
inc
adcl
push
mov
push
jg
pop
rcrb
jge
stos
jle
xor
xchg
mov
and
jmp
or
mov
outsl
push
das
push
and
enter
ror
fwait
mov
jns
add
inc
std
push
ret
notl
mov
xor
adc
sbb
jl
pop
repz
and
inc
sbb
inc
pop
je
mov
cmpsl
lret
inc
cmp
in
insb
je
daa
cld
outsb
lock
push
adc
lret
test
mov
ljmp
movsb
inc
mov
sahf
rcrb
jecxz
lcall
push
nop
stos
dec
sbb
fldt
cmpsb
nop
jp
ret
mov
jg
mov
push
cmpb
inc
outsl
fsubrs
aad
push
int3
fimull
sub
cmpsb
loop
add
pop
pop
xchg
cs
xor
ja
jge
lods
mov
xchg
push
add
ljmp
cmp
adc
mov
loopne
test
insb
testl
popa
fildl
mov
adc
inc
pop
push
fwait
bound
add
ret
lods
daa
and
subl
and
lret
xchg
xor
sbb
pop
arpl
enter
inc
mov
out
jg
cli
orl
imul
and
add
push
icebp
add
pop
dec
daa
push
and
stos
push
stos
mov
mov
std
int3
pop
adc
cld
es
sbb
and
fbstp
mov
jb
and
pop
mov
stos
or
cmpsb
les
mov
xor
xchg
jp
push
lea
pop
pop
sbb
cmpsl
add
pop
mov
into
enter
cmc
push
jae
lock
out
push
movsb
mov
xorl
push
mov
mov
sti
pop
js
je
repnz
jl
xor
xchg
mov
xor
adc
imull
inc
arpl
cmp
jb
test
imul
stc
push
sti
in
xchg
outsl
xor
jp
lods
dec
push
lret
adc
dec
pop
cmp
loope
int
cmpb
pop
sub
daa
pop
sarl
lcall
in
pushf
sbb
and
in
jo
in
int
loop
sbb
xchg
fidivrl
call
in
mov
pop
mov
xor
into
inc
inc
dec
jge
inc
mov
fildll
dec
ret
adc
ss
sub
and
insl
cltd
repnz
or
iret
imul
clc
or
loopne
cmp
out
dec
jl
out
jb
sbb
jno
aas
scas
jecxz
mov
dec
fdivp
sbb
popf
test
or
loop
sbb
add
xchg
xor
push
dec
sbb
loopne
and
push
sub
mov
dec
mov
insb
sbb
pop
sub
mov
pop
arpl
orb
test
xchg
aas
and
jns
mov
and
lea
bound
inc
dec
iret
out
sbb
add
arpl
out
pop
inc
mov
mov
in
out
sbb
mov
cmp
fildll
dec
mov
leave
adc
nop
cmpsl
out
insl
es
xor
das
nop
and
inc
test
ret
mov
cli
sahf
jno
shll
lods
push
mov
in
push
sub
ret
push
mov
sbb
push
add
add
dec
testl
repnz
leave
aam
push
flds
xor
sbb
adc
or
je
leave
frstor
xchg
xor
rorb
notb
mov
jno,pn
jle
dec
push
fiadds
mov
or
add
addb
pop
xor
cld
push
dec
pusha
sbb
mov
mov
insl
push
cltd
in
xchg
mov
mov
pop
jo
inc
mov
outsl
xchg
cs
jp
aad
lahf
ds
lret
jns
ret
mov
out
xchg
jns
mov
mov
cmc
out
pop
enter
jb
jb
inc
jae
call
mov
testl
push
sub
rcr
ffreep
clc
jae
outsb
mov
lea
add
jnp
xor
jge
negb
fldt
andl
xchg
js
pusha
pusha
push
inc
add
sti
scas
jge
adc
cmp
xor
insl
out
and
adc
hlt
xchg
mov
sti
and
in
ror
hlt
xchg
repz
fcom
pop
les
cmp
cmc
adc
cs
inc
insb
xor
dec
jb
fistpl
mov
adc
xchg
and
gs
int
and
and
ficoml
sarb
and
decb
jbe
or
mov
and
mov
scas
sbb
roll
and
mov
xor
fcoml
adc
clc
cs
pop
inc
loopne
js
dec
fadd
call
mov
rcll
lret
sub
pop
int3
loop
fs
insl
fsubrl
scas
xor
ret
or
popa
test
push
sub
add
inc
cmpsl
repnz
mov
cmpsb
jg
adc
cmp
mov
mov
jae
add
icebp
insb
jle
out
int3
add
xchg
call
outsl
outsl
addb
inc
xor
aas
daa
std
stc
stc
push
pop
sub
xlat
arpl
and
pop
lds
aad
add
push
gs
cmp
arpl
dec
jmp
aad
fs
das
push
adc
into
cld
mov
fcmovbe
ds
add
rolb
test
out
mov
pop
fcom
fdivrl
mov
mov
push
negb
jg
pop
jmp
ret
xor
leave
popa
shlb
lods
cs
loope
add
xor
mov
shlb
lret
pusha
lea
pop
in
cmp
pop
pusha
leave
idivb
mov
and
loop
jb
mov
cltd
fnstenv
mov
push
adc
lcall
stos
add
dec
xchg
aaa
or
lret
sbb
stos
or
into
add
mov
push
and
test
mov
jg
xchg
push
and
xchg
mov
clc
shll
and
push
inc
loope
adc
xchg
push
in
jb
test
mov
insl
xchg
ss
icebp
sub
dec
xchg
aas
sub
dec
cltd
aad
dec
test
rcll
pop
pop
xchg
into
cmp
test
jmp
mov
bound
out
sbb
or
popf
aam
mov
stos
sub
xchg
lret
jo
jns
push
call
add
adc
pop
lcall
or
cmp
inc
and
test
shrb
jp
lods
push
push
jmp
test
mov
dec
insb
sbb
mov
xor
jle
shll
data16
mov
mov
popf
jmp
pusha
dec
xlat
push
mov
ja
outsl
dec
adc
xchg
push
or
pop
ja
rclb
loopne
or
pop
or
outsb
sahf
pushl
mov
adc
pop
sbb
imul
adc
xor
js
push
fcmovbe
out
ss
incl
cmpl
mov
rorl
rclb
fistl
jp
sti
aas
aad
fxch
jb
es
sbb
add
xchg
pop
xor
arpl
push
push
jae
add
mov
lret
movhlps
xchg
nop
jp
or
sub
or
je
push
mov
call
push
xor
int
adc
mov
lcall
jge
push
add
rcrb
adc
jns
mov
imul
sub
dec
inc
fwait
sti
push
hlt
lea
mov
add
xchg
idivb
mov
sbb
repz
ja
mov
shrl
mov
inc
adc
mov
xor
mov
mov
jno
popa
imul
mov
dec
std
fs
mov
jl
in
lds
shll
aam
xor
je
les
dec
jge
test
mov
mov
fistps
or
gs
bound
loop
adc
jle
ror
testl
ret
ljmp
fbstp
xchg
push
and
sbb
and
lds
mov
scas
pop
popa
scas
xor
vmread
test
lret
sbb
mov
lahf
push
hlt
fdivr
pop
or
into
rcrb
lret
push
shrb
adc
daa
inc
xchg
data16
mov
shlb
imul
mov
pop
dec
add
imull
cmp
popf
inc
aad
add
cmp
push
iret
mov
lods
lret
sti
cmc
call
and
outsb
mov
xchg
or
adcl
enter
iret
add
arpl
or
daa
lods
push
mov
mov
cltd
sub
in
mov
inc
sbb
inc
in
pusha
inc
imul
loopne
shlb
out
mov
push
sahf
jbe
aad
jge
dec
out
fildll
pop
cmpsl
inc
sahf
sahf
jo
sarl
or
inc
sahf
xchg
pop
inc
cli
mov
pop
add
sub
xor
pop
outsb
pop
pop
movsl
sbb
inc
shld
jo
cmc
xchg
fucomp
mov
int3
loopne
mov
cli
enter
sbb
inc
shll
sub
fs
ja
dec
mov
mov
dec
in
cmp
sbb
aad
out
out
cwtl
mov
dec
push
mov
or
and
or
mov
mov
lds
mov
sbb
mov
or
scas
repz
aad
adc
pushl
jp
es
and
xlat
mov
xor
out
jge
add
call
xor
repz
nop
mov
lock
lahf
pop
sbbl
out
inc
rorl
or
jmp
inc
mov
add
dec
fldt
js
cmpsl
sbb
push
xchg
or
mov
mov
jge
and
jbe
sub
adc
xchg
xor
call
cmp
int3
fnstenv
das
add
fidivs
fidivs
xor
xchg
xor
ficoms
push
jmp
pop
out
mov
push
xchg
popl
fs
pop
mov
cld
test
xor
out
inc
or
addr16
cmp
sbb
sub
adc
lret
js
shlb
mov
sbb
pop
add
les
dec
jmp
push
pop
loope
cltd
fistpl
pop
dec
out
int3
mov
jo
push
xchg
imul
dec
mov
sarl
dec
mov
rcll
pop
sbb
mov
inc
adc
adc
cmp
pop
jp
push
sbb
or
pop
xchg
mov
stos
jnp
mov
aam
es
sub
cmc
cmpsb
mov
and
dec
adc
insl
mov
adc
cld
movsb
add
xorl
cmp
cmp
dec
push
jl
or
mov
sub
adc
cmc
js
jecxz
mov
push
mov
movsl
push
dec
or
and
sub
lods
jo
insl
iret
lret
adc
mov
insl
mov
inc
outsl
and
xor
dec
sub
pop
or
mov
xor
mov
out
jae
adc
dec
sahf
jle
in
pop
cmp
or
aas
sahf
loopne
pop
sub
cwtl
fcmovu
sub
mov
jg
mov
jo
xchg
mov
and
xor
int3
sbb
add
jne
out
insl
sbb
jecxz
pushf
xchg
sbb
mov
jp
jbe
lds
outsl
fisubrs
cmpsb
popf
xor
mov
pop
fcompl
movb
xchg
dec
mov
repz
mov
std
and
outsl
lret
cmp
inc
sbb
mov
mov
mov
and
cli
call
sub
imul
in
adc
cmpsl
inc
push
adc
das
mov
push
insl
mov
sahf
icebp
inc
in
add
sub
pop
bndldx
cld
movsl
mov
insb
dec
cmc
int3
pop
in
idivl
jnp
sbb
mov
mov
sbb
push
js
adc
or
lea
ficoml
or
mov
movsl
cmp
test
mov
aas
fadd
mov
xchg
sub
lahf
cmp
or
jnp
sbb
aaa
mov
divl
fsubs
imul
andb
push
xor
push
jns
push
out
aaa
push
push
out
cltd
mov
loopne
call
sub
enter
inc
outsl
mov
push
xorb
sbbl
xlat
clc
cmp
xchg
loopne
add
cld
jns
pop
cmp
fs
out
rep
adc
or
ret
jo
jecxz,pt
push
push
dec
faddl
xchg
jg
cmp
dec
push
mov
push
ret
loope
in
mov
push
shll
out
cli
push
dec
xor
jns
inc
aad
sbb
subb
inc
dec
rcll
fs
sub
pop
lods
orl
call
cmp
sbb
andb
scas
movsl
add
mov
push
push
in
fsubrs
mov
add
lcall
aam
aas
aam
lahf
mov
icebp
ror
clc
negl
cmp
sub
outsl
xchg
test
mov
ret
insb
enter
adc
lock
out
jmp
pop
cmp
pop
xchg
mov
sub
mov
addr16
or
cs
and
jno
mov
cmp
ret
aad
int
add
ss
psrlq
cli
cmp
outsb
ds
pop
mov
mov
int
pop
aaa
xor
xchg
ja
into
ffree
jns
xabort
pop
add
hlt
or
imul
lret
leave
repz
js
sub
adc
adcl
movsl
xor
data16
jo
pop
imul
lods
movsb
jnp
inc
adc
mov
adc
lahf
leave
pop
cmp
pop
cmp
sub
cmp
xchg
or
mov
cmp
fidivs
dec
daa
mov
pop
scas
mov
pop
in
and
decb
xchg
out
lret
js
test
cmp
stos
aam
call
outsb
jp
xchg
aas
pop
push
add
out
adcb
xchg
fcoml
push
jle
pop
or
add
adcb
cmp
mov
mov
push
add
add
fabs
push
test
push
out
ds
stos
mov
and
or
scas
neg
andb
ja
push
adc
pusha
xor
adc
mov
mov
gs
enter
es
push
inc
test
imul
dec
sbb
cmpsb
xchg
in
repnz
mov
sbb
jae
cmc
cmp
into
xorl
jmp
push
cmp
movsb
nop
xchg
popf
icebp
outsl
and
rclb
push
and
scas
push
push
hlt
and
out
mov
adc
call
sbb
test
adc
popf
fdivr
cmpl
and
mov
push
xchg
aam
stos
inc
fdivs
mov
xchg
imul
out
adc
xchg
mov
sbb
xchg
xchg
lods
or
mov
lods
dec
push
jecxz
fneni(8087
movsl
cmpsl
bnd
mov
dec
cli
pop
sbb
push
iret
jmp
push
push
or
sub
or
mov
push
jp
into
stc
xor
lods
push
mov
jb
push
cmp
std
mov
hlt
ficompl
mov
dec
mov
xor
jae
xor
inc
mov
inc
xchg
dec
push
cmpsl
push
mov
mov
push
pop
mull
jno
roll
loopne
or
sub
and
sbb
dec
mov
fiaddl
xor
or
out
gs
test
jle
push
sti
lods
les
sbb
decl
int3
not
fisubrl
push
push
sbb
aaa
leave
addb
push
inc
xchg
stos
jns
fs
cwtl
lds
leave
daa
cli
ret
add
in
fwait
cld
xchg
or
add
add
sub
or
mov
cwtl
jo
cmpsl
inc
idiv
in
and
adc
sarl
mov
lret
add
pop
mull
cmp
mov
ljmp
ja
xchg
pusha
push
mov
rcrl
xor
push
dec
add
test
daa
or
pop
jp
pop
adc
xchg
xor
outsl
dec
faddl
sub
adc
arpl
insl
lcall
movmskps
daa
sbb
pop
xchg
int
or
push
mov
repnz
cmc
mov
in
movsb
mov
dec
push
rol
je
iret
jle
hlt
or
adc
pop
mov
nop
divl
adc
jno
and
addl
jns
cmc
shlb
sarl
mov
mov
ja
pop
fwait
adc
aaa
fstps
repz
xchg
mov
mov
das
insb
push
xchg
ret
adc
and
scas
inc
popa
mov
or
roll
cs
clc
adc
cmp
xchg
and
ret
test
or
jle
adc
jne
pop
movsb
add
xchg
inc
hlt
popa
je
arpl
jne
in
enter
inc
mov
inc
in
or
sbb
repnz
loopne
inc
hlt
sbb
test
fcompl
mov
or
jb
shll
and
jo
mov
pop
mov
cli
xchg
out
pop
sub
pop
pop
mov
movsl
enter
fdivl
mov
into
jmp
push
cmc
pop
inc
ficomps
jmp
push
mov
xlat
push
test
push
cwtl
inc
aaa
mov
dec
inc
fs
xchg
sub
out
sub
or
cli
and
sbb
push
les
xchg
test
mov
insb
mov
cld
int
jae
enter
jge
mov
jg
in
push
in
out
pop
mov
nop
test
out
jns
push
popa
jmp
imul
mov
insl
lahf
mov
cmpsb
test
pop
adc
mov
sbb
out
jp
and
hlt
xchg
sub
lea
lcall
stc
sub
pop
dec
mov
sub
jmp
mov
xchg
mov
lcall
xchg
int3
or
nop
lds
dec
sub
xchg
out
push
decb
pop
cld
push
stos
int
sub
or
testb
in
out
out
mov
mov
push
dec
stos
leave
out
sbb
push
cltd
dec
jmp
addr16
ss
int3
and
adc
xor
push
sbb
outsl
mov
rcrl
and
and
jo
insb
and
mov
lahf
movsl
cwtl
inc
mov
lahf
dec
icebp
fsubrl
adc
stc
and
and
push
xlat
lds
push
mov
cmpsl
or
pop
mov
and
push
repnz
ret
repnz
pop
cmp
test
or
xchg
out
mov
jle
dec
xchg
aam
and
jg
out
aad
cmpsl
das
cwtl
add
sbb
mov
mov
add
sbb
xchg
inc
or
ss
out
pop
dec
or
mov
cmc
dec
aad
push
mov
sbb
js
ljmp
cmovne
pop
push
xor
filds
jno
sbb
loopne
repnz
lahf
add
enter
addl
jg
push
sbb
call
fimuls
lret
pop
mov
div
add
bound
jno
iret
sbb
mov
mov
xorb
jge
sbb
lcall
fisttpl
xor
xchg
scas
xor
test
and
je
iret
fdivs
scas
push
addr16
mov
jo
inc
sub
mulb
mov
or
ljmp
mov
sub
repnz
mov
in
pop
daa
ds
push
add
icebp
out
cltd
rolb
pushf
jg
les
or
sub
lcall
test
fdivr
adc
mov
sbb
setge
cmp
and
lds
ss
sub
lret
out
push
or
mov
or
push
jae
mov
xor
xlat
pop
pop
adc
cmc
insb
cs
les
adc
neg
fwait
out
pop
lret
popf
movsl
sbb
mov
mov
in
dec
das
test
lret
fidivl
jo
jne
enter
lds
xchg
sbb
sbb
aam
add
lods
xor
or
iret
or
repnz
fs
push
mov
test
xchg
and
jmp
mov
loop
pop
pop
in
xchg
mov
mov
jno
mov
rcrb
jb
pop
scas
mov
mov
subb
mov
sub
lds
std
jg
push
in
call
jns
pop
out
mov
sub
aad
ss
mov
in
aas
iret
dec
push
jno
ret
jno
jnp
and
int3
stos
mov
js
movsl
mov
add
dec
add
jg
pop
cwtl
out
pop
adc
push
roll
pop
sub
sub
addl
jle
push
cmp
mov
push
sarl
jp
lcall
fldt
mov
xchg
stc
push
out
cmp
ja
mov
cmp
inc
bnd
int
es
sbb
data16
jecxz
and
mull
adc
stc
jg
je
loope
jecxz
test
call
push
movsb
das
mov
ljmp
out
add
stos
xor
stos
inc
arpl
out
movsl
pop
mov
enter
jmp
imul
inc
mov
rcrl
cmp
push
daa
testl
mov
ret
enter
add
enter
cmp
jg
push
and
inc
sub
popa
dec
mov
mov
mov
in
das
xor
loopne
dec
test
stos
adc
mov
push
push
xor
cmpsb
ret
insb
or
xchg
orb
orl
mov
add
push
repnz
dec
test
test
fwait
pop
shll
pop
dec
pop
popa
lods
dec
pop
outsl
or
dec
mov
aas
add
jnp
into
fwait
cld
inc
or
ds
mov
mov
loope
dec
cli
add
cmp
pop
call
pusha
and
xor
jecxz
xchg
jmp
add
std
shll
clc
push
aas
xchg
xchg
jecxz
js
repnz
out
cmpsb
push
test
adc
fldenv
ljmp
add
mov
push
out
adcl
dec
pop
inc
xchg
push
test
xchg
mov
mov
cwtl
mov
and
mov
pop
in
inc
pop
pop
xlat
push
lods
scas
jae
xchg
add
pop
lods
push
lret
arpl
mov
sbb
rorl
dec
mov
pop
xor
int
lret
xchg
mov
mov
sbb
adc
je
inc
lds
adc
mov
mov
shll
out
mov
ja
fisttpll
adc
ljmp
jp
nop
mov
fs
aad
hlt
popf
push
push
xor
fisttpll
add
mov
or
mov
cmp
js
adc
sub
and
inc
mov
push
inc
aad
aas
pop
lds
xor
mov
ds
das
jo
cs
out
pop
cmpsb
std
daa
in
neg
iret
sub
idiv
nop
stc
outsb
mov
enter
inc
mov
movsl
dec
and
repnz
cmp
push
jmp
in
or
rcll
cmp
rorb
stos
icebp
int
sahf
cld
adc
xor
xchg
mov
in
stos
incl
call
jbe
ja
xlat
mov
imul
ret
popf
push
popf
les
stc
sbb
push
xor
sbbl
das
nop
rol
sti
aas
cmpsl
ret
cltd
or
addb
jns
filds
push
mov
fmull
add
jbe
push
mov
movsb
pop
jno
loope
loopne
cmpsl
push
popf
jmp
lods
mov
xor
in
fwait
sahf
data16
adc
popa
mov
adc
es
test
enter
dec
enter
lcall
aas
push
adcl
stos
sub
add
gs
xchg
in
pop
inc
or
jmp
xchg
or
add
into
mov
shrl
adc
dec
lcall
push
mov
cs
mov
inc
test
cmp
jbe
pop
and
mov
pop
mov
mov
xchg
adc
in
inc
pop
mov
aaa
fs
cwtl
xchg
outsl
xlat
xchg
in
mov
pop
dec
lret
add
mov
jae
add
lret
adc
jbe
xchg
js
cltd
mov
fisttpll
and
xor
adc
mov
imul
aad
insl
outsb
mov
lcall
data16
xchg
inc
fwait
or
aam
xor
stos
push
arpl
mov
movsb
sarb
mov
mov
xchg
xor
mov
mov
rcrl
outsl
fnstcw
cmp
pop
push
push
jb
fsubrs
negb
xor
das
pop
xor
xor
gs
or
clc
and
shrb
xchg
mov
cmp
or
je
mov
jae
loope
fs
lret
jbe
and
aas
mov
jns
das
jle
and
fwait
jae
subb
mov
adc
mov
gs
daa
sbb
clc
adc
xchg
xor
ds
jle
inc
je
xor
push
jnp
jns
or
xchg
mov
or
mov
ficoms
sbb
jp
iret
mov
ret
cmc
dec
pushl
fst
popf
jecxz
fcoml
mov
pop
jmp
sub
xchg
lret
test
inc
or
pushf
je
call
movsb
jo
outsl
test
mov
xchg
cmp
in
pop
enter
paddb
xchg
call
bound
mov
mov
and
into
push
sub
lods
fisttps
stc
mov
push
loopne
jp
add
cmpsl
loop
adc
nop
push
mov
leave
add
mov
aas
cltd
iret
push
adc
fwait
aaa
push
cmp
sbb
aad
push
adc
cmc
xor
fdivl
jae
js
jbe
mov
into
xchg
push
int3
adcb
inc
roll
cmpsl
ret
movsb
and
dec
lds
mov
mov
xchg
sbb
push
jmp
mov
jns
or
icebp
pop
push
jle
jl
dec
cmpsb
jle
add
jo
cmovbe
fnstenv
imul
jmp
adc
push
adc
lret
and
js
daa
xor
cmpb
mov
push
inc
sbb
push
add
stos
add
push
push
testl
ja
loope
mov
sub
das
mov
cli
mov
push
sbb
mov
xchg
insl
xchg
lahf
jns
sti
add
js
hlt
mov
mov
ds
movsl
sub
dec
cld
shl
push
data16
imul
adc
inc
fimull
or
cli
xchg
fists
xchg
push
sbb
mov
not
fdivrs
mov
add
and
dec
adc
pop
mov
cld
or
dec
inc
notb
cmp
scas
lock
mov
mov
mov
sbb
dec
mov
daa
cmpsl
sbb
cld
lcall
jb
test
jmp
rolb
mov
mov
adc
lcall
pusha
cmpsl
ja
cmpsb
mov
and
pop
in
mov
leave
cmp
dec
out
dec
testb
adc
arpl
pop
ficomps
mov
fldcw
jnp
xchg
pop
mov
shll
jne
inc
jo
ret
mov
in
leave
inc
mov
inc
push
xchg
fnstcw
vaddss
cli
mov
push
adc
outsb
xchg
inc
push
pop
mov
lds
lcall
rcrl
aam
push
fistl
cmpsb
lahf
mov
dec
call
lret
push
ds
les
lods
sbb
das
popf
dec
jbe
test
lods
flds
sub
add
dec
mov
jl
mov
das
jmp
cltd
pop
divl
mov
sbb
addr16
pop
cmp
fimuls
sbb
daa
cltd
ds
in
push
cli
push
lods
and
iret
cli
add
dec
inc
lock
cmp
rorl
cmc
push
pop
mov
sti
jge
mov
out
fwait
cmp
jne
jmp
mov
push
pop
iret
aaa
pop
xor
push
lds
jp
xchg
or
mov
and
stos
cmc
icebp
dec
iret
adc
push
mov
lods
mov
xchg
pop
arpl
dec
and
aad
mov
xchg
ss
jl
in
sub
mov
xchg
cmp
pop
push
lock
xchg
jae
pop
pop
pop
jecxz
je
push
in
cmc
xor
dec
call
fstpt
push
popf
push
jbe
mov
jae
push
pop
mov
adc
mov
add
rclb
lcall
inc
mov
xor
mov
leave
xchg
int3
icebp
lret
fsubl
out
adc
lds
sub
sbb
jmp
dec
and
daa
lahf
cld
lods
dec
cmp
imul
push
fidivrl
aas
or
pop
mov
and
mov
push
cld
add
arpl
dec
add
aaa
stos
cmp
jbe
movsb
jb
fwait
in
sub
add
cmp
sbb
jle
dec
jb
cli
sbbl
adc
loope
addb
jmp
and
scas
stos
cmp
sub
sbb
dec
into
ds
cmp
aas
fmul
and
rcrl
cltd
insl
sti
leave
or
cmp
es
add
cmp
andb
in
aad
test
and
aad
or
enter
ja
pop
repnz
dec
out
icebp
aam
loop
mov
in
jno
shll
cmpsb
inc
rorl
aam
dec
iret
data16
xchg
xor
cmp
xor
mov
mov
es
sbb
xchg
xchg
sub
xor
cltd
pop
cs
push
cmp
dec
mov
push
sbb
jno
shl
lret
pop
mov
pop
cmp
ret
scas
sub
push
mov
push
push
or
popa
pop
mov
ds
fisttps
adc
and
stos
aaa
cmc
icebp
mov
xchg
dec
movsl
pop
or
cwtl
dec
rclb
ficoml
leave
xor
mov
arpl
push
lahf
dec
sbb
pop
loopne
mov
mov
icebp
inc
lcall
cs
xor
sti
in
mov
jge
lods
aam
jg
gs
push
fucom
lret
adcb
mov
lock
pop
mov
or
sub
and
frstor
xchg
pop
mov
cmpl
push
sbb
call
das
pop
pop
cmp
jns
inc
push
dec
or
push
mov
sahf
cmp
mov
sub
jnp
pop
jge
and
jno
and
lds
adc
jno
ret
mov
lods
add
push
push
pop
xor
enter
cli
jo
jns
fstl
fxch
sub
cmp
iret
fbld
and
and
movsb
mov
jle
outsl
inc
out
inc
sbb
xor
inc
out
push
leave
ljmp
dec
mov
fcmove
addr16
enterw
insl
push
ret
mov
push
dec
mov
push
dec
pop
mov
inc
mov
cmp
fcompp
or
cmp
pop
fimuls
je
dec
aaa
call
enter
cltd
mov
fists
add
lods
dec
xchg
stos
cmc
push
inc
shrl
fistl
xor
inc
jp
push
loopne
mov
mov
and
xor
mov
adc
mov
xchg
leave
hlt
pop
imul
add
push
mov
loop
lds
push
cmp
mov
or
dec
push
inc
and
lea
enter
add
and
jecxz
cmpsb
out
adc
sbb
rcll
xor
pop
adc
lds
rorl
out
dec
cmp
stos
mov
mov
cld
mov
ret
ficomps
inc
or
cmp
adc
lcall
cmp
lahf
push
clc
pusha
sbb
xor
pop
xor
or
cmp
shll
pop
je
mov
and
jmp
in
insb
mov
jge
xor
rcrb
jnp
pop
fmuls
adc
xor
mov
mov
lock
jge
dec
fs
xchg
push
movsl
lret
push
ds
mov
mov
adc
insb
mov
sbb
in
cmp
cli
ljmp
lea
push
scas
xchg
jne
shll
pushf
cmp
enter
js
repnz
inc
dec
inc
popa
cld
test
fsubr
fmuls
jg
aaa
jb
insl
push
insb
shlb
xchg
fisubl
cmp
mov
pop
adc
int
inc
or
repz
pop
insb
aas
or
xor
mov
neg
pop
dec
fcmovb
sub
popa
scas
push
adc
out
push
jb
insb
xor
les
ror
xor
jmp
pushf
lahf
bound
xchg
jle
add
inc
nop
or
mov
cmp
xor
and
jns
mov
cltd
icebp
dec
sbb
mov
out
cmp
mov
xchg
movsl
or
dec
push
sbbb
std
xchg
and
es
rclb
std
ds
out
pusha
jae
xorl
sbb
inc
jp
cmp
and
aaa
shrl
push
movsb
sbb
pushl
or
test
arpl
arpl
or
into
push
adc
sti
xchg
ljmp
ret
add
xor
outsl
jle
gs
add
stos
or
lock
addl
jo
movsl
dec
int
aas
adcl
pop
movsl
cmc
ljmp
mov
or
test
sub
pop
adcl
insb
dec
and
lods
pop
mov
leave
fmul
imul
cmp
pop
add
and
cltd
jno
aam
inc
jl
mov
int3
dec
mov
insb
and
loope
mov
jp
cli
push
push
add
add
pop
cmp
enter
aad
adc
gs
or
fcompl
jmp
aas
mov
scas
repz
into
xor
jns
aas
inc
daa
sub
stc
adc
add
or
scas
addb
inc
js
cltd
dec
aaa
stc
push
imul
das
sub
jecxz
pop
dec
loopne
shlb
mov
pop
jg
in
mov
pop
fnclex
inc
int
sbbl
mov
cmpsb
jne
subb
es
popa
jg
add
test
arpl
into
addl
dec
aaa
pushl
cmp
mov
test
mov
mov
loopne
jmp
aaa
cmp
aas
jnp
in
loopne
adc
push
cltd
clc
leave
jbe
imul
jne
insl
xor
sub
xor
fisttps
shr
and
jle
mov
stc
mov
nop
leave
in
fdivp
stc
popa
adc
jno
mov
fsubrp
pop
lret
pusha
nop
out
mov
out
push
rorb
rcr
mov
hlt
adc
xchg
xchg
jg
xor
push
jbe
push
cwtl
outsl
mov
adc
sbbb
and
adc
pop
hlt
lods
mov
xor
pop
or
and
xor
int
adc
rorl
adc
inc
icebp
push
pop
das
lock
pop
sub
xor
adc
push
add
lret
xchg
sbb
ret
fdivrs
out
icebp
sub
dec
pushf
inc
out
lret
imul
sbb
sub
xchg
mov
xor
adc
pop
inc
popa
dec
cld
lret
rcll
fcoms
ja
inc
fs
pop
xchg
and
mov
mov
popf
mov
pop
lea
insl
sbb
mov
stos
insl
cwtl
sbb
rcr
insb
mov
sub
movsb
smsw
sub
fsubr
inc
iret
sbbl
inc
fs
dec
outsl
popa
cltd
insl
movsb
jg
or
ja
mov
mov
addl
fistpll
or
pusha
aad
test
shll
cwtl
les
cld
adc
call
shll
shlb
jle
lret
dec
cli
fwait
sbb
cmp
repnz
xchg
add
xor
dec
cmpl
inc
sbb
jp
pop
hlt
pop
mov
cmp
dec
mov
xchg
pusha
push
jb
and
ficoms
lret
aas
movsb
or
sub
nop
mov
repnz
das
lods
lcall
xchg
insb
sbb
es
popf
adc
ss
imul
fldt
push
and
out
mov
dec
stos
pop
cli
cld
out
or
sub
inc
imul
loopne
mov
mov
incl
xor
popl
fwait
mov
arpl
pop
adc
add
xchg
fbld
push
fisttpl
or
cmp
cmp
nopl
rcll
xor
xor
jo
sub
ja
aam
sbb
cmp
push
push
push
test
xchg
andl
push
sbb
mov
and
ret
cltd
movsl
cmpsl
add
es
iret
pop
add
shlb
shl
jbe
cs
xorl
adc
mov
xchg
cli
jo
mov
test
pop
scas
shrl
ret
cmp
jg
inc
cltd
mov
fsubs
iret
nop
cld
mov
jle
push
aad
jbe
imul
jb
fwait
pop
add
ljmp
adc
pusha
imull
jge
jnp
jnp
dec
insl
pusha
pop
dec
adc
dec
or
pop
push
popf
leave
adc
push
and
repz
mov
inc
push
icebp
into
cs
lcall
jg
shlb
cwtl
daa
dec
adc
insl
push
dec
cmp
mov
in
or
repz
sub
push
inc
and
mov
test
push
jbe
repz
pop
in
push
inc
mov
pop
enter
push
xchg
mov
xchg
pop
xchg
iret
sbb
and
wrmsr
mov
scas
push
roll
popf
and
jmp
xchg
mov
pop
adc
scas
fs
cmc
outsb
cmp
movsb
jecxz
or
cltd
ja
std
fiadds
jl
sub
ror
popf
inc
mov
push
sahf
adc
fchs
jl
loopne
and
add
jne
aaa
test
repnz
xchg
rcll
inc
xlat
adc
pusha
cmp
ret
xorb
push
leave
and
fwait
add
jmp
add
repnz
inc
add
sbb
stos
inc
dec
mov
push
push
xlat
mov
sbb
cwtl
test
cmp
jg
aaa
sbb
mov
mov
adc
jo
ret
popa
insl
scas
ficoml
or
loope
push
inc
sbb
push
test
adc
aaa
mov
ljmp
mov
mov
pop
loope
and
insl
fstl
ja
push
or
sahf
sbb
pop
popf
xchg
pushf
adc
shrb
pop
push
sti
pop
and
add
orl
mov
hlt
js
icebp
insl
loopne
in
mov
push
jle
mov
cmp
das
push
push
adc
push
cmp
cmp
stos
in
add
mov
xchg
rclb
adc
jg
mov
scas
inc
push
jbe
imul
push
jmp
out
push
pop
sbb
pop
fsub
push
es
sbb
mov
sub
lock
shll
dec
mov
roll
ficompl
jae
fs
stc
and
add
adc
and
leave
sub
aam
jb
sbb
jae
xchg
pop
jle
stc
mov
sub
jns
pop
sbb
xchg
adc
lret
cld
mov
pop
lcall
sub
dec
sahf
test
dec
clc
pop
test
imul
pop
xor
dec
pop
dec
daa
popa
xor
imul
movsb
and
and
loopne
cmp
js
sub
cmp
cmp
inc
pop
add
lret
adc
push
xchg
mov
sahf
adc
mov
jmp
add
cmp
mov
inc
mov
sti
arpl
cs
mov
in
movsb
mov
outsb
aas
push
xor
lret
xchg
push
sbb
cmp
cmp
fldt
xor
inc
in
shl
mov
enter
sub
push
and
pushf
cmp
xor
in
lea
cmp
lds
aaa
ja
in
sbb
add
int3
pop
xor
iret
stc
dec
cmpl
cmp
mov
push
aad
and
add
xchg
cmpsl
or
inc
or
mov
pop
mov
dec
xchg
stc
xchg
cmp
sbbl
push
ret
adc
sub
xorl
lods
cmp
cld
mov
cmc
loopne
aaa
repnz
clc
mov
lea
push
cmp
jecxz
push
push
add
lret
outsb
jb
aaa
lea
test
cli
push
movsb
push
hlt
push
mov
xor
inc
mov
lret
pop
mov
test
mov
sbb
pop
icebp
mov
xor
int3
aad
loope
push
mov
cwtl
add
xor
stos
into
xlat
sub
lods
lods
adc
lods
cwtl
pop
cmp
jns
jmp
sbb
mov
inc
dec
add
mov
js
mov
mov
sbb
push
loopne
pop
loop
sarb
ret
into
popa
lret
cmp
and
addl
mov
and
jp
mov
xlat
xlat
shll
push
and
bound
mov
insb
sbb
test
loope
roll
out
lahf
push
fisubrl
mov
in
xchg
cmp
dec
nop
adc
sub
push
lods
xor
nop
imul
sahf
push
adc
inc
in
insb
cmc
test
fldenv
xor
xchg
push
mov
xchg
and
mov
stos
gs
orb
dec
xchg
test
fildll
outsl
mov
addr16
mov
pop
fwait
repnz
ret
pop
and
dec
or
xchg
pop
arpl
sbb
xchg
sub
pushf
fs
in
je
pop
jle
mov
imul
lret
cwtl
jecxz,pt
adc
sub
test
push
out
push
push
mov
mov
repz
gs
pusha
fdivrp
adc
push
popa
imul
sub
inc
xchg
arpl
xor
push
jmp
clc
and
push
cmp
scas
mov
jmp
cld
mov
add
xor
addr16
adc
inc
push
ror
push
adc
mov
or
sarl
sub
stos
adc
ds
and
js
push
stc
pop
fidivrs
and
and
in
pop
push
and
stc
push
mov
mov
push
in
sti
incb
dec
mov
pusha
ljmp
xchg
push
lret
inc
dec
call
decl
mov
push
or
mov
dec
jp
call
scas
cs
xchg
inc
jno
hlt
nop
call
push
mov
popa
das
sbb
inc
xchg
addr16
xchg
mul
mov
adc
or
loop
fadd
adc
packuswb
fstps
call
mov
and
test
pop
add
jecxz
push
push
mov
sub
sbb
pop
cltd
mov
cmp
xchg
popf
notl
inc
adc
js
lds
mov
sbb
or
xchg
adc
push
xchg
ja
mov
mov
or
mov
mov
icebp
in
xchg
sbb
cmc
xor
cmpb
cmc
inc
test
sbb
lods
popf
shll
xchg
sbb
lret
pushf
mov
pop
aam
xor
fistps
mov
out
cmpsb
and
xchg
es
movsl
sub
lods
sub
and
lahf
in
pop
ret
loop
pushf
imul
lods
stos
orb
nop
dec
repnz
xchg
in
shlb
adc
mov
test
aas
cmp
mov
adc
hlt
sti
mov
add
lret
sbb
xchg
jle
ljmp
and
jnp
dec
ret
imul
cmp
xchg
jp
jle
ds
lret
sbb
pop
and
imul
imul
imul
jp
movsl
jecxz
lock
sbbb
xchg
insl
mov
adc
xor
cld
fcoml
movsb
rcr
dec
push
aaa
push
push
rorl
dec
cltd
mov
faddl
adc
jmp
dec
std
push
or
push
mov
pop
negl
hlt
mov
repz
outsl
adc
ss
push
lahf
pop
mov
movsl
add
xchg
dec
xchg
mov
jmp
in
cld
jbe
push
fisubl
das
mov
jmp
in
xor
ja
sbb
dec
jg
bswap
out
push
mov
jp
pop
test
and
xchg
add
das
push
mov
xor
aaa
mov
lcall
and
cmpsl
and
push
adc
shrl
out
test
xchg
cmp
mov
pop
repnz
mov
xchg
loopne
sti
mov
push
repnz
dec
loopne
negl
sbb
pop
sub
sub
xor
fdivrs
orb
lods
pop
dec
into
xchg
icebp
lods
outsl
cli
push
popl
jo
les
sub
ficompl
outsl
andl
mov
into
jo
pop
mov
add
imul
mov
and
das
das
scas
and
bound
mov
sbb
test
pushl
xchg
data16
mov
mov
imull
stos
inc
jl
pop
rorb
push
xor
and
dec
stos
test
or
pop
push
stos
arpl
inc
push
fldcw
hlt
push
mov
std
std
es
add
les
test
js
add
aas
inc
jns
test
iret
mov
ffreep
push
sahf
es
mov
push
add
ja
push
mov
cltd
fs
shl
arpl
and
xor
cmpsl
movsb
push
xchg
adc
jnp
std
add
pop
ljmp
imul
sub
push
push
pop
jge
loopne
inc
xchg
sbb
loope
jo
movsb
push
loope
jae
dec
push
test
incb
mov
decl
daa
cld
add
or
loop
stos
inc
and
push
je
mov
mov
rorl
sub
fildll
push
cmp
test
out
pushf
and
iret
cmc
les
inc
es
sbb
jmp
pusha
sub
pop
hlt
jbe
cmpsl
jle
mov
mov
outsb
pop
push
or
adc
inc
ficoml
dec
frstor
or
mov
clc
xchg
sub
pop
in
stc
jmp
sbb
out
sbb
test
and
movsl
mov
lret
fimuls
popl
dec
xor
enter
insb
idivb
mov
mov
inc
xchg
enter
sub
jecxz
call
subl
mov
sub
fstl
inc
xchg
jmp
movsl
adc
inc
sub
aad
mov
adc
cmpsb
adc
out
call
dec
cmp
inc
popa
aaa
mov
outsb
sahf
stos
mov
cmpsl
lcall
xchg
and
jb
inc
inc
insl
lock
cmp
xchg
or
out
icebp
cs
cld
jmp
dec
cmc
in
popa
popa
es
in
leave
dec
in
loop
inc
cli
mov
dec
jmp
jmp
mov
pop
ljmp
xchg
stos
sub
or
jns
dec
lahf
pop
mov
mulb
mov
push
js
push
inc
aad
jl
shrl
orb
xchg
push
adc
mov
cmp
cmp
iret
into
mov
fisttpll
fucom
mov
mov
mov
ljmp
dec
xchg
popa
movsb
fwait
cmp
jmp
mov
sbb
sarb
mov
aam
xchg
pop
outsb
or
lret
lret
mov
sub
xchg
out
es
inc
arpl
xchg
push
dec
bound
cmp
xchg
cltd
hlt
mov
push
lock
sub
adc
adc
pop
insl
sahf
mov
cmp
pusha
or
ret
mov
xchg
add
sbb
push
ja
cltd
mov
je
ret
xchg
mov
divl
in
insl
repz
jns
nop
lcall
inc
sub
dec
loopne
mov
inc
sub
and
lahf
addr16
inc
mov
lahf
shlb
mov
sub
xchg
pushf
mov
or
int3
push
mov
dec
jg
cmp
add
dec
inc
inc
mov
mov
stc
adc
jne
rol
xchg
push
dec
xchg
js
adc
mov
adc
push
mov
es
push
xor
adc
xor
mov
lds
push
sbb
int3
sti
ja
mov
insl
ljmp
jmp
cmpl
mov
in
jecxz
xchg
adc
dec
cmp
imul
call
stos
aaa
scas
insl
add
mull
sub
xchg
add
xor
add
mov
inc
jns
dec
pop
dec
in
ret
iret
add
cmp
and
aaa
xchg
sar
jo
xorl
jae
xchg
inc
push
sub
pusha
jmp
add
mov
jg
push
mov
mov
dec
out
xchg
pusha
addb
push
jg
jne
mov
call
popa
mov
push
add
mov
dec
and
mov
add
adc
inc
movzbl
xchg
add
pop
and
aas
and
shr
sbb
and
popa
pop
addl
das
aaa
jecxz
xchg
aad
xor
xchg
fs
stos
dec
mov
into
test
mov
sub
aas
push
add
mov
fstps
in
scas
les
out
cmpsl
ss
add
dec
lret
repz
push
ficompl
stos
cltd
or
dec
xchg
and
jl
sahf
js
dec
lret
adc
pusha
testb
cwtl
bound
cmp
mov
and
cli
jmp
dec
pop
int
xchg
pop
cmp
aam
jae
dec
movsb
mov
ja
dec
adc
xor
mov
xchg
mov
jge
faddp
pop
xchg
push
or
test
mov
loop
and
lret
sbb
cmp
xchg
in
insb
jl
dec
outsl
push
nopl
mov
dec
sub
sub
and
xlat
inc
mov
or
orl
cld
dec
in
loope
xor
loopne
add
shl
or
pop
dec
popf
vandnps
lret
adc
leave
daa
mov
sbb
ds
aad
or
repnz
dec
inc
push
cmc
cwtl
adc
jae
push
ja
ss
jo
jecxz
push
add
mov
adc
ja
js
movsb
mov
mov
cmp
adc
movsl
push
aad
xchg
insl
sub
pushf
add
xchg
fwait
mov
add
push
adc
mov
jle
sbb
adc
outsb
fcompl
ret
addr16
addr16
push
fwait
xor
fwait
xorl
dec
adc
inc
iret
jb
add
or
dec
sub
add
data16
negb
aam
ret
shll
add
add
loopne
push
insl
mov
add
sub
jnp
roll
cmp
jno
mov
std
cmp
les
sbb
push
push
adc
repz
fs
repnz
mov
cmc
push
push
dec
xor
mov
cmp
pop
lds
adcb
sub
ljmp
add
mov
fdivs
sub
xchg
inc
scas
mov
cmp
cs
loopne
pusha
fiaddl
outsl
sti
pushf
pop
pop
pop
ljmp
mov
daa
xchg
mov
scas
mov
pop
mov
shlb
lock
sub
cmp
outsb
addr16
outsl
pop
xor
xchg
out
push
mov
call
mov
into
xchg
das
iret
pop
ja
decl
inc
mov
jno
mov
jo
mov
dec
adc
pop
dec
mov
fistl
inc
data16
into
out
mov
popf
and
xchg
in
in
in
adc
add
test
push
mov
mov
adc
mov
ss
inc
ljmp
inc
adc
xor
test
jbe
arpl
pop
orb
xor
dec
shll
data16
out
or
lret
pop
fwait
jbe
pop
std
daa
jmpw
xchg
rclb
sub
mov
mov
pop
js
lods
jge
xchg
je
imul
add
imulb
nop
xor
rcll
ja
mov
mov
cwtl
mov
or
jo
jnp
das
cmp
cmpsl
addr16
mov
stos
dec
aaa
shll
cmp
lcall
push
pop
pop
inc
pop
xchg
nop
rorb
dec
xor
or
or
repz
adc
movsb
add
arpl
divl
pop
test
aad
jmp
or
rclb
xor
lahf
cmp
lods
faddp
sub
mov
sub
mov
test
pop
dec
dec
adcl
dec
cmc
mov
arpl
mov
pop
movsb
sbb
out
xlat
lcall
and
add
test
inc
mov
mov
lds
lret
push
flds
pminsw
mov
jo
mov
push
add
int
xor
decb
movsl
mov
filds
cmp
icebp
pop
dec
ss
push
in
int3
push
cmp
xchg
xor
mov
jns
push
ret
pop
popf
dec
ljmp
hlt
fdivs
sbb
cmc
jns
pop
adc
jecxz
stos
pop
add
xor
mov
xor
in
dec
mov
pop
mov
jb
jns
addr16
mov
in
ja
outsl
repnz
jle
out
mov
lahf
mov
icebp
inc
cmpl
insb
mov
lods
xorb
jae
mov
xchg
ja
out
mov
adc
fs
call
cvtpd2pi
repnz
scas
test
add
adc
outsb
ss
jbe
aad
comiss
mov
je
push
pop
cmp
insl
sbb
sbb
sbb
rcrb
jg
jmp
mov
pusha
mull
lret
ret
xchg
enter
inc
and
add
jae
dec
fcoms
push
leave
scas
out
sar
pop
push
scas
add
jp
jnp
shr
testb
stos
pop
fisttpl
mov
sub
add
sbb
sbb
xor
mov
fistpl
xor
lock
inc
and
lcall
jecxz
push
dec
fnstcw
shll
leave
inc
push
cmp
mov
mov
xorl
jnp
daa
pop
faddl
xchg
imul
cli
add
pop
in
aaa
idiv
ds
nop
sub
out
cmpsb
add
pop
cmp
inc
pop
jmp
icebp
jg
xor
and
adc
ret
ljmp
loop
xor
jg
ret
ljmp
mov
test
and
repnz
pop
sub
inc
mov
dec
mov
sub
mov
subl
dec
jp
test
out
xlat
out
pushf
scas
or
in
jb
add
gs
mulb
clc
test
scas
les
repz
push
sbb
movl
js
or
subl
jg
add
test
popf
jae
lret
in
sahf
ret
xchg
dec
xor
scas
sbb
es
and
mov
push
dec
push
xor
pop
add
sarb
mov
xchg
fisubs
orb
jmp
push
fiadds
xchg
pop
pop
cmpl
mov
movsl
xchg
incl
cs
scas
movsl
cmp
cmp
push
dec
xor
sub
add
jmp
xchg
dec
mov
mov
adcb
subb
iret
cmpsb
cwtl
cltd
leave
pop
cmp
das
push
xor
lods
ss
cwtl
inc
bound
fcmovu
call
push
inc
lock
lcall
dec
mov
not
test
ret
push
rep
nop
push
xchg
or
jno
ljmp
popa
adc
dec
sbb
add
jmp
lods
sbb
inc
xchg
mov
enter
pop
insb
push
mov
stos
stc
movsb
clc
pop
pop
gs
sub
inc
mov
add
jae
xchg
cld
jne
or
xlat
xchg
cmc
dec
pop
rolb
aaa
or
insl
cmpsb
mov
mov
shr
jecxz
xor
inc
sub
test
inc
test
stos
mov
loopne
js
stc
mov
aas
aaa
jns
incb
mov
clc
mov
or
imul
smsw
ror
jecxz
inc
adc
nop
mov
lret
mov
mov
stos
adc
pusha
ror
mov
dec
push
out
mov
adc
xchg
xorl
mov
ja
adc
popa
lea
adc
imulb
test
dec
or
add
std
cmc
jbe
mov
subb
jge
in
loop
dec
and
xlat
outsb
dec
mov
push
sarl
std
cli
pop
xchg
mov
sub
mov
adc
roll
je
xchg
and
jp
je
sbbb
dec
and
mov
shlb
inc
or
add
fs
call
lret
pslld
fs
mov
mov
int
outsl
adc
inc
dec
fists
jbe
es
push
or
push
xor
xchg
push
inc
jo
stc
lahf
lret
jnp
cmp
in
cmp
mov
jmp
lret
aaa
sub
enter
ret
and
daa
mov
xor
in
push
ljmp
mov
jae
jo
mov
add
sarl
ja
test
cmp
clc
jbe
xchg
dec
insb
arpl
popa
adc
mov
jl
mov
clc
adc
jp
fldl
mov
mov
mov
push
xor
xor
and
repz
ret
or
mov
xchg
xchg
lds
shlb
dec
inc
pop
cmp
iret
imul
jbe
xlat
add
test
adcl
test
scas
aas
out
cwtl
leave
cmp
cmp
rcrb
lret
lods
mov
fcompl
adc
mov
std
sbbb
cmp
mov
out
pop
add
es
repnz
mov
xchg
xchg
fisubs
inc
outsl
and
jp
jno
mov
add
pusha
aaa
aas
pop
xchg
cld
loop
push
sbb
loop
dec
inc
mov
add
lcall
mov
push
dec
mov
lods
jne
repnz
add
push
cmpb
pop
fnstenv
outsb
sub
fnsave
lcall
add
call
movsl
xor
fs
xchg
adc
mov
sbb
scas
in
sbb
sub
aam
mov
shr
and
fld
sbb
inc
ficomps
jb
outsl
lds
ficompl
cmp
in
loopne
add
jns
push
sbb
rclb
cltd
xchg
dec
mov
mov
pop
jge
sub
sbb
or
adc
addl
cmp
or
adc
mov
les
lods
adc
xchg
shl
fstps
inc
repnz
rorl
add
mov
movsb
out
aas
hlt
pop
or
mov
xor
dec
and
aam
lock
gs
pop
in
inc
push
mov
cwtl
and
and
adc
int3
std
jmp
cmpsb
pop
cmp
nop
xor
jnp
push
mov
jl
add
adc
and
in
pop
inc
ror
jae
and
sbb
adc
loopne
aas
mov
test
in
xor
inc
dec
mov
cmpsb
inc
jnp
jecxz
xchg
mov
adc
notl
mov
push
ja
cmpsl
inc
sub
mov
pop
decl
frstor
mov
xchg
mov
and
push
mov
fnsave
test
xchg
push
push
lret
mov
cmpsb
cld
xor
out
int
lock
test
fdivs
out
inc
andb
cmp
pop
cmpsb
mov
lods
and
lock
inc
mov
cld
mov
lock
or
dec
rcll
cmp
add
out
mov
es
xor
movsl
push
xchg
popf
jecxz
or
dec
rol
xchg
decb
sti
add
mov
xchg
cmp
cmp
call
in
xchg
cmp
das
mov
push
pop
mov
stos
call
mov
mov
mov
mov
mov
es
jecxz
gs
push
dec
push
pop
cmp
mov
dec
dec
inc
push
mov
cmp
add
mov
out
fwait
push
in
idivb
jp
hlt
mov
lret
or
fisubl
lcall
insb
hlt
lock
mov
stos
cld
cs
not
mov
lods
and
loop
shl
outsb
stc
test
jae
ret
xor
stc
sbb
xchg
addl
bound
and
sub
fldt
adcl
lock
test
enter
loopne
call
jmp
xchg
mov
leave
xchg
aas
stos
xor
push
les
mov
iret
neg
dec
push
repnz
push
mov
jbe
jns
cmpsb
adc
cli
and
xchg
push
lahf
sbb
and
push
ds
adc
sub
and
loope
mov
push
int3
adc
aaa
in
add
data16
sti
dec
cwtl
jge
jp
jno
or
loopne
inc
cmp
mov
and
xor
xchg
punpckhdq
mov
adc
sbb
mov
mov
sbb
insb
call
faddl
negw
sbb
cmpsb
scas
dec
xchg
mov
test
cli
idivl
xchg
xchg
rolb
or
push
fcmovu
and
pop
mov
push
xor
mov
rclb
push
les
cmpsl
pop
push
out
push
pop
cmp
dec
or
pop
mov
mov
mov
cwtl
xchg
stc
popf
aam
jbe
shl
xchg
test
inc
jmp
loopne
arpl
sub
push
cmp
push
test
je
std
shll
ret
lea
dec
mov
sub
push
xlat
and
shll
imul
push
lods
std
movsb
mov
repz
cs
int
loop
jne
mov
das
dec
push
in
movsb
imul
outsw
sbb
mov
and
mov
mov
inc
sbb
loope
lods
addr16
cmpsb
push
push
mov
daa
mov
mov
cmp
mov
out
push
pop
fsubrs
pop
lea
and
sahf
xchg
fstps
sub
ffree
mov
rcrl
add
testb
pop
out
and
sbb
pop
sbb
jl
ret
push
test
adc
inc
les
mov
fwait
insb
ss
das
fldln2
in
sbb
and
cmp
and
out
js
dec
mov
jecxz
fdivrs
and
fxtract
xor
lret
jecxz
pop
lea
add
cmp
cmp
xor
ror
cmp
adc
adc
mov
jg
std
push
es
fiadds
js
notb
xor
mov
ret
int3
movsb
mov
mov
adc
and
mov
popa
ror
fimull
imul
push
addl
inc
mov
notl
mov
mov
cmc
mov
loop
inc
pop
jae
jl
mov
and
push
sub
add
stos
adc
fdivs
out
cmpsb
out
adc
aas
subb
push
add
stos
sbb
inc
xor
loop
and
test
movb
ljmp
pop
sbb
loope
sar
and
or
xor
pop
in
imul
pop
push
push
test
dec
rolb
mov
cmp
mov
dec
adcb
cmc
add
pop
xor
scas
inc
dec
inc
in
and
add
iret
add
scas
and
mov
hlt
stos
mov
or
push
out
fildl
test
popa
std
jo
mov
loopne
mov
insl
push
mov
jne
ss
lcall
rcll
stc
sbb
mov
in
sub
jnp
fwait
add
adc
out
cmp
sahf
cmp
enter
xor
into
pop
aas
xchg
pop
fdivrs
xchg
sub
xor
xor
push
test
mov
pop
xchg
scas
dec
or
push
adc
ljmp
das
imul
mov
or
bound
mov
insb
ret
outsb
sub
xchg
sbb
movsb
idivl
and
rclb
aad
mov
sbb
imul
out
jecxz
int
mov
cmp
cmp
dec
stos
fnstenv
movswl
lods
mov
out
xchg
in
sub
loop
jnp
xchg
mov
movsb
scas
lods
xor
mov
cmpsl
mov
cmp
addr16
jmp
daa
js
pop
mov
and
or
aas
cli
push
std
mov
out
and
sar
lahf
fwait
sbb
push
sbb
das
pop
jge
bound
cmpsl
test
push
fstps
mov
push
push
dec
fimuls
xor
imul
mov
gs
mov
mov
roll
stos
adc
cli
pop
imul
push
loope
addr16
ja
dec
mov
mov
push
cmc
movsl
xor
mov
and
add
jae
mov
mov
and
or
xor
push
into
out
ss
and
or
wrmsr
mull
mov
mov
lahf
in
push
cld
jb
sbb
pusha
in
mov
aas
xchg
inc
and
sub
mov
pop
stos
push
inc
pusha
xor
leave
or
inc
xchg
push
mov
inc
int
or
pop
xor
adcb
cli
mov
dec
push
ds
dec
jno
sub
push
mov
mov
adc
and
jmp
pushl
push
push
ror
fbld
rorl
push
popf
mov
jl
adc
aad
sub
jmp
sub
insb
movsl
xchg
dec
pop
add
sahf
or
cwtl
cmp
sub
out
or
add
shll
sub
push
imul
cli
sti
add
stos
add
mov
scas
fdivrs
mov
insb
push
repnz
xchg
or
ljmp
or
push
roll
in
sbb
or
insb
addr16
dec
mov
and
imul
mov
mov
inc
cmpsb
movsb
add
mov
cmp
subb
cmp
rorb
bound
repz
xchg
mov
in
jmp
add
leave
cld
or
subl
je
push
adc
js
data16
adc
and
call
dec
ds
sarb
test
push
xchg
pop
pop
inc
imul
mov
mov
add
pop
xchg
aam
sbb
aaa
cmp
jno
rcll
jo
xchg
jb
jns
test
cltd
pop
adc
fld
fmull
imul
sti
mov
mov
ds
sahf
jmp
test
rcl
stos
pop
pop
lock
sub
dec
call
jae
dec
ret
mov
adc
lods
adc
rcr
or
loop
fptan
loop
mov
cwtl
cmpsb
js
lock
jl
inc
das
dec
lods
xor
sbb
shr
aad
insl
not
jae
pop
dec
fbstp
fucompp
sbb
pop
testb
xchg
adc
or
sbb
loope
fisubl
ljmp
or
pop
pop
call
fdivrs
mov
call
enter
mov
cltd
pusha
mov
and
mov
mov
test
add
je
dec
sub
fwait
mov
orl
mov
je
dec
jg
ret
dec
in
das
push
loope
les
out
mov
xchg
xor
aaa
repz
out
or
iret
jb
lret
lret
cld
and
out
inc
mov
inc
ss
adc
and
scas
sbb
add
push
mov
push
adc
mov
scas
xor
fstpl
push
shlb
stc
in
shl
jno
ret
int3
stc
cmpsb
sbb
js
addr16
popf
mov
movsl
xorl
cmp
das
mov
xchg
mov
pop
adc
icebp
fdivl
dec
cmp
int3
pop
add
arpl
fwait
xchg
cmp
or
sarl
jmp
outsl
shrb
ret
pop
jo
inc
aaa
sarb
push
mov
loope
popf
insb
adc
adc
jle
lahf
mov
dec
pushf
pushf
fcomi
clc
lea
adc
xor
fcmovnu
into
add
adc
add
mov
aaa
aaa
clc
pop
xor
push
jge
push
pop
repz
ljmp
fisubrl
icebp
je
jmp
cmp
lock
enter
mov
xchg
xchg
or
sbb
andb
mov
jmp
mov
ja
aad
or
add
cmc
fildl
xor
mov
adc
adc
sahf
add
mov
xchg
fiaddl
lahf
aaa
int
and
and
pushf
mov
xchg
iret
ja
adc
fadds
loopne
lret
test
inc
and
push
pusha
outsl
sub
fisubrs
cltd
pop
add
cld
ds
add
movsb
cli
xchg
hlt
repnz
sub
push
repz
xor
lahf
pop
pop
mov
clc
scas
out
das
test
lock
push
fs
jne
mov
movsb
mov
movsl
inc
sbb
ja
inc
push
add
push
xchg
cmpsb
push
jns
mov
inc
sti
ljmp
scas
cmp
cmpsb
sbb
lock
shll
ret
push
subl
xchg
out
add
sarb
lds
into
movsl
sbb
mov
jecxz
add
and
cmp
mov
jg
scas
lcall
jo
dec
pop
jo
rcl
mov
mov
js
fsubr
add
adcb
push
or
mov
xor
lods
insb
sub
fldt
mov
scas
lcall
call
mov
sub
sbb
xchg
call
rcl
dec
push
adc
imul
mov
dec
mov
cwtl
clc
shrd
fwait
sbb
mov
movaps
pop
jecxz
lds
popf
dec
add
fsubrs
lahf
leave
inc
xor
in
push
das
ja
pusha
pop
pop
out
sbb
fldcw
mov
add
sbb
inc
jle
mov
pcmpeqd
into
fcomi
jns
dec
bound
notb
push
xchg
jg
dec
jae
ja
jno
cmp
jb
sbb
push
int3
push
jg
push
ret
push
xor
jl
test
in
mov
out
xchg
lds
jae
jb
jmp
es
shlb
mov
stos
imul
mov
lret
mov
sbb
pop
popa
adc
int3
cld
xor
push
out
adc
int3
pop
outsl
repnz
sub
mov
and
test
xchg
mov
pop
jmp
xchg
mov
push
sub
cld
inc
push
jae
daa
jp
stos
lahf
lods
inc
pop
hlt
addr16
xor
xchg
jb
pop
jmp
xchg
mov
push
push
mov
lahf
punpcklbw
lea
repz
mov
jmp
jbe
adc
pop
in
vmovsldup
js
inc
push
aaa
lock
aaa
push
movsb
fisubl
enter
dec
mov
mov
mov
ds
cmpsb
daa
insb
push
bswap
fwait
push
lods
pop
push
cmp
push
add
lods
or
pop
cmp
movsl
int
test
or
xchg
fmul
paddsw
sub
jle
hlt
mov
lds
test
fnstsw
incb
ret
pop
add
cwtl
mov
jne
sbb
loop
prefetchw
mov
and
mov
pop
pushf
adc
addl
xchg
push
loop
jge
xchg
aam
mov
testb
xor
lds
cs
push
xchg
pop
xor
mov
fcomp
int3
aaa
ret
adc
add
sub
scas
fwait
pcmpgtw
xor
loopne
adc
cmp
jp
mov
hlt
repz
sbb
cmp
push
mov
fmul
jb
mov
insl
std
lret
ret
mov
mov
fisubl
push
das
aam
adc
insl
das
xchg
ret
push
inc
arpl
pop
lret
mov
test
dec
pop
fcompl
in
sbb
pop
mov
xchg
fwait
mov
iret
mov
xorb
fwait
in
popf
push
pop
iret
lds
sbb
xor
cli
push
int
inc
jmp
mov
xor
int3
push
cwtl
idiv
shrl
iret
cmp
jbe
dec
leave
jge
insb
loop
shr
push
jne
xchg
sbb
bound
shrl
adc
pop
jnp
icebp
sub
test
out
jno
imul
in
or
xlat
jb
loop
mov
add
icebp
pop
sbb
adc
mov
mov
adc
dec
aad
movsl
xchg
push
xor
xor
or
sub
add
sbb
testb
stc
les
or
and
mov
lea
inc
mov
dec
jmp
mov
cmp
dec
dec
dec
scas
adc
cld
cmp
ljmp
xchg
sbb
or
add
pop
xorl
scas
adc
scas
xor
xchg
cmpsb
je
inc
cs
and
cwtl
sub
xchg
lods
and
aam
cltd
aas
pop
imul
adc
or
xchg
test
lods
xlat
push
pop
lret
xor
xor
test
dec
pop
je
out
mov
jecxz
and
mov
xchg
adc
sbb
mov
sbb
jb
testl
pop
mov
repnz
xchg
popf
inc
cltd
jl
dec
shlb
jbe
in
into
pcmpeqb
popa
mov
sbb
mov
sub
ret
mov
push
loope
insl
jnp
cmp
push
gs
insb
int3
inc
mov
filds
icebp
fidivs
push
movsb
scas
pop
sbbl
movsl
jle
aam
les
and
xchg
xchg
mov
ja
jb
sti
jbe
mov
daa
xchg
in
int
data16
bound
lret
fisttpll
lahf
movsl
adc
pop
or
daa
icebp
xchg
lds
add
dec
test
loope
dec
mov
gs
test
test
sbb
sbb
add
jbe
xchg
xchg
fs
ja
imul
jae
sti
mov
lods
and
sub
aam
pop
push
push
sahf
outsb
es
dec
nop
into
sub
xor
ret
scas
insb
insl
int3
lea
jno
pop
mov
sahf
hlt
mov
cmp
sbb
sub
imull
js
cld
leave
fdivrp
or
mov
pop
mov
in
add
jle
repnz
mov
mov
lods
pop
scas
dec
popl
push
lahf
xchg
leave
sbb
fcoms
rol
push
popf
lea
add
and
mov
mov
shlb
test
sub
push
fisubl
scas
pop
out
repnz
add
jae
orl
mov
mov
jmp
hlt
enter
lcall
and
push
insl
add
xchg
inc
in
outsl
inc
adc
out
xor
dec
fistps
dec
xchg
fldcw
mov
cld
das
sub
ficoml
sbbl
sub
fs
mov
sub
jg
adc
mov
add
pop
mov
stos
push
repz
xor
adc
xchg
sbb
lods
jne
pop
mov
inc
sub
and
pop
cld
nop
shrl
adc
rcll
je
aaa
addr16
cmp
daa
outsb
jne
int
es
sub
in
cltd
shll
push
add
lock
sub
sbb
xchg
add
scas
dec
sub
fsincos
in
loop
cmp
mov
xchg
cmp
int3
test
test
jp
adc
ret
jmp
mov
dec
jae
mov
mov
or
dec
fbld
shll
inc
mov
xchg
sbb
push
adc
sbb
fisubs
cs
xor
not
xchg
in
in
or
inc
mov
mov
incl
inc
mov
add
sar
fcomp
jnp
mov
test
testl
sub
push
xor
mov
cmp
xor
cmp
ret
pop
das
xor
inc
dec
push
shrb
adc
cli
imul
mov
cmp
cmpsl
mov
mov
in
or
jg
cltd
ret
loop
dec
jg
or
jge
mov
or
xor
push
mov
mov
int
mov
iret
ljmp
lcall
sahf
imul
idivl
andl
or
sbb
movsl
xchg
xorl
js
sbb
aam
dec
sub
jmp
iret
lret
jmp
in
cmp
mov
addb
push
nop
shr
loopne
shl
cmc
leave
mov
add
push
mov
push
inc
jb
rol
fldenv
fwait
or
inc
daa
xchg
js
mov
jecxz
int
icebp
iret
int3
and
push
push
in
scas
cltd
lods
movl
mov
cltd
cltd
insb
jns
movsl
inc
and
cltd
icebp
cld
sahf
mov
lret
inc
les
jae
ret
dec
mov
js
imul
stc
pop
cmpsl
fwait
jne
xlat
jl
cmp
arpl
cs
sbb
or
std
addr16
ljmp
mov
test
push
adcl
in
fs
jne
fcomps
fs
xchg
or
and
addr16
jo
adc
dec
or
pop
les
or
dec
in
ret
ljmp
sarb
add
xchg
out
testb
cmpsb
add
pop
int
ret
mov
daa
cmc
or
test
sub
addb
dec
stos
add
nop
sbbl
push
stos
sbb
mov
jbe
mov
cs
mov
push
jl
push
mov
ret
cmp
stos
into
js
test
stos
in
fists
enter
popf
xchg
pop
add
dec
mov
in
aam
push
mov
mov
cmp
adc
mov
movsb
lods
dec
sub
jle
insl
xor
ljmp
xor
fldenv
inc
clc
sub
jbe
scas
jle
test
or
jl
jp
sub
cmp
test
pop
push
nop
mov
out
add
mov
sub
push
push
dec
cmp
lret
pop
pop
lcall
adc
fldenv
add
test
lds
jge
xchg
in
or
push
sub
xor
inc
adc
jl
sub
inc
add
aam
xchg
jnp
std
and
jp
mov
arpl
push
jecxz
stos
or
fisttpl
sub
sbb
test
test
pop
insb
lahf
push
xchg
cmp
fiaddl
inc
push
pop
jge
add
std
out
xchg
mov
mov
jecxz
jns
std
pop
out
rcl
bswap
cld
outsb
es
mov
out
pop
push
and
sbb
inc
and
std
sub
cli
add
fstl
jecxz
inc
sbb
addr16
add
dec
mov
dec
shrb
cwtl
rorl
jo
inc
fwait
xchg
cmp
push
add
add
dec
out
jmp
push
xchg
sbb
loopne
sbb
lcall
nop
add
xchg
rcll
in
cmp
adc
lods
dec
xchg
sub
push
dec
hlt
sub
jb
repnz
pusha
cmc
push
popa
aaa
jo
imul
cmpsl
aam
stos
rep
pop
daa
sarl
mov
pop
or
lods
mov
dec
push
jno
popa
push
mov
es
jno
iret
cmp
or
add
divl
xchg
and
add
lcall
jmp
sub
pop
out
jnp
daa
jl
sbb
jle
mov
cmp
ret
xchg
inc
js
lret
ret
adcl
hlt
shll
xchg
lods
sub
int
or
in
and
lcall
popa
inc
xchg
loop
adc
enter
outsb
push
pushf
xchg
loope
fldcw
pop
aas
std
jp
push
nop
std
pop
daa
jl
fs
xchg
mov
outsb
je
jp
sub
pop
enter
addr16
lcall
xor
cwtl
es
addr16
push
push
mov
xor
lods
jmp
jbe
popa
adc
ss
aad
outsb
call
addr16
sti
push
clc
fs
sub
imul
arpl
insb
push
cwtl
mov
imull
mov
pop
fdivrs
fsubs
clc
pop
push
mov
out
sbb
mov
sub
dec
or
ja
nop
add
cmp
in
cmpsb
xchg
enter
jns
pop
movsb
ja
cmpsb
mov
pusha
push
inc
add
mov
mov
loope
dec
movsl
mov
adc
lcall
add
lds
mov
mov
jno
addb
push
sub
adc
push
in
mov
fcoms
outsb
stos
cmpsb
les
inc
or
cmpsl
sub
fs
sbbl
orb
sarb
xchg
test
or
leave
jns
into
jae
or
mov
cmp
sub
jge
testb
das
dec
xchg
cmp
in
scas
bound
out
into
or
test
dec
fwait
stos
sti
push
adc
lea
icebp
sbb
jmp
sub
or
popf
jb
sbbb
mov
push
adc
lcall
fcmove
lret
add
negl
jle
fwait
lret
add
mov
sub
push
test
or
add
in
cmp
addl
ja
fsubl
mov
sbbb
and
push
mov
pop
xor
addr16
pop
shl
sub
sahf
mov
daa
cmp
xchg
add
arpl
jno
mov
xor
jbe
out
mov
cmp
ret
leave
repnz
rcrl
adc
mov
ror
shlb
shlb
pusha
adc
mov
xchg
mov
fisubs
xchg
insl
push
notl
sub
dec
xor
sub
dec
je
push
cmp
pop
adc
loop
mov
and
ret
cld
aam
shrb
xchg
pop
sub
lahf
jmp
ja
sbb
cmp
stc
mov
push
movlps
mov
in
mov
cwtl
dec
es
pop
mov
xchg
shrl
adc
repz
pop
ds
pop
mov
pop
filds
fs
mov
mov
jl
xor
mov
jae
scas
jmp
sbb
repz
repz
xor
mov
js
iret
test
gs
push
adc
jp
ret
dec
xor
sub
pop
lds
mov
push
test
lods
mov
sbb
dec
movsl
jmp
xchg
cmpsl
cmc
cwtl
mov
mov
inc
cmc
imul
mov
and
cmp
pop
in
lret
adc
pop
mov
add
enter
movsb
xor
dec
cli
daa
call
jl
ds
xor
mov
negb
in
xor
addr16
or
imul
or
push
xchg
lcall
or
jmp
dec
mov
inc
movsl
mov
add
push
jge
jmp
sub
add
pop
add
mov
outsb
aas
jecxz
push
xor
sub
push
addr16
mov
or
loop
push
push
mov
push
jecxz
jne
pop
loopne
imulb
dec
fwait
movsl
movb
ret
adc
stc
lcall
push
and
push
mov
loop
out
stos
pop
inc
ret
push
int3
jns
mov
adc
outsl
sbb
mov
sahf
std
addr16
lret
pop
pop
imul
pop
add
punpckhdq
lock
lds
xor
inc
push
and
popa
cwtl
add
fldcw
scas
dec
jbe
lods
sbb
aad
add
adc
out
pushf
cltd
xor
lods
lds
push
push
lcall
pop
push
lret
cmc
sbb
xor
clc
pop
add
aad
mov
cmp
jno
push
out
stc
mov
cmpsb
inc
scas
mov
jno
fidivrl
sbb
roll
pop
js
xor
sub
testl
add
dec
cmp
cmpsb
test
mov
fstl
shr
xchg
mov
pop
movsb
xor
inc
mov
push
add
inc
push
pop
mov
push
dec
ja
ds
mov
sub
lret
xchg
add
xchg
push
cmpsl
mov
add
bound
imul
jnp
adc
addr16
jb
dec
jnp
lret
pop
scas
es
add
out
or
dec
cmc
into
xor
popf
mov
or
jno
mov
xor
insl
out
adc
pop
lret
adc
cmp
jge
mul
test
stc
cld
nop
xor
das
fprem1
and
push
std
ds
adc
push
sbb
push
xchg
xchg
dec
lods
std
test
or
and
or
cmp
mov
dec
shr
aaa
inc
jp
iret
mov
lods
mov
cld
into
mov
xchg
push
sub
mov
jae
imul
sub
mov
dec
sarb
rcll
scas
fcmovnbe
sbb
ds
loope
ret
pop
fwait
lahf
dec
add
adc
pop
and
mov
pop
in
out
inc
test
in
cmpsl
roll
xchg
dec
jb
sub
loop
data16
and
fistl
mov
push
popa
pop
fs
inc
pop
jo
and
call
fucom
push
imul
or
dec
cmpsl
xchg
adc
fmull
push
das
cmp
mov
cmc
aas
pop
std
nop
fcoml
movsl
stc
movsl
inc
pop
imul
rcrl
mov
cli
pop
call
jp
xor
loop
dec
push
aad
or
popa
in
lret
jecxz
divb
call
mov
or
adc
ss
mov
pop
xchg
pushf
cmp
add
les
or
xchg
mov
mov
mov
cmpsb
imul
pusha
hlt
dec
jae
hlt
adc
pop
add
test
inc
mov
aaa
and
insl
xchg
clc
pusha
add
fs
loop
inc
insl
add
lds
idivl
jmpw
push
push
fbstp
icebp
mov
jmp
movsl
cs
cmpsl
xchg
repnz
adc
adc
inc
push
pop
inc
jcxz
test
mov
ja
push
mov
ljmp
popf
dec
cld
inc
cwtl
test
cltd
subl
dec
add
je
cmp
mov
fstpt
adc
in
sti
cmp
mov
int
fsub
inc
lret
cs
nop
or
cli
cmp
add
flds
add
mov
xchg
stc
mov
lcall
add
enter
lods
mov
xchg
pop
cmp
cmp
or
push
sub
cli
into
incl
or
mov
outsb
ficoml
mov
lcall
cmpsl
push
jg
mov
insb
data16
sbb
cmc
add
mov
loope
es
in
loope
je
jnp
clc
cmpsb
xlat
shll
icebp
fadd
not
xor
add
jg
jmp
or
je
cmp
repnz
mov
mov
sbb
mov
jb
mov
gs
lods
jns
push
cmp
jno
lea
inc
dec
sbbl
cmpsb
or
pop
dec
test
mov
sbb
jbe
loopne
inc
add
fcom
in
adc
loopne
outsb
fsubrp
cmp
out
sub
les
pop
adc
test
call
jo
les
imul
es
sbb
cmp
sahf
jmp
test
pushf
repnz
lret
add
push
insl
jo
add
jecxz
sub
xchg
cmp
imul
out
pop
into
pushf
sub
and
in
xchg
ljmp
xlat
jae
cmp
pop
gs
xor
cwtl
std
pop
movsb
stos
or
mov
push
les
mov
sti
testb
push
fst
xchg
inc
addb
adc
xchg
nop
mov
cmp
lret
mov
fisttpll
pop
push
push
mov
xchg
dec
adc
insl
xchg
cwtl
push
mov
or
inc
pop
mov
jg
scas
mov
jns
loopne
in
sbb
ja
aam
hlt
stos
cmpsb
add
cmp
xor
cmp
add
call
xchg
sbb
and
cli
popa
pop
cld
imul
sub
mul
mov
loop
sbbl
imul
sub
cmc
enter
inc
ret
jecxz
mov
sarb
fmul
iret
lcall
mov
or
mov
pushf
pusha
pop
cmp
lock
cmc
insb
mov
dec
fwait
mov
popf
add
cmp
or
mov
nop
pop
dec
aaa
test
iret
popa
out
loopne
mov
push
fidivrs
mov
pusha
sbb
dec
aas
dec
mov
xchg
adc
add
mov
pop
sarl
jp
cmpsb
or
xchg
mov
lret
fldt
mov
inc
xor
lret
add
sbb
inc
mov
imull
test
sbb
inc
pushf
xor
and
pop
jmp
mov
addr16
cmpsl
adc
mov
pop
addr16
mov
ret
aad
out
inc
movsl
dec
jecxz
push
jmp
outsb
xchg
cmp
not
mov
flds
dec
xchg
push
sub
jge
xor
add
rcll
adc
aas
dec
shrl
push
std
push
in
and
lcall
stos
cmpsb
lcall
test
fcmovnbe
xor
or
fcmovnu
xor
scas
imul
mov
fwait
cltd
jae
call
mov
in
mov
dec
push
addr16
push
mov
orb
mov
cmp
je
aad
stos
out
pop
xchg
loopne
pop
in
jnp
push
lret
push
cmpsl
mov
jp
mov
test
sbb
mov
out
repz
fidivrs
stc
ds
aad
mov
clc
mov
insl
cmpsb
nop
fbstp
mov
pop
in
mov
and
mov
aam
mov
mov
jg
popa
xchg
xor
enter
lds
shl
cmp
int3
pop
jle
lret
or
fcmovu
mov
sbb
bound
push
int
lret
sti
daa
xchg
out
sbb
rcrb
lods
xchg
enter
mov
jecxz
stos
or
negl
push
outsl
sub
mov
dec
andl
mov
xchg
sahf
mov
add
pop
mov
jp
push
aad
or
mov
or
sti
jge
mov
int
push
shlb
mov
cmp
sbb
mov
xchg
pop
mov
imul
je
ss
cmp
std
rcrl
push
xor
mov
inc
nop
or
movsb
sbb
pop
loopne
xor
inc
xchg
xor
scas
out
incl
js
xor
jl
mov
test
loopne
out
adc
jmp
adc
sub
inc
into
jle
fs
lds
mov
outsl
icebp
stos
jb
jbe
dec
cli
bound
testl
jmp
xchg
mov
dec
rolb
std
int3
cltd
repz
mov
mov
enter
out
shl
jg
lods
clc
dec
xchg
or
sbb
mov
orb
pushf
repnz
mov
ret
roll
les
lods
or
xchg
je
add
ljmp
push
push
mov
add
insb
daa
ret
or
ret
cmp
add
add
dec
mov
jmp
int3
movb
shll
cmc
push
mov
pop
jl
dec
dec
sbbl
dec
fiadds
mov
mov
add
icebp
mov
mov
and
mov
sbb
daa
sbbb
aas
push
pop
xor
sbb
sbbl
mov
and
xor
jl
or
les
rcrl
je
and
mov
push
pushl
cmpsl
jnp
fimuls
dec
sbb
cmp
cmpsl
ljmp
aad
add
stc
call
push
xor
push
mov
js
insb
fwait
and
pop
push
mov
rcl
mov
test
or
enter
xor
enter
or
pop
xchg
in
lods
adc
aaa
stc
loop
fnsave
mov
movsl
jae
lea
in
int3
lret
out
sbb
gs
push
push
push
into
jns
add
pop
lods
popa
mov
and
mov
pop
cli
cmp
push
sbb
lcall
sbb
cmpsb
adc
in
in
hlt
nop
xor
inc
pop
icebp
jns
in
sahf
test
dec
daa
adc
dec
push
out
movsb
or
loop
mov
clc
std
mov
cmp
xchg
popa
mov
into
into
mov
push
into
inc
int3
std
and
adc
mov
mov
push
sbb
clc
adc
mov
addr16
aad
and
hlt
sub
jecxz
sbb
jecxz
add
les
data16
xlat
sub
pop
cwtl
sub
pslld
inc
stc
cmpsl
shrb
push
push
sub
stos
dec
xorl
sti
adc
sub
imul
lret
iret
out
rcrb
rorb
xchg
or
outsl
int3
mov
push
aam
cmp
inc
adc
mov
sbb
pop
ds
shr
rorb
dec
cs
cmp
mov
in
cmc
je
inc
sub
lret
stos
arpl
sbbl
pop
dec
push
movsl
inc
mov
sbb
loopne
jno
push
mov
inc
push
sbb
rcrb
add
jmp
dec
lahf
mov
cs
xor
mov
inc
js
xchg
scas
jecxz
repz
mov
je
into
fs
lds
pop
in
dec
push
idivl
call
dec
xchg
add
insb
or
out
fldcw
lea
xchg
nop
push
das
cwtl
arpl
jno
in
xor
popf
int3
mov
xor
dec
adc
jl
insl
dec
pop
pushf
xchg
movsl
add
cmp
push
and
arpl
pop
jecxz
cmpsb
jmp
jns
xchg
push
mov
fistpll
notl
mov
xchg
subl
inc
sub
out
mov
arpl
xchg
inc
xor
inc
dec
inc
add
rcrl
pop
pop
inc
sti
dec
cwtl
push
jmp
push
rclb
sub
ds
mov
rcrb
jae
rcll
in
cmp
lret
xchg
les
lcall
sub
push
outsl
xchg
jno
lock
mov
cli
loopne
jnp
test
inc
movsl
sbb
outsl
icebp
fsts
mull
jg,pn
mov
stos
sbb
sbb
cltd
or
inc
in
mov
or
sub
pop
cmp
lret
push
jno
lret
jmp
pusha
cmpsl
outsb
mov
fildll
or
aam
repnz
cmc
cmc
dec
adc
loope
push
popf
ret
out
jge
jg
jb
sbb
lods
or
and
sbb
dec
sbb
jb
push
dec
movsl
jle
add
xchg
lret
out
sub
mov
mov
pop
dec
cmp
mov
pop
test
hlt
in
sbb
add
mov
jle
mov
mov
sub
aam
lahf
pop
sbb
popa
lods
fsub
mov
ret
mov
into
pop
and
pushf
or
jns
push
stos
xlat
adc
testl
mov
repz
sbb
imul
push
jecxz
and
rclb
pop
cmp
xchg
cs
out
ror
hlt
inc
mov
push
daa
dec
sbb
jg
vcvtss2sd
inc
rcrl
iret
add
mov
or
mov
out
shll
and
xorl
sbb
test
push
add
mov
scas
int3
fucompp
cmc
in
pushf
jbe
lods
push
xorl
clc
leave
cmpsl
sbb
pop
test
and
push
mov
lods
rcr
adc
push
jo
cmpsb
ret
inc
sbb
jmp
jmp
cld
sahf
orb
gs
add
mov
dec
inc
lahf
xor
lock
call
add
sti
enter
jge
jle
cmp
dec
or
mov
and
mov
andl
mov
andps
sub
fstl
sub
movsl
cs
outsl
cld
pop
mov
int3
jl
ds
push
mov
lods
pop
pop
xchg
cmpsb
push
call
or
and
clc
fldl
adc
mov
push
jns
push
int
adc
lods
ss
fdivs
loop
scas
sub
add
rclb
movsb
mov
sub
int
pmullw
adc
pop
nop
sbb
mov
push
aas
loope
dec
test
xchg
mov
sub
data16
test
xchg
mulb
mov
mov
adc
xchg
xchg
popa
jb
ds
int
jge
int3
push
dec
xor
add
pop
div
ja
jmp
notb
sub
das
mov
clc
push
cli
jmp
xor
inc
sub
out
xchg
out
add
xor
insl
cmp
dec
jl
add
jp
ret
inc
cmpsl
adc
cmp
or
push
test
movb
mov
ret
push
leave
out
call
cs
out
cmp
sub
jns
xchg
fcompl
pop
popa
fstpt
push
lret
je
sub
into
xor
mov
sbb
jo
test
xchg
sub
jge
xchg
jl
push
in
movsb
lock
rep
ret
sti
mov
es
sbb
neg
or
ficoms
cmp
outsb
outsl
xorl
mov
mov
jmp
add
ret
cmp
imulb
sahf
jne
fisttps
out
mov
add
push
xchg
hlt
rorb
clc
mov
sub
sub
inc
push
clc
add
mov
shlb
ja
cltd
fcoms
dec
push
adc
in
pop
repnz
jno
adc
pushl
xchg
ljmp
and
js,pn
ret
inc
sub
mov
cs
push
cmp
dec
movsl
fcoml
rcrl
jae
les
mov
push
fsts
sub
fsubs
dec
lock
cmc
data16
sub
cmpb
movsl
push
sub
dec
shrl
ds
pop
mov
movsl
jno
rcll
adc
fmull
popa
or
ja
pop
sub
fsubs
lcall
test
mov
test
dec
je
dec
or
lods
jae
pushl
repz
rorl
add
pop
fnstenv
xor
jnp
jns
sbb
xor
push
cmp
adc
mov
adc
add
mov
sub
repz
lods
mov
in
out
aaa
xor
frstor
jns
sub
fdivrs
rep
imul
sub
and
cwtl
mov
push
jne
push
or
cli
adc
or
mov
sbbl
and
pop
jge
jnp
add
xchg
xchg
imull
cmp
push
and
mov
dec
xchg
loope
sar
stos
std
int
hlt
mov
sbb
mov
dec
ds
mov
and
ret
daa
ret
aaa
enter
adc
jno
fistps
scas
bound
movsl
mov
pop
mov
pusha
adc
pop
add
inc
clc
push
daa
sub
adcb
jnp
lidtl
adc
dec
std
push
and
pushf
mov
mov
test
and
dec
adc
sti
jno
mov
ja
jmp
jge
xchg
rcll
mov
add
int
and
mov
add
out
aas
mov
dec
jl
mov
pop
and
mov
ds
xchg
pushf
sbb
push
scas
data16
call
jno
jecxz
sub
mov
xchg
dec
stos
inc
cmc
xor
push
pop
idiv
sti
mov
je
and
andb
pop
scas
orb
xchg
call
cmp
cmp
push
mov
out
popa
jne
sbb
dec
lods
jp
pop
cmp
popa
mov
cmp
cs
fsubrs
pop
xchg
or
mov
push
out
mov
sub
out
sarl
pop
and
jns
mov
sbb
mov
test
jbe
inc
jae
lock
cmp
iret
sti
aad
mov
jno
jnp
jo
fstl
test
adcl
out
mov
flds
data16
inc
addl
movsb
leave
movsb
dec
adc
popf
bswap
xchg
mov
jb
push
addr16
out
sbb
out
aaa
mov
sbb
fidivrs
dec
push
lret
sub
in
push
cli
imul
jge
xor
lods
push
fiaddl
sti
push
and
xchg
xchg
or
cmc
ds
jl
js
mov
ficompl
testb
mov
jmp
ss
mov
mov
ds
lret
add
dec
sbb
xchg
mov
push
add
mov
testl
cmp
nop
mov
aam
gs
dec
xchg
test
add
jmp
out
jb
mov
inc
jo
push
mov
int3
clc
xchg
add
sbb
repnz
es
hlt
add
ss
rcrb
add
and
inc
hlt
je
mov
adc
and
int3
push
test
push
add
cmp
icebp
or
inc
pop
jne
sahf
mov
std
add
jb
pop
pop
rorl
pushf
cld
push
xchg
add
in
outsl
push
jmp
pusha
movd
das
shl
push
lods
dec
sbbb
outsb
pop
xlat
cmp
sub
insb
in
fisttpl
cmp
std
jno
rcrl
out
jle
loope
and
sbb
lahf
clc
inc
jmp
pop
mov
mov
pop
xchg
in
daa
jmp
dec
arpl
xchg
mov
mov
imul
xchg
in
mov
stos
popf
movsb
cmp
je
add
sbb
adc
fisubrl
loope
sbb
xchg
adc
push
pop
iret
subl
stos
or
push
ret
xchg
jb
and
movsl
cmp
push
fsub
mov
pop
add
sub
test
push
push
movsb
into
ficoms
ss
repz
push
ds
pop
arpl
cmp
pop
xor
add
das
arpl
outsl
inc
and
pop
adc
add
mov
mov
xor
in
cmp
cltd
add
int3
mov
aad
pushf
mov
mov
mov
dec
shl
pop
inc
adc
inc
lahf
dec
fldcw
in
addl
xchg
pop
xor
push
jl
inc
or
divb
xor
jmp
lahf
mull
lcall
movsb
les
popf
ret
adcl
and
mov
jp
xor
and
mov
das
push
dec
scas
int
push
inc
fdivr
jnp
push
cli
addl
adc
pushl
lahf
and
xchg
je
mov
mov
jmp
fists
in
outsl
cmp
aaa
testl
inc
mov
jle
out
movsb
movlhps
stos
mov
lods
mov
jo
xchg
loopne
roll
jb
jp
add
movsl
mov
push
xor
or
xchg
xchg
mov
shll
stos
mov
push
adc
inc
fs
mov
in
mov
ror
out
pop
paddsb
out
cwtl
cli
in
dec
xchg
fs
lea
repz
dec
sub
sbb
inc
adc
in
mov
jmp
add
or
inc
cmpl
mov
pop
push
movsb
jae
mov
add
or
and
andb
fisttps
jb
xor
sub
mov
sub
adc
bound
pusha
push
cmp
push
aad
add
dec
mov
rorb
sbb
icebp
arpl
push
daa
cli
cmp
cmpsl
pop
mov
fwait
inc
fcomp
dec
adc
rcrl
mov
mov
mov
and
int
scas
and
jns
or
mov
cmp
cmp
pop
inc
scas
into
mulb
mov
dec
cmpsb
mov
loope
sbb
jg
addb
cmc
pop
adc
std
negb
loopne
adc
mov
lea
rolb
xor
inc
mov
inc
or
ljmp
fiaddl
fcomip
js
loopne
jmp
testb
frstor
xchg
mov
mov
jns
ret
sbb
fucomi
push
mov
movsl
xchg
adc
xchg
rorl
dec
iret
popa
cmp
int3
cmpl
adc
push
lods
cwtl
dec
jae
sbb
stos
jae
add
push
insl
aam
push
lods
sub
sbb
lods
lret
jb
inc
aad
xchg
daa
repnz
mov
sahf
iret
mov
imul
sub
cmp
sub
int
add
outsl
sub
in
icebp
inc
pop
in
dec
movsb
xchg
inc
aad
mov
mov
inc
fadds
mov
push
add
lahf
xchg
adc
and
popf
jb
gs
jmp
cld
and
out
xorb
xchg
ficoms
or
lods
shlb
push
inc
and
add
and
rorb
loop
mulb
pop
mov
pop
arpl
imul
inc
pop
sbb
sbb
mov
call
cmc
loope
pop
mov
out
xchg
xchg
or
ret
mov
add
push
xchg
cmp
lret
mov
pop
lods
adc
pusha
xchg
test
or
dec
mov
or
sbb
subl
lds
push
cmp
jae
hlt
push
mov
adc
aam
cmp
mov
jecxz
arpl
es
xorl
jne
push
xchg
and
sub
inc
inc
idiv
movsb
xor
push
data16
mov
or
pop
in
mov
arpl
sub
inc
jo
add
adc
addr16
ljmp
mov
fwait
mov
xchg
dec
mov
aad
lods
xor
mov
jb
aaa
stc
shlb
push
mov
sub
ljmp
sbb
lock
mov
pop
xchg
outsl
cwtl
mov
and
bound
mov
roll
cmpb
pop
rorb
dec
mov
jp
scas
mov
insb
in
and
mov
js
hlt
ret
push
les
sub
daa
aaa
ss
sub
icebp
xchg
pop
jp
popa
aam
popf
or
add
sbb
mov
inc
sbb
sbb
push
add
xchg
xor
pop
mov
aaa
mov
fs
fidivrl
mov
mov
jmp
rcrb
xor
lcall
sarb
add
test
stos
lahf
fisttpl
ret
adc
es
and
pop
adc
aas
outsl
fcmovu
ja
inc
js
mov
cli
cli
mov
aaa
jge
mov
jmp
popl
xchg
or
sti
xchg
daa
jns
hlt
xor
repnz
dec
in
sub
int
dec
push
jbe
inc
xor
lods
cmp
dec
bound
lods
mov
stos
aad
mov
push
xchg
loopne
pop
cmpb
shrb
mov
add
jns
adc
push
sub
sub
cltd
cmpsb
nopl
aas
push
sub
iret
addr16
mov
mov
adc
dec
mov
stos
push
cli
aaa
adcb
clc
adc
vcvtsi2sdl
mov
and
mov
inc
sarl
cli
mov
ss
and
pop
push
stc
das
ret
xchg
push
inc
push
cmp
sbb
das
pop
and
dec
clc
cmp
in
repnz
pop
mov
std
jae
inc
xchg
aam
or
aad
insb
daa
xlat
pop
inc
jge
inc
jecxz
or
adc
ss
push
xchg
divb
add
inc
xchg
push
mov
imul
sub
push
mov
and
mov
push
sub
mov
pop
mov
fwait
cmp
inc
rorl
push
lods
scas
shll
xor
add
sbb
xlat
sbb
je
dec
repz
imul
jmp
mov
fwait
inc
mov
jae
pop
mov
lcall
test
jge
add
mov
loop
jmp
cli
loopne
test
jp
clc
pushf
mov
xchg
pop
mov
or
xchg
es
cwtl
cmpsl
test
cltd
into
repnz
stc
shl
add
pop
cmpsb
sbb
xlat
cld
addb
ds
pop
divl
pop
cmp
cld
arpl
pop
roll
test
cmpsb
ljmp
pop
and
rolb
stc
cld
mov
addr16
pop
inc
lcall
adc
insl
repz
add
or
add
pop
mov
jbe
dec
add
jg
fdivs
fmul
inc
ja
enter
dec
xor
repz
lock
and
jno
push
dec
adcl
mov
mov
xchg
mov
loopne
push
jne
test
xchg
mov
or
adc
jnp
aas
jnp
in
xchg
push
frstor
xchg
insb
popa
lods
or
xchg
dec
rcll
fistps
std
ds
es
add
mov
xorl
jb
jge
pop
mov
mov
jb
ljmp
push
test
jl
pmulhuw
push
imul
inc
inc
fisttpl
pop
scas
adc
mov
mov
sub
cltd
aam
ljmp
dec
jmp
sub
notb
add
jge
or
sub
adc
add
mov
fdiv
scas
shlb
mov
sbb
or
xchg
stos
or
add
in
and
inc
pop
inc
sbb
pop
aaa
sarb
fisttpl
sbb
outsb
hlt
jg
out
or
fs
mov
cmp
ds
nop
xchg
lock
mov
movb
lahf
aad
or
jb
leave
in
cs
arpl
es
fimuls
in
dec
mov
adc
pusha
mov
js
jno
push
fsubrp
inc
inc
pop
add
inc
push
jl
sti
jecxz
loopne
dec
mov
addl
inc
into
mov
sbb
ja
lods
xchg
mul
cmpsl
insl
out
std
push
lds
movsl
pop
xor
push
add
sbbb
push
mov
test
ljmp
or
fidivl
and
cltd
and
icebp
xlat
mov
xorb
and
ror
loope
addr16
inc
roll
fisubl
dec
jmp
out
add
mov
adc
push
daa
mov
xor
movhps
fs
lds
ror
and
popa
push
mov
call
pop
mov
jae
fistl
fs
das
loopne
dec
inc
or
xchg
jg
push
outsb
mov
jo
pop
pop
or
jl
icebp
jne
xor
dec
mov
call
inc
andb
jecxz
or
fisubrs
or
push
xor
and
cld
inc
cmp
test
rcrl
inc
lret
jae
add
ljmp
push
cltd
adc
jecxz
mov
push
adc
push
xchg
mov
stc
adc
pop
or
lret
or
scas
stos
dec
iret
cwtl
into
mov
movsl
adc
dec
xor
dec
xorl
jge
out
xchg
sarb
inc
push
sarl
push
lret
mov
jnp
add
jae
pop
lret
stos
stos
jae
push
dec
jecxz
adc
jno
pop
movsl
xchg
or
mov
dec
cmpsl
lahf
pop
xor
outsl
push
out
cs
sub
mov
xorl
add
adc
and
ret
sbb
outsb
dec
mov
ds
stc
cmp
xchg
cld
xor
pop
or
jae
xchg
sub
movsl
rorb
std
and
mov
lret
mov
popa
das
rorl
sub
dec
pop
inc
jmp
inc
lret
arpl
test
das
mov
jl
stos
stos
push
mov
and
in
arpl
push
push
inc
jns
mov
mov
mov
sub
cs
xchg
scas
pop
cli
pop
sub
mov
test
call
inc
in
int3
test
scas
jg
test
lods
mov
cli
mov
loop
pop
cmp
out
push
fstps
cmp
mov
loop
jo
addb
push
xor
cmp
xor
cmp
pop
movsl
mov
push
dec
jnp
xchg
ja
in
dec
mov
cs
cmp
les
sahf
inc
data16
lock
push
dec
xchg
mov
das
hlt
lret
ret
sbb
inc
iret
repnz
ficoms
inc
inc
hlt
inc
and
mov
cwtl
jmp
or
pushf
movsl
icebp
cltd
std
stc
push
int
cltd
cmp
test
cwtl
xor
and
xchg
xchg
daa
in
lahf
push
pop
gs
out
cld
add
in
outsl
out
push
and
aam
push
sbb
pop
lahf
push
fstpl
adc
mov
sub
das
xorb
das
scas
xchg
mov
sub
cmp
jns
mov
ficomps
or
pop
adc
and
xchg
faddp
or
and
mov
fstl
aam
xchg
mov
or
data16
push
aam
minps
ja
xor
or
mov
push
pusha
dec
mov
xor
dec
test
push
divl
mov
push
jae
push
jnp
xor
sarb
push
and
scas
push
or
xchg
jl
bound
lcall
mov
unpcklps
add
cmp
add
add
inc
jmp
or
cmp
sbb
cmp
push
in
inc
dec
add
movzbl
push
adc
jmp
lock
pop
xchg
push
stos
jmp
int
fwait
ss
lret
jae
leave
sbb
aad
mov
mov
inc
inc
pusha
mov
repz
shll
cld
push
out
mov
lahf
test
pop
out
pusha
mov
jae
rcrl
adc
add
adc
sahf
and
mov
test
pop
jnp
mov
xchg
iret
repnz
js
ret
mov
inc
movl
jge
pop
test
mov
rclb
xor
mov
adc
cmp
ret
out
movsb
pop
mov
ss
clc
jl
jae
xchg
mov
lea
sub
out
decb
popa
mov
lea
dec
daa
mov
call
xlat
and
mov
movsl
insb
pop
push
adc
mov
adc
cld
xchg
adc
pop
jnp
popf
mov
push
mov
mov
std
xlat
pop
jae
push
jb
imul
dec
fs
sarb
inc
xchg
je
in
jmp
out
into
hlt
lcall
lahf
mov
cli
in
and
dec
jbe
scas
mov
bound
daa
cmc
jl
scas
dec
and
sar
add
movl
dec
or
mov
inc
cmp
dec
rcr
dec
adcl
nop
lcall
jmp
push
push
mov
call
stos
data16
adc
enter
in
loopne
inc
mov
stos
repnz
lods
add
cld
xchg
pop
int3
clc
and
adc
or
and
rcll
jle
inc
cmp
adc
jl
insl
std
popa
jge
cmp
mov
hlt
psubw
cmp
xlat
sbb
aad
aad
lods
rcll
and
insb
add
das
add
or
xchg
pushw
rcr
stos
test
jno
sub
pop
mov
arpl
push
in
or
cmp
loopne
test
cwtl
push
jb
push
sahf
pop
cmpsb
adc
fnstcw
lahf
jecxz
push
jae,pt
mov
hlt
loope
mov
adc
iret
int
mov
mov
lods
pop
es
xor
cmc
inc
pop
fistpll
jge
xlat
mov
xchg
stos
xor
and
mov
subl
iret
loopne
push
iret
push
fisubrs
push
je
adc
sub
fnstenv
in
lcall
jb
sarb
mov
fwait
mov
pop
into
testl
cld
mull
sarl
and
xor
in
ljmp
fidivrs
lds
xchg
mov
push
scas
mov
inc
dec
movsb
pop
loopne
cltd
pop
adc
mov
xlat
xchg
xorl
jae
les
int
fiaddl
lcall
cmpsb
bound
mov
mov
cld
and
pushf
std
out
repnz
stos
sub
mov
bound
cmp
xlat
or
jbe
xchg
rorb
ret
mov
add
add
jl
inc
movsl
push
push
add
mov
ljmp
and
fbld
imul
outsb
icebp
adc
std
ljmp
mov
dec
int3
fs
dec
jge
mov
movsl
pop
ja
ljmp
scas
push
cmp
inc
fnstsw
inc
mov
pushf
fwait
call
dec
push
and
clc
dec
lock
add
pop
jae
and
push
sub
or
sti
jmp
test
mov
insb
aam
add
mov
push
mov
cmp
outsl
cmpsl
lcall
cmp
jmp
sbb
push
shrl
loope
pusha
test
mov
loope
test
dec
pop
incl
sarl
add
xchg
and
in
test
pushf
aam
sub
mov
movsl
incl
and
in
fnstcw
add
inc
push
enter
pop
pop
push
adc
mov
jl
add
jecxz
cmp
loopne
shlb
sarl
fwait
leave
inc
lret
xor
int3
xchg
pusha
in
sub
mov
sub
mov
pop
mov
mov
notb
addr16
jecxz
rolb
shl
rolb
xchg
pop
adc
es
mov
mov
push
clc
or
pop
pop
mov
mov
sub
push
fsubl
jmp
or
push
repz
dec
std
dec
mov
adc
outsl
aaa
roll
mov
cmpsl
data16
push
enter
jne
ljmp
test
cmpsl
ljmp
mov
cmpsb
and
dec
clc
inc
mov
rcl
popa
rclb
or
pop
das
lea
adc
int3
sub
lods
mov
push
outsb
fld
sbbl
ret
xchg
xchg
mov
iret
ja
dec
rcl
imulb
mov
inc
mov
out
divl
pop
and
add
lret
dec
xor
test
in
les
out
xchg
jne
mov
jle
aam
jno
outsb
push
mov
movsb
xchg
iret
addr16
fwait
fs
push
mov
inc
dec
cmp
aam
add
test
and
or
push
enter
lret
mov
test
mov
sub
xor
push
in
pop
aad
add
test
adc
push
test
sbb
mov
xchg
nop
in
mov
xchg
out
jbe
lods
lret
rclb
pushf
sub
shrl
popa
out
or
fwait
pop
adcl
sbb
or
jecxz
xorb
psllw
cmp
pop
into
fwait
adc
xor
repnz
das
cmp
or
push
push
mov
xchg
jo
outsb
cltd
pop
aas
mov
push
int3
push
mov
lcall
js
and
mov
adc
mov
call
xlat
pop
adc
test
xchg
std
sbbb
inc
sub
cmp
pop
jge
mov
jecxz
into
sub
push
fadd
movsb
js
dec
pop
xor
mov
jmp
sbb
mov
fdivrl
shl
rolb
ret
lea
repnz
rorl
adc
out
cld
or
inc
xchg
sbb
push
sub
insl
test
mov
aaa
insb
cmp
pop
sbb
fs
jb
xchg
aam
enter
rolb
adc
sete
jecxz
adcl
inc
push
outsb
stos
push
push
into
pop
rolb
or
sbb
push
fnstenv
ljmp
jecxz
cmp
stos
lods
es
xchg
push
push
adc
add
xlat
ds
adc
mov
cmp
mov
cmp
xorl
cmp
inc
hlt
sub
in
jnp
popf
shrl
popf
adc
les
dec
push
pop
cli
nop
sbb
and
or
sub
and
adc
push
stos
mov
and
mov
mov
icebp
jnp
push
fistpll
xor
or
call
mov
test
and
pop
jb
inc
push
cmpsl
testl
aam
rol
ja
push
dec
insl
mov
mov
sub
lds
cmp
jb
inc
stos
mov
frstor
jmp
rorb
cmc
sub
test
adc
clc
sub
icebp
test
int
ja
fbld
jg
pushf
in
scas
stos
mov
clc
stos
jns
imull
pop
or
sti
cmp
addb
inc
ret
cmp
jg
lret
repnz
add
stos
cmp
sbb
xchg
xor
push
xlat
push
xor
mov
call
dec
mov
test
push
test
sahf
decb
jno
sbb
loopne
jge
push
outsl
jne
fs
shl
lret
add
push
xchg
jns
jge
sbb
add
lret
cmp
jae
mov
jne
adc
or
imul
xlat
popa
inc
inc
mulb
xor
cmpsb
xlat
inc
mov
clc
xchg
in
repnz
fcoms
cli
pop
cmpsl
adc
cmp
leave
sbb
and
push
fiadds
jmp
jge
divb
repnz
cld
loope
cmp
pop
xor
bound
dec
addr16
xor
add
aam
adc
movsb
sti
dec
xchg
jp
xchg
pop
ret
xchg
lahf
outsb
and
ja
loope
pop
int3
mov
xor
aad
insb
movsb
cs
into
in
cmp
out
xor
fs
out
ss
gs
cmp
sbb
leave
stos
adc
dec
popf
cmp
mov
jno
xchg
add
jge
fwait
fs
repz
jle
mov
mov
mov
push
mov
mov
cld
nop
ljmp
push
xchg
sbb
xchg
test
pop
jo
xor
jns
stos
xchg
fwait
xchg
mov
mov
and
or
ja
ret
mov
sub
lea
jp
sub
addl
pop
xor
into
inc
les
shrl
add
test
adc
cmp
test
sar
dec
leave
in
dec
jmp
push
and
movsl
push
scas
jge
pop
add
push
lcall
and
push
fildll
xor
lea
repz
adc
mov
push
movsb
nop
fiaddl
cwtl
repz
pop
ret
hlt
andl
test
out
mov
lea
gs
roll
int3
xchg
out
mov
xchg
jle
mov
shrl
jecxz
in
pop
inc
push
movsb
enter
movsl
lods
iret
cmp
icebp
ljmp
add
jne
add
dec
push
inc
inc
and
data16
dec
cmpsb
ret
xchg
sub
fcomps
outsl
cmpsl
frstor
mov
and
add
sub
mov
ffree
popa
aad
hlt
scas
cmpsb
mov
fcomps
xorb
fisubrs
gs
mov
iret
outsl
add
frstor
outsl
push
add
dec
cmpb
push
cli
add
andl
int3
out
push
jg
xor
or
fisubl
xor
repz
dec
cltd
jno
sub
ljmp
test
sbb
addr16
lock
mov
xchg
js
jecxz
xor
ljmp
adc
mov
jae
stos
cmp
adc
jmp
scas
jo
mov
leave
mov
test
pop
rolb
imul
jae
mov
lcall
fdivs
popf
hlt
mov
scas
imul
lods
mov
pusha
jb
outsb
sub
loope
nop
lcall
insb
xchg
scas
jg
imul
cmp
insb
sbb
inc
add
std
xor
xor
and
aaa
sti
lods
and
sbb
mov
dec
movsb
dec
cli
push
std
pop
rdmsr
std
imulb
pop
pop
sbb
loopne
lods
test
fidivrs
mov
shrl
jae
or
mov
inc
sub
xchg
int3
nop
or
jg
out
hlt
xor
xor
ror
inc
push
push
inc
std
fisubl
push
push
ret
jae
sarb
mov
sbb
inc
inc
cld
pop
loop
dec
push
add
jle
add
push
sub
out
ja
decl
cli
sarl
std
add
mov
andl
ss
push
fwait
mov
mov
or
dec
popf
jmp
ss
adc
test
mov
mov
mov
add
data16
cmp
add
cmp
outsb
enter
jae
lcall
cltd
fbstp
fists
xchg
mov
push
push
lds
push
pushf
aad
inc
mov
mov
in
imul
xchg
das
add
pushf
cmp
or
mov
stos
mov
rcll
adc
sub
sar
test
inc
xchg
fdivrp
jb
loope
jp
testb
jmp
mov
xchg
xchg
sub
xor
inc
cltd
add
mov
jb
jmp
mov
push
pop
std
or
and
dec
rolb
adcb
rorl
mov
pop
mov
mov
xchg
xlat
fs
jmp
jb
lock
or
hlt
mov
jne
mov
leave
pop
pop
loope
sbb
scas
into
push
inc
jbe
out
cs
pusha
adcl
aas
lods
xor
in
cwtl
mov
mov
jae
lds
fstl
inc
addr16
into
aad
jge
push
push
push
loopne
ja
push
mov
sub
add
mov
mov
mov
or
out
rcll
inc
and
jno
mov
les
mov
pop
fbstp
mov
je
fs
je
jmp
js
outsb
sub
sar
sub
shlb
sub
iret
addr16
lret
mov
outsb
int
xchg
lods
jp
cmp
mov
or
fstps
and
sub
push
xchg
fcomps
int
push
cmp
cmp
push
xchg
sbb
lret
or
addr16
aas
and
xchg
push
sbb
xchg
add
iret
push
push
xor
stc
inc
out
jmp
fimull
jge
dec
xchg
aam
cmpsl
in
adc
jo
jnp
add
xchg
adc
push
cmpsl
pop
int3
xchg
icebp
pop
pop
sbb
xor
pop
add
shlb
das
inc
bnd
rorl
out
mov
pop
dec
xchg
mov
andb
push
iret
daa
ljmp
push
mov
inc
mov
jmp
hlt
jo
jge
dec
test
mov
jnp
ljmp
and
daa
sub
xchg
xchg
sbb
outsl
pop
inc
adc
and
cmp
mov
imul
icebp
adc
fbstp
outsl
jae
xchg
inc
test
ss
xchg
and
call
adc
xchg
fsts
leave
xchg
popf
fnstsw
add
scas
mov
das
stc
int
xchg
ljmp
or
or
jb
jb
fildl
popl
int3
loop
jb
add
sbb
adc
iret
aad
std
test
jle
sbb
enter
cmp
leave
pushl
sbb
push
sbb
lcall
mov
xchg
xor
insb
ja
out
or
loope
add
jo
adc
jae
adc
push
loop
shl
sbb
xor
jb
sbb
xlat
roll
sub
int
sti
into
inc
sete
push
outsb
xor
dec
mov
or
xlat
jg
jg
jae
hlt
inc
stc
les
inc
testl
mov
sbb
cmpsl
lret
bound
mov
in
dec
shlb
sbb
es
and
or
add
fadds
adc
insl
popf
xchg
pop
jbe
sub
xor
fwait
jno
inc
xor
mov
mov
lahf
add
xchg
inc
lret
ja
adc
push
inc
repz
adc
in
iret
mov
sbb
out
push
outsl
in
dec
mov
push
jp
stc
cmpsb
mov
push
pushf
pop
xchg
fdivrp
adc
jae
push
xor
out
or
fsubs
inc
shll
adc
in
add
mov
jp
mov
out
jne
mov
icebp
and
cmpsb
ffree
dec
push
cmp
inc
lret
sti
sub
stos
ffree
and
and
and
xchg
mov
lock
push
scas
stos
addb
lds
or
sub
int3
inc
xchg
fwait
or
sbb
xor
cmp
xchg
push
loopne
lods
notl
pusha
add
mov
imul
inc
outsb
jmp
sub
incb
loope
aad
cli
cmpsl
sbb
and
dec
add
xchg
ret
mov
push
lds
imull
dec
and
mov
iret
push
orb
inc
mov
sub
jbe
inc
and
repnz
in
sbb
mov
cmp
stos
mov
fisttpll
ss
stos
inc
out
aam
aaa
call
pop
gs
mov
pop
sub
test
sub
mov
cmpsl
adc
pop
cmovo
lds
scas
ret
or
dec
add
inc
pop
subb
mov
test
sbb
sub
aas
push
sbb
sub
adc
add
and
and
pop
or
dec
mov
movsl
inc
cmp
in
or
dec
mov
idivb
mov
inc
dec
mov
add
inc
into
icebp
int
lret
mov
cmp
cltd
adc
fwait
ljmp
ljmp
push
jnp
test
in
fs
test
or
loope
ss
mov
bound
adc
cmpsl
xchg
sub
ficoms
lods
pop
inc
pushf
jecxz
and
cwtl
lods
push
stos
rorb
stos
jno
je
dec
push
pop
filds
lock
loope
pop
sbb
mov
sbb
fcomps
mov
inc
xor
repnz
mov
jo
or
pop
mov
cltd
xchg
push
lea
es
mov
test
mov
push
xchg
fsts
aaa
movsb
jns
dec
xchg
cld
mov
movsl
mov
or
fldcw
bound
aas
into
xchg
fisubs
push
sbb
xor
es
aam
jne
call
mov
inc
cmp
scas
dec
dec
addr16
mov
dec
and
sbb
in
pop
repz
mov
ss
popa
das
inc
xor
adc
xchg
test
push
and
or
push
lods
sub
pop
adc
pop
cmpsl
add
jp
fldt
leave
jb
aam
sub
xchg
cmp
icebp
lock
xor
hlt
jge
rol
xchg
repz
mov
icebp
add
mov
mov
xor
push
xchg
adc
scas
cld
data16
aad
mov
mov
fistl
xor
sub
cmpsl
movb
and
adcb
pop
stos
sbbb
xchg
jnp
push
jge
mov
jmp
mov
xor
and
movsb
jnp
sbb
add
jp
and
cmp
loopne
test
xchg
hlt
imul
xor
xchg
push
push
push
arpl
sbb
sub
jns
in
push
js
pop
push
mov
outsb
stos
insl
or
decb
sub
or
fdivrl
add
xor
lret
add
cld
and
push
loope
xlat
test
inc
scas
arpl
leave
loop
push
cmpsb
xor
add
mov
mov
inc
movsb
mov
mov
cmpsl
dec
insl
push
outsb
addl
cmp
pop
inc
fidivl
subb
cli
cmp
jmp
xchg
std
in
loope
jae
sahf
xchg
mov
mov
add
xlat
mov
push
add
jno
rcll
mov
je
dec
sub
fwait
mov
inc
or
sbb
mov
jmp
outsb
or
sub
push
inc
mov
jno
and
call
xchg
adc
push
rorb
fidivs
sbb
mov
nop
inc
or
cmp
jg
pop
ret
insb
nop
incb
mov
cli
xchg
enter
xchg
mov
mov
push
pop
js
andl
jecxz
xor
sbb
movsb
xchg
loop
inc
dec
inc
mov
sub
mov
cmp
ss
jo
nop
in
or
add
aam
cld
fsts
pop
dec
out
imul
hlt
into
add
jns
adc
aad
jle
xchg
sub
dec
into
pop
jp
adc
movsb
fdivl
push
push
scas
cmp
ffree
aad
addb
add
inc
pop
mov
mov
cmp
xor
stos
in
mov
pop
fwait
mov
mov
lret
pop
rcll
sbb
icebp
pop
mov
xchg
clc
jecxz
push
mov
and
mov
subl
jbe
mov
iret
daa
lahf
cli
fcompl
int3
cmp
jp
sbbl
push
bound
ja
fcomps
cltd
jb
pop
and
shll
test
shl
xor
stos
mov
pop
or
mov
insl
cmp
ljmp
and
scas
push
repz
pop
xor
pop
ljmp
mov
test
movsb
outsb
cmc
rcll
sub
jbe
ret
sub
jecxz
xchg
and
mov
icebp
and
and
imul
or
mov
push
loopne
les
into
xchg
mov
mov
mov
ret
call
testl
sahf
add
cli
mov
lods
outsb
lods
sbb
shr
jecxz
adc
add
adc
je
pop
jl
xchg
pop
test
jno
inc
adc
adc
pop
sbbl
sub
pop
sbb
xchg
jo
mov
lods
mov
mov
push
adc
pusha
mov
fdivs
cmp
xor
movsl
cmpb
push
xchg
hlt
leave
adc
jmp
or
mov
lea
in
in
and
loopne
cmpsl
xchg
sub
dec
inc
mov
pop
inc
insb
xchg
pop
xchg
xchg
add
push
in
mov
xlat
repnz
mov
out
or
cmpsb
clc
cs
ret
mov
jae
push
inc
mov
pop
push
std
lret
pusha
adc
mov
out
add
mov
xchg
jp
repz
pop
mov
enter
cltd
jmp
mov
notl
jle
into
xor
icebp
push
xor
add
out
ss
dec
push
ror
xor
mov
inc
addr16
repnz
mov
xlat
and
pop
pusha
pop
stos
and
pop
aas
push
fwait
push
in
in
js
sbb
xchg
sbb
adc
add
sahf
lret
invd
or
shrl
mov
out
mov
in
test
sbbb
xor
outsb
test
mov
xchg
mov
and
sarb
aaa
imul
xchg
fsubrs
inc
inc
lods
pop
add
push
loope
mov
inc
pushl
jns
movsb
sub
add
fstl
dec
push
lcall
jp
inc
inc
mov
and
leave
enter
pushf
cmp
int3
sub
cmp
cmc
mov
dec
push
stos
pop
or
mov
jge
addl
movsb
cmpsl
icebp
jbe
mov
dec
lock
xchg
aaa
out
movsl
xorl
and
clc
scas
js
dec
mov
cmp
shr
out
inc
inc
movsb
cld
jo
push
bound
test
sub
jnp
xchg
sub
pop
loopne
and
pop
into
mov
mov
hlt
fsub
jge
std
sbb
pop
add
std
imul
stos
or
out
fildll
inc
adc
mov
adc
cwtl
inc
in
cmp
mov
inc
test
and
test
out
lahf
cli
daa
mov
movb
xor
fcomi
sarb
subb
xchg
mov
lcall
out
pop
sbb
sub
cwtl
xor
jno
movsb
dec
ret
test
sub
fdivrs
push
sub
xor
xchg
inc
gs
out
fwait
int3
ljmp
cmc
call
mov
ret
and
test
enter
mov
inc
int
data16
jecxz
into
inc
push
xchg
sbb
stc
jmp
jns
inc
cmp
fcompl
shrl
push
pushf
jo
ret
ret
clc
pushf
ror
push
mov
jns
cltd
dec
rcl
mov
pop
enter
mov
lcall
dec
pusha
adc
mov
loop
mov
test
xlat
cmp
negl
xchg
cmp
out
insb
ja
aad
call
stos
and
jb
mov
adc
popa
aam
jbe
outsb
push
inc
rcll
and
rorb
inc
lcall
xchg
push
rolb
jnp
ljmp
inc
xor
jnp
push
inc
pop
movsb
out
ljmp
das
push
xchg
cld
push
jns
cmpsl
and
aaa
incl
pusha
bound
ret
enter
push
sub
jge
jo
jnp
dec
sub
fcomps
inc
pop
sti
popf
test
out
fsts
fsubr
cmp
dec
pop
jae
rcr
out
inc
dec
mov
mov
inc
push
icebp
stos
xlat
mov
stos
adc
fistpll
mov
or
out
pop
inc
stc
xorl
push
pop
push
fwait
cmp
mov
std
pop
es
inc
fimull
popa
les
jno
push
xorb
pop
int3
push
mov
jae
sbb
hlt
mov
dec
loop
fs
add
mov
aas
sbb
pop
iret
sbb
add
jbe
cltd
js
push
popa
add
lea
ret
push
fstpt
mov
jno
lret
ja
dec
hlt
fs
std
push
movsl
int
jmp
test
std
jg
int
in
sbb
lahf
sahf
xorb
rolb
insb
xchg
clc
test
addr16
in
andl
icebp
je
cmp
cmp
aas
and
xlat
fldt
xor
push
dec
push
adc
fwait
and
stos
mov
movsb
push
pop
jge
push
xchg
insb
sbb
pusha
loope
jo
pop
push
push
int3
cmp
cmp
jne
mov
sbb
cld
shlb
sub
outsl
movsl
ss
add
push
out
fsubs
push
push
and
shll
in
aad
repnz
imul
dec
pop
pop
dec
fdivrl
sub
jno
sbb
push
pop
pop
jo
pop
adc
adc
cmpsl
pop
sahf
sbb
rcll
ds
into
mov
or
mov
pop
out
push
enter
mov
cmc
pop
lea
adc
sbb
shlb
mov
sub
test
mov
nop
ss
sbb
loope
adcb
imul
push
or
sbb
lds
inc
jecxz
push
imul
jb
push
leave
cmpb
inc
fwait
and
mov
fbstp
xorl
inc
mov
loopne
movsl
or
fwait
scas
das
cmp
clc
sub
xor
ret
dec
jnp
insl
mov
jg
sar
std
lret
je
in
movsl
jns
std
inc
or
xchg
push
dec
xor
insl
dec
cwtl
pop
push
xchg
mov
imul
ljmp
test
lods
push
xor
xor
mov
outsl
lea
jbe
cmp
mov
lods
mov
adc
and
mov
addb
rorb
inc
dec
dec
bswap
cmp
cmp
sahf
les
jo
in
cwtl
xchg
adc
jne
ja
xchg
dec
pop
loop
lcall
pop
ljmp
xchg
shll
sub
popa
add
xchg
or
loopne
cmp
fmull
push
xor
movsb
rclb
ret
paddw
int3
out
mov
lock
es
pop
inc
sbb
add
insb
cld
jb
rclb
adc
xchg
xchg
or
sahf
add
idiv
dec
jg
out
mov
jno
sub
bound
pop
dec
insb
dec
adc
jae
xchg
stc
cli
cmp
inc
jbe
fcmovnu
push
jg
data16
std
xchg
repnz
rcrb
popf
xor
out
call
aas
inc
mov
and
insl
ss
lds
arpl
mov
jo
lea
or
adc
fwait
in
call
sbb
push
mov
leave
pop
sbb
mov
in
push
sub
jae
aas
or
dec
fdivr
js
mov
loope
fcompl
divl
pop
mov
les
jns
or
push
mov
addr16
mov
dec
jne
movq
scas
shlb
in
fxtract
xorb
hlt
xlat
push
jno
in
mov
xchg
loopne
aaa
sbb
add
push
push
pusha
or
insl
out
out
insb
push
fimull
pushf
adc
loope
pop
mov
add
jne
mov
sbb
clc
pop
adc
add
stos
bound
jp
js
mov
lods
mov
outsb
lods
fmuls
inc
and
in
test
inc
hlt
mov
or
sbbb
push
adc
ret
dec
push
mov
incb
add
and
add
xor
xor
je
insl
out
rolb
aas
inc
imul
cmp
mov
adc
dec
dec
xor
or
clc
divb
mulb
insl
jp
jne
xchg
outsl
loop
sub
mov
push
xor
iret
inc
repnz
inc
test
cmp
daa
lcall
in
push
sbb
repnz
cmc
mov
sub
push
in
int
xchg
decb
jge
or
sarl
jg
mov
sub
psubusb
arpl
pop
xchg
push
inc
fcmovne
dec
fiadds
loop
sub
and
jp
sub
filds
or
icebp
test
jge
mov
pop
add
jnp
ror
scas
sbb
movsl
sbb
pop
dec
std
imul
pop
fists
sti
jecxz
in
shl
pushf
jbe
xchg
push
pop
push
lahf
aad
adc
jbe
cwtl
add
cmp
jecxz
cltd
xchg
xchg
loop
fbld
cld
mov
jns
test
jecxz
mov
out
leave
add
xchg
cmp
ja
pop
xor
fildl
pop
cmpsb
mov
cmp
shl
pmulhuw
lahf
push
scas
outsl
adc
sbb
out
push
movsb
ja
add
mov
aas
jp
scas
push
mov
pop
or
sbb
push
in
xchg
push
jle
jno
scas
sbb
fcoms
cmp
and
mov
inc
insl
test
test
fldt
insl
sbb
insb
fs
mov
pop
mov
mov
sub
pop
and
sub
xchg
shr
rclb
push
xchg
or
dec
mov
dec
jg
popa
and
stc
inc
scas
jg
cltd
add
bound
cwtl
push
pusha
int
aaa
outsb
out
out
cwtl
repnz
fsubrp
or
fstpt
les
xchg
pop
pop
fsubp
add
call
jb
and
int3
jecxz
inc
out
out
mov
mov
dec
xchg
std
addl
lea
bnd
das
xchg
test
lret
mov
mov
cmp
je
inc
xor
cmpsl
xchg
jb
jb
sub
inc
imul
fldcw
xor
pop
xlat
push
lret
out
push
mov
and
lcall
jne
mov
mov
inc
jae
imul
cmp
xor
pop
cmpsl
jno
lods
lret
xor
std
rcr
into
xchg
sti
fistl
pop
roll
dec
mov
mov
dec
jl
imul
lods
add
ret
mov
lea
clc
mov
call
push
int
mov
cltd
cli
rolb
ds
add
xor
sub
or
ret
in
sub
push
bound
cmc
mov
into
mov
sub
jbe
out
add
xchg
mov
dec
add
roll
mov
or
fwait
mov
stc
jl
pop
mov
xchg
push
pop
fstpt
out
mov
hlt
mov
lcall
adc
scas
add
andl
inc
movsl
mov
push
lea
nop
cld
fidivrs
xor
adc
xchg
js
popf
add
mov
sbb
lods
fimull
pop
push
les
push
lret
adc
subl
mov
fidivl
cli
divl
out
loop
jne
push
ds
out
push
jae
aaa
or
dec
push
sbb
gs
dec
push
sub
adc
push
sub
dec
mov
les
xor
and
pop
and
into
fidivs
sbb
mov
push
mov
bound
add
out
out
cmp
jmp
in
jge
out
out
xchg
pusha
mov
cmpsl
stc
sbbl
jge
filds
pushf
pop
pop
jg
or
scas
mov
mov
into
sbb
jp
xor
test
fnstsw
or
in
lds
insl
leave
and
sahf
out
in
mov
repnz
cld
jno
and
adc
and
popf
aaa
not
push
outsl
jge
push
sbb
in
fsubs
xchg
and
pop
ss
xchg
cmc
imul
cmpsb
mov
xor
pop
call
mov
orl
inc
sar
pop
jecxz
xchg
nop
mov
mov
out
jle
incb
das
rcrl
sub
ret
test
aaa
je
push
imul
pop
mov
sbb
dec
enter
rol
xchg
es
or
cltd
fmull
int
pop
xor
inc
pop
mov
xorl
adc
mov
and
seta
movsl
dec
cmp
lods
push
jp
push
in
mov
pop
jl
test
and
shrl
ljmp
sub
pminsw
or
dec
cmpsb
sbb
mov
jle
nop
fcmovnbe
lahf
rcll
iret
cmp
hlt
mov
xchg
jne
cmpsb
cltd
jb
cs
cmp
scas
loopne
mov
mov
push
push
adc
loop
push
xor
mull
dec
mov
adc
cmc
outsb
mov
push
fisttpl
incb
inc
or
repz
mov
mov
and
pop
pop
or
hlt
aad
push
and
mov
add
cmp
xchg
or
mov
mov
inc
ljmp
addps
hlt
fisttpll
push
daa
shlb
negb
push
imul
add
sub
loope
sbb
jb
or
test
sub
xchg
sbb
pushf
sub
push
mov
insl
paddusb
sahf
leave
fidivl
int3
fmull
out
jp
pop
add
fwait
adc
int3
xchg
rcrl
push
ljmp
addr16
jb
jb
fidivrl
push
pcmpeqw
orb
repnz
dec
fnsave
mov
fs
shlb
in
jecxz
ret
push
xchg
and
mov
or
rcrl
pop
in
rcrb
out
dec
xor
test
and
fldenv
xor
inc
lcall
xor
sub
pop
leave
add
dec
xchg
fmull
push
popa
xor
fmull
and
jbe
dec
dec
mov
sbb
mov
push
enter
jno
jecxz
jle
jp
or
pushf
jl
pop
pop
mov
and
adc
ss
mov
scas
movsl
mov
lock
fbstp
inc
mov
xor
jo
xlat
add
ss
push
aad
cmp
jg
stos
lret
daa
iret
outsl
repz
inc
aam
cld
movsb
leave
and
test
loop
jecxz
lcall
xchg
roll
and
mov
in
into
jg
in
test
inc
push
jne
je
xor
jge
push
cmp
or
cli
sub
mov
jle
stos
or
fidivrs
jnp
ret
lret
add
xchg
push
or
pop
or
stos
inc
or
ds
imul
outsl
mov
fst
xor
push
test
lea
ds
pop
aam
dec
rclb
or
xlat
xor
pop
pop
jge
lods
mov
lret
lahf
add
cmpsb
fwait
insl
pop
add
mov
es
repz
and
push
mov
stc
outsl
xlat
jecxz
in
subb
test
adc
jp
sub
in
je
aas
pop
fstpt
loope
xor
xchg
adc
mov
iret
jl
push
testb
mov
xchg
push
addr16
xchg
lods
push
ficomps
leave
js
jo
negb
sbb
outsl
xchg
sahf
inc
stc
and
stos
inc
or
adc
stc
xor
cmp
orb
xchg
mov
mov
dec
es
lret
bnd
inc
mov
daa
hlt
gs
pop
add
sbb
jp
fldenv
lret
dec
push
scas
pop
aad
and
sarl
add
sub
mov
push
mov
jl
inc
jnp
jge
pop
mov
lods
sbb
movsl
push
add
adc
in
dec
sbb
fwait
sbb
and
js
loope
lds
fidivl
and
adc
mov
jle
jno
sub
push
jmp
out
mov
add
pop
shrb
inc
subl
insb
rolb
insl
sbb
sbb
mov
test
pop
inc
sub
fstp
inc
mull
out
and
enter
push
push
jp
insb
mov
xchg
lret
inc
leave
std
xchg
insl
insl
pop
lea
lahf
movsb
adc
cmc
xchg
mov
fstpt
scas
mov
or
cltd
jge
add
jmp
adc
push
sub
into
fwait
sahf
inc
pop
je
test
pop
movsb
and
cmp
xchg
data16
insb
add
sbb
pusha
das
cli
push
pop
arpl
inc
mov
sbb
loop
pop
outsb
lret
pop
pop
mov
sti
outsb
xchg
int
jmp
cmp
mov
xlat
mov
sub
adc
lret
out
cmc
adc
sbb
outsl
js
stos
and
jno
outsb
ss
dec
push
popa
xchg
ss
pop
pushf
call
sub
xor
movsb
push
adc
mov
xchg
cmpsb
sub
xchg
and
int3
lahf
cmpsl
out
out
pop
call
ljmp
mov
lods
cld
addr16
dec
pop
sbb
inc
jno
push
es
sub
push
lods
imul
call
adc
push
stos
add
dec
add
shlb
cmpl
adc
sub
popa
mov
or
icebp
push
in
cmpsl
dec
inc
in
or
xchg
or
cmc
pushf
bound
push
mov
adc
add
inc
or
bound
dec
or
jg,pn
or
push
cmpl
inc
andb
pop
or
aad
les
jp
out
test
pop
js
cs
dec
cmp
inc
sahf
mov
popf
cmp
jmp
cld
mov
mov
xlat
les
mov
roll
addr16
push
cltd
xchg
lret
cmp
and
inc
cwtl
scas
shll
insb
daa
stos
cmp
mov
repnz
or
in
lahf
lds
sar
and
fsubs
cmp
inc
cmc
repz
mov
sub
sub
leave
subl
adc
xor
dec
out
mov
in
xor
jae
mov
shll
pop
push
movsb
ret
push
pushf
jle
xchg
cmp
ljmp
inc
pop
xchg
xchg
or
jmp
mov
dec
lods
adc
in
sub
sub
test
fisubrs
xchg
dec
imul
push
nop
xor
push
orl
sahf
cmp
cmp
cmc
loop
aam
fidivrl
mov
in
stos
scas
inc
sub
pusha
aam
xchg
jg
mov
xchg
fcmovnu
addr16
push
jno
dec
insb
or
pop
insl
push
pop
in
fcmove
push
outsb
cli
xor
sahf
dec
loope
sarb
lds
ret
fwait
and
fwait
dec
out
jns
push
add
in
mov
jmp
je
add
pop
andb
cmp
je
cmp
xchg
clc
mov
and
fsubl
add
xor
and
addl
daa
lahf
sahf
nop
sbb
fsubr
mov
jb
lahf
cltd
inc
jae
xor
dec
or
fwait
mov
ja
dec
cs
sub
les
cmp
push
shrl
cmp
push
fldl
repnz
jp
pop
fimuls
mov
xchg
mov
push
pusha
icebp
fldt
into
xor
movsl
rcll
ret
xlat
and
dec
hlt
dec
and
movsb
jge
or
xlat
scas
aaa
insb
jbe
enter
leave
cmpsb
fimull
mov
cmp
pop
and
rorb
xor
arpl
push
cld
jbe
andl
cmp
loop
mov
stos
mov
sbb
fdivs
cmp
movsl
jle
jmp
loopne
jns
adc
sbb
int
ds
call
out
lret
jne
pop
in
insb
decb
add
jbe
inc
cmp
mov
outsb
xor
rorb
test
ffree
movsl
mov
cmp
jp
js
test
add
hlt
lods
inc
pop
test
out
leave
mov
mov
cwtl
shl
aam
adc
add
mov
ja
addr16
mov
add
imull
mov
rcrl
xchg
sub
or
mov
inc
jne
pop
aam
sahf
inc
sub
xchg
sub
pop
sti
lods
orl
sbb
dec
push
adc
mov
dec
shl
push
dec
cli
pop
stc
and
add
mov
call
and
xor
jno
add
mov
mov
es
mov
in
mov
popf
gs
add
cmp
push
mov
jmp
loope
rorb
in
stos
inc
fisubrl
dec
xlat
add
mov
mov
sti
mov
jmp
and
cwtl
xchg
cmpl
lea
jne
div
pushf
lcall
mov
out
push
enter
mov
push
cmpsb
icebp
push
sub
xlat
jge
ret
sbb
or
and
idiv
testl
push
fisttps
or
dec
add
imul
push
aas
dec
pop
sub
out
sbb
out
xchg
addb
jg
roll
mov
inc
inc
cmp
mov
iret
jle
loope
or
lea
ja
cli
pop
inc
push
clc
dec
sbb
mov
pop
jb
mov
jo
fisubrl
outsb
or
adc
sbb
mov
and
sbbl
sarl
sub
jmp
cmpsl
in
stos
xor
popf
push
hlt
xchg
sahf
imull
dec
bnd
lcall
push
push
cmp
cmp
sbb
mov
lods
les
bound
xlat
mov
shl
mov
lds
aad
lcall
or
shll
mov
outsl
in
lods
xor
mov
into
into
data16
xor
mov
ljmp
mulb
sub
stos
dec
mov
cmpb
jmp
dec
iret
mov
negb
ja
pushf
add
jb
xchg
mov
ljmp
push
and
aad
pop
enter
and
call
lock
xchg
add
cmp
mov
sub
loope
into
les
popa
jmp
sbb
add
data16
push
in
shlb
jne
or
pop
adc
dec
add
psubd
cs
cmp
gs
pop
pop
and
pusha
xor
jecxz
mov
cmpsl
test
mov
loop
jbe
in
pop
push
aas
jmp
ficoml
xlat
xlat
aaa
add
dec
inc
cli
pop
cmp
out
dec
pop
sbb
mov
and
cmc
lods
inc
mov
xchg
imul
fdivl
ja
push
adc
cmp
loope
imul
pop
cmp
push
bound
lds
mov
enter
sbb
dec
je
pop
out
add
cmpsb
jo
push
scas
push
fcoms
push
out
sbb
push
xchg
dec
pop
xchg
outsl
imul
xchg
bnd
repz
nop
pop
pop
mov
xchg
or
mov
add
push
inc
movsb
inc
cmc
movsb
push
int
jns
out
pop
jb
pop
imul
daa
xchg
ljmp
sbb
iret
hlt
stos
xchg
repnz
inc
mov
dec
loope
sbb
adc
sbb
popf
sub
adc
stos
push
call
add
das
xor
xchg
je
arpl
scas
push
or
jne
out
or
sub
loop
xor
sbb
stc
call
dec
xorl
jl
and
lret
sbb
loope
popa
lea
and
sbb
mov
or
pop
pop
cld
pop
lret
mov
sahf
in
mov
push
inc
push
and
pop
leave
mov
rcr
call
call
mov
pop
xchg
cmp
loop
and
rolb
ror
fiaddl
aaa
cmpsl
fistpl
add
jae
push
mov
lods
jo
pop
mov
movsb
dec
scas
out
jg
add
add
setg
dec
scas
mov
xchg
loop
push
sbb
inc
lcall
lods
jo
mov
cltd
xchg
jge
fisttps
lret
jge
pop
add
sti
and
add
sbb
lds
movsl
and
lret
lds
inc
push
push
pop
and
or
insb
cmp
pop
xchg
scas
xlat
xor
mov
ljmp
stc
ficompl
decb
das
and
or
bound
cli
add
adc
sbb
xchg
cli
scas
xchg
xor
arpl
mov
and
in
inc
mov
sub
mov
cli
cmp
fisubrl
adc
test
pop
loop
ljmp
adc
cmpb
mov
fcomps
iret
fisubrl
leave
cmp
fisubl
jns
movsb
das
cltd
pop
push
sub
data16
lret
add
pop
mov
test
stos
negb
ds
lods
mov
jne
hlt
pop
cmpsb
cld
repnz
nop
movsl
rorb
jmp
into
pop
push
cmp
push
data16
out
inc
cmp
insl
aad
fdivs
jg
test
mov
ficoms
cli
std
int
out
out
pop
jge
pop
sahf
scas
loopne
mov
jb
pushf
repnz
or
add
dec
into
addr16
or
add
sbbl
pop
or
aam
or
mov
in
mov
push
push
imul
cmpsb
jge
orb
inc
cmp
mov
cmc
jle
cmp
and
movsl
xor
lods
fs
jae
lds
insl
ljmp
vmread
sbb
negb
or
nop
mov
mov
lock
inc
fcompp
xor
insb
cmpl
sub
aas
out
inc
nop
inc
sbb
shl
loope
or
mov
pushf
add
pop
sbb
mov
ds
stc
or
fmuls
xchg
inc
outsl
lods
push
fnclex
pop
sub
xor
fwait
xor
adc
in
jne
mov
popf
test
jge
in
cmp
rorl
push
cld
add
cmp
xor
cmp
pop
cmp
xorb
das
ret
pop
xchg
test
jle
sub
loop
rclb
fucom
test
and
xor
pop
test
outsl
jns
ljmp
sbb
stos
repz
cmp
jp
mov
mov
xchg
xchg
mov
in
cmp
repnz
mov
mov
inc
movsb
cmc
xchg
dec
cmp
xor
loopne
or
divb
xchg
mov
pop
sub
or
pop
popf
loop
jae
sub
add
mov
dec
push
sbb
fbld
cmp
mov
pop
xchg
roll
xchg
scas
cmpsb
mov
inc
insl
ja
lret
pop
int3
inc
pushf
xchg
mov
andl
or
loope
or
sbb
dec
int
mov
push
int3
in
decb
add
les
jo
setl
and
adc
add
adcb
jmp
adc
test
pop
stos
xlat
dec
ljmp
sti
repnz
xchg
pop
push
jo
ror
or
mov
pop
cmp
out
xor
xor
dec
sbb
sbb
cs
or
jmp
mov
bound
jae
jb
mov
jae
push
loope
push
sub
sub
das
stos
push
fisubrl
pop
ret
or
aad
pop
pop
fwait
mov
stos
sbb
cwtl
pusha
pushf
scas
adc
repz
and
sbb
inc
xor
pop
fsubs
inc
in
fidivs
mov
push
xchg
test
or
lods
sti
pop
repnz
inc
push
cmp
aas
ja
mov
shrl
es
dec
aam
outsl
les
out
lds
fildll
mov
adc
out
stos
or
or
add
fisubrs
adc
leave
pop
mov
dec
popf
repz
and
jp
jge
inc
data16
icebp
push
mov
sar
or
movsb
lea
pusha
es
out
test
cmp
and
fidivrs
lret
jne
mov
scas
mov
fcmove
in
lods
cli
outsb
jae
add
cli
daa
cmp
push
mov
inc
xlat
and
sub
fistps
or
lds
push
or
or
dec
popf
je
adc
mov
xor
test
iret
out
popf
rorl
xor
nop
mov
shrb
in
das
inc
mov
insb
les
leave
jo
aaa
jge
gs
xchg
in
call
jnp
repnz
inc
or
outsl
jbe
movsl
adc
lds
cld
pop
sub
jb
cmc
addr16
mov
mov
repz
push
icebp
jno
fwait
std
ret
icebp
outsb
mov
xchg
xor
js
xor
outsl
dec
cmpsb
dec
cmc
inc
lret
pop
stc
popf
das
sti
xchg
loope
aas
loop
insl
cmp
pop
add
jbe
testl
pop
mov
call
fisubl
out
mov
test
out
adc
xor
sub
mov
arpl
xchg
cs
jno
adc
inc
add
or
aad
lret
xchg
inc
incl
dec
xor
in
int
in
cmp
add
mov
lods
rcrb
add
xchg
stos
cmp
push
inc
jg
push
in
xchg
push
push
mov
xchg
arpl
mov
jle
or
and
mov
jge
rol
iret
jnp
ljmp
xor
jl
cmpl
pushf
clc
sbb
aaa
and
call
jg
mov
cmc
mov
stos
adcb
mov
fcoms
or
sub
and
mov
out
jg
xor
mov
sbb
xor
push
aad
movsl
mov
aas
addr16
fiadds
xchg
lahf
negb
cmc
mov
inc
ror
subl
lock
stos
pop
pushf
pop
ja
and
in
mov
cmp
xchg
es
aas
xor
mov
bound
cmpsl
clc
push
push
sub
jle
test
pop
movsl
int3
cmp
popf
jb
mov
or
shll
js
xlat
movsb
jecxz
and
sbb
test
sti
ficomps
cld
xor
and
leave
outsl
pop
push
inc
push
push
negb
inc
into
inc
and
jecxz
adc
hlt
call
inc
lea
lods
cmpsb
in
lret
rolb
and
movb
cmp
sub
scas
jge
je
cmp
rclb
cmp
and
ret
out
fidivrs
decl
repnz
es
push
popa
leave
ljmp
mov
mov
arpl
jns
sub
jo
aaa
xchg
push
dec
scas
and
fdivr
push
in
push
test
mov
mov
or
stos
push
sbb
pop
lret
mov
insl
sbb
xor
xor
cwtl
push
jge
test
mov
jmp
inc
cmp
arpl
iret
xlat
mov
dec
imul
push
xor
push
jg
mov
mov
or
ljmp
pop
cmp
or
fisttpl
int3
xchg
inc
push
inc
lcall
add
jno
push
shrb
mov
mov
outsl
and
in
or
push
push
lock
sub
adc
dec
mov
jle
nop
inc
ja
dec
or
mov
repz
pop
cmp
pop
mov
adc
repz
stc
mov
cwtl
stos
dec
jmp
xor
push
divl
jne
enter
mov
scas
sbb
pop
mov
xchg
push
stc
jecxz
sub
in
stos
xchg
mov
cs
mov
stos
mov
stc
jl
ret
or
int
psllw
and
mov
negl
sbb
loopne
mov
or
lret
jle
aad
out
loope
and
cld
push
cmpsb
xchg
ror
adc
and
out
dec
inc
add
dec
push
or
ds
enter
xchg
pusha
push
cli
sbb
out
sub
mov
mov
popa
push
xlat
nop
pusha
testb
mov
test
sahf
popa
pop
divl
popa
mov
cld
stc
outsl
inc
int
mov
mov
xor
pop
pusha
mov
or
ret
mov
lea
inc
xchg
inc
cs
loop
cwtl
lea
dec
dec
lock
mov
cmp
mov
sub
sub
cmp
daa
cli
xchg
test
imul
pop
mov
out
punpckhbw
adc
lods
xor
jne
dec
ficompl
in
cltd
cmp
add
push
jo
dec
jae
addl
cmp
sbb
dec
inc
inc
xchg
add
aad
pop
dec
jmp
or
mov
insb
fists
cs
fwait
leave
ret
xchg
cmpsb
in
mov
cld
and
test
mov
inc
mov
mov
and
push
andl
pop
xor
aam
push
pusha
mov
nop
dec
xchg
push
mov
dec
or
add
or
test
gs
adc
fdivrs
mov
ljmp
daa
outsb
cmp
fs
add
xor
xchg
or
lcall
movsl
cmp
jecxz
fsub
adc
push
loopne
lods
pop
pop
dec
fwait
jne
mov
scas
ljmp
inc
cmp
add
mov
dec
mov
ficompl
pushf
mov
ljmp
mov
imul
or
fsubrl
es
je
imul
cmp
daa
js
xchg
cmpsb
nop
pop
dec
dec
mov
jl
push
push
fmuls
dec
out
cld
outsb
push
sbb
mov
jo
push
cltd
jmp
add
das
nop
inc
gs
pop
pop
daa
out
inc
cmp
fisubs
hlt
push
sub
ror
xlat
push
sub
mov
sub
dec
loop
cli
lahf
mov
inc
cmpsl
leave
cltd
sbb
push
insb
cli
cmp
les
and
sub
ljmp
dec
sbb
add
pop
out
aad
mov
xlat
xor
push
push
aam
and
xchg
cltd
test
int
cld
pop
pusha
xchg
ss
iret
out
pop
cmp
imul
mov
paddq
int
aam
out
inc
cwtl
fs
adc
jmp
in
mov
mov
xor
adc
in
jne
lea
cmp
inc
mov
stos
mov
lods
push
cmpsb
aad
cmc
add
xchg
out
popa
pop
daa
fs
pop
cmc
xchg
mov
in
pop
xchg
imul
pop
pop
sqrtps
jmp
inc
js
ss
push
jg
sbb
sub
or
pop
insl
dec
push
in
ds
jbe
adc
add
push
faddl
pop
loope
jb
adcb
leave
push
sbb
push
cmp
add
cmpsl
or
sub
test
cltd
mov
imul
push
pop
sbb
dec
divl
xlat
scas
push
pop
sub
les
repnz
fistpll
xchg
fisubrl
outsb
loopne
test
lock
cmp
inc
loope
pop
loopne
jb
movsl
push
dec
mov
jmp
bnd
sub
test
out
cs
xchg
daa
fdivs
sti
aaa
divb
mov
lock
xchg
scas
scas
cmp
lea
push
fadds
ret
adc
adc
lods
sbb
push
mov
push
push
aaa
and
nop
lret
jl
xor
pop
fwait
aas
or
push
test
jne
pop
adc
push
dec
pop
push
std
loopne
or
outsb
mov
sub
bound
push
adc
mov
pop
mov
push
notl
mov
xchg
adc
aas
aad
loopne
in
or
jne
jb
aas
mov
or
test
aam
andl
aaa
push
push
push
push
cld
rorb
aad
mov
ret
lea
out
pusha
nopl
not
addl
rcl
push
xor
push
xor
lock
das
cmp
cwtl
inc
xchg
mov
mov
pop
clc
pusha
cmp
test
data16
push
or
inc
sbb
mov
insb
jmp
and
sbb
xlat
stos
mov
jo
cmp
jo
push
popf
mov
dec
arpl
addb
ss
and
mov
fsub
pop
pop
mov
pop
xorb
fnstcw
fimull
mov
inc
aas
push
inc
scas
xchg
sbb
shrb
stc
ret
fiaddl
imul
sahf
ja
out
sbbl
repz
sbbl
das
jo
jp
ja
repnz
xor
popf
ja
cs
cmpsb
and
cmp
add
mov
scas
rdpmc
pop
data16
xor
adc
xor
jo
sub
int
mov
ss
xchg
cmpsl
shll
les
je
in
pop
push
mov
cmc
pop
out
adc
mov
in
into
jno
mov
pop
mov
movsb
std
imul
xor
lods
pop
push
lret
int
mov
jge
test
flds
cli
xor
dec
repnz
xchg
test
xor
out
in
sarl
xchg
jnp
xor
mov
cmc
rcrl
movsb
pop
ret
std
sbb
xor
mov
and
fcompl
fbstp
lcall
dec
cmp
xor
mov
clc
je
and
mov
int
push
add
daa
lret
xchg
xchg
addr16
ret
cmpsl
int3
cmp
imul
subl
jmp
dec
jne
das
cmp
stos
testl
fs
sub
cmpsl
mov
cmp
int3
jecxz
outsl
or
in
movsl
cmp
inc
mov
jnp
sbb
adc
inc
xor
add
popa
sub
jl
cmp
pop
mov
or
sub
sti
xorl
lahf
add
add
or
aad
dec
push
jne
and
iret
sahf
jle
cmp
jbe
rorl
fwait
js
sub
cs
or
sbb
mov
mov
incl
adc
cli
cld
daa
jmp
stc
pop
push
ret
adc
add
jle
movsl
or
inc
mov
mov
sbb
pushf
mov
mov
jge
lea
out
int3
in
js
stc
ret
lea
mov
inc
jmp
jge
in
jnp
xchg
call
js
xor
pop
dec
lret
lahf
xor
lret
pop
inc
addl
mov
jmp
jae
add
mov
aad
pop
dec
rorl
adcl
mov
mov
push
mov
cmp
push
gs
loopne
adc
aaa
loope
adc
mov
dec
enter
ret
popa
xor
adc
xchg
mov
ret
sub
lds
stc
push
test
shlw
jae
add
roll
dec
or
lret
inc
pop
lock
push
inc
and
jae
out
aam
addr16
sbb
stos
jmp
mov
jae
gs
mov
jecxz
fsubp
test
push
fsubr
fbstp
wrmsr
in
jp
into
into
mov
test
cld
sbb
cwtl
mov
dec
popa
popf
or
mov
popf
add
pop
push
idivl
stc
cmp
or
stos
fdivrl
fidivrl
arpl
inc
in
out
int
push
jne
test
cmp
fmulp
mov
mov
mov
icebp
std
fbstp
loopne
jp
xchg
sub
fmull
test
jo
or
or
pusha
adc
inc
cmp
pop
or
test
hlt
push
or
enter
dec
cmp
jge
mov
dec
dec
mulb
jmp
mov
sahf
jle
movsl
or
ja
pop
in
add
pusha
cmp
adc
xchg
mov
sub
jns
adc
dec
push
pop
mov
scas
jg
fsubl
sub
xor
psrlq
push
cmp
push
pop
repz
xchg
mov
int
jno
xor
pusha
inc
ret
push
imul
in
push
movsl
loope
int
lahf
jmp
mov
jge
xchg
decb
das
cmpsb
fmulp
scas
test
mov
cmp
dec
add
inc
or
pop
inc
test
insl
dec
push
fmuls
mov
aam
and
jne
xchg
js
popa
and
int
cmp
xchg
in
add
jae
sbb
add
test
jle
fld
push
outsb
jo
shll
push
push
dec
inc
push
arpl
inc
addr16
mov
mov
iret
pop
fs
outsl
cli
pushf
stc
lcall
data16
jae
loope
push
repnz
lret
push
inc
addr16
les
in
mov
outsl
cltd
ret
div
add
je
inc
lock
popf
add
dec
push
dec
movsb
mulb
mov
jecxz
ljmp
scas
push
xor
lret
push
out
insb
mov
pop
pop
lret
shl
push
cmp
jnp
mov
xchg
jge
and
push
dec
pop
inc
loop
ret
loopne
test
inc
cmpxchg
fdivrp
lahf
nop
or
ficompl
ss
xchg
cmp
or
movsl
xchg
fcomps
mov
sbb
out
jae
xor
inc
pop
sub
filds
aas
push
push
mov
imul
add
jle
mov
and
xchg
mov
sbbb
cmp
sub
out
outsl
jne
rclb
daa
out
dec
dec
fdivs
mov
testb
scas
push
imul
or
out
jecxz
pop
out
jp
ja
jp
xchg
push
cmpsl
xchg
cmp
xor
jns
out
mov
out
pop
aad
scas
test
in
add
jge
pop
out
pop
xchg
loopne
dec
test
push
xor
in
add
daa
adc
or
mov
cmp
shll
or
sub
cmpsb
out
repz
test
stos
pop
imul
jle
mov
imul
dec
aaa
sbb
mov
xor
sbb
push
in
adc
pop
cmp
jne
xchg
mov
cmp
adc
test
repz
cwtl
cmp
jg
jnp
bound
insb
and
add
xor
mov
popa
xor
bound
cmp
sbb
pop
sarb
add
lods
push
stos
outsb
rcll
fbstp
shlb
mov
fidivl
mov
xchg
cmp
sub
test
xchg
dec
sar
sub
aaa
outsl
sbb
rcrb
pop
jno
imulb
adc
sbb
jbe
or
cmp
xchg
rcrb
dec
es
ljmp
fldenv
out
fsubl
push
xchg
bound
sub
rorl
imull
and
imul
mov
mov
mov
outsl
shll
rclb
sarb
sub
in
pop
sahf
mov
sub
nop
aas
cltd
xor
enter
jns
xlat
rorl
imull
xor
xchg
sbb
dec
andb
lods
outsl
sub
imul
jbe
rcr
aas
mov
jp
mov
or
jmp
sub
dec
mov
cmpsl
mov
sbb
xchg
std
or
push
popf
movsb
sbb
or
xor
pushf
mov
ljmp
jecxz
mov
clc
xor
xchg
jb
mov
arpl
out
inc
fdivp
push
xchg
addr16
pop
inc
mulb
mov
adc
or
icebp
stos
xchg
fmul
pushf
mov
jl
int
or
push
add
jp
lret
cltd
sbb
xor
test
xor
scas
xor
into
inc
mov
pop
mov
scas
mov
add
xor
or
nop
or
mov
fimull
clc
shlb
imul
iret
fldl
cmpl
and
loope
inc
mov
add
lret
xchg
push
in
mov
out
and
pop
add
scas
ja
mov
push
mov
insl
insb
lcall
push
movsb
cmpl
dec
jle
mov
adc
aas
dec
inc
adc
mov
pop
pop
add
cld
imul
loop
sbb
pop
xchg
lret
xor
bound
mov
into
cmp
loope
pusha
sti
popf
adc
and
fbld
or
jnp
pand
xchg
xor
dec
mov
inc
mov
inc
jns
out
push
mov
xchg
sub
lods
push
in
out
or
mov
inc
inc
jbe
int
dec
ret
into
fimull
jo
fucom
dec
push
lods
pop
adc
add
stos
mov
movsl
imul
cmp
and
rorl
test
sbb
lret
int
sbb
stos
xchg
sti
andb
jge
xor
imul
orb
jl
dec
inc
or
or
rolb
sbb
and
jae
popa
sti
sahf
rcrb
aam
push
sub
popf
xor
pusha
scas
ljmp
push
bound
dec
test
ss
dec
sbb
add
cmpsl
add
lcall
test
jnp
scas
pop
inc
jo
sub
ds
js
push
jne
pop
out
ret
mov
jns
push
dec
or
insl
leave
pop
es
add
adcb
fwait
imul
mov
sahf
push
movsl
pop
int
pop
pop
inc
cmpsb
xchg
lock
fmull
sbb
dec
cli
mov
mov
popf
cmpsl
inc
xchg
mov
aam
xor
push
add
out
or
cwtl
inc
iret
push
fwait
sub
and
and
mov
lods
iret
jecxz
push
xchg
cld
sbb
pop
sbbb
popa
int
lods
xchg
adcb
sub
adc
sbb
ret
jge
xor
jecxz
fildl
mov
addr16
push
or
js
xor
movsl
insl
mov
jmp
mov
das
mov
jne
cmp
cld
fs
sbb
or
fimuls
mov
outsl
ds
push
ljmp
and
cli
adc
incb
arpl
sbb
and
sarb
add
call
call
movsb
cmp
aas
test
out
insb
xchg
push
add
inc
shll
push
in
out
aam
jno
jae
mov
pop
fimull
jns
clc
fcmovnbe
mov
xchg
jmp
and
xor
shrb
mov
mov
push
sbbl
test
mov
rorb
or
shrl
push
nop
sbbb
mov
fwait
jmp
push
xchg
xchg
shlb
or
adc
lret
dec
insb
ljmp
cmpsb
sbb
push
xor
jae
in
ret
mov
enter
push
fwait
ret
pop
or
aaa
cmp
out
jmp
cmp
adc
adcl
mov
xchg
push
inc
sti
enter
cs
test
movsl
adc
jl
loopne
loope
mov
push
ud2
jmp
sub
jnp
mov
popf
aam
mov
pop
or
arpl
pop
jo
stos
sbb
into
popl
mov
fmull
nop
mov
movl
xor
adc
ljmp
cltd
pushf
adc
inc
mov
xor
hlt
mov
scas
shll
flds
mov
inc
mov
mov
popa
sub
test
ffreep
out
das
stos
repz
inc
lcall
lock
xorl
push
jp
fdivrs
out
inc
daa
loope
scas
mov
jo
insb
test
mov
sbb
dec
cmc
sub
shl
dec
dec
scas
mov
add
pushf
les
mov
sub
xchg
sub
je
std
into
push
sub
or
or
pop
jecxz
sarl
gs
sub
rcr
jbe
pop
incl
movsb
mov
mov
mov
addr16
jo
jge
std
adc
xor
outsb
sub
jp
fyl2xp1
inc
xlat
daa
sbb
imul
jae
iret
and
sbb
jbe
fsubl
fsubs
sub
dec
sub
aaa
shrb
cli
loop
or
cli
sbb
fildll
cmp
in
mov
push
push
out
popa
mov
shll
or
or
sub
dec
add
popf
rcr
ret
insb
jle
adc
pop
out
jge
sbb
jmp
rolb
lods
add
mov
xchg
push
or
xor
mov
sti
push
xchg
mov
test
inc
inc
stos
out
or
xchg
lods
fs
stc
mov
les
mov
jne
nop
mov
mov
stos
call
int
scas
or
fcompl
cmp
push
out
incb
jne
cmp
insl
push
insl
pop
mov
fildl
aad
jle
push
lcall
mov
adc
mov
xchg
pop
adc
out
adc
inc
in
incl
cltd
lret
pop
aas
jnp
dec
xor
ficompl
pop
decb
loopne
xor
push
fcmovbe
mov
mov
jmp
cmp
add
add
out
fs
cmp
jp
cmp
push
xorb
lods
call
jne
fimull
or
jb
mov
int3
add
inc
xor
imul
nop
and
imul
xor
pop
lods
loopne
cmp
sbb
neg
fdivrs
sarb
mov
mov
incb
jnp
lret
mov
jl
outsl
push
and
ss
xchg
mov
inc
mov
addl
mov
subl
lahf
enter
out
mov
mov
imul
aad
test
insl
outsb
adc
shlb
add
sub
inc
jp
std
pop
push
int
sbb
adc
cli
and
call
mov
cmp
enter
mov
mov
sbb
xchg
nop
jns
scas
fdivr
sar
or
xchg
imul
sub
lea
jl
sub
mov
xor
imul
gs
adc
leave
pop
lahf
sub
or
dec
icebp
add
and
push
fisttpl
rcl
and
xor
popa
jae
xorb
or
cmp
fdivr
daa
ret
pushf
sbb
mov
pop
adc
imulb
mov
mov
add
inc
repz
pop
add
push
sub
dec
int3
xchg
testb
jo
cmp
frstor
fbld
sub
mov
mov
sbb
jno
cmp
push
inc
mov
xchg
in
mov
enter
xor
mov
sub
ss
sub
cld
popf
outsl
adc
adc
lret
pop
adc
cmp
pop
outsl
fimuls
test
stc
out
jge
sbb
stos
cli
mov
xor
in
mov
test
jp
mov
les
push
mov
xchg
out
pop
test
cli
xchg
jmp
xchg
fsubs
inc
dec
jp
push
cmpb
xor
mov
add
mov
and
ret
cmp
jmp
out
mov
or
dec
aas
addr16
dec
cwtl
mov
lret
xor
push
enter
jbe
jbe
and
lret
das
xchg
mov
jne
xor
mov
sub
ret
sub
lcall
pushf
lods
dec
outsl
into
clc
push
shrb
loope
pop
fsubl
push
int
mov
fbld
and
mov
out
fdivr
push
outsb
fwait
xchg
mov
sarb
and
lods
pop
xor
aas
jns
dec
xor
sbb
push
add
ficomps
cs
and
lret
jmp
adc
mov
fisubs
ror
inc
popf
dec
xchg
lds
sub
adc
sbb
rcrb
sbb
inc
sbb
test
sbb
cld
sbb
push
repnz
mov
into
stos
shll
and
lret
lods
cmpsl
fcoml
scas
js
movq
loope
mov
mov
jo
and
pop
sbb
sbbb
xor
or
mov
lahf
push
das
dec
pop
rcl
adc
loope
inc
sbb
inc
dec
mov
mov
or
outsb
inc
sbb
lock
loopne
pop
push
pop
and
add
xchg
xchg
loop
lods
add
mov
lods
insb
fcoms
cmp
mov
fsin
push
nop
test
mov
insb
bswap
lock
sbb
mov
jb
int3
and
jbe
dec
add
aas
inc
pop
decl
stos
pop
stc
and
mov
pop
xchg
lock
dec
mov
in
dec
push
inc
add
pop
fcmovbe
push
jecxz
ja
testb
sub
inc
ja
mov
dec
daa
jle
lods
cmpl
bound
in
sub
push
or
frstor
outsl
mov
movsl
sbb
adc
lahf
xor
and
push
pop
inc
xor
inc
lahf
out
mov
add
add
loope
push
push
mov
std
sarl
dec
call
jo
mov
aad
leave
cmp
scas
and
push
or
jg
lods
loope
in
push
dec
std
lahf
divl
push
dec
mov
sub
test
in
in
push
push
dec
mov
xchg
inc
or
and
sub
aam
jmp
xchg
pop
shr
push
mov
push
pop
andl
xchg
ficomps
mov
mov
add
enter
lea
cld
gs
jbe
inc
test
adc
aas
cmpsl
xor
jb
push
pop
test
fucomi
push
adc
stos
test
stos
out
mov
ror
jo
aad
iret
sbb
stos
pusha
lcall
lahf
popf
lods
mov
mov
or
sub
push
cmp
jns
xchg
lret
stos
ja
jb
jno
add
jno
inc
push
cmp
hlt
ds
aam
lock
mov
addb
jmp
scas
pop
mov
xor
mov
xchg
or
inc
addb
lret
arpl
sbb
call
sti
popf
pop
push
loopne
loope
aaa
xchg
loop
and
les
movsb
inc
je
mov
or
ljmp
jns
jge
setns
mov
test
mov
xor
out
in
hlt
add
scas
or
outsb
push
mov
shll
mov
add
std
pminub
arpl
push
mov
push
xor
stos
hlt
notb
jnp,pn
sbb
mul
mov
insb
or
or
popa
push
and
xchg
add
xchg
dec
or
repnz
mov
in
sar
jb
mov
sti
mov
pop
jle
mov
push
test
loopne
sub
insl
or
cwtl
xchg
xchg
es
flds
sahf
jmp
mov
mov
xchg
inc
xorb
sub
push
ss
pop
push
ret
mov
xchg
mov
dec
jg
movsl
and
mov
dec
or
sub
mov
xchg
mov
xchg
cld
push
mov
pop
dec
icebp
add
mov
lahf
and
or
subl
inc
aaa
loopne
gs
std
adc
in
movsb
outsb
or
pop
or
movsl
rcrb
xchg
sbb
xor
loopne
insb
lret
pop
inc
jno
fisubl
add
fadd
mov
mov
sbb
imul
sbb
lods
test
fs
out
push
dec
nop
inc
ss
and
lds
sahf
repz
dec
push
mov
mov
sti
mov
xchg
aas
inc
mov
xor
sbb
gs
sub
adcl
xor
shrb
and
push
ss
loop
jbe
cmp
sbb
cmp
lcall
and
mov
movsl
sbb
and
fdivrp
les
rol
cmpsl
sbb
or
pop
xor
xchg
mov
dec
or
loope,pt
sbb
mov
cmp
jmp
xor
popf
add
int
scas
faddp
outsb
sbb
lock
in
jmp
ret
out
scas
sub
fimuls
xchg
xchg
and
inc
pusha
jmp
mov
xor
cmp
insb
pop
mov
imul
mov
push
dec
or
call
inc
cs
add
cmpb
lods
lds
mov
repnz
ljmp
add
xchg
into
ret
fisttps
aas
jmp
lea
pop
and
adc
fucom
fiaddl
sbb
leave
dec
out
mov
call
test
test
cmc
lods
or
mov
daa
push
test
pop
jne
mov
popf
cmp
mov
xlat
ja
add
push
inc
out
sub
call
icebp
jns
xchg
cs
jb
test
cmp
dec
jns
lea
mov
mov
int
pusha
sub
jne
jp
mov
mov
enter
push
add
sbb
popf
loop
pop
nop
movsb
xchg
sbb
mov
inc
movsb
dec
daa
call
ljmp
xchg
stc
push
mov
arpl
shrl
cmp
aaa
pop
and
insb
insl
loop
fadds
jnp
pop
in
mov
les
xchg
or
insb
add
enter
sbb
cwtl
cmpsb
push
repz
and
scas
or
ret
std
xchg
add
jp
ror
faddl
mov
dec
roll
mov
jle
cmc
or
adc
jo
push
lcall
shrl
dec
cwtl
lcall
or
jae
cmp
jecxz
jb
pusha
sub
sub
pusha
jl
jne
add
dec
fdiv
push
jne
sub
inc
adc
iret
mov
jle
xchg
mov
cmp
loopne
adc
add
mov
pop
cmpl
out
mov
lds
xchg
stos
addr16
cmp
jle
mov
and
push
movsl
out
aam
inc
vmovdqa
add
cmp
divb
leave
push
push
jge
subb
shl
cwtl
sbb
stc
imul
cli
lods
pop
xor
jmp
stc
jo
imul
or
shl
enter
xor
jg,pn
adc
push
lods
dec
sub
or
xchg
icebp
lods
jl
outsl
fldenv
into
les
cmp
sbb
and
mov
pusha
stc
shlb
mov
dec
fistps
jbe
js
incl
loope
fadd
ficompl
lods
add
loope
leave
jae
fldenv
push
in
and
push
jnp
inc
add
xor
ljmp
mov
mov
loopne
gs
inc
jns
clc
mov
push
imul
scas
cs
push
out
fistpll
add
pop
ret
fldenv
add
or
or
mov
push
dec
mov
add
cltd
cmpb
cld
sbb
scas
and
cmp
add
and
pop
mov
and
out
mov
in
ret
cmp
sbbl
cmpl
mov
or
loopne
mov
rorl
or
push
cmp
bound
lahf
dec
jl
pop
inc
push
mov
inc
ror
rcrl
test
out
imul
rorb
dec
aaa
movsl
mov
std
addr16
leave
pop
or
inc
lods
cltd
mov
stc
test
xchg
inc
and
roll
mov
mov
adc
jb
out
pop
mov
sbb
cvtps2pi
and
test
ja
fimuls
and
pop
mov
pop
outsl
scas
rcl
fisttpll
jle
adc
dec
mov
adc
push
bswap
nop
or
in
pop
push
out
outsl
mov
xor
xchg
adc
pop
mov
rcr
loope
jp
cltd
stos
jl
jns
loope
and
rcrl
fisubs
pop
scas
xchg
jp
aas
pop
add
lahf
mov
das
imul
xchg
cwtl
lahf
push
jno
push
jo
adc
pop
and
jb
xchg
fadd
sub
rcll
or
bound
fimull
popf
scas
mov
movsl
sahf
add
lea
mov
adc
xchg
out
xor
xchg
mov
pop
or
pop
cmpb
dec
cmp
adc
cmpl
movb
cmpsb
jle
push
data16
and
lds
pop
adc
aad
je
adc
and
cmp
dec
out
mov
jmp
stc
cmp
ror
stos
dec
pop
testl
repz
stc
outsb
test
fdivr
pop
call
and
mov
lret
mov
fcomps
sbb
incl
mov
jl
sub
xchg
xchg
leave
xorb
xor
fsts
inc
push
enter
pop
int
test
lret
shrb
in
mov
loop
shrb
pop
and
add
dec
xchg
sub
fwait
add
cmp
jl
daa
cmp
dec
and
aaa
dec
cmp
negb
pop
xor
aaa
xchg
nop
cmpsl
pop
sahf
xchg
fnstcw
data16
lods
aaa
or
jle
xchg
mov
scas
inc
cli
or
add
xor
repnz
xchg
mov
repz
sti
iret
jecxz
and
outsb
loop
or
pop
iret
leave
sahf
sti
adc
sbb
pop
outsb
je
dec
lahf
mul
ljmp
inc
cmp
fnsave
and
lea
jge
jo
dec
xchg
mov
mov
lock
or
pop
test
cmpsb
cs
sbb
sahf
and
cmp
and
adc
pop
mov
jb
dec
inc
hlt
jp
add
inc
push
daa
sub
test
shl
sub
cmp
jge
sbb
mov
dec
pop
push
ret
sbb
add
ret
xchg
rcrl
pop
sahf
pop
mov
xor
mov
add
fs
push
xor
push
xor
fisubrs
into
cld
roll
pop
push
cwtl
loope
pop
dec
jno
aam
adc
testb
scas
and
xor
push
pop
das
and
subb
adc
fildll
aam
mov
bound
sub
cmp
or
add
jno
or
xor
lret
mov
mov
xor
lock
inc
cmpsl
imul
inc
inc
sbbl
jno
fbstp
dec
mov
dec
loopne
ret
mov
mov
inc
adc
add
icebp
sub
xor
leave
scas
addr16
sub
xchg
sbb
pop
and
jge
or
mov
mov
shl
addps
ljmp
in
fdivl
or
iret
lret
es
mov
pop
add
sti
mov
mov
jg
adc
cwtl
add
push
mov
adc
adc
lods
lret
jae
inc
lcall
jno
cmp
sti
mov
ret
sbb
sti
in
inc
jge
sbb
mov
push
jno
adc
and
mov
push
and
jge
jns
fisttps
add
andnps
jbe
inc
push
sub
ficoml
mov
leave
cmp
test
bound
xor
lods
int3
es
jecxz
insl
push
sarb
or
dec
mov
out
cmc
or
rcr
cmp
call
neg
aad
add
sub
xor
or
lds
fstpl
add
xchg
inc
pop
ljmp
xor
stc
xchg
daa
jnp,pn
xor
jp
std
cltd
scas
cmp
std
imul
and
bound
add
pop
pop
jl
cmp
push
jns
push
sarl
push
inc
clc
ljmp
fdivrl
pop
sub
xor
sbb
test
pop
mov
lret
sbb
ror
xchg
cmp
xchg
nop
cld
mov
lock
or
xor
add
cmp
lods
or
xor
mov
pop
sahf
sbb
je
xchg
roll
cmp
pop
mov
daa
cmp
punpckldq
addr16
sub
pushf
jp
jp
jmp
cmp
jae
pusha
stc
dec
aad
dec
xor
sbb
cli
lds
test
jb
imul
jl,pt
in
sub
aas
mov
arpl
mov
repnz
xor
loopne
mov
fimull
xor
adc
shrb
mov
lods
lods
stos
test
dec
pop
fwait
push
jmp
and
and
popf
and
push
imul
fidivrl
int3
rclb
mov
aas
stc
iret
and
leave
sete
push
mov
adc
mov
subl
mov
jno
ja
mov
gs
loopne
movsl
adc
mov
outsl
dec
fdivrl
push
push
jae
push
sub
mov
mov
push
mov
jno
ret
dec
repnz
loope
lods
out
xor
pusha
add
popa
data16
inc
dec
and
call
ljmp
mov
xor
mov
and
sbb
mov
adc
mov
adc
pop
push
mov
xchg
nop
lahf
nop
push
sub
add
jno
mov
pushf
xchg
pop
push
ficoml
loope
jae
mov
lds
scas
pop
mov
loope
push
push
xor
rcrl
xchg
sbb
add
insb
out
in
xchg
cmp
push
insb
jle
add
fs
add
in
pop
fwait
sti
mov
mov
add
adc
lock
xor
sbb
mov
sub
mov
sub
sub
lock
loopne
mov
xor
outsl
or
test
mov
imul
imul
test
mov
inc
hlt
mov
add
xor
push
xchg
sbb
sbb
mov
cmpb
jmp
mov
inc
xor
push
or
mov
push
bnd
cmc
xor
stos
add
or
push
dec
pop
sarb
add
push
outsb
xchg
cs
ret
mov
cmp
mov
xor
insb
cmp
clc
xor
inc
mov
jbe
iret
adc
es
je
lret
cmpsb
sub
and
int3
mov
arpl
daa
push
cmpsb
shl
inc
and
mov
add
cltd
ljmp
adc
mov
inc
ficomps
out
je
icebp
mov
insb
insb
gs
test
je
shll
xchg
jns
mov
and
loope
ss
add
popa
or
mov
push
aam
mov
push
leave
fsubp
das
mov
jb
daa
or
sub
xor
out
push
jl
add
movsl
add
adc
cmpsb
and
mov
pop
mov
test
inc
test
into
adcb
arpl
imul
mov
dec
mov
jne
out
hlt
divb
jl
or
or
ret
cmpsl
xchg
jbe
adc
inc
and
sub
fwait
dec
or
cmp
loope
jp
test
mov
decl
nop
cwtl
or
pop
mov
cs
icebp
stos
cmp
mov
stc
notl
mov
jne
pop
je
jb
xor
arpl
outsb
xchg
cmpsl
inc
out
mov
or
dec
mov
xor
je
sub
roll
xchg
aad
add
outsl
sbb
or
lret
insl
outsl
inc
cmp
mov
jmp
and
cmp
pcmpgtd
stc
insb
sub
jnp
imul
sar
sbb
movsb
xorb
cmc
add
movsb
popa
mov
sarb
pop
and
cmp
pop
cmp
cld
ljmp
sub
and
mov
jb
call
loopne
add
jbe
imul
inc
xchg
xchg
nop
neg
cs
ljmp
pop
jl
int
movsl
xorl
clc
jbe
jne
xchg
dec
cld
jns
mov
addl
mov
dec
shl
out
or
jg
ret
jg
jmp
aam
pop
push
add
mov
scas
lahf
lds
inc
or
je
push
ret
jno
int
sub
data16
mov
sbb
push
jne
movsl
out
sub
aaa
out
sbb
pop
xchg
sbb
adc
mov
mov
push
dec
mov
ljmp
mov
mov
push
aas
inc
test
ja
pop
data16
gs
cmpsb
xchg
pushf
xchg
xchg
push
dec
sahf
rol
out
and
push
jecxz
mov
out
scas
mov
cmpl
test
scas
jae
shlb
jmp
or
adc
call
push
lods
or
ja
jl
push
pop
mov
movsb
adc
add
dec
dec
mov
jo
frstor
xchg
popa
pop
mov
cmp
hlt
cmc
inc
cmp
xchg
lret
cld
push
jae
push
popa
sti
test
sarl
mov
xor
or
lret
xchg
call
jle
lods
mov
retw
adc
push
jnp
andl
xor
inc
jecxz
int3
xor
or
stos
fldenv
xchg
mov
dec
push
dec
xchg
push
jo
push
orl
dec
and
and
decl
pushf
cmp
mov
enter
rcll
sbb
je
lcall
jl
js
jo
in
rcrl
or
cmp
add
jno
xchg
jl
jg
pop
or
shr
jl
js
in
pop
scas
adc
mov
icebp
sub
pusha
mov
inc
cs
test
aad
mov
and
fsubrs
xchg
jns
add
mov
fwait
or
into
ss
in
pop
aam
xor
fistl
push
insl
push
test
cwtl
add
dec
movsb
sub
push
out
cltd
mov
dec
fsubl
inc
fldt
pop
cmp
pop
jns
mov
out
push
lea
mov
xorl
sbbb
mov
scas
jg
out
sti
pop
call
stos
sarb
mov
shl
mov
jbe
mov
cltd
xchg
adc
sbb
xchg
cmp
xchg
xor
aas
xchg
and
fstl
dec
sub
insb
call
sub
xchg
mov
test
and
test
stos
add
mov
adc
sub
lock
mov
fsub
test
mov
lea
and
cmp
mov
dec
js
popf
in
sbb
sub
dec
ljmp
inc
loop
mov
cltd
cmpb
repz
sbb
pop
add
cwtl
sbb
call
enter
pop
call
and
aas
or
scas
shll
divl
mov
outsb
sti
jmp
sub
pushf
pop
dec
cmp
mov
stos
loop
xor
mov
xchg
push
fisubrs
lret
pop
addb
xlat
adc
cmpb
and
adc
and
in
pusha
dec
mov
or
in
lahf
and
add
mov
outsl
mov
sub
inc
add
popa
loop
jae
ljmp
mov
addl
adcl
pop
aas
pop
jne
loop
push
fwait
jbe
insb
inc
mov
lret
mov
jae
jb
push
imulw
and
push
push
lret
xor
xor
loope
daa
sub
test
and
orb
pop
movsb
and
out
int
mov
inc
lret
or
inc
out
shll
out
xor
stos
fsubrs
inc
stc
or
lock
jbe
iret
out
cmpsl
sub
cmpsl
insl
push
lods
movsl
iret
notb
int3
dec
fwait
dec
lea
and
inc
pop
inc
mov
xchg
sub
cltd
aad
js
inc
adc
mov
push
movsb
sub
push
outsb
dec
push
iret
adc
mov
add
in
jnp
mov
mov
shlb
cli
jl
or
inc
dec
adc
andb
mov
xchg
insl
into
aad
dec
and
test
add
sub
cmp
inc
scas
pushf
hlt
mov
and
push
add
push
and
xchg
mov
push
jns
xchg
push
fcomip
scas
pop
popf
lds
lret
repnz
pusha
mov
or
aas
push
push
mov
sub
fisubrs
mov
and
add
int
fsubl
and
mov
pop
and
sub
sub
js
sub
xlat
scas
pop
jg
sbb
clc
out
sub
pop
bswap
push
inc
pop
pop
mov
pusha
clc
gs
push
xchg
add
aas
mov
pop
mul
or
and
sbb
or
mov
stc
mov
inc
ja
jle
in
imul
les
and
pop
push
jnp
or
pop
insb
dec
push
fistpll
xchg
jp
out
xchg
out
sti
xchg
lret
xor
dec
pop
into
mov
movsl
lret
xor
ja
or
stos
rcl
mov
push
nop
or
in
fnstsw
mov
add
ret
ret
sub
mov
scas
test
idivb
ds
xchg
xor
dec
icebp
ss
jns
lock
fstp
aas
mov
xor
sbb
fsub
call
les
adc
lds
shr
shlb
dec
aas
mov
pop
mov
jae
cmpsb
mov
jg
lock
pop
push
das
jp
inc
das
jmp
xchg
jle
insb
mov
push
sarb
ret
mov
sub
lods
mov
enter
jp
and
cltd
adc
nop
lahf
mov
andl
or
sbb
in
xor
pop
adc
outsl
out
scas
pop
mov
push
shll
in
lds
addr16
jg
test
xor
loope
xchg
pop
loopne
test
shl
aas
dec
xor
shlb
jp
loop
lcall
jp
ljmp
jp
orl
mov
cld
and
xchg
jo
fistpll
sbb
fmul
jns
clc
cld
stc
mov
hlt
xchg
jae
arpl
leave
je
shlb
cwtl
pop
mov
push
clc
fmuls
sarl
int
jb
psubb
pop
jno
push
adc
ror
cmp
jno
push
lods
add
dec
mov
jns
dec
pop
dec
jg
cmp
and
cmp
push
pop
dec
mov
cs
insb
or
int
cmp
inc
cmp
movsl
js
movsb
adc
cmp
dec
cmpsl
pop
rcrb
mov
sbb
adc
mov
xor
mov
divl
stc
dec
aas
push
lret
jns
xchg
ret
rorb
loopne
add
mov
xchg
jae
xchg
paddq
shrb
aas
add
fadds
xlat
inc
xor
sahf
sbb
or
jne
lds
cmpsb
cmp
push
int
xchg
sub
fs
in
xchg
mov
shlb
jno
fcmovnbe
push
push
pushf
ror
adc
imul
cli
sbb
dec
mov
add
pop
mov
ds
lcall
test
mov
inc
push
mov
adc
mov
xor
cmp
jns
lea
inc
call
cmp
push
aaa
jp
mov
jno
and
lock
stos
into
rorb
cmp
push
fwait
mov
xchg
push
roll
clc
adc
jne
popa
inc
les
jg
sbb
and
icebp
pop
add
ljmp
add
out
adc
aas
sarb
repz
mov
xor
sarb
stos
mov
dec
fbld
aam
div
sbb
bound
cltd
repnz
adc
sbb
insb
int3
jmp
dec
cmp
leave
mov
pop
lods
fisubs
ret
mov
in
xchg
loope
xchg
fists
mov
leave
lahf
xor
mov
mov
les
mov
scas
mov
iret
aad
addr16
test
es
and
cmpsb
or
add
out
fcmovu
mov
les
xor
xchg
test
arpl
jnp
add
adc
cmp
add
inc
repnz
xor
jl
cwtl
mov
fisubrs
ret
inc
lock
inc
fcmovnu
lds
mov
inc
dec
out
jb
add
addr16
push
cwtl
mov
lock
mov
jae
call
pop
and
sbb
sti
ret
mov
pop
clc
push
call
pop
std
dec
nop
mov
test
test
inc
inc
mov
push
sbb
nop
or
mov
and
mov
jmp
loop
ret
popf
aam
shrb
jge
data16
pop
mov
mov
rorb
mov
dec
out
add
fimuls
push
fcomip
outsb
lret
into
repz
push
and
mov
inc
sbb
add
pop
clc
sub
mov
loopne
and
scas
nop
add
sbb
incb
sbb
dec
sub
dec
or
adc
repnz
or
lea
into
in
shlb
fwait
push
adc
call
test
lcall
jns
jns
adc
push
imul
push
xor
out
leave
mov
orps
push
out
and
bound
pop
mov
dec
test
add
jg
or
push
push
jno
mov
mov
adc
sub
xchg
pushf
xchg
mov
or
lock
and
cli
test
adc
out
dec
out
shl
dec
lods
add
out
rolb
lods
mov
and
mov
dec
cmp
out
in
outsl
xor
mull
ret
sub
mov
sub
jb
clc
jno
xor
sub
enter
int3
leave
and
test
sbb
loope
xchg
jne
rcl
sarl
dec
icebp
lods
mov
pushf
outsb
sub
cmp
dec
pop
sub
sbb
xchg
inc
xchg
pop
test
and
cmp
sbb
adc
inc
sub
xor
data16
call
mov
mov
mov
mov
lock
xor
scas
movsl
das
xchg
shl
cmp
mov
iret
aad
push
pop
call
mov
lcall
inc
jb
pop
lods
roll
mov
sbb
push
inc
adc
inc
divl
lea
pushf
inc
mov
outsb
popa
movsl
cmpw
mov
push
and
pop
aaa
vpmuludq
inc
bnd
jns
ja
dec
mov
cmc
or
fwait
sarl
inc
lds
in
or
fstps
xlat
dec
adc
movsb
rolb
jno
lods
lock
cs
cmp
xchg
jns
add
stos
mov
in
inc
sbb
fcoms
sahf
pop
sbb
mov
or
inc
push
jge
sub
cld
in
mov
pusha
js
cmc
insl
adc
pop
jl
mov
push
ret
imul
insb
xchg
push
pop
sbb
in
xchg
arpl
repnz
xchg
sub
rcrl
or
imul
fsubl
fwait
mov
rorb
rcl
clc
jno
sbb
xor
xchg
dec
xchg
jns
lret
fmul
or
mov
xchg
mov
pushf
in
lret
mov
imul
test
pop
iret
mov
dec
js
cwtl
dec
in
xchg
jmp
divb
push
je
pop
dec
pop
mov
pushf
fcoml
aam
jno
icebp
inc
loop
xchg
or
jae
push
pop
in
push
and
lock
xchg
fists
les
cmpsl
clc
rcrb
leave
adcb
adc
sub
adc
das
sub
maxps
adc
push
in
add
outsb
push
jbe
pop
fiaddl
fsubp
xchg
sbb
push
lahf
xchg
mov
xchg
into
scas
lods
sub
push
fbld
sbb
mov
mov
out
cmp
inc
inc
scas
in
push
imul
mov
xchg
adc
sub
jmp
nop
push
pop
bound
add
jg
popa
in
movsb
add
lahf
and
sarb
dec
xchg
adc
cmp
aaa
je
jg
or
fnstcw
mov
dec
fnsave
jo
jge
adc
or
rorl
mov
xor
cmc
sub
test
icebp
shlb
cmp
sbbb
stos
jo
repz
dec
iret
lcall
repnz
aam
push
arpl
aad
mov
mov
push
ret
push
xor
mov
data16
loop
add
sbb
in
jp
shll
imull
push
push
aas
insb
data16
mov
pop
sbb
dec
andl
jmp
lcall
in
add
ret
je
adc
push
ror
jg
adc
fiadds
mov
outsl
ja
cmc
mov
movsl
adc
scas
sub
inc
pop
sub
cmp
mov
and
out
mov
lods
js
push
push
rcrb
dec
dec
in
pop
mov
sub
xchg
jb
popa
inc
fwait
aad
out
fs
cmpl
movb
pusha
dec
xchg
lea
fdivs
movsb
xchg
outsb
imul
pop
push
out
sbb
push
and
fcoml
dec
cmpb
xchg
dec
ss
or
adc
das
testb
xor
or
pop
ret
adc
xchg
in
cmc
sbb
cmc
mov
add
add
fmul
hlt
mov
mov
sbb
cmc
fldt
lret
lea
add
dec
int
add
cmp
sub
jns
cmc
or
and
aad
insb
jne
adc
into
push
jb
dec
jne
test
pop
out
mov
xchg
sub
je
rclb
and
test
mov
mov
ret
jnp
mov
out
pop
bound
mov
vmovaps
int
clc
dec
sub
mov
subl
aam
in
call
shrl
xchg
and
mov
negb
lock
xor
sarl
adc
cmpl
mov
outsb
jns
sarl
cmpsl
mov
adc
lea
popa
fisttpl
push
imul
cmp
adc
es
sub
loop
mov
sahf
dec
jb
js
ja
pop
pop
hlt
sub
push
mov
dec
push
addr16
push
mov
mov
lahf
cli
subb
out
in
sub
push
test
stos
mov
sti
pop
push
cmp
sbb
outsl
adc
mov
das
inc
xchg
pop
rcll
and
xorl
cli
pop
jg
aad
mov
bnd
push
enter
xor
push
pop
inc
push
stos
push
lea
cmpsl
into
sub
ficompl
push
pop
xchg
cwtl
mov
psrld
mov
add
sbb
mov
or
fisttpl
add
dec
or
std
xchg
xchg
jbe
mov
cld
adc
jo
sub
add
jl
gs
jp
push
jmp
data16
mov
iret
dec
mov
xchg
pushf
mov
je
bound
mov
aas
mov
lods
sub
pusha
add
fs
jnp
insb
leave
mov
andb
rcll
push
inc
fwait
mov
mov
in
out
sub
xchg
and
mov
dec
out
movsl
mul
aaa
sub
andb
nop
and
add
arpl
sahf
lahf
xor
rorb
pop
jge
fstps
push
lahf
ds
xorl
ficoml
fsubs
and
sub
or
mov
mov
call
push
cmpsb
jg
push
jno
insl
ret
jae
add
push
xor
cmp
xchg
cmp
push
outsb
leave
nop
mov
jne
xor
pop
in
mov
mov
push
enter
ss
cmp
dec
int3
cmp
test
addr16
mov
and
aaa
stos
out
inc
dec
xchg
push
mov
bound
cmp
icebp
cmc
cltd
mov
pop
mov
pushf
mov
mov
sbb
jnp
pop
xchg
out
xor
sub
xor
test
or
mov
xchg
cmp
mov
dec
jle
and
sub
clc
push
cld
ljmp
inc
jb
pop
and
sbb
js
out
push
push
or
jl
scas
ds
jae
into
stos
fsubl
push
test
into
stc
pop
stos
test
jge
loope
pop
xchg
xor
insl
push
inc
inc
imulb
dec
lea
ljmp
push
insb
icebp
inc
pop
jb
clc
out
cmp
movsb
or
into
push
lret
fisubrl
push
xor
loopne
testl
push
cmp
rcrb
pop
je
dec
and
cs
notl
push
ja
xchg
enter
push
ret
popa
pop
outsl
test
je
xchg
push
xchg
jb
arpl
stc
ucomiss
mov
adc
adc
cmp
pop
nop
and
sahf
fisubs
loopne
pop
scas
push
and
sub
mov
dec
sub
dec
iret
xchg
out
inc
mov
lret
loopne
negb
mov
pop
sub
pop
xchg
inc
scas
add
popf
in
aam
adc
and
notl
pop
popf
imull
cmp
hlt
xchg
fcompl
jnp
jae
das
or
je
sbb
pop
test
scas
daa
aaa
dec
stos
insl
push
adc
and
adc
cmp
or
pop
insb
add
xor
jno
xchg
pop
outsb
xchg
decl
popa
sub
sarb
push
lret
cli
lret
lods
and
inc
jmp
push
data16
cmp
mov
mov
and
stc
xchg
cmc
adc
imul
jle
pop
mov
jo
imul
les
movsb
out
insb
test
test
adc
imul
or
or
mov
in
iret
lock
push
sbb
pop
cmp
movsl
cmp
adc
mov
mov
adc
push
add
outsb
in
daa
inc
sarl
and
dec
xor
sbb
xchg
push
xlat
add
mov
or
and
idiv
dec
adc
adc
clc
pop
inc
inc
and
xor
sarb
adc
dec
dec
push
dec
dec
sbb
in
lret
jge
mov
push
movsl
ds
xchg
jnp
sahf
mov
push
jg
imul
fisttpll
inc
faddp
mov
mov
cmpsb
mov
sbb
test
or
jecxz
mov
or
mov
sbb
ss
flds
es
xor
das
jp
mov
rorl
mov
pusha
jb
mov
sub
sbb
idivb
out
xor
in
push
into
and
aas
out
adc
test
testl
sbbl
pop
xor
dec
mov
inc
frstor
fcoms
or
jp
and
sub
xor
sub
out
and
das
or
pop
and
out
push
xor
jbe
in
cwtl
scas
xor
push
sti
or
xchg
cs
sbb
xchg
iret
aas
cmpl
hlt
push
pop
sub
popf
sub
xchg
je
adc
rol
cwtl
jnp
xor
jns
aas
mov
lahf
cwtl
and
mov
xorb
add
lret
add
jns
je
inc
dec
push
add
insb
lds
cmpb
push
insb
sbb
jl
arpl
mov
clc
mov
jg
push
imul
dec
adc
sbb
push
out
pushf
jmp
mov
xchg
jg
and
xchg
scas
mov
iret
xchg
mov
loope
jmp
mov
xlat
adc
ret
push
imul
jb
pop
pop
stos
fcomps
fidivrs
gs
shll
int3
xor
orl
push
pushf
aad
js
aaa
xor
xorb
comiss
or
xor
insl
add
lods
jp
mov
mov
dec
mov
cmp
push
push
add
xor
jbe
or
pop
enter
or
ret
lcall
sub
in
mov
xchg
jno
cmp
ds
add
add
mov
mov
popf
add
arpl
cmp
xor
dec
sub
fwait
scas
inc
sti
xor
aaa
push
jecxz
andb
aaa
imul
xor
mov
push
lea
ret
outsb
inc
ds
dec
push
pop
nop
adc
and
arpl
adc
inc
mov
call
jle
inc
cld
loope
mov
lds
jmp
jno
pushf
orl
mov
int3
test
loopne
out
push
dec
inc
pusha
in
jmp
add
outsl
dec
fsubrs
xor
cli
jnp
je
insl
aad
lcall
les
lea
dec
mov
out
lcall
mov
mov
cld
mov
repz
out
loope
jns
adc
inc
ror
mov
cmp
dec
out
sahf
nop
imul
rorl
adc
push
ds
jo
in
adc
lock
mov
ret
fimuls
aam
cs
ja
jb
mov
arpl
rcrl
mov
ss
xchg
js
dec
adc
and
lcall
inc
insb
mov
repz
fs
xchg
pop
insb
aad
mov
clc
cmpsb
mov
jg
push
arpl
mov
xchg
data16
adc
pop
enter
jne
ljmp
icebp
out
loope
lret
cli
inc
add
loope
aad
adc
and
xchg
inc
pop
jle
pop
jnp
mov
adcl
pop
xchg
fimull
gs
jg
cpuid
loope
les
add
mov
fisubrl
and
add
push
incb
orl
aam
daa
dec
decb
test
pop
jb
movsl
mov
cmp
xchg
inc
jge
insb
in
add
rcrl
call
pop
scas
sbb
push
mov
add
sub
cmpsl
push
aas
cmp
es
pop
pop
mov
icebp
sahf
movsl
nop
xorl
jecxz
mov
jecxz
xlat
imul
and
mov
push
xchg
iret
stc
iret
mov
add
sbb
jge
aaa
push
bound
jl
negb
or
pop
fwait
and
sbb
pushf
cmp
inc
xchg
adc
xchg
cmpsl
pop
das
out
and
adc
outsb
cs
and
arpl
add
mov
xor
popf
les
xchg
dec
bnd
pop
adc
xchg
outsb
ljmp
xchg
shl
clc
cmp
in
jle
das
ds
mov
jb
jg
js
add
pusha
stos
push
xchg
lcall
xchg
cwtl
adc
add
push
aaa
sbb
push
lock
cli
int
popa
push
mov
ret
in
lahf
or
ljmp
cld
or
push
pop
mov
popa
jle
cmp
sbb
js
shlb
mov
cmpsb
jg
mov
stos
sbb
mov
ds
pop
out
aaa
mov
jno
les
into
cmpsl
xchg
mov
arpl
xor
pop
pusha
xchg
and
jp
cltd
xor
jne
jl
bound
cmc
pop
and
imul
ret
cmc
and
sbb
jle
add
and
and
add
mov
mov
popw
push
sub
mov
lahf
push
xor
jg
inc
push
dec
jle
dec
mov
jmp
sbb
repz
pop
sarl
popl
xchg
pop
inc
add
int
clc
pop
xor
dec
sbb
jecxz
mov
fst
shll
test
add
fsubl
mov
mov
adc
subl
mov
shl
jne
in
loopne
iret
xor
cmpsb
mov
jbe
daa
mov
cs
pop
inc
lods
test
adc
adc
pop
xchg
lods
push
fimull
shll
push
aam
push
lcall
aaa
dec
int3
or
jb
pop
push
rcr
iret
movsl
mov
mov
stos
xor
sbb
mov
dec
push
loope
xor
push
xchg
dec
das
pop
or
in
sbb
sub
pusha
insb
inc
sub
jb
push
repz
adc
mov
test
sub
pop
mov
int3
mov
jb
mov
cltd
pop
lods
popl
mov
movsb
sahf
dec
jl
insl
adc
aaa
nop
mov
adcb
das
daa
inc
gs
cmp
and
sar
out
out
pop
dec
push
push
loop
fwait
jle
cmovbe
outsb
mov
pop
jne
xorb
xchg
xchg
lods
int
adc
imul
outsb
cwtl
sbb
add
cmpsl
mov
ja
mov
pop
lods
adc
pusha
adc
push
inc
loop
or
test
sbb
add
xchg
jo
xchg
dec
aad
dec
xor
xchg
cs
icebp
pop
add
jae
jge
int
ds
inc
rcll
jmp
sub
inc
cmpsb
in
cmp
add
jae
dec
lret
lock
into
jmp
dec
imul
stc
popf
dec
test
imul
jp
dec
pusha
int3
mov
sub
cs
iret
pop
ljmp
loope
ret
xor
cs
inc
rclb
ret
and
ret
test
mov
pop
adc
fsub
orb
repnz
and
pushf
imul
xor
or
es
push
cmpsb
cltd
dec
xor
cld
cmp
jb
aam
pop
pop
dec
inc
pop
les
sahf
cmp
and
les
popf
jmp
push
mov
movsb
adc
inc
or
in
inc
outsl
inc
ret
xchg
sbb
roll
inc
lods
push
arpl
push
nop
fildll
fwait
imul
clc
cli
xor
sub
adc
mov
xor
ret
das
cmp
add
leave
xchg
cmp
push
cmp
cmp
push
outsl
jns
mov
subl
push
adc
and
sahf
xchg
sbb
mov
ljmp
cmpsb
or
imul
xchg
iret
f2xm1
xor
pop
push
fnstsw
push
xor
loopne
std
je
sbb
jmp
pop
into
mov
test
je
sub
not
pop
movsb
cmp
sti
mov
dec
cmp
dec
sbb
and
and
add
iret
sarb
mov
push
mov
arpl
fnstsw
cld
xchg
ljmp
gs
hlt
movsl
lods
repnz
pop
test
push
xlat
push
mov
fld
and
xor
xchg
push
loop
and
mov
push
shll
mov
pusha
inc
loopne
pop
imul
sbb
xor
mov
movsb
adc
push
cmpsb
out
ret
test
and
into
loopne
shr
sub
data16
mov
jno
inc
and
repz
add
cmp
icebp
das
fdivrs
and
inc
or
pop
std
mov
sub
ss
dec
sbb
sbb
leave
pop
test
dec
loope
or
mov
lahf
dec
and
inc
jg
shlb
sbb
lret
je
cmp
push
scas
and
jbe
mov
popf
cmp
ljmp
jbe
adc
pusha
xor
ret
out
arpl
pop
adc
adc
xchg
xchg
flds
push
arpl
pop
rol
pop
les
pop
mov
xorl
movsb
dec
push
loopne
pop
inc
mov
test
mov
movsl
or
pop
pop
enter
mov
ret
inc
cmpsb
sbb
dec
mov
scas
mov
inc
fiaddl
mov
mov
adc
cmc
add
mov
sbb
and
adc
mov
add
pop
dec
inc
add
xchg
popf
and
pop
scas
push
or
or
mov
lods
mov
int
inc
test
ds
xor
mov
jae
in
fwait
dec
push
jo
mov
das
push
mov
xchg
addr16
adc
sub
or
lods
arpl
jb
adc
loopne
xchg
push
fsubl
ljmp
lea
inc
jmp
dec
cmp
ss
cmp
sub
idivb
into
xchg
xchg
mov
loop
aaa
imul
xchg
bound
std
lret
adc
sub
cltd
pop
xchg
mov
iret
and
xchg
pop
or
in
in
adc
ret
sub
movl
jp
fidivs
xor
leave
or
xchg
ss
jmp
orl
pop
jp
pushl
dec
xor
cltd
mov
sbb
sub
inc
lea
test
mov
xorl
cltd
gs
int
andl
insl
mov
das
jns
push
xchg
daa
cmp
aas
xchg
imul
daa
aaa
cmp
loop
xor
xor
imulb
add
bound
out
jp
cs
mov
inc
es
lret
adc
and
sbb
mov
out
inc
jecxz
and
ret
push
jnp
rcll
mov
mov
xor
or
lods
rclb
loopne
pushf
scas
aaa
sub
mov
lret
push
fidivrs
sbb
addr16
cli
rorl
inc
ss
pop
sahf
out
jae
outsb
testb
cli
subl
aaa
xchg
stos
cmpsl
sub
and
out
stos
and
movsl
je
mov
das
dec
adc
jne
push
mov
popa
inc
sub
push
cmpsl
sub
dec
sbb
push
sbb
outsl
ds
dec
int3
push
sub
or
inc
fisubrl
and
inc
xchg
push
cmp
adc
fs
mov
jmp
xlat
in
xchg
enter
lret
jecxz
jb
sbb
cmpsb
mov
inc
pop
jmp
jmp
loope
xor
ds
xchg
cmpsl
rorb
addb
imul
pop
das
out
movsb
sub
and
ds
aam
push
inc
lods
dec
mov
inc
inc
jp
adc
fabs
movsb
dec
sbb
aad
xor
jmp
subl
push
cwtl
push
dec
fisttpll
jp
lret
dec
xor
int3
fildl
or
xor
subl
sub
scas
and
ja
stos
adc
sub
pop
push
add
xor
adc
add
inc
les
inc
mov
xor
sahf
pop
xor
js
clc
cmp
pop
ja
movsb
addb
adc
mov
fcmovu
xchg
lret
lock
js
mov
lods
xchg
jp
pusha
mov
lcall
cld
loopne
mov
fwait
in
gs
ljmp
mov
mov
fisttpll
or
add
jle
cmp
ss
mov
cmpsb
cmpsb
xlat
ss
jl
movsl
lea
jbe
sbb
and
pop
jo
loopne
pushf
dec
ss
jg
xchg
xchg
xchg
sub
mull
pop
jne
cs
push
jp
sbb
stos
jp
test
push
outsb
jbe
sbb
mov
enter
lods
das
sarb
xchg
out
lods
iret
jb
sti
cld
add
test
or
mov
insl
xchg
xchg
jp
stos
or
fstps
jp
nop
cmp
and
dec
jle
movsb
inc
adc
lock
jo
dec
mov
cmp
dec
enter
xlat
movl
sbb
jecxz
xor
add
fsubr
lods
mov
cmpsl
push
ret
or
add
pop
pop
shlb
dec
in
sahf
sbb
push
rorb
std
push
or
cmpsb
lods
xchg
mov
adc
xchg
lret
adc
addr16
pop
pop
negl
pop
mov
sbb
lret
push
sbb
jno
sbb
test
in
loop
lds
jns
add
aad
loope
xor
push
sub
stc
addr16
outsl
dec
aaa
mov
ret
sbb
int
cli
stos
out
in
insb
in
lds
popf
pop
ret
pop
or
mov
xor
into
loope
inc
push
sbb
push
and
sub
inc
popa
sub
hlt
or
mov
sbb
into
or
adc
push
jmp
or
aad
decl
cs
gs
mov
pop
int3
fdiv
rcr
and
pop
cwtl
or
rorb
imul
pop
div
cmp
and
sub
mov
popa
stos
aaa
pop
pop
loope
fbstp
mov
and
pop
clc
push
or
out
adc
pusha
out
lds
mov
adc
and
jp
movsb
add
incl
imul
push
xchg
jmp
scas
cmp
imul
lea
adc
mov
outsl
sub
je
daa
or
and
lcall
jnp
mov
dec
fsubrs
inc
adc
and
loopne
ljmp
pop
jl
mov
mov
lret
les
sahf
inc
enter
dec
ja
inc
pop
fimull
lcall
mov
outsb
mov
in
jns
faddl
lods
jbe
decl
loopne
sahf
adcb
adc
loope
movsb
push
dec
sbb
push
pop
fsubl
fnop
xchg
rcr
fildll
mov
stos
add
mov
fistps
sub
cmc
out
in
jle
adc
testb
clc
rcr
push
lods
jg
cmp
arpl
lahf
clc
mov
int
leave
rorb
sbb
ds
push
sub
pop
push
lea
mov
loop
fsubrs
ret
cmpsb
fildl
cmp
call
add
xchg
popf
add
outsb
jge
xorb
and
xchg
dec
dec
fsubrs
jb
xorl
jne
mov
mov
fcoms
mov
xor
xlat
mov
test
jl
sbb
jmp
int3
adc
push
inc
cmp
andb
sub
or
jbe
mov
pop
mov
dec
sti
ja
cmpsb
call
nop
xor
stc
pop
push
lret
xor
push
dec
xchg
xor
data16
lock
mov
xor
mov
gs
in
les
or
inc
mov
arpl
lcall
cs
or
popa
je
or
push
in
adc
mov
movsl
in
je
cmpsl
test
pop
sete
mov
in
leave
sbb
ss
mov
cmp
xor
dec
out
mov
lret
dec
jb
lcall
dec
adcb
push
repz
cmpsb
pop
jne
iret
adc
ret
in
sub
or
or
aaa
jno
cmp
push
lret
xor
loopne
pop
repz
movsb
pop
mov
test
push
shrb
fnstsw
push
mov
add
cmp
and
dec
scas
jg
cmp
or
fnstcw
mov
jb
sub
pop
mov
dec
dec
cmp
jl
cmpsb
fcmovnbe
and
aad
insb
test
fstl
jb
push
push
inc
outsb
sub
sbb
pop
data16
sbb
ret
je
outsl
and
mov
or
mulb
shlb
leave
ja,pt
push
sub
ljmp
test
sbb
pop
jmp
push
push
dec
shll
push
cmpb
inc
iret
js
mov
mov
and
sbb
outsl
jecxz
jb
sti
lock
in
mov
xor
popa
movsl
push
inc
pushf
frstor
movsb
mov
call
js
mov
out
imul
dec
push
xchg
rolb
loope
sbb
xchg
test
inc
and
lea
popf
or
hlt
mov
adc
xchg
shlb
add
fdiv
js
inc
sbb
popa
sbb
push
popf
xor
add
add
jae
aad
mov
je
ljmp
cli
int
mov
pop
in
repnz
jbe
push
or
jnp
mov
pop
and
sub
dec
mov
mov
push
sub
mov
add
xchg
scas
outsl
or
clc
or
daa
aad
cmc
ret
shrl
test
jl
fwait
les
jae
rcrl
lcall
mov
or
shlb
jmp
or
sbb
mov
xchg
fxch
inc
call
sbb
mov
or
adc
mov
cltd
dec
movsb
pop
sub
push
in
fcmovnu
insb
xchg
jle
mov
push
pop
fiadds
push
mov
pushf
add
ret
jno
jbe
xor
dec
and
test
mov
insb
cmp
adc
out
pop
mov
push
hlt
push
pop
push
in
fisttpll
fwait
lds
out
ficoml
mov
inc
out
repz
mov
pop
dec
jge
jne
pop
mov
inc
or
js
cli
sbb
push
fadd
and
mov
add
shlb
mov
dec
add
xchg
jno
loope
push
xchg
movsl
cmp
jae
or
pop
outsb
enter
inc
cs
dec
mov
jo
mov
jbe
hlt
inc
mov
cmp
pop
shll
repz
imul
std
and
btsl
in
push
dec
xchg
inc
xor
lret
imul
lea
out
add
cld
rorl
lock
sbb
xchg
cmpsb
repnz
jle
xor
add
mov
adc
stc
aad
cld
cmpsb
pushf
pop
ja
ljmp
inc
outsl
sub
gs
mov
enter
ret
jmp
xchg
sti
clc
sub
inc
sub
sub
andb
mov
fdivrl
mov
xor
rcl
stc
add
pop
mov
push
inc
sub
jecxz
sub
add
jmp
das
push
gs
mov
lcall
cmp
add
xor
in
lock
and
imul
sbb
in
hlt
int3
jle
xlat
sbb
nop
xchg
jo
inc
lods
adc
mov
sub
jle
repz
je
insl
insl
loopne
add
sti
cli
jb
add
fldt
push
test
push
jae
imull
sub
shlb
and
movsb
aam
in
jae
fbstp
mov
inc
lret
cmpsl
inc
push
pusha
outsl
add
mov
sub
fisubl
xchg
ret
js
scas
push
cmp
stos
addr16
js
bound
push
in
xor
adc
movsb
shll
jg
jg
pop
hlt
dec
jo
insl
xorl
ss
lods
mov
jb
test
les
mov
dec
xchg
cmp
add
push
or
xor
adc
lods
jmp
cmpsb
cli
rorb
mov
inc
shrb
or
idivl
sub
cmp
jp
mov
and
push
sbb
lds
call
nop
leave
cmp
enter
push
loop
jo
or
adc
rolb
movsl
inc
and
mov
lea
in
jbe
xlat
ljmp
adc
gs
sbb
fs
xor
inc
jb
mov
xchg
ljmp
fdivrs
or
sahf
cmp
mov
jno
enter
cwtl
enter
push
ficomps
in
push
movl
inc
dec
test
mov
push
leave
sbb
adc
pop
addb
and
pop
cmpsl
out
push
sbb
cmp
ss
cmp
test
dec
mov
lods
xchg
repz
es
jl
mov
test
andb
fwait
and
cmp
pop
test
push
push
sub
popf
inc
repz
sub
push
jge
and
out
mov
jg
xlat
leave
mov
mov
mov
push
xchg
insl
aam
scas
enter
shll
or
jns
mov
das
jmp
fimuls
add
jg
je
jo
sub
mov
popf
mov
push
repz
fcmovb
jl
scas
push
mov
push
movsl
cmp
sub
add
xor
int
inc
xchg
inc
inc
lahf
jmp
pop
mov
pop
push
or
rclb
lods
mov
lahf
imul
mov
sti
lods
xlat
mov
loope
sti
ds
loope
mov
jmp
xor
pop
sub
lea
mov
repnz
xchg
push
mov
sbb
xchg
ss
nop
lret
outsl
sbb
fistps
das
shl
push
nop
sbb
jae
lods
add
cmp
mov
rolb
cmpsb
insb
stc
lret
test
mov
repnz
ret
aad
or
fldt
inc
mov
subb
pop
mov
xlat
int3
and
pop
sarl
xchg
mov
cmpsb
scas
inc
ss
cmp
mov
pop
outsl
mov
mov
xchg
mov
fs
pop
cmpsl
push
insb
push
in
xor
inc
cmp
jne
push
stc
add
mov
xchg
push
out
mov
pop
sub
jp
pop
cmp
pop
or
aad
push
or
jmp
les
orb
add
rol
xor
fstpl
out
cmpsl
mov
sub
lods
and
sub
mov
insb
out
pop
leave
dec
push
aaa
xor
mov
xchg
mov
out
addr16
mov
dec
sub
dec
mov
xor
sti
jg
into
fldl
jae
pop
and
int
pop
xchg
mov
es
repnz
xor
daa
pop
fmul
rcrl
outsl
or
mov
cwtl
push
cmc
pop
icebp
add
std
mov
jb
cmpsb
data16
repnz
sbb
jne
cmp
fdivrl
in
testl
out
sahf
push
jge
icebp
stos
filds
jae
inc
sub
or
fcmovnbe
lock
and
push
pop
bound
pop
cs
cmp
imul
aas
pop
imul
adc
pop
mov
xchg
push
dec
es
pushf
shrb
arpl
loopne,pn
test
sub
dec
aaa
mov
fisttpl
push
cld
xchg
push
stc
inc
pusha
dec
dec
stc
xor
ljmp
mov
xchg
xchg
inc
lods
and
nop
cmp
std
jle
rorl
cwtl
orb
sbb
cmp
sbb
leave
or
push
xchg
repnz
push
pop
and
push
mov
xchg
aaa
add
jmp
nop
xor
xor
dec
jae
mov
mov
xchg
inc
pop
push
testb
xor
pop
mov
mov
jle
stc
sub
adc
xchg
jbe
pop
ljmp
popf
add
and
mov
xor
mov
inc
sbb
mov
mov
push
mov
lods
or
cld
push
mov
in
int3
mov
aaa
jno
cmp
inc
jo
fmul
mov
icebp
jp
adc
enter
xlat
into
mov
lret
mov
sbb
ds
ja
je
mov
adc
cs
icebp
fnstcw
inc
cli
mov
or
dec
aam
push
jo
and
pushf
hlt
cmpb
ss
inc
xchg
js
jmp
les
mov
fcmovnb
fdiv
stos
loopne
loopne
mov
push
mov
inc
jo
inc
jle
xor
xchg
and
adc
jb
xor
ret
stos
mov
repnz
pop
add
mov
imul
cwtl
mov
out
and
outsb
je
inc
and
ss
xchg
push
jmp
push
mov
or
int3
in
xchg
mov
push
sbb
gs
dec
mov
adc
and
rorl
cli
ret
ss
xchg
insb
rclb
push
sub
add
mov
ficoml
arpl
and
stos
aam
aad
dec
and
in
mov
rorl
inc
js
pop
mov
loope
mov
jmp
xor
mov
imul
cmp
mov
push
or
dec
nop
sub
or
mov
jl
pop
pop
lods
imul
call
frstor
shll
mov
in
stos
data16
cmp
jbe
sbb
inc
in
push
push
hlt
xchg
movsl
xchg
add
mov
in
dec
sbb
mov
std
aam
push
loop
ljmp
subb
push
sub
stos
mov
mov
mov
jno
jae
jae
cli
xchg
push
imul
jbe
cmp
lcall
fwait
ss
dec
stc
jnp
outsl
iret
movsb
idiv
push
pop
xchg
sub
cmpsl
rcrl
in
or
popf
stos
push
sahf
insl
mov
adc
pop
inc
es
loope
hlt
jbe
lods
mov
mov
sbb
aas
test
xor
fcompl
movsl
movsl
enter
inc
and
push
cpuid
mov
test
push
mov
stos
push
adc
cs
sub
push
pop
and
filds
scas
addr16
sti
movsl
addr16
gs
popf
dec
xlat
sti
daa
mov
stc
into
inc
out
out
movsb
das
scas
dec
sbb
mov
and
and
fadd
add
adcb
cli
inc
fwait
adc
and
divl
clc
mov
xor
ss
movsb
movsl
aad
pop
jle
adc
jb
xor
jl
lods
out
mov
aad
cmp
pop
cmp
scas
int3
lea
shrb
jge
or
cmp
mov
cmp
pop
aas
sub
stos
mov
mov
dec
in
aad
enter
xor
cli
push
pop
sbb
addl
loop
jo
xchg
fmuls
nop
dec
adc
mov
js
mov
jmp
insb
push
push
sar
bnd
cmp
mov
or
mov
and
scas
add
jecxz
daa
add
pop
sarb
scas
inc
loopne
pop
inc
mov
pop
add
cmp
push
xchg
outsb
outsb
rcl
out
mov
hlt
mov
jge
aad
movsb
bound
pop
jo
push
jnp
aad
push
or
mov
lea
fists
hlt
cmpsl
sub
inc
outsl
and
popa
pop
rolb
mov
mov
inc
jmp
xchg
xchg
nop
dec
xor
std
mov
outsb
dec
mov
push
cltd
sub
add
jbe
ret
mov
std
shl
or
test
cvtps2pd
fistpll
add
lock
jne
cmpl
cmp
dec
insb
mov
notb
push
xchg
test
loopne
fdivrs
or
sbb
test
aam
push
iret
pop
sub
add
cmpsb
cmc
inc
dec
pop
inc
and
sti
mov
out
ds
add
inc
dec
mov
fsubs
rolb
out
sub
jae
lods
xchg
jp
mov
adc
aam
insl
aas
cmpl
imul
aam
add
mov
jbe
cmp
cmpl
push
jns
rorb
mov
xlat
xchg
dec
add
push
movsb
mov
lds
push
xor
ss
jg
mov
jbe
dec
loope
pop
stos
mov
scas
imul
ss
cmp
mov
pop
adc
out
shld
mov
insl
neg
mov
insl
pop
xor
js
push
dec
jge
mov
sub
mov
push
mov
xchg
roll
pop
cmp
mov
hlt
es
out
pop
pop
or
mov
cli
mov
dec
cmpsl
insb
lods
push
dec
push
stos
rolb
lds
dec
or
pop
aam
jl
sub
lods
ss
ss
jns
cmp
sti
shlb
mov
xchg
iret
xor
mov
sbb
xor
adc
lock
cwtl
faddl
fisubrl
jns
jnp
adcb
shlb
sbb
addb
outsl
push
daa
and
cwtl
inc
adc
xor
pop
dec
loopne
cld
xor
pop
mov
mov
push
fidivrs
pop
inc
xor
repnz
dec
xor
mov
int3
out
addr16
incb
pop
fnstcw
out
aas
dec
in
pop
ror
neg
loopne
pop
cmp
test
popa
loopne
inc
movsl
jecxz
cmp
int3
out
or
ds
sub
mov
mov
lret
jnp
test
stos
fwait
mov
std
mov
addr16
mov
push
adc
push
fsubr
push
das
inc
fwait
and
sti
clc
xor
push
xchg
adc
push
mov
sarl
mov
inc
inc
inc
push
pop
or
dec
out
pop
dec
sub
in
sub
add
jge
push
flds
adc
and
pop
adc
mov
mov
test
mov
out
and
std
xchg
aaa
sub
or
add
dec
and
sub
mov
imul
daa
lock
cli
xor
push
cld
scas
insb
imul
and
das
lahf
push
xlat
enter
jmp
sarl
stos
xor
into
or
dec
mov
jp
call
jbe
push
jp
mov
mov
int
jmp
cli
xlat
int
inc
sub
push
mov
imul
lods
push
popf
stos
mov
pop
enter
xchg
lods
scas
mov
imul
jns
push
leave
sub
aas
fisubrs
xlat
mov
aad
push
lock
addr16
dec
xchg
sbb
loope
sub
jne
inc
les
outsl
adc
sbb
mov
jo
and
mov
mov
popw
mov
arpl
xchg
outsb
loopne
std
enter
push
mov
sub
insb
inc
xchg
dec
adc
jp
stos
cmpsb
stc
jecxz
iret
push
loopne
push
rcll
pop
push
xor
adc
and
fwait
inc
cld
insl
call
ffreep
sbb
mov
test
or
adc
daa
mov
sub
cltd
or
mov
popa
arpl
cmp
adc
lods
mov
dec
lret
adc
cmp
sbb
cmp
sarl
cmp
sbb
xchg
inc
outsb
test
repz
addr16
xchg
into
ret
sahf
aaa
lods
fldenv
outsl
loopne
mov
add
fcmovne
jnp
ds
ja
rclb
xlat
je
pop
lea
xchg
or
add
xor
pop
mov
sub
adc
xchg
mov
popa
adc
je
test
dec
insl
sub
ret
or
push
ret
and
add
pop
inc
sbb
pop
pop
js
push
imul
adc
cld
lods
xor
add
push
sub
fiaddl
xor
test
dec
mov
les
add
adc
outsl
stos
fsqrt
je
lock
pop
mov
mov
orl
adc
xor
lock
adc
push
mov
sbbb
jmp
out
sub
cld
jmp
ljmp
adc
mov
push
jo
int
mov
jle
mov
jnp
jle
aad
stos
ja
mov
jle
mov
int
push
mov
scas
mov
and
mov
dec
add
clc
pushf
lods
ljmp
mov
dec
sub
adc
ds
sub
pop
pusha
fdivl
dec
jno
leave
dec
popf
sub
rcrl
scas
fucomp
sbb
test
out
ret
mov
lea
add
sbb
push
jne
push
push
enter
dec
pop
inc
jbe
sbb
add
mov
fsts
cmpb
lock
add
add
iret
outsb
sbb
inc
dec
imull
inc
fidivrl
lock
loopne
jno
add
mov
xor
sarl
push
dec
lods
mov
jae
mov
jmp
jecxz
pop
outsb
test
aaa
imul
loope
sti
dec
mov
test
mov
fwait
mov
pop
jb
push
fs
jmp
push
mov
hlt
lcall
mov
mov
jb
push
imull
aad
iret
je
je
lds
scas
subl
or
mov
push
xchg
mov
out
filds
mov
mov
rcrl
mov
stos
mov
mov
or
insl
or
out
fs
fstpt
popf
sbb
xchg
inc
dec
jg
pop
mov
test
outsl
lock
mov
cli
sti
add
lea
loope
repnz
je
aas
jne
mov
data16
push
jmp
mov
ss
popa
into
repz
mov
arpl
add
cmc
push
cli
fimull
rcll
inc
aaa
jns
push
jnp
pop
ret
mov
adc
jl
mov
pop
jno
push
test
popa
adc
outsl
shlb
ss
test
mov
pop
or
mov
mov
test
mov
adc
jbe,pt
out
push
dec
out
pop
mov
dec
sbb
fstpl
xlat
repnz
or
and
das
xor
xchg
xchg
mov
xor
mov
inc
fistpl
ja
ss
jbe
aam
loopne
mov
cltd
lret
lret
push
cli
shlb
sbb
sti
mov
shr
add
ss
mov
pop
scas
mov
aas
adc
pop
cltd
mov
jl
dec
ret
jle
mov
jmp
sub
into
mov
int
es
mov
or
adc
dec
and
lcall
mov
inc
out
add
push
pop
jl
sub
jecxz
pop
outsb
sahf
dec
pop
and
push
loope
or
repz
nop
and
mov
jmp
out
stc
inc
lret
test
sahf
ds
neg
xor
adc
push
scas
les
and
rolb
lcall
inc
fidivl
pop
inc
int3
mov
pop
scas
sbb
mov
out
inc
addl
out
mull
cwtl
mov
dec
into
inc
and
mov
fxtract
sbb
jno
cmp
fs
cmpl
decb
iret
xor
sub
lahf
roll
sub
ljmp
lcall
cmp
mov
pop
in
cld
lret
jne
subl
cmp
dec
fbld
mov
movsb
pop
jne
enter
mov
pop
out
mov
inc
bound
cli
stos
xchg
push
mov
js
jecxz
sub
ds
outsl
repz
out
mov
cmp
imul
mov
add
xchg
mov
inc
movntps
or
lds
xor
sahf
xchg
sti
test
mov
push
out
fldenv
out
into
xchg
ds
push
push
in
aas
or
cltd
mov
jp
xlat
iret
sub
push
sti
mov
sub
or
ljmp
xchg
inc
mov
out
cmp
shll
fisubrl
mov
scas
test
or
cmp
xchg
push
imul
pop
sbb
insl
int3
inc
in
cmpl
stos
aas
push
jae
jecxz
pop
cmp
enter
add
mov
iret
lret
insl
jge
bound
gs
lock
loopne
mov
sbb
out
lret
ss
pop
or
mov
sbb
ss
ljmp
lods
push
xchg
aam
fcomps
and
loopne,pn
shl
xor
out
js
xchg
lea
jle
mov
pop
push
inc
xchg
sarl
movsb
xchg
cltd
fidivrl
mov
fsubrp
cltd
divb
push
test
cmp
sub
ficomps
push
xor
repnz
mov
and
daa
push
dec
jno
cmp
ret
ds
and
mov
pop
lods
sar
cmc
inc
stos
dec
mov
xchg
pop
add
fxch
push
mov
dec
pop
js
or
enter
andb
lods
adc
dec
push
push
dec
pop
repnz
xor
out
mov
adc
mov
fnsave
out
insb
jl
xor
cld
sub
stos
mov
jno
insl
push
jge
iret
mov
std
sbb
mov
cld
push
cmp
cmp
test
mov
inc
inc
cltd
jns
test
rorb
xor
lock
in
xor
es
popf
mov
adc
loop
movsb
int3
cs
movsl
adc
fisubrs
dec
jb
xchg
je
xchg
mov
fsubs
test
dec
and
inc
dec
pop
mov
sahf
mov
loope
jae
test
out
in
xchg
xor
pop
mov
lea
add
scas
push
sbbb
in
push
inc
push
mov
mov
jae
movsl
and
xchg
mov
xchg
lcall
das
cmp
mov
dec
cltd
jnp
stos
or
dec
lods
ret
loope
inc
lods
mov
sub
cmp
push
and
fnstcw
mov
sub
add
out
rorb
mulps
mov
adc
push
imul
dec
gs
xchg
mov
cli
xlat
aad
ret
stos
out
mov
and
out
jo
push
mov
cmpsb
push
jge
leave
stc
add
jnp
mov
sbb
call
fwait
mov
fwait
ja
mov
jecxz
fildl
mov
out
imulb
xchg
test
xchg
xor
adc
lcall
pop
pop
push
adc
lock
inc
xchg
ret
inc
sbb
pop
inc
bound
shl
mov
mov
cs
fistl
or
and
xchg
mov
lret
mov
add
mov
rcrl
inc
iret
push
xchg
mov
sti
and
mov
or
imul
cmc
sbbl
and
loope
xchg
inc
icebp
mov
cwtl
out
add
or
enter
negl
push
stos
sbb
popa
cmp
dec
inc
and
ret
jecxz
add
jb
lcall
and
inc
gs
and
dec
lret
sub
fsubr
inc
and
mov
add
push
iret
dec
inc
mov
aaa
sbb
aam
clc
scas
sbb
daa
imul
mov
mov
inc
jb
aad
mov
icebp
gs
daa
ja
add
jns
xchg
jp
pop
lret
into
cmp
sub
aam
stos
lret
add
jl
xor
dec
cwtl
mov
nop
inc
loopne
pop
sti
mov
pop
adc
mov
dec
xor
es
jecxz
loopne
mov
fdivrl
xchg
lods
inc
jns
jns
push
lock
or
stos
or
imul
testb
ret
jo
or
lahf
inc
fwait
repnz
cmc
xchg
stc
jnp
xor
out
jle
nop
sarl
popa
in
push
gs
data16
dec
lret
lock
jae
jecxz
jl
sbb
sub
xchg
aas
mov
mov
sub
cmp
mov
orl
inc
outsb
xchg
pop
and
les
sbb
out
daa
in
orl
xlat
dec
mov
dec
cli
mov
mov
mov
mov
shl
in
adc
andb
xchg
cmc
hlt
mov
out
sti
mov
lret
loop
jp,pn
mov
loopne
dec
add
stos
push
cmpsl
out
pop
push
int
shll
in
xchg
loope
lods
inc
inc
js
xor
xchg
es
ret
adc
and
dec
dec
mov
rolb
push
sbb
arpl
jb
cli
leave
adc
mov
movsb
int
subl
xlat
dec
shlb
mov
dec
add
inc
jmp
scas
std
adc
cmc
xor
jnp
les
cmp
xor
data16
inc
cmp
enter
arpl
das
mov
inc
dec
pop
std
cmp
loope
sbb
push
es
mov
xlat
ja
adc
inc
fidivrl
mov
mov
sbb
notl
sub
into
stc
pop
outsl
es
scas
sub
jg
popa
sbb
nop
and
popw
jb
xchg
fstpt
test
ret
cmpsl
jmp
sub
mov
lds
xchg
sub
inc
int
out
jge
outsl
dec
sbb
push
and
xchg
sub
xchg
in
test
js
iret
shlb
pop
cmpsl
cmp
test
adc
loopne
xor
lods
mov
in
mov
ja
xchg
and
or
jp
pop
clc
pop
mov
mov
mov
lret
xchg
ret
jp
aad
sub
cmp
mov
arpl
sub
pop
add
sub
call
sar
inc
cmp
xchg
cmp
in
jbe
es
mov
cmp
inc
add
pusha
push
lcall
pop
test
test
bound
mov
test
cmovge
sahf
bound
or
ficomps
inc
popf
jno
inc
nop
push
pop
clc
sahf
lock
xor
sbb
pop
aam
jo
dec
pop
fwait
sub
cmc
iret
pop
mov
add
jb
sub
addr16
dec
lods
mov
and
xor
inc
jae
clc
sbb
lods
mov
push
sub
adc
mov
fwait
imulb
cmp
adc
mov
test
jmp
xchg
or
adc
sbb
aaa
leave
outsb
jl
sahf
pop
sbb
in
jns
pop
jno
shll
jle
shrl
add
push
mov
sbb
out
mov
sbb
cld
les
shl
pushf
dec
icebp
inc
mov
inc
cmp
mov
pop
mov
or
jno
dec
clc
sub
mov
mov
aam
dec
and
pop
inc
out
xchg
mov
sbb
jbe
add
add
dec
mov
sub
or
mov
outsb
sbb
lea
pop
imul
add
int3
pop
cwtl
scas
mov
xchg
fiadds
sbbb
jp
bndldx
sub
incl
xchg
and
mov
scas
das
adc
aaa
or
das
aad
fldl2t
xlat
sbb
mov
stc
jae
mov
andl
mov
lcall
rcll
popa
lret
push
inc
push
das
testb
jl
data16
and
out
sti
mov
jge
cmp
mov
xchg
adc
shl
lea
lds
in
lcall
mov
xlat
xchg
rclb
push
fistps
cmp
sbb
sub
loop
cmp
bound
aam
fisttpll
dec
push
mov
xor
mov
cs
inc
lock
lea
pop
mov
cmp
mov
pop
xchg
pop
adc
or
mov
fstl
or
filds
xor
jno
ds
lea
popf
sbb
sub
pop
pushf
clc
dec
inc
jbe
out
mov
fildll
adc
sbb
loopne
xlat
xchg
bnd
rcrb
sub
sbb
xchg
pop
and
mov
pop
inc
jl
jge
jne
fiaddl
mov
lea
dec
idivb
icebp
sub
push
mov
imul
scas
xchg
cmpsl
sub
jnp
sbb
sbb
es
repz
mov
pushf
or
movsb
inc
iret
xchg
movsb
pusha
pusha
mov
mov
or
pop
out
jne
lea
push
xchg
addr16
and
out
lds
sbb
or
sti
pop
call
enter
aaa
xchg
leave
insl
mov
xchg
cmp
pop
aam
incb
and
mov
mov
repz
jne
call
push
lds
push
xchg
loope
arpl
fucomp
adc
jno
xchg
mov
shl
js
ja
fsubrl
fisubl
clc
icebp
and
cld
inc
inc
jo
dec
cmp
adcl
cmp
add
gs
pop
stos
cmp
dec
sti
push
imul
or
cmc
xor
cmp
sbb
int
mov
pop
stos
jmp
lahf
push
shr
inc
jg
data16
ss
pop
addr16
sarl
jb
push
fcoml
nop
xor
jmp
in
add
mov
adc
push
fiadds
cmpsl
or
mov
insl
cmc
and
cmp
pop
mov
gs
pop
imul
out
mov
sarb
std
mov
mov
xor
jae
xor
int
movsl
push
jmp
and
push
push
xchg
inc
daa
dec
sub
repz
rol
frstor
enter
stos
push
mov
incl
jbe
add
jb
aas
gs
outsb
hlt
ja
jmp
or
std
imul
repz
mov
inc
add
mov
sti
pop
fsubrs
js
pop
inc
lods
jno
jb
cmpsb
andb
fadds
jmp
mov
fwait
mov
ret
sbb
popa
jecxz
or
loopne
adc
movlps
sti
push
mov
filds
jno
test
sub
fists
add
cmpb
pop
add
outsb
addr16
in
inc
jl
out
jmp
arpl
nop
and
push
shlb
loope
sub
mov
xor
mov
cmp
adc
subb
mov
inc
int
cmc
lods
mov
push
jl
mov
sahf
cmpsb
aas
xor
add
les
fstpt
sub
cmpsl
xchg
sbb
daa
lcall
inc
mov
adc
cmpsl
and
ret
data16
lret
mov
sub
mov
jne
dec
gs
xchg
xchg
push
lods
lcall
daa
test
or
lock
repnz
jp
cmpsb
mov
ljmp
js
enter
xchg
popa
stos
adc
dec
pop
and
lret
jae
lods
add
dec
jmp
mov
mov
daa
int
lds
sub
js
js
adc
or
addr16
sbb
mov
xchg
ja
lods
outsl
gs
or
add
addr16
lods
xchg
sub
iret
sub
pop
mov
inc
fiaddl
lods
bnd
data16
pop
mov
inc
ss
movsl
cmp
sub
faddl
in
jo
jle
mov
ljmp
sbb
ret
mov
fistl
or
lds
sbbl
push
cmp
push
or
leave
shr
in
pop
iret
out
int3
ret
stc
les
shll
sbb
jno
adc
sbb
loop
inc
lods
movsl
jge
dec
mov
cmp
jle
gs
pop
rorb
add
fsubl
xchg
shlb
bound
sahf
push
pop
arpl
mov
push
sub
flds
inc
xor
loop
mov
stos
notb
mov
fcom
aas
inc
in
fadd
icebp
push
cmp
sbb
divb
popa
ljmp
mov
jo
and
xor
jo
sbb
aas
cltd
xlat
xor
jbe
mov
xchg
push
icebp
popl
inc
cmpsl
out
fstpt
pop
sbb
cli
sub
roll
or
out
lods
mov
jns
xchg
xchg
mov
inc
mov
daa
movsb
xlat
jge
sub
dec
fwait
scas
dec
lock
xchg
push
push
dec
mov
pop
imul
imul
or
fstl
pop
insl
lods
dec
cmp
fstpt
aam
mov
lahf
push
repnz
mov
cmp
sbb
aas
dec
cmp
jno
scas
sub
or
jge
xchg
mov
mov
sbb
cmp
inc
push
js
out
dec
int
dec
mov
push
xor
mov
shll
or
mov
movsb
xor
and
cltd
lret
inc
ret
fnstcw
dec
lods
push
fbld
loopne
int3
pop
xchg
adc
push
inc
xor
jecxz
or
std
mov
and
lods
imul
dec
cwtl
out
cmp
add
or
rclb
and
xor
in
imul
dec
inc
and
mov
push
pop
pop
ret
mov
inc
and
adc
push
lret
or
imul
adc
pop
cmc
mov
jg
and
add
lahf
call
xor
aad
push
pop
pop
push
dec
loop
pop
xchg
xchg
push
and
push
and
std
sbb
cmp
sbb
call
stc
stos
mov
lds
push
cmpsb
ja
xchg
xor
dec
push
addr16
sbb
lea
add
inc
mov
lds
mov
mov
adc
out
add
lds
stos
ret
xchg
dec
sti
mov
not
lods
xchg
mov
fsqrt
into
inc
mov
jg
pop
cmp
push
das
loop
lods
in
mov
jmp
xchg
adc
and
adc
xchg
icebp
jle
inc
out
movsl
inc
inc
xor
jle
cmp
insb
cmpsl
pop
int3
lods
adc
adc
sahf
add
and
insl
pop
push
cltd
push
pop
push
add
mov
push
inc
in
xchg
int
pop
cmpsb
out
fwait
enter
push
mov
and
adc
iret
inc
lods
jno
sti
in
xchg
mov
add
rcll
add
stc
loopne
daa
insl
cltd
shl
push
sti
mov
adc
mov
pop
fidivs
faddl
mov
xchg
pop
pop
lahf
sbb
inc
adc
movsl
dec
gs
daa
repnz
jbe
xchg
mov
inc
jg
sbb
cmp
add
call
and
mov
inc
faddl
adc
adc
dec
push
dec
push
pop
clc
mov
cld
int
jns
pop
rol
cmp
mov
cmp
jb
xchg
movsb
lahf
cltd
testl
xor
sbb
pop
sti
add
lods
mov
nop
mov
cmp
pop
ja
insl
clc
push
ja
gs
clc
stos
push
and
add
fucomp
and
sub
nop
add
aaa
mov
cld
enter
dec
add
adc
jnp
out
push
mov
in
inc
mov
out
clc
add
arpl
mov
or
cmp
pusha
xor
xor
iret
stc
jae
test
or
fldt
test
sub
or
mov
pop
pop
adc
sub
pushf
ret
xchg
jg
pop
sahf
bound
cwtl
out
mov
arpl
out
mov
negl
test
std
mov
add
insb
outsl
pop
sahf
sub
out
or
pop
sub
xchg
in
jae
xchg
and
xor
add
mov
insl
roll
sbb
repz
out
xor
stos
inc
inc
or
inc
repnz
mov
cmpsl
outsl
out
cmp
adc
sbb
cld
daa
dec
addr16
fstpt
adc
sbb
pop
inc
push
mov
and
test
sbb
outsb
insl
pop
sbb
mov
add
xchg
ja
sti
sub
inc
pushf
lahf
mov
cmp
dec
jmp
push
sarl
inc
loopne
mov
in
jmp
in
jle
sub
cmp
mov
incl
mov
outsl
sub
pop
inc
mov
mov
jb
ljmp
lods
or
loop
fsub
sbb
rcrb
aas
adc
mov
inc
push
shrl
hlt
iret
pop
xor
data16
jmp
mov
imul
sbb
mov
xchg
xchg
xchg
mov
sarb
movsb
push
sbb
jmp
sti
jmp
out
in
mov
adc
cmp
inc
mov
mov
rcr
inc
xchg
dec
and
cld
mov
lcall
mov
cmp
scas
cltd
add
inc
jp
adc
xchg
outsb
jmp
or
movsl
push
sub
fstl
les
mov
stos
inc
gs
sbb
into
pop
xor
stos
aas
push
jmp
mov
jbe
or
in
js
dec
sarb
xchg
ljmp
cwtl
out
pop
adc
cmp
scas
cmp
push
and
push
flds
sub
push
jmp
decl
cltd
xchg
ja
add
cmp
bound
lahf
xchg
xchg
dec
lret
lea
mov
mov
jo
or
dec
dec
push
jne
push
or
jmp
lret
mov
fisubrl
jg
mov
sbb
mov
sarl
fisubs
cmp
inc
mov
cmp
mov
mov
shll
xchg
aaa
ds
sbb
lret
fisubrs
or
imul
cmpsb
and
ss
outsl
and
movsl
shrb
sub
imul
movhps
inc
sbb
movsb
into
scas
push
mov
push
test
nop
mov
mov
mov
sub
std
pop
gs
inc
int3
clc
sahf
sarl
xor
push
ss
testl
cmp
bound
test
xor
xor
add
or
xor
loopne
roll
imul
jbe
ret
scas
dec
sbb
inc
mov
sub
adc
xchg
scas
pushf
push
loope
dec
cmc
sti
xlat
stc
outsl
data16
out
outsb
inc
mov
and
mov
xor
xor
sub
loope
add
stc
sub
mov
das
andb
loope
movsb
aad
sub
add
std
pop
cmp
xor
xchg
push
adc
push
mov
fstl
in
ja
cli
mov
adc
dec
imul
test
stos
adc
filds
push
pop
dec
dec
cmc
cs
ror
dec
add
pop
cltd
outsb
xor
imul
mov
mov
les
inc
pop
popa
arpl
push
outsb
aam
adc
aaa
addr16
push
inc
in
stc
cmp
loop
mov
push
xor
fiaddl
ds
sarl
push
and
lock
in
sub
addb
mov
shlb
insl
xor
xor
push
std
cmp
sbb
aaa
mov
test
push
push
lret
adc
scas
xor
jecxz
cltd
lods
dec
xor
loopne
dec
dec
sub
or
cmp
cmpsl
into
inc
mov
fists
jo
cmp
fwait
aas
lret
movsb
pushf
in
mull
aad
xchg
push
ror
outsb
xchg
and
inc
inc
in
in
add
int3
and
sub
jmp
lds
pop
adc
pop
repnz
out
loop
mov
sbb
mov
and
sbb
in
push
sbb
jp
rolb
pop
lret
repz
pop
xor
gs
jp
outsb
adc
ds
cmp
and
add
sub
cmpsb
fisttpll
out
mov
jge
push
stos
cmp
std
jmp
adc
xor
cmp
cmc
pop
jl
dec
movsb
jns
push
and
lods
jns
repnz
jno
mov
mov
rep
cli
mov
imul
les
mov
iret
mov
testl
adc
push
repz
bound
fnstenv
dec
out
inc
aam
sub
in
jmp
popf
jg
lret
rcll
jecxz
and
mov
pop
mov
push
popa
iret
pop
jge
dec
add
sbb
movzwl
movsl
xlat
out
fimuls
daa
push
lret
cmpsb
aad
mov
jl
aad
cmpsb
daa
into
mov
repnz
inc
sub
mov
pop
fstpl
in
dec
scas
dec
cwtl
aas
cli
pop
push
shrl
leave
jecxz
lods
jl
cmp
shlb
testb
data16
aaa
adc
fisttpll
adc
sub
call
xchg
lea
inc
mov
and
xor
and
mov
dec
aas
push
scas
sub
mov
jb
mov
jnp
mov
xor
xchg
pop
into
stos
fstpl
ror
sbb
xor
in
cmovge
mov
mov
lods
mov
gs
out
adc
insl
jle
sti
jo
jge
aad
pop
sbb
test
in
adc
add
loop
test
jmp
imul
mov
mov
insl
fwait
xchg
push
push
push
imul
pop
xchg
out
lret
mov
ret
add
test
stos
sahf
pop
cmp
jns
mov
or
fidivl
aas
pop
mov
test
jne
or
adc
mov
pop
repnz
add
pop
mov
mov
stos
scas
aas
js
sbb
nop
mov
in
je
mov
ds
cmp
ret
stc
aad
xchg
push
imul
or
and
xor
mov
cmp
add
mov
sbb
and
insl
sub
sub
loopne
pop
pop
repnz
movsb
movsb
es
in
icebp
cltd
cmp
jge
int
or
aas
push
insb
or
fdivl
lds
shll
jg
jb
dec
mov
xchg
cmp
insl
or
stos
pusha
add
jmp
dec
data16
fildl
loop
mov
xor
sbb
xchg
adc
mov
aad
jb
sti
lods
test
mov
pop
jno
push
inc
ds
es
sbb
xchg
push
subl
shl
inc
fists
mov
jecxz
push
pop
cmp
stos
jmp
fs
fadds
sti
test
add
shlb
call
or
pop
repz
jmp
lods
mov
add
in
fxch
leave
lahf
ja
push
add
mov
push
lret
aas
xchg
add
arpl
mov
in
jnp
gs
das
cmc
stc
aad
std
fisttpl
ret
scas
dec
out
inc
gs
mov
inc
out
push
cmp
mov
insb
sub
xor
scas
xchg
xchg
push
ss
jne
push
mov
sbb
add
lods
mov
push
nop
mov
ss
or
cmp
ret
sti
mov
repz
fiaddl
mov
clc
cmp
loope
adc
jle
loopne
iret
fildl
mov
push
sbb
mov
pop
mov
dec
inc
xlat
arpl
imul
cld
leave
add
idivl
mov
lahf
int3
mov
enter
add
cmpsl
xchg
sbb
mov
inc
das
sbb
into
daa
or
add
cmp
adc
mov
cmp
jmp
dec
hlt
mov
fcmovnb
mov
shll
pop
aas
sbb
repz
outsl
out
adc
cmc
sbb
sbb
push
push
leave
mov
mov
mov
stos
pop
inc
adc
insb
xor
sub
xor
in
xor
gs
test
testb
call
shr
sub
mov
icebp
inc
in
mull
push
fmull
push
push
mov
leave
xchg
cmc
or
inc
jecxz
and
leave
lods
and
pop
pop
jmp
or
jb
pop
push
sbb
stos
mov
ss
jae
push
xlat
sbbb
pusha
sbb
xchg
fsubs
es
scas
dec
pop
hlt
insb
or
not
mov
jae
adc
pop
nop
jne
add
iret
xchg
std
inc
jno
pop
mov
repz
scas
dec
dec
into
jecxz
sarb
mov
js
enter
mov
or
loopne
fildll
lds
cmp
adc
icebp
dec
sbb
mov
test
test
loope
ss
cmp
xlat
mov
fsts
data16
jbe
pushf
dec
imul
in
pop
xor
jp
mov
adc
loopne
jnp
arpl
dec
pop
mov
fs
imul
or
push
and
or
mov
mov
cmc
ret
jl
xor
sub
leave
ss
repz
daa
adc
cld
outsl
xor
push
adc
pop
cltd
movsb
mov
loope
cld
pop
sbb
std
sti
stos
and
es
int
xor
mov
inc
jg
xor
xchg
push
pop
inc
fdivrp
enter
mov
xchg
sbb
test
pushf
ds
rdmsr
and
lahf
mov
jo
add
adc
and
lds
dec
test
jmp
nop
push
inc
push
andb
out
xchg
rorl
mov
mov
and
inc
das
test
jmp
int3
add
pop
jno
stos
stc
xor
lcall
pop
jmp
cmp
mov
pusha
insb
pop
mov
push
aam
mov
add
in
mov
mov
rol
dec
rorl
ss
pop
cs
jb
adc
mov
les
sahf
push
cmp
sahf
in
je
mov
ds
push
mov
or
out
adc
inc
pushf
notb
xor
cmpl
sub
jmp
mov
sub
test
iret
cmpsb
xchg
sub
stc
push
inc
in
int3
mov
jle
int
icebp
jp
cmp
jmp
adcl
repnz
and
loop
filds
push
mov
enter
data16
xchg
pop
fwait
inc
inc
lds
lahf
inc
push
xchg
xor
dec
scas
jge
adc
call
push
mov
flds
cmp
dec
int3
jge
pop
test
repz
fdiv
push
lahf
and
out
arpl
ja
push
stos
test
nop
out
fdivrs
hlt
repz
xchg
pop
cmp
pushf
mov
sub
pop
repnz
push
repz
adc
loopne
adc
pop
push
arpl
or
mov
cmp
pop
scas
push
adc
xorb
sub
dec
ja
sti
mov
mov
pop
jno
jnp
rcrb
adc
ja
orl
test
or
sub
call
push
push
cmp
xchg
insb
cmc
pop
cmp
inc
sbb
bound
pop
or
push
lret
cli
repz
sbb
mov
cmpsl
outsb
fmul
push
das
aaa
dec
stos
pop
call
hlt
pop
mov
fidivs
add
movsb
in
cmp
push
cmp
movsb
push
call
sub
imul
sbb
loop
fiaddl
xchg
pop
ss
mov
jmp
xor
pop
lods
sub
inc
fistpl
rcll
pop
jbe
pop
mov
in
xchg
loop
mov
cmpl
mov
sub
shrb
inc
push
xchg
arpl
sub
cmc
loope
int3
cwtl
or
push
mov
add
mov
inc
rcll
mov
push
jb
and
fstps
aas
and
rep
fmul
jbe
xchg
xor
adc
inc
and
test
jo
adc
leave
push
or
cli
xchg
insb
test
iret
sbb
xor
pop
lock
es
pop
push
into
hlt
or
rorl
scas
sub
pop
add
or
loopne
push
imul
inc
into
dec
dec
or
call
in
fldz
cmc
pop
pop
mov
shrb
add
dec
int3
jl
push
repnz
jo
adc
push
mov
xchg
mov
dec
aad
push
int
dec
jle
outsb
sub
push
push
incl
adc
shll
iret
mov
mov
out
popf
pop
cmp
sbb
inc
leave
scas
xchg
bnd
cld
mov
repz
call
fwait
mov
adc
jo
scas
mov
xor
mov
inc
jns
movsl
outsl
cmp
pop
lret
pop
pop
xchg
imul
or
mov
and
push
ror
adc
inc
rcrl
bound
push
cmpsl
sbb
add
xor
mov
mov
pop
fdivrs
pop
pop
xchg
inc
adc
fs
shll
dec
mov
rolb
cwtl
inc
mov
loop
sub
dec
lahf
mov
mov
loope
jne
sub
loopne
fstpl
hlt
xor
pusha
fdivl
in
addr16
cwtl
aaa
jo
fnsave
mov
cmp
mov
scas
int3
cmpsb
pop
mov
mov
and
sahf
mov
push
outsl
frstor
inc
lds
xor
push
popf
out
pop
mov
int3
es
xor
jmp
jl
mov
and
add
pusha
dec
mov
mov
push
mov
fistpll
aad
inc
inc
inc
scas
loopne
adc
fcmovnbe
fcmove
sti
arpl
jge
imul
push
push
xor
pop
popa
adc
mov
sahf
mov
test
mov
sbb
jge
jno
enter
int3
inc
or
das
sub
jns
cld
cmp
xor
cmp
xor
add
inc
add
ja
mov
call
sub
test
mov
inc
loop
inc
in
push
popf
xchg
push
dec
ds
jbe
jne
mov
imul
mov
ja
pop
or
inc
adc
in
dec
daa
push
mov
fdivrp
loopne
sti
dec
pop
shlb
mov
std
pop
enter
cmp
sbb
fcmovbe
add
sub
dec
fstpt
inc
mov
rcrl
push
and
inc
jno
mov
push
or
pop
push
daa
sbb
pop
stos
add
jg
jns
sub
ds
add
pop
push
lret
mov
sti
pop
test
sti
enter
cmp
and
and
ret
mov
gs
lcall
jle
xchg
xor
test
repz
cmpb
adc
pop
cmpsl
xor
rolb
xchg
fwait
out
jb
jb
xchg
or
addr16
scas
pop
mov
pop
sub
mov
mov
xor
icebp
mull
jmp
adc
pop
aaa
ja
mov
fldenv
and
xchg
out
ljmp
sub
pop
and
sbb
dec
out
push
mov
adc
mov
fwait
ja
lret
icebp
loopne
lods
jo
aam
imul
jge
xor
gs
adc
ja
xchg
call
cld
les
cmp
inc
out
fcomps
cld
ss
aad
test
lcall
inc
mov
bound
in
imul
push
out
xchg
mov
add
pop
test
mov
loopne
xchg
cmpsb
dec
cmp
lods
aas
scas
les
inc
imul
mov
jb
in
andb
mov
ds
mov
mov
mov
xchg
cmc
ret
pop
inc
push
cmp
mov
jno
fwait
or
rolb
and
icebp
aad
or
sahf
pop
push
mov
jne
fs
adc
adc
das
inc
xchg
push
pop
sbb
leave
fistpl
movlhps
imul
fiaddl
sti
jo
or
xor
out
lea
adc
and
add
int
lods
ret
aaa
dec
ds
mov
dec
jl
push
jns
leave
orb
outsl
cmpsl
jecxz
aas
jg
push
mov
ja
aaa
call
das
jecxz
or
in
xchg
pop
in
mov
fnstcw
add
sub
push
dec
xor
rolb
adc
mov
mov
pop
push
mov
sub
iret
inc
stos
ja
ss
cmpsl
insl
mov
cmp
adc
addr16
push
lcall
dec
into
fs
xchg
push
faddl
outsl
cmp
fisubs
sarl
das
add
ss
nop
fstpl
into
mov
shl
stos
push
incl
pop
pop
adc
add
sbb
add
pop
dec
stos
mov
dec
dec
fists
push
cld
cld
jns
pop
adc
test
rcl
popf
hlt
mov
pop
pop
jo
mov
popa
sbb
cmp
or
int3
push
pop
lea
lea
test
bound
rorb
fcom
cmpsl
bound
bound
test
je
popa
push
xchg
mov
daa
sub
sarb
pop
mov
sbb
jb
pusha
shll
add
dec
sub
mul
rcrb
jno
popf
ret
mov
test
sub
lahf
das
push
inc
xchg
stos
lock
arpl
push
cmpsl
mov
lds
jne
lea
insl
jp
pop
movsl
mov
dec
dec
sbb
xchg
jne
fisubl
mov
adc
std
scas
fcomp
push
idiv
cltd
mov
pop
pop
pop
jp
xor
pop
out
flds
daa
cmp
xor
dec
lret
pop
fld
fiadds
mov
push
ret
std
mov
mov
mov
push
sub
jne
add
fistps
fmuls
sub
ss
mov
ror
outsl
and
jp
daa
inc
jnp
cwtl
inc
cmc
cld
lcall
jae
xchg
dec
les
sbb
ds
loope
push
aaa
mov
mov
in
inc
loopne
xlat
and
mov
jecxz
inc
adcl
or
sahf
rcll
sub
jl
mov
xlat
mov
insl
add
lret
stos
nop
mov
pop
jecxz
sub
out
js
imul
das
adc
loope
push
push
sub
mov
mov
pop
push
and
or
lret
stos
ret
fists
icebp
rcll
cmp
add
imul
subb
mov
sbb
nop
adc
or
mov
out
mov
jns
inc
push
fwait
imul
mov
mov
lret
rsqrtps
mov
enter
xchg
sbb
in
mov
inc
int3
cmpsl
push
stos
cmp
xchg
cmp
pop
test
cmp
lods
dec
or
mov
add
inc
call
arpl
test
imul
stos
xchg
faddp
repnz
push
aam
movsb
mov
mov
ljmp
inc
add
dec
sahf
sahf
xorl
nop
push
xorb
loop
dec
repnz
sarl
shlb
add
lods
icebp
in
mov
adc
mov
mov
lods
nop
xchg
int
add
loopne
dec
mov
jp
xchg
out
mov
imul
mov
and
jbe
imul
out
cwtl
rol
jl
mov
mov
lret
movsl
xchg
cmp
jge
cmp
jl
lret
decl
cmp
xchg
sbb
and
adc
inc
ds
inc
jns
test
andl
lret
lods
int
and
dec
aam
and
sti
dec
adc
movsl
jp
testl
leave
sbb
test
cmp
push
daa
add
out
jnp
stc
mov
lods
mov
fcomps
jne
dec
test
push
lock
push
fistps
add
sbb
xchg
pop
adcb
sub
pop
popa
subb
dec
mov
fwait
jne
sti
aas
xlat
or
mov
dec
repz
push
sbb
pop
mov
bound
lahf
dec
rorl
mov
aam
enter
jge
es
leave
push
mov
mov
mov
cwtl
scas
lock
out
push
pop
pop
mov
sbb
or
adc
add
pop
push
adc
mov
jns
in
stos
add
add
jl
imul
imul
adc
rolb
xor
add
stc
pop
jmp
js
or
rorl
jbe
dec
sub
shll
int
pop
inc
push
popa
rcrl
incl
cli
lea
jl
mov
jp
mov
jle
fwait
push
mov
fisttps
je
aam
setge
or
mov
and
stc
lods
pushl
xchg
dec
shlb
int3
xor
mov
cmp
pop
jge
daa
xor
xchg
adc
xor
push
dec
mov
mov
push
cmpb
dec
pop
fs
cmp
in
xrelease
mov
jmp
lret
out
arpl
pop
call
mov
fcompl
cmc
lods
in
cmpl
popf
sbb
lret
mov
mov
sbb
dec
pushf
hlt
sub
out
fdivp
push
cld
push
mov
rclb
sub
dec
mov
adc
sub
insb
adc
loop
not
or
outsl
sub
xchg
jg
test
inc
pop
data16
lea
xchg
cmp
scas
sti
rorl
ret
add
subb
jne
pop
fwait
pop
or
lret
fs
jl
inc
jmp
mov
mov
push
cmp
cmp
fidivs
jae
add
pop
sti
idivb
sbb
in
mov
dec
les
popa
xchg
dec
fiaddl
dec
or
pop
push
stc
je
fbstp
fnsave
fadds
lds
or
fs
outsl
mov
fisubs
call
pop
jno
enter
jecxz
xchg
out
cmpsl
inc
loopne
ret
adc
pop
out
xlat
popa
or
daa
ret
lods
add
jb
xchg
fcmovnu
sbb
cmpsl
iret
repnz
xchg
dec
dec
add
lods
jnp
inc
fiadds
aaa
leave
cmp
cwtl
jbe
or
roll
loop
js
rclb
rcrb
stc
and
jno
int3
int
xchg
xchg
mov
je
pop
inc
mov
ljmp
push
xor
hlt
cmp
cli
mov
daa
pop
mov
dec
push
das
in
sub
and
loope
imul
dec
push
push
jne
mov
xchg
ss
and
push
scas
insb
int3
dec
mov
mov
mov
push
fwait
std
or
or
push
sbb
xor
inc
push
pop
fisttpl
pop
out
mov
mov
movsb
mov
add
jg
filds
sub
mov
das
mov
imul
push
add
test
adc
out
cwtl
popa
push
cmp
adc
mov
test
push
push
aas
pminsw
inc
xor
jo
xchg
adc
dec
inc
jecxz,pt
out
sub
cmpsb
arpl
inc
dec
idiv
nop
and
outsl
sbb
or
jns
xchg
add
mov
jmp
jns
aad
out
imul
test
jmp
fs
mov
push
aam
xchg
and
cmp
pusha
adc
pop
lods
ror
jb
sbb
sub
or
inc
insb
push
ss
nop
mov
pop
pop
lods
clc
scas
mov
cmp
outsb
test
std
test
sub
scas
or
icebp
xchg
aas
scas
push
in
stc
add
xchg
cltd
mov
fwait
leave
jb
pop
int
xchg
cmp
inc
ja
mov
sub
rcrl
icebp
ror
dec
int
sub
dec
dec
or
jl
pushf
inc
cs
xor
stos
push
push
out
mov
add
cmpl
andb
sahf
daa
outsl
jmp
pusha
mov
sbb
insb
mov
cmp
mov
push
and
adc
inc
dec
push
xor
and
or
or
cltd
int
mov
jg
sub
xchg
popf
scas
mov
xchg
or
rorb
push
inc
xchg
cmpsl
stos
enter
mov
dec
and
daa
movsb
shll
jb
les
pop
add
cmp
imul
mov
ds
outsb
addr16
mov
ljmp
jl
jo
sbb
jmp
sbb
pop
imul
sbb
rcrl
outsl
roll
push
add
in
inc
cltd
push
shll
lods
push
or
push
cwtl
sbb
test
inc
inc
js
jmp
sbb
pop
fdivrp
add
mov
xchg
push
and
xor
cmpsl
and
orb
jmp
push
mov
icebp
daa
stos
pop
aaa
and
push
das
test
sub
cs
sarb
dec
add
adc
outsb
dec
inc
push
roll
mov
cmp
and
ja
test
cmp
jge
out
jmp
int
daa
sub
or
cltd
dec
aam
pop
stos
movsb
mov
mov
out
arpl
cmp
jnp
fdivs
cltd
psrlw
loope
cmp
loopne
xor
mov
fsts
jno,pt
repnz
or
add
mov
movsl
jl
mov
lcall
lahf
aam
or
jg
push
sahf
bound
push
cmp
ret
insl
movq
repz
mov
add
cmp
adc
mov
mov
mov
push
cmp
stos
push
dec
mov
cld
mov
xchg
cmp
idivb
cli
rcrb
aaa
outsb
leave
in
out
jno
loopne
out
push
repnz
loopne
push
inc
mov
loopne
lods
inc
push
xlat
adc
cld
sub
or
ja
stos
iret
xor
fwait
mov
jns
push
aas
nop
mov
push
out
sbb
jns
add
sbb
push
out
sahf
push
cmc
sub
mov
add
sbb
pop
lret
in
je
jnp
in
rcl
adc
adc
lods
mov
loop
stc
repz
lds
inc
inc
lds
push
stos
sbb
ret
dec
xlat
daa
out
mov
icebp
push
hlt
and
push
inc
sub
lret
and
lods
xor
mov
jne
clc
sub
aaa
xor
outsl
dec
aad
fidivrs
cmp
aaa
lock
push
add
push
push
js
in
add
rorb
movsb
mov
dec
jno
pushf
mov
ficompl
leave
pop
addb
add
sub
popa
inc
mov
sti
sub
sbb
js
mov
adc
push
sbb
repz
inc
stc
ret
ret
mov
jo
mov
inc
dec
out
add
dec
mov
enter
push
orb
sbb
lea
shll
into
xchg
jl
int
loope
inc
ret
ja
push
outsb
dec
mov
aaa
jle
movntps
loopne
ss
pop
xchg
pop
aas
test
sbbl
rcll
jae
scas
xor
in
mov
and
cli
push
inc
addl
pop
test
mov
pop
push
and
ja
mov
test
out
test
cmp
sub
push
enter
mov
mov
lds
mov
xchg
xor
mov
sub
push
mov
rcll
add
cmp
mov
imul
xchg
mov
push
fdivs
xchg
xor
loop
stos
inc
jge
xor
jmp
adc
imul
arpl
sub
iret
cmp
les
push
inc
mov
inc
loop
negl
mov
mov
divb
insl
fadd
testl
mov
push
adc
jge
xchg
inc
inc
dec
cmp
dec
les
push
cltd
xchg
testl
leave
or
pop
xchg
pop
jmp
jmp
xlat
cmpl
scas
arpl
mulb
push
int
shll
inc
pop
mov
xor
mov
loop
ror
sahf
cmp
mov
sub
add
std
pop
addr16
jmp
jns
data16
popf
push
sbb
pop
mov
cs
pop
shll
mov
int
stos
test
mov
in
and
int3
xchg
aad
jmp
aam
or
shrl
arpl
xchg
adc
fistl
aas
add
cld
scas
les
orl
pop
xchg
out
frstor
xor
push
stos
adc
filds
pop
ret
add
jp
shll
and
les
movsl
xor
fcoml
pop
movsb
add
pop
and
movsl
test
movsl
cmp
sub
mov
int3
inc
pop
pop
jns
mov
incb
or
pop
sub
pop
pop
scas
pop
stc
xchg
dec
inc
push
mov
cmp
icebp
jle
loope
pushf
add
mov
sbb
or
inc
or
ss
push
pusha
pop
adc
sarl
jg
iret
sub
pop
outsl
cmp
mov
push
outsb
mov
mov
dec
test
jge
insb
dec
cmp
bswap
mov
fstpt
rcrl
inc
mov
ja
daa
dec
xchg
push
fsubl
cmp
pop
sbb
and
fidivl
js
sub
pop
lret
xor
lods
push
cmp
push
hlt
aad
xor
jge
dec
lea
sub
jge
insb
jne
sbbl
loope
nop
rcl
cld
xor
lahf
xchg
push
push
lock
xlat
int
sti
add
or
pushf
lods
stc
adc
mov
or
in
andl
popl
data16
in
je
adc
iret
adc
stos
jle
mov
dec
xorl
outsl
ljmp
or
popf
inc
lret
movsl
shl
sbb
enter
ret
cwtl
jae
xchg
in
sahf
sbb
pushf
mov
test
xor
or
jnp
in
mov
aas
xchg
jnp
jp
pop
int
mov
jmp
sbb
dec
outsl
and
dec
xor
ja
xor
fcomps
cli
add
add
out
push
pop
pusha
fs
adc
hlt
outsb
xchg
adc
mov
ljmp
adc
lahf
in
sub
mov
out
add
rolb
iret
dec
mov
inc
loop
stos
mov
sub
int3
stos
loope
rcrl
lret
in
xor
iret
mov
push
jmp
sbb
test
mov
xchg
mov
inc
lods
shlb
cmp
add
pop
out
add
notl
xchg
fidivrs
add
dec
daa
pop
or
push
popa
pop
or
lds
movsb
addr16
test
iret
addr16
xor
mov
pop
pusha
and
cld
push
cltd
sub
ljmp
ret
mov
jl
pop
mov
jl
out
loope
arpl
enter
ret
inc
pop
mov
scas
inc
or
add
into
sti
negb
in
getsec
aas
sub
pop
cltd
int
mov
add
roll
test
xchg
testb
pop
and
cmp
sbb
not
subb
js
pushf
je
clc
outsb
dec
movsb
mov
pusha
outsl
push
out
pop
mov
inc
std
dec
incl
insl
push
cmpsb
mov
lea
xor
mov
pop
sbb
es
in
aam
hlt
xchg
test
sbb
outsl
add
jo
movsb
test
or
lcall
out
std
sub
test
push
lahf
inc
sbb
sahf
mov
or
lods
push
inc
testb
add
or
pusha
sti
pusha
or
fsubr
or
fdivrl
addl
mov
std
movsl
jne
xor
lea
jg
sub
icebp
test
shl
push
dec
fiaddl
insb
add
pop
outsl
lds
les
mov
stos
repnz
jns
push
push
jae
js
mov
popa
idivb
xchg
xchg
pop
xor
push
sbb
cwtl
cmp
pop
dec
xor
movsl
sbb
subb
sbb
lock
jbe
rorb
xor
fs
fists
mov
mov
fisubrl
jne
or
inc
xchg
shlb
nop
fisubrs
jb
add
sbb
inc
ss
and
pusha
fwait
sub
xlat
loop
cld
test
dec
pop
repnz
jo
and
sub
cmp
insl
mull
out
lea
xor
in
pop
xchg
addr16
or
stc
cmp
fbstp
adc
fstps
repnz
in
adc
or
xchg
jno
push
loopne
xlat
cld
ljmp
mov
sub
and
and
adc
mull
arpl
movsl
adc
xchg
lea
int
push
pop
sbb
push
lds
into
jns
cmp
xor
dec
mov
test
jmp
mov
pop
pop
in
movsb
aas
lock
sbb
sub
shl
inc
in
mov
or
pop
or
bound
mov
sub
sbb
in
pop
mov
insl
add
adc
out
jmp
sub
fxch
add
jae
faddl
enter
and
fnstcw
loope
dec
sbb
fadd
mov
sti
push
mov
repnz
xor
or
mov
or
pop
cmp
rclb
pop
lods
ret
mov
mov
fsubrl
incb
inc
cmpsb
xor
jecxz
jg
rcr
mov
mov
clc
in
insl
test
xor
inc
out
dec
testb
fnstcw
dec
cmp
scas
fstps
std
add
and
jno
cmpsb
test
xor
and
and
fcoml
dec
and
enter
dec
testl
mov
pop
cltd
rolb
push
std
or
js
cmp
sbb
adc
movsl
inc
push
adc
imulb
sub
cmp
mov
mov
stc
dec
imul
sub
lods
sbb
add
jae
call
test
or
lret
mov
hlt
loope
pop
adc
xor
xchg
mov
mov
xchg
jo
int3
andl
lock
rcr
jb
icebp
filds
aas
xchg
out
movb
cmpsl
pop
add
lea
push
xchg
mov
stos
jp
and
pop
aaa
pop
mov
dec
lahf
mov
lcall
lcall
loopne
loop
push
sub
ljmp
push
cmp
inc
call
adc
and
mov
call
sub
fldt
scas
or
imul
mov
jmp
mov
xchg
lods
sbb
jmp
ss
cmp
leave
xor
popa
ret
xchg
ret
rcrb
fidivrs
icebp
cmp
xor
mov
jae
dec
ss
rcrb
ret
std
add
add
inc
fwait
xor
or
arpl
notl
loope
repz
loope
xor
dec
push
out
and
lea
mov
xchg
mov
sub
sarl
inc
jmp
xor
inc
pop
dec
mov
mov
and
mov
or
mov
in
pop
sbb
xchg
jae
lds
into
adc
pop
das
dec
enter
fistpll
enter
out
mov
sub
xor
fsub
das
lret
fsubs
adc
jecxz
mov
loop
or
adc
rcrb
mov
sub
xor
inc
xor
xchg
aaa
and
lods
data16
cltd
push
jbe
in
loopne
inc
fidivrl
stos
pop
movsb
inc
cmp
sbb
mov
push
rcll
ljmp
pop
sbb
xchg
xor
lods
out
xchg
loop
dec
outsl
subb
test
gs
les
pop
out
outsl
pop
cmpsb
inc
jge
loopne
das
imul
inc
fldcw
test
pushf
scas
enterw
mov
sbb
pop
jge
dec
out
sbb
data16
imul
aas
pop
push
cld
repnz
add
and
jle
inc
ret
out
sbb
jge
lret
mov
pop
jl
push
sti
out
pop
add
lcall
inc
adc
addr16
icebp
mov
xor
jge
jnp
adc
xor
push
xor
fbld
pop
add
xor
jno
mov
lods
jp
and
seta
arpl
mov
fs
jl
cmc
pop
xlat
push
adc
and
mov
inc
cltd
data16
shlb
inc
and
test
rol
lret
sahf
adc
jmp
cld
xor
fisttpll
and
mov
imul
push
in
pop
jg
lret
orl
pop
rcll
adc
loope
in
or
jno
mov
dec
aad
mov
lods
cld
cmpsl
outsb
repnz
xchg
bound
mov
negl
ss
adc
mov
out
es
cmpsl
jb
jge
jo
push
jae
dec
into
xchg
xor
loopne
cmpsb
loop,pt
jle
fcomip
sbb
mov
lods
mov
imul
pop
pop
xchg
sbb
hlt
push
pusha
jecxz
enter
arpl
mov
sbb
xchg
andl
dec
lcall
lods
push
sbb
jp
aaa
in
hlt
fsubl
test
fisubrl
xor
dec
addr16
sbb
sbb
iret
inc
and
test
push
nop
cmpl
test
outsl
or
jl
je
icebp
dec
inc
or
add
push
mov
lods
notb
out
cvtpi2ps
mov
dec
adcb
mov
cld
dec
jnp
test
xchg
les
pop
mov
call
push
or
jge
mov
lods
imul
pusha
push
in
mov
add
aas
leave
mov
inc
pop
dec
push
das
mov
pop
xlat
pop
jb
jp
xchg
dec
jne
mov
das
jle
push
nop
push
jecxz
lahf
sbb
xchg
add
loope
pop
loope
lods
stc
fcoms
pusha
sub
aam
fsubrl
ret
mov
cmp
and
xchg
sarl
jbe
mov
fistl
scas
push
cmp
jbe
push
test
ljmp
shll
sarl
std
jge
xchg
inc
je
adc
xor
pop
adc
inc
sbb
fbld
imulb
cltd
xor
pusha
clc
mov
xchg
jg
mov
lret
sub
xchg
dec
mov
leave
loop
xor
mov
out
insb
addb
lods
dec
pop
arpl
cmp
hlt
and
pop
push
push
adc
in
ja
cs
cmpsl
out
push
inc
repnz
shlb
mov
adc
sbb
cwtl
ljmp
jne
xor
in
jno
sahf
and
mov
xchg
mov
dec
sti
cmp
je
iret
cmp
mov
filds
mov
clc
sahf
jae
fwait
mov
cmp
insl
mov
out
fsubp
sub
repz
scas
cmp
int
fadds
movsb
push
or
jmp
push
inc
stos
dec
push
stos
outsl
in
dec
insb
pop
ret
cmpsb
fcomps
lret
jg
push
add
or
test
repnz
cld
rcr
and
mov
or
dec
push
dec
or
mov
ja
mov
test
cmp
adc
jae
je
movsl
mov
in
jl
xlat
xor
mov
add
leave
subl
cmp
cmpsl
aas
xchg
push
mov
and
xchg
and
jns
xor
dec
shrb
ret
in
lret
and
pop
sub
push
outsl
pop
cmpsb
mov
push
pop
in
cmp
cmp
adc
add
ss
std
mov
out
hlt
and
xor
pop
in
xchg
dec
pop
jmp
or
cmc
scas
ret
inc
xchg
repz
cmp
push
test
hlt
ja
clc
jae
mov
pushw
xor
push
xlat
pushf
sbb
popa
cmp
mov
dec
outsb
mov
shll
popf
hlt
rcll
pusha
inc
iret
nop
jge
cs
stos
or
daa
lret
push
clc
out
jo
xchg
adc
fdivrl
in
scas
shrb
dec
test
push
scas
jns
and
inc
mov
push
add
pop
push
xor
add
mov
mov
test
fcmovnu
push
cmp
dec
rcrl
xor
sub
arpl
push
inc
push
insb
inc
jg
loopne
sbb
mov
dec
push
pop
lret
scas
jge
ja
addr16
call
aas
test
addb
dec
xchg
shlb
inc
add
cmpb
cmp
movsb
dec
jns
fwait
repz
push
test
scas
push
imul
cwtl
and
stos
pop
jp
cmp
lods
addr16
and
xor
pop
shrb
leave
sahf
enter
sbb
movl
loop
cs
test
pop
jg
jp
fs
add
int3
and
fmuls
mov
mov
xor
mov
inc
adc
mov
lock
cmpsl
adc
cmp
cmp
clc
push
lods
and
cmp
test
xlat
adc
cmp
jmp
repnz
mov
roll
rclb
sub
xchg
test
loop
sbb
jnp
lock
fwait
jge
loopne
mov
std
imul
stos
in
and
sub
int3
mov
and
inc
iret
xor
dec
sbb
jmp
mov
sub
cmp
adc
sub
mov
into
stos
push
cltd
andb
xor
sub
inc
std
dec
rcrb
loope
dec
jl
out
popa
mov
sbb
mov
xor
sub
pop
es
test
xchg
xchg
push
lods
pop
add
outsb
loop
out
sub
leave
mov
inc
int
sbb
adc
sti
ret
hlt
inc
call
jno
sbb
test
orl
cmp
out
jmp
sbb
ja
dec
pusha
imul
push
or
jb
mov
mov
sub
or
xorb
jb
je
in
cmp
dec
mov
outsb
jecxz
mov
stos
mov
lock
in
nop
negl
outsl
xor
rorb
mov
outsl
je
out
cltd
int3
pop
mov
leave
push
scas
aam
stos
mov
das
ror
cld
pop
movsb
mov
aam
out
sub
adc
dec
mov
xchg
mov
mov
push
sbb
or
cmpl
and
fldcw
mov
ret
mov
pop
popa
jbe
mov
ret
cmc
pop
ficomps
push
std
xchg
jne
mov
int
sub
cs
mov
leave
pushf
test
mov
sarl
mov
movsb
sub
mov
rcll
insb
out
push
xlat
or
xor
gs
sub
test
xchg
leave
es
adc
push
push
sarl
inc
movsl
xchg
dec
or
cwtl
jmp
mov
fidivs
sub
scas
jmp
add
mov
clc
push
ret
scas
jp
popa
adc
loopne
xor
mov
in
gs
pop
subl
mov
jnp
scas
jo
jp
mov
adc
adc
int3
and
mov
xchg
fsubr
lcall
xchg
mov
int
pop
aas
lods
aaa
sbb
pushf
data16
push
lods
cltd
cmp
jo
inc
lock
rclb
dec
mov
jge
int3
xchg
adc
mov
into
push
repz
popf
jle
xor
pop
in
inc
add
mov
xchg
mov
out
mov
sub
icebp
dec
rcrl
sbb
inc
neg
mov
sahf
into
xchg
cmp
add
jb
or
cmpsl
pusha
dec
in
push
xor
mov
icebp
add
jnp
mov
mov
lcall
stc
dec
stc
push
movsl
in
loopne
xor
xchg
fcoms
cmp
jnp
jp
insb
adc
das
jae
jno
push
sub
subb
cltd
push
xlat
xor
rcrl
adc
add
mov
pop
mov
sub
addl
push
cmp
xchg
cmp
fsubrl
xor
jp
addr16
scas
and
mov
insl
sti
out
or
adc
aad
mov
cmp
inc
cmpsl
push
inc
gs
sub
adc
clc
imul
xor
inc
std
xchg
loope
mov
jecxz
cs
in
push
jg
ficomps
push
insl
pop
jmp
sarl
stos
push
sbb
push
push
pop
push
fcom
iret
loope
icebp
jge
mov
xlat
in
cli
mov
pop
popa
mov
jl
movsl
add
inc
cs
adc
addr16
adc
loope
sbb
push
sub
lods
pop
or
xchg
into
hlt
push
aam
out
fisubrl
cld
jb
clc
movsl
mov
push
ss
xchg
pushl
push
xchg
or
push
ljmp
push
cs
cmp
mov
mov
lods
adc
xor
xor
je
inc
mov
dec
mov
out
sub
dec
ret
int
push
mov
out
mov
imul
in
and
and
dec
dec
mov
inc
icebp
test
in
roll
sti
jecxz
icebp
in
fidivl
movl
fstpl
mov
mov
mov
sub
jo
inc
jecxz
push
add
adc
call
jg
mov
enter
sti
test
fs
aas
es
pop
int3
cld
sbb
pop
adcl
sbb
xchg
cmp
dec
outsb
mov
jge
cmp
adc
je
test
mov
fs
xchg
fbstp
cld
ja
in
dec
imul
int3
insl
jo
test
pop
mov
loope
xchg
mov
mov
sub
xchg
cwtl
jo
les
lods
std
xchg
mov
lcall
mov
ja
mov
nop
push
inc
sub
orl
sbb
or
clc
pop
es
pop
adc
ret
push
flds
xor
out
jmp
mov
sbb
xor
out
roll
les
xchg
pop
mov
sub
lret
mov
lods
xor
fucom
mov
sub
jne
shlb
xlat
aam
leave
shrb
bt
aas
dec
sbb
mov
cld
xor
push
popa
ficoml
jb
mov
or
loop
fadds
adc
das
inc
aad
sub
lock
and
ds
jo
cmpsb
sub
imulb
addr16
and
int3
push
push
test
pop
in
daa
pushf
or
rorl
mov
js
in
mov
iret
pop
fnstenv
popf
mov
nop
push
lahf
mov
test
mov
push
call
pusha
outsl
mov
sub
adc
add
xchg
dec
ljmp
cmp
cmpsl
out
mov
add
jbe
and
pop
adc
adc
shll
and
insb
mov
jle
cltd
xlat
sti
mov
in
push
lods
lock
xchg
mov
out
and
and
or
inc
xlat
add
jb
popf
jl
jle
stos
jmp
andb
cmp
pop
repnz
ficoms
arpl
jmp
sub
jbe
imul
lcall
cmp
xlat
cmpsb
push
sbb
xor
push
fwait
mov
sub
mov
leave
push
stos
push
mov
jmp
iret
sti
sub
dec
pop
inc
mov
lcall
sarl
mov
dec
arpl
mov
mull
sub
rol
repnz
push
push
ss
shll
outsb
or
jae
mov
jno
je
push
addr16
aad
popl
xor
or
or
add
je
insl
dec
cld
dec
push
shll
xchg
sub
shl
imulb
jg
bound
mov
in
jbe
dec
pop
xor
gs
push
out
repnz
mov
sub
lahf
adc
sub
xor
popa
in
and
dec
push
pop
inc
jmp
push
aad
or
stos
or
xor
dec
in
out
cld
int3
adc
mov
cmp
dec
sbb
or
adc
add
mov
imul
mov
rorb
fs
bound
cltd
xor
inc
push
sarb
pop
cmp
jl
jns
ja
stos
loopne
sarb
lcall
out
mov
dec
xchg
and
jae
aad
dec
mov
fcoms
les
test
sbb
inc
inc
popf
lahf
jge
jle
jg
inc
mov
jo
pop
mov
mov
pop
mov
xor
jl
sbb
cmp
inc
lock
mov
jbe
cli
aaa
jg
mov
in
jmp
mov
movsl
adc
test
dec
inc
and
iret
dec
push
add
imul
sahf
mov
imul
mov
sti
jne
pop
sti
push
and
in
mov
dec
jo
loope
mov
pop
outsl
mov
sbb
jns
sbbb
jmp
fadd
sub
in
aad
push
test
into
and
shl
out
jp
inc
adc
mov
mov
aaa
mov
mov
clc
outsl
cmovo
fistpl
shl
or
jns
fcoml
pop
push
stos
adc
dec
lret
in
jno
sti
pop
int3
lahf
push
inc
arpl
into
sub
inc
sarb
sub
xchg
pop
orb
jbe
push
add
sbbb
out
pusha
pusha
xchg
dec
bound
mov
hlt
std
and
fs
enter
test
adc
cmpsl
aam
or
scas
and
int
dec
cs
mov
stos
aad
jmp
push
push
fbstp
push
pop
data16
lret
xchg
mov
cmp
sbb
stos
mov
mov
out
frstor
or
push
pop
push
jge
lods
mov
mov
jo
in
sti
rolb
movsb
loopne
stos
bound
loope
cmpsl
pop
push
dec
popf
rolb
jecxz
cmpsb
into
in
lret
and
ret
cmpsb
jle
inc
xor
dec
or
jg
jmp
push
cmc
push
sub
scas
xor
or
int
jmp
jae
or
mov
shl
push
pop
push
adc
out
jne
push
loop
inc
scas
jmp
dec
addb
mov
cwtl
mov
or
test
rcll
mov
mov
mov
test
adc
lock
add
push
push
fdivrl
dec
cmc
inc
repnz
cmp
faddl
stc
sbb
adc
test
push
scas
mov
aas
dec
pop
movb
es
sub
cwtl
mov
jl
loope
xchg
or
loope
sbb
jg
out
movsl
add
enter
movsb
jmp
cltd
cmp
sbb
mov
sub
pop
cmp
lret
mov
ret
outsb
adc
sbb
add
xor
fnstenv
xchg
fwait
pop
aad
pushf
in
mov
xchg
jge
cmp
aaa
mov
cltd
sbb
pusha
inc
in
push
arpl
or
data16
shrl
sub
clc
adc
fs
pop
leave
in
popf
cs
inc
in
out
and
inc
or
or
mov
stos
in
inc
loop
insl
pop
mov
xchg
test
xor
popa
int
jb
push
cmp
jecxz
inc
adcl
add
movsl
stc
int3
or
cmp
sbb
sti
or
and
push
cmpsb
data16
or
sahf
or
pop
hlt
sti
pop
insb
fiaddl
dec
clc
dec
ljmp
cmp
aas
push
mov
sub
mov
sub
jmp
push
xchg
ror
ret
jae
data16
jns
sbb
fdivs
xor
sub
adc
and
pop
jecxz
cmp
ret
xchg
sbb
cmpsl
push
mov
lahf
lret
ss
add
push
pop
test
push
clc
xchg
push
testb
pushw
out
or
rcrl
xchg
mov
jae
ja
not
xchg
sub
mov
cmp
dec
push
pop
jg
stc
dec
jge
icebp
jo
sub
lea
dec
push
lahf
jne
mov
fmuls
into
int3
fwait
xchg
sti
mov
mov
push
mov
xor
jae
or
xor
jne
jle
xchg
and
hlt
sub
pop
mov
xchg
add
fcmovbe
ret
ficomps
cmp
arpl
dec
jp
mov
push
jno
cmpl
sub
adc
lods
inc
movl
sbb
loopne
sbb
xchg
repnz
addr16
int
cmpl
shlb
movsl
movsl
or
clc
iret
push
mov
xor
push
xorl
inc
sbb
jmp
cld
in
mov
push
mov
jb
ficoml
add
push
xchg
dec
popa
add
cmp
xchg
call
loopne
les
test
scas
pop
pop
addl
jnp
or
fldcw
or
scas
mov
mov
dec
adc
ss
pop
push
jb
add
enter
and
rcrb
ss
in
sub
nop
std
pop
sbb
add
inc
into
pop
pop
clc
push
std
aad
es
cs
call
mov
movsb
inc
push
push
stos
out
mov
xchg
movsb
mov
push
xchg
notb
push
ss
repnz
rol
jl
mov
pop
push
fdivl
cmp
outsl
out
les
fsts
jb
push
popf
mov
and
jae
and
mov
or
loop
fwait
test
xor
test
aad
or
cmp
or
inc
iret
push
lods
repz
pop
jno
push
pop
aas
lea
cmpsl
mov
mov
pop
sbb
and
cs
les
inc
mov
outsb
xchg
jno
ror
or
and
aad
bound
cmpsb
pop
sub
aad
imulb
stos
jno
and
inc
mov
cmc
sbb
mov
mov
or
out
adc
icebp
or
test
stos
testb
push
frndint
inc
decl
shr
pop
sub
and
insl
mov
add
icebp
push
fwait
mov
stc
inc
cltd
lods
int
vrcpss
nop
into
fildl
loop
in
sbb
jae
je
out
lret
sbb
in
dec
pop
sub
inc
dec
movsb
imul
arpl
addr16
mov
clc
mov
out
clc
in
dec
lods
cwtl
leave
xor
mov
lods
mov
mov
jecxz
inc
call
mov
inc
sbb
mov
cli
dec
fldl
shlb
popf
push
xor
lahf
mov
fisttps
push
push
sti
insl
and
lods
mov
pop
cmp
sbb
inc
repz
addb
stos
adc
fiadds
enter
mov
pop
nop
dec
mov
mov
lcall
pushf
lea
cmp
shll
cli
pop
lods
lods
repnz
in
es
pop
sbb
dec
xchg
adc
es
mov
push
fidivrs
add
dec
cmpsb
out
xchg
incl
mov
and
cltd
add
fbld
mov
call
mov
cmc
mov
ret
je
cltd
sbb
or
divl
xchg
push
fs
xchg
xchg
jb
push
pop
adc
fsts
sbb
xchg
scas
subb
dec
jecxz
faddl
adc
aam
or
rolb
dec
xor
adc
fadd
inc
push
andb
mov
xor
dec
push
sbb
out
andb
ljmp
mov
pop
mov
in
and
insb
inc
lahf
add
fisubrs
pushf
scas
movsl
fwait
aas
cli
xor
dec
sub
mov
fisubrl
pop
cwtl
sub
or
mov
mov
neg
aas
xchg
jnp
ret
xchg
cmp
aas
pop
lahf
dec
aam
jmp
cmp
sub
xlat
insb
jb
js
sub
cmc
adc
ss
and
imul
dec
add
cmc
stos
data16
or
fbld
cli
cld
adc
in
mov
mov
je
imul
cmpsl
in
inc
ljmp
xchg
arpl
sbb
fs
adc
mov
jne
clc
add
cmp
mov
dec
jg
dec
mov
movsb
shll
out
mov
dec
lret
fmull
in
mov
lods
movsb
hlt
inc
mov
jno
adc
or
and
rol
stos
push
push
add
and
adc
dec
mov
mov
and
je
and
clc
in
mov
es
sub
fmuls
inc
in
or
aaa
push
inc
push
addr16
aad
imul
jne
lods
data16
add
sti
push
mov
pop
sbb
jns
fs
mov
jmp
xor
fwait
mov
cmp
out
mov
adcb
lea
cmpsl
add
mov
sub
xchg
lods
push
mov
dec
add
and
fnstenv
jmp
in
lret
fdivr
cli
jb
xchg
sbb
inc
mov
icebp
pop
xchg
sbb
movsl
ss
cld
cli
add
pushf
sahf
mov
aaa
add
dec
push
mov
scas
pop
jae
or
dec
in
lret
stc
inc
dec
or
addr16
stos
jecxz
mov
leave
stc
sbb
rcl
mov
pop
xchg
push
push
sbb
cmc
movsl
xchg
sub
out
push
add
loopne
scas
dec
sets
and
mov
out
aam
sbb
pop
js
mov
in
inc
xor
out
cmp
movsl
out
jo
aaa
in
sbb
clc
cmp
scas
dec
push
push
pop
ss
adc
push
icebp
es
or
aad
fcompl
mov
outsl
lods
sbb
std
test
dec
insl
int3
push
mov
icebp
push
fld
call
cltd
sbb
mov
in
xor
pop
pop
cmp
enter
add
das
inc
fidivrl
ss
pop
jb
add
cld
cmpsl
jecxz
add
dec
ja
jo
test
loopne
call
xor
es
scas
out
xchg
das
xor
mov
add
and
inc
dec
insl
mov
js
ret
mov
popa
push
loope
shr
or
sub
clc
mov
xchg
in
push
out
pop
jae
and
cltd
push
repz
pop
icebp
arpl
mov
shlb
cmpsb
mov
dec
xor
enter
outsb
rcrb
xor
mov
fistps
dec
jle
mov
jmp
out
pop
sti
xchg
pop
mov
mov
sub
cmpsb
fidivs
xchg
inc
dec
cmp
inc
test
push
loope
inc
movsl
out
mov
inc
jp
cmp
repnz
mov
mov
mov
lea
stos
dec
mov
std
lcall
int
push
das
rol
pop
loopne
inc
imul
jns
mov
inc
xchg
adc
iret
int
push
outsb
mov
cmp
jne
dec
jecxz
cmpsl
movsl
dec
mov
push
pop
cmc
idivb
mov
inc
push
ja
mov
sub
xchg
les
and
pop
iret
add
xchg
sub
sahf
cmp
mov
negb
push
iret
pushf
mov
inc
add
xchg
add
jne
testl
hlt
lahf
inc
lret
jl
stc
mov
ret
icebp
into
jne
mov
xor
test
roll
jecxz
pop
lods
lcall
aaa
mov
int
aad
push
jno
add
or
cmpsl
mov
subl
xchg
jle
imul
out
stos
add
mov
hlt
sbb
xor
xchg
sbb
arpl
mov
add
push
lds
in
jge
add
lds
xchg
push
mov
push
mov
leave
iret
push
insl
in
jmp
aas
adcl
rcl
shlb
inc
cmpl
pop
gs
stc
push
inc
int
popa
push
xchg
pop
leave
add
fcmovb
aam
dec
sbb
add
lods
daa
gs
push
add
test
sub
ja
push
and
jmp
pop
adc
or
adc
pop
dec
mov
gs
sub
mov
movsl
in
xorb
icebp
add
aaa
fisttpll
sbb
xchg
and
adc
shll
lret
jae
fcmovu
jae
inc
repz
xchg
dec
out
dec
xor
inc
pop
gs
andl
scas
cld
jp
mov
mov
lret
pusha
testb
out
fnop
jge
add
pusha
add
adc
cli
adc
xor
push
cmc
adc
mov
sub
mov
je,pt
ja
xchg
mov
notb
push
inc
cmp
pop
sub
xor
cs
xchg
sub
push
cltd
and
dec
jmp
in
sub
xor
sbb
out
cmp
mov
popa
sbb
push
sub
adc
and
imul
and
rcrl
pop
andb
fildll
jp
or
jo
cltd
inc
gs
aam
adc
mov
lret
ljmp
inc
jp
push
jae
insl
scas
adc
loop
pop
gs
shll
popa
add
add
xchg
lea
in
mov
inc
out
neg
jmp
out
sbb
or
leave
jge
xchg
hlt
inc
xchg
inc
dec
test
cwtl
jnp
into
push
pop
mov
shrl
std
sub
sub
shlb
dec
jbe
je
nop
dec
out
xor
sbb
inc
sub
sarl
outsb
adc
adc
mov
stc
int3
out
nop
mov
es
jns,pn
stc
xor
bound
xchg
pusha
lret
sub
test
sub
dec
xchg
jo
rcrb
add
ret
adc
pop
xor
cs
leave
and
dec
sbb
push
push
mov
push
imul
clc
aaa
pop
orb
dec
mov
outsl
aas
lea
xorb
xchg
sub
adcl
adc
adc
cs
and
stos
je
sbb
inc
sti
call
sahf
mov
pop
sbb
inc
cmp
cld
xchg
ret
movsl
xchg
dec
push
idivl
mov
mov
inc
or
outsl
mov
jg
rcrl
cmp
mov
mov
jne
or
insb
sahf
arpl
out
lcall
and
fwait
pop
lds
push
push
mov
or
sbb
inc
cmp
imul
outsl
cmpsl
in
stc
xchg
jecxz
int3
xchg
jg
icebp
cmp
imulb
fstpl
out
in
arpl
xchg
dec
rorb
pop
insb
inc
push
dec
mov
inc
sar
push
repz
pop
jge
mov
adc
lods
pop
inc
nop
mov
pop
sbb
fstps
fs
add
adc
loope
in
fistps
jecxz
xchg
hlt
out
jmp
fists
fisubs
push
movsl
mov
mov
jmp
mov
mov
xor
or
sub
test
test
pop
repz
adc
aad
fdivp
xchg
int
sbb
fnstenv
jecxz
out
xor
jp
in
push
jne
dec
dec
test
adc
or
lods
clc
sbb
mov
and
jae
xchg
inc
out
fdivrs
and
mov
idivl
adc
add
les
outsb
mov
inc
out
fdiv
int3
scas
outsl
xchg
out
es
xor
dec
inc
lods
xor
shl
mov
fdiv
mov
sbb
ret
jle
sahf
sahf
adc
aad
xorb
out
mov
fwait
jae
repnz
jge
pop
xchg
dec
inc
cmpsl
leave
std
or
out
cmp
mov
cmpsl
pop
push
pop
rcl
insl
xchg
ret
iret
pop
test
and
test
dec
pop
mov
hlt
ja
in
sbb
test
sti
mov
ds
test
add
inc
jle
test
dec
sbb
out
orb
cmpl
lret
inc
mov
mov
ds
in
test
mov
sbb
pop
fs
xlat
sub
sarb
imul
add
or
sarl
or
cmc
fbld
adc
cmp
clts
jnp
jb
imul
adcl
stos
std
dec
add
outsl
xor
ds
out
imul
xchg
lcall
push
inc
cmp
cltd
jmp
pop
dec
inc
test
scas
mov
ss
shll
cmc
mov
clc
scas
or
mov
and
leave
mov
and
add
jo
icebp
jbe
sub
out
fs
adc
repnz
jno
jle
sbb
sub
fnsave
ret
mov
jo
rclb
cmp
push
cmpsl
pop
or
inc
mov
in
xchg
pop
in
mov
aas
rcrb
xchg
das
not
sbb
xor
adc
test
push
jb
sub
mov
sbb
cmp
jb
fmuls
dec
xor
loope
stos
jmp
aad
clc
add
out
loope
int3
mov
lods
rcll
notb
repz
cld
jb
or
fisttpll
and
jmp
arpl
in
sbbl
rclb
pop
loopne
xchg
sub
rcrl
mov
pop
outsb
loop
notl
lock
sahf
mov
inc
adc
lods
and
mov
cltd
clc
int
dec
and
or
push
jge
mov
movsl
loope
push
mov
add
roll
mov
fdivrl
int
cmp
sub
idivb
pushf
std
mov
jp
mov
in
fs
dec
and
push
lods
mov
andl
cmp
push
cli
insl
aam
mull
ss
scas
test
inc
mov
pop
push
pop
jp
push
out
mov
arpl
jge
clc
lret
lcall
aaa
outsl
push
mov
leave
cmp
ljmp
add
sbb
mov
pop
mov
pop
popa
loopne
ret
xchg
mov
in
sbb
lahf
and
xchg
jle
mov
mov
jl
loopne
xchg
xor
inc
into
cmc
daa
mov
sub
or
test
push
sbb
mov
cmc
xchg
test
xor
mov
push
push
jne
sbb
xchg
cmp
push
leave
ficoms
add
iret
push
inc
pop
jge
das
mov
cmp
cmp
mov
pop
xchg
mov
or
sub
xchg
mov
clc
mov
repz
sti
and
cltd
cmp
push
inc
jg
daa
mov
movsl
mov
cmp
fsts
mov
daa
in
leave
bound
pop
or
adc
mov
add
js
inc
sbb
dec
js
dec
sub
shrb
js
aas
jo
xor
shrl
out
add
mov
lret
jae
xchg
idiv
bound
imul
mov
xchg
lahf
xacquire
scas
roll
imulb
shlb
jne
fucomi
cmp
cltd
insb
jne
cmpsl
adc
push
dec
lds
sub
cltd
push
repz
hlt
push
data16
jle
add
sti
xlat
xchg
andl
adc
mov
push
add
push
inc
or
add
or
lock
aad
jmp
clc
mov
jecxz
test
aaa
dec
incl
lock
rorl
xchg
inc
cmp
dec
negl
cmp
lcall
mov
and
jmp
add
or
push
mov
out
add
fcomps
fstps
push
inc
pusha
inc
pop
test
xchg
mov
fidivrl
stos
pushf
aas
mov
ljmp
ja
lods
inc
repz
xchg
das
inc
dec
dec
cmp
aam
jo
lret
repz
cli
ljmp
mov
pop
rcrb
inc
sbb
cmc
mov
inc
sbb
pop
imul
fwait
cmp
lahf
and
ja
stos
sti
clc
jmp
ds
mov
and
pusha
jbe
call
and
or
mull
test
xor
cli
pop
mov
cmpsb
xor
out
push
xchg
rorl
xchg
dec
test
pop
pop
ja
push
iret
inc
cmpsl
and
outsl
adc
rcl
cmp
fdivl
push
pop
orb
imul
testl
shrl
loop
sub
cmp
gs
add
sbb
cltd
pop
stc
push
sar
and
sub
jo
imul
add
fsubrs
sbb
rorb
xchg
push
mov
das
sarl
out
mov
je
sbb
push
adc
jl
xchg
cmp
imul
adc
mov
lahf
dec
pop
cmp
sub
push
add
mov
pop
inc
repnz
cli
and
cmp
adc
push
sbb
inc
cmpsb
test
xor
push
loop
test
jg
ja
dec
mov
lahf
rcll
mov
dec
add
xor
push
dec
ljmp
in
pop
sahf
jns
pop
cld
pop
stc
js
enter
icebp
sub
leave
iret
mov
mov
xchg
hlt
cltd
lret
sub
aas
leave
fcmovnb
jno,pn
lret
jbe
lret
cltd
mov
icebp
in
sbb
into
xchg
dec
mov
jg
xchg
outsl
or
ret
xchg
and
addr16
push
xor
push
pop
or
push
dec
xorb
xor
pop
js
mov
fcmove
arpl
inc
and
ljmp
jmp
sbb
pushf
popa
add
dec
aam
jo
or
xchg
mov
mov
in
ss
test
dec
pop
lods
cltd
push
das
cmp
sbb
les
mov
js
xor
jg
lea
xlat
mov
jbe
and
pop
int3
out
lea
sbb
hlt
dec
cmp
pop
push
rorl
push
popl
xor
sbb
inc
sub
das
inc
push
jae
ficoml
jp
in
in
out
mov
xchg
lret
inc
push
clc
outsl
or
xor
xchg
ds
jp
inc
stos
fcmovu
in
mov
movsl
add
incl
jno
mov
dec
mov
pusha
push
xor
loop
mov
mov
jo
and
std
movsb
fdivrl
jl
scas
and
insb
arpl
push
cmp
js
mov
imul
in
stos
iret
cmp
or
xchg
aad
add
movsb
ds
inc
add
push
fldt
xchg
sbb
jb
pop
or
add
or
jno
push
or
and
add
sbb
gs
or
orl
push
mov
popf
jmp
call
fdiv
pop
dec
out
popf
mov
inc
fiaddl
jnp
testb
rcrl
shll
aas
xchg
cmpl
sub
dec
push
aam
int3
sbb
mov
jo
sbb
jbe
adc
lods
lods
push
mov
outsb
pusha
sub
mov
adc
dec
inc
and
add
dec
and
imull
sbb
mov
mov
cmp
inc
cmp
lds
dec
insl
les
dec
in
aam
ljmp
daa
mov
in
jle
and
mov
bound
jmp
lcall
add
mov
push
mov
je
stos
sbbb
dec
outsb
mov
out
mov
xor
setns
and
dec
jmp
sahf
or
mov
cmp
lock
lea
mov
icebp
push
ret
and
mov
jmp
fwait
dec
and
push
imul
inc
push
outsl
aam
enter
sbb
xchg
scas
push
jp
jo
ret
and
ljmp
mov
popa
test
sub
push
test
push
fisttps
fists
lcall
pop
rcll
int3
dec
das
test
pop
fldt
movsl
imul
sbb
push
lds
mov
and
cli
push
jo
test
jae
std
dec
mov
and
dec
lahf
push
movsl
sbb
negl
cwtl
xchg
xchg
mov
dec
push
arpl
cmp
int3
xchg
push
jno
mov
jecxz
sbb
pop
mov
sub
lods
ret
notl
or
adc
and
daa
mov
gs
xchg
scas
pop
mov
cmp
iret
iret
pop
or
pop
dec
push
shll
adc
pop
xor
in
cs
rcr
cld
cmpsl
ss
sbb
xchg
xlat
or
std
call
idivl
dec
ror
add
stos
lret
add
pushf
pusha
sbb
lea
jmp
mov
hlt
iret
jle
jns
mov
push
ret
xchg
inc
sub
xchg
int
pop
pop
mov
xchg
push
js
pop
cmc
imul
cmpsl
xlat
dec
add
and
xchg
and
stc
xchg
daa
lret
loope
mov
sqrtps
in
push
pop
sbb
jmp
sbb
aas
lret
inc
adc
xchg
stos
fdivrs
mov
das
repz
into
fmul
repz
mov
rcrl
sarl
test
ds
fwait
ljmp
jno
test
repnz
xchg
cmc
and
gs
fs
mov
pop
mov
jnp
imul
cmp
jecxz
xchg
in
hlt
lret
data16
aad
ds
outsl
loope
movsb
int3
nop
stc
les
dec
jl
cmpsl
movsb
int
loopne
or
jecxz
pop
add
fdivl
adc
shr
jle
xchg
push
pushl
sbb
out
xchg
out
dec
addr16
in
pusha
insb
ficompl
pushf
inc
cmp
lea
cmpsb
jns
pop
mov
cmpsl
cmpsb
dec
xor
mov
sbb
inc
cmp
scas
pop
push
out
and
sbb
icebp
insl
ss
xor
cli
pop
movsl
lret
mov
addl
jne
pop
inc
jo
fiadds
hlt
shlb
push
iret
xlat
aas
inc
sarl
sub
call
les
inc
out
push
repnz
jo
adc
popf
add
dec
fimull
and
dec
das
lret
jl
and
xchg
mov
inc
mov
in
lahf
sub
push
pop
repz
repnz
mov
je
adc
pop
lret
adc
push
sahf
add
add
sub
int
or
movsl
mov
mov
dec
add
xchg
out
jecxz
fcmovnbe
jnp
dec
jg
adcl
mov
scas
ret
lret
or
jnp
push
dec
jg
jbe
std
fldl
outsb
rorl
fnsave
aas
sbb
push
pusha
mov
push
mov
add
into
in
add
xor
jns
movsb
xchg
icebp
pop
pop
mov
jmp
testb
rolb
push
adc
push
ss
cmp
add
ret
aad
mov
mov
pop
aas
outsl
fstps
or
cwtl
test
shlb
pop
adc
xchg
cmp
loope
xor
push
xor
bound
xchg
loope
mov
stos
mov
dec
adcl
fs
shll
outsb
repnz
pop
enter
inc
ret
andb
jnp
mov
pop
push
nop
ret
mov
lock
dec
jbe
int
roll
mov
sub
add
cmp
jno
and
test
out
test
sbb
sbb
sub
loop
fcmovb
fs
pop
or
mov
js
arpl
ljmp
in
fisttpll
mov
lret
cltd
cs
shlb
and
jg
mov
inc
jg
lahf
les
lods
dec
dec
nop
xchg
cmp
mov
adc
icebp
or
rol
rol
inc
sub
sub
xchg
addr16
adc
or
in
and
fstps
scas
mov
lcall
enter
dec
fnstsw
pop
popa
push
add
push
or
mov
xlat
xor
loope
mov
sarl
mov
movsl
pop
inc
imul
inc
xchg
jo
inc
test
or
mov
jb
mov
jae
std
cmpsl
sub
iret
ficompl
orl
cmp
cmp
jmp
daa
push
fisubl
dec
es
pop
xor
pusha
mov
mov
icebp
lods
xchg
adc
push
push
sarl
scas
jo
into
xchg
xchg
sbb
and
sbb
sbbl
repz
nop
daa
rclb
mov
mov
add
jmp
add
xor
inc
sub
mov
sar
xor
leave
repz
lods
lods
pop
mov
addr16
inc
pop
sarl
in
xchg
inc
xor
repz
fists
add
cmp
shll
cwtl
and
loopne
bound
enter
addb
jecxz
dec
test
stos
dec
mov
mov
cmpsl
dec
scas
fxch
mov
sarl
pop
faddl
adc
fdiv
pop
icebp
push
outsb
mov
insl
or
je
pop
js
lea
cmpsl
scas
jae
dec
inc
jge
mov
mov
sti
sbb
rcll
inc
daa
ss
js
in
lret
xchg
movsb
and
fistpll
xor
das
into
pop
mov
mov
push
push
cli
xor
dec
xor
leave
sbb
add
jbe
daa
push
outsw
fiadds
cmpsl
mov
pop
pushf
loope
cmp
nopl
pop
leave
jb
xchg
lds
cmpl
aas
into
arpl
mov
test
enter
daa
call
aam
out
mov
scas
xchg
adc
stos
jg
repz
pop
ret
sbb
xor
test
dec
cld
sub
sbb
and
popf
hlt
and
xor
or
shl
out
add
xchg
jg
jp
scas
insl
adc
into
xor
lret
fildll
push
push
inc
ds
xorl
mov
das
xor
pop
mov
sbb
mov
cmp
inc
and
mov
push
test
sub
add
leave
mov
cmpl
sbb
fsubl
push
aaa
pop
sahf
push
call
fdivrs
cwtl
or
cwtl
pop
jo
into
iret
mov
xchg
xchg
sbb
icebp
jmp
push
enter
sbb
mulb
mov
enter
cs
or
scas
mov
iret
xchg
hlt
push
xchg
xor
xor
ljmp
cmp
imul
or
gs
out
mov
sbb
dec
ss
icebp
push
push
push
pop
sahf
in
jg
xor
shrb
mov
mov
testb
jno
out
xlat
jecxz
mov
inc
pop
js
in
xchg
and
mov
xchg
xor
fistpl
and
mov
dec
shrb
mov
cmp
mov
jns
test
aaa
outsb
in
push
lret
lock
push
hlt
sub
or
leave
test
aad
test
pop
pop
and
xor
outsl
dec
in
test
jmp
repz
mov
dec
fs
cmc
inc
mov
inc
repz
pop
into
popa
pop
stos
mov
mov
addb
int3
and
and
adc
add
adc
ret
push
dec
lods
rcr
sub
mov
fnstcw
clc
scas
aas
dec
hlt
push
pop
push
mov
addl
xchg
cmc
loopne
adc
lahf
popa
sbb
pop
xchg
daa
mov
aaa
stos
push
idiv
sub
sbb
test
lods
adc
dec
mov
in
mov
jae
js
adc
fidivrs
iret
pushf
mov
ret
pop
fisubrs
and
mov
subb
cmc
sti
jecxz
pop
and
inc
insl
ljmp
pusha
imul
push
fsubl
or
jl
pop
insl
lcall
and
imul
jg
and
mov
inc
inc
cli
push
jne
cmp
jle
push
mov
xchg
ss
push
loopne
sub
iret
or
mov
notl
sub
aad
insl
sub
pop
mov
xor
or
add
mov
sub
push
cmp
adc
cli
dec
lret
nop
dec
mulb
test
jbe
mov
jns
inc
dec
pushf
mov
add
imul
aaa
jl
call
ja
cmp
leave
rolb
fisubs
jne
cmp
or
aaa
mov
mov
fmull
cvtps2pd
jg
xor
data16
mov
xor
or
jo
jecxz
and
pusha
shll
mov
fmul
jne
int
leave
push
loopne
adc
sbb
in
pop
xor
cs
push
sar
xor
popa
jmp
dec
push
push
inc
test
xchg
inc
xor
jns
int
imul
jl
flds
sub
jl
stos
js
and
mov
repnz
mov
test
aam
sub
adc
into
out
mov
ja
and
rcrl
daa
fwait
cmpsl
mov
es
fwait
sub
lods
fnstenv
mov
pop
ds
xchg
gs
fdivrl
cmpsl
flds
in
mov
stos
sarb
xchg
lds
scas
test
dec
and
add
das
mov
dec
int
sub
adc
dec
iret
mov
lea
push
arpl
mov
cltd
mov
loopne
out
fcmovb
aam
jg
jno
test
fisubrl
cld
pusha
mov
test
mov
cmc
and
push
mov
sti
mov
idiv
out
outsb
push
lods
or
repnz
test
pop
sub
push
inc
push
out
jnp
cmp
nop
fs
adc
fstpt
aaa
add
decl
pop
xchg
inc
mov
xor
enter
loopne
fbstp
lret
mov
iret
outsb
mov
xor
xor
out
add
push
fcoms
cli
cs
adc
pop
push
mov
mov
lods
fs
sbb
mov
outsb
lret
and
into
push
leave
xchg
fidivrl
pusha
sub
inc
push
lock
in
into
neg
imull
lahf
stos
insb
mov
ljmp
pusha
int
push
repz
sbb
daa
xchg
push
mov
xchg
stos
aad
push
jecxz
sub
sbb
add
sbb
insl
cmp
jae
shr
insl
inc
push
ds
jb
xchg
push
sub
rcll
ja
cmpsb
add
inc
fs
sbb
pop
ret
in
in
or
sub
pop
push
mov
cmp
add
xor
movsb
xor
xchg
cmp
cld
jp
aam
cmp
xchg
pop
mov
dec
add
scas
jne
test
imul
xchg
mov
stc
and
dec
ss
jnp
jg
mov
dec
sbb
jo
dec
clc
pop
insl
bswap
outsl
out
or
hlt
dec
jmp
mov
cltd
int3
pop
push
lret
push
adcl
in
cmc
movsb
add
out
mov
fdiv
pop
pop
pop
outsb
sbb
sbbb
cmc
dec
out
scas
or
or
vunpcklps
pusha
das
movsb
ret
mov
cltd
test
pop
or
cmp
push
scas
mov
cmpsl
fsubrl
mov
icebp
loope
mov
ret
out
aam
pop
loope
jae
repnz
fistps
cld
icebp
inc
daa
add
or
cs
fs
cmp
cmp
jmp
cs
lahf
sub
lods
mov
adc
inc
push
sbb
pop
mov
mov
xchg
imul
jmp
add
pop
mov
cmp
cs
dec
mov
int3
jbe
gs
adc
js
testb
mov
jmp
sbb
fwait
dec
adc
push
test
and
cmpsl
or
dec
pop
and
sar
push
sub
xchg
adc
mov
popf
sahf
add
or
nop
xor
xor
sub
cld
xchg
enter
mov
jne
mov
fimull
push
add
addr16
add
pusha
dec
shll
shr
sbb
jno
movsl
sarb
loopne
push
xchg
pop
leave
imul
aas
xchg
fidivrs
aas
xchg
dec
mov
and
mov
in
or
sbb
std
std
cld
or
fs
and
dec
mov
xor
inc
mov
add
push
dec
mov
inc
sub
jmp
outsb
scas
into
jge
sbb
out
mov
xor
mov
pushf
in
push
push
ret
movsb
jno
dec
adc
negl
mov
mov
movsb
popf
fnstcw
into
lds
cmp
mov
outsb
enter
inc
repz
mov
out
and
xlat
jb
scas
adc
and
mov
pop
pusha
stos
les
mov
or
fs
mov
ja
and
bound
pop
or
push
test
sahf
xor
pop
sbb
xor
out
sub
movsl
sbb
jo
lret
dec
outsb
sub
ror
and
js
fsubs
in
jns
and
cwtl
arpl
jo
int
dec
and
popa
add
adc
cli
mov
popa
aad
pop
lret
mov
cmp
andl
imul
lret
ljmp
stc
aas
mov
dec
and
inc
mov
cwtl
sub
dec
push
roll
sbb
and
lea
pusha
mov
prefetchw
jp
mov
je
xchg
push
and
push
dec
sub
xchg
mov
sbb
loopne
and
lcall
divb
lods
dec
iret
push
xlat
mov
aas
rclb
cmpsl
mulb
cmpsb
cmpsb
lods
cld
in
xchg
decl
gs
adc
imul
cmc
mov
inc
das
mov
mov
push
rorl
inc
jae
pop
aam
jmp
push
xorl
mov
cmp
mov
pop
pop
pusha
test
sbb
ficoms
add
in
clc
xchg
cmovns
jns
mov
dec
insb
jp
pop
or
sub
mov
pop
dec
lret
mov
insb
repz
push
xchg
shrb
test
jnp
xlat
popa
and
mov
jnp
scas
sub
mov
inc
mov
inc
repz
sub
xor
cli
dec
daa
or
outsl
cmpsb
xor
jp
outsb
outsl
push
push
pushf
movsb
cwtl
jbe
sub
add
rcr
or
sub
or
inc
arpl
repnz
xor
jle
out
sub
je
jbe
out
xchg
pop
out
push
loope
cmp
mov
adc
data16
rol
pop
xchg
dec
push
iret
ds
cld
jns
sub
loop
and
insb
in
jne
dec
imul
adc
pop
pushf
andb
adcl
mov
sar
outsb
cmp
push
cmp
imul
inc
and
push
add
jg
push
adc
sub
xchg
mov
sar
pusha
repnz
divb
pop
in
and
movsl
aam
cmp
out
push
add
mov
ja
popa
mov
pop
scas
xor
gs
popf
xchg
stc
faddl
mov
xor
mov
loopne
iret
adc
int
insl
pop
jns
aas
push
or
jp
insb
nopl
aas
push
imul
lods
or
stc
dec
mov
or
cmc
int3
mov
std
mov
nop
aam
and
cwtl
push
out
arpl
dec
fsubrl
mov
inc
ss
in
cld
mov
dec
cmp
xor
cwtl
fldcw
das
vandnps
fimull
adc
lcall
loopne
jne
mov
data16
jno
inc
test
std
push
mov
rclb
out
lea
inc
sub
pop
or
jecxz
dec
xor
lcall
dec
sti
push
and
lahf
dec
cmp
imul
pop
mov
push
jecxz
negl
fisubl
test
mov
ret
pop
mov
scas
dec
inc
mov
cltd
jg
add
cltd
scas
aam
daa
inc
inc
cli
das
mov
xchg
je
add
xor
loopne
lock
dec
mov
lock
push
sub
cmp
jl
dec
xchg
movb
std
lret
ret
repnz
mov
and
mov
xor
xor
mov
dec
adc
mov
xor
mov
imul
popf
jns
dec
xchg
jl
sbb
int
cs
addr16
inc
push
add
imul
out
mov
cmp
stos
and
in
aad
fisttps
mov
xchg
push
dec
jecxz
xlat
xchg
aas
mov
xchg
push
movsl
mov
ljmp
adcb
ret
ret
add
outsb
jp
popf
adc
add
ljmp
lods
aaa
mov
out
push
arpl
sub
fsts
popa
nop
add
loope
pushf
es
arpl
std
jae
cmp
dec
aam
aad
lcall
rorl
in
push
or
jmp
fld
cmp
or
pushf
hlt
jl
adc
outsl
cmc
or
cmp
pop
test
jno
xlat
pop
out
imul
sbb
insl
inc
mov
lods
add
push
ficompl
inc
movsb
mov
loope
loope
insl
imul
push
aaa
cmp
mov
imul
jl
ja
push
daa
mov
add
rclb
lock
arpl
xorps
cld
adc
jnp
mov
jmp
sub
jge
or
jp
xor
outsb
fs
call
mov
mov
push
in
push
pop
cmp
mov
lea
cltd
dec
inc
repnz
jno
mov
mov
aaa
mov
das
call
popf
cmc
sbb
shlb
outsb
add
xchg
out
cmp
push
rcr
mov
testb
cmp
imul
pop
filds
adc
ret
cli
ds
adc
out
xor
push
shrl
mov
test
outsb
ret
rcrb
repz
and
loope
dec
rolb
dec
fmul
sbb
bound
pop
cwtl
mov
sub
mov
lea
xchg
push
push
ds
pop
pop
jp
insl
adc
mov
dec
push
xchg
add
mov
jg
jo
mov
lret
movsb
and
mov
dec
repz
lods
or
jne
lea
sbb
mov
mov
imul
fisubrs
jle
dec
inc
test
or
and
popf
idiv
mov
mov
insb
lahf
incl
pop
rorb
dec
sbb
movsb
scas
sahf
mov
jb
mov
xchg
xchg
sbb
lahf
fsubs
test
and
pop
cmpsl
scas
jne
lahf
push
inc
mov
jge
jge
push
arpl
pop
data16
cmp
jnp
daa
aam
dec
fdivr
add
test
testb
inc
sbb
aaa
xor
scas
adc
or
sub
mov
xchg
push
imul
jecxz
inc
push
cltd
or
jo
insl
addr16
xor
and
insb
fisttps
repz
xchg
add
push
xchg
std
sub
dec
jle
sub
loop
lret
sbb
lock
sub
mov
pushf
fwait
cmp
mov
pop
and
cwtl
rcrl
mov
mov
mov
push
sbb
mov
inc
bound
mov
fisubrs
dec
xorl
call
lret
inc
es
rorl
mov
movlps
push
fs
push
cltd
sbb
mov
ret
mov
mov
push
or
push
pop
in
and
push
out
inc
idivl
nop
bound
mov
out
repnz
pusha
fs
loopne
cwtl
cld
leave
mov
imul
sbb
gs
adc
pop
or
and
iret
xor
sahf
lret
mov
sbb
icebp
sti
aaa
lods
movsb
mov
negb
int3
shlb
cmp
add
das
test
pop
sub
mov
pop
sti
lock
cmovae
sbb
mov
sub
dec
lds
mov
sarb
fs
sahf
xchg
add
sub
add
push
sbb
out
aas
add
cld
lcall
mov
ljmp
dec
jbe
add
dec
fldln2
rorb
dec
sbb
fs
cmp
add
cld
jge
sti
popa
xchg
xor
loopne
sub
fwait
pop
icebp
lahf
push
imul
cs
sub
fimull
ret
sub
sub
push
push
mov
mov
lahf
dec
jo
rolb
aas
sub
and
pop
sub
and
mov
movsl
jp
out
outsl
pop
push
or
cmp
jbe
pop
xor
mov
xchg
xchg
jle
xchg
xchg
repz
mov
mov
xchg
test
cmc
mov
xor
mov
aaa
xchg
or
xchg
dec
decl
sbb
fnsave
pushf
cld
sub
rcrl
dec
aad
popa
in
fwait
in
and
sbb
test
inc
xchg
loopne
inc
stos
hlt
shrl
es
aam
stos
ljmp
sbb
or
les
xchg
pop
or
push
mov
dec
inc
xchg
xchg
cmp
movsl
xchg
xor
xchg
test
inc
jle
fdivrl
js
dec
jae
mov
popf
in
out
dec
inc
cmpb
xchg
jae
dec
mov
and
mov
mov
fistpl
dec
dec
ss
cmp
push
push
xchg
outsb
inc
jb
cld
mov
outsb
lods
or
mov
movsb
cmp
mov
ret
int
loope
push
popf
in
or
push
int
out
and
xchg
daa
pop
mov
fdivl
jg
and
mov
dec
and
xchg
mov
pop
ja
mov
ja
aam
rcll
xchg
sub
dec
adc
lcall
ds
ds
push
scas
aaa
lea
push
pop
es
push
mov
hlt
jle
or
jge
call
lcall
dec
popf
sbb
mov
mov
add
in
outsl
fimuls
adc
sbb
cmpsb
jns
mov
fstpt
push
jb
mov
repnz
pop
fwait
cld
dec
outsl
cmc
sbb
add
cltd
xor
jno
pop
and
fcmovnu
shlb
loope
jge
movsb
jb
popf
das
jbe
and
lds
popa
shlb
data16
sub
test
inc
inc
pop
fcmovnbe
mov
cmpb
cmc
iret
mov
rcrb
and
xchg
dec
aam
js
test
mov
dec
dec
cmp
fstpt
iret
fmull
test
in
or
fldenv
mov
xchg
xor
pop
cld
adc
adc
test
push
mov
movsb
pop
pop
outsb
filds
repnz
sbb
lds
cmp
fbstp
negl
dec
lds
test
in
adc
call
adc
inc
push
adc
pop
mov
or
adc
vpsubq
clc
pop
jb
inc
add
in
mov
loopne
cmp
add
negb
sti
shrl
push
sub
pop
je
cmp
push
or
lcall
addl
fcoms
aam
rcrb
push
xchg
dec
shr
cmp
push
in
mov
xor
xchg
xchg
lcall
lret
push
dec
and
cli
ret
je
xor
push
into
in
pop
push
repnz
aas
lret
into
ds
xchg
jae
dec
pop
pop
mov
mov
outsl
lahf
xor
mov
popf
sub
nop
jp
clc
pop
imul
jmp
inc
xchg
cmp
pop
sbb
out
not
lret
push
dec
je
dec
in
sti
jnp
xchg
mov
mov
mov
sub
inc
mov
loopne
outsb
xchg
dec
inc
mov
repz
jmp
out
sub
push
dec
xchg
mov
rcrl
loope
out
lret
ljmp
sti
sarb
mov
inc
jne
jge
pushf
ja
dec
adc
out
jmp
out
xor
fnstsw
jge
push
ds
scas
xchg
sub
movsb
fwait
sub
rclb
popf
lret
mov
xchg
pop
mov
cli
jne
out
mov
mov
in
jg
cmpsl
leave
ja
or
mov
fstpt
mov
in
cmp
js
pushf
mov
aaa
or
xchg
popf
xor
mov
cs
repz
jmp
cmp
jnp
pop
shlb
test
pop
in
xor
insl
cmpsb
gs
repnz
push
push
int3
jecxz
cmp
and
sahf
push
stc
out
xlat
jnp
push
pop
inc
cmpsb
pop
mov
xor
adc
mov
push
dec
xchg
nop
jnp
imul
jp
shlb
ret
mov
hlt
ja
js
test
popf
subl
cld
in
cmp
xchg
xchg
dec
sbb
or
mov
call
mov
mov
jp
mov
addr16
imul
add
pop
shrl
pushf
dec
ret
xor
aaa
std
push
jnp
push
std
in
xchg
mov
fiaddl
mov
pop
fisubrl
shrb
or
jecxz
arpl
cwtl
push
mov
and
pop
jae
cmp
push
lods
in
je
cli
ret
add
pop
cmp
mov
push
testl
fcompl
stos
test
arpl
xchg
lret
out
mov
data16
lods
push
fstpt
mov
aam
pop
es
jmp
bnd
add
andb
push
arpl
mov
mov
insb
mov
stc
dec
scas
push
sbb
in
mov
ret
mov
mov
or
scas
xchg
icebp
outsb
mov
mov
and
sbb
dec
push
sub
hlt
cmp
imul
push
cld
jbe
mov
test
and
mov
push
mov
insl
into
pop
push
icebp
mov
jg
popf
add
or
adc
sbb
sub
movsb
mov
mov
xlat
jb
or
dec
popf
outsb
sub
loopne
sbb
les
loop
and
icebp
lock
stos
aam
xchg
loope
cmp
mov
movsb
mov
lcall
incb
sub
xchg
pop
mov
pop
idivb
push
pop
push
scas
movsb
adc
call
movsb
test
inc
call
mov
push
jno
mov
adc
divb
cltd
fdivr
xor
inc
push
mov
sub
pop
sbb
addr16
aam
ja
out
in
out
cmp
mov
and
pusha
and
dec
adc
scas
push
cltd
sbb
sbb
xor
xchg
jl
je
and
out
pop
lods
in
mov
rorb
sarl
inc
mov
stos
clc
test
icebp
pop
jge
cwtl
inc
cmp
jne
pop
adc
ss
dec
pop
out
lret
jnp
jne
adc
aam
sbb
fs
int
aaa
cmp
mov
fcomps
jl
les
or
pop
ds
inc
ret
bound
nop
push
sub
mov
arpl
popf
cs
xchg
es
movsb
add
repnz
loop
adc
in
icebp
mov
jmp
xor
push
das
int3
mov
push
adc
sbb
aas
dec
je
outsl
cmp
fadd
in
ja
push
push
leave
outsl
jle
addr16
xor
xchg
mov
lods
lret
outsl
int
das
lret
aam
popa
dec
push
jp
jp
imul
pushf
pop
and
mov
gs
je,pt
xchg
push
add
ja
cmp
addl
inc
push
into
stos
dec
mov
lret
mov
lret
cld
jle
rcrb
out
xchg
push
sbb
fwait
cmp
push
inc
xchg
xchg
test
and
xor
mov
mov
aas
sub
mov
stos
push
sbb
inc
enter
mov
je
add
lods
test
adc
fdivrp
jno
insb
loopw
pushf
xor
hlt
dec
mov
leave
mov
dec
dec
mov
pop
xor
fldt
push
cs
call
sub
aas
mov
xor
cltd
dec
sub
push
inc
cmp
sbb
sbb
pop
mov
cli
sub
sahf
cmp
fistpl
and
cmpsb
clc
push
lret
fwait
test
sub
popa
in
mov
add
or
test
xchg
push
jno
mov
pop
sbb
inc
add
xchg
out
jnp
in
jmp
inc
test
and
gs
cmpsb
fwait
xor
cmp
push
mov
nop
in
push
push
add
in
sbb
int3
push
bound
stos
test
pop
test
or
stc
inc
stos
push
lcall
arpl
adc
pop
push
out
mov
jne
lcall
cmpb
and
jl
xchg
aam
fwait
out
clc
mov
pushf
xor
lds
rclb
jno
add
or
mov
mov
rep
jnp
or
and
test
or
das
in
inc
rcr
fs
inc
mov
mov
icebp
mov
sbb
pop
xchg
mov
cltd
mov
mov
sbb
jmp
rorl
jge
out
cwtl
cmp
push
jns
inc
into
repnz
pop
mov
movsl
jb
xchg
ljmp
xchg
repz
lock
icebp
aam
popf
js
and
and
rcrl
fs
jbe
jne
shr
bound
movsb
sbb
in
cmpsl
xor
pop
aam
test
inc
adc
mov
add
in
mov
mov
fwait
daa
xchg
adc
jo
jmp
or
subb
xchg
lea
mov
dec
outsb
or
jae
dec
pushf
fldcw
push
push
lock
scas
mov
shlb
sbb
lock
popf
cmp
mov
jae
outsl
pop
mov
pushf
xchg
mov
cmpsb
or
inc
sahf
pop
or
mov
mov
stos
dec
cs
in
mov
cltd
scas
sub
shlb
aas
lret
popa
xchg
sub
cmpsl
test
push
pop
addr16
jbe
js
imull
imul
in
mov
sarb
xchg
xchg
push
loop
rol
lods
jl
addr16
adcb
inc
pop
mov
lcall
push
pop
xchg
loopne
sbbl
test
or
dec
stos
pusha
jmp
rcrb
or
cmpsl
xchg
and
push
push
cmp
xchg
stos
pushf
pusha
es
and
sub
pushf
jo
push
scas
dec
iret
cmp
mov
adc
dec
call
lcall
aad
fucomp
sbb
stos
and
jbe
call
or
and
hlt
adc
clc
addr16
stc
dec
mov
stc
push
xchg
jg
cltd
sub
cmp
mov
sbb
jbe
ret
or
and
in
sbb
adc
mov
add
mov
pop
lahf
mov
insl
mov
push
gs
xor
jbe
dec
jb
dec
jbe
and
fisubs
dec
push
in
dec
fimull
in
pop
outsl
xor
pmaxsw
jp
or
jp
cmp
dec
pop
xchg
pop
push
ret
sbb
sub
jne
mov
jp
push
scas
jecxz
cmp
out
jle
fildl
mov
imul
cld
inc
xchg
and
test
mov
fstpl
std
sub
ficoml
or
imul
aad
lds
out
test
mov
out
add
jle
fcomps
mov
imul
cmp
cld
inc
xchg
cli
jl
daa
arpl
cmp
push
jecxz
sub
fwait
sbb
inc
fisttpll
cmp
shl
add
hlt
lret
push
xchg
xor
shlb
xor
sbb
repz
jecxz
push
mov
rorb
iret
sbb
xchg
mov
jg
in
push
push
xchg
scas
pop
pushf
add
cltd
test
inc
cmp
mov
nop
jnp
cmp
mov
or
inc
das
push
jp
xor
mov
or
cmp
dec
fcomi
xchg
push
jno
dec
pop
std
xchg
data16
lea
mov
pop
push
int3
mov
jl
push
mov
mov
aad
test
mov
fst
les
das
icebp
pop
addr16
jns
repnz
xchg
pop
stos
jp
mov
sub
repnz
mov
loope
jbe
fld
add
xchg
ret
cltd
xchg
test
mov
movsl
fstps
mov
ficompl
adc
test
je
outsb
push
pop
pop
mov
or
xchg
fdiv
adc
insl
dec
jp
mov
and
add
mov
xlat
add
in
pushf
add
sahf
ficompl
repz
ss
lds
pushf
aaa
nop
and
inc
into
sub
scas
ret
aas
adc
ja
pusha
cmp
incl
adc
mov
cli
adc
cmp
cmp
out
popa
ss
xor
jns
pop
orl
push
ror
mov
jmp
insb
pop
outsb
pop
in
dec
add
fldenv
dec
adc
or
movsl
test
mov
xlat
mov
sub
xchg
mov
popf
shrl
and
cltd
jle
dec
popa
fs
stos
insb
call
lcall
in
cmpl
sub
rorb
and
mov
stos
in
lock
hlt
or
add
sarl
pop
test
orb
daa
int3
cmc
test
mov
icebp
popa
scas
inc
mov
sub
imul
dec
adc
in
rcll
test
sbb
or
pop
adc
mov
jno
insb
in
push
push
loop
cltd
cmp
outsb
add
sub
aam
xor
adc
into
pusha
outsb
insl
mov
pusha
iret
mov
cmc
or
push
sub
pop
in
fisttps
cmp
jns
mov
sarb
pop
pop
mov
stos
loopne
jmp
xor
sub
insl
iret
insb
ljmp
and
push
push
adc
mov
repnz
push
jp
out
xchg
mov
in
and
and
shl
push
jns
out
pop
mov
mov
xchg
pop
pusha
ds
out
lret
test
je
in
inc
mov
xchg
pop
das
add
push
mov
inc
dec
je
inc
adc
orl
pop
ds
add
mov
dec
push
into
sub
inc
push
sbb
and
sarl
xchg
jge
mov
inc
cwtl
sub
adc
jo
das
sub
das
xchg
outsb
add
cltd
cwtl
dec
or
xor
pop
jae
xor
rorb
cli
add
or
jae
sub
inc
dec
rep
out
stos
add
es
xchg
and
pop
pop
sub
and
push
insl
out
fcmovnb
mov
pop
sbb
mov
add
movsb
cmp
jecxz
mov
dec
int3
mov
inc
lea
jno
or
xor
sarb
pop
and
popa
movsl
jge
adc
ret
and
cltd
adcl
xchg
sub
xor
call
lahf
xlat
and
adc
pop
xor
pop
movsl
dec
jle
mov
fs
sub
imul
inc
movsl
dec
out
ss
jle
test
stos
test
mov
cli
cmc
add
fnstsw
or
add
sub
imul
dec
into
push
fsubs
and
xchg
sbb
outsb
xchg
stos
stc
push
incl
push
lret
mov
cmpl
leave
in
fs
lods
aas
push
sub
push
inc
add
mov
iret
pop
sub
stos
sub
add
mov
mov
xor
sahf
ret
rolb
lret
cmc
loopne
addr16
cmp
je
hlt
inc
repz
mov
mov
into
jno
pop
sbb
jb
lds
aas
mov
xchg
daa
lea
aas
push
xchg
and
push
popf
and
and
ss
ja
aad
cs
and
scas
lock
jmp
xorb
push
add
fdivl
and
pop
dec
sbb
fwait
xchg
sub
fcompl
xchg
xor
push
sbb
push
jno
push
mov
sbbl
test
pusha
movsl
lcall
loop
cmp
dec
mov
xchg
pop
dec
notl
roll
xor
jbe
adc
testb
jae
xlat
pop
fcmovne
xchg
sbb
pop
jp
mov
test
mov
fidivrs
xchg
dec
test
and
fsubl
pop
cmp
inc
mov
adc
jl
mov
mov
sbb
dec
sub
jb
sbb
popf
into
pop
xchg
fisttps
xor
mov
sub
xor
scas
sbb
add
and
pop
mov
add
sub
adc
xchg
mov
leave
in
outsb
push
xchg
xlat
cmp
mov
out
push
cs
popa
mov
xlat
jne
inc
addl
stc
inc
push
mov
xchg
in
mov
and
dec
adc
out
inc
cmp
mov
add
imull
mov
xchg
jge
inc
arpl
movsl
mov
fldt
jno
jae
scas
push
dec
out
cwtl
sub
mov
ljmp
pop
imul
addr16
decb
popf
insl
out
xchg
je
adc
sbb
addr16
sbb
or
adc
shlb
jo
xchg
pushf
xchg
je
loopne
adc
dec
jns
and
sub
into
push
enter
pop
int
sub
jge
push
out
jo
cmp
cli
dec
dec
adc
or
sub
xchg
pop
repnz
fwait
insb
sbb
je
cmp
outsl
outsl
push
xlat
mov
xchg
enter
adc
mov
xchg
jno
mov
inc
jge
jne
fs
pushl
jne
mov
sbb
mov
sbb
clc
loope
xor
xor
add
sbb
jge
mov
sub
and
dec
popf
jp
icebp
sub
into
lret
in
pop
ss
lret
inc
xchg
out
inc
adc
imul
xchg
pushf
fimull
fcmovnbe
lcall
outsb
sahf
xchg
ret
out
pop
cmpsb
outsb
test
push
in
lret
sbb
xor
icebp
push
loope
inc
add
cld
inc
imul
aaa
mov
inc
aad
aaa
je
in
push
sub
add
jae
popa
sbb
xchg
ja
aas
scas
xorb
gs
mov
fistps
popf
dec
mov
movsb
mov
and
cwtl
icebp
mov
pop
inc
les
sbb
sub
int3
je
sarb
adc
xchg
movsb
cmpsb
or
cltd
jae
pop
shll
mov
mov
mov
daa
pop
ljmp
dec
adc
mov
xadd
outsb
jne
rcll
mov
sub
fisubs
stc
jl
pop
loopne
pop
dec
mov
popf
jnp
xlat
mov
fdivl
imul
mov
xchg
int3
mov
cmp
stos
sub
roll
fwait
jl
stc
mov
outsl
mov
jno
es
out
inc
xchg
adc
shll
dec
push
test
pop
ds
dec
push
repz
fdivp
cs
jbe
call
and
in
aam
insl
scas
mov
int3
mov
in
lds
lea
test
cmp
nop
adc
adc
cmp
pop
pop
leave
repnz
jb
test
lods
adc
pop
scas
xor
sub
jl
jae
sti
aam
cs
xchg
sar
hlt
lret
xor
int
insl
inc
enter
cli
mov
or
shlb
ret
pushf
lods
pop
outsb
and
push
pop
shlb
inc
std
repnz
xor
stos
mov
and
out
popl
jnp
jno
mov
fcmovb
leave
or
mov
stc
lds
insb
mov
mov
loopne
and
mov
fsubr
sbb
and
sub
and
pop
sub
aaa
arpl
enter
cmp
outsb
cmp
sahf
or
lds
or
dec
or
inc
in
enter
nop
xor
pop
fidivs
fwait
mov
orl
xor
mov
test
mov
or
add
std
inc
fnstsw
push
fwait
adc
xor
xchg
jae
stos
or
clc
ss
dec
addr16
pusha
ljmp
scas
mov
movsl
mulb
in
sti
push
rcr
push
fdivs
add
int
loopne
and
arpl
aam
xchg
adc
adc
movzwl
and
ss
cmp
test
push
arpl
ret
jae
inc
cltd
pop
sub
loope
mov
cmc
test
mov
pop
push
or
lret
fs
push
stos
cltd
sub
out
jne
jecxz
pop
fcoms
mov
testl
sbb
lret
jl
pop
js
adcl
adc
ljmp
inc
negb
inc
jmp
pop
or
push
add
mov
sbb
or
xor
mov
and
xchg
insl
push
jle
mov
in
mov
add
loop
mov
and
sbb
leave
cmc
out
push
lret
mov
sub
pushf
in
test
fisubrl
in
mulb
pushf
xchg
stc
jns
aam
aad
fcoms
lock
add
std
cmp
adc
jp
outsl
jl
cwtl
loope
leave
inc
dec
fs
in
hlt
inc
insb
add
and
imul
aaa
call
mov
push
call
fistl
jp
inc
mov
repz
push
lods
addr16
nop
sbb
mov
div
mov
in
adc
stos
or
push
dec
cmp
out
inc
and
xchg
int3
xchg
add
stc
repnz
outsb
shlb
loop
ret
adc
aam
ret
repnz
in
in
popa
out
sbb
mov
dec
out
or
mov
push
bound
pop
lahf
xlat
jle
cmpsb
test
inc
and
inc
pop
stos
dec
lods
leave
cmp
pop
hlt
sub
out
add
fisubl
rcrl
ficoml
push
adc
push
sarb
std
cld
popa
push
mov
pusha
pop
cs
mov
negl
adc
cmp
icebp
add
push
adc
xor
pop
pop
or
push
nop
jo
cmp
sti
in
jge
sahf
gs
pop
jb
jg
lods
push
outsl
icebp
cli
ret
cmp
fsts
mov
pop
lcall
leave
ret
int3
sub
leave
mov
push
inc
xor
aam
outsl
xor
dec
and
dec
add
sbb
mov
cmp
rcr
iret
xchg
orb
ror
out
jl
xlat
pusha
push
test
xor
add
and
pop
jb
adc
pop
mov
jns
inc
leave
lahf
push
add
in
and
mov
pop
lods
mov
mov
mov
int3
mov
xor
inc
fisubrs
dec
sub
pop
imul
cmc
fs
fisttpll
adc
adc
subl
sub
dec
pushf
loop
mov
xchg
jmp
and
inc
push
jmp
sbb
push
and
xlat
shrb
stos
les
dec
aaa
pop
setnp
and
dec
int
nop
mov
popa
loopne
ss
cmc
jne
jno
inc
cmpsb
lock
stc
dec
mov
jnp
cmp
into
loop
dec
std
in
cwtl
imul
stc
add
pop
jne
jp
mov
xchg
and
fsubrs
dec
vmptrld
test
repz
dec
ljmp
push
imul
push
cmp
dec
mov
int3
inc
popf
lahf
jno
outsb
dec
sub
jg
jb
or
nop
pusha
add
push
push
dec
int3
jg
clc
xor
add
out
mov
add
and
xlat
xchg
adcb
aam
das
test
jne
push
icebp
mov
mov
fs
out
mov
icebp
mov
dec
aad
sti
cmp
pop
mov
and
xchg
std
xor
jns
add
adc
stos
ljmp
mov
dec
xlat
fucom
int
aas
jge
pop
mov
jno
mov
fcomip
or
popf
rcr
aaa
ret
testl
cwtl
ds
ljmp
xlat
lret
sub
xchg
bound
out
mov
jg
mov
leave
shl
mov
shlb
jge
add
inc
lcall
push
shrl
pop
sub
fwait
push
sbb
ficomps
shrl
add
jge
adc
popa
test
or
sbb
lods
loope
pop
insb
mov
out
pop
cmp
xchg
mov
mov
subb
dec
lods
les
xor
data16
xchg
sub
sbb
scas
jg
je
sub
in
or
pusha
mov
sub
adc
push
xor
enter
sbb
jbe
sbb
pop
insb
jl
mov
enter
das
rcl
test
xor
add
in
mov
sub
push
and
push
int3
hlt
adc
and
add
xchg
clc
inc
inc
sbb
punpckhwd
mov
xchg
sub
add
and
repz
dec
aam
in
mov
sbb
adc
adc
fnstcw
cmpsl
fst
push
pop
mov
mov
dec
xchg
adc
ficoml
push
mov
sub
adc
mov
lret
mov
mov
inc
adc
mov
sbb
push
scas
pop
mov
add
push
inc
stc
test
movsl
int
dec
lds
ret
push
jecxz
cmp
mov
jecxz
xchg
adc
test
adc
arpl
xlat
and
pop
xchg
test
lret
push
femms
cmpl
outsb
enter
mov
ret
adcb
mov
add
insb
jp
aaa
outsb
jl
lcall
aam
gs
add
fadds
add
jecxz
sbb
sarl
sbb
hlt
mov
mov
outsb
mov
call
jmp
nop
inc
cli
pop
mov
xchg
ret
fs
push
addl
fdivrp
test
shrl
sbb
call
push
test
std
in
sbb
xor
rclb
xchg
in
xchg
hlt
mov
nop
fsubrl
adc
cmp
and
loopne
push
ds
lahf
mov
pusha
fwait
xor
js
movsl
ss
sub
rcll
or
cmp
xchg
roll
stos
push
fsts
xchg
andb
mov
adc
pop
dec
leave
or
push
lahf
jne
fs
cmp
lods
push
sti
mov
jae
mov
mov
pop
sarl
movsl
adc
lret
dec
pop
jne
xor
jecxz
int
mov
clc
mov
jle
jmp
mov
pop
lea
aad
xchg
mov
jge
lock
dec
mov
js
aam
int3
mov
out
mov
xchg
mov
cmp
dec
jg
xor
adc
rorb
cmp
data16
jns
fs
xchg
mov
mov
add
sub
and
hlt
and
test
cmpsl
nop
and
inc
in
inc
sub
out
inc
pop
inc
int
push
orl
cmc
pop
mov
xor
push
adc
scas
cltd
mov
in
and
popa
mov
ficompl
xor
lret
shrb
xchg
loope
xchg
mov
ficoml
xchg
xor
cmp
add
out
add
add
push
sub
xchg
push
cmp
popa
leave
inc
cmc
push
add
inc
ss
jae
xchg
sarl
incb
mov
jle
imul
jns
mov
cmc
in
sub
mov
inc
xchg
sbbb
rcl
lods
mov
inc
ljmp
pop
rclb
mov
and
jmp
sbb
mov
ja
scas
cltd
push
arpl
lock
dec
lahf
cmp
or
fsubl
aaa
nop
in
xchg
xchg
shrb
jl
mov
push
rolb
pop
and
call
jnp
jecxz
pushw
adc
and
xlat
mov
jl
add
lret
add
mov
dec
mov
jg
test
and
cmpsl
xchg
mov
xchg
push
mov
ret
stos
into
fwait
dec
mov
aad
push
mov
push
and
shll
adc
in
ja
test
pop
mov
and
and
fmul
pop
sub
andl
jns
mov
inc
xor
test
test
xchg
enter
pop
push
xchg
into
pop
leave
and
or
les
andb
flds
xchg
pop
and
pusha
ret
push
es
push
fcmovnu
inc
sti
or
lahf
fdivl
icebp
mov
rorl
loopw
in
test
and
dec
xchg
sarb
loopne
jnp
sbb
dec
aam
xchg
jns
flds
cmpsl
test
pop
inc
outsb
xor
and
jmp
stos
adc
or
inc
in
fs
pop
xor
sbb
ficoms
rcrl
cmp
testl
shll
cld
aas
jo
adc
or
dec
jmp
ret
pop
pop
push
xchg
orl
iret
xor
mov
inc
mov
sarl
outsl
mov
cmc
xlat
jno
and
imull
ficoms
xchg
dec
pop
ffree
mov
neg
rolb
mov
repnz
mov
cwtl
out
in
fsubr
ret
pushl
and
and
insl
call
sbbb
xor
in
dec
mov
scas
movsl
subb
daa
or
inc
jne
in
icebp
sbb
xor
and
jno
insb
repz
jg
mov
daa
mov
dec
idivb
dec
loopne
mov
push
les
jg
lods
leave
mov
or
sub
idiv
inc
fistpll
xchg
stc
sbbb
mov
outsl
dec
sti
xchg
cwtl
movsb
loopne
ljmp
popl
jns
test
repz
into
push
push
shll
test
xchg
andb
shlb
inc
cld
clc
pop
pop
bound
xlat
push
adc
xor
cld
aad
mov
pop
in
sbb
flds
sbb
ret
xchg
jb
sahf
int3
xchg
ret
push
movsl
dec
xchg
in
push
dec
test
add
push
loope
bndstx
filds
inc
mov
fwait
push
ss
xchg
fisubrl
sub
int3
jo
fwait
push
jae
add
aam
out
jmp
out
popa
pop
jle
cmp
cld
or
shlb
push
das
fiadds
pop
fcmovnb
in
out
sub
clc
sub
push
mov
in
inc
aas
pusha
cmp
stos
mov
and
in
cmc
add
ljmp
pop
sbb
push
cmp
in
mov
sbb
mov
pop
leave
mov
push
mov
and
push
movsb
push
jne
or
loopne
ficompl
push
xor
mov
jns
mov
imul
adc
xchg
popf
and
aas
sub
jae
lods
jbe
dec
mov
ljmp
ret
aam
cmp
inc
inc
mov
mov
mov
mov
out
std
data16
xchg
dec
push
sub
mov
mov
test
add
ja
loop
adc
dec
push
and
insb
dec
idivb
cld
rorl
loope
rcl
out
out
lods
mov
pop
fwait
push
jae
into
stc
xor
clc
in
cli
sahf
mov
inc
jmp
dec
inc
pop
je
pop
sbb
sbb
jne
mov
xchg
mov
and
fwait
test
test
fldcw
and
mov
jmp
inc
imul
inc
jl
aas
adcl
inc
mov
idivl
out
push
mov
fwait
in
jmp
inc
mov
iret
sbb
ret
ret
fstl
fadd
push
aas
mov
pop
ret
lea
stos
cmpsl
or
add
and
rol
addr16
push
test
sub
sahf
adc
mov
jecxz
imul
je
or
jecxz
rdtsc
sub
inc
shll
lahf
sub
addb
push
and
cmp
dec
nop
ret
ss
xchg
dec
call
sub
mov
repnz
inc
loop
inc
shll
gs
out
push
imul
push
fldcw
pop
adc
les
aas
mov
out
mov
cmp
push
push
fldlg2
pop
cli
mov
js
sbb
scas
fstp
or
jg
fisubrl
das
mov
mov
sub
sti
js
enter
bound
pop
shlb
ficoml
mov
adc
lods
subb
inc
es
push
mov
mov
add
je
xchg
push
sti
push
pop
imul
sub
mov
lret
negb
cwtl
xlat
add
jnp
cmp
addr16
cmp
pop
lods
jp
bnd
jns
mov
inc
mov
xor
push
daa
movsl
pop
inc
add
jecxz
negb
inc
int
leave
cmp
cltd
push
adc
mov
outsl
push
add
dec
adc
ds
dec
addr16
jne
xchg
shll
xchg
cltd
add
cmp
insb
pop
push
push
aas
and
jl
pop
mov
jb
test
sbb
imul
ljmp
mov
inc
std
inc
sub
shl
pop
mov
or
push
xchg
or
mov
adc
pop
mov
iret
ljmp
lret
in
xchg
or
stc
in
inc
repnz
mov
mov
clc
jg
xor
int
sbbb
jnp
mov
cmp
mov
das
bound
xchg
cmp
rolb
lahf
jo
out
outsl
pop
mov
addb
push
jb
push
shll
fisttpll
cltd
loope
std
jns
fldt
push
lds
cmp
jmp
sub
int3
jecxz
mov
pop
mov
and
es
inc
xor
pusha
and
aad
push
rcll
vpminub
add
adc
jnp
xorl
sahf
jmp
xchg
shl
xchg
lods
aas
repnz
push
jbe
outsb
sbb
stos
xchg
aad
push
dec
sbb
jg
out
jp
sbbl
mov
mov
sub
aaa
cli
and
pop
mov
push
js
mov
jae
pop
adc
mov
enter
push
push
add
jo
and
fwait
xor
xchg
mov
in
xchg
xor
dec
jbe
shrb
stos
push
movsb
dec
cld
nop
divl
jecxz
or
push
subb
ror
push
adc
or
push
call
mov
stos
in
cmp
push
into
jae
repnz
imul
cmpsb
mov
xor
and
pop
aam
jp
sub
cmpsb
pop
push
xchg
and
xor
shlb
dec
or
add
dec
data16
repz
mov
test
dec
in
cmp
add
xor
or
outsb
xlat
sbb
cld
sub
insb
lods
mov
ds
jl
fcomi
mov
out
push
mov
int
in
mov
xchg
arpl
scas
mov
xlat
and
sub
je
out
fmuls
je
dec
lock
ss
out
lods
dec
or
jg
push
or
cmp
jg
lcall
ja
loopne
cld
mov
dec
mov
loope
mov
cmp
inc
lcall
nop
push
inc
sbb
push
dec
stos
shll
in
cmp
loop
push
push
rorl
fcmovnb
lock
xchg
dec
into
jne
aad
inc
repz
inc
testb
xor
cmp
dec
push
dec
xchg
pop
xchg
or
arpl
inc
mov
cmpsb
lods
inc
mov
push
jmp
jmp
push
fstps
aaa
lds
out
outsb
jg
ljmp
add
dec
sbb
adc
jmp
xchg
xchg
lcall
push
ljmp
pop
sbb
lods
insb
cmp
es
cmp
jnp
and
jg
in
in
imul
pusha
sub
lcall
adcb
out
sbb
mov
bound
dec
cmp
outsl
dec
add
sub
loopne
lds
dec
outsl
imul
ljmp
and
imul
sub
roll
xchg
sbb
fcomps
dec
inc
sub
out
in
adc
mov
insb
push
testl
rorl
loop
jno
xchg
mov
stc
call
mov
aaa
push
jecxz
stos
rcrl
xor
mov
pushf
insl
cmp
push
dec
inc
jns
mov
out
xchg
adcb
icebp
ljmp
les
cmp
mov
aas
pop
inc
ljmp
test
xor
dec
adcb
shlb
mov
aas
mulb
mov
inc
mov
cld
mov
mov
cmp
ret
leave
outsb
out
add
insl
jle
test
xchg
inc
je
pop
pop
mov
aad
fadds
jge
xor
push
xlat
nop
in
cmp
cmpsb
or
push
enter
lcall
out
fistps
lret
lock
xchg
cmp
daa
sub
fidivrl
xorb
nop
bound
mov
jae
adc
aas
cltd
inc
scas
add
arpl
out
push
dec
adc
xchg
sbb
xchg
xchg
sbb
into
nop
test
aad
in
sti
dec
sub
xchg
jle
les
cs
sub
cmc
sbb
rcr
cli
jo
adc
sbb
das
mov
aas
jno
shl
or
jecxz
aad
lahf
hlt
icebp
aas
lods
mov
scas
call
das
cld
arpl
addl
enter
and
fldcw
mov
int3
mov
xlat
mov
add
sbb
out
adc
sbb
and
fsubrs
shll
sbb
and
nop
lods
jnp
flds
mov
addr16
inc
outsl
imul
inc
sbb
sub
call
mov
rcll
jbe
adc
fld
mov
je
cwtl
inc
xchg
add
push
lahf
lret
lds
jnp
scas
jecxz
nop
xchg
adc
mov
xchg
insl
testb
pop
pop
inc
cmp
cmp
lods
fiaddl
mov
in
jecxz
pop
jno
int3
ret
or
jl
xor
cltd
repz
push
loope
movsl
in
and
cs
ljmp
daa
mov
out
fnstcw
mov
sub
push
jp
ret
outsl
cmp
or
fnstsw
pop
add
add
sahf
mov
repz
leave
xchg
data16
inc
cmpsb
sub
jns
adcl
pop
and
jne
js
mov
pusha
lods
push
cmp
mov
lock
mov
cmp
movsl
sbb
push
mov
cmp
testl
aas
cmp
pop
sub
sbb
aaa
sub
lahf
xor
pusha
add
mov
test
mov
xor
in
sbb
movsl
ss
aas
into
pop
add
cmpsb
xchg
out
xchg
icebp
add
cmp
imulb
pop
add
push
out
jle
mov
icebp
sti
cmp
or
mov
shrb
and
add
fsubrs
inc
int3
cmp
xchg
dec
xorb
push
jmp
scas
xor
pop
jae
mov
test
loopne
sub
loop
fsub
pop
sti
jp
in
repz
lahf
jbe
sub
xchg
in
push
mov
int3
popf
lret
push
sub
sbb
fdivl
cmpb
adcb
push
cs
rclb
stc
xor
or
add
mov
pop
cmp
and
inc
pop
mov
or
hlt
cmpsb
fisttpl
test
pop
xchg
or
add
sub
fimuls
mov
in
popa
jno
mov
clc
xlat
loop
sub
nop
jg
pop
lods
andl
sbb
jmp
aas
jb
push
dec
fwait
inc
int
gs
fdivrp
loope,pt
add
orl
dec
push
popf
ljmp
cld
xor
inc
ljmp
xchg
scas
xchg
outsb
pusha
inc
or
mov
stos
test
adc
dec
scas
adc
jns
or
addr16
sbb
sub
dec
add
shrl
out
adc
cmp
cmpsl
jecxz
cmp
in
inc
sub
xchg
icebp
and
xlat
mov
dec
cmp
pop
fidivs
shll
push
inc
inc
and
rol
mov
dec
orb
pushf
sbb
pop
icebp
fdivrl
sbb
add
sbb
aam
push
and
pop
sbb
js
ljmp
mov
add
jb
mov
push
sbb
enter
push
gs
pop
pop
mov
xlat
cmp
pop
xchg
lret
outsl
paddq
jno
sbb
lods
push
in
pop
jp
xor
mov
add
jbe
xlat
test
ds
mov
xchg
dec
loopne
jns
adc
dec
cmp
and
jo
or
incb
and
pop
popf
call
sarl
lcall
and
lds
inc
mov
shlb
mov
dec
mov
add
int3
and
jle
pop
pop
inc
scas
and
bound
fadds
pop
xor
subl
repnz
fadds
xchg
movsb
and
pop
pop
push
aad
das
mov
mov
push
cmp
sbb
mov
mull
orl
xchg
aad
nop
add
inc
mov
add
jne
enter
mov
outsb
out
mov
enter
fwait
je
test
add
mov
rcll
ds
sbb
cmpsl
mov
mov
fiadds
fdivrl
fmul
xchg
inc
and
pop
notb
push
mov
fcoml
xchg
stos
and
getsec
mov
cmp
xchg
int3
jg
add
jmp
mov
pop
push
daa
jp
outsb
or
push
cmpsl
mov
xor
or
std
les
mov
jle
jns
push
push
pop
into
sarl
aaa
out
inc
jae
pop
iret
insb
cmpsl
mov
push
out
push
sbb
add
sub
sarb
pop
sti
ljmp
push
je
inc
sbb
stos
pop
dec
js
pop
and
in
std
sti
testl
mov
sbb
inc
cmp
cmp
xchg
pop
jno
imul
lahf
mov
mov
add
sti
mov
es
sub
das
pop
pushf
outsb
adc
jae
push
popa
daa
jnp
sbb
das
jl
sub
cli
pop
cwtl
adc
test
add
xor
push
ficomps
repz
mov
lret
mov
push
dec
loop
sbb
fdivl
int3
mov
lea
jl
inc
xor
lea
daa
fdivl
mov
jbe
jp
cmp
adc
shlb
fimull
jge
push
divl
inc
ret
inc
adc
ljmp
addb
je
cld
push
loopne
mov
insl
xorl
or
subl
mov
mov
repz
aad
aad
mov
jg
mov
sti
and
and
sbb
or
insb
shl
sti
dec
add
sahf
loop
add
test
sub
inc
shll
and
push
ucomiss
xchg
repnz
cmp
insb
mov
pop
lock
adc
pop
pop
inc
test
test
push
ror
adc
mov
std
fldcw
repz
cmp
shrl
inc
orb
in
out
inc
sbb
js
data16
jg
icebp
rolb
lods
push
adc
lcall
scas
jne
mov
and
dec
and
sbb
jae
mov
int3
pop
pop
add
xor
pop
push
lret
gs
push
ret
stos
or
push
jle
cmc
fstps
cmc
fiaddl
jae
pop
inc
or
xchg
add
mov
xchg
mov
xchg
es
cmp
js
xor
das
js
and
dec
pcmpeqd
loopne
add
sbb
int3
jae
mov
scas
push
in
add
in
xchg
cmc
scas
ret
pushf
ds
cmp
fdivrl
jno
stos
rcl
pop
mov
mov
repz
lahf
std
cltd
adc
pop
ljmp
mov
cmpsl
icebp
lret
adc
loop
dec
cmovno
in
int3
push
in
mov
sub
mov
int3
ljmp
push
daa
aas
sub
testl
adc
jns
push
cli
loop
cltd
lcall
ljmp
jb
mov
call
add
mov
out
movsb
add
adc
shll
dec
xlat
mov
iret
arpl
pop
sbbb
pop
popf
std
xor
jg
shrl
sti
adc
jle
in
shrl
repz
adc
xchg
mov
out
ja
bswap
fistpl
pop
or
sub
push
xchg
js
incl
inc
je
cmpsl
adc
dec
mov
jp
shlb
sub
js
jp
iret
xchg
jne
push
lds
icebp
je
push
jb
into
mov
add
mov
dec
int3
sub
pusha
and
xor
dec
shlb
stc
nop
fsubr
jg
mov
jl
orb
mov
mov
xchg
inc
pop
fiadds
cwtl
sbb
fwait
out
jmp
sbb
scas
test
ficoms
icebp
aad
cmpb
sti
add
and
add
mov
and
rorb
add
jl
xchg
add
icebp
ret
out
xchg
imul
in
arpl
addr16
jno
xor
xor
int
jmp
stc
cmp
dec
add
inc
or
ja
pop
push
fldpi
cmp
lock
jp
push
inc
repnz
inc
or
stos
pop
call
jl
test
out
adc
mov
push
sub
lcall
sub
dec
xchg
push
scas
xor
cmp
push
adc
jl
sub
cmp
xor
adc
outsb
dec
add
xchg
mov
cwtl
fdivrs
xchg
mov
insl
xchg
jb
jg
dec
jno
ja
test
fstps
shlb
orb
mov
ja
sub
mov
xchg
pop
inc
mov
or
fstpl
outsb
xchg
xor
nop
xchg
fdivr
jne
or
inc
xor
in
outsl
dec
fcoml
pop
loop
sub
mov
lret
push
adc
push
pop
rorb
gs
sbb
push
xchg
js
popf
mov
and
inc
pop
cmpsb
and
rolb
cmpsl
stos
mov
out
out
xor
arpl
push
bound
mov
add
out
xor
repz
cltd
dec
or
imul
mov
sub
mov
cmpsb
mul
rolb
push
lea
fucomi
mov
in
add
jnp
pop
rclb
and
loopne
pop
popa
add
and
or
pop
mov
pop
int3
pop
inc
bound
out
pushf
jp
fisttps
jbe
pop
mov
and
call
sub
addl
lock
aam
lcall
fwait
ja
inc
push
adc
or
push
jg
mov
inc
mov
movb
lods
stc
loop
lds
jns
les
roll
mov
mov
ret
roll
mov
nop
sub
xchg
adc
fimull
dec
pop
mov
inc
out
andl
les
jne
sub
adc
fnsave
cmc
or
adc
lcall
xlat
push
xchg
ret
sub
int3
and
xchg
pop
cmp
sti
shrb
jp
inc
and
stos
add
adc
insl
int
or
cli
sbb
and
data16
popf
adc
add
fmuls
mov
loop
ficoms
xor
pop
mov
lods
dec
push
adcl
jle
mov
add
or
sbb
inc
ds
imul
xor
mov
adc
int
in
testl
paddd
or
and
pop
adc
and
inc
adc
and
mov
jle
dec
mov
xchg
dec
mov
in
js
sub
ljmp
xchg
xor
pop
pop
xchg
add
out
inc
mov
movl
sarb
ljmp
pop
add
inc
jae
in
enter
rcll
loope
shlb
jb
mov
or
sub
mov
xor
dec
negb
nop
fimull
loopne
insb
cltd
sbbl
pushf
jmp
or
jl
inc
mov
mov
xor
mov
xchg
fcmovbe
dec
mov
mov
and
cmp
lea
sbb
jno
pop
mov
add
loopne
mul
test
cmpsl
cmp
lea
push
gs
ss
enter
jle
int3
fs
xor
pushf
sbb
rcr
je
cmp
jo
fs
mov
push
mov
orl
insb
push
cmpsb
fistpl
popf
adc
push
lock
jno
mov
cmpb
pop
loopne
mov
mov
mov
mov
ret
sbb
repnz
dec
mov
js
test
mov
sbb
xor
fcompl
cld
insl
jno
mov
pop
jns
jle
push
cs
cmpsb
cltd
xchg
add
test
cmpsl
jae
sbb
pop
daa
push
pop
dec
aad
loop
add
jge
sbb
pop
sbb
ds
and
add
cmp
pop
mov
mov
push
ret
jae
jl
mov
jmp
sbb
jo
loop
shlb
shrb
mov
xor
mov
sub
imul
icebp
adc
roll
mov
mov
leave
sub
popa
fldt
jecxz
add
std
inc
aaa
addr16
inc
dec
jge
sbb
ja
or
jo,pt
gs
lods
xlat
daa
and
push
lods
push
push
fstpt
cmp
jl
ss
cmp
rorb
ret
sti
cld
pop
jne
hlt
test
in
sub
out
mov
cmp
sub
repnz
rorb
adc
cs
push
lock
loopne
xor
or
pop
pop
imul
ret
adc
jns,pt
cmp
mov
mov
stos
inc
fstpt
test
jg
jg
jmp
lods
xchg
not
andl
or
movsb
int3
jg
inc
bound
sbb
frstor
push
or
mov
pop
sbbl
jno
out
sbbb
mov
sub
loopne
push
lahf
sbb
xchg
sub
and
inc
pop
rorl
mov
cmpl
and
scas
jge
mov
xlat
add
jp
cmpsl
inc
xor
xchg
xchg
add
gs
pushf
test
add
test
and
cs
add
and
aad
jmp
imul
punpckhbw
pop
mov
jo
mov
mov
sbb
or
push
cmp
in
push
mov
incb
mov
add
push
stos
dec
in
xchg
dec
ret
add
pop
mov
testl
sub
adc
sahf
dec
add
cmp
pop
sbb
cwtl
lock
mov
sbb
js
dec
rclb
jmp
cmp
in
xchg
mov
pop
hlt
inc
fstl
subl
lcall
cmpsb
jne,pn
cmp
pop
xchg
stos
aaa
loope
imul
sub
in
aam
add
xor
pop
sahf
add
or
aas
xor
add
jmp
sub
shr
sarb
ljmp
jno
out
clc
iret
xchg
daa
test
push
cmp
push
mov
lret
dec
pop
push
xchg
roll
shlb
adc
out
stos
xchg
std
aam
loope
imul
popa
arpl
sbb
out
ja
push
stc
push
mov
and
stos
or
sbb
inc
outsl
xchg
insl
cmp
je
mov
and
addr16
add
cmpsl
test
xchg
cmp
sbb
fiaddl
fstp
mov
mov
aad
lret
add
or
cmp
pusha
test
push
nop
push
rcll
xchg
fisubl
adc
push
add
cmp
roll
stos
mov
push
mov
and
idivb
mov
aas
and
xchg
mov
mov
enter
cltd
sbb
add
cmpsb
clc
inc
stos
lds
xor
jne
push
rcll
adc
push
and
popf
inc
enter
out
loope
insl
popa
ret
popf
repnz
mov
dec
inc
xor
mov
leave
dec
nop
push
iret
xchg
leave
add
enter
xor
lahf
sbb
adcb
sbb
shrl
adc
imul
lret
jne
cmp
push
lds
pusha
or
mov
push
xchg
test
mov
xchg
jmp
hlt
leave
sbb
int
push
in
xlat
xchg
mov
push
mov
addr16
clc
jl
je
daa
lds
pop
lds
in
or
lret
adc
mov
or
test
pop
or
ja
xlat
or
or
ja
shlb
sub
je
mov
add
inc
jmp
hlt
push
js
loopne
jne
inc
push
xchg
inc
jno
pushf
scas
or
adc
loope
shll
outsb
dec
aas
jno
sbb
lock
pop
arpl
scas
sub
xchg
jnp
pop
int3
jbe
mov
mov
mov
dec
push
int3
jge
stc
lret
mov
or
cli
leave
outsb
and
repnz
out
jmp
shrl
loopne
xorl
pop
mov
pop
xchg
in
or
arpl
test
xchg
mov
in
rcl
scas
and
outsl
xor
fildl
mov
jb
lods
mov
cld
mov
cmpsl
stc
pushf
ljmp
adc
mov
mov
and
push
inc
fisttps
popa
mov
ret
adc
fldl2t
pop
pop
sub
xbegin
sbb
outsb
dec
adc
aam
xchg
mov
minps
test
sbb
jp
mov
pop
and
jp
push
add
and
test
notl
aaa
in
jle
mov
movsl
cmp
mov
jb
addl
mov
mov
cld
xchg
inc
cmp
hlt
ret
adc
jmp
xchg
movsl
mov
push
ljmp
out
stc
fs
mov
les
das
mov
inc
xchg
lret
loop
rcll
or
xlat
outsb
sub
loope
dec
cs
popa
adc
adc
jnp
dec
mov
pop
cmpl
out
jb
and
leave
rcl
inc
mov
sbb
push
rcrl
fadds
sub
push
outsl
xor
mov
filds
xchg
push
sub
pop
push
fisttps
adc
jg
mov
ss
cmp
mov
divb
push
mov
push
iret
and
mov
ljmp
pop
fldenv
addl
sbb
into
es
sbb
outsl
mov
fstpt
sub
sub
xchg
inc
arpl
loop
lods
data16
je
ds
test
shll
popl
rorb
test
icebp
jns
inc
mov
cmp
cmc
sti
pop
ficomps
cli
sub
sub
sbb
rolb
add
inc
lods
ret
dec
gs
test
repz
jbe
adc
pop
cs
xchg
or
jne
arpl
popa
out
xor
mov
sub
mov
add
inc
add
adc
ja
pop
mov
sbb
imul
push
bound
in
inc
pop
bound
in
jmp
xchg
adc
xchg
mov
xor
add
pop
aas
repz
int3
stos
pop
sti
stos
mov
scas
imul
setle
xchg
xchg
call
or
adc
or
lock
add
cmpsl
rcll
repnz
cmp
cmp
or
sub
sub
sub
jmp
mov
mov
add
cwtl
mov
nop
sub
dec
sbb
pop
icebp
pop
mov
sbb
cld
cli
push
mov
adc
shrb
mov
shrb
cmp
jbe
xor
adc
add
push
nop
adc
movb
mov
lcall
outsl
loopne
stc
dec
push
cmp
mov
into
filds
out
or
in
inc
addr16
lods
xchg
add
jl
lds
inc
outsb
mov
ficomps
sbb
xchg
mov
rcrl
jle
inc
lds
cmpsl
mov
fildl
shl
fadd
jae
inc
mov
push
push
pop
mov
into
push
dec
add
es
cmp
xchg
inc
cmpsb
xor
jo
ret
test
xchg
shr
and
sarl
imul
and
cltd
cs
push
scas
xor
dec
dec
mov
jo
cwtl
scas
jmp
adc
int
and
sub
jg
lock
fistpll
dec
mov
mov
xor
outsb
dec
add
fistpll
adc
inc
or
es
xor
loopne
dec
mov
shlb
push
xorl
jmp
or
sbb
add
aam
xchg
pop
cmpsl
and
std
jb
pop
lods
add
add
push
cmp
js
movsb
adc
movsb
xlat
fisubs
and
sbb
inc
pop
idivb
add
negb
insb
jmp
jb,pt
jbe
jae
loope
mov
jmp
dec
xchg
fdivr
add
movsb
dec
inc
insw
out
cwtl
repz
add
inc
repnz
loopne
cmpsb
xchg
cmp
lret
pop
lret
divl
dec
out
xchg
or
push
insb
cmp
sub
xchg
lea
js
jns
mov
pusha
ss
mov
adc
dec
arpl
mov
fwait
or
jns
sbb
pop
jno
pop
data16
and
cmp
xchg
pop
loop
xchg
outsb
xchg
mov
mov
jae
lods
dec
mov
loopne
xor
shl
popa
jae
xor
dec
imul
into
sbb
cmp
mov
sub
scas
mov
pop
dec
arpl
out
sub
xor
mov
arpl
or
aad
movsl
push
mov
into
xor
pusha
cli
mov
lret
cltd
out
insb
aaa
jecxz
frstor
or
cli
xor
xor
ds
outsl
mov
xor
sbb
fs
sub
cmp
xchg
in
mov
fwait
adc
sub
add
aas
fdivrl
orb
mov
lahf
pop
and
xchg
std
jno
sbb
and
xchg
cwtl
cmpsb
xor
sub
fistl
testl
mov
insb
loope
xor
aam
push
mov
xor
xor
call
out
movsl
inc
push
and
cs
or
in
test
cld
sub
cmp
lret
xchg
or
std
dec
in
fildl
insl
sarl
lods
aaa
je
mov
and
xor
push
inc
leave
dec
mov
sti
rcrl
xlat
sub
idiv
jno
pop
and
mov
or
cmp
jb
fldz
inc
inc
ss
rclb
mov
aas
and
or
and
rcll
push
dec
daa
iret
shll
sub
mov
cmp
pop
je
mov
cli
lret
cli
sub
dec
test
xor
mov
das
mov
dec
adc
jecxz
imul
into
out
js
xor
mov
shrb
sahf
inc
sub
xchg
in
push
mov
mov
inc
cmp
test
jno
cmc
das
clc
jl
sub
push
por
inc
dec
dec
mov
jl
fcmovu
shr
and
cmp
std
xchg
das
sbb
mov
in
jge
icebp
sub
pushf
popf
sete
ljmp
mov
push
popa
xlat
sbb
pop
aam
pushf
xchg
loope
pop
pmaxub
inc
imul
cltd
pop
and
arpl
adc
pop
inc
out
add
mov
dec
inc
daa
idivl
mov
shrb
sub
fmul
or
sti
mov
push
xchg
stc
ret
dec
ret
cmc
das
dec
ret
push
adc
in
or
stos
adc
ret
jo
aam
cmp
in
mov
push
in
in
xor
push
popf
ja
jns
lods
aas
ja
mov
sysenter
pop
adc
adc
aaa
jmp
enter
lods
push
or
fwait
lea
outsl
repz
jne
lcall
jno
lahf
jge
sbb
push
mov
inc
sbb
push
nop
jl
mov
dec
insl
ds
mov
fidivl
aam
shlb
pop
leave
mov
icebp
inc
shrl
push
nop
sub
in
and
outsb
sub
hlt
mov
mov
fadds
jb
mov
test
jns
inc
mov
xor
in
std
add
and
test
movl
loopne
jle
orl
jge
ret
mov
jb
mov
adc
mov
push
ret
test
cs
fnstenv
test
in
xchg
lcall
dec
mov
aam
jp
int3
popa
inc
jbe
sbb
test
inc
mov
adc
mov
ret
lcall
xlat
pop
add
imul
outsl
imul
pop
jo
stc
jns
lret
popf
in
out
fwait
popf
out
bound
mov
add
fwait
adc
loop
push
inc
mov
bound
hlt
jl
ficompl
adc
fbstp
loopne
fidivrl
mov
or
sbb
stc
stc
jmp
mov
fstl
lea
add
fisttpl
ret
shlb
or
data16
adc
aas
pop
jle
stos
les
scas
mov
push
das
push
rolb
andl
sbb
cmp
push
cs
pop
lret
lahf
inc
out
divb
add
xor
lret
test
or
shl
loop
cmc
addb
movsb
aad
mov
lret
ljmp
jge
inc
addr16
xchg
rcrb
mov
dec
add
lock
sar
repz
inc
in
push
dec
inc
adc
pop
in
sub
mov
aad
mov
in
mov
jp
cmp
pop
cwtl
mov
and
inc
dec
sub
lods
adc
cmpsb
cld
mov
xor
mov
fsubl
aad
lret
sbb
jl
jo
in
mov
dec
scas
ja
in
pusha
in
dec
push
test
inc
psrad
mov
sbb
lret
jo
in
pusha
fwait
inc
or
inc
sarl
pop
cmc
adc
mull
aad
outsb
mov
lea
xlat
sbb
sub
inc
cmp
fidivrs
inc
je
pop
ret
movsb
int
push
xchg
push
les
test
mov
outsl
or
inc
mov
cld
lcall
test
repnz
sbb
push
mov
clc
je
lret
out
jg
inc
clc
mov
inc
stos
push
into
jg
adc
mov
mov
push
mov
not
aad
lds
dec
nop
in
sbb
push
mov
or
shll
inc
add
sub
dec
adc
xor
push
icebp
push
shr
icebp
dec
ljmp
andb
mov
adcb
jecxz
and
shl
xor
pop
in
and
and
outsl
cwtl
and
dec
movsb
jmp
insl
out
mov
push
fisubl
mov
es
cs
add
fnstcw
push
mov
mov
test
mov
mov
test
mov
xor
push
in
mov
fs
inc
mov
loope
mov
jmp
mov
push
add
leave
jl
adc
adc
adc
pop
mov
lahf
jp
and
aaa
pop
or
into
sbb
outsl
lcall
push
adc
lea
js
mov
je
dec
jb
fldl
adcb
xchg
imul
lea
sub
mov
jns
andb
bound
shrd
xchg
arpl
jmp
fmulp
jb
xchg
orl
jl
mov
pop
xchg
push
movsl
dec
dec
cmp
out
lret
fdivrl
push
push
repnz
rcrb
lods
lret
das
mov
scas
aam
insl
xchg
cmp
cmp
lods
mov
bnd
lret
or
push
ljmp
repz
xor
rcl
mov
sub
xchg
jo
jb
pop
out
adc
insl
popa
push
movsl
lret
sbb
push
lret
test
xor
cmp
and
push
imul
pop
sbbb
in
sbb
inc
imul
pop
cmp
push
fs
popf
bound
cmc
sbb
roll
dec
loop
push
jnp
rclb
cmp
or
xor
cmp
subb
inc
or
or
xchg
int
jbe
loop
xlat
ret
xlat
push
psadbw
or
xchg
pop
push
pop
and
inc
aaa
cmp
cmp
lret
push
divb
mov
xor
add
jl
cmpsb
sahf
pop
mov
lock
arpl
shll
pushf
lret
or
sub
and
push
out
pusha
mov
and
push
rep
push
js
out
inc
jmp
loop
imul
mov
ss
jge
adc
add
mov
and
dec
pop
out
xor
pop
jle
xchg
push
aaa
lods
ficoml
pop
lods
lock
jbe
and
mov
fldenv
testl
popa
inc
or
cwtl
add
in
mov
mov
orb
cwtl
ja
ljmp
fidivl
cmp
cmp
in
test
and
jle
icebp
add
fldt
xor
xor
adc
popl
pop
xchg
mov
or
outsb
mov
popa
jno
test
inc
mov
or
flds
mov
xlat
xchg
stc
insl
sbb
pop
push
mov
in
push
daa
decb
out
mov
cmpsl
notrack
push
add
cmc
jmp
mov
add
cmc
add
inc
push
or
adcl
jnp
inc
addr16
fsubr
pop
dec
jp
sbb
loop
adc
test
into
testl
jae
rorb
lods
mov
rclb
cwtl
add
jne
push
mov
or
cmp
inc
xor
mov
ret
int3
add
aad
dec
xlat
movsb
push
mov
repnz
jmp
mov
or
mov
mov
mov
cmc
cmp
jge
jns
int
scas
mov
rclb
lods
inc
and
inc
jg
sbb
push
cli
jg
push
jp
inc
insb
xor
test
popa
adc
mov
jo
xor
sbb
lock
add
test
shlb
or
jge
aad
sarl
mov
scas
pop
sub
push
pushf
fs
mov
sti
cmp
ss
repnz
pop
gs
push
in
xor
ja
stos
leave
enter
mov
pusha
cmp
fiaddl
enter
jb
sub
jb
dec
push
stc
movlps
sbb
push
stc
gs
aam
fwait
push
fisubrl
clc
push
fdivp
push
clc
jg
jnp
and
mov
push
jp
das
subl
sbb
mov
add
je
xchg
sub
jns
fmull
scas
fcomps
dec
aam
cmc
push
and
cmp
js
fdivl
out
xchg
and
das
sbb
enter
in
fbld
loope
iret
xor
repnz
addl
ret
add
lret
mov
bswap
incb
loop
ljmp
ss
mov
in
int3
dec
add
fwait
sahf
or
jl
and
cmp
push
push
and
repnz
js
cs
int
imul
and
leave
dec
jnp
mov
lret
ds
push
add
dec
sub
fidivrs
das
sarb
les
sub
lds
repz
pop
cwtl
aam
mov
cmovg
ja
fsubp
add
and
cmpsl
stos
xchg
jno
dec
in
xchg
mov
fmull
out
pop
pop
sub
pop
mov
pop
sub
stc
xchg
lret
loope
repz
mov
push
push
adc
and
cwtl
mov
movsl
sub
push
loope
data16
fcompl
add
dec
into
add
jg
addr16
sub
pop
push
and
insb
mov
fdivrs
sub
sub
push
ja
sarl
fs
enter
and
aaa
adc
mov
xor
adc
dec
jle
imul
jo
sub
test
mov
enter
xchg
jecxz
out
and
orb
add
clc
imul
dec
ljmp
add
mov
mov
test
imul
and
dec
fucom
hlt
mov
lock
ret
lret
fsts
dec
push
dec
maxps
xchg
jno
adc
sbb
fdivrl
mov
push
movsb
xlat
out
sbb
jns
negl
loopne
push
mov
inc
fsubr
pop
popa
mov
sub
cld
jne
mov
popaw
push
xchg
lods
dec
push
out
mulb
out
sbb
gs
push
aam
add
inc
fsubrp
pop
aad
jg
push
add
mov
lret
jo
dec
mov
and
sti
int3
sub
sti
pop
cmpsl
loop
jns
sbb
xchg
cmp
xchg
out
inc
pop
jno
sub
das
lock
inc
mov
mov
out
cmpsb
adc
sub
add
or
jmp
sub
push
in
test
std
pop
stos
ds
inc
inc
sarl
rclb
sarl
loop
out
mov
inc
xorl
add
mov
sub
xchg
dec
push
sub
ret
jecxz
inc
std
dec
testl
in
icebp
push
aad
daa
add
sti
cs
xchg
pop
inc
push
arpl
sbb
pop
sbb
mov
es
mov
xchg
scas
hlt
aam
pusha
sub
mov
scas
enter
fwait
xor
subl
mov
mov
mov
testb
jle
xor
movsb
xchg
pushf
mov
movsl
rcl
cmp
inc
pop
aaa
cltd
lahf
xchg
inc
push
xchg
clc
xor
lret
faddl
rcrl
cmpsl
sbb
or
out
mov
mov
pop
mov
sbb
xchg
loope
push
adc
mov
testb
pop
mov
int3
lea
add
cmpsb
push
aaa
xchg
cmp
ret
repz
jno
push
insb
pop
adc
or
outsl
inc
insl
adc
inc
aaa
lret
fbld
xchg
enter
inc
test
out
mov
add
jl
push
test
mov
in
and
mov
adc
mov
scas
movsl
lret
cmp
sub
push
xchg
inc
out
dec
dec
js
adc
sub
leave
mov
mov
sub
lods
mov
popa
xor
mov
add
xor
jae
jo
rorb
imul
scas
fs
adc
std
out
cld
mov
clc
or
flds
pop
imul
mov
pop
sbb
pop
mov
push
sub
rcll
jge
out
dec
xor
repz
dec
push
lret
in
outsl
mov
fsubl
int3
outsb
pop
cmpsl
jno
sub
outsl
clc
std
add
and
loope
push
push
test
addr16
loope
cmp
inc
sbb
test
and
xor
outsb
and
jmp
pop
into
push
insb
jae
roll
int
mov
xchg
leave
rolb
ja
xor
divl
mov
push
loopne
fldenv
mov
xchg
lret
lock
ficompl
sub
in
test
sarl
cmc
mov
ficomps
push
sti
imul
xorb
neg
cmpsb
imul
pop
or
mov
cmp
insb
add
int
pop
push
jecxz
ds
test
test
in
jne
les
dec
fwait
xchg
test
out
jae
addr16
movsb
fxch
dec
push
outsl
test
popa
cmp
and
cli
dec
mov
xchg
repnz
sbb
fnstcw
adc
fucomp
jo
xchg
test
pop
dec
orl
jmp
cmp
cmp
aaa
mov
mov
pushf
push
xor
movsl
sahf
shlb
mov
je
call
jmp
cmp
mov
mov
insl
scas
lock
xor
imul
push
lods
xchg
jne,pn
fnstcw
lahf
or
ds
inc
push
popa
and
fwait
lock
xchg
pop
dec
jp
xchg
lret
in
bound
mov
add
jl
es
jp
sub
test
dec
push
ljmp
daa
dec
jnp
cmp
sbb
bound
repz
pushf
test
arpl
bound
push
sub
int3
rcrl
lods
jmp
jo
or
arpl
or
out
jb
add
inc
and
or
dec
sub
iret
mov
mov
les
mov
aam
es
dec
data16
cld
inc
pop
popa
into
in
xchg
into
ret
xchg
adc
ret
pop
ja
aad
sub
rcll
sbb
shlb
jmp
fcom
hlt
in
add
ret
dec
mov
movsb
adc
pop
mov
and
stos
jmp
mov
and
sub
hlt
repnz
sbb
lods
stc
cmpsb
jno
int3
in
outsl
adc
cmpsb
shlb
mov
push
push
leave
pop
cmp
jae
adcl
xchg
lcall
test
es
and
add
and
cmpsl
mov
insb
in
cwtl
push
xchg
inc
ja
sti
aad
rcll
or
push
sub
and
data16
dec
mov
popf
lods
movsb
cmp
cld
shl
adc
and
nop
les
jl
dec
inc
adc
cmp
pop
push
cwtl
or
xor
int3
add
lret
xchg
mov
xchg
mov
popf
push
sub
sti
fldcw
jle
ret
and
pop
pushf
imul
ficoml
and
into
jmp
adc
ss
clc
aam
jbe
xchg
cwtl
push
enter
shl
push
mov
pusha
or
cmp
lret
das
pusha
xor
pushf
xor
jno
cmpsl
xor
and
test
imul
cld
les
jmp
popa
pop
ficomps
mov
stos
decl
pop
arpl
jmp
inc
test
cmp
dec
lea
sub
leave
cs
int
repz
in
subl
mov
stc
scas
aam
hlt
sub
stos
ljmp
xor
lock
mov
lds
hlt
divb
adc
pop
sbb
mov
jbe
mov
jl
imul
xchg
dec
xchg
pusha
clc
pop
jecxz
das
enter
lcall
loope
loop
out
mov
fld
mov
inc
sarb
bound
cmp
cli
and
je
roll
sbb
rcr
mov
outsl
push
mov
cmpb
push
nop
mov
js
xor
add
mov
inc
in
hlt
push
jge
andl
hlt
rol
jmp
cmp
jmp
call
and
in
sti
scas
xchg
push
add
xchg
rolb
mov
push
push
int3
or
cmpsb
and
ds
mov
adc
push
cmp
enter
sbb
ds
stc
add
inc
daa
stos
mov
fcoms
addb
xor
mov
ret
outsb
out
sar
ljmp
xchg
push
xchg
inc
cwtl
mov
xor
repz
fiaddl
pop
rol
inc
adc
adc
roll
lods
pop
movsb
leave
dec
lcall
std
stos
int
inc
xchg
mov
insl
xchg
xor
mov
pop
subb
fdivrl
adc
sarb
sbb
enter
jae
cmc
adc
mov
hlt
popf
jg
jno
mov
add
xor
dec
daa
mov
imul
dec
in
sub
dec
jae
sbb
add
out
or
xchg
or
andb
dec
fs
ja
je
stos
test
dec
sbb
push
cmp
or
lds
or
sbb
out
dec
leave
ret
fwait
loope
in
add
xor
into
mov
cltd
fildll
out
xor
cmp
adc
fstp
pop
xor
jne
mov
jnp
fildl
jbe
fwait
clc
inc
test
mov
and
loopne
enter
add
imul
lea
icebp
xchg
repnz
add
cmp
jne
in
push
in
test
js
or
xchg
mov
lods
shr
xor
dec
out
sahf
jno
and
cli
test
jp
out
scas
out
loope
pop
les
xchg
call
in
cld
rcrl
sahf
in
popf
mov
push
int3
jb
or
imul
nop
arpl
shl
push
ljmp
xor
cmp
jne
fcomps
cmp
mov
sbb
movsl
dec
cmp
inc
xchg
mov
inc
into
mov
pop
mov
iret
add
cmpb
and
sarb
std
pop
test
add
sete
and
sub
imul
cmpsl
xchg
mov
dec
and
int
pop
test
push
ss
fs
jl
pushf
in
repnz
push
fs
cmp
sahf
into
fdivrs
inc
pop
mov
maxps
outsb
add
nop
mov
and
out
popa
dec
inc
nop
call
xor
push
decb
adc
cmc
push
cltd
mov
test
arpl
imul
es
ret
andl
enterw
loope
xchg
cmp
lret
repz
popa
jns
pop
test
mov
daa
inc
iret
sti
xchg
lods
popa
fwait
jne
and
push
loop
sub
sarb
and
mov
pop
pusha
andnps
mov
adc
stos
int
loop
jle
xor
andl
xor
je
lea
ss
popa
lret
out
fimuls
test
lods
aad
add
add
jno
jnp
int3
add
mov
or
out
fwait
sub
iret
ficoms
sti
test
mov
inc
fcmovu
and
push
and
sbb
mov
mov
and
shlb
cmp
scas
movsb
lods
mov
imul
xchg
repz
scas
test
scas
xchg
push
push
sub
std
enter
pop
pop
pop
or
fsubr
cmpsl
dec
lods
add
repz
inc
push
sub
andb
jle
xchg
push
mov
mov
ret
sti
fistpl
xor
mov
fistps
aas
mov
sbb
clc
dec
ds
or
call
push
pop
adc
aad
and
lods
sbb
lahf
aad
lock
xor
jbe
pusha
or
sbb
push
ja
push
push
cli
adc
sbb
dec
mov
mov
rclb
or
in
imul
jne
inc
add
add
mov
imul
pop
lahf
cmp
fdivl
pop
jae
imul
pushf
rcrl
or
lods
pop
and
out
out
xchg
sbb
mov
sub
leave
cmpsl
icebp
pop
xor
add
aam
mov
xchg
adc
sarl
bnd
xlat
cmpb
or
xchg
push
xchg
xchg
jge
int
pop
inc
jp
sub
cmp
xchg
arpl
bound
xchg
mov
cli
pop
pop
dec
dec
pop
dec
or
bnd
cli
inc
loopne
pop
out
dec
xchg
inc
hlt
lock
ds
cli
sbb
imulb
add
call
and
mov
test
cmp
pop
addl
xchg
ss
sti
xor
sub
in
outsb
push
and
cmp
dec
push
call
stos
cmp
xchg
inc
fmul
sbb
push
push
mov
cld
scas
mov
xchg
test
dec
pushf
cmpsl
and
add
sbb
pop
loopw
push
mov
add
into
hlt
movsb
xor
les
cmpsb
cmp
es
lds
imul
rol
inc
jno
pop
es
arpl
mov
jecxz
jbe
cwtl
das
jecxz
pop
cbtw
adc
adc
lahf
sbb
cmpsl
xor
movsl
mov
pavgw
or
add
mov
xchg
mov
enter
xchg
add
push
dec
enter
daa
insl
loop
push
sbb
scas
jp
jecxz
ja
jecxz
mov
jp
pop
scas
push
xor
or
nop
ret
imul
xchg
int
ret
mov
in
add
and
hlt
push
ret
test
push
or
pop
out
stc
push
pop
lcall
in
push
xchg
mov
cmp
inc
xchg
jo
jecxz
nop
dec
test
xchg
mov
xor
push
in
mov
fmul
popf
pusha
push
jno
mov
mov
pop
or
mov
inc
ret
aaa
xor
adc
lods
lock
fistpll
cmp
push
push
rorb
out
fdivs
test
mov
sbb
or
rorb
mov
jl
cltd
iret
arpl
xchg
mov
sbb
fdivrl
daa
out
cwtl
cmp
xchg
xchg
stos
loop
push
and
pop
shll
shl
xchg
mov
sbb
pop
cmp
xchg
notb
push
fnsave
insb
addr16
adc
cmc
cmp
fsubrl
cmp
push
xorl
daa
cmpsb
les
aas
mov
jecxz
vmovups
mov
sti
push
dec
pop
mov
inc
jbe
mov
push
jb
add
cmp
add
mov
cmpsb
mov
cmp
cmp
lods
add
inc
shrb
xor
sbb
out
repz
mov
adc
cmp
pop
jb
cmp
add
add
out
mov
rcr
mov
fwait
jo
mov
jle
push
xchg
xor
fsubs
int3
or
or
je
scas
inc
gs
xor
add
xlat
hlt
bound
mov
inc
or
outsb
jae
dec
subl
ror
cmp
pop
push
stos
jmp
pop
mov
pop
cs
and
test
or
lahf
out
xchg
pop
inc
outsb
jno
sti
sub
iret
cmp
sar
cmpsb
xor
sahf
xor
bound
cld
xor
wbinvd
and
outsb
aad
mov
sbb
dec
and
pop
push
nop
add
nop
mov
sbb
add
rcrb
int3
mov
pop
fcoml
iret
push
repnz
fistps
adc
xor
scas
int
adcb
arpl
and
xchg
std
sti
push
sbb
pushf
fnstsw
and
mov
dec
mov
jg
mov
xchg
add
repz
inc
add
add
xor
orl
je
and
pop
pushf
rolb
sbb
jbe
lret
out
push
sbb
fnstenv
lea
sbb
enter
gs
arpl
int3
or
sbb
leave
mov
ja
out
sbbb
push
jne
sbb
dec
mov
mov
in
add
adc
fnstsw
xor
sbbl
cmp
mov
in
mov
repz
pop
mov
shll
arpl
rclb
cli
mov
jae
int
sbb
sub
pop
fsub
or
fdiv
js
cli
sub
sub
sub
and
jns
dec
pop
lcall
mov
dec
aaa
imul
dec
jg
xor
inc
mov
inc
ss
mov
orl
and
dec
addr16
or
push
xchg
and
ja
stos
stc
nop
jge
dec
hlt
sbb
icebp
pop
loope
arpl
pushf
pusha
push
sahf
pop
mov
mov
mov
in
push
xor
ss
mov
enter
outsl
repnz
jmp
les
mov
into
insl
mov
sub
aas
pop
addl
sbb
jp
aad
pop
mov
mov
mov
cwtl
lea
jl
or
enter
cmp
aas
sti
jno
popa
sbbb
cmpsl
hlt
iret
in
cmp
sbb
inc
shrl
pop
gs
fcompl
test
sbb
cmp
jle
inc
mov
stos
scas
dec
popf
push
insb
test
inc
aad
xor
inc
fidivrl
out
int3
bnd
mov
lds
fucom
sub
aaa
loop
rol
jle
push
lea
int
je
push
push
cmp
orl
repz
xchg
js
clc
mov
jnp
sub
and
sbb
push
xchg
add
sub
sbb
notb
cmp
pop
xor
sahf
add
mov
inc
add
pop
in
xor
cltd
hlt
scas
push
xchg
fidivrl
push
daa
es
arpl
pop
sbb
test
das
cwtl
push
push
push
movups
mov
cmpsb
dec
data16
pop
in
rorb
shll
test
loopne
mov
loope
sbb
xchg
cli
adc
add
xor
jns
cltd
mulps
inc
or
loope
mov
aaa
cli
cmp
decb
outsb
fwait
pop
std
bound
jae
cltd
imul
or
mov
mov
movsb
push
call
push
repnz
xor
pop
inc
dec
cmp
xlat
jg
enter
fdivr
or
or
add
dec
lods
push
pop
jno
adc
sbb
cld
bound
insb
inc
popa
lods
enter
insl
fstps
jle
mov
insl
aad
movsb
lock
mov
pop
mov
icebp
cmpb
fldl
add
mov
mov
add
fnstsw
insb
pop
mov
fs
pop
lret
sahf
add
cmp
sahf
mov
mov
je
mov
dec
lea
mov
xrelease
test
pushf
pop
mov
push
or
repz
insl
mov
jne
loop
adc
lods
mov
pop
stos
xchg
sub
push
xchg
pop
movsl
and
lods
lea
or
push
lahf
adc
into
jns
xchg
in
stc
insl
in
jae
js
sar
xchg
dec
stos
sbb
inc
mov
incl
je
sub
stc
daa
lock
dec
adc
pop
dec
cmp
sub
dec
mov
dec
inc
iret
sub
xchg
inc
lcall
js
daa
js
addr16
stc
orb
sub
ljmp
dec
in
std
pusha
and
push
push
psubsw
std
and
xor
mov
pusha
outsb
adc
ds
int3
mulb
mov
sbb
aad
test
aam
xor
push
mov
mov
mov
or
aam
aaa
mov
push
rorb
ss
cmpsb
rcrl
dec
jnp
jp
jnp
xor
leave
imul
dec
adc
jo
loop
sbb
cmp
insl
cmp
xchg
scas
jno
std
icebp
mov
and
data16
ret
fisttpl
test
push
mov
cmp
push
push
mov
fsts
add
mov
pop
sub
dec
cld
hlt
xor
ja,pn
jge
mov
mov
jbe
lret
mov
and
cmc
lahf
lods
lcall
and
movsb
push
mov
sbb
inc
hlt
pop
je
push
mov
clc
adc
sub
fmul
aad
lcall
xchg
jb
ja
fldt
ds
xor
pop
out
cmp
mov
sbb
jo
inc
or
sbb
pusha
ret
xchg
xchg
cltd
jno
notl
jecxz
rolb
and
das
push
mov
ss
add
ds
sbb
ds
xor
mov
xor
xor
pop
ret
adc
ret
mov
sbb
in
jge
in
cld
dec
add
mov
xor
cwtl
xor
mov
std
or
push
adc
in
pop
rcr
loop
dec
in
cwtl
mov
repz
lock
add
sarl
lds
insb
clc
cli
xchg
lds
mov
xlat
sub
rcr
or
ljmp
sub
test
pop
adc
cmpsl
in
decb
test
add
nop
repz
mov
out
inc
data16
dec
fstp
cs
xor
in
iret
mov
fisubs
cwtl
lds
jge
adc
dec
xchg
dec
xchg
cwtl
aaa
shl
lea
mov
cmp
scas
adc
loop
out
out
ret
cmpsl
ror
mov
loopne
dec
mov
pusha
and
mov
loope
mov
stc
xchg
ret
loope
xchg
outsl
loope
inc
push
hlt
sbb
in
add
in
cmp
mov
jmp
and
roll
inc
mov
xchg
mov
sahf
daa
stos
sub
arpl
addr16
lret
addr16
cld
repnz
mull
out
cwtl
pop
test
push
or
lea
test
mov
ljmp
popf
je
jbe
cmpsl
jle
out
shrl
jno
mov
push
addr16
shll
mov
insb
lods
jecxz
dec
jge
inc
gs
sub
mov
sbb
sbb
or
outsl
add
push
pop
xchg
test
inc
les
in
stos
mov
jno
fdivs
mov
sub
jne
adc
inc
xchg
jno
jo
adc
sti
aas
outsl
xlat
cmp
addr16
in
les
repz
mov
push
outsb
sbb
call
in
nop
outsl
mov
sar
or
repnz
pop
stc
pop
inc
or
ds
stos
pop
or
lret
xchg
pop
fildl
test
pop
jns
aas
std
fcmovnbe
imul
out
mov
mov
or
rcr
pop
pop
jl
mov
stos
push
sbb
jmp
add
test
mov
dec
pop
adc
and
mov
mov
mov
cmp
int
push
fdivrs
lea
push
je
lret
dec
mov
push
shl
and
jmp
movsb
scas
scas
iret
mov
mov
popf
adc
push
ror
or
cwtl
lret
in
or
fadd
repnz
cmpb
mov
push
and
jns
mov
xchg
iret
mov
add
push
adc
adc
inc
xchg
sub
xchg
es
adc
mov
rcll
mov
inc
lret
je
mov
loope
cwtl
shlb
push
addb
push
or
cmp
data16
cmpsl
subb
cmpsl
inc
cmpsl
outsb
mov
fisubrs
sub
lods
stos
test
mov
jg
inc
jecxz
push
jne
movsl
jne
inc
push
mov
les
sbb
lret
mov
add
mov
jle
scas
mov
test
adc
dec
inc
call
ret
xor
push
stos
imul
fmuls
xor
push
ja
jmp
popf
ja
xor
out
fimull
lock
sbb
xor
divl
lods
cmp
pop
push
gs
scas
cmp
push
cpuid
int
popa
fs
jne
out
not
cld
aad
hlt
loope
out
sbb
movsb
jge
shl
mov
imul
fisttpll
loop
cmp
mov
xchg
repnz
pop
jmp
xchg
fs
aaa
jno
int3
mov
movsl
push
sub
movsb
mov
inc
shl
or
les
push
adc
es
push
cmp
loopne
lahf
push
js
fstps
rcrb
test
push
into
jne
lea
or
sbb
sbb
and
xor
mov
repnz
mov
xlat
insb
pop
mov
push
push
in
mov
sarb
jnp
insb
mov
pop
jp
lahf
add
in
cmp
pop
gs
out
or
inc
scas
stc
xor
and
lahf
in
inc
push
jle
rcrl
outsl
aas
aad
ret
sar
adc
fucomip
ds
adc
outsb
dec
mov
outsl
jb
lret
pop
test
ret
arpl
jb
xchg
sub
jge
adc
clc
sbb
inc
insb
inc
sub
adcb
sbb
jno
add
xor
jnp
popf
int
push
pop
aam
test
and
mov
cmc
cmp
mov
xchg
cld
push
push
adc
cli
inc
pop
faddp
jbe
xchg
call
movsb
pop
sbb
dec
or
pop
je
xchg
and
insb
adc
stc
cmp
imul
jo
loope
pop
test
jo
cmc
and
xchg
push
stc
cld
imull
pop
ret
ret
insb
push
add
negb
adc
xor
ljmp
xchg
lods
stos
inc
mov
jae
clc
inc
pop
and
movsl
cmp
cld
and
jae
fcmovne
mov
data16
js
jbe
xor
xchg
mov
fwait
int3
stc
cmp
dec
xor
stos
daa
mov
dec
in
fsts
rol
rclb
imul
das
xchg
shlb
ss
push
filds
mov
scas
pop
mov
fisubrl
inc
adc
mov
arpl
inc
lahf
gs
pop
inc
xor
and
sub
cmc
cmpb
push
sub
and
roll
ds
cs
mov
fs
or
mov
xor
inc
sub
add
inc
jmp
xor
aas
pop
adc
add
fnstcw
sti
sahf
add
ss
mov
call
cmp
les
imul
cmpsb
dec
mov
inc
pop
mov
cld
enter
add
pop
xlat
je
sub
jecxz
jne
cltd
push
clc
inc
mov
jmp
je
mov
lretw
out
mov
popf
jno
loopne
cmp
ret
into
hlt
pop
addr16
push
or
into
inc
mov
stc
fs
xor
or
push
add
cmpsl
stc
push
sbb
push
cmpl
lds
jg
add
fs
cli
mov
in
icebp
popf
cmp
mov
adc
dec
stos
pop
xor
pop
fs
sbb
fisubrs
add
loop
mov
sub
pop
mov
ss
jge
fldcw
add
inc
mov
push
push
xchg
fucomip
sbb
xchg
ret
sahf
pop
imul
out
xor
mov
cmpsl
repz
jmp
fadd
mov
push
xor
lret
mov
and
les
idivb
sbb
xchg
dec
inc
sti
xchg
mov
jnp
leave
jb
adc
out
xchg
daa
dec
add
add
add
mov
int
fwait
mov
sti
sbb
push
inc
add
enter
sahf
ja
lret
inc
test
test
xor
xor
xor
mov
add
adc
popa
fidivrl
mov
mov
lock
mov
push
jb
jnp
inc
fiaddl
lahf
mov
lods
jecxz
in
add
incl
in
lds
push
push
repnz
sub
loop
or
inc
cmp
xchg
sbb
in
xchg
mov
mov
mov
sub
and
dec
xor
fnsave
mov
sbb
icebp
das
sbb
sbb
push
add
inc
loop
jo
pop
push
xor
stos
gs
inc
xchg
pusha
into
pop
gs
jecxz
sahf
jl
pop
xchg
test
mov
cmpsl
addl
jb
test
hlt
sbbb
out
add
enter
add
jle
dec
push
leave
push
stc
pushf
test
dec
mov
dec
mov
fstps
imul
cmpsb
fcmovne
fadds
mov
faddl
mov
add
xlat
movsb
and
pop
int3
arpl
pop
mov
push
into
subl
push
inc
movsb
sbb
aaa
mov
adc
and
xchg
jl
cmp
or
pop
jb
inc
xchg
jno
out
lods
sub
movsb
mov
xchg
fcomps
dec
add
cmp
stc
mov
cmp
push
xlat
ficoml
mov
inc
jae
push
mul
fsubs
or
shrl
je
fsubl
inc
cmp
outsb
ljmp
insb
xlat
push
mov
popa
sbb
iret
jne
fbstp
int
jg
jge
subl
out
stos
and
lret
sarb
out
in
and
sbb
xchg
sbb
es
push
mov
and
mov
je
vmulpd
mov
loopne
jbe
jmp
cwtl
repz
imul
stos
leave
jmp
push
ljmp
mov
in
jbe
daa
mov
pop
lret
mov
xchg
mov
ffree
aaa
call
jmp
mov
aas
cmpsl
icebp
rolb
dec
inc
enter
push
nop
mov
dec
fstl
gs
add
adc
mov
loop
add
dec
cld
imull
in
imul
fsubrp
ret
es
std
xchg
jg
mov
xchg
lret
mov
mov
fstps
lahf
mov
adc
xchg
or
adc
in
jae
pop
lcall
lods
add
fmull
mov
hlt
scas
or
xchg
and
or
lods
push
pop
adc
out
lock
jge
mov
sbbb
and
hlt
add
sbb
sbb
jbe
shl
push
and
sbb
pusha
call
rcrl
adc
inc
xor
int
mov
ror
adc
cmp
arpl
inc
or
mov
orb
sub
out
and
ret
mov
mov
lods
inc
ljmp
or
ret
das
push
cltd
push
test
xlat
xchg
mov
out
mov
jae
dec
repz
insl
popl
pop
mov
insb
mov
aas
or
insb
orl
cmpsl
scas
int3
xor
push
insl
dec
test
cltd
sub
inc
adc
add
inc
xor
inc
fwait
sub
aam
leave
or
jl
filds
insl
push
popa
adc
add
jp
xor
jl
into
sti
int
rclb
test
pushf
pop
aad
stc
push
neg
pop
gs
or
iret
decl
arpl
fcompl
xchg
or
test
and
sub
mov
pop
aad
mov
iret
pop
in
or
stc
fwait
mov
and
adc
mul
imul
enter
incl
jl
pushf
mov
arpl
notl
das
test
mov
jecxz
aas
int3
nop
adc
adc
cld
test
fidivrs
xchg
imul
adc
jl
mov
nop
call
pop
add
jo
add
jl
jae
cmp
addb
add
mov
xor
sub
mov
test
or
sbb
push
mov
faddl
ret
push
cmpsl
push
push
inc
mov
lahf
sub
lods
in
dec
popa
jo
cmpb
mov
inc
das
jg
pop
jbe
dec
jnp
sub
jg
loope
aas
es
popa
popa
push
xor
lret
mov
test
xchg
outsb
sarb
out
and
mov
bound
fwait
xchg
pusha
out
mov
lock
roll
movsl
cmc
pop
es
push
gs
pop
push
popa
mov
jp
cs
or
jb
pop
and
xchg
sbb
mov
repz
inc
stc
icebp
pop
jne
mov
subl
cmp
rcrb
xlat
and
cmp
mov
pop
lods
push
xor
stos
decl
adc
jno
xor
orl
testb
lfs
and
xchg
inc
popa
mov
push
jecxz
mov
push
pop
xor
in
scas
testl
stos
pop
loopne
add
mov
pop
or
ret
lods
push
fs
pushf
jmp
enter
dec
dec
mov
shll
ret
shl
inc
daa
pop
mov
sbb
mov
test
xchg
pop
nop
enter
adc
lcall
lods
jmp
js
clc
insb
pop
add
or
ffree
bound
scas
jo
mov
dec
or
cmc
arpl
xchg
mov
xchg
push
sti
iret
lahf
push
popa
call
jae
add
mov
test
cmp
cli
inc
sub
cwtl
repnz
repnz
add
std
sub
pop
jno
ljmp
scas
inc
jle
decb
cmp
sbb
mov
push
in
iret
sar
and
pop
ss
sahf
out
and
push
jno
das
mov
xchg
mov
xchg
and
pusha
jg
inc
in
mov
add
dec
dec
adc
xor
sbb
test
lea
and
inc
leave
mov
fstl
ffree
push
add
and
shr
or
mov
xchg
js
jae
dec
and
mov
jp
pop
cmp
nop
mov
mov
pop
push
xchg
jb
lock
cs
cli
mov
into
cmpsb
sbbl
cmp
fcomps
ja
adc
mov
popa
fmull
inc
mov
test
dec
int
orb
aad
insb
inc
push
xchg
cmpsb
loop,pt
out
adc
mov
stos
ds
test
jecxz
ljmp
and
jno
lods
mov
icebp
shll
xchg
nop
xchg
mov
or
push
pop
cmc
jp
pop
fsubl
outsl
cld
fucomp
add
dec
dec
xor
sub
mov
mulb
or
mov
cltd
or
ficoml
icebp
xchg
or
mov
sub
out
push
or
cltd
xchg
lret
cmp
cmp
out
add
jae
xor
push
dec
and
push
cmp
dec
inc
push
idivl
push
movsb
pop
roll
and
xchg
sarl
pop
cmp
ljmp
xchg
push
out
xor
xor
or
sub
fnstsw
f2xm1
xchg
call
shll
cmp
xchg
in
dec
orl
sub
idivb
sub
fsts
jne
clc
dec
add
loop
dec
rorb
jecxz
lock
push
mov
fwait
mov
push
and
add
sbb
and
mov
lret
xchg
pop
mov
dec
adc
arpl
testb
add
push
fwait
sahf
adc
mov
movl
xchg
outsl
dec
jl
add
adc
stc
xor
mov
or
loope
xlat
cmpsb
or
mov
out
jb
dec
cmp
mov
pop
and
iret
fstpl
sub
jno
ficoml
mov
sti
in
mov
jmp
dec
cmp
imul
and
outsl
inc
ret
mov
mov
dec
cltd
aam
cmp
jle
arpl
add
inc
rcrl
int3
inc
adc
mov
sti
popa
sub
dec
cmp
xlat
ret
shl
push
sbbb
push
in
add
int3
imul
xor
ret
fcoml
shll
testl
push
pop
and
adc
in
sub
pop
into
fs
iret
fstp
test
dec
call
shrl
outsl
stos
stc
push
in
xor
mov
loope
sbb
adc
xorl
je
inc
xchg
ret
out
dec
ss
outsb
sbb
mov
lret
or
inc
xor
push
pop
jbe
jle
cltd
mov
mov
push
pop
lea
jle
xor
jp
mov
and
in
outsb
repz
adc
or
mov
loop
or
imul
popf
xor
sub
push
cmpsb
wrmsr
or
jmp
outsl
and
mov
test
or
dec
inc
pop
jmp
inc
cmp
clc
or
or
popa
and
fisttps
daa
lock
pop
xor
sbb
out
mov
nop
xchg
mov
xchg
test
clc
cmpsb
int3
call
sbb
loop
adc
daa
ret
inc
cs
add
cli
and
and
stc
aas
ret
mov
loopne
outsl
dec
jb
pop
movsl
adc
push
mov
cmp
dec
mov
pop
into
inc
lds
in
test
push
or
mov
adc
stc
lods
dec
push
cmp
fisubl
dec
ja
cmp
cmp
inc
pop
cmp
adc
adc
out
inc
fs
push
mov
inc
outsl
xchg
push
and
pusha
dec
icebp
mov
mov
in
jl
in
repnz
pop
imul
out
int3
push
pop
pop
scas
aaa
pop
jg
xchg
mov
shl
and
mov
popf
mov
iret
int
pusha
cmp
xor
daa
xlat
cmp
xor
test
jb
daa
ja
add
sub
push
jbe
lret
rcll
xlat
cmc
dec
iret
push
push
shl
ljmp
push
in
test
jbe
in
jmp
in
xor
rol
int
and
adc
test
fnstsw
sbb
push
cmp
dec
pop
xor
jecxz
cltd
inc
xchg
insl
push
in
dec
inc
mov
mov
jae
iret
lret
into
cvtdq2ps
jb
cmpsl
inc
out
push
or
and
jmp
pop
pop
cmp
pop
xor
scas
mov
int3
jmp
test
mov
sub
mov
dec
pop
or
repz
sbb
xchg
jb
cld
sbb
mov
stos
sub
loopne
push
push
enter
jb
pushf
dec
fisttps
push
scas
add
insl
jle
out
and
fwait
xor
hlt
mov
pop
aad
jb
enter
fs
into
fwait
cmp
into
mov
jnp
add
push
out
push
mov
adc
jge
dec
inc
scas
lea
xchg
loop
inc
mov
push
aas
mov
sbb
pop
mov
icebp
idivl
mov
push
in
cmp
fiaddl
jno
dec
scas
jg
mov
mov
js
addr16
mov
sub
aad
loopne
adc
sub
pushf
add
cmc
test
mov
lods
push
js
int
push
shrb
cmp
enter
pop
dec
jge
mov
jno
cli
xchg
arpl
push
out
sub
daa
push
into
addr16
or
test
adc
cltd
in
add
movsl
inc
sub
repz
imul
mov
test
data16
mov
popa
jnp
mov
mov
or
flds
test
jnp
adc
push
push
aaa
enter
cmpb
adc
mov
push
aad
inc
dec
xor
inc
and
dec
sub
cwtl
cmp
scas
enter
push
jns
jecxz
push
fwait
jg
adc
gs
mov
sbbb
jne
ds
fstpl
aaa
push
push
hlt
cmpsb
xchg
sbb
adc
push
das
mov
sbb
imul
pushf
fcoms
cmp
shlb
sub
repz
jbe
shlb
pop
out
mov
mov
nop
lea
add
push
pop
inc
repz
sti
pop
xlat
icebp
lcall
cwtl
dec
inc
aaa
and
sti
lea
je
sti
push
icebp
cmp
loop
lods
mov
psraw
rcrb
mov
lods
insb
push
xchg
icebp
and
sbb
or
inc
dec
pop
call
push
test
cmpb
negl
xchg
addr16
into
sub
and
outsb
test
es
ret
push
outsb
xchg
mov
iret
sub
pop
push
cmp
cwtl
decl
add
cwtl
cmp
loopne
push
adc
sbb
pop
xor
into
call
add
xchg
pop
cli
push
and
out
sti
pushf
jle
test
lcall
gs
push
cltd
sbb
sbb
cmc
mov
sbb
test
test
push
pushf
cld
push
rolb
loope
test
loop
sbbb
push
jno
stos
sbb
mov
aad
ss
mov
insb
xor
xchg
mov
gs
jge
xchg
aas
add
add
test
fmuls
or
aaa
in
dec
sarl
cmp
add
xor
shrl
sbb
fdivrs
insb
les
or
mov
clc
cmpsb
pop
movsb
cmp
and
data16
shr
sub
xor
pop
in
or
dec
or
add
mov
sub
sub
stos
ret
pop
ret
push
cwtl
xor
or
push
in
xor
fwait
lret
add
cli
aaa
jmp
sub
mov
jmp
lcall
xor
jp
or
ds
push
mov
dec
stc
iret
imul
fidivrs
sub
dec
pushf
jmp
rclb
ja
push
xor
mov
outsb
inc
push
xor
jnp
jg
cld
inc
mov
repnz
push
mov
clc
lods
jae
aam
or
test
sbb
sahf
push
adcl
clc
mov
enter
gs
nop
mov
add
imul
mulb
xchg
loopne
cmpsl
ret
xor
inc
repz
fstpl
and
inc
int
jmp
iret
in
out
mov
lods
jae
sti
mov
dec
adc
int
hlt
repnz
dec
out
iret
mov
push
xor
les
mov
fnstsw
mov
imul
push
scas
and
pop
lea
adc
aas
repnz
xor
jg
push
ficompl
lahf
xchg
pop
mov
hlt
jge
mov
jmp
loope
xor
les
mov
sub
or
adc
rcll
or
lea
leave
cs
pop
imul
mov
sub
or
cwtl
xor
xor
xchg
cmpsb
jns
das
inc
aaa
sbb
lock
ret
iret
sub
inc
int3
roll
mov
pop
pop
scas
rcrb
jae
jmp
fisubs
add
mov
inc
sbb
into
xor
insb
in
cltd
jae
mov
test
mov
jle
ret
xchg
cli
xor
out
sub
mov
and
fs
aam
and
push
mov
push
mov
push
pop
cld
js
sbb
jnp
enter
xchg
sti
and
adc
mov
add
dec
cmp
sub
xor
push
test
mov
cli
sbb
jae
and
insl
xor
dec
push
mov
and
pop
pop
sub
mov
loop
lds
or
lcall
icebp
push
cmp
mov
jmp
xor
and
sub
push
imul
mov
movsl
clc
xor
mov
js
mull
leave
jecxz
insl
loope
xchg
mov
mov
jecxz
pushf
popa
xlat
lahf
xchg
es
mov
dec
lds
mov
std
xor
mov
jp
add
or
pop
jmp
movsl
inc
mov
or
js
inc
sub
leave
cmp
sbb
dec
jns
imul
aad
adc
sbb
pusha
loop
push
adc
rolb
ficoml
cmp
aad
add
push
pop
pop
or
pop
push
mov
inc
jmp
mov
pop
jnp
jge
sub
setne
pushf
and
xor
and
inc
dec
in
repz
fstpt
mov
aaa
mov
jno
add
andl
gs
sub
arpl
xchg
sbb
mov
rol
and
pop
xchg
loop
cwtl
cmp
mov
cli
dec
sub
lahf
adc
xchg
mov
repnz
das
lret
cmp
or
sub
or
pushf
sub
shr
pop
lret
mov
mov
out
iret
push
xchg
xor
dec
push
xor
sbb
pusha
jl
rcrl
cld
jb
pop
les
rcrb
iret
xor
xchg
lcall
rolb
add
xchg
dec
push
cli
add
pop
out
or
add
pusha
xchg
mov
jg
leave
pop
xchg
inc
out
outsl
ljmp
pop
add
and
or
adc
scas
dec
or
lock
inc
adc
scas
jbe
ret
in
mov
sti
pop
sub
shl
pushf
mov
xor
sub
or
out
mov
lret
stc
pushf
mov
mov
divl
jns
xchg
lods
arpl
or
jae
lret
orl
scas
cmp
nop
xchg
add
and
sub
test
xor
push
loop
call
sub
or
cmpsl
mov
add
outsb
cmpsb
xor
mov
xorb
jne
push
mov
inc
push
sub
iret
jns
in
jnp
pushf
scas
mov
testl
les
xchg
test
pop
and
sub
ret
jns
mov
mov
ds
ss
test
add
pop
out
fmull
mov
cs
nop
mov
sahf
jb
cmpl
iret
ret
jl
ljmp
cld
in
mov
outsl
aaa
ljmp
dec
and
fs
xor
xor
jo
incb
test
and
cmp
inc
push
jge
cli
cmpl
and
xor
in
lds
push
std
dec
adc
push
aam
lds
pushf
sbb
andl
fwait
orl
jno
shrb
add
aas
call
hlt
push
mov
push
subl
xor
xorl
decl
pop
mov
ljmp
xlat
xchg
psllq
push
into
and
jb
loope
and
decl
sti
imul
jb
jbe
ss
mov
out
adc
jp
or
mov
adc
fs
inc
lods
mov
and
cmp
xchg
dec
addr16
sbb
push
xor
mov
data16
icebp
sbb
lods
push
stc
push
push
xor
mov
aaa
inc
stos
mov
mov
mov
jns
sub
xor
xor
jge
xchg
daa
js
mov
cmp
rcrl
and
xlat
mov
loop
or
add
sub
mov
stos
fwait
inc
xor
dec
stos
loopne
ds
das
daa
ret
mov
fcoml
mov
aaa
adc
mov
out
mov
sbb
popa
in
jne
cmpsl
mov
pop
clc
jg
lret
xor
leave
sarl
mov
scas
ds
ret
or
std
sbb
rorb
push
popf
pop
fdiv
daa
pusha
inc
cmpsl
fs
jl
shll
add
lret
xor
adc
out
push
stos
mov
loop
dec
sahf
pushf
jmp
xadd
aaa
dec
loop
clc
add
jl
mov
adc
dec
inc
pop
enter
into
pop
dec
jbe
xchg
mov
cmp
pop
insb
nopl
jl
or
je
into
cmc
add
sbb
sahf
inc
outsb
pop
sahf
cmp
push
jecxz
cmp
dec
out
cmp
mov
mov
mov
fs
xchg
mov
and
fsubr
mov
mov
or
daa
call
cmp
aam
out
test
mov
loope
out
push
ret
push
insl
pop
int
out
jae
cld
push
xchg
push
arpl
roll
or
test
mov
xor
jo
ljmp
shrd
or
xchg
fwait
pop
lods
pop
xchg
fstpt
inc
and
lea
xchg
mov
out
mov
cmpl
lock
mov
sbb
repnz
subl
add
adcb
adc
xchg
jnp
stos
or
push
cltd
mov
cmc
jmp
push
out
mov
sbb
sub
jbe
xchg
ja
insl
push
dec
je
fs
outsb
mov
adc
or
inc
outsb
lds
mov
leave
loop
mov
packssdw
cmp
mov
sub
loopne
bound
daa
pop
std
and
das
in
pop
lea
pop
xchg
in
jmp
roll
mov
and
je
pushf
lea
and
xor
mov
gs
mov
popf
mov
or
or
gs
aad
pop
jne
fcomps
testl
and
hlt
ret
and
inc
xchg
aad
ja
lds
aam
push
jns
sahf
xchg
ret
sbb
sub
jne
out
xchg
push
nop
add
and
bound
daa
cmp
scas
in
mov
les
pop
test
insb
mov
rcr
outsb
sub
xchg
call
test
movsb
enter
call
test
push
les
cmp
stos
xchg
and
dec
pop
movsl
imul
jl
in
inc
xor
sub
jbe
leave
add
in
clc
mov
sbb
jmp
dec
lcall
xor
jno
push
dec
xor
pusha
mov
mov
inc
mov
fucom
cmp
xchg
fdivrl
sub
jo
fidivrs
std
aas
jo
adc
mov
popa
xchg
dec
repz
xchg
xor
jae
jno
scas
jno
xor
add
rcrb
xchg
mov
inc
dec
cmpsb
push
jne
mov
cmp
stos
jbe
xchg
pusha
pop
xor
iret
xchg
sti
lock
xor
add
adc
pop
icebp
nop
in
jge
out
lret
pop
jb
sti
lock
out
lcall
std
adc
loopne
dec
sub
xchg
sbb
je,pn
mov
cmp
sbb
cmp
jno
push
insb
mov
sub
xchg
and
cmc
clc
das
jns
or
subl
xchg
ljmp
aad
std
sub
mov
dec
sahf
sahf
inc
sbb
mov
xor
mov
out
pop
xchg
mov
xor
das
int3
inc
and
jne
mov
add
and
add
mov
sbb
sub
pop
xchg
and
xchg
mov
es
int
push
jb
push
fwait
pop
mov
xor
loope
iret
add
std
inc
addr16
fistpl
jmp
mov
xor
aam
in
jge
cmp
loope
in
push
xor
movsb
and
ret
mulb
and
repz
jg
loope
clc
cmp
gs
or
xor
pop
imul
push
xchg
les
add
sbb
jbe
sarl
mov
cmp
addl
xchg
sbb
or
add
out
wrmsr
and
stos
jecxz
aad
clc
pushf
ffreep
push
sbb
lods
jp
pop
jb
rclb
push
std
shlb
aas
pusha
repnz
in
jnp
jl
sbb
fstpl
inc
xor
push
aad
or
cmp
pop
and
gs
ja
sbb
imul
enter
mov
adc
pop
movsl
addr16
push
xchg
push
push
clc
xorl
xchg
mov
mov
mov
jle
shrb
jmp
les
ja
arpl
push
sub
test
lods
mov
shr
mov
dec
mov
sub
push
lods
mov
lahf
lcall
adcl
inc
pop
pop
ljmp
jle
mov
inc
insb
inc
cltd
xchg
jecxz
out
mov
imul
and
pop
sub
shr
lret
stos
call
movsb
and
pop
lcall
or
mov
inc
fcompp
inc
or
fistpl
stos
sbbb
inc
lock
jne
xor
pop
cmc
aas
das
sub
push
aad
push
stos
xor
lret
cmp
sub
and
adc
push
xor
mov
mov
cli
sarl
test
push
ret
data16
repnz
inc
or
or
in
jbe
mov
mov
or
jmp
xchg
leave
mov
aas
outsl
ljmp
push
sbb
push
je
clc
and
rolb
mov
adc
aas
inc
std
ljmp
lahf
fisttpll
dec
popf
and
lahf
sbb
xor
loope
fsubs
mov
popf
pushf
aas
mov
repnz
fdivrp
pop
push
stos
jnp
xchg
adc
lahf
enter
add
add
in
add
popf
repz
adcl
pop
outsb
jb
jge
sub
xchg
or
mov
ljmp
scas
ja
mov
lret
loop
xchg
loop
mov
xchg
int3
add
xlat
mov
mov
jb
adc
sarl
loop
gs
andb
xchg
dec
sbb
popa
xor
push
sub
out
jno
mov
xor
sbb
add
jmp
xor
fs
mov
mov
in
out
mov
shll
fs
mov
inc
jmp
rclb
mov
xor
out
push
inc
mov
dec
aam
fisttps
insb
movsb
or
bound
inc
fisubs
aaa
push
out
test
arpl
stc
push
and
push
xor
daa
xor
shrl
push
out
or
push
jg
inc
mulb
and
inc
or
lock
adc
test
das
pop
aad
xchg
or
inc
push
ja
ds
js
repnz
sub
push
fistps
popf
add
fisttpll
fs
in
mov
push
lret
xchg
xor
cmc
aas
divl
lret
inc
dec
xchg
adc
push
pop
pusha
and
xbegin
fcmovnbe
inc
outsb
dec
pop
or
mov
jmp
fwait
jmp
xor
add
iret
loopne
pop
test
mov
clc
idivl
in
sub
in
lahf
add
inc
es
je
lea
out
mov
mov
sti
jp
das
cmc
push
sub
jnp
mov
mov
lods
dec
in
outsl
push
mov
pop
popf
sahf
jnp
pop
mov
push
dec
jae
outsb
push
ret
or
movsl
lods
sub
rorb
test
mov
adc
frstor
shrl
mov
mov
adcl
mov
decl
mov
xchg
sub
mov
xchg
inc
mov
pop
into
xor
push
cmpsl
adc
push
in
jne
ret
in
popa
pop
xchg
mov
js
dec
pop
mov
out
int3
sbb
enter
aad
lods
repnz
loope
sub
stos
enter
les
outsb
call
inc
inc
push
jb
pushf
push
cmpsb
cmp
in
adc
xor
adc
cmp
mov
xchg
loopne
test
add
js
push
lahf
jmp
popf
mov
adc
add
subb
jo
out
ds
pop
pushf
mov
rcr
in
adcb
roll
lcall
lock
cli
lahf
sub
fnstcw
out
jg
scas
aam
fidivs
jno
sub
add
scas
xor
dec
icebp
push
xchg
add
ror
jb
push
xchg
into
jbe
sbb
aad
fldcw
cmp
shll
lods
mov
enter
or
mov
push
cs
loope
js
call
stc
es
jno
and
cli
nop
sti
push
adc
fs
jbe
sbb
mov
loopne
mov
or
int
inc
push
leave
and
and
push
icebp
imul
outsb
and
push
pop
or
hlt
and
sbb
gs
or
sarb
ds
shr
das
ret
enter
jle
dec
mov
pushf
shll
lcall
inc
jb
lret
dec
adc
fsubrs
lods
shll
mov
xor
xchg
iret
push
divb
xchg
mov
scas
clc
jo
pop
jle
pop
sbb
test
sub
ret
mov
shrl
sbb
leave
js
ficoms
xor
mov
adc
dec
in
or
xchg
push
mov
pop
je
repz
mov
mov
sub
outsb
clc
ds
not
dec
les
sarb
iret
or
movsl
hlt
call
push
push
cmp
enter
push
in
in
or
leave
fdivr
shlb
mov
outsb
lds
sbbb
inc
frstor
pop
lret
les
or
scas
mov
dec
sub
sbb
push
stos
fcom
call
imul
gs
add
jae
inc
test
out
inc
bswap
insb
fs
leave
mov
orb
inc
fstps
subb
aad
jp
stos
rcrb
mov
cmpsl
fisubl
in
aaa
adc
sub
shlb
out
pop
icebp
inc
subb
jne
or
or
jmp
outsl
mov
cmp
mov
push
push
imul
fadds
jp
and
stos
insl
jb
cmpsl
adc
push
jne
add
aas
orb
stc
stos
pop
mov
jge
push
lds
and
jle
push
dec
cltd
enter
inc
sbb
sti
xor
mov
xchg
xor
mov
pop
ljmp
mov
and
rol
xor
inc
xlat
mov
mov
mov
bound
mov
push
cmc
mov
filds
sbb
xor
mov
sbb
push
cmp
aas
and
lahf
push
loope
and
in
inc
adc
mov
enter
jecxz
fsubs
fsubs
lret
daa
or
js
ficomps
and
fsubrp
jne
mov
cmp
gs
ret
mov
jmp
xor
lds
push
cmp
pop
leave
inc
mov
mov
rol
lret
jecxz
sbb
rolb
sbb
mov
mov
subl
mov
push
loope
sbb
int3
pop
inc
fistl
pushf
nop
and
sub
sub
xor
sub
test
mov
jns
add
sbbb
pop
jp
movl
cwtl
adc
loopne,pn
jg
fstl
sub
les
add
fsubl
repz
mov
sub
mov
std
cmp
repz
repz
cwtl
cmp
dec
xor
out
mov
out
jb
inc
xor
int3
xor
out
xor
adc
adc
repz
cmpsl
xor
xchg
std
push
lock
adc
adc
into
pop
out
cld
loopne
repz
fistpl
stos
add
and
ret
sub
in
imul
repnz
jo
adc
push
cmp
adc
dec
nop
sbb
hlt
add
mov
fs
popf
shlb
shrb
aas
and
mov
push
xor
arpl
xchg
lret
bound
and
push
movhps
cli
xchg
hlt
inc
int
adc
sub
lahf
adc
fsubrl
in
push
sbb
mov
pop
fistpll
cmp
into
xor
push
and
sahf
iret
mov
sbb
int3
and
popf
xchg
repz
xor
setp
enter
ss
std
sbb
dec
mov
imul
loop
push
cmp
mov
js
lahf
out
dec
mov
fnstsw
ljmp
stos
xor
mov
push
inc
jle
pop
mov
push
subl
or
mov
shl
outsb
notl
cmp
jl
mov
fwait
xchg
rorb
leave
in
cwtl
push
push
hlt
add
ficoml
das
xor
fadd
push
sub
lea
push
or
inc
cmpsl
add
inc
lods
popl
mov
jp
push
jmp
xchg
dec
cs
fbld
sahf
es
xor
cmp
inc
cmpsl
mov
lock
shl
inc
fwait
rol
aas
and
test
sbb
xlat
jmp
loope
lods
je
fwait
hlt
fdivl
lods
xchg
jbe
or
inc
lahf
cmp
cmp
inc
outsb
lret
dec
pusha
stc
dec
push
cmp
sahf
jle
xchg
push
inc
jbe
sub
jo
cmp
ret
adc
mov
cli
pop
jl
and
addr16
jecxz
int3
xchg
pop
xchg
fwait
mov
sub
out
cmc
dec
pop
xchg
out
fidivrs
rol
mov
cltd
sbb
jb
mov
xchg
add
pop
cwtl
repnz
fucom
cmp
and
pusha
cs
cmp
sub
push
jns
xchg
xchg
pop
inc
add
in
or
lret
sbb
jo
push
pop
cmp
scas
sub
dec
adc
dec
inc
test
stos
into
cmc
lahf
filds
push
dec
pop
jns
lea
mov
addl
mov
xor
test
mov
out
inc
mov
jnp
cli
inc
jp
push
les
adc
cmc
lss
mov
mov
pop
pop
stc
mov
loopne
jle
mov
jge
xchg
fidivrl
xor
cmp
lcall
stos
sub
hlt
sbb
sbb
cltd
lahf
fistps
ja
lcall
xchg
mov
push
arpl
pusha
or
loope
pop
clc
lods
fistpl
adc
mov
cli
dec
cld
sbb
and
and
filds
push
add
aas
push
sbb
aas
xor
mov
out
push
fistpl
jae
push
mov
or
or
test
push
call
mov
mov
and
inc
pushf
pop
mov
arpl
fnstsw
jnp
xor
and
inc
mov
stc
subl
dec
mov
aad
jle
xor
sbb
cmp
and
mov
lahf
movl
inc
popf
mov
sbb
fimull
push
insb
mov
mov
ficoml
in
dec
fbstp
in
inc
roll
test
jns
popl
stc
mov
adc
and
cmpsb
jmp
shl
imulb
adc
out
mov
sbb
or
or
mov
fbstp
ss
int3
in
xor
in
and
je
xor
cmp
dec
stos
push
loope
pop
aas
ret
xchg
ret
and
push
add
pop
sbbb
test
dec
ljmp
addr16
imull
cmc
xchg
fcomi
jecxz
mov
shlb
mov
sbb
dec
repnz
push
shl
adc
outsl
and
fimull
outsl
xchg
stos
adc
sub
mov
lret
pop
test
inc
scas
data16
pop
ljmp
jge
push
lea
add
cltd
aaa
stos
shll
mov
xchg
stos
lds
aas
pop
loopne
bound
enter
adc
test
das
int3
mov
gs
jge
movsb
popa
cs
or
repnz
out
push
popf
aas
je
outsl
ja
lds
and
popf
cltd
in
and
shll
mov
mov
in
push
fsubrl
cmpb
mov
sahf
cmc
mov
xchg
dec
decl
mov
in
and
cmc
xchg
out
pop
test
iret
jns
mov
clc
pop
mov
cld
ret
cltd
jae
cltd
jne
leave
jmp
xchg
ja
jmp
loope
mov
lcall
inc
test
xchg
inc
cmpl
in
int
mov
in
rorb
mov
jp
pop
mov
orl
jle
nop
loope
add
or
xor
stos
int
dec
es
jmp
and
sub
sbb
jg
imul
sub
ficoms
mov
shlb
repz
push
sbb
decl
int3
ret
jl
movsb
cmp
lss
scas
jo
outsb
popf
xor
test
insb
adc
xchg
lods
xor
or
cmp
jmp
mov
mov
cld
mov
or
dec
test
inc
iret
xchg
dec
add
xchg
mov
cmp
cmp
call
jmp
or
hlt
jo
cs
in
jecxz
dec
mov
mov
loop
sbb
inc
pop
in
out
mov
or
adc
jo
test
mov
fwait
dec
sub
sub
add
mov
call
inc
jecxz
mov
mov
add
fpatan
push
pop
and
jae
mov
mov
sbb
cmpb
movsb
dec
fdivrl
xchg
adc
or
push
stos
push
xchg
aam
in
test
jbe
cmpsb
in
mov
add
mulb
jo
push
inc
mov
fsubp
out
mov
sub
movl
push
arpl
in
out
cmc
lcall
sbb
push
out
xor
mov
pop
sbb
add
bound
dec
setb
sub
fdivl
jecxz
mulb
sub
adc
fucomi
adc
or
mov
jne
fs
repnz
jnp
out
divl
push
daa
insl
mov
ds
sbb
jo
mov
mov
cltd
clc
jbe
sub
sbb
cmpsb
jmp
aam
xor
push
movsl
or
or
loopne
mov
icebp
pusha
nop
mov
mov
mov
push
and
fists
mov
mov
dec
mov
mov
jb
outsl
ret
out
bswap
pop
cmp
dec
cli
fcmovnu
add
jp
xor
ljmp
gs
pop
sar
dec
pop
jns
and
dec
daa
jne
stos
push
push
and
in
push
sub
shlb
mov
push
loopne
scas
mov
push
adc
dec
insb
out
testb
inc
push
sarb
lods
inc
mov
ret
lods
inc
cmc
pop
jo
adc
out
loope
xchg
rcrb
push
adc
cs
pop
in
dec
push
inc
movsl
hlt
push
jl
sub
mov
dec
popf
cmp
cmp
arpl
inc
and
pop
xor
dec
dec
je
cmp
jle
jo
xor
inc
arpl
push
or
js
mov
cs
pop
pop
mov
mov
or
jb
scas
daa
std
xchg
mov
or
sub
jo
mov
movsb
fwait
pop
mov
fcomps
adc
in
cmp
jmp
dec
fcmovne
insl
divl
scas
inc
sub
loope
jnp
inc
incb
add
mov
fsubs
movl
clc
and
out
xor
sbb
xchg
adc
push
push
rcr
sarl
mov
jmp
test
dec
xor
mov
aaa
cmc
mov
data16
pop
pop
push
mov
test
mov
inc
sahf
sbb
mov
daa
or
xor
push
movsl
xchg
bnd
and
sahf
scas
inc
int3
mov
out
jno
movsb
mov
lds
mov
cmpsl
adc
int3
pop
mov
mov
je
inc
push
inc
xor
xlat
sti
jno
inc
xchg
and
sti
scas
aad
add
aaa
mov
mov
out
ss
mov
push
pusha
mov
push
call
call
icebp
dec
nop
addb
das
xor
aam
insb
loop
aad
int
into
aad
iret
mov
push
hlt
dec
data16
dec
loope
test
repnz
popa
fwait
mov
dec
mov
sbb
pop
push
addr16
ficompl
pop
push
call
xchg
jp
mov
insl
add
ret
push
cwtl
std
aam
mov
int
dec
mov
xor
xchg
cmc
pop
test
loope
daa
push
dec
mov
cmp
outsl
sbb
lods
js
cmc
fidivs
sbb
pop
loope
icebp
sbb
ret
pop
ss
test
mov
shl
imulb
daa
jp
pop
aad
push
cmpsb
mov
inc
mov
int
aas
std
aaa
mov
pop
das
pop
xor
test
addr16
xchg
sbb
leave
inc
mov
xlat
fsubrl
mov
outsl
je
jl
xchg
mov
mov
ljmp
push
mov
cli
add
cmp
cli
mov
imul
outsl
xor
adc
fsts
mov
frstor
cli
test
into
jne
mov
aad
pop
iret
jbe
stos
stos
cltd
lods
repnz
adc
dec
test
pop
jge
popf
dec
mov
test
mov
daa
out
jmp
push
pop
mov
xor
xchg
or
push
cli
scas
lods
clc
subl
push
mov
lds
sahf
test
stos
mov
aas
cltd
push
fldl2e
insb
int
mov
dec
popf
or
xor
out
outsl
ljmp
jg
repnz
test
test
cmc
adc
inc
xchg
data16
fcoml
sar
imul
ret
out
insb
leave
test
add
ret
leave
test
inc
mov
repz
or
and
dec
clc
mov
int
in
inc
xor
minps
push
data16
fistpll
test
or
inc
push
loopne
pop
and
jno
dec
jo
loop
rep
fcmovnb
aas
fiaddl
mov
pop
popl
fucomip
jne
aaa
jae
adc
jecxz
mov
test
repnz
test
add
in
lahf
adc
les
lock
lcall
xor
fcmovnb
pop
jno
add
negb
and
lea
dec
shrb
lcall
cld
andb
add
sub
inc
xchg
shll
idiv
out
sub
xchg
fnstcw
mov
lahf
jb
inc
pop
sub
sub
mov
cmpsl
xchg
js
sub
es
nop
jbe
fstpt
lock
mov
fcomi
aam
push
js
stc
fcompl
pop
adc
outsb
loope
jo
fcomip
lcall
les
lcall
out
and
shl
adc
loopne
bound
movsb
or
add
cmc
lods
es
mov
cmp
mov
incb
lret
ja
or
inc
sbb
cmp
dec
sub
sbb
lock
inc
setae
leave
out
test
xor
push
add
sbb
fs
pop
mov
sbb
dec
inc
jg
cmp
or
movsl
mov
pusha
fidivrs
jle
xchg
mov
andb
jnp
lods
lahf
test
inc
fwait
mov
and
sub
rcl
xchg
rclb
push
sarb
xchg
stos
and
pop
mov
push
nop
mov
mov
popf
sbb
cmp
inc
mov
inc
pop
fsubr
jno
cltd
jmp
test
mov
and
mov
cs
adc
lret
mov
push
iret
add
dec
ret
mov
sub
adc
mov
push
mov
xorl
test
dec
mov
mov
xchg
pop
inc
push
fs
sub
cmpl
iret
mov
aad
add
dec
rcrl
or
add
mov
loopne
jno
ss
dec
add
daa
fcoms
call
mov
cmpsl
jl
in
push
cltd
adc
pop
fdivrs
sbb
mov
sub
mov
adc
mov
outsl
adc
sub
or
xor
or
inc
pusha
jecxz
lods
sbbl
xor
into
dec
dec
adc
fcomps
or
xchg
pop
xorl
lock
lahf
cld
mov
bnd
aas
jge
dec
cld
push
jg
negb
sarl
adc
jb
push
mov
adc
pushf
and
outsb
repnz
enter
aad
in
notb
add
fadds
lcall
jl
mov
mov
mov
mov
bound
pop
or
cmc
inc
leave
test
flds
insb
sbb
sbb
or
xchg
es
jmp
push
outsl
sbb
pop
test
out
xchg
ror
mov
stos
shlb
mov
add
pop
lret
mov
pop
rcl
call
jae
out
out
sbb
call
add
dec
and
int
ja
inc
mov
add
dec
mov
stos
adc
mov
adc
jp
incb
adc
movsl
xor
movsl
call
test
push
js
sbb
jmp
fstl
cli
push
mov
loop
adc
add
loop
inc
fdivr
push
mov
push
add
mov
in
cltd
stc
xchg
insl
mov
cld
jbe
inc
adcb
cmc
popf
inc
mov
xchg
int
lea
add
add
cli
push
stos
and
jb
mov
scas
mov
movsb
jmp
pop
mov
lock
in
lods
add
and
test
into
add
sbb
push
pop
mov
mov
dec
jae
fimull
push
es
std
adcb
neg
cmp
cli
aas
pop
sbb
add
pop
mov
push
hlt
cmp
and
ljmp
mov
jecxz
fsub
mov
jae
add
xor
outsb
mov
push
cmp
or
dec
mov
aad
inc
sbb
inc
add
scas
iret
mov
inc
xor
pusha
cmp
iret
shl
pop
in
and
mov
test
and
jne
adcb
data16
cli
loop
add
push
mov
stc
pop
test
xlat
in
push
enter
or
inc
lds
gs
stc
dec
xlat
in
jecxz
xor
aad
pop
mov
std
and
aad
bound
int
hlt
icebp
clc
ljmp
push
fimull
mov
xor
clc
mov
fxch
jg
mov
ds
out
or
mov
pop
negb
xlat
push
ret
enter
addl
loope
add
mov
jp
int
mov
jl
push
pusha
jecxz
test
popf
dec
adc
xchg
shll
and
cs
enter
js
mov
movsb
aad
mov
gs
jae
cmp
scas
out
addr16
adcl
add
test
call
in
in
mov
or
mov
jmp
imul
stc
aas
je
cwtl
inc
pop
outsb
xor
jnp
dec
xchg
imul
or
jns
pop
or
dec
rcll
rolb
push
xor
nop
cld
scas
test
pop
fildll
sub
outsl
add
lock
test
jle
ret
dec
shl
leave
fs
dec
icebp
xor
mov
and
sub
fstps
cmp
sub
cltd
enter
in
xchg
jg
jbe
xchg
or
rclb
mov
fiaddl
les
adc
mov
jecxz
mov
xor
mov
cli
aad
cmp
pop
rol
leave
mov
xchg
aas
cmc
out
cwtl
jg
pop
test
call
pop
cmp
loop
dec
test
test
cltd
inc
insb
mov
insl
in
or
mov
pop
add
int
mov
pmovmskb
jnp
sti
add
inc
mov
bound
jmp
mov
cmp
mov
mov
gs
xchg
movsb
jns
test
out
adc
and
fsts
sti
aad
xlat
inc
das
adc
push
scas
xchg
push
dec
out
jbe
test
test
push
into
lods
vmwrite
jne
push
pop
aad
cmc
testb
jge
push
loopne
lods
ficompl
negb
inc
into
sti
adc
jo
cs
das
add
insb
scas
mov
adc
sub
ret
into
fs
jmp
inc
push
outsl
ficoml
lock
inc
sti
ljmp
je
dec
push
xor
cmp
push
popa
pop
mov
or
lock
jp
cmp
clc
mov
cltd
cmp
jb
scas
rcl
adc
sbb
in
mov
inc
add
ds
cmp
jp
push
das
cmp
push
adc
cltd
jo
sbb
pop
adc
cltd
into
sub
ret
inc
cmc
mov
mov
add
sub
dec
repnz
stos
mov
mov
in
cmc
mov
adc
jo
subb
addr16
push
or
sti
mov
mov
jne
out
addl
mov
sub
and
rclb
push
push
fucomi
push
jbe
lods
or
arpl
add
push
shll
enter
loope
inc
adc
lods
cmp
pop
outsl
lods
cmp
sahf
cmpsb
xchg
mov
test
gs
call
stos
push
pop
jne
rcr
push
mov
xor
pop
js
shll
pop
push
cltd
js
outsl
movl
and
scas
ljmp
adc
jne
into
or
fistpl
or
sbb
mov
fistl
loope
or
add
lds
jg
mov
mov
mov
xor
sub
mov
rclb
and
int3
sbb
daa
xchg
push
dec
jo
sbb
xor
cmp
pop
mov
and
lret
push
dec
and
mov
ss
push
mov
loop
sti
lock
mov
adc
out
call
pop
inc
dec
xor
push
and
adc
sbb
jecxz
push
mov
jg
pop
fimuls
jns
hlt
push
test
mov
loop
aaa
fisttps
fistps
scas
adc
inc
inc
jae
hlt
daa
inc
in
divl
js
sub
sbb
dec
outsb
jmp
mov
sbbb
sbb
adc
jg
out
or
push
or
pop
shrb
scas
mov
inc
arpl
dec
dec
lahf
mov
push
and
sub
dec
bound
lock
mov
iret
xchg
jae
pop
mov
imul
pop
ljmp
std
adc
je
or
add
mov
push
test
pushf
lock
mov
out
mov
aam
outsl
testb
out
mov
fldenv
negl
sub
daa
testb
pop
jecxz
scas
mov
in
daa
fsubrp
mov
jge
jb
out
in
pop
les
xor
or
dec
hlt
add
scas
shlb
dec
xchg
arpl
mov
addr16
push
adc
subl
test
adc
data16
std
pop
inc
add
dec
pop
add
and
icebp
lods
dec
pop
inc
iret
sahf
icebp
mov
icebp
lds
dec
push
dec
stc
fnsave
cmp
push
in
dec
lods
and
mov
iret
push
lds
por
daa
xchg
mov
add
insb
imul
ret
ret
movsl
xchg
popa
push
adc
sub
inc
push
ret
jae
fs
cmp
cli
jmp
stc
inc
ss
sub
daa
and
lods
inc
add
fstps
imul
mov
subl
push
fadds
ja
imul
aad
lods
cmp
add
lea
daa
subl
and
cld
sub
test
mov
inc
cmp
or
nop
pop
xlat
loope
xchg
in
aaa
mov
divl
sbb
or
test
jle
xchg
test
shl
dec
jae
jp
scas
mov
xor
xor
jne
mov
stos
or
and
add
int3
or
leave
aas
and
cmpsl
cmovg
jne
adc
mov
stc
stos
xor
cld
jns
ds
dec
mov
lea
and
subl
movsl
mov
data16
mov
loopne
insl
xchg
adcl
mov
mov
jecxz
sub
push
dec
cwtl
cwtl
jae
or
scas
fidivl
notb
loope
push
xor
loope
inc
lods
mov
scas
pop
sbbb
aaa
idivl
andl
pop
fstps
dec
mov
and
xchg
insl
ret
test
and
cmpsl
scas
sbb
and
xchg
frstor
push
jne
and
adc
sahf
lock
popl
mov
shrl
lret
fs
mov
and
jp
push
movsl
lods
jno
inc
sti
roll
jmp
icebp
aad
push
xlat
sbb
and
push
mov
out
inc
pop
je
cmp
mov
scas
inc
mov
mov
and
sti
xchg
idivb
xor
dec
sbb
gs
pushf
popf
push
mov
xchg
mov
clc
pushf
push
out
jne
mov
addb
sub
cmp
xor
inc
add
int3
and
es
mov
xlat
add
xchg
in
fdivl
hlt
scas
cs
dec
fdiv
leave
in
mov
push
daa
aad
dec
jae
cld
into
inc
mov
or
pop
cmp
popf
xor
pop
xlat
stos
mov
cltd
mov
lods
xchg
aam
sub
mov
xor
into
cltd
fwait
es
popf
jne
fwait
lods
jecxz
fistl
fsubs
lahf
shl
data16
movd
addr16
scas
add
sub
mov
dec
roll
xor
xchg
insb
cmp
jp
das
cs
lds
mov
aaa
cltd
xor
int
jnp
stc
push
push
rcll
and
mov
inc
popf
faddl
stc
or
cmp
lret
dec
adc
and
jge
repz
icebp
xchg
test
sub
in
xlat
push
fisubrl
and
add
orl
xchg
clc
das
sub
adc
dec
xlat
and
pushf
dec
inc
clc
xchg
frstor
push
push
cltd
xlat
mov
aad
cli
mov
xor
out
or
fdivs
in
mov
fs
push
aaa
mov
pop
rcrl
add
ficompl
loopne
ret
fwait
xchg
push
in
sbb
xchg
adc
mov
mov
rorb
in
in
out
inc
jle
add
in
add
adc
inc
mov
pop
lret
add
add
adc
ja
pusha
ja
shl
jmp
xchg
pop
inc
inc
jne
sahf
lahf
inc
mov
call
mov
dec
mov
flds
sub
mov
das
sti
subl
dec
in
sbb
mov
inc
cs
ja
lea
ss
push
add
cld
in
pushf
fsubs
cld
xchg
test
mov
mov
cmc
ret
mov
fistpl
icebp
sbb
jp
inc
outsl
cmpsl
inc
jbe
and
xchg
mov
loopne
enter
pushf
pop
jbe
xchg
sub
imul
xlat
ss
fisubs
adc
addl
cwtl
mov
mov
popf
dec
insl
in
pop
xlat
mov
pop
mov
sub
into
sbb
aas
leave
xor
sbb
cld
sbb
inc
add
repz
add
scas
adc
adc
or
repnz
cs
and
inc
mov
dec
fcoml
or
mov
pushf
add
das
movsb
das
ret
sub
mov
push
jge
mov
mov
jle
hlt
jmp
pop
roll
js
add
xchg
jg
ret
scas
dec
and
dec
arpl
xlat
fstps
mov
xchg
imul
outsl
or
and
data16
xorb
mov
adc
scas
mov
mov
push
bound
into
lods
inc
popa
mov
mov
xor
and
and
stos
mov
xchg
addr16
sbb
sub
std
sub
adc
test
xor
mov
mov
sbb
in
pop
and
cmp
sbb
pop
ds
jno
ret
fsts
adc
mov
repz
jcxz
dec
jae
or
fwait
pop
adc
int3
mov
mov
mov
or
dec
ret
push
dec
inc
xor
bound
pop
popf
cltd
pop
enter
das
cmpsb
insl
js
sbb
inc
push
xor
inc
fs
jmp
inc
pop
ds
cmpsb
jg
in
sti
movsb
mov
pusha
xor
in
dec
pop
fdivl
movsl
loop
or
xchg
mov
inc
pusha
jl
fdivrs
xchg
or
scas
insb
mov
sub
and
fmull
add
push
cmc
adc
or
or
jb
mov
movsl
mov
and
dec
cmp
jae
or
jne
lcall
mov
xchg
cmpsb
and
sub
imul
jne
shl
mov
add
data16
dec
jne
aam
movsb
push
adc
je
mov
push
in
hlt
icebp
add
int
and
std
ja
adcl
icebp
jg
in
pop
out
sbb
sbb
mov
xor
inc
jnp
xor
ficompl
or
cld
xlat
pop
loope
jle
adc
cmp
add
shl
sahf
imul
js
cmp
add
sbb
imul
pop
jnp
bound
movsb
aaa
sbbb
pop
adc
mov
mov
fisubl
arpl
jecxz
jo
popa
data16
out
xor
aas
ret
sbb
jp
cwtl
aaa
mov
mov
dec
out
lods
dec
fst
push
add
add
and
xlat
jo
scas
in
or
mov
xlat
lea
add
dec
push
mov
xchg
scas
add
pop
add
js
out
sbb
sbb
inc
and
out
test
dec
sbb
jns
xor
xor
sahf
ret
test
pop
es
pop
aad
inc
popa
insl
std
sbb
or
push
pop
mov
stc
add
leave
mov
pop
or
mov
insb
and
xlat
cs
out
mov
push
sti
lcall
push
mov
sbb
out
in
in
mov
push
adc
add
jmp
mov
cs
cmp
dec
mov
inc
jecxz
cwtl
pop
pop
ljmp
imul
xor
mov
test
clc
inc
in
cmp
xchg
subb
mov
cmp
xchg
in
xor
shlb
icebp
mov
cwtl
push
test
int3
gs
imul
xchg
bound
loope
sub
jge
sub
out
cmp
and
cwtl
push
mov
mov
mov
fucomip
pop
mov
dec
inc
rcrb
push
add
adc
cmpsl
test
and
daa
mov
popa
stos
std
loope
jno
testl
or
adcl
cmp
sub
shll
add
addr16
or
clc
sub
mov
lcall
jl
or
lahf
insb
call
xchg
cmp
jae
into
adc
in
xchg
inc
sub
mov
pop
dec
mov
stc
stos
sbb
js
pop
loopne
dec
fidivrs
daa
adc
push
or
xor
movsb
xchg
sub
stc
xchg
xchg
pusha
pushf
adc
mov
or
ret
decb
loop
sbb
push
js
into
cmpsb
scas
repz
lahf
scas
add
adc
les
add
pop
pushl
mov
mov
push
mov
pop
cld
nop
mov
cli
scas
lods
fldt
cli
inc
push
jmp
mov
das
add
dec
pop
mov
adc
into
pusha
mov
xorl
daa
mov
lds
pop
xchg
mov
lods
out
es
ljmp
imul
lock
ret
test
mov
inc
sub
adc
push
arpl
mov
mov
xchg
mov
cmc
push
jbe
in
pop
push
dec
dec
rorb
inc
arpl
jg
ss
jl
mov
mov
aas
and
cli
test
pusha
dec
xor
xchg
xchg
mov
xchg
movsb
xor
adc
pop
push
adc
mov
test
adc
into
stc
nop
push
fildll
inc
xor
push
lods
adc
mov
hlt
sub
push
es
push
mov
in
les
push
loopne
adc
mov
jmp
insb
out
xchg
add
sbb
fucomp
sub
aas
pop
clc
dec
cmpsb
adc
push
inc
sahf
fcmovbe
pop
fwait
pop
dec
mov
add
inc
addl
data16
fldt
stos
lock
lods
mov
lret
cmp
inc
jbe
mov
test
imul
or
jle
lods
sub
aad
fnstcw
loope
scas
sbb
rcl
cmpl
sub
shrb
lods
dec
adc
clc
and
inc
fisubl
cwtl
lret
into
sbb
enter
pop
imul
fst
nop
int
push
pop
cmp
push
pop
mov
add
shrb
out
test
jge
inc
into
ror
test
mov
xchg
in
sbb
jp
inc
add
mov
ficomps
mov
inc
aad
adc
mov
lods
jno
sbb
mov
scas
or
dec
and
mul
push
imul
in
call
lods
pop
sbb
xor
fwait
xchg
pop
adc
pop
jb
xchg
adc
lahf
and
arpl
cmp
cmpsl
or
xchg
mov
aad
sub
mov
aam
jbe
aaa
inc
mov
xadd
inc
std
fildl
and
int
jp
adc
pop
ja
aas
mov
fs
add
ret
call
std
test
push
mov
sbb
adc
loop
lea
shlb
out
jb
fstl
mov
fwait
sahf
or
push
and
test
adc
outsl
insl
cli
mov
xor
sbb
mulps
cmp
mov
add
cmp
js
fucomip
daa
lahf
inc
adc
test
or
sbb
add
out
int3
lds
jae
push
xchg
mov
xchg
das
sbb
mov
std
stc
pop
adc
cmp
stc
in
fucomip
inc
shlb
xchg
mov
lea
dec
out
sbb
stos
mov
je
gs
orb
imul
scas
sahf
lret
fbld
push
add
and
hlt
cwtl
leave
gs
xchg
nop
dec
ss
stos
jnp
aaa
aaa
test
jne
out
mov
mov
sarb
pop
nop
inc
cwtl
xor
jb
pop
mov
and
outsl
enter
cmc
mov
cmpsb
std
and
rclb
dec
mov
xchg
add
xchg
cmpsl
or
jns
fsub
je
outsl
or
movsb
in
arpl
fbld
mov
adc
adc
mov
mov
mov
jmp
ljmp
sahf
dec
and
adc
outsb
stos
shrb
cmp
push
or
mov
pop
ljmp
sub
sbb
xchg
pop
inc
js
dec
daa
cmp
adc
mul
jg
add
cmp
push
daa
rclb
mov
inc
pop
sbb
lret
call
dec
and
cwtl
inc
jmp
jp
xor
sbb
push
loopne
dec
loopne
fsubrs
inc
cmpsl
xor
push
jecxz
rclb
arpl
xchg
lock
data16
push
das
inc
inc
jb
sub
rclb
mov
ror
sub
imul
dec
sub
cs
dec
push
sbb
cmp
idivb
jb
imul
dec
adc
mov
xor
mulb
adc
dec
fcoms
in
xchg
cli
popf
pop
lcall
xor
repnz
insb
pop
mov
cmp
jns
and
xor
dec
jbe
push
mov
fnstsw
ret
iret
scas
mov
les
ret
add
push
sbb
fisttpl
mov
pop
ljmp
sbb
cltd
test
mov
sbb
insl
fidivrs
cmp
insb
test
sbb
rorb
cs
sbb
ja
jbe
pop
pop
jp
or
fldl2t
loope
popa
mov
lock
sbb
adc
mov
dec
dec
outsb
orb
ss
push
cmp
adc
neg
int
mov
mov
lea
lods
sub
jecxz
lret
int
mov
popf
push
jl
imul
test
js
adc
movsl
out
jae
bound
out
stc
jne
ret
adc
xlat
call
lahf
pop
stc
clc
scas
fmull
cmc
sti
mov
mov
pop
dec
stos
push
fsubs
ret
loope
or
push
call
inc
out
adc
iret
cmp
sub
push
push
push
fwait
mov
cmp
mov
cltd
nop
push
mov
jg
rcrb
jecxz
mov
sbb
mov
cmp
add
xchg
cmpsl
pusha
dec
adc
push
inc
pop
out
jno
pop
lahf
movsb
push
popf
lea
mov
pop
rcl
popf
push
in
mov
mov
gs
fildl
fwait
aad
sbb
imul
stc
lcall
mov
add
push
inc
rclb
stos
and
ficoml
xchg
das
cmp
and
arpl
out
fbld
pop
shl
aam
stos
push
pop
and
ret
cmp
pusha
or
loop
insl
outsl
js
cmp
inc
mov
fsub
and
and
jecxz
das
mov
imul
fs
mov
xchg
enter
aaa
and
fsubs
loopne
imul
fldl
fwait
stc
and
dec
sub
mov
pop
add
inc
jno
xchg
inc
mov
mov
xor
sbb
jb
fucomp
and
mov
fnstcw
push
adc
jb
shlb
inc
pusha
push
dec
add
xor
sbb
fwait
dec
xchg
mov
jge
addr16
lahf
xorl
ja
xchg
cltd
mov
pusha
lahf
sub
rorb
push
sbb
jg
or
xchg
mov
fmull
movsl
dec
loop
pop
dec
outsb
or
dec
dec
add
sub
rcrb
mov
pop
push
inc
xor
repnz
push
enter
repz
loop
loope
es
push
in
jmp
and
xchg
sbb
in
push
sbb
and
test
lret
pop
dec
xchg
xchg
popf
ret
xor
cmpsb
arpl
jno
push
xor
cmp
jno
sub
popf
sub
and
out
dec
mov
push
insb
mov
xchg
scas
iret
pop
cmp
test
inc
fldpi
add
xchg
xor
jo
xor
xor
adc
jp
pushf
push
pop
or
mov
push
lds
adc
pop
popf
aam
js
xchg
add
push
and
push
pop
stos
dec
and
mov
sub
push
and
je
arpl
test
aam
subb
xchg
sub
mov
or
cmp
sbb
adc
ret
cmc
imul
fstl
inc
stc
cmp
shl
test
mov
rol
dec
or
xchg
leave
test
imul
mov
push
pop
cs
mov
cmp
ljmp
add
push
push
add
jg
stc
or
imul
and
mov
das
xor
aas
xor
push
jne
lods
neg
cmp
aad
jg
sbb
mov
xchg
lcall
push
dec
rolb
mov
push
hlt
pop
jmp
push
mov
or
or
add
xchg
ja
rcll
mov
cltd
out
call
inc
lods
mov
add
mov
cld
sti
out
rclb
adc
cmp
cmpsb
add
popf
mov
jnp
lock
loop
rcll
or
addr16
xor
adc
adc
jp
jg
bound
cmp
dec
push
jmp
push
push
jmp
out
scas
das
mov
or
fistpll
jmp
cli
push
int3
out
or
notb
scas
add
sbb
shl
jle
dec
sbb
adc
scas
scas
xor
cld
cli
mov
cmp
cmp
arpl
out
sub
gs
aam
stos
xchg
mov
imull
ret
int3
mov
xchg
out
mov
jo
pushf
cltd
arpl
and
jns
xlat
ss
icebp
dec
push
nop
push
mov
jle
xchg
dec
cmp
ret
mov
aam
xor
stc
or
and
cmpsl
pop
ljmp
rcl
mov
push
inc
and
xchg
orb
popa
loop
mov
icebp
cwtl
adc
fdivrs
xchg
sbbb
xor
nop
dec
mov
jo
test
sub
cmp
inc
cmp
mov
push
mov
adc
aas
jo
cmovg
aad
inc
push
push
rcrb
xlat
dec
testb
out
mov
fcmovnbe
fsubrl
mov
xchg
test
sbb
mov
push
inc
lock
jbe
jns
mov
push
add
mov
mov
lds
lret
shrl
ja
nop
dec
pop
outsb
std
mov
popf
aas
bound
jb
mov
aas
sahf
push
out
in
jge
pop
pop
push
out
adcl
fidivs
popf
add
lea
loop
out
fisubrs
ljmp
xor
into
cmp
cwtl
xchg
adc
pop
push
cmpsb
outsb
mov
mov
push
or
jnp
lods
cmpsb
pop
test
cmp
fldenv
push
mov
jecxz
call
lea
sbb
rcr
out
adc
inc
daa
sub
jne
icebp
xchg
pop
or
insl
decl
inc
jns
cmp
and
add
sbb
adc
sub
rorb
cmpb
lea
lods
ss
pop
lret
stos
scas
scas
and
ffree
outsl
jae
jmp
push
lods
mov
push
cmp
and
pop
and
out
jne
ffree
lretw
test
push
dec
test
cmp
outsl
imul
mov
inc
ret
mov
mov
mov
xchg
pop
lock
mov
or
jns
and
mov
push
mov
fsubrs
mov
jmp
push
dec
lods
iret
cmp
pop
inc
xorb
and
xor
sub
jb
es
jb
xchg
cmc
adc
insb
dec
xlat
sub
pop
jg
int3
xchg
jge
mov
inc
enter
jle
push
sbb
mov
push
pusha
scas
jno
cld
testl
movsb
fisttpl
mov
sub
test
lret
pop
mov
ds
nop
dec
mov
loopne
ja
ljmp
pop
sbb
push
push
push
or
lret
shll
pop
jns
mov
lcall
ss
movsl
add
cltd
fimuls
imulb
sub
jbe
adc
sbb
je
push
mov
jp
out
pop
xchg
rcr
pop
call
aam
xor
cmp
and
push
mov
mov
fdivr
jo
mov
insl
and
mov
popa
inc
test
pop
jmp
jmp
std
mov
xor
sub
dec
pop
adc
mov
pop
sbb
inc
pop
mov
dec
cli
pop
rorl
lcall
jae
les
jle
lret
aam
call
movb
aad
pop
sti
popa
hlt
xchg
idivl
or
mov
dec
stc
lds
popa
imul
repz
push
loop
cltd
es
ret
mov
jle
mov
jmp
sub
cvtpi2ps
notl
cmp
dec
cmp
imul
mov
aad
pop
or
imulb
adc
ds
popf
test
pop
dec
in
movsb
push
xchg
jmp
or
push
dec
mov
inc
push
popa
in
cltd
mov
movsb
or
cs
or
jecxz
fidivl
adcb
subl
sbbb
sub
mov
roll
inc
test
cmpsb
loop
dec
xor
xchg
mov
mov
xchg
outsb
scas
pop
outsb
ficoms
cmp
fildll
subb
ss
loopne
test
das
shll
ret
imul
mov
insb
ljmp
pop
nop
push
mov
cmpsb
sbb
shl
test
rolb
je
push
push
movsl
ret
push
js
mov
addr16
add
xchg
aas
or
mov
xor
mov
dec
xchg
enter
adc
and
movl
fisubrs
test
cmp
lcall
xor
dec
mov
aaa
cltd
repnz
enter
pop
dec
out
in
jo
cld
inc
fists
ficoms
stc
xor
pop
or
outsl
cmp
imul
push
pop
lods
into
ficoml
jns
sahf
xorl
sub
jo
test
pop
pop
push
bound
cwtl
adc
xor
movsb
cmpsb
push
mov
inc
mov
dec
dec
or
or
int
insb
aam
cmp
or
xor
cmp
xor
enter
aad
cld
mov
jb
scas
pop
mov
test
cld
mov
pop
std
sub
inc
lcall
imul
mov
scas
add
js
or
into
inc
in
mov
mov
mov
lcallw
enter
fimuls
mov
loopne
push
pop
mov
popa
call
ja
in
pop
jbe
cli
xchg
sub
xor
cmp
sub
mov
in
test
sub
gs
mov
repnz
push
bound
xlat
lds
cmp
int
cmpsb
adc
mov
jae
or
dec
push
ja
in
in
lods
sub
fldenv
jns
mov
shl
imul
jnp
mov
cmpsb
mov
jo
add
int
inc
ss
xlat
adc
add
xchg
push
jl
cmp
or
xchg
das
xor
sbb
lret
sub
std
xchg
pop
cld
cmpsb
std
mov
inc
jmp
jle
mov
dec
or
or
mov
jge
jnp
push
inc
mov
pushf
mov
push
xor
mov
and
xchg
outsb
push
outsl
cmpsb
cmpsl
mov
jge
int3
rcrl
pushf
inc
pop
outsl
jg
mov
movsb
data16
mov
add
ds
aaa
sbbb
call
sub
add
sbb
outsb
aam
aaa
fimull
addr16
mov
push
fisttpl
adc
add
dec
cmp
inc
test
hlt
mul
ja
sahf
jmp
mov
add
xchg
push
or
or
movsbl
push
sti
inc
arpl
mov
sbb
in
psubsb
hlt
adc
mov
or
aas
bound
cmp
lods
mov
insb
movsb
cmp
adc
jo,pn
dec
fbstp
xorl
mov
jno
nop
or
daa
xchg
xor
mov
frstor
xchg
mov
ret
mov
or
push
jbe
lea
push
inc
in
fucom
stc
and
inc
sbb
les
and
lret
sub
scas
mov
or
inc
jnp
in
or
out
jg
mov
adc
xor
xchg
and
xor
sbb
push
imull
test
cmpsb
jl
call
mov
in
pop
sub
inc
push
cltd
cmc
inc
or
adc
push
sahf
jge
ja
cmp
cli
mov
mov
divb
push
mov
test
lods
pop
aam
sbb
ret
fnsave
mov
arpl
in
pop
ljmp
frstor
add
popa
add
aaa
rol
adc
insl
cs
sbb
rcrl
sbb
or
sbb
inc
inc
out
cmp
mov
and
mov
sub
inc
jns
mov
sbb
push
jecxz
jg
xlat
cmp
mov
adc
addr16
and
lds
mov
mov
xchg
cmpsb
or
xchg
cs
test
rolb
addl
insb
inc
test
repnz
xor
stos
jno
lret
aam
out
lds
dec
loopne
or
mov
push
fs
adc
mov
out
push
and
bound
xor
add
mov
test
jb
add
pop
and
ja
add
mov
insb
pop
cmc
out
js
in
lods
push
push
jae
outsl
ds
inc
scas
jecxz
mov
pop
fsubp
repnz
cmpsl
sub
das
sub
adc
mov
jmp
cs
or
cmp
jbe
adc
cmp
repnz
int3
leave
xlat
jle
imul
inc
xchg
add
jle
lcall
dec
push
jg
out
mov
jo
and
cltd
mov
pop
sbb
sbb
sub
mov
or
xchg
cmpsl
push
stc
ljmp
xchg
out
rcll
mov
mov
arpl
out
cmp
adc
pop
or
adc
add
sbb
leave
enter
xchg
sbb
push
adc
dec
or
add
sahf
in
movups
mov
hlt
out
mov
clc
mov
xchg
sbb
or
jno
add
and
mov
mov
pop
vmovss
adc
or
data16
out
out
popa
xor
jge
push
sarl
jo
mov
sub
int
das
sub
sbbb
cmp
dec
sub
xchg
incb
add
dec
jmp
mov
jne
out
mov
mov
add
and
xlat
out
fnstsw
push
adc
scas
push
sbb
call
in
push
dec
and
jnp
xchg
int3
mov
adc
test
mov
cmp
add
enterw
cltd
pop
std
push
push
out
iret
lea
ss
ljmp
les
adc
jle
lret
scas
ret
and
dec
xchg
push
xchg
push
test
out
push
pop
data16
jo
push
mov
xor
add
js
mov
cli
pop
xor
add
insl
enter
push
ficompl
enter
orl
mov
insl
sbb
push
sbb
adc
add
sbbl
cmp
popf
mov
lea
popa
ja
add
inc
in
cld
ret
pop
sub
xchg
loop
punpckhdq
mov
cmp
push
or
sub
pop
and
mov
sub
pop
inc
push
and
push
add
rorb
cmp
push
leave
in
adc
loopne
test
or
push
leave
push
mov
jg
sub
fimuls
jo
cmp
imulb
iret
lods
jb
add
sub
mov
popa
test
cmp
in
inc
cmpl
aad
rcrl
movsl
sub
cmpsl
pushf
pushf
call
mov
cwtl
and
xchg
rcrl
call
das
mov
mov
sti
clc
imul
cltd
fcomp
out
mov
push
pop
mov
rcr
lods
dec
inc
ret
hlt
shlb
or
jl
std
mov
xor
cli
loop
xor
andl
sti
enter
xchg
pop
xor
call
inc
mov
pop
cli
cld
push
rcr
outsb
cmp
mov
jns
ss
push
aaa
inc
icebp
mov
adc
pusha
imul
push
jecxz
test
jno
pusha
or
jmp
push
adc
pop
testb
adc
or
int3
or
xor
jg
push
jno
and
loopne
popf
inc
push
cmp
and
pusha
adc
js
jns
xor
movsb
lahf
and
nop
dec
rcrl
push
pusha
cmp
xor
sub
push
push
cs
xor
test
enter
movl
call
push
push
aaa
jmp
loop
xor
fldt
add
call
inc
cmovs
out
sbb
cmp
inc
pop
push
and
xchg
jle
dec
pop
scas
fsubl
fstpt
push
loope
push
cmp
cmp
xchg
insl
int3
fnstsw
bound
in
into
dec
imul
mov
or
fsts
jae
push
cld
or
cs
inc
sahf
sub
jno
xchg
lock
add
call
xor
mov
sbb
ret
cmovle
out
ljmp
idivb
icebp
repz
popf
ret
je
lcall
jmp
or
mov
push
lahf
xor
in
push
ss
fdivl
jle
jmp
clc
mov
adc
bound
adc
inc
imul
cmp
addr16
jno
inc
jno
out
xor
pop
add
stos
cmc
repz
rcrl
nop
and
dec
addl
mov
imul
add
scas
mov
cmp
cwtl
sub
jne
divb
mov
lahf
stc
jae
adc
repnz
movsl
fisttps
jp
out
xchg
xchg
pop
out
pop
jnp
loope
loopne
jb
mov
scas
pop
inc
shrl
pop
insl
cmp
fwait
insb
add
mov
push
mov
mov
and
xor
loop
push
cs
mov
fsubrp
imul
mov
cwtl
iret
fs
mov
lahf
jp
xor
push
dec
pop
push
into
jno
jbe
add
bound
stos
fxtract
push
xor
lock
pop
and
inc
mov
sahf
sub
pusha
xor
loop
clc
push
cmp
sbb
pop
stc
sub
mov
testl
int3
test
and
imul
dec
scas
sarb
lds
fwait
adc
pop
imul
orl
dec
fsubrl
xor
xchg
mov
mov
and
xchg
stos
adc
inc
pop
and
in
bound
inc
mov
faddp
adc
ret
rclb
xchg
mov
lret
add
sbb
sbb
repnz
aad
xor
shrl
scas
subb
in
xchg
dec
jecxz
loopne
push
cld
cmp
jmp
mov
jmp
out
push
or
fwait
out
and
xchg
sub
dec
fwait
es
jb
shlb
xchg
fistl
addr16
fmulp
pop
cmp
cmpsl
repz
xchg
cltd
loope
xor
mov
jb
lock
andl
scas
jle
xchg
xchg
and
push
dec
les
xorb
sbb
sub
inc
iret
pop
popf
dec
xchg
and
shll
xchg
pop
lds
push
xor
jmp
sahf
mov
loope
add
xor
js
push
sbbb
xchg
push
xor
xor
sarl
into
xchg
addr16
test
dec
pushf
mov
jo
imul
xchg
mov
pop
scas
sbbl
iret
sbb
fcomps
xor
and
jno
lods
div
xor
xchg
sbb
shl
mov
lahf
test
xchg
and
push
jb
pop
sbb
add
lock
push
inc
int3
idivb
fwait
pushf
lock
jno
cmp
dec
aam
movsb
mov
adc
into
flds
xor
pop
mov
int
cmpsb
mov
sarl
imul
inc
outsb
sar
int3
notb
mov
fstpl
xchg
or
fisubrl
xchg
push
pop
mov
xor
nop
and
loop
lcall
and
aad
dec
cmpsl
mov
mov
jg
into
sarb
pushf
adc
and
push
daa
push
mov
imul
pop
fadd
in
xor
mov
and
cmc
testb
ret
je
xchg
outsb
gs
je
lea
test
es
jo
aaa
sub
test
jbe
pop
addb
loopne
xchg
adc
xchg
pop
mov
in
popf
iret
lods
fstpl
ss
int
adc
dec
adc
mov
jb
adc
out
mov
xchg
xlat
sbb
mov
mov
sar
mov
mov
mov
and
mov
lcall
sub
mov
int
ret
movsb
mov
push
test
clc
faddl
push
mov
push
jb
cs
popa
cmp
call
daa
dec
ret
xor
sub
inc
xchg
add
out
daa
adc
jno
in
and
gs
ljmp
dec
das
imul
xor
cli
bound
and
and
sub
adc
shl
iret
and
xor
hlt
pop
popf
mov
loope
sub
add
incb
push
mov
movsl
add
mov
pop
mov
sahf
icebp
addr16
orl
pushf
add
lods
loop
add
in
pop
push
mov
jle
loope
out
popf
sarb
mov
pop
std
inc
sub
dec
aam
lret
es
cld
and
mov
jge
sbb
jecxz
lds
sbb
arpl
int3
cmpsl
dec
pop
inc
jne
fidivrl
lea
mov
inc
inc
xor
jp
mov
jne
rcr
jno
pop
inc
scas
mov
xchg
lods
dec
push
scas
in
fcomp
inc
nop
decl
lret
js
fnstenv
xor
add
jle
inc
sbb
cwtl
std
push
subb
jge
push
rolb
jbe
sbb
sub
pop
fidivrs
shl
pushf
outsb
fisubrl
fildll
les
or
push
push
mov
lock
inc
cmp
jno
push
xchg
push
cmp
insb
int
xchg
stc
lcall
add
insl
imul
stos
sbb
fists
or
and
fcoml
dec
int3
pop
cld
xor
jno
std
xchg
icebp
lods
scas
fidivrs
push
pop
in
sbb
xchg
in
das
outsb
aam
xchg
js
jo
dec
js
rcr
daa
addl
push
cwtl
leave
and
movsl
cmp
cltd
push
mov
mov
jne
fmul
push
fdivs
or
sahf
pop
inc
imul
bound
insb
ss
shr
into
stc
push
dec
mov
adc
adc
cs
push
call
add
addb
repnz
sub
clc
addl
lods
cmpb
fiaddl
jl
pushf
fisttpl
fdivrs
dec
mov
add
or
sti
pop
cld
sbb
in
es
sarb
and
push
in
push
fdivrl
xchg
cltd
pop
into
inc
mov
push
das
inc
out
sbb
mov
int3
cs
imul
or
mov
sub
push
test
in
outsl
pop
mov
inc
jns
les
mov
sub
sbb
adc
movsb
add
dec
enter
insb
out
addr16
mov
lods
push
test
jl
add
scas
clc
push
rcll
cld
leave
sbb
jge
sub
stos
mov
push
mov
das
pop
int
repz
xor
jle
sbb
in
dec
enter
sbb
test
pop
sub
jg
cltd
fisubl
pop
add
cmp
adc
stos
std
mov
ja
jmp
cld
or
dec
out
sub
jns
jns
inc
pop
cmp
fildll
movsl
jb
out
inc
scas
jmp
imul
and
in
push
xor
popf
dec
or
aad
xchg
jmp
hlt
int3
mov
arpl
pop
lods
cltd
rclb
pop
cmp
cmpsb
call
popf
jns
in
or
test
add
push
pop
scas
gs
test
popf
cmpsb
imul
addr16
cld
mov
mov
adc
outsl
xchg
fcomip
out
out
sub
jbe
inc
mov
inc
xor
fisubs
adc
test
out
sahf
testb
xor
push
push
mov
fidivl
lds
shr
mov
sub
xchg
mov
and
fwait
outsl
mov
pop
mov
ss
mov
xchg
mov
stos
js
clc
push
and
dec
inc
jbe
pusha
xlat
dec
cmp
adc
xchg
lahf
push
gs
cmp
sbb
mov
mov
xchg
ljmp
scas
pushf
mov
mov
repz
scas
or
arpl
mov
fistl
pusha
mov
cmp
or
pushl
rol
sub
daa
sub
cltd
stos
lret
into
xchg
sub
es
mov
pushf
sub
jge
fistl
xchg
jb
insb
lcall
das
das
int3
fnsave
dec
jno
fisubs
cmp
mov
call
add
pushf
in
clc
push
mov
test
call
add
subb
int
push
pusha
dec
fsubs
xor
sarl
inc
out
inc
es
movsb
xor
xchg
mov
jbe
mov
stc
or
ds
fsubrl
cmp
rorb
lods
sub
insb
out
leave
push
aam
mov
cwtl
xchg
ljmp
movsl
lds
adc
jbe
icebp
mov
push
movsl
mov
jo
aad
xchg
lods
lds
xor
jecxz
data16
div
nop
cmpsl
jbe
data16
iret
mov
dec
test
roll
dec
push
sbb
je
movsb
dec
jl
mov
loope
les
out
push
ja
addr16
fidivl
lcall
xorb
int
xor
out
stos
inc
and
mov
xchg
sub
cld
push
xor
int
add
mov
shl
lods
ja
cmpsb
out
jne
negl
and
mov
push
xchg
sar
inc
and
into
jo
repnz
mov
mov
shrl
inc
sbb
pop
jbe
inc
lock
in
cwtl
xchg
daa
lods
sbb
xchg
mov
int3
xor
pop
mov
mov
sahf
lcall
lahf
cmp
cmp
sbb
xor
dec
pusha
inc
fwait
loopne
jbe
repz
mov
subl
jmp
push
arpl
ret
pop
lcall
pop
inc
stc
clc
arpl
push
and
and
mov
inc
lcall
out
lret
mov
dec
std
out
enter
into
mov
mov
fs
jmp
negl
jge
pop
mov
cmpb
pop
sbb
push
lret
fwait
stos
push
mov
dec
or
adc
cmp
mov
outsb
pushf
popf
aad
cwtl
adc
xchg
jmp
jb
inc
inc
mov
jg
js
mov
insl
sbb
add
les
fwait
inc
pop
or
subb
push
xchg
lds
scas
mov
rolb
fwait
sbb
push
pop
out
xchg
xlat
std
sbb
mov
pop
xchg
lds
mov
mov
sbb
out
pop
add
and
fdivrl
adc
mov
shrl
pop
movsl
insl
into
xor
pop
test
lds
sbb
sarl
es
push
fldln2
xchg
cmp
outsb
pop
mov
adc
cmpl
aas
divl
adcb
jns
inc
jle
and
notb
test
clc
outsb
clc
insb
mov
push
mov
pop
dec
arpl
inc
aam
test
sbb
push
lock
clc
jbe
mov
fbld
push
push
dec
fs
loope
imul
push
mov
adc
popf
andl
sub
mov
aad
jge
aam
push
or
xor
jge
fs
nop
aaa
cmp
sbb
test
into
mov
jmp
popf
cmc
pop
int
push
cmp
add
das
jne
test
lods
mov
testb
dec
jae
cmp
xor
mov
lods
push
mov
sub
jge
mov
and
xlat
inc
inc
jo
pusha
arpl
sbb
ficoms
xlat
aam
aam
add
mov
sub
mov
sbb
pop
pop
mov
test
mov
dec
mov
xchg
add
mov
movsb
add
pop
adc
push
imull
clc
ja,pt
test
fs
jle
in
icebp
test
enter
xchg
sub
fsubs
add
lret
dec
pop
arpl
test
ljmp
pop
mov
pop
inc
andl
mov
mov
mov
roll
mov
bound
jmp
push
shlb
cltd
jae
inc
fdivrl
mov
mov
lods
repnz
xchg
pop
test
dec
push
rcl
lea
rcl
shll
in
pop
pop
fs
adc
pop
lret
pop
inc
dec
sub
out
scas
jle
push
cmp
psllw
jle
mull
stos
mov
mov
out
lahf
pop
hlt
xchg
insl
js
push
mov
ret
mov
xor
add
dec
sti
push
lods
popa
into
xchg
sahf
mov
lahf
repz
mov
dec
bnd
inc
pusha
inc
jge
jne
pop
fsts
jp
xor
pop
imul
mov
enter
stc
lahf
arpl
arpl
add
xchg
or
dec
test
pusha
xchg
fs
sub
adcb
sbb
mov
push
flds
and
push
iret
ret
cmp
fs
xor
cmp
enter
push
sbb
test
push
inc
mov
popf
mov
pop
mov
out
sbb
cltd
push
jnp
insb
cmp
xchg
or
cmp
mov
and
aad
dec
lea
and
sbb
jp
add
cmp
test
xchg
xlat
push
inc
mov
mov
cmc
push
cli
repz
sub
sub
imul
test
imul
test
and
das
aaa
arpl
lahf
ljmp
jnp
loop
arpl
lret
pop
mov
add
pushf
aad
lds
popa
gs
cwtl
adc
leave
mov
js
jl
sbb
fwait
ljmp
pop
mov
lea
xchg
fisubl
test
pop
hlt
fadd
inc
fs
add
add
jae
js
rcr
push
or
gs
stos
and
neg
fs
xchg
mov
test
bound
test
jb
dec
push
cmpsl
mov
and
push
mov
xorb
mov
xor
jle
xchg
add
decl
ret
hlt
fwait
xor
push
sub
add
cmp
mov
and
cmpsb
xor
cmp
iret
out
dec
xor
loop
xchg
pop
out
insl
jmp
add
insb
lods
mov
xor
mov
lds
test
nop
xchg
shll
fcoml
xlat
cmp
sub
ret
add
xlat
std
xor
xor
cs
sbb
imul
sbb
push
fnsave
out
jmp
sahf
fdivrl
mov
pop
loop
cmc
jae
sbb
and
aad
or
mov
lea
scas
mov
es
pop
cmp
nop
mov
pop
jnp
xor
mov
in
inc
mov
push
mov
inc
push
mov
loopne
sub
mov
jge
out
rorl
dec
mov
dec
jl
jge
cwtl
and
inc
mov
jbe
psubusb
test
inc
jns
or
jne
adc
push
xchg
adc
adc
mov
jp
dec
test
loopne
mov
jb
mov
push
icebp
lret
sub
push
insl
cmp
ffreep
insb
adc
insb
jle
mov
mov
lcall
test
imul
jmp
movsb
aaa
ds
nop
mov
pop
cmp
hlt
repnz
iret
cltd
fdivrs
cmp
push
jne
xor
mov
or
repz
nop
inc
dec
ja
xor
testb
icebp
mov
inc
dec
xlat
popf
jnp
outsb
mov
sbb
mov
jb
leave
inc
adc
push
je
xchg
xorb
out
out
iret
jbe
inc
enter
cmp
sbb
int
arpl
add
cs
mov
dec
jg
add
out
xchg
mov
shlb
popw
pop
jnp
shll
xor
cmpsb
inc
clc
inc
pop
push
dec
xchg
push
and
movsl
movsl
popa
mov
popa
leave
xchg
pop
mov
outsl
or
cmp
adc
inc
icebp
inc
add
mov
ja
out
test
test
pop
push
lea
xchg
push
int
cmpsl
fidivrs
pop
repnz
sbb
cmp
adc
hlt
lods
pop
pop
and
aaa
mov
data16
or
nop
dec
jo
fsub
cld
mov
add
jmp
pop
mov
mov
cmp
int
pushf
jb
into
mov
sub
and
call
fistps
or
pop
fs
mov
sub
mov
lcall
out
insb
sub
cmp
std
loopne
hlt
mov
sbb
adc
frstor
lea
pop
jne
and
sbb
mov
js
add
pop
cmp
imul
mov
or
jo
movsb
pushf
test
jae
mov
dec
fiaddl
stos
push
push
push
cmp
sub
inc
xlat
mov
cwtl
pop
mov
jg
pmullw
ja
test
pop
aaa
adcb
mov
mov
test
movsl
xor
insl
lds
out
pushf
adc
sub
leave
movsb
xor
cmp
andl
lea
std
mov
f2xm1
lret
cmp
repz
pop
jbe
xchg
fdivrs
cltd
scas
sub
add
clc
xchg
outsl
mov
flds
mov
xchg
insl
lock
leave
addb
outsl
shr
jl
add
cli
xchg
enter
sub
iret
aam
outsb
pusha
int3
jne
xchg
dec
int3
xchg
adc
sub
in
push
xchg
ja
rorb
fcmovnu
and
cmp
testl
ds
jbe
pop
mov
fs
leave
mov
dec
sbb
dec
jae
imul
mov
pop
mov
movsl
sub
andl
xor
scas
add
dec
and
ja
movsb
scas
loopne
mov
cmpsl
icebp
jge
adc
fdivl
pusha
mov
lods
pop
mov
repz
jle
in
repnz
outsb
or
or
sbb
xchg
push
pop
scas
addr16
jp
and
or
sub
popf
xor
roll
fnop
mov
adc
repz
in
mov
cmc
push
test
jp
and
scas
fmull
fisubrl
cltd
icebp
sub
mov
jbe
cmpb
dec
mov
aaa
ss
mull
cmpsl
mov
dec
pop
mov
stc
test
pop
into
sbb
ds
aaa
pop
adc
inc
add
ficomps
pop
inc
xor
xlat
mov
scas
pop
pop
fadds
cmp
aaa
lock
aad
and
push
xchg
sahf
xchg
cmp
and
div
jmp
pop
mov
cltd
fistpll
insb
call
mov
lea
fcompl
add
jb
cmp
jns
std
sbb
and
outsb
ficomps
add
ja
cwtl
xor
pop
push
andl
aas
push
mov
pop
mov
fisttpl
cld
ret
or
rcrl
int3
faddp
sub
fcoml
cmpsb
dec
mov
push
pop
mov
push
mov
xchg
mov
xorl
ds
imulb
and
repz
pop
pop
push
in
ss
cli
sbb
mov
jb
add
lret
mov
ficomps
mov
lods
and
inc
fucomi
xchg
or
adc
add
addr16
jno
or
repz
push
sub
out
loop
sbb
xchg
inc
test
lahf
jae
movsl
xchg
jle
fiadds
dec
aad
jge
movsb
adc
cwtl
or
leave
xor
ds
sti
mov
xchg
push
std
inc
nop
jg,pn
mov
xor
aaa
mov
loope,pn
mov
call
jb
push
test
mov
sub
stc
mov
add
jns
shlb
leave
push
sub
inc
aam
add
cmpsl
call
in
adc
in
aad
jp
xchg
fcoms
dec
das
cmc
aad
out
dec
cmp
movsl
insb
sti
test
inc
adc
jle
mov
js
sub
adc
mov
sbb
pop
mov
fs
test
dec
lods
adc
lods
int
mov
pop
ds
mov
jg
and
fucomip
inc
negb
mov
mov
lcall
pop
push
cmp
and
adc
sahf
add
push
jo
adc
jp
add
in
insl
pop
rorb
mov
and
cmpsl
xor
negb
and
jnp
add
cmc
mov
pop
mov
pop
cld
add
push
xchg
and
sbb
aad
iret
stos
pop
sbb
jge
repz
outsb
pop
ret
cmpb
jnp
or
cmpsb
adc
dec
mov
dec
movsl
addr16
mov
xchg
sti
mov
push
adc
rorb
adc
mov
aam
sbb
test
xor
add
ficoml
cli
add
inc
xlat
out
cs
cwtl
aaa
out
inc
shll
inc
das
jg
push
cwtl
cmc
pop
push
andl
idivb
addl
mov
push
test
pop
dec
js
pop
mov
aad
mov
cmc
and
sub
test
scas
xor
into
xchg
and
cmpsl
lret
into
fldcw
mov
xor
add
mov
xor
mov
cmp
shll
mov
sbb
dec
xchg
sahf
aaa
pop
and
mov
jge
xchg
hlt
shr
xchg
jo
xchg
mov
fstpl
cld
dec
and
pusha
addr16
test
rorb
jl
gs
outsl
push
inc
test
nopl
dec
jge
sti
jnp
cld
popf
push
call
loop
filds
addb
rolb
add
jne
mov
mov
sbb
out
in
push
jns
dec
dec
adc
mov
data16
xor
inc
jo
nop
mov
in
pop
mov
loope
stc
add
xor
and
nop
call
movsl
xor
inc
loop
push
int
popa
fstps
scas
in
and
push
ljmp
sbb
flds
push
shl
add
xor
cs
and
pop
jecxz
ja
mov
or
jle
sub
repz
jbe
hlt
ficomps
pusha
xchg
jb
aaa
test
jno
idivl
adc
es
out
cli
into
fbld
int
and
sbb
int
xor
aas
pop
arpl
test
lret
mov
jb
mov
ret
fdivrp
shll
fadds
cmp
cltd
in
arpl
cltd
test
movsb
aad
pop
adc
scas
movsb
push
cmpsl
insl
mov
adc
sbb
cmp
jns
stos
and
xchg
push
mov
jbe
pop
push
inc
xor
mov
pop
jl
test
or
xchg
jge
stos
cwtl
repnz
sahf
cmc
and
dec
test
iret
xor
mov
xchg
cmp
sbb
loop
pop
test
jl
sar
mov
minps
cwtl
sub
sarl
fcmove
or
xor
pop
jns
xor
push
ljmp
hlt
stc
mov
cmp
jp
pushf
je
push
pop
sub
push
add
cmp
fistpll
sbb
out
inc
sahf
fistpll
ljmp
cmp
mov
lods
push
push
mov
mov
loope
out
notl
fisubs
jge
cltd
int
clc
xchg
stos
test
dec
ret
stos
jmp
sub
insl
jnp
movsl
popa
push
movsl
leave
cmp
xchg
adc
js
lahf
cmpsl
xchg
pop
out
mov
imul
cmp
jb
shlb
and
ficoms
jp
mov
sbb
lods
test
xchg
lret
pop
xorb
cld
lods
xchg
xchg
dec
fidivl
xorl
loopne
pop
je
jg
imul
mov
inc
dec
pop
adc
jg
outsl
mov
decl
add
cmpsl
sub
gs
cmp
jl
adc
cmp
dec
inc
fsubp
js
push
dec
jns
addr16
xchg
lock
stos
fs
mov
stos
imulb
aam
into
test
jne
xor
int3
cmpsb
leave
cmp
js
xchg
orl
icebp
mov
mov
iret
jae
adc
out
dec
or
push
dec
incb
int3
shlb
dec
push
cmp
daa
sbb
push
push
inc
add
les
loop
mov
cmpsb
cld
inc
arpl
test
sbb
out
test
xchg
pushf
inc
xchg
adc
sub
hlt
int
pop
jmp
in
fwait
iret
jo
call
inc
sbb
push
mov
sbb
mov
adc
rorb
ja
jb
je
js
mov
cmp
or
or
iret
xor
sub
mov
test
xchg
je
stos
mov
call
andb
jno
xor
rclb
pop
pop
mov
xchg
test
jno
leave
inc
mov
add
jne
insl
push
leave
xor
negl
xchg
mov
dec
orb
dec
mov
adc
stos
or
jne
pusha
pop
inc
loop
gs
or
mov
int3
or
inc
cmc
sbb
clc
pushf
ret
test
data16
test
and
add
test
mov
sub
xor
pop
mov
mov
lea
mov
dec
ret
push
push
xchg
jge
pop
cmp
leave
push
xchg
adc
leave
dec
clc
outsb
adc
cmp
pop
mov
dec
pop
pop
cli
xchg
lea
testl
divb
cwtl
xchg
sub
mov
mov
xchg
xchg
adc
test
lock
push
and
pop
mov
sub
insl
sarb
xor
xchg
pop
xchg
adc
rcr
cmc
outsl
les
std
adc
jecxz
out
je
stos
dec
mov
sbb
pop
sbb
movsl
cmp
pusha
sahf
in
xlat
fwait
loopne
jp
dec
stos
icebp
js
mov
mov
sub
jo
adc
out
mov
aam
push
jecxz
je
clc
cwtl
mov
dec
gs
and
aad
test
fwait
or
sbb
subb
jns
push
mov
adc
fs
cmp
inc
mov
nopl
aas
shll
hlt
mov
stos
xchg
mov
or
sarb
sti
test
pop
negl
cmp
add
xchg
mov
pop
mov
dec
pop
mov
adc
ret
jb
pop
sub
pop
jmp
jb
jg
push
popa
test
dec
test
lea
xor
gs
mov
insb
mov
int3
lods
jmp
cmovo
outsl
rolb
or
add
hlt
int
loopne
imul
inc
mov
cmp
rcrl
dec
xchg
mov
adc
das
mov
sbb
dec
sti
lods
xor
pop
test
push
dec
xchg
or
dec
movsl
or
add
xchg
and
push
arpl
xchg
or
popf
popa
mov
fs
jl
cmpps
mov
dec
inc
xchg
in
enter
loop
adc
sbb
pop
cltd
mov
pushf
xlat
or
iret
or
call
cltd
lock
add
ss
ja
cmp
shlb
iret
rcl
pushl
inc
adc
icebp
push
and
in
stos
inc
cltd
lret
mov
jg
scas
jo
jae
int3
pop
flds
sahf
cmp
sarb
sahf
fdiv
clc
imul
mov
pop
xor
js
push
test
or
add
gs
jl
cmp
pop
cmpl
pop
cs
sub
sub
mov
cmp
mov
mov
add
out
mov
xor
push
shll
je
nop
lcall
popa
cmp
jbe
shll
push
mov
sarb
cltd
cmc
dec
xor
mov
jl
mov
mov
lahf
cmp
lea
push
adc
mov
adc
pop
or
clc
mov
rolb
push
notl
subb
xchg
out
xor
imul
mov
cmpsb
stos
push
dec
in
pushf
jbe
adc
fisttpl
cmp
rsqrtps
ret
mov
sbb
std
jg
call
pop
out
arpl
das
mov
dec
mov
jo
mov
pop
ds
cld
sti
scas
push
sarl
add
es
repz
mov
testl
xor
jp
stos
pop
cli
sbb
dec
ds
push
mov
roll
or
jo
sbb
sbb
in
xchg
dec
mov
jecxz
and
data16
enter
sub
push
stos
mov
lahf
andl
push
nop
lods
adc
mov
subl
mov
gs
fcmovb
adc
push
adc
push
movsl
mov
sti
or
or
xlat
xchg
repz
lods
jecxz
and
pop
mov
jns
push
clc
cmp
ss
add
push
rorl
cltd
xchg
push
dec
bound
lock
stos
subl
wrmsr
lahf
mov
aad
sbb
mov
push
xchg
sbb
xchg
pop
enter
jle
push
pop
inc
es
fwait
inc
stc
cld
dec
loopne,pt
aaa
arpl
leave
pop
lret
sarl
out
adc
enter
xor
adc
mov
xor
mov
call
and
xchg
in
inc
jnp
aaa
jp
mov
int
or
sbb
fs
stc
rcl
pop
jns
fwait
ljmp
repz
and
or
shll
lods
jmp
scas
dec
xlat
lcall
xchg
jmp
cmpsl
xchg
add
cmp
cmpsb
test
loope,pt
jge
addb
lds
jmp
and
pop
pop
aad
fnstcw
xor
xchg
jle
decb
jae
dec
jne
pop
negl
mov
mov
xor
mov
inc
dec
mov
mov
in
rclb
cltd
pop
jb
cs
adc
pop
cmpsl
insb
cmpsl
cs
stos
js
cli
adc
inc
dec
jmp
sbb
ds
adc
jl
cmp
sub
lcall
xor
flds
mov
sbb
and
sub
orb
jp
mov
pop
setbe
pusha
push
out
pop
shlb
add
mov
xor
into
clc
cmp
jbe
inc
mov
cltd
cmpsl
xchg
jno
scas
push
mov
fimuls
push
pop
je
mov
inc
gs
cltd
ret
sbb
sub
rorl
loope
jnp
sbb
mov
mov
mov
or
pop
iret
lds
repz
sub
or
sti
out
mov
pop
mov
push
adc
dec
mov
mov
or
xchg
cli
loop
or
clc
mov
dec
insb
hlt
iret
sub
test
imull
lock
sub
aas
inc
pop
sub
hlt
push
mov
popf
out
dec
arpl
stos
push
pushw
cmpsb
xchg
add
add
lods
xor
cmp
cld
pop
xchg
dec
inc
adc
mov
push
popf
sbb
push
testb
jecxz
dec
ds
imul
idivl
leave
or
mulb
sbb
into
movsb
pop
sbb
fbld
imul
xchg
js
dec
push
fisttpll
inc
xor
push
xchg
movsb
mov
mov
inc
mov
mov
int
xchg
pop
add
jno
mov
popf
add
pop
es
cmc
mov
xor
arpl
lods
xchg
xor
movsb
cwtl
int
sub
xchg
dec
cmp
pop
xchg
and
inc
jno
inc
cwtl
not
xor
aaa
cmp
xor
loop
sub
dec
mov
adc
jmp
cs
imul
pop
std
jbe
or
jle
call
push
inc
fstl
mov
sub
pop
loope
insl
addl
push
in
insb
xor
adc
movsb
xor
repnz
out
jle
insl
stos
adc
add
movsb
arpl
cmp
sahf
mov
stos
sbb
in
push
dec
clc
enter
aaa
sub
mov
repz
and
mov
jae
jle
jecxz
cwtl
mov
mov
pop
mov
loopne
mov
ja
aam
mov
test
inc
popf
sub
xor
and
mov
fisubl
sub
cltd
push
mov
pop
jbe
rclb
mov
pop
aas
add
out
into
mov
imul
lock
jge
jle
jmp
add
sbb
pop
in
out
xlat
sar
and
xchg
cmc
sub
test
adc
hlt
pop
mov
mov
sub
js
mov
fistps
inc
shll
sti
movsl
lock
movsb
js
pop
loopne
dec
or
es
stos
xchg
add
jno
test
xlat
out
out
mov
push
push
and
jae
pusha
test
add
std
cld
pop
in
pusha
pop
loope
adc
mov
mov
ds
aaa
sub
lcall
sbb
and
push
sahf
sbb
mov
movsb
inc
cmp
repz
inc
ja
add
cmpsl
push
inc
cmp
pop
sahf
sbb
enter
scas
or
or
jno
push
cmovnp
push
jge
lahf
xor
addl
test
popf
shlb
sti
xchg
lret
lret
xchg
data16
inc
pop
mov
out
xchg
mov
repz
scas
or
push
ror
push
dec
add
pop
jo
addr16
std
out
push
out
xchg
push
xchg
cmp
out
jl
or
jg
pop
ljmp
mov
imul
jmp
in
data16
dec
mov
fucomp
sub
mov
daa
or
or
sbb
es
jmp
adc
mov
rcll
sbb
mov
mov
jmp
les
add
mov
call
or
push
push
aad
mov
mov
mov
add
icebp
cs
test
es
sahf
lods
dec
lret
fiaddl
mov
mov
xchg
xor
repnz
and
rcrl
out
fildl
jl
sbb
mov
int3
arpl
lcall
push
ljmp
sahf
lcall
sahf
scas
pusha
dec
push
cmpsb
mov
dec
lcall
sbb
mov
and
mov
jge
dec
int
outsl
dec
inc
loopne
cmp
jmp
or
mov
adc
push
int
jge
fmuls
cmp
sbb
insl
mov
mov
sahf
jmp
test
lods
loopne
test
inc
fs
fistl
xchg
imul
mov
stos
push
pop
inc
add
pop
sbb
ret
gs
dec
mov
insl
xchg
pop
test
icebp
xor
pop
stos
movsl
inc
or
or
jo
jns
iret
pop
insl
cmp
lock
ds
xor
mov
dec
aaa
or
or
sahf
xor
mov
push
aaa
loopne
icebp
lds
fmuls
movsl
out
shll
out
scas
mov
adc
lcall
or
test
jecxz
shlb
mov
pop
mov
mov
push
or
mov
jmp
dec
mov
jno
sti
add
or
imul
xchg
arpl
sub
rolb
repz
xchg
or
adc
push
mov
dec
inc
das
add
add
add
out
cmp
jnp
clc
xor
xchg
popa
adc
scas
xchg
test
jmp
sub
cli
adc
in
mov
fcmovne
jmp
sbb
mov
pop
lret
sti
jbe
andl
xlat
movsb
mov
test
inc
sub
test
test
inc
pop
mov
mov
sbb
ja
mov
xchg
mov
adc
jecxz
std
aad
pop
and
lds
cmp
andl
js
cmc
test
cltd
cmpsl
mov
lods
pop
mov
subl
xchg
or
stos
and
inc
rol
push
lods
jb
insb
repz
sti
mov
in
pop
mov
in
insl
jg
cltd
les
daa
imul
pushf
dec
jecxz
xor
sbb
shl
arpl
xchg
cli
inc
out
xor
out
js
mov
add
inc
fdiv
fldenv
xlat
add
xchg
inc
push
and
les
lcall
stos
mov
xchg
nop
out
loope
inc
add
inc
rorb
cli
lret
cmc
pop
mov
mov
test
mov
andl
mov
fisttps
and
aad
arpl
leave
aad
jae
lods
add
xchg
fmull
cltd
jno
test
ds
push
push
push
scas
and
imul
push
xstore-rng
cmpsl
ret
cli
add
adc
sbb
lds
sbb
push
jle
push
outsl
push
sbbb
dec
insb
and
xchg
ljmp
jl
call
xchg
enter
inc
cltd
mov
and
stos
jecxz
out
mov
gs
adc
addr16
and
ljmp
int
mov
xchg
lods
push
les
push
lcall
and
int3
dec
fidivrs
inc
and
sarb
push
dec
fwait
cwtl
sub
jno
push
aam
fstps
push
mov
lret
adc
jne
movsl
xchg
push
lds
pop
mov
test
cmp
xchg
jns
mov
push
add
not
mov
sbb
add
xor
ds
cmp
jmp
dec
pop
stc
xchg
mov
aad
cmp
cmp
bound
jno
das
add
xor
sub
aam
jb
pop
cld
sub
mov
sbb
inc
and
fwait
adc
or
mov
dec
ret
mov
in
scas
xchg
mov
xor
mov
pop
mov
or
jbe
push
fcmovnb
mov
in
push
inc
sbb
pop
cmp
in
ret
mulb
push
insl
adc
pop
ret
jns
xor
push
mov
xor
popf
clc
pop
xchg
push
lods
and
lret
or
push
pop
cltd
popf
pop
dec
fidivl
lods
les
push
faddl
dec
mov
das
out
nop
loop
mov
iret
xchg
test
pusha
fwait
rorb
pop
and
pop
bound
int3
cmp
add
pusha
xchg
inc
std
sbb
dec
mov
jmp
push
ds
xorl
inc
fldcw
out
or
sbb
add
fiaddl
stos
push
xor
cmc
lods
mov
jge
xchg
and
pop
mov
lds
jae
lret
test
pusha
int
mov
jb
mov
push
or
cmp
cmp
xor
lods
adc
cmp
cmp
cmpl
xrelease
jg
mov
arpl
lods
cs
mov
and
lcall
fisubrs
sub
popa
lds
fstps
xlat
adc
scas
mov
mov
fdivr
cmp
dec
jnp
loopne
mov
test
lcall
sub
mov
dec
call
jnp
inc
push
cmp
pop
push
rcl
push
cmc
dec
pop
pop
jmp
icebp
xchg
imul
xor
and
jle
pop
push
pop
dec
sbb
enter
push
clc
test
out
dec
dec
out
inc
push
cmp
jns
cmp
aaa
push
cmp
cmp
roll
push
jge
popa
inc
out
and
mov
fistps
icebp
popa
xor
inc
cli
mulb
sbb
pop
scas
es
lds
aas
mov
mov
push
in
fs
inc
mov
arpl
pop
test
mov
xor
and
ds
lret
movsl
daa
lds
jno,pn
je
dec
inc
add
scas
lods
mov
inc
ret
or
loope
jge
jae
call
inc
call
cs
sub
movsl
imull
pop
dec
adc
ret
cmp
out
adc
outsb
mov
jle
adc
clc
cmc
inc
inc
loopne
jmp
mov
in
sub
cmp
jno
inc
fs
movsl
out
loope
and
jae
cmpsb
cmpsl
sbb
mov
sarb
and
jg
daa
sub
xchg
data16
sbb
push
and
cmpsb
rcrl
push
inc
lret
jle
jl
mov
adc
inc
and
sarb
cmp
ret
add
xor
ljmp
xor
dec
outsl
adc
mov
cmpl
sbb
ret
pop
mov
or
jnp
shrl
and
cs
mulb
xchg
mov
pop
in
mov
or
xchg
push
and
xor
test
lds
sub
lods
inc
dec
or
sbb
or
ss
out
adc
dec
shl
test
or
mov
pop
sahf
and
cld
cltd
imul
cmc
std
and
cld
xor
fwait
jo
or
or
sub
or
adc
out
and
push
xor
lea
adc
jg
sbb
mov
and
mov
cld
xchg
lock
mov
int3
in
movlps
into
and
sti
aas
inc
push
out
mov
lods
or
and
cmp
test
xor
int3
jmp
or
lods
pop
cmp
add
mov
subb
jg
js
push
or
or
fistpl
loop
push
aam
sar
and
subl
sbb
push
pusha
cwtl
mov
flds
sbb
push
adc
xchg
enter
sub
aaa
jno
ss
or
jecxz
or
out
mov
mov
mov
cmp
test
gs
shlb
dec
sbb
imul
jl
testl
insl
adc
in
cmp
ret
mov
sub
xchg
jge
mov
enter
pop
cmp
pop
jecxz
sub
jmp
xchg
push
sbb
test
xchg
mov
ds
xor
ret
sbb
sbb
movsl
lods
aad
sarb
xchg
in
mov
sub
mov
jne
repz
jae
in
inc
ds
stos
pop
sub
mov
jle
adc
add
pop
pop
mov
inc
sub
xchg
cmp
inc
movsl
cli
jns
aam
cld
or
ss
lods
lea
nop
into
shlb
push
repz
ret
xchg
push
cmp
mov
sbb
outsl
fs
pop
loopnew
inc
sub
ret
dec
fnstsw
aaa
pop
test
in
data16
inc
out
lcall
loope
insb
sub
mov
shll
jo
shlb
cmc
imul
scas
xchg
out
pop
mov
push
insl
outsb
shll
roll
fwait
jcxz
xor
mov
xchg
add
popa
cmp
shrl
mov
loop
adc
jns
sub
cmpsb
jno
adc
dec
filds
xor
nop
add
ret
sbb
mov
or
jne
call
dec
in
pop
in
in
jo
loopne
mov
mov
iret
les
aam
lret
add
je
add
pop
je
stos
dec
xor
fists
sbb
lock
sub
xor
ret
int
xchg
inc
andb
fmuls
push
scas
inc
lea
jb
xlat
jecxz
pop
jl
lea
insl
mov
lods
xchg
cmpsb
pop
jmp
xlat
inc
nop
push
cmp
scas
jp
cwtl
mov
push
mov
aad
mov
dec
ja
loopne
inc
cwtl
roll
cs
mov
pop
adc
jge
cmpsb
or
je
cmp
mov
cmpsb
test
fisttpll
leave
dec
test
pop
add
sub
mov
add
jnp
in
xchg
aas
push
cmp
imul
fsts
inc
lods
mov
xlat
shlb
sbb
and
jbe
lods
xor
lds
lock
stos
mov
adc
lods
pop
aad
dec
or
cmpsb
add
mov
push
mov
push
lds
mov
fdivrp
cmpsb
add
sbb
test
arpl
dec
mov
sub
jae
lock
mov
dec
shrd
cld
xor
sub
loopne
jo
mov
xchg
arpl
clc
roll
test
dec
mov
or
mov
fidivl
shll
pusha
mov
or
imul
lret
dec
push
mov
rcl
arpl
fwait
mov
xor
and
push
popf
out
in
cmp
outsb
shrb
mov
mov
push
cli
sbb
aad
fldcw
jmp
mov
fs
cmpsb
sbb
inc
add
pop
inc
cmp
sti
inc
mov
dec
and
out
pop
shrl
in
jl
sub
out
adc
push
xchg
mov
std
pusha
gs
jmp
sbb
cmp
std
add
inc
or
pop
cld
jno
push
lea
imul
loop
jno
add
push
stos
aas
rorb
data16
js
inc
mov
movsb
push
arpl
pushf
mov
int
insl
insl
aam
cmc
sbb
inc
mov
dec
mov
loope
or
outsb
and
add
dec
das
sub
das
mov
dec
push
nop
sarl
testb
push
pop
leave
mov
adc
pop
xchg
stos
pusha
ja
rolb
inc
out
jmp
in
int
pop
subb
inc
lahf
stc
ja
push
out
loop
add
movsl
insb
mov
add
push
cwtl
cli
xor
pop
pop
js
mov
inc
mov
xchg
fsts
jb
shlb
mov
mov
lock
dec
adc
fcompl
adc
imul
sub
xor
jp
mov
fs
fdivr
ret
sub
or
shr
xchg
outsl
xchg
loop
aas
xchg
aam
dec
scas
jno
int
and
repz
lock
mov
ret
sub
lea
ret
dec
push
fstl
jl
xor
xchg
add
in
push
xor
notb
scas
dec
cmp
adc
xchg
mov
aas
cs
mov
xchg
mov
addr16
jle
jne
je
mov
decb
mov
dec
stos
imul
mov
or
sub
push
pop
out
clc
mov
mov
je
xchg
adc
jg
or
test
sbb
pop
mov
pop
outsl
lcall
add
arpl
inc
jle
or
mov
decb
xchg
sti
out
enter
or
inc
sbb
aam
pop
or
ljmp
rcr
test
mov
int3
loope
adc
int3
push
cmpsl
inc
xchg
subb
lea
and
jo
jp
xchg
cld
sub
cmpsb
jge
stos
adc
popf
cld
cmp
in
xlat
cwtl
les
cmp
pushf
pop
fsts
xor
xchg
adc
jl
ss
repnz
adc
xchg
mov
mov
lea
mov
mov
pushf
adc
and
xlat
shrb
mov
jno
mov
inc
lea
ret
adc
gs
adc
popf
rcrl
and
mov
faddl
add
push
mov
mov
nop
jle
gs
jns
sub
insb
add
xchg
insb
sti
leave
movsl
jmp
dec
dec
dec
andl
popa
movsb
fdivl
sbb
in
and
pop
add
adc
cmp
std
xchg
inc
mov
or
repz
adc
mov
aaa
ret
jmp
ret
daa
cld
scas
or
add
in
in
das
adc
mov
inc
ljmp
insl
jne
sbb
pop
loopne
mov
popa
bound
lea
xchg
loope
inc
pop
cld
or
jns
cs
inc
loope
ss
pop
call
add
sbb
lret
arpl
mov
push
cmp
push
pop
xchg
pop
or
shlb
xor
shlb
into
je
subb
int
rolb
rcrl
repz
mov
jo
fistps
xchg
mov
cmpsl
cmp
mov
test
out
push
xchg
lods
int3
fists
sbb
insl
mov
or
jb
push
or
xlat
into
add
jo
mov
andl
mov
dec
adc
ret
mov
cli
or
shrb
movsb
fmull
or
add
sbb
jmp
pop
call
ror
cmp
lods
mov
movsl
xor
xchg
push
jge
imul
or
xor
insl
dec
mov
cs
iret
sbb
mov
out
aad
ret
inc
and
std
mov
adc
pop
jecxz
ljmp
pop
cmpsl
inc
mov
flds
xchg
pop
inc
inc
fs
push
mov
sub
push
sbb
and
int
mov
subl
sub
inc
adc
or
icebp
xorl
lcall
push
sbb
mov
inc
lret
mov
add
and
stos
and
ret
jg
ror
pop
aad
xchg
xor
aam
or
fistpll
sub
hlt
xchg
dec
pop
jbe,pt
adc
sub
sub
or
xor
and
sub
pushf
cli
repnz
inc
out
cmpb
xchg
inc
xchg
fimuls
sbb
adc
fcompl
cmp
fildl
adc
sbb
aam
inc
cmpsl
sub
mov
cli
dec
in
inc
movsl
int3
ds
add
sub
sub
xlat
outsl
lret
sbb
jns
xchg
or
mov
imull
xchg
or
push
adc
adc
sahf
shll
xor
sbb
cmp
gs
mov
mov
pusha
sahf
inc
add
sbb
repz
mov
adcb
dec
fsub
lods
xor
dec
inc
es
push
jb
dec
inc
pop
sbb
push
push
mov
sbb
in
sbb
shl
mov
cltd
ds
fwait
loop
les
push
fcomip
xchg
cmp
sbb
testl
hlt
or
push
repz
cld
xor
das
sub
jo
mov
push
clc
and
movsb
loop
dec
int3
pop
and
jmp
adc
inc
ja
or
and
dec
xchg
aad
outsb
or
clc
cmc
mov
mov
inc
add
add
lock
xor
out
mov
in
add
mov
ja
add
bound
mov
test
loopne
adc
mov
inc
lahf
das
fcomps
mov
cld
dec
push
sub
out
dec
fs
push
and
cli
inc
or
rorl
mov
leave
popl
sub
dec
aaa
nop
test
js
roll
dec
les
mov
xor
mov
push
ret
jp
sbb
les
imul
in
lahf
imul
das
push
test
xchg
bound
in
call
push
jnp
xchg
and
and
outsl
xchg
je
push
push
out
sbb
aas
loopne
loop
daa
mov
enter
add
sub
test
nop
cmpsb
jno
mov
adc
add
pop
in
lods
fildll
or
int
mov
push
jmp
sub
cmp
into
aad
mov
cmp
out
lea
jg
cwtl
outsb
xlat
faddl
test
cmc
pop
cmp
lock
int3
or
mov
loop
jl
rcrb
arpl
repnz
and
xchg
or
or
iret
cmp
imul
pop
adc
push
push
mov
in
inc
fiaddl
dec
xchg
inc
lret
sub
push
pop
addr16
ret
shll
cs
call
fiaddl
xchg
mov
shlb
cmp
cmc
sti
pop
pop
sub
inc
lods
mov
jge
lret
inc
jo
mov
adc
pushl
je
clc
call
xchg
cwtl
push
push
enter
dec
fcoml
and
fcmovnbe
jle
xor
adc
cltd
pop
push
into
push
inc
push
jnp
rcrb
push
idivb
cmp
call
sbbb
sbb
cmc
sub
mov
enter
rolb
xor
ja
sub
xchg
xor
and
cmp
cld
std
out
mov
stos
push
xchg
mov
jmp
sbb
dec
fcoms
add
ror
xor
inc
jl
pop
pop
cltd
in
arpl
dec
insl
leave
test
pop
popa
mov
test
pusha
xchg
fcomi
push
popf
pop
xor
fstl
loope
fcoms
sbb
int3
xor
insl
test
jb
in
and
es
sbb
xor
call
xchg
outsb
inc
pop
imul
in
sub
data16
imul
into
dec
mov
ja
out
sbb
ds
pop
xchg
call
rcll
jae
testl
cwtl
mov
sbbb
stc
lock
add
sbb
jns
decl
dec
lds
cwtl
xor
and
push
xor
mov
movsb
sti
inc
mov
or
mov
stos
dec
shll
sbb
push
movd
cs
jns
leave
out
scas
pop
sbb
push
ljmp
and
pop
mov
in
out
fistpll
rcrl
pop
jmp
adc
mov
lock
jle
ja
sbb
push
mov
sub
pop
inc
idivl
fimull
hlt
outsl
sbb
dec
lahf
mov
movsl
lods
jge
jecxz
push
mov
fcmovnbe
stos
int
dec
jmp
nop
add
add
jno
add
sarb
jae
pop
das
xchg
jno
push
mov
sub
or
xor
addr16
xlat
mov
xor
popf
inc
mov
stc
imul
std
test
add
xchg
add
push
fxch
cs
xlat
jo
jge
dec
xchg
aad
pop
and
fdivr
ffreep
xchg
push
xchg
cmpb
ljmp
paddusw
ficomps
sbb
mov
out
sbb
jg
mov
loop
loopne
jmp
sbb
mov
sub
dec
lds
arpl
sahf
dec
dec
pop
outsl
ljmp
xor
pop
mov
adc
je
sbb
jecxz
repnz
jne
aaa
pop
les
adc
push
push
cmpsb
icebp
and
sub
or
mov
lahf
mov
dec
dec
xchg
jbe
jbe
push
data16
dec
je
push
ja
and
sub
or
in
fiadds
sub
jne
adc
push
or
icebp
in
roll
fsubrl
jle
adc
in
popa
add
flds
sti
pop
add
les
pop
gs
les
push
rcrb
shrl
mov
or
push
cs
adc
repnz
and
push
jle
out
and
enter
jecxz
cmpsb
in
jo
dec
push
lods
sahf
in
jle
sbb
lret
insl
test
dec
push
inc
ds
sbb
stos
loope
gs
mov
cltd
mov
in
sub
pop
push
jo
and
cwtl
jb
sub
add
jp
mov
adcb
lea
out
xchg
sarl
lds
or
int
sbb
and
lock
xor
stos
dec
inc
in
cli
jp
push
pop
mov
push
cmp
pop
sub
insl
jno
mov
std
xor
add
xor
fstps
dec
data16
mov
in
sti
stos
fmuls
jg
mov
sub
jg
roll
or
in
adc
xchg
loopne
into
sub
lret
inc
xchg
clc
outsl
mov
pop
mov
scas
mov
mov
imul
imul
push
inc
out
je
arpl
gs
xchg
ret
jbe
xor
jo
es
cmp
xchg
cmp
inc
in
sub
test
jmp
jns
pop
js
mov
jne
fisubs
mov
jnp
ds
jo
mov
faddp
fsin
pop
aam
dec
fwait
pop
xor
lea
mov
mov
cli
in
dec
dec
mov
out
fdivrs
push
inc
stos
dec
push
jbe,pt
ret
xchg
mov
pop
sub
lahf
leave
popf
push
push
inc
inc
mov
ret
cmp
sbb
aam
insl
jmp
insl
adc
scas
out
adc
jno
int
or
sti
lcall
mov
idivl
fldt
mov
ja
test
sub
fcmovnu
push
xchg
fbld
jge
and
ret
test
add
je
jae
inc
aam
jnp
cmpb
sub
mov
rorb
fistl
fistpl
add
sbb
jae
add
pushl
and
xorl
ffree
push
aad
adc
pop
jecxz
and
cmpsl
daa
pop
adc
test
and
addr16
add
inc
inc
dec
arpl
cltd
xlat
mov
push
or
pop
add
cmp
xor
ror
and
fildll
dec
xor
ss
mov
inc
jmp
lret
cmp
andb
pusha
adc
movb
sub
mov
jecxz
pushf
mov
xor
popa
js
cmp
loope
outsb
mov
outsb
xchg
out
gs
adc
cwtl
or
test
sbb
and
stos
sarb
mov
cli
add
cmc
adc
xchg
popf
fnstcw
pushf
leave
inc
xchg
aam
adc
mov
addb
sti
mov
or
fisubs
mov
mov
sahf
addr16
and
mov
jns
imul
mov
cltd
mov
xchg
imul
xor
mov
add
out
scas
nop
jnp
jmp
fisttpll
cmp
fscale
cmpsb
add
loopne
sub
xor
and
cmp
test
fmulp
mov
jno
cltd
jl
leave
loope
shrl
imul
cs
sbb
insb
jl
aas
iret
and
mov
sbb
adc
inc
lds
repz
cmp
pop
adc
dec
aad
out
pushf
mov
push
jecxz
mov
stos
jmp
mov
std
aad
into
xchg
aas
xor
inc
das
jns
cmp
mov
outsl
dec
aad
lods
int3
mov
and
movsb
arpl
adc
stos
mov
mov
jbe
add
inc
ret
mov
dec
ljmp
cmpsb
mov
jae
das
in
or
or
test
ja
inc
jns
dec
push
xchg
xor
add
loop
add
iret
int3
std
mov
fdivs
dec
aas
orb
cmp
leave
cmpl
jl
push
jmp
dec
leave
repz
fidivrs
imulb
or
pop
pop
or
cmp
fs
jp,pn
pop
fs
aas
mul
negb
push
adc
xchg
hlt
clc
or
inc
fsubp
gs
mov
mov
mov
xchg
dec
sbb
daa
mov
mov
loop
cmc
push
scas
inc
or
movsb
rcl
arpl
pop
ret
mov
inc
push
in
sub
mov
fiaddl
and
cwtl
mov
pop
dec
cli
ja
int3
and
jmp
xchg
push
fs
dec
sbb
mov
notl
jge
fadd
lret
mov
push
push
pop
aas
jnp
sti
jb
out
jno
add
insl
jle
out
push
cmc
fnstcw
les
cld
mov
lret
div
int
push
dec
stos
fwait
clc
push
scas
std
inc
xor
lret
inc
sub
dec
mov
push
push
ret
fs
push
mov
xchg
jecxz
movsl
rorw
inc
sub
dec
inc
into
mov
add
pop
xor
inc
fistpll
fbld
mov
mov
icebp
dec
push
sbb
and
in
dec
test
test
cs
pop
repz
lahf
adc
xorl
insb
mov
imul
mov
fs
fsub
cltd
cmp
test
aam
xchg
sahf
xorb
cmpsb
xor
mov
jecxz
xchg
dec
and
subl
aad
mov
jnp
add
pusha
mov
pop
xchg
add
fbld
pop
xor
xlat
and
ljmp
push
lock
leave
test
loopne
arpl
pushf
jo
movsl
inc
fcmovnb
pop
pop
sub
inc
iret
mov
inc
mov
lret
aam
push
aam
lods
int
or
arpl
daa
fldl
inc
pop
mov
push
mov
stos
jne
jg
mov
mov
ja
js
cwtl
dec
xchg
int3
sub
aas
cltd
xor
mov
push
sub
mov
shl
lret
sbbb
xchg
pop
ljmp
push
js
lret
popf
mov
mov
dec
mov
aas
xchg
in
mov
mov
adc
adc
cmp
test
movl
je
mov
test
and
fwait
daa
sbb
mov
fsubr
and
test
icebp
pop
out
negb
xchg
repnz
pop
add
push
lods
jle
jl
into
dec
leave
dec
add
loope
cmpsl
add
lds
ds
mov
pop
loopne
mov
shlb
cmpsl
fdecstp
inc
outsb
and
adc
lock
pop
dec
adc
enter
push
test
lods
inc
scas
sub
loopne
mov
loope
add
out
and
sbb
out
or
int3
sbb
mov
add
outsb
nop
and
orb
hlt
inc
xor
fs
xchg
in
call
nop
loopne
xchg
and
mov
sbb
mov
ficomps
dec
addr16
in
dec
sbb
incl
loop
xchg
dec
dec
scas
fiadds
mov
mov
dec
mov
negb
xor
lea
fistpl
dec
fidivrs
adc
xchg
pop
jno
pop
subl
mov
xor
mov
enter
inc
sbb
sub
ss
fcomps
push
dec
ret
xchg
xchg
out
and
push
add
dec
adc
add
pop
xchg
sbb
adc
and
xchg
push
or
mov
push
lret
push
sahf
sbb
xor
inc
xor
pop
mov
mov
and
ljmp
lock
or
out
mov
jnp
and
mov
rorb
cmp
outsl
fisubrl
mov
push
jl
lock
inc
inc
out
ja
sahf
fisubrs
les
scas
out
sub
jae
popf
iret
cmp
jns
imul
cwtl
push
dec
ljmp
xor
pop
mulb
fsub
sarl
sub
sub
mov
jmp
gs
aaa
sbb
pop
adc
movsb
scas
cmp
cmp
cmp
jmp
mov
loop
pop
cmp
fstpl
xor
pop
sub
mov
movsb
add
adcb
xlat
fdivr
fbstp
outsl
ljmp
xor
sbb
out
repnz
outsl
test
pop
mov
out
popa
pop
aam
rorb
dec
jb
pop
or
rorb
push
sti
inc
jg
mov
inc
outsb
and
dec
test
push
dec
daa
scas
dec
in
cmpsb
dec
mov
add
pop
or
or
int
or
xchg
jno
adcb
xor
test
je
stos
pop
sub
pop
rcll
pop
test
push
mov
pop
out
popf
mov
jl
test
jecxz
jp
adc
add
lcall
xor
mov
rorb
xor
adc
push
sbb
push
jl
push
dec
jns
adc
ret
mov
cmp
sbb
jl
bound
adc
in
call
mov
lods
test
xchg
lods
jns
test
mov
in
adc
cmpsb
call
mov
std
xor
add
nop
mov
stc
fnstcw
test
data16
cmpb
push
test
xchg
sahf
push
loop
jb
call
sbb
scas
in
out
mov
popf
das
imul
stos
xchg
cmp
jbe
out
in
cli
cmp
push
dec
xchg
popf
push
jmp
or
scas
std
and
pop
insl
lret
lea
fcoms
aas
jle
push
dec
dec
rclb
leave
cmpsl
in
sbb
jbe
inc
cmc
add
sub
mov
insl
sbb
fiaddl
icebp
mov
inc
inc
push
push
fucomi
daa
jge
out
pop
das
addb
mov
push
adc
cmpsl
sub
leave
fcoms
sahf
lds
pop
lods
adc
repz
int
mov
ljmp
je
call
dec
daa
mov
aam
adc
cli
mov
jnp
or
ss
fcompl
std
mov
sub
inc
movsb
dec
fsubrl
jg
push
inc
mov
imul
inc
movsl
pop
add
fstpt
push
test
iret
shll
in
pop
nop
mov
test
sahf
xchg
loope
mov
es
push
inc
jl
testb
bound
xchg
fs
clc
dec
pop
stc
shll
adc
pop
movsb
and
jno
push
push
out
loop
je
xchg
pop
cwtl
loop
xchg
scas
mov
shl
mov
in
add
stos
outsb
shrl
dec
add
push
sbb
pop
inc
pop
or
pop
cwtl
dec
sbb
push
sbb
cmpsl
cmp
cli
cmpsl
lret
cmp
push
mov
fidivl
sbb
test
ficompl
movsl
mov
pop
xchg
ss
push
push
rorb
sbb
pop
aam
lods
adc
lods
mov
call
dec
fstl
sbb
add
push
jns
call
jg
fisubrl
mov
fincstp
inc
test
test
leave
in
mov
adc
adc
jl
fisubrs
inc
lcall
das
mov
fwait
sarl
inc
mov
cmp
jecxz
jne
iret
inc
lret
out
js
mov
cmc
jecxz
mov
mov
shlb
adc
xor
mov
es
pushf
stos
dec
test
setge
mov
stos
jmp
lds
mov
call
addl
arpl
hlt
ljmp
sbb
int
mull
repz
lret
dec
add
jmp
sub
movsl
std
xchg
ja
jg
mov
mov
ret
jb
push
push
mov
testl
test
movsb
mov
fs
popa
sbb
bound
je
jmp
adc
outsl
ficoms
addr16
pusha
and
lds
sbb
stc
gs
lods
sub
add
and
ja
or
cltd
jge
mov
movsl
inc
outsb
sbb
and
mov
popf
add
rcll
push
sbb
data16
movsl
mov
xchg
and
xchg
cwtl
icebp
xor
or
push
data16
push
sub
jmp
cmp
hlt
pop
adc
jo
mov
imul
addl
sahf
jmp
mov
mov
cld
bound
fstl
pop
fcmovb
mov
cmp
jae
xchg
xorl
cmp
rorb
mov
add
jle
imul
mov
orb
in
aaa
iret
daa
mov
clc
xchg
add
testl
xorb
insl
out
push
test
sub
iret
out
sub
adc
shrl
ja
xchg
insl
scas
test
push
push
inc
inc
add
add
and
mov
addl
mov
adc
cmp
add
in
lret
popa
es
mov
jecxz
popa
jno
mov
rolb
dec
fstpl
dec
inc
and
bswap
cmp
jae
aam
ret
xor
push
add
dec
imul
nop
scas
ds
and
mov
mov
out
enter
mov
push
and
fcmovb
stc
sahf
scas
cmp
lret
inc
push
pop
daa
and
sahf
icebp
ljmp
and
push
nop
or
loope
jmp
push
xchg
cmc
xor
lahf
pushf
pop
pushf
xor
lds
nop
pushf
flds
ds
mov
or
sbb
decb
ret
ljmp
ljmp
mov
rcr
outsl
xchg
push
jg
jae
test
xchg
insb
rcrb
int
push
ljmp
lods
rclb
mov
call
xchg
inc
ficoms
add
ret
shl
cmp
pushf
fstl
and
xchg
and
cmp
loope
pop
scas
sub
push
data16
hlt
flds
mov
sub
cmp
jo
and
jnp
pop
mov
stc
cmp
icebp
add
inc
pop
lea
jge
cmp
sbb
pusha
imul
push
push
fcompl
adc
jno
aas
add
popa
je
cmc
jno
sub
push
pop
or
adc
loope
mov
push
jae
and
nop
or
jge
mov
cltd
push
scas
mov
pop
movaps
sub
or
mov
cmp
adc
mov
mov
mov
jno
inc
inc
mov
adc
inc
popa
ret
jo
add
movsl
popa
cwtl
sbb
pop
fnsave
push
jmp
sbb
pop
sahf
leave
setns
xor
lea
mov
out
add
cmp
dec
jge
rolb
sbb
sub
cwtl
shll
aad
xchg
inc
test
aaa
cmp
jb
and
pop
shl
and
fiaddl
push
decl
popa
push
shrl
xor
fisubl
cltd
xchg
cwtl
les
cmp
mov
jo
outsl
inc
sbb
mov
imul
jb
xchg
or
push
mov
sbb
jg
push
sub
rclb
imul
pop
sbb
push
pusha
das
push
push
jmp
stc
xchg
inc
or
and
mov
lods
outsb
adc
jecxz
dec
rorb
xor
fwait
sub
in
adc
sbb
and
xchg
sbb
xlat
mov
sbb
add
push
test
inc
mov
fbld
adc
in
pop
fsubrs
sbb
sub
sbb
test
int3
lea
icebp
and
outsb
gs
xor
pushf
fsubs
cmpsl
mov
fs
adc
insl
adc
cmp
xchg
mov
fldenv
push
fwait
add
xor
retw
int
xor
rorb
mov
lods
test
out
sbb
lahf
outsl
cmp
aam
mov
xor
mov
movsl
repnz
mov
ja
cmp
mov
fldt
iret
fsts
pop
xlat
jle
out
mov
mov
jle
pop
sarb
fildl
lea
movsl
hlt
add
rorb
stos
stos
mov
sub
lcall
mov
fcmovnb
pushf
aas
pop
rol
orb
xchg
packuswb
mov
lahf
fldlg2
jnp
adc
movsb
pop
xor
jl
xchg
rcl
pop
pushf
and
jmp
adc
push
push
pop
movsb
push
mov
add
pop
push
or
pop
push
aam
jl
cwtl
jl
fiaddl
mov
or
jno
mov
pop
push
cmpsb
xchg
cld
lcall
xor
adc
out
xchg
in
inc
testb
loope
pminub
stc
dec
pushf
inc
pop
test
fwait
cmpsl
outsl
enter
aaa
test
fs
aas
repnz
and
jmp
scas
ret
mov
push
push
mov
push
gs
cltd
imul
sub
jns
jne
es
add
lret
aad
push
out
lea
push
sub
and
cwtl
mov
push
or
add
push
add
or
pop
mov
push
loopne
mov
pop
insl
adc
sbb
mov
mov
es
sbb
jae
mov
jmp
add
jne
lret
loope
pop
cli
ljmp
mov
ljmp
dec
mov
sbb
out
xlat
nop
scas
xor
jne
adc
int
sbb
popa
je
aaa
test
aad
rorb
and
leave
outsb
xchg
enter
xor
push
inc
ja
adc
icebp
inc
int
insb
push
xor
aas
mov
mov
dec
es
leave
aad
add
dec
xchg
arpl
xchg
aam
xchg
push
imul
and
cli
fwait
push
pop
pop
js
or
mov
das
dec
cmp
cmpsl
jbe
aad
mov
jle
pop
lret
xchg
lahf
scas
nopl
inc
loop
test
jo
push
add
push
push
add
xor
sub
lods
sti
pop
push
add
sbb
push
push
pop
push
fcom
xor
xchg
jo
cwtl
test
lods
dec
and
sbb
cmpsl
sbb
cld
mov
pop
in
in
insl
shll
xor
in
rcrl
outsb
stc
loopne
pop
jo
push
mov
mov
push
test
add
pop
xlat
fucomi
lahf
or
add
sub
mov
or
sub
inc
daa
jne
aad
cmp
pop
xchg
add
sbb
imul
pop
lea
das
aaa
jecxz
mov
mov
jo
add
mov
push
mov
aas
je
mov
fisttpll
ljmp
stc
pop
repnz
repnz
loop
incl
in
lret
faddl
pop
int3
mov
mov
sub
jo
or
in
mov
jbe
enter
decb
or
not
out
push
or
stos
and
enter
fsubrl
jge
in
jp
push
and
xchg
inc
call
jnp
pop
sub
push
call
andl
negl
call
out
lret
jnp
adc
or
push
adc
outsb
inc
cmp
push
imul
pushf
xchg
push
cltd
mov
xor
nop
push
pop
cld
test
add
cli
js
iret
sbb
jns
fwait
pop
sbb
cs
fs
pop
inc
adc
packsswb
mov
addl
repz
sbb
js
leave
sbb
ficoml
sbb
push
pop
cmpsb
ljmp
xchg
fisttpll
js
inc
flds
call
scas
push
push
loopne
rclb
in
mov
subl
les
mov
cmp
jnp
dec
stos
cmpsl
cmpsl
sbb
adc
scas
cltd
mov
in
inc
mov
jo
cltd
ret
outsl
jne
scas
cli
loopne
or
addl
ja
jnp
ljmp
data16
mov
repnz
fsubp
fnstcw
or
adc
popa
sbb
push
arpl
push
or
jno
in
vmread
mov
jne
pop
and
sbb
xor
ret
cld
pop
loop
cli
mov
mov
xchg
pop
push
call
mov
sub
ljmp
sub
insb
in
pop
lods
adc
jnp
imul
and
lods
push
lds
enter
push
rcrl
xchg
fadds
pop
xchg
out
sub
int3
nop
movsb
mov
pop
jmp
outsl
add
nop
in
or
cmpsb
popf
jne
add
ljmp
pushf
pop
dec
mov
stos
or
movsb
imul
or
lea
cmpsl
xor
xor
sub
wbinvd
push
xchg
shll
movl
mov
insb
add
sti
pop
and
ds
cmp
movups
sbb
sub
arpl
pusha
data16
cmp
leave
sti
cmp
enter
cmpsb
pop
and
xchg
decb
test
sbb
icebp
lods
outsb
clc
or
cmp
jb
lods
sub
mov
imul
test
xchg
sbb
lret
mov
sahf
xor
icebp
ss
adc
data16
adc
outsl
xchg
test
and
movsl
push
insb
loop
cmp
or
mov
lods
jo
outsb
sub
mov
sbb
out
out
dec
imul
scas
iret
and
cmp
mov
aam
sub
cmpsb
inc
mov
lahf
loopne
ds
mov
movsl
or
repnz
fists
cmp
xchg
xchg
ror
cmpsl
mov
clc
inc
ljmp
pop
sbb
call
pop
sahf
out
xchg
sub
sub
xlat
push
test
adc
and
or
movsb
test
lods
cmp
mov
outsl
mov
aam
inc
jmp
mov
mulb
and
jmp
mov
mov
aad
int3
cmp
js
lret
cltd
xchg
add
jno
push
mov
inc
push
jmp
lods
fs
inc
dec
jbe
xchg
cli
aam
or
mov
fs
negb
lahf
into
movl
or
pop
and
xchg
psubusw
packuswb
xchg
xchg
test
scas
in
daa
jbe
sbb
sub
testb
sbb
pusha
or
jnp
xchg
rorl
push
and
cmp
loope
dec
cmp
out
fsubrs
adc
jb
dec
outsb
xor
jne
xor
xor
ret
arpl
cltd
leave
pop
in
cmc
cmc
rcll
stos
pop
rcrl
pop
sub
stos
movsb
and
sub
scas
add
and
push
inc
adc
sub
pop
mov
mov
adc
jae
push
daa
xchg
adc
jecxz
pop
lea
inc
adc
adc
call
stos
gs
xchg
and
cwtl
jmp
leavew
sub
and
testb
enter
inc
xchg
aas
lcall
outsb
stos
sbb
inc
shrb
add
push
insb
adc
xchg
cmp
mov
adc
imul
test
xorl
xor
adc
fsubr
sbb
adc
fcompl
push
scas
mov
popf
xchg
dec
adcb
add
mov
lret
movsl
mov
test
push
rcrb
pop
mov
jge
popf
lahf
push
cwtl
xor
bound
pop
pop
adc
xor
cmp
js
mov
inc
or
mov
pusha
dec
dec
cmp
cmpsb
cs
cmp
xchg
mov
call
or
hlt
pop
ja
jns
add
aaa
mov
push
roll
sbbl
or
mov
xor
xchg
jl
mov
scas
lret
sub
jno
push
leave
cmp
push
push
push
xchg
rorb
sbb
int3
je
fldl
xchg
cmp
in
mov
and
dec
push
aam
mov
ret
jo
fsts
add
dec
pop
out
stos
lret
stos
xchg
shll
je
add
test
mov
cs
push
mov
hlt
hlt
scas
pop
push
xor
int3
addr16
incb
jecxz
pusha
incl
fimull
push
xchg
mov
fs
push
lcall
mov
in
pop
mov
jne
push
popa
push
sub
push
push
pushw
aam
jge
fldenv
pop
xor
inc
xchg
xchg
cmp
inc
loope
fildll
mov
push
xchg
clc
push
scas
add
outsl
in
scas
xchg
ljmp
xor
push
fbld
cmpsl
inc
push
dec
cmpsb
addr16
testl
mov
adc
sti
int3
add
push
sbb
mov
add
sbb
rol
pop
cmp
ljmp
lods
mov
add
mov
pop
cmp
add
orb
or
gs
aad
jge
pop
imul
rcrl
inc
jmp
jmp
xchg
sub
jo
sbb
ficoms
ret
pop
jl
xor
xchg
cwtl
movsb
fwait
lock
cmp
mov
add
and
mov
mov
inc
popf
js
mov
mov
mov
sbb
xor
cmp
ds
clc
idivl
das
js
fbstp
mov
jecxz
or
dec
jp
aas
adc
cmp
not
aaa
fstpl
or
scas
dec
in
xchg
mov
lods
push
pop
jl
sahf
pop
fcmove
push
and
stos
mov
cwtl
leave
sbb
or
sub
fdivrs
aaa
and
in
test
mov
in
fnsave
mov
cmp
mov
mov
jg
icebp
xor
pop
cmp
daa
testl
imul
aam
call
in
cmp
es
inc
loope
dec
sub
andps
jge
call
inc
test
xor
scas
mov
sbb
addr16
dec
and
jnp
mov
imul
mov
mov
mov
insl
cmp
hlt
push
rol
sbb
js
andb
pop
fisttpll
repz
sbb
mov
pusha
add
jle
cmpsb
ficoml
sub
movsb
shll
inc
push
scas
dec
loopne
and
xor
sub
data16
rcr
mov
mov
lahf
mov
sbb
mov
out
cmp
mov
jg
scas
in
xchg
int3
dec
out
push
ss
jbe
ret
ss
stc
xchg
movsb
shl
jecxz
icebp
notb
out
mov
mov
sarl
xchg
out
push
ret
jp
loopne
arpl
ret
push
adcl
std
js
inc
ljmp
adc
fisubrl
cmc
pop
mov
nop
or
mov
fmull
dec
xchg
mov
and
jns
pop
int3
pcmpeqb
sbb
add
mov
loopne
sahf
cld
xor
and
mov
xor
mov
add
mov
push
rcl
jle
stos
push
push
inc
clc
xor
mov
enter
mov
sti
aas
stos
fsubp
xor
mov
arpl
jno
shll
movsl
mov
sbb
sub
inc
cmpl
xor
ds
inc
jo
jle
adc
inc
imul
push
scas
aad
and
mov
mov
mov
add
test
mov
js
loope
pop
and
cmc
add
out
inc
xorb
adc
pop
ljmp
dec
add
cld
xchg
adc
cli
inc
fs
and
mov
mov
jle
add
ret
lahf
mov
ret
push
mov
test
lret
jbe
push
cmp
push
lret
sub
fldenv
hlt
cltd
xor
gs
cwtl
scas
sbb
ds
daa
add
sahf
xor
ja
dec
scas
aas
cmpsb
bound
ror
rorl
mov
mov
mov
mov
xor
std
sti
mov
mov
mov
jnp
sbb
xchg
outsl
xchg
jnp
push
sbb
aaa
jmp
fldl
dec
adc
xchg
mov
fnstenv
xchg
lds
xchg
inc
sub
push
mov
jae
out
cld
sbb
pop
divb
xchg
xor
push
inc
inc
ret
scas
sbb
movsb
loopne
mov
aad
into
pop
dec
adc
inc
and
stos
out
jb
sbb
lds
fsubrl
sub
jl
cmc
push
movsb
cld
push
in
iret
add
scas
lret
outsb
ret
test
xor
xchg
out
push
lock
cmp
rcr
and
loop
xor
in
in
adc
mov
in
mov
rorl
adc
adcb
das
mov
xor
movsl
push
inc
cmp
fstps
dec
xchg
aas
inc
imul
lret
pop
sbb
mov
pop
inc
repz
sbb
call
push
test
cmpsb
cmp
cmp
inc
mov
das
fisttpll
add
out
pushf
dec
and
inc
scas
mov
inc
pop
jne
pop
xchg
add
pop
aam
cmc
mov
mov
mov
lds
or
xchg
in
cs
in
mov
lret
cwtl
or
clc
jb
mov
icebp
or
repnz
push
mov
aaa
shrl
or
lds
mov
dec
mov
loope
ficompl
imul
loope
xlat
sbb
testb
jg
xor
in
dec
lret
push
in
xor
js
test
pusha
adc
inc
insb
sub
sbb
sub
sub
and
or
test
adc
hlt
jns
add
mov
mov
outsl
sahf
ret
divl
lret
dec
push
loope
jmp
clc
lcall
stc
ret
xchg
push
outsb
xchg
pop
pop
mov
aas
and
les
cmp
jbe
inc
stos
push
daa
in
ret
cmp
out
test
inc
or
call
fiaddl
outsl
ljmp
aas
lcall
shr
add
add
add
enter
xor
push
in
repz
gs
lcall
inc
jno
scas
and
dec
mov
icebp
jo
mov
gs
or
mov
mov
mov
outsb
fs
out
mov
ret
and
jns
dec
aam
cwtl
mov
cld
cmc
clc
cmp
repnz
push
subb
les
adc
es
fnstcw
imul
mov
fcoml
decb
mov
push
cmp
add
repnz
lods
xchg
cltd
in
inc
scas
mov
mov
sub
in
stos
pop
int3
jae
sti
adc
pop
nop
outsb
int
push
mov
xchg
xchg
xlat
popa
adc
inc
ficoms
sbb
lea
push
repz
ret
or
int
cmp
jl
addr16
lea
fidivrl
cmpsl
shrl
das
imul
into
int3
hlt
stos
sub
lea
aam
ja
stos
xchg
inc
push
std
orb
insb
dec
ja
sub
mov
sbb
and
loope
cmp
mov
and
jnp
pop
mov
add
shlb
dec
inc
pusha
shld
dec
shlb
mov
into
xor
psubusb
cmpsl
repnz
jp
sbb
cmp
mov
sbb
clc
mov
add
and
fucom
test
sbb
inc
push
dec
xchg
and
mov
add
or
enter
xchg
pop
ljmp
les
xor
data16
jne
xchg
aam
jnp
cmp
or
clc
mov
pusha
dec
dec
jp
xor
leavew
cmpsl
jo
push
sub
test
inc
mov
cmp
mov
outsb
mov
pushf
ficompl
sti
out
lahf
out
sub
sbb
mov
loopne
adc
sbb
cmpsb
out
mov
stos
ja
lods
mov
das
popa
fidivrs
nop
lret
mov
fmuls
ret
mov
mov
cmp
sub
cmc
xor
sbb
cmp
ja
movsb
ret
rolb
lods
push
add
ljmp
jle
jne
sbb
jg
iret
out
jnp
add
rcll
xchg
mov
inc
cmpl
mov
cmp
lods
xchg
xchg
test
int
aam
pop
subl
mov
and
rorl
xchg
test
fwait
icebp
adc
sahf
push
mov
fsubrs
notb
push
rcll
lds
mov
mov
dec
daa
add
fs
mov
imul
mov
jl
ss
in
push
jp
ds
and
add
inc
mov
out
mov
sar
mov
stos
mov
mov
fidivrs
int
divb
test
das
fiaddl
cmc
add
sub
and
outsl
mov
cmp
mov
movsb
pop
dec
mov
xchg
add
es
pop
and
push
imul
sub
in
mov
div
mov
cmpb
adc
mov
aad
lret
fadd
or
jbe
paddusb
shl
out
push
cmpsb
data16
aad
jb
add
adc
pop
js
and
scas
jne
cmc
mov
pop
jl
mov
inc
fs
hlt
aam
inc
push
test
and
mov
popf
shlb
jle
or
dec
jns
xchg
sub
mov
dec
sbb
enter
lods
in
mov
mov
adc
adcb
dec
push
mov
sub
mov
test
scas
xor
aad
addl
mov
dec
lea
int3
dec
push
push
cmp
sub
icebp
jl
fs
dec
pop
jecxz
push
xchg
inc
dec
and
dec
in
shr
repz
ss
mov
mov
sbb
adc
movsl
fwait
hlt
loop
mov
cwtl
call
fwait
add
cld
pop
jp
fmulp
gs
cmp
mov
pushf
jecxz
mov
loope
lret
or
cmpxchg
nop
icebp
pusha
sub
push
int
adc
sub
clc
and
mov
sub
aas
aad
les
adc
jecxz
add
xchg
xor
mov
insb
sahf
jle
addr16
cmp
jmp
jo
push
out
ficoms
cmp
inc
testb
inc
data16
push
sbb
mul
std
loope
sbb
das
and
dec
jnp
pushf
mov
iret
jbe
cmc
bound
add
test
cmpsl
pop
xchg
fwait
popf
and
mov
fsubrs
int3
shrl
xchg
fisubrs
mov
push
nop
jp
sub
pop
adcl
sub
pop
mov
sti
cmc
sub
and
std
mov
cs
enter
fimuls
js
sbb
loop
lods
or
sti
int
repz
enter
or
pop
test
mov
lret
movsl
shl
dec
out
in
subl
mov
pop
cmp
rcr
cmp
mov
and
cs
mov
xchg
jmp
jnp
sbb
negl
rcll
pop
ljmp
daa
movsb
scas
xchg
inc
xor
mov
pop
xor
inc
ljmp
cld
gs
into
jle
dec
repz
scas
pop
mov
xor
fprem1
mov
jo
mov
insl
mov
lods
mov
push
sbb
or
adc
cmp
in
js
int3
fucom
dec
pushf
leave
jno
mov
les
adc
arpl
xlat
inc
or
xor
cmp
das
int3
jae
hlt
sbb
sub
ja
mov
int3
add
inc
je
fwait
mov
sti
insl
add
or
or
pushf
and
js
mov
fsubrl
inc
dec
mov
fildll
outsl
sbb
lds
pop
xlat
push
rclb
dec
sub
inc
adc
mov
and
out
xchg
or
lock
jae
jae
fsubs
stos
mov
adc
push
dec
lcall
dec
xchg
mov
sub
mov
mov
js
push
and
dec
or
mov
sub
inc
sbb
sub
jp
xor
xchg
lods
ja
add
cmp
sub
xor
cltd
stc
sbb
xor
into
xchg
popa
ss
std
xlat
imul
out
inc
mov
mov
pop
outsl
rcll
mov
jg
rol
mov
outsl
inc
adc
or
cwtl
push
jge
rcrb
dec
mov
dec
pop
jnp
dec
xchg
pop
jns
inc
js
in
lods
ljmp
fadds
jo
cmp
mov
mov
mov
push
and
insb
inc
sbb
jno
xchg
or
sbb
jp
ret
mov
subl
in
mov
jmp
cs
lods
in
movl
icebp
sti
cmp
out
repz
xchg
lret
je
outsl
test
popa
sbb
scas
cltd
mov
call
popf
mov
clc
sub
cmpsl
mov
cmp
neg
cmp
or
add
dec
xchg
xchg
out
sub
sub
mov
pop
test
js
xchg
mov
in
push
push
inc
xor
mov
or
jo
int3
inc
mov
daa
orb
outsb
xchg
loop
inc
dec
cmp
inc
jp
add
inc
shl
mov
jnp
mov
bound
shlb
roll
out
mov
pushf
movsl
nop
not
jns
arpl
fwait
shll
mov
loope
xchg
push
push
ret
movsl
shr
or
or
cmp
xchg
out
sbb
inc
xor
das
jp
das
aam
je
mov
test
mov
xchg
subl
push
xorl
push
jp
arpl
push
xor
xor
imul
push
xchg
cmp
ret
jecxz
xchg
lds
and
mov
mov
mov
xorb
xchg
and
imul
xchg
jno
pop
push
arpl
ja
mov
jns
mov
mov
rcr
arpl
lcall
inc
jecxz
stc
movb
call
push
xor
xchg
pop
mov
mov
pop
rcrb
shlb
cmp
inc
or
xchg
add
add
adc
add
add
add
cmp
or
shll
xchg
add
pop
mov
mov
sub
cltd
pop
mov
test
and
xchg
cltd
add
outsl
aas
es
adc
inc
push
jmp
addl
inc
adc
int3
add
cmp
out
aad
dec
data16
lret
nop
sub
or
jno
cmpsb
xchg
jle
push
aaa
dec
cli
sbb
sub
sub
jns
icebp
add
xor
negb
sub
xchg
orb
add
faddp
insb
pop
fiadds
mov
pop
mov
lcall
cs
sbb
testl
cmp
inc
xor
push
mov
rclb
cmp
inc
push
mov
or
iret
pop
mov
outsl
test
jle
popf
mov
ds
mov
stos
mov
out
subl
mov
add
mov
loop
sub
add
mov
jge
mov
dec
xchg
sti
or
add
cltd
adc
ds
and
push
test
fstpl
stos
loopne
shll
mov
inc
lods
pusha
ficoml
ret
aas
pop
and
sbb
dec
mov
push
insl
push
inc
add
fnstcw
or
fsubs
pop
or
ljmp
xchg
sub
pop
sti
adc
jno
scas
in
push
je
subb
stos
jmp
cmpb
out
and
leave
scas
lock
mov
push
aad
xor
push
and
sub
clc
pop
adc
sbb
jecxz
jp
and
sub
jle
pop
jge
stos
mov
and
ljmp
bound
cmp
repz
add
inc
cmpsl
inc
sahf
into
mov
mov
enter
fisubrs
ss
pop
aam
mov
and
loop
movl
cs
bound
rcl
into
xchg
enter
mov
cli
xchg
mov
xor
sahf
xchg
and
and
call
sbb
jp
pop
shlb
cmp
int3
cwtl
push
std
or
hlt
popf
jne
mov
imul
out
leave
cmp
sub
xchg
sbb
loopne
mov
data16
imul
int3
sbb
mov
sti
mov
cmp
fwait
xchg
adc
and
aad
fmuls
fildll
mov
scas
sbb
inc
mov
testl
jp
loope
push
sub
push
and
push
pop
dec
jp
dec
lcall
in
adc
psadbw
mov
icebp
sbb
sti
push
xor
inc
jb
ss
outsl
mov
lahf
dec
add
sbb
and
sbb
and
loop
and
inc
fs
aam
dec
imul
or
jle
sub
jno
lods
mov
ret
jo
fcmovnb
inc
or
cmp
cli
sbb
mov
mov
mov
xor
jl
mov
insb
data16
out
xor
outsl
mov
ljmp
test
popf
in
in
adc
je
sbb
cwtl
out
adcl
rolb
mov
cld
mov
mov
inc
dec
or
push
ret
pop
adc
arpl
mov
iret
insl
pushf
inc
push
mov
mov
ds
rclb
mov
andb
nop
clc
xor
in
lds
ret
pop
addr16
inc
mov
push
cmp
pop
jno
addr16
jb
daa
xor
xor
sahf
test
in
insb
mov
cmc
push
int3
mov
xchg
xchg
sahf
dec
and
mov
pop
jmp
jne
inc
stos
mov
pop
mov
or
add
pusha
xor
icebp
cltd
aam
inc
jp
xor
ss
sahf
cmp
fs
mov
cmp
lods
ror
out
enter
fnstenv
cld
scas
pushf
into
lret
jg
add
dec
cmp
into
xor
jmp
nop
popf
add
sub
push
mov
leave
dec
pop
lahf
push
out
inc
mov
push
mov
xor
insb
and
loope
xor
mov
jl
jecxz
je
or
lahf
xor
out
leave
add
aad
insl
sub
lret
fdivrs
cmpl
jg
add
pop
mov
test
mov
mov
cmpsb
leave
sti
popa
cmp
nop
push
cld
in
cmc
sbb
test
loop
aaa
mov
push
xchg
adc
ret
jnp
pop
jno
dec
call
fistl
outsl
push
cmpl
insb
es
insb
out
jns
sbb
adc
add
lahf
ds
loope
push
mov
sbb
ds
dec
sub
jp
jg
fcoms
cmp
cltd
or
cmp
xor
mov
loopne
repnz
int
mov
insb
inc
fisttpll
lods
lods
shr
or
repz
inc
mov
pop
enter
imul
or
inc
pop
and
dec
xchg
mov
jecxz
fsubp
mov
mov
push
jl
xor
and
mov
pusha
mov
add
cmpsb
mov
push
push
push
pop
mov
jl
or
arpl
and
lret
stos
or
cmp
sbb
mov
fwait
dec
lock
es
testl
loopne
das
add
mov
fadds
push
test
mov
call
or
inc
out
mov
int
lods
cli
leave
lods
test
cmp
stc
cltd
sbb
outsl
fs
into
out
xor
adc
jne
cli
mov
rolb
lods
test
add
adc
insb
ret
loope
add
dec
fdivrs
add
push
fs
xchg
add
stos
jns
jge
lret
lahf
sti
adc
xchg
cmp
mov
lret
pop
sub
xchg
pop
xor
pop
fwait
aad
fidivrl
das
inc
lret
enter
and
sub
mov
add
mov
clc
imul
imul
push
in
xor
sbb
test
xor
pop
dec
cs
loopne
scas
lret
sub
shlb
arpl
jns
cs
add
divl
mov
mov
xchg
sub
pop
add
scas
sarb
scas
cli
jmp
out
popa
push
and
aam
outsl
mov
push
outsl
cs
mov
imul
fldl
clc
in
sti
xchg
es
inc
or
push
jno
pusha
cwtl
andl
pop
es
popl
test
xor
dec
mov
aaa
pop
xchg
imul
test
int
sbb
mov
push
mov
jg
fadd
add
mov
push
cwtl
add
addb
divl
sbb
mov
push
in
sbb
push
jmp
mov
pop
jb
mov
push
dec
mov
mov
dec
adcl
mov
or
aad
cwtl
cltd
es
push
push
aam
outsl
fisttpll
lds
mov
adc
inc
pop
into
negb
jmp
cmpl
xchg
imul
adcb
call
roll
and
movl
pop
or
xchg
jmp
add
push
bswap
fstps
sub
jo
hlt
pop
ret
dec
sbb
pop
jecxz
inc
jecxz
out
fld
jb
shlb
lret
adc
jge
xchg
outsl
cmp
mov
daa
cli
mov
push
inc
loop
lds
cmp
add
sub
xlat
xchg
sub
imul
lret
lea
orb
lahf
or
push
xor
xor
imul
add
out
mov
gs
push
adc
sub
aaa
incl
cltd
sahf
xlat
imul
xchg
pop
adc
xor
xchg
add
cld
and
lret
adc
mov
mov
lods
in
xor
mov
adc
mov
ss
cli
adc
movsb
gs
cmp
mov
jge
jp
mov
inc
fnstenv
cmp
mov
or
ljmp
clc
cmpsb
or
iret
stos
lret
push
mov
lahf
cli
xchg
xor
inc
fdivrs
push
jmp
jnp
jp
scas
stos
sbb
enter
sbb
pop
xor
movsb
inc
push
das
sub
mov
xchg
mov
movsl
add
and
adc
jo
in
loop
out
jnp
in
movsl
inc
movb
fcomps
add
das
sbbb
test
add
mov
hlt
outsb
xor
dec
stc
daa
and
pop
dec
mov
out
test
adc
dec
mov
adc
cmp
repnz
jno
test
mov
dec
pushf
rcl
pop
imul
xlat
scas
push
movsl
jne
aam
repz
cmp
mov
rcrb
outsb
pop
in
sahf
inc
mov
in
das
repnz
stc
lods
pushf
adc
jp
and
mov
fadds
mov
addr16
ja
pop
iret
mov
js,pt
mov
xchg
dec
icebp
jae
sbb
imul
icebp
push
rol
hlt
jb
sub
ja
pop
ret
lcall
pop
scas
lock
test
pop
lock
mov
push
cmpsl
pop
fcoml
loopne
rolb
test
stc
mov
xor
fs
fs
cmp
scas
cs
mov
xchg
add
imul
push
sbb
in
cltd
add
jbe
sti
sbb
xchg
ja
pop
sbb
xrelease
or
data16
jo
inc
fisubl
sbb
pop
and
addr16
push
pop
xchg
arpl
cmpsl
mov
scas
imul
inc
inc
or
xor
pushf
sahf
cli
add
inc
pop
inc
xchg
notl
dec
lret
in
out
or
iret
lret
pop
jge
insl
push
lods
xchg
test
sbb
fisttps
jno
and
addb
out
cmp
fcomip
sub
hlt
jo
in
cmp
xchg
pusha
out
int
sarb
sub
int3
in
fdivrp
into
nop
shlb
js
dec
xor
es
lods
mov
inc
dec
pop
ss
rclb
arpl
cmpl
andl
xlat
or
in
jns
jo
inc
inc
lds
ret
mov
mov
mov
cmp
pop
lret
xchg
es
jp
icebp
js
pushf
data16
and
xchg
addr16
push
out
add
fildll
xor
je
in
xchg
mov
mov
add
xchg
pop
jbe
imul
test
in
push
mov
ret
xchg
push
mov
in
mov
mov
mov
jbe
mov
fwait
je
cltd
add
cmp
sarl
mov
std
fistpl
mov
mov
int
add
js
shll
cli
sbb
cwtl
jp
fcompl
aaa
into
mov
mov
xor
stc
loopne
pushf
push
jae
stos
sbb
rcrb
inc
sbb
inc
cltd
adc
lods
cltd
in
pop
pop
push
cmp
je
mov
clc
mov
mov
les
push
push
mul
int3
pusha
mov
adc
push
mov
pop
dec
int
inc
insb
out
dec
mov
mov
adc
and
xor
pushf
sub
adcb
ljmp
jmp
call
and
movsb
jmp
sub
xchg
shll
repnz
test
test
pop
or
insb
mov
xchg
decl
in
mov
inc
inc
imul
jbe
cli
and
jl
popf
add
out
jg
mov
loopne
xlat
fwait
mov
push
mov
and
jb
ficomps
lcall
in
daa
lods
mov
dec
sarl
cmp
out
cmp
test
cmp
cmpl
pop
adc
mov
inc
mov
adc
das
loop
pop
and
mov
imul
sarl
mov
adc
dec
fadd
dec
or
clc
xor
sub
call
aam
jae
outsb
lcall
pushf
ja
hlt
filds
jp
jo
fisttps
mov
nop
test
es
xchg
popa
mov
pop
adc
into
hlt
push
jle
jp
xchg
in
int
push
lods
cmc
test
out
clc
fdivr
sti
push
ljmp
mov
filds
cs
dec
xchg
cli
push
pop
cmp
mov
adcb
cmp
jae
and
shl
sub
pop
cmp
mov
jecxz
sub
jmp
xchg
mov
fwait
mov
add
dec
scas
sarl
inc
xlat
sbb
scas
pop
cmc
out
pop
xchg
sbb
orb
adc
inc
cmpl
inc
popf
dec
stc
test
and
jnp
xchg
add
jae
xchg
sub
inc
push
jle
xchg
pop
or
push
popf
ljmp
ja
xor
mov
ja
add
outsl
repnz
dec
xchg
inc
or
loope
clc
cltd
imul
sub
mov
popf
sbb
and
push
mov
inc
cmpsl
xchg
mov
stos
mov
lahf
inc
cmp
push
addr16
pop
pop
mov
mov
sbb
xor
xchg
lods
je
je
stos
push
jne
pusha
ret
pusha
outsl
lcall
push
in
push
xchg
mov
or
repz
insl
lds
aad
fwait
dec
inc
pop
jb
push
dec
outsb
aad
sub
hlt
push
mov
fistpll
loop
jmp
push
rep
push
lea
sub
mov
push
mov
mov
mov
dec
jns,pt
xor
dec
xchg
icebp
das
jnp
adc
jge
rorb
cltd
cmpsl
add
sub
pop
mov
push
dec
jge
pop
cmp
pop
adc
ja
in
addr16
pop
outsb
sbb
in
mov
inc
mov
and
push
mov
fsubr
push
jle
ss
imul
addr16
popf
aad
test
je
add
and
pop
pusha
outsl
mov
sbb
add
add
and
lock
push
fwait
inc
and
jns
ret
and
jno
xor
push
jnp
mov
xchg
negl
jae
cmpl
mov
inc
dec
es
in
jb
sarl
add
es
inc
mov
dec
movq
or
lahf
jle
es
sub
call
clc
add
ljmp
push
sbbl
hlt
popf
lea
sub
lea
in
std
aad
lods
mov
test
rclb
add
inc
or
scas
mov
xchg
and
nop
add
into
add
sub
adc
add
cmp
pop
jle
hlt
sbb
imul
adc
adc
rolb
xor
lahf
jmp
lret
dec
dec
ficomps
test
xchg
es
mov
pop
cwtl
xchg
gs
popa
ljmp
pop
lds
sarl
daa
push
push
mov
add
sub
adc
imul
mov
xor
es
int
and
inc
push
cli
lea
lret
mov
pop
sti
push
in
mov
popf
pop
insl
mov
or
sbb
add
sub
jge
xor
arpl
sub
loop
das
jno
and
inc
pop
fisubrl
xchg
pop
push
push
inc
xor
ja
je
daa
int3
ds
or
repz
jg
das
mov
sbb
dec
adc
fsubr
pop
mov
dec
mov
test
lea
dec
mov
dec
das
sbb
les
leave
lock
std
push
mov
movb
in
insl
loop
scas
push
lds
pop
stos
int3
ja
cwtl
mov
dec
or
cli
pop
sub
dec
push
cmp
mov
pusha
rorl
jbe
movups
stos
cwtl
jne
repz
pop
pop
xchg
sbbl
cmp
sbb
jbe
push
mov
mov
mov
arpl
clc
mov
data16
fldcw
out
mov
ret
lea
pop
aas
mov
cltd
loop
roll
mov
or
adc
xor
aaa
and
sub
xor
sarl
add
jecxz
mov
xchg
add
and
imul
inc
ss
dec
pop
shlb
fwait
push
xor
movsl
add
mov
push
lods
xchg
testl
mov
rcrl
pop
pop
stos
sub
das
push
lds
in
sahf
xchg
jmp
mov
mov
jle
xchg
add
mov
jle
mov
push
push
jmp
cmp
sub
fbld
lock
sbb
sub
cli
popf
fs
ljmp
test
or
sub
push
push
rorl
in
call
dec
or
xchg
xor
arpl
rcrl
fldcw
and
sbb
jl
popf
xchg
jns
and
out
bound
nop
dec
jnp
test
push
popa
lea
dec
cli
lods
xorl
pop
adcl
cmp
mov
hlt
scas
out
imul
cmp
es
scas
mov
xchg
cmp
add
xchg
shrb
mov
sbbb
popa
and
fidivs
mov
pop
jle
repnz
dec
lock
jne
jg
jp
addr16
rcrl
outsb
jne
aas
dec
call
scas
push
push
inc
scas
popf
inc
mov
fstp
iret
std
sahf
and
sub
lea
lcall
mov
push
dec
adc
daa
adc
out
sub
xchg
subb
sub
sbb
es
lock
insl
push
nop
xor
ret
lods
inc
add
fidivrs
shll
dec
pop
ficoms
mov
and
pop
data16
stos
sarl
xchg
ja
cmp
out
sbb
push
push
lret
dec
ficompl
in
call
std
repz
loopne
std
mov
jp
cmp
inc
ja
es
popf
mov
and
aaa
int
test
jp
mov
leave
mov
jl
leave
adcl
lcall
test
scas
jbe
lret
popf
fdivl
dec
lahf
push
pop
in
and
pop
sub
mov
movsb
lahf
sbb
pop
sti
or
sbb
lcall
leave
jne
mov
push
out
movsb
xchg
mov
mov
int
test
or
mov
pop
ljmp
imul
xadd
pushf
xor
cmp
push
cmp
ret
sarb
daa
lret
sbb
adc
add
jbe
add
rolb
test
shr
cmp
fwait
in
xchg
scas
iret
inc
lret
fstps
mov
loope
mov
cltd
repz
jg
fsts
jmp
mov
mov
add
mov
mov
scas
clc
cmp
push
inc
lahf
adc
pop
and
sub
insb
xchg
mov
push
push
jnp
sahf
lods
and
push
add
mov
sub
aaa
leave
out
rorb
push
add
cwtl
lea
loop
inc
sbb
jo
bound
loop
pop
imul
in
jp
mov
push
in
pop
adc
sub
outsb
mov
cmc
and
sbb
popf
lret
leave
inc
add
stos
mov
cli
cmp
inc
xchg
mov
push
lret
dec
jno
sti
mov
add
shl
popf
stc
push
pushf
aam
pop
sti
pushf
out
fsubrl
pop
xchg
sub
and
cmp
popa
aas
sub
cs
sbb
orb
jae
or
daa
enter
data16
push
lds
std
cli
inc
mov
push
stos
sbb
cld
nop
les
lods
mov
fistl
pusha
lcall
pextrw
pop
jne
aaa
in
fdiv
es
mov
or
clc
jmp
mov
mov
movsb
and
jbe
add
flds
sub
ficoms
push
rolb
mov
jnp
inc
negl
rcrl
shll
mov
aaa
xchg
sub
stos
loop
call
mov
xchg
cmp
jmp
lods
loop
repz
adc
xlat
pop
aaa
imul
cld
sbbl
sub
jb
mov
jmp
fcomps
fnstenv
xchg
scas
push
jl
mov
inc
add
std
inc
jne
mov
loop
adc
int3
in
fsubl
ja
sub
jmp
clc
pop
fbstp
push
lock
or
ret
mov
aaa
inc
pop
sbbb
cmp
mov
pop
push
repz
mov
cltd
xchg
jne
popf
hlt
lods
lods
ss
xchg
add
add
cmp
sar
in
pop
add
ss
cld
push
mov
mov
test
fcmovu
jl
sub
inc
cmc
dec
mov
imul
xchg
inc
out
mov
nop
je
call
loopne
cmp
cmp
push
loopne
lods
xor
stos
xchg
cld
pop
sbb
ret
dec
lret
cltd
mov
jle
aas
or
test
cltd
into
mov
jge
inc
cmpsl
push
shlb
orb
sti
xrelease
dec
push
sub
add
xor
gs
mov
or
xchg
in
add
sub
pop
pop
loope
insl
repz
sbb
pop
mov
dec
bound
mov
adc
ss
lods
sbb
test
mov
sbb
cmp
jmp
lea
enter
jnp
shl
stos
repz
pop
push
shl
sub
jno
hlt
sbb
push
adc
jge
mull
out
test
mov
popa
loope
in
fisubs
sbb
jb
mov
aam
shlb
push
xchg
mov
sub
testb
xor
mov
jns
or
dec
iret
inc
das
pop
bnd
cmp
cmp
push
xor
inc
sbb
mov
mov
in
pushf
xchg
cmp
fwait
sub
test
cld
rorb
out
nop
push
xor
mov
sbb
jnp
jnp
insb
stc
ds
mov
popa
add
xchg
scas
imul
push
lea
pop
push
mov
add
mov
inc
xchg
xchg
cmc
cmp
sub
dec
sahf
movb
add
mov
hlt
mov
xor
xchg
test
iret
lcall
push
fstpl
add
cmpsb
aam
imul
pop
leave
mov
mov
call
test
sbb
pop
rcrl
xor
clc
lea
in
add
xchg
scas
inc
cmp
jmp
push
rcl
loopne
js
sbb
enter
sub
leavew
jne
dec
loop
dec
mov
adc
or
test
cmp
cmc
mov
mov
mov
imul
les
mov
addr16
aaa
jno
inc
js
mov
jo
outsb
pop
sub
stos
in
lret
pushf
push
sbb
outsl
dec
mov
jg
cmp
xor
pop
shr
or
pop
jbe
dec
ficompl
repnz
repnz
dec
fdiv
js
sbb
subl
xchg
adc
or
dec
or
mov
dec
pop
jne
lock
jns
loop
mov
int3
add
sub
inc
in
roll
xchg
or
inc
repnz
sub
pusha
xchg
pop
pop
pop
bound
mov
sbb
pop
cmp
jp
pop
repnz
jmp
or
push
scas
push
lods
fdivr
test
in
fistl
fsubrl
mov
daa
mov
xor
aaa
fcom
adc
ret
inc
out
adc
jbe
cmp
clts
push
cmp
popa
jno
leave
add
mov
jo
sub
lret
shrb
sahf
adc
leave
sub
mov
sbb
js
outsb
movsl
jle
and
lock
jbe
sub
leave
xor
cmp
cmp
mov
mov
enter
adc
cmp
adc
test
je
stos
stos
in
lret
fists
or
or
js
jp
cmp
fcmovne
jo
mov
and
lfs
out
pusha
xor
mov
repnz
aaa
movsb
adc
cmp
inc
into
add
adc
xchg
and
loope
ds
add
dec
jge
or
add
adc
testb
inc
bound
jge
cld
fisttps
dec
clc
je
mov
xchg
sbb
pushf
jo
in
mov
cmp
andb
pop
adc
fsubs
je
sbb
cmpsb
jle
xchg
pop
xchg
inc
xor
dec
ja
enter
pop
and
jne
xor
sbb
mov
pop
xchg
or
movb
jno
sub
outsb
dec
lret
or
loope
adc
imul
outsl
pop
push
add
cmp
loope
ret
pop
mov
addl
sub
mov
dec
mov
and
insb
jle
push
or
fs
aam
jne
pop
xor
popa
aad
xchg
ds
jae
add
dec
daa
frndint
push
js
xor
jns
mov
pop
jae
pop
imul
stos
dec
add
out
or
lahf
sub
leave
lahf
jno
test
cs
mov
out
leave
cmp
sub
ror
ror
jmp
lret
cmp
mov
lret
jb
pop
dec
popa
add
mov
movsb
sbb
out
add
push
ljmp
jp
div
mov
adc
add
add
push
add
jl
movsl
cmpsl
loope
jmp
add
dec
mov
mov
inc
fsubrp
fwait
insb
jnp
jo
xchg
and
sub
push
inc
pop
add
inc
daa
adc
lods
xchg
insl
sbb
or
and
jg
jge
andb
popa
adc
lds
push
loope
push
imul
fwait
insl
ss
sbb
dec
mov
mov
add
mov
cwtl
jle
mov
lds
call
inc
rorl
sub
push
and
push
mov
fadds
pop
sti
enter
pop
adc
scas
sbb
pop
enter
mov
fdivrs
jecxz
lret
inc
inc
adc
sbb
mov
dec
ss
mov
fcmove
pop
sbb
movsl
repnz
jge
sub
pop
enter
mov
add
js
sar
fcmovnb
cmc
pusha
jp
stos
lods
in
pushf
out
ror
testl
mov
xor
stc
stc
cmp
repz
push
xor
mov
and
test
and
lods
pop
push
addr16
add
fisubrs
lcall
cmp
push
fiaddl
xor
stos
loopne
dec
cmpl
add
push
pop
adc
push
sti
cltd
dec
and
lds
push
jo
shrl
sahf
lock
sub
shrl
jb
int
sahf
mov
pop
repz
mov
xchg
mov
adc
repnz
divb
jns
inc
dec
arpl
test
idivl
xchg
inc
ret
lgs
pop
push
das
and
aam
subb
cs
cmp
ret
push
mov
std
or
xor
mov
pop
or
xor
mov
addb
les
sbb
mov
cld
je
stos
shrl
jle
popf
mov
sahf
mov
mov
das
add
shrl
push
mov
adc
push
repnz
lods
sub
test
popa
dec
and
pop
cmp
ret
mov
jbe
out
pop
dec
repnz
jnp
repz
and
inc
into
frstor
dec
and
mov
cmp
mov
jmpw
dec
lock
mov
mov
arpl
push
push
mov
mov
sbb
mov
xor
pop
cmpsl
ja
stos
pop
or
inc
and
or
je
std
test
insl
xchg
jno
ret
dec
cmpsb
js
fs
and
scas
bnd
xor
ret
inc
or
movsl
daa
or
or
xchg
call
sbb
pop
movsl
mov
xchg
imull
call
icebp
cmp
xor
loope
test
stc
int3
sub
iret
aaa
stos
mov
xchg
push
fdivrs
sti
mov
mov
rcrl
jle
mov
ret
push
icebp
dec
int
push
and
xchg
aaa
stos
ljmp
and
xor
mov
fisttps
icebp
sahf
mov
pop
repz
push
jnp
or
adc
and
xchg
shrl
sbbl
and
sbb
mov
clc
add
xor
out
push
sub
std
out
push
and
shlb
adcl
inc
mov
jl
mov
push
and
mov
xchg
dec
in
test
xchg
xchg
inc
mov
mov
mov
cmp
push
fs
jmp
inc
xor
lds
pop
pushf
xor
push
add
dec
xchg
sbb
push
out
and
push
xchg
inc
in
mov
out
and
sub
shr
out
pop
mov
into
test
mov
out
dec
cld
mov
call
es
or
mov
xchg
scas
cmpsb
mov
jne
and
inc
insl
inc
in
and
push
or
rcr
jno
mov
lea
push
push
or
adc
or
sub
icebp
stc
xchg
lret
callw
daa
imul
jb
pop
cmp
inc
lahf
hlt
icebp
jb
and
and
pushl
aad
ss
addr16
mov
aas
icebp
add
xchg
aad
sub
inc
out
fisubl
push
push
xlat
jnp
cmp
pop
mov
cmpsl
push
adc
lret
pop
clc
in
shl
dec
lcall
push
notl
sbb
dec
or
push
or
pop
and
fldenv
push
pop
jl
andl
xchg
outsb
dec
jnp
mov
jo
mov
adc
movsl
mov
ret
nop
ss
sti
push
push
test
mov
lock
fidivs
lret
insl
cmp
in
xchg
sub
mov
and
test
into
fistpl
outsl
or
lret
or
add
add
lret
out
outsl
addb
cld
daa
push
in
loopne
lret
outsb
stos
mul
jl
icebp
push
adc
into
push
xor
xchg
movsl
cmpsb
mov
lea
mov
addr16
fisubs
mov
mov
outsl
mov
push
sti
popf
adc
mov
ror
push
lock
jne
push
push
sbb
cwtl
mov
or
xchg
cmp
ja
mov
lods
pushw
scas
ds
jo
push
dec
jnp
adcb
cmp
lret
push
adc
roll
pop
fsubrl
or
mov
jns
xor
insl
and
fsubr
mov
mov
roll
jne
and
lahf
int3
enter
inc
push
lret
or
jp
roll
test
subl
ljmp
aaa
fnsave
mov
pop
clc
repz
sbb
addb
xor
dec
and
push
loopne
jmp
cmp
inc
dec
xor
mov
adc
xchg
frstor
scas
aas
xchg
add
aad
nop
pop
xchg
in
fldenv
push
lods
adc
lods
sub
je
mov
adc
pop
pop
lret
sbb
imul
es
lahf
pop
frstor
xchg
sub
push
loope
bsf
movswl
inc
jmp
jp
push
pop
push
inc
test
les
xlat
cmpsl
ljmp
pmullw
jmp
xchg
push
in
inc
and
fcompl
adcl
xor
inc
sbb
mov
sub
loopne
aaa
popf
mov
xchg
push
mov
imul
add
lcall
and
imul
dec
js
pop
das
das
movsl
sbb
ficoml
pop
jae
dec
xor
inc
adc
out
outsb
enter
popa
aad
clc
sar
pop
out
or
sub
jle
fcmovb
pop
lret
inc
andl
or
jge
sbb
aaa
lea
gs
in
adc
movsl
cltd
je
leave
or
push
jle
adc
jl
lods
enter
add
arpl
inc
aaa
outsb
sbb
out
jl
daa
cs
dec
mov
subl
and
cmp
push
push
cltd
test
or
and
cs
inc
test
xlat
jae
test
aaa
pop
ret
ljmp
scas
idivb
nop
sti
test
ljmp
jecxz
or
push
xor
js
clc
jmp
push
pop
les
sub
add
mov
hlt
insl
mov
or
push
pop
arpl
xor
jne
cmp
dec
lea
xchg
shll
cltd
movb
imul
push
je
cmp
jle
scas
shlb
add
rcr
sub
jnp
xor
or
dec
call
dec
pop
mov
add
imul
pushf
sbb
cmp
jge
pop
mov
cmp
mov
push
aad
mov
shrb
ljmp
mov
shll
ljmp
add
xchg
fdivrs
in
lock
inc
out
or
mov
sbb
imul
fdiv
mov
xchg
in
iret
sub
sub
lea
je
jmp
jecxz
out
daa
cmp
sub
sbbl
inc
loopne
add
pop
mov
stc
daa
test
or
aad
and
cmp
cmp
xor
sub
in
ret
nop
mov
add
xabort
movsb
sbb
mov
ret
roll
imul
dec
sub
adc
sub
xchg
add
daa
jbe
ds
std
pop
outsl
push
mov
repz
add
testl
mov
fdivrs
pop
pop
or
out
outsl
popa
inc
cwtl
mov
enterw
lods
test
int
std
lcall
pop
xchg
sbb
shlb
add
test
std
push
out
push
push
dec
or
cmc
and
and
daa
and
js
dec
fcmovu
addr16
fsub
push
cld
out
dec
ja
rcrb
mov
add
sarb
mov
aas
fildll
sbb
ss
pop
adc
push
xchg
in
je
pop
sbb
xor
pop
xor
popa
push
pop
cmc
push
inc
jb
mov
outsb
aam
or
es
mov
jecxz
push
addr16
lods
clc
xor
lods
add
xsave
pop
mov
in
outsl
cmpsb
in
or
lahf
push
inc
sub
dec
cli
adc
mov
xchg
or
movsl
dec
int3
inc
xchg
frstor
popa
fldcw
sbbl
dec
sbb
shlb
jnp
cmpsb
icebp
jge
xchg
add
lods
hlt
out
lret
or
clc
addb
sbb
xor
mov
fcmovnu
in
scas
mov
mov
data16
add
stc
stc
dec
pop
repz
xchg
sahf
add
mov
lds
xchg
push
add
push
arpl
or
add
mov
mull
lret
ret
bound
mov
lock
movsl
mov
iret
add
mov
imul
push
jbe
jmp
jbe
aaa
dec
lock
pop
jecxz
jle
loopne
jle
mov
xchg
and
xchg
cwtl
popa
inc
add
fdivp
clc
fisubl
ror
xchg
fcmovu
test
jmp
jg
dec
inc
dec
push
movsl
sub
ds
adc
test
jne
mov
mov
out
dec
test
enter
pop
lret
jo
and
stos
cmp
cmp
or
cmc
in
mov
mov
pop
aas
mov
in
loop
inc
pop
pop
mov
pop
dec
mov
xor
ret
sbb
add
sbb
adc
add
mov
and
add
jge
pop
aam
add
mov
sahf
test
sub
sbb
inc
loop
dec
mov
loopne
add
pop
or
add
cld
insl
pop
fsubl
inc
add
orl
xchg
xchg
and
int
and
or
inc
das
imul
gs
sub
mov
dec
or
push
cmp
es
push
pop
fldln2
add
gs
sbb
dec
ja
out
dec
cmc
jmp
movsl
test
repz
adc
add
mov
addr16
outsb
stos
je
clc
out
repz
aas
pusha
push
push
push
hlt
jno
jae
pop
xor
dec
pusha
inc
nop
sahf
test
or
inc
add
stos
fldpi
int3
mov
jecxz
mov
mov
cmpsl
fiadds
or
push
pop
push
shl
cmp
clc
mov
test
hlt
and
sarb
cmp
icebp
mov
mov
or
mov
arpl
inc
out
jns
mov
mov
ficoml
stos
xlat
dec
fnstsw
aam
into
and
jp
xchg
jp
sbb
cmovl
dec
inc
mov
adc
inc
sub
fidivrs
mov
mov
adc
bound
sub
inc
push
pop
jo
xchg
mov
je
loope
mov
jmp
push
sbb
add
dec
or
mov
mulb
push
daa
loop
test
cltd
in
adc
dec
xor
mov
mov
adc
lahf
sbbl
test
adc
and
push
or
es
jnp
int3
ret
mov
sti
cmp
inc
mov
xor
push
sub
mov
mov
faddl
pop
fstps
cwtl
and
mov
mov
jmp
or
add
lds
aad
adc
out
fbld
in
ljmp
dec
mov
mov
enter
mov
dec
mov
sbb
loop
lret
jbe
push
pusha
push
pop
dec
mov
lret
cmpsb
out
ret
sarb
out
ss
orl
mov
mov
or
jecxz
or
push
repz
xor
xor
dec
lods
push
shll
aaa
pop
call
inc
sub
iret
mov
test
cmp
cmpl
adc
mov
or
mov
insl
out
cltd
push
jbe
stos
je
xchg
mov
push
fdivrs
inc
fnstcw
outsb
dec
push
sub
fistpll
mov
mov
sbb
dec
sub
lcall
fchs
adc
xlat
popl
mov
out
loop
lcall
bound
shlb
or
mov
cs
div
adc
mov
sub
adc
mov
or
in
sub
dec
add
daa
add
ret
movl
in
inc
ds
mov
fbld
aas
ret
cmp
xor
mov
inc
rep
pop
or
addl
pop
cli
add
adc
ds
sahf
jmp
cltd
fdivrl
xor
mov
xchg
mov
orl
mov
js
cltd
mov
sbb
outsl
pop
pusha
cmp
jge
push
ss
cmp
out
imul
lods
push
pop
mov
inc
cmpsl
in
das
test
pusha
and
insl
adc
push
ret
cmp
pop
pop
sub
and
adc
outsl
mov
mov
pop
scas
mov
inc
mov
cmp
xor
jl
mov
popa
shll
xor
jg
pop
sti
mov
aas
stos
jne
aad
pop
shrl
nop
xor
xor
xchg
lock
and
mov
into
insb
adc
cmp
push
adc
xacquire
test
rolb
sub
ret
imul
mov
and
out
jmp
pop
jns
fisttps
push
pushf
sti
dec
js
xchg
shr
jb
mov
push
scas
outsb
das
sbb
xchg
and
cmpsb
xor
pop
adc
or
mov
and
or
xchg
fdivr
add
push
inc
pop
or
testb
pusha
leave
inc
sbb
mov
aas
or
sub
scas
rcr
xor
xor
jbe
outsl
mov
scas
push
xchg
out
ljmp
adc
push
imulb
push
push
xchg
addb
mull
adc
sti
iret
or
push
testb
clc
mov
gs
or
xor
sahf
sbb
arpl
js
adc
pop
push
jl
pop
inc
add
xor
aaa
xorb
or
fs
dec
mov
inc
arpl
or
inc
rcrb
nop
and
mov
push
movsl
sub
idivl
fnstsw
dec
cmpb
or
mov
cld
add
pop
call
aaa
daa
push
dec
jecxz
in
sar
mov
sahf
sarl
xor
inc
push
push
inc
sub
cmpsl
test
stc
mov
aaa
nop
lods
insb
pop
insb
mov
mov
inc
insb
sub
inc
lea
inc
xchg
mov
jle
push
mov
sub
out
push
out
push
repnz
ss
dec
pop
mov
xchg
fisubl
lods
mov
neg
pop
mov
cmp
ss
inc
call
xchg
dec
or
mov
dec
femms
icebp
jns
or
push
lock
and
push
or
add
sti
pop
enter
xor
popl
cmpsl
push
rcl
cmp
sub
push
insb
xchg
xchg
mov
jns
lods
fists
add
fwait
xchg
gs
inc
pop
pop
xchg
push
cmp
or
aaa
addl
pop
push
cmp
dec
mov
xorb
add
mov
popa
pop
icebp
out
add
pusha
sub
adc
jne
push
mov
jb
pop
dec
xchg
push
sbb
add
dec
push
jnp
jne
test
scas
dec
sti
and
xlat
lds
inc
bound
jg
in
fsubr
sahf
xchg
inc
xor
xchg
mov
mov
pop
cmp
mov
jle
mov
cli
xchg
sbb
push
subl
sub
push
cmpsb
pop
jmp
cld
sbb
or
repz
xchg
xchg
adc
out
repz
and
mov
add
mov
xor
mov
sub
dec
inc
and
xchg
mov
rclb
js
push
adc
mov
cmc
nop
jle
lods
rorb
xor
inc
mov
data16
mov
mov
dec
jl
push
fildl
push
lods
test
dec
push
jo
adc
cwtl
xor
mov
jle
dec
pop
jo
and
mov
fmuls
test
fistps
sahf
fs
sub
pop
mov
or
xchg
frstor
divl
in
jno
into
jb
aam
push
dec
xor
lret
sub
mov
in
out
xor
stos
push
mov
adc
mov
dec
addr16
jne
mov
xor
daa
cwtl
das
lea
lock
repz
sub
insl
push
pop
inc
inc
pop
adc
jno
adc
or
les
stos
xchg
push
dec
xor
rclb
mov
shl
imulb
int3
iret
pop
icebp
mov
mov
ljmp
fcmovne
mov
adcl
out
add
jne
pop
stc
push
test
dec
and
sahf
insb
imul
andb
cmpsl
sbb
pop
inc
pop
pop
fs
mov
push
or
push
and
jle
cli
mov
dec
xor
lock
data16
pop
or
cmp
push
test
popf
jns
inc
aas
inc
out
mov
shlb
mov
and
or
movsl
leave
sahf
adcl
aam
mov
mov
inc
push
jne
fisttpl
nop
cld
sub
push
fs
xchg
cli
inc
cmp
xchg
cmp
mov
jo
lea
add
imul
and
mov
shll
and
int3
xchg
xor
mov
stc
mov
orb
pop
ret
add
mov
outsl
inc
stc
mov
leave
jmp
into
enter
out
jl
or
leave
fnsave
ror
pop
enter
es
and
leave
ficoml
fdivr
in
mov
lods
fisttpll
lcall
push
adc
mov
sub
jnp
int3
call
jo
mov
outsl
cs
fisubs
dec
dec
pop
orb
rcrb
sub
xchg
cmp
or
lock
cmpsl
pop
fidivl
in
pop
lcall
movsb
pop
push
lds
lret
cmp
cmc
js
xor
fiaddl
repnz
mov
sub
lahf
cwtl
je
repnz
mull
cmp
jb
mov
jge
int
daa
or
insl
sbb
imul
jmp
pop
mov
adc
xchg
cwtl
ret
fstps
xchg
cwtl
cmp
out
inc
in
aas
cs
pop
inc
add
fisubrl
xchg
dec
inc
add
xchg
in
fdivrl
jl
xchg
ds
les
xor
out
daa
jnp
jne
ja
out
cmp
imul
std
and
push
xchg
jne
movsl
insl
loopne
mov
cli
pusha
xor
bound
iret
inc
cmp
dec
sbb
mov
stos
and
sahf
mov
cmp
fldcw
lret
or
jmp
repnz
pop
icebp
addr16
add
loopne
imul
push
push
std
adc
mov
sbb
dec
imul
pushl
mov
add
push
jns
xor
sub
lahf
ss
outsb
lea
mov
lcall
inc
sub
test
xor
add
icebp
inc
iret
jmp
rcrl
ffree
jne
rcll
mov
out
add
leave
cltd
dec
loop
repz
pusha
push
pop
pop
and
lcall
in
jg
int3
push
or
mov
icebp
pop
outsl
loopne
mov
jb
cmpb
lock
push
cmp
cld
sbbl
inc
sbb
pop
push
int3
dec
jbe
push
ja
mov
jns
dec
lods
inc
ljmp
mov
insl
mov
testl
es
dec
dec
sbb
and
mov
insl
fs
mov
xor
scas
test
into
nop
shl
lcall
lahf
ljmp
ljmp
mov
cwtl
fptan
xor
or
xor
jo
ds
xor
jne
xlat
push
mov
ljmp
and
mov
xchg
lret
imul
jns
dec
dec
es
jne
sar
icebp
lods
lahf
mov
mov
lods
bound
or
xlat
in
test
inc
das
adc
sbb
andl
loope
arpl
push
cwtl
sub
hlt
out
push
dec
pushf
cmpsb
pop
in
pushf
mov
rcr
mov
ds
icebp
iret
push
or
pop
fcomps
jae
mov
repz
pop
push
add
push
popf
mov
mov
dec
pop
pop
jno
xor
mov
pcmpgtw
pop
loopne
das
and
adcb
jge
mov
push
mov
out
pop
sub
jb
cmp
pusha
add
cmpsb
push
pushf
flds
sbb
pop
add
sbb
jl
cld
sub
cld
lock
mov
pop
or
dec
lds
out
xchg
inc
pushf
push
out
mov
fstpt
mov
scas
sbb
cs
lret
lret
jno
xchg
pop
push
sbb
and
cld
das
pop
xchg
mov
and
push
std
ss
mov
outsl
xchg
sarl
dec
xchg
xchg
mov
jp
mov
loopne
or
xchg
push
pop
cmp
add
int
push
mov
xlat
imul
jg
movsl
or
adcl
clc
jo
mov
jne
adc
xchg
add
inc
adc
pop
ja
dec
shll
mov
mov
shrb
cmpl
push
loop
aad
or
pop
inc
popl
or
vmovd
es
dec
imul
pusha
xchg
cmpsb
orb
add
xchg
add
sarb
shrb
loopne
nop
cmpsl
mov
pop
jb
aad
mov
test
stos
xchg
inc
sub
dec
xchg
negb
xchg
jns,pt
sti
test
lods
imul
pop
inc
movsb
mov
call
pop
xor
lcall
mov
mov
jge
sub
fs
test
sub
add
pop
add
lahf
ret
or
loop
test
fbld
sbb
fnstenv
dec
jns
xchg
insb
xchg
push
push
jl
lock
fdivrs
in
imul
subl
arpl
andb
ret
insl
jns
dec
ffreep
jne
outsb
and
or
or
jns
nop
fildll
jo
loopne
xchg
js
aam
mov
loopne
lods
fsubrs
push
int
ss
mov
outsb
pop
adc
mov
jle
sub
sbb
das
nop
mov
pusha
or
fimull
test
and
in
xor
lock
lods
cmp
lcall
push
nop
out
outsb
sub
jns
rdtsc
lea
add
sbb
int3
outsb
or
and
pop
jns
pop
lds
or
mov
leave
lret
xor
iret
xor
in
xchg
inc
ret
sbb
lock
roll
add
arpl
mov
mov
dec
push
popa
cs
push
pusha
sbb
dec
xlat
xlat
dec
iret
in
pushf
call
and
cmp
lods
jge
dec
and
jno
dec
xor
int
push
add
push
mov
sub
pop
xor
movsb
and
xchg
scas
adc
adc
fcmove
arpl
sub
add
mov
test
aam
dec
mov
sub
js
data16
mov
xor
add
dec
sbb
cmp
test
js
cmp
cltd
lret
fidivs
and
insl
xchg
dec
pusha
add
mov
mov
fldcw
sbb
dec
jo
cmp
and
dec
or
imull
movsb
mov
sbb
sub
push
cmp
sar
sbb
mov
mov
loope
sub
in
aam
cltd
mov
pop
jnp
ds
and
cmp
add
mov
repz
nop
rorl
xchg
sbb
mov
jae
inc
in
jnp
pop
nop
mov
testb
xlat
push
or
dec
mov
jg
inc
sahf
pop
fwait
mov
scas
push
stos
or
inc
mov
push
xlat
pop
imull
repnz
iret
xorl
and
pop
cs
sbbb
int
dec
aam
add
mov
daa
add
mov
adc
movsl
xor
xor
movsl
lods
pop
test
mov
enter
les
dec
dec
xor
cmp
mov
mov
add
cmpsb
pop
sub
xchg
ss
dec
shrl
add
xchg
mov
adc
jl
push
inc
pushf
fists
lds
or
lcall
fs
outsl
cmc
xor
xor
or
and
mov
popa
clc
shl
pop
sbb
mov
jg
add
sub
iret
das
dec
cmp
loopne
movsl
pop
inc
adcl
ss
pop
push
mov
mov
push
loope
repnz
popa
fidivrs
cld
and
jge
popl
inc
sub
dec
cmp
xchg
xchg
and
stos
sbb
pop
pop
pushf
shll
dec
or
push
mov
xor
sahf
pusha
and
stos
fidivl
add
pop
push
xchg
cmp
jb
or
xchg
arpl
lods
xor
inc
and
lods
jl
sub
push
mov
bound
movsl
cmp
and
or
inc
data16
xlat
addb
xchg
lret
push
in
push
in
dec
pop
and
jne
stos
je
sbb
mov
sub
inc
xor
repz
stc
repnz
sbb
out
xchg
fisubrs
xchg
and
repnz
ljmp
adc
jmp
rclb
add
mov
xchg
and
mov
scas
rorl
sbb
fbld
jne
cmp
push
int3
popf
lahf
cli
inc
cwtl
dec
cmp
ds
outsb
ja
dec
mov
rclb
mov
insb
xchg
jbe
sub
mov
subb
and
mov
movsl
push
jp
enter
xlat
and
add
les
push
ficompl
insb
cmp
sti
jns
sbb
pop
ss
mov
adc
sbb
dec
int
lea
aas
outsl
cmpsl
push
mov
hlt
jmp
pop
mov
or
cmpsl
fidivs
push
mov
jl
sahf
dec
pop
cs
pop
aam
push
je
xchg
mov
cld
daa
dec
movsl
adc
dec
jecxz
rcrl
clc
mov
pop
and
jmp
arpl
push
notb
stos
add
ja
jmp
out
inc
mov
outsl
fnsave
fisubl
sub
mov
loopne
out
jne
mov
jecxz
jo
cmp
sbb
insb
sbb
js
pop
stos
mov
insl
sub
and
cmp
movb
mov
add
int
cmp
mov
gs
fs
cmc
subl
repnz
arpl
cmp
movsb
ret
lret
scas
push
ror
pop
idivl
loope
mov
je
add
jle
cmp
fimuls
cmpsb
xchg
dec
dec
cmp
mov
push
mov
push
enter
cmpb
ret
imul
subb
sbb
sahf
mov
inc
dec
lods
invlpg
dec
or
inc
add
jbe
aad
dec
mov
loopne
mov
fiaddl
jge
out
hlt
xchg
insb
sbb
pusha
cmp
mov
mov
jnp
pop
xlat
mov
mov
add
jbe
inc
nop
nop
and
push
cmpsl
arpl
int
ja
xchg
pop
pushf
out
movsl
mov
sbb
in
outsl
add
xor
dec
loope
push
das
out
lahf
mov
push
pop
lods
push
xchg
daa
jae
pop
outsl
mov
sub
test
dec
addr16
movsl
stos
mov
ljmp
lds
adcb
mov
add
xchg
loopne
push
jb
push
shl
mov
add
rcrl
fimuls
dec
dec
movsb
loop
lods
iret
mov
jno
les
clc
arpl
test
push
ret
mov
clc
sub
enter
and
aad
lret
repnz
outsl
lods
arpl
jl
cs
dec
adc
pop
pop
push
test
jno
pop
shrl
js
loop
lahf
pop
enter
aas
loop
cs
and
push
test
leave
gs
aaa
xlat
mov
popf
sbb
add
mov
je
sbb
push
repnz
sbb
cwtl
daa
sarb
fld
lea
push
lea
repnz
and
outsl
xor
pusha
mov
pop
stos
add
in
scas
andl
mov
cmp
icebp
cmp
or
mov
mov
inc
mov
outsl
xchg
cmpsb
shrl
and
jb
or
sbb
add
fdivl
xchg
dec
sbb
pop
data16
test
imul
xor
dec
lret
mov
mov
cli
push
jmp
insl
loop
jge
adc
decl
inc
ljmp
lret
mov
add
daa
sub
mov
or
cltd
hlt
mov
fcmovu
inc
push
in
xchg
js
sbb
mov
cmc
enter
inc
add
jmp
jp
out
insl
pop
mov
xchg
in
fdivs
dec
sarb
cmp
xchg
ds
mov
mov
mov
push
push
outsb
mov
xchg
in
stos
call
imul
ret
or
cmp
mov
adcb
ret
sbb
inc
in
and
ljmp
icebp
imul
mov
add
mov
add
mov
out
les
xchg
int
ljmp
cmpl
xchg
or
sarl
andb
fldt
xor
jmp
cmpsl
pushf
test
pop
cmp
movsb
pop
stos
fildll
xchg
push
sbb
push
enter
dec
xorl
mov
pop
fiadds
cmpsl
fsubs
fwait
sub
mov
lcall
mov
push
pushf
stos
cmp
ret
pusha
adc
mov
aaa
push
cmovne
jo
xor
movsl
lea
pop
jo
push
mov
and
lret
loop
testb
lods
mov
jnp
shlb
push
lret
loop
jmp
xor
dec
fbstp
les
sbb
jns
add
jo
mov
ret
std
test
clc
xor
outsl
shr
cmpsl
pop
fistpl
cmp
jne
dec
push
mov
xor
dec
pop
aam
pop
xchg
fdivs
outsl
mov
je
mov
dec
add
ror
fwait
cmp
cmpsb
sbb
out
lods
fs
in
push
test
lret
push
mov
xchg
add
hlt
test
loope
or
mov
sbbl
insb
add
inc
push
jbe
or
push
cmp
mov
test
push
mov
xor
or
fwait
repz
push
mov
aas
sbb
add
inc
fldcw
xchg
fidivrl
mov
idivl
loop
and
push
dec
fstpt
sub
iret
mov
pop
fisubrs
adc
jle
stos
jge
cmp
pop
sub
out
pop
sbb
inc
jmp
or
push
sub
jb
gs
rorl
lds
cli
sbb
sbb
pushf
xchg
jmp
adc
sbb
in
mov
arpl
aaa
inc
mov
std
dec
clc
cwtl
and
xor
insl
imul
pop
cmp
mov
imul
push
mov
jp
push
cltd
or
mov
inc
out
mov
clc
xor
mov
jo
cwtl
lods
inc
xchg
push
mov
das
repnz
std
shl
add
aam
push
repnz
dec
sbb
adc
pop
mov
cld
fnstcw
lcall
ljmp
push
bound
pop
imul
mov
rcr
js
inc
sbb
mov
mov
daa
pop
lahf
push
mov
cmp
adcl
loop
out
aam
push
in
dec
test
outsb
dec
mov
and
and
mov
sbb
adc
out
stc
xchg
cmp
rcr
mov
and
fnstenv
loopne
push
add
mov
aaa
scas
jae
inc
cmp
call
test
jns
sarb
loop
xchg
sbb
mov
mov
cmp
inc
into
inc
scas
or
lret
dec
push
mov
insl
sbb
pushf
in
cs
ss
loopne
pop
sbb
in
jns
or
cmpsb
push
add
jns
pop
cmp
jo
repnz
xor
mov
add
cmpsb
fistpll
xchg
rcll
dec
cli
sub
hlt
xor
int
push
sub
jnp
and
inc
in
add
push
hlt
xchg
lea
out
daa
rclb
mull
and
mov
inc
xor
aam
in
jge
pop
mov
or
or
push
mov
mov
lea
sar
fbld
imul
std
sbb
jo
xchg
arpl
sbb
sbb
inc
out
add
and
add
mov
mov
or
ljmp
jns
pop
movsl
int3
adcb
pop
mov
shll
ret
jl
jno
fcmovnu
fistpl
jae
adc
fisttps
mov
mov
loop
repz
adc
jns
mov
lret
dec
in
mov
jno
cmpsb
hlt
or
popf
arpl
popf
mov
enter
ss
push
test
xchg
xchg
jns
ret
mov
add
sbb
pop
push
inc
call
dec
ret
push
xchg
stos
pop
aaa
pop
lock
xchg
js
sbb
mov
pushf
stos
pop
xchg
add
or
xchg
sub
inc
nop
imul
enter
je
imulb
cld
insl
filds
push
mov
lods
in
fistpl
dec
insl
adc
sti
mov
and
test
in
xchg
inc
mov
adc
fsubl
mov
cmc
push
repnz
and
push
sbb
add
add
xchg
les
sub
test
adc
mov
fildl
or
lcall
push
fadds
les
iret
es
push
mov
repnz
jle
and
cwtl
leave
push
push
call
adc
sbb
cmp
fmuls
cmp
fcompl
enter
int3
mov
inc
repz
clc
movsb
fimull
push
adc
pop
out
xor
adc
sub
jmp
xchg
or
jmp
or
push
lret
dec
and
or
je
jmp
lcall
mov
andl
pop
xchg
outsb
addb
mov
jns
loope
xchg
mov
inc
pop
mov
cltd
sbb
pop
mov
mov
das
xchg
out
cmp
testb
sbb
push
loopne
dec
jnp
jnp
fsubl
iret
nop
cmp
mov
or
push
mov
push
cmpl
stos
ret
fdivrl
push
aad
and
ja
fsubs
xchg
fistps
xchg
nop
or
cmc
in
or
xchg
repnz
cmc
inc
shrl
sbb
mov
imul
dec
fnstsw
pop
cmc
loopne
jne
popf
hlt
and
jecxz
leave
ja,pt
xchg
popa
sbb
js
test
dec
or
pop
lds
andl
push
mov
mov
ja
hlt
inc
test
or
sbb
or
mov
mov
add
sbb
movsl
inc
subl
ljmp
popl
rorl
sbb
popf
lock
pop
jmp
aad
lds
mov
xor
mov
cs
retw
mov
stos
shll
std
mov
aaa
ja
js
cld
lret
mov
imul
push
pusha
jecxz
ret
push
jo
mov
pop
in
jecxz
jne
ds
mov
cltd
lcall
inc
test
xor
int
data16
movq
ret
mov
js
or
dec
shl
xchg
cmp
xchg
add
inc
test
jge
pop
ret
rcl
mov
xor
mov
dec
or
mov
jle
pop
stos
or
movsb
addr16
pop
xchg
adc
xchg
xor
jmp
mov
cmp
xchg
cli
int
movsl
lea
sti
in
xchg
data16
lret
xorl
mov
clc
adcl
pop
inc
icebp
jge
pop
in
or
pop
fdivl
jns
scas
xchg
loop
adc
xlat
insl
in
push
adc
and
rcll
sbb
jg
loopne
jae
adc
or
xor
jp
xchg
mov
out
fbstp
lret
leave
jg
sub
inc
aam
addr16
xchg
movsb
xchg
xor
mov
mov
mov
mov
jmp
je
lahf
aas
shll
or
popf
inc
xchg
in
mov
iret
movsb
stos
aad
movsl
adc
ja
jge
lods
mov
dec
lahf
jl
pop
mov
add
fwait
adc
pop
and
cwtl
inc
cmp
adc
mov
in
das
outsl
jno
adc
ret
jnp
jns
jl
aad
pop
push
imul
cmp
dec
jmp
add
rorl
dec
cmp
adc
movsb
ret
fdivrp
sbb
lock
push
add
mov
je
jp
fimuls
xor
mov
arpl
sub
or
xor
sahf
hlt
mov
cmc
pusha
push
jns
sub
push
and
out
scas
or
int
cltd
adc
xchg
ret
mov
or
movsl
pmaxub
mov
inc
stc
xor
lock
mov
sti
mov
adcb
nop
aad
xor
iret
push
mov
add
add
and
jge
testb
repnz
insb
add
adc
stos
into
mov
cmpsl
pop
mov
mov
call
xchg
mov
out
fimuls
sub
jnp
insl
daa
dec
movsb
cvtps2pi
inc
xor
out
das
add
jle
in
xor
xor
bound
jecxz
inc
xor
jp
scas
pop
shrb
sub
and
or
pop
aam
loop
adc
cmp
fiadds
adc
sub
push
scas
stc
in
cmpsl
outsb
repnz
xor
lods
gs
out
xchg
mov
loope
das
jbe
mov
fs
pop
loope
out
xchg
sbb
cs
loopne
lahf
lahf
xchg
mov
pop
lds
cmc
stos
outsb
scas
mov
fwait
icebp
scas
ljmp
ja
testb
pop
push
test
dec
mov
jmp
jae
loop
call
shrl
add
and
sbb
or
fistpl
jecxz
jno
icebp
mov
xor
shlb
xor
xchg
cld
jnp
fdivr
mov
aas
dec
rolb
xchg
inc
or
push
enter
shlb
or
cmp
and
mov
cmp
cmp
sub
xor
adc
ja
sub
and
mov
std
lret
jo
pushl
inc
jnp
sub
lret
sub
push
push
cli
pop
aas
jecxz
cmp
aad
cmpl
int
mov
pop
mov
addb
sub
sub
or
push
mov
fs
mov
dec
inc
in
add
out
loop
cmp
ja
fucomip
mov
out
shl
aas
mov
mov
pop
aad
inc
inc
loop
pop
inc
cmp
and
jnp
fisttpl
scas
push
xchg
or
jbe
sahf
mov
ds
xor
mov
add
stos
sar
ljmp
xor
js
pop
leave
adc
fidivrs
push
or
jge
jg
fnstsw
cmp
dec
dec
gs
loopne
and
add
fs
loopne
nop
flds
fld
jle
or
jp
lock
testb
adc
dec
subl
insb
fsts
add
add
sarb
cmp
mov
rcrl
movsb
lods
icebp
jb
ficoms
es
loopne
xchg
popa
test
pusha
push
lea
xchg
xchg
sbb
cmc
aam
dec
dec
cs
scas
dec
ja
pop
mov
test
or
mov
add
cmpsl
into
popa
mov
negb
flds
stos
xchg
sbb
sub
pop
cmp
cs
push
sbb
push
pop
push
sbbb
jl
fsubr
jg
mov
push
or
fsubrs
movsl
sub
pop
pop
movsb
shrl
inc
cmp
cs
aam
sbb
mov
testb
icebp
push
xor
mov
or
shr
jg
mov
lds
stos
cmpsb
add
sahf
aam
mov
das
add
fwait
cmpb
sub
fnstsw
mov
mov
enter
ljmp
mov
lds
xor
shll
mov
nop
mov
pop
mov
dec
loope
pop
mov
inc
cmpsb
cmp
mov
dec
pop
subl
adc
gs
jo
adc
lods
and
pop
cmp
mov
lcall
jnp
loopne
sub
test
mov
inc
pop
ror
cmp
mov
fwait
pop
xchg
sbb
jmp
popa
ja
jl
xchg
hlt
sub
jp
adc
cmp
cmpsl
dec
daa
jbe
enter
popw
out
cmc
mov
subl
bswap
push
loop,pt
pop
aad
jl
divl
addr16
xchg
mov
cld
data16
cltd
cmp
mov
and
test
jnp
call
outsl
jl
add
fwait
cmpsl
test
and
fnstsw
frstor
gs
xor
out
xchg
arpl
mov
rcrl
mov
fldenv
rclb
or
test
add
pop
cmc
int3
icebp
ss
stos
adc
cmc
jne
cs
xor
push
sbb
inc
cmp
jbe
mov
or
cmp
dec
mov
insl
pop
mov
jo
loope
sbb
sahf
adc
lods
mov
mov
xor
add
aad
stos
inc
in
je
dec
mov
cmpsl
sub
in
imul
std
in
ret
outsl
jae
pop
gs
xor
rcll
mov
fidivrs
inc
jae
mov
push
jo
ss
aad
mov
hlt
inc
mov
jae
fnstsw
out
jns
leave
movsl
hlt
mov
lods
enter
sbb
inc
push
call
mov
cs
mov
adc
test
jp
sub
cs
dec
std
adc
add
pop
inc
inc
jns
in
outsl
cmpsl
or
shrl
fdivl
fwait
xor
cmp
or
xchg
sti
push
call
mov
rcrb
sbb
jle
add
dec
add
rclb
cmpsl
into
pushf
pop
rolb
push
rcll
lahf
add
outsb
stos
push
xor
jge
in
push
insb
in
jecxz
push
push
inc
out
mov
iret
push
or
jnp
fistpl
add
mov
cmp
out
test
lock
ffree
dec
out
cmp
cmp
xchg
xchg
pushf
sbb
loope
jbe
xchg
cmp
inc
xchg
leave
xor
call
sub
pusha
out
into
lcall
test
aad
pop
cmpsb
cli
test
nop
sarl
dec
sbb
adc
jmp
pop
mov
xchg
lret
mov
add
addr16
mov
adc
jle
pop
mov
add
sbb
addr16
aaa
cli
lods
leave
mov
xor
mov
mov
jecxz
pop
repnz
out
add
pusha
sub
mov
and
mov
xlat
xor
test
loope
andl
or
push
dec
ss
cmp
ds
dec
popa
stos
xor
sahf
int3
adc
mov
xchg
lods
fs
aam
mov
test
test
ret
cmp
dec
or
inc
mov
dec
jg
xchg
roll
jmp
push
lcall
jge
push
hlt
pop
mov
dec
xlat
ret
sub
int3
xor
ljmp
jo
push
push
adc
sub
popf
cmp
es
in
inc
or
mov
ja
data16
out
addb
or
imul
scas
fwait
les
fnsave
idivb
nop
leave
push
jg
xlat
xchg
aam
adc
push
cltd
mov
std
jmp
lods
sub
mov
or
xchg
cmpsb
popf
pop
adc
xchg
nop
xor
pushl
adc
dec
outsl
lods
fs
push
pop
lcall
pop
mov
mov
mov
dec
push
jp
push
jbe
rolb
jecxz
ljmp
insb
addr16
sbb
ljmp
add
cmp
pusha
xor
jae
or
adc
push
mov
loope
add
shrl
aam
sub
clc
adc
mov
das
cmp
adc
cs
pushf
movsb
cmp
push
popf
jno
jno
mov
dec
add
push
pop
xchg
jo
push
push
ret
cmc
and
and
or
imul
xchg
cmpsl
sub
scas
dec
pop
stos
push
lret
adc
xchg
xchg
inc
mov
inc
mov
sub
dec
repz
jbe
push
outsl
mov
jbe
and
or
call
sbbl
push
mov
dec
leave
sub
mov
pusha
and
loop
mov
dec
jbe
push
imul
sbb
testl
sbb
sbb
ss
mov
pop
jnp
mov
jae
sub
leave
xchg
push
add
cmc
ret
outsl
jne
scas
pop
jge
nop
mov
icebp
xchg
aaa
lretw
sub
add
lret
adc
xlat
inc
int3
shll
fadd
push
cld
jg
into
add
lret
test
or
push
mov
lahf
sahf
xchg
es
std
jl
sbb
in
push
in
mov
mov
loope
sub
leave
jbe
loop
dec
and
repnz
jnp
out
js
mov
scas
mov
push
dec
push
leave
pop
ficompl
pop
test
push
lods
inc
cmp
dec
sbb
popa
cmp
test
push
or
out
in
or
push
iret
and
and
adc
mov
insl
sbb
xchg
ret
repz
clc
rclb
test
add
es
adc
push
ret
ret
or
add
nop
cmp
adcb
fadd
and
jbe
and
jbe
lret
jns
push
sbb
ds
pop
divl
sub
flds
out
int
lock
mov
lods
add
divb
mov
into
insl
adc
enter
mov
cmp
pop
aas
insb
xor
xchg
sbb
lods
dec
ficomps
push
fsubrl
jmp
cmp
xchg
dec
test
out
mov
dec
mov
outsl
mov
jae
jns
daa
sub
lods
mov
push
cmp
loope
mov
sbb
test
pop
push
fsubrs
adc
addr16
xor
loope
es
out
adc
stos
inc
mov
fistl
pop
and
andl
cmp
xchg
mov
es
xchg
push
fwait
and
shlb
inc
xor
push
fcomps
xchg
adc
sub
and
cli
lods
mov
or
lock
mov
adc
dec
addr16
xchg
pop
jg
jmp
sbb
clc
dec
jmp
scas
or
pop
testl
outsl
mov
dec
jg
jge
scas
sbbb
push
pop
mov
fsubl
xchg
int3
mov
lds
and
and
into
inc
and
ret
aam
jge
mov
lock
mov
mov
dec
adc
in
bound
mov
add
mov
pop
sbb
js
ss
push
enter
mov
mov
lds
cmp
rorl
gs
inc
lods
test
pop
addl
stos
xor
add
or
lods
mov
rolb
mov
mov
pop
pop
xor
sub
push
sub
pushf
scas
sub
shlb
rorb
pop
or
stos
in
lods
pop
jnp
loope
adc
adc
xor
fnsave
pusha
inc
popa
mov
mov
push
enter
lods
pop
mov
fs
roll
and
mov
dec
frstor
stos
pop
pop
adc
and
stos
mov
test
pop
mov
addr16
xchg
add
pop
cmp
faddl
mov
mov
mov
cmp
lods
data16
jo
push
les
out
ds
jno
fdivrl
push
cmp
dec
les
or
cld
popa
push
test
mov
icebp
rcll
jae
or
or
into
mov
mov
aaa
ret
cs
add
inc
xor
fdivrs
push
or
enter
inc
fld
add
sub
lods
jno
mov
push
sti
inc
rcrl
movsl
mov
movsb
xchg
test
mov
sbb
push
ss
dec
mov
lock
sbb
or
jle
mov
jns
jmp
std
dec
int3
in
mov
shlb
stos
lods
mov
push
stos
inc
mov
mov
hlt
int
test
sti
mov
mov
je
fsubs
adc
repz
push
push
jp
sub
inc
mov
stc
mov
inc
or
push
in
loop
pusha
and
push
in
test
and
inc
or
daa
push
ret
lret
rorb
and
pop
xchg
jbe
arpl
popf
movb
mov
pusha
xchg
scas
xchg
xchg
out
mov
out
std
sub
fadd
pop
inc
ret
leave
fsubs
pop
jl
in
bound
imul
add
adc
and
lret
mov
xchg
and
jnp
test
mov
or
mov
popa
mov
and
ret
out
pop
outsb
mov
lds
xchg
cld
mov
mov
cmp
push
jmp
ljmp
repnz
mov
pop
js
sahf
popa
cmpsb
cmp
add
imul
add
les
cs
scas
movsl
sbb
cmc
or
push
push
out
popf
push
jl
stc
adc
push
mov
push
in
jno
push
sbb
or
inc
pop
adc
cmc
jo
adc
imul
ss
lock
jl
jmp
mov
jns
sar
sub
xor
cmc
pop
mov
sbb
je
adc
out
ljmp
inc
mov
sub
adc
sbb
mov
push
repnz
cli
pusha
sahf
jmp
dec
scas
xlat
addr16
sub
les
push
xor
jecxz
aad
pusha
jo
mov
fsts
ss
iret
dec
in
popf
out
test
orl
into
xor
movsl
ret
stos
inc
fistpll
sbb
pop
dec
push
push
std
fldcw
icebp
andb
mov
cld
sub
out
sub
add
or
add
jb
adc
dec
insl
sbb
dec
scas
stos
ljmp
sti
dec
aam
sbb
pop
jecxz
jbe
and
push
jge
and
xor
cs
movsl
push
xor
lcall
xor
stos
or
inc
sahf
outsl
imul
jo
rol
push
add
mov
gs
cmp
mov
dec
add
mov
xchg
cmpsl
fbld
or
insl
sub
dec
cmp
icebp
stos
xchg
push
and
push
pusha
notb
jno
ja
or
ffree
mov
sahf
xor
xor
push
sarb
adcl
movsl
or
pop
out
lret
cmp
lods
and
test
inc
pop
outsl
xchg
shll
or
dec
repz
fdiv
ja
pop
or
bound
adc
mov
mov
daa
inc
into
stos
je
mov
sbb
cmp
mov
stos
out
add
cwtl
sbb
je
mov
xchg
sbb
and
gs
jp
mov
rclb
popa
and
pop
jbe
das
enter
pusha
sbb
mov
and
jle
push
pop
verr
andl
inc
mov
dec
push
aad
and
sub
or
fwait
int3
push
and
mov
push
jecxz,pt
loop
fs
sahf
data16
cmp
es
jmp
and
mov
sbb
mov
nop
std
push
lods
je
loope
movsb
jecxz
xlat
ret
xor
xor
les
rcrl
jp
stc
or
fsubl
pop
mov
fucom
and
ljmp
inc
push
dec
mov
cwtl
dec
loopne
mov
fldcw
jae
fwait
cs
jnp
call
add
imul
jnp
and
cmp
stos
inc
addl
jg
push
mov
data16
ljmp
jb
fs
lret
push
imul
int
and
jo
test
int3
test
jge
dec
sub
cmp
jge
push
pop
pop
fwait
repnz
dec
sub
out
or
scas
les
test
sti
mov
scas
inc
pop
xchg
jb
pop
dec
dec
cmp
push
cmp
test
rolb
outsb
xchg
pop
popa
mov
jb
mov
and
dec
dec
sub
and
and
push
push
mov
push
fmull
aaa
and
data16
jmp
sub
stos
int
cmp
inc
pop
cwtl
jne
dec
jb
or
pop
inc
cmpb
mov
cld
dec
repz
push
or
pop
cld
mov
cmp
push
pop
inc
lock
fstps
push
fistps
aad
out
xor
nop
xor
pop
in
das
jo
jb
pop
js
adc
ret
cmpsl
jb
dec
mov
inc
decl
jnp
test
pop
lock
scas
cmp
sub
add
loope
pushf
jmp
repnz
lods
loopne
cwtl
xor
sub
mov
or
in
addl
aas
or
adc
inc
cmpsl
out
mov
cwtl
cmc
cmp
fisttps
clc
sub
add
aas
and
das
es
xadd
mov
in
sub
inc
sbb
data16
es
lods
lods
test
and
and
pusha
jbe
pop
ds
test
sub
mov
jns
in
jg
xchg
dec
int3
pop
fwait
dec
jno
sbb
adc
lret
insb
lea
loop
fcmovne
or
test
ret
aam
jmp
push
xchg
jb
push
shlb
sbb
in
frstor
ror
mov
mov
dec
ja
mov
in
psubd
xchg
push
inc
cltd
mov
pop
pop
and
pop
mov
sub
stos
movsb
repnz
lds
add
or
sti
sub
das
ficoml
dec
inc
ljmp
xchg
cmpsl
xchg
pop
adc
push
xchg
cmp
sbb
into
test
sub
inc
pop
test
xchg
mov
xor
mov
aad
das
das
dec
enter
xchg
sti
adcb
jl
push
adc
push
sti
add
rol
ljmp
lcall
fs
ds
adc
popa
or
outsl
scas
jl
cmpl
xor
mov
jne
inc
rcll
rclb
cli
icebp
lret
pusha
xor
movsl
out
aas
ds
leave
pop
mov
add
or
dec
aad
or
sbb
lock
int
rolb
mov
out
sbb
push
movsb
xchg
fisubl
sbb
lock
sub
incb
pop
push
mov
outsl
xor
push
xchg
in
loopne
arpl
test
clc
cmp
gs
scas
js
sub
push
mov
sbbl
xlat
mov
push
dec
sub
dec
fs
ret
loop
mov
xor
je
xorl
add
mov
xchg
shlb
ss
add
data16
in
or
or
addr16
aas
pop
xchg
sub
subb
int3
mov
cli
mov
stos
cmp
inc
fimull
jnp
mov
and
mov
push
lods
in
fs
add
mov
js
sti
hlt
push
pop
les
xor
in
ja
sub
mov
iret
push
icebp
stos
shr
add
movsb
lcall
xchg
out
aam
push
or
sub
inc
mov
mov
shr
fwait
dec
jns
aam
sub
add
daa
les
out
pop
sbb
mov
mov
mov
add
pop
test
clc
int
in
in
pop
and
sbb
xor
jl
cmp
lahf
jnp
ja
xchg
xchg
data16
std
lret
mov
mov
add
pop
out
cmp
and
out
out
test
mov
shll
add
or
xor
xorl
dec
mov
out
pop
shr
flds
outsl
jp
dec
pop
sbbb
mov
mov
mov
or
outsb
stc
inc
sbb
and
push
aad
pushf
jns
sbb
xor
push
lret
or
les
and
or
loop
add
push
push
mov
insl
shrl
loope
mov
ljmp
adcb
sbb
stc
mov
dec
jae
repz
in
cmp
mov
jno
add
and
adc
mov
jmp
xchg
mov
pop
and
lahf
fcomi
pop
fwait
loope
jge
stos
out
xor
mov
lret
mov
bound
pop
bound
xchg
inc
xorb
dec
jne
xchg
scas
test
pop
cltd
stc
xchg
or
dec
ror
or
or
push
insb
add
mov
pushf
add
stos
push
test
push
test
scas
popa
aaa
inc
lcall
xchg
subl
icebp
add
mov
ljmp
inc
add
fisubrl
cmp
enter
jns
xlat
push
insl
in
push
mov
lods
fistps
adc
imul
mov
test
sbb
lods
sbb
popl
cmpsl
push
cmp
test
and
stc
sbb
outsl
sti
mov
add
outsl
les
fcomp
out
daa
and
cmpsl
xor
jmp
add
pushl
mov
cmpsb
ret
rorb
adc
pop
push
ljmp
sbb
dec
mov
inc
sub
jl
testl
mov
cmc
and
leave
lea
add
mov
sbb
or
push
dec
rclb
cmp
in
jo
dec
test
mov
in
mov
test
repnz
ljmp
adc
push
sti
or
mov
mov
dec
or
xor
sahf
insl
xlat
data16
ret
shll
inc
cmp
push
jbe
fcoml
xchg
adc
xor
add
lods
es
fadds
hlt
fcmove
mov
add
lods
mov
addr16
ret
dec
inc
enter
aaa
push
or
imul
cmp
faddl
iret
es
fs
cmpsl
mov
aad
pusha
jb
lret
cwtl
mov
hlt
pop
je
pop
cmp
fdiv
mov
or
cmc
outsl
aaa
push
and
and
cmp
int
stc
in
jnp
xchg
les
daa
mov
add
scas
or
cwtl
jmp
lret
iret
nop
rorb
cmp
adc
or
dec
add
imul
shlb
roll
lcall
call
mov
cmp
mov
xchg
shrl
out
aas
pop
ret
mov
stc
sub
sarb
mov
push
push
sbb
add
and
jo
ffreep
in
std
push
mov
or
jle
outsl
xor
jge
loope
and
jns
xchg
dec
dec
add
aam
jae
push
sti
mov
push
push
aas
daa
sbb
sub
adc
je
jge
cltd
in
jmp
push
jge
outsb
loopne
int
fstp
inc
int
xlat
je
dec
dec
arpl
mov
out
lahf
ret
sarl
outsl
sub
imul
popa
jle
dec
out
cld
mov
inc
int
mov
mov
cmp
outsl
inc
cmpl
int3
push
retw
sub
nop
and
or
imul
or
cs
or
fidivs
fidivrl
cltd
cmpsl
sub
adc
into
xor
mov
sub
cmp
mov
and
xlat
fwait
cmp
movsb
rolb
and
xor
out
or
mov
sar
cld
dec
mov
in
dec
je
inc
xchg
mov
mov
jb
cmp
jp
ret
add
pop
pop
lahf
roll
xchg
imul
cmp
sub
psubw
xor
xchg
push
push
push
shlb
push
imul
dec
jbe
ds
mov
push
jl
cmp
cmpsl
cltd
aad
repnz
jp
mov
pop
aam
mov
mov
mov
movsb
in
jnp
mov
inc
add
mul
mov
push
add
sub
cmc
xchg
push
clc
and
imul
jae
adc
clc
shll
or
ss
and
ljmp
in
dec
je
cmp
dec
ljmp
cmp
ret
push
repnz
mov
mov
cs
jp
xor
in
mov
add
fnstsw
dec
and
daa
nop
outsl
adc
sub
xor
xchg
cmp
fisubl
sub
add
xor
loope
inc
pop
dec
lock
jnp
roll
pop
out
cmp
dec
mov
iret
cmpsb
hlt
mov
mov
das
pushf
xchg
adc
dec
add
rclb
mov
and
sub
cli
sub
cs
lea
ffree
je
mulb
test
push
mov
test
push
and
cmp
dec
fimuls
mov
cmp
sbb
in
or
push
xor
and
insb
xor
pop
std
mov
jo
loop
outsb
cmp
je
repnz
jo
aam
dec
add
test
push
push
das
and
jg
in
inc
outsl
or
lcall
pop
rorb
and
mov
lret
sbb
cmp
mov
pop
test
jbe
xchg
jecxz
pop
stos
jecxz
mov
and
dec
and
xchg
mov
dec
lock
cmp
insl
mov
lret
cmp
imul
dec
inc
jmp
and
sub
test
bound
or
imul
insb
scas
sub
xor
lods
stc
xchg
fimuls
mov
sbb
xchg
mov
in
call
sub
aas
cmp
xchg
sbb
mov
sub
pop
mov
outsl
lods
idiv
add
dec
aam
dec
fs
cltd
in
push
repnz
push
mov
dec
or
xchg
outsb
mov
xor
and
mov
movl
mov
mov
sbb
inc
in
mov
test
jp
lock
fwait
clc
mov
add
out
das
fcmovnb
int
dec
sbb
clc
int3
push
push
ljmp
adc
pop
mov
shll
inc
sbbl
mov
insb
leave
sub
jo
pusha
das
dec
inc
popa
popa
push
push
out
pop
push
mov
jbe
mov
loopne
test
mov
cmc
lret
sbb
pusha
dec
shlb
cmpsb
lods
dec
or
shl
mov
out
mov
xor
imul
call
dec
sub
addr16
push
insl
or
jl
mov
xchg
hlt
push
sub
sbb
enter
mov
lds
and
idiv
or
mov
and
loopne
ss
je
xor
push
es
fadd
or
imul
inc
stos
mov
push
xchg
dec
ficomps
push
shr
lds
mov
mov
ret
cmp
xor
dec
push
and
popa
and
fimull
cmp
push
fwait
mov
mov
sub
fwait
inc
ret
mov
jg
dec
fsubrs
jb
mov
mov
xchg
das
scas
cwtl
arpl
push
sub
mov
mov
cs
mov
sbb
sub
mov
stc
loope
add
push
outsb
mov
xchg
push
xor
and
inc
cmp
or
ret
jb
pop
lds
iret
push
dec
in
fs
lods
call
stos
cli
icebp
push
xchg
ret
jno
mov
lcall
je
fimuls
jnp
inc
sbb
rorl
sub
gs
mov
cmp
stc
mov
into
mov
pop
lock
sub
aaa
push
movsb
dec
xor
push
push
pop
bound
mov
flds
jge
lret
cmc
pop
rcrb
ret
mov
mov
test
gs
push
roll
inc
push
das
mov
jmp
pop
in
jns
sub
out
mov
movb
pusha
mov
fcomps
subl
mov
add
test
mov
rclb
fisttpll
push
fcoms
loop
sub
fsubrl
rorb
nop
test
sbbl
xor
mov
in
cs
jmp
pop
inc
inc
repnz
in
jnp
aad
cmp
cli
pop
cmpsb
xor
sti
fwait
popa
pop
nop
sub
pop
in
ficompl
ror
sti
fwait
mov
add
dec
mov
add
xor
repz
inc
sub
js
push
pop
jae
mov
cs
pop
hlt
adc
push
js
outsl
inc
xchg
mov
fistpll
adc
mov
cmp
mov
push
pop
pop
cmp
repnz
cmc
arpl
jne
lea
pop
aad
xchg
fcompl
inc
pop
sbb
cmp
stos
mov
fnstsw
xchg
cmp
mov
mov
sub
jl
icebp
stos
ret
push
or
fstl
jle
aas
stos
dec
gs
mul
out
arpl
jmp
push
mov
orb
fs
insb
loop
cmpsb
sbb
adc
xchg
gs
pop
mov
cltd
outsl
or
inc
pop
and
fstpl
test
mov
mov
cltd
bound
lods
fwait
pop
cmp
cwtl
icebp
jo
insb
test
lods
cmc
mov
in
sub
fadd
outsb
inc
das
shl
jae
cmp
mov
add
push
repnz
or
add
inc
jge
ja
shrb
pop
pop
xchg
icebp
out
out
pop
dec
dec
aas
and
aas
out
insl
les
and
gs
or
sahf
lcall
fisubl
ds
push
pop
xor
in
pop
imul
stc
jp
push
test
jnp
push
mov
dec
jno
push
cmpsb
pop
cmpsl
xchg
mov
push
sub
sbb
adcl
dec
pop
popaw
subl
in
repnz
sbb
dec
rclb
lds
inc
sub
pop
push
into
and
push
aas
adc
mov
push
inc
fistpl
mov
dec
icebp
adc
adc
or
pop
sbb
xchg
or
ds
mov
testb
popf
lahf
into
test
popf
ja
pop
je
adc
pop
and
push
push
in
mov
scas
xlat
xchg
adc
sbb
jge
ret
jns
sti
lcall
lock
inc
or
add
mov
jns
adc
sahf
adc
testb
lret
icebp
fcoml
push
int
dec
cmp
sub
imul
pop
fdivs
lcall
cmp
inc
cmpxchg
divl
addb
pop
rsqrtps
push
aaa
mov
in
stos
xor
sbb
arpl
and
pop
and
and
out
dec
push
sub
dec
test
and
inc
jns
testb
jmp
clc
lret
lock
push
aam
sbb
pop
mov
or
dec
add
hlt
aaa
in
sub
mov
ss
movsl
scas
loop
mov
lret
cmp
dec
sub
cmpsb
cld
clts
mov
ljmp
xlat
or
inc
divl
addb
cwtl
in
adc
stc
pop
inc
mov
sub
sub
add
mov
out
mov
lock
push
sbb
jbe
cmp
mov
dec
mov
imul
push
mov
jmp
gs
mov
iret
xchg
bound
jo
inc
or
mov
mov
sbb
xchg
pop
and
rcr
stos
bound
test
dec
popa
dec
aas
pop
pop
negl
popa
mov
xor
dec
add
xor
mov
inc
sbb
lret
xchg
lods
push
test
js
pop
leave
push
daa
outsl
and
outsb
int3
sbb
jmp
lret
into
mov
xchg
adc
inc
into
int3
cmpsb
push
repz
call
jb
sbb
aaa
push
hlt
rcrb
stos
push
sbb
mov
xchg
push
imul
mov
inc
xlat
outsl
dec
dec
lret
je
decb
mov
sti
mov
sbbb
xchg
jmp
cli
push
pop
ffreep
pop
cmp
sti
testl
loop
xchg
dec
loopne
dec
sbb
dec
cli
push
and
mov
aad
scas
add
dec
and
lods
and
mov
cli
addr16
sub
cmp
lahf
or
mov
jae
cmp
call
cltd
aam
mov
sub
inc
mov
rclb
pop
sti
roll
xchg
mov
out
ret
xorl
gs
add
nop
pop
dec
pop
jo
lock
add
pop
cmp
mov
inc
out
mov
mov
push
lock
fldenv
jns
shrl
aaa
xor
mov
add
or
ficoml
adc
mov
add
mov
cmpb
inc
in
cmc
sub
jno
cmp
sbb
or
jbe
adc
out
into
push
inc
jmp
cmp
std
sbb
stos
push
xchg
jo
inc
sub
cmc
lcall
gs
dec
rcrb
scas
outsb
jns
mov
and
push
adc
pop
iret
daa
jp
mov
fsubp
les
push
mov
sbb
sbb
mov
sahf
int
or
pop
pop
aaa
or
mov
sub
dec
dec
cmpsb
inc
int
outsb
pop
mov
or
xchg
jmp
inc
pop
les
js
ds
cwtl
mov
enter
mov
push
mov
dec
adc
sub
pop
cmp
lret
cmp
push
mov
negl
adc
movsl
inc
dec
arpl
mov
sub
push
cli
call
mov
imul
ret
xor
shrl
cli
fidivs
and
jl
mov
xor
adcb
sbb
push
or
jae
jle
xor
out
in
call
jmp
aad
lock
leave
jo
push
jno
or
out
jl
and
dec
fstl
data16
fcmove
jne
leave
adc
movsl
lods
or
lods
dec
and
jae
cmp
cmc
push
aas
push
jmp
cli
sub
decl
andl
cmp
jno
push
cmc
js
inc
repnz
sahf
xor
jecxz
pop
std
xlat
ficomps
lods
pop
cli
and
aam
fisubl
mov
cmp
pop
adc
xchg
test
or
in
int3
mov
mov
jne
daa
mov
mov
test
aas
adc
pop
test
sbb
enter
mov
sbb
out
push
mov
lods
cmpb
in
mov
push
or
adc
pop
add
xchg
out
loopne
push
jno
mov
inc
add
mov
lcall
or
cmp
aaa
adc
leave
push
sbb
xor
mov
dec
add
sub
xor
fcomps
jmp
cmp
sub
js
arpl
and
andl
pop
sahf
sub
sub
pop
jle
mov
sbb
push
lahf
jnp
push
stc
stc
mov
out
shlb
ja
add
lods
inc
push
les
lods
aas
xor
dec
cmpsl
xor
cmp
pop
fiaddl
inc
or
push
or
xor
cmp
out
mov
lods
out
xchg
xor
mov
jns
dec
adc
jo
push
enter
stc
mov
inc
push
ret
mov
jae
pop
jo
notb
lea
imul
aam
sub
dec
loope
or
jle
push
xor
mov
jno
sbb
push
jb
mov
in
and
xchg
or
pop
inc
popa
mov
pop
cli
jns
pop
cmc
push
call
sbb
push
xchg
push
lock
cmc
dec
in
xchg
out
out
in
or
mov
insb
insb
mov
out
outsb
adc
ret
popa
jge
add
test
dec
cmp
fmuls
and
sysexit
push
mov
fnsave
gs
insl
lods
inc
sti
stc
mov
cmpsb
rclb
aas
jo
test
lret
lret
sbb
fwait
inc
rcll
cmp
lret
and
sub
sub
mov
test
ss
arpl
stos
pusha
gs
pop
xchg
sysret
push
ret
sbb
dec
jge
dec
call
add
jle
int3
cmp
pop
xor
ja
fcoms
ficoml
cmpsb
inc
daa
jae
fdivp
mov
adc
jnp
test
std
or
xchg
lret
sbb
xor
push
mov
cmp
arpl
lods
pusha
mov
sub
cltd
in
adc
scas
sub
addb
clc
xlat
push
mov
mov
sbb
push
push
push
jge
pop
fcoml
add
lcall
cmp
push
pop
das
fsubrs
mov
or
mov
lahf
out
je
ljmp
ja
dec
jne
scas
stos
xchg
xchg
sub
push
fsubr
or
ljmp
fsubl
xchg
mov
fldenv
or
xor
adc
hlt
fisubrl
dec
dec
push
or
inc
push
and
adc
mov
jno
sub
cld
pop
ja
or
repnz
icebp
loope
dec
lods
and
push
test
add
xchg
rorl
arpl
negl
and
mov
gs
lock
xchg
push
lahf
jmp
xorl
sub
pop
fidivrs
xlat
fwait
add
pop
push
pop
xorb
xor
inc
rcl
dec
pop
outsb
popf
into
cs
pop
push
pop
incb
arpl
pop
push
in
dec
dec
les
lret
cmp
outsl
ret
inc
adc
inc
scas
mov
dec
or
pop
sbb
ss
and
xchg
jmp
jb
ja
insb
sub
adc
push
adc
std
aas
jle
insl
cmpb
cmpsb
inc
pop
mov
out
sbbb
cli
inc
add
or
push
in
mov
dec
bound
addb
xchg
out
cmp
ss
inc
pusha
adc
daa
mov
fs
cli
roll
xchg
mov
sbb
test
cmp
test
lret
push
push
add
push
fadd
ss
aam
dec
cmpb
mov
test
cmp
dec
pop
jg
pop
jg
subl
loop
arpl
sub
sahf
pop
out
pop
pop
jne
push
aam
and
mulb
mov
loop
add
imul
testb
sbb
mov
stc
out
imul
stc
stos
push
cli
cmp
int
mov
add
push
and
inc
inc
cmp
fdivs
insb
mov
xor
push
sbb
push
sahf
push
test
inc
xor
adc
addr16
sub
and
loopne
adc
mov
pop
repnz
add
xchg
inc
sub
dec
incl
arpl
pop
pop
mov
pop
js
adc
roll
adc
add
xchg
scas
pop
or
test
mov
mov
dec
dec
fistpll
mov
mov
in
cmp
cs
mov
std
pop
fcmovbe
or
jg
cmpsb
bound
gs
pop
test
es
or
scas
movsl
lahf
jne
and
xor
jmp
xlat
cltd
mov
pusha
push
jno
or
sahf
gs
add
out
push
movsb
outsb
and
lret
divl
and
mov
int
test
mov
into
xor
jl
repz
lcall
sbb
in
xor
or
pop
dec
cmp
push
add
scas
lret
lcall
sub
stc
add
pop
dec
movaps
outsb
cmp
xor
test
in
and
idivl
gs
add
cmpb
callw
loopne
and
test
and
lods
mov
push
cmp
xorl
jl
mov
adc
mov
aaa
popa
addl
out
test
push
inc
pop
lahf
fbstp
daa
loope
xor
jb
sub
dec
dec
fucom
out
mov
mov
jo
test
in
xchg
ret
das
mov
and
sahf
shrl
dec
scas
dec
xchg
sbb
add
or
in
mov
loope
or
inc
aad
shlb
inc
dec
jns
xor
inc
ret
cmp
mov
sub
jb
jp
jl
rclb
jle
xor
outsl
std
xchg
hlt
pop
ljmp
add
push
jl
cmp
cmp
sbb
fnstenv
push
mov
jg
pop
add
adc
dec
dec
or
sarb
popf
outsb
out
popf
and
in
cs
mov
cwtl
popf
addl
or
repnz
ljmp
or
ja
scas
aam
das
cmp
xchg
pop
cmpsl
fsubrl
push
xchg
or
inc
adc
xor
fiaddl
cltd
ljmp
fistpll
and
gs
aam
leave
mov
xorb
lcall
and
stos
gs
rorl
add
mov
aas
pop
mov
adc
pop
or
loopne
fsubrl
pop
int
xchg
push
dec
ds
fisubs
add
hlt
push
lods
ret
xor
pop
jns
xor
enter
subb
imul
adc
jl
mov
outsb
inc
lock
xor
bound
mov
into
jne
es
mov
pushf
mov
in
inc
testl
dec
mov
sbb
xchg
pop
xor
mov
repnz
enter
dec
bound
pop
jmp
xor
shlb
into
push
js
cld
rolb
hlt
stos
pop
mov
daa
int
out
imul
bound
daa
push
adc
pop
out
and
mov
loop
add
xchg
push
fcompl
test
jmp
das
rorb
nop
aas
and
cmp
mov
jle
lret
inc
sub
xor
add
rorb
sbb
rcll
les
push
cmpl
sub
pop
cmp
packssdw
pop
int
inc
pop
rclb
fldcw
mov
inc
arpl
add
loopne
sub
push
daa
fldl
stos
mov
or
and
sub
pusha
pop
xchg
je
adc
jno
stos
out
dec
cmp
leave
mov
je
or
aaa
fbld
inc
pop
push
hlt
inc
ss
cmp
sub
sub
xchg
adc
inc
mov
cmp
andl
pop
xor
repnz
mov
sbb
loope
mov
jecxz
xchg
push
scas
frstor
pusha
push
test
stos
add
jb
inc
fld
add
pop
dec
ds
jne
out
add
xchg
stos
sub
add
cmp
mov
or
xchg
adcl
pop
pop
aas
lret
and
dec
mov
push
jo
leave
cmpsl
pushf
out
jo
insb
adc
and
fstps
clc
pop
stc
or
stos
ja
lods
pop
je
mov
aaa
sbb
xchg
stos
sbb
and
lds
or
push
mov
inc
testb
mov
cmpsb
sbb
pop
or
fnstcw
jmp
push
dec
sbb
add
push
jae
bound
xrstor
out
cmp
sbbb
insb
aaa
pop
push
lret
hlt
fimull
pop
iret
mov
and
push
sub
pop
fnstenv
aas
push
and
dec
daa
push
loopne
inc
or
inc
inc
xchg
jb
in
ds
inc
stos
je
sarl
adc
push
mov
fbld
testb
aad
rcrb
jb
jbe
nopl
push
pop
xor
push
fs
jecxz
cmp
xor
or
fistpll
mov
mov
gs
inc
outsl
mov
loop
jo
test
cld
jg
mov
sti
push
addr16
movsl
repnz
rorb
ret
mov
rorl
xchg
jl
jns
bsr
mov
jl
cmpsl
aam
sbb
pop
addb
xchg
daa
out
jecxz
and
psubusb
imul
fidivrs
loopne
sbbl
and
lea
cmp
dec
lods
or
adc
adc
mov
sbb
jbe
xchg
jb
jnp
pop
repz
notl
cmpsl
cmc
divb
jmp
inc
lret
add
add
cld
ljmp
mov
outsb
xor
inc
in
test
pushf
lss
mov
jno
cli
mov
cmp
mov
adc
imul
in
sub
xchg
in
push
dec
pop
pushl
xchg
or
push
xchg
pop
scas
jecxz
das
ss
dec
mov
sub
test
rclb
inc
call
clc
aad
adc
repz
cmp
in
jo
popf
imul
enter
iret
popf
sbbl
jmp
out
dec
dec
scas
iret
fucomp
dec
inc
aam
popa
adc
pop
loope
add
jp
push
cli
inc
xor
sbb
xchg
jns
mov
sti
xlat
adc
aas
roll
loopne
mov
push
push
outsb
sbb
and
mov
les
xor
scas
cmp
mov
rorl
xlat
add
sub
or
cmp
icebp
inc
ds
repnz
out
dec
call
push
sahf
dec
loop
sbb
xchg
adc
push
cmp
icebp
pop
pop
mov
test
jecxz
hlt
in
sbb
rcll
jmp
pop
sbb
je
pop
imul
fbld
cs
pop
fimull
and
enter
outsb
int
int3
jle
cltd
xchg
dec
add
xlat
inc
cmp
or
andb
into
mov
clc
jge
repz
jbe
icebp
or
imul
jno
roll
int
stos
mov
movb
rcl
or
cmp
dec
add
icebp
or
cmpsl
jge
int3
jp
inc
push
pop
imul
adc
mov
cmp
fdivr
add
sub
mov
arpl
xor
ljmp
loope
mov
push
fldt
or
outsl
pusha
add
mov
mov
inc
in
insb
in
notb
push
mov
mov
push
xchg
push
clc
push
sbb
mov
xchg
loopne
inc
stos
xchg
imul
mov
pop
jl
aam
dec
imul
mov
and
fnstsw
xchg
add
out
adc
cmp
cmp
loope
ss
cmp
fs
out
popf
pop
lods
dec
ret
je
mov
xor
adc
inc
call
inc
sub
sub
repnz
sub
dec
sbb
inc
or
push
pop
dec
mov
cmp
lret
sub
dec
popa
inc
enter
fsubs
mov
sub
sbb
push
jecxz
data16
lods
icebp
and
addr16
stc
hlt
callw
lret
push
ljmp
test
ret
imul
iret
imul
push
inc
arpl
cmp
pop
inc
ffreep
mulb
in
push
sub
js
xchg
sbb
mov
js,pn
inc
mov
rcrb
and
test
shr
push
gs
push
jb
xchg
out
adc
jle
sbb
sbb
push
inc
lret
test
sub
push
ja
sub
insb
outsl
mov
shll
stos
insb
lcall
or
cmp
rorl
push
xor
mov
inc
cmp
into
addl
insl
loope
inc
dec
lret
les
sbbb
cmp
push
ja
cltd
arpl
sahf
sbb
dec
mov
jecxz
je
cld
cmp
aad
jb
mov
dec
out
push
mov
pop
or
xchg
mov
and
cld
aam
push
push
mov
adc
push
into
mov
adc
mov
sub
push
lock
int3
mov
or
jnp
mov
lahf
ja
stos
or
push
mov
xchg
aam
dec
push
int
ficoms
cmc
inc
in
test
enter
mov
insl
lods
arpl
push
daa
pop
pop
push
xor
mov
lret
loop
cmc
push
lods
cwtl
fbld
imul
subl
pop
scas
mov
ss
imul
arpl
lock
fld
xchg
hlt
les
and
imul
push
inc
in
sbb
jp
lea
pop
mov
leave
jle
pusha
insb
jne
pop
or
xor
dec
ss
adc
pop
fucom
cmp
pop
mov
or
jg
push
sbb
add
cltd
in
xor
fcmovu
dec
inc
or
stos
call
dec
mov
push
in
mov
and
sarb
or
sar
cmp
mov
inc
sub
sbb
mov
out
sbb
mov
mov
xchg
mov
imul
mov
ds
pusha
es
adc
insl
bswap
mov
pop
or
in
adc
cmp
into
int3
push
xchg
lret
rep
cwtl
xchg
dec
bound
je
pop
pop
outsl
scas
test
fmull
ds
loop
int3
inc
jno
pop
les
sti
push
inc
xchg
stos
in
or
add
mov
repnz
adc
xchg
xchg
xchg
sub
pop
daa
jnp
and
xchg
xchg
jae
rcrl
iret
jns
pop
push
push
and
adc
int3
fstps
cmpb
out
inc
movsl
fstpt
jnp
adc
outsb
out
mov
push
into
jnp
jae
cmpsb
jp
les
rolb
xchg
in
decl
dec
jo
or
dec
sub
popf
xor
cmc
push
test
xor
test
jo
mov
std
loope
fs
xchg
push
push
lods
lock
and
and
movsl
xor
rcl
clc
mov
inc
movsl
cmp
lock
clc
or
add
mov
cmpsb
inc
stc
jmp
jae
out
mul
cmp
lds
cmp
mov
cmp
testl
and
inc
sbb
lods
dec
or
xor
add
sub
xor
nop
outsb
shlb
push
test
lcall
aam
push
dec
mov
pop
adc
outsb
std
push
aad
mov
mov
and
insl
adc
dec
les
jmp
pop
nop
mov
jp
jo
push
add
loopne
icebp
fadds
push
mov
mov
lcall
popf
jp
arpl
fadds
and
fistpl
xchg
mov
pop
inc
lock
loopne
aad
mov
je
cltd
xor
or
inc
scas
movsl
sub
shr
mov
lret
push
shr
decl
cltd
dec
stos
lret
loop
jecxz
push
aad
add
mov
pop
stos
fsubs
cmpsb
leave
int
lret
mov
pop
push
mov
push
mov
add
aas
scas
movsl
movsb
jl
cmc
ds
dec
lcall
sub
mov
sub
div
inc
insl
cmp
push
add
call
loope
fcomps
pop
repz
js
sub
jp
push
fcmovb
stos
sub
cmp
shrb
neg
xchg
sub
andb
dec
call
mov
add
rdseed
push
scas
loop
cs
mov
clc
sti
lcall
mov
addr16
test
movsl
or
xor
sbb
jmp
xor
in
pusha
cmpsb
fcompl
push
push
inc
and
xor
mov
int3
mov
mov
sahf
pop
cmp
sti
xor
xor
jp
scas
fimuls
xorb
xchg
mov
lcall
movsb
in
mov
mov
gs
cmpb
aas
cmpsb
adc
mov
rcrl
push
jl
mov
js
scas
stos
stos
addr16
insl
and
addr16
gs
shrl
xchg
sti
add
mov
iret
xchg
mov
pop
dec
out
popa
jge
sbb
out
in
and
std
sub
int3
in
lcall
adc
push
rcrl
xorb
scas
stos
in
call
dec
lret
xchg
and
adc
enter
ds
push
jmp
out
repz
mov
or
ret
adc
xchg
insl
jbe
jge
xor
in
xchg
repnz
push
nop
pop
stos
push
and
xchg
xlat
mov
addb
cmp
ds
dec
in
stc
call
xlat
test
je
leave
add
cmp
cli
add
cwtl
lea
imul
pop
fnstenv
cmp
scas
cli
xor
shrl
dec
cmp
movsb
leave
fistpl
aam
xchg
imul
out
mov
inc
daa
leave
xchg
mov
adc
sub
lcall
xor
xor
shrl
pop
repnz
scas
adc
xor
jge
das
add
sub
iret
cmp
aad
fwait
mov
cmp
into
lret
cmp
adc
push
push
pop
sub
push
in
sbb
xlat
lds
cld
jle
xor
cltd
rorb
mov
and
lahf
sbb
test
rorb
mov
data16
in
jbe
leave
xchg
fildl
push
outsl
mov
in
jecxz
addr16
jp
pop
jmp
sub
ret
lods
test
leave
push
xor
sub
inc
xchg
inc
cmc
test
pop
jl
loope
jmp
xchg
cmpsb
push
lods
cmpsb
aas
jecxz
notb
sbb
mov
sbb
shrl
popf
aas
xchg
adc
insl
sbb
mov
xor
jecxz
mov
ficoms
cld
rorb
xor
sbb
rcrl
test
sti
aam
inc
dec
shll
cmp
and
and
js
fwait
stos
aad
jp
mov
fcoml
out
das
add
popf
pop
mov
add
push
enter
mov
lds
pop
movsl
jecxz
and
inc
pop
cmc
decb
fs
outsl
add
popf
pop
cltd
pop
mov
sub
jge
les
lods
das
icebp
data16
ja
mov
shrb
pop
test
decl
ficoml
adc
or
jae
add
mov
pop
pop
stos
and
push
pop
scas
xchg
jbe
ret
xchg
rclb
scas
loop
xchg
mov
cs
fcomip
dec
jle
inc
leave
adc
add
lahf
fsubrs
hlt
pop
mov
inc
bound
add
imul
outsb
pop
jg
push
jbe
push
inc
lea
mov
fnstenv
repnz
sbb
nop
sbb
cld
jns
jbe
fsubrp
and
push
sub
aam
mov
out
clc
pop
repnz
fwait
movsb
insb
imul
dec
inc
dec
in
add
lret
js
sbb
ja
add
into
arpl
sahf
sbb
pop
in
enter
lods
std
jecxz
into
push
inc
cmp
jb,pn
fstl
jne
xchg
popa
call
inc
mov
push
pop
call
xchg
imul
jno
dec
ret
cld
cmp
into
jae
andb
sub
ja
movsb
xchg
dec
jo
cmpl
or
fcompl
or
pop
sti
lret
ja
or
cmpsl
iret
jo
nop
mov
outsb
jo
mov
jl
sbb
cmpsl
mov
fwait
xchg
cs
lret
fs
jno
testl
and
inc
adc
cmc
mov
scas
rorb
outsb
movhps
jo
adc
cmpsb
fcoms
xchg
mov
or
push
iret
pop
ret
stos
push
sub
adc
addr16
dec
jns
mov
leave
fisttpl
pop
inc
gs
icebp
push
jle
adc
xor
ret
mov
popf
dec
pusha
xchg
movsl
add
arpl
sbb
mov
jge
jne
pop
jp
dec
call
fldenv
ds
int3
daa
pop
mov
mov
jg
mov
in
mov
aas
jnp
jbe
rclb
jmp
std
sbb
icebp
xor
insb
dec
push
mov
pop
mov
repz
mov
add
push
adc
xchg
xchg
repz
andl
test
decb
push
or
jg
dec
sbb
add
out
sbb
incb
test
je
popa
inc
mov
cmpsb
aad
std
pop
mov
or
mov
xchg
into
outsl
xchg
imull
sbb
mov
push
jns
sbb
imul
dec
loop
cltd
dec
imul
dec
jmp
jmp
mov
insl
add
xchg
jb
aas
inc
aam
mov
xlat
or
add
dec
int
cmc
adc
cmp
icebp
pop
xchg
lods
jge
pop
repnz
xor
mov
loopne
loope,pt
push
cli
std
lock
orl
sub
mov
xor
add
dec
or
xor
andl
xor
mov
sbb
mov
jecxz
xor
lret
xor
add
push
mov
jno
icebp
movb
adc
dec
adc
add
movd
mov
aaa
or
or
mov
pop
mull
lcall
shlb
push
or
lret
in
movb
mov
sar
repnz
stos
outsl
fstl
sbb
fidivrl
jle
push
jns
adc
fwait
inc
sub
xchg
xchg
pushf
jno
sbb
mov
add
dec
add
and
test
xor
and
sub
sahf
jmp
fbld
mov
push
out
mov
mov
or
cltd
insl
jns
repz
xchg
pop
sub
cmpsl
mov
es
jge
cld
mov
outsb
add
pop
je
data16
mov
sar
lods
sbb
movl
jnp
sbb
lcall
popa
lahf
scas
push
push
cmp
add
push
nop
loop
lcall
mov
pop
scas
sar
pushw
outsl
or
pop
mov
popa
fsubs
pusha
ljmp
pop
scas
in
mov
nop
int
je
pop
xchg
cmp
dec
mov
in
mov
ret
enter
loopne
push
fisttpll
or
xchg
repz
jo
push
es
jb
into
dec
dec
mov
add
adc
inc
pop
ret
mov
scas
lret
jae
push
add
cltd
xlat
dec
dec
jmp
ja
shlb
out
cmp
aas
sbb
mov
adc
or
sub
ret
clc
je
popf
daa
pusha
xor
cmp
push
sub
xor
dec
inc
aas
inc
cmc
ret
pop
mov
or
push
sar
pop
gs
xchg
pusha
add
mov
lea
jae
dec
loopne
insb
inc
ss
or
jae
rcr
pop
jg
loopne
jle
leave
stos
xchg
fsubl
cld
mov
xor
dec
xor
aad
sahf
popw
adc
push
aam
js
fisttpl
xchg
test
jo
aad
leave
popf
inc
cs
jp
js
out
cli
pop
jle
stos
pop
xchg
or
jle
jp
push
adc
xchg
int
sahf
lea
filds
aad
inc
cld
push
mov
pop
rcrl
out
dec
movsl
and
into
clc
lods
loopne
add
lods
ja
push
dec
ss
push
in
jae
mov
or
dec
pusha
es
ljmp
iret
mov
cli
pushf
fldt
mov
repz
movsl
cmp
mov
clc
dec
pop
sub
add
data16
hlt
sub
mov
sub
ud0
ret
or
xchg
inc
test
mov
pop
cwtl
cld
lret
add
mov
pop
outsb
xchg
cmpsb
scas
lret
out
xor
jnp
into
sbb
aad
cmp
aam
lods
mov
xchg
aaa
popf
push
jae
scas
and
or
push
daa
cmpl
scas
ret
cmp
arpl
xor
pop
lock
or
aam
es
jg
rolb
cld
push
inc
push
pop
jl
push
mov
decl
push
jle
in
or
add
in
dec
jno
jnp
fwait
sub
cmpsb
outsl
lahf
test
add
fsub
push
dec
stos
out
daa
mov
mov
lahf
int3
scas
mov
jl
popf
xchg
adc
inc
cli
xchg
fadds
pop
xchg
mov
xor
push
negb
sbb
dec
inc
inc
mov
pmaddwd
jge
xor
out
inc
insl
adc
push
push
or
xor
imul
sahf
jmp
mov
add
inc
icebp
outsb
scas
push
stos
divb
or
test
inc
inc
pop
and
and
push
into
daa
ficoml
adc
mov
outsb
xchg
mov
adcb
enter
mov
add
mov
mov
dec
aas
cmpsl
mov
sub
sub
inc
rclb
push
scas
cwtl
push
sbb
mov
arpl
loopne
cmp
mov
adc
mov
lret
fcomi
lods
ret
add
fldt
mov
and
inc
mov
inc
pop
mov
inc
lods
lods
mov
pop
jnp
js
jp
and
xchg
and
or
mov
stos
enter
imul
jg
add
outsb
xlat
inc
addb
add
sub
icebp
jl
sub
jbe
xchg
xor
dec
lock
stos
xor
cmpsb
scas
sub
add
fnstenv
aam
scas
outsl
dec
aam
sti
sbb
or
lds
je
mov
adc
dec
andl
enter
jmp
movsl
out
sahf
lea
push
mov
xchg
js
xorb
aas
cmovs
push
flds
sbb
outsl
ret
lret
cmpsb
push
lcall
mov
pop
inc
lock
daa
mov
in
repz
xchg
mov
ljmp
cmpsl
mov
subb
std
sub
push
xchg
push
jge
insb
out
mov
add
fsubs
xor
sti
lods
pop
mov
test
gs
dec
sbbb
cmp
sti
or
or
sub
dec
stos
jo
pop
insl
mov
aas
aaa
mov
cmp
add
and
pop
push
cmp
adc
xor
movsl
in
mov
arpl
test
jg
jns
jl
mov
test
test
sbb
in
js
push
sbb
lock
mov
fidivrl
xchg
mov
mov
into
fs
adc
mov
mov
push
xchg
xor
jmp
xor
test
scas
pop
repnz
pusha
pop
xchg
inc
mov
lret
js
call
cmc
mov
jle
jle
push
mov
push
lahf
insb
mov
pop
imul
orl
fwait
stc
mov
rep
addb
push
mov
in
inc
daa
mov
mov
movsl
push
or
js
jle
fisubrl
mov
xor
mov
out
and
lret
and
dec
shr
dec
or
pushl
xor
mov
add
xchg
xorl
add
int3
fstpt
mov
pop
movsb
ja
adc
fcoms
dec
xchg
xchg
mov
shll
aas
inc
loop
cld
xchg
sarb
or
into
inc
ljmp
push
bound
out
or
mov
push
aad
int3
out
aas
adc
lds
cs
rclb
xor
arpl
outsb
mov
mov
std
adc
cltd
dec
test
fistpll
pop
in
push
mov
adc
jecxz
dec
inc
shlb
jl
jle
or
aad
add
out
test
js
mov
arpl
fbstp
repnz
sbb
inc
pop
testb
fwait
daa
mov
and
xor
stc
mov
seto
test
add
xor
mov
nop
cld
int3
cmp
faddl
or
xor
leave
inc
rclb
adc
jne
adc
xor
xor
sahf
adc
loop
popa
pop
add
mov
push
sbb
dec
addl
and
mov
adc
js
cmpsb
sbb
icebp
pop
xchg
sub
cmpsb
into
mov
mov
mov
stc
adc
adcl
mov
int
mov
push
in
jge
inc
push
loopne
jae
fwait
xrelease
mov
out
mov
mov
inc
cltd
push
cwtl
mov
push
mov
push
inc
sar
adcl
dec
add
inc
shlb
sub
dec
xchg
enter
repnz
test
lcall
mov
in
xor
rcl
or
or
xor
insl
and
lods
or
xchg
push
out
in
lret
out
xor
frstor
lea
mov
sub
jg
out
inc
es
loope
mov
rcr
add
inc
inc
inc
out
hlt
pop
cli
cli
icebp
sbb
sub
stos
mov
pusha
jnp
leave
push
fadds
pop
inc
imul
dec
mov
push
and
jecxz
xor
dec
xchg
jge
clc
pop
jbe
jle
inc
ss
aad
or
dec
repnz
xlat
jbe
cld
xor
popf
out
mov
loopne
aaa
popf
sahf
or
lahf
lea
xlat
in
mov
mov
jl
mov
ja
rcrb
cmpb
dec
mov
or
push
mov
into
lods
in
addr16
lea
mov
hlt
rol
out
mov
iret
mov
dec
adc
cmp
test
outsb
jge
insl
pop
stc
pop
das
push
push
jae
stos
inc
fcoml
jb
adc
stos
fdiv
push
test
jl
lock
pop
push
out
pop
xchg
icebp
imul
ss
lods
cmp
lcall
sbb
pop
xchg
lret
ljmp
mov
lods
pop
int
pop
inc
and
add
insb
mov
pop
sbb
mov
lret
xor
lret
adc
out
addr16
or
adc
fucomi
add
xchg
ret
in
mov
cltd
js
push
inc
xor
dec
and
shll
mov
into
inc
xchg
cltd
xchg
repnz
mov
fpatan
jae
adc
arpl
xor
jecxz
negb
cmp
ja
pop
icebp
dec
or
fstp
inc
xchg
or
jmp
loopne
mov
ds
pop
sub
mov
subb
sti
adc
nop
test
les
xchg
push
popf
push
push
mov
data16
mov
adc
inc
jmp
xor
lret
push
mov
sbb
call
fmul
aas
iret
mov
je
fistps
addr16
xchg
cmp
and
loop
pop
or
xchg
and
push
add
mov
cwtl
notb
leave
cmc
cmpsb
dec
pop
mov
insl
push
popf
pop
ljmp
nop
cmp
cld
mov
aaa
sbb
out
pop
mov
push
hlt
out
sub
sub
inc
push
push
lcall
pop
out
mov
push
push
mov
enter
lea
rorb
sub
xchg
jmp
pushf
pop
lret
enter
sarb
mov
loope
mov
clc
sub
cmp
insl
out
outsl
mov
mov
lcall
mov
stos
mov
cmp
mov
fisubs
andl
loopne
mov
mov
call
dec
mov
mov
fldl
xchg
ljmp
push
jg
push
fstps
push
push
push
dec
xlat
sub
in
test
stos
and
lock
or
fisubrl
and
adc
sub
xor
shrb
inc
out
jb
mov
mov
jl
fwait
sbb
out
and
inc
push
adc
aam
mov
stos
dec
xor
xchg
dec
repz
mov
sub
add
pop
jmp
cmp
cmp
sbb
xchg
mov
test
int
into
jbe
cmp
fcomi
push
stos
pop
dec
sbb
out
push
not
cmpsl
jle
dec
jle
pop
aas
and
arpl
repz
xor
dec
fs
mov
or
insb
popl
cmc
outsb
sbb
and
jge
adc
mov
insl
fwait
xlat
in
je
jge
mov
repz
outsb
mov
and
inc
jecxz
movsl
pop
stos
mov
xor
dec
fnstcw
sti
es
inc
mov
inc
daa
lahf
pop
aaa
fwait
jbe
dec
dec
in
lds
mov
dec
dec
out
pop
hlt
pop
nop
insl
sub
lahf
test
pop
aad
ljmp
xchg
mov
sbb
mov
cmp
push
dec
inc
xor
nop
jbe
roll
into
imul
add
mov
js
jb
jmp
push
push
push
sbb
jne
adc
les
inc
dec
out
xacquire
mov
int3
insl
leave
loopne
push
lods
push
xor
push
mov
or
icebp
jns
scas
ljmp
mov
lods
test
rcrb
sub
stc
and
push
or
loopne
or
add
pop
lods
test
mov
out
data16
cmp
push
push
jl
test
les
dec
es
hlt
fists
sub
mov
loope
or
jg
mov
mov
ljmp
outsb
and
js
inc
aam
pop
and
cs
xchg
das
js
iret
aas
sub
lea
lret
and
and
insb
jle,pn
ljmp
adc
push
pushf
rorb
jo
pop
xor
bnd
mov
jle
lret
cmp
shr
mov
shrb
xchg
pop
push
or
int3
call
push
or
bound
mov
mov
cmp
flds
pop
shl
fisubl
lret
jmp
repnz
neg
loopne
inc
xchg
out
sub
pop
lahf
sbb
pop
mov
adc
loopne
mov
in
divb
ja
adc
cltd
pop
pop
push
dec
mov
adc
cmc
jns
lock
mov
push
movsb
or
push
jno
repnz
inc
push
cmp
or
xor
cld
pop
push
mov
pop
lock
push
into
ds
addr16
bound
rolb
in
jo
cmpsb
test
decl
sbb
dec
mov
jp
rcrb
and
imul
or
pusha
push
aam
iret
or
dec
cld
mov
fldcw
and
cwtl
mov
xchg
add
xor
cs
fidivrs
sbb
lahf
scas
pop
scas
mov
cmp
mov
and
or
mov
mov
in
and
ja
imul
fbld
ret
test
loope
sbb
pop
cmp
sub
cmpl
test
mov
aas
inc
jmp
testl
mov
ds
aam
js
pop
cmp
popf
sahf
int3
or
inc
or
xor
mov
rorb
xor
push
jnp
imulb
jg
cmpsb
popa
cmpl
inc
js
rclb
jo
movsb
xor
adc
shll
iret
pop
int3
pop
jo
push
jns
inc
lds
scas
add
ja
push
dec
out
sub
mov
imul
sti
sahf
xchg
mov
in
roll
mov
add
adc
mov
pop
mov
imulb
mov
popa
pushf
in
mov
ss
test
mov
push
push
mov
or
movsl
sbb
mov
dec
outsb
mov
jae
lea
mov
ret
push
pushf
lock
adc
adc
out
lret
sbb
xor
jbe
jno
icebp
jns
mov
and
mov
push
outsb
negl
movsl
inc
clc
dec
je
fstpl
jp
sub
popa
adc
xchg
sahf
and
sbb
sbb
pop
jne
outsb
scas
scas
mov
dec
clc
inc
cwtl
pop
fidivl
sub
icebp
jl
mov
adc
dec
icebp
icebp
push
int
push
mov
test
xchg
ljmp
mov
push
mov
ja
cmp
pop
mov
adc
fwait
pop
data16
ret
add
cwtl
mull
xor
sbb
sub
lcall
or
nop
in
insb
xor
pop
imul
mov
or
mov
hlt
rclb
push
push
mov
cmp
in
hlt
dec
pop
mov
pop
push
popa
pop
movsl
imul
inc
shlb
cmp
dec
in
or
lods
vmread
cmp
mov
pop
hlt
rolb
and
jo
out
and
xchg
pop
iret
cs
pop
mov
and
add
lock
les
mov
ret
pop
outsl
arpl
imul
inc
out
sbb
xchg
xchg
mov
dec
dec
in
cltd
sbb
outsb
adc
pop
mov
lcall
mov
pop
pop
fnsave
addr16
push
arpl
push
jnp
repz
ret
outsl
jle
rcl
fdivrs
dec
xchg
int3
rcr
outsb
or
jbe
cltd
es
xor
sbb
or
shl
mov
fidivrs
xlat
jae
and
dec
aad
sub
mov
gs
das
jnp
or
or
mov
xor
jbe
mov
mov
adcl
nop
out
or
insl
lea
call
fwait
nop
jnp
mov
stos
and
call
mov
and
push
shll
jg
or
xchg
movaps
popa
daa
fmulp
rorb
imul
loop
pop
in
out
pop
lret
repz
inc
stos
test
sbb
xor
rcr
ds
stos
out
mov
cmp
lock
mov
rclb
dec
lock
das
insb
pop
and
xchg
lret
in
int3
add
rcrb
outsb
sbb
das
mov
or
adc
add
cwtl
enter
not
jae
popa
rcll
and
test
imul
call
movsb
js
xchg
repnz
dec
cmp
mov
ret
sub
das
fsubrl
cld
fs
add
lea
movsb
loopne
and
fwait
sub
or
les
xlat
jl
es
push
adc
inc
in
xchg
sub
insb
fcmove
cmp
sbb
inc
pop
out
mov
sub
std
mov
rorb
ljmp
xchg
sub
mov
fdivl
push
xchg
mov
xchg
or
shll
clc
mov
sub
insl
scas
cmc
icebp
rorb
pop
pop
cmp
push
popf
adc
rcrb
bound
dec
push
outsl
loopne
mov
dec
mov
push
xlat
lret
ljmp
jnp
les
jg
push
leave
xchg
clc
mov
mov
scas
fiadds
jmp
lock
jbe
push
dec
lahf
decb
fnstsw
mov
pop
stos
js
and
mov
sub
in
and
pop
xor
sbb
outsb
or
dec
mov
loopne
into
psubb
jo
ret
cwtl
test
scas
jl
in
jno
imul
cmpsl
pop
sbb
jbe
push
adc
and
nop
lcall
repz
add
mov
scas
das
cli
xor
popa
pop
lret
jae
xor
icebp
push
call
sbb
lcall
and
mov
xchg
add
icebp
addr16
pop
mov
sbbb
insb
inc
cli
ret
cmpl
mov
testb
jmp
movsl
sbb
jl
xchg
subl
mov
push
mov
pop
test
pop
stos
je
stos
test
ljmp
jne
mov
orb
dec
rclb
in
shr
or
bound
add
out
sbb
pop
xor
push
xor
push
test
arpl
and
push
dec
scas
cmp
pop
add
sbb
pop
or
mov
and
es
out
pop
sbb
sub
aad
xchg
adc
ja
adc
dec
lcall
mov
dec
or
int
ds
and
into
orb
shlb
xchg
or
and
sbb
cmp
add
dec
dec
cld
aad
test
fimull
xchg
and
call
pop
es
sahf
mov
popf
pusha
lret
pop
xor
fisubrs
andl
pop
mov
stc
mov
xchg
jmp
pushf
mov
pop
sub
xchg
mov
pextrw
and
fdivrs
mov
insl
les
rorl
mov
pop
adc
lcall
cltd
outsl
scas
hlt
das
jl
mov
sti
out
xorb
loop
orb
and
jne
adc
ret
int
jae
push
ss
pop
add
ret
sub
cmp
out
push
push
cmp
lds
pop
mov
pop
jle
inc
mov
nop
aas
mov
aas
jle
ds
pop
jmp
pop
fisttpll
sub
rcrl
insb
in
int
shl
pop
pop
add
cmp
lahf
popa
mov
sbb
fs
pop
les
pop
or
adc
or
add
jmp
mov
dec
adc
ffree
push
and
stc
popa
mov
xor
mov
inc
imul
pop
push
mov
push
pop
cmc
pop
sahf
sub
aas
push
in
sbb
fwait
divl
int
push
cmpsl
lods
scas
cltd
adc
mov
addr16
pop
and
fldcw
xor
insb
push
inc
jle
repnz
sub
bound
mov
pop
push
roll
or
das
ss
ss
lods
xlat
dec
aaa
inc
out
je
add
repnz
addr16
sbb
into
push
addr16
xchg
or
jo
mov
jge
jb
pop
sti
push
iret
or
adc
repnz
xor
inc
xor
push
call
pop
adcl
jge
inc
sarl
adc
cwtl
jno
push
dec
add
loopne
sbb
test
pop
mov
inc
ds
jb
adc
jo
incb
mov
dec
stos
testb
sub
imul
popa
in
pop
adc
pop
lea
jp
cmc
mov
mov
sub
mov
inc
cwtl
pushl
outsl
stc
movsl
push
aaa
pushw
out
push
cli
cmp
sbb
jnp
call
mov
jae
xchg
into
adc
cmp
cmp
cmc
loop
cltd
sub
mov
inc
dec
divb
in
mov
je
mov
fiaddl
aam
cmp
stos
xchg
jecxz
add
out
neg
enter
fimull
jne
push
ret
add
and
mov
xor
xor
mov
ret
sarl
cmp
inc
shr
mov
push
inc
cmpsb
sar
shrb
paddq
cmp
jnp
mov
cli
testl
sbb
clc
mov
or
ja
out
shll
push
pop
push
push
push
adc
les
xchg
enter
call
js
add
cmp
out
pushw
out
ja
pop
mov
xlat
push
cld
mov
sub
sarl
rorl
sahf
inc
enter
cmpsl
shl
mov
pop
roll
push
mov
push
into
jnp
das
xchg
fsubrl
jo
sbb
mov
clc
rorb
cmp
mov
aas
pop
jno
jg
lods
jge
stos
add
dec
mov
mov
in
and
in
std
push
mov
inc
std
mov
ret
fidivl
sbb
je
in
mov
sbb
mov
and
mov
push
test
mov
andb
enter
inc
ja
jle
les
nop
push
sub
dec
es
ret
pminub
bound
stos
mov
arpl
jno
sub
jo
aaa
jecxz
movsb
pop
xlat
mov
lea
mov
sbb
int3
fs
pop
or
dec
int
xchg
loopne
pop
ret
xchg
push
int3
je
mov
cltd
push
les
xor
pushf
mov
mov
fsubs
push
daa
outsb
in
das
pusha
xlat
mov
sbb
sub
mov
add
loop
dec
inc
scas
mov
pop
mov
rcl
add
subb
cmp
add
pusha
mov
ljmp
inc
je
imul
add
lcall
cmp
add
sahf
add
mov
pop
dec
mov
mov
mov
in
addb
or
xor
add
sub
aas
pop
rcll
lods
pop
fistpll
rcll
lret
xchg
call
pushf
loop
mov
cmp
jp
jge
pop
or
imul
fistpl
pushf
dec
mov
sbb
sbb
dec
jle
mov
xchg
addl
push
aaa
mov
adc
ret
mov
aas
pop
enter
push
cltd
sbb
or
and
dec
mov
orb
aam
mov
cmp
pop
or
sbb
daa
inc
adc
add
scas
or
cmp
mov
xchg
outsb
sbb
mov
or
sub
pop
pop
loopne
xchg
add
cmp
xlat
daa
jg
mov
xor
arpl
cli
hlt
mov
shll
dec
mov
push
leave
dec
roll
fistps
aas
test
imul
loope
into
mov
and
popa
mov
std
fwait
push
jle
pop
out
test
push
inc
xchg
div
and
dec
subl
mov
scas
mov
loopne
push
mov
cmp
fnstcw
push
mov
sbb
pop
subl
and
mov
movsl
out
fdivl
sarl
mov
addr16
ja
int3
dec
iret
inc
test
jmp
call
loope
pop
or
js
pop
fidivrs
mov
dec
adc
gs
ror
jge
pop
inc
stos
mov
add
dec
test
mov
out
es
pop
clc
iret
and
xchg
inc
push
scas
pushf
orl
xchg
mov
add
mov
fstps
mov
cmpsb
mov
mov
insl
roll
dec
scas
jmp
fisubl
xor
or
lock
test
test
jo
rol
adc
icebp
icebp
imul
cld
pusha
rorl
sub
pushf
push
dec
mov
or
mov
stos
insl
and
insb
movsb
add
xor
add
pushf
mov
shr
rolb
xor
sbb
sbb
push
gs
sbb
fnsave
lcall
ds
mov
lds
insl
inc
flds
inc
mov
fucomp
add
inc
std
mov
dec
roll
pop
jmp
jmp
popf
and
jbe
jns
cltd
in
sti
adc
shlb
jg
jae
inc
in
lcall
shl
xor
mov
jno
loope
lock
outsl
jb
clc
mov
addr16
adc
xlat
lahf
ret
pop
dec
sbb
ja
mov
clc
xor
scas
int3
and
leave
shrl
push
enter
or
lds
sbb
cwtl
or
push
jecxz
cmp
mov
stos
push
cmp
fwait
rcrl
jmp
xor
dec
jg
add
sub
nop
ret
into
and
int3
adc
sahf
shrb
or
insl
daa
cmp
xor
jmp
in
test
sub
leave
mov
cmp
in
fiadds
pop
xor
mov
mov
test
push
pop
push
into
movsb
cmp
dec
es
cmpb
data16
jmp
mov
outsl
mov
and
clc
dec
add
inc
mov
jge
pop
jmp
xor
test
lods
rorb
or
repz
dec
enter
sbb
dec
aas
sub
ljmp
sbb
lods
add
pop
jno
mov
xor
jmp
pop
jns
push
or
xorl
dec
shlb
mov
jbe
into
sbb
ret
jl
jnp
jbe
mov
enter
dec
adc
outsl
cltd
push
inc
jle
je
sub
xchg
fdivl
push
xlat
mov
or
fs
mov
adc
push
and
and
sub
jecxz
dec
mov
popf
scas
mov
insl
enter
das
cmpsl
add
popf
xchg
movsb
or
push
jge
push
pop
lock
and
jns
cmpsb
lds
pop
cmp
std
test
cmp
dec
push
push
int3
shll
addr16
dec
push
mov
ret
loope
xchg
rcrb
stos
adc
sub
mov
push
mov
enter
test
mov
call
pop
cmp
lret
psllw
int
enter
test
mov
cmpsb
icebp
push
jnp
lds
sbb
cs
xor
sub
jle
mov
int
or
clc
cmp
fistpl
xor
sbb
xor
mov
sub
mov
adcb
out
aad
inc
clc
mov
dec
adc
adc
push
add
inc
xor
mov
iret
rolb
repnz
lods
add
scas
aas
xadd
rcrl
je
xchg
inc
push
push
pop
sub
in
cmp
cld
cmp
loopne
ret
mov
enter
pushf
mov
fucomi
sub
ret
outsl
jmp
int3
push
jo
adc
testl
cmp
sbb
out
imul
out
test
pushf
push
shrl
add
jno
das
je
pop
in
jns
sti
popf
fiadds
in
mov
adc
pop
and
jno
ds
lds
xor
and
dec
sub
xor
leave
push
mov
xchg
push
adc
roll
pop
mov
in
and
ja
xchg
imul
cmp
cmp
xor
movsl
aad
aam
mov
xchg
out
mov
mov
cmp
sahf
xorb
mov
movsl
cmp
ds
inc
xchg
inc
inc
inc
test
ret
cld
dec
lds
cmpsb
outsl
addr16
mov
pop
out
inc
cmp
in
pop
daa
mov
popf
mov
ljmp
insl
inc
icebp
ds
pusha
adc
popa
jns
std
iret
lcall
and
cltd
inc
repz
xor
fnstsw
rorl
int3
rolb
jl
push
xlat
cld
and
fldl
cwtl
cltd
mov
int
jnp
push
movsb
addr16
pop
push
imul
hlt
pop
inc
dec
mov
imul
add
pop
dec
push
xor
sbb
sub
out
xor
les
shrb
and
out
jne
lret
repz
sub
jg
sub
aad
loopne
xor
push
nop
fwait
rclb
imul
cmp
push
ret
enter
in
fnstsw
mov
lcall
mov
add
dec
lds
shll
mov
jmp
std
lret
loop
xchg
test
push
jl
or
out
xchg
sbb
and
adc
mov
jl
push
dec
cs
out
mov
sahf
lahf
cwtl
add
mov
cltd
cmp
sbb
jle
add
mov
fists
ljmp
push
pop
jo
sub
fildl
scas
ds
loop
pop
jg
test
xor
fiadds
test
pop
sti
dec
xor
jb
add
sub
sub
mov
divb
int3
pop
and
add
sbb
mov
pop
add
push
add
jno
push
mov
addr16
cmp
mov
cmp
mov
jb
aad
out
sub
js
imul
hlt
xchg
add
add
pop
adc
dec
jne
jle
dec
cmpsb
in
pop
ja
add
dec
inc
or
sbb
ss
adc
sub
outsb
arpl
outsb
pop
pop
nop
js
cmp
lret
push
mov
popa
xchg
pop
dec
popa
adc
sbb
lea
cld
addr16
in
movsb
sub
sti
ds
cmp
rorl
test
xchg
cld
and
add
popf
lret
cwtl
push
dec
xlat
and
test
lret
pop
lret
pop
leave
inc
scas
clc
pop
out
mov
xor
xor
rcl
dec
jne
addl
movsb
cli
out
adc
sub
xchg
test
jg
stos
sbb
xchg
or
push
and
mov
push
scas
clc
clc
fldt
nop
mov
rorb
add
ljmp
fs
cmp
jl
aaa
sbb
test
dec
push
cld
pop
cmpsb
push
shrb
cwtl
xchg
add
mov
scas
aaa
out
inc
inc
mov
inc
stc
xor
xchg
pop
inc
inc
xchg
sbb
mov
fs
adc
aam
mov
pop
les
sbb
xchg
xchg
repnz
and
iret
divb
add
imul
sbb
sti
ret
aam
pop
mov
jo
mov
icebp
jp
lcall
dec
jns
jge
inc
sbb
cwtl
movsl
addb
xchg
push
or
dec
sub
jno
dec
dec
push
out
mov
xchg
mov
int
lahf
aaa
push
pop
lds
rcrb
rcll
cmpsb
mov
xor
aam
mov
cmc
and
push
data16
mov
loope
nop
adc
inc
fiaddl
push
repz
loopne
mov
pop
jb
xlat
sbb
sahf
fs
mov
or
mov
mov
mov
stos
ja
call
cmc
add
jnp
fwait
stc
enter
pop
push
ret
icebp
frstor
mov
fiadds
je
dec
stos
popa
je
sbb
sbb
fiaddl
push
lods
dec
jg
arpl
shrl
adc
outsl
or
fisubrs
xchg
jo
sbb
adc
data16
dec
mov
pop
or
adc
imul
sub
data16
mov
dec
or
mov
sbb
dec
ds
ror
into
ror
inc
enter
lahf
ror
jnp
xchg
mov
pusha
add
sbb
shr
inc
xchg
add
mov
xchg
push
mov
dec
shll
in
mov
adc
stc
push
push
push
nop
mov
dec
fwait
xor
shll
fdivrp
pop
jno
push
popa
fs
test
or
mov
out
stos
or
testb
jo
jns
mov
insl
mov
push
lods
push
cmp
in
cmp
mov
mov
pop
sub
addr16
jg
scas
xchg
sahf
leave
cmp
aaa
pushf
sub
jns
mov
and
ds
rorl
push
push
ljmp
inc
scas
push
fisubrl
dec
push
sub
mov
push
mov
and
imul
xor
call
stos
mov
jae
and
cwtl
inc
scas
or
inc
or
out
push
xchg
xor
dec
cwtl
push
dec
add
and
aam
cmp
sbb
dec
jmp
mov
sar
fincstp
or
push
pop
cmp
xchg
cld
aaa
nop
cmc
in
pop
mov
int
push
fxch
lea
add
jns
insb
and
insb
and
les
sub
or
cmp
lahf
lods
es
sub
push
or
and
imulb
cmp
pop
or
test
cmp
dec
inc
dec
xchg
sbb
cli
xor
mov
cli
test
jb
popa
mov
push
sub
xchg
loope
mov
jae
jge
out
push
insb
cmpsl
mov
inc
cltd
or
jge
sbb
mov
popa
jmp
sarb
pop
pop
out
mov
push
das
jp
jecxz
mov
cwtl
fadd
cmc
std
ljmp
int
xchg
shrl
and
sub
test
sbb
int
sarb
dec
dec
cmpsl
sub
inc
aas
dec
cmp
lcall
cltd
mov
lock
mov
inc
lds
and
xchg
jg
dec
pop
jmp
adc
sbb
imul
out
cltd
movsl
insl
in
add
repz
and
dec
cmc
addb
ficoms
call
jb
and
sbb
movsl
jnp
fwait
je
ret
jl
fsubl
xchg
dec
cld
sub
movsl
dec
shlb
or
push
mov
mov
pop
test
ss
out
fs
mov
and
sub
bound
add
movsl
ret
adc
sub
shlb
jo
mov
mov
pop
mov
pop
sub
popa
adc
cld
push
inc
push
test
imul
int3
mov
or
and
mov
xlat
lods
pop
lock
pop
pop
and
xor
mov
aaa
push
cli
dec
iret
in
imul
cmpsb
lods
fidivrl
ret
out
ror
pop
iret
scas
leave
and
in
mov
lock
pop
aam
nop
mov
adc
shl
lret
inc
imul
mov
movsb
push
mov
cld
cmp
or
cli
jne
jge
sbb
mov
mov
jge
lret
jmp
aas
out
rcrl
icebp
push
fists
sti
jg
mov
insl
sahf
jmp
add
nop
les
jo
rorl
adc
inc
xorl
mov
pop
ja
cmpsb
aam
or
outsl
dec
nop
push
jg
lcall
call
jae
dec
lods
jg
dec
aas
repz
sti
adc
push
dec
test
xchg
push
add
and
ret
ficomps
divb
push
icebp
jne
cmp
sub
mov
ss
jecxz
arpl
inc
movsl
mov
jbe
flds
fs
cltd
ljmp
mov
test
ret
dec
push
movsb
aam
sub
jne
inc
punpckhdq
movb
les
pop
xchg
jle
cmpsl
cmpsl
push
lea
mov
movb
jle
pop
cmp
iret
sbb
jp
inc
ret
shll
iret
lea
cmp
pushl
inc
pop
xchg
cmp
add
xchg
push
xchg
pushf
dec
adc
pop
movsl
xlat
jp
incb
xchg
dec
movsb
outsb
push
dec
in
add
adc
add
dec
into
sti
loope
inc
and
lea
push
adc
fdivrs
adc
dec
mov
outsb
filds
ljmp
bound
cmc
dec
mov
sbb
cmp
and
clc
adc
call
out
inc
add
jns
push
sub
icebp
lret
ss
sahf
adc
xlat
mov
mov
shrl
jns
mov
test
mov
inc
daa
aad
push
and
jb
or
andb
sub
test
sub
pop
stos
add
push
insb
push
xor
inc
sbb
sahf
cs
inc
jns
clc
movsl
adc
mov
dec
and
jge
into
dec
mov
pop
int3
gs
push
mov
les
ret
in
and
adcb
push
push
dec
adc
or
jge
mov
cmp
loopne
xlat
push
push
movsb
aas
ljmp
sbb
les
insb
sbb
adc
scas
push
cltd
mov
sub
mov
adc
test
mov
and
subl
mov
add
jne
test
dec
mov
mov
loope
adc
mov
pop
clc
ret
dec
test
shr
jecxz
vmovaps
mov
dec
jnp
dec
sub
test
push
push
je
rcll
icebp
rcrb
sahf
test
sub
sti
jb
enter
xchg
mov
gs
outsl
xor
and
cvttps2pi
mov
subl
push
ds
inc
mov
push
shl
jle
scas
std
ds
pop
add
js
mov
test
jle
int
mov
adc
xchg
jbe
clc
test
jmp
daa
sbb
mov
or
pop
test
cmp
and
pop
nop
aaa
adc
insb
pop
jp
and
and
shrb
scas
faddl
movsb
test
cmc
mull
xlat
inc
fisubrs
pop
add
mov
dec
gs
pop
adc
enter
adc
clc
push
sub
daa
int3
pop
rcr
cmp
ret
pop
inc
cmp
sub
sbbb
push
dec
pop
or
mov
mov
push
jge
imul
cmp
xor
mov
xor
cwtl
outsb
ds
adc
xchg
xchg
arpl
xchg
push
arpl
xlat
push
sarl
in
jmp
jecxz
mov
insl
cmpsl
imul
je
adc
push
adc
mov
dec
outsl
mov
cwtl
mov
icebp
out
scas
movsl
test
jbe
jo
xchg
mov
sbb
mov
in
add
xor
jnp
xchg
rolb
fs
sti
pusha
sbb
dec
mov
mov
inc
push
sahf
dec
aad
enter
xchg
imul
jle
or
js
pop
pop
jecxz
mov
mov
or
jmp
shll
sub
pop
ja
pop
pop
adc
mov
sbb
mov
pushf
dec
inc
call
add
push
mov
jne
push
orl
xchg
inc
orb
mov
fidivrl
les
push
jl
fcomps
out
cmp
dec
or
lods
jecxz
ss
mov
ljmp
sub
popf
jg
mov
dec
or
andb
mov
stc
pop
aas
mov
pushf
and
sti
stos
movsl
sbb
mov
sub
sbb
ret
fmulp
subb
int
add
lods
cmpsb
test
push
push
add
imul
js
test
pop
addb
or
mov
mov
test
aam
stos
aad
mov
stos
int
pop
mov
repz
push
xor
and
out
das
adc
in
and
mov
test
cmp
inc
inc
xor
repz
mov
fstpt
dec
fsts
xchg
push
dec
mov
inc
mov
scas
adc
in
push
and
sub
jge
xor
jno
add
pop
ljmp
loopne
xchg
int3
das
xor
sbb
pop
sub
lret
cmpsb
into
out
add
mov
xchg
mov
jb
je
fwait
lahf
fucom
sbb
inc
imul
out
fs
fwait
adc
cmpsl
das
jp
mov
mov
push
pusha
xchg
push
mov
mov
daa
stc
test
dec
iret
push
fists
mov
sbb
xchg
inc
jle
dec
pop
push
bound
movsb
rcll
xchg
pop
mov
jmp
rcrb
push
idivl
movsb
sete
and
stos
sarb
cmc
mov
ja
in
push
or
lods
cmc
shl
mov
pop
sbbl
mov
aaa
lods
outsb
clc
ficompl
jge
push
inc
int3
gs
hlt
fnstenv
or
iret
ret
dec
rorl
in
movb
add
xor
xchg
pop
xchg
iret
add
pop
sub
scas
movsb
xchg
lret
mov
fdivp
pop
push
insb
sub
add
ljmp
mov
repz
jno
jp
adc
xchg
cmpsb
clc
shlb
push
imul
jne
out
sti
add
das
fmuls
popa
push
rorl
cmp
leave
mov
adc
lods
sbb
lods
daa
shr
push
sub
insl
or
or
sbb
arpl
lcall
daa
adc
xchg
mov
sti
cs
hlt
cmp
cmp
ss
cmp
outsb
xor
movsb
les
inc
mov
int
je
test
das
mul
pushl
cltd
mov
or
xor
out
cmpsl
cmp
mov
xchg
cmp
fnsave
sbb
stos
mov
aam
fcmovu
lea
mov
ror
gs
stos
jo
mov
jecxz
shl
inc
sar
in
lods
or
outsl
sub
xchg
xchg
jle
mov
test
fxch
pop
cmpsl
pop
adc
xchg
shr
negb
outsb
fs
outsl
mov
sub
sbb
call
stos
mov
pop
mov
pushf
pop
int
jle
andl
dec
jge
sub
mov
les
scas
cmpsl
out
aam
in
stos
scas
fsts
out
mov
or
xor
test
adc
movsl
xchg
addl
mov
ret
movsb
mov
mov
add
lret
ljmp
pop
and
mov
and
push
js
xor
cmpsb
add
ja
out
cwtl
int3
in
shr
lods
sub
xorb
test
lds
add
cmp
adc
push
gs
mov
lcall
add
lds
cmpsl
sbb
push
sahf
dec
inc
imull
cmp
mov
or
into
lea
sar
pop
into
sub
stos
adc
fistl
imul
adc
mov
lds
lea
jae
movsb
xchg
jle
lcall
lret
mov
jl
jecxz
add
fnstcw
in
sub
xchg
sbb
cli
add
lcall
push
swapgs
call
xorb
sub
mov
xor
mov
adc
and
test
imul
pushf
and
cmp
sub
js
mov
pop
mov
scas
shlb
ss
jmp
mov
in
xchg
je
inc
push
mov
sbb
xor
pop
ljmp
dec
push
push
repz
cmpb
das
out
mov
xor
das
stc
xor
xlat
jnp
inc
adc
loope
iret
and
push
std
cmp
and
imul
mov
out
nop
popf
stos
jbe
jl
lock
push
lea
andl
adc
test
inc
lea
adc
in
arpl
jecxz
mov
insb
insl
scas
pop
xor
xor
push
and
mov
mov
mulb
xor
test
xchg
push
out
nop
test
sbb
push
daa
jg
inc
cmp
push
lods
fwait
mov
addr16
xchg
xor
jle
roll
dec
sbb
movsl
cmp
adc
cmc
xchg
pop
sbb
popa
loopne
push
cli
mov
xchg
ja
in
mov
lods
or
add
dec
jbe
stc
enter
fwait
scas
or
les
notl
outsb
mov
aad
mov
mov
movsb
mov
adc
jno
sahf
xchg
lds
jmp
push
jno
mov
gs
push
sti
pop
mov
repz
mov
adc
cld
stos
push
ja
or
and
lcall
pop
call
xor
gs
fistps
movsl
pop
and
pop
adc
xchg
xlat
call
je
dec
add
aam
mov
in
cmpsl
mov
jne
loop
xchg
mov
jg
ss
fucomip
popf
in
ljmp
aas
notb
and
scas
xchg
fimuls
cmp
mov
cmp
nop
outsl
adcl
jl
cli
pop
test
or
lods
lods
mov
add
mov
inc
jg
es
adc
cmp
xchg
and
movsl
ficoml
out
js
jl
mov
enter
xchg
add
jno
loope
mov
mov
adc
push
enter
sbb
sub
rcrl
pushf
xor
in
mov
and
mov
cmp
and
sub
ret
mov
push
scas
push
rcr
mov
aad
pushf
sbb
addr16
das
mov
imul
or
gs
push
aad
jnp
sub
popa
insl
xchg
stc
fxch
adc
pusha
and
pop
notb
jg
mov
enter
das
fstpl
push
fildl
sub
add
cmpsb
shlb
cwtl
sbb
push
ret
dec
mov
fstl
sub
adc
das
xchg
cld
mov
icebp
mov
add
repz
add
and
mov
aaa
xlat
add
push
cmp
inc
jb
sub
std
addr16
push
mov
jbe
and
mov
aad
fiadds
jg
mov
xchg
cmp
sti
or
ds
mov
lds
test
mov
clc
cmp
dec
inc
scas
dec
dec
add
mov
or
movsb
pop
call
xor
jns,pt
shrl
jp
jbe
sti
xchg
xor
fdivl
pop
test
mov
aaa
pushf
mov
in
pop
fldt
bound
sub
add
xchg
out
ljmp
imul
push
loop
cmp
scas
jns
mov
ffree
fwait
jmp
gs
jecxz
sti
mov
call
ja
lret
xor
inc
std
xor
mov
sbb
jae
gs
fs
arpl
mov
aad
or
pop
inc
out
xchg
mov
jl
leave
push
stc
push
bnd
dec
pop
adc
and
scas
and
stc
cwtl
out
rorb
icebp
cmp
push
xchg
movsl
test
sbb
inc
pop
clc
jnp
sub
mov
jl
loop
lcall
cmp
jbe
hlt
or
and
arpl
mov
or
mov
cli
pop
leave
setno
and
add
shl
bound
jae
insl
cmp
push
in
pop
movsb
add
repnz
push
jns
push
jle
xor
shlb
jo
scas
cli
mov
push
push
mov
hlt
sub
adcl
mov
xlat
fdivrs
frstor
pop
xchg
add
pop
push
rol
pop
jne
or
pop
loopne
jg
inc
inc
clc
shll
ret
loop
sarl
ljmp
sahf
xchg
test
jne
mov
push
sub
out
mov
jl
lret
jecxz
test
das
mov
mov
adc
test
cs
cld
lods
sbb
icebp
mov
fdiv
sbb
jge
ss
aam
out
fisttpl
and
fildll
jp
pop
insl
call
mov
repnz
or
or
push
out
sub
cmp
pusha
jecxz
jmp
dec
leave
xchg
sub
push
ja
jne
pusha
cmp
std
fs
fwait
xor
sbb
mov
cmp
mov
add
cltd
rolb
push
fs
repz
push
xlat
sbb
stos
cmp
and
sub
std
ds
fbld
jle
in
sub
inc
js
push
pop
imul
pop
enter
cmp
stc
imul
cmp
xchg
inc
movsl
lahf
fwait
lret
xorb
sub
xor
les
lret
xchg
xor
jae
lcall
inc
sub
or
cmp
lret
mull
lret
sub
test
mov
out
sarb
sarl
cmpsb
xor
fcomip
lods
in
ret
popa
push
jo
imul
or
push
pshufw
push
inc
test
int
sbb
cmp
sub
mov
add
outsl
movsl
push
lea
stc
adc
and
cmp
mov
imul
mov
pop
nop
push
loopne
lea
add
subb
test
in
xor
mov
gs
leave
dec
sub
push
enter
dec
andb
test
aas
mov
out
inc
sbb
mov
lahf
cltd
mov
lret
jg
fwait
stc
in
fwait
lods
and
sbb
jae
add
mov
fldlg2
xchg
and
arpl
cmp
mov
mov
sahf
and
test
lret
xchg
roll
out
sbb
loopne
out
dec
cwtl
bound
push
je
fsubrs
xchg
imul
lret
sub
stos
cld
push
je
out
je
pcmpgtw
adc
adc
push
mov
out
cmp
jnp
cmpsb
dec
add
xchg
cmovl
ljmp
dec
divb
insl
fwait
cmp
pop
and
pop
mov
out
repnz
popf
jnp
icebp
inc
push
mov
js
push
pop
insb
mov
fstl
clc
cmp
test
jnp
adc
xor
mov
daa
jl
mov
jmp
sub
decl
xor
mov
mov
mov
scas
loopne
popa
pop
mov
mov
out
ret
mov
mov
jns
shlb
fs
out
repz
out
sub
pop
add
mov
xor
ja
or
lahf
aas
jno
fdivrl
xor
adc
mov
fldenv
out
or
xor
jp
push
or
push
leave
movsl
cmp
jp
sbb
arpl
das
je
mov
jecxz
mov
lahf
sbb
dec
and
lcall
xorl
jle
xorb
xor
jecxz
fbld
push
ja
mov
pop
fwait
inc
and
or
popf
out
pushf
shrb
pushf
mov
adc
and
jmp
dec
fcmovu
cltd
or
pop
daa
add
outsb
movsb
or
adc
call
ja
xchg
jmp
add
stos
mov
sub
xor
imul
pop
add
lret
sub
inc
inc
mov
lods
adc
in
jl
fldcw
xchg
push
xor
jg
jl
fstp
pusha
loope
aam
test
cmp
mov
inc
mov
mov
mov
loop
cmpsl
adc
fsubp
fmuls
dec
sub
icebp
sbb
xchg
es
leave
ljmp
clc
outsl
jp
push
fs
int3
fstpl
outsl
xchg
sbb
lret
leave
lods
rorl
pop
out
insl
mov
int
push
ret
xchg
scas
mov
mov
lcall
fwait
xchg
fdivrl
mov
insl
mov
aad
dec
sbb
push
pop
shll
inc
cltd
inc
js
mov
fstpl
push
cs
add
cmp
dec
pop
adc
add
adc
cwtl
or
aam
xor
addr16
iret
dec
inc
lcall
arpl
dec
jl
xchg
and
adc
daa
fidivrl
in
out
mov
insb
mov
scas
cli
test
cmp
rorb
push
mov
sahf
mov
ftst
adc
aas
fcmovne
lahf
jbe
repnz
shl
daa
cmp
cli
lods
loop
outsb
fistpll
adc
popf
cmpsb
repz
icebp
test
push
xor
test
jmp
hlt
xor
loope
out
sbb
or
sbb
test
int
sahf
inc
fisubrl
sub
push
add
sbb
lret
mov
xor
inc
dec
or
lock
jae
test
mov
xchg
in
sbb
movsl
sbb
and
pop
mov
std
mov
lret
jnp
sub
or
imul
jae
jge
jne
divl
jle
lret
cmp
dec
xchg
pop
rcl
or
cli
inc
insb
out
loopne
sbb
imul
adc
stos
dec
mov
test
push
xor
pop
and
out
and
sti
inc
adc
jno
rcl
sbb
ret
les
push
sbb
sbb
add
loope
roll
mov
loop
pop
loope
shll
lods
jno
adc
sub
nop
jae
mov
nop
xor
jae
mov
or
out
lcall
cld
push
aam
loope
mov
lret
insb
daa
scas
jp
faddl
out
inc
aas
lods
sub
shlb
cltd
push
mov
mov
adc
outsb
iret
fdivl
dec
jns
inc
jl
mov
scas
outsb
orb
fnstenv
add
iret
dec
sti
dec
stos
dec
mov
and
pop
xchg
and
push
nop
adc
lahf
fwait
lock
sub
mov
pushf
cwtl
sbb
jecxz
aam
call
outsl
pop
in
orb
push
cltd
jae
testb
mov
jae
sub
imul
jle
inc
dec
mov
jl
and
in
loopne
xor
testb
test
sarl
mov
test
filds
sbb
cltd
sub
insl
sarb
add
cmp
mov
inc
ss
cmc
mov
inc
ret
adc
mov
push
lret
fnstenv
mov
es
ret
daa
pop
jns
cltd
out
and
xchg
and
clc
cmp
fwait
out
notb
mov
std
ret
les
testb
pop
jb
push
into
push
out
xor
push
sar
sbb
lea
icebp
ja
xchg
gs
pop
add
mov
out
mov
sarl
xchg
mov
push
testb
pop
xor
inc
xor
orl
jbe
cld
inc
and
shlb
xchg
push
addr16
insl
loop
je
mov
mov
jmp
mov
cltd
or
dec
xchg
fsts
mov
dec
ret
jae
xor
and
add
push
stos
or
cld
out
int
lret
push
hlt
test
lods
mov
fdivl
lock
mov
sub
cmc
es
outsl
lahf
aam
xor
xor
imul
insl
sub
lret
xor
xchg
xchg
mov
cld
cmpsl
pop
dec
aad
mov
inc
add
adc
repz
aaa
ja
arpl
pop
jae
dec
iret
hlt
int
push
push
ficomps
fsubrl
enter
call
cmpb
adc
in
jns
jle
test
into
cwtl
repz
mov
popf
adc
add
pop
jb
mov
cmp
stos
jmp
call
pop
leave
mov
fnstcw
mov
sub
loope
sahf
lret
mov
fsts
jmp
xchg
ja
jl
dec
inc
cmp
outsb
xchg
inc
test
jns
jb
les
orl
mov
pop
adc
cmp
iret
test
mov
pop
hlt
aaa
pop
push
fwait
cmp
out
inc
push
movsb
ds
int
test
jp
leave
cmp
xor
sahf
cmp
shlb
inc
sub
mov
fisubs
insb
out
inc
and
push
repnz
cmp
xlat
arpl
or
pop
pop
insb
push
pop
or
jge
or
cli
mov
pop
nop
mov
ror
rcll
push
or
addb
and
mov
mov
cmp
in
jne
sti
call
rclb
mov
mov
mov
pop
inc
adc
add
pushf
aaa
push
xchg
push
cmp
repnz
xor
inc
loop
nop
mov
push
pop
cmp
jmp
arpl
push
mov
rcr
cmp
sti
push
mov
jl
bound
int3
cmp
movsl
mov
bound
mov
fmuls
pop
pop
mov
push
pushf
loop
orl
cli
or
lret
cs
sub
test
outsb
push
mov
push
lea
push
rcl
out
lahf
repz
aam
adc
rorl
adc
cmp
xchg
iret
sti
xor
cltd
ss
mov
sbb
pop
idivl
push
xor
aam
testl
popa
fst
fisttpll
mov
xchg
sbbb
xchg
enter
jb
inc
outsl
dec
pop
sti
das
xchg
aad
arpl
xor
mov
icebp
les
mov
mov
push
add
flds
cmpb
cltd
or
mov
ja
arpl
dec
push
dec
jg
popl
leave
stc
xchg
fld
cmp
movl
mov
push
mov
pop
push
xchg
std
inc
pushf
sti
sub
shlb
shr
cmpsl
push
push
sahf
xchg
jb
and
test
and
scas
or
cmp
push
or
lret
or
or
ja
in
cmp
sbb
xchg
rcrl
mov
push
mov
gs
xchg
fucomip
mov
xorb
pop
dec
cmp
imul
lret
ficoms
add
mov
sbb
ds
subl
lds
int3
fldenv
jecxz
sub
pop
wbinvd
and
lret
mov
cmp
fimull
or
fiadds
or
sbb
es
mov
xchg
push
mov
cmp
cli
sbb
imul
inc
add
bound
iret
push
mov
and
or
cmp
cmpsb
xchg
sbb
or
and
push
mov
pop
mov
pop
mov
les
adc
into
or
dec
xchg
and
insb
and
sbb
out
rolb
xor
test
jle
push
popf
in
pusha
sar
imul
inc
push
push
fadds
xor
int
les
and
mov
inc
into
loop
cmp
mov
jmp
lock
xchg
out
or
inc
hlt
or
cmp
jb,pt
gs
pop
xor
inc
add
pop
jnp
lods
sti
dec
mov
push
imul
xchg
sub
movl
js
gs
daa
loopne
or
rolb
jno
popa
sub
mov
pop
les
push
mov
leave
jmp
loopne
lret
xor
das
sbbl
mov
das
pop
stc
lcall
inc
in
outsl
mov
cmp
and
fdivrl
vmread
mov
adc
repz
pushf
enter
outsl
mov
shrl
popf
test
adc
mov
push
repnz
adc
jle
sub
jmp
adc
je
mov
outsl
sbb
add
dec
out
xchg
jl
cmp
sub
jg
mov
xchg
dec
mov
jg
xchg
xorb
div
sub
pop
notb
gs
lea
in
inc
add
adc
popa
cmpsl
bound
xchg
aaa
lock
mov
mov
xchg
fists
and
punpckhdq
test
push
mov
sbb
lret
lcall
pusha
jg
insb
dec
inc
inc
pop
in
dec
dec
mov
cmp
mov
mov
nop
jne
or
mov
adc
push
xchg
negl
push
and
lods
ret
leave
pushf
mov
cli
shll
xchg
fisttps
mov
pop
fcompl
sub
push
dec
addr16
mov
xchg
sub
fimull
fldcw
jb
lea
fstl
mov
push
jo
int3
sbb
rolb
cmpxchg
push
fstpt
or
gs
adc
sbb
push
popf
mov
int
cmp
aaa
pop
mov
fsubp
addl
jmp
adc
mov
cmp
lahf
xchg
daa
call
lds
dec
mov
loop
mov
push
inc
int3
add
mov
or
dec
sub
negl
jae
pop
cli
fistpl
and
mov
test
neg
mov
pop
push
lcall
mov
mov
mov
movsb
loop
dec
jno
fidivl
sub
xchg
push
dec
mov
je
and
fwait
mov
xor
arpl
popf
stc
push
pop
rcr
xchg
pusha
pop
sub
inc
test
nop
popa
daa
cmpsb
out
cmp
aaa
repnz
call
dec
pop
fwait
das
sbb
mov
adc
cmp
aam
inc
lods
xchg
dec
sbb
subb
cmp
test
mov
and
arpl
mov
aad
mov
ds
dec
pop
ficoms
lahf
std
jp
scas
dec
ss
or
frstors
mov
mov
mov
hlt
movsl
jmp
repnz
insb
sbb
mov
mov
call
mov
pop
or
movsb
or
lods
add
and
jae
pop
and
outsl
adc
fldcw
mov
push
or
sub
std
fnstcw
pop
lock
jmp
push
or
into
xchg
pop
repnz
add
mov
fsubrs
or
xchg
out
lods
and
pop
and
addr16
sub
ja
dec
mov
mov
filds
adc
mov
cwtl
daa
inc
mov
sbb
fdivrl
movsb
stos
lcall
xchg
adc
dec
xchg
pop
out
xchg
sarl
and
jae
leave
popa
repnz
xchg
pop
into
xchg
inc
mov
inc
cwtl
xchg
imul
jg
in
cltd
adc
repz
cmp
ficoml
push
ret
jmp
rolb
jnp
or
adc
stos
pop
sub
fmul
dec
std
or
sbb
dec
jb
stc
iret
adc
popa
imul
jns
jo
jmp
or
and
test
fisttpll
cmp
mov
pop
scas
sub
xchg
popa
push
bound
repnz
pop
xor
pop
jb
sub
jns
pushf
dec
sub
push
movsl
mov
push
push
ret
clc
jle
test
inc
test
iret
dec
cs
pop
cmp
inc
lahf
movsb
fdivl
lds
in
inc
sbb
je
cld
call
stos
xchg
add
mov
mov
aam
shlb
sahf
push
int3
xor
inc
mov
mov
add
cmp
cmpsb
cli
xchg
sti
push
fcoms
add
leave
ret
or
mov
push
jb
sub
movsb
pop
xor
mov
mov
es
ss
icebp
mov
xchg
xchg
repnz
push
cmpsl
js
dec
mov
cwtl
sub
ljmp
mov
mov
pop
and
inc
popa
shl
jae
in
pop
dec
sbb
stc
les
inc
cmp
or
mov
out
jp
pusha
xor
adc
jle
cwtl
cli
out
movsb
pop
mov
jmp
mov
sbb
sahf
out
fdivrp
faddl
addr16
inc
jno
test
xlat
push
fisttpl
loop
sarl
lcall
mov
cmc
xchg
cmp
push
sub
ds
adc
out
cs
sub
mov
insb
mov
mov
jns
ds
lock
out
sbb
mov
addr16
xor
into
xchg
orb
rcl
fmull
ret
sbb
mov
int
gs
icebp
jecxz
pop
ds
jmp
lret
in
ss
xchg
les
mov
jle
ja
bound
mov
outsl
pop
std
arpl
sbb
sbbl
imul
std
ljmp
cltd
add
sbb
or
cmpsl
js
or
mov
xorl
mov
fs
jne
and
or
mov
in
lret
sbb
popa
adc
push
sub
out
and
lods
cmp
pop
cmp
out
jmp
inc
cs
mov
and
orl
add
xor
jl
mov
fists
xchg
daa
pop
stc
mov
sub
repz
dec
int3
xor
je
jae
std
jo
xchg
sti
mov
adc
inc
jmp
push
sbb
fnstenv
in
sub
push
inc
mov
mov
jl
cmc
imul
les
push
xchg
dec
xor
push
mov
jbe
mov
enter
data16
scas
lcall
addr16
sub
ds
cmp
loope
jno
or
and
aas
and
icebp
add
and
mov
push
mov
lods
adcb
push
fiadds
in
jmp
loope
ds
outsb
mov
addr16
cmc
push
jbe
test
push
pop
mov
jge
xor
inc
fistps
in
movsl
mov
and
sbb
mov
shll
loop
pop
lods
nop
mov
pop
or
xchg
iret
jle
and
mov
sbb
enter
ds
addr16
inc
or
testb
std
popa
jae
pop
mov
and
pushl
leave
dec
push
sbb
or
jnp
sbb
scas
mov
mov
jle
in
xchg
mov
push
xlat
fmuls
push
xor
addr16
cmp
mov
enter
dec
jle
addb
push
or
out
cmpsl
sbb
enter
stc
inc
mov
test
adc
and
cmp
pop
mov
addr16
ret
mov
lea
and
mov
fxch
adc
sbb
je
cmc
movb
cmpsl
cmp
test
push
jle
test
jno
inc
adc
sub
or
push
pushf
mov
sub
rol
mov
addl
lahf
jo
les
repz
cmp
inc
call
jp
sub
lret
push
stos
rcl
inc
in
sbb
xchg
gs
std
or
adc
fsts
rclb
pop
xor
fndisi(8087
call
mov
popf
rorl
pop
aam
outsb
inc
mov
xchg
fstpl
iret
or
sub
cld
inc
movsb
popa
sbb
sub
push
and
dec
pop
or
out
jae
call
lret
push
xrelease
testl
mov
push
outsb
mov
iret
xlat
dec
xlat
jecxz
test
sbb
mov
inc
sub
jg
daa
sbb
push
lret
push
js
sbb
test
lock
jg
pop
fsubr
inc
xor
mov
mov
xchg
add
xchg
pop
pusha
sub
jmp
shrb
gs
sub
fs
sub
mov
adc
addl
mov
sub
hlt
mov
sub
dec
popf
call
add
mov
pop
lods
or
loop
mov
jle
sbb
mov
and
xor
dec
rclb
popf
dec
push
ds
ja
rcll
mov
rol
push
stos
fists
dec
fistps
jb
dec
stos
outsl
insl
gs
pusha
negb
andl
mov
pop
mov
loope
jp
dec
jmp
outsb
imul
lock
lods
push
cmp
add
loop
insb
or
adc
adc
sbbl
movsl
sub
jb
cmp
scas
cmpsl
or
aam
cmpsb
push
inc
adc
jg
sub
ja
into
adc
fs
pop
push
dec
test
and
push
push
in
shlb
cmpsl
in
enter
pop
ficoms
sub
iret
inc
inc
mov
jae
mov
ss
outsb
add
or
out
lods
int3
movsb
sbb
mov
sub
test
jmp
nop
xor
insb
repz
psubw
cwtl
push
cmpsl
sbb
dec
inc
dec
add
mov
dec
add
jno
mov
pop
mov
fadd
ljmp
xlat
cmp
xchg
lahf
int
mov
cmp
stos
push
pop
dec
and
insb
sbbb
cmpsl
lret
cltd
sbb
lcall
mov
test
int3
and
ret
mov
cmp
jns
nop
repz
sahf
add
mov
mov
adcb
xor
cmp
mov
jge
cmc
jo
loop
xchg
es
adc
insl
pop
sub
ja
loopne
sbb
mov
sahf
jne
push
test
xchg
movsb
pop
ret
pop
mov
ja
popa
rorb
mov
xchg
lock
jb
sub
adc
sub
cmp
rolb
pushf
dec
iret
xchg
mov
in
fidivrl
push
mov
jnp
fstl
imul
push
sbb
mov
xor
sbb
xor
mov
imul
mov
pusha
insl
stc
out
and
xor
jge
pushf
ret
and
icebp
jnp
xor
into
xor
sub
mov
cmp
jl
mov
lea
fisubs
cli
or
dec
lcall
push
adc
jo
addl
fistps
dec
pop
push
shlb
jg
mov
test
in
sbb
ljmp
es
cltd
iret
fwait
xorl
jle
lcall
or
test
lods
adc
cmc
aaa
cmp
cltd
mov
jns
and
aaa
inc
int3
ret
dec
or
and
in
xor
cmp
addr16
sti
sbb
mov
mov
lcall
lock
iret
lret
jbe
mov
jg
rorl
arpl
movl
test
shll
roll
mov
pushl
mov
into
jne
jecxz
sbb
adc
cli
sub
loopne
enter
addr16
inc
std
sub
mov
and
jecxz
jmp
lds
fstpl
lahf
out
jae
dec
cwtl
push
sti
les
iret
enter
push
adc
out
pop
dec
out
cld
xchg
adc
insl
movsb
mov
fcoms
mov
dec
adcb
lret
mov
fucompp
pop
jl
clc
push
incb
es
inc
out
and
pop
xchg
es
movsl
cmp
ret
movsb
adc
inc
dec
inc
jle
gs
into
cmp
xchg
mov
mov
stos
adc
lock
push
jmp
xchg
mov
lcall
adc
popf
outsl
xor
mov
mov
push
xchg
fistps
push
mov
lods
bound
xor
lret
jmp
in
and
sahf
jmp
sarb
test
cmp
popa
lahf
insl
xchg
jo
vpmaxub
jg
fmuls
cmp
xor
jae
mov
and
popa
mov
mov
fldenv
lcall
cmp
cmpsb
sub
push
adc
jbe
repnz
ret
add
shll
push
jbe
add
pop
xor
xor
lds
outsl
das
daa
sarb
les
and
mov
sbb
and
dec
adc
mov
push
loop
mov
rcll
xor
rorl
dec
and
jnp
loopne
mov
outsl
jmp
push
rcll
movsl
ss
adc
test
mov
mov
push
mov
sbb
jne,pt
sbb
test
test
in
add
and
insb
leave
mov
fisubs
xor
popa
enter
scas
pop
enter
xchg
lock
jg
arpl
pop
inc
fimull
adc
xlat
dec
sub
cltd
cltd
sbb
dec
jne
mov
cmpsl
xor
pop
jp
hlt
cltd
adcl
mov
popf
mov
divl
xchg
inc
dec
cltd
jb
fwait
lods
jg
out
clc
jp
add
nop
insb
lock
repz
cltd
stos
fwait
xchg
stc
fcmovnu
xchg
xchg
cmpsl
ljmp
loope
push
push
cmpsb
test
jno
popf
shrl
push
push
adc
or
and
add
roll
roll
rol
and
sub
pop
jno
movsb
xor
insb
in
bound
push
aas
jg
inc
xchg
xor
cs
lods
jecxz
int3
mov
int
in
jle
mov
pop
stc
add
adc
pop
lock
push
inc
icebp
les
test
and
insl
cmp
movsl
mov
sub
add
testl
sti
out
mov
xchg
nop
pushf
xorl
cmc
lret
mov
cmpsl
push
outsb
push
xor
jl
mov
lock
add
push
cmc
jne
cmp
popa
scas
loopne
lahf
negl
inc
add
outsl
push
sbb
lods
xor
out
loope
sub
fistps
call
iret
xor
out
lea
in
cli
inc
mov
cs
cmpsb
push
frstor
xchg
pop
cmpxchg
cmp
test
adc
add
xchg
dec
push
cld
out
out
icebp
inc
adc
xchg
jmp
push
stos
cmp
dec
add
cmpsl
jo
adc
call
loop
bnd
sbb
inc
ror
shll
or
gs
xchg
sub
pusha
push
xchg
cmp
test
sbb
jbe
addr16
divl
sbb
nop
stc
or
lret
lcall
sarl
sbb
xchg
lea
ja
in
pop
xchg
out
dec
or
sub
xchg
ljmp
mov
sub
xor
bound
mov
sarl
inc
inc
outsl
inc
jecxz
mov
sbb
rcrb
or
outsb
xchg
ja
scas
or
xor
push
cmpsl
push
xchg
sub
cmp
add
das
add
les
jg
or
cs
fwait
loopne
das
cs
mov
jb
clc
inc
jmp
inc
je
mov
dec
adc
cmp
popf
cmp
enter
xchg
ret
shl
inc
lahf
jmp
sub
enter
xor
and
int3
pop
or
mov
ja
or
push
ljmp
sbb
push
mov
je
outsb
lods
movsb
mov
mov
adcl
push
outsl
sub
ret
adc
jns
pushf
dec
jge
push
rolb
stos
movhps
mov
std
loopne
cmp
pop
stc
and
je
push
clflush
mov
mov
jns
stos
or
mov
sbb
inc
sub
gs
mov
gs
xchg
inc
push
push
es
popf
mov
repz
out
out
call
repz
add
je
call
or
cmp
shlb
adc
rcll
jbe
jl
inc
sbb
into
sbb
push
test
push
test
or
rcl
xchg
adc
cmp
fs
sub
mov
sahf
lds
test
int3
or
orb
xor
ja
icebp
icebp
dec
pop
out
hlt
loope
adc
adc
popa
cmp
mov
es
js
jnp
fs
and
fists
pusha
nop
mov
pop
pop
clc
cmp
sub
mov
mov
js
roll
insl
out
shr
call
daa
shrb
xor
pop
daa
lock
xchg
hlt
cmp
data16
loope
jp
call
mov
call
push
adc
add
pop
mov
add
jae
cli
push
xchg
bnd
jge
jmp
fnstsw
cmp
pop
jbe
les
pop
jmp
and
jg
sub
jne
mov
jmp
rcr
test
inc
dec
and
fildll
loopne
daa
iret
std
push
mov
js
xchg
stos
int
xchg
andb
jbe
sti
mov
push
inc
dec
stos
and
inc
xchg
fwait
push
lods
mov
jns
add
mull
push
lahf
in
mov
lock
test
mov
fisttpll
movsl
shr
insl
addb
or
dec
lds
cli
sub
movsb
rcrl
add
mov
push
stos
daa
stos
or
mov
aam
arpl
fisubl
push
sbb
push
xor
clc
mov
fwait
inc
jae
outsl
mov
sbbb
xchg
cmp
int3
lahf
push
jmp
repnz
aad
es
and
inc
orl
mov
adc
and
lret
push
sub
push
add
jle
jo
inc
xchg
cmp
xor
pop
cmp
jle
xorb
cwtl
jne
cwtl
inc
dec
in
jmp
test
subl
mov
sub
jb
stos
dec
cmp
test
xchg
ljmp
push
pop
mov
jg
jecxz
mov
fwait
lods
movsl
fbld
or
mov
xchg
test
add
mov
mov
out
inc
dec
cmc
jge
inc
and
lret
mov
stos
mov
or
fwait
mov
push
xor
test
rcl
aam
stos
cwtl
icebp
dec
pop
into
std
and
push
mov
lahf
loop
mov
js
loopne
test
adc
repz
adc
mov
into
in
cmp
test
mov
pop
hlt
mov
enter
stc
or
jg
inc
aaa
sbb
fdivs
mov
cwtl
sub
call
fsubrl
push
and
pushf
cmpb
inc
adc
dec
xlat
int3
in
outsl
into
frstor
ret
in
test
mov
add
cwtl
fsub
hlt
mov
sbb
outsl
stos
es
jp
or
jmp
xchg
inc
or
xchg
lcall
int
shlb
aas
addr16
mov
addr16
jle
and
pop
push
dec
pop
jo
jl
pop
fldt
xor
popf
cmpb
call
add
jne
jo
dec
test
jnp
push
stos
add
in
roll
push
test
out
push
fldl
inc
or
sbb
gs
mov
jmp
and
or
adcb
mov
jmp
xor
mov
sub
mov
cld
les
pop
cmp
mov
mov
adc
push
adcb
loop
sub
jmp
jo
fwait
xchg
sbb
mov
xor
adc
js
int
movsl
enter
pop
sub
bound
aam
cmp
stos
pusha
sub
pop
dec
test
mov
out
cwtl
sbb
sti
push
fdivl
sub
push
pushf
rolb
insb
stos
mov
insl
bound
bound
mov
xchg
push
dec
lret
adc
and
fstps
or
outsb
lret
or
movsl
adc
or
in
and
cs
or
fidivs
cltd
loope
inc
leave
lock
push
adc
mov
fcmove
adc
dec
test
stos
dec
call
call
notl
xor
adc
insl
pop
dec
js
je
test
xor
sub
cmp
push
ja
or
ja
and
push
jbe
flds
scas
pop
insb
mov
mov
adcl
popa
call
inc
cmpsb
stos
jle
cmc
sbb
stos
sub
jecxz
je
pop
dec
jge
call
lcall
jne
mov
push
mov
xchg
sbb
cli
sbb
jg
pusha
imul
jno
jns
jg
cmp
push
jle
dec
pop
test
clc
xchg
mov
adc
cld
push
xor
pushf
cli
lods
out
sub
cwtl
decb
jno
xor
cmp
mov
mov
xor
sahf
out
out
std
test
cmpsl
mov
out
pop
imul
sbb
ss
fistps
xchg
aaa
inc
sbb
mov
xchg
in
aad
ficoml
fsubs
jl
enter
jl
or
out
push
mov
dec
outsb
popf
add
sbb
inc
repz
xchg
push
test
pop
dec
stos
fistps
cld
stos
std
xchg
in
sub
test
or
scas
sbb
mov
sub
daa
aaa
and
clc
mov
dec
sbb
loop
xchg
and
lock
in
aam
aaa
inc
ret
aad
test
sbb
push
pop
test
in
icebp
pop
nop
mov
jg
rorl
lods
mov
lcall
mov
mov
outsl
xor
cmp
repz
cmp
mov
es
int
inc
das
ret
jne
push
adc
xchg
cld
fcomip
xchg
mov
bnd
lcall
rorl
sub
mov
idiv
in
and
loope
xor
pop
inc
stos
aas
mov
mov
int
mov
mov
rorb
inc
sbb
and
sbb
lret
xchg
loope
inc
lret
push
je
cs
mov
jmp
mov
or
dec
jl
cld
imul
jno
stos
in
out
adc
xchg
ret
nop
or
decb
mov
and
out
inc
test
cmp
xchg
mov
out
dec
int3
and
fstpl
pop
fwait
cs
xor
js
xor
inc
es
sub
xchg
shl
fnstsw
push
xor
mov
push
movsb
and
fwait
mov
mov
shl
add
pop
repnz
inc
clc
scas
pop
fstl
cmp
std
les
push
lods
push
pushl
sub
repz
frstor
dec
dec
push
shlb
xlat
cmpb
mov
pop
jbe
mov
and
mov
mov
stc
notb
xor
inc
das
lock
sarl
mov
mov
push
cmp
pushf
lret
sahf
sbb
call
adc
jmp
xlat
add
loope
sti
int
lret
jne
adc
iret
pop
xor
jg
adc
sbb
sbb
daa
insb
xchg
sub
sub
das
cmp
add
jae
enter
stc
sarl
xor
mov
addr16
loop
xor
mov
cmp
push
and
push
sub
and
daa
mov
aad
repz
loope
pop
mov
out
push
xchg
popf
xchg
add
gs
shrl
je
jmp
cmpsl
jecxz
add
add
inc
movsl
xor
orl
int
lods
outsb
adc
or
clc
jae
mov
cld
sbb
xchg
mov
dec
shrl
xchg
call
sbb
cmc
ss
in
mov
adc
pop
call
mov
mov
outsl
xor
outsb
cmp
sub
mov
sti
clc
xor
cmpsb
faddl
call
les
sub
je
dec
ret
loop
push
jl
cmpsb
gs
mov
adc
fisttps
leave
sub
push
mov
js
xor
xchg
push
rolb
mov
gs
mulb
ds
cli
ret
mov
stos
loope
xor
test
push
pop
push
repz
push
call
jp
enter
data16
or
out
mov
jmp
mov
mov
mov
push
sbb
inc
cli
inc
loope
cmc
push
sti
jecxz
test
cmp
adc
jg
push
mov
icebp
push
icebp
outsb
pop
lock
add
dec
fisubs
mov
mov
dec
mov
aad
aad
jns
pop
loop
or
xchg
push
lock
xchg
jmp
fisttpll
lods
pop
cmp
mov
and
jmp
xor
add
mov
xchg
gs
xchg
sbb
ss
test
imul
cmpsl
and
leave
ljmp
faddl
setl
jle
pop
testl
and
loop
add
sub
daa
push
lea
fdivr
inc
mov
push
push
mov
cmp
and
adc
out
lret
cmpsl
sub
cmpsl
outsb
dec
lahf
and
pop
addr16
xor
popf
mov
add
push
clc
popl
inc
dec
das
cltd
stos
mov
fadds
sbb
fwait
rsqrtps
inc
add
xchg
test
jno
mov
je
hlt
xor
xchg
test
sbb
clc
mov
call
enter
xchg
xor
add
mov
mov
xacquire
stos
ret
in
xlat
pop
mov
jne
ret
jns
push
stos
ret
pop
push
addr16
outsb
lcall
lret
cmpsb
scas
das
push
cmpsb
ss
pusha
sbbl
sbb
xor
and
outsb
testl
les
mov
jo
pop
mov
or
cmc
test
aad
cmp
pop
mov
cmpsl
out
jcxz
xor
or
ljmp
mov
lret
jo
cmp
dec
mov
pop
jns
stos
and
imul
sbb
push
dec
into
repz
and
fidivrl
movsl
inc
add
push
insb
mov
aam
flds
jo
test
je
icebp
jp
and
dec
xor
sbb
aam
jno
test
jb
inc
aam
mov
dec
stc
xchg
int3
xchg
dec
sbb
popa
jnp
push
loopne
or
sbb
cltd
mov
cltd
iret
insb
cmpsb
add
loopne
dec
or
das
cmpsb
push
xor
ficoms
adc
or
pop
and
mov
and
rcll
aam
or
jns
jmp
cwtl
out
mov
sbb
aaa
shrl
negl
daa
inc
clc
test
pop
aam
cli
mov
xchg
stos
xchg
pushf
sub
ds
xchg
cmp
pop
xor
mov
les
outsb
arpl
and
push
sub
arpl
stos
movsb
test
mov
addr16
lods
add
pop
dec
outsb
int3
andl
out
cmc
testb
clc
cwtl
repnz
pop
into
sti
sub
push
pop
and
dec
lds
jns
sbb
in
jge
rcll
les
imul
test
inc
push
std
mov
and
mov
mov
or
aas
pop
cs
cmp
clc
pushf
cs
mov
jg
arpl
pop
sbb
imul
xor
push
mov
iret
mov
mov
mov
push
movsl
ja
int
xchg
int3
lds
mov
pop
mov
arpl
or
push
insl
aam
repnz
test
loope
test
push
adc
jg
push
push
loopne
adc
cmp
add
xchg
adc
add
pop
push
test
pushf
sbb
inc
outsl
mov
push
jmp
bound
out
outsl
movsb
mov
insl
cwtl
mov
cmpsl
sti
cmp
or
inc
push
mov
das
pushf
out
addb
lcall
pop
aas
and
dec
lea
in
xlat
dec
push
dec
mov
or
cmp
jmp
dec
movsb
fisubl
mov
fs
dec
insl
jne
cmp
push
jne
dec
fs
jle
add
mov
out
mov
aaa
add
xor
leave
xchg
jmp
jmp
sub
push
in
xlat
and
int3
mov
icebp
mov
mov
mov
add
rcr
iret
mov
shrb
xchg
gs
jno
adc
and
cmc
sahf
push
pop
call
inc
enter
jb
push
lea
mov
xlat
mov
sub
cmpsl
out
jne
stos
inc
cmc
loope
mov
fldcw
call
adc
fcoms
lock
fsts
lahf
xchg
sub
mov
push
lcall
cmp
popf
jae
or
xor
mov
xchg
loop
xor
les
sti
sbb
mov
ret
aaa
mov
leave
xorb
xchg
mov
sbbb
shlb
push
mov
ljmp
out
aam
mov
or
mov
mov
dec
cwtl
jl
scas
test
in
ret
lret
push
xor
test
bound
cwtl
add
js
loopne
sbb
xlat
xor
mov
std
lret
mov
dec
push
push
imul
in
enter
mov
mov
cmc
xchg
lcall
jnp
xorb
scas
scas
cltd
inc
je
out
xor
cmpsb
push
scas
mov
mov
mov
xchg
pop
jl
cmp
mov
jp
xchg
arpl
sub
adc
jmp
push
scas
fcmovbe
bound
lock
pop
add
dec
xlat
lcall
clc
inc
cmp
inc
inc
xchg
movzbl
sbb
in
mov
popa
aam
mov
test
xor
cmp
push
mov
dec
lock
jge
sar
pop
addr16
test
and
adc
mov
dec
ja
cvtps2pi
movsl
lods
xchg
loop
mov
and
jae
insb
clc
cmpsl
adc
push
jmp
and
jge
pop
mov
inc
cmp
pop
out
xchg
fdivl
push
cmpsb
jp
into
stos
loope
imul
out
ds
xorb
mov
pop
add
dec
pop
arpl
nop
jnp
push
outsb
push
xchg
fwait
out
push
dec
inc
jle
sahf
daa
xchg
arpl
mov
pop
add
and
cmc
fstl
or
pusha
lret
xchg
jo
fwait
xor
std
jge
test
cli
out
rolb
jo
xor
pop
dec
xchg
stos
lret
daa
cwtl
lcall
faddl
aam
dec
xor
jp
pop
jne
xchg
mov
dec
fistl
mov
add
sti
push
jbe
dec
aaa
scas
and
pop
pop
cmp
insl
inc
das
pop
push
incb
cmp
aaa
jge
movsb
cmp
sbb
fs
sbb
adc
insl
xchg
int
push
data16
ret
xchg
scas
mov
sub
cmpsb
testl
jno
mov
fdivs
jne
and
push
and
lcall
sub
push
bound
test
ret
stos
add
sarb
or
lcall
jecxz
enter
loope
pop
lds
adc
daa
sub
rcl
lahf
dec
mov
and
inc
pop
push
jae
cmp
fnstcw
sub
es
push
cmp
dec
enter
mov
jns
into
sar
orl
lock
aas
insl
mov
fimull
hlt
push
mov
inc
push
lret
arpl
rorb
insb
or
ljmp
movsl
inc
stos
dec
loope
jo
lret
or
lds
out
aaa
cld
pusha
je
mov
mov
adc
push
sub
stc
sbb
pop
xchg
into
pop
shl
popa
pop
lret
jp
push
or
jno
popf
or
movsl
push
sbb
add
mov
xchg
call
xlat
sub
push
inc
push
test
call
inc
adc
dec
xchg
mov
clc
sbb
fisubl
jno
mov
out
sub
xchg
add
cmpsb
loopne
sub
or
pop
mov
push
ret
and
loope
shr
pop
ret
imul
cmp
call
fbld
bnd
fnstsw
pop
andl
fisubrs
and
into
std
mov
jmp
inc
push
adc
sarb
dec
mov
xlat
shlb
inc
imul
fwait
and
pop
imul
sub
popf
mov
and
cltd
pop
jo
inc
icebp
lds
nop
cmpsl
shrl
popf
jnp
sbb
fsubrl
mov
mov
rorb
pop
mov
pushf
jg
stos
dec
inc
sbbl
mov
and
and
pop
mov
inc
ljmp
in
xchg
fnstcw
mov
ss
cmp
stos
add
test
adc
mov
jp
rcl
dec
mov
sbb
cmp
pop
push
test
or
cld
je
pop
push
sub
stos
addl
stc
aas
in
shl
in
and
divl
push
mov
cmc
movsb
adc
mov
inc
in
icebp
fs
outsl
or
xor
je
scas
cwtl
jp
mov
sbb
pop
out
jmp
cmp
mov
mov
nop
mov
scas
mov
push
mov
push
xchg
cmpsl
jmp
xchg
or
shrb
pop
pop
sbb
mov
mov
push
jb
sbb
addr16
lds
hlt
xor
jp
and
or
sbb
mov
adc
ud2
sub
dec
sahf
mov
outsb
mov
mov
in
andb
sub
inc
cmc
xchg
mov
iret
out
popa
sub
xchg
aam
and
out
jge
jmp
xor
dec
pop
fsts
fiadds
mov
mov
xchg
int
out
movsb
lods
sub
push
enter
lock
jle
pushf
sub
inc
in
std
cmc
arpl
dec
xor
iret
fidivrs
mov
dec
jp
mov
out
and
pop
sbb
addr16
pop
pop
xchg
int3
scas
lock
jns
cli
dec
movsb
mov
rol
movsl
hlt
arpl
push
xchg
lea
adc
lahf
jnp
fldcw
not
and
sar
outsb
cmp
sahf
sahf
scas
or
pusha
mov
xor
fimuls
xchg
rclb
popa
mov
inc
shrb
sbb
jo
inc
fmulp
adc
mov
fisubl
and
lods
or
add
mov
mov
icebp
lcall
in
push
leave
pop
dec
cmp
inc
popa
mov
loop
jmp
arpl
add
aaa
sub
cli
inc
pop
sbb
sbb
test
mov
out
push
adc
imul
push
mov
xchg
push
xchg
lret
test
mov
insl
pop
call
add
pop
adc
mov
cvtps2pd
ja
cwtl
negb
mov
ret
cmp
inc
cmp
cmp
lods
test
scas
fmuls
insl
imul
lods
es
mov
push
imul
dec
outsl
and
sbb
imul
mov
pop
sbb
sub
mov
adc
mov
xor
out
fwait
mov
jns
ret
cli
inc
ss
inc
jl
xchg
rcll
out
adc
jo
idivb
jge
and
jne
sahf
sub
ret
rolb
mov
mov
push
jo
dec
ja
neg
test
push
clc
xchg
jmp
repnz
cmp
imul
inc
sub
pop
xchg
inc
pop
lret
aam
fidivl
xor
xlat
sbb
in
jno
movl
add
mov
pop
add
jnp
add
lods
inc
jns
mov
pop
push
xor
pop
repnz
jp
not
jnp
sbb
push
insb
cwtl
lea
add
mov
xchg
or
sub
dec
cmpsb
lods
pop
push
out
sub
jmp
cs
out
repz
popf
sti
mov
into
addr16
jb
ret
inc
sti
cli
ret
jo
push
mov
dec
xchg
lahf
pop
in
imul
adc
pop
mov
and
pusha
and
xor
ljmp
cmp
inc
outsl
movsb
cmp
call
jle
push
cltd
sub
adc
jg
jg
push
js
mov
xchg
inc
dec
icebp
push
loopne
jo
add
mov
in
fldt
cmp
fimuls
and
fstp
scas
xor
in
scas
jmp
mov
loopne
dec
adc
sahf
mov
mov
roll
inc
ljmp
stc
push
push
push
xchg
dec
xor
inc
sbb
lea
mov
repz
inc
pop
or
cmp
and
jmp
mov
mov
push
mov
mov
icebp
jle
mov
adc
shrb
inc
repnz
outsl
testl
inc
or
bound
ja
push
nop
in
insb
test
mov
xchg
sub
adc
sarb
push
xor
pop
sbb
arpl
mov
shrl
adc
lahf
pop
stc
push
outsb
xchg
pop
pop
add
pushf
lcall
imul
jno
mov
pop
mov
push
push
mov
dec
aaa
ja
notb
test
sbb
jnp
dec
je
iret
mov
mov
mov
fbstp
pop
adcl
mov
mov
add
or
sub
pop
movsb
sub
ljmp
in
push
fwait
ja
jb
xchg
push
mov
fstps
lock
mov
adc
arpl
jnp
mov
rcl
sub
xor
add
orl
add
mov
push
or
inc
imul
shl
rcrl
dec
dec
pusha
fbstp
ja
push
push
stos
sarb
rcr
dec
cmpsl
pop
das
inc
pop
je
sub
dec
jg
fs
aad
push
test
fimuls
or
fsubrl
mov
mov
mov
jp
mov
je
jecxz,pt
data16
pusha
rclb
adc
movsl
pusha
js
cmpsl
fs
push
loop
mov
inc
jmp
inc
loope
dec
mov
add
les
js
push
xchg
push
movswl
ds
les
subb
shrl
orb
cwtl
xchg
or
std
mov
cmpsl
bound
lods
mov
xchg
fistl
stc
mov
int3
or
divl
dec
aam
sbb
addr16
and
inc
mov
lds
stc
lods
mov
sbb
lcall
lahf
sti
dec
dec
xchg
imul
lods
add
fadds
jns
mov
ljmp
and
adc
dec
movsb
std
int3
jg
insb
mov
and
sub
outsb
sti
ss
dec
insl
sbb
cmp
jmp
xor
es
lds
pop
push
push
cld
nop
sbb
sbb
mov
sbb
xchg
dec
adc
es
add
lcall
mov
cmp
repnz
shrb
dec
push
jp
icebp
ja
into
pop
popa
in
sub
enter
dec
popa
rclb
call
pop
dec
sti
mov
lea
jb
daa
fwait
mov
movsb
pop
inc
jg
test
push
test
cmp
fisubrl
pushf
arpl
push
lock
or
stos
stos
jae
xchg
ret
mov
movsl
mov
mov
roll
dec
jae
push
sbb
das
aaa
jp
or
dec
mov
scas
jo
cltd
add
adc
fstps
mov
or
push
int
jnp
add
mov
jne
adc
int
mov
fnstenv
pop
cltd
loopne
mov
out
add
or
sub
setno
in
and
adc
incb
popa
test
fs
stos
dec
jo
jmp
rcrl
and
push
int
cld
loop,pt
shll
js
pop
push
mov
aas
mov
and
into
xor
mov
fldcw
mov
inc
fisttps
xchg
int3
pop
or
mov
pop
sbb
fucomp
fsubs
outsl
jmp
push
cs
arpl
pushf
add
popf
test
lret
and
movsl
or
pop
and
push
in
fdivs
and
xchg
mov
into
mov
pop
mov
outsb
test
xor
aam
inc
fs
xlat
jge
cmp
pop
imul
mov
movsl
adc
lods
loope
push
xchg
mov
std
add
mov
and
cltd
cmp
add
clc
mov
mov
movsb
add
insb
pop
push
clc
mov
idivl
stos
sub
cmp
sbb
mov
fadds
add
test
push
mov
mov
jnp
adc
jmp
lahf
cmp
nop
push
pop
inc
shrl
push
push
dec
fbld
add
enter
hlt
add
sub
jno
daa
popf
jle
enter
pop
mov
pop
jns
sub
cmpsl
dec
mov
stc
xchg
push
repnz
push
inc
pop
inc
and
int
stc
int3
fildll
or
mov
stc
in
testl
mov
cld
mov
es
mov
push
cmp
pop
sbb
stos
loop
aaa
test
outsb
cmpsb
call
add
or
sahf
push
mov
lock
xlat
push
xorb
mov
shrl
and
aas
dec
xchg
fwait
sub
inc
stos
clc
aas
sub
mov
mov
pop
jg
sahf
cmpsl
es
pop
enter
ss
inc
int
inc
jp
arpl
movsl
jge
pop
mov
leave
call
xor
ja
int3
mov
sub
test
push
add
fsubrs
or
dec
sbb
lret
lret
insl
sbb
sub
jbe
mov
std
enter
decl
dec
or
and
mov
das
out
add
xchg
sbb
hlt
mov
cltd
sarb
inc
adc
ficomps
das
push
jne
ret
push
mov
pop
push
sar
lock
adc
adc
cmp
adc
repnz
pop
mov
out
sbb
xor
inc
test
jne
mov
mov
jmp
decb
jns
xor
adc
sbb
mov
push
lods
push
test
inc
fisubrl
pop
ja
dec
int3
cmp
or
mov
push
cs
ret
daa
icebp
rorl
mov
sbb
and
sub
sbb
mov
sbb
push
lods
push
inc
negb
cmp
dec
cmp
mov
fnsave
aad
push
das
cmp
cmp
out
push
or
pop
stos
test
mov
insb
in
xchg
aad
lods
pop
add
xor
and
pop
dec
scas
lods
jns
stc
ret
sbb
mov
dec
lahf
sub
add
pop
or
rolb
add
cltd
lds
inc
mov
lods
lea
vmovss
in
jg
aas
sub
xor
mov
gs
inc
jno
sub
add
or
xor
xlat
mov
mov
or
movsl
test
fbstp
insb
push
push
xor
jle
pxor
ljmp
arpl
push
icebp
ja
outsl
pop
xor
call
inc
adc
gs
dec
out
push
cmpl
push
adc
inc
arpl
xlat
shrb
ljmp
out
mov
ficompl
push
sti
mov
or
cld
or
rorb
sub
stc
mov
test
sbb
mov
jecxz,pt
aam
dec
cs
mov
ds
add
fildl
pop
push
aas
add
or
adc
in
das
cmc
xchg
aad
sub
add
jne
enter
shrb
dec
addr16
inc
mov
fisttps
cmc
loope
inc
fstps
sub
cmp
and
fldl
repz
or
sub
adc
and
fs
cmp
arpl
mov
js
mov
or
pop
aaa
int3
repnz
fadds
out
addb
inc
insb
nop
xor
adc
dec
std
jl
imull
inc
xlat
lods
mov
stos
imul
lock
mov
mov
ja
xor
mov
xchg
pop
ror
repz
aas
daa
leave
scas
dec
add
mov
pusha
push
ficomps
jnp
and
sbb
sub
xor
jne
cmc
adc
xor
cmp
popa
mov
xor
mov
enter
sbb
mov
sub
fnsave
lahf
cmp
call
bound
dec
mov
add
lock
sub
mov
jbe
lret
les
xor
loope
add
cmc
adcl
push
mov
xor
and
jnp
loop
mov
xchg
dec
sbb
pop
lock
aam
sub
in
mov
clc
pop
jnp
jo
pop
add
and
imul
rol
xlat
mov
and
in
and
loope
outsl
insl
inc
xchg
lods
sbb
lock
sbb
sub
inc
sbbb
add
popa
jae
outsb
loope
imul
ja
inc
or
push
sarb
pusha
hlt
cld
jbe
mull
out
xor
pushf
sbb
xchg
shlb
adc
push
aas
pop
and
pop
or
mov
outsb
hlt
xchg
out
adcb
test
test
sti
lds
pop
cwtl
xor
mov
jge
push
outsl
sub
jne
test
inc
repz
jmp
mov
stc
out
test
out
mov
data16
dec
sub
xchg
js
push
mov
adc
mov
fwait
mov
mov
aas
and
xchg
push
mov
gs
decl
mov
int3
ljmp
adc
in
xchg
inc
and
xor
jle
mov
inc
or
jl
pusha
ljmp
lahf
sti
mov
and
mov
inc
repnz
push
dec
int3
movsb
lret
or
sbb
ffreep
je
xchg
pop
scas
int
cmp
aaa
inc
cmpsb
mov
xchg
cs
movsl
insl
fsub
roll
dec
popf
pop
jmp
out
xor
xor
xchg
jp
std
pusha
test
and
or
xor
movq
mov
fdivrl
mov
sbb
cmp
gs
call
jns
xchg
or
cmpsb
or
sarb
cmp
mov
icebp
adc
mov
les
cmp
xor
imul
pop
mov
mov
int
aam
dec
lock
divb
cmp
and
dec
fsubrp
popa
sub
icebp
rorb
push
mov
rcll
std
fdivr
xor
and
lret
push
sbb
test
dec
fmull
rolb
push
xor
filds
sbb
clc
inc
cli
sub
adc
sub
fucomp
xlat
mov
data16
jae
data16
fsubrp
or
inc
adc
mov
ret
and
sbb
mov
rclb
xorl
adc
ja
dec
xor
cmp
test
ficoms
test
popf
test
int3
xor
xchg
xorl
sub
stos
adc
pop
xor
push
orb
sbb
or
popf
mov
and
mov
pop
scas
scas
jbe
push
pop
idivb
in
in
mov
xchg
inc
xchg
adc
pop
xchg
loop
leave
jnp
aaa
pop
ss
into
push
xor
jp
sub
xchg
push
outsb
lods
icebp
test
je
pop
lock
xor
lds
pop
inc
clc
pop
xor
imul
in
in
mov
ljmp
xor
inc
or
add
data16
rorb
push
subl
jge
jb
xchg
test
sahf
test
xor
add
cmp
pop
movsl
pop
add
or
ret
xor
xchg
mov
fstpt
dec
push
mov
divl
int3
sbb
xchg
add
je
bound
adc
sbb
xchg
sbb
ret
std
xchg
mov
mov
out
push
in
and
mov
add
lods
mov
popa
lahf
repz
ljmp
es
cmpsb
jecxz
enter
or
out
es
dec
or
int3
ds
pop
ss
scas
mov
out
dec
adc
adc
mov
adc
dec
or
in
mov
lcall
outsb
lcall
jge
ficompl
adc
jae
push
adc
jecxz
push
loope
into
test
aam
fadd
and
jb
fsubl
lcall
sub
imul
mov
add
popf
fstps
in
lahf
mov
leave
pop
in
leave
js
cmp
fbstp
jecxz
dec
repz
xchg
int3
sub
pop
stc
lret
inc
pop
push
insl
jne
mov
cmp
mov
inc
dec
sub
add
mov
cld
gs
push
inc
sbb
mov
movsl
mov
mov
xchg
movswl
ss
mov
pop
cmc
sub
cmp
inc
fs
andl
sbb
dec
adc
push
fwait
dec
fwait
inc
add
lods
cmpsl
dec
or
out
jg
push
cmp
pop
pop
cmc
ds
push
cmp
pop
fcomp
xchg
bound
cli
fsubs
scas
xchg
out
mov
sub
mov
cld
cmpl
fldt
mov
das
push
cmp
xchg
daa
int3
xor
inc
aad
or
int
mov
test
arpl
orb
cld
fadds
jle
stc
lcall
imul
mov
ljmp
and
and
push
cmp
jle
les
jp
loop
addb
mov
inc
and
jle
mov
add
jnp
pop
or
ljmp
xor
enter
jge
xor
push
dec
mov
push
fidivl
mov
and
sbb
mov
or
jge
push
hlt
movb
gs
mov
scas
lahf
pop
sti
mov
cld
scas
jne
lds
lret
pop
fnstcw
icebp
sti
cmpsl
lds
and
push
push
pop
jns
lods
xor
push
das
imul
xchg
pop
sub
fsubs
mov
mov
push
inc
dec
hlt
pop
jmp
fs
mov
fdivrl
sbb
cltd
xchg
in
jg
sbb
enter
shr
lea
cltd
dec
das
clc
fsubl
dec
mov
pop
arpl
insb
xor
fs
insb
jns
pop
call
mov
mov
fbstp
xor
sti
ljmp
stos
dec
mov
data16
cltd
push
add
in
bound
or
pop
xchg
pop
pop
or
loope
inc
cmp
lock
cmp
mov
mov
inc
xchg
shrb
cmp
add
inc
inc
into
pop
das
inc
cmpsl
jbe
popa
addr16
adc
cmp
xchg
dec
aam
xchg
jge
mov
stos
add
push
outsl
std
jg
jne
inc
inc
movsl
adc
xchg
rol
dec
cmp
cs
aaa
outsb
leave
arpl
cmpsb
loop
xor
out
xchg
dec
fsts
jbe
lcall
dec
xchg
fcoms
flds
cmp
ljmp
lock
xchg
cmp
cmp
test
and
stos
lcall
sbb
cmp
sub
mov
inc
outsl
pop
and
jmp
clc
xchg
stos
fmull
sub
ljmp
negl
mov
into
in
outsb
sub
sub
fisubrs
pop
daa
out
or
enter
push
cmp
inc
cld
in
xchg
dec
jo
sbb
mov
cmp
add
mov
dec
cmp
xor
push
jns
and
std
ds
pop
popa
inc
shll
das
jns
push
lods
pop
push
cs
adc
out
clc
add
sub
call
push
or
ss
inc
icebp
orl
jo
adc
add
push
mov
inc
cmp
or
and
add
sub
aaa
mov
mov
popf
insb
and
ror
pop
lret
xchg
test
sbb
js
pop
pusha
bound
aam
mov
jno
mov
mov
sub
out
sub
mov
shrb
aas
pop
mov
sbb
cmc
rorl
fucomp
loopw
push
mov
bound
xlat
mov
rorl
sub
jle
imul
lahf
cmp
dec
inc
inc
xchg
push
add
xchg
arpl
pop
jne
cs
leave
dec
push
sahf
push
fcmovne
gs
hlt
sub
test
pop
ret
icebp
pop
cmp
pop
or
repz
outsb
data16
jle
xchg
sub
repnz
inc
adcl
icebp
enter
rclb
cmpsb
jmp
sub
xchg
xchg
incb
sub
add
mov
push
lcall
enter
call
fstpl
xor
mov
xor
pop
push
orb
popa
xor
cmp
mov
dec
popf
dec
cmp
lods
cmpsb
loop
cli
ds
mov
pop
test
sub
xchg
jnp
sbb
mov
pop
add
jno
and
inc
jbe
bound
cmp
xor
mov
in
cltd
push
ja
push
loopne
loope
lcall
aam
cmp
adc
and
imul
inc
addr16
pusha
loopne
mov
js
xchg
lock
adc
pop
cli
sbb
add
mov
stos
lcall
mov
ret
add
bound
mov
sbb
pop
push
shrb
xor
adc
mov
fcom
insb
inc
push
xchg
xchg
shlb
push
aad
in
stos
mov
test
aaa
adcl
xor
inc
pop
cwtl
je
cmc
mov
jg
jne
dec
xchg
fldt
push
and
stos
mov
ds
mov
iret
repz
mov
shr
push
in
jns
data16
out
shl
lret
enter
sbb
in
and
jp
loop
jmp
lds
test
xchg
mov
test
ja
in
test
jmp
mov
jns
lds
inc
xor
mov
ljmp
dec
xchg
push
ret
into
dec
mov
and
ljmp
fwait
orl
sub
sub
jae
pop
cltd
xor
cld
sbb
cmp
mov
pop
ja
add
push
mov
mov
nop
outsb
xchg
pop
mov
int
shrb
daa
pop
xchg
test
mov
outsl
mov
jbe
and
dec
shll
jmp
adc
xor
mov
add
sbb
into
add
inc
xchg
int
add
mov
and
push
and
js
pushf
rorb
test
fs
jecxz
andl
push
int3
test
mov
ja
cmp
notb
push
push
add
sti
and
pusha
test
or
mov
and
lret
mov
mov
pop
call
js
sub
popf
or
iret
sbbb
sahf
and
dec
lods
sbb
mov
and
pop
pop
dec
xchg
jle
mov
popa
xlat
scas
lret
lock
dec
lahf
icebp
inc
dec
push
inc
sarl
out
cli
iret
inc
cmp
adc
rclb
mov
adc
sub
mov
je
dec
lret
pop
add
test
nop
mov
stos
clc
xchg
mov
inc
and
lods
add
aam
fdecstp
imul
dec
mov
rcl
lea
and
sbb
loop
mov
dec
mov
mov
pop
cld
jl
ss
mov
mov
mov
sub
shlb
jecxz
jg
cmc
dec
inc
jle
push
pop
clc
nop
add
fnstenv
add
sarl
jae
pop
shll
sub
xchg
or
leave
lods
mov
adc
hlt
mov
jne
sahf
js
push
bndstx
and
ret
mov
add
jmp
pusha
clc
cltd
cld
push
clc
mov
xor
push
jbe
add
mov
pushf
cmp
dec
mov
cmp
sbb
addr16
push
lahf
call
mov
cmp
push
pop
sub
jbe
mov
adc
xchg
jbe
mov
and
and
xor
insb
cmc
push
hlt
add
out
in
inc
sub
bound
push
fists
adc
sbb
cltd
cmpsl
mov
rcr
mov
mov
jg
mov
push
mov
lret
mov
jl
test
jno
in
in
add
adc
dec
adc
dec
insb
negb
mov
sub
mov
loope
das
pop
icebp
aad
xlat
inc
popl
std
sub
in
push
mov
and
cmp
cmpsl
xor
out
out
and
rcrl
arpl
ret
filds
cmp
mov
rcr
mov
sbb
fldcw
aam
imul
fs
mov
sti
clc
mov
iret
dec
fnsave
xchg
sub
or
add
inc
xchg
push
pop
jecxz
ljmp
adc
stos
xor
std
data16
faddl
ljmp
push
ja
pop
cmpsl
push
pop
push
add
js
xchg
xor
jmp
dec
cmp
cld
xchg
mov
lea
rorb
ret
test
mov
mov
sahf
xchg
sbb
mov
push
sbb
sbb
daa
xor
dec
imul
in
sub
and
ljmp
sub
rclb
and
dec
shrl
sbb
jecxz
cld
push
mov
mov
shrl
out
gs
add
mov
jg
outsb
mov
or
and
subb
lds
push
lahf
stos
add
mov
jns
and
jle
sbb
cs
add
pop
in
fisubrl
mov
and
pop
add
lea
pop
jl
test
mov
dec
daa
fs
and
and
pop
jmp
push
push
or
mov
shlb
cmpsl
cmp
out
cmp
push
fistpll
cmc
sbb
pop
mov
dec
mov
loope
jae
xchg
xor
mov
xor
and
add
adc
stos
push
xor
mov
and
dec
je
fistps
xchg
jmp
sub
popa
sub
jae
pop
mov
imul
push
sbb
cltd
mov
into
icebp
push
inc
push
add
rclb
mov
out
jg
addr16
popf
adc
cmp
movsb
mov
jo
cltd
jns
jnp
and
les
mov
push
sub
mov
mull
rclb
aas
fsubrs
sbb
jmp
jne
push
enter
add
xchg
out
push
shll
ret
subl
dec
xchg
sbb
lds
pop
cmp
cmpsl
and
lahf
cs
jmp
cld
data16
lret
xchg
mov
push
imulb
sub
mov
cmp
mov
push
xlat
sarl
ss
push
jp
in
push
rclb
fstpt
dec
cmp
test
xchg
leave
arpl
int
sbb
sbb
cltd
rep
dec
js
jl
add
cmpsl
xor
mov
loope
push
mov
leave
jmp
sub
cld
flds
jb
xor
in
pop
sub
pop
arpl
dec
add
mov
push
push
push
mov
dec
stos
aaa
ljmp
mov
outsb
test
mov
cmp
cmpsb
inc
repnz
sbb
test
mov
dec
js
lea
aam
cmp
mov
sti
and
ret
es
mov
sbb
int3
cmpsl
cwtl
push
adc
mov
push
in
push
xchg
sbb
lcall
paddusb
push
dec
pop
cmpsl
mov
imul
out
push
sbb
mov
cmp
nop
hlt
js
iret
andb
lds
sub
pop
xchg
jae
sbb
jbe
les
and
push
lods
jb
sub
mov
sarl
jp
popf
push
cmc
int
daa
sub
mov
je
pop
mov
sbb
mov
push
xor
add
adc
adc
dec
cmp
roll
inc
nop
rcrl
fistpl
mov
mov
cltd
jnp
divl
or
jns
gs
mov
rcrl
dec
stos
mov
mov
pop
push
jns
mov
xchg
incb
cld
jns
lahf
stos
into
inc
hlt
lods
pop
sub
arpl
sbb
push
pop
scas
lock
xor
xor
xchg
and
imul
aam
cmpsl
lods
ret
pop
nop
add
inc
sarl
push
push
aas
sub
into
out
repz
and
scas
jno
pop
xchg
sbb
les
xorb
mov
mov
adc
std
in
cld
xor
frstor
sbb
faddl
jbe
lock
ljmp
aas
test
xor
pop
push
push
sbb
mov
mov
xor
inc
loopne
or
fstpl
push
xchg
cltd
fimull
stos
sub
xlat
cmc
mov
repnz
and
fldcw
add
les
dec
lret
xor
jae
pop
jnp
cmp
and
and
dec
add
mov
es
loopne
mov
das
mov
stc
sbb
insl
aad
frstor
or
jge
fnstsw
xchg
dec
jne
das
cmc
xchg
mov
xlat
jge
lds
sbb
adc
pushf
int
test
mov
mov
aam
je
mov
shl
mov
aaa
fimuls
pop
inc
rorl
xor
subb
loope
add
call
dec
sarl
movsl
push
pop
sbb
icebp
fsubrl
jmp
out
mov
pop
sbb
add
negl
addr16
pop
inc
push
and
daa
sub
iret
aam
std
cli
out
xchg
or
shrb
mov
cmp
pop
lds
jle
xchg
mov
outsb
ljmp
push
mov
pop
hlt
stos
stc
push
sahf
mull
dec
aad
mov
mov
leave
mov
push
fs
mov
mov
je
js
or
jae
lahf
cmp
fcmovu
subl
sahf
mov
rcrb
mov
mov
fwait
loop
cltd
push
js
movsl
popa
xchg
lret
adc
mov
push
pop
lock
in
xchg
int
sti
jge
fsubrs
adc
mov
loop
mov
adc
mov
mov
inc
jne
add
fimull
clc
mov
loopne
push
loopne
movsb
and
stos
cmp
dec
imul
add
pushf
lods
iret
jnp
cmp
sub
sbb
and
stc
ret
xchg
sub
mov
cmpsl
ret
fwait
cmp
pop
inc
inc
mov
das
or
xor
inc
mov
out
aas
jl
lahf
push
jle
add
sbb
xchg
or
cmp
into
shll
add
and
cmpsl
insb
das
push
jb
stos
mov
pop
add
sub
call
lret
sub
stos
xor
adc
enter
add
push
scas
dec
ret
into
scas
icebp
mov
repz
xchg
jne
enter
xchg
pop
sub
jecxz
push
jo
insb
fcompl
mov
lcall
push
push
filds
add
add
mov
push
mov
pop
adc
fistpl
or
out
out
lahf
sti
nop
out
xchg
xchg
jae
test
and
dec
call
decb
bound
jmp
clc
sbb
jmp
and
lds
sarb
or
xor
loopne
jbe
fstpl
mov
adc
mov
mov
loop
pop
out
fwait
xlat
loopne
orl
jle
test
push
in
pop
fstl
pop
hlt
fwait
inc
add
das
mov
mov
scas
imul
aas
dec
test
lea
enter
cwtl
and
mov
mov
xchg
push
mov
pop
leave
stc
push
aam
xor
imul
xor
push
sbb
loop
jp
pmovmskb
repnz
push
inc
fcoml
pop
xchg
jno
push
xchg
jp
dec
into
mov
push
xor
pop
mov
cmp
or
add
notb
lcall
pusha
lea
scas
aaa
fadds
loop
int3
bound
push
inc
in
mov
rcrl
sbb
sarb
and
sbb
daa
bound
mov
push
sahf
dec
pop
mov
push
push
jge
mov
div
inc
cltd
dec
shll
stos
ficomps
adc
dec
inc
into
push
std
bnd
imul
push
test
mov
clc
dec
dec
xor
jae
loope
add
das
sbb
cltd
mov
sub
testb
pop
shrl
jbe
mov
cmc
sarl
stos
data16
outsb
rclb
inc
hlt
orb
xchg
sub
xchg
xor
sahf
lock
pop
xchg
adc
fisubrl
test
dec
sub
popf
mov
stc
push
mov
int
or
je
orl
cmp
xor
pop
sarb
iret
call
addr16
icebp
clc
or
cld
adc
cli
pop
cmp
or
cwtl
push
jge
mov
pusha
jg
clc
xchg
mov
sub
scas
ja
cmp
test
fistps
orl
dec
das
xor
jno
fs
subb
insb
mov
pop
push
mov
pop
jae
push
aad
mov
add
bound
pop
outsl
pop
addr16
adc
leave
xor
pop
in
mov
int3
push
push
mov
ja
push
inc
lret
jne
cld
and
lods
cmpsl
or
lahf
mov
mov
sbb
xchg
and
xor
sbb
loope
jg
mov
push
shll
mov
test
rcrl
sub
inc
inc
std
jo
stc
lcall
in
jl,pt
js
arpl
lcall
mov
add
pusha
lcall
adcb
jae
add
test
test
xor
sbb
test
cmpsb
in
rclb
fld
ja
xor
jle
xchg
xchg
jo
mov
call
jecxz
fnstenv
sub
cmp
shl
lock
enter
fwait
mov
repnz
pop
lock
push
loop
and
adc
cmp
loope
fwait
dec
popf
frstor
fwait
add
je
sbb
sub
push
xchg
dec
or
cmp
call
push
in
lahf
lods
mov
ljmp
rol
mov
es
mov
out
sti
xlat
dec
inc
rcrl
fsubp
sbb
fisttps
mov
testl
push
lods
ficompl
jp
cmp
dec
sti
add
mov
js
pop
addb
mov
mov
or
pop
rclb
xchg
push
xor
xchg
loopne
fldcw
sbb
mov
inc
mov
repnz
aas
in
sub
mov
or
daa
in
test
testl
adc
arpl
pushf
mov
lds
pop
in
jmp
mov
add
subl
iret
push
adc
add
lcall
test
mov
dec
repnz
pop
test
xlat
imul
cmp
fldenv
pop
sti
repz
and
ret
sbb
add
lahf
mov
pop
aad
mov
fimuls
stos
cltd
jle
jmp
push
xlat
add
dec
mov
push
inc
lret
add
lods
pop
scas
lods
or
push
pop
or
mov
out
cld
aas
test
cmpl
jmp
mov
mov
pop
sub
jle
ljmp
jne
and
adc
hlt
pop
mov
mov
imul
dec
ret
sbb
mov
mov
cmp
cmp
popf
add
jmp
mov
shrl
jb
scas
jecxz
in
adc
adc
sub
inc
add
fwait
and
jg
sub
jp
lcall
divl
fs
add
dec
daa
mov
xchg
mov
popa
and
adc
fwait
xlat
adc
mov
push
adc
inc
daa
jecxz
push
fwait
out
inc
sub
mov
inc
push
sub
rclb
jbe
push
push
push
push
cwtl
adc
cmpb
push
xor
stos
mov
sub
ds
mov
imul
add
enter
bound
jno
xchg
aas
sbb
sub
pop
xchg
insl
clc
mov
sbb
sbbb
pop
xchg
test
out
inc
mov
pop
loopne
push
jp
jbe
test
xchg
push
aam
ljmp
mov
sbb
fs
iret
sub
lret
mov
adc
push
fs
int3
hlt
xlat
faddp
rclb
xorl
dec
mov
pop
pop
xchg
add
inc
and
mov
sbb
jecxz
pop
push
push
jp
lock
mov
jge
rorl
shlb
and
inc
pop
sbb
test
int3
mov
xchg
les
jns
dec
dec
out
pop
xor
in
out
loope
mov
in
mov
repz
add
or
xchg
sub
mov
int3
add
fistpll
pop
inc
ret
push
fisubs
jo
aad
fiaddl
repz
outsb
xchg
add
xor
mov
push
jecxz
sbb
test
loopne
roll
idivb
repz
jb,pt
xor
push
mov
popa
and
sbb
lods
or
and
out
andb
aas
fst
pushw
loope
ds
push
mov
jmp
rcll
adc
pop
mov
adc
mov
pop
inc
icebp
lret
mov
fs
test
fwait
dec
pop
ljmp
loope
sahf
mov
add
bound
bound
mov
orb
in
scas
and
ja
and
pop
jb
cltd
pop
out
sti
mov
jae
outsl
mov
push
add
cmp
jle
xor
lods
pop
pop
aas
in
jb
pushf
push
cmp
add
pop
cmp
roll
inc
testb
pop
add
pop
sub
sbb
mov
add
mov
jmp
mov
fcoml
jbe
movsl
xor
xor
jecxz
adc
stos
adc
xor
test
ficoml
inc
push
adc
das
movsl
push
inc
lea
adc
or
mov
push
xor
cltd
push
inc
xchg
lods
sub
mov
dec
data16
cmp
lds
xor
lret
lods
jge
jmp
mov
cli
push
mov
sbb
movsb
movsb
mov
mov
mov
addl
stos
hlt
sahf
out
mov
decb
out
rdpmc
jbe
clc
xchg
lods
cmc
jne
mov
lahf
xchg
mov
add
sub
or
into
sti
xlat
jno
push
lcall
lahf
cltd
xor
sbb
cs
fiadds
sahf
cli
std
inc
add
push
aad
fimull
lods
mov
jo
shl
in
fnstcw
xchg
aaa
stc
in
and
push
shlb
out
jp
push
sahf
test
xor
lcall
mov
jge
aaa
or
stos
mov
fwait
call
mov
pop
inc
xor
incl
sub
dec
shr
lea
dec
je
inc
cmp
pop
jae
pop
xor
dec
out
jle
jge
jle
mov
mov
repnz
mov
test
cld
repz
pop
mov
mov
lods
mov
push
xor
fsubrl
push
mov
arpl
dec
mov
stos
jne
push
adc
movsw
loopne
inc
adc
adc
mov
push
jo
add
test
or
stos
lods
jbe
popf
das
or
stos
dec
into
enter
xor
cli
dec
lods
fcmovnb
push
lods
ja
sti
fimuls
xlat
jns
pop
push
ret
jbe
push
push
aaa
jp
lret
std
mov
add
xor
mov
gs
push
rcll
cmp
or
sbb
cmc
cmp
sub
sbb
jl
movsb
xor
in
xchg
mov
xor
leave
lock
cmp
xor
cmp
push
or
test
punpckhdq
lcall
jo
and
xchg
xor
inc
jp
cwtl
sbb
lock
loop
rdpmc
sub
pop
leave
repz
xchg
repnz
pop
adc
jle
repz
mov
cmp
daa
fistl
cs
sub
push
mov
pop
dec
push
push
mov
cmp
xor
mov
sbb
adc
and
add
notb
scas
aad
xchg
out
gs
sbb
push
in
rcll
or
push
repz
adc
dec
and
ja,pt
mov
fimull
push
insb
pop
pop
cwtl
add
icebp
ds
cmp
arpl
incl
sarl
arpl
or
outsl
mov
jge
outsb
in
or
cmpsb
fsts
sub
loop
pop
ja
adc
and
lret
sub
sub
addr16
or
adc
js
leave
jmp
or
push
test
jae
inc
arpl
mov
arpl
stos
push
fmul
scas
pusha
enter
fwait
das
scas
sbb
data16
js
xor
pop
jbe
fwait
shlb
shll
lods
mov
jbe
xchg
inc
fstp
pop
mov
ret
inc
sar
pop
mov
xchg
dec
fwait
cmp
fdivrs
push
mov
sbb
xchg
cmp
mov
mov
in
imul
add
clc
les
out
mov
shl
dec
mov
aam
mov
add
movsb
insb
inc
test
dec
std
jl
adc
inc
lods
or
stc
ss
fs
fimull
add
dec
jge
mov
inc
movsb
and
push
sti
cmp
cmp
dec
repnz
shrb
xchg
cmpsl
lods
mov
and
push
pop
adc
inc
xchg
popa
aas
jl
push
push
sub
dec
add
std
sbb
xor
or
push
inc
je
pop
test
aaa
add
dec
mov
push
lret
ljmp
pop
mov
scas
jnp
ds
sbb
sbb
pop
call
sbb
sbb
xchg
test
imul
fadds
mov
or
mov
xchg
pop
cs
or
mov
mov
lret
mov
shlb
shll
cmc
ficompl
add
mov
rclb
dec
in
shr
mov
or
cmp
inc
or
lock
pop
data16
in
jmp
dec
ret
jnp
fstpt
outsl
push
and
mov
aas
leave
movsl
mov
jmp
xchg
test
sti
inc
cmp
sbb
int
xchg
mov
sub
pop
out
add
jp
or
xchg
pusha
movb
nop
or
xchg
sbb
das
js
or
jg
gs
cld
popf
cmpl
int
xchg
xchg
test
jne
mov
ds
inc
rorl
out
loope
push
or
ss
subb
jg
pop
lahf
vcmpsd
adc
and
pop
loopne
pusha
jns
sub
bound
xor
sbbb
pop
jae
and
out
add
xor
sub
or
push
jmp
fldcw
sbb
sub
sub
shlb
pop
test
push
pop
xor
push
and
fdivs
mov
cmc
mov
out
test
dec
cmpsl
jbe
repnz
pop
push
cmpsb
pop
and
mov
mov
movsb
xchg
ljmp
dec
mov
mov
popa
cmpb
cmp
xor
sbb
sbb
mov
mov
xchg
sub
dec
or
inc
ss
xchg
pmaxub
cmpsb
mov
pop
je
and
sub
inc
lods
repnz
pop
mov
jne
xor
movsb
mov
jl
jl
lcall
das
out
ljmp
data16
mov
sub
lret
clc
int3
xor
inc
fidivrl
lcall
jg
mov
fcmovne
shl
ljmp
push
pop
out
push
push
cmp
cmpsb
pop
lock
in
in
out
sub
push
jbe
aas
movsb
lods
jge
jmp
jno
and
sti
jmp
std
jle
sub
imul
xchg
fucom
repz
js
cld
out
cld
imul
or
pusha
pop
adc
and
mov
in
jb
xor
mov
imull
add
daa
imul
sbb
data16
or
ret
ljmp
inc
mov
into
outsb
fcom
lret
pop
cmpsw
iret
imul
push
aas
push
in
inc
push
jb
cld
int3
mov
je
mov
fs
in
jno
xor
out
repnz
jae,pt
in
out
or
push
mov
or
inc
sub
or
aad
addl
inc
jge
mov
cmp
std
cmp
lods
leave
sbb
mov
jns
ror
jne
xchg
fs
sbb
fs
xor
jno
xchg
inc
cmp
jbe
pop
cs
imul
out
js
pop
sbb
dec
lret
and
aaa
jnp
iret
mov
mov
fmull
ret
test
or
mov
stos
push
pop
jmp
in
xchg
inc
mov
cmp
sub
push
dec
or
dec
pop
movsl
mov
mov
or
in
orb
stos
stos
movsb
int
jg
add
bound
or
mov
cld
mov
cwtl
repnz
repnz
hlt
or
leave
mov
mov
addr16
lret
lret
mov
sbb
divb
decl
aaa
mov
fwait
outsb
push
aaa
add
pushf
movsb
sbb
mov
arpl
or
movsb
push
mov
rcrb
push
push
pop
sub
mov
sub
cmpsb
adc
int
xor
daa
mov
xchg
repnz
push
rclb
adcb
inc
ret
xlat
ja
or
lock
imul
lea
jp
ret
cwtl
or
pop
mov
add
in
stos
sbb
int
dec
xor
aaa
scas
xor
mov
popf
xchg
ret
pop
filds
xor
lods
xchg
lods
push
ret
or
arpl
iret
inc
mov
and
dec
adc
mov
xor
rorl
xor
or
ret
das
out
ret
adc
xchg
inc
and
mov
cmp
adc
sbb
addr16
lret
icebp
nop
and
out
fs
sbb
xchg
push
or
mov
imul
imul
out
stos
inc
rorl
fstps
and
pop
jmp
ret
test
roll
jb
lret
pop
in
pop
and
movb
jb
push
ret
push
stc
enter
rcrb
data16
repnz
pop
filds
jns
ret
mov
xorl
cmp
mov
loopne
mov
cli
jo
mov
and
mov
sarb
mov
mov
ds
fdivrl
mov
pop
add
test
mov
ror
movsl
sarb
pop
movsl
or
outsl
xor
mov
das
inc
das
pusha
in
mov
dec
xor
or
out
sub
jno
inc
add
mov
xor
mov
sbb
xchg
mov
add
sub
fiadds
mov
addr16
fsubr
cld
xchg
add
xchg
adc
movsl
adc
jno
std
test
cld
mov
jg
mov
lahf
xchg
push
dec
dec
nop
int
push
scas
call
je
cmp
lods
sbb
push
imul
xchg
fisttps
cmp
push
and
fadd
mov
es
cmp
movsb
xor
cld
cld
jecxz
mov
in
and
push
dec
outsb
js
popw
lods
dec
inc
dec
xchg
mov
rcrl
add
pop
adc
xchg
push
mov
cmp
adc
call
mov
popa
sbb
cmpb
cmp
out
shlb
jo
sarl
add
outsb
rcrl
mov
mov
sub
ljmp
push
clc
mov
lret
incl
lret
sti
out
mov
subl
sbb
or
mov
mov
in
and
inc
mov
hlt
sub
ljmp
test
dec
sub
mov
adcb
cmp
mov
xor
push
lds
or
cli
mov
ficomps
pop
fldl
jne
in
lods
inc
jmp
out
loop
xchg
clc
mov
test
xchg
imul
mov
stos
add
jecxz
jo
jge
push
aaa
add
nop
pop
jmp
add
nop
mov
rcr
imul
lret
adc
mov
xorb
jae
nop
pop
xor
mov
popa
jnp
pop
bound
mov
stos
hlt
cmpsl
ds
in
outsl
das
sbb
add
shll
bnd
inc
ja
mov
test
lea
sti
add
sub
jmp
fcmovb
and
add
adc
adc
ljmp
add
push
and
add
clc
mov
mov
out
mov
push
mov
mov
rorl
in
push
mov
cltd
mov
or
lds
xchg
cmp
adc
arpl
dec
cli
mov
dec
loop
lods
les
cmp
jmp
mov
lret
gs
jae
cmc
add
rcrb
inc
std
jp
adc
rcll
jno
fucomip
add
mov
out
lret
mov
cmp
shll
add
cmpsb
outsb
sbb
and
into
scas
sbb
inc
clc
es
inc
aaa
and
inc
icebp
mov
xor
inc
dec
push
cltd
jl
and
stc
mov
push
jl
sti
fs
outsb
mov
clc
enter
nop
sub
dec
xchg
roll
push
test
or
lods
je
push
push
rcll
mov
cmp
mov
ds
loope
mov
shlb
xor
enter
mov
fbstp
shrb
push
mov
sbb
mov
cmc
mov
iret
lahf
pop
push
mov
fstps
xor
xchg
push
sbb
es
push
addr16
into
inc
pop
push
dec
adc
pop
mov
adc
mov
addr16
pushf
adc
cmp
hlt
lahf
cmpl
movb
add
mov
sbbb
xlat
pop
jnp
xor
sbb
dec
addr16
push
xor
cmc
test
xchg
pop
push
xchg
sbb
jns
negb
push
push
jno
repz
rcl
int3
dec
dec
push
aas
and
mov
dec
inc
in
daa
pushf
test
push
adc
pop
and
mov
xchg
cs
stos
push
insl
push
aas
or
cmp
adc
xchg
push
fstpl
ja
in
xchg
lea
mov
aam
jmp
aad
lods
outsb
xchg
sbb
and
mov
sbb
pop
shlb
mov
ficompl
mov
push
mov
std
inc
out
fcoms
jp
and
enter
xchg
mov
mov
jb
aaa
lock
test
in
xchg
cmpsl
fidivs
aad
aam
jae
scas
cli
pop
inc
arpl
push
lret
cmp
push
jns
imulb
xor
pop
xorb
push
lcall
push
push
insb
js
mov
mov
jbe
jns
and
or
mov
or
hlt
shl
sbb
sbb
je
outsl
xor
sbb
push
and
ljmp
lods
mov
out
ret
popa
mov
out
ds
dec
cmp
mov
or
rclb
xor
xor
add
into
push
jno,pt
push
xor
cs
mov
inc
mov
mov
mov
inc
outsl
lea
jns
pop
icebp
pop
pop
nop
jae
lds
out
inc
sbb
mov
std
fmull
add
lahf
cmp
or
mov
mov
sub
test
add
add
push
xor
loope
stos
xor
mov
mov
dec
jae
add
pop
push
push
test
xchg
jle
lahf
in
ja
insl
dec
push
shlb
call
lcall
fdivrp
mov
and
aaa
add
mov
ret
in
xchg
sbb
pop
sub
sahf
repz
xor
cli
insl
mov
lds
sub
xor
iret
mull
push
push
jns
sub
sub
out
jp
add
push
loopne
xor
inc
or
lret
dec
mov
fcompl
cmp
cmpsb
adc
adc
and
adc
scas
fst
inc
stos
mov
dec
andb
fldenv
dec
xor
aad
sbb
sbb
ror
out
xchg
stc
push
in
fisttpl
sub
outsb
int3
lcall
es
xchg
jecxz
out
les
int
shrb
xor
cmpl
mov
ss
cmp
outsb
and
mov
stc
iret
repnz
ret
mov
push
dec
icebp
jmp
xor
sti
pop
add
dec
dec
dec
lret
push
adc
sbb
mov
je
jmp
pop
call
sbb
bnd
lret
jo
jmp
popa
dec
inc
mov
xor
pop
pop
cli
mov
mov
mov
push
mov
clc
sbbb
ficomps
cmp
cld
add
jnp
cmc
xchg
sbb
dec
inc
jne
sub
sbb
stos
call
inc
hlt
mov
lea
mov
inc
lret
bound
mov
sbb
xor
lcall
jb
sbb
in
xlat
mov
imul
dec
lods
mulb
jnp
cmpsl
sub
fcomp
stos
add
mov
jo
sar
les
test
jno
fsubrl
hlt
ss
push
xor
mov
test
jns
xchg
or
sbb
shl
aaa
mov
rcrl
lret
ss
insl
xor
xor
sbb
popa
mov
out
popa
dec
mov
pop
cmpl
decb
mov
push
jns
add
mov
outsl
fstpt
and
int3
loop
popf
shrb
fimull
lahf
loope
sti
aas
lret
cwtl
imul
sbb
cld
das
jge
push
jp
xor
ss
cmp
insb
jbe
test
mov
into
cs
mov
int
test
sub
mov
pushf
xor
pop
out
or
mov
sbb
add
jne
add
std
hlt
repnz
pushf
jne
push
pop
xchg
mov
xor
adc
sbb
xorl
repz
shrl
or
pop
mov
push
rorl
inc
fidivs
sbbb
inc
sbb
in
xchg
ja
push
pop
mov
lret
cmp
pop
fstpt
push
cltd
mov
jecxz
int3
dec
xor
push
mov
aam
add
jbe
adc
xchg
out
fsubrl
sbb
iret
or
in
push
sub
sub
rcl
mov
mov
cmp
mov
sub
jge
rcll
add
das
sbb
adc
or
or
mov
mov
das
xlat
adc
imul
and
mov
push
repnz
mov
adc
cltd
push
jns
aaa
rcll
pushf
enter
sbb
stos
neg
les
rcl
in
cmp
mov
sbb
lahf
stc
nop
scas
sub
lea
imul
out
pop
mov
xor
jle
lret
aad
movsl
cmp
bound
dec
imul
ror
dec
fs
lods
inc
aad
ret
jbe
dec
xor
leave
ja
pusha
lock
mov
sub
cli
pop
les
cli
sbb
push
mov
scas
xorb
xchg
int
pop
mov
jno
push
mov
shr
sahf
mov
aaa
icebp
rorb
js
mov
dec
sbb
or
and
cld
out
push
adc
scas
fidivrs
adc
addr16
fs
pop
sbb
xchg
pushf
jb
mov
and
push
lahf
lcall
das
fldt
sub
js
sbb
testb
insl
testl
mov
xchg
lods
out
pop
xchg
xchg
mov
decb
test
xchg
dec
sub
fs
rolb
and
arpl
out
pusha
mov
int
add
inc
jb
jl
sahf
pop
sti
dec
daa
test
scas
sub
inc
lret
fimuls
xchg
stos
movsb
jo
fadd
popa
push
out
mov
jae
sti
es
sbb
in
aaa
mull
or
cmpsb
jge
pop
dec
xchg
mov
mov
inc
jecxz
outsl
mov
leave
ja
out
imul
pushf
js
sahf
inc
cmpl
ret
mov
rclb
dec
outsl
or
jbe
clc
and
clc
aam
test
sarb
daa
rorb
out
gs
stc
sbb
dec
mov
enter
aas
push
hlt
cld
cmc
mov
cwtl
sahf
scas
add
clc
popf
and
test
xor
and
mov
lods
leave
pushf
aas
cwtl
ret
sti
in
in
enter
cmpsb
and
jo
mov
xor
out
lret
sub
rcrl
shrl
cld
in
mov
xchg
cmpsl
push
jae
sbb
or
jge
scas
adc
mov
js
mov
ret
rcrb
dec
pop
adc
nop
lea
popa
xorb
nop
push
jle
jl
out
andb
jle
inc
xchg
popf
inc
inc
mov
xchg
lods
adc
movsb
and
fsubrp
push
pop
mov
cs
in
ss
fs
push
push
sti
jns
push
loope
sub
addr16
sbb
stc
aas
icebp
sbb
pop
ret
adc
jmp
in
fstpl
push
add
and
jo
adc
mov
adc
push
decl
call
push
mov
imul
adc
out
scas
adc
mov
fwait
sbb
test
xchg
cmp
jge
in
sbbl
int3
push
mov
addr16
test
pause
adcb
loopne
testl
in
dec
aas
nop
pop
cmp
call
inc
mov
pop
loop
mov
add
test
lods
add
adc
icebp
push
sub
lahf
cli
int3
nop
in
xor
js
mov
mov
add
aaa
xor
out
jb
hlt
add
mov
clc
outsl
mov
cmp
sbb
das
das
leave
enter
lret
dec
in
cwtl
dec
add
pop
inc
sbb
add
mov
sbb
sarb
mov
or
adc
enter
pop
lret
adc
sbb
rolb
sub
insb
cwtl
stos
jl
dec
inc
movsb
pop
xchg
sbbl
lock
inc
push
sbbl
cwtl
pop
in
xchg
fidivl
scas
cld
popa
mov
dec
mov
aaa
mov
mov
daa
sbb
xor
fisttps
ss
sti
in
lcall
js
xchg
sub
leave
mov
jl
xor
sarl
xor
aas
mov
rclb
je
ljmp
or
xchg
mov
mov
inc
jo
mov
faddp
mov
js
xchg
pushf
ds
and
clc
repnz
scas
ss
pop
aam
fwait
clc
scas
pop
mov
and
xchg
xchg
aas
mov
std
push
and
je
cld
mov
xchg
jecxz
push
jl
inc
loope
lcall
inc
inc
ret
jae
jl
mov
or
cs
sti
mov
mov
or
adc
push
aad
dec
pushf
lds
xor
fisubs
xor
aad
add
inc
pop
fnstenv
loope
xor
jecxz
fldl
mov
sub
dec
ret
and
inc
movsb
fwait
mov
sub
or
or
xchg
pop
in
fbld
repnz
dec
lahf
test
or
and
daa
xor
daa
pop
jnp
cs
mov
adcl
jmp
mov
lds
push
ud0
mov
push
cmp
jmp
push
rol
ret
jg
jb
mov
push
add
inc
lahf
jne
jae
mov
cmpsl
sub
jmp
jmp
sub
mov
out
mov
inc
xor
dec
insb
xchg
sahf
call
decb
aas
dec
push
test
and
inc
adc
push
xor
pusha
jmp
nop
cld
sbb
mov
inc
std
andl
mov
mov
shlb
std
fnsave
jae
aam
cwtl
ss
pop
push
mov
cmp
sbb
or
jnp
add
ss
add
add
adc
stos
dec
adc
out
pop
add
add
fwait
add
mov
scas
add
xor
