sbb
add
mov
sbb
insb
shlb
xor
mov
dec
sub
or
push
add
cmp
aaa
xchg
inc
jmp
sub
stos
dec
pop
dec
movsb
push
test
popa
lock
xchg
dec
lods
xchg
out
pop
jl
add
mov
sbb
cmp
xchg
dec
xor
les
loop
add
mov
fmul
lahf
imulb
int3
jmp
mov
ss
iret
outsl
movsb
out
adc
xor
das
stos
insl
push
pop
je
lea
jmp
inc
xor
aaa
mov
icebp
add
fcmove
inc
lock
sub
sbb
pushf
enter
pop
sub
sti
sub
sbb
mov
xchg
out
dec
push
in
xor
lret
insl
pop
stc
xor
or
incl
sub
stc
aad
addr16
fst
fwait
mov
ljmp
ja
out
mov
xchg
dec
add
mov
fst
push
lods
adc
addl
mov
sub
arpl
sbb
jns
push
popf
popf
dec
movsb
movsl
mov
aaa
aam
stc
scas
fucomp
call
mov
pop
cli
aas
mov
xchg
loop
adc
rcrl
imul
add
sbb
add
cs
adc
xchg
mov
mov
scas
enter
sub
jmp
lret
xor
mov
sbb
arpl
adc
das
outsl
daa
push
sahf
test
sbb
xchg
mov
movups
add
pop
sbb
dec
mov
jae
int3
mov
ret
fdivrs
jnp
mov
add
cli
or
ds
push
pop
xor
test
cmpsl
or
xchg
mov
stc
shl
mov
push
int
lcall
mov
loopne
dec
test
dec
aad
bound
ss
lahf
outsl
stc
test
jbe
xor
push
dec
ss
lahf
inc
clc
cmp
aaa
mov
push
out
sbb
loopne
xor
dec
test
jge
mov
fiadds
cmp
inc
dec
push
adc
pop
sahf
sub
cmove
dec
jl
repnz
sarb
ret
or
movsl
outsb
mov
ret
cwtl
hlt
lods
or
rcrl
aam
jg
pop
add
mov
xor
add
int3
lock
rol
push
test
fiadds
fwait
push
or
add
xchg
test
imul
test
sub
data16
ss
add
adc
jns
daa
adcl
or
aam
push
or
add
iret
adc
jbe
sbb
sbb
adc
test
xchg
sub
sar
fadd
hlt
adc
dec
sti
jns
sahf
sahf
out
or
cmpsb
dec
stos
jl
mov
dec
xor
xchg
push
pop
jle
xchg
mov
push
xor
pop
in
add
mov
cmp
dec
inc
inc
lahf
in
inc
fnsave
int3
shrb
fldcw
lods
rcrb
sub
fst
push
in
pushf
inc
lahf
push
sbb
push
cmp
cmp
ljmp
cmp
add
fmuls
mov
outsl
loop
imul
fs
fisubrs
ret
fsubr
mov
lock
xorl
loopne
or
mov
lea
bnd
mov
jg
xchg
sub
fistps
fcoml
or
sbb
repnz
and
bound
cltd
sbb
xchg
and
and
push
sub
pop
les
push
mov
loop
in
movl
push
loop
sbb
cli
or
xor
push
repnz
lahf
jmp
pop
movsl
jecxz
mov
fsubs
daa
xchg
mov
in
cmp
fs
pop
movsb
xchg
iret
jmp
loopne
data16
lcall
push
ss
sbb
fistps
push
data16
mov
pmulhw
cmp
in
push
dec
cmp
sub
out
ret
jae
fstl
sti
xlat
pop
or
int3
sub
sbb
cmp
xchg
outsb
dec
push
std
mov
gs
cltd
repz
mov
xchg
jae
mov
loopne
jle
inc
inc
flds
sub
dec
sbbl
cmp
in
jbe
outsl
xchg
sub
pop
cmpsl
lret
into
les
pop
add
les
xor
and
dec
gs
mov
mov
dec
xor
cmpsb
rorb
rcrb
movsb
push
inc
popf
ret
rol
cld
aad
lret
xchg
mov
sti
xor
mov
cmp
mov
mov
out
dec
mov
inc
mov
cmpsl
daa
jg
jo
xchg
jnp
dec
aas
push
dec
push
mov
dec
jb
std
sbb
std
lahf
xor
adc
xchg
out
ret
subb
xor
pop
adc
orl
mov
rol
xchg
or
or
nop
adc
std
add
xor
pop
cmc
xchg
sub
gs
push
add
sarl
push
dec
iret
fcoml
jns
loopne
inc
dec
rolb
gs
pop
sub
outsb
lods
rcl
in
sub
xchg
inc
dec
push
mov
jmp
push
cwtl
int
shlb
mov
pusha
cmpl
lods
sbb
cmp
hlt
cmp
rclb
push
out
inc
sbb
dec
mov
inc
addr16
popa
leave
idivb
fwait
gs
fcomps
mov
jecxz
mov
mov
outsb
add
aam
faddl
bnd
dec
adc
iret
jle
push
inc
addb
cmp
xor
mov
fisttps
idivb
test
xchg
push
rcrb
das
fcoms
cltd
ds
jp
popa
outsl
sub
jne
rolb
pop
mov
fwait
or
data16
adc
jb
cltd
xchg
push
imull
jge
jecxz
gs
push
dec
and
xor
push
in
enter
and
ss
lods
jnp
scas
push
cltd
xchg
adc
mov
in
lods
out
fnstsw
dec
cmp
arpl
inc
jmp
xchg
mov
add
jecxz
inc
push
push
ret
xchg
pusha
xchg
pop
nop
sub
ficoml
scas
aad
jnp
icebp
gs
sub
sahf
je
xor
out
rcll
cmpsl
adc
and
mov
mov
fwait
dec
aad
xlat
pop
mov
mov
sub
mov
std
lret
xor
xor
mov
xchg
xchg
xor
mov
jecxz
xchg
inc
pop
shlb
cmc
inc
orb
push
clc
shlb
xor
stos
ret
pusha
mov
adc
testl
jmp
out
push
data16
mov
add
xorl
push
fucomp
cmp
cmc
les
dec
cmp
movsl
aas
lods
rorl
cltd
je
adc
cmc
add
outsl
mov
int3
enter
popa
jmp
outsb
imul
and
pop
imul
push
push
pop
sub
cmc
sub
inc
cltd
lret
stos
xchg
ss
insl
cmpsb
push
mov
push
int
scas
call
cld
nop
mov
jno
cld
fcomi
loopne
dec
test
ljmp
clc
mov
or
aam
add
repz
add
mov
ret
cltd
mov
or
xchg
int
mov
and
adc
out
aaa
xchg
aad
pop
or
in
xchg
pop
outsl
jno
jne
xchg
icebp
aas
les
leave
repz
push
adc
aad
sbb
cli
mov
mov
add
shl
popa
repz
xorb
adc
pop
imull
aas
mov
scas
mov
lds
mov
inc
mov
jge
popf
adc
js
sbb
dec
mov
mov
pusha
xchg
mov
test
pop
lock
cmp
push
mov
mov
lods
cmpsb
or
adc
cmpsb
jae
dec
xchg
mov
test
rclb
inc
scas
jae
rcl
sub
js
incl
fwait
movsb
js
sub
rcr
push
sbb
into
daa
inc
add
pop
jbe
cltd
xchg
cmpsb
dec
inc
mov
add
dec
call
add
jl
sbb
or
xchg
dec
jne
inc
push
jl
jmp
cwtl
ret
outsb
mov
shrb
out
call
and
mov
testb
add
jae
cmp
out
sahf
lcall
in
cmp
in
push
scas
or
loop
adc
shl
lock
fistl
xlat
loop
test
jae
xchg
wrmsr
imul
pop
out
sbb
and
int3
sbb
ja
je
mov
adc
mov
repz
push
flds
fsubl
xor
movsb
lods
push
xor
mov
cmp
rorb
adc
or
and
movsl
sarl
push
cli
lock
mov
cs
into
jl
loop
inc
mov
push
xor
popa
sub
push
popa
push
daa
roll
cmp
cmp
inc
imul
mov
std
inc
aad
ds
addr16
outsl
xchg
std
fwait
jo
xor
movsl
mov
or
js
popa
sub
pop
cmpb
sarl
mov
insb
pushf
out
daa
daa
rcl
ljmp
or
mov
scas
ds
test
pop
stc
ds
mov
outsl
cs
outsb
jmp
jle
xor
jmp
cmpsl
sub
xor
mov
mov
imul
xchg
dec
dec
xor
xor
sahf
sbb
pop
mov
mov
outsl
pop
les
push
push
mov
xchg
or
decl
sbb
jl
push
js
and
jne
xor
push
inc
jo
ret
xlat
xchg
sbb
pop
jae
shlb
dec
mov
jp
aaa
xor
in
sub
push
rorl
lods
push
xchg
loope
fsub
add
dec
mov
aam
and
and
or
xor
push
and
cmp
int3
xor
or
xor
gs
bnd
gs
mov
dec
adc
hlt
push
jae
push
xor
aad
inc
mov
lods
add
scas
add
xor
dec
cmp
sbb
lock
and
fucomp
mov
imul
setnp
repz
cmp
inc
adc
sar
mov
std
add
test
enter
xchg
sahf
xchg
xchg
pop
sbb
insl
jp
pop
jl
pop
push
icebp
jle
mov
and
test
cwtl
pop
popf
icebp
pop
pop
pop
loopne
inc
inc
test
cltd
dec
mov
xchg
pop
inc
mov
insb
push
pusha
inc
lods
jae
lds
push
add
add
jg
sub
pop
pop
stos
sbb
aas
and
mov
cld
fs
or
loope
xchg
lods
jbe
xor
in
je
aaa
ja
mov
mov
push
cmc
ss
sbbl
pusha
aam
pushf
pusha
aam
ss
lods
outsl
cld
js
sbb
jmp
aam
int
fdiv
movsl
or
or
test
adc
repnz
addr16
mov
and
cmpsb
jecxz
pop
dec
adc
pushl
mov
std
sbb
or
xchg
imul
into
push
sub
sbb
lret
mov
xor
jecxz,pn
pop
adc
movsb
jnp
scas
mov
stos
cmp
mov
outsb
lret
add
shl
movsb
repz
inc
jle
sarl
arpl
jne
imul
les
sub
jnp
mov
aam
enter
cmp
loope
fstpt
jae
rcrb
js
sbb
fcmovnb
push
ds
rclb
xor
shrl
jnp
test
pop
rclb
dec
and
imul
icebp
bound
call
lret
clc
mov
cli
stos
push
mov
pop
inc
subl
idivl
dec
popf
xor
mov
mov
mov
repz
and
out
or
mov
mov
push
pmaxub
cmp
imul
scas
push
push
pop
mov
jmp
outsb
in
in
mov
push
pushf
mov
test
cmp
rol
sbb
icebp
sbb
shlb
inc
or
or
bound
cwtl
insb
shl
push
es
rcl
je
adc
sub
dec
nop
and
pushf
nop
pushf
insb
pop
sub
push
rclb
inc
mov
pop
jmp
lret
insb
rolb
lahf
pop
add
out
cvtps2pd
push
dec
insb
fnstenv
addr16
int3
lret
and
dec
orb
dec
xchg
pop
int
test
jle
push
std
sub
xchg
adc
xor
cmp
mov
int3
arpl
push
adcl
jo
int3
xor
sub
insl
adc
jns
dec
dec
adc
lret
repz
jecxz
test
inc
mov
add
cmp
push
mov
cltd
xchg
fldl
scas
mov
lahf
sbb
xchg
or
mov
loopne
stos
sbb
cltd
mov
pop
mov
add
pop
popa
mov
stos
add
cmp
mov
cmpsb
loopne
ret
xchg
cmc
mov
inc
int3
in
xlat
push
rorl
ror
lock
ljmp
es
das
int3
repz
add
xor
pusha
ss
cs
jns
aas
ja
scas
mov
pop
or
sub
jae
outsb
mov
outsl
je
mov
add
dec
test
aaa
iret
into
push
add
pop
mov
aad
std
mov
dec
inc
mov
lahf
lods
pop
in
mov
push
jo
int
xchg
dec
test
mov
push
or
iret
outsl
cmp
mov
scas
in
adc
lahf
inc
rorl
or
rolb
dec
and
inc
cmpsb
out
mov
aas
movsl
cmp
dec
push
test
pop
repnz
lahf
push
jmp
ds
add
xor
lds
jns
adc
cwtl
xorl
stc
imul
adc
repnz
mov
mov
lds
test
js
out
loope
cs
push
jl
jno
push
push
jl
or
jb
xchg
jbe
punpckhdq
xor
clc
and
loopne
fisttps
sbb
adc
js
in
clc
inc
cld
jle
rcrb
or
and
gs
in
xorl
and
push
mov
adcl
dec
je
rorb
or
jle
mov
push
mov
and
stos
adc
pusha
leave
push
push
mov
rolb
shll
sub
add
loop
jae
aaa
incb
or
imul
or
jne
hlt
push
ror
scas
xlat
mov
hlt
inc
sub
lock
das
ret
outsb
mov
loopne
cmp
daa
pop
mov
push
mov
ss
pop
xor
sahf
mov
bound
fadds
or
sub
iret
mov
sti
jne
lods
dec
add
push
imul
cld
sub
daa
cmp
jae
mov
fs
stos
or
adc
or
das
imul
ret
popl
mov
lret
mov
cmp
and
add
xor
sbb
ds
cmp
pop
femms
lea
sbb
testl
loop
addb
mov
ds
push
aaa
and
rolb
ss
gs
scas
or
daa
sbb
mov
xor
adc
pop
andl
insb
adc
shlb
aad
xor
repz
dec
pop
xor
cmc
addr16
adc
in
add
fs
xchg
xor
in
jns
sbb
mov
adc
or
or
cwtl
add
and
cmp
js
mov
pop
add
mov
push
pusha
cwtl
mov
xchg
in
repz
in
mul
mov
sub
mov
jl
sbb
xor
pop
mov
pop
ja
mov
cli
pop
fadd
sub
xor
ljmp
add
push
jp
xor
jmp
mov
xchg
and
idiv
icebp
jb
data16
lods
mov
lret
fisubrl
pop
sarb
mov
lock
out
test
scas
data16
ret
pop
ret
aad
inc
insb
mov
rcll
xor
loopne
popa
cltd
std
fs
dec
cltd
mov
popa
add
movsb
lret
cmp
lods
cwtl
pop
les
sub
jb
cmpb
pushf
sub
add
aas
out
sub
movsb
test
aad
lea
out
imul
lds
dec
icebp
fmull
aaa
ljmp
addl
and
mov
int3
lcall
int
adc
fisttpl
mov
and
pop
into
add
jp
add
push
dec
mov
push
dec
jg
int
mov
mov
mov
inc
lret
fldcw
stos
cld
cs
inc
and
mov
aad
scas
repz
pop
add
stos
sbb
add
xor
lahf
movsb
pop
ret
push
dec
cld
push
lock
mov
hlt
push
cmp
dec
add
adc
fnstenv
pushf
lahf
lock
jecxz
add
icebp
and
data16
and
lods
mov
lcall
clc
in
js
notb
mov
ret
pushf
sbb
data16
xor
xchg
je
popf
jmp
mov
subl
fldt
pop
lods
add
int3
or
mov
or
hlt
dec
add
dec
inc
mov
inc
jnp
stc
mov
or
push
push
add
imul
xchg
dec
push
xor
insb
popf
cmpsb
popf
cmp
sbb
aam
xchg
jbe
mov
in
out
cwtl
and
pop
lock
add
pop
fadds
ja
iret
mov
ret
fnstcw
xor
push
push
sarb
test
scas
and
aaa
push
ljmp
mov
push
lea
adc
nop
xchg
push
push
ret
mov
test
cmp
cmp
xorl
imul
test
adc
aam
das
stc
pop
out
or
inc
cmc
push
fists
pop
cs
sbb
xor
ret
add
adc
test
mov
mov
sti
in
fmuls
mov
dec
fildll
mull
add
stos
mov
inc
outsb
jb
adc
cmpsb
inc
dec
loop
dec
dec
add
popf
jge
sti
sub
jnp
add
aas
dec
xor
test
adc
pop
call
mov
xor
sbb
hlt
lret
inc
ror
cmp
xchg
sub
lcall
or
lret
inc
pop
test
jb
aaa
pop
push
and
fldt
nop
push
pop
push
inc
sbb
stos
jb
enter
sbb
lret
aas
dec
sti
daa
test
cli
inc
add
mov
mov
mov
aam
mov
xor
pop
test
mov
pop
aam
inc
jmp
push
jns
stos
cmp
xchg
enter
out
mov
push
and
lahf
mov
negb
arpl
jno
and
cld
sub
sti
fbstp
shrb
lahf
leave
lret
frstor
sarb
mov
lock
sub
int3
mov
iret
out
nop
das
aas
mov
inc
fstpt
mov
movsl
movsb
cmp
add
fbstp
mov
scas
fdivrs
inc
leave
scas
sub
inc
sbb
test
mov
mov
or
movsl
mov
rolb
add
shll
lock
or
imul
pop
sub
int3
mov
jmp
ds
pop
jg
ja
sub
loop
in
cli
push
sub
aas
pop
add
out
jle
sbb
mov
in
das
pop
in
stos
jne
inc
adc
test
stos
out
adc
xchg
sahf
stos
sub
lea
ret
add
sub
pushf
int3
dec
cli
dec
mov
pusha
xchg
or
jge
lcall
push
je
or
outsl
int
imul
ret
jmp
xchg
lods
pop
pusha
cmp
mov
ds
in
jne
aad
aad
les
inc
loope
inc
lret
pop
mov
lcall
jb
ret
push
xor
rol
xor
fwait
cwtl
es
jbe
pop
lods
data16
leave
mov
popf
push
stc
fistpl
in
sti
ljmp
test
fiadds
sbb
fistps
cli
sub
popa
jns
fs
sub
sbb
sahf
xor
andl
loopne
fdivl
mov
jmp
xchg
ret
pop
hlt
dec
int3
mov
push
imul
cltd
cmp
mov
jb
xchg
movsb
jb
adc
push
mov
test
std
sarb
xchg
fwait
mov
outsb
lea
mov
inc
je
jp
int
fstl
adc
aas
adc
mov
movsl
push
popa
mov
negl
icebp
fwait
mov
dec
and
jg
bound
mov
out
mov
sahf
mov
push
push
cmc
cwtl
std
inc
cs
and
dec
xchg
popa
sbb
pop
ss
adc
or
lods
xchg
cmp
notl
fmul
dec
and
push
push
mov
fwait
mov
lods
out
push
jp
mov
mov
lods
pop
nop
push
mov
jnp
fsubrl
inc
stos
mov
inc
sub
pop
dec
in
ljmp
out
aaa
popf
movsl
out
xchg
push
sbb
mov
xchg
jecxz
lret
or
inc
les
mov
pop
pmaxsw
mov
push
daa
icebp
ret
mov
enter
mov
dec
adc
xchg
cs
and
mov
lahf
nop
push
test
lods
sbb
cs
adc
xchg
clc
movsb
iret
push
shrl
int
in
xor
inc
scas
xchg
sahf
cld
cmc
mov
pop
or
add
adc
fwait
lock
gs
test
xchg
stos
imul
push
dec
subl
adc
in
fldt
and
iret
ljmp
dec
dec
sbb
dec
test
xchg
jns
pop
es
cltd
and
xor
gs
aas
into
outsl
push
imul
ss
mov
lcall
es
cmpsb
push
ror
arpl
xor
push
sbb
inc
rcll
lret
jb
ret
jecxz
lea
std
jge
jmp
ret
mov
push
dec
lds
jnp
fs
add
in
lock
stos
orb
mov
in
mov
mov
jne
sub
stc
dec
iret
cmpsb
into
xor
jns
flds
push
ja
icebp
pop
fistpl
push
std
push
testl
jb
mov
sub
pop
int
fldl
outsl
adc
inc
out
xor
push
scas
push
xor
jnp
push
aaa
sbbl
mov
orl
das
mov
test
or
daa
xor
xor
cmp
clc
sti
adcl
fildl
nop
pop
lret
add
cltd
jbe
dec
es
js
pop
sub
popa
popf
push
icebp
outsw
cld
jge
or
adc
ret
sbb
iret
repz
push
sar
cmp
pop
mull
loope
scas
movsb
jle
dec
into
mov
cmp
mov
jae
jmp
pop
jnp
fadd
jle
lods
or
adc
cs
lret
sub
test
insb
xor
icebp
ret
push
or
fwait
ret
test
jmp
fsts
adc
xchg
and
int
int3
mov
fcoms
add
mov
inc
cmpsl
xor
dec
adc
shll
pusha
lds
sub
xor
popf
jno
push
mov
divl
shlb
sub
imul
xchg
dec
lret
movl
fcmovu
mov
cmp
inc
dec
add
stos
pop
mov
jo
mov
test
mov
test
out
data16
mov
lds
addb
repz
push
or
mov
daa
inc
cmp
shll
jns
and
cli
rclb
into
push
mov
mov
out
jl
repnz
gs
jno
fwait
insb
add
pop
jp
dec
push
loope
fisttpl
in
pop
jg
push
test
iret
faddl
xor
and
mov
push
in
int3
dec
push
cli
sarb
xchg
cwtl
inc
lret
lret
xchg
sub
enter
mov
and
xlat
scas
bnd
je
rcl
push
or
jp
push
mov
xchg
cmp
lahf
lea
inc
dec
push
add
rolb
xchg
out
int
insb
ficompl
ret
xchg
mov
call
pop
fsub
daa
mov
adc
dec
mov
pusha
test
jae
pop
mov
icebp
cmp
mov
daa
pop
enter
push
aas
adc
subb
in
ds
fsubs
push
popa
cmc
sbb
movsb
or
into
ret
scas
rcrl
xchg
or
ret
push
sbb
sub
scas
mov
sbb
or
inc
addr16
in
jle
push
es
int3
xor
inc
fiaddl
sub
sbb
fs
clc
mov
vpsllw
mov
out
xor
sub
fimuls
push
sbb
push
sbb
imul
stos
jne
cmp
imul
push
imul
bound
shlb
mov
addr16
jge
inc
jns
enter
dec
cmc
orb
ljmp
subl
push
scas
push
out
jecxz
out
sbb
xor
femms
lret
lods
dec
shll
es
dec
in
enter
inc
test
test
fisttps
jb
leave
loop
mov
or
in
cli
aam
mov
fmuls
xchg
xchg
andl
outsl
in
jae
shl
jae
sbb
imul
pushf
cmpsl
lock
fsts
lahf
mov
xchg
jmp
xor
cs
cs
mov
test
push
inc
pop
sarw
push
mov
lock
dec
push
sbb
add
mov
sub
adcb
in
icebp
fistl
jne
mov
sbb
cs
add
scas
mov
nop
and
mov
or
add
push
iret
lret
loopne
lods
pop
loopne
in
shlb
hlt
xchg
and
bound
push
mov
sub
jbe
in
jne
add
and
adc
mov
dec
sub
mov
mov
test
loopne
aaa
nop
clc
das
mov
jge
push
push
rep
hlt
cld
out
sarl
inc
mov
insl
fisubl
mov
aas
out
push
xchg
out
clc
fisubl
xor
in
jle
repnz
mov
das
pushf
icebp
stc
push
je
push
xor
xor
cmpsb
push
mov
fcoml
dec
xor
test
jbe
iret
mov
leave
stos
pop
and
ja
adc
stos
jecxz
jecxz
out
jbe
sti
mov
inc
jne
mov
ljmp
fisttpl
mov
mov
jb
mov
inc
js
fildl
sbb
jmp
xor
cmpsb
insl
xchg
jb
dec
in
movsb
popa
into
xchg
ja
sub
testl
inc
sub
sbb
dec
jo
js
test
or
xor
outsb
push
adc
xchg
sbb
inc
dec
sbb
stos
add
mov
lcall
cmp
or
dec
push
inc
and
arpl
enter
push
orb
cmp
adc
in
loopne
sbb
jecxz
or
mov
loopne
loop
push
xchg
in
filds
cltd
xchg
std
imul
sahf
inc
or
test
ret
inc
push
imul
sbb
je
cmc
mov
scas
aas
mov
scas
aaa
jae
jg
xor
mov
in
ret
outsl
sub
mov
push
and
mov
icebp
lock
add
les
jle
loopne
popa
rolb
fimull
cwtl
dec
add
pop
aas
cmp
rep
push
inc
pop
xor
fistps
sub
or
loope
pop
lods
jae
aas
inc
stos
negb
pop
sti
mov
jnp
cld
lock
stc
bound
xor
out
popf
test
test
or
sar
dec
xchg
cltd
adc
jmp
pop
mov
or
std
or
jl
out
or
orl
sub
xchg
inc
push
pop
and
mov
fidivrs
xor
adc
jmp
add
int3
cmp
pusha
in
push
xor
sub
mov
stc
insb
loop
mov
mov
adc
mov
adc
idivb
rcrb
inc
dec
push
mov
push
jl
cld
xchg
andl
scas
pop
xchg
add
mov
movsl
je
lods
in
mov
in
xlat
dec
push
pusha
pcmpeqb
pushf
mov
pop
pusha
movsl
loopne
jno
js
fiaddl
mov
xchg
mov
bound
fstp
lods
test
pop
sbb
pushl
xchg
mov
adc
jecxz
out
scas
popa
rcll
mov
shll
xor
or
iret
cmpsl
ja
mov
movsb
scas
mov
outsl
in
and
jp
nop
adc
js
dec
rcll
lret
push
sub
cmp
and
dec
mov
or
pop
ret
loop
mov
or
jecxz
dec
das
pop
addb
sub
lea
clc
test
rcl
add
lods
pop
fcmove
xchg
lret
xchg
ficoms
sub
jb
gs
xor
sbbb
cltd
jno
jmp
xchg
xchg
ret
sub
lods
aas
movsb
mov
cmp
dec
pop
js
aaa
jmp
push
outsl
ret
adc
lea
sub
add
and
jnp
cli
rorb
mov
fyl2x
dec
ret
add
xor
lcall
notl
cmp
sub
clc
push
clc
iret
sub
arpl
adc
and
in
subb
or
lods
push
xor
jle
jmp
cmovnp
jl
add
sbb
sbb
icebp
loope
add
sub
pop
hlt
ficomps
movl
hlt
lock
and
hlt
jb
test
out
cli
inc
and
add
pusha
xor
sub
pop
test
imul
mov
shl
lods
lds
inc
add
insl
mov
imul
mov
push
pop
gs
push
lds
test
sub
xor
bound
lahf
enter
push
push
xchg
dec
cld
data16
and
sbb
pushf
pop
fwait
mov
or
stos
ja
imul
mov
les
mov
and
mov
and
lret
leave
iret
sub
inc
popa
sarb
nop
xchg
stos
call
dec
adc
sbb
in
dec
mov
sbb
outsl
loop
push
push
jae
jne
mov
inc
ja
inc
ds
leave
adc
hlt
jg
std
sbb
cmp
aaa
movsl
data16
sahf
push
sbb
mov
pop
dec
das
cli
inc
adcl
xchg
cwtl
pop
mov
gs
pop
data16
call
leave
sub
iret
sbb
movsl
pop
jge
sub
inc
inc
std
mov
cltd
xchg
scas
or
jl
sar
int
ror
dec
mov
mov
push
xor
nop
mov
fadds
test
leave
cmpb
jne
clc
es
test
sbb
pop
ja
lret
jecxz
in
or
mov
sahf
and
adc
cli
sbb
or
out
cmpsb
mov
ja,pt
adc
xchg
shll
jbe
push
loop
jl
outsb
js
sbb
push
loope
xlat
shl
jle
xchg
sahf
inc
cmp
mov
cli
xchg
les
jne
popa
mov
lock
fimuls
inc
jns
and
in
mov
dec
pushf
jmp
sub
xorb
fnstcw
jbe
fidivrs
jno
mov
pop
adc
push
mov
stc
cmp
xor
daa
dec
pop
xor
xchg
cmp
out
and
xor
dec
leave
xor
jns
mov
js
test
scas
push
loope
fidivs
les
xchg
std
and
inc
add
ja
loopne
sub
imul
jns
mov
sub
fwait
stos
in
bound
fdivr
add
mov
push
rclb
sbb
mov
nop
sbb
add
add
add
movsl
sbb
pop
sub
dec
scas
push
scas
repz
pop
jne
pop
cwtl
push
jbe
rorl
sbb
xchg
mov
add
adc
xchg
push
int
out
inc
lods
lods
repz
insb
sub
and
test
mov
dec
mov
sbb
outsl
mov
repnz
mov
jo
ljmp
mov
int3
mov
or
add
pop
shrb
pushf
inc
cltd
sub
mov
fidivrs
xchg
into
fsubrs
sub
cld
aas
xorb
test
mov
cs
xchg
sahf
adcl
xor
negl
jae
lahf
jmp
repz
outsb
xor
shlb
dec
push
fs
dec
icebp
ja
addr16
and
jo
inc
scas
pop
xchg
sbbb
push
cmp
es
mov
je
stc
jne
ljmp
mov
rorl
dec
dec
setno
daa
jo
inc
push
jmp
popf
dec
lcall
aad
jmp
addb
ljmp
inc
add
inc
mov
cmp
int
sahf
jge
xor
dec
pop
xchg
inc
push
sub
dec
fwait
lock
lods
add
idivb
push
out
cmp
xor
shl
imul
stc
dec
divb
cli
rol
ret
out
lock
imul
pusha
outsb
lcall
pop
mov
test
les
cmp
fisubl
or
pushl
cmp
mov
dec
xchg
sbb
cmp
or
mov
scas
hlt
and
fsts
sahf
mov
jo
leave
aam
in
insb
push
jmp
and
ljmp
mov
add
into
xchg
fstps
jmp
lret
movsb
lods
ss
jecxz
inc
mov
ss
add
dec
inc
jl
fldl
testb
mov
sbb
aaa
sub
cmpsb
jne
mov
cmp
sti
pusha
inc
add
sub
or
inc
pop
outsb
popf
pop
rcr
xchg
pop
out
lret
clc
imul
and
insb
xorl
pop
insl
out
mov
mov
stos
dec
xchg
pop
sbb
sbb
or
sbb
xor
cmp
mov
ret
push
mov
dec
arpl
repnz
xchg
cmp
and
push
hlt
andb
adc
add
sti
scas
xchg
testb
push
arpl
loop
fmul
stc
and
jo
arpl
in
orl
in
jg
cmp
ss
pop
inc
dec
and
jp
mov
cmc
sub
pushf
mov
inc
push
imul
fidivl
push
mov
xor
inc
and
mov
in
out
ret
int
pop
pop
dec
xchg
jno
xlat
jl
sbb
mov
test
adc
dec
adc
cmp
out
nop
pop
leave
and
or
das
xor
leave
push
push
stc
out
mov
xchg
scas
in
iret
js
cwtl
and
cmc
stos
inc
sbbl
adcb
push
aad
cmpsb
xor
imul
xlat
jg
ljmp
pop
out
aaa
decl
push
push
xchg
jnp
fdivl
sub
cmp
mov
dec
frstor
or
jmp
sbb
or
sub
aam
cmp
mov
push
scas
mov
rorb
inc
into
int3
mov
test
and
into
dec
pushf
mov
push
fcomip
icebp
aaa
aaa
add
and
jno
sbbl
and
fisubrl
xchg
leave
mov
mov
test
jge
xlat
adc
in
xchg
sbb
jge
fs
ljmp
push
xor
nop
dec
mov
aas
pop
cmp
mov
mov
mov
pop
cmp
inc
lds
inc
add
xor
les
or
dec
dec
mov
xor
pop
inc
xchg
pusha
sbb
testl
fwait
push
insb
xor
xchg
jmp
xchg
mov
xor
and
leave
or
sub
test
xor
mov
shl
sub
xchg
fimull
pop
sub
cli
dec
fcoml
out
movsl
fwait
je
jne
test
lods
stos
pop
add
movsl
mov
inc
sub
out
adc
or
sub
stc
push
and
xor
push
ret
pop
push
jecxz
in
and
std
les
cs
push
stc
inc
cli
aaa
sbb
iret
add
das
leave
and
or
lret
mov
sahf
xchg
adc
es
leave
mov
pop
pop
in
neg
xchg
pop
lea
xchg
xchg
lock
insb
push
inc
mov
adc
imulb
cmc
push
sbb
test
jge
pop
fiaddl
mull
push
sub
cltd
repz
aas
clc
adc
push
mov
dec
mov
mov
jecxz
popa
loope
push
xor
mov
cli
xor
push
fisttpl
fdivp
lcall
ret
testb
imul
add
xor
and
xchg
mov
lret
ja
andb
xchg
sub
cmp
fisttps
ret
jo
fiadds
lret
ret
mov
or
popa
dec
push
jb
int
mov
test
jmp
call
push
out
mov
mov
jb
jge
fidivl
push
cmp
cs
imul
int3
xchg
sahf
mov
inc
movl
pushf
daa
jno
push
fdivl
sub
mov
out
insl
xchg
cmpsb
inc
push
test
and
test
sub
lea
iret
in
sbb
imul
notb
inc
mov
inc
jno
pusha
mov
dec
out
and
add
sub
cmp
xor
add
mov
push
or
jns
jecxz
in
aaa
mov
cmp
fmul
fwait
movl
lcall
xorps
or
add
mov
inc
push
fisttpl
movsl
fucomi
or
popf
int3
pop
xor
outsb
pushf
int
xchg
or
mov
xchg
insl
test
in
js
out
add
jnp
dec
dec
cwtl
push
xlat
in
ss
mov
divl
mov
jg
adc
cli
mov
test
fmulp
dec
out
pop
enter
in
xchg
xchg
mov
cs
int3
and
cli
pop
imul
mov
dec
xchg
cltd
rcll
mov
js
jno
mov
xor
jecxz
xchg
or
jbe
fstps
shlb
aam
int
and
and
scas
out
lret
aad
dec
cmp
test
ss
ret
in
js
lea
add
das
ja
add
aad
jmp
cltd
sbb
xor
js
mov
jb
inc
ret
xor
lret
sub
sub
pop
or
test
and
lret
stos
or
add
xlat
popa
scas
fstpt
inc
pop
pop
mov
fwait
outsb
add
cmp
ja
fcomps
fists
mov
out
jns
test
or
push
mov
popa
call
imul
aas
xchg
push
sahf
mov
sahf
or
xchg
mov
and
mov
ja
push
lcall
popf
inc
lret
cmpsb
movsb
lds
int
cmp
sahf
loopne
mov
push
dec
mov
or
stos
lret
daa
dec
loop
xchg
cmp
icebp
int3
lret
pusha
shlb
sbb
gs
notl
cmp
or
mov
adc
movsl
push
test
pop
push
and
jb
add
test
push
jle
mov
daa
and
test
xor
jp
sarb
xor
mov
enter
or
shrb
cmpsb
fidivrs
jecxz
imul
ja
je
dec
aaa
negb
aad
ret
cli
xchg
or
dec
jae
cmpsb
adc
inc
cmpsl
fucomi
imul
nop
fstp
ret
lret
aas
or
mov
ljmp
movsl
aad
jle
hlt
jmp
mov
push
repnz
push
cmp
insl
pop
jbe
mov
lods
push
insl
lcall
xchg
cld
in
cmp
out
mov
mov
aad
xchg
and
sbb
jp
mov
and
leave
push
xchg
mov
xchg
pop
call
inc
xorl
inc
arpl
loope
shl
pop
icebp
leave
pop
inc
aas
cmp
mov
dec
lcall
das
in
dec
fcmovnu
dec
sub
push
adc
dec
loop
jns
imul
mov
push
sub
dec
loop
mov
js
inc
jg,pt
and
mov
sysenter
ret
and
call
and
in
jne
add
inc
cs
and
add
xchg
loop
mov
jae
aam
mov
xor
movsl
out
xor
stos
xor
pop
mov
lods
xor
int3
cmovbe
xchg
xor
les
icebp
cmpsb
cmp
mulb
stc
jle
and
movsl
pop
or
push
scas
movsb
inc
sbb
push
inc
lret
stc
add
pusha
mov
mov
mov
pop
jl
ret
dec
adc
xor
sbb
pop
in
popf
push
imulb
sti
in
in
psllq
les
jnp
clc
pop
in
testb
aam
arpl
clc
jecxz
pop
les
lods
sbb
sbb
cli
movsl
inc
jge
mov
jmp
dec
ljmp
push
adc
in
cmpsl
je
add
pop
adc
add
bnd
jg
lock
hlt
pop
sti
xchg
push
lods
rcll
mov
jmp
or
sbb
xor
dec
and
cmpsb
fs
inc
sar
push
pop
shrb
mov
and
pushf
xchg
sub
push
das
and
sarb
mov
pop
fsubrs
push
cli
jg
pop
test
in
pmaxsw
cmp
xchg
adc
xchg
enter
mov
addb
xchg
fidivrl
sarb
pop
cmp
ljmp
orl
pop
mov
cmpsb
sbb
add
outsb
xor
in
fwait
int
xchg
cli
lock
mov
push
push
negl
inc
sbbl
cli
adcl
xlat
cwtl
jae
push
incl
pop
jb
popa
movsb
scas
mov
dec
imul
and
inc
dec
or
fwait
rorb
or
push
dec
popf
add
dec
inc
ficomps
arpl
jle
push
and
in
sub
out
das
out
mov
mov
adc
add
loop
mov
and
imulb
add
repz
sbb
out
insb
inc
adcl
pop
bound
jnp
lret
pop
stos
inc
sbb
push
incl
mov
mov
cs
xchg
sub
aad
testl
jmp
pop
aad
xchg
cmp
jne
loope
pop
jg
mov
push
cmpl
inc
or
jge
sti
out
enter
sarl
scas
ja,pt
add
dec
icebp
xchg
sbb
and
aad
add
mov
outsl
stc
cmp
rcrb
adc
mov
or
xchg
pop
or
loop
ja
enter
or
jmp
mov
jle
sbb
push
cmc
outsb
mov
test
add
or
adc
push
in
lds
scas
pushf
pushf
pushf
out
dec
popf
push
out
shrl
lahf
sti
fdiv
shll
jnp
stc
out
stos
push
cmp
adc
hlt
cmpsl
test
mov
lods
mov
inc
jecxz
test
or
inc
rcr
pushf
jmp
call
mov
test
push
das
push
push
stos
sub
lods
xlat
add
daa
shr
jb
mov
ds
adc
inc
jno
leave
ljmp
ss
mov
adc
xlat
mov
in
loopne
dec
jle
rcrb
adc
xlat
mov
sub
mov
mov
ss
jl
fadds
cld
xchg
out
cmpsb
fistpl
aad
mov
mov
ret
nop
in
mov
inc
mov
xchg
mov
out
cmpsl
dec
push
jno
xlat
xor
adc
pop
stc
jno
mov
xchg
fs
fildl
int3
loope
lret
push
and
mov
lods
testb
jecxz
pop
sbb
ret
jb
fstl
pushf
adc
pushf
in
pushf
jo
xchg
and
addb
lds
loop
movsb
pop
sub
inc
lahf
mov
lods
stc
jl
stos
push
lds
xchg
imul
add
ljmp
sub
popf
mov
dec
call
or
inc
pcmpgtd
mov
lea
scas
xchg
or
pop
repnz
out
gs
inc
orb
out
clc
mov
lcall
push
jo
cmp
inc
jns
fmuls
dec
rorb
adc
push
pop
shrb
sub
lret
subb
adc
lock
pop
cltd
inc
inc
sti
mov
mov
out
sbb
mov
rcll
out
pop
jecxz
mov
mov
jnp
add
imull
movsl
out
mov
neg
ret
adc
stos
daa
dec
hlt
push
cld
jae
dec
notl
gs
repz
div
push
mov
cld
adc
sub
aam
mov
or
sub
sub
inc
and
mov
mov
and
and
fsubrs
mov
pusha
je
cmp
mov
fsubs
out
xrelease
jns
pop
add
cmp
xorb
xor
xchg
orl
mov
push
mov
push
fnstsw
sysexit
and
xchg
imul
pop
cs
ud1
dec
and
bound
lret
iret
nop
dec
dec
insb
mov
xchg
cmpsb
mov
or
push
int
sub
pushf
adc
mov
ret
inc
push
push
inc
jmp
rcl
pushf
sbb
sbb
test
push
pusha
movsl
adc
mov
fs
and
cmpsl
jo
in
push
popa
push
mov
jge
xrelease
dec
dec
int
les
push
xor
ljmp
mov
cmpsl
mov
push
mov
lock
fwait
mov
loop
jb
stc
pop
mov
adc
jbe
pop
bswap
aas
dec
push
xchg
addr16
arpl
fwait
and
jmp
fstl
and
or
mov
adc
cld
mov
repnz
mov
les
jmp
in
mov
adcb
or
sub
fsubs
mov
jae
jo
dec
outsl
pop
mov
pop
notl
std
popf
call
or
cmpsb
push
scas
mov
xor
hlt
stos
xchg
test
gs
add
jbe
pop
das
subl
cli
mov
jbe
cld
xchg
push
sub
rclb
out
dec
and
insb
insb
xor
in
mov
sbb
mov
pop
subl
push
enter
pop
stos
cwtl
jno
jecxz
or
pop
mov
dec
push
mov
mov
mov
shl
push
fs
jp
fucomp
push
movsb
scas
aam
daa
out
stos
mov
int
xor
add
cmc
cltd
mov
lods
outsb
lahf
mov
or
subl
jp
flds
jg
daa
iret
mov
bound
pop
pushf
mov
add
inc
dec
stc
push
out
inc
sbb
push
sahf
push
mov
add
icebp
xchg
loopne
xchg
jp
cmp
or
lea
sub
icebp
out
insl
cmc
repnz
mov
mov
xlat
pusha
negb
fstl
fistpl
cmpsb
mov
cmp
add
bound
leave
xlat
sub
mov
or
inc
jns
xlat
test
dec
and
mov
mov
mov
dec
pop
xchg
popa
mov
pop
xor
sbb
lock
out
out
push
int3
cmp
dec
push
mov
mov
out
aas
leave
mov
dec
outsb
std
pop
stos
bts
pop
dec
scas
lret
lret
jecxz
mov
or
or
or
es
lret
icebp
ret
into
popa
fisubs
cmp
push
sbb
movsb
dec
xchg
sbb
push
daa
mov
inc
sub
xchg
or
sbb
push
outsb
scas
sbb
sti
rcll
and
mov
ljmp
lds
mov
mov
cmp
inc
sbb
mov
push
cltd
inc
pop
call
popf
cmp
ds
or
xor
aas
dec
mov
in
dec
sub
movsl
jle
call
mov
mov
sbb
adc
dec
mov
je
push
sub
mov
cmc
cltd
cwtl
and
and
or
add
mov
movb
iret
int3
mov
outsl
movsl
mov
hlt
pop
pop
inc
pop
inc
es
xor
roll
inc
pmuludq
rcrb
mov
mov
imul
pusha
inc
jns
inc
jns
mov
adc
lea
in
jp
sahf
test
mov
mov
iret
jns
xchg
sbb
xchg
imul
xchg
push
es
dec
int3
shlb
sub
ror
cmp
das
mov
imul
fiaddl
movsb
cmp
dec
ss
mov
cwtl
xor
and
adc
lahf
push
movsb
pop
sub
and
ljmp
cmp
xchg
sbb
pop
test
bound
mov
push
mov
mov
mov
push
mov
push
pop
insl
aaa
ja
mov
jl
mov
pop
cmp
and
orb
es
xchg
fists
and
es
adc
jg
jmp
out
sbb
sub
mov
mov
sub
into
or
xchg
and
dec
roll
sub
and
sbb
adc
cltd
jo
sti
pop
sub
push
js
lret
mov
movsl
xor
bound
add
jnp
test
adc
xacquire
bound
mov
mov
mov
sahf
xchg
xor
jle
roll
outsb
es
pop
fsubrl
pop
adc
adc
ret
mov
mov
mov
push
sbb
sti
mov
jo
push
std
cmpsb
negb
hlt
mov
sbb
cmp
das
jmp
lret
loop
in
mov
pop
icebp
lea
mov
push
jle
and
iret
fbld
jnp
xchg
into
and
icebp
inc
jb
dec
xchg
mov
add
stos
jge
ret
mov
hlt
dec
jecxz
repnz
fnstsw
ret
jp
insb
call
dec
sbb
inc
xlat
cmp
jb
push
rolb
hlt
inc
pusha
mov
sub
adc
mov
push
mov
movsb
mov
pop
and
pop
or
pop
cmc
push
sbb
lcall
xchg
dec
xor
cli
sbb
cli
fst
dec
cmpl
inc
ss
jp
mov
dec
xor
add
jl
sub
fsubs
int3
jp
sub
mov
pop
sbb
xchg
push
inc
jp
addr16
sbb
pop
xchg
outsl
pop
loopne
lret
and
lods
test
mov
ss
xor
stos
xchg
cmp
jle
dec
out
jecxz,pt
adc
mov
loop
mov
sarl
mov
push
jno
dec
and
imul
mov
movsb
call
out
pop
lret
stc
mov
aas
mov
movsb
cmp
test
pop
sub
or
es
jno
in
jno
jnp
sbb
mov
pop
test
sbb
jne
test
xchg
mov
lods
push
imul
int
adc
cmp
xchg
push
out
dec
xchg
and
xor
xchg
push
sbb
mov
stc
aam
aam
lcall
ret
in
enter
mov
stc
into
jns
jge
cmp
mov
rcr
push
cltd
mov
hlt
insb
icebp
xchg
mov
mov
inc
add
sub
fcmovnb
mov
jne
popf
sub
int3
lods
sbb
out
dec
aaa
xchg
pop
sarl
data16
xchg
gs
inc
inc
sti
test
nop
notl
or
hlt
pop
sbb
inc
pop
or
jmp
inc
mov
lret
push
les
call
aad
jnp
mov
int3
clc
scas
mov
out
mov
and
push
adc
pop
jecxz
ja
jg
add
mov
je
push
enter
mov
into
sub
jmp
cld
pusha
push
mov
xor
mov
mov
push
dec
stos
dec
icebp
sbb
cmp
faddl
cwtl
movsl
jns
subb
jbe
xchg
rolb
xchg
mov
jnp
stos
sub
or
imul
lahf
xor
or
mov
sub
pop
repz
jo
sbb
int3
mov
in
push
mov
mov
mov
mov
inc
in
repnz
hlt
ret
xor
mov
mov
outsb
push
push
dec
out
in
sti
sub
in
jo
out
xor
das
xor
ret
icebp
je
subl
in
shrl
xchg
in
aas
cmpl
cmpsb
mov
adc
mov
add
shlb
mov
or
cmp
scas
incb
hlt
adc
loope
je
sub
sub
ja
jge
adc
addl
pusha
fs
pop
fcoms
xor
shrl
xorb
loopne
jp
sarb
in
mov
xor
or
scas
cmp
push
xlat
outsb
lods
jp
mov
mov
or
pop
cmp
xor
ljmp
out
shrl
push
divl
xchg
fisubl
loopne
aam
sbb
int3
movsl
aaa
pop
jecxz
sbb
es
cmp
bound
shll
sbb
lods
sahf
je
or
xchg
mov
add
mov
enter
popw
cld
outsb
jnp
nop
shlb
ret
dec
xchg
testl
dec
mov
aam
mov
sahf
dec
outsl
addb
ss
fmuls
xchg
push
int3
add
aam
stos
sbb
inc
pop
mov
mov
inc
dec
jecxz
and
outsb
adc
cmp
movb
mov
push
xchg
add
xchg
adc
lds
mov
cwtl
jl
cmpsb
fldl
test
and
js
and
fwait
shrb
xchg
cld
out
jno
mov
push
xor
mov
jne
fistps
ficomps
scas
xor
stc
cmpsl
push
popf
adc
xchg
cmp
jmp
and
push
in
sbb
inc
in
sub
test
into
aam
orb
mov
push
popw
sbb
sbb
adc
or
shrb
sbb
push
mov
adc
mov
adc
out
sbbb
fdiv
roll
mov
push
adc
pop
insl
pop
fnsave
dec
push
sti
sub
dec
dec
cmp
daa
cmp
lcall
mov
mov
stc
je
mov
cltd
loope
cli
outsl
or
cmp
dec
xchg
mov
negb
pop
xchg
int3
fs
data16
in
jecxz
jmp
mov
in
ret
jne
inc
mov
add
rorb
stc
nop
rclb
cmp
adc
clc
mov
into
add
inc
aad
pop
push
jne
dec
das
repz
mov
mov
jae
sbb
push
in
cltd
adc
cmp
mov
fcoms
jg
je
inc
out
inc
das
stos
mov
cmp
push
stos
push
out
fnstenv
imul
mov
jmp
pop
pop
cmp
ror
mov
add
jl
xor
sub
cmp
cmp
mov
js
jl
icebp
imul
nop
clc
xchg
enter
lahf
movsb
cmp
cmp
xlat
cmp
xor
jmp
lea
add
lahf
outsl
test
ss
sti
mov
dec
cmp
cmp
mov
push
or
dec
lds
outsb
mov
fwait
nop
nop
mov
or
mov
inc
mov
adc
fistl
imul
xchg
shll
aas
pusha
pop
in
lds
adc
jle
orb
popf
add
jae
cmpsb
stos
mov
test
sub
mov
inc
mov
imul
push
pavgb
xchg
stc
inc
sub
jmp
fadd
movsl
or
int
in
xchg
lret
nop
setge
pop
pop
jno
loop
aaa
cs
fldl
sub
xchg
lret
lea
pop
mov
sub
je
push
jecxz
jbe
daa
dec
dec
cmpl
add
sbb
outsb
xchg
lea
mov
mov
ss
into
or
arpl
add
pop
fs
add
inc
jg
inc
in
stos
out
cs
fs
cwtl
pop
loop
sbb
cmpsb
cmpl
jp
add
push
repnz
mov
mov
jle
jp
mov
fnstsw
fidivrs
int3
jbe
pushf
stc
sub
dec
add
or
xor
mov
push
cli
xchg
sbb
xor
xor
lret
sub
cmpsl
adc
xor
or
test
mov
xchg
enter
ljmp
mov
pop
jl
adc
or
push
rcr
ret
idivb
jo
aad
adc
xchg
cmp
imul
sar
push
inc
dec
mov
cmpsl
mov
inc
pop
add
or
xchg
mov
pop
add
ljmp
cmp
out
sbb
sub
fldcw
or
pop
int
ret
roll
out
int
xchg
aaa
pop
js
cmp
dec
int3
test
cmp
dec
fwait
ret
add
adc
dec
inc
gs
fs
mov
push
sub
or
sub
insl
repz
sbbl
push
iret
test
in
mov
mov
mov
adc
xchg
aam
pop
add
push
rorl
bound
adcl
imul
xchg
cld
xor
cmp
push
dec
test
sub
xor
rcll
mov
popf
xchg
jecxz
jne
push
lret
inc
mov
pop
pop
mov
or
adc
fdivr
mov
cmp
mov
js
mov
lahf
push
outsb
jns
sub
sbb
push
loop
loopne
daa
cmpsl
clc
pop
cltd
hlt
dec
sbb
ja
hlt
shr
mov
aas
add
jnp
je
clc
jge
movsl
aas
data16
xorl
arpl
aas
and
push
mov
add
mov
or
pop
in
popf
mov
std
mov
mov
pop
cmp
call
push
mul
sbb
jns
lds
and
or
xorb
cmpsb
testl
rolb
dec
dec
sub
imul
dec
add
and
sub
cltd
pop
pop
pusha
repz
addr16
adc
stos
pusha
enter
sbb
mov
dec
jns
dec
sbb
push
loope
and
mov
sub
xchg
jmp
dec
int
mov
xchg
out
and
add
shlb
notb
push
fstl
in
pop
inc
inc
daa
ficomps
seto
ss
gs
push
loop
push
add
mov
fmul
sub
adc
inc
jg
mov
fadd
xor
scas
fcmovnu
fisttpl
push
push
mov
test
stos
pushf
inc
pop
jl
xchg
or
inc
xor
lahf
add
data16
pop
mov
lea
mov
int
in
mov
mov
out
lret
stos
fs
into
inc
mov
sub
ds
fmulp
jno
add
inc
xor
and
push
stos
mov
lds
jno
shlb
sub
mov
xchg
adc
arpl
xor
xor
lods
sub
lcall
imul
dec
imulb
xchg
jg
fisubs
mov
push
push
outsl
cmpsl
pop
or
add
adcl
imul
ret
stos
or
test
mov
hlt
xor
out
gs
xchg
je
cmpsl
sub
xor
or
je
fs
insl
test
cmpsl
push
lods
mov
sti
in
jmp
mov
negb
cmpsl
sub
les
inc
call
add
pop
xor
pop
lret
xor
scas
ljmp
out
insl
inc
aaa
pop
cli
ja
xchg
xchg
adc
lcall
and
push
and
je
sub
dec
xchg
sarb
xor
mov
jecxz
cmp
push
adc
mov
and
xor
xchg
daa
iret
mov
cmp
outsb
push
or
mull
lret
in
jecxz
sub
sbb
xchg
push
sub
fstpl
cltd
or
jbe
fwait
test
add
cmp
mov
rorl
dec
pusha
and
sub
cmp
das
cmp
adc
lods
fwait
or
dec
adc
fisttpll
dec
fcoms
out
out
aas
lods
push
xchg
repnz
arpl
adc
das
cmp
cltd
mov
loopne,pn
inc
push
into
loope
push
mov
push
pusha
cli
cmp
nop
mov
outsb
jmp
out
sub
mov
pop
test
aaa
mov
into
dec
xlat
dec
mov
outsb
rcl
mov
out
xchg
sbbl
cmpsb
add
cld
pop
repz
push
outsb
int3
push
outsl
outsb
dec
aam
andb
or
sarl
jno
test
shll
dec
xlat
mov
scas
push
mov
pop
neg
outsb
pop
mov
and
dec
adc
int
fdivrs
cmp
sbb
or
sti
scas
dec
mov
mov
jno
push
cmp
js
mov
loop
push
iret
mov
dec
push
sbb
fs
cmp
fwait
inc
pop
pop
int3
mov
bound
cmp
cltd
push
mov
sbb
pusha
and
cmp
pop
movsb
sahf
ret
adc
dec
nop
jmp
adc
repnz
fldl
mov
and
test
jb
and
sbb
addr16
popa
jbe
pop
dec
cmpb
andl
es
insb
xor
dec
push
divl
push
xor
mov
dec
cmpsb
add
push
dec
add
shlb
ljmp
cmp
popa
xchg
movsb
rorb
and
sahf
dec
repz
cmp
fucom
and
sbb
imul
pushf
adc
icebp
movsl
std
insl
icebp
insb
mov
neg
jecxz
cld
cltd
xlat
or
xlat
cmc
adc
xchg
pop
mov
imul
adcb
cmpsb
add
fisttpll
repnz
cltd
xorps
lea
aaa
cli
loope
stos
cli
mov
ds
pop
vpandn
insb
xchg
add
xor
mov
adc
push
stos
in
lret
enter
ja
fwait
imul
movsb
xor
jne
aas
pusha
push
sbb
mov
movsb
fdivs
aad
adc
stos
xor
pop
lds
repnz
clc
ret
pushf
repz
mov
jo
adc
sbb
mov
mov
pop
xchg
repnz
or
inc
mov
xorb
iret
inc
sarb
ds
loope
inc
scas
or
dec
push
jnp
shl
dec
add
jp
pop
aad
xor
cltd
or
sub
jge
repz
inc
xor
jnp
pop
mov
jle
xchg
inc
xchg
cmc
sbb
xchg
push
sti
dec
and
xor
push
mov
cmc
lret
ja,pt
adc
insb
jle
leave
inc
out
cld
adc
mov
mov
jecxz
gs
or
push
add
jo
and
adc
aaa
sahf
mov
pop
ljmp
daa
inc
inc
sbb
jle
hlt
mov
add
cmp
in
inc
ficompl
ss
rcl
iret
frstor
mov
sub
cwtl
pop
add
sub
loope
inc
into
mov
fsubrl
movsl
mov
dec
aaa
xor
sarl
rcll
push
shrb
scas
xor
lea
xchg
sti
int3
or
insb
mov
mov
push
jo
jmp
fwait
mov
jmp
dec
test
out
xchg
sbb
cs
push
icebp
sbbl
jo
out
cmp
jp
call
xchg
and
subb
loope
into
dec
xchg
adc
scas
loope
in
int3
jnp
and
xorl
fisubl
cli
testb
sbb
adc
arpl
xor
sub
loope
and
cmp
lods
adc
stc
out
or
and
xor
out
lea
jp
std
inc
out
cmp
mov
sub
cmp
fmull
fsubrs
mov
mov
mov
add
adc
jae
mull
or
sti
fists
sbb
in
movsl
lret
jecxz
lods
push
jne
leave
sbb
enter
daa
dec
push
rolb
popa
bound
into
sub
notb
loope
mov
cmc
mov
fwait
fwait
push
aas
lock
lods
xor
int
jp
inc
jbe
push
mov
xor
jns
sbb
clc
arpl
fstl
add
and
ljmp
hlt
inc
lods
and
inc
jnp
test
and
mov
mov
aam
inc
cmp
pop
movl
leave
mov
push
ja
mov
cmpsb
inc
cmp
imulb
and
sub
fwait
inc
icebp
repnz
cmp
shll
mov
fistpl
jle
adc
icebp
sub
es
mov
dec
adc
sbb
lret
sub
adcl
ja
jmp
or
es
push
shlb
sbb
sub
test
jbe
lcall
pop
xor
sub
mov
inc
mov
mov
test
out
sub
xlat
test
nop
outsl
mov
filds
jge
sbb
adc
mov
sbb
jne
sub
stos
scas
imul
pop
test
push
jbe
out
adc
jmp
or
popa
jnp
pop
push
pop
insl
xor
push
mov
getsec
xor
or
mov
enter
cmp
jbe
adc
inc
leave
cli
aam
jae
mov
dec
sub
push
mul
inc
test
sbb
das
push
inc
loopne
and
cmpb
mov
into
sub
mov
jb
icebp
cmpsb
sbb
jl,pn
push
or
mov
dec
mov
cltd
insb
repz
fstps
sub
std
in
aas
push
push
pop
pushf
pop
dec
lret
sub
fstl
and
add
push
ja
jne
pop
add
and
xchg
sub
cltd
pop
aaa
imul
push
or
lea
ret
dec
jnp
and
call
divl
and
pushl
mov
inc
cld
jne
int
mov
stos
aas
js
sti
jle
js
jmp
mov
xor
fwait
push
pop
inc
xchg
out
ficoms
aas
ss
xor
arpl
sbb
jl
pop
cmp
push
push
sarl
dec
les
xchg
jno
stc
mov
add
xchg
pusha
je
push
adc
xchg
lahf
rcl
sub
mov
xchg
cmp
mov
push
sub
in
lret
xor
push
sbbb
int3
cmc
hlt
loop
sarb
movsl
cmp
sbb
test
stc
push
stc
xor
mov
lods
movl
jb
lahf
dec
out
jmp
pop
ljmp
or
mov
sbbl
mov
sub
or
sti
hlt
pop
test
lods
test
xchg
rol
mov
adc
jp
jecxz
inc
aad
sarl
mov
into
xchg
dec
mov
push
mul
sbb
add
ret
sub
stos
cmp
sub
mov
fmull
push
cmc
aaa
lds
call
inc
pop
jb
cs
stc
mov
mov
in
or
xor
rcrl
gs
fstpt
sbb
adc
mov
xchg
fistpl
or
scas
mov
sbb
jae
gs
mov
xor
addr16
push
test
xchg
inc
cmc
jno
mov
decb
xor
icebp
addr16
arpl
into
int
adc
pop
dec
xor
sbb
xor
mov
and
fnsave
sahf
leave
push
mov
lea
jle
sub
pop
jle
out
push
cmp
xchg
subl
pop
andl
push
sarl
loop
sub
jmp
mov
push
sub
sub
lret
mov
outsb
rcr
mov
mov
dec
add
sub
scas
loop
movsl
or
cmp
pop
pop
and
dec
call
push
inc
jno
push
and
or
dec
cmp
add
imul
xchg
jns
sbb
insb
jg
test
xchg
adc
sub
jle
out
shrb
jnp
sti
jbe
sar
lock
inc
mov
iret
in
lcall
dec
mov
mov
ljmp
fidivrs
out
add
adc
nop
jle
mov
pop
pop
mov
sub
ret
inc
fsubl
and
adc
icebp
sub
mov
xor
orb
les
mov
or
pop
cltd
xchg
fcmovnbe
push
shrb
popa
mov
add
outsl
dec
mov
scas
inc
cli
jo
fdivrp
push
decb
inc
movb
out
inc
in
fistpl
pop
lcall
rorl
jmp
lock
movsl
xor
stc
ret
pop
cltd
jae
jp
es
les
scas
mov
jge
mov
inc
inc
pusha
push
test
mov
sub
adc
cmp
sub
outsl
idivl
adc
out
add
jo
aad
sbb
dec
mov
sub
mov
fisubs
xchg
repz
dec
push
movsl
fs
push
out
jle
imul
shr
dec
jl
inc
sub
push
daa
insb
sbb
adc
jbe
test
cltd
enter
out
test
mov
loope
fdivs
mov
pop
inc
in
or
mov
inc
push
jmp
int3
adc
push
xor
inc
jb
adc
shrb
mov
mov
sub
inc
dec
fdivs
lds
pushl
xchg
cli
push
or
add
rorb
roll
add
and
ss
jp
in
push
lret
sbb
in
sbb
ja
in
pop
add
add
sub
shl
aaa
js
or
push
mov
lods
mov
repnz
sbb
jns
fisttps
pop
dec
addl
leave
inc
repz
add
jge
and
push
xlat
aam
ss
ds
popf
pop
cmpsl
in
cwtl
sbb
pop
sub
add
iret
pop
inc
fldl
jp
in
xor
rcl
insb
inc
push
mov
xchg
xor
jl
mov
and
outsb
movsl
and
sub
push
inc
in
dec
rcl
out
add
shrl
sbb
sub
sbb
ljmp
rcrl
leave
dec
inc
test
loopne
gs
pop
mov
add
sbb
std
int
or
setge
mov
fstps
jno
shll
sahf
in
xor
inc
in
and
pushf
incb
fnstsw
into
and
inc
ja
jp
jo
sub
int
inc
gs
pop
dec
subb
mov
push
sub
aam
xchg
mov
and
pop
addb
aas
mov
bndldx
lock
nop
ffreep
push
enter
andl
jle
mov
dec
shrb
push
das
int
sub
jnp
aad
andb
mov
dec
push
xchg
shrl
mov
sbb
push
nop
mov
lret
cmp
popf
test
in
and
ja
push
xchg
push
cmp
pop
sub
mov
add
fwait
pop
leave
mov
jae
push
pop
pop
ljmp
mov
nopl
bound
xchg
add
and
mov
mov
leave
dec
test
mov
add
fistps
test
adc
arpl
sbb
arpl
sbb
mov
pop
pop
dec
loopne
js
pop
fwait
inc
fdiv
in
movsb
test
jp
stos
repz
sbbl
cwtl
mov
dec
xchg
sbb
mov
add
jmp
jno
sub
sarb
mov
inc
sbb
call
lea
test
cmp
jb
sti
lods
sbb
mov
subl
out
sbb
clc
lods
imul
cmp
jb
pushf
popf
push
sub
push
xor
lds
xchg
cmc
or
dec
mov
gs
xor
bound
xor
add
mov
mov
mov
decl
testl
in
dec
cmc
or
cli
dec
insb
cltd
adc
push
xchg
insl
mov
adc
imul
movsb
mov
lret
jne
push
jl
cld
das
popa
in
adc
cmp
lds
mov
xchg
adc
insb
cmc
mov
fstps
xlat
pop
iret
cmpsb
stos
cmp
pop
adc
push
cmc
pop
pop
mov
sub
adcl
lret
cwtl
jmp
leave
push
sbb
lock
ret
in
mov
mov
in
aas
sub
xchg
sbb
popa
xchg
pop
out
pop
cmp
push
adc
fcomps
mov
sahf
scas
aas
je
cmp
adc
pop
scas
push
push
lock
dec
mov
out
or
pop
inc
pop
mov
loope
pushw
inc
je
loopne
and
cmp
test
dec
adc
jbe
sub
aam
cli
lods
sub
inc
stc
add
pushw
insl
push
shr
fwait
mov
pop
ret
pop
mov
mov
sahf
ficoml
jge
shlb
test
sub
adc
cli
pop
arpl
xchg
and
mov
xor
add
mov
and
inc
movsb
mov
inc
dec
jnp
xchg
lcall
pop
lods
test
mov
mov
fildll
push
pop
cmpsl
call
push
lds
push
jbe
inc
adc
cmp
scas
cmpl
dec
push
cmp
xor
mov
ftst
mov
mov
psubusb
outsb
insb
movsb
xchg
adc
mov
repz
pop
iret
ja
arpl
mov
and
adc
sub
sbb
xlat
into
xchg
clc
mov
add
std
ljmp
pop
mov
sub
jb,pn
cli
mov
cmp
xchg
inc
xor
stos
mov
pop
and
pop
jno
lahf
inc
rcrl
mov
fstl
mov
ror
xor
stc
stc
lock
std
mov
inc
mov
loopne
jmp
int
push
je
es
es
aam
test
mov
pop
dec
nop
addr16
add
add
cmp
fiadds
pop
js
xor
out
inc
adc
mov
mov
aaa
cmp
fidivrl
mov
sbb
or
pop
add
movsb
xchg
xchg
jp
addr16
or
xorl
icebp
stc
cmc
out
sbb
or
cmpsb
addb
jmp
or
sub
fists
sbb
clc
mov
ljmp
adc
cmpsb
mov
pop
cld
jne
pop
aaa
cltd
daa
pop
les
jge
lret
and
popf
lds
jmp
mov
or
pop
aaa
ss
test
and
dec
mov
jnp
outsl
in
std
insb
cmp
sbb
mov
add
or
daa
es
outsl
stc
ss
pusha
cmp
xor
scas
xchg
and
push
push
wrmsr
add
lret
adc
add
xlat
movsl
sarl
mov
lahf
mov
jo
subl
mov
xchg
ds
adc
cs
addr16
arpl
popa
xchg
pop
fwait
sti
xchg
push
mov
push
pusha
xchg
xlat
fdivs
aas
push
movl
shll
jecxz
cmp
enter
popf
orl
test
pop
jmp
jo
mov
xlat
cmp
aam
lret
jnp
fcmovnu
std
test
xor
add
out
xor
lea
adc
pop
pop
adc
outsb
mov
cltd
fs
pop
push
sub
or
loop
pslld
pop
mov
fcoml
aas
pop
sub
mov
mov
dec
popf
stos
cmpsb
dec
sti
or
scas
cmpsl
jl
lods
insl
rcr
lcall
sub
mov
adc
insl
shll
fdivp
pop
iret
xchg
cmp
cmp
and
ss
lcall
mov
mov
movsb
or
mov
cld
call
push
cmp
jl
test
add
cmp
pop
sub
push
sarb
test
test
ret
outsl
push
jle
jecxz
std
repz
mov
test
movsl
mov
ret
aas
add
mov
dec
xor
and
and
es
arpl
or
push
xor
sub
fdivrp
sub
in
xor
pushw
mov
jge,pt
repnz
fidivrl
clc
nop
iret
sub
add
mov
fs
in
les
and
sbb
in
add
hlt
sub
xchg
sub
lock
mov
out
test
mov
mov
icebp
sbb
push
mov
cltd
ljmp
int
push
jecxz
pop
or
mov
cmp
cmp
ss
lcall
jl
xor
mov
jnp
lahf
push
jl
mov
imulb
mov
xor
add
aas
dec
hlt
inc
int3
lds
pop
inc
test
int
fmull
scas
jns
scas
ret
xor
sub
jbe
scas
xchg
ja
rclb
sbb
or
ja
stos
pop
sub
xchg
cltd
fimuls
dec
leave
xchg
mov
nop
aam
xor
mov
iret
std
testb
inc
push
daa
cmp
pop
xor
sub
ljmp
mov
push
adc
loop
lock
cwtl
out
mov
stc
hlt
lods
lds
inc
mov
ja
mov
mov
movb
add
jmp
mull
or
add
jne
cmp
adc
ja
add
inc
or
stos
jnp
enter
orl
cli
call
cmpb
mov
sub
push
jne
or
pusha
pop
sbb
pusha
rclb
sub
or
std
test
sti
xchg
fisttpl
mov
lods
or
fwait
mov
cli
repnz
aaa
test
ficompl
pop
arpl
fs
sbb
xor
cwtl
pushf
sar
mov
adc
adc
ss
sub
sbb
rorb
mov
sti
add
inc
lea
pusha
mov
pusha
inc
pop
dec
das
push
sar
sahf
ss
sub
sub
push
push
sbb
stos
bound
push
fisubrl
aaa
int
das
xor
adc
test
push
fcomps
mov
mov
inc
leave
out
mov
bound
cld
xchg
les
jg
test
pop
sbb
xchg
ja
mov
mov
mov
adc
aas
xor
test
idivl
test
mul
mov
push
movsl
jmp
hlt
xor
shlb
xchg
lret
xchg
inc
adc
lods
xchg
or
adc
xchg
pop
rolb
or
lret
pushf
aas
aas
and
jecxz
shlb
sbb
cld
stos
mov
lock
sub
dec
xor
arpl
add
inc
sbb
in
ja
push
in
shll
cmpsl
stos
sub
push
inc
push
idivl
pushf
sbb
aas
or
cmc
sbb
and
add
xchg
mov
mov
mov
ja
ljmp
shlb
mov
dec
stos
adc
fldcw
in
pop
jl
adc
in
call
clc
fwait
jg
jo
repnz
mov
jmp
mov
mov
push
cmp
bound
test
les
imul
js
scas
or
lods
jle
xor
and
mov
or
int
push
into
fisubrs
add
adc
dec
cld
ja
sbbl
sahf
jge
arpl
sbb
in
stos
xor
push
inc
das
sub
dec
sbb
into
rclb
mov
fstl
xor
ljmp
fildl
xchg
popa
xor
int
dec
xchg
push
cmp
dec
ret
dec
sub
sbb
dec
out
dec
pop
aam
inc
push
jne
mov
inc
xlat
or
mov
pop
lahf
push
or
cmp
ret
lret
sbb
bound
xchg
fisttpll
mov
add
or
sub
lea
arpl
mov
dec
xor
aam
lock
sub
adc
es
mov
ret
add
pushf
aam
cmp
in
sbb
cmp
or
imul
lods
sbb
xchg
sti
push
xor
out
cmpl
in
mov
push
idivb
sbb
lret
mov
cmp
outsl
pop
stos
xchg
mov
push
stc
inc
pop
mov
in
mov
data16
leave
data16
clc
movsl
dec
adc
mov
icebp
jne
sub
stos
popf
jae
inc
loopne
ja
imul
mov
popa
jae
imul
bound
fsubrp
inc
and
lock
in
mov
mov
rorl
pop
xorb
xor
jge
xchg
test
int3
jne
imul
pop
add
aas
pop
popf
pop
sbb
cmc
pop
mov
sbb
cmp
xor
mov
in
sub
int3
es
sbb
pop
mov
les
push
mov
xor
dec
nop
ljmp
das
dec
aas
pushl
inc
popa
xor
loopne
jp
mov
sbb
push
jmp
lcall
push
cmpsb
scas
bound
xchg
and
mov
cwtl
repnz
rcrb
dec
sub
dec
lret
cmp
jns
or
cli
sti
or
add
nop
sub
mov
mov
imul
jae
xor
cmp
cmp
push
push
fdivl
mov
xchg
ret
popf
pop
jecxz
pop
loope
cmp
out
jb
xlat
jae
and
xor
test
push
fiaddl
adc
sbb
lock
add
mov
lcall
mov
dec
ficoms
xor
pop
push
ret
bound
aas
xchg
jbe
sbb
inc
jne
mov
and
push
push
mov
rcrb
mov
pop
push
iret
shl
cmpsb
imul
aad
sbb
fiaddl
and
scas
mov
push
mov
pop
add
iret
fnstenv
and
push
pop
imul
inc
mov
cltd
xchg
cltd
and
xchg
push
test
shlb
imul
jne
sub
xor
pop
add
sbb
add
inc
fstpl
xor
jb
mov
xchg
and
sti
pop
insl
pop
out
dec
sbb
ljmp
lret
in
mov
es
sbb
dec
lahf
mov
mov
xor
pop
dec
pop
inc
sbb
pushf
cs
outsl
push
push
fidivs
xor
pop
jno
pop
mov
pop
jecxz
mov
mov
out
jno
xchg
gs
shrb
mov
dec
dec
stos
add
pop
jle
cli
mov
aas
repz
pop
push
and
and
and
jbe
jecxz
and
mov
in
in
fiadds
test
fsubrl
add
mov
mov
cmp
mov
mov
sbb
mov
arpl
sahf
out
and
iret
push
ss
sbb
cmp
cmp
mov
ret
pop
inc
inc
mov
aas
mov
xor
std
adc
add
sbb
gs
cwtl
repnz
mov
xchg
jecxz
dec
jg
inc
popl
pop
sbb
pusha
jge
xor
in
out
cmp
lds
mov
cltd
pop
pop
mov
test
icebp
push
push
push
dec
jmp
jmp
lods
and
inc
xchg
fdivrl
mov
cmp
iret
scas
mov
cmp
dec
dec
out
scas
mov
dec
shlb
mov
push
js
cwtl
jle
les
mov
pop
sbb
das
in
and
jb,pt
adc
gs
sub
jne
loope
stos
movsb
aam
mov
mov
popa
adc
mov
subb
jo
js
push
std
sub
cmp
or
outsb
icebp
adc
shrl
repnz
test
mov
push
pusha
push
jb
leave
xchg
sub
jge
arpl
mulb
repnz
jp
pop
sub
xor
imul
mov
popa
and
or
fisubrs
stc
sub
xor
xchg
pop
mov
cmc
not
jne
cmpsl
push
inc
ja
dec
dec
in
pop
cmp
push
into
jl
inc
push
xchg
cwtl
js
mov
sub
sbb
sbb
push
fildll
fcoml
imul
in
inc
mov
stos
clc
sub
shll
jge
movsb
pushl
or
in
inc
add
lock
push
lea
scas
fmull
xor
adc
inc
xor
cmp
loop
mov
inc
out
cld
jmp
test
shlb
mov
leave
jbe
and
mov
inc
and
pop
jmp
pop
jnp
shll
pop
adc
rclb
rcr
inc
scas
sti
arpl
shll
mov
sbbl
orl
cmc
sub
cmp
lret
iret
cmp
jmp
jge
pop
enter
fstpt
add
push
cmp
pop
lods
cmp
adc
fnsave
nop
mov
dec
shrl
and
cwtl
shld
sub
and
out
arpl
aam
xorb
sub
sti
in
pop
in
and
push
mov
mov
pusha
mov
aam
mov
ljmp
mov
xor
sbbl
push
dec
push
lods
les
mov
mov
dec
mov
push
pop
pop
mov
test
aam
test
aas
shr
dec
fistpll
jno
mov
dec
dec
mov
sub
fidivs
jb
adc
int
lock
inc
cmp
stc
rorl
lahf
sub
adc
or
mov
fisttpll
mov
mov
ja
xchg
push
sub
mov
mov
fldenv
cltd
push
icebp
xor
push
cmp
test
push
rorb
push
rcl
xlat
in
leave
test
out
add
jle
ret
ljmp
jae
les
daa
push
pop
push
and
pop
pop
roll
push
mov
faddp
push
and
jle
sub
fstpt
js
dec
xor
fldt
pushf
add
xor
pop
addl
sub
mov
dec
add
sbb
and
pusha
add
pop
lcall
add
call
andl
mov
enter
or
test
jmp
pushf
rolb
sub
push
ja
movsl
sbb
pop
pop
pop
nop
nop
into
or
inc
xor
loope
stos
cld
mov
int3
mov
lret
ds
mov
xor
out
mov
rol
adc
loopne
movsb
popa
sbbl
mov
mov
mov
mov
pop
dec
xchg
loop
aas
pop
scas
jecxz
and
mov
imul
add
popf
xor
in
repnz
push
pop
mov
les
out
pop
sbb
xchg
push
sub
inc
rcl
filds
jge
sbb
movsb
xor
pop
cmp
sbb
cmp
push
and
cmpb
inc
fcompl
jno
bound
sbb
adc
ss
mov
push
inc
adc
ljmp
insl
or
mov
lret
enter
es
add
jns
pop
mov
sarl
push
in
xchg
fisttpll
fiaddl
mov
daa
aam
or
call
cmp
dec
nop
outsl
dec
mov
or
or
jns
addl
xchg
inc
mov
fimull
dec
push
inc
dec
mul
push
pop
inc
sbb
lea
gs
addb
mov
filds
xor
lahf
aaa
int
or
shrb
and
jge
push
gs
or
fsub
pop
xor
mov
aaa
xchg
sbb
jb
pushf
test
sbbb
pop
das
les
insl
pop
icebp
leave
add
jmp
push
sub
in
mov
cmp
sub
jle
push
mov
xor
in
ljmp
jnp
or
leave
sti
push
sub
xchg
test
lock
jns
rorl
dec
imul
push
sbb
pushf
sbb
mov
fcompl
fs
adc
pop
out
rclb
pop
mov
push
sbb
xlat
and
pop
xor
sbb
pop
cmp
scas
sbb
sti
je
xchg
in
and
push
lods
or
lcall
cltd
andl
inc
bndldx
add
sbb
fstps
sti
icebp
inc
repnz
outsb
popa
push
lret
and
pop
lcall
push
lods
ds
and
inc
in
pop
push
fnstsw
lea
dec
mov
xchg
dec
add
adc
mov
pushf
dec
sbb
jo
fcomp
cmp
or
xor
mov
xor
aaa
cmp
push
mov
lret
rcrl
add
mov
jecxz
std
sub
xor
mov
mov
jns
mov
fsubs
aaa
push
mov
sub
fisttps
popf
dec
sbb
fimull
sub
jecxz,pt
jb
sbb
or
pop
mov
push
sub
mov
mov
mov
daa
icebp
cmc
cmp
fiadds
xchg
mov
mov
sbb
mov
dec
add
in
enter
sub
enter
icebp
xchg
divps
inc
nop
fwait
test
adc
sbb
mov
stc
mov
dec
fstps
or
sbb
mov
gs
mov
fidivs
jge
xor
jle
pop
jne
std
xchg
dec
fimull
pusha
insl
int3
pop
out
add
into
test
cld
sbb
sub
das
mov
aam
gs
push
xorl
push
fnstcw
adc
ljmp
pushfw
xor
cmpsl
inc
adc
cmc
adc
dec
jle
stc
xor
fs
push
divb
or
inc
test
push
sub
rolb
adc
jmp
rorb
adc
jae
rol
in
pop
mov
push
sub
mov
ljmp
cwtl
int
push
stc
jg
push
repnz
les
ljmp
movsb
sbb
cli
sbb
mov
mov
hlt
pop
sub
push
lret
iret
pusha
jno
mov
dec
push
jbe
jbe
cltd
pop
cltd
loopne
sub
add
cli
loopne
push
dec
jle
sub
dec
mov
add
xchg
push
cwtl
dec
cmp
sub
dec
xchg
cltd
cmp
dec
lock
cli
sub
or
sti
iret
inc
call
idivl
dec
cltd
addr16
aaa
and
push
sub
jecxz
testl
mov
gs
jmp
sbb
push
jmp
dec
ss
xor
loope
push
jg
int
andl
dec
fwait
bsr
les
mov
or
mov
pop
fstpl
add
scas
adc
xchg
fmul
push
ret
mov
imul
mov
mov
ds
dec
sarl
xor
mov
jns
xchg
jg
push
jnp
out
and
loop
and
out
sub
push
pop
fs
jb
mov
sbb
test
gs
fildll
test
mov
cmpl
imul
iret
jle
pusha
push
shlb
or
jmp
cli
push
mov
lcall
popf
pop
fsubl
or
jae
or
outsl
je
dec
xchg
test
je
jge
inc
xchg
lds
push
jg
mov
orl
adc
jmp
sub
xchg
lods
das
inc
arpl
mov
std
sub
outsl
mov
test
mov
jle
jecxz
xor
adcb
jecxz
popa
popa
inc
mov
jge
xchg
cld
xchg
mov
jp
je
adc
xchg
cmp
jbe
lcall
push
inc
lahf
push
aas
dec
push
pop
fnstenv
inc
test
jge
and
cwtl
or
pusha
test
push
in
in
pop
jno
imul
fcoms
push
shlb
mov
add
and
stos
cld
or
sub
mov
test
je
mov
sub
xchg
sub
push
ret
ror
stos
mov
dec
xchg
gs
xchg
fcomps
cltd
and
out
iret
nop
fwait
dec
lock
movsl
add
adc
je
sbb
mov
nop
stos
pop
jge
lods
dec
into
test
fcom
xor
fdivs
jmp
pop
inc
ja
mov
stc
test
mov
push
adc
int
aad
cmp
repnz
cmp
xchg
mov
movsl
aam
mov
test
sub
or
imul
jbe
mov
mov
imul
ret
or
cwtl
xchg
sbb
cld
aaa
testb
add
jp
xchg
insl
add
pusha
ljmp
test
sarl
rclb
sbb
repnz
pop
pop
mov
push
jb
mov
sti
mov
push
mov
aam
mov
sub
cmp
dec
lret
lret
and
inc
and
inc
push
out
jmp
mov
jl
pop
and
sbbl
push
fs
call
das
inc
sbb
adc
jb
adc
icebp
mov
outsb
inc
jmp
pop
mov
dec
inc
mov
movsl
repz
mov
icebp
loop
sbb
push
mov
pop
mov
mov
xor
pop
pop
lret
xor
lret
jecxz
test
bound
xlat
mov
inc
rcll
dec
xorl
fwait
push
xchg
jmp
and
sub
mov
inc
lahf
ret
jge
cmpsb
lahf
adc
arpl
lea
xchg
mov
cmp
fs
mov
sbb
fwait
ljmp
inc
jnp
loop
jp
outsl
cwtl
push
xor
mov
dec
mov
mov
fcoml
out
dec
sbb
std
ja
pusha
cmp
ror
imul
icebp
adc
mov
fistps
stos
andb
inc
or
jbe
sub
cld
jbe
adc
ds
jmp
aam
push
icebp
cmpl
imul
mov
mov
jg
scas
push
cmp
pop
movsl
outsb
xchg
outsb
aaa
arpl
inc
and
imull
test
in
mov
jae
iret
jl
cmp
push
and
and
jp
test
mov
mov
cmpsb
adc
mov
inc
pop
imul
jnp
pushf
pop
leave
push
test
insl
adc
data16
aad
fnstsw
insb
hlt
lock
ret
sbb
daa
mov
add
pop
cmp
cmp
push
mov
xchg
xor
jo
xor
inc
jle
out
cmp
mov
out
out
test
shlb
loopne
push
mov
clc
jp
mov
cmc
rclb
jnp
repz
xchg
and
out
xacquire
jae
push
mov
lcall
ljmp
adc
add
shrb
mov
or
adc
sub
cmp
cld
ds
shrb
mov
cmp
push
push
cltd
xchg
stos
pop
adc
jne
push
inc
ds
lret
xchg
push
mov
daa
cmpsb
mov
es
out
pop
test
in
sbb
insb
scas
inc
or
fnstcw
sub
cmpsb
xchg
iret
and
pop
sarb
xchg
xor
adc
scas
repz
pushf
popf
pop
lods
adc
push
xchg
mov
add
cmc
mov
arpl
jge
pop
lret
push
cwtl
mov
jbe
in
scas
inc
push
mov
push
mov
sub
jle
bound
stos
out
cmc
int
mov
sahf
dec
rolb
adc
popf
sub
xor
dec
loope
mov
mov
push
pop
outsb
fisubrs
in
rorb
adc
xchg
jb
xchg
lahf
cmp
adc
data16
xchg
pop
fisttpll
sbb
adc
jp
in
mov
daa
pop
xchg
sti
jbe
mov
mov
out
push
dec
bound
mov
insb
aad
push
push
inc
xchg
mov
jb
cmp
pop
add
lods
push
cli
cmp
into
fidivs
and
gs
jbe
test
mov
fsts
cmp
pop
xor
fs
xchg
mov
push
test
push
lock
pop
ja
xchg
push
add
loop
gs
jl
push
inc
rcll
add
aas
je
dec
je
cmpsl
xorb
or
pop
sahf
sahf
mov
or
mov
mov
sbb
out
pop
loope
icebp
popa
mov
roll
push
sub
lret
movsl
mov
lock
negb
in
jmp
or
orb
rol
mov
fwait
push
pop
xchg
xchg
scas
pop
fsubr
loopne
dec
mov
xor
jmp
js
lea
test
ja
dec
jge
push
sub
sub
xor
test
jle
dec
scas
and
fstl
mov
mov
dec
cltd
out
and
sub
stc
push
add
outsb
xor
ret
scas
int
popa
or
notl
sub
repz
mov
xor
inc
mov
cmp
fwait
add
iret
sti
jae
test
imul
push
ret
or
sar
notl
jecxz
mov
mov
or
xchg
fldt
or
pop
jns
dec
inc
xlat
mov
lods
add
xchg
loopne
or
shrb
lcall
test
mov
pop
vmwrite
pusha
sub
add
push
push
mov
aas
push
adc
aam
adc
and
pop
test
into
cwtl
aad
xchg
push
jo
dec
jns
pop
pop
mov
and
cmp
mov
cmc
mov
xchg
cs
sarl
stos
popf
lret
xchg
sbbl
mov
push
lret
mov
xchg
imul
pop
xchg
pop
or
sub
xchg
mov
cs
xchg
and
add
push
xchg
imul
test
xlat
mov
cs
xchg
shl
and
aad
movsl
and
jnp
xchg
popf
out
cmp
aad
xchg
in
and
xchg
mov
pushf
or
lret
out
dec
ds
mov
add
idiv
jge
sbb
mov
xlat
shr
gs
dec
cmp
inc
cmpsl
xchg
jle
and
icebp
sahf
inc
xor
fisubrl
mov
fildll
inc
jns
xchg
shl
push
mov
pop
adc
mov
pop
roll
mov
dec
addb
adc
aas
xlat
pop
sarl
jns
add
rolb
ficomps
jge
imul
ror
push
fisttps
mov
pop
mov
mov
stos
sbb
lods
inc
imull
sarb
imul
lea
out
lret
rcll
daa
dec
push
scas
adc
or
dec
test
inc
stos
inc
pop
mov
repz
pop
fcomi
jae
repnz
or
xchg
adc
push
ss
lock
outsb
insb
sub
aam
aad
fwait
adc
adc
sti
dec
xchg
test
sbb
inc
fsubr
sbb
lods
test
cmp
xlat
insl
aaa
ffreep
aam
jbe
idivb
mov
ljmp
add
lea
test
push
mov
pop
push
or
mov
mov
push
mov
outsl
pop
push
ss
out
jp
fldenv
shrl
xchg
jb
jbe
cmpsl
xchg
xchg
inc
dec
pop
add
xlat
jae
in
push
adc
jp
xchg
out
clc
pop
fdivs
adc
dec
xchg
and
fcom
xchg
sbb
out
push
or
clc
outsl
adc
dec
ja
test
push
icebp
push
sub
scas
cmp
or
cltd
push
in
pop
jecxz
cmp
cmp
int3
cmpsl
and
lds
imul
iret
mov
or
rclb
mov
mov
ficomps
add
ljmp
insb
scas
mov
std
cwtl
outsl
cmp
mov
lahf
push
pusha
insb
jbe
xchg
mov
mov
jae
sbb
adcl
sub
mov
pop
xor
je
in
inc
repz
arpl
push
lcall
in
jo
dec
adc
xchg
mov
arpl
adc
stc
pop
jo
mulb
ds
addr16
aaa
xchg
movsl
xor
jg
dec
pop
sub
push
cwtl
lret
or
lea
mov
rcll
pushf
and
mov
jecxz
xor
sub
lea
fs
cmp
cmpsl
gs
lds
pop
inc
ja
mov
test
sbb
sarb
sbb
or
xor
aad
aam
xchg
stos
fs
push
jne
mov
dec
adc
dec
push
sahf
adc
pusha
ret
jle
dec
jg
ret
scas
mull
ds
push
in
push
inc
dec
outsl
mov
lock
inc
jmp
xorb
cmc
adc
jnp
bound
test
mov
mov
sub
mov
loop,pt
in
mov
es
adc
xor
cmpsb
outsl
push
pop
pusha
dec
shll
mov
xor
lock
shlb
push
mov
inc
lret
shll
lcall
test
les
lcall
daa
popf
push
push
inc
lcall
mov
mov
cltd
ss
mov
mov
jecxz
outsb
lret
xor
rcr
jp
iret
push
dec
mov
test
fisttps
cltd
fidivs
cmp
mov
push
jbe
mov
subb
outsb
divb
cmp
mov
mov
fidivrs
sbb
daa
pop
stos
mov
rol
mov
jl
loopne
xchg
mov
jecxz
xchg
xor
pop
and
shll
cmp
adc
test
mov
jl
sbb
add
loope
adc
sbb
cmpsb
cmp
add
aam
jge
test
or
add
or
stc
add
pop
push
xchg
lcall
andl
ds
lcall
xchg
or
jne
and
cli
orl
cmp
push
fmuls
jmp
sbb
or
scas
repnz
rorl
outsb
movsb
or
rcr
pop
inc
pop
mov
mov
enter
mov
or
lds
mov
hlt
jbe
stos
cmp
sbb
add
test
jg
movsb
inc
test
cmc
repnz
mov
or
out
test
inc
movsb
test
sbb
int
mov
hlt
fiadds
push
lcall
and
lock
mov
fcoms
dec
push
sub
rol
sbb
xchg
xor
inc
test
jo
mov
or
lret
jo
iret
out
fisubrl
pop
stos
jo
inc
je
mov
sbb
mov
arpl
xchg
pop
and
pushf
jnp
nop
rcl
subb
push
dec
jns,pn
mov
sub
xor
sbb
call
push
jecxz
xor
rcrb
outsl
mov
je
mov
aam
test
pop
push
orb
mov
clc
cwtl
dec
mov
jge
das
push
mov
xorb
xor
xchg
or
sahf
xlat
hlt
mov
mov
mov
dec
cmpsl
or
xor
pop
inc
xchg
pop
movsb
hlt
inc
push
ret
mov
mov
cmp
jbe
js
sub
xchg
pop
cmp
imulb
add
fstps
fs
inc
mov
fwait
dec
sbb
cmpsb
push
icebp
movlps
insl
dec
mov
cmp
mov
lcall
xor
pop
ret
insb
sbb
in
push
adc
sbb
rolb
ret
adc
pop
xchg
shl
xchg
aas
lea
pop
inc
aas
inc
mov
dec
xor
call
push
mov
cs
rolb
cmc
outsb
and
and
xchg
push
sbb
push
mov
push
orl
add
add
repnz
mov
call
pop
sub
roll
fisubrl
jmp
in
xor
icebp
jmp
adc
add
push
int3
shr
lods
sahf
xor
shr
xor
loopne
lea
in
sub
or
fstps
cmpsl
mov
cmpsb
in
in
or
add
pop
cltd
or
rep
push
aas
ss
cwtl
mov
adc
mov
and
mov
xor
roll
mov
sub
lds
add
shrl
lea
outsb
sbb
enter
scas
in
and
mov
imul
xchg
jns
push
rcll
xorb
stos
iret
int3
lret
cmpsl
push
dec
ret
inc
rcrl
cld
cltd
cmp
pushf
or
mov
insb
test
pusha
cmp
addl
xchg
lea
sub
cmpsl
pop
cld
or
jle
in
mov
outsb
mov
sbb
xor
ret
or
in
adc
ret
cmp
inc
or
leave
sub
clc
std
dec
xor
xor
inc
and
dec
mov
and
in
loop
je
dec
mov
out
pop
or
out
es
mov
icebp
and
repnz
xor
hlt
mov
cmpsl
mov
sub
mov
or
repnz
js
mov
shrl
nop
xor
fldl
js
test
mov
or
dec
pop
sbb
xchg
imul
enter
out
in
gs
lret
in
arpl
xchg
or
push
shll
imul
fimuls
rorl
pop
cmp
xor
mov
loopne
xchg
cmp
cli
pop
push
jle
out
testb
and
fimull
cmpsl
xchg
int3
adc
cmpl
daa
dec
std
add
mov
xor
pop
and
nop
leave
call
jecxz
xor
cmp
cmp
xchg
das
dec
ss
xchg
inc
xor
xor
clc
pop
je
mov
mov
rolb
std
mov
stc
outsb
cli
mov
sti
lods
cmp
fldcw
hlt
and
stos
test
mov
xor
shrb
scas
mov
mov
push
mov
or
sahf
dec
movsl
rolb
push
das
sbb
popf
jg
dec
mov
cmp
push
popf
imul
mov
lods
xchg
jp
cmp
fwait
pop
dec
fs
jge
dec
hlt
shl
pop
arpl
jne,pn
test
push
mov
rcl
fstl
shrb
or
aas
popa
roll
xchg
pop
cmp
es
clc
or
mov
inc
mov
mov
and
fcompl
xor
push
and
add
outsl
xor
inc
outsl
jb
iret
and
jno
mov
xorb
adc
clc
nop
aaa
mov
jns
mov
cmp
add
xor
adc
test
in
or
inc
jns
cmp
je
arpl
movsb
xchg
xor
jne
loopne
add
cmp
lahf
cli
cmp
push
mov
ds
stc
je
bound
push
add
cltd
xchg
mov
mov
stos
aas
shl
mov
ss
fiaddl
mov
add
xor
cmp
popa
loop
test
mov
add
lds
xchg
add
inc
lods
and
int3
clc
fstl
mov
and
xlat
xchg
cli
dec
mov
popf
sti
daa
push
push
inc
mov
cmc
movsl
std
inc
loop
pop
mul
int3
cmp
enter
shl
xorl
or
adc
in
add
mov
mov
jp
aaa
jl
scas
push
sub
jge
sub
fidivl
sbb
lahf
out
bound
int
enter
ja
xor
cmp
arpl
add
sarb
inc
test
mov
sti
xchg
in
jbe
xchg
pop
in
sbb
mov
popf
rcrl
xchg
sub
and
in
push
xchg
ss
add
mov
ret
or
pop
insb
es
mov
flds
aad
pop
inc
lret
in
rcr
jnp
inc
ss
insb
cmc
add
cs
mov
jg
in
mov
sub
mov
mov
subb
mov
inc
pushf
or
imul
lea
and
adc
sub
addb
lret
fstpl
mov
out
mov
pop
in
push
cli
pop
scas
jmp
sbbl
jno
xchg
jae
ss
dec
lret
lds
daa
add
fnstcw
jbe
or
icebp
clc
inc
cmp
loope
dec
outsl
jecxz
jmp
in
dec
mov
pop
xchg
inc
fistpl
arpl
in
das
ljmp
jnp
cmpsb
in
xor
sub
call
jae
lods
aam
movsb
ret
push
and
js
insl
xchg
xchg
pop
rclb
jo
dec
sub
popf
leave
push
ds
fimull
fnstenv
xchg
test
mov
xchg
inc
fldt
add
or
mov
cmp
subl
add
pop
adc
cs
iret
adc
add
xor
test
imul
jmp
jecxz
sub
xchg
lock
stc
pusha
sahf
gs
imul
cmp
lds
dec
and
xchg
rcll
cld
outsb
mov
jno
jo
add
test
mov
das
jmp
clc
fsubrs
icebp
and
js
test
into
dec
xor
lods
insl
aam
mov
roll
imul
push
jb
add
or
jne
push
mov
jns
cmp
outsl
call
stos
push
dec
mov
sbb
jl
addr16
ja
push
es
pop
sahf
movsl
xchg
je
add
pushl
enter
add
xor
cltd
pop
mov
ja
ss
cmp
dec
cmpsb
test
mov
das
sub
pop
jns
dec
fucomp
fsts
movsl
or
cmp
pop
shlb
das
jbe
mov
xlat
push
mov
add
add
and
dec
popa
int
stc
ljmp
inc
mov
sub
mov
xchg
sub
test
aas
lret
pop
mov
xor
cmp
mov
jns
pop
shll
adc
adc
test
adc
mov
sahf
scas
pop
scas
cmpsb
in
pop
cmp
and
lods
ds
fcoms
mov
lahf
outsl
iret
hlt
and
in
insb
dec
push
negl
adc
pop
cmp
jns
pop
mov
jmp
rorb
add
les
mov
lods
aad
adc
xor
decl
sarl
cmp
dec
jno
add
adc
pop
arpl
call
movsl
jg
or
inc
jb
test
mov
sbb
test
std
adc
mov
or
cmpsb
out
push
jne
ja
stc
mov
xor
pop
nop
mov
lods
ret
add
pusha
sub
inc
and
mov
push
jg
fs
out
mov
add
fnsave
stos
jbe
jmp
cmp
stos
fiaddl
xchg
sub
push
jne
subl
adc
sub
pop
sub
jno
clc
lret
and
mov
out
pop
xor
fnstcw
xor
dec
pop
dec
ret
dec
mov
or
cmp
test
aaa
outsb
je
shll
jno
jnp
pop
push
xchg
jg
cs
dec
dec
popf
int3
scas
or
mov
int3
cld
js
bound
mov
add
mov
iret
lods
push
and
push
pop
dec
lods
mov
or
cmp
sbb
mov
cli
add
fld
sahf
popf
mov
inc
insb
ja
dec
mov
movsb
inc
push
xlat
int3
push
mov
add
jge
mov
push
push
pop
jl
sahf
fwait
imul
xor
ret
in
adc
sub
adc
out
sbb
cmpsl
jmp
aad
sub
loopne
dec
cli
push
sbb
push
cmpsl
and
mov
dec
mov
pop
pushf
mov
pop
mov
orb
pop
fldt
sbb
cld
dec
mov
loope
jmp
scas
hlt
xchg
mov
inc
dec
into
and
sti
outsb
leave
mov
scas
sahf
jb
adc
stc
inc
js
enter
xor
test
sub
mov
push
add
fwait
dec
fldt
daa
adc
sti
mov
push
clc
pop
jbe
pop
mov
xchg
sbb
inc
xor
icebp
shrl
je
dec
pop
mov
mov
add
stos
mov
cld
mov
out
mov
add
pusha
pop
mov
leave
or
mov
mov
shlb
push
jb
lea
cmp
cmp
das
shl
mov
pop
movsl
mull
sub
xchg
gs
movsb
fisubs
xchg
rcrb
dec
mov
mov
cmp
dec
addb
adc
push
or
cmp
bswap
insb
imul
es
push
add
fs
test
add
leave
pop
outsl
xchg
inc
push
ja,pn
stc
inc
int3
push
loop
pop
cmpb
sub
push
lret
call
mov
or
pop
mov
mov
inc
jp
dec
pop
lahf
pop
add
pop
mov
popa
in
mov
jne
add
lahf
xor
mov
fsubrl
lcall
cmc
clc
lret
mov
outsl
daa
lods
in
pop
xorl
in
mov
out
xchg
push
aaa
ret
inc
jne
dec
xchg
fstl
outsl
cmc
jo
sbb
cmp
jb
lret
imul
sbb
mov
es
lds
fidivl
scas
ret
fildll
dec
cmpb
push
sbb
fnstsw
int3
aaa
mov
adc
sbb
das
bound
push
ss
sub
cmp
cli
in
das
std
xbegin
mov
adc
lods
cld
jns
jp
sub
mov
or
shl
add
sub
stc
in
int
adc
out
jnp
call
mov
icebp
jne
dec
xchg
pop
and
das
xor
or
xchg
xor
ljmp
adc
inc
pop
add
xor
into
bound
jno
adc
fnstcw
dec
push
loop
iret
inc
das
ds
cmp
xor
scas
test
push
dec
fwait
imul
ljmp
cld
in
adc
add
sbb
je
mov
inc
pop
pop
aam
out
nop
or
addr16
les
jb
and
hlt
or
push
clc
mov
xchg
sbb
add
call
fstl
data16
js
inc
cmp
aam
sub
enter
xor
aam
mov
lret
insl
bnd
inc
ljmp
loopne
pusha
mov
sbb
std
incb
push
dec
in
ret
or
push
sbb
out
sub
sbb
xchg
dec
ss
dec
sti
ret
test
inc
fnstcw
push
lret
sub
test
or
popf
data16
js
inc
aad
cmpl
dec
jmp
test
cltd
pop
rorb
dec
sbb
leave
lock
outsl
xor
ret
repz
pushf
pop
cmpsl
arpl
int
int3
sti
push
dec
mov
fbld
aad
cs
xchg
lret
inc
mov
sahf
jl
sti
push
add
aaa
div
pop
or
push
mov
mov
out
lcall
push
sub
push
push
pop
fiaddl
jmp
rclb
es
iret
in
jmp
nop
in
sub
push
cmp
sbb
subb
loope
xchg
sub
popa
mov
mov
sub
sbbb
cmp
pop
lds
mov
dec
inc
lahf
adc
daa
jmp
cmpsb
scas
icebp
mov
inc
dec
pop
roll
or
inc
cld
jmp
sub
sbb
pop
or
add
inc
and
repnz
xchg
push
cmp
mov
addl
inc
rorb
jae
pop
out
or
fs
iret
push
hlt
add
push
pop
outsl
pop
sbb
push
cwtl
dec
xchg
or
ljmp
sti
ljmp
icebp
adc
lahf
jnp
mov
lods
dec
pop
icebp
icebp
or
fnclex
in
out
lcall
cs
mov
mov
inc
outsb
das
mov
xor
out
subl
jp
insb
sbb
mov
movsl
dec
add
ret
lret
cli
movsb
sahf
sbb
mov
sub
notb
sub
or
or
mov
cmp
sub
fwait
arpl
imul
add
ds
mov
dec
sub
and
inc
pop
js
xchg
dec
xchg
fs
push
rolb
xchg
lret
fwait
and
outsb
pop
inc
mov
js
fcomps
mov
mov
loopne
in
stos
cli
insl
cltd
adc
loopnew
lock
nop
mov
lods
push
pop
in
fldt
lcall
mov
jp
andb
push
popf
in
std
jbe
jmp
sub
pop
cmp
mov
or
pusha
stos
xchg
hlt
add
addb
std
adcb
fisubl
shll
nop
ljmp
xchg
and
mov
cmpsl
and
aaa
cltd
loop
dec
rep
sbb
pop
mov
fs
call
cmpsb
and
addr16
dec
xchg
fistpl
sub
xchg
jle
mov
cld
scas
push
test
fs
enter
pop
cmpsb
xor
xlat
into
pop
data16
cmc
and
loopne
jge
rolb
sub
imul
ret
lock
dec
add
add
mov
in
pop
call
stos
or
pop
insl
fistl
mov
mov
aam
rep
mov
test
dec
mov
cmpsl
pusha
add
popa
dec
out
jle
jmp
in
test
sbbb
jecxz
imul
test
mov
repnz
dec
stos
dec
enter
mov
mov
rcl
movsl
mov
push
or
ret
shll
cmc
cmpsl
mov
push
movsb
in
inc
int
xchg
in
cmc
cmp
fs
pop
out
cmpsb
sbb
mov
adc
scas
popf
test
xchg
fnstsw
mov
xor
sbb
xor
mov
stc
enter
iret
mov
rcl
arpl
inc
and
inc
ret
test
int
test
ljmp
test
cmp
dec
sub
rcrb
push
pushf
repnz
fisubrl
popa
pop
pop
icebp
pop
sbbb
and
and
add
ret
and
stc
sahf
dec
push
pop
xchg
andb
mov
jb
mov
aam
xchg
out
daa
mov
dec
rclb
jecxz
xor
or
pop
mov
scas
shll
and
int3
xchg
xorl
push
push
sbb
cmp
mov
jmp
or
sub
mov
jmp
movl
cmp
add
out
mov
sub
lea
push
out
shrb
loop
sarl
scas
enter
push
movsl
mov
mov
lock
outsb
xchg
push
jbe
aaa
out
xchg
mov
jecxz
mov
nop
lret
sbb
add
push
stos
loop
or
xor
loop
stos
xor
inc
stos
adc
cli
std
push
xchg
loope
in
sbb
xor
pop
fimuls
lods
and
add
je
fisubrs
adc
into
std
push
sets
xchg
hlt
inc
lods
sub
std
loopne
xor
cmpsb
int
pop
mov
mov
or
dec
xchg
xchg
and
and
pop
mov
xchg
push
cmc
mov
sub
mov
cmp
xor
adc
scas
enter
adc
lods
add
adc
testl
je
sbb
cmpsl
int3
popa
mov
xchg
arpl
inc
pusha
mov
mov
data16
cmp
clc
and
movsb
notl
mov
rorb
pop
sbb
js
sti
fbld
sub
sbb
mov
popf
inc
cmpsb
dec
adc
cmpsb
add
or
mov
out
mov
push
pop
ja
rclb
mov
sub
xchg
jae
cwtl
jae
loop
dec
leave
notb
mov
ss
insl
jge
jbe
imulb
pop
xor
inc
test
stc
ficoms
mov
mov
int3
mov
aas
sahf
pusha
jecxz
cmp
repnz
pushf
scas
add
negb
push
xchg
mov
cmp
pusha
jo
nop
lcall
stos
pop
jb
cmp
cmp
inc
cmp
pop
pop
cmp
fwait
cld
rclb
inc
inc
inc
mov
or
lret
imull
pop
adc
fldl
icebp
cmp
mov
roll
test
xlat
mov
jp
jl
xchg
hlt
push
stos
cmp
push
mov
addr16
jp
mov
mov
inc
xlat
fstpl
loope
in
test
lea
adc
out
mov
pop
enter
lods
jno
push
mov
jbe
in
and
mov
movsb
int3
xor
jns
add
xchg
xchg
je
cwtl
loop
call
dec
jp
xchg
push
jge
cmpb
imul
mov
lcall
sbb
and
add
add
jno
inc
cmpsb
jmp
jno
pushf
sub
fcmovu
repz
jo
cmpsb
lret
mov
and
aam
pop
lock
test
jmp
out
jnp
cli
jne
ret
and
repz
insb
pop
shr
popa
sarb
pusha
int
push
sbb
pop
mov
mov
fdivrl
inc
jns
lea
pop
fmull
mov
jnp
dec
inc
pop
ds
push
xchg
mov
lret
dec
cmp
loopne
add
sub
mov
jecxz
in
inc
add
xor
or
cmp
or
lret
leave
icebp
inc
pop
sbb
fstps
sbb
xchg
sbb
mov
lods
sar
test
push
rcrb
iret
mov
mov
jne
icebp
rcll
sbb
arpl
stos
lods
dec
jp
inc
mov
outsb
jne
pop
popa
jbe
cmpsl
shrl
jnp
xchg
cli
fimuls
push
mov
and
xor
mov
icebp
and
jmp
stos
inc
out
fs
mov
cmp
and
lods
jmp
mov
inc
das
lcall
js
xchg
push
lcall
cs
mov
rorb
push
rorb
pushf
jg
sahf
cmp
push
lock
and
cmp
adc
stos
xchg
jbe
insb
clc
or
outsb
adc
loopne
bound
mov
out
push
inc
out
mov
cmp
jg
xorl
repz
sbb
mov
ret
xlat
aas
mov
sbb
cmpsb
js
pop
mov
pop
jne
dec
push
pop
dec
dec
ljmp
stos
jno
lods
gs
jae
movsl
ljmp
mov
daa
inc
loopne
jmp
repnz
mov
mov
jecxz
sti
dec
sub
loope
lcall
add
and
stos
cmp
xchg
adc
mov
mov
inc
mov
std
dec
and
pop
insb
add
xchg
out
imul
sbb
sbb
add
inc
call
add
xlat
sub
stos
cwtl
mov
ret
rcrb
call
jg
pop
adc
or
stos
xlat
xor
adc
cmp
arpl
imul
lock
sub
lret
addr16
icebp
fnstcw
sub
outsb
mov
rcll
and
lods
cmp
xlat
dec
mov
add
data16
jecxz
inc
incb
xchg
rcll
mov
cmp
fdivs
fmulp
and
lods
cs
mov
jnp
sbb
sbb
shr
loop
cmp
push
cmpsb
and
js
cmc
lcall
into
and
lahf
mov
inc
xor
rcr
cltd
inc
add
cli
xchg
sti
test
add
xchg
mov
sti
inc
insl
insb
bound
mov
arpl
pop
or
push
test
inc
mov
push
movb
dec
cmpsl
sbb
xchg
testb
xchg
mul
dec
xchg
movb
iret
test
sarb
lea
mov
cltd
xchg
out
pop
imul
pop
cmp
cmpsl
cmpb
into
inc
js
andb
jecxz
int
fs
fwait
repnz
cltd
mov
pop
mov
push
jmp
jno
lea
xor
xchg
es
shl
iret
cld
scas
add
lcall
outsb
js
cmc
sbb
in
daa
jmp
pop
nop
jae
cmpsl
mov
pop
add
sbb
cmpsb
or
shl
jo
leave
xlat
imul
dec
fistpll
lret
jnp
ds
test
fstpt
movsb
adc
jmp
subb
lret
fisttps
out
pop
lock
push
cwtl
sbb
in
cmp
fcmove
push
flds
dec
push
outsl
lret
lcall
pop
scas
cmp
and
pop
lock
lea
push
cltd
out
adc
jnp
int3
sub
or
push
and
adc
cmc
inc
jmp
sbb
mov
jge
mov
imul
xlat
imul
cmp
rcl
out
mov
inc
ljmp
icebp
inc
sbb
scas
rol
scas
pop
pop
imul
pop
popa
in
lcall
cld
and
xchg
push
mov
cli
leave
push
cwtl
jle
addb
leave
cmp
inc
lock
add
stc
mov
push
inc
mov
test
or
jae
rorl
fldt
adc
jo
dec
lret
fcoml
xchg
lcall
fsin
sub
popf
popf
fdivrl
ret
xchg
imul
cmp
or
repnz
std
int
test
pop
cmp
loopne
cs
loope,pt
andl
pop
mov
aad
xchg
mov
ss
dec
and
dec
sbb
sub
dec
punpckhwd
mov
sbb
js
mov
ret
ljmp
mov
add
mov
clc
push
shrl
pop
out
adc
mov
movsb
and
pop
sub
mov
sbb
aad
dec
sub
aad
fs
movsl
xor
xor
decb
fwait
pushl
push
or
sub
arpl
xor
pop
out
aas
sub
out
jecxz
ds
jae
div
or
push
xor
aad
xor
jnp
aas
mov
xorb
stos
dec
aas
std
loop
insl
enter
repz
jge
dec
xchg
mov
adc
sbb
xchg
sbb
mov
das
jnp
jge
xchg
in
pop
pop
movb
outsb
mov
xor
cmpsb
push
fiaddl
lret
cltd
adc
dec
mov
adc
rclb
push
sti
mov
fwait
in
pop
mov
mov
mov
adc
cmp
test
pop
call
loop
in
mov
int3
dec
pop
and
jl
pop
xchg
aas
or
or
dec
lods
jp
scas
pushf
loopne
mov
pop
push
mov
add
adc
loope
loopne
addr16
push
mov
push
cmpsl
add
cmp
fwait
dec
lods
lods
cmpsl
in
cmpl
and
pop
test
fiadds
sbb
out
test
inc
xor
jle
jmp
and
jne
lods
popa
enter
add
inc
push
adc
pop
pushf
fisubrl
and
push
xor
mov
je,pn
repnz
cld
and
inc
dec
popa
test
das
dec
sbb
jg
sub
mov
pop
inc
sbb
rcll
mov
lahf
add
inc
pop
xchg
adc
out
xchg
repnz
test
icebp
xlat
ficoms
out
cmpl
mov
mov
addr16
and
int3
cmp
enter
dec
mov
repnz
out
mov
test
sub
call
outsl
mov
xor
stos
xlat
mov
xchg
fcomps
push
fldl
mov
pop
popf
loope
xor
test
data16
repnz
mov
fdivs
push
shlb
mov
jmp
scas
mov
mov
adc
push
push
rorl
xorl
push
scas
lret
loope
fs
lods
std
int
push
push
mov
lock
mov
shll
push
xor
stos
popf
xchg
jp
sbb
xor
mov
xor
push
aam
fildll
xor
outsb
sub
imul
push
shl
bnd
sub
insl
cmpsb
lea
inc
jae
xchg
cmp
inc
iret
and
add
jno
xor
mov
mov
mov
pop
lds
push
loopne
jno
add
jo
xchg
adc
and
js
inc
xchg
mov
jb,pn
notb
cmp
aas
xchg
and
imulb
push
xchg
and
cs
cwtl
pop
push
outsl
cmpsl
ss
mov
or
pop
shll
lods
dec
daa
adc
push
fs
sbb
dec
test
push
ds
test
push
mov
lods
out
mov
cmp
push
cmp
adc
cmp
and
pop
xchg
fldenv
mov
cmp
add
pop
cltd
es
ds
or
aas
gs
adc
fnstenv
stos
xor
push
and
je
or
aas
inc
mov
inc
out
aaa
dec
imul
push
mov
pop
push
xchg
cs
in
das
cmpsl
mov
cltd
gs
arpl
pop
mov
cltd
addr16
push
adc
cld
enter
push
dec
sub
lret
mov
in
add
ja
ja
add
repnz
xor
xchg
fldl
mov
mov
lret
popa
nop
push
pop
sahf
icebp
test
test
inc
or
cmp
in
jg
mov
and
dec
cmp
jno
xorl
iret
or
jecxz
dec
es
rcr
or
lods
jg
or
pop
xlat
or
mov
cmp
lds
fcomip
dec
lahf
ljmp
test
push
adc
inc
mov
shll
jge
sbb
sarb
add
or
mov
jp
lods
mov
add
dec
fwait
and
cmp
dec
xor
dec
enter
xorl
push
adc
xor
mov
iret
mov
mull
or
mov
icebp
inc
xor
lods
sub
pop
xchg
sub
sub
lcall
ss
xchg
mov
mov
into
ss
in
ljmp
hlt
inc
mov
rcr
fadds
mov
shll
push
or
pop
aam
jmp
mov
or
mov
inc
cmpsl
jmp
test
std
aad
mov
sub
mov
mov
jnp
jge
je
cmpsb
js
dec
and
rcrb
xchg
loop
sub
dec
push
xor
in
andl
lcall
jle
ror
add
pop
loope
popf
xor
mov
dec
jbe
ror
flds
dec
popl
insb
jae
lds
pushf
add
push
sti
stos
das
outsb
xor
dec
cmp
mov
jle
in
leave
fisttpll
sub
es
push
ret
and
shlb
je
loop
in
cli
push
push
gs
clc
cwtl
jge
xchg
cltd
pop
test
int3
cmp
add
js
xchg
pop
jge
dec
test
pushf
cwtl
sarl
into
dec
orl
ja
cmpsb
and
mov
mov
inc
lods
loopne
aad
nop
fsubrp
inc
movsb
cmpsl
mov
inc
movsl
das
flds
jmp
lods
call
mov
sbb
es
inc
addl
jns
sbb
mov
mov
aam
mov
mov
dec
mov
pop
int
data16
xchg
jno
int3
fnsave
stos
mov
negb
sub
mov
adc
xor
test
cmc
stos
dec
mov
loope
fisttps
mov
or
insl
fwait
test
mov
adc
cmp
iret
repnz
icebp
mov
cmp
xchg
sub
push
lret
mov
xorb
orb
pop
mov
fisttpl
repnz
scas
aam
xor
in
fldt
sbb
mov
test
xor
jmp
pop
cs
int
xor
aas
std
or
dec
dec
imul
xchg
or
add
sub
pop
push
push
test
out
xchg
jle
mov
jnp
jno
daa
addb
stos
adc
and
mov
adc
jge
into
and
stc
mov
mov
jae
imul
xchg
mov
jo
sub
jg
inc
push
out
insl
dec
out
cmp
or
repnz
jne
fisttpll
xchg
lea
std
out
and
dec
pop
psubusw
pop
or
stc
shlb
fisttpl
and
and
inc
mov
leave
jae
loope
lods
add
pop
push
movsb
in
mov
fwait
push
mov
stos
scas
pop
jbe
sbb
stos
mov
jecxz
jge
ss
mov
loope
pop
dec
les
cmpsl
adc
aas
aam
ja
dec
cmpsb
dec
push
jecxz
push
inc
and
int3
aad
arpl
sub
mov
mov
faddp
push
fstpl
iret
sbb
mov
add
jle
test
nop
jmp
jne
mov
jg
sarb
push
mov
pop
inc
jle
incl
addr16
xchg
and
mov
xchg
ljmp
sahf
lea
cltd
pop
dec
cmp
sar
sub
arpl
mov
imul
adc
fwait
sbb
lahf
adc
sub
or
pop
cmp
inc
adc
mov
fmull
inc
dec
popf
cmp
cmpsb
es
into
sub
xchg
mov
jno
sbb
fsubrs
mov
sbb
out
mov
arpl
or
and
lods
jns
sub
xorb
arpl
outsl
sub
cmp
sub
pop
outsl
xchg
sbb
or
push
je
push
xor
divl
cld
dec
pop
add
scas
push
mov
mov
dec
pushf
icebp
push
hlt
pop
pop
loop
imul
add
js
jmp
jmp
pop
sbb
test
addr16
cld
xor
adc
pop
outsb
cmpsl
loopne
adc
int
ljmp
pop
xor
negb
jg
jecxz
push
je
mov
cld
out
jge
xchg
movsl
nop
sub
imul
loop
sub
fs
mov
pushf
xor
jg
popf
cmc
cltd
scas
mov
shrb
repnz
arpl
loop
mov
or
loope
rorb
rep
psubsb
sub
mov
mov
mov
mov
xchg
bswap
jbe
and
xchg
sbb
cmp
dec
jae
push
jnp
subb
cltd
nop
adc
jae
das
addl
mov
pop
adc
mov
xchg
adc
nop
lea
xor
nop
stos
xor
gs
jb
stos
mov
pushf
ret
cmc
mov
dec
pusha
jbe
out
jmp
repz
jp
push
push
in
xchg
repnz
or
loope
out
lods
xlat
sahf
xchg
lea
arpl
xor
push
pop
xchg
and
cwtl
fldl
shrb
cli
gs
sti
rcrl
inc
gs
inc
js
sbb
out
add
jge
hlt
in
mov
or
stos
pop
xor
sbb
sar
inc
add
inc
test
or
jg
scas
jbe,pn
xor
in
xchg
inc
sti
sti
mov
rol
cmpsb
mov
movsb
fwait
movsl
icebp
jae,pt
push
pop
aad
add
dec
push
imul
jo
arpl
jg
fwait
adc
jno
inc
movq
mov
mov
movsl
jb
js
pop
lahf
pop
stc
out
xor
out
cmp
mov
dec
scas
or
aas
icebp
push
imul
inc
loop
cmp
iret
jbe
cmp
out
or
sub
test
pop
sub
xor
fisttpl
xlat
push
cmp
pushf
insb
jg
inc
adc
fwait
mov
add
int
cmp
gs
fsubs
inc
aaa
loope
popl
test
xchg
loopne
push
leave
in
pop
push
push
mov
pop
fcomp
sbb
xchg
lods
pmullw
push
scas
cmp
lock
mov
call
mov
mov
sbb
decl
add
dec
pop
mov
inc
rorl
or
mov
push
pop
push
sub
or
std
fistl
dec
into
adc
dec
ljmp
fwait
mov
stos
mov
ret
arpl
dec
mov
iret
je
xchg
mov
popa
js
adc
xor
lahf
scas
out
jae
xchg
std
sub
int
jno
adc
mov
test
dec
push
or
je
mov
scas
stos
cmp
inc
add
ja
inc
xchg
lcall
mov
adc
add
cmp
lods
shll
mov
iret
test
ret
sbb
mov
inc
andl
inc
and
pusha
sub
popa
nop
add
jno
out
fldlg2
adc
xor
cld
sub
push
or
rcrl
ret
es
sbb
mov
fs
bound
push
jp
repz
negb
push
lods
test
jne
repz
fwait
sbb
xchg
xlat
and
cmpsb
nop
sbb
popa
cmp
sbb
mov
or
shrb
mov
mov
pop
cmpsl
aad
mov
cld
jp
cs
lea
loope
xchg
loop
xchg
mov
jae
test
gs
sub
mov
ds
adc
jno
lret
and
add
jp
dec
out
cmp
push
jno
in
adc
cld
roll
xchg
lcall
ja
cmc
shlb
jbe
pop
mov
add
fisubrs
jo
shlb
or
sub
pop
adc
imul
push
orb
pop
lock
cld
jmp
loopne
cmp
in
mov
pop
inc
fnstcw
xchg
addr16
xchg
fsincos
daa
repz
sti
and
insl
cmpb
lds
xor
loopne
mov
out
fisubs
adc
mov
or
dec
cltd
ret
xchg
scas
push
test
sbb
dec
mov
les
pushf
push
or
jmp
cmpsl
fwait
loope
insl
pop
push
adc
pusha
stos
mov
xchg
or
movsl
outsb
xor
or
dec
adc
insb
mov
jns
pop
push
mov
outsl
or
pop
jns
xchg
jp
repnz
mov
mov
mov
add
mov
nop
sub
addr16
lret
dec
inc
cmpsl
cmp
mov
jp
out
cmp
cld
out
cmpsl
pop
aas
and
scas
test
inc
insl
sarl
xlat
inc
sub
shrb
sarl
and
orl
cli
and
dec
bnd
jl
push
movsb
stc
aaa
mov
dec
mov
or
ficompl
daa
int
nop
icebp
or
mov
ljmp
rolb
jp
mov
clc
jne
mov
sbb
sub
and
pop
xor
mov
sub
outsb
push
push
fsubr
in
idivb
adc
sub
inc
dec
subb
das
pusha
mov
into
in
enter
mov
dec
mov
loop
mov
push
mov
loopne
pop
add
xor
imul
or
sub
cmpsb
mov
mov
push
in
gs
ljmp
shrl
pop
lcall
xor
pop
ret
jcxz
mov
clc
fdivrs
fisttpl
lock
stc
scas
cmp
lret
outsl
fcmovu
or
popf
imul
imul
jmp
add
cld
repz
xchg
pop
adc
pop
pusha
adc
cmp
cs
das
pop
dec
mov
repz
mov
sar
mov
or
fsubr
or
pop
and
stc
mov
xchg
orl
stos
pop
pop
mov
jl
imul
pop
push
negl
mov
daa
cmp
imull
dec
les
jg
add
add
jecxz
aas
inc
sub
mov
mov
in
pop
or
cld
fistpll
lock
movsl
pop
adc
test
leave
arpl
aam
pop
fisubrl
lret
mov
scas
frstor
sbb
scas
stos
push
rcrb
dec
lcall
inc
fisubrs
rclb
push
rol
adc
pop
adc
stos
add
mov
xchg
mov
push
loope
mov
push
andl
xchg
sbb
daa
lcall
dec
test
cli
mov
aas
jecxz
frstor
test
mov
sarl
lret
cmpb
cltd
imul
xchg
stos
push
fsts
div
stc
insb
and
mov
hlt
cltd
jle
or
push
iret
add
xor
xchg
lods
stos
outsb
jne
mov
push
xor
addr16
cmpsl
jns
imul
cmc
popf
enter
mov
inc
jno
das
and
push
jb
mov
les
adcb
add
lahf
cmpsl
xchg
xor
shrl
pop
sbb
push
std
sti
test
pop
out
repz
xor
mov
jo
das
sub
push
mov
xchg
jno
mov
xor
pop
xchg
fwait
stos
aad
in
or
sub
sbb
cltd
jo
popf
pop
xor
dec
inc
inc
iret
push
scas
cli
pop
sbb
sbb
mov
push
aad
mov
test
mov
adc
jmp
ds
mov
and
in
jmp
mov
int3
fisubl
adc
sub
mov
ds
dec
mov
clc
pop
xor
lods
mov
push
xchg
dec
outsl
test
ljmp
aaa
int3
stc
jmp
push
xor
xchg
pop
sbb
outsb
push
xchg
lods
cld
push
mov
xor
adc
test
jl
and
in
out
leave
mov
xchg
sti
pop
mov
mov
dec
bound
dec
lret
orl
cwtl
scas
mov
mov
push
lea
pop
les
leave
push
sbb
stc
mov
xor
bound
cmp
sti
pusha
mov
pop
outsb
inc
leave
push
jge
add
mov
lret
adc
hlt
popf
stos
and
aas
mov
ret
add
daa
push
mov
aas
call
movsl
inc
out
loopne
stos
xchg
fldenv
popf
or
or
mov
xor
pop
imul
adc
lea
xor
out
fs
lods
or
out
pusha
adc
xchg
mov
mov
rorl
out
mov
add
cmp
insb
inc
ds
sbb
cmp
dec
fsubp
or
lea
xchg
imul
mov
dec
aas
sbb
scas
push
cli
icebp
shlb
mov
xor
lds
fisttpll
cmpsb
pushf
xlat
inc
add
shlb
xor
dec
lods
push
jmp
sarl
aas
into
xor
enter
inc
jmp
in
test
and
sahf
mov
dec
aas
push
ret
iret
sahf
mov
pop
cmp
in
adc
pop
mov
mov
pop
mov
test
mov
or
inc
xchg
mov
insb
push
sbb
dec
mov
stc
ljmp
push
push
push
call
fcmovne
mov
push
fcompl
mov
loop
inc
sbbb
mov
and
in
cmp
mov
aam
pushf
leave
cmp
mov
fbstp
test
cli
push
fs
pop
push
inc
inc
movsb
je
shrl
sub
or
dec
jl
repnz
aad
and
loop
repz
addr16
das
xchg
inc
or
movsl
imul
sahf
or
adc
and
xchg
aaa
push
jge
stc
xor
test
dec
repnz
repnz
mov
call
cmpsb
movsl
nop
addb
aad
in
lcall
add
into
mov
addb
dec
sub
ret
mov
inc
scas
lcall
push
nop
mov
pop
dec
les
inc
sbb
movsbl
push
scas
les
clc
in
stc
cli
sub
ret
arpl
mov
push
out
push
lock
xchg
test
xlat
inc
stos
jp
sbb
stos
mov
xchg
das
adc
sbb
mov
rcrl
inc
add
jo
inc
pop
mov
or
jno
xchg
aam
pop
mov
loopne
out
dec
mov
inc
add
addr16
addl
sarb
mov
mov
xchg
stos
cltd
inc
jge
jne
push
jb
pop
std
hlt
jle
dec
fadds
pop
imul
lcall
sbb
call
icebp
loopne
mov
push
enter
push
sbb
xor
sub
pop
inc
mov
popa
mov
std
addl
mov
adc
gs
ret
out
loope
and
roll
mov
push
mov
scas
jb
int
inc
adc
jno
mov
mov
adc
into
xchg
add
sbb
int3
and
sub
pop
pop
clc
rclb
xchg
dec
inc
daa
scas
ljmp
jecxz
fcoms
cmp
mov
or
xor
mov
mov
cwtl
dec
mov
jge,pn
or
cli
out
mov
cmpsl
cmc
sar
adc
stos
aam
or
xor
pop
int3
frstor
push
sbb
sahf
adc
lcall
aam
insl
cli
pop
leave
jo
repnz
cmpsb
ss
xchg
fmulp
lods
xchg
mov
insb
mov
addb
xlat
sarl
push
sti
out
std
ss
mov
push
xchg
insl
lock
dec
dec
mov
add
loop
adc
mov
sbb
mov
je
pop
or
push
mov
inc
xor
mov
xchg
fwait
or
mov
and
inc
xchg
fildl
sbb
insb
in
fchs
or
sub
mov
pusha
cmpsl
inc
pop
or
jno
ret
inc
mov
aam
es
ror
lods
loopne
sub
mov
pusha
push
and
jo
lret
dec
lea
sbb
dec
xor
add
xchg
repnz
pushf
stc
inc
or
xor
jl
and
xchg
test
xchg
ret
or
pop
call
mov
int
loopne
insb
jb
and
sbb
jecxz
push
insb
in
stos
sar
enter
or
insl
pusha
clc
add
jl
jmp
jo
push
stos
nop
bnd
shrb
pop
sbb
clc
sbb
add
sbb
cmp
xor
in
mov
sbb
out
out
jl
mul
xchg
cltd
ret
inc
inc
shlb
sub
mov
inc
movsb
inc
fs
sub
popf
ljmp
popf
add
fucomip
loope
das
xor
jl
jbe
mov
or
ret
aam
out
inc
lea
cs
sbb
fdivrs
iret
xor
shlb
popf
push
fdiv
imul
and
push
hlt
pop
dec
mov
int
and
mov
xlat
jns
jns
movsb
xor
mov
and
inc
push
sub
cmp
dec
mov
xchg
sub
lods
cmp
shlb
out
repnz
ljmp
lea
fnstenv
inc
cwtl
fsts
pop
pop
dec
ror
cmp
cmpsl
cwtl
ficoml
mov
adc
xor
ja
aam
mov
inc
js
sub
add
and
repz
jg
or
sub
movsb
ds
mov
or
dec
dec
and
jo
mov
leave
negl
sbb
or
mov
jmp
dec
xor
mov
into
stos
xor
jne
ds
iret
cli
js
cmc
dec
xacquire
mov
jl
add
and
add
adc
adc
add
daa
sub
out
mov
sar
call
or
sub
out
mov
mov
xchg
repz
cmp
loope
pop
xchg
leave
jl
pop
dec
sub
imul
mov
sbbb
dec
jl
add
lret
or
inc
cmpsb
out
in
push
in
lret
cmp
outsb
cltd
flds
rolb
andnps
sbb
push
iret
nop
cli
jb
adc
xor
jp
xchg
jg
add
jae
cli
cs
ja
xchg
gs
ds
pusha
xchg
pop
test
jne
dec
xor
or
pop
imul
or
aas
add
inc
push
pcmpgtb
cld
push
inc
out
xchg
xlat
add
inc
mov
aas
and
mov
adc
add
test
pop
in
call
or
retw
cli
inc
mov
jbe
xor
lcall
das
xor
mov
int3
std
pop
daa
js
jle
push
stos
sbbb
jl
ljmp
and
adc
cld
and
movsl
je
sbb
sub
scas
ljmp
push
cmpsl
dec
daa
mov
mov
daa
loop
movsl
inc
mov
sbb
ret
sbb
mov
insl
fsubrl
xchg
pop
dec
jo
inc
mov
or
fs
mov
adc
arpl
cmp
or
or
dec
xor
lods
pushf
adc
add
mov
and
lods
jecxz
adc
arpl
mov
cli
test
fs
or
lock
filds
leave
test
iret
ds
mov
mov
in
sub
jo
mov
hlt
mov
sub
push
cmc
cmp
pusha
cmp
test
cwtl
inc
mov
push
cmp
mov
cmp
clc
popf
int3
es
mov
mov
in
icebp
inc
dec
inc
cs
ret
xor
jp
es
lods
addr16
hlt
mov
sti
xchg
aad
pop
repz
dec
cmp
mov
mov
and
idiv
add
lock
fidivrl
adc
pop
and
cmpl
cli
ljmp
add
fdivp
arpl
sahf
popf
ffreep
inc
pop
rcr
test
xchg
insb
push
pop
lret
jmp
popa
mov
push
pop
lock
jp
lock
pop
jbe
fdivs
aad
push
das
shll
xor
or
stc
pushf
call
insb
jmp
ds
cmp
add
outsl
dec
xor
xchg
fildl
out
lea
outsb
adc
pop
mov
gs
jnp
popf
pushf
cmp
push
repz
jp
aas
clc
adc
insl
out
lds
xchg
test
adc
cli
int
sub
cld
aaa
or
push
and
cmpsb
sub
dec
pop
adc
repnz
and
xchg
jno
cvtps2pd
mov
fwait
jl
push
sub
cmp
adc
adc
subl
mov
mov
sti
mov
cmp
inc
lret
ds
rcrb
sti
mov
fidivrl
add
test
mov
lahf
fs
cmp
insl
negb
and
pop
es
dec
mov
cmp
lea
cld
in
adc
xchg
out
lds
enter
jge
or
xchg
loope
jbe
adc
stc
mov
cld
mov
xor
dec
nop
stc
cld
push
adc
xchg
add
jbe
jge
lea
push
mov
outsl
add
rcrb
into
pop
mov
cli
add
cmp
adc
rcll
mov
add
scas
dec
and
icebp
mov
loope
and
sbb
jae
ds
loopne
scas
dec
mov
jg
pop
dec
inc
fnsave
adc
dec
testb
ds
xchg
std
push
daa
and
mov
icebp
inc
push
cli
xor
cmp
push
bound
mov
add
ljmp
movsl
adc
mov
fdivl
mov
inc
cmc
stc
hlt
fsubrl
popf
sti
fs
sbb
jb
mov
loopne
test
fildll
and
add
iret
and
xor
mov
dec
aad
ds
inc
xlat
push
mov
imul
xor
push
cmp
dec
out
mov
xor
aam
add
jp
data16
mov
mov
lcall
stc
data16
mov
mov
or
mov
add
mulb
aad
or
push
adc
jbe
pop
shlb
sbb
lods
adc
sub
or
adc
out
loope
jmp
mov
inc
in
outsl
xchg
and
into
xchg
lahf
mov
cmp
pop
iret
loopne
in
test
add
je
add
mov
ret
movsl
jno
repnz
jne
mov
xor
xchg
popf
rorl
dec
test
pop
popa
xlat
shll
aad
and
mov
adc
test
cmc
add
jne
mov
sub
jae
std
mov
mov
pop
push
add
mov
mov
dec
cmpsb
jnp
mov
repz
fidivrs
inc
add
imull
movsl
stc
lcall
call
xchg
sti
cwtl
in
clc
mov
push
sub
stos
je
dec
add
aad
call
mov
shr
push
mov
mov
imul
mov
xchg
dec
lea
add
stos
jg
adc
sub
movsb
sbb
and
and
push
ret
mov
dec
cld
mov
fnsave
and
or
sbb
mov
hlt
imul
mov
push
push
inc
js
xchg
in
xchg
sbb
mov
pusha
in
push
lock
scas
adc
out
pop
push
pop
jecxz
std
mov
add
dec
incb
and
jne
pusha
lcall
fcompl
leave
mov
ljmp
fildl
xor
cwtl
jmp
fnstsw
loop
pop
out
fidivrs
test
sbb
in
sarl
sub
in
subl
jno
cmpb
scas
int3
mov
mov
mov
or
cmp
es
adc
dec
xchg
scas
fbld
push
jno
xor
push
dec
popf
orb
movsl
pop
mov
cmp
enter
xchg
out
adc
pop
inc
jbe
iret
add
push
clc
rcrl
cmpb
sbb
loopne
mov
ja
bound
hlt
xor
push
xor
inc
xor
into
outsb
jp
adcb
fildll
das
int3
fs
xor
loop
int3
add
cs
mov
inc
xchg
aas
cmp
mov
inc
sbb
mov
dec
fiaddl
and
cli
mov
ds
cs
and
stc
insb
xchg
mov
mov
ljmp
arpl
xor
add
inc
repnz
outsb
shll
fsubl
int
sbb
mov
jmp
loope
inc
pop
dec
fidivrs
xor
jo
jo
int
scas
mov
aaa
push
mov
adc
mov
daa
sbb
dec
cmpsl
and
imul
or
in
nop
mov
leave
dec
push
stos
lcall
mov
add
pop
and
test
xchg
clc
inc
xchg
xchg
xor
push
movb
gs
push
scas
jmp
mov
jl
add
test
jmp
add
push
mov
xor
fcmovnu
movsb
lret
lahf
push
scas
fildll
and
imul
lods
orb
idivb
push
ja
fs
testl
or
icebp
xor
mov
inc
mov
or
js
inc
jne
inc
or
pusha
mov
xor
lods
hlt
adc
enter
mov
leave
mov
xchg
scas
cmp
mov
lds
xchg
pop
and
mov
mov
repz
add
pop
aad
lods
inc
adc
jae
fsubrs
cmc
mul
pop
std
cmc
hlt
sbb
addr16
xor
push
fisttpll
inc
jp
inc
and
dec
sbb
insb
dec
loope
addr16
je
into
jle
mov
faddl
pop
cli
add
fnsetpm(287
push
outsb
pop
adc
shl
add
movsb
jle
xor
inc
add
sub
jno
addl
bound
dec
adc
xor
pop
movsb
and
outsb
call
push
mov
xlat
dec
xchg
add
jge
fwait
inc
ret
aas
cmp
pop
outsb
pusha
mov
idivl
pusha
mov
jp
jge
test
add
call
es
call
imul
xor
insb
xchg
adc
inc
imul
in
cmp
dec
xor
rcll
jmp
leave
sbb
mov
jl
mov
mov
nop
test
xchg
rcrl
cltd
les
jns
mov
pop
xchg
dec
xor
jns
pushf
fxch
hlt
in
mov
cli
jnp
enter
sbb
sbb
mov
aaa
inc
jmp
pop
jae
push
jmp
sub
and
lods
cmpsl
nop
aad
mov
addb
xor
xchg
js
inc
xor
mov
dec
cmpsb
daa
lahf
iret
pop
addr16
push
call
addr16
cmp
outsb
fdivs
mov
lahf
or
sub
scas
ret
mov
push
sbb
divb
xchg
int3
pop
jo
pop
sub
and
bound
loopne
cld
sub
mov
pushf
pusha
data16
add
mov
xchg
fmull
xor
xor
jb
test
sar
call
sub
xchg
jle
dec
xchg
faddl
inc
shl
int3
adc
into
pop
push
mov
into
test
add
xchg
dec
fisubs
cwtl
clc
aas
pop
lret
in
mov
push
icebp
ljmp
xchg
pushf
sti
mov
sbb
inc
fwait
outsl
jl
js
and
rclb
mov
mov
sbb
inc
sub
ds
test
popa
jle
bound
mov
movsb
cmp
jp
or
stc
or
aas
aad
sti
gs
pop
xor
mov
loopne
aam
xchg
into
jmp
cmp
and
call
movsb
sub
les
jl
pop
sub
or
pop
leave
test
adc
out
sarl
test
mov
cmp
and
gs
adc
lods
movsb
mov
sub
repz
adc
add
aad
xchg
jo
jmp
mov
xlat
lcall
inc
loop
and
pop
pop
mov
in
out
rolb
xchg
sahf
adc
arpl
jle
xchg
dec
in
cmp
sbb
xor
pop
lahf
fldcw
aas
std
xor
add
hlt
cmpsb
inc
sub
stc
dec
test
adc
xor
xor
call
dec
in
jle,pt
aas
adc
cmp
push
fwait
dec
xchg
adc
leave
sbb
jle
or
lret
jno
cltd
lret
arpl
dec
bound
adc
mov
stos
mov
xchg
shrb
fcoml
push
adc
fucomi
push
js
jnp
cmp
iret
push
pop
and
bound
push
nop
out
aam
loopne
cli
add
and
sbb
cmp
movsl
lcall
cmpsl
and
repnz
pop
jecxz
stc
hlt
mov
cmp
dec
adcl
rcrb
cmpb
sub
ficompl
jns
icebp
pop
mov
xchg
test
cli
push
fs
in
ljmp
rcl
and
mov
sbb
jmp
push
add
dec
xlat
pop
cmp
leave
mov
popf
or
sub
dec
je
int
outsb
rclb
mov
rorb
ss
lcall
mov
adc
ret
cmp
shll
lret
jbe
adc
rorl
dec
pushf
mov
xor
lret
loop
cmpsl
mov
loope
fcoms
push
aad
lods
or
dec
dec
or
insb
and
loopne
sbbl
into
cld
imul
inc
add
pop
adc
jo
clc
imul
push
mov
xchg
xor
xchg
test
loop
fwait
add
call
mov
orl
sahf
movsl
scas
dec
sub
sub
pop
lods
jo
ljmp
fcomp
idiv
mov
jp
push
jne
nop
mov
mov
ja
daa
jg
xchg
cld
rolb
push
insb
out
lret
in
ret
out
and
popa
cmp
shrl
lock
sbb
jle
fisttpl
cmpsl
inc
loope
add
xor
dec
imul
mov
fcmovnu
xchg
cltd
dec
or
cwtl
test
fidivl
sbb
inc
in
cmc
sub
xchg
adc
mov
xorb
scas
pop
mov
xor
fidivl
bound
inc
mov
out
loop
out
cmp
push
hlt
movsb
dec
or
add
inc
xor
rcrl
movsb
mov
push
jo
movsl
fildl
jp
pop
cmpsl
inc
lods
aad
cmp
xor
aam
inc
hlt
gs
test
aad
push
sub
push
popa
adc
adc
cmp
dec
sub
in
push
test
clc
and
pcmpgtd
orps
push
and
lock
or
sub
pusha
xchg
mov
jb,pn
fistl
hlt
cmp
inc
jge
add
test
enter
adc
inc
lods
movsb
dec
jg
rorl
lret
aas
and
push
dec
push
aad
mov
gs
addr16
jae
push
incb
and
outsb
aas
sbb
jp
jge
popaw
cld
iret
addr16
out
and
xor
lahf
loop
push
testb
outsb
push
jne
add
push
adc
xor
pop
fnstenv
cmpsb
ret
push
lahf
jnp
stc
push
lods
push
push
bound
inc
cmp
push
xor
jecxz
pop
mov
jae
ds
push
lahf
std
ret
pop
inc
jp
xchg
test
jmp
mov
xor
pop
xor
hlt
xchg
jnp
lods
andb
fisttpll
jge
inc
in
fdiv
xor
sbb
jl
dec
cmp
mov
cld
pop
cmp
sub
lret
lahf
insl
xor
mov
pop
out
or
mov
add
aad
pop
outsb
rcr
and
movsl
adc
dec
xchg
fnstsw
mov
test
inc
pop
sar
adc
adc
iret
add
dec
sub
push
icebp
push
jl
movsl
std
sti
sbb
push
mov
repnz
and
out
ljmp
sub
dec
subb
fs
mov
flds
sbb
add
inc
and
in
clc
adc
jg
arpl
adc
pop
aad
nop
lods
pop
daa
add
in
ds
lds
roll
test
sub
imul
dec
jmp
sub
push
xor
xor
jnp
movsb
ror
pop
mov
testb
in
neg
mov
cmpsb
gs
xchg
fs
jge
pop
stos
adc
ljmp
test
ficoms
push
imul
inc
dec
dec
sbb
lcall
aas
std
or
std
inc
lcall
add
push
test
inc
fs
adc
pop
cmp
iret
mov
les
imul
rorl
push
adc
mov
inc
cld
add
rcll
nop
ret
ds
sahf
outsb
inc
clc
fwait
add
pusha
or
fisubrs
push
loopne
inc
or
subb
ss
lahf
inc
dec
or
dec
addr16
scas
rcrb
mov
pop
stc
sbb
loope
lret
push
fistpl
fsubrp
dec
fiadds
add
neg
decl
fsubl
negl
fwait
adc
fsubs
repz
mov
movsl
data16
loopnew
popl
mov
sub
cld
jecxz
popa
jmp
mov
cmp
ds
mov
pop
outsb
in
sub
push
cltd
mov
mov
dec
pop
dec
push
add
pop
push
mov
jns
enter
mov
push
dec
fwait
in
xchg
outsl
inc
xchg
dec
cli
lods
mov
jg
xchg
jmp
add
mov
mov
subb
or
adc
mov
test
and
andl
dec
je
lret
xor
popf
test
xchg
das
outsl
pop
and
leave
insb
lea
jb
rcll
mov
gs
xor
es
daa
andl
dec
es
mov
add
mov
mov
scas
sahf
shrl
lret
in
pop
mov
je
clc
sub
push
jp
push
inc
xchg
mov
xor
daa
inc
adc
pop
jp
hlt
cmpsl
add
fstl
mov
sub
lret
bound
push
jae
dec
dec
and
subb
loopne
mull
hlt
jge
fcomps
fbstp
lds
insl
sub
push
fwait
std
shll
lret
addl
lds
popa
xchg
pop
inc
adc
shrb
jae
sub
push
mov
add
push
daa
ret
mov
inc
popf
dec
push
xchg
dec
mov
and
jecxz
mov
mov
sahf
testb
mov
ss
movsb
or
int
enter
pop
cltd
push
and
add
or
lret
ret
pop
test
pop
faddl
push
mov
xchg
and
adc
mov
sbb
stos
push
outsb
outsb
addl
cmpsl
loopne
add
mov
ret
dec
add
arpl
bound
imul
iret
int3
push
lock
sar
xchg
sub
inc
mov
cmp
dec
push
sub
pop
rcrb
loopne
and
jnp
adc
negl
dec
fcoms
mov
js
repnz
cmc
mov
or
mov
imul
or
and
lret
xchg
adc
aas
pusha
insb
pop
add
dec
js
sub
xor
sbb
hlt
pop
push
pop
int
js
sub
and
sahf
mov
cmp
cmpl
aad
out
lret
and
push
pop
mov
xor
test
hlt
xchg
push
and
add
sub
loope
je
ds
xchg
pop
and
insl
adc
jb
push
cmp
push
out
push
daa
movsl
pop
scas
rcr
dec
or
sub
jge
ss
movsl
or
push
sti
in
dec
sub
mov
xor
fnstsw
xchg
dec
and
push
dec
xchg
movsb
pushw
lock
inc
adc
loop
repnz
icebp
sbbl
sbb
popf
movsb
fidivrs
stc
and
outsl
pusha
inc
lds
outsl
loope
aas
mov
cli
shrl
pop
or
push
aad
push
mov
jmp
out
mov
sub
pop
pop
fld
faddl
adc
jae
mov
fisubrl
cmp
inc
or
lcall
iret
cwtl
rorb
jmp
sbb
or
cmp
mov
ret
nop
dec
sti
es
push
jb
add
sub
loopne
outsb
push
pop
lods
sbb
ret
mov
cs
push
testb
andb
daa
xor
stos
jnp
ds
rol
cltd
test
xor
in
leave
mov
sub
jp
lcall
pop
std
xor
push
ror
push
mov
xchg
mov
lret
rorb
in
lods
jg
push
popf
xchg
shlb
dec
sub
or
popa
add
orb
cmpxchg
xorb
leave
jmp
push
insl
sbb
cmc
fildll
in
lret
xor
lret
jb
jb
or
sub
pop
cltd
fsubrl
mov
xchg
fsts
pop
xor
jp
jle
push
or
mov
inc
mov
mov
repnz
pop
inc
add
add
aaa
aad
sub
pop
lods
jne
js
faddl
fs
push
ljmp
cmp
ficompl
gs
adc
add
push
mov
stos
dec
pop
dec
bound
push
leave
jecxz
nop
fcoms
mov
pop
cmp
mov
insl
stos
inc
push
mov
aaa
loopne
popf
test
lea
xorb
leave
and
fsubs
xor
pusha
outsl
icebp
dec
xchg
popa
das
jnp
adc
jno
push
cmpsb
out
into
sbb
jmp
and
outsb
adc
xor
mov
stc
cmc
pop
mov
sbb
aaa
add
add
push
pop
xchg
cmpb
xchg
mov
jno
stos
adc
mov
dec
fdivs
fldcw
popa
test
and
add
push
xorl
and
in
aam
sbb
xchg
out
dec
add
jecxz
out
testw
call
insl
pop
and
pop
sbb
pushf
xchg
add
xchg
jmp
stos
jbe
mov
ds
std
es
push
or
int3
and
xchg
dec
lea
cld
shlb
and
mov
das
cltd
sub
cmp
dec
sbb
mov
aas
pushf
add
es
dec
dec
push
xor
push
pusha
cmp
daa
pushf
or
fwait
lods
mov
into
add
inc
stc
push
dec
cmpsl
push
cmp
mull
add
subb
fwait
adc
cld
mov
cmpsb
out
mov
adc
hlt
cmc
call
test
mov
cmpb
sub
mov
mov
mov
adc
sub
sub
push
xchg
or
and
fcoml
mull
dec
push
outsl
push
xor
jns
dec
pop
arpl
aad
push
adc
sbb
cmp
pusha
xlat
sub
pop
or
sub
mov
data16
and
outsl
push
lock
icebp
pushf
loop
sarb
and
fucomi
and
sbbb
cmc
xchg
cmpsl
in
hlt
pop
lea
xor
xchg
mov
imul
sbb
mov
push
jne
pusha
lds
jno
push
mov
fcoml
sub
pop
push
and
fidivl
std
dec
mov
xor
jg
xchg
sbb
jle
in
addr16
push
mov
inc
movsl
jne
popf
aam
cmp
jns
pushf
add
dec
pop
aas
push
mov
into
sub
pop
dec
jns
in
pop
fmull
ret
push
std
je
lods
xchg
insb
and
and
mov
shr
je
xchg
loopne
cli
lahf
push
negb
jmp
andb
pop
andl
lods
mov
leave
das
xor
cmp
and
test
add
pop
mov
cld
inc
lret
faddl
sub
mov
jo
xchg
xchg
movsb
movsb
adc
jle
in
jg
mulb
inc
lods
cltd
pop
jle
sub
cmp
sub
fidivrl
pop
inc
cmp
jns
cmpsl
enter
insb
xchg
mov
aas
xor
cltd
rcll
xchg
jb
gs
pop
fs
xchg
cltd
pop
ss
mov
cmp
les
aam
hlt
mov
vmulpd
sbb
sub
out
enter
xchg
repnz
scas
and
adc
cli
lcall
xor
cmp
sbb
sbb
stc
repz
andb
fwait
or
repnz
fcomp
dec
or
pop
in
lahf
jo
mov
arpl
and
or
mov
sti
mov
mov
push
icebp
jle
bound
or
test
fsubl
out
mov
mov
jge
xor
mov
push
inc
insl
lret
std
xor
cli
push
lds
enter
std
insb
movl
adc
test
addr16
cltd
lea
loope
dec
addb
pop
jg
mov
and
lret
sub
sarb
rcll
cmp
add
adc
imul
xchg
xor
push
xlat
push
gs
ret
fs
int3
sbb
add
movsl
push
and
pop
popa
push
incl
icebp
call
jp
and
dec
iret
stos
mov
dec
push
aad
shll
mov
sbb
add
inc
lcall
add
cmp
stos
mov
cmp
add
sbb
cmp
insl
ja
mov
mov
dec
gs
sbb
pop
lea
jae
jno
cs
mov
js
sub
js
xor
pushf
stos
cld
imul
js
pop
lods
out
imul
sti
jle
push
xlat
pushf
xchg
lret
mov
mov
pop
push
mov
cmpb
test
insb
fisubrs
mov
pop
and
shlb
pop
fnstcw
push
ret
mull
push
mov
xchg
scas
push
xor
or
xchg
addl
flds
push
and
or
mov
xchg
loope
dec
enter
in
dec
bound
cli
mov
add
mov
dec
add
add
jl
adc
ljmp
cs
pop
sub
sub
jae
and
imulb
enter
ret
push
mov
dec
enter
mov
inc
sub
fidivrl
sbb
add
lds
jo
inc
es
outsb
stos
imul
jnp
mov
push
xchg
cmp
ret
mov
test
push
push
push
and
sbb
sub
pop
js
inc
mov
xchg
out
outsb
fisttpl
les
push
mov
out
dec
leave
or
arpl
xchg
loop
repz
test
or
add
or
outsl
int3
movsl
jg
push
push
cmp
incb
test
jae
ja
jnp
in
test
aaa
mov
xchg
push
pop
or
mov
cmp
pop
clc
mov
pop
fcmovnbe
pop
cmp
call
js
flds
lcall
mov
stc
cmp
lea
rolb
rcrl
hlt
push
test
mov
sub
dec
flds
dec
sub
pop
fdiv
inc
mov
fmuls
das
fdivr
shr
in
push
mov
add
scas
pop
dec
addr16
xchg
jmp
je
test
test
xchg
cmc
lods
xchg
xchg
xor
pop
shll
push
push
cmpsb
cli
test
mov
add
xchg
add
mov
push
pop
xchg
rclb
bound
imul
xchg
jmp
add
adc
icebp
inc
loop
testl
pop
mov
push
cli
loopne
outsl
sbb
inc
mov
pop
jb
cmc
sti
and
data16
mov
mov
mov
cmp
xchg
mov
mulb
frstpm(287
das
lret
out
pop
das
push
in
push
adc
cmpb
arpl
adcb
stos
lea
jae
movsl
fdivs
xor
dec
or
popa
dec
pop
data16
inc
mov
fldpi
mov
out
inc
data16
fldcw
test
dec
stc
xor
inc
push
and
push
cltd
ret
pop
and
jno
push
mov
ja
sbb
inc
cmpsb
pavgw
sbb
sbb
and
dec
adc
mov
mov
sarl
ljmp
pop
pop
adc
ja
jl
dec
outsl
xor
scas
popf
pop
inc
cmp
loop
aaa
data16
subl
cltd
les
pop
imul
sub
fstl
outsb
adc
rcl
lret
icebp
jne
cli
jl
xor
xchg
xor
cmpsb
out
stos
and
dec
sub
mov
fcompl
nop
sbb
iret
fsubl
mov
adc
add
lods
lods
mov
imul
subl
sti
test
sbb
pop
insb
adc
aaa
xor
mov
mov
jmp
data16
lods
addr16
fisubrl
enter
adc
or
sar
mov
adc
pusha
mov
sub
repnz
cs
les
xchg
fnstsw
mov
cmpsl
sub
push
push
adc
adc
out
sar
mov
mov
ds
pop
sbb
mov
mov
jge
lods
in
sbb
outsb
clc
pop
sbb
cmc
gs
rcrl
daa
add
test
mov
mov
push
lret
pop
xor
pop
bound
xchg
mov
dec
sub
ds
xchg
xchg
orb
push
mov
ljmp
lea
xchg
idiv
adc
pop
aam
mov
xchg
in
push
ficompl
add
push
dec
scas
dec
movsl
jne
dec
cwtl
in
mov
mov
pop
push
dec
test
imull
shl
enter
push
fidivl
add
mov
mov
enter
pop
and
pop
and
push
push
insl
add
pushf
out
in
xchg
ret
and
adc
lods
mov
sub
movsl
test
or
fidivrl
add
and
mov
push
add
lret
mov
or
stos
je
dec
push
test
inc
inc
ficoms
cmc
adc
push
cmp
dec
adc
icebp
mov
dec
dec
aad
loop
xor
cmp
mov
aam
add
mov
cli
enter
or
dec
adcl
lret
sub
push
frstor
xor
cltd
shlb
lcall
fsts
pmaxsw
rclb
orb
pop
insl
mov
cmp
jne
mov
cmp
and
lea
movsb
and
dec
inc
fwait
in
and
subl
adc
jge
cmc
sbbl
rcl
das
or
xchg
xor
xchg
xchg
jne
cmpsb
push
push
or
ds
sub
bound
jg
mov
or
xchg
inc
or
pop
mov
aad
scas
cmp
xor
jle
jl
fmuls
dec
fdivl
xchg
adc
pushf
pusha
std
xchg
sbb
jno
push
mov
lds
mov
js
cld
cld
sbb
jne
mov
scas
aam
and
xchg
fimuls
aas
inc
xchg
mov
adc
scas
mov
push
cld
mov
mov
xchg
mov
imulb
popf
pusha
mov
mov
lock
and
cli
into
call
sbb
jge
pushf
push
and
hlt
pop
mov
pop
mov
xor
std
dec
jg
aad
cld
dec
bound
fdivrl
pop
je
sbb
xor
pop
cmp
insb
cs
cli
pop
xorl
pushf
pop
xor
cmp
mov
add
mov
inc
mov
pusha
dec
mov
push
orb
rclb
ds
jp
mov
mov
lods
jbe
xchg
test
mov
jmp
scas
test
mov
stos
clc
xchg
adc
adc
and
test
rol
repz
fisubrs
dec
pop
jno
repz
jg
cmpsl
and
add
aam
cli
les
pop
sub
pop
push
cltd
call
jns
popf
and
out
lods
push
sarb
addb
mov
mov
jo
jae
in
mov
inc
in
loopne
mov
outsb
test
adc
add
repnz
aaa
pop
ss
hlt
mov
adc
out
test
pop
pop
dec
in
cmpsl
arpl
jbe
mov
xchg
rol
sub
lds
xchg
cwtl
in
dec
xor
pop
jmp
das
lahf
jmp
jp
jne
push
lret
aam
aad
dec
das
mov
xchg
jns
mov
jbe
mov
jle
sbb
nop
mov
into
sbbb
mov
adc
add
or
cmp
pop
mov
pushf
pop
xchg
mov
inc
popf
lret
add
ret
push
loope
sahf
insb
mov
mov
in
pop
inc
pop
ret
xor
pop
inc
sbb
repnz
mov
mov
jl
cwtl
inc
xor
or
fmull
out
sub
pop
cwtl
cmc
test
ret
sti
rcll
sti
lods
cmp
mov
push
fsub
jmp
add
inc
inc
fdivr
hlt
add
lods
xchg
add
inc
pop
test
pushf
mov
fwait
test
pop
and
mov
fisubrl
pop
and
in
addr16
push
je
mov
clc
mov
mov
or
xor
pop
insb
sbb
hlt
mov
mov
add
mov
sbb
rol
cli
lods
jmp
jne
mov
adc
nop
lock
xchg
stc
test
pop
lods
or
cld
cmp
in
sbb
sub
inc
lock
jae
jae
in
pushf
adc
iret
sbbb
inc
es
pusha
sbbb
ljmp
xchg
pop
xor
icebp
mov
mov
jl
lods
xchg
add
inc
popf
loopne
dec
sbb
lds
dec
addr16
mov
push
lret
pushf
insl
addr16
bound
into
in
and
jae
pop
ret
stc
lcall
lds
xor
scas
add
ljmp
jae
scas
sbb
and
xor
sbb
movsl
or
divb
fcomps
dec
adc
das
dec
mov
add
mov
sub
je
sar
lods
mov
add
loop
notl
push
add
adc
adc
add
dec
add
inc
cli
loop
dec
stos
pop
pop
xchg
fildl
mov
and
dec
add
lcall
hlt
xchg
sbb
test
xchg
mov
nop
push
jbe
jmp
and
push
dec
dec
nop
dec
movsb
mov
and
push
jl
enter
mov
in
xor
aam
sub
adc
add
lret
inc
mov
imull
clts
int
fisubl
sbb
pop
add
das
fsubrl
jne
out
sti
inc
push
lret
jecxz
ret
cmpsb
xor
mov
xor
lods
arpl
add
inc
insb
jmp
pop
mov
mov
repz
adc
jmp
xchg
and
cmc
jbe
cmp
fcmovnbe
repz
test
sahf
and
jnp
es
jecxz
xchg
and
lahf
int3
loop
mov
mov
push
imul
push
adc
and
mov
sbb
les
jg
shl
sbb
xchg
movsl
hlt
add
push
int3
xor
aam
lret
and
xchg
fisubrs
leave
stos
push
ds
clc
xchg
inc
bound
pop
idivb
cwtl
je
lock
xchg
and
xchg
cmp
push
inc
repnz
xor
movsl
xchg
ret
out
int
ficompl
add
stos
out
pop
xor
jmp
ret
push
cmpsb
pop
pop
cmc
mov
push
xchg
loope
jmp
sbb
scas
sbbl
pop
or
jne
in
out
jecxz
fstpl
add
sub
jmp
cmpb
dec
fwait
arpl
mov
cmp
sub
sbb
repnz
add
lea
pop
xchg
stos
push
jl
adc
adc
js
pop
test
stos
pop
xor
pusha
sbb
out
std
xchg
jbe
mov
insl
mov
push
test
cmp
dec
es
xchg
ret
jbe
cld
jecxz
test
andl
aad
jno
push
repnz
fmuls
xchg
ljmp
and
clc
insb
outsl
dec
lock
les
enter
js
outsb
and
mov
mov
mov
and
aad
stc
gs
mov
int
sbb
adc
mov
in
ret
sbb
insl
add
cli
stos
cmp
fstpt
inc
jmp
push
hlt
movsb
or
jbe
push
ja
mov
scas
mov
div
mov
or
rclb
sti
int3
fnsetpm(287
adc
add
rclb
inc
data16
xchg
jne,pn
loopnew
inc
ljmp
ficomps
aad
mov
xlat
call
cmp
leave
adc
xor
andb
xlat
cli
int
pop
pop
mov
sub
mov
lahf
addr16
xchg
sbb
xchg
mov
lret
ja
addr16
lret
stos
arpl
fisubrl
add
adc
inc
js
mov
xchg
xor
pusha
lea
sbb
sbb
push
into
push
into
jb
add
sahf
js
mov
mov
or
rorl
in
stos
cld
int3
push
and
jno
pop
cmpsb
mov
test
sarb
jbe
and
xchg
pop
insl
ret
lahf
mov
cmp
movsl
add
mov
mov
fdivrl
inc
push
jle
sahf
cmc
testb
xchg
lds
sbb
scas
adc
mov
or
fisubl
stos
repz
rcr
fucomp
adc
es
rorb
adc
pop
mov
ficoms
mov
fildll
add
outsl
jnp
outsb
inc
loop
rcl
scas
inc
shlb
jne
xchg
rcr
daa
pushf
push
cmp
leave
add
insl
mov
mov
cmp
mull
add
mov
cmp
inc
sbb
ficoml
inc
lock
popf
cmp
xchg
insl
xor
das
out
adc
or
imul
cwtl
or
stc
push
push
mov
mov
std
lods
rorb
stc
test
add
mov
push
jle
mov
sub
cltd
mov
shll
inc
jmp
fucomp
cmp
subb
insb
or
adc
out
add
out
xchg
icebp
ret
int
arpl
fisubl
imul
and
add
jecxz
aaa
outsb
cmpl
adc
sbb
mov
arpl
mov
loope
dec
stos
fcmovnbe
cmp
fs
cld
decl
test
stos
sub
push
cld
shl
cmp
negb
mov
ficoml
mov
mov
imul
sbb
jae
repnz
ror
and
or
jne
ret
outsl
mov
aas
or
mov
xchg
stos
scas
cmpsl
insb
leave
jl
rcrl
mov
adc
sti
fsubrs
sub
into
and
int3
xor
je
adc
dec
mov
or
jbe
in
repnz
fisubrl
sbb
dec
adc
lock
scas
test
push
dec
rol
test
pushf
mov
sbb
xchg
sti
mov
pop
mov
aaa
inc
mov
jae
cmc
mov
or
cld
je
pusha
ficompl
mov
test
pop
ret
dec
stc
mov
mov
aas
mov
add
push
jbe
jb
sub
enter
mov
ficoms
mov
stc
push
fmuls
xchg
inc
mov
sbb
jg
aas
out
pop
pop
iret
mov
pop
add
add
loop
mov
cmp
insb
mov
cmp
out
and
sbb
mov
test
lds
sti
pop
repnz
sub
cwtl
lods
add
out
movsl
mov
dec
mov
push
ret
decl
iret
or
cmpl
pop
and
inc
stc
xor
dec
lret
jnp
add
cmp
mov
scas
in
int3
add
adc
les
mov
aas
lahf
mov
mov
addb
out
nop
push
xor
adc
cs
and
adc
pop
xchg
push
stos
ljmp
popa
mov
or
xchg
add
clc
das
ss
movsl
lret
icebp
pop
pop
loop
int
mov
push
out
loopne
mov
imul
es
cmp
push
jbe
int
cli
mov
jb
push
cmpsb
xchg
or
insl
mov
and
sub
mov
sahf
sbb
outsb
loopne
jns
and
test
push
mov
and
sub
movsl
mov
shlb
test
rcl
ds
xlat
in
les
into
lea
xor
add
mov
shlb
dec
push
adc
test
lret
fidivl
shrl
lock
notl
repz
cmp
call
add
pusha
xor
lret
pushf
stos
in
cmpsl
leave
jae
sub
ja
jp
push
or
adc
pop
scas
clc
or
test
test
stos
ret
jle
lea
mov
xchg
cmp
dec
out
mov
mov
jae
icebp
jae
or
dec
push
xor
sbb
insl
repnz
lret
adc
ja
inc
ljmp
pop
pop
xchg
shlb
cmc
cmp
add
pop
lods
mov
mov
push
ljmp
cmp
in
call
and
cmc
sub
nop
or
aas
push
push
jecxz
out
sbb
icebp
dec
loope
jb
add
sbb
xor
xchg
ficoml
cmp
into
fucomp
mov
cmp
cwtl
sbb
add
inc
pushf
ljmp
pop
dec
xlat
lods
add
sub
push
test
xchg
movsb
cmpsb
pushf
push
ds
cli
adc
pop
mov
adc
xchg
or
stos
test
sub
push
psrad
xor
ja
les
inc
pop
push
aas
lret
pop
ret
test
loope
loope,pn
push
outsl
fstl
mov
mov
popf
scas
mov
cmpsb
outsb
out
jns
popf
jl
addr16
sti
movsl
aam
es
lock
cmpsl
loope
lret
sarl
push
sbb
je
ljmp
or
dec
ret
into
push
mov
adc
call
adc
fisubrs
repz
mov
sarb
jo
dec
dec
mov
enter
and
xor
lret
mov
mov
add
popl
cmp
push
andl
and
or
push
xor
sbb
dec
movsl
pop
sbb
inc
aas
mov
jmp
sbb
mov
mov
cmp
or
mov
pop
mov
ss
and
jbe
into
shl
mov
cmc
xor
std
subb
mulb
mov
lods
xchg
jnp
adc
pop
cwtl
sbb
stc
adcl
scas
inc
sbb
cld
dec
push
or
jle
xchg
jmp
jo
sbb
or
scas
jge
pop
call
push
fidivs
sbb
int3
fwait
and
int3
rolb
sub
cmc
dec
cmc
and
add
push
sub
stos
imul
int
cmp
add
cmp
push
ret
or
cmpsl
cmp
mov
hlt
and
sub
xchg
push
inc
mov
pop
stc
leave
sbb
mov
ret
insl
and
and
mov
xor
hlt
in
xchg
push
jb
movsl
dec
xchg
xor
mov
nop
enter
ljmp
mov
push
xor
iret
and
push
movsl
mov
cltd
lahf
add
mov
int3
fwait
push
sarb
test
mov
fs
ret
out
nop
ret
enter
pushf
jae
sbb
mov
insl
ja
inc
lahf
daa
lods
int3
imul
stc
adc
mov
xor
mov
pushf
inc
cmp
mov
mov
dec
stos
andl
pushf
or
jge
dec
inc
fs
add
scas
sbb
xchg
dec
mov
push
inc
jle
out
das
mov
sahf
cmp
and
adc
cmp
push
lret
push
lret
mov
xor
imul
or
push
in
jmp
arpl
xor
pusha
mov
loopne
sti
cli
adc
or
mov
das
lret
lods
and
pop
mov
cmpsb
shlb
inc
push
adc
dec
xchg
popf
jl
adc
push
push
dec
mov
adc
lods
je
fiadds
fcoml
in
mov
scas
mov
fidivs
fdivp
sbb
add
pop
mov
filds
inc
sahf
enter
aam
movsb
and
cmp
push
ljmp
mul
mov
mov
sbb
push
out
cmp
or
pushf
loope
data16
push
mov
adc
push
pusha
rol
cmp
add
inc
nop
outsb
mov
pop
imul
jo
dec
test
lcall
fmuls
xor
outsb
dec
jns
and
hlt
push
fbld
jbe
outsl
lcall
stos
pop
pop
fs
xor
cmp
and
push
xor
daa
imul
sbb
mov
ljmp
sbb
or
inc
int
movsb
add
in
lea
adcl
std
sub
inc
add
orb
xor
cmp
xchg
push
mov
insl
ret
mov
jle
sti
adc
stos
or
ret
pop
xchg
pop
lods
bound
into
stos
aam
or
xchg
or
scas
xor
insb
lahf
adc
out
mov
add
xor
loop
adc
push
lret
push
sub
xchg
sub
andb
mov
inc
xchg
adc
mov
ficomps
test
pop
inc
lods
adc
jnp
mov
out
and
mov
pop
or
mov
add
insb
jbe
lds
mov
jp
dec
push
jns
mov
sub
jnp
adc
or
loope
in
pop
add
xchg
add
xchg
and
popa
xor
xchg
ljmp
mov
sub
lahf
dec
pop
inc
cmp
pop
add
mov
out
test
jmp
les
push
add
test
xchg
sub
lds
jp
mov
mov
push
inc
in
fistps
push
adc
xor
and
repz
pop
sub
and
pop
push
rcrl
sub
xchg
lret
mov
std
loop
fmull
fnsetpm(287
lods
out
imul
rcr
xchg
add
pusha
cmp
mov
in
ljmp
push
sbb
jmp
and
sti
loop,pt
test
pop
push
lret
out
movb
clc
sbb
mov
jae
mov
dec
mov
pushf
leave
add
push
mov
sub
pushf
gs
jnp
aam
mov
mov
dec
das
mov
dec
aam
jp
add
loop
nop
cmp
outsb
roll
mov
std
lods
pop
repnz
mov
je
sub
cmc
test
xlat
addr16
clc
sarl
jge
jge
mov
stos
shr
sti
imul
cmp
pop
inc
ljmp
roll
or
push
xor
xchg
push
xchg
mov
bound
lock
loope
mov
pop
decl
es
xor
jns
mov
aaa
iret
loop
mov
jp
mov
inc
insb
ret
xchg
cli
sbbl
cs
lods
add
jo
push
xchg
inc
repz
js
ficoms
mov
out
sub
inc
mov
std
inc
inc
movsl
lods
movsb
mov
inc
leave
mov
sarl
jne
lret
outsl
ljmp
cwtl
mov
adc
dec
into
sahf
mov
test
and
sub
in
cmp
lea
call
mov
push
cmp
jae
lahf
inc
leave
movl
addr16
js
push
leave
test
cwtl
add
in
fstps
push
mov
sub
int
jne
xor
push
std
adc
xor
iret
ljmp
sbb
loope
push
inc
or
lret
adc
push
mov
jmp
xor
mov
js
xchg
mov
dec
push
and
imull
push
leave
out
sub
sbb
lods
cs
imul
and
cld
fs
ret
ljmp
mov
imul
push
pop
vpunpckhdq
xlat
ret
sub
leave
or
mov
popa
cmpsl
js
test
cmp
ja
roll
arpl
fwait
and
mov
mov
out
out
loopne
imul
mov
loopne
mov
adc
test
or
sbb
into
sarl
insb
cmp
pop
stos
xor
dec
inc
int
push
jns
dec
js
and
xlat
iretw
pop
testb
fs
pop
insl
jne
notl
mov
xor
aam
bound
dec
iret
mov
push
jno
cmpb
xchg
push
enter
andl
dec
cwtl
and
or
push
pop
je
daa
cmp
pop
mov
dec
cmp
out
and
xchg
or
iret
push
in
mov
pop
inc
daa
aaa
outsl
jbe
inc
mov
lahf
xor
insl
jmp
repz
test
jecxz
out
jns
lds
pop
lahf
lods
jne
int3
adc
outsb
mov
aad
ds
insl
test
mov
mov
nop
cmp
cs
jbe
nop
adc
inc
ds
and
nop
or
mov
lods
aas
and
adcl
sbb
xchg
leave
fistpl
jg
dec
lcall
xchg
fistps
fiaddl
imul
pusha
or
cmpsl
xchg
sbbl
mov
inc
push
or
lods
mov
or
filds
cld
jg
in
stos
adc
in
mov
pushf
in
dec
ss
and
sub
push
dec
sub
push
shrl
mov
scas
or
push
insb
dec
mov
testl
inc
hlt
inc
rorb
test
ljmp
pusha
sbb
and
dec
insb
jle
mov
mov
dec
int3
mov
in
lods
cltd
mov
inc
movsl
loopne
mov
inc
ror
pop
mov
gs
sbb
lret
jg
popf
sub
sub
mov
mov
cmc
cli
jno
xchg
push
dec
out
out
mov
gs
mov
mov
clc
bound
pop
test
or
arpl
cwtl
scas
sbb
pop
daa
daa
loop
xor
and
mov
jle
dec
xor
inc
jno
dec
enter
cmp
bound
xchg
inc
scas
jns
adc
ficomps
outsb
mov
mov
and
fnsave
jp
jmp
dec
jecxz
aas
jne
imul
xchg
lds
xor
jmp
sub
insb
fbstp
cmp
mov
test
aam
cmp
ljmp
xor
pop
or
pop
xor
push
movsl
loope
test
popa
loope
hlt
adcb
sub
ljmp
ljmp
outsb
sub
aam
ret
movsl
sbb
jb
mov
or
inc
jp
rclb
in
sub
scas
cmpsl
enter
jp
mov
div
mov
call
jge
arpl
lods
aaa
shlb
insb
cmp
outsb
fs
lret
push
push
mov
xchg
divl
jle
in
push
pop
adc
xchg
push
popa
es
xchg
pop
dec
or
rcrb
mov
add
jl
and
scas
addr16
fdivrp
scas
loopne
dec
xor
test
insl
xchg
mov
jmp
or
xchg
gs
cmp
inc
xchg
loop
jnp
sub
add
xor
pop
mov
fs
mov
fbstp
scas
test
es
neg
mov
pop
imul
std
dec
fcomps
mov
dec
cmp
testb
pop
or
add
fisttps
rclb
in
lret
jb
fmull
sbb
mov
jno
jo
fildl
fnstcw
bound
mov
push
fucomi
xor
cwtl
shll
pop
mov
rolb
push
mov
jbe
sbb
inc
pop
xchg
jge
out
add
adc
test
adc
out
loopne
add
sbb
push
out
insb
push
push
inc
sti
xchg
and
clc
push
dec
inc
mov
fldenv
xor
push
mov
lret
mov
aad
mov
cmp
jb
cwtl
or
movb
pop
adc
filds
es
arpl
inc
or
popf
jnp
es
push
and
out
in
mov
pop
out
or
xchg
add
xor
pushf
jnp
push
into
fildll
sti
inc
iret
icebp
mov
mov
xchg
and
xor
outsb
mov
dec
imul
sub
mov
sti
mov
mov
mov
es
inc
ss
scas
fidivrl
cmp
rclb
dec
xor
fwait
out
out
sub
fidivs
pop
loop
out
ss
test
jo
push
push
dec
stos
or
dec
leave
and
insl
ss
pop
data16
dec
push
es
mov
cmp
or
pusha
mov
or
iret
lcall
mov
fidivs
pop
ss
fisubl
inc
notb
or
push
and
sbb
adc
ret
pop
xor
push
data16
inc
mov
mov
push
sahf
add
daa
inc
out
lret
les
loop
dec
iret
pop
add
popf
xchg
pop
xchg
add
outsb
lahf
addb
push
loope
test
xor
out
add
sbb
inc
add
cmc
sbb
leave
icebp
mov
lods
mov
cmp
addr16
aad
push
ret
sbb
lock
xchg
pop
push
sahf
loop
lcall
jne
pop
dec
lcall
xchg
mov
movsb
ret
mov
sub
fidivrl
out
roll
call
orb
btr
jmp
pop
mov
cmpb
push
pop
lret
cmp
push
cld
or
stc
xlat
hlt
mov
mov
int
push
jne
mov
mov
adc
mov
pop
shrl
push
push
pop
and
push
in
push
sub
mov
jns
int
cmp
scas
pop
js
jno
daa
jmp
fidivrs
push
adc
jge
dec
lock
imul
xor
cwtl
insb
jmp
ss
out
mov
mov
dec
mov
jl
fimuls
push
ljmp
out
data16
popa
mov
lret
mov
call
adc
xchg
movsl
lret
push
mov
out
icebp
rcrb
pop
inc
sub
jge
pop
xchg
inc
dec
fstpl
push
jl
into
rcll
test
sbb
inc
push
mov
or
movsb
frstor
out
inc
cmp
ljmp
test
clc
ja
pop
les
mov
stos
cmpsl
sahf
das
fnstcw
sbb
sbb
lahf
adc
push
xor
xchg
int3
jne
dec
jl
dec
push
sbb
cmpsl
gs
nop
jae
adc
push
addb
or
ja
fimuls
cmp
adc
xchg
pop
ds
push
xor
out
push
sarb
mov
mov
pop
push
push
push
call
fwait
daa
imul
and
push
std
lahf
jmp
push
ret
mov
mov
arpl
std
mov
cmp
mov
das
inc
xorb
std
mov
mov
test
add
dec
mov
jg
cmp
xor
cld
shll
loope
add
lcall
loope
enter
in
jo
std
outsl
xor
inc
lret
outsl
mov
or
or
cwtl
cmpsl
aaa
cmp
push
jg
add
mov
lds
lds
sbb
xchg
dec
and
adc
sub
push
or
insl
aad
shl
ss
shll
inc
push
cmc
leave
test
jmp
rcr
xor
call
repnz
mov
test
out
inc
inc
sbb
jmp
mov
xchg
jae
mov
das
je
xor
cmpsl
xchg
adc
pop
call
xchg
pop
xchg
cmp
sub
lock
mov
movsb
push
test
popa
shrb
mov
push
or
pop
dec
movsl
jbe
inc
pop
mov
mov
mov
xchg
inc
mov
push
rorb
mov
add
insb
jge
mov
mov
inc
rcrl
clc
mov
repz
sti
or
and
or
in
adc
xchg
rorl
push
mov
scas
dec
test
cltd
or
cmp
ret
lahf
xor
subl
ret
bound
pop
sbb
push
add
fwait
lret
jae
pop
out
outsb
test
and
add
lcall
pop
jg
jecxz
in
push
lock
push
fs
jecxz
jmp
jne
ja
hlt
fistps
sti
fmull
cmc
adc
or
mov
test
add
outsl
sbb
data16
jg
push
cmp
inc
jne
xchg
xchg
aaa
push
sub
push
or
in
jle
roll
dec
jb
adcb
fists
sbb
mov
in
fwait
leave
sub
cmpsb
imul
adc
addr16
xor
inc
push
cmp
fwait
jae
scas
ljmp
mov
push
ss
and
jmp
adc
adc
scas
pop
sti
scas
push
xor
rcrl
sub
mov
rorb
ljmp
sub
add
addb
cld
imull
jnp
roll
fstpt
dec
xchg
jl
ds
push
pusha
mov
adc
cmpsb
out
out
int3
fcoml
in
sbb
sahf
pop
cmp
test
fisttps
sub
into
testb
leave
jge
shlb
das
es
daa
in
sbb
jle
dec
scas
adc
push
fwait
mov
or
jmp
add
lds
lea
dec
lcall
mov
pop
stos
jo
testb
xchg
pop
lcall
bound
add
jl
aad
cmc
js
aas
stos
xor
test
cmpsb
push
call
popf
pop
data16
in
in
xchg
xchg
mov
scas
es
sub
jb
testl
cmp
call
stos
fidivl
out
in
or
lret
mov
cmovne
and
inc
fistpl
in
or
mov
dec
fs
orb
dec
adc
loope
cmp
sub
dec
ret
xchg
data16
insb
divb
sbb
iret
or
pop
adc
lods
out
clc
add
into
and
push
jl
push
jp
in
ljmp
test
pop
or
lods
mov
sub
call
ss
push
stc
mov
mov
or
push
loop
jne
mov
push
jae
sar
pop
dec
mov
xor
add
mov
pushf
pop
pop
mov
jle
xor
aaa
leave
xor
sub
jecxz
lods
xchg
push
mov
sub
ja
pcmpeqw
inc
add
cmc
inc
in
cmpsl
adc
in
in
mov
mov
mov
sbb
sbb
fwait
sbbb
lock
clc
inc
add
pop
in
mov
cmpsb
sub
mov
fadds
fmuls
cmp
sbb
fcomi
mov
orl
adc
ljmp
lea
or
jl
inc
and
push
cmp
mov
sarb
out
push
loope
jle
leave
sbb
aad
fcoms
aas
push
mov
mov
mov
pop
push
push
mov
fcmovnbe
scas
lret
lea
frstor
sbb
mov
aam
ror
inc
sahf
js
xor
add
cwtl
nop
loopne
movsb
xchg
in
fmull
dec
push
rcrl
xchg
daa
leave
push
mov
aaa
cltd
icebp
mov
out
pop
xchg
lea
mov
cmc
cmp
test
xor
in
inc
cmp
pop
bound
push
jno
xchg
add
lret
cmpsb
and
push
int
outsl
dec
mov
nop
jg
pop
inc
insl
sarl
sbb
and
inc
les
cmp
mov
jo
aam
inc
pop
dec
loop
stos
and
flds
aaa
pop
jnp
std
vpaddw
aam
popa
dec
movsl
inc
aaa
or
sbb
xchg
ficoms
or
mov
dec
jmp
cmp
xlat
shlb
or
adc
sub
pop
jno
fdivrp
outsl
test
and
push
mov
or
fstps
mov
sahf
dec
notb
push
in
sbb
dec
fistps
idivb
xor
lret
scas
dec
sub
lods
test
test
mov
push
jne
rolb
rcrb
movsb
mov
cmp
aas
nop
aad
jno
outsb
dec
fdivr
cmp
mov
subl
sbb
push
int
mov
packssdw
cltd
mov
repz
imul
mov
cli
movsb
out
mov
imul
jno
adc
mov
jle
stos
adc
stc
cld
cli
lcall
out
in
je
icebp
sbbl
outsl
mov
add
pop
sub
pop
arpl
or
nop
push
push
ja
xor
pop
mov
mov
push
outsl
fs
imul
and
aaa
add
mov
xchg
pushf
sub
hlt
repz
push
fcmovnbe
pop
inc
cltd
mov
addb
jo
mov
xchg
fwait
enter
sar
dec
icebp
jo
and
cmp
ss
movzwl
lcall
pop
fs
mov
call
jo
adc
rcrl
decb
insb
mov
push
aaa
pop
cmpsl
pop
sbb
xchg
sub
pop
xchg
int3
jne
sub
scas
pop
hlt
jbe
fucomp
test
les
jle
enter
mov
out
fcmovb
jbe
int3
or
adc
addb
inc
out
enter
adc
out
add
xor
stos
fdivp
pop
mov
clc
or
xor
iret
in
inc
mov
call
push
jge
add
icebp
adc
cmp
or
das
xor
pop
rcrb
lock
mov
cmp
dec
add
xor
sbb
out
inc
mov
adcl
dec
insb
js
retw
adc
sub
stos
stc
fwait
lahf
cmp
xchg
aam
mov
jbe
aaa
pop
inc
cmpsb
xchg
orb
lea
mov
pop
xor
je
dec
pop
aaa
jmp
sub
and
rclb
mov
cmc
in
push
cmp
les
or
inc
xchg
in
inc
cmp
lods
pop
std
repnz
mov
sarb
dec
jb
popa
add
sbb
les
adc
in
push
std
xchg
andl
fimuls
mov
fwait
cmp
subl
sbb
fwait
xor
sbb
cmp
adc
xor
cltd
aad
popf
mov
repnz
push
movsl
ret
mov
test
push
xlat
xchg
pop
adc
or
jo
xchg
adc
hlt
lods
js
or
cmp
rcl
aam
repz
repz
push
aad
lock
bound
comiss
dec
fldl
das
dec
or
sub
xchg
dec
xchg
push
add
jecxz
mov
and
sub
int
and
outsl
pop
mov
pop
mov
enter
shll
lods
shll
imul
mov
out
aam
in
mov
cmp
push
inc
xor
dec
xor
cmp
pusha
inc
xchg
int
and
popa
jae
bound
xchg
pop
mov
call
das
imul
mov
push
jecxz
jbe
adc
shrb
pop
loopne
mov
pop
insl
js
jb
cld
fnsave
push
pop
rcll
pop
out
lret
jno
jmp
dec
push
iret
jno
addr16
aas
clc
movsl
hlt
sub
push
add
or
insl
ss
scas
add
inc
and
sub
dec
or
add
lea
lcall
xchg
stos
add
pushw
push
push
pop
and
fiadds
mov
or
outsb
lcall
mov
mov
das
mov
cmp
aas
xor
add
cmp
xor
fwait
or
sti
mov
or
ja
popf
cmp
in
mov
jbe
dec
mov
xor
mov
imul
push
cmc
dec
movsb
push
pop
movsl
outsb
xchg
aam
mov
sbb
cmc
mov
sahf
divb
sbb
push
or
in
mov
sbb
mov
pop
iret
arpl
sarb
mov
jp
xor
aad
jns
dec
les
or
shll
jecxz
xchg
pop
jb
push
inc
jle
mov
cmp
aad
loop
dec
lret
jge
jp
sarl
sbb
mov
mov
push
pop
mov
mov
and
mov
add
hlt
xchg
inc
push
cmpsb
arpl
stos
test
mov
jp
das
orps
pop
pop
std
cmp
cmp
xchg
jb
sbbb
pushf
loope
adc
cltd
lock
pop
loopne
rorb
xor
xor
mov
sbbb
nop
sbb
push
stos
push
xor
hlt
iret
int
xor
or
sbb
out
cmp
ret
xchg
mov
pop
out
movsb
pop
or
lret
xor
push
dec
movsl
jae
dec
out
jl
pop
imul
add
or
ret
push
jo
outsl
cld
and
jae
out
cmp
add
enter
jp
add
mov
pop
inc
pop
mov
sub
or
adc
je
mov
fnstsw
and
mov
cmp
inc
filds
dec
jns
xor
xlat
test
mulb
xchg
push
xor
sbb
pop
outsl
repnz
jb
or
repnz
or
outsb
xor
mov
jns
insb
mov
mov
xchg
dec
mov
push
mov
jnp
rolb
push
push
es
sub
jg
pop
and
sub
mov
jns
sub
cmpsb
sub
xchg
and
pop
inc
icebp
cmp
in
insb
gs
jle
jecxz
stos
mov
mov
cmp
pop
pop
inc
sub
or
ljmp
aas
cli
dec
jg
jge
mov
mov
sbb
inc
stos
int
inc
jo
es
sahf
sahf
dec
pop
mov
bsf
xchg
add
adc
bound
pop
movsl
inc
jecxz
das
rcrb
cmp
or
out
xor
cli
mov
dec
inc
sub
or
or
jnp
clc
add
and
rcrb
push
imul
adc
movsb
stc
test
xchg
jp
mov
inc
pop
movsb
push
dec
out
repz
pop
stos
sahf
and
add
test
xchg
xchg
lds
fcoml
fidivl
mov
fidivs
jae
dec
in
rorl
inc
xchg
mov
fisubrl
mov
pop
pusha
xlat
cmpsl
jo
fwait
stc
mov
cmp
rclb
push
pusha
aaa
xor
dec
aaa
aaa
lods
push
jmp
dec
flds
ds
mov
mov
movsl
sbb
and
push
jmp
fimull
push
pop
mov
cmp
mov
dec
xor
ds
fistps
gs
lods
dec
jp
loopne
icebp
int
fistpl
pop
lahf
xor
iret
stc
loope
outsb
outsb
subb
lods
push
test
cwtl
adc
push
mov
push
mov
nop
push
shr
push
sbb
insl
out
in
js
leave
sub
test
psrlq
or
xor
fbstp
scas
adc
jb
push
push
flds
add
cltd
sbb
fwait
cld
test
lret
cmp
pop
outsl
enter
dec
fucom
mov
xor
cmp
xor
mov
dec
adc
fmulp
jne
pop
cmp
jge
xor
xchg
nop
xchg
lea
xchg
je
mov
mov
pop
popa
into
fnsave
sbb
in
std
scas
sbb
push
loope
std
cmp
sub
dec
hlt
cmp
popa
jbe
pop
push
dec
sub
and
xor
xor
mov
cwtl
mov
cmp
mov
fstl
pop
into
adc
mov
das
cmpsb
clc
sahf
lds
cwtl
pop
shll
xor
int3
mov
pop
leave
and
jbe
divl
inc
push
lahf
sti
iret
pop
test
jno
adc
les
mov
inc
xchg
mov
add
push
jno
jbe
fwait
xor
adc
mov
xchg
mov
fnstenv
push
stc
movsl
xchg
push
sub
push
jmp
adc
enter
and
mov
jle
pushf
xor
jl
jmp
rol
int
outsl
cmpl
and
lret
je
cwtl
cmpsl
xchg
push
cwtl
clc
xorb
outsl
stos
loope
mov
jl
sbb
or
pop
inc
out
mov
jb
orl
int
iret
arpl
mov
xchg
mov
xlat
ja
push
add
pop
test
les
lods
scas
pop
outsb
lahf
mov
mov
mov
rcr
dec
pop
xchg
xor
repnz
mov
mov
jnp
and
pop
dec
daa
cmp
aad
fiaddl
or
inc
xor
bnd
mov
outsb
lahf
push
mov
nop
ss
sbb
fcomip
repnz
xchg
aas
mov
or
idiv
pop
mov
mov
loop
andl
loop
sub
icebp
push
hlt
adc
sbb
dec
sbb
mov
cmp
stc
mov
or
mov
xor
inc
mov
stc
mov
sbb
mov
fidivs
cli
test
and
xchg
lods
cmpsb
out
ret
and
stc
daa
into
jbe
jecxz
in
aad
mov
repz
xchg
sub
shrb
or
push
cmpsb
xor
inc
aam
lcall
loop
sahf
push
cmp
push
icebp
bound
or
cmp
stos
or
fs
add
popf
push
lds
dec
or
sahf
mov
mov
sub
xorl
arpl
stc
xor
shll
lds
je
add
xchg
cltd
mov
push
sbbl
cmp
cmpsl
cltd
dec
xorl
cmp
inc
mov
lock
test
jo
push
xchg
jecxz
mov
call
subb
add
push
pop
ds
bound
movsb
lcall
mov
jae
test
adc
dec
cmp
sub
cmovae
insb
mov
ds
cmc
shrl
cmpsl
test
jbe
pop
inc
add
inc
addr16
hlt
inc
clc
pop
paddsb
icebp
dec
push
idivl
movsb
lret
xor
mov
inc
jnp
xor
sub
pop
hlt
daa
xorl
sub
mov
scas
loope
test
ret
xorb
sahf
xor
daa
cmpsl
add
pushf
xchg
dec
push
imul
jge
xchg
pop
aad
fwait
add
shrb
hlt
fidivrs
pushl
lock
pop
and
pushf
jne
movsb
out
loopne
daa
cmpl
jo
test
jg
and
xchg
mov
cmp
mov
movsl
outsb
sbb
cld
xor
sahf
sti
scas
std
mov
bound
sub
sub
sbb
shr
sub
adc
sbb
pop
dec
lret
pop
mov
shll
in
scas
dec
push
rcr
xchg
jge
cmpsb
jle
fwait
mov
iret
cli
lret
sti
int3
cmp
cmpb
push
outsl
cld
xchg
cmpsb
jne
jne,pn
movsl
popa
loopne
xor
push
arpl
mov
insb
stc
sbb
inc
push
mov
mov
inc
cmpsl
addr16
fwait
in
aad
in
inc
mov
xchg
int
dec
les
dec
in
insl
inc
and
aad
xchg
les
fdivrl
and
daa
sti
pop
flds
sub
sbb
jecxz
and
stos
std
sub
push
nop
jmp
testl
or
iret
stos
in
fdivrl
sub
inc
mov
cld
and
jmp
dec
test
mov
jmp
sub
push
and
out
or
sub
stos
and
inc
gs
pop
mov
sub
dec
stos
ds
and
dec
shlb
sub
imul
push
ljmp
cmpsb
test
nopl
lds
push
dec
xor
dec
mov
jne
mov
push
jp
push
add
out
imul
mov
add
jns
js
mov
cmp
push
pop
jns
and
fbld
pushf
xchg
mov
arpl
outsb
cmc
leave
mov
je
je
dec
pop
adc
out
or
xor
fcmovbe
inc
mov
push
add
cld
inc
jl
adc
sub
negb
add
lock
rcl
push
mov
cmpsb
clc
sbb
xchg
stos
inc
ja
mov
adc
fdivl
das
fisttpll
push
popf
fwait
hlt
add
cwtl
sub
loope
lods
in
dec
out
loop
sarl
add
pop
inc
inc
addl
xor
shlb
push
lods
aam
sub
fdivrs
xchg
xchg
fwait
and
jb
cs
cmp
mov
in
sub
out
repz
cmp
push
aaa
and
notb
mov
je
push
aas
enter
insl
xchg
ljmp
std
outsl
add
fwait
iret
dec
xchg
mov
lahf
stc
or
xchg
inc
add
aaa
sub
cltd
shr
rcrl
dec
addr16
xchg
test
dec
mov
jns
cmc
inc
aas
jl
into
arpl
jnp
nop
test
add
bound
pop
mov
cmp
cmpsb
jb
push
repz
sub
cmpsb
mov
xchg
es
mov
mov
pushf
dec
jmp
sbb
jnp
scas
adc
sbb
xchg
inc
ret
cmc
out
xchg
adc
pop
lods
jb
in
xor
out
cli
sbb
or
adc
jecxz
push
cltd
cmp
nop
xchg
mov
mov
cld
scas
cmp
addb
test
testl
mov
jge
in
jno
sbb
mov
adc
nop
xchg
rorb
sub
lahf
fcomps
push
dec
lods
sti
mov
xlat
jns
cmp
inc
push
in
mov
fs
push
sub
lahf
add
adc
jl
mov
out
out
or
push
or
mov
cmpsl
xlat
in
inc
fcoml
adcl
mov
sahf
sbb
add
loop
stos
movsb
xchg
das
jl
xor
mov
push
or
je
lods
push
nop
mov
or
mov
and
and
data16
neg
hlt
sbb
neg
aad
popf
imul
adc
xor
hlt
add
pop
ds
popf
stos
mov
insb
in
pop
sbb
fldz
inc
lds
xor
adc
push
sbb
iret
dec
jbe
pop
xlat
inc
lock
std
push
fistpl
cmp
lds
shrl
push
jns
cmp
add
xchg
nop
pop
loop
jl
loop
cmp
test
xchg
fnstcw
test
aad
lahf
int3
mov
lods
cmp
movsb
sub
adc
dec
shlb
imul
flds
arpl
push
pop
in
lds
cmp
test
inc
jae
aaa
int
sbb
and
out
aas
sub
enter
test
push
mov
pop
xor
inc
nop
aaa
mov
inc
pusha
ds
call
call
aaa
in
aam
stos
lahf
inc
xor
out
int3
push
and
mov
or
je
lret
sbb
dec
in
inc
call
aad
mov
push
and
flds
jo
jae
pop
push
test
adc
add
push
sub
cmc
and
lds
stos
sbb
je,pn
dec
jecxz
xchg
push
mov
int3
sbb
out
jle
lret
adc
cmp
int3
sahf
out
imul
adc
jbe
or
cld
jle
std
test
lock
mov
out
xor
in
inc
or
ficoml
sbb
in
icebp
gs
sub
rcl
mov
fdivl
dec
jl
ret
adc
cld
mov
adc
xlat
xchg
xchg
sub
inc
sub
cmp
cmc
or
icebp
ljmp
jno
pop
sti
jno
in
sbb
mov
ficoml
vcmpss
fs
fidivs
push
stos
push
xor
inc
push
mov
jae
jmp
pop
rcll
int
prefetchw
scas
pusha
adc
mov
aad
push
pop
xor
jmp
cmp
lds
jne
sub
out
lret
ss
insb
mov
fwait
stc
or
fsubrs
es
adc
xchg
nop
jbe
int
add
xchg
pushf
inc
mov
inc
addr16
test
insb
push
jl
leave
pop
dec
stc
xor
lock
pop
loopne
mov
ja
les
pusha
in
dec
inc
int
insb
push
sub
movsb
filds
mov
sub
xchg
inc
int3
ds
sub
and
fstpt
enter
iret
lds
loop
jnp
xchg
insb
or
mov
icebp
mov
push
das
jmp
adc
xor
sbb
in
and
mov
jmp
dec
inc
andl
or
repz
mov
inc
scas
or
stos
push
arpl
mov
inc
pop
scas
mov
lods
inc
cmpsl
test
stos
loope
push
pop
test
sub
in
decl
jo
mov
jno
ret
pushf
iret
dec
out
mov
cltd
mov
imul
push
cmc
jno
pusha
push
dec
or
adcb
es
es
push
icebp
std
mov
mov
mov
mov
leave
and
sbbl
arpl
sub
inc
sub
je
adc
les
bound
out
cld
cs
and
add
rcl
jae
in
stos
cmc
daa
bound
ljmp
push
xorl
add
pop
dec
sbb
sub
dec
ret
pusha
jl
push
lret
xchg
inc
inc
mov
ficomps
cmpsb
sub
push
lods
out
mov
jne
xchg
sub
and
scas
jge
xchg
jbe
inc
movsl
stos
add
loop
sub
dec
and
cmp
mov
add
jle
pusha
out
or
and
es
mov
pop
lea
test
add
cmp
es
pop
pop
imul
or
mov
push
insl
and
sbb
mov
inc
cmp
dec
pop
adc
icebp
sub
adc
mov
push
fdivrs
fucomip
lret
dec
add
out
pop
xchg
aad
cmp
and
dec
inc
insb
cmp
ss
cmp
or
inc
in
repz
cmpsl
int3
xlat
mov
int3
stc
jno
sbb
arpl
ds
jnp
xor
add
adc
mov
cwtl
sbb
aam
cmp
inc
xor
jnp
pop
fidivs
int3
mov
test
jae
mov
xchg
fcomip
das
ss
mov
inc
int3
adcl
dec
daa
mov
push
jge
loop
out
pop
jmp
cld
stos
loopne
stos
pop
and
xor
cmp
clc
mov
pusha
add
roll
xor
push
mov
xor
mov
mov
push
imul
add
out
jo
icebp
in
mov
inc
aad
xchg
subl
add
mov
popf
mov
call
js
dec
lahf
mov
fsts
inc
adc
cs
into
fldcw
mov
iret
adc
xor
out
sub
test
popa
or
or
divb
pusha
repz
fs
jl
int
dec
mov
adc
pop
leave
xor
pop
xchg
mov
in
inc
int
inc
fbld
push
mov
ficoms
enter
pop
aas
test
fistpll
stos
loop
ds
lods
subl
and
lcall
imul
sbb
sbb
data16
sub
sahf
or
enter
stos
add
fucomi
fdivrs
call
ljmp
test
lcall
into
dec
mov
gs
pushf
add
aam
mov
fcmovb
sub
test
cs
inc
or
nop
sahf
pop
mov
inc
add
pop
push
addr16
xor
cmpsl
loop
or
aaa
fsubrl
push
mov
xchg
or
into
inc
shll
loopne
jl
push
insb
cltd
lods
mov
add
popf
pop
notb
orb
cmp
mov
pusha
std
scas
mov
inc
adc
xor
jmp
push
xchg
mov
or
jge
cmp
xor
xor
inc
orb
mov
jl
subl
xchg
into
cwtl
not
push
sub
lea
push
push
push
push
lcall
daa
adc
rcrl
aaa
outsl
lods
inc
bound
cli
sub
jle
outsb
mov
mov
stos
and
adc
xchg
adc
xchg
sub
dec
rcrb
cli
xchg
sbbl
mov
xlat
mov
filds
fidivrl
mov
popa
or
bound
movsb
add
cmp
cmp
push
int3
push
xor
cmp
call
inc
xor
mov
scas
sub
daa
sbb
nop
aas
enter
insb
inc
fnstcw
and
push
add
test
push
push
leave
jb
adc
push
cmp
les
inc
mov
cmpsl
es
iret
jl
aam
jg
add
add
mov
clc
xchg
loopne
jne
outsl
push
push
xor
jno
ret
stos
mov
aas
pop
fwait
pop
fnstcw
cmpsl
out
aad
xor
adc
mov
add
push
cmp
mov
mov
mov
cmp
inc
jecxz
push
ss
int3
pusha
daa
in
mov
jg
push
popa
inc
adc
jl
and
subb
mov
sahf
xchg
fldt
shll
arpl
jbe
fwait
das
xor
mov
sub
jae
push
jle
aas
push
add
mov
das
stos
ljmp
xchg
cli
mov
fstps
nop
inc
push
push
icebp
add
imul
jle
dec
outsb
fwait
mov
fs
outsb
lret
out
scas
xchg
pop
ret
leave
ret
stos
es
dec
dec
push
dec
inc
das
test
sub
push
into
xor
rclb
pushf
inc
dec
adc
popf
js
mov
std
sbb
sub
add
dec
xchg
add
jl
mov
or
mov
mov
sahf
adc
mov
das
js
dec
vshufpd
xchg
dec
insl
loop
into
mov
lret
test
cli
in
inc
sahf
movsb
ljmp
and
dec
adc
xchg
shl
cmp
adc
inc
cmc
or
cs
or
xor
sbb
ss
add
cmp
jno
out
icebp
test
je
jno
ja
pop
bound
jge
fstpl
fs
gs
movsl
jb
fsubr
cmp
pop
loop
mov
xchg
jle
mov
pop
dec
sbb
sbb
pop
shl
or
lret
mov
adc
aad
jnp
adc
cmp
xchg
push
inc
icebp
dec
cs
decb
lret
xchg
jno
call
xchg
push
lret
test
aad
lret
dec
xor
pop
adc
jmp
xchg
data16
push
pop
ja
mov
repnz
outsl
or
jnp
push
cwtl
push
popa
and
or
sub
ret
xor
inc
jo
xchg
add
shll
std
pop
divl
add
movsl
mov
or
adc
lret
or
mov
lds
loopne
pop
out
or
rcrl
stc
jmp
pop
daa
xor
sbb
sahf
lds
shlb
mov
pusha
inc
lret
ds
sbb
lret
scas
shrb
mov
outsl
ret
arpl
adc
sahf
scas
lea
iret
jecxz
movsb
xor
dec
sub
and
sbb
shl
mov
push
jle
mov
xchg
mov
fiaddl
aam
cmp
stos
or
cwtl
cmp
mov
xchg
mov
repz
inc
sub
call
imul
and
in
in
roll
pop
cmpsl
shlb
cmp
and
sub
xchg
mov
sbb
or
bound
lcall
mov
dec
inc
fcoms
xchg
dec
test
pop
mov
into
mov
pop
lcall
jp
inc
je
cmp
xor
mov
mov
dec
div
lods
ret
push
push
sbb
sar
jno
sub
adc
js
xchg
sbb
fwait
repz
stos
jbe
jmp
mov
stc
jl
xchg
sbb
push
mov
push
mov
or
inc
pop
or
jb
clc
aam
add
cltd
pop
popa
pop
fcomi
inc
cmp
add
xchg
cmc
rcrb
scas
daa
fwait
push
dec
aas
jp
cltd
stos
aaa
ret
aas
jb
ret
mov
adc
pop
add
ficoml
stos
scas
or
inc
push
mov
mov
es
pop
sbb
ljmp
dec
jo
jl
dec
cmpsb
mov
sub
mov
mov
sbb
sbb
inc
push
insb
mov
dec
mov
sub
add
xor
sub
div
inc
or
rolb
or
sub
inc
jle
mov
ljmp
mov
ret
ss
mov
rorl
movsl
mov
pop
mov
test
testl
std
ret
add
xor
xor
jbe
sbb
fucomp
sarb
shll
jp
lret
xchg
mov
fs
jno
cltd
dec
es
ret
out
or
scas
call
pop
mov
dec
test
shll
add
fistpl
inc
pop
pop
out
pop
ficoml
insl
xsavec
out
repnz
mov
inc
sub
je
pop
push
and
js
pushf
xor
mov
cmp
stos
fldenv
pop
xor
addr16
fwait
mov
sub
stos
lret
negb
leave
lcall
out
jb
and
repnz
movsb
pop
subb
push
sti
fstpt
imul
ss
mov
xchg
scas
add
sub
jb
das
lds
aas
cmpsb
fdivrs
test
mov
cmp
xchg
inc
lock
push
rolb
data16
sub
shrb
push
jl
dec
out
adc
xor
in
mov
dec
test
push
push
outsl
push
movsb
lods
je
icebp
inc
movsb
shl
sti
into
mov
in
xchg
notl
and
cmpsb
cmpb
or
inc
loopne
adc
adc
scas
clc
aas
xchg
add
pop
mov
stos
sbb
xor
sbb
imul
mov
mov
or
jg
mov
fadds
jo
lods
fs
jbe
mov
sahf
jbe
dec
mov
pop
cmp
fcoms
lret
mov
or
insb
fwait
call
push
in
adc
psubb
rorl
xor
add
jb
xlat
shl
ds
pop
xchg
pop
in
scas
mov
mov
and
imul
out
mov
lods
push
fs
sub
gs
or
push
incb
clc
mov
push
mov
sbb
mov
rolb
nop
aaa
cmp
in
insl
mov
ss
mov
jnp
pop
jp
repnz
push
push
js
insl
or
je
movzwl
xchg
inc
sbb
xchg
mov
add
das
notl
mov
or
cmp
pop
repz
lret
mov
sub
gs
mov
dec
popf
rolb
fs
jno
add
jae
lret
xchg
test
push
cltd
mov
push
jg
or
jge
scas
sbb
xchg
sbb
lods
jp
aad
lahf
bound
jmp
outsb
lods
sub
cltd
and
jne
fs
test
mov
ljmp
xor
adc
lahf
cmp
cmc
test
shll
add
cli
and
mov
pop
pop
push
xchg
or
inc
cmc
push
rcr
fdivl
adc
in
ja
push
adc
inc
mov
stc
dec
dec
push
jnp
enter
jl
imul
enter
xor
fisttps
pop
xchg
clc
fs
inc
mov
push
mov
push
and
les
jbe
or
jmp
sub
sahf
es
loopne
addb
dec
pop
movsb
inc
xchg
fbld
aaa
mov
ljmp
aam
or
adc
xchg
mov
hlt
push
shll
jmp
iret
fsubrs
dec
cmp
inc
pop
xor
dec
pushf
divl
popa
negl
insl
leave
loope
test
loope
cld
cli
dec
repnz
cmp
int3
jmp
and
jle
faddl
xchg
and
jnp
xchg
pusha
test
dec
sub
mov
fisttpll
sbb
xchg
jle
adc
push
inc
loop
movsb
fisttpll
pop
js
jo
push
scas
xlat
jmp
xchg
sub
sbb
xor
mov
jne
cwtl
shr
jne
pop
cwtl
inc
mov
incb
lcall
mov
insb
vphaddbq
lret
loop
xchg
in
mov
sbb
icebp
push
sub
test
lock
aam
mov
outsl
push
add
mov
aam
mov
add
inc
ljmp
add
and
cld
lods
or
jl
sub
inc
xor
scas
push
fwait
add
shll
jae
or
xorl
rcrb
cmc
mov
aad
pusha
aam
sbb
neg
mov
fldl
lods
notb
scas
and
lret
add
pop
scas
fsts
dec
jmp
or
and
arpl
stc
popa
push
stc
xor
cltd
mov
mov
testl
imul
dec
push
and
sti
out
rcrl
pusha
rcll
mov
pop
enter
out
pop
popa
cmpsb
push
mov
aas
insl
pop
sbb
xchg
in
outsl
mov
xchg
out
add
sub
jg
lock
daa
xlat
ret
mov
mov
fdivrs
ret
or
shlb
call
sbb
dec
out
or
sarl
adc
sub
mov
push
pop
fs
mov
pushf
jb
cltd
ss
cmpsb
aam
add
and
sub
fisttpll
mov
mov
out
push
pop
movsb
pop
inc
lods
sbbl
ror
test
insl
sbb
bound
ds
jmp
cmp
lock
testb
sub
inc
push
cmpsl
test
popf
std
sarb
add
dec
daa
int
lea
jge
mov
xchg
pop
add
stos
dec
xchg
ds
cmp
inc
rcr
adc
jae
lock
popf
lret
dec
push
pop
sub
pop
bound
data16
jge
xlat
stos
dec
aas
dec
aaa
pop
jmp
mov
mov
call
test
adc
cltd
cli
mov
into
dec
call
pop
dec
mov
push
repnz
sub
cld
pop
in
lret
imul
push
pop
inc
ja
jno
inc
xchg
bnd
and
aad
cmp
pop
inc
daa
sbb
xchg
aaa
fdivrs
imul
fsubrs
daa
fs
sub
sahf
pop
or
and
stos
shr
sbb
js
xor
and
cld
scas
es
shrb
mov
adc
adcb
andl
subl
js
movsb
add
je
add
js
push
cmc
lret
pop
gs
push
je
push
aad
repnz
int3
dec
arpl
pop
dec
mov
add
xchg
aam
insl
ds
int
and
inc
push
inc
and
jp
jno
add
jnp
mov
dec
sete
js
pop
test
sbb
jp
xchg
cvtdq2ps
ds
push
leave
pop
popa
inc
test
gs
jne
inc
test
daa
mov
cld
ret
lcall
cwtl
in
jb
push
dec
add
ds
dec
cmp
jecxz
pop
mov
aaa
lret
add
minps
sub
add
xchg
pusha
mov
fsub
mov
imul
mov
dec
adc
fdivp
pushf
and
arpl
rcrb
gs
clc
xchg
test
jl
scas
or
or
dec
in
sbb
cmpsl
shrb
push
adc
loope
xchg
sarb
clc
out
push
cltd
mov
andb
mov
inc
push
inc
sbb
std
pop
xor
and
test
mov
lods
jae
adc
cmp
in
or
jg
mov
insb
and
cmc
or
jle
and
into
push
sbbl
rorl
cld
imul
out
xor
push
data16
ds
cmp
dec
rcll
ja
mov
mov
sub
dec
cs
push
testb
outsb
into
in
and
les
jbe
std
andb
pop
out
cmp
cmpb
out
inc
and
pop
imul
jno
aad
pop
test
sub
in
xchg
mov
mov
fcompl
and
push
cmp
adc
xchg
stos
push
push
inc
sti
push
and
sarb
daa
sti
testl
xor
mov
aam
cmpsl
call
out
or
idiv
aaa
adc
addb
mov
mov
adc
jg
in
jmp
mov
mov
mov
lock
mov
pop
mov
fidivrs
and
jecxz
aam
rcrl
into
mov
out
and
fucomip
xchg
jecxz
imul
into
pop
add
shrl
push
mov
addr16
adc
loopne
cwtl
data16
xor
lock
leave
scas
rclb
sbb
pusha
popa
push
loope
out
ds
mov
xor
add
dec
inc
out
xchg
mov
es
pop
jnp
mov
cmc
out
aaa
sahf
xlat
push
sub
cld
int3
or
adc
bound
int
sbb
inc
cmpsb
fwait
in
loopne
aam
mov
jnp
scas
lahf
popa
cltd
push
cmp
mov
jbe
fcoml
and
mov
adc
sub
fimull
fnstcw
jmp
jnp
les
lods
je
nop
inc
aam
and
xchg
addr16
cli
pusha
xchg
xchg
stos
mov
shlb
mov
iret
pop
mov
jns
mov
cli
hlt
adc
push
out
das
mov
scas
cmp
subl
out
push
les
lock
pop
push
and
push
mov
icebp
inc
cmc
jecxz
inc
fstl
mov
mov
jge
jp
dec
inc
push
add
inc
xchg
sbb
shr
pop
les
ret
movsl
pop
dec
fbstp
shlb
push
fistpll
mov
mov
cs
cli
inc
jae
or
sub
fstl
xchg
sub
mov
lcall
popf
or
and
pop
sbb
or
in
lods
push
sub
aas
add
jo
dec
cmp
stos
sub
inc
dec
sbb
lea
in
in
push
xor
js
js
out
pop
inc
scas
or
cli
push
out
dec
test
insl
test
mov
xor
pop
add
jb
mov
jmp
or
enter
fldenv
fwait
cmp
adc
pop
mov
push
mov
lods
cmp
sub
mov
rcr
sub
mov
adc
cmpsb
sarl
add
clc
int3
xorl
fcoml
mov
insl
dec
lods
mov
push
std
stos
pop
pop
fdivr
mov
push
xchg
mov
aad
test
sub
iret
mov
push
add
ret
cltd
xchg
int3
into
xchg
ret
test
stos
lret
out
cmpsl
je
inc
jne
cmpsb
mov
and
mov
xchg
mov
jo
cmp
and
scas
sbb
out
cli
popa
or
jl
popf
mov
paddw
sbb
loop
or
push
in
xchg
std
out
out
mov
filds
mov
out
scas
inc
rcll
adc
or
cmp
cli
jns
mov
cmpsb
inc
sbb
movsl
shrb
enter
sbb
out
and
popf
data16
mov
hlt
mov
push
out
lock
mov
std
xor
push
popa
iret
mov
mov
leave
sti
testl
ds
xor
sub
into
call
push
sti
xor
push
popf
xor
push
add
loop
addr16
scas
and
pop
pop
cmp
lock
subl
bound
lcall
sbb
test
shll
or
pop
mov
add
mov
les
cmp
scas
mov
xchg
xor
imul
outsl
ljmp
xchg
shrb
sarl
lock
jg
pop
mov
adc
or
xor
xor
sbb
notb
cwtl
lret
out
and
fisubl
ljmp
mov
jecxz
addr16
lahf
cmp
mov
cld
adc
icebp
stc
inc
pop
xor
insb
pop
ret
push
sub
ret
xor
adc
outsb
icebp
lret
sub
sbb
inc
aad
sub
pop
dec
push
inc
add
movsb
movsb
stc
or
pop
jle
mov
ja
add
daa
xchg
scas
inc
int3
sbb
jle
add
dec
xchg
ffree
mov
popa
stos
add
mov
xor
ficoml
out
jns
pusha
test
xor
xchg
add
lahf
mov
icebp
adc
pop
nop
and
inc
sbb
xor
push
cwtl
fbld
pop
mov
lea
adc
add
es
xchg
insb
lret
in
mov
out
or
jae
aam
arpl
jle
sbb
sbb
leave
jmp
push
push
out
test
dec
lods
xor
sbb
lret
call
pop
je
jmp
outsl
pop
mov
jb
mov
gs
cs
popa
dec
pop
test
icebp
aam
pop
add
and
sbb
popa
test
sbb
loope
jge
mov
sbb
and
add
xchg
out
xor
jl
out
roll
imul
xchg
addr16
adc
mull
xchg
fxch
enter
jle
push
insl
cwtl
lret
sti
mov
mov
out
jb
fldt
push
adc
inc
pop
clc
jmp
and
xchg
xor
scas
mov
ret
imul
dec
pop
scas
xor
lock
jle
dec
xor
or
insb
jno
xchg
ficompl
and
aad
pop
icebp
outsb
enter
dec
out
lret
jmp
lret
shrb
mov
rol
ljmp
daa
xor
mov
mov
icebp
movsl
mov
jno
punpcklwd
and
addr16
mov
cli
xor
pushf
inc
out
pop
andl
or
stos
jl
push
rcrl
ss
jp
lock
iret
mov
stos
inc
sub
cwtl
jno
pop
popa
push
pop
out
sub
push
repz
dec
push
xchg
shl
arpl
ja
ret
xor
jp
push
and
push
fidivs
pushf
mov
and
std
sarb
cltd
inc
or
stos
fldcw
popf
daa
jmp
dec
pop
roll
loope
mov
movsb
mov
imul
dec
test
xchg
in
es
jne
adc
std
jp
insl
cmpsl
lea
sbb
cmpsl
fistl
inc
lds
addl
jbe
xor
xchg
bound
frstor
cld
cltd
and
pop
jl
pop
mov
mov
mov
fdivrp
lds
fdivp
or
dec
aas
cmp
push
xchg
dec
or
or
into
jl
shr
sti
and
mov
and
ja
mov
sbbl
lahf
lods
adc
dec
aam
std
dec
arpl
es
xlat
jge
sti
fcoml
in
and
jno
cwtl
adc
mov
sub
in
dec
dec
fisubrs
xchg
push
bound
cmc
jno
je
xchg
or
mov
bound
outsl
mov
inc
mov
xor
cmpsb
push
cmp
aaa
sub
mov
lea
and
test
cmp
inc
gs
jp
jg
insb
pop
jmp
cmp
inc
fists
gs
ficoms
mov
aaa
rcll
lret
mov
add
sub
imul
cmp
addl
lret
cmpb
out
push
cmpsb
add
dec
pop
int
clc
faddl
adc
jb
jl
xchg
or
xchg
push
mov
push
lods
cltd
jae
bound
or
dec
or
int3
es
dec
jnp,pt
sub
aaa
sti
in
adc
or
iret
xlat
in
sub
adc
gs
pushw
dec
push
mov
popf
lea
fmuls
push
sbb
sub
out
sbb
outsb
jecxz
dec
mov
shll
sbb
or
or
mov
jge
cmp
cmc
jmp
test
mov
scas
nop
in
out
lcall
xchg
addl
popf
arpl
dec
jns
sti
and
pushf
sarl
pop
dec
imul
mov
sbb
inc
xlat
lea
mov
nop
out
mov
mov
xor
or
mov
daa
sub
jg
ja
push
mov
imul
add
xlat
adc
sub
pop
iret
sbb
xchg
xchg
shl
outsb
xchg
xlat
jae
std
cld
call
or
sbb
dec
bound
or
fwait
test
cltd
ds
xor
lock
jle
sub
fnop
pop
or
lods
cmp
inc
jb
xor
mov
dec
cmpsl
mov
stc
xor
ja
je
push
and
sbb
jge
mov
xor
fsts
dec
xchg
lods
mov
aas
xchg
or
cmp
xchg
lret
loop
stc
dec
dec
sahf
aam
scas
test
iret
mov
sbb
pusha
adc
pusha
scas
lea
inc
nop
sub
cmpl
nop
shll
aad
hlt
pop
pop
xchg
xorb
jbe
push
daa
in
push
push
sub
inc
sub
std
es
fisttpl
xor
dec
lds
pop
xor
inc
cli
mov
es
bound
cmc
orb
data16
sbb
xchg
jne
xor
inc
out
xor
mov
in
loopne
adc
xor
fcoml
pop
jne
lds
lds
aaa
mov
cmp
mov
rol
sbb
adc
fsubrl
test
and
sub
sti
mov
rcrl
xor
movsl
mov
out
loopne
sti
adc
jp
lret
inc
cmp
push
ret
dec
inc
arpl
rcrl
pop
push
call
push
jno
or
adc
aad
pop
clc
and
xor
mov
push
add
adc
dec
pop
pop
mov
jnp
and
es
mov
inc
adc
mov
adcb
or
mov
imul
ss
fwait
test
jns
scas
ret
pop
test
add
pop
push
inc
cmp
adcl
in
test
pop
scas
les
inc
mov
and
inc
sarl
test
jo
xlat
movsb
xor
sbb
jae
ljmp
jnp
and
js
shr
xlat
mov
xor
leave
fwait
repnz
mov
jae
mov
inc
mov
push
push
sbb
jmp
jp
in
int
leave
lds
lret
test
test
xchg
pushf
out
sbb
xchg
int3
cmpsl
test
adc
add
mov
ficoms
mov
pushf
pop
scas
adc
cmc
ds
xor
or
jb
xchg
inc
outsb
cmp
popf
push
dec
mov
mov
sbb
out
jmp
sub
mov
pop
add
mov
sub
add
xor
flds
mov
cmc
in
mov
test
adc
fisubrl
pop
dec
dec
mov
outsl
aaa
fs
scas
pop
std
cmpsb
leave
jae
pop
andb
int3
mov
adc
or
pop
shll
xchg
and
aad
mov
sarb
adc
lcall
call
sbb
jmp
add
mov
mov
push
std
cmpsl
testb
mov
es
cmp
mov
mov
int3
mov
test
aas
mov
imul
addr16
jb
inc
in
xor
push
xchg
sub
fnstenv
pop
shll
pop
out
int3
sti
sbbl
nop
adc
sbbl
mov
mov
pop
xchg
inc
push
adc
inc
add
add
fstpt
and
push
pushf
xchg
pop
icebp
add
jno
scas
pop
and
push
pop
and
bound
add
sub
arpl
inc
sub
jecxz
push
mov
jg
adc
arpl
push
loop
cs
je
jno
or
xchg
inc
dec
lahf
dec
addr16
sbb
cmp
popf
lods
mov
frstor
mov
stc
pop
xor
and
lret
mov
call
lds
inc
push
inc
sbb
jg
fildl
hlt
notl
mov
lret
roll
in
dec
mov
mov
push
clc
mov
cltd
popf
fbld
jge
inc
aad
in
sub
jge
jns
mov
push
sti
fstpt
cmp
stos
cmpsb
mov
pushf
xor
add
dec
adc
dec
fildl
int3
ret
insb
rclb
and
shll
es
jle
mov
nop
clc
mov
mov
mov
xor
xor
inc
in
jo
adc
dec
xchg
dec
loop
lds
rol
xchg
pop
mov
fldt
jbe
mov
cmpsb
shlb
fwait
in
mov
popa
cmp
or
mov
testb
sbb
scas
filds
cmpsl
adc
xor
add
leave
add
movsl
fucomip
mov
pop
mov
mov
cld
sbb
ja
into
int
les
cs
movsl
out
out
js
cli
repz
ljmp
je
inc
cmp
daa
mov
mov
inc
divb
push
ss
cwtl
push
in
ljmp
xor
lahf
mov
xor
jg
xchg
xlat
bound
lods
call
notl
push
rcr
mov
dec
xchg
jb
jge
jne
adc
orl
mov
pop
adc
paddusb
mov
jno
or
or
ds
mov
xchg
outsb
fimuls
cli
cltd
and
jne
inc
and
in
icebp
mov
shlb
sahf
adc
xchg
fiaddl
loope
mov
xlat
inc
fnstenv
aam
or
je
xor
mov
nop
xor
mov
adc
ret
call
testl
in
cmovs
jbe
outsl
insb
sub
in
test
lods
mov
aad
imul
sub
cmp
pop
rorb
sub
movsl
xchg
mov
mov
pop
imul
xchg
add
dec
jo
ret
out
pop
xchg
test
test
in
scas
xchg
xchg
add
mov
push
cmp
mov
scas
aaa
das
in
mov
jp
pop
fcompl
adc
cmpsl
sbb
mov
mov
mov
fstps
mov
stos
ror
xor
cwtl
ret
and
pushf
cmp
inc
fcomp
sbb
out
ljmp
sub
ret
out
cwtl
je
pop
mov
in
scas
cmp
push
inc
stc
fnstsw
daa
xlat
repz
sub
cmpsl
and
nop
js
incl
mov
and
cmp
dec
call
mov
add
lods
adc
test
ds
out
dec
and
inc
lods
pop
xchg
insl
mov
int3
cltd
pop
daa
push
lock
jecxz
or
jno
jnp
dec
xor
loopne
in
lods
xor
push
push
xchg
cmp
dec
test
lret
out
xchg
adc
mov
xchg
lahf
mov
or
push
stc
cmpl
push
cmpl
jns
fisubl
lea
dec
out
insl
jo
sbb
aaa
add
push
xchg
mov
mov
in
fwait
icebp
or
fisubl
cmp
push
jne
fldenv
add
adc
add
fistpl
stos
lahf
imul
out
roll
in
shlb
push
aam
mov
mov
inc
mov
bound
ljmp
or
and
and
push
cmp
dec
mov
addr16
jl
out
shlb
add
push
sbb
sbb
inc
imul
loope
cwtl
adc
mov
push
mov
pushf
push
lahf
ret
sarl
outsl
mov
cmp
fcoml
aam
pop
mov
insl
jle
mov
iret
xor
in
scas
pop
jae
pop
iret
jmp
mov
mov
into
cmpsl
ds
movb
inc
cmp
cli
jle
and
push
mov
add
cmp
flds
push
repnz
lret
orl
mov
or
sbb
dec
sub
scas
mov
jecxz
addb
jle
addl
fdiv
sub
pop
dec
sahf
in
jno
xchg
inc
ret
rcr
pop
jg
push
lock
loop
xchg
xor
fidivs
mov
mov
int
in
imul
xor
add
in
outsl
xor
pop
out
inc
js
subl
push
cmp
pop
movsb
pushf
push
sbb
adc
lret
cltd
dec
xor
roll
aad
ficoms
add
mov
pushf
xchg
lret
and
xor
sbb
adc
sub
pop
je
lret
mov
loope
jb
mov
out
dec
jl
cld
scas
jo
enter
cmp
xor
filds
inc
std
imul
jb
mov
mov
xor
mov
mov
push
xorb
mov
adc
jge
xchg
lcall
fistl
xchg
adc
stc
jecxz
push
push
sbb
jmp
push
and
push
daa
movsl
dec
mov
lds
mov
test
jle
jp
lret
or
mov
movsl
cwtl
mov
js
ss
leave
popa
subb
xchg
mov
adc
jp
inc
cmp
es
sub
inc
test
pop
xchg
push
mov
jns
outsl
iret
nop
scas
mov
sub
fsubr
adc
rclb
xor
and
jp
test
inc
rorb
mov
dec
or
mov
inc
cltd
jp
xchg
bound
mov
pop
aas
test
lods
int
les
and
idivb
xor
insl
gs
push
je
mov
into
xor
xor
ja
or
ret
rcll
les
bound
sub
int3
mov
movsl
mov
lret
mov
jmp
ljmp
sub
das
cmc
lods
mov
das
test
sub
sarl
and
jb,pn
lret
nop
inc
pop
shll
adc
fisubrl
mov
arpl
xor
pop
pop
or
jle
sti
xchg
arpl
fcoml
popf
cld
fnstenv
or
sub
insb
int
push
mov
les
xchg
mov
cmp
add
fcmovnb
or
dec
pop
clc
mov
adc
pusha
insb
mov
mov
xchg
mov
int3
sti
jp
jae
decb
jmp
iret
mov
sbb
or
stos
fsubrl
aam
mov
lock
cmp
orl
in
dec
fnstsw
es
mov
sti
inc
nop
push
stc
popa
lret
cld
je
jl
cmp
push
cmc
mov
cs
loope
add
dec
mov
xor
fs
loopne
mov
nop
sti
mov
push
mov
fldl
fldl
nop
push
mov
jmp
loop
cld
mov
addl
movsb
out
jge
ret
jnp
adc
ds
in
xchg
push
or
scas
flds
lcall
in
xchg
jnp
pop
pop
push
imul
aas
adc
test
inc
mov
cmp
sub
mov
sbb
xchg
imul
add
sbb
pop
jp
jb
test
adc
mov
ljmp
imul
pop
fwait
dec
lods
xchg
adc
int
hlt
add
jns
orl
insb
jns
in
jne
ds
mov
jp
pop
and
data16
clc
mov
out
in
loope
dec
pop
and
cs
out
aas
in
xchg
xor
aad
push
pushf
fdivrs
push
mov
rcll
push
test
call
in
mov
xchg
andl
sub
into
insl
jl
stos
rcrl
push
add
ds
mov
adc
lods
lock
and
nop
mov
cmc
aas
xor
test
test
mov
xchg
inc
adc
mov
adc
dec
jp
popf
daa
and
orb
adc
insl
aam
xor
iret
xchg
je
sti
ret
repnz
incb
adc
cmpsl
sub
fisubl
je
adc
fisubrs
out
loope
and
lahf
rcrl
push
mov
and
loope
mov
jne
lds
cmp
les
sbb
lock
push
outsl
stos
mov
sarl
cmp
xor
nop
inc
xchg
mov
fnsave
sbb
cltd
das
xor
inc
pop
mov
unpcklps
out
inc
insl
inc
jmp
pop
pop
sub
and
push
cmpsl
stos
xor
insb
movsb
out
and
pushw
or
test
outsb
mov
iret
dec
ret
outsl
incb
xchg
shrl
scas
sti
movsb
pop
je
test
sar
adc
pop
enter
mov
hlt
loopne
ret
inc
mov
pop
repz
sbb
repz
sbb
vmwrite
adc
daa
inc
arpl
hlt
clc
jecxz
inc
out
fwait
sub
add
ja
add
xchg
in
jnp
lods
push
push
fdivrs
xchg
mov
xchg
or
jmp
test
scas
shrl
inc
jns
pop
fists
xchg
mov
addl
hlt
shll
xchg
rol
hlt
pop
xchg
and
pusha
aad
jl
pop
jns
pusha
or
dec
ficoml
mov
nop
loop
add
aaa
fcmove
outsb
and
test
push
sbb
aam
mov
fnstenv
in
and
adc
dec
ficoml
sbb
jecxz
sti
xor
mov
mov
push
push
vorps
cmp
dec
and
repz
sub
sbb
stos
cmp
xchg
adc
lods
add
push
mov
dec
push
hlt
jg
mov
sbb
test
sub
jb
jg
xchg
outsl
clc
mov
pushf
xchg
push
mov
ss
cmp
gs
jge
insb
dec
cmp
add
add
cmp
shrb
into
xor
fstps
fs
mov
mov
jno
mov
dec
shl
mov
loopne
je
repnz
jbe
ficomps
jo
scas
or
rorb
call
in
cmp
dec
jle
mov
imul
loopne
mov
fs
imul
mov
out
lahf
loope
arpl
rorb
pop
xor
nop
jge
mov
frstor
sbb
in
subb
inc
sti
xchg
jo
jl
dec
cmpl
cmc
test
inc
dec
or
lea
in
pop
jl
mov
ret
and
sub
in
lcall
lods
dec
mov
xor
sub
mov
popa
ja
imul
sbb
insb
xor
shll
sti
jno
or
pandn
cwtl
stos
test
xchg
and
data16
lds
inc
push
mov
mov
loopne
lret
mov
imul
std
or
daa
daa
adcl
xor
aad
push
ret
mov
sti
in
pop
mov
into
xchg
inc
aaa
in
das
sbb
pop
pop
mov
pop
test
call
jge
mov
std
shrl
sbb
mov
out
roll
push
push
fs
ss
fdivrs
mov
aas
icebp
shl
cwtl
fs
cs
clc
bound
and
icebp
mov
rcrl
push
cmpsb
push
dec
dec
clc
scas
xchg
in
inc
lods
fistpl
xchg
loop
cmp
sarb
or
mov
lret
jbe
add
xchg
pop
pop
btr
pop
cmp
xchg
sub
call
js
nop
mov
rorl
inc
int3
mov
repz
loopne
cld
cwtl
add
xor
jle
fiaddl
mov
aad
fxch
daa
mov
popa
nop
out
adc
lds
xchg
fiadds
cli
rcrb
cmp
fnstcw
xchg
xlat
movsl
mov
data16
pop
imul
scas
out
sbb
mov
pop
imul
ds
xor
jecxz
test
add
add
in
in
dec
test
cli
lds
stos
cmp
push
jmp
clc
ds
push
clc
xor
pop
arpl
cmp
fisttps
cmp
and
xchg
cli
push
xchg
into
ficoml
inc
sbb
arpl
hlt
adc
hlt
rorb
dec
cltd
mov
stc
mov
lds
push
ss
xchg
mov
movsl
test
pop
aam
mov
fwait
rol
dec
stos
mov
jbe
mov
jecxz
cmp
aad
push
movsl
push
sbb
or
xchg
in
lret
dec
out
insb
xchg
adcl
out
std
sbb
out
fisubs
xor
mov
int3
cltd
subl
adc
fadd
adc
inc
add
pushf
mov
inc
clc
adc
sub
jne
dec
pop
addr16
xchg
mov
xor
inc
out
shl
cmp
dec
pop
cmp
call
pusha
cltd
jle
les
syscall
mov
and
pusha
in
scas
adc
rorl
cmp
add
xchg
repnz
iret
int
dec
push
movsl
inc
fwait
loopne
scas
cmpsb
mov
xor
sbb
lock
lods
xor
clc
sub
jg
fiaddl
cmc
pop
pop
add
ret
jno
jae
loop
fcomip
push
jo
loope
push
int3
adc
mov
ds
xchg
push
pop
push
popf
sub
rolb
jnp
xor
addb
dec
pop
nop
lahf
aam
xchg
call
cmpsb
or
outsl
sub
adc
jnp
enter
enter
mov
jg
out
shl
popf
push
hlt
lret
popf
notb
movsl
adc
jmp
ret
jecxz
outsl
lret
mov
mov
jns
outsb
hlt
cmpb
xor
xchg
push
lahf
mov
inc
test
pop
adc
push
orl
and
sarb
shr
movl
inc
popf
divb
dec
mov
jle
scas
fstl
inc
or
and
lock
or
enter
lods
shr
lahf
cmpsl
add
xor
std
add
mov
or
pop
pop
xor
negb
cmpsb
in
xchg
call
loope
jl
cmp
jno
subl
inc
mov
mov
mov
scas
xor
es
lods
out
out
push
aam
sahf
dec
bound
mov
fstp
or
cmp
jecxz
stos
jg
add
add
popa
mov
pop
pop
mov
add
mov
xchg
lds
push
add
add
nop
arpl
inc
addr16
mov
out
idivl
dec
jnp
cmpsl
sbb
loop
rorl
mull
mov
mov
or
scas
mov
dec
in
in
leave
mov
js
mov
iret
rcrb
mov
cmovle
rcrl
insb
or
jge
insb
jbe
popa
xchg
mov
dec
xchg
dec
add
and
mov
pop
stos
sbb
inc
daa
adc
jnp
sbb
iret
sub
xor
sahf
add
xchg
xchg
fisubs
pop
push
aad
fistl
js
and
les
fidivrs
test
mov
xchg
rorb
add
fwait
test
stc
iret
rcl
push
daa
mov
popa
and
test
fisttpll
dec
mov
movsl
ss
popa
imul
test
jl
mov
jb
std
mov
addb
cli
mov
sahf
icebp
cmc
jns
mov
push
sub
cmpsb
ljmp
imul
ds
dec
mov
lds
xchg
sub
data16
icebp
xchg
mov
rorl
dec
xchg
adc
sbb
dec
shrb
mov
or
andb
in
adc
adc
int
xor
fwait
mov
cmpsl
movsb
fstps
das
test
mov
fcomip
pop
adc
add
dec
xlat
cmp
add
pop
orl
push
aad
lcall
std
loop
jne
dec
scas
mov
jns
mov
mov
jae
xchg
outsl
dec
xor
sub
enter
jmp
test
cmp
enter
pop
xor
or
nop
mov
std
fxch
fstpl
pop
repz
lock
int3
pusha
movsl
sbb
jmp
scas
jl
jbe
mov
sbb
sub
sbb
pop
adc
mov
inc
outsb
stos
cwtl
inc
mov
inc
sub
dec
pop
mov
jle
sub
jge
cmp
jae
pop
es
mov
inc
dec
xor
bnd
sbb
into
cmc
pop
dec
in
pop
lock
pop
sbb
mov
rorl
loopne
test
adc
lret
dec
rorl
in
icebp
fsubp
dec
jg
loope
and
andl
push
sbb
dec
mov
clc
or
fnstenv
mov
add
dec
adc
sbb
inc
pushf
jge
clc
pop
lcall
nop
pop
adc
pusha
out
sbb
xchg
dec
xlat
cld
mov
pusha
adc
and
hlt
sbb
sti
fwait
push
inc
push
outsb
mov
sub
sub
mov
and
cwtl
js
dec
fisttpl
loop
repz
or
enter
jnp
rcrl
xchg
clc
sub
mov
pop
jno
daa
xchg
es
leave
xchg
orb
pop
xchg
xor
adc
inc
and
out
xor
in
mov
mov
push
xchg
jb
sub
insl
icebp
mov
jnp
mov
icebp
jno
dec
data16
cmp
bound
sub
push
pushf
test
cmp
mov
rclb
pop
addr16
cmpl
mov
jo
mov
pusha
fistpll
sbb
inc
mov
xchg
and
fwait
xchg
cwtl
js
aas
dec
fcmove
fisttpl
rcr
mov
jg
mov
sarl
ja
mov
popa
popl
sarb
mov
xor
or
arpl
add
push
adc
negl
push
pop
movsl
mov
mov
xlat
mov
dec
jg
pop
xchg
icebp
mov
mov
jge
and
cmp
bound
pop
adcl
rclb
rorb
jge
loop
in
pushf
mov
mov
dec
cmpsb
loop
push
mov
mov
push
xor
jl
cmc
xchg
and
cmp
mov
sti
add
out
mov
adc
out
or
ds
push
bnd
inc
sub
jle
addl
sbb
fucomp
and
loope
test
mull
aad
adc
add
mov
jg
shlb
sub
cmp
icebp
cmp
add
mov
rol
mov
add
pop
imul
push
push
xor
sahf
push
enter
add
and
nop
sub
and
insl
scas
pop
mov
cs
scas
ljmp
fisubrl
or
sti
out
dec
cs
sbb
fxch
xchg
sub
or
scas
mov
pushf
or
xchg
add
pop
mov
sbb
sbb
push
jmp
enter
out
mov
int
ja
bound
xorb
mov
jns
sub
das
and
xchg
mov
js
jnp
scas
fs
and
mov
lret
push
in
outsl
mov
and
mov
lcall
push
ja
mov
fwait
inc
popl
pop
sarl
aas
or
testl
into
stos
ret
jb
fistl
sub
jne
jmp
popf
xchg
in
cmp
leave
pop
idivl
insb
bound
jmp
jmp
xlat
and
jecxz
dec
jmp
cs
sbb
mov
mov
repz
cmp
int3
je
out
movb
xor
push
jae
push
int
mov
mov
outsl
ljmp
mov
push
push
setno
cmp
pop
pop
sub
pop
adc
add
push
push
fbld
and
imul
xchg
aas
mov
dec
jmp
aam
pushf
wbinvd
enter
lea
adc
pop
pop
stc
pop
in
dec
lcall
pusha
sub
cmp
cli
movsl
movsb
hlt
nop
jl
std
pop
clc
mov
loope
sub
adc
jl
mov
xor
mov
mov
dec
cwtl
repz
jno
cmp
into
in
jno
das
inc
movsb
jge
jbe
jmp
int
inc
sub
mov
into
call
dec
or
add
and
loopne
xchg
ficomps
pop
repnz
scas
pop
and
mov
mov
data16
add
xor
bound
fisttps
push
ljmp
daa
jg
test
xchg
add
imul
addr16
and
fmul
cmc
jmp
pushw
out
andb
notb
and
pushf
mov
int3
idivb
mov
inc
out
je
cmp
pop
sub
cmpsb
pop
and
rorl
cltd
pop
sahf
scas
push
fistl
arpl
mov
stc
ja
in
lods
pop
sub
push
xor
stc
ret
int3
xchg
popf
mov
arpl
pop
scas
jbe
stc
sub
pop
aam
outsb
jecxz
jo
lret
in
pop
cmpl
pushl
jne
or
pop
stc
mov
lret
jecxz
lcall
adc
push
pop
pop
in
bound
int3
mov
dec
xchg
sub
adc
sub
xchg
jl
out
outsl
push
cmpsb
out
mov
jle
sbb
xor
mov
adcl
cmp
or
xor
nop
popa
cmpsb
adc
fisubrl
adc
lods
jecxz
lods
mov
hlt
add
mov
pop
out
jbe
mov
push
das
cmp
jmp
inc
idivl
das
sub
push
pushf
out
mov
xlat
sub
mov
outsb
popf
iret
push
shll
fnstenv
add
sbb
adc
popf
sbb
jmp
aaa
dec
push
jne
rclb
sbb
lret
sub
push
mov
mov
mov
je
dec
add
mov
decb
divl
jae
adc
xor
xchg
mov
popf
mov
adc
les
sarl
and
adc
mov
pop
pop
or
inc
or
mov
jp
xchg
pop
and
sub
insb
cmp
nop
push
jg
adc
mov
adc
push
jo
mov
loopne
pop
adc
loopne
movsl
aam
clc
adc
or
jmp
dec
data16
ret
ds
je
dec
es
jb
stos
dec
fucom
hlt
leave
jg
push
in
incb
add
das
lock
mov
and
mov
lret
stos
lods
push
icebp
mov
adc
adc
sub
imulb
fsubs
fdivl
jmp
cwtl
pop
jp
sbbl
mov
fdivs
cltd
mov
jl
mov
pop
dec
idivb
mov
push
divl
out
pop
arpl
xchg
data16
jmp
xchg
mov
jne
sbb
add
pop
pushf
or
ret
push
lods
jae
into
mov
mov
add
test
xor
cmp
jecxz
rorb
mov
push
sbb
jae
outsb
sub
leave
mov
shll
sbbb
iret
push
das
std
mov
stos
sub
dec
inc
sbb
mov
out
add
loope
enter
les
fnstsw
cmpsb
cld
clc
inc
jo
loopne
insb
and
jnp
sarl
add
int
cli
repz
push
push
sub
and
out
sbb
xchg
rcrb
movsb
inc
outsb
sbb
lds
xchg
fistpl
enter
pusha
popa
pop
in
icebp
call
jne
enter
sbb
mov
gs
pushf
push
adc
jmp
inc
int3
dec
hlt
xchg
jbe
add
or
rcll
fadds
hlt
push
mov
sahf
push
mov
pop
jge
push
sub
sbb
cltd
mov
inc
jo
decl
insl
mov
cld
int
mov
mov
test
inc
adc
or
xchg
adc
mov
ficompl
imulb
inc
add
mov
mov
xchg
xor
pusha
roll
aas
xchg
cmp
jnp
or
jmp
add
cs
data16
cwtl
sbb
add
shlb
pop
int
shr
lods
xor
dec
sarb
scas
xchg
fsts
add
adc
pop
adc
fdivs
mov
scas
sbb
mov
insl
stos
gs
pop
dec
jne
arpl
test
insb
xor
sbb
jp
inc
jge
shrl
ret
pop
mov
cli
std
lods
jge
sbb
add
divb
dec
jp
cmpsb
test
test
sub
je
loop
xchg
les
or
scas
imul
push
or
add
and
arpl
cmp
fldt
mov
sub
or
xchg
sbb
pop
out
push
jo
rcrl
jo
enter
lea
lods
dec
aam
fcoml
xlat
add
in
cmp
test
ficompl
jp
and
hlt
mov
pop
fdivrp
mov
push
mov
mov
pop
push
jne
dec
mov
out
or
insl
iret
xchg
sub
fsubl
adc
or
into
std
enter
nop
data16
pop
lea
and
nop
mov
xor
lret
mov
rclb
jno
adc
sub
mov
aad
jo
add
and
cmp
xor
enter
mov
pop
out
push
jecxz
inc
pop
xchg
and
inc
pop
int3
test
arpl
insl
je
adc
fsubs
movsl
fwait
sbb
and
int3
jae
mov
mov
jmp
pop
sub
and
and
dec
sahf
mov
test
pop
movsl
jbe
iret
sub
xchg
mov
rolb
xchg
xchg
cmp
imul
imul
shrl
addr16
hlt
mov
cs
icebp
fsubrs
mov
dec
jns
adc
lds
push
mov
dec
or
push
dec
cwtl
sbb
insb
add
cmpl
fnstcw
cmp
addl
fisubrs
push
mov
into
push
xor
cmp
dec
mov
xor
lcall
aaa
cltd
mov
adc
stos
aaa
in
push
inc
cmpsb
arpl
pop
lods
into
push
divl
aas
cmpsb
sbb
adcb
mov
ret
rclb
outsb
movsl
or
jns
lods
aas
test
push
daa
imul
push
mov
sti
cld
sti
mov
sbb
jecxz
int
incb
cltd
jmp
jle
loopne
jmp
sbb
adc
jne
sub
mov
ljmp
aas
repz
mov
inc
loope
subb
jbe
psubusw
test
ja
and
insl
cmp
push
jns
inc
jns
mov
cwtl
rorb
mov
jg
imul
mov
add
loopne
imul
sub
mov
stc
mov
xchg
xor
jecxz
dec
in
mov
pop
add
adc
mov
sahf
ret
mov
stos
test
into
and
outsb
or
enter
sbb
cmovg
jb
repnz
stos
in
pushf
loop
sub
mov
push
mov
dec
lock
add
in
inc
xlat
ljmp
cmpsl
xchg
xor
fs
cmp
test
ffreep
rcrb
ja
push
inc
and
bound
loop
dec
mov
push
in
cmp
xor
lods
add
xchg
jle
aad
bound
pop
xor
call
nop
mov
mov
dec
xchg
imul
out
sar
insb
xor
push
xlat
adc
rcll
pop
mov
push
out
nop
cmp
mov
ss
js
cmp
pop
fsubs
mov
lahf
cmp
dec
aas
adc
inc
dec
bound
and
sahf
movsl
adc
mov
loope
sub
jp
push
rcll
test
sbb
aas
jl
test
xchg
ja
mov
rcrb
add
jns
fisttpll
das
jecxz
cld
mov
jo
dec
mov
ja
mov
sub
adc
xchg
push
shlb
testb
or
pushf
add
jnp
push
scas
popf
adc
dec
add
inc
out
xor
outsl
mov
xor
jnp
cwtl
gs
xchg
adc
mov
lock
ds
mov
call
xlat
cmp
xchg
or
popf
loope
mov
ret
out
ss
and
mov
xchg
xor
sub
pop
mov
ret
or
xor
pop
push
sbb
mov
dec
cs
in
mov
push
inc
bound
lret
xchg
in
cli
cld
pop
push
adc
xor
sub
gs
mov
in
les
imul
cmc
scas
lcall
out
out
dec
xorl
nop
inc
jmp
pop
sahf
xor
xchg
pop
pop
mov
pop
or
aaa
call
fistpl
mov
das
and
jno
aam
pop
add
xlat
loopne
xor
out
dec
out
and
mov
mov
repnz
xor
leave
cmpsl
sbb
out
loopne
add
or
outsb
in
or
sub
push
cmp
add
ret
call
adc
in
aaa
mov
shrl
out
lret
enter
dec
enter
stos
lret
mov
ret
fnstcw
into
loope
leave
xchg
addr16
jmp
jnp
imul
into
iret
dec
iret
push
add
pop
xchg
xchg
xor
and
adc
in
sbb
xchg
imull
icebp
jae
sbb
sub
mov
or
in
cmp
and
and
lahf
xor
data16
scas
loop
popf
adc
sub
mov
mov
push
test
pop
jge
jnp
add
aam
sbb
add
and
mov
xchg
sbb
ret
jle
xlat
push
push
sub
and
je
and
rcll
pop
jnp
notl
cmp
push
adc
or
xor
icebp
sub
stc
mov
add
mov
jp
xor
gs
cwtl
or
repz
jmp
pop
out
movsb
lret
hlt
jp
addb
adc
or
daa
xchg
cmpsl
xor
jge
stos
test
insb
mov
inc
adc
cli
rcll
mov
adc
pop
jns
sub
dec
popf
outsb
dec
and
shld
popl
pop
je,pt
aas
pusha
pop
adc
pop
fs
rolb
and
inc
and
movsl
sbb
loopne
xchg
gs
fsubl
cmp
adc
dec
test
pop
pop
sbb
jge
mov
psubq
cmp
js
aad
jne
mov
adc
dec
addl
xor
push
mov
divl
pop
cmc
shrb
mov
out
fyl2xp1
in
pop
mov
cmpsl
and
movsl
jne
popa
sbb
aad
sub
sub
sub
shl
xchg
lock
fadd
ja
xchg
adc
or
lahf
jl
adcl
sbb
inc
sub
fisttpll
dec
jp
div
fwait
push
xchg
ljmp
test
jge
dec
pop
test
and
xor
rol
inc
inc
insb
pop
sub
mov
popf
add
data16
or
sub
lret
mov
fprem
push
jbe
ds
mov
loopne
rcr
xor
mov
and
sbb
movsb
pop
xor
loopne
or
leave
repnz
push
sbb
mov
das
adc
scas
mov
data16
pushw
sbb
outsb
push
and
out
stos
lds
mov
push
xchg
jbe
mov
pop
push
add
mov
test
leave
stc
rorl
iret
ljmp
fdivrs
fstpt
cmc
cmp
pop
pop
lcall
sbb
xchg
addr16
push
dec
gs
in
repz
int
inc
sbb
and
inc
ret
in
cmpsl
daa
inc
mov
push
leave
insb
sbb
daa
test
into
cmpsl
rolb
imul
pusha
or
mov
movsl
mov
fidivrs
jne
aas
lret
adc
test
xchg
ret
and
ja
loop
or
test
notb
and
das
pusha
xor
sub
test
dec
js
pop
dec
xor
pop
fisubrl
into
into
lock
lcall
dec
sbb
cmpsb
stc
aad
inc
leave
cltd
sbb
stos
sbb
xchg
pop
mov
fsubl
add
pop
shlb
cli
pushf
push
push
out
or
jns
shll
jge
test
fucomip
mov
mov
je
or
std
outsl
sub
xor
and
das
sbb
aad
and
xchg
ror
movsl
add
add
mov
xchg
lcall
mov
add
leave
jp
xchg
mov
aaa
int3
mov
rcr
cmpsb
add
jo
ret
xchg
jecxz
repnz
mov
sti
out
fstps
aad
and
xchg
shrb
cmpsb
ljmp
int
jecxz
push
inc
sbb
pop
lret
int
mov
jae
dec
push
lods
jno
jmp
dec
dec
pop
sbb
in
fs
xor
add
test
mov
movsl
aaa
mov
mov
jge
in
mov
push
jl
pop
in
in
cli
cltd
lea
ja
xor
pop
fisubrs
js
stc
fs
mov
pop
mov
test
xchg
sbb
cmp
inc
aam
dec
push
jb
cmpsl
xor
mov
retw
rorb
push
popa
stos
pop
es
push
or
in
mov
data16
cmovge
icebp
inc
and
pop
jo
xchg
scas
repnz
stc
sti
in
cli
les
lods
sbb
mov
movsl
xchg
test
push
and
add
in
ja
and
out
and
pop
lret
add
pop
sbb
cmpsb
icebp
xchg
lret
adc
mov
sbb
shr
or
pop
cli
jge
push
sub
mov
ret
dec
push
test
and
pop
lahf
push
push
daa
aad
jne
pushl
push
div
cmp
lds
ret
and
sbb
pushf
sub
rolb
outsb
inc
in
rcrb
push
cmp
push
fcoml
scas
in
fisttpll
pushf
fnsave
mov
xchg
nop
pop
add
xchg
inc
popf
adc
inc
daa
aam
push
sbb
mov
push
mov
inc
xorb
push
sub
inc
add
xor
push
lea
or
cwtl
dec
stos
xchg
lcall
push
sbb
adc
ficoms
in
shrb
xor
push
rcrl
ret
sub
mov
add
insb
mov
cmpsl
pop
cld
cld
arpl
ljmp
fidivs
jns
out
lea
stos
mov
mov
push
xor
xor
test
hlt
jae
les
mov
leave
add
icebp
sbb
arpl
into
std
lods
jmp
push
jmp
mov
test
mov
jl
icebp
ja
scas
test
iret
out
push
jp,pn
pop
fdivs
mov
stc
and
sahf
enter
loopne
movsl
stos
inc
jno
pop
lock
push
jbe
inc
xlat
jns
add
push
shrb
inc
sub
cmp
push
movsb
insb
jbe
pop
repnz
add
repz
movsb
jmp
inc
lock
sbb
movsb
xor
dec
adc
enter
loopne
xchg
es
mov
rcr
mov
pushl
les
jl
ja
loop
enter
push
adc
fwait
adc
aad
negl
mov
mov
push
stc
push
push
lret
or
add
stos
and
xchg
add
push
lcall
mov
dec
scas
insb
sarb
lods
and
mov
dec
add
sbb
mov
mov
jbe
dec
pop
incl
ljmp
leave
je
or
fimull
mov
cmp
fwait
inc
test
insb
lods
jnp
pushw
arpl
cmpsb
fldl2e
loopne
out
dec
dec
sti
es
notb
in
push
hlt
ret
scas
xchg
loopne
mov
dec
push
mov
sub
and
scas
stc
int
ja
cmpsl
xchg
aam
pop
mov
fcompl
xor
sti
mov
mov
xlat
lds
xchg
out
lods
sub
sbb
loop
ficompl
xor
add
jecxz
cmove
mov
loop
loope
push
mov
enter
mov
test
xchg
cltd
mov
dec
pop
cmp
inc
mov
lahf
mov
clc
imul
outsb
jnp
push
lahf
add
and
jb
addl
lods
pop
push
fisubs
adc
xor
pop
inc
cld
std
mov
pusha
jp
mov
jns
nop
mov
jge
push
jbe
cmp
add
fidivrl
pushf
sbb
mov
cmpsb
jbe
inc
flds
sbb
pop
pushf
inc
shll
movsb
arpl
mov
rol
divl
std
adc
push
divl
vmovdqu
stos
mov
inc
ret
sub
aam
pop
push
adcl
movsb
dec
xchg
ficompl
xchg
cmp
mov
or
adc
adc
inc
fsqrt
or
fsubrs
movsb
fwait
sbb
or
push
push
aaa
das
bound
fcmove
js
out
int
and
ja
and
jnp
test
sbb
shrb
push
lahf
or
fwait
cld
lret
leave
rcrb
fmul
cwtl
sbb
xchg
adc
pushf
movsl
movsl
mov
xchg
imul
push
ds
push
inc
imul
add
imul
or
in
andb
dec
cmp
orb
test
shll
mov
jge
mov
jg
ficomps
arpl
sub
push
fisttpll
inc
lret
in
int3
lods
faddl
or
insl
lahf
sub
cmpsl
mulb
mov
test
xchg
imul
add
imul
xlat
outsb
jg
jecxz
imul
fdivs
add
pop
pop
sbb
cmp
sub
cltd
jb
push
ss
ret
shll
cmp
faddp
or
inc
dec
jecxz
out
mov
jne
sbb
lock
mov
mov
jg
xor
fsubl
adcb
jnp
aas
cmpsb
stos
mov
insb
cli
adc
ja
or
fisubl
test
andl
xchg
push
jne
inc
stos
add
lods
dec
call
cmpsb
fwait
or
je
scas
jg
jno
push
pop
adc
cmp
inc
out
mov
cmpb
fcmovnb
out
mov
xor
dec
adc
icebp
repz
sub
jne
pop
roll
mov
cmc
push
test
stc
inc
rcrb
or
and
lret
pop
mov
pop
mov
movsb
pop
xor
push
fcompp
hlt
xchg
loopne
cmpsb
rclb
push
dec
sub
adc
cmc
sbb
js
sbb
push
sub
mov
inc
mov
inc
jo
repz
shlb
outsb
data16
adcl
jg
int3
sarl
push
push
imul
sub
int3
push
or
inc
stos
pop
cmp
pop
mov
sub
add
jge
xchg
gs
outsb
or
sub
fnstenv
xor
scas
adc
cwtl
and
adc
mov
loopne
xor
mov
test
aaa
out
push
shrb
xor
xlat
nop
dec
fucomip
ret
or
fnclex
mov
adc
lock
or
sub
mov
cwtl
mov
mov
sar
cmpsl
xor
adc
and
mov
rcrb
mov
stos
push
ret
repnz
mov
inc
mov
sahf
ja
cltd
gs
mov
xor
lret
dec
xchg
out
pop
shr
sti
and
je
cmp
xlat
cld
mov
sub
divb
out
test
mov
dec
add
faddp
das
out
cmp
xchg
aaa
mov
fsubs
sub
push
outsl
cltd
bound
sbb
fildll
jnp
or
push
sti
xchg
cli
mov
arpl
pop
sbb
cld
loope
mov
shlb
mov
pop
arpl
and
xchg
insl
nop
xor
xchg
cmpl
jp
push
mov
sbb
push
push
jo
fstpt
lret
mov
lds
iret
sub
cld
pop
mov
insl
addr16
in
lods
cmc
arpl
xchg
xlat
test
dec
add
pop
xchg
cmp
out
popf
add
or
mov
push
aaa
dec
cmp
pop
lahf
jnp
dec
xchg
mov
mov
insl
xchg
mov
mov
std
jmp
arpl
lock
cmpsl
jge
mov
mov
mull
mov
inc
pop
mov
adc
mov
sub
dec
rcrb
fmull
cwtl
repz
stos
mov
push
in
jno
dec
bound
jae
data16
xchg
and
out
xor
fcompl
mov
jle
push
cmp
pushf
mov
idivb
push
xchg
scas
popf
inc
loopne
add
pop
out
mov
push
mov
lcall
xor
mov
fcompl
push
xlat
mov
popf
dec
ret
mov
mov
leave
popf
sahf
and
xor
push
jmp
cli
sub
cs
jbe
dec
arpl
and
jl
mov
pop
scas
and
mov
mov
jns
and
push
lods
mov
enter
mov
jnp
and
inc
aad
mov
inc
or
and
lods
adc
push
aam
pop
enter
mov
push
stos
fwait
icebp
mov
jnp
cmp
mov
dec
jo
cmp
dec
rol
loop
fiaddl
jno
mov
push
mov
inc
push
cs
add
push
cmp
pop
add
ss
cmp
add
aad
jo
dec
das
lcall
jle
mov
xchg
fcomp
andl
mov
add
push
pop
mov
movsl
fisubrs
jmp
push
rcll
pop
stos
adc
mov
xchg
call
leave
mov
repnz
enter
xchg
ds
pop
push
add
call
mov
push
js
lock
jle
pop
and
cli
ss
iret
pusha
data16
mov
xchg
mov
arpl
testl
shl
es
pop
mov
sub
mov
cld
sub
ret
pop
pop
or
pop
insb
inc
loopne
leave
fidivrs
pop
pop
pop
js
cmp
pop
jns
or
int3
repz
imul
jecxz
mov
test
testb
mov
iret
cmc
in
frstor
dec
xor
inc
or
cltd
insl
outsb
mov
pop
adc
sub
push
es
fldenv
xor
pop
dec
loop
fs
pop
ret
or
insb
mov
scas
cmp
arpl
fdivl
xchg
jmp
loope
sub
pushf
inc
xchg
inc
jb
int3
push
lret
jmp
mov
cltd
or
inc
push
mov
lock
sub
xchg
push
xlat
call
add
movsl
sbb
data16
mov
sub
pop
jb
sub
sub
sbb
and
add
in
mov
jne
aad
cmp
fs
divl
and
push
or
push
cmpsb
adc
mov
mov
daa
fists
and
bound
jmp
fdivs
lods
iret
decl
jl
decb
xor
sahf
aad
sub
or
push
lds
sti
sub
inc
pop
pop
sub
addb
iret
je
daa
mov
loop
test
sbb
movsb
out
xchg
push
xor
sub
movb
pop
sub
push
xchg
or
pop
pop
sbb
int
pushf
dec
add
sub
jnp
sti
in
into
or
pop
mov
xor
cmp
add
mov
rcll
mov
sbb
jmp
pushf
mov
pop
lret
and
sub
gs
jbe
fsubl
jbe
fildll
fbstp
icebp
and
fiadds
in
mov
je
packuswb
insb
lret
mov
loope
and
dec
addl
je
les
xchg
addr16
inc
push
loop
jo
pushf
jbe
data16
xor
mov
mov
jp
xor
mov
jp
das
xchg
sbb
xor
jg
cmp
imul
lcall
pusha
js
and
int3
sub
push
mov
pop
push
jnp
pop
iret
lret
sarl
mov
pop
sbb
lret
movsb
popf
sbb
imul
es
sbb
xchg
subl
jo
fisttpl
imul
lahf
mov
add
xchg
cmc
mov
inc
cmp
cmpl
movsb
push
push
sbb
stos
lea
dec
pop
in
cmp
aam
addr16
std
xchg
mov
into
popa
sarl
cmp
xor
pop
xor
dec
in
xor
subb
cmp
pop
jns
mov
pop
movsb
inc
sub
sti
jb
push
push
outsb
in
cmc
xchg
jb
test
inc
add
mov
adc
xchg
loope
jae
iret
sahf
and
repnz
jae
mov
insl
mov
jl
cltd
inc
pop
testl
mov
push
mov
push
sbb
add
out
fst
inc
sbb
mov
pop
mov
lahf
mov
dec
in
jl
ficomps
inc
mov
les
lods
movsb
icebp
push
insb
push
loope
pop
xor
sbb
sti
xor
aad
lock
mov
add
hlt
divb
lret
jg
xor
mov
mov
outsb
ja
add
call
inc
or
xor
push
dec
nop
adc
xorl
push
sahf
cmc
jnp
cs
cmp
rcr
stos
call
sahf
loop
dec
jp
fidivl
sbb
mov
push
xor
jp
testb
inc
les
mov
fisubs
mov
pop
xchg
out
mov
lcall
push
jge
push
clc
shrl
mov
testb
xchg
movd
sti
shll
or
and
jae
popf
add
in
insl
aam
das
rcl
pop
aad
lcall
jnp
shl
add
in
pop
push
or
int3
xchg
cmp
shl
mov
pop
mov
inc
into
cmp
jle
mov
xchg
mov
pop
dec
cmpsb
inc
mov
addr16
add
xchg
in
lds
sub
lods
sbb
push
aaa
sbb
test
fists
nop
mov
push
test
mov
lret
mov
inc
stc
sbb
mov
mov
gs
lea
mov
cld
cli
daa
add
sbb
and
mov
cmp
cmp
pop
stos
loopne
insl
jle
or
adc
sbb
es
sbb
mov
push
adc
movsb
daa
xor
repnz
int3
push
movsl
notl
es
pop
or
mov
push
negb
fisubl
sbb
add
dec
test
fsubl
adc
pop
jmp
pop
lahf
ljmp
aas
mov
xor
add
cmp
fildl
fstp
out
or
lock
and
add
mov
shll
xchg
std
negb
jl
push
jo
jbe
push
loope
push
mov
insb
cmpb
or
ja
push
ret
sub
mov
cmpsb
push
movsb
jl
xchg
sbb
rclb
push
mov
mov
inc
cmpsb
pop
cmpsl
pop
stc
inc
or
mov
pop
adc
jp
adc
cli
sbb
mov
cwtl
or
and
xchg
pop
xor
sub
mov
sahf
sahf
xchg
fisubs
mov
into
je
or
add
cli
push
lret
into
bound
fistps
ss
lods
xchg
stos
aad
xchg
es
out
jnp
fsubrs
lret
sahf
cmp
orb
or
mov
fcmovnbe
es
dec
fdivl
out
jl
mov
bound
add
shl
push
or
insl
push
ljmp
in
movsl
dec
add
pop
das
pop
into
shrl
cwtl
mull
sub
lea
mov
inc
and
test
iret
sarl
sub
fsubrs
add
add
lahf
in
das
jl
cmc
in
cmpsb
loope
pop
push
lcall
addr16
jmp
pop
aam
test
mov
and
jecxz
lcall
pop
pop
in
lods
fisttpll
cmpsl
stos
out
pop
fcoms
push
and
es
jp
inc
test
xchg
pop
push
pop
int
cmp
gs
cmpsb
inc
mov
repnz
lahf
adc
jmp
fstpt
inc
dec
and
cli
mov
sbb
mov
rclb
stos
loope
pushf
sub
or
cmc
cmp
call
sbb
mov
ja
cmp
mov
jae
or
pop
cmp
adcb
je
loop
xchg
jb,pt
ret
and
lahf
pop
loope
fnstsw
jge
insl
adc
cmpsl
jg
push
jb
lods
mov
andb
fisttpl
xor
dec
stos
adc
in
push
or
xchg
jb
xor
imull
subl
pusha
stc
int
cmp
jns
push
push
fs
add
out
mov
negl
and
fbstp
insw
mov
fstps
adc
sbb
scas
or
pop
pushf
push
sti
leave
frstor
cmp
leave
push
pop
and
and
sbb
test
es
loope
jge
jecxz
jmp
or
xchg
fucom
movsl
sbb
mov
xchg
mov
leave
jo
xchg
pop
pop
pop
fisubs
insl
xor
arpl
cmp
test
and
popa
or
xchg
das
jmp
divl
lock
out
scas
xchg
lods
xor
sbb
loop
push
pop
ret
popf
test
pop
negl
stos
sbb
xor
fcompl
or
or
xchg
in
fdivrl
mov
or
jb
inc
adc
cld
dec
mov
inc
fsubs
or
icebp
jp
lret
mov
mov
in
repnz
loopnew
push
adc
leave
in
push
cmpsl
movsl
fwait
push
enter
cmp
and
jle
add
jl
xchg
cs
xor
jg
xchg
fnstcw
cmpsb
jle
sub
repz
filds
inc
push
icebp
test
xor
and
testl
aad
cs
push
or
pop
int
subb
fcomi
inc
jecxz
neg
inc
aad
lret
mov
repnz
add
jecxz
insl
mov
sbb
pusha
sub
lea
or
sahf
decl
lods
xchg
inc
dec
push
add
hlt
aas
call
icebp
mov
adc
cmp
in
imul
mov
mov
shlb
popf
rcl
lret
xor
jo
addr16
jp
xchg
sub
push
jne
fnstsw
les
sbb
fsts
test
daa
lock
lods
ja
movsb
cld
loope
mov
adc
loop
sub
popl
inc
fsubrs
aas
loop
and
or
data16
or
jg
rcll
cs
xor
add
xor
mov
mov
in
mov
pop
jb
and
fs
ljmp
dec
test
in
mov
adcl
in
cwtl
jp
add
cmp
jae
aam
in
jmp
daa
inc
jge
rorl
pop
inc
int
repz
dec
xor
outsl
les
loopne
xor
adc
jae
push
fisubrs
adc
mov
xchg
clc
push
ret
adc
or
lret
push
dec
dec
fcomp
pushf
in
push
sub
adc
popa
sub
push
xlat
mov
stos
mov
std
mov
hlt
popf
and
sub
jp
xchg
enter
fnsave
fsubrs
cmp
sub
jmp
fs
sub
and
in
xor
jo
test
lcall
in
adc
out
adc
push
jae
loope
mov
jle
cmp
and
ss
out
cltd
sbb
jnp
xchg
xor
mov
aam
mov
xchg
jns
imul
jb
sbb
sbb
aad
cld
addb
sub
fsubr
inc
sbb
fdivl
idivl
cmp
mov
sbb
add
lods
jmp
ss
pop
add
in
ficoms
mov
push
enter
test
pop
push
adc
inc
lods
rcr
and
fstp
sub
pop
int
mov
insb
sub
jo
leave
mov
sarl
aaa
loopne
jl,pt
negl
mov
les
xorl
nop
or
mov
sbb
mov
cli
add
jns
inc
xorl
and
imul
sub
insb
add
mov
mov
and
mov
and
fisubs
movsl
std
out
gs
sbb
dec
cli
sbb
xor
aaa
push
mov
adc
neg
lea
sub
sbb
cld
sbb
jns
jb
jle
inc
pop
mov
add
cli
pop
cmc
xchg
or
mov
ret
lret
jge
or
jno
jg
rclb
ret
xchg
rorb
jp
fnsave
jp
adc
rcll
mov
add
in
fmuls
test
aas
xor
pop
aaa
sbb
cwtl
cmp
addb
push
mov
in
jge
int3
add
xchg
sahf
mov
jno
repz
xlat
jmp
insl
push
or
xchg
inc
cli
fistpll
pop
stos
add
fwait
mov
arpl
insb
aaa
push
loopne
mov
mov
sbbl
orb
jo
pop
mov
jle
pop
mov
aaa
xchg
mov
andnps
rolb
dec
jae
cmpl
div
cmp
int3
jg
sub
sahf
adc
test
stos
dec
push
xchg
aam
fcmovu
lock
in
or
call
les
lea
sub
push
mov
mov
je
lods
mov
sbb
addr16
aad
xchg
fdivrs
scas
lret
outsl
cmp
push
inc
xor
enter
mov
sub
enter
subl
popa
xor
sbb
cld
push
dec
cmp
add
xchg
jl
jmp
jo
inc
in
addr16
loopne
daa
jno
pop
rcrl
add
cmp
in
ljmp
mov
pop
push
push
cli
pusha
cli
arpl
mov
dec
fldcw
insb
aad
sub
cs
mov
add
subl
mov
popa
aas
xor
sbb
adc
popa
imul
mov
mov
sub
aad
insb
mov
jno
loope
test
inc
jmp
adc
pop
sbb
test
pusha
fwait
pop
outsb
mov
mov
or
shll
sbb
sbb
adc
pop
lcall
bound
inc
or
adc
fisubrs
les
mov
movsl
mov
push
lea
jmp
fldt
in
jno
dec
sub
pop
loopne
and
insl
lods
mov
sub
push
pop
and
mov
xchg
dec
enter
mov
add
hlt
inc
mov
xor
out
xor
call
jbe
pop
ds
push
mov
movsb
inc
subl
lret
ret
dec
sub
cmp
cs
mov
shlb
popa
imul
call
mov
mov
push
add
pushf
fwait
outsl
push
les
mov
int3
pop
adcb
aad
pusha
xchg
mov
mov
dec
xlat
std
lahf
cld
xchg
int
aaa
or
push
sbb
push
test
sbb
cmp
addr16
mov
mov
dec
stos
xchg
cmpl
in
sub
fsts
cmp
inc
bound
pop
xchg
roll
dec
leave
lret
or
nop
mov
stos
mov
add
int3
es
mov
ljmp
addr16
fdivrl
outsb
jmp
mov
pusha
adc
add
and
jnp
jne
dec
adc
test
mov
loopne
dec
push
jecxz
pushf
daa
mov
orb
and
scas
clc
mov
fwait
js
sub
push
in
cmpsl
jnp
mov
ljmp
and
into
rcrb
or
repz
popa
dec
jecxz
in
xchg
leave
lcall
pop
dec
mov
dec
add
mov
ljmp
iret
das
pop
js
jle
aad
jo
mov
jbe
cwtl
xor
jl
mov
aas
lods
xor
ljmp
and
fidivs
sub
pusha
insb
or
push
ret
subl
mov
lock
xchg
push
cltd
lods
lds
jb
int3
in
test
adc
dec
jbe
add
lods
cs
mov
adc
shll
adc
lock
dec
xchg
out
rorb
sub
xor
xlat
in
ja
lahf
outsl
jnp
stc
fwait
add
and
jmp
jge
sub
xchg
push
jnp
shlb
dec
inc
cmp
mov
cld
dec
inc
inc
sub
dec
ficoml
sbb
aaa
imul
out
xor
pushf
jbe
sbb
dec
mov
je
push
popa
call
frstor
rclb
out
jge
push
stc
inc
xchg
mov
popf
or
lods
into
out
pop
js
push
les
add
push
imul
test
mov
cmp
cmp
mov
cmp
aas
jbe
loop
mov
jmp
movsl
jecxz
sub
sbb
mov
mov
xchg
rclb
and
mov
cld
push
xchg
cmp
xchg
mov
mov
and
dec
mull
hlt
xor
jbe
mov
mov
lods
dec
xchg
lret
cmc
mov
movsb
int3
imul
sbbl
xlat
mov
subl
jno
mov
xor
mov
lret
mov
xchg
xcrypt-ofb
cmpsl
sub
enter
push
sub
xchg
xlat
mov
mov
and
bound
add
aam
notl
jl
inc
mov
mov
sub
mov
cmc
inc
mov
mov
inc
xchg
test
adc
jmp
rclb
sbb
adc
in
out
adc
inc
sbb
xchg
into
pop
xchg
sub
add
or
test
cli
gs
adc
add
sbb
push
mov
or
jg
dec
aas
sbb
daa
rcl
push
out
xchg
jb
sub
adc
out
data16
dec
test
fidivs
push
mov
adc
pop
das
sbb
mov
jge
repz
mov
ret
mov
xchg
mov
xchg
sbb
sahf
cltd
adc
jno
fists
out
mov
sub
and
in
dec
ret
lock
pop
mov
push
mov
sbb
sbb
and
xor
gs
data16
cmp
repz
out
popa
mov
sub
lock
mov
mov
inc
inc
sub
loop
pop
sarb
xor
gs
sbb
adcb
daa
sbb
push
push
insb
popa
mov
divl
push
mov
adc
pop
or
aas
mov
fisubs
mov
push
add
pop
stc
sbb
cwtl
out
fcompl
iret
sub
outsb
loope
lods
dec
pusha
cltd
xor
dec
cmp
shll
add
pop
jle
les
sub
cmp
out
scas
movsl
jae
xor
jae
mov
call
add
in
dec
in
mov
xchg
sahf
adc
loopne
ss
sbb
mov
jp
adcb
fldenv
push
mov
mov
jbe
int
int3
mov
add
fadd
mov
sarl
add
sub
inc
cmp
orb
add
addr16
pop
ror
lret
mov
outsb
dec
in
adc
xchg
insl
xchg
loope
ja
fiaddl
sti
jnp
sub
adc
jge
pop
jp
cltd
fs
fwait
jmp
adc
pop
stc
addb
mov
or
mov
mov
mov
jle
scas
cld
jecxz
mov
cmc
adc
lds
add
fs
imul
xor
mov
mov
outsl
test
push
in
add
xchg
sbb
and
iret
arpl
mov
pop
dec
cmp
outsb
push
and
sbb
pop
test
call
mov
jle
sbb
sub
xor
mov
mov
or
adc
out
je
shl
cmp
imul
push
fnstsw
repz
gs
or
fsubl
jmp
jle
inc
xchg
bnd
add
inc
movsl
jl
test
ljmp
pushf
into
scas
lock
sbb
or
pop
pop
and
xchg
divl
mov
sub
rorb
fs
jne
cmp
and
adc
scas
stos
lret
push
xchg
arpl
enter
pusha
adc
push
repz
jae
fsubl
push
scas
int3
dec
ret
pop
jno
je
xor
sbb
push
sub
mov
xor
dec
div
es
fidivrs
xchg
inc
and
je
inc
xchg
add
in
mov
xor
dec
or
and
xchg
xor
sbb
or
xor
dec
test
stos
sub
jbe
fisttpl
sub
adc
adc
je
add
test
sbb
je
sbb
out
out
pop
ja
cli
shr
mov
out
imul
ljmp
mov
adc
call
les
pop
adc
popf
test
roll
push
je
sbb
dec
xor
imul
xchg
movsl
repz
add
lret
cld
jb
sbbb
lcall
fs
decb
lock
and
lea
out
jg
inc
test
in
mov
jp
lret
out
xchg
ja
les
pusha
cld
ljmp
rcl
ja
gs
or
ja
and
or
ficoml
test
lea
dec
and
and
call
in
and
lea
loope
sub
sbb
adc
call
repz
push
cli
and
in
cmpl
rcrl
and
mov
push
push
pop
pushf
lods
cmpsl
adcl
sbb
stos
ja
push
dec
push
dec
cmp
cltd
xor
cli
movsb
test
sub
inc
std
xchg
fcmovu
add
mov
sbb
sbb
pusha
push
xchg
jbe
cmp
jno
sbb
fidivrs
cmpsb
sbbl
testb
or
mov
test
mov
push
and
daa
test
jno
icebp
jmp
bound
andl
mov
cmp
and
cwtl
call
mov
xchg
sbb
aad
movsb
cmp
arpl
fbld
pop
and
scas
mov
lcall
cs
shl
lods
mov
das
andnps
nop
and
aam
xchg
sub
cmc
fmul
dec
push
sub
pop
mov
mov
scas
andl
xchg
sub
mov
int
pop
loope
adc
repnz
invd
inc
sti
hlt
add
lods
mov
xchg
shlb
inc
aaa
arpl
add
xchg
xchg
add
and
jo
hlt
pushf
push
in
inc
dec
sti
daa
loop
filds
adcl
inc
loop
std
mov
pop
outsl
cmp
mov
mov
xor
jmp
orb
cmpsb
int
dec
mov
mov
adc
hlt
dec
mov
popa
repz
and
aam
ljmp
mov
cmp
clc
inc
xorl
fldt
pop
hlt
imul
push
jb
inc
loop
fnsave
pop
scas
inc
jp
imulb
inc
addr16
stos
lret
dec
icebp
mov
imul
xor
jmp
out
enter
test
mov
cli
inc
xor
int
add
iret
test
test
cmc
push
out
shr
pop
pop
jno
leave
mov
pushf
pop
fdivp
adc
dec
pop
inc
adc
sub
xchg
shll
sub
pop
shlb
mov
nop
dec
repnz
pop
xor
dec
mov
push
pop
jle
aad
mov
dec
aad
dec
mov
rorb
mov
mov
test
scas
addps
cmp
test
mov
sub
dec
push
into
xor
jnp
inc
push
mov
daa
push
cmpsb
clc
push
jbe
jmp
int
jb
test
aad
push
push
cmp
push
and
fisubs
pushf
add
bound
pop
mov
outsl
lock
movsb
cmp
xchg
out
sub
outsl
roll
push
mov
sbb
psllq
imul
pop
cbtw
shrl
jecxz
inc
call
adc
leave
repnz
and
mov
mov
mov
lock
jle
ljmp
mov
popa
addr16
sbb
fs
push
push
imul
daa
xor
ret
mov
cmp
xchg
std
into
dec
jo
or
xor
sti
test
and
out
addl
cmpsb
daa
or
add
insl
fistpll
xor
adc
outsb
and
xchg
inc
mov
outsb
ret
mov
lods
jge
or
push
dec
cltd
adc
push
push
pop
shrb
inc
test
push
push
mov
xchg
push
cmp
lret
mov
adc
shll
js
bound
clc
inc
push
xchg
iret
jb
loope
jle
popf
or
out
or
sti
pop
das
in
mov
icebp
add
fistl
repnz
push
outsl
push
je
ret
fsubrs
mov
mov
lret
adcb
in
jg
dec
pop
hlt
and
out
mov
mov
jmp
pop
jne
add
jbe
push
subl
es
push
ret
mov
jmp
push
test
inc
mov
fstps
push
in
push
in
dec
xor
lahf
push
sub
imul
js,pn
fidivl
xacquire
cmp
testb
mov
pop
and
in
notb
rolb
addr16
insl
ret
cmpsl
cmp
fldl
inc
cmc
arpl
pop
jbe
pop
daa
fcmovne
xchg
xchg
ret
mov
sub
jbe
jo
inc
sbb
lahf
or
mov
cs
cmpsb
int3
in
cmp
flds
lock
repnz
pop
loope
ret
data16
lock
and
add
pop
lock
mov
add
mov
stc
push
mov
je
outsb
loope
fwait
mov
stos
jno
add
or
fbstp
push
mov
scas
xchg
ret
lahf
imul
mov
push
xchg
in
hlt
andb
mov
dec
aad
ljmp
xchg
mov
inc
shll
xchg
sbb
xor
jg
imul
vpcmpgtd
cwtl
xor
inc
pop
loop
or
fimull
push
adc
loopne
add
sbb
in
comiss
notl
adc
mov
or
inc
pushf
fbld
nop
push
mov
push
cltd
cmp
pop
std
inc
loope
lahf
loopne
into
mov
inc
imulb
bound
sti
sbb
sbbl
idivl
in
mov
loope
jno
jnp
xchg
sbb
outsb
pop
xchg
cs
jecxz
lcall
and
jmp
dec
mov
jmp
mov
dec
fmull
dec
out
mov
arpl
mov
cmpsb
mov
out
rolb
in
and
pushf
sahf
inc
sub
add
js
ret
repnz
into
lcall
ffreep
xchg
inc
in
ret
xor
mov
incl
enter
lds
fucomp
cmpsl
pop
push
add
sbb
push
mov
pop
sbb
loop
cmpsl
data16
cli
or
cwtl
pushf
mov
xchg
sbb
idivl
das
adc
fsubrl
mov
aaa
mov
jb
jecxz
ljmp
test
je
insb
ja
insb
arpl
mov
xchg
jbe
ret
jne
lock
popf
mov
xchg
push
dec
add
movntps
and
and
loopne
out
out
jp
out
cltd
fcmovne
xchg
gs
repz
in
add
or
pop
add
outsb
xor
sub
fstp
jne
stc
mov
adc
lcall
sbb
stos
cltd
or
mov
cmc
mov
loopne
jl
sbb
pop
scas
shr
loop
xor
cmp
mov
ret
cmp
pop
cli
jge
popa
rorb
enter
jecxz
pushf
sub
rorb
adc
cmp
jnp
xor
bound
adc
add
outsb
adc
inc
jno
cli
cmc
lds
pop
in
call
shrb
mov
scas
sarb
std
jno
subb
xor
jne
aam
mov
cmp
ret
arpl
scas
adc
fidivs
test
pop
in
jno
lods
shlb
push
cltd
andl
decb
cmpsb
mov
adc
loop
mov
das
add
notb
fbstp
out
scas
inc
ljmp
push
cmp
xorb
mov
je
jnp
mov
pop
push
or
sbb
push
lret
inc
scas
jg
cmp
adc
add
cmp
imul
or
adc
lods
push
sti
lods
iret
cmpsl
xor
fiaddl
fcomps
sti
mov
lret
push
aas
dec
cmp
filds
dec
es
adc
mov
sub
mov
mov
mov
mov
das
xchg
repnz
pop
cs
cmp
mov
ror
cmp
call
pop
icebp
sbb
mov
test
repnz
stc
leave
adc
lods
cmc
pushw
push
jecxz
test
mov
push
push
xor
dec
repnz
mov
pop
insl
xor
lock
dec
mov
hlt
enter
cmpsl
data16
inc
shll
jecxz
mov
push
outsl
jmp
xchg
and
cli
int
xchg
les
nop
adc
xor
pusha
jo
int
rcrb
rcrl
lret
mov
add
jmp
or
out
cmp
push
dec
mov
insl
add
test
mov
jge
rorb
std
inc
sub
adc
lcall
int3
loope
pop
push
xchg
pop
mov
push
into
add
movsb
mov
aas
shr
fistpl
aam
sub
xchg
nop
fisttps
jge
jmp
adc
mov
xor
xor
mov
jne
cmc
mov
cmp
int
cmp
mov
and
sbb
scas
out
movl
dec
popa
add
xor
pop
dec
sbb
mov
xor
lea
push
sbb
int
sub
movsl
outsb
jne
dec
pop
sub
dec
adc
fcomps
mov
add
mov
insl
jge
out
enter
or
mov
jg
dec
cmp
aaa
xorb
xchg
inc
movsb
mov
loop
adc
fcompl
movb
fnstcw
loope
sbb
inc
jle
pop
mov
push
in
fldl
test
add
int3
mov
rclb
movsl
jl
js
mov
add
cmpsl
mov
push
or
out
inc
cmp
nop
hlt
or
push
inc
or
iret
jg
ljmp
dec
pop
int3
adc
insl
test
pop
mov
mov
mov
scas
or
adc
loope
xchg
fneni(8087
sti
into
andb
out
inc
adc
lock
or
fs
or
mov
repnz
add
sub
or
push
inc
into
push
xor
adc
bound
iret
inc
cwtl
push
mov
stos
cwtl
daa
jmp
or
inc
jp
dec
negl
aaa
data16
dec
mov
mov
vandnps
add
fstpl
add
xor
jge
mov
dec
in
ficoms
icebp
add
rcrb
aam
mov
xchg
cltd
fstpl
jo
lods
sbb
pop
out
add
lods
ss
jle
sar
and
pop
xlat
xchg
push
add
pusha
add
mov
mov
jns
pop
pop
gs
inc
jmp
jbe
push
std
daa
mov
cld
xchg
or
or
clc
sbb
outsb
es
lds
iret
add
inc
add
out
lds
cmp
fs
imul
movsl
or
push
je
call
out
mov
outsb
or
in
ljmp
aas
iret
pop
pop
cmpsb
pop
inc
cmpsb
add
sub
xchg
sub
jg
dec
mov
xchg
xor
mov
test
mov
addr16
xor
push
lods
mov
or
lods
fisttps
jae
xor
mov
nop
je
push
test
pop
mov
sbb
push
add
loope
xlat
or
jge
or
inc
out
push
mov
insb
sbb
push
jecxz
jl
push
mov
outsl
dec
gs
testb
xor
pop
or
sbb
js
xchg
ret
stc
sahf
lock
cld
mov
ret
data16
divb
dec
push
push
pushf
loopne
aaa
cltd
xchg
push
dec
xchg
insl
push
cmc
js
fcoms
sub
int3
call
fisttpl
mov
xchg
inc
shll
movsl
aam
inc
xchg
push
fsubs
jb
and
aas
arpl
add
mov
out
pusha
insb
fwait
call
pop
ljmp
xor
lcall
sarl
mov
sbb
rorl
into
lret
aas
add
mov
sub
ljmp
sub
pop
loop
push
in
rcrb
jne
mov
xchg
in
sbb
jae
xor
or
mov
pop
jecxz
lret
push
mov
xchg
adc
cmp
lock
hlt
jae
jecxz
ljmp
imul
cmpsb
add
jmp
les
stos
mov
jl
pop
loop
xchg
bound
mov
mov
pop
in
dec
mov
pop
mov
cli
lods
repnz
pop
push
inc
xchg
cld
inc
inc
leave
mov
sbbb
jmp
ljmp
pusha
pop
pop
data16
xchg
lock
mov
sbb
or
xor
add
repz
inc
lock
movb
cmp
dec
inc
movsb
push
inc
nop
mov
imul
sbb
add
inc
jbe
sub
sub
addr16
sub
sub
pop
inc
and
cltd
and
bound
mov
out
adc
inc
test
sbb
jno
push
sbb
cmp
imul
int
mov
fs
lods
mov
bound
in
push
cmpsb
daa
vunpckhps
or
ret
fisubs
pop
fstl
xor
pop
arpl
pop
stos
lds
or
stos
insb
lock
lods
faddl
movsl
adc
cmp
sub
pop
mov
fs
repnz
fistpll
orb
lock
in
mov
add
cmpl
inc
lahf
sbb
std
getsec
sub
addr16
mov
ret
jae
push
xchg
pusha
or
mov
jecxz
shrl
fwait
xchg
xor
xor
je
dec
or
addb
add
test
push
sub
mov
add
inc
mov
mov
outsb
shr
in
mov
mov
jmp
clc
enter
jnp
xor
jns
dec
out
into
cmpsb
jne
ja
stos
pop
sar
push
push
dec
adc
loope
mov
mov
test
and
sub
fs
orb
je
rcl
in
jns
sub
pop
movups
movsb
mov
hlt
sti
add
and
insl
jecxz
rorb
cmp
jae
cmp
ds
mov
int3
add
fstl
imul
mov
ret
fadds
adc
mov
and
loop
pmulhw
jne
enter
adc
mov
fcompl
push
ret
push
sbb
sub
push
data16
es
and
mov
incb
out
ljmp
sub
dec
cmp
jmp
sarl
adc
stos
dec
lret
pop
inc
fs
das
scas
push
cmp
dec
stc
adc
scas
arpl
mov
ret
jg
sbb
cs
sbb
cmp
outsl
jge
push
lcall
das
ljmp
sbb
mov
or
roll
pop
ljmp
jg
push
xor
test
dec
sub
sbb
pushf
add
loope
xchg
jae
push
ds
imul
mov
cmpsl
cmpsb
and
push
jns
inc
cmp
cmp
les
out
ret
in
push
and
sub
ficoms
int
testb
repnz
shr
test
add
loop
add
sub
fwait
iret
jne
jmp
add
addr16
sub
sahf
xchg
imul
sub
fstl
and
pop
loope
push
out
in
mov
jno
pop
in
cmpsl
dec
insb
xor
arpl
jno
cmpsl
jno
movsb
mov
cltd
cmc
or
in
cltd
and
jno
xchg
push
icebp
mov
mov
mov
lods
enter
and
lcall
in
movl
popa
add
jae
int
add
hlt
sub
or
mov
or
sbb
roll
inc
cld
lods
out
xchg
enter
push
xchg
jbe
loopne
add
add
jo
mov
pop
mov
dec
add
or
dec
in
dec
not
out
mov
push
or
psubq
inc
test
mov
nop
enter
inc
subb
into
adc
ja
sahf
xor
cltd
cmpsl
jbe
xor
inc
dec
jmp
rolb
xchg
add
push
mov
pop
fstpt
or
outsl
fildll
ljmp
pop
adc
imul
sbb
xor
xchg
lods
add
push
jg
outsl
push
in
lods
ret
ret
mov
cld
enter
push
popa
adcb
cltd
sbb
mov
pop
jecxz
pop
test
dec
push
sbb
adc
scas
enter
dec
sbb
mov
mov
cltd
dec
imul
add
out
xchg
xor
jo
les
cmp
mov
dec
and
aam
out
push
mov
pop
cmp
mov
push
loope
ss
movl
mov
clc
dec
imul
add
xchg
fcmovnbe
inc
in
push
fs
sbb
mov
xor
push
pop
pop
xor
xchg
cmp
mov
leave
js
jg
xor
daa
scas
jnp
shl
jns
ljmp
std
xchg
psubw
mov
push
mov
imul
and
gs
adc
jl
xlat
sub
popf
adc
jno
inc
xchg
jnp
daa
add
adcl
jge
ret
iret
lds
mov
xor
fmull
cmpsl
je
add
fdivrl
adc
push
pop
aad
mov
dec
js
mov
mov
bswap
inc
data16
pusha
cltd
push
es
dec
js
add
mov
push
push
ret
cmp
mov
mov
xlat
incl
xchg
bound
push
repnz
ljmp
js
popa
outsb
sub
and
cmpsl
lcall
pop
in
cltd
inc
mov
fistl
cvttps2pi
lods
xchg
out
push
jo
xlat
add
cli
out
loopne
lea
ljmp
imul
insb
sti
sarb
add
adc
ljmp
scas
sbb
mov
mov
jle
lods
push
xchg
inc
xchg
cmpsb
shrb
add
mov
iret
orl
div
rclb
jg
or
mov
xchg
sub
pop
fcompl
xchg
aaa
out
push
xorl
in
dec
xchg
adcl
xor
gs
xor
add
and
fidivs
icebp
add
xchg
inc
out
movsb
mov
rclb
sub
jecxz
or
arpl
mov
fmuls
jo
stos
jne
and
inc
dec
int
or
movl
pusha
xchg
aam
cmc
adc
sub
outsb
dec
stos
adc
test
ljmp
ret
faddp
push
sarb
pop
lret
rcr
ss
mov
stos
push
xor
add
xchg
stos
add
xor
stc
repz
sbb
and
push
xchg
pusha
xsave
cmp
mov
add
mov
or
jns
cli
pop
jno
mov
sbb
adc
repnz
popa
mov
jp
loope
or
dec
sbb
or
popa
out
nop
stos
adc
pushf
pop
sahf
or
fidivrl
inc
lret
xchg
jp
dec
clc
arpl
jo
pop
cmp
das
scas
in
rol
sbb
add
push
pop
jl
cmc
adc
aam
cmpsb
and
jbe
sbb
inc
scas
pop
push
xchg
cli
xor
shrl
nop
fadd
lods
lcall
pop
in
add
fwait
mov
xor
repnz
sbb
dec
gs
sbb
rcrw
mov
lret
jp
lea
hlt
push
push
cmp
inc
push
enter
inc
xchg
loopne
scas
push
push
sbb
aad
sub
mov
test
pop
leave
xchg
and
dec
lretw
fwait
lods
arpl
ds
pop
cmp
or
test
cwtl
inc
xchg
push
mov
xchg
mov
arpl
hlt
add
sub
repz
lods
xlat
cmpsl
adc
mov
es
jmp
in
cwtl
xchg
sub
xor
dec
and
pop
xchg
idiv
repnz
pop
ds
inc
mov
bound
cwtl
xchg
cmc
shll
pop
mov
push
pop
ljmp
sbb
clc
add
push
xor
cli
cmpsb
xchg
outsb
xlat
scas
cmp
mov
leave
mov
mov
jno
adc
push
pop
or
negb
jle
leave
xor
mov
cmp
mov
sbb
xchg
mull
dec
add
rorl
shll
and
mov
push
jl
gs
jns
jmp
inc
test
out
dec
jb
les
jecxz
imul
je
lods
outsb
xor
dec
fwait
adc
push
icebp
cld
cmc
xor
mov
scas
jmp
xor
sbb
inc
dec
stos
mov
and
push
xacquire
adc
adc
sub
xorb
cmp
or
xchg
mov
icebp
ds
xchg
jge
mov
and
daa
rcr
dec
inc
mov
cmp
scas
cmpsl
mov
xchg
fistpl
add
jbe
ja
imul
insl
and
mov
adc
clc
lds
ror
or
shl
cld
xchg
xlat
add
xor
xor
xchg
out
mov
dec
adc
andb
sub
mov
xorl
clc
jl
mov
daa
sbb
popa
mov
dec
outsb
jne
or
hlt
inc
or
adcl
fiaddl
sbb
sub
rcrb
data16
sbb
xchg
xchg
xchg
mov
cmp
add
push
imul
inc
sbbb
xorb
xchg
mov
add
shll
xchg
imul
rorl
add
cmpsb
icebp
ds
lcall
push
push
fwait
push
jno
lock
jb
nop
insl
jns
push
dec
loop
pop
sub
xchg
addl
leave
jp
cmc
pop
int3
ljmp
jge
and
push
sbb
enter
mov
neg
outsb
outsb
add
int3
xchg
icebp
ret
mov
add
push
das
shll
subb
aaa
cmp
xor
jbe
xchg
mov
insb
cltd
sti
mov
test
add
shrl
stos
and
in
loopne
or
icebp
sub
push
mov
sbb
lret
or
sbb
in
dec
adc
sub
pop
aaa
cmpsl
and
xor
pusha
inc
xchg
xor
pop
xrelease
adc
lcall
ss
mov
mov
inc
mov
jns
std
andl
lahf
sti
stos
sub
stos
arpl
xchg
scas
cld
add
fldl2e
aaa
sbb
adc
add
cmc
shll
int
inc
stos
rorl
adc
dec
pop
mov
add
stc
xor
push
push
nop
mov
popf
inc
mov
mov
push
mov
scas
cli
lret
scas
ja
sub
jge
xor
jo
mov
push
xchg
xor
mov
mov
imul
loop
int3
mov
sahf
dec
sbb
loope
es
sahf
sbb
xor
test
or
add
dec
sub
pop
enter
fs
std
mov
xor
sub
and
mov
pop
in
cmp
ss
das
add
inc
push
sbb
pop
adc
fcmovnbe
aam
xor
test
adc
adc
and
inc
out
fs
xrelease
popa
pop
sbb
int3
bound
mov
sub
mov
hlt
dec
add
mov
dec
aaa
sahf
pop
cmp
push
mov
int3
adc
xchg
mull
ret
mov
sti
xor
xchg
sub
cmp
out
mov
push
cmc
sahf
rcll
jbe
dec
mov
or
add
push
sbb
mov
xchg
or
pop
inc
cld
les
fwait
sbb
fiadds
pop
ret
ja
inc
add
push
aad
or
shll
pop
loop
xchg
inc
cmp
gs
add
in
pushf
inc
in
xor
popa
in
roll
pop
sbb
mov
fs
loope
or
xchg
add
or
fidivl
jecxz
pop
lahf
inc
or
mov
push
xor
data16
dec
test
sti
stc
icebp
cli
mov
jnp
lret
lods
insl
add
testl
inc
popa
mov
out
out
popf
and
mov
cli
ljmp
pop
mov
and
cld
or
cli
cwtl
outsl
and
mov
and
cwtl
icebp
les
sahf
add
fnstcw
and
cld
gs
pop
jae
xchg
cmc
push
iret
int3
push
movsl
in
mov
xor
movsl
mul
cwtl
xchg
mov
pop
test
insl
ret
mov
js
xor
mov
scas
cvtps2pi
cltd
popf
push
inc
lcall
call
sub
imul
mov
addr16
lods
test
mov
cwtl
into
sub
clc
test
jecxz
das
push
cmp
movsb
icebp
add
push
cmpsl
nop
xchg
adc
mov
repz
aaa
paddd
and
pushf
jne
xor
mov
lds
inc
pusha
mov
dec
pop
inc
imul
ss
or
and
test
movsl
add
in
mov
in
sbb
xchg
ljmp
out
mov
addb
nop
rcrl
arpl
xor
lock
aas
mov
xor
cmpl
cmp
and
popf
bound
push
dec
dec
pop
movsl
sarb
add
lock
in
es
fs
out
test
push
outsl
mov
cld
adc
lret
xor
inc
setno
aas
push
jo
jle
mov
and
jle
mov
xchg
dec
adc
call
bound
ret
add
jg
sarb
jo
rolb
pop
ss
icebp
mov
int
cs
mov
pusha
push
jecxz
add
jl
jge
and
xor
fisubl
add
mov
jne
bound
sar
sbb
xlat
and
aaa
push
sbb
inc
out
jb
pop
ret
sbb
or
out
mov
fcoms
je
dec
cmp
imul
inc
lods
adc
lea
cmp
loope
leave
js
rcll
push
or
cld
cmc
mov
push
mov
icebp
fcmovne
lds
lods
jns
or
mov
push
adc
icebp
xchg
inc
jns
inc
aam
clc
and
jne
shrb
ljmp
lods
mov
add
push
cld
les
aad
mov
rorb
mov
lahf
rolb
sbb
cmp
cltd
xor
jl
outsl
addr16
xlat
and
dec
out
fidivrs
test
mov
sub
push
mov
sarl
popa
add
clc
xchg
mov
or
dec
stos
es
test
fbld
and
inc
mov
push
out
cmpsb
out
or
in
insb
push
xlat
out
mov
jmp
arpl
cs
cltd
cmpsb
loopne
mov
push
inc
and
fdivp
scas
mov
aad
ret
sub
lea
in
sub
or
xor
jns
jbe
sarb
aam
stos
inc
outsb
cmc
cli
mov
dec
cli
in
xchg
xchg
xchg
out
xor
sbb
jbe
sbb
sbb
and
leave
out
lea
xor
mov
out
adc
divb
adc
and
jecxz
or
mov
sub
sahf
pop
fistl
add
xchg
xchg
pop
push
pop
pop
sbb
push
xchg
lret
adc
mov
cmpsb
dec
cmp
dec
cmp
mov
enter
andb
dec
call
aam
insl
sbb
mov
das
push
or
mov
mov
decl
into
popf
outsl
mov
cmp
adc
lahf
lcall
aaa
je
lret
xchg
xchg
push
dec
cltd
cwtl
mov
mov
cld
neg
insb
xchg
push
adc
pusha
inc
fisubs
inc
jo
or
test
out
pop
sbb
jg
xchg
xchg
jecxz
testl
and
iret
sub
and
fisubrl
in
mov
outsb
pop
imulb
and
mov
mov
aaa
xchg
mov
and
fists
dec
ljmp
pushf
mov
sbb
push
pop
fmull
and
xchg
aas
dec
cmp
xchg
int3
xor
pop
std
inc
dec
jns
mov
fwait
sub
or
imul
mov
adc
aas
rcrl
mov
push
lret
lret
imul
loop
aad
shl
or
ret
inc
scas
adc
sarl
lods
xorb
sub
push
sahf
add
push
or
sbb
pop
shrl
mov
test
stos
cli
out
ds
cs
mov
mov
jmp
pop
in
leave
mov
les
out
ret
cmp
dec
mov
dec
bound
xchg
aaa
xchg
pushf
int
add
or
outsb
sbb
or
sbb
cmp
fstps
mov
jmp
dec
aaa
or
sti
loope
lahf
enter
mov
cli
stos
fwait
pop
test
xor
push
pop
cmp
lret
push
lret
jmp
adc
mov
mov
adc
lods
mov
mov
incb
int3
sti
adc
mov
daa
testb
mov
das
outsl
repnz
xchg
pop
lods
inc
jae
and
pop
rcl
fisubs
idivl
fmuls
into
dec
insb
push
dec
lea
sub
dec
outsb
ljmp
outsb
or
mov
xor
sub
negl
jg
test
mov
out
fisubs
popf
repz
ss
sub
movsb
dec
hlt
out
add
push
jl
out
popf
and
lock
movsb
mov
lods
mov
inc
add
roll
adc
pop
jl
xor
fstl
push
adc
xchg
cs
xchg
cltd
insb
imul
mov
scas
or
ds
mov
adc
mov
sbb
aam
xor
push
jnp
push
out
int
sar
fs
ds
push
jbe
mov
jae
mov
out
jbe
cli
shlb
pusha
xor
dec
or
sbb
xchg
mov
daa
cltd
les
inc
jle,pn
gs
rcpps
mov
lret
dec
inc
push
or
fcoml
jge
repnz
mov
xor
hlt
pusha
loop
imul
mov
jo
and
push
movl
pop
push
insb
inc
sarb
mov
lret
xorl
insb
fstpl
leave
jns
mov
xchg
outsb
insl
ss
in
es
push
popa
dec
mov
xor
mov
ljmp
mov
inc
imul
xor
dec
test
ljmp
inc
mov
mov
aad
cwtl
rorl
inc
dec
xchg
sub
xor
nop
out
dec
out
or
es
cmp
push
idivl
and
jmp
scas
xlat
mov
inc
aas
xchg
aas
subl
inc
iret
xchg
and
insb
pop
enter
xor
imul
push
mov
mov
xor
fisubs
push
dec
mov
sar
imul
jne
mov
mov
into
jo
inc
cmp
cld
lahf
mov
lods
inc
in
in
or
dec
icebp
outsb
or
push
daa
inc
cmp
stc
scas
add
cmp
dec
mov
mov
pop
mov
mov
fidivrs
js
subb
scas
xchg
push
aaa
jnp
arpl
addr16
ss
mov
nop
or
or
cmp
push
test
push
rol
adcl
xor
mov
add
mov
loopne
aas
jle
imul
fwait
or
insb
add
imul
dec
jge
or
pop
std
pop
aam
push
push
orb
scas
push
dec
pop
xor
xchg
jnp
rorb
jno
push
adcl
pop
loopne
outsl
out
mov
imul
jmp
sbb
xchg
or
inc
mov
pop
push
and
idiv
adc
adcl
jo
mov
in
xchg
mov
enter
pop
push
mov
jnp
les
mov
aaa
inc
push
ror
enter
lea
push
movsb
inc
lea
mov
xchg
xchg
jmp
xchg
adc
aas
scas
std
mov
jp
outsb
sti
shrb
xor
push
push
shll
inc
pop
aad
les
sbb
dec
mov
lock
sub
mov
in
add
dec
and
cltd
ret
js
xchg
or
cwtl
stc
jle
add
inc
jmp
movsl
repnz
or
xchg
pushf
lds
lea
pop
test
cmp
sub
xchg
pop
ja
je
insl
adc
sub
xchg
pop
and
mov
mov
outsl
pushf
cmp
pop
in
call
and
xchg
and
cld
or
shlb
mov
push
push
mov
stos
jnp
adc
xchg
lock
cmp
xor
lock
sbb
inc
repz
mov
jg
test
mov
mov
leave
cwtl
lock
xor
ret
out
cmc
popa
mov
inc
aaa
or
cltd
dec
jge
jb
jmp
cmp
push
jo
es
icebp
inc
jo
jl
jp
lcall
xchg
pop
mov
adc
cs
mov
mov
dec
sub
insl
and
rcrl
mov
jno
pop
fldenv
pusha
outsb
sub
adc
icebp
and
jbe
mov
shrb
xchg
dec
or
sbbb
jbe
pop
imul
mov
mov
mov
aas
adc
jns
adc
fnop
les
inc
test
aam
and
mov
sbb
test
test
push
sbb
inc
push
mov
xor
push
xchg
lret
out
mov
cmp
scas
das
or
jb
mov
in
lret
xor
push
cmpsb
faddl
cmpsb
jo
fdivs
outsb
mov
add
mov
cmc
stc
add
mov
filds
pop
dec
sub
dec
gs
pusha
cmpsb
decl
mov
loope
mov
sub
sbb
in
sbb
aas
popf
notb
dec
and
mov
in
sarl
xchg
push
xor
arpl
sub
aas
xchg
jbe
lods
pushf
in
shlb
push
mov
xchg
xor
fstl
or
mov
jae
cli
sub
push
sti
mov
aad
in
cmpsl
mov
movsb
sbb
or
or
or
inc
cmpsb
mov
lds
mov
dec
pop
addr16
dec
pshufw
sub
ficomps
fcmovbe
test
cmpsl
mov
xchg
sbb
sahf
jo
repnz
nop
insl
pop
in
dec
das
lret
ds
and
sub
push
push
rcll
in
fptan
pop
stos
pop
jecxz,pn
mov
pop
pop
aaa
es
outsb
sbb
je
cmpsl
and
out
add
cmp
or
fwait
cmp
das
sarb
in
push
jg
jl
and
adc
lea
stos
imul
scas
sub
sub
adc
inc
or
es
push
mov
fwait
les
adc
inc
mov
js
mov
cmp
popf
cmp
int
xchg
popa
dec
cwtl
fs
lock
loopne
mov
push
mov
add
mov
test
sbb
clc
inc
shlb
out
or
pop
shr
shll
pushfw
pop
in
das
pop
sub
test
imul
mov
stos
sti
jg
cli
out
jnp
adc
insl
pushf
adc
push
push
dec
push
dec
push
cs
test
jecxz
or
fsubp
or
sbb
leave
mov
mov
ficomps
push
push
mov
cmp
mov
popa
popl
test
mov
mov
leave
pop
ja
jl
popa
and
adc
shrb
add
inc
cmpsl
cltd
shrb
das
xor
ljmp
inc
pop
inc
add
jle
push
aam
mov
cld
xor
ret
shll
cwtl
jo
mov
call
mov
mov
int
adc
push
test
xlat
push
cltd
scas
mov
dec
push
inc
arpl
jae
pop
insb
leave
mov
pop
pushf
sti
test
push
pop
cmp
arpl
les
loope
xor
and
mov
mov
sub
inc
or
jne
sbb
ret
pop
inc
inc
xor
mov
or
ret
leave
xor
jns
or
shrb
ss
lret
mov
mov
aaa
xor
dec
sbb
push
mov
jne
or
imull
fistps
sub
push
mov
mov
int3
mov
cmp
sar
in
scas
test
sbb
sub
sub
jg
lods
mov
into
push
jnp
pusha
xor
dec
dec
jo
cmpsl
or
test
shrb
lahf
push
cwtl
xor
inc
push
jo
shrb
dec
jp
mov
filds
mov
adc
push
mov
inc
mov
inc
mov
mov
jecxz
add
pop
stc
out
movsb
push
push
mov
xlat
push
pop
or
mov
movsb
xchg
add
jp
sbb
fcmovu
cs
mov
mov
int
fstl
push
adc
mov
xor
sahf
mov
ds
fwait
repnz
call
fisttpll
test
cmp
adc
inc
xlat
mov
ja
es
movsl
fcoms
scas
stc
pop
lock
setl
mov
cmpsb
lds
outsb
movsb
push
push
aas
mov
jmp
xlat
divl
icebp
push
inc
add
in
lea
scas
adc
enter
orb
xor
inc
stc
aad
pop
mov
dec
jecxz
pop
loope
push
sub
or
jp
ljmp
add
test
lods
stc
int
mov
fucom
movsl
or
pop
ret
mov
push
enter
pushf
call
lcall
add
mov
iret
cmp
enter
pop
lea
mov
ja
inc
push
jle
mov
xchg
xchg
jmp
loope
jnp
jns
xchg
shlb
cltd
in
xor
push
push
push
mov
lods
cmpl
imul
lcall
arpl
inc
mov
dec
in
xchg
mov
sbb
movsb
subb
xchg
iret
and
jne
fildl
aaa
mov
mov
stos
das
and
pop
shl
mov
loope
loop
outsl
mov
inc
jle
cmp
testl
fldenv
and
adc
jecxz
jecxz
xor
mov
sbb
pop
scas
daa
inc
stc
cmp
lods
adc
in
cld
sar
or
ss
cmp
loope
pop
sub
add
je
in
lahf
cmpsb
mov
cmp
movsb
dec
jbe
bound
mov
cltd
call
jecxz
and
mov
xor
push
scas
lock
mov
popa
cwtl
dec
fistpll
and
jo
xchg
subb
test
or
push
and
sahf
test
in
nop
dec
mov
jae
notl
xor
hlt
fldt
sti
shrl
lret
addl
sub
pushf
or
inc
and
jp
jno
fsts
js
jbe
push
dec
hlt
shlb
les
cmpsb
sub
sti
test
xchg
cmpb
ja
lds
mov
repz
gs
enter
mov
jge
push
add
xorb
sub
cmpsl
fdivrl
das
insb
lret
mov
jp
mov
push
loope
cmp
repnz
fnop
subb
mov
addr16
subl
lock
outsb
sbb
pop
jne
pop
fimuls
and
or
loopne
inc
pop
popf
adc
stos
jp
push
cmp
pushf
divl
xchg
mov
mov
mov
xchg
adc
ds
mov
mov
mov
nop
je
mov
call
sbb
clc
xchg
lds
sar
jg
adc
xor
jmp
dec
dec
cwtl
dec
pop
push
pop
call
and
mov
nop
or
xor
divb
lock
loop
sbbl
decl
or
gs
clc
push
mov
es
imul
push
int3
inc
inc
rorl
orb
cwtl
pop
out
rcl
loopne
sbb
movsb
imul
add
sbb
loope
int
fistpl
jo
daa
xchg
and
sub
push
dec
jle
jno
mov
gs
lahf
xlat
push
cld
sbb
jecxz
xchg
cmp
aaa
mov
sti
int3
pop
or
sarl
jecxz
bound
repnz
pop
aam
ja
call
ss
popa
lods
clc
lds
mov
icebp
imul
pop
push
sub
dec
js
or
insb
mov
xchg
mov
xor
jl
daa
push
lret
cmp
mov
lfs
push
scas
fs
pop
and
xchg
add
mov
push
cmp
aam
std
out
add
or
loop
or
sbb
imul
sti
mov
gs
mov
popa
aaa
cltd
sub
xlat
xchg
inc
psubd
lcall
and
pop
cmp
testb
icebp
repnz
sbb
mov
pop
aas
cltd
test
mov
xor
es
lea
xor
popf
inc
aam
xchg
dec
loopne
mov
mov
lret
nop
in
fwait
push
inc
mov
mov
adc
xchg
mov
or
adc
inc
adc
aas
fcomp
hlt
outsl
adc
cld
adc
or
jp
mov
mov
dec
adc
or
add
pop
movsl
rcrl
cld
mov
mov
cmpsb
push
and
pop
dec
pop
push
cs
out
mov
testl
inc
repnz
mov
mov
nop
sahf
xchg
mov
movw
jbe
pop
lret
inc
dec
ja
or
pop
fs
dec
arpl
movsl
imul
ror
lret
inc
outsl
dec
stc
aam
push
pop
ja
pop
nop
das
popl
and
out
sbb
je
cwtl
dec
and
add
arpl
pop
jp
jb
mov
and
push
out
jl
lret
xor
cld
pop
notl
movsb
imul
xchg
or
sbb
pop
push
pop
jbe
jo
xor
cmpsl
and
cmpsl
jne
inc
sbb
pop
pop
mov
or
adc
addr16
mov
out
mov
loop
mov
adc
push
and
push
push
inc
and
clc
mov
out
mov
jmp
cmp
dec
push
mov
xchg
mov
fcoms
xchg
sbb
jnp
push
clc
sahf
lret
xchg
mov
ret
icebp
pop
pop
mov
jl
mov
stc
nop
outsb
cltd
push
push
mov
xchg
sub
int
faddl
loopne
pusha
aad
cmp
mov
fs
push
mov
xchg
inc
or
push
inc
ret
lods
mov
adc
inc
adc
lods
inc
mov
aam
iret
scas
inc
sti
mov
dec
ljmp
adc
popf
fsts
addr16
int
cmpsl
and
mov
rorl
loope
pushf
sbb
adc
sahf
bound
cmp
jbe
cmp
insb
test
popa
lds
shr
cli
inc
and
push
adc
test
bound
js
adc
jbe
inc
xor
pop
adc
loopne
or
decl
adc
aad
scas
cwtl
add
ds
fsts
push
xor
aaa
add
rorl
outsb
bound
cs
frstor
jno
or
call
jno
jnp
xor
and
sub
jp
sub
inc
mov
mov
ljmp
cmp
adcl
orb
adc
fucomi
sbbl
fldl
clc
push
inc
in
and
mov
out
mov
scas
inc
sahf
mov
shlb
shll
mov
dec
cmpsb
pop
std
je
dec
sub
iret
aam
xor
and
ret
pop
xor
pushf
imul
push
gs
xor
sbb
add
dec
mov
cmp
sti
push
and
push
add
add
mov
mov
sbb
add
adc
rcrl
lods
imul
inc
mov
pop
imul
inc
pop
flds
lcall
lock
out
or
mov
jae
scas
mov
loop
inc
icebp
ja
mov
xor
sbb
sub
xchg
stc
in
push
jl
icebp
je
aas
rcrb
test
sahf
addr16
xchg
add
xchg
subl
sbb
jnp
scas
mov
fadds
or
dec
xlat
jnp
ret
xchg
xor
and
mov
add
rolb
sub
ds
push
or
mov
xchg
outsl
test
jg
jg
xor
jge
rcl
icebp
leave
xchg
jl
sub
push
lods
pushf
cmpsl
xchg
cmpb
push
jmp
movups
and
popf
jl
xchg
icebp
inc
mov
jno,pt
cwtl
fists
xchg
adc
inc
sub
call
fidivrl
mov
lock
xor
sbb
fidivrs
popf
stc
ss
push
ljmp
fistpl
jno
adc
dec
jb
sub
push
add
mov
or
jle
push
cli
push
test
call
jle
xor
cmpsb
out
cmp
xor
and
je
test
jne
loop
fnstsw
jb
push
jns
test
mov
in
jo
ficoml
dec
lds
bound
adc
add
sub
data16
insl
cltd
stc
xchg
mov
in
imul
and
push
loopne
das
std
cmp
or
in
scas
fld
jns
jg
and
sarl
or
out
push
scas
fwait
pop
fdiv
inc
xchg
mov
inc
adc
stos
push
jge
mov
imul
fsts
idiv
stc
jno
les
out
movsl
test
mov
or
mov
icebp
push
bound
sub
mov
fldcw
outsb
xchg
jl
add
xor
jne
ret
pop
sbb
sub
stos
mov
mov
xor
push
cmp
and
xor
jecxz
jo
adc
sub
cmp
mov
and
faddl
jge
jp
pop
mov
pop
pop
mov
xchg
mov
jbe
test
push
loopne
sahf
mov
xchg
sub
lods
dec
and
mov
and
notb
sbb
sbb
adc
fiaddl
mov
es
and
mov
mov
dec
das
xlat
dec
and
cmp
mov
test
pop
jg
sbb
push
aad
ds
pop
xchg
lods
aad
dec
pop
outsl
mov
insl
pushf
push
es
dec
mov
sbb
push
or
jle
xor
std
cltd
xor
mov
les
adc
rcrb
push
sbb
fildll
jns
add
repz
inc
lret
jns
mov
loop
mov
into
jns
cmpsb
cmp
cmpl
rcl
in
sbb
punpckhwd
jmp
scas
nop
hlt
pusha
mov
jnp
test
sub
dec
add
pop
push
jns
xchg
add
inc
adc
pop
or
sub
xor
sub
add
lea
outsl
sbb
dec
enter
andl
cmp
dec
rcr
sbb
xchg
push
cmp
daa
fwait
clc
xor
out
xchg
in
aas
mov
pop
mov
jns
sbb
cmpsl
aad
and
inc
stos
adc
in
mov
jecxz
in
cmp
push
lret
mov
inc
pushf
fsts
aaa
inc
or
jle
scas
push
jns
pop
jbe
inc
pop
xchg
mov
add
xor
cld
loope
arpl
xchg
mov
pop
sub
mov
xchg
jmp
fcmovb
xchg
pop
cmp
jg
shl
adc
xor
lret
in
dec
insl
sbb
loope,pn
in
ret
cmp
or
cwtl
ja
xor
dec
pop
mov
or
icebp
sub
enter
cwtl
cmc
mov
test
inc
or
push
and
sub
int
and
aas
sbb
loopne
inc
cmp
mov
mov
enter
bound
je
iret
push
pop
mov
sahf
fsubrp
pop
lea
sahf
jno
lahf
push
pop
add
jle
pop
dec
rolb
xchg
movsl
push
inc
cmp
mov
cli
or
pop
lds
in
fwait
cmc
xchg
cli
hlt
enter
js
mov
addr16
ret
cmp
and
shrl
xlat
inc
sub
adc
xlat
sub
jg
lock
mov
ljmp
data16
sti
lcall
mov
and
das
push
subl
mov
add
push
xchg
add
cmp
sbb
imul
cmp
sub
dec
adc
loope
js
popf
sub
inc
mov
push
iret
and
fstl
iret
xlat
xchg
lods
mov
imul
sub
movsl
push
hlt
mov
ret
mov
push
pop
sahf
insb
not
dec
and
loop
jo
and
iret
mov
aas
mov
scas
lea
test
int3
push
adc
push
mov
in
mov
add
fdivr
paddsb
sbb
ss
outsl
mov
push
sbb
test
aam
push
repz
push
addb
and
mov
icebp
or
and
loope
cwtl
pop
push
sahf
sub
xor
mov
dec
inc
fcmovbe
inc
jl
add
inc
inc
inc
or
imul
lods
xor
push
mov
mov
enter
jne
aam
add
loop
push
iret
inc
lcall
scas
ds
sub
data16
das
rcl
in
cmpsb
jp
jecxz
cmp
mov
jne
xor
fdivr
test
dec
mov
mov
mov
lcall
das
loopne
in
xchg
mov
pop
popf
adc
cmpsb
ror
daa
sahf
dec
icebp
out
adc
xchg
xor
inc
mov
icebp
sbb
bnd
cmp
cmp
ret
jge
mov
push
pop
or
mov
sti
ret
repz
ss
outsl
pop
and
dec
ror
into
fiadds
jbe
mov
test
push
imul
push
ffreep
pop
and
lcall
repnz
inc
lods
cmpsl
data16
sbb
dec
sbb
mov
lods
add
jecxz
dec
iret
sub
lea
mov
cmp
pop
add
sub
loope
jb
sub
faddl
outsl
sub
out
xchg
dec
das
aaa
push
jne
cmp
cmpsb
inc
aas
or
push
stos
xor
sbb
push
iret
add
les
jb
push
adc
or
mov
and
into
and
je
cmp
mov
stos
add
stos
fs
sub
test
stos
out
or
adc
jecxz
call
gs
or
fnstsw
fistpll
mov
outsb
xor
inc
mov
shrb
sub
popf
les
sub
mov
and
xchg
xchg
lods
sbb
les
movsl
xchg
test
movsb
inc
movsb
aam
cmc
jge
or
and
jbe
pop
sub
loope
movsl
std
cs
das
jae
arpl
and
and
mov
cs
xor
push
jg
sti
inc
mov
push
cld
xor
dec
xchg
mov
fwait
mov
xchg
jns
js
gs
xor
fldcw
insb
imul
push
dec
int
sub
rorl
test
pop
jmp
sbb
pop
push
add
xchg
outsb
icebp
sub
push
cmpsl
aas
jb
outsl
cld
jle
rdmsr
sub
inc
pop
xchg
lods
jne
push
xor
inc
adc
inc
pop
xchg
xlat
sbb
nop
sbb
sub
bound
push
cmpl
fistpl
xchg
jo
js
imul
push
outsb
sbb
cmp
movsl
dec
mov
adc
and
inc
and
ret
lods
ffreep
jmp
outsb
push
cli
jnp
pop
popl
xor
jmp
push
arpl
in
hlt
jge
insl
xchg
lahf
sbb
out
outsb
or
imul
pushf
push
inc
sarb
stos
outsl
movsl
in
in
pop
nop
xor
je
lods
lods
inc
add
fldt
push
addr16
idiv
pop
push
in
cwtl
inc
xor
fisubrl
sub
fsubl
lahf
mov
mov
cli
es
xchg
and
jns
arpl
data16
add
andb
or
repnz
cwtl
lcall
arpl
inc
and
and
dec
mov
shrl
popa
mov
scas
icebp
je
inc
sarb
add
mov
sbb
int
push
add
or
stos
scas
aas
jp
adc
adc
xchg
imul
fcompl
jecxz
push
xor
lahf
push
sarl
mov
push
push
cld
or
leave
cmp
push
add
mov
push
cli
inc
fwait
lea
xchg
xchg
les
ds
inc
or
push
mov
inc
jb
fs
orb
mov
sti
cmc
cmp
pop
jl,pn
mov
bnd
das
mov
xchg
cmpsb
call
jo
int
dec
and
mov
and
mov
lahf
mov
jno
mov
cwtl
ret
ja
test
scas
cld
lea
movsb
addr16
out
mov
sahf
test
pop
mov
cmp
xchg
lock
imul
inc
and
mov
push
sub
sub
scas
mov
mov
adc
pop
inc
dec
jae
sbb
jnp
mov
subb
sub
aas
xchg
sarl
pop
pop
lds
and
movsb
push
aas
dec
call
test
pop
push
aaa
scas
jl
sub
adc
pop
andb
imul
jp
data16
jo
push
cs
not
inc
mov
jmp
mov
sbb
idivl
and
and
ja
pop
sbb
pusha
jg
std
decl
or
sti
or
add
repnz
addr16
xor
divb
das
sbb
pop
retw
ds
pop
xchg
mov
imul
pushf
insb
cmp
fidivs
push
in
adc
movsb
adc
loop
jg
std
pusha
jl
and
adc
cwtl
setle
sbb
out
cmp
lods
dec
not
daa
adc
fs
fs
xor
add
repz
clc
imull
arpl
xlat
fdivr
adc
fstpl
pop
int
repz
push
sarl
cmp
ss
and
cld
pop
and
mov
shrl
nop
mov
xor
and
bound
mov
inc
xchg
cmp
inc
mov
add
push
jp
and
loope
mov
fprem
in
mov
push
pushf
mov
sub
xor
xchg
dec
and
shlb
sub
xor
bound
mov
loope
repnz
aaa
or
jb
outsl
xor
jne
or
dec
outsb
mov
fldl
sub
cmp
dec
fildl
call
add
inc
lods
sub
test
or
push
add
sarl
mov
push
push
stos
inc
push
add
push
and
or
into
inc
sahf
cmp
sti
hlt
stos
aas
add
out
cmpb
stc
add
adc
xchg
leave
jno
push
push
in
in
cmp
fmuls
push
xor
ret
mov
mov
push
xchg
int
add
jp
jecxz
fidivs
pop
sbb
mov
push
fiadds
sub
aad
in
fcmovbe
and
mov
sarl
pop
notb
lods
fcoms
ret
les
jg
lea
cmp
out
sub
icebp
or
push
inc
add
push
addr16
mov
gs
cmp
mov
dec
pop
jg
mov
push
and
dec
out
and
sarl
call
mulb
pop
push
lods
in
sub
addr16
pop
pop
xor
cmp
frstpm(287
add
inc
popf
jne
mov
and
add
add
in
add
je
imul
xchg
and
xor
xor
dec
dec
jae
add
mov
add
loope
mov
jmp
mov
aaa
mov
push
pop
dec
sub
rcll
pop
fsubrl
push
shll
sahf
mov
cmp
int
adc
dec
mull
das
les
mov
push
sbb
push
pushf
js
fs
mov
jns
ds
or
pop
mov
int3
hlt
and
adc
out
and
inc
mov
cmc
jp
dec
test
inc
mov
add
mov
inc
jecxz
hlt
or
nop
inc
or
push
pop
int3
cli
mov
xchg
xchg
rcll
les
add
lods
fsubs
ja
shll
pop
sbb
and
dec
lea
pop
mov
cmpsb
mov
repnz
mov
push
fbld
xor
rclb
or
imul
loope
pop
sahf
cmc
push
lcall
mov
jno
dec
std
push
orl
pushf
push
mov
jecxz
loope
mull
add
gs
mov
sub
jg
push
push
test
push
mov
pop
xor
mov
hlt
cmpsb
or
shrl
xchg
lea
sub
jnp
lock
test
mov
mov
ret
fst
jge
pop
xor
sbb
mov
jge
popa
repnz
shrl
jg
adc
jecxz
clc
in
push
push
ss
mov
lcall
adc
out
daa
test
xchg
ja
adc
mov
push
xor
cmc
dec
aam
cld
scas
sub
fistpll
cmc
xchg
mov
inc
bound
aas
mov
in
jno
mov
and
jb
sbb
je
xor
sti
popf
cmc
adc
cwtl
sbb
std
adc
mov
ror
pop
pop
repz
jmp
stos
adc
mov
jne
ss
sub
adc
std
or
push
imul
out
lcall
shr
push
fildll
pop
jl
clc
dec
shr
ret
fwait
aas
xchg
ds
int
loope
xor
ds
adc
push
push
lret
roll
hlt
inc
sbb
mov
push
push
jns
fmull
pop
imul
mov
loop
inc
inc
out
push
or
xor
sahf
push
icebp
test
inc
cltd
add
fistl
aad
popa
scas
int3
cmp
in
push
nop
jno
sbb
inc
or
pop
testl
fimull
pop
push
mov
cmp
dec
movsb
xor
push
or
ljmp
nop
cmp
je
ret
cmp
shlb
pop
mov
push
xor
shl
data16
xchg
pop
inc
pop
add
mov
test
dec
test
or
fimuls
sbb
clc
rorl
pop
outsl
ret
mov
adcb
lret
lds
pop
jns
jo
jp
mov
push
iret
cmpsl
aam
mov
push
jbe
mov
daa
adc
cmp
push
and
xlat
dec
cmp
adc
outsl
shrb
xchg
je
dec
push
stc
ret
adc
mov
mov
stc
cmpb
mov
xchg
lods
jo
add
sub
arpl
int3
jp
cltd
xchg
daa
inc
out
insb
mov
rclb
repnz
xchg
outsb
jge
xchg
arpl
int
imul
mov
adc
ja
sub
lret
mov
and
cmpsl
push
test
mov
add
out
mov
sub
scas
xor
jge
sbb
mov
jnp
jge
adc
dec
cmpsb
adc
mov
sub
lds
ss
xchg
repnz
mov
ljmp
jge
sahf
cli
adc
xchg
mov
mov
sbb
mov
dec
sbb
jecxz
imul
sbb
cmpsb
or
adc
test
mov
fisttpl
ficoml
jne
repnz
int
lods
daa
dec
hlt
adc
shrl
pop
mov
inc
jbe
push
out
xchg
sbb
psubsb
loop
cmpl
xchg
es
dec
rclb
fwait
push
mov
js
lret
movl
ret
subl
pop
out
or
xchg
inc
jecxz
mov
cmp
push
mov
stos
lahf
andb
mov
jmp
sub
test
sbb
les
pop
jmp
popa
out
outsb
sbb
xchg
jbe
stos
repz
fisubl
ljmp
pop
fstl
imul
jo
or
mov
inc
out
fwait
mov
rcrb
inc
ljmp
dec
cwtl
pusha
das
cmp
dec
jo
dec
shll
pusha
js
mov
js
pushf
mov
pop
mov
mov
daa
jmp
ret
push
lcall
or
fmul
adc
test
repnz
ja
leave
cmpsb
or
inc
pop
int
sbb
cmp
addr16
jg
stos
mov
cmp
cli
bswap
ds
bound
and
adc
bound
in
lret
scas
into
icebp
push
and
mov
aaa
ss
stos
push
loopne
inc
lret
cmp
fistl
mov
mov
sbb
push
mov
inc
mov
data16
cs
pop
mov
pop
repnz
mov
iret
dec
pusha
mov
cmp
add
sub
test
aad
fsubs
ficompl
sarb
mov
loop
ds
inc
pusha
mov
sbb
in
loopne
lods
mov
xor
sub
sub
lods
int3
or
xor
sbb
cs
jno
leave
cld
adcb
shrl
xor
addr16
lcall
fsubs
xchg
sub
into
lock
push
lods
fmuls
xor
push
push
inc
aad
enter
pop
pushf
push
mov
xchg
pop
lret
cmp
mov
dec
sub
adc
sub
sbb
fstpt
mov
inc
dec
pop
popf
jnp
out
sub
ret
scas
mov
repnz
aas
loopne
xor
and
int3
push
dec
sub
adc
push
outsl
movsl
or
fldl
dec
lods
repnz
out
test
xor
into
outsb
lret
sarl
outsw
lock
ljmp
fwait
test
xor
dec
cmpsl
sahf
pop
enter
sbb
mov
sub
stc
sub
cmove
mov
mov
mov
mov
int3
outsl
sbb
test
notrack
add
inc
and
ss
fwait
daa
push
pop
fcompl
pop
aas
arpl
rorl
mov
pop
in
mov
add
orb
adc
insb
and
or
xchg
pop
xchg
dec
xlat
mov
stc
rclb
fisubrl
ss
mov
or
xchg
xlat
sbb
les
sbb
and
pop
incb
push
push
inc
push
or
mov
mov
sub
imul
mov
scas
cwtl
rcrl
test
imul
pop
pop
push
js
lods
filds
ret
xchg
rolb
jne
fs
pop
add
xchg
mov
cmp
test
ljmp
xchg
lret
lea
or
sbb
ror
jle
int
dec
arpl
add
mov
leave
sbb
or
movsl
pop
jns
dec
jp
mov
cmpl
stos
insl
adc
or
mov
fwait
xchg
cmc
stos
loopne
pop
inc
or
jge
cmp
fs
mov
fnstenv
cmp
lahf
cmpsl
jge
pop
daa
hlt
lahf
test
les
nopl
lds
xor
xor
fimull
dec
insb
fwait
xchg
jnp
aas
add
mov
out
push
in
sub
lods
cltd
mov
pop
inc
std
into
jg
dec
fdivr
cmp
xor
sub
mov
mov
mov
xchg
cltd
fidivs
pop
add
fildll
hlt
ret
fistl
and
pusha
push
cmp
mov
cld
test
mov
sbb
fidivl
sbb
fiaddl
jno
in
pop
aaa
jae
lods
in
sub
sbb
cmc
stos
out
and
jbe
fs
inc
enter
sub
pop
and
mov
clc
adc
pop
rorl
outsl
stos
pop
push
dec
bound
mov
sahf
out
push
jge
orl
arpl
jl
fsin
aam
jp
push
fmulp
lahf
and
outsb
mov
push
test
xchg
pop
nop
stc
cmp
push
shl
je
cld
out
test
xor
aaa
int3
idivb
push
mov
dec
into
jl
aaa
fidivl
lea
push
lds
dec
shll
sub
xorl
lcall
lret
test
mov
lock
fidivs
out
lret
pop
dec
xchg
mov
xchg
das
aam
cmp
add
sbbl
xchg
mov
dec
das
addb
pop
in
sbb
push
fmuls
mov
inc
jle
cmp
cwtl
or
jg
cmpsb
pop
imul
sub
call
dec
inc
dec
mov
sbb
movsb
insb
pusha
push
pop
push
lock
mov
xchg
repnz
adc
push
jo
mov
ret
gs
jne
add
in
push
mov
mov
rcll
add
into
ret
insb
xchg
mov
xor
sahf
inc
adc
inc
jle
jle
xor
inc
cmp
push
repnz
andb
xchg
jge
add
push
in
cmp
mov
in
movsb
daa
mov
test
hlt
icebp
lea
inc
mov
or
hlt
jp
daa
push
push
ja
aam
popa
shl
daa
fisubl
mov
cmp
xor
daa
inc
cmc
in
xchg
push
mov
inc
lock
mov
xorl
xor
jo
out
ja
dec
jae
fdivrs
pusha
rcrb
fs
mov
movsl
push
xor
ret
gs
push
out
fstpl
js
sub
rcrl
in
xor
or
or
add
cs
nop
xorb
imul
cs
or
cmpsl
mov
mov
push
jecxz
leave
sub
mov
mov
jbe
dec
push
test
div
add
lea
das
or
cltd
sub
and
ds
outsb
xor
mov
jnp
int
nop
dec
jae
ja
dec
call
shl
psubq
in
mov
rorl
adc
push
xsaves
movsl
pop
lahf
inc
cwtl
cmp
mov
inc
add
inc
jmp
ljmp
push
and
pop
mov
fwait
scas
ja
in
cs
and
loope
push
ljmp
mov
xchg
bound
xchg
pop
mov
jbe
sub
jg
les
lds
jg
lods
push
aas
push
fiaddl
or
xor
mov
fsubp
inc
scas
jge
adc
sub
pop
cmpsb
push
data16
xor
das
add
mov
dec
jmp
ja
popf
test
jbe
pop
ljmp
int
xchg
aas
push
or
bound
jbe
int3
cmp
int
xchg
fists
and
adc
jbe
dec
cmp
dec
and
adc
jo
shll
mov
loope
in
dec
inc
push
xchg
and
sub
aad
xor
addr16
sub
or
stc
adc
pop
dec
mov
dec
pop
jno
lods
sbb
cltd
stos
hlt
outsb
ror
lcall
inc
enter
dec
int
call
out
push
jnp
pusha
pop
xor
sub
push
test
sub
add
shrb
subl
fcompl
cmp
aas
pusha
cmp
jne
or
cmp
sub
cmc
shrb
leave
add
xchg
push
gs
jo
rclb
adc
pop
inc
pop
and
xchg
pop
cmpsl
inc
dec
nop
shll
scas
and
cmpsl
movsl
int3
jge
nop
das
push
mov
sbbl
lahf
faddp
mov
jo
xchg
nop
mov
xchg
cmc
out
pop
push
pop
sbb
repz
xchg
cmp
mov
cmp
mov
lcall
inc
jp
es
aaa
and
add
add
cwtl
push
jge
push
mov
sbb
sbb
shll
push
les
mov
outsl
stos
dec
push
insb
add
mov
jp
addl
jo
sahf
or
jge
pop
mov
outsb
call
nop
adc
or
cs
jnp
and
stc
decl
into
add
or
fwait
sbb
xor
inc
int
aad
and
mov
dec
inc
mov
xlat
icebp
xor
sbb
into
jl
ljmp
rcr
push
pop
outsb
nop
mov
aam
sub
and
aam
rolb
andl
pop
mov
nop
pop
jp
mov
lahf
cmpsb
sbbl
fwait
push
dec
fstl
lahf
cmp
hlt
adc
xlat
pop
and
xchg
pop
aaa
out
nop
outsb
imul
lea
sbb
push
in
imul
mov
mov
js
jns
sbb
jg
jne
mov
mov
nop
imul
js
test
dec
dec
scas
clc
shrd
xchg
xchg
orl
in
shll
je
dec
sahf
out
xchg
mov
xchg
sub
cwtl
dec
shll
or
dec
cli
mov
mov
mov
sub
mov
jp
int
fs
xchg
mov
bound
sub
xor
scas
int3
pushf
outsb
xchg
sub
jecxz
movl
nop
shr
and
mov
pushf
scas
xlat
lds
jo
mov
icebp
out
adc
sar
fs
jg
inc
or
fs
out
jl
popf
icebp
inc
and
xchg
into
cmc
dec
pop
push
sub
xchg
cli
or
fmull
leave
jp
inc
mov
mov
xchg
xor
xor
mov
jno
xor
or
sub
mov
xor
jle
jne
cmc
out
rorb
jg
test
jge
fldenv
sbb
fiadds
dec
inc
lea
pop
mull
mov
mov
push
mov
outsl
inc
adc
cwtl
jbe
imul
xor
jnp
inc
jg
mov
mov
fwait
jle
rorl
pop
mov
lcall
ljmp
mov
pop
insl
cs
fldenv
mov
mov
jae
sbb
cmpsl
xor
cmp
mov
daa
cmc
xlat
bound
adc
sub
xchg
in
xchg
arpl
stc
pusha
test
sbb
ljmp
push
xor
ret
mov
dec
lods
or
arpl
je
push
insb
outsb
rcl
or
stos
push
cmpb
pushf
push
push
jp
shrd
or
xor
sub
sub
or
cmc
mov
xchg
insb
call
das
mov
push
xchg
sbb
inc
out
sub
je
inc
cs
rcll
xor
jbe
rorl
roll
lret
repnz
shrb
push
push
dec
lret
sbb
push
mov
pop
leave
mov
test
cmp
movsb
lods
mov
ljmp
gs
cmp
jmp
xchg
and
shrb
jp
mov
test
sbb
fwait
adc
mov
leave
stc
add
dec
or
push
test
xchg
iret
int3
pusha
sarl
cs
mov
aam
ds
fistps
pop
mov
or
outsb
rorl
jg
sub
push
loope
sahf
in
mov
in
arpl
pop
rcrl
insl
jecxz
dec
in
cwtl
cmp
cmc
sub
cltd
test
in
int3
lds
xor
dec
andb
add
xor
and
jmp
ss
inc
arpl
xor
or
rcrb
mov
in
sbb
leave
mov
lret
imul
int
add
scas
xchg
and
inc
nop
sub
movsl
mov
imul
test
addl
popf
sub
or
dec
fidivrs
cwtl
inc
cltd
push
cmpsl
cld
xchg
rorl
bound
xorl
fsubl
fdivr
idivb
xor
andl
inc
cli
cmc
dec
add
xchg
insl
rcll
pop
push
mov
inc
sbb
mov
xchg
leave
mov
andb
ret
loope
sbb
mov
or
divl
jno
stos
mov
adc
adc
xchg
shr
filds
popf
stos
mov
pop
push
inc
mov
add
or
jb
or
sbb
adc
fidivl
push
sub
cli
inc
movsl
mov
jge
sub
jo
std
imul
daa
mov
fstps
shl
mov
dec
dec
dec
jge
or
sbb
arpl
jnp
hlt
cmpsb
mov
sub
push
xchg
insl
jo
lea
and
scas
sub
dec
pop
pop
mov
outsl
repnz
mov
mov
add
xchg
pop
sbb
movsl
jl
and
mov
out
clc
imul
mov
xchg
jno
mov
fnstsw
dec
outsl
aam
dec
out
addr16
je
arpl
inc
sbb
das
dec
cltd
jp
add
add
jl
push
xor
mov
aas
jmp
lea
fcomps
pop
mov
mov
jp
xchg
mov
cli
jge,pn
in
sbb
in
pusha
aas
xlat
fsubrl
enter
and
outsb
mov
scas
aaa
sar
out
mov
mov
push
aas
push
fmuls
int
fldenv
cmpl
sub
imul
pop
jno
ja
lock
pop
pusha
mov
outsb
jp
repz
call
sbb
int3
xor
gs
push
pop
fmull
incb
js
adc
jg
or
or
mov
xchg
add
std
sti
ds
jl
ja
out
push
cmp
leave
sub
jno
mov
jl
iret
daa
cmp
lcall
aas
mov
xor
les
mov
jae
xchg
movsb
push
cmp
in
in
or
ja
pop
hlt
mov
jg
iret
push
pop
mov
dec
stc
pushf
mov
clc
mov
xlat
mov
scas
mov
inc
out
inc
push
pop
cmpsl
out
mov
arpl
jns
cmpsl
adc
mov
cld
mov
mov
mov
xor
call
sbb
xchg
and
mov
popa
ficoml
inc
xor
rorb
jnp
sbb
pop
stos
add
sahf
mov
mov
add
cmpl
scas
jb
jne
insb
mov
mov
hlt
xor
ja
pop
add
adc
es
daa
leave
cmpsl
and
cmpsl
mov
movsb
movsl
rcl
rclb
fistps
ljmp
rcl
mov
data16
out
in
fimull
push
push
cli
ds
mov
sbb
sarb
sahf
repz
push
lods
mov
pop
leave
sbb
sbb
loope
test
and
jle
pop
xchg
pusha
icebp
dec
bswap
cmp
insb
inc
adc
out
add
adc
pop
shll
adc
add
cmp
cmp
fistpl
rclb
call
sub
dec
les
call
ds
arpl
fistpl
lock
outsl
sub
cmp
mov
inc
adcl
jbe
mov
enter
sbb
jns
mov
inc
fbstp
neg
test
sbb
lret
push
stos
push
mov
lcall
cli
test
mov
or
sub
mov
testb
mov
dec
push
nop
ret
inc
loope
jo
insl
add
xchg
mov
mov
mov
imul
cmp
icebp
push
xchg
ret
push
scas
cwtl
loopne
dec
lds
adc
xchg
out
xor
out
mov
jno
out
mov
in
jnp
fdivrl
rolb
mov
xchg
mov
mov
cmp
stc
push
xchg
cli
orb
in
mov
lods
outsl
jmp
cmpsl
iret
clc
dec
hlt
xchg
bswap
movsl
jg
xchg
push
popf
int3
mov
and
inc
pusha
inc
inc
out
jg
mov
sub
sub
addr16
cltd
jnp
lret
test
add
scas
push
xor
jno
sahf
push
push
nop
add
xor
xor
test
out
sbb
xor
sub
fadds
data16
or
dec
jg
cltd
mov
shrb
xchg
movb
mov
and
popf
and
jae
add
test
push
mov
lock
mov
mov
pop
daa
insl
pop
pop
xchg
lea
fmull
inc
mov
mov
out
mov
jge
out
or
or
mov
mov
icebp
sub
mov
lret
sarb
or
fstpt
jbe
push
jecxz
pop
jbe
daa
out
je
sub
mov
loopne
pop
xchg
and
icebp
sbb
aaa
dec
mov
pop
mov
cltd
rcrl
out
fistpl
int3
js
int3
inc
lock
cmp
jmp
jae
cmp
sbb
xor
imul
testb
scas
ja
leave
imul
mov
aaa
sbb
je
fwait
sahf
jg
inc
popw
repz
leave
pop
int3
sub
cli
sbb
xor
shrb
jl
fcoms
xor
sub
adc
push
sbb
orps
dec
out
iret
sub
mov
push
fnstcw
outsb
lods
cmp
ficoms
inc
mov
repz
sub
dec
add
xchg
push
cmp
mov
popf
xchg
insl
mov
mov
js
hlt
cmc
out
pop
pop
dec
sub
pusha
sbb
sbb
loopne
dec
add
test
mov
pop
push
stc
movsl
xchg
adc
jbe
jb
push
in
ja
stos
add
clc
xchg
inc
xlat
mov
pop
adc
xchg
pop
mov
lret
stos
frstor
dec
xorb
dec
jge
jns
adc
stos
lret
clc
sti
push
or
sarl
sbb
pushf
fwait
idivl
lods
or
in
mov
add
mov
mov
sbb
and
pusha
pop
jecxz
icebp
imul
pop
cmc
push
mov
int
mov
sbb
pop
out
fidivrs
aad
rcl
mov
xor
lret
push
lret
ss
movsl
pcmpgtw
jmp
pop
adc
inc
xor
lcall
mov
xchg
jmp
pop
mov
jbe
arpl
inc
push
fsubrl
aam
mov
xchg
outsb
mov
dec
filds
push
jbe
in
and
sub
jo
xchg
dec
insb
rcrb
push
pushf
lds
dec
push
insb
push
dec
inc
ret
in
inc
xchg
idiv
jg
mov
int3
mov
jge
mov
sub
cmp
xor
or
xlat
xchg
rorb
out
mov
loop
jnp
adc
daa
js
jo
pop
pop
in
sub
js
ja
xor
pushf
or
dec
jns
cmpsl
pop
sbbl
out
fisubl
iret
cltd
adc
add
jmp
sub
repz
inc
inc
push
xor
pop
xchg
xchg
outsl
shr
out
push
out
sub
sahf
xor
pop
or
pop
pop
jns
movsb
notb
pop
push
adc
popa
inc
arpl
js
add
xchg
aad
and
cli
rcll
mov
dec
testl
mov
xor
push
addr16
cmpsb
adc
xchg
inc
mov
mov
leave
jle
jo
stos
and
stos
push
cmp
sahf
xor
hlt
decb
push
inc
sbb
xchg
jne
or
jnp
push
or
cmp
shl
rcrb
mov
wbinvd
cmpsb
stos
add
jae
add
lods
stos
jnp
arpl
cmp
sub
add
out
or
addr16
inc
ss
push
jo
insl
jl
rcrl
addl
pop
dec
jmp
pop
ds
ja
cs
sub
mov
sahf
ljmp
stc
xchg
jecxz
movsl
push
insb
push
call
movsb
aam
shr
lods
int
popa
cs
mov
jmp
test
iret
add
xchg
mov
jo
sbb
cli
hlt
daa
pop
iret
mov
or
leave
xor
inc
mov
mov
mov
lea
js
sbb
enter
fists
sbb
pop
sbb
inc
sub
jns
clc
pusha
xor
xchg
or
mov
es
cltd
sub
aaa
jns
les
loope
xor
dec
inc
repnz
loopne
out
out
jg
stos
insl
lods
sahf
or
ret
cmpsl
out
dec
into
roll
in
adc
test
adc
daa
sbb
in
and
cmp
lock
pop
and
js
pushf
jne
mov
and
ret
mov
adc
loopne
fldt
jnp
sbb
aad
lock
shlb
or
cmp
nop
adc
inc
push
call
pop
sub
xor
nop
push
jg
idiv
push
push
push
movsl
or
imul
addr16
xor
mov
nop
cwtl
sub
xor
stc
sub
pop
mov
mov
shll
lret
mov
rol
shll
push
mov
mov
shll
inc
shll
sti
popa
sbb
jns
push
mul
pop
ss
cmp
sbb
imul
enter
or
es
pop
pop
iret
jae
push
sbb
rcrb
push
cmpl
loopne
icebp
jno
sub
and
sbb
inc
mov
out
scas
mov
mov
xchg
repnz
fcoml
nop
xchg
push
jne
adcl
inc
test
cmp
aas
popa
mov
sbb
popf
xchg
sbb
cltd
leave
call
aaa
xor
xlat
ret
mov
stc
jae
push
es
mov
dec
les
jb
dec
mov
xchg
bound
into
mov
daa
stos
es
lds
loope
cmp
loope
shrl
inc
and
cmp
cmp
ret
mov
icebp
pop
jp
lea
push
ljmp
sub
or
inc
push
loopne,pt
aaa
cltd
add
cmc
cs
add
cld
bound
popf
adc
xor
in
in
mov
idivb
out
push
orl
cltd
sbb
es
stos
mov
in
adc
adc
adc
add
pop
pop
lcall
push
mov
pop
xor
or
stc
fisubl
out
and
push
inc
adc
lea
adc
mov
enter
jo
jge
cmp
mov
jno
ret
ja
jecxz
mov
jle
xchg
sub
mov
rclb
lcall
lds
insb
dec
add
cmpsb
loop
imul
jmp
sbb
cmp
pushf
push
clts
push
dec
push
xchg
imul
push
lds
xchg
ret
lcall
xchg
fcom
mov
lea
jmp
dec
cmp
push
nop
push
jns
stos
sbb
mov
add
in
sub
xor
out
inc
pop
mov
out
cmpsb
push
mov
fcompl
stc
sbb
popa
enter
loope
mov
mov
leave
data16
aad
push
push
aad
cmp
mov
scas
add
cmp
push
cld
xchg
dec
pop
pop
insb
mov
out
push
aas
fildl
push
sbb
xchg
sbb
sub
xor
xor
icebp
push
dec
mov
xlat
scas
test
jmp
jns
pushf
notb
testw
loop
or
aas
hlt
cltd
repnz
inc
loope
stc
mov
sbb
add
jle
aam
dec
xchg
cmpsl
add
bound
mov
mov
mov
stos
add
int
popaw
xlat
nop
lods
xchg
imulb
mov
lahf
int
les
out
lock
inc
das
fs
xchg
daa
repnz
call
shll
cmp
push
insl
lods
lret
and
xchg
xlat
sti
dec
pop
adc
adc
pop
cmp
fimull
mov
mov
inc
pop
mov
dec
in
pop
mov
add
ret
pop
mov
mov
mov
aam
xor
mov
jp
insl
fst
out
insl
mov
pop
add
xorl
decl
push
fcompl
callw
cmp
es
in
cmpsl
sub
std
loop
out
adc
repz
inc
out
iret
inc
lcall
inc
mov
fcoml
mov
inc
pop
pop
fbld
push
in
cli
addl
mov
xchg
pinsrw
adc
shl
mov
sub
xor
dec
xchg
inc
or
sub
fistl
and
jo
inc
push
xchg
xchg
ret
in
roll
fcoms
push
roll
aad
mov
js
xchg
pop
das
mov
xchg
out
adc
xchg
mov
mov
push
loope
enter
jbe
mov
sub
fnstcw
pusha
shlb
jb
cmpsb
sub
cs
jae
insl
adc
add
les
cld
add
inc
pop
insb
jnp
push
xchg
les
scas
pop
iret
inc
xchg
dec
push
gs
pop
jg
pop
bound
mov
cld
or
decb
add
and
mov
out
inc
addr16
dec
mov
mov
mov
out
push
es
fidivs
out
adc
cs
cmpl
outsb
pop
cwtl
ljmp
in
imul
xchg
cs
sti
jle
adc
xor
mov
push
lret
ja
mov
test
xchg
xor
subb
fwait
insl
jp
mov
mov
inc
lock
lock
outsl
adc
clc
jae
sbb
mov
and
pop
add
dec
pushf
cmp
jl
lock
pop
ret
cmc
and
stc
shlb
rorl
and
mov
ds
loope
push
xlat
out
test
pop
les
gs
xor
flds
adc
mov
lahf
xchg
pop
and
or
push
or
pop
add
push
loop
add
das
cmpsb
cmp
mov
daa
mov
mov
mov
cmpl
mov
xor
fucomi
pop
dec
jecxz
mov
loope
and
mov
sub
or
stc
mov
addr16
and
or
ret
lods
xchg
or
mov
sti
pop
xchg
or
fnsave
jmp
jl
scas
cli
movsb
pop
sbb
pop
cmp
das
push
pop
movsb
adc
xchg
push
jle
sahf
sbb
xchg
cmp
hlt
cmp
push
addr16
insb
mov
test
xor
mov
pop
in
add
subb
and
addr16
or
ja
test
mov
jbe
arpl
inc
jae
mov
or
ja
in
ja
xor
mov
sarb
jnp
cmpsl
push
repnz
mov
jnp
out
pusha
arpl
pushf
daa
scas
fdivl
mov
je
inc
push
lock
dec
sub
jge
lcall
push
dec
lahf
push
mov
lret
add
ja
mov
cmp
int
adc
in
or
lahf
imul
sub
out
stos
and
xchg
and
sar
idivl
dec
cmpb
xor
mov
hlt
jno
mov
inc
out
add
pop
hlt
xchg
adc
mulb
pop
les
das
or
mov
jmp
cmp
mov
iret
incb
mov
jbe
ret
orb
repz
aaa
xchg
lea
xchg
outsl
cmp
add
cmc
xor
pop
lahf
rcrl
in
xor
icebp
test
cmpsb
xchg
pop
dec
iret
mov
fcoml
jno
jbe
mov
inc
jmp
and
and
pushf
mov
sub
cmp
adc
xor
iret
jae
mov
mov
aam
rorb
ret
mov
shr
push
and
or
and
mov
imul
insb
jb
scas
stc
mov
popf
mov
cmp
pop
xor
cmp
push
mov
push
jl
out
sti
push
int
pushf
add
sbb
push
gs
insb
push
and
mov
sub
ficoml
rolb
mov
fimull
mov
jb
jb
cwtl
mov
loopne
sub
pop
cmp
inc
mov
push
mov
stos
dec
cld
push
loop
stos
cli
outsb
rcrb
popf
ljmp
xchg
out
mov
repnz
xlat
or
mov
movsl
stos
mov
sub
inc
loopne
jl
adc
loope
xchg
adc
or
mov
out
test
repnz
ja
sbb
xor
xchg
dec
xchg
js
inc
icebp
adcb
add
dec
mov
ljmp
in
cltd
push
cmp
pusha
cmp
hlt
mov
outsl
lret
mov
hlt
dec
sub
jo
ret
addl
xor
and
pop
jp
dec
dec
pusha
jb
addr16
push
adc
jle
sub
shll
mov
and
shll
push
inc
outsb
inc
xchg
unpckhps
or
adc
out
pop
sub
mov
push
mov
mov
aas
sbb
mov
jbe
pop
mov
int3
add
inc
orl
xor
out
jmp
adc
mov
into
jmp
jbe
or
xlat
jnp
cmc
ficoml
xchg
mov
mov
imul
popf
gs
push
cmpb
mov
shl
push
es
push
imul
push
cwtl
leave
xchg
lret
mov
outsb
mov
outsb
out
pop
out
push
add
addr16
test
add
jne
adc
dec
rorl
xlat
hlt
jmp
or
stos
inc
fimuls
pusha
fldl
sbb
call
scas
xchg
mov
sti
add
mov
stc
cmp
fsubl
jbe
mov
push
call
int3
icebp
sub
mov
incb
xchg
cmpsl
lea
enter
lods
aas
push
inc
mov
adc
cmp
push
dec
xor
shl
pop
jle
push
test
cld
add
xor
int
push
xor
sti
ds
xchg
inc
inc
data16
xchg
push
xor
popa
lods
dec
pop
sarb
inc
sub
and
loopne
push
enter
jnp
xlat
lds
lods
and
mov
aas
sti
add
cmp
xor
inc
dec
testb
subl
cld
hlt
nop
mov
and
jp
call
in
sbb
adc
repnz
push
lods
arpl
xchg
mov
cltd
xor
or
roll
ss
insl
adc
adc
sbb
dec
cmp
inc
push
test
bound
inc
cmpsl
push
jno
push
mov
inc
add
sub
mov
sahf
push
repnz
xchg
mov
mov
fildl
ret
mov
dec
push
loopne
xchg
jae
ret
ss
into
ja
push
inc
rcl
sub
sahf
xchg
ret
lds
mov
ljmp
fisubs
pop
pop
jg
aaa
test
mov
push
jbe
dec
mov
out
add
dec
pop
jns
inc
in
jg
and
jno
xchg
sub
jge
jo
mov
popa
fwait
jo
es
cmp
je
rcl
in
xchg
loop
and
inc
push
mov
inc
mov
push
scas
es
aad
pop
test
cld
scas
std
jecxz
loop
add
and
cmp
sahf
inc
xor
pop
popa
in
push
movsbl
lahf
cltd
or
movsl
ret
enter
test
pushf
cmp
js
push
xchg
xor
push
es
repz
and
test
popl
fsubr
xchg
adc
sub
shl
jb
cmc
mov
movsl
in
cmpb
int3
popf
andb
fsubrs
sbbl
test
mov
and
or
test
mov
lods
adc
pop
rcll
push
ror
ficomps
movb
jb
bound
movsb
lods
pusha
loopne
subb
in
insb
shufps
mov
loop
int
aad
sbb
xchg
pop
mov
add
mov
icebp
lea
dec
fistl
jo
pushf
shll
sbb
aam
rcr
mov
and
mov
mov
lcall
cmp
cmpsb
in
xchg
add
loop
inc
add
xchg
jb
and
adc
cmp
ficomps
out
hlt
jnp
cmp
mov
popa
gs
adc
sbb
cmp
clc
push
add
mov
in
cmc
cmc
add
pushf
jl
das
std
daa
mov
xor
test
sbb
dec
inc
int
sahf
ret
lcall
hlt
das
mov
lods
xchg
stos
push
rcll
pop
and
in
outsl
rcrl
out
into
dec
lret
pop
sbb
cld
enter
data16
xchg
xor
shlb
pusha
pop
ss
lods
jns
inc
aam
in
mov
pop
test
cmc
mov
leave
add
lods
xor
xor
sub
and
sub
dec
inc
mov
adc
pop
jecxz
mov
push
std
leave
fcoms
push
add
jle
call
adc
push
fcompl
out
in
mov
test
cmc
and
sbb
pop
jbe
repz
or
inc
fcomip
lret
daa
mov
xchg
jg
fcompl
jns
inc
mov
mov
cmp
mov
jmp
xor
dec
xchg
mov
jge
add
xchg
pop
ficomps
and
jbe
push
scas
xor
sbb
xchg
add
jns
adc
xor
dec
and
push
add
stos
mov
lds
cmpsl
add
cmc
loopne
cmc
repz
push
popa
dec
mov
ljmp
adc
xchg
xchg
jne
aaa
inc
push
jnp
popa
or
clc
mov
lods
or
test
nop
sub
into
mov
pop
inc
and
cs
cmp
shl
pop
jg
dec
call
mov
pop
push
push
pop
mov
push
int
ficompl
rol
mov
daa
or
in
cmp
loop
dec
cld
sbb
movsb
jo
iret
dec
fnstenv
adc
shrl
popa
andl
inc
or
adc
sub
push
aas
adc
mov
pop
mov
out
and
dec
sub
or
xchg
xor
lahf
jb
ljmp
adc
jge
test
jmp
dec
jp
xchg
jp
popa
popa
add
scas
adc
mov
notb
roll
jmp
sti
loopne
mov
clc
shll
rorb
repnz
dec
lock
inc
nop
lock
rcl
js
sbb
out
mov
xor
lret
push
cli
lds
test
lret
xchg
mov
xor
adc
pop
movsl
imul
mov
ficomps
adc
push
pop
lret
add
add
cltd
add
incl
pop
arpl
xor
mov
cmpl
aaa
xchg
push
in
clc
sahf
outsb
mov
ja
aas
ja
cld
gs
leave
mov
lods
mov
mov
popf
adc
push
push
loopne
sarb
xlat
in
or
lods
mov
lods
push
pushw
aam
pop
jge
add
test
cmp
sbbl
mov
mov
jecxz
pop
iret
mov
xchg
pushf
repnz
adc
or
jl
inc
lock
mov
aaa
cmpl
dec
leave
mov
loope
aaa
movsb
jb,pn
in
adc
xchg
mov
gs
data16
rorl
jbe
mov
outsb
inc
xor
xor
adc
cmp
stos
data16
mov
jge
jg
pop
test
pop
inc
pop
insb
cli
shlb
aas
or
adc
push
decl
test
inc
das
pop
je
decl
negl
fistl
std
insl
je
sub
sbb
xchg
das
lea
xchg
mov
test
inc
sbb
xchg
roll
dec
nop
movsb
and
daa
ljmp
xchg
int
leave
mov
lock
nop
test
pop
sbb
aam
adc
sbb
or
mov
mov
sti
dec
popa
mov
push
xor
adc
add
inc
xchg
enter
pusha
jmp
push
mov
divl
ds
dec
leave
leave
adc
cmpsl
pop
fnsetpm(287
aam
imul
xor
xchg
cwtl
push
mov
lret
cmp
pusha
lea
cli
jmp
cli
dec
mov
jecxz
cmp
add
mov
fwait
test
adc
dec
filds
mov
mov
mov
inc
sub
push
mov
dec
loopne
imul
arpl
dec
and
dec
shl
jle
mov
mov
lods
mov
nopl
fcoms
add
idivl
dec
xchg
push
push
jb
iret
in
adc
es
dec
lcall
inc
xchg
loop
adc
mov
loope
jmp
dec
jl
jecxz
inc
adc
adc
bound
stos
jle
icebp
jle
fcomps
cmpsb
xlat
pop
jns
lcall
in
jbe
push
inc
cwtl
out
dec
repz
flds
mov
add
loope
push
lret
sbb
ja
sub
cmp
xor
inc
lahf
xlat
pop
mov
addr16
cmp
imul
sub
enter
sahf
xchg
jg
xor
daa
dec
xchg
in
add
pop
xchg
dec
addb
mov
and
fwait
jbe
push
mov
xchg
add
outsb
push
jbe
sbb
fstpt
sub
adc
cmc
add
nop
arpl
pop
cld
mov
movsl
cmp
popa
or
pop
sarb
or
pop
and
loopne
sub
mov
push
loop
stos
pop
call
int
imul
fwait
not
push
jg
sbb
fprem1
pop
and
sbb
dec
sahf
lods
ret
rol
movsb
imul
adc
jle
push
mov
leave
push
rclb
inc
testl
xor
push
and
test
or
push
mov
ds
or
xchg
cwtl
xchg
std
cmp
jl
push
pop
add
push
cmp
cmp
outsb
xchg
jnp
xchg
xchg
je
out
sarb
lock
rcr
cmpl
pop
or
shlb
or
pusha
icebp
push
test
ret
in
iret
add
mov
xchg
jl
ret
mov
aaa
hlt
inc
cmp
pop
imul
or
rcrl
loope
add
pop
test
mov
mov
outsl
in
scas
or
cmp
mov
arpl
cli
aaa
jmp
sub
hlt
sub
loope
cmp
push
cmp
xor
insb
stc
daa
test
mov
ret
and
push
and
inc
mov
mov
je
in
xor
and
insb
pop
loop
int3
pop
mov
xor
or
mov
jmp
lret
fmulp
scas
out
push
in
or
mov
inc
cli
ljmp
add
xchg
jnp
enter
rorl
xorb
divb
or
sbb
jne
rorl
data16
mov
jmp
mov
adc
or
andl
cmp
jmp
dec
loope
pop
cmp
sub
or
pop
jg
pop
mov
inc
mov
sub
jns
insb
test
or
in
rorb
ret
std
mov
xchg
push
add
xchg
and
rcl
mov
push
sti
sbb
cli
and
adc
pop
sub
jmp
mov
lock
mov
repz
mov
dec
jae
sub
jl
inc
xchg
add
rorb
pop
dec
push
nop
or
pop
xor
enter
lods
cmpsl
shl
pushf
loop
xchg
clc
and
push
pusha
repz
test
mov
pop
lahf
popa
in
push
jg
or
jo
and
cmp
enter
ret
xchg
lods
jo
in
sbb
push
pop
pusha
jp
popa
dec
xchg
jo
or
icebp
mov
add
cmp
push
es
xor
stc
addr16
mov
jle
arpl
mov
pushf
xchg
mov
cwtl
out
mov
scas
inc
mov
lock
add
insb
jmp
jle
mov
clc
idivl
or
adc
push
mov
insb
jmp
pop
pop
lea
add
jnp
lcall
fmull
adc
add
jg
sbb
in
push
adc
sbb
xor
xorl
notl
lods
fistpl
subl
or
in
sti
inc
xor
pop
jnp
out
dec
movsb
or
mov
sar
and
es
xchg
xor
or
lret
and
lea
clc
sbb
inc
in
loopne
push
scas
shl
sub
xchg
xchg
cmp
mov
loopne
sbb
repz
sbb
lods
fsts
or
sub
xor
out
movsb
or
and
push
sahf
mov
jge
cmp
or
add
sbb
mov
arpl
lahf
push
xchg
dec
in
pushf
dec
mov
push
xchg
adc
in
jecxz
loopne
cli
inc
or
fidivs
je
sub
into
popf
test
adc
leave
inc
pextrw
mov
pop
jne
sahf
fbld
mov
sbb
rorb
mov
hlt
add
push
aad
fldcw
or
shl
pushf
aam
or
push
pop
adc
lock
dec
outsl
cmp
mov
add
in
mov
jb
dec
dec
jge
gs
jp
aas
lret
sbb
xchg
mov
fidivl
je
lods
iret
push
bound
insl
push
out
xor
push
push
pop
sti
mov
shrl
leave
test
ljmp
andl
hlt
mov
shll
adc
rorl
push
pop
or
jge
mov
jmp
js
out
xchg
mov
jmp
lods
repnz
sbbl
iret
popf
adc
push
inc
xorl
xor
scas
dec
push
call
ss
mov
call
idivl
and
in
sub
or
das
lea
xor
imul
movsb
jo
pop
in
cmpsl
stos
adc
add
cmp
sarb
push
mov
sub
adcl
rcrl
pop
out
xchg
inc
fdivrp
mov
and
xor
ss
rorb
or
loope
mov
pop
add
pop
xor
rorb
and
aas
xchg
insb
jmp
or
fldl
test
inc
add
xchg
outsl
out
inc
mov
push
subl
shrl
dec
pop
enter
ja
or
mov
push
mov
andl
call
push
testb
mov
push
cltd
ljmp
and
push
sbb
mov
lea
cltd
jno
xchg
mov
jg
flds
jmp
and
jp
xchg
lret
cmp
cmp
xchg
fs
mov
xor
mulb
in
stos
cld
jmp
mov
scas
popa
mov
jns
dec
shrl
dec
adc
sbbl
aas
cmpl
in
lea
jecxz
roll
data16
pop
dec
lods
in
or
loop
dec
in
mov
adcl
or
vpmacsww
inc
hlt
jecxz
inc
fnstsw
xchg
test
xlat
out
mov
fdivs
inc
and
fisubl
mov
iret
leave
test
dec
ja
mov
lods
and
mov
xor
xor
jno
notl
jg
mov
jmp
jb
hlt
test
ffree
push
dec
push
es
push
frstor
ljmp
xorl
movl
lods
push
mov
inc
inc
xchg
mov
jbe
pop
xor
iret
jb
xchg
push
outsb
inc
mov
loopne
shl
ret
push
jecxz
shll
lds
ljmp
test
test
sbb
mov
inc
mov
mov
pop
testl
xor
add
mov
in
mov
hlt
int3
int3
mov
mov
push
aad
xor
sti
sub
mov
es
in
das
adc
jno
xchg
dec
sahf
in
add
repnz
inc
mov
mov
inc
dec
cmc
movsl
sub
push
xchg
imul
push
jno
jae
movsb
out
fcompl
and
dec
fdivs
aad
push
jge
xchg
fwait
mov
push
mov
ss
sbb
leave
setl
lahf
jl
stos
and
aam
add
jl
add
stc
shlb
cmpsl
jmp
dec
cs
dec
sarl
inc
inc
fstpl
lock
xchg
imul
popa
or
aaa
movsb
enter
mov
inc
movl
cmp
test
pop
in
scas
lahf
dec
insl
lcall
in
fwait
into
sbb
dec
push
cmpsw
sub
mov
pop
shll
rol
and
repnz
mov
xlat
ror
or
pop
xor
dec
enter
push
fstps
aad
test
mov
clc
sub
lahf
mov
mov
sahf
rcrb
cld
ja
xchg
adc
jno
aaa
aaa
jne
cwtl
xchg
lcall
scas
rolb
mov
ret
mov
mov
test
mov
dec
andl
sub
fidivrl
insb
das
mov
movl
or
mov
icebp
sub
push
adc
and
jecxz
shlb
xchg
adc
adc
dec
fs
jne
or
mov
dec
movsb
xchg
adc
cmp
fistps
mov
xchg
data16
cli
cmpsl
jnp
push
push
test
adc
in
or
movsl
lahf
jo
cmp
ljmp
or
or
sub
mov
fidivrs
mov
xor
lret
push
rorl
pop
cltd
mov
pop
lods
leave
arpl
push
or
pushf
jge
ret
sbb
mov
leave
imul
mov
jns
adc
jmp
dec
dec
push
daa
xchg
push
dec
dec
int3
pop
push
gs
add
cmpsl
pop
out
adc
jae
repnz
out
adc
adc
test
sbb
cli
fdivs
mov
adc
aaa
stc
pop
push
mov
dec
aam
stos
inc
push
aaa
int
inc
sbb
dec
cwtl
adc
movsl
xor
jmp
ret
dec
dec
add
or
xchg
jo
push
cwtl
push
roll
adc
decl
into
fldcw
jecxz
dec
loopne
cmp
stos
push
adc
add
fists
shl
cmp
dec
xchg
outsb
lea
sbb
mov
xor
mov
dec
dec
mov
es
jb
clc
and
in
pop
insb
dec
mov
rcrl
sarl
jo
rclb
sbb
out
icebp
pop
mov
rcl
shll
aaa
es
ret
dec
test
cld
outsb
cmp
decb
psubusw
stos
cs
push
sub
inc
dec
shr
aam
jmp
les
ret
xchg
imul
jae
jo
pop
imul
dec
xor
divb
cmc
xor
add
mov
mov
dec
adc
jecxz
rcrl
fildll
mov
pushl
xorb
les
lret
fnstenv
bt
jns
jb
rorl
or
sbb
dec
fs
mov
or
aaa
push
sti
loopne
outsl
inc
sbb
lods
sbb
imul
xlat
dec
les
test
jb
mov
shl
fldt
hlt
out
mov
adc
out
mov
add
mov
jo
pop
fldcw
daa
sbb
xor
inc
jp
data16
inc
aaa
pop
std
fcmovnb
mov
sbb
stos
inc
mov
and
ficompl
test
je
jle
mov
dec
cwtl
add
or
sahf
test
inc
nop
das
mov
mov
popa
or
in
cli
std
adc
movb
pop
aaa
mov
pusha
in
insb
test
mov
sbb
cmp
mov
dec
jno
cmp
jle
imul
cmp
jecxz
xchg
dec
mov
mov
sbbl
xor
dec
dec
pop
or
mov
pop
sti
jne
repz
sti
shrl
jmp
mov
rcrb
adc
mov
mov
repnz
jno
pop
arpl
in
xchg
jbe
cltd
les
fcom
mov
xchg
push
fcmovbe
sbb
sbb
xchg
out
in
mov
jno
adc
cmp
sub
dec
xchg
loope
fldt
in
and
jge
fldl
and
adc
sbb
in
rcrb
shrb
ret
pop
mov
adc
inc
mov
jl,pt
jns
cmp
add
sti
dec
dec
aam
clc
test
pop
and
inc
sti
sub
inc
jne
or
adc
or
adc
adc
xchg
aam
xchg
scas
decb
repz
or
mov
imul
inc
or
pushf
bound
iret
dec
subb
mov
inc
lret
mov
mov
lods
ficomps
leave
pop
add
xchg
arpl
pop
mov
mov
or
adc
inc
les
xchg
loopne
icebp
stos
roll
dec
das
test
xchg
call
mov
ret
xchg
iret
jmp
pop
xchg
xchg
sub
shl
sahf
cmp
jbe
or
arpl
adc
jge
inc
imul
xor
xchg
mov
xchg
or
dec
fldt
clc
and
adc
mov
ficomps
mov
sbb
pop
movsl
sbb
sbb
mov
mov
mov
jle
pop
dec
pop
add
aaa
cmp
sbb
or
xchg
aad
aam
into
dec
add
adc
ret
les
repz
pop
test
mov
popf
aad
fsts
psadbw
inc
outsb
pop
or
and
jo
pop
mov
push
lahf
shll
push
lahf
jl
fsub
ja
mov
test
jmp
and
les
insl
lods
jne
sbbb
cmp
cmp
les
orl
int3
mov
dec
adc
loope
sub
loopne
xchg
jge
and
test
call
scas
pop
mov
add
or
imulb
and
scas
add
pop
iret
movsb
scas
push
jg
dec
sbb
ja
repz
push
and
and
jle
outsl
xor
cmp
mov
mov
mov
in
enter
sti
fcomps
movsl
das
add
movsl
mov
clc
pusha
cmp
outsl
shll
add
sbb
xor
cmc
jmp
dec
pop
insb
loop
ret
jmp
sub
inc
sbb
mov
dec
fstpl
dec
sub
inc
xchg
jmp
into
add
cmpsb
mov
or
in
mov
stos
in
ficomps
jge,pt
popf
sbb
imul
std
stos
pop
jnp
repz
jmp
in
addr16
pop
cld
fs
mov
ds
cmp
jbe
add
pop
icebp
cld
push
inc
add
es
pop
imul
dec
jecxz
repz
cmp
mov
or
sbb
and
xor
mov
jecxz
jmp
lds
cmp
push
mov
dec
and
inc
stos
mov
das
xchg
and
out
hlt
cmp
mov
cwtl
mov
sub
mov
dec
lock
add
mov
sti
enter
mov
ret
xor
and
sbb
mov
cmp
inc
aam
loop
ret
lret
push
sub
mov
mov
xor
or
or
or
inc
or
lret
cmc
das
aas
jl
mov
push
ret
mov
shlb
imull
cld
imul
xor
and
or
pop
dec
fstps
push
adc
in
pop
cs
jg
repnz
adc
fisttps
dec
movsl
es
loope
ret
mov
and
leave
push
mov
xchg
ss
adc
push
imull
inc
clc
inc
les
shll
add
push
ja
je
cmp
dec
in
in
es
into
and
fisttps
cmpsb
and
push
mov
cmp
std
stos
or
sub
sahf
cltd
popa
cmp
mov
or
xchg
xor
gs
dec
std
ror
shrb
or
daa
fmuls
mov
cwtl
call
mov
mov
movsb
xor
cli
pop
pop
push
pop
test
aam
mov
test
insl
xchg
pop
jecxz
and
add
or
xchg
pop
daa
and
movsb
js
mov
dec
cs
mov
sbb
adc
js
cmp
inc
in
in
ret
mov
bound
sbb
inc
add
jns
jmp
pop
inc
and
or
lahf
lods
push
nop
inc
jnp
pushf
and
xchg
movsb
aas
out
sbb
jg
punpckhwd
mov
mov
es
aam
shrb
pop
std
bnd
inc
xor
in
addr16
insb
in
inc
sub
cmc
and
push
pop
fs
imul
mov
push
fidivrl
push
sub
push
sub
cmp
testb
xlat
inc
inc
jb
lcall
adc
std
rclb
jecxz
cmp
or
fucomi
mov
mov
xor
hlt
addr16
push
sbb
shll
push
or
lret
sub
jae
mov
mov
jl
and
insb
popa
fimull
scas
xor
rclb
adc
pop
stc
cmp
push
icebp
mulb
jno
sahf
adc
es
mov
out
mov
imul
sub
and
jbe
roll
sti
add
cmpsl
insl
or
jecxz
xchg
xor
push
iret
xorb
pop
or
aaa
sub
call
and
rcll
and
sub
cmp
mov
rorl
mov
aas
icebp
add
or
add
inc
gs
sub
inc
push
sub
test
bound
loope
fnstsw
in
and
push
mov
call
sub
mov
cmp
and
mov
popa
or
dec
movsl
ret
adc
cmpsl
jp
push
js
sub
sub
pushl
js
out
push
test
jo
data16
mov
or
ret
mov
orb
in
rol
mov
imul
leave
loop
call
shlb
xlat
pushf
enter
inc
push
xchg
adc
dec
cmpsb
movsb
pop
push
add
nop
cmpsl
and
clc
push
dec
faddl
repz
sbbb
dec
fdivl
push
lods
jo
xor
rcrb
aad
stos
rcll
int3
jle
int
pop
push
adc
jp
or
sub
adc
mov
fstps
dec
inc
cld
add
nop/reserved
xchg
js
inc
xor
pop
fwait
and
out
cwtl
jl
lret
sbb
fdivs
cmp
jg
cltd
push
dec
mov
lea
cli
dec
incl
mov
loopne
rcl
popf
pop
sub
dec
push
hlt
xlat
and
rcrl
push
or
push
iret
lret
jge
loop
adc
inc
push
ror
pop
pusha
xor
inc
xlat
fstl
sub
adc
cmpb
out
xor
dec
in
jns
dec
add
je
aas
bound
hlt
clc
xlat
ss
daa
repz
test
xor
mov
dec
shlb
adc
mov
mov
inc
pop
cs
and
mov
cmpsb
rorb
imul
or
jo
sub
or
bnd
mov
fwait
out
and
fisttpll
ljmp
xlat
rorb
lods
cmp
or
mov
lods
cmpsl
sarb
mov
icebp
and
sub
mov
movsl
push
shlb
push
or
pop
push
inc
loope
aaa
push
push
sub
insl
aad
jae
ljmp
call
aam
add
fidivrl
inc
cmp
ljmp
lock
in
test
std
mov
and
cmp
arpl
mov
mov
adc
test
imul
pop
rcl
push
lods
rcrl
shll
dec
int
enter
lods
gs
xchg
jae
fxch
sbb
adc
push
pushf
loopne
inc
adc
sub
lods
dec
push
cmpsb
sbb
call
jg
pushf
dec
add
dec
or
cmp
add
and
add
ja
pop
enter
pushf
push
test
adc
xchg
mov
out
frstor
ficoms
in
xor
pop
sub
jnp
loop
fwait
into
pop
mov
cmpsl
out
adc
ret
test
imul
lcall
stos
imul
mov
sub
lods
dec
inc
shrb
mov
add
add
cmpl
inc
int3
scas
adcl
add
lock
mov
lods
das
push
jl
mov
mov
bound
push
rclb
shlb
movsb
ljmp
imul
ds
and
fldt
and
push
into
jge
mov
mov
ficoms
add
and
push
addl
test
pop
sti
mov
outsb
sbb
mov
xchg
dec
insb
pop
fnstcw
jg
mov
sahf
add
or
pop
ret
icebp
jecxz
cld
sbb
mov
pop
mov
push
mov
add
jnp
lods
mov
movsl
lock
xor
xchg
dec
pop
lea
push
inc
lods
mov
andl
push
loop
in
sbbl
dec
mov
sbb
add
push
mov
mov
je
pop
xlat
inc
cmp
dec
xor
mov
shl
mov
xchg
in
insl
dec
das
addr16
xor
jg
push
jmp
lods
bound
pop
hlt
cltd
mov
cwtl
int
shrb
mov
xor
adc
fimuls
push
and
sub
jle
mov
insb
xor
cli
cmp
ret
pop
arpl
mov
out
xor
and
pop
sbb
jge
ljmp
ja
push
scas
push
repz
fcmove
mov
xor
mov
or
xor
add
mov
fiaddl
pop
rol
jmp
mov
xor
rolb
je
and
push
loop
loopne
rol
mov
jae
xchg
cmpb
test
mov
push
out
mov
mov
mov
aaa
jge
fists
dec
pop
das
clc
aam
ret
nop
ret
jbe
negl
fsubr
add
iret
mov
sub
mov
adc
jo
cld
xorl
and
pop
data16
mov
or
mov
enter
push
sbb
js
frstor
ds
xorl
or
and
andl
sbb
icebp
clc
fsubrl
fwait
dec
or
dec
inc
stos
int3
cmp
repnz
ret
int3
jno
push
arpl
pop
cmpsb
or
adc
fstps
hlt
in
nop
ret
xorb
in
push
sub
movsl
jmp
ret
dec
stos
test
push
mov
mov
mov
jb
mov
insl
mov
dec
std
das
jg
mov
or
xor
mov
xchg
pop
fldcw
xchg
xchg
lret
push
inc
mov
push
in
cmp
push
adc
int3
into
aad
clc
and
mov
mov
lret
sar
repnz
cld
cmp
nop
fs
shl
xor
cmp
mov
std
inc
cltd
fimull
sar
mov
pop
mov
bnd
insl
adc
aad
xor
pop
cmpb
ja
dec
int3
fildll
mov
xor
mov
push
xchg
movsl
outsl
jbe
cmpsl
outsb
cmp
jp
push
mov
xlat
adc
rolb
imul
mov
fsts
cmc
fsts
testl
popf
lods
push
icebp
out
lea
mov
ret
push
pop
xchg
mov
inc
push
inc
mov
loope
pop
pushf
fsts
xchg
push
test
or
imul
outsl
cmpsl
pop
mov
sub
jno
xchg
movsb
push
into
dec
fsubp
cmpsl
pushf
cmpsl
pop
inc
or
mov
sbb
lcall
push
ss
pop
jbe
sub
jle
push
lock
inc
sbb
ds
aam
adc
cld
sti
fcoml
orl
in
adc
xchg
mov
pop
loop
loop
jg
jnp
fwait
lds
inc
std
xor
push
hlt
lock
imul
cmp
fucomip
mov
loopne
scas
pop
stos
mov
mov
popa
lcall
fstl
jno
ljmp
out
clc
addr16
repz
lods
pop
outsl
xlat
sub
sbb
adc
add
orl
repz
sbb
mov
jb
dec
dec
push
pop
add
xchg
scas
arpl
hlt
jp
ja
es
int3
lock
dec
pop
push
repz
pop
jne
sti
sub
push
fwait
and
js
pop
cs
pop
dec
xchg
std
pop
mov
loopne
ja
daa
test
mov
add
sbb
ss
mov
outsb
mov
push
mov
pop
xor
xor
xor
pop
dec
jo
add
mov
sbb
push
xor
aaa
xchg
sub
xor
jmp
cltd
pop
jnp
xchg
lock
jge
testb
xchg
in
mov
push
push
addl
cwtl
push
in
out
into
or
push
adc
dec
dec
fists
or
mov
sub
mov
bound
cmp
ret
data16
ds
int3
test
mov
dec
dec
les
xchg
mov
xchg
leave
and
ljmp
dec
test
dec
out
jne
xchg
sahf
dec
mov
mov
add
or
push
push
mov
inc
sub
adc
rcrb
and
mov
push
or
loopne
fldenv
inc
sbb
cmpsb
aaa
mov
jnp
jbe
daa
sub
jb
sub
cmp
ss
jmp
pop
and
shll
cmp
dec
sub
mov
stos
cmc
push
or
sbb
jg
push
bound
aad
inc
inc
outsl
fdivrl
and
icebp
mov
pop
mov
xor
in
mov
into
inc
push
dec
inc
into
mov
push
adc
jno
xor
cmpsl
mov
xor
mov
xor
add
jb
sti
cmp
scas
arpl
add
orb
inc
cmp
inc
xchg
jbe
mov
lret
lods
xchg
test
xor
and
ficomps
lods
sbb
mov
xor
lea
xchg
fbld
mov
popa
data16
cs
ret
mov
adcb
push
lcall
lea
ds
ljmp
ljmp
jnp
sbb
dec
pusha
lret
les
and
cmc
push
shlb
push
pop
loope
sub
adc
inc
cld
cmp
or
cmp
ljmp
cmpsb
les
push
lret
push
insb
inc
mov
mov
pop
sahf
jae
test
out
xchg
gs
das
jo
clc
cmp
mov
sbb
rcrb
mov
lcall
jnp
stos
xorb
mov
lods
test
jp
adc
iret
mov
push
fisubrl
fstpt
push
clc
loop
test
lds
icebp
lea
mov
or
popf
adc
mov
pop
xchg
jb
sub
dec
invd
push
inc
lea
lret
xchg
xchg
incl
dec
aad
xchg
and
shl
lcall
nop
cli
xchg
fiadds
outsl
icebp
push
in
in
aas
sub
js,pt
mov
adc
push
ror
xchg
xchg
and
popa
add
mov
loope
sub
sub
add
bound
mov
cltd
scas
cli
cmp
cmp
pop
mov
mov
mov
sbb
push
fs
sub
rorb
sub
nop
xchg
incb
in
sbbl
je
inc
cmp
jp
call
pop
cmpsb
repnz
add
mov
sti
ds
mov
inc
jne
pop
ljmp
adc
rorb
dec
leave
dec
push
mov
jecxz
loop
shlb
jge
cmp
sub
adc
das
xor
int
pop
and
push
and
dec
stc
scas
jp
popf
dec
or
adc
movsb
xor
jg
jmp
xlat
and
mov
xlat
fldl
sub
in
bound
imul
clc
repnz
out
leave
sbb
sahf
xchg
xchg
adc
icebp
push
push
pop
das
push
in
pusha
mov
sub
mov
cmpsb
data16
and
xchg
pop
mov
mov
jae
cmp
mov
test
xchg
outsb
pop
xchg
cmp
shl
in
lcall
xchg
jmp
sub
cmp
gs
insb
shll
fidivl
dec
daa
mov
shl
repz
mov
jns
xchg
mov
xor
pusha
mov
mov
mov
jae
insl
push
cmp
out
sbb
and
sbb
jne
cli
push
iret
imul
or
mov
xchg
add
fildl
push
jne
cld
xchg
cld
dec
mov
outsl
push
mov
mov
ret
shll
outsl
adc
adc
nop
add
call
mov
andl
add
aad
lds
xor
jae
pushf
aaa
aam
sub
mov
pop
mov
push
pop
xor
popf
loopne
fldt
std
xor
and
mov
icebp
les
mul
pop
adc
cmp
xchg
mov
mov
std
jne
mov
int3
and
pop
js
ds
xor
pop
sub
pop
pop
push
mov
scas
lret
push
test
aaa
inc
mov
pop
loop
push
mov
enter
dec
scas
mov
cmpb
lea
jge
outsl
cmp
pusha
pop
jnp
fnsave
jo
cmp
mov
out
or
aaa
cltd
fwait
dec
xchg
cmp
mov
mov
push
inc
leave
mov
xchg
push
cmp
jns
inc
inc
xchg
fnsave
inc
mov
mov
mov
mov
sbb
mov
clc
mov
jmp
aas
movsl
shlb
xchg
addl
cmp
pop
popf
jmp
cli
lods
aaa
cltd
jne
xor
test
adc
push
cmpsb
pop
decb
push
push
inc
les
loopne
cmp
or
xor
fldt
pop
sub
fcomip
nop
sbb
jae
xchg
ret
cmp
xchg
shlb
xchg
dec
xchg
adc
dec
idivl
incb
cmp
pop
cmp
arpl
mov
mov
mov
pop
push
test
in
cmp
repz
aad
cwtl
test
repz
or
sbb
dec
or
or
insl
lahf
mov
jmp
cmpb
cmpsl
lea
adc
shll
mov
lahf
bound
scas
in
out
jns
repz
test
dec
sbb
mov
or
push
or
mov
sub
imul
or
adc
lcall
js
pop
adc
es
lock
nop
scas
push
leave
dec
int
inc
movsl
jno
lcall
lea
push
mov
sub
and
enter
addr16
cwtl
pop
setge
push
popf
scas
fs
dec
push
call
call
notl
lea
ret
bnd
cmc
outsl
into
dec
and
sarl
adc
jp
sbbl
int
jl,pn
gs
es
test
pushf
movsb
add
mov
sbb
jno
mov
cmpb
rcrb
in
jmp
push
mov
jl
sub
xchg
mov
pop
data16
jg
pop
sbb
test
idiv
icebp
mov
sub
imul
or
dec
xlat
imul
xor
test
or
jmp
cmp
xchg
scas
sbb
mov
add
xchg
xor
mov
or
sub
std
xchg
lock
pop
loop
mov
push
stos
sub
mov
leave
jns
cmp
fucomp
jbe
loop
sti
fsubl
push
mov
cltd
aaa
call
aas
xor
xor
sbb
push
push
loope
add
and
scas
ds
lret
ret
mov
in
in
insb
lret
jecxz
push
sbb
jbe
xchg
movsb
push
sub
adc
std
lahf
push
sub
pop
sub
pusha
and
jecxz
adc
fldt
cmp
divb
dec
shlb
xor
and
fcoml
dec
sub
sti
cwtl
jp
lea
cmp
in
or
and
aad
jmp
jmp
or
add
mov
or
push
ds
shrl
pop
inc
jns
je
and
cmp
jne
xchg
jecxz
push
aam
lock
jmp
dec
mov
in
mov
or
or
push
cmp
in
iret
mov
dec
or
out
je
outsl
aas
fsubrs
cmpsl
sub
adc
xchg
and
out
mov
adc
imul
nop
pop
lcall
sbb
xorl
in
insl
subl
push
pop
or
adc
and
cmp
pop
pop
sti
int
pop
dec
push
xchg
push
xchg
aam
or
arpl
xchg
data16
or
ss
andb
xchg
rcrb
insb
shr
ret
je
out
loopne
dec
out
add
and
nop
aad
dec
ljmp
xchg
adc
insb
xchg
dec
enter
mov
jbe
and
cmp
sarb
cltd
jmp
and
mov
fs
shr
sub
cmpb
scas
cmp
jge
push
pushl
push
shr
pop
lock
sarl
sub
pop
imull
cltd
pop
jne
jmp
data16
inc
mov
inc
fsubrp
jecxz
bound
iret
and
daa
cmp
lcall
out
pop
jmp
insb
out
xlat
adc
das
mov
or
cmp
lret
icebp
jp
jnp
cmp
bound
ret
subl
sub
adc
inc
test
rorb
pop
mov
or
jmp
outsb
cmp
mov
jg
loopne
in
mov
adc
jnp
pop
scas
icebp
lods
dec
mov
mov
add
dec
mov
aaa
add
xchg
and
negl
mov
cli
les
mov
icebp
jns
xchg
xor
mov
jo
ret
js
or
in
mov
es
add
mov
stos
in
popa
xor
imul
enter
add
mov
mov
dec
mov
dec
sub
sbb
in
push
aad
xchg
enter
sub
add
aad
dec
inc
dec
push
into
ljmp
pop
cli
cmc
in
out
lock
sti
xlat
and
push
sbb
lock
mov
sarb
jo
lods
jns
repz
cmovbe
jnp
fmull
inc
ret
rcl
shl
xchg
das
clc
cmp
insb
jl
mov
jo
divb
aad
adc
movsb
daa
adc
add
mov
shrl
push
jnp
ds
adc
jo
pop
mov
jbe
cltd
adc
test
xor
xchg
or
mov
push
daa
lods
call
sbb
fwait
mov
cs
mov
push
andb
xor
sbb
test
rolb
lods
repz
cwtl
sub
aad
inc
hlt
test
cmpsl
insl
mov
mov
sub
adc
dec
xchg
dec
outsb
push
sub
fwait
and
sbb
fstpl
stos
mov
stos
dec
les
dec
test
cltd
out
dec
sahf
rorl
scas
jbe
inc
mov
insl
add
daa
enter
or
sbb
loopne
sbb
mov
jae
lods
lret
mov
call
out
rcrb
push
mov
mov
cmc
adc
es
jecxz
sub
cmp
inc
inc
pop
out
js
sti
sub
mov
test
mov
out
cmpsl
lahf
add
xor
sbb
jge
sub
cmc
xor
repz
stos
push
push
aam
push
xor
mov
push
jmp
andl
mov
mov
mov
into
fld1
mov
neg
and
pop
lret
xchg
mov
lock
dec
std
jns
out
mov
icebp
and
mov
test
data16
add
rep
cmp
je
xchg
and
pop
movsl
out
in
push
js
pop
mov
mov
shll
sbb
ds
call
dec
xchg
mov
cmp
xor
adc
pop
addr16
xor
dec
pop
test
push
cmp
inc
repz
pop
jae
and
mov
pop
or
call
mov
mov
sti
ficoms
or
xchg
ljmp
inc
lahf
leave
sub
jne
xchg
outsl
adc
movsl
ror
int3
xchg
or
insb
push
pushf
gs
jb
call
mov
jmp
daa
inc
nop
lea
aaa
test
mov
cmpsl
jne
mov
into
dec
push
out
and
pop
xchg
inc
orl
sbb
js
rorb
mov
int
mov
lcall
and
cli
sti
sbb
xchg
dec
dec
icebp
call
enter
or
ds
dec
adcl
mov
bound
enter
test
scas
adc
addb
mov
mov
jae
loope
pop
xchg
mov
adc
in
pushf
mov
fdivr
ja
push
sub
cwtl
and
pop
jecxz
andb
jo
bound
or
repz
xor
ljmp
inc
xchg
jmp
cmp
fsubs
jb
lods
out
mov
shrb
incb
outsb
or
xor
mov
mov
add
xor
mov
cmp
jne
cmp
cmc
mov
inc
jmp
js
cmp
shl
jne
fisubrl
cmp
cmpsl
loopne
fbstp
rcll
nop
jbe
mov
inc
scas
sub
push
sub
ss
sar
push
jns
outsb
icebp
mov
pop
jb
jae
mov
mov
js
loope
or
dec
in
sub
mov
pop
in
sbb
dec
sub
in
dec
sbb
mov
fwait
mov
insb
neg
jp
mov
pop
push
cmp
mov
xchg
in
rorb
shrb
mov
std
in
sahf
mov
ds
pop
lods
cmp
adc
or
cmc
sahf
gs
or
jle
pop
push
les
icebp
divl
lods
inc
jl
jmp
inc
cltd
cmpsb
out
scas
add
cld
aaa
outsl
xor
mov
lods
sub
xchg
andb
movsl
cmp
adc
push
or
cli
sbb
mov
scas
jns
stos
into
adc
and
adc
leave
or
cld
or
sbb
lret
aas
cmp
mov
addr16
test
xchg
sub
adc
cwtl
out
repnz
xchg
mov
jae
sysret
into
dec
cmp
ja
pop
in
fwait
addl
rolb
dec
pop
mov
mov
mov
stc
lods
or
adc
ja
xor
lret
sbb
jns
push
ljmp
jp
mov
sbb
rorl
hlt
jle
cwtl
jne
mov
xor
xchg
stos
jge
mov
cli
loope
xlat
mov
pop
and
stos
sbb
in
cltd
push
xor
rclb
std
leave
push
jmp
cmpsb
je
int3
scas
jmp
test
out
push
jne
mov
mov
ja
add
dec
push
jg
enter
push
les
pop
sti
aaa
dec
mov
insb
stc
dec
push
stos
xchg
xchg
pop
insl
cmp
stc
in
andnps
push
shlb
js
leave
sbb
add
jno
ljmp
xlat
into
mov
jo
shll
notb
cmp
pop
xchg
fdivs
mov
xchg
jecxz
inc
mov
mov
outsl
and
pop
push
rcrl
sub
in
jnp
add
or
lock
pushf
push
arpl
in
testl
cmp
imul
mov
loop
mov
adc
jp
test
xor
sbb
push
mov
in
dec
xchg
dec
hlt
rcrb
shlb
cmp
fidivs
mov
mov
xchg
gs
movsl
pop
xchg
fptan
pop
jne
call
sbb
jecxz
in
pusha
out
jl
js
sbb
cwtl
inc
xchg
inc
int3
ret
sbb
cmpsb
arpl
stos
inc
incl
cmp
gs
cmpsb
cli
sbb
dec
jnp
push
inc
push
xor
or
fwait
jne
jo
push
out
stos
arpl
cmp
sbb
int
lret
rcll
das
mov
pop
je
mov
push
mov
dec
mov
ds
cmp
test
insb
adc
iret
jecxz
rcrb
inc
add
nop
push
aam
loope
lods
std
jno
lret
xor
inc
xchg
jo
test
mov
push
cmc
mov
push
lock
push
or
btc
or
out
mov
mov
fbstp
stc
outsl
popf
jp
push
and
dec
add
xchg
cld
pop
jp
cmpsb
dec
fimull
lea
insb
test
testl
adc
mov
ss
es
jmp
or
cli
std
scas
aad
test
push
push
mov
add
dec
js
push
pop
cmp
xchg
or
sub
push
cmpsl
mov
popf
xor
hlt
ret
jg
or
icebp
or
aam
cmp
out
cmp
rcrl
fisttpll
or
loopne
pusha
stos
addr16
cmpsb
jmp
test
pop
ficomps
xorb
ret
roll
push
gs
push
jns
out
adc
decb
in
jge
fs
rorb
stc
mov
xor
and
inc
fs
add
mov
cmp
in
jae
loopne
fs
jne
in
test
xchg
test
or
lret
lods
shlb
sti
add
cwtl
in
or
xchg
sub
je
cmp
ficoms
outsl
scas
jnp
in
inc
mov
xchg
lahf
lods
sub
pop
sbb
mov
cwtl
jp
xchg
jno
sbb
iret
add
iret
pop
push
aam
jl
in
ds
xor
cmpsb
and
and
mov
lds
lods
add
loopne
aas
mov
jno
cltd
sub
stc
aaa
fs
xorb
sar
out
dec
scas
roll
addr16
pop
out
dec
pop
mov
xchg
add
mov
and
sub
bound
pop
dec
xlat
dec
dec
mov
xor
out
aaa
xor
inc
sub
inc
cmpsb
es
sarl
jns
xchg
orl
push
data16
jae
movsl
sbb
iret
xchg
jns
popa
mov
sub
scas
and
mov
outsl
pop
and
arpl
mov
sub
push
or
gs
sub
add
mov
insb
dec
test
test
dec
push
sahf
dec
fcomp
daa
pop
inc
sbb
in
pop
clc
adc
pop
xchg
jp
cmp
mov
repnz
aad
xchg
xchg
cmp
jp
cs
add
nop
or
inc
and
mov
add
push
push
adc
enter
aam
aad
aas
and
dec
jnp
sub
mov
imul
cli
imul
or
and
inc
les
test
int3
push
push
lahf
xchg
push
mov
movb
ret
subb
add
aam
mov
pop
mov
mov
lock
int3
pop
mov
xchg
popf
and
ret
xchg
jl
in
mov
pop
pop
ror
sar
lods
mov
push
and
mov
cmpsb
inc
mov
jno
ret
bound
cmp
cmpb
mov
pand
sbb
xor
nop
adc
in
or
xchg
imul
jns
or
or
dec
inc
sbb
lds
or
lcall
hlt
cmpsb
adc
and
int3
ss
jo
nop
cmp
lds
scas
cmp
test
in
sbb
or
xchg
shlb
nop
shrl
outsl
inc
sub
out
fsubp
jg
xor
cmpsb
bound
jg
mov
lret
sbb
test
hlt
push
adcl
cwtl
and
adc
gs
loope
cmp
in
adcb
pop
scas
ret
fmuls
cmp
movsb
xlat
test
sub
inc
testb
add
sti
sti
cwtl
xchg
ret
stc
push
fisttpll
dec
add
inc
test
test
push
fildll
and
loope
inc
fnsetpm(287
cmc
popa
out
lea
or
jmp
mov
adc
fs
outsl
iret
sbb
cld
out
pop
jle
mov
sbb
imul
xorl
xor
xchg
lret
mov
jne
daa
lock
push
sbb
xorb
call
fcmovbe
push
fstpl
add
jo
mov
stos
lds
push
dec
mov
adc
aad
std
push
jmp
gs
adc
ret
lods
rcrl
rcrl
and
sub
pop
jmp
shrl
lcall
pop
sub
push
lea
sahf
jns
jae
inc
test
std
int
scas
or
mov
shrl
push
mov
loop
or
ds
cmp
sub
ds
stc
movsl
sbb
hlt
ljmp
mov
mov
and
and
iret
out
xchg
rclb
mov
sbb
cmp
sub
cmc
mov
dec
or
inc
jmp
or
mov
bound
pop
hlt
mov
fdivl
pop
std
testb
xor
add
dec
dec
mov
cmp
mov
push
fistps
inc
lcall
push
inc
sub
xor
xor
inc
inc
stos
in
or
leave
jbe
mov
lcall
arpl
pop
mov
scas
xor
push
pop
mov
enter
pop
sbb
dec
inc
cmc
sbb
lods
or
mov
loopne
adc
fnstsw
cli
aad
jb
adc
lea
sbb
mov
test
lods
add
jle
pop
mov
xchg
push
cli
xchg
aaa
sarl
popa
aam
mov
push
dec
jns
sbb
lock
add
jne
mov
imul
sub
in
call
fcoml
mov
stc
pop
je
push
iret
loopne
add
loop
leave
and
stos
sub
cs
mov
leave
setno
aas
test
mov
pop
add
push
data16
sbb
pop
fnstcw
inc
aam
fidivl
into
repnz
test
xor
lcall
faddl
pause
pop
lahf
and
and
adc
add
sub
cltd
fildll
shlb
inc
cmp
jno
cltd
push
loop
loope
sbbb
mov
xchg
stc
sti
mov
push
cmp
orl
xchg
dec
jp
ret
sbbl
mov
cmc
shrl
sbb
jno
jae
cmp
iret
psadbw
add
bnd
push
cmp
pushf
popa
das
sbbb
in
mov
pop
or
scas
hlt
mov
push
mov
jl
inc
sbb
movsb
dec
push
mov
cwtl
and
into
ficoml
in
add
pop
sub
pushf
fsubr
push
jbe
inc
popf
or
mov
mov
jnp
inc
test
lcall
hlt
mov
rclb
jns
repnz
mov
repnz
pop
stos
test
mov
mov
push
decl
or
imul
insb
jecxz
subl
aaa
cwtl
rdmsr
scas
mov
and
int
rorb
pop
xor
notl
push
sarl
push
mov
cmp
aaa
adc
adc
inc
sub
fstp
sub
bound
imul
pop
or
bound
inc
ret
mov
fidivs
mov
sbb
mov
xchg
out
dec
jecxz
stos
js
adc
ficomps
testb
pop
jecxz
mov
xor
mov
in
push
add
sti
ret
dec
dec
mov
loope
in
sbb
jmp
mov
popa
div
fistpl
insb
mov
mov
push
cmp
pop
hlt
cmp
jno
pop
jmp
imul
data16
dec
mov
and
movl
fsts
add
push
inc
outsb
repz
int
xor
repnz
adc
or
nop
push
shl
pop
push
sub
dec
subl
dec
adc
and
pop
mov
dec
icebp
int3
mov
shl
pop
push
xor
icebp
decb
mov
shll
imul
adc
or
sbb
jnp
mov
jbe
xchg
sub
jae
add
inc
mov
pop
repnz
in
ret
xor
outsb
add
cld
lret
adc
aad
lret
xchg
mov
icebp
bound
sub
pop
pop
int3
rcrb
or
out
or
imul
push
pop
dec
daa
pusha
nop
mov
jnp
dec
inc
xor
das
test
mov
inc
sbbl
mov
dec
imul
in
gs
mov
or
adc
pushf
xorl
mov
dec
aas
sti
adc
test
das
mov
popl
repnz
cs
mov
and
leave
xor
je
sub
sub
add
xor
xchg
jb
mov
aam
scas
std
divb
add
mov
mov
dec
mov
mov
jno
adc
xor
leave
mov
mov
jns
adc
aaa
es
shll
pop
cmpsb
inc
dec
out
pop
idivl
push
jo
inc
jno
adc
rolb
mov
add
sub
cmp
jle
push
aad
mov
pop
loop
out
mov
sub
inc
ret
mov
xchg
insl
lock
and
and
mov
jb
lds
lcall
push
insl
push
sbb
aaa
xor
push
lds
stos
mov
pop
aas
or
das
jle
sbb
push
sbb
fdivrl
pop
fiaddl
out
mov
mov
xchg
roll
movsb
int3
dec
dec
xor
je
call
and
cmp
in
push
sub
mov
orb
mov
mov
in
ljmp
mov
fs
jl
loope
out
sbb
mov
cld
mov
adc
sub
mov
sbb
add
adc
dec
icebp
js
test
rorl
dec
add
mov
xchg
jno
mov
pushf
mov
sub
enter
mov
test
rcrl
cs
in
push
and
pop
mov
mov
movsb
jp
mov
push
test
fiaddl
pop
in
out
xor
adc
movsl
outsb
lods
mov
stos
adc
adcl
xchg
sub
mov
jb
or
lds
mov
fwait
pop
mov
test
sbb
cwtl
das
fdivrl
inc
add
out
data16
stc
je
sbb
mov
mov
movsb
mov
and
add
in
sub
push
out
test
cld
test
pop
test
or
push
jns
push
out
movsl
scas
mov
fisttpll
fs
mull
dec
sub
cld
shl
mov
jno
dec
cli
mov
inc
push
testb
sbb
xchg
pop
cld
xchg
pop
push
add
dec
insl
fldt
cltd
push
insb
inc
add
aaa
push
fidivrl
leave
cwtl
mov
shrl
aas
adc
and
pop
push
mov
stos
sbb
xchg
jb
push
xchg
sti
jecxz
hlt
and
jns
rcll
outsb
mov
lret
mov
jbe
or
shrb
dec
arpl
push
xlat
test
mov
jbe
sub
push
or
add
and
jmp
xlat
jo
shll
add
dec
sbb
mov
mov
fstpl
notl
into
rcr
mov
mov
and
imul
loope
mov
mov
in
xchg
cmpsb
jmp
mov
pop
xchg
adc
push
sub
mov
mov
out
mov
popl
fsubs
daa
mov
cmp
inc
jb
push
stc
push
sbb
stc
jg
mov
mov
scas
cli
xlat
in
repz
sbb
cltd
and
movb
insl
xchg
sar
pop
push
rcll
jle
and
inc
push
ret
cmp
sahf
adc
pop
ds
lds
xchg
aam
pop
xor
in
sub
xchg
enter
xchg
into
std
push
add
inc
andb
daa
divl
jbe
add
in
mov
pop
sbb
lods
shlb
xchg
or
xchg
mov
xchg
push
mov
add
dec
std
gs
pop
fimull
cwtl
and
mov
lea
adc
bound
mov
jnp
fcomi
cmp
out
xor
lods
and
das
xchg
hlt
lods
adc
imul
outsb
add
arpl
in
dec
jo
mov
push
adc
je
mov
xor
into
mov
dec
sub
mov
cld
add
mov
sub
cmp
sbbl
mov
push
movsb
dec
scas
adc
mov
add
sub
mov
cmp
shrb
in
filds
xchg
adc
adc
nop
xchg
ret
cwtl
sub
cmpb
stos
push
inc
hlt
bound
das
call
cmpl
mov
mov
popa
sub
or
cltd
add
repnz
inc
or
ds
lock
mov
imulb
inc
cmpsl
pop
insl
insb
sub
mov
add
les
inc
aas
sahf
or
sbb
mov
mov
aad
jae
lock
sub
push
sbb
jmp
mov
shl
mov
data16
push
xchg
enter
fwait
stos
mov
notl
fdivl
enter
push
jne
and
fmuls
jge
lahf
xchg
into
xor
and
mov
push
pop
js
popf
dec
add
dec
les
adc
orl
lea
lret
jnp
repnz
adc
cld
fwait
cmpl
add
lahf
fldl
xchg
adc
scas
push
xchg
adc
popf
inc
push
and
shr
nop
cmp
jnp
cwtl
pop
pushf
cmpsl
cmp
lcall
mov
daa
pop
rorb
call
or
mov
mov
mov
sahf
shlb
pop
stos
inc
loopne
addb
xchg
dec
sub
mov
xchg
or
or
stos
adc
sbb
scas
out
loope
ss
jg
xchg
sbb
mov
mov
xchg
imul
mov
jecxz
dec
mov
xor
adc
or
leave
jbe
call
adc
rcr
addl
sbb
rcrl
stos
in
movsl
cmp
xchg
jmp
sbb
fdivrs
mov
movsb
or
mov
or
mov
push
cltd
xorl
jg
jne
icebp
inc
lcall
fdivs
mov
mulb
pushf
lret
dec
rcrl
push
push
test
xor
pop
daa
sbb
mov
jmpw
xchg
mov
fsubrs
mov
call
push
stos
mov
sbbl
dec
les
mov
and
lods
daa
xchg
jle
push
and
jns
jno
sbb
add
and
push
aad
xor
mov
pop
dec
mov
jns
mov
cltd
aas
jl
les
cmp
inc
push
push
int3
aas
mov
sub
mov
test
sub
cli
shl
clc
push
or
scas
jl
cmc
push
and
sar
push
add
sbb
inc
outsb
or
and
xlat
adc
loope
fmul
pusha
fiadds
sbb
pushf
mov
mov
stc
mov
dec
sbbb
mov
hlt
addr16
jle
mul
dec
or
push
jmp
insl
mov
movsb
fwait
data16
imul
testl
call
movsl
cmp
fnstenv
hlt
daa
cmpsb
loop
xor
enter
inc
jecxz
pop
int
addr16
jae
icebp
jbe
popf
or
jmp
orl
add
pusha
cmp
adc
popa
inc
inc
inc
pop
mov
call
and
sub
out
sub
push
and
scas
aam
pop
leave
mov
push
data16
adc
or
rol
cltd
lret
cmc
lahf
mov
cli
mov
sbb
inc
rclb
and
inc
sbb
frstor
mov
dec
insb
into
jle
mov
sub
add
in
in
mov
push
test
xchg
mov
daa
mov
je
pushf
mov
std
call
mov
xchg
pop
aas
xor
mov
jp
int
add
push
sub
mov
ret
mov
icebp
ret
pop
insl
cmp
lahf
adc
push
out
fisubl
sub
stos
icebp
jne
cmp
mov
icebp
sub
cmp
mov
cmc
cltd
cli
pop
test
clc
movsb
lods
inc
loop
stc
int
jns
pop
pusha
mov
out
cmpsb
cmp
xor
dec
inc
fiadds
mov
add
mov
xchg
out
mov
stos
dec
jnp
repnz
xor
inc
fimuls
lock
lock
jo
mov
in
out
aam
test
inc
fdiv
int3
jnp
mov
rcll
cmp
fdivl
test
inc
mov
adc
imul
popf
fbstp
ds
xchg
ja
mov
mov
jge
and
pop
leave
push
push
dec
mov
leave
jb
mov
inc
movsb
push
jns
int3
aaa
call
call
pop
fwait
inc
movsl
pusha
outsl
inc
std
pop
mov
pop
push
add
pop
push
push
cmpsl
sub
mov
fnsetpm(287
andb
cwtl
movsb
or
push
ds
ja
in
mov
adc
push
or
sub
cmpsl
fstps
daa
hlt
cmp
pop
fisttpl
aad
rorl
jecxz
mov
fistl
into
adc
imul
adc
xor
xchg
push
sub
jg
jle
or
data16
jno
mov
loop
xchg
lea
fimuls
ss
in
into
add
leave
xchg
das
ret
cmp
popa
dec
adc
fisubrl
movsb
lock
xchg
push
mov
xchg
fisttpl
sbb
pop
mov
mov
mov
filds
pop
pop
sbb
ds
in
jge
into
xor
add
lahf
jl
sbb
adc
sub
fstpl
repnz
or
int
dec
aas
adc
stos
into
sub
mov
or
xchg
push
add
jb
jno
aam
mov
dec
loop
pop
sahf
jmp
mov
add
stos
xor
and
sahf
cmp
jl
jge
mov
ja
mov
fucomp
nop
pop
xchg
pop
pop
sahf
jns
outsb
pop
ret
sub
enter
jg
shr
jne
lds
push
inc
fcomps
in
stc
rcrb
clc
add
pop
or
mov
cwtl
xor
mov
push
int3
rclb
dec
pop
fisttpl
mov
das
dec
push
ja
dec
in
dec
loope
sti
negb
cmc
sub
push
adc
cltd
lock
daa
sbb
popf
jbe
dec
jo
cmpsb
push
sbb
js
inc
fwait
inc
inc
mov
dec
mov
vfnmsub213ps
xor
mov
test
or
adc
stos
sub
push
cmp
mov
cli
dec
iret
sbb
sbb
es
movsl
mov
or
add
lods
add
inc
popf
push
pop
loop
push
mov
sub
or
test
jle
jl
es
daa
sbb
sbb
sub
fsubrs
push
add
sarb
pop
jb
lahf
add
data16
mov
push
clc
cmp
adc
lcall
pop
xor
or
sub
jl
sub
std
rclb
std
pushf
sub
and
sbb
jb
and
lods
cld
jno
data16
and
paddw
les
imul
or
movsl
jb
and
data16
mov
xchg
cmpsl
sbb
and
mov
ret
mov
inc
lcall
hlt
arpl
push
xchg
cli
mov
stos
insl
mov
jecxz
loop
cltd
dec
inc
jp
pop
mul
jns
addl
push
or
arpl
rcl
out
jbe
push
mov
pop
lea
cmp
xchg
ja
xchg
scas
jb
mov
lds
pop
mov
xchg
insl
add
xor
test
jb
test
xchg
push
xchg
xchg
fstpt
sbb
popf
adc
lret
add
jl
lcall
jbe
es
lea
mov
int3
sbb
inc
xlat
mov
sar
dec
mov
cmp
push
adc
stos
test
push
mov
stos
mov
bound
pushf
call
xlat
cmp
add
rorb
sub
push
add
and
outsb
mov
jb
sbb
mov
cwtl
testb
aad
xchg
inc
dec
pop
mov
ret
push
pop
sar
aam
mov
fsubs
cmp
inc
rorb
cmpsl
lret
stc
nop
movsl
dec
icebp
sbb
xor
dec
loop
cmp
inc
mov
jb
xchg
lods
leave
cld
mov
or
testl
xor
dec
push
push
pushf
mov
pop
and
mov
cmp
nop
pop
sub
js
cmp
mov
xchg
mov
jp
test
pop
cmp
sbbb
mov
inc
insl
in
bound
sbb
sbb
jmp
adc
stos
stc
jae
outsb
div
xor
das
scas
dec
mov
mov
imul
and
inc
sbb
xchg
aas
stos
jecxz
ret
push
rclb
icebp
cmp
cmp
mov
push
bnd
cli
dec
mov
mov
pop
ss
inc
testl
inc
hlt
xchg
nop
mov
loop
jb
inc
out
lret
lahf
xlat
mov
mov
out
stos
fistps
sub
nop
mov
push
inc
mov
jbe
xchg
jno
fldcw
jl
mov
ficoml
ret
sahf
mov
cmp
push
into
mov
ret
int
ljmp
mov
aad
mov
mov
mov
pop
xor
addr16
inc
jns
pop
shl
cli
sub
sbb
xchg
push
adc
sub
or
imul
pusha
pop
mov
sub
mov
test
cmpsl
xchg
jle
bound
push
dec
mov
push
jp
pop
dec
add
outsl
pop
pop
add
bound
or
shr
pushf
incl
dec
dec
aaa
mov
push
arpl
sub
adcl
popf
int
add
lock
out
in
test
push
in
test
xchg
or
push
cmp
add
sub
jae
test
mov
hlt
cmp
jo
stos
idiv
jle
cmp
stos
xor
push
stc
jo
shll
ja
fisubrl
mov
mov
xor
ds
pop
pop
lods
and
mov
imul
xchg
push
cmp
xchg
xor
mov
test
and
std
std
xor
inc
pop
fstps
ret
mov
test
cmp
ljmp
push
stc
les
ret
jb
int
cmpl
cs
dec
addr16
andl
push
fcompl
jle
jbe,pn
pop
movsl
xor
loope
ja
std
movsl
add
int
xorl
lock
sub
and
add
pop
lret
and
ss
cltd
lods
mov
mov
test
inc
mov
test
mov
ljmp
ficoms
xor
jl
xlat
jge
jbe
pop
mov
sbb
cmc
int3
cmp
cmp
mov
clc
mov
shrl
inc
repnz
adc
lret
adc
in
jecxz
mov
cmpsl
adc
mov
testl
pop
xchg
jae
jl
loope
insl
shrb
or
jb
stos
add
fsubrl
ljmp
ja
pusha
sub
add
pop
mov
rclb
cmc
pop
sbb
xor
out
mov
dec
and
rorb
add
jecxz,pt
xchg
adc
rcr
mov
sub
xchg
cmp
out
outsb
bound
jge
xlat
pop
xchg
les
paddd
insb
push
outsb
sbb
xor
daa
xor
jmp
fs
cs
adc
sub
push
or
out
mov
jge
xor
imul
loop
fiaddl
or
push
testb
popf
movsb
xor
cltd
xor
sahf
jae
in
mov
loope
mov
xchg
xchg
sahf
sahf
xchg
iret
cmp
insl
mov
push
pop
ret
repnz
dec
mov
js
arpl
push
hlt
xor
fisubl
inc
mov
xor
test
push
outsb
sub
mov
adc
insl
and
xlat
pop
dec
jb
enter
hlt
js
mov
setne
int
inc
and
lahf
adc
mov
mov
stos
imul
mov
decl
nop
sahf
out
fldcw
and
xchg
add
jns
rorl
shr
popa
or
and
fdivrs
in
pop
push
into
push
in
adc
fmull
sbb
sbb
in
popa
clc
jp
or
les
or
loopne
test
aas
inc
jne
popf
pop
and
in
pusha
loope
add
out
pop
call
bound
lcall
xchg
in
mov
mov
adc
in
mov
mov
lcall
lods
mov
aam
push
ret
mov
outsb
gs
rcrb
or
dec
jno
cmp
or
add
and
inc
dec
inc
dec
mov
inc
sarb
lods
mov
mov
add
mov
push
pop
sub
clc
pop
test
out
ret
add
jns
jmp
mov
cmp
cmp
out
scas
int3
sub
dec
sbb
xchg
jo
out
inc
sbb
pop
std
mov
bswap
imul
in
xlat
mov
fs
lcall
cli
push
mov
jb
daa
addr16
jns
test
loop
jle
in
lds
adc
dec
popa
andb
adc
adc
jmp
shrl
cmp
out
lds
cmp
push
das
or
leave
rcrl
sahf
outsl
pop
cs
sbb
pop
jnp
imul
aaa
mov
je
xor
add
or
out
loopne
andl
aad
fldl
es
push
sar
loopne
add
push
sub
dec
push
stc
das
and
mov
int3
and
pop
jns
in
mov
lret
sub
addr16
sarl
push
out
dec
or
testb
out
pushf
jl
inc
push
add
fs
shl
xchg
and
push
in
shrl
or
or
lods
in
cwtl
lret
or
sub
mov
xchg
mov
dec
cli
adc
cli
jmp
lret
mov
repnz
xchg
imul
ljmp
stc
rorl
arpl
cmp
stc
mov
int
inc
jecxz
loopne
loope
pop
leave
pop
icebp
call
mov
mov
leave
iret
xor
ret
mov
jb
in
rcll
add
xor
push
adc
mov
pop
lods
rorl
cmpsl
mov
mov
fdivp
mov
mov
jae
mov
imul
std
pop
fwait
clc
inc
sti
sbb
in
loop
test
mov
cli
xchg
inc
sbb
mov
xchg
call
ss
dec
jo
mov
mov
push
adc
rcl
xchg
mov
mov
xchg
mov
sub
addr16
adc
inc
pop
adc
push
sar
and
enter
rorb
pcmpeqb
sbb
sub
mov
sbb
jnp
inc
jp
js
xchg
dec
movsl
mov
hlt
or
cmp
ss
jno
mov
mull
dec
mov
testl
jg
dec
jl
mov
packuswb
push
xor
clc
xlat
enter
sub
addb
mov
mov
jmp
mov
aam
out
push
dec
int3
fisttpll
cmp
lret
push
bnd
pop
and
clc
imul
mov
cmp
dec
mov
pop
cmp
cwtl
mull
pop
icebp
jp
lcall
sbb
clc
mov
sub
push
in
sub
int3
jbe
add
fbld
xchg
shrl
mov
outsb
mov
popa
mov
push
adc
call
bnd
cli
adc
out
sbb
xchg
mov
mov
lock
sub
and
dec
push
lcall
test
mov
dec
out
out
mov
test
jg
les
dec
ror
xor
leave
push
sub
sub
insb
bound
mov
jge
or
pop
fstpt
ja
ficoms
negb
mov
in
pop
out
xor
sbb
in
or
loopne
adc
mov
pop
sub
lods
dec
icebp
add
mov
push
insl
mov
insl
xchg
aad
mov
adc
jg
sarl
adc
xchg
das
incb
ret
or
shll
mov
movsl
out
pop
add
ljmp
xchg
add
push
in
push
xor
sbb
imul
movsl
leave
push
std
ds
in
daa
gs
in
dec
mov
repnz
imull
das
movsb
mov
jmp
sbb
push
add
inc
roll
hlt
adc
ror
rcll
jae
pop
pop
push
lock
pusha
push
cmp
loop
push
stos
jae
test
lods
lret
xchg
pop
insl
cwtl
jl
and
stos
inc
clc
iret
sti
jbe
dec
sar
and
shll
xchg
fwait
jp
sub
fs
mov
pusha
ja
push
push
test
jo
pop
std
push
jne
aaa
aaa
std
movsl
fsts
fwait
insl
addb
scas
sahf
lcall
mov
test
mov
mov
ret
mov
test
pop
mov
subb
inc
icebp
aas
push
dec
jecxz
dec
sbbb
inc
mov
or
daa
loopne
int3
xor
xor
mov
xchg
ss
aam
mov
sti
aam
jmp
into
test
jbe
adc
filds
mov
shr
loop
push
sbb
push
xor
arpl
pop
aas
and
fwait
psrad
insl
push
xchg
jp
xor
dec
xchg
les
push
mov
jge
test
mov
and
hlt
iret
aaa
add
imul
ret
cmp
fadd
sti
sbb
xchg
cmpsl
lock
out
dec
mov
ret
push
out
mov
mov
and
fmul
test
jle
into
imul
je
stos
fcmovnbe
mov
stos
add
and
mov
pusha
and
mov
call
dec
push
cmpsl
mov
insl
lods
ljmp
loop
fs
lcall
enter
push
fisubrs
insb
adc
scas
popf
out
fcoml
pop
out
rcr
gs
inc
jge
push
stos
mov
das
mov
rolb
jo
ja
sarl
repnz
jne
and
shr
test
mov
push
adc
jae
cmp
fisubs
andb
push
in
cmp
push
in
movsl
mov
cmp
lret
insb
mov
xchg
ret
add
add
mov
inc
mov
aad
dec
movsl
enter
jl
fwait
loopne
in
pop
xor
or
push
jne
ss
and
into
call
adc
cmp
int
rcr
aaa
scas
push
xor
lods
cli
insb
mov
mov
cwtl
incb
shlb
push
pop
xor
in
xor
pop
fisubs
rorb
rclb
jle
jg
repz
sub
sub
mov
mov
cmp
mov
shll
and
lods
jo
insb
push
es
daa
in
or
out
int3
arpl
cld
inc
jg
and
nop
inc
mov
mov
sbb
push
cmp
jno
jo
sub
movsb
ret
cmp
xor
pop
test
adc
stc
out
shlb
mov
scas
jmp
push
mov
xchg
pop
mov
stos
add
and
aas
test
or
stos
jo,pt
or
mov
ficomps
pusha
mov
pop
sub
inc
cmp
mov
mov
add
jmp
xchg
xchg
jle
mov
stc
add
inc
jmp
repz
xorb
iret
cmp
imul
xlat
sbb
and
cmp
test
sub
dec
adc
pop
push
divb
and
and
mov
aam
and
test
fs
ret
pop
aad
and
jl
jmp
sti
imul
rcrb
lock
sbb
dec
clc
outsl
adc
shll
popa
lock
xor
repnz
xlat
push
push
rcr
subb
or
repnz
mov
out
adc
test
rcr
ljmp
sbb
stos
or
push
divl
inc
scas
and
in
dec
fiaddl
jmp
sub
fmul
cmc
dec
dec
pusha
out
cmp
fadds
xor
and
add
mov
xor
in
sbb
repnz
mov
mov
iret
ds
xchg
std
hlt
mov
es
xchg
sahf
sub
addb
jne
stos
jge
addb
ja
adc
mov
cmp
repz
pop
test
mov
push
push
add
ds
cmc
jecxz
gs
out
fmulp
xchg
xchg
add
ja
sub
sbb
data16
test
inc
jmp
lock
dec
rcr
scas
mov
jle
and
sub
adc
inc
test
inc
fcomi
sub
xchg
je
jp
cmpsl
mov
leave
setle
sbb
and
iret
jne
loope
adc
gs
data16
cmp
xchg
and
push
hlt
mov
mov
mov
sbb
movsb
dec
mov
and
es
mov
add
dec
nop
mov
jg
ret
xor
push
mov
mov
and
ret
gs
scas
insl
inc
call
das
les
ss
andl
cmp
aaa
lods
daa
xchg
pop
dec
lods
mov
arpl
js
out
arpl
test
fldl
xchg
cmpsb
dec
fdivr
or
dec
test
outsl
xor
add
das
into
pop
outsl
push
pop
push
in
outsb
cmp
add
mov
aaa
mov
cmp
inc
and
mov
xchg
jns
or
pop
test
scas
jo
decb
and
xchg
lret
adc
xor
inc
outsb
ret
xor
add
pop
dec
pop
push
imul
daa
sbb
or
test
lahf
cmc
dec
push
adc
js
ficompl
fnstcw
insl
stos
jecxz
mov
pop
subl
pop
cs
mov
inc
cwtl
lods
fdivrs
push
icebp
add
sbb
jnp
aam
cmpsb
out
sti
and
or
add
push
cmpb
shlb
cmpsb
rclb
dec
insb
jl,pt
sbb
dec
dec
lea
xchg
je
mov
ja
cmpsl
mov
les
mov
lods
xchg
pop
ljmp
cs
outsb
call
cmp
pop
push
mov
sti
mov
push
cmp
cmp
push
cmp
add
es
int
cwtl
push
and
test
cmp
repz
icebp
and
sub
add
int3
and
fistps
push
stos
mov
shl
adc
jnp
or
clc
push
mov
in
sahf
mov
or
pop
cmpsl
mov
call
into
in
cmpsb
xor
insl
add
shll
sub
cltd
inc
push
ret
into
push
outsb
mov
dec
mov
jecxz
insb
outsb
sbb
xchg
adcl
jg
mov
stos
pop
mov
lds
pop
mov
and
shl
add
and
and
into
mov
add
push
mov
icebp
data16
sub
in
mov
in
cmpsl
mov
sbb
lods
jl
mov
popf
test
movsl
push
notb
xor
nop
pop
push
push
hlt
mov
imul
sti
insb
ret
xor
inc
mov
inc
mov
es
loopne
inc
cli
mov
xchg
insb
lea
cld
mov
fists
cmpsb
outsb
pop
clc
mov
mov
imul
xlat
es
and
mov
shrb
addr16
das
enter
insb
push
sbb
sub
or
pusha
push
sub
orb
adc
icebp
mov
rcrl
movsl
repnz
add
xchg
int
xchg
or
or
dec
sbb
jno
or
or
aam
push
inc
ljmp
lahf
adc
cmp
ficomps
pop
xlat
push
xor
inc
rcrl
mov
mov
inc
pop
ljmp
icebp
jbe
cmp
sbb
dec
imul
ljmp
test
ja
add
push
adc
and
or
mov
push
pop
xchg
outsl
mov
test
or
insb
and
rorb
repnz
test
test
lock
mov
jno
push
movsl
insl
xchg
add
mov
imul
js
cwtl
push
icebp
repnz
repnz
cwtl
mov
push
xor
test
or
mov
shr
push
adc
xor
stc
sbb
or
sbb
loope
jmp
pop
rolb
loopne
dec
out
hlt
in
sbb
fisubl
fcomps
in
sbb
mov
xchg
xchg
mov
sub
inc
mov
jp
sub
and
or
nop
out
sahf
jns
or
and
push
and
adc
out
repz
iret
popa
cmpsb
ss
ja
and
jb
mov
cs
sar
mov
aad
in
daa
movsl
xchg
adc
imul
repz
pushf
insl
loope
enter
in
mov
aam
xchg
push
shll
adc
scas
arpl
mov
inc
test
sbb
in
push
pusha
adc
fcmovne
lods
mov
movsb
popf
cmpsl
mov
mov
mov
out
and
or
movsl
lcall
out
roll
mov
sub
push
gs
mov
pop
stos
ss
iret
jge
ret
bound
lea
data16
lahf
sbb
lock
mov
push
imul
in
lret
push
loope
cmpsl
outsl
fists
aas
popa
cld
gs
cmp
push
out
sub
pop
pop
inc
cltd
ret
pusha
add
pop
jne
lret
xchg
daa
mov
push
jecxz
stos
movsl
sbb
xor
xor
roll
std
push
repz
add
inc
and
lret
mov
xchg
xor
orl
cmp
xor
adcl
movsb
pop
dec
inc
ja
adc
cli
mov
xchg
test
pushf
cmp
daa
dec
inc
test
dec
mov
js
pop
fwait
sbb
stos
xchg
xlat
or
aam
insl
stos
gs
pop
jbe
mov
jb
jl
lcall
imul
aaa
idivl
out
test
sub
mov
cmp
xorb
pop
aad
jno
and
std
push
cmpsb
or
lock
mov
jb
inc
mov
cwtl
xor
xchg
flds
pop
or
sahf
mov
add
sub
outsb
pop
lods
xor
and
call
jno
add
or
pop
cmp
push
mov
cmp
std
stos
mov
or
jnp
jo
dec
test
sub
sbbb
adc
fisttps
daa
and
fidivrl
jns
adc
sub
mov
mov
data16
loope
xchg
or
leave
call
jmp
jg
mov
aad
loop
adc
add
mov
pushf
dec
shll
pop
sahf
mov
cmpsb
xor
imul
lods
cld
int3
lods
xchg
jmp
lock
les
jmp
sub
mov
insb
jo
lds
and
lea
ret
dec
stos
or
mov
xchg
cmp
jns
jge
jb
and
or
nopl
sbb
cmp
clc
cmp
or
fwait
mov
xchg
or
push
xlat
xchg
js
push
fisttpl
sbb
lret
add
adc
pop
sub
ljmp
insb
push
cmp
nop
out
sub
cmp
dec
das
mov
cmp
xor
mov
nop
cmc
shrl
push
cli
iret
lods
sbb
pop
int3
pop
fists
mov
sub
xchg
cmp
jo
fwait
cmp
jmp
xor
popf
dec
roll
mov
push
push
andl
mov
push
adc
bound
jne
jecxz
add
inc
andl
or
data16
clc
and
cld
stc
lods
ud1
ljmp
dec
cmpsb
in
mov
xchg
ret
cmp
add
mov
movsb
icebp
testl
pop
movsb
adc
in
je
mov
add
cltd
pusha
and
and
jle
mov
repz
sti
loope
nop
xchg
push
jp
sbb
pop
fwait
mov
cmp
jno
adc
push
jle
loopne
cmpsb
pop
sarl
repnz
mov
js
inc
das
fwait
jns
ja
mov
add
fisubrs
shlb
xchg
rclb
lret
dec
aam
adc
xchg
ret
leave
jae
movb
add
shrb
addr16
fdivs
mov
mov
mov
sbb
sahf
aad
jecxz
mov
jb
or
mov
or
jb
out
or
fcmove
nop
ds
repnz
sub
test
divb
or
push
xor
enter
fwait
dec
jle
sub
xchg
inc
jne
mov
mov
jl
mov
imul
push
inc
add
jne
or
addr16
popa
dec
movsb
aad
or
and
cmp
mov
push
push
in
jns
jb
mov
pop
call
push
adc
ficoml
loope
add
dec
dec
icebp
sbb
sub
xchg
repz
scas
popa
in
jns
sub
inc
fmuls
mov
jmp
mov
insl
sbb
shl
cli
enter
or
pop
out
aaa
cwtl
shlb
mov
rcrb
pop
and
stc
cmp
mov
insl
add
test
xor
arpl
stos
and
mov
fnstcw
xchg
adc
das
fimuls
sub
popf
dec
xchg
lahf
push
test
mov
in
or
mov
push
mov
jecxz
ret
mov
aam
decb
roll
cmp
cmp
jae
pop
movsb
sub
js
je
pop
mov
sbb
xor
ffree
sub
lods
ss
imul
pop
and
outsb
movsl
sbb
pop
repz
inc
jg
insb
cmp
stos
dec
pop
xor
es
mov
push
push
add
out
xor
sub
in
inc
mov
jmp
push
sarb
push
orb
or
pop
iret
inc
and
adc
in
and
or
mov
ds
fisubrl
push
and
cmp
and
movsl
fcmovb
sahf
jae
test
cmpsl
les
add
leave
xchg
xlat
adcb
bnd
cs
lret
xor
mov
cmc
nop
icebp
jnp
popa
nop
inc
rcll
decl
mov
jmp
xchg
out
dec
addr16
lock
pop
fwait
cmpb
imul
push
xchg
js
xchg
out
jle
test
leave
xchg
mov
out
aad
or
ja
stc
not
dec
mov
cmp
jbe
popa
adcb
or
pop
ljmp
insl
pop
jo
fwait
pop
sti
jbe
fildll
push
jno
popf
xor
sub
pop
mov
pop
in
xor
ja
icebp
sbb
sbb
stos
fs
out
pop
in
mov
call
mov
jns
mov
lahf
add
daa
jns
sub
mov
imul
mov
out
dec
mov
mov
dec
mov
in
insl
aad
mov
daa
sarl
bswap
xchg
inc
or
inc
xchg
insb
dec
xchg
mov
fdivr
inc
xor
sub
rol
nop
mov
xlat
int
std
sub
out
daa
add
or
out
lea
das
icebp
xchg
pushf
mov
xor
ret
in
inc
idivb
rcrb
xor
mov
test
lcall
stc
or
fisttpll
xchg
test
mov
cmp
mov
iret
outsl
fwait
shrb
movsbl
dec
fisubrl
jo
lock
add
cli
movsb
push
or
or
leave
inc
pushf
fimull
jnp
pop
push
mov
lea
push
nop
bound
test
mov
xor
mov
je
mov
dec
mov
cltd
dec
pop
jbe
sub
dec
jmp
and
sub
cli
inc
xor
mov
mov
inc
lock
mov
push
daa
inc
fnsave
insb
fldenv
push
loopne
jle
sbb
call
push
scas
mov
leave
mov
in
xchg
es
lock
sti
gs
cmp
data16
add
pop
lds
les
iret
rcll
mov
push
sti
scas
sub
fldt
rorb
aaa
fwait
inc
jl
add
icebp
xchg
push
cmp
lahf
mov
lret
fisttpl
dec
inc
xchg
dec
fdiv
sbb
ret
and
push
and
mov
movsl
jg
mov
push
aam
fmuls
pop
popa
mov
xor
jle
cmp
inc
push
cmpsb
add
sub
pop
shlb
push
incb
jno
xor
pop
and
xor
cmpsl
xchg
xchg
jp
jle
movsb
inc
mov
pop
cmp
mov
loope
inc
fcmovnb
dec
stos
imulb
pop
mov
xchg
pushf
mov
pop
pop
sbb
clc
xchg
cwtl
push
ljmp
pop
fstl
jge
fiadds
imul
icebp
xchg
jmp
fwait
dec
dec
lods
fs
fwait
sub
jle
sahf
repz
xor
sub
mov
sub
xchg
jl
movsb
repz
jmp
test
mov
dec
sub
es
mov
mov
arpl
mov
inc
xor
and
fidivs
imul
xchg
rorl
insb
outsl
fs
mov
mov
lahf
add
loope
mov
cmp
pusha
sbb
mov
loop
xchg
push
jecxz
or
js
cli
out
inc
cwtl
hlt
lods
rcrb
cmpb
leave
ret
ret
icebp
inc
mov
shr
jnp
jo
mov
push
add
dec
scas
push
cmp
std
mov
mov
gs
lcall
out
xor
loope
mov
sub
or
lods
js
push
add
loope
in
shll
xor
aad
sahf
adc
lods
cmp
and
je
mov
cmc
push
jge
hlt
imul
fadds
div
mov
push
sbb
loope
les
aas
cli
push
sub
daa
pop
mov
in
std
dec
pop
test
mov
lock
into
loopne
fs
sbb
sub
sbb
mov
dec
test
adc
sub
push
jae
mov
out
mov
int
xchg
sbb
enter
pop
mov
frstor
mov
int
outsl
icebp
mov
idiv
sahf
stos
aam
mov
outsl
lea
negb
imul
pop
test
movsl
cmp
das
xor
mov
dec
int
xchg
or
jo
jo
ss
sbb
and
mov
int3
sbb
imul
aaa
in
mov
std
cmpsl
dec
or
lea
jno
mov
mov
test
cwtl
sahf
xchg
subl
aam
insb
xchg
xchg
adc
insl
adc
imul
loope
mov
out
mov
pop
lret
or
pop
shlb
pop
fcompl
popa
add
xor
fmulp
jbe
jle
std
ja
js
dec
lahf
xor
inc
xor
and
pop
sub
sahf
icebp
push
ret
std
scas
in
out
repz
or
xchg
mov
daa
lock
fwait
push
fs
xchg
loop
in
fbld
pop
into
sbb
insb
push
js
add
cmp
cmp
adcl
jne
aam
sbb
fwait
and
dec
adc
cmp
sahf
jge
in
jecxz
add
jno
dec
lods
aad
jg
fsubr
mov
test
outsl
pushf
fildll
ja
pop
inc
arpl
stos
dec
sarl
gs
inc
lcall
ficomps
inc
shll
pop
lds
lahf
out
icebp
in
push
inc
add
loop
insl
pusha
mov
out
xor
and
mov
movsb
mov
testl
mov
mov
jge
jo
push
mov
jge
jecxz
add
jnp
sbb
rorl
mov
pop
dec
cwtl
movsl
sbb
cltd
in
jnp
cmc
xchg
fnstsw
mov
dec
xchg
faddp
sbb
xchg
or
out
mov
lret
lret
inc
xchg
cltd
adc
ret
push
stos
enter
scas
inc
push
fildll
lcall
pop
in
fcomip
jg
dec
adc
lahf
push
and
ja
loopne
add
into
xchg
xlat
jns
jle
inc
inc
mov
fnstenv
sbb
or
xchg
mov
shl
adc
negb
sbb
iret
scas
addb
fstpt
and
mov
adc
idivb
push
pop
inc
aam
loope
and
hlt
mov
loopne
std
mov
sub
in
or
jns,pn
out
cltd
inc
mov
push
xor
xor
cmpsb
movsb
test
xorb
jno
cmpsl
add
jo
movsl
loop
xchg
in
xchg
inc
or
xchg
mov
into
and
adc
mov
jbe
xchg
dec
xor
dec
out
jno
lods
pop
pushf
cli
mov
jae
stos
cs
or
add
bound
in
adc
xorl
xor
pusha
mov
lahf
mulps
andb
dec
and
mov
dec
add
sbb
push
push
cmp
inc
push
dec
jmp
xchg
loop
out
add
sbb
xor
out
lahf
stos
aad
sub
mov
lock
pop
shll
inc
adc
inc
dec
pop
das
pusha
in
mov
stos
pop
addl
int3
push
jns
pop
mov
xchg
sbb
lahf
mov
jnp
inc
xor
das
push
lock
adc
mov
lret
and
dec
or
jp
sub
fcoms
jne
xlat
mov
imul
mov
sbb
push
call
jg
cmpsl
lods
outsb
std
push
adc
dec
int3
sub
push
jbe
push
inc
andb
pop
es
mov
lret
mov
pusha
lret
stos
addr16
movb
sub
push
aas
mov
leave
cwtl
repz
out
sti
add
testb
imul
mov
rcrl
push
push
sub
pop
lret
ret
cmp
outsb
dec
jnp
pop
cmp
dec
aaa
jo
push
inc
xor
dec
data16
je
repnz
lods
mov
mov
lret
cld
cmp
loope
mov
vmulpd
sbb
ss
sub
cmp
out
or
jmp
mov
sbb
rolb
lahf
out
test
pop
dec
lea
xlat
pop
cs
rcrb
sbb
ret
add
insb
cmp
mov
lods
movsb
scas
dec
out
cwtl
sarl
aas
in
sbb
adc
stc
stc
and
stos
add
cwtl
in
push
mov
iret
jmp
and
enter
inc
cmpsl
int3
push
jno
xchg
cmc
inc
pop
adc
pop
loope
loop
js
mulb
dec
lret
test
ljmp
cmp
adc
mulb
sahf
sbb
test
cli
out
clc
cmc
mov
addl
inc
mov
mov
fstpt
outsb
adc
dec
xchg
xchg
add
xor
dec
push
rorb
out
mov
cltd
mov
mov
ss
fstps
xor
dec
xchg
pop
cmp
out
sub
mov
lahf
stos
pop
cmp
push
ja
dec
mov
cli
in
and
lret
push
jmp
lds
xlat
cwtl
lret
push
cmpsb
jne
sbb
jo
dec
jnp
push
xor
pusha
repnz
jne
addb
and
scas
call
xor
insb
mov
xchg
fcoms
xchg
add
scas
into
adc
xchg
and
insl
dec
sub
push
ss
ja
sub
sub
stos
test
dec
jno
bound
xchg
cmp
cld
scas
sbb
xchg
adc
xchg
into
or
addr16
mov
popa
xchg
push
add
inc
rorb
xor
push
xor
xchg
sub
push
cmp
jo
xchg
adc
jmp
push
in
inc
mov
loopne
pop
dec
sub
gs
stos
xchg
cvtps2pd
lds
mov
int
mov
push
jne
jb
data16
push
and
loop
cmp
dec
pop
sbbl
mov
cmp
ss
in
les
pop
pusha
adc
scas
shlb
jl
mov
mov
adc
iret
push
and
pop
jg
cwtl
and
ds
jmp
xchg
mov
xchg
push
inc
ret
jmp
mov
fcomps
or
insl
mov
pop
mov
adc
pop
test
sub
out
xchg
sbbb
ret
data16
adc
sub
inc
inc
push
or
or
cmp
test
mov
adcb
inc
push
leave
cmp
jp
mov
mov
xor
loop
das
outsb
arpl
mov
jle
movb
or
inc
dec
arpl
cli
pop
jb
cmp
outsl
xchg
mov
cmp
jns
pop
sbb
jle
bound
popl
jp
ret
add
jbe
push
test
popa
mov
pop
lea
dec
push
push
andb
cmpsb
testl
lahf
fists
outsb
xchg
das
test
xor
subb
cltd
aad
sub
add
icebp
into
pusha
idiv
sub
adc
jmp
imul
roll
js
or
inc
mov
aaa
test
cmp
adc
xor
fsubr
lea
jnp
add
aad
jmp
pusha
lods
fs
in
or
add
outsb
and
sub
cmpl
cmp
and
gs
call
subb
insl
dec
push
testl
adc
xor
xchg
or
jle
out
xchg
jae
mov
dec
pop
test
lea
in
pop
into
xor
sbb
mov
daa
sbb
cmp
adc
in
dec
jge
clc
scas
cli
rcll
test
xchg
sub
pop
insb
dec
test
out
mov
pusha
cs
inc
lret
inc
daa
std
inc
inc
mov
mov
ret
test
cmpsb
pop
jmp
neg
sub
ret
ljmp
gs
in
xchg
xchg
fnstenv
rclb
mov
push
inc
mov
or
arpl
popa
loope
int3
insl
sbb
or
in
fidivl
outsb
mov
movsl
pop
cmc
push
gs
movsl
dec
leave
jmp
in
dec
ja
dec
lods
jae
fcomp
aad
das
fiadds
jle
xchg
stc
push
mov
jl
xor
insb
rcrb
and
push
push
adcb
sbb
imul
jb
pop
xor
or
push
sbb
mov
push
dec
pop
iret
lcall
orl
mov
out
ficoml
mov
adc
fisubl
mov
inc
out
loope
icebp
dec
aam
mov
sub
add
imul
jmp
pop
mov
inc
mov
and
mov
dec
xchg
jns
pop
imul
cmc
adc
push
pop
mov
pop
mov
sti
cmp
lods
iret
insl
ficomps
imul
push
cmp
mov
aad
lcall
outsb
dec
inc
fsubl
pop
hlt
aam
jmp
adc
in
mov
jno
stc
fs
mov
push
loopne
aad
adc
into
test
and
mov
sub
sub
idivl
movsb
xchg
into
xchg
add
rclb
mov
push
jle
inc
in
inc
ds
rcrl
xchg
and
jecxz
jno
scas
das
fnsave
lret
mov
cwtl
dec
sahf
lock
xchg
jge
xor
dec
ret
lock
cltd
sub
adc
fwait
or
fdivl
std
and
lods
mov
sbb
aam
push
out
lds
fidivs
mov
and
jne
push
sbb
imul
mov
inc
push
ss
cwtl
lods
sub
or
outsl
aas
and
and
or
inc
xor
push
cltd
push
mov
or
sahf
shl
add
mov
insb
pushf
popf
leave
mov
jne
push
mov
push
scas
or
loopne
push
mov
ljmp
pop
add
adc
pop
ss
dec
fnstsw
or
out
adcb
fmul
sbb
jge
ficoml
cmp
push
mov
pop
mov
or
mov
xor
adc
xchg
fdivrl
repnz
cmp
imul
mov
xor
in
pop
int
inc
cmp
jb
add
repz
or
pop
orb
fdivrs
and
lds
jle
cmp
aaa
popa
xchg
stos
and
mov
dec
daa
push
lahf
adc
andb
or
lods
adc
test
cltd
mov
int
clc
cmp
int
push
inc
lods
add
mov
add
lret
lretw
cmpsl
pop
fistpl
jp
stc
stos
sbbb
sbb
jle
cmp
daa
xor
scas
stos
push
lods
pop
mov
test
pop
cmp
mov
xchg
ljmp
xchg
and
add
cmp
mov
mov
push
adc
sbb
fldenv
data16
sub
mov
cli
mov
js
insl
in
jp
xchg
xchg
test
adc
rorb
out
popl
ficomps
cmpsl
loopne
mov
push
pop
jg
dec
xchg
pop
dec
lods
fisttps
gs
arpl
or
xchg
outsl
rorl
dec
lds
or
xchg
hlt
mov
scas
movsb
or
jno
mov
mov
inc
ljmp
pop
push
add
std
mov
int3
add
cmp
or
xor
push
push
pop
dec
jae
cs
outsl
jle
cmp
fwait
cmp
popf
mov
inc
sbb
sbb
jl
sub
jne
dec
mov
cwtl
fcompl
mov
pop
flds
inc
div
xchg
ljmp
aam
outsb
ljmp
in
mov
testb
push
ss
mov
sbb
loop
add
dec
sub
je
jbe
push
mov
adc
mov
xchg
je
pop
or
push
aam
xchg
into
pop
mov
je
cmpsl
dec
push
popa
rclb
push
loope
cwtl
mov
mov
push
rol
push
sub
out
mov
lcall
mov
fmull
or
push
and
sbb
inc
jp
lcall
push
mov
stos
cltd
ja
pushf
aaa
inc
insl
lods
pop
xor
mov
or
xor
orb
movsl
aaa
jmp
cmp
sbb
mov
lret
mov
loope
adc
int
shl
push
into
xlat
lcall
ljmp
add
push
imul
aaa
pushf
mov
es
cmp
loopne
or
call
inc
loope
mov
in
dec
or
push
xchg
mov
ret
cld
rcrb
outsb
xchg
lock
scas
jb
sbb
pop
xor
les
and
mov
fisubs
repz
pop
pop
xor
sbb
cmp
inc
dec
pop
xchg
pusha
arpl
dec
dec
or
inc
in
idivl
daa
cs
neg
in
mov
lret
clc
sbb
lahf
jnp
in
enter
in
xlat
ds
call
gs
mov
xor
and
dec
insb
sub
testl
jmp
xorb
pushf
pop
js
fsubrl
out
jb
sbb
aaa
loope
xchg
sbb
sbb
pop
cltd
adc
add
out
pop
fdivrl
imul
mov
mov
dec
in
jle
iret
adc
dec
lods
and
test
js
sbb
cmp
xor
loop
mov
nop
fwait
push
xchg
xchg
stc
sbb
bound
fwait
adc
sbb
jecxz
push
jge
rorl
movl
xor
outsl
and
std
xchg
lea
movsb
pushl
in
sub
xchg
je
push
int3
mov
hlt
movsb
xor
jge
cmp
cld
and
and
lea
loop
and
jg
outsb
cs
sbb
adc
cld
lods
push
push
push
hlt
cmc
popf
aam
mov
sti
gs
sub
into
sbb
es
pusha
mov
ja
outsb
push
mov
xor
scas
xor
or
push
flds
js
sub
cwtl
repnz
insl
dec
aas
test
into
mov
xchg
adc
dec
icebp
jae
ljmp
push
loopne
call
adc
in
adc
sbb
dec
jge
sbb
inc
mov
in
mov
cmpsl
mov
adc
sbb
cwtl
jae
pop
jo
fiaddl
pop
out
add
cmpsl
scas
cmp
mov
pop
xor
enter
mov
jl
aam
jb
in
mov
lcall
les
pop
outsb
sub
mov
fsub
dec
test
ds
ds
mov
subl
loopne
push
lcall
stc
mov
into
sub
mov
mov
bsf
jbe
lock
inc
test
mov
rorb
mov
push
test
jle
ss
scas
je
sti
insl
in
rorl
ljmp
out
lret
inc
leave
leave
push
std
jns
inc
jnp,pn
incl
jb
mov
cmp
adc
add
cmc
mov
das
dec
cmp
dec
sbb
mulb
dec
movsl
lret
cmp
add
lret
repnz
xchg
mov
lret
sar
adc
xor
jle
out
mov
outsb
mov
mov
push
or
lcall
jbe
je
cli
loopne
scas
lret
mov
insb
push
inc
pop
scas
pop
fwait
aam
pop
ficomps
scas
xchg
call
stos
lock
into
inc
and
shll
sti
pop
lcall
mov
xor
push
sub
aaa
filds
and
sub
dec
cmp
add
dec
pop
xchg
mov
popf
sbb
mov
fldl
gs
push
sbb
test
shlb
adc
jbe
and
sarl
jge
imul
add
scas
dec
ljmp
jecxz
mov
mov
mov
or
add
push
jecxz
pop
lods
shl
push
mov
sub
out
push
lret
xchg
xor
orb
rcrl
push
push
mov
jb
pop
inc
sahf
stos
mov
xor
push
mov
dec
mov
arpl
sbb
ret
fs
xchg
outsl
mov
aam
lahf
jno
sub
sbb
add
dec
ret
sbb
into
les
mov
scas
test
addr16
adc
fs
cmpsl
stc
mov
int3
xchg
adc
loopne
xchg
enter
dec
add
jle
jl
bound
into
lea
or
rcrb
std
dec
cmp
cmp
data16
stos
ss
or
enter
sbb
push
mov
out
or
fnstcw
push
cmpsb
pop
lock
iret
call
xchg
cmp
xchg
test
mov
or
inc
cmp
push
xlat
add
sub
xchg
push
fidivs
jge
add
inc
in
out
shrb
out
pushf
mov
pop
ds
jno
adc
sub
dec
pop
out
dec
pop
popa
dec
dec
stos
cmp
dec
stos
and
dec
scas
inc
fadds
loop
nop
pop
dec
xchg
mov
fstpl
lds
rclb
leave
inc
sbb
fldcw
lds
mov
pop
or
jb
ljmp
idiv
push
data16
outsl
pop
pop
aad
jnp
mov
rolb
pop
add
shlb
shlb
sbb
ret
inc
add
sbb
xor
ret
icebp
outsb
add
sbb
fs
sahf
pop
je
cmpsb
fists
addr16
outsb
aas
pop
std
cmc
xor
jmp
ret
push
jb
cmc
mov
jnp
out
mov
int
cmp
int
push
mov
xlat
pop
int3
push
jbe
iret
jmp
lret
pop
jns
sub
xlat
mov
add
or
nop
mov
shlb
or
clc
jmp
loop
lret
loopne
cmp
dec
mov
lds
cld
mov
std
rcll
pushf
push
sub
dec
push
fmull
pop
jbe
xchg
or
cwtl
sub
fs
xor
mov
push
rorb
pop
ljmp
push
mov
mov
xor
jmp
add
push
sarl
xchg
addb
mov
add
xchg
sub
cmpsl
popa
adcl
sbb
mov
sub
mov
clc
stos
or
mov
repz
and
adc
inc
jecxz
jnp
ret
inc
mov
dec
dec
jle
sub
pop
mov
subb
cs
or
inc
pop
sub
idiv
pushf
in
sbb
jbe
dec
fwait
in
xchg
mov
bound
mov
mov
stc
popf
jecxz
inc
jo
mov
and
sarb
push
std
dec
or
jno
es
xchg
jbe
ljmp
ds
fs
pop
ds
adc
pop
push
push
ljmp
incb
push
inc
loopne
aas
sub
rorl
mov
mov
or
add
pop
or
push
push
sub
xlat
add
aad
sbb
mov
je
bound
test
sub
ja,pn
dec
int3
jp
and
or
inc
jle
mov
xchg
enter
loop
jg
pop
jmp
xor
xchg
movsb
lret
mov
pop
rolb
shll
cmp
mov
cmp
jne
add
cltd
fiaddl
xchg
inc
jb
addr16
aad
scas
lret
jnp
cmp
pop
mov
aas
cld
jae
push
jbe
mov
out
mov
xor
sbb
push
pop
jb
mov
mov
mulb
cs
jge
into
sbb
jge,pt
cmp
pushf
pushf
aaa
xor
jno
insl
int
fs
and
aas
cld
pop
arpl
fsubrl
mov
popa
jns
push
sub
push
ja
and
ss
pushf
ja
add
outsb
mov
or
push
mov
adc
add
add
gs
push
lea
fucom
inc
mov
iret
icebp
pop
pop
sbbl
loopne
sarl
xor
and
xchg
jl
push
test
inc
jl
jmp
repz
mov
mov
add
cmp
inc
inc
adc
xchg
cmpsb
push
ret
sarl
jbe
xor
sti
std
jg
xchg
adc
stos
adc
mov
lods
mov
jae
pop
pop
push
ja
dec
mov
fidivs
mov
testl
sub
sub
inc
outsl
dec
test
insb
mov
adc
bound
aam
outsb
popa
ficoml
mov
mov
loop
mov
test
inc
push
push
adc
inc
push
bound
push
mov
aad
insl
ljmp
inc
mov
dec
and
xchg
shll
sti
jnp
mov
call
jne
jecxz
les
lock
sub
push
push
sbb
fiaddl
mov
dec
in
mov
in
insl
andb
jbe
int
int
testl
mov
xchg
jbe
sub
ljmp
mov
cltd
enter
cwtl
push
mov
mov
addr16
std
sub
ficomps
movsl
xchg
cwtl
rol
sbb
lods
xlat
mov
jg
fwait
je
popf
xor
repz
mov
pop
mov
insb
dec
push
lcall
pop
mov
int
cmp
or
mov
adc
nop
pop
andl
pushf
push
and
aaa
pop
fldcw
add
add
insl
cmp
adc
shrl
pop
push
lods
mov
xlat
cld
js
pop
cmc
repz
sbb
int
in
out
xchg
movsl
js
adc
push
mov
push
mov
xor
sbb
lahf
sub
xchg
jne
mov
shl
pop
xchg
pop
roll
push
inc
sub
out
gs
fucomip
faddl
dec
mov
stos
jmp
jae
xchg
push
repnz
sti
cs
gs
mov
fcmovne
push
daa
push
std
add
loopne
test
hlt
sub
outsb
pop
test
test
push
call
mov
xchg
mov
aaa
pushf
jmp
clc
sub
mov
xor
fdivs
hlt
movsb
cld
out
push
lret
sub
xchg
je
rorl
aad
mul
xor
ja
call
jbe
leave
push
sub
xorl
jmp
mov
pop
je
lret
jp
xchg
push
test
je
xorl
bound
xlat
jnp
add
mov
enter
loope
cmp
mov
int
fwait
or
lods
push
mov
mov
iret
or
sub
jp
or
scas
add
movsl
imul
mov
stos
mov
je
aas
ret
jb
ret
jne
mov
enter
loope
test
jecxz
lods
jle
inc
adc
inc
add
aaa
je
sbb
iret
and
fimuls
out
fcompl
popa
mov
jne
mov
mov
ret
scas
shll
jecxz
or
js
fcompl
rol
xchg
mov
cmp
arpl
and
in
xlat
push
arpl
dec
add
xor
adc
int3
nop
lods
mov
mov
push
sbb
fidivrl
inc
into
sbb
addr16
scas
mov
pop
dec
out
pop
arpl
mov
je
insb
outsl
xlat
push
jecxz
jb
das
adc
pop
cmp
jecxz
pop
jo
addr16
addr16
push
pop
ds
out
shrl
and
aam
push
pop
and
sbb
jo
dec
js
pusha
adc
sub
std
xor
pop
xchg
push
mov
mov
push
shll
stc
jne
add
test
lods
cmp
aad
lds
mov
jge
fadd
pop
scas
mov
ds
mov
jl
divb
loop
stos
dec
popf
fstps
ja
inc
add
and
cmpl
mov
jbe
popa
leave
sbb
add
mov
es
xchg
inc
scas
repz
pop
mov
dec
dec
leave
mov
in
adc
xorl
xor
fldt
sub
aad
inc
sbb
dec
mov
test
ret
insl
cmp
pop
sbb
sbb
int
mov
pop
aad
bound
cmp
sub
hlt
sub
add
loope
daa
pop
cwtl
sbb
push
jae
dec
int3
gs
aad
and
sti
jl
sub
mov
lods
pop
jb
stos
xor
mov
pop
aaa
insl
loope
xor
fsub
mov
sub
shll
pandn
and
and
mov
lahf
push
nop
xchg
push
mov
insb
fwait
inc
mov
add
cmp
fmul
add
fistpl
dec
pop
adcb
mov
cld
push
mov
int3
lods
xor
cli
aaa
mov
or
mov
mov
mov
icebp
cmp
insl
pusha
xchg
test
es
adc
dec
and
add
js
push
movsb
lahf
rolb
push
xor
aam
push
cwtl
push
xchg
cmp
mov
inc
xchg
paddb
movsl
sub
lods
fistl
or
or
and
sti
mov
sub
popf
mov
std
lods
xchg
lds
mov
or
rcll
sahf
adc
cmp
andb
push
outsb
push
mov
dec
push
mov
pushf
xchg
mov
in
add
pop
subb
inc
jp
or
pusha
or
mov
test
out
rolb
dec
mov
fistpll
add
inc
fadds
sar
mov
fnstenv
or
and
adc
rol
shlb
and
in
xor
xchg
cmp
mov
jecxz
fldlg2
int
fstpt
ja
scas
loop
dec
mov
cwtl
cmpsl
rep
xor
cmp
or
addb
fucomp
cmpsb
shlb
adc
sub
das
rcrb
xor
sub
and
popa
pop
mov
lret
adc
sbb
fs
fs
mov
rclb
mov
xlat
orl
xchg
cmp
pop
push
rclb
lcall
jb
fs
stos
mov
pop
outsl
aam
ja
scas
testb
jecxz
sbb
xor
dec
or
or
mov
rcr
dec
push
in
fninit
loop
inc
cmp
pushf
out
mov
aad
xchg
out
test
in
and
daa
pop
shll
sub
rorl
loope
adc
cld
sub
pop
xor
dec
je
lahf
stc
xchg
pop
cld
add
push
cmp
dec
jbe
mov
xchg
loopne
mov
out
lea
outsl
cld
aad
add
xchg
loope
mov
gs
mov
mov
fidivl
fdivs
and
test
sahf
test
or
pop
lods
popf
je
cli
scas
das
or
mov
push
inc
cmpsb
mov
xchg
scas
jmp
pop
out
pop
das
mov
insb
xchg
cld
cmpsl
sbb
inc
dec
lcall
insb
cmp
out
mov
and
push
in
mov
ljmp
je
outsb
jbe
icebp
jmp
push
xor
fistps
shll
mov
mov
mov
dec
icebp
cmp
xchg
push
inc
in
dec
or
mov
popf
scas
jo
lds
push
push
icebp
mov
jno
movsl
xor
pushf
push
sbbb
xchg
and
dec
adc
mov
dec
lea
or
push
in
xchg
inc
cmp
adc
xchg
fadd
dec
inc
lock
mov
push
mov
or
cmp
ds
imul
cs
test
mov
mov
inc
pop
adc
pop
hlt
cmp
insl
xor
roll
cmp
push
aaa
movsl
jmp
jo
xchg
mov
mov
fiaddl
or
repz
out
dec
nop
je
out
push
popa
jne
dec
mov
mov
fidivl
adcb
mov
sub
jmp
icebp
xlat
mov
ljmp
push
adc
lock
cmp
mov
dec
outsl
inc
inc
cmc
lahf
push
test
dec
jb
dec
popa
daa
bnd
push
fisubs
int3
sbb
cli
cwtl
test
repz
popf
push
pop
repz
dec
stc
movsl
or
sub
pop
outsl
hlt
test
fucomip
popa
bound
pandn
dec
notl
mov
dec
clc
dec
pop
scas
notl
sbb
adc
cmp
stc
pop
fildl
sbb
jge
xchg
iret
cmc
mov
pop
push
stos
xor
pushf
hlt
xchg
mull
jl
xchg
add
repnz
mov
mov
ret
test
dec
and
call
mov
sub
cs
fs
cmp
cld
dec
std
cs
mov
out
insl
dec
test
mov
js
adc
minps
xchg
dec
fnsave
add
mov
stc
xchg
inc
sti
adc
repnz
call
aad
mov
mov
sahf
lahf
sahf
js
movsl
leave
jmp
hlt
adc
xchg
test
sbb
aaa
inc
push
mov
adc
pop
mov
iret
push
dec
negb
es
sub
in
push
das
lret
out
dec
pop
stos
in
pop
icebp
xorl
xchg
popa
xor
cmc
xchg
inc
sub
lods
cs
cmpsb
addr16
movsl
ret
pop
sbb
fstl
pop
or
adc
dec
es
rcll
stos
rcrl
mov
or
mov
cmpsl
lea
jb
in
push
cmp
cmp
sbb
xor
cmp
mov
mov
dec
cmpsb
outsl
jnp
cld
pop
xchg
mov
js
adc
xor
sub
push
jmp
fstpl
inc
mov
cmc
notl
xchg
sub
mov
sbb
or
ds
gs
mov
cmpsl
arpl
xchg
mov
mov
icebp
stc
das
out
xchg
xchg
xor
stos
add
mov
rol
daa
cwtl
mov
fistpl
enter
mov
mov
push
leave
ficomps
fcmovb
iret
jp
xchg
shrl
push
test
vsubpd
ss
xchg
rorl
aam
and
jle
sbb
xor
xor
imul
lret
movsl
push
fiadds
cmp
inc
in
mov
cli
test
mov
inc
pop
or
mov
decb
xchg
xchg
aam
orl
insb
mov
add
mov
mov
ret
cmp
cmp
xchg
mov
in
lcall
mov
pushf
cmpsl
mov
call
mov
jmp
adc
hlt
lcall
fistpll
push
lretw
cld
jno
xchg
cwtl
push
cmp
in
stc
decl
cs
lahf
popa
inc
adc
addr16
mov
xlat
sbb
mov
xor
or
dec
fidivrs
lahf
jns
sub
mov
mov
push
sahf
xlat
js
push
adc
sub
dec
js
int3
jge
xchg
inc
imul
and
js,pn
push
inc
jmp
sub
stc
mov
xchg
orb
fs
jg
jo
jle
fiaddl
je
xchg
and
pushl
arpl
test
pushl
inc
jle
sub
dec
mov
call
cmpsb
in
in
cld
push
cmp
subb
adc
sub
fstpt
add
inc
stos
or
dec
incl
ljmp
fisubrs
jno
in
pop
repz
arpl
xor
fst
sub
push
cmpsl
cmpsl
sbb
leave
hlt
lret
and
sbb
fs
jmp
jnp
movsb
imul
aad
dec
push
ljmp
and
mov
movb
cwtl
popa
cltd
aam
arpl
mov
mov
dec
cmp
or
and
sub
cmpsb
out
enter
mov
jl
xchg
test
repz
xor
adc
mov
pop
add
push
inc
or
repnz
outsl
or
cmp
fs
sbb
data16
lahf
icebp
cld
mov
rolb
xchg
ljmp
jnp,pt
inc
sbb
repnz
sbb
xchg
shrl
sbb
mov
adc
cmp
dec
dec
sahf
movsb
movsb
push
lahf
fs
or
repnz
jecxz
call
dec
sub
add
and
lods
fdivrs
lods
rorl
fs
or
lods
dec
fnstsw
ret
icebp
fs
and
jge
lret
or
sbb
xor
testl
dec
mov
pop
leave
ret
in
inc
adc
cli
sbb
mov
or
mov
pop
cmpsb
push
xchg
loop
mov
mov
int3
mov
lret
bnd
rcr
js
adc
xor
fcomi
cmpsl
ret
inc
test
int
mov
xor
or
mov
pop
inc
mov
jmp
mov
lret
sbb
aaa
mov
mov
pop
sub
mov
aaa
sub
lea
clc
jg
stc
aad
or
loope
decw
and
cmp
adc
lods
mov
lea
xor
cltd
sbb
inc
mov
xchg
adc
out
sbb
adc
in
lcall
and
sbb
rcrl
cmp
mov
mov
pop
je
fucomp
sub
cmp
xor
fisttpl
sti
jne
insl
cmp
jmp
cmp
sub
or
dec
lret
sti
cli
loop
dec
cltd
faddl
outsl
sbb
mov
mov
adc
mov
out
adc
fwait
mov
xor
jb
popl
rcl
arpl
aaa
cmp
cmp
push
xlat
ljmp
ljmp
jle
push
and
outsb
mov
lds
lds
dec
mov
inc
test
rcll
dec
mov
mov
and
es
push
lcall
add
mov
sbb
fidivl
mov
cltd
jno
test
xor
mov
and
faddl
pop
iret
pop
adc
faddp
xor
and
push
cmpsl
lahf
cmp
inc
lcall
xor
adc
jge
sub
jae
imul
inc
mov
or
inc
stos
js
push
sbb
jno
push
loop
adc
arpl
mov
jb
stc
daa
push
fsubs
outsb
and
adc
aaa
inc
rcl
aam
xor
xchg
sub
iret
fistl
loop
sahf
mov
xchg
in
das
ficoms
cmp
decb
stos
clc
clc
loop
sbb
test
lahf
adc
and
popa
repz
sti
mov
push
xchg
lret
lock
outsb
mov
sub
clc
mov
bound
fsubrs
add
leave
xchg
xlat
push
mov
lret
loopne
adc
fwait
fs
inc
loopne
and
mov
fldt
gs
into
imul
out
mov
push
faddl
test
scas
popa
xorl
cmc
push
dec
clc
adc
and
mov
mov
dec
testl
dec
test
leave
hlt
data16
mov
and
or
and
xor
dec
in
call
inc
cmp
repz
jp
mov
fwait
jmp
inc
movb
shrb
mov
push
rorb
push
xor
fs
sarb
mov
cmp
mov
inc
in
jns
xchg
aad
lock
push
rclb
adc
xor
jo
cmc
inc
fwait
in
and
aaa
fwait
cmp
lcall
rcrb
mov
js
cmp
and
fs
cmp
lea
shll
dec
mov
ss
cmp
mov
sbb
push
nop
rcrb
mov
sub
and
aaa
ret
sub
pop
out
jle
pop
sub
jmp
mov
hlt
sub
mov
aad
ss
pop
and
rcrl
cs
pop
push
mov
sahf
test
mov
mov
push
mov
test
add
sti
add
insb
jl
fs
daa
mov
ret
xchg
lea
out
out
mov
dec
imul
das
lret
dec
dec
and
or
push
dec
sub
jle
jp
mov
test
jo
inc
pop
popf
xor
adc
mov
push
cli
jnp
sub
xchg
in
imul
add
cmp
in
pop
mov
cli
popa
xor
pushf
gs
stos
dec
mov
mov
insb
btr
mov
or
adc
or
cld
test
push
jo
push
es
mov
stc
and
mov
jb
mov
mov
das
push
scas
lods
jnp
dec
inc
xchg
mov
imul
fiadds
inc
cmc
push
popa
enter
add
push
mov
scas
jne
imul
mov
loopne
cmp
dec
movsl
cmp
es
sbb
pop
daa
jp
push
outsl
cmp
mov
int3
aaa
or
lret
jge
arpl
sub
mov
lret
outsb
or
sbb
ret
andl
adc
sar
push
xor
jle
add
jno
lret
test
cmp
inc
jp
adc
inc
lret
mull
adc
mov
cmp
or
add
cmp
es
jne
xchg
push
insl
test
sbb
push
sub
cmp
outsb
sub
lods
fimull
pop
pop
dec
cmc
dec
mov
in
ds
inc
jge
xchg
lock
mov
pop
popa
nop
pop
popa
jbe
pusha
fwait
mov
push
dec
sarl
or
mov
jnp
scas
iret
mov
dec
cmc
sbb
scas
inc
lods
lret
jbe
stc
fbld
repz
xor
fwait
inc
xor
or
gs
push
mov
or
push
and
loopne
sub
fisubrl
insl
cmpsb
ljmp
fcompl
mov
jecxz
nop
push
pop
mov
push
in
call
imul
cmpsb
inc
pop
push
xlat
call
xchg
aam
push
jecxz
xor
xor
in
and
adc
adc
les
or
sbb
push
lods
cmp
mulb
sub
dec
cwtl
icebp
mov
fsubrl
mov
push
pop
mov
mov
rol
testl
lds
jg
jmp
mov
push
in
ja
mov
mov
jmp
push
jp
push
shlb
jnp
subb
add
outsl
push
add
popf
incl
xor
xorl
mov
ja
adc
inc
out
sub
stc
push
js
test
aam
popa
inc
xchg
ret
inc
js
movsl
test
rcr
sub
push
mov
pop
mov
cmp
mov
sub
adc
xchg
pop
cmp
sti
jmp
rep
fs
pop
or
mov
xchg
or
xor
add
sbb
sub
repnz
fildll
and
sub
adc
cli
ja
dec
fcomi
out
adc
ror
cmp
in
addb
mov
lock
push
js
decb
add
sub
and
dec
ds
adc
xor
or
ja
sub
jbe
and
mov
pop
cli
stc
inc
xchg
lret
pop
adc
push
jnp
or
mov
aaa
lcall
pop
mov
fwait
cli
mov
adc
xchg
popf
mov
or
imul
ja
addr16
lds
loopne
adcl
cmpsl
inc
int
cmp
hlt
flds
addps
xchg
loope
sub
jo
loope
push
pop
mov
adc
mov
push
popf
pusha
dec
xchg
popf
cmp
xchg
mov
xchg
inc
add
and
push
push
and
scas
outsb
and
sbb
xor
pop
setg
out
out
sub
sbb
imul
jge
xchg
cmc
xor
into
dec
repnz
mov
std
adc
mov
pop
sbb
ja
or
cmp
fcomp
mov
xchg
jge
pop
jge
test
mov
popa
iret
test
sub
xchg
sbb
andb
fs
out
mov
in
jnp
mov
int3
dec
adc
addb
shl
sbb
jne
fsub
sbb
fimull
inc
in
mov
push
sahf
hlt
and
leave
and
mov
dec
sbb
and
push
mov
pop
add
add
mov
test
mov
inc
sub
mov
rclb
xor
test
leave
push
mov
mov
cmp
clc
fwait
mov
jno
in
xor
jg
shll
decb
pop
notb
jae
xlat
das
loopne
insl
lods
sti
nop
adc
dec
inc
inc
push
push
rclb
xor
nop
stos
xchg
mov
fwait
mov
into
fldenv
or
add
mov
lea
adc
out
or
mov
dec
lds
fwait
cmp
xor
nop
pushf
cmc
or
cmc
push
pop
addr16
mov
pusha
jg
jbe
mov
or
pop
ljmp
add
and
pushf
shrl
pop
movsb
sub
ljmp
fdivrs
mov
cmp
and
mov
inc
xchg
scas
sub
fst
cwtl
icebp
sahf
xor
dec
jecxz
add
cmp
jns
comiss
mov
cmpsb
xor
sbb
popa
mov
jnp
inc
aas
test
sbb
js
dec
cld
push
loope
and
popa
sarl
decl
dec
mov
clc
leave
and
cmp
dec
aad
inc
mov
out
dec
lock
xchg
mov
and
xor
repnz
inc
insl
push
imul
in
dec
xor
stos
daa
mov
das
push
loope
int
out
stc
jecxz
cmpsb
xlat
push
outsl
add
daa
mov
std
cld
idivb
repz
xchg
addr16
cmp
vandps
cmpsl
xchg
dec
ret
dec
and
mov
lret
je
mov
pop
add
loop
or
mov
call
add
insl
cmc
das
push
dec
fnstenv
mov
dec
xor
mov
add
out
icebp
dec
dec
lcall
xchg
ljmp
ja
negl
outsl
mov
sub
movsl
cltd
xor
sub
aaa
addb
and
pushf
lods
add
inc
mov
and
adc
imul
adc
clc
mov
pop
xor
jmp
das
cld
ss
leave
sbb
pop
mov
xchg
mov
cmp
arpl
fistpll
push
lods
movaps
cmc
xlat
jno
ja
rcrb
add
jle
pop
and
push
dec
int3
popf
lea
mov
lret
pop
hlt
dec
dec
testb
mov
jbe
shlb
pop
mov
repnz
pextrw
out
nop
mov
jg
and
idivl
imul
mov
shlb
xchg
lea
or
sub
mov
repnz
xor
lds
ljmp
push
lods
fwait
xor
sbb
loop
scas
sbb
test
in
out
cmpsl
cmp
sbb
sub
loop
push
push
xchg
movsb
mov
xor
and
je
and
cmpsb
adc
fisubrs
push
ret
sar
add
mov
test
ret
pop
loopne
jns
sbb
shr
add
std
ds
xchg
bound
and
adc
mov
fdivs
inc
pop
adc
call
inc
cmpsb
mov
mov
ret
xor
out
stc
rorl
mov
pop
jnp
push
push
sahf
xchg
jmp
mov
dec
inc
das
in
stos
cmc
lret
dec
int
int
cmp
dec
aad
in
fnsave
ds
lds
cltd
xchg
sub
mov
int
adc
pop
in
imul
mov
jg
lcall
int
fnsave
ffree
cmpb
sti
sub
lock
sub
out
adc
inc
xchg
cmp
xlat
mov
inc
aas
push
jg
aad
addb
call
push
mov
lods
fistl
xor
movsb
xchg
sub
inc
or
filds
cmp
cs
cmp
sbb
and
mov
hlt
aad
jnp
outsl
push
out
inc
add
pop
sbb
jns
sbb
mov
sbbb
cmp
arpl
pushf
pop
out
loopne
push
xor
cli
mov
push
jl
scas
push
push
mov
mov
insl
movsl
pop
data16
push
adc
fsubs
pop
daa
jo
jne
and
lret
aaa
push
mov
push
ja
add
iret
rcrb
mov
cs
and
or
add
pop
add
or
pop
xchg
or
addr16
scas
lock
scas
jmp
lods
sbb
ret
and
cmp
or
je
and
lods
out
xor
jno
fwait
jns
cmp
sbb
sub
ror
mov
loop
jge
lsl
scas
aaa
xor
jp
loope
pusha
mov
xor
xchg
out
pop
push
mov
mov
out
xchg
or
lock
or
in
mov
jno
scas
cltd
mov
ss
lahf
jae
stos
cmpsb
inc
enter
push
or
push
cs
pop
insb
mull
push
iret
cltd
jno
push
pop
xorb
lret
sub
mov
out
ret
sub
andb
sbb
shll
fimull
lret
add
nop
inc
lods
mov
daa
jmp
sub
out
lahf
test
xor
xchg
lods
jnp
flds
push
cmc
sub
xchg
mov
imul
repz
mov
mov
xchg
sub
fs
sbb
insb
out
sub
dec
outsl
push
fildll
or
popf
sti
xor
imul
pop
loopne
ljmp
jo
scas
test
and
xor
pushf
fstl
mov
mov
cmp
jmp
shll
lret
and
xor
sti
adc
aam
dec
pusha
inc
push
push
in
inc
insb
jb
pushf
ds
lods
and
cmp
xchg
sub
cmp
ret
xchg
add
dec
push
adc
shlb
push
ja
mov
dec
mov
fcomip
pop
cwtl
pop
outsl
ds
ret
mov
sub
int
sub
repz
jp
icebp
popa
ret
jp
add
and
ret
fcmovnbe
push
in
test
mov
mov
dec
cmpl
hlt
pop
and
jl
out
and
pop
sbb
sub
mov
pop
lret
xchg
sub
mov
jo
cmpsl
push
dec
mov
leave
add
mov
pop
pop
mov
jl
aam
aas
push
xchg
fists
fisubs
sub
push
sub
push
xchg
dec
icebp
stos
lcall
sbb
mov
push
jecxz
ret
in
xlat
and
xor
add
push
jae
aaa
out
mov
bound
dec
jne
sub
jmp
ret
pop
adc
lea
loopne
xor
repz
add
cmp
out
mov
xor
jle
or
jecxz
bound
mul
cmp
add
mov
fs
push
lock
mov
push
call
cwtl
icebp
out
inc
and
mov
or
jbe
aaa
sahf
add
pop
dec
mov
mov
inc
cmpsb
jno
dec
pushf
pusha
adc
push
incb
std
cmpsl
xchg
sub
clc
test
ret
jecxz
inc
das
popf
out
std
sub
pop
sub
push
movsb
dec
lds
cmp
cltd
adc
xchg
adc
jge
lret
xchg
lcall
gs
pop
mov
pop
pop
mov
and
sbb
arpl
pop
rclb
mov
pop
pushf
mov
bound
mov
sbb
xchg
cmpsb
push
loopne
or
cwtl
ret
mov
leave
jnp
mov
push
push
fbstp
roll
bswap
jae
add
pushf
aad
lods
add
inc
and
out
jno
jl
adc
sti
adc
or
adc
sub
mov
leave
or
add
mov
jne
push
push
push
dec
inc
fiadds
rolb
inc
mov
mov
jp
fisttpll
fwait
sbb
fstps
inc
mov
pop
cmpl
push
cltd
out
xor
jge
mov
push
jecxz
cmp
jae
mov
add
pop
sahf
data16
xor
into
push
inc
movsb
fidivl
test
fists
add
mov
movsl
add
out
add
popf
fisttps
insb
mov
repnz
pcmpgtd
stos
jg
push
mov
leave
pushf
jne
and
out
sbb
sub
add
mov
push
rcrb
dec
mov
out
inc
fimuls
cmp
pop
cwtl
ret
sbb
mov
sahf
mov
call
pop
sub
pushf
xlat
push
mov
jg
pop
js
ds
arpl
mov
movsb
aaa
shlb
push
insl
dec
or
and
sbb
jo
cs
adc
sub
xchg
cmp
nop
push
and
push
mov
ret
xchg
mov
push
jb
std
pop
push
mov
pushf
ja
mov
jg
loope
sub
cmpsb
iret
addr16
subl
out
sbb
push
popa
insb
jne
sub
scas
ds
sbb
inc
mov
mov
shl
pop
test
xor
loopne
shrb
stos
inc
and
fists
out
xor
xor
test
cmp
je
cmp
xchg
in
stos
jg
shlb
inc
dec
xchg
mov
dec
neg
pushl
sbb
sub
mov
mov
aam
jae
icebp
xorb
enter
in
ficoml
loopne
in
cwtl
xchg
pusha
pop
jge
stos
push
popf
gs
test
loope
or
dec
negl
jne
je
add
clc
and
jp
xchg
mov
call
dec
into
xor
test
jbe
xchg
dec
and
stc
xchg
popf
rcrl
cmp
xchg
pushf
popf
mov
lcall
test
cmp
test
pop
mov
insl
subb
decb
or
xlat
shrb
pushf
sub
mov
xor
mov
roll
xchg
mov
sub
mov
shll
pusha
pop
mov
mov
ficoms
mov
je
xchg
mov
cmp
dec
ljmp
dec
inc
mov
push
push
jne
icebp
ss
or
pop
hlt
inc
mov
shl
testl
pop
je
sub
mov
imul
sar
jl
cmp
mov
ret
push
faddl
xchg
dec
loopne
outsl
fdivl
cmp
mov
mov
xor
xchg
pop
cmp
scas
inc
and
mov
mov
int
jns
stos
push
nop
jnp
jnp
mov
mov
lods
adc
lods
mov
jne
mov
jmp
imul
mov
jle
add
mov
inc
adcl
bnd
ror
dec
fwait
into
sbb
pop
in
sub
les
sub
jns
add
add
xor
das
push
aad
outsb
xchg
push
fcoms
xchg
push
mov
out
jg
cmp
fdiv
xchg
out
aam
mov
or
xor
mov
imul
or
lret
lea
fbstp
jnp
mov
idiv
pop
adc
arpl
pop
test
pop
dec
xchg
jle
enter
lahf
test
inc
or
mov
or
add
cld
arpl
pushf
scas
mov
insb
sub
push
or
xor
data16
jo
aaa
add
jmp
add
pop
je
fmuls
add
sbb
push
stos
inc
sub
adc
mov
repnz
push
outsl
rcll
inc
sarb
popa
push
mov
loopne
jg
xchg
push
mov
insb
dec
inc
and
add
and
add
movsl
movsl
les
sub
out
jle
inc
out
sbb
add
xchg
push
movb
push
test
mov
repnz
dec
xor
icebp
pop
test
leave
pusha
aam
or
pop
xchg
sbbb
cmp
fs
cmpl
ljmp
fnstsw
cmp
xchg
notl
rolb
xchg
call
mov
sti
mov
popa
cwtl
rcr
xlat
dec
push
xor
sbb
fistpll
add
mov
fdivl
adc
add
and
xlat
inc
rcl
daa
push
stos
pop
pushf
pusha
xchg
mov
xchg
addr16
rcrb
sti
adc
je
cwtl
imul
filds
jecxz
add
mov
inc
aam
je
mov
sub
push
inc
scas
test
fisubs
xchg
and
mov
imul
test
mov
jb
stos
test
in
aas
mov
lods
add
jbe,pt
mov
mov
push
outsl
pop
mov
push
cmc
mov
addr16
xor
lods
jl
fistpl
push
mov
dec
xor
fs
jns
xchg
inc
mov
das
mov
mov
faddp
pop
dec
mov
fcomps
sub
aaa
pop
cmpsl
push
mov
sti
pop
xor
out
data16
xchg
mov
inc
or
imul
inc
movsb
mov
xor
push
int
or
loope
cmp
dec
ret
or
pushf
loope
popf
mov
xchg
xorl
cmp
jge
push
and
push
int
jo
movsb
gs
shr
mov
mov
fidivrl
ficoms
into
pop
jle
xchg
mov
mov
jo
popf
sbb
adc
push
push
pop
jno
push
jmp
jg
ja
push
stos
push
adc
movsl
push
push
dec
inc
cli
sub
jmp
es
adc
mov
idivb
rcl
loopne
shll
int3
movsl
jle
jae
or
mov
sub
andb
in
push
pusha
adc
pop
inc
inc
xchg
mov
xorb
xchg
repz
cs
xchg
sub
fwait
push
sub
xchg
mov
mov
adc
push
pop
adc
lret
jecxz
sbb
and
sbb
adc
test
mov
lock
jecxz
mov
inc
xchg
dec
push
dec
popa
xchg
mov
or
add
or
cmc
xchg
adc
xchg
inc
fstps
idivl
lods
cmp
sti
mov
lods
mov
popf
fstl
xorb
ja
das
lds
negl
int3
lahf
add
cmp
push
mov
repz
jnp
pop
cmpsl
xor
mov
jbe
sbb
in
xchg
and
movsl
pushl
adc
dec
mov
push
mov
cmp
pop
scas
jo
loop
push
inc
in
iret
test
add
xchg
fstps
push
rcr
and
xchg
ficoml
not
add
sti
xchg
pop
loope
dec
pop
push
int
sti
test
pop
or
mov
fcmovbe
adc
pop
inc
inc
mov
dec
mov
into
jno
sbb
int3
ljmp
pop
fstp
loope
cmc
jp
loopne
xchg
popf
dec
or
push
and
std
mov
jbe
bound
adc
cmp
lret
sti
push
mov
sahf
fwait
ror
pop
xor
lcall
jl
push
adc
movb
outsl
pop
insl
xchg
imul
sub
gs
mov
outsb
shr
jge
mov
dec
adc
push
lcall
or
stos
inc
lds
loope
fs
popf
push
fucomip
cmp
mov
loope
jbe
xlat
repnz
cmc
adc
xchg
rolb
xor
loop
dec
jle
lock
pop
daa
rcrl
frstor
hlt
leave
es
pop
cmp
jns
jbe
fwait
xchg
push
adc
cmp
movsb
xlat
xchg
adc
cmp
imul
cmp
pusha
ret
pop
add
mov
insb
sub
push
lcall
adc
test
sbb
inc
lret
cmp
and
dec
ja
loope
cmp
xchg
push
jo
loopne
pop
aaa
mov
dec
lock
pop
sbb
and
scas
xchg
ret
test
sub
or
dec
cmpsl
outsb
inc
addl
xchg
call
aas
test
xlat
sbb
xchg
pop
leave
loop
cmpsb
xor
mov
mov
bound
scas
aas
iret
pop
dec
xchg
iret
xchg
ja
mov
lret
ljmp
jno
loop
int
xabort
jge
jecxz
xorb
shll
out
sub
test
mov
rcll
pop
bnd
pop
repz
ss
push
dec
and
or
push
pop
insl
je
shl
cmc
imul
mov
and
imul
call
xor
jne
pop
aaa
xchg
lcall
cwtl
dec
repz
lods
mov
or
mov
daa
cmp
sbb
int
pop
xor
pop
inc
pop
adc
push
or
inc
dec
xor
cld
sub
in
outsb
inc
sarb
inc
inc
repnz
aas
push
adc
cmp
scas
aaa
in
loope
and
scas
es
into
and
in
call
outsl
adc
pop
fsubs
cs
cwtl
jg
sbb
pop
enter
cmpsl
pusha
loop
pop
xor
ds
and
xchg
imul
and
mov
inc
cmp
in
cmp
pop
data16
pop
lock
jns
pop
sti
dec
fcomps
ljmp
mov
aaa
call
add
lcall
mov
push
jle
shll
lret
inc
rol
fildll
push
js
ret
xchg
imul
shrb
das
in
push
push
jbe
pop
pop
xor
push
in
mov
push
or
mov
loopne
add
push
imul
pop
scas
jns
jge
dec
push
pushf
inc
add
pushf
mull
outsl
sbb
adc
xchg
cmp
pop
fwait
mov
mov
lods
scas
das
scas
xchg
xchg
sub
push
pop
test
or
outsb
shl
jle
mov
mov
dec
xchg
jnp
jnp
mov
inc
add
ficoml
dec
push
stos
repz
pop
out
enter
add
pop
mov
jbe
in
ret
popl
movsb
call
cmp
iret
test
lods
aad
out
and
or
arpl
dec
aam
xchg
mov
int3
mov
scas
xchg
orl
push
test
adc
xchg
xor
ljmp
fisubl
jl
popa
xchg
add
pop
mov
cltd
mov
mov
or
je
pop
aad
push
daa
imul
movsl
pop
or
fsubp
jae
xchg
andb
mov
addr16
xorl
out
mov
cmp
imul
dec
mov
jns
xchg
in
dec
xchg
mov
ljmp
dec
shr
fcompl
xor
sub
lret
mov
sub
fcmovb
mov
dec
call
adc
mov
sbb
and
sbb
out
cltd
shl
aad
jecxz
repz
ss
xlat
aam
dec
xor
mov
aad
push
icebp
inc
ret
clc
scas
fwait
mov
in
rol
ficoml
push
shrl
mov
pop
in
push
xor
lret
adc
inc
cmp
or
push
adc
movsb
std
jb
inc
and
cmp
jae
into
sbb
push
mov
push
cltd
xor
les
push
mov
mov
pusha
and
dec
cmp
loope
and
incb
push
pop
cmp
scas
xor
mov
adc
xchg
adc
lds
dec
cltd
pop
jmp
popa
jmp
dec
in
das
cwtl
mov
xchg
xchg
sbb
jp
into
std
xor
mov
jle
mov
stc
ret
icebp
rorl
test
rclb
inc
add
pop
xorl
in
stos
or
jne
sti
xor
jae
push
fsubl
test
cmc
fsts
sub
add
dec
out
pop
add
out
mov
mov
stos
pop
subb
mov
mov
jl
xlat
sarb
jae
mov
sarb
pop
clc
filds
rcll
sbb
dec
sub
inc
mov
dec
push
out
adc
imul
xor
or
push
jae
add
in
mov
fbld
ret
arpl
mov
pop
and
loopne
dec
jbe
push
pcmpeqw
and
mov
int
mov
js
shrl
xchg
enter
or
std
mov
push
mov
dec
out
bnd
sbb
mov
sub
dec
test
sti
inc
mov
mov
popa
fcoml
lds
mov
outsl
fwait
jl
cld
pop
sbb
add
xchg
push
jo
outsl
xor
or
inc
cmp
fldl
stos
mov
insl
fsubr
push
dec
and
je
push
ret
fdivp
sub
mov
or
jp
repnz
cmpl
inc
mov
cmpsl
out
mov
adc
add
lods
test
push
xor
test
mov
mov
mov
lret
adc
out
push
into
rcll
xor
outsb
stc
arpl
cld
lods
aaa
loope
popf
addr16
inc
into
or
push
ret
sbb
insl
mulb
pop
jle
inc
inc
mov
xor
ret
loop
sbb
adc
add
dec
cli
xor
insb
out
stc
pop
mov
mov
jg
adc
cmp
in
in
push
inc
in
icebp
adc
mov
fistl
jnp
xor
lods
aaa
movsl
mov
push
gs
test
arpl
popa
movsb
gs
mov
jl
mov
dec
repnz
mov
dec
stos
jmp
stos
push
cmpl
inc
lds
movsb
push
das
inc
ficompl
or
sub
mov
fdivr
jg
fwait
mov
mov
sub
je
push
loop
hlt
outsb
sub
clc
add
dec
ja
and
or
sbb
xchg
adc
and
int
std
xchg
add
add
adc
jecxz
cwtl
mov
pop
pop
cmpsl
lods
stc
adc
repnz
insb
js
mov
push
fstpt
je
and
cltd
jnp
or
jmp
sbb
push
jmp
dec
enter
jl
int
stc
jp
xor
and
mov
push
fildll
orl
scas
and
fs
mov
mov
pop
sbb
xor
push
fnsave
stos
xchg
mov
stc
mov
push
jno
mov
jg
lret
jge
daa
adc
rcrl
shl
xchg
out
cmp
fldl
sar
cmp
cmp
cmc
push
and
loope
idivl
std
addr16
bound
inc
jp
and
xchg
pop
or
lea
mov
lcall
arpl
xor
pushf
adc
jecxz
jge
stc
jmp
cmp
les
or
lcall
mov
repz
insb
lock
xchg
repnz
sub
sbb
jnp
test
loope
push
ljmp
cmp
je
cmp
stos
adc
loop
add
cmpsb
jo
fsubs
test
popl
stos
fimuls
cmp
aaa
popf
jo
je
jl
inc
cltd
inc
jo
adc
negb
xchg
stos
cmp
dec
add
dec
cld
ret
xor
mov
jge
or
mov
stos
icebp
jge
jp
test
sub
mov
sub
adc
jno
cmpsl
xchg
das
mov
xchg
push
daa
or
mov
sub
pop
fstl
int3
in
inc
cmpsl
aad
add
leave
xchg
movsb
add
add
add
pop
fiaddl
aaa
sbb
pop
out
call
stos
lea
add
mov
ret
cmp
pop
das
ss
inc
rcr
rcll
insl
add
pop
jp
sub
test
cs
divb
cmc
test
add
imul
ss
xchg
aaa
out
imul
add
mov
mov
or
jae
popf
dec
loope
dec
enter
repnz
or
add
pop
push
xchg
ds
add
jne
in
mov
adc
adcb
dec
pop
dec
jmp
push
cmp
andb
adc
or
mov
ret
mov
pop
xchg
pop
jno
sbb
les
loope
aam
les
dec
push
mov
jg
push
imul
ljmp
outsl
mov
jbe
movsb
inc
add
add
subl
mov
adc
cmc
or
push
dec
or
jb
pop
and
mov
mov
daa
lret
xchg
push
in
lahf
pushf
mov
push
jb
adc
jbe
mov
and
jp
sarb
xchg
push
sarb
jb
cltd
movsl
push
in
mov
cmp
push
pop
lcall
call
lret
icebp
loope
sbb
adc
rcrl
xor
mov
into
mov
push
mov
dec
call
push
jmp
dec
fcomps
in
je
pop
xchg
xchg
add
xor
notl
movl
mov
add
aaa
mov
aas
pop
mov
xor
jb
jno
and
bound
pop
xor
push
ds
test
fwait
test
rcr
cli
stos
aad
jne
dec
xchg
push
jb
lods
aaa
adc
jno
shr
test
xchg
push
push
mov
and
mov
pop
add
loopne
lock
push
mov
ds
roll
arpl
or
mov
filds
mov
add
mov
popf
sahf
mov
pop
and
dec
push
repz
data16
xor
xchg
pop
xor
and
jmp
sbb
gs
pop
inc
sbb
push
out
mov
mov
mov
out
mov
mov
xor
roll
or
hlt
mov
inc
pop
push
ljmp
jp
mov
adc
mov
add
mov
mov
addr16
inc
cmp
sbb
or
cld
scas
dec
mov
inc
stos
push
sti
xchg
inc
add
sahf
loope
inc
mov
and
loope
mov
mov
jno
push
sub
add
cmp
lret
mov
lret
ror
mov
sbb
mov
iret
jae
push
sbb
xchg
je
and
jg
and
in
out
lcall
push
shrb
mov
dec
and
fmul
add
out
add
jge
mov
les
je
adc
or
aaa
mov
out
lock
mov
adc
jl
je
inc
pop
push
sarb
out
pop
enter
clc
arpl
cmp
inc
jno
repz
and
xchg
add
inc
or
mov
aas
out
sbb
les
xchg
dec
add
out
pop
push
jns
mov
aaa
icebp
jmp
xor
add
in
push
outsl
pop
loopne
xchg
fildl
xchg
jns
push
scas
mov
pop
xchg
push
fs
jno
decb
leave
gs
ret
inc
pusha
mov
or
sti
and
add
loop
xor
sub
pop
pop
pop
mov
scas
repnz
call
xchg
movl
andl
out
jbe
test
sbb
insb
sbb
pop
mov
add
pop
ljmp
push
adc
dec
pop
xor
shlb
xchg
dec
mov
inc
insl
sbb
in
cwtl
pop
jo
mov
fnstenv
push
cmp
mov
lret
sub
xor
mov
push
jno
sarl
sub
mov
pop
scas
sub
dec
aad
xchg
js
mov
cmp
sub
sarl
pop
adc
nop
or
scas
jae
dec
sbbb
mov
mov
aas
jmp
cltd
scas
shr
aam
jns
icebp
sub
jle
rorl
xlat
jno
iret
out
lahf
sub
push
ss
pop
jmp
out
xchg
cmp
pop
movsb
rcll
lret
fs
pushl
push
flds
pop
sbb
icebp
xor
dec
insb
xchg
mov
iret
jae
out
sub
dec
sub
ds
sbb
imul
test
and
push
aad
lret
addb
clc
add
loop
or
sbb
add
movsb
pop
pusha
push
adc
sarl
in
gs
dec
and
mov
push
in
xchg
negl
dec
xchg
push
loop
sti
shrl
addr16
icebp
push
lock
dec
pop
loopne
pop
call
sahf
int
inc
xchg
add
icebp
mov
adc
sbb
aam
das
dec
xchg
mov
xlat
jmp
popf
xor
movsb
insl
loope
movsb
es
into
movsl
inc
sbb
rcl
aas
je
test
jle
subl
popf
fwait
repnz
pop
push
loope
mov
pop
inc
popf
ja
in
popf
cmpsb
xchg
jne
xor
insl
fisttps
fcomps
faddl
or
mov
jae
adc
xor
mov
sub
es
fs
cmc
mov
and
jb
subb
daa
sub
push
adc
test
in
pop
nop
frstor
and
es
cmp
in
scas
mov
mov
fsts
pop
addr16
ja
loopne
dec
aad
addb
sbb
repnz
sbb
in
push
lea
push
xlat
iret
fsubr
test
or
or
fimull
out
sbb
movsl
mov
dec
ja
aam
lods
lret
inc
jo
cmp
push
sti
mov
mov
and
and
pop
test
sbb
icebp
lods
adc
sub
mov
or
add
inc
xchg
int
rcrl
inc
in
cmp
mov
arpl
inc
decb
mov
cld
shrl
pop
and
xor
pop
jne
xchg
add
or
fwait
jl
inc
add
movb
popa
or
clc
xchg
or
inc
mov
hlt
mov
ja
hlt
sub
sub
mov
in
jns
pop
mov
lret
mov
pop
das
popf
popl
push
repz
scas
xchg
xlat
lahf
mov
adc
insb
jns
and
pop
insb
mov
jb
lret
enter
push
pop
jno
inc
je
lret
std
cwtl
pop
nop
jmp
pop
pop
int3
ljmp
cmp
adc
jl
ret
push
xchg
cmp
jbe
sub
dec
ja
lods
icebp
iret
add
popa
jmp
mov
pop
aas
rcrb
add
and
pop
pop
add
xor
lcall
mov
jo
mov
ljmp
inc
clc
adc
jns
in
and
es
fdivrs
mov
lea
loope
sti
adc
lods
adc
mov
rorl
add
jns
hlt
add
mov
add
add
hlt
arpl
sbb
pop
jae
loopne
movb
scas
lea
cltd
stos
mov
xor
xor
notb
stos
cs
lods
mov
and
cmpsb
pop
and
popl
fmulp
mov
push
sub
inc
test
xchg
mov
call
jecxz
inc
mov
mov
inc
cmp
daa
jbe
or
jmp
xchg
sbb
scas
popa
adc
and
push
pop
out
mov
fadds
or
jmp
or
in
into
loop
mov
stos
in
or
mov
in
andl
mov
leave
cmp
jno
mov
stc
popa
mov
test
pop
dec
dec
jmp
mov
push
les
lret
cmc
aaa
test
rcrl
orb
cmp
and
loope
hlt
in
push
shl
fsubrs
into
and
test
jb
call
or
fsubp
dec
mov
rorb
jge
sub
inc
cmpsb
sarb
in
fs
cmp
xchg
test
nop
push
cmp
iret
fs
push
fimull
mov
icebp
scas
dec
in
and
mov
aaa
outsl
pop
jmp
cmpb
jl
push
inc
lret
push
sbb
mov
fisubs
push
out
dec
cmpsb
jmp
mov
sub
or
sub
cmpsl
sbb
sbb
int
push
mov
sbb
test
or
rclb
les
jne
shll
xor
arpl
icebp
xlat
test
cmp
dec
push
in
int
push
cld
cld
incl
xor
mov
xchg
out
hlt
cmpl
mov
loop
ss
lcall
mov
sbb
loopne
orl
mov
mov
jns
imull
fdivl
mov
mov
stos
cmpsl
sub
bound
sbb
cmp
bsf
mov
add
jmp
pop
mov
stos
scas
out
and
mov
or
leave
mov
in
adc
subb
es
test
pop
sbb
orb
fsubp
fucom
sbb
push
das
cwtl
jle
pop
cmp
mov
stos
push
imul
aas
jae
aas
mov
daa
jne
sub
jbe
sbb
es
lret
clc
xchg
pop
xchg
shll
jbe
pop
push
mov
jp
orl
popf
lods
sbb
daa
andb
push
rolb
add
ss
mov
xlat
cmp
movb
or
lret
inc
xchg
scas
cmpsl
jne
fwait
add
loop
iret
shrb
lea
jb
ret
mov
pop
int
mov
gs
scas
inc
push
mov
jo
push
nop
cmp
fimull
ret
jbe
xchg
push
aaa
aad
aam
outsb
and
movsb
rcl
xor
sbb
jge
add
je
xchg
ljmp
filds
aaa
mov
sahf
or
jg
roll
pop
outsb
jo
xlat
jmp
insb
inc
mov
adc
lods
loop
jne
les
enter
pop
and
arpl
cmovs
cmp
sarl
add
push
ret
mov
leave
clc
scas
fbld
push
add
or
insl
adc
jp
xor
aas
dec
jb
insl
inc
lods
ljmp
sahf
xor
cli
bound
pop
mov
mov
aaa
adc
repnz
pop
jmp
shrb
sub
and
aad
xchg
lds
int3
out
shl
rorb
push
loopne
push
mov
mov
cmp
mov
jo
adc
repnz
pop
adc
mov
jecxz
add
mov
sbb
aam
fs
sbb
mov
mov
popf
pushf
fistps
pop
and
sub
insb
sbb
xchg
stc
inc
mov
rcll
push
jp
out
push
cmp
mov
sub
push
mov
pop
push
ds
fiaddl
mov
xor
cwtl
jae
mov
test
rcl
fwait
or
aaa
pop
cmp
enter
xlat
xchg
jecxz
les
dec
dec
sbb
add
ds
into
lret
jae
movsb
jge
scas
xor
jns
cmpsl
lahf
scas
xchg
pushf
cmpsl
out
pop
popa
scas
pop
pop
stos
sbb
cs
and
xchg
in
xor
sub
jecxz
xchg
test
out
shlb
lcall
clc
cli
icebp
out
movsl
push
outsl
adc
sub
test
xchg
nop
rcrb
faddl
mov
jg
andl
and
outsl
aaa
push
mov
cmp
or
fidivs
push
adc
push
xchg
adc
pop
adc
insb
mov
aas
inc
cmp
int
mov
out
hlt
mov
repnz
inc
sti
push
cmp
xor
jmp
inc
out
addr16
sti
int3
clc
aam
cmp
push
or
dec
push
popl
cmp
sbb
mov
xor
xorl
repnz
or
dec
pushf
mov
or
test
int
stos
jle
push
add
in
mov
ficompl
out
pop
jae
sub
sub
fsubs
loopne
mov
filds
cld
lcall
stos
ret
xor
sub
xor
push
mov
arpl
loopne
ficompl
lods
bound
cwtl
pop
lds
xor
xor
aas
mov
xchg
jne
jno
stos
das
nop
into
cmp
or
outsl
jg
clc
xlat
mov
and
sti
testl
jle
jle
or
or
in
cmp
and
andb
mov
and
pminub
jo
dec
add
xor
adc
xchg
loopne
sub
test
jge
sarl
stc
dec
mov
into
aaa
mov
sbb
mov
mov
push
out
inc
cmp
imul
lea
xchg
push
adc
imul
lock
insb
incb
push
jb
pop
mov
sub
pop
ds
outsl
mov
mov
inc
push
or
imul
push
enter
mov
sub
addr16
aas
sub
xchg
add
mov
mov
pop
out
push
mov
mov
mov
outsb
test
hlt
sbb
lods
mov
movsl
sub
pop
shrl
mov
cmp
and
cmpsb
xor
sbb
and
mov
jb
stc
fwait
xchg
ret
mov
fildl
arpl
inc
dec
lock
mov
inc
mov
in
jle
mov
fs
cld
pusha
rcll
jno
fdivs
in
cmpsb
cltd
cmp
dec
pop
arpl
cmp
daa
sbb
outsl
lds
dec
jae
jmp
fwait
adc
nop
pushf
inc
mov
pop
cmp
ja
adc
adc
repz
add
subb
xor
adc
jbe
jne
mulb
sub
lea
aad
adc
adc
dec
mov
aam
adc
fiaddl
ja
subb
mov
inc
fstpl
in
mov
and
fdiv
lea
pop
add
xchg
jle
adc
loop
mov
cli
or
scas
xor
imul
or
imul
fimuls
popl
lret
sahf
push
adc
outsl
sarb
adc
dec
cmp
les
lods
cmp
sbb
test
leave
push
sbb
int3
dec
imul
cmpsb
pop
icebp
jb
sti
mov
pop
fbld
xchg
fimull
cs
stos
push
sub
jl
outsl
sarl
push
push
out
mov
dec
pop
lods
ficompl
lock
bound
cmp
dec
stc
mov
sbb
jecxz
cmovne
or
sahf
sub
xchg
iret
mov
jns
sub
cld
mov
stos
or
mov
push
popa
aas
xchg
and
inc
mov
adc
lds
test
mov
pop
push
add
stos
clc
sbb
jl
rorb
adc
jae
ret
or
pop
ret
or
xchg
jl
fdiv
lods
xchg
pusha
xchg
mov
int3
rclb
pusha
dec
arpl
mov
mov
or
jg
popfw
mov
test
jmp
xchg
push
lcall
xor
inc
pop
add
or
add
dec
pop
sub
xor
add
sarl
bound
lods
xor
mov
insb
mov
pop
ja
scas
xchg
or
mov
pop
and
sahf
mov
jecxz
jbe
pop
in
xchg
inc
xchg
mov
jmp
in
sbb
jg
or
dec
xor
scas
iret
movb
popf
imull
add
jb
xchg
lods
cltd
adc
aaa
stos
adc
inc
shlb
add
xchg
xor
xchg
stc
jp
xor
or
out
outsl
cmpsl
loop
or
popa
stos
fbld
lret
jge
xor
sbb
push
xchg
pushf
push
pusha
mov
xchg
mov
cltd
sub
in
lar
push
push
xchg
in
into
or
outsb
jecxz
xchg
rorb
mov
push
rcl
int3
test
jl
in
notb
xchg
sbb
int
mov
loopne
jl
fnstsw
outsl
mov
mov
mov
inc
add
mov
je
fstl
lahf
je
pop
insb
lret
push
fildl
cmpsb
add
ss
std
xchg
dec
pop
hlt
scas
mov
lds
cmpsb
les
les
lds
leave
int3
out
xor
aas
cmp
push
cmpsb
es
push
xchg
xor
or
es
mov
push
int
rcll
xchg
jle
add
mov
jp
dec
addb
stc
rol
rolb
scas
es
sub
loope
dec
or
cmpsb
lods
adc
adc
mov
and
movsb
int3
ficoml
cmpsb
lret
gs
cmc
aam
enter
rcll
sbb
call
pop
xchg
out
sti
rcll
cmpsb
roll
xor
xorl
add
add
mov
cs
loopne
dec
add
add
fcoms
pop
out
jmp
push
push
pminub
inc
enter
cmp
sub
inc
outsl
mov
minps
inc
mov
xchg
pusha
sub
sub
mov
pop
push
lcall
stc
pop
test
flds
sub
ja
pop
dec
mov
jns
inc
cmp
fcompl
lret
rolb
mov
lret
shl
xchg
cmp
sti
push
sub
iret
jmp
push
adc
vpaddsb
mov
cmp
lods
jb
sbbl
adc
xchg
push
dec
ds
cmp
jnp
add
push
lock
mov
decb
insb
ficoml
shll
vpunpckhdq
je
and
xor
mov
add
mov
in
scas
or
dec
insb
ror
inc
daa
pop
jmp
imul
add
jns
adc
sahf
jecxz
stc
sub
enter
cs
shl
dec
fsubrs
or
cmp
ret
fisubrs
mul
scas
mov
outsl
data16
mov
xor
xchg
xchg
mov
inc
jg
add
ffree
sub
daa
mov
sbb
push
sbb
fsubrs
add
push
movsb
xorb
inc
jno
cltd
pushf
jnp
and
pop
test
xor
int3
cmpsb
xor
jge
push
test
fs
jge
mov
and
xchg
incl
and
dec
aad
into
xor
mov
add
out
jno
rsqrtps
dec
cs
fldl
cmp
mov
pushf
sub
pushl
and
sub
das
imul
adc
and
mov
jmp
mov
js
neg
and
popf
lret
push
dec
cmp
and
rol
mov
popf
or
repz
cmp
xlat
mov
and
movsl
popa
and
std
mov
fwait
jne
xlat
lods
mov
jne
loopne
push
inc
popf
and
xlat
xor
sub
fsts
ret
xchg
fwait
add
fiaddl
xchg
hlt
nop
mov
int
jge
lock
aas
fmull
xchg
xchg
xor
in
out
xor
dec
push
xor
in
mov
sti
adc
lods
mov
add
es
out
jo
jle
mov
inc
js
inc
mov
inc
jns
inc
in
movb
es
push
xchg
stc
subb
dec
pop
mov
and
pop
lahf
xor
adc
pop
sti
es
jmp
lea
fdivp
test
adc
xchg
ss
fcmovu
jge
jmp
outsb
and
aas
xchg
and
or
xchg
inc
test
mov
xor
pop
and
lea
movsb
mov
mov
mov
fwait
mov
iret
mov
lods
and
in
sbb
cld
xlat
je
xor
mov
mov
or
repnz
mov
mov
arpl
ds
mov
sbb
pusha
bound
popf
shlb
add
adc
mull
push
cmp
lods
and
mov
loopne
lcall
jmp
pop
push
push
lahf
mov
int3
add
les
inc
aas
aam
add
fisttpll
dec
adc
xor
into
mov
popf
fisubl
imull
mov
popa
push
xor
aam
jo
ds
mov
inc
aas
add
push
jge
es
ljmp
movsl
and
add
mov
mov
rcrl
in
cld
leave
jo
cmc
push
ret
fidivrs
lock
cli
jns
add
add
sbb
ljmp
int
cmpsl
cmp
xchg
aad
ja
inc
lock
scas
mov
sbb
into
mov
xchg
lds
je
pop
stos
pop
mov
and
sub
and
sbb
push
stos
push
test
ret
shr
and
sbb
jle
dec
cwtl
sahf
fistpl
xor
out
dec
dec
je
loope
popf
pop
xchg
cld
aad
sub
fidivs
loopne
xor
es
mov
lahf
mov
mov
inc
and
and
hlt
enter
fisubrs
xchg
pushf
lock
adc
mov
out
pop
stc
mov
lods
fists
adc
fcmovnbe
sbb
mov
popf
add
push
jae
mov
cwtl
fwait
add
test
or
std
loop
lret
push
push
cmpsl
mov
xchg
push
stos
pop
dec
out
aad
pop
rolb
inc
adc
xchg
std
push
pushf
inc
jle
sbb
inc
je
jecxz
jmp
mov
pop
pop
dec
mov
cmc
insl
aaa
inc
aam
lods
arpl
xor
lcall
in
or
fs
sbb
dec
mov
jp
mov
std
and
add
rcll
cltd
ret
or
mov
shll
cmpsl
cmp
lret
jno
sarb
je
lsl
and
mov
ss
pop
xor
enter
mov
lea
add
lret
cwtl
mov
lahf
adc
jb
adc
es
mov
ret
das
jne
fdivr
dec
lcall
mov
mov
and
add
mov
pusha
jns
mov
jb
ret
pop
pop
cwtl
std
pushf
cmp
inc
inc
lods
xchg
sub
push
adc
out
stc
pop
sub
incl
add
mov
pop
jae
ja
notl
ret
jbe
push
jbe
jo
stos
orb
loop
and
test
inc
jbe
inc
clc
cmp
sub
pop
mov
and
inc
outsl
dec
and
cli
jnp
add
pop
cltd
sarl
pop
leave
inc
fdivs
push
cmp
mov
aas
fldcw
and
xchg
testb
fs
jo
inc
jnp
std
fsubrs
or
inc
shll
movsb
fstps
fiaddl
incl
lods
rcrl
add
and
lods
mov
sbb
mov
push
pop
push
pop
push
jne
adcl
cs
or
push
das
cmp
dec
mov
mov
xchg
sbb
or
jle
cmp
xor
mov
js
pop
mov
out
fcmovu
scas
out
dec
inc
sti
je
push
out
aam
ja
sbb
xor
addr16
sar
out
and
mov
jne
inc
fs
outsl
mov
mov
rcrl
incb
pop
cmpsb
stos
test
cmc
ret
addr16
xor
xor
mov
dec
push
add
dec
pop
faddl
insb
pop
imul
inc
cmp
jp
jne
lret
pop
jmp
subb
sbbl
mov
add
add
rcl
push
and
int
dec
das
jne
inc
sub
dec
adc
rcrl
dec
push
xchg
aaa
inc
sub
cmc
fucomp
clc
mov
push
jl
andb
mov
mov
lods
insb
cld
or
data16
icebp
dec
jg
imul
pushf
test
mov
pop
xchg
or
popa
cmp
nop
insl
in
dec
rcrl
mov
sub
in
mov
xchg
xor
out
cmpsb
push
mov
arpl
ss
sub
xlat
pop
mov
push
cmpsb
je
or
imul
or
add
jb
pop
popa
cmpsb
xchg
lods
add
mov
xor
shlb
dec
outsb
adc
dec
iret
adc
mov
lret
cmovbe
imul
fs
insl
jl
sahf
lock
or
sbb
scas
xor
jne
adc
pushf
cmpsl
xchg
or
test
sbb
cli
addr16
stc
or
dec
dec
aaa
mov
das
mov
mov
mov
cmpsb
out
popf
add
and
mull
imul
int3
lret
fld
xchg
icebp
cli
stos
cmp
mov
add
pop
pop
pop
inc
pop
daa
negl
scas
and
sbb
push
popa
xor
sub
scas
mov
inc
pop
xchg
dec
loop
push
xchg
pop
decl
add
cmpsb
cmp
arpl
xor
or
jns
insb
ret
repz
push
jle
popa
mov
aaa
scas
xorb
inc
movsl
dec
mov
ret
fwait
inc
xor
es
test
xorb
mov
aam
fs
or
int3
lods
mov
push
jg
int
fs
jmp
filds
nop
bound
mov
mov
shlb
decl
loopne
xor
leave
stc
jns
rorb
cmp
jecxz
mov
cmpsl
sahf
rorl
mov
cmp
inc
cmpl
or
leave
mov
es
jbe
movsb
xchg
dec
addr16
pop
aaa
push
jae
mov
push
jne
repz
sti
js
xor
add
movl
add
adc
sub
cld
aas
cmp
push
mov
mov
and
pop
adc
lods
xchg
adc
in
aam
xchg
xchg
or
mov
mov
or
outsb
dec
sbb
add
add
jns
fwait
push
and
jne
mov
inc
je
inc
mov
sbbl
push
mov
into
jecxz
mov
imul
cmp
xlat
sub
sbb
jmp
je
adc
je
mov
cmp
mov
int3
into
pop
dec
xorb
xchg
aas
imul
push
std
fsubs
gs
jo
jmp
test
push
push
mov
and
sub
xchg
and
popa
adc
pushf
push
pop
lret
lods
out
mov
sti
scas
je
or
out
adc
cmp
test
or
add
mov
add
jne
add
int3
movsl
add
imul
inc
add
mov
or
les
push
lods
mov
sub
fnsave
je
mov
push
inc
orl
hlt
inc
xchg
clc
cli
pop
sarl
mov
fstps
stos
sti
cmp
push
cmp
outsl
pop
vmread
enter
mov
pop
push
pop
inc
insl
xadd
sub
jl
xchg
xchg
push
and
es
xor
scas
in
out
adcb
mov
and
fbld
daa
cmc
sbb
add
test
ficoml
js
xor
fs
and
data16
push
pop
out
sahf
imul
mov
int
rolb
inc
insb
sub
jmp
outsl
inc
inc
mov
adc
and
inc
inc
pop
and
loopne
mov
ret
inc
in
outsl
int3
enter
cmp
push
pop
mov
fwait
mov
orl
push
jmp
mov
mov
xchg
call
add
cmp
cwtl
cmp
mov
arpl
js
inc
ret
rorl
and
sub
push
mov
adc
repz
or
stos
mov
xchg
jnp
test
pop
mov
lcall
mov
pop
ja
dec
stos
add
cli
add
cmp
push
pop
pushf
push
or
shlb
dec
xor
bnd
movsl
jno
fcmovne
incb
in
xor
fnstsw
inc
pop
es
dec
stos
dec
xlat
mov
xor
adc
mov
popa
and
rcl
lock
sub
call
frstor
movlhps
aas
sbb
insl
dec
call
dec
cli
mov
mov
or
lods
int
adc
jg
xchg
cmp
test
add
lahf
xor
mov
test
aad
jae
fcompl
jns
cwtl
sbb
dec
sub
cmp
jnp
adc
imul
or
mov
sbb
sub
cmp
jle
repnz
mov
movsb
pop
cmp
sub
or
mov
jp
js
cltd
or
repnz
mov
imul
lcall
loop
xor
mov
in
aas
xchg
jbe
jns
pushf
xchg
dec
xchg
sub
mov
pop
adc
sbb
lds
subl
mov
pop
test
and
stos
or
test
jae
mov
rcll
pushl
push
sarl
cs
pop
testl
push
shl
aaa
ss
jecxz
repz
in
loopne
ds
andb
push
push
sub
cs
outsl
pop
push
xchg
mov
add
inc
pop
ret
add
fisttpll
sub
mov
mov
xor
faddl
ret
or
xor
pushf
inc
cmp
pop
dec
iret
sbb
in
pop
push
push
sub
scas
pusha
pop
out
das
adc
out
sahf
loop
and
and
ficoml
lock
jnp
lahf
push
xor
xchg
mov
mov
and
popf
ljmp
push
xorl
imul
std
shll
sbb
int3
add
cmpl
xchg
daa
and
shll
jp
pop
mov
int
test
shr
and
loop
jg
outsl
adc
enter
ss
test
lret
cmpl
pop
in
sti
lds
loope
xor
arpl
push
je
enter
fs
mov
push
lret
push
jno
cltd
not
dec
mov
out
flds
in
sbb
jb
aad
jmp
push
cmp
fnstenv
jns
ffreep
xor
fcmovnbe
mov
orb
insl
and
or
mov
nop
cmp
xchg
jo
dec
les
xchg
dec
cmpsb
mov
add
mov
inc
insb
jo
repnz
loope
std
and
sub
add
cmp
jb
lods
pop
lret
add
inc
bnd
fidivs
jle
adc
ja
cmp
jecxz
lcall
sbb
dec
pop
out
sbb
dec
mov
jg
mov
inc
inc
daa
pop
jp
int3
mov
sbb
sbb
outsl
sub
orl
sbb
nop
pop
out
adc
sub
jecxz
enter
mov
mov
jmp
add
stos
stc
xchg
sar
mov
and
fst
inc
dec
cltd
mov
orl
addl
fsubrs
fs
ljmp
inc
inc
lret
sub
pop
daa
in
xchg
jnp
inc
fiaddl
inc
cmpsb
pop
sbb
and
mov
push
xchg
adc
ds
pop
ljmp
xor
in
and
repnz
aas
push
pop
sbb
enter
xor
fbstp
mov
sbb
push
js
nop
xchg
arpl
mov
pop
ret
mov
mov
push
pusha
mov
loope
xchg
fistps
mov
or
insl
pushf
inc
cmp
pusha
adc
rolb
es
repz
pusha
outsb
mov
dec
movsl
testb
clc
aam
cs
jno
ds
mov
or
in
repz
scas
das
jmp
xchg
add
xor
or
stc
scas
int3
repz
ja
cmpsb
adc
or
lret
lock
push
std
mov
or
repz
fdivrs
ljmp
xchg
pop
test
fstpt
sbb
cmp
xchg
fldt
sub
data16
cmp
loop
sarb
sbb
jl
add
pop
in
imul
loope
out
movsl
sbb
lds
ljmp
out
cmp
popf
push
cmp
or
sub
out
xchg
rorl
push
pop
or
in
mov
out
arpl
cld
push
outsb
or
jecxz
fcmove
dec
add
push
test
xchg
pop
lea
jae
dec
inc
adc
pusha
cmpb
call
roll
ss
xchg
inc
bound
xchg
orb
rorb
xchg
int
nop
insl
lods
imul
enter
pushf
data16
push
dec
xchg
sahf
pop
int
sbb
psubb
clc
or
cs
pop
outsl
das
xchg
loope
call
mov
inc
inc
sub
add
xchg
pop
insl
arpl
push
sbb
in
push
inc
sub
loope
jge
mov
adc
imul
imul
sbb
insl
dec
aaa
jb
jmp
ja
sarb
aas
testl
dec
adc
into
fisubrs
decb
rcll
inc
xor
repnz
xchg
jge
jns
stc
cs
ja
mov
stc
je
xchg
cmp
es
insl
inc
movsb
pushf
inc
pop
inc
dec
dec
ss
xchg
add
push
lret
and
out
mov
lcall
int
mov
out
insb
cmp
pop
insb
dec
in
xchg
neg
sub
pmaxub
inc
gs
xchg
out
xor
outsl
arpl
ror
incb
into
test
and
xchg
out
in
clc
into
fisubrs
in
arpl
pop
dec
jo
rclb
adc
andl
jo
addb
dec
push
out
mov
mov
push
ljmp
jno
and
push
in
adc
orl
add
inc
mov
mov
push
push
inc
scas
cmp
xchg
pop
daa
scas
and
push
sub
shrl
sub
mov
xor
add
jno
int3
enter
dec
pusha
imul
mov
imul
jne
pop
test
sub
loop
inc
pop
add
jge
bound
je
push
ja
test
test
pop
outsb
test
or
lret
mov
adc
fistl
mov
mov
xchg
lcall
push
jae
sbb
push
fisubl
fdivl
imull
add
cs
pop
pop
xor
rclb
adc
jno
iret
mov
shrl
mov
xchg
sub
mov
push
test
imul
xchg
out
mov
push
xchg
adc
adc
and
push
repnz
push
sbb
pop
shlb
xchg
sub
inc
pop
cmpsl
sub
addl
mov
jb
add
std
je
adc
scas
cmp
aaa
mov
fcoms
imull
aaa
xchg
andl
xlat
test
out
ret
fnstcw
aam
cmp
and
and
pmulhw
and
sub
sbb
repz
pxor
and
jp
test
mov
push
jmp
cmpsb
lret
xor
mov
cli
fistpl
es
enter
mov
sbb
es
mov
or
adc
jmp
subb
stos
lods
cmp
fnsave
repnz
fsubr
xchg
insl
xchg
jecxz
jp
adc
fstpl
or
fsub
pushf
inc
out
fldt
lret
and
hlt
sub
push
sub
mov
and
adc
cld
dec
jo
and
out
jg
or
fucomp
add
push
and
scas
fsub
dec
inc
mov
push
enter
iret
lahf
mov
cmp
scas
popf
fadds
ja
pusha
movsl
add
aad
sarb
ja
and
sbb
cmpsl
xor
lcall
sub
xchg
popf
shl
fucomi
inc
sbbb
adc
faddl
clc
push
add
notb
xchg
cmp
aas
xchg
mov
sahf
sub
aad
es
pusha
cmp
cmp
sub
mov
in
push
push
enter
sub
lods
sti
mov
es
xor
jnp
lret
movsb
outsb
fs
iret
dec
jns
add
popa
icebp
imul
mov
jo
push
pop
jb
int3
push
or
push
inc
in
fmul
pop
cmpsb
xchg
data16
lods
push
mov
nop
mov
repz
sbb
sub
sub
fisttps
pop
loop
dec
clc
or
movsl
sub
rorl
mov
xchg
stc
mov
lcall
sub
sub
inc
dec
scas
pop
loop
std
clc
lcall
sub
jl
push
movsl
daa
or
or
sar
fstpl
cmpsb
mov
lret
gs
or
pop
jo
jno
sti
loope
test
dec
jmp
sub
or
in
pop
adc
inc
fisubrl
jne
movsl
fdivs
jge
xor
or
pop
push
fwait
rcr
outsb
mov
cwtl
fisttps
lss
jg
pop
jno
test
je
cli
xchg
or
fnstcw
push
xor
cmpsl
icebp
jmp
adc
std
jp
push
mov
fcoml
jno
mov
enter
lods
out
jl
andl
pop
adc
ficoms
cmc
and
push
dec
xchg
sub
mov
in
xor
or
shrb
jns
ljmp
cvtps2pi
aaa
int
xchg
and
sub
ret
lea
pop
daa
mov
lds
cmp
sahf
sahf
xchg
lods
and
lea
fwait
outsb
insb
inc
xor
sahf
pop
xlat
ficompl
pop
pop
adcl
inc
adc
shlb
cmp
mov
push
pushf
cmp
mov
ljmp
fsubs
ret
cld
and
or
push
pop
xor
mov
daa
mov
mov
push
cwtl
subl
fwait
xchg
inc
fs
xchg
gs
and
repnz
aas
mov
cmp
cltd
int3
mov
pop
add
pop
xchg
inc
jp
inc
or
repz
cmp
popf
sub
int
js
aaa
adc
mov
lret
outsl
push
pop
lea
and
pushf
cltd
jno
xor
fcoml
call
mov
xlat
out
cmp
xor
push
arpl
lock
pusha
popf
mov
cs
repz
sar
pop
or
xchg
pop
dec
jne
imul
or
ja
jns
stos
jmp
es
repnz
lock
mov
mov
xor
fbld
mov
jnp
enter
cmc
xchg
imul
push
bound
iret
aaa
pusha
pop
jecxz
push
aaa
cmpsl
repz
dec
subb
dec
push
mov
mov
lock
push
xor
mov
mov
cwtl
mov
cmp
in
push
lods
push
mov
sahf
sbb
jmp
cmp
push
push
mov
push
test
repnz
sub
sbb
push
cld
imull
xchg
pop
pushf
inc
aam
mov
push
jg
fcoms
xor
sbb
out
scas
repz
insb
jns
fisubrl
loopne
push
push
pop
test
sbbb
mov
lret
arpl
and
pusha
cmp
repnz
pop
int
mov
test
push
dec
shl
add
ds
shlb
inc
and
or
fs
jne
cmp
jge
pop
cld
inc
xchg
lods
insb
ds
cmp
inc
adc
adcl
cld
sbb
adc
mov
loope
insl
enter
pop
cmpsl
imul
jcxz
popa
nop
xchg
cmpsl
xchg
xchg
stos
into
icebp
push
sub
cs
jl
lds
test
das
sub
mov
inc
jns
push
cltd
popf
mov
add
movsb
ja
addr16
xor
mov
mov
inc
xchg
or
repnz
fisubrs
in
xchg
mov
mov
je
int3
jno
mov
leave
xor
mov
movsb
scas
das
loopne
and
jae
and
mov
push
outsl
lret
mov
call
movb
orl
fdivrl
mov
subl
cli
stc
sbb
cld
mov
roll
jb
mov
ret
or
sahf
xlat
dec
in
stos
shr
imul
pop
seta
outsb
adc
sbb
out
adc
mov
or
rorb
mov
mov
sahf
aas
fstl
es
mov
out
loope
ds
imul
mov
lds
cmc
cmp
aas
ficomps
mov
aam
or
insb
out
popa
push
mov
popf
pop
mov
push
adc
push
clc
sbb
jl
shlb
sbb
stc
out
pop
out
out
xor
ret
xorb
mov
loope
mov
and
push
ja
repz
push
mov
pop
push
xor
test
lods
incl
shrl
adc
fstpl
xchg
mov
mov
jae
mov
mov
jbe
and
cmpsb
fs
nop
movsb
hlt
stos
jg
lahf
mov
std
test
fs
lret
jno
cmp
push
add
inc
ja
sub
imul
inc
xchg
mov
mov
faddp
inc
and
pop
sbb
outsb
push
lret
push
js
sub
cmc
das
jge
add
sahf
and
xchg
arpl
aad
push
lret
pop
imul
cltd
cmp
testb
outsl
fists
inc
lahf
addr16
pop
ljmp
mov
inc
mov
adcb
or
mov
sbb
xchg
mov
push
push
mov
inc
fwait
lea
enter
mov
ljmp
movsl
pop
sbb
or
fwait
mov
inc
and
lods
adc
cmp
xlat
mov
cld
pop
imul
push
mov
int3
push
mov
rcll
divb
imul
aam
jo
imul
add
xor
in
jno
jp
ret
iret
adc
mov
pop
and
or
shrl
clc
test
xor
dec
mov
divb
jge
popa
push
push
mov
cmp
lahf
sbb
call
lds
inc
cmp
setl
mov
clc
gs
jnp
or
add
femms
fstpt
jno
aas
dec
cmpb
push
clc
fwait
mov
sbb
sub
xchg
mov
into
mov
jae
push
gs
cmp
bound
and
inc
out
pop
inc
pop
push
mov
dec
sub
in
dec
lock
insb
push
cvtps2pd
stos
sub
daa
sti
cmp
adc
pop
aam
xchg
xor
es
in
mov
aas
push
push
out
stos
add
loope
or
lahf
jle
push
sub
mov
xchg
rol
pop
in
sbb
mov
inc
loopne
fs
js
xor
call
cltd
scas
int
lock
hlt
and
pop
or
insb
mov
mov
imul
mov
inc
lcall
lods
mov
jae
adc
pop
lods
pop
inc
mov
fdivrp
movsl
or
pop
mov
add
int
int
imul
and
cmp
imul
rclb
icebp
or
out
sbb
and
push
lods
xchg
or
and
sahf
cli
aaa
sbb
add
mov
cltd
aas
push
fiaddl
test
adc
jg
mov
xchg
in
testb
addr16
icebp
xlat
clc
inc
sub
stos
data16
inc
mov
jae
inc
je
pop
cli
leave
adc
pop
add
repz
mov
xor
xor
adc
add
aad
sbbb
aam
mov
scas
sbb
and
mov
outsl
popa
repz
hlt
les
lcall
jmp
into
enter
mov
adc
xor
in
rcrb
xchg
inc
ds
mov
gs
lret
lods
scas
push
sarl
cmp
xchg
cmp
hlt
jp
test
nop
in
push
mov
and
adc
xchg
jnp
jb
add
sbb
xchg
push
arpl
jp
mov
cmp
jae
xchg
push
add
ret
add
mov
das
pushf
sbb
aaa
daa
popf
and
ret
adc
addl
push
repnz
push
xchg
adc
inc
loop
aad
lea
imul
enter
jp
jns
or
push
adc
jg
imul
adc
out
xchg
sbb
subl
mov
rcll
push
mov
dec
cmc
sbb
pusha
dec
xor
mov
cmp
sahf
cmpb
mov
sbb
pop
mov
pop
or
and
dec
jae
push
dec
sbb
mov
insb
dec
movsb
xlat
adc
repz
in
xchg
inc
fisubl
lock
add
jb
sti
cmp
jl
mov
test
test
adc
and
lods
xorl
and
in
ret
pop
test
fsubs
pop
dec
xor
jae
sti
inc
ret
mov
fs
push
pop
pop
lods
cmp
pop
push
sbb
or
xchg
in
mov
adc
dec
lcallw
ljmp
push
cmp
fisubrs
jb
mov
xchg
dec
and
pop
push
cmpb
and
mov
pop
cs
mov
scas
scas
push
arpl
cltd
mov
testb
lcall
sub
jmp
and
adc
dec
arpl
mov
and
int
test
inc
dec
mov
push
das
dec
push
or
push
mov
aad
or
push
rorb
iret
or
lea
aad
mov
lret
pushf
in
fwait
jecxz
pop
fmuls
push
out
xchg
adc
imul
jg
sub
jp
sahf
ficompl
bnd
ds
test
ja
hlt
in
cmp
pushf
xor
add
adc
sub
add
xchg
sub
out
xchg
sbb
lods
aaa
jg
clc
xchg
pop
orb
imul
mov
repnz
lods
inc
pop
mov
sbb
stos
cwtl
addb
ret
dec
pop
add
fiaddl
mov
into
mov
lahf
inc
add
into
xchg
lea
or
push
imul
outsl
shll
movsb
mov
xor
je
and
int3
mov
pop
and
aaa
les
data16
xchg
hlt
sub
push
and
subl
push
lock
bound
add
sub
ret
ljmp
mov
xor
jg
adc
pop
mov
jge
fmuls
mov
or
lods
push
or
mov
ds
sbb
xor
cltd
int3
inc
and
outsb
sar
repz
cmpsl
arpl
nop
out
sub
fsubrs
xchg
ja
dec
mov
and
aaa
out
jecxz
adc
pop
jp
or
lahf
xchg
das
mov
push
jnp
mov
popf
std
es
stos
mov
cltd
ficoms
lock
jnp
loope
adc
subb
xchg
push
mov
sti
sbb
dec
push
sub
adc
push
xchg
insl
scas
sub
sbb
cli
or
imul
and
push
and
dec
xor
and
bnd
adc
adc
xor
jno
js
or
divb
in
inc
xchg
dec
insl
int
inc
adcb
adc
or
das
loop
ds
adc
stc
cmpsb
mov
sub
movsb
mov
out
or
mov
dec
mov
ret
push
call
sub
fldt
mov
dec
inc
push
xlat
incl
repz
pusha
sahf
mov
xor
cmpsl
mov
and
aam
enter
mov
int3
add
mov
stos
movsl
scas
mov
push
mov
scas
bound
lcall
xchg
xchg
xchg
sbb
movsl
inc
ds
lock
test
or
and
mov
push
push
lret
enter
rol
imul
pop
dec
jae
shll
lods
mov
fsubrl
fucom
xor
fistl
jecxz
sub
pop
dec
xchg
fstp
aam
insb
loopne
vmwrite
je
fsubrs
push
push
out
push
jmp
dec
lds
and
movl
sahf
pop
push
or
adc
je
mov
xor
lods
enter
icebp
lods
popa
das
je
in
xor
inc
adc
movsb
push
movsl
xor
rcrl
les
mov
mov
jae
mov
call
xlat
and
lds
mov
outsl
cltd
and
push
aaa
xor
pushf
orb
outsl
pop
inc
ffreep
and
aad
push
jmp
loope
pushf
pusha
in
fsubrl
fcmovnu
jno
dec
rolb
inc
push
xor
jmp
mov
and
pop
pop
sbb
cmpsl
sbb
fwait
xor
push
sbb
hlt
loop
or
int
mov
int3
jmp
xor
and
adc
cmp
dec
sub
mov
xchg
cmpsl
xchg
jmp
jbe
mov
and
push
dec
jp
lods
mov
xchg
jp
hlt
sbb
dec
mov
stos
cld
dec
lahf
mov
and
sbb
minps
xchg
mov
shlb
push
push
cs
daa
fstpt
movsl
pop
mov
xor
pop
sub
std
mov
out
fistpl
das
scas
andl
repz
sub
sbb
xor
pop
jne
push
ficomps
mov
cmp
xchg
in
or
jae
and
pop
pushf
adc
insl
push
fldl
add
inc
cmpsb
inc
cld
lods
outsb
std
inc
jg
and
xchg
nop
sub
scas
xor
ficompl
mov
ret
ret
mov
and
loop
ja
xor
mov
and
lret
call
cmpsb
push
fistpl
sub
jno
mov
in
clc
leave
out
js
fidivs
lock
loope
and
pop
push
loopne
test
aaa
pop
fisubrs
dec
xor
mov
mov
mov
popa
xchg
int3
fmuls
aas
push
enter
cld
or
mov
xor
jl
jne
or
rcl
push
mov
jbe
lds
sti
lods
adc
in
data16
aam
lods
pop
add
out
mov
push
jge
xor
iret
xchg
sub
push
xor
mov
repz
cmp
and
cwtl
sti
cmp
inc
ffreep
push
leave
fdivp
test
imul
xchg
xor
xchg
xor
cmc
dec
sub
gs
and
rclb
ja
xchg
shl
lock
or
jns
andb
lcall
dec
test
into
jecxz
add
lods
lcall
jge
ds
push
jno
jg
mov
mov
add
xchg
loopne
sub
faddl
xlat
mov
mov
push
push
fcomi
xchg
and
loope
push
sti
repnz
xchg
push
lods
outsl
bound
jne
test
cli
jae
les
push
aaa
mov
push
sbb
cld
pop
mov
das
and
mov
jge
ja
push
pusha
push
xchg
jp
mov
or
fwait
cmc
ror
jae
sbb
js
sub
pop
test
nop
idivb
mov
ss
dec
jae
and
sbb
inc
aas
cld
into
fsubrs
sbb
outsl
call
xchg
jns
sbb
xchg
std
adc
xor
adc
imull
pusha
into
into
and
push
stos
mov
cmp
xchg
testl
xchg
lock
lret
add
jl
lock
mov
jne
negl
mov
jge
inc
add
sbb
arpl
jp
loope
dec
sub
jle
add
xor
fs
sub
jo
push
xor
repz
xchg
fcom
sbb
add
xchg
shll
call
shlb
xor
inc
imul
mov
or
cmp
cmp
insb
lock
fwait
lret
stc
cli
cmp
jmp
fxch
cmp
sbb
aas
add
xchg
lods
and
cmp
cmpsb
les
pop
pop
call
repz
addr16
xor
js
cmc
xchg
shrb
ds
mov
push
movsl
dec
fst
hlt
cltd
aam
mov
das
shll
pop
notl
inc
adc
rcrb
mov
insl
imul
jne
or
mov
mov
push
pop
imull
adc
sub
cmpsb
orb
push
jge
sub
ret
pop
mov
pop
insl
pop
stos
out
and
push
sub
sub
cmc
mov
int3
das
leave
test
pop
push
negb
lods
out
mov
rorl
push
popa
sbb
nop
lea
shll
addr16
fcmovbe
jb
dec
fbstp
ret
push
jmp
adc
sbb
dec
pop
fbstp
mov
sarl
and
mov
pop
xchg
lret
push
outsb
inc
lods
gs
xchg
shlb
cwtl
adc
outsl
cmp
into
popf
push
and
inc
insb
fs
cwtl
loopne
xor
stos
scas
enter
test
sbb
xchg
add
sbb
cltd
imul
add
loop
jle
jl
push
cli
or
xor
adc
cmp
sbb
ss
mov
pop
xor
aas
bound
cmc
lahf
iret
mov
inc
jns
adc
mov
popf
test
add
mov
ss
stos
pop
addb
inc
add
rcl
inc
sahf
pop
mov
movsl
jae
mov
daa
test
iret
or
pop
inc
int3
push
lods
scas
cmp
adcl
addl
dec
stc
fs
inc
loop
cmp
pop
cmp
mov
in
fldenv
scas
and
es
sbb
lods
xor
es
xchg
pusha
add
cmpsb
xor
movsl
popf
adc
scas
mov
jnp
addb
nop
popa
push
jecxz
dec
loop
mov
mov
out
mov
adc
push
adc
clc
push
in
mov
call
pop
adc
cld
roll
mov
xor
or
push
xchg
out
pop
dec
gs
mov
cs
push
out
mov
pop
dec
cmpl
lods
shrl
mov
sti
or
cs
test
inc
inc
bound
mov
pop
aas
out
sbb
fmuls
push
xchg
sub
rcrl
std
xchg
push
xlat
imulb
and
cmpsl
xchg
fxch
in
mov
fwait
mov
cmp
icebp
adc
insl
xchg
jle
xchg
dec
adc
or
pop
dec
fsub
adcl
das
mov
sub
xchg
js
pop
xor
cmp
fwait
cmp
outsb
jb
dec
sub
adc
xchg
lods
mov
xchg
stos
xor
bound
imul
dec
test
mov
xorl
popa
int3
test
mov
pop
shl
les
int3
repz
cmpsb
mov
or
xor
xlat
xchg
out
xor
sub
or
and
hlt
jecxz
test
insb
sub
int
movsl
stc
cld
adc
les
mov
lea
outsl
sub
ja
sarb
in
pushf
sbb
jne
flds
inc
dec
mov
mov
pusha
push
inc
sbb
xor
adc
cmp
push
icebp
xor
mov
mov
push
xor
das
cmc
and
push
mov
and
jmp
cmp
ds
mov
out
inc
cmp
pop
dec
and
mov
jnp
mov
scas
test
cmc
enter
xchg
iret
xchg
clc
rol
dec
sub
xchg
fninit
push
xchg
push
jg
std
pop
push
push
lret
aaa
stc
cmp
scas
mov
scas
mov
jo
sub
ss
das
adcl
jb
adc
jp
and
mov
out
xchg
daa
lret
xor
fdivp
pushf
mov
fbstp
lock
add
cmp
cmp
int3
or
xchg
push
lds
int3
jno
sub
mov
ljmp
into
inc
dec
or
fstl
pop
cmp
ds
jno,pn
push
cmp
push
xchg
outsl
and
aaa
std
mov
lock
sub
push
lds
rclb
in
xchg
fbld
jp
jecxz
scas
movsl
je
mov
mov
or
cwtl
inc
stc
int3
cmp
dec
rcrb
aas
sub
ret
jmp
in
sub
sbbb
xchg
jbe
dec
jns
fcoms
cmp
movsb
ja
test
sub
or
jge
sbb
xor
lcall
push
and
adc
cli
push
dec
cmpsl
adc
mov
dec
movsl
in
aam
push
mov
out
sarl
push
sarb
into
mov
cltd
test
notl
sub
sbb
xchg
int3
sarl
mov
adc
stos
fdivrs
sbb
or
add
sbb
js
fisttps
jp
or
push
stos
imulb
and
lods
ds
idivl
add
sub
fimuls
sbb
sbb
fldl
rcrl
sbb
notb
xor
xchg
ljmp
push
push
lock
in
xlat
mov
imul
jo
into
iret
pop
xor
sbb
cmp
cs
push
pop
xor
xor
ret
dec
mov
add
mov
pop
push
sub
in
stos
call
leave
roll
dec
mov
jg
stos
icebp
addl
and
mov
repz
dec
cmp
sub
outsb
or
mov
cmp
fisubrl
cmc
and
fnsave
mov
data16
lcall
call
pop
insl
inc
pushw
outsb
xor
dec
adc
idiv
addb
mov
shrl
xchg
or
inc
fists
mov
sbb
fisttpl
dec
push
repnz
lret
pop
mov
pop
mov
pop
movsl
clc
repnz
inc
inc
aad
in
add
ljmp
xchg
stc
cmpsl
mov
filds
pop
inc
sbb
or
push
adc
lahf
sub
das
mov
aas
lcall
sahf
scas
gs
xchg
fildl
fcmovu
pop
sub
aam
jmp
test
mov
mov
dec
test
jno
xchg
dec
cmpl
mov
movsb
popf
lea
cmc
aas
nop
mov
lret
pushf
xchg
pop
les
pop
scas
inc
inc
jo
stos
movb
ret
ja
pop
mov
sti
pop
fstps
push
sarl
push
add
mov
push
mov
repz
mov
out
sarl
orb
in
sbbl
mov
ret
rorb
pushf
in
fidivrl
js
xchg
inc
lret
or
xor
shl
insl
mov
cli
xlat
push
dec
aas
push
pusha
dec
inc
push
scas
sahf
add
dec
testb
xchg
xchg
outsb
sbb
outsb
dec
gs
xchg
cltd
mov
fstpl
xchg
movsl
mov
pop
add
cwtl
xchg
adc
call
test
test
jae
cmp
mov
mov
jno
jmp
jge
fisttpll
sub
and
sub
fisttpll
jle
cmp
and
pop
mov
mov
sub
in
out
dec
popf
gs
mov
loopne
repnz
jp
xchg
cltd
mov
jle
out
push
ljmp
or
dec
push
popf
adc
cmp
dec
push
int
outsb
ljmp
loop
push
outsb
pop
outsb
cmpsl
iret
shrb
sti
sbb
loopne
xchg
dec
dec
pop
mov
lock
andb
xchg
jns
sbb
fistps
push
mov
xchg
inc
push
mov
push
jle
roll
scas
cmp
lret
jp
ret
mov
stos
add
mov
hlt
cmp
xor
test
rcl
push
ficoml
inc
cwtl
pop
in
pushf
jmp
notl
pop
pop
aas
negb
icebp
cmp
negb
mov
lea
lods
mov
lahf
imul
or
fildll
jp
movsl
xchg
mov
adc
enter
and
push
shl
jmp
ret
sub
xor
sbbb
mov
add
adc
mov
sub
xor
dec
sbb
sbb
mov
jo
bound
jp
sub
inc
lods
mov
cmp
jb
loopne
sbb
dec
js
mov
and
cmp
mov
push
lds
jae
sarb
hlt
fadds
cld
out
test
cld
cwtl
jmp
mov
stos
adc
das
jmp
shlb
test
pusha
repz
push
std
mov
add
out
mov
cmp
mov
adc
xor
sarb
stos
xchg
push
cmpsl
push
jl
cmp
push
aad
fcoms
fs
xchg
jns
push
xchg
jbe
jge
iret
cmpsl
incl
aaa
jge
adc
push
repnz
pop
mov
cmp
inc
and
fwait
mov
sub
dec
mov
push
nop
test
test
pop
iret
sarb
pop
or
ds
jns
adc
jno
mov
mov
cld
pop
out
aaa
lods
fisubrl
das
shrl
lcall
sub
loopne
or
into
and
ss
rcrb
adc
push
and
js
shll
fwait
lds
sub
movsl
mov
cmp
mov
call
iret
dec
notl
aam
push
aad
lahf
and
mov
scas
pop
loopne
fs
add
data16
in
cmpsl
sbb
mov
mov
fisubs
jecxz
push
test
mov
ret
push
mov
test
push
mov
xor
pusha
out
cvtpd2pi
and
and
xchg
fists
loop
scas
divb
fs
push
cmpsl
test
xchg
insb
push
adc
push
addr16
int3
rcrb
inc
jp
dec
aaa
mov
cmp
dec
lods
pop
lret
je
xchg
pusha
sub
jb
xlat
jl
adc
jb
cltd
movsl
jne
cld
es
mov
mov
insl
out
mov
sbb
fs
jl
stos
scas
cli
xchg
mov
push
rolb
mov
and
jp
aaa
ficoms
lods
add
enter
fistps
out
jns
int3
mov
push
inc
xchg
ss
and
ds
imul
shrb
divb
adcb
mov
ret
pop
xor
inc
shr
mov
int3
mov
or
mov
lret
and
push
rorb
mov
xchg
insb
aas
jb
nop
mov
sub
mov
sub
lods
xchg
ja
lds
cmc
jg
sub
repz
inc
or
jb
jp
es
daa
imul
insb
mov
adc
outsl
lds
aas
sub
aas
leave
jns
dec
or
jle
xchg
and
pushf
cmp
cwtl
out
push
xchg
inc
aaa
push
adc
daa
jl
xor
fldl
xor
xchg
dec
push
inc
cltd
movsb
push
push
xor
xchg
cmp
mov
cmc
xchg
xor
ret
push
icebp
shrb
or
idivl
popf
scas
adc
pushf
in
mov
push
cwtl
lods
mov
subl
fwait
ret
pop
aam
mov
jne
dec
jecxz
loop
aam
adc
mov
je
fildl
int3
enter
sub
test
sub
test
or
or
mov
sbb
sbb
lret
jb
adc
xchg
push
es
xchg
repz
popf
sub
testb
mov
inc
add
jb
arpl
test
mov
lahf
mov
and
sti
jl
jnp
pop
in
jae
in
xchg
rclb
push
mov
pop
popf
or
imul
imul
push
in
xchg
xchg
xchg
ss
push
adc
sar
pop
loop
inc
shrl
mov
ja
std
jge
int3
jge
push
fs
push
lods
pop
cmp
outsb
push
push
icebp
xchg
xchg
cmc
xchg
mov
es
push
leave
cmp
fbld
push
add
pop
push
frstor
mov
mov
push
aad
iret
das
sbb
push
and
mov
pop
lahf
mov
mov
mov
push
dec
mov
imul
jns
les
dec
mov
jo
clc
sbb
ds
add
inc
push
cld
nop
xor
movsb
cmpsl
cmpsb
cld
cmp
outsb
dec
sbb
ss
jl
xor
insb
xor
out
sbb
loope
jns
pushf
repnz
push
push
and
test
movsb
pop
push
pushl
or
xor
iret
mov
jl
mov
stc
adc
jno
push
xor
lahf
insb
inc
xchg
outsb
sub
add
sbb
xchg
cld
sti
popa
fiaddl
bound
adc
call
rcl
pusha
int
aad
ficoml
cli
xchg
divl
aaa
popf
sbb
pop
xchg
sub
and
mov
adc
fldt
rcll
cwtl
scas
mov
out
inc
jns
adc
test
push
or
adc
cs
pop
or
sbb
jl
sahf
sbb
test
out
es
rol
xchg
arpl
mov
je
lds
bound
clc
frstor
das
mov
pusha
jecxz
pop
or
pop
scas
jns
adc
mov
idiv
cmp
sbb
inc
mov
push
or
int
push
insl
mov
test
xchg
scas
icebp
fwait
mov
aaa
or
mov
out
xchg
add
inc
sub
inc
ja
lods
sbb
sbb
jmp
xor
outsl
push
lret
lods
push
fucomi
addr16
lock
les
out
sub
sub
loop
cmp
aam
mov
mov
in
sbb
push
push
arpl
mov
lret
sbb
out
push
loope
in
inc
sub
ljmp
in
aad
fists
addl
mov
xor
pop
rclb
dec
xchg
xor
or
outsl
cmpsl
pop
or
iret
popf
sub
dec
add
mov
sub
orb
push
in
mov
repnz
rorb
dec
and
jnp
fucomp
jmp
and
or
test
fcoms
dec
into
popa
or
jl
cmpl
mov
fwait
mov
push
pusha
test
stos
inc
aas
xchg
pop
fld
aas
and
cmpxchg
mov
jno
mov
and
and
mov
es
int
lock
lret
movsb
dec
int3
out
dec
test
mov
mov
repnz
push
test
sub
push
mull
testl
nop
mov
xchg
cmp
lods
pop
aad
pop
subb
push
jb
jns
sbb
add
mov
sbb
mov
sub
mov
ja
in
xlat
push
push
into
in
andl
cmpsl
mov
cmp
add
loop
adc
mov
cmp
push
pop
and
pop
test
or
xchg
sbb
lret
mov
mov
sarl
pusha
mov
add
sti
test
xchg
or
push
test
ret
outsl
xchg
jbe
mov
pop
loopne
push
sub
cmc
scas
push
adc
pop
jmp
out
mov
repz
add
fucomip
jmp
cmp
mov
mov
mov
inc
test
iret
or
mov
mov
sub
incl
sub
ret
jl
mov
lea
push
into
sahf
test
mov
xor
sbbb
lods
xor
dec
mov
cmp
fcoms
xor
dec
cld
movsb
ljmp
sub
cmp
cmp
push
sub
dec
arpl
adc
cmp
outsl
imul
pop
adc
add
outsl
cwtl
js
inc
enter
mov
cmp
jp
scas
and
push
repnz
cmp
xchg
mov
clc
and
sbb
out
mov
scas
jae
dec
inc
lds
loope
and
mov
mov
xchg
cmp
in
and
es
cld
and
push
orb
mov
popf
sahf
mov
inc
imul
sub
inc
cmp
es
mov
pop
or
adc
xor
adc
cld
test
outsb
jne
cmp
test
fisubs
ret
or
cwtl
fiadds
roll
fisubs
adc
ja
xchg
mov
insb
sbbb
sbb
xor
arpl
push
push
movsl
sub
outsl
sub
std
or
clc
cmp
aam
lods
pop
andb
inc
sbb
xor
insb
or
insb
movsl
mov
mov
insb
cs
inc
daa
push
jge
fwait
movsl
push
lahf
or
dec
ret
mov
cmp
les
xor
sti
popf
jg
mov
mov
pop
mov
adcl
jle,pn
adc
cld
je
roll
stos
bound
dec
cmc
imul
mov
push
sbb
sub
stos
cmp
pop
pop
fstps
add
rcl
and
mov
into
cmpsb
adc
test
pop
add
sub
lds
mov
xchg
jns
imul
outsb
xchg
cmc
icebp
push
mov
jp
cmc
mov
cmp
lds
out
xor
inc
popf
xor
test
sub
mov
sbb
mov
add
jmp
cli
loop
lods
sbb
pop
loopne
push
mov
je
mov
js
push
ljmp
jno
and
xchg
xchg
push
nop
xor
popf
lods
mov
push
xor
in
sub
adc
call
sub
pop
mov
dec
inc
or
push
cwtl
push
negl
outsl
enter
mov
fnstcw
dec
and
pop
pop
pop
or
fstps
push
sub
loopne
adc
mov
cwtl
cmp
lock
mov
lea
insl
std
outsl
andl
inc
xchg
or
imul
mov
adc
inc
mov
lahf
fwait
loop
cmp
or
hlt
lock
fbld
jae
sbb
mov
push
divb
lahf
sbb
mov
add
mov
pop
mov
popl
shlb
xchg
nop
fcomps
dec
mov
scas
rcll
adc
pop
hlt
clc
jl
push
fs
push
lahf
std
lods
push
jmp
lds
adc
test
shll
push
sub
mov
imul
test
push
das
pop
addr16
sbb
pop
cmp
adc
jg
dec
or
out
dec
jge
push
shrb
mov
jno
add
mov
lahf
daa
pop
cmp
inc
pop
mov
jmp
enter
jns
clc
jno
sub
pop
jge
je
add
stc
cmp
inc
mov
jo
lret
dec
pop
xor
jbe
inc
loop
inc
iret
stos
test
movsl
cwtl
fwait
ds
sarb
dec
pusha
lahf
mov
push
adc
test
and
xorl
cmp
add
clc
xlat
push
push
andb
fs
jbe
jnp
aas
pusha
xor
je
sbb
and
mov
mov
and
xchg
mov
sbb
in
shrl
pop
js
jne
sahf
sbb
sub
mov
stc
add
mov
mov
sbb
adc
dec
faddl
call
shll
out
into
stos
push
xchg
imul
sarb
xchg
add
inc
xchg
cmp
xlat
jmp
sbb
push
dec
je
inc
or
ret
shll
adc
mov
enter
mov
out
ret
clc
repnz
push
xchg
add
or
sub
sbb
test
ret
lea
mov
call
das
mov
repz
sbb
repnz
es
gs
std
and
cld
cltd
pop
scas
or
adc
sti
test
xor
xlat
outsl
sbb
jo
cmp
aad
negl
xor
sbb
mov
xchg
mov
dec
push
jle
mov
fistps
mov
add
stos
cmp
in
popf
es
sub
stos
js
cmp
adc
sbb
xor
xchg
add
mov
out
dec
pushf
cmp
test
decl
push
mov
dec
jnp
in
lret
pusha
int3
icebp
cltd
arpl
lahf
pop
test
mov
mov
mov
pop
stos
sar
or
xor
sub
clc
dec
inc
inc
sbb
sub
jg
cmpsl
movsb
nop
inc
fsubs
sahf
filds
pop
push
ret
sbb
test
movsb
or
shlb
mov
repz
jnp
mov
mov
mov
and
cmp
or
hlt
jnp
lods
jmp
scas
push
loop
pop
ljmp
inc
mov
movsb
aam
lea
add
xor
fsubl
jl
adc
inc
lods
mov
pop
xchg
mov
and
mov
xor
adc
mov
mov
adc
and
repz
add
push
sbb
cmpsl
mov
jae
add
cmpsb
inc
out
rcrb
xchg
test
adc
xor
in
mov
in
jnp
fucomp
inc
xchg
sub
or
xchg
pop
ficoml
jge
js
add
fsubrp
shlb
mov
fstpt
xor
inc
pop
or
data16
jp
sti
stc
lahf
cmp
fstpl
dec
inc
adc
push
nop
insl
cmp
shrl
je
clc
dec
into
cmc
aaa
jp
mov
leave
scas
add
adc
push
gs
popf
jmp
fwait
mov
mov
into
clc
popf
clc
pusha
fisttps
jl
aaa
mov
pop
sahf
add
mov
jecxz
aas
jne
cmp
and
pop
aaa
push
xor
push
mov
sti
ret
ror
bound
jecxz
es
inc
sub
pop
push
in
cmpsl
dec
mov
dec
sbb
cmp
fcomps
ret
dec
push
add
xchg
lds
leave
into
jo
mov
mov
mov
xlat
iret
cmp
shlb
enter
mov
mov
fnstsw
testl
into
mov
xor
rorb
dec
ss
out
pop
add
stos
push
cmpsl
insb
negb
movl
mov
jp
add
jmp
inc
lcall
in
xor
imulb
cmp
outsb
add
fsubr
lret
or
push
lcall
aaa
jmp
rol
lods
cmc
jns
sub
cmp
lret
jae
jmp
bound
jb
mov
nop
gs
arpl
jle
pop
stos
test
mov
scas
push
fdivp
or
shrl
imul
push
and
test
jo
push
xor
pop
repnz
adc
icebp
cmp
test
shl
or
popa
pop
daa
addr16
add
movsb
inc
rcl
je
daa
adc
add
inc
aas
dec
mov
jle
or
or
orb
push
jbe
stos
or
lods
and
sbb
outsl
sub
pop
mov
aaa
mov
adc
xchg
adc
dec
push
js
cmp
cwtl
fsts
fidivl
hlt
add
and
rep
lahf
je
cmp
and
sub
xchg
cmpsb
sub
or
cmp
xlat
pop
stc
sub
leave
push
movl
push
push
pop
leave
xchg
je
mov
fwait
in
popa
fcom
inc
out
pushf
pushf
fmul
inc
mov
cmp
inc
inc
and
inc
gs
push
popa
lcall
adc
adc
loop
xor
sub
mov
out
in
sub
inc
mov
fs
or
and
inc
cmc
mov
xchg
sbb
xchg
pop
in
stc
negl
add
test
jae,pn
in
push
sub
stos
movsb
in
or
pop
push
mov
mov
cmpsl
mov
pop
sub
mov
push
movsl
adc
jns
icebp
xor
and
into
hlt
lret
mov
sahf
mull
sbb
gs
inc
out
jno
add
mov
add
xchg
out
or
cs
je
repnz
nop
decb
ret
ficomps
xor
test
dec
shlb
lock
es
dec
loopne
mov
mov
sub
popa
gs
aaa
loope
je
sbb
mov
out
lods
pushl
xchg
pop
mov
mov
mov
fcomps
push
jp
stos
iret
xchg
jae
cmpl
add
dec
push
popa
push
sub
xor
jmp
rcrb
lret
out
or
das
mov
add
std
cmp
std
push
out
xor
xor
fnsave
mov
scas
movsl
inc
or
xor
sbb
pop
xor
jne
sarl
jp
adc
fidivrs
in
fisubrs
cmp
clc
pop
nop
xchg
sub
jne
push
xor
mov
mov
mov
in
sub
mov
mov
outsl
sahf
out
push
fists
push
fwait
jno
push
cs
divl
xor
in
aaa
leave
jg
imul
lcall
jo
mov
dec
sbb
sti
lret
inc
jb,pn
or
xlat
cmpsb
decb
sub
mov
lods
es
jns
mov
loop
add
add
sub
jmp
sbb
lret
pop
fwait
mov
cmp
push
aam
aaa
add
sub
fldt
push
xchg
orl
sahf
add
mov
adc
pop
adc
pop
push
xchg
icebp
push
lret
gs
sbb
cli
sub
jb
std
and
loope
divl
je
dec
push
loop
jge
mov
arpl
arpl
mov
sbb
mov
mov
lods
jnp
sbb
add
rcl
inc
adc
aaa
pushf
andl
pushf
scas
xchg
mov
scas
iret
enter
int
jno
cmpb
out
pusha
jecxz
mov
push
movups
adc
je
addb
mov
je
sub
orl
jno
psubw
sarb
mov
sub
mov
mov
sbb
inc
mov
bswap
add
stos
sub
in
mov
aad
mov
out
xchg
cmp
pop
mov
cmpsl
pop
popa
adc
xchg
jno
jp
mov
and
cmp
push
add
cmp
mov
sub
iret
xchg
mov
push
mov
add
out
cli
in
sbb
cmp
xor
and
cmp
push
dec
fdivs
dec
xchg
or
adc
mov
jbe
xchg
mov
mov
sbb
xor
pop
adc
inc
aaa
data16
fisttps
cmp
dec
rcl
push
test
iret
int3
leave
movl
icebp
fnstcw
cwtl
dec
inc
mov
jmp
and
cmpsb
iret
in
cmp
pop
test
push
jbe
into
fdiv
sub
adc
mov
sub
into
add
mov
sbb
pop
mov
xchg
jge
movsl
xchg
dec
mov
jle
mov
std
cltd
ja
mov
inc
adc
adc
insb
push
fwait
stos
mov
test
and
in
test
jne
loopne
nopl
je
out
cmpsl
mov
sbb
dec
xor
xchg
push
jg
ja
push
or
bound
mov
inc
dec
dec
aaa
lret
xchg
jb
jmp
xor
movhps
insb
and
nop
cmp
mov
negl
xchg
daa
outsl
ljmp
and
jbe
xor
addr16
fsts
mov
mov
sbb
jns
lret
arpl
fistpl
bswap
jb
push
sub
arpl
hlt
fmulp
sbbl
pop
rorl
mov
cli
mov
addb
sbb
pop
enter
push
adc
push
push
or
fmull
cmp
add
stos
in
addr16
add
and
jecxz
xlat
lcall
mov
xchg
jge
test
cmp
pop
xorl
add
into
pop
jp
inc
repnz
mov
sbb
jmp
or
clc
ja
jno
dec
dec
or
inc
insl
add
jno
pop
cmp
add
cmpsl
lods
dec
xor
ret
fcomps
mov
cmp
data16
pushf
xchg
jno
or
cmpsb
dec
and
jg
sbb
or
sbbl
jbe
stos
lock
xchg
push
cltd
out
out
stos
push
pop
mov
jp
int
and
mov
hlt
sub
ret
mov
cld
fadds
mov
lds
or
testl
mov
aaa
pop
pop
scas
mov
pop
cmpl
mov
sub
xchg
push
rcll
popa
in
cmp
ret
pop
mov
out
mov
xor
add
gs
cltd
daa
inc
js
push
push
mov
js
into
pop
imul
loop
iret
es
xor
jmp
sub
fwait
decl
adc
xor
je
aam
enter
lods
cs
add
fdivl
movsl
xchg
jnp
mov
scas
mov
xchg
pop
mov
sub
popf
and
ret
jg
mov
inc
das
jle
aaa
jae
sbb
clc
fwait
xor
sub
in
sbb
xor
mov
rorl
cmp
mov
lods
sub
fcomps
jmp
pop
shl
lcall
nop
lods
nop
addb
sbb
je
inc
clc
xor
sbb
add
gs
xchg
push
arpl
pop
add
xor
add
mov
repz
mov
inc
jmp
lds
add
add
in
pop
xchg
mov
mov
repnz
mov
xchg
outsb
cmp
mov
mov
daa
data16
push
mov
sbb
xor
jecxz
sbb
out
dec
aas
call
mov
pop
mov
insl
push
jg
adc
shrl
lock
jb
sub
inc
mov
imul
cmp
jecxz
scas
ret
push
cwtl
xchg
mov
add
sbb
lret
out
aaa
mov
or
cli
int
fistpl
lea
xor
scas
pop
adc
mov
mov
push
xor
adc
inc
pop
out
xchg
push
pop
ror
add
mov
jb
test
dec
sahf
loope
loopne
movsb
cmp
add
xor
jp
mov
ficompl
or
inc
cltd
rcll
adc
dec
ljmp
repz
mov
push
loopne
mov
js
pop
jnp
imul
stc
push
mov
mov
cmpsl
in
add
cwtl
imul
mov
icebp
fisubl
mov
jb
mov
xor
pop
fld1
dec
pop
add
xchg
ficoms
into
cs
lret
jmp
test
sti
xchg
dec
ss
test
or
mov
pop
mov
les
data16
dec
stos
test
cmp
repz
inc
inc
jne
dec
pop
inc
daa
paddsb
inc
inc
and
mov
sti
idiv
test
pop
jge
and
xor
adc
in
test
jecxz
sub
out
test
jae
in
dec
push
xchg
fwait
movsl
mov
adc
ret
xchg
or
xor
sub
pop
push
add
add
mov
jo
push
xchg
jge
mov
sub
fs
pop
in
adc
fs
movsl
mov
jmp
out
dec
sub
mov
aam
pop
mov
xchg
mov
outsb
es
inc
and
data16
imul
push
inc
testl
xbegin
les
insl
lods
cmc
mov
add
xchg
jge
dec
sub
mov
sbb
dec
stc
ds
out
arpl
jge
ficoms
nop
inc
xor
mov
jb
sub
or
arpl
sbb
dec
jb
jae
js
mov
pop
idivl
jbe
sbb
mov
pusha
inc
push
loope
cli
outsl
or
pop
mov
fbld
xchg
mov
pop
sbb
int
sbb
out
mov
aas
dec
add
aaa
xchg
shlb
add
mov
cwtl
lcall
mov
pop
cmp
fmuls
push
mov
aaa
add
das
add
lea
or
insb
fsubr
jae
cld
add
testb
std
imul
jecxz
ficomps
cmpsl
lahf
test
mov
lock
cmc
repnz
push
mov
neg
inc
addl
repz
mov
push
or
sahf
xchg
and
push
mov
pop
aas
rorl
and
cmp
scas
pop
test
test
test
adc
xchg
dec
out
fiadds
dec
test
jge
xlat
lcall
sub
jne
dec
lcall
scas
out
sbb
es
pop
test
lahf
ds
je
fisubs
dec
jmp
imul
pop
hlt
outsl
testb
push
aas
jbe
mov
rorl
scas
add
ret
cs
test
adc
imul
xchg
xchg
ljmp
cmc
mov
icebp
test
xchg
add
les
hlt
shll
repz
xor
cwtl
add
sbb
xor
in
sub
cmc
das
test
clc
out
add
sbb
daa
jae
mov
loopne
inc
dec
cmp
enter
leave
push
dec
jae
inc
pop
xchg
inc
mov
sub
push
es
push
mov
and
ret
psrad
push
repz
pop
sub
add
imul
fcmove
mov
cmp
mov
shll
shrb
lret
jge
lea
test
cmp
in
jb
mov
mov
leave
scas
mov
fcmovu
rcr
pusha
xchg
fistpl
nop
gs
mov
jge
js
pop
ret
clc
int3
sub
and
mov
in
push
jge
shrw
fdivs
cmc
xchg
psraw
adc
cmp
lea
push
addr16
adc
sbb
cvtdq2ps
or
fstpl
inc
mov
dec
ljmp
push
fs
jecxz
adc
jl
and
jb
out
call
mov
scas
jbe
fcoms
ret
ret
dec
shll
xor
mov
pusha
insb
xchg
pop
xlat
idivl
sub
mov
sbb
aas
cmp
cmpsl
xchg
fistpll
nop
inc
cs
scas
jp
or
mov
pop
and
sbb
mov
pop
orl
fsubrs
xor
mov
inc
sbb
cmp
fisubs
inc
in
subl
xchg
jns
jg
or
add
sbbl
hlt
xchg
lahf
xor
sub
rorl
cwtl
les
mov
dec
jg
inc
fwait
lods
scas
or
in
jbe
stos
mov
jns
inc
adc
lcall
dec
out
xchg
call
adc
cmpsb
mov
mov
dec
jmp
into
push
push
and
cmp
cmp
mov
pop
cld
push
add
or
cwtl
and
mov
pop
out
lcall
xlat
mov
push
mov
adc
insb
ret
cmpsl
pop
sbb
push
pop
sbb
and
jl
cmp
imul
ja
in
lea
cmp
lahf
xor
and
fs
inc
js
mov
pop
cwtl
rcrl
fsub
xchg
cmp
cmp
push
mov
fcompl
push
mov
fs
mov
adc
xor
mov
arpl
xchg
movsb
insl
js
jge
lahf
cltd
mov
sahf
and
jg
add
scas
lock
lods
cmc
mov
mov
cmp
adc
popf
jo
imull
mov
mov
xlat
ret
arpl
les
dec
out
mov
scas
dec
add
add
jecxz
jg
lds
cmc
xlat
sbb
and
nop
test
push
push
cli
inc
cmp
loop
out
adcb
sbb
push
or
pusha
jl
int3
mov
lds
fcomps
or
mov
jle
or
lcall
dec
movsl
jns
jae
and
adcl
flds
add
xor
pop
push
push
or
cwtl
scas
rcl
cmpsl
fsts
insb
cmc
mov
mov
aam
add
mov
ljmp
mov
int3
aaa
and
stos
out
cmpsb
aam
mov
pop
popf
aas
mov
dec
mov
icebp
inc
jno
mov
clc
add
adc
sbb
cmp
gs
in
ret
das
mov
stos
mov
xchg
sub
pop
pushf
ljmp
xor
push
aam
pop
clc
ja
cmp
mov
pusha
cmp
sbb
fs
lahf
repz
pusha
or
push
dec
lds
dec
inc
fimull
pop
lcall
mov
dec
int
lret
cmc
data16
adc
jl
sbb
insl
fdivrs
aas
cmc
dec
dec
imul
and
stos
loopne
cmp
cmp
int3
push
pop
scas
cmpsb
jo
xlat
adc
loop
sti
clc
push
fcmovnu
cltd
mov
les
js
xchg
das
shll
imul
mov
test
icebp
push
mov
xor
inc
dec
fistpll
ret
cmp
rorb
out
jnp
bswap
cmc
fisttpll
add
lods
or
popa
push
cmp
ja
pop
mov
adc
les
shl
nop
out
mov
cltd
sbb
nop
cmc
pop
add
and
jns
std
sbb
pop
jle
repz
push
test
stc
mov
mov
repnz
arpl
outsb
das
rcrb
push
dec
sbb
xor
mov
popa
or
cmp
sbb
mov
loop
sub
jno
mov
xchg
shrl
andb
fdivl
aam
or
sbb
and
cmc
xor
shll
push
daa
push
and
cli
xchg
cmp
mov
mov
popa
add
lock
lret
push
data16
not
mov
inc
enter
in
sub
cmp
int3
pop
lret
mov
or
jmp
js
pop
xchg
mov
fbld
std
adc
mov
shrb
xor
dec
aad
fdivl
mov
jb
loopne
cli
pop
jo
loop
xlat
xorb
loop
rorl
sbb
imul
sbb
and
arpl
or
lret
sbb
in
jp
adc
icebp
dec
or
dec
mov
adc
sbb
mov
adc
ret
adc
mov
mov
imull
sub
pop
jnp
arpl
repnz
xor
ss
repnz
mov
xchg
mov
in
adc
mov
and
or
bound
mov
lock
mov
fcompl
dec
movsl
xchg
out
insb
adc
sub
les
mov
mov
and
lcall
dec
notb
fisubrs
lods
push
cs
xor
mov
pop
lods
inc
xchg
push
cmp
sub
jne
imul
shl
add
pop
push
das
rorb
in
std
dec
ret
stos
mov
mov
outsl
call
stos
mov
pusha
mov
inc
stos
pop
pushf
xlat
cltd
daa
add
shrl
pop
mov
loop
adc
and
jmp
fsts
cwtl
mov
fisttpl
popa
loopne
xor
aad
inc
shlb
add
out
icebp
and
sub
push
jae
mov
outsb
cld
mov
int3
mov
xor
insb
sub
pop
cmp
fstpt
inc
nop
aas
push
aad
int3
fsub
int
lret
scas
enter
das
cmp
sub
notb
out
push
nop
add
loop
xchg
xor
pop
dec
push
add
int
inc
int
fwait
jge
daa
sub
mov
fmull
or
mov
or
aas
sbb
add
cs
or
inc
jns
int
sbb
push
mov
inc
jmp
aaa
mov
mov
out
cli
push
or
int
popf
out
adc
push
pop
movsb
xor
dec
test
lahf
xor
mov
lahf
insb
lock
or
out
and
int3
pop
jmp
pop
je
cli
pop
fstp
inc
mov
dec
out
sbb
faddl
leave
mov
mov
pusha
insl
sub
arpl
push
pusha
sub
mov
pop
mov
cwtl
fmulp
pop
cmp
lods
adc
movsl
fiaddl
xchg
jbe
orb
push
mov
push
adc
mov
sarl
add
dec
loopne
cmp
lds
loope
addb
lcall
stos
push
mov
hlt
dec
and
int3
jmp
dec
ret
ljmp
mov
inc
lcall
mov
xor
xor
enter
je
fnstenv
sbb
out
cli
cmpl
adc
jo
pop
test
lds
lret
arpl
and
int
xor
fcmovnb
int3
cmpsb
or
les
icebp
jns
movsl
xlat
jmp
rorl
bound
pop
lds
and
movsl
rclb
mov
jmp
adc
sub
sbb
xchg
je
pop
popf
lcall
inc
shrb
pop
aad
cmc
adc
add
mov
icebp
mov
es
cmpsl
cmp
outsl
bound
inc
mov
pop
pop
sti
mov
mov
rol
pop
fst
lods
cmp
xor
outsb
xchg
inc
mov
aam
inc
sbb
mov
jbe
sub
mov
add
cmc
add
aam
outsb
or
daa
lock
into
xchg
pop
outsb
sbb
dec
push
mov
sarb
mov
mov
ror
shrl
fldenv
jnp
jno
aaa
stos
add
call
stos
dec
daa
jmp
stc
adc
and
sbb
xor
stc
adc
lods
mov
mov
pop
cmp
jmp
cmp
and
fsubl
jmp
xchg
push
pusha
xchg
mov
in
fcoms
sti
test
movsl
stos
xchg
add
ja
mov
andl
out
mov
dec
cmp
add
jae
test
push
or
push
xchg
xchg
je
jne
lcall
or
sbb
inc
das
mov
inc
push
push
aaa
into
cld
aam
jns
mov
xchg
mov
ljmp
outsl
jo
lods
xchg
dec
pop
in
addr16
adc
pop
jbe
movsl
add
mov
push
rorb
pop
jbe
inc
dec
aaa
pop
pop
sub
addb
add
lcall
outsl
inc
adc
mov
mov
std
pop
std
xchg
mov
cltd
fldl
and
mov
pusha
sbbl
push
or
sbb
lds
adc
dec
lret
bound
sub
add
fsubs
js
outsl
out
dec
push
aaa
inc
les
pop
shll
cmp
js
pop
lcall
dec
aad
mov
mov
aad
push
popf
xchg
mov
imul
pushf
in
pop
mov
inc
jb
mov
loopne
mov
push
ret
out
int3
add
ss
pop
mov
xchg
movsl
hlt
cltd
pop
push
add
outsb
pop
sub
jmp
cmp
testb
mov
push
lods
cmp
mov
inc
shlb
push
add
cld
idiv
cli
lea
push
out
add
pop
pop
and
iret
gs
lret
popa
in
mov
cmpsb
jnp
rcr
adcb
mov
loope
cmpsb
aas
xor
inc
ja
loopne
adc
xchg
mov
imul
clc
scas
push
std
mov
sbb
push
aad
lret
clc
mov
imul
cld
pop
add
sub
cld
mov
push
cld
mov
xor
test
jmp
repnz
sbb
add
cmpsb
mov
dec
pushf
mov
xor
xor
or
mov
push
stc
dec
cmpsl
fmull
daa
daa
lods
imul
and
xor
push
dec
cmp
push
mov
aas
add
mov
cmp
flds
icebp
sub
in
dec
sub
pop
or
jns
mov
adc
xor
scas
jns
aam
mov
pop
lcall
or
lds
lea
jns
jmp
xor
int
outsl
mov
mov
sti
dec
jmp
pop
xchg
or
mov
inc
lcall
inc
and
mov
or
jmp
inc
and
cmp
cld
mov
cmc
cmpsl
jne
xorb
mov
xchg
or
lods
ds
push
jl
lret
popf
out
and
jg
fs
movsb
cmp
inc
push
adc
rcll
fisttpll
xchg
push
jnp
in
das
jle
aas
fistps
lret
and
orb
rolb
cld
jp
daa
pop
sbb
push
inc
fisubrl
xchg
lods
repnz
lods
push
fidivl
mov
cmpsb
ret
leave
jp
andl
push
xor
sub
xchg
jmp
xchg
push
add
leave
cmpsl
scas
addb
enter
notb
and
je
add
pop
sub
loopne
repz
imul
mov
xorb
pop
pop
mov
xor
mov
outsb
inc
jge
mov
ss
dec
and
xchg
enter
dec
xor
insl
aam
mov
add
subb
xlat
pop
call
enter
popa
sbbb
ret
xor
inc
js
pop
inc
jge
xor
sar
sub
test
rolb
and
es
shlb
jecxz
lret
sbb
xchg
in
test
push
std
adc
loope
mov
lcall
lcall
push
xorb
sahf
pop
or
or
pushf
and
mov
out
add
insb
push
enter
jecxz
std
out
loope
mov
rclb
out
push
cltd
push
sti
iret
daa
xor
test
inc
int3
sti
or
pop
stos
sahf
lret
push
popa
push
xchg
jecxz
push
cmp
imul
cs
into
cmc
out
lcall
in
sub
adc
shll
insl
ds
repnz
or
pop
cltd
push
add
add
xchg
xlat
sbb
mov
xlat
jb
sub
imul
fbstp
ljmp
in
cli
movsl
mov
sub
or
adc
loopne
lds
xchg
sbb
cmpsl
xlat
jbe
std
outsl
arpl
add
push
xchg
std
mov
sub
adc
inc
mov
dec
roll
mov
sbb
adc
cmp
into
or
xor
mov
imul
push
push
loope
adc
pop
xor
aam
push
jmp
push
cmpsb
adc
outsl
mov
data16
and
cmpsb
addr16
dec
shll
mov
subb
cmp
fwait
add
fwait
push
dec
jl
mov
cmp
fildll
jne
lahf
outsb
aaa
lcall
sub
add
or
push
pop
mov
pop
outsl
inc
push
arpl
mov
add
mov
test
mov
dec
xor
loope
push
repz
lock
stos
loope
cs
mov
add
aaa
dec
ror
sbb
jl
lret
insl
bound
and
pop
stc
insl
jnp
mov
dec
out
xchg
nop
mov
jne
lea
dec
movsl
cmpsl
adc
aam
add
hlt
movhps
inc
and
jo
loopne
inc
or
sub
imul
icebp
mov
test
mov
popf
aam
mov
nop
jge
gs
jne
jmp
adc
imul
pop
mov
ljmp
out
nop
popf
mov
lock
jnp
jne
dec
cmpsl
mov
pop
insb
jp
dec
jb
jp
vxorps
out
xchg
fldl
cmp
xor
sbb
aad
stos
xor
mov
insb
mov
loopne
cli
icebp
icebp
int3
jecxz
add
jle
sub
mov
sar
sub
dec
xchg
mov
bound
scas
inc
pushf
sbb
add
imul
xor
lret
pop
popa
ljmp
sbb
jo
fxch
xor
sahf
mov
fstp
jecxz
dec
xor
mov
mov
pop
je
dec
jge
bound
adc
adc
adc
cmp
mov
mov
mov
hlt
cmp
cwtl
test
loopne
jg
mov
add
mov
fidivrs
cs
out
cmpsb
inc
lahf
mov
daa
and
mov
aam
ja
push
mulb
pop
imul
dec
push
jae
test
bnd
lods
aam
aam
sub
or
imul
pop
mov
neg
adc
sub
inc
push
xchg
and
popa
sti
pushf
or
arpl
push
mov
or
inc
cmp
cmp
or
aad
push
add
cmc
test
inc
enter
imul
stos
stc
leave
adc
xchg
hlt
or
pop
xchg
out
mov
xchg
cltd
xor
sarl
mov
push
arpl
cltd
outsl
call
into
push
xor
jle
cmc
xor
push
jmp
test
push
insb
add
in
loope
int3
pop
pop
pusha
je
mov
mov
add
adc
adc
insb
mov
addr16
xor
push
sub
scas
pop
in
mov
sub
dec
adc
adc
add
nop
xchg
or
cmp
aas
test
sbb
inc
dec
out
cmpsl
xchg
rcrl
popa
lods
bound
push
push
pop
adc
movsl
dec
jne
push
cmp
sub
std
sbb
dec
adcl
push
cmpsb
into
jb
xchg
ret
sbb
inc
xchg
sbb
inc
cmp
outsb
test
xor
sahf
cmp
test
cmp
movsb
shrb
dec
movsl
cmc
and
adc
push
cmp
jmp
mov
cltd
push
scas
fs
xchg
cmp
cld
hlt
ljmp
aam
inc
mov
out
mov
sbb
adc
pop
jl
push
xor
jecxz
imul
mov
addl
lea
cmpb
clc
lods
lea
pusha
lahf
or
jnp
rorl
orl
lret
faddp
jne
std
push
clc
iret
iret
movsb
push
jb
lcall
pop
jmp
jge
mov
orl
pop
mov
aam
sub
cmp
fs
test
push
xchg
xchg
xchg
out
mov
insb
lods
lods
out
jle
push
fs
lock
jl
sbbb
stos
subl
mov
ret
into
mov
or
cmp
jne
mov
inc
loope
mov
imul
mov
ds
je
jmp
shll
mov
sar
lds
mov
lret
jnp
in
je
inc
add
ja
mov
imul
test
enter
repnz
imul
cltd
adc
addr16
add
cld
subb
test
xor
jnp
cltd
insb
push
cltd
mov
bound
into
ret
ds
test
repnz
xchg
push
xor
dec
cmp
push
push
cmp
les
sub
xchg
jae
adc
cwtl
xor
bnd
into
mov
sub
push
sbb
jnp
ja
cmpsb
mov
push
xchg
add
pop
ds
push
cmp
mov
pop
mov
inc
pop
mov
dec
inc
js
and
cmp
ret
mov
fisubrl
xor
ds
clc
add
dec
push
add
and
sbb
adc
pushf
neg
push
add
dec
test
and
sahf
jecxz
lock
mov
aas
cltd
or
cmp
mov
popf
enter
lods
movsb
xchg
cmpsb
or
xor
lods
cmp
sub
cmpsl
add
pop
add
mov
push
inc
inc
mov
adc
mov
mov
outsb
xor
inc
loop
dec
movsl
sbb
shrl
mov
out
jae
cwtl
icebp
scas
xor
cli
ljmp
or
add
pop
ficoms
test
adc
dec
adc
leave
mov
aam
adc
xchg
int
xor
idivb
adc
cmpsl
in
lahf
lods
imul
jns
nop
pop
xchg
lret
cli
ret
pop
fxch
testb
pop
adc
test
daa
lods
aad
std
and
ror
iret
add
pop
push
inc
sub
cmpsl
das
lret
das
jae
or
les
xor
xor
and
iret
xor
js
jl
mov
fisubrs
pop
fadd
bnd
fdivr
or
xchg
add
fstl
stc
fidivl
xor
cld
xchg
addr16
inc
dec
push
xchg
aaa
mov
adc
cmp
es
addr16
mov
stc
in
movsl
jmp
scas
push
jmp
fistpll
in
dec
int
ja
mov
mov
sub
lds
mov
in
rcrb
sbb
adc
push
repnz
test
fprem1
fsubl
xchg
es
inc
inc
push
jne
adc
test
adc
icebp
outsb
orps
ljmp
pop
pop
pop
push
lea
sti
sbb
or
inc
js
pop
cld
repz
daa
sub
dec
and
xor
mov
sbb
xchg
pop
lahf
mov
jb
xor
cltd
push
imull
aas
mov
pushf
sbb
and
addr16
sbb
test
ret
or
jo
dec
add
aaa
dec
push
cmp
mov
sbb
sti
jo
test
je
sub
aaa
sti
mov
leave
and
lea
inc
inc
in
testl
shll
mov
and
mov
or
push
in
push
xchg
mov
cmp
dec
jbe
pop
jmp
stos
sub
in
or
cmpsb
loop
movsb
inc
mov
jne
mov
lods
dec
jmp
xorb
pop
xlat
cli
push
out
cvtps2pd
push
push
fldcw
push
add
int
xlat
xchg
push
and
filds
xchg
pusha
das
mull
cwtl
pushl
sub
lods
and
add
inc
data16
call
or
imul
pushf
dec
test
xchg
movb
icebp
sbb
roll
cmp
cltd
mov
push
xor
lods
mov
imul
pop
xchg
and
dec
es
test
push
fs
xor
xor
jle
jns
push
fmuls
in
stc
dec
fildll
dec
out
push
mov
das
nop
jno
data16
jecxz
ja
js
mov
or
lcall
push
jb
xchg
jg
jle
sub
mov
xor
mov
cmpsb
mov
loop
mov
in
xlat
mov
fcoms
fnstsw
scas
leave
adc
push
jmp
lahf
cltd
lret
rcrb
out
mov
stos
push
stc
stos
jp
or
sub
mov
adc
call
test
or
test
sbb
dec
repnz
sahf
push
out
inc
mov
int3
push
das
sti
push
mov
mov
xchg
ja
loope
test
mov
fxtract
dec
xchg
or
fmull
inc
adc
cmp
jne
mov
push
push
sbb
inc
mov
mov
xlat
adc
inc
or
cmp
add
adc
xor
pop
xchg
or
lods
fildl
mov
jno
imul
jbe
and
notb
fnstenv
push
shr
sub
push
xor
shrl
cmpl
xchg
inc
and
add
or
faddl
dec
cmp
mov
jmp
push
imul
or
sbb
mov
pusha
xchg
mov
mov
cld
std
int3
jne
and
mov
stos
push
jmp
pushl
pushf
sbbb
cli
repnz
cmp
adc
mov
sbb
enter
cli
sub
int
mov
fsts
cmp
xchg
sub
aad
and
loop
xlat
jmp
lcall
arpl
jl
rolb
ficoml
sub
mov
leave
pop
push
popf
push
orl
hlt
lcall
and
cli
ds
xlat
fidivs
sti
arpl
leave
iret
pop
jle
mov
mov
scas
lods
pop
push
pusha
lods
filds
movsb
movsb
jmp
add
fistl
xor
jnp
pusha
sbb
cwtl
mov
not
inc
mov
insb
int3
cmp
fcomps
inc
mov
cmp
xchg
mov
dec
stc
pop
or
imul
xchg
ss
aam
test
fs
mov
loope
incb
and
or
mov
inc
push
mov
jbe
dec
push
imul
repz
or
stos
or
cltd
xor
xor
or
jmp
mov
test
xchg
push
out
lret
loopne
nop
fwait
adc
push
in
mov
pop
in
xor
insb
arpl
sbb
mov
ret
mov
jo
cmp
popf
repz
test
mov
add
mov
sub
pop
loop
fdivp
dec
outsb
pop
or
cmp
sti
push
and
jbe
push
xor
and
mov
push
movsb
inc
cltd
fwait
sbb
stc
leave
arpl
fwait
push
pop
inc
test
or
adc
or
xor
adc
lcall
fcoms
pop
fwait
sti
sub
inc
push
push
push
and
ret
icebp
std
in
push
scas
or
mov
gs
imul
inc
xchg
repz
and
xchg
add
mov
or
jo
outsb
ss
scas
leave
cmp
sbb
test
out
pop
sub
int
mov
mov
int
mov
iret
sbb
mov
or
int
lcall
lcall
sar
lods
roll
inc
popa
sub
mov
mov
jg
jl
inc
pop
mov
arpl
fcoml
shll
loope
jge
sub
pop
roll
popf
aad
add
mov
dec
daa
or
jp
adc
xor
je
jl
dec
and
pop
sub
divl
lods
movsl
push
adc
popa
les
and
popf
inc
sub
cmpl
ljmp
or
or
aad
ljmp
adc
push
dec
add
xchg
sub
aad
test
shrl
mov
popa
jae
push
cmp
xor
mov
rcrb
jl
jno
in
and
push
mov
ja
adc
dec
or
jae
mov
and
pop
sub
jle
adc
xor
and
jne
add
loope
dec
sub
add
mulb
dec
lods
fsts
sar
jb
mov
jecxz
addl
push
rolb
in
testb
sub
and
or
pushf
pop
cltd
mov
add
pop
insb
and
cltd
pop
fs
incl
and
push
dec
and
cmp
test
mov
pop
pop
xor
das
gs
dec
mov
jb
jo
or
js
xor
sbb
mov
pop
and
sub
jae
fs
aaa
inc
movsl
in
mov
lretw
sahf
adc
and
sub
lcall
jnp
aaa
cmp
add
push
lods
repnz
mov
aaa
hlt
mov
push
mov
aaa
into
pushf
push
mov
pop
sbb
shrb
pushf
and
jl
cmp
or
mov
xchg
test
pop
inc
xchg
int
mov
cmp
sbb
stos
adc
mov
jnp
lods
mov
or
aaa
ja
loop
js
lcall
in
fldenv
and
inc
mov
shll
inc
sub
cltd
mov
pop
add
cmp
ja
mov
popf
fistpll
jo
xchg
or
cmp
inc
leave
shll
mov
hlt
les
xchg
push
iret
or
mov
mov
rolb
pop
cmc
aas
and
int3
jmp
push
imul
hlt
mov
push
rsqrtps
jmp
inc
ret
das
or
pop
pop
sub
aad
bound
xor
pushf
dec
mov
dec
and
mov
push
push
adc
mov
das
mov
pop
andb
scas
push
inc
and
or
cmpsb
mov
into
ficoml
xchg
bound
fstl
cmp
mov
or
push
fwait
daa
notb
pop
pop
fnsave
sbbl
xor
cwtl
ret
pop
cmp
bnd
aas
dec
and
mov
lds
xchg
xor
xor
xor
scas
cmp
push
lret
dec
inc
mov
pop
testl
lods
mov
ljmp
scas
fdivl
jae
mov
into
js
push
and
mov
pusha
xor
sbb
mov
add
mov
mov
xor
insl
pop
and
mov
jmp
push
xchg
cmpsl
xlat
jp
mov
sub
and
mov
mov
cs
sbb
lahf
jp
fsubp
out
inc
daa
cmp
jmp
pop
movl
jno
inc
insl
push
arpl
shll
xchg
pusha
lret
push
out
xchg
not
add
add
mov
jo
enter
jnp
aam
pushf
fs
popa
aad
jp
inc
imul
in
xor
rorb
inc
pop
nop
pusha
sbb
hlt
jno
cmpsb
fs
and
xchg
pop
shr
shl
push
fnstsw
into
adc
cs
jl
in
sbb
dec
movsb
dec
jmp
dec
test
xchg
cmp
inc
scas
adc
xor
jp
xchg
or
jae
or
imulb
jmp
pop
mov
inc
add
or
dec
or
rol
xor
mov
fdiv
cwtl
ficoms
subl
push
push
adc
cmp
and
iret
mov
rcll
punpcklwd
add
sahf
xchg
lcall
nop
push
mov
sbb
fs
movsb
pop
cmp
mov
mov
icebp
xchg
in
negb
lret
shrb
xchg
or
imul
loopne
lods
jne
jp
call
fs
fsubrl
scas
and
cmp
nop
adc
and
les
push
xor
adc
push
mov
test
push
arpl
adc
or
sbb
dec
rol
mov
stos
mov
fs
jg
inc
cwtl
cmpsl
mov
test
push
inc
mov
fcoml
adc
sbb
push
cmpsb
es
push
fdivrp
rcll
xor
out
jne
imul
push
or
sar
pop
jle
out
jns
mov
mov
lock
int
add
mov
sub
mov
add
dec
mul
jge
xchg
pop
rorb
repz
or
nop
xchg
or
sub
sbb
xchg
mov
jns
sub
jmp
xchg
bound
mov
rcrl
mov
or
push
loop
cwtl
sub
daa
mov
sub
xor
sbb
data16
loop
adc
mov
xor
imul
leave
inc
lcall
aaa
or
pop
cmp
test
push
jge
stos
movsb
out
retw
addb
jne
mov
adc
es
xchg
or
push
cld
test
leave
or
or
scas
jge
fs
and
push
hlt
inc
lcall
into
insb
mov
sub
inc
das
gs
xchg
mov
mov
int3
scas
incb
scas
das
mov
push
jne
mov
popa
cltd
cwtl
iret
jno
fdivs
xor
test
push
pop
cmp
mov
ljmp
pop
or
sbb
cmp
xchg
jne
std
and
ss
xor
cmp
pop
cmpl
add
cmp
scas
leave
iret
jbe
ljmp
shll
push
push
test
fnsave
out
pop
ret
scas
mov
aaa
sub
lret
gs
lea
mov
test
test
out
out
dec
popa
jg
lahf
push
pop
pop
or
sahf
dec
xchg
add
nop
dec
das
dec
testb
push
pop
fcoml
in
pop
pop
ss
sub
pop
int
fdivrs
jp
jo
cmpsb
mov
push
sti
mov
adc
data16
stos
aaa
sbb
cmpsb
out
cmp
es
inc
or
jnp
mov
stc
add
push
push
jns
add
fldt
fbstp
hlt
cmp
inc
andb
xchg
xchg
mov
out
mov
loope
cwtl
lahf
add
or
clc
jne
inc
push
in
jmp
aaa
xor
in
dec
loop
aad
sub
loopne
jl
pop
lds
cmpsb
sarl
test
xlat
ss
or
cld
gs
pop
pop
mov
cmpsb
lcall
test
mov
xor
mov
test
jae
bound
outsb
push
fsubr
lea
mov
int
test
and
shll
adc
inc
and
call
xchg
ret
pop
xchg
or
test
call
rcrb
rorl
jnp
popa
imul
jno
cltd
test
mov
xor
cltd
insl
hlt
or
and
xor
data16
mov
xchg
in
and
sahf
loope
lods
inc
outsb
lods
jg
pusha
and
loope
xchg
lret
out
inc
test
or
lds
aam
js
sbb
push
cmp
adc
arpl
xchg
fwait
mov
mov
sub
xchg
int3
je
loop
inc
push
add
fs
pop
mov
push
fcompl
popf
push
mov
inc
pop
cmp
mov
aaa
loopne
aad
xchg
dec
inc
adc
addl
mov
insb
aaa
mov
lods
and
ljmp
push
sbb
out
push
shrb
outsl
punpckhbw
out
inc
scas
mov
lahf
movsl
shrb
lcall
ret
inc
movsl
popf
xchg
pushf
add
jle
into
mov
push
xchg
bound
popa
inc
or
test
sub
cmp
ljmp
ret
inc
and
adc
jb
rorl
in
and
sbb
hlt
out
fimuls
imul
fdiv
ja
cmp
and
in
cmp
push
mov
sbb
js
je
mov
push
inc
jb
fcmovnb
outsl
das
in
imul
daa
dec
add
shlb
daa
and
push
mov
add
and
popa
sbb
loopne
xchg
movsb
je
jns
jl
xchg
imul
shrb
ds
and
inc
stos
mov
push
or
mov
divb
sub
sub
lock
xchg
lret
or
test
jae
test
xlat
pushf
pop
cmp
aam
and
sub
out
aad
ret
addl
andl
and
push
sti
sti
mov
int3
push
fdivr
jp
out
add
nop
push
sbb
lock
mov
xor
or
fs
sub
leave
sub
es
xor
mov
and
insb
imul
pop
xchg
xchg
hlt
cmc
adc
sbb
scas
push
movsl
mov
mov
mov
popf
ja
ss
leave
push
push
jbe
add
mov
xor
adc
sub
test
jae
xor
add
lods
mov
imul
mov
pop
mov
cmp
mov
lahf
mov
jge
cmpsb
push
mov
xchg
sbb
dec
roll
lret
cwtl
xor
sbb
rorl
or
stos
dec
testb
outsl
and
sbb
xor
push
gs
sub
idivl
mov
add
loopne
xchg
add
cmpsb
pop
add
les
push
cmp
scas
jge
js
pop
mov
inc
rolb
dec
sub
inc
dec
push
rolb
movsl
les
setnp
add
rorl
sar
mov
pop
or
cmp
sub
mov
test
sbb
mov
popa
cmpb
sub
xchg
or
lock
adc
mov
sub
aas
inc
adc
sbb
sbb
ret
xchg
imul
jmp
loopne
xchg
popf
adc
fdivs
adc
xor
das
cmp
xor
push
pop
inc
or
mov
in
fstl
std
pusha
fmull
movsl
cmp
jp
ret
iret
jecxz
test
les
jnp
or
xor
add
ret
mov
dec
repz
cmp
pop
cli
call
add
adc
mov
and
outsb
inc
dec
ljmp
jl
jl
lods
clc
mov
xor
pusha
inc
rcrb
int3
xchg
add
xchg
push
scas
add
sbb
xchg
pop
xchg
xchg
cmp
mov
or
mov
scas
dec
test
inc
rcr
bound
pop
cmp
rclb
ja
sarb
add
or
sbb
sub
dec
cmp
push
insb
push
cltd
cs
mov
mov
stos
or
xor
mov
jp
mov
imul
and
mov
unpcklps
sar
mov
out
jp
pop
or
and
lds
push
xor
adc
adc
xor
push
cmpsb
push
or
sbb
mov
dec
add
into
fistpl
jb
xchg
xchg
les
loop
imul
leave
push
mov
pop
mov
in
mov
xor
pusha
rcll
cmpsb
xor
shrl
outsb
sub
and
cmp
dec
mov
xchg
cmpsl
roll
lds
mov
std
shlb
xchg
outsb
or
ljmp
cli
or
add
mov
fiadds
aam
lret
pushf
cltd
mov
roll
pop
sbb
pop
inc
sub
fisttpl
and
in
or
lds
push
pop
pop
mov
std
cmpsl
cld
xorb
sarb
fsubrl
out
je
movsb
inc
insl
mov
dec
subb
popa
cld
std
mov
add
ss
sbb
jle
pop
negb
jbe
in
inc
lret
divb
pop
jae
jge
or
sti
sub
lcall
pop
push
in
mov
int3
xchg
mov
cmpsl
shl
fldl
sbb
mov
add
cld
out
sub
icebp
test
sbb
fisttps
mov
shll
dec
enter
out
xchg
inc
cmp
pop
adc
ja
sbb
adc
lock
xchg
mov
sub
mov
jp
adc
cmp
aas
popf
jne
fnstenv
orl
das
xchg
divb
cmp
sub
add
stos
out
mov
sub
add
sbb
dec
ja
adc
dec
sti
pop
outsb
pop
push
mov
mov
or
arpl
push
push
xchg
add
lea
sbb
mov
xlat
shl
add
loope
ljmp
xchg
out
ficompl
xchg
pop
adcb
data16
xlat
aas
repnz
gs
out
in
cs
divps
int3
or
inc
pop
das
fdivl
or
inc
push
jnp
mov
movsl
out
adc
fsubp
lods
sub
enter
add
inc
icebp
pop
push
inc
lcall
orl
stos
cmp
xor
movsb
push
add
aad
xor
xor
gs
inc
dec
popa
jb
jge
fidivrs
push
addr16
xchg
mov
or
loop
test
inc
nop
mov
jbe
mov
pop
adc
mov
adc
sti
adc
imul
test
js
xchg
aam
push
and
inc
out
les
cltd
sbb
movsl
inc
add
in
pusha
push
cld
mov
sbb
dec
mov
sahf
adc
add
ja
push
out
xchg
push
xchg
mov
mov
jp
ret
and
rorl
xchg
rorl
pop
aaa
hlt
push
pusha
das
dec
mov
fs
push
sbb
jne
cmp
cmp
lahf
and
sahf
mov
cmpb
inc
dec
jae
cli
lahf
mov
mov
xlat
cmp
andb
xlat
adc
mov
inc
push
jae
dec
fcomp
in
fs
cmp
loopne
inc
mov
movsb
adc
push
insb
sti
add
imull
adcb
loope
sub
mov
call
out
add
adc
mov
and
mov
lahf
xor
in
subb
adc
scas
pop
lds
sbb
test
pop
shlb
mov
lret
pop
sbb
or
mov
jmp
xor
shll
lods
mov
aam
lret
fsubs
insl
ds
xchg
hlt
push
mov
pop
mov
or
clc
push
es
adc
add
mov
repnz
push
sbb
sub
inc
iret
sub
bound
lods
and
cmp
push
mov
and
dec
stos
pop
mov
lods
pop
ret
jl
cmp
and
jo
aam
xor
mov
xor
jmp
push
xor
mov
add
decb
cli
stos
pushl
jne
ret
out
xchg
shll
or
or
sti
push
sub
outsl
sub
gs
push
in
dec
xor
in
xlat
fisttpl
mov
adc
mov
xchg
cwtl
jns
mov
or
mov
movsl
xchg
mov
ljmp
out
pminsw
lea
das
add
cmp
inc
lret
xchg
mov
mov
mov
decl
sub
fdivs
mov
inc
loopne
fidivs
ret
ror
aas
sub
inc
pop
cli
gs
adc
mov
push
iret
popa
cmp
lods
mov
movsb
xchg
jmp
and
test
adcl
jecxz
pop
xchg
jle
add
cmpl
pop
push
cmpsb
lret
inc
or
add
in
mov
xor
push
fwait
sti
mov
int
mov
in
fwait
addr16
test
stos
lods
xor
mov
push
add
into
aas
add
shll
and
cld
subb
int
in
sbb
mov
adc
pop
sbb
repz
outsl
nop
mov
out
and
jo
and
lcall
cwtl
stos
mov
or
faddl
repz
icebp
repnz
sub
and
dec
outsb
xor
and
fcomps
sub
xchg
mov
decb
push
pop
idivl
dec
cmpsl
cmp
cmp
push
idivb
fadd
lret
notl
fsubs
js
lcall
inc
loop
jno
pushf
pop
or
jmp
icebp
jae
xlat
pop
rcll
addr16
lds
cmp
lea
add
and
fdivrs
sbb
arpl
cmpsl
in
pushf
nop
mov
clc
notb
sahf
inc
loop
les
fldenv
inc
sbb
jge
dec
imul
test
pop
push
push
push
int
repnz
lcall
push
outsb
lahf
lea
sub
fwait
jbe
ljmp
daa
mov
popf
jl
fidivrs
stc
in
jbe
int3
imul
pop
je
push
mov
movsb
lahf
jecxz
ljmp
stos
scas
aad
dec
or
pop
adc
jg
jle
mov
push
or
test
setp
mov
pop
dec
into
mov
sub
add
mov
push
mov
sti
mov
dec
stos
das
and
pop
jns
gs
mov
orl
scas
or
xor
addr16
clc
inc
mov
ljmp
sbb
icebp
push
mov
dec
inc
or
out
testb
push
dec
dec
lods
cmp
pop
lods
push
call
cmpb
xchg
push
loop
mul
mov
test
xlat
fwait
cli
jmp
inc
stc
inc
inc
adc
mov
orl
pop
fldt
sub
push
repnz
inc
jle
out
fstp
iret
mov
lahf
out
adc
jae
enter
jge
aam
fdivrl
ja
mov
fmull
fimull
je
ds
sbb
sti
sbb
push
or
xor
jg
mov
cmpsl
or
outsl
adc
dec
ds
inc
insb
lcall
lahf
in
xchg
lods
mov
and
lods
jge
divl
pushf
jle
mov
dec
mov
das
sahf
inc
addr16
and
rcrb
adc
lcall
or
mov
mov
cwtl
pop
mov
dec
out
inc
mov
and
mov
clc
jp
outsl
and
jbe
adc
jo
sbb
bound
xor
je
loop
mov
pop
out
mov
cmp
or
mov
incb
pushl
rorb
pop
stos
push
sub
testb
mov
xchg
mov
les
pop
xorb
out
fcmove
jo
inc
push
mov
jae
jle
mov
daa
cmp
and
out
ds
jb
icebp
sbb
negb
loopne
push
popa
jmp
mov
lods
ss
push
xor
fldcw
pop
out
out
adc
cltd
adc
test
cmpsl
pop
push
dec
sbb
loope
push
and
cltd
aas
adc
fisubrl
in
cltd
mov
cmp
inc
andl
ljmp
and
dec
cmpsl
int
mov
stos
mov
lds
mov
aas
jmp
shrl
mov
rcrl
sbb
dec
jmp
add
mov
movsb
and
ds
inc
jne
mov
xor
or
and
fs
xorb
pusha
inc
xchg
pop
mov
xorl
decb
dec
in
rcrl
leave
xor
les
ret
add
jp
andl
mov
dec
xor
add
out
add
xor
fidivrs
and
pop
andl
jo
movl
and
jbe
pop
imul
cmp
lret
aaa
mov
setb
mov
jbe
in
pop
clc
pop
pop
dec
pop
adc
dec
mov
or
jnp
sbb
jmp
shrb
jl
je
pop
rorl
in
jno
cwtl
mov
sahf
cld
sbb
lea
jl
roll
pop
inc
into
and
mov
dec
lods
add
add
scas
les
jmp
aad
out
xor
imul
kaddw
in
adc
daa
scas
test
add
xchg
and
add
mov
inc
cld
or
scas
repnz
sbbb
mov
outsl
sub
gs
add
xor
pop
mov
aas
out
outsl
cld
enter
jp
loopne
outsl
enter
sub
daa
out
out
mull
clc
dec
mov
div
add
add
mov
ja
adc
movsb
insl
lock
add
into
cltd
and
xchg
adc
shlb
add
movsl
sbb
mov
aaa
icebp
test
pop
js
js
pop
ja
out
imul
out
add
mov
push
popf
jmp
ret
aaa
cmp
adc
xchg
xor
pop
aas
les
sbb
sbb
xor
sub
lea
bound
inc
fistps
cli
sbb
xchg
and
dec
fs
mov
add
cmp
cmc
jnp
push
dec
mov
or
daa
sbb
sub
push
data16
pusha
es
mov
outsb
xor
insb
test
mov
and
add
lahf
dec
dec
adc
pop
mov
add
and
in
bnd
mov
sub
xor
dec
das
cltd
dec
cli
jmp
mov
aad
and
dec
sub
pusha
adc
jnp
jecxz
xor
and
inc
in
push
dec
arpl
pop
test
lea
scas
adc
nop
mov
jge
jo
cmp
jne
test
leave
mov
imul
mov
sahf
cmpsb
inc
or
dec
pop
pop
lret
lods
cli
inc
test
in
push
nop
xchg
cld
jle
jl
fisttpll
jmp
jmp
sub
fisttps
dec
dec
lods
mov
test
inc
repnz
pop
mulb
icebp
divb
xchg
pop
cwtl
lahf
jns
add
daa
roll
sbb
mov
xchg
fs
stos
mov
idivl
xchg
in
jno
lret
cmp
stc
mov
push
adc
dec
movsl
xchg
pop
sbb
cmc
adc
movsl
int
mov
leave
and
sar
mov
fimull
jg
push
sbb
pop
or
push
dec
dec
pop
add
jmp
xchg
lock
fmull
pop
add
mov
jne
pop
movsb
xor
dec
and
jg
mov
scas
fildl
xlat
xchg
sbb
pop
nop
cli
jae
faddl
int
sar
test
dec
arpl
dec
mov
mov
cli
jo
icebp
pop
leave
add
add
test
sub
imul
inc
cmp
xchg
mov
inc
iret
pop
sub
hlt
pop
cmpsb
aad
cmpsb
fwait
pop
in
mov
test
js
aam
ss
sub
rorl
adc
repnz
in
mov
and
sbb
ljmp
and
dec
pop
cld
enter
nop
mov
lea
xlat
rcll
push
popf
loope
push
repnz
lods
imul
pusha
mov
jbe
sub
fstl
cmp
adc
ja
ds
xlat
lds
mov
sub
xchg
cltd
cmpsl
imul
bound
sti
adc
js
mov
popf
roll
loop
xor
dec
leave
call
inc
or
sbb
shll
cmpsb
dec
pop
jge
and
push
push
mov
and
or
jp
nop
mov
hlt
repz
lret
in
inc
add
imul
outsl
pop
mov
stos
pop
lahf
sbb
jno
pop
and
cmpsl
lods
rorb
movsl
aas
pop
adc
mov
sub
jne
bnd
inc
push
sub
ja
sbb
test
add
xchg
push
cmpl
mull
pop
xor
pushf
out
in
xor
pushf
cmp
popf
aam
icebp
pop
mov
push
jne
sbb
inc
ja
adc
call
loop
cltd
movsl
adc
xorb
pop
in
cli
xor
and
es
xchg
and
dec
negb
in
std
insl
jae
call
aaa
sub
cmp
es
insb
sar
fldt
pop
adc
push
cmpsl
cmc
sub
or
cld
xchg
mov
pop
xchg
cmpsl
jmp
xor
add
fcmovnbe
outsl
loopne
mov
bnd
mov
mov
and
dec
insl
repnz
xchg
push
dec
inc
adc
cmpb
daa
mov
pop
jg
xchg
xor
rorb
mov
mov
in
bound
or
jne
mov
jb
shl
insb
cmp
pop
lds
out
mov
fidivrl
mov
or
leave
stos
loope
aad
jo
popa
pop
jge
push
adc
mov
cmpsb
imul
mov
mov
mov
andl
fwait
imul
or
fstps
insl
sbb
sbb
and
push
pop
test
mov
bound
iret
pop
cld
cmp
mov
test
out
pop
in
xor
mov
outsl
jmp
imul
sbb
js
scas
daa
orl
xor
movsl
inc
and
adc
inc
jb
mov
adcl
mov
repz
out
mov
pop
ds
mov
into
cmp
push
xchg
dec
add
inc
daa
sub
ds
add
jns
push
sub
test
js
cs
push
xor
aas
cs
xchg
movsb
sbb
mov
mov
pusha
flds
pop
xor
test
xchg
xchg
push
xchg
in
and
mov
out
inc
loop
mov
aaa
loop
jg
adc
int
or
data16
ret
in
out
xor
mov
or
scas
cmp
xor
xlat
cmp
xlat
aaa
dec
jge
dec
testl
push
sub
jnp
push
inc
ljmp
test
dec
push
test
pop
movsb
pushf
or
in
incl
lea
loopne
jl
or
jle
cmpsl
sbb
insb
push
int
cmp
or
sub
fwait
mov
cmpsl
repnz
cmp
sbb
leave
sub
loopne
lret
pop
fldl
cmp
lahf
inc
stos
pop
cli
addr16
insb
in
sahf
stc
and
sbbb
cltd
jp
adc
xor
or
sti
aaa
pop
lret
and
or
hlt
pop
movsl
inc
or
lods
mov
adc
addr16
mov
lret
mov
push
add
sub
insl
inc
pop
cmp
mov
int
and
jmp
pushf
pop
pop
gs
sahf
nop
test
xor
pushf
mov
cmp
xchg
lods
cmc
in
pslld
mov
insb
stos
repnz
loop
mov
xchg
push
cwtl
shll
bound
insl
mov
mov
inc
jle
pushf
dec
out
adc
mov
cmp
lea
cld
dec
nop
and
jmp
leave
fimuls
ljmp
fistps
xor
xchg
push
imul
and
inc
mov
cmc
dec
jecxz
jo
in
ret
ss
jb
push
dec
and
sub
mov
cmp
rcr
movsb
adc
test
push
clts
cmp
lods
cli
das
dec
dec
gs
push
mov
or
not
loope
lods
xlat
sbb
add
das
or
adc
pop
and
jg
or
mov
es
cmp
xor
sub
loopne
sub
xchg
repnz
addb
hlt
in
rcrl
dec
enter
test
leave
popf
ret
pop
push
jns
das
sub
test
mov
add
test
or
xor
inc
cmp
or
ds
mov
mov
cs
mov
jbe
lock
inc
mov
pop
addr16
inc
dec
out
fstpt
mov
dec
scas
test
and
repz
add
or
cmp
and
jae
fsubrl
repnz
cmpb
adc
pop
ljmp
ljmp
outsl
inc
cltd
sahf
add
repnz
or
pop
add
jns
jmp
insb
pop
pop
fnsave
je
mov
stos
lods
adc
cmp
or
push
pushf
adc
pushl
sbb
aad
cld
sbb
and
out
out
pop
jb
rol
jne
repz
rol
sbb
xor
jge
ja
xor
insb
inc
mov
xchg
insb
outsb
mov
pusha
lods
xchg
adc
mov
out
inc
in
fidivs
lods
and
sbbl
mov
sbb
xor
sbb
loopne
and
and
scas
adc
xor
adc
jle
in
push
movzbl
mov
or
mov
xor
cmp
in
rcrl
popf
das
pop
shr
sahf
xchg
data16
clc
inc
lret
hlt
sbb
pusha
insl
dec
xchg
pop
hlt
xor
inc
aaa
int3
test
add
bound
or
sub
sub
lret
fldcw
test
dec
mov
jns
movups
sub
xchg
cmpsl
sbb
test
std
int
loop
mov
mov
and
int
hlt
sahf
int
outsb
mov
inc
mov
mov
xchg
aam
jp
dec
stos
mov
cmp
ret
mov
mov
xor
ret
or
les
dec
sub
dec
pop
pushl
mov
xchg
data16
nop
jb
xor
and
mov
push
dec
add
and
xlat
cmp
mov
inc
inc
insl
test
sbb
push
cli
inc
adc
push
lcall
add
xchg
inc
and
lds
in
pop
or
xor
shlb
inc
jbe
pop
loopne
lods
sub
scas
js
mov
mov
scas
mov
cmp
cmp
data16
std
mov
fs
sbb
hlt
arpl
mov
faddp
rcrb
jg
ret
loop
ss
xchg
sbb
mov
in
jmp
scas
or
pop
pop
cmp
rorb
jmp
ffreep
adc
cmp
push
lds
dec
push
inc
out
mov
push
cmp
inc
ret
call
pop
push
popf
mov
shr
fiaddl
shr
pop
inc
rol
aad
jno
bound
stos
call
dec
add
ret
or
movl
mov
imul
cmp
pop
pop
cmp
scas
pop
cltd
adc
mov
mov
aaa
cmp
xchg
adc
push
sarb
cmp
shlb
inc
int
cmp
jnp
rcrb
in
mov
push
sub
cmp
pop
in
adc
call
sbb
inc
mov
stos
inc
mov
shrl
and
movb
clc
or
mov
popa
out
int
repz
outsb
stos
or
dec
mov
into
iret
incl
ljmp
jae
cmpl
repz
pop
pop
mov
adcb
cltd
xchg
xchg
xor
and
cmp
pop
push
push
add
and
clc
sub
in
out
test
mov
popa
pop
addb
out
loop
sti
xchg
xor
clc
dec
repz
inc
inc
scas
nop
dec
enter
ffree
inc
lret
and
out
sub
cmp
jae
jmp
pop
xlat
push
insl
pushf
cmc
cwtl
testb
and
jl
fnstenv
jge
test
pop
jecxz
imul
hlt
loop
hlt
jge
mov
jbe
mov
xchg
push
test
pop
add
sub
fs
and
std
js
adc
cmp
jg
inc
icebp
xorl
mov
gs
popa
pop
inc
data16
adc
jnp
fldl
mov
jle
movsl
xor
ret
and
insl
fdivp
fsts
mov
sub
sbb
nop
adc
out
inc
sbb
mov
pop
xchg
sub
pop
fdivrp
sti
push
and
adc
inc
sbb
push
add
push
sti
xor
xchg
mov
adc
fptan
loope
sub
jae
xchg
stc
and
push
mov
push
aad
jmp
add
jbe
dec
sahf
fldt
outsl
and
sub
mov
lock
adc
or
xor
cmc
movsb
lds
mov
sti
pop
mov
xor
je
add
loopne
fisubl
in
in
lods
push
aaa
adc
mov
shlb
lods
fwait
leave
add
mov
loop,pn
add
lcall
scas
and
adc
cmp
xor
inc
dec
lret
jl
ss
or
ss
out
mov
pop
mov
loope
loopne
jle
jbe
push
or
pop
jo
xor
mov
xlat
dec
jns
sub
daa
mov
sti
pushf
cli
fwait
aam
push
adc
js
sbb
out
daa
in
sub
dec
dec
xchg
cwtl
movsl
jmp
lods
lock
mov
and
dec
inc
es
xor
iret
fdivrs
and
adc
leave
mov
in
pop
lcall
dec
mov
pop
ja
ficompl
hlt
lcall
rcr
in
xor
cmp
inc
and
push
icebp
jnp
fwait
lcall
mov
aaa
rcll
mov
ret
stos
cld
loopne
pushf
cmc
jl
icebp
insb
xor
fisttps
mov
pop
jmp
mov
movsb
sbb
movsb
sarl
jp
cwtl
add
movsl
mov
idivl
inc
add
pop
arpl
mov
jle
popa
add
jecxz
jle
adc
sahf
mov
push
pop
mov
mov
dec
data16
cmpsl
xor
xorb
cli
pcmpeqb
adc
mov
push
in
pop
xor
mov
cmc
iret
mov
mov
add
add
into
sti
and
inc
cmp
mov
mov
push
subl
clc
leave
pop
push
xlat
fs
mov
pop
fistps
push
fsubl
rcrl
jo
shll
fdivrs
pop
paddusw
add
mov
jae
repnz
xchg
mov
popf
and
out
jo
je
cmp
jmp
scas
es
xchg
sub
aas
jae
push
int3
pop
shld
sub
adc
test
inc
jg
addr16
arpl
push
js
push
imulb
sbb
push
sbb
push
pop
jg
test
dec
dec
dec
mov
ret
ret
push
or
add
adc
leave
add
inc
lret
mov
js
and
pop
cli
ret
pop
add
fwait
aam
xor
mov
mov
rclb
mov
test
push
pop
mov
divb
pop
iret
test
ret
push
sbb
cli
sub
aad
or
mov
movsb
xchg
sti
cmp
int
push
lret
jae
push
fyl2x
pushf
xchg
cmp
jle
js
cmp
adc
in
gs
jg
mov
jecxz
mov
lods
popf
in
mov
rcl
xchg
shlb
dec
xchg
cmp
xor
dec
dec
add
sub
orl
add
cmc
sub
cmp
jecxz
lods
sbb
mov
mov
pop
sbb
add
into
notb
cmp
test
push
mov
xor
jb
ret
shll
in
js
dec
gs
add
mov
push
cld
mov
sub
xchg
cld
pop
xchg
xchg
pusha
icebp
call
clc
mov
add
testb
lcall
jle
xchg
test
int
fndisi(8087
addr16
inc
scas
fcoml
fwait
out
pop
lock
in
aaa
mov
push
push
in
jo
inc
out
fbstp
pop
push
xor
leave
sbb
push
pop
pop
cltd
fs
sbb
pushf
inc
stos
mov
out
scas
jbe
xor
inc
mov
cmp
cmp
lods
lock
arpl
mov
insl
push
lds
push
inc
outsl
cmp
das
mov
push
outsb
inc
push
aaa
mov
jmp
mov
or
fldenv
or
sbb
mov
jecxz
adc
push
or
adc
mov
push
inc
xor
fs
push
dec
iret
insb
and
sub
cmpsb
or
in
pop
lods
ficoml
push
popf
rcrb
sbbl
inc
mov
xchg
xchg
hlt
mov
push
out
lods
test
and
sbbl
dec
jmp
out
and
fistl
xchg
and
lahf
rcr
cmpsl
rcrl
sub
ss
ss
and
cmp
dec
pop
movsl
adc
pop
fisttps
icebp
inc
in
repz
inc
pop
add
jno
cmp
js
cli
sbb
loop
add
scas
cli
out
pop
rorb
mov
pop
test
dec
cmp
mov
push
inc
das
pop
imul
dec
pop
jae
cmp
dec
mov
lcall
mull
arpl
sbb
lahf
ret
mov
mov
dec
ss
push
mov
inc
addr16
push
leave
or
ljmp
xor
imul
loopne
insb
aas
mov
mov
push
mov
cmpsl
mov
xor
jno
add
jb
fisubl
cmp
dec
mov
out
cmpl
ret
jmp
push
lods
or
xchg
cmp
cmc
jp
jg
lret
push
adc
xor
fisubl
or
aas
jae
pop
movsb
in
or
mov
dec
sarb
sti
outsb
pop
xlat
sbb
xor
mov
add
mov
lahf
xchg
pop
push
and
pop
push
test
loop,pn
cmp
push
fidivl
aaa
scas
push
shlb
cli
mov
dec
loop
push
mov
add
mov
mov
jns
icebp
lret
lods
ljmp
xorb
mov
and
pop
pusha
cs
shll
mov
clc
sbb
xorl
test
inc
fildll
inc
into
sbb
add
xor
mov
pop
xor
inc
pop
stc
xor
sub
sarl
or
push
fldt
mov
hlt
mov
add
faddp
cmp
and
pop
sbbl
cmp
or
cmpsl
adc
ftst
mov
push
icebp
or
in
xchg
repnz
in
lods
push
stos
mov
outsl
or
pop
push
daa
pop
xor
in
push
inc
sub
int
xchg
sub
lcall
loopne
push
push
add
movsb
inc
or
jnp
xchg
jo
dec
and
adcb
dec
pop
insl
les
sub
mov
push
ret
pop
xchg
jo
insb
divb
xor
pop
cmp
cmpsb
je
aaa
shll
add
xorb
adc
inc
iret
and
mov
icebp
xchg
jge
xor
jno
or
repnz
jl
inc
lret
sbb
sbb
and
loop
sub
and
out
and
mov
mov
repnz
xchg
pop
xchg
pop
jb
ljmp
stos
cmp
mov
sub
div
lret
xlat
ret
bound
mov
xor
insb
cmp
xor
inc
xchg
cmp
loope
xchg
add
imul
mov
xchg
dec
and
imulb
pop
sub
clc
mov
adc
pop
stos
rol
adc
mov
dec
into
vcvtsd2si
data16
dec
jl
mov
fcmovu
pop
mov
jo
xor
xchg
mov
cs
dec
mov
cmp
mov
sbbb
outsl
fiadds
mov
outsl
ret
mov
std
pop
mov
loope
call
push
add
mov
push
lcall
aad
xlat
ror
lahf
dec
xorl
mov
ret
loop
sbb
dec
push
add
jg
lahf
jbe
mov
cmpsl
cld
and
xor
lcall
icebp
inc
cmc
jl
mov
push
inc
test
mov
dec
ret
add
fs
inc
cmpsl
sub
pop
inc
imul
iret
add
dec
cmp
inc
mov
aam
minps
jae
inc
cmc
les
leave
hlt
int
push
test
jmp
and
sbb
jbe
je
sbb
lods
sub
pusha
or
in
je
lock
iret
sbb
cwtl
push
cli
inc
fs
cmp
sahf
inc
cld
shlb
jae
std
cltd
pop
mov
gs
dec
jo
not
sbb
sbb
nop
ficomps
jne
fwait
jmp
add
inc
or
inc
imul
add
push
pop
sbb
fadd
in
mov
jecxz
push
or
jecxz
lods
push
inc
xchg
test
gs
inc
adc
popl
test
inc
dec
pop
cmp
pushf
daa
stos
js
jl
push
sarl
mov
lods
lahf
stos
loope
mov
pop
xchg
inc
and
hlt
xlat
enter
mov
adc
mov
mov
test
cmp
jl
insl
xor
push
cmp
nop
xchg
int
mov
adc
out
aam
test
jmp
fisubl
sarb
mov
lods
aas
pop
outsl
and
je
sahf
jb
lock
pop
clc
imul
mov
fcomi
inc
inc
out
xor
pop
cmp
out
cmpsl
das
cmp
les
sub
pop
cmpb
xchg
inc
mov
mov
jo
jnp
fdiv
dec
je
sub
mov
repz
sbb
sbb
insl
nop
xchg
xor
std
sbb
in
pop
movsb
pop
int
cltd
fwait
mov
inc
repz
xor
cli
test
fimuls
repz
std
stos
mov
cli
int
jb
daa
movntq
aam
movb
ja
mov
rcr
insb
xorl
or
or
cmp
mov
pop
scas
add
jp
sub
xor
add
cmp
cmp
xchg
and
jecxz
loop
sbb
cltd
pushf
and
data16
push
inc
in
lods
test
test
leave
push
fbstp
and
inc
push
jl
ja
inc
pop
lret
pop
jl
mov
stos
cs
dec
popf
jnp
adc
sahf
cli
push
inc
xor
xchg
int
pop
pop
inc
dec
sbb
xor
mov
jae
decl
push
icebp
and
or
xor
sbbl
icebp
adc
jb
push
sub
movsl
or
sbb
ds
bound
inc
mov
jae
add
jp
cmpb
inc
bound
lahf
ds
ss
ror
adc
mul
fs
add
aas
test
into
add
cwtl
mov
faddl
adc
add
lods
push
les
je
cltd
or
fstpl
out
add
dec
es
mov
mov
dec
repz
lcall
mov
scas
inc
xchg
inc
mov
and
mov
and
lods
lahf
imul
test
mov
cltd
sti
xor
outsb
out
in
push
pop
jno
insb
lret
adc
inc
mov
das
imull
faddl
scas
xchg
ljmp
adc
stos
inc
scas
repnz
loope
imul
mov
pusha
add
mov
xor
dec
adc
stos
dec
in
jmp
int
insb
inc
cmp
pushf
mov
shlb
xchg
sti
sbb
pop
rcr
enter
pop
outsb
das
cmp
cmp
jge
stc
sbb
ret
sbb
inc
mov
sub
lret
cld
push
std
pop
pop
adc
arpl
call
ljmp
ds
adc
addr16
mov
push
xor
cli
push
scas
jl
dec
adc
in
popf
xchg
icebp
adc
inc
cmp
inc
sarl
mov
ja
or
aas
mov
ja
mov
cld
mov
popf
jl
pop
stos
jge
into
clc
mov
repz
jp
punpcklwd
lds
push
fwait
out
dec
ficoml
loope
cmpsl
das
cmp
mov
or
mov
adc
mov
pushf
das
jge
sub
cmpsb
iret
mov
test
sub
sub
adc
push
hlt
cmp
cwtl
sub
xchg
dec
pop
mov
sub
or
pop
out
ds
pop
xchg
lret
test
jl
mov
jmp
sbb
mov
or
sub
pop
cltd
test
shrb
and
test
and
sbb
dec
mov
xor
jl
test
add
push
fwait
das
mov
fdivl
repz
sub
mov
mov
dec
mul
add
outsb
adc
aaa
enter
jmp
xlat
xchg
sbb
mov
xchg
push
jle
lret
cmp
mov
add
fisttps
and
in
mov
inc
xchg
sarl
and
mov
xchg
sbb
int
in
adcb
outsl
fs
lcall
out
je
mov
lock
in
pusha
cwtl
loopne
rcr
out
xchg
ret
xchg
adc
inc
std
or
pop
dec
xor
ds
inc
aaa
jbe
jge
add
stc
pop
jbe
enter
dec
mov
jmp
loope
enter
dec
adc
xchg
mov
xchg
orb
xlat
jmp
xchg
mov
inc
int3
stc
inc
hlt
loop
out
movsl
dec
ud1
cmp
movsb
arpl
sub
mov
jnp
adc
mov
test
cmp
jle
sti
mov
pop
lcall
inc
cmpsb
rcrb
inc
adc
mov
into
xchg
iret
mov
adc
subl
in
hlt
inc
fstl
into
and
pop
cli
mov
and
mov
iret
push
inc
mov
movsl
inc
insl
sub
out
adc
imul
cmp
fisubrl
lahf
into
in
std
fistl
mov
push
inc
cmp
gs
mov
jbe
movsl
fidivrs
cmp
cwtl
mov
outsb
je
mov
aaa
mov
cmp
jno
dec
ret
xor
mov
cmpl
icebp
xchg
mov
arpl
int
lods
mov
lods
dec
into
sar
rorl
sbb
adc
aad
xlat
popaw
dec
in
lret
mov
imul
xor
pop
mov
fs
ret
push
ds
adc
mov
sahf
test
test
jle
jg
pop
xor
push
sub
lock
and
lcall
sbb
adc
push
xor
inc
pushf
adc
jnp
adc
loopne
cmp
push
dec
push
adc
shlb
jne
sub
ljmp
jno
rcrl
das
xlat
cli
mov
daa
int
mov
imul
dec
adc
push
pop
add
jecxz
pushf
fs
fld1
jecxz
sub
dec
jne
jge
sahf
push
mov
mov
in
idivb
cld
sti
scas
mov
cltd
cmp
add
pop
in
gs
movsl
push
cmp
fstpl
add
rcrb
outsb
sub
push
push
mov
and
loope
push
test
lds
in
inc
cmp
fwait
fwait
and
add
xchg
mov
push
mov
stos
jns
jle
test
dec
iret
hlt
movsb
and
push
loop
fidivs
in
in
push
ljmp
xchg
xchg
stc
or
in
decb
pop
xchg
aad
fs
xchg
pop
outsl
mov
or
lret
stos
xor
dec
in
cld
sahf
jnp
pop
out
xor
mov
rorb
sub
fldl
dec
adc
lahf
sahf
mov
pop
jne
mov
add
test
ficoms
inc
aaa
repz
enter
in
js
xor
idiv
rcrb
xor
ret
mov
cmp
pop
xlat
cli
mov
pop
inc
inc
xor
mov
inc
sbb
hlt
fldpi
cs
cmc
xchg
push
jae
jle
mov
dec
and
mov
pop
cwtl
shl
mov
pusha
and
fsub
pop
sarb
cmp
xchg
insl
ret
mov
sbb
xchg
sub
jmp
mov
int
pop
mov
std
test
push
fisubl
dec
nop
push
xchg
sub
pop
mov
cwtl
mulb
push
daa
add
clc
fbld
sub
gs
mov
xchg
in
jo
and
sbb
mov
cs
lods
xorps
mov
push
mov
xor
and
inc
push
lock
or
dec
sbb
jnp
xor
lea
outsb
shlb
add
and
jmp
xchg
ds
mov
xor
sbb
incl
mov
stos
push
jge
dec
pop
push
jnp
int
test
addb
push
mov
ret
inc
or
ret
adc
leave
cmc
mov
pop
rolb
stos
sub
inc
push
xlat
and
gs
lods
dec
int
cs
mulb
outsb
pop
adc
or
leave
sub
xor
xlat
das
xchg
jo
fbld
push
adc
cmpl
es
loop
mov
adc
bound
cli
call
lea
push
jg
inc
dec
xchg
inc
sti
loopne
stos
dec
je
add
mov
ret
mov
cwtl
in
shlb
movsl
mov
push
in
cmp
jp
dec
loop
imul
bnd
cmp
xchg
mov
mov
xchg
ficompl
mov
adc
sub
loopne
jno
arpl
and
jg
jmp
addr16
frstor
adc
dec
add
in
movsl
andl
mov
inc
je
test
hlt
pop
in
outsb
lods
sbb
sbb
inc
insb
xchg
stc
cmp
push
and
xor
and
or
in
ret
add
out
test
xchg
imul
mov
cmp
fwait
sahf
nop
clc
and
fmuls
add
xchg
xchg
sti
lea
ror
fs
inc
or
dec
in
mov
jo
out
xchg
cltd
dec
and
push
bound
pop
pop
call
add
push
push
lods
outsb
notl
mov
and
jecxz
gs
fwait
cltd
cmpsl
mov
add
fldcw
mov
mov
add
cltd
sti
imul
fcmovnbe
mov
out
stc
scas
pop
cmpsl
xor
orb
mov
pushf
sub
pop
inc
fdivs
and
pop
and
movsb
lods
lds
adc
pop
jge
push
adc
and
cmp
enter
fstpl
cmc
xor
mov
pushf
push
mov
test
xlat
mov
push
loopne
mul
push
fnstsw
rorl
or
dec
push
pop
jp
mov
test
ljmp
xor
xor
mov
push
ljmp
nop
cmp
mov
cmp
repnz
mov
call
xor
push
push
ljmp
loopne
push
mov
cmp
pop
push
push
xchg
insb
inc
pop
jle
lds
inc
aam
or
jnp
jl
add
xchg
dec
mov
sub
sub
lea
xor
out
std
clc
sarl
mov
je
outsb
xor
stos
test
out
andb
sarb
dec
sahf
aam
inc
vcvtsd2ss
lods
jnp
fmul
and
sbb
popf
das
mov
xchg
push
add
xorl
iret
pop
mov
fcmovne
xchg
shll
cmpsb
lods
lods
push
inc
in
sbb
and
leave
dec
pop
sti
add
add
jecxz
outsb
fnstenv
aad
and
inc
jp
out
movsl
xchg
insb
pop
cmc
jp
test
fmull
inc
dec
push
pop
xorb
pop
inc
iret
pop
bound
shl
mov
jae
cmp
add
arpl
inc
into
sub
mov
movsl
xchg
out
adc
outsw
or
in
insl
arpl
xchg
inc
xor
loopne
pop
pop
jp
lods
inc
push
insl
andl
je
pop
add
inc
dec
rorb
insl
stos
dec
and
xchg
push
fistps
flds
sarl
sbb
inc
fadds
cmp
test
push
sub
and
jmp
add
mov
stos
adc
mov
adc
rcll
xor
adc
dec
rolb
leave
stc
outsb
push
jecxz
sub
push
jg
testl
ljmp
insb
xor
ja
popf
mov
cmp
cs
mov
mov
mov
dec
ret
pusha
mov
adc
and
pop
adc
mov
push
sbb
xor
push
iret
xchg
xchg
dec
cwtl
stos
les
mov
into
dec
imul
call
pop
add
dec
adc
jnp
jnp
scas
test
add
sub
push
xchg
in
cmpsb
mov
jo
imul
dec
dec
xchg
movsb
xor
imul
decl
xor
pop
jno
push
jg
or
cmp
mov
scas
iret
push
mov
or
adc
dec
in
pop
arpl
sbb
push
sti
testl
filds
xor
inc
fldt
cmpsb
or
ret
push
add
add
xorb
jle
in
sbb
ret
shll
jg
pop
stos
mov
out
test
cld
xlat
bound
push
sbb
push
das
in
adc
xchg
int
outsb
fists
outsl
add
fwait
insb
or
sbb
xor
jge
xor
fildll
cwtl
push
lea
push
cmp
jo
or
mov
and
push
adc
adc
rcrb
cmp
cmp
lods
out
icebp
jge
xor
scas
jae
mov
xor
inc
xor
sub
mov
std
add
pop
pop
andl
imul
push
testl
jnp
insl
mov
cld
mov
int3
mov
fimull
and
aam
lret
outsb
leave
lea
pop
sbb
loopne
aas
push
or
sbb
ret
sub
push
cmc
mov
dec
scas
mov
inc
loopne
arpl
jmp
mov
subl
loope
cwtl
mov
nop
mov
mov
xorb
lcall
lret
test
dec
mov
nop
lahf
adc
add
mov
in
mov
movsl
bnd
ljmp
call
mov
cmpsb
or
in
push
js
jmp
in
add
test
je
xchg
adc
mov
fsubrl
movsb
outsl
dec
mov
int3
mov
push
stos
dec
pop
shl
sahf
fisubs
adc
jg
add
push
hlt
inc
adc
ds
add
repnz
mov
stos
outsl
xchg
mov
cli
mov
add
movd
mov
testl
cmpsl
adc
stos
sbb
add
pop
push
pop
jbe
mov
pop
popf
lret
sbb
sbb
or
dec
mov
push
sar
dec
xchg
pop
cmp
push
rorb
mov
frstor
aas
imul
in
ja
enter
jmp
mov
sbb
outsb
pop
add
mov
insl
pusha
jbe
fs
aas
sbb
stos
sub
insl
add
out
add
ljmp
test
push
sbb
andb
ja
fs
movsb
add
jmp
cmpsl
sub
pop
push
push
adc
jle
cmc
daa
add
pop
and
mov
cmp
pushf
mov
ret
pushf
es
sbb
aam
sbb
adc
xchg
imul
or
in
repnz
add
cs
and
cmp
rolb
cmp
inc
mov
pop
pusha
test
daa
mov
in
cmpsl
and
or
xchg
cmp
movsl
pop
adc
loope
fs
cwtl
mov
and
inc
sti
lock
pop
inc
cld
push
aas
push
inc
mov
cmp
cs
int
jne
dec
push
nop
mov
insl
pusha
adcl
popa
xchg
cmp
fwait
mov
aad
xor
cmp
mov
in
loopne
pop
xor
and
jne
cmc
or
lods
add
xchg
inc
bound
jb
cld
mov
imul
jb
xor
dec
jbe
repz
lods
repnz
mov
das
push
mov
and
mov
pop
inc
jmp
test
push
jnp
loop
sbb
mov
shlb
repz
shlb
inc
dec
out
loop
out
fstpl
cltd
jg
cli
sbb
push
cmp
jp,pn
push
fimuls
mov
pop
shll
es
jg
repnz
dec
push
add
inc
pop
insl
gs
add
xor
and
adc
sub
and
ret
repnz
lret
test
out
adc
jg
cmp
cmpsl
into
adc
push
sub
cwtl
cmp
sahf
pop
roll
stos
add
test
dec
sub
nop
sub
xchg
in
lods
sbb
scas
cwtl
in
inc
test
out
ja
lods
adc
add
stc
mov
in
push
xchg
add
sbb
insb
add
mov
scas
mov
lret
sub
adc
cmpl
call
adc
jae
outsl
and
adc
fld
sbb
repnz
cld
pop
iret
shrl
test
lcall
pop
push
cwtl
jmp
sub
rcrl
aaa
shll
movsb
jne
xor
cmp
adc
lret
mov
mov
loope
popf
in
repz
outsb
fildl
xchg
xor
xchg
add
jne
stc
insl
mov
push
pop
loop
fwait
aaa
mov
dec
mov
imul
push
flds
lret
je
lret
imul
pop
dec
cmp
loope
lret
hlt
pop
jae
push
ja
out
call
scas
xchg
inc
shll
cli
pusha
xor
cwtl
mov
clc
push
cld
out
push
int
mov
jp
and
or
ja
sbb
es
xchg
out
xor
test
in
aad
mov
flds
dec
gs
fstpl
sub
jae
or
rcrl
nop
mov
fdivl
push
pushf
rorl
jecxz
and
adc
in
mov
sti
pop
adc
cwtl
sbb
pop
mov
cltd
into
scas
add
sahf
dec
mov
mov
jg
movsl
pop
test
push
cltd
mov
test
arpl
lcall
lcall
jl
mov
jae
pop
mov
and
jge
dec
stos
xchg
test
inc
mov
divb
test
pop
int3
shlb
stc
daa
ret
xchg
lods
or
ret
pop
popa
add
sub
xor
add
add
cmp
ret
sahf
stos
ja
sub
push
outsl
push
push
and
push
xor
das
push
sub
aad
pop
and
aad
lea
mov
loope
lods
xchg
sbb
adc
jbe
scas
fwait
dec
dec
test
cmp
les
ret
popf
pushf
sbb
xor
sub
dec
imul
lods
jnp
jecxz
loop
xchg
mov
jmp
mov
movsl
push
pop
sub
mov
pop
push
adc
hlt
in
xchg
dec
in
xchg
pop
daa
aad
pop
lahf
cmp
push
into
pop
fucomp
shrb
das
pop
push
xchg
mov
das
jne
push
hlt
shll
enter
je
fcomps
in
test
add
mov
xor
mov
adc
mov
dec
ljmp
outsb
xchg
jle
movsl
ja
sub
es
ljmp
std
mov
and
add
push
mov
pop
in
mov
orl
fwait
enter
in
sahf
enter
loopne
aad
bound
test
fildll
mov
pop
outsb
mov
pop
stc
push
or
ret
lds
pusha
mov
popf
pop
add
movsb
or
mov
rcr
push
arpl
mov
xchg
orl
scas
adc
jle
pop
cmp
testl
sub
lods
mov
ret
and
jp
jne
int3
stos
pusha
lods
add
hlt
mov
cmp
adc
enter
inc
in
rcll
aaa
insb
jg
adc
mov
mov
lds
loopne
cmp
test
cmp
jno
push
push
fisubrs
mov
adc
lds
jbe
jnp
add
inc
sbb
mov
jmp
fadds
adc
and
jnp
mov
sub
and
lea
subb
adc
and
insl
xchg
push
inc
les
push
xor
push
fucomp
push
les
insl
cmp
adc
inc
sub
mov
movsl
sub
adc
popa
out
jno
std
test
cmp
xchg
in
sub
mov
sahf
sbb
shlb
insb
jg
out
mov
popa
push
sarb
push
jg
mov
imul
xlat
mov
push
shlb
fsubr
leave
mov
cli
adc
cmp
scas
mov
xor
inc
scas
cli
test
add
sbb
leave
outsb
cmp
arpl
xchg
push
lock
dec
and
dec
xchg
push
jecxz
addl
pop
nop
int3
add
ret
mov
add
adc
sbb
gs
clc
popa
pushfw
ss
mov
outsl
lock
add
pop
lods
addr16
push
xchg
ss
andb
and
lahf
or
cltd
dec
inc
hlt
xor
arpl
out
jae
adc
iret
and
sub
int3
das
jge
loop
sub
xchg
outsl
pop
sbb
sahf
shll
pop
pop
push
ja
pop
inc
jecxz,pt
sbb
stos
pop
daa
fsubrs
push
adc
mov
jo
push
push
out
xchg
jo
mov
xor
cmc
or
sbbb
movsl
test
out
mov
cmp
push
lret
xchg
push
out
dec
adc
test
pop
or
mov
inc
and
jmp
inc
mov
int
jle
or
xchg
dec
ss
je
mov
gs
test
xlat
mov
jp
repz
pop
mov
xchg
jge
cmp
sub
jmp
mov
lods
das
movsl
repz
lea
lahf
mov
je
sbb
mov
pushl
repnz
aas
cwtl
inc
fadds
out
push
adc
inc
rorb
cmpsl
xorl
sub
in
dec
sbb
jnp
int
rcl
pop
scas
push
mov
adc
adcb
jl
cmp
add
les
add
or
xor
dec
in
fisttpl
insb
lock
hlt
mov
push
stc
fcoml
xlat
icebp
rcrl
xchg
jecxz
push
xor
lret
jb
and
outsb
cmp
movsb
fsts
mov
in
xchg
xchg
add
ja
in
pushf
movsl
lahf
aam
mov
cmp
and
mov
or
shlb
pop
out
test
arpl
cltd
pop
pop
imulb
jb
stos
pop
xor
cmp
xchg
lods
push
mov
inc
xor
push
fdivp
addr16
sbb
sti
mov
pop
div
adc
and
sbb
xlat
rcll
pop
out
jbe
sub
mov
aaa
lcall
adc
pop
jmp
xchg
mov
xchg
lea
mov
inc
shll
mov
mov
xchg
pop
mov
ljmp
cli
sub
leave
ss
cmp
sub
mov
fdivrl
ljmp
sahf
stc
lods
adc
sub
mov
jmp
js
out
push
adc
inc
je
popa
sbb
das
add
dec
sub
lcall
push
sub
sub
xor
pop
arpl
inc
mov
jl
adcl
pop
dec
and
adc
push
movsl
sub
popa
pop
cwtl
test
outsl
cmp
cmp
les
adc
or
dec
lods
leave
fwait
add
call
inc
stos
icebp
jecxz
repnz
andb
mov
mov
test
cmp
inc
idivb
adc
orl
call
fistpl
aaa
divb
psubsw
fdivr
xlat
mov
inc
pop
mov
fildll
movsb
das
add
and
cmp
xor
aad
hlt
scas
iret
xchg
xchg
sbbb
mov
ss
out
sbb
add
fidivs
dec
loope
aas
fs
int3
sub
ret
stos
loope
sbb
outsl
cmp
push
push
jno
jo
das
subl
push
pop
test
repnz
jne
pop
xchg
mov
dec
jge
fucomi
push
lock
js
xchg
pop
mov
cltd
aam
repnz
adc
cmpb
add
push
pusha
xchg
ja
push
outsb
mov
test
xchg
adc
push
cmp
mov
push
andl
shl
adc
inc
lret
ret
or
inc
mov
jne
sbb
mov
fcmovnb
cmpsl
lahf
add
iret
imul
jae
sar
cli
loop
sbb
jl
sub
mov
xchg
mov
leave
clc
in
gs
outsl
cmp
mov
call
dec
dec
xchg
dec
repz
test
mov
nop
push
cmp
pop
mov
xor
or
imul
idiv
add
lret
mov
push
aad
or
mov
jbe
scas
nop
test
jo
mov
or
add
dec
test
dec
fsts
cltd
int
gs
push
fsts
stos
sub
in
es
lcall
movsb
cmpsl
cmp
nop
divl
popa
xchg
lret
xchg
les
lcall
or
push
lods
js
sbb
mov
ret
xor
inc
cld
inc
lret
sub
mov
cmpsb
cmp
arpl
add
push
inc
sub
sbb
adc
and
loope
jb
out
xor
or
inc
pop
jae
mov
jno
sub
cld
mov
imul
gs
push
leave
int3
sub
into
addb
lods
fwait
hlt
xor
xlat
jmp
push
notb
cmp
pop
xlat
dec
or
cmp
jns
out
jo
scas
cmpsl
lret
push
sbb
pop
das
or
push
xchg
jb
pop
and
xlat
sbb
sub
mov
lds
movsb
jne
cwtl
or
adc
push
mov
fisubrs
movsb
dec
jne
ret
movsb
jmp
int
cltd
stos
xchg
bound
mov
in
stc
mov
lea
mov
iret
jg
enter
adc
lret
cld
out
rorl
stos
loop
push
mov
insb
addb
adc
daa
xor
mov
dec
cmpsb
mov
out
push
iret
mov
sbb
gs
pop
jbe
outsb
push
dec
in
adc
sub
fstp
mov
pop
aam
cltd
jp
add
pushf
je
jnp
inc
jb
mov
iret
inc
adc
lods
xchg
icebp
inc
lea
add
sbb
jns
jl
movsl
mov
sti
sub
jle
popf
xor
xor
out
bound
cmp
or
inc
and
std
pop
fs
xchg
inc
xchg
dec
lea
inc
or
hlt
jne
or
push
loop
jne
jb
enter
cmp
and
mov
ror
js
shlb
ds
lock
dec
sbb
shlb
sub
loopne
ja
mov
in
add
scas
jecxz
mov
dec
xchg
js
xor
xor
and
add
mov
shrb
stos
out
bound
mov
pop
loop
push
jo
mov
mov
dec
lods
orb
leave
mov
cmp
lret
lock
and
push
loop
unpcklps
or
das
push
adc
dec
xchg
jno
adc
jb
or
outsl
call
fsubl
inc
and
xor
repnz
or
dec
dec
or
shr
dec
mov
test
add
stos
std
lods
cmp
adc
pop
add
adc
inc
and
arpl
pop
or
outsb
imul
popf
popf
inc
cmpsl
pop
lret
pop
ret
mov
outsl
lcall
enter
mov
icebp
cmp
mov
or
jecxz
xchg
or
insb
fldl
xor
std
push
mov
subb
fwait
pop
xor
dec
test
push
sahf
scas
ret
add
jbe
mov
sti
xor
fisttpl
stos
test
or
cmp
add
adc
aaa
cmpsb
popf
xchg
sbb
icebp
inc
ljmp
sub
fsubl
or
inc
popf
mov
pop
nop
in
adc
pop
scas
jmp
mov
clc
bound
js
mov
cmpsl
test
out
gs
cld
stos
adc
xor
je
daa
ret
lea
or
pop
sbb
imul
adc
mov
dec
push
out
inc
notb
dec
jnp
aam
test
xchg
pusha
sarb
leave
jp
push
mov
or
dec
in
adc
and
fmull
aaa
push
lods
in
mov
test
stos
push
sbb
cmp
pop
mov
ja
mov
out
fsqrt
push
gs
cmp
xchg
lea
push
ss
rcrb
sbb
cwtl
cmpsb
out
push
in
iret
into
mov
sbb
adc
inc
mov
jge
push
sti
pop
dec
push
inc
outsl
jmp
add
or
rcl
test
pop
outsb
sahf
iret
add
iret
scas
sbb
cmp
add
fisubrs
add
stc
pop
xor
popa
inc
adc
fcom
insl
add
je
shr
test
mul
cmpl
fsubrl
pop
loopne
cmp
insb
push
fbstp
mov
divb
jno
inc
jle
pop
fcomi
inc
add
dec
mov
and
pop
scas
xchg
hlt
cmpsb
xor
fbstp
mov
or
sti
ficoms
xchg
push
pop
adc
mov
das
sbb
fcompl
inc
test
push
adc
lcall
and
push
inc
add
adc
mov
adc
jp
rcrb
nop
maskmovq
notl
pop
cmp
int
mov
sub
push
hlt
clc
mov
shl
rorb
mov
mov
adc
insb
mov
mov
xchg
jne
add
dec
add
sub
out
bnd
lahf
test
sbb
lret
outsl
sbb
orl
add
sbb
test
and
shll
mov
xchg
xchg
jae
sub
jp
ret
inc
leave
mov
addl
test
aad
sub
or
outsb
in
cmp
mov
jg
in
cmpsl
mov
in
aaa
sub
fadds
cwtl
pop
rcr
xchg
adc
sub
test
clc
popa
fcomi
lahf
shrb
cmp
fnstsw
mov
push
push
sub
pusha
mov
scas
pop
popl
mov
mov
popl
adc
jmp
push
cmpsl
mov
rolb
hlt
leave
arpl
rorb
adc
adc
mov
jg
mov
mov
aad
js
int3
iret
daa
cli
cmpsb
and
xchg
inc
mov
xor
mov
stos
jl
outsl
mov
jle
pop
cli
sarb
xor
fstl
dec
mov
push
mov
hlt
es
dec
test
xor
mov
adc
ljmp
inc
adc
pop
call
lods
xlat
dec
dec
out
stc
mov
cmp
mov
in
push
lods
jle
cmp
adc
test
mov
int3
incl
inc
or
sub
icebp
mov
lcall
cli
scas
rolb
inc
push
imul
jbe
cwtl
and
loopne
inc
sub
sbb
ret
fcoms
xchg
sbb
jae
pop
xchg
or
lahf
mov
add
cmp
xchg
test
pop
gs
aad
fcompp
test
dec
mov
push
cmp
cs
rcll
loopne
mov
pop
pop
adc
popa
inc
fmull
popa
dec
mov
cmpl
pop
mov
or
sbbb
mov
dec
sub
mov
xchg
and
ffree
jp
aaa
mov
pushf
dec
jp
xchg
leave
loopne
adc
lock
adc
stc
adc
mov
pop
or
or
add
xchg
inc
lcall
xlat
enter
int
cmc
adc
push
mov
sub
rcrl
imul
inc
sub
std
pop
adcb
dec
push
and
push
xchg
leave
inc
mov
jmp
loop
ss
mov
mov
ja
jno
mov
push
and
push
push
adc
ret
js
fildl
repnz
out
lret
sub
repnz
xor
repz
imul
imul
sbb
mov
sar
out
jb
mov
push
nop
jo
leave
cmp
or
cmp
aam
pop
out
int3
sbb
xor
xchg
mov
imull
jns
fsubrs
loop
ret
packuswb
or
enter
and
loop
adc
rcrb
add
jb
leave
mov
xchg
mov
mov
dec
inc
popa
or
jo
pop
xor
sti
addr16
aas
in
hlt
cmp
or
jo
out
and
jmp
dec
fldenv
dec
js
popf
inc
out
inc
push
xor
or
daa
insl
imul
cmp
xor
mov
bndldx
arpl
lret
cmp
call
push
mov
lds
icebp
test
sbb
cmp
movsl
rcrl
and
arpl
sti
iret
pop
lock
pop
mov
je
inc
in
das
imul
mov
cltd
cs
cmpsl
lea
sbb
push
int
xchg
dec
mov
sub
jl
pusha
data16
ljmp
call
jo
mov
je
and
adc
sahf
push
push
stc
sbb
mov
mov
dec
shl
arpl
movsl
popf
inc
outsl
jg
cs
push
pop
cmpsb
bnd
cmp
sarl
jp
mov
pop
in
or
aaa
lds
les
mov
and
cmp
jns
std
inc
jns
int
ja
stc
in
and
aam
pushf
insb
xor
and
cmpsl
dec
pop
test
je
pusha
mov
loop
jge
iret
add
cmpsl
ret
jbe
ljmp
pop
icebp
inc
mov
add
fildll
icebp
sub
dec
xchg
pop
mov
scas
inc
xchg
jge
sub
pop
loope
inc
stos
aaa
shrb
bound
mov
mov
lea
jns
jecxz
test
mov
ror
rcrl
push
test
out
fsts
mov
push
jnp
mov
dec
mov
jg
and
cmpb
mov
leave
push
and
add
add
stos
out
and
sbb
outsl
cld
dec
lods
sbb
das
das
jno
mov
mov
jl
xchg
pop
mov
popa
mov
mov
inc
adc
mov
jg
repnz
cmpsb
pusha
sub
dec
lea
sub
nop
xor
ja
jmp
fldenv
clc
pop
or
mov
popl
mov
sti
xchg
and
std
in
scas
fistl
out
addr16
cmpsl
repnz
xchg
inc
sbb
or
mov
and
and
stos
mov
out
js
jl
lahf
pop
xchg
lods
pop
or
cwtl
cmpsb
cwtl
adc
pop
jmp
cmpsl
xchg
cmp
mov
xchg
out
mov
jae
scas
xchg
fisubrl
push
and
jne
adc
int
push
xor
cmpsb
pop
nop
lock
mov
hlt
and
sub
shr
subb
testl
jecxz
jb
or
lcall
pop
clc
loop
mov
jno
mov
dec
inc
pop
fs
aam
imul
leave
xchg
rolb
daa
shlb
dec
jecxz
cmp
xchg
dec
ljmp
or
cmp
add
dec
mov
xor
test
cmp
fsts
popa
jbe
lea
int3
cmp
addr16
xor
repz
xchg
xlat
push
jmp
push
hlt
in
or
xchg
xchg
ret
pop
mull
cmp
fsubs
in
cmpsl
aas
jb
cmp
les
pop
xchg
push
sti
iret
subb
adc
adc
adc
push
mov
jmp
adc
sub
lods
mov
jb
aad
lcall
aam
sbb
adc
outsb
lock
xchg
sub
push
pop
scas
pop
adc
push
pushf
push
mov
lahf
repz
pop
rcrb
or
shrl
xor
popa
imul
cmc
jmp
incl
jns
es
jle
out
mov
add
push
aas
lret
cmp
aaa
sub
xchg
ljmp
adc
push
int
mov
pop
sub
sbb
rcrl
xor
roll
push
xor
out
pop
adc
push
push
mov
pusha
std
test
mov
out
call
cmp
lods
xor
xchg
pop
cmp
imul
addr16
pop
jo
push
jne
xchg
loopne
outsl
add
pop
dec
clc
or
fistps
ss
cmp
or
dec
and
sahf
mov
int3
push
ljmp
testb
inc
jmp
pop
repnz
cmpsl
shlb
testl
fdivs
lods
sbb
into
and
outsb
sub
pushf
mov
nopl
int3
out
pop
xor
das
data16
test
mov
cwtl
pusha
pushl
cmp
pop
insl
add
mov
out
mov
addr16
out
dec
aas
daa
add
or
fldt
lahf
out
fnstcw
out
cli
xlat
sbb
iret
push
ljmp
js
lcall
adc
punpckhbw
gs
cs
mov
mov
stos
mov
or
imul
push
add
mov
movntps
mov
xor
jbe
jl
lret
out
and
and
int3
or
mov
add
cld
mov
mov
scas
popl
in
pop
clc
jle
das
ss
test
sub
inc
push
outsl
lret
xchg
negb
sub
cmp
ss
arpl
imul
inc
test
fisttps
addr16
add
cmp
add
pop
hlt
mov
in
dec
xorl
xor
cld
iret
xor
ficomps
mov
sbb
adc
xchg
mov
int
es
mov
or
push
cmpsb
lea
arpl
jne
push
clc
push
out
push
out
test
jmp
movsl
xchg
std
mov
push
arpl
loop
scas
mov
push
jecxz
push
cwtl
push
dec
cmp
mov
jne
scas
cmp
xchg
data16
fsubp
lods
gs
mov
fnstsw
scas
lret
push
lock
test
jmp
cmp
xor
mov
insl
dec
inc
push
jl
nop
movsb
push
xor
jno
dec
mov
dec
jbe
pop
pop
and
push
popa
icebp
call
lock
nop
jno
jbe
jnp
adc
in
mov
arpl
pusha
rcll
pushf
mov
rolb
cwtl
shl
inc
mov
mov
clc
test
pop
cmp
lahf
dec
xor
andl
mov
or
lret
and
nop
sub
movsl
lods
cmpsl
push
iret
pushl
decl
lods
js
dec
sub
mov
jmp
inc
test
pop
cmpsb
jle
pop
fs
imull
push
xor
push
div
and
push
adc
lea
imul
arpl
mov
mov
mov
jno
pop
les
aam
mov
mov
ds
pop
cwtl
fwait
cmp
jmp
xor
loop
test
movsl
adc
or
xchg
jns
test
fistl
rorb
push
adc
push
adc
pushl
jl
dec
and
xorl
jg
test
js
and
outsl
fildll
cmp
mov
dec
add
inc
fnsave
jl
or
pusha
stc
push
and
sbb
jge
out
mov
adc
out
test
pop
mov
add
pop
mov
dec
ret
incl
xchg
iret
popa
jecxz
inc
jecxz
add
xor
xchg
mov
sbb
push
or
cmp
push
mov
sub
popf
rcr
testb
inc
xchg
scas
mov
sbb
dec
and
and
in
std
shlb
pop
andb
clc
insl
xchg
cli
out
adc
adc
dec
mov
mov
pop
jg
push
mov
stc
dec
divb
shlb
bnd
nop
and
cs
mov
or
lds
or
xor
inc
out
fs
xchg
or
and
ds
sub
jo
cltd
mov
jecxz
inc
aad
ret
pop
add
push
inc
repz
xor
dec
das
pop
xor
int
sbb
dec
pop
mov
loopne
shr
inc
add
stc
and
fadd
add
data16
test
roll
add
incb
lret
lret
subb
pop
stos
mov
push
push
fstp
xor
or
je
xchg
ja
or
adc
in
pop
push
jecxz
jnp
in
jne
inc
adcb
jbe
lock
pop
das
aaa
xor
mov
inc
pop
sbb
les
leave
out
das
mov
and
fsubl
add
add
jae
sbb
jne
les
movsl
cmc
dec
mov
push
outsl
cwtl
in
aad
jbe
mov
mov
scas
js
mov
cmp
xlat
test
mov
xor
push
cmp
incb
mov
xchg
sbb
xor
push
push
jbe
jbe
cwtl
cmc
loope
das
mov
call
leave
movl
cli
imul
sub
loopne
loopne
in
jae
sbb
lods
mov
xlat
loope
fidivrs
and
lods
arpl
in
jbe
daa
insl
push
mov
in
scas
subb
dec
push
mov
aad
scas
jge
leave
jns
inc
dec
in
sbb
gs
and
repz
sti
rep
repz
mov
push
cmovs
push
and
scas
jae
dec
dec
mov
nop
push
jle
cld
mov
lods
gs
mulb
std
cld
cwtl
into
xor
mov
daa
xchg
xlat
int3
loope
mov
in
add
les
arpl
daa
sbb
ret
inc
pusha
in
pop
cmp
cmpsl
daa
xlat
test
sub
repz
les
fxch
addr16
scas
mov
push
xchg
lods
mov
mov
and
out
cs
sub
das
mov
or
inc
lds
cmp
inc
ret
mov
dec
cmpsl
add
dec
jo
cmp
cwtl
shll
cs
push
dec
and
das
rcll
imul
out
add
add
outsb
cwtl
pop
les
dec
cld
pushf
or
or
mov
cli
xor
jnp
ret
je
stc
ret
mov
mov
cmp
in
int
aas
sti
adc
xor
dec
push
xor
ds
loop
popf
mov
out
sbb
adc
or
mov
mov
jb
mov
dec
mov
mov
and
fwait
pushf
xor
inc
cmpsb
or
add
arpl
lret
or
add
dec
push
xlat
cmp
xchg
icebp
stos
imul
sbb
arpl
inc
or
push
fsts
pop
je
adc
and
imul
push
dec
inc
fildl
daa
cmp
loop
adc
ja
call
mov
mov
cld
mov
cmp
sbb
mov
adc
pushf
rclb
sbb
jg
mov
shll
mov
pop
out
inc
add
cwtl
je
and
fwait
pop
addb
stc
lret
and
in
push
gs
in
xchg
fnstsw
add
mov
popa
fs
mulb
sti
out
xchg
or
in
and
push
mov
push
outsl
das
or
repnz
jnp
mov
ljmp
sbb
xlat
sub
jno
arpl
cld
test
inc
dec
dec
mov
pop
jo
pop
fwait
xor
cwtl
sub
dec
movsb
xchg
aad
outsl
jno
push
aad
mov
imul
sbb
mov
addr16
sti
mov
jmp
sub
outsl
mov
mov
xchg
sub
xor
add
lds
jecxz
pop
pop
iret
int3
adc
ljmp
daa
xor
std
add
pop
fstl
and
xchg
and
clc
cmovne
loopne
add
aad
cmp
repz
xor
dec
pop
xlat
mov
es
fisubl
pusha
mov
aaa
ja
jns
xlat
xchg
xchg
hlt
sub
dec
es
loopne
in
mov
mov
rcll
rcll
test
push
pop
xchg
test
push
sbb
jmp
test
int3
adc
aaa
xchg
test
test
jb
insb
lods
lock
test
lret
lcall
mov
jno
dec
pop
stos
fcomip
lods
imul
and
aaa
loopne
xchg
jg
add
xor
ljmp
push
rcll
test
mov
int3
mov
ss
pop
lock
stos
and
repz
add
enter
imul
andb
rcrb
cmp
pop
fidivs
push
pushf
test
pop
bound
aaa
fsubr
inc
jecxz
dec
or
pop
divl
pop
lods
outsl
adc
lret
jo
out
or
xchg
sbb
push
shrb
mov
mov
negl
orb
popf
fimuls
jne
xchg
std
pop
mov
fucomp
in
mov
cmp
add
push
in
or
xor
out
xchg
repz
jmp
loop
jnp
rolb
xchg
int3
dec
aaa
cltd
pop
enter
mov
adc
or
test
sbb
test
pop
sahf
xor
jecxz
xchg
je
mov
push
xchg
and
and
inc
inc
outsl
adc
in
decl
inc
xor
and
sub
or
mov
ficoml
adc
or
mov
cmpsl
aad
mov
movsb
add
xor
jg
add
jl
cwtl
cs
loopne
mov
adc
dec
aad
stos
fisttpl
and
in
gs
jnp
rol
lret
out
mov
dec
xchg
add
xchg
inc
repz
rorb
dec
push
es
xlat
scas
fcomi
pop
shrl
adcb
inc
jmp
stc
inc
mov
xchg
roll
movsl
cwtl
loope
and
mov
push
mov
data16
subb
inc
fsubr
jmp
aam
adc
add
xlat
lods
sub
es
shlb
jnp
das
push
mov
arpl
cli
dec
add
sbb
inc
fcmovne
mov
pop
add
mov
arpl
arpl
pop
mov
jae
sub
jp
sti
int
xchg
mov
outsl
sbbb
sub
aas
dec
stc
pop
adc
adc
jne
mov
sub
pop
jle
or
pop
hlt
sarl
stos
pop
push
inc
xor
stos
shll
pop
mov
or
dec
jl
ljmp
lods
jl
mov
inc
out
fdiv
ds
mov
pushf
not
stos
push
or
ret
loop
mov
jge
insl
fcoml
in
repnz
icebp
shr
jbe
jl
xor
jecxz
cwtl
addr16
or
and
or
lcall
sub
int3
cld
inc
jo
mov
out
inc
mov
dec
xchg
mov
fcmovbe
add
enter
inc
ja
push
add
call
pushl
into
mov
mov
dec
imul
mov
popf
lret
int3
dec
adc
jp
cmp
sub
sub
out
mov
fs
lcall
dec
test
ret
jb,pn
jo
push
lea
and
aad
jo
pop
mov
jecxz
pop
in
mov
lahf
push
orl
dec
mov
cli
jl
stc
sti
data16
add
das
ds
inc
jl
sub
cmpb
mov
and
cltd
iret
faddp
adc
iret
out
sub
dec
scas
pushf
lods
inc
sub
push
pop
push
sub
jge
repz
cld
pushf
pop
inc
sub
imul
mov
pop
sti
dec
adc
cmpsb
push
ss
pop
out
rorl
sahf
aam
vunpckhps
iret
pop
arpl
pop
inc
adc
sub
adc
mov
addr16
mov
addr16
xchg
sub
jmp
mov
ja
sbb
xor
pusha
cltd
ds
call
cmpsl
sub
idivb
mov
mov
adcl
mov
sbb
pop
pop
arpl
jmp
and
or
pop
ja
out
pop
andb
jbe
xor
pop
push
pushf
arpl
xchg
dec
lret
mov
shrb
adc
xchg
cmp
mov
jp
sbb
aad
jge
xor
or
movsb
addr16
ljmp
push
cwtl
mov
mov
xor
mov
out
cmc
stos
jae
inc
push
push
aad
inc
shrd
xchg
addr16
or
movsb
mov
aam
sbb
scas
lods
addr16
imul
scas
and
ss
add
cltd
xchg
push
dec
and
sbb
mov
or
push
add
shrb
xchg
jge
in
xor
arpl
inc
mov
pushf
dec
adc
iret
mov
adc
es
cmp
xchg
into
mov
insl
jp
fcompl
pop
mov
jb
iret
je
lea
sbb
fmulp
push
out
inc
push
xchg
sbb
cmp
and
mov
add
dec
pop
xchg
xchg
xchg
cmp
mov
icebp
inc
pop
outsb
sub
or
rclb
sahf
cmp
pop
ret
into
cwtl
sbb
and
repz
or
sbb
loop
mov
adc
inc
pushf
imul
sub
push
dec
inc
into
stc
mov
push
pop
data16
repnz
gs
pushf
push
dec
xchg
enter
mov
xor
jmp
fnstenv
dec
scas
cld
cmp
clc
in
inc
cltd
rcrl
std
sbb
sbb
mov
push
out
cmp
sbb
or
int3
pop
push
fisubs
mov
fsubl
nop
pop
mov
or
insl
imul
cwtl
test
cmpsl
loope
push
rep
mov
jl
out
fcoms
jp
ret
bound
cltd
jg
repz
fistps
test
int
test
jmp
pop
sub
cmpsl
xchg
mov
jle
out
and
and
inc
in
rcrl
clc
push
stos
lahf
pop
dec
je
pop
inc
mov
push
fisubs
inc
cmp
gs
add
push
mov
lret
add
push
xchg
lret
hlt
addr16
jmp
fs
pop
out
fwait
movsl
cld
dec
dec
sahf
or
ficomps
jno
push
lea
and
mov
push
adc
or
mov
mov
jnp
ja
lea
push
push
idivl
lret
push
sub
clc
push
je
inc
push
aam
shlb
fisubs
fs
aad
dec
or
xchg
push
jg
out
xor
or
inc
cmp
xor
lds
es
loop
jl
cmpsl
jg
repz
es
xchg
mov
test
push
sbb
lods
cmp
xlat
pop
push
cmp
fstpt
and
jp
fldt
sahf
test
mov
stos
dec
inc
adc
mov
and
dec
sbb
sub
xor
jnp
push
scas
je
jnp
xchg
xor
insl
icebp
cmovge
in
pop
cmp
sar
pop
xlat
mov
xchg
push
fbstp
es
imul
lret
inc
dec
cmp
lods
insb
int3
jle
inc
lods
inc
adcl
pop
cltd
dec
movsb
mov
jnp
lods
clc
or
outsb
jmp
jns
cltd
data16
xor
fcmovnu
and
sub
and
insb
push
aaa
movsl
push
call
lds
inc
pop
jne
or
jno
clc
out
int
in
pop
pushf
pop
lods
xchg
sub
inc
ds
xchg
lahf
xor
xchg
adc
jnp
repnz
cmpl
fdivs
adc
clc
out
dec
jmp
add
mov
out
in
cmp
push
pop
mov
lret
lea
test
or
cltd
push
decb
out
loopne
jne
mov
jp
inc
shrd
ljmp
mov
sbb
andl
mov
adc
lcall
repnz
lods
into
or
pushf
or
push
fisttpll
rolb
and
sti
popl
in
push
imul
dec
sbb
stc
int
jecxz
iret
inc
cli
insb
out
cmp
stos
fstl
ja
repnz
out
dec
stos
or
pop
dec
pop
popa
sahf
movsb
rcll
inc
mov
insb
pop
clc
lods
or
pop
mov
cmp
pop
jne
std
pop
cs
cmp
lea
and
push
xor
jmp
repnz
aas
xor
fisubrl
inc
stos
xor
sub
pop
sahf
dec
mov
scas
pop
cwtl
add
fisubl
divl
xchg
loop
add
cmc
mov
stc
lret
cmp
jmp
gs
aaa
test
xchg
lock
cmp
jl
pop
adc
gs
lds
std
pushf
popa
std
test
lahf
xorl
xlat
test
sbb
sub
jne
adc
pop
shrl
js
lcall
stos
push
pop
movsb
negb
add
adc
in
cwtl
leave
xor
iret
sub
jae
cmp
call
adc
add
mov
adc
inc
rcl
iret
mov
incl
xchg
push
sti
dec
pxor
or
lods
ljmp
xchg
cmp
pop
add
jno
xor
xchg
popf
xor
mov
jne
lahf
pop
rcrl
cmpsb
popf
sbb
insl
lcall
cmp
dec
xchg
scas
aad
or
cmp
pop
insb
mulb
fstpl
pusha
inc
ja
mov
into
mov
jbe
pop
xchg
mov
adc
push
jmp
dec
push
pop
dec
dec
data16
ds
mov
test
loope
mov
adc
les
in
jnp
push
pop
sub
mov
sbb
cs
xor
jnp
jnp
mov
fwait
and
lock
jo
sbb
mov
loopne
inc
loop
lea
add
pop
cmpsb
iret
cmc
cmp
int3
sub
jnp
int3
int
xchg
repnz
fdivr
out
imul
push
bound
jg
push
testl
and
ljmp
mov
or
pop
int3
gs
xchg
jp
daa
mov
stos
gs
mov
dec
dec
popf
rcll
or
pusha
sbb
dec
lcall
imul
out
rep
rolb
pop
sbb
in
std
out
push
mov
popa
mov
push
fdivp
aad
xchg
testb
jle
mov
xor
mov
mov
int3
fwait
adcl
mov
dec
fwait
xlat
adc
ds
rcrb
or
pop
push
lods
ljmp
jb
adc
xchg
hlt
daa
aam
bound
fdivs
fistl
inc
and
int3
cmc
es
or
cs
fs
mov
dec
xchg
pop
lcall
mov
xchg
popa
sbb
sti
push
shlb
jge
test
sbb
mov
xlat
movsb
test
inc
out
cmp
sub
ss
fwait
xor
cli
jle
sti
sbb
rcr
xor
aad
adc
pop
repnz
or
sbb
add
popf
xor
mov
inc
test
scas
aaa
shrl
xchg
xlat
dec
jo
notb
fidivs
jb
dec
inc
add
mov
mov
inc
xchg
dec
ds
push
jl
in
jl
mov
and
js
jne
sub
mov
pop
fstps
adc
or
ja
test
out
jmp
aas
test
xlat
pop
in
pop
divb
jle
xchg
sbb
xor
push
je
fists
inc
andb
in
dec
jg
cmp
dec
and
mov
cmp
loope
mov
cli
dec
aas
dec
cmp
jge
int3
mov
ss
shl
or
sti
cmpsl
dec
mov
orl
and
mov
and
mov
lods
or
xor
jbe
lock
inc
jne
mov
hlt
inc
stos
sub
rolb
cmpsb
lret
pop
test
sti
jecxz
clc
sub
push
xor
sub
shlb
mov
mov
dec
sub
out
xor
cld
lcall
push
adc
push
cmp
jno
je
pop
sbb
aam
dec
lret
scas
cmp
pop
imul
adc
sub
call
dec
jno
insb
loopne
test
pop
add
mov
fwait
call
dec
scas
jl
pop
iret
jbe
lcall
xor
mov
push
adc
xor
out
pushf
hlt
pop
cmp
out
fnstenv
scas
rclb
scas
adc
popf
in
add
test
cmp
xor
repnz
mov
cmp
cs
pop
push
gs
test
xchg
mov
inc
mov
fmulp
imul
test
mov
sub
push
dec
and
adcb
jmp
xchg
es
enter
mov
fisubs
out
ret
jo
dec
xor
ja
andb
cmpsb
mov
xor
testl
inc
xor
rcrl
xlat
das
outsb
subl
aad
sbb
or
andb
das
pop
stos
add
pop
cmp
iret
dec
repz
adc
push
cs
xor
push
fwait
or
jp
dec
and
inc
xchg
sar
xor
mov
lahf
in
sub
sub
int3
shl
sbb
sti
subl
lock
fistpll
scas
add
push
mov
popa
scas
mov
aaa
cmp
sub
sub
sbb
adc
shll
jbe
fs
mov
cld
dec
bound
xor
int3
shrb
dec
add
and
in
cld
shlb
test
je
and
mov
or
into
xchg
xor
idivl
sbb
daa
xor
inc
mov
je
mov
cmpsl
icebp
stos
push
aaa
movsb
lret
popw
lcall
fwait
rcrb
adc
movsl
pop
stos
pop
out
xlat
sub
and
std
add
add
push
jns
mov
pop
mov
sbb
pop
jae
mov
pop
ret
lcall
test
cli
loopne
pop
bound
add
scas
movsb
test
jle
mov
mov
lock
stos
gs
ja
shrl
icebp
outsb
mov
mov
or
inc
outsl
xchg
jp
sbb
stc
inc
jno
inc
pop
mov
addps
push
icebp
pop
cmp
scas
mov
stc
pop
cld
scas
hlt
shll
sbb
sbb
push
xor
scas
push
nop
subb
popf
inc
insl
in
mov
cmp
fcoml
adc
test
mov
out
inc
in
xchg
or
push
out
imul
outsb
and
ja
inc
and
ror
xor
mov
fyl2x
mov
out
mov
mov
push
out
rol
or
stos
hlt
adc
or
scas
xorl
mov
inc
xchg
adcl
insb
or
dec
xor
stc
cmp
loope
jne
outsb
cmp
add
inc
nop
mov
mov
das
adc
cmp
inc
lea
xor
out
aas
and
fwait
imul
in
cmpsl
xchg
push
xor
test
mov
bnd
push
sbb
sahf
into
js
addr16
lods
push
jl
jbe
stos
push
test
xchg
in
cmpb
push
pop
jl
fs
sub
adc
neg
xchg
xor
fucom
shll
outsb
rcll
inc
notb
cmpsl
adc
pop
mov
and
dec
int
stc
repnz
pop
inc
or
sub
and
jp
mov
int3
push
sbb
fwait
int
pop
sub
cli
sbb
or
lds
neg
mov
into
xor
out
cmp
mov
sub
jno
scas
cli
mov
adc
bound
pop
or
mov
xchg
push
push
push
and
cmpsl
dec
sub
fsubrl
sahf
in
inc
loope
mov
mov
test
mov
sarb
dec
rcrb
push
shlb
and
add
pushf
pushf
sub
addl
jo
mov
push
cld
xchg
addb
das
das
pop
aaa
dec
add
movsb
mov
or
dec
xchg
pop
cld
rcrl
test
aam
mov
mov
mov
cmc
shrb
aaa
inc
push
xor
outsl
jb
jnp
rol
loop
ja
mov
or
pop
cmpsl
inc
icebp
addr16
adc
jne
stc
sbb
jne
roll
scas
jp
xor
adcb
idivl
ds
mov
pop
adc
leave
xchg
push
jbe
push
mov
cmp
cmpl
call
shrl
popf
dec
mov
sahf
cmp
decl
and
xchg
sub
fmuls
sbb
js
cmp
stc
aas
daa
ds
xor
ljmp
inc
cltd
add
rcrl
jge
mov
arpl
pop
sbb
fiadds
add
test
jge
es
xorb
xchg
mov
jbe
cmpsl
ret
inc
fsubrl
mov
mov
rorl
cmpsl
mov
sub
imul
jo
adc
mov
jns
and
cmc
jbe
divb
lods
xchg
push
ja
dec
sub
adc
sub
mov
mov
pusha
ret
ss
pop
sbb
cld
and
adc
xor
cmp
dec
mov
dec
enter
pop
or
pusha
cmpsb
mov
jg
pop
lahf
xchg
adc
lret
in
adc
sub
fstp
ret
and
mov
push
jnp
add
cmc
add
fmulp
inc
inc
outsl
mov
pop
mov
mov
add
sub
or
test
jno
xchg
out
mov
cmpsl
popf
in
mov
jmp
add
scas
pop
cmp
aas
jp
and
popf
shl
rol
pop
in
sahf
fimuls
sti
gs
cld
jl
or
sub
gs
push
imull
mov
repnz
jg
stos
and
inc
cli
xlat
adc
pcmpgtb
xor
shlb
out
test
ficoml
mov
rolb
adc
dec
nop
mov
pop
push
lock
cwtl
mov
iret
popf
icebp
hlt
mov
xchg
test
add
sti
js
ffreep
sbb
lret
pop
mov
add
dec
mov
out
daa
or
sub
aas
les
and
cmp
jne
icebp
pop
adc
inc
insb
lcall
decl
lock
cmp
cmc
xchg
jo
xchg
or
xchg
push
adc
stos
nop
rclb
push
add
xchg
sbb
mov
lret
push
icebp
xor
rcll
test
mov
pop
bound
push
mov
pushf
dec
mov
outsl
out
cltd
inc
push
inc
push
sbb
sahf
jle
test
mov
shll
xchg
xor
push
mov
dec
mov
leave
jl
lret
mov
xor
jp
out
jno
repnz
xor
pop
adc
in
lcall
inc
mov
jecxz
and
dec
dec
inc
mov
dec
adc
int3
imul
test
ret
adc
popf
cmp
outsb
push
pop
scas
add
sbb
xchg
mov
in
pop
add
and
and
inc
lods
mov
mov
test
cmc
outsl
aas
cli
shrl
out
stos
and
scas
or
xchg
or
xlat
sahf
inc
pushf
pop
mov
mov
cli
daa
cs
lds
add
dec
xchg
repnz
mov
fdivr
fildl
fs
loop
jne
icebp
mov
pop
test
shll
fs
or
mov
aas
or
mov
fisubs
xchg
and
pop
inc
pop
ror
dec
sar
inc
mov
mov
mov
add
pushf
jb
jecxz
pushf
insl
sbb
lods
adc
add
dec
push
lcall
je
xchg
lods
outsb
clc
sbb
pop
mov
out
cmpsl
inc
pop
adc
mov
xchg
or
cltd
imul
sbb
fisubrs
iret
enter
push
into
pop
sbb
jle
xchg
pop
jmp
inc
xchg
jno
test
std
popf
fmuls
xchg
adcl
sbb
mov
inc
ds
xchg
in
dec
in
mov
mov
loop
out
pop
scas
popf
xlat
dec
push
clc
cmpsl
into
imul
push
cld
sti
mov
xchg
cmp
and
mov
pop
push
push
cmp
fistpl
aad
xor
and
insl
mov
inc
add
mov
dec
sbb
inc
sbbb
test
mov
push
mov
jecxz
xor
jno
repnz
cmp
fs
sub
xchg
incb
fmuls
repnz
lods
add
push
in
jnp
loope
add
adc
xor
ds
xchg
and
icebp
cltd
dec
push
xchg
add
cmc
sahf
cmp
jno
and
and
dec
or
inc
shl
push
push
mov
xchg
push
jno
leave
xchg
pop
stc
mov
sti
xchg
test
ficomps
jle
or
mov
push
ljmp
test
orl
call
dec
jne
dec
inc
xor
push
jno
pop
or
divl
jl
int
out
int
adc
cmpsb
mov
xchg
ret
adc
sub
sub
fldt
jnp
xorb
testb
idivb
nop
cli
lods
jbe
lahf
fisubs
cmp
and
jp
sbb
jl
adc
mov
stos
pop
sbb
mov
gs
push
jae
cmpl
mov
xchg
add
mov
int
cli
std
jb
cwtl
lret
pop
lods
or
ficompl
dec
ficoml
in
sub
lods
jge
bound
pop
mov
cmc
sbb
fsubl
dec
pop
test
dec
loopne
call
mov
lods
xchg
xor
mov
cld
cld
pop
fwait
int
mov
xchg
cmp
mull
movsb
ret
mov
pop
mov
iret
les
jno
loopne
xor
or
or
add
in
dec
movsl
rorb
cmp
nop
jae
ja
jle
test
push
subl
jp
add
icebp
and
and
aad
imul
mov
ja
and
ficoml
dec
push
scas
nop
in
out
adc
push
mov
xchg
mov
ljmp
repnz
jae
jecxz
pop
repnz
aad
cld
sbb
jae
cli
cltd
push
xchg
sbb
and
mov
sub
test
cwtl
jns
aaa
adc
pop
mov
or
pop
adcb
dec
mov
sbb
stos
sbb
jl
enter
adc
dec
mov
push
stos
clc
or
jp
pop
stos
lock
notl
dec
xor
jle
mov
rcll
ljmp
ljmp
sub
adc
fildll
rcll
sbb
cltd
test
xor
xor
add
inc
push
lock
outsb
std
cs
scas
adc
aas
gs
sub
mov
xlat
mov
stc
fdecstp
fwait
lock
xor
xchg
lret
mov
xchg
ret
cmc
js
aas
hlt
push
jecxz
xchg
add
in
fsub
inc
mov
arpl
jge
std
rep
mov
dec
sub
aad
sti
pushf
test
mov
sbb
jp
push
dec
jl
jp
in
in
lods
inc
cmpsb
dec
dec
bound
fldl
inc
mov
sub
jp
mov
dec
mov
jmp
fstp
and
out
inc
sub
mov
dec
rcl
push
adc
sub
inc
mov
insl
sub
nop
test
or
je
dec
add
cwtl
sbb
addr16
push
loop
popf
xchg
add
pop
push
aam
add
popf
xchg
lods
push
decl
push
iret
push
mov
out
sbb
pushf
add
sbb
sbb
dec
pop
cmpl
dec
mov
scas
xchg
jmp
fcmovnu
jb
sbb
popf
sahf
sbb
leave
call
mov
pop
mov
sbb
sbb
inc
jnp
pop
cmp
stos
xor
int
mov
jns
pop
call
mov
outsb
mov
dec
push
aaa
roll
push
sub
lds
jae
fnstcw
add
fstp
insl
mov
xor
jb
mov
gs
xchg
lret
imul
and
rorl
cmc
and
stos
push
cmp
lods
insb
idivl
ds
clc
fists
and
aas
clc
cmpsl
test
or
xor
insl
xor
cltd
mov
adc
pop
orb
and
mov
mov
ss
jl
push
in
pushf
test
cmp
sahf
sbb
loop
pop
call
std
pop
jno
fs
cmpsb
push
push
cmp
pop
mov
jge
pop
popf
dec
push
shrb
pop
mov
shll
add
add
pop
xchg
lods
divb
sub
rclb
lods
add
cli
divb
pushl
mov
test
add
popf
fsts
inc
ljmp
mov
test
cmp
mov
xor
jecxz
clc
pop
cltd
sbb
xchg
jl
cmp
mov
stc
mov
push
adc
outsl
ss
add
loop
lret
cwtl
addr16
jae
lds
cmpsb
mov
add
je
enter
xchg
cmp
bound
sbb
mov
movb
dec
ljmp
jmp
test
push
xchg
pop
pushf
mov
repz
aas
std
mov
dec
or
scas
mov
push
ss
int
pop
add
inc
jne
jge
test
cmp
add
or
addr16
fs
cmc
outsl
jmp
cld
das
jae
cmp
xchg
loop
xchg
pop
aas
xchg
test
cs
sbb
push
and
pop
jmp
xchg
popf
in
lret
es
xchg
dec
js
lea
add
push
pop
test
aad
mov
mov
adc
pop
out
scas
mov
sti
negb
rcrl
subl
mov
xchg
in
push
xchg
in
push
mov
or
fldenv
sub
and
adc
or
adc
popf
enter
in
out
ja
add
std
call
test
cltd
xchg
aas
cmp
outsl
mov
inc
stos
stc
das
lock
popa
xor
push
aas
repz
popf
cltd
iret
mov
scas
in
mov
inc
and
out
mov
sub
jmp
pop
rolb
jg
es
jmp
cmp
sbbl
iret
inc
fmul
dec
and
sbb
cmp
lret
or
adc
test
js
addr16
leave
mov
sub
and
cmp
mov
repz
cwtl
stos
fcoml
ljmp
cmp
imul
pop
jge
pop
rcll
add
cli
lahf
jle
cmp
rorb
inc
push
mov
cltd
bound
xchg
lock
sbb
ret
roll
jg
sub
sub
incb
nop
pop
imul
addb
adc
xor
scas
mov
pop
push
aas
or
or
std
mov
pop
xor
sub
jnp
call
outsl
adc
popa
sti
cld
sub
mov
aam
lods
movsl
jecxz
test
push
mov
xchg
cmp
hlt
in
lcall
mov
notl
mov
xor
scas
rcrb
fmulp
mov
ds
jge
fdivp
inc
jae
pop
lcall
in
inc
stc
ret
cmp
js
popa
imul
and
lahf
add
dec
pop
inc
test
mov
cmc
pop
jecxz
jge
dec
mov
pop
lret
push
fucomip
sub
dec
mov
xor
sub
lar
push
aaa
push
lahf
iret
xlat
add
int3
inc
mov
and
shrl
repnz
jmp
ds
sub
mov
cld
sub
insl
iret
mov
sub
insl
mov
dec
jge
mov
dec
dec
ds
inc
in
inc
cmp
popf
and
movsb
scas
add
adc
idivl
cli
rolb
sub
in
and
loop
pop
inc
les
int
gs
adcl
push
mov
das
insl
inc
out
cmp
pop
push
lods
cmpsb
jb
cld
ljmp
lcall
mov
mov
and
xchg
push
mov
daa
dec
push
int3
ja
lcall
pop
cmp
inc
test
je
add
popf
sub
imul
xor
sbb
arpl
mov
adc
es
into
out
ss
xchg
add
int3
inc
add
push
lock
pusha
nop
push
in
push
fwait
jbe
shl
adc
leave
fwait
xchg
and
clc
sbb
leave
cwtl
dec
xorl
adc
mov
push
in
test
add
aas
jp
ja
pop
dec
add
smsw
insb
repz
push
adc
xchg
gs
jge
inc
or
sbb
faddp
adc
or
imul
xchg
mov
pop
rcrl
xor
xchg
repnz
cwtl
cmp
cmp
fs
jecxz
cmpb
pop
mov
mov
pop
movsl
pop
insl
or
and
push
mov
arpl
pop
mov
mov
shrl
test
cmc
cli
jne
pop
jno
rcr
cmc
notb
out
lods
inc
ljmp
mov
loope
cmpsl
dec
js
mov
fdivs
xor
jno
mov
jle
pusha
mov
mov
inc
xor
repnz
fldenv
cli
xor
fcmovu
sbb
cmp
js
outsl
fisubrl
cmp
mov
ret
jg
popw
cmp
bnd
inc
xchg
jo
cmc
iret
cmp
xorl
lods
inc
faddl
push
inc
lds
gs
in
gs
dec
push
icebp
loopne
stos
fsubs
jmp
mov
test
movb
aas
push
cs
adc
decb
cmp
xchg
stos
in
add
shrb
pop
je
inc
cmp
mov
divl
cmc
loopne
cwtl
loope
or
insb
lods
aad
repnz
orb
inc
mov
addr16
jns
xor
sbb
ret
jno
cmpl
nop
push
mov
xchg
imul
cmp
jns
pusha
sarb
or
fs
sub
sbb
or
mov
jecxz
ljmp
and
movb
insl
js
jae
xor
mov
sbb
dec
dec
add
mov
mov
xor
scas
adc
push
ret
mov
movsb
cmp
mov
lock
scas
inc
data16
roll
ret
push
ret
out
mov
test
sub
cmp
mov
mov
dec
sti
jecxz
arpl
inc
clc
repnz
dec
mov
jg
and
mov
dec
ljmp
lods
pop
iret
xchg
movsb
sbb
push
inc
fcomp
or
adc
pminsw
ss
lret
adc
popf
or
lds
shl
mov
call
aam
mov
or
rorl
pusha
dec
inc
iret
daa
out
pop
jp
pop
shrb
lahf
stc
inc
shrb
and
push
setp
sbb
dec
mov
dec
pop
inc
xchg
pop
pop
cld
jl
lock
scas
test
movb
dec
adc
cmp
dec
lods
clc
xchg
or
push
xor
adc
cmp
sub
sbbl
add
mov
addl
addr16
fidivrs
mov
jne
into
out
mov
les
inc
imull
pop
ret
mov
fadds
insl
mov
call
xor
icebp
clc
cmp
inc
repnz
jno
les
add
shll
sbb
les
mov
std
adc
ret
movsb
mov
aaa
cwtl
jb
or
fmuls
pop
jbe
aaa
es
std
stos
lahf
jg
popa
addl
push
in
push
test
xor
sbb
arpl
mov
test
dec
mov
mov
or
xchg
insb
popa
and
sbb
outsl
adc
pop
sbb
cmpl
ret
dec
cwtl
insb
scas
fisubrl
adc
arpl
or
or
sbb
push
das
push
dec
ss
push
lock
xor
pop
and
loopne
mov
mov
roll
test
mov
enter
js
mov
mov
push
lea
push
adc
mov
jnp
rclb
fsubl
out
sarb
negb
in
adc
and
cmp
nop
push
outsb
test
and
test
xchg
ficompl
jle
iret
sbb
fmull
roll
jle
jge
or
ret
push
add
mov
jae
popa
rcll
sub
mov
outsl
add
jns
sahf
jle
sbb
aaa
mov
arpl
leave
jge
and
addr16
mov
push
movsl
jo
xor
scas
mov
xor
es
xlat
stos
adc
lods
int3
cltd
dec
add
sbb
pop
lock
lahf
sahf
mov
xchg
cmp
push
add
out
pop
dec
or
jae
test
test
push
push
test
insl
pusha
adc
xchg
scas
sti
xor
ror
add
gs
xchg
dec
sti
push
lods
adc
in
pop
adc
pop
pop
cmpsl
xchg
push
jbe
pop
or
lock
test
mov
mov
pop
lahf
mov
cwtl
hlt
jmp
jbe
popa
push
xchg
push
rolb
adc
pop
pop
fwait
dec
push
mov
jl
adc
push
dec
rcrl
pop
nop
shll
or
shlb
mov
mov
adc
icebp
aad
mov
cli
hlt
jecxz
lcall
mov
lods
lcall
pop
roll
mov
ret
push
and
popf
cwtl
mov
in
pusha
shll
lahf
lods
out
add
mov
cmp
int
lcall
jb
ret
push
ret
into
in
out
jno
sub
daa
mov
sbb
mov
in
push
mov
jle
out
mov
ss
cmpsb
je
or
pop
test
and
pusha
cmpsb
in
adc
mov
insb
js
bound
jbe
std
inc
pop
daa
ja
fs
add
fs
or
mov
movsl
push
mov
rclb
xchg
sbb
test
pop
mov
or
sub
mov
xchg
xor
pop
push
fcomps
cmpsb
pop
lds
mov
ds
lret
mov
jo
js
xor
mov
cmp
jns
bound
frstor
sub
out
fistl
jmp
popf
or
ret
dec
dec
sti
loope
pop
adc
jb
aad
out
add
cmp
ret
push
and
mov
push
out
lods
data16
dec
mov
xor
jns
push
imul
orb
push
jl
xor
call
adc
dec
cli
cmp
stos
popf
dec
fldt
jo
push
and
cmpsl
adc
fisubs
out
rolb
mov
mov
mov
in
adc
imul
into
decb
sub
xchg
cmp
mov
gs
mov
int3
jmp
sbb
es
add
jo
or
lret
sbb
ret
cmp
pop
scas
in
int3
mov
jmp
adc
pop
andb
lret
dec
imul
push
repnz
jg
or
inc
je
gs
jne
mov
loop
std
xchg
dec
imul
jnp
cmp
pusha
ds
cwtl
adc
mov
popa
sbb
adc
test
jbe
or
sbb
xor
jno
mov
fabs
sub
lds
xchg
outsl
leave
pop
push
cmp
xchg
movsl
cmp
xlat
loope
push
push
adc
jp
cmp
icebp
mov
mov
sub
into
hlt
pop
sbb
mov
xchg
mov
push
test
mov
or
pop
outsb
aam
outsb
in
sahf
mov
push
aaa
cmp
sub
rorl
aam
loop
popa
dec
inc
xlat
insb
or
sbb
push
lret
mov
lcall
mov
iret
dec
xchg
lods
jbe
or
addr16
adc
in
pop
shll
jae
sbb
xlat
scas
lds
pop
xchg
out
cmpb
mov
mov
mov
fsubl
jp
lcall
jno
jns
sbb
inc
and
adc
adc
add
inc
fwait
inc
aad
push
in
inc
bound
sbb
xor
in
xchg
stc
fbld
push
dec
inc
push
cld
lods
inc
clc
sub
xchg
lods
xchg
lods
fucomi
mov
in
or
inc
mov
outsl
mov
lock
xchg
xor
incl
mov
jle
fdivrs
out
mov
xchg
out
jbe
test
jg
inc
pop
cmp
ja
test
push
les
inc
xor
cmp
shrb
jno
dec
jmp
xchg
jge
xchg
jmp
xchg
mov
fwait
ss
setne
cs
cmp
sub
mov
mov
inc
test
and
jge
dec
adc
add
sub
imul
dec
aam
cld
stos
xor
movsl
dec
cwtl
mov
aas
add
cmc
adc
mov
dec
lea
je
hlt
std
add
add
mov
jp
les
xchg
lods
jno
lcall
xchg
jns
sti
and
push
insl
pop
cwtl
adc
xchg
ror
lcall
mov
fidivs
pop
inc
arpl
xchg
add
add
iret
adc
add
scas
lods
inc
push
xchg
imul
int
mov
lret
lret
mov
xchg
xchg
mov
icebp
mov
mov
hlt
or
dec
loopne
add
gs
mov
pop
lcall
imul
stos
inc
movsb
hlt
mov
inc
push
int3
stos
pop
ja
pop
jbe
push
addr16
push
fcomip
xor
in
int3
in
dec
sbb
mov
adc
inc
mov
cli
cmpsl
movsb
fiadds
xlat
into
xor
push
out
scas
jnp
push
jge
or
orb
fstps
push
std
mov
xorl
or
data16
push
fwait
sub
cmp
outsb
into
aam
cmp
sti
xchg
cwtl
sub
xor
add
add
and
imul
rcr
mov
adc
mov
shll
into
clc
lret
xchg
push
push
adc
push
add
pop
inc
pop
push
add
jne
sub
shlb
inc
test
jecxz
lds
cs
sahf
popl
push
sub
mov
inc
roll
aas
xchg
sub
sub
inc
sbb
xchg
ret
stos
aaa
push
sbb
xorb
xor
dec
repz
stos
outsb
xlat
aad
xchg
lret
dec
mov
jecxz
outsb
push
jno
arpl
pop
mov
lds
or
enter
notl
js
and
pop
sarl
aaa
fldt
outsb
sub
xchg
push
rorl
pop
cmpsl
ja
movsl
mov
scas
inc
push
les
pop
mov
inc
iret
pop
dec
push
pop
adc
xor
pmulhw
call
mov
shlb
cs
mov
in
fbld
cmp
cmp
fs
sub
jle
andl
pop
decl
ljmp
add
repz
ja
fwait
mov
int3
flds
adcb
mov
pop
xchg
push
jmp
fsts
aad
ds
inc
ja
popf
lret
dec
data16
rcrl
rcr
das
les
push
roll
es
push
and
inc
xchg
xchg
mov
mov
mov
or
jne
ficoml
pop
sahf
mov
pop
cmp
movsb
aad
shr
imul
inc
adc
inc
lea
jl
jle
pop
inc
out
and
movsb
nop
push
pmuludq
ljmp
dec
mov
int
cld
dec
sub
mov
test
add
incl
pushf
xor
sbb
add
fnsave
movsl
xchg
sub
push
and
les
int3
jp
mov
mov
mov
jmp
pushf
pop
sahf
push
dec
adc
fwait
xor
insl
lock
loope
repz
push
and
mov
adc
ret
mov
stc
push
dec
inc
sbb
popf
mov
call
xchg
xchg
adc
mov
add
lret
push
add
inc
in
sbb
sbb
fistpl
xor
adcb
cmp
sbb
in
clc
cld
nop
ja
in
mov
xor
out
jmp
and
out
out
lods
test
ds
and
inc
sub
pusha
test
pop
test
ss
imul
or
subl
aas
negl
call
mov
test
jae
adc
xchg
mov
mov
inc
or
scas
f2xm1
pop
sbb
inc
inc
dec
or
loope
mov
push
ja
test
jle
cli
or
pop
popa
popa
cmp
insl
int
cltd
push
mov
xlat
push
add
cmp
std
sbbb
add
add
sbb
scas
fcomi
clc
daa
loopne
mov
leave
sub
pop
ss
jae
xlat
mov
aas
loop
and
xchg
sbb
sub
cs
mov
js
sub
pop
push
mov
inc
mov
xor
sub
sbb
pop
int3
lods
iret
adc
inc
fs
jg
fidivrl
push
test
mov
out
in
push
jno
xchg
push
cmp
jp
mov
sub
mov
mov
mov
rol
fs
movsb
out
mov
sahf
adcb
cwtl
shll
sti
jo
add
loop
mov
sbb
mov
fs
xor
push
or
or
js
cmpsb
adc
lock
jl
pop
mov
ret
sbb
cli
pushf
lock
jle
add
mov
inc
mov
das
xchg
or
mov
lcall
roll
out
arpl
mov
inc
jb
mov
dec
popa
mov
mov
adc
dec
xchg
dec
xor
in
push
movl
dec
mov
jmp
movups
push
mov
xor
mov
or
int
cld
imul
or
pop
mov
pop
gs
push
mov
in
out
rolb
pop
ljmp
testl
pushf
pop
pop
fs
dec
pop
jb
ljmp
xor
icebp
js
mov
sub
mov
inc
mov
int3
loopne
test
es
pop
stos
outsb
pop
paddusb
sar
inc
stos
mov
pop
rorl
jb
pop
scas
cmpsb
inc
cmp
lds
cmp
cmp
mov
pop
cmp
dec
out
ja
dec
sbb
mov
lock
adc
cmpsb
sub
es
fdivr
add
push
inc
outsb
mov
or
sahf
xchg
addr16
adc
cmp
pop
ret
fadd
ffree
mov
lcall
push
mov
stos
mov
xchg
jnp
out
popf
jbe
add
mov
xor
sub
or
push
jmp
xchg
loop
es
inc
cmp
sti
movsl
in
xlat
nop
test
xchg
sbb
gs
cwtl
popf
hlt
das
jbe
cmp
mov
mov
mov
mov
ds
cwtl
push
inc
sbb
add
ret
mov
adc
jnp
hlt
dec
jge
sub
dec
pusha
pop
jb
loope
jmp
dec
cmp
inc
adc
sbb
mov
add
loopne
mov
cmpsl
sbb
mov
xor
iret
adc
mov
imul
pop
pop
mov
mov
mov
add
pop
push
scas
jl
mov
inc
push
jl
jno
jmp
lods
out
into
xchg
lcall
negb
or
push
mov
and
cmc
xchg
mov
xor
mov
addr16
sub
sahf
into
mov
scas
fcmovnbe
aam
ja
stos
subl
repnz
ds
or
aaa
mov
mov
dec
cmpl
dec
xchg
roll
inc
sbbl
push
and
pop
mov
cmp
ret
insl
sahf
add
lock
mov
sbb
clc
jmp
and
daa
stc
std
out
push
pop
sub
push
lods
xor
pop
inc
or
lahf
pusha
daa
mov
or
lcall
sbb
lahf
mov
ret
mov
sbb
push
add
fsubr
bound
xor
das
leave
sub
push
sbb
sarl
jbe
mov
ljmp
jg
mov
sub
fidivrl
fisubrs
hlt
xchg
insl
adc
imul
subb
jbe
int3
movsb
push
mov
aam
arpl
hlt
and
dec
cmp
mov
push
push
clts
xchg
cmp
push
and
xlat
cmpsb
mov
loop
dec
fdivs
xchg
pusha
outsb
bound
into
arpl
aaa
inc
cmc
jmp
fcmovb
or
int
push
xchg
mov
rorb
cmp
shrl
cmp
andl
mov
lcall
mov
bound
fdivl
add
cwtl
popf
je
lea
lea
idivb
dec
jno
sub
sbbl
push
add
jge
jae
scas
dec
adc
cmpl
mov
xor
xchg
xor
fistpl
daa
nop
dec
mov
push
insl
mov
mov
lods
mov
imul
xchg
xor
fsubs
inc
inc
scas
das
mov
fsubrl
cmp
and
into
sbb
and
jno
mov
pusha
lret
std
cmp
sahf
mov
cmp
cmp
ljmp
in
int3
cs
xchg
ds
jne
negl
push
sub
imul
nop
or
movsb
lods
jb
push
test
and
mov
jae
cmp
and
movsb
fwait
add
cmp
and
jae
adc
stos
out
call
sub
repnz
jne
push
push
mull
in
push
aaa
fcoms
fistl
inc
xchg
push
mov
sarl
in
jp
out
and
es
mov
xchg
adc
loopne
aas
inc
in
xor
fdiv
lret
pop
scas
xchg
xor
jl
icebp
add
in
cmp
popa
icebp
push
inc
mov
jae
adc
cltd
das
ljmp
lret
pop
test
xor
xchg
cmp
repz
in
call
mov
xor
cmpsl
insl
mov
mov
nop
or
pop
pop
popfw
pushf
cmc
sbb
jmp
in
sbb
jae
mov
inc
pop
int
repz
push
jp
addr16
ss
cmp
dec
mov
movsb
push
inc
es
jns
xor
push
imul
xor
mov
push
subl
jne
sbb
push
jg
cltd
lds
repz
sbbb
and
out
mov
ljmp
mov
adc
cmp
arpl
imul
add
fmull
repz
lret
pop
xchg
out
jo
jbe
adc
repnz
dec
out
pushf
mov
lea
les
fcoml
ljmp
add
dec
cmp
pop
lahf
test
pop
filds
inc
mov
or
dec
std
shll
ret
jns
adc
jno
out
ds
out
call
in
push
sbb
xlat
pusha
sbb
rcll
sub
ret
jnp
jno
mov
repz
lret
repnz
xor
test
lods
roll
cmp
and
pop
mov
inc
cwtl
adc
call
xor
out
mov
mov
and
or
mov
stc
aas
pop
hlt
push
mov
mov
xchg
fisubl
test
mov
test
or
mov
mov
inc
mov
mov
mov
pmaxsw
dec
push
xor
dec
fdivrs
ret
pop
insb
enter
sub
nopl
cwtl
les
xor
enter
fsub
iret
xchg
adcl
jp
ja
mov
push
adc
lret
insl
lret
xlat
or
fmull
xor
mov
inc
pop
ret
test
jg
ja
out
pop
int
jae
inc
and
insl
lahf
mov
or
mov
or
push
out
pop
sbb
out
rorl
mov
pushf
movsl
mov
scas
or
pop
and
mov
push
xchg
cltd
outsl
test
xor
pop
and
inc
mov
shl
mov
push
ss
outsb
cmp
imul
mov
push
adc
int
in
arpl
test
inc
adc
adc
mov
icebp
pop
loope
add
mov
jmp
sub
enter
fnstsw
and
testl
or
sub
std
scas
pop
aas
loopne
sub
mov
add
scas
lds
pop
cwtl
loopne
jns
cmpsb
push
sub
inc
stos
int3
lret
hlt
jbe
dec
xchg
dec
fsubs
arpl
dec
xchg
fcoml
addr16
fld
cli
push
xchg
dec
dec
sbb
push
cmp
daa
out
xor
pop
les
jb
cmp
xor
hlt
xor
pop
flds
cltd
dec
fstpl
xor
sub
arpl
add
pop
jae
mov
repz
xchg
push
adc
loopne
push
xor
jecxz
sbb
mov
mov
jmp
and
push
test
adcl
stc
sbb
dec
decl
outsl
stc
cltd
lea
ret
cmp
xor
cmp
inc
icebp
cmp
cmpsl
cmp
cmp
mov
sbb
mov
fnstcw
jmp
movaps
xchg
lahf
push
add
data16
xor
arpl
imul
sahf
sub
xchg
pop
out
hlt
mov
sbb
setne
clc
outsl
mov
hlt
mov
dec
push
xor
xchg
inc
stos
aas
mov
insl
inc
lds
sti
fisubl
nop
mov
push
adc
mov
sub
jg
lret
andb
test
push
xchg
push
loopne
xchg
iret
pop
cmpsl
lds
loope
push
xchg
pop
jo
dec
push
into
movsl
jl
ja
sti
ficomps
mov
pop
ret
rol
ret
fcmovnu
lcall
imul
pop
jne
inc
inc
dec
cli
mov
push
imul
popf
ret
add
aas
movsb
adc
mov
cmp
add
cmp
test
sbb
test
or
pop
outsl
call
loope
cli
sub
ja
cli
jmp
das
xlat
xchg
push
mov
gs
push
xchg
jns
sarb
test
mov
fiaddl
ret
cmp
scas
and
insl
push
dec
adc
mov
cmc
sbb
cltd
mov
or
scas
enter
outsl
cmp
inc
jg
jne
pop
rorb
inc
mov
mov
push
pop
push
xchg
inc
and
sbb
cld
adc
or
insb
xor
jae
cmp
out
cltd
icebp
mov
ljmp
in
xor
sub
or
pop
push
cmp
inc
pop
jle
mov
mov
push
setnp
mov
fisubl
sbb
std
inc
dec
mov
inc
and
xorl
pop
rcl
andl
lret
addb
xor
sub
shrl
fimull
jl
push
or
mov
cli
mov
lock
adc
xchg
dec
sbb
adc
lahf
fsubrl
aas
addl
cmc
xlat
fisubs
jmp
cmp
ja
aam
lea
icebp
shll
mov
dec
testb
push
ja
ds
and
in
lock
push
pop
mov
mov
xchg
mov
ss
sub
imul
das
push
jno
mov
dec
loopne
sub
xor
and
mov
int3
ljmp
cmp
aam
pop
cld
inc
pushf
in
mov
mov
mov
cmp
xchg
imul
push
inc
ljmp
inc
stos
iret
mov
jns
nop
addr16
add
xchg
and
sub
call
orl
insb
inc
outsl
jne
je
call
fsub
ret
dec
xlat
lea
cld
imul
jno
cmp
les
imulb
mov
and
xor
and
xchg
loope
sbb
jge
inc
push
rcrl
push
movsl
cmp
inc
mov
dec
add
dec
push
or
sbb
and
mov
sbb
lret
outsl
xor
leave
repnz
int3
pusha
add
adc
enter
or
adcb
mov
or
dec
shr
pop
gs
loop
cltd
jnp
pop
out
popa
dec
mov
fnsave
xor
out
and
push
dec
mov
sbb
jp
pop
xor
xchg
pop
jbe
pop
xchg
mov
and
clc
daa
icebp
aam
push
mov
add
mov
xor
pushf
ror
mov
sub
int3
add
and
pop
xor
mov
and
fwait
mov
cmp
xlat
pcmpeqd
ret
stos
test
xchg
push
mov
pop
scas
flds
dec
push
mov
stos
inc
or
rclb
fdivrl
add
mov
pop
out
das
arpl
imulb
push
fcomps
jecxz
pop
cmpsl
inc
mov
lret
lret
clc
imul
sbb
cmp
das
movsl
hlt
imul
adc
push
xchg
pop
dec
mov
pushf
std
fisttpl
mov
mov
imul
mov
push
in
std
push
je
jb
das
push
sarb
xchg
rcll
aas
aam
shr
sbb
out
adc
mov
lods
hlt
push
cmpsl
cmp
andb
cld
and
xchg
out
push
or
pop
rol
into
mov
push
cmp
pop
mov
mov
es
mov
or
mov
push
or
xlat
jbe
sbb
xchg
adc
lcallw
je
std
push
das
hlt
cwtl
loope
pop
xor
fwait
dec
lods
add
icebp
loop
cmc
fdivrp
mov
mov
adc
lahf
outsl
xor
mov
inc
inc
dec
mov
in
in
xchg
add
ja
lock
xor
dec
inc
outsl
xchg
push
fisubrs
roll
fs
mov
iret
arpl
sub
loopne
fists
icebp
jmp
xchg
add
mov
push
mov
scas
xchg
pop
mov
stos
mov
adc
cmc
pop
es
jbe
jbe
jmp
iret
sbb
aas
sub
stc
push
sti
jecxz
arpl
incb
xchg
xor
xchg
sub
sbb
push
jno
negb
stc
dec
test
icebp
cmp
and
xor
or
add
adc
pop
jp
loope
pop
sbb
cs
or
inc
mov
jne
xor
pop
in
dec
enter
pop
add
jmp
es
mov
aaa
or
adc
mov
stc
xchg
mov
cmp
mov
clc
enter
inc
sbb
mov
repnz
push
and
fiaddl
call
cmp
sub
xor
outsb
dec
jp
ss
rorb
cmpsb
loope
in
loopne
int
adc
shll
or
scas
cmpsb
jae
mov
mov
jo
cmc
pop
jnp
mov
addr16
adc
mov
jge
fnstsw
adc
loop
rorl
xor
hlt
and
inc
stc
mov
mov
sbb
repnz
jmp
xor
in
call
in
mov
xor
into
mov
mov
daa
fistpl
cmp
cli
or
dec
int3
movsl
xchg
mov
test
insl
or
adc
adc
dec
inc
pop
scas
stc
stc
mov
insb
popf
or
lock
push
ja
pop
repz
and
xchg
dec
ret
dec
add
test
divl
sbb
stc
fidivl
push
and
sub
leave
or
jmp
xchg
push
push
sub
xchg
push
cmpl
cmp
mov
xor
fsubl
iret
mov
rcll
cmp
fildll
mov
dec
jle
popf
data16
add
jmp
enter
icebp
or
rcrl
rcr
and
insl
mov
and
out
test
jne
xchg
sti
push
out
add
jl
addr16
ret
rclb
shrl
nop
fmuls
sub
jae
and
das
stos
mov
mov
test
and
dec
in
dec
mov
aaa
iret
pop
call
jg
xor
push
and
jmp
cld
cmp
adc
test
popa
enter
cmp
mov
inc
add
jae
cwtl
add
mov
jns
push
lret
lods
repnz
sub
push
cld
icebp
insb
adc
pop
mov
adc
orb
fs
xchg
lret
mov
subb
clc
mov
dec
jbe
push
cmp
gs
mov
int3
js
cmp
or
sbb
sbb
cmp
add
js
lods
pop
push
xchg
cmp
rcr
mov
les
ss
add
int3
addb
mov
adc
mov
dec
add
cs
mov
lcall
cltd
jae
popf
or
ret
int3
testb
in
mov
imul
fcomi
les
sub
fs
sahf
dec
xlat
push
rcrb
divb
loop
inc
mov
adc
bound
mov
mov
xchg
and
std
sub
notb
ret
addr16
push
fnsetpm(287
cmp
ljmp
add
add
shrl
ret
gs
add
mov
gs
ja,pt
out
cmpsl
and
repz
sahf
jge
mov
shll
testl
popf
hlt
outsb
jne
adc
fwait
lret
loopne
sbb
test
shrl
scas
mov
ds
in
jecxz
mov
push
xor
es
xor
push
pop
sahf
insb
add
ljmp
loope
lret
mov
xchg
mov
sub
push
inc
scas
xchg
stos
mov
icebp
sbb
andl
mov
sbb
xchg
aaa
jl
and
scas
xlat
jae
cli
jnp
push
stos
mov
fs
cmc
aad
inc
push
in
mov
mov
mov
cmpsl
lods
xlat
adc
push
mov
cltd
movsl
mov
mov
addb
jb
popf
dec
repz
hlt
loopne
adcb
std
mov
mov
mov
adc
cld
out
lds
aad
es
fbstp
ret
mov
pop
test
cmp
cmp
add
lds
xor
push
and
in
and
daa
xor
lcall
mov
jecxz
pop
ds
lea
movsb
in
jne
pusha
adc
stc
push
pusha
lock
xchg
xor
mov
jp
cmpsl
movsl
cmp
inc
mov
js
mov
jle
pop
or
test
enter
popf
inc
jle
inc
out
jae
xchg
jae
mov
cmp
jmp
pcmpeqb
dec
idivl
addr16
inc
imul
imul
xchg
nop
insb
xchg
mov
xchg
xorl
test
aas
pop
pop
dec
lret
pushf
cmpsl
leave
push
pop
jp
sbb
cmp
out
cli
or
push
popl
mov
xchg
dec
or
arpl
cmp
inc
xchg
pusha
gs
add
and
popa
in
jo
movsb
xlat
imul
lods
call
loope
cmc
mov
les
ja
sub
ljmp
les
sbb
cmp
in
cmp
lahf
and
cs
gs
fidivrl
xchg
dec
inc
imul
inc
sbb
pop
xor
pop
out
mov
ds
das
rcl
addb
or
sarl
out
shll
cmc
xchg
sbb
iret
fidivl
inc
enter
xchg
dec
enter
bound
cmpb
and
push
mov
in
mov
push
sub
shrl
adc
das
mov
lods
sub
add
pushf
mov
out
stos
fsubl
sti
pop
mov
dec
add
jne
cld
pop
sarl
out
pop
jno
add
or
pop
jg
pop
rolb
scas
or
test
cs
dec
push
jns
mov
es
fildll
in
or
xor
loope
fwait
sub
fiaddl
leave
or
dec
ret
addb
dec
insl
push
neg
mov
push
mov
add
dec
incl
roll
jnp
pop
jg
insb
lcall
sbb
mov
sub
shl
mov
mov
pusha
push
cmp
and
arpl
mov
inc
add
jg
mov
in
dec
fwait
xchg
cmp
push
sub
adc
push
push
cwtl
adc
repz
out
pop
push
addl
jb
das
pushf
jecxz
shll
ljmp
add
shr
push
sub
xlat
ficoms
frstor
mov
mov
add
pop
fistps
rcrl
add
lock
cmpsl
jno
dec
test
inc
aas
mov
leave
fsts
xchg
jb
hlt
xor
push
cmpb
ror
scas
xchg
push
xlat
or
rcrb
mov
push
sub
orl
cld
outsl
popf
cld
js
fbld
mov
pop
mov
fstps
stos
jb
pushf
int
movntps
rclb
pop
movsl
call
xchg
fistl
inc
clc
push
or
or
in
sub
and
imul
enter
xor
jl
js
lret
test
mov
out
cmp
sub
jb
jmp
xchg
xor
or
test
xchg
inc
mov
andb
ds
bound
out
aam
add
cld
adc
sahf
leave
mov
mulb
xchg
mov
xor
dec
cmp
xor
pop
popf
test
mov
and
scas
cmpl
daa
cmp
gs
xchg
jmp
xchg
in
hlt
mov
aad
push
jbe
xor
ror
in
aas
out
mov
sbb
cmp
mov
inc
fnstsw
arpl
pop
push
mov
inc
or
jge
pushf
aas
push
out
daa
test
iret
add
cmp
mov
push
mov
mov
jg
stos
dec
push
dec
jp
lcall
lcall
mov
adc
mov
mov
dec
pop
inc
pop
andb
add
mov
mov
testl
rcrb
mov
shl
mov
es
cmpsb
mov
mov
push
jne
int
mov
ja
stos
sbbl
inc
inc
dec
pop
in
mov
add
jo
jecxz
scas
cmp
bound
adc
mov
mov
fidivrs
jae
sub
push
imul
and
cld
aas
clc
inc
xchg
pop
cwtl
loop
sbb
das
lcall
rcl
xor
lret
push
mov
loope
dec
ret
mov
js
ret
divl
clc
sbb
cmp
pop
out
loop
je
sub
jmp
jmp
adc
and
xor
out
and
pop
leave
scas
testb
push
fdivrl
mov
xchg
cmpsl
pop
enter
jmp
test
dec
je
inc
pop
push
shr
pop
out
flds
andb
popa
mov
xor
fadds
in
pop
rol
mov
cmp
sub
adc
in
dec
pop
ja
stos
mov
jp
mov
aam
dec
lret
test
push
xchg
and
addb
data16
icebp
push
mov
lds
mov
insl
or
out
cmp
movsl
lds
push
sub
jmp
xchg
out
cld
es
inc
shlb
test
rcrb
jl
mov
imul
fiaddl
and
xchg
aam
mov
push
xchg
fildll
jns
push
xchg
pop
mov
sbb
lea
inc
rclb
sahf
ja
push
sti
push
inc
cmc
xrelease
mov
lock
lcall
aam
add
xorb
lret
or
dec
mov
popa
es
ljmp
gs
xor
popf
sub
sub
jmp
loop
push
sbb
andl
outsb
ret
adc
mov
mov
push
mov
filds
lret
mov
stc
and
cli
aad
push
cmpsb
jl
adc
add
fcoml
xchg
popf
xchg
jmp
adc
jb
jb
loope
xor
sub
inc
in
cmovns
lret
sti
aaa
in
gs
dec
pusha
add
test
and
mov
push
sub
bswap
int3
and
xor
inc
xor
add
mov
sbb
cld
in
aaa
sbb
or
icebp
pop
fwait
mov
pandn
mov
jb
push
adc
popf
adc
rol
mov
mov
imul
add
mov
mov
lret
pop
push
sub
sarl
jl
adc
sahf
jg
loopne
push
fwait
test
cmp
cmp
outsl
es
popf
sbb
pop
test
push
ret
movsb
aam
mov
xchg
dec
repnz
rclb
bound
xchg
mov
sub
fldl
mov
pop
daa
mov
in
icebp
mov
dec
in
xchg
mov
pop
xchg
wrmsr
out
lods
clc
mov
sub
jl
xchg
xor
sbb
cmp
mov
inc
dec
fbld
inc
insb
sbb
les
cmp
xchg
fdivp
adc
pop
jp
cmp
insl
ds
rclb
outsl
fldenv
pop
call
into
es
cmp
jg
or
adc
sbb
test
sbb
int
add
or
imul
hlt
jne
ds
outsl
cs
dec
icebp
mov
add
jp
aas
sbb
push
mov
addr16
lock
sub
shrl
mov
fisubrl
nop
xor
stos
jno
pmuludq
or
push
pusha
cmp
fst
outsb
jl
mov
pop
dec
sbb
enter
fists
push
scas
mov
adc
xchg
xor
xchg
insl
popa
fsubs
aas
movsl
mov
and
mov
fcoml
gs
pop
jb
mov
mov
cs
shrl
mov
movsl
in
out
inc
mov
mov
xchg
jno
jnp
out
scas
jecxz
fs
jle
sub
dec
mov
adc
sbb
fs
dec
sbb
mov
stc
push
repnz
divb
jl
mov
mov
jnp
out
ja
fstps
jl
xor
dec
adc
lods
popa
mov
or
dec
imul
or
sarb
sbb
icebp
fldenv
notl
es
xor
push
adc
mov
and
ljmp
jne
popl
sahf
inc
dec
push
jp
iret
jge
imul
les
rorb
push
stos
xor
movsl
xchg
ret
testl
enter
mov
cmpsb
mov
popf
int
into
dec
sti
lret
enter
adc
pushf
cmp
jae
pushf
ret
sub
popf
sbb
movsl
xchg
cli
testb
dec
fisttpll
fwait
scas
popa
cmp
xorl
sti
ja
je
pop
in
aaa
rcr
and
ret
in
add
cmc
sahf
addb
mov
pop
mov
pusha
mov
jle
mov
pusha
jecxz
inc
fstl
dec
inc
jno
mov
lahf
testl
fsubl
popw
pop
imul
cmp
clc
sub
adc
pop
jl
jecxz
notl
in
add
xlat
inc
call
out
pop
add
push
js
cmpsl
inc
add
scas
cwtl
inc
pusha
dec
decl
fisttps
ror
adc
pop
sarb
out
stos
or
out
mov
xor
adc
add
add
sti
js
paddb
call
cmpsl
mov
inc
stc
mov
out
rol
jmp
pusha
and
ret
rcrl
loope
pop
insb
pop
cmp
lret
adc
or
jle
movsl
mov
in
jl
push
cmp
aad
inc
dec
fstpt
mov
icebp
jecxz
daa
cli
rol
jo
mov
mov
shrb
rcl
sbb
add
jmp
inc
pop
cmpsl
add
add
mov
fwait
xorl
je
cmpsl
mov
pop
cmc
or
mov
ljmp
sbb
cmp
xchg
sbb
xchg
stos
mov
mov
add
andb
jbe
xor
int
shll
fdivr
inc
adc
into
movsl
frstor
cmp
insb
mov
adc
add
nop
add
lret
fistl
sti
xchg
aad
or
xor
and
jl
imulb
dec
cmp
mov
sbb
jns
or
stos
or
ret
adc
push
pushf
fldt
xchg
push
inc
adc
xlat
lea
pop
cltd
dec
ja
rcrb
fisttps
fwait
mov
cmp
dec
mov
je
pop
dec
mov
scas
stos
sub
and
cld
adc
int3
addr16
or
dec
ja
leave
scas
mov
dec
rcrb
jl
daa
fs
test
mov
mov
sub
xchg
clc
imul
add
cld
dec
adc
mov
out
clc
dec
les
pop
cmpsb
ret
sub
inc
pop
cmp
aaa
les
ret
add
or
mov
add
push
test
aam
dec
dec
or
push
cmp
or
xchg
les
jl
lods
jmp
adc
lcall
daa
stos
scas
push
enter
lret
mov
fcmovu
aas
push
popf
popa
push
add
mov
repz
xchg
arpl
and
ss
xchg
jne
lea
das
rcll
out
popa
fdivrs
movsl
xchg
mov
and
or
in
ljmp
adc
icebp
push
pop
out
aad
cld
lret
dec
inc
sub
inc
pop
dec
iret
mov
jbe
lcall
add
pop
pusha
icebp
ljmp
or
pop
dec
aaa
xor
and
xorl
adc
and
mov
popf
dec
xchg
je
or
fiaddl
and
push
pop
icebp
decl
dec
jno
add
fdivp
cmp
xchg
adc
mov
shll
cltd
test
fdivs
jg
lret
sub
outsb
fistl
es
dec
sbb
fnstsw
xchg
pop
jp
jbe
pusha
sbb
dec
add
cltd
push
adc
ds
lahf
cmpsl
push
repnz
rclb
incb
sbb
lods
out
mov
xlat
push
jmp
jmp
and
cmp
jno
lahf
leave
int3
fcomps
add
inc
movsl
push
lret
adc
pop
enter
inc
adc
pop
jbe
and
cmp
inc
clc
out
stc
adc
test
cltd
ret
je
cmp
clc
cltd
es
outsl
xchg
mov
add
pop
mov
in
flds
pop
aas
jns
ficoml
dec
pushl
int3
pushf
add
xor
add
cli
pop
xor
adc
jg
jno
lds
cmp
fsubrp
in
lds
cmpsb
and
jne
imull
leave
ja
pop
dec
loope
lret
loopne
in
pop
mov
push
jbe
sbb
fstps
inc
or
repnz
mov
rep
pop
sar
mov
lahf
jmp
push
hlt
push
arpl
pop
aad
mov
add
dec
adc
clc
mov
out
stos
in
nop
pop
ficoms
sbb
and
mov
mov
push
aaa
movsl
fwait
ret
xorl
dec
adc
fwait
aas
arpl
fwait
and
and
out
nop
dec
aas
xchg
loop
in
mov
mov
jl
push
ret
ret
adc
add
in
or
movsl
es
sbb
xchg
cld
sub
ret
xchg
add
roll
xchg
cmp
adc
add
mov
xor
inc
or
in
push
dec
fsubrs
cmc
pop
sub
in
aad
push
sbb
test
mov
fimuls
pop
mov
sub
aad
arpl
push
push
fnstcw
mov
inc
stc
pop
sbb
push
inc
stos
push
push
aad
out
add
and
insl
mov
cmpsl
dec
pop
ds
inc
pop
push
xor
lock
pop
cmc
or
push
lcall
push
out
sub
mov
xchg
jl
je
or
leave
dec
pslld
pop
imul
cmp
repnz
jmp
ljmp
or
enter
sahf
ja
repnz
addr16
push
fstps
lea
jge
in
aad
push
pop
orb
xchg
mov
add
aas
push
sbb
lcall
outsl
xlat
movsl
xor
mov
ret
test
inc
ret
push
les
push
cmc
or
fidivs
outsb
out
push
cmp
xchg
enter
fbld
push
das
sub
or
jmpw
jno
lods
pusha
iret
pushf
lods
inc
or
dec
rcr
movl
push
test
test
dec
sbb
xor
jnp
add
mov
orps
jmp
ret
push
std
test
mov
add
sbb
sbb
sub
shrb
psubd
mov
mov
popa
add
stos
mov
cli
pop
adcb
dec
lcall
mov
sub
popf
sub
repz
ret
jp
and
dec
fnstenv
mov
stos
pop
aaa
xchg
daa
lret
mov
inc
cmp
pushf
test
int
lret
or
pop
cmp
mov
or
mov
sbb
je
in
aas
mov
push
cmp
rorl
xchg
xlat
imul
mov
xorl
mov
mov
rol
jne
cli
xor
pusha
push
jns
push
aaa
pop
ret
repz
push
movsb
cmp
loopne
ret
or
or
add
das
mov
and
loope
push
pop
xchg
push
jmp
push
dec
mov
dec
inc
sarl
push
xor
add
push
les
mov
push
in
outsl
xchg
inc
xchg
in
mov
sub
pop
iret
popa
or
xchg
jne
popf
xchg
decb
jl
sbb
and
imul
fistl
stos
out
in
dec
es
jle
maskmovq
notl
inc
or
mov
push
std
es
mov
mov
addl
sti
les
inc
stos
mov
cld
lock
add
insb
sbb
or
lret
xor
dec
push
xor
sub
fadds
aad
pusha
xchg
mov
outsl
mov
mov
fstl
data16
testl
popf
adcl
add
cmp
insb
xor
jmp
mov
repnz
aad
mov
fimull
mov
movsl
imul
daa
mov
add
push
add
sub
scas
adc
mov
sub
pop
xor
sar
call
jle
mov
sar
push
and
mov
popa
and
push
popf
mov
jb
mov
ret
hlt
xlat
dec
popa
insb
inc
mov
sub
xor
pop
stos
mov
lea
outsl
xchg
ficoms
xlat
cmp
out
push
xchg
dec
xor
sub
push
cmpsl
xchg
arpl
cmpsb
repz
or
xchg
insl
sbb
negl
outsl
scas
sbb
jo
xor
sbb
mov
test
xor
push
cmp
mov
pop
xchg
stos
jns
mov
adc
and
cmp
jmp
js
xor
or
fabs
shll
mov
cmpsl
mov
faddl
sbb
mov
mov
xchg
sahf
sbb
loop
test
sarb
jp
xlat
mov
jl
into
int3
fdiv
sbb
jne
jl
lahf
les
loop
and
jne
ficomps
jle
test
mov
lock
movsb
or
test
add
sbb
daa
mov
sbb
in
pushf
into
mov
xchg
jae
test
cwtl
mov
nop
push
or
xchg
push
push
jg
repz
into
fistpl
pusha
xchg
add
push
mov
jge
mov
mov
in
data16
jg
mov
in
and
xchg
jg
xchg
cmp
arpl
into
stc
xor
stos
mov
cmc
or
or
mov
pushf
lock
insl
dec
jno
es
push
testl
inc
xor
getsec
xor
and
cmp
cli
pusha
ja
lods
mov
fidivrl
mov
jmp
cmc
mov
mov
insb
in
xchg
or
mov
mov
bound
cmp
cli
shrb
fsts
push
jb
fisubrl
jecxz
lcall
test
fisubs
aad
nop
popl
sub
inc
test
cltd
xor
mov
sbb
pop
add
mov
test
insl
pop
int
or
loopne
push
xor
lods
jp
les
je
sub
aaa
cmp
jne
inc
add
in
out
jbe
pop
std
xor
pop
jne
push
mull
stos
ret
je
and
and
out
jbe
jno
xor
cmp
sub
cli
jl
mov
sub
mov
out
dec
js
ret
jmp
test
ret
je
inc
repnz
or
nop
lds
lods
mov
jbe
add
jp
mov
pop
imul
xor
repz
mov
xchg
stc
cmp
adc
pop
test
jo
lods
cli
lods
lret
adc
jnp
call
cmpsb
adc
dec
cld
mov
insb
js
in
mov
jmp
mov
daa
pop
shlb
push
sbb
fdivs
shr
cmc
dec
sbb
imul
repz
cmc
pusha
lahf
jle
ret
or
ret
pop
into
mov
lock
insb
rorl
push
push
mov
xchg
mov
or
imul
faddl
out
lods
inc
rorl
pop
push
in
std
xchg
sub
loopne
dec
mov
xchg
movsb
enter
push
shll
test
xor
sbb
mov
push
mov
pop
mov
cmp
shlb
cmp
mov
and
aad
sahf
mov
outsb
call
das
sub
pop
das
int3
pop
jae
xchg
jns
fcmovb
lcall
fwait
xchg
in
lret
mov
in
dec
jl
add
mov
lds
xor
push
loop
sub
decb
cmp
sub
clc
fstpl
dec
adc
popf
fwait
cmp
adc
lock
pop
pop
sbb
arpl
dec
and
cmp
mov
jg
movsl
mov
pop
mov
movsb
xor
stos
inc
jb
pop
push
add
adc
dec
sub
popf
push
dec
data16
jno
mov
sbb
fiadds
or
in
pushf
adc
mov
ds
icebp
imul
pusha
cmp
clc
out
int3
notb
addl
xchg
test
imul
lcall
cmpl
loope
loop
xor
jmp
dec
movsb
aaa
mov
dec
pop
and
pop
cmc
test
ret
cmpsl
mov
jmp
xor
loopne
xor
sarl
pusha
push
insb
lods
inc
mov
outsl
addl
icebp
push
xchg
mov
les
jmp
jge
mov
in
jle
add
inc
fisubrs
in
xchg
mov
adc
or
cmpsb
sub
xor
pop
ja
out
repz
lods
jb
xor
push
mov
push
insl
inc
push
cmpsb
scas
pop
mov
repz
fcmovnb
pusha
in
jne
or
out
ljmp
mov
mov
jg
lret
sbb
fcomps
js
cmpsl
outsb
ljmp
cmpsl
and
xchg
je
adc
xlat
je
adc
inc
mov
fisubs
mov
repnz
pop
mov
jmp
add
add
leave
xor
jge
mov
cwtl
int
jle
icebp
cmp
repnz
addr16
jnp
stos
mov
pop
pop
scas
imul
or
or
inc
jb
rcl
xchg
lds
mov
int
mov
jecxz
ss
popf
push
ja
rsm
repnz
repnz
jne
xchg
inc
jecxz
or
dec
pop
call
cli
int
test
test
int3
hlt
mov
roll
inc
bound
cmp
stos
sbb
inc
cltd
pop
out
cmp
sub
push
inc
popf
mov
addr16
mov
gs
cltd
repz
pop
xchg
jp
incb
or
jmp
cmc
fisttps
mov
sbb
mov
adc
mov
fisubrs
mov
jo
fwait
pop
adc
inc
cltd
mov
sbb
or
pop
fs
loop
sub
data16
movsl
xchg
xor
mov
sub
les
adc
mov
loope
lods
ja
ret
pushf
push
hlt
popf
or
jl
mov
xlat
shl
push
enter
fs
dec
jne
inc
jle
fiaddl
popa
test
or
cmp
aaa
insl
inc
pop
movsl
lret
xor
sbb
lret
jecxz
mov
push
push
loope
icebp
xor
aas
ffreep
jne
push
aad
push
lahf
mov
sbb
mov
cld
icebp
fsub
pop
cmpsl
sbb
mov
pop
les
cmpsb
clc
xlat
or
dec
push
into
movsb
push
xchg
sbb
jo
aam
adc
test
out
aaa
pop
xor
pop
sti
sbb
ret
sub
pop
js
sub
rclb
repz
mov
movsb
icebp
test
hlt
sub
xor
fs
sub
xor
mov
sub
mov
xlat
popa
adc
jnp
pushf
jp
mov
stc
jno
dec
jge
cmc
bound
mov
add
or
loopne
aad
pop
cld
fldt
popf
fldcw
shlb
fldt
lods
repz
sbb
mov
adc
inc
or
jp
pop
repz
out
pop
dec
cmp
xor
outsb
xlat
pop
adc
test
mov
jle
popl
mov
pop
orl
dec
mov
xchg
mov
addr16
dec
lcall
stos
push
pop
mov
pop
or
popa
or
push
mov
cmp
decl
pushl
pop
pop
cmpsb
ficoml
notl
dec
or
test
rol
or
push
stc
push
fwait
lock
sbb
test
std
cmpsb
pop
call
fsubp
and
mov
sahf
cltd
fldl
imul
stos
push
mov
sub
fwait
or
mov
push
cmp
mov
adcb
xchg
mov
xchg
or
xchg
add
xor
mov
sti
clc
enter
mov
lret
xor
inc
imul
adcl
cmc
scas
cltd
insb
mov
mov
cmp
dec
jl
and
add
pop
dec
sbb
add
cmp
pop
pushf
mov
lahf
mov
cmp
cld
mov
dec
mov
bound
jecxz
mov
cmp
cli
dec
mov
repz
dec
dec
lret
das
mov
jle
cmp
pusha
lods
out
add
loope
jmp
leave
cld
add
lcall
jns
dec
sbb
scas
push
mov
jbe
jno
sub
iret
push
lock
sbb
loopne
movsb
sbb
pushf
clc
mov
addr16
cmpsb
std
xchg
xchg
nop
dec
add
push
add
inc
aad
sub
mov
notl
divl
sub
test
gs
lock
mov
jmp
outsb
and
or
push
push
loopne
sbb
rorw
aam
pusha
xchg
sbbb
pop
dec
push
loopne
push
std
cmpsb
mov
stos
inc
fdivl
jae
mov
inc
cmp
fidivs
sar
dec
ret
into
out
aas
xchg
nop
sbb
mov
aas
out
daa
pop
sbb
adc
cmc
mov
jns
addb
push
dec
pusha
pop
loope
push
fsubp
mov
call
or
inc
imul
jge
decl
lret
mov
mov
mov
sti
sub
inc
dec
stos
cmp
jo
hlt
cld
mov
lds
lock
fidivl
pop
rolb
pop
aas
xlat
aas
aaa
add
mov
insb
inc
sub
and
lods
shl
leave
lock
mov
cmp
pop
push
test
push
imul
in
add
cmp
bound
popf
pop
adc
sti
mov
lds
rcrb
scas
push
push
repz
inc
push
mov
cmp
icebp
inc
mov
mov
mov
adc
rcrb
addr16
repz
mov
push
xor
test
sti
daa
inc
xchg
cmp
add
mov
int
jae
test
aaa
cwtl
jns
mov
pusha
xor
mov
enter
das
push
lahf
fstl
sub
mov
jbe
push
xlat
adc
cmpsl
icebp
dec
int
mov
lret
icebp
cltd
out
loope
xchg
loope
jmp
cmp
ds
jb
mov
stos
sbbb
mulb
rclb
loop
lahf
dec
push
or
leave
add
jecxz,pn
pop
cmp
mov
sub
sub
fwait
lret
repz
xchg
fnstsw
out
clc
sahf
and
addr16
or
lods
bnd
pusha
mov
rolb
insl
xchg
rclb
ss
dec
enter
cltd
movsl
sbb
jp
pop
xor
jecxz
jmp
scas
fcoms
pusha
idivb
dec
movsl
mov
js
cltd
int
ffree
push
fsubp
mov
jle
push
xchg
and
cmp
sti
cwtl
nop
testl
adc
mov
mov
sub
mov
xor
cmp
repnz
or
mov
dec
test
int3
mov
popf
repnz
sbb
mov
lods
mov
clc
push
adc
hlt
cmp
sbb
xor
push
pop
jns
xor
cs
cld
sbb
jno
inc
pop
add
icebp
dec
test
or
mov
fwait
push
pop
bound
call
loop
iret
sbb
sbb
mov
and
sbb
roll
call
xor
inc
sahf
mov
jne
or
and
dec
jle
jge
pop
out
scas
aam
pop
les
movsb
xchg
out
mov
mov
jae
test
lcall
xlat
ficoml
pop
idivb
mov
jne
mov
ret
mov
sarl
call
subb
sbb
push
into
out
cmpsb
cmp
popf
and
aas
sbb
fwait
dec
es
jno
jbe
sub
and
mov
xchg
xchg
fbstp
mov
cmp
outsb
lcall
imulb
mov
and
jmp
cmp
or
sub
mov
mov
xor
mov
lods
aas
jno
xor
aam
fmuls
push
and
cmpsl
dec
imul
loope
sbb
mov
jge
mov
lods
pop
ret
adc
mov
lret
rorb
mov
out
cmpsb
loop
jp
icebp
mov
addr16
mov
out
push
mov
out
stos
inc
cmpsl
pop
dec
daa
sbb
or
in
lahf
mov
lret
cmp
mov
mov
out
sbb
test
lock
shl
adc
push
xor
repz
jle
xchg
cmc
dec
mov
push
fisttps
lcall
and
xchg
mov
and
inc
or
jmp
rorl
and
sbb
or
lret
sub
dec
test
test
lock
jb
push
lahf
and
rcrb
rcrl
addr16
inc
xlat
xchg
gs
sbb
or
jne
ficoml
scas
jg
dec
cmpsb
outsb
test
call
enter
ss
cmp
lret
cs
mov
scas
xchg
bound
inc
sub
in
sti
push
pop
enter
xor
xlat
pop
out
add
mov
dec
fs
inc
pushf
test
int3
sbb
mov
test
lcall
shll
aad
xor
cmp
cmp
movsb
xor
js
and
cmp
in
cli
cmp
add
mov
jae
fisubs
mov
or
cwtl
clc
xchg
push
rcrb
aas
jo
fwait
scas
ljmp
pop
daa
inc
js
push
fsubl
jge
cmpsb
mov
aam
jnp
enter
imulb
adc
ja
add
hlt
mulb
cmp
outsl
jnp
jg
jmp
lret
xchg
cli
push
imul
push
dec
cmpb
xor
mov
out
cs
xchg
shlb
xorl
movsl
shrb
aas
lock
or
divl
movsb
fisubl
or
pop
mov
int3
imul
pop
scas
out
jl
cmpsl
aaa
cmp
mov
mov
daa
es
inc
pusha
lcall
loopne
mov
imul
dec
mov
push
add
cmp
push
out
push
orl
addl
insb
iret
insl
or
dec
sarb
into
jb
xor
out
jmp
dec
jb
add
dec
dec
dec
inc
fidivrs
xor
popa
mov
aaa
outsl
sbb
fs
addr16
xchg
cmp
and
mov
or
rorl
dec
std
out
ss
push
rcll
gs
cmp
add
ret
add
xchg
mov
xchg
pop
inc
imul
leave
idivl
fadds
cmc
test
and
mov
stos
fldz
or
frstor
xchg
popa
stos
lahf
cmc
mov
or
ret
ds
mov
push
mov
ror
inc
in
fnstcw
jb
shl
repnz
inc
jo
mov
push
sbb
mov
ret
mov
mov
loopne
lea
dec
jbe
les
mov
fcomps
jg
sbb
iret
pop
ljmp
xor
movsl
jg
mov
ljmp
ret
xor
call
push
add
pop
cltd
xchg
jge
sub
and
sar
ljmp
lret
push
aas
push
ret
mull
pop
cmpl
shll
pop
inc
jg
inc
jno
out
xor
xor
insl
insl
mov
or
cli
or
mov
and
inc
out
in
xchg
sub
mov
or
mov
sti
or
hlt
nop
fs
std
cli
aam
ret
pop
stos
cli
adc
sbb
mov
mov
mov
jmp
mov
xor
stos
xor
ja
pop
pop
dec
or
sub
repnz
xor
xchg
cmp
test
xchg
xchg
sub
cwtl
mov
aas
sbb
jl
outsl
imul
push
inc
in
cs
lret
jge
dec
gs
mov
lret
mov
in
dec
jmp
push
xchg
pusha
decl
scas
scas
adc
or
jne
int3
xor
add
jae
imul
pusha
mov
call
sbb
push
mov
xor
sbb
mov
xchg
pushf
cmp
jmp
xor
insb
or
and
loopne
sub
jge
pop
fisubrl
xchg
jg
xorl
mov
xchg
int3
mov
push
ljmp
nop
in
pushf
out
and
jno
decb
mov
jb
out
mov
es
popf
rcrl
jmp
xor
dec
ficoms
lret
add
fists
jo
test
out
adc
jl
adc
dec
push
cmc
cmp
dec
inc
jb
jl
xor
push
ljmp
arpl
add
ret
add
xchg
mov
outsb
mov
aas
dec
jae
ret
fcmovb
es
int
ror
push
pusha
repz
jge
cld
push
outsl
in
fsubs
jne
enter
popf
movsl
scas
popf
stc
ret
push
popf
mov
ss
daa
lahf
pop
dec
lahf
adc
or
jg
add
jl
jne
jmp
loope
sub
notb
pop
cltd
rclb
daa
int
sub
stc
aas
daa
call
lds
mov
in
sbb
arpl
inc
jge
movsl
mov
jae
xchg
xchg
push
mov
lret
dec
inc
cli
js
sub
fisttpll
mov
mov
mov
insb
notb
lock
jno
xor
ljmp
cmpsl
push
stc
sbb
xchg
fisubrs
mov
add
nop
xchg
aam
xor
mov
sub
mov
sub
add
or
addr16
xchg
mov
fldcw
add
or
sbb
stos
bswap
add
pop
sbb
movsl
movsb
js
pop
lcall
push
mov
pushf
cmp
pop
cmc
outsb
aas
and
rclb
jb
shr
xchg
lds
aaa
jo
or
mov
es
push
dec
test
mov
dec
sub
add
insb
pop
inc
mov
ja
or
lahf
inc
xchg
mov
or
lret
pop
xor
mov
sbb
mov
sub
cmp
nop
lods
test
add
sti
and
mov
sbb
popf
mov
xchg
aaa
out
jno
fnstsw
clc
roll
jp
int3
fldt
dec
popa
jns
mov
adc
lcall
sbb
hlt
xor
call
mov
mov
rolb
mov
daa
leave
addr16
dec
scas
aad
arpl
pop
sar
dec
mov
je
mov
sar
mov
mov
adc
aas
dec
lods
sar
aam
ljmp
je
xchg
mov
es
and
or
jge
dec
into
sbb
cs
fnsave
in
and
cmp
call
mov
call
cld
pcmpgtw
orl
sub
outsl
icebp
jne
shrb
shrl
pop
push
popa
pop
int3
shl
in
sti
adc
mov
xchg
hlt
jge
mov
sbbb
push
movsl
push
ja
mov
ret
xchg
pushf
repz
repz
fisttpl
ja
xchg
push
les
mov
jle
icebp
sti
repnz
mov
test
xchg
pop
int3
fcomps
xchg
jmp
adc
mov
cld
xchg
inc
add
inc
fldcw
daa
call
fwait
pcmpeqw
xchg
fcoms
rorl
push
test
lods
or
jb
pop
int
arpl
roll
xchg
pop
in
mov
jno
pop
loope
out
ret
add
call
xchg
sub
sub
adc
xor
jle
pop
repz
cmp
mov
mov
sub
xchg
inc
fdivrl
pop
popa
cmp
xchg
mov
sahf
cwtl
ss
push
inc
daa
insl
xchg
pop
fcoml
xor
push
bnd
ret
push
les
testl
jb
xlat
inc
sub
in
outsl
imul
and
mov
fcoml
jb
push
jle
mov
rep
fidivl
nop
push
sub
push
aad
mov
pop
mov
loop
jl
adc
lcall
ja
divb
loop
pusha
pusha
sbb
cld
shll
xchg
add
shrd
jmp
lock
out
fnstcw
cmpsb
bound
pop
pushf
or
jp
daa
ret
dec
test
push
mov
cltd
shlb
shlb
and
nop
call
jmp
mov
sub
aad
gs
in
pop
dec
and
mov
cmpsl
das
and
push
mov
add
dec
pop
and
mov
xor
push
push
ret
pop
mov
inc
jl
loop
adc
mov
subb
sbb
dec
inc
cmp
roll
cmpsb
cmp
adc
pop
sbb
push
out
roll
pop
leave
pushf
lods
dec
xchg
add
pop
sarb
dec
pop
lods
leave
mov
sahf
dec
pop
gs
adc
lcall
stos
out
ds
sbb
and
mov
inc
sub
xor
and
icebp
add
push
and
cli
sahf
stos
int3
mov
rcrl
add
jg
leave
icebp
pop
enter
ficoml
lret
cmpb
adc
mov
or
pop
data16
cmp
sbb
jl
addl
ljmp
mov
enter
pop
xor
push
imul
add
lcall
loopne
cwtl
jno
push
xchg
addl
push
out
fiaddl
shrb
out
cmp
pop
js
adc
push
mov
outsl
pop
sbb
shrl
stos
inc
lods
push
adc
dec
mov
daa
js
setle
mov
imul
cmpsl
test
sub
icebp
add
imulb
lods
mov
lcall
ret
inc
xor
je
test
addr16
xor
mov
nop
cmp
cmp
pop
mov
mov
xchg
add
inc
xor
stc
mov
xchg
mov
sar
popa
and
cmp
push
push
leave
push
jl
dec
mov
or
movsb
mov
and
das
nop
xchg
xchg
mov
xor
sahf
xchg
pop
push
jo
movsb
xchg
insl
pop
jns
xor
lods
fs
sbbb
sub
pop
or
mov
jmp
nop
sbb
push
mov
cmp
push
mov
pop
dec
out
orl
xor
push
or
mov
hlt
xchg
fcoml
popa
or
and
xlat
repnz
push
inc
ss
int3
push
cmpsl
into
dec
cli
popa
push
shlb
xor
dec
cmp
loopne
iret
and
test
fwait
xlat
sti
cmp
mov
mov
jo
popa
enter
cmpsl
xchg
inc
sub
xor
or
arpl
xor
subb
pop
push
in
orl
pushf
dec
jnp
in
dec
mov
jns
fcmove
add
push
adc
iret
xchg
or
lret
pop
xchg
inc
cmp
jb
push
aas
adc
pusha
ja
inc
jmp
mov
test
xchg
pop
or
lds
mov
clc
and
bound
sub
add
mov
xchg
and
xchg
jp
or
cmp
xchg
ds
fistpl
aaa
add
repz
loope
fadds
out
jmp
inc
inc
jb
fdiv
xchg
xchg
ret
xorl
ret
dec
ret
fldt
jmp
inc
xor
jge
maskmovq
notl
inc
and
push
mov
jae
jae
stos
fldt
mov
dec
in
jp
cmc
jo
jg
xchg
movsl
xor
jmp
cmpsl
dec
lds
xor
pop
lret
dec
xchg
ja
subb
pop
sub
setnp
add
mov
adc
mov
add
insl
js
leave
sub
mov
lods
push
fisttpll
and
scas
or
cld
sbb
cs
mov
xor
pop
jne
lea
push
cmp
dec
ljmp
mov
adc
adc
cli
jb
lock
cltd
sbb
jbe
push
lret
xor
fadds
push
pop
icebp
sahf
xor
in
pop
mov
fld
sbb
inc
std
cmpsl
jg
scas
incl
xchg
movl
pop
sbbb
loop
hlt
fdivs
into
pop
xlat
les
xlat
cmp
xor
ret
push
mov
test
call
inc
sahf
sub
out
add
and
in
mov
outsl
adc
dec
cltd
fidivrs
jg
pshufw
scas
adc
add
call
sub
shll
adc
xchg
push
add
subl
mov
pop
jnp
and
fmuls
in
xchg
divb
int
inc
add
outsl
or
mov
dec
stos
cmp
xchg
push
sbb
and
push
in
pop
pop
cmp
loope
mov
and
jne
das
mov
push
roll
dec
xor
and
xor
lcall
aam
xchg
inc
push
xorb
lea
cmc
mov
arpl
dec
fwait
jmp
popa
movsl
xor
push
adc
addl
adc
jle
in
cmp
lds
jnp
dec
jp
fs
mov
test
leave
add
and
add
push
cld
icebp
xor
push
comiss
nop
mov
mov
icebp
data16
xor
int
push
mov
mov
mov
fs
sub
js
and
dec
cmp
aaa
jae
add
pop
bound
js
js
and
pop
mov
std
sub
lret
ss
adc
test
and
pop
sbb
stos
push
cltd
inc
shl
mov
iret
in
cmpsl
xor
dec
add
inc
mov
xchg
mov
push
nop
or
pop
aaa
mov
pop
scas
push
sub
pop
addb
xor
add
mov
jl
xor
aad
bound
mov
movsb
aaa
stos
popa
or
mov
lcall
mov
push
stos
mov
jns
cwtl
push
mov
lret
mov
test
cmpsl
stos
xor
je
aam
or
cli
faddl
imul
jge
mov
jb
arpl
es
mov
int
cmp
movsl
cltd
pushf
jbe
outsb
notb
pusha
push
daa
sahf
cwtl
cmp
cs
dec
mov
loopne
fcomip
inc
out
xor
mov
insl
push
sbb
adc
or
dec
add
sub
pop
lret
inc
dec
int
push
repz
out
movntq
call
sub
movsb
repz
mov
cmp
sub
lahf
stc
xor
jnp
in
pop
cmp
push
aad
dec
or
push
jle
fcomps
into
push
stc
fidivrl
cmp
sahf
out
mov
cmpsl
adc
jp
out
xor
add
lret
dec
sub
lds
jno
dec
sub
arpl
imul
rcll
xchg
push
jb
shlb
mov
pusha
push
xlat
data16
cmp
adc
xchg
xchg
out
xor
jbe
xorl
xor
clc
sahf
loop
mov
cltd
mov
ret
xlat
mov
in
movsl
stos
stos
cmp
andl
lret
into
mov
mov
fisubrl
pop
pop
popf
aaa
xchg
mov
in
test
rorl
js
ljmp
repnz
mov
andb
nop
mov
dec
es
fmull
pop
shll
push
inc
xchg
push
xor
daa
in
jae
pop
ljmp
js
push
gs
insb
mov
fbld
sbb
sahf
decb
clc
add
cmpsl
cld
lahf
cmpsb
jbe
push
fdivrs
shrb
fisubrl
push
cmp
inc
into
pop
lret
push
sahf
mov
mov
adc
push
loope
xchg
fcoms
pop
cwtl
or
jae
sbb
loop
cmc
mov
dec
out
addl
repnz
adc
jg
sbb
jge
cld
mov
jbe
enter
push
push
mov
bound
add
push
call
insl
fadds
sbb
jmp
aam
add
shrl
gs
shrl
sahf
mov
in
mov
popa
je,pn
ljmp
dec
mov
or
popf
push
popa
mov
orb
jmp
test
pop
or
aas
movsl
sbb
sbb
cmpsb
pop
shr
stc
xor
mov
icebp
push
into
mov
mov
jp
sub
icebp
jg
test
adc
cmc
das
dec
inc
outsl
imul
inc
cld
push
xchg
mov
fmuls
loope
js
push
test
xor
xlat
mov
ds
frstor
bound
gs
inc
leave
mov
arpl
jae
andb
ljmp
jbe
fnstsw
sar
pop
mov
adc
mov
aas
mov
jmp
jge
sbb
insl
jl
pop
pop
ret
cmp
and
mov
out
loopne,pn
imul
add
stc
imulb
or
dec
sbb
push
int3
int
andl
jo
cltd
push
enter
fsubl
sbb
imul
dec
jp
mov
jb
push
adc
gs
inc
pop
pop
xchg
push
mov
movsl
sub
insb
xchg
add
ja
inc
daa
or
aaa
and
push
les
vmread
xor
cmp
fsub
cltd
push
lods
inc
fnstsw
sbb
test
adc
jne
dec
ficompl
cmc
jb
jno
gs
imul
imul
movsb
xor
xor
pop
insb
pop
xor
mov
inc
addr16
mov
stc
cmp
cmp
fwait
cltd
fsubrl
jbe
loop
or
or
test
jp
jmp
outsb
pusha
inc
out
pushf
addr16
mov
or
jecxz
pusha
incb
pop
jecxz
xchg
mov
xor
lods
inc
lcall
mov
pop
push
and
mov
es
lret
add
shll
imul
sub
xchg
or
pop
rcll
mov
adc
or
lock
mov
ja
mov
outsb
mov
jno,pt
inc
rorb
jle
addr16
dec
cmp
mov
outsl
adc
into
decl
stc
gs
repnz
scas
insl
mov
adc
mov
or
adc
jle
dec
test
sbb
insl
mov
push
pop
mov
or
test
mov
icebp
aam
fadd
adc
andl
sub
dec
push
jo
mov
push
and
pushf
and
mov
jo
and
fidivrs
add
sbb
icebp
mov
mov
int
sti
sarb
test
and
sahf
adcl
and
and
pop
and
leave
jae
inc
inc
movsl
push
pop
insl
movsb
sbb
mov
stos
je
insb
daa
in
cmpb
loop
sahf
inc
lods
cmpsl
aas
pop
or
fstl
push
ret
sbb
in
xchg
stos
push
testb
xor
ja
add
das
sbb
js
mov
push
notl
mov
sub
mov
sar
mov
ds
lahf
mov
stc
sub
dec
xchg
arpl
sbb
jb
xor
ljmp
xchg
ja
mov
sbb
push
test
jmp
nop
inc
loope
sahf
sahf
into
add
insl
cmpsb
sbb
push
stos
into
lret
mov
push
je
add
pusha
in
int
notl
outsl
push
mov
xor
cmp
or
pop
push
mov
sbb
mov
aaa
inc
dec
aaa
dec
jbe
sub
es
mov
imul
adc
arpl
aaa
inc
xor
mov
stc
jmp
add
cmp
xchg
into
lcall
ljmp
pop
xor
iret
mov
int
stos
lahf
inc
xchg
add
jno,pt
test
xorps
and
dec
aam
sub
mov
fsubrp
notl
leave
adc
movsl
xchg
into
cmpsb
jno
dec
popf
mov
pop
cli
cltd
fwait
mov
movl
push
data16
imul
in
xor
sub
xchg
lock
add
pop
cmp
movsl
inc
pop
mulb
push
subl
in
jl
or
test
out
sub
mov
mov
xlat
outsl
fcmove
arpl
lcallw
insl
inc
sbb
mov
pop
xor
in
cmp
iret
fcmovne
dec
sub
mov
cwtl
loope
cmp
pop
add
aam
push
xchg
addb
sub
mov
or
rorl
out
sbb
test
mov
jp
mov
mov
add
adc
cmp
pop
je
pop
cmp
xchg
enter
add
mov
out
mov
test
mov
gs
popf
xor
in
mov
inc
js
roll
add
fcoml
fistpl
dec
sbb
cs
call
jb
jns
std
and
icebp
lds
lahf
fcoml
sub
push
pop
loope
mov
xchg
popf
push
jl
jne
stos
sub
outsl
clc
cmp
pop
lcall
push
sarl
push
leave
pop
in
or
outsl
lods
dec
jb
add
jo
sub
es
mov
insb
pop
hlt
cmc
mov
push
mov
pop
rol
and
or
push
mov
imul
repz
inc
mov
imul
push
push
repnz
dec
xchg
xchg
and
mov
xor
cmp
inc
push
imul
data16
adc
dec
addb
lret
out
dec
mov
mov
and
insb
nop
and
imul
jns
dec
or
lods
xchg
mov
ljmp
cmp
cwtl
push
mov
pop
loopne
lods
adc
andl
jb
rcl
and
insb
xchg
ss
xor
cli
or
enter
scas
cmp
mov
negb
mov
bound
pop
lea
in
sbb
jno
and
shl
std
sbb
mov
fwait
push
push
mov
stos
xor
sbb
mov
sti
mov
inc
xorb
icebp
or
outsb
mov
xchg
and
mov
ss
lret
xorb
in
fs
lds
mov
sbb
xorb
ljmp
cmpsl
orb
sahf
test
mov
push
outsl
clc
out
ss
leave
sub
mov
jno
test
and
xchg
xchg
in
sub
mov
fmull
out
jg
xchg
lds
repz
mov
push
sbb
pop
sbbb
and
mov
aas
iret
dec
sub
xor
adc
scas
add
mov
popf
neg
into
mov
jae
dec
or
inc
cld
nop
add
adc
ja
jns
xlat
repnz
imul
cltd
xor
cmpsb
aad
push
mov
cmpsl
cmp
xor
xor
pop
cmc
test
jmp
out
mov
into
mov
mov
mov
and
fsts
lock
cld
cmp
and
sub
shr
inc
mov
sub
js
mov
ja
in
add
mov
ret
jae
fimull
push
cmp
out
jbe
enter
ss
orb
mov
jl
arpl
push
lock
loop
pop
fwait
mov
dec
clc
dec
pop
sbb
cmp
sbb
mov
stos
xchg
movsb
pop
fstp
adc
pop
cmc
scas
int3
fwait
mov
sub
mov
adc
jne
and
js
jecxz
in
test
arpl
push
aam
nop
xchg
xchg
sarl
stos
ja
mov
inc
stos
add
jg
leave
sub
or
sbb
xor
mov
es
mov
cmpsb
mov
inc
in
inc
jp
std
jmp
cmp
shlb
sub
test
inc
mov
orb
mov
pop
jae
and
mov
mov
xor
ret
cmp
pop
sti
and
scas
add
dec
shrl
or
jmp
ret
fmull
lods
in
lret
cmp
push
repnz
jp
mov
in
das
push
rorb
add
pop
push
push
test
cmp
adc
mov
inc
mov
pop
in
jmp
pop
xchg
mov
mov
fisttpl
pop
test
ljmp
int
or
test
sbb
jo
push
mov
ljmp
pusha
lahf
jno
icebp
out
cmp
in
mov
sti
pop
push
sbb
jge
push
push
test
dec
sub
enter
and
ss
lods
cld
mov
xchg
cwtl
or
pusha
cmp
xchg
mov
push
mov
lods
popa
add
inc
jecxz
popf
mov
or
mov
jne
xor
or
aam
push
outsb
imul
mov
out
xorb
repz
mov
xchg
aaa
jae
popa
mov
in
and
mov
mov
scas
sub
std
or
xor
bound
fwait
inc
iret
jle
jne
inc
jns
enter
push
mov
not
in
push
out
stos
sub
mov
sbb
ror
pushf
push
sbb
mov
jne
sub
movsb
jno
jne
sub
test
adc
pushf
cmpsl
imul
dec
mov
in
mov
dec
ja
hlt
ss
sub
mov
xchg
adc
cld
cmp
loope
dec
out
or
data16
mov
mov
call
test
sub
push
out
mov
xchg
movsb
testb
movsb
cmp
jle
fidivrl
call
mov
cmpl
daa
dec
xor
push
jp
aad
and
pop
aaa
out
aad
dec
loop
fiaddl
test
test
dec
adc
adc
mov
call
or
sti
cmp
xchg
jbe
ljmp
sbb
lods
sarb
add
adc
std
clc
movsb
in
pop
pop
xchg
inc
adc
xchg
xchg
cltd
pop
in
pusha
stc
xor
cmp
sub
arpl
andl
aas
pop
jnp
loopne
out
shll
scas
sarb
xor
test
lds
arpl
and
jmp
gs
out
les
enter
cmpsl
push
ret
ss
test
movsb
js
xchg
sub
sbb
mov
xchg
sbb
test
xchg
or
dec
xorl
jle
xchg
ret
nop
sbb
call
ja
dec
repz
push
xor
and
stos
sbb
out
ds
out
mov
jo
sbb
mov
push
ficomps
pop
dec
lret
icebp
nop
mov
clc
mov
imul
xlat
in
dec
mov
lret
dec
adc
add
or
stos
xchg
jmp
loope
add
xor
mov
mov
lods
mov
inc
jnp
jae
push
adc
popf
and
scas
add
stos
fadds
cmp
enter
stos
test
test
or
addl
loope
aas
aad
aad
std
out
rcrl
scas
push
stc
and
jecxz
fldenv
add
fnstsw
push
mov
imul
je
mov
sti
shlb
fisubl
pop
nop
pop
out
shrb
shll
and
imul
arpl
or
out
shrl
adc
xchg
xor
pop
pop
mov
dec
sbb
nop
mov
pop
mov
out
ds
push
pop
imul
jp
fwait
ljmp
out
push
jae
sbb
in
hlt
les
pop
sahf
xchg
mov
mov
sbb
adc
mov
or
sub
popf
test
mov
dec
add
add
pop
and
mov
fld
ss
or
mov
scas
nop
sub
mov
daa
cmp
dec
scas
xchg
loope
xchg
mov
inc
cmpsl
cs
roll
not
pop
mov
mov
insb
jmp
clc
into
test
cltd
in
fwait
mov
or
fstpl
subb
leave
pop
lret
mov
ljmp
mov
cmc
sub
ret
add
mov
sahf
outsl
test
push
shlb
repnz
mov
cmpsb
test
ficoml
push
or
jbe
out
push
lret
xchg
mov
into
mov
sbb
pop
mov
pop
loopne
add
lret
mov
int
xchg
cmpl
lods
xor
adcb
repnz
mov
inc
cld
roll
xor
lods
sub
into
add
jnp
push
mov
faddl
add
jns
xchg
fs
sub
mov
sbb
call
rorb
sbb
push
pop
int3
shl
xchg
jnp
adc
push
aaa
lahf
in
cmp
loop
inc
imul
cltd
pop
mov
mov
jae
sbb
adc
or
push
popa
add
sub
pop
mov
xchg
into
inc
pop
fiaddl
jp
dec
and
cmc
loope
sub
fldl
int
push
jp
cs
clc
inc
mov
cltd
jg
bound
xchg
and
jp
cmp
sbb
in
fs
pop
std
icebp
es
xchg
sarb
mov
daa
mov
sub
call
xchg
fsubs
xchg
adc
inc
push
out
fdivrs
cmp
xchg
push
xchg
push
jo
xchg
pop
xor
cmc
push
and
ljmp
mov
int3
sbb
jo
movsl
mov
fwait
xchg
sub
scas
or
jge
cmp
adc
xchg
mov
xor
pop
popa
and
fmuls
insl
lock
out
sub
repnz
inc
fdiv
xor
push
or
ss
icebp
insl
cmp
sahf
sub
xlat
enter
shrl
cld
lcall
xchg
inc
cli
test
cltd
sbb
sbb
and
pusha
mov
shrb
or
pop
stos
loope
jo
push
pop
mov
and
repz
adc
leave
jno
or
xchg
imul
in
xchg
add
fldcw
fldcw
mov
pop
leave
shll
pop
sub
paddb
jb
or
call
add
mov
and
stc
es
pushf
jnp
and
sbb
je
sbb
mov
mov
lahf
cmp
scas
nop
ja
xchg
ret
mov
mov
xchg
sub
stos
stos
jo
mov
mov
mov
sub
shll
push
and
jo
aad
sarb
jmp
sub
and
pusha
jbe
cmc
mov
sarb
in
mov
jmp
mov
xchg
mov
xor
fstps
or
into
shlb
fcoml
das
fwait
xchg
jbe
mov
fsubp
mov
mov
cs
xchg
scas
inc
dec
or
mov
int
test
leave
jbe
jnp
ja
subb
jne
mov
fnstenv
adc
imul
idivl
xchg
iret
rclb
jb
push
out
adc
scas
jo
outsb
xorb
jne
xchg
push
cmp
jg
insl
adc
mov
jp
popa
fdivrs
push
inc
movsl
ret
aaa
cmpsb
xor
mov
cmp
sbb
push
mov
mov
sub
cld
or
je
push
cmc
push
sbb
imul
or
popf
ss
aaa
push
adc
dec
jo
into
cmc
loop
mov
or
push
sbb
mov
push
push
jle
sub
pop
test
aaa
push
mov
or
jp
xor
cmp
std
fdivl
mov
add
shlb
jae
cltd
leavew
lret
subl
popa
adc
test
jne
fsubrs
jns
test
dec
fildll
pop
push
or
dec
dec
stos
stos
cmp
cwtl
data16
mov
push
repz
push
sbb
push
sub
add
or
adc
push
add
adc
stos
and
cmpsb
cmp
lock
and
pop
cmp
add
out
jno
mov
ljmp
int3
shlb
dec
mov
inc
jl
pop
mov
mov
clc
pop
xchg
cwtl
lcall
jecxz
mov
cmp
aad
xchg
test
out
gs
jmp
rcrl
jecxz
negb
push
or
popa
or
lods
and
push
xor
fcoms
cmp
add
inc
mov
dec
mov
lods
in
mov
mov
inc
add
push
dec
add
mov
popa
pop
add
lcall
std
arpl
sub
inc
jno
push
pop
cmp
int
or
mov
fsubrs
data16
jbe
in
sbb
mov
das
push
setl
pop
in
adc
sub
fcmovnbe
test
push
rcrb
repz
out
aas
lds
stos
aas
xor
inc
mov
push
aas
sub
dec
fidivrl
lea
aas
jne
pop
pushf
dec
imul
lods
pop
dec
lret
xor
inc
inc
rcrb
or
xchg
mov
jmp
jmp
and
xor
lcall
enter
das
cs
cmc
mov
jmp
lea
fidivrs
test
bound
jne
repnz
outsl
out
adc
test
adc
fldcw
jns
insl
and
div
pop
lcall
push
dec
outsl
repnz
add
in
pop
inc
arpl
lret
and
arpl
xchg
mov
adc
sub
movaps
lods
sbb
sbb
fucompp
lret
lds
push
stc
push
adc
cmpsb
fcoml
push
jmp
jecxz
lock
insl
rcrl
or
mov
xlat
repnz
cmp
lock
sbb
pop
sbb
cmp
xchg
pop
je
inc
jno
jl
sub
aaa
add
dec
pop
jecxz
popf
xchg
mov
push
shl
pop
loopne
mov
mov
shrb
repz
sahf
cli
sbb
test
dec
adc
in
push
je
mov
shl
or
pop
or
loope
xor
jecxz
repnz
mov
jle
cmp
stos
in
mov
aas
movsb
mov
pop
shll
sbb
push
int
les
lcall
pushf
xor
cmp
into
inc
lea
out
int
add
lds
cs
js
sbb
rolb
sbb
loop
or
pop
cld
cld
hlt
decl
dec
push
lret
xor
mov
out
mov
mov
xchg
sub
outsl
xor
out
sub
mov
inc
cmp
cli
cmp
xor
pop
pop
mov
push
adc
js
fsubr
pop
aam
adc
mov
or
daa
lret
negl
pushf
daa
xor
sub
lds
shl
cli
call
sub
int3
ds
in
clc
fnstenv
add
pop
add
stos
mov
je
pusha
xchg
data16
bound
mov
out
xor
mov
jge
mov
jp
push
push
cwtl
or
cmp
xchg
outsb
mov
sahf
fistps
ds
mov
pop
stc
and
idivb
push
pushf
rorb
mov
std
insb
orb
lahf
call
xchg
ja
testb
test
fdivrs
pusha
fdivr
add
xchg
or
in
jle
sbb
shrb
mov
sbb
sti
xchg
aas
cmpsb
push
lds
scas
fiaddl
mov
mov
jl
sar
sub
movsl
lret
jae
pop
pop
xor
nop
ljmp
out
inc
xor
adc
pop
cmp
jb
xchg
inc
pop
gs
fs
jl
daa
outsl
cmp
ljmp
push
pop
loopne
mov
xchg
add
int
call
mov
fidivs
ret
sbb
push
or
add
inc
shl
mov
or
and
call
shll
push
xchg
sub
ret
jns
test
jo
clc
add
pop
cmp
mov
jle
mov
int3
xchg
nop
js
test
inc
ret
out
sub
jb
pop
xchg
fs
jno
hlt
div
sbb
fidivs
addr16
cmp
mov
pop
xchg
repz
lret
push
loopne
iret
sbb
dec
mov
fdivrs
cld
mov
fsubs
movsl
and
cmpl
aaa
lods
rclb
insl
dec
mov
push
dec
fsts
xorb
inc
cltd
in
andb
inc
aam
data16
or
cmpsb
cwtl
dec
push
iret
sub
dec
fwait
jmp
andl
mov
lcall
fdivrp
ror
leave
mov
imul
mov
fdiv
cli
lret
pop
sub
je
data16
push
fists
xchg
arpl
in
movsl
dec
dec
dec
push
dec
ljmp
lds
xor
repnz
scas
inc
je
mov
lahf
cmpsb
mov
shll
test
aad
repz
push
jp
iret
popa
mov
mov
in
mov
sub
data16
and
mov
popf
loope
hlt
mov
sub
push
movsl
incb
pop
out
push
jecxz
jp
jbe
out
add
je
xchg
inc
fistl
pusha
stos
pop
loop
xor
jno
out
pop
push
mov
shr
push
mov
sub
imul
test
jae
inc
add
mov
push
in
sbb
jno
xchg
jae
imul
jmp
out
test
fstl
sub
rcrb
sti
test
sub
push
lahf
test
mov
and
mov
aas
ficoml
adc
loope
mov
scas
enter
lds
mov
insb
pop
or
or
pop
adc
jne
test
jg
fisubl
pop
jge
dec
xchg
pop
xchg
or
jb
jmp
stos
imul
add
test
lea
das
cld
push
dec
jbe
adc
mov
dec
sbb
add
add
mov
push
pushf
dec
dec
aam
or
mov
enter
xlat
xchg
mov
dec
cltd
fdivl
mov
iret
test
cld
push
xlat
pop
push
fdivl
out
jb
sbbb
inc
sub
push
xchg
sti
pop
and
or
push
out
daa
mov
imul
mov
test
xlat
loopne
pcmpeqw
mov
push
add
and
xchg
daa
pop
aad
mov
push
or
pop
adc
and
or
fdivr
xchg
jnp
inc
mov
lret
imul
dec
or
mov
xchg
xchg
mov
decl
mov
test
cwtl
xor
mov
adc
jne
xchg
aas
sahf
sub
mov
dec
fldenv
sbb
test
sbbb
sbb
fistpl
xor
test
or
or
mov
call
shr
cs
cwtl
push
add
mov
into
je
mov
fidivs
sti
sub
loop
adc
sub
clc
pushf
fwait
insl
ret
outsb
test
andl
jne
jecxz
pop
sbb
aad
sahf
jnp
je
mov
call
fadds
rorl
mov
mov
movsb
out
dec
dec
fs
pop
jmp
pop
jmp
movb
mov
lock
push
xchg
sbb
mov
pop
push
push
pushf
cmp
xchg
xchg
out
mov
cli
movsl
loope
xchg
test
pop
ret
lcall
stos
sti
lods
cmp
jo
fcoml
sub
adc
ds
rolb
sbb
mov
hlt
call
mov
dec
movsl
pop
mov
aas
js
movsl
test
dec
xor
into
jno
ds
and
adc
inc
stc
push
sub
shrl
in
imul
aaa
ds
or
imul
les
sub
pusha
mov
jo
inc
and
fs
jecxz
daa
or
call
mov
mov
sub
stos
cli
lahf
popa
pop
add
or
lret
fwait
add
or
aad
lcall
cmpsl
lods
xor
mov
dec
push
mov
nop
jmp
fadds
dec
and
jge
pop
sbb
test
loopne
scas
dec
add
leave
sub
in
mov
xchg
cmp
jp
add
mov
jno
ja
dec
inc
push
adc
push
xor
push
dec
popf
mov
xchg
mov
push
pop
mov
pop
or
data16
or
dec
xchg
scas
dec
inc
in
mov
sbbb
aam
lock
xor
cmp
in
pop
cmpsl
icebp
xchg
mov
pop
jo
bound
sbb
pop
jecxz
and
inc
ret
inc
shll
stos
hlt
je
mov
xchg
sbb
out
add
sub
aad
or
push
cld
xor
dec
pushf
iret
loop
popa
rcr
pop
sub
popf
cwtl
mov
jno
ror
adc
mov
stc
and
fiadds
or
add
mov
jo
rolb
xor
lahf
jnp
icebp
or
xchg
jmp
cmpsl
cmpl
sub
push
stc
scas
imull
add
idivb
xor
push
adc
xor
push
in
daa
pop
movsl
inc
cmp
jb
pusha
and
ret
or
movsb
xchg
xchg
loop
cli
adc
xlat
sbb
sbb
xor
clc
fldt
fsubs
cmp
adc
jmp
adc
mov
xor
stos
and
in
sbb
test
sub
or
lcall
or
leave
mov
add
pop
inc
stc
dec
ss
fadds
xor
cmp
add
jl
in
out
inc
pusha
sub
js
jb
mov
mov
out
cmp
bound
imul
push
or
add
cli
test
mov
push
cltd
sub
inc
jg
push
pop
mov
pop
push
cmp
dec
pushf
mov
pop
fnclex
push
push
rcrb
out
repz
mov
mov
and
jl
mov
ss
push
lea
xchg
xchg
fisubl
lahf
mov
xchg
jns
movsb
shll
icebp
sub
lds
repz
mov
jle
loopne
popa
mov
mov
test
lahf
and
in
into
dec
pop
jo
xor
in
lret
mov
es
mov
lea
and
sub
sub
add
fldl
in
add
sbbb
or
bound
aam
add
cld
mov
scas
stos
clc
movhps
lods
aaa
sub
pop
inc
scas
mov
sbbl
mov
xchg
mov
sub
push
sub
mov
or
lahf
enter
int
mov
xchg
mov
and
or
or
mov
xor
push
rcl
rorb
cltd
sbb
push
in
js
movsb
aam
bound
dec
mov
test
sahf
sbb
cmp
imul
cmp
or
sub
mov
sbbl
sbb
push
loope
dec
mov
mov
loop
jo
lods
adc
aam
push
dec
or
mov
rep
mov
xchg
push
shrl
jle
or
mov
inc
sub
add
pop
dec
lcall
xchg
push
inc
xchg
inc
aaa
loop
stos
jno
lods
xchg
in
ffree
add
or
mov
or
loop
nop
pop
push
ss
jne
aaa
dec
xchg
popf
das
shll
ljmp
mov
lea
mov
dec
ficomps
ja
les
lock
sbb
xor
cld
arpl
nop
inc
pop
dec
imul
aaa
xor
fnstsw
xor
adc
or
add
jbe
fxch
aas
sti
repz
iret
mov
lahf
cmp
out
arpl
outsl
aad
orb
lcall
shlb
pinsrw
inc
xor
and
mov
inc
ja
mov
sub
insb
and
jge
lret
in
mov
mov
cli
pmovmskb
xchg
adc
lret
in
jns
fisubl
dec
pop
pop
sub
loope
aas
jle
test
sub
gs
and
stos
nop
in
cmpsb
sbb
xchg
cmpsb
in
sbb
lahf
scas
pop
pop
sti
dec
cwtl
std
and
js
insb
cmp
push
clc
scas
push
push
clc
inc
lahf
jp
popf
scas
mov
popa
inc
das
pop
push
cmc
lret
sbb
pop
mov
mov
test
push
cmp
pusha
pop
lcall
sbb
or
xor
lcall
pop
jae
mov
push
jp
xlat
xor
inc
mov
or
mov
test
sub
outsb
sti
cltd
lahf
in
scas
and
loopne
pop
push
inc
je
push
sub
jp
mov
and
inc
xchg
jmp
push
cmp
shrb
stos
adc
ror
divb
rcl
mov
stc
shll
iret
mov
cmpsl
aas
ficoml
sub
cmp
sbb
jp
test
xchg
out
mov
mov
fsin
sbb
push
inc
jmp
mov
aam
fdivrs
cwtl
fisubl
mov
and
inc
or
movsb
add
cmp
xor
cmp
mov
pop
and
lahf
pop
adc
cmc
sub
outsb
or
out
inc
adc
mov
out
sbb
stos
lahf
shrb
daa
dec
in
insl
and
sub
stos
mov
popl
fstl
lds
jns
pop
xchg
arpl
xchg
imul
inc
and
push
data16
fwait
sbb
cmp
xchg
std
mov
push
int3
xchg
add
jae
jb
cmp
pop
div
sub
cmc
lea
aaa
cmp
scas
mov
sbb
xchg
test
movsb
cmp
cmc
lea
mov
jo
imul
ss
pushf
or
xor
cmp
ror
pop
dec
pop
mov
xor
hlt
add
mov
dec
adcb
add
jbe
xor
jbe
and
inc
dec
in
lret
jg
in
pop
cli
push
shlb
scas
das
rcrb
decb
fstps
and
test
adc
pushf
jecxz
mov
push
jg
push
fwait
inc
inc
flds
mov
shrl
fucom
lods
fldenv
jae
and
outsb
or
arpl
push
pushf
sub
fcmove
xor
sub
js
inc
mov
lea
pop
sub
lods
jbe
testl
mov
inc
inc
fcmovbe
xchg
mov
pop
sarb
ss
pop
inc
or
fcomps
sahf
xor
mov
mov
push
loopne
push
inc
mov
mov
fisubl
or
pop
lret
out
scas
scas
rol
test
lods
jno
add
adc
xor
aam
dec
xchg
mov
xor
fucomip
mov
loopne
jge
pop
mov
pop
lds
test
sti
sub
and
test
inc
pop
sub
adc
mov
xchg
push
lods
outsl
ljmp
into
add
out
sub
jno
ret
pop
mov
mov
xchg
push
jne
dec
mov
jns
popa
inc
sub
mov
cli
test
stc
test
sarb
insl
dec
xor
or
cs
stos
scas
bound
and
mull
pop
sub
mov
push
sub
in
dec
movsb
stos
mov
mov
sahf
iret
xchg
sti
test
or
rcl
jne
nop
cli
stc
in
and
push
lods
inc
pop
ljmp
mov
shrl
stos
push
xchg
mov
es
mov
or
jns
push
insl
insl
dec
fnstsw
add
dec
xor
test
jae
ret
rorb
shlb
xchg
adc
or
cmc
adcb
mov
push
bnd
ja
call
and
jmp
dec
push
cmp
sbb
lret
push
add
inc
inc
jo
jecxz
rcr
xchg
xchg
aam
ret
xchg
lret
popa
dec
ds
add
inc
mov
mov
dec
or
sub
ds
xchg
xchg
jns
mov
int3
xchg
stos
sub
xchg
mov
pop
shl
sbb
lret
out
cld
dec
inc
ffree
mov
adc
pop
sub
xchg
sbb
inc
and
mov
data16
leave
leave
jl
mov
sbb
enter
pop
mov
aaa
dec
sub
cltd
jno
stc
adc
add
scas
mov
dec
xchg
jle
mov
inc
aad
and
sbb
gs
sub
dec
and
cmp
push
notl
sbb
jg
fiadds
mov
jl
or
idiv
cmpsl
push
inc
stos
jp
jne
adc
out
mov
mov
sbb
fnsave
loopne
sbb
push
fildl
add
bound
icebp
test
scas
cmp
jns
movsl
xchg
jge
pusha
mov
loope
or
iret
sbb
sbb
pop
es
adc
rcrl
mov
adc
jne,pt
cltd
xor
int3
ljmp
push
mov
push
sbb
lock
icebp
xor
inc
xchg
lret
or
repnz
or
in
mov
in
in
cmp
jl
mov
fisubs
xchg
iret
xchg
mov
test
sti
xlat
add
hlt
les
adc
enter
mov
enter
mov
bound
stos
and
inc
mov
aas
into
or
xchg
pushf
push
and
lcall
cmp
int3
mov
sub
dec
or
movsl
pushf
outsb
pop
adc
pop
daa
rorb
adc
pop
lds
jno
mov
out
push
addr16
sub
movsl
orps
xchg
in
jp
sbb
pop
aam
mov
gs
js
mov
adc
pop
add
popa
icebp
ja
rclb
imul
enter
adc
sub
lret
or
mov
fs
add
inc
test
out
mov
fwait
movsl
add
out
clc
xor
mov
ljmp
sub
pop
lods
jp
mov
call
add
dec
and
inc
xchg
icebp
sub
jl
daa
mov
sub
jecxz
xlat
mov
add
mov
mov
ja
pop
pop
jmp
ret
lock
inc
lahf
jg
movsl
mov
ret
shrb
pop
sarl
mov
in
repz
bound
add
mov
outsl
das
xchg
xor
das
sbb
into
pop
movsb
push
and
dec
add
cs
int
mov
jecxz
scas
sbb
outsl
testl
push
dec
dec
add
push
fists
or
cmp
in
xchg
insl
push
repnz
mov
jns
pop
add
aad
enter
and
or
jle
frstor
imul
or
and
divb
fld
or
mov
pop
aam
and
jne
dec
fisubs
push
push
sbb
push
and
decl
cmp
insl
or
dec
movsb
imul
jmp
adc
shll
and
out
and
std
rorb
add
fisttpl
cmpsb
pop
sub
xchg
lahf
rolb
xor
ret
lret
add
rorb
and
mov
push
pop
sub
and
frstor
aam
lds
sahf
push
and
cmp
xchg
in
adc
hlt
rorl
lcall
loopne
cmp
aas
inc
xor
inc
jp
cli
inc
jl
int3
stos
xor
dec
mov
sub
dec
cltd
dec
jns
xor
fbstp
or
scas
xorl
mov
outsb
dec
fisttpll
inc
out
das
pushf
mov
sbb
in
xchg
cmp
pop
loop
out
ljmp
mov
stc
daa
lock
xor
into
sub
out
scas
cmp
mov
lods
xchg
fcoms
enter
jae
dec
jecxz
les
int3
imul
mov
or
addr16
mov
and
mov
push
mov
adc
inc
in
ret
dec
lods
addr16
cmc
mov
ret
pop
push
test
dec
int3
int3
aas
and
dec
movsb
mov
loopne
jnp
iret
incb
in
aam
test
and
test
jmp
pop
aas
mov
imul
adc
mov
insb
and
cmpsb
out
neg
dec
xchg
push
lods
inc
pop
sti
and
nop
adc
xchg
loop
sbb
ret
cmp
add
inc
test
xchg
xor
shl
mov
xchg
sbb
cmp
call
dec
xchg
mov
lahf
bnd
mov
cmp
shr
add
dec
push
lods
cmp
std
push
loop
mov
jbe
mov
arpl
lea
out
fildl
xchg
fildll
xchg
pop
lock
push
scas
sub
ljmp
and
dec
jle
ss
cmpsl
sbb
lock
sar
adc
push
pop
imul
and
or
xchg
scas
sub
mov
mov
sbb
sbb
cli
and
push
lds
push
data16
adc
movsl
adc
mov
pop
xor
cli
sbb
dec
xor
xor
fstps
inc
rcll
movsl
pop
mov
sti
mov
rcrl
mov
cld
and
mov
lret
inc
jl
xchg
sbb
loopne
push
lea
ds
mov
insl
jl
cmp
mov
sub
pushf
fimull
hlt
push
and
xchg
mov
mov
cs
mov
cmp
fwait
adc
push
push
cli
jb
push
lds
mov
in
addr16
push
insl
mov
insw
mov
addr16
jbe
addr16
pop
xor
fistl
lods
mov
fcompl
mov
nop
pop
sahf
andb
call
adc
insb
pop
jmp
pop
dec
or
iret
test
inc
xchg
orl
scas
xchg
jns
dec
dec
shll
dec
or
rorl
add
push
or
insb
mov
rorl
xchg
iret
xor
pop
and
xor
cmp
and
nop
pop
leave
ficomps
cmp
imul
add
dec
sub
cld
lahf
inc
pop
jb
and
and
cmp
mov
cli
daa
xor
aad
clc
xor
inc
scas
dec
fistps
testl
xorb
xchg
lock
fsubs
mov
cltd
mov
push
jle
scas
mov
adc
jae
pop
sub
inc
mov
dec
mov
add
mov
cmpsl
push
sub
repnz
jbe
inc
fdivl
xchg
ds
scas
or
sub
mov
shrb
mov
mov
push
pop
test
inc
cmp
das
into
and
jb
xor
inc
add
adc
push
repnz
and
xlat
cltd
jae
cli
pop
mov
xor
sarb
pop
out
adc
mov
dec
stos
jbe
jmp
sbb
cmpsl
jp
mov
jmp
test
sbb
sbb
lds
inc
push
jns
cmpsb
adc
mov
lea
test
or
mov
in
and
in
jecxz
rorl
pop
and
mov
jae
jp
mov
lods
sub
pop
and
mov
daa
clc
enter
pop
lods
mov
pop
xor
pushf
or
jns
imul
outsb
pop
je
or
mov
cmc
jns
out
xor
mov
repz
adc
cli
xchg
adc
push
leave
and
scas
popa
cwtl
ficoml
inc
xchg
cltd
sbb
ljmp
pop
push
dec
in
push
in
loop
bound
jg
mov
inc
in
loop
enter
push
test
lahf
xchg
xchg
imul
and
sbb
xor
ljmp
sbb
jae
add
scas
loop
call
mov
mov
adc
mov
mov
push
xchg
lds
inc
cmpsb
pusha
fsub
mov
jae
xor
jle
rol
jp
jo
jecxz
sbb
inc
mov
and
jl
adc
faddl
stos
or
or
ds
mov
icebp
negl
insl
pop
notl
sbb
les
in
adc
loop
pcmpeqb
adc
fistps
pop
nop
insb
lods
pusha
movsb
pop
loopne
mov
imul
cwtl
insl
lcall
jp
scas
loopne
add
and
adc
jbe
xchg
push
sub
push
mov
or
or
aaa
sub
jl
cwtl
scas
cmp
addr16
cwtl
jecxz
and
hlt
fcoml
lcall
jle
push
sahf
adc
adc
and
jae
lret
mov
push
push
jae
loopne
ret
in
mov
decb
mov
adc
mulb
roll
cmpsb
aas
pushf
mov
mov
shll
sub
loope
notl
cmp
rcrb
and
fcoms
push
cltd
cwtl
or
cmp
cmp
and
cmpsl
sti
mov
push
mov
add
push
push
mov
addr16
mov
shll
mov
jg
xchg
dec
aad
enter
push
jg
loopne
mov
cmpsl
rcrb
inc
mov
enter
and
cld
or
ficoml
test
dec
jecxz
cmc
scas
sub
mov
and
ret
xchg
cmp
shrl
out
ret
icebp
jae
sti
mov
cmp
jge
movsb
mov
jg
das
xor
push
push
shlb
mov
sub
sti
jo
or
mov
xor
pop
pop
jmp
xchg
dec
inc
sbbl
insb
xor
jmp
pop
js
and
aas
test
fisttpll
inc
leave
mov
das
fldcw
push
shr
pushf
or
test
adc
je
les
fs
int3
mov
jb
sarl
adc
and
pop
int
insb
adc
test
mov
aaa
mov
bound
mov
ljmp
sahf
jne
out
adc
xor
jno
sbb
test
cmp
cmpsb
xchg
push
pop
in
sub
insb
or
and
xchg
sbb
mov
cmc
or
in
les
in
jecxz
mov
clc
cmp
or
int
stos
imul
ljmp
cmp
dec
inc
stc
jb
leave
inc
insb
in
sub
imul
cwtl
mov
pop
or
js
mov
push
adc
push
insl
xchg
sbb
sahf
je
daa
xchg
sub
push
push
sub
rorb
dec
int3
cmpsb
loope
lods
and
fdivp
cmp
add
push
shl
xchg
mov
xchg
ljmp
adc
sub
pop
mov
cmp
std
outsl
jge
shrb
andb
pop
iret
push
out
pop
ljmp
pop
add
loopne
mov
idiv
cmp
xor
repnz
push
dec
mov
insl
push
insb
push
xchg
push
je
stc
dec
add
fcoms
cmpsl
and
cmp
testb
out
je
pop
subb
mov
gs
sub
adc
cli
fdivp
jbe
or
push
jle
adc
adc
mov
gs
cmc
test
mov
fildl
dec
adc
fucomp
imul
fs
adc
movb
jle
pop
in
fldenv
pop
test
adc
xchg
lea
sub
xor
fisttps
sub
inc
lret
jnp
int3
and
out
lock
push
dec
or
mov
cltd
pop
push
xchg
push
pop
mov
pop
sbb
nop
jnp
xor
push
ret
enter
fdecstp
fmuls
clc
push
inc
jmp
cmp
xchg
xchg
addr16
sbb
cmp
add
loope
cmpsl
mov
adc
aam
stc
lds
lret
jo
xor
fcmove
push
clc
cmpb
aad
iret
outsb
cs
pop
fsts
iret
test
pushf
insb
or
punpckldq
insl
fdivrs
jo
test
dec
and
ds
add
ljmp
loopne
cltd
repnz
sub
dec
cmc
movsb
cmp
pop
mov
out
test
dec
mov
sbb
ds
dec
inc
inc
jg
mov
mov
mov
test
aam
add
enter
adc
rol
push
lods
leave
add
les
push
aad
xlat
fcoms
repnz
push
sub
movsb
outsb
fs
mov
jle
pop
inc
lods
pop
mov
push
fnstsw
mov
sbb
cltd
sub
gs
test
xchg
icebp
clc
push
addr16
jg
repz
xlat
loope
mov
lret
shrb
nop
and
pop
and
stos
xchg
jb
inc
mov
mov
in
sahf
hlt
cmpl
jns
jns
fwait
xchg
cmc
or
jmp
les
cmp
imul
pop
dec
cmp
ret
out
out
or
test
add
fldt
subb
adc
nop
stos
lods
cmp
jb
and
rorb
cltd
jg
add
dec
aad
push
push
cmc
test
pop
push
jmp
das
push
jne
xchg
int
xchg
xchg
daa
sbbb
imul
push
mov
lods
test
inc
adc
jge
or
push
in
sub
popf
scas
cltd
cmp
mov
popa
rclb
icebp
stos
cltd
mov
jle,pt
mov
into
das
cmpsb
jne
push
cmp
mov
shl
cld
out
or
icebp
std
lock
mov
addb
idivb
sbb
gs
movsl
fwait
add
js
xchg
push
hlt
mov
mov
repnz
mov
and
jl
xadd
or
movsl
pop
sbb
add
push
mov
lahf
das
mov
pop
adcl
repnz
sub
ljmp
lret
mov
cmp
in
mov
repz
test
arpl
dec
movsl
imul
adc
arpl
xchg
loopne
push
lea
fucomp
fwait
pop
fiadds
inc
pop
mov
hlt
push
stos
cmp
xor
inc
or
outsb
outsl
lock
sbb
jns
push
inc
xor
pop
clc
decl
and
pop
adc
les
and
push
and
xchg
fsubrp
mov
cmpsl
cltd
or
pop
cmpsl
mov
adc
inc
scas
mov
movsl
xor
mov
out
jecxz
dec
jge
nop
dec
int3
jb
aad
into
mov
jecxz
pusha
mov
popf
lods
pop
test
sub
js
sbb
adc
add
or
pop
fwait
adc
out
aad
rcrl
mov
mov
imul
sti
ljmp
dec
das
data16
loop
stc
jae
dec
xchg
mov
cld
icebp
aad
cld
adc
rcll
nop
into
or
mov
pop
fcmovbe
xchg
mov
mov
xor
and
mov
pop
sbb
mov
daa
and
and
add
out
pop
enter
add
xchg
mov
sbb
jnp
and
mov
mov
add
cmp
in
xchg
mov
push
out
mov
mov
jge
js
xlat
fldl
sbb
movsl
daa
leave
repz
dec
fxch
add
xor
dec
push
xor
aam
xchg
inc
lock
aam
mov
pop
jmp
fs
hlt
cmp
or
mov
pop
cmp
inc
xchg
adc
into
cmp
cld
jge
push
or
popf
or
pop
hlt
lret
rcr
cmpb
enter
mov
js
pop
cwtl
daa
insl
movsb
in
fdivr
inc
jge
lcall
or
xchg
div
je
jp
sarl
jns
fildll
dec
idivl
test
test
lock
fs
pop
inc
jne
shl
arpl
pop
pop
push
bound
stc
pop
jo
es
hlt
out
xchg
js
mov
aad
jnp
xlat
stos
pop
into
out
repz
mov
or
inc
ds
dec
pop
negl
xchg
mov
and
mov
pop
test
push
or
lock
pop
pop
pusha
ja
mov
inc
pop
rcll
adc
xchg
sub
add
test
add
xchg
cli
das
and
lret
mov
push
cmp
and
sub
sti
cli
imul
dec
inc
int
cli
add
cmp
addl
sar
cmpsb
out
sar
and
and
sbb
fucomp
divb
es
sarb
xchg
sub
js
xchg
sbb
aas
push
lret
outsl
jg
dec
inc
call
mov
shl
js
jns
inc
in
fmull
lea
jae
sub
dec
int3
pop
clc
mov
insl
or
sub
orb
inc
xor
dec
push
test
jae
fisubrl
cmp
lods
call
ss
sbb
je
fmul
push
ficoml
jbe
insl
es
popf
addr16
leave
sub
xchg
xchg
xchg
mov
cltd
clc
mov
xor
inc
cs
mov
lret
push
fs
lods
out
cmp
mov
subb
rclb
pusha
and
add
int
xor
xlat
or
mov
adc
lock
push
in
jbe
pop
mov
sti
out
inc
xchg
mov
stc
jmp
icebp
mov
lods
test
imul
push
lods
mov
faddl
scas
dec
mov
pop
dec
pop
push
xor
cmp
notb
test
inc
jns
sub
popa
inc
in
jns
sbb
iret
push
or
push
inc
mov
and
or
mov
pusha
rclb
fwait
push
in
adc
cmp
mov
ds
and
roll
mov
cmpl
and
lods
or
arpl
add
and
mov
xor
xchg
sub
sub
call
fadds
and
decb
and
icebp
jnp
addb
mov
shlb
lds
cmc
in
sbb
fldz
adc
cmpsl
les
or
outsb
rolb
jp
fistpll
inc
out
adc
mov
lahf
inc
cmpsl
push
cmp
jae
xor
mov
lods
ficoml
pop
and
mov
stos
jns
mov
and
jnp
mov
test
push
out
jl
mov
ret
xor
inc
stos
sahf
xchg
adc
stc
icebp
sbb
jbe
lods
shlb
jp
inc
xor
call
lods
mov
fmull
mov
in
out
xor
aam
pop
sub
cltd
cmp
sub
adc
or
out
mov
or
mov
out
cmp
lahf
lock
popa
pop
mov
fidivrl
icebp
leave
cmp
insl
xor
mov
je
arpl
xor
loopne
cli
imul
sub
push
sahf
add
jmp
dec
fnstsw
adc
mov
jno
ljmp
aam
jge
lcall
or
repz
push
jae
test
push
push
pop
mov
xlat
cltd
dec
jae
xor
xchg
sahf
inc
popa
movsb
out
pmullw
imul
mov
int3
popf
adc
push
aas
sbb
repnz
out
xor
mov
and
fldl
es
cmpsl
add
jne
mov
or
das
add
mov
mul
cs
cltd
sbb
clc
jg
mov
add
sub
clc
imul
sbbb
int3
mov
idivl
fimuls
out
and
cmp
xchg
push
add
inc
fidivs
aas
inc
sbbb
mov
imul
inc
pushf
shlb
mov
sti
arpl
and
in
or
shlb
push
lods
or
in
inc
test
movsb
ret
aaa
int3
aas
pop
mov
cmp
in
mov
ret
pop
pusha
test
mov
push
loope
mov
lcall
ret
out
inc
push
adc
and
adc
aaa
cmpl
dec
pop
popf
sar
adcb
xchg
and
inc
push
sbb
adc
add
test
cmp
ja
fwait
jae
cld
cli
fists
cli
push
pop
pop
xchg
out
xchg
sub
xchg
outsl
jne
push
add
je
ss
xchg
test
lods
fdiv
push
and
add
push
dec
pop
inc
sbb
divb
arpl
jne
repnz
mov
cmc
pop
mov
pop
aad
or
xchg
mov
sub
xor
mov
jae
stos
daa
je
mov
data16
pop
push
mov
mov
and
lret
lods
push
call
fmuls
lods
outsl
mov
mov
or
pop
fdiv
mov
xchg
or
xchg
insb
fwait
mov
leave
fnstenv
jge
push
mov
in
or
mov
dec
popf
imul
adc
insb
mov
out
jnp
sbb
loope
push
iret
mov
pop
pop
jg
addr16
scas
pop
sbb
in
sbb
xchg
mov
mov
je
jp
fnstcw
js
lea
adc
js
dec
leave
sub
xor
sbb
sbb
shl
adc
loope
jmp
stos
icebp
sarb
and
int3
jbe
das
inc
cmpl
push
xchg
dec
fsubs
jecxz
repnz
call
arpl
dec
sub
pop
mov
test
mov
cmc
sbb
mov
jecxz
roll
imul
adc
orl
sbb
out
lret
xchg
js
test
rcrb
in
pop
mov
lock
pop
aas
mov
in
sub
data16
movb
push
and
push
cwtl
inc
iret
in
int3
mov
add
pop
fwait
cmp
fsubl
scas
xchg
addl
pop
in
sti
data16
xor
add
sub
mov
mov
pop
cltd
in
jae
scas
or
mov
dec
gs
test
fwait
loope
cmp
shl
pop
leave
sub
aad
xchg
mov
sbb
xor
out
and
sbb
fwait
mov
mov
outsl
mov
xchg
pop
mov
fcomip
or
inc
das
pop
jne
push
call
or
push
data16
outsb
mov
aas
xchg
cmp
inc
scas
dec
push
push
cmpsb
out
xor
dec
gs
pop
jmp
dec
clc
sbb
inc
sbb
sub
sbb
and
and
and
jecxz
loopne
lock
cld
jl
xchg
xor
imul
jge
cltd
cmp
pop
dec
pop
negl
lret
out
and
xchg
popa
sub
lea
cmpsb
fistpll
lcall
mov
cmp
sti
outsb
movsb
stc
data16
scas
call
add
ss
mov
pop
xchg
cwtl
pushf
and
je
fidivrs
lcall
movsl
fisubrs
insb
js
stos
sub
repnz
xchg
fadds
jbe
inc
mov
and
outsl
das
imul
dec
push
mov
lods
adc
jo
cmc
mov
aaa
inc
stos
jo
lahf
pop
mov
out
dec
mov
popf
pop
lret
mov
add
mov
adc
xor
loop
pop
xor
xchg
pop
cld
leave
jo
and
stos
in
jo
adc
scas
shrl
jno
xchg
out
push
mov
jns
push
inc
jge
imul
pop
add
mov
or
xchg
add
xchg
xor
inc
jo
fwait
cmp
or
and
clc
xchg
orb
loop
scas
repz
pushf
into
sbb
push
jecxz
jecxz
adc
xchg
sub
mov
js
xor
gs
inc
sub
jmp
icebp
push
xor
mov
jl
popa
shrb
ja
aad
and
popf
lock
mov
jo
enter
mov
int
sub
mov
enter
push
je
lds
das
popf
shll
fcomps
adc
xor
lcall
sub
pop
xor
andl
out
or
mov
ror
ss
jecxz
sub
clc
test
jecxz
andb
int
test
pop
stc
adc
pushf
and
sbb
out
test
loope
cmp
adcw
addr16
push
fsubrl
ret
notb
fcomps
popa
icebp
xor
push
lret
mov
out
sub
out
mov
pop
mov
iret
push
int
aaa
cmp
lret
xchg
sub
and
sbb
xchg
imul
inc
mov
sti
das
out
fidivl
xchg
add
sub
adc
daa
mov
push
mov
or
sub
aam
pop
cmpb
in
pop
dec
jmp
adc
add
and
pop
mov
insl
repz
push
cmp
lods
das
ret
jns
sbb
in
mov
or
jbe
cltd
sub
fstpt
int
jl
pusha
addr16
or
ds
or
shlb
insb
rcr
mov
mov
orl
mov
or
imulb
add
cmp
xchg
adc
cmp
push
pop
fwait
jp
test
stos
mov
nop
imul
xchg
mov
xor
fsubrp
jnp
cmc
inc
mul
mov
add
xor
outsb
mov
shrl
out
pop
and
lods
sbb
mov
mov
lcall
mov
mov
xchg
iret
shrl
sbb
sub
sub
dec
cmpsb
int
repz
outsb
int3
or
frstor
adc
loop
rolb
gs
xor
cmp
mov
ror
and
sbb
adc
call
xchg
sbb
and
scas
rcrb
in
fcom
in
sbb
shll
test
jb
cld
mov
idivl
adcl
mov
adc
jmp
jne
insb
gs
cli
insb
adc
ret
fxch
xchg
push
jae
out
shlb
cs
push
or
pop
mov
sar
inc
dec
hlt
fwait
popa
cmp
jmp
roll
cmp
arpl
pop
cmp
fdivrl
adc
sbb
sbb
sub
and
fidivs
icebp
test
adc
rcrl
shrl
xchg
out
out
add
or
mov
ret
and
jo
icebp
cmc
std
addr16
sbb
or
xor
sub
dec
sub
cwtl
rcrb
sti
push
inc
jo
push
inc
fsubrl
inc
lahf
and
mov
cwtl
and
dec
loop
xor
mov
ret
dec
pcmpeqw
cmp
ficoms
movsb
loope
xor
push
gs
mov
add
adc
lret
loop
in
cmp
fstl
sbb
mov
cs
imul
jbe
fnsave
shll
aaa
outsb
cli
sbb
call
xchg
loope
push
lods
int
jp
mov
jo
das
inc
enter
add
add
adc
push
fs
and
stos
pop
cltd
xchg
inc
cs
fwait
pop
and
inc
ficoml
es
xchg
pop
xchg
in
jae
fimuls
insl
mov
aaa
adc
iret
inc
push
sbb
stos
fists
daa
iret
inc
mov
fldt
dec
ja
ds
sti
cmp
loopne
lods
fisubrs
cld
mov
jmp
push
mov
mov
lret
jecxz
push
mov
lods
lock
mov
into
aad
mov
lahf
xlat
sub
inc
cmp
loope
xor
push
iret
das
ds
in
loop
or
aas
outsb
mov
negb
cmp
ret
jp
dec
sbbb
lds
sbb
imul
fcoms
test
sub
mov
test
lock
lods
mov
inc
cmp
xor
out
inc
push
add
lods
jg
push
arpl
aad
mov
sub
push
jecxz
pop
push
push
mov
or
lahf
adc
insl
inc
pop
mov
push
add
lds
outsl
sbb
push
lahf
jo
test
lea
out
ficomps
dec
shl
loop
inc
fnstsw
dec
int
mov
inc
shlb
jns
pop
mov
hlt
sbb
sub
mov
or
je
xchg
pop
cmp
fucomip
mov
shrl
cmp
movsb
mov
popa
xchg
aam
adc
outsb
shrl
insl
add
addb
insl
adc
sub
jo
mov
xchg
daa
xor
dec
out
cmp
and
scas
jno
cmp
and
jnp
xlat
jge
adc
movb
jno
mov
loopne
mov
enter
iret
stos
cmc
rcr
js
mov
sbb
stos
sbb
roll
std
nop
leave
pop
mov
repnz
sub
xchg
pop
push
inc
mov
dec
shrb
bound
es
mov
or
fstp
dec
pop
mov
push
xchg
sbb
rcrl
pushf
inc
into
mov
in
mov
lods
call
jno
ds
ss
push
rcrb
jno
aam
mov
scas
jb
cs
fstps
jae
lock
icebp
push
lods
pop
pushf
call
lret
decb
fwait
or
jne
fwait
adc
imul
out
es
cld
cmp
insl
pop
push
dec
jb
mov
xor
mov
sarb
imul
sbb
lods
push
data16
shr
fisttpll
into
xor
cmp
imul
int
mov
xor
inc
push
lea
ljmp
or
dec
mov
pop
inc
fcoms
fwait
cmp
sahf
sub
and
cmpsb
jbe
lods
xchg
cmp
xchg
int
add
aam
out
ss
pop
sti
fs
in
sbb
stc
arpl
sub
sub
jae
adc
xor
ret
xchg
pop
test
cld
fidivl
mov
add
rcrb
decb
xor
dec
ljmp
std
inc
and
repnz
insb
int
mov
push
inc
andb
dec
fcmovu
sub
inc
call
div
sub
inc
inc
rclb
adc
pop
lock
jecxz
inc
mov
and
sub
ficoms
xchg
dec
xchg
add
cmp
and
push
pop
jno
adc
push
push
insb
leave
jnp
scas
mov
call
bnd
cmp
in
popf
shll
or
mov
jecxz
ljmp
pop
loopne
jl
aas
cmp
sbb
dec
push
fisubs
and
pusha
pop
std
gs
xchg
in
pop
mov
ret
enter
pop
enter
call
int3
or
cmp
xchg
fs
cmp
sti
xor
xchg
cmpsb
inc
jg
inc
inc
inc
test
inc
ss
jbe
xchg
mov
inc
add
popa
es
or
inc
pop
scas
jle
sar
or
xor
push
cmp
in
lds
mov
pushf
sub
xchg
repz
sahf
stc
in
shrl
ds
pop
xor
adc
sti
jge
xchg
jbe
cmp
xlat
inc
orl
jo
in
mov
push
sub
bound
outsl
fisubrs
add
test
imul
orb
das
add
xchg
mov
pop
inc
mov
mov
jno
and
lea
aas
jbe
xor
cltd
jns
or
int3
iret
add
faddl
jb
jmp
jns
rolb
fsubrl
cmp
stc
xlat
daa
bound
into
aam
fwait
inc
ljmp
xor
cmp
adc
cmp
adc
lcall
ficompl
inc
cwtl
mov
sub
popa
lods
pop
fneni(8087
xor
cmpsl
setg
cmp
cmp
aaa
lds
mov
gs
jno
into
arpl
dec
xchg
mov
call
ficoms
out
cmpsl
negl
or
outsb
cld
pop
hlt
lods
data16
and
jb
jo
and
add
insb
jle
lea
sub
mov
mov
pusha
inc
inc
or
pop
subb
jae
xchg
and
nop
sbb
pushf
and
adc
push
sahf
mov
sti
rclb
xchg
dec
jp
add
test
imulb
mov
lcall
mov
mov
int
cmp
fcomps
lock
jle
dec
sub
ljmp
adc
inc
and
mov
mov
stos
shrl
sti
jp
cld
fisubs
push
cmp
pop
sti
dec
jp
roll
iret
mov
jns
js
ljmp
xor
js
mov
sbb
cmp
add
gs
dec
pop
fidivl
ljmp
mov
sub
fistpl
sub
mov
cmp
mov
cs
scas
addr16
cmp
out
and
jns
cli
inc
fwait
pop
mov
adc
loope
shrb
sbb
xor
daa
js
stc
pop
sbb
push
mov
in
outsb
daa
jns
jp
sub
xlat
into
xchg
popf
sub
cwtl
stos
mov
cmpsl
xorb
xlat
gs
push
xor
les
pop
cli
popf
add
adc
cmp
js
add
fidivrs
mov
push
pop
jmp
adc
mov
popf
sub
jle
std
mov
mov
push
mov
loopne
or
sbb
jg
outsl
mov
cmp
inc
push
shlb
or
cltd
out
mov
lret
dec
mov
das
dec
mov
int
andl
jbe
sub
or
rcrl
or
cwtl
fnstcw
lock
add
or
mov
iret
mov
push
cmp
xchg
cmp
pop
inc
pop
cmp
iret
popf
test
mov
int3
mov
sbb
dec
fisubl
fbstp
mov
in
leave
jno
ljmp
xor
addb
movsl
in
mov
test
xchg
in
sub
jb
aaa
xlat
push
xor
lea
int
add
sbb
or
movsl
inc
mov
cli
sbb
and
inc
or
xlat
and
add
dec
and
sub
jmp
jno
add
sbb
enter
push
fwait
xchg
cmpsb
mov
sahf
push
mov
mov
mov
push
dec
jo
in
rolb
xchg
movsl
mov
or
loopne
jnp
pop
fcoml
cmp
ficoms
adc
lcall
in
lods
addr16
call
lahf
ds
shll
das
xchg
mov
adc
mov
cmp
and
push
mov
jo
add
mov
fdivrl
call
mov
nop
push
mov
je
mov
xchg
add
incl
aam
int3
pop
dec
sbb
int
add
pop
jle
pop
fmuls
mov
xor
and
mov
arpl
add
out
cwtl
jmp
pop
es
imul
sarb
xchg
in
push
in
xchg
mov
bound
mov
push
push
lds
mov
xchg
jns
mov
or
aam
inc
popa
pop
outsb
lcall
insb
xchg
pusha
lret
dec
leave
int3
or
ljmp
fistpll
inc
lret
mov
stos
in
xor
push
xor
out
and
incb
ljmp
pop
cmp
call
in
and
push
mov
jne
aam
adc
aaa
repnz
xchg
sub
movsb
fwait
mov
jbe
pop
inc
pusha
out
jne
lock
cmp
mov
int
cs
ror
push
and
push
jmp
xchg
xchg
inc
dec
mov
push
lods
and
inc
test
mov
sahf
jp
and
xor
ret
insl
test
push
xor
cld
xchg
orps
cmp
fisttpl
in
mov
jns
inc
adc
stos
inc
cmp
jmp
stc
or
pushf
fsubrs
push
lret
stos
cwtl
clc
sbb
xchg
add
adc
cwtl
or
fcoms
pusha
mov
sbbb
inc
or
iret
push
adc
sbb
adc
int
insl
push
jg
inc
inc
cmp
dec
mov
mov
mov
mov
insb
mov
popa
mov
sub
xor
in
fsubp
js
xchg
mov
cmp
in
pusha
stos
jecxz
push
xor
inc
jg
hlt
pop
xor
sub
jno
aaa
fnsetpm(287
mov
push
les
pop
rol
mov
pop
test
jae
adcb
pop
jp
test
pop
sub
test
add
jge
push
sbb
ret
fwait
pop
add
mov
js
pop
stos
push
mov
xchg
inc
pop
dec
and
sub
sbb
add
movsl
addr16
sti
pusha
adc
mov
sti
imul
inc
leave
mov
mov
inc
rcl
outsb
jo
adc
cmpb
rclb
lock
rolb
and
sub
mov
jl
ja
lods
jo
lahf
ss
mul
out
mov
rorb
jbe,pt
xchg
sbb
scas
pop
push
lahf
xchg
xchg
mov
cwtl
cs
pop
push
cli
cmp
jle
bound
sub
in
jb
lods
mov
fsub
jae
addr16
pop
outsl
cmp
call
mov
out
aam
xchg
mov
add
jmp
test
hlt
jns
testl
clc
cmp
dec
js
sti
mov
dec
nop
jbe
pusha
push
test
imul
cs
xchg
sbb
cmp
daa
call
mov
int3
mov
test
sub
popf
add
xchg
ja
lret
addl
jns
lds
cs
iret
data16
into
inc
pushl
lret
fs
hlt
movsb
stos
push
ret
fnstsw
cmpsl
sub
in
lea
lock
mov
xor
imul
shll
ret
test
jp
push
sti
ja
out
sub
lahf
pop
cmpb
jns
test
cwtl
cltd
lds
popa
das
in
insb
shl
shrl
shll
nop
push
or
mov
xchg
mov
push
shl
lea
cs
adc
cmpsl
jae
shrl
sbb
pop
xlat
ret
leave
stc
push
jmp
pushf
les
out
stos
xchg
aam
stos
lea
push
mov
sub
rorl
and
or
mov
es
lods
mov
mov
out
jge
jg
pop
movsb
mov
mov
inc
mov
popf
jbe
mov
inc
jb
out
stos
imul
stos
jg
mov
data16
data16
fs
jl
sbb
dec
rorb
jo
rorb
inc
sub
lea
adcl
in
les
loop
and
scas
mov
and
cs
movsl
sub
mov
jp
add
idiv
dec
ret
adc
mov
fdivrl
mov
pop
pusha
test
cmp
in
aas
xchg
sbbb
jp,pt
jp
sbb
adc
negl
fs
push
pop
sub
idivb
pop
sbb
addr16
adc
mov
add
dec
and
add
rcrb
add
and
xchg
mov
ja
cwtl
push
mov
inc
jle
scas
jle
xor
cmp
cmp
cmpsl
xchg
mov
ret
xor
and
shl
loopne
mov
stos
xor
shl
pop
inc
mov
sbb
push
mov
push
jbe
inc
lret
clc
out
std
icebp
sbb
sti
clc
out
cmpsb
std
or
popf
push
dec
lods
mov
bound
imul
bound
shll
lcall
ja
clc
in
mov
inc
enter
xor
rep
xchg
and
pusha
insb
sbb
xchg
in
daa
ds
jae
mov
xchg
adc
push
lahf
and
xor
cmp
adc
call
mov
std
movsb
test
xor
rolb
mulb
fcoms
mov
inc
mov
rorl
sub
clc
push
arpl
test
jmp
xchg
loop
xchg
add
cmpsl
xor
mov
xor
lea
mov
sbb
cmp
and
sbb
test
sarb
imul
into
out
push
xor
jmp
or
pop
sbb
inc
mov
jne
push
push
inc
out
imul
sub
cmp
das
jle,pn
inc
and
push
sbb
ret
inc
popf
mov
dec
ljmp
xchg
pop
xchg
lahf
mov
sub
jmp
mov
icebp
jecxz
in
dec
push
les
push
out
outsl
movsb
cmc
inc
bound
adc
dec
mov
mov
pop
aad
dec
inc
insl
pop
add
or
pop
add
mov
dec
mov
jnp
aad
aas
push
mov
mov
and
fimull
pop
inc
xchg
mov
mov
int3
aad
add
jmp
xorl
jbe
and
jg
xchg
pop
sti
inc
sub
arpl
cltd
sub
sbb
loop
lahf
or
jg
arpl
sub
inc
jbe
jne
dec
add
stc
cmpl
jae
push
dec
fbstp
pop
xchg
xchg
adc
sbb
mov
push
add
cmc
jmp
pop
xor
mov
ja
sbb
mov
adc
aad
push
prefetch
cli
lea
pop
mov
int
mov
sub
std
sub
mov
aam
in
test
shl
aam
cld
jae
lahf
dec
nop
test
xchg
cmp
pop
lret
fdivl
je
dec
push
push
and
add
or
aad
scas
ret
sub
or
cmpl
out
mov
xchg
or
cmpsb
push
sub
inc
sti
ja
mov
jg
iret
xchg
or
push
arpl
out
lock
insb
andb
pop
sbbl
inc
insb
mov
clc
cmp
mov
xor
sub
ja
scas
fcomps
xchg
mov
lret
xchg
gs
mov
rcll
push
repz
mov
jle
xchg
push
jmp
or
xor
mov
mov
imul
sub
loopne
es
daa
loopne
adc
test
fsubrl
jge
test
cmp
out
fldl
daa
sub
ret
cmp
and
das
test
push
jno
lret
mov
ds
scas
jl
jl
out
mov
pop
push
bound
sub
jp
scas
lea
out
insl
pop
pop
int3
dec
ds
pop
fistpll
xor
adc
push
out
add
iret
jno
or
cmp
insl
push
daa
or
idivl
inc
cmp
xlat
addr16
mov
sahf
iret
xor
cmpsl
pop
or
adc
jo
mov
mov
scas
xchg
arpl
roll
push
aaa
sahf
stc
push
inc
call
sub
into
sbb
mov
sarl
jns
fs
dec
xchg
mov
sub
mov
in
xchg
pushf
inc
dec
ljmp
push
inc
pop
sti
pop
jle
dec
jecxz
outsb
xor
sbb
jge
mov
mov
jnp
mov
orl
mov
dec
mov
ja
mov
aas
mov
inc
popa
mov
stos
xor
push
les
mov
test
loop
xchg
lret
dec
clc
xor
iret
pop
adc
call
shlb
cld
ret
dec
adc
lret
xchg
cmc
fistps
inc
xor
jl
outsl
add
clc
clc
fistpl
pop
and
loop
or
in
dec
pop
das
into
or
sbb
sub
arpl
xchg
cmpsb
enter
leave
scas
push
xchg
inc
and
sbb
cmp
test
mov
lock
imul
iret
mov
sub
fisubrs
mov
insb
cmpsb
mov
jg,pt
jecxz
lret
fsubrl
jp
sub
lret
scas
in
lock
loop
push
cld
outsb
fisubrs
movsl
mov
cmp
mov
mov
into
adc
movsb
inc
outsb
inc
mov
mov
xchg
add
stc
jo
and
dec
xorb
adc
dec
mov
jno
mov
or
aaa
cmpb
jle
int
fbstp
and
and
fisttpll
xchg
icebp
xchg
add
paddq
daa
sub
sbb
push
fldt
fistps
in
cmp
dec
sub
loopne
xor
mov
or
movl
out
push
in
fcoms
dec
pop
mov
pop
adc
lods
hlt
mov
mov
sbb
arpl
aam
outsl
scas
jmp
and
or
repz
pop
jae
sbb
insb
or
cmp
cmp
push
adc
xorb
cs
sbb
dec
jp
mov
out
pop
lcall
jl
xchg
lds
movsl
dec
scas
cmpsl
rcrb
cmpsl
jmp
push
xor
lret
or
les
aas
popl
lret
push
pop
lods
adc
sahf
stos
imul
testb
shlb
es
add
mov
pop
inc
outsb
jae
xchg
mov
sbb
insl
fsubrs
push
mov
sbb
inc
sti
add
jmp
sbb
pop
sub
xchg
xchg
lods
out
mov
push
sbb
pop
out
int3
adc
aaa
call
inc
lods
fistps
ret
movsb
loopne
fbld
jns
cmp
mov
pop
inc
rolb
dec
xor
decb
in
sub
scas
sbb
fcomps
push
and
dec
pop
xor
or
pop
lock
repnz
addb
xor
cmp
and
lret
dec
lea
pusha
mov
push
rorb
inc
sub
popf
jmp
mov
iret
sarb
dec
repz
push
stc
mul
push
movsb
mov
adc
mov
xchg
stos
hlt
icebp
push
mov
in
shr
mov
into
or
cmpsb
xor
inc
enter
jg
adc
xor
or
mov
or
mull
cmc
add
mov
jg
les
sbb
sahf
mov
pop
mov
cmpsb
mov
sub
add
pop
adc
xor
imul
add
enter
movsb
add
adc
ficomps
fwait
cwtl
das
dec
jo
int
sbb
mov
inc
mov
xchg
jbe
cmp
ficomps
push
iret
sub
jecxz
push
and
std
push
jp
lea
out
repnz
push
pop
aaa
stos
xchg
mov
cmp
push
sub
xchg
cmc
lea
leave
enter
dec
shl
pop
add
jne
sub
fldt
mov
and
add
sub
xchg
inc
push
repnz
sbb
sarl
push
imull
sub
inc
pop
out
mov
adc
inc
aad
jb
cmp
negl
dec
pop
int
jp
sub
mov
ss
xor
js
fs
and
sub
fwait
inc
adc
xor
mov
dec
cmp
into
jmp
lahf
mov
inc
mov
lods
mov
movsb
mov
je
mov
pop
mov
fmuls
inc
leave
push
adc
mov
cmpsb
xlat
fldt
sub
leave
or
imul
push
into
dec
in
jle
and
mov
and
jne
jno
pop
adc
cmpsb
pop
xchg
or
mov
rcrl
hlt
sbb
lret
mov
stos
pop
dec
or
movsb
mov
aas
addb
addl
sbb
cmp
repz
add
jo
cltd
out
movsb
mov
das
sarl
mov
popf
movsl
clc
or
dec
lds
xor
je
mov
jl
je
repz
cmp
sub
adc
stos
dec
xlat
icebp
stc
adc
sub
fdivl
and
push
add
xchg
mov
inc
rolb
push
push
lea
shl
pop
das
mov
inc
jecxz
lahf
std
or
mov
or
pushf
stos
cmp
inc
in
aad
popa
popa
mov
testb
scas
daa
mov
and
fiaddl
jmp
imul
in
int
daa
inc
lock
mov
ret
out
data16
sahf
loope
jecxz
hlt
aaa
adc
mov
mov
pop
clc
and
stos
ljmp
push
inc
mov
enter
mov
mov
jbe
imul
adc
mov
les
lock
xor
les
ja
mov
xchg
leave
pop
fiadds
stos
js
arpl
ljmp
repnz
rcl
sbb
outsl
insb
sbb
imul
mov
pusha
cmc
or
inc
enter
xchg
clc
in
mov
cmp
cltd
cmp
daa
aam
fldenv
sti
xor
lcall
mov
in
mov
fwait
jecxz
pop
push
and
cli
cmp
lds
inc
dec
mov
sub
jns
pop
sahf
dec
hlt
out
xchg
jmp
test
shll
push
les
movsl
loope
out
mov
mov
das
push
stc
add
shlb
sub
setl
and
xor
jl
and
nop
in
pop
cmpsb
hlt
sahf
pop
sbb
push
cli
andl
mov
cmpsl
movsl
xchg
negb
push
xor
imul
out
xchg
xor
inc
xor
sub
in
fsubrs
lds
sbb
mov
cs
sub
mov
outsl
push
shr
push
add
inc
mov
inc
or
sub
or
cmp
ror
test
add
jo
jno
xchg
cmp
mov
clc
outsl
stos
mov
aaa
or
bound
mov
adc
mov
pop
repnz
imul
adc
dec
sub
jmp
mov
dec
sub
jno
inc
inc
paddd
fsubs
xor
push
insl
dec
cmp
imul
dec
dec
push
imul
mov
dec
shlw
push
sbb
inc
mov
sub
rcrb
push
gs
xorl
sub
jle
in
ljmp
loop
jno
popa
jmp
movsl
dec
daa
push
sbb
inc
iret
sub
loop
hlt
rcr
jnp
ds
les
stos
std
ja
daa
sub
test
add
xor
add
jne
pop
push
mov
jae
ror
fwait
in
cmp
cld
mov
daa
dec
cltd
mov
lcall
stos
mov
daa
pushf
push
mov
stos
sub
bound
xor
push
mov
dec
push
dec
and
insl
push
stc
cmp
lock
dec
imul
mov
and
mov
mov
add
dec
xchg
mov
lock
shlb
into
repz
shll
test
ret
cli
out
xchg
dec
out
pop
push
push
pop
call
das
imul
add
push
xchg
pop
stos
stos
xor
sub
pusha
loop
ja
ds
ja
add
sbb
stc
push
cwtl
dec
adc
pop
imul
fwait
int3
mov
xchg
sub
push
hlt
sahf
testb
sbb
xor
cmpsb
jecxz
repz
and
aad
and
inc
mov
and
insb
pop
xchg
adc
mov
shlb
dec
mov
cltd
sbb
or
aad
mov
repz
shlb
dec
sbb
ret
and
cmp
sarb
je
mov
clc
xchg
pushf
pop
xchg
inc
and
inc
xor
je
add
add
mov
xlat
inc
insb
sbb
push
pop
shlb
pop
negl
rorl
xor
outsb
mov
inc
mov
hlt
int
lahf
sbb
mov
std
les
lock
push
lret
sub
daa
mov
mov
sbb
push
mov
mov
in
sarl
sub
icebp
dec
pop
incb
inc
jle
dec
cmc
sar
sbb
cmp
mov
or
jp
shrb
inc
sbb
enter
mov
imul
rcrl
out
sahf
xchg
inc
int
cmc
js
enter
out
sub
mov
and
stc
mov
sub
pop
mov
ds
shlb
add
pop
pop
fisttpl
or
imul
pop
jo
or
and
sub
lahf
cmp
fs
sub
ret
ror
iret
push
xorb
repz
cwtl
mov
dec
repnz
inc
int3
mov
dec
jle
add
pop
insb
pop
icebp
mov
jge
jmp
dec
inc
mov
loope
mov
cmp
or
mov
xor
mov
lods
mov
cmp
pop
ret
adc
xchg
mov
sub
jnp
sub
xorb
lods
aad
and
in
pushf
fs
pusha
divl
xchg
pop
mov
lahf
popf
adc
mov
push
cmp
jmp
mov
mov
sbb
xor
sahf
pop
push
add
mov
xchg
xor
or
pop
stos
cld
lret
xchg
jae
push
mov
dec
lods
push
pop
lcall
xor
mov
and
or
or
popf
stos
mov
pop
jbe
pop
jns
mov
test
add
test
out
inc
sub
xor
sbb
or
ret
pop
int
fwait
dec
mov
sbb
movsl
dec
jbe
xchg
cmpl
ljmp
rclb
cmp
enter
sbb
lods
loop
popl
fisttpl
stos
or
les
loop
or
movsl
and
fbld
dec
jb
cmp
test
jl
pop
ja
int
mov
rcl
xor
lods
mov
repz
cmpsl
cmp
xchg
cmp
cwtl
bound
addr16
aam
or
lahf
jge
cmpsl
jbe
inc
dec
sub
push
cmp
jne
insb
fcomps
sbb
jne
lods
rcrb
push
pop
subb
sti
in
fdivrl
push
inc
mov
stos
aas
jge
arpl
movsl
insb
aad
or
cli
or
add
mov
inc
scas
enter
or
jp
stc
mov
ss
sahf
pop
sub
pop
in
cmpsl
cli
daa
hlt
and
or
pop
test
xor
xchg
dec
mov
mov
clc
cmp
test
sub
fisubs
sub
mov
mov
sub
aad
movsb
cmpsl
and
jle
sub
mov
pop
mov
dec
push
clc
repnz
fildl
into
loope
divl
add
aam
icebp
outsb
jns
rcl
push
cli
sub
movsb
push
push
xchg
iret
stc
inc
and
push
sbbl
mov
cli
jg
and
add
repnz
icebp
push
dec
rcll
test
jl
imul
scas
mov
out
inc
xchg
mov
cli
push
lcall
cmp
xor
push
sub
adc
clc
stos
adc
mov
xor
call
dec
cmpsl
stc
shlb
and
mov
add
in
mov
cld
adc
jno
sub
fldenv
sbb
nop
orb
lods
jg
push
mov
xchg
dec
push
inc
push
lret
dec
fisubrl
xor
push
mov
je
test
sbb
mov
adc
add
into
and
jge
inc
xchg
shll
arpl
cmpsb
mov
inc
xor
jae
push
mov
mov
jmp
loope
xchg
xchg
sub
adc
cmpsb
or
dec
enter
orl
mov
loopne
inc
adc
mov
xor
dec
mov
cwtl
or
jg
test
mov
add
jno
icebp
imul
bound
sbb
mov
mov
dec
lock
mov
dec
ficoms
cwtl
jnp
fnstsw
ret
imul
movsl
sbb
xchg
stos
movsb
mov
hlt
jns
xlat
fcmovnbe
subb
sbb
sbb
push
inc
aas
xchg
sub
test
xorb
mov
hlt
xchg
in
lea
pop
fnstsw
fadds
lds
mov
xor
xor
cltd
xor
lock
inc
mov
jne
fwait
pusha
jge
mov
jnp
int
testb
mov
jns
or
int
in
mov
cld
ror
fdivs
push
xchg
subl
cli
lods
xchg
mov
cltd
enter
fcmovnb
or
mov
pusha
cmp
inc
in
sti
xchg
fwait
into
sarl
fs
and
jo
mov
aaa
mov
push
and
out
push
aas
push
int3
cwtl
test
xor
mov
lods
mov
pop
xchg
mov
cmc
or
arpl
cwtl
mov
adc
lret
xor
and
nop
loopne
mov
sbb
adc
dec
mov
adc
sbb
hlt
cmp
inc
cmpsb
push
inc
xchg
movsb
imul
je
push
mov
cwtl
xchg
xchg
ficompl
mov
jae
mov
push
out
and
repnz
adc
mov
push
cmp
xchg
aam
inc
scas
mov
dec
flds
jmp
pop
les
push
pop
push
jecxz
rcrb
cmpsb
fs
fldcw
nop
outsl
aaa
movsb
mov
out
mov
aam
mov
fdivrs
psadbw
pop
pop
xchg
shl
int3
or
or
int
sbb
dec
imul
pop
mov
loop
pop
lcall
pop
jnp
mov
xor
into
sbb
cmp
mov
push
push
dec
mov
fwait
inc
sbb
aaa
xor
adc
out
sub
mov
jle
dec
and
push
pop
lods
out
jo
mov
loop
in
push
adc
rcrl
or
daa
xchg
es
insb
test
les
or
stc
xlat
cmpsl
jnp
or
iret
popf
aas
pop
out
xorl
pop
in
inc
lcall
cmpsl
push
adc
lcall
mov
stos
xchg
sub
outsl
fdivs
pop
mov
mov
xchg
mov
sbb
sti
lret
dec
prefetcht0
fiadds
loopne
pop
or
std
gs
and
inc
in
lock
cbtw
or
add
inc
dec
lods
and
adc
mov
sub
scas
sub
loope
lods
int
push
sbb
or
cmp
dec
shll
xchg
or
xor
imul
enter
js
pop
jns
call
pop
cmp
icebp
divps
cmp
mov
xor
jb
xchg
mov
movsb
lods
cld
cmpsl
loop
and
insb
sub
mov
xchg
stos
fwait
adc
addr16
add
cld
cmp
out
push
popf
ss
lret
adc
mov
inc
add
dec
popa
movsl
movsl
jb
add
pop
test
shl
mov
push
incb
xchg
icebp
movsl
lods
aas
xor
push
das
push
adc
inc
jmp
inc
stos
push
pushf
loope
sbb
ret
xchg
cmpsb
and
js
sbbl
push
and
adc
lock
out
xor
insb
mov
test
xor
cld
mov
scas
inc
sbb
pop
fdivl
or
push
pop
mov
in
cmp
ficoml
adc
sub
mov
iret
ljmp
icebp
xor
lcallw
lods
fcmovnu
mov
and
arpl
pop
call
jne
inc
ret
movsb
pop
out
xchg
sbb
pushf
inc
int
rcr
push
ds
pushf
mov
insl
sub
xor
xchg
fldt
test
xor
sti
jg
sbb
add
pop
aas
imul
and
push
bnd
out
movsb
in
lods
arpl
jbe
cmc
or
add
mov
pop
mov
mov
test
scas
sarl
clc
arpl
and
enter
scas
sub
xchg
call
sar
pop
inc
adc
fstl
clc
lret
adcl
xchg
and
dec
inc
xchg
imul
shlb
aad
les
sbb
out
mov
pop
cltd
mov
cmp
push
pop
push
pushf
test
popa
outsl
fiadds
or
jecxz
popf
fimuls
in
ret
push
icebp
xchg
dec
adc
jmp
pop
and
jnp
mov
addb
mull
loope
sbb
sub
movsb
repz
es
cltd
push
mov
dec
push
mov
das
add
icebp
push
std
adc
in
add
cmp
insl
xchg
push
sbb
cmc
xchg
rorb
jo
push
inc
sahf
xchg
ret
cld
int
dec
push
lret
mov
loopne
ja
jg
and
mov
mov
push
std
inc
sbbb
mov
mov
int
dec
into
call
inc
cmp
cmp
ret
test
mov
mov
mov
sub
add
cmp
cld
jg
mov
inc
and
ret
xor
mov
test
scas
sub
push
cmp
cld
add
push
and
test
mov
arpl
stos
into
push
sub
cwtl
or
dec
mov
lcall
mov
mov
xlat
mov
loope
int
dec
shll
mov
pop
sti
outsl
mov
jl
push
mov
mov
stc
movsl
jecxz
pop
pop
cmp
pop
mov
loop
sbb
dec
mov
xlat
sub
stos
popa
aad
call
cmp
push
jo
ficoms
jmp
and
push
inc
add
and
add
jle
jo
out
lods
cmpsl
fadds
cmp
cltd
ss
sbb
fsubrp
lret
push
dec
cmp
fincstp
orl
xor
sahf
out
xchg
movl
scas
xchg
fldenv
lcall
aas
jp
mov
jge
sti
lret
and
xor
shlb
stc
sub
test
pop
jmp
or
or
addr16
inc
aad
pop
movsb
pop
push
xchg
cmp
and
fs
test
mov
dec
into
mov
jnp
shr
test
add
scas
cmpsb
xchg
cmpsb
andb
cmc
repz
dec
lret
outsb
ret
push
dec
sahf
int3
xchg
iret
mov
mov
adc
fwait
ret
popf
imul
adc
sahf
aam
add
sbb
fadds
dec
in
int3
jnp
mov
cmpsl
add
sub
mov
cmp
jge
in
repnz
shl
mov
mov
repnz
cmpsl
dec
fstps
xchg
pusha
int3
mov
es
jnp
mov
leave
add
pop
jb
or
push
sub
cs
clc
dec
push
jge
imul
pusha
push
sub
pop
push
in
aas
les
xor
mov
mov
sar
hlt
jecxz
xor
loopne
lcall
fidivs
clc
scas
enter
or
sbb
dec
mov
mov
ret
clc
mov
push
push
and
test
jg
and
imul
cmpsb
jae
mov
lods
add
pop
aad
lret
scas
dec
cld
in
mov
add
loop
lcall
dec
cltd
adc
out
sub
sbb
test
jb
ret
mov
xor
sti
shl
ss
pop
or
aad
xchg
or
cs
adc
or
sbb
cmp
push
and
mov
idiv
xor
xchg
mov
sti
sbb
mov
into
stos
and
push
pop
imulb
out
add
dec
ja
mov
mov
xchg
adc
add
sub
mov
fistps
pop
jle
cltd
leave
outsb
xchg
test
loope
xchg
dec
xchg
cmp
clc
push
xacquire
dec
jl
adc
rcrb
adc
jno
jmp
mov
cmpsl
xor
jge
sahf
add
xchg
aam
jo
imul
mov
dec
test
out
cli
cmp
jecxz
lods
pop
mov
xchg
iret
jne
fldl
dec
out
mov
jg
push
test
scas
ret
pusha
lods
add
cs
xchg
mov
pop
inc
lahf
adc
mov
sahf
lret
inc
mov
or
jl
ds
push
mov
push
movsb
xchg
mov
fldl
outsl
push
andb
leave
mov
pop
shl
insl
je
xorl
mov
cmpsl
mov
lock
mov
es
xchg
stc
dec
das
pop
cmp
lea
outsl
ja
push
gs
add
fsts
inc
sub
and
xchg
jge
mulb
and
mulb
clc
adc
xor
inc
push
or
enter
leave
push
loopne
scas
jns
dec
in
inc
daa
mov
dec
push
fs
add
in
add
outsl
inc
push
xor
pop
stc
fcomps
xor
cmp
fiaddl
popa
lock
push
insb
add
jle
push
sbbb
mov
jp
dec
mov
mov
or
xor
push
mov
popf
or
xlat
push
rcl
cld
lea
insb
lock
mov
xor
dec
arpl
ret
sarb
sti
or
or
int
notl
cltd
addb
jo
add
push
add
mov
push
arpl
shrb
inc
mov
push
push
jmp
loope
pop
icebp
ficomps
shlb
xchg
adc
push
cmpsl
push
cmc
sbb
ss
out
daa
push
push
les
and
and
cmp
ret
cmp
inc
and
scas
lret
pop
in
and
ret
ret
ret
push
push
dec
repz
sbb
aad
jle
sbb
dec
das
imul
movaps
shrl
dec
sub
dec
pushf
enter
mov
leave
cmpsb
daa
push
mov
cs
inc
cld
je
or
bound
xor
inc
popa
hlt
ds
cld
mov
push
icebp
sub
stos
cmp
mov
mov
leave
and
dec
mov
cmp
mov
xchg
hlt
ficoml
or
nop
out
lock
inc
adc
xchg
call
mov
not
mov
mov
imul
std
xchg
scas
pop
sti
fmull
inc
fadds
in
std
xchg
dec
movsb
cmp
jmp
aad
js
lcall
inc
sbb
and
cld
test
lds
inc
lret
inc
jne
icebp
pop
inc
and
test
ficomps
mov
pushf
ds
push
xchg
mov
int
int
xchg
sub
mov
and
bound
cli
mov
fcmovnu
aaa
lcall
test
mov
test
inc
xchg
dec
loop
push
sbb
lods
fs
push
ftst
notl
adc
cld
adc
scas
test
fwait
pusha
cmc
decl
scas
dec
mov
iret
in
dec
or
pop
jo
or
gs
or
inc
cmpl
jne
xchg
shll
push
scas
aam
pop
stc
pop
dec
sbb
mov
sub
adc
adc
adc
and
int3
inc
mov
pop
int3
ret
mov
test
ficomps
jl
inc
pop
lods
or
add
data16
add
or
mov
fxch
js
jae
inc
aas
int
je
arpl
es
jb
fdivp
inc
cld
jo
sbb
mov
xchg
sbbb
push
loop,pt
loope
dec
loope
fcompl
aas
adc
xor
pop
push
sbb
fiaddl
sbbb
rclb
lods
or
pop
pop
ja
stos
push
aam
pop
daa
inc
popl
mov
push
clc
cmpsb
sub
aas
adc
das
stos
adcb
pop
enter
pushf
pop
jecxz
lods
ljmp
data16
adcb
pop
iret
adc
scas
push
push
push
jbe
dec
ret
or
inc
add
pusha
repz
bound
clc
inc
mov
sbb
push
pop
loopne
test
cmp
or
xchg
mov
arpl
jne
xor
xchg
push
movsb
and
pop
repz
jb
cwtl
xor
scas
pushf
xor
lahf
xchg
inc
fnstcw
outsl
fcompl
cs
call
inc
int3
dec
jle
sbb
jge
jb
add
rolb
cmp
jns,pn
or
sub
jmp
cmp
pop
add
stc
sbb
mov
in
clc
fistps
stc
add
jne
leave
js
or
push
dec
fucom
mov
stos
mov
lcall
cmpsb
stc
mov
mov
movsb
jl
mov
jne
out
cmpsb
add
out
jo
xchg
scas
or
sbb
cld
mov
aam
and
xchg
fwait
popa
cwtl
movsl
pop
xchg
mov
xchg
add
mov
push
mov
xor
movsl
neg
sub
and
dec
out
subl
loop
xor
in
leave
call
and
cmc
out
pop
in
stc
mov
fnsave
xor
outsl
int3
cltd
das
cmp
mov
fsub
push
xor
insl
xchg
rorb
out
mov
repz
lcall
loopne
enter
mov
fstps
mull
aas
daa
and
mov
adc
push
loope
inc
cmpsl
xor
dec
fsub
shll
jne
movsb
pop
or
mov
jo
es
insb
fstpl
dec
pushf
jb
sub
fucomip
les
leave
cmp
pop
ret
nop
mov
mov
loop
xchg
insl
pop
pusha
add
xor
dec
or
mov
xchg
inc
xchg
jbe
mov
call
sub
lahf
xchg
mov
mov
clc
inc
mov
out
mov
lahf
out
pushf
sub
sbb
push
test
stos
aad
mov
jb
push
push
jnp
jge
loopne
subl
lock
dec
and
mov
jne
inc
add
cmp
cmp
lahf
cmp
incl
or
jne
pop
cmpsb
mov
xchg
subb
xchg
push
dec
test
xchg
jp
dec
aaa
outsl
sub
lahf
enter
sbb
subb
push
lcall
xchg
pop
cli
xchg
xchg
adc
push
mov
add
js
cmp
adc
in
xor
inc
sbb
pop
call
out
out
ficoml
test
mov
push
aas
repz
stos
sbb
mov
adc
lcall
xor
mov
push
mov
in
cmp
sbb
aad
std
sub
push
out
sahf
popf
add
insb
in
jp
cmp
cmp
lahf
faddl
sti
and
mov
dec
xor
clc
pusha
jp
sub
sub
ret
cmp
xchg
lods
xor
cld
dec
push
mov
cmc
inc
out
imulb
ja
sbb
mov
xor
out
orl
movsl
push
mov
movsl
into
cltd
mov
pop
mov
iret
pop
add
repz
mov
shl
dec
push
mov
jno
sub
jecxz
xchg
imul
adc
hlt
cmp
jp
cli
dec
adc
mov
in
jmp
dec
aam
mov
fisubl
pop
xchg
push
xor
in
jae
test
sub
roll
sbb
mov
xchg
add
aaa
mov
or
dec
push
fnsave
fs
sbb
sub
pop
mov
add
test
mov
sbb
jns
pop
jp
sub
xchg
sbb
sbb
daa
add
shlb
fstpl
mov
push
outsb
pop
pop
ljmp
repz
cltd
notl
decl
ds
aam
decb
imul
das
repnz
mov
jecxz
aas
shll
in
push
jo
gs
mov
std
call
or
pushf
pop
or
xchg
cmp
bound
mov
sbb
xchg
xor
pop
mov
out
out
sbb
push
sbb
jbe
in
stos
lcall
jne
test
pop
fistpl
enter
mov
or
mov
sbb
ret
mov
std
mov
sub
lahf
sti
jo
inc
mov
jns
shlb
int
cwtl
fmuls
loope
imul
jmp
out
pop
xchg
push
aas
and
bound
sbb
sbb
sti
sub
call
add
ss
jns
sub
cmp
push
addr16
mov
loope
jp
andl
mov
mov
cmp
lret
test
sbb
adc
push
dec
mov
mov
nop
popf
push
jl
jo
cmp
movsl
in
pop
lds
or
xor
shlb
cmp
cltd
lret
dec
jnp
inc
jge
int3
lods
mov
jp
mov
dec
repnz
pop
xor
xchg
sbb
in
mov
cbtw
cmp
mov
pop
and
mov
mov
cmpsb
das
ret
dec
aad
inc
push
insl
lods
or
mov
inc
es
jle
les
insb
dec
inc
mov
movsb
in
dec
inc
xor
jge
sub
lods
pop
dec
mov
out
repnz
mov
test
aad
mov
jno
into
lods
bound
mul
insl
and
scas
xor
scas
jg
mov
inc
mov
ljmp
and
je
jae
mov
rorb
sahf
lea
mov
repz
cmp
adcl
xchg
jo
movsb
lret
popf
dec
sbbb
lret
mov
outsb
sub
pushf
je
rcl
sub
int3
sbb
xchg
push
jo
aam
add
les
and
je
mov
adc
sbb
in
push
mov
mov
mov
nop
push
pop
sbb
std
xchg
movsb
push
pop
xor
jle
xor
sbb
fidivrs
jecxz
adc
insb
lods
mov
add
fildl
cs
js
pop
mov
push
mov
nop
out
xchg
pop
sti
cmp
jmp
lret
dec
ja
lods
loopne
outsl
mov
sbb
push
mov
js
in
jb
dec
pop
mov
std
add
or
sub
ds
out
scas
push
mov
add
cwtl
mov
push
xor
or
repnz
ret
mov
inc
pop
and
lock
push
sahf
cmp
xchg
dec
les
popa
sbb
in
add
insl
jne
ret
xchg
stos
out
pop
xor
out
cmc
test
iret
mov
mov
rcrl
fsubr
cmp
xor
fbld
jb
dec
add
sub
js
push
in
push
js
iret
xlat
pop
shrl
pop
in
sti
pop
mov
fdivrs
out
movsb
mov
or
addl
push
mov
fdivrs
xchg
aas
lahf
lods
jecxz
movsb
fisubs
in
jae
xor
pop
or
call
loop
stos
push
scas
stc
insl
mov
add
mov
pop
adc
cmp
pop
lret
adc
mov
cltd
into
lcall
daa
testb
loopne
inc
call
and
sub
enter
adc
in
clc
stos
dec
sbb
lcall
mov
iret
fwait
outsl
popf
shll
jnp
xor
mov
mov
loopne
push
test
mov
cmp
divb
stc
dec
push
cmc
call
pop
fbld
adc
ss
mov
aam
xchg
inc
inc
mov
fbstp
popa
sbb
xchg
xchg
mov
popf
mov
mov
xor
cmpsl
mov
mov
sbb
adc
fisubl
push
add
xor
sbb
pop
testl
adc
lock
les
aad
xchg
sbb
xor
add
and
je
add
cmc
shrb
push
jae
dec
xchg
enter
ljmp
adc
test
mov
call
pop
jne
sbb
loopne
out
loope
insl
sti
movsb
iret
mov
cmp
cld
and
ja
mov
daa
push
imul
orb
jo
add
test
mov
stc
push
pop
jne
rorb
fdivs
addr16
xor
inc
sub
xorl
mov
xor
push
dec
ss
std
mov
aam
ret
insl
mov
push
ljmp
jmp
push
jg
stos
lods
xor
gs
stc
scas
sahf
pop
out
xchg
xor
test
call
shll
mov
push
mov
mov
lods
xchg
lret
dec
xor
cmp
scas
mov
fwait
cmp
dec
jl
push
dec
cmp
xchg
arpl
inc
arpl
lods
ja
cmp
sbb
and
jmp
fmuls
cld
sbb
mov
pushf
and
jnp
xor
push
repnz
loop
adc
xchg
lcall
roll
xchg
push
push
push
push
sub
mov
aas
aaa
sub
int3
add
aam
adc
xorb
mov
dec
adc
gs
jne
rol
and
cmpsb
sbb
adcb
push
sbb
sub
push
test
mov
push
sub
aam
push
sub
aad
add
pusha
sub
push
xchg
mov
jecxz
push
mov
xchg
and
cmp
sub
adc
jbe
adc
outsb
scas
test
lahf
xchg
sbb
inc
inc
cmp
sbb
cld
jl
out
add
test
out
ja
cmc
addr16
cmpsl
or
cmpsl
rorl
outsb
jns
fnstsw
call
cmpsb
dec
into
mov
in
cwtl
cltd
or
sub
push
jg
test
adc
enter
xlat
push
add
push
sbb
sahf
lds
pushf
cmp
xchg
mov
fidivrs
push
int
sbb
shrl
movsl
adc
fmull
out
cld
sub
rorb
add
scas
mov
lea
enter
enter
ljmp
test
pop
jp
mov
dec
pshufw
test
mov
fstpl
and
adc
int3
and
jb
xor
loopne
lcall
scas
mov
sbb
sahf
xlat
lahf
cltd
js
rolb
rep
mov
insb
or
stc
fs
mov
xlat
addr16
outsb
loope
mov
inc
xchg
pop
scas
pop
icebp
out
mov
pop
fisubs
xor
imul
xchg
test
insb
fidivs
out
mov
test
fsubl
sbb
jecxz
aaa
mov
xchg
add
repnz
and
enter
jae
mov
int
inc
adc
iret
push
cli
dec
sbb
xchg
cmp
popl
mov
sub
inc
add
in
int3
ja
aas
dec
out
inc
mov
ficomps
lods
xlat
fidivl
push
sbb
ret
xor
mov
cmpsl
cld
pop
adc
cld
mov
fld
jg
adc
mov
sub
xor
sbb
jnp
mov
ljmp
push
dec
mov
stos
cmpsl
out
xor
or
mov
jl
sub
aad
push
aam
sub
push
gs
out
sbb
lret
cmp
and
jbe
mov
jne
push
das
repz
test
les
pop
cld
push
pop
out
inc
adc
adc
in
mov
push
xor
mov
ljmp
out
nop
ficomps
les
add
out
fcmove
fwait
bound
scas
push
dec
sti
add
fwait
mov
push
or
xchg
les
pop
cmp
pop
mov
stos
and
mov
add
xor
out
push
mov
cmp
push
shlb
or
into
lahf
mov
fdivs
cmp
cmpsb
pop
imul
test
cmp
mov
mov
mov
icebp
imul
pop
mov
fs
arpl
add
clc
push
int
jmp
jae
xor
orl
in
stos
rol
jle
lcall
and
jnp
cmc
lods
mov
sbb
test
jb
and
jae
cmp
loope
stc
js
repnz
out
and
sarb
cmc
ret
and
adc
popf
dec
dec
shrl
imul
addr16
aaa
repnz
cmp
mov
insl
add
ret
jnp
repnz
mov
test
jb
push
cmpsb
nop
mov
cmp
and
xlat
sub
insl
out
push
jne
fistps
sti
ret
fs
fistpl
repnz
mov
pop
dec
lret
dec
sbb
mov
into
movsl
movsl
jo
inc
adc
or
in
call
xchg
insb
imul
aad
or
pushf
xacquire
add
dec
lock
sbb
mov
data16
and
mov
sub
or
insb
xor
loopne
xchg
fcoms
mov
jl
insb
mov
mov
xchg
adc
ret
in
inc
test
or
out
hlt
add
add
push
pop
and
leave
mov
lcall
lcall
cld
shl
imul
push
and
and
mov
nop
xchg
and
fnstcw
push
pop
jecxz
xchg
jno
or
jno
subb
add
lds
fsubrl
js
test
xlat
aaa
inc
jnp
fadds
add
xchg
push
shl
movsb
and
mov
push
jno
insb
add
out
aas
loope
push
dec
push
cmpsl
jmp
mov
adc
push
cmp
outsb
mov
shlb
out
jnp
add
sbb
test
out
repnz
sub
cmc
dec
inc
xor
into
cmp
aad
jnp
sub
or
mov
test
ljmp
and
popf
jae
pop
arpl
inc
push
mov
lret
pop
jnp
mov
dec
xchg
scas
xor
nop
gs
sbb
cmc
lret
sub
and
mov
test
and
jge
xor
je
pusha
mov
jp
les
sub
je
enter
or
aaa
jns
aas
sub
lret
mov
imul
add
addr16
inc
dec
les
cld
std
dec
xchg
push
test
fisubl
lcall
push
into
add
mov
scas
cmpsl
repnz
xchg
jmp
bound
icebp
scas
add
mov
jmp
jp
cltd
loop
test
push
aam
jbe
fcomi
arpl
xchg
cmp
dec
add
pop
xchg
outsb
enter
leave
add
sbb
push
pop
pop
inc
mov
clc
mov
add
jg
loope
sub
js
and
push
lods
inc
add
orb
sub
dec
dec
rol
cmp
mov
lcall
daa
lock
jp
fbld
ret
push
mov
std
mov
fsub
aam
je
std
mov
fidivl
mov
popf
shrl
sbb
sub
scas
ret
int
int3
fwait
add
mov
shll
mov
jp
xor
mov
clc
sbb
pop
push
iret
sti
adc
or
push
scas
sub
fisubl
xchg
or
or
adc
imul
xchg
addr16
adc
mov
mov
das
lret
add
push
adc
add
insl
xlat
pop
push
imul
and
jg
fwait
mov
lret
loope
and
mov
xor
call
daa
jge
fcomps
clc
mov
and
add
mov
addr16
mov
mov
les
sbb
test
sbb
cs
dec
mov
leave
push
shll
movsl
cmpsl
lock
jge
mov
jno
in
arpl
sbb
inc
adc
jbe
loope
xchg
enter
mov
mov
repnz
mov
outsb
sbb
dec
push
ret
aaa
push
sti
mov
cwtl
leave
sub
outsb
call
inc
or
adc
sub
cltd
rolb
gs
scas
cltd
hlt
or
mov
dec
arpl
push
push
xor
sbb
clc
imul
push
push
lahf
pop
fldl
jb
mov
mov
push
loope
add
or
dec
cld
lret
fsubs
dec
ja
mov
jge
mov
cmp
jno
push
jg
lcall
mov
insl
xlat
jl
addr16
jo
jb
lods
cltd
int3
dec
jge
jl
xchg
pop
cmp
xorl
movsb
xchg
cmc
das
xor
mov
inc
push
aas
dec
adc
sbb
ret
fsubs
out
jb
jo
shlb
loopne
adc
jge
popf
mov
out
mov
mov
mov
cmpl
fsin
cmp
pop
mov
and
push
sbb
daa
das
repz
inc
call
das
aaa
pop
add
icebp
pop
sub
jns
lds
pushl
mov
cmp
dec
movsb
mov
inc
lret
dec
ljmp
xchg
lods
adc
dec
sbb
adc
lods
sbb
pop
xor
xor
dec
cld
mov
fldt
xchg
xchg
add
cmp
mov
cltd
and
in
xchg
push
push
xor
into
ret
mov
sbb
rcrb
and
pop
mov
mov
stc
ljmp
sbb
fwait
mov
and
rcr
jl
rcrb
icebp
adc
mov
inc
out
sub
sbb
sub
in
adcb
testb
repnz
push
adc
mov
jbe
pop
ljmp
ljmp
call
lret
sub
out
adc
pop
nop
mov
mov
lret
xchg
inc
pop
sub
cmpsl
int3
jl
iret
je
push
inc
and
in
inc
add
push
scas
inc
mov
inc
popa
jp
das
iret
cmpsl
repnz
rcll
adc
push
mov
ja
cmp
inc
mov
and
stos
mov
xor
jo
hlt
pop
jbe
mov
xchg
xlat
fistpl
stos
mov
inc
ljmp
in
jb
lods
insl
arpl
jp
jp
inc
mov
cld
aad
inc
push
xlat
rcl
xor
daa
or
rcl
outsl
pushf
imul
cmpsl
sbb
ds
cmp
jg
pop
xchg
push
fnstcw
stos
xchg
or
in
jg
mov
addr16
add
jmp
cmp
mov
sub
cld
push
loopne
or
scas
jl
inc
jae
lods
cmp
outsl
sbb
pusha
inc
adc
or
shl
es
inc
pushf
shll
inc
inc
mov
inc
xor
jno
xlat
mov
cwtl
push
cmpsb
cmp
inc
cmp
mov
inc
mov
pop
and
outsl
lods
mov
loop
xchg
mov
int
arpl
push
mov
sub
jns
mov
imul
cwtl
subb
pop
sub
loop
inc
aad
xchg
ds
jno
ret
cmc
cmp
xor
insb
pop
sub
adc
add
jbe
jecxz
pop
popf
sub
and
add
xor
inc
jl
rcrl
add
sbb
loop
cli
pop
adc
pop
dec
leave
ret
call
outsl
xchg
xchg
or
sbb
ror
jbe
mov
fsubr
in
jle
and
nop
xor
lods
xchg
push
inc
out
pop
aas
lds
push
pop
mov
mov
fcmovnu
cltd
cmpsl
sub
nop
shll
mov
dec
mov
ret
and
fdivrp
or
fcomi
inc
orb
cmp
jo
fldt
and
int3
das
inc
xor
or
push
jg
js
adc
mov
or
mov
sbb
out
sbb
lret
cli
pop
mov
or
and
cmp
popf
movsb
adc
push
push
and
lahf
xchg
iret
je
adc
lahf
in
push
lret
adc
gs
adc
insl
add
hlt
mov
mov
and
ljmp
or
pushf
mov
cwtl
dec
sbb
popf
and
jl
dec
push
jp
ss
fs
insl
inc
in
addr16
repz
or
pop
adc
and
adc
adc
dec
jb
outsl
int
ja
mov
jbe
dec
fidivrs
push
aam
jo
sub
xchg
ljmp
js
lock
leave
loope
jmp
inc
xor
fldl
sbb
cli
inc
std
jle
pop
popa
dec
pop
add
mov
push
cmp
xchg
hlt
xor
pop
cmpsb
sbbl
push
test
dec
cmp
movq
xchg
add
mov
xchg
mov
cmc
adc
sub
jo
outsb
das
into
ret
jo
dec
dec
mov
add
inc
push
shrl
or
xchg
push
iret
frstor
or
push
pop
sub
adc
fmuls
dec
mov
call
repnz
pop
adc
mov
inc
and
cmpsb
popf
pop
adc
lods
sub
cltd
jmp
sbbl
daa
inc
mov
mov
or
lahf
and
insb
add
loopne
fwait
push
jmp
xor
push
fbstp
in
cmp
mov
pop
xchg
fadds
in
cmp
lahf
push
lods
fwait
mov
in
add
jp
pop
in
pop
test
jecxz
fs
pusha
test
push
xor
outsl
insl
lods
jo
lret
rolb
xchg
cwtl
xchg
repnz
sbb
out
sbb
inc
jg
add
cmp
jmp
mov
hlt
pop
icebp
mov
mov
leave
push
js,pt
xchg
sarb
lret
xchg
mov
mov
cmp
mov
sbb
loope
aad
ret
adc
icebp
imul
and
lock
mov
andb
popf
lahf
jmp
xor
push
xchg
mov
cmp
sub
negl
imul
push
outsb
popf
fistps
xchg
mov
into
xor
pop
inc
pusha
push
and
mov
ja
pop
call
or
aaa
ljmp
xor
aaa
mov
ss
std
enter
inc
mov
mov
pop
in
bound
sbb
outsl
cmp
xlat
lods
repz
jns
rclb
cmp
out
lds
loopne
jo
push
mov
add
and
stos
sub
mov
loope
push
xchg
fucomip
fbstp
jnp
inc
cld
jb
jmp
mov
roll
shl
cmc
lea
fcoms
imul
gs
enter
in
inc
lock
test
neg
push
fmuls
lahf
inc
or
scas
stc
sbb
add
bound
inc
test
addb
shlb
lcall
leave
and
inc
jno
int
out
pop
ss
xor
or
adc
and
cmp
xor
pusha
dec
in
xchg
loope
inc
test
push
and
leave
clc
jne
mov
sub
pop
jb
push
idivl
or
mov
jmp
outsb
or
xchg
cmpsl
mov
es
xchg
and
adc
fdivrl
rcrl
xchg
and
ror
xchg
es
ds
or
cmp
aad
movsl
inc
popa
pop
das
or
dec
loop
movsl
rorl
shr
mov
push
mov
mov
ret
pop
inc
and
flds
and
sub
dec
imul
dec
xor
test
push
sbb
xor
push
lea
jne
xchg
add
dec
int3
iret
cmp
lahf
iret
mov
jno
add
mov
flds
xchg
pop
mov
outsb
mov
jecxz
mov
ds
idivl
sbb
add
mull
push
push
cwtl
movswl
rclb
or
leave
in
repz
sbb
adc
dec
xchg
arpl
adc
push
mov
jle
push
int3
dec
enter
mov
ss
mov
in
adc
adc
xor
dec
xor
out
lea
pop
test
sub
pushf
push
jge
cmpsb
outsl
arpl
jl
inc
aas
cli
or
push
sub
in
pop
xchg
xchg
jg
sarl
cli
and
mov
add
int
loop
repnz
sbb
sub
jmp
out
push
mov
sbb
cmpsb
fldenv
inc
xor
pop
jne
cmpsl
jbe
jmp
nop
inc
fcmovnbe
cmpsl
rol
xchg
push
mov
cmp
popf
or
lock
mov
push
push
sbb
ficoml
ljmp
inc
mov
pop
jb
jae
dec
fsubs
cld
and
sbb
inc
push
cwtl
imul
psubq
sbb
xchg
xchg
out
cmp
pop
or
into
adc
sbb
push
aad
or
xchg
faddl
or
cwtl
shrb
js
in
sub
rorb
fbstp
out
xlat
lcall
mov
and
addb
xor
into
out
std
arpl
inc
xchg
xor
add
enter
mov
or
or
sbb
mov
adc
inc
and
imul
divl
adc
test
xor
pop
jl
inc
mov
shlb
mov
mov
test
jae
shll
icebp
scas
xchg
popf
mov
pop
testb
test
push
shl
js
and
maxps
iret
shrl
adc
sub
mov
sarb
inc
pusha
push
fidivrl
icebp
jns
lcall
leave
lahf
clc
jo
add
jl
fsubrl
xor
lea
jecxz
scas
pop
jmp
mov
push
repnz
push
mov
mov
dec
inc
push
loopne
pop
call
mov
adc
jne
jmp
cli
cmp
repnz
inc
add
push
andl
daa
lods
and
mov
and
inc
push
push
imul
jae
add
outsb
aaa
sub
mov
cs
jp
iret
push
lcall
mulb
jle
xor
jle
popa
shlb
pop
adc
mov
cmpsb
or
mov
xor
or
mov
jno
pop
xchg
int3
mov
ret
imul
ja
pusha
lcall
xor
out
test
ret
ss
or
xchg
leave
sbb
in
cmp
cs
mov
dec
pushf
sub
mov
call
dec
fwait
out
mov
or
test
mov
ja
pop
dec
mov
push
mov
mov
sbb
mov
into
cmp
jp
cs
popa
jo
lods
insb
or
mov
sub
and
sub
mov
xor
mov
cli
xor
out
jle
testl
add
push
lret
popf
in
mov
sub
push
in
in
add
push
into
dec
cmp
cwtl
cmp
ja
mov
push
pop
pop
fistl
lret
xlat
imul
out
test
inc
xchg
mov
adc
mov
or
dec
xor
dec
cmp
outsl
shr
outsb
sbb
jnp
call
sbb
lods
test
std
lcall
push
leave
mov
cltd
mov
lcall
sbb
fcomps
repz
dec
fcoml
and
sub
insb
cltd
pop
cmp
js
nop
sbb
xchg
xor
ror
movsb
adc
pop
pop
push
ret
cmp
adc
popf
push
pop
dec
adc
or
add
mov
jp
mov
push
imul
jae
inc
out
test
xchg
add
inc
int3
push
xlat
fiadds
and
popa
stos
jge
and
orb
loopne
fisttpl
cltd
cmpsb
adc
pop
fisttpll
mov
dec
je
out
and
mov
js
xchg
out
andl
rorl
in
mov
push
inc
repz
push
cmp
and
mov
mov
push
fcmovnu
ds
cwtl
sbb
cmp
jbe
cmp
push
adc
mov
push
lret
aam
cld
push
int3
inc
jle
data16
aas
inc
repnz
orl
fadds
ret
cmp
mov
aaa
orl
std
or
insl
insb
gs
pop
cmp
cmpl
ss
sbb
nop
sbb
ret
mov
dec
inc
add
push
sti
das
xor
push
xor
jne
movsb
jo
add
push
cltd
testb
ficompl
and
sahf
xchg
sbb
mov
or
out
push
subl
vmovshdup
clc
sbb
and
and
mov
jnp
jge
mov
sub
sbb
cs
fdivl
and
test
or
inc
mov
pop
mov
aam
ljmp
jecxz
xor
xchg
cltd
mov
cmp
insl
int
sbb
fidivrl
cmpsb
jnp
stos
je
add
inc
sub
xchg
inc
rclb
sub
jp
push
dec
dec
mov
mov
push
sub
les
orb
jmp
jmp
ret
fs
out
push
movsl
pop
repz
jecxz
push
push
sbb
outsb
sti
push
xor
jle
aad
xchg
clc
pop
pop
mov
mov
cmp
push
sub
fdivr
push
pop
push
icebp
mov
jmp
gs
add
adc
or
xchg
lcall
aas
push
sub
add
pushf
cltd
jmp
push
fstps
sbb
shl
gs
adc
adc
push
ss
fs
dec
add
fldl
imul
movb
int3
ss
pop
add
popa
cmp
inc
shlb
ss
arpl
sti
aad
add
lods
jge
fs
jno
aam
push
shl
xor
mov
pop
dec
mov
aaa
mov
mov
inc
jb
pusha
lret
cltd
lret
icebp
clc
dec
xchg
xchg
arpl
xchg
dec
dec
mov
xchg
movsl
addl
adc
adc
sti
sub
out
cwtl
push
jg
sub
rol
jb
stc
add
xchg
xor
lods
mov
imul
aas
mov
scas
ljmp
movsb
int
inc
scas
js
dec
leave
dec
mov
pop
push
inc
movl
pusha
jmp
and
push
shlb
mov
sbb
jno
orb
inc
dec
int
pop
in
mov
xchg
ret
jge
loope
pop
or
cmpb
mov
lock
cmc
add
popf
fbstp
loope
cmp
test
cmp
lods
insb
mov
je
stos
call
xor
inc
addr16
dec
rcrl
loopne
pop
mov
les
cmp
clc
add
jl
sub
push
cwtl
scas
fcomps
test
inc
js
leave
pusha
push
push
jmp
inc
gs
inc
jbe
repnz
adc
mov
lret
call
mov
xor
mov
pop
cmpl
mov
push
sbb
fstps
popf
push
mov
sub
pop
xor
pop
jecxz
out
test
mov
jbe
fcom
testb
mov
jno
sbb
cmp
addr16
es
push
sbb
xor
mov
scas
cltd
jne
sahf
inc
lds
insl
or
loope
push
pop
lea
stc
sub
push
mov
cmp
shrb
mov
jecxz,pn
cmpsb
dec
cmc
lea
repz
pop
mov
push
lock
mov
movsl
xchg
mov
dec
or
loope
fistl
shr
cmp
fstpt
or
in
mov
push
dec
out
push
jmp
stc
xlat
dec
fiadds
stc
push
fnsave
test
xor
scas
insl
xor
xor
add
xor
mov
inc
push
add
into
pop
test
xor
cmp
lods
push
xchg
dec
jp
mov
or
outsb
out
mov
lock
inc
adc
inc
adc
or
cltd
int
stos
mov
sbb
push
xchg
add
xchg
mov
insb
inc
lahf
mov
sahf
inc
mov
je
mov
push
sbb
call
inc
or
cmp
add
jae
dec
adcl
enter
dec
xor
ret
stc
xchg
mov
and
fnstenv
imul
add
cwtl
sti
shll
test
adc
mov
sbb
and
loop
arpl
push
mov
mov
repnz
push
or
adc
jp
mov
push
hlt
adc
adc
shrl
adc
ret
das
and
les
add
xorb
sub
mov
pop
wrmsr
or
adc
mov
sarl
test
ljmp
aam
push
outsl
roll
jg
pop
mov
cmp
inc
lahf
rcrb
sub
mov
iret
mov
mov
jle
and
pop
ss
mov
jg
xchg
push
ja
dec
mov
mov
cmc
jo
pop
push
push
and
jmp
mov
std
aad
mov
xor
outsl
dec
pop
mov
adc
lea
xor
movsl
mov
mov
lods
int
mov
add
mov
movsl
push
scas
xchg
xchg
lds
xorb
mov
add
enter
out
pusha
xchg
mov
xchg
aam
sahf
and
clc
xlat
repz
sbbl
mov
aas
mov
int
scas
stos
or
mov
push
test
lahf
stos
cs
ss
nop
pusha
or
jbe
enter
es
shrl
stos
and
xorl
sub
movsl
cmp
push
jae
xchg
or
pop
enter
mov
push
cli
mov
movsb
outsb
push
or
or
test
mov
and
je
lret
push
xlat
lods
adc
pop
mov
cmp
or
mov
inc
xor
sar
sbb
push
cmpsb
loop
cmp
sbb
shlb
add
push
cmp
pop
out
xor
jae
les
into
fistps
adc
icebp
mov
adc
sub
mov
dec
mov
les
sub
clc
cmpb
push
fimuls
sbb
add
cmp
dec
pop
out
int3
out
mov
es
mov
dec
fnstcw
loop
loope
mov
dec
jecxz,pn
pusha
addr16
and
inc
pusha
jge
fmulp
xor
xor
out
inc
pushw
sarb
push
movsl
mov
cmp
adc
adc
mov
jge
mov
movsl
insb
out
lea
inc
mov
xlat
jb
aaa
pop
arpl
scas
lahf
stc
in
and
and
outsl
negl
sub
inc
push
pusha
imul
fisubs
nop
mov
xor
push
inc
jns
mov
loop
pop
fldl
bound
js
mov
je
mov
stc
or
ficoml
push
adc
push
insl
stos
aam
or
lds
cli
outsb
push
mov
sub
gs
pushf
jcxz
add
rcll
sub
test
dec
mov
pushl
and
mov
scas
mov
into
sbb
mov
es
jne
setbe
mov
lds
push
sub
jmp
pop
clc
aaa
int
popf
xor
dec
push
pop
aad
arpl
out
test
add
imull
imul
jne
shrb
dec
and
shll
popf
int3
mov
cmp
and
scas
mov
repnz
xor
adcl
push
sub
loop
xchg
rclb
pop
push
add
jb
mov
stos
jne
mov
lds
cmp
or
lock
cmp
jns
dec
fisubl
jecxz
inc
sub
cmp
aam
sbb
subb
push
mov
push
fisttpll
fsubrp
bound
xlat
or
sub
jno
fistl
sub
sti
roll
mov
andl
leave
pop
insb
lock
push
fbstp
stos
adc
sbb
sahf
or
inc
mov
stos
fiaddl
push
mov
mov
clts
daa
gs
push
fnstsw
mov
inc
mov
jg
jle
adc
into
inc
and
dec
popf
xchg
bound
fsubrs
dec
xor
insl
or
sub
or
fdivrs
mov
lahf
ffreep
faddl
sub
aaa
mov
or
repnz
jnp
movsb
inc
cmpsb
lcall
pop
addb
jg
cmpsl
xchg
cmp
xlat
in
pop
test
add
and
pop
pop
popf
aaa
dec
mov
roll
fisttpl
bound
je
or
je
mov
mov
dec
mov
cltd
mov
pop
ljmp
test
test
mov
aas
mov
repnz
cmpsb
xor
adc
xchg
mov
mov
lods
and
pop
loopne
sti
out
mov
mov
out
lret
pop
push
xchg
scas
push
out
push
sub
enter
std
and
mov
push
lret
and
pushf
je
xor
call
dec
scas
fsubs
fstps
das
insb
jne
iret
cmp
mov
dec
or
test
leave
sub
popa
cmp
and
test
mov
stos
push
lret
xchg
xchg
mov
sbb
frstor
sub
enter
iret
jmp
add
rclb
hlt
loopne
mov
mov
ja
js
jnp
jb
icebp
adc
into
push
dec
cmp
adc
ds
outsl
mov
cmpl
push
enter
mov
rol
push
jnp
lock
iret
mov
ror
pop
aad
nop
jno
orb
ret
icebp
mov
mov
das
jl
add
xchg
fbld
jmp
xchg
nop
loopne
int
inc
push
jae
ss
jp
push
das
sub
std
sbb
ss
or
int3
inc
bound
mov
mov
stos
insl
and
insl
cmp
out
inc
cmpsb
in
sbb
mov
adcb
jge
mov
pop
push
add
js
and
jns
sbb
loop
jns
push
mov
mov
shll
cmp
dec
mov
adc
xchg
je
cmpsl
int3
popa
popf
cltd
in
inc
cmp
add
mov
pop
enter
rorb
testl
aad
addr16
repnz
adc
mov
dec
hlt
mov
add
lahf
add
dec
daa
daa
sbb
loopne
movsb
bound
adc
or
or
mov
dec
aaa
mov
jl
push
pushf
je
push
sub
sub
jl
loopne
mov
into
fisubrl
std
shr
negl
arpl
pop
dec
pop
mov
and
fisubl
xchg
cli
clc
xor
ds
inc
icebp
sub
int3
test
loopne
adc
out
inc
xchg
daa
ja
arpl
add
xchg
mov
mov
stc
push
adc
gs
cmpb
or
iret
popa
cmp
rolb
addr16
push
mov
jno
cmp
repnz
fidivrs
jb
dec
repnz
mov
sub
pop
mov
notb
fistpl
call
aaa
jno
dec
cmp
ret
into
iret
xlat
mov
daa
xchg
pusha
xor
ljmp
cwtl
mov
adc
lret
mov
mov
fsubrs
sahf
xor
repz
mov
cmpsb
mov
or
in
js
pop
nop
rolb
sub
icebp
xor
fbld
cltd
xchg
push
sbb
cmp
push
sub
push
inc
pop
inc
mov
popa
dec
or
inc
mov
out
rclb
push
pop
enter
push
jmp
inc
mov
inc
test
or
dec
imul
jge
popf
int3
add
xchg
cmpsl
scas
inc
clc
cmp
repnz
mov
sbb
cmp
jge
movsl
inc
jmp
rclb
push
sarb
addr16
mov
outsb
in
je
fwait
push
inc
popf
xor
fiaddl
sarl
cmp
in
pop
push
testl
add
ret
das
pop
xor
or
dec
shll
lahf
or
inc
gs
jp
dec
pop
dec
adc
into
xor
fld
dec
or
jle
push
ficompl
cwtl
push
lahf
add
subb
aas
jno
jae
mov
fsubs
rorb
fwait
and
shrb
push
leave
xor
call
lds
adc
aaa
rcrb
dec
dec
dec
aam
and
pop
mov
cltd
cmp
cltd
ss
push
and
mov
cmc
sub
mov
and
ss
scas
fs
sub
pop
xchg
mov
or
inc
stos
mov
das
mov
pop
pop
test
test
jnp
jle
lock
jge
hlt
sub
shll
xchg
std
mov
or
inc
xlat
movsb
push
xchg
cmp
stos
push
jns
pop
push
push
cmp
lcall
arpl
rol
rep
dec
adc
cli
xor
out
push
scas
cmp
movsl
xor
sbb
dec
mov
mov
in
xor
jg
lret
jbe
dec
sti
xchg
push
sub
shrb
movsb
add
pop
fisttps
mov
lret
stos
imul
insb
jp
dec
les
push
subb
in
or
or
insl
push
xchg
push
xchg
sbb
sbb
inc
cmp
icebp
mov
in
fucomp
sti
fnstsw
fsub
fdivr
add
push
mov
adc
mov
dec
dec
mov
jnp
and
insb
cmp
stos
nop
fisttps
adc
add
sbb
out
es
sbb
dec
sbb
inc
xor
roll
loopne
jmp
push
and
adc
fsubrp
push
stos
pop
push
rcl
ja
pop
cmp
fildll
push
les
mov
shlb
loop
xor
cwtl
or
dec
scas
sar
jle
in
scas
scas
jae
pusha
test
int
bnd
xchg
sub
cmpsb
adc
iret
inc
insb
xor
adc
out
pop
mov
lock
push
ret
lods
add
xchg
and
and
enter
rorl
xor
lretw
mov
add
jle
hlt
lahf
sub
or
cmp
mov
cli
cmpsb
sub
mov
pop
jae
hlt
push
xor
cmpsb
popf
xchg
outsb
sub
lea
mov
xchg
adc
push
div
iret
mov
push
negl
xchg
or
jp
fldl
mov
ret
in
add
pushf
btr
mov
sub
lcall
arpl
xchg
lcall
cld
and
pop
call
out
std
repz
xchg
lods
xor
push
inc
ljmp
push
lea
aas
outsl
and
cld
mov
push
xor
outsb
shl
loope
cmp
mov
ret
dec
imul
dec
mov
aam
inc
call
stc
movsb
insl
mov
stos
sbb
mov
mov
sub
mov
nop
in
sub
mov
in
divl
out
cli
fistpll
stos
sbb
sbb
sub
mov
pop
incl
push
xchg
sub
jg
into
insl
outsb
inc
add
sti
sar
jg
pop
outsb
dec
je
hlt
adc
xlat
aam
xor
shrl
lcall
jne
filds
imul
mov
xchg
sub
es
insb
fldcw
lcall
push
das
sbb
divl
sbb
stos
cmc
mov
ficoml
lcall
fimull
mov
sti
sub
xor
adc
cs
out
outsb
xchg
xor
or
je
pusha
sbb
or
mov
cs
sub
addl
push
stos
xor
pop
testl
daa
inc
mov
aad
sbb
in
jb
outsb
aas
jnp
sarb
aad
inc
imul
push
mov
xchg
sbb
pusha
icebp
push
push
dec
cmc
inc
faddl
ss
sbb
pop
and
sti
mov
xor
mov
sti
lods
mov
das
sbb
cmp
into
addl
pushf
gs
mov
pop
sti
push
and
ss
jle
not
shll
ret
lcall
imul
pop
xchg
mov
loopne
push
int
call
jl
adc
fdiv
jecxz
or
mov
fsubl
jae
add
xchg
cmp
ret
lahf
mov
into
lods
mov
pop
das
daa
rcll
add
hlt
jl
adc
divb
mov
xor
push
fsubs
pop
dec
int
xchg
pop
loope
fcompp
add
sti
push
aam
lds
repz
pop
add
xchg
fwait
dec
stos
outsl
and
aad
ret
mov
fcoms
cmp
mov
sbb
push
or
mov
add
adc
mov
xchg
or
insb
mov
add
xchg
xor
test
sbbb
arpl
mov
lds
push
mov
loop
adc
in
adc
out
mov
add
js
shr
ljmp
popf
enter
mov
inc
shr
scas
mov
pop
push
mov
ret
mov
sarl
fdivrl
test
cmc
in
enter
imul
loopne
dec
in
cmc
and
push
in
test
test
and
jmp
xor
sub
jns
test
into
xlat
es
jmp
cli
add
andb
idivb
pop
iret
jecxz
iret
sub
fsub
fst
loopne
fildll
inc
shrb
jmp
add
push
xchg
movsb
addb
in
adcl
scas
push
mov
dec
sahf
stc
cmp
pop
stos
ds
and
lods
dec
out
fsubrs
imul
mov
clc
jae
mov
insl
aas
or
out
jp
fiaddl
fcoml
aad
mov
jecxz
mov
cmp
popa
mov
inc
sub
jle
std
scas
push
popf
cmp
add
and
inc
sbb
mov
int
mov
xchg
jae
add
mov
jo
cmpsb
sub
addr16
imul
fwait
inc
stos
xchg
dec
or
std
aas
imul
push
sub
scas
fcomp
mov
inc
xchg
ljmp
xor
in
pusha
sbb
jle
mov
shr
mov
aas
out
push
xchg
les
sti
xor
scas
mov
xor
mov
aam
testb
mov
inc
pop
add
push
push
insl
lea
sti
rolb
daa
add
aas
lahf
jb
inc
adc
inc
push
cmpsb
xchg
sbb
imul
cmp
cmpsb
stos
xorl
int3
sahf
jno
outsl
fidivs
pop
push
xchg
cmc
and
inc
xchg
mov
fs
and
mov
mov
jg,pn
int
sub
pop
jg
cld
pushf
lock
lcall
pop
adc
jp
add
push
xchg
fdivrl
inc
hlt
int3
enter
jmp
ret
lret
dec
jecxz
lahf
sbb
add
mov
pop
xchg
and
inc
jne
mov
xchg
lahf
mov
cmpsl
stos
cs
add
cli
xchg
xchg
js
pop
jno
dec
push
pop
outsl
jns
std
mov
add
ret
mov
mov
test
sub
pop
xchg
mov
inc
dec
xor
add
push
lahf
cli
fs
pop
into
push
pop
rcrl
pusha
scas
inc
dec
jl
push
push
sub
jmp
andb
xchg
add
js
push
arpl
movsb
dec
enter
les
ljmp
mov
dec
xor
cmpsb
lret
jecxz
andl
loope
pop
fs
dec
cld
outsb
imul
mov
lcall
repz
lods
inc
leave
adc
test
lea
pop
pop
fidivrs
fdivrs
add
ja
lock
or
cmpb
rol
xor
xchg
stos
or
inc
add
xchg
adc
or
mov
and
cmp
push
imul
in
cmp
cmc
cmp
cmp
jg
lahf
flds
jle
loopne
mov
or
scas
fcmovne
leave
xchg
push
data16
ret
testb
mov
mov
out
movl
mov
bound
jge
push
stos
pusha
outsl
sub
adc
ret
sti
mov
mov
mov
fwait
sub
outsl
pushf
jno
xor
fs
dec
iret
fimuls
outsb
or
arpl
dec
inc
cmpsb
bswap
inc
jne
mov
mov
in
pop
lods
xchg
xor
arpl
and
int
push
and
in
fcoml
out
push
fadds
gs
in
sbb
pop
movsl
mov
mov
es
int3
sbb
sahf
inc
mov
cmp
int
ja
mov
scas
mov
push
imul
test
jo
xor
lcall
shl
gs
imul
out
xor
sbb
sub
and
jmp
dec
shlb
jns
and
ret
inc
add
cmp
shlb
stos
and
cmpsb
test
jmp
test
daa
pop
sbb
faddp
adcl
add
sub
mov
push
cli
push
fidivrs
sbb
lret
nop
add
bound
clc
push
pop
movsb
cmp
insb
cmpsl
add
out
dec
jae
mov
sub
inc
rcl
daa
es
out
fadds
inc
iret
push
jp
lahf
push
pop
or
mov
inc
push
in
lods
mov
data16
pop
adc
pop
add
cmp
or
pop
jl
xchg
mov
push
out
sbb
dec
cmp
rorl
inc
gs
sub
or
and
rolb
rolb
popa
jo
stc
or
call
ror
dec
xchg
jge
stos
sub
loope
xor
jecxz
and
dec
arpl
adcb
lods
xor
inc
jno
cmpsb
xchg
xor
sbb
popa
mov
push
xchg
fcomp
es
or
add
scas
mov
call
pop
cli
clc
mov
inc
sahf
sbb
test
jmp
scas
add
mov
cltd
shll
sub
dec
mov
pop
jmp
jae
sub
xchg
outsb
imul
sub
sub
sub
in
mov
stos
int
adc
or
mov
and
xor
or
inc
dec
outsl
lds
push
sub
adc
pop
xor
sub
xchg
test
or
fsubl
mov
sbb
sbbl
mov
and
mov
pop
push
aaa
ret
mov
popf
stos
fwait
mov
roll
outsb
aas
xchg
scas
dec
ss
cmpl
psubw
adc
mov
aaa
lret
sti
xchg
pusha
dec
out
je
push
fdivr
mov
cmpsb
fcmovnb
mov
push
ds
push
addr16
lret
vpacksswb
sub
sub
inc
movb
ret
loope
in
and
or
out
cmc
pusha
xorl
push
xchg
lahf
aam
mov
rorb
dec
push
cmp
ds
nop
sub
jne
cmp
lahf
pop
lcall
arpl
lret
sbb
jle
jge
mov
or
mov
dec
cltd
cwtl
xchg
cmp
lahf
orl
add
adc
or
pop
sub
or
mov
xchg
outsb
mov
mov
mul
or
je
pop
in
xor
cmp
xchg
adc
int
fxch
cmp
ret
andl
and
test
sti
cli
in
lahf
sub
stos
jb
jp
xlat
and
sti
repz
pushf
gs
insb
shll
cli
jno
mov
or
cld
imul
rol
inc
push
cmpb
pop
movsl
mov
add
xor
lods
adc
mov
jp
loope
clc
test
xchg
shrb
xor
adc
loop
pop
adc
fbld
ret
jg
cmp
loope
xchg
loope
xchg
sbb
in
pop
xchg
outsb
mov
int
int
cmp
dec
cmpxchg
mov
out
sub
xchg
adc
jae
xchg
or
in
clc
out
mov
push
ret
adc
mov
push
push
jno
push
mov
mov
add
int3
ljmp
mov
fldcw
movsl
aam
adc
mov
fistpll
mov
pop
mov
dec
pop
int
idivb
movsl
pop
stos
ja
fisubs
lods
adcb
adcb
cwtl
sub
aad
xor
push
inc
pop
or
int
testl
outsb
pop
and
xchg
adc
repnz
data16
insb
scas
pop
xor
push
imul
xor
adc
int3
iret
lea
mov
addr16
and
lods
mov
jno
lret
js
cmpsl
mov
add
sub
add
mov
lahf
adc
push
aaa
cmpsl
sub
mov
nop
dec
xchg
fs
jp
into
cmp
adc
push
pop
aam
push
push
mov
or
or
or
sahf
jp
fldenv
xlat
cs
pop
call
sbb
dec
mov
enter
lret
scas
scas
addb
mov
call
sbb
stos
mov
or
and
and
pop
jb
adc
bound
ret
mov
cmp
je
add
cmp
jmp
sbb
adc
popf
repz
sub
cli
add
pop
sbb
adc
mov
fadds
loopne
aam
jno
jp
xor
mov
clc
pop
inc
mov
int
and
sub
pop
pop
test
outsb
pop
aas
sub
mov
lcall
leave
test
shll
jbe
out
inc
pop
stos
cmp
xchg
inc
add
mov
repnz
stos
imul
int
and
xchg
sub
sarl
out
xlat
and
ss
dec
cmpsl
jge
inc
notl
orb
das
push
mov
push
jmp
aaa
xlat
sbb
add
add
push
cmp
or
push
or
rorl
jae
cmpsl
cmc
sarb
mulb
adc
shr
cmp
mov
lahf
shl
int
lods
pop
lahf
xchg
ret
in
mov
loop
adc
out
jno
popf
mov
cmp
push
pop
sar
xorb
xorl
fsubrs
jecxz
jb
cmpsl
or
loopne
fisubrs
xchg
outsb
push
cmc
pop
stos
enter
movb
cmpsl
jnp
sbb
out
xor
sub
movups
loope
pop
ds
cli
icebp
xlat
dec
inc
pop
fwait
cmc
ret
xor
sub
inc
push
pop
enter
ficoms
push
lock
pop
dec
adc
cmp
mov
popf
mov
aaa
cmp
push
sub
shll
inc
ljmp
ds
cmp
outsl
inc
or
sbb
xchg
and
push
and
push
pop
pusha
add
mov
xchg
movsb
out
in
jb
sub
mov
mulb
mov
and
scas
adc
movsl
pop
out
pop
ja
push
inc
aam
les
mov
xchg
sbb
popa
pop
xchg
and
dec
dec
loopne
es
push
movb
push
push
mov
hlt
sbb
es
cmpsl
lds
adc
mov
inc
xchg
sahf
push
xor
ret
gs
fs
fwait
cwtl
sub
and
mov
xchg
pushf
mov
je
sbb
inc
xor
pop
stos
push
call
call
pop
adc
shr
movsl
fsubrl
and
and
jae
cli
imul
lahf
pop
mov
je
outsl
pop
clc
mov
testl
sub
fsubl
cmp
cmc
cld
mov
ret
and
jne
cmp
andb
adc
adc
mov
xlat
stos
mov
push
adc
jg
jb
sarb
lea
push
fstp
int
xchg
and
inc
cmp
mov
sbb
addr16
xor
pop
sbb
mov
add
push
inc
and
scas
add
aad
outsb
dec
insl
jae
pop
sub
or
insl
aaa
fsts
stos
jae
mov
or
mov
movsb
insl
int
and
sub
repz
les
adc
cwtl
and
mov
jle
xcrypt-cfb
cmpsl
arpl
xchg
loopne
push
testl
jo
adc
mov
mov
ret
movsl
je
mov
call
popf
ljmp
aam
repnz
fisttps
xchg
lock
xchg
outsb
dec
das
mov
xchg
leave
out
xlat
imul
imul
and
push
fs
mov
shll
call
mov
push
xchg
aas
inc
out
fsubl
jecxz
cld
mov
rcr
add
inc
movsl
or
pusha
fistpl
mov
stc
mov
fstpl
lcall
push
pop
cmc
or
and
sub
or
add
dec
sub
jmp
push
test
jne
mov
mov
jg
sub
lcall
popa
cli
xor
jb
mov
inc
outsl
mov
push
xor
sbb
stos
mov
cmpsl
out
jo
loope
or
call
inc
ret
cmp
cld
sbb
adc
xlat
sarb
fmul
mov
sub
xchg
mov
es
mov
out
ljmp
enter
neg
push
pop
sbb
pop
fwait
rclb
add
and
xchg
xor
mov
cmc
lds
call
shrl
add
push
std
xor
mov
jbe
mov
add
cmpsb
mov
and
push
daa
push
jl
or
addr16
in
js
mov
insl
mov
into
inc
fiaddl
cmp
jge
stc
adc
frstor
mov
jno
sbb
add
in
jae
mov
pop
jle
pop
jp
mov
not
aaa
xor
stos
push
fisttps
fsubp
jmp
jb
dec
outsl
icebp
adc
loopne
imul
mov
in
out
jbe
hlt
mov
jno
push
adc
outsb
clc
popf
je
repz
sbb
outsb
cmp
pusha
jb
in
cmp
aas
sub
popl
pop
jle
lea
mov
pop
orb
jge
arpl
cmc
fisttpll
fiaddl
xchg
adc
ds
cmp
jne
inc
lahf
in
push
inc
push
dec
pop
jmp
sbb
daa
das
aam
dec
lcall
sbb
testb
or
add
push
mov
xor
sub
jo
sbb
adc
lahf
out
out
jecxz
xor
cwtl
push
in
stos
xor
sbb
insl
ja
xchg
or
mov
divl
push
std
test
inc
mov
imul
and
mov
dec
call
movsl
ret
add
mov
repz
mov
lods
decb
mov
jl
inc
fisubrs
test
cwtl
jmp
jbe
aam
lcall
mov
fcmovnbe
sbb
hlt
shll
lahf
data16
sbb
jge
jb
push
push
or
adc
push
jmp
jecxz
push
push
jae
insb
cmp
ret
jp
or
movsb
imull
in
push
pop
and
sbbl
jl
or
rcrb
mov
adcb
dec
xchg
scas
mov
jecxz
sub
or
push
inc
pop
insl
stos
xchg
inc
shlb
adc
sbb
loopne
gs
pop
xchg
in
call
fwait
sbb
mov
pusha
xor
test
xor
push
sarl
mov
rorb
shll
cmpsb
mov
sub
jge
adc
cld
clc
or
pushl
arpl
movsl
inc
push
in
stos
adc
nop
movsl
call
or
shlb
cli
mov
ja
xchg
cmp
repnz
in
stc
inc
mov
adc
xor
es
sub
inc
mov
andb
rcl
cmc
cmp
ds
pushf
pop
orl
lods
mov
lods
or
out
pop
jns
push
ret
mov
lods
mov
jo
mov
adc
sbb
mov
and
mov
in
outsl
sbb
insb
hlt
adc
orb
push
das
push
adc
add
std
jmp
jl
jne
jg
fmull
lea
call
add
fwait
movsl
cltd
enter
loope
or
call
cmp
push
adc
inc
mov
xor
test
mov
lret
push
inc
mov
mov
cmc
mov
pop
xor
lahf
lret
sub
cmp
xchg
in
cmp
enter
andl
std
adc
adc
loopne
daa
rcll
jg
out
adc
mov
in
xchg
in
push
dec
mov
mull
in
dec
lcall
sub
mov
adc
fs
lods
cmp
jg
shl
sbb
xchg
xor
pop
das
loop
xor
adc
pushf
iret
movsl
in
and
repz
lahf
call
test
repnz
ret
mov
push
ja
ds
add
jmp
xchg
into
lock
cli
movsb
jl
or
xchg
fadds
loopne
rol
inc
out
xor
mov
in
cmp
fwait
comiss
lds
adc
cltd
leave
pop
test
dec
imul
int
nop
in
cmpsb
fdivl
dec
dec
test
mov
lea
pusha
mov
imul
and
jbe
xor
push
dec
xchg
in
xchg
jge
loopne
adc
aaa
cmpsl
sbb
inc
pop
push
jecxz
sbb
push
adc
or
ss
add
int3
mov
aam
mov
and
push
add
mov
mov
call
sub
cmc
mov
xchg
jno
inc
mov
xor
ljmp
das
sub
cmpsb
adc
aad
fisubl
ja
add
mov
mov
test
mov
neg
gs
jecxz
dec
or
adc
xor
btc
arpl
mov
sbb
hlt
pusha
pop
movb
iret
adc
xor
lret
in
sbb
jnp
dec
aaa
sbbl
jb
mov
xor
lret
test
push
das
pop
ret
mov
cmp
xchg
mov
push
ljmp
lea
xchg
inc
in
jno
loope
movsl
aad
push
addr16
sub
xchg
jns
jp
jno
int3
jno
adc
sub
xchg
out
imul
xor
mov
clc
cltd
adcb
cld
lods
loope
inc
dec
xor
push
lds
mov
jb
mov
xchg
repnz
lea
lahf
inc
mov
out
jb
mov
loope
imull
js
enter
jno
iret
cmp
mov
arpl
in
repnz
lahf
lds
xor
mov
jnp
xorb
pop
xchg
aam
in
daa
dec
jmp
adc
stos
pop
pushf
leave
jecxz
mov
cmp
shlb
inc
jo
mov
mov
mov
mov
cmpsb
mov
je
jne
in
dec
les
dec
xchg
and
jno
insb
push
data16
mov
push
adc
mov
into
xchg
aad
jle
push
out
icebp
xchg
leave
orb
xchg
and
xchg
or
cwtl
mov
sarl
in
insl
dec
dec
jns
out
mov
dec
aaa
or
mov
push
scas
insl
mov
pop
dec
lcall
call
mov
adc
or
jns
add
lods
inc
ja
jle
push
sub
data16
repnz
lret
fs
outsb
movsl
popf
popf
cmc
push
add
cmc
aas
mov
sub
stos
mov
and
mov
test
pop
pop
leave
and
lret
pop
iret
rcll
filds
int
in
fwait
add
out
ljmp
and
dec
pop
inc
xchg
xor
int3
ljmp
fidivrl
rcrl
cmp
sti
rcll
mov
xchg
pop
pusha
aaa
mov
jo
ret
repz
dec
push
jne
mov
pop
loope
pop
mov
jne
add
fxch
mov
test
dec
lock
dec
ret
bound
pop
jp
gs
and
push
icebp
in
adc
xor
dec
lcall
stos
insl
jmp
lea
cmpsb
xchg
inc
jo
aad
int
cmp
or
jge
and
or
int3
rcrl
loopne
push
sub
xchg
loope
push
jbe
cmp
mov
xchg
jl
mov
addl
push
xchg
add
pop
cmpsl
lcall
add
cmc
int
inc
loope
out
sbb
inc
idiv
lcall
int3
fsubs
mov
rclb
pop
mov
popf
add
add
add
inc
mov
in
or
sub
mov
int3
dec
xchg
mov
rorb
icebp
adc
repnz
mov
repnz
pop
mull
push
jb
ss
mov
fwait
cmp
test
cmpsb
mov
mov
subb
sarb
loopne
xchg
inc
xchg
fidivrs
dec
mov
or
popf
cmp
adcw
lock
cmp
adc
mov
outsl
lods
mov
nop
and
mov
pop
shll
pop
leave
push
push
out
sbb
push
and
lret
sub
js
fidivl
pop
push
cmc
mov
cmp
mov
lock
scas
loop
fdivrs
push
hlt
cmpsl
in
gs
cmpsl
bound
das
jne
jge
push
pop
sub
stos
push
and
xor
cwtl
test
cwtl
xchg
dec
insl
andb
mov
push
adc
cmp
lock
push
mov
sbb
outsb
sbb
xchg
pop
ljmp
mov
iret
cwtl
ja
mov
sbb
pop
cli
sbb
adc
add
or
cmp
mov
aas
in
xchg
push
jle
pop
mov
sub
fsubrp
or
out
mov
jmp
rclb
mov
or
insb
and
shlb
jb
or
add
sub
loope
sub
dec
stos
ja
mov
xor
fidivrs
inc
in
sarb
mov
out
pop
pop
jp
out
or
inc
add
sbb
fdivs
adc
aas
sub
xchg
dec
mov
push
lret
add
dec
lret
icebp
cmp
int
adc
out
out
adc
jp
xchg
push
push
fmul
data16
repz
out
adc
inc
inc
jnp
mov
pop
ror
push
or
pop
sbb
and
addr16
lret
punpckhwd
jl
cmpsl
jp
imull
and
adc
sar
fdivrl
cs
mov
xlat
and
cwtl
lds
imul
adc
mov
xor
popa
inc
ss
sti
prefetchw
cltd
je
rclb
adc
dec
mov
push
and
lds
js
pop
push
lock
add
push
js
push
xor
mov
call
out
imul
jmp
ret
xchg
ret
test
add
jne
icebp
in
pusha
xchg
xorb
cmp
xor
outsl
orl
xchg
bound
cltd
pop
cld
jne
inc
lcall
aam
or
fsubrs
nop
outsl
cmc
or
sub
sti
jbe
lret
xchg
pop
leave
push
jnp
lcall
xor
sbb
xchg
mov
jmp
mov
lahf
cmpsl
and
mov
mov
scas
iret
jbe,pt
cmp
jnp
cld
mov
clc
mov
mov
cmp
dec
mov
in
pop
faddl
cmpsl
lods
imul
sysexit
or
ja
and
mov
add
test
sub
fstpl
xor
inc
movsb
inc
negb
js
lret
enter
ret
mov
lds
leave
ret
xchg
jp
js
mov
inc
jmp
sbb
or
rclb
loope
scas
mov
insb
jmp
cmpsl
push
ja
gs
js
mov
push
pop
xchg
outsl
add
sbb
es
sub
xchg
pop
xchg
shrl
jge
outsl
or
les
movq
insb
call
push
orb
loope
imul
jle
std
jb
hlt
xchg
push
dec
lret
xor
add
xchg
mov
push
sub
inc
xchg
mov
dec
sbb
sub
std
adc
cmp
outsb
xchg
arpl
mov
test
loop
sbb
inc
cmp
cmp
inc
sub
adc
adc
scas
add
cmp
cmpsb
push
movsb
stos
fs
imul
loop
mov
imul
jbe
pop
out
mov
sbb
sbb
popa
cmp
cmp
test
cmpsb
add
test
leave
and
add
xor
sti
mov
lds
sub
pop
ljmp
inc
sbb
cmc
js
fs
callw
aad
scas
sbb
jl
or
xchg
loopne
mov
adc
test
scas
dec
aad
daa
shll
mov
iret
shlb
in
es
movsb
push
nop
pop
test
lret
xchg
lock
pop
rorl
rcll
or
loope
sub
fstpl
and
jne
mov
pop
pop
loopne
mov
lods
fsubrl
lds
pop
mov
aaa
adc
out
subb
enter
in
repz
mov
stos
leave
ret
adc
insl
mov
test
shrb
add
xchg
loop
cmp
addl
addr16
pop
sahf
xchg
in
and
loope
leave
mov
push
clc
out
push
pop
or
ret
and
jp
loope
bound
cli
aas
inc
push
push
pop
lods
mov
popf
js
dec
call
or
push
jbe
pop
and
and
sub
cmpsb
ds
jnp
movsb
fildll
jbe
scas
adc
pusha
or
xchg
pop
movsb
loop
mov
sub
mov
xor
cmp
cmp
xchg
mov
ret
movsb
and
jl
call
lods
xchg
dec
jmp
lret
shll
jle
insl
pop
sub
fwait
stos
cmp
jge
jne
cli
push
sbb
mov
dec
mov
in
loop
inc
mov
out
mov
gs
das
dec
icebp
divl
das
cmp
lods
jo
xor
pop
mov
push
mov
or
imul
inc
imul
jle
inc
mov
cmp
pusha
cmpsl
pop
enter
dec
mov
pop
pop
lcall
ja
sarb
jl
inc
call
xchg
and
jae
in
iret
xchg
loopne
lds
xchg
or
pop
fists
popa
movsb
in
in
icebp
mov
movsb
cmpsl
cmp
and
xor
push
insb
mov
mov
mov
scas
dec
inc
mov
icebp
xchg
or
xor
lret
and
mov
sub
loop
pop
sarb
dec
setae
loop
leave
jle
jb
jo
dec
and
sbb
lea
cmp
push
xor
mov
cld
cmp
jge
xorb
dec
and
lret
dec
in
insb
shlb
jbe
mov
cmpsl
out
cmc
inc
pop
pop
xor
hlt
dec
repz
pop
mov
or
repnz
shrb
ja
inc
mov
daa
jmp
out
lcall
mov
test
fwait
fwait
or
jle
mov
aaa
or
lods
mov
jecxz
push
and
rcr
pop
dec
fistps
pop
and
lret
push
gs
outsl
pop
mov
test
mov
mov
out
adc
push
into
fisttpl
movsl
data16
and
call
shl
ds
cmp
jg
daa
sub
adc
add
nop
push
xchg
sub
fwait
push
movsl
insb
movsb
repnz
sub
ja
repnz
lea
ljmp
mov
fistpll
xchg
pushl
xchg
ss
mov
clc
xchg
and
dec
ret
or
or
stos
iret
call
fdivs
dec
sbb
sbb
mov
dec
add
jmp
sub
loopne
loopne
add
mov
jl
rorl
adc
es
clc
shlb
push
fisttpll
xor
femms
shrb
rclb
cli
sub
xorl
push
mulb
inc
and
dec
xchg
enter
adc
xor
push
bound
fcomi
and
pushf
ret
ret
mov
mov
cmp
sub
int
pop
dec
xor
sub
loope
rcrl
lods
hlt
jl
inc
lds
jg
sarb
outsl
outsb
mov
add
xlat
push
in
nop
and
xchg
push
pop
jae
insl
jg
mov
inc
pop
mov
fnsetpm(287
add
scas
stos
jo
cmp
jg
arpl
or
pop
adc
dec
add
lahf
fildll
int
jne
push
mov
push
movsl
fcmovu
imul
lock
dec
dec
test
jge
int3
je
jno
add
xlat
or
ficomps
aas
xchg
fadds
mulb
xor
jmp
jge
mov
cmpsb
mov
imul
into
dec
in
cmp
cmc
and
and
orl
and
clc
mov
jae
xchg
daa
leave
or
xor
jl
push
xor
ja
push
test
rclb
out
push
ja
imul
scas
jmp
mov
insb
outsb
xor
sbb
subl
divl
xorb
dec
sbb
leave
popf
int
ret
das
pop
enter
adc
repnz
adc
bound
es
adc
dec
jnp
in
xor
outsl
or
dec
and
inc
pusha
pop
xor
xlat
lea
mov
rcl
dec
push
inc
mov
pop
rol
out
sbb
lret
shrb
rcl
sbb
mov
jns
adc
mov
dec
cmp
inc
push
call
je
movsb
cmp
add
adc
icebp
mov
cmp
mov
cmc
sub
out
mov
mov
fildl
cltd
cmpsl
dec
aas
dec
lret
and
or
or
imul
mov
ret
xchg
add
fwait
inc
bound
and
jp
sbb
js
jecxz
and
adc
xchg
inc
inc
jl
dec
out
sbb
dec
mov
icebp
dec
or
xchg
in
sub
fs
adc
mov
fdivr
ja
xchg
adc
mov
ret
addr16
ret
sub
rcrl
fwait
aaa
push
lods
mov
repz
pop
adc
cmpsb
push
orl
adc
movsl
or
mov
and
mov
or
push
lods
loop
and
xor
push
push
push
xchg
lods
or
leave
ror
xor
jge
dec
and
in
repz
in
sub
mov
test
fs
xchg
rcll
inc
loop
into
lods
int
push
xchg
xor
add
call
xchg
andb
sbb
aas
jnp
add
aaa
pop
sub
xor
lds
sbb
imul
sti
pop
sub
loope
insl
dec
sbb
push
pop
jge
lahf
pop
push
jge
lret
jno
popl
pushf
push
movsl
je
jne
push
iret
dec
xchg
hlt
test
sbb
shlb
inc
add
lds
add
aas
sub
pop
insl
dec
jmp
scas
call
int
gs
andb
jecxz
subl
rcl
or
pop
sbb
mov
xor
fldt
sbb
popf
jp
jmp
shlb
xchg
fadds
sub
cwtl
pop
stos
sub
jbe
push
fsubl
inc
push
notb
sti
and
fcoms
ret
pop
dec
mov
mov
jmp
mov
push
leave
mov
xchg
and
adc
imul
xor
pop
lret
adc
nop
lret
jne
cmp
adc
scas
mov
xchg
pop
push
arpl
lcall
mov
loopew
mov
dec
scas
lods
add
mov
sub
cmc
add
xchg
pop
lret
jnp
into
or
or
lock
cmp
fstl
sarb
sub
jl
sub
add
loope
test
mov
nop
outsl
mov
xchg
adc
cmc
adc
push
aam
cli
sub
pop
pusha
dec
sbb
jne
add
cmp
popa
sub
mov
xchg
push
push
in
das
and
jecxz
loope
xor
mov
call
adc
gs
fildll
mov
lret
das
push
or
xor
lods
jbe
cmp
adc
mov
adc
jbe
int
sbb
pop
lcall
push
xor
loope
aaa
mov
xchg
add
ret
jle
xor
ss
push
xchg
stc
xchg
adc
sub
or
jmp
jle
jb
jg
push
out
mov
test
mov
das
sbb
or
imul
jb
push
lret
xor
scas
leave
rcll
and
fimuls
clc
test
enter
imul
sti
mov
xor
or
mov
pop
int
outsl
mov
gs
or
cmp
aam
aaa
mov
mov
fstps
dec
fs
jbe
int3
stos
sarl
cmc
xchg
sbbb
push
lods
icebp
andl
xor
popf
sub
xor
ja
cltd
jecxz
test
jge
sub
scas
cltd
dec
sub
out
test
nop
mov
fidivl
test
adc
lret
aas
movsl
mov
inc
in
in
fistpll
data16
int
xchg
pop
mov
aam
data16
xor
inc
lea
push
repnz
mov
jns
or
rolb
sub
loop
xchg
jmp
ss
rcrb
add
or
pop
pop
jl
cltd
aas
cmp
mov
xchg
cmp
pushf
lea
jecxz
mov
in
clc
cmpb
rorl
or
insl
push
cmp
loopne
push
orl
or
repnz
sub
stos
insl
mov
popa
push
roll
stos
cmp
mov
jno
pushf
mov
cmp
mov
adc
std
in
popf
mov
lcall
or
shrb
adc
xchg
sbb
cmp
orb
or
fld
xchg
push
leave
insb
fstps
sbb
shlb
loopne
sub
push
adc
gs
xchg
lcall
loope
out
sbb
test
or
mov
js
pop
es
pop
mov
out
mov
lods
fwait
lcall
adc
pop
je
std
aaa
stc
jl
xor
ret
and
lock
dec
sbb
ja
pop
xlat
mov
lds
lahf
sbb
jge
ds
rcrb
gs
cs
aam
inc
or
cmpb
jl
and
xor
call
fs
imul
testb
dec
xchg
aad
loop
int
jne
xor
xor
cli
stc
in
pop
dec
sbb
lds
jbe
jnp
sub
xchg
mov
jno
pop
ret
popf
cs
dec
pop
pop
ja
inc
ja
lea
pop
sub
test
jo
aaa
jbe
enter
mov
loope
loopne
cmp
and
and
shl
pushl
aad
jo
stc
daa
aas
jecxz
cmpl
test
sbbl
pop
add
mov
jl
jge
sbb
xor
out
movsl
mov
dec
jo
jecxz
push
xchg
aam
mov
or
jle
sub
mov
out
sti
test
push
mov
pusha
or
jecxz
frstor
add
ret
push
adc
fldt
insb
mov
xor
loop
cld
jnp
stc
es
or
adc
sti
mov
adc
inc
and
insl
sbb
pop
int3
stc
stos
ret
and
call
add
cmpsl
adc
fwait
mov
pusha
sub
std
pop
imul
cmpsl
pop
xor
inc
sbb
lahf
push
cmp
push
xchg
mov
sti
jae
rclb
xchg
add
in
data16
push
mov
push
xchg
mov
aaa
pop
push
scas
cld
ret
dec
add
push
ror
aaa
sbb
mov
into
pop
enter
hlt
popfw
ja
sbb
inc
cmpsb
test
adc
pop
fucomp
test
push
pop
jmp
mov
add
and
xchg
loopne
pusha
das
fs
out
xchg
lds
out
adc
add
or
mov
dec
sub
sbb
xchg
lahf
ja
int
lods
xchg
ret
xor
sub
je
mov
dec
xchg
sti
cmp
jge
xchg
or
rcrb
aad
mov
push
hlt
movsl
jl
cmpl
ss
cmc
mov
stos
inc
orb
ret
mov
mov
adc
and
cld
dec
mov
sub
in
lahf
out
jae
inc
inc
stos
cmp
xor
mov
inc
pop
and
rcr
cmp
push
bswap
lahf
in
pop
popf
scas
fsubs
out
in
jns
aam
and
js
inc
xchg
sahf
jnp
loopne
daa
and
lcall
xor
sub
adcl
ds
stc
lret
push
aad
and
adc
lock
test
mov
ja
pop
out
cmp
pusha
mov
pushf
stos
dec
out
dec
add
notl
in
inc
or
in
fwait
jb,pn
pop
jmp
cmp
or
and
dec
jp
mov
mov
mov
inc
inc
sarb
mov
inc
in
fiadds
out
jmp
mov
inc
scas
push
push
sbb
mov
inc
add
repz
nop
ftst
jmp
xlat
sti
stc
jo
adc
je
xor
jbe
ror
fists
jecxz
orb
push
xchg
insb
push
mov
fsubr
xor
lods
xor
mov
pop
mov
sti
pop
sub
aaa
cmp
std
fidivrs
stos
mov
xchg
xchg
andl
je
out
out
add
and
or
stos
clc
repz
hlt
push
test
mov
cmp
inc
and
jle
cmpb
xlat
push
int3
mov
adc
cmc
push
mov
fimuls
cld
ljmp
add
outsl
adc
fstl
or
daa
sub
mov
jo
mov
add
inc
mov
rep
insl
sub
add
out
xor
lea
loopne
adc
int3
je
shl
push
into
mov
or
inc
sub
mov
jmp
orb
sldt
mov
xor
add
insb
loopne
fsts
jmp
jae
lcall
lods
xchg
nop
pop
mov
stos
jecxz
add
bound
das
into
lea
or
popf
sbb
fs
xchg
sbb
test
push
xor
dec
add
add
cmp
insl
mov
jmp
mov
pop
fdivr
or
sub
data16
lahf
pop
push
add
sbb
in
inc
call
cmpsb
pop
xchg
mov
add
add
ret
les
cld
sub
push
jne
sub
cmpsb
or
mulb
xor
into
in
imul
fwait
inc
ja
sbbb
xchg
jae
mov
shrb
enter
jecxz
fadd
mov
mov
in
loop
in
push
scas
cmp
lods
fnstenv
sub
icebp
test
lea
sbb
imul
jmp
xor
stos
dec
orl
mov
aaa
pop
mov
xchg
and
stos
and
iret
xchg
inc
inc
scas
jg
lock
mov
fistpl
sarl
testb
add
lahf
movsb
cmp
or
mov
dec
pop
and
push
dec
xchg
fisubrs
push
push
mov
add
inc
and
cmp
push
mov
icebp
repnz
imul
arpl
es
pop
repz
roll
add
icebp
fldl
mov
push
daa
pop
rorl
jle
insl
xor
ret
scas
or
inc
inc
bnd
mov
in
and
add
jp
and
and
pop
xor
jae
pop
fwait
push
push
inc
aam
in
es
mov
jmp
test
inc
jecxz
cmp
cmp
inc
inc
jl
push
scas
fs
ja
cli
lcall
fs
xchg
pusha
aaa
xchg
das
cmp
inc
lcall
loop
mul
ret
mov
mov
cs
repnz
xchg
xchg
cmp
daa
adc
test
lret
mov
rcll
jge
lods
clc
lret
push
sub
mov
adc
push
jns
lods
dec
sbb
repnz
dec
fstl
repnz
xchg
out
push
mov
imul
inc
movsl
rol
ss
dec
ljmp
int
push
adcb
loope
or
push
sbb
dec
jnp
cmp
cmp
mov
vrsqrtps
inc
pop
mov
or
ret
scas
out
rcrb
push
fcoml
inc
or
push
orl
inc
in
xchg
inc
dec
lods
jbe
jl
lods
subb
inc
jns
int
and
lock
mov
negl
addr16
sti
xchg
pop
sahf
sti
scas
sbb
jecxz
mov
add
adc
jecxz
fldt
ret
fcoms
xor
xchg
push
std
into
add
lock
push
pop
fisubrs
jl
add
dec
int3
loope
cli
jle
and
insb
and
inc
call
and
add
sub
inc
jo
movsl
aam
mov
in
xor
ficompl
xchg
movsb
roll
lret
pushw
das
fildll
adc
push
imulb
outsl
aaa
pop
xchg
popa
push
jns
mov
push
lods
mov
xor
push
mov
test
cs
fdivr
xchg
mov
mov
aad
mov
aad
leave
dec
push
jnp
xchg
adc
pop
enter
sbb
jp
xchg
jmp
mov
add
mov
aaa
mov
scas
imul
xchg
sub
sub
adc
and
or
ja
xchg
lret
mov
rcrb
mov
jbe
push
lea
cmp
lods
test
push
dec
mov
cmc
outsb
sbb
add
pop
call
and
or
sbb
in
mov
cmpsb
inc
ja
dec
mov
pop
xchg
aam
repz
and
mov
mov
in
fwait
jl
pop
sub
xchg
stos
lock
xchg
mov
in
xor
sysexit
push
shlb
ret
je
cmp
popa
pop
or
inc
xchg
cli
jne
int3
add
adc
test
mov
cmp
sub
and
and
mov
and
fisubs
cmp
jp
imul
push
rclb
stos
or
outsb
leave
or
scas
mov
loopne
fnstcw
adc
inc
adc
aas
jmp
sbb
rorb
sarl
or
bound
jne
mov
out
mov
cmpsb
inc
pop
call
sub
mov
pop
insb
daa
sub
jecxz
adcb
jb
ret
xor
push
mov
mov
or
mov
imul
jae
sbb
ljmp
jecxz
pop
daa
mov
jle
cmc
mov
push
push
daa
enter
sub
jo
adc
icebp
std
scas
aas
insb
es
stc
sbb
movsb
sbb
addl
push
lret
dec
ficompl
mov
imulb
loopne
jns
lea
and
pop
mov
ss
xchg
ja
mov
sub
int
cmp
add
inc
imul
mov
and
dec
fs
pushf
subb
push
pop
xor
mov
pop
sub
push
ja
adc
imul
sub
sub
cmc
jb
push
and
out
push
inc
pop
dec
and
push
in
aam
movsb
js
cld
sbb
push
xor
cmp
lods
es
test
add
pop
fs
nop
and
push
jp
int3
add
jno
jns
jle
sub
negl
stos
repz
push
sbb
lahf
fstpt
adc
fisubrl
out
xchg
mov
inc
jbe
fimull
cmp
and
ss
loopne
push
popa
push
pop
adc
dec
fisubs
xchg
sbbb
push
cmp
jo
pushf
mov
jge
pop
push
cmp
dec
dec
fmul
mov
int
fadds
or
mov
cs
cld
cli
in
rclb
mov
jae
jg
dec
mov
enter
xchg
push
out
mov
in
mov
jp
cli
and
mov
cmp
aaa
xchg
pop
cltd
std
inc
xor
jmp
loope
and
pushl
in
add
mov
rcrb
cmp
xchg
enter
mov
insb
mov
add
rclb
and
xor
subl
push
xchg
mov
das
rolb
mov
jb
mov
fisubrl
repnz
repnz
lds
mov
shlb
xor
push
sub
jle
cs
repz
outsl
xchg
out
sahf
push
data16
pusha
lds
pop
iret
loop
pushf
inc
popa
push
movsb
nop
cwtl
aad
xor
dec
test
cmp
popf
jae
test
test
dec
push
mov
scas
adc
xchg
sub
popf
sti
mov
rclb
xchg
call
stos
inc
jns
sub
sbb
sbb
stc
imul
sub
div
jmp
jbe
dec
push
fiadds
sbbb
dec
xchg
fsub
int
scas
xor
and
sub
jo
jno
decl
mov
pop
sar
cs
and
cli
jle
cs
jae
inc
and
stc
cmpsb
ss
lcall
into
mov
pop
pop
cs
jb
insb
jge
cmpsb
push
xchg
inc
nop
adc
mov
push
dec
sub
adc
xchg
mov
inc
popf
xchg
sahf
fisubrs
aaa
clc
aam
pop
sbb
sbb
pusha
mov
lea
xorl
mov
pop
out
testb
test
rclb
sbb
mov
mov
loope
mov
mov
cli
bound
jge
cmp
jp
cmp
sub
popa
add
pop
pop
es
pushf
cli
push
lahf
repnz
fs
sub
mov
aam
jns
push
scas
push
rorl
cwtl
sub
xchg
sar
std
fcoms
lods
mov
pop
adc
mov
pop
repnz
cwtl
xor
fcmove
adc
push
sbb
out
sbb
lahf
dec
inc
fldl
xor
aam
jecxz
pusha
cmp
push
push
clc
mov
cmp
stc
mov
cltd
lods
xchg
js
jb
push
out
lret
sub
test
ja
aaa
jge
pop
lret
pop
rcrl
pop
jp
insb
jae
fwait
mov
jo
push
mov
push
cmc
mov
xor
add
jmp
xor
mov
mov
mov
cmp
adc
pop
add
ret
jge
loope
mov
pop
arpl
loop
adc
or
cmp
les
lcall
push
add
inc
mov
mov
add
dec
push
ror
mov
xchg
adc
inc
jne
add
data16
cwtl
lods
dec
lea
inc
movsb
outsl
arpl
inc
cltd
mov
inc
cmp
int
frstor
mov
popf
cmp
mov
pop
cli
rcl
or
not
mov
and
es
mov
or
pop
mov
jo
xchg
dec
vmread
fistps
pusha
mov
mov
xlat
and
mov
fdivrs
xchg
into
jnp
mov
jnp
sbb
pushf
out
inc
pop
stos
sar
xor
ffree
cmc
dec
xchg
loope
faddl
insb
dec
xor
mov
xor
inc
lock
dec
push
jmp
jle
cmp
inc
push
aas
addr16
lods
jo
pop
inc
xor
mov
jb
dec
leave
fwait
lds
jle
and
cs
add
xchg
pusha
pop
sbb
movsl
test
dec
imul
jp
cmp
fadd
loope
es
add
jnp
lret
mov
mov
add
cs
sub
or
into
inc
jae
push
stos
push
inc
out
test
mov
pop
pop
int
jle
mov
or
out
lods
ljmp
ja
notb
adcl
rcrb
mov
and
aaa
mov
add
jg
and
imul
xchg
jg
cmp
lahf
cld
add
dec
rcll
jae
fisubrs
push
mov
add
test
pop
pop
das
stos
addb
enter
outsb
fwait
lods
mov
movsl
xor
or
cs
mov
fnstsw
out
or
adcb
fldt
stos
add
imul
and
ds
dec
mov
sti
repnz
in
lock
lds
mov
sti
insl
lock
sahf
mov
pushl
xor
add
test
loope
jno
mov
sar
imul
adc
lods
lahf
int
repz
xchg
dec
pop
leave
movsl
pop
cmpsb
iret
adcb
push
fmuls
xor
out
cli
or
jbe
repz
xor
lods
and
stc
pop
ret
loopne
fsubs
aad
inc
stos
mov
and
mov
mov
adc
in
clc
xor
xchg
and
ds
xchg
mov
pusha
test
out
sbb
imul
or
mov
shll
mov
xchg
xor
add
cli
loope
stos
mov
xor
mov
repnz
and
inc
jo
test
in
out
call
inc
cmp
fwait
data16
xchg
sbb
adc
or
js
xchg
int3
add
fcom
rolb
dec
dec
popf
cwtl
fdivs
mov
jns
add
mov
ret
xlat
jp
sti
hlt
jl
mov
loop
shr
pop
inc
lret
scas
inc
loope
fistpl
cmp
sbb
pop
hlt
add
jnp
ja
mov
lcall
rorb
sbbl
cs
test
lahf
pop
aas
jge
push
test
mov
mov
lods
and
adc
out
xchg
mov
inc
mov
xchg
insb
cwtl
imul
xchg
out
fdivrs
and
ljmp
iret
jmp
shll
sub
pop
imull
xchg
es
jp
ss
sub
gs
jo
cmp
fistl
inc
inc
scas
imul
add
mov
out
mov
jle
adcb
sahf
clc
imul
repnz
mov
add
pop
aas
mov
loope
lret
or
cmpsl
call
sarb
enter
mov
pop
call
and
push
xor
into
lock
dec
stos
js
push
or
cmpsl
cmpsb
mov
in
pop
adc
mov
mov
xor
sbb
cmc
fsubl
outsb
addr16
mov
out
fsubs
mov
int
inc
dec
outsl
xchg
mov
clc
and
or
push
mov
mov
sar
push
sbb
mov
xchg
ljmp
xchg
imull
test
sbb
daa
push
in
sbb
mov
xchg
gs
sbb
aaa
mov
aad
jne
jl
stc
push
movsb
inc
and
mov
test
lcall
cmp
add
mov
jge
mov
inc
cmpsl
loopne
js
ficoms
hlt
push
cmpsl
shl
stos
dec
inc
jnp
in
cmpsb
in
jns
loop
in
sahf
jecxz
sbb
mov
bsf
fmul
shlb
aas
dec
inc
xchg
ret
pushf
loop
inc
decl
and
or
push
rorl
sahf
cltd
loopne
push
lret
pop
push
sbb
jmp
pop
add
pop
cmp
inc
jae
pop
jae
sub
fwait
jns
into
nop
fwait
imul
cmpsb
inc
rcr
pop
jnp
hlt
xchg
mov
push
shll
shrl
pop
xchg
clc
jl
loop
out
dec
mov
sbb
and
mov
cmp
and
dec
cmc
mov
movsb
fimull
sbb
add
mov
jecxz
sub
cmc
inc
popa
sub
fwait
pop
cmp
ror
push
adc
xchg
int3
adc
pop
inc
push
pushf
cmpsl
roll
push
jns
scas
mov
jae
and
aam
out
sbb
inc
in
mov
icebp
jns
add
push
rcl
mov
ret
lods
cld
test
and
loope
scas
stc
outsl
or
and
adc
push
cwtl
adc
dec
xchg
add
inc
xchg
push
jne
aas
jl
dec
pop
addr16
sub
jl
popf
int
pop
jo
jns
mov
mov
pop
mov
repz
leave
inc
pop
inc
pop
sbb
dec
aas
jge
and
xchg
loop
mov
loop
lea
jge
into
sub
jb
xchg
dec
imull
xchg
push
pop
push
es
scas
int
pop
xchg
and
xchg
mov
neg
cmp
lods
lds
repz
ficomps
xor
ds
xchg
testb
sbb
out
sti
sbb
je
pop
mov
movsl
dec
les
mov
lret
rclb
sub
das
jbe
xor
fldenv
jl
xchg
test
add
xor
push
push
test
xchg
sub
or
mov
jbe
jle
push
lods
mov
push
stc
jmp
out
cwtl
cmpsl
pop
cmp
sbb
mov
xchg
push
fdivrs
pop
push
out
mov
imul
in
dec
xchg
push
stos
or
ds
mov
and
push
mov
xchg
aaa
pop
repz
negl
iret
and
pop
xchg
movsl
or
loop
sbb
je
insl
jge
pop
dec
lods
sub
push
adc
xchg
cld
jb
je
stc
sbb
cltd
ljmp
dec
pop
daa
nop
xlat
outsb
dec
pop
and
cmc
jnp
mov
loope
adc
cs
stos
push
jge
xor
adc
clc
adc
daa
fwait
ret
cmc
xor
arpl
scas
cmpsl
mov
stc
or
pop
mov
aas
push
movsl
jne
jo
stos
jns
xchg
scas
ljmp
mov
mov
jmp
lods
sub
adc
fiaddl
rol
bound
addr16
sub
xchg
aad
and
icebp
imul
popf
out
neg
mov
mov
shll
cmp
jo
in
aam
ja
loop
int3
add
dec
jb
mov
out
jnp
sbb
pop
cld
pop
adcb
mov
xlat
push
flds
loopne
and
mul
push
push
push
movsl
lret
dec
iret
and
mov
sbb
xlat
or
int3
jb
xchg
nop
adc
inc
push
xorl
pop
jno
jmp
and
mov
pop
into
xchg
lods
or
movsb
push
adc
jmp
jno
add
add
je
sbb
xor
andb
inc
fdivrs
in
pop
mov
and
pop
mov
inc
add
sub
adc
int
hlt
out
std
jo
mov
stos
std
mov
loop
enter
ss
movsl
idiv
imul
jmp
xor
js
cwtl
ret
pop
test
push
mov
aaa
jge
out
iret
ds
out
filds
daa
lahf
mov
stc
xorl
movsl
roll
pop
popa
ret
adc
subl
in
pop
cld
cld
pusha
sub
ud2
ret
enter
mov
sbb
and
sti
js
into
cmp
out
cmp
movsl
pop
ret
pusha
out
outsb
add
mov
push
xor
push
data16
dec
dec
das
adc
dec
leave
xchg
subl
inc
test
aam
stos
xchg
sbb
jmp
mov
mov
dec
pop
pop
xchg
call
fxch
movsb
mov
sub
xchg
and
sbb
aaa
icebp
mov
inc
mov
or
ret
cmp
add
js
push
add
mov
mov
les
hlt
mov
push
stos
jmp
je
jle
fidivs
mov
push
adc
or
sahf
xchg
push
mov
jg
insl
sub
pop
popf
daa
movsb
or
sti
iret
rolb
or
addl
jmp
sub
jmp
stos
ret
nop
aad
je
jg
and
cltd
sti
stos
push
cmpsb
sbb
test
roll
aaa
push
popf
xchg
fistpll
movsb
jo
add
xchg
pop
std
sbb
and
xor
push
cli
mov
imul
pushf
es
adc
les
out
and
roll
lahf
arpl
push
andl
sahf
cmp
test
imul
leave
pusha
push
pop
arpl
cmpsl
dec
jmp
xlat
sub
mov
insl
push
xorb
sbb
cld
test
and
xor
xchg
jg
loope
inc
and
sub
inc
test
fadd
mov
push
adc
int
cmpsb
mov
push
in
sub
ja
stos
test
jp
iret
push
dec
and
incb
stc
pop
stos
das
add
push
int3
pop
test
jne
inc
loope
xchg
dec
pop
rolb
inc
push
les
push
sub
jns
and
sbb
pop
add
cmp
lea
subl
out
icebp
int3
mov
pop
mov
jns
xor
inc
lahf
cmp
pop
jnp
mov
loopne
jmp
repz
dec
dec
in
jno
push
add
popf
lret
sub
pop
pop
data16
mov
lods
lods
xchg
sub
cmp
and
xor
xchg
fwait
sbb
js
xchg
inc
cs
mov
hlt
cld
dec
adc
xchg
cmp
cmc
adc
xchg
leave
mov
xor
ret
addr16
jle
xchg
iret
jo
mov
lds
adc
andl
push
scas
jg
dec
xchg
dec
jbe
push
imul
xor
fcompl
outsb
jp
inc
add
imul
leave
or
mov
dec
cmp
outsl
enter
xor
mov
add
dec
mov
sahf
xchg
je
dec
lods
jno
xchg
push
xchg
mov
movlps
mov
ret
dec
ljmp
loop
imul
or
stc
pop
lea
addb
cmpsl
mov
dec
cmp
mov
sbb
cltd
sub
xchg
pop
mulb
xor
pop
jae
clc
lock
fsubr
jae
push
dec
pop
mov
cmp
in
movb
mov
dec
lock
mov
pusha
loop
jle
inc
rcrl
mov
aam
or
int
lock
add
sbb
out
popf
and
fdivp
stos
sub
or
iret
stos
loope
aam
xchg
fcompl
out
rcll
test
fsubrs
arpl
rorb
inc
xor
in
mov
jbe
into
mov
mov
arpl
test
fdivrs
mov
sub
inc
jp
stos
out
outsl
pop
nop
leave
cmp
push
loope
or
arpl
ret
les
jne
or
sub
jne
xor
mov
shlb
loop
or
std
in
adc
add
dec
in
rorb
aam
movsl
int3
aad
in
cwtl
push
lods
test
mov
sub
pusha
shlb
adc
call
lea
insb
push
popf
push
test
sbb
mov
dec
pop
fs
pop
dec
fisubrs
jae
outsb
and
sahf
xchg
pop
rorb
adc
and
movsb
stos
cmp
xchg
cmpsl
loope
adc
js
mov
add
daa
push
inc
pop
xor
es
xorl
sub
int3
daa
push
jmp
sti
lock
push
jg
push
mov
push
ljmp
js
cli
lods
daa
popa
xchg
call
adc
jae
leave
test
in
cmp
sahf
xchg
arpl
add
push
sar
stc
cmp
imul
push
xor
cmp
aad
push
jecxz
daa
aas
stos
mov
shll
in
sub
and
ficoms
inc
int
jl
cmp
and
fisubs
insl
and
ficompl
popf
retw
xor
sbb
loope
inc
xchg
insl
sub
cmp
lret
pop
and
xchg
mov
cmp
test
shll
lret
inc
loopne
sbb
aam
cmp
or
pop
cmp
cmc
cmp
insb
aad
xchg
sub
cwtl
jmp
lahf
cwtl
shlb
jecxz
scas
fstl
insb
sbb
push
xor
cli
fcom
push
jg
xchg
orl
repz
push
lret
cli
xchg
pop
add
pop
cltd
dec
push
rcl
cmp
enter
push
jnp
int
aaa
jecxz
cld
mov
mov
jns
sbb
add
sub
cltd
and
imul
fdivl
fsubs
sti
and
gs
shlb
push
xchg
in
jae
mov
push
test
lcall
or
sti
inc
or
cmp
and
xchg
stos
daa
jmp
insb
push
clc
and
xchg
mov
popf
adc
mov
ss
cmp
ss
mov
insl
repnz
fisubrl
inc
hlt
leave
xor
jecxz
aad
and
sub
out
aas
mov
mov
mov
repz
and
aaa
stos
jcxz
inc
adc
inc
inc
lds
inc
adc
pop
data16
sbb
mov
push
test
or
popf
iret
mov
pop
jle
out
test
xlat
movsb
fisttps
sbb
sub
cmp
bound
mov
movsb
inc
cwtl
in
or
in
je
aam
push
adc
in
daa
scas
outsl
jecxz
orl
fimull
addr16
xor
test
inc
sbb
push
les
sbb
das
xor
jp
push
xor
cltd
jl
xor
aas
cmp
pushf
stos
mov
xchg
push
fucomip
dec
dec
cmp
push
lret
ss
aad
outsb
push
add
in
and
and
xadd
test
jl
rcr
sub
xor
or
ss
call
xor
xchg
outsb
cmp
stc
mov
ficompl
mov
sbb
icebp
lods
cmp
xchg
inc
fxch
dec
dec
mov
scas
pusha
xor
scas
sub
ja
shll
xlat
jb
scas
popf
push
fbld
xor
test
mov
cmp
cld
cmpsl
mov
cmc
jae
push
hlt
sub
sbb
test
xor
pop
xor
pop
jo
bound
stos
imul
loop
cmp
bound
push
call
mov
pop
xchg
imul
shll
clc
xor
jbe
sub
loop
adc
sbbb
jmp
sti
ret
leave
pop
pop
pop
mov
es
mov
or
mov
cs
test
rorb
jnp
mov
mov
fstpt
pop
lret
inc
jp
in
sti
mov
inc
mov
mov
sbb
jno
or
out
adc
xchg
out
rcll
sahf
ret
dec
std
sbb
adc
xchg
push
mov
sub
test
inc
in
cltd
mov
mov
push
jp
pop
ljmp
gs
daa
mov
or
test
cmp
mov
add
pop
lret
popa
push
push
cmp
dec
mov
cltd
and
adc
jns
xchg
xor
int
es
inc
mov
pop
cmpl
and
pop
push
cmp
scas
pop
sub
pop
mov
testb
out
adc
sbbl
inc
stos
rcr
ds
xor
mov
add
repnz
ficoms
cmc
xchg
mov
flds
pop
and
sbb
jp
lret
dec
mov
in
ds
and
leave
divl
cltd
add
fldcw
adc
std
push
push
sbb
shll
xchg
jmp
aad
sub
lods
orl
bound
clc
jno
xchg
add
jbe
pop
movsl
jl
mov
pop
pushf
out
sub
mov
lock
sbb
aas
shlb
test
and
das
cmp
popf
imul
sub
add
xor
pushf
mov
inc
out
add
mov
add
xchg
mov
out
pop
addr16
movsl
out
xchg
mov
lret
fs
in
mov
movsl
push
sbb
push
inc
sub
cmpsl
filds
lret
repnz
into
mov
shlb
mov
repz
pusha
lea
dec
sbb
sub
adc
dec
imul
gs
dec
mov
mov
mov
loop
popa
cwtl
je
int3
lods
xor
fwait
mov
xchg
mov
rorl
pop
jb
xchg
icebp
sbb
je
sub
ja
mov
aam
ret
xchg
jmp
popa
sub
ja
jmp
cmp
sbb
leave
dec
dec
dec
pushf
pushf
shlb
sub
fwait
mov
in
pop
clc
push
add
jp
fidivl
mov
das
inc
pop
or
les
cmp
mov
inc
fwait
daa
mov
aad
sahf
mov
hlt
negb
dec
lds
les
fldcw
or
imul
gs
push
icebp
pop
inc
arpl
mov
add
mov
xchg
or
fbld
ja
inc
insl
daa
sbb
cmp
push
sbb
repz
xor
pop
mov
rcrl
divb
lods
xchg
fwait
inc
mov
push
dec
int
mov
out
sub
lds
fmuls
add
dec
in
out
mov
jmp
mov
mov
inc
hlt
fcoms
push
sbb
in
or
cmp
hlt
cmpsb
stos
cmp
mov
js
cli
outsb
aam
sub
xor
xchg
fcmovu
dec
mov
push
xor
into
pop
sbb
in
push
fbld
push
cmp
pop
fcmovu
test
push
or
dec
mov
shr
in
test
mov
js
jns
stc
push
cs
sbb
pop
inc
mov
aam
mov
pop
inc
aas
pop
rol
test
pop
push
flds
mov
adc
jmp
out
lea
aam
mov
in
dec
jo
in
enter
inc
push
add
adcl
test
fmull
stos
jbe
and
xchg
fmuls
mov
movsl
cli
shlb
lods
imul
test
test
mov
rcr
jge
ror
or
xor
sub
jg
inc
js
inc
xlat
or
mov
les
imul
sbbl
sbb
mov
movsl
cmpsl
jle
mov
test
inc
in
inc
inc
pop
bound
leave
mov
and
out
sub
mov
leave
ret
mov
std
cmc
test
adc
pusha
pop
jmp
cwtl
cmp
push
fistl
clc
xlat
divl
insl
mov
mov
inc
leave
add
add
repz
cli
int3
jl
adcb
and
jo
pop
xor
pop
push
pushf
and
mov
cmpl
lret
inc
sbb
pop
xchg
dec
xor
outsl
adc
adc
mov
jmp
jnp
out
inc
ljmp
mov
jp
mov
shl
lret
fsts
pop
sbb
aas
cwtl
inc
cli
sbb
jp
inc
frstor
call
subl
sbb
xor
and
add
xchg
xchg
and
repz
ss
mov
or
scas
mov
je
outsl
sar
ljmp
and
out
lret
call
adc
adc
xchg
test
mov
xchg
int3
data16
and
test
sahf
adc
dec
pop
lods
adc
pop
pop
jecxz
push
pusha
aaa
clc
add
test
or
inc
sub
inc
dec
lock
xchg
mov
push
ss
adc
adc
adc
sub
mov
inc
mov
jmp
sahf
out
out
divl
jecxz
cld
xchg
stos
popa
adc
dec
lret
cli
js
mov
mov
cld
test
popa
sbb
mov
or
js
fistpll
mov
jae
xchg
push
loopne
arpl
add
insl
shrb
mov
les
cmpb
inc
jle
mov
xchg
or
cmp
pop
popf
or
lahf
stc
jle
mov
loopne
xor
lcall
add
add
cmp
cmpsl
xor
jae
cmc
int
push
jge
orl
dec
inc
outsl
mov
mov
push
stc
clc
mov
mov
add
sbb
push
cmp
rolb
in
jp
mov
push
adc
inc
xchg
test
sbb
adc
push
sub
cmpl
xor
add
and
ret
dec
loopne
mov
mov
lods
cwtl
add
pop
or
dec
scas
pop
pop
loopne
cli
mov
jge
movsl
push
sub
call
not
int
call
movb
loopne
mov
test
jl
ss
bound
push
xchg
stos
adc
mov
bound
xor
aam
xchg
add
mov
adc
add
xchg
data16
div
xchg
xor
out
stc
mov
inc
loopne
xlat
hlt
jp
push
pop
sbbl
in
fcmovne
adc
aad
hlt
push
outsl
add
or
loopne
push
xor
sbb
mov
push
or
iret
or
and
inc
mov
mov
lods
pushf
sbb
push
loope
addr16
es
mov
mov
outsl
fimull
xchg
repz
dec
dec
lret
inc
sub
cmpl
push
call
push
test
and
into
mov
pop
sbb
lock
mov
lcall
out
xchg
outsl
into
sub
mov
xchg
fistpll
push
mov
xchg
je
mov
mov
pusha
adc
pop
mov
movsl
into
dec
int3
pop
sub
mov
or
jne
scas
fwait
xchg
aam
mov
ret
lret
stos
jl
cmp
js
jmp
mov
mov
sbb
imul
mov
push
in
sub
pop
xchg
cmp
lods
mov
movsl
mov
cmc
lcall
push
jbe
push
pop
ror
jecxz
mov
xor
pop
add
arpl
aas
push
xor
inc
psubw
xchg
ljmp
clc
cld
int3
jecxz
jns
push
add
subl
add
movsb
xchg
negb
lock
xchg
fcomps
jne
stc
lods
int
xor
lods
arpl
mov
cltd
pop
cs
js
inc
repz
mov
jne
jl
ja
adc
test
sbb
mov
in
shlb
xchg
jl
push
lret
push
loopne
ret
pop
jle
xchg
loopne
jg
mov
in
std
in
or
or
aaa
jg
or
jo
jmp
xchg
push
lcall
push
je
loop
adc
jle
mov
and
xor
notl
add
out
push
leave
xlat
or
mov
subb
in
insl
mov
aaa
or
loopne
out
adc
into
ljmp
mov
loopne
adc
fistpl
in
pop
or
xor
jb
add
pop
ljmp
pop
movsl
xchg
and
movsl
arpl
dec
fdiv
sub
dec
clc
or
andb
ret
mov
scas
jp
bound
sbb
bnd
and
sub
pop
push
fsub
add
mov
decb
add
sbb
in
in
popf
xchg
add
js
loope
cmpsl
into
out
mov
mov
aaa
mov
pop
cmp
xchg
andl
xor
cld
jmp
cmpsl
out
pop
lds
lahf
les
mov
add
fstps
cs
outsb
mov
ljmp
neg
push
jmp
cmp
mov
xor
inc
add
pop
insb
sub
addr16
sti
nop
outsb
js
js
sub
sbb
xchg
mov
popa
or
stc
sbb
pop
rorb
and
in
inc
push
aas
and
jbe
and
je
cli
adc
test
and
out
out
dec
push
lcall
jns
sub
jno
call
xchg
xchg
dec
nop
imul
in
jnp
mov
enter
inc
jge
mov
lret
cs
roll
sub
scas
fwait
repz
fmul
cmp
clc
in
mov
pop
in
jp
pop
iret
push
or
rorb
push
shrl
in
test
and
iret
mov
aaa
mov
adc
add
sahf
orb
loopne
dec
lahf
sbb
enter
in
inc
out
sbb
push
and
fisubrs
sub
iret
xchg
pop
sub
xchg
fidivrs
loope
sar
dec
pop
cmpsl
adc
cmpsb
daa
sbb
jb
and
cmc
hlt
jge
in
ljmp
push
or
dec
shll
ja
ret
pop
sbb
sub
data16
outsl
jmp
mov
aaa
mov
adcb
pop
loope
or
out
in
mov
int3
mov
push
xchg
idiv
ja
fwait
jp
cld
pop
pop
test
fs
jl
sub
mov
xchg
popf
push
mov
dec
pop
fs
loopne
push
repz
sbb
jecxz
icebp
xchg
insl
pushf
addb
lea
mov
jmp
cmp
push
xchg
add
xor
pop
cwtl
lock
rclb
cs
or
das
inc
dec
andl
ljmp
cmc
outsb
icebp
shrl
mov
xchg
jo
movsl
sbb
int
test
adcl
push
add
add
mov
adc
jg
insb
or
add
scas
xlat
dec
jecxz
in
dec
cmp
ret
sahf
jno
lds
jno
adc
jns
sub
test
jle
inc
dec
sbb
andl
mulb
jae
fucomi
cmp
insl
mov
aaa
mov
std
hlt
jb
adc
pusha
add
xor
out
or
bound
sarb
cli
mov
jns
nop
ljmp
mov
dec
xor
dec
and
jmp
fistl
loop
push
loop
arpl
jo
data16
fwait
push
sbb
repz
cmpsl
push
mov
mov
sub
dec
sahf
nop
or
or
mov
hlt
cmp
loopne
jae
xor
aam
cmpsb
mov
sub
test
stos
daa
mov
repz
inc
and
nop
lahf
push
scas
loopne
sti
mov
xor
push
mov
enter
sbb
jmp
dec
sbb
dec
jecxz
lds
or
dec
jo
xchg
daa
mov
lea
xor
adc
pusha
movb
jle
sub
nop
lds
leave
sbb
xor
mov
mov
sub
xchg
mov
out
mov
jae
dec
pop
imul
int3
pop
push
xchg
and
aas
jl
xchg
cmp
mov
lds
push
sub
shll
scas
sbb
push
lret
inc
mov
and
sub
hlt
sub
das
or
inc
add
rcr
jns
in
jl
testl
add
movsb
mov
jl
addr16
xlat
dec
in
inc
jge
push
insb
fs
jno
lds
pop
outsb
inc
sbb
push
cld
inc
insl
enter
jns
test
xor
or
xorl
mov
push
stos
sub
cmp
int3
clc
mov
and
inc
xor
outsl
dec
ljmp
pop
pop
fnstenv
adcl
pop
ret
stos
inc
mov
jmp
sbb
outsb
or
lea
cli
pop
in
imul
adc
push
jp
std
jg
add
fsubs
dec
mov
in
mov
or
roll
imul
lock
in
rorb
xor
ret
add
hlt
cmpsl
ds
inc
mov
jl
pop
ret
push
and
sbb
mov
xchg
icebp
mov
call
xor
cs
fcompl
sub
or
daa
sub
rcr
aad
popa
cld
sbb
in
xchg
shrl
pop
jecxz
dec
sahf
dec
xor
leave
inc
aas
add
xlat
mov
test
mov
popf
mov
adc
adc
sbb
cwtl
aaa
inc
es
mov
popf
popf
add
pop
incl
popf
jg
or
mov
hlt
ret
jb
iret
scas
or
or
push
cwtl
outsl
xchg
push
rcl
fnstsw
xor
test
pusha
in
test
mov
xchg
push
popa
xchg
loope
lods
pop
cmp
insb
ret
in
ljmp
dec
leave
push
out
pop
dec
inc
cmpsb
aam
test
inc
pop
sahf
adc
and
xchg
or
clc
dec
adc
pextrw
mov
mov
mov
in
int
scas
ret
shr
adc
ja
rcrl
xlat
test
scas
jae
repz
data16
mov
and
cmp
stc
test
push
lret
jnp
aas
shlb
out
pop
lret
insl
popa
scas
jbe
pop
scas
les
lret
jne
adc
cmpsl
mov
repz
mov
gs
ja
push
pushf
pop
stc
push
or
outsb
jbe
lods
int3
aas
dec
mov
aam
mov
pop
add
bound
lea
out
rcr
push
shlb
dec
loop
bnd
mov
movsl
les
and
sbb
sbb
sub
cmpb
nop
and
mov
scas
jb
into
repz
mov
test
push
xchg
sub
sub
pop
in
pop
cmpsl
sbb
and
jae
xchg
sub
mov
pop
insb
loopne
mov
push
pop
andb
ret
lcall
dec
out
div
sahf
lret
frstor
dec
adc
mov
je
and
sahf
into
mov
and
ss
dec
out
push
es
fdivr
loope
and
scas
popf
jmp
xchg
mov
mov
inc
jecxz
push
dec
jmp
adc
sbb
ja
ss
inc
pop
mov
sbb
xchg
aad
adc
mov
aas
dec
icebp
and
jo
push
rorl
lock
ds
jb
add
xchg
pop
aas
sub
out
xor
pushf
test
jmp
lret
lods
ds
shr
jmp
test
xor
cmp
in
sbb
mov
sub
int
bound
pop
sub
dec
clc
popa
ss
cmp
jo
mov
inc
mov
nop
jg
mov
cs
mov
inc
ficompl
mov
pop
movsl
or
repnz
bound
push
lea
xchg
xor
sub
jge
es
cmp
and
test
inc
in
mull
push
push
push
je
pop
mov
mov
aam
lcall
add
in
and
loope,pn
ret
lods
ja
cltd
add
cmp
rorl
add
lahf
xchg
mulb
out
andb
cwtl
loopne
push
jne
xchg
fistps
outsb
sbb
imul
std
cmc
int
lock
push
and
inc
aam
fildl
je
push
xchg
xorb
in
test
inc
jnp
dec
add
cs
sub
or
sbb
pop
jnp
xchg
pop
sub
jno
sahf
pop
mov
push
insl
add
sbb
dec
xorb
mov
inc
xchg
inc
addr16
popf
fs
sbb
jge
call
rolb
imul
sub
and
xchg
mov
or
mov
jb
mov
arpl
outsb
pop
andl
push
sub
add
fcmovbe
outsb
rolb
fcmovb
adc
inc
jae
jle
jg
call
and
inc
jb
mov
fwait
mov
fcomi
adc
stos
pop
xlat
inc
lret
into
cmc
cmp
cmpsb
js
or
xor
test
dec
or
mov
dec
mov
inc
xchg
mov
xchg
jecxz
inc
mov
and
jnp
stc
iret
xchg
lahf
or
or
loope
add
xorb
mov
add
sti
xchg
mov
mov
fnstcw
stc
mov
add
addr16
leave
mull
add
add
divl
mov
and
or
out
sub
adc
xchg
sbb
ret
lahf
stos
int
push
sbb
insb
fs
mov
cmpsl
lods
inc
mov
aas
sbb
mov
fsubs
mov
fsubrl
mov
aas
outsl
loope
push
push
dec
mov
lcall
inc
test
bound
aam
mov
shlb
sbb
repnz
cwtl
sar
js
push
push
jbe
jge
mov
test
arpl
jle
lahf
roll
mov
xor
dec
sahf
cmpsl
add
add
fidivrs
iret
std
repz
dec
mov
pop
lret
pop
insb
arpl
jns
inc
mov
mov
int
fistpl
outsl
test
or
stc
cmp
xlat
stc
les
fcmovu
lds
sahf
mov
fprem1
bound
jle
test
dec
outsl
push
loopne
xor
into
shlb
push
mov
or
or
and
push
pushf
lods
loope
cmp
dec
fldenv
aas
sbb
shll
outsl
frstor
add
mov
arpl
es
das
cmp
jp
and
mov
sub
pop
cmp
repz
push
mov
mov
out
dec
sbb
sbb
adc
addr16
cmp
xchg
icebp
push
es
mov
mov
movl
sti
les
or
gs
cwtl
in
adc
into
sub
xor
push
neg
dec
adc
scas
mov
cli
sub
rcrl
adc
adc
lea
fldcw
icebp
js
inc
sbb
jae
mov
jl
sub
mov
and
xchg
ds
inc
jae
cli
jns
xchg
mov
stos
xor
aam
cmovg
loopne
pop
dec
ror
xchg
jmp
std
ja
into
rcrb
push
lds
cmc
push
dec
movb
and
xor
sub
hlt
pop
lea
loopne
xchg
xchg
inc
pop
cmp
inc
mov
push
inc
sub
daa
in
xchg
xchg
cmpsl
cs
cld
mov
and
lds
clc
cmp
cmp
push
jbe
and
in
sbb
aas
mov
mov
sbb
mov
out
aaa
mov
push
mov
inc
jb
addr16
lds
sub
adc
mov
mov
test
lea
jl
mov
pop
sti
jno
jecxz
jno
mov
sbb
mov
into
mov
aam
cmpsl
push
lods
adc
ret
dec
mov
fs
or
andb
aad
and
jae
loop
cmp
lahf
add
repz
mov
iret
push
jp
fimull
lahf
arpl
fld
ss
mov
fimull
push
cld
dec
lds
shrb
in
jb
aas
pop
fldcw
jno
push
mov
mov
sbb
push
out
xchg
dec
cmp
sti
sbb
sbb
push
inc
dec
dec
pusha
dec
mov
lahf
insb
aas
jns
pushf
add
adc
jge
jns
ljmp
cmc
nop
leave
add
jg
enter
push
fstpt
leave
cmp
sub
mov
mov
pushf
jle
xor
xchg
call
cmp
cltd
dec
jae
std
push
cmp
loopne
cmc
adc
enter
cmc
and
sub
rorl
mov
mov
mov
sub
loopne
popf
sub
mov
sub
pop
jge
xlat
rclb
dec
shrl
repnz
jns
pusha
loopne
imul
xchg
mov
mov
movsl
dec
call
fstl
mov
or
mov
mov
cs
or
push
mov
mov
dec
icebp
xchg
mov
push
ljmp
push
push
loopne
jl,pn
lahf
or
cmp
arpl
mov
and
test
addr16
or
cmp
xchg
test
je
test
test
pusha
stos
mov
fcmove
je
aad
hlt
push
imul
les
mov
aas
sub
dec
inc
inc
inc
adc
nop
outsb
pop
inc
test
das
dec
pop
insb
push
sbbb
jb
imul
dec
cmpsb
pop
and
jle
adc
ret
roll
jb
loope
mov
loopne
fs
cmp
les
cmc
pop
dec
icebp
and
fistpl
jle
test
addr16
sahf
cmp
pop
jb
and
sub
in
mov
or
lea
push
dec
jg
and
fstp
fidivrl
ret
out
mov
test
fs
mov
cmp
mov
aad
sbb
mov
mov
aam
mov
js
das
ret
add
iret
xor
pop
ss
mov
mov
ljmp
daa
xchg
dec
dec
inc
push
xchg
sarl
sub
test
icebp
fildl
pop
js
jge
aam
adc
les
jae
fildl
lea
loopne
shll
mov
add
push
jmp
icebp
pop
das
mov
sahf
out
push
push
and
movsl
insb
push
rcll
pop
lahf
aaa
sbb
loop
stc
out
push
push
mov
sbb
jnp
dec
add
push
loopne
fisttps
es
inc
ficompl
pop
xchg
clc
dec
adc
iret
dec
push
imul
jp
fadd
mov
mov
out
jmp
mov
xor
in
add
pop
push
cmc
pop
adc
sub
lret
cwtl
push
mov
cmpsb
cmp
xor
adcl
mov
mov
ss
jae
icebp
insl
out
pusha
sub
jp
adc
inc
mov
aaa
push
push
loopne
dec
mov
or
cmpsl
jo
das
call
push
cmp
lock
das
aam
in
pushw
loope
ja
popa
dec
insb
into
mov
les
ror
jmp
cs
pop
sahf
mov
mov
mov
push
add
mov
shr
cmp
movsb
inc
adc
into
xor
addr16
pop
sahf
ss
pop
jb
in
in
and
inc
dec
pop
out
and
mov
cmc
add
cli
xchg
pop
test
lea
rclb
sarl
mov
in
pop
and
popf
xchg
add
add
xchg
add
daa
mov
dec
notb
stos
pop
cmp
fstl
aas
mov
mov
fsubrl
pop
lea
and
out
and
mov
daa
add
scas
sbb
push
push
xchg
js
xchg
pushf
ret
in
subb
je
mov
and
cmp
cwtl
es
jecxz
mov
sarb
lock
add
outsb
xchg
pushf
es
ss
xor
fadds
call
ds
jo
dec
add
sbb
loope
shlb
ret
xor
fwait
inc
stc
sbb
cmp
add
pop
fimull
cmp
aam
in
mul
mov
psrad
sahf
pmulhuw
sbb
inc
mov
sahf
cld
bound
pop
shrb
or
pop
and
or
add
popa
les
test
hlt
adc
ret
mov
jge
push
sbb
mov
push
or
dec
xor
mov
test
aad
jnp
ret
pop
dec
ja
pushf
int3
outsb
cmp
loopne
imul
les
jecxz
addl
cmp
cmp
ror
insl
jns
cmp
loope
outsb
inc
xor
and
and
aam
jno
daa
dec
mov
fnstsw
fmull
or
pop
mov
test
inc
push
pop
xchg
mov
sbb
pop
jge
in
leave
fldcw
jle
xor
mov
pop
push
loop
mov
stos
or
mov
adc
inc
xchg
jmp
ja
pusha
ds
arpl
adc
mov
pop
cmp
icebp
xor
nop
mov
pop
in
xor
push
test
cli
mov
hlt
add
adc
je
ret
mov
pop
and
pop
pop
cmp
int3
test
pushl
jl
out
sub
jbe
jl
dec
inc
leave
push
jmp
jne
stos
insb
mov
inc
dec
adc
lods
jnp
push
aas
sbb
inc
mov
lret
mov
push
cmp
mov
pop
jge
or
push
adc
movsb
arpl
stc
pop
jecxz
add
fistpll
movsl
sub
jle
inc
mov
xchg
fnstcw
and
jno
cs
mov
adc
sub
xor
pop
ljmp
pop
lods
inc
inc
scas
enter
in
jo
or
clc
mov
xor
stos
popa
mov
ljmp
daa
xchg
icebp
es
pop
in
sub
xor
jl
jmp
mov
add
mul
cmp
jae
pop
decl
mov
mov
push
and
jne
sahf
cmc
add
inc
add
mov
cs
scas
cmp
pop
fsubl
fimuls
adc
mov
inc
popa
jne
xlat
xchg
inc
xchg
cmp
notl
jae
jb
mov
jne
loope
les
pop
jo
adc
mov
aam
stc
adc
xor
pusha
mov
jl
pop
jg
inc
sbb
sbb
scas
pop
mov
cli
test
xchg
addr16
jmp
sub
push
lods
dec
in
mov
pop
in
lcall
imul
push
inc
sub
ret
fistpl
imul
ret
js
add
out
std
mov
neg
add
nop
dec
mov
sub
aad
xchg
cmpsl
cwtl
repnz
and
daa
mov
shrb
fisttpl
fs
mov
and
xor
cld
aad
jo
jecxz
lods
dec
cmp
pop
add
cs
pop
sbb
cmp
mov
mov
cmp
mov
xor
aaa
mov
xorb
mov
add
pusha
inc
outsl
push
movsl
movsl
popa
pop
xor
inc
ror
push
test
movsl
and
fildl
push
test
xchg
ja
xchg
sbb
sbb
outsl
jecxz
push
inc
subb
sarl
imul
hlt
dec
push
stos
push
lcall
std
add
outsl
mov
popa
push
popa
popf
push
test
adc
add
pop
jae
and
out
dec
push
pop
sti
fmull
xor
jne
push
adc
dec
pop
inc
ud1
daa
cmp
jmp
or
addr16
inc
mov
sbb
out
add
scas
es
jne
cmp
fmul
ret
shrb
divb
movsl
xor
stc
stos
and
pop
repnz
push
jmp
or
mov
fiaddl
jg
sar
aaa
adc
test
stos
sbb
dec
and
adc
daa
out
shrb
into
in
iret
insl
gs
sbb
and
mov
push
jge
notb
pop
movsb
aam
or
jmp
sub
in
movsl
sbb
movsl
jmp
fistl
pop
leavew
orb
cltd
jmp
imul
cs
dec
lock
cwtl
cli
push
inc
pop
std
lds
xchg
rolb
mov
ret
fdiv
imull
push
sbb
pop
push
or
mov
shlb
xchg
cld
push
fsubrp
leave
sahf
mov
loop
loope
scas
es
push
lret
lds
fdivl
sub
xor
add
add
test
adc
jp
mov
and
inc
in
and
push
rclb
and
repz
out
sub
mov
fistl
adc
imul
cmp
mov
and
jns
popf
pop
pushf
outsl
dec
shr
pop
xor
stos
xor
idivb
sahf
adc
sub
and
jns
pop
test
and
lds
int
push
cmp
andb
mov
shl
jb
lods
ljmp
cs
into
lret
inc
mov
int
cmp
std
insl
inc
xor
popa
sbbb
mov
les
in
nop
cmp
sbb
or
adc
jns
popa
jl
sub
push
jmp
add
fisttps
out
and
push
hlt
or
xchg
clc
aam
adc
clc
dec
pop
push
and
int3
mov
sti
stc
sub
jge
cmp
jle
jecxz
xlat
and
mov
insl
aam
adc
inc
sbb
nop
pop
das
cld
jbe
sub
dec
aas
sub
pop
fldt
jnp
push
testl
mov
mov
imul
cmpsb
data16
cwtl
mov
push
mov
testb
test
pop
xchg
sar
lahf
and
mov
and
ss
xor
mov
in
mov
fucomip
jae
or
stos
and
negb
aaa
inc
xchg
repz
inc
jmp
call
mov
mov
scas
pop
dec
add
imul
or
xor
cmp
mov
push
cmpl
cmp
repnz
icebp
pop
xchg
bound
jbe
pop
jae
xchg
pusha
jmp
lods
cmp
cmc
dec
call
adc
ret
fninit
imul
pop
inc
test
ja
aad
pop
jmp
repz
lea
pop
loope
rcll
cs
dec
mov
das
jne
cmp
mov
stos
lret
add
inc
and
add
sub
fiadds
push
cs
pop
fisubrl
hlt
mov
adc
mov
dec
cld
jnp
inc
hlt
mov
loop
bound
fucomip
sti
inc
insl
sarl
pop
addr16
pop
mov
scas
push
xchg
xor
jp
mov
inc
pop
lret
mov
enter
popa
sub
cmp
push
mov
inc
out
jecxz
mov
mov
sub
test
or
outsb
dec
xor
decb
mov
aam
shlb
shl
insl
adc
insl
std
lahf
dec
push
pop
daa
push
inc
lock
or
cmp
mov
sub
aaa
or
xor
push
push
pop
fldcw
aam
dec
mov
das
clc
mov
icebp
sarl
dec
in
mov
scas
and
idivl
in
fsts
ret
mov
mov
fiaddl
jl
imul
and
push
mov
dec
inc
pushf
xchg
decl
mov
xor
jb
scas
cli
push
xchg
sub
xor
int3
add
leave
test
fs
lahf
sahf
mov
call
nop
xchg
cmpl
fs
stos
ss
mov
dec
dec
into
mov
pop
loopne
pop
mov
xchg
nop
xchg
loopne
mov
or
aas
or
or
out
pusha
push
sub
sbbb
pop
movsb
mov
cmpsb
xchg
movb
mov
mov
lret
dec
xor
shlb
imul
out
cmp
mov
cmp
or
pop
outsb
mov
and
or
push
movsb
lods
jno
mov
cs
adc
adc
pop
jne
and
add
sbb
push
andl
jge
add
jge
push
sub
dec
icebp
and
aas
push
xor
and
sub
cmc
out
sbb
jl
adc
mov
test
mov
div
jb
stos
stos
pop
dec
aas
iret
pop
cmc
sub
cmp
bound
pushf
adc
movsl
sub
cmc
mov
xor
rol
inc
mov
mov
mov
add
sar
jp
dec
or
sub
xchg
mov
int
out
adc
loop
in
cmp
imul
or
enter
and
lods
pop
jle
cmpsb
cs
sub
push
shlb
iret
lret
mov
btr
xchg
xchg
shl
fdivl
jge
sub
jl
jo
jb
push
mov
xorl
mov
rolb
testb
aas
mov
popa
push
sub
stos
jnp
popf
jns
sarb
sub
out
jns
shrb
push
mov
addb
mov
dec
xchg
rclb
stos
dec
inc
sahf
lods
pop
js
ret
sub
jno
mov
call
xor
mov
pop
jbe
adc
mov
xor
cmp
fcompl
lahf
test
mov
addr16
scas
dec
cmc
movsl
dec
icebp
push
lret
jle
xchg
fwait
jno
in
mov
sbb
mov
mov
in
jl
jb
sar
nop
les
xlat
divb
xchg
push
sub
lods
inc
les
xor
xor
sub
and
les
cltd
dec
out
orb
pop
mov
push
add
leave
rol
ja
pushf
fbstp
loopne
mov
aaa
dec
jge
inc
mov
mov
dec
pusha
lret
pop
mov
jp
mov
adc
or
enter
test
mov
sub
dec
mov
jg
mov
fnsetpm(287
mov
pop
sahf
push
jo
push
fwait
pop
popf
das
add
sbb
add
movsb
and
movb
imul
sarl
iret
mov
clc
pop
jg
or
sbb
fmuls
and
jecxz
lods
push
repnz
or
movsb
filds
dec
insl
lahf
loop
stos
notb
jp
mov
cmp
stc
dec
arpl
fldlg2
shl
cmpb
pop
push
jne
fldcw
jae
mov
xchg
sahf
cmp
iret
mov
mov
push
pop
and
daa
imul
or
fcmovne
movsb
dec
inc
out
ficoml
data16
pop
sbb
iret
pop
fdivr
inc
cmp
int
fsts
mov
ret
ss
popf
out
jmp
and
punpcklwd
outsl
les
aaa
out
pop
jns
sbb
ffree
movsl
mov
cmp
inc
inc
mov
mov
push
sub
inc
es
xor
mov
jne
inc
or
pop
xchg
push
scas
xchg
mov
in
cmp
mov
pop
mov
lahf
mov
xor
dec
iret
leave
cmpsl
ja
add
fiadds
mov
gs
push
add
shlb
adcb
push
gs
in
lods
jg
mov
cmpsb
xor
cmp
es
test
mov
xor
dec
test
repnz
sbb
call
mov
ss
xor
repnz
cmp
rcl
jnp
nop
lret
fimuls
and
repnz
inc
cltd
test
in
insl
mov
xchg
jl
jns
or
fnstsw
ja
add
out
xor
mov
adc
push
adc
and
inc
inc
stos
and
rcrb
jb
je
daa
add
or
das
mov
std
out
pusha
mov
insb
jmp
stc
js
outsb
mov
or
imul
mov
test
int3
or
xor
outsl
pop
pop
les
jne
gs
push
pop
mov
mov
fsubrs
and
sahf
or
and
test
mov
out
aas
scas
sub
wrmsr
and
jno
aaa
jecxz
aad
jo
push
xchg
out
lret
inc
mov
xor
push
lahf
jo
xchg
lods
inc
mov
dec
sbbb
adc
rorl
push
xchg
jle
push
add
fs
pop
cmp
push
pushf
jne
xor
sub
cmp
imul
scas
sbb
cmc
sbb
add
imul
or
cmp
sub
pop
mov
mov
fldenv
js
fadds
xchg
jae
or
cld
aam
incl
adc
push
daa
rorb
jb
pop
je
cli
mov
mov
cmp
test
push
clc
push
icebp
add
pop
rol
leave
into
data16
xchg
sarb
sti
and
inc
jns
roll
add
dec
push
mov
popf
push
dec
dec
and
out
sbb
sub
xor
iret
icebp
inc
and
enter
or
and
pushf
mov
stos
jns
cmpsl
aad
sub
sbb
mov
mov
xchg
das
mov
pop
pushl
lea
lods
mov
insl
and
lret
xor
data16
dec
pop
dec
cmpsl
neg
test
inc
cmp
jnp
out
ret
push
adc
repz
rol
cmpsl
add
mov
inc
adc
out
and
std
sbb
pop
fildll
mov
bnd
push
or
jecxz
ljmp
fst
rorb
ds
out
cmp
divb
cltd
mov
dec
ret
int
push
scas
and
xchg
fnstcw
int
loope
add
lahf
push
adc
xor
clc
pop
out
leave
add
testb
cmpsl
add
dec
out
stos
imul
mul
ja
cmp
out
in
push
lahf
adc
sar
dec
lea
test
out
add
pop
shl
jmp
xchg
jnp
inc
int
je
inc
mov
mov
mov
adc
daa
std
lods
push
push
sahf
mov
enter
lods
fwait
cwtl
add
hlt
jb
or
or
pushf
stos
into
std
jmp
dec
lods
roll
mov
mov
mov
inc
push
outsl
pop
pop
je
cld
cmp
jb
out
pop
test
inc
sbb
sarb
loope
dec
je
aaa
mov
mov
pop
xor
lret
adc
sbb
ret
pushf
bound
leave
xorl
inc
frstor
es
or
cs
iret
add
or
scas
ss
rcl
or
icebp
xchg
cwtl
pop
mov
scas
stc
dec
shlb
rcr
imul
mov
adc
xor
cmp
xchg
dec
cmc
jo
lods
icebp
pop
aaa
inc
cld
js
cli
hlt
flds
sti
nop
sbb
push
mov
inc
cmp
arpl
add
sbb
mov
push
mov
fwait
sub
icebp
ss
inc
or
xchg
pop
aaa
sbb
pop
mov
inc
push
mov
aas
or
push
int3
push
lods
mov
mov
repnz
test
pop
stos
cltd
aad
mov
into
or
cmp
fstps
enter
test
xor
pusha
jnp
aas
mov
push
mov
call
push
push
leave
arpl
in
xor
std
adcl
xor
fisubrl
mov
repnz
ret
push
push
sbb
lds
outsl
outsb
xor
mov
call
mov
sbb
cld
loopw
or
adc
add
fimuls
mov
add
adcl
fwait
mov
cli
dec
push
stos
jp
dec
repz
cltd
not
outsb
sarb
fdivs
xor
inc
cmp
push
and
mov
popf
sti
mov
aas
fstl
mov
pop
movsb
ret
xchg
aad
dec
enter
std
push
add
imul
clc
mov
je
rcrb
push
xchg
test
add
push
rorb
or
lahf
in
and
repz
jl
push
in
jle
ret
xchg
mov
mov
sar
lret
mov
je
push
jbe
lret
imul
in
jg
in
mov
out
and
push
or
cmp
nop
jge
flds
mov
daa
jecxz
cli
fwait
sub
aas
mov
dec
cli
jns
and
shl
add
fdivs
loopne
rcrl
jbe
insb
mov
pushf
mov
and
pop
punpckhbw
sbb
cld
jp
xchg
inc
jnp
jae
sbb
ljmp
dec
push
xor
push
movsb
pop
xchg
cmp
pop
sub
sbb
enter
ss
push
push
jae
sbb
and
loop
test
push
stos
pop
xchg
fwait
mov
in
push
dec
cmpb
cmp
popf
inc
lock
cmp
lock
lods
clc
out
push
loop
ljmp
fists
dec
mov
test
pop
test
inc
out
inc
push
es
loope
mov
movsb
or
shl
mov
push
gs
push
loopne
sbb
pop
jbe
push
hlt
orb
std
jnp
int
lcall
and
jecxz
dec
js
inc
addr16
stc
js
jne
jb
stos
xor
adc
inc
dec
daa
xchg
loope
out
or
mov
jb
mov
jg
adc
lea
int3
loopne
rep
dec
out
das
fldenv
mov
xchg
pop
repnz
in
inc
mov
rcll
out
push
imul
inc
xlat
fcompl
and
ss
fldcw
dec
iret
rolb
movsl
in
enter
or
mov
mov
orb
outsb
xchg
add
test
in
arpl
test
out
fbld
pop
in
std
add
cltd
pop
mov
jmp
insb
push
xchg
jl
xchg
pop
aaa
inc
popf
movsl
jecxz
push
lock
out
aaa
icebp
mov
shr
lcall
jg
inc
daa
in
clc
jo
xchg
xor
xchg
sbb
mulb
loopne
fcmovnu
or
stos
push
arpl
call
sub
gs
cltd
xlat
mov
stos
xchg
adcl
pop
arpl
mov
cmp
fidivs
or
imul
or
jb
jo
pusha
push
push
roll
xor
outsl
sub
ds
xor
lahf
cli
icebp
lret
inc
xor
insl
leave
cmpsl
lods
cwtl
sbb
cmp
or
ljmp
stc
push
into
pop
push
mov
stc
mov
adc
popa
mov
sahf
lret
xchg
sub
push
push
push
pop
xchg
sbb
mov
jmp
jge
push
in
jge
push
addb
testb
dec
ljmp
push
decb
enter
mov
dec
add
shll
movsl
loopne
and
inc
and
aas
inc
fidivrs
cld
lret
mov
jnp
popa
sbb
imul
jmp
int
js
lcall
add
pop
mov
mov
push
adc
mov
cmpsl
push
dec
shrl
and
push
or
xchg
subb
mov
add
add
xor
fiadds
mov
sahf
push
in
mov
out
xor
xchg
imull
scas
mov
ret
mov
hlt
mov
pop
loope
in
push
out
add
test
pop
insb
mov
inc
das
jmp
lahf
ljmp
das
fnstenv
mov
in
das
popa
test
jge
icebp
jmp
mov
mov
ljmp
stos
add
xor
notl
pop
dec
subb
cmp
fadds
pop
push
fs
cltd
icebp
out
or
xchg
inc
cwtl
and
dec
sbb
lahf
mov
push
out
mov
mov
adc
mov
pop
bound
adc
jnp
pop
ljmp
in
test
aaa
aam
cmpsl
xor
in
add
int3
loopne
iret
push
cmc
dec
sub
scas
sbb
jb
or
ja
gs
sub
mov
adc
scas
clc
adc
jp
adc
test
fiadds
dec
lods
scas
dec
and
inc
in
ret
jp
out
push
nop
imull
dec
rcl
cmp
subb
mov
push
stc
pop
jge
outsl
sti
mov
mov
push
testb
fcom
mov
sub
cmc
xlat
inc
test
pop
pushf
negb
cmp
addb
jbe
fadd
orb
xor
in
aas
fisttpl
and
sub
test
push
aad
inc
mov
cmp
int
push
imul
aaa
lods
dec
xor
add
inc
inc
dec
inc
cwtl
fists
aas
xchg
sub
aaa
pop
loop
or
xor
pop
popa
popf
add
push
sbb
stc
aam
mov
sahf
roll
or
data16
and
rorb
pop
mov
mov
fs
std
push
adc
movsb
xor
inc
and
jns
mov
outsb
arpl
icebp
jmp
mov
push
mov
sti
pop
sarl
cmc
fisttps
mov
or
and
dec
mov
loopne
and
inc
data16
jne
repz
shrl
popf
add
lret
sub
adc
adc
xor
xor
out
xchg
mov
into
call
sarb
xchg
pop
and
data16
inc
int3
add
sbb
ss
stos
inc
mov
cmp
push
rcrb
mov
incb
sbb
add
mov
incl
push
hlt
xor
arpl
loopne
sbb
xor
rorb
mov
insb
fidivl
mov
fldcw
divl
pop
jns
insl
clc
sub
mov
lods
mov
or
adc
loop
add
pop
andb
push
push
lret
jne
aam
lods
lods
pop
pop
xchg
in
sbb
outsl
push
mov
lea
cwtl
push
psadbw
cmpsb
add
push
jae
mov
in
mov
test
adc
repnz
fs
or
hlt
mov
mov
enter
xlat
fldcw
adc
cmpsb
xchg
xor
ljmp
popa
out
stc
iret
data16
mov
cwtl
or
test
std
gs
ljmp
sub
fsubrs
outsl
jno
imul
outsl
cld
push
jb
push
jl
cld
add
or
pop
mov
cmpl
push
cmp
clc
imul
push
jmp
lock
dec
dec
jle
cwtl
push
adc
lcall
test
aaa
sbb
mov
cltd
lods
jmp
cli
sub
xor
mov
popa
les
pop
in
fwait
jecxz
mov
loop
mov
mov
into
and
pop
xlat
ljmp
loop
cmpsl
sub
jns
adc
sahf
sbb
callw
js
jns
in
imul
jo
ret
test
ss
fnstenv
jmp
out
daa
xor
cmc
jo
and
add
jp
adcl
jp
insl
jg
adc
cmc
in
mov
lcall
out
decl
xlat
cmpsb
popf
cmp
or
test
and
sbb
lahf
add
imul
in
mov
jmp
aad
lock
lahf
jmp
cmp
sub
mov
hlt
pop
outsl
fildll
test
sahf
inc
subl
sbbb
int
call
sub
and
dec
icebp
into
pusha
or
ds
insb
inc
test
jmp
sub
decl
jge
push
push
jo
and
fwait
test
sbb
and
mov
lcall
out
iret
mov
popf
adc
sub
rol
xor
sbb
sub
ret
add
aaa
sbb
sub
sub
rorl
push
fisttpll
sub
ret
jo
je
xchg
in
aad
testl
xor
aaa
movsl
outsl
shl
pop
stc
push
jbe
push
xorl
mov
std
xlat
xchg
ret
or
loopne
pop
sub
sbb
xor
sub
and
loopne
jl
popf
or
pslld
mov
push
adc
jmp
insl
loopne
pop
add
cmpsl
mov
sbb
jg
int
add
pushf
xchg
fadd
sub
jmp
mov
sbb
cmp
hlt
mov
and
mov
add
into
aas
xor
mov
outsl
push
shr
and
and
inc
stos
or
movsb
cmp
adc
out
lock
mov
clc
pushf
popf
and
jns
push
fisubrs
repnz
std
into
jge
ftst
call
gs
mov
mov
loopne
mov
iret
jecxz
lods
popa
ds
or
or
lret
testb
negl
iret
pop
scas
ja
fwait
xor
test
push
jo
fisttpll
sahf
imul
loop
xlat
jecxz
stos
cmp
mov
int
js
sbb
inc
roll
add
ret
xchg
jl
xor
ds
lods
pop
xor
shrb
addr16
arpl
out
mov
jle
and
or
mov
add
add
cmpsl
clc
add
xchg
xchg
stos
sbb
leave
mov
jle
mov
hlt
or
cmc
jae
jo
cmp
je
sbb
push
in
adc
cli
mov
mov
call
xor
fdivrl
pop
and
filds
repz
lret
ret
lods
xchg
aad
bound
xchg
pop
aas
jns
add
and
mov
cmp
jae
mov
js
addr16
shrl
pop
stos
sti
stc
lea
mov
fdivrl
fwait
movsb
cmp
fadds
shrl
dec
mov
das
jg
lock
lock
inc
push
mov
pop
cmp
mov
xchg
pop
push
sti
mov
gs
imul
lret
outsb
cmpl
fs
inc
push
inc
ret
orb
repz
ffree
adc
sahf
stc
add
insb
popa
mov
pop
lods
mov
adc
mov
mov
inc
sarl
insb
sbb
sbb
bound
jns
loopne
mov
insl
jne
mul
fcmovb
add
clc
push
aas
insb
ret
pop
loope
dec
push
ss
cltd
outsl
dec
fisttps
sti
movsb
xchg
push
add
in
push
or
gs
ficoms
jg
daa
jns
and
popf
aaa
jmp
fisubrs
sbb
and
cmp
and
stos
cmp
sub
cmp
cs
mov
jmp
xchg
in
outsb
in
sbb
scas
rcll
cmp
dec
cmc
or
xchg
leave
jnp
or
push
dec
adc
or
adc
adc
fwait
jecxz
pushf
mov
mov
js
ds
adc
add
and
pslld
cmp
jle
adc
xchg
sub
xor
push
mov
fisttps
xor
dec
je
jbe
inc
addr16
xchg
xor
in
pop
adc
push
mov
lds
fmul
daa
cmp
mov
pusha
ret
std
orw
sbb
int
adc
xor
lock
xchg
mov
movsb
inc
mov
dec
sub
push
ret
mov
jg
pop
std
add
xchg
push
pusha
enter
shll
push
and
and
je
lahf
mov
pusha
pusha
mov
jmp
ja
cwtl
xor
jle
decb
add
lods
das
push
mov
push
call
test
and
mov
aad
add
xchg
fsubrl
lahf
test
insb
xchg
jle
insl
lcall
inc
shlb
scas
loopne
pop
adc
sarl
ds
inc
icebp
test
insb
inc
mov
sbb
nop
or
sbb
pop
add
xor
fdivrs
out
ret
dec
test
lahf
out
mov
dec
xor
jp
insl
cmp
or
xchg
dec
or
mov
arpl
int
push
jbe
cmp
pop
cld
push
jae
dec
mov
sahf
sbbb
or
outsb
out
mov
sbb
es
bound
mov
imul
sub
xchg
mov
shr
and
dec
pop
lds
add
inc
popf
insl
mov
sti
sub
aas
jle
sub
add
daa
push
sbb
adc
vpsubusw
mov
popf
add
mov
bound
sub
push
stc
mov
xor
pop
cmp
jp
sub
push
stc
adc
mov
mov
or
mov
xor
in
sbb
orl
dec
loop
mov
out
pop
ja
pop
inc
and
enter
rcrl
lods
rcr
pushf
jg
test
aam
test
imull
pop
pushf
and
jno
adc
push
rol
popf
mov
cs
aaa
xchg
sbb
mov
insb
pop
mov
into
repz
push
adc
add
test
push
lcall
inc
mov
into
out
sub
inc
jnp
lods
clc
pop
cwtl
cmp
aad
xor
mov
mov
sbb
or
fcoml
mov
pop
cltd
jo
sub
jnp
and
add
dec
lea
push
sub
sbb
add
in
push
mov
call
ret
adc
cmpsb
dec
scas
push
int
push
dec
subb
orb
int
push
or
mov
inc
cwtl
fnsave
inc
mov
xor
xchg
inc
mov
pop
in
lcall
xchg
test
fwait
fwait
imul
lahf
pavgw
fadd
adcl
andb
popa
leave
xchg
loop
jo
cwtl
sub
shlb
mov
lods
ret
mov
adc
add
push
mov
sbb
mov
daa
loop
aam
push
mov
adc
fnsetpm(287
mul
pop
mov
fidivl
imul
or
mov
scas
pop
cli
aad
int
mov
repnz
dec
or
or
ficompl
test
imul
jg
add
mov
lahf
mov
fwait
lock
fsub
inc
and
bound
jecxz
test
push
mov
lahf
inc
xchg
lahf
xchg
push
sbb
movsb
ret
repnz
test
in
mov
mov
jmp
jo
test
jg
enter
leave
pusha
in
jno
and
loope
or
add
jmp
jle
jns
add
mov
inc
cli
dec
or
loopne
xchg
push
mov
jnp
iret
das
mov
or
aas
daa
mov
andl
adc
lret
jb
inc
pop
dec
cmc
cs
add
sbb
sub
hlt
mov
adc
es
pop
jns
cwtl
cltd
xor
jmp
iret
enter
inc
iret
xor
shlb
bound
jns
fdivrl
push
je
jecxz
call
jo
dec
jp
xor
inc
pop
bound
mov
dec
aas
fstl
pop
xorb
pusha
mov
fidivs
hlt
or
dec
test
hlt
pushf
mov
pusha
mov
jae
sub
push
pop
movsl
xlat
add
in
fimull
xchg
jb
inc
loopne
pop
xor
aaa
sbbb
clc
lahf
out
outsl
fidivs
xchg
adc
and
lock
push
rolb
dec
scas
mov
mov
daa
mov
in
add
mov
sbb
sbb
shlb
je
mov
loopne
jge
outsb
mov
jmp
in
scas
loopne
orb
ja
rclb
pop
mov
inc
js
and
es
je
push
test
xchg
or
test
das
int3
sub
push
or
cld
pop
movsb
inc
cmp
daa
and
ss
fnsave
pop
cmc
push
out
sub
sbb
mov
or
decb
jmp
mov
rorb
xchg
shrl
sub
test
xor
jae
mov
sbb
dec
js
ror
daa
dec
test
fistpl
sar
push
repz
inc
pushf
jnp
aad
paddb
push
inc
test
nop
push
in
cmp
inc
cmpsb
les
cmp
and
outsb
jle
ret
or
push
or
jmp
cmp
test
test
lds
fwait
lods
pop
sbb
rcll
mov
mov
push
mov
fidivs
sbb
sti
in
jb
pop
pop
adc
cmp
pop
sub
xor
xchg
mov
xlat
lcall
sti
pop
into
loop
call
sbb
sbbl
pushf
mov
out
xor
mov
xor
loope
or
sub
mul
fdivl
into
jge
inc
imul
push
add
inc
addr16
daa
xchg
test
sub
movsb
adc
int3
insl
sub
dec
mov
in
cli
sbb
std
shrl
and
pop
cmpsl
fwait
push
outsl
test
fwait
int
jnp
sub
add
test
ficompl
cmp
or
push
and
jge
mov
sahf
xor
jl
ret
clc
or
ret
insb
adc
test
dec
insl
mov
inc
aaa
loope
push
sbb
cmc
cli
lahf
stc
add
lea
pop
push
dec
cltd
add
mov
xor
push
scas
outsb
push
ret
icebp
inc
orb
das
les
mov
sub
inc
das
iret
pop
movsl
pop
mov
das
or
or
inc
mov
gs
adc
mov
out
xchg
or
sub
nop
cmpl
or
shlb
mov
mov
lea
movsb
dec
flds
ficompl
aas
add
pushf
sbb
xchg
and
pushf
or
loopne
push
subl
dec
arpl
pop
dec
jno
addr16
leave
fcmovb
call
sbb
xor
cwtl
inc
sarl
adc
loop
daa
add
push
bound
jae
xor
hlt
popf
clc
sti
divb
inc
into
ret
pop
sbb
or
jb
insb
push
mov
adc
sub
daa
cmp
cmc
and
push
aad
and
or
inc
fdivrl
jnp
gs
or
xor
lods
add
test
add
movsl
jge
addl
sbb
adc
mov
out
sub
je
xchg
xchg
pop
ja
dec
lret
imul
mov
mov
jge
or
iret
xchg
jnp
push
ret
cld
mov
mov
test
xchg
les
test
daa
mov
add
insb
into
js
jmp
in
movsb
or
in
pop
xorl
test
sbb
mov
imul
leave
add
stos
test
lcall
add
pop
enter
mov
out
fiadds
loop
iret
ljmp
or
scas
add
lret
and
jns
lods
les
out
in
mov
push
jae
pop
xchg
xor
arpl
dec
mov
iret
jb
imul
shrb
pop
fs
cmp
mov
jno
iret
inc
inc
jmp
push
xchg
shrb
inc
inc
dec
outsb
ret
mov
xorb
adc
in
xchg
mov
int
outsl
aad
sbb
mov
mov
inc
xor
mov
and
in
adc
scas
xor
dec
jle
in
cmc
push
inc
fstp
sbb
shl
insl
cmpsb
mov
aas
jmp
adc
outsl
jno
push
mov
pop
movsb
lret
jg
cmp
dec
cltd
or
sub
jns
xor
xchg
adc
or
rol
mov
iret
rcr
jne
ss
inc
inc
xlat
add
push
xchg
in
xchg
push
cltd
adc
insl
cltd
out
inc
dec
mov
stos
xchg
outsb
pop
mov
andb
cltd
scas
mov
mov
lods
arpl
gs
orl
mov
pop
jb
dec
xchg
out
mov
int
adcb
aas
leave
add
dec
hlt
dec
sub
aam
mov
das
lea
and
mov
lret
pop
movsb
test
pop
add
inc
in
pusha
cld
sbb
sbb
adc
dec
enter
daa
test
pop
adc
mov
xor
push
xchg
stc
jbe
lods
stos
or
out
cs
out
or
sub
push
stos
sub
orb
movsl
sub
fsubr
adc
inc
pop
fidivl
stos
push
inc
das
adc
es
jmp
mov
ficoms
jg
test
add
call
push
and
adc
adc
add
adc
lcall
jp
inc
sbb
xchg
xor
stos
xor
mov
test
and
cli
mov
xchg
gs
and
cmpsl
mov
adc
add
out
xchg
int
out
or
arpl
lea
insl
fsts
sbb
xor
jle
mov
outsb
lock
call
sub
jmp
mov
sub
push
dec
mov
xcrypt-cbc
cmpsl
push
mov
fsub
sbb
icebp
and
pop
sbb
and
iret
idivb
dec
and
and
fcomps
pop
popa
out
mov
or
xlat
sbb
xor
sbb
dec
push
in
xor
shlb
mov
sub
sbb
lods
fadds
fdivl
std
pop
jl
xor
stos
dec
fdivr
jnp
enter
enter
outsb
ja
jo
outsl
daa
pop
clc
sbb
divl
inc
or
je
mov
push
pop
hlt
repz
push
push
sub
push
xchg
fstl
xlat
in
sbb
push
sbb
call
in
mov
sub
adc
outsl
addb
cmp
jmp
std
xchg
repnz
xchg
inc
int3
loope
cmpsl
dec
popf
imul
jp
aas
jle
jno
xor
xsaves
dec
or
daa
in
mov
cmc
xor
imul
cltd
xchg
mov
rolb
out
xchg
std
xor
pop
outsl
imul
xchg
loope
rorb
icebp
mov
loope
out
cltd
inc
xor
aam
aas
or
roll
icebp
int
xchg
pop
xchg
push
jbe
mov
fstl
mov
test
mov
aad
fs
in
movsb
push
cmp
xor
jne
lahf
cmp
mov
shr
jno
pop
xor
or
or
std
test
pop
js
push
icebp
es
xor
fucomi
fwait
insl
outsl
push
stc
cmp
pop
jne
inc
and
jno
in
add
sub
test
loop
add
shll
enter
mov
push
xchg
jnp
into
pop
push
cmp
testb
push
bsr
adc
scas
cli
incl
jno
ret
stos
cmp
jnp
lea
movsl
cli
cmp
sahf
sbb
dec
out
imul
pusha
dec
in
and
dec
jecxz
xor
in
mov
xchg
pop
sbb
jnp
mov
test
ret
rorl
out
inc
mov
push
sbb
jl
cmp
loopne
jbe
mov
mul
cmp
push
and
jbe
mov
pop
mov
idiv
movsb
arpl
or
push
fnstsw
or
es
xor
mov
push
jp,pt
push
stos
xchg
lahf
pop
xchg
lods
out
cmp
pusha
aaa
xor
imul
adc
mov
js
bound
xchg
daa
jg
jle
pushf
insb
xchg
mov
sub
test
out
dec
shl
jle
imul
jmp
lock
xchg
icebp
jecxz
push
test
inc
xor
xchg
jnp
mov
push
xchg
inc
add
test
std
movsl
pop
outsl
test
cmpsl
add
inc
inc
jecxz
dec
inc
jp,pt
mov
push
mov
jns
jp
jns
arpl
cmc
test
adc
fstpt
adc
es
ret
ljmp
adc
test
inc
and
push
mov
test
push
shlb
sbb
mov
and
push
xchg
inc
imul
add
cmpsl
in
jnp
jl
idiv
cltd
inc
xchg
sbb
pop
push
mov
and
xor
mov
enter
mov
stc
orl
movsl
xchg
aas
inc
pop
aas
xchg
cs
ds
insb
mov
jp
gs
stc
popf
push
jb
je
movsl
xor
loopne
jo
nop
pop
aad
cmp
push
jo
push
and
je
xchg
mov
sti
mov
mov
cwtl
movsl
jl
data16
gs
enter
inc
addr16
mov
add
mov
in
mov
enter
add
push
enter
dec
stos
loope
mov
and
xchg
mov
pop
push
lods
and
loope
lret
pop
jmp
testl
or
xchg
int
popf
daa
sbb
movsb
rorl
aad
or
or
xor
add
lcall
inc
imul
push
dec
sub
mov
or
arpl
mov
scas
cmpsb
xor
loop
or
cld
sti
xchg
rclb
fdivl
das
stos
iret
dec
test
and
ficoml
adc
sahf
int
mov
push
push
sub
sbb
or
mov
pop
into
lret
aad
sbb
lods
inc
jnp
dec
shl
test
push
cmpsl
mov
imul
adc
mov
sub
or
cmp
in
pop
add
or
shlb
stos
mov
sarb
cbtw
pop
fnstsw
jae
aaa
ljmp
and
adc
test
adcl
pop
inc
dec
dec
inc
dec
je
loopne
and
les
push
fildl
test
jns
js
rcll
repz
cmp
in
into
dec
mov
cmp
gs
lea
jb
sub
dec
jae
cmp
dec
pop
insb
scas
into
mov
inc
xchg
jno
mov
daa
push
lret
mov
lret
icebp
add
sub
arpl
cltd
sub
mov
dec
js
rsm
pop
cmpsb
sub
and
sbb
xchg
jge
mov
sbb
cmp
xchg
das
xchg
mov
sbb
adc
iret
leave
jg
out
jle
add
jmp
dec
iret
mov
sbb
movsb
and
and
xlat
jno
mov
insl
loope
inc
dec
add
test
int3
outsl
pop
dec
in
dec
ds
lahf
xlat
imul
xor
aam
out
stc
jnp
xor
loop
lods
enter
jecxz
sbb
lds
push
lods
lock
vminss
cltd
jne
adc
and
mov
call
xor
ss
mov
jae
insl
ja
popf
mov
cld
add
pop
arpl
repz
gs
xchg
jne
xor
shlb
and
fistpl
lds
lret
ret
cmc
jb
out
test
mov
jne
imul
scas
pop
xchg
push
les
inc
xchg
cmp
adcl
cmp
xor
jmp
or
fidivrs
fidivrl
sbb
imulb
sub
stc
add
ret
mov
and
leave
inc
xor
pop
mov
or
sbb
inc
xor
divb
loop
out
mulb
shll
adc
es
inc
leave
mov
roll
mov
jge
cwtl
test
adc
aaa
clc
popf
sub
sahf
cli
push
mov
xchg
push
testb
dec
pop
das
lods
and
mov
scas
and
mov
cmpsb
sub
sti
sti
xchg
cld
incl
jb
js
test
ret
sti
cwtl
pop
fildl
out
loopne
cmpsl
xchg
or
jns
pop
cmp
jmp
std
pop
lcall
adc
or
lret
test
push
mov
aaa
push
scas
adc
call
cli
insl
int3
lahf
mov
xchg
inc
jo
inc
popa
jno
shrl
dec
mov
popa
push
inc
fst
scas
pop
mov
imul
fldenv
mov
pop
pusha
mov
bound
or
pop
in
add
xchg
popf
test
in
cmp
insl
lds
cmp
push
add
call
fists
aas
sub
xor
repnz
ret
loopne
sarl
xor
fnstcw
pop
push
clc
xchg
cli
lods
mov
push
jl
fcomps
push
scas
xor
dec
mov
mov
pop
fld
push
mov
inc
inc
stos
sub
xchg
add
imulb
mov
dec
mov
imull
aas
xchg
in
or
xchg
push
adc
jb
ret
push
sbb
add
and
dec
test
loopne
addr16
imul
pop
mov
imul
test
cmp
mov
mulb
jne
mov
xchg
xor
xor
lods
xor
mov
insl
inc
mov
movsb
adc
mov
mov
xor
pop
mov
shll
lock
dec
sbb
mov
lds
scas
mov
mov
mov
jmp
or
mov
pushf
aad
xor
jecxz
add
aad
incl
inc
mov
pop
aaa
mov
jmp
pop
mov
lret
std
in
cltd
lahf
mul
lret
push
or
jmp
lret
imul
add
pop
fs
or
sub
dec
sub
lcall
rcrl
test
fidivl
cli
dec
dec
es
xchg
fmull
js
outsb
xor
mov
push
nop
xor
movsl
cmp
push
pop
out
or
mulb
rclb
ficoms
jns
add
icebp
rcr
popa
jnp
lock
mul
addr16
iret
xor
fcoml
in
scas
std
adc
or
insl
xchg
fildl
add
pop
jp
or
sti
cli
xchg
and
add
lcall
clc
sub
dec
aad
cmp
jns
and
orl
jmp
cmpsl
in
jbe
xchg
sbb
or
pop
sbb
xchg
xchg
pop
lcall
pop
push
mov
cmc
lock
icebp
enter
sar
mov
in
int
daa
and
pop
xchg
inc
fstpl
enter
mov
jge
loop
insl
or
xor
addr16
mov
mov
insl
cmpsl
mov
dec
lret
adc
xchg
sbb
loope
cli
int
inc
inc
push
das
jg
sbb
adcl
push
mov
addb
andl
and
jmp
sbb
mov
xchg
movsl
cmp
inc
and
pop
stc
pmulhuw
sbb
xor
lret
jmp
imul
lahf
and
mov
js
inc
jl
or
iret
ret
xchg
xchg
sbb
in
jp
ret
push
js
out
clc
cmpl
es
cmp
xchg
les
and
int
adc
cld
iret
sub
pop
pop
pop
bound
rorl
icebp
leave
gs
sub
daa
lret
mov
adc
insb
xchg
jne
enter
jg
push
js
insl
and
xor
pop
shrb
lods
pop
dec
stos
sub
and
sbb
sarl
mov
jbe
dec
in
mov
cmp
mov
movsb
xchg
lea
add
out
mov
mov
jecxz
lds
sub
pop
divl
out
mov
xchg
adc
inc
into
push
jg
mov
pop
sbb
xor
dec
mov
xor
mov
and
test
fdivrl
sbb
mov
adc
jo
out
xchg
test
dec
mov
orps
pop
push
xchg
push
mov
movsl
mov
mov
js
lret
cmp
add
pop
and
pop
cld
or
loope
cltd
mov
into
or
push
cmp
ja
sarb
shr
jmp
inc
sbb
jp
push
jp
imull
jecxz
ret
in
fs
cmp
in
fwait
pusha
push
adc
push
imul
pop
xor
jg
insl
outsb
into
lods
jnp
sbb
mov
add
sub
jp
push
lods
popa
mov
push
mov
cwtl
lret
lea
fcmovne
sbb
ret
in
sahf
jge
add
dec
sahf
dec
cmp
mov
std
fldenv
fsubl
shll
popa
xchg
in
mov
imul
or
adc
fucomi
push
std
ja
add
adc
inc
jnp
lcall
call
xchg
jecxz
and
into
lock
push
enter
jp
repz
in
or
mov
loope
js
jg
imul
xchg
gs
ja
test
rorl
sbb
xor
scas
dec
lahf
jbe
cmpsb
xchg
and
push
rorl
mov
daa
xchg
jbe
sbb
mov
rcr
iret
cmpsb
sbb
inc
add
cmp
lcall
lret
cs
push
aaa
je
js
std
nop
imul
test
jmp
xor
pop
aaa
insb
xor
pushf
xchg
sub
dec
mov
cltd
loop
in
into
int
aad
xor
push
adc
sbb
aam
cli
and
loopne
fs
cmp
imul
cs
lea
repz
pop
aam
xchg
jo
adc
add
cmp
jnp
fadd
in
ja
lock
xchg
pop
rcrl
ss
fstps
pop
inc
outsb
pop
ja
adc
das
cs
jb
int
mov
ds
sbb
imul
mov
scas
jo
cltd
mov
mov
popf
sbb
movsl
xchg
insb
mov
push
sbb
adc
scas
repnz
add
xorl
jp
test
xor
addb
loopne
fbld
pop
outsl
les
imul
cli
xchg
cmpsl
cmp
movsb
loopne
xor
test
imul
cmp
push
sub
jns
push
adcb
jae
xor
out
clc
test
add
nop
out
test
pushf
outsb
mov
imul
loop
lds
insb
lret
sti
add
sbb
pop
ja
out
xchg
mov
das
in
cmp
jmp
mulb
pop
stos
lods
fstpt
insb
push
movsb
mov
repz
xor
mov
aad
mov
mov
out
cltd
add
cmp
sbb
mov
push
iret
lds
adc
push
loopne
imul
enter
add
cmpsl
pusha
sbb
lods
push
test
cwtl
pop
and
hlt
stc
test
jmp
sub
jno
iret
xor
push
mov
stos
stos
lea
dec
push
push
aad
mov
sub
jge
cltd
xorb
or
call
inc
pop
xchg
xlat
fcoml
xchg
mov
cld
and
das
mov
aaa
into
and
pop
sbb
xlat
ret
test
push
xor
repz
lods
or
cmp
or
sti
dec
or
clc
pop
ss
lcall
imul
push
cmpsl
std
insl
and
stos
mov
jge
jecxz
dec
sub
mov
pop
decb
and
sahf
or
xchg
incb
lcall
popa
test
push
dec
jp
or
inc
ljmp
cmp
push
nop
push
aaa
pop
or
cmp
repnz
jb
xchg
loope
outsb
gs
imull
mov
adc
or
adc
mov
add
pop
jo
gs
cmp
addr16
adc
cld
push
enter
adc
jns
test
std
scas
mov
inc
xor
test
inc
adcl
jmp
pop
loopne
xchg
sbb
adc
rcl
sub
idivl
mov
lods
aad
mov
mov
mov
in
jp
out
iret
sahf
sub
sbb
js
adc
cs
popa
jne
test
ret
push
pop
jg
mov
insb
push
mov
jecxz
push
icebp
xor
dec
ds
iret
sbb
ret
loop
aad
pop
cli
jl
cmp
aad
dec
daa
cmp
loopne
je
leave
repz
ds
movsl
add
cmp
adc
or
cltd
jnp
jns
mov
pop
pop
fsubr
mov
lcall
popf
call
jg
js
mov
shll
sub
jns
mov
cmp
lods
mov
loop
jle
and
pop
jnp
les
testl
add
test
pusha
test
fistpll
in
jp
cmp
jbe
xor
stos
or
out
sbb
test
xor
sbb
jecxz
cmp
mov
inc
sbb
mov
mov
dec
mov
push
daa
pop
out
cmp
dec
fstpl
fisttpll
mov
leave
mov
adc
popa
adc
inc
rcll
mov
push
popl
pop
sub
pusha
cs
jns
aaa
fimuls
cmpsl
pop
push
mov
dec
inc
jb
mov
dec
fildll
popf
cmp
je
stos
es
lcall
push
or
xchg
ret
xor
ret
jae
cli
js
std
mov
das
sbb
pop
mov
lcall
inc
stc
and
stos
add
xchg
mov
cmp
mov
ret
popf
sahf
sub
adcb
mov
cld
dec
jmp
cmpb
jmp
jno
pop
shrb
loopne
mov
inc
call
lret
inc
xchg
add
ss
xor
jbe
test
and
xchg
lret
xchg
fwait
in
inc
test
mov
out
test
in
sub
mov
les
sbb
repz
mov
adc
mov
jnp
data16
test
mov
mov
jbe
mov
jle
movsl
or
mov
xchg
stc
pop
gs
fcmovne
cwtl
push
es
rclb
iret
pop
xlat
pop
mov
inc
or
pop
dec
loopne
adc
jl
testl
pop
sub
cmp
push
pop
rol
mov
and
int3
pop
inc
cmc
cmp
stc
cmp
inc
cmp
xchg
aaa
fnstcw
sub
adc
mov
insl
mov
jecxz
adc
pop
scas
push
add
pop
jns
mov
shr
push
dec
dec
push
mov
xor
pop
jle
test
stos
orb
outsb
inc
movsb
cmpb
push
xchg
pop
and
sti
push
fsts
adc
mov
out
fnsave
pusha
cwtl
loopne
add
aam
push
dec
sti
pop
out
movsl
push
mov
lods
pop
popf
movsb
dec
cltd
stos
jl
cwtl
dec
add
sti
icebp
sub
push
push
imul
or
xchg
ds
sbb
icebp
pop
lea
test
mov
xchg
scas
lret
lcallw
inc
scas
lds
xor
push
dec
or
inc
inc
aaa
insb
gs
sub
fs
mov
mov
ds
pop
and
sbb
in
fidivs
sub
shll
ss
dec
push
int3
fcompl
dec
mov
popl
mov
push
outsb
dec
or
stos
mov
push
sbb
movsl
pop
mov
test
lds
pop
popf
xchg
lock
mov
nop
sahf
cwtl
mov
mov
jg
out
cmp
mov
lods
test
jg
inc
orb
sub
and
stos
jge
in
adc
cs
lea
push
mov
or
jns
fnclex
out
imulb
inc
lcall
bound
lret
js
or
lock
lret
jno
cwtl
sbb
sbb
mov
cld
pop
sub
xor
pop
inc
das
xchg
mov
push
pop
sahf
cltd
push
jle
cld
ss
imul
sbb
pop
xlat
jb
test
push
out
mov
mov
cmc
je
into
loop
mov
lahf
jns
shr
jg
popf
orl
ss
outsb
adc
mov
sub
adcb
xchg
sub
lds
lret
xor
add
iret
xor
sarb
enter
clc
sti
rol
cmp
imul
lods
icebp
or
rorb
sarb
test
cmp
cmpsb
dec
sub
sahf
lcall
add
arpl
rorb
sub
in
dec
imul
mov
xchg
loop
lahf
lock
inc
fcmovne
sbbb
jp
xor
fsubrs
ret
push
xor
jecxz
int
xor
leave
aas
leave
loop
jge
loope
aas
or
dec
and
mov
loopne
jns
cmp
mov
adc
insl
pop
and
push
cmp
iret
fwait
jne
mov
scas
or
out
ljmp
lret
lret
fists
repnz
fstps
testb
out
mov
pop
aad
data16
lahf
movsl
jbe
hlt
cmc
mov
add
or
cli
repz
xchg
dec
ja
push
push
imul
pop
cmc
lea
push
addr16
aam
outsb
gs
test
mov
xor
xchg
ret
movsb
mov
pop
adc
arpl
cmp
jmp
icebp
xchg
ja,pt
mov
push
ss
pop
aaa
shlb
mov
fldenv
jne
sahf
das
aas
aas
loope
popa
xor
dec
and
sub
add
sbb
pop
loopne
push
xchg
and
jmp
rorb
int
dec
sbb
mov
xorl
mov
mov
pop
loop
incl
fldcw
fdivr
lret
fcos
arpl
xchg
negb
jno
mov
cmp
pushl
addb
adc
ds
cmp
dec
fldenv
pop
hlt
xchg
sub
mov
cli
dec
and
orl
sarl
sub
mov
iret
push
inc
int
es
mov
pop
sbb
cmp
adc
imul
es
insl
iret
add
stc
fs
adc
jge
cmpb
sbb
sbb
cld
xor
push
inc
cwtl
aad
cmp
adc
sbb
mov
mov
adc
adc
dec
daa
iret
xchg
jae
gs
adc
cs
or
movsl
inc
push
dec
in
jns
aad
mov
dec
add
outsl
jne
mov
repnz
cld
fwait
adc
sahf
adc
sahf
pop
rcll
loopne
lea
push
sub
xchg
je
mov
cld
mov
mov
and
sbb
pop
push
lods
div
loop
mov
lds
dec
imul
pop
pop
in
jne
sbb
push
aaa
insb
rol
cli
shr
out
dec
xlat
push
and
mov
dec
cmp
mov
movsl
es
inc
dec
rclb
jge
mov
cltd
loop
aaa
mov
mov
popf
mov
cltd
push
lock
push
cmp
movsb
lcall
adc
outsb
scas
clc
iret
or
test
stos
and
lret
or
cwtl
bound
push
shrb
scas
pushf
or
sbb
mov
ja
inc
inc
rcll
push
pop
ret
rcrb
inc
fidivs
stos
jb
push
dec
push
and
add
sbb
cmp
push
add
ror
lcall
jne
and
mul
mov
or
cli
push
xor
lcall
shrl
das
in
outsb
push
das
mov
dec
xor
mov
inc
shll
sahf
lcall
inc
repz
xchg
sub
cmpsb
out
mov
int3
pop
loope
sbb
cmpsl
inc
xchg
push
or
mov
or
int3
inc
in
mov
pusha
flds
cmova
jns
shlb
pop
fidivl
xor
arpl
call
js
insb
cmc
inc
ffree
and
dec
mov
jmp
pushf
or
adc
jns
xor
mov
movsb
aam
inc
push
mov
pop
sub
sbb
pop
xor
das
cmp
mov
push
push
dec
pusha
fucomi
add
out
mov
jp
faddl
adc
popf
enter
loopne,pn
jb
sbb
loope
lods
movsl
int3
jns
les
inc
mov
jns
and
dec
dec
cmpsb
fidivl
pushl
cmp
mov
into
sub
loop
mov
jo
jg
shl
leave
cli
test
ja
popf
sti
xor
or
or
ja
and
jne
cmc
push
pusha
out
dec
push
pop
aas
xchg
jg
cmpsb
mov
push
aas
pop
or
mov
pop
mov
decl
fmull
incl
sbb
or
enter
pop
loopne
dec
pop
push
push
test
and
adc
mov
or
push
cltd
shlb
and
outsl
data16
call
pop
loope
adc
scas
pop
sub
push
dec
fmul
push
gs
sti
lds
into
mov
pop
add
sbb
incb
jecxz
jmp
dec
leave
jle
fildl
mov
mov
lds
xor
mov
push
cmc
dec
fdivs
and
adc
cs
sub
stc
aaa
imul
fldcw
xor
hlt
push
xchg
fs
lds
out
mov
cmp
adc
std
and
add
pop
xchg
mov
test
dec
inc
add
addr16
icebp
sub
or
jl
movsb
adc
cmc
call
and
ds
in
xlat
xor
or
push
inc
mov
outsl
push
cmp
leave
cli
call
cs
repz
arpl
out
fsubrs
sbb
mov
or
jnp
mov
mov
or
mov
arpl
sbb
add
pop
out
std
stos
jns
les
push
aam
pop
gs
ffreep
xchg
punpckhdq
pop
imul
outsl
dec
or
lea
or
xor
pop
jg
ljmp
leave
or
rorb
ss
add
xchg
adcb
insb
pop
push
fs
inc
mov
aaa
cmp
xchg
or
mov
ja
push
pop
push
cmp
aad
call
mov
inc
pop
shl
fnsave
aad
sarl
push
push
popf
repz
mov
inc
call
push
aam
push
pusha
mov
daa
dec
jp
adc
insb
fldt
test
lea
fs
or
aam
dec
outsb
add
fimull
test
lret
fcoms
nop
jp
sti
scas
xchg
imul
orl
cmpsb
stos
sbbb
cmp
ds
xchg
lods
in
mov
mov
mov
xorb
aas
imull
movsl
cltd
and
mov
push
bound
int3
sti
and
shrb
in
dec
push
mov
sub
lahf
xor
xchg
cmpl
push
jmp
mov
mov
cli
pop
push
inc
loop
pop
mov
sarb
pop
push
movsb
or
add
sbb
pop
pop
adc
mov
call
mov
xchg
aaa
mov
jne
dec
pushf
ret
inc
gs
mov
test
and
roll
xor
scas
call
jb
mov
jb
addr16
xor
popf
js
fcom
cmp
sub
cmp
ror
jne,pt
xor
int
dec
popf
ds
jmp
into
sub
mov
add
not
rol
nop
mov
dec
arpl
jae
roll
aad
xchg
test
and
push
sub
xchg
jne,pt
stos
mov
jmp
shlb
cmc
mov
loop
mov
pop
mov
in
jmp
mov
je
inc
cmp
jne
adc
mov
pop
imull
outsb
aaa
inc
mov
adc
inc
stos
stos
adc
push
fisubs
mov
jb
xor
add
loop
bound
inc
cld
ja
sbb
adc
mov
mov
movsl
rcll
jge
mov
je
mov
push
mov
in
leave
mov
out
inc
fsubr
stos
fucomp
lret
sahf
insb
pop
fisttps
repz
lret
sarb
test
jle
push
xchg
stos
cmp
pusha
scas
nop
loopne
adc
out
dec
mov
mov
adc
es
in
out
jnp
dec
pop
sbb
sbb
iret
adc
jnp
mov
fwait
fwait
or
or
fidivl
cwtl
adc
lea
ror
cli
out
and
lods
mov
mov
or
lds
inc
inc
enter
dec
inc
hlt
xchg
int3
mov
mov
out
or
or
mov
fwait
xchg
pop
mov
inc
xlat
add
and
cmp
imul
xlat
cmove
es
lret
sub
inc
mov
inc
test
jb
arpl
sbb
fidivs
je
add
dec
adc
imull
and
lds
xor
into
lcall
add
push
pop
icebp
test
loope
cmc
jns
mov
and
mov
scas
lds
cmp
pop
jns
mov
push
jb
inc
call
stc
sub
aad
inc
cmp
mov
xchg
adc
cmpsb
xor
call
stos
shll
fildl
ljmp
adc
inc
or
cli
or
stc
flds
mov
repnz
and
or
gs
lret
adc
pop
fisttpl
jne
and
aad
mov
mov
ss
test
jl
cmp
adcb
data16
mov
push
mov
pop
jbe
imul
cmc
cmp
popf
outsl
cmp
sti
or
std
ja
sbb
faddl
cmp
push
icebp
sti
bound
std
repz
mov
out
lcall
js
je
lds
inc
or
sbb
or
cli
sarl
or
mov
xor
dec
jmp
call
push
mov
adc
sahf
mov
das
test
sbb
in
nop
dec
in
add
daa
movsb
cs
or
lret
and
fstpl
and
daa
rcrb
xorl
pop
lcall
mov
decb
push
lods
dec
out
les
dec
sbb
rolb
inc
xchg
cmp
mov
into
lods
xor
imul
adc
sub
mov
inc
ss
ljmp
inc
int
push
test
lock
xchg
test
xor
outsb
dec
push
inc
sarl
mov
jl
out
add
adc
je
pushf
arpl
mov
dec
push
jns
adc
fcmovb
pop
jbe
ss
pop
push
clc
lret
mov
fs
repnz
cwtl
scas
rolb
sbb
jle
movsb
xchg
mov
sbb
sub
jle
lea
pop
xor
mov
hlt
and
mov
or
js
mov
dec
test
lea
jp
invd
mov
lret
lock
xchg
pop
inc
imul
inc
dec
jb
pop
lret
loopne
push
mov
xor
mov
push
adc
pop
sub
xchg
dec
mov
js
mov
ja
mov
push
push
loop
mov
lcall
jecxz
sti
dec
aaa
mov
lock
mov
fs
mov
lods
rclb
lock
loop
fsubr
mov
out
data16
push
lahf
mov
rcrb
data16
or
mov
jl
push
dec
pop
push
divl
fwait
jle
pop
outsb
dec
lahf
pop
push
xlat
sbb
mul
add
xchg
push
pushf
or
call
lods
ret
int
mov
and
lahf
in
push
jns
jp
push
jne
movsl
lret
fwait
xlat
mov
dec
dec
pop
fcompl
sbb
or
xchg
cli
or
adc
mov
call
mov
addr16
fsts
mov
add
push
inc
xor
ljmp
pop
inc
xor
pop
mov
jo
adc
mov
xchg
jb
mov
adc
ret
fs
mov
push
mov
clc
xchg
sbb
leave
nop
mov
outsl
pop
rorl
adc
and
scas
cmpsb
adc
inc
sub
push
into
push
sbbb
xor
test
mov
leave
insb
test
lahf
es
mull
push
sub
aas
or
shl
xor
popf
inc
scas
addr16
lcall
lret
cmpsb
sbb
ja
push
lret
jge
pop
fcom
jae
mov
sahf
add
cld
mov
movsb
inc
xchg
stos
sti
sub
cwtl
jmp
fstl
and
and
push
xchg
cmp
outsb
fcoml
sbb
loope
inc
outsl
fildl
ljmp
loop
adc
not
inc
sub
lods
add
xchg
and
xor
mov
lret
cmp
add
push
jge
fs
xchg
out
inc
in
inc
push
push
arpl
out
xor
xor
pop
sahf
jne
cmp
push
jo
inc
mov
sbb
fiaddl
xchg
stos
ja
cmp
xor
fs
dec
movsb
xchg
dec
shlb
mov
addl
dec
xor
in
insb
mov
or
rolb
outsb
mov
xchg
shlb
stos
jb
mov
or
xchg
add
fidivs
insl
fmull
outsl
push
adcb
and
sbb
int3
and
add
shll
xor
pop
cmpsb
cli
sub
cmpsb
enter
jecxz
test
fdivrl
je
shll
xor
into
loope
leave
pop
lock
mov
loop
lcall
ror
mov
jns
fisttpll
push
cmpsl
mov
cmp
adc
aas
arpl
sahf
cwtl
movsl
sub
test
inc
dec
adc
xchg
popf
loope
mov
ljmp
sub
int3
sbb
or
and
cltd
pop
mov
or
scas
popa
popa
add
jo
orl
mov
xchg
sub
mov
sbb
push
xor
lret
inc
loop
out
pop
dec
mov
mov
mov
dec
xchg
out
scas
jae
add
fsubrl
aad
stc
jnp
sub
inc
jo
cmpsl
mov
cmpsb
sub
fsubl
or
xor
mov
push
xor
adc
jbe
sub
pop
mov
add
divl
jle
sahf
outsl
add
sub
lret
jg
insb
out
cli
lea
pop
cli
and
jb
cmp
sbb
jnp
aam
cmp
pushf
jne
inc
mov
test
and
repz
in
dec
mov
in
push
mov
xor
or
loopne
fdivl
cmpb
insb
mov
pop
fbld
in
jns
sbb
cmc
insl
out
xor
faddl
mov
sbb
scas
xchg
push
ret
outsl
repnz
push
pop
std
sbb
sub
xchg
stos
and
or
lcall
hlt
push
leave
or
dec
pop
std
ret
add
jmp
stc
or
or
loope
cmpsb
repnz
iret
movsl
inc
aam
sbb
dec
push
jb
inc
lea
mov
mov
stc
pop
fidivs
pop
xchg
push
push
xchg
sub
sbb
shr
mov
mov
push
imul
xor
pop
pop
daa
in
mov
mov
testb
mov
shl
xor
mov
sbb
daa
and
daa
addr16
sub
aaa
or
xchg
sbb
adc
mov
cmc
pop
idiv
jmp
lods
call
mov
cli
gs
jne
mov
insb
jp
mov
pop
xor
xor
mov
push
and
push
adc
popf
xor
outsb
and
fadds
add
testb
sub
push
xchg
mov
sub
dec
lret
mov
out
sbb
adc
incl
iret
imull
inc
sbb
xchg
fisttps
inc
pop
sbb
lds
loope
adc
cmpsl
xchg
pushf
jbe
hlt
or
adc
pop
hlt
daa
cmp
mov
xlat
insl
das
popf
aam
push
lods
adc
adc
clc
dec
movsl
je
push
inc
rorl
mov
dec
fistpll
dec
jp
fwait
jno
pop
sbb
mov
sarb
ret
fcoml
test
insb
add
insb
xchg
cld
xor
mov
out
dec
adc
cltd
inc
cmp
outsl
mov
popa
xchg
cltd
aam
pushf
xchg
cli
mov
pusha
or
and
es
xchg
ret
call
inc
bound
into
cmovge
out
cmp
add
and
xlat
cmp
shrb
imul
inc
push
mov
add
inc
cli
mov
mov
xchg
mov
loope
addr16
xchg
push
mov
nop
pop
insl
arpl
fs
cmp
movsb
xchg
fs
cmc
and
int3
scas
sarb
xor
loop
test
adc
sub
stos
orb
es
push
pop
ds
imul
or
jno
out
popa
pop
or
pushf
mov
jl
cmp
add
jl
push
loop
mov
inc
out
xchg
dec
movsl
or
mov
aaa
sbb
jo
iret
fld
add
bound
push
daa
sbb
jno
jle
push
aaa
mov
add
fs
mov
push
je
test
or
scas
divl
mov
les
mov
leave
lods
stos
push
into
jae
xchg
inc
into
cli
jle
jne
push
in
mov
scas
imul
push
xor
int
push
outsb
push
cmp
sarb
jb
bound
sbb
test
cmp
sub
jmp
inc
in
mull
jge
out
pop
dec
mov
cmpsl
sub
mov
js
es
push
push
mov
adc
mov
and
fcmovu
cmp
jne
popa
ss
outsl
or
dec
addr16
fldt
bound
jl
inc
fiaddl
adc
scas
sub
pop
jo
test
ja
fcoml
mov
inc
mov
pop
jns
pop
jns
test
pop
push
dec
scas
cmp
shlb
leave
and
outsb
or
jl
lods
mov
int3
ljmp
adc
movsl
pop
pop
imul
gs
pushf
jle
insl
idivb
add
cmpsl
push
and
xlat
imul
in
xor
dec
or
mov
cmc
pop
in
push
ss
cmp
jle
xchg
adc
repz
xchg
ds
cmp
and
mov
adc
outsl
xor
aam
mov
cwtl
cmp
push
popf
out
mov
mov
stos
fnstcw
jecxz
bound
mov
cmp
or
test
mov
sbb
addr16
fsubr
push
jp
sub
fnstsw
repz
ja
add
push
clc
nop
lret
scas
in
inc
pop
loope
adc
stos
xchg
dec
inc
xchg
mov
cmp
iret
sti
mov
sbb
loope
sub
sub
imul
fists
cmp
jmp
pushf
insl
call
cmp
fists
cmpsb
shl
ds
sbb
sbb
mov
ja
pop
movl
rol
hlt
xor
ds
rorb
shr
adc
push
in
ds
out
ds
dec
popf
mov
mov
dec
in
cmp
int
inc
cmpsb
je
jno
jnp
mov
mov
cmpsl
adc
imul
call
sub
scas
cmp
lcall
call
mov
or
fs
push
mov
and
rorl
pop
pop
dec
cmpsl
pop
jecxz
jnp
dec
testb
pop
jge
fs
jle
pop
mov
loop
sub
xchg
mov
lds
lods
test
cmp
and
cs
pusha
sbbl
sti
xchg
test
pop
pop
and
mov
pop
js
popa
out
fs
sbb
xchg
in
xchg
push
mov
cmp
adc
adc
push
clc
pop
dec
mov
pop
stos
mov
add
loop
stc
lret
ja
cmp
mov
fwait
jecxz
lret
and
and
pop
xchg
adc
aam
adc
mov
ljmp
shlb
loope
sbb
sub
fwait
dec
aaa
mov
andb
push
cltd
loopne
sbb
sbb
xor
fsubl
xchg
imul
pushf
mov
fs
pop
cmp
xchg
cmpl
jl
test
lahf
scas
push
ret
out
pusha
add
mov
dec
jne
loop
jmp
loop
jmp
popa
dec
cwtl
sar
mov
mov
mov
inc
ss
mov
ficompl
movntq
out
sbb
test
inc
imul
scas
mov
out
out
test
ss
sub
imul
inc
test
pop
push
idivl
xchg
dec
and
adc
adc
and
scas
jge
jl
add
jb
xchg
rcl
test
not
shrb
stc
fwait
jns
mov
adc
str
cmpsl
xchg
in
lea
or
xchg
mov
out
sub
dec
les
leave
inc
sub
jns
pop
push
pop
ret
dec
imul
cmp
test
cld
ja
adc
adcl
jmp
out
xchg
sbb
xchg
fdivr
dec
sbbl
pop
sbb
cmp
ficompl
or
test
test
das
ja
xor
and
inc
inc
mov
push
cli
mov
testl
sbb
ss
ds
cmp
push
xchg
inc
push
jle
inc
cmp
mov
add
xchg
pop
lea
add
jnp
jl
dec
push
adc
out
xchg
cmc
jbe
jb
outsl
pop
dec
adc
pushf
pop
rcl
shl
mov
dec
gs
daa
dec
rol
and
je
jo
imul
test
ret
shlb
in
add
push
js
pop
xlat
pop
fnstsw
mov
stc
push
jle
sahf
pop
xor
dec
sub
push
insl
ds
sub
adc
add
cwtl
jnp
fwait
shrl
dec
sub
mov
pusha
rcrl
test
cmc
cmp
popf
push
mov
jg
pop
ror
movsb
push
pop
push
lret
fimull
dec
aaa
aas
cmc
push
fnsave
push
push
pop
or
sbb
sbb
fstpl
cmpl
in
push
pop
sbb
cmc
movsl
mov
push
mov
and
add
fmulp
movsb
or
push
movsl
sub
test
lock
cmp
add
mov
ret
shll
int
xchg
stc
subb
mov
shrb
idivl
xor
into
fs
lds
cmp
sub
jne
sub
xchg
pop
imul
cmp
popf
aam
xor
pop
jle
sbb
std
jb
fdivs
rolb
xchg
push
fstps
mov
push
sbb
das
adc
call
push
xlat
in
jmp
repz
jmp
int3
and
inc
cmpsb
shlb
aas
outsl
jne
and
or
pop
fsts
gs
scas
clc
in
and
nop
push
mov
jbe
mov
mov
int
sahf
in
jg
xchg
sbbl
stc
push
mov
popf
fnstsw
dec
xorb
adc
aam
sub
jno
jg
jns
jmp
shrl
xchg
inc
jecxz
fidivs
shlb
adc
push
psubq
mov
ljmp
jbe
loop
loope
test
inc
cmp
test
sti
in
fistps
mov
das
icebp
mov
sbb
pmaxub
cwtl
cmpsb
mov
and
pop
loope
jg
pusha
xor
cmp
lret
negb
pop
jns
js
out
jo
mov
sub
adc
add
jle
xor
adc
in
and
scas
sbbl
add
xchg
jno
jecxz
xor
repz
arpl
cmp
and
add
push
mov
and
addr16
insl
sti
mov
fdivl
mov
or
shr
mov
or
or
sbb
fdivrs
jnp
fcos
popf
das
push
sarl
mov
clc
call
cmp
fs
add
rcll
cmc
push
sbb
mov
push
in
xchg
adc
lret
or
xchg
stos
sub
jo
mov
andb
stc
scas
lea
xchg
jl
cli
icebp
in
mov
jb
inc
sar
fmull
outsb
fildl
cmc
xor
in
outsb
xor
enter
and
fdivrl
adc
push
insl
and
popf
mov
mov
mov
fadds
and
jge
call
xchg
fwait
mov
mov
sbb
cmc
cmp
enter
repnz
das
cmp
push
inc
in
mov
cli
scas
push
out
jle
scas
push
dec
sub
cs
sbb
or
frstor
cmp
insl
adc
and
push
lds
xorb
repz
les
xor
sbb
jno
orb
push
mov
iret
test
scas
add
mov
adc
xor
fs
gs
outsb
loope
fstps
fbstp
fld
inc
inc
push
pusha
rcrl
outsb
lock
aad
stc
js
add
je
dec
lret
jno
inc
ja
add
or
cli
scas
leave
fiaddl
jns
cmp
jmp
or
push
inc
mov
dec
cmpsb
adc
in
insb
lods
call
aad
jmp
cmpsb
and
push
push
rorb
leave
cmp
int3
pushf
add
sti
cmc
imul
repnz
loopne
mov
mov
outsb
inc
pushf
arpl
add
sbb
test
cld
adc
out
sti
sti
add
jmp
std
std
cld
in
sub
sub
jno
cmpsb
testl
out
cmp
sbb
outsl
add
mov
loopne
popf
fs
or
mov
ljmp
pop
jbe
pusha
add
pop
pop
or
add
fimuls
paddusb
pop
xor
inc
jo
or
popf
mov
out
gs
out
pop
sbb
pop
test
sub
test
popf
pop
pushf
xchg
in
lcall
in
jge
push
mov
lods
sbb
xor
imul
jl
mov
ds
cmc
out
rcr
mov
enter
sub
and
sbb
fiaddl
add
daa
pop
dec
icebp
test
pushf
in
inc
fld
xchg
lds
cli
out
lock
jo
inc
std
mov
adc
adc
jle
pop
lea
pop
js
cmp
fdivrl
enter
insb
sbb
addb
cli
pop
dec
push
inc
je,pt
jg
push
cltd
call
leave
mov
jp
sbb
inc
fdiv
inc
fwait
test
push
inc
je
hlt
loopne
jb
or
dec
sbb
adc
jb
sub
pushf
imul
jge
test
mov
xchg
lahf
pop
clc
scas
ss
inc
sbb
int
xor
out
shll
jae
inc
loop
and
mov
fs
cmp
jnp
or
ja
aad
mov
xor
mov
dec
and
push
fistps
mov
add
jp
push
mov
cmpsb
jno
adc
fsubr
mov
inc
mov
mov
xlat
call
loopne
movsl
and
and
sbb
sahf
in
out
fcoml
or
push
std
rolb
aad
or
rol
sbb
jnp
fsts
outsl
mov
es
jbe
ja
scas
jl
xchg
loope
pop
enter
testb
jnp
mov
inc
mov
clc
clc
mov
out
jo
mov
ret
sti
sub
in
imull
jo
mov
xor
es
mov
lret
adc
mov
out
fcomps
jp,pn
mov
out
push
nop
or
mov
shrl
lcall
hlt
cwtl
test
push
addb
push
cmpl
into
dec
sub
bnd
xor
movsb
gs
push
in
push
xchg
cmc
ja
mov
xchg
and
dec
xlat
aaa
mov
loope
xchg
fucomip
or
xchg
js
rorb
push
pop
outsl
add
nop
imul
out
subb
cmp
xchg
or
popf
inc
xchg
adc
jnp
shlb
cwtl
sbb
fidivrl
jne
dec
mov
adc
xchg
mov
pop
inc
imul
fdiv
dec
cwtl
and
popa
pop
aad
mov
mov
pop
lea
jmp
jmp
push
pop
inc
and
movsb
arpl
mov
shll
or
fmuls
cmp
jg
idivl
mov
cmp
test
movsb
ficompl
mov
mov
stc
jl
sbb
xchg
xchg
mov
pop
imulb
add
arpl
dec
data16
jmp
pop
jecxz
mov
mov
out
jg
pop
es
adc
cltd
jae
popa
dec
or
lock
test
in
xor
es
and
push
mov
into
stos
fildll
mov
enter
or
stc
mov
std
adc
xor
jecxz
sbbl
push
cmpsb
fucomp
xchg
jo
movsl
adc
xor
movsb
fwait
bound
pop
int3
mov
adc
jmp
cmpsb
shr
aaa
jmp
mov
mov
ds
and
test
xchg
inc
insb
add
sbb
sbb
mov
lods
fisttps
push
leave
and
or
in
icebp
bound
dec
aaa
jg
fdivr
dec
cmp
rorl
daa
pop
testl
pop
sub
lahf
adc
jno
adc
inc
cli
sti
jmp
mov
sbb
mull
pop
lock
outsl
mov
xor
adc
lahf
jle
or
jae
addb
xchg
or
or
mov
mov
or
in
cs
pop
addl
mov
mov
daa
movsb
mov
loop
daa
and
into
outsl
repz
aaa
mov
fsubl
movsl
stc
push
shrl
pop
adc
repz
xchg
fisubs
xchg
pop
push
scas
inc
jle
sbb
mov
mov
ret
cmp
inc
rcrb
cmp
mov
gs
adcl
icebp
jne
lock
in
push
xchg
adc
aaa
mov
insl
in
mov
out
jecxz
cmp
xchg
mov
add
or
add
mov
pop
out
dec
xor
aad
js
push
push
pop
and
push
mov
adc
les
pop
inc
in
out
lcall
out
lret
inc
cs
mov
adc
pop
push
cmc
xor
dec
ret
and
outsb
jmp
xchg
mov
push
push
mov
or
movaps
das
xchg
fnstcw
xor
mov
movsl
mov
aam
cmpsl
ret
in
leave
mov
push
xchg
cli
mov
xchg
aam
mov
xor
stos
jne
cmc
mov
xchg
ret
arpl
cld
mov
bound
sub
repz
add
jge
sbb
out
daa
inc
fcomps
push
dec
pop
sub
daa
sbb
add
ss
pop
mov
adc
repz
xchg
jmp
fistl
and
jo
fists
idiv
roll
xor
xor
fstpl
fstl
xor
cmp
xor
sub
push
xchg
shlb
stos
in
dec
or
inc
add
adc
and
lret
add
pop
and
movl
sub
adc
pusha
insl
push
or
adc
je
stos
repnz
ja
repz
fcomps
out
jle
sbb
pop
push
mov
aas
ljmp
sub
and
sbb
in
xchg
dec
cmp
jg
inc
push
out
out
shlb
idiv
jle
in
test
scas
inc
lea
mov
aam
xor
xchg
cmp
cmp
or
arpl
inc
jg
push
jge
dec
aam
jp
shl
pop
dec
lahf
push
jmp
in
sub
jg
aas
test
jmp
jbe
inc
and
xchg
jo
outsl
sbb
mov
shrb
shl
and
das
mov
sbb
std
pusha
add
mov
inc
xchg
imul
mov
sbb
out
sub
inc
jno
negl
daa
dec
xchg
test
xchg
mov
and
push
cs
icebp
add
sbb
cli
sub
je
test
arpl
inc
xchg
mov
push
test
lret
mov
pop
pop
push
sbb
lcall
xchg
les
mov
addl
sbb
fisubrs
sti
and
jge
sub
xchg
xchg
dec
inc
xlat
test
jne
jnp
inc
sbb
scas
pop
push
daa
sbb
scas
sbb
push
add
scas
int
mov
sbb
sub
pop
mov
lods
and
inc
fcmovu
mov
addr16
mov
sbb
xchg
sahf
dec
stos
mov
in
jmp
imul
and
orb
jp
lds
subb
fwait
jp
stc
xchg
pop
pushf
das
fcomi
cmp
movsl
fdivl
adc
jmp
or
outsb
push
repnz
out
and
int
sub
inc
rolb
stos
sar
pop
out
cmpsl
mov
xor
js
adc
xchg
fldcw
in
push
icebp
push
movsl
imul
add
es
dec
pop
jb
lea
push
das
repnz
aas
adc
out
int3
push
test
js
mov
xchg
fs
sbb
comiss
push
push
stc
jle
fucomp
add
xchg
and
adc
or
mov
push
sub
jecxz
xor
cmp
mov
in
test
cmc
sbb
rcl
sbb
fistps
dec
push
adc
fisubrl
call
loopne
sbb
cmpsl
xchg
aas
flds
aas
mov
ja
dec
adc
int
dec
insl
imul
dec
iret
in
and
inc
loop
aad
in
sub
jns
insl
fscale
pop
inc
and
jns
inc
sbb
aad
jg
xor
out
iret
or
cld
mov
testl
fs
or
nop
cmc
ja
mov
push
mov
adc
xchg
fadds
testb
pushf
aam
gs
inc
in
push
add
mov
sub
jmp
jae
sub
pop
mov
xchg
mov
sti
sbb
mov
sahf
xchg
push
pusha
jne
jle
xchg
aam
push
mov
ja
leave
pusha
in
outsb
sbb
ss
pushf
insb
adc
mov
sub
or
js,pt
popf
ret
shll
mov
cmp
cmpsb
push
pop
lods
and
inc
lret
imul
adc
push
dec
mov
sub
cmpb
dec
and
in
fmuls
outsl
mov
dec
jnp
lods
sbb
cmpsb
push
pop
sti
in
inc
negl
insb
inc
mov
cmp
mov
out
push
mov
ss
pop
rorb
rcrl
adc
enter
dec
xor
loopne
mov
ss
mov
leave
and
xchg
fwait
mov
or
and
sbb
rclb
mov
xchg
cmp
dec
imul
out
jb
das
inc
sbb
jg
outsl
into
sub
jg
pop
shll
cmp
testb
pusha
add
popa
mov
mov
xor
xlat
xlat
fiadds
dec
pop
fwait
pop
jbe
xor
mov
ja
out
inc
dec
adc
cltd
pop
hlt
jge
mov
sbb
mov
fsts
dec
dec
je
xor
mov
jae
insb
xchg
rcr
mov
addr16
mov
mov
js
and
push
sbb
mov
push
mov
gs
ror
pop
push
cs
pop
push
or
sarl
dec
dec
inc
jmp
adcl
mov
sti
shll
add
cmp
pop
pop
push
mov
divl
repz
inc
fs
mov
ret
mov
pop
imul
pop
push
sub
fdivs
jae
call
xor
pop
cwtl
mov
fmul
jb
mov
sti
cmc
add
sbb
pop
insb
sbb
push
mov
repz
stos
leave
mov
roll
pusha
mov
mov
ret
xchg
out
or
sub
test
lds
jns
cmp
fwait
sti
cmc
and
sub
iret
add
ds
insb
push
outsb
push
jmp
adc
movsl
mov
jbe
addr16
mov
cli
cld
mov
pop
das
clc
in
mov
popf
sbb
lds
pop
in
xlat
into
adc
je
lods
mov
fidivrs
test
push
and
js
popa
sbb
test
cltd
int3
stos
not
das
out
pop
cwtl
les
test
stos
pop
jmp
mov
cli
out
jecxz
cmp
lret
pop
inc
or
dec
cli
bswap
sbb
test
rol
arpl
test
out
add
dec
aaa
mov
jbe
sbbl
aas
push
dec
leave
jb
inc
wrmsr
push
repz
pop
aas
lock
stc
adc
push
push
insb
push
jno
mov
mov
adc
sub
xchg
mov
repz
push
movsb
cmpsb
aaa
push
in
fsubr
push
dec
add
sbb
push
xor
rorb
dec
loopne
cmpl
fldenv
fldcw
sub
cs
popf
cwtl
adc
mov
stc
dec
cmp
push
rol
or
sub
in
jmp
jp
fsubr
dec
gs
pop
lret
fwait
sbbl
jae
sub
jl
add
popa
jmp
neg
scas
add
xor
cltd
test
sahf
loope
pop
sti
jecxz
daa
shlb
test
cmpsb
out
cmpsl
mov
mov
adc
fdivr
xchg
ret
mov
lcallw
es
mov
jbe
lods
adc
cmp
rorl
sbb
bound
and
stc
mov
imul
push
jge
push
jge
in
xor
and
jo
dec
fisttps
pop
scas
jmp
fnstcw
rolb
cld
adc
outsl
push
sbb
data16
ljmp
jno
outsb
push
aad
scas
dec
pop
orl
mov
xor
iret
ficompl
icebp
lcall
mov
xchg
or
mov
lcall
ljmp
inc
dec
sub
or
xchg
sub
stos
aam
idivb
inc
ffree
ffreep
je
cmp
mov
cmc
jne
push
add
mov
dec
nop
dec
mov
jnp
mov
repz
xchg
pusha
xor
mov
mov
cmp
xchg
js
enter
mov
lock
outsb
push
aaa
idivl
sbb
xchg
push
fs
cmc
int3
enter
pushf
and
xchg
sub
rorl
data16
inc
jno
loope
mov
cld
mov
inc
jns
cmc
lcall
inc
fbstp
notb
int
pop
das
repz
and
call
int3
testl
dec
dec
lcall
outsl
pop
xor
hlt
xor
mov
pop
faddp
ret
pusha
mov
jo
push
bound
enter
xorb
rolb
xorb
lcall
inc
aaa
jle
rcpps
cmpsl
int3
stc
add
je
xchg
fists
insb
xchg
push
scas
jno
xchg
divb
std
xor
rclb
push
push
rorl
movsl
shrl
lret
aam
mov
sbb
push
sub
mov
adc
cmp
push
and
lds
stos
fists
sti
sbb
mov
xchg
pop
dec
roll
mov
cmpsb
dec
mov
insb
adc
stc
leave
push
mov
mov
push
jle
cmp
insb
cli
sbb
scas
xchg
imul
test
sub
call
mov
adc
stos
dec
cmp
shlb
test
in
xchg
inc
inc
std
xchg
out
sub
push
mov
and
lret
mov
pop
cmpsb
aas
push
adc
push
jno
je
ss
repz
cwtl
sub
outsb
clc
mov
sbb
test
mov
shlb
fwait
ljmp
dec
adc
and
mov
pop
pushf
mov
mov
loope
lds
popf
xor
pop
aad
mov
icebp
push
adc
mov
and
xchg
stos
push
xchg
ret
jmp
xor
shlb
cmc
adc
dec
xchg
adc
leave
dec
mov
push
lock
outsl
in
push
hlt
daa
iret
mov
and
mov
jmp
jbe
and
sub
lods
stos
mov
cwtl
sbb
sub
pusha
cmp
cs
out
cli
inc
mov
ds
cmp
mov
push
outsb
and
lret
push
test
enter
ret
mov
mov
jb
adc
ljmp
or
inc
mov
mov
loope
imul
outsl
jbe
cmpsl
enter
inc
into
add
lret
push
inc
xor
push
mov
in
inc
mov
sub
sbb
nop
and
test
das
mov
sbb
mov
sbb
js
jle
data16
cmc
arpl
sub
filds
pop
mov
aas
xor
addr16
data16
jb
loope
jge
sbb
mov
std
adc
outsl
cmp
mov
jno
adc
xchg
and
mov
or
mov
rolb
xchg
std
pop
push
addb
pop
into
dec
jg
push
stc
fsts
aas
lahf
push
out
ret
jno
enter
mov
mov
outsb
rclb
pop
push
or
jbe
or
lock
lcall
dec
lds
mov
xor
inc
sbb
sbb
push
xor
dec
jnp
aas
sub
dec
jge
sbb
xchg
push
stos
xorl
mov
cmp
inc
mov
jb
and
call
mov
mov
mov
cmc
roll
aad
pusha
aam
in
and
mov
cmp
roll
lret
jg
sahf
outsl
out
les
and
and
stos
mov
dec
aad
xchg
movsb
add
nop
fdivs
fidivl
lds
ror
mov
xorb
dec
jae
mov
rclb
and
iretw
movsb
pop
arpl
es
icebp
dec
addr16
sub
push
mov
mov
mov
and
push
in
js
xchg
pop
and
inc
pop
pop
sbb
mov
push
fiaddl
jb
sbb
and
inc
xchg
push
test
lret
int
mov
stos
imull
clc
adc
inc
fisubrs
or
pushf
ss
sub
cli
ljmp
repz
jp
cli
andb
imul
mov
add
sub
xor
ds
fstl
and
cmp
mov
daa
jnp
mov
lret
or
fnstenv
jae
in
rcrb
in
sub
add
dec
addl
sub
mov
add
es
mov
xchg
imul
dec
das
jae
sub
and
rcrl
rclb
cs
push
mov
mov
sarb
les
inc
mov
arpl
xchg
sbbb
in
rcr
inc
inc
test
cmp
aam
in
mov
push
rcl
or
int3
inc
stos
fwait
pop
xor
push
dec
addb
mov
aad
das
dec
out
jnp
cmp
xor
jp
shlb
sub
movsl
pop
rorb
adc
sbb
je
pop
cmp
inc
mov
mov
sub
mov
pop
mov
pop
pop
mov
adc
pop
adc
mov
cmc
jmp
enter
jns
into
xor
mov
loopne
ljmp
testb
inc
cmp
xchg
cs
add
mov
cwtl
ret
addr16
mov
call
pop
hlt
js
outsb
push
xor
adc
jecxz
adc
out
call
js
pusha
addr16
test
mov
mov
sbb
stos
pop
or
xor
xchg
div
add
or
inc
sbb
shlb
mov
cwtl
mov
sbb
scas
cmp
bound
mov
adc
loop
mov
dec
pop
xchg
out
mov
fistpll
xchg
and
adc
sub
lret
rcrb
jmp
mov
mov
sahf
adcb
lds
fs
and
inc
aas
in
int3
outsl
arpl
push
insb
adc
les
rcll
sarb
jnp
mov
mulb
mov
mov
or
add
mov
fists
ret
dec
icebp
jecxz
jbe
push
in
hlt
pop
dec
mov
stos
popf
loopne
push
adc
lahf
mov
jne
jo
add
arpl
adc
cmp
add
and
dec
mov
lds
shrb
mov
mov
jmp
xlat
hlt
out
mov
test
pop
jb
ja
movsl
push
push
cmpsb
mov
cwtl
mov
ss
in
test
pusha
or
insb
inc
imul
mov
fs
cld
mov
ficoml
mov
fstp
int3
xor
xor
pop
inc
xor
into
std
orb
push
into
mov
div
jmp
adc
xchg
fs
or
mov
mov
loop
inc
fsts
xor
and
and
cmp
jnp
pop
mov
sahf
clc
dec
insl
mov
fucom
mov
cmc
push
push
call
loope
or
pop
dec
shl
das
into
icebp
mov
cmp
testb
leave
cmp
out
mov
imul
or
pop
divl
hlt
mov
mov
test
cmpsb
data16
or
pop
push
sub
pop
cmp
movsl
dec
lods
fcmovbe
nop
and
out
jmp
sahf
stos
arpl
gs
mov
mov
icebp
repnz
jl
movsb
sti
push
sub
adc
imul
loope
or
fadd
shl
push
lret
xor
jae
cmp
adc
pop
cmp
and
test
neg
cwtl
or
sbb
inc
xchg
cmpsl
xor
add
inc
loopne
in
mov
xor
adc
and
je
fsts
xlat
or
or
hlt
push
insb
add
mov
sbb
es
shrb
mov
lcall
mull
jo
mov
adc
push
adc
xchg
xchg
imul
xchg
leave
pop
imul
jnp
sarl
xchg
sub
insb
inc
jnp
shlb
mov
outsl
mov
jo
scas
outsb
cld
in
lods
mov
cmp
inc
arpl
scas
xchg
test
pop
xor
xchg
idivb
mov
and
or
dec
fidivrl
inc
in
scas
mov
inc
xchg
frstpm(287
add
repnz
and
in
imul
outsl
das
data16
sub
pushf
rorl
bound
add
pop
test
cmpsb
jge
test
jns
pop
fisubs
test
or
stc
push
pop
sahf
outsb
mov
popa
clc
cmovo
leave
scas
std
repnz
idivl
orb
jmp
btc
mov
adc
push
movsl
dec
popl
js
cmpb
xchg
xchg
adc
cld
leave
out
mov
fildl
or
pop
pop
lods
popa
inc
sub
push
in
repnz
enter
repnz
aam
mov
jne
das
dec
cmp
xor
fisttpll
ss
xchg
mov
adc
inc
ficompl
mov
ficoml
loop
inc
popa
xchg
sahf
inc
or
pop
sub
shlb
mov
add
dec
xchg
xor
push
pushf
pop
xchg
jae
xchg
and
fmul
mov
mov
es
int
xchg
adc
or
int
sbb
dec
shll
sbb
cmpsl
sub
mov
fwait
xchg
call
popf
mov
out
scas
sbb
imul
inc
push
mov
xchg
pop
adc
pop
enter
icebp
popf
mov
push
push
push
dec
popf
adc
imul
das
pop
dec
int3
xor
push
shl
shrl
inc
hlt
pop
out
js
int3
rcrl
push
clc
and
movsl
dec
sbb
mov
jno
dec
jbe
sbbl
je
sub
insl
cmc
in
enter
push
pop
push
test
ficomps
mov
and
shl
dec
out
pop
cmp
inc
add
cmp
and
or
pop
out
xor
xchg
cld
cltd
fisubrl
mov
sbb
loop
das
test
std
lods
sub
sbb
jno
adc
inc
fdivp
aas
mov
xchg
push
ds
bound
mov
jle
jmp
push
push
mov
ret
inc
cmp
fwait
or
in
push
hlt
cld
push
or
adc
lret
adc
popa
add
inc
popa
and
test
sarb
insb
xchg
out
into
lahf
and
shlb
pxor
dec
jno
es
add
lds
rorb
enter
mov
inc
fisttps
inc
jns
adc
jl
loopne
out
repz
cwtl
mov
inc
adc
fimull
mov
in
add
cmc
inc
fstpt
lods
scas
xchg
push
dec
lea
fstl
aaa
cmp
lods
pop
cmp
mov
push
mov
and
add
push
mov
lret
push
fstpt
mov
and
mov
mov
das
stc
cmc
mov
add
jl
xchg
ficoml
fs
mov
push
repz
xor
jb
fs
jl
push
and
int3
xor
mov
into
fnstsw
sub
in
xor
aad
sahf
push
in
and
aad
movsb
add
insl
jb
aad
out
cmp
nop
nop
ret
inc
xchg
dec
sti
or
adc
fisubrs
lret
inc
loope
loop
sahf
and
jecxz
mov
dec
mov
xchg
cmc
mov
lods
jne
xor
lcall
or
call
jno
aam
xchg
jp
pop
jl
xor
dec
in
mov
jecxz
jecxz
scas
mov
adc
pushf
popf
in
sub
inc
ret
pop
inc
popf
ss
lds
pop
cmpsl
cmpsl
jne
push
daa
lahf
push
add
xor
sbb
xor
or
push
es
sub
and
xor
xchg
sbb
push
mov
addb
sbbl
push
lods
and
xchg
adc
push
cmpsl
cld
pop
js
jo
incl
pop
movsl
shlb
xchg
clc
dec
jmp
mov
push
mov
pushf
add
and
mov
aad
enter
xor
sub
xchg
pop
stos
sahf
in
cmp
jl
roll
shrl
and
idiv
sub
into
xchg
stos
jae
mov
repnz
in
jl
mov
jle
xchg
stc
push
fistpll
pop
pop
adc
add
and
testl
inc
push
cmp
or
cmp
outsb
cwtl
pop
orl
in
test
ljmp
rclb
lds
sbb
xor
cmpsl
push
add
scas
shl
dec
add
xor
fildll
ret
xor
js
lds
pop
cltd
fwait
sub
xchg
sub
jns
pop
stos
adc
dec
jns
lock
cmpsl
test
sbb
hlt
dec
gs
data16
lock
mov
adc
mov
jp
cmp
xlat
iret
sbb
test
js
mov
call
pop
into
imul
xor
test
pop
dec
in
out
xchg
roll
inc
fwait
shll
ja
push
lcall
and
push
insb
dec
inc
mov
sbb
lods
neg
mov
in
mov
popa
push
call
xor
ret
inc
mov
pop
mov
and
fbstp
je
sub
adc
in
ror
fldcw
xor
jp
jne
lret
push
or
loopne
jae
xchg
shll
mov
xchg
xor
xchg
rol
sarb
in
insb
aam
stos
xor
or
cltd
mov
dec
jecxz
pop
add
lret
scas
push
push
sbb
xchg
pop
arpl
repnz
inc
adc
pop
cwtl
movsb
add
out
into
jnp
xlat
testl
out
stos
lea
repnz
aam
add
mov
and
pop
imul
adc
xor
shll
clc
fcomip
dec
mov
mov
fistps
mov
or
shll
sahf
mov
push
or
data16
push
in
jp
xor
add
aam
lahf
mov
mov
pop
mov
inc
xchg
adc
lock
and
je
pop
jl
push
movsb
inc
jae
stos
aas
sub
enter
push
data16
jo
push
nop
and
addr16
xchg
and
mov
js
add
pop
lcall
jb
enter
sub
xorb
push
adc
jecxz
cmc
hlt
sti
cmpsl
shrb
int3
gs
lods
sub
mov
dec
insl
push
cmp
jp
loopne
mov
nop
loop
lcall
lret
pop
hlt
or
xchg
imul
jp
sub
add
inc
pop
sub
into
in
mov
and
adc
movsb
mov
imul
out
cld
inc
in
cmpb
sbb
stos
and
adc
cmp
inc
mov
imul
xchg
mov
inc
sub
test
jns
ss
add
inc
test
add
inc
pop
jae
lock
dec
fisubl
jb
or
cmp
xlat
dec
gs
push
cmp
xchg
mov
incl
into
xchg
mov
repnz
pop
and
fstp
xor
shrl
and
pusha
xchg
ja
fisubrs
ja
imul
loope
mov
xor
adc
or
popa
repz
inc
out
mov
cltd
pop
mov
pop
push
jp
xchg
imul
mov
mov
dec
movsl
add
add
enter
popf
inc
ds
xor
flds
loope
add
lcall
jae
jmp
loop
mov
inc
pop
sbb
test
repnz
test
push
mov
pop
nop
int3
ror
les
jb
adc
sub
jb
shlb
divb
fiaddl
pop
std
mov
jecxz
ljmp
push
rol
adc
jp
mov
faddp
mov
inc
popa
cmpl
pop
adc
xor
fnstcw
push
sbb
push
sbbl
popa
push
push
xor
in
pop
push
jne
sahf
mov
inc
imul
cmp
xchg
and
jns
xchg
rcr
pop
pop
jb
hlt
mov
test
pop
sbb
rcr
pop
dec
add
pop
add
and
add
pop
outsb
inc
loop
jnp
shlb
orb
mov
pop
int
mov
mov
pop
jns
mov
pop
movsb
inc
push
subb
mov
cmp
out
add
jmp
dec
push
lods
sbb
cmp
aam
lcall
xorb
add
imul
pop
neg
push
mov
leave
sub
jle
inc
out
jecxz
fnsaves
push
add
mov
sbb
mov
fwait
pop
sbb
mov
inc
mov
es
xchg
lock
sub
mov
cmp
ret
sbb
je
les
scas
dec
bound
xchg
pusha
xlat
ja
ljmp
pop
xor
inc
add
stos
add
add
jl
push
jo
aad
shlb
adc
fimull
xchg
mov
add
dec
jl
sbb
push
cmc
sbb
cs
jo
adc
rol
push
dec
cmpsb
test
dec
stos
movsb
repnz
ret
push
rorl
push
cmc
inc
jb
out
inc
outsl
in
test
test
mov
pop
cld
int
je
xchg
push
cmp
mov
lahf
inc
push
or
push
push
jge
daa
into
inc
or
jge
out
sbb
sub
and
cmp
jecxz
mov
insb
cmp
jbe
lock
sub
jnp
ret
ret
cwtl
or
int
cmp
fisubrs
adc
lea
repnz
mov
mov
adc
add
mov
cmp
js
xchg
or
fmuls
out
pop
arpl
nop
xchg
addr16
xor
icebp
stos
lods
or
jbe
adc
sarb
pop
sbb
mov
subl
js
in
mov
mov
or
and
push
mov
cmp
mov
lcall
and
es
imul
cld
fdivrl
out
xor
pop
and
aad
inc
bound
filds
cwtl
out
in
sbb
xchg
je
sbb
add
hlt
outsl
ja
icebp
sub
xor
in
mov
push
sbb
sub
data16
addr16
pop
shr
push
test
jne
and
pop
jo
add
lret
sub
out
or
adc
aad
cwtl
outsb
mov
pop
cld
fldl
adc
int3
mov
icebp
int
stos
add
das
mov
outsl
andl
jb
mov
dec
xor
gs
fldt
out
inc
sti
xchg
xchg
adc
add
fidivrs
jnp
arpl
das
inc
fdivl
cli
sahf
cwtl
shll
insb
sub
sub
cltd
rcrl
and
scas
js
sbb
jb
hlt
add
stc
andl
sbb
std
scas
call
push
dec
xor
sub
push
outsl
xchg
vcvtsi2ssl
insb
lds
push
mov
enter
add
inc
jecxz
ds
or
inc
fidivs
jns
dec
add
dec
mov
enter
and
lret
std
out
sbb
cmp
xchg
rorb
aaa
xor
mov
aaa
andb
mov
addr16
xchg
mov
imul
xor
outsb
test
sbb
fcom
mov
sbb
adc
dec
notl
lds
les
push
pop
mov
jne
jne
stos
fimull
mov
xor
jae
cmp
jmp
cmc
pusha
mov
xor
pushf
add
xlat
fwait
insl
popf
syscall
shll
jmp
sti
shl
shl
ja
ds
outsl
xor
and
sbb
repnz
jp
inc
adc
xchg
sbb
mov
mov
jg
out
hlt
test
popf
mov
mov
xor
and
inc
filds
push
add
pop
jle
inc
sub
divb
mov
push
sti
imul
clc
push
mov
test
sar
roll
or
and
in
out
mov
inc
cmp
negb
sub
and
mov
ret
push
test
pop
sahf
rolb
sub
cmp
inc
xlat
mov
push
mov
mov
pop
movsl
jns
repnz
or
loope
loope
mov
jb
push
test
into
push
mov
shrb
cmpl
sarl
insl
icebp
nop
dec
sub
mov
orb
aad
iret
in
xchg
xor
in
cmp
push
mov
les
imul
adc
not
sub
mov
xchg
stos
in
mov
jle
in
loopne
loop
cltd
mov
adc
fs
das
sbb
add
and
lcall
jns
jl
out
rolb
mov
fistpl
sbbb
inc
enter
mov
fbstp
loopne
int3
inc
dec
mov
loopne
loopne
and
rcll
imul
fwait
mov
add
dec
mov
mov
aas
repz
cmc
in
repnz
sub
sbb
ja
ret
xlat
mov
xchg
fcmovb
cmp
push
arpl
ret
push
mov
iret
imul
jb
push
mov
xor
dec
test
fimull
lods
repz
mov
push
pop
push
mov
inc
adc
mov
fwait
mov
fbstp
or
push
enter
xchg
jo
sbb
add
call
pop
ja
cmp
pushf
sbb
cmp
pushf
jnp
arpl
xchg
push
daa
fildl
xchg
push
ds
mov
cmp
dec
fucomp
jp
adc
stos
test
imul
or
mov
jl
sahf
jno
sti
ret
jp
sbb
jne
mov
dec
sub
cmp
jl
out
xlat
pushf
roll
xchg
nop
mov
mov
inc
mov
push
jp
mov
jbe
push
inc
or
and
mov
jno
lea
and
add
lock
push
jbe
mov
push
mov
repnz
lock
jo
xchg
into
lahf
ret
mov
aas
data16
jp
mov
mov
and
push
ljmp
jp
inc
xchg
push
notl
dec
sub
and
popa
loop
push
inc
add
loop
jp
mov
xchg
mov
stos
push
lahf
jne
lret
and
xor
push
scas
gs
jnp
ds
subl
cmp
add
cwtl
mov
mov
aam
dec
push
jb
adc
pop
jl
ficomps
enter
cmp
data16
sbb
ja
sti
es
stc
jo
enter
stos
or
test
bound
fisubrl
push
dec
push
pop
call
andb
out
sbb
mov
push
jo
out
shrl
pop
nop
rcrb
mov
mov
xor
imul
xor
cltd
andl
jge
out
cmp
dec
loope
dec
loope
popa
fidivs
sahf
test
inc
in
aaa
aaa
lahf
or
cmp
adc
push
inc
daa
sarl
cmp
lods
push
add
push
or
sbb
pusha
pop
aad
cmp
add
aad
cli
aam
gs
push
hlt
testl
pop
fists
mov
movsl
lcall
add
dec
out
push
hlt
ja
push
add
cmpsb
sub
andl
jnp
fstpt
aam
scas
xchg
push
sub
pop
xchg
fwait
push
cmpsb
outsl
into
lods
mov
imul
mov
ds
sti
fwait
test
and
sbb
inc
sbb
mov
cmc
int
sub
add
arpl
imul
cld
pop
ljmp
pop
jb
xor
lahf
push
popa
add
das
ds
sbb
scas
jmp
push
dec
into
adc
pop
inc
or
loopne
lahf
add
bswap
push
dec
push
sub
call
pop
push
out
mov
fmull
in
add
sub
cli
add
inc
ret
mov
les
lods
dec
fstp
test
rcrb
mov
cmp
movswl
dec
push
or
xor
cmp
push
sbb
jbe
pop
jb
pop
cmp
loope
stos
adc
shll
int
lock
out
and
cwtl
or
mov
add
xor
dec
xchg
outsl
add
repnz
stos
add
incb
pop
sub
ret
mov
cmp
or
or
add
and
mov
test
sbb
sti
fildl
inc
iret
aaa
fisubrs
pop
cmp
sbb
cmp
sub
sbb
mov
dec
sarb
out
lods
ret
add
sbb
loope
mov
ret
int3
aaa
sub
mov
out
pop
aaa
fmuls
pop
cmpsb
fistpl
ds
mov
sub
les
pop
adcb
mov
jne
data16
jnp
mov
adc
ret
inc
lods
sub
test
daa
inc
jnp
shrl
jne
and
in
into
pop
xor
cld
push
fwait
sbb
adc
jl
loop
ficoms
xchg
outsb
dec
cltd
notl
xor
fistpll
mov
fbstp
pop
outsl
mov
sbb
mov
jl
idivb
aas
gs
adc
icebp
sti
mov
and
icebp
fimull
loop
icebp
out
cmpsb
mov
jle
fnstcw
shll
into
call
test
xchg
dec
movsb
push
xchg
les
repnz
jbe
out
adc
pop
fwait
scas
push
xchg
cmc
jns
cmp
int
js
or
jmp
push
pushf
popa
xchg
rcrb
in
mov
leave
mov
aaa
movsb
fimuls
pop
insb
mov
out
mov
inc
fnstenv
jbe
sbb
imul
cmpsl
add
divb
lods
sbb
js
pop
push
outsb
out
cwtl
scas
movsl
jne
imul
cmpl
in
inc
pop
cmpsw
stc
push
mov
mov
mov
push
cmpsl
mov
or
adc
mov
mov
shrb
or
sbb
dec
in
sbb
ja
mov
cltd
imulb
push
roll
adc
pop
mov
cwtl
sbb
mov
dec
and
xor
data16
lret
leave
hlt
lret
mov
sub
pop
dec
stos
shl
inc
cmp
push
xchg
add
call
add
fdivrp
xlat
rcrb
adc
xchg
jg
inc
push
add
test
cmp
fwait
aas
push
xchg
sub
mov
xchg
lds
dec
mov
xor
cmc
adcb
mov
xchg
push
in
nop
mov
rorl
pop
cmpsl
shll
pop
sbb
cld
dec
xor
adc
into
mov
mov
dec
nop
jbe
dec
or
push
mov
stos
stos
pop
imul
and
out
aas
repnz
inc
dec
rolb
out
adc
xlat
pop
mov
gs
arpl
outsb
dec
mov
jmp
fwait
dec
fld
out
and
outsb
cld
call
or
push
andb
jge
repnz
xchg
or
imul
xchg
nop
cltd
lock
mov
jecxz
or
sub
mov
jg
sbb
daa
out
test
fcoms
sub
push
push
adc
dec
imul
stos
imul
push
push
cmpsl
mov
push
mov
sbb
push
movl
mov
sub
or
fsubrl
test
hlt
push
lock
mov
pop
fs
jp
lock
sbb
push
cmpsl
mov
popa
fsubp
fidivrs
mov
popf
scas
shl
shr
xor
jp
les
out
dec
cmpsl
xchg
fdivrl
lods
mov
sarb
lods
outsl
shrl
stos
dec
negl
pop
push
sti
arpl
cmc
cld
dec
dec
or
outsl
sbb
out
insl
fsubrs
fbld
mov
xor
adc
dec
aaa
push
cmp
xor
popa
jecxz
into
mov
in
mov
sub
subl
into
push
pop
addr16
loop
add
fwait
lea
aaa
sub
lcall
testl
push
xchg
les
add
and
xchg
jmp
out
add
push
cmp
cmp
sub
mov
mov
mov
in
cmp
sub
cmp
mov
adc
sub
sub
jae
ss
add
sub
jne
lods
aam
pop
into
repnz
call
add
xchg
adc
aas
add
fnstenv
pop
cmpsl
xor
and
push
testb
sub
arpl
add
pop
xchg
and
push
add
pop
mov
mov
push
pop
xchg
or
inc
ja,pn
outsb
aas
xchg
push
jp
out
xor
enter
fcomps
aas
dec
popa
nop
mov
sub
mov
jecxz
ja
fildll
pop
add
xchg
jecxz
xor
lcall
test
mov
lea
fwait
sub
arpl
mulb
and
sahf
movaps
loopne
mov
fstl
pop
sub
xorl
sub
inc
iret
cmp
mov
dec
push
mov
in
daa
sarb
sti
inc
pushf
mov
call
add
fs
addr16
pop
out
push
pushf
adc
cmc
mov
data16
or
movsl
stos
xchg
jnp
jno
jecxz
ja
loop
stc
cmp
add
ds
xchg
pop
push
pop
sub
add
mov
jge
rcrb
test
push
int
or
push
pop
call
xchg
mov
fcmovne
mov
and
ftst
sarb
or
pop
test
mov
test
jne
dec
jp
or
mov
xor
jae
lock
jle
inc
pushf
sti
in
fimuls
outsl
dec
pop
dec
loopne
push
inc
xor
stc
js
std
push
dec
xchg
fs
xchg
xor
ret
xor
cmovb
dec
pop
xchg
data16
les
adc
sub
ficoms
enter
or
sub
loopne
and
mov
ljmp
push
adc
xchg
xor
push
dec
js
push
push
xor
rorb
fwait
lods
dec
sbb
push
test
cmp
mov
aaa
jp
data16
fcompl
sbb
mov
mov
es
icebp
imull
sti
inc
pop
push
mov
jecxz
jp
and
jmp
mov
js
jmp
mov
jg
lret
pop
lahf
and
inc
add
xchg
int3
push
popa
sub
inc
cs
in
xchg
fsts
ficomps
adc
iret
xor
jg
sub
scas
pop
mov
fimull
add
xchg
adc
clc
cmp
xchg
or
hlt
sti
jp
nop
push
push
daa
push
lcall
lock
adc
stos
cmp
push
callw
out
add
std
sbb
jl
lods
add
xor
mov
lds
mov
mov
mov
or
icebp
cmpsb
jae
sbb
xchg
mov
dec
leave
lahf
icebp
add
xor
testl
or
imul
imul
loop
aas
xor
addr16
out
or
pop
pop
fidivs
scas
aas
aad
out
cs
cmp
ret
ret
and
adc
scas
imul
int
sahf
jns
ds
xor
xchg
push
aas
out
in
jnp
inc
call
jecxz
fwait
test
hlt
fisttpll
or
pusha
mov
mov
clc
dec
ja
xor
add
pop
adc
rcrl
rolb
sub
lods
loope
andb
fldcw
or
inc
aad
push
and
jb
ret
or
clc
shlb
neg
aad
xor
sbb
xchg
stos
and
dec
fdivs
push
add
and
test
lods
movsl
insb
aas
push
xchg
add
punpcklwd
lods
ret
test
dec
idiv
jo
test
sbb
fisttpll
aas
cmpl
xchg
inc
adc
das
or
inc
mov
inc
fisubrl
mov
mov
push
cmp
sbb
lds
ficoml
sub
xor
mov
dec
mov
and
shll
xchg
jmp
clc
xorl
xlat
xchg
mov
pop
push
jge
cwtl
xlat
pop
push
pop
leave
lods
mov
fcmove
xchg
pushf
push
scas
mov
popl
dec
inc
es
mov
cmpl
mov
push
push
cs
aad
sbb
xchg
iret
xor
mov
nop
push
aam
in
rcl
mov
in
mov
dec
and
mov
cwtl
or
adc
movl
dec
hlt
and
jmp
xor
ffree
in
addr16
push
and
inc
sub
in
jmp
adcb
sbb
insl
add
sub
xchg
movsl
and
popa
outsl
and
add
dec
rolb
movsl
xchg
mov
adc
pusha
std
jnp
xchg
in
jl
xor
and
mov
testl
sbb
pop
mov
push
mov
loope
lods
xor
clc
sahf
and
dec
pushw
push
jno
iret
subl
repz
cmp
mov
cmpsb
dec
jno
mov
push
movsb
movl
ret
test
ret
jno
subb
fs
xor
cmp
jp
imul
scas
sti
shlb
sub
push
test
jb
pop
jne
inc
mov
cmp
in
lods
adc
clc
vmwrite
push
or
scas
lea
sbb
fs
add
inc
pop
push
ret
dec
popa
jns
lock
test
repnz
inc
xchg
xlat
scas
fwait
inc
mov
stos
xchg
dec
addr16
lret
movsl
test
pushaw
mov
in
mov
pop
push
jnp
cmp
inc
into
inc
adc
addl
jnp
shll
shl
jg
mov
mov
and
fisubrl
gs
inc
or
pop
int
mov
and
rcrl
sbb
jge
lea
imulb
pop
lea
hlt
mov
dec
lahf
or
aaa
push
or
dec
jns
es
mov
test
stos
jns
insb
imul
mov
xor
sbbb
cli
push
int3
in
lock
inc
mov
inc
test
mov
pushf
in
dec
scas
cld
data16
jg
mov
cwtl
adc
gs
lods
call
daa
lret
imul
fldt
pop
push
push
mov
jns
lret
pop
and
sbb
cmpsb
pop
cmp
sub
pusha
adc
push
xchg
cmp
push
and
mov
imull
sub
leave
pop
push
jmp
outsb
test
adc
sub
sub
je
stos
daa
rcll
aaa
sti
dec
cmp
lds
sub
cwtl
xchg
jno
dec
mov
dec
add
adc
stc
movsl
je
mov
inc
fcoms
sbb
rolb
inc
adc
dec
push
or
xchg
sub
mov
loopne
mov
jnp
mull
sar
fcompl
pop
pop
adc
sub
test
ret
rcrb
sbb
inc
sbb
ss
mov
sub
xchg
xchg
push
notl
or
or
mov
mov
inc
xor
clc
xlat
adcl
int3
sub
cmpsb
sbb
mov
pop
lea
sub
and
adc
in
iret
mov
fadds
aam
data16
or
mov
jno
push
insl
cmp
dec
es
pop
addr16
cmp
fwait
pop
call
lods
icebp
add
iret
mov
inc
mov
xchg
sbb
pop
repz
pop
pushf
leave
xor
cli
jp
push
mul
mov
cmp
lock
or
leave
icebp
add
dec
in
dec
fisttps
sub
pop
stos
and
mov
ret
imul
lock
add
cli
mov
rolb
call
lcall
js
call
xor
pop
lods
dec
xor
ss
push
in
mov
jmp
xchg
push
mov
roll
pop
push
filds
push
ja
or
xchg
test
aad
lret
movsl
imul
sar
or
push
ret
imul
mov
dec
or
movsb
lret
imul
out
loopne
mov
sub
xor
pop
jecxz
inc
fdivl
jp
sub
mov
loope
cltd
das
mov
xchg
inc
cld
push
dec
xorl
cmp
sbb
jecxz
cld
pop
cmp
outsl
or
repnz
in
lea
add
sub
and
dec
push
lcall
outsb
sub
push
dec
roll
xlat
shlb
arpl
aaa
imul
arpl
or
in
aam
dec
pop
xchg
pop
cmp
add
fnstcw
and
out
push
test
mov
pop
push
ja
push
pop
mov
mov
in
je
sbb
push
pop
adc
js
lahf
sti
push
stos
ja
and
test
in
xor
mov
movsb
xchg
adc
or
sub
sub
fucom
add
jno
outsl
mov
cmpsl
push
sbb
ret
scas
cmpsl
xor
fdivrl
fcmovnb
jl
enter
shlb
adc
adc
add
mov
pushf
out
push
stc
loopne
mov
orb
sarl
push
sbb
imul
daa
int
xor
rcrl
pop
mov
in
pop
xchg
mov
daa
out
mov
pop
inc
cmpl
xor
or
or
call
mov
insl
lea
incl
adc
mov
ret
aaa
push
xchg
xor
aas
repz
cmp
enter
mov
push
call
jno
jnp
jae
xchg
push
lea
mov
push
pop
pop
push
ljmp
push
test
js
fs
fsubrs
add
sahf
push
jmp
jns
movsl
add
mov
into
imul
fldcw
jecxz
pop
and
dec
jno
xchg
jo
xor
dec
test
dec
cwtl
jmp
push
mov
lret
jecxz
push
jle
push
mov
xchg
ret
push
or
push
bt
or
push
ds
loopne
and
ja
sarl
das
call
adc
in
push
mov
fsubrl
icebp
mov
loope
nop
adc
mov
mov
mov
loopne
outsb
xchg
mov
icebp
xor
inc
dec
daa
imul
lcall
daa
ret
cmp
push
xor
sub
xlat
jmp
add
mov
aad
pop
out
or
movsl
inc
rcll
call
mov
fldt
push
add
int3
daa
xchg
jmp
out
loope
push
stc
pop
insb
jp
out
cli
les
xor
cmp
cmpsb
insb
pop
cmc
xchg
or
lds
dec
mov
int3
xor
dec
hlt
mov
push
xor
lret
lret
sub
dec
adc
pop
into
in
push
or
jo
lea
push
or
pop
outsl
sub
dec
mov
push
mov
lock
test
jecxz
pushf
mov
stos
add
push
fists
scas
out
into
cmp
inc
clc
ja
mov
hlt
fs
jl
sub
cltd
cmp
or
pusha
call
inc
andb
mov
or
add
sbb
pop
neg
xor
mov
xor
rolb
sub
add
daa
mov
jmp
and
xor
or
std
lods
cmp
stc
add
out
mov
xor
adc
arpl
loope
xchg
or
push
xor
jb
stos
dec
outsl
pop
xorl
jnp
ljmp
aad
inc
ret
push
fnstsw
xor
xor
cmpsb
mov
ja
sbb
mov
fs
xor
hlt
sub
xchg
xchg
orb
mov
imul
fdivrs
ljmp
in
stos
xchg
xchg
or
adc
adc
push
push
lret
mov
mov
rcl
shll
fsub
fiaddl
rclb
enter
adc
mov
je
push
inc
pop
cli
pushf
fidivs
lea
inc
ss
xchg
xchg
adc
leave
mov
daa
sub
je
clc
mov
xchg
xor
push
or
das
pop
lret
mov
sub
and
into
jne
mov
lds
xchg
push
xor
jp
xlat
xchg
push
out
push
icebp
pop
or
imull
in
cs
xor
test
xor
fwait
xchg
pushf
in
dec
and
mov
stos
lods
call
mov
mov
out
jp
sub
ret
inc
add
sub
add
push
lods
lcall
test
bound
cmpsb
cmp
mov
fildll
stos
dec
test
jae
outsb
xor
rcrl
mov
pop
xchg
popa
and
outsl
sar
inc
icebp
push
mov
push
xchg
andb
and
movsl
mov
ficomps
pop
sub
aad
imul
pop
movsl
cmpsl
inc
add
inc
jmp
sub
mov
movsb
mov
je
add
mov
cmc
stos
sbb
adc
imul
mov
dec
dec
in
lret
lret
shlb
sub
bound
mov
adc
add
arpl
in
pop
in
insb
mov
mov
push
mov
ss
adc
sub
mov
xor
lods
and
push
pop
pop
xchg
jle
adc
jecxz
cmp
dec
icebp
jno
sti
mov
call
mov
pushf
loopne
out
std
lcall
jo
pop
rolb
enter
sub
sub
ret
jp
push
or
push
mov
jo
mov
pusha
lock
push
imul
sub
pop
mov
mov
jp
rolb
adc
adc
decl
shl
cmpsl
fcmovnbe
dec
xor
cli
rolb
fadds
push
add
jecxz
sahf
xor
ja
aam
fdivrl
gs
add
or
inc
int3
loope
ror
mov
dec
test
jg
fcoml
fwait
cmp
xchg
aas
adc
leave
jns
jl
xor
loop
daa
loop
lds
xchg
inc
add
fcoml
rcrb
enter
push
xchg
pop
sbb
pop
push
inc
dec
pop
pop
pop
pushl
test
mov
lea
mov
adc
and
daa
lcall
notb
fcmovne
jae
fyl2x
adc
lcall
pop
inc
loope
fcmovne
push
mov
divl
sub
inc
adc
dec
rsm
out
xchg
jo
mov
ret
shl
sti
fs
jo
mov
push
xchg
mov
cmpsb
push
mov
jp
pop
out
push
mov
in
aam
jl
sbb
imul
iret
nop
hlt
add
filds
ficoms
outsb
call
loop
imul
lock
sub
sub
loop
sub
push
ljmp
fdivr
jecxz
push
ja
aas
arpl
sbb
in
xor
dec
data16
cmp
and
push
jecxz
fucomip
arpl
sub
dec
les
les
mov
clc
mov
mov
sub
mov
sti
cmpsl
fadd
xchg
addl
in
jnp
xor
arpl
cld
sbb
cltd
mov
dec
inc
or
in
fimuls
push
pop
loope
fsubl
mov
adc
jno
das
xor
lea
xchg
repnz
inc
mov
push
cmp
movsl
xor
test
cwtl
cmp
and
test
lock
aas
popf
in
decb
mov
test
movsb
in
arpl
mov
fs
dec
fwait
cmp
int3
rorl
sub
mov
imul
outsb
xor
je
out
push
mov
pop
sahf
rorl
mov
mov
mov
mov
xchg
mov
inc
adc
imul
js
ljmp
out
xchg
mov
inc
push
mov
int3
cli
lahf
inc
xchg
lcall
sarl
mov
lahf
push
stos
add
movsl
xor
cmp
in
and
jbe
jmp
dec
jb
std
ss
xchg
xchg
cmpsl
pushf
pusha
sbb
sub
sarb
xor
xor
sbb
mov
pop
adc
xor
fimuls
stos
mov
mov
imul
jp
xchg
outsb
subl
push
shll
and
iret
inc
roll
call
cs
scas
and
test
scas
out
lret
movsl
push
mov
negb
decb
aas
out
jns
dec
sbb
orb
sub
in
dec
pop
popf
mov
scas
shlb
add
sub
or
pop
lcall
fs
or
push
xor
push
push
mov
sub
jle
js
dec
or
or
pop
jl
aaa
mov
das
push
xor
or
xor
xchg
xchg
outsl
rcll
les
test
insl
add
dec
xchg
les
sub
fprem
sbbb
mov
dec
sbb
cmp
test
push
mov
aad
imul
in
or
icebp
xchg
cmp
outsl
shll
xchg
inc
icebp
push
sbb
fdivl
push
mov
popa
mov
out
pop
cmp
push
ds
pop
aam
dec
sub
mov
aam
mov
rcr
jl
adc
int3
xchg
popa
out
or
adc
xchg
ds
xchg
inc
imul
es
fsub
or
cmpsl
ret
dec
xor
cld
pop
dec
xchg
movb
sub
xlat
add
xchg
shll
adc
push
movsb
movsl
test
dec
rcll
sbb
sti
add
pushf
faddl
ds
jae
jge
ret
sub
inc
stos
out
call
cmp
ljmp
dec
push
andb
or
loop
mov
sti
je
xchg
inc
iret
dec
movsb
pop
jb
insl
xchg
jge
and
pop
lret
subb
mov
push
mov
in
lret
clc
add
movsl
jnp
iret
cmp
mov
dec
mov
popa
sub
mov
sti
jmp
loop
xchg
mov
stos
je
dec
sbb
in
pop
shlb
xchg
xor
mov
xor
mov
adc
cwtl
xchg
iret
popa
jo
xlat
lret
jp
push
xchg
std
ror
adc
in
lock
mov
pushf
gs
inc
out
iret
mov
sub
bound
and
mov
add
int3
push
sarb
mov
push
cmp
rorb
cwtl
xlat
popf
inc
out
and
jl
inc
cld
jle
movsb
and
xchg
hlt
sub
pop
imul
arpl
int
sarl
in
push
sub
add
jle
jo
jne
cmp
pop
mov
das
int
push
js
push
jno
lods
orl
xbegin
int3
xorb
imul
and
lahf
dec
adc
mov
and
pop
push
and
jl
ss
sbb
pushf
fisubs
outsl
pop
dec
mov
sub
ja
mov
jae
in
inc
push
pop
outsl
cmp
jecxz
outsb
int3
test
add
add
test
flds
int
icebp
adcb
cmp
push
or
inc
fistpll
xchg
stc
cwtl
das
adc
xor
test
dec
or
dec
xacquire
jb
or
cwtl
in
ret
jecxz
add
fwait
int
adcl
jmp
or
les
cmp
and
mov
dec
adc
stc
in
and
iret
ret
fnstenv
xor
push
adc
enter
test
xchg
or
cmpsl
movsb
mov
aam
rclb
xchg
jne
jno
push
sub
add
pop
mov
xchg
pusha
or
mov
stos
xchg
xor
dec
imulb
inc
popf
xor
test
lds
shrl
inc
xchg
pop
es
aaa
push
cmp
icebp
in
cmpsl
xchg
cs
mov
leave
outsl
cmp
inc
in
mov
xor
push
dec
push
cmp
int
icebp
push
and
mov
xchg
test
pusha
lret
mov
jle
jae
cmc
jae
andl
inc
cld
xor
and
pop
out
cwtl
rorb
fistps
adc
pop
fwait
dec
dec
aaa
cmp
insb
mov
ror
les
pop
mov
cltd
sbb
mov
xchg
dec
lea
cmp
pusha
jo
mov
das
or
xor
out
je
inc
and
xor
pop
mov
xlat
mov
and
xchg
popf
jl
aaa
fdivrs
push
jno
cmc
mov
mov
push
dec
popw
lods
stos
inc
mov
adcl
mov
scas
pop
sub
jecxz
out
aas
fsubrl
cmp
jle
jbe
dec
mov
mov
repnz
sbb
jg
xor
mov
pop
lds
loopne
mov
dec
shlb
mov
ljmp
inc
pop
insl
xor
inc
outsl
iret
adc
jns
pushf
jb
shr
pop
lods
sbb
xchg
inc
addb
cltd
mulb
jmp
xor
pop
out
mov
in
pop
inc
pop
jno
imul
jl
fsubrl
and
lods
mov
sub
sbb
pop
mov
and
xchg
imul
xchg
dec
dec
and
mov
lea
cmc
popa
int
xor
jne
icebp
mov
jno,pn
inc
push
lods
xor
inc
popf
xor
loopne,pt
adc
cmp
iret
ss
mov
je
arpl
or
js
aas
outsb
frstor
loop
jne
and
mov
jp
mov
test
pushf
iret
cltd
je
aas
mov
push
in
int
stc
cmp
xor
dec
adc
adc
int
sub
inc
mov
loop
stos
out
cmpsl
pusha
rorb
repz
notl
adc
fldl
pusha
xor
in
test
sbb
shlb
paddw
jmp
in
sub
mov
cli
sub
in
inc
mov
cltd
in
orb
cmp
cwtl
lea
out
jecxz
movsb
call
sbb
lahf
sub
test
inc
pop
aas
pusha
pop
fisubrl
mov
fbstp
pop
fwait
jl
dec
jp
dec
fstl
mov
pop
dec
and
mov
dec
xchg
and
xlat
or
pushf
in
dec
adc
daa
nop
dec
xchg
or
sub
les
addr16
lcall
cmpb
inc
pop
std
sub
sub
lock
cltd
shl
adc
or
inc
cmp
xlat
xchg
ret
fsub
sbb
adc
sbb
mov
mov
cmp
movsb
or
testl
sti
js
mov
arpl
ljmp
imul
mov
rcl
outsb
faddl
adc
cmp
test
mov
dec
pusha
adc
pop
in
sbb
jne
xchg
jg
xchg
sub
test
cmp
stc
and
aaa
mov
pop
push
push
cmp
inc
fdivrs
jl
mov
btc
lret
dec
outsb
lds
test
test
inc
add
mov
mov
test
inc
cmpsl
xchg
daa
dec
push
pusha
leave
dec
lret
aam
insl
imulb
push
adc
sar
lcall
add
mov
mov
and
mov
icebp
enter
push
push
push
push
push
adc
mov
sbb
dec
sarl
adc
mov
add
pop
inc
cs
dec
adc
mov
into
gs
cmp
hlt
push
push
inc
jmp
push
pusha
outsl
cmpsl
jae
inc
lcall
sbb
xchg
adc
sub
mov
add
sbb
in
subl
mov
in
cmpsb
addb
xchg
iret
xor
or
lods
and
sbb
aas
jecxz
mov
test
mov
mov
pop
add
sahf
outsb
pop
push
bound
fisubs
sub
gs
adc
das
test
rorb
xor
dec
cmp
or
inc
fsubl
mov
mov
and
ja
cmc
and
decb
rol
mov
addb
sbb
in
out
inc
cld
addr16
lret
mov
adcl
sbb
pop
iret
jb
push
xchg
mov
pop
daa
jl
add
adc
cld
or
xor
push
stc
dec
dec
aad
enter
fcmovnb
ffreep
mov
dec
incb
sub
push
inc
orl
cmc
mov
ds
cmp
loop
or
add
test
aaa
sbb
out
js
fcoms
lods
jmp
sub
pop
loop
pop
mov
icebp
push
mov
cmp
inc
jbe
xchg
jmp
add
mov
in
mov
mov
and
nop
repnz
pushf
dec
aaa
mov
inc
push
add
pop
cmp
daa
adc
scas
or
mov
sbb
mov
xchg
dec
test
jecxz
mov
and
or
enter
pop
pop
xchg
sbb
in
mov
jns
loope
loop
lea
push
leave
mov
sbb
lea
jmp
test
or
sub
in
in
in
xchg
xor
arpl
xchg
mov
jecxz
test
out
out
dec
repz
cmp
inc
xor
int3
cwtl
push
or
ret
jno
inc
rol
inc
rcll
sbb
test
icebp
insl
comiss
xchg
fisttps
pushf
loopne
inc
jmp
repnz
fldl
and
daa
inc
loopne
hlt
stos
js
jmp
mov
das
in
test
call
mov
adc
cmp
push
rcll
jb
fldenv
test
xor
fisttpl
test
gs
dec
pushf
pop
enter
mov
adc
insl
lahf
aaa
push
ds
add
pop
push
imul
push
test
lcall
test
mov
jg
pop
loopne
cld
sarb
leave
ja
sub
inc
mov
movb
cmp
out
add
les
cmp
cmp
jmp
cmc
ficompl
rclb
xchg
mov
and
fbstp
aaa
shr
sbb
mov
or
iret
push
aad
fistps
and
test
lea
pop
out
mov
lret
mov
das
push
fcoml
xchg
das
std
out
add
decb
out
std
fdivrs
push
dec
adc
pop
imul
je
add
or
jp
mov
or
mov
cmp
or
dec
repnz
sahf
or
daa
push
push
enter
fcompl
sbb
lock
adc
dec
dec
xor
jg
push
mov
hlt
dec
aaa
fs
loope
sarl
fs
lods
mov
cmp
push
jp
shlb
fdivrl
mov
cmpsl
out
xor
mov
int3
add
test
ret
sbb
popf
test
xchg
sub
test
loopne
mov
bswap
push
fstp
stos
mov
test
lcall
dec
scas
aad
insb
pop
sbb
mov
push
lea
nop
sbb
sub
sbb
loope
push
roll
mov
push
add
sub
mov
add
bound
or
sub
lret
ljmp
icebp
sbb
in
xchg
mov
and
cwtl
xchg
cmp
cltd
dec
push
fisubrl
mov
and
adc
out
ljmp
xchg
pushf
aad
or
jb
pushf
adc
mov
xchg
xchg
ja
xchg
sbb
or
pop
xchg
cwtl
mov
dec
fidivl
pop
popa
sub
arpl
or
outsl
cmpsb
cmp
les
ror
fstps
int3
mov
cmp
cmp
insb
and
popa
test
xchg
not
inc
dec
inc
fdivs
fsts
adc
cmp
xor
or
stc
mov
gs
and
lret
enter
or
inc
hlt
imul
clc
adc
mov
jb
jns
fwait
lcall
test
loopne
sub
cmp
mov
fisttpll
jmp
scas
push
ja
movups
shl
mov
jbe
arpl
inc
mov
sbb
insb
or
push
mov
jmp
xor
in
aas
xor
mov
cmp
ret
and
pop
push
and
inc
shrl
aad
test
jns
mov
sub
dec
stos
inc
movaps
sub
pop
popf
and
lahf
inc
pop
pop
sbb
int3
mov
or
xor
sahf
scas
dec
add
cmp
rcll
stos
pusha
pop
xchg
jg
lods
push
into
mov
fwait
or
jg
add
fcoml
dec
int3
stc
push
cmpsb
mov
clc
or
loope
int
daa
aad
add
inc
cli
cwtl
xor
sub
inc
pop
mov
and
repnz
loope
lret
push
xchg
addr16
cmpsb
pop
pop
and
fnstcw
mov
mov
mov
sbb
popa
mov
pop
aas
popf
mov
jle
scas
in
cmp
inc
js
jl
add
ret
mov
ret
add
lcall
ds
dec
sbb
mov
sbb
mov
call
fists
adc
fimuls
adc
outsb
lahf
sbb
movsb
fwait
mov
cmpsl
into
xor
nop
or
jns
imul
inc
pop
gs
ljmp
leave
sti
outsb
loope
dec
sti
fs
and
xchg
or
push
lfs
ss
shll
movl
test
std
icebp
push
aaa
xlat
into
shrb
or
mov
adc
mov
out
lcall
pop
and
out
mov
out
test
add
andl
dec
movsl
outsb
out
in
fistpl
pop
xchg
push
es
cltd
add
movsb
dec
dec
iret
xchg
lret
dec
dec
sahf
pop
xchg
inc
outsl
push
into
das
stc
gs
ds
out
sbb
popf
popf
hlt
xchg
negl
sbb
push
mov
cmp
gs
std
adc
add
cmp
and
jb
popf
out
fdivr
movsb
dec
mov
xor
adc
movsb
xor
xor
loop
lock
clc
jecxz
add
xchg
adc
mov
inc
cs
ja
add
push
enter
and
in
scas
int3
pop
or
push
mov
es
mov
adc
add
jp
sub
out
jg
cmp
mov
pop
mov
sub
mov
aad
cld
mov
cmpsb
adc
mov
pusha
cmc
lods
cmpsb
sbb
aas
loope
ret
xor
aad
jnp
adc
mov
enter
pusha
or
icebp
adc
leave
and
mov
bswap
das
push
pop
mov
test
in
cwtl
mov
mov
std
pop
enter
cmp
mov
sub
icebp
stc
imul
mov
jno
mov
rcl
pop
aaa
int
xor
rorl
dec
fidivl
notl
mov
aaa
push
xor
push
lret
lods
test
loope
fs
lock
scas
cmp
mov
dec
daa
mov
int3
pop
pop
sbb
and
lods
xchg
in
scas
les
cmp
cmp
lods
fs
xor
adc
cmp
xor
test
jo
div
or
pop
sub
scas
pop
xor
inc
add
mov
pop
roll
test
insb
scas
or
movsl
clc
or
outsl
pop
fildl
jo
subl
rep
cltd
daa
jo
scas
ficoml
mov
fbstp
js
mov
ja
cmpsl
lahf
popf
sub
pusha
pop
or
cmp
or
dec
loope
mov
aaa
jle
inc
cmpl
shrb
push
les
cmp
clc
cmp
or
push
adc
sub
arpl
jecxz
xor
pop
pop
xchg
lahf
pop
rcll
in
cmpl
jo
inc
js
andl
mov
mov
mov
nop
pop
fidivrl
lds
stc
arpl
ljmp
add
sti
fnsave
cmp
fsts
or
enter
shl
inc
mov
xchg
xor
and
in
lahf
dec
test
inc
dec
xlat
pop
pop
pop
ret
cmp
jmp
mov
movsl
mov
adc
and
repnz
aaa
mov
mov
inc
lds
sbb
pushf
out
inc
push
pushaw
sbbb
cmp
test
pop
aaa
insl
jne
adc
mov
out
out
pushf
sbb
je
jg
insb
and
out
xchg
pop
lock
jge
shll
jge
into
sub
dec
fadds
push
or
push
push
sbbl
mov
or
cmpsl
ja
xchg
lgdtl
daa
js
movsb
inc
push
and
insb
adc
dec
cmpsb
push
aas
mov
pusha
inc
testb
imull
adc
in
dec
shlb
mov
push
shll
xchg
lods
push
data16
insl
ror
int
mov
loopne
popf
lods
jb
das
xchg
mov
arpl
cmp
xlat
shlb
in
leave
mov
mov
or
xor
fildll
mov
adcl
push
inc
xchg
adc
arpl
adc
je
pop
addb
jmp
xchg
mov
xchg
popa
out
push
movsb
es
mov
jbe
xchg
mov
jecxz
lret
inc
loope
jle
out
stc
shlb
cld
es
and
cmp
cmp
cmp
mov
dec
sbb
jae
adc
sbb
and
add
cmp
jge
mov
xor
mov
push
dec
in
int3
popf
ds
sub
pop
inc
push
xchg
jae
sbb
jo
out
test
sbb
pop
out
sbb
add
jmp
divb
adc
test
fwait
jmp
dec
loop
and
cmp
xchg
mov
mov
xchg
pop
int
sarl
div
shll
lods
and
inc
enter
pop
lcall
ja
bound
gs
arpl
or
fisubrl
xchg
add
leave
push
mov
jg
mov
dec
data16
je
xchg
push
dec
mov
xchg
push
mov
pop
fildll
and
lock
xchg
push
clc
lds
xchg
in
stos
fs
push
sbb
mov
ffreep
jp
leave
bound
mov
lret
movsb
sub
xchg
loope
js
rcll
push
icebp
and
js
inc
out
xor
cmp
std
lret
pop
int
mov
jo
lahf
in
aad
sarb
or
leave
add
cmp
pop
int3
imul
lret
adc
dec
shlb
fs
mov
mov
aas
stc
push
jmp
add
sbb
shrl
or
mov
test
push
add
jg
pop
sbbb
out
mov
nop
mov
jmp
and
pop
xor
jmp
pop
xor
call
adc
in
push
punpckhdq
lea
negl
sbb
into
jno
rcll
xchg
jge
and
int3
adcl
dec
xor
mov
cltd
add
push
jge
mov
sbb
mov
and
pushf
lds
inc
cmp
scas
jl
xlat
std
or
test
fwait
sbbb
add
sti
pop
test
or
xor
jno
hlt
lds
insb
aam
clc
or
push
lret
ficomps
call
and
fsubl
insb
stos
sub
jle
cmp
xor
dec
clc
xchg
xchg
stc
sub
add
mov
push
test
xchg
scas
or
and
push
adc
lcall
sbbl
rsm
jae
push
jno
cmp
sbb
mov
out
jmp
cmpb
enter
cltd
inc
pop
repnz
mov
lock
ljmp
inc
loope
push
mov
and
loopne
popa
test
sub
sub
dec
push
sub
cld
in
mov
add
sbb
push
loop
addr16
add
stos
mov
shll
and
pop
sar
outsl
aad
xor
jnp
jge
dec
into
sbb
lods
jge
mov
fs
lods
jg
cld
pushf
add
pop
pop
xor
movb
push
jmp
cltd
daa
cmp
push
add
mov
fdiv
dec
inc
cmp
stos
or
test
pop
into
dec
sub
jl
dec
out
xchg
das
lods
jbe
jecxz
leave
clc
popa
int
add
insl
or
xor
enter
pusha
insl
mov
jbe
sub
sahf
mov
lods
sub
repnz
mov
jmp
jnp
loop
jae
addb
jno
or
fisubs
cmp
aad
push
daa
mov
nop
inc
push
mov
xchg
jns
or
cmp
add
xor
insb
jge
dec
xlat
pop
shlb
repnz
pop
imul
mov
xchg
fsubs
and
or
adc
daa
out
or
pop
aad
fadd
fcoml
or
push
cmp
mov
or
nop
xlat
pop
sbb
xor
xchg
bound
fsubl
cmp
push
cltd
mov
sbbl
lods
insl
jge
add
movb
xor
out
int
stos
xor
jmp
mov
cmpsb
cmp
pop
adc
xchg
scas
gs
popf
jae
adc
out
aad
inc
out
cmp
setge
jne
imul
dec
stc
in
test
sbb
test
push
ffree
jmp
sub
mov
cmpsl
dec
jbe
xchg
popa
sbbb
pushf
mov
pop
mov
sti
xchg
xchg
icebp
xchg
outsl
mov
insl
mov
test
push
push
jo
xor
adc
mov
subb
inc
xlat
cmp
cmp
lock
cmpsb
sub
mov
loop
fisubrs
adc
jnp
jge
jae
add
xor
push
add
insb
or
inc
add
out
lcall
adc
or
pop
cmpsl
inc
icebp
pop
mov
stos
inc
enter
in
push
mov
mov
sbb
pop
or
xor
lods
jae
dec
mov
or
mov
add
fcoms
rcl
mov
xor
inc
mov
xchg
mov
cld
lea
adc
les
out
in
cli
jb
inc
jnp
outsb
rolb
mov
xchg
sarb
push
cwtl
scas
loope
bound
mov
dec
add
mov
add
call
xchg
popf
ss
mov
sbb
test
mov
fnstcw
sahf
lret
daa
int3
xchg
dec
sahf
push
ss
push
fs
adc
int3
sub
adc
shr
call
lea
inc
repnz
lahf
cwtl
js
cld
mov
or
fisttpll
push
and
sahf
test
stc
jae,pt
add
imul
sub
popa
xor
enter
and
stos
insl
adc
mov
pusha
fs
xor
lret
pop
or
cli
mov
xor
lods
jl
mov
mov
mov
cld
imul
xor
jb
stos
mov
enter
push
mov
add
or
add
mov
and
mov
insl
jmp
pop
mov
add
mov
push
pop
sarl
xchg
mov
iret
iret
clc
or
pop
inc
in
addl
in
lods
pushf
andb
mov
insl
in
imul
loopne
mov
in
out
jno
das
and
test
mov
shl
or
icebp
daa
stos
imul
add
adc
sub
mov
xchg
pop
push
clc
cmp
lods
scas
adc
or
pop
clc
and
mov
in
or
int
out
mov
sub
adc
and
mov
insb
add
test
gs
mov
and
pop
popa
scas
cmp
out
jp
call
pop
dec
or
jnp
xchg
jmp
sbb
ja
notb
sahf
push
call
jae
and
das
jmp
jnp
fs
push
cmp
repnz
shr
aad
mov
outsl
jae
add
inc
jnp
loop
push
loop
out
cmpsb
fs
sbb
pop
dec
xlat
adc
sti
lahf
lods
dec
mov
fdivs
mov
cld
or
cltd
sub
pop
xchg
inc
and
mov
sbb
cs
popa
mov
xor
jo
scas
aad
lea
cmp
inc
xor
and
xor
ljmp
dec
adcl
arpl
js
adc
mov
mov
jp
jg
and
mov
jp
stos
divb
mov
mov
sbb
dec
pop
jb
add
inc
arpl
in
xor
or
adc
mov
or
icebp
xor
sub
cmc
arpl
mov
mov
shrl
mov
jecxz
lret
mov
xor
mov
add
insl
popf
xor
mov
sbb
push
and
xor
pop
add
ret
out
aaa
push
cwtl
xor
ret
push
into
or
rcrb
aaa
rolb
jg
push
sbb
inc
aad
mov
jmp
cmpsb
insl
es
call
or
iret
shl
pop
rcr
jns
and
movsl
lods
or
cltd
leave
dec
mov
je
dec
xor
inc
in
loop
mov
or
mov
sub
push
xchg
loop
clc
int3
aas
jb
pop
lret
test
push
sub
mov
adc
mov
fsubs
ficoml
add
fdivl
aam
or
in
mov
leave
leave
dec
scas
xor
add
or
sarl
cmp
xor
mov
jns
mov
das
hlt
jns
adc
adc
pop
pop
insl
mov
add
pusha
push
insb
rcll
hlt
popa
inc
outsl
pop
push
inc
mov
das
and
sub
xchg
push
mov
les
mov
mov
pop
hlt
ret
sqrtps
inc
cmp
dec
dec
and
aaa
lock
pop
mov
cmpsb
mov
jns
and
scas
sbb
testb
insb
popa
decl
stos
inc
push
int
loopne
inc
dec
out
jmp
pop
mov
jle
jl
push
jge
mov
jp
add
add
xor
mov
push
dec
loopne
mov
das
jp
adc
add
push
inc
xchg
add
cli
aam
mov
test
ret
enter
stc
and
fidivl
stc
fildl
add
fistpl
shr
jecxz
insb
jae
stc
fistps
js
fdivrl
jnp
int
push
and
pop
imul
inc
or
dec
shll
fwait
mov
dec
push
push
add
sahf
dec
jnp
add
add
cli
ret
pop
xor
and
mulb
cmc
out
xchg
or
js
shlb
sub
ret
dec
dec
sahf
sub
rorb
js
js
mov
add
pop
test
and
push
add
lahf
add
jne
adc
mov
fmull
out
dec
or
ja
pop
lea
ficompl
icebp
cmpsl
leave
jmp
les
or
dec
ss
push
arpl
xchg
icebp
popa
push
xchg
cld
jp
inc
dec
jle
or
and
fwait
fs
mov
lcall
cld
pop
mov
jl
cmp
push
pop
xchg
aam
repz
mov
adc
lret
xchg
cmp
aad
mov
rcl
popa
stc
sub
test
repz
and
xrelease
push
idiv
xchg
jmp
cmc
xor
and
sti
fstp
in
fldenv
sub
and
clc
aaa
outsl
add
jno
and
or
int
and
adc
fsubl
stos
outsb
sti
push
push
pop
lock
ret
mov
add
add
sub
pop
mov
cs
pop
imul
test
cmp
sub
lea
shl
inc
sub
mov
xor
xchg
cmp
push
inc
add
jae
sub
push
out
and
push
add
loop
push
cmp
arpl
xchg
mov
mov
js
icebp
sub
pop
dec
les
pusha
jb
inc
pop
lods
es
cld
adc
mov
pushf
scas
sub
xor
arpl
addb
das
cmp
push
pop
subb
xchg
push
fdivs
sub
sarb
pop
and
iret
cmpsb
add
in
mov
add
push
inc
xor
jne
ret
lret
xlat
jns
inc
inc
adc
sbb
repnz
cli
jge
mov
cmpsb
in
jle
xlat
notb
pop
jle
ficompl
dec
popa
mov
xchg
ffreep
imul
subl
sbb
sbb
adc
xor
in
adc
pop
inc
xchg
int
stos
pop
fisttps
les
daa
and
mov
fcomi
scas
jne
call
jae
jae
and
loopne
pusha
sbb
rcrl
int3
inc
and
pushf
jge
int3
jbe
push
mov
dec
mov
mov
leave
lea
cwtl
and
add
addr16
sbb
push
sub
adc
xchg
add
and
cmpsl
push
ja
mov
mov
cmc
or
out
ror
add
dec
xchg
mov
stos
ss
pop
std
popf
out
mov
mov
in
inc
and
xor
cmp
movsl
and
dec
ficoms
cmpsb
add
mov
xchg
add
mov
sub
cwtl
push
aad
push
hlt
jmp
fisubs
jg
mov
stos
add
movsl
mov
arpl
mov
outsb
add
mov
sbb
in
push
pushf
push
pop
outsl
dec
jnp
addr16
xchg
sub
fidivrs
add
mov
sbb
push
mov
mov
sti
lods
pop
loope
push
inc
call
jmp
rcl
cmc
cmp
push
ljmp
loop
movsb
inc
xchg
mov
pandn
push
stc
mov
dec
std
dec
fsubp
mov
push
js
push
mov
mov
mov
jns
repnz
cltd
cmp
mov
into
or
xchg
loopne
ficomps
sub
lret
jae
or
xor
fiaddl
repnz
sbb
mov
ljmp
mov
mov
fs
divb
adc
loop
add
and
subl
test
movsl
ljmp
jl
pop
or
cmc
lds
test
sub
dec
push
mov
lock
jp
sbb
jecxz
pop
rcrb
push
xor
pop
jnp
add
pop
add
shll
or
out
pop
xchg
sbbb
jl
out
xor
inc
outsl
pop
mov
inc
add
xchg
mov
int
xchg
pop
mov
ret
loopne
dec
jmp
cmp
dec
test
sub
push
stc
mov
xchg
jae
cmpsb
mov
fisttpll
stos
cmp
test
cmpsb
aam
fisubl
mov
aas
in
lds
mov
arpl
xor
xchg
xchg
idivb
push
and
dec
sbb
dec
push
mov
andb
out
popa
add
push
push
add
xlat
ds
das
aas
movsb
dec
pop
test
mov
mov
ss
pop
into
in
std
stos
imul
mov
add
pusha
mov
pop
ss
push
enter
dec
pop
push
cwtl
inc
es
xchg
jo
jp
cmc
test
cmc
insl
sbb
mov
jge
test
cmp
shrb
pop
shll
iret
xchg
adc
push
sbb
add
mov
int
dec
push
out
xor
hlt
push
pop
push
cmp
lcall
cmp
push
mov
lahf
jno,pt
push
outsl
test
inc
or
in
lahf
adc
mov
in
lock
pop
ss
xchg
xchg
int3
xchg
add
mov
mov
mov
pop
pop
add
cmp
xor
lock
mov
bound
cmp
cmpsb
dec
popa
and
addr16
jl
dec
fldenv
cmp
mov
dec
outsl
mov
repnz
rorb
jge
push
jmp
leave
hlt
add
fwait
dec
jo
cwtl
push
into
push
jp
pop
jmp
bnd
lret
xor
push
or
pop
insl
lahf
fwait
push
and
adc
xchg
push
fimuls
aaa
in
xor
xor
mov
loop
xor
scas
mov
repnz
les
inc
fadds
pop
pop
ret
addr16
inc
out
cmp
jnp
mov
or
jnp
jg
mov
shlb
and
lret
repnz
scas
movsl
add
mov
pop
jb
jbe
mov
and
jg
loop
inc
jno
mov
push
add
int3
movsl
and
cwtl
and
imul
clc
arpl
pop
mov
fidivrl
sbb
into
aaa
pushf
xor
repnz
shlb
mov
lds
jge
cwtl
sti
mov
jl
xchg
nop
fldenv
or
push
xor
cmc
pop
stc
nop
sbb
push
or
fdivrl
fsubl
fldcw
imul
lds
imul
or
mov
mov
iret
into
jmp
ds
aas
call
ja
xor
leave
mov
popf
insl
out
sub
in
push
add
popf
cmpsl
movd
les
mov
ljmp
adc
push
fbstp
pop
fsubl
mov
and
in
adc
loope
ret
ja
insb
ds
mov
add
negb
pop
in
push
xchg
cli
push
lock
push
inc
sub
xor
mov
fisubrl
int
jne
pop
clc
outsb
leave
add
push
aad
xor
sahf
xor
push
push
dec
push
cltd
lret
pop
pop
insl
shll
push
mov
test
inc
arpl
xchg
scas
mov
adc
jle
bound
lret
stc
xor
imul
test
pop
sub
jno
xchg
out
adc
push
leave
gs
pop
imul
out
push
dec
sbb
dec
xchg
sbb
cmp
jg
jae
adc
jne
sub
mov
push
or
inc
push
xchg
xor
repz
jmp
inc
bound
pop
shrb
stos
repnz
outsb
jbe
mov
cmpsb
ret
mov
sbb
xor
dec
lods
cmp
push
cltd
add
out
pop
and
movsl
pop
jne
hlt
jns
sub
icebp
jp
add
decl
mov
sbb
scas
in
in
aam
pop
pop
push
sub
in
sbb
lea
not
std
clc
mov
aaa
or
cmp
inc
aam
loopne
adc
mov
jge
xor
jb
lods
adc
sub
stc
leave
leave
xor
inc
jge
ljmp
sub
pop
add
mov
inc
loope
xor
iret
mov
sub
sub
adc
lods
sar
lock
jns
pop
mov
lret
dec
das
xchg
pusha
int
cmc
mov
clc
jnp
cmp
mov
mov
sub
xchg
dec
jno
jg
xor
int3
mov
cli
out
in
stos
lcall
sub
pop
fwait
fsubr
stos
lods
loopne
mov
lock
lahf
ds
add
or
xchg
fdivl
pusha
nop
xchg
and
outsl
bnd
xabort
popf
addl
imulb
and
dec
clc
daa
das
inc
adc
fsubl
add
iret
ror
push
mov
insb
jne
adc
rcrb
fbstp
xor
aad
mov
jne
pop
fcomi
cmp
lods
cwtl
sbb
cmc
cmp
xorb
in
jne
cmp
adc
xor
fsubrl
ss
sub
pop
xor
dec
arpl
add
xchg
mov
mov
movsb
jle
loope
push
mov
sbb
add
pop
int
fstpt
or
std
inc
mov
jno
fs
pop
push
mov
mov
cmpsb
pop
pusha
fcomps
mov
mov
jnp
sarb
cmpsl
cmpsb
fs
sar
imul
dec
add
movsb
dec
add
xchg
inc
push
push
stos
leave
adc
add
dec
cltd
aad
int
cld
adc
popa
fwait
push
cmpsb
js
xor
push
mov
lcall
cmp
bound
jl
out
dec
jnp
fcompl
js
mov
adc
aaa
cmp
stos
push
adc
xor
mov
aaa
cs
leave
xchg
jns
lea
pop
push
fs
andl
mov
in
xchg
xchg
notb
test
inc
sub
xchg
mov
sbb
jnp
jmp
dec
movntq
sbbb
lcall
inc
or
mov
inc
mov
aaa
push
fldenv
scas
mov
mov
xlat
dec
dec
add
test
idivl
mov
ret
lock
add
push
xchg
sub
test
movsb
xor
mov
or
insl
mov
mov
mov
xor
cmp
inc
std
xchg
push
gs
test
movsb
dec
pop
push
adc
sbb
jmp
sub
aad
or
and
ja
popa
inc
fmulp
fmulp
js
jbe
jmp
inc
mov
jge
cli
test
nop
xchg
sbb
cltd
cmpsb
lea
sbb
stos
sub
and
cmp
sarb
subl
jae
sub
mov
jns
int
sbb
sub
imul
mov
xchg
outsl
push
add
sub
push
mov
jecxz
test
outsb
push
sarb
in
add
and
and
stc
out
sub
mov
inc
inc
pop
mov
cltd
fistps
popa
pop
dec
mov
and
in
icebp
ljmp
dec
je
out
adc
lock
bound
loopne
test
mov
jg
dec
loopne
or
loop
push
mov
lods
mov
lods
or
and
mov
into
mov
sbb
xor
mov
das
cld
or
addr16
lret
and
std
fstpt
sub
sbb
out
ror
stos
or
add
cmp
mov
push
test
adc
sbbb
pop
jb
fildll
ret
sahf
cmp
lret
push
frstor
mov
push
cmpsb
in
cmc
test
xchg
ljmp
push
push
ss
and
sub
pop
mov
lret
test
ret
dec
pop
sbb
popa
sub
js
cmc
mov
dec
out
sbb
addr16
sahf
push
xor
cmpsl
outsb
lods
sahf
dec
mov
lahf
mov
mov
fdivrp
aad
js
testl
cmp
mov
jmp
mov
leave
sti
mov
subb
out
or
fisttpl
popa
mov
sti
inc
ficomps
push
stc
adc
out
push
stc
mov
cmp
and
adc
or
ret
mov
ja
cmc
mov
daa
or
sbb
repz
test
imul
lods
jnp
js
movsb
jnp
pop
inc
shr
mov
and
adc
test
mov
cmp
mov
dec
mov
jle
inc
and
mov
sbb
add
je
daa
js
sbbb
int3
cmc
jno
sarl
mov
pusha
sbb
add
xor
push
movsb
jnp
cmp
or
mov
cld
fwait
mov
cmp
shl
addr16
or
mov
adc
popf
enter
jg
jl
ja
add
jne
adc
lret
xchg
dec
cmp
test
add
pop
adc
pop
pop
dec
nop
push
dec
cmpl
adcl
inc
inc
call
pop
jns
pop
mov
lea
cld
test
pop
mov
mov
mov
inc
gs
outsb
sbb
jg
mov
mov
pusha
xchg
cmp
imul
out
adc
dec
adc
mov
test
shrb
cmp
jecxz
fldln2
adc
jae
int3
scas
scas
stos
mov
pop
mov
inc
mov
lret
lods
jmp
daa
xchg
shll
mov
push
inc
mov
nop
mov
mov
push
cmpsb
es
dec
js
jnp
or
and
xlat
inc
sbb
adc
xchg
sarl
jmp
mov
mov
out
mov
rol
dec
add
faddl
dec
popf
mov
cmp
rolb
ds
xor
add
inc
and
jle
bound
mov
pop
gs
mov
repnz
lret
mov
sbb
pcmpgtb
inc
jno
cmp
je
cmp
mov
stos
push
mov
addr16
ret
sti
pop
wbinvd
sub
lahf
es
xor
das
cmp
imul
mov
cs
jns
xchg
xchg
pop
xor
mov
mov
xchg
test
ljmp
add
subl
mov
mov
mov
mov
cs
mov
cwtl
leave
lret
sub
fimuls
dec
in
xchg
nop
adc
sbb
clc
test
loope
mov
jbe
or
mov
sub
dec
push
add
jo
aas
fstpt
ja
inc
pop
mov
jnp
adc
aam
aas
jge
sub
popf
add
add
enter
and
adc
push
cs
in
inc
xchg
out
push
add
jne
mov
mov
xlat
addr16
shlb
pop
xchg
cmc
daa
mov
jl
popa
push
fsubrs
jmp
mov
sbb
das
out
push
lea
sbb
mov
lds
xor
insb
jno
mov
outsl
cs
lds
push
cmc
and
xchg
pop
xchg
stc
mov
cltd
jge
arpl
mov
push
aas
adc
add
notb
push
subl
pusha
loop
js
mov
mov
dec
or
sub
jmp
ret
push
pop
pushf
push
sub
add
scas
movsb
push
repz
cmpsb
into
add
test
aas
cmp
ja
cs
lret
call
mov
testl
out
dec
repz
push
aad
mov
push
sbb
mov
fimuls
xchg
test
sbb
cmp
je
inc
imul
push
fisubrs
fwait
mov
mov
mov
cltd
mov
adc
jl
dec
das
push
and
mov
movsb
jne
outsb
jbe
push
into
pop
fsubr
mov
mov
out
push
jmp
cltd
mov
roll
movsl
loopne
push
or
jo
rcrb
mov
sub
and
sub
lods
sbb
and
inc
xchg
push
outsb
sbb
mov
lret
fcomip
in
dec
cwtl
mov
xchg
pushf
into
rolb
jb
in
add
mov
mov
inc
cmpsb
hlt
push
push
clc
cs
pop
in
shll
push
jg
xchg
inc
adc
or
dec
cmp
jge
push
pop
idivl
addr16
pop
nop
das
dec
icebp
mov
in
dec
lock
pop
xor
inc
lock
shl
sub
mov
and
fidivrl
mov
mov
mov
repz
das
leave
and
and
clc
or
orb
adc
mov
pop
add
das
cmp
outsb
sub
cmc
sbb
ret
sbb
rorb
scas
jb
mov
or
pop
dec
jmp
jns
xchg
pop
cli
or
push
lea
icebp
out
xchg
and
dec
fs
dec
scas
add
mov
xor
dec
pop
mov
mov
lock
push
fistpll
test
xor
stc
cmp
outsl
test
stos
shrb
sub
bound
xchg
xor
xchg
xchg
mov
scas
shrb
fs
mov
lcall
mov
aas
cwtl
mov
fnstenv
out
cmpsl
sbb
xchg
jnp
push
push
test
jl
xchg
and
or
inc
jnp
les
loopne
push
jbe
sbb
fldcw
stos
dec
scas
add
rclb
sub
mov
fisubs
mov
fldl
ret
mov
stos
jp
fimuls
push
sti
and
ret
push
inc
add
shll
or
xchg
mov
dec
daa
add
inc
test
or
stc
mov
arpl
push
cmp
jo
mov
ljmp
enter
xchg
pop
repnz
adc
mov
adc
or
aam
or
pop
pop
mov
pop
pop
xchg
xchg
outsb
push
stos
sbb
fsts
pushf
cld
jmp
cmp
adc
lret
inc
leave
sbb
add
and
in
pusha
sub
repz
in
mov
pop
xor
jg
ss
and
into
insl
test
push
es
adc
les
inc
cmpl
les
fninit
xchg
cmp
nop
addb
cmp
xlat
adc
insl
loop
sbb
sub
popf
mov
xchg
mov
push
sahf
mov
adcb
or
adc
fimuls
inc
or
cs
in
divl
pop
out
push
pop
push
arpl
cli
pop
imul
movsb
or
test
sbb
sub
mov
insb
ret
lock
not
enter
sub
xor
pop
mov
adc
fcomip
dec
mov
in
mov
ret
arpl
add
insl
push
inc
out
sbb
out
sar
mov
enter
dec
repz
xor
mov
in
in
cld
in
dec
sub
add
scas
xchg
cli
es
adc
sub
pushf
int
add
adc
pop
dec
push
pop
sahf
mov
movsl
or
lahf
test
daa
popa
sbb
mov
or
inc
imul
lea
out
fwait
pop
mov
clc
enter
shll
jg
cli
arpl
inc
popf
lea
icebp
cmp
ret
scas
mov
push
pop
jns
pusha
cwtl
clc
shrb
test
jne
repz
stos
stos
fmulp
sub
pop
es
mov
mov
sub
push
jae
aad
jle
cwtl
jbe
test
inc
xchg
in
sub
cltd
unpckhps
fimull
jb
addr16
add
repnz
pop
dec
mov
arpl
enter
mov
and
dec
push
and
cmp
cmp
xchg
mov
sti
pop
sub
mov
fxch
call
sub
cmp
mov
pop
dec
adc
push
and
mov
cmc
divl
lcall
mov
fistl
mov
das
roll
js
push
xor
push
fwait
xor
sbb
in
dec
fcmovne
lahf
fidivrl
sbb
pop
lds
xchg
lahf
push
or
inc
mov
add
mov
loope
jae
jg
jno
push
add
ljmp
xorl
cmpsl
in
shl
sub
sbb
push
out
mov
dec
lds
movsb
mov
push
xlat
dec
mov
das
pop
inc
pop
xor
mov
adc
cmc
mov
pop
adc
fisubrl
pop
xchg
xchg
mov
bound
jmp
sub
sub
in
in
dec
test
int
stos
xchg
push
scas
add
aaa
jecxz
sarl
xor
mov
add
mov
dec
adc
nop
lods
into
pop
inc
sbb
pop
xchg
cmp
pop
cli
sub
sub
clc
ret
aam
pop
rol
aam
out
mov
fwait
xchg
fcoml
and
inc
mov
sub
movsl
adc
mov
sbbb
mov
adc
mov
pop
daa
pop
jg
jns
dec
shlb
ret
xchg
pop
aam
cmp
mov
ret
sbb
sub
loope
loope
inc
xor
in
dec
xor
xor
in
sub
fsubrs
sbb
lahf
je
cmc
mov
lock
icebp
pause
movsb
imul
cmp
lds
adc
sbb
dec
add
je
dec
ljmp
jp
mov
mov
mov
mov
fiaddl
xchg
call
ds
aad
push
lds
imul
clc
cltd
pusha
add
mov
sub
popl
repnz
dec
inc
andb
gs
push
sahf
sbb
xor
ret
imulb
mov
sub
fwait
out
xchg
ds
jns
js
xchg
out
and
fldt
jmp
lahf
mov
repnz
ret
shrb
xchg
rorb
inc
mov
push
push
test
push
stc
inc
xchg
sub
dec
push
xor
push
sbb
dec
lret
cmp
adc
scas
bound
jl
rolb
outsl
xlat
jge
fldcw
lret
rorl
clc
and
and
leave
xchg
xchg
sbb
mov
xchg
mov
sbb
lea
cmc
in
push
jmp
pushf
fucomp
stos
iret
lret
jmp
leave
out
pop
test
fdivr
arpl
ss
mov
dec
fsubs
pop
fs
adc
pop
adc
enter
mov
lahf
and
lcall
loopne
jno
push
and
inc
or
adc
mov
pop
lea
bnd
std
or
dec
or
lea
fs
stos
fdivrp
dec
popf
mov
push
lds
imul
mov
lods
and
ficoms
jo
sub
aaa
pop
test
sub
insb
call
or
adc
in
ret
mov
movsl
nop
push
mov
dec
call
cmp
dec
pop
call
pop
lret
inc
sub
rcll
scas
cwtl
in
xor
inc
or
sub
push
rclb
in
movsl
sub
jge
popa
psubsw
scas
cmp
jge
movsb
push
mov
sbb
pop
out
imul
cmp
jbe
hlt
ljmp
sbb
clc
les
div
cmp
outsl
push
pop
int3
insl
lahf
mov
mov
sub
dec
adc
jbe
fsubrs
sahf
sahf
cli
in
lret
iret
sbb
sub
fisttps
in
adc
test
cmp
ror
mov
pop
inc
jbe
mov
test
cli
and
leave
out
out
add
adc
mov
pop
nop
int3
adc
pop
lahf
mov
pop
dec
mov
dec
decb
inc
mov
sub
fnstsw
daa
test
pop
and
or
ficoml
mov
jae
adc
loop
ds
adc
daa
jo
mov
fs
mov
cltd
test
out
and
mov
inc
ror
push
mov
jmp
rol
and
stos
stos
inc
jecxz
inc
jp
dec
dec
mov
adcl
dec
sahf
imul
lcall
pusha
jns
xor
adc
mov
add
cmc
aaa
cmpsl
stos
adc
adcl
sti
mov
rcl
inc
mov
adc
jne
js
mov
jo
jl
jle
or
cpuid
mov
xchg
jnp
cmp
fildll
mulb
pop
mov
pop
insb
mov
mov
pop
jns
xchg
jp
sub
xor
fdivp
mov
mov
test
cmp
and
out
in
cmpsb
and
sub
and
repz
dec
insl
xchg
mov
mov
je
inc
repz
pop
das
js
ljmp
aas
mov
push
inc
xor
repnz
pusha
pop
push
mov
in
loopne
dec
bound
pushf
mov
xor
and
xchg
iret
dec
cmp
andb
mov
je
xor
jnp
lods
mov
xchg
cwtl
pop
lcall
jle
push
sub
hlt
mov
or
mov
cmp
push
ljmp
mov
cmp
aam
loop
sub
test
fists
adc
push
add
leave
add
jle
clc
mov
adc
sub
and
stos
or
adc
imul
icebp
cmp
xchg
jge
and
mov
mov
jp
inc
pop
mov
sbb
jns
mov
cmc
jg
lea
repz
std
lea
xchg
pop
cmp
divb
stos
cmp
add
add
fs
mov
dec
sub
add
mov
mov
fsubl
mov
aad
mov
cmp
inc
pop
xchg
or
or
push
daa
push
jmp
hlt
mov
dec
inc
pusha
and
add
pop
xchg
test
sub
shlb
fldln2
inc
xchg
and
test
dec
mov
hlt
bound
popf
pushf
icebp
dec
fs
mov
and
mov
leave
ror
loopne
in
mov
pushf
push
outsb
scas
mov
push
xchg
jg
insl
mov
ret
fisubs
jne
in
rol
gs
xor
mov
insl
mov
sub
add
gs
repz
mov
sbb
push
movsb
insl
pop
out
and
int3
stos
jmp
aas
xchg
int
je
aaa
daa
and
dec
mov
scas
xchg
insl
add
mov
inc
sbb
cmp
push
rcll
cmp
shrl
ret
incb
cli
xor
push
mov
push
pop
scas
pop
xlat
mov
divl
test
out
jg
mov
sbb
movsl
negb
dec
test
and
mov
pop
or
shll
cmp
frstor
mov
sbb
std
add
pusha
enter
pop
lahf
jo
rolb
adc
mov
icebp
jecxz
and
jmp
mov
jge
sbb
pop
imul
movsl
jmp
pop
xchg
push
scas
orb
lahf
push
cld
test
addr16
mov
pushfw
je,pn
ret
push
push
movsb
mov
lock
xor
lahf
lea
lret
adc
test
mov
mov
inc
outsb
mov
int3
fimuls
popa
movsl
insl
lock
dec
and
fmul
add
ret
dec
mov
sbb
mov
into
dec
or
pusha
or
add
popa
and
push
xchg
cmp
data16
sbb
das
paddsw
into
loopne
adc
cld
jno
stc
fwait
nop
and
sbb
mov
scas
inc
loope
test
and
jne
jne
aam
jle
mov
js
sarl
push
pop
push
movsl
sub
leave
lods
jo
call
fmuls
jl
clc
mov
or
shll
imul
mov
pop
dec
mov
mov
ds
pop
mov
push
cli
pop
imul
mov
mov
sti
in
fisttpl
push
addr16
mov
loopne
mov
pop
jecxz
inc
push
jecxz
xchg
jmp
pop
sbb
outsb
xor
inc
scas
mov
mov
inc
push
sub
hlt
cmp
push
push
test
mov
dec
jg
adc
mov
in
fcomps
pop
mov
jbe
cmpsl
adc
out
mov
or
scas
xchg
sbb
fisubrs
pop
cltd
and
push
push
in
sub
stos
pop
out
xchg
cmp
imul
cwtl
outsl
fistpll
stos
aad
mov
mov
mov
lret
or
es
adc
das
lock
mov
fimull
bound
rcrl
leave
jnp
fnsave
mov
and
sbb
rcll
andb
subb
push
sbb
sbb
dec
jg
push
stos
xchg
fwait
imul
xor
add
add
add
xor
stc
cmp
and
mov
pop
cmp
rcl
stos
rep
mov
lahf
in
cld
into
lods
sti
mov
mov
in
out
rclb
dec
jnp
in
in
push
leave
out
sti
insl
jg
add
cmp
imul
cmpsb
xor
mov
aaa
jo
lret
cld
pusha
mov
pop
movsl
pop
lods
nop
dec
fs
jo
jbe
and
arpl
jp
mov
js
rcl
dec
jle
cmp
mov
cld
add
out
xchg
cld
sub
gs
subl
cmpsb
xchg
mov
in
jp
cltd
xchg
adc
js
daa
dec
jecxz
xchg
xor
movsl
std
push
cmpsb
nop
jge
push
pop
inc
js
mov
pop
pop
std
stos
bound
fwait
sbb
aas
loopne
fsts
dec
js
pop
in
in
addr16
and
in
cltd
xlat
pop
add
movsl
cmpsb
cmp
dec
and
mov
repz
insl
mov
inc
stos
inc
loope
and
xor
fbld
and
push
pop
jne
loop
mov
and
cmpsl
cmp
mov
test
xchg
jmp
stos
fnstcw
std
sbbb
fld
sub
mov
sbb
jmp
push
daa
inc
cmc
mov
inc
bnd
sar
mov
nop
test
clc
sbb
rorb
inc
pop
fldcw
xor
fisubl
dec
add
pop
addr16
nop
pop
sbb
imul
jnp
push
jg
mov
test
fiadds
test
jb
out
aam
adc
jg
mov
jmp
mulb
lods
xchg
inc
cmp
dec
jbe
push
sbb
sbb
or
fs
add
mov
lcall
movsb
cli
sub
cmp
jle
inc
mov
jg
aad
jle
inc
jno
inc
mov
jo
mov
dec
rclb
mov
cli
jl
fsubrl
repz
sbb
sub
xchg
insb
rcrb
loop
sub
loop
int
lcall
rcll
add
in
pop
sti
and
iret
xlat
in
xor
or
push
mov
jmp
jo
mov
xchg
xchg
loop
in
out
cmp
lds
push
sti
lcall
fs
mov
push
add
mov
jl
adc
and
jmp
pop
adc
and
addl
int
xor
and
push
out
aam
cmp
jmp
scas
lahf
fldt
pop
sub
and
adc
outsl
arpl
dec
je
je
inc
add
test
add
dec
xchg
pop
jp
stc
scas
call
dec
loopne
adc
scas
xor
out
lret
rorb
test
rcll
dec
ds
and
mov
popf
jmp
or
pushf
shrl
icebp
fisubs
dec
mov
dec
imul
sbb
push
push
sub
mov
js
pop
xchg
test
lea
push
and
dec
not
adc
imul
add
out
add
inc
mov
lcall
insb
ja
inc
aad
cmp
xor
popw
scas
inc
outsl
mov
rolb
jns
lret
mov
jne
in
fsubs
adc
and
shrb
add
adcb
inc
xchg
out
pop
sti
adc
jle
add
sbb
pop
es
pop
fsubs
std
push
iret
outsb
lcall
mov
mov
ss
mov
dec
mov
or
aaa
cwtl
jne
jg
mov
mov
lret
in
cwtl
add
lods
jecxz
jbe
jge
lock
pop
fists
int
jmp
jae
lds
ret
lds
ljmp
jecxz
ss
loop
xorb
add
mov
jmp
cmp
scas
ret
adc
xchg
rcrl
std
adc
ljmp
push
and
push
add
dec
stos
ljmp
cli
jecxz
mov
das
cld
mov
fisttpl
mov
ja
call
cmpb
pop
aam
cs
jns
inc
and
inc
add
add
mov
mov
cli
shl
shr
fcom
pushf
xchg
ljmp
repz
inc
add
cwtl
jle
jne
es
call
inc
mov
dec
push
xchg
and
cs
or
out
pop
pop
inc
stc
jmp
call
nop
call
adc
in
mov
out
dec
cld
icebp
push
fwait
nop
sub
incb
call
inc
xchg
enter
cmc
mov
jecxz
sub
popf
xor
mov
push
push
cltd
inc
andps
add
sub
in
cmpsb
jp
inc
xchg
jnp
in
xchg
insb
fdivl
movsb
adc
rcll
mov
sbb
inc
sbb
and
das
adc
cwtl
sbb
inc
sahf
divl
loop
mov
lea
adc
push
lods
pusha
imul
lods
fwait
loop
ljmp
lcall
sub
in
or
push
iret
mov
inc
jp
jge
mov
fs
in
push
xlat
mov
xor
push
sub
dec
and
or
dec
jg
and
icebp
or
xor
or
pushf
jno
xchg
xor
mov
and
jle
movups
mov
mov
add
sti
push
xor
fstl
adc
fcmovb
andb
test
out
int3
xchg
push
inc
rep
mov
ja
les
in
cmp
push
je
push
xorl
cmc
mov
ret
call
test
cmp
mov
push
shr
mov
adc
aas
es
adc
sub
inc
sahf
or
mov
test
add
add
ret
das
daa
outsb
pop
dec
mov
jl
or
pop
fwait
repnz
popa
mov
shrl
ljmp
sub
out
jno
nop
push
je
in
mov
pop
lcall
jmp
scas
pushf
mov
in
sub
mov
hlt
and
in
movsb
jge
les
mov
sahf
and
mov
adc
outsb
adc
sarb
test
mov
movsl
sub
xor
int
out
push
inc
mov
add
cmpl
mov
or
xor
xor
sbb
inc
mov
mov
mov
mov
and
cli
les
aad
push
cmpsl
or
mov
pop
mov
into
push
test
xchg
dec
jge
enter
ret
add
ret
mov
insb
and
test
movsl
xor
cld
inc
xchg
test
call
pop
adcl
fstl
mov
or
and
add
cmc
leave
inc
aaa
mov
mov
arpl
sbb
aas
add
mov
xor
out
fbld
aaa
xorb
jno
mov
pop
loopne
pop
subb
inc
jmp
cmp
push
jne
xorl
sbbb
ds
popf
mov
sub
lods
jmp
pop
xchg
loope
in
push
jnp
aad
outsl
popf
es
add
and
hlt
repz
adc
sahf
sbb
mov
mov
pop
and
xchg
mov
aas
loope
or
fwait
pop
push
sbb
popf
aad
ret
fsub
leave
push
jns
or
push
out
leave
mov
lret
test
dec
mov
cmp
adc
mov
int3
mov
sub
dec
loop
call
sbb
inc
out
sbb
iret
jge
push
movsb
xchg
testb
arpl
shl
orb
lcall
hlt
stos
adc
add
fldt
std
jp
addb
stos
xchg
add
imul
mov
out
int3
mov
into
inc
cwtl
sub
ja
cmpsb
xor
test
and
mov
jns
xchg
mov
repz
sbb
cmp
aam
popf
cmp
inc
movsb
xchg
and
inc
jg
icebp
test
repz
lcall
adc
cli
psadbw
sti
popl
cmp
adc
jno
xsaves
nop
popa
mov
cmp
xchg
nop
sbb
pause
bound
in
jle
mov
test
and
rep
mov
incb
and
popf
pop
or
xor
xor
filds
dec
mov
gs
ret
xchg
jne
inc
pop
sbb
xchg
adc
lahf
out
and
inc
jnp
dec
dec
dec
jl
cmc
or
pusha
pushw
repnz
mov
jo
data16
mov
mov
jae
dec
inc
adc
js
cmpsl
add
aas
jb
stos
push
sbb
iret
or
mov
clc
add
shlb
push
fsubs
mov
fnsetpm(287
outsl
lods
insb
adc
imul
jge
cmp
cmp
push
movb
nop
idivl
xchg
inc
dec
adc
mov
jnp
rcrb
sub
and
sub
data16
xchg
sub
sar
adc
das
decl
or
lods
adcl
push
adc
notl
ss
inc
xor
jns
stos
mov
add
es
les
sbb
inc
jno
jb
or
sbb
or
rorl
add
out
inc
fs
add
adc
sbb
push
or
cmc
or
ds
cmpsl
or
mov
mov
xchg
rorl
xchg
js
insl
push
out
cwtl
jno
add
flds
xchg
popa
jp
jae
and
mov
push
lods
popa
int3
and
push
and
test
sub
cmp
scas
scas
mov
inc
xchg
mov
pop
push
loope
data16
sbb
or
stos
and
and
je
adc
ret
lods
stos
mov
cmpsl
aas
sbb
or
pusha
add
push
test
cwtl
xchg
inc
orl
inc
pop
cs
pop
cltd
push
pop
and
aas
sarb
pop
sub
imul
adc
movsl
hlt
imul
pop
or
fimuls
mov
adc
loop
ja
shlb
jne
sbb
loop
cmp
and
movsb
les
mov
mov
and
or
or
sbb
cwtl
out
nop
addr16
xchg
inc
cmpsb
mov
cmc
shrb
icebp
dec
inc
pop
int
fs
or
outsb
and
push
jns
cmpsl
add
add
cltd
stos
inc
push
movsl
ljmp
xchg
iret
mov
fnstcw
shlb
imul
xor
cwtl
fnstsw
or
out
push
sahf
xlat
inc
mov
jns
or
jecxz
pop
inc
test
mov
test
lret
mov
mov
xor
fbstp
xchg
add
jmp
mov
jae
lods
ds
xor
int
scas
adc
data16
fimull
pop
sbb
stos
dec
cmc
pop
cmp
mov
pop
aad
lock
mov
dec
and
mov
or
dec
test
sbb
mov
xor
cld
add
mov
jae
das
mov
pop
insb
subl
sarb
mov
mov
sub
dec
xor
mov
in
pmovmskb
stos
idivb
pushf
jno
xchg
sub
addr16
push
data16
mov
std
mov
out
mov
repnz
jae
mov
bound
loope
popf
popa
jne
notb
inc
cld
mov
xchg
stos
cmp
xor
jnp
call
cmp
std
and
outsl
pop
fldl
rcrl
punpckldq
add
in
pop
mov
add
mov
cmp
sbb
push
mov
dec
daa
cmpsb
hlt
cltd
lea
jbe
add
jg
test
scas
xor
mov
sbb
add
or
mov
push
xchg
dec
int3
mov
cltd
in
vucomiss
out
mov
ljmp
sub
cmpsl
push
in
mov
jb
mov
shll
jbe
sahf
inc
push
mov
rcl
push
xchg
repz
repz
jl
xchg
push
cmpsb
push
and
jge
add
mov
jnp
fiaddl
cltd
cmpsb
xchg
lds
push
outsb
xlat
mov
sub
sbb
daa
push
jp
fcmovb
mov
stos
fsts
xchg
loopne
mov
mov
imul
push
and
xor
or
cwtl
dec
out
in
roll
mov
cmp
lahf
mov
js
cmpsb
lock
inc
sub
fdivrl
std
push
out
xor
add
sbb
ret
arpl
movl
sub
jb
shr
pop
mov
xchg
xor
or
xor
roll
or
jl
iret
fs
xor
call
in
xlat
mov
xor
fwait
and
aaa
ja
scas
sub
lods
ja
jg
orb
ror
or
call
xchg
ds
popf
jg
xor
les
subb
cmpsl
ficoml
in
inc
shl
xchg
pop
pop
xchg
aam
pop
mov
mov
arpl
dec
adc
jo
pop
enter
in
xor
addr16
insb
pop
shr
leave
icebp
test
repz
ja
fimuls
inc
xchg
jno
mov
loopne,pt
mov
cmc
mov
push
cli
sahf
pop
out
adc
lds
lret
test
cwtl
or
mov
imul
push
pop
int3
push
inc
ds
in
shlb
loopne
sub
scas
fildl
sbb
fldz
adc
mov
lds
sub
mov
leave
nop
stc
sbb
hlt
imul
jmp
dec
iret
sbb
pop
aas
fsub
nop
cmp
popa
mov
xor
inc
push
fisubrl
pop
cmp
leave
mov
lret
dec
mov
add
pop
fidivs
xchg
mov
and
cmp
sbb
mov
mov
ficomps
push
inc
ljmp
xor
pop
mov
pushf
loope
sahf
push
push
inc
sub
mov
inc
and
cmpsl
jg
jmp
test
pusha
fcompl
mov
xchg
movl
xor
push
mov
mov
dec
ljmp
in
insb
pop
cmc
outsl
sbb
filds
sub
cli
dec
aam
mov
in
add
sub
add
xor
sbb
pop
insl
pop
popf
das
les
test
aas
sahf
das
out
jl
jnp
inc
inc
dec
sti
sub
adc
jno
fsubrl
out
sub
int
dec
lods
ror
inc
push
rcr
mull
xor
pop
dec
inc
jae
xor
mov
adc
lds
fwait
lods
fbld
xchg
jg
push
jmp
fs
cmpsb
xchg
das
jbe
mov
mov
daa
repnz
pop
mov
push
cwtl
sahf
cmp
pop
std
outsl
jae
xor
repnz
mov
fcoms
or
outsb
mov
rol
cmp
adc
jge
mov
push
cs
push
xor
lcall
mov
lret
inc
dec
mov
pusha
ret
mov
cmpsl
pushl
ljmp
cmp
mulb
pop
pop
or
xor
xor
leave
iret
cmp
je
loop
jno
shr
push
aaa
cmp
mov
addr16
shlb
pop
xchg
aam
subb
lret
mov
xor
pusha
and
sbb
int3
jg
dec
mov
stos
cltd
lcall
push
lret
cli
insl
mov
pop
test
insb
push
or
jnp
es
or
lods
push
cmp
and
mov
sbb
mov
push
cmpsb
gs
sbb
iret
or
jg
movsl
and
and
sbb
fsub
cmc
ljmp
pop
fistpll
loop
hlt
push
pop
push
decl
pop
sub
rcl
das
arpl
je
clc
mov
cmpsb
aam
ljmp
mov
mov
push
call
jns
jmp
dec
imul
jl
shl
fsubr
adc
scas
mov
pushf
shrb
dec
or
adc
les
inc
xchg
sbb
mov
subb
out
pop
xchg
insb
or
sahf
lahf
pop
fsubrs
sub
jno
jb
loopne
and
sbb
adc
lahf
push
adc
dec
or
xor
aas
movsb
stos
repnz
dec
xchg
and
inc
or
pop
lds
cmpsl
imul
push
dec
test
push
mov
pushf
pushf
mov
and
idivl
xor
lret
push
mov
or
shll
cli
ljmp
shl
into
pop
imul
pop
mov
jp
jg
inc
or
dec
mov
xchg
mov
pop
add
lea
xor
mov
sbb
xorl
sti
fbld
inc
add
loop
les
mov
outsl
ljmp
repnz
sub
mov
sahf
dec
pop
ss
or
or
imul
and
daa
cmp
and
or
dec
xor
sub
rcr
jbe
sar
mov
push
popf
push
scas
mov
add
sub
enter
add
movsl
add
push
or
loopne
jns
movsl
jp
push
xchg
in
push
subl
mov
into
sahf
adc
jl
shll
divl
lock
sub
fildl
jb
sub
rolb
mov
mov
les
mov
mov
adc
lret
sbb
es
in
inc
push
or
roll
je
daa
mov
clc
imul
outsl
inc
loopne
stos
js
loop
loopne
addr16
xchg
mov
movsb
cwtl
arpl
push
jmp
add
sub
mov
hlt
inc
leave
icebp
ljmp
sub
stc
fwait
adc
scas
mov
das
sbb
jnp
insl
xchg
into
sahf
arpl
repnz
mov
add
sahf
xchg
lock
mov
test
int
jg
jle
adc
lds
xor
mov
outsl
fimuls
inc
push
rcl
mov
imul
dec
int
dec
clc
mov
mov
in
jnp
pop
jl
ret
lcall
push
testb
push
mov
cli
hlt
scas
enter
notl
fcoml
mull
in
mov
add
xchg
or
shr
inc
push
lods
out
inc
ret
jae
jns
or
fdivrs
xlat
add
leave
jno
or
adc
sub
gs
pop
xlat
inc
push
movsb
mov
add
add
mov
call
xorl
loope
and
xor
les
cmp
test
lock
sahf
pop
push
jno
xchg
push
xchg
xchg
xchg
lahf
push
ds
movsl
fsts
push
jecxz
mov
and
scas
movsb
insb
ror
aaa
and
mov
popf
inc
mov
iret
out
xor
je
jl
into
mov
lods
mov
sub
mov
call
adc
repz
sbb
gs
mov
je
outsl
push
mov
mov
gs
loop
in
mov
jecxz
lods
add
lods
rep
or
jge
ficomps
jno
cmc
test
mov
and
insl
sti
fistpl
movsl
bound
mov
lds
lcall
push
mov
sbb
cld
sbb
cltd
idivl
sub
shlb
mov
std
lahf
xchg
xor
int
sbb
xchg
sub
and
test
cmp
mov
cmp
clc
push
aam
or
andb
push
hlt
test
sub
cmpsb
test
sbb
enter
pop
sub
aaa
dec
lahf
aas
aam
sub
hlt
rcrl
popa
fisttpl
inc
shrb
inc
sub
mov
cwtl
push
in
and
call
inc
fwait
pop
negl
loopne
pop
pusha
in
mov
dec
sahf
mov
xchg
dec
subl
sub
in
xchg
pop
and
cwtl
sbb
xor
push
sub
lock
inc
xor
sub
repz
adc
aam
cltd
inc
add
pop
dec
clc
cltd
fmull
push
xchg
mov
aad
daa
and
cmc
xchg
loope
imul
pushf
lock
pop
dec
sub
rorb
mov
sub
inc
jae
dec
pop
pop
pop
sbb
nop
int3
push
ljmp
jecxz
jbe
in
add
mov
aam
in
inc
iret
pmuludq
xor
sarb
ljmp
out
lods
jo
mov
andps
or
mov
mov
sahf
mulb
lcall
and
std
jl
mov
xor
mov
jne
loope
inc
mov
cmpsl
sbb
movsb
mov
xor
sub
inc
or
add
mov
add
push
imul
stos
roll
xor
cmp
stc
sti
mov
fcoms
push
jb
push
psadbw
inc
dec
cmp
mov
dec
sar
cmpsb
je
pop
leave
mov
bound
inc
sub
sub
xor
loopne
and
push
sub
arpl
mov
add
xchg
arpl
roll
sbb
js
orl
lods
pop
or
icebp
cmpsl
or
sarb
adc
subb
inc
int
movsb
hlt
and
div
stc
push
add
loope
ret
push
mov
xor
add
jno
mov
xchg
rcll
add
pop
fwait
dec
ret
inc
jmp
sub
dec
mov
sbb
data16
aad
leave
sub
lret
std
loopne
fs
movsl
or
les
dec
mov
mov
hlt
cwtl
mov
fildl
adcl
negb
div
jge
arpl
push
pop
adc
roll
subl
repnz
mov
inc
adc
mov
stc
shll
lret
call
xor
pop
pop
jge,pn
push
dec
cld
fldcw
fmul
insb
xor
dec
dec
and
in
sbb
add
dec
rorl
inc
adc
stc
xor
lahf
fisttpll
popf
testl
das
mov
sub
cwtl
xchg
lret
scas
cmpsb
inc
sbb
sub
dec
nop
mov
pop
sbb
jmp
add
mov
and
loop
xlat
xchg
lahf
dec
push
stc
ss
sub
fwait
sub
dec
jle
fsubrs
mov
or
and
mov
lods
cmp
ljmp
sahf
decl
dec
stos
inc
and
mov
inc
fwait
sbb
loopne
push
cmpsl
jb
and
mov
insb
outsl
adc
cmpsl
and
inc
pop
mov
std
in
nop
and
aam
or
add
stos
mov
pop
cwtl
test
ss
xchg
add
int3
cld
into
in
repz
aad
sub
and
inc
sbb
dec
cli
je
xchg
shlb
pop
mov
int3
in
int3
test
ret
mov
imul
mov
xchg
xchg
inc
sub
add
bound
js
dec
icebp
xor
sysret
and
jno
jo
inc
add
insb
gs
dec
fisttpl
mov
mov
mov
mov
repz
cwtl
repnz
stos
icebp
mov
and
enter
jmp
aam
pop
push
out
stos
arpl
pop
and
pop
mov
in
testl
mov
jns
adc
inc
pop
cmp
inc
mov
xor
or
andb
xchg
add
dec
jle
pop
insl
jns
aas
jb
mov
jns
shr
les
push
out
xor
stc
xor
gs
ja
xchg
adc
das
adc
mov
cmp
mov
lret
lods
mov
mov
rolb
cltd
xor
fwait
idivl
cmp
dec
pop
sub
daa
sahf
out
addb
mov
ja
sbbb
adc
icebp
adc
test
pop
orl
jne
push
inc
sub
or
sbb
push
xor
ficomps
cmp
cmpsl
cltd
aas
inc
fdivs
repnz
and
cmp
or
pop
repnz
jl
movb
mov
mov
rorl
xchg
lcall
lea
fsubl
push
ljmp
in
pop
mov
lds
push
inc
or
mov
repnz
mov
push
nop
cs
rol
nop
jg
or
push
cmp
test
add
insl
fadds
movsl
push
lret
pushf
jp
sbb
jl
adc
shl
xchg
mov
out
ss
xor
xor
movq
mov
dec
gs
fs
jo
lahf
sahf
lock
cltd
mov
popa
ss
mov
fdivl
pushl
aaa
dec
cltd
adc
pop
adc
jg
stc
roll
mov
fwait
adc
pop
mulb
fsubs
adc
int
and
loop
pop
or
mov
jp
cwtl
mov
push
into
jecxz
mov
cmc
xchg
xchg
push
cmpsb
test
push
incb
testb
or
sahf
mov
adc
push
stc
ljmp
dec
jnp
fnstcw
xchg
pop
jge
xchg
push
test
inc
dec
xlat
les
or
adc
scas
push
lcall
pop
mov
mul
loop
cltd
mov
or
xchg
jo
jo
in
outsl
mov
into
mov
lret
push
cld
jo
sub
roll
and
in
movsl
pop
add
nop
pusha
aaa
jge
cmp
push
mov
xor
or
add
inc
outsl
or
clc
sub
repnz
fidivrl
push
jb
cmp
cmp
ljmp
inc
sub
push
push
cltd
sub
ret
in
je
cmp
es
cli
mov
jmp
fstl
mov
mov
mov
push
push
mov
int
mov
or
push
adc
data16
fisttpll
xor
mov
pop
inc
testl
mov
in
sub
je
test
jecxz
leave
jmp
insb
xor
arpl
pop
shrb
pop
inc
lret
add
pop
cmpsb
addb
aam
clc
es
pusha
aad
jl
pop
mov
dec
fisttpll
aad
push
sub
insb
pop
in
mov
fidivrs
loopne
lods
nop
cwtl
lea
push
leave
mov
inc
daa
adc
out
pop
mov
add
shrb
movsl
in
fs
add
inc
sub
sarl
cwtl
mov
add
fadd
push
dec
xchg
fcomp
xlat
sbb
sbb
out
sbbl
gs
fnsave
cld
aam
fstpl
aas
js
push
mov
test
cmp
dec
imul
stos
dec
enter
adc
cmp
lret
inc
fldl
clc
push
aam
dec
pop
in
sbb
adc
sbbl
int
mov
lcall
in
dec
aas
rcl
and
or
push
dec
jnp
dec
aad
hlt
inc
loope
pusha
push
sub
jo,pt
rol
cmp
xchg
and
xor
push
and
mov
rolb
or
sub
mov
lods
add
sti
into
call
sbb
stc
jl
adc
inc
mov
inc
sbb
test
ja
fs
cmpsb
cmp
enter
sub
aad
sub
adc
or
mov
jmp
cmp
and
gs
add
mulb
fistl
test
inc
fldt
bnd
scas
dec
hlt
aaa
mov
pop
cli
adc
and
xor
pop
aam
movsl
pop
cmpsb
int
xor
cltd
hlt
cmpsl
xchg
add
jp
nop
jno
lret
ret
jbe
adc
jnp
pop
xchg
dec
cwtl
gs
jns
test
push
test
sub
shll
sub
in
cmc
xor
nop
mov
test
jge
mov
xor
ja
add
mov
rcll
mov
jecxz
rcr
or
cmpsb
enter
mov
adc
lret
gs
dec
daa
lods
cmpsb
gs
and
push
lods
rclb
repnz
jecxz
cwtl
sub
fimull
sbb
pusha
sub
sub
loope
mov
mov
fldcw
incl
out
in
enter
mov
mov
ljmp
js
sbb
lret
in
mov
mov
loope
adc
movl
sbb
mov
and
add
and
or
pop
and
push
and
or
loop
pusha
sub
xchg
pop
nop
fadds
icebp
mov
pop
ret
mov
xchg
dec
lock
sbb
sub
sahf
and
sti
add
sub
out
arpl
dec
jmp
ret
imul
mov
loop
inc
jbe
pop
repz
xchg
xor
mov
out
mov
sub
call
js
into
stc
cmp
clc
adc
pop
dec
insl
or
or
mov
rcrl
lods
sbb
sbb
sbb
jmp
push
push
add
mov
sub
xor
test
pusha
cmpsb
jge
cmp
jl
inc
push
stos
decb
into
and
mov
loop
and
cmpsl
mov
xor
je
test
mov
sub
outsl
inc
mov
cltd
clc
mov
lock
fdecstp
cwtl
push
sub
dec
mov
push
cmp
mov
test
lods
add
daa
stc
jecxz
xorl
imul
sbb
cmp
mov
xchg
vmwrite
adc
fmull
jecxz
subb
adc
addr16
and
sbb
cltd
dec
insl
or
jp
sbb
mov
push
sub
xor
adc
and
adc
stc
movsb
push
jb
outsb
jl
mov
and
cltd
stos
js
jnp
hlt
out
les
xor
push
sbb
test
sti
popf
mov
shrb
cmc
pop
add
test
sub
xchg
popa
sbb
scas
pop
in
cmp
jnp
dec
xchg
adc
push
stos
jp
cld
rcl
xchg
inc
or
push
cld
cmp
dec
jno
bound
int3
dec
test
pushf
pushf
xor
push
out
xchg
and
xchg
insl
add
mov
sub
cs
lock
xor
jne
fs
pop
orb
xchg
jmp
fcompl
aam
decb
sub
pusha
decl
cmpl
jae
xor
push
gs
push
dec
pop
mov
in
sub
lret
cld
iret
adc
mov
ljmp
push
test
ret
push
iret
xchg
pop
cs
fbstp
and
mov
cltd
jnp
xchg
loope
mov
inc
xor
in
ss
dec
outsl
enter
mov
clc
cmpsb
sbb
fwait
adc
pop
cmp
out
jge
inc
push
xchg
mov
repnz
fnsave
lods
loop
xor
ds
xchg
aad
jecxz
cmp
cmpsl
test
xor
nop
js
loop
xor
jg
andl
push
cmp
sbb
sub
add
jo
sbb
jno
fadds
jbe
xor
mov
lds
bound
jo
sub
lods
ljmp
shrl
sbb
dec
loope
hlt
sbb
jo
inc
adc
test
adc
sbb
inc
fwait
incl
out
das
mov
imul
dec
fldt
fildll
adc
add
lods
mov
ds
inc
in
mov
inc
popa
jmp
and
div
fiaddl
dec
insl
mov
mov
sbb
fsubrs
or
mov
dec
adc
mov
gs
inc
call
pop
adc
xor
pusha
or
jno
fildl
mov
xchg
inc
dec
sbb
sbb
push
loop
push
adc
imul
jbe
frstor
ss
push
xor
aaa
das
fdivrs
inc
jp
lret
in
adc
lods
xor
imul
lcall
jb
cwtl
fcoms
sub
and
inc
add
je
cmp
add
in
cmp
cmc
les
jle
fldl
jns
pop
hlt
jbe
xor
and
jl
or
and
sbb
push
or
cmp
pop
cld
test
mov
xchg
sub
lret
mov
and
xchg
adc
sbb
mov
cltd
inc
cmp
in
dec
xlat
xlat
cli
testb
push
lea
and
mov
cld
mov
sbb
imul
rorl
ficomps
fwait
and
adc
ljmp
push
add
xor
sbb
mov
push
int3
cmpsb
or
sub
mov
push
jmp
arpl
pop
inc
cmpsb
and
cmp
lods
jmp
mov
fists
mov
into
fistpl
dec
popa
jp
mov
mov
cmc
push
cli
call
sarl
pop
arpl
adc
sub
xor
sbb
jecxz
nop
or
pop
push
in
and
scas
ljmp
mov
jmp
repnz
mov
jnp
push
push
sahf
xchg
mov
in
loopne
push
and
dec
and
mov
mov
fnstcw
mov
dec
sbb
mov
push
dec
fiaddl
loopne
fstpl
mov
mov
andl
cmp
mov
mov
inc
jno
inc
cmp
sub
dec
jbe
push
fistpl
push
insb
and
inc
mov
add
stos
dec
adc
insb
sahf
out
xor
mov
add
sub
fidivrs
mov
push
adcb
test
ss
mov
sub
push
fnstcw
cs
out
mov
cmc
scas
outsl
dec
sub
fldenv
pop
lock
xchg
or
stos
mov
mov
pop
insb
mov
adc
daa
mov
repz
pop
cmpl
lret
mov
push
mov
rep
add
cs
pusha
inc
xor
inc
pop
add
arpl
nopl
sub
pushf
mov
push
add
mov
pop
fisttps
xor
sub
lods
sbb
enter
lds
andb
jmp
sub
loopne
daa
push
outsb
sbb
insl
cmp
leave
or
adc
fwait
xchg
mov
xchg
test
lds
aas
adc
xchg
stos
pop
jp
scas
repz
jns
andb
push
dec
or
jbe
in
xchg
inc
add
sbb
xchg
icebp
rcll
mov
fisttpll
add
es
cmpsb
pushl
add
lcall
xchg
popa
data16
xchg
add
cmp
bound
bound
lahf
adc
push
add
or
movsb
mov
cmpsl
jl
mov
jo
sbb
pop
sti
and
aas
in
lods
mov
shlb
inc
test
andl
mov
sbb
mov
enter
test
jge
cmpsl
test
inc
push
inc
sub
mov
and
cmc
aaa
add
enter
or
push
or
cmp
pusha
and
adc
ljmp
xlat
push
add
cwtl
pop
aaa
and
mov
jp
fwait
sbb
les
jl
stos
es
sbb
test
inc
out
es
repnz
das
adc
out
jbe
jb
lret
xchg
pop
cmp
sbb
cs
cmp
xchg
mov
in
stos
adc
xchg
mov
pushf
les
aas
jbe
add
mov
pop
cmp
inc
push
cmp
mov
mov
mov
ror
das
out
push
jno
addr16
fsub
in
rcr
mov
push
push
ficoml
lods
dec
pop
cmp
sub
pusha
rcll
in
mov
cli
add
ds
mov
lret
fdivrl
gs
push
inc
and
xchg
jo
int
int
out
rcr
mov
rolb
push
and
xchg
into
pop
sub
dec
add
inc
push
int3
leave
mov
ret
jbe
insl
int
dec
imulb
push
mov
movsl
ret
fdivrl
dec
push
mov
mov
fmulp
mov
fists
aad
pop
jle
or
jae
xor
stos
push
popa
in
test
xchg
jo
repz
add
or
mov
sbb
sub
xchg
in
aam
mov
fcom
mov
psubd
or
das
mov
outsl
mov
sub
add
jo
push
push
cmc
push
adc
into
xchg
sub
mov
repz
dec
pop
out
dec
pusha
push
inc
movsl
stc
call
and
aaa
ds
xor
dec
xchg
cmp
push
popf
dec
jae
or
push
push
sub
pusha
mov
pop
shlb
loopne
push
xchg
scas
inc
test
pusha
mov
push
xchg
xchg
mov
cld
imul
xor
popf
jo
cmpsl
sub
pop
aam
mov
lods
jnp
into
add
inc
jb
sahf
inc
dec
mov
inc
dec
lds
dec
fsubl
scas
fdivs
push
enter
mov
neg
fmull
pop
xor
out
fldenv
or
cmpsb
int3
adc
rcl
mov
idivl
adc
xchg
xchg
sub
and
popa
nop
fdivl
lods
fucom
popf
jne
mov
xor
leave
js
add
shll
arpl
dec
jecxz
repz
insb
and
ds
xchg
push
add
sarb
xor
mov
add
mov
cmp
stos
daa
mov
mov
mov
fmull
xor
data16
fdivs
imul
cltd
mov
inc
fs
mov
and
mov
or
pop
outsl
call
lret
inc
dec
adc
imul
xorl
xor
fisttpll
mov
xor
pop
mov
out
cmp
mov
cmp
and
xor
or
mov
jb
rcrb
cmp
dec
dec
movsl
dec
jmp
pop
je
pop
push
lret
cmp
push
mov
cmpsl
inc
mov
mov
das
jb
pop
add
or
inc
xchg
xor
cmc
cli
jp
mov
cmp
sub
int3
lcall
pop
andl
sbb
inc
and
fnstcw
adc
add
loopne
fisttps
jnp
insb
mov
int3
jae
rcrl
fdivl
add
or
insl
fidivl
and
sbb
pushf
xchg
sbb
rcr
in
cmp
sub
jns
mov
mov
js
xchg
sub
xchg
push
or
jnp
sti
push
pushf
xchg
andl
ret
adc
fildll
xor
repz
xor
ret
shlb
mov
dec
ret
jge
jl
data16
std
xchg
push
dec
inc
xchg
push
fstpt
sub
mov
sarb
xchg
inc
lock
inc
xchg
inc
inc
mov
pop
pushf
ret
adc
cmp
imul
cmp
mov
mov
fisttpl
int3
js
add
cmp
jle
loop
ds
leave
mov
mov
iret
out
cmp
sbb
xor
push
adc
xor
hlt
sahf
imul
movsl
aad
int
mov
and
cmpb
scas
mov
jecxz
mov
test
loop
or
mov
jp
or
mov
rorb
sbbb
and
into
inc
out
mov
test
inc
mov
fdivp
mov
push
repz
ret
test
xchg
cld
fisubl
pop
stc
mov
aad
icebp
into
js
ja,pn
jg
and
add
and
add
xor
outsl
rolb
sub
es
in
dec
cmp
bound
pushf
pushf
sbb
iret
std
sbb
adc
test
mov
bound
lock
jbe
cmp
fisttpll
and
push
nop
out
sahf
xor
notb
jns
fistps
outsb
jns
loop
adc
jmp
dec
cmp
pop
push
pop
scas
or
test
lret
cmp
mov
push
and
cs
movsb
inc
shrb
xor
gs
sub
bound
cmpsl
mov
fs
mov
roll
dec
enter
clc
dec
jnp
add
jnp
sbb
xor
push
not
int3
popf
inc
hlt
es
push
fwait
mov
fs
inc
lods
in
adc
std
pop
inc
push
push
xor
inc
mov
lret
cmc
cmp
stos
ficomps
xor
repnz
aad
int
repnz
imul
dec
pop
nop
mov
and
adc
les
dec
out
leave
js
scas
sub
in
mov
mov
mov
xchg
mov
bnd
arpl
mov
cmp
aaa
lods
xchg
mov
dec
jo
pushf
or
hlt
test
insb
sub
in
sub
sbb
fwait
lahf
lods
fwait
pcmpeqw
out
ljmp
ds
adc
pop
pop
lcall
loop
push
jg
pop
push
rdmsr
repz
scas
int3
mov
mov
mov
enter
data16
push
aaa
push
lods
dec
pop
lock
adc
sub
adc
xchg
stos
xchg
hlt
add
jp
jbe
std
mov
add
xchg
leave
cmp
arpl
int3
shlb
and
sub
cmp
pusha
fs
jae
inc
mov
arpl
xchg
mov
pop
fistpl
cltd
mov
mov
mov
mov
inc
and
cld
push
mov
movsl
inc
scas
adc
xchg
dec
xchg
dec
out
jmp
mov
and
and
sbb
dec
outsl
add
lret
sub
into
sub
xor
ja
repz
mov
pop
pop
sbb
and
int
add
jge
addl
cmpsb
xchg
mov
inc
sub
fidivl
mov
inc
xchg
mov
loop
test
test
dec
dec
jp
cld
stos
mov
mov
std
mov
out
jle
pop
imul
in
xor
mov
movsl
pop
and
jae
push
clc
sub
jmp
pop
dec
mov
and
mov
jg
std
and
retw
add
sub
pop
out
lea
std
or
imul
xor
rcll
mov
xor
mov
dec
loop
sbb
add
movsb
test
pushf
push
xchg
cmp
jnp
add
adc
in
adc
jmp
xor
mov
loopne
inc
fisubrl
lods
jecxz
notb
cmp
dec
bound
or
pop
in
das
fldenv
xor
mov
inc
test
sub
pop
xlat
lahf
push
outsb
or
stc
pushf
aas
movsl
or
pop
jo
lcall
aad
je
mov
repz
push
clc
fstpt
xor
push
call
add
stos
jle
or
cli
sbb
movups
pop
mov
das
add
dec
jo
fisubs
ljmp
ja
in
testb
xchg
sub
add
jbe
add
xchg
sub
add
hlt
pavgw
loope
iret
inc
insb
out
adc
outsl
test
ret
popa
mov
add
jnp
adc
int
scas
jle
in
ret
or
mov
jl
repz
js
cmp
movl
inc
loope
push
inc
scas
out
mov
jnp
push
jg
jns
jb
into
pop
mov
int3
fildl
out
adc
movsb
je
insl
in
sbbl
pop
cwtl
leave
loop
xchg
inc
fs
add
out
cltd
lea
cmc
jnp
jl
cmp
arpl
repz
jmp
jg
inc
xor
sarb
dec
or
call
cmp
outsl
testl
ret
fistpll
test
int3
jle
pop
or
cmp
inc
bound
add
sub
leave
cmp
push
mov
cli
not
mov
mov
or
xchg
xchg
ret
push
or
cmp
inc
xchg
jecxz
sahf
pop
dec
fmulp
or
xor
xor
icebp
dec
in
dec
fdivrp
xchg
jbe
sub
dec
mov
mov
xchg
leave
ret
xor
fisubrl
outsb
fstps
lahf
mov
mov
fidivrs
or
hlt
dec
xlat
fcmovnb
inc
push
add
inc
cmp
cmc
popa
cmp
xchg
das
adc
cmp
stos
ss
insl
pop
in
pop
push
dec
mov
mov
push
sbb
or
pop
test
sub
xchg
test
shr
mov
fs
xchg
or
loope
sarb
cmpsb
adc
loope
xor
jae
scas
stos
in
es
cmp
mov
mov
jecxz
or
rol
daa
js
stos
inc
popa
out
xor
add
jbe
push
xchg
jno
mov
mov
or
jmp
jmp
jno
les
jmp
sbb
int
jb
adc
jae
mov
jns
mov
push
or
push
inc
imul
sbb
lea
out
inc
rcrl
jo
mov
push
cmpsb
sbb
sahf
cmp
shll
and
push
cmc
xor
lahf
insl
or
jle
push
ret
mov
cmp
repnz
jl
movsl
jae
xorl
mov
mov
xlat
std
cmp
jbe
dec
lret
mov
mov
sub
and
add
sbb
iret
adc
lods
push
adc
or
lock
lcall
mov
data16
std
cmpsb
stos
mov
mov
cmp
dec
sbb
xchg
add
lret
and
mov
and
push
je
movzwl
test
jno
stos
dec
outsl
mov
pop
dec
and
cmc
cmpl
stos
ja
mov
lea
xchg
cmpsb
jb
xor
pop
arpl
push
xlat
addb
mov
sub
fldenv
ss
add
pop
xor
outsl
and
add
test
jmp
lods
or
sti
jo
xchg
or
cmp
and
insl
xchg
cmp
sbb
jns
lods
dec
lock
pop
lods
subb
out
scas
mov
sahf
xor
and
movsl
dec
sub
dec
and
scas
pusha
inc
clc
imul
cmp
in
xor
xlat
sbb
jne
into
or
mov
in
xor
sarl
add
shl
shrb
or
push
cli
xchg
inc
testb
std
data16
lds
sbbb
and
dec
or
lods
or
popf
cmp
int
xchg
ja
cmp
jb
clc
inc
add
stc
insb
clc
fsub
std
jae
pop
decb
add
inc
add
sub
lea
dec
xchg
popfw
movsl
and
mov
inc
cmp
mov
iret
inc
inc
pop
insl
and
repnz
mov
add
push
fcmovb
cmp
test
ds
cmp
aas
fs
and
lahf
out
neg
pop
scas
movsb
loopne
movsl
adcb
movsl
das
and
dec
insl
jecxz
inc
or
xchg
adc
cmp
xor
loopne
xchg
jae
cmp
dec
mov
jmp
andb
adc
adc
cmp
adc
inc
sbb
rcr
mov
leave
movsl
push
cmc
enter
xchg
push
cmpsl
dec
leave
or
enter
jecxz
cld
dec
mov
mov
mov
mov
inc
out
inc
or
push
fimull
nop
out
and
lods
rcr
mov
xor
mov
ljmp
adc
dec
mov
iret
loop
and
adc
lret
fsubr
inc
dec
addr16
add
mov
loopne
cmp
insb
mov
shl
test
rcl
inc
xchg
rorl
shll
inc
inc
pop
mov
xchg
xchg
xchg
repz
cltd
mov
push
xchg
in
mov
jmp
imul
inc
mov
jbe
int
js
jbe
push
or
repnz
xor
dec
mov
jmp
mov
fisubl
in
xchg
lock
sarb
in
sub
xchg
dec
push
sub
cmpsb
cmp
xor
hlt
push
jno
inc
lahf
mov
pushf
cmp
lods
push
ret
pop
jp
call
out
mov
dec
pushf
pop
sbb
repz
js
stc
push
dec
xchg
ror
nop
xor
sub
lock
inc
xchg
sub
xor
sbb
mov
out
je
subl
rol
lcall
outsl
sbb
enter
ret
add
mov
push
std
xchg
jle
imul
divl
in
add
xchg
ljmp
inc
mov
cmpsb
mov
sub
dec
sti
lods
mov
push
pop
orb
push
cmp
pushf
in
or
cmp
or
mov
cvtps2pi
movsb
orb
test
push
int3
add
call
mov
mov
sbb
in
nop
adc
cmp
jge
inc
adc
leave
push
push
movsl
ds
aam
cmp
jno
dec
int3
lahf
inc
loopne
xchg
fcomp
aam
ljmp
ja
mov
push
jmp
fs
roll
fisubrl
stos
push
mov
dec
ljmp
adc
jns
push
xor
cltd
inc
cmpsl
xchg
add
adc
pushf
pop
jle
and
xor
pop
imul
xor
or
loopne
jnp
mov
into
sbb
jns
mov
sub
shll
std
dec
mov
push
push
fcomps
mov
lret
push
dec
js
sub
enter
out
inc
pop
xchg
call
shr
jge
out
rcr
scas
icebp
filds
push
mov
mov
lods
pop
cli
mov
sub
rcr
sbb
ss
ret
shlb
gs
and
int
add
sbb
xlat
cltd
mov
jmp
test
enter
push
xchg
pop
xor
sub
sub
pop
xchg
pop
dec
fdivrl
mov
repz
hlt
in
lds
loop
fdivr
and
xchg
imul
mov
mov
sbb
jo
jnp
xchg
call
repnz
xor
inc
fadd
adc
add
inc
cmpsb
lea
dec
aaa
movsb
stos
mov
sbb
stos
inc
loopne
shrl
mov
cmp
dec
push
sub
repz
cmpsb
jo
mov
out
shrl
inc
loopne
mov
jno
pop
daa
sbb
insb
jg,pn
or
lods
imul
push
ret
push
mov
dec
inc
shll
iret
pop
add
das
lock
adc
sbb
push
mov
xor
lock
sbb
sbb
bound
je
xchg
and
fsubrs
dec
ljmp
sbb
int
jno
xor
sbb
push
fwait
xor
pop
lret
fwait
cmp
fs
movl
nop
mov
lcall
leave
jae
fxch
push
jl
mov
push
fsqrt
cwtl
jle
scas
sub
push
sarb
fdivs
sbb
cmp
pop
outsl
jae
add
pop
test
jo
test
test
sub
mov
jns
clc
dec
jmp
rorl
pusha
scas
or
inc
repnz
mov
lcall
sub
mov
mov
scas
pop
adc
lcall
push
sbb
scas
sbb
aas
in
jne
xchg
sub
ljmp
leave
sahf
dec
or
in
pop
gs
ror
xor
sub
repz
sbb
orl
rcrb
fdivp
xor
mov
bound
add
xor
xor
and
mov
hlt
sbb
sbb
movsl
sub
cmc
fcoms
xor
inc
jle
push
incb
in
adcl
shll
and
mov
mov
dec
les
xchg
jle
xchg
pop
addr16
sti
test
loope
pslld
mov
sarb
dec
aad
fcmovne
cwtl
fistl
les
aad
popa
mov
jge
mov
mov
or
mov
pusha
push
push
mov
stc
push
ja
xor
mov
add
cmp
lock
cmpsb
or
jbe
das
add
jae,pt
in
call
addr16
nopl
clc
movsl
lret
dec
movsl
sti
in
xchg
xor
push
lock
or
arpl
mov
les
push
push
pop
pop
out
int3
lds
es
test
mov
sub
mov
and
sbb
rorl
mov
push
xchg
adc
aam
cmpsb
mov
mov
add
mov
stos
sarb
sahf
add
lahf
mov
in
mov
mov
lret
imul
mov
xor
cltd
lods
into
jne
int3
rcrl
xchg
push
mov
gs
jne
dec
xchg
pop
mov
mov
mov
and
mov
sarl
test
lock
ret
movsl
fadds
pop
or
add
inc
stc
scas
jecxz
rorl
imul
sarb
out
sbb
dec
popa
ficoms
mov
cs
push
pop
stos
pop
push
lahf
cmp
mov
test
ret
stc
bound
mov
mov
jne
addr16
jo
iret
push
shlb
push
and
stos
push
add
dec
xchg
loopne
lahf
fwait
xor
fidivrs
in
repnz
lret
sbb
lret
aaa
stc
jo
mov
imul
scas
loope
xchg
mov
adc
dec
hlt
or
aas
sbb
xor
lds
and
inc
sub
push
add
sbb
push
lcall
jnp
loopne
testl
inc
cs
jae
push
je,pt
movsb
lret
js
int
lcall
insl
sub
out
fists
in
mov
pushl
and
adc
in
aaa
lock
lods
lret
negl
sbb
cmc
xchg
xor
cmp
aad
fldt
push
mov
pop
ljmp
mov
dec
pop
call
xor
inc
add
outsl
sbb
sbb
pop
pushf
sub
jno
rclb
pop
hlt
and
push
jg
les
nop
jecxz
mov
jns
inc
jmp
rol
push
sub
jb
push
pusha
lcall
push
inc
cltd
addr16
int3
pop
int3
xchg
add
add
leave
dec
out
ret
stos
popf
xlat
stc
js
lret
hlt
das
inc
scas
mov
pop
movsl
nop
inc
mov
int
push
movsb
daa
mov
or
push
push
add
cld
or
dec
sub
mov
pushf
mov
adc
jmp
std
pop
lods
outsl
mov
fisttpl
cmpsl
scas
xchg
pop
sbb
pop
loopne
mov
ret
cmp
pop
out
out
pop
adc
stc
dec
adc
and
inc
sti
faddl
mov
xlat
ret
jmp
sti
inc
rolb
movsb
clc
cmp
call
push
jp
loopnew
jno
sbb
sub
or
and
call
outsb
pop
enter
xor
enter
sub
loopne
or
addr16
rorl
adc
test
call
mov
arpl
dec
int3
into
xor
ljmp
mov
loop
xor
int
loope
fwait
xchg
push
push
jbe
inc
pop
mov
ja
stos
ret
xor
adc
mov
sbb
decb
dec
mov
jns
nop
jnp
inc
adc
movsb
push
jp
imul
outsb
xor
fucomp
cwtl
loop
sahf
cli
mov
add
cmp
leave
adc
enter
push
clc
xor
jp
mov
test
xchg
push
filds
fs
scas
js
add
xorl
cli
roll
mov
imul
pop
cmp
lret
push
aam
fisttpll
push
jbe
test
pusha
xor
cmp
test
sti
das
sbb
adc
test
jnp
jns
int
jnp
mov
push
inc
push
lock
jge
xchg
dec
sbb
cmpsb
test
cmp
add
and
icebp
inc
jae
leave
lcall
imulb
mov
pop
int3
shl
sub
jae
mov
hlt
dec
jb
jmp
push
fsts
pusha
inc
mov
adc
xchg
aaa
jne
jmp
pop
call
sbb
pop
cwtl
roll
xchg
jl
in
dec
xor
mov
mov
testl
std
jg
dec
push
in
push
loopne
push
popa
cmpsb
push
int3
leave
outsl
or
ret
add
ljmp
sarl
fistps
fstp
push
jecxz
js
xor
ds
in
xor
xchg
repnz
or
lahf
jle
cwtl
cmc
and
scas
and
lods
aam
sub
sbb
mov
subl
add
je
shlb
dec
ret
call
jno
inc
and
popa
add
lods
in
jo
repnz
cmp
ret
mov
sarb
into
in
clc
leave
mov
mov
int
lret
outsl
nop
mov
jbe
icebp
inc
mov
lret
int3
cmp
xchg
movsl
xchg
je
or
jo
movb
xor
xor
cld
scas
in
or
xchg
xor
jns
xchg
and
cmp
and
dec
paddsw
xchg
movsb
push
aad
dec
and
int
or
jnp
notb
shll
mov
push
int3
fs
test
dec
and
fiaddl
fildll
scas
call
push
push
dec
sbb
inc
jae
fldenv
xchg
dec
adc
hlt
xor
sub
sbb
loop
jmp
mov
xchg
clc
mov
ss
pop
mov
ja
pop
in
push
enter
shl
loope
pop
ret
mov
in
pop
xor
loopne
push
andb
pop
popf
add
add
jge
inc
dec
icebp
sbb
lods
push
dec
jne
pusha
call
pop
cmc
lret
lcall
pop
lods
out
out
pusha
and
test
sbb
jmp
cs
sub
out
cltd
pop
pop
cli
xor
xor
mov
mov
ret
jl
cmc
mov
out
jp
ljmp
xchg
cli
sahf
jmp
aas
mov
in
add
jb
or
jp
lahf
lret
aas
xchg
pusha
mov
inc
in
ds
dec
inc
and
mov
fsub
std
outsb
push
outsl
sub
ja
add
xchg
fildll
pop
inc
nop
jecxz
outsl
jecxz
enter
mov
lret
cmp
inc
std
loopne
pop
adc
andl
inc
mov
std
and
lds
ja
sbb
inc
adc
and
in
cltd
and
rorb
add
and
xchg
js
data16
mov
sarl
rorb
dec
faddl
cld
adc
sahf
inc
test
pop
gs
pop
loope
jg
or
add
out
imul
sbb
ret
pop
pop
test
mov
int3
jecxz
das
inc
inc
fldl
dec
testl
push
lods
into
xchg
fucomip
and
xchg
mov
jne
mov
sbb
mov
pop
xchg
xchg
xchg
and
rcrl
dec
fisubs
push
and
sub
mov
out
std
pop
popw
xchg
stos
mov
lret
mov
arpl
mov
fadds
jnp
call
fcomps
jle
jae
push
std
js
rclb
sbb
add
mov
adc
movsb
cs
stos
add
mov
loopne
jae
push
dec
cld
add
adc
cmp
xchg
stos
sahf
and
add
inc
sbb
aad
mov
mov
jbe
or
pusha
pop
add
repz
fldcw
arpl
enter
lret
js
fists
adc
les
mov
pop
jnp
cmp
mov
and
jae
jge
pop
ljmp
mov
gs
inc
int3
or
std
mov
rolb
call
aas
mov
outsl
sbbb
repz
jno
jb
pop
popf
pop
mov
push
pop
movsl
mov
or
ss
nop
xor
nop
push
add
insb
jp
ljmp
sahf
sub
nop
dec
shlb
xchg
jmp
mov
aam
and
mov
enter
rcrl
or
push
add
int3
insb
pop
mov
or
mov
mov
test
mov
xchg
dec
mov
mov
aas
cli
mov
mov
cmp
pop
lods
mov
outsb
push
push
enter
jl
inc
sub
cmp
cs
loope
out
lds
addb
sarl
dec
pop
cmpsl
inc
sub
adc
rcrl
in
jnp
pop
jno
jns
fdivrl
std
je
ljmp
out
fwait
sub
add
call
and
jb
xchg
pop
xorb
ret
dec
jecxz
and
jno
pop
mov
cmpl
test
dec
dec
cmpsb
aas
sub
inc
jge
cmp
xchg
adc
movsb
shlb
mov
dec
cmp
xchg
lret
dec
outsb
int
iret
fs
push
mov
cmpsl
xor
dec
fcomi
dec
decb
cmp
jmp
add
adc
adc
mov
test
cli
mov
aad
pop
in
subl
test
mov
jnp
repnz
and
lds
call
pusha
es
rorl
push
pusha
lret
mulb
lret
mov
or
stos
fcmovnbe
notb
push
jle
iret
iret
mov
pop
leave
mov
aam
fucom
mov
ds
push
and
std
pop
mov
subb
mov
add
ror
in
xchg
or
testb
sti
push
push
cwtl
aam
or
cmp
xchg
mov
decb
mov
dec
jne
sbb
mov
cmp
add
movsb
inc
inc
mov
dec
or
sbb
movl
add
push
xor
test
out
xchg
cltd
js
pop
jle
fmul
rorb
pusha
aam
mov
cmp
and
jns
ja
and
jecxz
add
fmulp
mov
cmp
xor
mov
aad
insl
dec
push
subl
pop
push
ja
aad
data16
mov
mov
push
in
ror
sub
cmp
popl
shl
jbe
push
fnstcw
cld
cltd
ss
push
int
mov
fsubl
sub
call
inc
fiaddl
mov
push
or
dec
pop
adc
stos
mov
xchg
rol
enter
pop
movsl
cmpsb
push
fldenv
mov
cltd
xchg
cmpsb
iret
icebp
mov
popl
cld
andl
daa
notb
xchg
pop
icebp
imul
cmp
and
pushf
es
xor
fldt
clc
and
movsl
mov
mov
fcmovnb
inc
xchg
movsb
stos
sbb
adc
fstl
jne
cld
adc
outsl
xorb
lret
sbb
sbb
pop
lcall
sub
inc
mov
js
daa
pop
aam
add
repnz
std
mov
mov
mov
rcrl
out
push
jnp
mov
xchg
outsb
xor
les
icebp
sub
cmp
mov
mov
out
repnz
cld
scas
lahf
add
mov
and
add
or
pop
test
sbb
dec
test
fisttps
movsl
jge
adc
add
cmc
pop
mov
fsubp
sbb
cwtl
das
mov
jl
fimull
jns
fistpll
mov
push
jb
ja
and
inc
test
repnz
xor
ss
lods
cld
inc
push
shlb
push
fstpt
pop
roll
dec
lea
lahf
pop
push
xchg
testb
mov
arpl
repnz
subb
mov
xsaves
inc
adcl
cmc
int
movsl
adc
frstor
in
lea
or
jge
add
sub
mov
nop
in
loop
ficoml
add
or
repz
adcl
and
xor
ret
packuswb
shrl
lcall
clc
jge
imul
subb
cmp
fsts
mov
daa
xor
fisttpll
jmp
cmc
aad
insb
ja
xor
push
xchg
test
push
gs
fbstp
pop
pop
cmpsb
arpl
shrl
cmpsl
test
pop
sub
lods
lret
adc
icebp
aas
sbb
jne
insb
and
hlt
aaa
xchg
mov
out
out
div
xor
cld
loope
gs
mov
and
in
sbb
mov
inc
mov
pop
dec
mov
mov
mov
sbb
push
or
cmpsb
lret
stc
out
jbe
sbb
fistpll
dec
add
inc
xchg
dec
sbb
inc
sbb
sarl
mov
push
or
je
lret
mov
aam
lock
movsb
fcmovnb
add
xor
xchg
jl
jo
cmc
push
into
call
adc
jge
jmp
and
outsb
xchg
cmp
pop
or
jp
scas
sahf
clc
pop
pop
cmpsl
inc
dec
xchg
cmp
push
movsb
mov
xchg
rorb
pop
cmpsb
xor
mov
lods
dec
mov
aas
cld
mov
jb
xlat
pop
dec
loope
pop
nop
addb
pop
xlat
jns
and
nop
or
stos
dec
sub
out
xchg
xchg
idivl
lock
pop
cmpsl
mov
cmp
test
and
ss
cltd
xchg
adc
push
xor
adc
cwtl
outsl
shlb
mov
sbb
adc
je
fstpl
loope
cmc
inc
fcom
push
fcom
dec
jmp
push
mov
xorl
xchg
inc
ja
sub
stos
add
jno
or
sub
add
inc
mov
gs
pop
stos
jno
idivl
sbb
pop
iret
das
test
jns
pop
mov
test
adc
aam
push
ds
or
dec
pop
int
test
fsubrl
push
or
shl
icebp
subl
or
ja
add
cmpsb
bound
cmp
fdivrl
fistps
mov
inc
test
jmp
repz
mov
hlt
lds
outsb
aaa
mov
movsb
push
push
pop
sbb
call
loope
xchg
popa
movsl
jmp
adc
mov
and
rolb
mov
inc
scas
jns
leave
das
inc
shrl
int3
mov
iret
jp
mov
mov
and
into
mov
jno
int
loope
inc
push
lcall
jp
lahf
mov
mov
and
addl
loope
ljmp
push
call
lea
ret
fldcw
pop
outsb
fsubrl
cltd
stos
cmc
pop
xchg
imul
not
push
ret
ds
dec
std
pop
enter
movsl
int
mov
add
int
xlat
pop
or
repz
xor
xchg
movsb
int
mov
dec
sbb
adc
icebp
rolb
push
and
xor
test
addb
subb
popf
fstps
and
or
xor
fcoml
cli
push
sbb
in
inc
and
and
and
in
lahf
lahf
xchg
cmp
stos
jne
imul
ficomps
jb
push
pop
push
pop
push
test
inc
fcompl
mov
mov
fdivrl
mov
and
inc
call
jo
push
push
fst
xchg
or
push
shrl
pop
sti
daa
mov
jle
adc
adc
cmp
les
push
cld
adc
jl
jmp
mov
or
and
dec
cmp
sub
inc
cmc
rol
lock
jecxz
mov
adc
out
xchg
in
sti
imul
lret
call
lock
sub
cmp
sarl
aas
enter
pop
pop
out
and
repnz
inc
mov
scas
pop
aad
stos
arpl
sbb
shlb
jno
push
jne
fwait
xchg
stc
cmp
out
sub
int3
cltd
sahf
jo
push
sub
inc
add
adc
fwait
push
mov
stc
dec
mov
shll
sbb
fisttps
jp
pop
pushf
add
or
mov
aaa
sub
lds
jno
push
sbb
cli
add
mov
mov
pop
lods
mov
mov
dec
jge
insl
lock
in
stos
mov
and
movsl
test
lret
gs
int
mov
push
daa
and
stc
xor
cmp
xchg
and
cmp
jnp
mov
or
or
jle
inc
fimull
pop
pusha
pop
loope
aad
push
hlt
mov
mov
push
sbb
sbbb
fistl
cltd
jmp
nop
adc
mov
mov
pushf
mov
lock
mov
push
insl
in
mov
loopne
jle
jg
pop
stos
es
push
mov
xchg
adc
das
ret
lret
and
pop
cmpsl
fisubrs
data16
std
das
xchg
or
push
adc
jae
std
mov
rorb
xchg
pop
jns
loope
popa
sbb
adc
lret
adc
outsb
xchg
test
push
jbe
sbb
dec
push
frstor
sub
pushf
push
push
pushf
ljmp
mov
orl
mov
call
push
jle
int3
in
js
std
sub
bound
inc
insb
xor
sub
repz
lahf
mov
faddl
inc
aam
fcompl
mov
shl
cmp
push
push
iret
popf
inc
jno
mov
gs
mov
push
mov
jmp
aas
sbb
mov
movsl
fmuls
add
into
xchg
cmp
out
pop
sub
dec
rcrb
mov
jge
lcall
daa
aad
mov
mov
pop
xor
bound
mov
xchg
jbe
fsubl
cmp
push
insb
clc
out
or
je
dec
cld
jnp
pop
ja
decb
fidivrl
dec
or
movsb
push
push
std
test
dec
cmpsb
pop
rcll
sarb
push
ja
test
jecxz
mov
or
test
push
adc
sub
inc
pop
dec
lods
inc
rcrl
xor
sub
aas
jle
mov
popa
lahf
addl
adc
movsb
jns
mov
enter
xchg
lret
push
cli
negl
mov
ds
popa
xor
mov
jns
jno
movsb
sbb
push
imul
or
push
sahf
fstpl
dec
out
iret
and
lahf
dec
xchg
or
sbb
out
cmp
xor
stos
cmp
inc
call
mov
lea
insl
out
xchg
stc
and
outsl
iret
jg
or
out
pop
aad
jbe
mov
ja
adcb
or
cmp
and
mov
stos
lret
push
sub
ljmp
push
dec
in
cmp
lcall
pop
out
fstl
inc
addl
lcall
xchg
int3
lea
mov
sub
rcrl
sbb
jmp
stos
sbb
jmp
dec
mov
xchg
xor
ljmp
std
add
imul
and
xchg
sahf
fsubrl
xchg
fdivs
or
in
andl
bound
cmpl
cmp
ficomps
cmp
movsl
imul
xchg
inc
inc
jle
outsb
dec
test
sub
pop
test
xchg
xchg
mov
loope
pop
push
int
and
stos
sub
outsb
int3
ja
jp
testl
fldl
sbb
jle
mov
sti
fldenv
mov
push
xchg
out
mov
icebp
cs
xor
clc
stos
or
push
sbb
cld
push
dec
lods
mov
push
mov
push
sub
fsubrs
outsb
into
pop
mov
lock
nop
repnz
and
sbb
jmp
mov
sbb
out
mov
cmpsb
xchg
divb
mov
lcall
clc
fdivrl
sub
inc
add
sbb
loopne
cltd
xorb
cld
pusha
lea
jg
jo
test
jecxz
and
sbb
pop
ss
test
cmp
xchg
repz
xor
dec
push
bound
cmp
aaa
subl
lea
fisttpl
pushf
int
mov
dec
dec
pop
icebp
ret
pusha
xor
sahf
fucomi
mov
sub
stc
cwtl
fisttpll
dec
jb
mov
fcomip
cmp
shll
test
xchg
outsl
lods
daa
int3
loope
push
ret
aad
lock
and
sti
xor
sbb
jl
jmp
push
enter
filds
mov
fldt
push
mov
and
shll
lret
push
scas
push
hlt
mov
leave
ljmp
pop
shll
jno
fcmovnbe
mov
test
mov
inc
xchg
frstor
and
mov
add
pop
repz
push
adc
push
xchg
mov
inc
jmp
outsl
outsl
xchg
sub
enter
inc
mov
xchg
adc
push
dec
sub
mov
imul
jge
mov
cmp
jbe
xor
std
hlt
mov
outsb
imul
cld
test
loop
dec
mov
mov
inc
ret
ss
dec
inc
pushf
fcomip
sub
es
xor
mov
inc
pop
pop
mov
repz
push
mov
jb
int
xchg
jle
xchg
push
pop
mov
insb
pushf
call
fucomp
sti
pop
inc
jne
and
mov
mov
inc
cmp
daa
dec
fldenv
push
addr16
adc
lods
mov
and
movsb
test
dec
popf
or
lea
mov
xor
sub
push
and
andb
rcll
xor
xor
inc
mov
out
dec
sbb
pushw
pop
dec
das
mov
pop
out
test
in
inc
notl
cmpsb
bound
sub
loope
xor
int3
pop
adc
test
fst
test
and
add
ja
xor
adc
mov
sbb
ret
inc
pop
divl
pop
mov
movsl
movsb
cmp
adc
cmpsb
rcrb
cmp
sub
sub
xchg
cltd
mov
adc
and
loope
cwtl
jle
jmp
inc
stos
aad
pusha
pop
xchg
mov
fcompl
shl
test
cmp
and
jmp
dec
and
and
jecxz
scas
jle
pop
lods
cmp
jne
mov
dec
in
and
out
popa
push
les
jnp
pop
loopne
repz
popf
xchg
mov
sbb
cmp
fdivrs
daa
sbb
xchg
lret
xor
push
shrb
mov
outsb
addr16
popa
add
sbb
popf
xor
shlb
push
push
mov
sbb
mov
cmpsb
or
jns
insb
pusha
inc
aam
test
inc
fildl
adc
or
les
mov
mov
mov
fstp
mov
mov
popf
jl
dec
js
sbb
dec
fidivl
loop
xchg
lds
cmp
ret
addr16
addr16
adcb
adc
loopne
dec
mov
push
decb
scas
dec
ds
mov
adc
jo
daa
xorl
and
xchg
and
push
cld
jle
mov
xchg
or
cmpsb
dec
mov
jl
insb
cmp
mov
sub
jge
adc
push
xchg
lret
test
pop
inc
mov
adc
sbbb
mov
adc
add
ret
dec
jns
ret
sub
mov
and
add
add
add
cmc
cmpsl
out
xor
xchg
jns
js
or
dec
mov
sub
es
sahf
push
inc
dec
push
fimuls
loope
inc
vmwrite
shll
cmp
dec
in
insb
push
es
sbb
dec
test
mov
lret
add
lods
jg
fwait
rorb
ret
das
mov
add
data16
repnz
arpl
xor
or
aam
jno
frstor
in
push
add
popf
cld
push
jae
icebp
xor
push
pop
and
adc
testl
ds
xchg
repz
lret
mov
mov
sbb
mov
in
pop
pop
or
and
shrl
push
adc
jno
add
jne
lods
xor
pop
std
mov
gs
lahf
insl
sub
jle
and
mov
pop
fisttpl
insb
dec
cmp
mov
jmp
ficompl
call
sub
and
jg
jmp
loop
jb
into
test
mov
inc
inc
xor
push
inc
sbb
aam
int
or
mov
adc
xor
xchg
add
andl
ret
xchg
in
jge
and
jmp
out
adc
cltd
jb
lea
out
xchg
push
jbe
push
mov
int3
add
pop
addb
leave
add
aam
xchg
or
sbb
jp
cmp
popf
inc
xor
pop
jmp
mov
mov
loope
lods
js
imul
sar
outsl
or
cwtl
jg
fisttps
push
add
cs
fisubl
in
ljmp
and
rcrl
lods
xor
mov
xor
pop
subb
fisttpl
dec
mov
sub
cwtl
xchg
mov
int3
or
fdivrl
sub
rclb
notl
inc
dec
mov
aam
movsl
xchg
fwait
daa
adc
outsl
ljmp
data16
xor
xchg
cmpsb
inc
inc
cmp
sub
mov
pop
cmp
bound
cli
cmc
push
fcomps
stc
icebp
loop
sub
repnz
imul
inc
lock
mov
fs
dec
daa
mov
sbb
inc
out
mov
testb
mov
pusha
in
mov
sbb
pop
sbbb
push
mov
cli
lods
int3
adc
or
xor
mov
scas
movsb
sub
jo
mov
mov
jle
clc
rorb
repz
push
dec
mov
and
jb
cmc
imul
arpl
es
daa
in
dec
shrl
ret
lcall
xchg
gs
push
dec
sbb
add
jg
sti
push
mov
idivb
sti
cmpsb
jnp
aad
mov
xorb
in
test
stc
cmp
mov
mov
mov
idivb
jp
cld
in
pop
cmp
ja
adc
xor
pop
mov
mov
hlt
ret
in
dec
dec
jno
cs
sti
subb
sub
fsubl
xor
push
xchg
inc
mov
enter
mov
sub
mov
cmpsb
aam
fdivrs
xchg
fimuls
mov
xchg
inc
loopne
mov
repnz
scas
add
jo
sar
jb
jl
adc
jbe
cmp
pop
movsb
sbb
xchg
fidivrs
dec
movsb
or
jmp
std
mov
mov
push
push
scas
mov
add
int
data16
mov
sub
inc
pop
sbb
aaa
mov
jmp
xchg
les
inc
push
cmp
std
out
aas
lods
dec
cld
add
daa
or
int
mov
mov
addr16
inc
loopne
test
push
les
aas
sub
fiaddl
sub
dec
arpl
call
sbb
in
loope
mov
popa
xorl
shll
and
mov
jns
outsb
sub
mov
xor
xchg
pop
cmp
push
das
adc
jle
ret
mov
cmc
pop
out
push
aaa
scas
pop
inc
push
dec
adc
sub
mov
sbb
ds
inc
xchg
out
push
xchg
ljmp
jnp
es
mov
push
outsb
aas
push
popa
sahf
mov
fadd
jns
loopne
shll
xchg
jb
aaa
lret
sub
lcall
jmp
inc
pop
mov
dec
repz
push
or
icebp
cmp
sbb
sub
lret
call
mov
xchg
or
mov
fidivs
mov
add
xchg
js
jmp
mov
jbe
sub
nop
ss
divps
adc
add
ficomps
and
mov
and
fucomp
fsubr
test
adc
loop
push
sbb
movsl
and
leave
dec
mov
scas
decb
mov
ljmp
movsl
fidivrl
xorb
aaa
xchg
dec
mov
les
dec
enter
mov
stc
cmp
add
mov
sbb
pop
mov
push
lods
push
sarl
lock
sub
or
in
leave
push
jns
rcll
xor
jp
mov
jmp
sbb
pushf
jnp
cmp
pushf
mov
sbb
sbb
pop
fsubs
sbb
xlat
icebp
mov
sub
test
in
xchg
outsb
push
or
xchg
mov
flds
imul
jns
push
and
mov
jae
mov
and
sbb
gs
mov
mov
in
cmp
pop
xor
pop
jb
aas
fwait
in
popf
lds
mov
aas
mov
sbb
mov
andb
out
int3
sub
adc
mov
push
cmp
dec
lahf
mov
or
mov
pop
fdivl
cld
testl
xchg
pop
cmovnp
mov
sbb
cmp
mov
test
dec
insb
adc
fdivrs
ss
adc
les
sbb
insl
call
loope
sbb
jg
mov
loop
cs
test
mov
pop
add
dec
out
aam
xlat
dec
pop
xchg
adc
aad
aas
mov
dec
mov
enter
or
dec
shrb
pop
shl
sbb
push
mov
mov
shrl
outsb
sub
jb
xchg
rcrl
add
pop
dec
in
adc
xor
xchg
aam
test
and
aam
mov
fbld
and
pop
sti
jbe
fcmovnb
insl
cwtl
rcrl
faddl
mov
ret
iret
gs
scas
cwtl
mov
xchg
pop
cmp
in
mov
lretw
cli
inc
movsb
mov
xor
int3
mov
inc
stos
sbbl
or
xor
dec
cli
or
xlat
repnz
pop
sub
xchg
dec
nop
and
cli
sbb
fcompl
jbe
push
in
mov
sahf
rcll
or
and
jecxz
mov
fldt
mov
push
mov
or
cltd
inc
xor
xchg
and
fnsave
std
call
jp
hlt
jns
jl
adc
dec
mov
inc
repz
fs
and
loope
or
cmpsb
mov
mov
je
inc
cmpsb
ret
lahf
arpl
inc
pop
jecxz
add
sbb
mov
push
push
mov
fimull
jno
shrd
dec
out
mov
ds
mov
les
cmp
nop
xor
xor
lret
es
fwait
pop
stos
pop
adc
punpckhdq
inc
in
lock
mov
cmp
popf
lock
add
out
sub
mov
mov
jno
mov
push
aam
mov
aaa
stc
loopne
call
xchg
jne
pop
aam
cmpl
mov
and
jo
jecxz
or
or
je
dec
int3
sbb
jbe
inc
xchg
dec
push
mov
xchg
jne
repz
pop
gs
imul
add
push
mov
and
cmp
cmc
mov
call
jnp
je
daa
mov
aam
dec
loopne
in
clc
mov
clc
add
popa
push
lods
sbb
mov
jp
sub
repnz
mov
cs
jns
dec
sub
mov
mov
cwtl
push
cltd
jmp
pop
fwait
or
push
pop
insb
cmp
pop
pushf
rcrl
in
push
xchg
pushf
xchg
popa
add
dec
sbb
mov
aam
jecxz
cmp
loopne
cmp
loope
iret
std
divps
into
jns
jl
jno
subb
sub
pop
sbb
out
inc
dec
or
mov
mov
pushf
in
sahf
in
jne
stos
jbe
adc
das
std
inc
sbb
scas
mov
adcb
cltd
dec
xchg
xchg
icebp
mov
int
jle
sbbb
mov
dec
cmp
cmp
mov
repnz
mov
loop
shl
mov
xchg
cmc
fisttps
mov
cld
mov
cmp
cmp
adc
mov
mov
shll
popa
into
jne
mov
push
out
mov
data16
xor
iret
xor
pop
cmp
push
xchg
xor
and
roll
xor
rolb
int3
adc
inc
dec
pusha
in
and
xchg
loope
cmp
dec
xor
cmp
push
sub
cmp
insb
mov
jno
rolb
mov
popa
add
sbb
jb
les
push
test
xchg
xchg
dec
and
or
decb
pop
push
push
sbb
ret
dec
lcall
je
lds
jb
inc
jge
mov
sub
mov
mov
sbb
mov
push
das
stc
xchg
cmpl
jp
ja
mov
mov
dec
mov
repnz
scas
into
jecxz
daa
shlb
pop
mov
push
sbb
jno
sahf
xchg
aas
shrl
lret
test
cmp
leave
lret
xor
imul
loope
dec
addb
and
mov
call
push
dec
int3
stos
or
adc
xlat
ret
invd
aaa
orb
xor
scas
mov
test
repnz
movsl
jp
xchg
push
sub
lods
sbb
popa
and
imul
dec
or
lahf
push
leave
es
insl
ret
xchg
fimull
pop
daa
adc
adcl
bswap
in
pop
mov
ljmp
adc
inc
sub
xor
dec
pop
adc
lock
arpl
mov
inc
push
push
sarl
lods
pushf
jge
adc
ret
decb
pushf
xchg
idivb
mov
cmc
adc
adc
mov
inc
test
lcall
adc
mov
adc
sub
lret
jnp
lret
push
cltd
fisttpl
movb
mov
mov
jno
xor
jns
je
adc
bound
jnp
incb
es
xchg
stos
or
test
jae
imul
adc
dec
mov
ret
mov
das
mov
pop
mov
or
shl
mov
aam
lea
cltd
mov
es
and
mov
xor
ljmp
mov
imul
cmpsb
sbb
test
lret
mov
mov
push
repnz
push
jne
cs
cmp
cmp
ja
pop
out
add
xor
cmp
sahf
outsb
out
sahf
mov
mov
push
xor
hlt
pushf
imul
aad
mov
ljmp
jb
aad
inc
lea
out
mov
outsb
dec
idivl
jg
jnp
push
xchg
outsl
ss
hlt
and
jno
lret
pop
sahf
pop
jle
shll
clc
nop
add
pop
int
int
xchg
add
sub
notb
pop
sub
enter
add
cmp
pop
or
scas
pop
stc
mov
push
fcoml
push
lcall
jg
lea
pop
shrl
xchg
test
cwtl
cmp
ficoms
sub
push
and
and
and
jecxz
shlb
mov
mov
sbb
fistps
push
movsl
xchg
movsb
sbb
ret
inc
fisttpll
cmp
ret
jae
sbb
jge
mov
push
ss
stc
jp
and
pop
lret
in
mov
xor
cmp
push
mov
lret
aas
dec
jmp
mov
dec
iret
xchg
dec
cwtl
cld
mov
xlat
fnstsw
movsb
mov
dec
test
lods
mov
pop
xor
movsl
jns
std
aas
popf
popf
mov
scas
ret
imul
pop
pop
inc
cmp
mov
bound
popa
lcall
xchg
popa
hlt
mov
mov
xchg
fisttps
and
mov
test
aad
push
push
roll
mov
cmpsb
call
adc
js
mov
xor
jl
cmpb
pop
loopne
jl
cltd
jg
mull
mov
lock
ror
es
aaa
xchg
les
push
rcrl
and
and
pop
xchg
push
push
jne
test
push
xor
jbe
sti
ret
sahf
xchg
add
sarl
stos
dec
icebp
ljmp
lock
subl
cmpsl
rorl
pop
push
cmp
inc
sbb
les
jb
shl
dec
rolb
cmp
andb
pushf
into
loope
lret
cmp
imul
in
loop
jl
jns
mov
cmp
push
out
ret
movsb
lret
jbe
pop
pop
jae
jp
cmp
add
jl
jae
loop
mov
shld
dec
pop
sub
bts
push
dec
mov
mov
jmp
idivb
stos
inc
xchg
leave
add
adc
repnz
mov
cmovno
push
out
adc
lock
or
mov
pop
adc
call
mov
inc
lock
mov
clc
xor
pop
insb
sbb
test
outsl
test
jo
add
int
push
ss
mov
and
push
lret
add
sub
push
rorl
cmpb
imul
jo
fstpt
jno
loop
sbb
cltd
mov
pop
cmp
out
addr16
or
imul
push
add
cmpsl
adc
mov
pop
mov
sahf
daa
jnp
xchg
sub
icebp
loop
push
jb
cmp
lahf
addl
and
gs
inc
jmp
inc
jge
or
das
fsts
lds
popa
adc
dec
insb
nop
imul
shl
stos
cmpl
ljmp
and
mov
cmc
pop
hlt
and
dec
push
push
lods
imul
lret
pop
ja
lock
pop
xchg
jecxz
pop
rolb
push
lea
jecxz
das
mov
add
cmp
movsb
xor
dec
jno
cmp
addr16
add
bound
cmp
xor
xchg
dec
icebp
dec
xchg
out
mov
notl
sbb
scas
xor
popa
mov
inc
jmp
push
je
and
ss
out
mov
and
dec
xchg
and
xchg
sub
or
inc
leave
xor
cld
mov
ret
xchg
imul
into
dec
sub
hlt
push
sbb
push
sub
in
xor
push
pop
jg
movb
in
dec
rcrl
adc
imul
mov
jl
mov
adc
sarl
dec
xchg
adc
fcomp
and
fidivrl
rclb
loop
fdiv
xchg
add
add
dec
ficompl
mov
imul
sub
jle
lcall
add
mov
xlat
cwtl
xor
pop
cs
mov
jge
push
mov
xchg
jp
xor
jno
enter
scas
jp
jmp
lcall
push
add
xor
push
nop
nop
in
bound
sarl
push
lea
pop
insl
mov
or
cwtl
cmc
std
testl
sbb
cmp
lahf
mov
cmc
outsl
movsl
push
fsts
mov
sbb
nop
ret
sbb
in
nop
xchg
mov
sti
lock
out
add
pop
ja
cmpsl
arpl
int
stc
test
mov
mov
int
lret
adc
jno
scas
sarb
in
out
dec
cmp
xor
pop
xchg
or
sar
stos
testl
or
or
inc
lods
mov
cmpsl
shll
loope
mov
mov
popa
push
ss
sbb
iret
out
jge
jo
movsl
push
rorl
lock
adc
xchg
mov
mov
or
mov
ss
imul
loope
sub
cltd
in
stos
js
mov
inc
lahf
iret
inc
call
std
and
mov
hlt
and
sub
negl
arpl
push
mov
fldl
loop
adc
stc
pop
cs
mov
mov
sahf
stos
incl
fadd
xchg
jb
repz
lcall
inc
jno
mulb
xchg
jae
popa
dec
xchg
sbb
scas
or
inc
daa
icebp
fsubrl
cmc
lods
clc
pop
es
or
xchg
push
xor
mov
addr16
lret
xor
loopne
push
adc
mov
add
jns
js
mov
insl
mov
subl
and
or
xchg
inc
adc
xor
add
jnp
lret
pop
pop
sub
and
sub
pusha
out
mov
div
inc
fwait
mov
iret
mov
dec
icebp
mov
and
sar
or
jge,pt
lret
push
mov
adc
insl
insb
xor
fadds
mov
or
into
mov
ss
cmp
je
popa
and
inc
adc
xor
shr
ljmp
cmp
push
lds
mov
data16
add
andb
dec
add
dec
xor
dec
pusha
dec
sbb
dec
out
or
mov
xchg
mov
lock
pop
and
sbb
and
adc
loop
jo,pt
mov
enter
and
push
dec
or
pop
mov
clc
stos
outsl
jle
popa
mov
into
in
js
cmp
sub
mov
jmp
mov
inc
out
ljmp
loope
mov
in
movsl
sub
or
sub
add
adc
ljmp
pop
mov
pop
add
inc
je
lds
pop
insl
ljmp
test
push
mov
andb
in
imul
movsb
mov
cmpsb
mov
xchg
cmpl
or
sub
inc
aaa
xchg
icebp
ret
adc
jbe
popa
cld
and
sub
clc
fsubp
movsl
pop
js
xchg
sahf
add
lret
xor
push
mov
xchg
adc
pop
adc
push
push
mov
daa
and
insl
xor
mov
andb
cpuid
add
call
dec
and
cwtl
fdivrs
popf
jb
push
dec
repnz
daa
leave
push
mov
pushl
adc
or
xchg
xor
adc
jns
mov
jg
mov
push
dec
in
je
clc
jl
sbb
push
data16
mul
dec
pop
pop
add
and
int3
shll
repz
sbbb
xor
or
nop
jne
xor
push
in
inc
pop
movsl
jg
sbb
cmc
lret
lock
rcrl
pushf
cmpsl
mov
pusha
fcoml
shrl
xchg
rorb
sub
cld
jnp
fisubrs
inc
pop
and
es
sbb
adc
adc
xchg
adc
loopne
jle
sti
fsub
test
mov
sub
leave
in
loope
clc
pop
out
mov
imul
pop
pop
inc
bound
in
xor
mov
mov
jl
loopne
mov
or
mov
push
jb
lret
fstpl
addr16
sub
outsb
xchg
leave
dec
stos
int3
lods
mov
cs
repnz
aaa
jg
xchg
test
mov
lds
inc
xor
insl
or
or
push
test
stos
push
mov
pop
mov
mov
dec
inc
imul
scas
dec
or
fcoml
push
dec
push
and
xor
negl
in
jg
iret
stos
in
push
imul
mov
xor
cmpsb
iretw
push
ljmp
jbe
cmp
lret
push
mov
adc
outsl
cmpsb
xchg
inc
dec
mov
pop
sarw
ficompl
push
cld
inc
rcl
notl
sbb
mov
cmp
sbb
and
fistpl
andl
inc
test
test
dec
jle
std
fisttpl
jg
nop
push
mov
mov
imul
aaa
mov
aaa
cli
push
jns
inc
es
cmp
test
in
cmp
xor
sbb
cltd
in
ja
pop
fmuls
fs
inc
std
push
mov
inc
shlb
push
adc
dec
in
mov
imul
cmp
lret
vpmacsdqh
adc
dec
dec
movl
jno
lds
adc
xor
or
inc
cmc
ds
push
push
insb
imul
movsb
insb
mov
and
and
sbb
push
mov
int3
imul
stos
add
outsl
or
inc
rorb
xchg
mov
pusha
out
push
xchg
loopne
add
adcb
fsubl
stos
mov
sub
lods
hlt
dec
rol
xor
icebp
dec
pushf
inc
je
shrl
shll
repz
push
add
ret
adc
push
jo
std
inc
inc
popa
adc
fistpl
mov
divl
jno
fmulp
scas
repnz
rcll
jecxz
js
test
and
sahf
test
jle
xchg
mov
cmp
jge
jne
out
sub
add
and
inc
fdivrs
push
and
cltd
sbb
and
push
xchg
aas
cmp
or
repz
sti
sbb
movsl
cmpsl
xchg
testb
ljmp
imull
sti
inc
enter
sbb
popa
push
mov
push
jecxz
mov
clc
scas
or
pushf
dec
jae
cmp
sar
inc
in
mov
or
leave
adc
add
inc
mov
cmp
and
push
add
call
decb
clc
incb
mov
jne
push
sbb
add
loope
sub
shll
mov
and
sub
jns
ds
lea
or
daa
cmp
cld
dec
xchg
shl
insb
js
mov
sub
lret
ja
xlat
fsts
movsb
cmpsl
lock
pop
jmp
and
jnp
div
mov
imul
mov
in
mov
lea
imul
add
pop
pop
pop
fcomps
push
add
popl
sub
scas
jle
push
pop
int
or
mov
rcrb
push
loop
jo
cmp
sbb
mov
mov
outsl
jns
test
mov
jecxz
aad
insl
mov
sub
pop
sarl
cmc
cmp
in
test
and
jae
cli
clc
mov
mov
aam
adcb
lock
jns
sbb
push
sbb
sub
pushf
std
stos
adc
insl
mov
push
mov
insl
jno
adc
cmpsl
aam
add
cmp
push
pop
jae
in
into
imul
ret
adc
dec
push
imull
nop
adc
sub
aam
shrb
rclb
push
mov
xor
mov
xlat
out
fwait
loope
jl
xor
ficoml
clc
hlt
jecxz
rclb
fisttps
outsl
les
pop
xor
inc
in
stc
adc
fadds
lret
gs
push
and
dec
loope
sbb
push
aam
ds
add
lahf
pop
rcrl
mov
inc
lds
add
mov
scas
hlt
adc
dec
jbe
jae
push
cmp
outsb
dec
mov
adc
sub
xor
data16
aad
mov
jne
jne
jno
jmp
push
pop
sarl
or
xchg
jns
pop
cmp
xor
scas
out
mov
loop
lahf
cmp
icebp
sub
movsl
bound
inc
xchg
jb
adc
scas
add
mov
push
jg
xchg
fwait
push
test
aaa
dec
aam
push
or
mov
sti
imul
fs
mov
lock
xchg
and
dec
sub
mov
fistpl
mov
test
cltd
lock
outsl
dec
pushf
mov
adc
ret
ljmp
aam
and
rcr
out
xor
jne
aas
sub
mov
out
pushf
cwtl
adc
jp
pextrw
cmp
fs
pop
add
outsb
cmp
mov
imul
mov
jo
jecxz
ljmp
stos
ss
lahf
jbe
or
mov
mov
cmpsb
ret
mov
push
cltd
and
xor
in
fnstcw
jmp
les
xchg
mov
rorl
leave
cmp
icebp
pop
or
push
mov
test
push
add
pop
mov
inc
rclb
xchg
adc
jns
lcall
xchg
adc
aam
jbe
das
pop
cmp
cmp
js
in
mov
cmp
push
add
and
mov
mov
stos
imul
add
jg
rclb
jmp
lock
mov
xchg
addr16
lahf
mov
jmp
push
mov
testb
inc
out
int
xchg
stos
ljmp
arpl
dec
inc
jbe
in
lcall
outsl
in
and
add
mov
test
push
repnz
mov
leave
mov
imul
fisubs
lret
cmp
sbb
cmp
sub
mov
and
popf
rcrl
fcomps
inc
xchg
sbb
inc
and
push
outsl
ja
mov
cwtl
xchg
pop
pop
mov
pop
adc
and
cmp
jb
cmc
or
pop
es
sub
leave
insb
mov
cmp
jnp
mov
jp
pop
or
pop
add
jbe,pt
mov
idivl
add
xchg
shll
inc
ljmp
add
scas
jbe
push
cmc
mov
adc
sbb
sahf
cmp
add
or
aam
push
inc
push
mov
push
mov
push
in
push
insb
test
dec
push
push
gs
xor
or
in
pop
sub
movb
pop
in
xor
jae
sub
dec
jns
push
js
dec
insl
loopne
mov
outsl
repnz
mov
dec
sub
daa
pop
add
inc
push
repnz
lcall
xchg
jmp
nop
inc
insb
subb
sub
or
movsl
or
push
sub
add
mov
mov
pop
or
cmp
lods
push
mov
addl
xchg
test
pop
or
ret
shrl
xlat
sarl
inc
orl
sbb
pop
repnz
add
xchg
pop
dec
sbb
adc
cli
push
pop
das
scas
repz
inc
push
loop
mov
xor
rcrb
pusha
pop
cmpsb
scas
shlb
mov
push
repnz
lahf
ja
mov
inc
sub
cmp
dec
and
xchg
mov
fcompl
or
push
aad
icebp
xor
lahf
repz
cmpsl
add
out
mov
cltd
jnp
inc
xchg
inc
fldt
fistpll
jne
pop
in
xchg
movsb
pop
fldt
clc
mov
lret
pop
pop
mov
xchg
xor
in
inc
mov
test
dec
pop
mov
shrl
mov
pusha
loop
lods
mov
repnz
push
outsb
mov
out
sbb
aam
iret
add
lods
mov
rol
mov
push
repnz
rclb
push
nop
xchg
popa
test
inc
imul
mov
push
aas
fbld
sbb
inc
dec
out
inc
sub
bound
imul
lahf
nop
ds
outsb
sti
push
stos
or
stc
enter
inc
xor
fcompl
sub
xchg
sub
out
mov
pop
ret
mov
mov
jne
fwait
jae
es
inc
push
mov
mov
outsl
push
cmpsl
push
xchg
sub
shr
xchg
test
cmpl
inc
pop
dec
mov
xchg
daa
inc
jg
fdivs
jb
scas
pop
xor
mov
movsb
sbb
aad
test
out
ret
ja
xor
shr
dec
sti
out
xchg
xlat
dec
sbbl
pop
push
repz
sbb
push
pop
cld
sbb
dec
and
es
nop
cmp
fbstp
mov
or
enter
icebp
test
aas
fidivrs
repz
jno
pop
adc
cmp
roll
pop
in
xadd
movsl
iret
push
js
lahf
pop
add
outsl
in
inc
and
imul
loop
shlb
and
add
loope
xor
outsl
pop
xor
mov
and
call
enter
mov
adc
xor
loopne
dec
lods
push
push
and
hlt
andl
negl
add
jo
or
test
dec
inc
sub
int3
or
je
cmp
sahf
int
push
jae
pop
out
fs
cmp
cmp
lret
lahf
push
cmp
and
in
les
cmp
lahf
sub
ficomps
into
jno
or
test
test
xchg
mov
clc
and
hlt
dec
enter
lds
frstor
enter
lods
xchg
pop
jp
sub
negb
pop
stos
scas
fdivrs
pop
mov
dec
pop
out
sbb
out
ret
lea
imul
or
sarb
cld
sbb
inc
js
sbb
aaa
push
fstps
jno
dec
faddp
ret
pushl
sub
outsb
dec
ss
dec
xor
adc
push
orb
lret
dec
mov
mov
sub
push
mov
js
stc
push
dec
sbb
xor
es
mov
fdivs
es
pop
std
add
lcall
and
leave
dec
mov
cwtl
xor
fs
mov
nop
stos
mov
push
shlb
push
test
adc
adc
sbb
dec
dec
sbb
hlt
push
jecxz
push
sub
push
je
clc
stos
mov
inc
shlb
and
rcrb
in
fadd
xchg
add
mov
pop
sub
xchg
ljmp
shlb
sbb
dec
or
inc
xacquire
adc
xchg
and
stc
sbb
lods
sarb
sahf
psrlw
sbb
pop
sub
and
inc
dec
inc
push
xchg
add
jnp
add
shl
ljmp
jo
mov
and
fsubl
int3
icebp
or
push
push
add
orb
test
or
subb
pushf
rcrb
imul
ds
insb
cmpsl
lret
push
pop
push
jo
lea
pop
push
aam
push
cmp
or
jne
aam
sbbb
ja
sub
fistl
inc
bound
sub
test
or
fstp
push
sbb
cmovge
adc
mov
push
mov
bnd
push
mov
or
sahf
sbb
or
or
stos
jns
enter
ja
jo
jno
pushf
push
jg
int3
inc
aas
daa
cmp
stos
mov
jge
movsb
out
cwtl
cwtl
cmp
lret
in
sub
in
xor
mov
cmp
jns
pop
stos
adc
pop
sbb
loopne
shrl
pop
pop
in
in
cmp
clc
inc
fimuls
dec
test
sub
push
mov
pusha
push
cmpsb
test
adc
out
in
sbb
adc
jecxz
push
sub
subb
test
je
jae
lds
sbb
inc
dec
popf
jle
dec
ret
setbe
mov
xchg
inc
outsb
dec
notl
out
push
dec
jmp
add
push
insb
outsb
pop
dec
add
mov
sbb
dec
rorb
jmp
cmc
jb
rolb
subl
in
lea
cmpsb
push
xor
or
and
pusha
and
mov
mov
mov
push
jbe
fsubrl
dec
lcall
sub
or
sar
daa
jmp
sub
fsubrl
or
adcb
and
ret
mov
cmpsl
pop
jecxz
popa
ds
test
cli
lret
dec
mov
jmp
push
lret
stos
mov
xchg
mov
add
shlb
stos
xchg
cld
dec
test
arpl
mov
imul
stos
lret
loopne
lahf
mov
dec
pusha
xchg
sub
or
loop
cmp
push
jp
sub
pop
jae
std
push
aad
jne
aas
shll
in
sbb
mov
xchg
mov
adc
repnz
xchg
shl
push
lret
dec
mov
es
jg
or
call
es
je
or
jbe
xchg
dec
ss
jnp
fbstp
mov
and
jmp
inc
je
jp
loope
pop
xchg
push
xor
popl
mov
and
das
push
and
xchg
mov
mov
jno
repz
mov
jnp
enter
and
dec
xor
pop
adc
add
in
test
stos
mov
jb
sub
dec
adc
out
sub
out
mov
sub
insb
push
mov
push
add
enter
stos
into
xor
xlat
ret
mov
call
xor
fucomi
test
mov
mov
inc
push
leave
pop
lods
rorl
sub
das
mov
ljmp
fldt
fnstsw
cmp
scas
mov
das
push
jbe
sbb
sub
aaa
inc
insl
mov
mov
pushf
or
pop
leave
or
pop
dec
aas
notl
cmpsl
sahf
jle
cld
test
fldenv
neg
aas
push
cmp
shll
incb
fisubrl
lds
in
sahf
jae
subb
push
mov
pushf
mov
adc
fs
andl
aad
cmp
repnz
or
adc
cs
lods
mov
shlb
jae
push
or
insl
jg
adc
or
aad
mov
mov
inc
mov
insb
call
mov
or
repz
clc
cltd
inc
sbb
push
push
lcall
adc
or
sub
or
fchs
cmp
lea
pop
into
ss
lcall
mov
data16
or
xlat
xchg
cwtl
cwtl
pop
push
stc
sub
stos
ja
call
es
push
mov
shl
inc
call
div
in
pop
rcrl
jecxz
je
dec
xlat
sbb
dec
cmp
lea
stos
dec
daa
mov
jge
cld
scas
push
imul
frstor
cmp
outsb
mov
sub
loopne
ret
leave
mov
inc
mov
stos
and
or
inc
incb
mov
mov
xor
nop
sub
stos
xchg
push
push
leave
outsl
icebp
nop
scas
daa
test
nop
imul
fimuls
daa
add
inc
push
mov
cmp
jo
add
cmc
xchg
mov
scas
out
adc
insb
cli
enter
xor
or
mov
mov
jecxz
or
icebp
mov
aas
aaa
pop
rcl
lahf
dec
jo
sti
std
mov
xchg
lcall
int3
leave
xor
add
movsl
pop
cwtl
pop
xchg
push
out
movsl
testb
test
pop
inc
ss
andl
imul
scas
adc
data16
fisttpl
outsb
loopne
dec
js
pushf
out
loop
sbb
push
mov
js
mov
shl
lock
jl
popf
lahf
jo
dec
cmp
insl
and
sub
pop
rorl
in
sub
jne
adc
mov
pushf
cltd
add
cmc
popa
fisubs
por
mov
jl
fs
stos
fcmovnbe
aaa
push
push
sub
push
and
adc
push
fsubrs
or
cltd
cmp
outsb
dec
outsb
dec
data16
jg
into
loopne
cmp
push
orb
mov
mov
fnstcw
pop
ja
in
stc
daa
cltd
adc
int
in
sub
push
imul
bswap
insl
xchg
and
cmp
jae
mov
xchg
jnp
sub
inc
cmp
or
cli
stos
xor
inc
stos
lods
adc
jecxz
fs
popa
pop
ret
insb
jg
adc
mov
pop
sub
fsubs
inc
or
nop
outsl
jae
ljmp
fdivrl
into
sub
sbb
mov
mov
xor
scas
pusha
fs
pop
in
test
or
jmp
mov
cmpsl
mov
xor
lods
xchg
rcr
push
pop
stos
inc
in
inc
mov
rcrl
repnz
rcr
xchg
aaa
mov
sub
mov
cmc
pop
add
add
push
fildll
xlat
mov
push
insb
sub
mov
dec
adc
out
arpl
outsl
outsl
dec
int3
add
mov
shlb
les
jno
and
loopne
adcl
mov
in
cli
sub
jg
test
mov
pop
cmpb
mov
pop
dec
cmp
inc
in
jmp
aaa
push
cmp
fwait
cmp
jae
cltd
out
out
dec
xchg
int3
inc
jmp
ja
sub
addr16
aad
mov
ss
fwait
cmc
cmp
call
add
out
jb
mov
cltd
inc
mov
mov
imul
fucomp
sub
mov
sbb
clc
dec
cmp
jnp
ljmp
jae
inc
fwait
sahf
xchg
inc
loop
push
sbb
or
ja
xchg
jl
fsubl
in
mov
mov
xchg
cmp
lcall
pop
jae
daa
sub
ret
push
ja
add
and
cwtl
scas
insb
es
lds
push
mov
repnz
cmp
int
movsl
addr16
jns
mov
cmp
push
dec
sub
add
sbb
jns
jmp
es
inc
add
and
int
push
mov
mov
fnsave
pop
or
jl
jmp
fmull
dec
aas
mov
xor
movsl
outsb
jg
inc
nop
or
add
es
adc
mov
iret
ds
or
out
xchg
out
push
dec
jnp
repnz
into
lcall
inc
xchg
xchg
inc
pop
insl
pop
lret
cmp
pop
rcrb
rcr
test
or
imul
inc
cmpl
jnp
add
dec
xor
int
add
cmp
cmp
lcall
sub
arpl
xchg
inc
icebp
sbb
mov
xchg
lods
add
cmp
dec
inc
inc
idiv
loopne
fsubl
test
inc
xor
stos
inc
fdivrl
add
cmc
jecxz
cmp
push
sarl
and
xor
sbb
scas
call
mov
int3
and
mov
in
cld
xchg
sub
addb
sbb
and
dec
jmp
inc
repnz
cmp
ljmp
or
dec
repz
repz
push
mov
mov
outsl
mov
cmpl
add
lods
pop
faddl
sbb
xchg
dec
scas
cwtl
adc
out
movsl
ret
cwtl
test
pop
jno
cmp
mov
fcoml
in
ret
ret
neg
xchg
fadds
dec
mov
rorl
sbb
out
shll
stos
mov
xor
dec
adc
cmp
jl
inc
mov
mov
xchg
inc
jge
into
mov
out
sub
jne
in
xchg
aas
lds
rcll
cmpsl
lock
xor
enter
aad
nop
ss
data16
js
lock
push
sbb
push
dec
dec
lods
popa
xor
jne
into
repnz
mov
sub
in
adc
xlat
lahf
adc
test
cmp
fldenv
mov
hlt
jno
pop
pop
pop
pop
and
insl
in
imul
pop
mov
mov
bound
add
das
cmpl
mov
xchg
push
enter
xchg
loop
push
data16
sub
sub
test
fucomp
lock
sahf
dec
push
cmp
dec
mov
fs
lods
rcrl
bound
lea
lea
push
scas
js
mov
bound
adc
push
aad
cmp
xor
addr16
xchg
push
push
bound
and
xor
pop
or
call
enter
insb
cmpsl
cmp
xchg
cwtl
test
popf
out
leave
push
sub
pop
add
add
push
cli
arpl
movsl
mov
jno
push
cli
cs
pusha
jns
pop
mov
mov
xchg
push
push
orb
mov
sahf
arpl
outsl
sbb
or
popf
jl
xchg
int3
xchg
sbb
dec
adcb
adc
add
sub
adc
test
xor
jecxz
cmp
in
mov
fcomip
fiadds
mov
dec
mov
outsb
fmuls
or
cmc
test
sbb
mov
addb
jmp
xchg
ret
cmpsl
sub
jnp
pop
cltd
outsl
adc
dec
test
in
in
ds
cmp
xchg
fmul
shrl
mov
popf
add
sub
dec
cmp
testb
fsubrl
movsl
aam
sub
add
movsb
xor
add
mov
pusha
hlt
inc
fwait
mov
call
fdivrl
pushf
loopne
lock
cmc
dec
aaa
lcall
adc
push
jmp
repz
mov
pop
dec
mov
call
mov
aam
add
jns
mov
lods
pop
mov
sbb
cli
stos
outsb
and
test
cmp
aam
les
jnp
sub
leave
mov
in
and
mov
dec
adc
jno
adc
mov
fisttps
push
inc
scas
movb
xchg
xchg
pusha
into
into
adc
cmpsl
insb
clc
dec
iret
add
pop
mov
iret
cld
or
pop
mov
lods
das
test
ja
or
out
jae
cmp
jnp
shlb
lret
mov
jns
lret
in
sub
inc
loop
repz
add
cltd
into
mov
jmp
or
flds
fcom
adc
movsl
fisttpll
movsb
xchg
pop
xor
outsl
pop
sub
sbb
test
adc
mov
lcall
jge
ss
cmp
fbstp
sbb
push
jl
pop
repnz
and
cli
mov
call
sar
add
sub
sbb
adc
in
pusha
push
xor
mov
in
fisttpl
add
mov
aad
scas
aam
adc
push
inc
pop
fsubrs
mov
sbb
mov
pop
mov
ss
lods
or
sti
insb
mov
pop
call
push
xchg
negb
cmp
ljmp
mov
insl
jnp
dec
pop
pop
jne
sbb
daa
or
loopne
dec
pushf
test
jbe
mov
pushf
mov
std
int3
cmp
outsl
adcl
sar
pop
dec
pop
aaa
cmp
ss
ret
adc
push
push
jl,pn
cvtdq2ps
mov
aad
sbb
and
xchg
xchg
rcr
jl
je
mov
jecxz
ja
out
out
inc
daa
sarb
xlat
and
sub
imul
sub
mov
lahf
mov
popa
adc
mov
adc
xor
pusha
ret
in
mov
jne
mov
xorb
jb
dec
ljmp
pushf
movsb
in
adc
mov
xor
cmp
or
dec
lock
adc
stos
jecxz
fwait
pop
lret
mov
mov
mov
and
sarb
sub
daa
sti
adc
xor
or
mov
into
pop
mov
or
mov
popf
ljmp
push
jge
xchg
jno
sbb
add
xchg
sub
push
cs
cmp
shl
mov
popf
push
pop
cli
and
xchg
dec
pop
or
or
mov
pop
mov
idivb
bound
stos
insl
loop
inc
xorb
sub
mov
pop
js
mov
mov
mov
adc
sbb
and
popf
xor
push
xchg
js
shrb
sbb
jmp
clc
fiaddl
dec
test
push
jg
sbb
sti
cmpsl
push
pop
call
xor
cmp
sub
cmp
jbe
or
push
int
je
push
cmp
cmp
lods
je
push
cmpsb
xchg
push
arpl
push
test
mov
or
adc
je
imul
mov
add
mov
repz
test
mov
xor
outsl
das
out
adc
fucomp
icebp
mov
pop
ss
lahf
and
jl
sahf
xor
xchg
mov
sub
fcoml
push
clc
fwait
xchg
lahf
mov
in
xchg
sbb
xor
test
std
ljmp
or
pop
fldl
mov
movsl
pop
cmpsl
jmp
scas
mov
loope
leave
popa
xor
jbe
add
shlb
inc
aas
outsb
dec
mov
decl
daa
mov
cs
add
jmp
cmp
arpl
js
xor
push
cmpb
sub
add
shll
and
xor
dec
cmc
ror
dec
cmpsb
call
cs
sub
mov
ret
xlat
arpl
xlat
les
ret
sti
jb
mov
and
stc
add
inc
pop
pushf
xchg
sub
sbb
enter
jo
sarl
test
rcll
add
mov
andl
xor
lea
jmp
mov
es
and
je
int
or
test
clc
movsl
pop
jg
loopne
sbbl
into
sahf
sbb
in
xchg
or
push
pop
jmp
outsl
xor
jl
dec
cs
pop
repnz
shrl
xchg
dec
sub
fmuls
sbb
fstpl
andl
mov
and
in
dec
xor
mov
rcrl
mov
lods
mov
push
xorl
lock
xchg
xchg
push
push
call
stos
push
call
sbb
or
sub
cmpsb
jl
and
lret
fisubs
sub
in
dec
and
lret
test
btr
lahf
repnz
cs
sbb
dec
fcoml
divl
pop
push
mov
into
xor
iret
pop
xchg
pop
adc
mov
in
hlt
nop
notb
mov
stos
xor
sti
xor
les
pop
pushf
cmp
sti
cmp
xor
sub
push
cmc
outsl
xor
xchg
and
xchg
insb
ret
mov
add
mov
jge
lods
scas
or
bound
je
mov
ljmp
pop
sti
call
lret
sub
adc
imul
sub
shll
add
mov
sbb
popf
push
mov
lods
sbb
hlt
loopne
scas
pop
mov
nop
movsb
push
and
in
int
aas
data16
jl
nop
das
sbb
sub
add
xchg
int3
jp
xor
adc
xchg
in
sbb
fidivrs
inc
inc
js
daa
test
test
sub
test
xlat
fucomip
push
insl
sub
dec
jle
push
cwtl
mov
dec
sub
scas
adc
pop
cli
sub
dec
cld
jge
pop
cmp
outsl
stos
cmc
unpckhps
test
stc
mov
adc
imul
test
dec
add
insl
popf
jnp
pop
sar
aam
mov
hlt
fnstcw
cltd
repnz
int
jge
lret
test
popa
mov
adc
or
xorl
xor
mov
and
add
add
aas
repnz
loope
shlb
popa
pop
fcmovb
adc
cmpsl
pop
lods
pop
push
dec
xor
jecxz
cmc
sbb
add
std
fisubs
sbb
adcl
cld
fistpll
push
or
sub
jecxz
mov
mov
sahf
pop
mov
scas
je
cmp
push
fstpl
or
inc
mov
sub
jo
leave
jae
cwtl
or
in
int
add
stos
jge
xchg
jno
call
fstps
add
idivl
xor
into
jae
lret
push
mov
out
gs
scas
sub
pop
push
nop
fisttps
fcompl
loope
and
xchg
add
iret
jg
pop
inc
pop
push
insb
cmpsb
add
sahf
icebp
pop
repz
pop
mov
jno
push
imul
sbb
ffreep
mov
pop
cmpb
xchg
addr16
outsl
xchg
add
xchg
pop
negb
out
rcll
and
xor
in
lock
pop
sbb
enter
cs
pop
pop
cmp
lret
lods
mov
and
or
ja
add
sbb
push
inc
imul
orl
adc
aaa
adc
out
inc
dec
outsb
fistps
xor
dec
mov
cwtl
mov
not
lods
mov
jno
arpl
jg
xchg
stos
mov
ss
test
and
jmp
jecxz
je
mov
sub
test
xchg
inc
lock
in
sbb
lods
scas
add
sti
dec
sub
mov
jns
pop
repz
xor
jp
push
push
mov
cwtl
int
dec
jecxz
adc
jbe
std
loope
enter
sbb
jmp
push
mov
js
adc
pop
jmp
dec
lods
sti
cs
cmp
cld
pusha
or
adc
mov
xor
xchg
push
bound
mov
ds
ss
dec
imul
outsb
imul
xchg
cld
stos
shrb
mov
je
addr16
into
pop
bound
stc
aam
or
jnp
xchg
scas
loope
dec
jp
xchg
lods
push
loopne
mov
rorl
mov
mov
nop
xchg
test
clc
jl
cli
jo
movsb
ljmp
inc
cmp
jle
rol
cld
lahf
shrb
out
mov
and
insl
clc
into
decl
insb
mov
pop
test
push
andl
mov
and
mov
cld
mov
movsl
in
push
aas
jmp
sbb
xor
mov
dec
lods
jo
add
sbb
dec
je
jnp
jne
xor
dec
or
or
sbb
pop
sub
mov
cmp
xchg
mov
mov
sub
ds
dec
lcall
sbb
push
mov
or
jecxz
mov
or
insl
xor
scas
insl
adc
mov
fldt
lds
stc
pop
insl
sbb
gs
dec
roll
insb
lds
cmp
sbb
sbb
movsb
cmc
cmp
xchg
mov
gs
enterw
jae
dec
jno
mov
test
mov
leave
ljmp
xchg
adc
mov
inc
jmp
lahf
mov
push
mov
pop
and
in
push
test
mov
inc
test
insl
inc
inc
xchg
out
jg
xchg
push
std
fcom
rcrb
lea
lds
std
fnstsw
inc
sbb
dec
xor
jno
xor
aad
mov
pop
repnz
mov
add
adcl
xchg
jp
pushf
jbe
sub
push
aaa
adc
xor
lea
mov
push
jge
repz
pop
adc
mov
xlat
sti
fsubs
insb
xor
aad
push
pop
repnz
and
and
xchg
iret
adcb
mov
lret
jg
shlb
adc
dec
jne
jne
lock
mov
in
stc
cld
mov
cmp
cmp
in
in
jo
mov
inc
mov
mov
cltd
pop
pusha
in
jg
add
cwtl
xor
in
add
lods
movsl
adc
scas
mov
fsts
xlat
jg
jne
cmp
lods
adc
push
scas
xchg
and
mov
pop
or
in
cmpsb
ljmp
xor
out
pop
lds
or
sbb
or
and
lods
sub
mov
lcall
jmp
js
push
test
repnz
jae
xlat
jg
adc
dec
pusha
mov
call
outsb
lahf
jo
push
and
loope
jo
aas
xchg
pop
jbe
pop
mov
in
gs
or
sub
sbb
jmp
sbb
int3
cli
xor
and
cmp
pop
mov
cmc
push
push
mov
add
pop
stos
jle
sbb
sahf
inc
daa
call
cltd
pop
xchg
xor
mov
daa
sbb
mov
xor
sub
push
leave
xor
dec
or
rorb
popf
mov
lret
xor
lea
xchg
sbb
mov
imul
push
jo
adc
cmp
and
push
inc
cmp
and
cmp
mov
jp
in
mov
xchg
test
jmp
and
push
in
mov
mov
and
ret
frstpm(287
sti
sbb
pushf
lret
pop
sub
loope
pop
bound
iret
jnp
adc
cmp
jl
addr16
in
cld
rcl
sbb
leave
xchg
or
ss
cli
arpl
ljmp
imul
mov
mov
icebp
cli
in
shlb
aaa
cmc
sub
mov
jecxz
stos
fdiv
and
jns
xchg
add
adc
inc
xor
xchg
mov
in
gs
push
loope,pt
xchg
leave
push
sbb
ret
pop
sbb
pop
sbb
add
pop
clc
push
add
cmc
mov
int
cmp
es
hlt
inc
icebp
rolb
repz
adc
mov
lret
inc
mov
les
aad
shlb
loopne
lock
movl
fiaddl
loope
xchg
orb
dec
cmp
xor
lock
enter
addl
cmc
out
cmpsb
cmp
ja
std
lret
insl
mov
stos
push
clc
add
pop
sti
cli
out
mov
insb
gs
jbe
data16
leave
push
cmp
lods
out
test
sub
das
std
push
mov
mov
mov
mov
mov
push
testb
sbbl
jl
xchg
scas
scas
scas
aaa
xor
ljmp
repnz
dec
cwtl
jl
lcall
pop
push
dec
cmp
pop
ror
cmp
dec
fcoms
in
push
andl
cmpsl
sbb
imul
fs
pop
jae
rol
aam
hlt
sub
inc
mov
lods
das
add
or
loop
gs
cmp
push
rorl
add
lret
mov
js
pop
imul
loop
fistl
mov
lock
ds
fldt
mov
dec
movsl
shl
sbb
stos
sahf
dec
lahf
adc
out
les
jnp
push
movsl
or
mov
pop
fucomi
jno
sbb
inc
aam
and
in
mov
hlt
inc
cmp
inc
cld
or
sbb
sarl
adc
fsubl
mov
hlt
out
call
sub
stc
inc
shll
jbe
xorb
xchg
xor
cmpsb
call
sub
mov
sub
push
shrb
int
sbb
and
stos
sahf
push
jmp
sahf
sbb
rolb
push
dec
jecxz
or
ds
sti
out
xor
and
rcrl
dec
popa
jmp
imul
inc
pusha
mov
das
jmp
popl
or
pop
adc
inc
sub
loop
add
dec
fisubs
push
pop
cmpsl
jmp
jmp
bswap
sub
popa
mov
xor
cli
aam
sub
push
push
enter
inc
lods
outsl
pusha
add
inc
and
movsb
sti
pop
or
cmp
pop
mov
xor
stos
shlb
enter
mov
fsubl
xchg
ja
fwait
loop
adcb
fists
movsl
inc
andb
sbb
iret
sub
out
or
arpl
lea
in
dec
dec
cltd
jp
jno
inc
mov
adc
adc
out
adc
movsb
jge
pop
mov
icebp
xor
push
in
jmp
lahf
negb
loope
mov
add
les
lods
mov
pop
pop
test
nop
mov
mov
mov
pop
adcl
mov
mov
add
repnz
lret
pop
pop
mov
rcrl
cmp
outsb
test
sub
jo
lock
movsb
sbbl
xor
xor
cmp
daa
adc
lods
pop
mov
lret
jne
test
or
pop
dec
icebp
int
test
in
xchg
jne
mov
adc
arpl
mov
int3
add
mov
jmp
outsl
enter
in
xor
fcoms
not
repz
ror
jbe
test
inc
rcrb
pop
int3
jns
movsl
mov
xchg
mov
push
lds
push
sub
cmp
sbb
xor
mov
repnz
aam
jne
cmc
push
in
push
pop
push
mov
stos
lret
push
mov
pop
je
ret
dec
sti
xchg
sbb
fisttps
lods
in
cli
dec
push
add
arpl
rcr
push
xchg
sub
std
stc
xchg
or
out
add
repnz
inc
std
or
lock
flds
push
adc
int
pop
xlat
push
pop
mov
jmp
push
xchg
mov
out
inc
lods
jnp
push
sarb
push
in
xchg
mov
jmp
inc
enter
and
jg
notb
jne
testb
jne
mov
cmc
adc
mov
negl
inc
or
sub
inc
outsl
cli
dec
mov
shr
add
jmp
push
outsb
fstl
jge
in
ret
push
cmc
sub
xlat
cs
daa
fcoms
lahf
popa
xchg
push
outsb
dec
bound
rcrl
repz
mov
inc
jge
lret
daa
js
adc
add
clc
sbb
rep
lods
mov
clc
jl
rcll
cmpsb
jp
and
js
roll
cmpsl
adc
std
test
aaa
lret
cmc
es
adc
lock
lock
inc
jl
scas
fsubrs
xor
hlt
fwait
test
jmp
dec
push
leave
mov
scas
in
jecxz
test
movsl
adc
xchg
add
repz
mov
sbb
sarb
push
sub
arpl
cld
insb
pop
loopne
sub
test
adc
sbb
lcall
imul
dec
ds
xchg
nop
stos
inc
lds
out
popa
xchg
lds
loope
xchg
and
jae
xor
addr16
icebp
jno
cmc
add
subb
inc
mov
addr16
loope
cld
pop
ljmp
add
int
mov
and
cmpsl
cmpsb
cltd
add
cmp
fucomi
and
adc
push
and
adc
dec
int3
sbb
push
ficoml
mov
inc
add
sti
or
test
in
mov
mov
add
stos
cli
ficoml
pop
cmp
and
int
mov
cmpsl
pop
xchg
inc
cmpsl
mov
pop
mov
movsl
adc
adc
test
mov
inc
push
ds
sbb
popa
repnz
fmull
dec
je
imul
hlt
push
add
or
mov
inc
or
and
cmp
xchg
inc
emms
jbe
shll
xchg
push
and
dec
dec
ss
mov
int
in
mov
ret
fisttpl
inc
cmp
fnstenv
insl
je
out
call
cmp
push
loop
mov
inc
fwait
add
lret
cmpsl
out
xchg
ss
stos
add
fidivrl
ss
xchg
outsb
ret
jl
mov
pop
scas
mov
dec
iret
xchg
inc
sbb
and
mov
cld
stos
sub
decl
rorl
orb
push
sbb
out
shll
push
repnz
roll
shll
adc
xlat
gs
stos
in
pop
and
sbb
mov
dec
fbstp
mov
mov
or
jmp
mov
idiv
aad
test
sub
sub
je
pop
lods
sub
or
push
and
jge
shlb
push
loope
lcall
call
push
push
mov
ret
loope
adcb
xchg
and
rcrb
mov
lea
lahf
ds
scas
insl
mov
push
dec
test
lds
cli
clc
jmp
push
test
pop
ja
pop
inc
enter
jmp
out
push
imul
sub
sub
jg
clc
mov
mov
fdivrs
lock
insl
add
shl
cld
inc
sbb
adc
aam
jnp
call
xlat
repnz
stos
and
pop
imul
adcl
loopne
adc
jmp
jbe
inc
inc
pusha
and
add
stos
dec
cmpsb
or
or
repnz
cmpsb
jo
push
stos
pop
xchg
scas
and
bound
mov
add
in
inc
shll
scas
scas
xchg
aad
mov
outsl
imul
push
jb
mov
adc
dec
push
and
sbb
fldl
inc
lods
add
mov
lret
into
aaa
pop
push
cmpl
xchg
sub
nop
lret
inc
xchg
mov
stos
imul
mov
imul
cmc
frstor
mov
cmp
fwait
hlt
addr16
pop
in
inc
pushl
test
outsl
jbe
fistl
popl
or
outsb
jb
or
push
es
dec
jg
cltd
rclb
outsl
sub
xchg
lret
push
out
lret
mov
sahf
mov
lods
xor
les
push
das
cld
pop
popf
imul
push
cli
mov
mov
jg
cltd
pusha
popa
pop
jecxz
mov
negb
scas
xchg
xchg
mov
mov
cld
xchg
int3
sbb
fwait
outsb
sar
add
adc
scas
fwait
lret
inc
xor
sbb
add
lock
lcall
cmpsb
cmp
push
outsb
dec
cmp
pop
and
sub
mov
es
fs
jl
stc
cmp
in
push
jae
mov
ret
movsl
test
mov
mov
pop
gs
pop
sahf
or
push
mov
aas
js
fcoml
or
xchg
pop
hlt
push
popf
xor
xor
sarb
inc
adc
iret
mov
and
cwtl
sub
nop
pop
pop
mov
dec
mov
cmp
andl
mov
push
stos
cmp
cmpsb
cwtl
adcb
ja
mov
fldl
mov
add
sub
xor
add
pop
test
cltd
std
test
mov
cmp
cwtl
stos
dec
fsubrs
jg
or
icebp
inc
lret
fsubrl
jge
dec
je
stos
sbb
out
sahf
xor
push
push
out
add
dec
and
dec
jle
dec
mov
call
call
mov
cmpl
and
std
test
lea
pop
ret
sub
pushl
xor
cltd
shl
pusha
jle
adc
lret
mov
test
insb
daa
pop
sbb
mov
push
adc
pop
iret
ss
ret
daa
jo
dec
imul
stos
sarl
add
imul
cs
fwait
loop
and
or
lcall
jnp
popa
xchg
pop
inc
aam
out
test
mov
mov
bound
cmp
test
ficompl
cld
lcall
xchg
scas
sbb
stos
sbb
sub
roll
cwtl
push
mov
inc
movl
out
mov
clc
jo
outsl
stos
push
jb
cld
loop
xor
push
dec
out
decl
sbb
jno
sete
stos
sti
popf
mov
push
jo
rorb
out
pop
in
gs
or
jl
and
add
push
inc
mov
pushf
aaa
les
ret
pusha
test
das
sub
lret
jg
add
sti
ss
lcall
push
push
jmp
fnsetpm(287
ss
lods
dec
dec
gs
push
xor
push
xchg
mov
in
ljmp
ds
dec
std
mov
pop
sub
lods
push
push
gs
mov
adc
data16
mov
jo
add
mov
or
pop
gs
js
mov
daa
push
cmp
pop
xor
rcr
sub
cmp
dec
ljmp
repnz
or
icebp
pop
js
push
inc
pop
and
jmp
or
adc
add
loope
stos
inc
movsb
ds
ja
scas
in
xor
ret
or
cmp
mov
clc
test
sbb
xor
in
dec
sbb
dec
cmpsl
test
inc
xchg
incl
xchg
out
bound
push
loop
or
pop
cmp
push
stos
jecxz
dec
push
daa
xchg
fiaddl
push
data16
mov
mov
and
jge
lcall
lods
lahf
xor
pop
aaa
mov
mov
sub
es
cmp
sub
sti
and
push
mov
jo
pop
insl
ss
fsub
add
jo
sbb
arpl
popa
xchg
test
test
pop
xor
subl
cmpsb
lret
push
dec
pop
inc
inc
imull
sarl
pop
push
scas
push
adc
pop
outsb
lea
mov
out
subl
sbb
jno
loope
push
cmc
xchg
jl
adc
shrl
adc
loopne
ljmp
fwait
je
in
push
mov
scas
int3
fcmove
xchg
add
daa
mov
sub
ljmp
mov
in
xchg
mov
and
pop
xchg
pusha
fldl
inc
or
mov
out
out
mov
jo
push
scas
out
jmp
inc
cmp
dec
cmc
dec
inc
xor
mov
mov
hlt
out
or
push
js
pop
sarl
inc
aaa
daa
jp
mov
xlat
or
or
sbb
xor
dec
push
inc
jmp
mov
xor
pop
jo,pt
stc
push
or
cs
aad
addr16
pop
sub
push
ret
out
leave
and
and
inc
shrl
inc
hlt
or
fstl
pushf
rorb
push
lock
movsb
xchg
lcall
mov
adc
call
movsl
aam
add
mov
pop
out
jbe
clc
jg
movsl
clc
lahf
call
fiadds
andb
cmovg
and
push
xchg
leave
mov
je,pn
shrl
fcoml
ret
jl
push
nop
xor
push
orb
dec
xchg
imul
sbb
push
cmpsb
bound
in
xor
dec
adc
adc
add
jnp
ret
subb
dec
jmp
sub
stc
sub
testb
cld
in
pushf
pop
pusha
fists
and
cld
push
sti
addb
jle
ja
push
shrl
pop
insl
lock
cmpsl
dec
jb
and
inc
dec
popf
xor
and
push
imul
cltd
pushf
or
push
les
push
mov
mov
std
mov
test
sbb
xchg
lods
and
mov
or
fcos
js
sub
shlb
push
fcmovnu
xor
clc
lock
xchg
xchg
in
in
mov
push
mov
aad
lret
ss
sub
sbb
jl
mov
adc
sbbb
or
push
ret
in
cmpsb
sti
pop
bound
xchg
fiadds
cmp
iret
cmp
lret
xor
xchg
adc
pop
ja
test
push
lahf
mov
mov
rcrl
mov
pushf
ret
cmp
repnz
in
popa
mov
ret
loop
mov
lds
lods
out
sbb
sub
in
stos
push
adc
jno
dec
xchg
insb
pop
jle
roll
or
sahf
adc
lods
push
add
insl
jne
mov
and
decl
sub
das
imul
xchg
rcl
add
mov
nop
inc
mov
push
roll
ljmp
mov
lods
es
sbb
pusha
sarb
pop
xchg
adc
movsl
inc
mov
ja
aam
stos
sbb
gs
loopne
in
ja
xchg
fdiv
gs
sub
mov
pushf
loopne
mov
idivl
mov
mov
jp
shll
rcll
and
scas
sbb
ja
jne
test
sbbb
daa
or
decb
gs
call
mov
sub
fstpl
sbb
mov
xchg
add
gs
js
cmp
push
clc
cli
jle
stc
call
out
divl
fadds
cs
pop
daa
xor
arpl
pop
dec
cmp
cs
sbb
jne
fwait
push
mov
in
xor
jl
pop
add
cli
cmpsl
dec
not
push
add
mov
pusha
ret
push
jns
jl
test
iret
cltd
pushf
scas
sahf
mov
xchg
nop
es
add
dec
repnz
imul
mov
jne
mov
xor
xor
jmp
xchg
mov
dec
or
shl
stos
pop
aam
push
in
xor
jne
cld
je
pop
and
adcb
and
ret
sbb
loope,pt
mov
and
mov
fistl
loop
stc
and
and
outsl
pop
push
push
fucomi
push
jp
jne
push
mov
mov
pop
cmpsl
testb
dec
lret
mov
or
jecxz
pop
or
jno
daa
adc
add
xor
enter
stos
subl
es
adc
add
into
dec
push
or
call
inc
icebp
cs
adc
mov
jns
mov
adc
daa
xchg
adc
xor
and
push
cmp
dec
movsl
xchg
pop
mov
test
add
sub
fs
jb
inc
xchg
movsb
stos
jge
push
pop
xor
aaa
mov
cmpsl
je
dec
int3
int3
adc
roll
add
mov
jg
inc
push
or
loope
js
mov
clc
das
mov
insl
ret
adc
mov
ljmp
mov
push
fnsave
and
lods
push
jecxz
jnp
jne
xor
push
mov
cs
jmp
ljmp
pushf
sarb
loopne
xor
nop
mov
xchg
cld
pop
jle
je
orb
aaa
jge
jb
out
sbb
add
lds
test
insl
mov
sbb
push
xchg
addr16
adc
ss
lods
sub
jmp
lahf
cmp
int3
xor
clc
call
scas
push
pavgw
pop
adcb
pop
imul
fs
loop
inc
xor
pushf
sub
jp
push
out
mov
cltd
fs
inc
cltd
jb
jns
add
daa
cs
dec
dec
sbb
xchg
fwait
mov
mov
test
push
and
ljmp
test
sbbb
and
scas
push
gs
lret
sbb
cld
imul
sbb
ja
jae
mull
aas
xor
add
lret
pop
push
fdivs
pop
jp
imul
ljmp
mov
shrl
loop
sub
sbb
push
in
test
fadds
fucomp
mov
push
in
icebp
jl
jle
adc
or
sahf
xor
sub
sub
sub
std
loopne
sbb
mov
cmpb
mov
lods
test
adcl
cmpsb
pop
push
push
jbe
outsb
xor
cs
inc
cmp
cmp
in
out
pop
xchg
test
and
in
sbb
jg
dec
stc
push
movsl
testb
orb
dec
lahf
imul
mov
in
outsl
icebp
jle
jp
out
xchg
jg
add
push
jmp
popf
jbe
or
push
or
popa
push
pop
out
imul
xchg
jb
cmp
sahf
mov
shrl
popa
int
push
nop
cwtl
sbb
xchg
cmp
addr16
xor
mov
jle
mov
xor
sti
popa
ret
mov
dec
xchg
fs
add
add
or
aas
addr16
mov
inc
cmp
addl
in
gs
call
sbb
stos
pop
dec
shlb
dec
rcl
int3
jmp
mov
ljmp
fnstcw
fsubr
mov
push
sti
mov
hlt
jo
loopne
jp
iret
pop
ds
cld
iret
or
and
inc
aaa
add
or
sti
cltd
xor
mov
mov
or
aas
lods
clc
jle
loopne
and
lds
pushl
stos
scas
repz
inc
mov
sbb
out
mov
jecxz
mov
aaa
lods
inc
jmp
arpl
mov
aam
lea
fwait
sbb
mov
in
popf
mov
in
addb
jb
and
lret
ja
jno
into
xor
mov
push
cmp
orb
push
stos
push
ljmp
cmp
in
xchg
mov
xorb
lret
je
int
aad
out
data16
mov
mov
cmpsb
enter
push
mov
fdivrl
jmp
lahf
sub
jnp
push
adc
pop
lds
xchg
ret
xchg
roll
std
inc
jb
push
jg
jecxz
addr16
lret
imul
jge
dec
fwait
push
arpl
fwait
xlat
ljmp
packsswb
sbbb
cmp
mov
inc
xchg
adc
and
xchg
sub
xchg
xlat
lods
and
ficoml
scas
leave
fldcw
push
int3
mov
out
pop
dec
push
pop
lock
ret
outsl
xor
push
sbbl
cs
adc
inc
out
mov
cmp
das
or
dec
push
rcll
mov
mov
sub
out
sub
cmp
xor
sbb
sub
push
pushf
out
icebp
adc
ljmp
fisubrs
or
sub
cld
lret
std
mov
adc
aam
aas
xor
stc
mov
leave
xor
mov
pop
fst
pop
out
cld
jmp
in
fistl
repz
hlt
mov
add
mov
divb
hlt
push
adc
in
pop
insl
cs
movhps
dec
or
xchg
loope
out
mov
adc
dec
add
jle
mov
push
jg
fimull
pop
push
int3
or
pop
lds
push
bound
sti
pop
push
push
out
sbb
loop
sbb
movsb
inc
pop
ds
jo
in
cmpl
ja
mov
dec
push
sub
mov
test
dec
adc
and
sbb
movsb
into
xor
fisttpll
xor
fisttps
stc
loope
and
cmp
iret
push
inc
inc
int
call
aam
jae
outsl
dec
sub
mov
fucomp
js
add
xor
push
xchg
pop
fucom
dec
popa
mov
push
and
jmp
mov
stos
ss
sbb
add
inc
push
movsb
rclb
sbb
aaa
mov
shlb
mov
out
hlt
jecxz
xchg
aaa
xor
sub
ds
lret
lret
add
orb
dec
and
xlat
stc
repz
out
dec
aad
cmp
inc
fcoml
out
mov
mov
dec
pop
add
mov
mov
aad
pop
sub
into
repz
aam
inc
jecxz
cmp
lods
nop
lret
mov
pop
push
push
pop
dec
mov
loop
sub
pop
jmp
movsl
pop
gs
in
lret
inc
pop
out
mov
jp
dec
pop
icebp
inc
mov
xchg
inc
adc
es
pop
inc
das
sbb
xlat
adc
xchg
mov
xchg
xchg
or
shlb
cmc
jecxz
je
icebp
dec
inc
pusha
sub
jne
mov
andl
xor
mov
into
addb
jo
mov
data16
pop
jmp
pop
sub
jnp
xchg
rclb
pop
dec
mov
sbb
outsb
aad
mov
add
jge
sbb
xchg
ret
jo
pop
xchg
cmc
xchg
in
loop
mov
jl
aaa
xchg
int3
xor
aas
xchg
mov
lods
leave
dec
fcmovne
stc
out
pop
xchg
mov
ret
or
daa
cld
enter
test
pop
cli
pop
movsl
mov
xlat
cmp
xor
es
imul
repnz
push
fucomip
cmp
mov
push
jmp
jecxz
icebp
cli
insb
gs
push
xchg
cmpsl
jae
push
fxch
inc
fistps
and
mov
les
push
call
adc
std
je
mov
fisubrl
pop
add
loopne
xchg
das
jge
mov
add
xchg
popa
in
push
test
xchg
loopne
ds
insl
cmp
or
or
scas
call
mov
inc
push
test
test
jns
addb
xor
pop
cmp
cltd
adcb
ficompl
xchg
xor
xchg
push
push
mov
aad
add
ss
push
push
lret
cmp
neg
cwtl
lcall
push
test
mov
or
rclb
aaa
mov
out
repnz
insl
pop
insl
cs
enter
lods
loopne
mov
and
jnp
aaa
push
xchg
in
sub
outsb
pop
pop
or
outsb
test
adc
dec
stc
mov
aad
xlat
add
aam
aad
ljmp
jbe
rorb
dec
xchg
lds
adc
pushf
xchg
fildll
push
fidivrs
mov
frstor
fidivl
cltd
mov
mov
sub
adc
rclb
cmp
addl
aad
cmp
sub
pop
in
xlat
std
mov
sub
pop
dec
push
push
cld
lcall
sti
pop
movhlps
cmp
and
out
pop
jne
dec
sti
fsincos
std
inc
imul
pop
cmp
in
xor
jnp
inc
cmpsl
push
out
stc
cld
nop
shll
rcrb
cmpsl
pushf
ljmp
leave
js
outsb
jbe
jp
inc
loope
test
cmp
or
jl
js
js
or
mov
aad
cmpsb
fidivrl
mov
imull
lds
adc
or
hlt
jb
cs
push
xor
mov
scas
inc
out
jns
out
xlat
push
enter
fbld
fnstenv
mull
or
adcl
xlat
inc
popa
mov
sub
aad
loope
xor
push
add
inc
shrb
or
popf
sbb
adc
xchg
push
and
ficoms
lcall
addr16
aad
inc
lods
mov
pushf
inc
and
xchg
sbb
ret
hlt
pop
dec
fs
daa
orb
push
ss
lods
sbb
pop
cmp
adc
mov
lret
push
loopne
loope
sub
xor
sub
sbb
lret
movl
imul
sub
inc
pop
roll
sbb
test
pop
lret
popf
mov
xor
jle
pop
sbb
insl
pop
fdivrs
pusha
xor
and
xchg
sub
daa
push
add
mov
adc
out
insl
xchg
sbb
push
sub
call
add
loope
ret
inc
cmpsw
dec
mov
inc
ljmp
sbb
pop
shrl
aas
xor
outsl
xlat
shl
jno
in
bswap
cli
iret
xchg
loope
sbb
idiv
sbb
jmp
pushf
cltd
adc
scas
arpl
sub
add
jbe
mov
lds
shr
dec
sarl
in
scas
pushl
mov
je
sub
test
fistpll
cld
add
cmpsl
or
push
xchg
jmp
int
xchg
daa
cmp
imulb
jns
test
and
orb
repz
jae
mov
mov
cmc
sbb
aad
fnsave
xchg
out
lds
xor
lods
push
lret
nop
stc
adc
lea
push
or
stc
dec
sbb
movsl
jns
out
fidivs
icebp
push
inc
adcl
cld
pusha
frstor
jbe
and
fdivs
movsb
stc
js
popa
pop
xchg
push
pop
in
lods
sub
fldl
cmpsb
push
sbb
dec
and
in
lahf
inc
jb
andl
dec
fldt
loop
adc
push
bound
fwait
dec
adcb
setno
jo
cmp
aaa
mov
xchg
leave
not
aaa
cmp
in
loop
push
mov
cmp
jno
mov
ret
loopne
or
add
lret
repnz
cmp
and
jo
repnz
clc
lea
ds
scas
sub
xchg
sub
imul
inc
repnz
adc
inc
cmp
insl
insb
mov
fimull
mov
xchg
fdivrl
cmp
and
pop
lret
xor
mov
mov
je
int3
inc
fwait
mov
pop
aas
fmuls
jb
push
sbb
mull
mov
movsb
rcl
push
push
pop
jno
icebp
aaa
test
outsl
add
iret
xchg
jp
aam
pop
in
jns
jbe
pop
lret
adc
testb
or
lea
ljmp
or
cli
and
loop
fbld
dec
mov
cli
push
frstor
fdivrl
das
mov
ficoms
sbb
fcoml
std
jae
rcrb
rorl
pop
dec
jns
pushf
movsl
addr16
mov
cwtl
jmp
push
mov
and
xor
pusha
ret
add
xchg
imul
jg
stos
aas
mov
sub
leave
or
and
test
sub
jns
outsb
mov
add
iret
aad
jno
cmpsb
cmpsb
cwtl
ss
mov
cmpsb
mov
sub
inc
jnp
jmp
mov
outsb
cmp
movsl
cmp
sub
movsl
mov
sub
push
or
add
ret
sub
mov
hlt
push
mov
les
jno
sub
out
nopl
je
adcl
dec
push
or
fwait
cwtl
jnp
es
mov
and
das
jge
pushf
add
add
and
push
jo
xchg
push
les
jecxz
popl
dec
xorb
mov
popa
stos
push
iret
orb
dec
into
adc
sub
pop
cli
fwait
pop
dec
mov
sub
subl
mov
sbb
jle
lret
jg
pop
cwtl
sahf
hlt
divl
adc
les
stc
lahf
ja
notl
mov
out
push
dec
stos
lds
push
cmc
dec
jbe
mov
movsb
or
bound
push
pushf
xchg
loop
divb
and
roll
cld
cmp
adc
xor
ret
inc
loopne
or
popl
cmpsb
dec
push
test
loop
imul
xchg
fwait
subb
insb
cmp
js
xorb
pop
cmp
cltd
ret
repz
push
sbb
lret
popa
mov
into
daa
dec
test
clc
in
xchg
sbb
setae
push
xchg
les
stc
int3
or
push
or
stos
jp
lahf
xchg
imul
jle
pop
in
enter
push
shl
mov
push
mov
xor
add
xchg
sbb
stos
or
dec
cs
js
dec
xlat
pop
fxch
dec
push
push
sub
inc
xchg
lcall
cmp
stos
repz
out
jmp
test
xlat
or
adc
ljmp
imul
ja
pushf
mov
xchg
clc
cs
cmc
push
out
adc
rolb
sub
sub
xchg
mov
mov
ret
jae
and
loopne
xchg
inc
add
aas
mov
lea
pusha
inc
xorl
je
and
sbb
jl
sub
call
fsincos
pop
popf
xor
mov
out
inc
or
sbb
sub
add
jb
data16
shll
ds
fstl
fistpll
ret
or
test
push
insb
mov
inc
ss
dec
dec
sbb
rcrb
mov
sub
test
cmp
testl
cmpsl
push
mov
addb
push
xchg
arpl
ljmp
fsub
ficoml
test
pop
out
mov
push
xor
outsb
adc
and
pop
repz
cli
cmp
aad
bound
arpl
cmp
dec
jno
rcl
mov
pop
imul
xchg
insb
inc
jnp
test
push
pop
insb
gs
test
xor
xor
shrb
jns
outsl
incb
jnp
out
fs
rclb
mov
lods
xchg
popa
cmp
xchg
cli
push
ret
xchg
adc
xorb
movb
sub
mov
adcb
xchg
cwtl
mov
insb
repnz
leave
xor
and
das
mov
mov
mov
push
dec
xor
loope
ss
jne
in
insb
and
lods
sahf
mov
inc
flds
shrb
enter
hlt
inc
push
or
and
xchg
dec
int
bound
push
pop
hlt
jo
dec
incb
orl
bound
lret
xlat
cmp
cmc
faddp
es
popf
jae
in
inc
lcall
loope
pop
adc
jb
mov
lds
jecxz
jle
scas
das
xchg
mov
mov
sbb
sbb
test
mov
or
mov
fisubs
mov
outsl
add
stos
jae
dec
push
movsb
push
rcr
aad
add
sahf
fwait
ret
adc
mov
push
pop
inc
leave
push
cmpsl
clc
push
or
cmpsl
gs
xor
jne
nop
jo
and
xlat
adc
or
test
in
mov
mov
inc
sub
mov
out
int
jp
adc
fistpll
xchg
notb
pushf
or
dec
movsl
push
cmp
cld
enter
out
push
mov
popa
jns
popa
cmp
hlt
jmp
push
ja
pop
xchg
xchg
push
in
leave
mov
das
add
sbbl
sti
in
jae
data16
or
loope
sub
nop
stos
mov
fildll
adc
cwtl
add
mov
push
popl
push
push
jns
es
cmp
jo
fnstenv
mov
mov
xchg
cld
hlt
xor
clc
mov
xorb
pop
jmp
fimuls
out
out
cmp
add
jbe
lret
or
js
push
mov
fists
outsl
pop
out
xchg
call
inc
enter
inc
and
cs
mov
cmp
loopne
loopne
jae
cld
dec
and
add
xchg
dec
mov
pop
popa
cwtl
iret
pop
xor
or
xchg
sbb
xchg
xor
fwait
dec
imul
jle
js
adc
jne
xchg
hlt
cli
lods
lods
stos
xchg
lret
mov
push
mov
push
loope
cmpsb
jno
clc
and
sub
hlt
imul
xchg
inc
movsl
dec
test
lret
push
dec
test
sub
xchg
sub
cld
leave
sub
cs
add
sub
and
cmpl
ret
int
fiaddl
adc
shrl
xchg
inc
iret
int3
and
inc
inc
int
mov
dec
mov
enter
add
test
jecxz
or
imul
std
xchg
mov
test
or
add
fs
cs
pushf
or
lcall
sub
pop
inc
addr16
jno
fcompl
jne
rolb
mov
cwtl
xchg
add
ljmp
mov
lret
ds
clc
or
jae
adc
gs
inc
add
adc
cmp
sub
scas
dec
push
mov
repz
into
lods
pop
mov
xor
decb
lds
dec
pusha
cs
orl
jmp
cmp
outsl
xchg
js
stos
or
es
nop
xlat
fdivl
adc
testb
insl
pop
out
js
xchg
sti
jmp
xchg
lods
xor
jo
adc
fldenv
xchg
scas
int
cmp
xchg
cwtl
in
or
jge
and
test
mov
xor
jns
add
sub
test
or
jp
sti
adc
out
clc
sarl
lock
mov
movsl
ret
ds
inc
mov
mov
dec
xchg
cwtl
cmp
and
cli
cli
clc
pop
cmc
push
arpl
mov
das
mov
arpl
scas
pop
aaa
das
movsl
pushl
scas
dec
outsb
sub
xor
mov
es
push
leave
pop
pop
add
pusha
dec
fs
test
and
mov
or
mov
leave
jb
std
outsb
cmp
fs
xor
sti
jecxz
sub
out
ficoml
repnz
xchg
inc
add
push
xchg
and
lahf
fistpl
mov
sbb
mov
mov
loope
imul
sti
outsl
ficompl
jmp
sub
cld
xchg
sub
fdivrs
pushf
std
stos
leave
test
dec
inc
adc
test
sub
inc
xor
dec
cltd
pop
cmp
iret
std
daa
dec
pop
mov
nop
adc
xchg
jp
int
add
dec
out
mov
gs
xchg
sub
jmp
mov
ljmp
mov
lea
ret
sbb
mov
call
jbe
into
mov
out
movsl
xchg
xchg
jp
sbb
jo
push
xor
xor
fnstcw
mov
dec
outsb
repnz
adc
call
adc
mov
pop
scas
add
fsub
loopne
inc
mov
mov
in
push
cld
pop
fwait
and
mov
xchg
aaa
cmc
push
sahf
call
add
push
scas
jmp
out
pop
in
xchg
sti
adc
and
jmp
dec
or
popa
jmp
addr16
aaa
jp
daa
lock
pop
dec
push
bound
std
jne
or
sbb
mov
jp
pand
xchg
repnz
call
into
lods
jge
inc
psubq
in
mov
inc
dec
mov
cmp
cmc
jno
daa
test
lea
xchg
lcall
and
dec
stc
iret
ss
push
das
sti
mov
mov
mov
push
jb
lcall
cmp
mov
inc
inc
andb
lret
cmpsl
xor
pop
push
cwtl
add
or
inc
out
push
xor
push
dec
popf
outsl
mov
push
call
push
clc
or
cltd
les
int3
mov
fs
cmp
enter
or
icebp
inc
sbb
fdivrs
mov
and
lods
in
jecxz
jecxz
fsubrp
in
ljmp
sti
and
xorb
pusha
data16
js
cwtl
push
jbe
aad
pop
out
in
aas
imulb
clc
dec
mov
cmpsl
shlb
scas
orb
pslld
inc
cmpsl
clc
inc
sbb
mov
lret
hlt
mov
repz
push
dec
lods
mov
icebp
lods
add
popl
or
dec
int
add
mov
mov
je
lcall
push
aad
in
sahf
fs
test
dec
or
jmp
ds
ds
aaa
addr16
ja
and
xchg
add
mov
cmp
inc
loop
mov
out
shll
push
daa
jg
jnp
in
rorb
test
push
xchg
imulb
xchg
jmp
jecxz
xlat
xchg
jnp
jg
cmp
stc
xchg
stc
pop
adc
pop
mov
sbb
out
imul
dec
xorl
push
in
jb
roll
ret
mov
mov
loope
jl
push
pop
xchg
lret
xor
or
in
lahf
and
sub
sbb
sub
ds
outsb
fistl
das
icebp
sub
sarl
fistps
push
inc
and
or
dec
pop
shrb
cmpsb
enter
and
mov
pop
je
pop
inc
mov
out
adc
add
test
data16
addr16
mov
pop
arpl
mov
div
fildl
xchg
inc
mov
mov
or
jb
or
test
test
jmp
test
mov
decb
int3
pushl
aam
jge
rcll
mov
xchg
aad
inc
xchg
stos
jns
sub
sahf
xchg
pop
mov
jg
cmp
loop
cmp
jp
add
jge
daa
stos
pop
mov
stos
je
jg
pop
pop
fcomps
daa
sub
inc
js
test
sub
mov
mov
xchg
xchg
jbe
into
cwtl
lret
loopne
push
or
sbb
and
adc
in
fwait
out
das
add
pusha
sub
sub
mov
fistps
rclb
push
in
adc
cmp
pop
test
sbb
push
mov
ja
xor
push
ljmp
fdivp
dec
shrl
ds
lret
out
cs
xlat
and
stos
sbb
jecxz
dec
jge
scas
mov
or
psllq
sub
xchg
jg
or
mov
or
sarl
lds
push
push
fistl
js
test
das
popf
mov
inc
adc
lahf
cltd
les
xor
stos
xchg
mov
jnp
fisttpl
shlb
sbb
dec
popa
xchg
xchg
mov
dec
lds
adc
inc
jecxz
mov
movsb
mov
scas
cmp
mov
push
out
push
repz
cmp
xlat
int
jmp
jae
dec
or
pop
dec
xorl
repnz
ljmp
leave
or
xchg
shrl
sbb
cmpsb
loope
inc
cli
jae
xchg
divb
out
lods
inc
cwtl
xchg
imul
fisubrl
test
fimull
xchg
mov
mov
aad
lods
in
cs
and
arpl
lret
xchg
shrb
mov
sub
pop
push
loop
scas
cmpsl
xor
scas
cmp
dec
xchg
fs
xchg
dec
mov
insl
sbb
xchg
xchg
subl
arpl
andb
insl
push
or
mov
add
adc
dec
cmp
xor
mov
add
lcall
ret
fsubrl
and
bound
mov
and
cmpsl
cmp
loope
aam
dec
leave
dec
rol
cmp
je
mov
sarl
ja
and
data16
or
dec
dec
fistps
sub
inc
jmp
fdivrs
popf
rorl
pop
out
cmc
into
cld
testb
rol
dec
ret
add
adc
cmp
aas
ja
jo
push
int3
dec
or
jnp
cli
pop
sti
dec
movsl
push
push
add
mov
movsl
test
int3
jle
pop
int
push
xor
lock
les
int
dec
xorl
lcall
stos
in
jnp
cmp
and
adc
xor
daa
dec
jmp
push
in
mov
cmp
negb
mulb
test
mov
pop
inc
iret
mov
cld
ds
add
sbb
or
pop
clc
sub
mov
jb
out
and
clc
xor
repnz
lea
inc
hlt
pop
cmpsl
mov
and
negb
sarb
lcall
and
sbb
scas
mov
mov
inc
push
or
or
fsubrs
jnp
loopne
sbb
push
add
insb
loopne
fwait
sahf
js
mov
aaa
mov
pop
mov
inc
add
loop
sub
cmc
or
test
mov
lods
add
cwtl
mov
stos
inc
das
mov
mov
loop
jg,pn
clc
js
sahf
shlb
xchg
gs
cmp
add
shll
push
jns
loopne
fldenv
imull
dec
mov
lret
int
movsb
sub
jnp
sbb
imulb
fmul
insl
jnp
cmp
pop
mov
pop
mov
jmp
xchg
sub
ja
inc
and
loopne
sahf
mov
outsl
outsb
sub
push
xchg
jno
xchg
out
jne
mov
dec
jmp
ficoml
push
int3
push
or
and
std
sbb
jecxz
add
and
sti
insl
jo
push
outsl
inc
xor
ja
incb
gs
push
mov
movl
dec
push
mov
push
add
push
sub
cmp
xchg
pop
dec
sbb
mov
adc
add
mov
pop
jne
call
std
jb
ret
mov
lretw
sbb
add
or
mov
call
pop
add
out
push
sub
out
and
cmc
cmpsl
sub
xchg
adc
sub
mov
jno
cmp
cmp
cmp
jb
cmp
out
adc
scas
lcall
fcompl
ljmp
cmp
jmp
push
push
cwtl
push
js
scas
pusha
push
dec
insb
xlat
fisubrl
test
jae
xchg
lds
add
enter
xchg
and
sbb
mov
mov
cmp
push
mov
sahf
and
ror
test
lds
es
jns
xor
roll
cmp
or
cmpl
and
inc
leave
mov
fnstsw
mov
mov
mov
jmp
jbe
dec
or
mov
outsl
sbb
dec
add
mov
mov
push
scas
ret
pop
incb
sbb
jp
pop
or
jl
xor
mov
add
push
pop
cmpsb
inc
cmpb
fldt
insb
xchg
jle
int
inc
das
movsb
sbb
fldcw
dec
xchg
and
mov
mov
inc
jae
insl
pop
add
aaa
mov
out
psrld
cmp
aad
in
aad
lods
mov
mov
repnz
mov
sbb
mov
clc
or
pushf
loope
push
fwait
or
mov
outsl
xor
jmp
push
xor
mov
std
iret
xchg
scas
sbb
or
xchg
push
and
sbb
lods
rcrb
xchg
push
imull
mov
push
and
sub
test
jmp
pop
dec
inc
lahf
pop
aad
sbb
rcl
mov
inc
jae
into
or
or
inc
mov
mov
mov
call
sbb
dec
dec
push
jl
in
jl
mov
xchg
popf
lahf
loope
stos
push
cmp
out
out
lods
std
movsb
test
mov
pop
sbb
ret
adc
xchg
mov
push
mov
bound
sub
pop
andl
jne,pn
ret
jb
mov
pop
adc
cs
addr16
push
push
cmp
mov
pop
sahf
and
push
adc
dec
lcall
es
pop
imul
dec
nop
jmp
mov
mov
mov
icebp
imul
daa
imul
sbb
int
js
lds
dec
scas
mov
fisttps
sbb
dec
dec
xchg
xor
shl
fcomps
aad
popa
loope
std
mov
nop
movsl
shll
cli
je
imul
mov
sub
bound
sub
stc
push
cmp
cmc
divl
nop
loope
insb
mov
xor
sub
enter
lret
cmc
xchg
lods
sbbb
and
andb
and
nop
pop
fisttpll
sub
xchg
xor
add
xor
mov
incl
pop
or
sub
push
std
clc
shl
nop
or
ljmpw
dec
pop
jp
test
das
in
mov
test
xor
je
inc
scas
rclb
xchg
es
mov
jbe
hlt
xorb
push
fucomip
cmpl
mov
fwait
jecxz
call
fimuls
pop
add
stc
mov
scas
push
push
imul
xor
cmpsl
stos
in
dec
inc
pop
inc
addr16
movsb
jge
lock
and
pop
movsb
or
mov
test
pop
xorb
mov
jo
mov
imul
or
imull
outsl
aad
or
cltd
dec
test
jp
mov
inc
mov
mov
push
jns
jb
or
sub
loop
jbe
test
clc
inc
jno
inc
sub
jno
or
mov
mov
test
push
or
roll
in
push
adc
iret
sub
leave
dec
sub
sbb
insb
jmp
xchg
into
cs
mov
inc
les
or
jno
inc
and
pop
xchg
add
testb
aas
aas
jl
add
ljmp
and
and
cmp
push
xor
mov
mov
aas
test
nop
inc
xchg
pop
or
gs
push
subb
into
and
lahf
je
insb
jg
jmp
and
inc
or
in
bound
popl
jbe
or
movb
popa
std
xlat
jecxz
ljmp
cmpsl
adc
out
sbbb
mov
lods
sub
fstl
mov
inc
fcompl
divb
out
mov
or
mov
push
fbstp
dec
lret
mov
jno
mov
mov
xchg
mov
or
sti
shl
xlat
insb
inc
cmp
rclb
call
jns
xor
dec
push
jmp
aaa
or
inc
je
adc
mov
add
adc
movsl
rcrb
out
aam
inc
fists
adc
jbe
push
fadds
cmc
sub
sahf
int3
scas
xchg
fdivrs
repz
xor
fistpl
int3
lea
clc
pop
das
and
mov
push
sub
xchg
dec
mov
sbb
imul
cmpsl
fidivrl
test
popf
stc
push
xchg
movsl
in
bound
fs
jno
cmp
lods
movsl
out
mov
sub
sbb
push
pusha
inc
icebp
cli
mov
cmpb
int
rclb
call
or
pop
mov
xchg
add
push
mov
cmp
pop
sbbb
pushf
push
pop
sbb
cmpsl
lods
push
fldt
addr16
mov
fs
push
fcmovnbe
je
sub
stos
jmp
aas
pusha
mov
mov
sbb
mov
ret
test
and
in
repnz
inc
stos
js
jecxz
movsb
lods
lahf
and
test
std
mov
jl
movsb
jo
sti
rcrb
iret
adcb
and
insl
or
jecxz
cmc
dec
add
cmp
aas
inc
dec
cwtl
insl
insb
mov
fwait
imul
pusha
in
outsl
pop
pop
repnz
push
out
pop
stos
out
push
adcb
sub
push
mov
aaa
add
mov
cmp
cmp
xor
dec
loope
sti
aam
and
xchg
int
inc
popf
lock
pop
push
sub
push
jp
out
popf
dec
cld
pop
fucomp
fwait
std
inc
jmp
add
xchg
rcrl
push
mov
mov
jb
jne
and
mov
into
push
jae
cmp
adc
adc
cmp
fcoms
imul
sub
rolb
popa
add
jo
loopne
pop
movsb
mov
movsb
outsl
mov
int
xor
fldl
enter
mov
push
lock
fiadds
rorb
jecxz
sarb
xor
push
sbb
sub
fwait
hlt
mov
push
pop
aam
pop
aad
mov
mov
or
and
pop
dec
xchg
pop
mov
test
das
and
sarl
pop
loope
pop
cmpsl
out
imul
lcall
push
xchg
hlt
xchg
sbb
adc
adc
test
shrb
pop
sahf
inc
xor
paddusw
or
movsl
cmp
adc
das
mov
jge
fwait
sarl
ficoml
int
stos
iret
and
cwtl
repnz
jecxz
inc
out
mov
pop
dec
test
repnz
sbb
xor
hlt
mov
add
movsb
xor
jo
mov
mov
pushf
sbb
inc
data16
aam
out
scas
add
fwait
mov
adc
sti
mov
fsubl
in
inc
jnp
push
negl
jle
and
or
lds
test
adc
fildll
dec
loop
sbb
pop
inc
mov
xchg
sbb
pop
jecxz
js
fcompl
rorl
repnz
inc
inc
int3
fisubs
xor
rcrl
dec
jmp
out
outsl
cltd
into
movsb
lcall
jno
pop
test
mov
icebp
dec
or
aam
mov
mov
test
xor
lahf
mov
pop
push
aas
imul
orl
sbb
sub
push
gs
xor
push
gs
out
adc
shrb
push
push
dec
xchg
fldenv
mov
jns
insb
pop
cwtl
pop
bound
sub
push
lcall
outsb
jne
pop
cmp
std
fsubs
fwait
jns
mov
and
testl
mov
bound
stos
std
enter
xor
push
sbb
pop
pop
mov
dec
inc
addl
inc
xchg
mov
scas
pop
add
fisubrs
xchg
mov
sbb
dec
inc
stc
lock
add
int3
jno
jne
push
in
nop
into
cmp
arpl
pop
out
hlt
repz
or
xor
mov
pop
inc
test
loope
jp
sub
jbe
cmp
sbb
mov
jns
ljmp
mov
loop
out
ss
jo
mov
call
sbb
leave
in
adc
stc
rol
negl
fs
sti
pop
jecxz
sbb
jne
cmpsb
pop
lods
outsl
add
mov
push
inc
or
push
ja
push
or
dec
cmp
and
pop
push
addr16
je
dec
push
push
cmc
mov
ds
out
loop
mov
leave
inc
xor
movsb
add
adc
cmp
sti
ja
inc
mov
mov
or
or
push
add
call
pop
adc
dec
xor
jne
dec
call
cmpsb
mov
or
scas
fwait
xchg
test
bound
push
test
or
es
sbb
sahf
mov
jl
pop
cmp
pop
nop
lods
mov
xor
int3
jp
daa
xor
fldt
xchg
pushf
int
dec
mov
inc
sub
je
ret
mov
lret
in
or
popf
fcoms
repnz
fnstsw
ds
jge
mov
pop
into
or
rolb
sbb
adc
pushf
xchg
icebp
sahf
lcall
repnz
std
lea
fwait
test
jl
xchg
or
sub
fwait
inc
jno
push
or
adc
movsl
add
aam
push
out
push
test
test
sub
push
test
fistps
repz
or
add
inc
ljmp
jbe
jge
mov
jmp
and
jae
adc
and
arpl
sbb
dec
dec
inc
outsb
test
cli
and
jb
icebp
pop
sar
jge
cmp
cmp
mov
dec
ss
dec
shlb
inc
jmp
and
cmp
iret
insb
fiadds
push
in
ret
jmp
jmp
jbe
adc
in
jo
xor
jmp
roll
cld
es
aas
xor
inc
adc
clc
inc
adc
ficoms
mov
xor
inc
orl
push
push
enter
daa
xchg
adc
lret
lret
mov
lock
jg
out
hlt
jp
daa
in
adc
jbe
adc
dec
in
mov
pop
jae
mov
or
xchg
mov
mov
fstl
cmp
jp
fistpl
movsl
push
dec
jno
cmpsb
aad
adc
notb
mov
jo
cmpsl
xchg
push
adc
movsb
add
pop
jmp
daa
push
sbb
sub
jl
sahf
adc
and
scas
andl
dec
jae
insb
mov
insb
cmpsl
outsl
mov
fcomps
stos
push
outsl
aaa
stos
mov
loope
dec
imul
cmpsb
mov
sti
cmpsl
inc
out
stos
cwtl
out
sub
jecxz
iret
lods
lea
mov
jp
mov
sbb
and
mov
cmp
dec
sub
std
pop
test
leave
mov
stos
mov
fstpt
cs
movsb
sbb
in
and
or
xchg
xchg
mov
jno
push
jae
jp
call
js
outsl
or
and
out
test
lret
adc
sbb
mov
popf
scas
dec
jmp
fsubrl
sbb
enter
fwait
jle
rorl
add
mov
andl
test
rorl
mov
xchg
ror
lods
jmp
sub
loopne
outsl
cmp
arpl
loop
and
out
cmp
aad
hlt
inc
cmp
je
rep
in
dec
mov
jle
xchg
out
pop
sbb
in
cli
nop
mov
add
rorb
push
dec
xor
fnstsw
sub
dec
popa
mov
nop
fiadds
cmp
out
xlat
inc
lahf
sub
mov
dec
xor
data16
movsb
in
int
pop
in
jmp
in
jg
lret
sub
fcoms
sti
adc
nop
addr16
sub
inc
icebp
push
mov
shll
add
mov
or
xchg
inc
dec
fadd
rorl
lret
xlat
test
sbb
in
bnd
cmp
or
and
fcoms
push
out
xchg
and
mov
sti
imul
and
xchg
xchg
cmp
and
mov
xor
jo
xor
addr16
jb
sub
pop
std
lods
add
mov
inc
cmp
cmc
push
mov
xor
addb
icebp
cmp
xor
push
xor
lcall
fldl
into
adc
sub
mov
xor
icebp
js
xchg
insl
jecxz
rclb
mov
ljmp
sbb
rolb
sbb
mov
popf
cli
pop
adc
das
fisttps
cltd
inc
repz
popf
and
mov
std
fisubs
add
repz
push
push
xlat
shll
idivb
push
les
in
shrb
push
cmpsl
cmp
in
jle
fcomps
adc
lahf
lret
dec
xchg
add
lcall
daa
cmp
pop
in
insb
or
mov
lahf
sbbb
test
inc
jno
das
les
test
imul
shlb
lea
sbb
stc
xchg
mov
xchg
dec
stos
sub
adc
inc
push
test
mov
jg
xacquire
cmp
sahf
mov
fwait
shl
sub
daa
nop
outsb
cmp
fs
push
sbb
dec
xchg
test
cmp
fbld
sbb
or
cmp
imul
insl
and
lods
insb
dec
rcr
and
js
push
dec
push
add
shl
popa
rorb
push
sti
and
pop
gs
in
dec
das
movsb
stos
arpl
jns
pop
mov
sbb
cmp
cmp
mov
adc
cmpsl
bound
nop
add
scas
stos
adc
mov
inc
or
or
fsubs
les
sbb
loopne
cmp
mov
mov
sahf
ljmp
mov
scas
add
repz
lods
mov
es
pop
outsb
push
insl
aas
mov
adc
inc
mov
or
mov
cmp
out
mov
push
pop
xor
xor
repz
movsl
inc
push
pop
mov
add
cmpsl
loop
icebp
or
mov
xchg
xor
imul
jg
pop
es
adc
and
mov
gs
aam
test
out
mov
push
or
cmp
mov
in
mov
xchg
in
push
xchg
push
loopne
jne
mov
cwtl
mov
dec
pop
incl
push
and
rol
mov
dec
pushf
aam
aas
shr
fwait
adc
lahf
push
xlat
sbb
push
sbb
jmp
cmc
in
idivl
cmp
dec
repnz
stc
jb
sbb
xor
mov
push
xor
pop
cmpsb
stos
and
jae
test
adc
outsl
xlat
add
mov
sub
mov
push
cmp
xchg
jle
fadd
mov
push
inc
push
mov
frstor
movsl
jbe
pop
jmp
sbb
jbe
mov
xchg
xlat
iret
sbb
in
mov
pop
xchg
push
jge
js
adc
imul
adc
xchg
loopne
jl
and
push
mov
dec
xlat
mov
push
insb
test
or
mov
xor
loopne
sub
push
cmpsb
sub
cld
lcall
imul
lea
pop
pop
in
cmpsl
mov
xor
or
xchg
mov
jne
ret
into
ror
movsl
clc
cmp
inc
mov
inc
jg
outsl
cmp
push
repz
call
xchg
push
lods
xor
cmp
in
inc
push
lock
jne
xchg
in
pop
je
xor
cmp
cmp
or
fdivrl
cltd
sub
dec
lods
cmp
mov
sbb
jnp
call
push
loopne
xchg
pusha
sub
jo
ljmp
sbb
rcll
fldl
nop
stos
pop
or
out
dec
sbb
xchg
mov
cmp
push
inc
jb
sbb
inc
jns
cmp
cs
xchg
cli
fimull
push
clc
scas
or
cmp
ret
testl
ljmp
add
loopne
stos
repz
mov
adc
sti
cmpsl
mov
out
xchg
cmp
mov
aaa
mov
jae
les
xchg
or
mov
aad
jmp
lea
insb
pop
xorl
dec
outsb
ret
dec
inc
imul
jb
stos
push
jmp
repnz
dec
test
dec
sbb
cmp
ret
jle
mov
jns
xchg
ja
daa
call
push
or
insl
cwtl
add
enter
push
or
stc
lahf
mov
cmp
sub
adc
dec
adc
aas
push
mov
fstps
push
add
pop
jbe
jnp
daa
jge
mov
sbb
mov
jns
push
xchg
adc
or
sbb
jle
dec
xchg
out
lea
fxch
sub
insl
pop
int3
out
mov
cmp
and
fcoms
nop
jecxz
loopne
pop
inc
adc
stos
mov
inc
insb
cltd
mov
or
mov
sbb
mov
ret
cwtl
cmp
cmpsb
xorb
cld
addr16
stos
movsb
fwait
stc
inc
std
mov
test
rcrb
xchg
cmp
aaa
mov
in
lret
inc
imul
insl
call
shll
dec
arpl
dec
cmc
andb
addr16
mov
inc
int
dec
int3
aad
loope
mov
or
idiv
sbbl
sahf
sub
or
push
aad
les
fisttpl
in
push
jns
outsb
ficompl
in
cmp
mov
imul
and
out
mov
jge
loopne
lret
fidivl
jb
imul
test
in
mov
arpl
xchg
push
idivl
mov
add
inc
daa
ja
inc
adc
je
clc
inc
inc
leave
add
mov
push
movsb
push
cwtl
push
or
xlat
push
sbb
or
movsb
testb
es
xchg
cs
jecxz
xor
stos
insb
iret
aam
call
out
pop
insl
mov
enter
int3
lock
out
les
mov
xchg
pop
test
out
hlt
lock
dec
push
cs
test
push
cmc
inc
jmp
data16
imul
negl
in
add
mov
orb
rorb
sub
addr16
inc
sbb
mov
enter
push
jge
jp
xchg
dec
orl
stos
fcoml
inc
loope
push
sub
std
add
outsb
xchg
xor
mov
jne
lds
jecxz
subb
push
push
cwtl
stos
mov
sbb
mov
repnz
imul
pop
jbe
jg
or
jp
sub
outsl
add
pop
add
cmp
xchg
inc
jg
js
or
inc
ficoml
in
in
dec
pushf
push
mov
idivl
mov
mov
mov
pusha
xor
popf
lods
stos
jns
and
jne
shlb
sbb
and
inc
jne
or
lods
in
imul
sti
mov
int
push
and
xor
push
adc
jge
out
ds
and
jmp
ret
dec
cmp
cmc
jecxz
jl
es
movsl
jmp
mov
adc
push
pushf
xchg
repnz
sub
in
cmpsb
into
popa
add
mov
bound
add
arpl
jne
and
pop
outsb
push
scas
jae
enter
jp
shlb
fbld
ror
rcrl
cmp
xlat
push
xor
cmp
dec
into
fldcw
xor
out
fiaddl
jno
and
movd
aaa
loopne
or
lcall
pop
or
pushf
aas
ret
lret
outsb
jmp
mov
cmp
mov
xor
jo
sub
pusha
and
outsb
xchg
dec
jg
jb
or
mov
rcrl
fmuls
test
lea
push
incl
fimull
mov
push
fisubrs
xchg
jb
or
adc
or
movsl
or
or
test
in
clc
insl
test
jne
pop
add
test
decb
or
cmp
sbb
lret
jg
and
in
repz
inc
xchg
fisttpll
decb
repnz
inc
orb
imul
cmpsl
test
xchg
or
leave
mov
add
mov
divb
xchg
mov
cwtl
jecxz
jns
jmp
mov
cmp
cmpsb
sbb
mov
mov
inc
sbb
dec
popa
push
xchg
pop
mov
push
push
push
mov
jge
jbe
jo
fiaddl
pop
dec
sub
adc
imul
sbb
push
xchg
xchg
loopne
jge
adc
loopne
mov
jle
xchg
push
movsb
cmp
cmp
cmp
or
call
mov
push
inc
das
stos
jmp
lcall
or
movsb
inc
inc
adc
dec
xor
sub
sub
xchg
jmp
jnp
or
pop
imul
or
pop
sbb
sbb
mov
jecxz
mov
mov
xorb
cltd
test
nop
mov
push
and
leave
scas
sub
insb
das
sarl
lahf
cmp
and
cltd
iret
xchg
push
sub
pusha
call
mov
ljmp
orb
mov
inc
xor
mov
scas
lcall
sbb
orl
out
and
push
mov
rcrb
or
cmp
test
jmp
loope
push
das
enter
mov
inc
mov
dec
enter
mov
or
test
sbb
pop
sbb
push
mov
and
jl
xor
test
or
sub
fstpt
pop
sub
xlat
sbb
dec
lods
pop
mov
roll
std
outsb
jnp
or
loope
out
scas
jo
test
sbb
push
adc
or
das
jae
xorl
lds
pop
enter
les
aam
inc
jno
add
dec
sbb
movsb
dec
cltd
pop
pop
jo
and
cli
push
and
mov
cmp
ret
in
cmpsb
mov
adcl
jo
mov
mov
mov
std
xchg
leave
push
fcompl
inc
sbb
roll
into
push
loop
mov
out
adc
shlb
xchg
sahf
sahf
or
adc
lea
in
movsb
outsb
mov
leave
test
testl
popf
push
sub
test
outsb
sarb
push
mov
arpl
scas
dec
into
push
ficomps
aas
idivl
mov
cwtl
test
mov
orb
inc
cmp
lahf
mov
lods
xchg
incb
mov
loope
xchg
mov
scas
or
adc
stos
test
sti
hlt
incb
imul
add
cmpsl
rcrl
lock
addps
loop
lret
test
mov
aam
xlat
mov
mov
or
jle
nop
mov
adcb
enter
frstor
cmp
cmp
sbb
pop
stos
add
sbb
ss
gs
mov
adc
fdivs
sahf
insb
or
inc
pop
sahf
adcb
mov
sbb
imul
movsl
and
jns
hlt
add
mov
lods
adc
repnz
les
mov
in
sarl
shlb
adc
and
fstps
nop
ja
in
call
ficompl
mov
mov
push
mov
cmpxchg
fldcw
inc
sbb
xor
lret
shll
fbld
mov
add
mov
cmp
cld
test
aaa
in
pop
insb
inc
xchg
and
test
shlb
ficompl
inc
gs
sti
push
rcl
je
ret
push
mov
insl
je
in
xor
mov
mov
lahf
es
jle
adc
sub
jae
mov
lea
pop
jl
ret
xchg
jge
fs
call
pop
sbb
lahf
add
mov
cmp
dec
cs
cmp
mov
sti
movsb
jae
js
in
add
movsb
rorb
push
std
and
xlat
pushf
rol
push
sub
xchg
das
pop
adc
negb
xor
movsb
pusha
push
or
lods
imul
push
jge
xor
sbb
cmp
icebp
sbb
mov
mov
mov
lods
fs
mov
hlt
sub
xor
sub
repnz
push
bound
mov
blsic
ljmp
data16
pop
out
insl
mov
into
sbb
filds
mov
je
xchg
ljmp
sub
out
mov
pusha
adc
sub
mov
sbb
pop
inc
loop
leave
lods
add
jnp
push
dec
dec
sbb
movsl
div
out
out
inc
inc
lret
push
cmp
mov
insb
inc
inc
scas
push
stos
out
enter
into
lods
adc
push
imul
je
lods
ljmp
popf
aas
scas
mov
je
into
arpl
fxch
push
imul
cmp
popa
xor
into
js
sbb
ljmp
js
fwait
arpl
movsl
jle
pop
adc
sbb
ljmp
in
test
movsl
pop
inc
jecxz
stc
or
aam
jl
jnp
adc
shlb
push
mov
mov
test
js
dec
std
lret
add
adc
dec
subb
mov
test
idivl
pushl
or
mov
sub
enter
imul
stc
ja
in
ja
pusha
mov
lret
xor
inc
dec
mov
seta
sbb
test
leave
lret
stc
lcall
push
out
pop
cli
sbb
std
jg
mov
sar
jge
adc
or
pop
sahf
adc
in
gs
mov
imul
out
xlat
rorl
cmp
push
mov
out
fnstsw
and
pop
inc
mov
rcl
cwtl
mov
in
push
and
sbb
push
fisubrl
cmp
push
sbb
cmc
inc
mov
shl
pushf
test
stc
fwait
lods
mov
push
sub
call
enter
les
push
mov
jge
and
out
xchg
inc
xchg
jp
movsb
dec
in
pop
pop
pop
pop
mov
add
mov
mov
dec
adc
xorb
out
mov
add
jne
shrl
mov
mov
lock
mov
repnz
xor
and
lret
cmpsl
jbe
arpl
push
int
adc
fisttps
pop
jle
fidivrl
jmp
pop
inc
mov
fwait
scas
int
fmulp
push
xor
xorl
scas
jno
es
mov
dec
xor
and
adc
ret
dec
jne
lret
lret
dec
imul
pop
add
and
cmp
int3
sahf
jno
fsubs
loopne
sahf
xor
jbe
fdivs
or
add
mov
jge
sub
daa
mov
mov
or
pop
xor
fwait
add
data16
scas
sbb
cltd
sbb
pushf
imul
push
cs
xchg
icebp
sahf
push
lea
jb
call
push
cmpsl
lcall
mov
loope
das
lahf
cld
push
call
ror
aaa
jp
scas
out
lods
arpl
inc
jns
nop
es
pop
insl
sbb
push
add
sti
stos
adc
orb
push
stc
inc
adc
rclb
call
aam
popf
daa
loope
cltd
cmpsl
add
outsb
jg
mov
jbe
aas
jle
cmpsl
bound
jae
popf
and
pop
pop
jle
lods
push
movsl
daa
jno
dec
dec
psubusb
pusha
jl
jae
leave
add
aaa
dec
jb
popa
adc
stc
cwtl
mov
push
movsl
add
xchg
jne
sub
push
jg
sbb
xchg
ss
jae
xchg
dec
out
push
push
daa
std
std
mov
scas
mov
inc
pop
xor
or
inc
call
out
pop
jne
addl
dec
fdivr
jo
xchg
jns
or
xlat
xchg
test
xchg
cmpsb
or
sbb
hlt
mov
xor
fildll
sbb
pop
es
sbb
insb
xchg
sbb
dec
add
test
mov
in
add
adc
cwtl
adc
mov
adc
mov
test
sub
and
sbb
rolb
fsubrs
xor
cmp
les
ljmp
mov
mov
sub
mov
or
inc
cmp
pusha
std
ret
or
pop
pop
lea
pop
pop
sub
idivb
sub
mov
push
cmp
sbb
fists
add
mov
aad
push
arpl
test
jmp
xchg
fcmovb
and
mov
sbb
inc
mov
lea
mov
push
clc
sub
jne
pop
in
dec
jno
jb
into
outsl
cmp
lret
inc
in
pop
cmpsl
mov
or
test
push
outsb
pop
dec
jle
rcll
pop
pop
arpl
mov
jle
pop
aaa
repz
adc
cwtl
mov
push
mov
flds
lahf
jle
push
adc
sbb
xor
adc
adcb
stos
fs
aaa
mov
loope
xchg
mov
sbbb
push
sub
mov
subl
push
push
pop
call
inc
fwait
pushf
call
rorb
fwait
rorl
dec
push
adc
xor
push
xlat
out
mov
and
or
arpl
pop
out
jne
pop
lds
or
adc
gs
jo
adc
pop
xchg
ss
ss
pop
test
insl
adc
fstpt
xchg
iret
jge
clc
lea
lret
cli
push
shrl
add
ss
xchg
mov
fs
rcr
inc
pop
fnsave
dec
push
mov
in
mov
jns
jp
leave
jmp
push
cwtl
xchg
shlb
mov
lods
shlb
ja
cmp
test
add
push
mov
faddl
loope
cmp
loopne
aaa
dec
cld
inc
ret
fcoms
pop
push
xchg
pop
xchg
outsl
mov
or
mov
xchg
adc
and
sahf
pop
sbb
rol
data16
jmp
mov
mov
scas
push
fildl
mov
faddp
cmp
imul
stos
pop
xchg
pop
pushf
je
push
cmp
loopne
jae
push
mov
and
addb
arpl
lret
mul
outsb
loop
xchg
or
and
aaa
adc
addr16
sarb
aam
sbb
adc
adc
out
mov
or
xchg
pop
and
movsb
push
or
out
add
out
inc
imulb
lods
pop
xor
lock
mov
sub
add
pop
jmp
pop
out
test
cli
mov
xchg
jae
mov
push
scas
dec
cli
mov
inc
sub
leave
ds
push
push
sub
jle
pop
sbbl
call
and
dec
fiadds
sahf
and
int
adc
aas
es
insl
fbstp
xchg
cmp
or
addl
icebp
push
insb
lods
jecxz
mov
sti
js
decl
in
inc
sbb
xchg
ja
lods
movsb
mov
pop
add
pop
and
jno
jo
mov
dec
cmp
adc
fwait
cmp
mov
int
dec
and
ljmp
divl
lret
and
fisttpll
fsubrp
stos
lock
cmp
je
test
add
mov
cmp
cmp
pop
mov
add
jecxz
movsb
pop
leave
jg
out
add
data16
dec
push
pop
or
insl
adc
aas
mov
jnp
negb
movsb
ljmp
mov
mov
push
mov
add
loope
leave
xchg
in
fstp
je
cs
pop
fdivrs
fcmove
sbb
jae
cmc
std
jl
pop
jae
mov
push
and
xchg
in
fldl
dec
out
rcl
fldl
dec
or
mov
je
mov
cs
cld
push
xorl
loopne
nop
dec
pop
jge
fwait
insb
cmc
push
out
inc
into
sub
call
push
and
inc
roll
enter
fdivrl
ret
push
pusha
sub
ss
out
mov
mov
js
clc
fisttpl
lret
add
add
fimull
inc
push
and
rcrl
mov
incb
rclb
xchg
lret
aam
ljmp
push
cmpl
stc
push
les
jle
pusha
xchg
iret
sub
jne
in
pop
jg
mov
iret
sbb
jle
xchg
rolb
lds
and
xchg
stc
cltd
push
je
loop
pop
cmpl
mov
shrb
pop
sbb
xchg
iret
orb
les
mov
xchg
jb
lcall
push
xor
inc
nop
je
jbe
cmp
fisubrs
cwtl
mov
mov
loopne
inc
cld
fisttpl
syscall
xchg
mov
daa
xor
mov
fwait
icebp
fisttpll
popa
ret
cld
loope
dec
lock
fisubl
imul
mov
add
hlt
jae
add
mov
and
rorl
test
lret
mov
inc
cmove
cli
fwait
imul
lock
sbb
jo
pushf
pop
test
insl
out
xlat
loop
mov
lahf
cwtl
xchg
xchg
mov
push
movsb
xchg
mov
push
add
out
pusha
xchg
data16
sub
jmp
or
cmp
daa
push
cltd
jmp
push
cmpsb
jnp
xchg
dec
push
cmp
or
jo
inc
mov
enter
in
push
in
mov
ss
and
jmp
andb
add
jo
mov
in
insl
push
mov
xor
or
cmp
movsl
lcall
xchg
mov
add
sti
arpl
fbstp
jge
xchg
shrl
stc
mov
push
jg
mov
loope
jns
add
xchg
repz
jns
or
stos
dec
divl
out
fldcw
adc
aad
loope
sarb
andb
loop
out
add
adc
sbb
test
inc
dec
cld
out
push
mov
push
scas
pop
xchg
je
cmp
jne
and
lds
pop
lods
sahf
aam
int3
push
pop
xor
cld
sub
popa
testl
in
dec
or
cmp
inc
lds
add
push
bound
je
lahf
lret
out
or
pop
inc
bound
mov
fldenv
mov
inc
mov
mov
fcoms
add
sub
leave
out
sub
fwait
lds
xor
mov
test
cmp
arpl
push
push
sub
sub
mov
mov
pushf
mov
test
fwait
cs
sti
sub
cmp
bound
lds
dec
jmp
cmp
shll
andb
or
ljmp
icebp
xorl
pop
rcrl
cmp
inc
scas
loope
cmc
cmpsb
cwtl
lea
xor
sbbb
pop
test
mov
sbb
push
jo
repz
jne
ss
adc
stos
mov
adc
out
ds
dec
mov
xchg
mov
adc
cltd
jb
mov
jg
ret
les
fmull
loop
stc
sbb
jge
cli
stc
lods
pop
aaa
cmp
jns
cltd
popa
sbb
jmp
mov
inc
icebp
sub
add
or
cmp
inc
outsb
dec
inc
jo
popf
ja
xchg
xchg
call
add
in
xchg
or
out
xorb
xor
addr16
jecxz
arpl
cltd
std
test
mov
push
mov
outsb
mul
mov
cmp
out
fwait
addb
inc
xchg
xchg
mov
outsb
rdtsc
push
and
ljmp
ret
or
mov
test
mov
fdivr
testb
enter
xor
cli
push
sbb
out
xchg
jecxz
loopne
mov
cmp
or
mov
inc
xor
dec
enter
jecxz
inc
push
pop
clc
cli
adc
cli
aad
in
fucomp
pushl
lods
ret
outsl
cmpb
jae
mov
sbb
sub
jne
arpl
cmp
popa
fisubs
jge
lret
movsb
in
sub
out
mov
inc
xchg
iret
hlt
mov
pop
dec
fs
jmp
mov
shll
in
ret
data16
dec
mov
cltd
sahf
dec
jge
rcrb
sahf
mov
fsubrl
mov
stc
movsb
das
mov
rcl
sarb
sarl
or
xchg
out
sub
icebp
fucom
cltd
cmpsl
jb
cmpsb
xor
mov
fs
or
test
test
xchg
aaa
dec
shll
mov
or
cmp
test
jo
add
pop
lods
dec
call
mov
xor
cmpsb
xlat
cld
pop
int3
test
test
inc
clc
je
enter
js
pop
les
mov
idivl
xchg
add
lahf
repz
test
out
cmp
bound
jno
jle
and
xor
pop
push
sub
push
outsb
add
sbb
inc
hlt
gs
subb
popa
cmpsb
add
lds
mov
sbb
push
cli
xchg
shrb
int
xor
insl
test
fsubrl
movl
in
pushf
repz
fldt
push
dec
add
aad
sub
add
pcmpgtb
mov
clc
xlat
jb
xchg
clc
test
cli
cmp
daa
mov
jbe
pop
movsb
movsl
imul
cld
popa
in
push
inc
testl
adc
xor
pop
mov
ret
mov
lock
mov
jb
aam
mov
icebp
or
jl
loop
mov
aad
push
ret
outsb
repnz
addb
dec
lock
lods
push
xor
xchg
testl
int
push
adc
jge
jb
test
mov
das
loope
xchg
icebp
leave
aad
dec
js
xor
xchg
adc
or
cmc
ljmp
lods
mov
sub
jmp
jecxz
outsb
out
lock
scas
mov
push
cs
pop
int
imul
loope
sub
in
or
mov
fistps
or
adc
or
leave
or
decb
pop
outsb
push
fwait
out
lea
in
loop
push
je
dec
rclb
push
arpl
xor
mov
scas
mov
pop
jns
push
mov
mov
mov
push
mov
aaa
or
push
je
jo
ss
xlat
pop
and
or
sbbb
scas
lahf
test
mov
cmc
movsl
fildl
aam
inc
dec
ss
push
and
sbb
xor
and
inc
mov
mov
add
pop
das
fcoml
and
sub
fs
add
xor
push
push
lods
fiaddl
sub
and
jne
scas
xchg
mov
in
jnp
mull
call
xchg
es
dec
inc
lods
sub
nop
add
add
sub
jmp
adc
arpl
sbb
xor
dec
cs
cli
dec
stc
sahf
scas
lcall
ja
inc
mov
add
xchg
dec
pop
int3
or
mov
mov
cmpsb
adc
lods
ret
adc
int
dec
dec
push
xchg
test
inc
orb
adcb
inc
mov
jns
xchg
mov
sbb
inc
mov
jo
cld
fstp
cmc
mov
in
push
xchg
xchg
sub
enter
subb
mov
push
in
adc
mov
aas
cld
push
lds
daa
or
mov
jl
call
scas
insb
xchg
in
jle
sbb
jae
jo
pop
out
xchg
je
in
mov
push
lods
in
scas
ss
add
mov
jb
out
add
les
mov
dec
fstps
inc
incl
jb
mov
xor
jns
push
aaa
cmp
pop
pop
xor
aaa
mov
inc
push
popa
add
stos
xchg
addr16
add
mov
jecxz
jns
cmp
fdivrl
je
cmp
test
inc
pop
negl
gs
pshufw
pop
ret
mov
mov
lcall
clc
mov
push
mov
das
pop
repnz
jo
arpl
cmp
mov
stos
xor
loop
ja
out
and
mov
popa
enter
push
mulps
push
adc
mov
mov
xlat
sahf
outsl
dec
sbb
lds
lret
mov
fsts
aad
mov
mov
stos
out
xor
sub
mov
mov
adc
cmp
lods
leave
and
nop
roll
in
loope
imul
jnp
fimuls
lock
scas
filds
lock
movsl
stos
pop
lods
test
sub
es
aas
mov
repz
arpl
inc
fsubrs
in
sbbl
ss
je
lret
adc
ss
scas
call
mov
insl
push
push
faddl
scas
aad
fs
mov
sbbb
inc
cmp
mov
lea
int3
cmpsl
push
mov
inc
cmc
push
dec
out
adcl
js
push
std
mov
in
out
dec
jnp
jbe
push
xchg
imul
out
lods
sub
icebp
xchg
sbb
adc
testb
test
fimuls
out
sahf
xchg
or
in
lock
push
repnz
mov
mov
and
or
pop
cmp
fs
lret
cltd
push
xchg
and
xchg
hlt
mov
incl
mov
scas
dec
and
iret
pop
out
dec
out
loopne
pop
test
out
xchg
shlb
fisubrs
jle
sbb
sub
sarl
jmp
jle
cmpsl
aam
or
call
jmp
adc
inc
mov
add
add
mov
mov
sbb
shll
cmp
mov
pop
mov
inc
xlat
jl
stos
bswap
stc
notb
mov
jg
mov
pop
mov
inc
sub
incb
fsubl
cmp
notl
fsqrt
lods
fisttpl
scas
or
jge
ret
push
roll
out
in
add
addb
sbb
and
xchg
push
mov
xchg
jne
hlt
adc
jle
outsb
out
push
add
mov
dec
psubusw
inc
loopne
out
insl
ret
mov
or
inc
jle
call
inc
push
sarb
scas
inc
test
mov
mov
daa
dec
dec
scas
and
hlt
xchg
push
mov
lods
mov
clc
lds
and
jmp
rorb
into
lods
rcrb
mov
jle
cltd
sbb
or
data16
and
bound
fidivrl
orb
mov
movsl
xchg
movsl
mov
adc
cmp
push
add
in
dec
test
jge
add
push
sar
jp
add
push
xchg
dec
int3
mov
jecxz
push
xor
or
enter
cld
out
cltd
insl
add
arpl
lods
jmp
clc
push
fadd
pop
adcb
add
cmp
aas
sahf
cmp
and
loop
stc
in
dec
ret
xor
fwait
test
xchg
adc
test
cmpsb
dec
daa
clc
out
or
push
pop
imul
and
jle
add
ror
stos
jnp
lret
and
popf
pop
add
sub
jp
mov
pushf
lock
out
push
xchg
dec
loope
dec
bound
cld
cld
inc
xlat
xor
xlat
push
pop
xlat
ret
fcmovne
mov
int3
shl
mov
jle
notb
test
ja
cld
push
push
push
clc
outsb
ja
mov
loop
xchg
jg
jmp
pop
arpl
int3
pop
fs
adcb
sub
out
pop
testb
dec
test
mov
arpl
mov
popf
xor
lods
mov
dec
cmpsl
sbb
adc
rorb
into
push
cmp
mov
outsb
sbbb
mov
and
lds
pop
jns
dec
stos
add
and
pop
lea
pop
popf
or
int3
mov
inc
sub
rolb
pop
mov
je
and
rolb
ret
sti
cmp
xchg
sub
fiadds
cmpl
or
jg
jmp
jo
push
pop
in
or
cmp
add
push
push
sbb
mov
hlt
data16
outsl
sub
pushf
pusha
push
in
push
mov
fsubrs
popl
arpl
pop
cltd
jae
jecxz
push
dec
mov
mov
cwtl
push
jae
outsb
cmp
pop
add
pop
cmp
lret
rorl
push
stc
push
int
xor
cmpsb
or
mov
push
and
addl
iret
add
loop
cli
outsl
xchg
sbb
fs
and
xor
outsb
pop
cs
jp
sbb
add
or
iret
push
dec
out
je
in
sbb
hlt
push
std
fldt
mov
jns
scas
mov
pop
add
sahf
popa
fstpt
sub
loopne
cmpsb
fistl
cld
cmpsl
std
pop
clc
sbb
dec
popf
nop
mov
lock
fsubl
fisubl
pop
cmp
cmp
data16
lret
adc
jae
or
pop
cltd
xor
push
fwait
seto
sub
cs
test
sbb
addr16
notb
cmpsb
fisubl
or
test
neg
jae
xor
jle
sbb
lahf
and
fs
in
sub
fnstsw
loope
repz
jle
out
in
imul
gs
iret
add
pop
xchg
pop
xchg
mov
dec
mov
ficoml
loop
fcomps
jne
movsb
mov
pop
ret
mov
loope
xchg
pop
pop
push
ret
insl
cltd
add
outsb
sub
jnp
mov
cmp
jb
lds
or
pop
push
mov
xchg
shl
std
mov
or
cmp
mov
adc
jl
pop
sbb
imul
mov
test
xchg
xor
push
pop
cmpsb
out
jns
mov
out
pop
jbe
pop
cmpl
xchg
jl
fists
shll
mov
xchg
cmp
mov
jmp
cli
pop
sub
int
and
shrl
icebp
xor
and
fsts
push
and
aad
push
popf
pop
lahf
fiadds
xor
mov
stos
or
xchg
or
scas
test
mov
sub
cmpsb
lret
jg
rorb
dec
neg
xchg
arpl
add
pop
mov
popf
insb
rcl
ret
enter
mov
mov
mov
mov
jne
mov
fiaddl
pushw
pusha
fcom
loop
jns
daa
loop
out
adc
cmp
add
cmp
andb
jns
dec
or
roll
js
xlat
pop
and
pop
push
movsl
out
mov
pop
lea
ja
and
sti
mov
add
aam
testb
cmp
push
clc
loope
add
orb
push
or
fdivrs
xchg
in
leave
lock
adc
enter
add
lret
das
xchg
add
inc
aaa
andl
js
push
mov
loope
sarl
sbb
lea
lods
xor
ret
jg
insl
test
and
inc
pop
sub
sub
jns
movb
hlt
addr16
orl
lods
mov
jle
sbbl
jmp
es
jl
icebp
mov
cmp
jae
icebp
push
mull
fldt
push
aaa
xchg
ss
aad
mov
push
adc
aad
div
loop
add
loop
repz
out
enter
add
inc
inc
pop
jle
push
icebp
add
jne
pop
sbb
fbstp
lods
push
insl
insl
stc
sbb
xor
or
movsl
xorl
cmpl
mov
in
inc
cmpsl
es
mov
es
jge
mov
and
mov
pop
pusha
into
dec
repz
call
loop
mov
leave
inc
les
mov
and
jnp
loopne
add
lret
ljmp
push
mov
cmc
pop
in
pop
js
pop
cwtl
fisubs
movsb
out
and
jg
lods
inc
sub
push
inc
xchg
pop
dec
je
out
outsb
push
dec
mov
pop
pop
ljmp
outsb
sub
rorb
lock
gs
int
cmpb
xor
or
and
lret
inc
inc
inc
xchg
cmc
mov
data16
pop
aad
dec
fucomip
dec
icebp
bound
fisttpll
xchg
icebp
xchg
and
dec
xor
and
or
ss
daa
outsb
leave
bndldx
aam
and
add
xchg
and
cltd
sahf
and
aad
addl
adc
arpl
gs
stos
stos
jne
sbb
push
inc
nop
jno
jge
jne
pop
popf
pop
jmp
ds
sahf
adc
orb
js
xor
dec
xor
adc
adc
push
push
pushf
add
fcoml
push
sarb
inc
inc
cmp
dec
movsb
std
adc
int
xlat
dec
pop
icebp
inc
mov
sbb
ljmp
je
jle
loop
shlb
jl
sbb
cmpl
bound
cmp
sahf
ror
aad
hlt
prefetcht2
out
mov
fs
and
hlt
cmp
daa
aas
sbb
add
imul
int3
aaa
pop
cld
or
lock
scas
or
dec
jbe
push
cmp
xchg
mov
imul
cli
aaa
mov
int3
jo
or
jmp
jo
cs
mov
push
or
ds
mov
stc
ret
ja
pop
std
sti
push
push
fdivs
arpl
int3
fildl
fdiv
push
adc
out
push
sbb
shrl
push
mov
xchg
lahf
xorl
sub
mov
test
add
xor
arpl
mov
cmpsl
mov
insl
sub
jbe
cmp
mov
mov
mov
pusha
or
mov
jno
aaa
in
push
sbbb
jl
inc
cld
mov
in
lds
push
fs
dec
subl
test
xor
or
jmp
fldcw
jno
movsb
adc
xchg
in
push
adc
sbb
nop
imul
fidivs
js
ja
adc
pop
shll
fld
mov
nop
mov
jmp
xchg
pop
mov
gs
sub
cmp
mov
adc
cmp
lods
sti
in
cli
push
insl
and
push
push
nop
mov
cs
hlt
lea
repz
mov
push
xor
test
std
cmovnp
dec
add
call
mov
jecxz
aas
lds
fwait
lods
mov
fld
push
add
inc
fwait
jne
sub
std
cld
test
rclb
ljmp
jo
dec
pop
adc
sarl
lret
fwait
outsb
xchg
insl
je
mov
jns
cmp
fsqrt
bound
cmc
mov
outsb
adc
fdivrl
jl
cmp
ret
jne
cmc
fs
pop
and
test
pop
cmc
negl
xchg
jnp
int3
or
enter
cmpsl
xor
inc
insb
ficoms
test
mov
inc
or
push
adc
cwtl
loop
push
movsl
sbb
movsl
stc
xchg
repnz
or
mov
lahf
jge
insb
jo
fnsave
jl
push
push
call
cs
xchg
arpl
push
xor
xor
pop
mov
inc
dec
mov
loope
sub
stos
jns
test
lahf
adc
pop
push
adc
inc
call
cmpsb
xchg
shlb
jnp
push
cmp
shlb
sbb
push
iret
push
sar
fidivl
jp
pop
wrmsr
movsl
mov
filds
pop
cs
jnp
mov
inc
xchg
rcll
sub
loopne
mov
aaa
xchg
push
pop
xchg
orb
mov
mov
in
lss
add
idivb
lods
lods
jg
pop
fistps
aam
outsb
sahf
mov
adcl
cmp
and
cmpsl
popa
in
sbb
push
pop
add
jmp
cltd
cmp
xchg
imul
adc
and
add
fidivl
xor
xor
sub
push
outsb
xlat
mov
inc
imul
dec
or
push
int
lods
repnz
into
or
mov
lock
fcoms
insb
popa
jle
push
ss
adc
push
sbb
ficoml
fsubl
mov
js
or
stos
sub
stos
mov
sbb
aad
mov
inc
sarb
cmp
mov
mov
out
mov
inc
pop
clc
fistpll
sub
aas
push
mov
jnp
mov
std
adc
lcall
add
ja
mov
ljmp
iret
das
bound
int
mov
into
push
out
fimuls
imul
xchg
pop
mov
lea
adc
adc
xchg
leave
loop
inc
or
dec
xchg
and
push
dec
xchg
push
add
or
subl
jo
rorb
lret
mov
pop
nop
ror
orl
test
aad
in
test
mov
pop
dec
pop
in
fisttps
divl
fs
jle
sbb
and
dec
test
jbe
jnp
mov
gs
out
add
test
testl
push
pop
and
jmp
xchg
test
dec
lods
mov
lods
dec
sub
leave
fdivrs
mov
test
jae
xchg
lret
cmp
xor
fs
mov
push
pop
rcr
or
mov
rcll
in
mov
orb
xchg
pop
xchg
inc
jmp
pop
in
icebp
outsl
pop
mov
test
movsl
in
mov
dec
sub
sbb
js
mov
lcall
or
push
fs
rolb
pop
adc
push
in
mov
or
mov
fnstsw
mov
and
mov
mov
data16
cmp
xlat
and
cmp
scas
test
movsl
xchg
pop
dec
lcall
push
jge
out
dec
test
xor
pop
aam
or
ficomps
ret
dec
lret
sbb
fisubrs
lea
hlt
xor
into
mov
shlb
les
incl
mov
or
pop
sub
out
lods
iret
mov
jecxz
out
negl
popa
dec
mov
test
or
jbe
dec
adc
dec
lds
sahf
cmp
fmul
mov
push
dec
mov
pop
jbe
add
imul
inc
push
mov
lods
inc
push
ja
cmpsl
lret
in
cmp
notl
out
ds
sar
out
fildll
js
ficomps
or
inc
xchg
out
mov
xchg
jbe
jne
dec
icebp
test
xor
xchg
mov
jg
fmuls
add
insl
adc
out
add
dec
aaa
ret
cmpsl
add
mov
mov
js
test
and
add
pushf
push
add
and
in
cwtl
adc
enter
lret
adc
clc
and
sbb
test
loopne
enter
lcall
jge
mov
jp
adc
dec
push
subb
cmpl
and
popa
es
jle
xor
pop
push
or
lret
jns
xor
xchg
out
pop
push
int3
or
mov
cmp
mov
mov
mov
xchg
jo
mov
cmc
or
rorl
into
push
xchg
int
pop
aaa
scas
mov
xchg
adc
push
data16
imul
dec
sub
nop
jb
imul
adc
popf
arpl
fwait
push
and
push
in
dec
insl
jg
xchg
testb
data16
add
fwait
das
lods
inc
gs
adc
jmp
jne
and
and
xchg
mov
nop
or
mov
dec
in
mov
rcr
mov
jmp
imul
shr
jg
xor
push
adc
jecxz
addb
add
jp
lret
xlat
cmp
cmp
or
xor
fcmovbe
shrb
popf
dec
adc
mov
push
mov
inc
pop
pop
pop
stos
and
stos
inc
xor
int
mov
jae,pn
xchg
and
les
das
sbb
mov
xor
mov
inc
jp
fbstp
xor
sub
dec
sub
ret
aam
sub
cmp
jb,pt
fimull
add
fiadds
mulb
sahf
pop
cwtl
scas
shrb
sub
fnstsw
pop
je
fiaddl
sbb
out
shrl
mov
lds
ja
mov
mov
cmp
sbb
ljmp
push
lock
push
add
adc
mov
inc
sub
pop
push
pop
xchg
and
addl
movsb
insl
pop
mov
int3
orb
or
push
lock
pop
xor
int
ja
xchg
or
mov
popf
or
pop
jmp
out
test
loope
or
push
adc
popf
rcr
xchg
call
leave
push
gs
mov
adc
adc
cltd
aas
mov
lret
cltd
ja
leave
cltd
xorb
jns
les
nop
or
mov
jp
scas
lea
test
jne
jmp
es
outsb
push
test
adc
mov
mov
int3
mov
mov
or
xchg
les
andb
mov
loop
mov
jmp
sbb
je
mov
xchg
xor
sub
pop
mov
jp
out
push
fildll
adc
jae
jge
rorl
sbb
push
mov
xor
push
mov
sbb
push
fwait
iret
sub
mov
cli
test
jnp
ds
cmp
inc
mov
mov
out
cwtl
mov
insl
stos
jl
push
jnp
mov
and
sarl
inc
jmp
lock
out
mov
je
adc
mov
pop
cmp
test
sbb
mov
sbb
xchg
dec
jo
outsl
xchg
adc
mov
mov
and
push
xlat
add
fcom
xor
pop
cli
inc
xchg
iret
jne,pt
or
insl
cmpsl
sbb
outsb
loopne
cmp
test
scas
ja
push
popa
sub
mov
xchg
movsb
loope
or
data16
shrb
push
sub
test
jnp
pop
and
jmp
fistps
add
fwait
hlt
sbb
fists
cmc
ret
mov
fs
mov
int
jp
cmpsb
sbb
jp
inc
adc
fisttpl
sahf
mov
mov
lcall
push
fdivrs
shrb
out
orb
cmp
jecxz
or
or
and
arpl
add
in
addr16
dec
pop
sbb
pusha
jb
jb
insl
push
or
jb
dec
sbb
jp
fidivs
dec
pop
add
std
pop
push
inc
sbb
dec
cmp
bound
add
jnp
dec
lods
pushf
or
out
mov
pop
mov
les
in
dec
pop
sub
mov
jae
or
sahf
es
sub
jnp
sub
lahf
xor
fnstsw
jo
mov
fdivrl
cmp
inc
cmp
ds
lods
fidivl
dec
xchg
repz
jmp
mov
inc
sub
dec
mov
pop
dec
pop
rclb
imul
sub
pop
inc
movsl
pop
lds
outsl
push
cmp
pusha
dec
fs
addr16
repnz
push
ljmp
jp
xchg
iret
enter
xlat
sub
sahf
sahf
inc
sar
sbb
push
adc
pushf
xchg
push
out
xchg
les
rolb
aad
adc
lea
adc
addl
dec
ret
jecxz
add
push
arpl
push
loop
mov
insb
ret
orb
adc
xor
adc
xor
cld
fcompl
push
sbb
jno
pop
das
scas
daa
cmpsb
sbb
pop
xor
mov
daa
xchg
les
aas
and
sub
push
cs
es
in
xor
inc
pop
jge
or
pop
sub
mov
mov
mov
mov
daa
icebp
in
sbb
push
jmp
rcrl
lret
insl
sarl
scas
mov
lds
ss
push
fldcw
test
inc
pop
dec
lds
pop
fldenv
dec
addr16
mov
jl
ja
and
ljmp
adc
inc
fnstenv
add
mov
cmp
stos
jnp
call
pushf
pop
jae
sarb
lahf
repnz
lods
pop
in
int3
stos
or
pop
negl
jnp
xor
jg
cld
ret
insb
cld
andb
sbbb
loop
dec
cmp
mov
out
cs
stc
and
movsb
cmc
scas
mov
add
inc
arpl
aaa
adc
mov
inc
mov
jae
dec
sub
pusha
jno
add
cmp
icebp
pop
mov
and
ficompl
sub
insb
imul
or
leave
add
sbb
movsl
add
shll
cmp
dec
mov
pusha
iret
inc
cmp
sbb
ss
scas
cli
xchg
lods
jle
inc
es
inc
sar
sub
bnd
xor
sbb
push
aad
add
enter
fbstp
fucomi
jle
lds
push
inc
push
and
mov
int
fcoml
and
jl
ret
mov
jg
mov
imul
mov
jg
cs
cmpsb
loope
mov
scas
push
int
push
xchg
xchg
clc
xlat
sbb
inc
mov
pop
out
stos
gs
push
inc
ret
push
pushf
les
movsl
negb
ffreep
lea
pmaxub
call
pushf
dec
fstpl
pop
aam
rcrl
ficomps
push
data16
cmpl
gs
dec
xor
xchg
and
mov
mov
and
movsl
out
scas
lds
adc
test
leave
adc
xchg
enter
in
pop
mov
out
add
mov
mov
inc
out
cmpsb
insb
fs
test
inc
pop
aam
fwait
rcrl
mov
ljmp
aad
cmp
icebp
mov
xor
nop
pusha
jge
xchg
adc
call
fldenv
lahf
sbb
mov
out
inc
lcall
mov
lods
adc
iret
enter
push
inc
clc
std
sub
fwait
cmpsb
divl
pop
sbb
cwtl
mov
cmp
push
sub
pop
test
arpl
pusha
mov
cmc
in
clc
mov
push
jb
je
cmp
lods
inc
js
pop
mov
cmp
jp
or
pop
mov
add
loope
imul
pop
sub
cmpb
cld
or
sarb
popa
jp
jns
mov
push
sub
inc
popf
jle
push
cmp
js
lods
mov
test
js
out
int
fisttps
ja
sbb
fbld
mov
dec
add
jno
pop
ret
pop
lock
lret
jl
in
ds
cmpsl
lret
ljmp
pop
aas
pusha
cmpsl
jne
jo
mov
inc
xor
rcl
mov
or
xchg
daa
bnd
aas
inc
movsb
xchg
out
xchg
outsb
jmp
sub
int
pop
fadds
mulb
jle
jns
cmpl
inc
inc
adc
popa
ljmp
fstl
xlat
jle
loop
cmp
cmpsl
sbb
jecxz
push
pop
dec
inc
sbb
dec
ficoms
pop
clc
fmuls
jae
push
je
and
mov
or
les
into
in
adc
cmp
jmp
xchg
pop
inc
xor
cmp
push
aad
int3
movl
lea
jb
jno
pop
pop
xchg
jp
and
out
fists
and
mov
stos
das
das
fcmovnu
test
in
pop
sub
mov
cmp
dec
adc
insl
jb
pop
sbb
stos
jne
cltd
push
push
sbb
push
mov
dec
and
sub
cmpsl
hlt
pop
push
mov
sbb
jl
nop
mov
mov
mov
jmp
add
cmp
enter
sbb
pop
ret
sub
inc
and
sub
push
cwtl
or
in
lods
sub
jae
xchg
or
fwait
rcrb
pop
mov
inc
dec
flds
mov
in
nop
jae
mov
mov
fldl
fistps
inc
and
arpl
mov
in
push
mov
testb
ficomps
les
lahf
xchg
mov
out
xchg
call
xchg
dec
hlt
mov
cltd
mov
push
and
divl
ss
xor
dec
and
add
cli
sbb
adc
sub
stos
dec
mov
test
mov
dec
add
shlb
arpl
cmp
dec
aaa
jnp
movsb
ret
inc
adc
sti
fcompl
lahf
mov
jmp
and
in
mov
hlt
mov
mov
mov
push
cmp
pop
clc
ret
popa
scas
jle
lret
mov
cmp
popa
dec
mov
sbb
jmp
ja
pop
insl
xchg
and
fsts
xchg
mov
xchg
sbb
rclb
or
ret
sahf
dec
adcb
call
mov
pusha
jl
sarb
push
cld
iret
call
mov
cmp
loope
shll
xchg
pop
jb
lret
outsb
xchg
mov
out
mov
push
push
shufps
insl
mov
out
mov
and
dec
test
push
ds
sub
pop
loopne
sar
push
fsts
scas
push
xchg
add
in
fidivl
das
pop
push
jns
movsb
hlt
xor
outsl
mov
mov
dec
push
sub
pop
jns
cmp
call
sub
shl
in
mov
and
inc
or
xchg
xchg
add
add
sbb
mov
mov
stc
or
cmp
and
fwait
mov
and
ljmp
cmp
clc
mov
push
push
scas
lret
sti
fdivrl
sahf
pop
xchg
out
push
lahf
fucom
out
lods
cwtl
dec
enter
xor
cmp
mov
ret
mov
andb
shrl
fnsave
or
lods
pop
sub
cmp
pop
idivl
jmp
sbb
nop
and
or
push
cwtl
mov
fimull
lea
dec
inc
in
sub
and
imul
call
ds
fwait
call
add
cmp
mov
ret
scas
scas
lret
sub
xlat
push
cmpsb
mov
in
lods
inc
rcr
xchg
mov
jle
repnz
pop
in
mov
xor
add
adc
xchg
fstp
shl
mov
or
ds
les
lret
clc
call
jns
cmp
and
iret
xchg
jnp
out
icebp
testl
ja
into
repz
andb
sub
cmp
jb
push
pop
xorb
enter
add
not
jl
lds
and
jmp
jne
cmp
sbb
pop
roll
jne
pop
shr
jg
call
jo
jp
sbb
pop
pushf
out
hlt
mov
into
or
mov
les
or
lds
sbb
fadds
jge
push
dec
cmpsb
ret
cwtl
xchg
es
shlb
jle
iret
mov
decl
inc
jl
out
mov
mov
mov
mov
flds
arpl
and
std
dec
pop
mov
push
jno
das
pushf
repnz
fisubl
test
fs
loope
bound
and
ds
pop
orb
xchg
cwtl
xchg
push
aas
or
push
xorl
fldpi
ja
fs
aad
cmp
mov
in
mov
or
out
pusha
push
mov
test
gs
cmp
dec
mov
outsb
lea
imul
aaa
push
mov
xor
push
sub
add
cmpsl
jl
mov
sbb
nop
sahf
mov
xchg
insl
jb
loop
push
cwtl
icebp
pop
pop
push
bound
into
in
hlt
adc
data16
dec
repnz
fwait
lods
addr16
jge
in
dec
es
fsubrl
test
into
lret
and
out
mov
call
es
cmp
push
ljmp
bound
lea
mov
nop
outsl
pop
mov
mov
sub
mov
aam
sub
movsl
sbb
sub
push
push
pop
call
cmp
sbb
fucomip
mov
xchg
outsb
test
pop
xchg
dec
cwtl
decb
fildll
cmpsb
pop
in
xchg
ret
lret
add
mov
cmc
cmp
in
decb
or
leave
cmp
shll
xor
xchg
lcall
sub
mov
sbb
mov
outsb
in
jle
pusha
in
dec
test
je
lock
push
lods
push
hlt
pop
xor
xor
fs
mov
pusha
xor
cltd
push
inc
rcrl
mov
enter
inc
sub
sbb
int
cmp
shll
xchg
add
adc
scas
sahf
insl
sarb
ja
xor
inc
mov
pop
xchg
in
inc
out
lds
adcl
pop
int3
pusha
mov
xlat
rcl
and
mov
ss
adc
mov
pop
pop
mov
icebp
sub
mov
jns
inc
outsl
or
adc
popl
xchg
push
sbbb
jmp
adc
enter
lock
out
int
sbb
shll
pushf
cmpsb
scas
mov
stos
sub
adc
sbb
ret
orl
xor
cmc
xlat
dec
mov
rcr
lret
lea
add
addb
je
std
cltd
rorl
in
pushf
roll
cmc
data16
xchg
mov
add
xchg
loopne
sub
ss
cmp
dec
cmpsb
cmpsl
xor
pop
inc
dec
pop
clc
push
mov
jp
push
daa
pop
jle
subb
ja
jno
mov
lcall
mov
movsl
add
jae
sub
fs
and
sar
int
fsubl
ja
mov
orl
aam
sbb
stos
mov
mov
jno
dec
pop
and
mov
inc
sub
jle
enterw
push
and
mov
ret
sahf
flds
insl
icebp
add
rclb
xor
test
jge
cmp
pusha
cmpsb
push
imul
sub
fwait
jg
sbb
dec
lds
int
jmp
shrl
mov
rcll
xor
pop
add
xlat
out
mov
call
dec
stc
xchg
js
xchg
adc
cld
add
out
push
fisubs
stos
inc
into
clc
mov
pop
dec
cmp
jnp
push
scas
push
idivl
and
bound
loope
je
cli
in
je
lret
lret
push
arpl
sbb
lock
pushf
cmpsb
loope
out
mov
sbb
push
fcomip
ds
aad
stos
xor
jnp
movsb
dec
xchg
outsb
push
xchg
gs
jl
loop
je
orl
loop
imul
mov
scas
lds
insl
pop
mov
push
xchg
mov
adc
mov
fnstenv
adc
sbb
ja
lret
das
mov
xchg
jne
hlt
pusha
lret
sbb
fwait
enter
fwait
pop
cmp
dec
mov
push
dec
test
mov
or
shlb
mov
xchg
jne
sahf
push
mov
shll
in
stos
icebp
cmp
or
icebp
cmp
push
adc
in
add
orl
movsl
pop
les
mov
mov
stos
test
daa
sar
pushf
mov
andl
insl
bound
push
pop
sub
inc
into
push
xor
and
mov
xchg
popf
and
cmp
out
fcmove
cmp
scas
pop
sub
and
imul
addr16
jb
inc
pop
xchg
repz
loop
je
imul
push
ror
dec
int
sbb
lds
out
xchg
int3
or
mov
xchg
mov
mov
std
insb
into
push
out
sub
mov
divl
mov
enter
daa
pusha
jle
pop
ljmp
mov
fmuls
test
pop
pop
mov
test
mov
ret
imul
sbb
arpl
loopne
cmp
nop
and
fs
lcall
pop
clc
add
je
in
ret
hlt
fmuls
aas
mov
dec
imul
cmpsl
cmp
pop
cmp
jne
cs
sbb
loopne
cmc
ja
cmp
repnz
in
mov
mov
lret
adc
xor
outsl
inc
aad
sbbl
ds
jmp
stc
pop
pop
dec
sbb
imul
ljmp
add
lahf
mov
addl
movsb
lods
pop
cmp
jb
orl
cltd
jno
mov
pusha
loope
pop
out
pmaxub
mov
jno
push
xchg
popf
jle
imul
imul
lods
sub
movsb
and
lahf
out
lcall
xor
pop
xchg
lret
adc
pop
add
xchg
pop
stc
mov
dec
mov
ljmp
dec
xor
scas
mov
imul
gs
sub
sahf
loopne
fists
push
or
scas
std
out
or
mov
push
push
int3
cmp
leave
jp
fisttpl
loop
xlat
jne
jbe
jecxz
stc
jge
shll
dec
xchg
jmp
es
xchg
sbb
adc
mov
and
mov
push
adc
scas
adc
jge
es
mov
add
add
aad
inc
mov
adc
cs
jnp
jns
adc
and
adc
xchg
dec
sbb
sbbl
jl
jne
fs
nop
and
and
fnstenv
movnti
or
pop
xor
sbb
stos
incb
or
loopne
cbtw
push
sub
and
mov
std
jns
ja
pop
cld
aas
cmc
jmp
sub
cmp
sbb
scas
cmp
fwait
mov
xor
sahf
pop
adc
int3
cmp
out
add
pop
mov
fldenv
mov
aas
adc
adc
mov
clc
or
adc
pusha
ret
je
dec
jbe
cmp
or
push
inc
shll
mov
frstor
rol
sub
adc
call
or
pop
das
outsb
mov
push
adc
out
iret
push
dec
jl
out
ret
lock
inc
cs
repz
mov
arpl
fldcw
adc
stos
jb
out
fisttpl
fbld
adc
loop
repz
ds
and
or
shrb
faddp
addr16
aas
repnz
leave
sub
sbbb
inc
iret
cli
rcll
push
mov
cmp
inc
adc
cmp
test
shll
pop
addr16
scas
pop
addr16
pop
nop
mov
jnp
ret
sub
shll
loop
dec
mov
hlt
fndisi(8087
mov
cmpsl
dec
insb
jns
arpl
add
pop
push
ficoml
sub
int3
jno
mov
adc
mov
jae
das
in
or
or
in
pop
ret
aam
xchg
pop
mov
daa
mov
outsb
ret
cli
xchg
push
add
cmp
pop
sbbl
mov
in
push
cmpxchg
xchg
cmp
cltd
mov
loop
xor
push
int
jle
pop
in
dec
leave
mov
mov
xorb
inc
sbb
push
in
insb
outsb
jo
dec
xchg
sbb
popa
stos
inc
mov
or
or
or
sbbl
fstpt
ljmp
js
and
push
loope
lods
xor
push
sti
jb
out
inc
jo
shr
adc
mov
add
xchg
add
mov
loope
daa
push
shll
xor
mov
mov
push
stos
imul
shrl
xor
push
sbb
or
jnp
or
adcl
sub
dec
pop
das
mov
mov
pop
ror
int3
iret
lods
out
cmpsl
stos
ret
adc
xor
stos
mov
mov
jle
xchg
dec
jl
mov
mov
dec
inc
arpl
or
in
loope
fwait
incl
fldenv
xchg
test
je
stos
fidivrl
ret
mov
push
mov
icebp
dec
movl
mov
jae
cld
jno
ret
insb
xchg
mov
lret
enter
mov
pop
adc
adc
ret
xchg
andl
pop
in
int
fbld
xorb
fs
jge
jge
sub
js
in
push
cltd
mov
cli
das
or
sbb
sbb
pop
jl
adc
and
lret
push
test
sub
mov
in
and
lock
jnp
mov
lods
fcompl
ja
jle
adc
rolb
push
in
mov
mov
inc
ret
xchg
arpl
mov
pop
push
sarb
es
clc
sbb
scas
push
das
adc
imul
cmp
fdivrl
jbe
push
cmp
mov
jnp
lea
cmp
xor
imul
jecxz
ds
aam
and
mov
fcoml
mov
and
addr16
or
mov
push
adc
in
push
lock
pop
testl
cmp
mov
pop
inc
incb
in
and
and
divl
ds
jg
jns
adc
stos
push
negb
dec
mov
das
or
sahf
popf
cmp
sub
add
rcrb
xchg
dec
and
addr16
es
fidivrl
fdivs
add
cmc
pop
xor
pop
cmpsb
mov
mov
rcrl
into
outsl
jne
and
aas
push
and
enter
subl
in
mov
pop
sbb
arpl
gs
add
arpl
rorb
mov
fidivs
mov
dec
xor
pop
add
mov
sbb
aam
std
movsl
decl
xchg
xor
adc
push
insl
mov
add
sarl
fildll
jae
xchg
mov
lods
adc
push
xchg
mov
push
sub
inc
xlat
mov
dec
jl
push
cmpsb
in
sub
cmp
xchg
ret
jns
pop
push
inc
mov
mov
jno
jl
add
mov
cwtl
cmp
mov
addr16
jp
inc
xchg
add
pusha
lock
xor
and
mov
test
mov
rcrl
pusha
add
xchg
fs
fdivrs
mov
andl
or
rcr
jns
addb
fdivp
lods
push
icebp
fsubs
stos
mov
rclb
jl
xor
sbb
stc
mov
gs
push
xchg
dec
adc
aad
cmp
sub
push
cmc
mov
xchg
sbb
or
repz
mov
lea
xor
jno
nop
cwtl
xor
and
inc
mov
cltd
rep
sti
cmp
or
push
xor
dec
xchg
push
pop
arpl
stos
inc
add
scas
fimuls
aad
leave
xchg
cmp
inc
addr16
adc
add
adc
or
cmpsb
mov
js
mov
or
arpl
lock
jns
dec
mov
pop
pop
lock
inc
xor
or
sbb
add
pop
xchg
and
adc
out
push
outsl
or
cli
push
andb
fdiv
jl
out
test
inc
aas
inc
push
xor
in
roll
andb
mov
lret
or
repnz
addr16
test
out
sahf
fdivrp
xor
popf
sarl
in
fs
jae
jno
cmp
or
xor
cmp
dec
xchg
cmp
inc
insl
int3
mov
push
rorl
xlat
push
fidivrl
jg
mov
or
inc
xor
push
pop
push
ds
aas
sub
movsb
adc
pusha
mov
out
adc
lahf
xchg
add
shll
nop
or
pop
in
fildll
test
jnp
jecxz
dec
mov
xchg
loope,pt
inc
into
sbb
or
jecxz
mov
pop
adc
jp
ret
cmp
lret
fwait
mov
andl
outsl
mov
and
cmp
daa
xchg
call
es
fsubrl
test
push
shll
mov
ret
fwait
mov
ja
sahf
pop
out
ja
roll
cwtl
repnz
mov
adc
stos
loop
fwait
xchg
mov
sbb
sub
and
test
jae
loopne
in
in
mov
xchg
jp
pop
sysret
or
adc
pushf
test
fcmovne
sahf
mov
inc
and
inc
or
test
lahf
les
push
xor
testl
lahf
popa
pop
ljmp
mov
das
or
out
mov
popa
sbb
popf
fs
and
lods
sti
add
sub
leave
push
loopne
data16
cmp
mov
sub
imul
pop
movsl
mov
fucomip
les
cmp
rclb
sbb
jae
inc
les
cwtl
mov
inc
xchg
or
jmp
pop
test
ljmp
lret
mov
lret
cmp
cwtl
mov
test
dec
insl
icebp
insb
cmp
or
popl
loop
inc
bound
dec
cmpsb
clc
mov
sbb
push
add
xchg
and
push
mov
cmpsb
mov
movsl
mov
hlt
cmp
in
out
pop
pop
fisttpll
repnz
pop
ds
cs
ljmp
mov
xchg
jle
cmp
aaa
mov
cld
fsubrp
jb
cld
mov
negb
jb
rorl
cli
das
jns
loope
lgs
outsb
push
inc
pop
xor
sbb
or
fnstenv
mov
xor
scas
inc
jle
imul
cmpsl
enter
lods
jl
sbb
mov
out
add
shlb
sub
pop
test
dec
fwait
ret
pop
rorl
lea
push
add
lret
pop
mov
add
mov
xor
int
or
fistl
loope
lods
adc
xchg
js
fwait
test
jnp
jbe
xchg
fbld
data16
xchg
lods
dec
fldt
shr
popa
mov
inc
mov
xchg
pusha
repnz
repz
and
pushf
push
cmp
arpl
xchg
dec
loopne
sub
sbb
cmp
ret
or
lock
push
daa
call
or
mov
adc
stc
pop
lods
jae
jne
ret
movsb
aam
in
data16
test
call
add
push
push
gs
xchg
jg
mov
std
outsb
pop
shll
les
sbb
xchg
test
jbe
mov
mov
rorl
or
jmp
out
dec
sub
in
push
push
mov
mov
xchg
jp
ljmp
fld
sub
pop
mov
sti
jne
movsb
fld
inc
scas
xor
mov
mov
and
xlat
cmc
in
scas
or
jl
jp
mov
add
mov
mov
cli
div
in
push
outsl
hlt
pop
les
cwtl
das
pushf
push
insb
or
out
xor
inc
xchg
sub
and
and
jne
xor
push
mov
pop
xchg
inc
loopne
js
cmc
call
into
popf
xchg
xchg
dec
xor
into
and
pop
cmc
sub
je
pop
aam
add
scas
sti
fidivl
jb
bound
aas
mov
stos
or
jns
and
dec
fcmovnb
xchg
push
pop
push
dec
fldcw
jbe
mov
adc
xor
or
cld
sub
in
jae
notb
psllq
repnz
repnz
mov
push
mov
xchg
out
dec
stc
push
das
mov
imul
push
adc
test
popa
pop
neg
sbb
sub
ljmp
imul
icebp
adc
xchg
mov
out
mov
es
movsb
int
cmpsb
jmp
sub
insl
xor
icebp
xor
sti
fwait
xorl
xchg
jmp
sbb
popf
add
out
mov
adc
jmp
inc
movsl
xchg
movsl
fidivl
cmp
lret
fcomps
xchg
stc
jno
inc
dec
dec
lods
jp
cmc
filds
movsb
inc
test
adc
shll
mov
test
aad
sub
out
jle
clc
in
cmc
push
lds
add
fldcw
cmp
mov
sub
mov
ljmp
lds
dec
pop
paddq
add
sbb
adc
or
es
jmp
push
sahf
and
jno
sub
sbb
pop
xlat
adc
xchg
outsl
addr16
insb
adc
mov
sbb
aas
lods
mov
cmpsl
cmpsb
and
lcall
insl
lret
jo
mov
stos
fstpt
insl
mov
cmp
push
mov
sahf
leave
sbb
cmpl
in
pop
out
sub
dec
xchg
jle
sub
xor
mov
call
addb
mov
insb
mulb
std
in
add
pop
insb
pop
adc
mov
and
test
call
aas
imul
pop
add
jmp
xchg
std
sahf
repz
call
jle
adc
add
aas
jp
push
out
ja
jle
out
arpl
mov
jp
sub
idiv
mov
jg
pop
sbb
in
mov
and
bound
cmp
add
das
xor
notb
vmwrite
outsl
or
adcb
repz
cmc
cmp
insb
mov
out
push
sub
divb
and
negl
int
ss
mov
enter
movb
adc
xchg
sub
dec
cwtl
popf
pop
movsb
stc
inc
inc
mov
cmp
cmp
xchg
test
mov
push
push
shrb
mov
cmp
lods
andb
sarl
or
push
aas
mov
outsb
jge
call
mov
xchg
int
out
jle
mov
cmp
icebp
and
and
cmp
push
jp
call
sbb
std
sbb
mov
and
push
xchg
add
call
cmp
out
into
cwtl
mov
out
sub
scas
negl
decb
mov
xchg
je
push
sub
out
cmp
out
cld
stc
in
loope
lret
mov
inc
scas
cli
notb
sub
mov
or
hlt
hlt
out
add
aaa
add
sti
pop
pop
movb
frstor
es
inc
jnp
das
leave
scas
pop
jl
bound
and
pop
repnz
sbb
mov
xchg
xor
lds
jbe
sbb
bound
xor
loop
das
cwtl
pop
and
mov
push
mov
xchg
sti
lock
das
pusha
mov
outsb
mov
cmp
adc
xor
je
push
inc
pop
push
pop
ss
jge
nop
fdivl
and
adc
xor
push
mov
les
inc
pop
xchg
repz
addr16
mov
cwtl
jbe
mov
sub
inc
push
sub
adc
mov
sbb
xor
mov
push
hlt
stos
mov
int
es
jmp
aam
mov
mulb
pop
dec
cmp
aad
xor
imulb
dec
xor
icebp
adc
dec
imul
out
incl
and
cmp
scas
pop
and
inc
sbbl
scas
push
testl
hlt
lret
adcl
push
enter
mov
in
cli
mov
or
mov
jae
fnstcw
fnstcw
inc
mov
xor
fdiv
test
xchg
mov
or
or
dec
inc
jge
dec
cs
xchg
cmp
leave
jnp
sub
mov
add
jge
xor
int
push
es
push
pop
push
loop
stc
mov
cltd
orps
popa
clc
xor
add
enter
aas
icebp
pop
out
call
or
orl
mov
ss
mov
out
push
fimull
mov
testb
and
xlat
in
fstl
pop
push
mov
cltd
and
adc
in
and
test
push
inc
icebp
dec
rorb
xchg
push
pusha
dec
jae
cltd
testb
call
and
inc
clc
pusha
repz
xchg
gs
int
cmpsb
sarb
add
and
in
mov
mov
cltd
and
out
aaa
sub
mov
out
decl
sbb
out
cmpsl
cmp
enter
pop
lret
test
test
ficomps
out
lods
push
mov
or
dec
mov
push
and
and
push
aad
add
pop
stc
hlt
add
outsb
pusha
cmp
movsb
int
cmp
mov
cmpl
jge
add
ja
or
cmc
insb
mov
int
loop
mov
scas
sub
adc
std
xchg
xchg
jl
sbb
add
pushf
aaa
adc
and
lahf
cmp
pop
scas
outsb
lods
shll
pop
push
jb
sahf
xchg
push
mov
lods
roll
mov
jmp
and
dec
pop
imul
and
mov
clc
popa
adc
daa
scas
cmp
shlb
loop
fidivl
pop
add
lahf
in
mov
sti
jp
ret
pop
out
ss
filds
je
lea
lods
lock
cltd
inc
mov
xchg
out
sub
add
mov
xlat
mov
shll
subl
and
popf
xor
dec
mov
jnp
pop
movsl
add
lret
add
repnz
sahf
or
jae
or
ljmp
jnp
or
mov
js
add
arpl
xlat
cwtl
mov
mov
push
and
cmpsl
es
and
lea
sti
and
ds
mov
adcb
add
addr16
ljmp
ret
mov
mov
inc
jecxz
nop
jecxz
loope
dec
push
xor
cmpsl
push
mov
jg
sub
sub
fsubs
lahf
jecxz
push
fstl
ljmp
inc
out
into
dec
loop
jns
mov
in
sub
adc
test
out
jno
cmp
sub
data16
aas
lahf
pusha
out
cltd
add
push
cmp
jle
add
icebp
and
push
cs
aam
push
mov
jmp
orl
cmp
mov
into
sbb
sbb
xchg
and
aaa
movsl
out
gs
inc
xchg
jae
sub
out
in
push
cmc
lock
push
mov
adc
mov
shlb
push
pop
push
inc
in
lahf
test
sbb
pop
lret
jae
mov
mov
push
je
int
sbb
pop
fisubrl
iret
jl
and
mov
les
in
call
ret
sub
data16
inc
and
jmp
orb
je
lcall
mov
insl
dec
shll
lea
movsl
arpl
jne
sbb
fidivs
cltd
sub
in
lock
push
js
in
repz
or
pop
arpl
pop
lods
add
jbe
sub
pop
cmpsb
xor
jb
mov
insb
xor
mov
adc
pop
add
add
repnz
mov
or
dec
push
cs
std
cmpsb
push
leave
les
add
loop
lods
pop
mov
dec
leave
jno
ret
sub
movsb
push
jp
dec
iret
stos
shlb
xchg
dec
rcrl
and
mov
fsts
sub
push
sti
and
dec
subb
icebp
test
sub
lds
outsb
jmp
jb
xchg
movsl
or
xchg
repz
gs
pop
pop
mov
jle
mov
jne
jge
jecxz
mov
sbb
mov
mov
dec
lds
sub
fnstsw
es
faddl
insb
leave
mov
test
negb
mov
mov
sbb
int3
or
aas
lcall
lods
mov
sahf
test
mov
test
cmp
pop
inc
jge
repnz
lret
dec
and
and
inc
test
ss
or
push
cmp
push
dec
cmp
xor
ret
outsl
push
js
jg
int
lcall
jmp
pusha
add
popa
popa
test
lea
and
or
add
xor
aad
and
dec
mov
sahf
cmp
add
adc
mov
jae
pop
lret
push
push
sub
inc
dec
loope
dec
fsts
out
add
je
mov
mov
xor
outsb
ret
jg
out
pop
xlat
dec
nop
push
fimull
dec
cmpb
rclb
and
or
or
test
mov
stos
lock
cmp
mov
lret
sbb
adc
fsubrp
xor
mov
mov
and
mov
xor
inc
cmp
pop
adc
mov
insl
fdivl
iret
fstl
testb
fstps
pop
scas
xor
mov
jnp
insl
ja
addr16
je
mov
xor
sbb
jns
fcmovnu
movsb
fiaddl
inc
adc
lea
mov
cmp
aaa
adc
je
iret
or
sub
fnstcw
lods
sub
jnp
sbbb
shll
in
jecxz
lret
insl
fs
inc
xchg
out
loop
push
mov
pop
movsl
push
or
aam
mov
inc
es
in
outsl
stos
sbb
mov
push
ret
inc
dec
insb
push
sahf
push
sbb
out
addl
fstps
shll
ljmp
xor
fwait
scas
xchg
fstpt
rolb
cmp
adc
dec
xchg
jns
inc
popa
pop
and
scas
loop
pusha
dec
jns
cli
or
sbb
addb
fists
lahf
and
outsl
mov
cmpsb
lods
xchg
inc
popf
cld
jbe
rorl
subl
fldt
test
add
and
pop
sbb
add
clc
add
insl
or
outsl
cltd
stos
jne
movsl
sti
sub
mov
and
stos
pop
es
lods
dec
cmpsl
lods
xor
or
addr16
cltd
insb
jle
insb
inc
in
mov
cmp
push
pop
les
addr16
mov
mov
nop
push
out
in
test
xor
scas
mov
ficoml
adc
lahf
int
or
popl
fsubrs
loope
adc
sti
insb
jmp
into
cwtl
dec
inc
xchg
pop
push
cmpsl
mov
jbe
hlt
xchg
callw
mov
jle
clc
push
fdivrl
cmpb
push
jb
and
push
mov
aad
test
push
xchg
mov
fdivs
pop
pop
and
dec
jb
jge
movsb
outsb
addr16
sub
pusha
fisubrl
push
lods
push
scas
lahf
or
push
mov
xchg
stc
jmp
push
pop
movsb
lahf
scas
out
addr16
or
mov
adc
or
pop
mov
sbb
inc
sbb
pushf
cmpsb
push
stos
push
test
mov
add
adc
and
das
lods
leave
jmp
mov
inc
jp
jne
aad
dec
mov
mov
mov
mov
int3
xchg
push
enter
adc
repz
pop
add
and
xchg
clc
cmpsl
add
inc
jo
fidivs
push
mov
dec
icebp
insl
gs
fwait
cmpsl
adc
imul
clc
or
and
sbb
lcall
je
aas
fsts
cmp
jne
cmp
leave
sbb
cmpsb
add
sbb
adc
in
push
inc
in
shl
sbb
fcmovnb
xor
call
mov
pop
sub
aam
or
hlt
insl
into
jo
cmpsl
jmp
daa
or
push
xchg
mov
mov
fwait
mov
sahf
lds
cmp
cs
movb
cld
out
mov
stos
ljmp
gs
mulps
roll
xchg
shlb
stc
jl
inc
shll
or
push
sbb
mov
xchg
inc
outsl
sbb
cwtl
push
movsb
dec
jno
lds
push
movsb
fists
sbb
dec
adc
sbb
jl
bound
mul
add
stc
cmp
outsb
sbb
mov
mov
in
ret
add
mov
jmp
and
rorb
fst
mov
sbb
mov
jb
fimuls
mov
je
pop
sbb
or
in
lds
dec
test
fldcw
jle
mov
sti
lret
les
lahf
jns
mov
lahf
ficoms
push
inc
mov
test
push
pop
ror
or
lcall
stos
enter
and
fsubs
dec
mov
lahf
mov
fwait
mov
ds
icebp
adc
xchg
aam
push
cld
mov
outsl
jl
push
adc
mov
inc
lcall
xchg
test
mov
cld
fcompl
data16
iret
sub
arpl
dec
dec
add
ficoml
pop
xchg
mov
push
and
cmp
nop
mov
dec
jle
nop
push
push
loopne
fsubl
arpl
jo
mov
jmp
adc
and
std
shlb
aaa
test
jae
leave
pop
in
negl
lds
mov
xchg
cwtl
inc
sub
add
cmc
test
arpl
lds
lahf
in
mov
jb
push
je
testl
dec
test
cmpsl
and
push
jbe
icebp
dec
pusha
sbb
jbe
lods
jmp
stc
stos
mov
xlat
clc
out
rcrl
lea
sbbl
andb
add
cmp
dec
and
and
mov
dec
int3
dec
jmp
loope
xchg
mov
enter
adc
xchg
add
imul
gs
and
push
lods
gs
out
adc
sbb
or
int
jecxz
outsb
in
pushl
push
xchg
pop
xor
jno
mul
out
xchg
cmp
call
cmp
mov
and
std
iret
pushf
mov
xchg
xor
inc
outsl
in
ds
int3
mov
sbb
sbb
jmp
lods
sub
add
mov
gs
mov
aam
dec
hlt
inc
popf
sub
and
jg
pop
adc
push
cmp
jne
push
xchg
push
pop
loopne
ss
ds
std
negb
mov
ret
mov
insb
mov
jo
and
xlat
lcall
fists
adc
loop
xor
hlt
jae
adc
test
mov
sbb
sbb
jp
pop
ss
jo
pusha
xchg
shll
pop
pop
xor
xchg
dec
inc
xchg
js
ret
jl
mov
cmpsb
rcrb
std
fcomps
push
cwtl
inc
addr16
mov
inc
push
in
mov
rcrb
mov
call
xor
jbe
gs
jle
jne
jnp
sbbb
cld
jecxz
mov
inc
mov
mov
sub
out
push
dec
les
and
sub
pop
or
inc
fsub
jnp
mov
adc
ficomps
mov
clc
pop
adc
jg
loop
nop
cmpsb
iret
mov
in
mov
js
pop
pop
cmp
mov
push
fldl
out
out
jnp
or
cmp
xor
adc
sbb
mov
dec
cmp
mov
jne
bnd
push
mov
lret
sbb
adcb
dec
les
pop
push
faddl
push
adc
cmp
psubsw
or
data16
imul
jle
and
loopne
dec
and
mov
jne
dec
out
mov
fucomi
fcomps
push
xor
cmpb
insl
int
out
push
sbb
adc
or
shrb
testl
ljmp
pop
imul
arpl
mov
xor
jle
cmp
test
or
adc
add
mov
clc
push
sub
shl
lock
pop
inc
clc
addr16
shrb
cs
lahf
clc
adc
jg
pop
fisubrs
mov
or
inc
ja
stos
dec
cld
addb
je
ret
or
mov
cmp
mov
sub
cltd
lcall
fdivs
mov
cmp
adc
sti
nop
mov
sbb
push
std
cmpsb
shrl
xchg
loop
adc
aam
js
jl
dec
sbb
les
jbe
push
cli
lock
jmp
test
dec
push
or
xchg
shll
or
sti
in
adc
xlat
inc
popf
push
nop
stos
mov
addr16
or
adc
pop
out
inc
std
push
imul
call
fcomp
or
sub
sbb
lret
mov
mov
out
arpl
mov
decb
mov
mull
mov
push
cmp
outsl
mov
push
cmc
lcall
js
out
jg
push
out
les
xchg
and
lock
enter
in
sarb
aaa
popa
es
and
test
fwait
lret
sbb
arpl
movsb
cmp
aam
xchg
sbb
js
test
pop
mov
pop
mov
mov
sub
clc
in
or
push
test
push
pop
pop
sbbb
mov
adc
cmp
rcll
jg
pop
sti
cld
insb
add
push
sbb
in
jmp
stos
lods
mov
adc
jl
cmc
imul
iret
sbb
pop
scas
lock
mov
es
sbb
push
dec
inc
lahf
push
lret
arpl
xor
test
mov
xchg
mov
jmp
loope
scas
jo
mov
jg
mov
xchg
ss
int3
jl
scas
inc
imul
inc
mov
cmpsl
push
mov
xchg
cli
lcall
lds
outsb
or
mov
dec
sub
mov
ja
ret
jecxz
imul
xchg
inc
jnp
aam
dec
flds
dec
mov
dec
mov
mov
bound
push
stos
notb
ja
bound
arpl
aaa
bound
and
jg
insl
mov
out
jb
test
leave
fs
mov
or
je
xorb
dec
ret
scas
jno
test
or
sub
or
lock
push
scas
cmpsl
mov
insl
sbb
mov
mov
add
jl
loop
stos
sti
adc
lahf
data16
imul
mov
andb
push
imul
daa
negb
add
cmp
adc
cli
in
jmp
inc
and
mov
rcrb
orl
mov
cs
add
xchg
adc
sub
jge
or
movzbl
mov
xor
sti
into
push
nop
add
mov
cmp
and
pop
cmp
sbb
cmp
adc
inc
and
jl
nop
lret
test
mov
outsl
mov
sub
mov
rolb
into
mov
ror
pop
jo
jns
lret
fmuls
jno
xor
mov
inc
cmp
aas
and
jmp
adc
mov
shll
rorb
pop
jle
js
xchg
mov
arpl
in
adc
push
fstpt
fiaddl
mov
mov
rcll
sbb
push
addps
lods
sub
es
adc
jmp
inc
ss
orb
das
xchg
mov
dec
and
cmp
inc
daa
repnz
and
and
lcall
cld
mov
sti
insb
or
sub
and
mov
or
rcl
aad
push
dec
sbb
mov
loop
es
sbb
sti
cli
imul
sbb
jl
cld
or
ret
pop
mov
xor
rcrl
lods
adc
jp
jecxz
cmp
test
push
and
test
adc
test
out
loop
pop
int
inc
and
dec
stc
mov
mov
bnd
leave
jne
xor
xor
inc
pop
jge
dec
or
push
xchg
out
ljmp
mov
cld
fisttpll
push
sub
mov
out
or
pop
pusha
std
popa
stos
outsl
fwait
in
ret
or
or
ds
cmp
mov
subb
clc
sub
inc
add
cmp
ss
add
data16
popf
xor
les
jge
lods
and
mov
ds
adc
roll
mov
push
mov
jno
xchg
sarb
gs
imul
mov
dec
pop
mov
push
cmc
push
or
lods
pop
icebp
pop
xchg
push
cmp
push
outsb
dec
ds
xchg
jb
mov
adc
dec
push
jle
and
xlat
jne
inc
dec
mov
cmp
dec
cld
jno
or
daa
shlb
push
jle
or
fimuls
and
cmpsl
mov
cmp
into
mov
pop
aaa
xor
lret
negl
mov
outsb
sub
icebp
sub
scas
inc
mov
arpl
arpl
lret
dec
sbb
fsubrp
je
push
gs
gs
cltd
lcall
repz
cld
loopne
fstp
lods
jns
cmp
push
fsts
adc
xor
sbb
xchg
pop
les
inc
jo
mov
fnstenv
cmp
add
test
push
adc
dec
xchg
cli
pop
out
sub
inc
rcrl
add
dec
jge
mov
pushf
xchg
mov
fstpt
sub
lret
outsl
push
pushl
mov
and
rolb
adc
lock
stos
test
jae
cmpb
out
add
xchg
shr
fisttps
outsb
fs
pop
or
dec
les
mov
cli
mov
es
std
sub
les
aas
lcall
mov
fmull
popa
adc
pop
les
movsl
scas
icebp
jge
mov
adc
jbe
out
lcall
sbb
pusha
mov
sbb
mov
fbstp
mov
inc
aaa
cmp
jb
mov
push
or
insb
aas
ret
cmp
lcall
mov
lahf
mov
pop
dec
or
adc
pop
insl
lahf
sahf
cmc
xchg
push
mov
adc
sarb
push
or
mov
imul
jge
inc
mov
cwtl
stos
pop
cmpb
jbe
dec
jmp
jecxz
mov
push
fdivrl
push
or
shrb
jo
cmp
sbb
fwait
mov
push
sub
and
ficomps
jb
out
jg
dec
jno
pop
mov
sbb
scas
inc
xor
jmp
sbb
and
loop
aas
imulb
mov
jne
addl
mov
notb
dec
in
sbb
test
cmp
jns
sbb
aad
xchg
shlb
mov
aaa
ret
inc
ret
push
js
jbe
mov
pop
mov
adc
test
or
inc
cli
and
movsl
xchg
sub
lret
dec
pop
call
mov
mov
lods
sub
xchg
jge
jl
jno
nop
pop
decb
adc
jle
push
insl
stc
pop
inc
sub
repnz
jg
cmp
sub
ljmp
and
js
roll
fistpl
cld
popl
mov
pop
push
lret
push
jno
inc
std
fdivrp
sbb
rolb
and
orl
xchg
xchg
lret
adc
xchg
or
cmpl
bound
test
lcall
pusha
pop
hlt
ja
les
pop
iret
repz
ds
push
jmp
add
and
stos
lock
add
cld
rol
jl
aad
ljmp
inc
sub
mov
mov
dec
jne
mov
pop
es
jl
inc
adc
mov
aaa
or
int
mov
imul
rol
mov
shlb
xor
fs
cltd
popf
dec
in
jmp
and
arpl
sub
fistps
dec
jae
xor
mov
mov
movsb
adc
adc
sbb
dec
mov
jl
adc
insl
mov
lret
fisubs
insb
fmul
push
cmc
sbb
nop
mov
mov
jle
idivb
movsb
sub
xor
push
fcmovne
lret
pop
adc
lock
scas
mov
outsl
inc
xchg
jle
sti
mov
inc
and
fisubl
jae
mov
andb
repnz
shlb
lds
lods
test
push
mov
sbb
in
nop
bound
test
adc
and
sub
adc
aaa
dec
insl
jns
mov
cmp
aas
sbb
jbe
sub
ja
mov
push
push
or
ss
or
pop
insl
fnstcw
cs
insl
push
out
int
rcll
cmp
ss
cmp
xchg
pop
ficoms
call
mov
nop
arpl
mov
pop
pop
lods
add
fimull
mov
mov
mov
xlat
sub
bound
nop
mov
popf
insb
jecxz
xorl
int
adc
mov
and
or
mov
mov
ja
adc
scas
mov
mov
jae
daa
cmp
out
aam
std
in
pop
xor
jl
pop
es
mov
lcall
cmp
push
sub
xor
sub
popl
dec
or
icebp
jp
adc
cmpsl
test
add
push
inc
int
dec
hlt
das
jae
add
or
or
in
cwtl
dec
jecxz
dec
mov
in
test
aaa
sbb
pop
in
mov
mov
out
dec
xor
and
adc
outsb
dec
xor
cmp
xor
inc
sbb
sbb
sub
sbbb
xor
cli
out
adc
jo
in
sub
cmp
jge
inc
push
and
mov
adc
adc
cs
jge
inc
sub
push
leave
fldcw
scas
mov
push
push
test
cli
scas
icebp
xchg
shr
subl
adc
mov
dec
jle
lret
imul
push
out
dec
mov
movsl
pop
jnp
dec
push
push
adc
aaa
lahf
fwait
jne
in
pop
and
imul
xlat
lds
out
sub
popf
inc
pop
adc
ds
insl
in
notl
jo
add
pop
pusha
push
es
faddl
jnp
xchg
repz
cltd
scas
mov
jp
xor
and
idivb
ret
mov
push
js
nop
aaa
pop
sbb
adc
sub
shl
mov
add
mov
dec
xor
outsb
mov
dec
xor
mov
pop
aad
xchg
sbb
mov
ljmp
fldt
and
ret
movsb
clc
or
scas
loope
divl
sbb
inc
mov
sahf
stos
adc
and
pop
mov
cmpsb
les
fists
out
jg
les
add
dec
mov
mov
adc
sub
mov
stc
mov
js
leave
cmp
push
aas
pop
mov
jge
add
iret
mov
inc
int3
loopne
add
fstp
addb
jge
lcall
mov
and
shl
insb
add
push
fistpl
leave
push
scas
mov
jns
test
xchg
push
dec
mov
insl
out
dec
jmp
pushf
addl
add
inc
sub
jo
hlt
cld
outsb
adc
xchg
adc
pop
cmc
sub
mov
in
add
stos
adc
dec
or
lahf
jae
call
subb
xchg
insb
sbb
jns
push
ficomps
bound
adc
xor
popf
out
mov
arpl
xor
push
ds
outsl
pop
mov
push
and
sar
imul
fisttpll
iret
pop
fistpll
mov
cmp
and
movl
mov
mov
jb
insb
mov
fsts
repz
fimuls
mov
cli
mov
lods
stc
pop
clc
push
inc
jo
shlb
sbb
mov
in
insb
add
stc
ljmp
push
pop
cmp
daa
aam
dec
adc
aam
imul
fsubs
inc
push
mov
lahf
ficoml
pop
aad
pop
test
lret
mov
mov
pushl
mov
pop
mov
adc
mov
mov
insb
mov
xor
adc
mov
mov
add
rclb
xor
sbb
jecxz
mov
xchg
pop
call
pop
xor
aas
or
jb
icebp
roll
sarb
push
daa
iret
shrl
xchg
pop
xor
ljmp
pop
mov
inc
add
clc
iret
repnz
fwait
lcall
insb
sub
inc
dec
arpl
addl
idivl
test
test
add
imul
cli
mov
or
lea
xchg
or
into
jns
mov
mov
add
cs
xor
and
dec
inc
in
pop
pop
addr16
stos
jns
mov
and
les
scas
daa
in
sub
stos
in
xchg
or
mov
ja
shrb
pop
cmp
subb
test
sbb
aas
xor
mov
add
pusha
ljmp
jp
cmpsl
cltd
pop
mov
sub
dec
pavgb
mov
jne
out
les
js
adc
push
repz
xchg
stc
cwtl
sahf
jb
jo
jb
out
xlat
pop
jb
addl
pop
frstor
pop
mov
cld
sahf
int
dec
ja
daa
cs
lea
pop
pop
dec
test
sbb
push
sbb
insb
mov
inc
in
hlt
inc
pop
adc
xlat
push
mov
pop
xor
movsb
pop
inc
or
scas
stos
mov
inc
and
dec
xchg
das
lds
scas
insb
pop
jle
out
lods
cmp
dec
imul
std
ret
movsl
push
outsl
int3
or
cmpsl
dec
jp
ds
stos
pop
inc
push
int
fiadds
or
mov
sarl
sahf
ret
mov
repz
cmpsb
or
jo
xchg
sbb
out
add
mov
clc
rcrb
mov
int3
push
jle
daa
pop
mov
movsb
cmp
test
out
loopne
call
lock
out
cli
popa
imull
orl
cs
cmpl
outsb
mov
cmpsb
add
and
or
cmp
adc
pop
push
movsb
and
fsubrp
mov
js
addr16
mov
pop
mov
sub
sbb
jg
fcomip
pushf
outsb
mov
rcr
and
jg
repnz
outsb
dec
and
mov
mov
push
sub
stos
dec
shll
mov
stos
add
xchg
xchg
xlat
fidivrl
mov
or
cmp
dec
fsubs
inc
out
out
adc
test
movsb
pop
out
out
jle
jecxz
add
shl
mov
pop
mov
push
mov
pop
mov
out
out
movsl
jmp
adc
fcmovnbe
lods
or
pusha
xor
inc
out
addr16
icebp
stc
sbb
mov
dec
out
shlb
push
pi2fw
fnstsw
jecxz
and
test
mov
jmp
push
roll
insb
sarl
push
push
in
add
pop
fistps
ja
xchg
mov
out
stos
adc
lock
imul
xor
jae
dec
into
shl
daa
add
mov
nop
adc
in
adc
test
orl
cmp
and
sbb
adc
fyl2xp1
rol
sbb
mov
pop
and
mov
ljmp
lds
inc
in
clc
ret
pop
and
push
add
ljmp
cwtl
pop
popf
insl
cmp
mov
mov
adc
loopne
pop
and
lea
add
add
adc
jae
push
xorl
sub
jl
mov
mov
lods
icebp
and
addl
cmp
bound
dec
movsb
sahf
out
and
sub
dec
cmc
das
jb
adc
outsb
fs
fadds
xor
xchg
jecxz
sbb
lahf
jecxz
cmp
test
cmp
mov
jne
pop
jecxz
add
xor
int
in
ss
mov
leave
push
mov
jle
in
add
movsb
xchg
outsb
ret
sbb
lds
imul
sub
xchg
in
aas
inc
add
and
cmp
cmp
dec
call
lock
frstor
into
jmp
push
aad
mov
xchg
and
jbe
imul
ss
dec
fsubrs
cli
mov
call
cmpsb
decl
push
ret
cmp
js
out
sbb
ljmp
dec
dec
push
and
or
mov
fs
dec
sbb
inc
cld
sbb
popf
sbb
jmp
and
jnp
xchg
push
mov
mov
sub
pushf
dec
std
pop
jecxz
and
xchg
std
adc
fisubl
and
mov
cli
out
push
hlt
jno
movsb
out
cmp
and
addr16
cmc
dec
push
nop
and
inc
dec
push
jl
ds
ljmp
loope
add
lret
shlb
mov
xor
dec
inc
xor
es
or
xchg
loop
dec
lds
jmp
jg
in
test
stc
loopne
xchg
insb
sub
dec
je
mov
nop
and
add
insb
inc
pop
movsl
cmp
test
push
or
pop
sub
addr16
insl
xlat
rcll
mov
inc
repz
aaa
or
xlat
dec
sub
pushf
or
lods
call
es
outsl
cmp
sub
jno
mov
pop
push
shll
mov
pop
loope
add
mov
aas
sub
rsqrtps
roll
sub
jo
jmp
jno
in
sub
add
and
pop
mov
jg
jns
inc
dec
not
xor
pushf
sti
in
dec
scas
fwait
out
dec
loop
cli
lret
orb
or
call
adc
faddl
xchg
flds
jg
ret
je
icebp
add
and
pop
push
mov
inc
mov
mov
or
sbb
mov
sbb
xchg
cmpsb
hlt
mov
loope
insl
in
nop
sub
mov
mov
cmp
mov
or
out
std
push
lret
xor
lahf
sahf
imul
mov
faddp
mov
fldenv
jne
arpl
pop
orl
xor
push
daa
add
aad
or
in
inc
lahf
clc
imulb
std
nop
and
nop
dec
movsl
sahf
lods
fistpll
lret
movsl
aam
cltd
int
sub
push
test
push
inc
clc
outsb
and
divb
insl
lock
aam
cli
pop
stos
push
sbb
lods
jmp
jno
cmp
out
mov
xor
dec
xorl
sahf
pop
push
shl
stc
mull
out
mov
shrl
jg
loop
dec
mov
or
testb
cltd
in
nop
outsl
aas
ja
call
or
ret
roll
xor
or
mov
inc
xor
jae
jecxz
push
mov
sarb
mov
and
dec
and
aam
test
jno
fldcw
xor
mov
imul
bound
pop
mov
mov
jns
sub
dec
outsl
dec
and
ret
dec
sub
and
les
insb
mov
mov
imul
clc
dec
jp
movsl
outsb
idivl
mov
rorl
mov
xor
jmp
daa
fstl
sbb
jl
sub
data16
sbb
test
xlat
mov
dec
jp
pop
xor
mov
dec
lock
xor
lods
and
insl
pop
and
cmpsl
and
mov
je
xlat
lahf
scas
inc
movsb
jge
repnz
mov
mov
xor
in
out
and
xchg
pop
adcl
push
ss
cmp
pusha
in
pop
fimuls
sub
loop
jp
sub
push
lea
jmp
cmpb
outsb
sarb
pop
ret
sbb
mov
adc
mov
jmp
leave
lods
data16
or
mov
push
and
push
cltd
xchg
lds
sbb
idivl
fcmovb
fsubrs
pop
jle
js
jge
or
and
cli
fdivr
inc
push
pop
pop
in
push
popf
pop
sub
loope
and
xchg
or
sub
sub
mov
inc
loope
dec
mov
mov
dec
and
scas
cltd
aad
inc
pusha
in
mov
dec
xchg
pop
mov
mov
mov
or
jecxz
ja
rcl
sbbb
inc
mov
and
pop
and
xchg
mov
mov
add
mov
xor
adc
adc
mov
mov
pop
mulb
ja
pop
mov
mov
enter
jge
xchg
test
mov
dec
pop
push
in
or
aad
addl
mov
adc
popf
or
enter
jbe
mov
add
mov
cmp
inc
and
daa
lea
mov
sbb
xchg
cmc
icebp
jae
rclb
push
cli
outsb
pop
lock
insl
jmp
push
push
pop
sbb
cmp
ret
gs
aam
lcall
imul
test
adc
mov
fldenv
mov
pop
cltd
dec
ja
mov
jae
pop
sub
xchg
sbb
rorb
decl
div
mov
cld
out
outsl
lahf
sub
les
cld
cmp
add
faddl
jno
mov
push
in
scas
enter
ficoms
push
sub
orl
cmpb
clc
fstpl
xor
cmc
and
and
call
sbb
dec
cmp
loope
fcoml
movsb
pop
dec
loop
cld
lahf
mov
pushl
sub
xchg
sub
sahf
add
mov
lods
testb
out
jb
popa
outsl
add
jo
add
lods
fwait
xor
cmp
test
dec
aam
sub
pop
push
repnz
aas
sub
push
jge
movsb
arpl
ss
xchg
ss
and
rclb
cld
rcrb
loopne
ret
inc
sbb
and
lds
mov
push
and
dec
test
shll
inc
mov
std
xchg
cs
popa
add
jns
and
or
pop
and
rclb
xchg
adc
call
repz
rorb
mov
xor
imul
hlt
mov
fs
and
pop
dec
xchg
dec
jne
pushf
ffree
sub
jl
aad
repz
movsb
int
mov
lea
cmp
int3
stos
emms
add
sbb
cmp
xchg
clc
dec
dec
shr
dec
enter
adc
insb
cltd
sbb
cmpsl
das
lret
mov
jmp
jae
in
cmp
inc
push
xchg
mov
pop
je
and
cmp
test
imul
int3
cwtl
nop
mov
jb
push
cbtw
sti
mov
xchg
jg
cmc
ds
mov
sarl
outsb
jns
lods
movsbl
out
pop
nop
sar
xor
mov
xchg
mov
loop
jno
loopne
and
adc
out
push
outsb
mov
out
arpl
fwait
mov
test
dec
adc
pop
mov
mov
push
jg
jbe
xor
loope
test
xchg
clc
sub
push
dec
mov
stc
add
icebp
jl
pusha
test
jb
xchg
push
mov
out
pop
mov
leave
inc
movsb
pop
in
test
cmpsb
fisubs
jo
jecxz
pop
mov
jae
or
out
mov
and
mov
or
mov
scas
mov
pop
fisubl
inc
xor
and
sub
stos
jae
int3
movl
scas
loope
hlt
adc
and
rcll
out
jecxz
jae
jbe
lds
ja
and
adc
mov
inc
mov
sub
fiadds
mov
loope
jo
push
jg
nop
mov
sahf
notb
xchg
roll
les
and
fimuls
pusha
andb
cmp
sub
mov
imul
mov
adc
cmp
dec
outsb
mov
jne
cmp
push
scas
loop
or
das
std
aam
andl
test
fdivl
xor
inc
rcll
in
mov
jg
in
xchg
or
sbb
jg
dec
repnz
pop
xchg
push
mov
test
adc
xchg
loop
inc
adc
jns
and
incl
mov
fwait
aaa
or
xchg
add
arpl
aam
mov
xor
orl
cwtl
or
test
adc
cmp
jne
cmp
mov
jno
mov
and
sarb
sahf
outsb
cli
xor
cmp
rolb
iret
adc
jp
sub
adc
cmp
mov
or
hlt
mov
sub
lret
push
aam
fdivs
jnp
leave
sub
xor
add
scas
sub
pop
nop
cli
sub
fisttpll
mov
sub
lahf
jmp
add
xchg
push
nop
cmp
sahf
inc
test
xor
out
rcll
aaa
scas
loope
jns
out
sub
daa
inc
clc
test
test
insb
inc
mov
fists
and
lock
repz
into
iret
outsl
sbb
aaa
pop
push
subl
mov
test
xchg
stos
adc
jge
and
or
lds
std
negb
mov
in
ret
mov
lods
shlb
mov
cmp
mov
mov
ljmp
sub
pop
sahf
ror
ds
sub
addl
sub
push
ds
lods
jp
inc
les
arpl
out
loop
and
mov
hlt
hlt
lcall
lods
repnz
jb
cmp
add
cmovg
pop
adc
adcl
push
mov
insl
push
pop
in
cmpsb
and
jnp
call
xchg
and
push
mov
jae
push
outsb
xchg
in
jge
cmp
das
pop
lock
mov
mov
push
in
inc
fists
iret
lea
outsl
ds
jne
int
clc
movsb
adc
repnz
ja
out
lods
add
xor
das
xchg
and
frstor
jecxz
popa
nop
xchg
decl
adc
popf
ljmp
imul
bound
scas
inc
ss
mov
push
ss
xorb
scas
in
pop
ds
xchg
mov
in
xchg
lcall
pop
movsl
xchg
mov
ret
out
xor
xchg
mov
pop
stos
xchg
cmp
outsl
iret
jae
add
out
inc
push
call
in
pop
pop
pop
push
pop
popf
mov
stos
mov
dec
shlb
ja
aam
sbb
push
ret
lret
cmp
repz
jne
push
mov
testb
jno
lock
cmp
lds
das
add
sub
pop
sbb
adc
or
sub
in
cli
xor
push
ja
xor
mov
adc
fcmovbe
dec
adc
mov
inc
in
stos
popa
jg
sub
sub
daa
into
xor
cli
cmp
xchg
cmpsb
xchg
mov
insb
rorb
int3
shll
enter
mov
jae
jns
add
in
mov
mov
lret
imulb
stc
jno
jmp
push
cmp
adc
aad
mov
inc
loopne
lea
data16
aad
xorb
insb
mov
popa
orl
dec
xor
sub
ret
ljmp
je
add
and
cli
xchg
push
shl
cld
mov
push
pop
fsubr
mov
mov
cmp
das
arpl
mov
xchg
cmp
mov
js
xchg
hlt
push
cmovle
mov
sahf
adc
xor
push
ja
pop
mov
outsb
gs
mov
push
fld
jle
mov
shrl
push
jno
cmp
mov
aaa
sbb
std
xchg
mov
mov
xchg
jecxz
add
sbb
cmpsl
jne
inc
and
nop
ret
mov
jle
sub
jmp
xchg
popa
stos
mov
aaa
dec
fidivrs
movsb
in
push
xchg
aad
and
jecxz
and
or
das
in
pop
das
dec
mov
inc
test
push
inc
push
sub
xor
cli
jle
inc
test
and
push
stos
loopne
aas
mov
dec
xchg
dec
adc
sti
lods
cmc
pushl
pop
jle
sub
jne
je
cmp
inc
or
pop
pop
dec
dec
popf
jle
pushf
out
sahf
pusha
jp
in
add
je
insl
jge
add
test
dec
lcall
movsb
popl
pop
aad
sbb
fsubrl
lods
add
sub
jo
sub
out
cmp
leave
movsb
arpl
adc
out
add
popf
pop
sarb
ljmp
xchg
and
in
data16
add
sub
pop
aam
add
jp
cmp
outsl
mov
movsl
es
cmpsb
and
jo
mov
pop
push
outsb
in
mov
pop
xchg
sbb
pop
push
sbb
pushf
mov
into
repz
movmskps
dec
lret
sub
dec
add
mov
mov
enter
sbb
push
xchg
mov
lea
pop
push
xor
adc
xchg
xlat
jae
lds
out
inc
or
std
jne
dec
call
sbbl
mov
dec
push
add
xor
icebp
data16
mov
or
insl
cwtd
inc
adc
inc
std
mov
icebp
mov
aad
dec
ljmp
leave
ja,pt
pop
mov
inc
icebp
cmp
adc
inc
xor
cmp
mov
in
xchg
or
mov
ficomps
pop
test
in
std
xchg
add
push
jo
dec
mov
pop
daa
and
pop
pop
test
jge,pt
and
fisubrs
add
rcl
sarb
lret
mov
cmp
xchg
scas
mov
jge
push
aad
cmp
fwait
mov
fsubl
clc
sahf
data16
jmp
sub
stc
call
push
pop
rcr
scas
insl
lods
sub
xchg
inc
jbe
popa
inc
xchg
gs
sti
cmc
fnsave
mov
outsb
jns
in
sbb
imul
xchg
les
pop
fldl
xchg
fs
push
mov
pop
push
push
test
mov
in
loopne
in
mov
imul
fmuls
imul
dec
fnstenv
pop
fadd
mov
rorl
push
pop
sub
fmul
outsb
addl
or
xor
xchg
sbb
sbb
scas
adc
test
iret
call
lock
inc
sbb
push
xor
sahf
add
popf
mov
and
cmp
jg
jb
add
cmc
or
add
popf
jno
pop
sub
and
pop
rcr
pushf
push
test
in
dec
or
lcall
push
add
cwtl
mov
shrl
movsb
lds
push
stos
int
sbbb
xor
xchg
movsl
imul
mov
dec
pop
mov
imul
xchg
enter
test
or
jecxz
jecxz
mov
fbld
xlat
dec
arpl
fsubrs
dec
int
or
push
mov
test
mov
test
lcall
subl
or
sahf
mov
xchg
movsl
test
push
incl
or
in
xor
call
push
cwtl
inc
jnp
rep
cmc
and
sub
sbb
ret
lcall
cmp
xor
sbb
or
or
fs
push
push
xor
pop
movsl
mov
push
fst
shl
dec
mov
cmp
mov
mov
jl
sub
xchg
adc
imul
cmp
frstor
mov
stos
int3
fs
ror
mov
mov
sbb
xor
and
mov
inc
in
dec
and
jecxz
out
insl
das
pop
push
pop
fbstp
cwtl
and
cmp
dec
pop
movsb
in
ret
or
test
pop
subl
repnz
loopne
pop
and
aad
sbb
add
dec
cwtl
std
pop
lods
fists
cmp
negl
push
int3
jbe
les
add
adc
std
mov
test
mov
sbb
inc
movsl
push
mov
adc
dec
imull
ret
xchg
sub
lahf
sbb
sub
out
mov
nop
xchg
imul
pusha
xchg
jp
or
mov
sub
pusha
imul
mov
and
stos
roll
lret
nop
cs
cmc
sub
cld
push
clc
push
or
inc
sbb
lods
ja
into
fwait
dec
scas
into
lods
fimull
lds
not
in
sbb
inc
jg
iret
stos
stos
mov
fsubrs
push
dec
repz
sbb
cmp
into
stc
sbb
mov
jnp
push
in
inc
out
repnz
push
jg
mov
popa
pop
in
clc
fadds
in
out
fidivrs
mov
cmp
es
sub
out
add
sub
rcrl
mov
fisubs
and
ret
daa
lret
mov
inc
sub
popf
sub
aad
dec
dec
in
mov
daa
jg
cmp
pop
inc
addl
mov
cmp
push
ds
dec
mov
sbb
lret
jp
add
inc
fsubl
push
pop
pop
mov
adc
insb
sbb
lods
hlt
xor
cld
xor
cmp
pop
lods
xor
into
inc
sub
int3
pop
arpl
divb
andb
cmp
mov
inc
cmc
iret
sub
cmp
pushf
push
popa
bound
xor
jge
leave
testb
mov
leave
sub
rcl
sub
stos
mov
sbb
sub
dec
push
rorb
and
out
inc
mov
les
add
mov
repnz
arpl
sub
xor
push
sub
aam
lcall
div
pop
pop
imul
mov
nop
sub
push
and
sahf
ds
add
shlb
mov
cmp
int3
jno
lahf
arpl
xorb
adc
insb
push
pop
cltd
cs
fstps
adc
mov
adc
xlat
inc
scas
ret
enter
mov
pop
std
inc
fucom
inc
pop
stc
outsl
cmc
lock
mov
xchg
dec
xchg
and
stc
mov
es
aam
jb
cmc
lock
addr16
dec
movsl
mov
push
je
ror
stos
adc
cmp
add
and
push
xchg
jns
pop
sub
adc
es
cmpl
sbb
les
dec
and
in
and
push
sub
mov
pop
or
dec
jp
dec
rcl
ljmp
fcmovbe
mov
jbe
mov
pop
xchg
aad
mov
mov
ret
clc
sub
push
stos
cltd
es
or
movsl
pusha
sti
cmc
mov
cmc
pop
loopne
lods
adc
cmp
inc
adc
fnstcw
push
std
mov
xchg
jmp
lock
inc
add
stc
outsb
mov
sbb
cmp
and
xor
movsb
mov
push
xor
xor
nop
pop
inc
xchg
fxch
pusha
ficomps
inc
push
insl
imul
mov
call
xchg
icebp
loope
push
outsl
mov
push
mov
aad
sbb
ss
jle
bound
into
ja
pop
ja
aad
icebp
ficoms
jnp
cmp
push
sub
fdivl
add
dec
inc
gs
repz
dec
sti
mov
popf
stos
and
ret
pushf
adc
test
pop
loopne
insb
cs
test
test
rol
sbb
pop
mov
aam
jge
dec
pop
aas
pop
sti
sbb
leave
pop
sbb
arpl
xchg
bound
xchg
xchg
out
imul
inc
sub
test
fnstsw
xor
clc
sti
pushf
push
jnp
pop
aam
sar
call
xchg
rclb
xchg
cmp
jb
pop
inc
cs
pop
mov
and
in
je
jns
cld
cmp
xchg
sbb
in
das
lock
pop
or
outsl
mov
inc
popf
sar
je
add
inc
adc
not
mov
ja
mov
inc
repz
cmp
ret
clc
sub
in
ret
aaa
or
sbb
cmp
test
test
pop
inc
xor
jns
fdivrs
fsts
les
leave
jae
enter
call
xor
mov
sub
scas
aas
scas
mov
iret
scas
dec
cld
mov
pop
cmp
popf
fisttpll
cs
sub
mov
insl
or
or
add
stc
fbstp
in
jmp
inc
jno
stc
push
jp
push
hlt
in
iret
lcall
mov
cltd
cmpsb
mov
xor
test
dec
mov
add
cmp
lahf
in
inc
adc
cmc
movsb
cmpsb
std
push
shlb
pop
rorb
pop
dec
pop
int
sbb
mov
mov
sahf
adc
cltd
dec
push
mov
add
sub
mov
fs
ror
mov
dec
idivb
xchg
popa
in
jbe
mov
cmp
sub
jecxz
in
xchg
add
shl
push
pusha
cli
or
loopne
repz
sub
inc
dec
and
adc
jecxz
mov
test
jge
je
and
push
out
mov
dec
fistpll
push
push
inc
mov
fwait
and
ja
loop
mov
pop
stos
jno
xchg
sbb
dec
loope
push
stc
jnp
push
cwtl
dec
xor
lods
rcll
pop
cld
sub
push
dec
jge
push
mov
adc
ja
pop
mov
adc
pop
jne
jp
cltd
and
lods
sbb
push
jns
es
les
in
xchg
or
call
xchg
cmpsl
daa
mov
fs
test
xor
jle
mov
cmpsl
enter
lcall
rol
mov
push
xchg
and
dec
cmpb
repz
lods
out
movups
lds
pop
rclb
cmpsl
mov
imul
call
hlt
dec
or
push
jmp
sbb
nop
fsubs
stc
div
shlb
loopne
mov
ret
shrl
movsb
shll
xchg
add
cmpsl
mov
cmp
into
lock
mov
jnp
sub
scas
stos
stos
call
dec
add
pop
dec
je
lcall
fs
xchg
ds
cmp
and
cwtl
and
in
test
or
dec
add
sti
les
add
lahf
pop
push
add
testl
xchg
in
adc
adc
les
cmpsb
and
inc
stc
setge
or
xchg
rolb
adc
inc
jne
mov
orl
jne
in
sub
je
xor
push
pmulhuw
sub
data16
scas
mov
stos
fists
divb
cmp
sub
dec
jecxz
sub
inc
stos
jne
jae
cmp
mov
mov
mov
movsl
pop
in
dec
stos
fdivl
clc
sub
test
stos
xor
inc
imul
mov
mov
pushf
mov
inc
push
ss
mov
bound
jg
loope
or
mov
mov
pop
inc
mov
mov
sbb
xchg
enter
es
push
stc
xchg
sub
insb
iret
pop
adc
inc
xchg
xchg
test
and
cld
fnstenv
sub
add
mov
cmp
xchg
in
pop
mov
ret
jnp
jge
pushf
test
dec
jp
mov
cmp
adc
fidivs
sub
jp
gs
cmp
lds
divb
gs
enter
mov
outsl
or
xor
pop
add
sbb
aas
notl
xor
addl
test
andl
and
fcmovnu
hlt
and
fimull
les
aas
jmp
aam
xchg
dec
int
rcl
sub
cmpsl
sub
mov
mov
push
cld
jmp
mov
pop
adc
or
dec
nop
sbb
push
push
sti
lcall
dec
sub
mov
jmp
divps
mov
sqrtps
xchg
mulb
add
out
ss
ds
orb
push
int3
sbb
or
mov
mov
cmp
dec
ret
sub
cld
cmp
jmp
js
sbb
sub
sub
test
sub
out
xlat
and
push
sar
fcompl
into
ljmp
ja
xchg
lock
mov
sub
inc
lea
mov
lea
sub
xor
outsb
stos
cmp
mov
andb
jecxz
jns
gs
sub
push
or
push
sbb
and
fidivrl
stos
dec
lods
insb
add
cli
cmpsl
pop
mov
inc
or
pusha
aas
cmp
dec
imul
sbb
mov
out
bswap
lcall
pop
fsubrs
dec
mov
mov
rorl
pop
adc
jns,pt
jbe
lods
es
dec
or
loope
sub
adc
cmp
icebp
jmp
sbb
decb
hlt
sahf
xor
jmp
mov
test
js
fisttps
pop
fdivrs
mov
adc
lret
cmp
mov
inc
cwtl
cli
les
sahf
in
lcall
mov
jg
sbb
hlt
pop
xor
inc
movsb
or
xchg
or
inc
and
push
inc
mov
shlb
push
ss
mov
daa
cmpsb
and
les
push
sub
dec
nop
out
lea
xchg
aad
lea
cmp
cli
mov
rcr
pop
imul
adc
negb
xchg
dec
cmpsb
test
add
xor
or
in
scas
cmpsb
sub
pop
lret
aas
lcall
cmovnp
cmp
pop
in
stos
stc
daa
mov
and
rclb
in
aad
push
lcall
sub
fistpl
push
sbb
mov
push
clc
inc
sahf
data16
adc
push
in
into
dec
mov
adc
mov
sbb
insb
cwtl
add
inc
fdivs
push
test
sahf
push
xchg
aad
bound
push
fisubrs
mov
rcl
mov
loop
ret
jl
ret
std
mov
sub
xchg
test
mov
jnp
outsl
jo
std
test
jp
adc
das
xor
adcl
cmp
int3
mov
cmp
fisubrl
dec
ret
enter
xchg
icebp
filds
jmp
mov
icebp
jo
aaa
rorb
xchg
mov
mov
ret
cmp
push
inc
notl
mov
add
add
fmull
fs
xchg
push
xlat
cmp
add
notl
lcall
hlt
rcrl
popa
std
fsubr
mov
mov
ljmp
in
xchg
or
imul
adc
into
leave
mov
adc
test
in
outsb
inc
cmc
rclb
xor
mov
bound
pop
inc
pop
pop
scas
shl
lret
daa
cmp
pop
insl
xchg
mov
adc
leave
xchg
jg
pop
push
sub
lock
mov
adc
stc
mov
dec
xor
and
fsubs
insl
and
and
insl
mov
in
adc
mov
cltd
mov
mov
ja
idiv
in
xchg
in
mov
int3
jl
xchg
cmp
mov
movsl
mov
xor
add
cs
test
push
pop
mov
fcoml
call
xchg
js
push
sbb
sub
in
ss
and
test
or
lea
sarb
jnp
add
test
insb
pop
aam
loope
popa
or
sti
cmpsl
test
mov
daa
sbb
popf
jae
xchg
fld
outsl
inc
lcall
out
std
je
inc
test
daa
scas
call
or
cwtl
sbb
mov
test
inc
add
push
push
add
fisubrs
es
sub
jg
inc
push
ret
mov
clc
mov
jns
and
movsl
popf
ret
js
sbb
arpl
dec
fbstp
movsl
jp
mov
mov
orl
idiv
cwtl
push
out
fwait
sub
xchg
xor
sarb
shll
fs
lds
fstps
in
imul
loope
xchg
out
data16
iret
into
xchg
xor
xor
lock
out
outsl
stc
cmp
add
pop
pop
sub
push
clc
and
pop
mov
lods
inc
lea
mov
lret
xlat
xchg
cwtl
jno
in
adc
mov
aas
mov
inc
or
xchg
loop
and
dec
outsl
dec
inc
xor
push
and
mov
sub
sbb
dec
xchg
aaa
outsb
adcl
test
leave
cmc
mov
popf
repz
adc
push
mov
rolb
lret
sahf
pop
rorb
popf
adc
mov
xchg
inc
es
aas
sbb
scas
cmpsl
roll
mov
lea
call
fidivrs
mov
push
xchg
cmc
call
inc
add
fsubrp
dec
xchg
dec
testb
addr16
fs
adc
add
testb
jecxz
add
and
loopne
xchg
xchg
testb
repnz
pushf
mov
sub
dec
rolb
pop
or
mov
xchg
mov
dec
inc
test
adc
out
push
ret
push
std
outsb
pop
out
jbe
imul
xchg
jge
inc
mov
rcrl
xor
pop
pop
daa
iret
movsb
push
sub
mov
adc
int3
pop
xlat
jno
stos
frstor
fldl2t
inc
pop
mov
int3
mov
inc
inc
jae
popa
fstpt
cmp
jmp
imul
out
shrl
jno
sbb
iret
jmp
jp
and
mov
add
or
mov
imul
xorb
sbb
dec
fimull
or
xchg
cs
xchg
sahf
mov
das
lcall
and
aas
or
repnz
aaa
movsl
enter
cmp
cli
push
daa
mov
dec
mov
iret
test
stos
mov
arpl
fcmovne
jno
jl
lahf
adcl
lcall
test
int3
jbe
xchg
fldl
clc
xorb
scas
loopne
mov
xchg
and
xlat
xor
xchg
jmp
pop
test
pop
popf
xor
inc
js
pushf
push
dec
sub
loop
fldt
mov
or
add
xor
ret
cwtl
add
pop
stos
jecxz
es
scas
iret
xchg
stos
pop
cmp
xchg
mov
pop
adc
notb
lds
jge
rorb
adc
pop
fisttps
mov
shrb
ret
pop
dec
stc
ficomps
das
or
mov
and
scas
jge
aad
les
or
xlat
jno
push
testl
add
lret
push
or
iret
pop
push
push
andl
sub
lock
out
lds
pop
leave
incl
cltd
lods
add
in
pop
mov
out
add
mov
fnstsw
sub
lods
sub
cmpsb
int
mov
mov
adcl
mov
sarl
das
stc
loope
cmp
cmp
add
mov
popa
dec
test
lods
sbb
pop
out
pop
lods
pop
and
dec
iret
fnstsw
push
call
andb
or
xor
adc
xchg
loop
outsb
dec
lds
das
ret
movsb
push
sbb
mov
inc
xchg
ljmp
pop
sub
jmp
inc
mov
sub
es
add
out
inc
dec
mov
pop
int3
cmp
jnp
xor
add
cmovbe
push
test
test
mulb
bound
jp
shlb
pop
aam
pop
sbb
push
mov
xchg
jg
stos
pop
dec
sub
cmp
ja
add
mov
xor
xlat
shrb
dec
jne
inc
cmpsb
icebp
mov
jg
push
sub
mov
mov
stos
pop
in
shl
mov
jge
sbb
mov
ret
imul
jmp
dec
imul
sub
stc
pop
outsl
es
mov
cmc
loop
or
rol
lea
clc
mov
dec
xor
sub
pop
popa
dec
jns
mov
nop
movb
inc
lock
mov
xor
cmp
int3
loope
test
jae
mov
enter
xor
xchg
js
xor
fwait
push
add
mov
ja
movsb
lahf
dec
cmp
mov
jl
sbb
mov
or
adc
lea
sub
js
dec
arpl
mov
imul
test
mov
jno
inc
gs
xchg
dec
fyl2xp1
aas
fsubr
pop
out
cmp
rcll
lcall
pushl
sub
aas
pop
cltd
fldl
push
mov
lods
fwait
or
sub
leave
aam
in
pop
inc
mov
sbb
sub
out
jns
test
xlat
addr16
in
push
sarb
les
sub
loopne
cli
inc
rorb
inc
rcrb
cmp
out
shl
mov
iret
cmp
jb
lcall
xor
mov
mov
les
adc
outsb
inc
dec
orl
loopne
shrb
loopne
push
sti
scas
std
xchg
int
xor
jne
inc
cmc
mov
test
lock
xchg
rcll
fisubrl
mov
gs
cwtl
sbb
scas
push
clc
loop
mov
mov
mov
push
add
cmp
and
adc
push
or
imull
pushf
sbb
mov
lods
test
out
shlb
push
sbb
fdiv
sbbl
loopne
mov
lods
repz
push
sub
subb
lret
rclb
xorl
jne
add
and
hlt
mov
pop
add
xchg
mov
insl
mov
dec
push
out
addr16
jo
sub
mov
cmp
repz
jae
sbb
hlt
stos
loop
dec
cmc
stos
cmc
xor
pop
xor
or
gs
cmp
jno
push
sub
push
and
push
cli
cwtl
lret
push
lret
pop
push
sub
push
lret
stc
gs
push
xor
push
jnp
aam
xchg
ret
jne
add
pop
and
mov
sbb
adc
movsl
mov
lahf
test
rcrl
inc
clc
fsubrs
in
jl
sbb
lock
xchg
xor
in
cmp
int
aas
dec
cld
push
into
nop
pop
fimuls
sbb
pop
inc
icebp
fwait
movb
stc
mov
jb
xchg
insl
dec
add
mov
mov
dec
xor
in
or
rorl
mov
lods
cmp
popf
cmp
leave
inc
rolb
xor
sub
das
and
push
test
sbb
lods
ret
movsb
fucomi
out
pop
out
push
in
mov
mov
xchg
pop
mov
pop
stos
push
enter
je
loope
aad
push
add
or
pusha
pushf
push
lods
adc
in
sub
std
adc
das
cmp
cmp
cmpsb
mov
add
clc
adcl
mov
fs
xchg
jnp
outsb
inc
sub
xchg
xchg
xchg
insl
dec
test
cmp
bound
mov
js
insl
or
fs
adc
xchg
shrl
mov
sub
into
fucom
cwtl
xlat
and
dec
je
lds
ret
pop
sub
shrb
pop
xchg
inc
lret
in
insl
cmp
icebp
out
test
lahf
xchg
add
bound
xchg
cwtl
pop
mov
or
mov
push
mov
sbb
je
jne
jg
loope
fwait
scas
fcomp
repz
push
mov
leave
lds
fsubrl
sub
mov
mov
dec
hlt
lods
mov
push
or
push
mov
cmp
jg
xchg
jnp
inc
daa
ljmp
or
icebp
sub
cs
and
pop
push
sbb
popa
xchg
sahf
mov
sbb
inc
in
xchg
dec
push
adc
sti
jmp
mov
cmp
dec
sar
push
mov
movl
and
fmuls
sbb
outsb
push
divl
adc
mov
repz
mov
arpl
push
cmpl
xor
mov
fisttps
jg
rcrb
pusha
pop
nop
mov
cmp
ds
enter
sbb
pop
imul
pop
push
push
xchg
mov
push
jns
popa
in
idivb
or
mov
adc
push
mov
jl
mov
xchg
adc
popa
aam
fs
vmovlps
aam
cmp
lods
bound
xchg
jbe
lods
and
jmp
call
sbbb
setg
jae
pop
leave
out
cmc
jo
mov
cli
xor
jp
dec
sub
aad
cmp
imul
jg
jns
xchg
scas
pop
adcb
jae
stc
rorb
out
mov
pop
icebp
sub
ret
inc
cmp
cmp
mov
ror
sarb
pushf
idivb
iret
dec
aad
mov
cs
pop
mov
lods
loope
add
test
imul
jg
lods
mov
or
pop
sub
sti
hlt
lods
arpl
into
push
jb
ss
inc
movsl
sbb
cmc
ficoms
mov
cld
pop
cmp
insb
xor
sbb
mov
andl
xor
mov
and
jle
add
fcomp
xchg
sbb
jp
push
mov
mov
dec
add
mov
insl
adc
jmp
mov
bound
sub
xor
cmp
push
pop
mov
and
ret
aas
sbb
loopne
dec
shlb
sarb
shrb
mov
idivl
xchg
mov
mov
push
or
in
aam
lods
mov
mov
loopne
sub
xor
stos
fwait
xchg
insl
add
test
dec
xor
mov
xchg
adc
xchg
mov
mov
cmp
lret
sbb
ret
inc
dec
xchg
in
cmpl
add
jmp
and
insl
in
sub
js
xchg
inc
or
cmc
mov
sbb
pop
xorl
ljmp
loopne
or
inc
rorb
addr16
inc
movsl
sub
rorl
mov
pop
xchg
pop
xor
mov
push
cmp
insl
xchg
stc
dec
jbe
ret
mov
lock
pop
outsb
push
test
lock
stc
xor
js
push
das
imul
stc
or
push
pop
jae
xchg
pop
lds
cltd
sbb
or
sub
cmp
cmovle
push
shl
repnz
lahf
jle
ret
rol
insb
jp
ret
fmul
sbb
jae
push
into
mov
xor
fisttpl
xor
sbb
add
fldenv
push
scas
scas
jno
stos
bound
sbb
shrl
js
bound
std
jmp
inc
imul
into
mov
fisubl
out
mov
lds
mov
mov
and
stos
loope
lds
lahf
stos
add
push
cwtl
dec
sbb
stc
inc
adc
mov
mov
cld
fwait
enter
outsl
jb
sti
xchg
mov
adc
data16
xor
mov
aam
popf
sub
push
dec
xchg
inc
repnz
xchg
push
insb
mov
sub
outsl
fdivrs
or
or
xor
icebp
mov
subb
push
cmp
jle
jg
lods
adc
jne
mov
adc
add
lock
pop
inc
mov
push
shrl
cmp
out
mov
fwait
cmp
push
in
jno
je
jae
and
lds
sti
into
jnp
outsl
popa
add
loop
call
and
and
loop
jnp
sti
cmpl
jecxz
fnsave
pop
cmpsl
sub
mov
push
sub
repnz
out
jb
int
popa
xor
ss
inc
clc
cltd
sbb
sbb
ja
pop
and
inc
sti
inc
pop
fcompl
bnd
xchg
or
mov
cmp
mov
xchg
push
mov
sarb
scas
xor
inc
lods
push
in
lods
aas
sub
mov
xor
xchg
xor
out
push
add
and
repnz
in
inc
in
and
mov
xchg
push
out
xor
jmp
mov
cmc
add
jno
inc
and
pop
lds
push
adc
movsl
out
or
jg
insb
cltd
lret
stos
outsb
pop
and
hlt
sub
inc
cmp
sbb
fimull
cmpsl
loopne
push
std
mov
xchg
imul
stos
sti
xor
xchg
and
xchg
hlt
push
mov
cmp
je
xchg
hlt
shl
cld
mov
stos
rcrb
add
mov
push
faddl
lods
in
punpckhbw
movsl
mov
lods
fs
mov
cmc
add
and
inc
aad
and
adc
xchg
les
adc
out
call
mov
xchg
lret
fcmovnb
fnstsw
sub
push
mov
in
push
mov
call
mov
daa
mov
jp
mov
xchg
repz
cs
ljmp
icebp
mov
lea
ret
lds
mov
fsts
pop
aas
mov
push
loop
int
repz
dec
jp
and
cmp
shl
sub
cmpsb
mov
xchg
push
jo
push
jecxz
out
xlat
int3
ds
cmp
test
xor
imul
imul
xlat
push
mov
sbb
adc
push
xchg
xor
in
sub
fcomip
mov
lahf
cmp
popa
daa
push
fists
fcmovnu
test
jno,pn
mov
mov
adc
outsb
and
sub
mov
jg
test
dec
or
pushl
fnstenv
repz
dec
aad
adc
das
cld
call
movsl
and
push
mov
lret
inc
jno
test
js
cmp
pop
stos
stc
sbb
pushf
sbb
mov
cwtl
movsb
fcomps
xor
mov
int
jnp
mov
adc
into
call
fwait
mov
dec
insb
adcb
mov
dec
sub
sub
jnp
nop
les
xor
jmp
dec
lcall
lcall
outsb
and
push
xor
fldl2t
or
or
xchg
iret
pusha
xchg
out
out
jbe
push
xor
out
imul
mov
imul
jle
xor
in
hlt
push
fistl
xchg
pop
leave
push
mov
push
lds
sbb
xor
je
mov
nop
into
adc
ds
push
or
dec
xor
push
sbb
rcrl
sub
fidivrl
mov
adc
cmp
cmp
pushf
mov
test
cltd
cwtl
icebp
mov
test
std
dec
cmp
ffreep
push
mov
adc
push
ja
push
xchg
fcoms
loop
xchg
mov
or
adc
sub
fldcw
lcall
lock
adc
das
shrl
das
pop
adc
int
test
sti
stc
ds
sbbl
cmpsl
jo
mov
adc
aad
sti
push
push
inc
cmpsb
lods
loope
fbld
sub
ret
adcl
aam
xor
or
and
mov
sub
add
mov
aas
sub
or
pop
rolb
jbe
or
cwtl
loopne
xor
xlat
jo
mov
xchg
inc
les
cmpsl
dec
int
aam
push
adc
int3
int3
sbb
cmp
test
cmp
inc
push
push
aad
or
mov
jns
cmp
mov
mov
adc
ja
inc
out
repz
flds
lds
jo
repnz
cltd
cwtl
mov
mov
test
add
gs
dec
sub
xchg
mov
jbe
mov
sub
movsl
lods
fisubl
pop
cmc
stos
outsb
jecxz
iret
xchg
mov
ja
xor
mov
frstor
push
mov
mov
pushf
cs
mov
enter
in
mov
fldl
pushf
mov
mov
push
insl
push
push
mov
xor
sub
cmp
jno
mov
arpl
or
int
sub
fnstenv
push
jb
adc
es
sub
push
xchg
fsubr
test
pusha
cmc
stos
cwtl
movsl
sub
loope
imul
hlt
mov
jae
leave
mov
mov
or
js
mov
adc
cmp
popf
test
dec
xchg
imul
jl
cwtl
mov
rorl
and
xor
repz
stos
out
fnstenv
inc
pop
stos
orl
bnd
das
ds
push
mov
add
cltd
push
dec
pop
xor
and
rorl
xchg
xchg
sbb
stos
orl
popf
repz
imul
call
mov
loop
inc
adc
fsubrs
test
sbb
fmull
dec
or
inc
mov
jp
push
sub
mov
pop
and
push
add
xchg
and
cmc
insl
jmp
jb
gs
xchg
fs
ds
inc
inc
push
push
cmpsl
std
mov
mov
pop
fmull
lahf
mov
or
mov
cmpsl
dec
cmp
or
stc
shrb
insb
cmp
and
mov
adc
popf
in
sbb
mov
xchg
xchg
xchg
or
jl
jne
or
and
adc
jne
jmp
mov
jg
ret
mov
out
jne
aaa
dec
imulb
and
inc
hlt
or
dec
sub
jp
and
inc
rcrb
or
jg
shrb
stc
lods
inc
pop
outsb
mov
push
add
lret
xor
test
rol
dec
jae
mov
mov
xlat
pop
lds
aad
arpl
jmp
stos
std
xchg
push
lret
mov
xchg
or
jecxz
xchg
out
lret
daa
mov
pop
mov
data16
or
xchg
es
fldenv
scas
and
push
jno
out
mov
fistpll
call
sbb
and
dec
arpl
or
dec
lret
pop
int
mov
mov
popl
cmp
addr16
outsb
das
xchg
insb
daa
mov
adc
inc
jns
loop
push
fsubr
mov
cld
cmpb
scas
call
mov
mov
push
cmp
aaa
in
cmpsb
scas
in
icebp
jp
daa
sub
lods
mov
push
push
and
mov
enter
lea
jno
lret
pop
jne
adc
inc
push
xor
dec
out
out
jnp
enter
lea
or
bound
loope
mov
mov
mov
out
ret
add
cs
das
mov
stc
xchg
cs
out
push
and
sbb
mov
mov
out
mov
xor
push
fildl
add
fscale
lcall
icebp
mov
inc
out
stc
adc
mov
insl
jle
loopne
xlat
jecxz
xlat
sbbl
sarb
xchg
sub
pop
push
roll
ret
test
or
das
fwait
xor
call
rcl
addr16
lcall
fcomps
fs
pop
jge
push
aaa
sub
xor
xchg
mov
or
cmp
ret
adc
js
or
in
jle
push
inc
fcomip
ja
movsl
push
cmp
inc
xchg
sub
jno
ficompl
bound
or
je
jns
je
pop
daa
xchg
iret
sbb
add
test
push
cs
xchg
mov
cwtl
cmp
cwtl
test
jne
xlat
xorl
xorb
mov
dec
pop
lret
bnd
push
cmp
roll
pop
push
test
dec
loope
orl
mov
xchg
in
mov
popa
push
repz
jo
mov
xorl
jnp
shlb
or
int
fsubl
sub
cmp
mov
std
out
adc
pushf
cmc
nop
xor
jge
pusha
ds
dec
or
outsb
mov
sahf
jne
and
mov
xchg
adc
push
push
mov
sbb
sti
or
icebp
dec
and
push
sub
stc
jl
mov
push
scas
mov
dec
ja
adc
fcmovu
pop
xor
shl
jne
add
cmp
jne
mulb
add
mov
xor
xor
popf
sbb
sub
add
shr
jne
fisubl
out
jecxz
add
push
sub
sbb
or
cmp
push
mov
rcrb
les
pushf
mov
mov
fisttpl
jae
orb
sarl
mov
jge
aas
sarl
rcl
add
xchg
inc
sbb
rcll
dec
scas
stos
andl
dec
and
loop
jge
or
adc
push
nop
adc
ret
xchg
mov
and
mov
dec
aas
andb
and
out
repnz
xor
test
mov
fdivrs
js
mov
xchg
push
lcall
dec
fstps
xchg
adc
mov
dec
sub
out
add
fisubrl
stc
dec
fimull
pop
fadd
bound
xchg
outsb
lahf
inc
mov
out
popa
or
cltd
or
jp
insl
xchg
test
or
dec
sub
loope
pop
movsl
sarb
jge
lea
mov
out
test
int3
cmp
sbbl
leave
dec
sbb
jo
bnd
cmp
repz
pop
dec
std
mov
test
adc
call
nop
mov
mov
and
mov
aam
inc
cmc
insl
sub
ds
mov
outsl
test
out
out
pop
mov
jecxz
dec
fsubrl
rcrb
cmpl
mov
mov
pop
inc
call
cmpsl
mov
add
in
lea
daa
jp
adc
sbb
nop
xchg
push
fcmovnbe
andb
mov
mov
aaa
mov
popa
add
xor
and
data16
fistps
insb
js
into
sahf
jbe
or
scas
lods
cmp
xor
pop
popa
loope
arpl
inc
aas
out
cmp
and
enter
cmpsb
pop
rclb
ja
inc
in
jecxz
mov
mov
jno
sbb
nop
mov
sub
dec
cmpb
outsb
sub
inc
mov
sbb
ljmp
pop
mov
sub
mov
aad
adc
nop
mov
mov
pusha
sub
xchg
ljmp
outsl
jae
sub
adc
loope
inc
jmp
sub
scas
out
lahf
sbb
insb
sub
cltd
mov
scas
and
cs
mov
xor
and
fidivs
repnz
dec
or
dec
pop
int3
cmp
inc
movq
int3
pop
add
mov
movsb
inc
test
add
in
xchg
jb
dec
mov
mov
and
insb
and
insb
ficompl
jae
fbstp
test
sti
ret
and
dec
scas
test
or
mov
fisubrl
stos
xchg
dec
push
in
lret
imul
fwait
popf
lcall
dec
mov
cli
cmpsb
in
pop
or
shrl
dec
test
push
adc
cli
das
sub
cmp
adc
ret
cmp
pop
and
and
xchg
lock
pop
and
or
dec
xchg
mov
or
mov
and
pop
lret
cld
mov
push
xor
mov
ds
push
repnz
lret
inc
ds
stos
mov
into
repz
inc
mov
mov
jns
incl
arpl
lock
cmpb
inc
movsl
sahf
sbb
int3
mov
push
add
test
gs
testl
pop
shlb
cmp
stos
imul
fnstenv
cmpsb
popa
or
dec
xor
inc
int
sahf
decb
mov
xor
xchg
lret
fmul
inc
outsl
les
imul
fs
add
xlat
sub
mov
add
loope
inc
dec
stc
cwtl
mov
insl
xlat
push
int
push
push
push
push
test
mov
add
addr16
sub
std
ret
js
out
jl
faddl
mov
leave
mov
shll
xor
jne
xchg
sub
loop
fisubrs
sahf
ja
pusha
sbb
cld
fs
inc
lret
xchg
rclb
fdivrs
mov
popa
out
pop
out
mull
shlb
mov
inc
iretw
push
xor
decl
out
aam
daa
je
cld
jno
cmpsl
mov
fwait
dec
lock
cmp
stos
dec
mov
int
jg
rorb
push
lods
psubsb
mov
lret
xchg
movsl
sub
inc
mov
dec
xor
les
cmp
icebp
push
loopne
add
das
movsb
repnz
ss
jg
nop
jmp
or
cmc
mov
idivl
sti
lcall
icebp
int3
cmp
adc
clc
inc
lret
mov
pop
inc
xor
add
mov
aad
adc
rorb
mov
pop
movsb
rol
mov
roll
push
xor
cltd
fistps
ret
lds
fimull
adc
popa
fcmovb
mov
adcl
jbe
mov
xchg
xlat
push
pusha
lret
lock
and
lds
xor
int3
jo
inc
ss
imul
inc
rolb
mov
mov
xlat
sub
data16
push
into
push
add
jne
aad
jmp
jl
stc
lahf
ljmp
stos
mov
divb
iret
and
xor
testl
mov
rclb
jmp
push
jp
sbb
or
xchg
imul
mov
push
xor
add
lods
jmp
cld
fs
cmp
stos
popa
fwait
or
ljmp
andl
jecxz
lcall
add
movsl
testb
hlt
or
mov
lret
push
mov
jl
xchg
outsb
hlt
ret
or
jl
fadds
pusha
fyl2x
sbb
negl
xor
mov
subb
insl
and
fwait
mov
scas
jne
out
sub
xchg
repnz
pop
outsb
lahf
add
fs
sub
test
dec
out
xor
jl
stos
or
mov
pop
xchg
inc
int
and
xor
mov
pop
add
call
testl
nop
jae
push
gs
lds
cmp
push
fldenv
iret
cmpb
ja
mov
lgs
xchg
nop
lcall
cmc
flds
in
pushf
dec
jmp
xchg
loope
stc
sub
lret
cs
add
fwait
stos
and
addr16
imull
pop
aas
mov
and
aad
sub
adc
xchg
add
out
sbb
add
mov
mov
add
dec
call
cmp
push
mov
inc
push
pop
insb
push
push
aad
rcl
sbb
int
arpl
jl
mov
dec
in
inc
cmp
mov
mov
jns
jnp
push
fldcw
sub
in
clc
out
pop
push
jbe
xor
pop
sub
cwtl
or
lcall
xchg
and
int
mull
xor
inc
fiadds
sub
sti
aaa
fcompl
arpl
and
pop
ret
cmc
and
aad
lahf
sbbl
test
inc
pushf
inc
in
mov
imul
sbb
call
xor
jbe
sbb
int
and
mov
pop
push
icebp
sub
or
movsb
and
clc
mov
lods
loop
and
and
mov
sbb
push
outsb
out
and
adc
comiss
inc
mov
outsb
xchg
dec
clc
clc
dec
mov
in
fisubrs
push
aam
int
jg
push
lahf
ret
dec
dec
xchg
adc
and
xchg
dec
leave
clc
add
or
sbb
nop
rorb
lds
clc
mov
dec
push
clc
adc
or
movsb
xchg
pop
cmp
jg
iret
push
divb
lods
daa
cmp
int
int
push
hlt
pop
xchg
cmp
aas
aad
jge
fistl
iret
mov
mov
jmp
cli
imul
fidivrs
inc
das
ret
pop
add
test
clc
lea
aaa
loopne
mov
aas
lret
cmp
cmp
out
ja
pop
sbbl
cmpl
les
xlat
fld
mov
mov
or
pop
jmp
mov
pop
filds
mov
rorb
pop
icebp
sub
add
mov
push
inc
push
mov
and
push
mov
or
xor
and
in
inc
sar
sub
test
and
orl
daa
jecxz
jb
jns
or
sub
and
addr16
cmp
jp
arpl
mov
pop
leave
sahf
push
cmp
dec
andb
xchg
pop
add
pop
jg
arpl
cmpsl
and
mov
ret
mov
pop
ret
cmp
xor
pop
pop
dec
jns
inc
pop
rcrl
push
mov
push
xor
pop
imul
pop
sub
adc
cwtl
pop
mov
jo
lods
cld
cmpsl
xchg
and
sbb
sbbb
sbb
stos
xchg
lcall
dec
mov
ret
push
lock
xor
leave
mov
push
ja
push
aas
xchg
pop
in
cmp
jmp
stos
cli
pop
sbb
jecxz
test
sbb
fisubrl
dec
inc
ljmp
mov
in
mov
pushf
mov
lods
mov
test
imul
xchg
mov
lret
mov
nop
mov
call
sbbl
dec
push
adc
fs
cmp
adc
cmp
sbb
mov
add
fildl
mov
mov
jbe
rclb
cmp
jl
fisttpl
add
add
jmp
mov
ret
sahf
out
testl
mov
xchg
fbld
ljmp
and
or
imul
inc
std
orl
or
int3
pusha
and
xor
xchg
add
lods
js
cld
pop
xor
test
ds
sbb
test
dec
movsb
add
arpl
movsl
dec
sbb
sub
inc
push
iret
iret
or
mov
lea
arpl
jp
in
aas
lahf
inc
and
push
xchg
xchg
cmc
push
lds
andb
scas
cltd
lahf
aaa
add
insl
lea
fildl
cmp
punpckhdq
inc
xchg
xchg
add
pop
dec
daa
dec
and
into
or
pop
pop
mov
lahf
inc
inc
xor
mov
sahf
dec
shrl
repz
or
lret
mov
in
lods
fcompl
sti
dec
daa
ljmp
movsb
loopne
pop
out
outsl
into
mov
sahf
jmp
out
lret
cmc
cld
test
or
inc
cmpsb
bound
and
les
rolb
jp
or
xor
test
out
inc
popf
fsub
mov
cmpsl
dec
xor
lret
ret
add
data16
mov
call
std
push
jecxz
js
mov
or
mov
mov
outsl
xlat
mov
loopne
les
sarb
fnsave
mov
mov
daa
shll
call
push
jecxz
xchg
pop
pop
addr16
inc
js
addr16
mov
add
int3
ret
pop
sti
sub
cld
inc
stc
pop
push
push
mov
mov
call
int3
fdivrs
mov
loopne
add
insl
mov
add
cld
push
cmp
adc
stos
jnp
je
push
jp
mov
rorl
lret
inc
out
sarl
insl
in
adc
mov
sub
testl
test
test
cmc
sub
add
xlat
test
xor
dec
add
jae
cmc
jbe
insb
push
cmp
sbb
loop
std
aad
sub
xor
ret
mov
rcrb
xchg
outsl
mov
js
mov
push
jmp
sub
in
inc
sub
jmp
pop
repnz
lock
das
sub
bound
xchg
insl
jg
inc
mov
mov
orl
sahf
xchg
inc
adc
pop
or
or
imul
push
sub
xlat
sbb
sbb
mov
jle
jp
out
fwait
mov
dec
in
das
mov
shrb
bound
or
int
push
mov
pushf
sub
loope
push
call
jge
add
cltd
sbb
cmpsl
mov
adc
xchg
or
dec
iret
push
mov
pop
jecxz
add
jl
and
and
test
dec
clc
and
inc
mov
scas
mov
test
jae
mov
xor
mov
xor
in
lcall
mov
popa
add
jno
inc
xor
ss
roll
mov
sahf
pop
scas
popf
lahf
sbb
lods
insl
sti
cs
mov
jmp
clc
test
xchg
add
pop
xor
aas
in
dec
clc
adc
gs
test
nop
out
mov
jecxz
jb
fcom
imul
sub
mov
out
cmp
add
cld
leave
stc
sub
cwtl
inc
out
cs
push
std
loopne
push
dec
inc
dec
fldenv
mov
notb
jle
subl
cmpl
sbb
out
dec
lea
mov
inc
ret
aas
xor
enter
jno
pop
jns
or
lock
lret
test
add
xchg
insl
mov
movsb
pcmpeqb
xor
dec
xchg
add
lret
xchg
add
out
movb
cltd
imul
imul
mov
je
mov
pop
out
movsl
add
dec
test
inc
shlb
stos
cmp
inc
sbb
lcall
test
addr16
xchg
xor
cltd
add
mov
rolb
addr16
out
xchg
imull
xor
dec
jne
mov
jno
xchg
test
jno
scas
skinit
and
int3
js
in
mulb
orl
inc
mull
test
mov
fucomi
jp
xchg
fdivrl
mov
pushf
cmp
push
push
jp
cltd
mov
cmp
rorb
sarl
pop
adc
mov
or
pushl
inc
mov
addl
xor
fdivrs
andl
int3
inc
lret
loopne
adc
dec
dec
cltd
bound
dec
xchg
in
or
adc
and
lcall
insb
ret
xchg
sti
cmpsl
std
sbbb
ljmp
rol
mov
jns
mov
push
ds
popf
mov
aaa
cld
jo
inc
outsl
rcrb
dec
insb
dec
insb
imul
pop
iret
xchg
shlb
jno
inc
popf
std
and
stos
inc
test
loope
sarl
or
es
ja
gs
dec
xchg
pop
xor
mov
dec
movsl
xlat
mov
lods
sub
push
pop
loop
mov
push
mov
arpl
imul
in
push
or
mov
sub
popa
xchg
xor
ljmp
mov
cmp
pop
sub
lods
mov
outsb
mov
sarl
in
or
cltd
and
rorb
sub
jb
mov
cmc
mov
test
push
cmpsb
jo
mov
stos
cmpsb
push
pop
mov
maskmovq
imull
and
out
jle
subl
das
push
adc
aam
and
icebp
in
fcompl
inc
sti
jbe
jae
rcrl
mov
mov
out
fsubrs
andl
or
pop
pop
das
loopw
popf
or
into
ss
in
push
xchg
push
mov
idivb
mov
pop
adc
bound
adc
js
sarl
jecxz
je
jns
cmp
and
loop
jns
movsb
inc
sbb
adc
push
xor
inc
sbb
mov
mov
loopne
lods
pop
jnp
xor
xor
mov
pop
into
sub
pusha
cltd
aaa
mov
aaa
mov
into
push
test
cmpsl
stc
loop
gs
sbb
lods
inc
leave
repz
jmp
xchg
pop
sbb
aad
outsb
imul
test
gs
fcomps
lds
test
outsb
enter
lods
test
jl
lock
jo
outsb
popa
sbb
or
shrl
test
ret
cld
lahf
and
cmp
and
test
or
sub
sub
pushf
inc
sub
stc
cmp
mov
mov
mov
jne
fwait
push
jbe
jle
and
adc
loope
stos
addr16
and
sbb
pop
lcall
mov
into
pop
std
ret
enter
sub
out
lds
dec
cmpsb
dec
and
xchg
rcr
xor
das
fidivrs
or
lds
out
aas
and
mov
pusha
fisttpl
xlat
dec
adc
cltd
mov
lds
dec
je
hlt
add
pop
daa
push
xchg
mov
orl
xchg
jno
push
mov
mov
mov
sahf
mov
or
cld
push
or
and
cld
sbb
aad
lahf
sbb
push
push
mov
xchg
mov
gs
lods
cmp
jne
iret
les
push
and
addb
fwait
push
sub
jno
sarb
or
add
fisubrs
xchg
or
popw
dec
dec
sub
xor
jae
pop
mov
ret
mov
and
enter
aam
int
mov
jl
sub
adc
jno
call
adc
cld
notb
std
mov
icebp
cld
arpl
in
sbb
jmp
loopne
pusha
xor
sub
mov
pusha
mov
xchg
or
or
pop
inc
ds
jnp
cmpl
pop
push
jp
in
or
mov
in
add
xorb
cmp
test
call
push
xchg
repnz
add
ljmp
mov
js
sub
jns
sub
sub
data16
incl
sahf
mov
jb
mov
fistpll
sarb
ljmp
hlt
fs
data16
and
mov
mov
cmp
out
push
fldcw
and
or
pop
pop
pop
add
popl
lret
clc
xchg
rolb
xchg
enter
add
jp
out
aas
lahf
cmp
int
lock
ret
imul
push
adc
iret
adc
stc
outsb
pop
inc
pop
lds
push
mov
ljmp
std
mov
xchg
jl
pop
xchg
push
dec
lret
inc
gs
inc
in
mov
jbe
xor
mov
add
rcrb
cwtl
cmp
pusha
inc
scas
scas
jb
xchg
jecxz
lret
sbb
fnsave
or
mov
and
lret
shr
and
inc
jne
mov
fs
jecxz
jle
or
lcall
imul
add
mov
lcall
mov
sahf
jbe
outsb
int
jmp
cmp
and
inc
mov
xchg
call
mull
insl
jecxz
aad
pop
jmp
jle
jb
pop
fcmovnb
push
add
in
mov
dec
jnp
cld
in
mov
call
xlat
push
lahf
testb
in
jg
leave
mov
xchg
test
dec
add
add
jno
movsl
and
cltd
cmpsl
mov
out
mov
xchg
push
pop
popa
cmp
mov
in
and
push
out
cli
sti
adc
shll
cmp
inc
das
addr16
jae
popf
xchg
loope
push
int3
fwait
loope
cltd
jnp
iret
aaa
dec
fcmovnbe
adc
xchg
int3
jg
sbb
das
fnstenv
sbb
jb
sbb
into
addr16
pop
call
in
and
sub
fildll
or
test
xchg
ss
sbb
cmovae
repz
fwait
and
leave
ja
lods
hlt
scas
pop
mov
in
xrelease
loop
bound
mov
stos
inc
inc
mov
dec
dec
cmp
cmp
jmp
mov
xor
jbe
add
xchg
mov
call
sarb
mov
or
push
int
cmpsb
in
ss
jge
sub
sbb
add
push
sub
sbb
xor
and
xor
imul
inc
jl
call
rcrb
cmp
mov
sbb
mov
mov
push
insb
or
pop
neg
cmpsl
adc
lcall
pusha
setl
test
outsl
cltd
stos
sahf
or
and
pushf
xor
fwait
mov
cmp
jns
xchg
mov
repnz
pop
aam
mov
xchg
mov
push
sub
ret
aas
in
daa
out
adc
decl
sub
xchg
push
mov
push
push
inc
mov
xor
sti
into
xchg
rclb
inc
jbe
mov
push
push
cli
xor
out
jmp
xchg
js
hlt
fwait
cltd
cmpsl
mov
pop
faddl
clc
sub
add
cltd
cmpsl
xor
stc
push
jle
subl
loopne
or
cmpsl
push
add
add
bound
fcmovu
lods
xor
mov
pop
mov
lods
mov
adc
adc
inc
xchg
sbb
or
dec
sub
popf
std
aam
shl
jl
mov
shlb
push
aam
mov
pushf
mov
fmuls
mov
scas
aam
mov
movb
js
shrl
push
or
xchg
repnz
fcmovu
dec
and
jle
sub
vmovhps
xchg
imul
jge
das
mov
jmp
mov
filds
sub
mov
jb
xchg
test
jb
and
aaa
lret
fnop
into
xchg
cltd
mov
push
ret
lea
lret
xchg
addr16
xchg
mov
aas
rorl
popa
jecxz
mov
mov
movsb
dec
xchg
pushf
add
clc
and
mov
sub
popf
outsb
cmpsb
shll
jle
mov
xchg
pop
out
inc
pop
outsl
inc
inc
iret
jp
push
sbb
pop
iret
sbb
sub
emms
add
jecxz
fildll
movsb
lods
or
cmp
adc
xor
cmp
xlat
cmp
or
in
pushf
fs
mov
adc
lods
xchg
orl
dec
pop
fcoml
xor
pop
push
lret
addr16
mov
int3
fistps
lods
mov
or
adc
shld
adc
addr16
sbb
addr16
inc
stc
movsb
mov
inc
mov
mov
stc
stc
shr
pop
pop
or
nop
lds
or
adc
leave
dec
cmpsb
addr16
rcrl
inc
aad
pop
jmp
mov
int3
std
push
lods
in
pop
stos
in
or
in
lcall
in
xor
sbb
sub
test
mov
mov
fmuls
inc
int3
cs
mov
mov
mov
xchg
and
xor
int
push
or
test
push
lds
sub
jle
mov
mov
orl
sbb
adcl
lods
movsb
cmp
lahf
cmc
outsb
and
inc
mov
adcb
clc
and
sarb
lret
jbe
test
sbb
push
lock
and
outsb
int
or
mov
rcrl
sarb
mov
push
dec
xchg
addr16
lret
xchg
sbb
sub
sbb
daa
hlt
push
std
xor
fdivl
jmp
lahf
xor
and
mov
cmpsb
jge
sbb
or
mov
dec
xchg
cmp
insb
roll
das
fidivl
outsl
xor
lea
lcall
test
sbb
xchg
iret
adc
repnz
outsb
pop
imul
jl
dec
iret
mov
and
nop
dec
dec
sbb
pop
in
les
iret
outsb
sbb
testb
xchg
lea
cmp
xchg
filds
test
sub
adc
lahf
dec
inc
xchg
rolb
mov
sti
mov
enter
adc
inc
inc
ret
push
sar
or
in
mov
jne
jle
daa
add
ja
stos
pusha
rol
out
mov
inc
cmp
xor
sub
or
mov
lret
shl
dec
scas
rcl
adc
mov
das
cmp
cmp
arpl
mov
into
rorl
and
adc
in
in
adc
loopne
call
insb
cld
aas
or
je
jo
imul
cwtl
adc
mov
add
sub
inc
xchg
popf
out
jecxz
push
add
popf
push
dec
jae
jmp
addb
push
and
push
sbb
cmp
lods
sbb
and
inc
outsb
pop
fsubr
out
xor
sub
pop
push
lock
push
arpl
out
xor
cmp
fstps
maxps
mov
cld
mov
cwtl
adc
mov
pop
sbb
mov
sti
maxps
sbb
push
push
push
sti
sahf
push
xor
adc
lret
fwait
cmp
rcrb
das
pop
fisttpll
cmpsb
roll
xorl
pop
lret
mov
sub
jge
test
push
imul
add
mov
dec
mov
bound
inc
mov
add
mov
and
pop
sbb
xchg
or
push
inc
das
cmpsb
mov
loopne
pop
inc
push
ds
stos
push
mov
pushl
repnz
push
sbb
mov
repz
ljmp
xlat
add
js
adc
stc
mov
mov
enter
icebp
sub
or
sahf
or
or
scas
push
pop
push
cli
sub
cmp
mov
jb
inc
aad
ficoms
out
sbb
push
dec
ljmp
xchg
arpl
pushf
fcoml
js
cs
adc
xorl
cmc
pop
mov
mov
dec
mov
xchg
jno
cwtl
clc
pop
push
xor
mov
adc
cwtl
in
xchg
je
cmc
add
fs
lds
mov
dec
test
psubusw
jbe
mov
loope
pop
xor
imul
in
out
enter
fidivrs
cmp
add
ds
add
adc
jne
in
mov
pop
bound
sahf
push
and
add
repnz
lea
sbb
pop
ss
cmp
sbb
shlb
repnz
sbb
inc
shll
fisubs
sahf
jecxz
leave
adc
lcall
iret
aad
push
push
mov
xor
sbb
mov
loop
sbb
out
fnstsw
jo
pushf
cmp
ret
pop
std
aaa
stos
xchg
test
jmp
mov
push
sahf
cmp
and
add
ja
cmp
mov
cmc
lret
fs
ja
in
into
sbbl
mov
daa
add
mov
jae
and
sub
imul
into
sarb
out
std
xor
push
sub
push
les
sarl
mov
mov
and
lods
pop
push
enter
loopne
sub
adc
add
sti
mov
in
test
sbb
mov
test
pop
cmp
pop
in
lret
fldt
pop
sbb
inc
int3
push
enter
sbb
mov
int
mov
sub
idivl
sti
mov
pop
dec
pop
sbb
test
xor
sarb
nop
popa
add
insl
push
fldcw
lea
pushf
inc
fsub
sahf
xchg
sub
aaa
pusha
imul
dec
pop
adc
ja
lret
dec
mov
cs
cmp
sub
into
sbb
insb
pop
inc
std
xchg
pop
in
pop
mov
aas
ret
add
sarl
jecxz
fistpll
pop
cmpsl
adc
jae
cwtl
mov
pusha
fldl
pop
aaa
sets
add
inc
fcmovb
outsb
fisubrs
js
lret
out
scas
daa
out
xchg
jp
aas
clc
setge
lock
out
aad
iretw
xchg
sbb
xor
pop
test
mov
iret
push
or
fildl
clc
cmp
mov
dec
jbe
enter
mov
mov
sbb
xlat
inc
dec
les
popf
aaa
inc
and
pop
jg
insb
pop
test
ss
loopne
sbb
pop
jns
adc
mov
push
test
mov
in
pop
addr16
adc
shlb
and
insb
scas
and
and
lcall
int
jae
or
xor
push
xchg
adc
sarb
subl
adc
pop
and
stos
hlt
ds
jle
jg
pop
rcrb
add
push
xor
stos
test
cmc
into
xchg
mov
fistps
mov
inc
imul
push
test
xor
push
int
cltd
loopne
fsubs
out
push
out
lahf
and
cmp
cmp
gs
cmp
add
xor
mov
sub
or
fwait
pop
xor
jle
ja
push
mov
add
cmp
repz
cmp
inc
daa
sub
mov
dec
push
xor
mov
shll
jbe
dec
adc
jp,pn
sbb
mov
push
mov
adc
incl
mov
push
stos
jno
fsubr
ss
push
pop
pop
push
jo
mov
das
xchg
jo
outsl
xchg
add
fdivp
addr16
loopne
add
dec
ret
dec
loope
jo
mov
les
xchg
gs
pop
fldcw
pop
or
jl
xchg
ret
int3
mov
inc
fsqrt
dec
mov
aaa
xchg
dec
jp
push
rorl
mov
and
adc
insb
pushf
insb
mov
adc
push
pop
dec
aam
inc
dec
nop
push
pop
push
xor
vcomiss
cmpsb
sub
insb
push
into
repz
pmuludq
lcall
sub
dec
jmp
dec
add
inc
lods
inc
ss
leave
add
in
into
adc
mov
pop
aaa
outsb
inc
enter
fisttpll
in
cmp
les
int
insb
int3
fwait
pushf
mov
js
pushf
xchg
cwtl
push
stc
mov
pop
push
pusha
add
in
adc
mov
lea
insb
clc
push
push
ret
pushf
repz
push
lea
mov
sub
xchg
dec
enter
cmpl
cli
inc
jecxz
jmp
pusha
ror
dec
dec
mov
pusha
and
arpl
and
outsl
mov
pop
icebp
xor
inc
lret
xor
sbb
popf
push
pop
push
fcmovnbe
popf
movsl
xor
adc
mov
test
jns
lds
je
shll
outsb
xchg
inc
lret
test
mov
lcall
mov
imul
fcoml
sbb
int
or
out
pop
push
or
jl
pop
adcl
aam
scas
cld
sti
mov
scas
es
cli
or
xchg
test
pop
aad
jne
add
or
push
shll
out
subb
pushf
add
stos
jge
xor
pop
sti
and
mov
jnp
loope
adc
push
cmp
mov
pop
mov
xchg
addr16
sub
pop
pop
dec
cmp
xchg
xlat
dec
xor
imul
dec
push
push
mov
xor
gs
hlt
jmp
xchg
test
mov
mov
inc
rcrb
inc
frstor
js
cld
loope
pushf
mov
push
lret
adc
sti
or
mov
filds
adc
push
mov
scas
aas
int3
out
xchg
or
mov
lret
stos
lcall
add
pop
or
mov
jl
repz
cld
pushf
xor
movsl
sahf
lea
xor
in
pop
lea
xor
dec
scas
pop
cmp
inc
and
cmp
sbb
and
cmp
mov
out
sbb
mov
outsl
or
test
or
xor
add
pushf
mov
cli
and
and
fisttpl
jo
in
test
cs
and
mov
jp
decb
and
or
jl
mov
dec
jnp
mov
lgdtl
lods
xor
cwtl
mov
and
cmp
imul
fimull
xchg
mov
and
xchg
xchg
push
imul
push
cmp
dec
scas
in
imul
mov
ret
int
and
mov
cmpsl
or
adc
adc
daa
cmp
cmp
mov
or
push
mov
fwait
iret
sbb
jbe
rcrl
mov
push
push
mov
sub
shlb
mov
inc
cmp
dec
sub
mov
cmp
ret
cwtl
sub
movsb
lret
in
ffree
dec
loope
or
sbb
cmpsb
xchg
shll
arpl
push
loop
movsl
ljmp
fcompl
outsb
fidivl
cmpsb
add
add
icebp
gs
mov
jo
push
mov
jl
imul
imul
out
insb
js
push
mov
mov
ficoml
imul
mov
sbb
hlt
inc
jg
pop
pop
out
sub
fs
adc
sbb
mov
push
shl
fisttpl
adc
in
bswap
sbb
les
neg
mov
jle
inc
sbb
les
xchg
xor
aad
test
inc
or
xchg
mov
stos
add
mov
jg
in
mov
push
jbe
xor
pop
pushf
dec
das
pop
or
ret
pop
mov
mov
and
add
cli
mov
jae
push
mov
daa
mov
cmp
xlat
subb
loopne
lock
mov
lahf
mov
jge
xchg
das
xchg
cmc
push
sbb
jo
sub
ss
add
out
mov
imulb
pop
lahf
sbb
mov
in
repz
sar
add
adc
je
push
sub
inc
nop
jne
xchg
insb
mov
jmp
jle
jbe
mov
test
fnsave
jl
insl
clc
push
and
fs
xchg
jo
ljmp
std
je
mov
sub
insb
shll
add
lods
push
pop
test
push
fisubrl
into
cli
push
bound
cmp
pusha
aam
es
sbb
rorl
jp
mov
lock
push
jae
mov
and
aad
jno
xchg
jmp
dec
push
or
mov
cmpsl
sub
out
sub
lret
or
js
pop
or
ss
pop
pop
insl
mov
leave
xchg
or
lds
out
fbld
lcall
sub
sbb
push
lods
aam
mov
jecxz
lds
lret
shlb
pop
sbb
aas
jge
add
pop
out
mov
sahf
sbb
into
or
dec
adc
dec
roll
sub
push
aad
je
fldenv
add
dec
jb
sbb
cltd
or
mov
pop
or
ret
add
mov
adc
and
xchg
cld
je
mov
test
jnp
cmp
int3
imul
add
out
mov
loopne
or
daa
push
je
nop
sub
mov
inc
sahf
jnp
pop
pusha
dec
nop
cld
adc
add
mull
imul
out
inc
std
mov
inc
lcall
ror
cmpsb
lret
leave
jge
enter
push
pop
loopne
push
adc
inc
inc
add
stc
call
pop
or
push
mov
xor
jle
mov
pop
inc
pop
mov
shlb
addr16
jg
nop
sti
adc
or
or
jnp
ret
push
mov
dec
sahf
inc
ljmp
xchg
xchg
enter
ljmp
icebp
gs
aam
mov
adc
stos
pushf
jecxz
out
inc
inc
cli
ret
sti
lock
scas
adc
mov
pusha
jge
add
cmp
push
sbb
hlt
dec
add
cli
aad
pop
fwait
adc
das
jecxz
ljmp
loope
popa
out
shrl
push
dec
pop
push
sub
call
test
outsl
imul
cmpl
xor
jb
mov
add
popa
in
cmp
fimull
pop
dec
cmpl
lret
jecxz
jp
pop
fistpl
ja
repnz
or
dec
aaa
lcall
push
jns
inc
mov
imul
push
add
pop
outsl
movsl
jecxz
mov
test
int
xor
loopne
orl
pop
push
adc
cmpsl
xchg
sbb
mov
lods
mov
arpl
sub
adc
ret
xchg
js
lahf
mov
mov
add
out
cmp
frstor
adc
insb
in
test
rcrl
hlt
mov
std
cs
dec
or
xchg
int3
outsb
add
sub
dec
push
xchg
mov
or
decl
inc
inc
inc
aaa
xchg
or
scas
xchg
add
sbb
adc
aam
mov
add
ds
sbb
xor
lret
xor
lret
fsubrl
mov
lcall
push
mov
js
ljmp
addr16
or
enter
jecxz
jmp
sub
mov
mov
std
test
in
jl
mov
mov
sub
xlat
mov
mov
mov
sahf
clc
cmp
add
xor
nop
ret
dec
mov
dec
inc
xchg
stos
pop
jns
or
idivl
sbb
cltd
cs
xchg
add
jmp
arpl
mov
cmp
jo
pop
rorb
movl
lods
out
sbb
push
loopne
sbb
cmp
das
adc
hlt
push
and
test
sbb
adc
out
cmpsl
cmpsb
ss
or
testl
mov
mov
inc
jno
xor
fwait
add
xchg
xchg
out
lock
enter
pushl
les
iret
shl
add
hlt
fld
xchg
pop
cld
push
xor
iret
xor
ret
adcl
jnp
xor
stos
insl
sbb
scas
dec
int3
jae
cli
loope
and
les
sub
dec
cmp
movsb
push
xor
int
rcrl
add
push
xor
enter
add
cmp
cli
push
push
cmpsb
push
pop
pop
and
filds
adc
sub
inc
adc
cmp
and
mov
fcomps
sub
ror
je
mov
jg
ja
das
add
outsb
out
mov
mov
test
outsl
mov
xchg
icebp
adc
enter
shlb
outsb
jb
or
add
mov
lahf
imul
xchg
adc
mov
inc
ret
xchg
pop
jg
sub
in
stc
out
pop
push
mov
xchg
test
cmpsb
dec
movsl
dec
lret
push
mul
xor
lret
cltd
cmpsl
push
add
push
inc
inc
xor
lods
mov
push
push
loop
dec
out
arpl
pop
insb
xchg
int3
mov
mov
js
andl
int
sbb
push
lds
cmpsl
push
mov
jl
test
add
or
mov
ljmp
pusha
sbb
adc
aam
out
adc
and
add
or
lcall
cltd
aaa
xchg
add
or
inc
in
mov
shll
dec
sti
nop
sub
mov
xor
xor
xchg
push
adc
aaa
mov
dec
fldcw
rcr
pop
jl
pop
ss
ss
inc
xchg
ss
xor
mov
adc
fcomps
xchg
sbb
mov
mov
js
cwtl
mov
mov
out
iret
int
or
xor
mov
ljmp
pop
lret
jae
loopne
lods
push
shll
dec
lods
sub
aaa
push
aaa
inc
pusha
add
out
andb
xchg
or
int3
ret
adc
sub
cltd
lock
jecxz
movsl
popa
dec
insl
and
loopne
leave
mov
dec
sub
fmulp
loope
loope
cs
add
cmp
or
xchg
mov
jmp
dec
cmpsb
mov
test
mov
mov
cmpsl
popf
and
outsl
add
rclb
scas
fcmovu
mov
lock
sti
adc
mov
lcall
cmp
outsl
sub
mov
mov
sbb
xlat
subb
loop
and
sahf
inc
lret
sub
aad
ret
jg
out
add
aaa
mov
cwtl
push
into
movl
addr16
ret
adc
pop
int3
test
dec
fcomps
imul
sbb
daa
xchg
out
push
push
aad
shrb
movsl
xchg
fidivrs
sahf
fs
divl
push
outsl
nop
cmpsl
fstpt
mov
jb
add
fstpl
lahf
lea
nop
dec
add
pop
mov
push
mov
fnstcw
lret
jecxz
movsl
fimull
fs
fucomp
addr16
stos
push
sub
ret
stos
sti
call
mov
xchg
sarl
pusha
fs
loope
push
mov
pop
ds
push
cltd
ret
push
fiadds
pop
push
or
subb
leave
pop
cmp
outsl
scas
xchg
pop
or
ljmp
iret
add
rorb
pop
mov
push
cmp
mov
lods
dec
adc
cmc
into
arpl
mov
popf
inc
and
pusha
flds
ficoms
dec
lods
dec
dec
jg
push
scas
fwait
push
lods
mov
push
scas
and
loopne
jno
repnz
push
sar
sub
sub
out
cmp
inc
mov
xchg
mov
inc
test
je
and
mov
int
inc
outsb
es
xor
jb
push
in
subl
in
daa
inc
cld
push
out
in
arpl
call
in
add
push
jae
pop
pop
mov
pop
aad
add
clc
repnz
cmpsl
data16
das
and
imul
and
lcall
insb
jae
xchg
ja
push
mov
jbe
push
stos
enter
shll
fidivrs
inc
push
loop
pop
addr16
xor
sbb
aam
add
pop
adc
fnstenv
stos
adc
pushf
sbb
mov
imul
shlb
mov
jo
ds
loope
sub
test
jo
pusha
pop
hlt
adc
test
pop
add
push
cltd
cmp
outsb
movsb
jae
adc
ljmp
mov
test
ficompl
rcr
mov
jae
sahf
shl
movsb
cmp
mov
pop
repz
dec
fstps
mov
ror
inc
in
les
and
add
jmp
mov
xchg
fs
loope
rorl
hlt
mov
or
push
sub
imul
mov
inc
test
cmp
add
sbb
push
pop
fld
push
test
push
lds
in
add
int
and
jl
icebp
test
add
jae
test
or
aad
hlt
push
mov
adc
fisttps
mov
cmpsl
mov
fildl
std
cmp
jge
jbe
jno
popa
jnp
fistl
sti
mov
mov
lret
mov
xor
xchg
popa
pop
xchg
mov
lods
pop
aas
sub
loopne
fcompl
jb
in
jle
mov
mov
mov
sbb
enter
aas
ljmp
cmc
sub
lds
clc
inc
push
in
pop
int3
enterw
add
movsl
xchg
into
mov
adc
mov
mov
ja
popa
fdivrs
js
loope
lods
push
adc
inc
sti
and
scas
pop
inc
imul
aaa
xchg
aas
xchg
fs
mov
sbb
pop
xor
pop
scas
popf
add
xchg
jb
aad
cmp
test
sbb
mov
stc
stc
jb
cmp
lock
mov
cwtl
popf
jne
loope
cmp
and
les
mov
pop
push
or
movsb
scas
adc
cmp
xor
adc
int
sub
sub
es
in
and
and
jns
out
xor
pop
jg
bound
sbb
push
mov
adc
xchg
into
add
add
xor
movsl
test
stos
fstpl
jmp
scas
xchg
imul
sub
je
jg
and
rolb
scas
loopne
cltd
push
jmp
in
les
push
imul
fidivrs
roll
push
push
out
and
xchg
hlt
jge
sub
mov
xchg
filds
enter
in
roll
scas
push
sbb
scas
lea
out
push
stos
cli
jo
fmul
repnz
jg
or
mov
test
xor
into
fwait
add
sbb
lea
sub
pop
ds
and
adc
or
mov
pushf
dec
flds
xor
xor
xchg
xchg
mov
out
add
push
sub
or
cmc
add
add
nop
popa
sti
mov
dec
pop
pop
std
dec
in
fistl
repnz
cmp
scas
or
sahf
int
shld
mov
clc
fs
and
inc
cmp
jae
in
testl
xchg
jns
xchg
enter
enter
push
inc
adc
and
xchg
sbb
pop
and
fwait
mov
pop
scas
in
in
cs
push
dec
test
std
mov
pop
sbb
fwait
popf
mov
or
fimull
iret
stc
pop
inc
or
mov
sbbl
mov
ja,pt
iret
jge
sbb
imul
mov
emms
xor
ljmp
popf
cli
orb
sub
aaa
pop
push
add
or
jnp
cmp
movsb
ljmp
fldenv
jmp
jae
pop
pushf
iret
popf
jle
mov
jae
cs
outsb
xor
sub
sub
pop
movsl
jno
push
xor
push
div
in
push
mov
xor
dec
mov
in
aaa
hlt
sbb
rcll
fmuls
imul
push
insb
pop
pop
movsb
add
test
ret
sbb
mov
xchg
dec
mov
sti
lahf
gs
add
cmc
jbe
jb
ret
pop
push
push
jb
mov
addr16
jg
ffreep
cmpb
cmc
jns
jo
add
orb
lret
mov
jb
add
mov
insb
out
xchg
dec
popf
add
and
cli
and
call
adcl
lock
leave
pop
repnz
sub
sbb
cwtl
xor
test
mov
mov
mov
push
adcl
daa
dec
push
xchg
pop
cwtl
push
cmp
mov
std
std
fistpll
fwait
pop
mov
and
test
add
out
push
js
add
xchg
or
and
out
mov
mov
mov
mov
insl
cwtl
add
mov
add
cmp
xor
add
gs
mov
xchg
fmull
out
leave
pop
cmp
push
push
in
dec
leave
mov
sbb
out
jecxz
jmp
frstor
fldl
arpl
stc
inc
xor
and
mov
or
sbb
mov
jnp,pn
decb
jge
lahf
adc
js
fistps
inc
mov
jl
inc
mov
sar
hlt
cld
mov
inc
pop
mov
add
rcll
cltd
inc
cld
xor
adc
cmp
leave
add
testb
mov
cmp
ret
popf
dec
sub
push
roll
sbb
jbe
sub
aas
mov
arpl
iret
mov
inc
shrl
scas
xchg
sbb
or
push
or
jo
push
or
mov
mov
addr16
sub
fld
cmp
jmp
fistpll
test
pop
mov
cmp
ret
sub
lods
sub
jns
jne
icebp
mov
imul
std
mov
test
cmp
sub
pop
adc
cmp
in
xchg
insb
mov
mov
xchg
bnd
inc
aaa
rorb
rcrb
fiaddl
mov
pusha
cwtl
pop
dec
stos
cwtl
sbb
into
inc
imul
xchg
dec
shlb
mov
js
add
ja
push
mov
cmp
sbb
xchg
cmpsl
hlt
push
out
imul
dec
nop
pop
ret
jns
into
fsubs
gs
mov
or
pop
sti
add
sub
sub
or
adc
lea
outsl
pop
dec
adc
sub
inc
mov
subl
vunpckhpd
stos
add
ja
xlat
mov
inc
add
lods
scas
and
adc
jo
std
outsl
sbb
cwtl
dec
push
xchg
jmp
dec
jmp
data16
lret
sti
mov
je
xor
jecxz
pop
mov
push
data16
aaa
mov
pusha
out
xchg
dec
fwait
out
shr
dec
mov
lods
test
ss
out
jo
es
xchg
popa
jae
adc
xor
sti
stos
mov
add
sub
movsb
push
or
bound
dec
or
shll
lea
out
jg
mov
loop
mov
sub
pop
inc
inc
or
adc
shll
adc
add
mov
js
mov
out
pop
and
cmp
jnp
hlt
rorl
push
lahf
fwait
dec
fsts
daa
pop
jl,pn
je
xor
into
mov
jnp
repnz
xor
mov
jmp
rorl
ja
popa
sbb
push
cmp
push
jno
aaa
xorb
scas
fistps
push
push
push
outsl
push
std
sbb
inc
cmc
cmp
shrb
push
mov
push
add
enter
mov
insb
push
hlt
ret
xor
lahf
and
movsb
inc
mov
xchg
jae
iret
cmpsb
mov
imul
movl
pop
lret
neg
add
mov
int3
int3
jmp
xchg
mov
arpl
mov
jmp
cltd
rolb
iret
popf
loop
mov
dec
les
sbb
add
jmp
pop
enter
sub
aaa
jge
push
pushf
xchg
pushf
adc
das
sub
xor
sbb
push
pop
std
in
test
enter
push
idiv
mov
adc
jle
test
hlt
jl
ja
add
jnp
test
lds
pop
jnp
jmp
bound
gs
mov
scas
in
push
cli
stc
sti
cmpsb
sbb
subl
xchg
in
test
loope
adc
lds
sub
sarl
stc
mov
add
cmp
mov
adc
insl
rcl
inc
add
mov
xor
jnp
xor
mov
movsl
mov
xchg
mov
repnz
and
sub
lret
adc
dec
xchg
jmp
cmp
loop
inc
sbb
or
cmc
push
call
cltd
orl
cmpb
in
sub
xchg
sbb
pushf
divl
cmp
divl
xchg
js
clc
mov
sbb
dec
fmull
jp
sub
xchg
mov
out
sbb
mov
jne
insb
mov
jbe
pop
lea
or
mov
jns
fs
jmp
xchg
pusha
adc
cmp
test
bnd
xor
int3
adc
movb
inc
dec
mov
ss
das
dec
cltd
cld
mov
pop
nop
insb
push
inc
mov
mov
push
xor
push
mov
dec
jp
mov
mov
sub
inc
cmp
xchg
movsb
mov
cmp
loope
mov
sbb
sbb
dec
outsb
pop
lret
dec
pop
pop
mov
ljmp
out
jmp
mov
outsb
mov
repz
push
adc
div
add
imul
sub
jmp
jg
mov
add
sbb
popf
outsb
pop
and
and
scas
mov
and
pop
test
std
data16
cmp
ret
insb
leave
movsl
dec
add
mov
adc
dec
imul
cmp
pop
push
add
lock
cli
out
stos
ret
xor
jl
je
loope
push
sti
arpl
and
leave
rcl
test
and
pop
add
out
add
outsb
cmp
pop
inc
pop
mov
pop
or
loope
and
addr16
leave
popa
push
mov
bound
lret
and
pop
adc
add
push
icebp
fildl
add
adc
push
fwait
fsubrs
pop
add
add
pop
scas
pop
or
sub
mov
xor
push
out
mov
mov
call
mov
fiadds
out
mov
inc
sbb
dec
lods
dec
mov
cmp
pusha
sbb
fnstsw
fsubs
hlt
mov
je
inc
addr16
stos
xchg
nop
xchg
push
lahf
pop
dec
ljmp
cli
inc
xor
push
xchg
adc
je
cmc
icebp
fwait
inc
aam
cltd
ss
pop
sub
jmp
xorl
lds
inc
insb
shrl
shrl
lock
cli
mov
aam
pop
inc
dec
ss
cmp
dec
pop
scas
sub
push
sbbb
jecxz
cld
scas
ret
jae
lods
cmpsb
clc
lret
adc
mov
cmp
jmp
push
out
decl
imulb
scas
jmp
iret
stos
add
int3
cmc
clc
jbe
popf
cmpsb
daa
and
dec
test
push
dec
ljmp
pop
adc
mov
out
mov
daa
aaa
mov
hlt
std
out
pushf
lret
in
dec
inc
and
ja
push
or
fmul
scas
andb
fs
decb
lea
jg
push
outsb
xor
es
sti
mov
outsb
ret
test
clc
aaa
push
lret
mov
int3
pop
add
out
pop
repz
loope
roll
cmp
insb
lret
add
sbb
xchg
or
add
push
popa
lock
cmc
adc
xchg
mov
or
imul
repnz
orl
insl
xor
xchg
or
and
roll
add
pop
fwait
rcrl
mov
sub
test
pop
enter
vpsubd
mov
adc
repnz
or
imul
addl
pop
adc
shlb
and
leave
test
jns
push
call
inc
dec
movups
mov
daa
inc
mov
in
xchg
cmpsb
lock
push
int
push
mov
fcoml
pop
addr16
mov
shlb
mov
nop
xor
xor
or
jp
popf
shll
push
adc
mov
daa
pop
ret
data16
js
sbb
imul
mov
fcomps
push
and
scas
cmpsl
das
lods
enter
popf
mov
and
mov
jb
ja
cld
ljmp
arpl
xchg
cmpb
addr16
aad
scas
in
rorb
pop
sub
scas
icebp
lock
xchg
inc
lret
cmp
icebp
add
loopne
scas
mov
jmp
fnstcw
shlb
sahf
mov
out
jg
leave
and
inc
das
popa
ss
rorl
cli
mov
or
mov
and
pop
sti
jnp
and
repnz
scas
cltd
shrb
enter
fnstenv
adc
lcall
cmp
das
cmp
or
xchg
dec
cmp
cmp
es
mov
mov
loopne
sbb
cltd
pop
std
dec
pop
arpl
xor
fidivrs
fwait
movsb
push
sarb
out
insl
add
rol
lods
mov
mul
pop
lods
lock
add
mov
pop
or
mov
int3
add
into
mov
jae
xor
das
mov
dec
sub
xor
stos
insl
mov
mov
imul
repnz
sub
mov
mov
movsb
out
xorl
cmp
jo
mov
enter
push
jne
adc
pop
subb
mov
push
aas
stc
inc
jp
mov
leave
xor
jae
ja
cmp
inc
cmp
je
loopne
adc
jge
xor
pop
mov
pop
jbe
pusha
loop,pt
int
dec
jae
mov
xor
pop
cld
ds
popf
push
cmpsl
pop
jp
js
scas
divl
add
aam
adc
adc
cmp
pop
sbb
push
lods
adc
xchg
and
xchg
jo
mov
sbb
dec
das
sti
pop
inc
mov
sbb
dec
shr
pop
int
test
or
lret
inc
in
mov
rorw
jg
out
orb
mov
push
push
mov
sub
push
pop
fwait
je
pop
sbb
popa
daa
loope
push
shlb
xor
fadd
enter
popf
cmc
cs
call
insl
cmc
xchg
add
or
in
cmp
jae
add
add
cmp
out
call
cs
sbb
sub
push
mov
bound
imul
stos
pop
mov
pop
adc
adc
xchg
and
pop
je
test
enter
push
mov
andl
int
jecxz
pushf
cmc
call
mov
sbb
and
jge
in
rcrl
sub
cwtl
jg
jno
mov
xchg
repnz
adc
sub
shl
inc
sbb
jbe
insb
mov
pop
popa
adc
sbb
ds
pop
cmpsl
jno
adc
loopne
lret
out
outsl
add
cltd
cmc
dec
arpl
xchg
xchg
loop
mov
fcoms
push
push
mov
push
jl
out
addr16
xchg
mov
arpl
pusha
nop
xchg
push
dec
inc
sub
dec
pop
popa
xor
aam
or
pop
ljmp
fnstenv
test
or
daa
rorb
push
jo
je
mov
loopne
jp
or
cmp
pop
push
lcall
sub
pop
adc
push
push
in
lock
mov
xor
out
jmp
sbb
mov
cmp
jmp
xchg
add
and
pop
push
lds
lods
mov
clc
aad
add
out
into
fwait
cmp
test
jno
outsl
std
jne
sub
mov
outsl
jle
ds
sub
fnstsw
and
dec
loopne
nop
dec
fwait
orb
dec
pusha
sahf
inc
push
and
aaa
movl
aas
dec
jmp
pushf
out
pop
std
mov
sub
leave
sub
enter
or
push
push
cmc
pop
mov
pushf
jl
icebp
test
sbb
in
icebp
into
xor
lea
pop
sbb
lods
inc
cli
ret
sub
inc
push
flds
daa
sub
dec
dec
scas
sub
icebp
pop
js
xchg
je
lock
das
xchg
clc
sub
jne
or
pop
sarb
sbb
paddsw
pop
add
cmc
in
les
insb
or
test
push
out
push
outsb
xor
inc
pop
push
out
mov
dec
push
inc
shll
or
pop
sub
jmp
or
pop
adc
sbb
jp
adc
push
test
pop
call
push
push
mov
sub
shl
add
xchg
inc
xor
hlt
test
sub
ds
sub
xor
incb
pop
scas
mov
int3
cmp
mov
cs
cmp
enter
repz
outsb
sbb
lret
pop
mov
xchg
mov
fmul
cmp
stos
sub
pop
repz
and
inc
sbb
mov
push
mov
cmpsl
mov
sub
sub
mov
imul
aas
mov
xor
and
pushf
push
mov
repnz
mov
dec
xor
lock
cld
push
push
ds
shlb
out
lea
cmp
inc
sbb
movsb
mov
lret
push
xchg
sbb
mov
mov
jge
mov
sub
es
cli
jno
daa
xchg
inc
xchg
xchg
jmp
push
mov
cmpsb
outsb
jecxz
shlb
rcrl
outsb
push
xor
or
out
leave
shrb
jecxz
push
lock
mov
out
out
mov
sub
mov
inc
mov
push
push
bound
out
lods
jmp
fmulp
clc
adc
inc
test
sti
mov
fdivrl
jb
in
gs
mov
push
xor
and
cltd
pushl
int
cwtl
shlb
jl
roll
pop
xchg
cwtl
call
fcoms
cmp
mov
ror
xor
jle
insl
fcmovbe
in
push
inc
ds
in
fldpi
xor
test
fs
out
test
fbld
cmp
pop
movsl
inc
add
ljmp
xor
mov
rcrb
xchg
lret
data16
mov
scas
and
xor
and
ljmp
push
pushf
dec
jno
pop
mov
fisubrl
sbb
cwtl
jb
cmp
insb
add
and
cmp
jg
aaa
mov
xchg
fmulp
inc
popf
add
aad
inc
out
jecxz
ss
lods
aam
fwait
add
and
sub
push
pop
rolb
push
mov
shlb
lahf
mov
scas
and
lds
jbe
jns
rol
sbb
clc
inc
or
add
xchg
jae
sahf
mov
sub
push
add
fldcw
popa
inc
sbb
xor
shll
pusha
inc
aam
mov
dec
cmp
xchg
call
adc
push
push
sub
ss
mov
xchg
out
or
addl
icebp
xchg
mov
inc
mov
xchg
iret
mov
add
stos
cmpsb
in
leave
pop
addl
dec
adc
adc
stos
sbb
lret
push
or
shlb
decb
fistps
lcall
mov
aas
and
push
sub
mov
cld
push
push
cmp
jbe
mov
cld
aam
adcb
fidivs
adc
lods
repz
xchg
in
hlt
sbb
push
popa
mov
popf
subb
add
ror
dec
bound
fidivrl
jg
pop
das
mov
mov
jmp
xchg
jno
dec
push
je
inc
add
pop
sub
movsl
push
or
shl
outsb
xor
add
into
call
arpl
adc
jp
ljmp
fidivrs
cmpsl
mov
fcomi
in
jbe
shrb
loope
in
jmp
loope
out
rcl
pushf
mov
sub
and
aad
add
aad
stos
dec
cmp
stos
inc
pop
adc
adc
jl
aam
xchg
mov
mov
out
mov
cmp
jecxz
ja
cmpsb
pop
lret
data16
pusha
sahf
sti
gs
adc
mov
fs
cmpsl
xchg
aad
mov
xchg
cmp
in
insb
scas
pop
lret
mov
sti
movsb
outsb
add
fwait
adc
add
arpl
movsb
insb
push
in
pusha
sub
dec
mov
popa
sub
inc
jl
sbb
lds
inc
and
and
mov
insl
call
mov
mov
in
jl
jo
out
out
dec
mov
pusha
dec
mov
push
pop
jp
inc
push
push
jecxz
cld
into
iret
lods
fmuls
cmp
push
or
sub
or
notb
xchg
ljmp
cmp
ret
push
jnp
daa
pop
repz
pop
addl
in
loop
loope
bnd
out
das
fs
std
xchg
and
or
addr16
lods
out
fcmovu
mov
adc
mov
adc
test
pop
xchg
push
jp
imul
cmp
add
pop
dec
xor
jecxz
sbb
dec
sbb
mov
mov
mov
pushf
lds
jae
leave
jp
mov
fdivl
jne
cli
jg
push
jne
mov
js
mulb
mov
xor
mov
arpl
out
aad
and
jge
jge
in
inc
je
das
xchg
push
adcl
in
push
fbld
imul
or
shll
aas
cmp
cmc
jle
mov
or
jno
movsb
icebp
int3
gs
push
cmpxchg
jns
gs
xor
cltd
inc
mov
dec
fwait
xchg
dec
mov
repz
xor
or
push
sub
adc
dec
mov
divl
stos
adc
push
ret
or
mov
cmp
cmpsl
or
mov
aas
stc
les
push
repz
add
daa
fmull
sti
scas
dec
cmp
js
sub
loopne
mov
dec
fwait
outsb
cmp
sti
xchg
cmp
sub
leave
or
shl
flds
adc
enter
xchg
jmp
lea
sub
mov
negb
dec
test
sub
pop
push
sbb
out
pop
mov
cwtl
dec
add
inc
push
das
adc
iret
pop
ss
shrb
inc
clc
imul
into
loope
lret
sub
in
or
inc
mov
jns
adc
mov
test
pop
sub
xor
xlat
dec
cmc
fisubs
neg
and
bndldx
insl
sbb
sbb
iret
lcall
nop
push
es
or
and
cmp
lods
imul
negl
xchg
xor
add
icebp
xor
int
lods
aaa
mov
mov
push
sub
xlat
ja
fcoms
imulb
es
inc
mov
pop
fsubl
bound
gs
cmp
or
or
jmp
mov
inc
pop
push
sub
inc
sub
push
mov
mov
stos
jb
push
and
adc
xor
pop
mov
inc
or
mov
dec
cmp
jae
xlat
pop
sahf
xor
addr16
filds
pop
pause
lods
mov
push
roll
inc
imul
jno
xor
lahf
sbb
or
cmpsl
dec
adc
or
es
dec
pop
jmp
mov
aaa
faddl
adc
aam
hlt
out
push
das
addl
mov
lock
or
lods
pop
mov
and
add
adc
and
clc
cmpsb
jno
push
das
test
sub
push
xor
test
jg
mov
add
xchg
cmpsl
aam
in
inc
fisubrl
loope
sub
dec
jns
dec
mov
mov
inc
adc
out
pop
add
fiadds
dec
push
push
jmp
inc
pop
ljmp
jno
adc
fs
hlt
cld
testb
cmp
push
ja
pushf
xchg
lahf
and
and
mov
jle
out
xchg
lcall
insl
call
or
pop
clc
test
push
lret
pop
cmpb
outsl
das
jae
ret
mov
fidivrl
xor
cmpsl
loope
jne
cmc
sbb
int
jmp
lock
js
pop
adc
ret
xor
jp
subl
push
lret
rcll
pop
dec
or
or
outsb
xor
int
dec
arpl
aad
rcrb
jae
test
dec
jne
jne
dec
imul
cld
mov
daa
in
lea
subl
jl
scas
fucomi
lea
mov
sbb
xor
ret
iret
sbb
push
cmp
mov
sti
cmp
lea
rolb
push
shll
mov
icebp
cs
adc
out
jmp
das
jnp
or
gs
loopne
mov
inc
hlt
push
popa
lret
es
xchg
pop
pop
and
jmp
mov
call
out
xor
cmp
jae
sub
lcall
fdivs
and
jb
std
ds
sbbl
ret
test
lds
mov
mov
test
push
mov
push
loop
mov
pop
or
mov
mov
aaa
dec
push
std
xorl
in
xlat
sti
les
adc
scas
pop
inc
ljmp
jae
mov
stos
adc
fdivs
push
pop
ljmp
push
daa
sub
sbb
inc
inc
cmp
or
test
push
sbb
or
mov
mov
loopne
mov
ret
test
mov
lock
jne
fsub
clc
ja
mov
loop
clc
cmpsb
mov
inc
movsl
xchg
push
mov
loopne
add
bnd
push
popa
aas
cmp
cs
inc
fstpl
and
dec
push
and
popf
xchg
adc
aas
into
jecxz
gs
sbb
je
in
xchg
aam
push
in
xchg
sub
repz
xchg
pop
xchg
cmp
inc
imul
push
lahf
mov
insl
jl
enter
xchg
jle
jl
fstpt
inc
insl
push
subb
mov
mov
push
test
or
les
loopne
cmpsb
sub
mov
rcr
adc
leave
xchg
cmpsb
mov
pop
fisubrl
adc
xlat
sbb
ss
shlb
clc
mov
popf
push
jmp
sti
xchg
or
roll
imul
add
js
and
fidivl
add
sbb
mov
decb
frndint
mov
sub
jg
int3
leave
fs
rep
xor
jb
iret
mov
mov
jnp
mov
sbb
mov
addb
sub
test
loop
jbe
icebp
and
xchg
rcrl
cmp
loopne
adc
lahf
jle
add
mov
ds
test
inc
dec
inc
in
je
mov
adc
dec
dec
aad
pop
mov
loope
adc
jmp
xor
inc
jne
dec
je
pop
imul
scas
js
mov
push
sti
cltd
dec
arpl
mov
jg
stos
and
jns
inc
dec
mov
xchg
adcb
and
int3
xchg
cld
in
push
or
push
iret
popa
std
cmp
fsts
subb
cmp
icebp
in
ja
fsincos
cltd
out
inc
stc
xor
aam
rcrb
jnp
lret
xchg
add
cmpsb
das
dec
cmp
jle
je
mov
test
imul
push
mov
cmc
adc
stos
ficoms
push
scas
cmp
jbe
push
xchg
sbb
call
out
jl
adc
inc
sub
hlt
in
mov
xor
mov
mov
jae
dec
push
inc
xlat
xchg
push
or
jns
adc
pop
lret
xlat
xor
mov
les
xchg
mov
hlt
nop
adc
xor
inc
gs
cli
or
xorl
mov
mov
cmpsb
divb
jge
dec
negl
jbe
or
insl
or
jne
mov
xchg
xchg
enter
inc
and
shlb
jl
mov
pop
sub
xor
dec
mov
aas
aam
mov
add
sbb
or
cmp
clc
xor
movsb
pop
lcall
stc
or
stc
and
push
xchg
push
paddb
leave
loop
fsubs
outsb
lock
push
push
loope
inc
inc
test
xchg
cmp
in
xor
test
fcompl
fneni(8087
enter
sbbl
dec
dec
and
or
mov
into
es
sbb
adc
jbe
push
mov
jmp
push
andl
out
push
add
and
fwait
test
test
sbb
icebp
mov
mov
pop
xchg
mov
xchg
pop
cmp
add
lea
js
push
jmp
cltd
adc
fistpl
jno
and
sub
testb
mov
imul
inc
pop
inc
enter
jne
mov
mov
sub
nop
adc
lcall
cmp
loopne
push
push
pop
outsl
ret
dec
xchg
inc
dec
fildl
idivb
mov
adc
xor
sbb
loopne
int3
fcomps
inc
test
lret
popa
int3
insb
jmp
mov
push
fcomip
or
jecxz
hlt
push
sbb
push
fdiv
add
pop
xchg
pop
adc
dec
paddd
enter
pop
xchg
inc
or
jae
cli
stos
aas
scas
in
sbb
inc
leave
test
fcomip
dec
icebp
jle
mov
pop
sbb
shll
sub
pop
xor
push
push
data16
cltd
xor
pop
and
stos
dec
jbe
xor
mov
or
pop
test
add
jno
xchg
jmp
je
inc
sub
jo
sbb
push
movsl
lcall
xlat
movsb
rcl
outsl
sub
sub
lods
les
inc
cmp
mov
data16
scas
pop
cli
inc
xor
add
out
cltd
out
mov
lock
jecxz
dec
movsl
mov
aad
ficoms
ror
inc
cmpl
fcomps
stc
xor
rorb
xchg
faddl
test
jo
cli
lods
pusha
ss
rorl
sub
cltd
cwtl
or
xchg
lret
movsl
stos
or
inc
or
lds
cmpsb
cld
cmp
fisttpll
pop
imul
dec
std
scas
mov
aas
into
out
aad
ret
push
mov
push
fnsave
iret
ret
xchg
mov
dec
push
xor
inc
cmp
sub
add
dec
fs
repz
mov
icebp
or
push
aad
scas
popa
xchg
lods
cli
sbb
lret
dec
and
jge
or
mov
iret
push
popa
jbe
cmp
enter
xchg
orb
fcoml
mov
cmp
mov
add
push
stos
pop
jo
fnstenv
add
push
rorl
pop
xchg
jo
aas
lahf
jmp
pop
sbb
sti
push
mov
or
add
cmp
cmpl
sub
push
fs
aam
lods
mov
out
ret
ficompl
push
dec
xchg
fstl
cmpxchg
rorb
adc
cmp
inc
ljmp
addb
addl
xchg
rcll
loop
addl
pushf
lret
mov
data16
jge
iret
addr16
loopne
jno
jb
xor
push
sbb
fildll
xchg
pop
mov
adc
lret
stc
pop
mov
divb
xor
jle
and
gs
outsl
roll
jae
dec
pop
ds
mov
pop
imul
inc
pop
cmp
loop
filds
lcall
and
leave
test
push
imul
cmp
lret
nop
movsb
pop
mov
mov
iret
pop
insb
imul
xor
pop
andb
xlat
sub
push
mov
or
dec
cmp
enter
hlt
jp
jmp
inc
pop
daa
fldl2t
pop
imul
xorl
mov
das
mov
lahf
fcmovne
mov
cmp
lcall
insl
loop
sub
sbb
jae
lret
js
js
and
mov
addr16
dec
jbe
add
in
jmp
pop
in
xchg
inc
lea
incl
fwait
vmptrld
pushf
sahf
outsl
aad
sbb
jns
pop
push
dec
xor
push
xor
push
in
sbb
xchg
pusha
or
out
mov
pop
xchg
scas
sarb
pop
cli
lods
sbb
mov
dec
faddl
mov
arpl
repnz
xor
mov
mov
fcomip
rolb
jnp
test
shrb
pop
sub
rorb
fildl
mov
test
xchg
fdivrs
cmp
inc
ret
fisubrl
or
loopne
push
stos
iret
cltd
push
fdivrs
push
lock
sub
xchg
insl
xchg
or
pop
push
hlt
and
pop
sbb
daa
sub
loope
mov
push
incb
fldcw
out
insb
decb
andl
in
xor
inc
lahf
ret
mov
jle
test
pop
out
in
ret
xor
jge
mov
push
or
push
mov
cmp
lret
dec
popa
mov
inc
out
jge
mov
jbe
in
call
push
hlt
mov
dec
mov
xchg
das
ror
hlt
lds
out
and
xor
lret
push
cmc
lock
in
sub
fstl
lcall
icebp
cmp
fnstcw
cmp
pop
imul
jnp
mov
pop
sahf
sbb
sbb
pop
push
popa
popf
dec
mov
mov
popa
int
sbb
xor
in
cmp
mov
dec
mov
sti
jb
and
iret
clc
lahf
daa
inc
lods
push
add
and
jle
jb
gs
test
mov
cmp
dec
insb
rolb
test
jge
cmp
cmp
push
inc
cmp
adc
or
inc
mov
in
adc
mov
push
cltd
pop
lea
lea
push
bound
imull
sbb
fs
dec
addr16
fistpll
cmp
loope
int3
add
push
xchg
mov
aad
call
push
jo
cmpsl
ss
ror
cmp
aas
pop
sbb
mov
xchg
adc
inc
add
pop
out
pop
push
xor
jae
dec
pop
adc
jno
xchg
xchg
or
push
xchg
das
aam
shr
iret
mov
cmp
into
adc
push
jno
or
pusha
mov
repz
or
pusha
mov
xor
pop
lds
pushl
xchg
inc
mov
std
lods
das
mov
aas
cwtl
lret
xchg
xchg
dec
shrb
pop
xor
iret
mov
jno
loop
push
imul
and
inc
ss
adc
push
push
sbb
fisubs
divl
clc
mov
xchg
test
test
mov
daa
pop
cmpsb
fstps
xchg
ljmp
dec
pusha
push
repnz
rcl
mov
sbb
jb
jno
or
lcall
xor
pop
mov
push
or
mov
mov
and
ds
ffreep
mov
inc
lret
xchg
and
inc
loopne
mov
cmp
cmovns
fistl
inc
out
xor
add
arpl
mov
cli
mov
cltd
loopne
leave
popf
int3
mov
inc
gs
decb
and
rcl
scas
insb
mov
test
rolb
cmp
sub
and
xor
icebp
push
add
loopne
jo
inc
dec
ljmp
dec
mov
mov
push
lret
xchg
xchg
mov
iret
jecxz
iret
adc
hlt
insb
fs
scas
pop
insl
cmp
or
adc
push
imul
push
pop
and
mov
mov
int
fistl
jmp
mov
pop
pop
mov
in
and
jg
lods
movsb
jae
lret
and
es
pop
out
adc
cmp
mov
aaa
cmp
mov
and
inc
lahf
mov
cmp
mov
xor
sbb
pop
pop
pop
insb
push
sub
mov
dec
mov
sbb
addr16
sarl
add
adc
fdivrp
inc
xor
mov
xor
mov
xlat
push
and
pop
xchg
or
dec
leave
push
sub
sub
fwait
into
xor
ds
sarb
jl
push
mov
pop
and
xor
into
movsb
in
bound
sub
lahf
cmp
test
and
dec
fimull
jle
adc
cmp
std
add
das
movsl
push
pop
sub
cmp
or
cmp
xchg
test
cmc
int
push
and
aam
std
dec
loope
push
in
jp
ret
cmp
add
ss
test
loopne
mov
rcll
push
imulb
aaa
xlat
jbe
inc
call
dec
sti
bound
idivl
jns
push
xor
call
cltd
and
and
sub
sar
xchg
mov
jbe
into
xchg
push
call
mov
jo
inc
xor
addl
call
jnp
idiv
xor
into
push
loope
inc
pop
xor
mov
out
pusha
inc
outsb
jo
arpl
icebp
in
aad
cwtl
xchg
insl
pop
push
fisttpll
ret
popf
sbb
call
int3
jg
adc
in
xchg
adc
in
iret
lock
mov
cmp
jg
push
pusha
ficomps
pop
push
lock
cmp
shrb
insl
mov
jnp
scas
push
pop
scas
loop
mov
mov
into
cmpsb
scas
das
int
ret
out
adc
lods
adc
mov
mov
xchg
pop
int3
jge
call
outsl
hlt
xor
lods
ds
jle
cmc
jb
cli
sub
mov
clc
and
sub
fimull
outsl
pop
lcall
mov
dec
int
enter
repnz
mov
sahf
jmp
lret
fnstcw
aam
fiaddl
push
cmp
bnd
add
mov
incl
push
jae
mov
cmpsb
sub
adc
sub
add
aad
cmpsl
add
leave
dec
mov
notb
fsts
dec
add
jmp
mov
adc
mov
xchg
jl
sub
mov
rcrb
sbb
std
and
mov
push
jecxz
fdivrs
lret
push
mov
mov
enter
sbb
sub
inc
adc
xchg
pop
mov
mov
pushf
dec
lock
lods
aad
leave
xchg
movsl
and
pop
ljmp
daa
xchg
mov
cmpsl
rcrb
cmp
push
adc
jle
push
xchg
adc
ret
test
ljmp
ljmp
mov
pop
adc
inc
inc
pop
rcl
stc
mov
adc
out
jge
sub
or
ret
lcall
insl
mov
inc
xor
sub
mov
sbb
loop
adc
push
in
cli
loop
fadd
jmp
lock
loopne
mov
pop
in
shl
dec
jecxz
imul
push
in
push
js
test
mov
scas
mov
mov
inc
cmc
hlt
mov
push
push
mov
je
xor
mov
xor
pop
pop
xchg
mov
pop
xor
adc
loopne
lret
push
cmp
jp
cmp
std
ret
lcall
gs
pop
mov
stos
jo
test
int
popf
pop
push
adc
shll
dec
adc
fwait
adc
mov
loope
xor
cmpsb
jle
fdivr
push
jno
cmpb
mov
mov
cs
push
mov
add
addr16
push
mov
lahf
jno
je
notl
lods
cmp
mov
jg
xor
cmp
imul
sbb
test
or
ret
inc
mov
xchg
jp
jmp
xchg
push
int
cmp
in
int
pop
jo
or
hlt
xchg
negb
xchg
add
test
dec
rol
mov
fmull
aas
fcmove
mov
jl
pop
daa
sub
shrb
ret
push
in
es
test
jae
cmc
test
insl
in
mov
popf
dec
sbb
dec
popf
aad
pop
pusha
movsb
push
inc
andl
out
rclb
bound
nop
xor
pop
shlb
push
call
es
push
sub
xchg
icebp
dec
sti
insb
push
cmp
in
cli
or
push
fidivrl
inc
cmp
addr16
mov
dec
xchg
sub
jns
stos
jl
sbb
push
and
in
in
out
jge
ja
mov
adc
cmp
adc
cmp
add
push
int3
leave
bound
clc
xacquire
inc
imulb
shll
jl
and
hlt
inc
ss
push
mov
pop
inc
xchg
js
xor
cmp
cmp
faddp
and
shrl
bsf
scas
lret
lahf
decb
lret
and
hlt
sbb
fsubl
repz
add
dec
jge
mov
dec
iret
pop
sbb
sahf
enter
jns
and
dec
jle
pop
cwtl
mov
lcall
sarb
xchg
loope
mov
pop
lahf
and
push
aaa
and
mov
pop
push
fwait
push
negb
sahf
rolb
stos
xchg
inc
ljmp
fldenv
push
inc
xor
dec
in
pop
sti
xchg
mov
push
xor
outsb
ret
adc
pop
mov
or
jo
xor
movsb
sub
out
pop
lods
out
pop
repnz
dec
rcll
lret
or
jae
cmp
fcomps
les
push
mov
mov
xor
das
add
out
xchg
aas
inc
adc
rcll
xchg
dec
xlat
rcrb
out
adc
cmp
mov
xor
outsb
daa
ljmp
adc
adc
inc
loop
push
sbb
mov
mov
xor
in
xlat
repnz
lock
mov
xchg
addb
cmpsb
lret
test
xor
stos
scas
lahf
stc
cmp
ja
scas
mov
jns
mov
imul
sarb
dec
enter
fiadds
or
rcrl
sbb
icebp
enter
mov
mov
xor
subb
lret
sbb
gs
cli
dec
mov
jle
scas
mov
insl
mov
cmp
mov
push
mov
inc
xchg
xor
sub
in
std
mov
mov
xor
dec
or
jo
or
and
fnstsw
bswap
xor
dec
sbb
lock
je
cwtl
enter
test
call
xlat
mov
shrb
outsl
std
pop
ja
in
ret
daa
aaa
mov
imul
imul
into
popa
push
rcl
jnp
jb
jge
jo
xchg
push
mov
pusha
cmp
inc
lds
lods
nop
dec
sbb
addr16
rorl
aaa
outsb
or
xchg
cmp
inc
and
sub
sbb
in
xor
movsb
aam
inc
dec
xchg
add
push
in
int3
ret
test
xchg
pop
daa
std
lret
daa
dec
inc
inc
mov
adc
dec
test
push
cmc
mov
mov
shrb
lret
in
mov
xchg
adc
mov
mov
lret
stos
je
std
sbb
xchg
push
loope
cmp
inc
idivb
mov
imul
push
jno
pushf
or
pop
andl
add
pop
dec
ret
mov
aaa
cmp
clc
test
inc
jmp
jmp
jns
add
das
aam
push
and
xor
clc
add
aas
sub
nop
mov
jecxz
in
rcrb
dec
cmp
cmpsb
lea
jnp
add
mov
add
mov
enter
xor
jae
repnz
jo
setns
jecxz
mov
bound
mov
rolb
repz
dec
mov
sbb
test
xchg
push
daa
adc
dec
out
mov
pop
jne
bound
lea
sub
addr16
imul
cmp
inc
sub
jne
push
mov
ljmp
movsl
incb
push
sbbb
jae
add
ret
rcrb
fwait
dec
loopne
je
adc
dec
mov
cltd
ds
pop
inc
inc
jno
aad
imul
jmp
js
aas
test
popa
addr16
out
popl
inc
std
jmp
mov
lahf
mov
adc
adc
mov
adc
inc
sbb
fwait
jno
pop
cli
add
cld
arpl
loope
sbb
xchg
pushf
push
nop
jnp
add
testl
int3
mov
adc
add
cs
sub
adc
or
gs
mov
popf
cwtl
or
adcl
arpl
cwtl
insl
mov
adc
xchg
xor
mov
leave
xorb
inc
xorl
lahf
pop
out
jns
xchg
xchg
icebp
inc
mov
pop
js
sub
push
inc
xor
sub
cmpsl
pop
cld
fidivrs
inc
inc
shrb
icebp
xchg
movsb
xor
adc
dec
popf
ret
and
cmp
fdivr
dec
jo
mov
sub
push
pop
xchg
std
xchg
lods
sub
add
dec
lret
push
in
jle
je
iret
xchg
dec
xchg
leave
outsl
adc
push
in
pushf
stc
mov
mov
and
cmp
adc
mov
jne
sub
hlt
sbb
andw
pop
add
xor
or
popl
out
adc
daa
ret
loop
sti
mov
xor
xor
mov
jmp
mov
push
sub
daa
jle
fsubrl
and
add
dec
pop
and
js
mov
adc
mov
cwtl
in
or
inc
ljmp
cli
js
xchg
rcr
test
pop
jmp
pop
xchg
add
les
pusha
hlt
pushf
xchg
mov
popa
sbb
pop
cmp
or
inc
sbb
fs
add
lock
daa
jo
pop
or
ss
bound
arpl
sbb
or
loope
push
test
add
stos
ss
in
rolb
std
dec
mov
push
push
push
out
loop
ret
mov
das
les
jno
lods
jae
xchg
out
ss
pusha
ss
xchg
xchg
pushf
cltd
xchg
call
push
jo
xchg
xchg
adc
cmp
push
sti
std
lods
es
add
out
xor
sahf
push
les
movsl
xchg
into
std
out
out
sub
bound
jge
aaa
lods
add
xchg
push
add
and
mov
adc
dec
xchg
fsts
lret
fists
pop
sub
dec
stos
xchg
sahf
mov
mov
xchg
out
das
sub
push
xchg
leave
aaa
sub
jl
in
js
cltd
lcall
mov
jmp
pop
fprem1
fstps
lods
and
xlat
jle
xchg
add
add
enter
das
pusha
xchg
cmc
test
insl
pusha
lods
loop
adc
lahf
xchg
dec
cmp
pushf
movsl
je
inc
lock
sbb
jle
ret
pop
rcrb
js
adc
sbb
in
imul
addr16
add
outsl
sbb
or
mov
jl
ficoms
xor
in
fildl
sub
cmp
sbb
nop
daa
loope
add
in
mov
mov
jns
out
ljmp
test
fcmovb
or
cmpsb
or
jns
gs
sbb
jne
mov
add
fsubp
adc
xchg
sbb
popf
sub
pop
jecxz
repnz
cmpsl
and
and
lods
mov
pop
inc
cmp
sar
imul
cli
inc
pop
lds
test
movsl
mov
movsb
ds
mov
jle
or
in
mov
aas
orb
aaa
jmp
cli
insl
movsl
jecxz
cli
dec
mov
ror
in
loope
sbb
int3
fs
push
inc
bound
sarb
inc
mov
inc
mov
lods
sbb
rolb
fnsave
add
dec
xchg
push
insb
cmp
clc
cli
mov
xchg
and
cmp
sbb
in
mov
sub
mov
das
insb
or
jge
jo
xchg
nop
inc
fstl
mov
dec
dec
movb
sbb
and
testl
mov
sub
sub
or
iret
out
sub
sbb
sbb
dec
and
cmp
jecxz
sbb
push
lea
cli
dec
bound
mov
sub
mov
pop
sub
dec
shll
ds
scas
scas
loopne
or
dec
xchg
push
mov
jns
push
cmp
jne
ds
outsb
add
into
in
xchg
std
jecxz
aad
repz
cltd
push
je
adc
ja
xchg
dec
mov
hlt
inc
in
dec
notb
mov
ret
ds
mov
cmc
push
daa
jge
loop
addl
mov
pop
jmp
add
repnz
ss
in
outsl
js
jne
stc
test
lock
inc
xchg
cmovg
adc
and
mov
jmp
addr16
outsb
cmp
decb
shrl
sbb
mov
mov
adc
popf
mov
popa
sarb
cmpsb
pop
enter
dec
cmp
sbb
add
in
shll
ss
xor
mov
test
cmpsb
add
mov
mov
xor
dec
in
fdivs
mov
jl
adcl
xchg
leave
cmpl
jmp
ja
inc
mov
in
imul
pop
cmp
mov
lret
xchg
in
xchg
xchg
xchg
and
jbe
cli
ret
addr16
xchg
add
adc
in
mov
xor
stos
adc
jns
and
in
sbb
mov
hlt
add
add
push
lods
push
das
repnz
mov
int3
add
cmp
hlt
xor
xchg
pop
sti
xchg
mov
ss
or
lock
jno
ret
dec
jae
mov
insl
ror
sbb
add
int
mov
dec
fdivr
lcall
sub
lret
pop
sub
test
addr16
inc
pop
loop
jg
mov
mov
push
adc
sbb
movsl
inc
bound
push
mov
or
jge
out
sbb
or
cli
and
dec
adc
in
lock
pop
push
xor
inc
cmpsb
fs
mov
loope
mov
cmc
add
sbb
dec
jecxz
daa
and
mov
pop
inc
mov
divb
ljmp
xchg
dec
iret
imul
int
or
adc
lret
mov
mov
and
pcmpgtb
jle
lods
xchg
sub
subl
rorb
ds
shrl
mov
rolb
xchg
test
out
fstpl
or
pop
cmpsb
inc
add
popa
mov
outsl
push
xor
cs
inc
add
xor
inc
sub
ljmp
idivb
cltd
dec
and
pop
jbe
lret
xchg
inc
enter
out
movsl
mov
adc
push
jb
lcall
popf
cwtl
vmread
arpl
cmpsl
imul
xchg
cmp
mov
xlat
cs
mov
push
mov
pushf
cmpsb
cwtl
sub
cmc
aam
aaa
lret
adc
pusha
adc
mov
cld
mov
out
jmp
ljmp
ss
adc
push
jmp
inc
xlat
cltd
or
loopne
call
js
ret
ret
inc
mov
pop
jns
push
xor
add
out
sbb
push
lcall
call
and
sub
and
mov
cmp
add
mov
mov
add
idivb
sub
jnp
stc
or
mov
cwtl
pusha
lods
pushl
in
pop
jo
pop
jmp
jbe
mov
mov
or
sub
mov
icebp
jne
adc
add
decl
lds
inc
shrl
pop
addr16
adc
js
xchg
xchg
pop
mov
ja
dec
jns
dec
fisttpl
xchg
jecxz
cli
xor
mov
adc
cmp
andl
popf
out
dec
jne
sub
push
call
outsl
ret
pop
inc
cmp
jbe
pop
icebp
outsl
mov
idivl
sarl
sub
lahf
fs
dec
dec
in
popa
or
int
mov
mov
sub
outsl
cmpl
stos
inc
icebp
fs
out
out
xor
lret
ret
fwait
jg
aad
cmp
aad
xor
jg
test
jo
pusha
jecxz
mov
fs
mov
fisttpll
adc
sub
loop
inc
pop
inc
push
std
xchg
xchg
or
not
jmp
repnz
mov
lcall
sbb
inc
les
sub
cwtl
shl
aaa
add
sub
rcll
mov
cli
aad
clc
iret
push
dec
pop
rcll
into
std
cwtl
arpl
push
insb
inc
lock
adc
lret
inc
gs
fisubl
mov
cli
ds
insl
sbb
mov
sbb
loop
sbb
and
push
jb
jp
and
cmc
cmc
push
cltd
mov
xorb
push
pop
stc
cmp
stc
adc
sbb
jbe
cmc
addr16
imul
icebp
xchg
sub
sbb
iret
cmp
adc
xchg
jno
data16
leave
xchg
pop
xchg
xchg
pop
xchg
in
mov
sub
xchg
imul
imul
imul
or
pop
in
cmc
leave
leave
aam
aas
out
xchg
lock
fisttpl
stos
xchg
sbb
mov
push
cmp
aad
dec
cmp
lahf
mov
fwait
shll
xchg
xchg
bsf
in
js
jbe
subl
or
dec
mov
cltd
outsl
add
mov
fidivrl
xor
movsb
fisttpll
ret
dec
scas
scas
dec
xchg
jns
cmp
bnd
repz
fcompl
cmp
lret
push
enter
mov
out
xchg
cmp
in
push
mov
mov
lahf
cli
dec
ss
cld
cmp
pushf
hlt
sub
sbb
xor
jmp
ficompl
ss
imul
dec
bound
loopne
ret
cmp
lock
push
jecxz
in
and
ss
mov
xchg
inc
dec
mov
fs
cmc
cwtl
cmp
mov
and
test
fs
mov
unpcklps
aad
xchg
ja
cvtpi2ps
and
je
mov
fisttpll
dec
push
ljmp
test
ds
sub
xchg
adc
jl
loop
or
mov
pop
fucom
fists
cmpsb
xchg
movsb
xchg
or
or
aaa
cmp
jl
addr16
popa
sti
in
and
aaa
sub
mov
mov
loopne
add
jecxz
xor
addb
stc
inc
or
out
mov
add
pusha
push
insb
loope
outsl
hlt
jo
shll
psubq
adc
imul
loopne
dec
js
inc
test
mov
jne
pop
add
xchg
sbb
mov
pop
dec
pop
fbld
xchg
dec
xchg
mov
ds
andl
lret
xor
jmp
dec
and
xchg
dec
xchg
cwtl
ficomps
dec
arpl
jle
lods
push
xor
xlat
inc
hlt
sti
fidivl
movsb
mov
and
notb
add
dec
out
xchg
stc
sub
fldt
ret
jnp
push
mov
mov
inc
mov
int3
rcrl
inc
pop
fcompl
lahf
shll
fwait
mov
and
push
xor
inc
inc
jb
neg
out
je
cmp
or
out
fcmovnb
mov
les
sahf
lahf
ss
rorl
push
jg
and
cmp
in
lcall
mov
push
or
add
aaa
ss
movsl
das
sbb
or
xchg
mov
dec
icebp
fwait
mov
outsb
hlt
repz
xor
and
xlat
mov
and
sbb
fisttpll
mov
mov
xorb
cmc
dec
jb
outsb
popa
sbb
lahf
add
sub
mov
add
push
cmp
add
fistl
mov
sbb
fcomp
ja
and
mov
dec
and
push
lcall
or
in
xorl
jbe
push
xchg
or
mov
call
repz
movsb
mov
stos
jp
iret
jne
lcall
pusha
cmpsb
xlat
rol
movsl
xchg
adcb
xlat
mov
frstor
cmpl
shl
fnsave
andb
test
adc
jo
int3
mov
stos
in
jns
xchg
add
nop
lret
cld
mov
es
add
bound
and
repnz
pop
gs
aas
shlb
push
fstpl
xchg
ljmp
pop
dec
xchg
out
sbb
mov
mov
pop
mov
dec
dec
std
push
int3
sbb
scas
or
add
pop
fwait
mov
fstps
or
cmpb
mov
mov
subl
ljmp
push
inc
xchg
xor
leave
adc
push
outsb
shrd
push
adcb
popa
in
dec
dec
adc
lea
adc
rolb
arpl
out
pop
cmp
in
dec
scas
cltd
add
ret
mov
addb
ret
movl
imul
cmpsl
add
test
lcall
fdivrp
test
movsl
xor
mov
and
jmp
repz
add
or
push
dec
lret
popa
stos
call
inc
popf
sbb
mov
js
jp
addr16
lret
stc
xor
xchg
adc
xchg
jg
or
daa
mov
hlt
add
mov
ja
inc
mov
mov
push
jmp
je
aad
inc
adc
mov
repz
mov
xlat
xlat
mov
fidivrs
int3
jne
or
sbb
push
imul
pop
repz
mov
add
lcall
out
mov
fcmovb
and
mov
jg
push
add
ds
cmpsl
adc
rorl
or
pop
xorl
sti
pop
mov
adc
or
lock
mov
xchg
sbb
cmp
out
cltd
fisubrl
leave
xchg
mov
loopne
and
dec
mov
jne
in
fistl
inc
xlat
jnp
xchg
or
sub
jo
lcall
popa
inc
push
out
add
outsb
repz
lret
in
xor
sub
adc
sub
push
push
dec
movsl
bound
jmp
pop
nop
call
adc
push
cmp
cmp
daa
cmpsl
sbb
push
std
jp
sub
rcr
adc
ret
shll
mov
vmwrite
popa
cmp
lret
out
pop
jmp
addl
sar
ret
ret
or
ja
sub
pop
adcl
lahf
mov
fcoms
cmc
mov
cmpsb
out
pop
fisttpll
stos
cli
shlb
mov
pop
pop
cmovg
test
push
ret
into
or
xchg
ljmp
jne
mov
stos
mov
dec
insl
test
inc
or
cmp
cmp
cltd
jbe
loop
pop
fcomip
dec
dec
stc
inc
cmp
sti
push
mull
cmp
fnstcw
sbb
test
imul
lahf
mov
add
push
hlt
in
inc
add
xorb
and
cli
inc
repz
mov
sbb
sbb
cmp
test
inc
fildll
push
cmp
out
mov
enter
pushf
mov
dec
fcom
mov
lret
mov
loopne
cmp
sarl
out
insl
mov
sahf
jbe
dec
das
mov
cmp
or
inc
push
ret
ds
cmp
mov
test
jo
in
ss
cmp
scas
push
adc
fisubrl
or
stos
inc
cmpsl
adc
cmpsb
mov
push
out
outsl
fs
sarl
outsl
lods
sub
inc
adc
adc
pop
gs
cwtl
in
es
mov
out
fbld
imul
fstp
ss
xor
stos
mov
mov
and
mov
jae
icebp
or
push
incl
add
and
lods
mov
and
mov
push
movsl
cmp
das
shl
hlt
imul
mov
jge
mov
outsl
addr16
cltd
jl
sti
repz
inc
xlat
and
inc
ds
jae
movsb
mov
into
pop
enter
ja
and
push
mull
fcoms
ljmp
jl
mov
paddusb
into
jp
xor
stos
cmpsb
cmp
mov
pop
mov
call
roll
push
aas
mov
or
pusha
sti
mov
cmp
mov
jbe
xchg
sub
mov
adc
stc
xchg
fistpl
orb
jp
in
jb
mov
xor
iret
jg
push
dec
inc
shl
pusha
rorb
fcompl
dec
sbb
aad
push
add
or
mov
sbbl
cmp
sub
xchg
out
xor
xor
or
lret
enter
fs
mov
les
xchg
cmpsl
hlt
ja
xchg
or
sub
out
je
ja
inc
in
push
lret
or
movsb
and
dec
inc
lock
xor
mov
sti
mov
sti
and
or
push
and
mov
inc
mov
jbe
cwtl
neg
out
loope
xor
push
adc
test
mov
scas
push
mov
inc
stos
lods
test
mov
push
add
hlt
sbb
ret
pop
mov
fiaddl
vcvtsi2sd
lahf
imul
subb
out
in
xlat
orl
adcl
mov
and
jb
mov
xchg
mov
jnp
fisubrs
lret
subl
rcl
pop
adc
aam
sub
loop
jl
mov
jp
cmp
in
add
int3
mov
mov
test
mov
or
cs
xchg
pop
xor
movsb
lss
inc
pop
adc
imul
jns
lods
insl
push
sub
bnd
xchg
shll
sbb
jnp
ljmp
sub
and
in
xchg
rolb
mov
inc
lret
cs
shlb
push
cmpsl
xorb
mov
mov
mov
aad
ljmp
js
cmc
mov
addr16
popa
inc
xchg
iret
lea
test
dec
stos
xor
test
pop
mov
lret
jl
fisubl
stos
dec
jp
inc
push
js
sbb
adc
xchg
loopne
cwtl
xchg
mov
xor
fmul
mov
add
xlat
roll
mov
lret
jmp
insl
pop
xlat
or
inc
push
inc
cli
lret
mov
mov
pop
push
sbb
imul
pop
ds
or
popa
jmp
add
mov
mov
popf
ret
aam
loope
xchg
lods
adc
xchg
or
out
ret
inc
in
xor
mov
mov
xlat
cld
adc
pop
int3
daa
in
mov
push
movsl
dec
jecxz
mov
mov
dec
or
inc
pop
jb
push
in
arpl
mov
cmpsb
in
jp
and
adc
xchg
cmpsb
out
test
cmp
lahf
int
stc
sbb
jp
push
pop
test
and
fisubl
inc
dec
sbb
mov
dec
sub
adc
popa
push
mov
push
sahf
pop
out
push
orl
popa
lcall
pop
cmp
add
das
les
shl
push
stc
movsl
imulb
lods
cmc
mov
adc
or
adc
inc
in
or
fwait
sbb
and
push
iret
sbb
push
adcb
outsl
sub
mov
outsl
repnz
adc
loopne
lcall
dec
jo
fidivs
inc
mov
jno
and
pop
pop
dec
cld
es
xchg
mov
push
outsl
out
jae
pop
pop
mov
out
push
aas
andl
das
arpl
mov
addr16
bound
pop
xchg
out
xor
xorb
xor
out
insl
stos
bound
test
int3
dec
mov
decb
sahf
add
mov
adc
testl
pop
push
in
mov
sti
push
xchg
inc
inc
cmp
loop
lods
js
test
push
aam
in
daa
movsl
push
and
jmp
lcall
sbb
mov
cmpsl
cltd
xchg
leave
cmp
fisubl
out
inc
jnp
sbb
es
cs
add
aaa
mov
lcall
ret
mov
inc
sub
test
fucomp
fisubl
cmp
xor
adc
in
outsl
ret
cmp
lcall
push
fisubrs
out
ret
and
xor
pop
dec
mov
pop
xlat
andl
into
push
lds
jb
sarl
shlb
dec
lods
lds
push
mov
cmp
scas
mul
pop
bnd
cmp
shl
dec
lock
pop
sub
add
lahf
push
lret
mov
cmp
jmp
sub
xchg
mov
outsl
js
imul
jp
repnz
cld
enter
ljmp
and
mov
push
push
pop
sub
int3
mov
stos
test
adc
fstl
loope
in
mov
inc
mov
out
ret
mov
mov
fmull
mov
mov
pop
out
arpl
sbb
popa
movsl
adc
pop
push
mov
push
sbb
sbb
and
mov
sar
filds
roll
ret
and
mov
bound
adc
scas
ss
or
in
mov
inc
add
cli
imul
imul
fs
adc
dec
mov
in
mov
xchg
sub
ja
outsl
inc
jp
push
jp
xchg
ljmp
and
cmp
adc
lds
adc
aaa
fisubs
sub
sarl
dec
pusha
sbb
xchg
mov
nop
pushf
ja
lret
pop
pop
mov
adc
xchg
mov
fcoml
pshufw
packsswb
dec
pop
lret
mov
rclb
sbb
dec
mov
xchg
loopne
pop
jo
lds
addl
cmp
incl
dec
pop
xlat
sbb
lods
jp
lods
test
push
pop
mov
insb
jae
daa
cmc
or
add
adc
and
pop
mov
pop
fsubrs
xchg
xor
scas
jl
aam
push
and
lea
inc
mov
ljmp
sbb
orb
jge
popf
das
or
rclb
and
and
frstor
cmc
sbb
mov
sbb
xor
jbe
cmpsb
ror
xor
mov
movsb
jns
icebp
add
lods
cs
or
jb
pop
and
add
jmp
sub
fiadds
movsb
bound
mov
outsl
ss
mov
cmp
inc
dec
cmpsl
inc
movsb
adc
test
push
sbb
popa
in
dec
sbb
mov
imul
out
cltd
lods
jne
out
add
scas
jmp
aam
popf
jl
shlb
mov
inc
ss
mov
imul
and
arpl
stc
dec
pop
test
stc
int
mov
test
jns
push
sub
cli
dec
jmp
gs
add
push
dec
std
sbbb
xchg
adc
inc
je
pop
add
mov
divl
add
pop
mov
jb
test
fwait
jnp
js
fidivrs
adc
clc
xor
test
push
aaa
dec
jl
and
js
dec
pop
mov
push
clc
hlt
xor
shll
push
inc
jo
js
sub
in
cmpsl
or
push
fcmovb
xor
and
sub
imul
int3
mov
movsb
flds
adc
shll
mov
repz
rcrl
shrb
mov
jno
xchg
pop
xchg
mov
cmc
pop
push
add
mov
aad
dec
fs
movsl
ljmp
xor
shl
pop
push
out
je
jmp
and
pop
mov
xor
ja
jg
xor
sub
jmp
xlat
adc
leave
aaa
dec
add
arpl
iret
insl
sbb
lret
ret
or
and
idiv
or
mov
cmpsl
fimull
push
or
out
lea
test
xchg
sub
je
xchg
out
xchg
inc
push
out
inc
push
inc
cld
push
cwtl
inc
pop
jp
mov
mov
mov
repnz
jae
mov
jge
leave
fimull
mov
cmc
lods
jle
ss
pop
cmp
mov
mov
repnz
xchg
in
mov
mov
ja
sbb
sahf
cwtl
push
into
mov
dec
sbb
fnstsw
mov
lods
inc
sbb
inc
test
cmp
enter
aaa
xor
insl
add
ljmp
push
rolb
jmp
fs
loope
and
cmp
add
scas
int
xchg
mov
stc
iret
cmp
cs
mov
paddsw
add
jg
push
sbb
and
mov
jmp
icebp
mov
test
adc
xlat
mov
pop
mov
lds
inc
xchg
loop
mov
and
ds
orb
push
pop
jne
mov
pop
pop
sub
ss
mov
movsl
xchg
adc
cwtl
leave
test
xor
xchg
dec
cmp
and
rcrl
enter
xchg
jns
jl
call
sbb
out
push
or
fucomi
mov
mov
mov
dec
daa
inc
and
stos
xchg
add
jo
and
insb
push
cmp
add
shrb
lods
cmp
pop
aad
dec
mov
and
mov
cld
mov
fstps
jns
aam
scas
testb
imul
jno
xchg
cmp
data16
fstps
js
adc
iret
dec
mov
xchg
ja
xor
xor
into
adc
fwait
scas
jp
sub
adcb
or
test
jp
adc
xchg
dec
mov
test
out
xchg
adc
movsb
aaa
cmp
int
dec
inc
in
bound
sti
shlb
sub
lods
pop
sahf
pop
mov
lahf
mov
inc
dec
add
leave
jl
inc
push
psllq
adc
arpl
out
out
mov
mov
mov
cmp
xor
xchg
enter
int3
jae
or
iret
and
insb
add
inc
movsb
push
jne
pop
mov
mov
rcr
pop
or
push
inc
aaa
sub
dec
sahf
out
push
xchg
sbb
gs
pop
rolb
push
or
xor
dec
aam
decl
lods
shll
pop
daa
call
repnz
xor
les
cmp
icebp
fisubrs
fld
sbb
cmpsl
xchg
xchg
mov
dec
jo
lret
sub
adc
lock
mov
jbe
mov
cmpsb
fwait
dec
or
cltd
mov
push
push
jecxz
lods
testb
inc
movsb
cmpsl
and
imul
mov
add
xchg
push
mov
mov
bound
fwait
shll
or
xchg
inc
xchg
mov
testb
fstpl
sahf
mov
push
test
mov
xor
hlt
rorl
jne
fs
push
gs
mov
mov
push
dec
rcl
lret
cmp
mov
add
ss
adc
mov
nop
je
subl
dec
cmp
push
xchg
insl
ja
dec
leave
jno
cmpsl
or
push
insb
adc
in
imul
aas
mov
hlt
pop
adcb
movsl
add
lock
outsl
repnz
xchg
rcr
das
push
lock
insl
and
arpl
cmp
mov
hlt
or
pop
jp
adc
leave
addb
sbb
mov
test
sahf
pop
xor
rcr
xor
test
cmp
test
sbb
cmc
mov
mov
pop
xchg
jecxz
inc
mov
rcrb
in
jp
fwait
pop
inc
outsl
push
push
push
push
jnp
out
mov
and
cs
leave
pushf
mov
mov
inc
pop
rcr
or
imul
repnz
lret
dec
mov
notb
inc
xchg
inc
and
xchg
jno
push
mov
xlat
jno
mov
mov
test
sub
dec
aas
xor
ja
push
inc
mov
xchg
mov
movsb
add
scas
xchg
stos
fisttpll
dec
idiv
adc
dec
dec
jne
packsswb
into
sti
insl
mov
inc
push
pop
dec
insb
in
push
cmp
fldl
cmpsb
mov
popa
mov
mov
in
icebp
test
out
scas
pop
sbb
xor
das
adc
jns
mov
jp
push
hlt
cli
xchg
mov
sbb
jne
jo
xchg
jbe
adc
sbb
push
dec
or
cli
lret
popa
std
or
scas
adc
push
pushl
in
lock
push
cwtl
cwtl
repz
shll
lods
and
xchg
mov
xchg
inc
mov
mov
adc
sbb
xor
in
add
icebp
mov
fsubl
mov
addr16
in
pop
sbb
sbb
mov
cmp
cmpsl
xor
dec
adc
movsb
jo
movsl
dec
jl
in
movsl
push
rclb
int3
ror
int3
xlat
lock
aas
hlt
and
test
outsb
push
ss
ret
vcvtps2dq
pop
lcall
add
cs
shll
mov
push
xor
add
pushf
and
inc
mov
and
push
lods
xchg
or
fimuls
jno
into
insb
adc
test
sbb
push
jge
mov
bound
mov
inc
sub
jno
mov
dec
sbb
adc
mov
jg
aam
rcrb
add
fcoms
mov
lahf
fbld
popf
lcall
fstpt
xchg
cld
sarl
mov
loope
jmp
fsubrs
ret
and
mov
sti
mov
testb
sbb
pop
xchg
popf
adc
xor
pop
adc
push
push
leave
or
fwait
stos
mov
int3
dec
jecxz
and
retw
movsl
dec
and
hlt
scas
fisubl
sbb
and
cmpsl
scas
popl
sub
jbe
cmpsb
ss
xor
jmp
cmpsb
ret
cs
sub
subl
and
rorb
adc
mov
shr
xor
mov
ds
stos
adc
aam
shrb
jno
dec
inc
jbe
sub
add
cs
pop
pushf
pop
mov
jmp
outsb
pop
xor
xchg
daa
mov
aam
xchg
mov
fmul
lahf
sbb
rolb
mov
in
cld
pushf
sbb
into
pop
popa
loop
adc
mov
pop
xor
stc
pop
jmp
leave
pop
scas
jg
stos
cwtl
movsb
fisttps
adcl
cmp
nop
xorb
cmp
jecxz
enter
cld
insl
stos
out
adc
sbb
and
push
cmp
repz
cltd
sahf
xchg
stos
dec
data16
out
sub
dec
cmc
call
push
inc
js
and
sub
loop
rclb
les
jne,pn
xchg
mov
lock
or
pop
mov
inc
roll
adc
in
xchg
jnp
xchg
stos
mov
leave
push
cmp
sub
dec
pop
and
fiaddl
scas
mov
cli
dec
out
jge
sub
add
gs
mov
mov
mov
sti
sbb
pop
add
sub
repnz
cmp
xor
imull
movsl
mov
dec
push
mov
stc
mov
int3
push
dec
dec
movsl
mov
aam
or
push
loopne
negb
mov
jle
dec
mov
pop
mov
sub
dec
pop
leave
std
xorps
in
in
sarl
out
mov
and
push
xchg
shl
aaa
jle
adc
cmp
bound
sbb
jno
sbb
popa
shlb
jecxz
or
mov
les
lods
enter
push
push
stos
pop
lret
orl
cs
sub
lcall
mov
push
in
add
jo
popa
mov
sti
xchg
or
sbb
in
or
lock
and
sub
and
fld
and
xor
jmp
xor
push
cli
dec
fisubl
sub
push
inc
sub
mov
sub
adc
add
imul
daa
or
lcall
xor
sbb
sbb
jo
mulb
jo
push
mov
mov
cmp
dec
mov
and
adc
cmpb
push
or
andl
sub
lods
call
fbld
jge
and
dec
mov
sahf
fwait
pop
mov
nop
mov
sub
scas
mov
cmp
mov
stos
fwait
adc
fdivrs
or
cs
hlt
pushf
flds
jne
pop
aas
jg
inc
aad
or
fnstcw
xchg
jle
mov
and
add
enter
lahf
pushf
and
ret
mov
clc
in
int3
arpl
cmpsb
div
jo
call
imulb
lods
inc
pop
adc
sbb
popa
inc
out
sbb
mov
sub
scas
and
mov
add
dec
cmp
inc
mov
sub
scas
xchg
in
shrb
mov
aaa
aas
and
test
jno
es
popf
notl
filds
mov
inc
inc
inc
cmp
dec
je
dec
testb
push
pop
fsub
daa
flds
add
gs
add
mov
adc
arpl
xor
arpl
lcall
pop
pop
push
inc
adc
adcb
lret
stos
adc
jo
sub
mov
mov
ja
and
mov
sub
xchg
int
adc
scas
inc
ret
jns
out
rcl
push
pop
lea
loop
shl
pop
xor
fisubl
xchg
mov
and
jne
pusha
pop
xorl
add
lret
or
mov
out
mov
push
xchg
test
xor
add
inc
out
or
mov
imul
jb
jg
aad
loop
fimuls
jge
mov
lea
xchg
mov
jb
jmp
int
subl
int
adc
xchg
add
seta
inc
bound
fwait
leave
mov
test
call
xchg
or
jl
in
ror
cmp
inc
push
mov
ss
sub
cli
jg
ret
mov
push
out
fsts
shll
pop
jl,pt
adc
lcall
loope
lahf
enter
jno
enter
xchg
iret
add
test
enter
mov
dec
aaa
jno
imull
push
test
sbb
test
insb
ds
subb
lret
mov
repz
push
cmp
mov
shll
or
jle
xchg
call
ss
fdivs
sub
test
gs
mov
mov
in
push
lock
mov
mov
sbb
cmp
push
sbb
xchg
pop
dec
jmp
sub
xchg
mov
xchg
cs
sbb
push
rorl
push
xchg
dec
dec
mov
test
xchg
mov
ds
jp
dec
data16
mov
bound
cltd
mov
mov
in
or
jmp
and
dec
stos
xchg
aad
jno
je
push
jge
es
aad
lds
lock
ja
push
icebp
fs
movsl
out
xchg
adc
cwtl
paddb
ljmp
in
rcrb
in
sahf
or
mov
adc
and
xchg
ss
or
in
lods
pop
pop
test
inc
inc
jmp
in
into
jns
inc
fs
outsl
sbb
adc
lock
decl
test
je
call
scas
mov
scas
xchg
and
xor
cs
mov
adc
sar
xchg
fcoms
pop
cmp
mov
mov
imull
xchg
stc
shlb
ja
loop
fcmovne
inc
add
dec
mov
dec
jo,pt
pop
test
mov
dec
popl
inc
cmp
mov
fistpll
popf
fldenv
out
out
jne,pn
mov
add
xor
imul
leave
enter
pop
xor
aam
pusha
inc
shr
jns
mov
test
and
lret
shrb
divl
jp
movb
lock
sti
mov
cmp
pop
push
testl
or
inc
popl
xchg
mov
pop
push
jle
inc
movsb
lods
enter
imul
js
jb
xor
inc
in
push
mov
jb
mov
or
inc
into
pushf
loop
push
std
leave
out
jge
pusha
mov
int
mov
jne
lahf
sub
mov
mov
and
inc
inc
mov
sbb
sbb
lcall
test
inc
movsb
fsubrs
pop
loope
loop
jno
lret
lods
insb
rcrl
add
lods
out
lcall
insb
sbb
ret
aad
dec
mov
mov
mov
icebp
lods
scas
inc
sub
and
add
sbb
stos
das
push
sbb
into
fsubrs
insb
sub
push
sbb
dec
jne
fsubp
insl
mov
or
sahf
xchg
movsl
mov
into
shll
fs
pop
idivl
mov
add
mov
mov
jns
xchg
pop
movb
adc
in
xchg
jmp
stc
sti
add
pandn
sub
mov
js
push
gs
pop
sbb
mov
jnp
insl
inc
push
add
pop
mov
outsl
test
lock
cmpl
aad
mov
mov
jl
mov
mov
dec
imul
test
stc
icebp
shll
fcoml
shrl
addr16
mov
scas
lock
sub
mov
ret
adc
or
dec
add
movsl
or
or
add
xor
jo
add
jmp
pinsrw
sbb
add
xor
cs
jecxz
lods
int3
add
xor
ficoms
cli
jno
shl
xor
decl
mov
push
sbb
hlt
inc
cmp
mov
add
pushf
mov
add
idiv
lahf
mov
mov
in
mov
aad
mov
pusha
pop
mov
inc
insl
fists
and
out
jnp
sbb
repz
dec
or
psrlw
adc
imul
mov
cmpsl
dec
sbb
xchg
xchg
sbb
fs
pop
inc
adc
mov
cmp
pop
xor
pop
adc
gs
pop
xchg
pop
cld
or
lcall
sbb
jae
and
push
sub
insl
ss
aam
cmc
mov
scas
pusha
stc
xchg
or
lds
dec
je
in
sub
xchg
test
ljmp
mov
mov
mov
dec
cwtl
insl
cmp
xchg
pop
clc
jp
std
pop
xorl
mov
jo
lds
xor
jp
ficompl
dec
in
cmp
aas
mov
push
std
xchg
dec
mov
into
fimull
xchg
outsb
les
frstor
fidivs
aam
or
roll
sahf
adc
dec
push
add
fs
mov
xchg
xlat
int
jnp
les
repnz
pop
adc
fwait
jnp
sub
movsb
mov
push
or
lret
mov
pop
loopne
inc
jge
sub
lods
arpl
xorb
mov
stos
jne
fstpl
sarb
fsubrs
fisubrs
mov
enter
jbe
mov
pop
stos
lret
ss
jl
je
iret
pop
xor
xchg
ret
lock
popf
bnd
mov
cmp
cmp
or
mov
insl
aad
rcl
mov
dec
repz
js,pn
sbb
mov
aas
nop
adc
push
xor
pop
leave
cs
test
or
imul
outsb
lock
xchg
xchg
jg
leave
adc
mov
fwait
push
dec
xor
xor
out
xor
adc
inc
adc
aaa
nop
inc
pusha
in
call
adc
call
xor
mov
or
sub
jne
mov
jmp
jo
sub
sbb
add
popa
mov
add
imul
cmp
sub
sub
xor
cld
sub
adc
sbb
mov
rorl
pop
mov
and
push
jmp
sar
movsl
pop
adc
out
ret
sbb
xor
xor
testb
mov
ja
push
es
add
js
dec
shlb
and
mov
enter
jb
mov
jle
and
scas
es
jbe
loopne
repnz
divb
push
daa
inc
test
leave
rcrb
mov
xchg
cmpsl
jne
fcompl
jge
andl
mov
push
stc
mov
cmp
cmpsb
jne
mov
fnstenv
or
mov
iret
lock
sbb
pop
dec
add
dec
jle
addr16
sub
cmpsl
clc
cmc
incl
sub
push
pushf
std
outsl
leave
inc
icebp
out
jbe
push
mov
adc
add
shll
aas
adc
cmp
or
call
out
adc
imul
cmp
dec
xchg
repz
jecxz
int3
repz
mov
fs
fwait
sub
daa
lcall
mov
mov
dec
and
arpl
std
mov
nop
int
and
lods
ret
and
or
cmp
dec
int
adc
sbb
fbld
xchg
dec
lods
shrl
adc
daa
jecxz
jp
or
mov
mov
in
jnp
jmp
or
aaa
add
push
scas
adc
push
loop
out
xor
sub
das
mov
sahf
jo
out
fcomi
test
movb
loop
mov
mov
orb
cmp
jge
pop
subl
mov
mov
inc
push
aam
nop
cmp
insl
mov
andl
ret
xchg
sbb
dec
sub
out
add
aam
ss
inc
std
pusha
cmpsb
adc
mov
insl
arpl
dec
dec
es
xchg
ja
cmpsb
fcmovb
push
cmc
in
shlb
xchg
pop
nop
pop
repnz
sete
cld
das
aaa
jb,pn
fidivl
jae
jnp
sar
mov
sbb
dec
xor
pop
pop
push
push
add
mov
add
or
je
ret
ljmp
repnz
add
pop
mov
jno
imul
stos
dec
addr16
inc
and
pop
lock
nop
out
enter
fidivl
mov
add
or
nop
pop
inc
push
cmpsl
cmp
ds
mov
adc
das
adc
fwait
xor
pop
xchg
adc
arpl
push
xchg
inc
iret
or
mov
xchg
daa
fdivl
iret
xchg
lahf
nop
adc
pop
data16
xchg
add
ljmp
faddl
insb
imul
add
add
mov
xchg
insl
sub
adc
popf
mov
jno
movsb
and
push
pusha
clc
mov
sub
mov
ret
sub
jecxz
jns
pusha
and
jae
or
xchg
and
add
cmovae
add
das
imul
mov
and
push
xchg
inc
xor
add
mov
cmp
jb
xor
test
outsb
cmp
adc
lods
lcall
popa
xchg
andb
sub
movsl
jno
sub
lock
bound
popf
shrb
rcll
into
ss
sub
jmp
sbb
pop
or
mov
or
aam
sbb
insb
ds
test
insl
roll
ret
mov
call
push
es
mov
or
imul
push
ficompl
aaa
fwait
pop
outsl
idivl
dec
lock
lock
mov
cltd
lcall
daa
stos
push
scas
fmulp
cmp
in
pop
or
jbe
xchg
ret
push
pop
movsl
jb
ror
add
jg
xchg
and
and
les
dec
pop
stos
lds
cmp
std
mov
add
imul
xchg
pop
scas
sub
mov
cmc
rclb
mov
add
pop
sub
hlt
pop
enter
adc
push
popa
and
lods
cmp
mov
mov
mov
and
mov
mov
cmp
in
int3
jmp
divl
rcl
test
loope
dec
mov
clc
ret
dec
pop
add
mov
shll
push
mov
mov
outsl
les
mov
add
xor
shll
xor
jl
mov
push
inc
mov
lret
ja
dec
jae
add
mov
xchg
pop
pop
mov
sub
es
pop
jae
fnstenv
ljmp
rcr
pop
sub
loop
out
and
imul
test
dec
sbb
pop
pop
repz
and
jnp
xchg
and
mov
into
aam
xchg
cmp
mov
push
mov
inc
pop
xchg
rclb
inc
test
ljmp
lcall
sbb
test
dec
xchg
insl
into
fildl
fidivl
or
mov
pusha
stc
in
cmp
mov
stos
or
jmp
inc
rorl
mov
out
sahf
jns
mov
not
inc
cmpsl
mov
pop
scas
in
mov
adc
and
dec
adcb
cmc
inc
incl
repnz
ljmp
xchg
inc
fucomip
jo
or
bound
std
sbbb
cwtl
in
lock
mov
cmc
cmp
mull
xchg
movsl
jns
out
cmc
adc
push
and
sti
mov
inc
jle
in
shll
push
in
in
shl
jnp
mov
push
faddl
int
daa
mov
jge
shll
mov
mov
mov
ret
push
or
scas
loope
fs
fmul
push
mov
dec
cltd
aaa
mov
xor
fdiv
adc
out
outsb
jmp
subl
cmpsl
lock
add
xchg
sbb
dec
push
lods
mov
lods
adc
mov
mov
and
add
insb
and
or
pop
cmpsb
cmp
mov
adc
sub
shll
ljmp
jg
and
movsl
ret
cmpsl
mov
ss
pushf
cmp
outsb
ss
jl
mov
popf
out
loop
fwait
in
divl
sbb
nop
and
stos
mov
sbb
outsl
jae
movsl
aad
mov
cmp
sbb
es
mov
das
repz
mov
das
sub
mov
js
mov
mov
and
adc
cld
daa
dec
jno
clc
add
sub
cmp
adc
pop
dec
leave
icebp
lahf
fs
test
andb
mov
arpl
or
add
imul
mov
popf
arpl
push
add
jmp
jnp
and
js
push
mov
sbb
mov
sbb
jg
into
shr
dec
fucomip
cs
xor
sub
jecxz
or
add
mov
rorl
sub
pop
push
xor
mov
fildl
in
les
sbb
add
jl
cmp
movsl
lds
push
ret
mov
rcrb
test
sub
xchg
dec
in
xor
mov
cmpsb
test
xchg
aas
cmp
and
imul
xchg
lret
jne
movq
das
loopne
mov
inc
clc
in
aad
jge
insb
xor
mov
insb
cmpsb
and
dec
imull
test
ror
imul
jo
sbb
in
mov
and
jge
in
sbb
imul
push
adc
inc
daa
adc
into
jo
or
les
inc
mov
into
stos
mov
cmp
jle
push
das
aam
inc
arpl
sar
push
imul
pop
test
ret
fmull
test
xor
addr16
outsb
add
adc
mov
popa
fsub
jle
or
jo
lea
scas
in
or
xchg
loope
out
cmpsl
sti
mov
jecxz
data16
and
cmp
pushf
sub
mov
add
rcr
mov
inc
mov
inc
mov
fcmovnu
push
adc
pop
pop
jp
xchg
jmp
dec
bnd
add
jecxz
push
mov
fstpt
cmp
add
pop
stos
pop
bound
push
push
xchg
push
test
mov
out
out
in
jge
push
pop
loope
pop
xchg
sahf
jecxz
xchg
out
xor
push
cmp
or
sub
into
sti
or
mov
push
dec
lahf
arpl
mov
std
test
jecxz
cld
hlt
loopne
addr16
push
and
stc
sti
arpl
repz
sbb
add
aaa
sbb
push
xchg
shlb
cmp
sbb
and
lods
adc
ja
dec
xlat
lods
mov
lret
jle
jb
jl
mov
outsb
jge
je
dec
ficomps
xor
xchg
arpl
xchg
sub
cmpsb
adc
dec
ljmp
pop
push
xchg
inc
jo
mov
or
push
push
mov
jle
xchg
add
es
popa
and
jns
mov
shl
ror
mov
xchg
push
mov
js
dec
xchg
jb
sub
in
out
push
ficomps
xchg
pop
jb
aam
mov
fs
xor
mov
cmpsl
add
xchg
jge
hlt
add
pop
sbb
fcompl
out
jno
xor
mov
sub
pop
mov
imul
movsl
lods
push
fstpt
popf
xchg
out
js
mov
stos
or
or
fiaddl
in
mov
rcll
dec
leave
mov
outsb
aaa
cltd
mov
outsb
add
std
fwait
mov
cmp
cmp
mov
fbld
ljmp
insb
movsb
pop
jb
pop
cltd
mov
iret
fst
cmpsl
adc
cwtl
fwait
aas
push
push
leave
cs
int3
jae
test
pop
jno
rolb
xchg
inc
jl
dec
fcomp
mov
or
jg
jl
hlt
push
cli
imul
lods
pop
jg
cmpsl
xchg
stos
cmpl
in
sub
call
push
int
ss
and
push
aaa
lcall
push
mov
sub
shll
bound
dec
cmpsb
dec
sbb
test
daa
mul
jo
sbb
imul
cmp
mov
sti
cmp
mov
adc
iret
ret
cmp
fwait
mov
js
mov
xchg
fwait
push
sti
sarl
add
call
or
sbbl
sub
aas
add
xchg
push
test
sub
movsb
loop
inc
stos
adc
cltd
popf
stc
pop
scas
fisubrl
and
dec
loop
fwait
rcrb
sbb
ds
sbb
mov
sahf
fistpll
xor
adc
adc
fisubs
sbb
addr16
imul
data16
cwtl
insb
cmpsb
add
lahf
and
jecxz
mov
sub
outsl
aas
push
stos
push
sarb
lods
and
add
enter
ret
or
loopne
cs
adc
and
jbe
jmp
enter
shll
lahf
packsswb
jge
inc
mov
push
push
clc
int
fldl
xor
addr16
sbb
rolb
xor
imul
adc
mov
and
in
into
jecxz
imul
loopne
cmpsb
imul
xchg
and
cs
sub
pandn
icebp
xor
pop
imul
fmull
jle
aaa
sahf
insb
jnp
pushf
mov
xchg
leave
mov
cltd
mov
add
dec
xor
stos
lods
xchg
data16
pop
and
lods
mov
push
in
in
shll
icebp
dec
ss
and
mov
ret
dec
loop
lcall
sahf
and
idivb
loope
in
jns
dec
or
je
test
pop
cmpsb
xchg
mov
int3
scas
pop
int
jle
pop
pop
cmp
es
pop
les
xchg
add
daa
mov
fs
sbb
jbe
cmp
xor
mov
xor
pop
aas
popf
xor
fwait
cmp
fisubrs
testb
xchg
lods
inc
xchg
add
je
jmp
and
mov
repnz
bound
insb
pop
je
adc
rcrl
dec
stos
adc
test
ret
adcb
arpl
pop
stos
jne
mov
out
test
or
and
aad
jbe
pop
mov
jg
ja
sbb
imul
xchg
sub
out
test
lret
dec
arpl
fidivs
js
fwait
mov
jecxz
arpl
mov
addr16
cmpsb
repnz
fistl
es
pusha
sub
rcrb
into
insl
push
inc
pop
jno
ds
dec
icebp
data16
add
inc
pop
movsb
mov
inc
adc
outsl
ret
add
insb
mov
and
add
pop
pop
pushf
iret
ja
loope
or
xchg
sub
adc
mov
mov
sub
lea
stos
dec
arpl
xor
mov
lock
arpl
adc
mov
cmp
push
cmp
mov
jno
jnp
or
ss
inc
cmpsl
cmp
adc
fisubrl
and
pop
push
loopne
rcl
repz
xor
jb
int
test
aad
testb
and
sti
or
pop
cwtl
xor
cmpsl
mov
les
push
repnz
mov
inc
jge
mov
sub
cmp
imul
pusha
test
inc
outsl
mov
rorl
out
adc
adc
dec
inc
rcrb
xchg
pop
pop
push
xor
push
fs
push
hlt
scas
inc
or
aad
cmpsb
pop
xchg
out
loopne,pt
lods
addb
pop
subl
sbb
int
daa
and
idivb
push
outsl
and
adc
mov
lret
leave
fistl
adc
add
xchg
imul
les
lea
insb
and
mov
add
leave
fbld
ja
aam
in
out
loop
dec
loope
lock
ss
or
into
jo
adc
movsb
in
out
xchg
cwtl
imul
ljmp
lret
push
pop
dec
loope
sub
sub
mov
inc
sub
sbb
dec
iret
leave
out
test
test
in
push
xchg
fistpll
pop
jp
cmp
fdivl
ret
mov
cmp
or
fs
adc
cmp
dec
push
js
daa
mov
or
popf
cmp
test
xchg
mov
xchg
loope
pusha
js
mov
sbb
sub
in
xchg
jns
pop
mov
xchg
pop
xor
aam
mov
or
pop
test
or
or
pop
std
movl
inc
or
movsb
rcrl
jp
jb
ret
scas
loop
pop
cli
adc
faddl
push
mov
pop
std
pop
lock
cmc
sbb
les
repz
dec
pop
rcl
mov
mov
aaa
fcoml
fwait
xchg
mov
adc
pop
cmpsl
add
lds
and
mov
jne
bound
es
mov
std
ret
cmp
xor
xchg
fs
lret
arpl
cmp
mov
cmp
fyl2x
xor
iret
pusha
cltd
xchg
inc
xchg
add
out
pushl
fs
mov
mov
hlt
andl
call
adc
fcoms
test
iret
pop
les
dec
imul
jp
std
xchg
mov
xchg
jg
popf
test
adc
pop
cmp
add
cltd
cmp
or
loope
cmp
lret
pushf
pop
jmp
ret
shl
add
sbb
fdivl
adc
test
stos
mov
ja
push
cld
adc
xor
mov
leave
call
xor
cmp
jl
cwtl
pushl
insl
pop
loope
mov
jecxz
clc
mov
test
insl
fucomi
add
ret
ds
mov
icebp
jge
repz
outsb
int3
lds
jge
jnp
sub
jne
lods
xor
mov
out
jle
mov
cwtl
and
mov
pusha
out
loop
bound
lods
push
jg
pop
inc
repz
push
jp
mov
cwtl
xor
sub
cmpsl
mov
mov
mov
mov
pop
mov
xchg
mov
cmpsb
adc
cltd
and
faddl
jb
mov
lods
xchg
and
out
xchg
cs
cli
cmp
mov
sbb
jge
xchg
push
inc
lock
and
pop
aas
or
in
cmp
mov
pop
stc
sub
push
push
fidivs
push
notl
divb
into
add
sbb
fisubs
sbb
push
icebp
loope
aad
adc
jae
inc
int
adc
mov
inc
ret
stos
push
xchg
fisubrs
adc
fsubs
pop
loop
cmp
popl
add
xor
and
loopne
pop
push
out
out
stc
movsb
add
ljmp
addl
lret
iret
adc
jp
out
push
leave
push
jne
or
mov
add
leave
mov
add
mov
faddl
sub
stos
push
cmp
insl
inc
inc
and
loope
add
aam
xchg
sahf
mov
xor
inc
sbb
sub
xor
sbb
in
inc
movsb
or
test
jbe
sub
sub
push
jg
movsb
sub
mov
daa
fsubr
mov
pop
mov
add
or
and
mov
xlat
lret
sbb
jl
out
sahf
shrl
mov
int3
jmp
loopne
rcrb
inc
pop
sbb
xchg
jno
lods
mov
jp
xchg
jl
jmp
fcompl
mov
mov
xchg
or
jg
es
and
icebp
xor
stos
jnp
or
adc
fwait
push
xlat
sahf
mov
mov
pop
mov
push
sbb
mov
insl
cmp
jne
roll
push
arpl
pop
mov
outsl
das
mov
ret
out
cwtl
stc
jb
lahf
dec
aad
jb
jo
in
add
shrl
icebp
shrl
stos
in
sub
stos
imul
jp
mov
jo
and
lea
mov
cmp
mov
and
mov
jbe
lea
cmp
cmp
movsl
pop
sbb
fistpl
je
sub
fs
sub
test
adc
leave
aas
push
push
push
push
push
push
scas
ds
fmul
push
dec
gs
scas
xchg
mov
xor
cmp
out
sub
xor
jg
shll
add
dec
sub
dec
adc
out
sub
add
fucom
cmp
mov
jbe
std
imul
pop
std
mov
addr16
lods
sbb
xor
cld
dec
sbb
test
dec
xor
arpl
ret
mulb
pop
and
cs
pop
mov
or
jb
xchg
repnz
fstpt
dec
and
frstor
rolb
loopne
movsl
mov
mov
pushf
imul
loopne
ds
iret
xchg
test
testb
push
jge
aad
test
pusha
sti
in
jg
jo
imul
add
in
rcrl
cli
call
shrl
jbe
lret
in
clc
addb
or
inc
repz
mov
mov
repnz
mov
into
xorl
test
sti
imul
popa
dec
push
stos
push
mov
jnp
mov
dec
pop
pop
pushf
andb
aad
loope
fstl
xchg
sub
cli
jle
icebp
add
pop
insl
mov
push
ficomps
xchg
nop
aaa
push
les
sub
iret
pop
xor
mov
dec
pop
pop
push
sub
cltd
mov
repz
fimull
mov
xchg
xchg
mov
jmp
jl
or
pop
push
fiadds
or
imul
inc
aam
cmp
xchg
push
jl
aad
xor
int
mov
js
or
pusha
inc
ljmp
data16
push
jp
mov
jle
jno
fwait
int
lds
loope
cmp
inc
mov
pop
mov
das
push
test
aam
jmp
or
mov
jo
rcr
out
sbb
dec
add
nop
add
adc
push
and
mov
and
cmp
popa
pop
roll
mov
push
test
xorl
jmp
outsb
shll
or
push
jae
inc
scas
xchg
cli
rorb
pop
popa
xchg
call
sbb
xchg
push
mov
inc
sbb
fildll
cmp
je
mov
movsb
bt
imul
fadd
scas
adc
xchg
fmul
mov
jo
daa
pop
mov
out
cmp
xlat
or
pop
xorb
push
iret
push
push
sbb
pop
jp
or
adc
mov
sti
test
add
sbb
leave
fisubrl
insb
mov
ja
mov
mov
sarl
pop
inc
sbb
in
popa
popa
jge
and
mov
cs
aam
xchg
test
and
cmc
mov
stos
xor
sbb
fstl
fsubs
arpl
or
ja
out
cmp
scas
xchg
mov
lods
add
jns
jnp
cmp
inc
stc
jmp
mov
sub
in
pushf
sbb
and
jb
cltd
pop
jns
mov
imul
mov
test
test
sub
loop
mov
sub
pop
pop
inc
ja
pop
add
inc
mov
jns
cmp
xor
idiv
mov
xlat
add
pop
ret
push
pop
cmpsb
or
test
adc
mov
fldz
aad
cmp
repnz
xchg
mov
imul
jns
or
insb
xor
push
xor
loop
addb
leave
loopne
cmp
faddl
mov
ja
jle
adc
iret
inc
test
add
mov
sti
dec
lcall
push
icebp
push
cmp
lods
iret
lods
pop
inc
sarb
in
addb
xor
mov
dec
xlat
lock
sub
and
xchg
ss
sbb
xchg
fwait
int3
bound
dec
test
xchg
scas
mov
push
or
pop
mov
sub
lods
jno
out
sub
add
fldl
lds
cmpsl
std
shll
sbb
popl
mov
xchg
and
shrl
pop
mov
enter
sbb
jno
loop
imul
and
mov
sbb
test
jae
loop
test
shrl
fnsave
out
xor
sbb
inc
push
mov
loopne
insb
mov
push
xor
cmp
loopne
andb
xchg
lods
jbe
jmp
mov
mov
and
cmp
mov
pop
xchg
dec
stos
or
popf
jg
out
in
dec
xchg
jg
push
maskmovq
testl
test
push
dec
cmp
cmp
cmpsl
pop
cltd
push
cmpsl
push
sub
sub
out
mov
sbb
mov
sub
scas
xchg
mov
xlat
inc
adc
mov
inc
mov
iret
dec
jae
imull
in
xchg
inc
xlat
mov
jmp
push
push
pop
mov
adc
mov
add
cmp
popl
arpl
addr16
test
jns
negb
mov
aam
dec
sub
adc
jp
cmp
mov
pop
divl
lea
in
push
cmpsl
insb
mov
and
adc
rcrl
inc
push
xorb
sub
push
adc
movsl
mov
add
pop
adc
add
push
pusha
xchg
test
jg
push
dec
and
inc
mov
push
sbbb
xor
rcrl
dec
scas
mov
push
je
outsb
stos
loope
test
repnz
xor
xchg
fcmovnu
loop
add
xor
lock
nop
and
fstl
push
dec
xchg
mov
lods
pop
popf
adc
ja
ds
movsl
push
mov
pop
xchg
imul
xor
loopne
sbb
or
xchg
mov
xlat
sbb
pusha
xchg
and
inc
iret
sub
imul
jl
cltd
out
xor
imul
das
jno
ficoms
xlat
sti
add
xchg
out
cltd
enter
int
je
int
pop
cmp
push
out
mov
add
mov
rcr
mov
movsb
sub
pop
xchg
dec
shr
stos
out
jb
punpckhbw
rcrl
xchg
ret
pop
pop
sub
add
mov
inc
pop
xchg
cwtl
jbe
or
pop
scas
fldenv
out
xchg
sub
test
clc
mov
push
rolb
subps
int3
push
fstpl
and
cmp
lods
nop
aaa
lods
inc
xor
inc
lock
push
les
sub
sub
loop
fwait
mov
cmc
jne
pop
mov
je
ret
add
pop
aas
mov
jmp
jbe
sub
rcl
mov
addl
repnz
testl
dec
jecxz
jg
cmpsb
and
push
cld
loope
adcl
inc
leave
in
adc
jg
inc
repz
scas
mov
addr16
xchg
pop
stos
and
in
fldl
adc
test
lea
call
cmp
or
xlat
mov
nop
insb
inc
cli
push
mov
int3
outsl
pop
mov
cmp
subb
mov
mov
mov
mov
sub
cmp
sbb
out
pop
xchg
decb
loop
xchg
scas
les
lds
push
and
mov
ret
sahf
mov
pop
mov
fwait
shlb
aad
push
pop
scas
stos
outsb
xchg
cmc
pop
inc
fnstenv
jg
cmpsl
movsl
call
sbb
inc
les
cmp
dec
inc
sbb
icebp
in
lods
xlat
mov
ljmp
mov
add
inc
nop
scas
ret
push
xchg
jl
data16
push
aaa
bound
lahf
pop
jno
test
leave
test
jg
sbb
inc
adc
push
test
shrb
add
xchg
sub
xchg
scas
push
mov
into
rorl
orl
sub
push
aam
into
out
mov
or
adc
xchg
into
ss
xor
pop
enter
adc
fisubs
jb
ljmp
mov
xor
push
sbb
cltd
lock
repz
xor
fiaddl
xor
or
jecxz
out
pop
cmpsl
fldenv
cmp
lcall
iret
bswap
add
add
out
sub
jb
cwtl
daa
jno
insw
rcll
jns
ss
cmp
aaa
lds
rorl
mov
mov
subb
stc
cmp
jns
sub
popf
and
mov
inc
ss
int3
ds
dec
inc
cmp
push
inc
xor
das
addr16
movsb
mov
outsl
adc
insb
je
ljmp
pop
fwait
inc
rcll
fdivrl
popf
xor
movsl
cmpsb
pop
ret
mov
jecxz
mov
dec
stos
pop
cmpsb
cmc
jo
ja
loop
cltd
sub
lret
notl
jecxz
xchg
adc
roll
inc
mov
push
fidivs
xor
xchg
enter
clc
jo
and
popf
jmp
jle
xor
out
adc
repz
aaa
lods
ror
cs
lcall
adc
flds
in
jg
push
xor
lea
mov
pop
jp
dec
lcall
stc
iret
xor
test
jns
lret
xchg
xchg
add
pop
ss
test
sbb
inc
add
scas
fs
xchg
into
inc
xchg
cmp
popa
scas
loopne
xchg
js
sbb
fsts
cld
loope
pop
cmp
xchg
fwait
jecxz
xor
adc
add
bound
pop
mov
push
insl
mov
fs
xchg
fstps
cli
add
fcoml
xlat
xlat
flds
pop
xor
and
pop
in
sub
icebp
mov
jnp
rorl
mov
clc
outsl
dec
enter
adc
imul
push
outsl
scas
dec
cli
ret
mov
adc
pop
inc
xchg
fnstcw
ret
cmp
daa
mov
sti
not
arpl
xchg
and
xchg
push
mov
jge
mov
int
add
push
imul
dec
or
in
mov
inc
mov
scas
test
push
lret
cmp
out
inc
and
hlt
test
icebp
outsb
imul
xchg
cwtl
out
cmp
subb
icebp
rorb
xchg
rcll
adc
xchg
cld
sub
ja
mov
in
push
leave
push
stc
and
into
jmp
mov
in
mov
ret
movsl
mov
lea
sar
mov
cmp
xchg
push
add
shrl
wbinvd
add
mov
fsubl
ss
sub
imul
sarb
or
movsl
in
pop
leave
jle
push
cwtl
inc
push
xor
pop
scas
push
adc
or
jb
xor
mov
lret
cs
pop
sbb
adc
mov
shl
aas
jnp
adc
int3
pop
sub
xchg
stos
dec
mov
mov
loopne
adc
mov
mov
stos
fidivs
sbb
jae
pop
rolb
stos
and
stos
pop
gs
adc
mov
in
pop
dec
or
jbe
subb
inc
pop
imul
mov
daa
adc
mov
dec
fistl
jmp
js
xchg
push
sub
jne
enter
pop
rorb
dec
out
inc
int
inc
jns
sarl
sarb
adc
in
shl
lahf
push
and
iret
ss
test
cltd
arpl
int
dec
xchg
inc
scas
aam
sbb
fimuls
in
xor
jg
fiadds
cs
ljmp
jo
inc
push
adc
xor
xchg
xchg
imul
popf
outsb
mov
ss
les
mov
sarl
push
test
ret
cmp
mov
push
cmp
sahf
push
pop
pop
les
jne
adc
cmp
imul
cmpsb
cmc
aas
mov
jne
mov
xor
ds
pop
imul
fucomp
lahf
cmp
pop
inc
jge
jne
cmp
cs
lret
int3
push
mov
xor
sbb
lock
pushf
cmpsb
mov
mov
cmp
out
pop
mov
das
jecxz
and
xchg
push
xchg
dec
pop
adc
and
cmpsb
xchg
fcmovbe
jmp
hlt
mov
idivb
add
push
dec
sti
mov
shll
jb
les
stos
sahf
cli
xchg
in
cmp
sub
mov
fwait
xlat
ficompl
push
add
dec
orb
addl
das
jp
cmp
cmp
daa
and
in
jp
pop
jp
insl
inc
bound
mov
loope
pop
fs
xor
test
dec
pop
mov
scas
cwtl
jbe
xchg
cs
and
movsb
jae
sub
mov
pop
movsl
cwtd
daa
adc
pop
mov
stos
cmc
push
dec
hlt
jle
leave
add
pop
pop
jne
mov
jle
or
loop
cmp
in
push
lcall
lea
sbb
addr16
pop
push
add
pop
notb
in
sti
std
push
or
jb
xchg
popf
pop
xchg
icebp
dec
xor
xchg
xchg
in
lods
icebp
xchg
lds
mov
mov
pop
mov
iret
outsb
ficoms
inc
cmp
jnp
test
out
leave
rcll
xor
hlt
jns
in
test
cmpsl
xor
ds
pop
rclb
or
dec
mov
pop
push
test
pop
jns
inc
ret
or
repnz
aaa
fisubl
add
stos
test
fcoml
xor
sbb
sbb
or
cmpb
les
movb
push
sub
pop
sti
cmp
movsl
in
mov
pop
pop
aad
mov
stc
je
outsl
dec
mov
dec
lea
out
adcb
pop
flds
pop
aaa
sub
ljmp
push
dec
jg
popa
and
and
mov
iret
mov
test
sub
rolb
outsb
push
mov
fadd
mov
xchg
cmp
cltd
sbb
pushf
add
lods
das
lods
mov
xchg
add
jnp
orl
std
sahf
out
decb
mov
add
pop
mov
dec
xchg
inc
cmc
mov
int
jle
sub
inc
push
sub
xchg
cmp
add
ret
sub
and
dec
mov
fadd
daa
into
pop
dec
cmp
ffreep
sub
dec
inc
jae
clc
adc
pop
mov
mov
out
xor
cvtpi2ps
push
jo
inc
cltd
mov
inc
cmp
shll
or
add
add
mov
sub
loope
popa
dec
xchg
adc
mov
xchg
mov
shll
xor
mov
sub
push
js
sbb
movsb
xchg
shlb
mov
mov
je
and
shlb
in
lcall
rcl
mov
xor
dec
in
sbb
lods
jns
lcall
sbb
adc
imul
push
push
fsubs
into
orl
ret
cmp
cwtl
adc
out
pop
mov
xor
jmp
stos
sbb
andb
mov
jne
lea
lcall
inc
hlt
xchg
pop
adc
xor
out
and
or
adc
faddl
stc
xchg
xor
adc
std
sbb
inc
mov
adc
dec
icebp
out
adc
aaa
mov
movsl
or
and
outsl
aas
cs
call
movsl
push
push
jg
sub
rcll
daa
mov
sbb
mov
rcrb
xchg
into
shrl
outsb
mov
jg
int
and
cmpsl
add
jle
pop
add
jge
add
add
clc
push
mov
jecxz
mov
out
inc
mov
dec
mov
outsb
and
mov
jnp
mov
testb
lods
or
in
leave
cld
movsb
cli
or
sarl
das
hlt
loope
inc
gs
popa
or
mov
adc
pop
add
jb
negl
inc
aad
dec
jg
and
test
push
mov
and
sbb
enter
daa
pop
dec
cs
hlt
pop
pusha
ficompl
sbb
jnp
mov
pop
mov
mov
push
dec
lret
or
lret
dec
addb
cmp
movsl
outsb
pushf
aam
xor
pop
dec
out
dec
push
aam
fstl
and
sub
sbb
fsts
jge
in
enter
movsb
and
fsubrl
mov
xchg
mov
test
sub
adc
out
mov
pusha
jl
xor
ret
cmp
jno
dec
and
sarl
dec
and
gs
push
loop
push
push
mov
int
pop
stos
scas
mov
sbb
add
mov
fcmovu
call
mov
mov
fyl2x
movsb
xchg
cmc
sbb
aad
xor
ss
xchg
xor
or
push
or
sub
mov
mov
int3
lea
mov
fwait
ret
pop
icebp
roll
sti
test
arpl
push
stos
add
push
repnz
jb
insb
xor
mov
dec
jle
push
fdivr
adc
loop
negb
cltd
xor
rcrl
pop
dec
xchg
jmp
mul
xchg
adc
in
pop
dec
es
cmp
add
jmp
adc
fmuls
cmp
inc
pop
xchg
cmpsb
push
or
test
sub
dec
idivb
fidivl
and
sub
mov
push
mov
mov
rclb
push
dec
inc
loopne
sbb
mov
push
xor
xor
sbb
mov
loopne
fildll
cmpsb
out
call
pop
testl
inc
iret
sbb
ret
into
mov
jle
imul
movsb
clc
jg
add
popa
cmp
xchg
pop
xor
mov
cli
push
andl
mov
add
mov
cmp
or
test
repz
scas
aam
mov
das
pop
mov
sbbl
test
cmpsb
sub
jne
dec
inc
xor
addr16
cli
cmpsl
ret
and
push
jecxz
cwtl
cvtps2pd
aam
lods
dec
fcompl
fsubl
shll
insl
inc
or
mov
arpl
mov
xlat
subb
dec
push
out
xchg
das
iret
sbb
testb
loope
push
pusha
add
mov
dec
add
test
push
ret
adc
mov
lock
test
out
dec
pop
jns
dec
fsubrs
xchg
push
adc
ja
lods
jg
mov
lcall
shrl
in
fdivrl
pop
mov
int
jae
jecxz
mov
sub
and
test
pop
push
inc
mov
add
fwait
xchg
pop
repz
cmpsb
lock
out
shll
aaa
and
into
std
xchg
data16
andl
div
das
xor
mov
popf
divb
mov
adc
outsl
adc
test
andb
inc
pop
push
xor
and
dec
imul
xchg
sbb
int3
pop
sub
jne
rcr
xchg
mov
xchg
xorb
and
insb
test
jnp
push
cmp
dec
xchg
pushf
inc
inc
xor
out
mov
mov
jmp
nop
lods
addr16
inc
cmp
push
push
add
dec
mov
mov
fwait
add
les
jp
sahf
lock
cld
or
arpl
sbb
out
inc
jo
push
add
cmp
inc
in
and
cmp
inc
mov
jp
or
push
stc
sti
repnz
mov
xchg
imul
jo
mov
jl
add
pop
scas
test
or
std
sub
jp
rclb
inc
xchg
call
sbb
xchg
outsl
rolb
or
scas
repnz
and
sbb
loopne
sbb
insb
or
lds
dec
fdivl
daa
loop
jl
lods
xchg
push
pavgb
xor
shlb
jge
adc
adc
loopne
adc
pop
iret
fistl
add
cmpsl
fpatan
addr16
and
cmp
insl
or
cmpb
mov
push
mov
mov
fs
jmp
pop
lock
and
push
ljmp
pop
mov
iret
icebp
pushf
jle
mov
sbb
testb
dec
mov
enter
stos
icebp
jnp
je
negb
popf
sub
inc
sbb
insw
push
int
xor
je
or
in
pop
jecxz
inc
mov
sbb
or
dec
or
xchg
mov
lahf
push
hlt
test
push
push
aaa
jecxz
dec
mov
and
lods
loopne
jle
xor
inc
lahf
sahf
sarb
push
test
aam
cmp
xor
pop
mov
jmp
imul
mov
pop
mov
stos
jecxz
pop
add
pop
shrl
rcrl
jge
jne
push
inc
es
mov
xor
add
outsb
out
xor
lods
std
repnz
das
lcall
call
repnz
lret
nop
popa
fists
adc
jns
xorb
leave
test
sbb
ja
and
gs
notb
shl
push
data16
fcmovne
gs
cld
mov
out
leave
xlat
fbstp
or
add
sub
fwait
bound
rcr
stos
popf
mov
add
push
test
lahf
jae
sbb
rcrb
imul
mov
inc
add
xor
fistl
adc
mov
push
stos
daa
push
sbb
pop
call
ds
imul
jbe
pop
or
enter
in
inc
enter
sub
lds
ljmp
mov
add
sub
mov
stos
and
dec
mov
mov
pop
jecxz
add
pop
pop
dec
inc
mov
insb
fistpl
fstl
daa
jno
jno
out
mov
jns
es
or
sti
daa
or
pcmpeqb
push
mov
jle
xor
mov
cltd
cli
xor
mov
insl
pop
fcompl
std
mov
fcomps
xchg
push
inc
adc
sub
divb
inc
push
add
cmp
icebp
inc
xor
leave
adc
ret
mov
jne
outsl
push
in
aaa
dec
fsts
out
fildll
clc
enter
lcall
sti
pop
push
mov
ret
aaa
xor
cs
cld
sub
pop
xchg
xchg
daa
cmp
or
dec
lret
cltd
sahf
cmp
adc
jo
fisttps
xchg
mov
pop
add
mov
mov
mov
cld
push
hlt
test
in
fs
popf
mov
sbb
jbe
add
and
cmp
and
test
xor
rcrb
loopne
fcoms
aas
or
imul
movsl
inc
je
fbld
call
lcall
mov
int3
add
in
mov
sbb
sbb
divb
movsb
add
dec
scas
mov
ljmp
and
jb
mov
fisubs
cmpsl
inc
jmp
in
cmp
lods
in
xlat
out
in
adc
xchg
push
mov
test
insl
or
sub
push
js
mov
dec
cmp
pop
dec
aam
mov
stos
jnp
or
std
adc
icebp
add
pushl
push
adc
je
mov
ficomps
push
gs
ret
xor
stc
mov
sbb
lea
mov
jl
fiadds
sti
gs
stos
fists
xchg
inc
inc
mov
orb
imul
xchg
in
inc
add
cmp
mov
sbb
sbb
sbb
add
shll
sahf
push
fdivs
jge
pop
jno
lock
fnsave
shrl
aam
jp
cltd
out
fsubs
push
aam
je
mov
mov
xlat
pushf
or
mov
sahf
dec
scas
push
push
add
movsb
insb
hlt
push
loop
loope
jecxz
and
mov
jns
cmc
insl
cmp
sbb
testb
sarb
sbb
mov
stos
punpcklbw
sub
test
mov
ficompl
fstpl
jecxz
ja
cmpsl
fwait
test
test
inc
cmp
rorl
nop
mov
jns
push
popf
mov
mulb
insl
push
bound
mov
lds
add
jl
jle
test
xchg
push
in
cwtl
sub
lcall
stc
inc
adcb
test
stos
pop
xor
dec
adc
dec
test
cmp
xchg
push
jge
xchg
or
inc
imul
jge
test
mul
or
lcall
or
xchg
jl
scas
sbb
pop
pop
mov
xor
push
ss
sbb
xor
mov
add
adc
popf
call
lds
mov
pusha
or
in
lahf
sbb
movb
xor
lahf
jecxz
sbb
xor
pop
sbb
outsb
movsl
sub
inc
int
or
pop
push
xlat
jae
aad
push
jae
mov
int3
dec
adc
sahf
mov
stos
jmp
push
loopne
sub
sub
xchg
aam
je
mov
fnstsw
mov
mov
sub
sbb
mov
loop
ficompl
sarl
out
fwait
rcr
movsl
dec
je
imul
mov
jae
insl
divl
enter
notb
insb
popa
push
pop
test
icebp
inc
test
mov
adc
mov
mov
les
movsl
mov
mov
xchg
jo
adc
xchg
push
rcl
ret
mov
fsubr
fistps
jl
xchg
cwtl
into
sbb
frstor
or
xor
add
dec
mov
adc
ja
cs
sub
scas
xchg
roll
test
adc
test
mov
jo
das
aas
cmp
mov
xchg
mov
loop
loope
mov
in
sahf
xor
inc
add
jne
repz
push
sbb
into
and
sahf
xor
push
jle
out
cmp
cwtl
sub
testb
ljmp
dec
dec
sbb
stc
xorb
jl
outsl
pushf
decl
cld
push
rclb
outsl
pop
dec
jl
or
xchg
int3
push
decl
xchg
imul
lret
xchg
push
stos
arpl
mov
mov
popf
mov
mov
add
aam
in
test
loop
stos
dec
dec
lcall
add
cmpsb
xchg
mov
and
xlat
sub
cmp
mov
dec
stos
push
rorb
xlat
dec
das
dec
or
adc
mov
jmp
or
std
add
lock
test
popf
aad
xor
enter
inc
pop
xor
enter
insb
test
jae
das
jl
pop
es
xor
addr16
push
sbb
pusha
jp
iret
or
push
pop
repnz
icebp
jb
pop
push
icebp
orl
fiaddl
add
xchg
push
jmp
pop
jg
mov
pop
stos
and
jg
cli
shrb
sbb
adc
pop
lret
dec
mov
gs
and
lahf
aaa
mov
jnp
arpl
js
int
xchg
xchg
movsl
cltd
sti
push
ret
add
inc
jmp
push
and
mov
shl
aam
adc
rcl
pop
pushf
roll
push
mov
mov
rcrl
test
xchg
test
fldenv
dec
pushf
sub
fadd
dec
and
ja
loopne
push
cltd
mov
inc
or
inc
addl
adc
lds
inc
xchg
outsl
imul
pop
std
inc
rcrl
orb
insl
xchg
lret
stos
mov
shlb
sbb
sbb
pushf
push
mov
lcall
sbb
cmp
icebp
scas
jp
mov
xor
dec
inc
jle
ret
push
aam
cli
mov
stc
les
or
test
mov
sbb
jo
lods
pop
cmpsb
and
aam
gs
sbb
mov
inc
dec
jbe
leave
addl
movsb
xchg
jnp
dec
mulb
jl
jecxz
cmp
add
inc
push
push
ljmp
mov
lret
loop
testl
pop
mov
subl
js
adc
or
jae
pop
pop
or
mov
and
jno
cwtl
mov
aas
pushf
sub
hlt
rcrb
sti
lods
popf
cmc
adc
inc
shrl
fildll
ljmp
int
dec
sbb
stc
sbb
jge
mov
movsb
jo
xor
mov
cmc
stos
or
mov
push
cmpsl
sub
mov
xor
stos
ljmp
addr16
ljmp
in
data16
in
xor
loop
lcall
dec
xchg
bound
dec
jno
out
js
stos
dec
inc
and
adc
xchg
mov
push
mov
mov
jl
fists
mov
ss
pop
sbb
mov
imul
repz
lcall
jae
fisubrl
cmpl
call
mov
xchg
cltd
push
icebp
outsb
mul
mov
xor
arpl
into
nop
mov
sub
sub
out
test
daa
push
dec
cmp
rep
sub
jp
pushf
xor
call
dec
sbb
xchg
jecxz
lret
jmp
dec
leave
mov
repnz
xlat
and
add
fnstenv
push
dec
test
pusha
rcll
push
aad
jbe
xchg
ljmp
test
xor
or
cltd
pop
xchg
out
mov
ja
mov
push
rcl
pushf
leave
call
fcomps
into
leave
insb
in
jns
lock
sbb
aaa
into
imul
dec
mov
loope
into
sbb
adc
dec
and
out
push
inc
xor
rcl
mov
sbbb
lret
loopne
cmpsl
and
fyl2xp1
mov
lahf
push
mov
or
movsl
jg
pop
dec
mov
lock
dec
xchg
andb
add
movb
loope
mov
xchg
fimuls
outsl
cld
cmp
adc
aas
mov
loopne
cltd
fwait
dec
rcrb
xor
pop
and
cli
mov
ds
addr16
lock
vpaddw
insl
adc
sub
mov
and
cltd
mov
jnp
jmp
dec
icebp
scas
or
loop
xchg
mov
daa
bound
xor
cli
dec
add
sbb
mov
pusha
cmc
movsl
leave
pop
xlat
fstps
inc
movsb
scas
jnp
pop
mov
ret
jmp
sbb
lcall
mov
bnd
fistpl
or
aam
cmp
pop
orb
repnz
add
mov
adc
xchg
or
hlt
xlat
inc
cli
mov
popa
or
push
push
inc
hlt
enter
sbb
shll
pop
inc
push
sub
nop
mov
loope
push
jns
les
fisubrl
cli
and
bound
lds
mov
push
push
loopne
xchg
in
jg
lods
ljmp
outsb
push
int
in
and
jo
pop
std
popa
sarl
push
xchg
fs
stc
aam
sub
jecxz
jg
push
push
or
in
sbb
mov
push
es
mov
push
cmc
scas
loope
repz
out
push
dec
cmpsl
outsl
out
out
fisubrs
js
fcoms
mov
cmp
mov
stc
enter
jbe
and
mov
loope
lret
fs
add
and
jbe
xchg
push
jmp
mov
nop
pop
mull
sbb
test
scas
rorl
in
inc
loope
add
cld
sbb
cmp
call
fnstcw
stos
lea
sbb
shlb
daa
and
insl
cmp
or
or
nop
dec
jmp
add
jmp
out
enter
push
jae
nop
pushf
add
stos
cmp
jmp
pop
mov
cli
ljmp
mov
test
mov
cmpb
mov
xor
xor
adc
jne
test
and
aas
add
les
pop
push
out
popa
ret
dec
mov
or
add
sub
push
push
in
negb
sub
mov
cwtl
ficoms
or
imul
test
pop
push
aas
add
sti
inc
repnz
pop
push
lcall
add
mov
mov
fldcw
popa
fwait
jle
jg
repnz
jno
adc
jmp
cmpsb
adc
ficoms
lret
js
mov
stos
xor
addb
cltd
pop
je
add
jb
je
cmpsl
cwtl
bound
je
aaa
mov
push
push
popa
mov
mov
and
and
sbb
mov
sub
cmpsl
jno
jle
cmp
lret
hlt
cmp
or
and
stos
and
mov
push
cli
add
xor
xor
push
insb
or
lcall
add
adc
pusha
dec
inc
mov
mov
repz
jnp
ret
push
inc
les
into
and
lcall
test
mov
and
sbb
loop
lods
mov
fwait
add
aad
push
bnd
jne
push
mov
add
inc
popa
icebp
lahf
daa
mov
mov
jp
jne
test
pop
dec
std
jmp
adc
cmp
sarl
in
rcrl
xchg
sbb
cmp
push
jmp
ret
test
shlb
mov
andl
js
ja
jb
inc
andl
test
mov
mov
ljmp
nop
clc
out
out
dec
cmp
lret
mov
xchg
xchg
or
adc
push
out
shlb
popa
xorl
jle
nop
push
inc
arpl
cmp
adc
std
cmp
lods
pop
dec
adcb
insb
or
jo
nop
or
cmp
xor
insl
imul
jmp
loop
jmp
sub
mov
or
mov
pop
loop
loop
popf
inc
mov
out
adc
sbb
outsb
inc
ljmp
fimull
aam
xlat
add
lcall
test
jmp
and
in
ljmp
int3
outsl
mov
dec
sub
paddq
repnz
addr16
mov
or
mov
or
negl
ret
or
mov
add
ss
movsl
inc
les
clc
aaa
int
or
loop
fsubrs
or
int
test
test
jecxz
add
push
in
mov
xchg
lret
mov
dec
jecxz
adc
outsb
aam
fbstp
int3
out
sbbl
xchg
jle
test
xchg
mov
imul
lods
mov
push
xor
xchg
and
mov
jmp
insb
mov
sahf
mov
ret
jb
stc
jg
lahf
add
jae
aad
fwait
mov
popa
push
cmp
jb
jmp
les
es
pop
and
in
adc
loope
push
xchg
pop
insl
or
mov
xor
add
and
jno
lahf
dec
inc
pushf
jnp
pop
jno
lods
push
lods
test
cmp
in
movsl
xor
shll
push
dec
repz
dec
xchg
outsb
aad
pop
mov
mov
sahf
sbb
lret
sub
mov
sub
scas
mov
fcmovnb
sub
cli
jp
push
icebp
dec
mov
cld
jno
repnz
push
stc
push
mov
cltd
jnp
iret
pop
adc
mov
inc
jno
fs
sub
call
clc
in
mov
or
repnz
cld
jmp
cmp
pop
mov
cwtl
dec
in
sahf
fs
aam
pop
cmp
hlt
xchg
mov
insl
movsl
pop
leave
mov
and
loopne
sahf
je
mov
lock
jmp
mov
pop
or
mov
jg
mov
cmp
cmp
ret
dec
cmpsl
inc
mov
es
sahf
inc
callw
pop
stos
pop
jns
inc
mov
fmul
pusha
cmp
icebp
dec
push
inc
cmp
and
mov
cld
pushf
ljmp
xchg
push
jge
sbb
pushf
lods
mov
xor
test
pop
cs
cmp
arpl
sub
cmp
xor
mov
sbb
xchg
lea
inc
adc
mov
cli
in
mov
mov
fwait
jl
inc
flds
shl
mov
add
push
fmull
loopne
pop
xchg
mov
adc
adc
jne
add
fidivrl
pop
push
sbb
jb
or
jnp
es
jge
aas
incl
mov
les
fdivrs
push
sbb
xchg
test
add
and
test
mov
paddsw
fisttpll
mov
pop
mov
aad
pop
xchg
pushf
dec
push
inc
inc
mov
aaa
pop
sub
jae
jl
sub
mov
mov
push
mov
fstps
mov
cmpl
sbb
iret
jmp
das
pushf
and
les
int
jmp
jecxz
or
mov
cltd
cmp
icebp
fnstenv
sub
xchg
adc
lahf
sub
jle
push
mov
mov
outsl
mov
mov
dec
push
movsb
rclb
pop
dec
add
movsb
imul
andb
xchg
lds
outsl
mov
mov
and
mov
pop
repz
jmp
push
scas
sbb
stos
lods
push
push
and
or
xchg
lcall
das
shll
aad
insb
cmp
dec
adc
pop
scas
int3
sbb
pop
adc
or
test
inc
nop
loopne
pop
adc
mov
mov
or
cmpsl
jo
pop
aam
add
cmp
adc
je
adc
sbb
mov
ds
and
sbb
sbb
sarl
pop
test
jmp
push
add
scas
jl
pop
jmp
pop
aaa
push
mov
mov
sbb
jmp
fistpll
jbe
or
mov
or
arpl
mov
popf
adc
jnp
daa
and
out
negl
add
cwtl
repz
add
pop
cmpsl
xor
sbb
loop
fidivrs
lret
mov
jmp
or
sub
daa
and
addr16
dec
adc
xchg
pop
jae
fdivl
int
in
pop
fisubrs
int3
neg
push
mov
xchg
cmpsb
dec
lret
adc
pop
or
mov
mov
in
fdivs
lods
stos
pop
mov
repz
bound
sbb
xchg
mov
jmp
cltd
mov
or
jle
push
das
sbb
mov
loopne
mov
cmpsl
mov
push
push
stos
fidivs
jno
insb
pop
push
jl
mov
cmc
mov
pop
test
add
int3
cli
imulb
pop
mov
pop
cli
sbb
outsl
xor
test
fdivrp
adc
adc
push
das
xchg
addr16
in
clc
out
cmp
add
xchg
jmp
xor
xchg
xchg
mov
push
inc
push
fsubrl
sub
inc
scas
outsl
sbb
jne
jno
push
push
test
sub
mov
sti
lea
and
in
mov
mov
jge
data16
cmp
mov
push
nop
and
mov
rcll
jg
lock
lret
das
jg
aas
mov
ficomps
scas
out
stos
sbb
pop
dec
das
pop
cld
pop
add
popa
jb
shlb
lcall
sub
pop
pop
jo
inc
sti
sbb
test
ds
adc
fimuls
testb
int
push
loopne
pop
cmp
add
and
xchg
out
sub
dec
leave
sar
hlt
jp
sub
xchg
rcrl
loope
das
xor
int
xchg
data16
push
push
jle
jg
dec
nop
push
push
or
mov
cmp
or
inc
test
loop
shrb
arpl
das
mov
xchg
cmpsb
inc
jb
push
enter
add
sub
adc
outsl
mov
lcall
iret
in
push
push
icebp
xchg
je
decb
lds
insl
add
xor
sub
adc
push
lods
call
lea
pop
dec
fs
xchg
add
fstpl
stc
dec
dec
and
and
lret
js
arpl
es
in
test
xchg
shl
mov
adc
ds
popf
nop
in
dec
pop
xchg
testb
or
cmp
ljmp
and
dec
fcomps
mov
sub
lods
xchg
out
mov
test
imul
xchg
fadd
sub
dec
out
filds
cmp
push
repz
daa
aam
jb,pt
enter
push
ret
xor
cmpsb
int3
fidivrl
mov
or
ret
sub
push
push
fnsave
int3
xchg
repz
mov
stos
std
pop
jle
sbbl
jge
sti
lock
or
pop
pusha
ljmp
push
cmp
cmp
clc
lcall
xchg
movsl
mov
fcoms
add
xor
je
and
add
add
jmp
pushf
daa
adc
xor
stc
cmpsb
shll
ds
iret
xlat
dec
mov
push
out
and
or
out
pop
xchg
mov
adc
dec
pop
sbb
xor
mov
dec
lcall
jne
cmp
xchg
enter
sbb
add
sbb
seta
dec
mov
lret
pusha
cmp
xlat
sbb
sahf
push
mov
cli
fsubl
cld
pop
aaa
jnp
loope
adc
negb
mov
push
int3
pop
cmp
addb
je
sub
jmp
sub
inc
jnp
scas
lods
inc
mov
lea
jnp
jno
ret
sbb
push
xor
pop
aaa
mov
push
mov
lods
cmc
fnstcw
fwait
in
cmpsl
shrl
insb
mov
mov
arpl
mov
dec
clc
xchg
add
pop
jl
cmp
or
push
add
pop
inc
cli
pop
scas
arpl
icebp
mov
push
cmp
xchg
add
bound
or
sbbl
cmpsl
in
loope
shll
popa
mov
test
loop
cld
clc
dec
in
test
idivb
or
stos
push
adcb
jns
jae
es
ret
xor
fwait
push
cmp
push
mov
and
inc
dec
or
ror
lret
loop
cmp
sbb
jbe
inc
stos
enter
adc
cs
xchg
loop
aas
js
andl
shrl
dec
add
inc
and
inc
sub
subl
xor
mov
nop
fcoms
xchg
ljmp
push
xor
ljmp
and
movsb
jno
test
sub
test
test
ss
jne
pushf
fsubrs
into
xor
push
stc
add
loop
mov
aaa
or
cwtl
mov
lods
jo
negb
mov
aam
sbb
jo
mov
jbe
clc
cltd
fimull
lahf
and
add
ficompl
repnz
stos
mov
outsb
cmp
inc
leave
and
sarl
pop
lret
pop
imul
daa
dec
inc
aam
xchg
sahf
dec
push
or
pop
vpsubusw
xlat
xchg
sahf
jno
xlat
sub
into
sbb
push
in
popa
push
sahf
inc
sti
xchg
push
xchg
pop
fs
mov
jno
movsb
add
lock
mov
aas
xchg
pop
mov
jge
mov
xchg
mov
pushf
sti
rcrb
cwtl
cmpsb
stc
imul
arpl
cltd
insb
fcompl
xor
add
xchg
cmp
mov
cmpsl
push
fdivs
mov
xor
add
jne
or
test
inc
mov
jmp
mov
mov
into
and
inc
xchg
sub
and
pop
fisttpl
sub
test
sbb
push
cmp
inc
cmpsb
pop
into
jae
incl
data16
push
subl
test
add
int3
cmp
cmpb
xchg
js
jge
pop
hlt
repnz
mov
and
xor
cmpsb
push
sub
stos
mov
mov
insb
xchg
mov
hlt
inc
add
xchg
in
mov
aad
xchg
lcall
sub
aaa
xor
lahf
push
mov
jl
sbb
js
lds
sbb
jne
pop
dec
dec
repnz
cld
aad
bnd
pusha
inc
imul
stos
gs
adc
out
hlt
push
cmp
sub
rcrb
repnz
mov
subb
xor
popf
and
pop
es
mov
repnz
popw
xchg
testb
or
add
xor
xchg
push
fld
sarl
jne
or
lods
int
xor
neg
xchg
cmp
adc
ficoms
and
xchg
dec
or
int
inc
fs
orl
or
mov
lahf
mov
lret
or
push
fcomps
pop
mov
pop
xchg
es
fidivrs
call
outsb
lock
pop
sbb
test
fistps
outsl
mov
int
call
inc
push
push
and
push
loop
popa
jmp
lds
mov
jge
inc
cs
xchg
mov
mov
clc
or
inc
lret
sub
leave
arpl
in
xor
aas
add
ror
jmp
pop
inc
jb
push
jl
jb
sbb
aas
lcall
xchg
mov
cmpsl
mov
movsl
jb
lret
mov
test
push
xchg
add
in
lahf
pop
push
jp
or
aas
popa
bound
cmp
inc
push
cmp
inc
and
orl
push
je
stos
sub
inc
jecxz
adc
push
fadd
insl
stos
and
ljmp
mov
movsl
lods
test
mov
stos
pop
andl
and
adc
rcrb
ret
icebp
sbb
xchg
jecxz
mov
sbb
or
add
inc
jecxz
sub
sbb
subb
or
icebp
fnstsw
pop
mov
or
adc
mov
push
pop
rolb
out
or
int
add
pop
mov
orb
dec
lret
loope
dec
popa
repnz
insb
mov
inc
addr16
sarl
dec
xor
or
stc
xor
mov
sub
lcall
into
fwait
repz
out
mov
sbb
xchg
pop
mov
cltd
xor
xor
xchg
sbb
mov
ret
pop
sub
popa
sar
and
out
arpl
cmp
and
iret
bnd
mov
dec
dec
lret
adc
jge
insb
bound
lret
mov
pop
test
sti
icebp
adc
adc
push
cmp
xchg
sub
cmp
mov
add
push
mov
jle
jmp
mov
dec
pop
rorb
imul
clc
cmp
push
cmpsl
mov
test
les
jl
cmp
movsl
fwait
xchg
out
jg
test
cmpsl
mov
or
xorl
inc
push
ja
xchg
aas
adc
test
fmuls
sbb
mov
dec
sbbb
rorl
and
xchg
rorl
ret
mov
push
nop
inc
push
scas
xor
push
popf
daa
adc
jg
cmp
mov
dec
dec
xlat
push
add
or
cltd
push
iret
push
pop
push
popa
subl
add
xor
pushf
push
mov
mov
shrb
xchg
cli
in
xor
test
ss
mov
out
stos
inc
shlb
jg
dec
sub
mov
mov
sbb
xor
sti
movsl
pusha
jg
xchg
pop
mov
mov
jbe
pusha
in
dec
cmp
xor
mov
and
gs
sub
arpl
or
mov
sahf
out
xorl
dec
data16
push
or
xchg
adc
and
adc
clc
jbe
lock
xchg
sti
mov
jle
fistpl
mov
dec
stos
fisubs
out
popa
rcr
push
fistps
mov
test
mov
mov
add
add
fs
imul
lods
rcl
inc
bound
cmp
pushf
mov
sub
repz
pop
loope
std
push
pop
adc
mov
jg
in
sbb
insl
decl
std
push
mov
push
pop
clc
loopne
andb
mov
jo
in
xchg
nop
fstpt
push
jb
imul
dec
mov
int3
loop
stc
in
sbb
lds
jecxz
movsl
repnz
sbb
cwtl
and
stc
cmc
sbb
mov
sbb
adc
jg
stos
add
movsl
rorb
in
je
jne
mov
add
loop
ret
xchg
jge
lahf
ljmp
xor
call
inc
adc
outsb
out
sbb
inc
cmp
stc
push
fdivr
aad
mov
push
xchg
inc
xor
jb
test
add
popl
cmp
std
sti
fnstcw
jbe
jg
sti
out
notl
mov
ret
jl
dec
outsb
lds
pop
inc
dec
pmaxub
mov
xor
cmpb
test
test
subb
xor
sbb
aad
fsubrl
stc
data16
cld
xlat
sbb
lahf
and
jle
dec
in
or
mov
jg
pop
popa
in
icebp
stos
aas
popa
decl
repz
mov
mov
js
jb
in
aas
jg
xor
movsl
mov
dec
or
pop
xor
pop
pushaw
push
jecxz
in
imul
sub
add
shr
add
sub
iret
mov
lret
mov
dec
fwait
mov
adc
pop
cmpsl
jb
or
fs
mov
loop
repnz
jge
faddl
mov
stos
mull
in
adc
sbb
pop
and
fimuls
sbb
lods
enter
xchg
fcomps
push
inc
inc
aas
iret
inc
inc
lds
divl
push
fucomp
xor
pop
inc
je
mov
cld
data16
pop
out
outsl
ss
xchg
mov
dec
dec
repz
adc
xor
int3
mov
sbb
lods
xchg
jae
xor
pop
sbb
or
push
push
lds
paddsb
push
movsb
and
stc
in
mov
cmpsb
xchg
or
repnz
push
ret
cmpsl
xchg
mov
xchg
punpckldq
sti
xchg
sub
xchg
or
cli
push
rcll
adc
cld
lret
pusha
test
mov
cmp
lcall
sub
rcrl
lods
cmpsl
in
mov
scas
push
hlt
xchg
xor
adc
xor
add
mov
loopne
jp
and
dec
xchg
sti
ljmp
sbb
push
cmp
mov
adc
push
stos
stc
rorl
sbb
bound
adc
pop
and
rolb
popa
stc
ror
outsb
sub
and
jns
xchg
clc
fucomp
scas
mov
bound
daa
movsb
fwait
in
repz
or
int
dec
addl
jl
out
add
data16
and
xor
xchg
push
ret
rolb
push
je
fimull
sbb
mov
xchg
mov
int
jge
xor
jge
int3
push
pusha
psubd
mov
mov
imul
call
cmp
test
lea
mov
add
sbb
xor
adc
popl
jbe
int3
std
pop
cld
pop
adc
dec
jp
jno
pop
out
sbb
popa
pop
aam
pop
cmpsl
aas
push
mov
add
inc
inc
jg
inc
xor
les
lahf
mov
jb
rcl
adc
ds
mov
iret
and
int
js
rcrl
clc
pop
pop
ret
daa
sahf
pop
add
pop
push
out
shrl
jno
fiadds
add
mov
mov
imul
mov
imul
mov
imul
cmc
das
xorl
and
push
jecxz
je
mov
push
in
repnz
test
sub
sub
pop
shlb
je
push
mov
cmp
cli
imul
cmp
jmp
pop
sub
loopne
sbb
lods
sub
xor
sbb
test
push
inc
jle
or
sub
into
mov
mov
adc
fwait
in
sub
jno
test
pop
mov
rclb
or
mov
movsl
insb
repz
mov
inc
sub
xlat
add
fdivrl
inc
stos
nop
repz
je
movsb
lock
int3
xor
icebp
cwtl
mov
repz
lea
cmpsb
lds
push
lea
clc
push
push
add
ret
push
inc
mov
int3
pop
lahf
test
adc
and
pop
inc
mov
mov
cld
ljmp
imul
pop
cmc
lret
int
loop
jb
repnz
cmp
push
xchg
mov
and
jo
cltd
push
lods
lds
dec
inc
push
arpl
ds
inc
xchg
imul
sbb
pusha
pop
dec
test
ret
push
xor
push
or
nop
jecxz
ja
cld
push
lea
mov
push
jnp
mov
fs
and
icebp
lock
fucomip
xor
inc
inc
inc
sti
add
sbb
movsb
scas
outsl
xchg
in
mov
mov
dec
inc
lea
popf
mov
shlb
lret
adc
dec
flds
cmpsl
dec
adc
shll
xor
dec
mov
lock
xchg
test
dec
out
adc
hlt
mov
in
xchg
out
xor
adc
cmp
in
loopne
pop
adc
xor
dec
fwait
incl
add
shlb
dec
data16
ss
xchg
xlat
pop
int
in
int3
loop
rorb
cs
mov
call
lods
and
inc
cld
leave
add
icebp
outsl
push
cld
int
cmc
scas
xchg
mov
test
pusha
stos
xchg
lret
add
xor
out
popa
sbbb
mov
hlt
push
add
mov
lock
jle
ss
xor
push
push
lock
mov
and
mov
dec
xchg
lods
ret
cld
test
mov
push
pop
insl
aas
and
cmpsb
xchg
cmpxchg
ss
cmp
js
adc
lret
icebp
or
lahf
cmc
adc
mov
jae
frstor
mov
lds
mov
sbb
stc
insl
lret
mov
jge
xchg
pop
int3
in
xchg
scas
clc
jo
rorb
fs
addr16
aaa
and
les
pop
lahf
mov
out
adc
push
int3
sahf
jg
push
aad
pop
dec
popa
push
lds
dec
ds
repz
sub
xchg
push
sub
ret
ja
leave
int
cmpsl
out
andl
add
pop
test
test
inc
insl
sub
sbb
dec
xchg
dec
data16
aam
dec
and
lahf
icebp
xchg
outsl
sub
jg
cmp
rclb
es
rorb
icebp
pop
and
jbe
in
xchg
data16
and
push
test
xorl
push
adc
out
pop
mov
xor
movsb
cmp
scas
loope
test
jnp
sub
gs
sub
test
sub
imul
jmp
das
jnp
adcl
sbb
mov
sbbb
lods
out
mov
mov
sti
inc
jmp
inc
pop
ljmp
fdivrp
cmp
nop
jno
out
push
jnp
push
xchg
jecxz
stos
xchg
push
mov
arpl
mov
sub
repnz
jl
imul
test
imul
mov
mov
ret
add
xor
pop
dec
ret
push
jb
popa
cmc
js
insl
pop
mov
movsl
outsl
imul
sbb
jge
sbb
in
jb
popa
mov
xor
sbb
lock
sbb
push
dec
push
inc
sub
dec
mov
dec
hlt
cmpxchg
pop
mov
imull
cmpsl
xor
lds
mov
movsl
dec
mov
mov
push
and
xor
jg
ret
xor
dec
aaa
adc
fimuls
les
mov
insl
adcl
shll
addb
into
xchg
scas
aaa
cltd
stos
pusha
das
popa
push
lret
idivl
gs
sti
rolb
cmp
in
sahf
sbb
push
or
lods
push
inc
movl
xchg
inc
or
negl
mov
and
pop
fs
inc
jle
adc
adc
push
stos
fstpl
aas
test
mov
andl
pop
or
fldcw
loop
dec
mov
push
and
jnp
push
add
imul
jbe
icebp
clc
pusha
sub
xor
cwtl
lcall
cli
sub
push
xor
enter
fisubl
mov
mov
pop
mov
lret
cmp
add
lods
and
int
ret
dec
fs
inc
lcall
mov
jl
mov
sti
repz
scas
in
sbb
ja
movsl
lea
xchg
jl
pop
lods
mov
test
fmull
sbb
adc
in
push
dec
arpl
mov
mov
adc
xor
sbb
lods
xchg
lea
cld
xchg
pop
pop
aas
sub
lret
out
mov
fsubrs
mov
inc
dec
fs
pop
lcall
addr16
movsl
popf
in
cmpsl
leave
outsl
addb
sbb
shlb
outsb
dec
cmp
lahf
pop
in
ja
repz
sbb
mov
gs
pop
xor
adc
or
jns
fimull
lret
xor
mov
scas
cmc
out
stos
test
in
int
add
stos
xor
in
ret
mov
shr
outsb
push
inc
jae
scas
xor
scas
inc
int3
daa
scas
ds
mov
pop
in
adc
lcall
xchg
cmp
test
or
orl
fistps
mov
enter
xchg
mov
loopne
sahf
cmp
mov
mov
movsl
mov
cmp
jle
fldt
call
sub
rcll
xchg
popa
mov
rcr
jecxz
movsb
decb
mov
sbb
in
andb
or
and
or
mov
pop
dec
enter
cld
or
insl
rcrb
add
fiadds
andb
cltd
arpl
mov
rcr
clc
pusha
lods
jae
nop
aaa
mov
pop
pop
xchg
pop
dec
mov
clc
sub
or
adcb
dec
or
addr16
ret
jnp
xor
mov
or
gs
lods
mov
lods
or
inc
mov
mov
xor
inc
and
adc
data16
arpl
adc
mov
nop
adc
loopne
fdivrl
out
nop
push
mov
fwait
xlat
pop
and
push
sub
inc
add
or
adc
add
add
cld
cmp
jae
int
sbb
sti
and
sbb
imul
jb
jmp
iret
fidivrs
test
mov
bound
pop
js
and
fxch
xlat
gs
inc
lahf
adc
popa
push
adc
lods
cli
mov
sbb
into
cld
inc
cmp
les
push
or
inc
call
out
loopne
sbb
out
repz
add
mov
adc
pop
fldenv
fimuls
inc
sbbb
ja
add
js
jae
mov
pushf
or
mov
jmp
ret
jno
push
std
rorl
cmpsb
es
add
and
jl
and
mov
cmp
fidivl
das
pop
xor
sbb
cltd
sbb
fdivs
or
iret
jmp
clc
push
pushf
cmpsb
cli
js
adc
jecxz
mov
insl
test
sbb
leave
mov
and
mov
or
and
xor
fsubr
les
xor
lods
mov
nop
bound
es
push
dec
pop
rclb
mov
dec
lret
insb
and
lods
dec
xchg
repz
aaa
mov
in
pusha
inc
pop
jle
xchg
mov
stos
mov
push
enter
imul
push
jae
xor
pop
sbb
imul
aad
popa
ljmp
mov
and
cmpsl
fdivl
das
cmc
xchg
cmc
mov
test
mov
orb
jnp
lret
mov
aam
xchg
mov
inc
cs
pop
dec
sti
inc
fsts
mov
scas
mov
xor
mov
xlat
cmc
test
add
pushf
mov
dec
leave
aas
and
inc
cmp
mov
les
inc
or
dec
cmp
ljmp
adc
insl
and
pop
test
ss
clc
test
inc
pop
sub
hlt
or
pop
scas
mov
push
stos
out
pop
xchg
pop
in
pop
addr16
pop
out
popa
mov
push
add
fstl
das
sahf
or
outsl
and
aaa
aam
pop
test
mov
xchg
mov
sub
scas
mov
dec
cmpsl
mov
cltd
pop
push
insb
arpl
xlat
push
xor
adc
push
adc
stos
stos
pop
ss
inc
adc
ljmp
jmp
jg
fsubrl
mov
subl
sbb
cmp
inc
movsb
out
ret
movsl
ret
test
scas
popf
orb
lret
imul
rolb
mov
jmp
in
pop
aad
sahf
push
push
in
popf
xlat
adc
dec
push
push
dec
das
sbb
ds
adc
xor
and
xchg
lock
jnp
decb
ss
dec
sub
popf
ljmp
fisttps
dec
xor
les
adc
mov
dec
aaa
ret
and
jno
out
lods
push
negl
outsb
mov
ret
pop
pop
add
xor
rolb
xor
jnp
add
add
sti
lret
adc
cmpsb
sub
sub
lret
mov
out
fnsave
pop
inc
add
test
xor
xor
popf
lcall
adc
fstps
push
inc
pop
leave
mov
jmp
xor
fidivs
mull
xchg
data16
cwtl
lret
jmp
cmpsl
mov
sbb
stos
sahf
nop
mov
shl
pop
push
jecxz
pop
data16
and
or
pop
sub
notl
lock
pusha
testb
iret
xchg
cld
negb
bound
je
mov
push
sbb
mov
sti
scas
aad
repnz
aas
fdivrs
in
test
adc
cs
ljmp
enter
int
pushf
dec
ja
adc
fstpl
adc
or
jno
or
loopne
xchg
adc
xchg
or
fs
push
imulb
inc
fwait
jns
into
cmpb
sub
jbe
nop
add
and
jbe
call
mov
movsl
inc
adc
repnz
jp
enter
insb
jg
adc
aas
out
addr16
inc
nop
mov
and
add
out
mov
dec
hlt
jno
adcl
lock
jg
push
mov
cmpsb
add
mov
cmp
and
fistpl
ss
int3
jae
incl
push
imul
fmuls
inc
ljmp
inc
push
dec
into
mov
fadds
or
push
push
sub
sahf
cmp
inc
dec
fwait
in
pop
mov
outsb
mov
mov
sbb
outsl
dec
push
or
insb
lods
sbb
mov
or
scas
int
sub
ret
cmp
repnz
and
xchg
cmpsl
and
nop
std
nop
pmulhw
push
cmpl
pushf
ds
jne
into
call
in
jge
sbb
int3
pop
xchg
pop
cs
jae
bound
ljmp
jnp
push
in
in
ss
inc
cmp
in
pop
xor
pushf
dec
push
insl
insl
sub
mov
mov
push
pop
pop
aas
inc
pop
insl
sti
inc
iret
jecxz
and
jb
dec
es
xor
aas
mov
jge
sbb
mov
add
pop
leave
pop
jecxz
mov
pop
pushf
aam
xor
data16
dec
pushf
mov
fistpll
xor
in
cmp
pop
push
enter
jl
pop
test
lret
negl
sub
mov
or
and
loopne
cmpsl
mov
and
mov
imul
inc
jne
repnz
mov
fwait
jb
push
pop
dec
pusha
popl
pop
cltd
cwtl
or
inc
arpl
fcomps
add
mov
sbb
stc
mov
mov
inc
jb
xor
inc
mov
dec
mov
cld
lods
add
call
ss
inc
or
lret
cmp
mov
cmc
cmpsl
pop
loope
into
and
jne
iret
ret
mov
cmp
mov
adc
jns
in
cwtl
jmp
fcoms
rcrb
xchg
loope
fcmovnbe
sub
xchg
pop
stos
jp
inc
jl
aaa
pop
sub
pop
popa
pop
fmull
dec
sub
and
pop
push
mov
stos
push
fwait
rorb
pusha
aaa
mov
testb
xorps
push
jae
cmp
mov
adc
inc
insb
fwait
out
inc
or
mov
sbb
dec
cld
repz
xor
cmp
fmul
mull
insl
or
leave
adc
mov
xchg
add
jne
dec
xor
cmc
dec
fdivrl
xchg
lods
test
xor
clc
sub
push
or
or
xchg
and
aas
mov
test
jl
orps
adc
dec
test
int3
jmp
mov
push
outsb
push
lods
mulb
inc
int3
sahf
lods
aad
and
adc
je
push
popf
fnstenv
pop
and
stos
add
xchg
adc
outsb
mov
xchg
ljmp
mov
xchg
cmp
pop
push
mov
movsb
sub
ljmp
pop
ss
xor
mov
cmc
sub
push
std
sbb
add
sbb
cmpsl
jne
ret
xlat
xor
sbb
jns
stc
adc
data16
add
rorb
nop
sarb
lahf
out
js
add
shlb
dec
ja
or
push
mov
lret
subl
repnz
lods
mov
mov
imul
jge
call
nop
adc
test
adcl
sub
insb
xchg
in
ret
cli
loopne
mov
mov
inc
mov
jns
out
movb
lcall
sbb
dec
cmpsl
push
push
mov
mov
aam
sbb
mov
and
mov
mov
pop
mov
pop
jb
test
es
hlt
xor
sub
in
cs
sbb
xor
insb
repz
fcompl
add
xchg
iret
daa
or
fxam
mov
out
fwait
or
fdivrs
add
movsl
inc
push
mov
test
mov
in
jmp
inc
sbb
pop
or
into
xor
jnp
mov
aas
mov
cltd
and
cmp
push
pop
inc
outsb
stos
mov
stos
dec
outsl
sahf
mov
pop
inc
mov
pushf
mov
fs
xchg
ljmp
mov
add
scas
out
fneni(8087
loop
and
mov
dec
and
movsb
inc
cmpl
fnsave
mov
mov
lahf
jae
outsl
push
jne
sbb
and
add
and
xchg
xchg
insb
cwtl
out
pop
sahf
add
adcb
daa
inc
mov
rcrb
adc
dec
dec
fistpl
mov
gs
bound
lahf
nop
add
mov
xchg
jbe
sbb
cmp
inc
fisttps
popf
inc
jo
or
in
test
pusha
or
js
pop
ss
push
add
out
test
icebp
pop
mov
mov
mov
loop
jg
sahf
or
sub
out
sub
in
fdivrl
jecxz
inc
rol
xor
sub
inc
xchg
push
nop
mov
jno
sti
xchg
mov
add
pop
pop
stc
push
mov
dec
ret
gs
pop
xchg
mov
out
adc
sub
fidivrs
stc
mov
mov
pop
pushf
lret
and
nop
mov
xlat
repz
push
pop
sbb
cmc
push
repnz
mov
bound
add
mov
pusha
cmc
or
mov
adc
gs
out
mov
jecxz
andb
push
jnp
pop
push
adc
js
into
sub
or
mov
push
jns
mov
inc
xchg
pop
clc
jb
popf
fwait
inc
mov
pop
test
mov
inc
imul
insl
add
mov
in
cbtw
aas
or
fwait
scas
pop
test
jle
mov
cmp
xchg
mov
jmp
inc
pop
mov
pop
pop
jns
gs
imul
push
or
inc
cmp
push
jmp
cmpsl
cmp
movb
scas
mov
cmpsb
insb
fisubl
lret
hlt
cmp
int3
xor
pop
int
mov
clc
mov
pusha
negb
je
pop
fbld
xchg
and
and
push
and
push
or
test
xor
fidivl
inc
out
stc
movsb
adc
sbb
movsb
add
lods
ljmp
push
xor
aad
jb
addr16
stc
xchg
pop
adc
adc
pop
scas
push
cltd
jno
mov
arpl
mov
mov
or
dec
in
cli
add
nop
cmp
scas
add
pop
in
jle
xor
out
or
cmp
or
arpl
cmp
pop
fldl
xchg
pop
test
ficoml
cmpsb
fmull
jne
jb
inc
push
enter
sub
fistl
pusha
shlb
jae
mov
mov
out
or
dec
bound
loopne
out
aas
jecxz
xchg
sti
adc
jecxz
dec
fsubs
pop
jbe
popf
scas
fwait
mov
add
pop
ss
hlt
xor
popf
sub
mov
mov
mov
enter
popa
out
loopne
xchg
jbe
mov
xchg
pop
dec
adcb
cmpsb
sub
data16
repz
es
pop
sub
xchg
cli
xor
test
dec
mov
or
push
call
push
sbb
cmpl
add
in
dec
ret
mov
push
ds
sbb
daa
lds
inc
inc
cmp
lahf
dec
xchg
dec
inc
push
add
shl
out
sbb
mov
sub
xchg
push
jge
mov
rclb
fdivl
test
mov
xor
out
add
push
js
lods
pop
cmp
sub
inc
in
inc
pop
mov
in
mov
push
fnstsw
push
aam
jno
lods
dec
aas
loopne
mov
or
daa
stos
pop
jns
add
xchg
bound
and
pop
xchg
jmp
in
pop
pop
popf
xchg
mov
ss
loopne
inc
add
dec
clc
scas
xor
push
mov
dec
mov
cmc
sbb
je
es
lret
cmovge
sub
pushf
mov
icebp
into
or
sub
dec
stc
aaa
xor
push
xchg
jb
aas
gs
push
xor
sub
repnz
clc
addr16
mov
jne
mov
sub
jmp
lods
mov
into
imul
dec
out
xor
cmp
ret
dec
cmpsb
nop
cli
stos
mov
sti
out
jmp
inc
sbb
test
xchg
call
lock
xchg
inc
xchg
ret
dec
lret
sub
xlat
adc
je
push
push
push
orl
or
sub
dec
test
fs
mov
cmp
and
cmpsb
dec
fisubl
pop
xchg
sub
je
in
movsb
adc
mov
out
sub
cmc
mov
fisttpll
dec
sub
push
push
lahf
dec
inc
shlb
ljmp
mov
aas
pop
testl
sub
xchg
add
fucomip
sbb
sub
repnz
jmp
adc
lcall
adc
mov
hlt
xor
cmp
xchg
sbb
iret
or
orb
inc
dec
jmp
enter
jecxz
nop
js
orb
jp
lods
push
fs
push
add
repnz
sub
gs
aad
adc
data16
and
loope
and
ficoms
xor
inc
test
nop
ljmp
in
xor
xchg
and
in
lock
pop
rcl
jb
loopne
sub
cmp
lret
dec
in
ret
or
lret
jbe
add
mov
pop
pop
aam
xchg
jbe
and
mov
sub
jge,pt
or
adc
mov
shll
jb
enter
fldt
rorl
xchg
push
sbb
push
dec
cmpsl
xchg
push
out
mov
sub
inc
pop
cmpsl
mov
push
pop
fwait
incb
push
repnz
jmp
mov
and
cmpsb
push
adc
xchg
mov
addr16
pop
in
movddup
loope
jl
out
push
fs
js
pusha
test
jmp
add
pop
push
xlat
int3
ljmp
mov
jle
iret
mov
jg
scas
jge
sub
inc
mov
xchg
cmp
pop
lret
ret
xor
outsb
js
push
lds
loopne
mov
pop
dec
push
add
lahf
mov
inc
jg
iret
cmp
ficomps
bound
sub
popa
jb
xchg
orb
and
ljmp
lcall
out
loopne
dec
sbb
js
jge
xor
mov
mov
push
and
jp
dec
loopne
shr
sub
mov
sahf
test
rclb
std
in
push
cmp
sbb
cmpsb
lods
or
mov
in
xchg
cmpsl
lret
pop
push
out
jmp
mov
jecxz
ljmp
nop
orl
mov
inc
dec
fwait
ret
iret
rolb
jae
ret
mov
loopne
push
hlt
sti
inc
daa
ds
sbb
or
rcll
enter
loop
adc
mov
jle
sub
pop
dec
adc
push
push
push
mov
in
inc
mov
inc
cld
insl
pop
andb
rcrb
and
mov
test
inc
cwtl
out
mov
lret
inc
test
push
mov
or
cli
movsl
xor
adc
imul
jae
das
xchg
or
push
popa
jnp
movsl
ljmp
loop
ffree
sbb
shll
cld
pop
imul
imul
or
mov
std
push
divb
mov
mov
xor
xor
or
jae
push
xor
in
xor
add
or
inc
repz
dec
pop
in
jns
cld
dec
xchg
mov
icebp
enter
or
or
add
jno
adc
jae
add
rcll
in
pop
das
int
mov
mov
cltd
leave
stc
jns
ret
mov
xchg
lea
int3
movsl
lret
lock
insb
xchg
jp
lods
in
cmc
xor
in
enter
sbb
mov
es
push
and
jle
lods
js
fsub
add
fstl
rorl
movsb
push
mov
testb
inc
jp
add
jbe
gs
scas
mov
faddp
daa
mov
in
sbb
dec
lods
jne
mov
sar
and
push
jb
dec
and
mov
in
iret
leave
mov
loopne
xor
pop
xchg
mov
popf
mov
mov
cli
mov
cmp
jmp
insb
inc
loope
jecxz
popf
push
xchg
fdivrl
clc
outsl
add
out
ljmp
dec
jne
lds
dec
loope
xchg
das
or
mov
mov
imul
test
push
jae
lods
mov
sub
fstpt
cmc
add
scas
mov
cmp
mov
sbb
repz
imul
cli
mov
adc
jp
mov
loope
enter
push
imul
xor
or
add
lret
mov
outsb
sub
jb
pop
out
pop
gs
scas
cld
stos
mov
repz
adc
fstpt
push
cltd
ret
fdivrs
daa
aam
mov
mov
inc
adc
aaa
and
sbb
rcll
dec
addr16
jmp
sahf
rorl
fcoms
out
add
test
in
nop
in
dec
mov
lahf
jb
pop
in
fisubl
dec
push
cmpsl
mov
pop
rclb
call
test
mov
jns
nop
idivb
cmp
je
pop
xchg
mov
mov
aad
sbb
or
push
xlat
jnp
hlt
dec
aaa
sbb
jp
add
in
push
jge
add
push
ljmp
pop
cmp
loope
inc
ss
push
es
cld
mov
outsb
jmp
stos
inc
bound
push
or
faddl
adc
mov
cwtl
mov
xchg
add
shll
daa
orb
aam
sbb
inc
repz
clc
stos
clc
pop
lds
pop
xchg
test
rorl
frstor
xchg
pop
dec
sbb
xor
or
xor
dec
inc
movsl
sub
js
movsl
fisubrl
push
sbb
push
pop
and
inc
fstps
jne
icebp
dec
stos
leave
adc
mov
push
adc
jge
lods
xchg
fstps
jo
orl
adc
cld
xor
bound
and
xchg
lcall
mov
hlt
gs
inc
and
imul
rol
xlat
lahf
mov
or
pop
imul
ja
scas
scas
xchg
cmpsl
mov
add
cmp
fstl
xchg
icebp
and
push
add
iret
and
adcb
fisubrs
enter
loope
jnp
in
mov
sub
jl
adc
xor
ret
ret
mov
test
adc
ffree
mov
inc
adc
xor
mov
fldenv
imul
dec
iret
dec
loope
loopne
into
insl
xor
aam
adc
imul
mov
inc
repnz
dec
lds
cmp
lahf
in
inc
jle
movsl
dec
add
fldcw
mov
out
stos
fcomip
sar
popf
jecxz
ror
sarl
call
dec
inc
addr16
fs
pop
or
out
dec
push
and
inc
mov
mov
mov
xchg
sti
add
pop
lcall
sbb
fwait
dec
nop
add
fisttpl
dec
fistps
or
popf
ret
stc
mov
lock
push
add
xchg
mov
icebp
inc
pop
dec
mulb
cltd
push
inc
dec
test
mov
push
jle
or
mov
xchg
ss
clc
dec
mov
cmp
mov
sti
fwait
jo
dec
addl
int
xor
rcl
test
dec
fst
pop
sub
negw
fcomp
mov
xor
jge
cmp
inc
rorl
sub
sub
jnp
test
aad
mov
pop
xor
faddl
into
mov
mov
sub
insl
popa
push
mov
add
dec
xor
lahf
fcomi
mov
movsl
xor
push
stos
repnz
mov
fisttpl
add
push
ljmp
in
cmp
pop
jg
pusha
lahf
aaa
add
mov
add
data16
fmul
pop
neg
add
or
in
in
xor
mov
cmpsb
ds
in
int3
test
movsl
mov
push
lods
and
mov
pop
push
pop
jns
mov
sub
hlt
xchg
lret
and
aam
sub
xor
pop
push
nop
daa
call
inc
arpl
dec
iret
mov
inc
mov
loop
fistpll
and
push
dec
adc
in
jmp
fwait
and
cmp
mov
ljmp
leave
in
outsb
or
pop
stos
in
repnz
sbb
pop
divb
fisttpll
shlb
test
insl
mov
lds
mov
pop
into
ret
shrl
dec
mov
pop
int
and
sti
bound
daa
and
ss
adc
addr16
jo
sahf
fisubrs
mov
pushf
enter
pop
xor
in
lods
fstpl
test
out
test
xor
ljmp
sarl
mov
add
inc
push
or
cltd
and
imul
xchg
push
cld
popf
inc
mov
shr
xor
mov
pop
roll
or
out
inc
push
addr16
notb
cwtl
les
mov
aam
sbb
mov
cmp
hlt
add
test
mov
lahf
xchg
jecxz
xchg
or
jae
inc
int3
fidivs
cmpsl
icebp
xchg
mov
jge
repnz
bound
movsb
dec
or
cwtl
mov
aas
test
shl
push
shl
sbb
into
pop
cmc
jno
adc
mov
jmp
imulb
adc
rcll
xor
shlb
dec
cmp
xlat
cwtl
xlat
push
add
mov
inc
mov
or
cmp
ret
loope
xchg
inc
sbb
gs
cmp
mov
cmp
jb
lods
ds
sarb
jmp
xor
addr16
pop
dec
test
imul
inc
aaa
dec
pop
outsb
or
cltd
mov
mov
in
roll
mov
fcmove
pop
sbb
sub
push
or
lcall
sbb
sti
mov
icebp
and
add
add
dec
adc
push
adc
xor
xchg
inc
jb
adc
pusha
les
xor
cwtl
out
push
sarb
aam
fsts
scas
cmp
jecxz
pop
lcall
popl
mov
rorb
icebp
fcmovbe
ffree
cmpsb
inc
inc
rcrl
fs
fnstsw
dec
xchg
and
outsl
xchg
xor
int3
pop
push
sub
cmp
pop
jno
and
push
pop
inc
push
xchg
cmpb
pop
cmp
ss
xor
or
stos
pmulhuw
jnp
aam
clc
frstor
dec
repz
addl
lret
out
jns
add
push
test
xchg
sbb
xor
out
cmc
imul
mov
cmp
inc
daa
mov
aam
leave
pop
sahf
jecxz
ds
rcrl
scas
and
push
mov
sbb
fldenv
ljmp
rcl
in
dec
lods
and
test
adc
popa
sbb
or
sub
lock
adc
add
lret
push
jno
or
or
jl
push
mov
mov
xchg
clc
mov
aam
icebp
js
mov
ret
mov
pop
mov
aas
mov
inc
pop
movsb
in
mov
xchg
inc
cmp
adc
cmp
jmp
sub
dec
and
mov
and
out
fbld
sub
repnz
cs
xchg
pusha
rcr
adc
std
fs
mov
pop
inc
fwait
outsb
pop
mov
xor
xchg
stc
add
xchg
or
push
pusha
leave
inc
pop
fadds
stos
pop
mov
sbb
repz
push
test
jno
stc
fdivrl
ds
mov
and
popf
cmc
lds
mov
mov
cmp
push
mov
rclb
push
les
xchg
loopne
sbb
sar
inc
fisubl
jecxz,pn
adc
daa
ja
inc
mov
pop
xchg
int3
lcall
aad
mov
call
mov
repz
xchg
jno
mov
fdiv
or
inc
pop
fsubl
sahf
ret
shll
fdivs
dec
inc
jbe
fcmovu
int
das
sub
sbb
leave
pushf
jmp
inc
test
cmpsl
xor
jl
loope
daa
outsb
dec
std
cmpsb
xchg
shlb
sbb
cmc
jle
xor
mov
mov
je
dec
imul
fcmovnb
sub
cltd
inc
popa
push
sbb
faddl
or
mov
jne
mov
addr16
cmp
jne
push
xor
data16
add
push
into
leave
mov
daa
fucom
popa
sarb
jg
orl
addr16
push
add
les
mov
pushf
cltd
xchg
or
popf
dec
out
mov
outsl
jg
xlat
in
fld1
aaa
fwait
stos
mov
cmpsl
es
out
dec
enter
hlt
mov
inc
fcom
arpl
stos
mov
fwait
outsb
enter
lcall
test
cmp
lcall
mov
rcl
mov
sub
mov
cmp
call
mov
nop
cmpsl
or
push
xor
div
and
dec
fldl
cwtl
jno
stos
jno
jl
cld
mov
ret
lea
sti
fs
xlat
jno
les
xchg
sbb
dec
in
or
push
repz
push
test
xchg
out
aaa
sbbb
or
push
fidivrs
popf
xor
test
adc
in
inc
mov
rcl
dec
sub
push
nop
icebp
push
jns
daa
mov
mov
arpl
cmp
int
add
cmpsl
icebp
ret
mov
dec
rcll
push
cmp
jp
pop
pop
fstpt
dec
cmp
rcrb
into
jnp
mov
mov
jge
jge
pop
fisttpll
mov
xchg
ja
popl
mov
mov
or
aas
fldcw
sbb
sbb
dec
clc
cmpsl
mov
mov
movsb
sub
xchg
adc
xor
iret
loopne
mov
popa
popf
fcompl
dec
lret
dec
ficompl
stos
jecxz
push
jle
les
arpl
pop
out
movsb
idivl
mov
cli
add
jle
jae
pushf
or
and
scas
push
lods
sarb
and
aam
add
pop
mov
mov
or
adc
inc
fcomip
jmp
push
lret
lcall
fidivrs
sub
xchg
popf
mov
push
xchg
pop
xchg
insl
dec
jle
out
mov
xchg
arpl
adc
inc
dec
pop
jo
mov
cwtl
jmp
or
inc
jo
into
cltd
push
in
andl
cmp
dec
or
fisubrl
jecxz
mov
mov
dec
loope
sbb
push
popa
inc
push
mov
sti
pop
jmp
test
cmp
lahf
lods
cli
mov
hlt
fstps
sbb
pop
pusha
lods
repz
nop
outsl
sub
and
cmp
push
push
imul
sbbb
repz
data16
add
push
lock
fs
pusha
sub
cld
xlat
nop
xchg
xchg
and
sbbb
xor
lods
pop
in
fst
sub
aas
adc
inc
ret
outsb
aaa
push
stos
inc
mov
pop
cmp
addl
adc
lea
insl
test
test
das
cmp
fisttpl
mov
imul
test
jae
xchg
cs
push
cli
mov
sub
leave
loop
cmp
rcll
jno
cmpsl
sub
inc
icebp
xor
mov
mov
call
aas
cmp
lahf
add
test
fdivl
xor
push
mov
mov
or
sbb
int3
xor
cmp
sbb
mov
inc
cmp
xor
ffreep
addr16
stos
or
mov
addr16
add
cltd
stos
pop
xchg
into
or
ss
mov
sub
inc
cmpsl
xchg
cmp
sti
aam
dec
decl
loop
add
and
xor
inc
shl
movsb
aad
es
ljmp
xor
lret
jge
jo
push
jb
pop
out
push
bswap
mov
inc
sbb
mov
xor
xor
sbbb
fcoml
xchg
jnp
push
sahf
pop
ljmp
ja
int
xchg
sub
cmpsb
stos
add
and
rcrb
mov
jbe
out
addr16
lret
mov
push
jno,pn
loop
pushf
shr
inc
mov
outsl
ljmp
lcall
into
push
mov
push
pop
xchg
mov
jbe
lock
loopne
add
mov
lahf
adc
pop
popa
mov
pop
mov
dec
dec
addr16
movsl
dec
sbb
movsl
xchg
rorl
ret
je
in
and
xor
rclb
sub
sub
and
pop
mov
cmc
stos
mov
addr16
mov
inc
mov
int
js
and
jnp
daa
or
xor
jae
pop
in
dec
xor
in
push
cmpsl
mov
imul
or
cmc
or
cmc
inc
and
pop
push
inc
or
sbb
sarb
jae
mov
sarl
add
cwtl
shrl
xchg
xorb
mov
sub
pop
clc
ja
add
ljmp
xor
std
stos
jo
pop
dec
mov
addr16
ficoml
mov
movsl
repz
mov
lods
dec
ret
fdivs
pop
sbb
mov
xchg
dec
int
push
int3
cmp
pop
and
add
test
mov
out
xchg
fmuls
adcb
cli
icebp
pop
clc
sbb
sub
das
mov
iret
stos
lret
jae
sub
out
pop
test
bound
mov
out
mov
pop
shll
mov
test
and
mov
cmp
data16
and
pop
jno
push
cs
imulb
jl
cs
cmpsl
add
in
stc
push
mov
stc
das
xor
cs
add
stos
cmpsl
add
mov
mov
pop
daa
push
pushf
push
add
nop
xchg
cltd
pop
sbb
or
scas
or
pushf
cli
sub
dec
and
xchg
jmp
sti
xor
cli
dec
push
fwait
dec
mov
inc
ja
rcr
sbb
daa
loop
push
imul
fsubr
or
sub
push
or
push
stos
addr16
scas
out
dec
adc
add
sub
fadds
outsl
jg
or
daa
fcomip
dec
mov
add
shl
xor
lds
loop
dec
adc
repz
je
xchg
xchg
pop
jno
push
fldt
push
rclb
push
test
call
mov
jle
ljmp
jle
es
gs
cmp
mov
pop
rorb
aad
jno
daa
mov
jmp
clc
xchg
lods
jae
aad
pusha
insl
stc
or
or
or
sbb
pusha
push
loope
mov
call
inc
xchg
mov
xor
fidivl
int3
int
clc
out
and
dec
xlat
pop
nop
flds
aas
in
clc
mov
add
fadds
pop
fistpl
pop
and
or
add
stos
sahf
push
cli
mov
jmp
sub
loope
mov
pop
mov
lret
mov
in
rcrl
cmp
outsl
aam
ret
push
xchg
les
ja
fnsave
rolb
fsubr
xor
dec
fmuls
les
fnstcw
aad
scas
jg
lea
pop
pop
aaa
cmp
cmp
and
and
mov
aam
lahf
shrl
lods
cmpsb
int3
or
enter
les
es
sub
push
mov
psraw
mov
sbb
ja
sbb
aad
inc
outsb
push
mov
inc
dec
inc
sti
outsl
push
cltd
loop
cwtl
out
mov
dec
mov
dec
push
push
cmp
mov
rorb
daa
and
scas
test
adc
mov
aad
xchg
add
pop
sub
cltd
push
out
sbb
in
pop
not
jb
mov
mov
pop
cmpsb
jle
sub
xor
ret
xchg
or
jns
shrl
push
inc
inc
test
call
sub
in
jl
inc
sbb
push
cli
jb
lret
sub
aam
leave
sub
loope
and
jne
pop
outsl
sarl
mov
repnz
outsl
cmpsl
add
pop
mov
push
aad
rcl
aas
pop
mov
test
loopne
xchg
push
lock
rcl
sbb
cmp
dec
adc
icebp
sti
cmp
stos
jmp
loop
stos
jne
test
arpl
cmpsl
jmp
pop
aam
mov
mov
pop
mov
jne
and
add
cwtl
jmp
shrb
add
mov
mov
pop
setno
adc
add
sbb
test
pop
int3
sub
call
sub
jecxz
cmc
lret
dec
imul
out
addr16
inc
sub
sarl
stos
pop
negl
pop
push
outsl
repnz
mov
jno
cmp
or
imul
std
sbb
push
int
punpckldq
cmp
xlat
movsl
fldenv
xchg
fsincos
add
mov
shl
dec
push
ds
into
jmp
or
roll
lret
add
cs
inc
gs
jp
pop
add
cmpl
jp
imul
sub
stc
ret
xchg
xor
cmpsb
out
dec
xchg
leave
or
fcompl
je
mov
xchg
lret
xor
pop
push
shrw
loopne
mov
lahf
jecxz
pop
shlb
inc
out
sbb
addb
lods
mov
enter
sti
add
pusha
adc
and
fdivl
jge
scas
or
inc
sbb
ss
sub
lods
xlat
push
sub
sbb
or
pop
in
notb
jns
test
push
loopne
fwait
hlt
push
push
jmp
sti
mov
pop
test
iret
adc
leave
bound
jmp
inc
xchg
adc
inc
or
xchg
adc
pop
test
test
mull
enter
mov
sahf
cmp
mov
fistl
inc
out
in
xlat
xor
jo
push
popf
lret
sub
incl
filds
sub
mov
ds
mov
cmc
loop
sub
mov
xchg
not
out
std
fcmovbe
fwait
or
aad
cli
xor
daa
mov
xor
add
mov
je
nop
push
shlb
lds
xchg
pop
xor
mov
hlt
test
push
out
mov
and
rcrl
inc
mov
mov
gs
addl
mov
add
push
outsb
adc
stos
ret
fcoml
dec
push
es
lods
sahf
fisubrl
jp
xchg
push
das
mov
dec
daa
enter
and
cmp
adc
fisttps
sub
test
mov
mov
cwtl
in
add
dec
imul
mov
xlat
push
imul
jb
xor
lds
pop
xchg
out
xchg
xchg
call
adc
test
jmp
mov
cwtl
outsl
inc
test
aad
outsl
dec
adc
pop
xor
mov
aad
icebp
mov
das
gs
stos
cmp
or
cmp
cli
add
xorb
mov
mov
mov
xor
aas
pop
mov
int3
seta
cmp
aaa
mov
sahf
arpl
pushf
testl
mov
fldenv
imul
pop
aam
nop
pusha
sbb
es
sahf
sti
mov
jno
imul
cmp
lcall
cld
cld
nop
in
lret
int
test
enter
adc
addr16
and
std
outsb
push
les
nop
xor
out
sbb
stos
cltd
dec
cmp
add
and
rcrb
roll
push
jnp,pt
xor
fdivs
jp
dec
lret
sbb
xchg
add
test
into
sbb
mov
push
cmp
aad
scas
adc
jecxz
leave
cltd
pusha
pop
fnstenv
or
scas
popa
jbe
shlb
lock
inc
xchg
daa
inc
outsl
inc
in
std
adc
ret
aas
inc
jnp
es
jmp
xchg
push
dec
or
cmp
or
vmovhpd
dec
sbb
mov
in
jg
mov
je
rorb
jbe
xchg
hlt
divl
decl
push
sub
shll
mov
bound
push
pop
lret
icebp
mov
mov
repz
dec
cs
jl
imul
mov
sbb
fsubl
cmp
div
scas
out
jg
call
or
jae
insl
cmc
scas
mov
mov
push
add
insl
test
mov
fbstp
insb
popf
dec
sbb
out
icebp
cmp
les
jg
inc
adc
out
mov
jns
dec
sub
lods
test
inc
xchg
xor
mov
cwtl
xchg
xor
push
orb
out
xchg
inc
in
ds
adc
rcrb
ljmp
clc
sbb
out
push
lahf
cvtps2pi
xchg
enter
mov
inc
fwait
test
ds
scas
or
adcl
dec
in
shlb
cli
cmpsl
sbbb
pop
imul
stos
inc
lods
jl
outsb
sub
loopne
insl
cli
in
mov
add
enter
mov
mov
outsb
xchg
cmc
add
cs
mov
cmp
out
stc
and
pushf
sbb
inc
pop
mov
pop
mov
cmc
mov
test
pop
es
call
push
lea
loopne,pt
outsl
xor
in
cmp
adc
pop
dec
xchg
iret
call
icebp
enter
call
add
aad
push
jmp
jle
jle
jl
adc
inc
iret
sbb
jge
adc
inc
inc
pop
mov
mov
test
pop
xor
mov
sub
xor
cld
leave
xchg
in
cmp
jae
xor
jne
mov
testl
jb
int
fisttpll
es
sub
push
gs
scas
bound
into
push
fwait
pop
push
mov
iret
push
les
int3
xchg
subb
js
mov
mov
mov
mov
or
inc
xchg
pop
int
pop
fwait
mov
stos
sbb
sbb
in
mov
push
fnsave
aaa
cmp
inc
cmp
push
test
nop
inc
scas
out
jge
mov
jmp
push
push
inc
stos
push
push
ret
aam
mov
push
popf
mov
data16
insl
inc
and
sub
lock
cmpsb
aas
dec
faddp
aaa
xor
lods
mov
outsl
shr
imul
out
loope
dec
je
out
fwait
imul
cmp
mov
pop
add
cs
std
mov
or
repz
adc
aas
and
ljmp
les
mov
decb
jae
addr16
sub
cltd
push
pop
push
adc
cld
pop
push
and
lock
or
and
test
bound
in
hlt
fists
sbb
add
pop
add
arpl
das
dec
out
les
add
cmp
inc
lea
ljmp
outsl
mov
xchg
mov
cmpsb
and
xlat
inc
sbb
arpl
inc
dec
ret
pusha
loop
loopne
push
pop
mov
aam
pop
in
push
cwtl
sbb
fs
mov
mov
addl
add
jo
mov
fst
push
insl
add
inc
and
aaa
addr16
xor
icebp
mov
sub
jl
jecxz
out
dec
pop
jb
rclb
pop
pushl
cmp
jno
aam
jnp
lret
hlt
in
loope
and
adc
cli
cmp
decl
xorl
jg
cld
pop
sti
push
push
fidivs
shrb
push
cmp
inc
shl
add
dec
imul
xchg
in
jmp
popl
repnz
mov
add
ret
ljmp
popa
add
sbb
fmuls
jne
sbb
popa
les
or
es
adc
jbe
loopne
mov
add
jge
loop
fcomip
inc
int3
daa
mov
and
ljmp
pusha
inc
xchg
xorb
push
push
inc
push
aaa
mov
jmp
insb
mov
bound
mov
cli
push
movsb
xlat
dec
mov
cld
std
je
push
xchg
ja
aaa
jns
push
jnp
push
push
push
push
sbb
xor
jge
clc
mov
loope
inc
scas
movsb
pushf
movsb
cmp
aaa
insl
inc
jno
cmp
test
adc
mov
jns
lret
sbb
outsb
pop
das
lock
dec
into
fidivl
cltd
cli
loopne
cmp
fs
or
jp
pop
push
sbb
xor
adc
ds
shlb
stos
pop
xor
xchg
mov
repnz
jnp
cli
in
shrl
mov
sub
into
outsb
stc
and
shlb
and
inc
psrlq
jo,pn
aaa
mov
pop
into
test
loop
push
leave
fsub
ror
ret
mov
mov
adc
and
jbe
mov
mov
xlat
fbld
mov
push
cmc
dec
mov
popa
movsb
cmp
mov
mov
mov
dec
add
add
inc
push
test
pop
aad
test
sar
push
mov
leave
mov
repz
jmp
mov
sbb
mov
mov
push
jl
cmp
mov
pop
stc
inc
mov
cld
inc
aam
xchg
mov
pop
and
cmp
addr16
ja
lahf
or
mov
jne
dec
sbb
inc
jge
lret
and
cmp
mov
loope
shll
sub
std
mov
faddp
shl
mov
pop
and
cmp
fs
push
cmpsl
push
push
jne
popf
das
jnp
mov
adcb
mov
rorb
pop
mov
stos
es
je
es
xchg
sub
xor
lcall
or
div
or
popa
jne
jge
mov
pop
movsl
push
loopne
inc
ljmp
or
sbbb
mov
inc
rorb
push
lahf
xlat
xchg
shl
xchg
lods
cltd
movsl
lahf
xor
lret
movsb
out
add
aam
or
add
lock
iret
push
xchg
in
push
inc
adc
fs
jns
cli
mov
sub
int3
push
jecxz
adc
pushf
stos
shl
adc
push
loope
shrb
rolb
dec
adc
jge
dec
cmp
adc
lods
out
dec
sub
push
xchg
push
dec
cmp
stos
out
and
push
test
seta
inc
test
or
dec
shrl
jge
imul
jo
cmpsl
cli
rorb
ss
ljmp
mov
out
add
icebp
cmpsb
inc
inc
inc
mov
aaa
jle
sbb
pop
les
dec
ret
dec
sarb
out
outsl
jge
scas
jp
pushf
call
push
jae
fsubrl
cmp
iret
mov
in
mov
xchg
ja
ret
jmp
and
fs
les
out
dec
jno
stos
dec
imul
lea
sti
je
js
mov
ficoms
xor
dec
sarl
mov
xchg
lea
incb
xchg
inc
sbb
shll
xchg
rcrb
out
mov
aad
mov
ljmp
sub
lds
in
pop
popa
pop
xchg
sbb
call
sbb
les
loopne,pt
or
loope
and
push
addr16
lods
dec
cmpsl
loope
or
shll
pop
sub
repnz
mov
outsb
ds
lahf
sbb
cmpsl
sub
and
jmp
dec
mov
dec
add
cmp
jbe
sub
xchg
dec
cltd
xchg
lret
bound
repz
xor
cmpsl
inc
xor
pushf
aaa
mov
cmp
ds
out
sbb
push
hlt
or
push
push
jnp
sbb
scas
rcll
lretw
lods
fisttpll
dec
incl
iret
mov
cmpsl
cwtl
cld
sub
repnz
cld
push
xor
push
xchg
sar
xchg
xlat
push
daa
xchg
loope
stos
cmp
ljmp
mov
lds
mov
inc
push
sti
es
in
pushf
jne
pop
lcall
loop
mov
adc
jo
jecxz
adc
xchg
popf
add
mov
cli
mov
or
pop
nop
mov
jmp
lds
xchg
std
push
bound
sub
jge
out
xor
adc
cwtl
dec
push
das
lahf
dec
and
jb
sti
lcallw
xor
sarl
add
lret
leave
pop
or
rcrb
shlb
stos
dec
clc
loopne
fisttps
pop
scas
or
jne
mov
jecxz
adc
outsb
mov
lea
pop
cltd
shl
cmpsl
popf
xchg
fcomip
fcomps
fdiv
push
mov
jmp
add
xchg
xlat
negb
cmp
add
fimuls
cmp
xor
jno
sbb
add
mov
repnz
push
inc
inc
clc
jae
push
into
cltd
cli
lea
pop
xchg
ficompl
add
xchg
pop
lea
stc
icebp
popa
repnz
xchg
add
push
insb
popl
push
das
jp
add
insl
add
add
inc
xchg
dec
pop
stos
cmp
inc
call
push
xor
addb
push
adc
sub
fiadds
xchg
or
aaa
scas
cmp
inc
mov
fidivl
mov
push
jecxz
mov
fstps
pop
in
pop
jmp
lcall
or
cli
mov
xchg
add
insl
out
jbe
lcall
notb
mov
call
push
ret
xor
mov
repz
test
inc
dec
pop
cld
movsl
cmp
xor
stc
lahf
mov
shll
mov
jno
ds
fimull
arpl
lcall
cmp
xor
insb
mov
and
push
inc
pop
push
fists
xchg
cmp
scas
leave
mov
imul
fadd
push
adc
sarb
dec
mov
popf
bnd
xchg
cli
or
add
pop
adc
loopne,pn
int
out
repnz
inc
pop
int
sbb
adc
dec
fs
pop
jo
pushl
pop
in
rcr
mov
or
fcmove
jb
jnp
jno
loop
and
mov
mov
clc
pop
dec
adc
push
adc
imul
dec
fs
adc
mov
push
les
fsubs
mov
dec
mov
and
cmc
push
and
dec
sbb
inc
sub
mov
outsl
and
arpl
movsl
add
pop
jecxz
xor
xchg
cmp
jns
push
loope
sub
jl
and
jp
cmp
nop
pop
pop
adcl
sub
mov
mov
mov
xor
fisttpl
inc
xor
fs
jge
cmpsb
adc
loopne
mov
xor
xchg
push
push
popa
ds
int
fldt
mov
adc
xchg
aam
cmp
adc
pop
aam
cmp
jbe
add
enter
xchg
jecxz
hlt
cltd
sti
fcmovbe
rolb
jns
je
insb
inc
xchg
dec
mov
xorb
adc
cltd
push
stc
adc
mov
mov
lock
lods
shll
lods
pop
pop
movsl
xchg
or
outsb
pushf
mov
jo
daa
sbb
stc
pop
xchg
ja
mov
add
shl
jmp
add
int
xchg
xlat
pushf
pop
aas
xor
lock
xor
cltd
sub
push
mov
stos
aad
js
aam
mov
cli
pop
bound
adc
rorl
orb
mov
push
cmp
dec
mov
and
iret
mov
pop
dec
adc
jo
mov
gs
or
cmpl
mov
jbe
out
push
dec
pop
loopne
xchg
aam
rol
xor
mov
jnp
xchg
mov
stos
mov
and
out
in
xchg
sub
mov
loope
jmp
pop
out
pop
xchg
jge
jae
mov
repz
xchg
sbb
mov
insl
lods
fisttps
icebp
daa
test
or
push
lret
jle
xchg
push
adc
callw
ja
mov
or
clc
loop
jecxz
sbb
pop
in
cmp
popf
ss
sbb
in
sarl
jb
mov
dec
xchg
outsb
mov
call
dec
and
jbe
addb
xor
rorb
push
push
rcrb
lds
pop
mov
jne
and
xor
out
xor
add
inc
cmpl
cmp
lret
adc
fsubs
mov
jmp
dec
imul
movsb
enter
rcrl
mov
fisttps
xchg
subb
mov
cmp
pop
in
push
jmp
pushf
mov
cltd
adc
or
cli
sbb
pop
mov
xor
pop
nop
push
jo
pop
push
adc
aas
jg
mov
xchg
sbb
xor
cwtl
scas
ljmp
sbb
add
stos
push
lea
jno
pop
add
or
xor
mov
loopne
xor
andb
adc
mov
mov
inc
lret
es
gs
cld
sub
add
lcall
xchg
pop
adc
fnstcw
bound
lret
mov
imul
enter
cwtl
jp
xor
xchg
lea
jns
icebp
sahf
mov
shrl
adc
scas
ret
fiadds
jge
fisubrl
mov
pop
and
sub
fwait
sbb
fwait
fs
test
xor
inc
push
jp
xor
push
and
inc
xor
call
in
sbb
push
mov
out
mov
sub
jg
sahf
xchg
pop
ret
insb
outsl
adc
cmp
lods
les
xchg
mov
dec
test
ret
nop
push
int
les
popa
out
cli
and
sbb
and
adc
hlt
lea
adc
in
dec
jp
enter
out
xor
xor
test
sbb
jp
rolb
fdivrp
and
test
cmp
pop
and
cli
nop
loop
or
push
pop
pop
xchg
aam
insb
adc
icebp
inc
popl
adcl
inc
lret
scas
mov
pop
sub
mov
or
out
out
movsl
xlat
mov
jnp
sti
or
push
dec
das
enter
pop
xchg
and
or
and
adc
xchg
dec
mov
lret
int3
scas
lds
mov
mov
xor
in
add
xchg
dec
test
neg
test
or
cltd
adc
cli
mov
data16
or
in
adc
cmc
inc
sbb
aas
in
sbb
cmc
adcl
push
mov
lea
cmp
jecxz
out
fists
outsl
adc
outsl
cmpsl
dec
loope
pop
cmpsb
out
mov
xor
pcmpeqw
xor
popf
stos
lret
mov
dec
rclb
ss
sub
lahf
adc
jp
nop
mov
xor
inc
xchg
decl
fwait
mov
xor
xor
jl
push
adc
loopne
fyl2x
fsubrl
nop
testb
sbb
mov
or
inc
sbb
lahf
loop
repnz
sbb
lds
and
inc
lcall
jnp
lahf
cmpsl
mov
push
pushf
mov
pop
inc
and
iret
imul
push
mov
les
mov
inc
sti
rorb
inc
jns
mov
cmp
loopne
subl
adc
adc
mov
test
mov
stos
adc
cmp
add
outsl
jmp
sti
imul
xchg
arpl
jmp
mov
pusha
push
mov
sub
mov
std
inc
fidivs
int3
insl
xchg
mov
fisttps
push
lcall
mov
inc
call
call
lahf
aas
fstps
adc
jp
daa
pop
adcb
aas
dec
xor
insb
cld
add
inc
decb
sub
push
mov
cmpsb
inc
or
gs
cmpsb
mov
das
xchg
fnsetpm(287
sub
out
das
repnz
adc
mov
bound
cmpsb
imul
mov
fiadds
adc
lahf
xor
pop
mov
pop
aaa
in
pop
adc
ficoml
push
lahf
xor
add
es
sar
xchg
adc
popf
popa
scas
roll
sub
jge
ret
add
sarl
cmp
call
les
in
icebp
sarl
mov
ror
xor
xor
inc
cmp
cmpb
loope
mov
xor
cltd
sub
push
aam
mov
mov
xorl
aam
jo
sbb
jecxz
add
jno
pusha
dec
sub
jle
stos
sahf
ss
dec
cld
lahf
pop
das
push
mov
or
add
loop
mov
pop
pop
mov
arpl
orb
push
jmp
sub
ret
in
lret
out
cmp
gs
pop
shlb
pop
pop
push
xchg
pop
daa
adc
ss
iret
xor
xor
movlps
sub
bound
mov
notl
stos
addl
and
pop
mov
push
lahf
in
in
push
add
std
jns
fidivs
push
pop
push
jmp
mull
aam
sub
jmp
jbe
pop
pop
mov
fstpt
cwtl
nop
imul
fidivrs
dec
mov
pop
pop
scas
xor
push
pushf
pop
cld
ja
pop
add
cmpsl
xchg
out
jp
in
ja
loopne
adc
inc
lcall
mov
or
aam
pop
inc
sbb
jmp
js
out
mov
cli
lret
repnz
sbb
in
mov
xchg
loop
mov
arpl
roll
test
mov
mov
add
pop
and
jp
popf
or
pop
mov
mov
dec
sbb
sahf
cltd
pop
lods
add
or
push
std
sbb
mov
dec
shll
fisttps
push
push
dec
pop
cmp
test
fisttpl
jns
aam
lea
adc
mov
cli
xor
add
mov
leave
jnp
or
test
adc
mov
push
stos
push
call
add
xchg
inc
aas
xor
mov
icebp
mov
js
adc
inc
rolb
jle
int
pop
mov
xor
leave
fs
jg
and
sbb
icebp
in
mov
out
loope
adc
inc
lock
cltd
jecxz
pop
aad
cmpsl
sbb
sub
dec
mov
sahf
mov
sub
aaa
leave
mov
test
test
mov
mov
add
push
cmc
aaa
xchg
out
dec
push
negb
test
xchg
lahf
loope
std
cmp
daa
add
sbb
das
pop
pop
mov
jbe
mov
arpl
cmpsb
xchg
xchg
imul
pop
xchg
mov
push
andl
mov
mov
enter
adc
mov
jp
jns
push
sbb
imul
leave
jbe
mov
jo
pop
jp
pminub
adc
add
lcall
rorl
cmovle
inc
mov
icebp
adc
rcrb
push
test
movsb
dec
data16
mov
outsb
cs
add
pop
mov
push
sbb
mov
fisttpll
add
jge
rolb
sbb
or
popf
and
inc
push
mov
outsb
gs
ret
shll
in
fs
jno
or
fdivl
mov
orl
ds
mov
mov
dec
push
inc
int3
out
jnp
lahf
lret
inc
das
hlt
imul
jmp
pop
xchg
xchg
jp
sub
mov
dec
inc
mov
es
jge
xlat
lret
jb
cld
in
mov
adc
clc
aad
and
in
cmp
lods
push
cmp
test
test
rolb
fists
outsb
mov
cmp
ja
xor
mov
jb
leave
mov
ss
lcall
mov
loop,pt
sub
fwait
mov
or
jp
add
xor
cmp
sub
or
dec
loope
xor
lock
insl
or
fcoml
cs
or
jge
ja
rcrl
mov
xchg
or
mov
out
sahf
imul
inc
cltd
push
jno
sbb
cs
jmp
cmp
pusha
out
out
in
pop
mov
cmp
decl
imul
fisttpl
sub
mov
dec
ja
mov
lret
sub
xor
ljmp
scas
mov
out
nop
jb
cwtl
xor
fsubs
mov
adc
outsw
adc
mov
insb
mov
mov
clc
mov
mov
sahf
add
cmp
sub
adc
int3
movsl
pop
pushf
popf
push
sbb
lahf
out
xor
cmp
and
dec
ja
dec
icebp
mov
ds
lds
xchg
cwtl
lret
pop
enter
jp
sub
xor
sub
data16
push
cmp
das
cld
ret
inc
jle
pushf
xchg
jecxz
xor
jg
sub
lock
stos
push
xchg
add
rorl
in
mov
and
addr16
mulb
sbbl
inc
adc
inc
movsl
imul
mov
hlt
add
movsl
insb
inc
ljmp
cwtl
pop
pushf
and
and
dec
clc
push
mov
or
pop
dec
imulb
push
xorl
mov
adc
fnstsw
jnp
lret
in
mov
arpl
push
or
sbb
daa
cmp
cmp
mov
push
stos
out
cmp
mov
data16
sbb
loope
or
fmuls
push
dec
push
mov
lahf
adc
xor
adc
mov
js
xlat
jecxz
pop
push
nop
adc
loop
push
inc
push
push
jo
mov
outsb
cmp
jb
xchg
ret
xchg
inc
sub
xor
in
out
cmp
xchg
mov
out
dec
mov
mov
popf
push
les
dec
aas
mov
in
aaa
shl
add
cwtl
or
addr16
adcl
lahf
and
push
pushf
lcall
mov
push
lock
int3
out
mov
add
jl
dec
test
test
mov
jns
mov
mov
leave
insb
div
push
cmpsb
jg
pusha
cwtl
ds
mov
dec
push
pop
hlt
sub
mov
popa
cwtl
inc
adc
sub
jns
insl
push
push
cmp
arpl
jg
mov
lods
xor
dec
mov
setb
sbb
xchg
xchg
xor
stos
dec
loopne
dec
lock
mov
lahf
adc
into
loop
cwtl
pop
je
push
cmpsl
cltd
gs
mov
inc
es
jmp
mov
mov
fsqrt
jg
stos
xor
cwtl
push
pop
jp
inc
sub
mov
adc
push
mov
or
adcl
pop
lahf
mov
jbe
aad
inc
cli
mov
pop
push
mov
jae
inc
pusha
dec
test
mov
popf
mov
jae
add
inc
sti
cli
rcrb
mov
and
dec
cli
test
inc
xor
or
xchg
imul
adc
nop
aas
lods
mov
cmpl
orl
scas
repnz
arpl
hlt
aas
sub
inc
lret
jae
add
ljmp
mov
inc
ljmp
sbb
mov
jns
pop
ret
lds
push
lret
imul
and
jmp
loopne
std
lcall
scas
inc
xchg
sub
or
push
mov
adc
je
test
sub
aaa
xchg
fwait
push
mov
push
in
ss
adc
data16
xchg
insl
push
cmc
bound
sbb
idivb
popa
mov
push
das
fmuls
negb
lcall
movsl
lock
pop
sbb
pop
cmp
rcrb
dec
adc
and
xchg
push
and
sbb
pushf
loop
ljmp
fldenv
sti
adc
jge
dec
fistps
arpl
push
out
outsb
jae
inc
add
sub
xchg
mov
dec
xchg
mov
xlat
push
ja
test
dec
mov
mov
mov
inc
rorl
xchg
xchg
in
cmp
and
mov
xchg
std
add
in
cmpsb
ljmp
dec
xchg
mov
cld
or
mov
aad
cmp
mov
mov
xchg
mov
cwtl
push
mov
out
sbb
mov
xchg
xor
test
hlt
sbb
push
cmp
data16
dec
cmp
mov
push
push
leave
mov
aaa
std
pop
mov
fiaddl
ja
hlt
cld
sub
mulb
ja
je
aad
xor
outsb
mov
pop
sbb
and
mov
sarl
iret
jno
sbbb
scas
sahf
imul
popf
pop
adc
in
addl
jb
imul
mov
dec
in
inc
adc
dec
pop
scas
pextrw
dec
inc
pusha
mov
stc
int3
cmp
ja
lods
mov
je
insl
add
lods
lahf
pop
add
xchg
sub
pop
stc
push
inc
nopl
in
sbb
in
add
sbb
adc
dec
bound
lret
imul
jmp
sub
test
fwait
test
cmp
jp
pop
scas
outsb
mov
leave
xchg
ret
test
mov
in
sahf
and
inc
and
xor
push
decl
ret
mov
and
jne
mov
xor
repnz
dec
mov
mov
mov
outsb
imul
iret
repz
push
jae
sub
loope
in
stos
jne
int
dec
lods
mov
mov
test
pop
stos
xor
mov
ret
jo
aas
fstl
call
inc
push
scas
adc
push
adc
cmp
jmp
cwtl
shrl
cmp
inc
les
adc
xor
mov
mov
out
jb
jae
es
jae
jo
imul
jecxz
dec
in
add
xor
adc
or
jp
sub
fs
jg
clc
and
sbb
push
push
push
inc
addr16
popa
inc
mov
add
jne
outsl
dec
out
fmuls
jnp
mov
inc
xchg
sarb
sub
ret
push
inc
std
sbb
out
addr16
inc
sub
lret
dec
lds
mov
mov
and
jle
stos
ffree
pop
mov
imul
jns
imul
insb
xor
adc
cmpsb
pop
mov
scas
data16
out
sbb
mov
rclb
leave
add
add
aas
inc
shl
mov
cmpsb
cld
call
jge
pop
lahf
cmp
mov
sahf
nop
loopne
fnstcw
cwtl
sbb
es
popf
xor
nop
xor
ljmp
xor
xchg
sarb
adc
sarl
xor
xor
cltd
into
pusha
aad
jne
in
pop
leave
lds
andl
pushf
pop
loopne
xchg
mov
loopne
data16
cld
fsubrp
enter
jmp
dec
fidivrs
icebp
mov
gs
scas
pop
stos
pop
outsb
shll
das
nop
ret
pusha
adcl
push
xor
mov
cs
jle
ja
and
cs
add
rclb
adc
or
popa
and
lret
or
jne
mov
mov
and
mov
or
int
inc
insb
jl
scas
inc
rclb
dec
ret
fisubrs
xor
inc
stos
pushf
dec
mov
bound
in
gs
insl
xor
and
adc
std
loope
jne
mov
jg
jmp
sti
or
loopne
jge
aaa
xor
ds
or
out
xchg
jp
cmp
xchg
mov
xchg
xor
andnps
add
gs
arpl
aaa
idivb
jmp
lds
xchg
dec
jno
cmpsl
clc
sbb
addr16
sub
out
jnp
fcmovbe
nop
xor
std
outsb
repnz
cli
es
pop
test
je
aam
jae
xchg
jmp
cltd
fs
pop
add
movsl
push
jecxz
in
mov
mov
mov
fistpll
iret
pop
cltd
dec
xchg
mov
pop
jno
pop
aam
push
icebp
into
out
movsl
in
scas
lret
push
pop
aam
mov
fstpt
jecxz
mov
pop
xchg
cwtl
mov
shll
xchg
xchg
cmp
pop
insl
xchg
dec
inc
rolb
shr
sti
dec
lods
push
dec
nop
mov
jecxz
aaa
mov
out
xchg
mov
es
in
mov
bound
ret
in
inc
sbb
ja
sub
mov
loopne
int3
cmp
jge
les
or
cld
and
imul
gs
xor
push
hlt
aas
jae
js
sbb
cmp
pusha
lahf
push
lea
pop
cmp
cmpsb
repz
dec
sbb
popf
stc
out
ret
icebp
inc
add
pop
dec
inc
jmp
dec
aam
xor
emms
xchg
out
inc
mov
xchg
jo
insl
jp
imul
xor
jns
je
xchg
out
out
dec
icebp
cwtl
sub
push
add
and
xchg
xor
adc
jmp
icebp
mov
mov
jg
fadds
cmp
pop
fcomi
mov
mov
test
fnstenv
or
dec
int
insl
cmpsb
cmp
add
je
aad
js
shl
in
or
int3
imul
inc
dec
scas
push
scas
loop
loopne
push
jbe
xor
fisttps
cmp
ja
mov
out
sbb
das
sbb
xor
push
and
out
cs
daa
je
inc
push
sti
dec
sub
call
or
mov
scas
push
loope
cmp
xor
scas
cmp
sbb
sbb
insl
jnp
mov
je
xor
loope
push
mov
xchg
push
call
sti
inc
sahf
push
repz
mov
inc
outsl
sub
pop
int
shrb
lock
idivb
push
jle
add
inc
cld
adc
sub
fsubl
addl
mov
pop
mov
daa
stc
mov
dec
sub
out
mov
xlat
popl
adc
xchg
scas
add
scas
mov
aam
pop
add
push
jg
xchg
repz
sub
or
mov
adc
add
pop
cmpsb
inc
fnsave
in
ss
cmpsl
xlat
iret
mov
lock
pusha
sbb
jnp
nop
in
aam
fadds
cs
xor
sbb
outsl
in
jg
cmp
or
lock
pop
leave
nop
adc
add
cmp
clc
inc
push
loopne
data16
push
icebp
leave
add
push
push
mov
push
loope
and
push
test
lods
les
fimuls
cmpsb
push
scas
jle
incl
dec
push
popf
movsl
cmovg
push
lea
dec
add
stos
jne
scas
mov
rorl
ss
stos
jl
sub
aas
out
mov
mov
xor
pop
aam
sbb
xor
rcll
add
push
push
mov
daa
push
movsb
movsb
andl
iret
mov
adc
xchg
ret
mov
in
into
pusha
adc
push
repnz
es
popa
mov
adc
jne
inc
es
adc
xor
ss
enter
dec
shlb
mov
push
addr16
pop
orb
inc
outsb
lret
jle
push
movsb
repz
std
jge
mov
inc
faddp
inc
mov
xchg
gs
or
cwtl
adc
shll
aad
stos
cmove
xor
enter
fisttpl
dec
xchg
push
pop
dec
loop
push
adcb
inc
and
adc
adc
lret
rcll
out
call
mov
xorl
push
aad
cmp
int
stos
mov
dec
lods
cmp
aad
pop
mov
mov
iret
test
call
scas
sub
sbb
xor
clc
es
xchg
cmp
out
sarl
mov
shll
push
out
and
ljmp
out
lahf
lods
xlat
stos
pop
mov
lret
inc
push
sbb
mov
cltd
addr16
inc
stc
mov
and
sbb
dec
mov
clc
mov
inc
push
inc
mov
cmp
jb
lods
cmp
inc
mov
xor
rcrb
mov
mov
enter
mov
int3
les
dec
mov
lret
call
and
aaa
mov
inc
fisubrs
pop
mov
out
call
jo
ficomps
pop
sbb
arpl
adc
mov
pop
aad
xchg
inc
adc
mov
lcall
sbb
popa
inc
add
rcr
std
sahf
stos
lods
cmp
daa
mov
dec
test
fidivl
xchg
dec
js
pop
adc
data16
mov
lds
xchg
sarl
mov
pop
les
shlb
push
lahf
mov
jbe
jno
pushf
mov
cmp
insb
or
lods
std
inc
xchg
inc
ljmp
fcmovne
je
mov
dec
mov
mov
jno
shrb
xor
mov
and
or
sbb
xchg
xchg
and
idiv
test
xor
dec
ljmp
loope
cmpsl
and
movsb
lret
fwait
je
iret
and
inc
pop
adc
mov
call
outsl
scas
outsb
xchg
sbb
jmp
cld
mov
cmpsb
insl
mov
cmp
scas
jl
stos
or
jp
enter
push
pop
lock
xor
divb
sbb
mov
adc
inc
xchg
cwtl
adc
adc
pop
mov
ret
sbb
mov
pop
inc
into
mov
xor
pop
lret
jmp
in
repz
outsb
ret
ret
mov
and
imul
mov
clc
pop
jno
sbb
das
js
je
mov
repnz
cs
icebp
mov
ffreep
call
dec
xchg
test
gs
mov
xor
daa
sarb
shrl
cmp
cmp
mov
lds
ret
cmpsb
sbb
push
ljmp
cmp
jg
push
test
addb
popa
mov
xchg
sbb
outsl
jmp
sub
dec
and
cmp
and
mov
dec
in
push
pop
mov
call
adc
out
std
les
test
or
mov
pop
test
jmp
shlb
inc
and
ds
ds
aad
or
filds
rcrb
fwait
push
and
adc
sub
mov
sbb
xchg
outsl
lock
outsb
pop
mov
inc
shrl
fs
and
inc
in
hlt
pop
xchg
fidivrs
fcomps
mov
mov
dec
es
sbb
pop
mov
or
adc
adc
testb
bound
xor
fsubp
je
repz
sub
push
cmc
scas
fldcw
mov
scas
jno
cwtl
in
cmp
punpcklbw
adc
hlt
pop
xchg
icebp
adcb
and
andl
cltd
pushf
push
or
cmp
mov
psubusw
xor
pop
jge
test
cmp
push
xlat
scas
inc
ficompl
mov
jle
sbb
sbb
pop
loopne
jnp
lcall
xchg
pop
js
decb
sbb
dec
lret
leave
jnp
add
mov
add
adc
rolb
idivl
fisubrl
push
cmp
dec
add
les
or
jl
sbb
push
adc
iret
loop
dec
push
inc
ret
shlb
lret
jne
test
mov
or
mov
dec
cld
dec
out
dec
push
fdivrl
and
adc
pop
mov
add
mov
or
sbb
notl
out
or
dec
jns
rol
das
movsl
scas
nop
std
jg
in
aad
ret
jb
sahf
push
loope
jnp
popf
sub
cmpsl
xchg
fdivp
add
mov
fdivrs
imul
mov
fisubrs
mov
add
push
xchg
dec
add
or
in
fwait
call
stos
lea
xor
xlat
clc
cmpsb
pop
dec
xchg
daa
vbroadcasti32x2
shlb
pop
push
iret
inc
pop
scas
cmp
and
cmp
ja
movsl
jns
xchg
jo
rol
add
test
mov
jle
cmc
mov
mov
cli
pop
and
xchg
ja
out
out
sar
mov
xor
cmp
push
xchg
xchg
add
xor
mov
outsb
and
pop
jle
daa
leave
scas
repz
jl
into
xchg
inc
mov
dec
sbb
jmp
cld
push
mov
adc
xor
sub
sub
scas
mov
int
adc
dec
dec
mov
ret
and
inc
popa
fistps
scas
das
aaa
push
ljmp
loope
or
xchg
sahf
xchg
inc
ljmp
adc
sub
mov
jp
jp
scas
andl
pop
xchg
test
add
loop
push
jecxz
cwtl
ret
cltd
or
push
cs
mov
jl
das
out
mov
mov
add
sub
stc
dec
mov
push
xor
ss
inc
cltd
into
fisttpll
push
pop
mov
mov
mov
jae
dec
sbb
enter
rcrl
xlat
fstpt
dec
mov
and
xor
mov
out
sarl
addb
lcall
int3
push
mull
cmp
pop
push
jge
and
addl
js
adc
popa
mov
leave
lds
push
enter
loop
shll
cmpsb
adc
ljmp
cmc
lahf
fwait
cmpsb
xchg
sbb
pop
daa
jmp
pop
in
mov
mov
pop
int
loopne
out
jle
cmpb
inc
ficompl
sub
dec
dec
mov
xchg
add
jge
adc
popa
mov
xchg
mov
test
jle
and
add
andl
pop
orl
out
mov
outsb
jp
in
and
adc
clts
lcall
pop
aas
xchg
and
or
pusha
pop
pop
xor
pop
dec
or
bound
inc
push
xchg
add
or
pop
push
sbb
lds
cmc
cmc
lds
cwtl
roll
xor
cmpsb
arpl
xchg
iret
xchg
popa
les
sbb
fcmovbe
adc
iret
fs
lock
push
daa
fdivr
and
jnp
jne
int
push
cmp
xor
les
lock
rcrb
sbb
pusha
shl
add
adc
in
les
scas
psllw
fwait
in
push
in
popf
fisubrl
stc
lcall
sbb
or
cli
adc
inc
cwtl
mov
mov
mov
inc
xchg
je
rclb
or
mov
cld
test
arpl
std
lcall
movsb
pop
pop
mov
scas
dec
dec
or
rcl
shrl
iret
mov
mov
xor
mov
sub
in
or
imul
jmp
outsl
repz
sbb
dec
or
jg
mov
fs
in
inc
arpl
jno
mov
scas
inc
std
mov
jmp
mov
mov
jge
jg
insb
or
lcall
cmp
rclb
xor
adc
xchg
fnstcw
movsb
add
stos
adc
jle
pop
sub
xor
fcoml
loope
lahf
icebp
or
or
xchg
inc
shlb
adcl
ficompl
add
sbb
dec
repnz
push
jnp
push
imul
fidivrs
lods
jl
fs
cmp
adcb
sub
js
mov
das
sbb
leave
mov
cld
cmp
lods
sahf
iret
call
jg
push
subb
data16
outsl
push
inc
repz
mov
cmpsb
jne
mov
inc
mov
adc
pushf
call
sbb
inc
add
jecxz
lret
pushf
scas
out
dec
dec
arpl
insl
insb
xor
fcmovne
flds
dec
rcrl
mov
dec
aaa
push
aas
cwtl
sbb
xchg
pop
out
pushf
cmp
jae
xlat
cmpb
and
mov
push
dec
pop
mov
pop
mov
fdivs
addb
xor
adc
rolb
and
into
stc
lahf
push
mov
xchg
out
pop
pop
gs
bound
popa
mov
xchg
push
ja
pop
repnz
pusha
pop
outsb
scas
pop
test
cmpsl
bswap
fdivrl
movsb
cmp
xor
leave
aad
loop
xchg
mov
addr16
icebp
js
nop
jle
pop
and
xchg
push
rolb
push
mov
mov
loopne
xor
sarb
push
shlb
test
jne
sbb
push
adc
outsl
mov
aas
popa
adc
movsl
into
ret
test
stos
xor
test
sbb
mov
aad
xchg
pusha
not
and
jle
stos
xrelease
es
pop
dec
mov
push
push
popf
fwait
jb
jns
adc
ret
mov
mov
and
std
sub
outsl
jg
iret
xor
in
jle
ja
push
mov
dec
dec
repz
cli
idiv
cmp
jnp
jl
jecxz
test
mov
daa
sbb
stos
mov
sbb
push
mov
mov
push
aaa
lea
fdivl
movsl
inc
inc
mov
cmp
mov
movsb
pusha
loope
cli
pop
les
pop
xchg
loop
inc
xchg
in
insb
fs
mov
sub
call
xchg
fcomp
movsb
out
call
jae
repz
sahf
ret
push
test
mov
push
sbb
lret
inc
mov
and
pop
repz
punpckhwd
and
cltd
pop
mull
jnp
push
sub
lea
push
xor
mov
daa
scas
scas
testl
inc
jg,pt
mov
mov
gs
rcrl
call
mov
jle
and
lods
mov
sub
adc
add
mov
adc
dec
and
rorb
popl
and
or
xor
or
mov
popa
fstpl
rorl
ljmp
js
popf
cmp
adc
pop
pop
mov
fwait
das
inc
jne
mov
rcrl
xchg
mov
pushf
shrb
jo
in
dec
es
fisubs
inc
stc
shrb
sarb
mov
xor
enter
test
mov
pop
mov
pushl
jle
jp
mov
cld
insl
or
xor
leave
test
mov
inc
inc
ja
in
jl
dec
aad
iret
clc
inc
fldenv
std
inc
and
mov
cmp
cmpsb
mov
stos
stc
jecxz
cli
jno
pop
sub
cmp
inc
sbb
rol
sahf
push
inc
jae
nop
or
loop
xchg
and
cmp
std
mov
jecxz
push
push
sbb
dec
sub
mov
lret
mov
cmp
dec
mov
mov
and
test
test
je
push
out
xchg
or
in
or
movsl
cmc
out
nop
push
cli
sub
into
aaa
mov
int3
push
fxch
iret
xor
mov
cmp
stos
ljmp
inc
movsl
push
jae
jl
dec
fstpt
fadds
icebp
pop
mov
daa
push
aaa
ja
lods
ss
push
mov
dec
fwait
cmc
ret
or
stos
jo
scas
push
stos
pop
mov
mov
add
js
cltd
mov
pop
rorb
test
je
sbb
scas
pop
and
push
xchg
push
jbe
scas
mov
test
sbb
cmp
pop
xchg
stc
dec
cmpsl
sub
mov
rorl
jg
movsl
or
in
or
mov
out
lds
add
out
insl
sub
rcpps
pushf
lock
push
jo
stos
fnstsw
xor
xor
stos
jb
and
xor
push
sub
and
xor
aam
aaa
sub
nop
xchg
sahf
dec
in
jmp
testl
pop
mov
xor
mov
loopne
push
lods
jb
into
add
add
test
and
xchg
xorl
lcall
fcmove
js
push
cmp
cmp
in
mov
push
incl
push
add
ret
xlat
pop
sbb
mov
out
ja
dec
call
mov
cmc
xchg
repnz
mov
lret
divl
cmpsl
mov
dec
mov
jne
pop
pop
adc
jle
sub
aas
push
rorb
sub
adc
or
loopne
fidivrl
mov
out
xchg
test
xor
xor
jbe
push
mov
in
dec
jb
inc
stos
jmp
xchg
push
std
inc
push
mov
and
jbe
or
jecxz
cmp
rcl
lock
mov
and
mov
outsb
pop
nop
jbe
in
scas
sub
fxch
std
xchg
orb
mov
ret
pushf
xor
scas
popa
mov
fwait
mov
push
lock
cmp
inc
add
test
rclb
or
xor
jmp
gs
jbe
or
stos
addr16
jne
sub
pop
mov
jno
sbb
test
inc
xchg
in
pop
or
leave
out
testl
dec
dec
push
gs
call
cmp
inc
sub
sarb
mov
cmc
adc
add
cmc
out
sarb
cmpsl
jecxz
stos
cmc
divb
sub
sbb
pop
test
pop
sub
dec
xchg
mov
lret
popl
add
mov
adc
add
imul
mov
mov
sbb
outsl
cwtl
adc
es
push
push
dec
test
les
xlat
pop
mov
fsubs
xchg
lret
mov
fisubs
jbe
lods
out
dec
push
add
cmp
movsl
jne,pn
add
subl
fadds
pop
out
pop
push
insl
pop
sbb
lret
loopne
gs
or
das
lret
push
in
inc
fwait
mov
pop
dec
ret
cmp
hlt
adcl
push
ret
into
leave
pop
push
mov
cli
rcll
out
xor
mov
xor
push
nop
les
pushf
std
sahf
stos
or
cmp
dec
std
inc
fdiv
dec
xor
push
arpl
popf
xor
cwtl
test
or
add
repnz
scas
jecxz
jae
jno
sbb
inc
xor
lods
jno
movsl
cmp
insb
mov
aaa
push
push
jo
hlt
mov
mov
mov
sbb
shrb
mov
inc
icebp
mov
dec
xor
pop
and
jg
ds
adc
pop
add
scas
pop
ss
movsb
test
sub
out
jge
mov
lods
orl
cmp
scas
ljmp
or
std
and
das
sbb
or
subl
negl
popf
pop
scas
pusha
mov
or
jge
adc
leave
and
jge
scas
sbb
jae
repnz
cmp
ds
int3
sahf
dec
cld
cmp
pusha
test
inc
outsb
rolb
rcr
cmp
stos
int3
loope
or
aad
and
repnz
ds
cli
aaa
imul
push
nop
xchg
or
xchg
in
mov
and
xchg
das
inc
add
adc
sbb
data16
outsl
shl
or
mov
enter
mov
mov
insb
nop
cld
mov
pop
push
jbe
aas
hlt
dec
test
mov
cmp
daa
fwait
movb
mov
fldl
sar
sub
xor
or
pusha
jne
inc
push
xchg
pop
push
jle
sub
test
rclb
js
idivb
mov
pop
pusha
daa
fisubs
push
and
lods
xchg
cmp
test
inc
movlps
aad
pop
xchg
int3
das
repz
lds
inc
fdivrs
stc
sbbl
les
inc
daa
lock
or
pushf
mov
jge
insl
and
mov
xchg
sub
aaa
push
or
dec
adc
sub
sahf
sbb
pop
fiadds
js,pn
jmp
leave
ficoms
test
pop
jg
sbb
int3
test
pop
cli
xor
jg
or
pop
sub
and
out
fimuls
vpmadcsswd
push
mov
out
adc
pop
pusha
imul
or
loope
enter
jl
push
adc
add
mov
cwtl
data16
popf
adc
jns
fnstenv
pop
jb
test
dec
adc
push
lea
push
jmp
dec
jbe
out
imul
mov
call
insl
jo
adc
push
leave
xchg
cwtl
mov
push
inc
insl
push
femms
xchg
and
lds
jg
scas
xor
je
mov
mov
or
inc
add
enter
sbb
mov
gs
insl
sti
mov
cmp
or
pop
mov
mov
pusha
js
jno
mov
lcall
addr16
aas
sub
int
lods
inc
insb
in
jbe
ret
testb
bound
jne
fnstsw
add
sub
mov
or
pushf
jge
dec
or
cmp
push
addr16
inc
stc
jae
stos
rol
or
ja
push
jecxz
mov
insl
outsl
iret
xor
insb
cmc
pop
aad
xor
mov
dec
sub
inc
mov
push
xchg
movsb
popl
adc
stos
mov
popf
sti
call
orl
pushf
test
aad
popa
mov
pop
fwait
mov
push
pop
pop
xor
jo
fldz
cltd
outsb
push
mov
pop
jno
jp
add
xor
push
or
sub
adc
sahf
iret
sar
aad
imul
outsl
sbb
ss
into
or
jnp
pushf
jp
out
add
jbe
dec
push
push
movsb
add
add
lods
sub
es
push
and
xor
mov
pop
xchg
ljmp
inc
mov
imul
testb
inc
or
call
add
sub
ret
mov
push
ljmp
pop
aaa
ss
dec
mov
sub
and
push
adc
ret
mov
dec
sti
inc
mov
cmpsl
mov
sbb
mov
in
aam
inc
cltd
testb
lret
ret
aas
pop
stos
inc
incb
ljmp
sub
lods
jge
or
gs
mov
enter
pop
push
xor
xchg
mov
push
pop
xchg
add
dec
or
rclb
out
mov
xchg
xor
or
sbb
add
hlt
fs
lcall
xchg
mov
es
rorb
pushf
xchg
fidivrl
cmp
inc
test
fisttpl
imul
fwait
movsb
sub
pop
inc
add
sti
sbb
xor
fcmovnbe
push
fwait
add
jb
push
das
xchg
data16
iret
cwtl
pop
std
insl
sub
cltd
scas
les
push
push
fcmovb
cmp
adc
pop
push
sbb
inc
lods
iret
mov
out
daa
sahf
iret
pop
lock
cmp
js
sub
push
mov
or
into
hlt
fcmovnu
sbb
inc
xor
cld
rorl
stc
xchg
scas
jle
inc
stos
cwtl
fists
jo
out
cmp
cli
lret
xchg
sub
enter
fidivrs
repz
pop
or
cmc
jb
rcrl
daa
int
fwait
addb
jge
xor
jns
bound
leave
sbb
lock
adc
xchg
adc
sahf
in
jno
insb
leave
mov
imul
push
inc
jmp
add
sbb
jmp
add
imul
sarb
jns
xchg
lea
fidivrl
in
xor
les
negl
shr
bswap
insb
mov
inc
cmpsl
push
pop
push
nop
mov
sub
outsb
outsl
call
into
jp
add
hlt
inc
jecxz
mov
clc
jae
scas
cmp
cmpsb
and
call
test
scas
shrb
pusha
shld
sub
push
scas
jo
push
push
lahf
imul
cli
popa
inc
inc
pop
jo
xchg
cmpsl
pop
lahf
pop
js
sub
xor
dec
out
outsl
dec
pop
cmpb
stc
lock
arpl
xchg
insl
or
aaa
jge
mov
add
adc
or
insb
mov
into
mov
mov
or
cmpsb
push
pop
or
push
or
xchg
das
jmp
int3
movsl
add
xchg
xchg
test
mov
inc
in
repnz
cmp
mov
push
dec
jp
and
mov
cli
fidivs
jnp
cmc
outsl
pusha
nop
add
aam
in
and
xchg
bound
push
pop
jecxz
call
enter
lods
stos
xchg
xor
ret
rolb
cmc
xor
cmp
fstl
inc
fnsave
dec
dec
jne
repnz
nop
mov
fbstp
cmp
data16
xchg
ret
addr16
imul
or
stc
dec
mov
movsb
mov
mov
inc
adc
in
cmpsl
movsl
inc
inc
jmp
test
fildll
pop
jmp
jb
mov
cmp
aaa
inc
pop
je
add
pop
dec
dec
outsl
mov
out
ret
cmpsb
inc
and
call
sarl
mov
gs
mov
mov
aad
adc
insb
pop
adc
mov
into
shl
out
das
mov
mov
clc
mov
into
inc
outsl
ja
and
js
mov
adc
aas
test
shlb
ss
out
loop
add
jg
movsl
push
lret
js
inc
jecxz
ret
jp
xchg
mov
dec
in
push
jmp
and
sub
lock
mov
ds
shrb
push
xor
jno
out
or
outsb
sbb
cmp
aaa
sti
mov
jb
xor
jno
repnz
mov
adc
or
test
cmpsb
les
cmp
mov
gs
or
in
xchg
std
jns
sub
jmp
lahf
fcmovnb
imul
cmp
adc
push
xor
lods
data16
cmp
mov
add
pop
jge
pop
aas
pop
xchg
inc
xchg
ret
and
pusha
mov
popf
pop
inc
push
loope
add
mov
push
pop
jmp
lds
xlat
jno
lods
push
and
test
popf
sub
test
dec
add
mov
ffree
inc
add
sahf
in
push
and
mov
fbld
mov
movsb
cmpsb
loope
xchg
aad
lret
std
jae
pop
push
jns
xchg
repz
lea
and
lfs
fiadds
cli
pushf
push
mov
es
lcall
dec
icebp
push
xchg
shll
scas
xor
orl
and
cmpsb
cmpb
add
cmp
jno
in
packuswb
popf
dec
mov
push
mov
push
ficoms
loopne
dec
sbb
popa
int3
mov
sub
pop
push
mov
or
je
cmp
mov
test
pushf
in
mov
int3
push
in
add
pop
or
lea
in
movsl
adc
cmc
add
rcl
dec
mov
push
and
ja
sahf
mov
ss
sbb
in
leave
or
sub
lods
pop
lcall
xchg
sbb
mov
outsb
test
lcall
cmp
mov
lret
cld
in
pop
add
mov
js
mov
cmp
lret
or
mov
push
into
and
mov
pop
sbb
mov
cltd
sub
add
test
dec
leavew
xor
test
adc
jns
int3
jnp
push
pop
push
and
cmc
rcrl
mov
mov
ja
fstpt
lock
mov
rolb
ret
fmuls
jecxz
mov
das
das
cld
sbb
pop
imul
prefetch
or
gs
out
ljmp
std
inc
cmp
shll
dec
mov
pop
fbstp
popl
mov
aad
and
mov
bound
or
or
cs
stc
pop
nop
or
add
jg
pushf
fnstenv
hlt
or
nop
add
cmpl
sub
rorl
mul
in
lret
mov
and
jae
leave
test
aaa
fdivrs
dec
lcall
xchg
fimuls
mov
ljmp
imul
fstps
jb
adc
push
sahf
dec
shlb
clc
jb
xor
cli
scas
cmp
test
xor
mov
push
cld
jns
mov
mov
mov
jmp
push
ret
sub
insl
mov
or
movsb
cld
pop
fldt
imul
out
inc
mov
cmpsl
pushl
cmc
cltd
test
add
test
lods
lds
jbe
inc
mov
loope
adc
cmp
int3
xor
jge
ljmp
stc
jbe
pop
shlb
ret
xchg
rclb
jecxz
pop
push
and
testl
cli
cmpb
or
push
dec
faddp
hlt
pop
push
inc
outsl
addr16
leave
stc
and
jl
cmp
jns
push
leave
pop
mov
stos
insb
adc
inc
inc
out
stos
andl
pop
out
mov
outsl
pop
adc
fdiv
sub
cmpsb
mov
push
mov
jmp
lret
rorl
pop
xor
mov
add
cmpsb
stos
add
nop
and
mov
insb
mov
imull
insb
adc
xor
cltd
push
push
std
cmp
mov
inc
or
mov
ret
mov
dec
sbb
into
push
push
aaa
and
jg
stos
push
int3
insl
mov
aad
sub
in
xor
pop
or
push
imul
cs
xchg
adc
shlb
loopne
sub
adc
mov
mov
pop
xor
pop
pop
mov
xchg
jmp
xchg
imul
test
lods
dec
cmp
fadds
cmpsb
cli
imul
cld
lock
or
and
clc
cli
std
aad
xchg
dec
xlat
push
or
or
movsb
mov
cmpsb
pop
out
xor
mov
lahf
mov
cmp
bound
xlat
xchg
push
cmp
idiv
inc
lock
lock
cmp
aas
xchg
sub
lea
xchg
inc
mov
stos
or
push
popf
outsb
shrl
pop
pop
ljmp
call
lret
iret
repz
lods
inc
cld
and
mov
mov
mov
mov
in
jmp
iret
inc
sti
add
inc
mov
mov
test
fdivr
into
xchg
mov
test
xor
loope
into
jae
cltd
pop
pusha
sbb
inc
scas
popa
and
mov
or
and
jae
insl
fwait
jo
mov
call
int
xor
inc
mov
arpl
iret
pop
rol
and
inc
ja
sub
lea
xor
fimull
fs
pop
inc
pop
cmpsb
mov
pop
dec
jp
inc
pextrw
add
mov
mov
mov
insb
xchg
pushf
hlt
jno
cli
xchg
mov
into
js
jbe
scas
out
xor
shrl
ret
jg
and
lods
aas
and
inc
mov
je
fs
inc
jmp
dec
push
xor
repz
jns
xor
leave
iret
jg
add
decb
push
cmp
xlat
jmp
xchg
pushf
jmp
les
or
mov
push
cmc
in
dec
add
test
popf
fildl
jae
into
iret
imul
inc
lea
mov
or
repnz
cmp
test
mov
in
in
push
ret
aad
sub
lret
cmp
ljmp
enter
lret
xlat
mov
lods
dec
mov
std
pop
mov
lds
xchg
jle
rcll
push
mov
lcall
pop
xor
lock
fsub
xor
ss
ja
repz
mov
shrl
cld
push
stos
arpl
std
fcomip
xor
nop
inc
bound
enter
movsl
imul
std
xchg
or
sbb
pusha
movsl
sbb
xchg
in
xchg
inc
shl
std
iret
leave
cmc
dec
mov
popa
test
adc
stos
jmp
icebp
dec
cmp
pop
cld
mov
mov
fldt
ds
sbb
and
out
or
fisubl
leave
jno
out
popa
mov
sub
sbb
mov
or
or
pop
pop
lret
ret
cmp
jne
ds
sub
jmp
mov
mov
push
fwait
mov
mov
pop
mov
loopne
pushf
sti
jl
adc
out
cmp
push
mov
ss
mov
xchg
or
xchg
adc
sub
jbe
add
shrb
mov
cs
ret
and
movsl
test
sub
outsl
std
add
adc
mov
out
inc
popf
lahf
insl
int
loopne
loopne
adc
orl
add
jnp
ja
int
scas
inc
push
in
mov
in
sub
push
mov
test
and
adc
push
mov
lret
sti
cmp
xlat
movsb
jno
test
mov
adc
int3
loope
sbb
mov
fidivrl
xor
push
sti
mov
jp
in
sub
es
cmc
push
mov
sti
xlat
mov
sbb
cmp
pop
push
clc
jge
ds
adc
and
lock
out
adc
arpl
jp
insl
pop
dec
aam
imul
addb
xchg
pop
xor
or
movsb
shlb
stos
or
scas
jnp
inc
push
addr16
aad
push
jne
ja
push
and
test
adc
mov
mov
stos
inc
or
sahf
jmp
fsubrl
mov
jp
pop
cmp
lret
ffree
addr16
dec
lds
in
jo
jmp
mov
sbbb
mov
es
pop
ss
xor
mov
fstl
inc
cs
loop
or
nop
cmp
adc
inc
adc
pop
loopne
mov
stos
fs
push
mov
and
ja
lahf
adc
std
pusha
out
sbb
sahf
push
imul
sbb
in
and
cmp
je
sub
mov
push
sahf
push
jno
sbb
mov
mov
repz
cmc
cmpsl
jbe
test
sub
pop
push
jmp
sub
xor
pop
mov
mov
or
sti
out
ret
imull
dec
jg
stos
cmc
jnp
loop
lret
in
out
popf
and
in
jge
sbb
leave
jge
sti
enter
cwtl
mov
fcomi
pusha
idiv
jne
jge
aad
leave
push
fs
shlb
movsl
jno
jmp
mov
sbb
sbb
sbb
fisubs
pop
dec
push
ds
cmp
enter
and
pop
mov
push
jecxz
ljmp
or
xor
rcrb
cmp
std
scas
pop
adc
pop
mov
int3
neg
dec
and
mov
cli
and
out
call
xor
adc
les
jno
pushf
inc
scas
pop
mov
rolb
outsl
aam
stc
xor
aas
push
push
mov
jmp
and
into
dec
jo
insl
mov
mov
lahf
ljmp
rcll
mov
xchg
adc
ds
notb
sub
test
adcb
mov
push
das
sti
xor
adc
outsb
ljmp
cmp
test
jl
cmp
xor
cmp
cmp
aam
pop
movsl
fsubl
mov
xlat
mov
adc
push
xor
or
ss
xchg
ds
pop
add
mov
adc
pop
cmc
int
int
andb
shll
dec
adc
mov
daa
into
cli
jne
fcom
pop
insl
sub
dec
jg
add
mov
or
or
push
sbb
test
or
aaa
sbb
insl
sub
mov
cmp
cmpsl
sbb
out
jmp
jge
sarb
or
ds
fdivs
push
xlat
sar
aas
aad
sbb
hlt
cld
and
xor
call
add
or
cli
adc
push
mov
jle
les
push
popa
inc
imul
adc
or
aam
fisttps
pop
lcall
inc
xchg
outsl
lods
jle
adc
arpl
cmp
xlat
std
addb
lock
mov
addr16
cmc
sbb
ds
push
mov
popf
inc
fcmovbe
pop
outsl
vshufps
dec
sbb
int3
jl
popa
xlat
stos
lcall
ret
cmp
add
lds
fnsave
fstpt
aam
or
mov
lea
cmp
inc
push
scas
insb
movsl
sti
xor
xchg
lret
jl
sbb
in
and
cli
mov
adc
pop
mov
lods
icebp
or
pop
imulb
and
xor
add
insb
add
mov
or
outsb
lret
sbb
out
loope
mov
cmp
dec
fstpl
sub
jl
sbb
and
les
xchg
pop
push
lods
pusha
andl
int
mov
xor
mov
dec
outsl
or
call
jmp
cltd
dec
xchg
jg
inc
mov
fbld
push
shr
adc
pop
xchg
xchg
je
popf
jnp
push
dec
push
and
xchg
pop
sti
divl
sbbb
into
and
sbb
or
mulb
mov
outsl
jnp
cltd
jns
pop
add
es
arpl
in
xor
pop
mov
push
jle
dec
aas
rcl
jecxz
inc
andb
aaa
mov
xor
pop
dec
cs
dec
aad
out
jb
and
dec
orl
lods
aas
cli
outsl
scas
inc
addr16
jge
xor
inc
pop
loope
jmp
xor
leave
rorb
js
lret
es
mov
ds
fs
mov
repz
lret
xchg
mov
and
or
aaa
arpl
pop
push
arpl
push
xchg
cmpsl
adcb
shl
mov
lret
xchg
orl
push
jle
filds
xor
pop
test
dec
pushf
enter
mov
js
es
jecxz
ss
xchg
sub
pop
loop
xorb
fisubs
imul
cwtl
lods
cmp
and
mov
testb
sub
into
movsl
das
jp
pop
push
bound
sbb
mov
sub
mov
jp
jne
fmull
lock
mov
icebp
mov
jns
pop
or
mov
negl
mov
jbe
jne
jb
add
jg
ret
jno
addr16
in
and
add
cmp
ljmp
adc
pop
ret
ja
mov
loop
hlt
sbb
pop
cmpsl
add
mov
dec
adc
dec
inc
aaa
push
mov
cmp
cmp
int3
cmpb
hlt
dec
shr
sahf
mov
fs
movsb
jb
pop
flds
jnp
push
rol
dec
outsl
mov
ljmp
and
rcr
arpl
lods
addr16
jns
bnd
mov
outsl
xchg
scas
cmpsb
or
dec
push
push
xor
mov
ss
fucomip
cmp
inc
lcall
mov
add
mov
sbb
and
dec
push
sbb
xor
addr16
push
add
xlat
xchg
adc
add
insl
notb
repz
mov
js
adc
in
inc
and
scas
push
loopne
rclb
dec
idivb
and
xchg
add
shr
fisubrl
testl
inc
movsb
in
pushf
and
mov
mov
cmp
testb
lock
outsb
ljmp
dec
pop
adc
leave
jecxz
andb
movsb
cmp
mov
jge
aam
in
mov
sbb
pop
jmp
xor
push
dec
imul
xchg
imul
in
jle
in
push
dec
pop
mov
mov
insb
push
mov
push
mov
idivb
push
stc
inc
fdivr
out
pop
insl
add
aad
loopne
in
in
std
stc
cwtl
jo
fmull
leave
ret
sub
push
pop
ss
add
adc
xchg
int
imul
pop
outsb
pop
add
or
dec
mov
dec
adc
xchg
fs
xchg
or
clc
xchg
xor
jge
dec
mov
shlb
jbe
lock
jbe
push
stos
xchg
sub
hlt
dec
cmc
or
fdivs
jmp
enter
and
insl
dec
test
jo
dec
cmp
adcl
movsb
mov
mov
dec
lods
aaa
add
xchg
cmp
pop
xor
adc
pop
adc
xchg
cmpsb
jmp
cs
mov
xor
orb
xor
cmpsb
dec
popa
push
xchg
dec
sbb
and
cmp
popa
shr
adc
sti
push
adc
movsl
adc
mov
or
hlt
pop
sbb
jns
push
sub
in
push
mov
inc
jb
mov
fbstp
fildl
sbb
jp
or
test
adc
or
sub
outsl
mov
addr16
add
or
jge
xor
popf
sbb
shl
gs
add
and
lcall
lds
xchg
out
jmp
in
mov
je
jle
in
mov
out
rclb
out
pop
xchg
pushf
fcmovbe
and
hlt
dec
jnp
das
cwtl
mov
lock
or
js
jge
mov
or
xor
sti
ret
cmp
fdiv
pop
cmp
lahf
sub
rcl
push
aad
push
xor
fldl2t
sbb
or
mov
xchg
mov
sahf
subl
clc
addr16
adc
rol
mov
faddl
push
inc
mov
xchg
mov
std
dec
movsl
into
out
aaa
sti
imul
mov
sub
sbb
lahf
mov
repz
lock
jbe
adc
aaa
or
icebp
fbstp
shl
lret
dec
cli
adc
jmp
jl
or
push
lock
push
ret
xchg
stos
jbe
cmpsl
in
cmc
sub
inc
imul
mov
pop
sub
rolb
or
dec
ret
cltd
mov
sub
xchg
popa
mov
iret
fdivs
and
lahf
add
into
es
cmp
pop
push
sub
icebp
xchg
mov
jle
sub
xor
mov
push
aad
lds
insb
xor
es
sarl
dec
push
xchg
stc
jbe
in
out
push
push
sbb
xlat
popf
pop
into
xchg
jecxz
sub
and
inc
mov
aam
sbb
xor
adc
jmp
sbb
add
push
xchg
jns
fidivl
push
adc
imul
stc
xchg
nop
stc
daa
nop
out
pusha
mov
mov
sbb
lfs
fwait
in
shlb
or
cmpsb
movsb
xchg
lcall
movsb
mov
pop
dec
cld
inc
stos
jmp
aad
stc
pop
lret
push
mov
sti
or
mov
insb
imul
js
cmp
pop
ds
push
ret
push
pop
mov
lret
xchg
test
push
es
mov
cmp
push
outsl
xlat
mov
sti
cmpsl
or
xor
add
cmp
sub
test
aaa
cmp
into
lcall
pop
push
inc
xor
mov
sarb
xor
bnd
outsb
inc
into
sahf
adc
mov
adc
ds
mov
js
push
daa
sti
shlb
adc
out
pushaw
and
add
sub
aad
add
lock
lcall
jl
cwtl
ds
push
loopne
pusha
mov
add
push
mov
mov
hlt
sub
psrlq
mov
pop
add
cs
jmp
cmp
out
add
js
out
sub
pusha
iret
ja
push
adcl
inc
push
jnp
outsl
in
pop
push
lods
xchg
mov
adc
add
bound
mov
lds
jnp
mov
push
in
aas
aam
adc
adc
stc
or
dec
movsb
decb
in
imul
push
adc
sbb
mov
jo
inc
jp,pn
mov
jecxz
sub
mov
lahf
out
int3
adc
dec
dec
int3
mov
andl
cltd
movsb
mov
mov
insb
jne
in
test
int
inc
push
data16
sbb
inc
ficoms
sub
jle
ds
sub
xor
push
in
enter
sbb
cltd
pop
xchg
movsl
cld
lds
cli
lods
dec
jle
xchg
sahf
in
aas
in
pop
pop
sub
stos
cmpsb
test
leave
lods
aam
pushf
mov
dec
fistps
cs
pop
insb
fimuls
or
js
sbb
mov
inc
mov
mov
fstps
ss
mov
in
or
sti
and
mov
jno
ficoml
cmpsl
frstpm(287
jp
or
cmpsb
jnp
int3
xchg
in
or
adc
cld
lock
int
mov
out
pop
aaa
xchg
xchg
cmp
cs
fs
mov
sbb
pushf
mov
and
cmpsl
iret
adc
inc
inc
cli
mov
in
push
in
pop
test
adc
cltd
into
popf
push
es
ja
cmpsl
stos
xor
lahf
mov
or
mov
pop
add
out
xchg
push
psllq
adcl
into
ja
aam
sub
push
jns
sbb
jnp
mov
inc
mov
pop
aaa
sbb
fndisi(8087
int3
lahf
mov
cmpsl
sub
popa
adc
testb
xchg
cmp
and
jle
loopne
lahf
inc
cmp
ja
pop
ja
adc
add
jmp
push
pushf
pop
sar
jp
push
aam
mov
aam
xlat
pop
stc
aas
dec
push
idivb
mov
stc
jb
arpl
mov
cwtl
mov
stc
bound
stc
pop
push
add
rorb
sub
aas
or
sub
sub
pop
jnp
jb
inc
push
cmp
into
repz
jns
arpl
pushf
push
addr16
add
sub
jmp
or
mov
into
mov
cmp
scas
add
mov
jns
dec
push
push
add
arpl
insl
fistps
mov
je
sahf
test
xchg
inc
push
cmp
imul
dec
ds
push
jecxz
xchg
mov
or
cltd
or
pop
ss
xchg
inc
data16
loope
xor
sbb
addr16
lds
bound
add
add
cmp
xor
sbb
dec
stos
jl
hlt
call
shrl
dec
sbb
or
adc
aaa
pop
jo
push
dec
dec
push
es
cmpsb
aaa
subb
inc
mov
sbb
or
push
es
jle
sbb
dec
adc
xchg
sahf
push
cmpsl
andl
mov
rolb
xor
insl
sbb
les
or
mov
lods
cmc
inc
push
push
daa
or
fwait
xchg
pusha
sarb
stos
inc
cmp
leave
cwtl
cmpb
clc
stc
fstps
addr16
aas
mov
mov
aas
js
loope
cmc
shlb
call
int
and
pop
xchg
add
xlat
jno
insb
jge
and
inc
xchg
cwtl
jo
ret
mov
or
and
sahf
jne
mov
jge
mov
shl
lahf
xchg
nop
inc
mov
inc
faddl
fsubs
push
jne
insb
cmp
fcompl
cmc
fwait
pop
xchg
sbb
mov
insl
cli
and
add
ljmp
inc
xchg
mov
sub
push
jl
jne
inc
xchg
pop
in
add
in
jmp
xor
in
jecxz
jae
stc
sarb
ljmp
jmp
icebp
mov
xchg
mov
int3
lret
dec
in
mov
mov
loop
mov
ss
xor
test
cmpsb
jp
fxtract
dec
jo
sbb
mov
push
out
jecxz
xor
loopne
push
shl
lods
sub
gs
pop
loopne
ret
mov
fimull
out
sbb
push
iret
fbld
or
push
cmp
out
adc
add
sub
push
jl
mov
mov
in
push
sbb
or
and
jno
clc
cmp
push
inc
mov
mov
mov
dec
add
add
inc
inc
push
pop
xchg
hlt
lea
fistl
in
shlb
xor
mov
cmc
dec
push
sub
pop
pop
jns
xor
out
in
in
mov
je
push
xchg
cmpsl
sub
cmpb
shrl
jl
hlt
scas
push
mov
repnz
sub
imul
push
ljmp
mov
daa
sub
sbb
mov
cmp
inc
push
hlt
int3
cmpsl
in
aaa
jp
sub
or
or
dec
push
xchg
mov
and
jg
dec
inc
pop
aaa
stc
mov
xchg
out
jne
jns
fldl2t
xor
stos
sub
sti
popf
jl
in
mov
push
aad
or
and
mov
jo
jne
pusha
aas
dec
jl
xchg
loope
leave
lret
cltd
xor
inc
stos
leave
ja
xchg
ss
mov
jl
mov
test
pop
sub
das
sbb
ffree
fmuls
push
insl
cmp
rcll
mov
adc
sub
fdivrs
test
mov
jle
fisubs
mov
jne
enter
inc
jge
sbb
outsb
inc
imul
or
aam
aam
sahf
jl
scas
ljmp
dec
sahf
xorb
cld
push
in
mov
xchg
cli
dec
mov
out
cmc
popa
sbb
and
js
and
jmp
sar
js
test
cmpsl
mov
hlt
shr
xchg
inc
mov
arpl
jle
nop
out
jle
add
or
mov
push
fnstenv
test
push
add
outsb
push
push
popf
clc
fnstsw
push
inc
lods
test
sahf
push
imul
cmpb
das
cli
mov
shrb
std
jl
sbb
into
mov
es
jbe
mov
jle
pop
ret
outsb
jge
sbb
leave
cmpsb
lret
pop
lock
mov
ret
fisubrl
aaa
cld
bound
sbb
cmpsb
xor
jp
out
out
repz
out
sub
dec
dec
mov
andb
sub
pop
daa
pop
adc
sti
sbb
out
pop
sbb
movb
inc
stos
and
dec
xchg
fcoml
pop
out
notl
shl
repz
lcall
push
jmp
fwait
insl
sub
xor
jno
shlb
xor
xor
jae
repz
fcompl
out
sub
punpcklwd
xchg
pop
lds
pop
lods
ficoml
mov
push
inc
aad
orl
cmc
dec
inc
gs
mov
or
cmp
push
aaa
out
and
push
pop
pushf
dec
mov
sti
sysenter
sarl
loope
cmp
arpl
out
hlt
test
mov
fidivrl
jp
ljmp
add
mov
popf
imul
jae
add
or
fistl
movsl
inc
push
pop
xchg
movsl
imul
add
call
fs
cmp
mov
dec
repz
loopne
leavew
jno
xor
push
test
or
mov
lcall
int3
lahf
adc
out
sub
ljmp
mov
or
stc
iret
movb
nop
scas
xchg
lret
arpl
sbb
enter
push
cld
lret
fistps
mov
or
mov
stos
adc
xchg
pop
sub
adc
test
popf
sbb
lock
mov
xchg
push
fsubl
fnstcw
sbb
sub
cli
cld
loop
js
sub
sbb
andl
or
int
sti
in
mov
lea
lods
mov
jle
jecxz
mov
dec
xor
push
fsts
push
ud1
mov
pop
dec
ja
ja
mov
xor
push
or
xchg
ret
push
or
aas
cmp
jp
mov
int
cmp
mov
addb
fadds
out
mov
mov
scas
loope
adc
ret
cmp
icebp
movsl
sub
daa
movsb
or
aad
test
repz
lods
push
or
and
sbb
and
daa
mov
sub
popa
ja
loope
sbb
sbb
jle
ljmp
xchg
int3
pop
xor
push
jbe
jge
push
enter
idiv
arpl
xchg
nop
popf
cmp
daa
mov
cmp
lcall
aad
sub
pusha
outsb
mov
mov
loope
xor
mov
lahf
add
test
dec
inc
xor
nop
and
jns
ds
dec
rclb
mov
bound
addr16
push
adc
xchg
and
clc
push
sbb
das
xchg
inc
dec
mov
jmp
in
push
adcb
fiadds
js
testb
orb
out
adc
mov
adc
jmp
jnp
inc
ja
jno
add
adc
inc
jb
cmp
dec
or
jmp
sahf
insl
test
push
jmp
divb
test
ss
shrl
lahf
enter
xor
ss
loope
mov
jg
jnp
andl
or
sub
xchg
fdivs
xchg
inc
pusha
cmp
popa
xor
mov
shr
sub
ds
mov
insb
scas
inc
mov
pop
scas
inc
fdivr
mov
popa
pop
sub
xchg
xor
cmpsl
dec
mov
bound
dec
or
shlb
fwait
mov
or
nop
inc
cmpsb
mov
adc
pop
fldcw
adc
lea
sub
mov
pop
xchg
or
adcl
incl
mov
pop
mov
xchg
call
das
dec
subb
inc
aad
mov
cli
mov
insb
iret
or
fstps
dec
cmp
jae
fstps
daa
xchg
stos
cwtl
mov
xchg
aaa
out
add
add
ja
daa
jno
cmp
rcll
xchg
push
mov
pop
or
out
stos
sub
in
inc
push
mov
cmp
test
ret
sbb
mov
out
mov
sbb
arpl
je
enter
or
mov
add
and
repnz
jmp
adc
mov
or
lret
mov
movsl
cmp
popa
mov
mov
xor
jb
pop
or
push
or
adc
hlt
or
xor
fdivr
movsb
mov
ret
pop
xor
sti
dec
xchg
test
push
push
loope
imul
pop
fmuls
dec
pop
mov
cs
push
popl
mov
jae
jle
xlat
ffree
cbtw
outsb
dec
dec
jge
jecxz
in
inc
push
xor
shll
or
into
lret
arpl
negl
xor
dec
inc
xor
clc
popa
pushf
xchg
fidivrs
rcrb
hlt
mov
xchg
into
enter
dec
ja
mov
sbb
scas
stc
enter
xor
sarl
xor
ficomps
cmp
jg
adc
clc
jmp
jle
call
ljmp
test
adc
inc
rcrl
sub
ljmp
scas
adc
stc
test
sub
dec
ficoml
dec
adc
or
mov
in
pop
xchg
cs
lods
cmp
pop
movsl
popa
add
push
fistpll
xor
nop
jmp
sbb
sub
dec
cli
add
jne
es
decb
jns
mov
and
jae
fbld
mull
add
cltd
mov
inc
out
mov
push
lods
insb
xchg
loopne
fisubrs
andb
mov
mov
mov
push
out
xchg
mov
arpl
es
int3
sti
rorb
sahf
xchg
dec
sbb
scas
fdiv
push
add
add
fwait
dec
xchg
pop
mov
insl
xchg
daa
sbb
testb
shrb
enter
imul
cli
dec
adc
ss
or
sarb
imul
loope
in
pop
mov
fadd
cmc
mov
fisttpl
leave
or
pop
push
icebp
ja
rcll
dec
cmc
mov
popf
xchg
sub
cmp
shlb
or
adc
arpl
pop
jle
loop
mov
leave
popa
insl
dec
inc
stc
fwait
mov
xchg
jae
test
xchg
movsl
fldenv
push
mov
insb
lods
jp
ret
mov
lods
push
pop
mov
push
pop
loop
xor
mov
or
xor
imul
push
int
fisubrs
cld
mov
sub
cmp
mov
in
inc
pop
cli
loope
shlb
andb
shrl
lahf
pop
aas
idiv
popf
cmp
cltd
jmp
xchg
dec
test
mov
rcrl
jle
lods
sti
insb
insb
push
das
push
lods
decl
mov
popa
push
sarb
cmp
sub
cmp
xchg
insb
js
xchg
xchg
leave
and
mov
or
adc
rcrl
arpl
sub
loop
sbbl
cltd
lds
inc
dec
push
pop
in
sub
adc
insb
es
stos
jmp
fnstcw
nop
cwtl
push
mov
xlat
iret
fildll
mov
add
and
sbb
jecxz
fimull
pop
outsb
adc
xor
outsb
mov
push
loope
and
xchg
aad
xchg
lea
cli
mov
mov
rcr
pop
inc
test
and
cmp
mov
mov
test
repz
testb
mov
jecxz
xchg
dec
test
imul
xchg
push
or
mov
mov
mov
or
cmpl
andl
sbb
loope
rcl
addr16
sti
inc
enter
movsl
and
pop
jo
shll
mov
inc
insl
fs
in
lret
jb
pop
pop
rcr
cs
dec
fsubrs
sahf
jl
add
cmp
cmpsb
sbb
mov
hlt
int
pop
dec
jmp
fcomps
cmpb
into
jo
nop
in
xlat
les
or
jp
add
mov
mov
inc
out
insl
das
xor
mov
push
lods
cmp
mov
adc
jne
lret
test
mov
xchg
dec
jb
and
cmc
popl
nop
ret
scas
inc
sbb
cmpsl
lds
clc
out
add
daa
xor
aam
enter
inc
pop
fadds
sarb
mov
stos
dec
mov
push
inc
fidivl
push
inc
cmp
mov
iret
out
mov
clc
jns
dec
cmp
arpl
insb
movsl
or
mov
push
in
lods
pop
lcall
out
mov
in
rolb
lret
mov
xlat
fsubs
xchg
pop
inc
ret
imul
sub
mov
sub
iret
bound
fucomi
pushl
cmp
pop
pop
or
lock
lods
std
addr16
push
adc
mov
jp
add
stc
int3
repz
dec
aad
pop
pop
jge
adc
xchg
sub
xor
and
sub
negb
xchg
add
std
mov
das
mov
dec
lahf
iret
popa
mov
loop
jo
mov
outsb
out
aas
repz
or
fstps
decb
sbb
je
push
int
fmul
mov
les
mov
xchg
or
ficompl
lds
add
push
or
lsl
gs
mov
cltd
ficompl
and
shrb
push
sub
scas
inc
push
dec
iret
mov
pushf
and
out
out
push
jecxz
push
add
fs
loope
insb
mov
ss
repnz
lock
push
mov
jle
mov
push
adc
enter
clc
mov
testb
lret
jp
add
sub
aas
lcall
shll
xor
adc
fildll
mov
lcall
and
test
xchg
mov
sti
aam
sub
add
pop
mov
adc
mov
aam
inc
adc
jno
test
sbb
and
sbb
xchg
and
cmp
pushf
cmp
lahf
ret
push
cltd
cli
outsb
sub
mov
mov
push
daa
sahf
inc
ss
xor
je
in
xchg
inc
and
mov
mov
mov
xor
lcall
and
call
mov
sbb
popf
jp
adc
xchg
fxch
cwtl
mov
repnz
fwait
popf
pop
xchg
movsl
enter
pop
jo
int
leave
daa
mov
insb
push
add
push
imul
inc
lcall
int3
xchg
mov
inc
stos
dec
xchg
add
shlb
lock
ljmp
or
adc
rclb
int
push
test
into
cmp
lcall
add
hlt
imul
sbb
add
lods
push
imul
mov
out
je
cmp
pop
int
loopne
out
pop
push
mov
adc
in
movsl
mov
and
dec
dec
mov
jne
sbbb
xor
fs
lods
xor
gs
and
imul
adc
add
cmpsb
rcll
xchg
push
push
lret
cs
pop
stos
fistpll
je
shl
dec
lods
ljmp
and
dec
sbb
out
mov
mov
bound
repnz
loopne
and
mov
lods
mov
pop
xchg
xchg
fildl
jnp
sbb
cltd
out
pop
stos
xchg
or
ss
adcl
call
mov
out
imul
mov
pop
add
jl
dec
push
lret
stos
in
stc
mov
mov
mov
pop
mov
std
movsl
inc
and
add
sub
les
ret
xlat
lcall
sti
inc
idivb
aam
and
test
and
jae
cld
data16
dec
int3
data16
inc
ja
mov
jl
je
mulb
add
inc
push
int
xchg
pusha
shl
inc
jge
movsb
aam
jnp
pop
add
push
pushf
testb
and
pop
movsb
dec
je
mov
push
mov
fwait
xorl
add
gs
leave
add
lods
push
mov
cltd
dec
dec
fdivl
cmp
pop
push
pop
addr16
inc
cmp
pop
mov
jge
xchg
xchg
jo
xor
mov
dec
and
push
mov
jae
or
mov
fnsave
mov
sub
sub
cmc
adc
ret
repnz
jp
xchg
cmp
push
std
insb
push
jmp
out
shll
cmp
jns
jo
aad
lds
frstor
ret
cwtl
inc
cmpsb
test
fwait
or
dec
lcall
mov
pop
int
xchg
lods
xchg
pusha
int
jle
repz
push
sub
mov
xor
push
mov
cmp
fs
sbb
mov
out
scas
xor
mov
leave
or
loop
jo
xchg
xchg
mov
xchg
jo
outsl
sbb
iret
mov
mov
and
je
ret
bound
lock
das
adc
push
sbb
stc
fstl
jmp
push
cld
inc
xlat
and
fucomip
out
imul
dec
movsb
loope
inc
mov
and
mov
lcall
outsl
bound
and
in
imul
aaa
loop
in
mov
xor
ljmp
cld
fists
xor
test
xor
inc
add
dec
pop
cli
lock
xchg
sbbb
mov
jne
cmc
push
sub
out
jnp
mov
or
lahf
sub
test
dec
ret
mov
ja
test
and
adc
inc
push
mov
jb
rorb
xchg
cltd
in
fidivl
jp
dec
xor
fistl
mov
fsts
adc
popf
jmp
mov
and
pop
stc
mov
shll
xchg
add
lahf
pop
fwait
fwait
and
cmc
fcoml
cmc
mov
rorb
cmp
xchg
pop
lock
sbbl
push
add
push
ret
test
dec
cs
add
out
add
fwait
xchg
nop
mov
cmpl
mov
fwait
testl
out
shrb
jbe
pusha
jae
sahf
pop
xchg
xchg
es
cmp
adc
mov
or
sub
and
insb
divl
jg
cs
les
dec
sbb
sub
dec
xor
aam
pop
jne
nop
test
clc
lds
xor
sub
mov
sub
scas
enter
push
clc
in
int3
adc
mov
jb
xchg
std
aad
pop
loop
mov
mov
mov
insl
rcl
and
pop
fwait
insl
sub
fstps
sahf
or
dec
pop
outsb
bound
cld
pop
test
mov
adc
outsb
sub
fldenv
push
dec
lea
out
mov
out
mov
sbb
mov
push
rolb
cwtl
and
mov
movsl
push
push
cmp
push
pop
mov
shrl
pop
push
push
into
fs
bound
repz
mov
mov
out
rorb
mov
ja
sbb
iret
mov
rcll
jle
scas
dec
fwait
cld
jbe
push
sub
xlat
sar
aaa
lret
and
cmpsl
mov
dec
jg
iret
mov
inc
aam
in
js
test
outsl
cmp
pop
pop
incb
lods
lret
sub
lea
rcl
out
xor
dec
stos
fnstcw
lock
cmpsb
loop
add
xchg
loopne
mov
mov
fwait
outsl
pop
loopne
mov
and
fstpl
adc
push
xchg
push
jnp
in
jnp
les
xchg
test
data16
out
pop
sahf
add
mov
testl
and
xchg
mov
or
xchg
into
adc
mov
mov
mov
mov
adcl
test
icebp
and
imul
loope
rclb
jnp
jecxz
inc
or
negb
or
inc
ficomps
loope
cmp
sahf
add
lret
cvtps2pi
sub
jns
cld
enter
xorb
xor
sbb
xor
rorl
adc
mov
mov
int
mov
jmp
lods
imul
flds
hlt
out
dec
adcl
mov
adc
lods
pop
in
xchg
aaa
pop
fnsave
rcrb
fstpt
out
lock
xchg
push
aam
test
cs
mov
push
dec
sub
iret
jl
sub
inc
mov
sarb
sti
scas
dec
imul
inc
and
xchg
fstpl
cmp
pop
adc
push
stos
loopne
sbb
mov
pushf
ss
or
scas
adc
fdivrl
or
cwtl
push
lret
or
xor
mov
jbe
pop
cmpsb
mov
test
shlb
out
cmc
in
push
mov
stos
adc
mov
dec
adc
std
mov
cmc
xor
mov
xor
add
jp
lea
inc
dec
sbb
aam
jg
mov
xlat
adc
cmpb
iret
orb
mov
clc
and
movb
mov
xor
sbb
cltd
push
or
les
mov
push
clc
into
inc
mov
pop
movsw
loope
aad
mov
roll
rcrl
test
outsl
inc
jno
mov
imul
sbb
bound
clc
gs
aam
mov
std
ljmp
mov
and
mov
sub
fmuls
pop
add
sub
inc
pop
lock
xorb
test
add
xchg
mov
jg
mov
out
fwait
andl
out
loope
xor
int3
cmpsb
pop
mov
xor
in
fnstcw
mov
jbe
and
jge
loope
mov
pop
xlat
ja
push
aad
ja
pop
aaa
neg
add
into
pop
stos
cmpsb
push
xchg
xchg
xor
sub
fiaddl
out
shlb
insl
mov
add
lcall
push
cmp
mov
jo
mov
in
dec
mov
dec
pop
movl
aas
or
mov
inc
test
fsubl
jl
addr16
ss
or
loop
int3
lcall
mov
jb
lret
xchg
and
push
push
jp
xchg
jo
cltd
lods
test
push
rcrl
repnz
xchg
cmpsb
aad
imul
mov
pop
out
pusha
inc
gs
scas
push
adc
mov
pop
xor
sub
mov
xchg
inc
jb
ret
lret
lret
scas
add
mov
cmp
lods
inc
inc
lcall
mov
notb
xor
xchg
cmp
cld
mov
cld
repz
adc
or
jmp
scas
mov
cmp
dec
mov
call
dec
jl
mov
test
adc
fs
mov
fisubrl
xchg
cmp
and
or
call
xchg
insb
lret
ja
stos
cli
mov
les
iret
pop
add
in
add
sarb
pushf
xchg
fwait
out
stc
sbb
addr16
lcall
scas
insl
nop
into
sbb
cmp
xlat
jae
outsb
push
test
lods
iret
jl
sti
mov
iret
push
int
rorl
fdivrs
sub
push
xlat
pop
push
or
inc
out
insb
mov
test
int
out
mov
fiadds
push
inc
lcall
xchg
mov
dec
xchg
iret
stos
test
scas
ffreep
dec
icebp
gs
adc
mov
sub
mov
popf
bound
push
cmp
lea
mov
orl
cmpsl
cmp
les
dec
out
adc
xor
mov
sarl
int
mov
mov
jle
xchg
and
xlat
in
loopne
inc
lods
cmp
sub
fwait
inc
bnd
push
pop
or
mov
jns
je
gs
movsl
jnp
sbbl
cli
inc
add
mov
dec
sahf
ds
mov
mov
mov
jae
pop
push
and
data16
out
mov
cli
mov
mov
ror
jl
lods
xor
pushf
movsb
and
out
call
mov
cwtl
mov
sarl
outsl
jbe
and
cwtl
in
jp
jmp
cmp
cmp
xchg
jecxz
test
ljmp
sub
add
lods
sbb
jl
incb
ja
inc
and
cwtl
jge
mov
mov
mov
jno
inc
or
call
mov
sbb
lret
jp
push
inc
jle
scas
sbb
pop
jae
loopne
enter
lea
cwtl
arpl
and
cmpsb
push
insl
lahf
rclb
lds
sub
pushf
sbb
fcoms
cmp
out
add
movsb
dec
mov
xor
test
xchg
movsl
dec
mov
pushf
in
fmul
xchg
cmp
push
popa
jmp
iret
leave
jb
jge
dec
out
push
stos
xor
ljmp
mov
movsl
push
inc
sbb
les
sbb
lods
fwait
stc
dec
inc
das
and
push
jl
out
mov
mov
insb
xor
add
mov
xorb
pop
mov
add
xchg
push
sub
adc
jecxz
add
push
icebp
lods
scas
subl
jns
mov
out
dec
and
leave
outsb
out
es
pop
test
nop
adc
mov
aad
xorl
push
subb
jbe
in
dec
jle
aas
sbb
adc
cmpsb
push
stos
test
jb
inc
inc
mov
fyl2xp1
or
into
insl
out
cmpsb
xchg
cli
mov
gs
mov
rorb
mov
mov
je
inc
adc
call
lods
adc
sarb
and
mov
and
leave
mov
add
cmp
jns
jle,pt
out
sub
or
cmpsb
xchg
movsb
ret
mov
divl
test
mov
lock
push
add
push
filds
mov
rcll
and
sti
loop
movsb
mov
xchg
or
xor
sub
mov
jb
aad
aaa
sbb
mov
movsb
inc
push
ds
fwait
mull
rdpmc
cmp
push
enter
loop
ljmp
xor
dec
pop
mov
cli
xchg
cwtl
mov
push
cs
pop
pop
fucomi
into
fbstp
and
std
sbbl
test
shl
jne
gs
fs
jnp
jbe
sarl
mov
push
push
push
sub
mov
icebp
mov
fmuls
adc
cltd
shll
pop
dec
dec
ret
rolb
dec
xchg
inc
mov
pop
imul
cmpsb
aaa
and
lea
and
lcall
mov
enter
or
inc
data16
dec
jbe
mov
loope
fistpll
rclb
mov
sti
and
push
sub
lahf
cli
sbb
test
pop
mov
daa
xor
lods
push
enter
pop
aaa
cmp
shrb
fmuls
mov
andl
adc
jle
insb
rolb
dec
push
fstpt
lods
fdivr
push
ds
mov
cmc
mov
mov
stc
out
mov
mov
das
jmp
nop
sbb
dec
cmp
jns
scas
repz
rol
or
pop
out
sub
push
jo
cmp
fwait
mov
negb
adc
insb
and
repz
lcall
push
mov
or
inc
xchg
jno
add
ret
sub
ja
es
sbb
ja
outsb
lea
pop
gs
inc
jmp
cmc
repz
xor
stc
adc
sub
sbb
push
sbb
sbb
add
leave
dec
jge
inc
ret
sbb
mov
in
xor
add
or
jge
das
scas
mov
iret
mov
cmp
pop
sbb
int3
xchg
outsb
mov
lahf
xor
loop
js
mov
xchg
mov
adc
mov
lahf
jo
xlat
sti
xchg
fisubrl
mov
popa
jbe
pop
loope
add
add
rclb
fimuls
mov
jne
cmp
loopne
in
adc
addr16
out
cld
mov
imul
mov
in
bound
xchg
dec
outsl
jge
aaa
std
push
cmp
inc
ret
inc
leave
out
xor
mov
je
popfw
ret
dec
and
and
lods
nop
jb
out
mov
add
dec
imul
sub
or
mov
jge
sbb
cli
enter
mov
adc
inc
lods
mov
repnz
sbb
mov
dec
popa
push
jbe
fmul
mov
out
pushf
call
sarb
iret
and
sub
or
sub
mov
xor
pusha
sti
sbb
movsb
adc
fdivl
or
out
mov
inc
inc
jno
mov
dec
jmp
push
notl
movsl
call
stos
test
loopne
fs
rorl
jg
test
arpl
icebp
ljmp
inc
repz
fcompl
xor
push
inc
push
aad
xor
mov
rolb
shll
fsubl
das
adc
adc
mov
stos
jg
dec
rolb
dec
adcl
cld
les
mov
sub
fiaddl
rorb
push
je
adc
add
fs
mov
jmp
jo
add
inc
push
js
and
lret
mov
pop
leave
inc
inc
sbb
pop
jnp
pop
dec
pop
jp
inc
xor
jmp
mov
xor
aaa
xchg
mov
out
jg
and
xchg
push
xor
sbb
cmp
mov
jae
int3
out
cmp
sbb
ret
xor
adc
subb
push
mov
ret
cmc
test
lcall
mov
pop
lea
inc
add
mov
cld
xor
je,pt
adc
mov
lods
xchg
insb
cmp
stos
add
xor
fnstcw
push
add
outsl
shrl
cld
stos
inc
jo
fst
sbb
adc
dec
icebp
jns
mov
enter
daa
repnz
movsb
stos
mov
or
cwtl
movsb
cmp
pop
aas
add
mov
mov
in
sbb
mov
mov
loope
or
lea
or
shlb
add
gs
rcrb
and
std
push
pop
jnp
and
shll
addr16
push
inc
insb
fsubrs
lods
ljmp
xchg
rclb
jg
xor
mov
test
pop
pop
lds
sahf
xchg
jnp
adc
mov
mov
push
int
add
mov
ljmp
add
pop
pusha
clc
mov
inc
and
dec
jnp
cmc
xor
xchg
and
jnp
and
fxch
f2xm1
dec
loope
jo
aad
lea
cld
add
pop
outsb
sti
mov
push
out
xor
insb
or
stos
test
mov
iret
push
arpl
cmpsl
rdpmc
xor
js
and
sub
jbe
gs
outsb
push
pop
dec
shrb
push
mov
loopne
lock
xchg
xor
nop
sbb
mov
mov
and
xlat
in
imul
mov
xlat
cwtl
lret
rclb
mov
ljmp
sbb
inc
jo
fs
rol
stos
pop
push
sub
bound
stos
int3
and
pop
inc
fwait
inc
and
xlat
mov
dec
call
fcoml
inc
pop
and
test
inc
push
cmp
xor
insl
mov
push
adc
sahf
imul
rorl
sub
cld
insl
mov
pushf
sbb
mov
fs
lods
into
adc
stc
lea
imulb
test
adc
repz
int3
mov
addb
xchg
les
sbb
and
mov
and
imul
sbb
pop
out
push
mov
add
jle
enter
insl
fwait
sub
jmp
roll
je
sbb
add
or
loopne
scas
sub
bound
arpl
scas
jns
inc
push
cmpb
dec
je
andb
mov
jge
xchg
insb
notb
adc
fcmovb
push
jo
cmp
or
mov
jl
cmpsl
pop
loopne
sbb
out
loopne
in
and
ret
pop
adc
sub
dec
daa
mov
mov
jmp
sbb
lret
filds
jb
push
sub
xchg
adc
clc
add
add
dec
loopne
mov
add
aaa
ljmp
call
mov
fstl
pusha
mov
pop
mov
mov
xchg
imul
sub
and
into
sahf
fs
lds
adc
pop
mov
adc
sbb
jns
les
cld
and
cmp
mov
pop
mov
iret
push
movsb
xorl
jne
clc
mov
cs
xor
or
scas
incl
aaa
aas
pop
add
push
je
inc
push
shlb
outsl
mov
ret
sbb
jecxz
pop
mov
addl
and
adc
stos
aam
mov
adc
shl
push
lods
sti
insb
mov
fistpll
test
sti
mov
jmp
add
mov
js
pop
sahf
dec
pop
and
in
scas
stc
sub
xchg
mov
test
insl
mov
cmp
adc
push
mov
js
lret
clc
cmp
negb
stos
aam
cmpsl
jl
call
cmp
sbb
aaa
mov
inc
enter
ds
jns
dec
push
icebp
or
inc
xchg
inc
or
lret
sbb
daa
hlt
fidivrl
fildl
lahf
cmpsb
mov
sbb
sahf
mov
xor
jo
jno
rclb
fimuls
jns
test
jp
mov
push
mov
rcrl
jge
xchg
mov
stc
push
xlat
sbb
lods
push
das
mov
scas
in
add
or
jno
shr
jecxz
flds
sbb
fs
dec
xchg
or
out
adc
xchg
out
es
xlat
scas
lret
ja
push
frstor
sbb
outsb
lea
xchg
repz
adc
mov
cmp
mov
jb
js
lods
cmc
push
outsb
lods
xchg
roll
cmp
outsl
push
fisubrl
lds
lods
ds
cmp
mov
add
imul
cmpsb
call
sbb
lcall
mov
cltd
mov
or
adc
inc
and
punpckhdq
repz
push
sbb
cmpsl
ja
mov
inc
loopne
int3
push
test
push
push
pop
rolb
mov
inc
loope
scas
and
jb
es
pop
ds
jmp
mov
ljmp
scas
shll
and
push
enter
outsl
cmc
out
sbb
movsb
mov
scas
dec
nop
add
fwait
mov
sbb
jmp
pop
jno
adc
xor
jno
aas
inc
out
aam
push
jge
rcrl
fs
call
popf
daa
fbld
jecxz
test
dec
leave
mov
jnp
lods
push
xchg
sub
pop
lods
mov
enter
movsl
or
inc
gs
js
daa
mov
adc
aam
testb
mov
or
rcrb
jle
aad
push
sbb
sub
je
sbb
aad
out
mov
mov
mov
cmpl
or
inc
jecxz
mov
xchg
add
loope
mov
test
lahf
pop
inc
mov
stos
sbbb
cmp
sbb
fisubrl
iret
stos
adc
dec
arpl
imul
push
mov
imull
xchg
daa
inc
adc
out
loopne
and
sub
cli
xchg
jne
push
pop
pop
cmpsl
daa
ret
sbb
cmp
and
in
add
pop
and
lret
add
sbb
arpl
popf
int3
gs
fldenv
ret
push
out
imul
addr16
mov
les
lret
add
scas
mov
decb
sub
mov
mov
enter
sbb
cmpsl
cs
add
scas
push
dec
mov
cmp
push
nop
mov
jecxz
movsl
and
jle
jecxz
inc
js
inc
and
pop
mov
mov
loopne
and
xor
test
push
mov
inc
dec
pop
cwtl
dec
push
ret
inc
fcoml
mov
sete
lods
mov
cs
shrl
stos
mov
push
mov
in
add
cmp
jl
aad
adcl
push
idivl
xlat
js
int3
ret
mov
fbstp
out
cmp
scas
testl
mov
arpl
inc
jl
hlt
mov
jmp
adc
fcoml
push
mov
lahf
je
dec
xor
in
lret
inc
xor
push
sub
push
mov
mov
movsb
mov
rcll
jmp
mov
js
mov
sub
rcr
imul
stos
mov
iret
aas
adc
sub
ss
jecxz
mov
mov
xor
es
gs
jmp
sbb
and
sbb
jno
dec
and
movzbl
sahf
jge
lods
pop
dec
add
xchg
cltd
push
movl
adc
enter
jle
push
rcl
mov
fiaddl
and
sub
push
pop
mov
jl
stc
dec
lock
cmpsl
cmpsb
push
xchg
arpl
dec
pop
xchg
cmp
mov
outsb
call
sahf
pop
sub
xor
dec
les
sarl
add
in
shlb
pop
fisttpl
sub
cmp
inc
call
or
mov
bound
shlb
sub
rcll
cltd
mov
cs
fisttps
push
mov
mov
addr16
and
lret
xchg
add
cmp
sarb
sub
shlb
hlt
push
adc
movsb
leave
or
jnp
repnz
xor
dec
lahf
clc
and
into
out
inc
lock
out
push
lock
sub
jp
aas
jo
popa
sti
rclb
idivl
outsb
ds
dec
cmp
mov
icebp
or
and
pusha
js
fidivs
mov
movsb
sub
sub
icebp
inc
mov
xchg
fmul
vmptrld
mov
or
sbb
hlt
ds
push
out
jb
in
inc
jp
jb
push
pop
jle
movsb
roll
or
in
jb
or
jb
sub
mov
les
dec
arpl
lahf
push
bnd
pop
mov
adc
xchg
lock
mov
fnstcw
pusha
lock
sbb
or
xor
or
ficomps
lcall
or
dec
lods
xor
mov
pusha
out
mov
int
in
or
repz
pop
popf
fwait
test
xchg
into
cmp
pusha
xor
imul
xchg
data16
popa
mov
fdivs
dec
or
into
add
aas
dec
sar
lcall
mov
and
adc
nop
jns
sbb
mov
xchg
or
jo
scas
push
adc
rcll
push
mov
sbbl
popa
jecxz
cmp
mov
cmp
icebp
addr16
mov
fdivrl
int3
mov
shl
lods
aad
inc
clc
mov
pop
pop
sub
je
dec
pop
aad
inc
popa
push
sub
arpl
inc
ja
enter
dec
outsl
add
xor
pusha
cmp
insl
mov
push
mov
adc
ret
or
ret
dec
mov
xor
jecxz
mov
sbb
lcall
cmp
pop
movsl
je
insb
jae
rcrl
xlat
add
mov
adc
mov
std
sbb
fs
xor
mov
pushf
xchg
sub
cmp
in
push
xor
and
jae
shll
jecxz
insl
rclb
cs
aaa
mov
add
mov
in
ret
in
je
mov
jbe
push
rcrl
xchg
adc
std
mov
out
in
out
cmp
sub
or
jnp
clc
test
jl
cmp
push
pop
fstps
iret
roll
test
push
dec
mov
mov
or
dec
cmc
push
push
cmpsb
xlat
or
loope
enter
inc
ljmp
stc
xor
fwait
or
mov
jecxz
adc
push
and
pushf
inc
or
adc
xchg
outsl
fwait
xchg
in
lcall
mov
fisttps
pop
insb
and
push
inc
out
or
mov
lcall
xchg
rorb
decb
out
mov
pop
fs
fcompl
adc
cmp
push
leave
mov
loope
mov
push
std
jb
js
dec
mov
adc
mov
imul
imul
mov
push
sbb
movsl
aaa
out
lods
sbb
pop
mov
add
inc
imul
jp
mul
dec
xchg
pop
lret
pop
sub
mov
or
aaa
inc
incb
fistpll
mov
lods
hlt
std
idivl
mov
cmp
jg
in
ret
lea
dec
popf
bound
pminub
fdivl
mov
sahf
add
jns
adc
out
shlb
and
and
repz
mov
xchg
pop
xor
sub
aam
xchg
shlb
stos
jge
sbb
loop
out
mov
mov
outsb
rcll
imull
jl
cmc
adc
mov
dec
incb
sub
add
das
int3
int
pop
cltd
mov
scas
ret
daa
jmp
lcall
lds
push
jnp
and
push
das
orb
js
lock
mov
pop
sub
push
xor
inc
sub
lods
jp
push
jl
jb
mov
xor
fmull
or
add
xchg
call
mov
cltd
ret
repnz
nop
arpl
pushf
test
push
or
mov
ja
or
int3
inc
rep
sbb
mov
push
push
shrb
shr
mov
inc
ficomps
stos
pop
into
jbe
fnstsw
insb
test
adc
dec
xor
movsb
sub
mov
stos
ds
mov
jmp
sarl
hlt
push
es
into
xchg
stc
sbb
add
push
sbb
mov
outsb
mov
fsubr
stos
jecxz
pop
inc
xchg
rorl
sub
push
inc
mov
mov
pop
es
jns
rcrb
out
adc
mov
mull
jecxz
jns
push
inc
or
jp
cmc
mov
shlb
dec
inc
daa
dec
cmp
out
stc
and
adc
mov
add
nop
or
jno
mov
imulb
fcomip
arpl
lret
xchg
xor
je
test
lcall
pushf
push
sbb
mov
cmpsb
and
pop
mov
loop
jmp
in
add
jae
nop
imul
cmpsl
push
shlb
shrl
mov
bnd
add
sbb
bound
mov
dec
sarb
or
setp
and
clc
sub
add
cwtl
xor
scas
sar
push
aas
in
xor
add
jae
jle
test
or
xlat
adc
pop
add
mov
and
jl
mov
imul
cmp
inc
push
jmp
lds
lret
les
pusha
icebp
or
xor
dec
jbe
in
push
cmp
pop
mov
jnp
mov
jecxz
movb
or
pop
gs
lea
andb
xor
adcb
pushf
movsb
repnz
dec
xchg
pop
and
enter
or
pop
outsl
fwait
xchg
mov
sbb
outsb
xor
int3
aaa
xor
dec
or
jg
xchg
mov
sbb
test
fwait
cld
mov
repnz
xor
cmpb
add
movsl
bound
hlt
pop
lret
add
in
and
jle
jns
xor
mov
or
inc
sahf
add
adc
jb
adc
xchg
inc
inc
gs
popa
push
xor
psrld
lock
lock
mov
cmp
fsts
xor
xchg
jbe
jbe
fidivl
or
cmp
jns
ja
cli
or
sahf
sbb
sbb
push
lret
pop
jg
mov
bound
sub
xor
nop
xor
add
adc
xchg
add
in
xchg
nop
scas
push
inc
cmp
jbe
in
adc
push
pop
push
dec
sub
push
loope
jns
mov
xor
sahf
cld
call
adc
movsb
fimuls
inc
ja
dec
sub
push
xor
mov
xlat
cmpsb
mov
lcall
orl
rorl
aam
pusha
flds
or
and
mov
add
fldcw
std
popl
and
hlt
retw
mov
mov
stc
sbb
add
std
push
sbbl
aaa
std
and
mov
sub
subl
cmpsl
jl
mov
out
add
adc
push
in
clc
adc
lock
sub
hlt
scas
loope
stos
or
cs
lret
popf
mov
mov
test
sahf
add
adc
popf
dec
push
cli
out
push
or
jecxz
lods
loop
cs
and
pop
jle
mov
push
mov
cmpsb
xor
je
inc
inc
mov
mov
mov
stos
fildll
aam
xchg
outsb
mov
jecxz
or
cmp
sbb
pusha
dec
dec
out
orl
int3
push
jnp
add
pop
dec
mov
ret
in
js
iret
jmp
push
movsl
mov
add
adc
jmp
hlt
out
popa
jl
inc
xchg
movsb
mov
xor
adc
arpl
iret
xchg
jmp
lock
cmp
mov
cmp
mov
popa
mov
in
pop
das
lret
pop
fistl
stc
lods
adc
mov
and
das
jmp
lds
pop
imul
cmp
adc
adc
bnd
or
pop
inc
mov
mov
std
mov
nop
dec
leave
insl
cltd
cmp
and
xor
imulb
shrb
aam
fs
jne
pop
cmpl
rcl
add
icebp
mov
xchg
pop
xchg
or
fcmovu
xchg
inc
mov
ljmp
fcmovbe
or
inc
jne
lret
test
dec
ret
out
push
daa
add
cmp
shrb
xor
nop
fisttpll
adc
dec
pop
call
push
xchg
insl
pop
xchg
mov
test
icebp
mov
adc
out
outsb
ljmp
jmp
test
xor
adc
sbb
repnz
sub
mov
add
adc
xchg
lock
jbe
mov
dec
pop
jno
bound
aad
mov
fs
mov
jp
in
in
push
int3
mov
push
cmp
mov
jae
popa
mov
fidivl
pop
hlt
or
testb
adc
repnz
sub
rcrb
roll
pop
mov
fiadds
ss
mov
xlat
mov
push
or
shr
lea
pop
aaa
dec
rorl
dec
vmovupd
add
insb
add
mov
fldcw
add
cltd
cmp
test
add
sub
aaa
and
scas
mov
and
jae
lds
xchg
scas
sub
lods
and
aad
sub
das
in
scas
lods
jo
jmp
fadds
xchg
xor
mov
mov
cmc
sub
inc
sahf
ja
push
rcrl
xor
jnp
iret
iret
push
sub
ds
clc
mov
ficoml
movsb
pop
js
addb
and
cmpsl
addb
dec
sbb
xchg
xchg
mov
stos
mov
and
push
sarb
test
or
ljmp
jbe
bound
mov
das
sbb
inc
push
jno
jbe
adc
and
jae
cltd
fisttpll
xor
mov
add
cmp
mov
shrl
sahf
roll
mov
addr16
cmp
cmp
xorl
or
adc
and
push
sub
cmp
mov
and
mov
cmp
daa
imul
mov
jo
pop
pop
subb
test
add
repnz
mov
les
and
jmp
shrl
mov
rol
insb
inc
cmp
mov
push
in
xchg
xor
jmp
adc
fisubl
hlt
outsb
or
call
pop
sbb
cmpsb
or
test
mov
roll
sub
adc
gs
cmp
scas
scas
cmp
or
inc
popf
imulb
sub
imul
mov
dec
push
fldenv
xchg
add
xor
les
cli
mov
mov
daa
loop
outsl
sub
xchg
xchg
fcmovnu
subl
and
cli
mov
mov
cmp
xor
adc
int3
aam
sarb
add
mov
popf
jg
and
imul
xor
stc
test
cmpsb
inc
test
mov
cltd
mov
scas
pop
orl
lock
std
adc
jae
lcall
cmpsb
or
mov
push
add
jmp
push
inc
inc
lea
cmp
push
pop
xchg
sbb
dec
rcl
dec
aaa
adc
dec
rol
jae
or
aas
out
push
push
xor
mov
ljmp
fldenv
push
inc
scas
loopne
stos
int
imul
cs
and
dec
adc
sbb
pop
add
and
sbb
mov
adc
and
int3
xor
xor
in
mov
cmp
in
mov
popf
pop
aam
xchg
fs
xor
mov
iret
test
push
je
in
xor
add
pop
lods
mov
lcall
mov
inc
cmp
incb
pop
add
addr16
add
mov
jp
lret
out
scas
push
xor
fcom
xorl
cs
cmp
aaa
sub
dec
mov
dec
int3
out
xchg
xchg
add
roll
xchg
mov
xchg
push
add
mov
pusha
xlat
int
or
jns
out
filds
mov
push
push
xchg
mul
mov
dec
mov
fildl
jmp
fmuls
adc
dec
xchg
push
out
fnsave
fstpt
or
mov
adc
and
js
inc
in
das
hlt
loop
mov
cwtl
xor
loop
out
loope
inc
aaa
aad
cmc
mov
scas
pushf
pop
xchg
sarb
in
aas
adc
mov
leave
jno
sub
jne
or
sahf
push
mov
push
cmp
sete
int
mov
aam
push
add
cmc
dec
test
push
ljmp
adc
mov
test
lret
jnp
push
ret
pop
jno
fsub
aaa
dec
loope
cmp
mov
ficoml
into
setle
adc
inc
jle
addr16
fisubs
inc
cmpsl
addr16
dec
movl
sub
push
push
addr16
lods
sahf
inc
pop
insl
dec
addl
enter
hlt
pushf
mov
push
mov
cli
cmc
in
or
pop
dec
pop
ret
jnp
cmp
adc
loopne
in
ret
shlb
data16
sub
push
daa
aas
out
sti
add
mov
repnz
cli
mov
ds
bnd
push
inc
call
stos
mov
or
lcall
out
popf
imul
xor
test
cmp
enter
push
dec
sbb
pop
mov
mov
jbe
dec
cmpsl
and
js
int3
cs
mov
popf
cmp
loope
xchg
inc
and
cmc
mov
cmpb
daa
repz
inc
push
in
into
insb
out
fmuls
mov
and
pop
std
sbb
xorb
lods
mov
add
iret
ficoms
fs
xor
adc
nop
xor
lahf
push
into
sub
xchg
jbe
mov
mov
add
xlat
or
pop
ds
jno
sbb
and
mov
xchg
mov
lds
arpl
ret
dec
movsl
xor
add
scas
fcomps
jmp
sti
adc
mov
cmpsb
push
mov
lods
jge
rclb
mov
xchg
xor
sbb
pusha
pushf
push
in
arpl
fisubs
leave
leave
and
gs
scas
fwait
inc
aas
dec
aaa
leave
sbb
cmp
sub
in
dec
in
and
inc
cmp
mov
stc
sub
pop
and
pop
push
mov
shll
inc
inc
pop
sub
shrl
sbb
jns
mov
mov
xor
xchg
xchg
mov
mov
cs
in
scas
or
sbb
shl
inc
or
rorl
mov
sbb
dec
pop
std
cmpsb
scas
mov
ficoml
dec
subl
cwtl
mov
pushf
mov
jge
negb
mov
cmpsl
mov
mov
cwtl
inc
sbb
or
cmp
lods
xchg
mov
xor
pop
adcl
imul
gs
inc
jns
in
cmc
or
lea
dec
fistps
sbb
repz
adc
sbb
insb
les
cmpsl
push
test
jo
pop
ja
or
xor
jae
es
inc
popa
into
xor
roll
pop
roll
imul
jb
xchg
test
rcr
test
fistps
sti
and
mov
sub
pop
mov
xchg
lds
pop
subb
push
ja
in
loope,pt
imul
leave
dec
mov
pop
mov
adc
fincstp
les
inc
mov
test
aad
push
outsl
or
ret
cwtl
mov
or
dec
arpl
orl
cmp
arpl
lods
mov
fisubrs
sbb
and
pop
pusha
and
in
adc
pushf
add
flds
sbb
add
fisubs
ds
and
test
sub
gs
ljmp
sbb
pop
cmp
rcl
mov
push
cltd
cs
adc
push
cwtl
dec
inc
jle
xchg
pop
mov
inc
roll
mov
cmpsl
filds
sbb
and
into
xchg
sti
jae
out
inc
int
cmpsb
mov
fs
push
xor
mov
pushf
mov
push
mov
xchg
mov
pop
ds
jl
sub
inc
aaa
push
cmp
repnz
pop
aaa
das
mov
fstps
pop
xchg
jo
xorb
inc
mov
sbb
insl
mov
pop
cmp
mov
js
xor
mov
adc
out
in
pusha
jmp
popf
je
sub
mov
scas
ljmp
jmp
push
mov
out
fcoms
into
aaa
into
sbb
insl
loopne
rcrb
cmp
outsl
ja
adc
xor
mov
test
pusha
adc
fprem1
fisubs
cmpsl
push
stc
fbld
push
push
repnz
xchg
cld
test
mov
push
add
imul
aad
xorb
jno
xchg
gs
xor
movsb
adc
cmp
in
add
in
mov
xor
jg
inc
sahf
add
mov
xor
loope
and
addr16
out
insl
or
cmp
mov
test
test
lods
ret
xchg
cmpsb
lods
mov
int
into
push
test
mov
inc
popf
and
xor
rorb
repz
mov
js
or
shl
cmc
arpl
lret
data16
and
sub
dec
in
mov
iret
js
int
push
scas
out
xchg
mov
mov
lcall
loope
mov
cld
mov
cmp
add
pop
or
subb
add
cmpsb
ljmp
sbb
stc
loope
cld
push
jo
sub
mov
loope
jbe
rcll
cmp
mov
jmp
fcmovnu
stos
leave
cmpl
adc
rcll
mov
ja
testl
pop
pusha
xchg
test
fbld
xor
fxch
dec
pop
popa
and
sub
das
jbe
lret
sbb
xchg
imul
clc
sub
sub
add
push
jno
inc
clc
jl
insb
out
rcrb
mov
dec
lahf
sub
sbb
inc
ret
out
gs
mov
ds
xchg
cmc
imul
ret
fisubs
cwtl
loopne
test
push
push
jnp
xchg
push
test
push
xchg
leave
subb
jns
sbbb
stos
cs
and
mov
pusha
andb
xlat
mov
out
mov
fs
aam
sbb
ret
pushf
push
dec
repnz
aam
mov
mov
cmp
mov
sbb
cmp
cmp
leave
je
jle
inc
pop
add
test
jo
mov
jmp
ret
cmp
or
les
push
sbb
pop
add
mov
popa
test
adc
xchg
and
ret
fdivs
fimuls
push
sbb
loope
or
popa
pop
push
loopnew
out
pop
nop
xchg
pop
mov
xchg
jl
pushf
sbb
cmp
out
mov
push
aam
js
dec
inc
test
mov
sbb
test
out
push
push
fiadds
mov
add
pusha
testb
push
dec
or
ljmpw
shll
and
js
ss
mov
loopne
pop
adc
pop
test
dec
repz
dec
popa
push
xchg
xchg
repnz
mov
stos
out
add
sub
in
ret
add
movsb
int3
dec
mov
in
xchg
jle
ficoml
insl
cmp
mov
shll
adc
or
sub
inc
out
enter
cld
daa
aam
inc
fwait
adc
gs
push
cmp
sbb
imul
daa
mov
xor
xor
sbb
and
pop
int3
nop
sub
fs
jo
cmp
addr16
inc
add
imul
jno
mov
mov
adc
insb
rcrb
mov
gs
fs
test
sub
stc
andb
fstl
mov
push
xor
lods
mov
loopne
sub
bound
mov
lods
paddb
mov
push
cld
pop
ss
test
fsubs
ljmp
ljmp
cmp
es
mov
dec
fwait
cmp
add
fsubl
add
mov
mov
mov
movsb
repz
into
sahf
lret
ret
push
lret
jns
movsl
movsb
adc
or
out
sbb
fwait
popa
call
insl
enter
rol
pop
or
dec
xchg
sub
mov
mov
inc
dec
sti
jns
insb
icebp
xor
adc
int
sub
xchg
jle
or
xchg
nop
negb
inc
dec
gs
xor
ss
loopne
movsl
and
or
sahf
sub
xlat
jno
push
test
into
or
mov
or
les
lods
xor
push
sub
dec
sub
fs
push
mov
xchg
inc
mov
jno
dec
sahf
cmp
pop
scas
mov
shrl
push
jmp
sub
orb
and
add
mov
xor
jo
cmp
push
ss
sbb
xchg
jo
mov
or
subb
mov
sahf
lret
push
mov
js
out
dec
imul
jne
popa
rep
aas
jb
inc
sbb
sbb
xchg
jle,pn
fs
sti
sub
aaa
mov
adc
sub
inc
outsb
clc
xor
adc
and
xchg
lcall
push
sub
jmp
in
sbb
fsin
outsl
test
lods
lret
adc
data16
jno
mov
xor
cmp
sbb
faddl
add
cmp
mov
xchg
idivb
xlat
xor
sub
fcomps
nop
fstpt
xor
out
insb
add
in
dec
xor
pop
fildll
je
nop
pop
dec
add
fs
cmp
data16
int3
movsl
push
jmp
fistl
popf
inc
aaa
out
ror
out
stc
sbb
test
inc
movsb
aad
testl
rorb
pop
ljmp
and
and
push
fwait
aas
test
scas
mov
mov
mov
push
fnstenv
pushf
add
dec
icebp
push
fs
and
push
cs
outsb
jb
mov
sbb
inc
aad
aas
jne
pop
inc
std
add
add
jmp
jnp
mov
xchg
arpl
mov
xchg
js,pn
popf
outsl
inc
in
mov
pop
pop
out
and
or
outsb
shr
inc
sub
rolb
or
jge
sti
add
cmp
lea
push
lahf
sub
cltd
sub
dec
push
stos
out
lret
sub
movsl
hlt
mov
imul
jne
daa
pop
xor
adc
jo
inc
js
repnz
fwait
rcrb
push
faddl
and
testl
daa
adc
add
into
fwait
inc
fdivl
inc
jno
xchg
jp
pavgb
or
fildll
and
push
fldcw
or
testl
jp
cmp
mov
pusha
pop
idivl
adc
dec
xchg
sub
xor
std
gs
fwait
repnz
mov
adc
shrb
cld
mov
jns
dec
xor
arpl
outsb
add
mov
ret
in
sbb
aas
int3
test
add
and
sub
cltd
sub
push
popa
mov
xchg
add
icebp
xlat
xor
aad
testb
jg
xchg
je
shlb
dec
lds
jne
cmp
mov
mov
outsl
ljmp
int3
popa
mov
lock
test
ljmp
out
hlt
sbb
repz
cwtl
call
xor
adc
insl
lock
sub
push
mov
ds
imul
adc
adcl
sti
jmp
fs
and
out
lret
jns
movsl
push
cmc
aam
lret
dec
inc
jno
bound
jg
aaa
sbb
push
xor
jbe
mov
sub
pop
addb
sbbl
or
ss
lret
mov
jno
mov
shr
dec
imul
mov
sbb
sarb
inc
je
out
imul
jb
stos
data16
pop
lahf
ret
dec
xor
subl
push
jg
mov
daa
ja
jo,pt
movsb
sub
gs
push
push
mov
lcall
loopne
mulb
ljmp
stc
jbe
pop
roll
sbb
dec
xlat
inc
aad
push
insl
push
hlt
jle
and
mov
lret
mov
pop
lock
or
push
mov
push
in
pop
fistps
js
aad
andb
pop
sti
ret
push
mov
ja
adc
fadd
cmp
dec
add
push
jne
and
jo
xchg
jg
and
xor
jb
xchg
lea
leave
shlb
sbb
cmpsl
sub
lock
mov
rorl
jl
repnz
dec
mov
test
and
jae
test
mov
cmp
xchg
cmp
adc
xchg
ret
mov
inc
outsl
jge
nop
popa
shrb
sbb
mov
repz
mov
mov
mov
xchg
jmp
jge
insl
pushf
and
cmp
xor
bound
pop
jno
iret
addr16
jnp
cld
not
cli
fidivrs
sub
stos
xlat
push
cltd
jo
fistpl
jl
jp
xchg
sbb
popa
adc
xchg
jmp
sbb
xor
insl
mov
mov
inc
jmp
xchg
mov
out
dec
mov
jg
and
rolb
mov
sub
add
iret
push
or
js
jecxz
cmc
adc
mov
loope
cmp
add
daa
cmpl
rorl
aaa
adc
popa
push
pop
mov
or
bound
dec
adc
daa
pop
pop
pcmpgtd
jg
adc
xor
inc
andl
test
lahf
or
mov
push
ror
jle
shrb
shll
dec
and
add
js
cmc
pushf
int
sarb
dec
push
fsubrs
movsl
add
je
in
mov
mov
jbe
roll
or
xchg
adc
inc
xchg
mov
rorb
jbe
mov
iret
jecxz
cmpsl
push
stos
add
dec
sbb
iret
hlt
jp
cmp
cmp
flds
pop
shlb
mov
inc
lea
mov
and
jb
xchg
mov
ja
xor
cmp
push
insb
and
sbb
fsubrs
cli
clc
in
scas
loope
mov
call
ljmp
and
ret
pop
cmp
out
ret
or
iret
lret
mov
add
fdivrl
addr16
int3
fnsave
sbb
inc
ret
sub
mov
mov
stc
in
push
adc
mov
dec
cltd
pop
mov
inc
push
sarl
jne
push
and
push
ret
inc
mov
mov
popf
cmpsl
das
hlt
pop
mov
mov
scas
pop
cmp
sub
pop
xlat
mov
adc
jecxz
pop
aas
test
and
ja
add
lcall
iret
xchg
insb
lea
pop
ss
jmp
icebp
xchg
jb
inc
dec
fdiv
je
lret
mov
cld
dec
imul
mov
cmp
popa
out
mov
dec
lock
dec
pusha
in
call
iret
mov
cmp
cmp
test
fs
je
testl
add
sub
and
jecxz
pop
xor
add
xchg
into
inc
dec
mov
in
sti
cmp
cmp
and
mov
inc
stos
jnp
sub
lods
ret
mov
jle
adc
xchg
sub
iret
ds
in
fidivl
data16
inc
sbb
mov
cmp
hlt
xor
fstps
and
mov
xchg
faddl
xchg
xor
mov
push
xor
pop
test
add
xor
lret
inc
repnz
inc
cmp
gs
enter
dec
ljmp
xchg
push
enter
inc
sub
mov
sbb
inc
mov
adc
jnp
out
sub
int3
mov
mov
sub
clc
add
shl
sub
cmp
in
adc
scas
repz
int
or
jle
popf
subb
ret
sub
xchg
popf
sbb
mov
push
jecxz
aam
mov
xchg
sub
mov
cmp
mov
fwait
and
xchg
xchg
cli
popf
hlt
sub
jae
mov
loope,pn
insl
daa
jle
dec
repnz
repnz
cmp
js
mov
add
add
scas
aad
lret
sbb
iret
sbb
shrb
popa
dec
add
xor
jp
xchg
dec
hlt
pop
pusha
or
imul
inc
pop
and
test
out
das
std
push
mov
add
stos
lret
repnz
imul
inc
rolb
and
pusha
mov
mov
push
inc
repz
xchg
or
cs
sub
pop
sbb
loope
xor
mov
and
xchg
in
dec
stos
push
shl
jns
repz
into
in
sub
dec
xor
push
addl
orl
or
or
cltd
lods
jae
or
aam
loope
mov
adc
ffreep
pop
jb
les
loope
push
cmp
mov
adc
inc
xor
fmull
mov
xchg
popf
xchg
nop
lods
mov
cltd
cld
repz
jne
div
lret
sahf
xchg
repnz
mov
mov
add
cmp
lret
sub
leave
ret
add
out
or
cmc
xchg
mull
inc
cltd
scas
and
outsl
sahf
mov
in
outsl
mov
data16
int3
xor
pusha
pop
add
ds
outsb
je
ret
jns
xor
cmc
rcll
sbb
les
push
jno
outsb
mov
int
push
mov
stos
scas
fcoml
mov
lock
and
push
jno
inc
lds
daa
fldenv
hlt
sbb
jbe
ja
pop
addr16
aaa
pop
lods
enter
cmpsl
data16
fstpt
dec
mov
and
mov
sbb
pusha
mov
out
inc
dec
fstpl
int3
insb
jno
inc
pop
mov
inc
xor
mov
mov
cwtl
jns
sahf
aaa
aas
sti
xchg
xor
call
ret
xor
inc
hlt
aaa
popa
cltd
je
daa
shlb
rclb
xchg
ja
dec
push
test
dec
sub
repnz
ret
jl
or
inc
and
and
adc
or
ja
sti
and
push
das
popf
fstps
je
fsubl
pop
push
adc
sub
mov
add
fwait
push
aad
adc
adc
mov
rcrl
dec
unpcklps
cmp
and
enter
sub
add
mov
pop
clc
rep
jno
or
adc
iret
add
push
dec
data16
pop
test
sbb
outsl
pushf
test
push
inc
xor
jo
pop
aaa
and
or
daa
sbb
data16
mov
jns
or
popa
or
inc
scas
fcoms
pop
mov
or
cmp
js
bound
sarb
rorl
and
movsl
jmp
cwtl
jns
lds
push
int3
push
lcall
and
xorb
cmpl
inc
loop
push
add
mov
sbb
mov
pop
cmpsb
hlt
ja
push
les
fstpl
in
cmp
dec
in
jae
cmpsb
cmp
push
xor
orl
jno
and
dec
daa
sub
inc
fbstp
sar
shr
sub
or
test
das
mov
in
push
out
inc
pushf
pop
daa
mov
jl
es
xor
clc
jg
data16
ljmp
mov
and
cmp
ss
cmpsb
xchg
mov
xchg
xchg
adc
xchg
and
adc
aas
sub
lods
sbb
mov
es
lahf
dec
inc
sahf
xchg
dec
pop
out
test
mov
lcall
lret
orb
mov
rcrb
jl
mov
pop
pop
cmpb
xor
mov
xchg
fisttpl
mov
popa
iret
xchg
inc
jbe
insl
xor
xchg
cmp
mov
mov
iret
fs
loop
cmc
sbb
pusha
sbb
jle
pop
xchg
fcomps
ss
movsb
jge
inc
dec
mov
add
pop
jne
or
inc
cmpsl
psubq
xor
test
xchg
push
or
mov
lret
lods
nop
out
sub
inc
imul
jg
push
pop
divl
insl
lock
xor
jb
lret
imul
and
incb
sbb
orb
dec
mov
insl
xor
arpl
fcomps
or
lcall
dec
jmp
test
mov
lret
push
cmp
in
ja
cmovo
add
sbb
repnz
repnz
mov
ss
sbb
cmp
es
out
mov
xor
pop
fwait
popa
ljmp
outsl
push
inc
mov
addr16
add
pop
movsb
inc
loop
adc
xorb
cmc
adc
loop
pop
adc
xchg
enter
xchg
pop
lock
fbld
dec
jecxz
push
xor
hlt
mov
shlb
scas
pop
nop
out
adc
adc
sub
cmc
cli
iret
xor
push
push
jg
js
aam
add
aaa
mov
dec
jb
or
cld
lahf
fiaddl
loopne
dec
and
outsl
movsb
lahf
sub
push
leave
mov
fnsave
ret
adc
iret
movsb
xlat
xor
loope
xor
or
adc
lret
mov
in
mov
inc
jmp
jecxz
add
pop
pop
clc
ljmp
adc
repnz
ret
xchg
push
mov
shll
into
cltd
cs
inc
mov
hlt
movsb
sub
imul
jge
push
sbb
mov
scas
inc
in
jg
lret
or
xor
jp
shll
or
push
sub
pop
add
jb
movsl
inc
xchg
cmpl
dec
or
xchg
cmp
int
mov
or
cld
add
test
add
jae
cltd
cmc
or
jl
pop
movsl
sahf
hlt
or
cmp
std
ret
repz
mov
ss
xchg
rcr
test
sbb
xchg
sbb
sub
sub
lret
jle
pop
push
xor
xchg
jl
cmp
cmpsb
movsl
push
movsb
aas
mov
fcompl
add
push
popa
adc
and
or
add
dec
iret
out
lods
adcl
sub
insl
imul
jnp
popf
jae
das
cmc
into
xchg
mov
jmp
and
inc
imul
test
popa
mov
sarl
mov
les
das
pusha
movb
jle
mov
decw
faddp
jns
fs
in
out
popa
mov
cwtl
adc
fidivs
cltd
push
ds
je
or
dec
out
mov
push
or
cmpsb
add
daa
pop
mov
popf
push
fdivrl
mov
cs
inc
xor
pop
dec
adc
pop
push
or
adc
pushf
movsb
mov
xchg
repz
add
sub
xchg
cld
xor
and
scas
mov
popf
jb
pop
and
test
into
lcall
sbb
add
mov
jl
mov
dec
xchg
movsl
paddsb
aas
mov
addr16
mov
movsl
fcomi
sbb
pusha
mov
push
xchg
movsl
enter
dec
mov
mov
outsl
ret
sub
addr16
imul
mov
or
out
mov
jo
insb
add
sub
enter
sub
xchg
movsb
das
sbb
arpl
loope
rcr
int3
inc
mov
fildll
dec
xchg
sbb
popf
outsb
roll
das
out
and
mov
repnz
leave
and
sti
subl
out
loope
sub
scas
push
mov
sbb
je
push
ret
or
shlb
add
imul
sahf
mov
jmp
lret
je
in
cmp
out
sub
bound
in
es
jae
or
xchg
out
in
cli
in
cmp
clc
sub
test
or
add
or
das
xchg
cs
cmpsb
jge
scas
cwtl
test
aad
push
jne
fidivrl
xlat
lea
mov
les
cmp
push
xchg
pushf
add
outsb
sbb
add
pop
pop
mov
pusha
mov
mov
pop
push
out
pop
fs
hlt
pop
and
insb
lock
xor
add
mov
sbb
sbb
pop
sti
ds
addr16
sub
inc
clc
jp
icebp
stos
outsb
jno
xor
mov
jle
stc
hlt
in
outsb
mov
ljmp
aam
xchg
out
test
outsb
add
jge
dec
aad
clc
in
pop
fisubrl
and
adcl
shlb
pop
cmc
clc
and
xchg
arpl
pop
mov
inc
xor
push
cmpsb
inc
jno
cmp
je
addb
sub
adc
test
pop
sbb
mov
add
sar
cmp
jnp
sbb
shrb
and
jg
stos
movsb
jmp
or
cwtl
inc
adc
in
lret
sbb
jge
jns
test
shrb
xchg
rcr
cmp
jne
cmp
add
scas
xor
ss
out
loop
out
sbbl
and
xor
loop
ja
cmp
mov
addr16
add
test
cmp
roll
ret
xchg
cmp
into
cli
sub
mov
mov
mov
xor
out
jge
outsb
push
sub
fildl
and
dec
jecxz
lods
out
jbe
xor
mov
aaa
pop
sbb
bound
cld
jmp
out
sub
lock
insb
pop
mov
loopne
inc
shll
adc
shll
shrb
outsl
popa
sahf
loop
push
xchg
cmp
xor
and
fdivs
inc
xchg
cmp
jnp
adc
in
and
movsb
test
lods
repnz
mov
rclb
mov
stos
hlt
shl
dec
mov
lods
movsl
inc
mov
xor
cs
xor
add
sti
push
lahf
pop
fwait
sbb
mov
fldl
out
out
adc
testb
lret
inc
jnp
loop
iret
pop
dec
les
and
mov
xor
xchg
jo
adc
icebp
cltd
scas
stos
cmp
add
adc
and
stc
int3
gs
clc
sub
stos
mov
pop
inc
inc
mov
or
adc
mov
mov
or
into
das
pop
dec
outsb
pushf
mov
mov
pusha
fdivrp
mov
test
cmpsl
xorb
icebp
mov
nop
cld
mov
xchg
jbe
sub
insb
stc
enter
sub
rcrb
push
pop
add
sbb
or
sbb
inc
in
or
or
adc
sub
inc
adc
pop
lret
dec
std
push
loope
xchg
add
mov
cmp
mov
ret
jb
shlb
cmp
imul
dec
mov
ds
and
outsl
es
out
mov
aam
subl
mov
push
in
mov
test
lret
insb
les
cmpsb
jno
cmp
icebp
lret
test
push
ss
test
jg
pop
idiv
and
fisubrs
sti
out
lahf
add
mov
stos
aad
imul
cmp
adc
fidivs
jecxz
fwait
pop
dec
sub
nop
scas
xchg
cmp
pop
out
leave
mov
pop
push
mov
mov
xor
mov
insl
js
divb
fdivr
idivb
inc
sbbb
addr16
repnz
cmp
or
int3
push
and
fcompl
dec
test
pop
cmc
mov
es
mov
add
stc
movsb
lret
xchg
push
mov
movsl
ss
xor
mov
sbb
insl
repnz
cli
pop
les
jae
ret
adcl
aad
pop
stos
lods
icebp
xchg
test
ljmp
mov
and
in
es
cmp
mov
lock
or
stc
psrlq
imul
push
mov
fucom
loop
jo
push
lcall
sub
jbe
inc
mov
dec
das
adc
mov
lds
or
icebp
lcall
xchg
das
mov
jns
ret
jo
xchg
aaa
data16
popf
stc
loop
mov
and
adc
iret
aad
xchg
inc
ficomps
xor
outsl
fwait
mov
loope
jl
pop
xchg
or
test
es
cltd
jmp
fcmovbe
jge
rorl
mov
stos
push
jnp
sbb
int
jg
xchg
pusha
jp
mov
stos
add
outsb
popa
inc
pop
xor
into
lret
pop
adc
add
jg
push
fwait
pop
mov
addl
cltd
mov
cmpsl
addr16
movsl
mov
jmp
cld
pop
aaa
outsb
in
aaa
mov
inc
std
xchg
dec
jnp
std
pusha
out
setns
ds
outsl
jmp
lret
inc
popa
data16
les
rcrb
div
xchg
mov
push
test
pop
or
sti
loopne
pop
enter
mov
js
xchg
je
sub
inc
repnz
jmp
xchg
rclb
mov
imul
outsl
inc
inc
mov
mov
lds
push
xor
cwtl
adc
adc
xor
or
mov
xor
test
dec
push
adc
xor
test
in
lds
dec
into
in
daa
sar
daa
stos
aaa
adc
popa
jo
mov
mov
sbb
std
mov
mov
test
int3
mov
pushl
xchg
mull
test
inc
shrl
fcomps
mov
sub
dec
stc
push
loope
andl
jno
les
insb
cmp
cli
add
cld
fwait
add
stc
or
leave
mov
sarb
adcb
or
mov
cli
movsb
or
jne
orl
push
pop
xchg
dec
out
mov
out
int
fwait
xor
sbb
fdivr
and
jle
dec
push
xchg
dec
mov
jmp
lods
xor
enter
inc
jle
cmpsb
out
pop
push
push
and
or
inc
stos
sbb
shlb
fsubrs
mov
pop
sbb
cmp
outsb
pop
les
aaa
or
fwait
add
pop
stc
push
sahf
jl
mov
xchg
xor
add
in
inc
pop
fwait
cmp
lret
mov
cld
or
xchg
mov
or
and
clc
sub
mov
faddl
mov
mov
movsb
fadd
fdivrs
add
in
add
sbb
testb
cmpsl
clc
hlt
adc
pop
es
mov
ss
xchg
pop
pusha
adc
cmpsl
push
jmp
mov
adc
iret
arpl
test
stc
jle
pop
jge
jb
sub
xchg
xchg
jg
das
dec
lahf
mov
icebp
xchg
mov
jbe
insb
stos
pusha
cmpsl
jmp
push
jl
push
xor
test
xor
push
inc
jo
dec
loopne
cmp
adc
lahf
repz
pop
xor
shl
ja
cmp
ds
cmp
push
or
out
pop
xchg
xchg
repnz
fdivr
mov
lea
daa
and
jae
loop
cmp
in
adc
stc
fsubl
call
addr16
out
lret
packuswb
call
jbe
leave
sub
aas
inc
stos
lods
mov
negl
or
dec
stos
dec
cmp
loopne
sti
xor
shl
leave
inc
inc
ss
adc
popa
add
dec
push
mov
ret
insl
cmp
rcr
in
dec
mov
fidivrs
addr16
sub
int3
mov
dec
push
leave
push
xor
or
pop
push
loop
cmp
inc
xor
lcall
shll
insb
cmp
and
adc
pop
std
adc
out
mov
pusha
bound
fmul
cwtl
loope
jecxz
xchg
add
out
xchg
iret
pop
cmp
xchg
pushf
push
sti
cmp
jmp
pop
loop
mov
repz
gs
scas
arpl
dec
enter
sbb
cmp
or
out
inc
sahf
sbb
mov
inc
xor
test
bound
sub
loop
cs
inc
loopne
fsts
outsl
xor
lock
dec
fnstsw
adc
inc
cmpsb
push
push
mov
mov
adc
andl
in
xor
stos
inc
adc
ret
inc
mov
adc
mov
adc
xchg
stos
inc
inc
push
jns
sbb
mov
pushf
xchg
lahf
aam
imul
test
add
mov
and
or
insb
mov
shlb
xor
sub
into
mov
cli
jp
negb
mov
adc
addb
ss
bound
lret
dec
movsl
in
pop
cs
sti
pop
mov
sbbl
mov
cwtl
mov
mov
fdivrs
dec
mov
jp
pop
outsl
xchg
test
aas
dec
mov
mov
in
js
loop
and
jnp
push
xor
out
mov
mov
inc
stos
scas
push
dec
cmp
and
int3
lcall
fwait
or
or
sub
mov
add
ret
sbb
movsb
mov
push
ja
int
inc
dec
push
cli
in
in
ret
fcompl
arpl
sub
cmp
xor
push
jp
lret
mov
daa
jb
stos
sbbl
jno
pop
push
ja
jae
movsb
cmp
pop
add
add
inc
lds
fcoms
inc
adc
mov
and
test
or
sbb
cmp
clc
mov
scas
fisttpll
pop
lds
aad
xor
hlt
mov
insl
fistpl
lret
mov
lods
mov
cmp
test
shll
js
xor
pop
sti
movsb
mov
into
sbb
popf
daa
int
cli
test
es
cmc
inc
adc
push
cltd
stos
sbb
push
cmpsl
jns
jns
sbb
push
test
arpl
fildll
daa
jae
cmpsl
mov
addr16
imul
subb
jp
pop
jmp
mov
fldenv
jo
pop
aaa
mov
xchg
adc
cmpsb
movsl
movsl
and
sbb
add
ljmp
imul
mov
xor
fmuls
mov
or
cwtl
add
or
adc
into
in
addl
test
and
xchg
jns
sub
ljmp
mov
sub
cmp
lods
mov
cwtl
cmp
mov
ja
mov
enter
mov
stos
or
xchg
or
mov
shll
inc
icebp
mov
mov
push
mov
cmp
dec
lods
pushf
out
lcall
xchg
sub
pop
add
jns
das
or
int
loop
xchg
call
aad
jnp
xchg
outsl
inc
pop
jb
pusha
xor
fwait
outsb
subb
pop
daa
and
push
inc
test
nop
test
inc
cmp
mov
cmp
pop
xor
aas
in
adc
pop
fs
jp
sub
out
out
cli
dec
pop
and
jp
add
push
or
xchg
insb
jecxz
movsb
jmp
sub
test
movsl
cltd
icebp
adc
jbe
mov
ja
das
mov
push
enter
jmp
jae
fstp
push
enter
fisttpll
les
sbb
sbb
out
aam
out
aad
std
outsl
inc
inc
xor
ss
push
mov
out
or
dec
sub
adc
dec
fucom
jle
jnp
loope
imul
loop
lds
sub
push
xchg
cmp
mov
inc
mov
jp
lock
in
jnp
test
insb
xchg
fistpl
sahf
aam
pop
mov
jnp
jns
xor
jne
add
sbb
push
push
lret
stos
mov
lret
xchg
mov
cmp
mov
push
xor
pop
iret
lea
push
lret
aad
jl
mov
daa
out
cmp
or
or
mov
pop
and
push
popa
push
jae
inc
inc
mov
and
lods
inc
in
es
mov
std
je
xchg
or
mov
cld
jno
and
mov
jg
mov
pop
jg
int
cwtl
movsl
pop
mov
loopne
adc
stos
addr16
sub
sbb
jns
inc
fs
loop
pop
add
and
es
mov
inc
adc
inc
pop
daa
cld
rcrb
pop
cmpsb
rol
out
sbb
popa
pop
enter
aam
std
xchg
leave
rcrl
add
orl
cmp
aaa
pop
rcrl
xchg
repnz
hlt
xor
test
lods
ja
sub
sbb
inc
les
repz
mov
sbb
or
push
push
test
lods
or
sub
cltd
cmpsl
enter
jp
mov
cwtl
fcos
std
cs
sarb
jmp
inc
ljmp
mov
cmp
bound
pop
stc
xor
mov
sbb
test
int3
imul
fidivs
loope
push
cmp
es
lret
lock
cmpsb
into
idivl
hlt
movsl
es
rorb
hlt
xor
test
push
dec
add
addl
or
pop
dec
divb
mov
sub
dec
adc
mov
mov
bound
fstl
xor
fmul
or
or
lea
and
das
ja
add
inc
or
or
in
shlb
fildl
sbb
cmc
repnz
mov
aaa
nop
test
in
dec
sbb
cli
outsb
xor
pushf
pop
js
mov
sbb
push
mov
push
lods
fildl
pusha
stos
and
aad
repnz
mov
sbb
push
int
pop
cmp
fdivrs
inc
icebp
sbb
movsb
jno
call
push
dec
popa
and
inc
mov
insb
cmp
iret
loope
mov
out
add
ret
push
pop
imul
push
mov
stos
and
leave
arpl
xchg
mov
rcll
ficomps
fimuls
popf
pop
ds
jecxz
dec
aaa
movsl
outsl
pop
mov
int3
sarl
cmp
lods
pop
dec
mov
aad
adc
or
popf
cld
test
cld
mov
rcrl
test
test
and
xchg
xor
sbb
dec
mov
jmp
mov
popa
clc
xor
inc
hlt
push
ret
and
jecxz
mov
jno
mov
adc
add
mov
repz
and
push
mov
jge
loope
push
adc
test
jge
fs
stos
aam
sbb
loope
fwait
xchg
pop
push
and
dec
inc
add
add
sub
not
sbb
loopne
in
dec
rclb
cmp
xor
cmp
sub
pop
into
fcoms
inc
popf
xchg
pop
inc
mov
jns
nop
or
jmp
shlb
pop
pop
or
add
mov
and
or
mov
add
enter
jnp
or
jl
push
test
cs
fs
push
xchg
jb
push
fisubl
subb
fs
inc
sbb
push
cmp
loopne
mov
jmp
je
daa
adc
je
mov
pop
std
inc
imul
fsts
fs
outsb
sub
mov
jne
repnz
jns
dec
sbb
jnp
les
dec
or
jmp
mov
xchg
dec
cwtl
push
bound
test
ja
jne
sub
subb
mov
insb
std
xor
push
xchg
loopne
hlt
testb
fst
push
in
and
nop
pusha
test
mov
xlat
repz
mov
jno
cmpsb
out
std
sub
push
cmc
out
sahf
push
add
sub
pop
das
mov
mov
test
push
daa
cmp
shr
outsb
aam
out
mov
sub
fiaddl
jbe
jp
ss
inc
and
repz
repnz
cmp
xchg
fcoms
cmpsb
push
movsb
jl
fdivrs
int
jp
divl
cs
je
bound
out
sbb
mov
jge
dec
sbb
loop
call
andl
mov
push
mov
cmp
mov
jns
xor
rclb
adc
push
stc
and
jb
call
xorb
sub
xchg
and
xchg
je
xchg
xchg
dec
enter
gs
fdivrs
test
mov
push
int3
mov
subb
cmp
or
inc
cmp
push
cmpsl
push
sbb
mov
jecxz
cmc
inc
pop
and
and
xor
jmp
repnz
or
loop
mov
outsl
add
and
in
mov
aam
add
adc
bound
xchg
leave
sub
fisttps
mov
dec
clc
mov
je
shlb
mov
mov
sbb
sub
push
push
enter
sub
xor
jg
push
xchg
je
sub
lcall
loop
inc
push
mov
addr16
test
dec
xchg
mov
fwait
rcr
int3
mov
mov
fldcw
loop
fisttpl
and
test
adc
out
notl
add
mov
out
sahf
adc
icebp
test
or
movsb
mov
mov
cli
and
pop
leave
inc
jns
lods
and
out
shlb
and
mov
mov
gs
gs
daa
mov
dec
and
je
and
leave
jae
mov
push
sti
aas
lahf
movsl
dec
mov
js
and
ss
lds
sbb
xor
shl
aaa
aam
leave
xor
inc
pop
push
mov
cmp
out
clc
xchg
xchg
cltd
mov
mov
movsl
stc
push
inc
mov
daa
aaa
jecxz
loop
sbb
mov
enter
sub
cmp
cmp
adc
fadds
sbb
cli
mov
rclb
mov
pop
popf
inc
jns
and
mov
sub
mov
xchg
jecxz
aaa
pusha
pop
adc
mov
scas
stos
push
jbe
gs
ljmp
popa
jnp
sti
jl
cmpsb
pop
rorb
sarl
mov
in
repz
jl
testl
aaa
xchg
jb
ror
pushf
notl
loopne
int
out
push
in
in
loopne
and
mov
xchg
or
mov
cs
xchg
sbb
imul
sub
xor
jno
mov
rolb
push
inc
xchg
jle
mov
mov
cwtl
ja
pop
push
jp
repz
sub
int3
pushf
jne
js
inc
sbb
data16
cmp
push
sub
or
popa
test
mov
and
xlat
mov
fadds
push
mov
cli
push
xor
mov
cwtl
icebp
sub
dec
or
stos
push
xor
or
pop
pop
xchg
and
cmp
mov
fmulp
jne
cmp
push
cmp
and
ficomps
add
call
lods
js
fwait
xchg
add
sub
test
lcall
or
add
sahf
jae
push
fsubr
pop
jmp
inc
sbb
lcall
incb
sti
ja
movsb
dec
sub
nop
mov
xorb
shlb
sbb
xor
test
rcrb
and
jl
addr16
stc
adc
fs
pop
xchg
data16
push
jmp
adc
pop
jns
mov
rclb
negb
cld
dec
dec
scas
jge
or
push
repnz
rcll
sbb
inc
add
repnz
lahf
ss
adc
mov
popa
clc
push
test
aad
or
int3
mov
sbb
fwait
nop
dec
ret
popa
or
dec
test
fisubl
jo
fstl
and
fbstp
mov
lds
or
jmp
cmp
push
outsb
pop
mov
mov
or
test
inc
in
mov
repz
push
stos
adc
pusha
leave
xlat
xchg
adcl
notl
jp
fwait
cmpb
push
sub
testl
pop
je
add
xchg
add
rorl
ss
mov
push
roll
push
sbb
mov
ja
sti
xor
lcall
xchg
idiv
sub
popf
fdiv
pop
mov
adcb
sbb
mov
mov
inc
jle
pop
js
mov
dec
add
xchg
and
cmp
xchg
mov
add
push
test
and
jle
mov
aas
dec
lret
pop
dec
dec
push
mov
pop
pop
clc
fnstenv
add
jge
aad
imul
decl
and
fisubrs
int3
adc
cmp
bnd
inc
dec
or
mov
sti
addr16
xchg
sub
popa
aaa
mov
jmp
add
pushf
cld
shlb
push
aaa
in
mov
adc
jb
or
adc
mov
adc
mov
loope
test
xchg
adc
les
mov
or
ds
mov
sti
xchg
pusha
add
pop
jg
fists
sbb
lret
icebp
mov
out
call
sub
pop
aaa
popa
ss
and
iret
ret
sub
xchg
fmuls
jb
mov
fs
sub
xor
cld
cmp
ret
in
pop
mov
mov
imulb
in
or
jnp
sbb
andl
add
sarl
dec
xor
call
mov
dec
cs
push
lock
loop
xor
mov
cmpsb
fucomip
shrb
lret
adc
sub
mov
aaa
stc
sub
and
lret
pop
mov
push
add
cmp
out
push
divl
sub
push
jle
sahf
or
adc
fnstenv
pop
ljmp
out
push
jae
les
js
insl
xor
cmpl
scas
je
sarb
xor
add
inc
or
inc
lret
pusha
sub
sub
iret
repz
aam
in
or
enter
sub
shl
or
inc
ds
pop
cmc
jo
outsb
jmp
adc
into
push
or
jge
cmp
daa
lods
rcrb
push
or
mov
mov
dec
pop
xor
adc
out
inc
cmp
je
ret
sbbb
es
xchg
in
cld
pop
lock
pop
jae
push
xor
push
imul
cmp
call
int3
mov
mov
in
inc
out
mov
dec
and
mov
and
jmp
mov
adc
je
into
sbb
sti
xchg
mov
adc
jmp
mov
dec
out
lock
shlb
adc
sbb
cmp
pop
adc
sbb
sahf
je
xchg
xchg
xor
popa
sbb
icebp
cmp
mov
or
adc
sbb
pop
std
mov
jmp
xchg
cmp
pop
bnd
call
addb
es
mov
clc
sbb
jbe
mov
in
mov
jne
notb
das
ret
insb
mov
in
jg
std
loopne
jmp
xor
popf
data16
repnz
adc
dec
adc
stos
movsb
mov
lcall
fwait
les
xchg
test
add
jle
pop
mov
xor
jl
icebp
dec
cmc
popf
adc
cvtps2pi
jge
int
xrelease
inc
jg
iret
test
clc
add
shrb
dec
sub
lahf
sbb
lahf
jmp
and
pop
mov
test
negb
mov
mov
les
notl
aaa
loop
pop
test
xchg
movsb
cmp
mov
jp
aaa
add
repz
fwait
pop
daa
mov
ficoml
fnsave
mov
divb
pop
fisubrs
mov
dec
aas
add
jecxz
lahf
mov
jae
imul
aaa
pop
mov
divb
leave
dec
jns
xor
mov
das
cltd
imul
fsubp
je
pushf
add
clc
jg
sbb
inc
add
sbb
xor
sub
xor
mov
ljmp
fdivrl
sahf
pop
nop
jns
sbb
mov
aad
xchg
xor
pop
dec
xor
adc
rcl
pop
add
in
lret
inc
fcompl
inc
pop
mov
jo
and
push
push
lcall
sbb
adc
cmpsl
mov
sub
ss
lret
pop
sti
int3
aam
sub
push
jo
or
int
dec
orb
push
dec
rcrl
add
xor
ret
rcrl
fbstp
xchg
pop
enter
sbb
inc
jl
push
push
jno
sti
inc
fnsave
jne
mov
pop
push
mov
je
inc
rcr
and
jne
scas
sbb
and
inc
fstl
das
ret
dec
add
or
mov
pop
ret
push
jno
lds
dec
cwtl
pop
mov
addl
into
aas
lods
lods
mov
adcl
dec
scas
imul
daa
ret
in
stos
sahf
popa
rclb
sub
mov
lea
cli
dec
pop
mov
neg
fmuls
cld
jp
call
mov
out
jp
nop
insb
add
lahf
cmpsb
xor
push
sub
lock
out
pop
out
imul
test
mov
popa
cmpsl
dec
scas
dec
inc
pop
fstl
xchg
jmp
jge
mov
aaa
ljmp
ds
repnz
jle
cmpsl
mov
xor
lods
nop
mov
rcrb
je
inc
fcomps
or
pop
pop
test
fisubl
lahf
adc
mov
icebp
icebp
xchg
loop
dec
push
mov
insl
jns
inc
enter
xchg
mulb
lahf
adc
or
sub
iret
fwait
int
xor
xor
mov
push
arpl
add
mov
inc
push
fstpl
ret
fwait
sub
xchg
xor
xor
mov
aam
pushf
inc
jno
xchg
enter
cwtl
sarb
dec
push
pushf
ret
fiadds
jl
cmc
ds
loope
xor
rorb
sbb
out
repz
xor
inc
dec
jns
iret
and
movsl
mov
mov
out
and
add
push
ffree
jp
sbb
int
movl
das
xchg
lret
gs
mov
ret
lds
mov
and
mov
jbe
mov
push
push
push
int
xor
scas
es
mov
inc
sbb
push
cmp
lea
xchg
icebp
jbe
mov
sbb
daa
mov
adc
adc
mov
xor
mov
lock
pop
das
pop
jo
jmp
shll
inc
lds
adc
insb
mov
ret
jo
lahf
mov
dec
or
inc
out
sbb
xor
or
cmp
mov
xor
test
insl
pop
inc
mov
test
arpl
sub
add
push
sbb
adc
mov
add
loopne
mov
ret
fimull
inc
mov
jns
ds
pop
lcall
ljmp
mov
dec
or
pop
stos
push
pop
cs
call
lds
sbb
xor
push
pop
daa
and
adc
lods
in
mov
icebp
and
push
adc
ret
mov
jle
xor
pop
cmp
jns
sub
cmp
ds
imul
test
dec
stc
insl
xchg
cmp
popf
sub
xlat
dec
xor
or
jbe
fiadds
aaa
jmp
addr16
add
je
dec
aas
sbb
jnp
aaa
push
mov
mov
andl
lds
shr
outsb
adc
jmp
xchg
mov
sbb
or
sub
dec
dec
mov
aas
pop
sbb
shll
ja
dec
jo
daa
cmpsb
pushf
ret
push
sbb
push
jo
xor
mov
jnp
sahf
lcall
dec
cmpsl
pop
jecxz
xor
adc
in
xchg
and
lcall
jmp
mov
inc
dec
dec
mov
jae
sub
bound
jl
adc
mov
mov
imul
imul
jg
mov
ljmp
xor
mov
sub
stos
sub
xchg
dec
std
cli
das
fwait
push
ja
mov
fdivs
movsb
dec
addb
dec
enter
mov
ret
add
dec
lods
fdivrs
inc
jae
gs
js
out
test
mov
add
mov
xchg
cmp
xor
outsl
bound
ljmp
mov
dec
mov
sbb
mov
push
rclb
xchg
movsb
clc
sbb
fldenv
popa
jg
fnstcw
and
mov
sbb
les
pop
mov
and
sbb
push
push
enter
cld
mov
das
icebp
daa
cld
and
mov
mov
pop
push
insb
push
ja
push
lods
mov
and
data16
aas
mov
stos
sub
repz
dec
gs
shrb
pop
jp
aaa
or
imul
inc
cwtl
outsb
lahf
push
mov
pop
add
in
pop
jb
cmc
movb
imul
cltd
jb
xchg
pop
fiadds
cs
addr16
addr16
icebp
aas
pop
ljmp
cmp
add
cld
xor
arpl
mov
or
cltd
xchg
les
sti
aad
int3
fildl
push
push
xor
pop
xor
dec
das
pop
frstor
xor
and
dec
lret
loope
pop
mov
and
pusha
sub
outsl
push
push
test
aaa
pop
mov
ret
fstpl
pop
push
test
js
repz
ficoms
mov
out
pop
fwait
mov
shlb
cmp
das
inc
insl
enter
mov
int
push
dec
xor
loopne
je
das
loope
pop
fs
and
insl
sbb
das
divb
mov
aas
daa
les
adc
jmp
push
imul
int
pop
or
fadds
shrb
add
dec
xchg
test
daa
mov
jae
jmp
sbb
in
sbb
push
jle
ss
sbb
loopne
icebp
dec
sbb
push
cltd
adc
loope
lret
out
or
inc
mov
mov
cwtl
mov
popa
adc
jge
frstor
xor
mov
xchg
in
adc
cwtl
pop
fisttpll
inc
scas
pop
sbb
mov
pop
lods
cmpsl
and
sbb
mov
cmpsb
mov
shll
sub
mov
sub
dec
stos
jo
or
jo
cmp
lods
loop
cmp
in
fidivl
stc
int
iret
xor
lods
enter
fs
jno
sub
sbb
ss
dec
lahf
leave
outsl
or
pop
pop
in
outsb
inc
add
inc
push
popf
lahf
pop
sub
dec
std
pop
decl
test
dec
push
pop
adc
lods
sub
dec
faddl
pop
mov
leave
sub
jp
mov
sbb
cwtl
mov
or
inc
lcall
pop
add
dec
jmp
or
out
mov
aaa
stos
popf
lret
sub
mov
lock
cltd
mov
ror
add
jne
lods
ss
bound
nop
fwait
xchg
push
shll
clc
test
fisttps
xor
sub
push
mov
fidivl
jno
pushf
add
negb
outsl
push
lret
inc
and
stos
out
dec
out
sbb
rolb
jle
lret
inc
mov
and
jae
push
ds
js
xor
int3
cmp
in
inc
fidivrl
call
pop
cmpsb
gs
or
jl
dec
push
das
sub
loopne
out
adc
sub
lock
daa
pop
enter
pop
insb
jl
pop
scas
sbb
movsb
imul
rolb
out
xchg
mov
into
adc
enter
pop
mov
xchg
adc
shrl
inc
cmp
lock
inc
ss
mov
cwtl
adc
in
pop
xor
xchg
insl
clc
movsb
loopne
cmp
shr
cmc
jno
fdivrl
std
adc
shll
push
insb
add
orb
and
cmp
push
sbb
adc
repz
or
mov
dec
xchg
in
inc
push
mov
push
fcoml
popf
inc
inc
mov
stc
mov
lret
into
cwtl
cmc
xor
nop
xchg
inc
adcb
leave
add
in
jle
mov
pusha
das
jns
sahf
outsl
mov
inc
cmc
pop
iret
mov
xchg
jl
adc
popf
cmpsl
lea
cli
icebp
loope,pn
fiadds
shrb
cmp
lock
adc
xchg
ljmp
fldenv
aam
ret
call
movsb
stos
pop
jns
pop
xchg
jle
or
outsl
dec
jecxz
subl
lret
pop
bound
sbb
dec
mov
jmp
ds
jo
loope
test
add
cmp
sahf
nop
jmp
out
sub
loop
iret
push
mov
mulb
xlat
mov
and
inc
les
cmpsb
pop
sub
scas
stos
add
jp
in
xchg
fwait
xchg
push
lret
lods
jb
pop
shrb
inc
push
dec
popl
cmp
shll
pop
and
add
jne
jns
push
xor
popf
scas
cmpsl
sub
divl
pop
pop
jae
cmp
xchg
lds
add
adc
test
rcr
push
push
xor
xor
enter
lods
rcl
sub
mov
insl
mov
xchg
sub
jno
inc
enter
rorl
std
pusha
cmpsb
shr
outsl
rolb
lea
dec
fnsave
call
test
bound
hlt
cmp
cmpsl
ljmp
test
fdivp
adc
insl
test
insb
pop
scas
mov
dec
arpl
mov
push
mov
push
pop
and
lds
and
xchg
jp
loope
cmp
mov
std
pop
xlat
sahf
notb
aas
xchg
xchg
shlb
test
outsl
dec
xchg
insb
movsb
or
sub
mov
or
push
ret
adcl
mov
scas
jp
out
xor
in
push
mov
push
cmp
mov
mov
fs
add
mov
xor
scas
push
lods
lcall
in
in
in
mov
jns
repnz
mov
jo
cmpsl
sbbb
jb
xchg
mov
int
fbld
add
je
decl
js
jl
sbb
and
xor
and
js
call
pop
xchg
pop
mov
inc
test
adc
mov
ja
lret
xchg
or
mul
mov
pushf
cmpb
out
pop
inc
js
xorl
add
fstl
dec
xor
shll
loop
lret
imul
xchg
aam
sbb
ljmp
sarl
mov
xchg
cmp
xchg
or
nop
insb
sub
lahf
rorb
or
and
cld
mov
scas
or
pop
pop
outsb
cmp
mov
or
lods
inc
jbe
dec
fdivrl
addl
jecxz
lods
je
into
push
inc
xchg
fbld
scas
shrb
out
sbb
lods
dec
test
xchg
iret
mov
lods
mov
shlb
out
xchg
pop
inc
scas
insb
cmp
pop
ror
lret
pop
jb
cmp
in
repnz
pop
ret
sub
push
mov
cmp
cs
inc
test
xor
hlt
mov
ljmp
movsb
add
lret
push
cwtl
cmp
bound
loopne
xchg
cmp
xor
shll
push
mov
or
aas
nop
lcall
push
pop
in
test
mov
cmp
cmc
out
and
push
push
rol
xchg
test
jge
push
int3
popf
scas
dec
ss
or
push
jp
push
dec
inc
or
inc
fs
pop
xor
aad
mov
outsb
stos
or
jg
shll
clc
xchg
jne
outsb
stc
push
adc
dec
sbb
mov
sti
popf
sarl
rcrb
inc
int3
call
cs
mov
jne
fnstcw
ja
sti
ss
jle
or
pop
mov
in
mov
push
popaw
jmp
dec
divl
mov
pop
xchg
sahf
scas
addb
mov
mov
js
repz
popa
xchg
sbb
mov
mov
outsb
testb
push
cmp
fiaddl
or
aam
rorl
pop
jle
hlt
into
mov
iret
cmp
push
pop
pop
es
jns
clc
push
test
cwtl
roll
dec
repnz
inc
add
lods
or
cltd
stos
es
out
iret
sub
push
pop
adc
dec
and
stos
push
lahf
insl
xor
out
push
ret
in
and
sbb
andl
cmp
outsb
mov
dec
adc
int3
push
shll
dec
xchg
clc
push
cmpsl
scas
adc
pop
mov
stos
jnp
rclb
xor
push
in
fcmovnbe
popa
lea
push
fcoms
mov
mov
sbb
adc
lcall
xchg
mov
testb
push
fcmovbe
push
ss
add
mov
stc
subb
pusha
repz
je
jbe
push
and
dec
fsubl
cli
dec
lods
into
js
fwait
xchg
dec
loop
inc
mov
xchg
sbb
pusha
or
int
dec
in
adc
scas
add
pop
dec
and
adc
cmp
jns
mov
out
push
inc
and
fistl
adc
mov
lahf
mov
or
sti
inc
add
rolb
pop
inc
inc
pop
pop
cmp
enter
rolb
sub
jecxz
dec
mov
sub
sahf
insl
clc
imul
ret
push
lahf
out
int3
lret
fs
mov
js
cmp
aam
adc
popa
les
and
sbb
cmpsl
dec
or
or
cli
add
xchg
dec
sbb
sbb
ds
cmp
pop
in
jmp
aad
mov
dec
rorb
inc
cli
pop
xchg
lock
xchg
test
out
add
ds
mov
xor
popf
pop
pop
popa
mov
clc
nop
inc
cmp
jb,pn
jge
in
aas
jns
shlb
fcoml
sub
xchg
loop
and
pop
popa
out
or
lds
inc
insl
repz
jmp
push
test
sub
lahf
jecxz
or
fstl
pop
mov
push
adc
add
add
insb
lock
cmp
fnstenv
arpl
lret
push
movsb
xchg
jmp
inc
push
inc
sbb
cltd
cmpsl
rorl
ja
and
in
push
mov
fsub
sub
cmp
or
sub
imul
and
pop
mov
addr16
pop
add
mov
mov
pop
push
jns
rolb
into
sbb
enter
push
pop
fdivrs
clc
and
xor
stos
adc
sbbl
add
mov
lahf
js
push
xchg
jb
out
notb
mov
aaa
cmc
pop
clc
lods
mov
pop
lods
cld
ja
jg
int
lock
rolb
pop
loope
aas
push
pop
or
notb
push
in
adc
mov
sub
movsl
in
and
aad
movsb
mov
xchg
out
xor
bound
imul
jb
push
add
outsl
lods
popa
adc
fwait
dec
in
xchg
xor
test
sbb
mov
jle
inc
fwait
imul
aas
cld
lret
sub
sti
xchg
popa
sbb
ds
outsb
cli
out
lret
inc
and
or
cmp
outsl
xor
sub
jno
fidivs
inc
or
es
dec
cmp
js
aad
int3
inc
stos
xor
es
fists
outsb
dec
jns
in
mov
call
dec
shlb
push
mov
fldl
mov
xor
lock
dec
bound
inc
leave
rcrl
and
insb
cmpl
mov
leave
push
mov
repz
ja
jae
xchg
jne
or
xor
sub
or
rcrb
xchg
mov
pop
popf
pop
push
pop
xchg
dec
popf
lret
ss
imul
fisttpl
pop
mov
ret
push
into
outsl
and
pop
mov
pop
or
scas
xchg
repz
shrb
adc
cli
sbb
xchg
leave
jl
into
lret
hlt
imul
add
stc
shll
inc
cmp
int3
and
inc
jmp
pushf
pop
dec
outsb
mov
cld
pop
push
sub
mov
push
or
xchg
das
add
cmpsl
ss
hlt
loopne
lahf
xor
pusha
or
push
arpl
adc
cmp
outsl
mov
cmc
js
xchg
cmpsl
xchg
jnp
cli
in
loope
addb
add
inc
dec
cld
mov
in
mov
jl
imul
adc
push
loopne
jns
add
mov
aaa
shl
fldenv
mov
std
xchg
aad
xchg
sub
dec
mov
sub
inc
push
orl
xchg
jge
and
test
add
roll
push
dec
fwait
pop
ret
jns
jnp
stos
out
pop
test
aad
jae
or
imul
enter
daa
outsl
inc
dec
lret
cli
lods
fnstsw
das
mov
inc
les
jbe
dec
dec
xchg
test
push
scas
adcl
pop
loope
xchg
lcall
inc
or
add
cmp
scas
jb
nop
cmp
jle
pop
mov
push
lds
lcall
int3
pushf
movsb
dec
test
jecxz
pop
stos
cmp
mov
dec
test
pop
cmp
inc
mov
fsts
out
cmp
icebp
mov
arpl
xor
loopne
dec
dec
mov
push
or
lock
push
add
sub
loop
mov
dec
add
and
inc
xchg
push
pop
inc
inc
pop
sub
or
cmpsl
out
pusha
or
stc
mov
mov
mov
cltd
sbb
ss
mov
pop
repnz
mov
rclb
cmpsb
inc
lcall
adc
mov
test
or
xor
mov
in
mov
jle
stos
aam
cmp
cltd
ret
cld
leave
outsb
adc
imul
shll
fpatan
cmp
xchg
pop
loop
stc
test
jns
icebp
dec
pop
jmp
out
shl
test
inc
scas
xor
ret
add
test
fwait
loop
test
lods
je
cmp
push
ljmp
movsl
mov
addr16
or
ret
jb
js
push
ret
iret
scas
shl
jns
or
dec
mov
jne
dec
add
loope
cltd
sarb
pop
lret
movsl
dec
or
adc
push
mov
add
sub
pop
jne
pop
sti
jmp
sbbb
and
gs
xchg
inc
add
or
inc
rorb
int
push
pusha
or
adc
mov
fldenv
push
jmp
push
mov
imul
iret
in
sarl
pop
or
leave
push
sbb
gs
xor
sub
jae
mov
data16
gs
cli
out
sub
dec
gs
repz
push
or
sbb
insl
pop
or
and
sahf
mov
push
hlt
mov
je
adc
pop
mov
push
mov
outsl
imul
aad
rclb
mov
test
sbb
cmc
loop
mov
in
arpl
pop
stc
jge
push
mov
stos
inc
call
add
add
aaa
xor
les
dec
lea
aas
and
leave
or
imul
xchg
lahf
sub
data16
pop
push
lret
jo
aas
mov
inc
xchg
adc
pop
movsl
fnstenv
mov
cmc
adc
jle
mov
add
push
stos
mov
repz
cmp
jns
neg
lea
cmp
js
push
popa
pop
sub
call
je
dec
fs
sbb
or
mov
or
ljmp
and
sub
test
test
je
push
pop
pop
in
imul
std
jbe
xchg
pand
clc
int
out
pusha
into
je
xstore-rng
cmpsl
inc
orl
adc
ljmp
jl
mov
add
pop
adc
repz
jno
push
mov
push
iret
sbb
xor
jecxz
jle
in
mov
cmp
push
xor
sub
inc
jbe
leave
sub
mov
repnz
jns
test
shl
vpsrlq
clc
call
inc
xchg
sahf
adc
pop
test
arpl
xor
aad
mov
cmp
lea
ret
inc
icebp
outsb
mov
fisttpll
addb
pop
mov
lret
or
adc
ret
xor
xlat
loopne
fcomps
sbb
add
inc
mov
out
mov
jae
fdivrl
hlt
lock
sub
and
mov
insl
sbb
jmp
cmp
inc
movsb
jl
lret
daa
sub
xchg
ss
loope
insl
out
clc
popf
jle
jo
movsl
nop
test
cmc
push
xchg
sub
xor
jmp
std
xchg
jmp
rcrl
mov
stc
test
and
or
add
push
add
or
imul
pushf
and
push
push
rolb
dec
pop
aaa
arpl
jp
sbb
sahf
shr
xor
stos
inc
out
and
mov
mov
pop
mov
jno
push
aaa
sbb
jmp
jns
xchg
mul
movsb
lret
dec
xor
dec
pop
sub
inc
cwtl
fwait
inc
cmpsl
and
cmp
xlat
rorb
dec
add
scas
dec
pop
int
dec
out
sbb
hlt
test
cmp
andb
outsl
mov
mov
shl
cmp
adc
les
push
and
xchg
sub
pop
movsl
xor
xlat
pop
mov
xor
mov
push
inc
pop
jmp
enter
pop
aad
sahf
int3
clc
dec
mov
rcrb
xchg
cmp
jle
dec
lods
mov
pop
jg
mov
mov
mov
xor
push
sahf
push
xlat
add
dec
xlat
dec
scas
out
into
pop
add
movsb
gs
push
jbe
test
sub
sub
dec
mov
repz
fsubl
loopne
shrb
cmp
pop
mov
aaa
cmp
mov
pop
mov
stos
xchg
lods
mov
rcll
jbe
dec
aas
mov
jbe
repnz
sbb
stos
ja
xchg
into
push
inc
jne
jnp
movb
xor
push
adc
sub
sbb
lods
mov
and
pop
je
les
push
mov
imul
sbb
out
or
ss
rclb
notb
mov
mov
pop
or
insb
mov
nop
lret
lcall
fldl
ljmp
pop
lret
cmpb
cmp
int
cli
gs
stc
divb
and
and
test
mov
shll
addb
jge
cli
push
ficoml
push
mov
and
mov
xor
sub
mov
repz
mov
sahf
out
je
loope
insl
popa
mov
in
iret
into
popl
push
xchg
ret
dec
push
add
icebp
adc
stos
xchg
das
inc
daa
cs
inc
or
stc
adc
inc
xor
cld
stc
mov
cmp
jmp
ds
sarl
cmp
dec
lock
das
out
mov
xchg
pop
mov
rorl
sbb
or
mov
lahf
or
adc
cmp
mov
cmp
pop
xchg
pop
shlb
in
pusha
lock
dec
push
sbbl
xchg
inc
cwtl
jle
outsb
ja
sub
sbb
mov
jo
push
popa
xorl
sti
test
mov
stc
jmp
rcll
fcomi
mov
daa
push
mov
cmp
sub
inc
mov
out
sbb
inc
test
mov
adc
out
or
stos
adc
int
sub
mov
inc
sbb
xchg
cmc
mov
lea
lcall
out
add
leave
xchg
in
sahf
repnz
dec
push
pop
pop
cltd
sub
adc
loop
mov
mov
ret
fwait
inc
or
enter
adcl
mov
andl
jl
pop
hlt
sti
ror
les
mov
xchg
push
inc
in
jo
cwtl
into
arpl
aas
mov
inc
add
push
mov
mov
inc
es
and
jno
ss
js,pn
mov
dec
fwait
scas
mov
popf
dec
mov
out
loope
push
add
mov
hlt
sbb
inc
sahf
ret
jnp
lds
mov
push
pop
sbb
jbe
out
or
std
cli
inc
xor
adc
or
in
cwtl
sbb
cwtl
mov
fmull
out
std
mov
jne
push
aaa
stos
ret
and
mov
lcall
les
popf
xor
test
pop
push
or
ljmp
adc
adc
jns
mov
pop
pop
ljmp
lock
stos
push
lcall
adc
lea
lcall
inc
test
mov
sub
bound
push
cmpb
dec
lods
or
jl
js
fistps
jg
xlat
pop
dec
sbb
stos
data16
in
ss
jb
jmp
mov
and
lea
loope
dec
sub
push
cwtl
dec
shl
adc
test
es
jp
clc
add
pop
jb
or
jmp
scas
jns
cmp
push
push
or
dec
jbe
mov
fsubl
les
dec
cmp
sub
dec
in
jbe
sub
and
pop
daa
mov
add
hlt
push
jp
jle
push
fmuls
dec
adc
std
xor
movsb
mov
lahf
ja
cmpsb
sub
test
call
clc
or
pop
lahf
pushf
sbb
xlat
es
xor
cmp
sub
js
cli
sahf
lea
mov
es
mov
pop
or
mov
rorb
shr
fstps
popf
outsb
or
scas
aad
cltd
fcmovnu
mov
bound
mov
push
outsb
hlt
mov
ss
xor
fucomip
inc
mov
in
inc
xchg
or
push
js
mov
inc
les
cmc
std
add
dec
cwtl
ja
jl
mov
mov
pop
lock
aam
out
int3
jg
cwtl
std
and
mov
mov
add
shll
pop
cwtl
mov
jb
stos
jnp
es
xor
ss
rorl
mov
or
jmp
fcmovnb
in
lret
jne
decb
cmp
jmp
mov
iret
leave
jb
lcall
mov
aam
pcmpeqw
addl
rcrl
push
push
mov
cmp
and
push
mov
lods
xchg
fs
mov
adc
mov
cld
fucomi
mov
test
mov
jbe
or
mov
inc
xchg
inc
and
dec
repnz
adc
arpl
cmp
sub
push
sub
cmp
ret
mov
sub
int3
mov
cmp
mov
pop
push
es
mov
aad
xor
mov
lahf
push
mov
aas
push
lods
and
jl
push
add
addr16
inc
or
adc
sub
push
and
daa
or
sarb
rcrl
pusha
xor
and
or
cmp
fwait
div
fimuls
mov
mov
cli
adc
sub
mov
xlat
mov
mov
test
leave
sbb
test
in
push
xor
dec
inc
fcmove
aaa
mov
add
pop
ds
jns
scas
in
lock
add
jmp
push
shlb
mov
icebp
call
frstpm(287
cmp
pop
dec
mov
xor
jnp
sub
inc
or
add
inc
int3
cld
cmpsl
movsb
insb
jne
xchg
insl
cmp
push
stc
pop
sub
inc
pop
cmp
jne
push
pop
xchg
lahf
sub
mov
add
scas
shll
pop
pop
and
add
outsl
adc
push
pusha
and
push
call
mov
sbb
repnz
mov
mov
add
mov
je
mov
mov
stc
ds
pop
sub
inc
mov
or
enter
sbb
xchg
sbb
pusha
jge
add
mov
cwtl
mov
xor
mov
mov
repz
loope
loop
sbb
cwtl
out
lods
pop
mov
mov
lods
outsl
js
inc
ds
xor
jb
lods
mov
xor
int
stos
jmp
push
xchg
stos
lods
sub
pop
lods
sub
push
sbb
lock
mov
pop
pop
test
repnz
mov
sbb
pop
loope
jecxz
jle
push
mov
lret
mov
repz
ror
ljmp
and
mov
icebp
adc
in
and
test
adc
or
inc
ja
or
cmp
push
push
loopne
cmp
and
push
push
in
ss
jns
xor
pop
jnp
mov
lahf
xor
or
fsubp
dec
scas
lea
add
addl
addr16
dec
cmp
cld
or
inc
cmpsl
lods
xor
xchg
mov
addr16
jmp
data16
cmp
fisttpl
adc
lods
cmp
imul
gs
xchg
inc
mov
mov
jg
pushl
aas
inc
bound
outsl
mov
jge
cmpsb
mov
sti
loopne
adc
jb
and
jns
sub
adc
aam
loop
stos
mov
inc
and
das
sbb
cwtl
fwait
xlat
inc
ds
fnstcw
or
pop
testb
mov
aam
cwtl
sub
addr16
sahf
mov
mov
jne
stos
dec
fbstp
or
push
les
in
mov
cmc
fwait
lret
pop
in
cltd
insb
loope
xlat
push
mov
cmp
hlt
scas
imul
jb
stos
mov
loopne
mov
pop
arpl
add
xchg
sbb
sahf
lcall
lods
arpl
cld
mov
in
repz
add
xchg
arpl
jl
fwait
cmp
fdivs
mov
mov
lods
mov
out
push
cmc
push
and
lea
icebp
pop
imul
push
enter
popa
or
cltd
test
into
jecxz
cmp
sahf
lea
lods
sub
pop
call
push
xchg
sbb
into
jp
pop
sarl
test
das
lahf
into
mov
push
bnd
cli
pop
sahf
xor
mov
add
jecxz
in
fnstcw
cmp
repnz
mov
mov
mov
push
mov
repnz
movsb
push
cmpb
jae
pop
hlt
and
cs
mov
pop
test
repnz
xor
jns
das
lahf
inc
das
gs
cmp
stc
rcrb
push
daa
pop
or
dec
loopne
loope
inc
pop
loop
mov
out
mov
cmpsb
dec
jns
js
xchg
push
loopne
int
add
test
imul
adc
in
and
cmp
mov
rcrl
repz
movsb
aas
shl
shrl
mov
stos
subb
add
pop
push
pushf
sub
sub
inc
cmpl
fsubr
gs
rol
test
push
out
dec
mov
mov
sti
in
jo
jo
das
arpl
pop
test
inc
mov
pop
sbb
sbb
rcrb
movsb
add
jb
add
jmp
and
mov
aad
jb
jbe
jl
jecxz
mov
jno
and
xor
into
es
jbe
rclb
scas
or
gs
jmp
mov
stos
loop
pushf
out
and
bound
sub
mov
movsl
xchg
jle
xlat
pop
int
pop
jne
inc
mov
lods
ficompl
in
daa
popa
lea
dec
or
inc
mov
sbbb
push
or
sbb
xorb
pop
or
cmpl
or
fnstcw
push
jmp
cltd
dec
xchg
std
fcomps
sbbl
das
sbb
aas
xchg
push
in
pop
mov
pop
adc
incl
cmpsb
push
js
outsl
sub
lds
mov
call
push
mov
xorb
repnz
mov
and
mov
out
das
rcl
pop
push
fs
sbb
es
xchg
in
movsb
stos
add
mov
fwait
test
nop
fidivrl
cmp
push
repz
mov
mov
sbb
sub
mov
outsl
xchg
aad
in
insl
and
jl
sub
loop
dec
aam
pop
lret
jp
mov
pop
jno
jns
inc
cwtl
movd
out
pop
sub
push
jo
jae
adc
xchg
mov
xor
jo
add
cmp
mov
loopne
int
shll
test
cmp
inc
push
fidivl
mov
les
dec
inc
and
sub
lahf
mov
loopne
fwait
sub
sub
mov
subb
outsb
xor
mov
xchg
inc
mov
mov
outsl
inc
lods
mov
and
lret
xor
push
imul
pop
test
popa
jecxz
pushf
cld
rcl
sub
pop
fsubr
repz
std
jg
lret
mov
mov
outsl
inc
xchg
xchg
jge
pop
jbe
stos
fnstsw
cmpsl
ljmp
fnstenv
lods
data16
mov
mov
add
xchg
mov
mov
mov
insb
les
pop
cmp
inc
iret
dec
sub
push
adc
lock
lds
xor
push
push
adc
retw
inc
int3
xchg
leave
ds
out
lds
push
bound
cmpsl
cwtl
daa
mov
xor
push
and
lcall
push
inc
lods
jle
ret
lods
cs
ds
int3
dec
adc
add
adc
mov
mov
jecxz
in
popf
xchg
or
push
xor
or
in
inc
jp
cmpsl
cli
sbb
lcall
cmp
daa
jmp
add
dec
loopne
out
sbb
jmp
lea
or
cmc
mov
movsl
imul
dec
inc
imul
sub
repz
cltd
sbb
push
or
mov
ja
mov
add
ja
mov
cmp
and
ljmp
popf
mov
jg
icebp
les
jae
pushl
xchg
cli
cwtl
fcmovnu
prefetcht0
cs
cltd
xchg
xor
sub
pop
incl
loop
sbb
inc
or
in
pushf
imul
dec
sub
jb
test
xchg
subl
psllq
mov
xor
aaa
fstpt
xor
jle
pop
push
int
daa
push
dec
adc
xor
mov
jbe
dec
or
push
lock
sub
push
call
dec
cmp
sub
pop
out
stos
xor
xchg
ja
mov
add
mov
pop
inc
or
cltd
jbe
and
into
std
mov
pop
mov
add
cli
jge
les
fs
int
insl
addr16
imul
in
stos
xchg
andb
cmpsb
mov
out
pop
call
nop
dec
fwait
xlat
inc
addl
les
outsb
popf
cmp
in
push
mov
mov
mov
inc
sbb
pop
inc
adc
xor
addr16
mov
push
sarl
aam
add
int
mov
std
dec
popf
popa
jbe
repnz
xchg
and
mov
in
jnp
xor
bnd
push
lahf
jo
cmc
sti
xor
push
movsl
push
int
scas
std
mov
lock
cmc
add
push
stos
push
cli
or
sub
std
dec
xor
sub
sub
push
xchg
je
fidivs
sahf
in
scas
adc
div
mov
rcll
mov
divb
adc
or
cmp
dec
ljmp
in
mov
jno
in
mov
out
sar
imull
ja
arpl
stos
popf
into
ja
inc
call
inc
es
loopne
mov
xchg
out
out
sub
xchg
iret
out
inc
ljmp
add
ja
or
push
cmp
and
in
smsw
fs
inc
mov
adc
adc
sub
daa
ds
mov
jno
mov
push
xchg
inc
or
pop
mov
or
out
jle,pt
and
push
jle
add
jo
addr16
push
or
mov
pop
inc
push
and
imul
hlt
pop
jmp
add
xor
cmpb
mov
and
int3
or
pushf
lcall
subb
ss
inc
adc
icebp
jns
test
insl
divl
inc
xchg
mov
jmp
add
add
xlat
push
cmp
lock
jne
in
std
jecxz
sub
jno
in
ret
stos
pop
sti
push
adc
sbb
pop
xchg
dec
mov
loopne
pop
imulb
inc
jmp
inc
es
mov
imul
jae
cmp
sub
mov
or
stos
cmp
je
movl
mov
in
mov
add
dec
adc
push
cmp
cltd
iret
mov
imul
daa
jo
cmc
pop
fbstp
cld
cmp
cmp
loopne
insb
push
jae
push
inc
aas
jl
shlb
incl
test
xchg
cmp
fcomip
leave
popf
mov
ret
or
jecxz
data16
imul
inc
movsb
lcall
ret
shlb
lock
stc
je
sub
push
imul
jno
cs
xor
adc
xchg
inc
arpl
mov
push
mov
scas
adc
jns
pusha
lock
mov
lds
pop
movl
cmp
jmp
sub
pushf
add
leave
jno
or
dec
xorb
push
add
jmp
push
cmp
loope
in
push
std
cmp
cmp
push
xchg
cld
jge
cmc
sub
push
and
dec
or
orl
leave
imul
lret
pop
aad
aaa
int
lret
dec
out
dec
clc
cmpsb
inc
stos
outsb
xchg
cmp
pop
lret
insl
and
movsl
pop
and
insb
or
mov
sbb
adcl
and
mov
outsb
mov
cmp
loope
shrb
pop
push
or
jbe
mov
xchg
push
stc
test
dec
insl
cs
xchg
pop
cmp
inc
cmp
jecxz
or
in
jo
or
negb
add
cmpsb
mov
fldl
mov
bound
lret
cmc
test
jns
inc
xchg
push
dec
push
subb
adc
aaa
jo
or
jne
shlb
imul
mov
inc
mov
nop
es
cmpsl
mov
shrl
sub
mov
cmp
adc
fidivrs
or
or
or
pop
mov
ds
push
iret
jmp
out
or
cmpsl
sbb
lret
cmp
inc
sbb
sbb
push
pop
fcompl
nop
outsb
jns
mov
mov
push
into
push
jae
lock
and
sbb
adc
sub
es
inc
cmpsb
call
push
and
in
iret
rorb
dec
stos
cs
inc
int3
push
cwtl
xchg
cld
mov
xchg
mov
aaa
sbb
pop
imul
int
prefetch
or
pop
sub
ss
mov
int
pop
xor
pushf
dec
pusha
mov
mov
fnstenv
imul
fmull
mov
repnz
or
int
mov
lea
mov
pop
pop
push
jmp
push
lahf
add
das
mov
lahf
cmp
hlt
fadds
outsl
pusha
cld
std
leave
lea
fsubl
jmp
enter
xchg
dec
fucomip
pusha
in
sbb
mov
cmp
outsb
les
out
outsb
pop
out
xor
cmc
les
jnp
repnz
push
shlb
push
leave
shr
jle
sub
and
negl
lret
add
mov
movsb
lods
pop
imul
and
test
push
push
mov
xchg
and
lret
and
ljmp
dec
int3
fsubs
cs
push
dec
pop
adc
mov
xor
decb
adc
push
stos
jnp
popf
dec
push
fwait
xchg
out
iret
jp
push
add
cli
lret
jae
popf
adcl
push
stc
pop
movl
and
add
push
mov
scas
and
fldl
ja
bound
xchg
aam
push
imul
outsb
xchg
gs
mov
sbb
push
dec
test
xchg
pushf
fcomps
pusha
jp
sub
pop
mov
fwait
jmp
or
xchg
pop
enter
aam
dec
push
dec
cld
jle
lret
xlat
in
and
mov
insb
mov
scas
negl
jge
faddl
test
or
mov
mov
push
or
mov
mov
insb
mov
ret
fsubs
sub
xor
outsl
out
ja
mov
or
pop
pop
dec
dec
or
cmp
test
fwait
cltd
xor
hlt
ret
fadd
pop
mov
lock
aaa
mov
nop
aam
arpl
pop
scas
inc
jmp
adc
pop
dec
cmpsb
mov
ficompl
stc
cmpsl
xor
lahf
stos
inc
ds
imul
loopne
stos
in
cs
movsb
push
inc
lock
stos
mov
and
out
jno
inc
je
cmpsl
mov
ljmp
inc
out
daa
rorl
cmp
pop
popa
push
mov
mov
mov
mov
or
in
enter
add
mov
jo
mov
or
aaa
mov
push
fldcw
add
inc
push
push
inc
dec
addb
xor
fwait
lds
pop
fs
js
hlt
or
or
inc
adc
lods
inc
movsl
imul
pop
iret
stos
int
es
test
adc
fldenv
jecxz
adc
xchg
fisttpl
mov
dec
sbb
in
dec
sub
cli
xchg
and
dec
mov
hlt
xchg
mov
loop
mov
mov
cltd
jbe
sub
mov
and
add
leave
out
inc
push
cwtl
xchg
aam
leave
test
not
push
cli
enter
inc
jnp
into
adc
in
pop
or
pop
inc
xchg
in
das
xorb
adc
and
lahf
xor
sub
push
and
loop
mov
inc
jmp
shrb
cmp
jge
mov
xor
das
cmp
movsl
push
push
cmp
rorb
insb
rclb
lahf
pop
sbb
jmp
push
mov
jge
jae
mov
xchg
mov
fisubrs
insl
cmp
fnsave
pop
movsl
and
and
ss
std
stos
dec
int
pop
adcl
mov
dec
lock
sahf
xor
fwait
adc
dec
and
sbb
sub
xor
push
dec
dec
stos
mov
repz
out
outsl
das
sub
mov
jo
cmc
out
mov
fbstp
pop
les
es
repnz
test
scas
dec
lret
or
or
inc
pop
decl
pusha
aad
add
stc
add
lods
repz
and
out
mov
lahf
shlb
pushf
mov
not
sub
sub
mov
ret
sbb
icebp
push
push
dec
push
inc
inc
jno
sbb
and
aad
xchg
mov
es
push
jne
test
mov
pop
dec
lret
or
adc
cmp
pop
shlb
fildl
icebp
mov
or
jne
addr16
jns
and
insb
mov
xor
push
nop
or
dec
icebp
jae
jge
out
xchg
sub
xchg
pusha
mov
jecxz
pusha
fs
jo
cmp
mov
emms
testb
and
popa
lea
or
mov
dec
ja
fcompl
push
xor
sub
mov
sub
lahf
jle
sub
ljmp
mov
push
stos
add
mov
sahf
aam
pop
dec
lods
jl
cmc
imul
iret
jecxz
fdivr
fiadds
je
in
sbb
xchg
and
pushf
or
aad
pop
xchg
add
or
cmp
cmpsl
rcrb
push
std
popf
cwtl
mov
ljmp
jnp
sub
lahf
filds
add
xchg
adc
jmp
jno
mov
jo
xor
jge
aaa
in
outsb
sub
divb
sbb
std
add
imul
mov
in
mov
leave
fucomip
add
pop
mov
aam
inc
pop
fcomp
ret
mov
sahf
mov
cld
pop
cmp
lret
mov
cld
scas
jb
call
rolb
mov
addr16
add
adc
cmc
pop
cmp
sbb
mov
xorb
fildll
sbb
xchg
xor
jae
xor
fcmovu
leave
dec
dec
adc
scas
inc
test
pushf
and
and
insl
rclb
push
mov
pusha
sar
dec
test
std
jecxz
lret
out
lock
imul
bswap
cwtl
jns
mov
xor
mov
pop
scas
add
jmp
sub
mov
push
push
cmp
stos
sbb
lods
mov
sbb
enter
aad
daa
insb
xor
es
rolb
movsl
jnp
sbb
ja
dec
xor
sub
pop
movsl
mov
adc
dec
push
fcoml
or
outsb
insl
ret
jae
outsl
and
lods
das
or
loop
mov
lods
or
pop
cli
loope
aas
into
pop
sub
xor
add
das
add
sub
out
cmp
mov
test
aas
cmc
cmpsb
outsb
dec
dec
sahf
or
inc
ljmp
aad
sub
stos
sub
xor
cmpsl
out
lds
ret
cmp
mov
cmpsb
mov
inc
inc
adc
add
pop
mov
mov
cmpsl
mov
adc
push
fcoms
sahf
aam
les
xor
test
in
add
rep
popf
sbb
xchg
push
cmpsb
or
or
add
mov
dec
jno
push
inc
imul
loope
fsubp
pop
lods
jo
out
dec
mov
repnz
lret
mov
sahf
cmp
decb
lahf
ret
mov
xor
mov
sbb
xor
sahf
leave
rcll
pop
push
jne
repz
in
rcrb
loope
and
cli
mov
pop
or
xor
and
sbb
xor
jns
ret
xchg
sti
inc
scas
push
fisttps
jmp
mov
dec
cmp
jmp
insb
mov
js
in
lret
jmp
adc
mov
das
pop
jne
js
jbe
nop
sub
popa
push
movsb
jecxz
xchg
xor
scas
not
je
addb
jmp
lea
mov
repz
aas
andl
dec
rcll
jns
fdivrs
mov
les
sub
test
xorl
sbb
into
mov
cmp
iret
xchg
insl
test
xchg
orb
push
mov
mov
sbb
fs
mov
shll
imul
xchg
sbb
and
push
xchg
in
sti
nop
bound
lret
sub
adc
ljmp
add
add
and
test
shlb
iret
xchg
mov
nop
test
adc
mov
jge
mov
daa
or
xor
sub
rolb
rcrl
jae
ja
test
lods
cld
leave
gs
inc
dec
mov
test
aad
aas
pop
lcall
insl
pop
ljmp
mov
popf
popa
dec
add
mov
sub
cmpsl
jg
cli
fldcw
jne
sbb
outsb
call
insl
ds
add
in
dec
fisttpl
sub
inc
clc
ret
ss
pop
stos
lods
add
pop
add
sbb
in
pop
pop
adc
out
call
pusha
jns
mov
push
fnstenv
andb
movsb
insl
dec
ja
add
jg
lock
out
dec
pop
ret
or
rclb
subl
mov
jmp
outsl
mov
ss
outsl
cmp
xor
dec
sub
es
stc
and
out
test
test
jbe
pop
jno
rcll
push
fwait
je
lret
and
dec
mull
test
mov
mov
jge
stos
mov
popf
ss
out
adc
addr16
data16
pushf
and
pop
or
or
inc
cmpsb
aad
movsl
stos
imul
aaa
addr16
loopne
scas
mov
fiadds
lret
mov
int3
imul
leave
or
mov
adc
repz
dec
dec
es
cmc
inc
gs
or
in
mov
mul
and
nop
push
aad
push
insb
pop
push
enter
fxch
sbb
daa
std
xchg
sbb
inc
xchg
inc
push
fnstenv
jne
push
mov
dec
adc
xor
ffreep
repnz
jne
call
xchg
sub
sbb
mov
or
vmwrite
loop
push
xchg
gs
inc
xlat
mov
ret
repnz
int
adc
mov
xchg
mov
mov
add
mov
mov
aas
sti
hlt
mov
pop
hlt
test
popf
imul
lods
sbb
test
jb
push
push
test
sub
inc
ror
and
shlb
in
stc
ret
int3
or
xchg
divb
push
jg
mov
xchg
enter
mov
sub
push
pusha
mov
xchg
out
push
or
jb
in
int3
xchg
aaa
mov
lods
es
xor
clc
ret
out
lods
or
or
dec
test
aaa
faddl
jecxz
pop
sar
sub
into
mov
ret
mov
xchg
dec
adc
cs
int
mov
mov
shrb
popa
hlt
or
mov
xchg
or
lret
jp
subl
cmp
sbb
into
ss
inc
push
sbb
lcall
cmp
popf
icebp
adc
stos
in
dec
inc
insl
adc
pusha
jg
addr16
pop
insl
and
sbb
pop
faddl
cli
xchg
stos
cmp
push
jb
mov
rcrl
cmpsb
mov
test
push
dec
cmpl
xor
xchg
stos
lret
sbb
in
stc
call
lock
popf
arpl
es
mov
lret
add
add
hlt
xchg
push
inc
dec
in
sub
inc
neg
jnp
out
xor
insb
popa
jne
popf
fmul
jmp
or
jmp
pop
lock
bound
test
add
dec
pop
pop
lcall
xor
cltd
ja
aam
or
lret
pop
sub
jp
ljmp
and
mov
cltd
push
or
shlb
bound
cmpsb
data16
lcall
push
cmp
sbb
dec
aam
cmp
icebp
and
jp
fsubrs
lds
fwait
js
or
aad
es
shlb
iret
mov
mov
in
ret
mov
adc
or
cld
pop
xor
push
cmpsl
inc
pop
fwait
jge
add
mov
cmpsb
push
add
cld
je
shlb
int
cmp
in
in
mov
ja
dec
cmc
dec
repnz
push
aas
sarl
stos
xor
push
pop
jns
sbb
stos
and
popa
mull
fisubrl
sarl
aas
nop
sbb
add
in
or
jmp
jo
push
fcmovu
insb
xchg
add
sbb
add
outsl
shl
dec
add
mov
mov
push
sub
jae
sbb
in
xor
push
outsl
add
loope
inc
ljmp
addr16
sbb
mov
xchg
or
out
ds
lds
or
jge
int
pop
sahf
and
call
jmp
mov
cmp
ret
adc
stos
insb
loopne
les
in
pop
in
bound
pushf
scas
rorb
inc
out
push
stc
add
pop
addl
out
dec
frstor
push
jmp
imul
xor
jge
mov
andb
clc
and
mov
jmp
adc
in
or
cmp
cmp
cwtl
sti
push
stos
xor
dec
cs
cmpsb
sahf
jle
xor
mov
mov
and
ss
leave
jp
xchg
cli
mov
push
mov
sarl
sbb
insl
mov
pusha
cmp
jl
adc
stos
adc
inc
aam
imul
arpl
and
fsubrl
lret
rcr
push
cmpsb
push
inc
syscall
sub
push
cltd
mov
mov
adc
ror
fwait
enter
ljmp
out
pop
fsubl
popa
xor
aaa
jmp
xchg
mov
inc
jne
mov
pusha
test
lock
clc
lock
leave
popaw
ret
test
imul
daa
sti
popf
jmp
jp
aam
loope
xchg
cltd
movsl
out
and
lds
out
addr16
pusha
jp
nop
jge
insl
clc
stos
xor
sti
imul
adc
adc
cmc
jb
rcll
dec
jmp
xor
lret
and
mov
or
call
dec
jns
sti
jl
jg
push
loopne
test
dec
scas
aaa
rorb
lock
mov
adc
mov
xchg
lods
data16
or
icebp
pop
adc
dec
push
dec
icebp
cld
mov
pop
cld
xor
imul
adc
dec
leave
or
into
mov
cwtl
add
dec
in
or
mov
mov
or
dec
mov
sbb
xor
push
xadd
jp
shr
outsb
mov
xchg
jae
or
scas
pop
inc
imul
xor
mov
scas
mov
out
iret
in
sub
push
aam
cmp
out
cmp
dec
insb
xchg
push
xchg
test
inc
mov
sarl
inc
in
aam
cs
dec
in
xor
mov
fnstcw
and
push
mov
pop
and
mov
pop
js
mov
xchg
and
adc
cli
lcall
mov
fistpl
popa
out
aaa
data16
nop
cmp
cltd
dec
add
jb
or
sub
hlt
lcall
push
pushl
lcall
repz
movsl
cmp
mov
jle
filds
mov
loop
cmpsl
or
cmc
out
cs
mov
shll
ret
jb
gs
dec
lret
jo
pop
outsl
xlat
cmpsl
dec
cwtl
subl
pop
add
jl
push
dec
xor
sbb
dec
in
xor
xor
sti
xor
cmp
sbb
mov
shll
mov
cmp
add
adc
test
fstps
in
sub
cld
add
dec
leave
in
test
cwtl
cmovp
mov
in
adc
adc
pop
insb
cmp
mov
xor
pop
in
or
cmpsl
pop
sbb
test
mov
sbb
xchg
testb
out
jne
lret
and
xchg
xor
iret
push
dec
mov
clc
cmp
mov
ljmp
dec
aam
mov
inc
pop
and
jmp
jns
repnz
jbe
jle
shlb
ljmp
mov
in
cmp
or
jmp
lret
fldcw
add
stos
in
fwait
aam
xchg
dec
dec
cs
adc
sub
lret
pop
and
adc
dec
int
dec
orb
pop
fmull
into
mov
ret
add
xchg
adc
addr16
fisttpll
jp
dec
mov
ljmp
into
ljmp
push
dec
test
fwait
jae
add
hlt
jmp
movsb
dec
cwtl
scas
aad
xor
mov
pop
pusha
and
repnz
insl
and
xchg
scas
aas
xchg
push
mov
push
das
ret
inc
ss
mov
outsb
stos
je
test
movl
sub
in
sub
das
shlb
gs
sub
mov
lret
pop
xorb
push
push
pop
dec
mov
xchg
je
fcmovbe
bound
add
push
test
repnz
jmp
and
loopne
mov
inc
push
jae
int
jo
push
cwtl
xor
je
cmp
pop
cmp
cmc
ss
sub
mov
pop
std
std
jle
dec
mov
push
aas
out
jbe
ret
cmp
dec
rorb
rorl
inc
inc
pop
arpl
sbbl
shrb
mov
cmpsl
mov
insl
jl
sub
in
pop
jns
xor
xchg
and
mov
addb
push
dec
repnz
xor
leave
or
lret
mov
push
dec
or
adc
or
int
fdivrs
mov
cmp
fs
pop
fwait
xor
xor
pop
lret
in
lock
or
pop
push
loope
xlat
xor
sub
adc
sbb
test
adc
fnstcw
stos
dec
dec
arpl
push
aaa
clc
pushf
lahf
push
pop
ds
inc
xchg
pop
adcl
jg
adc
pop
or
call
or
into
mov
pop
xchg
adc
je
imul
push
cwtl
inc
gs
fnsave
add
xlat
cmp
aad
inc
and
adc
sbb
xchg
in
xchg
arpl
adc
clc
mov
cld
sar
mov
and
rcrl
rcrl
ss
mov
mov
cmpsl
mov
gs
cld
push
dec
mov
cmc
or
es
add
or
xchg
push
pop
pop
mov
repz
in
fs
xor
sbb
sar
push
div
adc
rcrb
stos
add
fldcw
icebp
mov
inc
xlat
cmp
stos
dec
pushf
in
jl
dec
insl
daa
into
orl
mov
addr16
cmc
push
and
scas
adc
sti
push
cmp
jns
push
cmp
inc
fmull
push
divb
xchg
test
add
sub
add
jmp
pop
add
stos
mov
nop
call
jbe
jle
cmpsl
add
int3
xchg
jno
dec
and
xchg
das
push
push
pushf
mov
xchg
lahf
inc
and
sub
inc
cmp
adc
mov
aam
sub
cmp
sub
fsubl
xor
in
mov
jle
aad
inc
mov
jp
ja
ret
jno
or
mov
imul
and
and
enter
xor
xchg
movsl
xor
xchg
pop
and
sbb
into
dec
mov
roll
jp
mov
ja
cltd
cmp
notb
push
dec
sahf
or
fsubrs
adc
xchg
cmpsl
xor
jl
mov
je
testb
subl
pop
stos
gs
mov
pop
xchg
mov
ret
cmp
aam
movsl
pop
std
cs
in
bound
push
sahf
inc
testb
sub
cmp
loopne
in
cmc
lock
movsb
and
pop
decl
sbb
es
lret
mov
pushf
ror
pop
xor
push
sahf
and
hlt
call
adc
or
cmp
sarl
loop
jnp
mov
arpl
call
push
sbb
popf
daa
pusha
mov
xor
jl
popa
shll
movsl
rorl
dec
sbb
jl
pop
add
or
mov
ja
into
push
mov
std
mov
imul
aas
pop
mov
or
into
in
push
iret
mov
sub
jge
add
xchg
in
mov
and
mov
cmp
add
lret
ss
inc
pop
add
clc
cmp
cmp
mulps
or
addl
inc
xor
nop
lret
mov
cmp
or
fnstsw
push
cmc
jbe
int3
push
mov
scas
jmp
aam
inc
out
addl
mov
stos
int3
cs
add
push
inc
repnz
cltd
cli
mov
shll
call
inc
push
ret
inc
adc
insb
xor
xor
daa
lret
mov
lahf
pop
cmp
faddp
sbb
push
xchg
into
pusha
xchg
lock
lods
fdiv
push
mov
inc
rep
push
and
mov
ret
mov
roll
movsl
out
lock
and
jns
mov
inc
inc
add
mov
scas
xorb
jne
add
lds
xchg
test
mov
lahf
cmpsl
xor
gs
lahf
aam
mov
cmp
scas
sti
ss
or
negl
out
cwtl
xor
aaa
mov
rolb
test
xchg
hlt
ret
xlat
ds
divl
cmp
enter
and
xchg
push
xchg
cmpsb
push
scas
mov
jge
or
sbb
cmp
pop
lret
pop
test
pop
dec
jbe
inc
mov
fldl
adc
dec
mov
pop
sbb
rcr
jg
subl
daa
sahf
flds
sbb
mov
insl
mov
adc
das
movsl
jp
xchg
lods
push
adc
push
fmuls
cmp
fwait
shlb
xor
repnz
adc
xchg
add
mov
mov
or
adc
icebp
pop
mov
cmp
ret
popf
dec
xchg
and
and
mov
test
mov
sub
sbb
ljmp
insl
imul
jns
mov
ret
cmpsl
pop
fldt
int3
gs
sahf
cmpsb
pusha
mov
cmc
mov
push
bound
xor
frstor
fcomps
lea
sub
adc
fmulp
xlat
cmp
jecxz
icebp
out
cmc
ficomps
ljmp
test
loop
pushf
dec
cmpl
or
lret
ret
rcrb
sub
sbb
lods
mov
mov
int
shr
mov
cltd
push
movb
pop
sbb
rclb
shl
pop
fcoms
and
and
mov
sub
dec
jo
xchg
or
outsb
stc
movb
mov
xor
push
dec
push
sbbb
fildl
and
and
loop
mov
sbb
aad
jl
push
hlt
mov
gs
fidivl
stc
into
ljmp
xor
loop
and
sub
lds
push
add
or
push
adc
push
aas
jno
add
fstpl
push
pop
sti
adcl
pusha
jmp
outsl
int3
ljmp
mov
ror
outsl
push
andb
mov
mov
add
jge
mov
dec
insb
mov
or
cmp
repnz
xchg
pop
and
repz
jb
in
jmp
rorl
xor
pop
stos
adc
jle
dec
insl
inc
xor
inc
mov
xor
inc
pop
add
rclb
out
cltd
out
or
inc
es
pusha
xchg
bound
xor
test
cmp
push
fmuls
pop
mov
sti
mov
mov
lret
sbb
xor
pop
orb
fcoml
loope
mov
pop
sub
xchg
lods
xchg
mov
in
cwtl
and
sbb
push
arpl
in
out
or
or
enter
lret
insl
or
fsts
std
aam
pop
mov
add
pop
lcall
mov
loope
repnz
push
push
jne
mov
jl
insb
test
lods
mov
add
or
and
pop
dec
pop
xchg
test
mov
mov
orb
jne
mov
cwtl
stos
call
sub
shl
jae
lret
jnp
imul
mov
dec
mov
or
in
push
adc
fdivrs
and
fnstsw
xchg
fcoms
mov
mov
cmc
dec
scas
lret
xchg
ret
mov
out
loopne
movsb
das
push
out
repz
mov
fistl
cmp
pop
add
sahf
mov
push
mov
push
aas
inc
daa
sbb
iret
lret
cmp
ds
cmp
mov
pop
mov
push
hlt
push
test
push
cmp
mov
shl
xchg
and
rcl
add
mov
and
repz
scas
fstl
jns
int
aas
hlt
cmp
xchg
xchg
ret
sub
sbb
clc
lret
nop
or
jno
or
dec
gs
xchg
push
iret
mov
cwtl
xchg
int3
lock
loopne
sbb
inc
fmuls
sub
push
xchg
mov
mov
xchg
rorb
inc
shrb
loope
mov
pop
inc
dec
jg
sbb
clc
and
scas
xchg
mov
mov
clc
fcmovbe
dec
shlb
repz
sub
pop
inc
jnp
mov
dec
ret
jbe
adc
ss
and
sub
negl
out
mov
roll
aas
push
push
mov
je
or
incb
push
xchg
push
jle
mov
mov
inc
frstor
jns
andb
dec
cmp
sbb
xor
insb
inc
inc
adc
dec
test
mov
sub
add
sahf
scas
movsl
sbb
out
push
xchg
mov
fscale
lods
mov
ss
mov
test
out
cmpsl
icebp
pop
call
popa
leave
add
lret
cmpsl
daa
mov
insb
call
mov
xchg
gs
pop
testl
sbb
sahf
iret
daa
pop
pop
fwait
aaa
std
movsb
pop
insb
pop
mov
sub
and
lret
xor
xor
jns
int3
sbb
cmp
pop
push
mov
ret
mov
std
cmpsb
cmpl
mov
lea
cli
sub
cmpsl
xor
pop
lret
cld
movsl
push
sub
dec
mov
popf
and
lods
imul
jmp
fstl
sbb
or
divl
dec
sbb
pop
nop
mov
loope
jecxz
push
pop
cwtl
popa
fs
mov
sbbl
shrl
adc
sti
xor
movsb
push
mov
fs
inc
add
dec
sub
shll
or
pop
scas
repnz
adc
fs
pop
jecxz
lcall
push
xchg
addr16
imul
cmp
mov
xor
xor
das
loopne
sbbl
loopne
loop
push
mov
sbbl
addr16
inc
push
pop
mov
hlt
gs
xchg
sbb
std
out
test
imul
into
add
dec
jb
push
cmpsl
std
imul
rcrb
or
out
call
pop
rorl
frstor
popf
cmp
pop
sbb
dec
add
sbb
lea
xor
push
loope
je
stc
adc
repnz
cld
push
add
mov
jne
pushf
sahf
ds
std
mov
jg
jo
pushf
daa
push
imul
xor
fwait
popa
mov
xor
movsl
sub
sub
sub
mov
xor
pop
js
cmp
inc
dec
push
call
fldl
pop
pop
inc
xchg
or
and
xor
loopne
stc
or
insl
or
mov
and
mov
out
xchg
mov
push
sbb
fisttpll
pop
ret
xor
add
stos
mov
daa
in
xchg
ja,pt
imul
inc
rorl
iret
popa
sar
les
outsb
jl
int
cld
jecxz
push
popa
mov
cmc
mov
and
cmp
jg
dec
sub
aaa
lea
inc
dec
stos
aad
stos
dec
fnstcw
jg
pop
or
inc
sub
fs
lods
and
cmpsl
and
fldt
jne
rolb
or
adc
jp
cmp
bound
sbb
test
fs
mov
cmp
xchg
stc
aas
and
jge
mov
add
dec
xchg
mov
hlt
imul
and
mov
loop
lret
jg
fdivr
ss
sbb
mov
pop
push
fcomip
mov
mov
add
and
imul
inc
ficompl
das
add
nop
loop
adc
insl
imul
out
sub
mov
cmp
ret
push
addr16
imul
sub
std
xchg
std
mov
mov
repnz
insb
lods
mov
insl
loope
and
or
out
ss
lret
hlt
js
notb
jno
cltd
lret
mov
clc
imul
jmp
fsubs
rcrl
pop
lcall
ds
icebp
enter
inc
ds
shr
dec
add
addr16
mov
daa
mov
imul
mov
dec
test
mov
mov
adc
cwtl
mov
xchg
xchg
jbe
push
push
sbb
sar
mov
and
pop
mov
inc
mov
leave
mov
xor
paddq
lds
push
inc
sbbb
push
mov
fs
or
ja
jmp
fwait
popl
mov
cwtl
pop
mov
mov
cmc
std
jg
dec
pop
jns
mov
mov
jae
lods
es
rcll
mov
jb
ret
or
addl
in
adc
xchg
pop
sysenter
mov
sub
lock
jne
lahf
dec
xchg
add
repnz
or
push
cmp
push
aam
shll
fistps
cmp
les
loope
imul
pop
cmpsb
loop
push
xor
sbb
sbb
insl
inc
and
pop
inc
or
fwait
or
mov
and
pop
mov
pop
ror
push
rep
pop
sti
lock
pmaddwd
and
jne
cmp
sbb
in
leave
popa
xor
ret
into
and
fstpt
popl
mov
sub
sbb
jns
cli
in
add
cmp
mov
or
xchg
add
pushf
movsb
add
cmp
data16
lods
xchg
sub
stos
push
fsubl
fcoml
std
fwait
pop
in
adc
std
jbe
mov
push
rorb
mov
xor
add
lea
adcb
leave
jns
and
jbe
mov
mov
push
sbb
sbb
dec
in
xchg
pusha
and
mov
ret
mov
enter
stos
sub
mov
or
outsb
mov
stc
push
fnstcw
xchg
mov
jno
mov
and
sbb
dec
arpl
enter
in
cmp
push
lods
test
sbb
sbb
or
lahf
push
sub
inc
adc
pop
xor
mov
push
jl
fimull
mov
jle
and
mov
xchg
mov
stc
add
ds
int
pop
xchg
scas
jbe
push
adc
ds
stos
push
xchg
pusha
in
jecxz
push
jb
xlat
adcl
cmc
dec
add
insl
mov
adc
pop
test
pop
test
jo
pop
bound
dec
fs
hlt
xchg
incb
ret
ds
fdivl
sbb
fcomi
cmpsl
mov
cmp
jbe
cmp
out
fcoms
aad
test
push
outsb
pop
repnz
insb
arpl
out
dec
mov
lds
rcll
mov
jecxz
cmc
out
insb
mov
mov
fdivr
aaa
in
sti
jne
add
test
mov
mov
cmp
lret
mov
xchg
testb
sbb
int3
lea
sub
scas
call
outsb
dec
mov
das
pushl
mov
ficompl
fildl
cmp
clc
xchg
and
and
sub
xchg
rorb
call
aaa
rclb
outsb
pushf
xchg
add
pop
sub
and
lcall
dec
dec
or
xor
inc
mov
test
adc
and
clc
xor
daa
insl
or
jmp
fsubrs
mov
xchg
test
and
lock
mov
mov
fnstcw
daa
pop
stc
adc
lret
nop
sub
shll
aas
sarb
les
or
or
pop
and
push
sbb
fmull
test
imull
adc
test
xchg
mov
jl
aam
xor
pop
imul
pop
jb
sub
test
iret
into
add
std
mov
vmptrst
stos
pusha
jne
pop
insl
fs
fcoms
mov
cmp
and
xchg
pop
out
test
mov
or
inc
in
popa
cltd
lods
repnz
xlat
inc
or
or
sub
int
xchg
push
je
repz
incb
mov
sub
ljmp
lret
and
push
xorl
mov
mov
imul
and
cmp
mov
xlat
ja
push
loop
stc
add
mov
popa
ret
push
repz
mov
aaa
sbb
push
outsb
aaa
push
cmp
les
lret
inc
je
jl
or
ret
push
out
adcl
jns
cwtl
mov
xchg
div
out
cmp
andb
lret
sub
stc
xor
pop
mov
hlt
lds
cmc
push
aam
lods
int3
loope
leave
gs
and
lock
add
testl
ss
xor
push
adc
sti
adc
xchg
sbb
lds
add
and
loopne
jnp
scas
into
lcall
xchg
sbb
or
xor
inc
cmp
sub
sbb
cmp
stos
das
wrmsr
in
xor
push
jb
xchg
inc
mov
mov
test
pop
and
cld
mov
sar
mov
lds
pop
jge
out
in
idivl
lahf
shll
cmp
pusha
mov
inc
sbb
stos
pop
in
repnz
add
out
mov
clc
cmp
fistpll
push
arpl
fwait
jp
scas
sub
push
push
fbstp
fwait
lods
adc
pusha
aas
dec
inc
leave
mov
sbb
stos
lret
ljmp
or
das
repnz
rcll
xor
cmp
shll
sti
xchg
mov
jp
outsb
add
inc
int3
mov
push
or
mov
mov
imul
stos
cs
hlt
cmp
add
mov
into
divl
or
and
mov
les
flds
push
iret
into
daa
inc
pop
mov
inc
cs
cmp
aaa
ss
or
jne,pn
jmp
rcll
pop
inc
rcrl
out
xor
js
test
xlat
loopne
into
sbb
mov
push
aaa
dec
in
lahf
repnz
mov
mov
dec
pop
mov
xor
xor
fcoms
sbb
iret
repz
push
inc
jnp
pop
adc
sub
dec
push
xchg
mov
movsl
cli
ss
xor
xor
cmp
inc
xor
sub
pushf
fisubs
in
fnstcw
push
enter
ljmp
dec
pushf
push
lcall
push
nop
xchg
push
add
xor
pop
sub
cld
fimull
or
sbb
daa
rolb
adc
imul
xor
lea
mov
mov
xchg
nop
in
mov
sub
shlb
push
imul
aam
inc
in
dec
mov
dec
push
out
arpl
ljmp
neg
fld
push
popf
xor
out
stos
fwait
or
insl
pop
and
sub
xor
in
or
outsl
push
comiss
lock
in
jno
add
lock
bound
jb
adc
lea
fstps
ljmp
add
xchg
cmpsl
addr16
and
jmp
and
inc
data16
insb
dec
mov
outsb
mov
mov
xchg
push
cmc
sub
mov
inc
imul
stc
sub
pop
jecxz
pushl
ljmp
les
push
in
or
outsl
and
ret
mov
data16
arpl
inc
xlat
das
fiaddl
out
push
scas
and
pop
ret
mov
loope
loop
inc
rcrb
mov
stc
and
add
nop
cmp
jmp
test
call
jmp
jnp
mov
shl
out
cmp
movsl
add
sub
jmp
push
add
mov
mov
jmp
jnp
je
mov
or
in
cwtl
sahf
jnp
imul
call
mov
cmp
loop
fsubrs
ret
jns
mov
sub
sbbb
pop
inc
dec
scas
xchg
imul
fbstp
jp
cmp
mov
jge
jge
inc
add
pop
cli
pop
scas
push
test
push
pop
vpsrad
dec
mov
inc
mov
rolb
adc
push
add
xchg
fs
push
fnstsw
mov
push
stos
jmp
dec
inc
jle
arpl
adc
rclb
fsts
dec
pop
and
xor
int3
xor
xchg
mov
push
add
and
jmp
adc
lock
jmp
jo
pop
int3
add
divl
sbb
outsl
fucom
push
pop
bound
xor
fidivl
dec
jb
pop
outsb
popf
popa
ret
sbb
test
xchg
xor
push
sahf
dec
loop
into
sbb
cmp
in
xor
push
and
idivl
popa
jns
adc
xchg
inc
popa
mov
add
enter
aad
mov
hlt
cltd
lahf
jecxz
sub
add
inc
fisttpll
jo
subb
sbb
jecxz
cltd
cs
xor
mov
loop
jle
fbstp
jmp
por
and
scas
mov
xchg
inc
or
add
leave
inc
dec
dec
test
xor
ds
jo
adc
mov
mov
jbe
cld
jle
jbe
ljmp
loop
jg
inc
push
xor
xchg
xor
ja
aam
inc
push
or
insl
inc
test
stos
in
jp
lret
dec
sub
xor
sahf
add
jg
cli
jp
stos
sbb
int
pop
mov
inc
lret
and
movsb
aad
dec
mov
in
cmc
add
xor
nop
shrb
cli
into
jno
push
pop
inc
popf
in
rcl
insl
add
lock
test
and
sbb
dec
adc
cmpsb
loopne
jae
in
test
mov
mov
les
dec
mov
out
scas
push
push
ljmp
inc
cmp
push
mov
mov
leave
sbb
mov
sarl
imul
lds
test
aas
cmp
stos
jle
clc
add
inc
adc
shll
dec
jmp
rcrb
mov
hlt
loope
loope
js
into
subl
fwait
push
lock
pop
int
cs
cs
inc
pop
mov
out
sahf
cltd
mov
ljmp
pop
push
repz
js
jge
xor
or
jb
jle
cmpsl
fs
cmp
push
cmp
adc
fs
lds
pop
xchg
aaa
push
or
mov
incl
popf
imul
or
mov
dec
xchg
mov
test
cmp
data16
jg
sbb
cmc
inc
out
jne
fstps
aas
test
sub
mov
ss
fildll
or
mov
loope
xor
add
divb
stos
or
jmp
pop
jno
cmp
pop
jge
stc
gs
out
dec
lret
popf
fyl2x
and
sbb
inc
inc
sbb
lret
dec
push
xchg
rcrl
mov
jbe
scas
pushf
or
xchg
std
mov
adc
test
fsubrl
arpl
lahf
xchg
dec
jge
mov
sbb
fmulp
cld
pop
ret
jnp
xor
push
sub
std
push
jmp
jo
je
add
push
cmp
dec
pop
movb
push
xchg
scas
sar
into
sbbl
push
fmull
popa
pop
pop
xor
lahf
pusha
sub
lds
mov
xchg
xor
and
pop
icebp
fwait
or
mov
ret
insl
daa
dec
jle
stos
jb
insl
mov
in
jle
add
or
jbe
aad
sub
incb
fcmovnu
in
lods
jbe
jbe
scas
stos
rcrl
nop
mov
add
das
loopne
cmc
std
movsl
inc
test
inc
pop
and
jg
int3
or
sbb
test
mov
push
and
int
jne
add
and
imul
insl
or
movsb
cmpsb
xor
or
jne
add
sub
mov
inc
dec
sbb
lret
insl
dec
xchg
cli
sbb
jo
cmp
dec
inc
je
pusha
cmp
arpl
mov
sub
or
ret
sub
push
mov
lea
mov
cmp
mov
xchg
data16
mov
je
sub
or
sub
fsts
sub
mov
hlt
loope
out
sub
daa
push
test
ds
ficoml
das
fnstcw
inc
bound
movsl
xchg
sbb
mov
jmp
cwtl
and
or
std
jno
add
fiaddl
dec
lret
shll
jns
jge
push
adc
mov
aaa
aaa
popa
out
ds
cmp
pop
movsb
out
xchg
stc
popa
jno
bound
sub
mov
jns
or
es
dec
ret
dec
adc
sti
mov
add
out
out
pop
popf
sbb
add
jns
rolb
imul
into
test
or
in
dec
mov
adc
and
mov
or
arpl
xchg
pop
enter
pop
ficompl
rcrl
pop
dec
dec
push
popf
pop
push
mov
push
cwtl
push
aam
mov
int3
inc
jbe
out
movb
and
sarl
cmpsb
adc
rol
xor
mov
mov
negb
sub
xor
leave
pushf
jmp
out
rolb
dec
mov
xlat
adc
sti
push
fwait
and
push
push
pop
nop
sub
xchg
mov
fimuls
lret
or
and
jmp
in
xor
bound
mov
dec
jno
lahf
arpl
cmp
fwait
shr
add
jp
test
xchg
ror
cs
rolb
mov
repnz
mov
sub
and
aaa
call
das
scas
icebp
sti
cltd
dec
push
stos
cmp
add
icebp
mov
mov
nop
jg
outsl
inc
jno
and
xchg
or
pop
fists
out
push
stos
push
mov
imul
inc
outsl
popf
aas
mov
hlt
mov
insl
imul
call
aad
or
mov
adc
loop
cmp
mov
loopne
and
jle
shll
in
in
or
lret
ss
leave
sarb
inc
and
mov
mov
mov
aad
mov
fsubl
in
in
mov
and
out
pusha
inc
aaa
inc
in
fstps
test
xchg
and
test
stos
std
inc
add
dec
arpl
jno
pop
and
stos
int3
aas
icebp
fwait
add
roll
lea
gs
scas
jno
mov
mov
lods
xlat
cmc
pop
inc
mov
pop
dec
loopne
xor
dec
inc
jl
mov
inc
dec
orl
push
pushl
xchg
jb
clc
sbb
mov
js
pushf
imul
out
in
mov
xor
mov
shrl
xor
push
js
pop
add
and
push
xor
pop
jbe
into
or
sbb
rolb
imul
jnp
scas
push
jle
sahf
in
pop
daa
negb
mov
je
push
or
mov
push
add
mov
dec
add
cwtl
xor
mov
loope
pop
sar
loope
and
sub
out
scas
inc
cmp
xor
sahf
std
in
adc
xcrypt-cfb
cmpsl
and
aam
pand
sarb
mov
out
pop
pop
scas
enter
shrb
in
stos
mov
push
pop
add
lock
mov
fldt
cs
mov
clc
mov
mov
sbb
mov
xor
hlt
xor
push
lret
outsb
cmpsl
stc
cmp
sub
lock
popa
sub
arpl
adc
xchg
dec
movsl
pop
cmp
loope
shll
gs
sbb
repnz
pusha
sub
push
popf
addr16
divb
cmc
movaps
mov
cs
dec
sti
dec
stos
lock
aam
repnz
arpl
mov
mov
lcall
lret
push
push
test
sbb
mov
or
stc
dec
cmp
push
test
dec
dec
push
xlat
mov
jp
pop
clc
push
jns
cmp
push
repnz
pusha
sub
aaa
ljmp
pop
jg
cwtl
lods
and
fwait
xchg
out
inc
inc
mov
mov
ja
jmp
pop
out
fcoml
ja
lds
lret
fnstcw
mov
shll
clc
cmp
ror
jbe
dec
in
fs
push
jns
push
adc
ljmp
inc
out
repnz
xchg
mov
outsb
cwtl
xchg
cmp
out
psrld
xchg
mov
mov
sub
out
cmpsl
jo
mov
das
imul
pop
adc
andb
mov
movsb
icebp
into
pop
loopne
or
inc
ja
out
pop
mov
inc
push
adc
mov
or
lcall
mov
push
pop
movsl
pushf
inc
insl
jg
pusha
inc
and
sbb
rcll
xor
daa
sbb
push
loope
xchg
push
fidivl
pop
push
dec
cmpsb
clc
rep
jp
and
jge
shl
inc
fwait
pop
xor
loop
stc
pop
push
xor
and
dec
in
mov
push
ljmp
mov
cmp
xor
mov
mov
dec
sahf
cmp
xor
shll
mov
jle
jmp
mov
pop
sbb
adc
cmpsl
sub
inc
jnp
pop
loopne
cmpsl
in
pop
test
daa
push
pusha
jne
mov
cmpb
in
cmp
scas
cwtl
in
test
xor
mov
lods
lods
daa
sbb
loopne
sbb
sarb
in
inc
push
sbb
fldlg2
sti
outsb
outsb
aam
sahf
or
scas
push
mov
sbb
pop
sarb
jb
ja
jnp
jecxz
add
mov
loop
adc
xchg
adcb
rclb
cmp
fmull
clc
inc
out
push
and
insl
ds
je
mov
jmp
mov
or
xor
xor
cld
lret
insb
lea
jmp
jmp
mov
dec
xchg
mov
push
mov
cmpsl
ffree
jl
jb
sbb
loop
push
push
bound
ror
jae
sub
and
popf
mov
xchg
xchg
adc
clc
pusha
add
es
pop
dec
insl
pop
and
js
movsw
fcoml
mov
and
or
xchg
sub
ret
loop
push
and
ds
rcrl
adc
sbbb
out
jle,pn
test
push
scas
leave
out
dec
xor
mov
mov
xlat
jp
mov
jae
stos
add
out
aaa
fidivs
fst
std
cld
imul
imul
out
insb
jmp
idivl
stos
lcall
das
ljmp
push
ja
fsubl
xor
or
gs
ljmp
lds
or
jb
test
insl
pop
ja
add
jecxz
fadd
ret
leave
cmp
jecxz
shl
push
test
sar
test
xchg
fbld
ljmp
and
stos
jo
movsl
push
hlt
xor
xchg
cmp
add
test
rcrl
fsubr
sbb
lods
fcomps
push
mov
add
pop
mov
sub
adc
fldenv
sahf
and
dec
iret
mov
into
sbb
xchg
push
add
rorb
stc
sub
subl
data16
andl
ret
sti
xchg
and
jl
test
and
jmp
jb
cs
shlb
mov
mov
add
mov
out
popa
test
dec
movsl
and
sub
or
jmp
dec
mov
iret
pop
movsb
shlb
cmp
je
mov
and
dec
adc
jne
mov
mov
xor
jge
mov
jmp
push
xchg
cmp
adc
cmp
scas
xor
mov
loope
enter
dec
test
inc
test
or
fstl
mov
xor
aam
fwait
cld
sbb
pop
xchg
xchg
mov
cmpsl
dec
pop
push
outsl
gs
lcall
inc
add
cmp
in
icebp
sub
das
push
pop
frndint
fdivr
cs
cld
pop
lods
sarb
mull
test
or
fs
push
xlat
enter
movsl
stc
mov
add
sbb
push
xor
lea
sbb
inc
mov
jb
mov
mov
push
push
icebp
xor
add
mov
jge
cs
rcll
mov
sbb
stos
stc
cmpsb
imul
jae
rorl
lret
mulps
icebp
jmp
mov
and
inc
out
push
sbb
addb
mov
pop
std
push
popa
mov
mov
dec
cwtl
xor
add
push
fwait
xor
mov
xchg
xchg
mov
jnp
cmp
test
outsb
std
xchg
jg
jp
sub
dec
xor
leave
in
test
das
js
fucom
xchg
mov
or
mov
data16
loope
inc
mov
pop
fldl
std
mov
lods
fdivl
cmc
loop
outsl
mov
clc
test
out
int
mov
jl
sub
fcoms
int
and
cld
mov
adc
pop
dec
fsubrs
stos
add
fdivp
pop
sub
mov
mov
mov
pop
lret
icebp
out
les
cmc
lcall
sbb
xchg
or
jecxz
pop
popa
movsl
orb
push
sub
enter
enter
pop
mov
or
jo
push
pop
inc
ss
aas
mov
push
stos
test
push
pop
or
and
adc
and
jp
mov
pop
push
adc
inc
add
mov
dec
pop
sbb
pop
addr16
es
sti
inc
mov
test
imul
in
or
aaa
push
or
ljmp
stos
add
fcoms
pop
sbb
inc
and
movsl
int3
xchg
push
call
insl
les
rcll
cli
xor
cmp
mov
rcl
fnstcw
and
rcll
daa
jmp
or
xchg
insl
jecxz
mov
fnstcw
repnz
lahf
sbb
jae
fsubs
mov
and
adc
sub
push
mov
notl
add
or
lods
or
repnz
into
and
fucom
pop
lret
pop
sbb
sbb
xor
pushfw
mov
or
scas
aad
pop
xor
xchg
push
inc
bound
fimuls
cld
sub
adc
iret
loopne
mov
push
movsb
dec
bsf
jo
loope
xchg
scas
divb
and
adc
cmp
jg
sbb
rclb
pusha
lods
jb
rclb
fstpl
dec
sbb
js
or
cmp
lahf
push
push
add
hlt
mov
mov
push
nop
sub
iret
imul
ret
inc
and
pop
nop
cmp
push
xor
xchg
xor
lahf
add
sbb
mov
sahf
and
in
jno
adc
aaa
push
sbb
add
movups
xor
mov
mov
cmpsb
add
inc
or
dec
push
xor
mov
sub
push
loopne
adc
rol
mov
arpl
cmp
pushf
xlat
pop
and
loope
sub
add
loope
jge
gs
test
mov
mov
repz
inc
push
or
jecxz
dec
sbb
shrl
xor
sarb
inc
outsl
mov
out
fdiv
stos
mov
pop
lret
cmpb
test
shll
in
fidivrs
jno
inc
test
or
adc
stc
jg
xlat
iret
cmp
jle
mov
inc
arpl
push
repnz
inc
ret
mov
fs
inc
xor
sbb
stc
dec
inc
xchg
iret
jnp
xchg
loope
test
ret
pop
dec
andb
mov
sbb
xchg
mov
push
push
loopne
and
ret
cmp
xchg
jne
sbb
data16
push
repz
and
ja
inc
orl
jbe
pop
pop
mov
or
xor
dec
stos
scas
or
out
and
fisttpll
jle
in
js
jae
inc
mov
rcll
int
jle
movb
xchg
call
jg
pop
or
in
xchg
pop
out
arpl
inc
dec
ds
scas
cltd
jge
lahf
jno
imul
jne
imul
cmpsb
and
jg
out
popf
stos
cmp
pop
push
jae
test
iret
jb
xchg
mov
in
push
lds
xor
push
dec
adc
inc
xchg
gs
xor
pop
icebp
outsb
sbb
inc
dec
jmp
pop
popa
orb
jp
push
in
insl
nop
rorb
stc
ficoms
loop
or
cmp
cltd
shrb
jae
repnz
and
aas
sti
popf
cmp
popa
adc
pop
fisttps
inc
jg
and
in
adc
movsb
lds
pop
inc
and
dec
sub
aas
push
es
out
pop
enter
repnz
inc
adc
inc
mov
add
sub
fisubl
bnd
pop
inc
xchg
hlt
call
xchg
push
lods
fstl
cmp
cmc
out
dec
mov
ja
add
sbb
add
jge
sbb
iret
inc
outsl
mov
cld
ds
add
cmpsl
fists
ds
test
cmp
test
mov
pop
push
fsubrp
cmp
movsb
ret
nop
sbb
lods
mov
cmpsl
add
popl
mov
dec
xor
sbb
fistpll
sbb
xor
or
jmp
sahf
movsb
xchg
or
es
mov
movsb
xor
add
in
outsb
pop
dec
or
aas
xor
and
cs
das
pop
lcall
add
popl
test
in
mov
mov
sub
fs
push
loope
xor
mov
xchg
dec
mov
repz
lds
xor
cwtl
stos
xor
jb
dec
sahf
sbb
aas
ror
cmp
sbb
and
dec
jmp
out
dec
in
mov
lock
lahf
sbbb
aaa
daa
xchg
aas
cmp
in
testl
out
adc
fcompl
dec
xlat
pop
jg
fsts
push
mov
dec
mov
dec
push
cmp
mov
ret
repnz
inc
aaa
xor
mov
pushf
cmp
bsr
pop
inc
popa
fwait
mov
mov
roll
sbb
das
and
sbb
fst
in
lods
ret
fdiv
sbb
movsl
cmpsl
push
leave
out
les
xorb
jl
insl
fmuls
adc
in
push
push
into
xchg
xchg
sub
mov
fldcw
into
sub
loop
ss
dec
outsb
push
inc
jnp
sub
int
push
insb
test
xor
dec
jno
xchg
imul
cs
gs
imul
xchg
sbb
jb
ja
jmp
lret
mov
movsb
cld
iret
fsubp
add
mov
call
adc
mov
idivl
mov
dec
cmpl
mov
mov
cmp
cmpsb
fnsave
cwtl
lods
aam
and
das
and
dec
and
xlat
mov
inc
push
dec
cmp
in
push
popf
fcomp
cmpsl
cmp
das
test
dec
popf
sbb
leave
std
fidivrs
push
jb
jno
push
push
xchg
ret
xchg
popf
xor
std
adc
and
lcall
loope
xchg
std
imul
jnp
add
xchg
scas
add
push
mov
lret
dec
jb
movsl
cmp
push
jl
push
fsubr
add
lds
repnz
dec
push
jmp
xchg
cld
out
xor
inc
mov
jb
scas
cmp
ds
daa
leave
sahf
sub
mov
or
xchg
xchg
and
and
mov
out
xor
mov
pop
dec
mov
ja
mov
cmp
dec
dec
push
sub
xor
daa
in
push
adc
and
sub
cmpsb
andb
outsb
add
push
cltd
cmc
lds
xchg
push
stos
pop
cmpsb
fisttps
das
je
sub
mov
sti
lock
in
js
scas
sub
jl
cltd
arpl
mov
xor
sbb
and
or
and
repz
fsubp
outsb
mov
xor
dec
jg
rclb
loopne
rorl
mov
fsubl
inc
lret
pop
lcall
push
dec
xchg
imul
popa
sub
inc
add
lahf
scas
dec
popa
icebp
adc
sbb
dec
push
orl
xor
mov
int3
jo
and
cmpb
scas
cmp
push
or
cwtl
pushf
cmp
jg
jecxz
xlat
mov
pop
and
repz
xchg
mov
out
aaa
dec
sub
push
int3
shrb
jp
arpl
out
in
out
or
ficoms
jo
int3
in
xor
call
mov
out
aam
add
cld
adc
mov
jle
lahf
or
pop
jmp
mov
mov
int3
sub
xchg
test
sub
jns
test
xor
jnp
xor
cmp
push
xlat
inc
xor
lret
test
scas
pop
cs
push
jg
cli
dec
inc
jge
stos
dec
inc
add
fstl
sub
mov
out
jl
add
dec
lret
aaa
mov
in
push
hlt
pop
ja
mov
dec
mov
inc
lret
sub
ss
push
cmc
add
lret
cmp
shll
lahf
cmp
call
mov
cmp
push
les
int
inc
jne
insb
sbb
push
fldenv
add
outsl
pop
cmpsl
inc
cld
inc
sti
in
sbb
cwtl
dec
in
lods
cmp
aad
fdivr
ret
movsl
jmp
xchg
insb
testl
xchg
leave
mov
dec
mov
movsl
lods
rep
push
mov
pop
or
xchg
cld
hlt
push
xchg
das
push
outsb
add
fcoms
push
ret
dec
sti
push
sub
mov
sahf
aad
mov
jmp
lea
sbb
shl
push
rcrl
pop
lahf
jbe
subb
xor
mov
out
enter
fsubr
add
cmp
es
stos
sub
push
int
nop
mov
mov
cmpsl
or
mov
sbb
pop
cwtl
in
insl
adc
push
fs
pop
inc
sub
xor
jge
push
cmpsb
pop
cmp
fxtract
push
xor
sub
outsb
ss
iret
sub
sbb
rcrl
mov
fimull
in
fisubl
lret
push
gs
xor
sub
fimuls
add
mov
iret
imul
mov
inc
inc
and
lea
das
fsts
sub
sbb
bound
in
push
cmpsl
sbb
jns
and
cmc
arpl
pop
lret
imul
push
mov
push
mov
mov
and
push
movsl
or
int
pop
push
jnp
out
jns
pusha
stc
sub
and
inc
cmp
add
xor
mov
pop
rcrb
lock
scas
push
sub
int
and
dec
andl
aam
pusha
xor
adc
add
rcrb
aam
imul
jmp
pop
mov
icebp
ret
mov
lea
imul
xchg
fisubs
and
push
test
lea
fildl
clc
mov
jp
add
sbb
jnp
jge
push
int
ret
xchg
adc
xchg
lds
xchg
push
in
dec
mov
xor
sbb
xorl
inc
mov
fs
adc
dec
xor
xchg
shr
push
xor
pop
fwait
xor
jbe
lret
and
inc
hlt
das
imul
out
ljmp
dec
jecxz
or
sub
outsl
dec
mov
in
adcl
ds
scas
jno
inc
sub
sti
jp
sub
jbe
mov
hlt
mov
lret
movsb
dec
outsl
icebp
arpl
adc
sbb
mov
popa
cltd
out
repnz
sbbl
push
ret
pop
neg
rep
ret
pop
or
pop
scas
xorl
hlt
ffree
adc
inc
add
dec
dec
push
sub
ja
mov
psllw
mov
sti
sub
mov
jbe
add
ss
testb
mov
push
vorpd
dec
push
out
push
push
pop
xor
add
adc
popf
cmc
and
cmp
icebp
hlt
pusha
cmc
add
movsl
outsl
fcmovne
xchg
jno
dec
and
sbb
mov
scas
aam
popf
lcall
int3
ljmp
shrl
popf
popa
out
nop
push
mov
pushf
add
insl
xchg
sahf
gs
fcmovnu
sbb
pop
pop
pop
stos
dec
cmp
push
mov
pop
lods
and
jb
jecxz
and
add
mov
xor
mov
scas
jecxz
shl
andl
push
push
fwait
ds
jae
arpl
shll
add
fnstsw
jecxz
fildl
and
loope
push
sub
and
dec
pop
pop
jge
and
xchg
lea
mov
inc
sahf
shrl
push
test
scas
inc
popf
jle
mov
xor
sub
xor
leave
movsb
mov
or
jne,pn
inc
pop
je
lahf
aam
xor
xchg
dec
inc
add
cs
call
or
lock
xchg
adcl
push
sub
lds
popa
dec
xor
mov
dec
xchg
cmpsl
jle
sub
mov
dec
lret
stos
push
mov
xlat
int
lcall
adc
mov
insb
pop
and
fsubp
out
sbb
add
add
jo
cmc
push
enter
add
dec
xchg
jl
fnstcw
das
or
add
shll
test
jne
pop
or
pop
in
inc
and
mov
pop
in
dec
rclb
and
mov
jo
popf
sahf
in
gs
scas
pop
scas
mov
add
adcb
lea
jmp
fcompl
rol
insb
imul
mov
push
dec
fimull
leave
push
and
add
fidivl
xchg
mov
jp
mov
xchg
inc
pop
sbb
push
pusha
adc
rcr
push
inc
sahf
repnz
or
xchg
mov
jns
insl
dec
das
or
jp
mov
add
scas
xchg
inc
outsb
pop
or
mov
xrelease
inc
lds
pop
push
push
movl
cmp
dec
les
add
jnp
inc
or
xchg
mov
cmp
mov
into
mov
cld
mov
mov
sbb
ja,pt
adc
pop
push
dec
mov
push
loopne
mov
xor
sbb
es
idivl
movsb
add
cmc
into
test
xchg
outsl
push
lods
mov
jle
cld
inc
jno,pt
xchg
int
cli
pop
or
xchg
psrlw
sbb
push
cmc
sti
movsl
push
xor
xchg
cltd
fstl
or
dec
outsb
jns
pushl
out
push
sbb
fisubs
push
cmpsb
call
or
jmp
jo
js
adc
push
adc
addr16
rclb
dec
cmp
stos
adc
mov
mov
outsl
adc
and
lds
push
adc
xchg
sub
adc
in
xor
fimuls
out
call
pop
push
hlt
clc
sbb
mov
ds
jne
lret
xlat
enter
mov
mov
cmpsl
int3
insb
call
lea
pop
loopne
filds
enter
addr16
icebp
shll
add
xor
xlat
xchg
imul
jge
test
stos
ljmp
inc
jnp
adc
jb
xchg
clc
shl
fidivl
xchg
shr
sbb
jl
mov
push
sbb
outsb
dec
testl
ds
xchg
pop
pop
sub
mov
jnp
mov
je
mov
dec
cli
mov
lret
cmpsl
xchg
mov
hlt
pop
fistl
lahf
into
jecxz
ja
aam
loop
jne
or
ret
jmp
mov
cmpsb
movsb
pop
loopne
sub
xor
xchg
sbb
stc
fsubs
xchg
xchg
negl
xchg
lea
or
push
add
popf
test
shll
stos
jecxz
insb
into
mov
dec
and
mov
cmp
fiaddl
add
cs
mov
jo
xchg
sahf
push
inc
ret
test
jecxz
hlt
sar
ljmp
mull
lds
mov
cmp
fdivs
lods
mov
dec
sub
xor
sahf
pop
cmp
jbe
push
mov
lret
fcoms
ja
inc
stc
jl
pushf
cwtl
sbb
sub
ret
test
aaa
aas
scas
pop
push
adc
or
lahf
inc
pop
in
pop
outsb
sbb
xor
fwait
pop
sbb
mov
push
fnstenv
jg
inc
pop
push
shrb
shrd
xchg
loop
loopne
or
pop
adc
mov
hlt
insb
jnp
pushf
hlt
push
dec
fmul
int
push
cmp
adcl
out
rol
or
mov
pushf
hlt
adc
dec
push
repnz
out
dec
imulb
mov
movsl
pop
divb
fwait
adcl
mov
inc
and
jecxz
in
addr16
enter
in
repz
jbe
dec
shlb
mov
or
pop
test
jge
xchg
and
push
inc
mov
shll
rcr
mov
hlt
adc
data16
call
stos
push
push
test
aad
imul
cmpsl
fnsave
jns
add
hlt
xchg
lcall
mov
mov
jmp
and
dec
loopne
ret
sub
inc
je
mov
cwtl
inc
add
call
jge
shll
mov
mov
mov
adc
je
jmp
test
mov
mov
loop
daa
sbb
mov
mov
iret
lods
inc
jle
sahf
mov
push
and
adc
fmuls
jb
sahf
add
shll
pop
jecxz
mov
repz
adc
fsubrl
or
mov
into
mov
xchg
in
or
xor
cmp
fldcw
mov
in
pop
enter
fistpl
cmp
cmp
or
sti
scas
mov
xchg
outsb
into
lahf
out
popa
or
xor
out
or
sbb
push
test
mov
xchg
mov
cmp
out
fs
jo
movb
dec
rcrb
ja
adc
jns
clc
mov
aaa
inc
lret
adc
fimuls
cmp
nop
mov
dec
aad
dec
jnp
mov
scas
add
pop
dec
xlat
xchg
sarb
popa
popl
jne
push
test
jae
jns
ds
stos
stos
hlt
shr
fildl
mov
mov
mov
popf
jnp
test
imul
sub
mov
xchg
push
push
lea
adc
pop
mov
xor
mov
es
xchg
clc
hlt
cmp
xor
jo
int3
loopne
addr16
out
add
sub
xchg
dec
xor
aam
push
sahf
ficoml
mov
dec
mov
data16
sbb
andb
gs
or
sbb
addl
mov
into
ds
pop
mov
mov
scas
leave
adcl
push
loop
dec
lock
aam
mov
daa
adc
xchg
aaa
jp
push
lods
cmp
or
xchg
popa
popf
test
xlat
mov
repz
pop
cltd
jno
pop
je
ja
int
imul
jmp
rorb
jae
cmc
ror
add
sarb
xchg
add
ja
in
pop
jae
shl
add
sub
and
icebp
ror
or
pop
call
fcompl
cmc
mov
mov
sub
dec
or
mov
jae
jnp
test
ror
dec
mov
add
adc
xchg
sbb
sub
sub
cmp
cs
inc
dec
jmp
rorb
xchg
mov
imul
cmp
adc
frstor
xor
jl
das
into
add
inc
add
xor
jnp
push
test
lods
cmp
xlat
xchg
xor
push
cmp
mov
mov
daa
jbe
je
pop
push
aas
cmp
xchg
sbb
fistps
stos
jmp
push
leave
inc
and
les
xor
sbb
add
fs
inc
lock
out
test
movsb
mov
dec
sahf
or
sbb
hlt
out
aam
cmpb
insl
and
test
lahf
sarb
notl
mov
sub
arpl
xor
inc
scas
dec
repz
pop
add
aad
adc
cmpsb
push
and
add
sub
sub
stos
add
js
xor
stos
insl
ret
xchg
les
mov
sti
movsl
add
popa
jae
sbb
aam
lods
xor
and
add
outsb
xor
add
cmpl
imul
in
sysenter
dec
mov
or
sbb
lret
adc
movsl
and
mov
mov
cmp
cmpsl
test
add
and
xor
jp
hlt
hlt
xor
adc
sub
shld
or
lret
enter
xchg
jb
sbb
mov
ss
xchg
adc
mov
xchg
popa
cld
aas
dec
cmp
adc
sbb
in
sahf
cltd
push
lret
test
es
xlat
adc
push
mov
imul
cmpsl
mov
adc
cmpsl
pop
cmp
mov
and
jae
mov
roll
dec
mov
sub
enter
packsswb
out
test
repnz
into
jl
jne
push
dec
and
shr
into
pop
inc
enter
int
xchg
cwtl
dec
jns
pop
test
mov
xlat
mov
jge
and
jle
cmp
es
xor
outsb
adc
lret
popf
out
repnz
mov
fsts
imul
idiv
scas
sbb
xchg
xlat
mov
lods
and
sbb
les
std
cltd
aaa
mov
or
arpl
mov
sbbl
inc
pop
cltd
je
xchg
cli
sahf
fildl
stos
sarl
lods
flds
fcoms
sarl
movsb
in
out
js
testb
enter
add
scas
andl
outsb
lcall
out
mov
sbb
cli
add
addr16
outsl
sub
adcl
inc
scas
cmp
adc
lcall
test
rorb
aas
je
mov
add
fisubrs
xchg
mov
adc
push
cmpsb
sub
fldt
mov
push
mov
lcall
jae
push
test
push
mov
adc
in
cmp
inc
push
leave
push
inc
xor
push
or
daa
and
out
jmp
push
mov
sub
scas
mov
cmp
sub
mov
adc
push
mov
in
pop
out
mov
jnp
xchg
rorl
andl
jne
mov
sub
bound
repnz
scas
lods
dec
and
jmp
dec
daa
push
repz
push
out
xchg
or
lahf
push
daa
push
hlt
add
scas
lods
int
cmp
dec
int
fcomps
leave
adc
roll
lahf
inc
cmpsl
pop
cmp
xlat
xchg
pushf
and
fcmovnbe
xlat
les
or
pop
jle
push
adc
fbstp
mov
xchg
out
jl
push
cmp
das
aaa
dec
cmpsb
cmp
mov
out
inc
or
mov
or
and
push
and
inc
xor
mov
lret
xor
jbe
or
add
mov
xor
das
cmpb
inc
push
jns
out
imul
leave
outsb
int3
es
in
mov
cwtl
add
in
jne
cwtl
outsw
xchg
xchg
sbb
aad
mov
inc
or
xor
push
dec
call
ret
repnz
mov
dec
out
lods
add
ficomps
pop
add
jo
adc
icebp
int3
mov
repnz
or
cs
sbb
or
data16
inc
pop
in
cmp
mov
mov
aas
push
imul
loop
mov
and
fidivl
inc
leave
inc
adc
shll
mov
lds
icebp
xchg
mov
ljmp
test
icebp
sbb
sub
out
movsb
icebp
inc
mov
xlat
insl
in
hlt
sbb
pop
fldenv
or
hlt
call
ret
push
or
cmp
in
add
push
sarl
push
adc
push
mov
addl
cs
cmpl
daa
dec
jae
cmpsl
cmp
and
jno
cmc
icebp
adc
popa
fwait
jl
test
jns
es
mov
mov
in
cld
fchs
loope
push
or
and
jecxz
mov
loop
mov
lock
and
movsl
scas
in
cwtl
sub
jnp
and
loope
roll
push
je
gs
add
mov
in
jp
cltd
add
fisttpll
in
movsl
lds
sbb
adcb
repnz
scas
dec
ja
vpsllq
sbb
add
arpl
cli
pusha
pop
std
push
pop
andb
sub
iret
pop
je
mov
pop
mov
lea
mov
cltd
ret
pushf
xchg
fadds
pop
pop
jl
sub
cmc
adc
sub
insl
aam
pusha
cmp
inc
xchg
in
addr16
xchg
pop
gs
xor
sbb
shll
add
lock
or
iret
mov
and
mov
push
loopne
xor
lret
mov
or
stos
adc
xchg
inc
aaa
loope
fwait
lcall
das
push
scas
lahf
shrb
roll
cmpsl
dec
cmc
push
stc
addr16
cmp
sahf
pop
daa
mov
sub
mov
ss
in
das
testl
mov
jl
cmp
xor
cmp
jp
jo
xlat
ds
and
ja
inc
mov
push
in
pop
push
fistps
fistpll
cs
or
stc
rol
fisttps
adc
or
xor
shll
bound
push
xor
loop
jae
lea
or
insl
ljmp
xchg
and
sbb
cli
pop
shlb
cltd
and
xchg
xchg
pop
iret
data16
pop
les
andb
or
add
sar
mov
je
xor
pushf
sub
rorb
ficomps
ja
pop
mov
imul
inc
lret
and
xchg
push
outsl
sbb
xor
push
mov
adcl
pop
push
shll
cmp
mov
ss
jmp
mov
adcl
nop
dec
repnz
xor
icebp
push
call
sbb
pop
adc
scas
cmc
mov
sti
cltd
push
adc
xchg
xchg
jge
mov
add
subl
mov
push
or
adc
cmp
pop
popf
js
imul
dec
add
mov
js
fiadds
inc
lock
or
inc
sub
xchg
std
adc
dec
rclb
push
outsb
enter
stos
sub
sub
adc
jo
arpl
iret
mov
mov
rclb
mov
out
mov
sbb
inc
add
push
xor
pop
or
and
dec
sarl
testb
jp
lahf
or
fcmovnb
xchg
push
loopne
test
ja
addl
add
jle
data16
lcall
lods
mov
je
xor
cmp
icebp
gs
jno
sti
mov
or
pop
mov
jne
movsl
push
in
int3
mov
add
sbb
sub
in
scas
dec
sbb
call
xor
aas
sbb
mov
jb
xor
mov
arpl
inc
dec
daa
pop
inc
or
aam
clc
adc
add
add
repnz
dec
cmp
jle
mov
xor
imul
mov
stos
cmp
push
sub
pop
dec
mov
add
scas
test
sub
cmp
xchg
inc
mulb
scas
loop
ror
mov
fs
mov
push
and
mov
sub
in
int
mov
add
push
dec
int3
jbe
leave
jg
lock
cmc
jo
xchg
xchg
nop
jae
idivb
pop
mov
mov
clc
jne
lahf
rcl
mov
xchg
lods
xor
jae
cmp
out
mov
lods
jae
jne
xchg
jp
scas
sbbl
mov
xchg
jne
popf
sbb
sub
cs
push
add
add
pop
xchg
mov
or
or
cmp
pop
adc
dec
sub
lcall
jmp
sbb
inc
out
out
adc
push
aam
sub
dec
lret
add
mov
out
xchg
bound
adc
fimull
popa
or
lods
push
hlt
movsl
mov
addl
add
push
mov
aad
test
jo
enter
out
mov
pop
and
cmpb
xchg
roll
cmp
xchg
shrb
dec
xchg
inc
pop
fldt
ficompl
rorb
mov
pop
mov
xlat
and
add
mov
sbb
mov
jns
mov
sbb
lea
rorb
mov
arpl
sbb
les
pushf
outsl
add
cltd
jle,pn
bndstx
push
scas
dec
sub
mov
xchg
std
into
fs
fbld
in
lds
adc
cltd
xchg
jns
sub
mov
adc
fs
addr16
sbb
push
jl
repnz
pop
lret
adc
jne
subl
lea
dec
out
outsb
push
ret
insl
fnstenv
sub
stos
xchg
jb
ja
pushf
mov
rcl
pop
mov
std
cwtl
xor
add
mov
repnz
push
push
test
pop
mov
mov
mov
lock
cmpsl
mov
pop
xor
arpl
loopne
pop
push
add
xor
movsb
inc
pop
std
cmp
cs
xchg
jne
adc
sbbl
jbe
andb
jns
hlt
push
push
mov
add
and
mov
std
mov
push
lret
mov
dec
iret
xchg
adc
mov
add
jg
xor
repz
iret
inc
pop
stos
jmp
push
cmpsl
xor
inc
rcrb
or
sub
popf
mov
sbb
dec
int3
push
inc
scas
scas
cld
out
adc
out
das
addb
mov
jl
outsb
cwtl
sub
mov
addl
das
adc
movl
mov
subl
aad
ss
ja
flds
fidivrl
cmpsl
xchg
js
test
push
sub
pop
ss
inc
test
xchg
or
lret
push
sti
out
out
xchg
fistps
mov
sub
cmpb
mov
cmp
mov
mov
jmp
mov
dec
mov
cwtl
xor
aam
xor
sub
sbb
xchg
imull
pop
pushf
adc
xchg
inc
dec
rcrl
add
jno
stos
cwtl
add
xlat
push
testl
dec
xlat
inc
lea
icebp
lcall
push
pop
add
xchg
int3
pop
lahf
push
stc
jge,pt
gs
imul
xor
imul
inc
mov
inc
jg
and
cmpsb
xchg
call
int
mov
rcll
outsl
inc
addr16
out
jne
push
push
pop
jno
cli
or
aam
gs
ret
push
sbb
mov
xor
cmp
fistl
movsb
mov
pop
in
push
mov
clc
push
rol
imul
sub
push
mov
push
out
adc
push
je
aad
sbbl
std
lea
out
mov
outsb
mov
sahf
in
test
fs
inc
lds
sub
incb
mov
aam
push
jne
movsl
insb
imul
inc
mov
push
jmp
dec
pop
loopne
pop
leave
cmp
syscall
aas
mov
int3
adcl
lret
aam
imulb
pop
and
scas
push
cli
loop
sbb
scas
stos
mov
jns
xchg
xor
fstpl
stos
jnp
or
push
pop
test
fisttpl
xchg
mull
fisttps
movsb
lods
jbe
mov
or
arpl
jnp
test
xor
outsl
xchg
test
mov
in
mov
jge
mov
xor
push
jns
mov
cmpsl
mov
mov
xchg
js
push
imul
inc
lods
jg
inc
sub
negb
inc
add
add
pop
out
in
outsb
or
icebp
mov
into
ss
lahf
dec
subb
cmc
xchg
pop
jecxz
movb
fs
outsb
mov
clc
inc
and
insl
nop
mov
lahf
pop
dec
lock
cwtl
jp
insb
cltd
xor
sbb
sub
outsl
bound
adc
ss
mov
or
jecxz
aad
call
add
xchg
sub
pushf
js
rcll
sar
dec
pop
cmp
push
fstps
sbb
imul
fcoml
push
sbb
jmp
clts
jns,pt
jbe
mov
sahf
hlt
cmp
popf
mov
lock
movsl
icebp
je
lahf
sbb
bound
xor
out
mov
mov
cmpl
dec
xchg
clc
pop
insl
daa
and
pop
xor
mov
push
int
fwait
dec
xor
mov
and
sub
lods
and
nop
jbe
subb
dec
adc
sub
mov
dec
sbb
int
in
les
or
pusha
iret
addl
add
push
xchg
and
das
pop
xchg
les
je
int3
add
sbb
adc
int3
ja
sub
scas
cmpsl
xchg
dec
imul
push
pop
popa
addr16
fdivr
test
scas
jg
loope
xchg
fxch
mov
adc
cmpsl
cmpsl
rolb
add
pusha
andb
inc
sti
push
aad
ljmp
aas
popa
pop
mov
mov
enter
test
or
ror
out
push
out
xchg
outsl
shrl
mov
repz
xchg
xchg
pusha
push
inc
enter
out
fs
cltd
test
and
xor
jp
dec
ja
push
sbb
notb
pop
aas
mov
fsub
xchg
hlt
fildl
insl
inc
jg
jb
adc
jbe
lds
out
and
pusha
pop
fdecstp
jo
outsb
jnp
push
insl
mov
or
out
mov
mov
or
aas
fcmovnbe
dec
sbb
stc
xchg
mov
mov
adc
in
mov
and
dec
pop
lds
inc
cltd
mov
push
push
dec
outsb
lea
rep
je
push
sbb
lcall
lret
in
xchg
jp
inc
push
nop
outsl
jbe
xchg
cmp
jg
sub
mov
cmpsb
jmp
into
or
and
push
pushf
push
je
xor
pop
out
lahf
in
imulb
adc
test
mov
mov
jg
add
mov
pop
enter
mov
jo
fwait
out
pushf
pop
sahf
and
or
or
les
cmpsb
mov
xchg
roll
add
fbld
jo
imul
adc
jmp
dec
rorb
mov
cwtl
scas
jmp
and
mov
xchg
xchg
int3
sti
es
xchg
jne
cmc
push
sbb
push
in
add
sbb
pop
or
or
xchg
je
cmp
loop
mov
adc
imul
xchg
pop
push
xchg
push
inc
cmp
xor
and
ret
aaa
xchg
repnz
lods
sbb
sbb
push
mov
or
lret
dec
sarb
leave
pop
pop
mov
jne
ds
pop
shlb
test
cmp
sub
mov
cmp
inc
icebp
push
add
and
xor
mov
and
or
bound
pop
clc
push
dec
dec
repnz
and
pop
outsb
push
fadd
push
mov
push
mov
mov
pop
lods
pop
sbb
cmp
fisubrl
subl
sbb
push
sti
flds
xchg
inc
push
shl
movsl
jg
fsubl
or
in
roll
mov
adc
dec
and
sbb
enter
fwait
dec
jnp
lret
repnz
and
and
xchg
dec
dec
cmp
cld
mov
mov
mov
cmc
add
lcall
sbb
lahf
add
cmp
push
add
hlt
js
inc
dec
out
cwtl
push
cmp
cmpsb
andl
sbb
dec
daa
dec
push
js
mov
push
mov
push
inc
out
je
mulb
sub
stos
shrl
rol
mov
jo
jmp
cmp
sti
dec
loop
imul
icebp
out
adc
insb
and
cmp
mov
negl
data16
sahf
fisubrl
sbb
dec
stos
lahf
cmp
stos
pop
je
jae
and
adc
mov
adc
and
enter
cmpsb
insb
mov
aad
in
out
cmc
or
popa
inc
lcall
jnp
bt
cwtl
out
adc
ret
or
mov
jmp
loopne
xchg
or
jno
imul
sub
inc
jb
mov
add
sub
and
inc
aam
shrb
sub
pop
jge
popa
loop
cwtl
mov
pushf
dec
dec
daa
pop
cmpsb
into
lock
push
cs
loopne
lcall
inc
push
jp
mov
icebp
pushf
mov
int
dec
mov
fidivrl
xor
insl
cs
pop
jno
inc
or
jmp
xorb
ret
jns
xchg
mov
aaa
sub
sub
sti
xlat
mov
pop
adc
rcrl
adc
lock
cli
adc
dec
mov
insl
and
shl
popa
add
loopne
jl
fucomi
xchg
cmpsb
icebp
dec
and
sbb
data16
mov
jl
andb
jecxz
jo
mov
fisttpll
inc
or
mov
mov
popa
sar
jae
je
fisubs
mov
mov
or
shlb
pop
sarl
push
adc
inc
or
ficoml
into
lods
sub
fldt
inc
and
add
sub
fsubrl
xchg
sbb
lret
xchg
into
dec
xchg
xor
sti
sbb
add
loopne
push
enter
pushf
sub
arpl
xchg
sbb
scas
mov
adc
gs
inc
jno
cmp
clc
adc
dec
cmpsb
mov
insl
adc
jp
mov
sti
dec
in
nop
mov
add
imul
add
adc
and
dec
jmp
imul
and
cmpl
pop
icebp
jnp
inc
xchg
mov
dec
mulb
sbb
fwait
cmpsl
jle
imul
divb
or
fcoml
rcrl
jmp
xor
movsl
std
sub
dec
pop
pop
sbb
mov
sarb
inc
mov
bound
xor
push
aaa
xor
push
jbe
test
mov
in
push
dec
jnp
add
mov
pop
imul
lret
mov
dec
mov
jl
fwait
loope
lea
mov
push
out
pop
orl
icebp
je
or
aad
sbb
jecxz
and
daa
mov
xor
sbb
lds
stos
inc
mov
insl
pop
stos
cltd
pop
jo
sub
enter
gs
out
stos
out
xchg
mov
mov
mov
cltd
pop
and
pop
xchg
inc
push
lret
mov
sti
adc
or
sub
and
push
adc
sub
dec
daa
or
mulb
mov
mov
cmp
lahf
out
mov
push
scas
test
loop
or
imul
fcmovnbe
pop
out
int
cli
mov
xchg
in
push
and
push
or
push
mov
or
jg
xchg
iret
sarb
jmp
lcall
es
push
sub
aam
movsb
mov
fistpl
imul
jnp
mov
dec
adc
dec
adc
cmp
in
sbb
mov
xor
out
add
lret
pop
xor
in
dec
dec
repz
and
fdivrs
cwtl
nop
mov
clc
stc
push
xor
sbb
nop
call
incl
int
or
jns
mov
mov
test
out
iret
xacquire
les
mov
subb
pop
or
cwtl
push
push
cmp
push
dec
out
in
and
and
xor
cmp
xchg
out
gs
push
pop
or
out
jne
jb
sarb
sbb
inc
lods
or
cld
mov
dec
cmc
adcl
adc
mov
out
mov
pop
enter
sbb
mov
add
jle
pop
stc
arpl
out
sbb
adc
xchg
lahf
stos
xor
cs
mov
insl
lret
mov
and
fcomip
xor
mov
loope
mov
aaa
ret
in
pop
cmp
aas
add
je
or
mov
push
and
imul
mov
mov
adc
xchg
bound
cmpb
je
pop
pop
mov
int3
out
fwait
and
push
iret
mov
push
cmp
jb
pop
jne
das
xchg
add
popa
jbe
or
push
adc
mov
pop
rcrl
pop
cltd
mov
int
adc
pusha
je
loope
movsl
sbb
jne
aam
data16
jns
mov
mov
cmp
sub
xchg
dec
mov
sub
fidivrl
aam
lods
mov
sbb
test
cwtl
jbe
dec
mov
mov
jo
fcmovnu
sbb
mov
and
jno
lahf
and
pop
in
mov
add
xchg
xlat
popf
fildll
aaa
lds
ss
adc
mov
jo
sub
dec
dec
movsb
inc
xchg
pop
hlt
mov
mov
adc
loope
mov
xchg
scas
xchg
pop
icebp
lret
push
pop
mov
test
les
pop
fistps
mov
xor
add
dec
inc
sbb
scas
dec
test
or
push
lcall
or
xchg
js
nop
mov
fisttpl
mov
inc
fs
mov
or
fldenv
arpl
xor
dec
outsb
push
aam
or
pusha
jle
sarb
cmp
cwtl
xor
adc
les
cmp
push
mov
movsb
loopne
fldl
insb
outsw
aad
cmp
dec
push
cmc
sti
jecxz
jp
xor
aaa
pop
lcall
loop
in
call
sub
jecxz
sti
lret
daa
add
or
mov
test
jg
mov
stos
xchg
sbb
adc
lahf
pop
xchg
icebp
push
sub
bound
les
mov
cltd
insb
ret
inc
pop
xchg
fisttpl
adc
repz
jb
sub
lret
or
cmp
push
dec
jp
inc
pop
mov
jne
jl
push
sub
jmp
gs
scas
cmp
int
and
or
ret
aam
dec
rcll
jb
inc
aam
xor
adc
sub
xchg
jbe
or
insb
pushf
jle
ret
jb
mov
dec
leave
mov
cmpl
sahf
cltd
mov
push
clc
or
jg
iret
test
ss
insl
aaa
sbb
cli
push
jg
jecxz
insl
pop
jb
ret
or
mov
or
xor
bound
xor
arpl
mov
arpl
loope
sarb
ljmp
mov
mull
test
lds
testl
pop
and
mov
pop
jg
ret
test
rorl
xor
das
into
out
xchg
int3
inc
insb
addr16
nop
shll
and
xlat
loop
loopne
jg
loope
imul
cmc
mov
dec
mov
pop
test
cmp
pushf
sbb
data16
mov
mov
sub
xlat
mov
shlb
gs
dec
mov
in
inc
sbb
fidivrs
ljmp
mov
outsb
leave
rorl
mov
push
lds
notl
mov
test
pop
es
in
ret
sub
rcrl
nop
lea
orl
xor
inc
inc
ljmp
test
cld
xchg
rcr
cmp
or
or
ficoml
pop
imul
subb
mov
mov
sbb
in
push
shll
xchg
pop
add
cmp
shlb
adc
das
xorb
sub
mov
push
addr16
inc
int
dec
shrb
mov
shlb
into
inc
sbb
test
sub
pop
fisubrl
mov
mov
rorb
push
xor
loope
xchg
ja
movsb
inc
or
jecxz
aaa
fldcw
xchg
push
push
stc
jbe
addr16
cld
mov
push
popa
add
lds
daa
loope
add
jle
mov
data16
lods
cmp
sub
sahf
push
aad
adc
ret
push
nop
and
rcll
xor
lock
andl
push
ret
les
xchg
pop
lds
in
rcll
mov
push
push
mov
or
jecxz
mov
aam
test
je
sub
cmpb
and
ror
jmp
jl
gs
lcall
fcompl
push
and
mov
int
insb
scas
add
jp
jo
push
xlat
fmull
jmp
cld
xchg
jo
pop
test
shr
inc
or
sbb
adc
dec
xor
add
add
add
or
jl
jne,pn
xchg
shl
fwait
xchg
and
xchg
jp
dec
out
loop
fs
mov
mov
xor
cltd
sbb
pop
dec
xor
sbb
aaa
int3
in
mov
dec
push
test
lret
test
dec
and
pop
jge
mov
add
xor
ret
ret
sub
mov
mov
xchg
stc
xlat
or
popf
inc
or
test
sub
pop
shl
cmp
pop
jno
pushf
andb
or
and
pop
lahf
clc
movsl
lea
jne
inc
ljmp
pusha
sarl
xor
mov
xor
scas
add
mov
pop
push
inc
xlat
outsl
pop
mov
pop
cmp
and
jecxz
lret
jl
stc
add
imul
mov
fwait
add
cmp
ja
jne
movsl
stc
and
roll
cmp
xchg
jnp
push
push
jmp
cld
loop
and
lahf
push
insb
dec
push
mov
es
xchg
sbb
dec
cmp
mov
sub
outsb
out
push
mov
xchg
pop
mov
pop
cmpl
sbb
xor
dec
pop
cmc
push
iret
je
cmp
subb
int3
jg
shlb
jle
cmpsb
or
sub
popf
mov
enter
add
imul
test
cmp
pop
js
pop
js
repz
mov
sbb
hlt
xor
dec
or
cmp
mov
or
test
mov
decl
cmc
mov
in
insl
ds
movsb
and
out
jno
test
xchg
push
sub
xor
jecxz
notb
fcoml
daa
dec
inc
sub
test
mov
mov
mov
xor
fs
movsb
or
push
sbb
fidivl
sbb
lea
jbe
jns
sub
dec
mov
push
dec
lret
dec
xor
pop
mov
sub
shll
push
insb
rcrl
cltd
cmpsl
or
cmp
sub
mov
test
popa
repz
rclb
scas
add
jle
push
and
mov
inc
arpl
inc
popa
mov
inc
aad
xor
icebp
arpl
popa
mov
std
in
ror
and
les
iretw
xchg
push
pop
aas
subl
or
pop
shlb
add
sub
pop
js
sbb
dec
jle
insb
jne
int3
iret
add
cld
sti
int3
cmc
dec
lcall
jns
mov
into
not
cmp
fcmove
adc
sbb
fcomi
dec
ljmp
mov
sub
pop
push
pop
mov
dec
and
popa
adc
mov
adc
sbb
iret
adc
pop
push
xchg
aaa
mov
fdivl
fstpt
inc
lret
dec
stos
jmp
fiaddl
lret
jne
pop
enter
lods
fcoms
mov
cltd
lahf
ret
mov
mov
aam
int
out
and
aam
mov
notb
repz
cld
mov
leave
pop
test
xchg
flds
sti
fwait
lret
mov
mov
hlt
insb
imul
cmp
imul
into
inc
outsl
pusha
push
inc
xor
ljmp
daa
xchg
cmpsl
inc
testl
aas
push
pop
jns
lret
je
mov
jnp
mov
pop
movsb
sbb
out
add
jbe
add
pop
andl
lods
cli
bound
mulb
pop
push
aaa
lret
pop
pop
inc
inc
push
jno
data16
xchg
cmovae
cmpsb
daa
cmp
inc
jb
pop
jne
push
sbb
call
shll
dec
jecxz
loop
loopne
push
add
enter
jae
sbb
sbb
sti
xchg
sahf
and
std
daa
adc
aam
call
pop
jae
sbb
inc
mov
in
dec
mov
decl
inc
in
js
cltd
out
mov
in
repnz
add
test
out
push
js
test
cli
and
nop
inc
cmp
xchg
movsl
dec
and
cmp
push
mov
push
or
cmp
jmp
cli
inc
adc
mov
pop
adc
sbb
lret
jmp
pop
aas
sub
aam
lea
gs
mov
mov
xchg
outsl
cli
addr16
and
push
add
xchg
push
push
mov
jecxz
sbb
lea
repz
push
aas
scas
xchg
int
cmp
stos
popa
or
jns
imul
sbb
mov
cmpsb
clc
shrb
add
mov
and
sbb
add
adc
or
xchg
test
arpl
and
or
sbb
jge
dec
xchg
push
xchg
cmp
dec
ss
fistpll
mov
push
in
ret
js
pushf
xchg
scas
xchg
sbb
ljmp
mov
or
adc
mov
enter
mov
sbb
and
add
sub
lds
or
cltd
cmc
push
sarl
sub
insb
add
adc
jbe
dec
inc
xor
xchg
cmp
mov
inc
insb
xor
mov
fidivl
and
lock
pop
aad
out
fistps
xor
mov
dec
jmp
push
dec
xchg
fisttpll
sti
jl
and
or
scas
mov
mov
and
add
push
push
cmpsb
into
mov
dec
dec
add
les
xchg
inc
mov
xchg
enter
and
aas
fwait
mov
int
mov
in
pop
push
xor
repnz
xor
cmpsb
xchg
js
sub
mov
xchg
xchg
xor
arpl
xchg
ljmp
pop
bound
hlt
shrb
popf
cmp
push
out
clc
pop
cmp
out
iret
or
fldenv
pop
lret
cmpsb
mov
imul
and
loopne
lea
out
push
or
mov
aam
mov
cmpsb
jo
rol
adc
mov
std
lea
aas
cmp
add
pop
jmp
sub
mov
xor
mov
aaa
adc
mov
repnz
pop
repz
mov
pop
adc
popa
or
sbb
sub
push
mov
pop
mov
xchg
pop
jns
out
insl
in
repz
rclb
jne
add
js
push
mov
sub
and
pusha
add
stos
dec
mov
enter
mov
imul
sub
xchg
das
sti
and
inc
adc
arpl
test
and
mov
nop
dec
inc
add
fwait
sub
xor
out
or
pop
mov
sbb
push
cmpsb
or
das
inc
and
mov
fldl
test
data16
dec
dec
icebp
adc
jno
out
xor
adc
adc
pusha
lods
jl
sti
pop
pop
inc
pop
and
xor
jne
outsb
dec
xor
js
mov
mov
test
subb
adc
lea
daa
daa
push
mov
fsts
ss
popa
push
ja
adc
pop
dec
int
mov
inc
xchg
xchg
movb
inc
jg
in
inc
mov
pop
fsubs
and
lock
test
xlat
xor
icebp
int
xchg
push
pop
push
test
jge
call
pushf
mov
xor
fnsave
add
xchg
and
fdivrs
or
imul
jl
cmc
lcall
sbb
xlat
xchg
sub
mov
cld
xchg
add
test
das
cs
dec
mov
jl
das
rcr
push
or
popl
fidivrs
clc
ds
mov
in
sahf
cs
push
aas
dec
fmull
mov
add
fidivrl
sbb
sub
mov
mov
pop
mov
addr16
mov
sub
push
or
or
lea
xchg
xchg
sbb
jno
or
pop
ja
test
daa
iret
xor
enter
mov
mov
test
fs
jl
mov
push
xchg
lret
movsb
imul
add
inc
shrb
adc
test
pushf
mov
push
lock
cli
scas
cmp
adc
push
pop
icebp
cmp
push
inc
insb
divl
call
mov
mov
dec
cwtl
dec
xchg
mov
out
icebp
mov
pushl
iret
mov
sbb
jo
mov
xchg
outsb
ds
imul
jo
mov
mov
rclb
or
pop
and
fwait
divb
push
dec
ret
test
jecxz
les
pop
adc
or
xchg
pusha
mov
or
cmc
pop
imul
mov
pop
daa
daa
in
imul
mov
inc
mov
test
dec
ret
mov
arpl
shll
jge
imul
test
cmpsb
dec
fwait
sahf
or
jne
arpl
outsl
rorl
pop
je
jecxz
xor
test
inc
lahf
pop
out
loope
loope
imul
push
mov
into
mov
dec
arpl
cmp
arpl
int
mov
mov
movsb
jae
fisubrl
pusha
sub
pop
mov
mov
add
sbb
scas
adc
mov
fistpll
jecxz
xlat
into
mov
xor
cmc
loopne
ficoml
xchg
rdtsc
xor
xor
cwtl
fcom
leave
icebp
int
push
repz
mov
inc
sahf
pusha
adc
imul
fmul
fsubl
aad
add
pop
inc
add
testl
std
sbb
or
mov
test
mov
sbb
mov
push
mov
call
sub
sarb
insb
daa
cmpsl
shlb
dec
mov
xchg
pop
push
jo
cmp
inc
push
and
push
inc
fldt
xor
pushf
shll
adc
nop
js
push
sbb
ret
fmull
jne
mov
xchg
xor
push
fsubp
sub
jecxz
mov
cmp
out
aad
sti
pushf
mov
inc
inc
inc
ljmp
fldt
xor
gs
dec
mov
sti
lds
out
cmp
xchg
xorb
push
shrb
stos
lret
dec
das
push
fiadds
aam
clc
xor
jmp
dec
adc
mov
decb
pop
scas
loopne
inc
dec
in
add
mov
test
bound
sarl
push
or
call
aam
in
stc
sub
xor
in
jle
inc
or
jno
pop
jns
sub
mov
addr16
mov
pop
roll
imul
stos
dec
lods
or
cmp
out
push
dec
mov
inc
jp
rclb
push
mov
push
cmpb
sti
sbb
rorb
dec
scas
addr16
stos
mov
lret
out
add
ret
mov
aad
cmpsl
dec
or
inc
cmp
lds
adcl
insl
mov
ret
sub
test
fnstsw
dec
inc
clc
push
push
lahf
sbb
sbb
pop
xchg
mov
push
scas
adc
aad
ret
sub
mov
fcmove
pushf
adc
lret
cmp
sarb
xor
inc
xchg
lret
rcrl
leave
mov
xlat
pop
jecxz
push
aaa
xor
sub
mov
mov
std
mov
loope
in
ss
sub
mov
push
pop
insl
outsb
xchg
test
stos
adc
rorb
cmp
je
push
pop
dec
push
mov
aam
lahf
inc
hlt
fdivp
pop
mov
ret
push
ficoml
inc
lods
cmc
sub
xor
faddp
in
pop
call
cld
mov
mov
jb
std
cmp
push
enter
xchg
mov
add
xchg
mov
or
les
ljmp
or
xchg
inc
dec
subl
aas
fstl
fidivrs
cmp
push
iret
sbb
sub
dec
aad
xchg
out
pop
aas
mov
icebp
repnz
xor
int3
imul
rcll
popf
sahf
xor
or
popl
xorl
sub
mov
inc
int
test
dec
imul
pop
pop
cmp
mov
out
jp
and
lods
aas
cmpsb
add
mov
daa
dec
jae
or
mov
mov
enter
xchg
popf
or
sbb
outsb
or
hlt
orb
in
rcl
lret
mov
fimuls
test
mov
mov
jle
cmpsl
push
mov
push
pop
inc
ljmp
imul
cmp
imul
cwtl
sbb
pop
push
nop
jnp
inc
mov
cld
and
aas
inc
push
imul
roll
pop
xchg
out
cmp
cli
mov
jg
or
xchg
sbb
xchg
inc
jg
ds
dec
mov
jno
and
je
clc
repnz
out
stc
jp
pop
xor
mov
xor
hlt
jbe
cmpl
lret
pop
stos
sbb
hlt
fwait
pop
scas
je
js
faddl
mov
or
daa
cltd
sahf
mov
inc
outsb
pop
movsb
shlb
adc
cmpsb
shll
dec
pop
jne
es
sub
add
inc
loope
xchg
pushf
ret
mov
cltd
imul
push
push
mov
add
dec
out
xchg
loopne
je
ja
aaa
mov
add
mov
clc
iret
dec
sub
jle
jae
sub
test
insl
imul
jae
rol
orb
mov
and
sti
sbb
fwait
inc
testb
aad
inc
push
push
xchg
mov
movsb
rcr
stc
mov
mov
ss
je
push
mov
test
incl
dec
mov
fildl
mov
test
scas
push
stos
leave
popf
inc
push
stos
mov
jle
cmpsb
test
mov
sti
inc
sbb
xchg
movsl
pop
clc
out
scas
clc
jns
or
out
lods
jno
add
js
mov
imul
jbe
movsb
mov
lea
jg
jle
shrb
std
insl
popf
rolb
pop
fidivl
mov
scas
xchg
insb
and
scas
imul
push
xchg
push
leave
mov
subl
into
adc
lcall
xchg
add
out
sub
push
fidivl
test
dec
outsb
and
repz
movb
mov
xor
sbb
das
ret
lea
mov
or
mov
loop
nop
vpacksswb
dec
jmp
mov
lods
jge
cmp
icebp
lods
pushf
xchg
pop
fcmove
adc
loopne
mov
loopne
fnstenv
xchg
push
shlb
push
or
push
pop
hlt
xchg
mov
xchg
sub
movsb
aam
pop
cmp
das
cmp
pop
jo
jo
mov
popf
daa
cmp
enter
xchg
sub
sub
sti
add
cwtl
lock
shll
xor
jb
dec
lcall
push
data16
xchg
jae
into
push
xchg
fimuls
add
sbb
lahf
sbbb
jle
and
popa
fcmovu
inc
sub
adc
loopne
pop
add
movl
lret
mov
inc
mov
inc
mov
enter
sub
repz
push
mov
add
mov
push
inc
in
jno
pop
mov
out
in
adc
mov
in
sub
or
lods
mov
jae
loop
mov
mov
pop
imul
out
loop
aaa
mov
dec
ljmp
int
lods
add
out
testl
outsl
pop
dec
lods
ja
fwait
scas
jmp
iret
test
leave
imul
jbe
imul
pop
arpl
sub
sub
ljmp
mov
adc
mov
jno
push
dec
cmp
mov
in
popf
push
xchg
mov
das
jecxz
add
pop
movl
inc
mov
add
mov
inc
or
je
mov
mov
cwtl
insl
shll
jge
fimull
mov
fs
es
test
xor
sahf
rcr
rorb
in
sub
dec
enter
aaa
fdivr
mov
jle
xor
dec
mov
cltd
lods
sub
pop
add
jle
pop
jp
mov
sbb
pop
mov
cltd
inc
sysret
incl
scas
dec
jnp
inc
and
ljmp
cli
gs
push
jne
push
je
mov
shr
and
xchg
int3
insb
ja
stos
cld
jne
xor
lods
imul
add
repnz
out
xchg
ss
mov
cmp
stc
sbb
aas
pop
sahf
les
push
or
repnz
xor
inc
jmp
pop
sbb
testl
jle
clc
sub
loopne
xchg
mov
pop
xchg
mov
arpl
nop
push
jecxz
mov
es
cs
inc
or
jl
mov
push
stos
push
jg
mov
jl
cmp
testl
xor
adcl
insl
out
pop
mov
ljmp
les
jmp
sbb
or
push
pop
jmp
mov
inc
push
mov
push
stos
dec
push
xchg
xchg
jp
mov
cmp
fwait
sub
lret
stc
je
fs
pop
dec
sti
inc
sbb
mov
push
add
icebp
mov
sub
inc
jmp
cmp
pop
es
xchg
push
inc
inc
arpl
dec
in
out
jbe
lret
cltd
jno
call
shll
push
xor
fwait
push
mov
clc
jno
mov
cmp
xor
pop
ljmp
cmp
mov
inc
sub
and
sub
fcmovnb
lods
daa
insl
push
es
mov
and
sub
jo
and
mov
push
inc
pop
cld
mov
imul
gs
jne
subl
les
jne
push
pop
lret
sbb
add
lret
pop
cmp
shlb
lock
xchg
lcall
nop
cmpsl
and
jno
mov
push
ss
sub
adc
out
test
or
scas
or
mov
stos
push
cwtl
cli
test
add
pop
lahf
ljmp
pop
clc
leave
adc
push
mov
pop
pop
mov
outsl
xor
loopne
into
xor
mov
dec
test
xchg
dec
cwtl
mov
sbb
mov
or
add
ss
sub
pop
pusha
out
adc
cltd
aam
pop
mul
cmp
xchg
sub
fwait
push
sti
aam
inc
setae
mov
sub
test
or
and
lods
repnz
lahf
push
adc
mov
mov
js
adc
jb
es
cmp
filds
dec
jge
lock
jb
sub
push
bound
xor
xchg
jne
repnz
out
mov
test
fs
lret
ss
das
sbb
js
pop
push
dec
mov
fdivs
int
inc
ret
pushf
xor
je
xor
addl
into
outsl
dec
inc
add
add
enter
int3
popa
movsb
in
and
daa
sbb
add
xchg
cld
mov
es
repnz
movsl
mov
dec
push
in
jne
lahf
xor
subl
pop
jg
cmp
dec
jae
adc
mov
sbb
das
fldenv
cmp
mov
popa
mov
sub
loopne
inc
insl
mov
dec
add
testl
das
xor
xchg
out
sbb
cmpl
dec
mov
inc
adc
iret
sbb
sbb
push
push
or
xor
jne,pt
sub
sub
and
jg
jno
pop
jg
cwtl
pop
cmp
sub
dec
ss
xchg
fdivrs
test
pop
push
out
pop
cmp
ljmp
movsl
out
je
leave
cmp
dec
mov
jmp
div
adc
xchg
sub
mov
or
cs
xchg
xchg
hlt
mov
jecxz
scas
out
shl
data16
lret
jl
je
repnz
lea
in
lret
jmp
or
sbbl
dec
adc
adc
mov
jmp
adc
rcll
cmp
cltd
rolb
xchg
inc
lods
ljmp
jecxz
test
fdivl
mov
cmp
and
or
pop
inc
sub
mov
sub
mov
mov
xchg
jno
sub
jl
pusha
cld
jp
adc
and
lret
setge
xor
fwait
subl
pop
cld
add
repz
xor
push
repnz
fisubrl
mov
cmp
sbb
jge
int
xchg
mov
ja
and
jmp
jae
out
insb
xor
shlb
mov
mov
lret
cmp
outsl
and
cmp
stos
inc
outsb
push
sbb
dec
or
inc
jge
xchg
or
loop
movsl
pop
leave
mov
and
inc
push
insl
pop
xchg
or
jbe
movsl
mov
popf
adc
sub
pop
test
pop
and
cmp
subl
ss
jle
cltd
imul
pushf
jg
icebp
out
pushf
into
aad
loop
rcll
fs
aad
adc
or
imul
das
ret
adc
rclb
call
scas
inc
xchg
sbb
in
out
rcrl
pop
imul
loope
mov
push
cmp
outsb
in
in
gs
inc
cmp
test
ja
es
xchg
aam
in
scas
dec
dec
mov
shr
pop
lret
popa
dec
out
decb
ss
or
movsl
adc
lds
cmpl
add
sbb
icebp
push
out
sub
pop
mov
stc
and
mov
push
pop
or
xchg
jl
add
mov
in
mov
sbb
int
xor
jae
xchg
jle
stos
adc
and
push
or
outsl
sbb
pop
or
mov
cwtl
iret
xlat
inc
daa
adc
and
fucomip
seta
clc
dec
lahf
jae
xorb
gs
and
fwait
jb
pop
dec
add
loopne
or
adc
notl
dec
xchg
lock
xchg
imul
mov
inc
leave
fdivl
dec
and
sub
sbb
insb
pop
lret
xchg
add
push
jecxz
pop
mov
dec
adc
out
clc
sub
ljmp
sub
sar
daa
dec
fidivs
dec
lahf
icebp
mov
xor
test
stos
inc
add
pushf
out
mov
jp
cmp
lret
sbb
dec
cmpsl
int3
cli
sahf
dec
mov
cmp
in
rolb
mov
cld
mov
dec
fwait
mov
out
jmp
mov
inc
or
xor
repnz
cmpsb
cmpsb
fisubrl
or
pop
sbb
mov
into
movsb
jmp
and
dec
mov
in
xor
and
push
leave
xor
push
and
roll
addb
fcom
or
mov
sub
gs
xchg
scas
mov
stos
push
mov
mov
xor
pop
arpl
xor
jmp
xchg
int
sub
xor
arpl
cmpsb
jge
dec
lahf
push
fcomps
sbb
jno
sub
push
ss
mov
lret
movsb
mov
js
das
jmp
adc
adc
xchg
in
sub
sbb
jb
js
pop
loop
int
int
in
mov
mov
out
shlb
outsb
cmp
sub
xchg
cmp
mov
jne
inc
sub
out
sbb
push
rcrl
scas
and
in
xor
stos
pop
out
lret
adc
jge
jae
imul
dec
insb
jae
push
jmp
add
divl
sbbl
adc
jns
dec
or
jo
rol
push
xchg
lcall
inc
rcl
outsl
lcall
adc
lahf
imul
sub
cmp
je
adc
mov
jnp
pop
mov
jnp
orb
mov
add
lret
cltd
cwtl
out
dec
out
add
dec
iret
sub
idivb
cs
into
inc
repz
stc
mov
in
repz
dec
xlat
adc
sbb
dec
xor
iret
jmp
lds
mov
or
aas
rorb
mov
ljmp
push
xchg
xor
pop
xchg
ret
repz
mov
sti
repz
stos
or
ljmp
adc
loope
icebp
dec
cmp
dec
inc
cmp
or
inc
mov
jnp
ret
jb
and
fisubs
bound
outsb
mov
int
stos
cwtl
lahf
mov
and
pop
add
adc
ds
adc
cmp
cmp
popf
gs
mov
rclb
outsb
out
fisttpl
pop
fnstenv
pop
dec
push
xor
add
fidivrs
pop
les
xlat
out
jns
xsavec
pop
or
loop
cmp
or
popa
mov
daa
mov
rorl
pusha
mov
mov
arpl
and
cmp
xchg
pop
dec
cld
jp
push
int3
jne
inc
loop
addb
stos
xchg
mov
xchg
push
mov
clc
ret
pop
addl
sbb
pop
inc
mov
adc
rcrl
xor
dec
popf
adc
cmc
and
int3
andb
and
dec
orb
cld
xor
jo
shll
sbb
and
lods
repz
out
mov
int3
out
call
lods
fwait
cmpsb
mov
addr16
in
out
jg
in
push
cmpb
imul
andnps
imul
mov
push
pop
das
movq
cmp
push
ljmp
vmwrite
lret
lcall
mov
xor
mov
and
cs
pop
pop
push
push
jbe
hlt
test
adc
lcall
int
dec
add
or
dec
push
popf
mov
jge
jecxz
pop
sbbw
sbb
cmp
xlat
cmpsb
jae
xchg
mov
dec
cwtl
sbbb
hlt
or
and
push
mov
xchg
and
shrl
js
mov
fisttpll
std
dec
out
add
xchg
repz
push
ljmp
mull
stos
pop
and
adc
sbb
cwtl
sbb
xor
and
or
arpl
sbb
push
pusha
jne
shrb
les
and
push
int3
popa
aaa
jb
lret
cmp
xchg
into
fisttpll
bound
cmp
rol
sub
add
scas
sub
xor
addr16
pop
mov
add
dec
sub
ja
sti
ss
cmpb
adc
xchg
ficoms
sahf
movl
add
cwtl
inc
jmp
cmc
xlat
imul
sarl
insb
push
xchg
add
jp
jno
in
xchg
mov
jno
mov
imul
mov
or
mov
stos
lahf
es
loop
sbb
scas
inc
mov
sbb
push
scas
movsl
stc
arpl
fistl
dec
mov
cmp
sbb
popf
ss
xor
xchg
loope
jle
outsb
adc
adc
or
push
xchg
shrb
jns
inc
xchg
or
and
hlt
and
mov
sbb
push
insl
xchg
xchg
jnp
dec
test
mov
and
out
cld
xor
jb
movsb
inc
and
xchg
mov
jle
sub
mov
xchg
cmp
pusha
in
dec
sub
and
in
push
loope
jno
xchg
repnz
into
call
dec
cmp
jg
add
dec
out
shlb
mov
arpl
dec
clc
push
stos
mov
mov
fadds
jg
loope
cwtl
xchg
cli
mov
jg
xchg
shlb
mov
jo
test
jns
sub
in
mov
xor
push
mov
hlt
aaa
in
pop
xlat
out
xor
std
in
fiaddl
ds
adc
mov
sub
cld
test
xlat
pushf
xor
add
sub
jle
scas
jmp
adc
in
and
scas
loopne
repnz
movsl
mov
push
xchg
jmp
dec
xor
aad
imul
jmp
push
mov
or
cli
jae
jle
je
aad
lret
mov
lcall
cld
bound
sub
xor
mov
aas
sub
lea
loopne
inc
mov
xchg
dec
out
pop
mov
or
lds
xchg
lret
mov
in
loope
ficomps
sbb
mov
and
xor
test
js
ror
jmp
jl
insl
out
push
jns
jno
and
and
dec
movsl
push
inc
dec
adc
mov
scas
cmp
pop
xor
adc
movsb
cs
fidivs
iret
mov
negl
dec
inc
inc
pop
mov
mov
inc
stc
jg
pop
cmp
sarl
dec
sarb
mov
jo
adc
xor
daa
xor
call
adc
rcrb
into
fxch
test
scas
push
in
decl
lcall
add
hlt
insb
std
push
sub
loope
and
jg
std
xchg
out
xor
neg
sub
or
and
adc
push
hlt
dec
imul
dec
das
lea
in
jae
fstl
xchg
cld
insb
and
xor
repz
bound
je
pop
cld
arpl
int3
jae
or
inc
adc
sub
xchg
in
stos
cmpsb
loopne
es
sahf
push
mov
adc
and
dec
scas
lods
dec
xchg
xor
cmpsl
cmc
clc
dec
clc
jae
nop
mov
xor
pop
fildll
in
ret
bound
mov
fsubr
outsb
repz
jne
stos
dec
loop
mov
movsb
repnz
dec
or
lods
inc
lahf
repnz
xor
mov
fidivrs
rolb
jl
adc
hlt
in
push
xlat
jns
mov
mov
or
inc
fstps
sub
pop
push
or
add
add
inc
inc
mov
mov
iret
dec
or
sub
sbb
mov
stc
stos
cwtl
add
dec
pop
into
notb
jmp
mov
jbe
push
rorb
mov
adc
mov
mull
jo
dec
in
xlat
mov
push
dec
js
pop
mul
and
jno
xchg
xchg
push
pop
in
clc
mov
outsb
adc
and
inc
dec
jge
test
mov
mov
mov
rorb
ficomps
or
int
dec
pop
xchg
sti
mov
push
adc
std
imul
jecxz
mov
sbbl
jnp
jb
pop
lcall
fidivl
addl
push
mov
ljmp
fsubl
ret
adc
fists
cmp
jle
arpl
adc
sar
xor
sbb
enter
jmp
insb
fldcw
int3
negl
iret
lock
das
inc
je
lret
stos
insl
dec
das
inc
mov
lds
add
fisttps
push
out
sar
ret
and
push
jp
ja
nop
pop
sahf
lods
pusha
mov
repnz
mov
fs
stos
push
mov
add
fs
das
lret
jl
add
dec
fildll
or
insb
xchg
lods
and
pop
adc
lds
movsb
add
lock
xchg
in
sbb
cmpsl
lret
add
push
or
ret
out
dec
xor
xchg
sub
jmp
cmp
pop
mov
test
mov
loope
stos
ja
xor
cs
push
scas
or
pop
inc
lock
popf
mov
inc
lods
adc
xchg
loop
adcb
inc
iret
iret
sub
aas
lret
and
enter
jge
and
into
pop
push
dec
or
into
in
popf
mov
xchg
mov
dec
outsb
call
or
dec
ja
pushf
sub
push
movsl
add
adc
push
cld
ret
icebp
jne
lret
pop
push
sbb
push
xchg
aas
pop
push
mov
add
jl
jne
sahf
scas
jg
mov
dec
pop
mov
cmp
popf
iret
sub
and
aam
push
xlat
push
fwait
jb
xchg
mov
jb
mov
cmp
dec
fisubrs
test
mov
out
sbb
test
or
mov
or
jnp
fwait
stos
out
add
in
repnz
data16
push
sbb
mov
push
les
subl
addl
call
xchg
ljmp
aas
sub
fmuls
xor
push
lret
lar
std
xor
mov
mov
jmp
jb
jo
js
ret
loopne
std
push
jno
shl
xchg
push
data16
repnz
aad
xor
mov
inc
jge
nop
addr16
mov
je
addr16
mov
movsb
imul
iret
adc
fptan
sbb
sub
pop
in
jbe
js
mov
jns
testl
mov
std
insl
mov
ds
loopne
push
lods
dec
loope
ficompl
pop
insb
push
xchg
mov
aaa
cmp
test
push
or
fs
fwait
out
add
xchg
or
push
or
and
imul
ret
scas
xor
cmpsb
pop
lds
movq
or
pop
mov
inc
insb
inc
orb
jl
out
pusha
inc
jp
dec
and
inc
subb
dec
popa
repz
sarl
rcl
add
sub
mov
stos
mov
scas
in
pop
outsl
pop
nop
xor
or
jp
outsl
jl
test
or
inc
or
xor
mov
jecxz
pop
sbb
dec
std
or
mov
mov
dec
mov
pushl
rcll
std
dec
imul
out
dec
dec
xchg
fldl
xchg
in
xor
aad
pop
jbe
jne
mov
shll
mov
or
cltd
mov
inc
ja
aam
adc
mov
stos
adc
inc
xor
mov
mov
stos
das
cmp
xor
xchg
insl
cmp
rclb
ficoms
sbb
pop
dec
mov
mov
push
push
shrb
fldt
adc
mov
ss
pop
in
dec
add
int
push
xchg
xor
popl
add
and
add
sub
test
fadd
xor
pop
mov
or
sbb
cmp
xchg
int
push
loope
lahf
pop
lahf
or
xchg
scas
lock
sub
pop
mov
nop
cmpsb
lock
notl
jae
daa
sbb
mov
fwait
into
outsl
fimuls
addr16
mov
dec
sbb
xchg
sub
ljmp
daa
cmp
dec
fistpll
sbb
addb
rcl
inc
dec
xchg
or
fs
lock
addr16
or
in
test
popa
pop
mov
movsb
icebp
fwait
fisubs
or
or
adc
out
std
ds
in
mov
repnz
sti
jecxz,pn
mov
sbb
and
test
push
or
aaa
pop
aam
pusha
lea
mov
xchg
adc
ljmp
ss
add
xor
daa
mov
xchg
call
ja
out
sbb
repnz
je
imul
lret
cmpsb
lds
imul
enter
and
jmp
aaa
and
shrl
les
ja
push
loope
xor
pop
sbb
hlt
orb
js
push
adc
dec
inc
xchg
mov
mov
mov
or
lea
test
push
aaa
std
xor
xor
pop
cmp
pavgw
hlt
daa
pop
das
adc
movsb
daa
cld
cmp
pop
jecxz
or
cmpl
fcos
push
testb
jmp
lahf
xchg
call
xor
push
fldt
jg
and
pop
bound
cmp
and
lods
jg
ljmp
push
push
paddd
lea
jns
bound
gs
add
ss
jo
push
pusha
xchg
das
ja
dec
push
and
je
aas
rorl
xchg
cmc
inc
jo
lods
fnstsw
pop
popa
lds
pop
and
test
arpl
pop
sub
repnz
ficoms
inc
mov
mov
jbe
sub
js
pop
adc
mov
fildl
scas
adc
add
pushf
and
ret
scas
std
adc
leave
jl
ds
mov
mov
pusha
adc
pop
jne
negl
gs
cmp
mov
mov
sbb
or
mov
mov
data16
aam
inc
je
sub
js
pop
sbb
add
sbb
mov
pop
mov
pop
fcompl
inc
sbb
stc
out
cmp
mov
adc
push
in
inc
fstpl
push
xor
insb
and
mov
stos
test
scas
shll
pop
icebp
mull
mov
ljmp
sub
loop
popf
fwait
outsl
mov
adc
and
fcoms
mov
push
aam
fdivl
lcall
shrb
cmc
lods
add
ljmp
ret
ss
outsl
lea
sub
iret
aad
scas
pop
dec
sbb
and
lcall
test
pop
adc
cmpsl
cwtl
dec
stc
shlb
xchg
jl
lds
stos
shrb
mov
out
inc
test
pop
imul
xor
fbld
into
nop
cs
test
fld1
xchg
and
fisttpl
jmp
in
mov
jmp
lods
shlb
dec
cmc
lds
jne
cld
jmp
dec
jecxz
push
sub
idivb
rcrl
leave
mov
addl
sbb
clc
adc
movsl
in
push
adc
xchg
arpl
and
ss
imul
and
or
mov
and
mov
adc
out
inc
dec
fdivrs
shl
loopne,pn
jg
pop
test
daa
mov
ds
in
je
idiv
push
inc
or
test
push
mov
inc
je
shl
xor
mov
push
mov
and
mov
jne
mov
mov
in
cmc
pop
cs
xchg
and
dec
jg
push
ljmp
lock
cs
addb
fists
sbbb
push
arpl
pop
clc
negb
int3
or
push
pop
daa
push
cli
ror
and
cli
ds
in
mov
push
movsb
jmp
cli
cmp
call
daa
test
xlat
cmpsb
pusha
push
pop
xchg
ret
push
xor
dec
outsl
jb
sahf
stos
and
adc
dec
cmp
sbb
sub
dec
test
inc
loopne
in
loop
add
out
mov
pushf
ja
test
cld
sbb
pop
cmp
sahf
mov
das
dec
jbe
pop
lahf
pop
cmp
hlt
fwait
into
dec
push
scas
out
xchg
mov
xchg
inc
int
repnz
cmp
push
or
jp
outsl
jl
nop
lahf
ja
call
cmp
lret
pop
repz
adc
bound
adc
push
pop
movb
fildl
fldt
inc
jbe
fsubrl
daa
xor
cmpsl
mov
sub
lea
inc
jmp
mov
mov
jle
pop
test
push
xchg
out
js
adc
lds
test
mov
jle
aas
fdivl
mov
dec
sar
shll
sti
mov
jo
mov
adc
stc
jae
xlat
xor
sbb
movsl
movsb
xor
fadds
mov
bound
ret
daa
push
pop
adc
ja
sbb
fstpl
lcall
mov
enter
jmp
cmp
test
sub
jnp
mov
incb
jno
or
rcl
cltd
pop
add
cld
pop
insl
into
cmp
insb
push
xor
rorl
push
add
xchg
xchg
iret
arpl
mov
adcb
xor
jl
mov
mov
scas
push
mov
mov
shrl
add
sbb
and
inc
mov
push
adc
insb
fstpl
inc
push
sub
test
or
fs
add
fistps
idiv
mov
jne
sub
sub
loope
push
dec
clc
daa
insl
repnz
xor
outsl
mov
add
iret
mov
sti
or
mov
pusha
pop
divb
jbe
std
jmp
sti
push
inc
inc
cmp
jmp
or
test
ficompl
cs
jae
pop
ret
pop
outsb
push
and
es
cld
fstpt
lret
repz
sbb
xor
mov
cwtl
jge
ret
pusha
xchg
ret
mov
mov
xchg
or
out
adc
sahf
bound
mov
imul
popf
xchg
jmp
mov
mov
add
push
mov
push
lcall
es
or
stos
mov
inc
sbb
cmp
or
loope
mov
push
adc
xchg
imulb
mov
cwtl
push
push
and
pop
lds
cmp
jne
mov
and
sbbb
int
inc
mov
lret
or
imul
and
dec
test
push
lods
and
hlt
xchg
mov
imul
test
adc
cli
pop
mov
pop
mov
fnstcw
jb
mov
sbb
sub
xchg
mov
fdivrl
xor
js
push
push
cmp
loope
sub
sarl
adc
jmp
pop
test
sahf
dec
xchg
jg
add
xchg
std
ret
jno
xlat
call
cvtps2pd
arpl
stc
ss
divl
mov
fcomps
cmpsl
mov
ja
pop
mov
pop
addr16
sbb
popf
adcb
daa
jg
cltd
sub
rorb
insb
mov
ret
decl
mov
stc
insb
dec
xchg
xor
aaa
xchg
in
jecxz
popf
pushf
jae
mov
cmp
jnp
jl
and
ret
cmpl
mov
call
mov
mov
andb
int
jnp
fstl
fiadds
adc
push
pop
adc
call
xor
or
cli
and
js
movsl
and
out
popf
fs
mov
jg
xchg
jns
jge
and
inc
lret
cmp
mov
decl
fistps
aad
sahf
inc
pop
xor
std
fsubrl
mov
aaa
adc
jmp
inc
addr16
cwtl
push
cmp
in
jo
stc
pop
jo
jns
sub
inc
pop
adc
lret
add
imul
mov
cli
mov
mov
sub
sti
sub
push
cmpsb
mov
iret
mov
sbb
jae
and
pop
test
xchg
push
jne
insb
push
in
iret
orl
cmp
gs
aas
pushf
orb
pop
jae
inc
pop
stc
lds
xor
dec
shrb
dec
popa
les
fwait
cmp
push
and
sbb
and
out
sbb
mov
mov
popf
pop
push
push
jge
sub
cmp
and
xor
mov
inc
fcomps
pop
aad
cli
dec
cld
test
xchg
cmc
sti
xlat
fisubrl
jle
fildl
in
lods
cmp
mov
cmpsl
xor
sbb
cs
cmp
dec
lods
push
mov
popa
inc
jl
dec
in
ja
dec
or
sti
pop
sbb
and
mov
lea
sbb
or
xchg
mov
mov
lcall
jne
or
mov
mov
or
inc
push
mov
mov
mov
inc
push
inc
pop
imul
mov
xchg
mov
push
fidivrs
cld
aaa
mov
out
push
les
push
mov
cld
lret
lret
xchg
cmc
and
dec
mov
push
jns
adc
wrmsr
out
pop
lock
cmp
xor
inc
push
sub
fwait
pusha
mov
sub
mov
test
mov
stc
push
adcl
into
lahf
lods
push
mov
js
pop
jae
call
sbb
xor
cli
and
dec
jne
mov
out
popf
sbb
pop
enter
mov
mov
out
int
sub
ud0
or
adc
xchg
stos
xchg
insb
in
jae
push
xlat
stos
inc
mov
or
ret
jo
repz
or
subb
repz
cli
add
out
sbb
mov
sub
dec
and
mov
clc
and
xchg
mov
inc
jl
dec
xchg
jo
cmc
mov
mov
mov
out
mov
sahf
imul
push
or
cmp
ljmp
xor
addr16
mov
pop
inc
dec
sub
pop
mov
inc
pop
mov
rcrb
lods
inc
xor
std
cmpl
dec
xor
mov
push
imul
or
test
push
je
stos
xor
mov
pop
push
push
dec
ficomps
repz
dec
lcall
mov
sbb
stos
sbb
std
fdivs
stos
dec
jmp
dec
rolb
iret
adc
pop
mov
subl
push
add
stos
mov
mov
xor
dec
std
mov
cltd
popf
lahf
cwtl
jle
sbb
mov
out
stc
mov
lds
lahf
mov
cs
add
add
test
sbb
pop
mov
movsb
pop
push
xchg
inc
push
push
movsb
sbb
dec
loope
push
xchg
outsl
jmp
pop
ss
mov
popa
push
or
and
mov
lret
addr16
xchg
dec
dec
imul
dec
dec
out
and
jae
jl
lret
outsb
mov
call
and
cmp
in
and
repz
movsb
popf
mov
adc
jecxz
int
mov
dec
loop
lcall
cmc
sub
in
in
inc
cmc
sahf
je
fsubrp
ret
mov
mov
xor
mov
gs
imul
and
jge
add
fcoms
int
xlat
cli
or
lock
push
jl
pushf
pop
stos
aad
icebp
fstpt
mov
lret
mov
adcb
icebp
insb
mov
xchg
adc
dec
xor
cmp
dec
pushf
fucomip
mov
inc
push
std
adc
lods
popa
jne
xor
scas
aaa
xchg
mov
xchg
mov
std
out
ficomps
adc
mov
pop
ljmp
or
sbb
pushf
repnz
fcomip
dec
leave
fwait
pop
cmc
mov
xor
fidivs
fcmovbe
mov
jns
mov
popa
jbe
push
aas
mov
sbb
addr16
ss
sub
enter
cmp
in
or
pushf
lret
mov
xchg
fdivrl
les
dec
inc
xor
dec
and
dec
dec
jbe
mov
dec
push
xchg
inc
jno
push
inc
inc
sbb
dec
xor
cmp
cli
pop
test
fidivrl
mov
cmp
jno
jae
daa
movl
imul
jle
jl
gs
xor
xchg
mov
push
mov
cmp
testl
mov
add
repz
xor
add
xchg
pop
inc
inc
cli
push
sub
pop
daa
addr16
xor
test
push
xor
nop
fwait
cmp
mov
jno
mov
sahf
mov
cwtl
cmp
outsl
sbb
push
out
es
xchg
dec
push
andl
sub
loop
or
lds
scas
sbb
movsl
dec
cmp
popa
lahf
mov
movsl
inc
sbb
icebp
lock
out
fldt
stos
pop
pop
push
mov
xchg
jmp
je
add
mov
jb
paddsw
mov
stos
sbb
insl
daa
sbb
sti
fistl
jbe
int3
dec
sbb
xchg
cmp
sahf
inc
mov
adc
dec
dec
les
push
adc
add
int
jns
inc
pusha
cmp
pop
ret
pop
lds
adc
push
std
ljmp
mov
and
dec
lret
inc
jno
test
jp
mov
mov
test
dec
xor
and
pop
into
and
pop
jl
cld
and
rolb
add
lds
cmp
std
imul
cmp
lds
shll
mov
mov
pop
lods
addr16
mov
outsl
repnz
popa
mov
sbb
int3
pop
flds
cmc
lods
push
not
loopne
inc
push
dec
pop
sbb
xor
mov
jg
jnp
mov
inc
dec
in
and
clc
cld
clc
sbb
xlat
dec
les
aam
subl
xchg
lock
xchg
mov
movsl
dec
orl
mov
jne
popf
arpl
repnz
pop
insl
and
xchg
aad
clc
mov
lea
loopne
stos
push
xlat
shll
push
fldl
jne
xorl
sbb
inc
or
clc
repz
ds
jae
sub
insb
mov
jbe
dec
dec
data16
inc
das
fs
bound
out
jg
xchg
pushf
rolb
adc
push
cld
push
lret
bound
nop
clc
leave
and
mov
mov
jge
mov
inc
add
scas
adcb
fcoml
mov
sbb
pop
int3
inc
mov
sbb
push
fidivl
push
add
add
xchg
adc
aas
inc
xor
push
imul
and
push
arpl
jge
xchg
sbb
pop
jb
movsl
pop
dec
push
jp
jnp
dec
mov
gs
mov
cmpsb
dec
imul
mov
aas
hlt
push
adcl
jbe
sahf
movsb
loope
mov
setbe
dec
fmulp
mov
jg
adc
aas
cmp
call
and
lcall
xchg
cli
gs
push
jmp
and
cld
dec
cmc
jge
mov
jnp
bswap
in
xchg
jmp
push
arpl
enter
out
insb
gs
mov
dec
sub
jmp
pop
aas
lea
cltd
scas
fisubrs
int3
test
daa
add
cmp
rorl
inc
xchg
inc
aas
sub
aad
ss
xchg
pop
xor
insb
pop
jns
fnstsw
test
mov
adcb
xor
lods
bound
push
mov
test
jmp
inc
pop
mov
jbe
mov
mov
sahf
add
lods
xor
imul
in
cmpsb
dec
cmc
push
scas
sbb
add
sbb
pusha
fildl
or
das
cli
in
popf
loopne
push
push
movsl
jae
stos
pop
gs
shll
fistpll
outsb
add
jmp
sbb
jmp
xor
subb
outsb
dec
in
pop
inc
and
adc
notb
jle
sub
pop
mov
adc
stos
push
ljmp
or
jns
fildl
mov
cltd
jnp
inc
fistps
mov
and
scas
push
xchg
mov
stos
sarb
xor
loop
hlt
pop
mov
and
fmull
dec
add
sub
cmc
ds
push
test
scas
pop
fisttpll
cld
insl
mov
gs
ja
sbb
jmp
push
in
mov
push
jo
push
das
mov
repnz
or
cmp
inc
cli
punpcklbw
loope
repnz
repnz
clc
mov
ds
and
int
int
xchg
jmp
and
fisttps
push
clc
je
out
inc
dec
push
int
dec
push
inc
sbb
mov
test
and
imul
add
sbb
into
and
aad
les
aad
inc
cs
push
ret
and
test
out
lret
sarl
add
insl
inc
iret
mov
jnp
xlat
cmc
notl
xchg
mov
mov
divl
movsl
mov
lea
lods
mov
jb
cld
mov
cmp
push
adc
stc
xchg
mov
shlb
in
out
aas
in
sti
loopne
pop
xor
xchg
mov
pop
vpor
out
or
enter
je
mov
lcall
stos
fbstp
nop
arpl
js
cmp
repz
mov
and
cmpsb
fmull
add
insl
std
cmp
pushf
xor
jle
mov
imul
pop
test
loopne
cmp
nop
and
insb
ljmp
lcall
lds
mov
jno
stc
loopne
inc
mov
or
mov
insb
inc
and
xor
mov
cmp
insb
sbb
je
and
or
adc
mov
cmpsl
xor
loop
mov
lods
add
sti
pop
mov
mov
stc
imul
cmp
ljmp
push
push
fcmovne
inc
stos
add
add
mov
stc
adc
push
mov
sarl
mov
in
mov
aaa
insb
pop
mov
xor
or
ret
std
xor
pusha
xor
mov
fmull
cmpsl
inc
dec
bound
mov
mov
pop
inc
mov
and
mov
xor
into
or
sub
add
jae
xchg
push
mov
mov
sub
mov
mov
ja
mov
adc
outsb
push
adc
push
fcoml
bound
std
inc
js
xor
outsl
ljmp
jp
testb
xchg
out
aas
lock
mov
insb
loop
mov
pop
pushf
mov
push
or
mov
mov
inc
mov
sub
mov
pop
jno
into
push
mov
ffree
dec
sbb
outsb
xchg
fisttpll
inc
push
rclb
jno
adc
cltd
push
fsubs
pop
and
ret
cltd
dec
jg
pusha
mov
inc
mov
sbb
pop
jge
leave
xchg
push
jg
pop
cmp
pusha
mov
jle
jge
dec
sub
insb
dec
dec
fistps
cmc
rclb
lahf
scas
nop
jecxz
mov
ficomps
adc
push
sbb
push
add
bnd
sub
xchg
ja
push
add
pop
add
mov
std
mov
xor
and
je
jbe
clc
loope
pop
inc
cli
imul
lahf
shrb
sti
pop
pop
mov
cmc
orb
xchg
sbb
cs
lret
dec
cmc
push
inc
cmc
loope
lds
mov
imul
and
xchg
cmp
fwait
and
or
lods
cmc
adc
add
dec
lea
lret
sub
and
cld
xchg
movnti
sub
fisttpll
or
aam
pop
adc
inc
cmpsl
or
std
imul
add
out
xlat
pop
test
aaa
push
cmp
in
lcall
push
fildll
sub
fisttpl
xchg
negl
lods
and
add
jns
addr16
loop
pop
jae
dec
fiaddl
or
mov
push
sub
inc
gs
push
fiaddl
clc
in
out
out
lods
mov
add
and
mov
jb
jnp
mov
mov
in
mov
out
sbb
outsl
inc
sub
outsl
ret
shl
xchg
mov
adc
dec
jle
jmp
out
jnp
out
and
fimull
pop
and
mov
sbb
jge
lods
adc
ljmp
cmpsl
jne
inc
cltd
test
fildll
jecxz
or
out
popa
sti
cmpsb
sub
push
es
xor
sbb
add
xor
imul
or
es
xlat
enter
jp,pn
adc
add
loopne
mov
sbbb
adc
fnstsw
push
and
fs
jp
cli
hlt
add
pusha
sbb
cmpsl
into
ficomps
or
cmp
sbb
fistpll
mov
lcall
add
test
lds
push
or
in
xchg
mov
cmp
aam
mov
jle
and
rcrl
es
mov
xor
popa
movsb
push
leave
bound
push
enter
repnz
outsb
jns
cmp
jp
insl
or
xchg
movsb
sub
out
and
testl
or
fwait
add
xor
and
lahf
mov
xchg
out
dec
movsl
cmpsb
pop
enter
pop
addb
adc
sbb
je
das
mov
push
pop
pop
push
jne
mov
in
adc
mov
ror
fwait
pop
fnsave
movsb
cld
rclb
mov
addr16
sti
pushf
gs
daa
lret
pop
and
shld
jle
popf
outsl
push
pusha
cmpsl
inc
cmp
pop
push
push
adc
add
mov
call
mov
jnp
mov
mov
pop
pop
inc
mov
lds
cld
rcl
clc
daa
mov
jmp
sub
data16
mov
test
repz
cli
mov
int
insl
shlb
call
in
enter
lahf
jl
stc
andb
push
and
leave
je
or
jl
stc
adc
fsub
add
and
in
aaa
stc
outsb
movaps
into
inc
addr16
pushf
jl
xlat
mov
fs
mov
mov
mov
mov
dec
test
les
jl
movsb
sbb
sub
bound
xchg
jmp
add
mov
cmp
cmc
push
out
hlt
shl
cmpsb
sub
sub
jg
push
orl
fadds
xor
push
cmc
bound
icebp
rorb
aad
fs
cld
push
mov
add
jae
ss
mov
and
jb
rorl
nop
cmp
xchg
test
add
push
and
adc
sarb
ret
jmp
lock
int3
cmp
movsl
adc
push
lcall
pop
xor
sbb
push
xchg
mov
pop
stos
daa
sub
inc
rcll
mov
xchg
lds
sbb
mov
jge
pop
loope
sub
jp
jno
inc
inc
jae
stos
popl
inc
dec
in
mov
insb
jbe
jp
cmp
stc
dec
int
xchg
mov
outsl
mov
mov
cwtl
jl
push
aaa
sti
pop
in
add
xchg
rcrb
or
inc
out
push
and
bnd
sbb
xchg
adc
stc
inc
inc
push
int
ja
repnz
sbb
xchg
sub
pop
out
mov
data16
push
mov
sbb
xchg
jae
mov
roll
mov
adc
jae
hlt
cmpsb
mov
push
push
mov
stos
sbb
fnstcw
dec
sbb
push
jno
in
add
mov
nop
cwtl
ret
pop
es
mov
cmp
pop
or
jne
loop
loope
addr16
jg
je
inc
out
or
jmp
or
dec
icebp
loopne
bound
push
mov
pushfw
or
cmp
addr16
or
aas
insb
dec
xor
or
fdivs
cmp
shll
inc
or
xchg
inc
shll
sti
jne
rdpmc
fs
adc
cmp
stc
push
mov
lock
lea
mov
sbb
adc
sti
lcall
lds
rcr
and
xchg
mov
cmc
mov
xor
in
lods
in
xchg
mov
dec
leave
es
pop
pushf
sub
mov
push
push
fidivl
sti
inc
push
repnz
adc
shr
bound
ja
inc
mov
push
in
adc
shll
or
bound
push
mov
and
add
int
dec
stos
int3
inc
xlat
popa
loopne
shll
cmp
push
mov
xchg
sbb
pop
sbb
das
dec
xor
fs
pop
and
adc
mov
inc
or
dec
clc
xor
or
std
das
adc
pop
pusha
jno
int
int3
lret
cltd
pop
insb
adc
jg
sbb
jge
dec
adc
bound
push
rcl
jle
in
mov
aam
jmp
hlt
jne
add
mov
lret
in
aad
dec
dec
andb
scas
xchg
adc
xor
mov
mov
xchg
mov
sbb
fldt
add
cmc
jp
cmpsl
jb
dec
sub
sub
in
cmp
scas
sub
pop
jg
xor
mov
lods
fs
and
xor
add
mov
incb
ficoms
fs
xor
addr16
sbb
clc
sub
push
scas
loope,pt
jnp
popf
mov
xlat
inc
les
sub
das
pusha
out
les
cmp
and
icebp
push
adc
movsb
dec
and
mov
push
std
push
mov
fs
outsb
out
lahf
adcb
cmpsb
insb
loope
aad
pushf
xchg
mov
sub
xlat
loope
outsb
mov
test
xchg
test
in
fdivrp
jp
adc
rcl
push
imul
add
mov
nop
cmp
pushf
adc
sub
mov
shlb
rorb
mov
add
clc
cmp
in
sub
cmpsb
push
cwtl
call
popf
pop
sub
stos
or
in
cltd
fidivs
ljmp
cmp
adc
inc
int3
int3
addr16
fisttps
ret
dec
loope
cmp
cmp
pushf
cmp
and
mov
sub
xchg
pop
inc
cmp
loop
aaa
sub
jle
or
into
add
xchg
aam
shrb
pop
gs
add
push
mov
fsub
sub
cmp
rcrb
push
mov
xchg
pop
push
and
inc
push
mov
pop
lret
push
fmulp
idivb
adc
dec
cwtl
inc
jp
xlat
fadds
or
incb
add
lods
push
jg
pushf
data16
jecxz
test
mov
sub
inc
inc
lea
out
adc
pushf
test
pop
test
insl
cmpsb
dec
sti
into
or
dec
lea
dec
xlat
sub
dec
or
bound
inc
xchg
dec
sahf
cmp
lds
inc
mul
push
mov
push
cmp
xor
inc
xchg
ficompl
adc
pop
leave
sahf
test
xchg
pop
lcall
orl
pop
or
fwait
das
xchg
jecxz
mov
mov
cmc
clc
mov
leave
push
pop
dec
mov
icebp
adc
sub
pop
mov
in
loope
cmp
mov
leave
mov
sub
fwait
sub
xchg
sbb
outsl
and
jb
xlat
imul
dec
repnz
arpl
sub
sbb
sahf
push
data16
add
sub
cmc
xor
sub
pop
mov
mov
adc
lods
icebp
pop
adc
inc
xor
add
repz
mov
add
jno
inc
rcr
out
or
dec
imul
lods
or
inc
sbb
dec
sbb
xchg
xor
or
jmp
cld
or
lret
pop
mov
aaa
add
in
mov
aam
popa
outsl
and
pop
lret
cld
and
faddl
pop
ja
cld
lret
aas
jle
pop
push
in
mov
pop
iret
push
cwtl
mov
fwait
push
insl
int3
bound
pop
mov
sub
mov
mov
sub
add
mov
mov
add
lods
pop
lods
test
imul
add
cmp
les
sbb
mov
out
or
cmp
mov
xor
mov
imul
dec
sarb
push
movsl
push
mov
pop
sbb
fdivrl
das
fdivr
inc
cli
ds
hlt
mov
in
sahf
bound
insb
sbb
xchg
cli
jp
jo
mov
or
xchg
pushf
imul
and
dec
mov
add
cmpsb
and
cmp
mov
add
dec
mov
inc
xor
movsl
inc
in
call
pop
sbb
ficompl
outsb
ret
ret
mov
push
lret
pop
or
out
jmp
push
push
pop
pop
cwtl
mov
jbe
movsl
mov
packsswb
or
test
aad
int
xor
add
pop
loope
add
pop
add
cli
sbb
add
mov
xchg
fdivr
pop
pop
scas
loopne
cmp
mov
cli
sub
js
aam
push
in
imul
sti
in
dec
stos
lcall
sbb
imul
pop
lahf
roll
xor
mov
popa
fsubs
sub
sub
adc
adc
and
and
loope
xchg
frstor
and
ss
sbb
mov
inc
or
mov
sahf
sub
pop
pop
addb
jmp
pop
mov
xchg
sub
add
cmp
pop
les
add
mov
gs
das
xchg
sub
sti
test
repnz
mov
js
fs
jo
adc
add
call
test
mov
xor
or
dec
xchg
cltd
fists
test
popf
lods
push
ret
lock
std
mov
loop
mov
icebp
and
mov
or
push
enter
adc
jnp
cwtl
mov
pop
pop
sub
mov
pshufw
js
jmp
mov
test
out
outsl
in
ficoml
xor
push
les
pushf
cmc
insl
mulb
in
xchg
mov
loopne
push
icebp
jmp
push
mov
mov
stc
add
icebp
push
push
adc
fidivl
sub
stos
xchg
es
aad
mov
push
lret
pop
sub
mov
dec
nop
mov
xchg
aas
incb
or
jmp
outsb
mov
mov
dec
sbb
dec
push
xor
mov
lahf
jp
pop
inc
pop
dec
aas
ret
sbb
shll
jne
jns
pop
repnz
pop
repnz
movsb
cmp
sub
cmc
pop
call
sub
fs
pop
jae
or
icebp
or
dec
jmp
cld
or
daa
fmull
mov
pop
cmp
or
and
movsl
push
cli
popf
pop
repnz
cvtps2pd
negl
mov
les
sbb
mov
divl
aaa
stos
mov
roll
cmpl
push
sbb
incb
jb
push
push
or
xor
loopne
out
lock
bound
jle
popa
xchg
testl
xor
dec
pushf
sbb
or
std
add
leave
lcall
pop
xorl
mov
cmp
in
movaps
pop
or
test
icebp
out
pop
cmp
pop
inc
insb
pop
jecxz
hlt
sbb
add
loopne
cs
jle
popf
subb
or
xor
gs
rcl
cmc
mov
cli
pop
push
push
or
cmp
adc
and
shlb
outsb
jle
repz
call
push
push
inc
or
xchg
sbb
mov
test
aam
inc
addr16
push
xor
mov
ja
jmp
lret
xor
dec
nop
leave
int3
loope
adc
push
lcall
jl
jne
or
adc
scas
push
repz
int
dec
js
mov
adc
jmp
push
lods
jne
lock
jle
sbb
fidivs
mov
fs
xchg
mov
in
pop
xchg
inc
aad
mov
or
out
sub
jae
cli
das
mov
dec
jo
pop
andl
sub
push
xor
leave
movsb
push
cltd
push
adc
pusha
push
sub
pop
dec
movsl
inc
sarb
xor
int
add
inc
popa
pop
bound
mov
stc
in
les
ret
outsb
cs
pop
mov
loopne
icebp
xor
dec
pop
pop
cmpsl
in
and
mov
test
dec
xor
shlb
cmp
sbb
jge
sub
out
lods
shlb
mov
inc
popf
fwait
clc
push
test
sub
sbb
lods
pop
xchg
aaa
push
jp
rorl
lret
loopne
pop
push
aaa
xor
les
dec
jg
adc
cmc
pop
int
sbb
in
mov
or
test
xchg
imul
stos
push
popf
arpl
mov
arpl
test
enter
adc
or
xchg
sbb
mov
int
mov
mov
sahf
dec
xor
subb
mov
insb
inc
cmp
iret
and
pop
js
jmp
mov
jae
jle
pop
xchg
mov
xor
sbb
test
push
cmp
add
mov
loope
mov
mov
jl
mov
push
mov
es
mov
mov
je
mov
into
insb
subb
dec
scas
jg
das
xlat
push
mov
add
arpl
imul
mov
push
xchg
jl
test
lret
adc
push
mov
inc
pop
jae
enter
out
jl
pop
sub
add
jp
adc
shrb
pop
add
or
rorb
loope
arpl
loopne
cmp
sbb
jecxz
clc
movsl
xor
addr16
movmskps
js
dec
mov
mov
pop
mov
sub
adc
pop
in
fdivrp
pop
dec
mov
mov
push
stc
out
xchg
mov
pop
dec
xchg
cmc
cli
pop
shll
arpl
addr16
pop
mov
lods
or
xor
dec
sbb
loopne
sbb
xchg
push
call
fdiv
fsubs
lret
xchg
inc
in
sub
sbb
lcall
pop
pop
mov
cltd
rolb
scas
fisubl
cmp
mov
insb
lahf
ret
aad
push
daa
cmc
shr
nop
push
in
add
sub
mov
adc
std
push
xorl
and
push
cwtl
mov
shll
pop
cltd
in
test
sbb
fstl
cmc
cmp
adc
outsb
ss
loopne
clc
pop
xchg
in
or
or
jo
cmpsb
lds
xor
arpl
xchg
fistpl
das
xchg
sarb
cmpsb
xorl
or
rorl
xor
xchg
sub
inc
lods
jns
add
lahf
pop
jg
push
inc
iret
push
out
repnz
or
loope
lods
mov
mov
sarb
or
rorl
iret
aas
insl
stos
cli
xor
mov
jmp
inc
push
mov
xor
or
jg
mov
jne
adc
pop
mov
sbb
ja
fucomip
xchg
fwait
sub
cmp
les
inc
jecxz
dec
xchg
call
test
xchg
loop
cmp
xchg
fldcw
jns
ret
scas
int3
xchg
ljmp
push
mov
mov
push
xchg
add
mov
outsl
jns
mov
mov
test
sbbb
out
xlat
out
fcmovnb
pop
mov
enter
imul
pop
push
adc
test
or
fists
cmp
dec
jl
push
fwait
pop
les
xor
xor
stos
in
inc
in
outsb
sti
pop
std
ds
push
mov
pop
sbb
ljmp
mov
adc
or
and
fdivs
cltd
adc
cli
fisubl
lahf
outsl
insl
mov
das
or
jle
mov
pop
sahf
ds
push
in
xor
icebp
jno
dec
lret
xor
mov
cld
add
sarb
cmpsl
popf
pop
xchg
or
sbb
in
pop
cmp
jae
mov
cmpsb
movsb
jae
xchg
ds
mov
ss
pop
push
jne
pop
xchg
shrb
out
daa
lea
sub
sbb
stc
sub
loop
adc
add
aad
and
sbbl
lds
push
cwtl
in
ds
push
stc
addl
pop
cmp
push
mov
outsl
scas
xor
jne
jb
mov
mov
not
lock
out
int3
and
fsubl
mov
mov
dec
mov
sbb
outsl
insb
dec
jge
pushf
push
xchg
push
xor
loope
ret
stos
aaa
fisubl
xor
push
cmp
pusha
jp
jb
pop
sub
lods
test
roll
aam
or
aas
mov
jns
in
sbb
jl
inc
insl
mov
ljmp
test
lods
xor
daa
inc
ja
mov
stos
out
push
ds
popf
and
in
sbb
xlat
adc
xchg
repz
rcrb
sbb
enter
mov
lea
mov
sbb
loopne
adc
mov
into
outsb
add
es
jbe
cmp
jne
cmp
jle
sti
lret
inc
push
incb
xor
push
push
jne
arpl
pop
mov
mov
add
gs
insl
cmp
test
into
xor
scas
mov
xchg
mov
push
jb
insl
push
sub
cmpsl
mov
rcrb
sahf
jg
dec
scas
leave
and
cmp
imul
int3
push
pop
cmpsl
scas
ss
movsl
pop
inc
lock
insl
pop
bound
mov
test
mov
sub
out
sub
inc
ljmp
cmp
clc
jnp
clc
inc
push
out
inc
popf
xchg
mov
inc
xchg
dec
icebp
sbb
push
cli
jle
jg
shll
nop
hlt
cmc
shlb
xchg
adc
shrl
fnstenv
xchg
pushf
mov
mov
ljmp
clc
aas
gs
xor
inc
int
inc
outsb
xor
pop
lahf
out
addr16
add
decl
add
jge
in
xor
sub
xlat
in
je
aad
shrb
out
fmulp
int3
push
sbb
call
cmc
push
xor
jg
test
pop
sub
imul
push
pop
jmp
es
test
mov
or
cmp
iret
adc
sbb
dec
das
testl
mov
dec
fwait
mov
or
inc
cs
xchg
enter
mov
add
ss
scas
mov
jmp
int
xchg
rclb
push
add
in
mov
mov
and
cmp
xchg
divb
mov
je
lcall
inc
sahf
fadds
gs
lods
xchg
cmp
andl
int
loopne
or
lahf
mov
push
cmpb
add
adc
hlt
xchg
in
into
inc
or
es
adc
jb
std
cmpsl
pop
pop
jo
mov
imul
lods
icebp
xlat
cltd
popf
mov
mov
lcall
mov
push
dec
sub
mov
loop
xor
mov
loop
leave
xor
nop
fidivs
iret
repnz
mov
pop
or
jns
aam
sarl
jne
movsl
mov
mov
lock
sahf
pop
mov
pushf
test
cmpsb
dec
fdivl
add
add
jbe
rcl
stos
add
std
cltd
mov
loope
mov
sub
mov
in
movsb
es
mov
mov
scas
loope
xchg
add
mov
push
push
inc
xchg
inc
sbb
fnstcw
test
dec
jle
and
sbb
popf
adc
outsl
aad
mov
lock
aaa
cmpsb
loop
pop
cmpsb
out
dec
data16
sbb
jno
jbe
cmp
mov
cmpsl
inc
pop
dec
pop
jns
jle
insl
addr16
subl
cmp
lret
insb
lock
shrl
into
or
cmp
mov
adc
dec
push
fld
jns
testb
push
dec
mov
gs
mov
and
xchg
test
cs
push
push
sbb
rcr
aas
mov
test
xchg
or
inc
ret
add
pop
inc
push
mov
mov
pop
xor
icebp
lods
mov
sbb
xchg
inc
sub
mov
push
sahf
dec
test
cld
fcmovbe
xchg
insb
mov
outsl
js
mulb
add
inc
cmp
fidivrl
push
scas
push
ret
jp
dec
ror
arpl
sbb
dec
aaa
push
das
test
jb
add
repnz
xchg
cwtl
push
je
sahf
inc
adc
pusha
arpl
jo
mov
outsb
adc
push
xlat
lret
ds
xchg
icebp
pop
cltd
and
fcomi
mov
adcb
push
push
mov
jecxz
stos
push
sub
push
gs
fwait
ds
adc
inc
ss
mov
test
xchg
and
cmp
jbe
add
sbb
adcb
scas
mov
xor
mov
scas
adc
aas
or
rcll
sub
mov
jne
int3
fcoms
das
cmp
insl
cmp
rclb
sbb
call
adc
cmp
mov
in
aam
inc
lods
inc
lods
addr16
sbb
mov
dec
sub
es
cmp
adc
sahf
or
jmp
lahf
insb
and
mov
cmp
icebp
xlat
xor
mov
add
mov
xchg
mov
sarl
inc
lcall
mov
enter
jae
js
or
clc
pop
and
cmp
inc
pusha
push
loopne
xchg
cmp
pop
sbb
mov
xor
in
fwait
ret
sub
mov
and
das
lret
rcrl
pop
ljmp
sub
ret
or
inc
mov
sarb
sub
jbe
jmp
cmp
popa
fsubrs
notl
notl
adc
out
cmc
add
jb
mov
adc
fcmovne
call
cs
pop
test
add
mov
cwtl
imul
orb
push
sbb
adc
cmpsb
andb
inc
pop
shll
push
jno
ret
int
jb
dec
nop
imul
fiadds
cmp
lds
mov
sub
scas
cmp
pop
ret
popf
jle
jbe
jae
outsl
lea
test
cmpsl
or
mov
lods
inc
dec
push
in
clc
xor
adc
jnp
test
nop
push
jae
cmp
rorl
hlt
sbb
adc
jae
jbe
mov
adc
push
pop
stc
jbe
sub
or
or
lods
lahf
mov
data16
xchg
int3
xchg
js
pop
jmp
xchg
sbb
adc
ljmp
mov
dec
mov
imull
jge
inc
mov
mov
mov
test
fsubl
jnp
mov
xchg
movsl
mov
mov
xchg
dec
adc
int3
jae
adc
xlat
pusha
and
inc
mov
cmp
mov
pop
les
sub
add
leave
dec
lds
scas
or
xchg
jo
fldl
in
or
adc
mov
aas
pop
push
inc
hlt
or
ja
popa
xorb
jbe
or
jg
les
jl
jbe
add
or
insb
ds
fwait
sub
fmull
jb
js
mov
rorl
lods
mov
imul
dec
in
lock
push
cmp
mov
test
fistl
and
ret
insb
test
push
stc
fs
adc
inc
mov
pusha
int
mov
out
jmp
mov
stos
lret
arpl
ss
popa
cmp
sbb
ficompl
fwait
push
shll
notl
out
adc
mov
cmp
xchg
cmc
mov
enter
iret
mov
sub
inc
daa
sub
sbb
repnz
ljmp
mov
cli
jno
fiadds
cmp
std
lret
mov
mov
mov
pushf
jo
cwtl
inc
jge
and
dec
add
or
pop
xor
mov
shr
mov
mov
mov
dec
scas
int3
push
insl
push
cld
jle
fmul
dec
ja
incb
rolb
out
adc
mov
fwait
insb
leave
pop
pop
cmpsb
js
outsb
jg
xor
sahf
lods
pop
push
jne
sbb
shlb
xchg
push
popf
pop
add
std
sub
push
fsubrl
xchg
popf
cmp
inc
add
sub
and
cmp
gs
mov
bts
cmpsb
add
in
rorb
orl
test
xor
push
add
mov
popa
ret
dec
xchg
inc
mov
mov
xchg
in
iret
imul
jp
aaa
sbb
aad
or
push
aas
or
or
sar
mov
cmp
mov
hlt
imul
push
movsb
cmc
sbb
testl
jno
xchg
mov
push
out
jbe
leave
out
adc
stos
mov
mov
lods
ljmp
adc
aad
xchg
adc
ret
xor
push
lcall
data16
xchg
and
push
xchg
cld
fisttpll
jl
dec
sbb
add
push
cmpsb
movsl
insl
inc
push
push
es
and
jb
jge
bound
xor
out
ss
or
xchg
vcmpless
outsl
pushf
xchg
push
add
repz
push
std
cmp
jno
dec
lods
sub
sub
subl
sahf
daa
push
mov
dec
stos
fs
sahf
ljmp
mov
xchg
jns
xchg
add
imul
jge
fists
adc
mov
icebp
lret
out
jmp
shr
jae
dec
fscale
popa
loopne
push
pusha
adcb
mov
pushf
sti
xorl
xchg
sbb
shlb
xor
bnd
lds
mov
mov
test
mov
mov
xchg
mov
jle
add
cmp
xchg
push
roll
test
dec
mov
add
sub
mov
dec
push
jne
add
imul
les
sbb
test
sbb
push
xchg
enter
cmp
ret
sbb
int3
pop
jge
hlt
adcb
mov
ja
gs
imul
dec
das
pop
in
xchg
pop
push
outsb
inc
and
cmpl
jg
mov
mov
je
mov
adc
xlat
mov
jmp
jecxz
sub
js
add
xchg
sub
fmuls
fld1
add
rcrl
cmp
js
xchg
or
mov
xor
in
fiadds
fisttpll
adc
pusha
jnp
jno
leave
iret
into
fcompl
sub
and
int3
xchg
fcomps
outsb
out
xchg
sub
mov
notl
push
aam
pop
dec
dec
lea
push
add
test
aas
lods
leave
jbe
push
cmpsb
js
mov
jl
and
sub
dec
xor
cs
imul
and
sbb
nop
ret
xchg
lret
and
adc
push
cs
lods
push
xchg
in
push
ds
popa
test
push
inc
xchg
pop
pop
incl
xchg
cltd
fisubrs
xchg
aam
in
xchg
xor
sub
fisttps
pop
cwtl
mov
std
aad
add
inc
and
and
imul
es
inc
sub
stc
daa
test
push
test
arpl
dec
mov
pop
stc
notb
adc
and
sub
out
fistpll
cmpb
add
and
inc
out
jp
xchg
jp
test
jle
outsb
imul
ja
enter
pop
pop
ljmp
jb
inc
or
or
xor
push
imul
mov
sub
pop
ret
pop
inc
shrl
mov
jbe
pop
inc
adc
rcrb
shl
je
mov
inc
insb
lea
mov
jg
imul
jbe
out
jnp
jbe
add
add
xchg
mov
xchg
cmp
lds
jno
cmp
mov
or
dec
fstpt
in
cmc
test
leave
rorl
das
jp
or
pushf
outsb
shll
repz
rolb
push
push
cs
iret
lock
dec
adc
shll
stos
push
dec
sub
call
aam
imul
mov
in
mov
adc
sub
sahf
arpl
mov
pop
mov
pop
cmpsl
es
jbe
ja
lahf
cltd
iret
hlt
jp
sub
sbb
pop
cmp
inc
dec
pushf
push
and
lcall
inc
sahf
jbe
ljmp
or
cli
ja
jge
pop
add
and
lods
jbe
sbb
mov
test
xor
xchg
in
arpl
test
inc
loope
aas
and
fstpt
into
cmp
jno
mov
xor
pop
jge
pushf
mov
aaa
lret
mov
add
sbb
fildll
add
rorb
hlt
inc
xor
push
in
test
pop
repnz
out
icebp
out
sub
adc
imul
in
mov
xor
or
stc
jge
leave
sbbl
mov
mov
xor
adc
inc
or
out
lds
sbbb
es
aas
pop
sub
test
jecxz
xlat
movd
inc
stc
pop
jp
shl
pop
lock
jecxz
inc
iret
fsub
arpl
sub
es
xchg
pop
sbb
stos
or
mov
sahf
lahf
lods
sbb
push
inc
ja
not
sti
adc
sub
iret
fwait
pop
in
sarl
lods
rcll
xchg
cmp
test
push
cmpb
sti
jne
les
mov
pop
inc
shlb
pop
daa
inc
mov
dec
push
pop
in
push
lahf
xlat
cwtl
sub
sbb
jmp
cmp
mov
lods
mov
or
jb
jg
adc
and
pop
lods
lods
bound
jle
pop
jg
es
inc
dec
xchg
in
jge
inc
fildl
cmpsl
push
mov
mov
cmpsl
movl
mov
or
mov
dec
insl
rclb
xchg
lods
jmp
enter
pusha
mov
mov
aad
xchg
dec
and
pop
outsl
xlat
pop
xchg
and
mov
fistps
hlt
and
pop
ss
cmp
pop
into
das
stos
pop
cltd
movsb
in
std
notl
adc
ficoms
popa
cltd
fsubrl
daa
sbb
out
xor
jb
mov
jne
ja
mov
xchg
fstpt
arpl
cmpsl
outsb
push
jo
or
cltd
lcall
cmp
sbbb
mov
or
adc
shll
sub
mull
xlat
push
xchg
ret
mov
pop
mov
cmp
push
bound
adc
cmp
inc
pushf
fnsetpm(287
mov
xchg
and
adc
push
fstpl
jnp
aam
negb
jbe
dec
xor
inc
mov
pop
cltd
push
sbb
lahf
inc
lret
jnp
jae
pop
ljmp
subb
adc
and
loop
clc
in
cmp
sub
shll
frstor
jo
les
pop
add
xchg
psubb
jns
mov
push
adc
mov
sub
push
xchg
cmpsb
pop
inc
add
inc
in
mov
in
cld
or
fiadds
or
aad
enter
mov
jnp
repz
jae
jno
dec
jb
cmp
inc
es
sarl
ds
out
jb
lods
pop
insl
dec
mov
stos
jge
nop
arpl
add
clc
mov
fsubrl
mov
push
arpl
sub
and
test
repnz
bnd
andl
push
sbb
jne
fldcw
xor
jmp
xchg
outsl
mov
in
adcl
push
iret
icebp
dec
sti
rclb
lods
mov
jle
cli
out
mov
xchg
inc
cld
mov
mov
mov
pop
movsb
popa
hlt
notb
push
xchg
dec
push
ljmp
mov
or
leave
lret
enter
rcrl
xor
rclb
ds
push
ret
mov
stos
push
arpl
add
cmp
addl
out
mov
mov
xor
decl
in
mov
rorl
jle
fiaddl
std
dec
out
xchg
popf
test
and
loope
addb
xor
lods
or
adc
mov
shrb
call
push
es
jns
lods
in
pop
pop
out
add
sub
push
aaa
sub
mov
and
shlb
lcall
push
call
xchg
lcall
xor
cmpsl
pusha
movsb
sahf
cwtl
jp
outsb
or
pop
jbe
ficompl
in
lahf
push
dec
loop
mov
mov
xchg
int3
sub
dec
dec
aaa
repz
subl
sub
in
push
inc
stos
repz
inc
repnz
pop
inc
mov
jp
ret
add
cmp
dec
pop
mov
sbb
or
repz
imul
xchg
lcall
sbb
inc
push
xchg
mov
call
cli
mov
sbbl
ret
add
outsl
lds
jmp
pop
mov
add
mov
test
inc
xchg
cmpsl
push
popf
dec
in
scas
pop
inc
int3
pop
pop
pop
push
stos
mov
jb
jne
daa
arpl
repnz
sbb
pop
jg
loope
inc
cwtl
sbb
push
mov
testl
sahf
push
add
mov
jno
cmpsl
cmp
outsl
xor
lret
lahf
inc
jo
mov
cmp
pinsrw
cmp
sti
sti
popa
lret
pop
outsb
mov
test
adc
into
mov
jge
dec
out
xchg
cmp
fcoms
xchg
pushf
jno
sub
stos
and
push
dec
push
fsin
loope
test
insl
rol
mov
jbe
mov
lcall
scas
out
dec
mov
cld
xchg
fsubs
cmpsb
dec
sbb
mov
test
in
dec
cmpsb
xor
hlt
fwait
xor
out
lret
jne
lods
aas
daa
nop
mov
jge
xor
into
or
adc
in
into
das
jne
iret
and
dec
mov
mov
icebp
mov
inc
fcmovnbe
mov
jg
outsl
xor
mov
iret
sub
hlt
pushf
fisubrs
mov
daa
jge
loope
ret
dec
xchg
mov
popf
hlt
push
push
adc
int3
gs
dec
int3
movsl
es
in
cld
sub
mov
test
and
push
leave
mov
jno
xor
xchg
and
in
jnp
notl
test
dec
stc
xlat
sbb
jae
push
nop
jno
shl
mov
and
cs
movsl
ljmp
xor
orb
fsubl
clc
cmpb
outsb
stos
pop
push
adc
jno
sahf
xchg
jp
lahf
push
insl
or
test
add
inc
test
frstor
sub
push
je
inc
inc
iret
sahf
shr
mov
sub
pop
ja
pop
cmp
lea
std
das
jmp
out
xorb
sbb
cmc
data16
xchg
sti
call
addr16
sqrtps
inc
les
lods
dec
mov
push
mov
cmpsl
das
or
jge
and
subl
cmp
lea
mov
and
mov
add
xor
push
xorl
aaa
ret
lahf
lods
dec
xchg
clc
repz
lret
xchg
das
das
and
pushf
imul
and
add
inc
or
ss
int
mov
mov
int3
repz
sbb
aad
je
arpl
mov
add
adc
imul
data16
data16
arpl
imul
adc
sub
call
cmp
mov
sbb
mov
lods
pop
stos
mov
cmp
inc
negb
cs
subb
sub
push
out
xor
data16
push
shll
ret
push
mov
outsb
xorl
test
addr16
rclb
in
fidivrl
cmp
add
mov
xchg
fwait
jno
inc
arpl
rcrl
in
sub
and
add
stos
dec
dec
inc
fidivs
sbb
ss
cmp
orl
rcrl
pushl
cmp
ljmp
cmpsb
mov
fistpll
cs
inc
jnp
adc
inc
xlat
push
inc
fstps
push
lds
fwait
jecxz
mov
fadds
stos
out
xor
mov
inc
xchg
pop
imul
scas
ret
and
popa
les
or
call
out
lahf
mov
push
pop
adc
out
and
xchg
leave
mov
push
enter
mov
pop
test
inc
int3
in
xorl
out
push
or
mov
xchg
sbb
flds
jp
xor
insb
lods
sbb
cld
inc
stos
cmpsb
and
xchg
sbb
cmp
mov
cwtl
mov
cs
push
mov
ret
inc
and
repz
push
cmc
les
pushf
pusha
fwait
stos
nop
add
addr16
dec
pop
jg
pushf
sarb
fisubl
cmp
cmp
push
stos
or
dec
scas
adc
repz
insl
imul
std
mov
mov
sub
or
mov
mov
adc
add
aaa
adc
call
gs
push
test
jle
pop
xor
test
leave
sub
cli
leave
cli
fstps
push
shl
aas
ds
mov
and
mov
inc
in
cld
adc
inc
cmp
test
pop
add
mov
jmp
shll
lea
cmp
ljmp
das
mov
pop
mov
ss
in
popf
iret
push
xchg
mov
fiadds
sbb
push
and
pop
pop
clc
xor
js
lcall
movsb
inc
adc
roll
adcl
sti
es
push
aas
data16
stos
and
sub
imul
xor
jns
pop
pushl
mul
xor
out
sub
jle
outsb
in
out
insb
push
pop
dec
and
dec
fs
es
sub
jge
repz
lret
cmp
aaa
mov
push
mov
shl
jge
jle
adc
sbb
xorb
push
push
mov
push
ljmp
fsub
and
or
std
cmp
loop
cmp
inc
movsl
movsl
cld
jle
mov
call
jp
and
or
hlt
jnp
inc
push
in
pop
cmpsb
out
fwait
add
sub
loop
inc
insl
push
int3
dec
adc
icebp
mov
insb
adc
jbe
push
out
inc
xor
mov
add
sbb
sub
cmp
popf
movsb
fwait
stos
push
mov
xor
pusha
jp
aam
cli
gs
ret
cmp
jo
int3
mov
xchg
cmp
roll
mov
dec
mov
cmp
or
push
jbe
js
push
cmp
inc
ss
adc
rcrb
aam
fiaddl
inc
jmp
lret
fcompl
test
pusha
dec
mov
cwtl
ljmp
ss
pop
xor
test
repnz
inc
cmc
or
sti
jnp
inc
or
mov
mov
aaa
fs
jnp
ret
mov
pop
xchg
push
push
pushl
xchg
xchg
js
fistpll
adc
push
xor
rclb
inc
sub
sahf
jecxz
sub
notl
mov
dec
dec
outsl
adc
push
popa
pop
icebp
pop
je
sahf
adc
fists
xchg
cmpsl
and
scas
mov
mov
jmp
jbe
pop
ds
mov
pushf
adc
or
xchg
jnp
addb
adc
add
adc
pop
repnz
sub
mov
fsubrl
test
loopne
push
fdivl
mov
fdivl
xchg
push
pop
mov
fbld
pop
icebp
inc
cmpsl
push
out
push
fstps
xchg
cmp
pop
push
mov
iret
or
ret
or
sbb
jp
pop
imul
mov
nop
mov
rorb
js
ret
and
pop
cmp
jle
in
jmp
or
pop
xchg
data16
push
stc
xor
into
jns
cmc
mov
arpl
jnp
push
inc
in
mov
lds
jmp
sti
mov
sub
out
pop
jae
in
cltd
cmc
scas
xor
xor
mulb
and
and
jecxz
lods
jge
adc
hlt
add
aas
sbb
mov
xor
pop
and
push
and
pop
sub
jo
cmp
mov
daa
push
mov
xor
dec
dec
jle
sbb
dec
es
and
addr16
aad
mov
push
sti
andb
ret
repnz
fsubr
subb
icebp
outsb
pushf
lahf
fldt
out
test
and
sbb
mov
leave
int3
imul
inc
pop
in
popf
loop
fsubs
orb
lock
xor
mov
pop
sub
lldt
out
bound
jno
or
movsb
xor
loope
inc
mov
sahf
cmp
stos
in
adc
lods
adc
or
and
lods
loope
mov
dec
xchg
dec
push
in
adc
gs
ret
gs
and
aad
xchg
xchg
cmc
mov
pop
stos
ljmp
rcll
out
lahf
icebp
fnstenv
aam
bound
lea
stos
jge
stos
ret
aam
ret
in
sbb
imul
fidivl
cmp
push
push
mov
add
movsb
or
shlb
popfw
scas
jg
mov
sub
dec
and
jle
lcall
lret
dec
negl
sbb
pop
xor
inc
xlat
xor
rcll
test
nop
jg
insb
fisubl
lcall
jg
rcll
in
out
dec
sbb
add
xor
pop
inc
push
pop
in
adc
outsl
and
pop
pushf
stc
xchg
cwtl
cld
and
cld
sub
mov
pop
pop
jb
pop
movsl
test
xor
xchg
aad
add
xchg
mov
cmc
cld
enter
inc
mov
mov
add
aas
into
jne
fwait
stos
nop
or
addl
clc
lods
add
xor
rorl
movsl
and
les
lret
jnp
sub
hlt
addr16
jno
xchg
les
gs
pop
out
fnstcw
lret
test
cmc
in
movsb
imul
jle
inc
decl
or
dec
xor
das
aaa
out
push
jg
dec
pop
jne
dec
test
lahf
pop
xor
imul
push
mov
sarb
ljmp
out
sub
iret
shrl
jl
xchg
pushf
sbb
push
cmp
xor
mov
int3
push
aam
add
xor
mov
pop
out
xor
dec
lret
push
sarl
lahf
js
mov
mov
xchg
pushf
rorl
lock
pop
push
cmp
push
dec
adc
adcl
mov
cmp
aam
fistps
cmpsl
hlt
dec
sbb
inc
lock
scas
sahf
loope
add
popa
loop
test
mov
jnp
imul
mov
jae
rcll
sub
mov
mov
dec
or
and
sbb
and
seto
cmp
notb
cmp
sbb
lahf
jge
icebp
cmp
sahf
xchg
movsb
xchg
jg
cmp
pushf
push
aad
cs
pop
push
lret
std
lret
xorb
xchg
notl
js
push
dec
mov
and
orl
orl
jae
call
testl
lahf
pop
ret
adc
add
sub
mov
daa
adcl
add
xchg
sub
jns
mov
xchg
jno
push
sub
insb
out
sub
nop
add
mov
sub
punpckhwd
add
mov
repz
inc
bound
lcall
fisttpll
pop
adc
dec
les
cmp
fld
mov
mov
or
pop
iret
mov
mov
out
sub
imul
jne
jae
and
mov
out
je
jl
scas
jb
dec
or
sbb
pop
pop
push
or
out
or
sub
out
cmc
xchg
xchg
or
cmpl
fildll
dec
je
mov
pop
or
mov
jnp
test
jae
loope
sbb
xchg
and
imull
ret
sub
cmpb
ds
testl
mov
xor
lea
and
xchg
dec
push
push
sub
dec
and
div
jle
sahf
xor
clc
mov
xor
pop
js
ficomps
jno
and
add
pop
mov
fs
fstps
fldt
xor
cltd
dec
jl
pop
jge
sub
mov
pop
or
pop
icebp
xchg
sbb
int3
jle
mov
pushf
dec
xlat
pop
lea
daa
imul
xor
bound
jg
cmp
push
test
cmc
cld
adc
dec
insl
popa
call
mov
push
shll
inc
xchg
push
mov
adcb
stos
or
push
loopne
flds
cmp
inc
loopne
jne
cmp
push
mov
fcompl
sbb
out
and
aas
cli
pop
and
xor
roll
ret
rclb
pop
shl
sub
jno
inc
shr
movsb
rorl
lock
mov
fisttpl
repz
hlt
mov
adc
mov
mov
xor
loopne
dec
push
inc
cmpsb
push
xor
fiadds
aam
push
fisttpll
adc
outsl
pop
jecxz
add
lds
push
jno
addb
pop
sti
jbe
push
arpl
std
push
cld
addl
jns
stos
mov
dec
mov
clc
imul
cwtl
and
xchg
icebp
aas
icebp
or
lock
add
cmc
insb
fisubl
xchg
sbb
and
xchg
mov
mov
idivb
xchg
dec
pop
pusha
outsl
cmp
and
enter
push
push
cs
push
movsl
lods
xchg
shrl
mov
imul
pop
push
hlt
or
push
arpl
inc
and
sbb
ficomps
add
jb
pop
movl
call
pop
fbld
es
mov
push
mov
or
mov
repnz
jnp
mov
adc
addr16
mov
cld
fsts
aad
out
dec
les
xchg
movsl
loope
push
arpl
mov
cmp
jb
xor
cld
or
inc
popf
scas
outsl
lea
cld
rorl
adc
rcll
xchg
dec
push
fistpl
pop
fcoml
and
sarb
movsb
call
mov
mov
push
cltd
fnstsw
xchg
inc
dec
sbb
xchg
fcomps
popa
frstor
popa
or
cmp
adc
or
or
sbb
and
outsl
sub
in
cltd
adc
add
mov
adc
xchg
jl
and
je
cmc
insl
sahf
mov
pop
rclb
mov
sub
mov
adc
mov
xor
ds
mov
sub
fsts
into
push
popf
mov
and
das
mov
adc
push
pop
ljmp
sbb
stos
scas
das
push
movsb
push
jp
mov
mov
mov
cld
pop
fdivl
xchg
test
scas
lock
fstpt
mov
ret
dec
dec
pop
sbb
pop
push
push
int3
mov
mov
mov
or
sbb
stc
ret
outsb
cltd
xchg
pop
and
cmpsb
xchg
aad
movsl
fnstsw
jnp
ja
jae
popa
dec
imul
pop
jg
movsb
jne
pop
dec
shlb
mov
xchg
push
push
aad
test
sbb
dec
dec
mov
leave
fisubs
in
jge
ja
lds
test
dec
push
push
in
aas
or
addl
fwait
popa
mov
daa
sbb
repnz
jae
mov
mov
mov
cmpsb
repz
cmp
leave
cmp
inc
pop
fdiv
inc
scas
test
sub
mov
add
pop
jg
push
data16
mov
push
push
cmc
cld
mov
and
filds
mov
fstl
jp
repnz
mov
insb
loop
or
arpl
adc
mov
push
cltd
stos
jae
sbb
xlat
sub
mov
jae
inc
or
push
pop
imul
gs
inc
shlb
icebp
fdivs
dec
sbb
dec
test
inc
sbb
xchg
out
mov
icebp
hlt
or
jle
int
inc
test
mov
ja
xchg
push
aam
movsl
pop
mov
sbb
int
subl
push
movsb
xor
add
inc
or
and
jmp
scas
mov
xor
adc
in
dec
cmp
aas
fld
cs
mov
or
cwtl
ret
mov
dec
mov
cmp
insl
cli
shrb
outsb
fstpl
stc
je
loopne
mov
fs
push
mov
jo
ja
inc
fsubs
xor
mov
leave
push
cmp
push
ror
insb
les
ret
pop
pop
call
xor
lods
gs
popl
mov
rorl
je
sbb
addr16
add
and
push
add
mov
sub
loopne
mov
pop
dec
sub
cmp
xor
idivl
xchg
hlt
push
std
push
add
add
cmp
jnp
leave
xchg
or
scas
shl
adc
sub
push
insb
repz
cmp
pop
sbb
lock
inc
xchg
aad
in
push
fwait
imul
imul
insb
in
outsb
mov
arpl
mov
fistps
inc
dec
cli
add
sub
push
mov
push
or
fwait
inc
add
pushf
add
push
mov
xor
push
push
cmp
and
jge
hlt
xor
ljmp
insl
mov
hlt
ss
push
mov
xor
or
cmpsb
adc
jl
or
inc
jae
and
xchg
cmp
and
or
lret
loope
add
fisubl
icebp
dec
rorl
adc
inc
mov
mov
mov
imul
shr
or
xor
bound
sbb
push
xchg
adc
mov
push
lock
push
push
mov
movsl
loope
sub
inc
push
out
test
jg
ret
pusha
cmp
add
jge
mov
lods
pusha
xlat
mov
clc
shll
jbe
out
dec
cmpsb
pop
sub
cmp
addr16
adc
mov
inc
movsl
shll
xchg
imul
mov
lahf
out
jnp
xor
sbb
and
imul
push
push
xor
test
inc
faddl
test
sub
popa
iret
sbb
xchg
push
add
mov
push
sti
sbbl
push
adc
ret
pop
rorl
sub
mov
sbb
xchg
das
lret
popf
cld
add
fldt
or
shr
into
and
xchg
cmc
roll
jg
int3
stos
sti
mov
and
mov
mov
xchg
jne
vpmulhw
lea
into
jp
loope
popa
sti
mov
fdivrl
pop
pushf
sub
or
jo
sub
test
jg
sub
xor
xchg
call
movsl
or
das
push
mov
cmpsb
test
iret
mov
gs
jg
mov
in
xchg
add
xchg
and
push
orb
lcall
les
push
cs
mov
cmp
cmc
inc
jne
xchg
inc
repnz
push
inc
and
push
add
xchg
pusha
in
or
sbb
and
mov
cs
sti
call
in
push
icebp
mov
push
mov
xor
or
data16
add
cmp
dec
jbe
pop
xchg
lcall
shlb
or
cmp
fadds
pop
and
std
movsb
out
cmpsb
sub
repz
cmp
les
loop
pop
push
mov
inc
fs
in
daa
fcoml
lahf
pop
mov
or
push
cmp
mov
pop
sahf
sbb
lret
push
mov
sbb
xchg
push
mov
into
pop
mov
mov
push
xor
ret
cltd
pop
aam
inc
sbb
and
popa
jo
in
aaa
arpl
mull
arpl
adc
inc
lcall
stos
shrl
test
xchg
adc
data16
je
fdiv
shl
mov
add
dec
das
add
inc
or
idivb
mov
fmuls
jmp
test
scas
and
jno
xchg
or
dec
aad
int3
xor
pop
repz
in
repnz
mov
stc
add
or
lret
push
mov
lea
outsl
call
jp
mov
or
data16
dec
xor
rorl
das
jnp
jmp
outsl
int3
mov
jp
lahf
sbb
mov
pop
pop
mov
lcall
pop
add
xchg
pushf
cmc
imul
mov
testb
inc
data16
fidivrl
mov
and
xor
dec
pop
cmp
dec
jns
jb
scas
or
out
lcall
sub
jnp
sbb
jns
sti
sub
mov
shl
add
jbe
mov
cmp
scas
mov
nop
adc
test
imul
rcrl
mov
clc
mov
imul
das
sub
lods
sbb
in
jmp
add
mov
lcall
fbld
ret
sbb
icebp
xor
js
repnz
xor
sbb
call
adcl
dec
sbb
clc
stc
push
test
jno
dec
jmp
fiaddl
pop
lahf
push
gs
stc
lods
cmpsl
xor
jbe
dec
test
xchg
push
lds
mov
xor
add
nop
jg
pop
inc
dec
xchg
sbb
and
jb
dec
nop
scas
sub
inc
adc
push
pop
sub
pop
fwait
adc
lock
icebp
mov
sarb
mov
pop
add
and
add
xchg
fdivr
mov
push
lea
adc
ret
cli
mov
in
rep
repz
xchg
jge
mov
jo
nop
aaa
cmp
ljmp
outsb
insb
pop
xor
daa
out
movsl
cmp
sar
and
fidivrs
subl
sub
add
rorl
mov
imul
mov
inc
push
or
dec
sbb
aaa
jo
jb
xlat
fdivl
cld
mov
and
in
stos
sar
pop
adc
mov
aad
lcall
mov
cmp
sbb
or
in
lock
cmp
xor
cmp
mov
div
and
dec
repnz
sub
pop
jns
pop
inc
outsl
lcall
xor
sarl
fsubs
ret
cmc
jmp
mov
or
in
or
sbb
scas
ljmp
in
mov
mov
and
pop
cmp
push
in
insb
inc
movb
dec
sbb
rcl
mov
pop
xor
cmc
lea
es
aaa
sub
jmp
std
cli
dec
fildll
or
mov
dec
mov
test
aas
lods
push
cltd
mov
pop
outsl
cmc
sub
sahf
or
testl
mov
or
inc
jno
push
mov
pop
sarb
test
push
or
mov
push
adc
xlat
out
loope
int
fs
insl
adc
pop
xchg
stc
dec
out
sbb
inc
adcl
inc
data16
popl
stos
out
dec
jmp
xor
imul
int
inc
imul
ret
inc
fs
std
adc
sub
sbb
dec
pushf
sbb
jo
nop
xchg
inc
xor
adc
mov
adc
gs
bound
pop
enter
inc
fnstenv
xor
sub
test
add
nop
and
leave
mov
repz
div
lds
push
sbbb
into
or
sbb
mov
sar
dec
push
pop
push
pop
fmul
adc
add
adcb
sub
xchg
and
or
xchg
inc
push
cmpl
xchg
adc
push
shr
mov
movsl
bound
jmp
mov
sub
jbe
xchg
andl
sti
mov
lahf
scas
jmp
jmp
outsb
and
pop
pop
or
cmpsb
sbb
pop
loopne
push
int
inc
jnp
jle
ret
xchg
adc
lcall
repz
in
ret
pop
in
sbb
mov
lahf
cmpsb
mov
lret
fstl
shll
vpunpckhdq
fnstsw
stos
es
enter
or
xchg
scas
jns
in
vmulss
popa
insl
inc
sbb
pop
mov
nop
and
dec
int3
ljmp
pop
repz
stc
lods
and
scas
jl
jmp
jno
xchg
sbb
js
in
add
push
test
mov
inc
inc
fstpt
sbb
jg
loope
dec
mov
fmuls
jo
mov
das
cmpsl
lret
and
mulb
push
in
dec
pop
mov
rclb
cmp
xchg
add
loop
mov
rol
push
cmp
dec
jo
mov
mov
sub
dec
jle
lahf
push
cmc
mov
movsb
jge
adc
addl
inc
arpl
mov
lds
inc
call
test
movsb
std
jg
cltd
jecxz
push
stos
fucomp
arpl
jne
mov
sbb
add
fdivr
ljmp
xchg
inc
jge
inc
mov
lret
clc
xchg
jnp
ss
in
jg
and
test
imul
out
add
xchg
ret
fs
adc
and
test
mov
mov
jp
sub
add
cmp
dec
xorl
mov
lock
push
xchg
cwtl
outsl
pop
push
gs
pop
insl
imul
mov
pushf
push
test
and
into
mov
lods
scas
enter
int3
mov
cmp
and
xor
push
mov
cmp
dec
enter
icebp
mov
mov
lret
loope
test
nop
mov
fcmovb
push
lahf
xor
jae
enter
dec
push
ljmp
inc
sbb
leave
popa
sub
es
scas
cmp
cmp
push
lock
dec
add
repnz
icebp
or
stos
cld
mov
imul
or
es
xchg
cmpsb
packsswb
dec
aad
cli
ds
push
rorl
and
dec
and
inc
xchg
jl
pop
jmp
arpl
repnz
aas
cs
pop
shrb
xchg
arpl
sbb
movl
mov
push
mov
repz
sbb
sub
mov
hlt
ja
lods
cwtl
sub
cmp
das
pop
nop
xor
adc
lods
fwait
and
ficoml
xor
xchg
push
shll
dec
mov
mov
mov
adcl
push
push
imul
push
lock
rorl
jo
add
add
std
call
inc
stc
push
add
mov
fwait
jns
pop
add
bound
shrl
or
push
sbb
push
sub
out
pushf
lock
or
js
and
stos
fsubrs
or
das
inc
or
shlb
nop
xor
inc
test
xor
xchg
fcoms
aad
popf
mov
xlat
fstps
xchg
dec
mov
es
lds
add
bound
pop
mov
stos
daa
ljmp
scas
pop
in
mov
fcomp
jns
lcall
shll
icebp
jg
pop
xchg
movsl
jno
xor
rcrb
movsb
pop
scas
mov
flds
stc
add
mov
mov
dec
jle
stos
sub
inc
xor
xchg
mov
std
ds
iret
cltd
ss
push
jg
stos
mov
pop
call
adc
cmp
inc
jno
shl
jecxz
call
nop
pop
jp
cmp
int
test
dec
ds
out
movsl
sub
movsb
pusha
dec
cld
in
xchg
js
nop
push
inc
push
add
insb
inc
test
jae
scas
add
loopne
popa
cltd
or
jg
cmpb
mov
sbb
push
jno
mov
cmp
dec
scas
out
add
sbb
xchg
jns
xor
loope
adc
jg
push
adc
add
fnsave
jp
and
add
fstpl
out
into
fidivrl
cmc
lds
out
or
pop
ja
xor
push
and
push
hlt
call
jmp
rolb
jo
iret
loopne
or
push
cmp
lret
aam
cli
pop
or
popf
inc
fucomp
pop
int
stos
adc
out
mov
rclb
icebp
mov
int3
lret
mov
mov
pop
cmpl
inc
mov
in
es
push
aad
mov
ret
ret
adc
popa
and
iret
jle
test
fwait
nop
pop
in
mov
hlt
push
pushf
jbe
push
xor
daa
jo
or
adc
out
sub
out
inc
mov
xchg
xchg
repz
jnp
mov
les
js
mov
and
and
add
jg
and
inc
fcompl
dec
push
cmp
js
pushf
stos
jns
mov
cmp
fidivl
lahf
pop
aam
inc
fcomps
addr16
test
cmp
les
sbb
js
iretw
push
push
daa
push
ficompl
add
ljmp
push
into
sahf
clc
xor
mov
pusha
adc
mov
in
sbbb
sarb
or
out
out
xchg
in
xchg
sub
add
push
or
lock
add
sarl
ljmp
das
inc
std
popf
pop
stc
mov
mov
sub
lret
mov
push
add
cmc
int3
dec
out
lds
and
out
lea
and
pop
jge
sbb
movsb
sub
bound
bound
loopne
or
lods
pop
daa
dec
mov
and
ljmp
adc
pop
pop
jmp
mov
lea
cltd
mov
aad
and
andb
fs
or
mov
jmp
mov
scas
fstpt
aaa
rcll
push
inc
jecxz
das
fdiv
push
fnstcw
and
cmc
and
mov
out
test
ljmp
inc
mov
stc
insl
add
fldcw
das
adc
fldt
sbbl
push
sbb
bound
dec
inc
cli
jnp
mov
mov
push
jmp
insl
inc
int
cmp
adcl
xchg
mov
sub
fstpl
jae
xchg
add
lcall
test
adc
jbe
or
mov
sub
pop
dec
outsb
mov
ss
nop
pop
jle
fidivrs
sbb
mov
stos
sub
arpl
test
test
mov
movl
aad
mov
inc
push
xchg
insb
push
dec
ret
pop
ret
or
out
test
mov
jp
out
int3
add
in
aad
xor
add
sub
xchg
aas
or
scas
lds
icebp
push
mov
in
inc
aad
outsb
dec
lds
cmp
inc
add
sub
jbe
je
cmpsb
jne
jg
push
or
xchg
pop
bound
sahf
test
add
movsl
stos
lock
or
push
aam
mov
xchg
in
push
xchg
add
inc
mov
push
loop
push
xchg
popa
cmpsl
push
aam
jg
jns
out
shrl
jmp
push
push
add
addb
xor
pop
lods
not
push
in
stos
push
and
ret
fimull
push
jecxz
lahf
imul
sub
jo
mov
lods
inc
pop
xchg
hlt
adc
or
cmp
push
scas
lods
cmp
insl
push
loope
mov
push
mov
icebp
jns
pusha
les
inc
sbb
repz
mov
push
bound
test
cmp
jl
mov
in
mov
lock
mov
adc
scas
push
pop
xchg
jo
dec
sub
inc
cld
rol
lods
aas
push
lret
into
sti
or
and
push
ror
xorl
xchg
and
lret
mov
lock
pop
cmp
ret
sahf
iret
sbb
adc
ret
add
lds
jle
adc
mov
push
aaa
cld
lods
outsb
mov
fcmovnb
in
test
movsl
stc
cmp
dec
cltd
popf
push
mov
xchg
imulb
pushf
xchg
imul
or
cmp
jo
xchg
jo
mov
pushf
mov
inc
or
dec
pop
pop
test
ret
jb
mov
xchg
jns
push
jne
scas
fidivrl
dec
cmpsb
mov
lea
jmp
stc
loop
mov
or
dec
sti
push
andb
or
mov
popa
mov
mov
xchg
xchg
push
xor
scas
sub
out
int
jp
inc
shl
std
cmpsl
inc
imul
mov
add
mov
lret
pop
sub
sub
leave
inc
in
mov
lcall
sub
ret
jae
incb
sub
mov
sbb
fidivrs
cwtl
sbb
adc
mov
xchg
std
sub
cld
sub
or
clc
jmp
in
leave
sub
inc
adc
insb
jle
call
sbb
and
lock
push
loope
lret
sbb
mov
wbinvd
sbb
dec
lods
lock
and
das
and
xchg
jbe
mov
pop
add
subb
mov
adc
jl
dec
insl
adc
icebp
int3
mov
inc
push
clc
push
fsubrl
aam
add
clc
jno
jne
adc
adc
mov
fnstcw
or
mov
adc
sbb
movsl
rorb
xchg
jmp
pop
dec
inc
cmp
int3
push
jge
xchg
pop
rclb
outsl
int3
in
and
jl
dec
xor
mov
aad
jnp
inc
mov
cld
jmp
mov
incl
push
xlat
mov
xor
mov
into
js
xchg
inc
insl
imul
das
push
mov
or
and
bnd
dec
mov
add
fwait
or
xor
das
mov
mov
jb
dec
inc
xor
adc
jne
adc
aam
cmp
and
push
add
fimuls
pop
xchg
test
mov
push
insl
jo
andb
xchg
sti
xchg
sbb
insb
inc
fs
push
sbbb
xchg
movsb
popa
dec
cmp
loop
sarb
adc
clc
jno
daa
fstpl
sub
mov
add
cmp
add
std
ret
nop
aas
mov
repz
bound
les
dec
add
push
xchg
les
jle
pop
jmp
jmp
rcl
in
nop
sbb
mov
flds
cwtl
pusha
es
inc
fs
into
negb
sbb
into
mov
cwtl
js
mov
xor
xor
pop
adc
pop
sub
mov
and
mov
rol
push
repz
jl
in
dec
xchg
mov
pop
mov
gs
orb
pop
mov
inc
push
adc
outsb
lock
cmpsb
std
pop
dec
push
in
push
shlb
mov
mov
ja
and
ror
cmp
mov
or
dec
pop
orb
int3
or
faddl
mov
inc
pop
cs
iret
xchg
and
in
pop
jge
pop
jmp
addr16
sbb
mov
push
and
ja
test
out
js
mov
mov
cmpsl
lret
and
jns
int3
and
sub
push
icebp
les
js
sub
jbe
lds
mov
mov
pop
push
xchg
flds
call
cld
insl
adc
mov
enter
xor
nop
sbb
mov
jbe
push
pop
pop
int3
sbb
pop
mov
pop
scas
in
jmp
mov
and
in
mov
lret
call
push
mov
xor
jmp
loop
mov
cmp
inc
inc
add
add
in
pop
fimuls
orb
and
inc
sti
stc
mov
cwtl
scas
lock
jbe
pusha
insb
and
inc
jmp
fsubp
jmp
inc
inc
add
fisttps
mov
or
popa
mov
mov
rorb
push
push
dec
cmc
mov
xor
pop
lea
pushf
out
neg
loope
fsubs
aam
test
icebp
pop
add
fbstp
pop
jp
data16
xchg
pusha
sub
jno
push
pop
loop
jno
and
into
xchg
rcl
imul
dec
flds
pop
mov
sbb
int
test
mov
in
ljmp
adc
aad
adc
xchg
ljmp
dec
fdivrp
std
in
fimuls
pop
pusha
rorl
xor
inc
in
cmp
or
mov
enter
inc
call
outsb
add
pushf
mov
fucomi
and
outsl
sbb
aam
repnz
push
xorl
push
push
or
and
pop
pop
xchg
movb
pop
xor
stos
daa
mov
outsb
mov
shrb
push
lock
mov
lods
push
add
aad
test
cmpsl
pop
out
mov
in
mov
in
sbb
pop
jl
inc
inc
int3
inc
mov
aam
fistpll
push
mov
les
mov
jle
callw
nop
push
popf
insl
jl
mov
popf
mov
sub
adc
pop
es
lahf
insl
pop
and
sub
dec
jg
lahf
in
test
gs
cld
fcoms
ja
xor
lea
adc
nop
jecxz
add
pop
fstl
sarb
ljmp
sbb
mov
cltd
dec
scas
mov
sbb
cmc
sub
call
out
call
pop
mov
push
mov
push
mov
cwtl
lcall
pop
xorb
stos
sub
pop
cmpsl
push
fs
loopne
sbb
loop
mov
neg
sub
push
inc
fiaddl
imul
xor
cmc
repnz
clc
bound
ss
sub
ret
push
mov
jp
andb
outsl
mov
pop
and
jl
loope
inc
popa
cmp
cli
sub
mov
nop
test
push
push
mov
int
and
cmpsl
outsb
loop
mov
roll
or
inc
mov
push
fwait
out
lahf
rorl
test
and
les
push
xchg
roll
sarl
push
xor
cmpsl
push
adcb
negb
xchg
dec
mov
mov
adc
test
subl
sahf
inc
aad
cmpsb
jmp
jg
xchg
aaa
xchg
adc
xchg
fldenv
cwtl
dec
divl
xor
lock
call
or
into
mov
ljmp
lock
inc
lock
fmulp
scas
jns
dec
sbb
ss
push
cwtl
fs
mov
or
pop
aad
out
mov
outsl
lret
pop
jb
scas
nop
xor
add
out
lods
xor
stos
sub
js
jbe
lcall
xor
push
or
cmc
in
mov
mov
stos
out
enter
push
lcall
sub
dec
pop
sub
mov
repz
lods
fcoml
notb
sbb
outsl
or
popa
notb
add
or
ja
into
xchg
mov
dec
arpl
call
int3
cmp
ficoms
pop
adc
arpl
hlt
sbb
pop
movl
rolb
push
dec
clc
jae
mov
and
dec
lahf
add
sti
pop
shll
cmp
dec
stos
int
lock
loopne
cmpsb
inc
fwait
mov
and
movsb
push
int
push
sub
xor
cmp
add
sbb
popf
cwtl
mov
sbb
xor
and
sarl
mov
xchg
and
and
push
inc
aaa
mov
les
ss
jb
out
lods
ljmp
xor
or
lret
xor
divb
adc
dec
push
jb
dec
dec
xchg
mov
inc
daa
sbb
lods
push
xchg
mov
pop
movsl
jno
sub
mov
and
mov
mov
or
mov
xor
scas
iret
cli
lds
sbb
ss
mov
xchg
jne
dec
or
add
inc
aad
es
scas
mov
fcoml
into
idivb
lret
call
fs
pop
inc
cmpb
or
sti
cmpsl
adc
aad
out
and
xor
scas
test
hlt
loopne
cli
or
push
add
xor
clc
jmp
sysexit
es
std
lds
xchg
mov
mov
push
pop
adc
jl
lds
out
dec
add
insl
std
es
push
xchg
mov
scas
add
rcll
jae
aaa
andl
dec
roll
movsl
jae
aam
sti
out
mov
insl
mov
dec
dec
stos
mov
sbb
lahf
enter
cs
repz
xchg
dec
jnp
mov
dec
shll
clc
ret
jle
jg
fistl
add
stc
mov
xor
xor
fwait
cld
xchg
ljmp
sahf
jno
into
sub
mov
test
push
adc
stc
add
lcall
das
ret
jl
popa
stos
ss
inc
movb
fimull
inc
int3
shrl
aaa
inc
adc
cmp
lods
xor
cs
setne
fisubrs
jecxz
or
mov
js
or
in
jnp
xor
xor
movsb
subl
mov
test
or
or
lea
iret
xor
stos
daa
and
lret
sti
aad
and
jb
iret
mov
test
dec
and
ds
loopne
hlt
sbb
stos
ret
nop
mov
or
loopne
xchg
mov
addr16
adc
dec
mov
rcrb
inc
lea
aaa
adc
sbb
xor
or
in
popf
mov
push
js
imul
data16
movsl
cld
mov
enter
xchg
mov
xor
aam
movsb
into
movsb
jb
pop
mov
jo
scas
loop
sbb
mov
xchg
pop
imul
dec
jo
add
mov
imul
rcr
rolb
sub
add
jb
pop
ljmp
xchg
adc
pop
lahf
and
stc
lods
fwait
insb
faddl
rcl
mov
adc
xchg
xor
scas
ret
xchg
add
pop
mov
loopne
in
adc
sbb
loop
mov
inc
cmp
stos
pop
lret
adc
mov
std
pop
inc
aaa
mov
add
and
addr16
and
lret
push
mov
data16
sub
push
xor
inc
into
and
mov
lock
cltd
sbb
leave
adc
loop
out
lods
xchg
dec
adc
adc
mov
jns
xchg
outsb
jne
xchg
mov
jg
cmp
scas
sbb
inc
push
jp
dec
xchg
sub
jmp
xchg
dec
outsl
pop
lds
push
pop
push
lahf
in
xchg
xor
aaa
xor
inc
jne
dec
mov
dec
add
jp
cs
mov
pop
dec
mov
data16
ds
stos
xorb
jns
lcall
andl
scas
cld
jbe
inc
outsl
test
fsubr
mov
inc
or
mov
call
push
mov
es
add
call
daa
pop
adc
push
jmp
push
pop
fs
cmpsb
sub
pop
je
jg
js
adc
add
jae
in
pop
bound
lock
inc
imul
jb
mov
ja
sbb
ret
sbb
xor
jne
xlat
aaa
jge
xchg
cmpsl
shll
and
into
cmp
les
and
sub
imul
mov
push
xbegin
and
gs
shlb
mov
dec
fxch
bound
into
insb
mov
or
sar
push
femms
inc
mov
push
pop
ret
mull
repz
xchg
sbb
mov
pop
aad
mov
movsl
add
rolb
push
ss
test
pop
jle
loop
fcomps
rolb
icebp
push
jl
sbb
jmp
ret
inc
and
js
clc
outsb
jns
and
and
mov
inc
mov
push
sbb
add
cwtl
ds
sbb
pop
pop
jecxz
pop
jnp
arpl
jne
inc
outsb
push
inc
inc
mov
xor
repnz
mov
push
and
or
mov
inc
cmp
pop
dec
movsl
sbb
scas
sbb
mov
aaa
insb
push
cltd
imul
push
loope
push
or
mov
push
jp
mov
cld
ss
xlat
and
mov
xchg
adcl
es
pusha
xchg
adc
sub
out
shlb
dec
push
in
jae
pop
or
cmp
xor
mov
cld
mov
arpl
push
out
testl
rcl
loope
jp
js
xlat
stc
fistpl
dec
mov
test
xor
lods
xor
mov
cmp
inc
xor
sarb
jne
mov
hlt
push
and
sbb
and
ret
inc
sbb
bound
sbb
loope
test
adcb
adc
jle
pop
add
mov
and
std
aad
in
pcmpgtd
xchg
mov
test
dec
cmpsb
sbb
pop
lods
push
inc
rorb
scas
add
insb
fwait
add
repz
in
je
cwtl
pop
aad
mov
mov
jmp
dec
imul
movsb
pop
and
fistl
ret
cmp
aam
adc
lcall
mov
arpl
addr16
mov
jle
in
adc
lcall
aas
das
jle
scas
push
loopne
dec
fldl
jge
xchg
sub
jle
aaa
cwtl
fisubs
cmp
mov
jmp
or
xor
sbb
xor
frstor
sub
dec
nop
push
dec
xchg
out
mov
pop
sbb
lds
testb
mov
mov
pop
xchg
cli
xor
and
js
pop
cld
repz
push
jne
xchg
jp
rol
cli
jb
pop
test
adc
scas
or
es
sbb
push
dec
pop
xor
ror
jnp
sbb
leave
insb
jb
cmpsl
imul
push
xchg
ljmp
fisubrl
test
nop
test
and
mov
and
pop
jbe
test
mov
mov
add
jl
lods
jg
cmp
and
out
add
push
in
xor
add
ds
test
xchg
adc
fimull
adc
mov
or
in
sti
loope
test
lcall
mov
loopne
xor
sbb
stos
into
andl
test
mov
mov
insb
cmc
pop
add
mov
rcr
stc
ficompl
mov
int3
cwtl
scas
push
cmp
jle
test
enter
ja
jne
and
pop
das
xor
mov
mov
outsl
mov
ret
mov
lods
daa
lods
movsb
es
sbb
fmul
int3
rorl
adcb
xor
jge
out
std
or
adc
aas
aad
push
inc
imulb
xchg
enter
inc
pop
adc
jns
seta
add
push
push
mov
sbb
out
jle
cmpsl
in
popf
or
jge
mov
mov
mov
mov
cli
cmp
sub
push
aam
lods
push
daa
or
pusha
adc
mov
ss
jp
aam
jno
out
movsb
loope
int
xchg
mov
stc
xchg
mov
mov
das
pop
popf
jns
outsb
scas
mov
lret
imul
in
das
mov
mov
dec
cld
pop
inc
or
adc
insl
sbbb
cmp
pushf
adc
mov
lods
sbb
xchg
out
sti
jmp
aaa
dec
test
adc
inc
in
xor
or
jmp
dec
or
lss
jns
xlat
aad
ja
mov
push
lcall
gs
mov
mov
ss
lret
xor
mov
mov
call
rcl
sub
xor
lock
es
push
push
xor
std
inc
sti
adc
push
push
mov
jo
xchg
stc
loopne
stos
and
leave
add
idiv
popa
jo
cmp
pop
sub
mov
or
inc
mov
inc
aaa
pop
sub
pop
leave
je
jle
rol
add
xchg
test
jmp
pop
jne
jno
cmpsb
out
incl
adc
mov
jb
cmp
inc
pushf
mov
cmp
sahf
pop
xor
dec
mov
push
add
sub
rorb
pop
fbld
data16
push
push
pop
push
push
ss
xchg
jecxz
std
ljmp
aam
addr16
stos
out
add
out
cltd
push
push
xor
mov
pop
dec
xchg
xchg
pop
cmp
jmp
out
push
or
dec
add
outsb
push
xor
rcrb
out
mov
xor
repz
cmc
outsb
sub
popa
in
push
dec
add
cmpsl
xchg
icebp
das
inc
loopne
and
and
lcall
in
sub
xor
fldenv
pop
push
adc
aam
add
pop
pop
aad
out
loop
dec
xor
inc
mov
pop
xchg
loope
sub
cmpsb
outsb
xor
lret
xor
xlat
or
lods
mov
andl
xor
push
addr16
jbe
sbb
cmp
mov
xchg
addr16
in
imul
fbld
scas
movsb
int3
push
outsl
sub
jno
or
cmp
cld
add
xchg
ljmp
mov
mov
jecxz
add
loop
ljmp
sub
add
je
ljmp
push
sub
pushf
out
xlat
fldt
dec
mov
mov
adc
lods
test
movsb
outsb
pop
aas
ret
mov
mov
sub
inc
or
sbb
mov
stos
pop
sub
mov
fistl
inc
out
add
test
lret
mov
sahf
and
inc
xor
fsts
les
inc
and
pop
or
sbb
imul
lret
in
dec
gs
mov
xor
or
sub
and
jno
sbb
scas
dec
out
jmp
cmp
inc
mov
fnstsw
icebp
lret
outsb
aaa
xor
lds
cmp
aas
push
dec
xor
and
or
and
inc
addl
mov
adc
dec
xchg
shlb
movsl
cwtl
ljmp
or
and
outsb
push
hlt
or
pop
int
inc
xchg
movb
sbb
sub
jne
insb
popf
fstl
xor
cmp
jae
lock
mov
mov
das
push
cmp
int
jne
imul
or
adc
mov
mov
test
out
mov
add
fadd
dec
sbb
movsl
xlat
shlb
add
mov
dec
mov
push
mov
ret
lds
xchg
sti
movsl
mov
pop
lret
lods
das
mov
mov
xchg
mov
push
cmp
jbe
mov
xchg
dec
js
test
sarb
inc
leave
pushf
add
adc
push
mov
jg
cmp
mov
shl
cmpsb
movb
cmpxchg
cld
push
push
out
add
xchg
dec
xchg
out
lea
gs
push
iret
insl
dec
jecxz
mov
inc
dec
jecxz
adc
adc
cmpsl
out
insl
mov
loope
xlat
faddl
mov
jg
and
mov
push
cltd
or
cmp
test
and
cs
bound
insb
test
pushf
jge
inc
sar
mov
sbb
push
dec
push
dec
pop
jae
pushf
inc
pop
fsubrs
pop
loopne
filds
sub
out
call
adc
push
fiadds
pop
in
or
push
adc
loop
inc
mov
jle
mov
mov
dec
sahf
out
mov
mov
loopne
mov
lods
iret
sub
adc
ret
mov
cmpsl
xlat
lock
push
jb
mov
dec
sbb
movsl
mov
add
cmp
cld
popa
cmc
pop
inc
nop
outsb
inc
ret
jecxz
sti
test
xor
iret
xchg
mov
popa
inc
repnz
mov
lcall
cmp
mov
pop
call
sub
hlt
or
pop
pop
xor
pop
mov
shrl
mov
inc
arpl
faddl
mov
sbbl
ss
js
cmp
orb
negb
sarl
and
mov
shl
mov
out
lods
mov
hlt
aaa
inc
in
stc
das
fs
add
test
adc
add
std
mov
adc
xor
cwtl
jnp
scas
mov
test
cltd
dec
add
jmp
stos
xor
or
jmp
jmp
ret
pop
and
ljmp
std
icebp
mov
rcll
pop
inc
js
lods
aas
sub
movl
mov
out
mov
jns
movsb
test
rorl
mov
std
mov
out
dec
cmpsl
sbb
test
mov
test
pop
pop
pop
mov
xor
adc
and
scas
mov
push
movsb
sbb
mov
pop
rolw
in
loopne
sti
clc
cmpb
rcrb
nop
or
adc
or
popa
push
add
inc
mov
pop
sbb
mov
ss
mov
adcb
scas
les
mov
push
ljmp
inc
int3
cmp
lahf
xorb
cmp
leave
stos
adc
cmp
insl
sub
cmp
arpl
mov
daa
ljmp
jae
dec
sbb
xchg
ss
shll
stos
sahf
mov
jmp
fadd
aas
adc
in
xor
gs
pop
loop
mov
pop
mov
push
stos
cmp
dec
lret
xor
outsb
and
push
dec
and
out
adc
sub
cmp
stos
or
cmp
icebp
inc
and
sbb
push
lret
movsb
clc
sbb
fwait
ss
mov
aam
jns
jp
scas
leave
pop
cmpsl
or
mov
rorb
pop
push
mov
mov
scas
orl
xchg
inc
cmp
bound
jmp
stc
mov
xchg
mov
iret
and
sti
decl
or
mov
lret
scas
scas
int
mov
adc
daa
gs
dec
jecxz
push
dec
inc
xor
into
dec
jo
mov
push
jle
loop
pop
add
cmp
cwtl
inc
push
pushf
xor
mov
insb
adc
arpl
fidivs
mov
lcall
popa
add
mov
insb
and
jmp
imul
cmp
pop
mov
scas
jl
fs
pop
imul
sbb
and
stos
sti
test
test
dec
inc
fistpl
es
xchg
jg
pop
xchg
or
bound
push
cmpsb
adc
ljmp
out
mov
push
fildl
mov
mov
stos
pop
mov
sbb
push
xor
cs
das
movsl
and
loopne
das
cmp
lret
mov
mov
scas
mov
cmp
xchg
cmc
nop
add
pop
lret
outsl
mov
xorl
xorl
stos
xchg
inc
neg
push
lea
in
cmp
icebp
cltd
fnstsw
fwait
mov
and
add
minps
mov
pushf
loop
fidivrl
test
iret
fs
outsl
lahf
pop
addb
add
sarl
pusha
and
das
xchg
sub
fisttpl
push
fstps
call
mov
mov
in
in
cmc
data16
dec
mov
pop
pop
adc
in
jge
mov
aam
mov
cmpsb
pop
lahf
test
loope
adc
loop
adc
cmp
mov
fistl
and
pushf
dec
push
ret
inc
out
mov
aas
nop
lahf
cmp
je
imul
movsl
in
push
and
jae
cmpsl
or
cmc
dec
adc
and
lods
leave
xlat
xchg
pushf
jae
enter
jnp
ret
test
mov
xchg
jmp
xor
xorb
clc
xlat
jno
stos
movsl
or
sub
out
xor
cmpb
inc
negl
outsl
mov
push
mov
fbstp
decl
cmp
cmp
sbb
xor
mov
mov
adc
or
mov
add
dec
push
cmpsb
push
loopne
and
stos
inc
test
xchg
loop
mov
insl
sbb
push
adc
loopne
lret
jno
cmp
and
sub
andl
test
fdivrs
test
ret
dec
jg
mov
jne
orb
aam
insl
sbbl
cs
jl
xor
dec
push
loopne
aad
push
xlat
dec
sahf
sbb
out
movsbl
mov
dec
repnz
and
mov
std
leave
pop
jecxz
sbb
clc
cli
or
jle
mov
js
nop
int
jae
jae
xchg
cmp
jp
mov
xchg
and
inc
add
jmp
mov
lahf
add
jp
in
dec
dec
inc
mov
rcrb
sub
in
inc
push
ret
or
std
cmpb
and
push
out
cmpsb
inc
jge
int3
loopne
add
shlb
xor
add
and
data16
adc
mov
xor
ljmp
push
mov
pop
pop
js
stc
loopne
adc
clc
sbb
jmp
mov
push
mov
and
cli
mov
jo
mov
dec
dec
scas
lret
pop
pop
add
bound
inc
push
lea
or
in
outsl
ret
cmp
adc
out
or
sti
pop
stos
ljmp
cmpsb
add
jo
pop
mov
addr16
fwait
push
lahf
push
psubusb
jnp
inc
scas
mov
xchg
dec
push
divl
inc
sub
insb
xchg
dec
leavew
popl
jbe
lret
lea
rclb
mov
imul
mov
nop
jae
jne
xchg
sub
stos
mulb
pop
mov
push
jno
sbbl
loop
lahf
subl
mov
aam
pop
addr16
mov
xor
int3
ljmp
fisubrl
xchg
icebp
js
sti
cli
fmull
sbb
dec
outsb
out
adc
subb
dec
xor
mov
push
stos
fadds
cmpsl
jge
shll
nop
rorb
push
pop
pop
cmp
xchg
dec
adc
push
inc
inc
rclb
push
scas
loope
ds
iret
imul
dec
neg
adc
pop
loop
setnp
clc
js
pushf
push
pusha
loop
jmp
pushf
push
loopne
cmc
clc
cmp
pushl
out
cmp
xchg
jne
fnstcw
arpl
jnp
int3
cwtl
jb
mov
xchg
sbb
pop
jne
inc
mov
cmp
movb
test
push
xor
jmp
jnp
mov
cmp
repz
stos
pushf
out
push
cwtl
fstps
out
in
lds
test
inc
fisttps
sub
xchg
pop
and
test
push
add
mov
pushf
aas
mov
test
mov
ret
adc
sbb
loopne
xchg
fnstsw
ja
lcall
out
in
rclb
imul
mov
mov
das
movsl
jl
mov
fbstp
adc
push
iret
sahf
iret
out
in
and
aas
xchg
push
lods
push
mov
push
or
jo
mov
push
dec
dec
lcall
lods
cmp
mov
xchg
inc
pop
mov
sub
test
adc
repnz
push
andb
lods
pop
mov
dec
stos
jnp
and
sbb
addr16
or
jmp
dec
sub
xor
lods
lret
jnp
scas
xchg
imul
or
mov
adc
jecxz
fucomip
xchg
cmp
mov
dec
jb
repnz
js
pop
lods
adc
sub
push
mov
push
dec
mov
mov
out
std
push
jbe
js
mov
inc
loopne
xchg
sub
out
hlt
out
mov
ljmp
mov
out
rclb
and
push
xchg
mov
sub
dec
out
inc
cmc
test
icebp
fisttpll
lea
jl
sbb
gs
mov
jns
lds
mov
sub
decl
and
adc
mov
mov
and
mov
cld
jns
pop
ficoms
pushf
mov
rcr
rorb
sti
leave
enter
jnp
mov
pop
push
xchg
dec
imul
imul
xor
sbb
inc
dec
repz
fdivl
push
mov
andb
lea
pop
lret
ds
sub
xor
adc
add
add
enter
test
fldenv
int3
xchg
cwtl
icebp
mov
loop
pop
dec
and
or
dec
test
jg
jo
xchg
scas
xlat
jbe
jno
fsubrs
inc
aad
xchg
in
ret
addr16
mov
out
rcll
ret
movsl
insb
mov
xchg
add
outsl
fnsave
pushf
push
or
lret
mov
pop
adc
fdivrs
addr16
ret
sub
sub
push
adc
mov
xchg
loopne
or
xchg
mov
mov
fistpll
fwait
push
testl
mov
arpl
jnp
adc
jnp
and
jno
or
push
push
pushf
vsubps
cmp
adc
jp
inc
loop
and
iret
sbbl
sbb
addr16
out
frstor
sbb
out
mov
fdivrs
scas
cld
inc
in
in
ja,pn
test
pop
outsb
and
outsl
mov
fcomi
pop
xor
mov
sub
push
lret
push
mov
mov
stos
inc
add
lcall
jle
push
repnz
and
pop
mov
dec
adc
mov
movsb
sbbb
sbb
sub
fidivs
dec
mov
mov
adc
rolb
repz
repnz
lahf
cmp
adc
outsb
jae
sbb
mov
popa
movsl
out
call
push
ds
lcall
sbb
mov
clc
add
mov
or
xchg
loopne
add
jle
nop
out
sahf
push
insl
push
jecxz
sub
out
push
and
pop
xchg
pop
insb
test
mov
mov
mov
mov
vpcmpeqw
add
movb
mov
rolb
imul
adc
add
push
mov
in
into
sub
jge
pop
mov
xchg
xlat
out
aas
adc
arpl
and
sar
sub
dec
mov
sahf
repnz
ret
xchg
rorb
adc
mull
and
dec
insb
test
inc
jbe
rclb
jb
negb
leave
call
sub
test
push
jo
jecxz
stos
outsb
xor
jb
add
fs
mov
test
enter
test
enter
imul
mov
and
push
fdiv
outsl
les
popf
adc
fsubl
pop
sti
sbb
dec
getsec
mov
xchg
ret
into
subb
push
or
lds
pop
mov
scas
and
add
push
jbe,pt
adc
or
pop
in
mov
and
aaa
mov
out
std
fisubl
mov
adc
pushw
lock
int3
test
outsb
ljmp
or
jg
mov
inc
insl
xor
sub
test
push
xchg
inc
enter
or
push
pop
cmp
xchg
jge
fbstp
test
data16
pushl
push
mov
jae
xorl
divl
test
push
push
setle
leave
sahf
pop
test
sub
aad
mov
push
repnz
inc
sbb
movq
push
pop
mov
sub
dec
call
andl
out
dec
pop
push
repz
out
mov
pushl
cmp
aaa
test
dec
sub
test
push
imul
push
xchg
test
mov
popf
ja
xchg
scas
lahf
pop
sbb
cmp
mov
lds
lret
xorb
sub
mov
mov
push
cltd
xlat
cmp
adc
out
shll
mov
inc
outsb
stc
lcall
loope
mov
shl
stos
in
and
xor
lcall
mov
scas
push
xor
out
jl
jle
dec
mov
mov
dec
jo
mov
orl
les
sbbb
cwtl
adc
loope
xchg
gs
je
aas
sub
push
lret
shr
add
push
pusha
or
bound
ds
adc
ret
cmpsl
outsb
adc
scas
shll
fwait
outsl
jb
mov
sti
mov
mov
sbb
cltd
or
mov
mov
add
pop
iret
ljmp
inc
cmp
sub
inc
stos
pop
flds
and
or
stos
scas
std
fs
mov
mov
pop
adc
sub
out
xor
out
inc
and
dec
call
jle
jmp
dec
scas
fisubl
pop
bound
rorl
int
orb
hlt
test
adc
mov
mov
sub
mov
mov
add
in
lock
jmp
xor
push
inc
push
mov
std
test
arpl
icebp
push
cmp
and
sbb
sub
jnp
xor
push
dec
add
scas
ja
repz
push
iret
jmp
outsl
ret
test
loop
popf
jbe
ja
xchg
or
stos
lret
test
xor
xchg
out
and
out
jmp
lret
sbbl
int
roll
push
int3
mov
mov
in
testb
adc
mov
mov
sub
mov
iret
mov
cmpsb
sbb
xchg
decl
xchg
cmp
mov
add
xor
movb
cmp
call
jle
cwtl
jmp
jns
popf
xchg
fimull
out
sbb
jg
idivb
es
icebp
adc
out
int
mov
pop
add
out
push
ss
lods
jbe
or
lods
repnz
jg
mov
cmp
xlat
outsb
cmp
ret
movsl
mov
sahf
jno
inc
dec
and
jecxz
inc
dec
icebp
xchg
add
arpl
sti
jle
dec
add
popf
popa
bound
mov
data16
cmp
fwait
subl
repnz
mov
xchg
sub
or
sub
pop
adc
dec
pop
aam
lods
lods
ss
pusha
and
or
mov
iret
mov
fadds
pusha
inc
sbb
jns
cmp
inc
repnz
dec
mov
test
cli
xor
rorb
rcr
mov
jns
das
mov
movsb
jp
fadds
xchg
pop
imul
insb
popf
leave
out
cmc
test
mov
movsb
push
xchg
stc
in
jbe
out
pop
and
inc
push
adc
xchg
jmp
pop
pop
das
mov
and
icebp
sbb
push
sbb
aam
push
dec
inc
popl
mov
dec
mov
ret
mov
dec
movsl
adc
mov
pop
into
jb
cld
daa
dec
dec
and
mov
pop
jecxz
addr16
in
lea
in
fs
stc
call
lret
mov
dec
bound
jno
sbb
mov
insl
dec
addr16
mov
fldcw
cmp
les
cltd
inc
fildll
lcall
sbb
cmp
mov
cmc
inc
les
imul
mov
fidivrs
sbb
jmp
jmp
ljmp
dec
jne
in
test
jle
arpl
loop
repnz
outsb
sarl
sub
imul
push
pop
stc
jl
mull
pop
mov
push
loop
cltd
pop
jmp
call
lods
jge
mov
in
imul
sbb
je
lods
xor
decb
loope
mov
mul
sub
stc
jo
pushf
sub
jge
sub
pop
xor
xchg
add
mov
jle
jbe
rcrl
cmpl
or
xor
adc
sub
and
std
adc
cwtl
xchg
fdivrs
test
lods
test
fldenv
rorb
jns
outsb
cmp
fisubs
xor
pop
xchg
xor
lock
xchg
xchg
dec
dec
addr16
dec
and
test
test
lock
cmp
popf
xor
fucomi
push
jge
xchg
inc
sbb
xor
fmul
outsl
jbe
aad
in
lret
or
xor
inc
fadds
xchg
aaa
or
cmp
mov
mov
movsl
cmp
mov
pop
in
cmpsb
popa
mov
fisubs
mov
xchg
push
adc
push
pop
inc
test
pop
or
cmp
jb
and
mov
stos
and
imulb
sti
in
xor
and
pop
add
pop
and
mov
jecxz
dec
loop
pop
sub
jl
int
mov
scas
jl
push
int3
sahf
cmp
and
and
mov
mov
mov
xor
xchg
js
and
or
cmpsl
xchg
inc
sub
dec
push
mov
and
outsb
sbb
or
pop
inc
and
movsl
xor
loope
mov
inc
out
call
aad
mov
push
jecxz
movsl
mov
mov
pop
shlb
mov
sub
stc
fwait
movsl
xchg
mov
sar
push
mov
lcall
and
mov
dec
ds
mov
xor
loop
cmp
subps
push
nop
xor
xlat
sbb
cmp
dec
cmp
popa
mov
jge
ja
pusha
cltd
pop
call
pusha
sbb
int3
bound
stos
mov
adc
or
es
inc
outsb
and
enter
pop
adc
lods
es
inc
jo
pushl
lret
test
lods
std
add
iret
ss
lock
cmpsb
jle
jecxz
shl
or
int
xor
mov
les
jno
inc
inc
mov
xorl
pop
hlt
push
lahf
jbe
scas
sbb
in
mov
xor
jne
data16
mov
out
lds
pop
repz
dec
mov
cmp
orb
outsb
notb
mov
dec
icebp
sub
mov
cmp
and
inc
cmp
mov
mov
and
sub
mov
mov
xchg
lret
nop
lock
insb
mov
mov
mov
sbb
and
pop
xchg
insl
mov
movsb
sti
fistps
xchg
and
or
gs
mov
cmpsl
das
and
dec
movsl
xchg
in
jp
std
mov
ss
stos
mov
mov
test
or
push
aas
in
addr16
mov
sahf
push
leave
or
shll
adc
xlat
pop
es
add
jle
jecxz
es
add
cmc
cltd
pop
test
and
sti
cs
add
sub
and
and
or
dec
sbb
sub
cli
scas
add
inc
sub
leave
lods
mov
pop
xor
pop
or
ss
xchg
fs
sbb
cmp
in
es
push
pop
ja
fidivs
push
repz
cmp
jae
sub
mov
xor
or
sbb
mov
sub
jo
ss
js
mov
test
xor
cmp
jl
push
fs
dec
daa
psraw
fisttpl
mov
dec
lds
loop
dec
mov
repnz
cmpsl
xchg
mov
push
popa
hlt
ljmp
lahf
pop
insb
dec
or
mov
loop
xchg
or
dec
mov
cmp
scas
mov
rdpmc
pop
adc
lock
jae
adc
cmp
pop
jmp
les
lods
in
sub
sbb
ror
lods
sbb
xchg
shrb
jp
mov
lcall
mov
push
sub
fildl
mov
fdivp
orl
stos
cmp
mov
mov
lock
dec
xchg
mov
add
in
aaa
xchg
pop
jl
mov
jbe
xchg
test
ds
pop
out
mov
and
lock
std
inc
adc
rcrl
cmpsb
cmpsl
push
shlb
push
xchg
mov
sub
push
mov
adc
cmp
xchg
addl
inc
insb
push
repz
adc
push
push
xor
fstl
sbb
xor
dec
dec
or
and
mov
ds
mov
scas
mov
scas
stos
in
push
sbb
cmpsl
pusha
pop
loop
mov
mov
xor
xchg
ss
lcall
mov
xor
xchg
sahf
jmp
insl
inc
push
jb,pt
in
sub
mov
dec
aaa
mov
jp
cld
inc
or
testb
push
lret
cmp
je
ja
inc
jge
add
fistpl
cltd
mov
mov
add
push
jecxz
pop
daa
push
push
push
out
cs
fisubrl
jne
inc
or
in
jns
movsl
rorl
jo
jle
stos
mov
sbb
mov
aam
push
add
xchg
test
xor
sub
pcmpeqb
hlt
dec
imul
inc
sbb
or
mov
jg
dec
cmc
adc
sub
push
int3
xor
xor
sbb
jge
test
outsb
scas
pop
adcb
inc
pop
xor
push
or
xor
es
mov
imul
push
insb
cmp
pop
dec
dec
dec
cwtl
cmp
mov
xchg
daa
out
pop
icebp
mov
movsb
xor
cld
mov
dec
push
pusha
rclb
cli
add
jl
fwait
mov
out
icebp
mov
roll
mov
loopne
adc
divl
add
xor
xchg
jne
adc
jbe
mov
out
shlb
jnp
inc
shrb
push
push
mov
mov
cld
mov
or
push
adc
test
or
jae
filds
xchg
call
xor
push
cmpsl
mov
push
inc
into
leave
insl
imulb
pop
test
lcall
dec
mov
lock
mov
push
aam
mov
lret
dec
repz
pop
out
xor
fs
cli
push
sub
mov
add
in
and
push
incb
pop
mov
lods
outsl
jg
std
pop
mov
push
mov
push
inc
dec
aad
fwait
rcl
and
jne
fstpl
push
ret
add
mov
xchg
movsb
jae
jo
inc
xchg
lret
jecxz
test
je
fisttpll
sbb
imul
pop
daa
mov
negl
jp
loopne
sbb
lock
pop
sti
lahf
mov
add
imul
dec
mov
xchg
inc
pusha
neg
and
bound
jbe
inc
mov
loope
repnz
jo
or
call
add
pushf
bound
sbbb
mov
jbe
inc
and
mov
lods
sbb
gs
push
movsb
cs
in
push
pop
scas
push
imul
mov
dec
and
mov
sbb
dec
dec
push
jne
lods
pop
sbb
and
jae
out
movsl
add
pop
pop
fdivs
in
or
ja
push
jge
xor
iret
arpl
and
add
orl
subb
test
stc
cmp
popf
xchg
or
in
std
and
int
mov
addl
sbb
adc
testl
mov
fcoml
xchg
xor
xchg
add
orb
pop
sub
es
adc
insb
add
insb
mov
ffree
pop
pushf
in
sbb
push
adc
push
sub
add
inc
jo
lods
imul
stos
jb
cs
fists
and
sbb
sbb
int3
ret
psrad
lods
sarl
xor
sub
scas
movb
inc
push
loop
inc
mov
movsl
xor
push
out
pop
outsb
mov
sub
mov
insb
lock
mov
loopne
push
insl
xchg
sub
fistpll
iret
lods
cmp
in
pop
dec
sbb
pop
dec
leave
inc
lcall
fnstcw
shrl
fisttpll
imul
push
nop
imul
xchg
rolb
scas
pop
test
push
dec
fbld
cmp
and
test
out
stos
sbb
adc
push
into
xchg
ret
inc
gs
enter
cli
out
scas
std
sti
mov
sbb
nop
loope
adc
mov
mov
cltd
roll
std
loopne
push
lcall
and
jge
jno
xchg
xor
fistl
pop
in
mov
fdivrs
xchg
push
loope
vpshab
mov
and
mov
lods
pop
lods
push
fistl
or
adc
xor
lahf
test
pop
in
xchg
cmp
push
push
xchg
dec
or
inc
adc
repnz
mov
test
mov
sbb
jb
push
lahf
fcom
sti
push
push
mov
xor
jno
adc
and
std
inc
mov
mov
pop
jl
xor
mov
or
pop
pop
lret
pop
rorb
iret
and
out
cmp
dec
in
inc
jo
leave
or
and
jmp
stos
pop
dec
fiadds
mov
scas
inc
inc
xchg
iret
push
pop
xchg
es
in
lret
in
insb
ss
dec
scas
orb
xchg
mov
sbb
cmc
cmp
pop
mov
mov
arpl
mov
pop
add
jb
gs
nop
in
aam
pop
mov
das
orl
in
cmp
jns
rcr
or
push
jnp
dec
pop
xchg
jmp
jl
sbb
rol
test
cmpb
popa
int3
into
cmp
sbb
jmp
inc
xlat
js
dec
aas
jecxz
xor
stc
neg
adc
inc
cmp
fsubrl
push
sbb
pop
lds
jg
xor
xchg
lahf
cmp
xchg
and
fildll
ss
shrl
dec
lret
fbstp
push
les
mov
sbb
jno
sbb
sbbl
movsb
or
mov
mov
mov
xchg
cltd
mov
stc
inc
addb
xchg
inc
mov
das
iret
popa
pop
sbb
and
mov
mov
out
xor
test
shlb
mov
hlt
mov
icebp
mov
mov
inc
add
sub
stos
mov
jae
cs
xor
pop
in
mov
lock
pop
ljmp
cwtl
je
cmp
dec
mov
out
mov
pop
xor
push
data16
lds
jns
leave
xchg
jbe
rcl
adc
sarb
mov
push
icebp
les
insb
inc
sbb
push
negb
out
nop
mov
test
and
pop
mov
test
test
in
enter
sti
dec
xor
adc
test
adc
addb
jge
lcall
gs
cmc
jb
sub
negl
xchg
test
xchg
and
outsb
ds
fxch
into
ljmp
xchg
push
sbb
xor
pop
rcrb
push
mov
pop
adc
rolb
add
and
cmp
jmp
xchg
popa
and
fimuls
movsl
cld
pop
enter
push
cmp
cmp
mov
inc
sub
mov
mov
inc
fwait
in
mov
dec
mov
mov
cmp
sbb
pop
and
ja
or
cli
stc
ficompl
gs
push
mov
rolb
cmpsl
jmp
js
aas
clc
pop
and
jnp
stos
inc
pop
add
sbb
add
addr16
dec
daa
push
pop
fucomip
dec
fwait
mov
jnp
inc
pusha
pop
xlat
sub
pushf
scas
leave
mov
stos
mov
int
adc
call
sarb
inc
pop
sahf
bound
fsubrl
mov
mov
jnp
mov
lods
sub
mov
inc
rorl
dec
setg
lods
imul
push
mov
mov
cmp
gs
mov
mov
mov
dec
jl
call
inc
clc
push
ljmp
loop
mov
fsub
cld
push
sarb
fimull
in
cld
push
adc
lret
xchg
sub
cmc
cmp
out
mov
xor
push
jb
xor
filds
add
add
mov
lret
sbb
add
out
mov
movsl
addr16
or
mov
icebp
movsl
rolb
insb
ds
insl
ds
hlt
movsl
push
xchg
int
pop
xor
pop
jb
in
js
cltd
pop
adc
adc
mov
push
arpl
adc
mov
inc
dec
pop
leave
sbb
dec
sarb
leave
cld
daa
loope
fwait
jbe
popf
leave
xchg
sub
jne
mov
ss
xchg
es
les
pop
outsl
cwtl
jb
or
loop
xor
fs
and
jno
dec
jns
addr16
xlat
stc
inc
pushf
mov
test
scas
faddp
add
fsubs
arpl
iret
push
or
or
dec
pop
sbb
int3
mov
stos
fdivrs
pop
ljmp
sbb
stos
mov
sub
sub
push
inc
pushf
push
arpl
daa
aad
dec
jg
xchg
cmp
mov
cmc
ja
mov
dec
xor
push
inc
shlb
bound
fidivrs
jbe
and
loope
inc
enter
inc
mov
mov
ss
call
scas
xchg
fwait
or
push
and
xchg
sbb
sbb
dec
subl
dec
loop
cmpsl
mov
mov
stos
sbb
lret
sarl
cltd
mov
nop
inc
xlat
dec
movsw
pop
xor
pop
call
adc
dec
sub
pop
xlat
push
pop
xchg
jne
dec
fidivrs
mov
mov
push
mov
pcmpeqb
lcall
cmc
lret
adc
inc
push
ja
shl
pop
xchg
sbb
addb
push
mov
es
test
rol
cmpsl
insb
and
cmc
sbb
sbb
mov
mov
js
aaa
inc
rcll
les
sub
or
cld
lds
sub
sub
or
into
stos
pop
xor
xchg
push
and
pop
mov
es
stos
rolb
sub
sbb
fildl
inc
sub
inc
inc
inc
cmp
dec
iret
sbb
cmp
ljmp
and
cmp
inc
aam
lds
push
hlt
dec
xchg
jmp
mov
jbe
sbb
out
repnz
or
push
lahf
dec
or
push
sub
dec
push
addb
rclb
jp
int
xor
loopne
mov
test
xchg
cmp
xor
xor
clc
sar
mov
sub
and
inc
leave
movsl
jb
add
scas
pushl
sahf
sub
in
mov
ja
and
fisubl
notb
mov
cmpsb
subb
arpl
popa
jg
movsb
mov
ds
rclb
dec
add
pop
loop
push
pusha
xchg
mov
loopne
jge
mov
fmuls
sbb
gs
push
cmpsl
outsl
scas
dec
ss
mov
in
lcall
xor
xor
xchg
xchg
xchg
and
fbld
hlt
push
aam
cld
dec
sub
cmp
pusha
mov
ficoms
pop
out
xchg
test
jecxz
mov
bound
and
or
jmp
fstl
movsb
dec
shll
repnz
mov
pop
sub
popa
cmp
push
fldcw
andl
std
cmp
popf
mov
sti
fstpt
xor
pop
cmpsb
xchg
mov
push
cmpsb
mov
movb
mov
daa
insl
pop
sbb
je
adc
mov
ficoml
ror
mov
pop
orl
in
jp
sub
sbb
xchg
es
sbb
gs
rcl
mov
inc
stos
push
movsl
inc
loope
and
and
mov
lahf
xrelease
lret
frstor
out
xor
mov
rcrb
push
adc
outsl
cmp
aad
mov
sub
push
cmp
cmp
rcr
sbb
pop
lret
int3
arpl
jmp
outsb
aas
js
jae
or
call
outsb
dec
call
fbld
add
int3
push
ficoml
adc
sbb
es
jmp
pusha
mov
and
shrl
out
imul
jmp
les
mov
les
pushf
sbb
jb
lock
mov
add
shrl
jmp
insl
cs
mov
or
pop
out
pop
fs
dec
add
cmp
mov
sbb
into
mov
and
xchg
mov
outsl
or
sbb
cmp
and
mov
jb
jg
es
movsl
cmp
enter
std
pop
xchg
mov
rorb
mov
sbb
iret
jmp
jmp
xchg
and
cmp
and
dec
jmp
sub
lds
ds
hlt
stos
sub
insb
or
ja
cmp
cli
cmp
imul
jle
xchg
test
sub
mov
pushf
scas
out
test
and
hlt
adc
rol
dec
push
dec
inc
roll
sbb
mov
and
mov
repz
addb
mov
call
dec
loop
jbe
jnp
mov
das
std
cmp
testb
xor
aaa
mov
in
push
int
sub
repnz
call
nop
mov
dec
mov
jp
mov
cmp
jg
xor
pushf
out
inc
dec
cmpsb
dec
fsubrs
rclb
adc
sbbl
xchg
je
sub
push
mov
dec
xchg
outsl
int
pushf
sbb
inc
and
repnz
push
sub
loope
pop
jl
ljmp
and
ds
sub
or
je
and
xor
daa
mov
add
scas
xor
jecxz
dec
sub
pop
mov
jge
mov
adc
mov
jmp
bound
test
push
decb
in
lock
lock
hlt
mov
jnp
mov
iret
call
clc
inc
shlb
add
js
jmp
arpl
xchg
ret
and
inc
pop
fisubrs
faddp
mov
xor
xchg
push
cwtl
cmp
jmp
sub
aaa
cmpsl
sbb
cmp
int3
mov
xor
and
in
jno
les
scas
ljmp
repz
lods
push
jne
xchg
out
fidivl
cmpl
xchg
push
out
or
aad
sete
setnp
fisttpl
gs
jne
xchg
lret
insl
xor
push
mov
xchg
cmp
roll
mov
and
jle
sti
lret
into
jae
shl
test
mov
lahf
jno
repz
cmp
aam
mov
sub
std
stos
cmp
arpl
push
cmp
sbb
rcll
dec
loopne
or
repz
xor
push
mov
push
popa
in
and
movsb
pop
in
jnp
mov
xor
sub
sbb
push
mov
inc
push
xor
mov
jge
mov
pop
mov
pop
repz
or
and
rep
cmpsb
ret
int
sete
shl
popa
sahf
add
xchg
mov
xchg
inc
fbstp
cli
aas
push
loop
add
xor
and
pop
call
mov
mov
dec
lret
sub
add
ret
sbb
repz
xchg
insl
clc
std
js
out
jmp
inc
xchg
js
inc
xlat
js
xor
mov
std
shrb
cs
imul
lret
scas
test
addr16
pop
inc
das
mov
adc
pop
cmp
xchg
lds
or
push
into
xor
fadds
shll
call
inc
into
lea
je
adc
aad
bound
std
mov
sahf
xchg
cmp
fmuls
cltd
dec
push
in
jne
sub
ficoms
bound
fs
lret
testl
notl
je
push
inc
jle
xchg
jae
repz
inc
cwtl
pop
mov
sub
mov
daa
aam
mulb
xchg
int
pop
fidivs
add
lods
iret
lret
stc
sbb
mov
mov
jp
or
loope
in
sub
cmc
popa
mov
sub
imul
nop
inc
out
xchg
cmpl
insb
sbb
adc
xor
or
cld
data16
or
sub
iret
jecxz
aad
lret
jmp
ret
lahf
push
scas
add
loopne
test
subb
jecxz
cmpsl
fisubl
scas
push
mov
jg
xor
in
fwait
bnd
mov
repnz
ss
xchg
sbb
lock
cmp
add
fidivs
mov
aaa
call
mov
xor
cmp
test
aam
arpl
cli
bnd
mov
iret
mov
ja
das
in
arpl
sbb
pop
jp
mov
adc
pop
loope
lret
mov
in
fnstcw
insb
cmp
xchg
movb
or
sbb
pop
roll
fs
cld
sbb
add
xor
fcom
loope
int
aas
repz
or
sub
dec
hlt
inc
clc
scas
xor
xlat
aad
adc
inc
fldl
pop
cmpb
clc
je
gs
fs
sub
ja
lods
rcll
das
push
mov
push
scas
sub
inc
sub
mov
pop
jns
movl
pop
pop
cmpsl
dec
movsb
lea
pop
pop
outsl
sub
in
std
sbb
xchg
pop
outsl
test
xor
ljmp
popa
pop
pushaw
push
adc
ja
xchg
fs
negl
je
fst
pop
cmp
test
mov
out
jae
push
and
aas
jle
dec
les
push
les
vpaddusb
push
aaa
daa
inc
imul
in
sub
jg
jmp
stc
cltd
mov
testl
push
rorl
or
xor
mov
shrl
scas
fcmovnu
pop
xchg
adc
and
in
xchg
sbb
daa
inc
lret
mov
add
js
leave
push
imul
out
xchg
xor
lods
mov
enter
divb
gs
sbb
push
repz
pop
mov
sbb
sub
jmp
pushf
aam
xchg
sbb
adc
rorb
imul
stos
mov
adc
xor
lcall
rcr
xor
daa
jge
roll
repnz
pop
xchg
or
mov
fldenv
pushf
es
xor
adc
pop
mov
cmpsl
pop
out
icebp
jecxz
clc
pop
iret
cmpsb
jg
dec
fidivs
sub
xchg
adc
sub
rcr
push
cld
inc
adc
dec
inc
jo
xor
mov
push
or
lds
jp
lods
adc
out
test
scas
jl
mov
sub
pop
mov
pop
mov
sar
pop
adc
imul
cmpsl
outsb
xor
js
inc
addl
insb
inc
ds
adc
orl
cmp
loope
xchg
ret
loope
cmp
dec
mov
in
mov
push
call
jns
nopl
bound
lcall
inc
adc
push
push
out
loop
mov
int
in
mov
inc
testb
add
jns
lret
jmp
push
sub
xor
pop
sti
outsl
cmpsl
repnz
pushf
mov
sub
sub
sub
out
clc
xor
jmp
add
mov
dec
loopne
imul
dec
fnstsw
in
in
ljmp
ficomps
enter
stc
loope
shlb
xchg
jmp
mov
and
mov
pushf
adc
inc
xor
jae
push
push
adcl
jge
inc
add
loopne
test
incb
adc
fmul
push
mov
xor
testl
neg
push
jae
mov
push
push
pop
test
sar
ss
pop
xor
rol
into
xor
mov
and
push
iret
cmp
mov
mov
pop
sarb
add
outsl
jl
mov
mov
pop
inc
xchg
jmp
js
jp
fisubl
pusha
and
stc
xor
push
fs
cmp
pop
mov
int3
sub
adc
into
insb
sbb
push
ret
out
ror
cmp
jmp
iret
repz
pop
inc
addr16
mov
ja
std
xor
add
ret
push
hlt
add
xchg
jecxz
and
stc
enter
pop
movsl
mov
cmp
mov
adcl
cmpsb
xchg
sub
dec
jp
loop
sbb
mov
je
mov
shlb
popa
ds
push
adc
lock
ficomps
sub
add
lret
fmull
and
stos
imul
sbb
mov
icebp
xor
fidivl
cld
cwtl
sub
pop
jo
push
je
call
mov
xchg
mov
fisubs
pop
pop
aam
adc
test
fwait
lock
je
mov
and
cmp
mov
xchg
push
mov
pop
es
clc
xchg
cmp
xchg
test
pop
push
ret
cmp
jge
cmp
push
imul
or
jle
cmp
pop
notl
inc
in
dec
mov
in
test
xor
xor
mov
loopne
dec
mov
mov
xlat
mov
jbe
dec
jbe
push
jae,pn
pop
push
clc
movsl
std
adcl
sbb
pop
in
dec
cmp
push
in
jbe
mov
imul
js
mov
inc
cwtl
pop
data16
cli
mov
mov
pop
popf
shlb
ss
movsl
xchg
addr16
mov
lds
add
or
or
insl
and
sti
fsubl
pop
aas
push
adc
push
shrl
and
lods
outsl
jnp
mov
mov
jge
mov
xor
ficoml
jmp
pusha
ret
xchg
push
add
xchg
mov
or
and
clc
pop
lret
fmuls
push
js
push
mov
inc
aaa
inc
mov
jae
and
popf
mov
inc
push
ficompl
mov
sbb
push
in
fsubp
xor
fcmovu
push
jnp
test
out
int3
mov
inc
test
xchg
lret
or
sub
lret
cmpsl
dec
pusha
xor
nop
test
rol
pop
add
dec
xchg
mov
inc
push
or
xor
mov
out
in
in
jmp
pop
sbb
cmp
and
jmp
pushf
sbb
and
and
mov
mov
dec
out
icebp
adc
insl
xchg
decl
mov
xor
gs
lea
ficompl
cmp
shl
sub
sbb
inc
jl
push
lahf
ret
mov
hlt
jmp
lods
adc
mov
mov
clc
popf
icebp
test
sti
xor
push
into
sahf
pop
lods
out
push
int3
or
inc
or
addr16
push
ljmp
icebp
dec
pop
xor
mov
pop
outsb
mov
jbe
fistps
push
mov
test
bnd
addr16
pop
cltd
loope
pop
das
repz
bound
lea
loopne
inc
pop
mov
mov
mov
in
lret
mov
mov
pop
xchg
subb
add
cltd
aam
movsl
mov
jae
sub
enter
push
test
or
jge
in
push
cmc
mov
daa
jo
lret
insl
in
inc
pop
psubsw
scas
cmp
lods
mov
push
or
sti
int
in
or
dec
jle
ja
dec
icebp
rorb
and
push
jp
scas
and
mov
or
sbb
and
pop
andb
loopne
inc
testb
nop
scas
pusha
dec
cltd
imul
fsub
pop
adc
mov
cmpl
push
pop
sbb
xchg
sub
test
mov
and
cmp
decb
push
cmp
daa
pop
sti
es
inc
add
sbb
dec
and
or
mov
mov
bound
pop
sub
jle
movsb
jne
pusha
mov
jo
add
pop
push
mov
dec
pop
xor
sbb
cmp
fs
sub
insb
ljmp
insb
imul
out
addb
push
call
adc
imul
pmaxub
inc
popa
fldenv
sbb
bound
xor
adc
nop
sub
and
sub
or
lahf
subl
inc
cmp
cmpl
pop
dec
lret
pushw
xchg
inc
ret
mov
mov
enter
jnp
aam
movsl
sub
inc
jno
mov
mov
fs
sub
imull
imul
cmpsl
add
sbb
pop
mov
hlt
pop
jecxz
in
add
ds
or
mov
or
add
add
imul
jbe
pop
sbb
popa
mov
pop
pusha
push
or
lret
fistl
test
jmp
mov
dec
push
lods
xor
jae
push
dec
xchg
stos
adc
daa
in
cmpsl
jae
dec
lds
std
mov
roll
adc
hlt
lahf
sbb
nopl
shr
test
icebp
mov
daa
aaa
mov
add
out
aam
jnp
stos
mov
decb
icebp
mov
fldenv
lods
sbb
fs
inc
dec
retw
loopne
sub
sbb
mov
rdpmc
jbe
out
mov
test
test
incb
loop
mov
sub
data16
push
dec
mov
xchg
fdivrl
mov
sbb
stos
push
dec
movsb
jne
sbb
mov
pop
push
cltd
movsb
ja
das
cld
fildl
xor
or
jp
dec
fcmovb
les
sbb
mov
pop
and
aas
adc
stos
inc
cli
and
push
fldt
inc
cli
out
push
inc
mov
shll
dec
mov
or
mov
pop
pop
sub
push
in
dec
jp
int
movsl
es
imulb
rcl
push
insb
sbb
mov
sbb
jno
nop
adc
daa
xchg
pop
cli
cmp
shlb
pop
imul
sbb
divb
xchg
lret
sbb
pop
hlt
test
arpl
das
negb
pop
and
aaa
push
add
sbbl
mov
out
stos
jmp
test
lock
inc
and
sub
xor
fcoms
outsb
ds
add
call
push
xor
popl
mov
jmp
hlt
lods
iret
lock
icebp
aam
inc
cmpsb
mov
adc
mov
adc
ds
shlb
sub
xchg
dec
aam
mov
push
fstps
mov
and
or
mov
mov
ficomps
jne
push
loopne
pop
hlt
out
or
dec
and
xchg
ljmp
ret
adc
inc
push
loop
mov
sbb
pop
lcall
pop
ret
mov
mov
movsb
lahf
lahf
cs
pop
ljmp
push
mov
xor
xor
mov
lods
shl
xchg
or
fstpt
adcb
enter
push
outsl
fsubrs
mov
jmp
loope
in
mov
rcll
mov
cltd
and
pop
or
push
add
stc
adc
cmpsl
push
dec
sub
imul
cmp
scas
or
loopne
sbb
adc
mov
or
and
inc
jae
inc
cmp
xor
pusha
xor
fiadds
inc
add
mov
rcrl
into
stc
sti
mov
lods
addr16
dec
mov
sub
push
dec
cs
push
xchg
jne
popa
xchg
adc
pop
push
cmc
xchg
ljmp
in
mov
in
xchg
add
mov
in
adc
add
dec
jp
je
adc
xchg
fdivs
adc
dec
test
imul
pop
cmp
sub
shll
push
cmp
cmp
jne
test
fbstp
pop
mov
mov
jno
adc
ret
inc
adc
push
inc
push
movsl
inc
mov
inc
pop
jl
pop
scas
jg
xadd
enter
push
push
add
cmpsl
push
xlat
mov
aam
mov
sbb
sarb
pushf
clc
pop
data16
int
lods
xchg
dec
movsl
dec
ud1
popa
push
jno
rcrl
and
xor
aas
adc
popa
scas
or
mov
mov
aas
aad
pop
pushf
jp
lds
jge
loope
push
sub
dec
popa
inc
jnp
outsl
mov
stos
or
outsb
and
inc
inc
xchg
cmpsb
ret
jp
fmull
sar
ljmp
hlt
insl
insb
mov
and
sub
dec
push
in
or
mov
cmc
fs
xchg
mov
inc
aad
sub
cmp
ljmp
xor
pop
loope
xor
mov
imul
inc
add
xchg
jbe
mov
lods
push
mov
mov
lods
pop
and
push
in
das
int3
jl
loopne
mov
lcall
mov
jae
xchg
hlt
add
lahf
shlb
cmp
mul
imul
or
insl
mov
pushf
cld
mov
mov
add
mov
pop
fwait
ss
xchg
push
loope
mov
movsb
sbb
je
sbb
into
loop
xor
divb
in
or
aaa
adc
sub
push
cmp
int3
cmp
or
xchg
outsb
aam
mov
sti
jg
jl
addr16
xor
xor
pushf
dec
inc
sbb
inc
xchg
dec
mov
mov
pop
mov
and
mov
or
mov
loopne
jns
icebp
pop
mov
mov
jge
loope
sub
xor
ja
pushf
xorb
inc
icebp
mov
push
xchg
in
jmp
or
in
test
jb
push
scas
rclb
cmovge
es
jle
shll
pop
fiaddl
cmp
adc
clc
pop
cltd
stc
jne
pop
in
jg
scas
clc
lret
out
jle
and
inc
cmpsb
push
cmp
mov
jmp
loop
dec
test
testb
pop
mov
xor
aas
sub
mov
sub
sub
pop
push
hlt
ja
inc
test
lea
mov
mov
mov
jmp
jb
xchg
inc
jb
inc
inc
fmull
inc
lret
je
subb
jg
pop
fsubs
xor
sub
aas
in
out
mov
lret
lahf
mov
enter
and
xor
jae
jmp
into
pop
xchg
das
inc
fs
mov
add
adc
inc
outsb
add
nop
aas
xor
inc
push
out
push
dec
push
pop
out
push
call
decb
out
xchg
loop
faddl
out
pop
in
cmpsb
cmp
imul
mov
sbb
dec
xchg
fdivrs
cmc
dec
dec
pop
dec
xchg
mov
je
add
js
pop
push
jae
stos
out
inc
jne
sahf
mov
xchg
xchg
jnp
adc
xchg
loopne
jecxz
and
stos
jmp
int3
orl
dec
or
clc
addb
insb
push
xchg
or
cmp
out
adc
xchg
scas
push
pop
mov
sub
jge
test
bound
sahf
push
inc
test
lahf
push
ret
adc
push
mov
arpl
xchg
fldt
cmp
xchg
fs
and
pop
pop
incb
inc
pop
mov
jb
jg
into
pusha
insb
jge
mov
scas
aas
mov
loopne
xchg
out
movsl
mov
inc
out
ljmp
sar
adc
aad
inc
inc
imul
sbb
sbb
sbb
push
rcrb
insb
lds
xor
dec
push
pushf
loop
imul
mov
dec
dec
hlt
cmp
outsb
sub
lea
xchg
lahf
sbb
ret
mov
jecxz
pop
shrl
ret
ss
push
and
mov
dec
lret
scas
mov
dec
loopne
insl
loope
orl
fwait
pop
and
mull
adc
dec
vpunpcklwd
pmaddwd
aad
fisttpl
ss
cmp
push
cs
shlb
jnp
jbe
or
add
les
rclb
inc
pop
out
flds
gs
dec
movl
cltd
pop
sub
outsb
rcll
add
xor
popfw
nop
loope
pop
rcrl
mov
and
scas
xor
xor
nop
mov
adc
cmp
xor
and
cmp
and
mov
bndldx
jl
jae
stc
out
ficoms
xchg
insl
insb
popa
aas
pop
jmp
aad
jge
test
push
push
rol
outsb
jae
xor
add
movsb
lcall
jns
pop
mov
lahf
push
jmp
rcrl
mov
sub
pop
jg
sahf
sub
pop
fwait
adc
pop
mov
sub
repz
aas
sahf
jbe
jge
fldcw
insb
imul
leave
clts
shlb
mov
pop
jmp
outsl
jmp
rcrb
ss
addl
dec
mov
dec
loop
in
or
test
sti
mov
add
mov
es
orb
pop
shrl
stos
out
loope
sub
call
xchg
jb
sarb
test
insb
loop
xor
push
sub
mov
in
adc
push
rcrb
inc
mov
cwtl
lcall
out
mov
jp
adcl
sbb
shrb
and
int3
dec
mov
testl
mov
shll
mov
movsb
outsl
mov
pop
divb
cmp
jg
inc
push
sub
ficoml
cmp
gs
add
mov
xchg
inc
mov
vorps
jl
xor
cli
jmp
xchg
lods
adc
loope
and
jmp
mov
sub
jl
sub
imul
mov
in
out
mov
stc
mov
inc
mov
sahf
pop
rcl
jae
in
rcrl
pusha
xlat
sub
int
or
xchg
inc
cmp
mov
push
cmp
push
clc
cmpsb
sbb
adc
push
add
and
sub
dec
sahf
and
shrb
sub
or
shr
js
clc
rcr
mov
jp
rorb
mov
into
mov
movl
sub
mov
cmc
pop
lahf
push
mov
mov
add
or
or
decb
add
jmp
or
sbbb
out
mov
pop
aas
push
push
mov
or
push
mov
dec
or
xor
mov
sahf
inc
mov
jmp
popa
test
popa
out
jnp
jo
push
fistps
fwait
shlb
xlat
sbb
in
add
inc
inc
or
push
sarb
inc
dec
inc
subl
dec
push
das
sbbb
in
aas
push
pop
stos
add
fldenv
cli
cld
stc
xchg
add
jmp
mov
dec
xchg
lret
sub
out
xchg
cmp
adc
push
inc
fsts
test
loopne
pusha
jb
jbe
cwtl
pop
lds
dec
scas
int
lods
push
lret
dec
faddp
sbb
stos
and
shrl
push
lret
into
jp
adc
xchg
mov
mov
lret
cmpsl
sub
adcb
ja
inc
jp
sbb
dec
shll
sahf
xor
mov
aad
out
sti
imul
into
mov
push
in
jp
dec
shrb
and
ljmp
in
imul
ja
and
js
out
ljmp
lock
repnz
out
je
mov
sbb
sbb
cwtl
out
sbb
out
mov
daa
mov
jge
push
bndldx
loope
pop
and
je
sbb
aaa
push
pop
rclb
cmp
xchg
stos
push
and
push
dec
or
mov
idiv
adc
mov
fisttpll
add
xor
notb
fwait
into
movsl
cmpsb
jg
sarb
adc
jle
test
push
daa
dec
and
dec
flds
insb
mov
push
call
cmp
xorl
pushf
ds
jb
xor
mov
push
or
jo
jp
push
mov
dec
push
sub
push
jl
pop
pop
sbb
sbb
pusha
fcoml
cs
test
sub
pop
mov
iret
sub
and
insb
or
jbe
lds
std
ljmp
and
lods
pop
mov
pusha
and
das
pop
sbb
mov
xor
cld
cmp
stc
fstps
data16
enter
je
jne
xchg
dec
cs
test
sub
fstpl
insb
push
fisubrl
stc
sub
sbb
lds
pop
pop
stos
mov
insl
add
cmc
test
jo
in
xorb
daa
mov
js
mov
xchg
xor
jno
iret
enter
push
movsl
lods
jbe
pop
mov
inc
xchg
add
mov
add
push
jnp
lahf
mov
das
aam
loope
and
lods
push
scas
cmp
ret
iret
mov
cmp
xchg
imul
stos
dec
mov
xchg
insl
mov
sbb
cwtl
push
lret
loop
inc
jp
jns
add
stos
bound
adc
pop
loop
lcall
shll
xchg
lret
pop
in
cld
ret
es
xchg
test
xchg
lahf
ja
xchg
loope
jle
out
pop
jb
sub
gs
jle
add
gs
xchg
pop
pop
test
push
into
mov
dec
inc
icebp
out
inc
mov
lds
or
mov
jle
lods
lock
cmc
lcall
add
mov
scas
inc
inc
imul
mov
in
pop
fbstp
cmp
loopne
cmp
cmpsl
mov
jp
sbb
or
mov
jecxz
popa
adc
aam
mov
out
add
mov
xor
push
add
call
je
jge
mov
xor
adc
lcall
call
jg
adc
popa
stos
and
lcall
jnp
out
mov
jmp
test
cmp
jl
retw
pop
mov
orb
push
jbe
inc
cs
lods
xchg
pop
xor
xor
push
inc
xchg
add
dec
fisubrs
push
or
int
jae
jns
hlt
xchg
push
lds
stc
enter
jno
aad
stos
inc
xor
dec
and
mov
xlat
xchg
lods
cs
cwtl
inc
imul
jge
push
sub
outsb
xchg
adc
lock
inc
jb
fnstsw
xor
cmp
andl
lret
mov
xchg
in
out
clc
mov
not
ds
aaa
mov
pop
fst
lock
mov
fidivs
gs
fistl
cmp
jne
cmp
icebp
fs
loope
cltd
rcl
sbbb
cmp
cmp
fs
cld
bound
out
leave
loope
xor
insb
mov
insl
cmp
inc
and
jb
ljmp
and
cmp
mov
outsl
push
jp
ss
cs
mov
add
aas
sbb
lods
xor
xorb
daa
cmpsb
jns
imul
xchg
in
ds
pop
popa
es
add
vmread
mov
or
jb
adc
pop
shr
or
sub
std
mov
add
jmp
adc
mov
cli
mov
imul
sbb
loop
jb
sub
cmpsb
jnp
or
pop
ljmp
iret
lock
pop
jl
xor
bound
test
cmp
hlt
popl
mov
cmpsl
xchg
xchg
sbb
mov
pop
decb
in
scas
mov
sti
fwait
push
loopne
dec
sti
out
popa
push
cmp
pushf
shll
sti
push
xchg
cmp
out
fcompl
shl
enter
jnp
jl
cmp
pop
xchg
fwait
push
shll
add
sub
adc
test
es
cmp
or
jbe
cmp
and
cmpb
xchg
divb
pop
xchg
inc
movl
adcl
ja
lods
sarl
sub
pop
inc
sbb
in
scas
out
sub
mov
cmp
es
xchg
add
or
jg
mov
mov
leave
mulb
xchg
test
jne
or
push
sbb
sub
sar
test
lahf
and
cltd
pop
sbb
push
nop
inc
int
adc
and
aas
testb
or
sarb
push
aas
mov
mov
add
test
flds
xlat
scas
enter
and
icebp
inc
idivl
sbb
nop
mov
fadds
inc
mov
das
popa
enter
sbb
sbb
into
and
mov
dec
jnp
mov
aaa
push
out
shrb
or
pop
inc
dec
sbb
mov
mov
push
jne
pop
xor
ljmp
push
aad
insb
inc
sbb
sti
push
stos
push
push
push
pop
jg
int3
pop
push
xchg
mov
or
add
clc
pop
push
aas
outsb
data16
and
jno
pop
fucomi
movsl
lahf
jb
bound
fs
dec
pop
shlb
add
notl
cmp
or
jo
mov
or
push
mov
sbbl
pop
in
jmp
loope
enter
jbe
pop
adc
scas
push
test
dec
xor
loopne
fdivr
stos
ret
or
push
rorb
mov
repnz
fs
adc
jns
scas
xor
idivl
add
or
mov
push
or
mov
sub
pop
push
lahf
ds
mov
inc
cld
ret
cmp
push
jae
cmpsb
or
cmp
sbb
decl
jp
mov
fmulp
arpl
xchg
insb
or
cmpsb
add
pop
add
adcb
fwait
jne
lock
mov
xor
leave
aam
and
xchg
rorb
jg
dec
inc
lret
sahf
xor
jmp
xchg
int
pop
scas
inc
cli
in
rorl
or
andb
push
jmp
xchg
pushf
sbb
push
daa
pop
xor
xor
pop
out
imul
fildl
stc
jl
repnz
bnd
movsb
shr
shll
mov
xor
dec
jecxz
shrb
fsubrl
mov
cmpsl
push
cli
ja
push
mov
lret
xchg
cltd
pop
xchg
clc
jmp
stos
jnp
imul
mov
popa
jno
movsl
mov
xchg
xor
out
stc
sub
add
fisubl
fmuls
and
inc
mov
xorb
stos
pop
pop
ret
cmpsb
inc
scas
in
outsl
rcr
stc
mov
xor
orl
pop
fsubrl
push
imul
scas
ja
pop
out
nop
repz
add
add
out
cltd
xor
jo
shl
xlat
add
mov
cmpsb
push
and
cmp
cmp
push
sti
add
mov
je
popf
int
cli
clc
arpl
mov
or
mov
leave
push
and
mov
enter
test
pop
xor
in
jb,pn
outsl
sub
stos
lea
fs
jg
xchg
std
mov
es
mov
mulb
fnstsw
aad
sbb
mov
sbb
movsb
stc
mov
push
in
jb
cmp
dec
out
and
iret
pop
adc
ffreep
pop
cmp
jp
aam
out
arpl
dec
mov
mov
xor
jp
adc
inc
jo
ret
das
push
arpl
lods
addr16
and
add
sub
mov
sub
into
les
gs
shl
push
push
xor
sub
fdivr
dec
xorb
outsl
daa
loope
clc
adc
ss
add
std
and
mov
popa
repnz
cmp
or
push
sar
stos
out
out
push
cwtl
sbb
xlat
dec
in
movsl
pop
lods
leave
inc
hlt
cmp
lods
pop
adc
push
xor
fidivs
pop
popaw
xor
cld
popa
or
xchg
or
ja
adc
cmp
pop
cmp
fst
in
inc
cmp
dec
jo
pop
mov
icebp
outsl
mov
jno
ret
cmp
sub
xchg
jbe
cmpsb
or
pop
cmp
test
push
flds
test
adcb
xchg
pop
arpl
in
les
adc
addr16
loop
mov
out
jl
test
jecxz
test
fmull
aam
jge
mov
sub
mov
arpl
mov
aad
in
aam
cmc
mov
fists
xchg
xchg
adc
sbb
mov
xor
subl
dec
xchg
fadds
lea
gs
sbb
mov
xor
bound
inc
out
push
jo
mov
mov
js
jnp
cmp
pop
insl
lahf
push
pop
test
jle
cmpsb
xchg
aaa
and
cs
sar
jmp
push
insb
lods
lret
pop
mov
add
fwait
sub
push
ljmp
aaa
jp
xlat
mov
sub
movsl
push
cs
cld
je
lock
out
mov
or
pop
shll
inc
cs
inc
dec
ror
insb
jmp
call
ljmp
test
pminsw
mov
fwait
jmp
insl
and
mov
mov
pop
fwait
lods
hlt
sbbb
jnp
cmpsb
hlt
out
cmc
xchg
addb
daa
push
insb
mov
scas
movsl
scas
lock
mov
rclb
iret
jne
cmp
fwait
inc
mov
and
push
or
jae
jbe
shrb
in
or
push
or
aam
sub
in
rorb
add
mov
xor
inc
xchg
jmp
iret
xchg
negl
cmpsl
dec
dec
push
ret
lea
push
push
ret
mov
sahf
push
jmp
bound
fstps
sbb
jno
in
inc
ljmp
aaa
sub
mov
adc
mov
imul
leave
ret
cld
inc
mov
fucomi
mov
ss
mov
mov
in
lea
xchg
sbb
xchg
mov
xor
addr16
rclb
mov
push
decl
movsl
imul
sub
sub
adc
or
push
push
loop
fists
lahf
xor
jmp
movsl
inc
sub
xchg
push
sahf
ss
pushf
push
inc
insb
clc
mov
cwtl
in
xor
mov
mov
mov
and
popa
and
rol
je
dec
mov
cs
ja
mov
jns
test
cs
sub
movsb
and
mov
imul
js
mov
pop
jg
adc
inc
cmpsb
mov
data16
and
cmp
daa
outsb
pop
xchg
cmp
lret
xchg
mov
pop
and
and
jno
mov
push
aam
ljmp
shll
cmp
loopne
xor
dec
aad
stos
ljmp
popf
out
pop
inc
fimuls
jge
aas
cmpsb
das
adc
into
dec
add
ret
ret
scas
mov
loopne
pop
jg
inc
inc
mov
ss
negb
inc
lods
je
sarl
mov
popa
fxch
fisttpll
repz
les
scas
test
add
push
mov
mov
rorl
lret
mov
popf
mov
repnz
fidivs
test
ja
cmp
mov
cmpsl
jl
ja
stc
imul
and
mov
icebp
jp
pop
xchg
sbbb
stos
orl
test
sub
xor
inc
mov
pop
test
sub
ret
xor
in
ja
in
jo
icebp
pop
pop
mov
xchg
xlat
and
inc
pop
push
xchg
sbb
dec
mov
push
popf
jge
mov
sub
outsl
nop
aam
push
in
add
mov
jne
mov
call
lea
jo
dec
pop
mov
cmpsl
cmp
pop
dec
adc
push
je
adc
pop
jge
cmp
in
cld
xor
xchg
cmp
mov
jnp
aad
push
push
popa
sbb
test
lds
mov
aam
pop
push
cwtl
icebp
sahf
pop
mov
mov
adc
mov
cmpsl
flds
pop
shrl
inc
arpl
mov
or
mov
imul
pop
pop
call
jmp
add
adc
out
mov
sbb
aaa
loope
jae
xchg
sbb
xchg
xchg
pop
lret
pop
and
jl
inc
imul
mov
std
jbe
sahf
dec
push
cmpsl
sahf
xchg
decb
mov
insl
js
mov
xchg
or
or
repnz
xchg
mov
mov
scas
jmp
sbb
inc
repz
add
ret
inc
insl
pushf
mov
lret
fimull
icebp
jle
push
mov
jl
inc
or
add
cmp
out
fidivrl
mov
in
mov
adc
jecxz
xchg
cltd
mov
and
jb
dec
lcall
test
xor
out
test
sbb
pop
in
pop
xor
dec
movb
fbstp
xchg
inc
inc
jmp
sbb
xchg
call
and
or
cmpb
rcr
or
sarb
dec
dec
cmp
aas
mov
add
negl
test
adc
sahf
mov
ds
lahf
outsb
and
loopne
mov
dec
inc
iret
mov
push
lcall
xor
mov
fwait
aas
push
jp
pushf
test
out
dec
inc
push
testb
scas
popf
xlat
in
clc
cwtl
mov
hlt
std
xchg
or
push
aas
imul
sarl
lods
pop
sbb
lock
xchg
pop
inc
in
cld
or
cmp
xchg
ds
sbb
insb
das
pop
test
and
idivl
mov
jo
adc
in
aam
fcomi
xchg
lods
add
clc
imul
int
push
cwtl
pop
mov
jb
and
pushf
dec
jno
lret
data16
dec
sub
cli
jmp
nop
mov
fstp
pop
rclb
cwtl
iret
or
ret
std
in
dec
adc
sub
pusha
jb
push
jle
dec
fs
or
pop
xchg
addr16
das
ds
imul
jns
fwait
mov
dec
mov
and
mov
jmp
iret
aad
pusha
add
or
inc
pop
repz
ja
mov
cmpsb
jno
and
lock
lea
jmp
push
jb
repz
push
mov
mov
stos
scas
and
outsl
mov
fimull
out
test
push
insb
xchg
out
jmp
and
jo
movsb
stc
mov
jb
or
shlb
sub
push
fistl
pop
sub
aad
xchg
cli
lods
inc
mov
inc
insl
mov
ret
sub
adc
sarl
aas
or
push
jbe
inc
iret
sbb
push
mov
pop
add
push
loopne
push
mov
out
cmp
or
call
push
add
mov
dec
and
out
inc
jb
fcmovne
pop
rolb
gs
pop
pushf
jne
stos
stc
rcrb
adc
loop
icebp
sbb
inc
add
clc
add
insl
pop
in
enter
aad
xchg
jbe
sub
icebp
cmpsl
daa
aam
mov
ret
in
stos
sti
js
sub
dec
popa
adc
xchg
xchg
inc
test
cmp
push
jge
and
cld
mov
pusha
inc
cmp
dec
ljmp
ds
inc
mov
bound
push
iret
iret
push
pop
rorb
aas
cmp
roll
aam
mov
cmpsb
loope
fbld
fldt
insb
pop
fwait
popf
vpaddusb
popa
clc
repz
pop
jmp
xchg
pop
add
pop
jmp
rcrl
and
repz
out
in
pop
pop
mov
daa
jg
movsb
lret
lds
jge
insl
stos
outsb
xor
and
int
ret
addr16
mov
sbbb
sbb
jmp
mov
out
outsb
mov
xor
test
leave
fnstenv
cmp
cli
lcall
loope
and
test
push
add
adc
inc
push
ljmp
cltd
add
sbb
divb
ret
or
lcall
into
shr
dec
xchg
js
jne
int
hlt
pop
and
mov
inc
loopne
push
mov
xchg
fwait
lods
loopne
fadds
jne
push
mov
cmp
ret
das
and
inc
movsb
out
mov
sbb
fcmovb
lahf
pop
sbb
lods
mov
call
pop
push
adc
in
cmp
inc
lret
dec
out
cmp
in
dec
mov
data16
mov
scas
inc
add
sub
das
jp
ljmp
add
adc
mov
dec
mov
flds
xor
push
lret
adc
and
sbb
add
xchg
fnstsw
adcl
inc
scas
dec
jb
dec
add
and
xchg
or
xchg
imul
loope
xor
icebp
pop
or
movsl
xor
loopne
inc
and
add
pop
sub
jmp
gs
imul
test
sti
pusha
push
imul
movsl
pop
iret
push
mov
lret
xor
pop
in
stos
jg
inc
inc
cld
sbbb
lods
cmp
jmp
pop
scas
or
enter
dec
fsub
movsl
sub
subb
cld
lret
das
shlb
mov
xchg
inc
push
shl
pop
ljmp
inc
adc
lods
neg
jae
int3
xchg
pop
sbb
sub
cmp
in
scas
loop
adc
dec
cmp
ret
and
mov
loopne
pop
jecxz
addb
dec
sub
in
and
mov
nop
stc
sub
dec
adc
mov
int
mov
scas
popa
repnz
pop
nop
jae
enter
iret
adc
cltd
pop
push
shl
test
test
sbb
cli
mov
push
xchg
add
xor
loopne
rclb
and
adc
sub
xor
push
mov
mov
and
xorl
xorl
ss
ret
sub
std
sbb
sbb
fldl
rolb
jb
jecxz
repnz
loop
enter
inc
lcall
shrb
pop
xchg
mov
sti
movsb
shrl
pop
jmp
es
pop
mov
or
in
loopne
pop
mov
mov
in
adc
leave
pop
cmp
pop
inc
xor
cmc
stc
sbb
mov
pop
xor
lds
adc
cmp
inc
or
adc
int
inc
je,pn
gs
mov
pop
cmp
jae
or
lock
cltd
or
mov
push
xchg
inc
mov
xor
add
and
aaa
push
push
adcb
insb
push
aas
dec
loop
dec
mov
ss
lods
jge
pushl
shll
in
jae
mov
or
add
cmp
outsb
and
inc
jg
jl
mov
cmp
pop
out
js
dec
test
and
mov
jb
add
jmp
loop
in
fs
push
push
repz
orb
out
inc
pop
out
test
clc
or
and
pop
jo
sahf
xchg
ret
pop
mull
test
pop
addl
mov
outsb
ret
outsb
mov
sbb
dec
dec
shrb
shlb
imul
pop
xchg
dec
iret
jl
add
add
fstp
and
bsf
lret
arpl
mov
rcrl
testb
rclb
jne
adc
mov
fistps
jmp
jp
sbb
cmpsb
aam
mov
call
mov
mov
movsb
mov
pop
das
jo
push
loop
sbb
lea
jg
repnz
lds
test
stos
negb
mov
and
gs
pushf
adc
cltd
outsl
xor
dec
inc
adcb
pop
sbb
lret
pop
sbb
test
jno
push
ja
inc
mov
addl
rolb
test
stos
into
fwait
icebp
dec
cmp
mov
rcl
lret
mov
or
je
and
lahf
fcompl
adc
pop
fs
mov
cltd
and
mov
test
pop
insl
push
jp
bound
xchg
adc
push
xor
xor
mov
pop
pop
enter
mov
pop
icebp
add
fstl
jmp
pop
push
insl
sbb
xor
fcmovnu
mov
mov
in
mov
fsubrs
mov
sub
or
cs
mov
push
inc
pushf
and
inc
add
mov
jg
and
pop
hlt
cli
out
mov
movsb
es
idiv
outsb
lods
outsl
sbb
mov
int
push
mov
in
cmp
push
scas
shll
testb
repnz
sub
stc
jp
lock
adc
loop
and
lods
push
jnp
shl
sbb
xchg
push
xor
and
sbbb
enter
js
out
jo
dec
mov
loope
insb
jbe
xor
shr
dec
mov
push
pop
test
test
jecxz
add
repnz
or
cmp
mov
push
imul
loop
pop
js
xchg
lea
test
in
sub
pop
ret
stos
mov
sub
fcmovnbe
imul
push
fnstcw
test
lret
and
mov
cltd
xchg
int
mov
shlb
lcall
fstps
fcomps
inc
or
mov
fcomi
cmp
jecxz
jmp
call
xlat
mov
cmpsb
mov
mov
imul
pop
add
lahf
fnstenv
cmpsl
jo
aaa
cmp
xchg
xor
mov
dec
fsub
cwtl
push
pop
in
dec
pop
cs
dec
sub
push
mov
or
inc
pop
sub
mov
cltd
xchg
data16
xor
mov
lret
xchg
push
sbbl
jle
mov
or
ds
pop
ds
cmp
nop
jno
mov
clc
movsb
nop
mov
jg
in
bound
inc
fiaddl
and
mov
and
gs
pop
divb
mov
out
pop
dec
or
and
push
jecxz
inc
jge
inc
mov
cmp
pop
adc
mov
jo
lock
js
out
fcoms
xchg
mov
stc
or
adc
add
adc
mov
sub
sbb
adc
lock
imul
lret
dec
aas
stc
mov
xor
cmp
adc
in
xchg
jmp
xchg
shll
xchg
sbb
and
iret
sub
mov
call
int3
loope
xor
dec
push
mov
dec
push
into
sub
icebp
test
fisttpll
pop
nop
rol
mov
sub
lret
xor
push
fldenv
xchg
push
scas
mov
rolb
pushf
inc
in
cwtl
push
jl
fcoms
lock
aad
lret
sbb
mov
out
jmp
das
sbb
or
lock
inc
jbe
jb
xor
shlb
jmp
movsl
pop
aad
lcall
imul
xor
or
sbb
aad
jno
into
ret
mov
adc
push
in
stc
xlat
shl
and
lock
mov
jns
scas
cld
add
pop
mov
mov
mov
xlat
insb
mov
fistl
jb
sahf
sbb
inc
or
jnp
pop
pusha
push
jge
push
loop
fsubrl
rcrb
push
xchg
bound
jmp
or
and
mov
dec
icebp
jle
shlb
rol
add
push
call
xor
pop
and
notl
and
in
pushf
js
xchg
js
les
inc
push
into
xchg
mov
shl
jns
imul
inc
xchg
lock
repz
nop
repnz
insl
pop
mov
mov
mov
test
push
and
in
pop
insl
orb
test
insb
test
lahf
jno
xchg
and
lea
xor
or
pop
mov
mov
roll
std
mov
sub
leave
adc
push
cwtl
mov
xchg
adc
and
xor
popf
xchg
or
mov
ds
or
std
inc
pusha
cmp
in
test
jmp
cmp
inc
into
ljmp
daa
addb
enter
sub
dec
xchg
jns
jb
push
sub
fistps
or
push
sbb
js
inc
pushf
pushf
pop
jg
or
push
mov
int
jnp
cld
pop
hlt
jb
fwait
mov
push
push
xchg
mov
mov
daa
ret
xor
loopne
jnp
cmp
mov
lods
dec
sub
bound
xor
sarb
neg
aam
jbe
dec
pop
pop
fcompl
js
ljmp
nop
adc
mov
push
int3
push
out
mov
or
inc
lret
pop
mov
xchg
and
addr16
les
aam
jl
in
sub
cmp
push
sub
scas
cld
cmovs
add
fwait
iret
pusha
test
popf
mov
xchg
mov
callw
scas
cmpb
cltd
test
push
rclb
pop
push
sub
or
mov
inc
mov
shll
lds
mov
pop
xorl
push
push
ficoml
inc
es
mov
xchg
push
xchg
lret
fcompl
loope
jmp
lock
daa
je
xchg
lods
shlb
xchg
sbb
jbe
rcrb
scas
pop
xor
roll
dec
mov
add
rolb
out
daa
mov
push
pushf
cmp
or
lock
mov
cmpsb
inc
mov
out
push
test
fs
or
push
lahf
and
cmp
fistl
je
stc
push
arpl
pop
push
sub
loop
ret
mov
fstpt
bound
stos
mov
movsb
fwait
xchg
mov
imul
aad
shlb
mov
loopne
cmpsl
insl
ds
std
test
stos
loope
push
jno
and
xchg
mov
rcr
ljmp
sbb
xor
jnp
imul
test
push
push
or
mov
popf
xchg
sub
out
xor
or
cli
cmp
pop
ss
lcall
call
test
iret
add
jp
stos
iret
movsb
scas
out
add
sti
outsl
push
in
or
in
popa
pop
xor
add
jns
test
sub
shl
xchg
jecxz
mov
mov
gs
scas
adc
or
mov
sub
jle
inc
and
or
dec
jo
or
pop
movb
sub
lret
inc
jg
add
sub
jge
pop
sbb
ret
scas
orb
je
cmc
inc
mov
push
push
gs
add
cmc
and
dec
jno
jp
jge
popl
imul
push
aam
xchg
jecxz
push
dec
xor
lret
xchg
push
add
ret
std
addb
bswap
out
dec
addr16
cmp
mov
dec
mov
flds
adc
lcall
rolb
mov
mov
cs
pop
in
mov
jne
into
imul
adc
and
dec
lret
pushf
xor
add
cmp
pop
push
or
mov
push
push
jp
and
xchg
or
push
scas
lahf
lahf
cmp
cmp
ds
adc
add
push
adc
scas
cwtl
mov
inc
inc
in
mov
pop
xchg
jmp
gs
fyl2x
xor
addb
and
lock
mov
cmp
push
shrl
rorb
lcall
or
fwait
mov
and
lahf
mov
push
bound
pop
jmp
out
imul
sbb
xchg
mov
mov
addr16
repz
sub
or
pop
and
push
pop
mov
jecxz
push
push
ret
movsb
inc
mov
dec
aas
je
inc
and
and
dec
test
add
leave
ret
mov
popa
lret
mov
lods
xor
loope
xchg
scas
ret
mov
push
scas
jae
jbe
mov
mov
cmp
testb
aaa
ss
data16
rcll
bswap
dec
cmp
lds
fdivp
mov
sarl
loopne
add
jle
pop
pop
cltd
push
call
sahf
test
pop
mov
std
fwait
jg
in
mov
test
mov
bound
je
mov
popf
test
fcoml
in
cmp
xchg
sub
cmp
call
cmp
push
mov
dec
test
rol
es
loop
arpl
mov
jns
inc
lret
inc
xchg
fcomps
adc
or
mov
mov
jmp
cmp
lahf
imul
cwtl
outsb
adc
cmc
add
xchg
mov
shl
lds
jp
mov
jp
repnz
sub
and
jge
lds
or
mov
rclb
jl
mov
xlat
dec
push
push
ljmp
pop
adc
adc
jne
cmp
mov
xor
push
repz
mov
faddp
add
mov
pop
cmp
lods
out
sub
and
push
jg
aaa
inc
jno
insb
arpl
mov
iret
xchg
jmp
mov
sub
xchg
jb
shll
in
fldt
mov
jns
lds
out
sbb
imul
hlt
adcl
or
jnp
xor
jecxz
inc
pop
or
mov
cmp
les
lahf
inc
add
in
pop
add
mov
pop
mov
jo
jge
hlt
loopew
pop
sahf
mov
insl
nop
jns
sbb
adc
pop
xor
imull
call
sub
adcb
inc
sub
loope
inc
xor
rolb
lods
into
cld
call
dec
movsl
sbb
loope
outsb
sub
dec
sub
es
fcmovnu
inc
sub
xchg
push
fwait
movb
pop
pop
jmp
push
out
jle
xchg
xchg
outsb
xlat
and
aaa
addr16
push
sub
bound
std
test
fldcw
insb
leave
xor
out
mov
inc
in
pop
and
ret
outsb
add
cmc
lock
jnp
aam
data16
cmp
inc
mov
and
mov
xchg
sti
pusha
sbb
jb
lds
mov
xchg
enter
push
mov
cmp
divb
sbb
sub
pop
stc
das
dec
mov
inc
outsl
ret
sub
shrl
jne
mov
push
and
adc
popa
mov
dec
pop
lret
xchg
bswap
mov
fcoml
xchg
add
add
push
xor
int3
jge
cmp
inc
cmp
icebp
sbb
mov
dec
and
inc
cmpsb
pop
sub
push
push
repz
in
mov
adc
repz
lcall
add
ror
sbbb
arpl
jns
lods
xor
xor
xchg
inc
add
pmaxsw
ds
xchg
outsl
stos
in
lds
into
fsubr
arpl
int3
xlat
sub
xchg
mov
pop
dec
repz
mov
xchg
cmc
mov
dec
mov
xor
mov
xor
sbb
cmp
sbb
xor
movsb
mov
out
fcoms
pusha
ds
push
inc
sub
push
add
test
mov
inc
call
mov
push
mov
imul
add
shll
lds
mov
aas
lds
sbb
push
aaa
jle
add
xorl
loopne
repnz
out
inc
scas
gs
pop
inc
push
dec
cmc
push
mov
mov
ss
outsl
mov
xchg
aaa
testl
fucomi
cmpsl
inc
xchg
in
insl
and
cmpsl
add
enter
shl
cmp
fisttpl
stos
pop
aaa
cmp
stos
mov
push
jmp
stos
aas
mov
insl
scas
cmpsl
popa
cmp
jne
mov
cld
mov
inc
xchg
pushf
fmuls
pusha
sbb
adc
mov
inc
sbb
dec
or
lock
loopne
rolb
xor
xchg
ffree
mov
adcb
leave
addl
das
mov
xlat
je
addb
inc
cli
pop
jae
lret
push
xlat
in
xor
mov
mov
mov
clc
mov
inc
and
arpl
inc
dec
je
ljmp
cmp
sub
std
jecxz
shlb
imul
imul
mov
push
es
cmp
dec
cmp
mov
pop
in
adc
popa
xor
sbb
ret
push
cltd
or
dec
pop
sub
push
or
dec
jae
xchg
lods
stc
or
and
pop
pop
jno
jge
addr16
ja
or
jl
into
pop
cmpl
in
dec
movl
ficomps
fildll
js
popf
mov
add
dec
sbb
xchg
in
shl
lods
mov
addr16
jg
xor
dec
ret
fcom
je
and
push
shrb
loope
rorb
scas
sub
mov
movl
mov
push
lahf
aas
push
hlt
cmp
dec
scas
repz
add
mov
hlt
xchg
shll
add
mov
sti
jl
aam
xlat
push
scas
sub
mov
in
popf
imul
int
pop
inc
std
push
inc
ret
clc
lahf
out
add
mov
dec
imul
fdivs
jge
and
fistpll
jle
mov
mov
sbb
and
mov
lahf
adc
iret
cmp
jp
fimuls
pusha
cli
lcall
push
out
fnstsw
dec
xorb
aas
jge
cmp
into
fsts
stos
mov
add
in
lret
roll
cmpsb
add
push
movsb
fcmovnb
inc
lds
push
fldcw
clc
xlat
out
push
xchg
pop
test
in
push
cltd
push
push
mov
or
sbb
xchg
mov
cs
insb
mov
lock
test
push
in
stos
scas
mov
push
lds
cld
cli
loop
out
mov
inc
les
mov
dec
push
push
adc
xchg
movsb
aaa
jne
pop
lret
lcall
out
add
lret
test
stc
outsl
mov
out
movsb
mov
sbb
or
push
pop
movsl
cmp
and
lods
xchg
test
jg
imul
sarl
cmpsb
out
dec
add
sub
aam
repz
xchg
jle
sti
out
dec
xchg
fsubrs
push
sbb
arpl
jg
pusha
jae
push
flds
cmp
aam
dec
or
mov
leave
pop
aaa
mov
jo
test
inc
jge
cmc
jmp
jl
imul
sbb
xchg
faddp
pop
adc
jp
xchg
jmp
jbe
xchg
fwait
test
cmc
fsubs
popf
mov
outsl
jno
lret
adc
xor
leave
pop
adc
and
push
add
mov
adc
cli
jmp
dec
xchg
rcrl
push
mov
shlb
push
xor
xor
add
insl
out
xor
pop
dec
and
push
in
xchg
into
fidivl
inc
add
insl
repnz
xchg
les
add
mov
inc
mov
decl
xchg
sbb
mov
std
adc
mov
test
xchg
mov
das
outsl
lock
push
xchg
je
lahf
dec
js
jns
cs
mov
addl
jecxz
mov
sub
or
or
adc
add
mov
xor
aaa
loop
jle
insl
mov
out
dec
out
jp
outsb
inc
cltd
sbb
jecxz
nop
pop
mov
lods
adc
ret
stos
into
jmp
xchg
jnp
insb
into
imul
pop
pop
dec
pop
es
je
xor
mov
fbstp
cmpsb
cmp
mov
call
popa
jbe
jle
or
test
je
cwtl
insb
fadd
in
sub
inc
nop
pop
adc
ret
add
loop
mov
adc
adc
add
int
mov
jae
dec
scas
aas
pop
cmp
pusha
and
fldenv
repz
sbb
push
imul
addr16
fs
std
mov
sti
test
sahf
mov
rcll
add
test
xchg
std
cmpsl
jge
fcmovb
and
or
popl
push
out
in
pusha
in
xor
cmp
ret
addb
fdiv
push
sbb
call
setbe
sbb
xchg
push
push
in
ret
lret
lds
lods
dec
bound
lods
sub
fildll
sti
les
sub
pop
in
xchg
sbb
mov
sbb
aaa
mov
cmp
pop
imul
iret
sub
xchg
shll
jae
add
pop
push
bound
xor
ljmp
pop
nop
int
loop
test
es
clc
cld
leave
hlt
test
loopne
paddq
out
fnstenv
dec
xchg
fsubs
enter
adc
cltd
jo
inc
mov
sbb
adc
add
stos
bound
mov
add
push
mov
mov
mov
xchg
bound
mov
dec
ja
inc
xor
int3
add
mulb
jecxz
lds
mov
mov
ret
into
insb
movsb
push
sbb
int3
fbld
or
sbb
inc
test
push
repnz
mov
je
xchg
mov
lret
in
add
in
dec
pop
cmp
or
loop
scas
ret
and
push
les
cmp
ljmp
and
pusha
adc
or
js
xor
mov
ss
pop
fidivrs
sbb
cmpsb
dec
pop
es
test
les
dec
dec
push
push
jne
dec
jo
cmp
dec
xchg
xor
lock
mov
xor
xor
inc
mov
inc
inc
mov
and
mov
mov
lcall
sbb
popa
divl
push
out
aad
in
xchg
sub
adc
rorl
xor
lcall
cs
cltd
outsl
xor
test
xchg
addb
add
imul
imul
std
mov
xchg
pusha
sti
aam
sbb
test
cmpsb
add
enter
loopne
fisttpll
ret
xchg
imul
loope
xlat
stos
xor
mov
shl
pop
aaa
sti
daa
mov
icebp
adc
pop
inc
mov
insb
addr16
push
shll
call
mov
shll
das
and
xor
sub
jge
inc
adc
fistl
bound
mov
imul
in
movsb
lods
sub
insl
mov
sbb
add
cld
lret
xor
sbbl
aaa
mov
xchg
ss
adcl
test
arpl
and
movsl
cmp
ja
xor
xrelease
or
movsl
push
mov
mov
xchg
push
lods
mov
dec
gs
mov
adc
sbb
mov
ret
inc
es
dec
pop
stos
cmp
inc
push
xchg
xor
dec
ljmp
movsb
pop
jno
jmp
cmp
divb
cltd
int3
xorl
mov
mov
xchg
xchg
fucomp
jmp
bound
test
fstl
push
nop
lcall
lea
push
xor
pop
jge
ds
pusha
mov
sbb
jmp
push
inc
or
hlt
lret
loopne
mov
jg
ja
add
pushf
push
push
xor
inc
pusha
xor
mov
add
leave
mov
sub
lret
fcmovbe
loop
negb
pop
loop
sbb
leave
mov
mov
adc
es
pop
stc
shlb
lea
arpl
sub
mov
lahf
push
repnz
hlt
test
xor
cmp
addl
xchg
xchg
push
icebp
mov
aas
neg
lret
sti
lahf
fldl
hlt
sbb
test
push
mov
and
jle
pop
fstpl
add
sbb
jnp
lret
loop
mov
pop
add
popa
das
jg
mov
jl
dec
jno
lahf
sub
mov
mov
mov
cmp
stos
in
push
or
jg
xor
jb
mov
js
ss
std
cmp
les
cmp
sbb
dec
add
pop
sbb
and
aas
inc
or
cltd
fwait
and
add
sub
repz
into
dec
adc
flds
enter
inc
leave
bound
or
and
cmp
push
ja
inc
aas
mov
or
addb
fnstsw
dec
pop
mov
pusha
mov
sbbl
sub
repnz
push
pop
pop
aas
cli
add
out
sub
lret
int
cld
arpl
jle
cmp
adc
push
fwait
lea
addr16
and
add
insb
das
push
xchg
mov
movsb
or
das
xchg
aas
jmp
sbb
mov
ret
mov
dec
fs
pop
negl
mov
mov
je
jl
lcall
inc
mov
loope
je
sbb
jg
xor
sarb
cmp
xlat
pop
in
sbb
out
leave
xchg
stc
push
mov
lcall
or
fsubs
es
test
dec
cmp
cmp
pop
pop
int3
neg
loopne
push
jns
mov
dec
das
or
lds
mov
xor
psrlq
insb
nop
sbb
xor
xlat
cld
xchg
idiv
lock
or
jge
push
and
in
adc
sets
pusha
push
ficomps
pop
xchg
adc
nop
pop
add
cmp
adc
nop
and
or
mov
movsb
js
xchg
pop
into
leave
je
je
stos
sub
fwait
stos
mov
push
or
cmpsl
xchg
dec
pop
jge
mov
das
sub
ds
adc
xor
fbstp
add
xchg
ret
mov
test
shrb
sub
test
xchg
adc
mov
add
mov
jle
cmp
add
adc
mov
fdivrl
rcrb
xor
arpl
mov
xchg
lcall
xchg
int
daa
test
dec
es
add
sbb
lahf
jmp
pop
xchg
shll
int3
lar
mov
sbb
mov
xor
inc
push
loopne
inc
dec
mov
int3
pop
lods
ror
sti
xlat
mov
das
jae
jo
pop
pop
or
dec
mov
mov
lea
push
shr
xchg
gs
mov
lret
cmp
add
jecxz
imul
xor
pop
call
out
flds
outsl
jae
xor
lds
mov
test
adc
mov
imul
test
and
pushl
hlt
pop
sahf
mov
or
xchg
int3
jecxz
dec
lcall
clc
shlb
divl
pop
fsubs
sbb
sub
xor
aam
fisubrs
lcall
inc
push
bsr
lahf
push
xor
aad
adc
and
push
in
repz
fsubrp
mov
and
xor
push
or
outsl
iret
xlat
inc
popa
xor
sub
inc
push
fldl
testl
xor
cld
in
sahf
pusha
jp
ret
adc
fs
jle
sbb
jo
jnp
sub
add
or
stos
outsl
sub
jecxz
leave
xor
movb
imul
pop
mov
inc
push
mov
mov
or
pop
xor
jle
sub
push
lods
int
pop
sbb
cmp
or
adc
sti
cli
mov
mov
xlat
ljmp
dec
pop
orb
xchg
add
cmp
push
lahf
mov
out
negb
fists
stos
das
add
out
adc
push
mov
adc
in
jb
or
pushf
add
clc
xchg
repnz
push
or
ret
add
ljmp
popa
fistpll
xchg
in
fwait
lods
xchg
pop
cld
test
loopne
inc
int3
mov
lods
pop
mov
mov
jnp
and
mov
and
push
loop
pop
cmpsb
mov
int
lock
dec
sbb
adc
mov
int
mov
or
out
mov
movsl
loope
mov
add
mov
add
add
mov
inc
hlt
push
mov
loop
adc
mov
sahf
gs
ficompl
cmpsb
xchg
out
lea
jo
push
adc
and
push
inc
outsb
int
rcl
mov
adc
sbb
sub
mov
sbb
movsb
popf
add
push
push
xor
sbb
popa
lret
mov
xor
or
xchg
rcl
mov
mov
jne
push
push
mov
clc
lock
sub
sub
cwtl
push
add
fcoms
jl
repz
pop
std
jns
mov
das
adc
and
aas
imul
popf
pop
pop
in
push
push
jbe
add
imul
mov
ljmp
xor
js
lods
and
popf
incl
test
jnp
mov
into
mov
cmpsb
xchg
int
idivb
mov
mov
jno
hlt
notl
xor
inc
aaa
push
jo
mov
mov
dec
jmp
pop
xlat
arpl
cmp
cmpl
push
push
out
inc
loope
dec
or
mov
fwait
push
push
inc
sahf
inc
xor
addr16
pop
push
mov
adc
adc
jle
subb
dec
inc
fs
push
xchg
jnp
dec
rolb
arpl
test
jb
or
xchg
loopne
scas
inc
sbb
mov
add
mov
mov
pop
jl
adc
iret
mov
lcall
pushf
outsl
sub
ret
aas
xor
push
mov
push
scas
sub
adc
and
into
mov
jbe
insl
or
sub
fucomp
aaa
insl
mov
shrl
ss
fsubrl
mov
es
pop
add
jnp
dec
in
mov
inc
fmuls
sub
xchg
sub
mov
jnp
sub
insb
out
push
cmp
sbb
rolb
int3
and
aam
frstor
ds
adc
outsb
in
lret
add
shl
aam
lods
cli
ja
rorb
xchg
adc
insb
aaa
push
mov
pop
jnp
test
popa
pushf
xchg
and
aam
fists
dec
jnp
in
pop
or
cmp
sbb
lahf
fsub
fmuls
stos
push
cltd
lret
sub
inc
pop
int
imul
int3
mulps
push
sbb
rclb
adc
icebp
xor
mov
add
dec
pop
ja
icebp
repz
call
sbb
imul
mov
mov
loope
mov
jae
jmp
cmc
aaa
add
pop
cmc
inc
push
push
pop
jbe
mov
cmp
cs
into
roll
sub
jb
dec
lret
jecxz
in
iret
adc
aaa
pop
dec
out
outsb
cld
sub
mov
nop
sub
push
pop
aaa
sub
sub
xor
and
mov
pop
cwtl
inc
rolb
adc
inc
adc
addb
mov
sub
jno
je
mov
add
xor
cltd
jns
inc
dec
ss
fs
stos
sub
mov
arpl
pop
mov
push
shlb
mov
ss
push
dec
jle
jb
mov
imul
mov
daa
adc
cli
jl
ds
or
jno
cld
adc
dec
cltd
lea
sbb
addr16
push
in
mov
mov
in
pop
nop
xchg
add
jle
push
mov
lea
cmp
lret
int3
mov
mov
and
das
fcmovnbe
pop
xchg
dec
lds
xchg
cltd
pusha
pop
rcrb
mull
call
push
movsb
xor
jmp
arpl
daa
push
shrl
cmp
push
sbb
mov
push
push
shrb
icebp
fisubrs
pop
add
xor
cmp
cwtl
mov
mov
mov
mov
scas
xchg
pop
jo
les
scas
fldl
jle
insb
cmp
addr16
xor
dec
pop
dec
mov
stc
add
scas
xor
push
or
inc
je
xlat
nop
push
fwait
mov
xchg
push
mov
lds
outsb
rcrl
enter
lock
stos
or
dec
daa
call
sbb
loopne
repz
insl
lock
ja
mov
movb
cmpsb
xchg
ret
and
shl
dec
xor
aaa
jle
frstor
adc
mov
jns
inc
rolb
into
jp
add
mov
shlb
inc
rclb
dec
ss
in
sbb
cmp
sub
mov
popf
dec
call
shll
mov
dec
or
jecxz
sub
stc
and
ds
lcall
inc
inc
shrb
jns
mov
rcll
pop
shrl
cmc
jp
mov
mov
pop
ja
or
loope
xor
xchg
popa
outsl
xchg
or
add
pop
add
cwtl
push
or
ret
inc
inc
add
cmc
std
pop
test
dec
mov
movsl
out
push
add
aam
pushf
dec
add
xchg
loopne
xchg
bnd
les
cmp
dec
sub
in
mov
push
cli
mov
push
mov
movsl
mov
out
dec
sub
jecxz
lret
inc
mov
xlat
mov
cmp
aaa
adc
jl
xchg
dec
xor
cmp
xchg
popf
and
fisubrl
dec
das
scas
data16
imul
push
jno
cli
fdivrs
sbb
inc
jle
arpl
push
xor
movsb
test
inc
mov
or
mov
sbb
mov
cmp
sbb
jbe
mov
push
xchg
jl
repz
sub
outsb
and
mov
cwtl
push
mov
lret
movsl
ds
rcrl
mov
mov
in
mov
push
push
leave
xor
and
adc
xor
mov
insl
sub
jae
jnp
sub
cmp
cmp
sbbb
mov
fdivs
je
xchg
stos
fs
loopne
je
cld
out
xchg
in
movsb
sub
icebp
outsb
mov
cltd
mov
ljmp
xor
test
ljmp
jnp
mov
xor
add
mov
xor
and
adc
out
add
aam
pop
push
pusha
ja
shr
inc
les
fucomip
clc
xor
aad
and
mov
test
sub
cmc
pop
jle
jmp
das
daa
lock
inc
push
das
das
sar
mov
icebp
shrb
daa
push
rcll
sbb
repnz
mov
loopne
cmp
lods
add
dec
cmpsl
movsb
andl
ljmp
icebp
and
add
sub
push
rcll
aad
mov
out
std
and
xchg
pop
add
jnp
dec
xchg
fists
aam
cmp
xchg
pop
cmp
jbe
jnp
popf
cmpsl
imul
lahf
sub
jge
jp
and
xlat
imul
iret
leave
addr16
dec
imul
test
jbe
in
daa
pop
mov
jb
jmp
fnstsw
inc
addb
pop
and
lcall
mov
inc
pushf
sarl
pop
mov
fsts
mov
jge
mov
fiadds
sar
xchg
jmp
in
cmp
xchg
aam
shld
mov
add
dec
fnstenv
xor
inc
stc
lcall
arpl
or
outsl
mov
imul
dec
insb
mov
inc
subl
call
andl
inc
push
shlb
jge
lock
int3
inc
ds
stos
xchg
mov
inc
repnz
cwtl
adc
sbb
mov
movsl
cltd
mov
adc
push
rcr
adc
sbb
pop
cmpl
push
sbb
into
aam
jmp
pop
ret
ljmp
dec
mov
mov
sahf
lods
add
push
movsl
fiaddl
mov
imul
push
push
aad
dec
or
test
scas
push
test
xchg
add
aam
fs
cmp
ja
lcall
repnz
jno
lcall
mov
icebp
rclb
dec
in
sbb
cmp
mov
mov
or
es
ret
inc
loop
addr16
jno
leave
test
scas
rorl
inc
lahf
cmp
sbb
jmp
pusha
mov
inc
ds
scas
in
sub
xchg
sub
les
fs
imul
fisubrl
jae
jecxz
dec
add
inc
cmp
mov
movsb
lds
sbb
lea
fisttpl
xor
add
outsb
xor
popf
nop
pop
cmp
mov
pop
leave
cltd
adcl
ret
test
imul
mov
lods
mov
out
leave
push
push
aaa
pop
mov
push
and
adc
icebp
sub
test
fists
mov
jnp
xor
push
push
cmp
pop
jns
ja
pushf
scas
clc
xor
cmpl
adc
xchg
add
jl
arpl
jo
xchg
jp
roll
rolb
mov
movsb
ret
add
rclb
sahf
add
cli
mov
xchg
push
movsb
ds
adc
pop
ret
leave
push
lods
enter
push
pushf
add
pop
xchg
pusha
add
push
push
jge
outsb
dec
leave
std
pop
sub
movsb
dec
sub
mov
leave
rcl
mov
sbb
fwait
xor
and
out
je
xor
or
xchg
movsl
mov
and
mov
push
mov
xor
xchg
rolb
insl
sti
fidivs
movsl
inc
adc
add
fildl
mov
stos
in
js
mov
loopne
push
mov
mov
jae
filds
add
or
ja
leave
inc
imul
push
xchg
fnsave
daa
push
shr
and
push
hlt
pop
sbb
dec
ret
jne
outsb
fdivp
mov
cmpsl
shlb
out
xchg
ja
mov
nop
inc
fcoml
push
in
sbb
inc
cli
and
aaa
ss
adc
xor
dec
daa
leave
aaa
js
nop
dec
push
fnstcw
ja
fisubl
add
movsb
mov
jge
jb
add
sub
adc
adc
dec
dec
fldcw
std
imul
cmp
sbbl
xchg
xor
and
sbb
jo
aas
jbe
lods
test
xchg
mov
fs
cmp
sub
push
pusha
imul
in
std
rorb
dec
test
icebp
adcl
dec
push
mov
into
push
mov
leave
data16
dec
pop
or
inc
dec
enter
das
dec
xor
jno
scas
insl
cmp
mov
std
cmpsl
cmpsb
icebp
inc
adc
imul
cld
pop
jns
jns
pop
lds
xor
xchg
andl
jne
stos
mov
iret
insl
ss
push
and
xorl
jb
sbbl
or
cmpl
ljmp
mov
push
rorb
pop
dec
out
ljmp
adc
or
loope
lahf
loope
xchg
jno
mov
rolb
inc
shll
dec
neg
push
cmpsb
into
repnz
ljmp
ss
mov
dec
movsl
mov
hlt
xchg
minps
push
cmp
repz
xchg
mov
mov
jge
ret
in
stos
incb
lds
xor
outsl
movl
mov
inc
rorb
fidivs
adc
mov
jns
movsb
lahf
imul
fwait
xchg
jge
in
push
sbb
cmp
adc
xor
jae
movsb
dec
mov
jmp
sbb
xchg
lret
inc
inc
pop
movsl
pop
arpl
pop
and
iret
cmp
dec
jne
aam
mov
jmp
mov
pop
fs
lds
or
lea
mov
xor
xchg
movsbl
sub
add
je
lods
sub
ds
mov
popf
sbb
aas
sbb
jmp
cmp
jno
pop
repnz
pop
dec
mov
sarl
cmp
ficoml
rcl
fstl
sub
shll
xchg
push
push
lret
testl
dec
fsubs
fsts
pop
pop
add
or
je
mov
push
insl
inc
mov
test
mov
sub
xor
lock
xchg
cs
jns
xchg
push
pop
pushf
insb
push
push
fsubrl
clc
xchg
shl
rorl
mov
mull
add
std
or
mov
movb
pop
fsts
call
push
out
jbe
insb
or
mov
sahf
sub
push
pop
scas
adc
imulb
and
inc
clc
stos
adc
movsb
lock
cmp
arpl
rorl
movsb
std
in
shl
cld
xchg
insl
mov
pop
mov
push
sbb
mov
call
outsb
stc
data16
aaa
enter
dec
dec
jg
and
cld
shll
jmp
xchg
mov
in
xchg
pop
add
cwtl
cwtl
std
mov
pop
fisubs
bound
push
inc
or
cmp
ret
xchg
das
push
addr16
fld
push
cwtl
je
in
pop
inc
jno
xor
jbe
dec
sahf
mov
pop
sbb
test
or
adc
mov
rorb
mov
outsb
pop
dec
ss
sub
sbb
iret
mov
sbb
sbb
popf
movsb
or
inc
mov
mov
fs
jp
stos
scas
outsb
ret
push
lcall
jmp
dec
xchg
jmp
repnz
mov
iret
outsl
add
cmp
scas
adc
nop
cmp
mov
mov
cmp
fstpt
ret
dec
and
filds
std
cld
jmp
mov
dec
mov
lret
fistps
pop
jns
sarb
ret
pop
inc
mov
xchg
sbb
mov
lahf
mov
mov
in
idivl
gs
fsubp
cmp
ss
push
popf
add
push
movsl
and
inc
std
add
insb
in
xor
ss
movl
in
lea
sub
test
insl
mov
mov
lods
dec
outsb
jge
fcompl
push
add
iret
in
ja
shrl
scas
stos
mov
inc
add
insb
jle
test
rcll
aaa
je
pop
inc
push
stc
add
nop
je
outsl
cmp
xor
aam
inc
sub
sub
sub
mov
inc
mov
pop
xor
jns
sbb
lods
inc
shrl
jbe
add
enter
in
adc
mov
test
test
jb
testb
rcrb
test
xor
mov
dec
xchg
ds
dec
xchg
stc
jmp
push
ret
aas
sbb
push
xchg
adc
jmp
gs
insb
xchg
mov
jae
jnp
xchg
leave
jno
popf
sub
xlat
inc
jp
sub
daa
sub
test
inc
rcr
dec
cmpl
xchg
add
enter
popa
arpl
jmp
mov
ja
dec
cltd
and
pop
stos
mov
pop
outsl
pop
inc
insl
scas
int
cs
mov
nop
xchg
jae
popf
je
pop
sar
and
and
cld
dec
mov
ret
sarb
mov
test
pop
idivb
push
test
jle
pop
pop
pushf
rclb
jmp
xor
pop
and
stos
pop
ret
js
push
cmc
sub
mov
sbb
call
jb
outsl
in
add
lcall
jmp
shlb
jae
mov
stc
adc
hlt
out
scas
xchg
lock
std
test
mov
cld
xchg
lahf
and
jmp
arpl
or
push
mov
enter
jge
dec
in
jo
sub
mov
in
faddl
lods
jl
or
call
mov
and
pop
cs
sahf
scas
test
dec
jb
mov
jns
adc
daa
xchg
imull
aaa
add
cwtl
stos
sbb
adc
nop
mov
sbb
add
xlat
insb
sub
xor
cmp
pop
movsb
dec
outsl
bound
sbb
push
push
or
dec
test
fisubs
sarb
aad
sbb
fiadds
fldenv
out
mov
push
cmp
pushf
jge
ss
mov
push
imul
outsl
xor
inc
xor
loope
test
xchg
mov
jp
push
addl
xor
adc
test
push
xor
pop
cltd
mov
popa
jne
push
mov
outsl
mov
jmp
jo
repnz
jmp
lds
xor
pushf
cmp
pop
push
sub
push
lcall
and
and
sbb
cmp
fwait
sub
mov
pusha
mov
pop
and
mov
repz
cmp
sbb
lock
xchg
xor
aas
jno
cltd
lea
setp
dec
jbe
xrelease
cmovbe
jg
andb
les
fiaddl
pop
jnp
mov
pop
and
push
sub
gs
fcomp
lea
clc
rcrb
in
stos
pop
scas
shll
scas
push
gs
pop
mov
jb
push
fwait
aam
mov
dec
xchg
sbb
sub
mov
gs
testb
cmp
jne
arpl
sbb
cmpsb
cmc
pop
sbb
movsl
jp
rcll
dec
dec
mov
ss
fxch
ja
pop
in
pop
es
shl
mov
adcl
pop
xchg
or
loop
popf
adc
jle
cmpsb
fidivl
pop
dec
movl
cmpsl
ja
pop
mov
add
ja
add
xchg
sub
xchg
loop
xchg
inc
fdivrs
jg
jl
repz
fmuls
push
cwtl
cmpsb
in
subl
mov
rcrl
sbb
dec
cmp
push
cmp
jno
pop
sbb
mov
cmp
push
mov
jno
push
loopne
add
mov
dec
and
sbb
fdivl
mov
mov
movsb
out
mov
shll
dec
rol
pushf
test
xchg
and
in
scas
int3
aam
jnp
pop
add
inc
mov
rcl
pop
cmp
sbb
fs
leave
mov
test
inc
mov
outsl
popa
sahf
out
call
or
dec
fld
iret
fcompl
loopne
in
into
or
adc
xchg
fadd
xchg
into
jmp
leave
mov
into
xchg
adc
dec
jge
mov
ljmp
mov
add
lea
mov
daa
dec
push
dec
adc
icebp
jnp
sbb
push
mov
ret
lret
test
xchg
fwait
mov
stc
xchg
cmpsb
insl
aam
push
jecxz
stos
sbb
test
xchg
xchg
loop
adc
movsb
jge
idivb
repnz
sub
rcrw
call
stc
sub
stc
test
xchg
and
adc
mov
mov
lret
push
mov
xchg
mov
sub
mov
adcl
sarl
stos
sub
std
dec
ds
sahf
push
mov
lock
push
and
pop
pop
js
inc
mov
cmpsb
mov
cld
inc
into
jle
cmpl
sub
inc
in
pop
cwtl
jle
repnz
push
inc
push
xor
pop
lret
enter
xchg
mov
mov
enter
scas
pop
aam
cs
dec
push
add
pop
test
add
cmc
jge
stos
xchg
inc
adc
rorl
mov
xchg
xor
pop
mov
mov
push
das
mov
loopne
mov
cmp
lret
test
mov
or
sbb
fcoml
push
mov
mov
dec
lret
stc
sarl
push
inc
cli
or
fs
insb
inc
repz
sbb
imul
cs
cmpsl
or
mov
out
lahf
int
jecxz
addr16
shll
xchg
out
add
shlb
mov
inc
dec
ja
cwtl
sbb
imul
outsl
sub
mov
add
jno
xchg
daa
sbb
lock
das
inc
loopne
sub
or
test
mov
inc
lret
lock
or
jo
add
sub
dec
and
test
mov
sahf
scas
add
cmp
pop
jmp
inc
xor
cmovs
mov
mov
xor
out
sbb
cmp
jbe
pop
sarl
xchg
daa
cltd
sub
push
aad
inc
stos
xor
push
sub
jno
or
jp
mov
xchg
arpl
aaa
jnp
lea
adc
mov
ja
cli
xchg
ds
loope
adc
and
es
dec
cmp
outsl
nop
ljmp
fs
pop
in
cmpsb
es
mov
repz
and
cmp
cli
dec
loop
sub
inc
xor
mov
in
test
arpl
mov
and
add
dec
in
sub
arpl
shrb
jne
idiv
scas
outsl
sbbb
dec
fisttpl
xor
in
push
test
push
inc
pop
xor
inc
cli
or
dec
sbbb
inc
add
cmc
mov
sahf
sbb
out
xchg
push
adcb
dec
test
dec
sub
repnz
sti
sub
les
int
pop
or
sub
add
jns
sahf
and
sbb
inc
les
cmp
or
inc
out
inc
adc
in
jae
xchg
insl
std
jbe
xlat
mov
imul
cld
sti
add
imul
xchg
bswap
lods
xlat
mov
data16
pop
pop
adc
jl
ficoml
push
mov
xchg
rep
mov
ret
inc
cmp
jae
lods
imul
fwait
out
pop
add
stos
scas
orl
xchg
jge
clc
out
in
ja
xor
sub
and
mov
mov
inc
xchg
lock
fidivrs
xchg
hlt
mov
inc
pop
and
insl
push
xchg
push
pop
pop
fisttps
sahf
lock
jns
mov
pop
ljmp
jns
std
xor
pushf
adc
ja
cmp
popa
xor
cs
movsl
in
mov
nop
xchg
mov
add
popa
stos
dec
bound
xlat
sbb
lea
fmul
test
sbb
jge
imul
fcoml
and
jns
pop
cltd
mov
sub
cmp
xor
idivb
inc
sbb
fistpll
sbb
bound
lods
cmp
cmp
jge
mov
xor
aas
cmc
and
push
pusha
lret
xchg
repz
cmp
sbbb
cwtl
adc
push
pop
push
jle
push
addl
jbe
and
push
icebp
pop
jne
inc
push
insb
jne
or
pusha
pop
mov
pop
jmp
out
in
dec
imulb
cltd
mov
mov
sbb
mov
jecxz
adc
in
movsb
inc
and
xchg
scas
lahf
mov
data16
adcb
ds
int3
cmp
js
inc
xor
cmp
mov
adc
mov
mov
push
in
mov
mov
dec
push
or
adc
xchg
mov
jmp
push
hlt
adc
add
dec
push
in
fldl
mov
popf
std
dec
dec
push
aaa
rorl
lea
push
xorl
out
mov
in
mov
std
mov
or
mov
add
pop
mov
mov
pop
or
imul
mov
lods
shl
jb
lods
repz
mov
shlb
jp
xlat
movsl
sbb
iret
xor
or
sbb
dec
inc
sub
or
mov
iret
mov
sahf
cwtl
sbb
mov
and
mov
inc
loopne
cli
mull
int
add
stos
push
jp
mov
jl
mov
shll
jno
and
adc
push
push
not
in
sbb
ret
sbb
stos
insb
les
ret
hlt
repnz
jmp
xchg
outsl
mov
gs
mov
xchg
mov
xlat
jl
push
dec
push
and
imul
or
xor
fisubs
imul
adc
daa
lds
jns
and
ret
fs
xchg
cmp
inc
fs
jnp
jp
or
aas
out
xor
rcrb
lods
jge
sbb
fisubs
mov
fdivl
xor
adc
jl
jae
lret
adc
xchg
mov
imul
lret
dec
and
pop
jne
xchg
xchg
outsb
andb
mov
ret
add
xchg
in
mov
adc
or
arpl
rorb
into
push
sbb
mov
pushf
pop
repz
pushf
push
mov
aam
insb
inc
inc
xchg
xor
ret
and
xor
cmp
insl
sbb
and
mov
stc
outsl
stos
mov
stos
outsb
inc
mov
clc
mov
testl
ficompl
sbb
inc
jb
test
jbe
cmp
cmp
xor
dec
xor
dec
js
ret
out
adc
adc
jns
mov
or
mov
scas
ret
jo
std
sub
push
sbb
pushf
xchg
add
mov
arpl
xchg
jp
push
mov
pop
and
out
les
or
mov
push
mov
test
ret
mov
cmp
fmull
repnz
inc
push
js
pop
jae
int3
and
jns
clc
dec
pop
jle
mov
xor
int
je
jmp
popl
and
xchg
stc
ds
ljmp
and
clc
and
not
cmp
mov
les
push
add
vmovaps
adc
or
pop
sub
sbb
in
stc
jnp
cmc
scas
addr16
leave
and
jae
mov
or
pop
cmpsb
pop
in
insb
fs
aas
mov
dec
pop
xchg
or
pop
jns
xchg
leave
mov
add
imul
add
mull
fmull
adc
jg
xor
out
rol
xchg
sub
pop
pop
pop
test
sbbb
std
imul
idivb
xchg
pop
ror
pushf
rcrb
add
dec
and
and
dec
add
inc
aad
int
inc
cmpsb
mov
mov
mov
jne
dec
cli
fsubr
rcrb
insl
adc
mov
ljmp
js
sub
jno
pop
cmp
xor
jmp
dec
hlt
add
push
dec
movsl
sti
adc
and
orl
inc
dec
sub
mov
and
mov
in
shrl
ret
out
jb
inc
imul
cli
push
aad
or
pop
jmp
xchg
push
lods
ja
and
in
enter
clc
pop
fistpl
pop
fcoml
shr
insb
jp
pop
loope
pop
out
jb
mov
aas
mov
sbb
push
push
dec
cmpsl
mov
je
push
std
sbb
pusha
in
insb
cli
jge
insl
sub
std
sub
rcll
pop
aaa
add
xor
repz
mov
in
neg
pop
jl
popa
lods
inc
loopne
movsl
loop
repz
mov
dec
pusha
sbb
mov
maxps
leave
add
stos
jne
or
pusha
ljmp
sub
jle
push
cmp
xor
sub
mov
inc
and
mov
sahf
clc
popf
fcmovu
ja
cwtl
mov
sbb
addr16
lock
jl
fwait
loopne
outsl
inc
push
inc
xchg
arpl
into
push
mov
out
fisttpll
in
adc
test
cmp
pop
add
das
in
adc
cmc
outsb
push
in
into
sub
movsb
push
mov
repnz
lds
mov
mov
inc
sbb
les
push
fs
xor
lret
cmp
js
cmp
adc
mov
pop
jo
ljmp
ret
les
enter
data16
aad
mov
mov
divb
ret
test
popf
or
cmp
dec
pop
mov
xchg
mov
addb
mov
sbb
gs
inc
sbb
sbb
loop
sub
bound
xchg
in
adc
lret
sub
xor
dec
fisubs
jecxz
add
aaa
xor
fiadds
gs
mov
mov
inc
inc
dec
inc
test
fs
pushf
mov
and
cmp
xor
mov
mov
ficompl
pushf
mov
into
jno
jmp
lods
push
repz
out
pop
icebp
dec
and
ds
out
mov
stos
lret
adc
sbb
pop
ljmp
ret
aad
mov
stos
idivb
jae
int
xor
cmp
jl
pop
mov
pop
adc
adc
imul
sbb
out
inc
cli
rcrb
insb
das
mov
inc
sbb
das
popf
movb
icebp
cld
mov
or
scas
jle
int3
mov
ds
outsl
jge
lret
dec
ficoml
lret
add
mov
mov
xchg
test
lret
xor
inc
dec
cmp
scas
ljmp
insl
adc
cs
jmp
sub
nop
xchg
and
insl
pop
out
les
out
mov
and
cmpsb
push
loop
mov
and
ret
cmp
frstor
daa
hlt
push
cmpl
mov
xchg
adc
sub
cmp
add
or
and
popf
lcall
movsb
mov
mov
test
imul
mov
cmp
fstl
lahf
daa
in
add
nop
in
jl
mov
jo
add
nop
or
mov
cmp
lock
out
add
inc
in
rorl
popa
mov
fdiv
sbb
rcll
adc
xor
jns
stos
or
mov
sub
insl
or
sub
in
add
pusha
and
mov
push
imul
ds
addr16
sbb
sub
xchg
sbb
rcrl
adc
int
nop
and
xlat
sub
loopne
dec
in
jae
pop
and
ds
out
loope
aad
cld
xchg
jp
adc
dec
inc
xor
xor
push
in
jg
das
and
leave
movsl
mov
adc
adc
xchg
sahf
sti
aam
jp
xchg
inc
lcall
mov
pop
or
mov
jno
add
arpl
or
add
xchg
popf
andl
mov
sub
push
data16
cmp
pop
xchg
lea
mov
das
imull
or
mov
sub
adc
mov
jge
int
out
aam
out
jnp
mov
mov
xchg
mov
mov
add
xchg
mov
jg
mulb
js
popa
adc
ja
lea
pop
mov
popa
lahf
sub
add
call
sbb
dec
fwait
cmp
divb
mov
shll
loope
loop
push
cmpl
lahf
mov
sahf
and
inc
and
outsb
inc
adcb
mov
loope
pop
das
pop
jb
mov
and
fcmovbe
pop
enter
mov
pusha
mov
clc
xchg
ja
sub
hlt
mov
mov
jb
xchg
mov
jp
fstp
cmp
xor
push
xchg
insl
cmp
adc
stc
and
add
rcrb
fstpl
test
and
mul
shlb
sub
or
xchg
xor
sbbl
or
and
inc
arpl
aam
lods
mov
in
mov
dec
iret
push
shlb
sub
aad
data16
dec
test
push
sti
cmp
sbb
aad
push
push
xchg
jge
daa
push
and
pop
je
xlat
or
pop
cmp
pop
or
mov
imul
shlb
std
mov
cltd
xor
ja
push
inc
ret
repz
mov
mov
clc
dec
jecxz
sbb
pop
es
dec
dec
push
push
jns
pop
lods
dec
mov
mov
pop
sub
testl
in
stc
pusha
add
mov
xchg
es
dec
adcb
xor
push
pop
vmovupd
dec
push
add
xor
pop
sbbl
mov
insb
std
mov
pop
ret
push
fistpl
xchg
xchg
pop
pop
adc
cli
imul
mov
adc
mov
roll
fildll
inc
sub
adc
dec
mov
scas
pop
mov
popl
pop
and
in
test
inc
inc
pop
mov
inc
xchg
push
dec
pop
icebp
pop
push
push
push
dec
dec
in
cwtl
cmp
out
or
push
jmp
xlat
pop
test
lret
mov
adcl
mov
xchg
lret
sbb
lahf
xchg
pop
add
test
ljmp
or
mov
push
pop
movsl
push
push
dec
enter
dec
jg
insb
fistps
inc
iret
adc
mov
aas
pop
push
in
lahf
pop
sahf
pusha
add
xchg
cmp
mov
mov
test
inc
jmp
inc
int3
into
dec
inc
data16
xor
adc
scas
xchg
add
mov
jo
andl
or
cltd
pop
cmp
mov
push
jge
insb
xor
and
dec
add
inc
jnp
out
push
mov
push
mulb
inc
add
insl
popf
rolb
push
push
cmp
lods
ud1
addr16
fwait
jae
pop
jnp
insl
cmp
rol
pop
shrl
rolb
enter
or
icebp
ret
movsb
inc
ficomps
insb
pop
push
adc
adc
dec
lock
aad
arpl
enter
fwait
cli
pop
je
ljmp
mov
je
or
loopne
call
test
cli
add
or
push
out
mov
jae
xor
add
leave
and
add
or
mov
ss
arpl
add
in
xchg
aam
push
jae
inc
nop
sahf
add
call
push
xlat
jmp
cmpsb
mov
xchg
pushf
and
pop
ds
xor
in
adc
notb
call
push
scas
jno
fs
data16
add
inc
test
out
mov
sbb
lods
fisttpl
mov
lods
je
add
enter
or
movb
scas
int3
dec
addr16
in
ficomps
cmpsb
dec
aam
bound
rcrl
push
or
push
mov
cwtl
cwtl
xchg
loope
inc
adc
sbbb
mov
and
sbbb
clc
xchg
add
inc
inc
push
aaa
std
jmp
adc
and
js
add
dec
adc
sbb
push
stc
out
xlat
sbb
push
xchg
mov
mov
cmp
sbb
arpl
sbbb
mov
mov
adc
lcall
test
dec
test
jmp
sbb
xor
in
cmp
jmp
pop
push
aam
mov
mov
sbb
add
cltd
xchg
sti
pop
std
mov
inc
nop
fcmovnb
mov
pop
xchg
repnz
xor
scas
fisubl
xorb
push
out
cmp
int3
sub
or
lods
pop
mov
out
mov
mov
mov
dec
jp
out
or
pop
mov
mov
fnstenv
dec
inc
out
fsubr
sub
loope
adc
add
sub
outsb
sub
imul
nop
push
ss
cmp
push
test
clc
mov
hlt
lret
pop
mov
mov
repz
fisubs
loope
in
xchg
dec
jb
push
cmp
pop
mov
pusha
mov
mov
jecxz
popf
das
jp
movl
ret
out
imul
push
aas
fs
cmp
pusha
das
pushf
xchg
inc
lock
inc
xchg
push
xchg
cmp
mov
aam
mov
fcomi
out
lret
or
movsl
dec
push
scas
bound
xchg
push
pop
loope
jnp
lret
loope
pop
xchg
or
jbe
pusha
mov
mov
addr16
jbe
shl
movsb
jbe
loopne
adc
cmp
mov
mov
test
ret
int3
test
in
lock
jmp
jno
ja
fcmovnb
inc
lods
sti
mov
jp
mov
mov
xchg
out
call
mov
loop
push
and
lret
les
lods
cmp
adc
pop
shl
sub
aas
icebp
mov
sbb
mov
repz
mov
lods
mov
daa
lea
lcall
stos
add
insl
inc
mov
rcrl
sbbb
adc
call
cmpsl
lds
div
test
xor
mov
outsl
fiaddl
add
lods
push
adc
dec
jae
sub
inc
adc
mov
pushf
or
shlb
rorl
mov
push
xchg
cmc
cmp
sub
in
cld
add
fadd
mov
ss
fcomps
scas
jl
pop
inc
rcr
xor
xor
xchg
mov
inc
dec
dec
mov
inc
fs
ret
xchg
loope
mov
lcall
push
inc
mov
fnstenv
cmc
cwtl
pusha
push
stc
test
icebp
aas
pop
adc
mov
mov
idivb
push
jno
push
popa
sbbb
xchg
es
mov
loope
and
stos
push
pop
xchg
sub
sbb
loop
add
push
sub
xchg
lahf
mov
pop
sbb
pmaxub
cltd
loop
repnz
and
xchg
imul
scas
jno
les
mov
push
movsb
imul
mov
iret
inc
lock
and
push
stos
dec
inc
pop
adc
sbb
imul
mov
aas
in
out
or
mov
enter
mov
inc
outsb
fsts
mov
insl
test
imul
mov
repz
popa
stc
mov
adc
sub
popa
imul
adc
leave
jo
icebp
pop
inc
mov
mov
mov
faddl
lret
push
mov
push
mov
ds
hlt
into
add
ret
or
push
fs
pushf
sahf
fwait
jmp
test
lcall
xchg
push
and
iret
stc
jmp
leave
sub
xor
dec
bound
test
jecxz
test
insb
push
gs
mov
jp
clc
in
xchg
data16
xchg
cld
fidivrl
cwtl
xchg
icebp
loope
mov
push
int3
push
cmp
pop
or
je
xchg
nop
outsb
xorl
mov
les
mov
je
in
push
mov
rorl
or
imul
jge
arpl
xchg
cmpsb
popa
cmp
les
push
sub
inc
cmp
inc
cld
pusha
inc
xor
add
mov
cmpsl
push
sarb
in
andl
stos
cmp
mov
and
xchg
xchg
xor
daa
sbb
or
fcomps
pusha
cmpsb
adc
lds
popa
popa
jle
loope
cwtl
and
and
jg
loop
test
rcr
hlt
or
rorb
fdivrp
nop
mov
add
clc
lods
mov
dec
lock
and
ror
sti
test
sti
pop
icebp
in
mov
mov
ret
scas
push
loope
mov
pushf
loop
push
mov
add
xor
mov
cmp
cld
clc
frstor
jne
loope
dec
and
cmp
sub
push
xchg
test
scas
dec
fildll
jg
popa
dec
xchg
gs
movsl
sub
aad
incb
loopne
sub
adc
pop
frstor
lods
int
scas
repz
and
lds
sarl
sahf
enterw
mov
mov
sub
jbe
and
lea
pushf
xchg
repnz
popf
cmp
cmpxchg
cmp
push
xor
xor
push
sub
repnz
sub
push
pop
repnz
push
lock
aad
xlat
data16
xchg
add
movsl
pop
repnz
lods
push
std
mov
imul
lahf
add
inc
icebp
jnp
nop
lods
aad
nop
mov
gs
fstl
ss
jge
pop
jno
test
movsl
sti
jmp
sub
dec
mov
jle
int3
and
xor
cwtl
cmp
cld
stc
movl
mov
in
add
mov
mov
out
int3
dec
lret
scas
das
jmp
pusha
cli
sti
fs
call
pop
push
sbb
subb
lahf
push
pop
or
cmp
or
xor
xchg
das
xchg
sti
inc
add
sub
mov
or
push
popl
push
xlat
daa
int3
repnz
and
movsl
cmp
adc
jg
outsb
popl
push
rolb
rol
push
ljmp
mov
lret
jns
fwait
aas
mov
sbb
fsubr
mov
cltd
mov
cmp
outsb
js
jecxz
mov
fcomp
mov
jp
sub
xor
sbb
out
nop
cmp
dec
jnp
push
jno
sub
sbb
sahf
push
mov
jmp
out
repz
and
adc
lock
dec
ljmp
lock
cmpb
pop
stos
dec
jp
mov
sbb
mov
fiadds
add
mov
jb
mov
cmp
inc
pop
es
mov
push
mov
dec
inc
sbb
pop
mov
aad
lods
aam
test
lret
or
pusha
mov
push
jns
loop
adc
sbb
pop
loope
inc
cmc
inc
aaa
mov
scas
lret
shl
fisubrs
mov
pop
in
xor
jmp
add
mulb
push
out
imul
inc
stc
rcl
and
sahf
jnp
pop
pop
jns
jp
cltd
in
orb
in
pop
ds
adc
push
icebp
shl
aam
mov
cmp
pop
mov
jae
pop
loope
pushf
xor
mov
mov
inc
mov
pop
ret
shrb
int3
xchg
cmpsb
jg
sub
and
mov
push
add
int3
or
nop
shl
mov
arpl
aas
and
scas
xchg
andb
cmpsl
dec
jge
out
rolb
lea
mov
adc
cld
out
cs
and
xchg
ret
js
dec
repz
inc
lahf
mov
pop
and
ja
mov
mov
and
rcr
or
daa
divl
lds
pop
push
xor
adcb
xor
sbb
mov
jmp
xor
pushl
jo
fwait
lock
mov
bound
rclb
popf
pop
mov
imul
jae
jne
or
shlb
xchg
or
mov
add
mov
pop
add
sbb
mov
cs
add
mov
add
arpl
rcll
mov
inc
push
push
out
popf
movsl
push
sbb
push
mov
mov
into
aam
movsb
jno
cmp
push
leave
sti
sbb
xchg
cmpsb
mov
sbb
enter
mov
jle
jno
incb
add
ss
mov
stos
fisubs
xchg
cmp
lcall
je,pn
mov
adc
popf
and
sbb
pushl
rcll
mov
add
dec
fcoms
jmp
lds
sub
pop
test
in
js
inc
sbb
push
iret
fdivrs
gs
subb
addb
pop
push
fisttpl
neg
sub
lods
xor
and
fstps
lods
repz
pushf
ret
dec
jle
sub
mov
add
int
aaa
nop
jnp
pop
adc
adc
add
fnstenv
stos
push
lock
sbb
xchg
cwtl
les
pop
jbe
lret
xlat
adc
leave
movzwl
stc
ss
push
je
mov
in
in
sbb
leave
dec
xchg
nop
mov
stos
add
cmp
ror
sub
rcll
jae
daa
inc
and
mov
es
jmp
jge
xor
inc
das
shl
nop
cmp
dec
xchg
into
cmp
mov
pop
mov
fcoml
push
xchg
mov
outsb
push
in
dec
add
sub
pop
repnz
lods
lods
xchg
fstpl
add
scas
push
xchg
push
fdivrp
xor
xor
dec
scas
insl
lea
inc
movsb
sbb
and
arpl
lahf
cmpsb
adc
loop
test
xchg
jp
push
add
push
js
xchg
call
xchg
ficomps
test
idivb
fistps
and
push
pop
or
sbb
jmp
scas
sbb
insb
xchg
ret
add
or
shrl
and
ret
lret
xchg
sbb
rolb
das
mov
not
jl
or
and
cmp
insl
mov
loop
aad
inc
hlt
pop
cmc
idiv
or
movsb
jl
mov
push
addb
int
inc
mov
fistps
mov
mov
hlt
pop
mov
stos
pop
mov
push
fmuls
movsl
lret
aad
push
pop
out
incb
enter
pop
push
pop
sub
stos
sub
int
mov
pushf
lods
sbb
adc
jbe
cmpsl
dec
loope
fstpl
frstor
insb
jbe
dec
add
lcall
mov
mov
inc
mov
fs
mov
aam
mov
pop
mov
lods
hlt
dec
jp
mov
test
ljmp
cli
imul
xor
js
ror
es
pop
pop
lea
jmp
insb
movsb
sbb
shl
push
sbb
sbb
jb
fs
and
sbb
enter
je
push
test
and
xchg
adc
and
sbb
inc
mov
cmp
jg
mov
cmp
movsl
xchg
ss
pop
sbb
sbb
jne
shrb
dec
stos
xchg
xchg
adc
adc
pop
jb
jb
aas
out
and
inc
mov
xchg
sub
lahf
sub
push
and
push
cmpsl
xlat
push
push
fwait
and
push
cmp
inc
add
add
push
icebp
sti
lcall
int
xchg
outsb
es
aam
xor
pop
stos
shr
ds
dec
int
mov
mov
scas
jle
cmc
mov
mov
add
pop
xchg
cmp
inc
mov
dec
lods
add
into
insb
add
inc
adc
add
dec
and
sbb
xchg
sbb
lahf
pop
jnp
push
jg
inc
mov
lods
cmp
dec
out
fidivs
cli
hlt
xchg
ret
fucom
mov
movsl
sub
movb
dec
or
fsubl
mov
mov
inc
pop
imul
pop
inc
mov
imul
sbb
cmp
lods
in
sbb
sbb
fildll
dec
jl
cmpsl
add
jmp
inc
inc
push
jecxz
es
out
mov
test
sahf
fs
xor
les
xor
in
adc
dec
mov
aas
xor
and
cmp
pop
mov
add
lods
popa
in
push
inc
push
jns
ret
cmpsl
mov
jnp
mov
lea
xor
imul
dec
and
aas
js
xchg
adcb
rcr
dec
or
movsb
imul
fcompl
scas
mov
cli
popf
stc
pop
pushf
insb
lea
aaa
adc
mov
incl
push
das
cltd
in
sub
push
negb
xchg
cmp
scas
or
mov
cmp
pushl
int3
ret
fwait
loopne
stos
scas
call
mov
sub
xor
pop
mov
dec
and
fsub
std
cltd
fadd
daa
mov
dec
outsb
fnstenv
enter
add
mov
inc
cld
xor
sub
hlt
nop
mov
jl
push
mov
dec
inc
sbb
vphaddubw
inc
push
sub
or
add
nop
xchg
imul
aas
cmpsb
repnz
hlt
cmp
add
add
sbb
mov
xorb
lds
mov
clc
ds
adc
xor
jb
add
add
out
mov
adc
push
push
add
nop
outsl
sub
out
roll
movswl
shll
ss
xor
leave
dec
push
cmpl
test
xorb
daa
cltd
xchg
rol
roll
outsb
xchg
pop
stos
dec
pop
negb
add
ret
xor
or
inc
repz
push
test
cmc
mov
shl
or
jo
scas
fimuls
sahf
xor
sub
sbb
xlat
sbb
mov
and
sbb
mov
ret
sub
mov
cltd
insb
in
xchg
pop
divl
pop
dec
bound
push
jns
rclb
xor
jp
test
mov
mov
cli
cwtl
mov
lret
fcmovnb
ret
mov
ds
mov
sbb
les
mov
mov
xchg
cltd
jl
insl
loop
pop
gs
int3
bnd
jg
add
mov
sub
xor
mov
daa
dec
mov
xor
mov
stc
inc
fsubr
cmpsl
fistpl
mov
test
cmp
in
lock
in
repz
bswap
sub
aad
jge
movsl
sub
sub
mov
adc
fcmove
dec
mov
add
xchg
ja
fcomps
call
pop
or
insb
jb
inc
lahf
or
in
jns
jae
imul
cmc
xchg
daa
dec
lock
aam
xor
jbe
inc
mov
mov
pop
fcomp
out
cmp
sub
and
hlt
fdivp
pop
popa
repz
and
lcall
xchg
sub
jl
inc
movsb
xchg
scas
and
adc
push
mov
fmul
push
outsl
jns
loopne
adc
out
jns
hlt
sub
mov
iret
sub
sahf
mov
ss
pop
popa
add
out
jb
dec
out
pop
pop
dec
jmp
jbe
inc
add
add
aas
les
xchg
inc
xor
pop
in
xchg
jnp
adc
insb
cmp
pushf
test
mov
xor
mov
scas
cmpsb
xor
push
pop
dec
outsl
shll
pop
fldt
imul
sub
popf
ja
inc
jl
sbb
in
notl
mov
stc
jbe
xchg
push
mov
inc
insl
int
inc
sub
fnstcw
js
ss
aaa
pop
push
push
sbbl
lods
sbb
test
jbe
outsb
cli
lahf
movsb
lods
xor
or
inc
fsubrl
or
pop
imul
daa
xchg
jo
mov
pop
mov
jns
lods
or
mov
or
push
fs
push
das
jp
hlt
in
pusha
xor
xchg
pop
jbe
jno
and
out
add
push
or
aad
mov
into
mov
outsb
xchg
xchg
inc
out
jl
lods
sub
hlt
push
xchg
pop
inc
push
fdivrp
psllq
jecxz
add
stos
ret
cmp
adcb
dec
daa
sub
les
mov
xchg
inc
test
and
js
sub
rorb
arpl
jmp
in
mov
loope
hlt
dec
adc
jmp
pop
sbb
mov
xchg
xlat
outsb
dec
pop
adc
inc
and
xchg
lods
cmp
out
or
dec
pop
cmp
xor
mov
bound
je
push
xchg
pop
and
mov
cmp
adc
rcll
inc
ja
lcall
add
jp
cwtl
iret
pop
cli
pop
sbb
shlb
out
aaa
pop
add
clc
jb
mov
stc
or
push
fsub
or
roll
ds
shll
pushf
pop
sti
jp
push
test
cmp
ljmp
rorl
xchg
lret
cmp
gs
loope
mov
mov
or
mov
out
push
ds
mov
ja
mov
or
lret
pop
shl
jp
das
test
mov
cmc
out
cmp
xchg
inc
cmp
mov
add
test
xorl
mov
jl
loop
and
daa
jo
mov
inc
fsts
push
cmpl
adc
jae
push
je
aas
lcall
push
inc
outsl
or
or
lahf
cltd
dec
add
pop
xchg
pop
lahf
and
popf
sub
test
push
jecxz
lret
mov
pop
or
and
and
in
and
mov
add
push
icebp
mov
outsb
loop
sub
mov
cmp
cmc
and
pop
add
adc
addr16
ret
mov
xor
cmpsb
xor
add
xchg
movsb
ucomisd
xorl
sub
jns
lcall
movsl
lods
lcall
cmp
mov
add
aas
inc
xor
pop
ret
outsb
sub
lds
push
mov
xchg
dec
aaa
mov
mov
push
fsub
pushf
push
jbe
sub
sahf
xor
sub
mov
pusha
aas
mov
out
orl
mov
enter
jg
lock
adc
fadds
mov
cwtl
xor
les
ds
mov
cmpsl
movsb
dec
iret
loop,pt
sbb
mov
icebp
xor
sub
cmp
or
jp
and
and
xlat
sub
mov
f2xm1
pop
roll
fdivrp
sti
mov
jo
loopne
push
adc
test
xorb
mov
adc
jno
dec
stc
mov
and
add
pop
xchg
outsb
loopne
xchg
add
inc
add
mov
or
out
sub
call
aad
aaa
call
mov
test
pop
jne
insl
jle
pop
push
ss
popa
mov
adc
xor
test
out
jmp
popa
inc
cmpl
push
push
jbe
or
clc
fiadds
xor
lahf
add
loopne
outsb
aad
ret
mov
mov
mov
lahf
xchg
mov
iret
mov
fwait
cmp
ret
inc
lea
lods
and
dec
mov
test
test
repz
fidivrl
jae
ds
ljmp
mov
sub
cwtl
ljmp
out
xor
jg
push
add
and
ss
mov
insl
pop
add
insb
out
mov
and
dec
jmp
jmp
pop
ret
inc
test
xchg
fsin
push
cld
lcall
inc
adc
sub
rolb
sub
mov
cltd
jmp
data16
cmp
jle
ror
push
xchg
xlat
sarb
pop
shl
fsubs
pop
test
icebp
imul
mov
fldl
or
gs
mov
call
sbbb
and
decb
and
sub
sub
xchg
cld
mov
dec
fcmovbe
movsl
mov
pop
lods
inc
ljmp
inc
outsl
push
rorl
int
imul
xchg
movsl
icebp
hlt
insb
push
fwait
push
mov
dec
adc
jle
test
pop
xchg
lea
sti
lods
pop
or
cmp
jb
xchg
or
cmp
inc
push
push
add
clc
data16
xor
fadd
mov
pop
sbb
xchg
xchg
ret
out
cmpsl
icebp
adc
lds
nop
movsl
ds
mov
insb
stos
enter
fs
shr
idivb
outsl
inc
jmp
aad
loope
dec
fsubp
cld
fwait
fs
stc
out
nop
adc
jp
and
jl
lods
mov
enter
fyl2x
popa
cmp
sbb
cwtl
dec
xor
and
out
int3
lock
adc
pop
lock
adc
inc
stc
pop
arpl
mov
scas
rcll
stos
push
or
lea
adc
inc
xchg
sbb
jb
inc
mov
outsl
aas
pop
ljmp
shl
mov
les
jge
add
push
gs
mov
into
mov
mov
cmpsb
mov
mov
fwait
xchg
dec
xor
idivb
bnd
pop
fsubrl
inc
aas
aad
fstps
clc
push
cmp
out
xor
dec
nop
jno
in
test
mov
adc
aam
xchg
and
aam
test
call
lret
int3
cmp
dec
outsb
subl
stos
rcrl
mov
shlb
cmp
int3
loop
mov
lret
shrb
mov
pop
push
mov
cwtl
daa
int
cmpsl
in
cmc
xor
xor
ret
adc
shll
cmpsl
ds
dec
xor
mov
out
adc
push
push
xor
jmp
pop
mov
flds
ret
shlb
mov
xchg
int3
jnp
mov
out
outsl
addr16
popf
aad
mov
xor
loope
sarl
in
push
dec
mov
sti
jne
jno
lret
push
test
testb
cmc
hlt
sbb
and
dec
push
and
in
sub
mov
js
sub
xchg
ljmp
and
dec
test
pusha
or
aas
ret
dec
sbb
orb
adc
out
sbb
cmpsl
dec
mov
je
adc
ds
stos
js
fsubrs
cmpsl
mov
ror
push
xchg
gs
in
scas
lock
sub
loopne
movl
or
outsl
fwait
inc
pop
imul
in
dec
lcall
filds
pop
pop
test
push
mov
xchg
sub
xchg
mov
mov
mov
pop
sbb
xchg
xor
mov
les
mov
ret
jo
imul
or
jmp
rorb
inc
mov
cmp
sub
pop
sub
jl
call
fcmovbe
clc
mov
bound
lods
sub
in
test
xchg
hlt
push
xchg
les
js
mov
pop
aad
mov
aaa
xor
mov
int3
add
add
xor
push
sarb
sub
or
xchg
fdivl
cmp
out
dec
inc
jbe
push
sub
mov
sub
cltd
bound
mov
dec
mov
je
fcmovb
pop
cmp
les
mov
stos
xchg
add
mov
inc
jo
inc
xchg
arpl
lret
adc
add
fmul
sti
movb
incl
jl
mov
shl
insl
test
mov
lea
out
cltd
or
mov
jb
add
ljmp
je
pusha
popf
pop
mov
inc
mov
cltd
cmp
cmp
pop
or
in
pop
dec
adc
cs
or
sub
out
mov
jecxz
dec
enter
stos
adc
jbe
inc
iret
in
call
mov
arpl
fstpt
xchg
popa
sbb
push
xor
mov
cmpsb
add
mov
pop
bound
xor
inc
push
in
sbb
mov
xchg
aas
es
dec
and
loop
mov
pop
stos
in
sbb
push
sub
addb
mov
add
out
movsl
mov
sub
movsb
and
js
xchg
bound
sahf
xorb
sub
in
adc
jno
vaddsd
push
mov
push
rcl
mov
pop
and
repnz
lea
sub
bound
push
imul
cmc
mov
hlt
or
adc
mov
xchg
or
clc
das
mov
in
enter
shlb
cmpsb
int3
jl
hlt
pop
addr16
les
inc
lea
add
pushf
stc
or
sbb
retw
lret
aad
xchg
xlat
out
mov
stos
jge
popa
mov
ret
repz
xor
cmp
and
and
jecxz
in
xchg
mov
in
push
jno
testl
lock
arpl
xchg
scas
jge
mov
jmp
cmpsb
jge
or
lds
jecxz
iret
cmp
fistps
and
sbb
stos
inc
ja
fidivl
mov
movsb
jg
sbb
adc
pop
imul
and
aaa
adc
sarl
sbb
iret
aas
mov
popa
cli
pusha
mov
mov
mov
mov
in
xchg
rolb
mov
xchg
fwait
lods
ss
jo
xchg
test
loopne
lods
sub
cmpsl
sbb
pop
out
sbb
xchg
adc
cmpl
dec
lds
inc
push
inc
lods
or
sti
push
inc
mov
and
push
lret
jae
jo
xlat
sub
pop
mov
jbe
fistpll
jp
xor
dec
jmp
or
popf
bound
mov
cltd
mull
mov
lock
mul
jp
mov
sbb
shlb
pop
ja
icebp
cli
add
test
jae
cmc
loop
in
stos
cmp
add
rcrb
sub
cmp
and
dec
rcll
es
pop
jp
mov
paddd
and
int
mov
rolb
jl
sub
push
mov
rorb
mov
bound
lahf
lock
cmp
aam
adc
mov
mov
movsb
fadds
sbb
push
sub
clc
jno
xchg
adc
movsl
xchg
add
pop
mov
je
push
cld
jecxz
lret
lock
cld
mov
popf
inc
and
adc
xor
jae
push
jo
adc
lahf
push
inc
sahf
jl
jns
sub
test
jae
insl
jl
ret
mulb
mov
push
push
adc
inc
xchg
jge
jge
xor
jno
lret
lcall
cmpb
xor
sahf
mov
and
xor
inc
cmpsl
xor
out
cmpb
pop
cmp
cmpb
sahf
jmp
push
lods
fdiv
repz
xor
adc
xchg
mov
insb
and
sbb
cld
out
loop
sarl
jge
loope
mov
dec
sbb
xchg
test
cmp
add
inc
in
lret
out
mov
arpl
in
jmp
outsb
add
movsb
data16
and
filds
xor
pushf
stos
int
xchg
in
add
jl
clc
add
sbb
js
popf
add
ret
jne
mov
imulb
push
pop
in
movsl
call
fnstsw
xchg
jl
ja
lds
add
lods
test
inc
pop
addb
test
push
in
cmp
lods
fsubl
mov
mov
pop
test
push
outsl
cmpxchg
sub
push
xchg
and
mov
push
mov
loopne
dec
cltd
add
push
aad
jecxz
dec
sub
dec
ficomps
scas
push
js
daa
or
adc
das
mov
testl
xchg
out
sub
jo
pop
out
out
flds
aam
adc
sub
outsb
stc
pushf
xor
pop
cld
lret
movsb
dec
movsb
stos
fdivs
cld
cmpb
mov
int3
enter
mov
fimull
popa
dec
pop
sti
jo
mov
xor
adc
mov
and
data16
iret
arpl
jecxz
aas
mov
mov
mov
stos
mov
rol
mov
push
fs
push
push
out
test
stos
ljmp
adc
subb
hlt
pop
sbb
push
mov
js
aaa
add
xor
ja
mov
scas
call
popf
add
test
jns
aaa
mov
nop
stos
dec
add
mov
int3
cwtl
cmpsb
xor
fstpt
xchg
in
add
or
add
lds
lret
cmp
lods
push
sarl
push
push
iret
fistl
rolb
out
retw
sub
or
pop
sbb
or
cmp
mov
pusha
scas
in
and
mov
or
add
sub
sub
int3
jnp
xor
add
mov
clc
adc
xor
pop
gs
jnp
mov
mov
es
shll
ret
cmp
popa
sub
xor
and
xchg
cmp
mov
rdmsr
in
mov
or
fiadds
push
mov
dec
inc
jmp
cmpl
push
mov
push
iret
stos
sbb
pusha
jbe
push
xchg
movsb
mov
lret
sbb
or
and
pop
call
ja
rolb
jmp
lahf
and
pusha
cs
pop
mov
popf
cmpsl
fs
xchg
mov
push
lea
lock
int3
scas
and
or
inc
jmp
mov
sahf
jecxz
test
icebp
push
xchg
add
dec
mov
fwait
jmp
in
repz
xchg
and
mov
or
packssdw
or
ret
pop
add
xor
jecxz
sub
aam
js
pop
xchg
imul
je
sub
sub
push
sbb
dec
mov
sbb
inc
mov
in
lret
outsl
popf
sub
sbb
pop
stos
es
jbe
jno
imull
fstl
repnz
ljmp
adc
push
sub
or
and
lfs
sub
lcall
and
sbb
faddl
inc
sbb
pop
dec
cltd
ret
mov
inc
mov
shll
in
pop
sti
dec
cmp
mov
into
jecxz
lock
pop
and
cmp
sbb
filds
pop
mov
jo
cmp
lods
pop
pop
popf
cmp
pusha
xchg
pop
xchg
in
add
mov
fistpl
inc
mov
push
fld
ret
fs
call
insb
xor
adc
rcrl
testb
inc
imul
lahf
imul
add
daa
into
hlt
dec
adc
pop
ret
jb
bound
jecxz
jns
push
mov
stos
lret
inc
cld
sub
test
outsb
xchg
dec
das
ljmp
inc
jnp
and
xchg
xor
add
lods
mov
addb
mov
push
addr16
jo
sahf
mov
push
shll
lods
inc
sbb
adc
adc
mul
ds
sti
mov
fisttps
lods
subb
push
pop
mov
mov
ret
sbb
adc
push
in
dec
lock
cltd
bound
clc
jo
lcall
test
pop
faddl
pop
push
inc
xchg
cwtl
push
stc
jnp
jp
xchg
outsb
sti
imul
jmp
mov
mov
insl
mov
out
je
lock
inc
scas
inc
push
xor
scas
pop
cli
mov
dec
xchg
outsl
orb
cwtl
mov
xlat
push
add
gs
mov
das
jns
ret
xor
jge
dec
fcmovbe
out
push
sub
enter
jns
add
or
ss
addb
ss
testb
jae,pn
sub
pop
cmp
mov
jns
adc
icebp
adc
stos
sahf
fistpll
xchg
xchg
mov
out
cmp
loop
adc
lret
inc
adc
sbb
sub
cld
in
mov
mov
or
fistpl
mov
jmp
bnd
jl
popa
lcall
xlat
sahf
mov
dec
nop
jno
dec
test
enter
in
jp
push
sub
insb
sub
sbb
out
and
jns
fcmovnbe
sbb
arpl
sbb
jg
iret
jo
cmp
xorb
in
testl
push
jmp
push
jbe
jl
stos
or
lret
out
std
jg
mov
jns
sub
or
cmp
rorb
mov
stc
int
sub
xor
cmp
inc
les
or
push
data16
cmc
mov
adc
mov
adc
aas
push
dec
push
sub
cmc
dec
test
mov
mov
mulb
jo
dec
fisubs
pop
mov
shlb
imul
add
dec
add
dec
push
lods
or
inc
mov
shrl
mov
mov
inc
fstl
decb
repnz
gs
subl
adc
or
into
hlt
push
mov
aas
icebp
push
mov
push
pop
cld
hlt
adc
ss
cmp
add
dec
lret
and
push
push
out
xlat
push
pop
aaa
xchg
jl
imul
sahf
cwtl
jno
jl
insl
cs
adc
mov
shl
fs
jmp
imul
push
fdivs
in
dec
xchg
pop
fs
adc
jl
mov
mov
insb
cmpsb
arpl
push
sub
lcall
add
add
aam
jle
test
lds
mov
imul
dec
sti
out
inc
aam
push
mov
pop
lahf
test
das
es
adc
dec
sub
xchg
push
xchg
jle
jnp
pop
out
sbb
cld
xor
sbb
jg
jecxz
fcomps
popf
outsl
loopne
insl
lods
in
fdivrl
scas
cmp
fwait
push
mov
call
add
pop
add
inc
ds
int
or
insl
pop
fisubrs
stos
lcall
jmp
out
push
test
mov
aam
mov
rcll
inc
icebp
sbb
cmpsl
dec
sahf
aas
push
sub
loop
jmp
jbe
rcr
sbb
push
movsb
xchg
push
ss
xor
ret
mov
fnstcw
leave
shrb
mov
xor
call
jl
xchg
je
dec
sub
loope
push
aad
xlat
sbb
fwait
in
movsb
pcmpeqb
push
or
and
lods
pop
or
cmp
js
jno
in
incb
das
add
insb
push
adc
dec
lods
mov
inc
sbb
mov
pop
test
iret
sbb
cwtl
dec
lods
bnd
imul
mov
shrb
repz
or
push
out
sub
cmp
push
lret
sbb
lds
mov
mov
mov
xchg
push
sbb
sbb
dec
in
dec
je
and
pop
movsb
xchg
sarb
jns
insl
sarb
shrb
outsl
xor
loop
jnp
xchg
jmp
sbb
arpl
sbb
lret
cs
inc
or
push
mov
outsl
or
lods
repnz
sub
push
mov
gs
lock
jae
dec
movb
insl
sub
inc
shrl
mov
notl
push
dec
imul
add
sbb
cmp
sbb
lods
lcall
test
mov
mov
in
add
into
adc
arpl
in
xchg
pop
sbb
xchg
mov
jnp
loopne
push
push
imul
mov
hlt
lret
cs
mov
in
sahf
call
mov
imul
das
loop
mov
sbb
jl
or
jmp
adc
aam
dec
pop
pop
and
or
fldcw
arpl
lea
push
jmp
dec
jl
clc
subl
daa
xchg
cmp
cwtl
sub
inc
push
adc
inc
jne
mov
cmc
xchg
and
and
mov
in
mov
inc
mov
stos
jp
imul
fldl
sarb
bound
lcall
addr16
cld
loopne
pop
sub
scas
xchg
stos
hlt
nop
adc
mov
daa
dec
inc
dec
adc
stc
es
sbb
sub
xchg
imul
mov
ljmp
or
pop
xor
mov
cmp
add
mov
les
shrl
fbld
fwait
sbb
loopew
sbb
ret
cwtl
mov
loop
insl
and
add
int3
sbb
sub
jnp
movsl
mov
mov
and
push
fs
adc
scas
jne
sub
or
dec
incb
in
in
mov
add
push
jge
and
jle
lds
jno
loopne
mov
adc
mov
mov
in
jge
mov
and
movsb
sub
sbbb
add
jae
cmp
in
inc
repnz
add
sub
xchg
popf
sub
jb
lret
les
shll
vmptrld
sub
jl
mov
mov
shrb
out
adc
push
enter
fucom
sub
loop
sub
xchg
sbb
jo
jno
push
push
ss
dec
xchg
aam
sub
js
notb
push
test
mov
fs
adc
cltd
push
cmp
push
icebp
xor
dec
cmpb
mov
flds
mov
aad
arpl
jg
jns
add
in
aas
arpl
pop
xor
lcall
push
ds
andl
xor
or
jmp
mov
pop
shrb
push
add
jnp
or
jnp
inc
imul
jle
lods
mov
xchg
jo
adc
sar
mov
ja
ficoml
in
adc
insl
aas
add
add
pop
mov
fiaddl
xor
push
mov
xor
cmp
pop
pop
push
add
push
in
and
mov
jmp
and
push
jle
lds
sbb
aad
cmp
mov
test
push
mov
mov
lds
xor
in
bound
push
mov
sbb
or
add
cmp
ficompl
iret
repnz
bound
cmp
inc
enter
jmp
loope
cmp
jp
test
gs
mov
hlt
fnsave
stos
in
push
lea
mov
lds
mov
popf
cli
push
jmp
adcl
iret
aaa
fcomi
jne
fidivrs
mov
jne
lds
xor
jle
ret
push
pop
outsl
cmp
xchg
jg
int3
add
xchg
popa
xor
mov
ret
pop
jmp
pop
rcl
mov
sarb
or
pop
inc
jo
push
int3
test
sbb
popl
jl
or
mov
test
loop
fcomps
repz
push
jecxz
mov
mov
xchg
dec
adc
jo
mov
xchg
aad
sbb
bnd
sub
or
sarb
jle
sub
sbb
lea
add
or
lret
std
jo
mov
aas
inc
and
mov
cmc
popa
addr16
lock
pushf
push
mov
loopne
add
push
outsb
jb
pushf
jl
scas
adc
ret
mov
fsubr
mov
fmuls
fstp
jnp
movsl
and
sbb
push
mov
ret
mov
mov
sbb
or
jmp
dec
xor
add
and
lds
clc
push
xor
into
fstpt
fisttps
sub
addr16
test
inc
gs
inc
fldt
mov
jnp
push
adc
dec
cmp
fmuls
sbb
mov
pushf
cmp
rorb
push
fdivs
sub
mov
push
or
stos
xchg
fildll
mov
inc
xchg
ret
or
xchg
mov
or
es
add
lret
cmp
add
jb
lahf
and
or
xor
push
in
mov
push
loope
mov
faddl
loop
cmp
lods
scas
pop
xchg
xor
inc
stos
jmp
dec
jecxz
mov
adc
and
or
and
xchg
push
hlt
adc
jmp
sub
cmp
in
sbb
fmul
pop
adc
sub
and
imul
adc
dec
fisubrl
inc
ret
es
push
fidivs
xor
addb
shlb
mov
lret
mov
shr
stos
pop
lds
mov
scas
jge
xor
ret
push
xchg
lea
cmpsb
mov
jne
mov
movsl
mov
das
or
xlat
pop
sahf
ret
cmp
cmpsl
xchg
nop
std
inc
sub
rclb
xor
sbb
push
enter
gs
aad
pop
cpuid
bound
mov
push
int
mov
mov
mov
inc
xchg
jmp
int
movl
push
aam
jp
mov
cmp
cmp
in
or
inc
das
pop
inc
xor
hlt
push
jge
es
mov
in
fadd
push
mov
scas
push
outsl
cmp
lea
add
xchg
or
push
gs
pusha
mov
stos
movsb
int3
loopnew
xchg
test
int
xlat
push
mov
ds
jl
and
out
decb
pop
aaa
xchg
dec
jno
xchg
push
dec
mov
push
enter
out
cmp
push
fsubl
mov
rcrb
or
mov
pop
add
or
cmovno
addr16
movsl
cmpl
add
mov
sbb
cmpsl
stc
mov
add
xchg
xor
sahf
jecxz
push
mov
or
push
jns
mov
mov
mov
adc
aaa
or
lods
mov
out
fsubl
push
push
push
scas
dec
dec
sbb
cmpsl
pop
adc
repz
call
cli
movsl
adc
jg
and
call
sub
mov
lcall
ret
pop
and
adc
push
adc
mov
mov
mov
ret
dec
popa
lea
aad
sbb
xchg
fists
cmp
jne
enter
out
cmp
cld
cmp
aad
clc
add
or
add
add
push
jae
fs
aad
and
cmp
cs
mov
add
loopne
es
jp
or
jo
cld
cltd
test
cltd
jb
dec
lret
out
xor
imul
adc
hlt
lret
aam
mov
fsub
xor
test
movsl
cmp
inc
aas
xchg
pop
pop
test
dec
test
pop
jb
cltd
and
rcrl
rcll
pop
shrb
dec
call
mov
daa
mov
mov
pop
xchg
lock
repz
in
cld
add
lods
xchg
xchg
push
cmp
addb
xchg
pop
or
dec
repz
stc
xchg
stc
callw
in
inc
mov
jae
je
hlt
stc
sbb
adc
call
stos
sbb
lods
fcmove
xchg
xor
xor
dec
and
sbb
sbbb
fisubrl
cmp
xchg
xchg
xchg
sbb
add
out
dec
scas
cli
mov
jo
dec
jg
gs
inc
inc
mov
push
idiv
mov
dec
mov
sbb
pop
adc
ds
ja
shll
mov
push
push
mov
jge
cmp
pop
in
sbb
hlt
pusha
clc
mov
add
pop
mov
and
lods
mov
mov
sbb
and
fadds
into
sub
out
mov
pop
mov
and
es
iret
xchg
arpl
fists
test
subb
dec
mov
loop
sbb
movsl
in
or
mov
mov
and
xlat
fnstcw
sub
out
cwtl
add
popa
shlb
jbe
xchg
aad
dec
cmp
mov
mov
pop
sar
xor
loopne
lods
jne,pt
jae
cmc
push
jnp
fstpt
mov
imul
xor
sbb
dec
fisttpll
insl
loop
lds
fnstsw
cmp
scas
mov
in
aas
mov
decb
push
das
idiv
and
adc
imul
shrl
push
pusha
xor
dec
and
insb
in
ja
insb
mov
pop
rcr
shl
fbld
mov
xchg
push
pushf
insl
cmpsl
aad
inc
mov
rclb
xorl
popf
movsl
les
sarl
push
das
icebp
pop
out
xchg
iret
cld
fldcw
xchg
cmp
mov
jmp
or
push
pop
and
ljmp
outsl
sub
push
mov
das
into
cld
icebp
and
stos
jno
jno
xor
stos
test
aad
or
inc
add
cmp
sti
mov
mov
sbb
jecxz
xor
clc
jo
xchg
mov
adc
push
mov
dec
xor
test
outsb
push
pop
orl
clc
mov
outsb
ficoms
ljmp
push
sub
pop
dec
in
fldt
cmp
pusha
mov
and
jg
mov
iret
sub
popa
ja
sahf
iret
xchg
sbb
dec
in
xchg
pop
out
in
push
jmp
stos
enter
inc
jae
mov
rcr
loop
cmp
mov
fbstp
push
loope
push
repnz
fnstsw
iret
fidivrl
es
pop
pop
subl
pop
test
jmp
xor
js
cmp
cmp
sti
jl
pop
icebp
cltd
push
jnp
sub
lret
sub
xor
xlat
ret
aas
loope
jle
test
push
sahf
inc
cltd
jmp
icebp
ret
inc
das
movlps
push
dec
sub
loop
es
popf
call
xchg
rcl
sbb
loope
add
das
mov
jp
jmp
and
sub
mov
push
shl
pop
xchg
lock
int
test
sti
movsb
call
mov
push
outsb
mov
pop
mov
aad
push
mov
dec
jg
lds
filds
pop
bound
or
cmp
bound
jl
adc
mov
sub
push
adc
lock
adc
adc
cmpsb
push
xchg
cmpsl
pop
test
or
inc
push
mov
mov
sbb
mov
lret
mov
nop
adc
fdivl
das
push
js
and
mov
sti
jne
sub
inc
rcrb
in
push
cld
add
dec
pop
inc
sarl
pop
xor
inc
mov
loopne,pn
lock
enter
xlat
push
addr16
and
clc
or
pusha
dec
movsl
push
cmc
shrl
inc
mov
outsl
inc
mov
add
cmpl
out
imul
mov
mov
fwait
jecxz
addl
mov
mov
or
jo
stc
or
pop
jp
addl
sahf
fimull
movsl
repnz
inc
out
insb
jo
mov
push
cmp
sub
stos
pop
out
mov
int3
int
or
stc
cmp
dec
ds
jge
lds
std
sub
inc
fincstp
mov
mov
sbb
mov
sbb
int
mov
fcoml
xchg
xor
test
mov
push
cltd
cmp
scas
xchg
xrelease
xor
je
mov
or
lods
repz
pop
jmp
xchg
test
cmc
fimuls
jb
jo
mov
mov
adc
jle
mov
xchg
es
sbb
sub
mov
int3
adc
lret
xchg
movsl
dec
lods
clc
sarl
ljmp
cmp
out
je
shll
xchg
subb
fcmovnbe
cltd
adc
test
mov
mov
cli
ret
arpl
repz
movsl
or
aaa
xor
mov
xchg
int
repz
femms
mov
in
dec
mov
push
ljmp
insb
xchg
mov
fwait
mov
xor
popf
and
push
faddl
xor
add
test
pop
nop
cmp
aaa
cmp
cmp
fists
shrl
push
mov
in
frstor
cmp
gs
dec
int3
jne
std
mov
aaa
and
cltd
mov
cs
dec
and
mov
outsl
ljmp
pop
outsb
dec
leave
mov
and
hlt
imul
cmp
aas
in
insl
enter
pop
jo
imul
adc
jmp
cmp
mov
out
mov
cmc
inc
push
xchg
ljmp
movsl
fwait
mov
lfs
shll
add
adcl
adc
mov
mov
push
sbbb
dec
in
jb
and
mov
aad
lods
add
shrb
sub
xor
and
inc
jbe
pusha
inc
inc
lret
dec
dec
in
mov
repnz
clc
adcl
ja
int3
mov
push
das
add
pop
mov
pop
int
cli
jne
inc
subl
push
xchg
sbb
add
pop
clc
mov
popa
cmp
in
jb
jl
pop
jmp
fstl
jbe
xchg
push
ja
insl
sahf
push
les
shr
push
mov
jno
in
arpl
repnz
jne
mov
addb
mov
pop
ljmp
lcall
out
outsb
cwtl
xchg
popf
test
loopne
push
mov
mov
push
xchg
mov
fiaddl
sahf
jecxz
sub
sub
xor
jmp
sbb
inc
cmpsb
jmp
sbb
push
rclb
mov
jmp
ret
dec
mov
bound
insl
adc
xorl
movb
pop
cmp
and
jbe
pop
jl
push
sbb
add
or
adc
int
sbb
rolb
pop
lret
lods
sub
sbb
in
cmpb
push
mov
add
xchg
in
shl
test
add
outsb
dec
mov
int
inc
mov
das
scas
scas
mov
popa
xlat
or
dec
push
stc
mov
add
lret
data16
dec
or
xchg
in
pop
mov
mov
or
mov
add
nop
cmp
push
scas
sbb
jno
mov
cltd
xchg
mov
add
ret
xchg
pop
ja
dec
adc
lahf
adc
jl
movsl
bound
loope
cmc
and
rcrb
push
push
scas
inc
jmp
test
inc
filds
shll
in
cltd
lret
sub
shrl
push
or
jg
les
inc
mov
movsb
push
cmpsb
pop
inc
aaa
bound
xchg
cbtw
js
mul
mov
js
xchg
mov
jnp
jmp
add
xchg
xor
in
add
xchg
sar
dec
xor
inc
sub
mov
test
divb
je
cmp
dec
vfnmadd231sd
adc
icebp
ljmp
mov
mov
stos
sub
hlt
xchg
nop
in
xor
lock
jae
inc
xor
sub
sbb
cld
xchg
outsb
aaa
or
mov
mov
scas
dec
aam
scas
dec
ja
xchg
fst
sti
in
mov
addb
ss
gs
mov
and
ficoml
std
add
shl
jle
cli
rcll
aam
mov
pop
iret
add
inc
adc
xchg
add
outsl
stos
mov
or
push
ja
iret
push
dec
sbb
cli
push
movsb
inc
lfs
aam
lock
jp
or
pop
loope
xchg
insb
dec
aaa
and
fimull
xor
lock
push
adcl
shlb
movsb
mov
repnz
clc
xor
stos
jmp
cmp
fcmovnbe
add
outsl
xchg
inc
nop
push
test
scas
adc
cmpsl
pop
jp
fmull
enter
out
xchg
dec
gs
lahf
es
push
push
xlat
push
jl
addb
xor
dec
mov
or
add
cmp
fwait
mov
shll
mov
jle
dec
test
dec
dec
out
sti
test
jecxz
mov
outsb
cs
ffreep
rolb
sbb
jge
stos
mov
aaa
sarb
arpl
mov
xchg
sub
les
sub
jmp
rcll
pop
popw
dec
lcall
push
mov
mov
xor
xchg
bound
or
dec
cmp
jne
movsb
repnz
jmp
or
call
imul
xor
ds
test
jae
repnz
emms
fildl
aad
mov
das
cwtl
xor
das
inc
jb
jg
cmp
mov
inc
xchg
and
out
xlat
and
ss
in
nop
push
leave
push
in
in
and
cmp
bound
cmp
and
gs
dec
popf
stos
xchg
imul
pop
or
cs
test
aaa
fdivrs
into
mov
das
cwtl
jge
dec
mov
or
fs
cmp
out
jle
sub
push
addr16
sbb
jge
fsubrl
adc
inc
jecxz
push
fwait
clc
dec
jmp
mov
bound
push
cs
cmpsl
dec
cmp
mov
adc
cmpsl
out
xor
aas
push
mov
inc
pop
push
or
shrb
inc
outsb
push
mov
fmull
lret
les
jo
sbb
ss
aam
cwtl
ret
dec
xor
mov
push
les
xchg
push
or
mov
aad
repz
jnp
mov
xor
mov
mov
test
nop
sub
aas
or
jmp
nop
cmp
flds
pop
dec
addl
addr16
sarl
ljmp
jge
ljmp
jb
jns
insl
ret
push
lea
and
lcall
jbe
fwait
adc
fcmovnu
fnstenv
fcmovbe
mov
cli
lcall
ss
adc
in
addr16
aas
push
mov
pop
push
inc
pushf
mov
and
inc
pop
push
lcall
xlat
lds
movsb
pop
pop
cmpsb
push
xor
lret
push
inc
bound
in
xchg
shlb
sub
adc
data16
mov
in
mov
add
in
arpl
mov
outsl
pop
pop
sbb
mov
test
popf
xchg
push
cmp
mov
cmp
lods
rclb
push
data16
pop
lods
sahf
int
pop
inc
fidivrl
xchg
jae
xor
sar
push
sar
imul
xchg
or
xchg
cmpb
and
add
mov
mov
jns
shll
jmp
bnd
test
adc
sbb
dec
jl
lock
mov
into
cmpsl
icebp
rol
enter
fdivr
adc
sbb
out
mov
imul
cmc
data16
add
lcall
mov
mov
mov
sub
cmp
cli
out
dec
icebp
push
xchg
mov
andl
leave
icebp
ja
out
sbb
inc
pop
jns
and
push
sbb
sbb
rep
roll
lahf
xor
lret
sbb
pop
arpl
mov
les
imul
movsb
sti
inc
cmp
es
addl
jne
lret
sbb
inc
mov
call
cwtl
call
ljmp
push
xchg
aas
fiaddl
mov
pop
push
fistpl
add
pop
push
out
in
sub
les
and
and
js
fstl
xor
mov
js
repz
mov
adc
dec
push
call
jno
shll
dec
cltd
loop
cs
push
das
push
test
leave
popf
sbb
cli
ficoml
adc
cmpsb
xchg
jl
in
mov
lcall
enter
fisubl
dec
arpl
cmp
imul
in
jle
push
sbb
inc
incb
lcall
pop
cmpsb
mov
pushf
dec
adc
ljmp
ret
cmp
repz
lret
jne
loop
sbb
mov
pop
icebp
and
aad
xchg
and
mov
je
jae
daa
aad
mov
sbb
sahf
shll
inc
nop
mov
cmpsl
test
daa
pusha
mov
inc
shll
sub
push
sbb
rol
loop
mov
and
adc
addr16
cltd
sub
cld
dec
pop
pop
inc
xchg
dec
jecxz
lock
dec
sub
dec
xchg
dec
pop
add
inc
xor
out
inc
and
push
dec
mov
bound
mov
xchg
mov
or
cmp
mov
push
data16
jb
sahf
stos
lea
jo
push
cmc
insb
push
outsl
mov
cmc
dec
cld
and
cmp
shrl
xchg
stc
jns
and
push
cmp
cmp
mov
sbb
sub
movsl
add
jmp
iret
out
fldl
lea
and
jl
lods
xchg
and
insb
mov
loopne
push
repnz
jns
cmp
adc
mov
mov
in
dec
xchg
and
es
lea
inc
fwait
inc
lahf
jmp
scas
push
jae
mov
pop
add
push
loop
pop
dec
rorb
pop
bound
mov
mov
inc
icebp
fcmovb
adc
dec
insl
or
je
pop
xchg
mov
pop
mov
mov
mov
mov
lahf
inc
sub
ret
and
test
mov
dec
jg
and
test
cld
cmp
cmp
notl
out
adc
mov
push
cmp
push
pop
ja
push
movsl
push
test
insl
lods
leave
or
imul
dec
leave
and
adc
cmp
int3
adc
gs
js
bound
push
roll
xor
inc
repnz
cmp
pop
aam
mov
push
std
in
add
push
pusha
dec
add
bound
sbb
pop
xor
sbbb
std
aas
mov
cmc
clc
movsb
sub
jo
mov
scas
decl
bound
mov
cmc
mov
jmp
fstps
mov
jb
stc
push
jg
loope
std
add
ds
add
jno
icebp
jg
sti
out
lds
stc
or
mov
out
lea
jmp
aaa
pushf
test
xchg
mov
repnz
xor
add
sar
xor
mov
mov
fsub
shl
dec
cli
mov
call
movsl
push
inc
mov
and
sarb
fs
xchg
sbb
xchg
addr16
das
lods
cmp
sbb
fdiv
les
adc
test
mov
dec
xchg
xor
add
push
loope
sti
cld
jae
out
lods
repnz
out
leavew
add
stc
rcll
popa
mov
xor
mov
pop
insl
ss
shlb
pop
lcall
out
lret
jl
jg
mov
pop
testl
fistpl
push
aad
ror
and
mov
xor
sbb
sbb
fs
jo
and
lds
mov
daa
daa
add
into
add
loope
mov
test
mov
mov
sub
out
xor
ret
lsl
pop
jnp
stc
or
and
or
pop
inc
add
sbb
jecxz
insb
pop
cld
mov
out
pop
insl
mov
clc
stc
dec
jmp
pop
fldl
inc
cli
xchg
leave
cli
iret
sbbb
hlt
sbb
pop
stos
cltd
dec
push
pop
and
pop
xor
popf
scas
adc
sahf
xchg
sub
dec
incb
mov
cld
rclb
shrb
mov
dec
loopne
repz
test
int
sbb
aad
adc
adc
loope
lcall
lock
adc
sarl
cld
loopne
lret
aas
inc
orl
sbb
inc
fidivrs
or
pop
pop
scas
inc
ss
insl
out
fcmovu
pop
mov
and
cmp
sub
xchg
mov
icebp
add
sub
flds
sbb
adc
dec
mov
mov
frstor
pop
xor
xchg
and
adc
roll
imul
repnz
lds
dec
mov
push
dec
mov
push
leave
call
popf
int3
fsubrs
inc
aam
ret
fbld
lods
pop
add
push
loop
or
jne
mov
dec
es
mov
icebp
sbb
int
jns
fisttps
popf
push
and
cmp
and
or
andb
mov
jecxz
mov
in
aas
ljmp
mov
cmp
inc
loope
mov
cli
or
lods
mov
pop
iret
out
ja
adc
lea
pop
cmp
xor
rclb
test
push
pop
mov
pop
addr16
mov
and
das
shlb
outsb
push
lods
cmp
leave
or
xlat
dec
cmp
xchg
iret
fisubrs
out
jne
ja
andl
sub
movb
insb
fdivr
dec
jnp
xchg
or
lock
in
mov
mov
inc
test
int
inc
jg
testb
sarb
int
jne
inc
shlb
pusha
inc
push
fcompl
or
arpl
dec
fldenv
jg
iret
xor
movl
mov
inc
mov
lods
jno
loop
pop
in
and
fadds
fs
je
cwtl
pop
ret
std
daa
stc
cmp
add
pushf
sbb
lods
call
dec
xor
das
lock
sub
push
mov
imulb
ret
test
push
pop
pop
pop
mov
mov
fwait
mov
jecxz
xor
imul
or
fists
stc
enter
jg
daa
or
js
and
adc
mov
mov
dec
sub
sbb
mov
iret
aaa
dec
mov
mov
adc
mov
mov
lock
pop
and
mov
jbe
movsb
loope
adc
leave
sub
fidivrl
pop
jg
nop
icebp
lods
pop
popl
dec
xchg
loopne
inc
mov
adc
test
movb
dec
dec
dec
push
insl
adc
ret
outsb
jo
addb
repnz
jne
lds
outsl
inc
adc
bsr
xor
fcompl
jge
inc
mov
pop
jno
sub
cmp
jmp
mov
add
imul
inc
pop
mov
loopne
ljmp
testb
shrl
test
add
pushf
aad
jmp
cld
ljmp
sbb
sbb
xchg
imul
dec
pop
lds
jp
in
vxorps
sbb
xor
clc
push
sbb
pop
push
insl
sub
add
jno
pop
mov
test
jge
jge
push
addr16
adc
lcall
lds
sbb
or
roll
lret
xchg
dec
stos
sahf
mov
push
dec
in
pop
inc
leave
push
jns
ficoml
int3
add
outsl
lahf
adc
test
inc
stos
xchg
add
xlat
sbb
jb
mov
dec
push
or
mov
dec
xor
inc
pop
xorl
ror
inc
imull
clc
movsl
sbb
cmp
ds
pop
stos
sbb
pushf
xor
stos
scas
lahf
mov
cld
repnz
clc
xchg
sbb
cmc
in
cmp
jbe
inc
pop
testb
xchg
enter
aad
xchg
sbb
dec
fldt
scas
aaa
rolb
stos
cmpb
pop
popf
push
push
jnp
mov
test
subb
mov
lahf
das
int
and
stos
or
push
cmpsb
loop
outsl
sub
rcrb
push
sti
fmul
and
cmp
ja
mov
fxch
mov
loope
push
and
stc
mov
std
xchg
and
lods
sbb
dec
and
cltd
in
push
ss
sub
stos
dec
cmc
pop
sub
cmp
mov
push
xchg
xor
hlt
sub
xor
dec
lods
lds
les
mov
add
inc
mov
popa
xchg
and
movsl
pop
xor
cmpb
je
cmp
rcrl
aam
jo
jmp
inc
mov
ror
stc
fnsave
jbe
sahf
ret
in
mov
out
je
lret
mov
or
cmc
sub
imul
jnp
pusha
and
inc
mov
arpl
cld
push
cmp
mov
inc
and
ss
dec
sahf
pop
in
loope
pusha
push
add
push
lahf
mov
mov
shlb
cwtl
jb
das
sub
lea
cmp
inc
mov
dec
xor
lock
pop
push
dec
push
rcr
pop
hlt
bound
rolb
movsl
sbb
popf
add
xchg
pop
push
es
cmc
repnz
add
test
dec
sbb
push
fdivrl
stos
sti
cmp
add
test
jnp
pop
lret
mov
sarl
and
jne
mov
imul
iret
add
into
or
rcrl
mov
dec
mov
cmc
xor
or
inc
rolb
fptan
movl
inc
adc
ret
pslld
aas
aad
mov
jbe
sbb
out
arpl
xor
data16
icebp
fstl
or
push
add
stos
insb
push
test
sub
pop
push
aad
push
sub
lock
dec
in
or
jb
sub
cltd
movsb
inc
sar
jecxz
call
dec
pop
push
lret
loope
push
sti
cmpsl
sahf
jle
jbe
out
sub
test
or
mov
add
xchg
xchg
cmp
pop
sarl
push
mov
shll
popf
cltd
push
into
adc
lods
jb
aam
mov
xchg
clc
xor
out
stos
aad
add
pusha
sub
or
nop
push
dec
xchg
dec
add
xchg
dec
fcoms
cwtl
sub
sub
sti
out
cwtl
imul
xchg
push
incb
sbb
inc
cltd
jp
xor
dec
sbb
mov
and
xor
and
nop
enter
jp
pop
xchg
test
jae
xchg
icebp
jmp
clc
lret
repnz
ja
lea
jmp
lds
pop
mov
mov
mov
fsubrl
xlat
fstl
bound
fistpl
ljmp
dec
rorl
push
jns
xor
xchg
loopne
test
add
loop
push
out
push
xchg
push
out
addr16
aam
and
add
aaa
scas
push
and
pop
aad
mov
outsl
imul
add
mov
push
mov
pop
or
jg
sti
xchg
outsb
cmp
or
repnz
jo
bound
imul
xor
mov
aam
out
aad
mov
mov
sbb
sti
ds
mov
mov
sub
fnstsw
lock
scas
in
test
add
add
loop
push
jb
les
js
insl
dec
pop
mov
loopne
jecxz
fistps
clc
stc
les
push
loopne
movsb
xor
repnz
cmp
ss
out
in
adcl
mov
pop
add
xor
add
fidivrs
fmuls
and
mov
out
sbb
mov
cmc
add
jle
push
jmp
inc
gs
and
and
mov
xor
push
loope
outsl
insb
cmp
test
mov
pop
mov
out
sub
cmp
and
mov
push
dec
pop
popf
push
das
and
adc
jbe
movsl
fildll
mov
mov
fsubs
jmp
lahf
pop
xchg
push
test
cltd
push
or
inc
dec
movsb
std
in
ficoml
movsb
cmp
pop
sub
sahf
or
fildll
dec
into
inc
cmpsl
ret
aam
cmp
dec
cmp
push
adc
and
and
inc
addr16
push
ljmp
aaa
mov
push
roll
push
cmp
daa
in
std
pop
aaa
xchg
push
jmp
push
xchg
push
pusha
xor
or
xor
std
aaa
jno
fistps
cld
jns
and
sub
je
lahf
cltd
push
fsts
lcall
and
stos
into
movswl
xchg
sbb
bound
cmp
pop
roll
pop
stos
rcl
pop
insb
mov
pop
cmc
aas
jge
mov
in
xchg
dec
inc
adc
pop
add
imul
fcomps
add
xor
adc
push
jecxz
sahf
jg
andb
out
stos
mov
js
xor
pop
std
or
rorl
inc
lahf
or
push
xlat
or
pop
filds
add
nop
rol
jbe
jo
adc
test
loope
jns
popf
aas
stc
stos
pop
nop
insb
pop
mov
add
rol
aas
xor
sbb
pop
andb
ds
push
outsl
lds
pop
mov
insb
lods
jnp
fsubrl
orb
cmc
add
test
fucomp
arpl
mov
lods
sub
stos
sahf
fidivs
inc
jecxz
xchg
add
aad
xchg
int
jg
loopne
pop
lock
in
imul
jp
jb
push
aas
xorl
xchg
inc
les
bound
xchg
scas
push
imul
or
jmp
rcll
jge
mov
loope
mov
aam
nop
ret
adc
aad
loop
les
mov
sub
ficoms
jno
jg
test
lea
bound
int
adc
je
jb
xlat
test
sub
push
jle
jmp
pop
andb
sbb
dec
or
inc
inc
dec
gs
mov
pop
int3
fs
iret
pop
and
out
arpl
dec
push
addb
es
sahf
pop
arpl
es
int3
mov
sub
xchg
lods
mov
mov
je
movsb
xchg
push
mov
jmp
in
pop
pop
xchg
xchg
sbb
repz
mov
add
and
leave
fs
lock
out
les
roll
adc
mov
cmp
and
les
ss
popa
ss
stos
jne
cmpsl
mov
repnz
add
fadds
mov
in
push
outsl
clc
loop
mov
inc
scas
cwtl
mov
cmp
jmp
insb
test
ret
mov
lods
sbb
imul
int3
ja
aas
or
mov
negb
mov
add
out
inc
dec
cwtl
pop
dec
inc
test
lds
nop
xchg
std
js
adc
out
and
enter
ret
inc
imul
sub
bnd
and
jg
cmp
test
mov
sub
mov
jns
jne
sbb
xchg
add
pop
dec
in
sbb
iret
pushf
lcall
xchg
mov
sar
mov
test
daa
mov
pop
push
stos
loop
aaa
shll
pop
fadd
es
cli
movsb
add
sbb
add
inc
push
rorb
push
insb
and
iret
sbb
vmovups
xor
subl
sbb
cltd
xor
inc
mov
outsb
xchg
stos
jge
and
ja
xor
loop
int3
shld
dec
sub
dec
xor
mov
jp
out
mov
test
push
mov
xchg
inc
aaa
ret
leave
sbb
lods
iret
shl
lock
adc
enter
and
inc
es
mov
push
ss
ds
mov
mov
fs
sbb
fisubl
sahf
adc
lock
and
xor
inc
xchg
in
lods
adc
add
je
sti
jecxz
dec
mov
das
mov
ret
or
daa
fbstp
in
repnz
cmpsb
call
out
adc
cmpb
mov
xchg
in
pop
ja
mov
popa
sahf
loopne
mov
xchg
aad
scas
xchg
push
sub
mov
inc
js
mov
xor
cwtl
mov
loopw
daa
inc
sbb
outsl
adc
cmpb
xor
rol
fiadds
loop
mov
xchg
adc
out
xor
jmp
push
loopne
mov
dec
inc
sbbl
inc
fldenv
or
xchg
std
movsb
insb
or
sbb
sbb
pop
cld
lods
cmp
ds
test
jle
loopne
lods
cld
mov
inc
leave
inc
xor
jecxz
add
mov
cltd
test
mov
or
push
cwtl
idivb
int
xor
cmp
fs
lods
push
scas
fistpl
fcmovbe
fiaddl
cmpsb
and
into
adc
jp
cs
xor
inc
into
jns
negb
aaa
ret
or
aam
jne
xchg
mov
scas
arpl
ss
pop
loope
insb
adc
pop
repnz
push
out
cmpsb
pop
jbe
mov
mov
fcomp
mov
outsb
lods
and
pop
shrl
imul
push
test
das
out
push
jmp
dec
pushf
adc
roll
sbb
xacquire
scas
sbb
daa
push
jo
into
lret
jmp
mov
jno
jb
push
lahf
je
cmp
or
sbb
mov
mov
xchg
loop
sahf
mov
pushl
push
std
ja
lods
gs
mov
cltd
je
int
xor
test
imul
push
pop
fsubl
sub
call
xor
inc
aaa
inc
rolb
and
xchg
lcall
push
cmp
ffree
bound
mov
enter
pusha
addr16
xor
aaa
xchg
scas
mov
in
mov
nop
sbb
inc
lret
in
outsl
loope
adc
push
out
add
bound
fistps
das
insb
jb
lea
cmpsb
ja
stos
xchg
push
or
arpl
mov
mov
shlb
test
sub
icebp
loopne
mov
fiaddl
mov
cmpsb
fstpt
xor
and
cli
lea
sbb
outsb
lea
sti
sbb
repz
rcrl
loope
cwtl
inc
arpl
aas
add
ffree
outsb
arpl
push
xchg
xor
jp
movsb
mov
std
cmpsb
add
mov
mov
jecxz
rcl
gs
adc
cmpsb
das
mov
in
lea
push
insl
pop
mov
jbe
sub
push
jb
int3
cwtl
jle
sbb
xor
push
call
subb
pop
dec
inc
lcall
push
jmp
lds
pop
fadd
ja
int
cmp
xor
sbbl
push
push
dec
xor
mull
push
cmp
ljmp
ljmp
mov
dec
mov
mov
int
repz
push
lea
ss
les
mov
cmp
jl
fwait
leave
imul
xchg
adc
mov
adc
push
std
mov
out
sbbl
push
inc
lds
fsts
add
js
xchg
cs
sub
adc
aad
pusha
mov
jbe
fistpll
sub
shl
mov
dec
lea
lahf
dec
mov
cltd
in
cs
sti
in
ds
es
jp
cmp
adc
cmp
mov
fs
sub
cmp
mov
jns
pop
xchg
push
dec
js
pop
scas
loopne
cs
cmp
push
hlt
jo
xor
popf
jns
aaa
pop
inc
out
xor
pop
fstp
cmpsb
mov
push
cld
jg
testb
inc
rorb
imul
adc
shlb
leave
imul
pop
sub
pop
mov
push
add
pop
rorl
repz
mov
xor
sbb
test
lahf
jg
lea
sub
mov
fsubr
inc
mov
pushf
test
jb
cmpb
inc
add
mov
int3
pushf
in
cmp
inc
cmpsb
inc
dec
int3
scas
andb
jns
and
test
shrl
jecxz
enter
cmpb
xlat
cmp
adc
lods
mov
mov
xchg
call
cmpsl
and
cmc
subl
pop
mov
repz
push
out
ss
data16
sahf
add
jnp
in
xchg
int3
jmp
loope
mov
mov
lret
pop
es
pushf
mov
sub
lea
ss
cmp
xor
jmp
mov
mov
adc
push
test
adc
rcr
aas
and
divb
adc
cmpl
sarl
scas
ds
adc
adc
cwtl
not
test
adc
lret
xor
inc
cld
jns
dec
shlb
xor
jle
sahf
in
mov
cmpsl
jnp
cmc
and
xor
dec
xor
call
cmp
bound
bound
fwait
daa
add
decb
lret
popf
push
xchg
jae
pop
push
mov
xchg
dec
std
lods
jbe
pop
mov
mov
addr16
xor
mov
lret
lret
or
insl
sbb
test
mov
xchg
leave
xchg
xchg
jl
jne
mov
stos
js
xor
push
sbb
pushf
mov
ret
fisttps
stos
sbb
adcl
adcl
xor
je
std
inc
nop
pop
inc
dec
mov
mov
frstor
jne
sub
lds
ret
mov
inc
fidivrs
pop
push
jne
or
movsl
orl
in
leave
dec
cmp
cmp
js
ret
dec
push
dec
xor
push
test
and
mov
cmp
push
int3
popa
aad
xchg
repnz
and
sbb
cmp
xor
push
xor
push
mov
dec
push
andb
rorl
lcall
xchg
out
inc
dec
jo
test
xchg
jb
addr16
sahf
fidivrl
xlat
push
aad
mov
mov
sar
mov
repnz
cmpl
dec
sti
in
mov
je
repnz
aaa
or
enter
mov
les
idivb
out
add
das
xor
and
out
push
lret
mov
sbb
je
les
pop
or
dec
bound
mov
ret
out
je
out
test
sbb
push
adc
jp
into
adc
adc
pop
push
or
cmp
mov
cmpsb
into
vaddsubpd
fdivs
fmull
pop
aaa
mov
les
pop
dec
int3
aaa
mov
setae
add
push
push
sahf
mov
sub
into
sub
cltd
aas
sbb
rcrb
or
xchg
dec
vcvtsd2si
or
fcomp
pop
sub
jle
xor
cmp
imul
mov
adc
pop
jl
xchg
out
int3
mov
cmp
cmp
xor
push
inc
mov
sub
lahf
sbb
jle
je
sub
stos
xchg
js
mov
push
mov
dec
xchg
leave
sbb
cmp
jle
adc
jl
push
pop
fmull
stc
dec
cli
out
in
mov
mov
movsb
cltd
or
xchg
add
inc
out
inc
lea
ja
int3
add
aas
inc
add
mov
and
push
push
cwtl
out
ret
xor
mov
mov
add
nop
cmpb
rcr
mov
les
pusha
adc
insb
test
sub
xor
xor
ss
jo
pop
insl
push
outsl
push
pop
cmp
fbstp
and
idivl
mov
cmpsl
pop
js
xor
add
aaa
pop
pop
xor
sub
and
mov
movsb
and
cmpsb
mov
pop
cld
subb
loope
bound
mov
inc
lcall
jo
ret
jb
sub
test
jp
pop
xor
shll
mov
stc
adc
rorl
aad
enter
out
stos
hlt
mov
cli
imul
and
adc
cmpsl
jns
adc
aad
cmp
imul
sub
bound
test
ljmp
xchg
bound
mov
cmp
adc
mov
mov
or
ljmp
sub
xchg
sbb
mov
xchg
call
mov
or
push
pop
jns
jb
sahf
cltd
xor
test
mov
aaa
clc
adc
sub
adcl
ljmp
call
int
push
jecxz
inc
sub
ja
dec
insl
or
add
data16
adc
les
insl
test
cmp
push
or
xchg
hlt
popa
mov
mov
jno
gs
dec
pop
cmp
xor
pop
bound
jbe
shrb
mov
inc
mov
iret
outsl
jg
ljmp
ds
subl
call
inc
or
ljmp
pop
ret
cmc
xor
inc
leave
inc
ret
sbb
mov
pop
bound
add
gs
test
jle
sbb
cli
mov
mov
das
jle
movsb
mov
sub
pushf
push
dec
loopne
sub
fwait
mov
faddp
icebp
in
jle
imul
mov
ret
mov
sub
push
mov
dec
xchg
iret
mov
xor
lcall
ds
dec
ja
push
mov
aaa
fs
fcoml
outsb
loopne
add
mov
stos
mov
aas
cs
xchg
mov
xor
push
add
add
aaa
dec
cmp
xchg
pop
mov
mov
iret
scas
lret
sahf
aad
orl
push
jnp
add
push
mov
int
bound
push
out
sub
aam
or
mov
jl
icebp
dec
inc
inc
fldt
ffree
mov
or
xor
sub
in
fdivs
mov
pop
daa
insl
jmp
clc
pop
fisubs
cmp
mov
insl
leave
adc
push
or
jnp
sbb
ss
add
adc
dec
cli
jecxz
into
shll
or
roll
jno
cltd
push
jne
cmp
fcoms
or
and
inc
pop
push
mov
mov
adc
lahf
xlat
shrl
cmpsb
stmxcsr
lret
data16
aam
dec
or
adc
xchg
push
and
outsl
adcb
sar
mov
jge
mov
mov
cmp
jo
xchg
add
mov
add
lahf
sub
xor
pop
cmp
lods
daa
das
add
ljmp
push
push
mov
push
int
dec
pop
push
insl
xor
fidivs
scas
rcrl
sbb
push
adc
cmpsl
daa
push
js
mov
fwait
hlt
repz
sbb
int3
xchg
or
add
test
loope
sub
ss
lldt
pop
ffree
jl
sbb
mov
mov
inc
fdivrl
mov
dec
dec
xchg
pop
icebp
add
xlat
lret
cltd
enter
mov
sbb
dec
dec
mov
out
loope
jmp
mov
mov
je
mov
and
and
clc
lods
int3
pop
dec
test
hlt
sub
aad
gs
arpl
in
in
mull
lret
mov
jo
cmp
std
push
hlt
xadd
in
xchg
into
mov
mov
fcoms
scas
fisttpll
push
push
jge
mov
lret
mov
ret
pop
push
aas
pushl
cmpsl
lods
loop
mov
fidivrs
mov
addr16
mov
loop
xor
imul
mov
add
lret
icebp
enter
jbe
mov
mov
popf
rcll
fstp
cltd
jbe
adc
enter
adc
outsl
imul
div
cmc
int3
jae
jle
loop
stc
xchg
aam
ja
aam
push
cltd
test
test
outsb
leave
and
pop
pop
jno
imul
ja
mov
adc
fwait
xor
stos
pop
and
cmp
adc
outsl
mov
ret
aam
bound
xor
and
xor
add
pusha
cmp
add
stc
ljmp
or
add
push
cmp
icebp
or
add
push
outsb
leave
adc
loop
ja
leave
pushf
xchg
mov
cmpsl
jne
xor
sbb
mov
pusha
cmp
sub
int
std
das
cmp
or
add
mov
cmp
sub
xchg
xorb
lods
mov
xor
int3
cmp
ret
imul
in
adc
aas
notb
lahf
mov
sbb
gs
enter
jp
xchg
popa
mov
mov
data16
pop
mov
jo
sbb
push
adc
bound
sbb
push
sbb
inc
jp
sub
xchg
inc
mov
insl
inc
xchg
aas
cld
mov
les
mov
jne
lcall
fucomp
shll
das
and
ficomps
cli
flds
pop
push
jl
dec
push
push
mov
jge
lahf
jp
std
xchg
or
lret
loop
xlat
dec
rolb
push
mov
lea
mov
cmp
fmulp
add
lret
pop
lret
rclb
inc
loop
fsubrs
adc
dec
dec
jle
lahf
inc
mov
and
notl
scas
cmp
mov
adc
lock
push
out
and
sub
ret
idivb
int3
test
mov
dec
cs
jge
pop
outsb
and
ja
cli
pop
imul
outsb
push
lret
pusha
in
jns
jo
mov
xlat
subb
xchg
pop
adc
sbb
in
pop
push
jp
cmp
cmp
pop
mov
jmp
push
repnz
add
push
cmc
aaa
dec
xor
inc
imul
sarb
pushf
pop
xor
mov
arpl
cmpl
sub
or
push
stos
pop
mov
jl
rclb
inc
imul
cmp
sub
daa
sbbl
jge
roll
mov
inc
and
mov
jecxz
lock
xor
sub
mov
out
lea
cmp
cmpsl
pop
cmp
xchg
ret
mov
imul
enter
sbb
pop
mov
xchg
push
pop
sbb
in
adc
mov
mov
or
dec
mov
dec
mov
dec
sub
fwait
lea
pop
sbb
jne
xor
xchg
int3
out
ret
ljmp
stos
js
and
cwtl
or
aaa
mov
mov
outsb
jp
cmc
adc
ret
xchg
ljmp
sahf
and
mov
lret
insl
or
lods
ret
or
mov
or
repnz
bound
mov
sub
add
movsl
mov
int
mov
mov
pop
xor
ret
dec
lods
adc
sub
fsubp
scas
dec
and
sub
mov
dec
lds
iret
sub
iret
mov
inc
daa
aad
add
imul
adc
and
mov
fisubl
loop
mov
outsb
mov
dec
push
dec
aaa
inc
or
dec
scas
notl
int3
adc
jg
mull
cmp
ja
lea
or
ja
addr16
xchg
and
push
push
ds
std
fmuls
jbe
push
fisttpl
rcrb
shr
std
loope
push
aad
out
jge
jecxz
out
mov
jmp
jp
negb
lock
mov
cli
sbb
in
mov
or
and
mov
or
jns
dec
jae
push
jp
xchg
fildll
push
mov
mov
or
and
or
test
sahf
or
mov
and
hlt
adc
leave
push
inc
mov
test
xchg
or
in
popa
dec
jle
or
mov
mov
daa
cmp
enter
and
adc
insl
xchg
push
push
cmp
pop
pop
mov
xchg
rcr
sub
je
pop
shrb
pop
cmp
js
rcrb
cmp
gs
pop
adc
ds
mov
sti
xor
inc
mov
push
add
aas
or
daa
out
cmp
fbstp
lcall
pop
loop
jecxz
insl
adc
pop
or
sahf
and
xchg
push
mov
jno
mov
outsb
or
push
stos
iret
or
mov
xor
pop
sub
cmp
addr16
and
mov
rclb
imul
cmp
fs
and
pop
fiadds
xchg
enter
xchg
insb
xchg
cmp
jg
popf
mov
aad
lahf
push
push
aaa
sbb
mov
pop
jnp
adc
jg
mov
jge
and
push
ljmp
mov
xor
and
pop
int
jbe
xor
add
and
mov
pop
lods
stos
xor
pop
mov
mov
cmpsb
sub
add
mov
insb
and
dec
in
cmp
jp
pop
in
add
jmp
mov
into
push
hlt
sahf
dec
lret
arpl
loop
lret
mov
ljmp
mov
sbb
add
outsb
mov
dec
pop
cmp
loopne
mov
ret
mov
mull
sbb
call
mov
xchg
lret
add
cmp
mov
sbb
mov
std
jle
arpl
out
sbb
fsub
clc
repnz
xor
lock
mov
test
xchg
add
xchg
pusha
push
in
mov
pop
pop
pop
add
lahf
mov
lock
xor
in
jecxz
orb
jp
dec
or
subb
push
call
fwait
push
push
and
jno
inc
fimuls
xor
sub
mov
pop
sahf
adc
mov
sbb
hlt
das
inc
jae
lods
pop
jmp
ret
sahf
sbb
mov
test
jno
mov
push
sahf
mov
xchg
sub
pop
and
ret
insl
aaa
adc
fwait
add
insl
sub
jle
imulb
xor
lds
xor
jp
pop
movsl
fdivl
push
or
or
rclb
adc
jb
shll
xchg
test
mov
in
adc
and
fisttpl
jecxz
dec
mov
push
or
aas
add
sub
imulb
add
inc
xchg
out
mov
or
movsb
scas
jp
or
jae
arpl
pop
add
sbb
call
mov
subb
pop
shlb
pop
cmc
push
test
mov
sahf
xchg
xor
jo
mov
fildll
mov
pushf
mov
int3
add
jae
and
and
lods
out
cmp
ss
push
lret
jbe
dec
in
stos
mov
xchg
adc
jno
push
jb
mov
sub
popa
in
jp
std
mov
dec
jnp
into
sbb
into
fs
pop
popf
lea
outsl
xchg
jb
test
popa
xchg
js
loop
repnz
insb
inc
jbe
sub
jle
sub
ficoms
leave
call
out
sub
mov
aad
mov
repnz
push
mov
mov
lea
popa
subl
call
jle
xor
adc
je
shrl
bnd
fiadds
mov
sub
jnp
inc
sbb
mov
shr
sub
inc
cmp
int3
popf
pop
ret
xchg
mov
loope
jp
pusha
gs
push
dec
addr16
and
movsl
cmp
mov
xor
loopne
dec
out
cmp
or
shlb
push
and
sti
and
add
std
push
in
dec
les
dec
fdivrl
adc
roll
xchg
daa
and
loope
test
pop
add
xchg
dec
je
cmp
push
test
sbb
cli
push
inc
dec
mov
xchg
int
sbb
sub
add
add
fs
std
mov
mov
cmp
xchg
ljmp
push
xor
scas
es
mov
and
pushf
into
popf
mov
dec
add
cmp
xchg
pop
xor
push
add
scas
dec
mov
hlt
leave
add
lods
adc
pop
xchg
jno
xchg
fcmovne
out
cld
pushf
sti
in
inc
dec
add
jnp
mov
dec
xchg
cmovnp
into
into
cmp
ljmp
mov
ret
mov
pop
mov
jecxz
je
adc
aas
out
push
push
lret
outsb
jecxz
and
fsubs
repz
das
lds
lock
push
das
lret
lret
int
add
sbb
and
loope
stc
jecxz
jp
fsts
loope
push
push
push
xchg
inc
shll
xchg
push
jae
imul
pusha
dec
sub
adcb
jp
insl
inc
push
sbb
orl
xlat
imul
in
sub
pop
or
mov
dec
mov
sbbb
cmp
lds
test
fs
push
repnz
mov
popw
inc
hlt
cli
lock
sub
int3
inc
stos
pusha
pushf
cmpsl
or
inc
movsl
outsb
xlat
push
bound
in
hlt
jb
mov
mov
subl
stos
mov
dec
and
cld
xchg
fcoms
or
cmp
pusha
inc
movsl
add
pushf
sbb
inc
jp
sub
scas
cmc
push
inc
inc
mov
fwait
dec
rolb
or
pusha
or
cmp
test
insl
or
inc
push
xor
jg
test
movsl
mov
fsubl
and
in
addl
and
xlat
scas
int
pop
outsl
xor
pop
jne
sub
adc
add
fstpl
popf
std
lds
iret
clc
dec
xchg
mov
or
mov
mov
imul
setg
mov
clc
out
hlt
pop
pop
ret
fists
dec
sbb
push
jo
out
aaa
pop
sub
add
sbb
ror
popf
inc
sar
jae
jmp
pop
mov
xchg
movsl
inc
mov
or
mov
cmp
xchg
movl
cmc
xor
fistps
cmp
ja
enter
sbb
scas
ljmp
mov
jb
jb
sbb
jg
inc
out
push
mov
ret
xlat
dec
iret
xchg
jmp
jmp
into
test
pop
or
lret
mov
xchg
rep
cltd
hlt
and
insb
and
adc
ret
mov
inc
mov
neg
push
xchg
push
jae
cmp
scas
imull
add
cmp
mov
and
fsubs
bound
xor
sub
mov
clc
out
mov
lret
fwait
cmp
mov
sub
pop
dec
jl
mov
mov
jle
imul
dec
cli
outsl
pop
inc
sub
pop
xor
jecxz
dec
jg
adc
dec
pop
push
xor
divl
inc
and
xor
shrb
movsl
pop
adc
adc
push
in
add
add
mov
nop
mov
ljmp
mov
lods
xchg
or
add
scas
dec
das
mov
mov
aam
inc
repz
hlt
out
ret
mov
or
repz
mov
push
mov
push
int3
call
fld
cmp
mov
jp
add
and
pop
xchg
out
or
int
cmp
scas
shll
add
mov
lds
xchg
mov
dec
jmp
fcom
mov
das
jns
sub
stc
jns
mov
int3
outsl
and
mov
cmp
mov
cmp
push
push
pop
aad
mov
mov
jns
cmpsl
jae
lret
je
add
movups
imul
idivl
pop
mov
aam
and
mov
test
aam
incl
cld
aas
shlb
pop
pop
fwait
test
cmp
gs
addr16
mov
mov
popf
jmp
std
leave
jo
movsb
mov
push
and
loop
push
inc
sub
pushf
outsl
xchg
mov
call
repnz
xchg
sbbb
push
cli
inc
adc
inc
adcb
das
inc
mov
mov
sbb
scas
sub
cltd
or
mov
pop
scas
andl
jp
out
xor
sbbb
in
in
dec
or
and
jp
and
in
aas
sub
pop
ljmp
mov
sahf
sub
fiadds
pop
mov
and
jae
cmp
hlt
or
ljmp
pusha
xor
inc
mov
shlb
jne
test
sub
xlat
mov
xchg
js
adcl
mov
mov
test
pop
aad
fidivrl
dec
ret
push
xchg
pushf
jecxz
jns
cltd
adcb
jmp
outsl
loope
xchg
push
sbb
test
ret
lds
sub
and
ds
mov
or
rcr
mov
cmp
adc
xor
fldl2e
out
aam
popa
adc
lea
pop
dec
test
fistps
call
sbb
outsb
jge
mov
push
sub
sbb
mov
adc
rcrb
enter
jno
lahf
or
inc
mov
shlb
mov
xor
ret
les
rorl
push
or
push
or
lcall
lret
cmp
push
adc
repz
lahf
dec
xor
stos
mov
pop
out
push
push
mov
xor
movsb
and
dec
cmp
arpl
cmpsb
imul
fiadds
aaa
adc
inc
test
jecxz
inc
jmp
and
push
ret
mov
outsb
andb
out
inc
ja
cltd
mov
shrl
dec
mov
fsubrs
gs
dec
test
push
outsb
dec
push
adc
sbb
mov
addr16
or
sahf
sbb
mov
push
int
les
add
cwtl
pop
mov
dec
mov
mov
addr16
ret
pop
aaa
cmp
xor
scas
adc
orl
jecxz
and
hlt
inc
cmp
test
xchg
xchg
cwtl
mov
push
iret
orb
lahf
test
rorl
pop
sbb
cwtl
ja
or
addr16
xor
shlb
fisttpll
pop
adc
shrb
enter
inc
in
stc
inc
jl
pop
hlt
cmp
fnsave
or
xor
sarb
pushf
pushf
inc
or
inc
andnps
sbb
or
out
sub
sbb
cli
push
jo
icebp
jmp
xchg
push
out
add
pop
mov
cltd
mov
jg
imull
mov
xchg
je
dec
repnz
sbbb
lret
in
insb
mov
int
adc
outsl
xor
inc
inc
and
push
mov
mov
xchg
sti
xor
mov
bound
sbb
pop
xor
mov
inc
pop
xchg
push
xor
out
push
mov
mov
pop
ret
xchg
jge
loopne
cs
mov
iret
cld
ljmp
xlat
andl
jl
sub
jecxz
mov
mov
pop
scas
shl
jge
cmpsl
xchg
icebp
mov
pmaxsw
stos
daa
xchg
fs
mov
sub
sbb
mov
out
sbb
xchg
jmp
pop
mov
lret
out
push
leave
xchg
mov
push
dec
shrb
ss
jnp
stc
iret
xor
push
addr16
sub
mov
test
addr16
ret
dec
dec
imull
aam
ficomps
test
les
xor
jae
dec
repz
adc
fs
mov
pop
icebp
and
push
jmp
outsl
sub
clc
andb
pop
mov
call
int
sbb
and
add
idivl
mov
xchg
lcall
mov
cmp
ljmp
outsl
push
jne
cmovg
add
out
inc
les
cmp
pop
pop
jmp
cmpsl
leave
pop
adc
cmpsb
rolb
sbb
sub
inc
mov
test
sub
std
ror
mov
mov
push
aaa
inc
jecxz
loop
cli
mov
scas
jbe
testb
cli
in
jns
add
les
sub
cmp
cld
in
ret
xchg
popa
jo
outsb
and
sbb
pop
xchg
sub
cmpl
and
mov
cmp
mov
jecxz
popf
inc
sbb
sub
shrd
cld
or
arpl
mov
mov
lea
es
push
sub
jg
inc
movsl
test
inc
mov
add
or
push
mov
lcall
call
cmc
push
xchg
push
icebp
jns
mov
sbb
mov
adc
xor
fsubl
jo
jle
js
xor
popl
ds
aas
add
jno
movsb
lret
sub
or
loop
out
xchg
jle
cwtl
pop
jg
mov
lcall
cwtl
movsl
inc
cli
hlt
push
les
and
das
arpl
in
test
mov
fimull
inc
or
loope
aaa
mov
int
jnp
add
xchg
dec
mov
xlat
pop
ljmp
ret
xor
incl
mov
out
in
cmp
in
mov
scas
sub
ja
in
adc
push
insl
adcb
sub
rorb
addb
dec
popf
icebp
dec
add
fcomi
fwait
push
mov
jecxz
xchg
push
stos
sti
in
mov
scas
add
xor
stc
test
rcr
mov
les
scas
mov
jl
decl
cmp
inc
and
dec
cmc
repz
ss
xchg
testb
fildl
inc
jg
sub
test
sub
or
ret
inc
add
das
shrl
das
sbb
adc
add
push
or
stos
add
aam
aad
mov
sub
mov
mov
lcall
mov
outsb
push
mov
rorl
and
and
xchg
jp
jg
movsb
pushl
movb
js
lcall
pop
lock
and
in
rcll
add
ret
dec
pextrw
lods
mov
xchg
pop
cmp
cmpsb
andl
int
call
push
jecxz
mov
jb
xlat
mov
out
sub
inc
add
daa
fsts
shlb
jno
pushf
jae
xor
xchg
test
in
pop
adc
push
inc
or
daa
call
xor
sub
xchg
pop
fisubs
clc
pop
or
add
imul
mov
xchg
mov
jge
ficoms
sbb
mov
pop
pop
cmp
clc
out
nop
jb
jae
adc
lret
je
decb
jno
dec
es
jecxz
dec
pop
aas
or
xlat
mov
push
popa
stos
sti
int3
fwait
xlat
mov
out
cmpsb
push
xlat
imul
sub
dec
cmpsb
jp
dec
sub
es
aam
arpl
pop
outsb
fisttpl
outsl
mov
mov
aas
mov
cs
sub
xchg
add
add
cmp
ret
xchg
push
mov
jb
jno
jnp
dec
push
test
lods
mov
jmp
and
inc
jmp
xchg
adc
stos
out
jge
loop
mov
or
inc
sub
dec
xchg
adcl
jmp
scas
jae
cli
fwait
push
cmp
pop
out
xchg
jle
xchg
jns
ds
xchg
xchg
push
and
xor
inc
es
jp
or
pop
push
inc
push
iret
sbb
icebp
leave
jmp
test
add
mov
imul
in
scas
jns
out
mov
movsb
test
fs
push
hlt
mov
ja
and
addr16
into
fwait
adc
adc
mov
pop
jbe
and
or
mov
lret
or
sbb
loop
sbb
inc
addl
std
fcomip
ja
sbb
push
adc
ds
cmpsl
out
bnd
aaa
jp
outsb
popf
cmp
push
fs
push
push
dec
insb
cmc
or
insl
test
in
notb
push
and
mov
and
in
cmpsl
push
fwait
ss
dec
daa
pop
push
test
mov
inc
sbb
loop
scas
or
in
jecxz
dec
fsubl
xchg
mov
out
ja
cld
std
dec
sbb
iret
or
aam
jecxz
dec
jp
js
xchg
popa
push
jg
jecxz
clc
xchg
mov
or
xor
push
pop
xor
arpl
add
adc
add
jne
cwtl
mov
push
ja
enter
cli
pop
stos
xchg
notl
xor
testb
subb
mov
daa
xchg
sbb
fldenv
mov
xor
sbb
lret
adc
pop
adc
loope
divb
test
imul
sub
add
add
in
pusha
scas
popa
cwtl
xchg
fidivrl
pop
xchg
adc
dec
jle
and
or
aad
aas
scas
popa
ret
adc
out
loope
mov
cmp
pop
or
push
adc
shlb
push
repz
xchg
cltd
inc
cmp
inc
sbb
xchg
cmpsb
out
mov
loope
adcl
mov
sti
arpl
mov
jns
add
and
jae
cmp
fsubrl
mov
in
pop
into
sbb
and
test
aaa
xchg
in
jne
jb
add
mov
out
xchg
pop
pop
outsl
stos
mov
ja
cmp
xor
sbb
add
pop
cwtl
jbe
cmc
pushf
jnp
repnz
scas
push
pop
adc
dec
inc
fimull
jbe
jmp
icebp
xor
and
pop
outsb
stos
stc
or
push
dec
inc
cmc
dec
shlb
xchg
jno
hlt
pop
push
add
push
stos
clc
jecxz
mov
aam
jae
cmc
cmpsb
pop
xchg
mov
int3
push
xchg
inc
jecxz
add
cmp
rorl
mov
and
xchg
cs
mov
add
repz
test
jg
pop
arpl
outsl
adc
scas
xor
hlt
mov
aad
or
pop
adc
cmc
xchg
cwtl
in
rclb
ret
pushl
pop
std
jecxz
lret
bound
dec
mov
inc
lds
leave
push
into
out
aad
push
jb
mov
icebp
ficomps
imul
icebp
decb
aaa
cs
xor
js
arpl
mov
mov
fsts
out
mov
and
xor
bound
mov
jb
shl
sbb
fisubl
subb
pop
dec
add
idivl
test
outsb
pop
scas
in
outsb
stc
xchg
dec
nop
push
test
pusha
lds
insl
loopne
xchg
xor
jae
cld
jne
flds
cmp
sbb
sub
push
aaa
push
dec
pop
sti
xchg
or
lret
mov
and
shr
xchg
push
inc
cmp
cli
in
repz
xor
or
sub
clc
push
pop
test
icebp
xlat
lret
fstl
inc
pop
dec
xor
mov
inc
mov
add
leave
pop
jns
push
pop
shlb
mov
mov
mov
addr16
int3
jl
lods
rcrl
ficompl
dec
aam
filds
push
mov
mov
jb
cwtl
dec
inc
sub
stc
sti
jl
mov
shrb
lcall
inc
adc
pop
cmp
mov
rcl
out
or
or
xlat
stos
mov
adc
lret
mov
stos
dec
inc
shr
mov
inc
mov
add
push
test
stc
cltd
popw
movsl
inc
out
outsl
jl
pop
jnp
push
daa
and
cli
fnstsw
mov
cld
dec
pushf
neg
mov
scas
inc
leave
aam
sahf
sahf
loopne
adc
xor
or
int3
xor
movsl
xor
lods
filds
jno
cmc
jnp
lahf
dec
sub
stc
in
or
xchg
mov
shrb
push
shll
test
inc
add
in
fdivrs
pop
test
push
inc
ret
test
scas
mov
xor
pop
enter
insb
fiaddl
rorl
loopne
std
jae
add
in
dec
xlat
mov
sbb
adc
clc
or
aam
in
mov
jecxz
adc
ret
and
sarl
neg
in
aam
inc
cmc
mov
jg
xlat
test
aad
push
mov
test
push
or
imul
div
sarb
mov
fwait
cmpsl
test
fstpl
dec
add
cld
repz
pop
movsl
dec
inc
popl
mov
fisttpl
sahf
sbb
pop
mov
out
enter
std
fidivrs
in
cmp
cmp
stc
out
mov
push
and
or
loop
or
lds
dec
adc
xchg
xor
mov
mov
pop
stos
xchg
lret
stos
cmp
pop
hlt
pop
jbe
addl
xchg
in
pop
or
scas
xor
mov
adc
inc
jno
into
or
test
dec
cmp
inc
pop
fsubp
dec
out
out
sbb
rcrb
or
adc
test
decl
orb
mov
rolb
jnp
jb
push
jno
enter
lcall
xchg
imul
pop
adc
xchg
or
popa
lods
lcall
lahf
shrb
jb
cli
pop
mov
xchg
scas
push
clc
push
push
cmp
pop
xchg
inc
mov
inc
sub
pop
lods
add
mov
aam
test
xchg
repz
loope
mov
shl
cmp
mov
pop
sbbb
jmp
pop
add
xchg
sbb
dec
insl
aad
out
addr16
lret
js
pop
inc
cld
sub
scas
jecxz
fsubs
sub
shll
inc
mov
mov
xchg
xchg
or
and
dec
push
aam
push
and
in
xchg
fwait
je
in
cmp
pop
inc
outsb
movsb
test
mov
or
in
pop
pushf
xor
test
into
aas
add
push
mov
xor
mov
filds
aaa
xchg
sub
std
cmp
movsb
mov
or
cs
inc
test
cwtl
add
icebp
into
pop
mov
adc
adc
mov
gs
push
insb
cmp
and
mov
dec
xor
mov
mov
cmp
mov
mov
xlat
mov
add
das
xor
xor
and
outsl
es
adc
sub
xor
sub
jmp
inc
mov
aam
sbb
fstl
xor
lods
hlt
adc
lret
xchg
push
or
cmp
and
xor
or
mov
lea
push
mov
pop
dec
xchg
sbb
mov
lds
movl
jne
or
push
mov
cmpsb
mov
cmpsl
ljmp
outsl
lret
dec
xchg
jmp
mov
cmp
push
push
xchg
jle
inc
pop
or
loopne
arpl
mov
stc
ret
pop
fsts
aad
test
fcmovbe
xchg
stc
jl
push
add
mov
rol
and
xor
adc
mov
mov
xor
orl
dec
fisttpll
push
pop
out
sbb
xor
inc
mov
push
loop
pop
dec
mov
fbstp
cltd
out
push
lahf
aaa
cmp
fcmovu
and
enter
and
and
inc
mov
stos
leave
into
pop
pushf
sti
jae
loope
movsl
push
xor
int3
aaa
ret
and
call
or
mov
inc
repnz
fsubs
sub
sbb
pop
add
sub
dec
lahf
aas
sub
lock
scas
cmp
fmuls
mov
xor
pop
out
dec
ljmp
repz
and
add
mov
and
repnz
jle
mov
mov
sbb
sub
loop
add
out
cmp
jl
jg
jp
dec
mov
jmp
sub
dec
add
xchg
pushf
pop
inc
scas
and
sub
jno
test
rclb
sbb
adc
popf
lahf
push
insl
daa
jnp
ljmp
mov
out
cltd
leave
push
bound
inc
ret
int3
jmp
cmp
dec
aad
insl
jns
lea
div
cs
pusha
sub
inc
fmul
cmc
icebp
jno
pop
js
in
adc
in
cltd
movsb
leave
push
sti
or
popa
mov
fistl
and
and
test
and
push
mov
loop
cmc
cmp
add
popf
mov
sbbl
fisubrl
inc
sarb
sub
jge
imul
sti
jno
push
cli
pop
adc
inc
aas
nop
in
xor
movsl
mov
xchg
loop
mov
insl
push
test
sti
rcrb
inc
jnp
mov
das
jge
xchg
pop
sbbl
pop
push
in
lods
adc
mov
cltd
mov
ret
push
jae
xchg
cwtl
fcoms
jp
addr16
jo
test
test
cmp
jo
rcl
push
jp
sub
pop
out
pop
std
mov
cmpsl
es
push
adc
hlt
inc
loopne
push
les
inc
das
jge
jle
fmul
push
adc
pusha
std
pop
nop
clc
in
cwtl
mov
ds
aad
push
jmp
mov
enter
roll
dec
roll
mul
mov
out
pop
into
add
mul
clc
imul
cmp
dec
lds
shlb
adc
ja
lds
jmp
xchg
pop
cld
shl
mov
cmp
or
cmpsl
add
shl
add
push
jg
push
iret
lods
mov
push
int3
mov
mov
sar
repnz
dec
fstpt
je
jmp
sub
addl
cli
aad
sbbl
cmp
mov
inc
andb
in
stos
adc
jae
dec
cmpb
dec
popa
dec
out
shr
xchg
loop
ljmp
cltd
shrb
notb
pusha
jg
sbb
push
add
push
loop
push
mov
dec
lcall
add
data16
xor
movsb
jle
and
dec
daa
add
xor
je
out
stc
into
je
or
xchg
sti
mov
pop
jo
subb
sbb
inc
add
sbb
cwtl
insl
jns
sbb
out
inc
xor
mov
imul
orb
cli
xchg
mov
jne
bound
aad
mov
and
jo
xchg
cwtl
push
jb
xor
ja
xor
xor
and
xor
out
pop
push
jle
push
int
xlat
pop
pushf
mov
fcoml
mov
lds
je
xor
in
enter
lods
mov
push
out
add
imul
jbe
fprem1
icebp
dec
mov
jbe
fxam
int3
xchg
sahf
lret
movsb
push
mov
gs
inc
sbb
mov
outsl
nop
push
mov
loopne
xchg
push
imul
adc
mov
int3
popf
arpl
in
jns
sbb
outsl
push
adc
cli
xchg
cmp
add
imul
inc
mov
out
jnp
jmp
hlt
aad
test
mov
cltd
lds
mov
ds
mov
std
inc
sbb
movsw
sub
popa
gs
xor
jmp
mov
and
in
mov
mov
ss
in
jno
cmpsl
cmc
cld
mov
movsl
gs
dec
sti
pop
push
jecxz
fidivrs
inc
lock
popaw
popa
sub
inc
dec
cmp
iret
pop
or
push
outsb
pop
pop
fmuls
decl
shr
jbe
pop
sahf
mov
mov
inc
popa
xchg
mov
shrl
dec
pop
jb
jl
lret
std
cmp
dec
cmc
hlt
lret
das
mov
jne
outsb
rolb
clc
mov
sbb
dec
adc
xor
adc
fs
subb
sbb
fstps
ror
lret
popf
nop
xchg
adc
subb
push
data16
and
call
repz
sahf
mov
outsb
dec
pop
push
shl
sub
addr16
xchg
inc
cltd
xchg
enter
mov
out
stos
or
popf
imul
shll
mov
jne
outsb
in
cld
and
cmp
enter
add
bound
hlt
popf
ret
adc
xchg
loopne
mov
adc
cmp
testl
outsl
pop
jne
or
cli
push
pop
sbb
xlat
sbb
ficoms
xchg
gs
das
add
in
scas
mov
pushf
cs
and
inc
sbbb
rcr
dec
out
outsl
jns
orb
dec
jp
cmp
ret
or
sub
int
jne
cmp
pop
out
or
and
outsl
mov
xor
pop
push
dec
mov
pop
sub
mov
int
xchg
jbe
xor
in
xchg
xchg
dec
lds
movsl
push
pop
sbb
xchg
pop
pop
addb
mov
stos
jl
cmp
daa
jae
xchg
mul
arpl
jecxz
pop
int
repnz
orl
out
sub
mov
xchg
mov
addr16
sbb
lret
loope
adc
mov
ret
jno
cmp
mov
leave
in
push
out
push
stos
les
test
loop
jns
xor
das
mov
xor
xchg
pop
xchg
hlt
das
add
rcrl
fs
dec
movsb
lock
popf
pop
arpl
lret
cmpsl
jno
fidivl
sbb
je
dec
icebp
in
xlat
inc
or
subb
clc
xchg
sbb
fdivrs
xor
xchg
xchg
fisubrs
pop
out
mov
pop
push
pop
jns
and
test
imul
fidivrl
aad
int
fstpl
stos
mov
ret
adc
in
movsl
imul
inc
lret
and
adc
mov
notb
pop
push
push
ret
sub
and
inc
data16
incl
pop
pop
dec
dec
stos
aam
mov
mov
arpl
sarb
notb
movsl
cmp
cmpsl
mov
je
xchg
jno
cmp
test
jp
ljmp
vpaddusb
out
dec
pop
test
in
push
je
lahf
ljmp
mov
mov
std
or
sub
rcrl
xchg
pop
int3
sub
jno
repz
test
je
push
push
ja
out
data16
out
sub
lcall
addr16
rcrl
pop
xchg
xchg
xchg
xchg
and
inc
aam
int3
test
xchg
mov
aaa
in
pusha
jnp
sub
add
std
cltd
mov
enter
jb
mov
cmp
icebp
xchg
sbb
inc
add
jno
lcall
iret
sub
and
pop
in
dec
mov
inc
std
in
cmp
and
cmp
inc
out
popf
mov
sub
lret
ret
adc
movl
xlat
dec
je
cmp
pop
or
bound
std
pop
and
gs
and
jbe
pop
add
cwtl
push
cmpsb
sub
xor
mov
lea
idivl
ret
mov
addl
dec
gs
test
arpl
sbb
sub
and
ja
pop
sbb
lods
ficoms
cmp
les
scas
push
dec
cmpsb
add
mov
xor
mov
pop
rolb
jno
repnz
add
adc
sub
cmp
adcl
lcall
xchg
sub
mov
stos
scas
pop
cltd
push
arpl
jnp
addr16
or
hlt
xor
pop
into
dec
daa
cltd
mov
push
cmp
and
data16
rorl
sub
out
movsb
inc
adc
stos
sub
jmp
jmp
addb
sbb
sbb
ljmp
xor
insb
scas
dec
pop
fisubs
sarl
sbbb
push
lret
jmp
mov
addl
cmpsl
xchg
mov
leave
loop
cld
mov
mov
call
ja
ds
xchg
mov
into
lcall
sub
cs
push
ss
sbb
sub
pop
mov
xlat
and
sbb
mov
ds
cmp
imul
cmp
mov
repz
les
int
sub
dec
push
ja
jns
cmc
leave
fstps
les
repnz
xchg
scas
enter
sbb
mov
adc
int3
or
js
pusha
into
xchg
mov
jnp
and
aad
dec
cmp
icebp
fwait
ret
pop
ficoms
lea
sbb
jns
loope
jle
push
mov
out
xlat
jle
dec
aad
dec
push
inc
dec
dec
push
xor
ds
bound
sti
in
cmp
pop
fisubrs
mov
jno
lods
dec
sbb
jl
btc
dec
sub
outsb
repnz
pop
jmp
jge
inc
jne
in
adc
test
cmp
xchg
pop
push
push
ljmp
and
and
mov
sub
or
call
ss
jns
jecxz
add
jae
notb
fucomi
in
rclb
mov
shlb
leave
aad
pushf
mov
jns
xchg
loope
les
sbb
jae
or
popf
loopne
jno
push
sub
dec
push
mov
push
in
dec
sbb
in
cwtl
add
lock
dec
push
push
test
out
clc
mov
fmuls
pop
xchg
testl
mov
push
adc
cld
cmpsb
sub
xor
jmp
dec
xor
or
jle
add
adc
dec
dec
mov
lods
lret
jbe
mov
inc
mov
repnz
sub
lcall
inc
js
and
mov
cmp
and
push
js
icebp
adc
ljmp
adc
in
xchg
mov
mov
mov
test
push
pop
pop
iret
mov
cmp
push
cmp
fwait
jle
les
jg
adcl
test
and
pop
xchg
mov
pop
pop
mov
enter
mov
cmp
aas
push
add
sbb
push
sbb
shl
xor
mov
sarl
sbb
imul
xchg
in
xor
fs
leave
xor
rol
xbegin
push
add
fsts
inc
cs
lods
ds
jecxz
scas
or
pusha
inc
nop
cmp
jp
mov
xchg
call
pushf
scas
sbb
mov
jns
bound
pushf
or
arpl
decl
lea
loopne
mov
leave
cmp
pop
aam
ret
jns
xchg
push
mov
adc
jl
pop
cmp
aam
fsubrs
aas
test
loopne
xchg
out
out
movsb
lock
ret
pop
js
inc
sub
inc
lock
mov
jae
out
pop
mov
mov
mov
pop
cmp
adc
cli
hlt
pop
pop
in
and
sub
jp
xchg
or
and
scas
add
iret
enter
and
sub
lret
int3
cltd
push
pop
sub
les
adc
mov
popa
lods
lret
jge
inc
stos
not
pop
xchg
xor
xor
jl
xor
and
push
or
leave
ja
pop
adc
cmp
pop
and
mov
adc
jmp
stos
test
and
mov
movsl
cld
adc
ljmp
dec
xchg
mov
fidivl
mov
cmp
sbb
inc
rorl
mov
arpl
out
xchg
in
loope
push
sub
or
dec
push
adc
sbb
pusha
ret
ud1
dec
add
xlat
imul
inc
icebp
dec
inc
cmp
xor
jnp
je
add
inc
insb
fs
outsl
aaa
xor
jne
add
gs
adc
sbb
aaa
fildl
lret
out
int
fsubrs
inc
jne
jno
mov
popa
adc
iret
cmpsb
roll
pop
mov
sub
data16
mov
adc
lret
push
jmp
push
mov
ret
mov
push
push
dec
dec
adc
int3
dec
loop
mov
sub
sbb
cmpsl
xor
popa
dec
repnz
rcl
int
icebp
cmc
out
int3
push
sbb
sbb
mov
xchg
clc
int
loope
addl
icebp
or
xor
stos
xor
ret
push
or
mov
mov
pop
adc
data16
pop
push
push
sub
out
sub
mov
xor
jae
cmp
sbb
mov
popa
int
insb
pop
adc
outsb
cmpsb
mov
rorb
mov
xlat
jae
int3
idivl
cmp
push
mov
jnp
sbb
in
add
in
pop
lock
xlat
sub
fisttpl
jmp
cmp
out
insb
arpl
in
mov
sbb
and
pusha
enter
sub
mov
es
imull
ljmp
lret
hlt
stc
pop
cmpsl
out
push
lock
push
sub
jcxz
cltd
jecxz
les
mov
adc
xlat
fs
hlt
jae
out
popf
fistps
add
fcomip
repnz
lret
inc
and
scas
clc
fdivl
lret
movsl
pop
daa
test
and
popw
cld
movsl
adc
orb
inc
dec
out
lods
push
sahf
inc
sub
les
jo
xchg
jge
pop
add
pushl
add
add
out
add
insb
ljmp
icebp
insb
push
or
xchg
adc
out
pop
inc
fidivs
jb
repnz
pop
in
jmp
inc
daa
xchg
shlb
clc
lcall
xchg
fcompl
pushf
jge
and
lock
fdiv
push
dec
push
adc
das
push
pop
lcall
dec
mov
es
xor
jp
rcll
dec
and
aam
repnz
cli
imul
xchg
push
pop
cli
adc
sub
inc
int
in
inc
les
addb
mov
jns
add
sub
cmp
lcall
lds
fs
leave
lret
jns
cmp
jp
loop
int3
ret
and
lret
mov
sbb
out
subl
leave
sbb
pop
pop
sbb
pop
inc
loope
shrl
push
sbb
hlt
subl
loope
xor
in
subb
pop
sub
mov
xchg
ds
xlat
out
mov
mov
cmp
insl
sub
lahf
and
clc
push
pop
unpcklps
or
loope
clc
cwtl
adc
cwtl
push
mov
lock
fsubl
mov
scas
pop
adc
cmp
xchg
das
btrl
push
mov
js
pop
and
jbe
dec
ljmp
gs
shr
rolb
mov
sbb
fbld
pop
js
lcall
lcall
lods
dec
imul
xor
cmp
lret
iret
mov
or
jb
dec
adc
and
sbb
jnp
insl
inc
jb
ret
adc
cmp
pop
sahf
sbbb
sub
push
mov
mov
shl
dec
pop
aad
push
or
and
je
enter
mov
mov
mov
mov
xchg
aaa
fbld
pop
aam
push
sbb
xor
pop
push
or
jno
sti
into
lods
sbb
addr16
dec
pushf
sub
ret
repnz
leave
and
add
clc
mov
insb
add
mov
sbb
pusha
lret
mov
xor
sarb
sub
mov
sub
push
pop
es
mov
mov
push
xchg
int
scas
movsb
add
in
daa
scas
gs
inc
xor
inc
and
adc
loopne
adc
xlat
in
cld
test
add
push
push
cmp
mov
shlb
ljmp
sti
adc
xor
inc
sbb
xchg
jle
cs
adc
add
icebp
in
dec
fisubrs
sbb
cld
cmp
cmpsb
xchg
xor
and
ss
jno
in
sub
add
pop
bound
stos
cmp
jle
fcoms
cmp
jmp
cmp
add
xchg
mov
test
subb
mov
mov
add
jbe
sub
std
add
sub
and
arpl
cmp
mov
test
xchg
ret
and
adc
clc
mov
cmp
in
loop
pop
andl
cmp
pop
maskmovq
notl
inc
cltd
popa
lret
mov
out
sub
pop
push
out
mov
mov
mov
jp
sub
adc
mov
es
push
gs
jge
aad
out
push
cltd
mov
ss
aam
mov
sub
lret
pop
add
jg
mov
mov
insl
shll
push
inc
push
adc
test
cmp
xchg
fstpl
cmp
call
jbe
or
jbe
jp
daa
out
mov
test
fidivrl
fsin
jecxz
mov
call
rorl
cmpl
movsl
cltd
stc
or
int3
pop
insl
push
imul
mov
popa
lock
cmpsb
pop
loope
les
pop
fs
hlt
mov
outsl
add
cmp
shll
mov
pop
mov
sar
addr16
inc
inc
adc
mov
cmp
sarl
sub
out
mulb
adc
fmulp
insb
call
pmulhw
sbb
mov
addr16
lcall
leave
or
add
testb
xor
movsl
in
mov
or
sbb
aaa
adc
repnz
push
inc
push
sub
fwait
mov
mov
push
jl
jae
xor
push
sti
testb
popf
push
inc
shlb
pushf
loop
ret
jo
ds
jge
out
iret
xchg
incl
sbb
add
fadds
mov
mov
mov
incl
test
mov
fdivl
notb
mov
shlb
lret
xorb
mov
call
push
sbb
mov
scas
test
clc
cmp
dec
add
iret
pop
aad
je
inc
int
outsl
sbb
test
clc
outsb
xlat
add
in
test
sub
xlat
jbe
dec
aam
lret
and
dec
cli
or
aam
jmp
jp
dec
mov
bound
add
sbb
fcmovne
loopne
aam
xlat
sub
push
je
icebp
adc
ss
loope
sbb
test
push
xchg
ds
scas
jno
push
imul
xor
mulps
aad
pop
pop
mov
lea
cs
int3
out
push
fildll
and
inc
fucomp
int
stos
add
sub
int
mov
jae
sub
or
push
pushw
es
push
pop
or
mov
gs
pushf
les
aaa
iret
gs
dec
call
shll
cmc
in
inc
pushf
or
sarb
les
lods
push
iret
sti
sbb
rorl
push
xor
pop
fisttps
push
stos
dec
or
inc
sbb
enter
rcll
lock
pop
pop
sub
daa
push
pop
mov
popf
or
outsl
out
sub
sbb
inc
pop
cmp
mov
test
in
movsb
in
xorb
imul
or
inc
scas
std
xchg
jmp
jo
sar
daa
ss
fisttpl
jmp
push
inc
push
movsl
movsb
mov
ret
xlat
iret
pop
cmp
sub
out
dec
sahf
inc
jp
loop
pusha
cmp
pushf
and
rcrb
sbb
add
hlt
mov
sahf
je
pop
push
psubusw
push
xor
dec
testb
jl
out
dec
and
test
outsb
rclb
mov
out
sti
xor
sub
pop
xor
lock
sub
gs
xor
hlt
stos
inc
loop
ljmp
jp
inc
icebp
dec
mov
mov
sub
jp
sar
sub
repnz
pop
jb
push
cmpb
sbb
push
jo
xor
mov
out
and
jg
xor
jmp
fsubs
xchg
sub
enter
adc
jne
fadd
pcmpeqw
xchg
push
adc
pop
lock
sarb
inc
loope
pop
sbb
lock
movl
icebp
mov
out
popf
ds
repz
xchg
sbb
mov
add
xlat
insb
push
rorl
movsb
into
cld
dec
adc
pop
dec
jne
xor
mov
ljmp
in
add
xor
push
pop
or
std
punpckhwd
call
dec
push
mov
dec
sbb
fwait
push
dec
pusha
filds
jecxz
push
cmp
add
rolb
dec
fstpt
andl
pop
insl
inc
sub
pop
cmp
in
imul
les
rorl
and
mov
sub
cld
pop
cmp
out
outsl
xchg
sub
je
xor
push
clc
test
les
fnsave
add
xor
icebp
shll
or
inc
xor
push
push
mov
pop
pushw
and
jne
pop
ljmp
dec
push
and
call
pushf
dec
ret
mov
lods
ss
aas
mov
cmp
adcl
push
lds
adc
jae
jb
idivl
into
outsb
sub
xchg
xchg
popa
push
or
fwait
jmp
adc
test
cmpsb
ret
jmp
icebp
mov
adc
rolb
xor
gs
pop
jnp
jae
inc
movsl
mov
or
dec
cmpl
push
shlb
lahf
stc
out
es
inc
arpl
jns
arpl
cli
xchg
int3
add
push
dec
add
in
or
in
mov
push
push
xor
or
dec
js
inc
fs
test
fcoml
test
adc
push
idivb
inc
stc
mov
push
data16
xlat
jbe
adcb
arpl
test
enter
push
fstp
fiadds
inc
test
popa
or
cmc
adc
shrl
add
sub
or
pop
js
xor
dec
sbb
inc
lods
jne
sub
lods
mov
addr16
cmp
mov
sbb
inc
das
jl
lret
and
xor
and
mov
cmp
iret
push
ss
and
lock
push
jne
mov
lock
jle
scas
lds
repnz
pop
nop
rolb
dec
cmpsb
xchg
dec
test
mov
cmp
scas
das
out
lahf
aam
push
cmc
push
inc
hlt
enter
mov
jns
mov
mov
sub
sbb
mov
xchg
cld
lret
jmp
dec
push
outsb
cwtl
outsl
xor
mov
popa
sbb
mov
jb
cmp
xor
mov
xchg
jecxz
cmpsb
shrl
mov
popf
inc
mov
dec
test
jbe
xor
mov
aas
lds
dec
test
adc
dec
and
movl
mov
fsubl
push
xchg
aas
pop
xchg
mov
mov
aad
mov
loopne
rcr
xchg
data16
mov
sub
lretw
addl
in
daa
mov
cmp
xor
xchg
hlt
pop
sbb
mov
fiadds
fcmovnbe
orb
shr
insb
lods
mov
ret
movsb
test
rcl
mov
in
push
std
mov
loopne
dec
mov
mov
push
popa
mov
pop
call
arpl
cli
and
mov
in
xchg
cmp
andl
lods
add
xchg
jl
push
or
lods
inc
test
lret
and
in
adc
hlt
std
cwtl
mov
mov
pop
loope
call
push
mov
sub
mov
into
pop
jl
in
mov
pop
ret
sahf
xor
test
dec
xor
stos
adc
sbbb
sbbb
aam
mov
and
ss
scas
jnp
mov
cld
and
outsb
or
pop
inc
dec
jnp
mov
pop
mov
jg
push
bound
out
jbe
xchg
fistl
dec
faddl
dec
and
shrb
movsl
mov
mov
aam
clc
in
pop
ljmp
ret
cmpb
sub
mov
ret
jmp
outsb
sbb
xchg
and
aad
fwait
sbb
or
fisubl
js
mov
mov
mov
sbb
mov
orl
lfs
testb
sbb
jno
or
jmp
cmp
lcall
inc
int
es
dec
js
jp
and
sub
push
fstpl
clc
pop
or
push
sahf
out
stos
pusha
repnz
fdivrp
xchg
cmp
insb
mov
push
pusha
dec
stc
adc
cmp
push
cmpsb
pop
ss
movsl
inc
and
xchg
gs
jnp
cmp
dec
sub
pusha
mov
xchg
or
out
imul
ds
test
jno
lcall
cs
add
inc
lcall
or
cmpsl
cwtl
push
adcb
ret
es
jmp
or
in
cli
imul
inc
insb
push
popf
xchg
jp
lret
mov
push
fwait
jbe
pop
push
icebp
xlat
lahf
push
ljmp
dec
clc
test
xlat
clc
or
insb
adc
sbb
fld
outsl
fcom
iret
les
push
ret
mov
cmp
outsb
add
mov
data16
push
clc
jne
jb
and
fmul
push
cmc
rcrb
adc
push
icebp
sets
cmc
push
or
sub
mov
dec
cmp
fldenv
mov
scas
sbb
jns
mov
cmpsl
pop
clc
add
jb
rcrb
pop
ja
ja
enter
lock
xor
mov
push
in
jo
in
add
sbb
push
scas
iret
stos
fmulp
sbb
adc
jae
lcall
push
out
or
shrb
in
lods
fbld
jl
and
xchg
pushf
test
adc
mov
inc
aas
lods
xor
and
adc
sahf
les
mov
xor
push
cmp
ficompl
fistpll
into
xchg
and
ss
js
pop
mov
inc
pop
icebp
into
mulb
lcall
jmp
xlat
xchg
pushf
movl
aaa
pop
fs
enter
pop
pop
or
inc
or
or
sub
adc
mov
push
loope
je
dec
xor
in
aam
scas
test
pop
lods
rclb
xacquire
inc
sbb
push
scas
xchg
lret
cld
stc
daa
insl
lods
xlat
xor
cld
int3
ja
loop
lods
out
out
sub
lret
bnd
or
lods
and
sbb
jno
rclb
fisttpll
or
bound
jmp
clc
in
pop
sbb
inc
repnz
mov
stos
mov
jecxz
faddl
sarl
dec
pop
ret
inc
scas
cmp
test
ja
mov
mov
xor
ja
mov
inc
jbe
shl
mov
rcr
jne
fsubs
push
sbb
sub
add
inc
imul
cmp
out
cmpsl
out
sub
jp
lret
and
jo
cld
lods
out
jno
ds
insl
shll
fiaddl
out
or
mov
adc
and
stc
xor
push
cli
shl
mov
cmp
and
inc
in
fadds
sbb
scas
sar
daa
shlb
shlb
pop
push
repz
and
mov
aas
fcmovne
sub
pop
gs
aaa
pop
sti
icebp
stc
xchg
sbb
sub
bound
vdivsd
in
cli
js
add
push
sbb
push
aaa
enter
jno
nop
int3
sub
cld
loopne
subb
pop
and
fwait
data16
xchg
inc
into
arpl
xorl
dec
and
push
outsb
sub
daa
push
cmpsl
fstpt
inc
sub
dec
add
jb
dec
ss
xor
pop
out
xor
test
pop
mov
dec
pop
andl
xor
pop
xchg
push
and
mov
in
rcr
cmp
jg
dec
inc
mov
movsl
imul
mov
pop
xchg
aam
in
mov
cld
jmp
int3
aam
aad
cs
mov
iret
jg
ret
lcall
gs
jmp
test
fmulp
test
push
xchg
in
pop
adc
xchg
inc
xchg
and
push
addb
std
adc
sub
pop
in
in
bound
stos
mov
mov
sbbl
or
mov
into
and
enter
adc
push
xor
ret
cld
aaa
fistl
fsts
xchg
and
call
xor
cs
jle
sub
ret
inc
fistl
stc
sbb
jmp
pop
sbb
jb
aam
loopne
cltd
push
or
pop
sbb
imul
mov
out
fucomi
pop
push
aad
enter
loope
in
loopne
shrl
lahf
add
iret
divb
addl
lea
pushf
outsl
aam
in
jmp
or
ja
mov
mov
into
popf
cmp
pop
movsl
push
xchg
movsl
add
sub
mov
dec
shlb
pop
sti
xchg
js
and
add
cs
mov
mov
cmc
push
adc
cmp
addr16
rcrb
add
dec
lods
jbe
cmpb
movl
fldcw
sti
jp
test
xor
sub
adc
and
lret
push
or
pop
in
cs
outsb
rorl
xchg
js
popl
xor
xchg
push
les
pop
imul
in
sub
pop
test
subb
mov
adc
aaa
add
or
addb
mov
sbb
repz
sbb
xor
ds
cmp
pop
mov
sub
shrl
sbb
mov
adc
mov
aad
cmc
sub
addb
mov
push
out
push
sbb
inc
imul
mov
pushf
mov
in
idivl
cmp
cwtl
in
popa
jecxz
lods
out
or
in
jl
imul
push
lods
out
sbb
lret
movsb
add
fidivl
ss
aaa
sbb
pop
ljmp
orb
mov
adc
fdivr
adc
ljmp
insb
nop
xchg
fsub
sbb
sbb
xor
pop
aas
fdiv
enter
xchg
sub
push
or
ret
inc
jns
inc
fidivrl
or
movsl
repnz
dec
stos
dec
xchg
mov
in
mov
mov
and
sbb
shll
addr16
cmp
lret
test
dec
add
out
jno
popl
dec
negl
cli
scas
sub
mov
sub
and
cmp
xor
outsl
mov
push
imul
or
pop
cmp
dec
repz
adc
push
jns
push
in
add
xor
lret
in
hlt
iret
or
xor
jp
cmp
imul
in
rcrl
loopne
ja
popa
pop
xchg
sbb
xchg
sbb
div
aad
pop
jle
fldcw
ja
mov
sub
aas
xlat
rcrb
ficompl
dec
leave
mov
mov
mov
test
fcomps
push
xlat
pop
sub
xchg
jb
jo
bound
inc
dec
jae
movsl
cmp
lods
dec
imul
push
jg
push
inc
jns
lock
sarb
orl
fisubrl
lds
rep
inc
cmpsb
mov
jno
stc
add
lods
xorl
xchg
inc
adc
fdivp
lods
and
mov
inc
mov
adc
in
push
adc
mov
das
rorl
sub
pop
icebp
inc
test
sahf
mov
push
repz
shlb
lock
or
pop
and
dec
cmp
shlb
mov
cmp
cli
movsb
das
js
mulb
outsb
push
lods
mov
loopne,pn
mov
mov
in
jae
bnd
jmp
std
sub
cmp
and
mov
dec
add
sti
daa
mov
lock
mov
mov
mov
lods
mov
scas
nop
inc
fmull
cs
sub
push
cmc
test
jno
xlat
sbb
jp
iret
out
push
jno
mov
jnp
pop
imul
outsb
mov
jl
movsl
inc
arpl
pop
int3
pop
mov
les
cmp
mov
and
notb
pusha
jl
mov
cmp
cmp
jle
movsl
add
es
add
pop
push
mov
fs
and
sub
aad
sarl
sub
shr
or
mov
lock
repz
add
pop
jge
repnz
adc
sbb
rcl
inc
out
dec
sbb
mov
lcall
test
inc
ljmp
aad
outsb
movsl
jnp
call
xchg
orb
mov
cwtl
out
cmp
sub
fwait
xchg
sbb
mov
xchg
aad
cmc
pop
das
fsubrl
xchg
js
inc
pop
mov
xor
xchg
pop
inc
sub
dec
mov
pop
pop
inc
jne
and
into
imul
mov
adc
addr16
sahf
ljmp
inc
push
push
imul
lret
mov
pop
arpl
sarb
in
fwait
mov
testb
and
ficompl
stc
sbb
sbb
dec
dec
call
fmull
out
jge
int
lahf
sbbl
push
or
out
fldl
imul
mov
in
mov
xchg
jno
sub
xor
cmp
lods
push
in
jno
push
jnp
xchg
jp
daa
jne
out
ljmp
lret
sbb
je
gs
push
jbe
jge
int
or
mov
jle
cmp
cmp
cwtl
out
xor
test
adc
lds
out
in
cmp
scas
loop
add
cs
or
or
add
xor
mov
pusha
scas
lea
ret
mov
mov
lret
mov
push
lods
add
dec
rcrl
lea
dec
pop
imul
cwtl
fisubrl
cli
pusha
rol
sbbl
sbb
mov
cmpsb
add
and
sbb
jno
xlat
add
push
insb
fstps
in
rolb
lret
xor
xor
fsubs
mov
cld
adc
data16
test
push
sbb
das
sbbl
dec
cli
fcompl
push
lods
inc
and
xchg
cmp
jmp
adc
outsb
loop
fs
jl
fildll
js
insl
sbb
daa
and
loop
rclb
or
pop
pop
test
insl
pop
es
arpl
push
push
enter
in
xchg
pusha
mov
sarb
mov
loope
in
add
mov
rcrl
and
popf
pop
insl
scas
add
and
fsubs
cmp
out
and
cmpsb
push
shll
insl
lock
jle
loop
cltd
lcall
jge
rorb
out
cli
rorl
insl
mov
lods
sbb
xor
xchg
add
push
xchg
sub
xor
jb
mov
int3
jns
pop
out
mov
xor
sub
dec
push
sub
jae
pop
outsl
rorb
cmp
out
xorb
xchg
add
aaa
sub
sbb
rcl
pop
mov
pop
leave
mov
pop
leave
mov
dec
xchg
into
cmp
movsl
cmp
xchg
cmp
in
out
dec
out
jb
insb
dec
mov
fsub
rcll
push
icebp
push
movsl
inc
int3
sbb
fdivl
lahf
cmp
movb
scas
pop
adc
shrb
test
test
adc
inc
outsl
xchg
in
adc
ljmp
dec
add
hlt
jl
pop
sbb
xlat
cld
jno
xchg
push
cld
fcompl
out
bound
push
adc
fiadds
jle
adc
shll
xor
push
jl
push
int3
inc
outsl
jmp
xchg
adc
mov
xor
scas
bound
xchg
xchg
dec
inc
and
rcll
mov
mov
or
dec
mov
adc
repz
add
movsl
into
push
mov
in
xor
in
sbb
outsl
mull
pop
dec
cmpb
in
mov
mov
adc
sahf
stc
push
fistpll
mov
xor
std
nop
and
mov
or
push
mov
bound
mov
popa
or
sbb
ss
jbe
sbb
or
int3
inc
cmp
xchg
ret
xor
add
roll
jbe
loopne
es
pop
pop
repnz
movsb
cwtl
sahf
rcl
mov
shrl
lock
xrelease
jl
pop
sub
or
movsl
scas
pop
rcll
jbe
repz
pop
cmpsl
nop
mov
jg
pop
shl
rcr
ret
and
or
push
and
push
out
jno
add
mov
out
sbb
out
xchg
add
cmp
testl
mov
cmpsl
or
bound
xor
xchg
push
lret
inc
or
call
mov
daa
dec
out
add
inc
mov
push
jmp
push
sub
mov
fisttpl
sbb
sub
pop
movsl
test
or
dec
lods
fldenv
lods
mov
das
and
into
insb
adc
arpl
and
or
call
stos
sub
xchg
in
bound
push
dec
popf
repnz
popa
pusha
fmuls
mov
jns
sub
idiv
mov
test
xchg
jl
inc
or
out
outsl
jmp
movb
cmp
xlat
ds
inc
or
sbb
and
lods
enter
dec
add
or
xchg
or
and
push
xor
cmp
hlt
cmc
sub
sarb
imul
pop
icebp
popa
push
outsb
pusha
jle
int3
andl
add
aad
jge
sbb
inc
jge
pop
adc
icebp
jge
in
and
push
movsl
push
stc
or
xchg
andb
ds
test
pop
add
iret
jge
xlat
fwait
in
adc
adc
sub
or
and
xchg
sub
mov
stos
jl
dec
sub
shll
loop
mov
setl
xchg
and
add
ja
pop
pop
daa
aaa
add
sub
lock
or
add
xor
xchg
xchg
add
rol
or
loop
lcall
cmp
add
lods
mull
lea
pop
push
jns
push
into
jnp
pop
insb
xor
ret
in
mov
mov
adc
fdivrp
xchg
lock
adc
or
push
fists
xor
push
cmp
ss
mov
outsb
or
xor
iret
les
inc
and
or
push
outsb
jae
shll
mov
fisubrs
jge
call
test
in
outsb
lods
push
mov
into
push
test
stc
es
sbb
out
and
xchg
and
ret
and
jnp
dec
sub
ljmp
movsb
sarl
cmp
sub
mov
dec
push
mov
or
pop
jg
ds
cmp
lds
loope
cmpb
fs
pop
stos
mov
movsl
jae
lcall
adc
orb
lods
adc
aas
jle
mov
push
jns
imul
shll
das
jmp
xlat
push
pop
mov
mov
pop
lret
ss
ret
pop
inc
popa
pusha
out
adc
and
or
jg
outsb
cmp
push
sbb
xor
in
or
mov
mov
scas
mov
xor
cmp
or
dec
shlb
in
or
add
pop
pop
push
stc
outsl
in
xchg
cld
pop
je
adc
push
lcall
jle
ffreep
loope
ds
sub
cmp
cld
cmp
jecxz
push
out
addr16
jbe
fdivr
inc
hlt
mov
scas
dec
push
fwait
pop
jb
cltd
in
out
push
in
in
shrb
arpl
lret
loop
int
adc
mov
repz
or
and
or
dec
arpl
scas
out
push
repnz
and
mov
pop
push
xchg
fisubrl
push
xchg
imul
out
cmp
sub
and
xor
push
xchg
add
lcall
sbb
mov
fbld
divb
outsb
mov
loopne
gs
mov
mov
push
cmpsb
xchg
lret
fwait
sbb
add
and
jb
pushf
shlb
sub
std
jl
jecxz
jge
xchg
shll
mov
cli
movsb
pop
out
sub
mov
arpl
mov
fcom
xchg
jae
int3
push
adc
lcall
adc
dec
jge
adc
xchg
mov
mov
std
inc
repz
mov
xor
jno
dec
cli
hlt
je
push
xor
pop
push
add
add
test
push
test
and
cmc
lea
cmpsl
lock
shl
enter
iret
outsb
sbb
jge
in
cmpsb
mov
enter
xchg
lret
es
das
push
in
aas
out
aad
shll
xchg
loope
fstps
xchg
addr16
lock
adc
lret
outsb
xchg
mov
mov
or
pcmpeqw
mov
out
inc
fbld
pusha
mov
jp
sbb
and
pop
mov
mov
in
faddl
dec
mov
addl
je
inc
jo
sbb
push
cmp
int3
js
stc
in
or
lea
sti
gs
sbb
lock
jmp
stos
mov
imul
add
mov
inc
pop
mov
testl
pop
mov
in
sub
aas
lods
sub
es
lahf
in
fstps
cmp
jge
loop
xor
mov
inc
jo
add
sbb
fistpl
sbb
sub
or
pop
fmuls
inc
mov
insl
icebp
popa
shrl
fcom
fldcw
jo
sahf
dec
loope
mov
dec
insl
out
xchg
lods
clc
xchg
jns
sarb
lahf
sub
add
mov
push
mov
push
notl
rcr
mov
call
jnp
cmc
push
sbb
dec
inc
pusha
mov
leave
xchg
push
in
icebp
adc
jle
lret
movsb
adc
or
xchg
daa
sbb
loope
push
mov
cmpsb
stc
imul
icebp
adcl
cmp
push
pop
bound
jecxz
dec
mov
adcb
std
mov
lahf
adc
pop
out
xor
sbb
pop
cs
push
pushf
data16
rcrl
call
jle
cmpsl
out
push
ret
push
mov
add
fucomp
push
dec
repnz
icebp
fmulp
daa
push
cmp
jle
stos
popa
and
test
or
sahf
scas
js
aas
xchg
xorl
scas
fistpl
ret
add
push
sub
and
xchg
lock
in
fistl
xor
fs
loop
mov
or
movsb
xchg
jnp
pushf
pop
xor
in
shll
lcall
sti
push
adc
sbb
fs
xlat
dec
loopne
sti
cmc
xchg
fstps
and
jge
packssdw
push
lods
repz
cmpb
addr16
test
lcall
aaa
push
xchg
sbb
mov
aad
mov
mov
js
icebp
lods
negl
outsb
shl
sub
mov
sub
or
lds
sub
jle
pop
in
xor
insl
dec
xchg
lds
lods
add
shrd
push
and
mov
jo
imul
jno
mov
jo
add
scas
inc
push
out
adc
xor
jl
stos
les
push
outsl
fxch
pop
mov
bound
mov
enter
cmp
jns
movsl
arpl
xchg
sub
cmp
mov
add
push
xchg
divb
data16
pop
jg
cs
pop
xor
fsubrl
mov
fildl
and
fsubl
adc
int3
push
add
lahf
fdiv
xchg
aaa
cld
lcall
mull
add
movsl
mov
fldenv
pop
pusha
je
int
sub
es
sub
sbb
cli
mov
pop
outsl
iret
inc
xchg
orl
push
mov
hlt
add
jae
dec
aam
fdivrs
add
ljmp
add
sbb
and
scas
mov
out
inc
mov
out
and
nop
rorl
mov
xor
push
lods
adc
mov
and
pop
loope
push
mov
outsl
xrelease
enter
pop
push
pop
lds
pop
and
test
in
pop
xor
sbb
sbbl
fistps
sub
and
out
ret
adc
xor
mov
adc
out
stc
scas
cwtl
push
and
push
jmp
mov
mov
mov
push
jecxz
pop
cmp
repz
paddsb
iret
xchg
cmpsl
cli
aaa
jg
shll
in
add
imul
test
stc
jnp
mov
ss
das
faddp
sub
push
cmc
out
inc
xor
inc
sar
and
jecxz
push
add
dec
lsl
mov
mov
inc
aas
faddl
repnz
add
lods
dec
push
cwtl
jo
add
stos
cmp
repz
dec
pushf
sbb
and
cmp
adcl
cwtl
jp
xchg
ret
mov
jle
adc
jle
call
inc
arpl
inc
push
repnz
push
imul
add
mov
call
mov
cmpsb
or
test
cmc
ret
out
xchg
mov
arpl
movsb
jmp
mov
jle
xor
pop
mov
cmp
sub
adc
mov
mov
cmp
xchg
ficoml
iret
or
call
stos
xchg
mov
jge
rclb
mov
mov
in
jne
jbe
js
adcl
mov
pop
dec
pop
out
cltd
subl
test
sbb
mov
push
mov
lahf
jmp
push
ret
xorl
dec
cli
das
lock
sbb
jb
js
jae
orb
lds
test
cltd
xchg
hlt
std
enter
lea
pop
cmp
or
scas
cld
mov
not
ret
loop
nop
imul
out
sbb
mov
sub
popf
mov
cmp
in
push
dec
testb
fwait
mov
jne
pop
dec
arpl
mov
push
xor
movsl
inc
lods
lds
cltd
mov
sbb
push
stc
jmp
cltd
sti
inc
mov
dec
out
dec
xchg
mov
std
jle
adc
shll
add
inc
pop
jle
ja
pop
subl
cmp
cwtl
int3
and
cmp
jmp
vaddsubpd
insl
or
bound
xor
push
sub
or
ja
cs
pusha
jecxz
cs
dec
fiadds
mov
cmpsl
mov
inc
imul
cmp
and
push
pushf
cli
adc
push
jne
adc
clc
xchg
mov
das
xor
add
mul
loope
test
add
test
cli
mov
loope
imul
jle
adc
cli
out
xchg
pop
repnz
sub
popa
mov
iret
shll
inc
test
fcmovnbe
ja
mov
out
or
out
xlat
mov
jno
pop
mov
sbb
out
sar
iret
insb
push
sub
sbb
es
jle
cmp
mov
sub
push
and
idivb
sub
daa
pop
jnp
test
adc
out
lock
push
and
cmp
mov
into
mov
rorb
sti
loopne
imul
repnz
stos
out
jae
cli
hlt
mov
cmp
push
test
add
sbb
test
adc
inc
fstpt
ds
inc
fdivrs
jge
fdivr
inc
adc
mov
mov
pop
jp
mov
mov
nop
or
jbe
pop
and
mov
cli
into
or
cmpsl
fbld
out
push
aam
insl
div
test
int
outsl
sub
jmp
lret
nop
push
cmc
in
in
dec
and
jmp
and
lock
or
out
adc
sub
pop
fistpl
sbb
dec
push
cmp
dec
shlb
ss
aad
xchg
cmp
test
ret
dec
adc
and
mov
push
push
sub
std
mov
xchg
cmpsl
pop
in
aaa
cmpb
and
xor
xchg
fnstsw
push
push
and
movsl
arpl
jbe
lods
mov
outsl
mov
mov
adc
rcrl
cmpsl
or
mov
mov
ret
pop
cmpsl
aas
mov
js
ret
mov
mov
add
jno
in
xor
adc
scas
pop
cld
mov
aam
or
inc
mov
pop
je
pop
mov
leave
test
aaa
stos
and
push
scas
adc
mov
push
inc
cmp
fndisi(8087
cli
and
mov
out
jo
pop
xchg
mov
sbb
mov
mov
sub
lods
ret
lret
xor
xchg
or
cld
cmpsl
addr16
cmp
decl
jo
sub
imul
jmp
add
out
xor
sub
fcmove
dec
loope
inc
shrb
add
add
fistps
mov
clc
jbe
nop
mov
std
aaa
sbb
js
adc
add
cmp
mov
jo
into
arpl
pop
xor
dec
and
cmc
clc
lcall
inc
into
aaa
or
mov
gs
out
sarl
loopne
out
pop
inc
mov
pop
pop
xchg
loope
inc
scas
test
ljmp
sbb
clts
js
dec
daa
inc
sysexit
mov
repz
lea
adc
dec
xchg
pop
xor
scas
aam
sub
push
test
pop
sub
cmp
jecxz
jge
cmpsb
sub
lcall
pop
sub
cmp
add
push
lods
shlb
icebp
mov
fisttps
dec
adc
mov
fcoml
cmp
iret
movsb
daa
mov
popf
or
fistpl
push
cmp
jmp
mov
mov
je
sub
jg
pop
test
shll
mov
arpl
and
out
out
mulb
fmuls
decb
sbb
sbb
mov
mov
xchg
dec
pop
cmpsb
mov
jmp
sti
daa
push
mov
lea
push
or
aam
clc
ficompl
cmc
loopne
xor
in
adc
mov
fsts
xchg
out
cmpsb
add
dec
xlat
jae
push
mov
les
iret
mov
sbb
enter
sahf
mov
popf
dec
pushf
xchg
gs
inc
ret
cmpsl
cmpsl
fnstsw
push
lods
push
sub
sarl
mov
enter
add
cs
jecxz
cmpsb
push
pop
xor
aas
addl
jae
jbe
fwait
xorl
sub
sub
cmp
inc
jle
pop
jmp
push
cld
xor
sbb
mov
push
addr16
into
or
add
aad
mov
mov
xchg
popf
test
mov
xchg
pop
cmpsb
jns
ja
mov
call
jae
pop
addl
dec
and
or
mov
loop
sbb
xchg
xchg
pop
in
add
sub
outsl
ds
xchg
hlt
mov
int
in
fbld
aas
inc
lods
jl
push
and
sbb
stos
xchg
dec
sbb
mov
xchg
jae
cmc
xlat
push
pop
xchg
je
or
test
jo
pop
push
insl
lret
pushf
xor
insb
out
pop
test
push
push
pop
pop
arpl
jns
in
shll
cmc
test
popa
dec
jns
das
and
inc
imul
stos
and
xchg
hlt
pop
shlb
push
jbe
and
inc
les
push
sti
jge
call
setae
push
dec
in
mov
xchg
or
scas
repz
jg
sbb
sub
lcall
into
std
mov
arpl
icebp
sub
cmp
insb
push
rolb
sbb
pop
pop
fs
sti
inc
fists
andl
inc
mov
jo
aaa
in
in
outsb
lock
push
push
jp
stc
loopne
mov
mov
mov
lock
lret
sub
mov
ret
nop
push
adcl
add
stos
daa
pop
ret
sahf
mov
int
stc
push
ds
cld
add
mov
adc
lock
dec
clc
fidivs
into
fwait
push
jns
or
movsl
clc
cmp
into
or
je
repz
nop
mov
pop
adc
cmc
in
jl
push
fdivrs
and
imul
gs
push
inc
jnp
lock
pop
inc
aad
and
rep
jne
mov
mov
xchg
std
ljmp
mov
pop
sbb
pop
clc
push
pop
pushf
jno
mov
dec
cmp
pop
imul
xchg
cmc
dec
lea
mov
mov
arpl
dec
scas
cmpsl
push
mov
scas
sub
stos
dec
orb
jmp
mov
and
mov
out
push
shrl
add
mov
outsb
stos
mov
push
loope
mov
sub
jns
lods
loop
and
mov
inc
push
xor
test
imul
movsl
stc
xor
in
push
xor
daa
ja
pop
test
pop
or
pop
int
std
sbb
jmp
cwtl
lret
xchg
mov
jbe
bound
std
pop
pop
and
lcall
and
in
pop
xchg
scas
pop
pop
lods
int3
pop
test
jo
mov
cmp
loope
shll
ja
jb
cmpsl
sbb
scas
adc
cld
mov
fstps
adcl
rclb
daa
loopne
sarl
jmp
xchg
mov
push
fldenv
fisubl
notl
scas
mov
mov
out
shrl
add
adc
psraw
rcl
mov
fadds
or
pop
ret
pop
mov
xchg
cmp
jecxz
and
push
ret
jle
call
subl
aas
test
xor
rorb
adc
fs
dec
inc
push
add
mov
mov
gs
int3
xchg
loope
mov
jnp
andb
xor
test
shll
test
push
divb
mov
lock
jp
push
or
aam
xor
add
ret
aam
fmul
mov
nop
or
imul
mov
jnp
jns
sub
rcr
aaa
sbb
ret
pop
inc
loopne
pop
fsub
adc
mov
int3
lea
pop
jle
inc
fwait
jecxz
loope
test
mov
pop
into
imul
in
cld
mulb
push
adcl
adc
scas
push
and
pop
mov
cmp
xor
sbb
pop
int3
sbb
dec
dec
xor
dec
loope
xor
sahf
mov
lods
shll
cmp
sti
fwait
mov
jo
pop
jecxz
jbe
dec
pop
push
sbb
je
das
ja
xchg
sub
fwait
jo
mov
loop
xor
or
fldcw
cmp
imul
xor
mov
test
out
pop
mov
pop
rcll
mov
ljmp
mov
popf
mov
pop
dec
daa
js
int3
icebp
or
scas
test
push
and
movsl
push
pop
jo
addb
mov
pop
dec
mov
jbe
faddl
loop
sub
cmp
inc
jmp
push
mov
push
inc
mov
jmp
push
mov
push
xchg
pop
in
push
loop
in
push
sub
xrelease
in
add
dec
int
in
adc
sub
xchg
test
cmp
subl
xchg
sarl
cmp
cmpsb
int3
push
dec
sbb
jno
adc
jo
mov
mov
cld
in
scas
mov
icebp
out
les
jecxz
jecxz
shll
pop
pop
leave
sub
push
push
dec
or
mov
dec
mov
fisubs
arpl
add
insb
and
push
ljmp
inc
xor
hlt
mov
inc
repnz
push
bound
pop
jb
call
pop
pop
dec
cmp
fsubs
or
hlt
and
lahf
ljmp
inc
ljmp
loop
adc
xchg
stos
sub
dec
dec
and
xor
mov
add
int3
xor
push
push
dec
jecxz
mov
sbb
push
dec
jno
test
pop
mov
and
pop
inc
addl
mov
std
cwtl
inc
in
fsubrs
or
fisttpll
pop
leave
sbb
les
jnp
fs
addl
xchg
and
aaa
push
aas
sbb
fwait
sub
xchg
into
cmpsl
mov
inc
ret
add
rol
and
lret
mov
lret
mov
dec
ljmp
cmp
or
test
xchg
or
loop
cwtl
jle
lea
dec
outsl
jb
adc
out
xchg
inc
jle
add
adc
outsl
and
and
ds
insl
movsl
sub
xchg
inc
xor
loope
xorb
push
popa
lcall
sub
dec
mov
out
aas
dec
test
inc
insb
popa
cmpsl
push
inc
mov
test
xchg
rcrl
call
xchg
in
xchg
std
sbb
hlt
fistps
divl
inc
jmp
je
cli
int
push
rcrb
dec
lret
xor
dec
jbe
cmp
inc
fwait
cmp
roll
dec
imul
adc
add
mov
fdivs
mov
mov
adc
jmp
les
jge
sbb
mov
js
cwtl
shlb
jmp
loope
pop
outsl
pop
ds
stos
xor
loope
hlt
loopne
aam
or
add
xchg
aas
and
push
mov
lods
cmp
cltd
xor
mov
fs
aaa
mov
loope
jnp
mov
mov
sti
gs
cli
pop
adc
adc
sbb
cmp
pop
or
xor
icebp
jmp
adc
mov
inc
incb
out
mov
jb
mov
xchg
push
mov
ret
mov
insb
lods
ss
push
das
les
or
mov
lcall
ds
lcall
int
cmpsl
push
pop
inc
jo
sahf
outsl
xor
pop
fdivs
pop
shlb
shrb
outsb
cmp
leave
mov
jg
pop
and
ret
xlat
popf
movsl
loop
mov
dec
adc
or
pop
push
repnz
sti
jne
stos
or
imul
lock
ljmp
push
out
aas
sbb
cmp
test
cltd
into
js
and
ds
out
icebp
pushf
aaa
sub
mov
leave
dec
xchg
lcall
cmp
cs
clc
dec
cs
addr16
out
cmpl
sbb
das
mov
adc
cmp
sahf
cmc
je
inc
pop
icebp
jge
cmc
push
stos
adc
mov
pop
subb
stos
call
lea
mov
jbe
cmpsb
dec
sub
mov
xor
lahf
fs
je
dec
pop
das
pop
cli
in
or
out
push
pop
jb
mov
push
not
lock
mov
adc
xchg
sub
test
ja
inc
xchg
or
js
mov
mov
sub
jmp
push
jb
int3
jmp
xor
jle
popf
inc
push
jno
cmp
leave
jl
ja
jl
roll
pop
and
ficoml
scas
and
or
les
push
sub
mov
ret
cmp
pop
movsb
or
fistps
popf
fnsave
stos
jp
outsl
sub
testb
xor
sahf
int
lock
sbb
orb
aad
push
loop
sub
jge
dec
xchg
outsb
testl
rcrb
mov
loopne
jbe,pt
lret
mov
adc
cltd
dec
test
fidivrl
out
xchg
int
call
into
xor
fwait
movsb
push
mov
xchg
cmp
and
lods
in
mov
mov
or
adc
fs
push
and
and
popa
lcall
push
mov
shld
inc
mov
lcall
js
out
icebp
lret
fbstp
fnstcw
push
pop
stos
adc
dec
add
lock
incl
sub
xchg
adc
enter
gs
cmp
icebp
notl
push
out
aas
inc
fistl
dec
imul
lcall
mov
cli
xor
push
dec
ds
data16
mov
mov
add
jb
or
add
push
push
add
insb
cmpsl
adc
mov
popf
sbb
inc
or
ret
xor
insb
mov
jb
int3
push
stc
xchg
mov
cmpsl
mov
lret
lahf
jmp
pop
dec
pop
inc
ja
add
orb
add
fwait
jo
mov
pop
jmp
scas
pop
pop
push
sub
jno
cmc
repnz
mov
jp
stc
in
xchg
jno
int3
fsubl
and
xor
in
test
add
sub
pop
dec
pushf
mov
inc
pop
loopne
iret
xchg
loopne
aad
lods
stos
mov
and
stos
xchg
loop
pushf
sbb
mov
mov
test
out
int3
in
imul
sahf
outsb
cmp
sub
xor
or
lret
dec
xor
pop
push
or
cmp
push
shll
push
test
enter
xchg
adc
pop
aam
mov
fidivrl
dec
dec
ret
add
push
inc
push
lret
pop
dec
sbb
jmp
xchg
fdivl
fisttpl
scas
mov
jg
jp
and
xor
subl
jp
dec
pop
cmp
rorl
xor
pop
sahf
push
adc
les
gs
mov
lahf
mov
dec
repz
push
xchg
add
insb
aas
pop
mov
into
xchg
sub
jle
in
arpl
nop
and
adc
in
lret
xchg
js
sbb
addr16
mov
rclb
pusha
pop
int3
repnz
sarl
push
mov
pop
dec
ret
rol
mov
fwait
clc
loopne
sub
sbb
sub
mov
lcall
mov
insl
mov
aam
ds
mov
int3
fidivl
mov
sub
ret
lret
push
push
fidivs
dec
loope
push
ljmp
dec
insb
jg
cmp
sbb
mov
push
pop
cwtl
addl
insb
faddl
mov
dec
in
mov
sub
mov
xchg
sarb
test
pop
mov
jb
mov
jmp
jns
add
pop
mov
testb
test
push
sub
inc
add
enter
scas
and
and
jp
cs
lcall
cmp
into
iret
push
sub
movsl
dec
inc
inc
push
mov
shll
jbe
pop
shlb
outsb
add
xor
je
mov
sbb
das
cmp
jmp
and
shlb
loop
les
adc
shl
cli
shll
mov
or
jge
cmp
ljmp
out
inc
push
rol
mov
cmp
mov
sbb
daa
mov
mov
jle
fwait
stc
mov
js
mov
loop
pop
push
mov
and
leave
pusha
lahf
test
les
stos
mov
aam
aam
lcall
or
inc
imul
into
scas
mov
fidivs
push
std
outsl
jmp
jge
cmc
push
imul
sbb
out
negb
movsb
popf
mov
lret
rcrl
add
jl
ret
mov
pop
nop
and
pop
das
or
xchg
fwait
and
cmp
xor
sbb
xor
shll
fwait
scas
loopne
call
test
xchg
pop
es
out
subb
inc
jne
pop
jmp
push
jmp
cmp
scas
or
push
stos
mov
xor
fdivl
shlb
mov
inc
jge
scas
push
loop
lahf
or
push
lcall
jge
add
xor
mov
mov
pop
pusha
xchg
hlt
scas
mov
jbe
push
pusha
fnsave
mov
je
jo
outsb
pop
int3
jle
neg
loopne
loop
rcll
adcl
insl
lock
cmc
dec
xorb
jl
xchg
filds
or
imul
fisttps
mov
popf
inc
les
xchg
packsswb
dec
cmpsl
call
xor
cmp
scas
or
sub
rcrb
push
mov
push
aad
mov
inc
in
sti
sarl
dec
mov
mov
aad
or
out
and
dec
out
cli
adc
inc
and
xor
mov
loop
stos
sbb
pop
fcmove
sbb
mov
add
push
xchg
cs
mov
mov
sbb
jb
loope
hlt
nop
movsb
nop
sbb
loop
mov
jp
mov
ss
movsb
cmp
cmp
in
cld
mov
cmpsl
in
insl
dec
cmc
gs
dec
pushf
push
jle
cmpsl
lock
mov
adc
dec
stos
or
loope
mov
mov
aad
int3
lds
loopne
or
imul
je
mov
sbb
mov
leave
adcl
adc
fdivrl
xor
push
push
int
fdivrp
or
adcl
pop
mov
fidivrl
sbb
iret
lods
das
xlat
xor
inc
ja
insb
scas
add
sbbl
mov
adc
cwtl
into
or
out
pop
mov
lea
sbb
dec
push
jae
lret
mov
push
cld
loopne
sbb
jg
mov
mov
pusha
jo
jg
mov
dec
subb
jno
or
add
adc
lods
push
incb
mov
mov
push
mov
inc
in
ret
lret
arpl
inc
lock
push
in
inc
or
xchg
mov
shrb
test
mov
jl
push
mov
mov
out
jae
push
mov
inc
add
adc
push
jno
mov
addr16
push
stos
imul
frstor
push
xchg
fstp
dec
push
xor
or
gs
in
sub
aas
or
push
sahf
mov
mov
adc
lret
xorl
jns
inc
dec
pop
lods
xchg
insb
adc
cwtl
test
mov
sub
scas
jmp
mov
push
push
fsubs
stos
mov
cmc
cltd
and
and
push
stos
sbb
cmp
sub
fisubrs
jne
pop
pop
jp
sbb
and
adc
xor
cmpsb
ret
mov
mov
loope
sub
scas
orb
mov
out
push
jmp
jb
test
hlt
scas
or
cmp
sti
dec
xchg
jecxz
shr
inc
mov
jb
sbb
lahf
hlt
xor
daa
fimuls
in
sbb
lahf
dec
push
push
lret
jb
push
push
mov
leave
cmpsl
xchg
sub
pop
sar
inc
stos
or
in
push
je
sub
test
movsl
inc
xor
lea
xor
xlat
inc
pusha
mov
add
jbe
inc
push
push
orl
lods
fiaddl
in
in
add
pop
cmp
sub
mov
movsb
ret
mov
in
and
pop
iret
fldt
js
leave
add
popf
rorl
jp
call
lock
icebp
push
inc
inc
mov
inc
add
add
mov
iret
mov
sub
jbe
aad
or
iret
sbb
sahf
jl
test
scas
push
push
outsb
mov
cltd
jmp
sub
cltd
das
xor
mov
sub
push
outsl
xor
in
cmp
adc
dec
xchg
notb
cmp
dec
aaa
fisubrl
test
out
sbb
shll
notl
xchg
sbb
int
adc
inc
repnz
sub
popf
pop
or
lret
and
jge
test
xchg
imul
mov
xchg
mov
pop
or
sub
aam
push
test
gs
fsubrs
adc
and
xor
flds
loop
push
test
fidivrs
xchg
pushf
inc
mov
jg
sbb
xchg
push
loopne
movq
adc
dec
jg
mov
insl
dec
sub
add
inc
lret
ficoms
jg
dec
push
subl
cltd
add
cwtl
loope
icebp
jge
int
int3
sahf
pop
cmp
nop
arpl
inc
shlb
aam
ficoml
dec
test
jnp
adc
shrl
inc
pop
or
das
mov
jb
sbb
xchg
mov
les
mov
ljmp
arpl
jge
mov
cli
xchg
adc
icebp
gs
dec
dec
scas
pusha
add
pop
das
das
push
mov
mov
sbb
mov
push
sarb
xchg
cmp
and
scas
aam
rcll
pop
pop
mov
fimuls
loopne
xor
mov
cmp
cmp
decb
hlt
cltd
rolb
negl
add
aas
sarb
xchg
aas
scas
aaa
arpl
in
push
ss
lods
into
lret
in
int
jmp
imul
add
repz
mov
push
mov
or
arpl
pop
xchg
aad
mov
inc
es
cmpsb
fildl
mov
insb
andl
cmp
iret
mov
and
or
outsl
sbb
push
dec
stos
shl
arpl
mov
push
sbb
lahf
xlat
add
fldz
stos
cmp
jno
fcompl
aam
ret
push
into
jecxz
adc
inc
and
xchg
and
test
sub
in
shlb
int3
stos
jg
dec
ret
push
fsubl
pop
jns
std
cmp
lret
add
xor
jno
mov
xor
and
rolb
enter
push
movsl
xchg
lret
testb
pushf
or
xchg
out
cwtl
adc
push
lds
dec
in
shrl
sbb
inc
mulb
cmpsl
mov
das
jl
mov
and
sub
mov
add
ret
leave
jns
test
inc
sbb
add
pop
sbb
pop
mov
sbb
popa
inc
cmp
sbb
mov
add
add
idivl
test
call
int3
pop
inc
outsl
fwait
cmp
loopne
repz
and
pop
cltd
push
add
ja
mov
dec
ss
sti
sahf
imul
es
es
imul
movsb
add
test
dec
or
push
test
xchg
mov
aad
nop
push
add
add
mov
adc
loope
or
push
or
xor
adc
andb
xor
loope
push
aaa
xchg
decl
and
stos
mov
dec
jmp
pusha
leave
movsb
ja
fisttpl
insl
es
add
iret
mov
jge
add
loope
adc
add
fmull
test
loope
xchg
ja
mov
jne
push
pop
sti
xor
xor
mov
push
cmp
jecxz
bound
mov
mov
xchg
lcall
lock
es
jecxz
daa
mov
xchg
add
nop
mov
pop
pop
sub
ret
fcomip
inc
sahf
jmp
mov
inc
int
mov
pop
movhlps
xchg
xchg
sti
sub
arpl
mov
jbe
and
divb
cmp
cmp
rclb
loop
mov
sub
fiadds
add
mov
in
push
pushf
jns
dec
lods
mov
shr
adc
xor
push
push
mov
and
push
sbb
cmp
rclb
cmp
inc
push
sbb
sub
sbb
arpl
push
adc
ret
jnp
mov
clc
fwait
sbb
mov
mov
adc
mov
xor
in
loopne
cld
outsb
add
shll
and
scas
mov
sbb
inc
lods
jns
sbb
sbb
inc
clc
inc
inc
and
add
mov
stos
test
push
sti
dec
xchg
fwait
idivl
cmpsb
mov
xchg
mov
pushf
cmp
cmp
pop
mov
push
addr16
push
fimuls
test
jl
xor
jge
add
sub
imul
xchg
mov
imul
dec
fistpl
icebp
mov
xchg
xchg
sbb
push
in
pushf
jle
push
adc
add
xor
push
subl
fdivr
inc
rcll
pusha
test
cmp
aaa
mov
insl
test
test
mov
sbb
xchg
mov
ret
lret
pushf
adc
stos
out
jo
jo
cmp
inc
fidivrs
mov
cmp
or
icebp
mov
jecxz
mov
stos
mov
mov
mov
lods
out
inc
sub
decb
shlb
test
dec
fadds
pushf
push
adc
pop
in
and
mov
jns
stos
mov
imul
mov
outsb
adc
push
test
mov
mov
cmp
xor
mov
insl
mov
xor
arpl
js
add
mov
pop
outsl
push
cmp
lahf
dec
pop
pop
out
hlt
cmp
fcompl
addr16
clc
dec
dec
sahf
cmp
add
pop
in
mov
cmp
in
jp
mov
jb
or
jg
cmpsl
ficoms
inc
addr16
jae
sub
mov
xchg
scas
jmp
call
push
xchg
sub
insb
jge
inc
and
mov
mov
adc
rorb
xchg
imul
imul
sahf
sub
stos
shrl
xchg
pop
inc
adc
pop
in
out
sub
hlt
ja
xor
sti
push
popf
lret
sbb
mov
mov
data16
inc
ss
addr16
add
xchg
ret
clc
ret
adc
mov
imul
or
jmp
outsb
lds
aam
mov
repnz
inc
popf
sub
test
imul
xchg
out
adc
inc
xlat
mov
sbb
jbe
mov
or
gs
movsl
test
xor
loope
pop
mov
fbstp
jl
fsubl
jecxz
js
jns
repz
mov
cli
sub
rcrb
push
jo
add
mov
cmc
call
adc
dec
rolb
in
dec
aaa
scas
decl
and
pop
xchg
mull
orl
mov
sbb
in
sbb
xor
or
inc
mov
mov
nop
test
pop
stos
in
cmpsb
bndldx
ljmp
mov
xor
inc
jno
and
popa
dec
mov
cmpsl
push
dec
pop
lea
add
dec
subb
rcll
dec
inc
dec
daa
push
or
mov
pop
lahf
sub
in
out
ror
inc
xor
dec
mov
mov
loope
pusha
push
fs
or
mov
dec
into
add
adc
sub
or
insl
or
dec
stos
dec
mov
std
ret
pusha
sti
push
jg
xchg
cmove
aas
jle
sar
and
insb
cmp
aam
movl
inc
jne
cld
jg
jle
aam
cmp
sti
xor
lods
dec
shrb
fs
mov
jge
and
push
ss
pop
in
push
pop
add
push
mov
adc
add
ffreep
inc
mov
out
scas
ds
lods
les
into
lret
and
lods
out
inc
fwait
nop
bound
sbb
lret
lock
push
or
sub
cmc
sub
hlt
push
push
insb
das
xor
inc
or
mov
cltd
sbb
xor
call
pop
into
js
cmp
lods
jb
cmp
leave
lods
fisubl
stos
out
adc
repz
idivb
mov
xor
hlt
sub
or
hlt
movsb
mov
pop
jp
ss
jecxz
jp
or
pop
daa
jle
cmp
mov
xor
or
int3
scas
push
jecxz
push
lahf
aaa
arpl
pop
out
push
out
sbb
incl
test
xlat
push
lcall
mov
push
divl
testb
mov
xor
sbb
pop
mov
movsb
fistpl
mov
and
test
mov
dec
jae
add
dec
addl
scas
add
mov
out
xchg
mov
mov
fildl
pusha
fbstp
sub
test
sbb
cli
sub
mov
mov
and
pop
rolb
clc
jge
stc
xor
sbb
in
sbb
fidivrs
sahf
ror
jo
or
inc
cwtl
scas
sti
jecxz
popf
not
jmp
icebp
sub
jno
dec
aam
mov
cld
adc
push
icebp
pop
mov
ss
or
mov
jmp
subb
push
leave
add
xchg
or
aaa
jmp
lods
mov
mov
sti
xchg
jmp
mov
sub
push
sub
out
jecxz
mov
mov
inc
repz
cmp
cmpsb
sti
in
cld
cmp
es
mov
jne
dec
and
int
dec
add
bound
push
pushf
mov
cmp
enter
int3
add
pushf
mov
addps
dec
jns
rcrb
cmpl
push
or
rcr
push
aaa
addl
stos
dec
and
xor
or
in
cmp
pop
and
fcoms
out
rorl
test
jne
sbb
mov
xchg
dec
jmp
jl
outsl
xchg
sub
pop
cmc
xlat
inc
bound
or
rclb
jbe
cmpsl
sbb
xor
bnd
xchg
push
outsl
or
inc
mov
jmp
dec
fsubp
jl
clc
ja
inc
inc
cli
leave
fadds
mov
bnd
cmp
cmp
push
ret
mov
mov
fcmovu
cmp
in
js
push
dec
and
rclb
pop
outsl
divb
xchg
push
add
lea
adc
dec
mul
mov
mov
add
adc
pop
pop
lret
ljmp
int
mov
push
in
xchg
out
fimull
xor
xchg
add
stc
jo
test
xor
mov
imull
lods
jnp
ja
push
inc
fs
mov
jp
in
mov
outsb
sbb
jl
insb
sub
enter
adc
and
sub
cmpsb
and
imul
mov
push
cmpsb
xorl
push
leave
xchg
cmpsl
or
cli
out
jne
fcomp
mov
stos
mov
arpl
stos
jbe
sub
or
mov
sahf
fistpl
pop
pop
mov
test
sub
mov
dec
sti
add
filds
adc
lret
add
cli
subl
dec
mov
out
jns
push
daa
roll
cltd
push
movsb
push
add
sub
sar
dec
inc
jb
inc
jge
sub
mov
mov
pop
stos
js
mov
sub
in
popa
les
push
mov
lcall
dec
pushf
subl
sub
pop
jmp
push
imul
and
sbb
stc
mov
les
outsl
xchg
jae
inc
push
jnp
add
shll
push
push
jb
loopne
insl
fnstsw
xor
test
add
rolb
test
int3
insl
test
stc
fs
push
insl
jno
mov
lods
or
mov
dec
sub
sbb
cmpb
add
lret
jbe
mov
and
push
das
leave
dec
sbb
dec
sbb
jns
loopnew
sahf
enter
mov
jo
push
jp
mov
mov
xchg
cmp
sbb
sarl
push
roll
xor
mov
mov
bound
mov
push
divl
daa
in
pop
in
cmp
sub
addr16
scas
adc
xchg
incb
lret
sahf
sub
push
aad
cmp
cmp
cmp
pop
std
xchg
aaa
jns
cmp
cmp
jg
mov
jmp
test
push
pop
pop
adcb
pop
ljmp
mov
out
sarb
add
sub
ret
imul
pop
fsub
inc
stos
inc
or
cld
int3
or
mov
js
xor
sub
pushf
xchg
mov
inc
hlt
cmpb
sbb
and
pop
mov
out
loope
dec
mov
test
rorl
xchg
es
xchg
adc
ljmp
mov
and
add
out
addl
and
aad
jecxz
mov
sbb
andl
xchg
insl
and
arpl
mov
mov
xchg
dec
mov
pop
ficoms
inc
pop
repz
cmp
stc
cmp
push
jmp
xchg
stos
adc
mov
sbb
dec
push
xchg
leave
dec
pusha
pop
and
mov
sbbb
jae
xchg
pop
adc
mov
cmpsl
cmp
sbb
shrb
cmpsl
mov
jge
inc
jmp
cwtl
cld
jno
dec
push
sti
inc
lcall
leave
inc
fisubl
ds
xchg
das
shll
xchg
std
lock
push
imul
movsb
adc
mov
vcvtsi2sdl
out
int3
out
pop
dec
test
pop
or
add
out
jae
push
lret
movsb
and
divb
xlat
and
mov
sub
pop
pop
xchg
test
and
cltd
lods
add
jb
es
xchg
dec
ss
add
jle
xor
mov
sbb
lods
adc
adc
fsubrp
push
mov
or
sub
sbb
out
jge
aad
add
fldcw
test
mov
pop
and
cmp
scas
mov
xor
inc
sub
sbb
adc
lods
pop
push
adc
leave
add
and
dec
pop
mov
pop
insl
adc
mov
dec
sub
fistl
das
mov
or
pushf
inc
andb
xchg
ficomps
adcl
jge
mov
and
mov
add
pop
pop
mov
jno
cli
dec
idiv
add
mov
sub
pushl
xor
stos
hlt
mov
mov
adc
out
call
in
mov
xchg
js
es
push
inc
or
pop
std
pop
push
daa
push
adc
xchg
ja
dec
in
xchg
in
and
inc
mov
sbb
dec
rorb
sti
das
es
mov
out
jge
int
dec
dec
nop
imul
cmp
stos
imul
jo
jp
roll
dec
pop
sbb
inc
into
push
movsb
add
pop
sub
outsb
popa
pop
popa
idivl
xchg
pop
ss
and
dec
out
mov
mov
cmp
push
mov
mov
push
arpl
mov
ret
and
pop
loope
adc
xchg
push
push
inc
inc
stc
pop
inc
push
add
push
aaa
push
and
or
adc
ja
inc
fnstsw
je
sub
cmp
fbstp
stos
jb
lods
jge
ffreep
popf
nop
imul
sub
add
dec
mov
sbb
out
aad
aad
es
ret
dec
dec
add
ret
push
pop
pop
xchg
push
addr16
ds
mov
arpl
mov
aas
test
push
iret
je
mov
sub
cmpsl
push
push
jp
pop
adc
mov
nop
sahf
sub
mov
fcompl
frstor
cltd
jl
call
jecxz
cmp
add
into
arpl
into
jnp
std
fnstsw
jmp
sub
sub
xchg
add
inc
std
adc
mov
rcr
sbb
jecxz
xchg
lods
lods
or
cmpsl
test
adc
mov
xchg
add
mov
pusha
pusha
mov
lcall
sub
outsb
pushl
xchg
nopl
push
nop
adc
push
lea
in
mov
mov
cs
or
lahf
in
push
mov
adc
pop
xor
cmp
fldcw
xchg
lea
add
cs
nop
les
jle
into
sub
mov
xchg
sahf
adc
unpcklps
loopne
mov
mov
xchg
imul
and
sti
sbb
or
xchg
pushf
push
test
out
fdivs
pusha
inc
cltd
adc
ret
sbb
push
mov
jle
fidivrl
fistps
add
sub
shl
mov
jo
inc
inc
out
fsts
mov
jnp
push
cmpsl
out
mov
dec
in
cmp
scas
je
or
jge
mov
rcll
in
out
in
and
sub
sub
mov
pop
adc
xor
mov
and
inc
push
or
and
in
adc
inc
ja
push
fdivrs
bound
inc
fadd
and
test
mov
loop
jb
mov
sub
jnp
or
dec
fiaddl
xchg
cmp
pop
rcll
repnz
mov
popa
mov
in
ret
cltd
fnsave
and
lahf
nop
cmp
or
jmp
scas
ret
jge
push
ljmp
mov
jns
fildl
cmp
mov
pushf
push
test
push
popf
adc
mov
int
push
rcl
cmp
add
orb
lret
cmp
jle
xor
jge
push
enter
or
addr16
sub
aas
cltd
stos
jns
cmp
and
xchg
ds
aad
fs
mov
leave
in
cmpsb
cli
mov
sbb
test
jmp
insb
jge
dec
gs
fwait
xchg
in
adc
adc
push
pop
mov
adc
xchg
es
mov
cmp
aad
into
out
inc
mov
cmp
and
cmp
mov
and
scas
mov
jo
testl
or
dec
sub
test
dec
fldenv
and
pop
stos
jg
mov
outsb
cmp
pop
jbe
cltd
push
sbb
loop
ficomps
stc
scas
pop
int
sub
clc
test
dec
mov
data16
xchg
out
fs
into
out
xchg
xor
cmp
data16
lock
sub
into
adc
scas
fidivrl
movsb
daa
xchg
emms
inc
push
adc
ja
cmc
sbb
orb
push
js
aam
mov
imul
scas
jecxz
movl
mov
pop
mov
or
outsb
push
aas
push
mov
int3
xchg
xor
dec
xchg
jne
sub
adc
sbb
jo
lahf
in
pop
pop
pop
xchg
lahf
mov
mov
clc
pop
fisttpl
push
dec
ret
incl
pop
addl
orl
repnz
dec
and
je
dec
sub
cmp
dec
dec
in
movb
jmp
daa
sbb
push
push
lret
xor
into
test
nop
icebp
popl
mov
rorl
int
dec
or
int3
inc
inc
int
mov
add
sub
xlat
arpl
jp
cli
leave
push
hlt
lret
xchg
les
mov
adc
shr
pop
ror
dec
std
popa
fnstenv
mov
jmp
add
inc
cmpsb
mov
lret
push
fstpl
cmp
mov
adc
ja
and
jmp
dec
xor
movaps
push
inc
and
lods
jno
subb
js
pop
loope
push
pop
cmc
outsl
mov
ljmp
pop
pop
stos
inc
jmp
sub
xlat
lea
mov
xor
inc
cmp
test
in
jbe
out
adc
and
sar
mov
adc
push
das
cli
stos
pop
mov
push
lods
adc
xchg
jns
adc
xchg
mov
jne
or
popf
adc
mov
loop
adc
repnz
inc
repnz
fnstsw
sahf
jmp
int
jne
mov
scas
dec
mov
subb
lods
xlat
in
pop
lds
mov
ret
add
mov
xorb
popa
jl
jge
xor
adc
push
xchg
pop
nop
xor
add
pop
scas
fmul
sub
repz
push
adc
ds
adc
mov
jmp
cld
std
out
fs
fwait
rcr
sahf
outsb
cs
and
mov
roll
and
or
xor
ss
push
repnz
aam
sub
adc
mov
mov
cmp
fbstp
loope
shrl
xchg
adc
xor
mov
int
push
add
cmpl
jbe
aam
out
jl
mov
rclb
cmp
push
pop
cmpsb
mov
mov
sarl
inc
xchg
daa
mov
aam
jmp
int
pop
adc
inc
pop
inc
outsl
enter
or
rolb
xchg
dec
sub
cs
stc
in
fbld
jl
sub
imul
mov
aaa
ret
inc
push
xor
jl
fisttps
cmc
pushf
lahf
in
jp
je
or
or
imul
inc
push
movsb
push
xchg
mov
cmp
add
enter
push
popa
out
or
jnp
nop
mov
mov
mov
out
into
gs
xchg
sub
imulb
orb
loope
cmp
sbb
sarl
jns
std
addr16
lock
lcall
mov
test
inc
jns
mov
cmc
mov
push
imul
iret
js
out
mov
in
insl
jo
daa
roll
push
shr
xchg
int
jno
loopne
cmpsl
add
pop
dec
push
gs
inc
adc
xor
pop
jb
pop
mulps
push
push
inc
jb
cmpsb
cltd
adc
movsb
push
jecxz
or
xchg
popa
je
lds
rorb
or
jg
mov
jg
shlb
add
push
imul
jmp
cltd
idivl
or
inc
gs
jo
mov
sub
adc
push
mov
icebp
fildll
mov
scas
or
push
xor
add
js
jg
outsl
jns
sti
in
mull
sub
rolb
shll
popa
or
or
pop
push
fbstp
subb
dec
loopne
ds
sub
icebp
mov
jo
dec
dec
imul
icebp
insl
pushf
xor
gs
inc
mov
xor
pop
add
jbe
or
aaa
mov
mov
pop
int3
xchg
mov
rcr
loope
pop
loopne
ss
sbb
push
insb
imul
sbb
inc
es
inc
cwtl
push
dec
sahf
aaa
ja
out
mov
loop
rcrb
mov
push
sahf
xor
aas
nop
sbb
addr16
jecxz
cs
mov
test
push
fs
int
sub
xchg
mov
enter
or
push
and
inc
jnp
inc
rorl
cmpsb
mov
mov
sbb
mov
ret
mov
mov
cmp
lea
outsl
xchg
roll
es
push
jp
add
mov
xchg
fwait
ret
mov
ja
and
sbb
mov
mov
xchg
xchg
maxss
clc
push
jb
aaa
sub
stos
inc
cli
dec
or
inc
outsb
adc
inc
sub
and
repnz
mov
loop
insb
pusha
or
jae
cmp
pusha
or
stos
lods
xchg
int3
shr
pop
int
in
and
cmpsl
or
mov
xchg
sbb
in
add
inc
mov
iret
fdivrl
push
ffree
daa
mov
and
loopne
adc
cltd
fs
mov
outsb
cmp
lds
push
insl
or
sbb
daa
xor
es
xchg
add
insb
cmp
sub
arpl
jl
mov
cmp
mov
mov
loopne
adc
adc
roll
mov
imul
jno
filds
and
jns
xchg
fisubl
add
into
cmp
in
dec
mov
xchg
sahf
aad
sub
pop
push
push
dec
in
fistl
push
lods
push
mov
out
jo
iret
imul
add
pop
or
out
pop
arpl
xchg
cmp
in
pop
mul
sub
pop
pop
sbb
test
insl
push
loop
aas
jg
popa
fcmove
push
mov
in
into
frstor
or
add
fdivl
insb
push
scas
repnz
fdivrl
push
fucomi
pop
outsl
add
lea
fnstcw
jp
dec
sti
addr16
xchg
stos
push
call
push
outsl
or
scas
mov
dec
jg
test
cmp
out
iret
jp
mov
xchg
mov
fwait
lods
cld
addr16
aam
shrb
aad
inc
inc
xchg
xchg
mov
sub
mov
enter
or
mov
sbb
ds
mov
dec
jle
fcmovne
loope
sbb
push
ficoms
sbb
adc
mov
xchg
mov
stos
call
aaa
adc
out
pusha
ret
repz
sbb
cmpsl
mov
out
push
fst
ljmp
sbb
into
xchg
jle
push
mov
sub
jl
ja
push
cld
lods
loop
and
enter
push
adc
pop
sub
xchg
sub
ds
pop
pushf
addr16
daa
xchg
repz
xchg
clc
sahf
push
rol
mov
cmpsl
in
pushf
insl
pop
scas
data16
pop
mov
ja
popa
pop
add
test
add
cmp
in
push
cmp
sub
jge
jmp
push
stc
lea
jg
testb
mov
test
decb
mov
iret
and
fwait
mov
mov
enter
cmc
pop
daa
idivb
in
xchg
fadds
jl
push
inc
test
mov
fbld
bswap
addr16
les
push
adc
outsl
push
lods
push
xor
pop
jecxz
adc
sub
and
nop
ds
cmp
cmpsb
scas
scas
or
in
cmpb
lahf
xchg
je
cmp
jnp
dec
int
mov
in
sahf
fisttpl
ficoms
jne
fsubrl
rcrl
cmpsl
iret
ret
jge
mov
cmp
add
pop
in
insb
inc
pop
pop
sub
lahf
outsb
mov
lret
sbb
aas
mov
test
push
pop
test
mov
mov
adc
push
xor
arpl
jno
mov
jp
ficomps
and
cltd
push
mov
inc
int3
push
pop
inc
subb
add
roll
scas
jge
int3
lock
jge
ret
fadds
cltd
cmp
xor
xor
dec
outsl
call
popa
cs
and
imul
inc
and
fmul
mov
mov
out
inc
mov
ss
or
bound
mov
push
jg
loopne
mov
hlt
xorb
xor
dec
ficompl
mov
or
pusha
xchg
pop
jmp
in
cmp
xor
jl
sahf
adc
fnstenv
in
xor
jmp
and
stc
jge
lahf
in
cs
addl
push
jbe
fs
mov
mov
mov
xchg
inc
pusha
mov
aas
cmc
test
clc
imul
inc
outsl
les
sub
mov
jecxz
es
nop
mov
movsb
ljmp
push
stos
mov
jl
int
lcall
inc
push
dec
add
js
fcmovne
mov
mov
jae
or
cli
data16
inc
sbb
jae
xor
sub
mov
dec
xchg
enter
pop
jne
cmc
xchg
xchg
pop
das
loope
aaa
lret
pusha
xlat
aam
fcoms
jne
cld
mov
cmp
fmull
fsubr
mov
movsb
iret
xchg
inc
adc
es
push
dec
ret
adc
mov
or
sbb
lds
pop
cmp
pop
jmp
in
mov
push
bound
and
lods
xchg
sahf
jp
lea
adcl
movsl
or
mov
test
fdivl
scas
xlat
jp
out
pusha
inc
push
adc
aad
sub
sbb
and
bswap
out
xchg
push
stc
std
and
popf
std
das
xor
sbb
push
sbb
xchg
pop
pushf
mov
out
mov
push
sub
dec
cwtl
sub
and
push
repnz
enter
mov
adc
mov
and
or
xchg
lods
mov
sub
or
movsb
je
adc
dec
pop
repz
lret
xchg
enter
sahf
scas
mov
and
das
out
ffreep
mov
pop
jae
jp
adc
in
lock
xchg
outsl
ret
scas
pop
mov
and
fbld
mov
sbb
mov
mov
popl
cmp
jp
xor
xchg
int
and
enter
sbb
dec
pop
mov
cmp
movntq
fcompl
fidivs
popa
pop
fs
test
mov
int3
scas
and
aad
mov
dec
fadd
jae
mov
rolb
dec
loop
jle
xor
loop
cmp
push
mov
mov
movsb
mov
je
outsl
rorb
lret
lock
xchg
lea
scas
mov
mov
or
jle
lahf
lcall
je
xor
ffree
pop
in
aad
cs
aad
ret
xor
leave
mov
aas
inc
xchg
sbb
add
insb
push
sbb
sbb
jle
bnd
mov
cltd
and
mov
or
rclb
imul
add
sub
fdivl
mov
jmp
ret
xchg
or
xor
jo
dec
pushf
insb
push
mov
jno
mov
test
inc
or
add
and
les
addr16
movsl
cmp
and
fwait
inc
inc
pop
aad
sbb
jno
pop
or
pop
test
jecxz
jg
mov
and
push
mov
pop
ret
in
pop
dec
cld
and
dec
nop
pop
cmpsl
mov
aad
in
xchg
jnp
adc
jb
aam
dec
sub
outsl
mov
popf
lahf
int3
in
pavgw
ret
lods
arpl
imul
sbb
popa
add
ret
shlb
in
js
enter
shll
pop
push
in
push
mov
lahf
cltd
ss
push
xor
mov
aam
es
icebp
adcb
clc
xchg
roll
in
xor
push
pop
dec
and
and
lahf
jb
xchg
lock
outsl
insb
mov
pop
iret
js
mov
inc
pop
or
sub
les
incb
pop
loope
push
inc
cmpsb
adc
xchg
aam
in
xor
lea
jp,pt
test
mov
out
test
mov
cmpsl
pop
xlat
mov
hlt
rclb
in
out
add
push
jns
dec
js,pn
mov
xor
and
or
outsb
enter
mov
gs
fisttpll
shl
pop
mov
subb
sahf
mov
notl
add
out
aad
sbb
shl
ljmp
rsqrtps
and
lcall
sarb
and
and
cld
ret
test
fadds
in
into
ud2
sub
lds
mov
addr16
dec
fisubrl
jbe
lret
int3
or
dec
rcl
adc
xor
push
inc
mov
xchg
out
sbbb
js
mov
jl
sbb
adcb
cwtl
jns
iret
fstps
fdivl
pusha
test
out
push
dec
xor
inc
xlat
stc
fldenv
enter
push
mov
cmp
imul
iret
mov
or
jns
xchg
and
repz
jno
lret
push
pop
in
data16
or
cmc
loop
out
push
xchg
nop
dec
xor
outsb
nop
xchg
sbb
cmpsb
popa
cmpsb
repnz
pop
arpl
ret
jmp
inc
sarl
and
rolb
push
mov
fcoms
xchg
dec
jne
xlat
and
fdivrp
xchg
rcrb
inc
rcll
repnz
adc
frstor
and
jmp
cmp
lret
adc
mov
mov
xchg
clc
cld
leave
ret
dec
imul
pushf
and
jl
lret
testb
sti
adc
mov
inc
lahf
pop
add
outsl
popf
xchg
xchg
mov
dec
lods
lock
test
xchg
lods
or
jmp
ljmp
mov
repnz
sbb
adcl
lods
push
and
pop
xor
jmp
and
push
mov
and
xor
subb
xchg
scas
subl
aaa
outsl
inc
xor
adc
pop
pop
call
pop
sbb
adc
cwtl
sub
cli
jl
int3
sbb
mov
jge
lret
xor
xchg
lcall
aas
loop
fisubrs
outsl
lret
pop
fists
or
or
sub
mov
and
and
test
pop
add
or
mov
out
mov
or
push
fdivr
jle
lahf
dec
cld
rcrb
mov
xchg
pop
cli
cmc
dec
std
sub
out
das
mov
inc
pushf
sbb
dec
mov
jp
les
and
jle
data16
xchg
loope
dec
stos
cwtl
jg
mov
decl
mov
xchg
dec
push
push
enter
lret
inc
mov
in
pop
js
mov
sub
push
stos
out
ss
pop
mov
mov
loopne
mov
xor
stos
sub
loop
dec
sub
adc
clc
fs
lea
outsb
pop
inc
int
cmp
inc
rcll
arpl
or
das
loop
mov
mov
aam
dec
fwait
arpl
mov
cs
jae
xchg
ffree
xchg
imul
rcrl
adc
cmp
xor
pop
adc
cld
lds
mov
pop
add
mov
popf
pop
adc
or
mov
jg
mov
outsl
xor
pop
jb
adc
gs
imul
cli
add
mov
sub
pusha
hlt
xchg
pop
cmp
mov
test
insl
jecxz
pop
aas
and
pop
in
js
jle
and
loopne
add
cmp
cld
xchg
pusha
loopne
ret
xchg
sub
test
jns
mov
rorb
cmp
push
std
fdivs
lea
iret
test
jecxz
add
int
xchg
mov
adc
aas
cmp
rclb
divl
imull
shll
jne
insb
cmp
sub
and
aam
pusha
or
pop
sbb
movsl
leave
push
sub
fmul
xor
mov
in
sti
pop
mov
cwtl
ljmp
leave
and
add
and
ret
mov
lods
fiadds
loope
sar
pop
stos
or
sub
mov
mov
fwait
sub
cmp
dec
dec
imul
sarb
out
rcrb
out
movsl
in
out
fbstp
and
or
lahf
pop
xor
xchg
xor
pop
cmp
lcall
jecxz
ret
mov
pusha
shlb
arpl
movsb
push
push
and
test
adc
jecxz
inc
pop
push
jmp
fwait
cmpl
dec
ds
xchg
ret
inc
fsubrs
inc
testb
lea
mov
xchg
dec
lret
hlt
and
out
out
jge
hlt
cmp
lods
cs
jae
push
pushf
movsb
lods
adc
mov
shrb
cmp
repz
insb
fmulp
int
ret
aad
shrb
dec
mull
sahf
call
popf
iret
fstl
stos
ret
ja
imul
lods
sbb
scas
in
add
loopne
cmp
mov
sti
shll
pop
aam
out
push
stos
gs
cmp
adc
data16
aad
dec
pop
push
mov
sbb
arpl
mov
loope
fimuls
pop
shrl
push
mov
mov
or
int
out
fisubrl
sub
arpl
cli
or
lods
imul
pop
fsubr
xchg
cmp
test
cmpb
inc
outsl
dec
daa
fcmovnbe
xchg
ja
push
loop
es
push
xchg
pop
lcall
clc
or
push
aas
outsb
cmp
jp
enter
push
jno
andl
pop
fdivrl
adc
pop
jbe
push
sbb
cmpsb
test
mov
movb
aas
test
inc
mov
sbb
pop
aas
insl
cs
sti
adc
sti
sarb
pop
cmp
jmp
repz
mov
or
mov
sbb
mov
std
sbb
aad
jbe
lret
sbb
inc
and
dec
jecxz
inc
test
jb
test
jo
test
into
lods
or
aaa
fmull
aad
cmc
pop
or
push
mov
sub
andb
mov
and
xorl
scas
cs
sub
mov
jb
scas
aam
aam
lock
mov
cltd
adc
push
mov
ss
inc
repnz
pop
dec
enter
arpl
pop
sti
sub
lret
int
in
in
arpl
loop
jle
push
xchg
sarl
mov
mov
mov
call
dec
xor
mov
pop
pusha
inc
cmp
jno
adc
push
movsb
push
sbb
sub
mov
repnz
adc
pop
jecxz
lock
inc
mov
icebp
xchg
out
adc
leave
mov
and
or
push
or
lods
rcrb
and
and
sbb
mov
je
test
hlt
int
testb
xchg
or
jbe
nop
sub
jbe
or
adc
cmp
push
xchg
stos
popa
or
es
pop
pop
xchg
jb
xchg
inc
into
xor
mov
orb
cwtl
sbb
inc
jle
sub
ffreep
out
add
add
cmp
adc
loopne
pop
scas
cmp
dec
int3
popa
or
fld
dec
sub
pop
ds
das
pop
mov
mov
fisttpll
int
push
mov
movsbl
push
jne
insb
rolb
cmp
inc
dec
gs
mov
mov
addl
mov
mulb
mov
cs
rol
movsl
das
int
in
ljmp
movb
cltd
addb
lds
rol
ds
mov
pop
les
imul
clc
clc
pop
add
sub
movsl
inc
cmp
mov
rcrl
mov
push
ds
xchg
xor
call
lea
adc
fstp
xchg
popa
ficomps
add
adc
daa
xor
aad
rcll
or
jg
popf
popa
fcomps
push
arpl
jns
push
xchg
outsl
push
stc
addr16
push
outsl
rcr
sub
ficompl
adc
outsl
or
push
call
pop
mov
mov
daa
sbb
pushl
or
cmp
int
or
inc
mov
fnsave
rcrl
push
jmp
loopne
lea
lock
addr16
pop
cmp
rclb
xor
jmp
sbb
xor
lcall
xchg
repnz
jmp
and
sbb
aam
stos
dec
popa
push
pop
xchg
aaa
cmp
sub
xchg
addb
mov
pusha
mov
stc
mov
mov
in
shl
adc
leave
mov
mov
jmp
and
inc
out
pop
setbe
lcall
mov
inc
xor
out
cmp
repz
adc
push
pop
cld
push
inc
inc
test
pop
cmp
call
xchg
xor
ds
or
mov
mov
in
leave
jmp
sbb
out
jl
iret
iret
xchg
arpl
shrb
dec
xchg
lods
adc
loope
jne
xchg
in
scas
fists
dec
int3
enter
jnp
stos
or
xor
mov
jg
mov
test
inc
std
insl
xchg
mov
ret
xchg
dec
lods
add
scas
mov
fpatan
mov
cld
orb
add
and
push
inc
adc
call
jle
xchg
ljmp
dec
lret
mov
fstpl
dec
or
push
js
pushf
nop
or
xor
cmp
push
pusha
dec
test
jl
jo
jecxz
xlat
xchg
push
cmpsl
and
adcl
or
dec
loope
sbb
nop
add
div
inc
fs
and
subl
orl
out
daa
push
push
inc
pushf
mov
inc
out
adc
sbb
into
loopne
int3
fcomps
clc
cmp
mov
pop
adc
pop
xor
jecxz
mov
cmpb
es
lret
jo
mov
dec
loopne
jmp
mov
mov
jo
imulw
jo
mov
dec
adc
fmulp
xchg
mov
sbb
andb
iret
pushl
shl
mov
fsts
push
xchg
jo
fcoms
adc
mov
jmp
jl
jmp
cmpsb
popa
sbb
ds
stos
xchg
sbb
fs
test
mov
addr16
or
ljmp
in
jle
sar
or
aas
pushf
int
push
out
jo
je
mov
out
mov
mov
pop
mov
lret
jo
inc
lcall
xchg
push
in
fildll
jg
repz
pop
cld
sub
dec
xor
outsl
arpl
testl
dec
mov
xchg
movsl
sub
and
rcrb
sub
xor
ja
rcr
rol
mov
xor
jp
aaa
test
push
test
push
dec
dec
ficoms
gs
or
sbb
daa
pop
sti
mov
adc
mov
add
pushf
and
inc
ret
add
fcoml
fsubl
mov
shll
mov
push
mov
fisttpl
ffree
imul
push
test
lcall
hlt
pop
push
out
repnz
shrl
pop
shlb
or
dec
fcoms
lahf
ret
mov
popa
les
fistpll
std
sub
cmp
or
jmp
cs
sub
leave
mov
jns
aaa
inc
sarb
pop
adc
test
divb
pop
inc
jb
and
aad
popa
ja
sbb
popa
cmc
lret
shll
sbb
in
ret
mov
or
mov
ljmp
add
aad
xchg
jnp
cmp
and
xor
call
lods
fsubrs
psrad
push
sub
mov
es
cmp
ficompl
pop
cli
cli
dec
aam
idivb
add
test
or
stc
or
sti
push
mov
mov
ficomps
mov
sub
scas
or
outsl
and
fwait
xorl
outsb
dec
dec
jmp
es
xchg
test
pop
jno
xchg
sbb
sbb
push
fadds
enter
push
push
inc
xchg
mov
and
out
clc
mov
lods
add
mov
mov
out
lea
insl
mov
mov
lock
ret
dec
or
jo
out
loop
mov
in
jp
ljmp
iret
idivl
dec
daa
int3
pop
rcrl
pop
xor
mov
dec
sti
hlt
jae
fcomps
cmp
loopne
enter
dec
adc
jne
inc
xchg
test
inc
xchg
fxch
lods
push
jns
push
shrb
push
cli
add
pop
test
adc
xor
lods
icebp
mov
fbld
mov
jle
adc
xchg
jg
dec
add
das
cmpsl
xchg
fistl
cmp
and
xor
inc
pop
roll
sub
pop
mov
sbb
les
stos
hlt
int
inc
imull
xchg
adcb
lds
fmuls
andl
scas
popa
pop
mov
rorb
xorl
xchg
sub
rorb
adc
xchg
push
jecxz
in
fistpl
imul
notl
mov
or
push
inc
fmulp
ljmp
arpl
lcall
hlt
rorb
fstp
popa
int
mov
lods
jmp
mov
mov
sbb
jb
inc
push
clc
shl
jb
mov
push
mov
add
fisubrl
inc
push
movsl
push
mov
sahf
add
fbstp
jp
lret
or
jecxz
and
xor
fs
loop
sti
inc
sbb
test
jg
in
push
rcrl
fstpt
fnstcw
and
popa
pop
cltd
ss
insb
xchg
pop
pop
iret
and
fcmovnbe
mov
sbb
repnz
mov
aad
cmp
shll
mov
subb
adc
jg
mov
loop
cmp
jl
dec
stc
iret
jle
mov
scas
push
push
xchg
insb
mov
mov
test
inc
sub
mov
xchg
pop
xchg
adc
mov
ja
sub
mov
adc
sub
sub
sbb
xchg
push
inc
mov
test
scas
shll
xchg
sbb
adc
fisubl
test
out
xlat
mov
sub
je
sub
clc
adc
cmc
insb
cmp
or
lret
mov
and
and
stc
jl
loopne
ficompl
sub
popf
shll
aaa
jmp
insb
aad
loop
enter
ret
sti
repnz
imul
push
movsl
push
ret
scas
push
and
out
inc
adc
mov
fidivs
mov
add
adc
pop
xchg
inc
popf
pop
mov
xor
push
sub
xchg
sub
mov
mov
std
out
int3
test
or
add
mov
jge
and
push
mov
dec
pop
mov
push
movl
pop
dec
mov
inc
rcrb
mov
or
push
cli
mov
sub
stos
in
pop
insb
dec
in
outsl
popa
mov
nop
sbb
inc
fldenv
fcompl
std
test
dec
fwait
lock
fwait
sbb
cmp
inc
jne
push
sbb
in
or
mov
into
fildll
push
mov
jno
inc
xchg
les
int3
mov
xbegin
inc
in
data16
mov
add
cwtl
fs
mov
mov
or
mov
fwait
loopw
rorb
or
cmp
cli
sub
out
add
popf
dec
popa
jge
shll
ss
aam
inc
jmp
push
mov
nop
in
sbb
loope
ret
nop
imul
add
or
faddl
das
adc
ret
movsl
sbb
ja
out
mov
sub
mov
es
push
test
or
std
subb
imul
add
inc
cld
mov
or
outsl
lea
dec
mov
int3
sbb
test
or
fwait
xchg
jge
cld
and
shll
pushf
icebp
outsb
test
test
bound
jbe
xchg
xor
xorb
jbe
aas
sbb
add
inc
inc
sarb
mov
inc
jb
xlat
fcmove
dec
ret
rol
pop
cmpsb
in
sbb
cwtl
insl
pop
sub
repz
mov
pop
push
lea
adc
bound
pusha
cmpl
jbe
xchg
stc
dec
cs
push
jmp
imul
int
stos
jns
ret
sbb
shl
enter
dec
dec
pop
stc
and
push
scas
or
iret
mov
mov
xlat
fs
mov
push
sarb
inc
push
je
aas
je
pushl
fcoml
inc
xchg
jnp
xor
jo
pusha
sbb
cmp
shl
lods
les
xchg
xor
cltd
iret
ret
mulb
movsb
out
or
pop
int
push
jnp
dec
mov
loope
jae
fadds
sbb
ja
xor
mov
cs
pusha
rol
imul
cli
into
xor
and
mov
lcall
push
out
xor
out
in
sub
xor
outsb
push
xor
ret
shll
rsm
dec
or
cmc
lods
enter
rcrb
xchg
pop
jbe
lret
jae
out
int3
cli
and
xchg
push
xchg
push
insb
test
inc
adc
lea
inc
mov
jno
push
and
and
sarb
call
test
pop
inc
cmpb
dec
pop
arpl
gs
cwtl
in
arpl
jg
out
mov
xorl
stos
and
or
push
cli
in
cmpsb
shl
dec
iret
jns
jne
xor
push
rcr
mov
or
addr16
adc
clc
gs
clc
sbb
mov
dec
or
iret
jp
call
mov
lahf
and
adc
xchg
cld
dec
filds
dec
adc
inc
mov
ret
mov
xlat
pop
enter
insl
pop
lods
xor
add
push
push
daa
pusha
hlt
xchg
lods
cmp
cld
jno
es
ds
and
pusha
popf
jg
test
sub
ret
lds
jo
sub
data16
fistps
hlt
inc
or
mov
dec
sti
sub
push
inc
movsb
inc
cld
stos
jae
xorl
add
mov
or
gs
scas
mov
call
mov
jns
and
and
jno
arpl
push
add
iret
sbb
fwait
push
scas
xor
aas
pushf
mov
xorl
in
xchg
icebp
test
int3
and
mov
mov
lods
and
sbb
jnp
dec
in
dec
les
in
insl
lahf
lea
fisubrs
mov
push
cmpsb
sbb
dec
fxch
lcall
and
jg
lret
je
mov
rcr
pop
mov
add
or
mov
mov
or
test
insb
test
xchg
inc
shlb
int3
rcl
out
ljmp
cmp
mov
inc
in
dec
out
xchg
jle
mov
mov
sbb
cmp
nop
jb
or
out
ror
jae
add
sti
mov
push
push
clc
lock
leave
mov
jbe
imulb
dec
adc
lock
cmpsl
pop
stos
cmc
fstl
xor
sbb
sub
mov
sbb
jg
and
xor
adc
movsb
sahf
mov
mov
jl
std
dec
clc
stos
scas
cli
jno
stos
faddp
outsb
mov
mov
enter
fdivrl
and
xchg
stos
pop
mov
sub
pop
mov
mov
test
adc
jge
movsb
dec
sbb
fisubs
call
arpl
jb
xor
lods
add
jmp
push
mov
adc
xchg
inc
shll
adc
push
cli
mov
dec
in
mov
out
add
lret
sbbb
inc
arpl
xor
orb
outsl
out
mov
cltd
pop
jmp
repnz
push
lcall
and
xchg
and
xchg
mov
repz
mov
imul
movsb
mov
pop
into
pop
dec
xor
orl
or
and
aam
sub
jae
push
sahf
sbb
inc
mov
pop
add
addr16
and
aam
xor
add
jo
mov
jo
std
imul
fidivs
dec
out
inc
jae
ds
incl
sbb
repz
xlat
call
leave
mov
or
negl
ret
andb
arpl
mov
addr16
mov
js
mov
sub
cld
push
fnstsw
jno
stos
loop
xchg
mov
mov
flds
jae
mov
pop
pop
mov
imul
imul
cli
loop
jmp
pop
jns
hlt
mov
adc
stos
jo
test
movsb
out
imul
andb
xchg
jmp
mov
ret
push
lret
scas
jae
jne
loopne
cld
incl
pop
mov
xchg
dec
or
lcall
jmp
cmp
xor
dec
or
mov
mov
icebp
dec
popa
add
mov
xlat
push
scas
stos
out
or
xlat
jg
repnz
arpl
adc
icebp
sbb
mov
mov
pop
cmp
sub
inc
arpl
adcb
dec
shlb
jge
lret
fistpll
push
aad
xchg
movsl
mov
mov
arpl
mov
sbb
stc
xlat
jmp
imul
mov
push
add
sar
insb
push
in
fwait
shl
mov
fucomi
push
ljmp
arpl
mov
pop
jbe
add
test
cmpsl
das
dec
movsb
xchg
adcl
mov
cmp
out
push
mov
dec
lcall
mov
xor
iret
xor
jns
xchg
daa
cmp
aas
jg
mov
outsl
xor
xor
data16
pusha
jb
push
loopne
xchg
inc
ja
js
mov
sbb
and
pushf
hlt
push
jg
adc
push
push
dec
sbb
loopne
inc
add
mov
or
add
add
push
cli
sbb
cmpsl
lock
inc
cmp
mov
filds
and
pop
stos
and
xchg
or
mov
cmc
repnz
test
dec
mov
addr16
dec
inc
lret
movsl
xchg
lea
jae
pop
popa
mov
mov
imul
fistpl
lods
mov
js
sbb
imul
and
cld
fcompl
shl
push
insb
mov
ljmp
jns
and
dec
cmp
mov
lahf
jae
sub
lcall
cmp
fwait
pop
mov
mov
pop
adc
and
or
cwtl
push
hlt
clc
movsb
pushf
jg
and
mov
sbb
mov
xor
enter
pop
pop
dec
sub
cmp
js
inc
sub
jo
or
jo
mov
stos
fnstenv
pop
daa
push
or
dec
sbb
pop
inc
mov
xor
push
cmp
cmp
pop
cmc
inc
jl
dec
imul
mov
shl
pop
fucom
cli
xor
fwait
mov
xchg
dec
mov
aaa
out
and
mov
jle
sbb
scas
mov
call
mov
dec
lret
les
mov
jne
jnp
or
popf
mov
movsl
paddsb
cmc
in
sarb
cli
int3
out
mov
dec
mov
clc
pop
jmp
xchg
rcr
repnz
mov
mov
inc
jno
shll
sub
sbb
std
shr
pop
mov
das
aas
ret
xchg
pop
repnz
push
xchg
adc
sbb
mov
mov
dec
cmp
adc
adc
sub
testl
mov
push
ret
push
scas
loopne
addb
test
iret
adcb
cmpsb
jnp
push
dec
cs
stos
mov
test
and
fisubs
add
mov
and
movsl
xchg
test
xchg
inc
lea
adc
fwait
xchg
std
sbb
adc
sbb
mov
xchg
or
sub
cmpl
sbb
xchg
push
sub
lock
insl
pushf
pop
mov
rolb
sbb
mov
push
dec
repnz
fsubs
ret
push
inc
adcb
clc
push
cmp
shrb
js
add
inc
les
sti
inc
adc
cli
push
adc
xor
in
mov
mov
mov
cwtl
imul
lock
xchg
mov
sub
movsb
pop
rolb
sbb
aaa
sub
push
dec
mov
or
mov
pop
jnp
hlt
lock
test
repz
xor
sub
adc
popf
push
popf
dec
scas
inc
sub
xchg
sti
insb
cs
dec
dec
push
stos
insl
xchg
mov
out
aaa
xchg
lea
dec
scas
adc
loopne
lret
ljmp
dec
or
loop
fisubrs
sub
scas
aaa
or
inc
shlb
in
and
out
fbstp
inc
flds
pop
adc
or
in
cmpsb
arpl
movsl
mov
add
fimull
cmp
subb
mov
mov
dec
cmc
lock
push
add
scas
jge
out
sbb
xlat
and
xchg
xor
xchg
push
gs
and
add
xor
or
lock
or
xchg
std
mov
in
pop
mov
fsubl
dec
pop
divb
sub
fiaddl
das
cmp
negb
xchg
or
lahf
mov
add
xchg
fisttps
ret
sub
mov
dec
push
xchg
and
fiaddl
jmp
lock
and
call
jg
sbb
fmuls
inc
lret
outsl
inc
sbb
sbb
dec
aam
outsl
mulb
mov
imul
push
inc
out
jnp
push
dec
or
adc
loop
rcrb
call
mov
movsb
and
fildl
mov
dec
add
sbb
mov
shll
xchg
or
push
mov
or
inc
cmovle
imul
push
bound
xor
ficompl
or
push
xchg
sarl
xchg
pop
and
imul
jl
rcrb
sbb
cmp
jmp
sbb
aam
pop
sbb
xor
add
fcompl
mov
dec
or
insb
cmpsl
mov
and
int
stos
jl
push
aad
ret
bound
cld
mov
je
mov
lcall
aam
faddl
push
call
in
imul
cwtl
cmp
push
data16
sub
cli
mov
jecxz
dec
inc
xchg
xor
xor
mov
cmp
and
dec
jecxz
insl
fnsave
rclb
into
lods
imul
dec
scas
push
call
cmpsb
xor
mov
test
fs
xor
and
and
divb
mov
and
roll
std
cmp
pop
mov
shll
mov
mov
in
adc
push
popa
or
movsl
faddl
std
es
int3
pop
mov
xchg
gs
lahf
mov
mov
mov
mov
test
pop
outsb
sbb
aaa
dec
push
addr16
cmp
test
movsb
jmp
xchg
lret
outsl
push
cmp
xor
hlt
ret
sub
push
mov
xorb
movsb
lret
adc
jle
lret
xchg
dec
fnstenv
push
leave
jb
sub
call
add
enter
dec
push
mov
gs
leave
add
fisttpl
add
push
mov
test
xchg
cs
stc
inc
enter
lods
cwtl
cmc
insl
and
cmpsb
scas
fsubrp
inc
fisttpl
test
mov
daa
mov
add
stos
fwait
xor
mov
ds
aas
frstpm(287
pop
out
pop
pop
inc
in
pop
mov
push
mov
imull
mov
ret
ja
stos
mov
sbb
nop
jl
std
mov
jg
and
cltd
lcall
iret
test
cwtl
clc
cwtl
xchg
sarl
sbb
test
test
xchg
lds
or
or
test
aas
dec
gs
scas
scas
inc
cltd
mov
shlb
psubusb
jo
jp
xor
pop
inc
data16
xorb
imul
hlt
and
jmp
sbb
lods
sub
xor
mov
pop
les
add
stos
add
or
cli
xchg
mov
test
or
and
pop
jbe
push
cs
outsl
je
das
mov
les
adc
outsb
fcomip
lods
xor
jp
and
rorl
push
mov
pop
flds
cmpsb
adc
andnps
repz
popf
sub
sbb
gs
clc
xchg
lods
mov
cld
popa
xchg
jmp
das
mov
add
mov
pop
arpl
dec
push
push
rclb
mov
popa
lcall
inc
ja
xor
add
xlat
std
aaa
ror
popa
mov
pushf
sbb
shrb
or
nop
cld
jne
leave
cmp
inc
and
xor
in
push
loopne
dec
leave
xchg
loopne
add
add
std
pop
cmp
sbb
dec
fiadds
aad
xchg
outsb
sub
call
in
lcall
arpl
stc
mov
push
fisttpl
adc
sub
into
movsb
push
lahf
lds
movntq
sbb
lods
mov
xor
cmp
and
pop
movsb
jecxz
aad
out
je
mov
mov
jmp
std
scas
and
mov
icebp
ret
repz
rcrl
mov
cltd
xor
ret
cmpsl
out
mov
dec
or
fldt
in
jecxz
and
inc
les
mov
adc
stos
mov
jle
repz
cmp
aad
sti
mov
aaa
sbb
lods
or
jno
xchg
stos
inc
int
xor
int3
jo
sub
inc
cli
and
push
fdivs
repz
es
icebp
push
lock
adc
pop
or
inc
aad
mov
mov
ret
fst
movb
push
sub
lahf
fdivl
loope
test
lcall
add
and
test
mov
or
mov
push
pop
test
aam
jno
dec
mov
push
imul
fsubrl
ds
movl
test
scas
xor
inc
loopne
mov
cmp
dec
fcoml
out
cs
mov
fbld
idiv
test
push
shrl
ljmp
dec
sbb
cmp
xchg
jmp
js
movsb
hlt
sub
cmpl
mov
xorb
pop
icebp
and
rcll
lds
pop
add
mov
jge
xor
push
cmp
cmpsl
cli
xchg
dec
and
nop
add
sbb
pop
int
mov
test
add
dec
mov
inc
sbb
in
int3
pop
pop
xchg
mov
adc
xchg
xlat
xor
lds
call
negb
shlb
ljmp
or
test
mov
jne
jns
loopne
jb
sub
xor
in
mov
icebp
dec
sbb
add
testb
push
je
out
icebp
mov
push
in
imul
xchg
dec
and
rol
fsubl
xchg
xchg
lods
repnz
ret
add
jp,pt
mov
into
daa
fs
push
ja
push
sub
jmp
dec
scas
movl
push
testl
mov
in
and
push
push
popa
hlt
lds
in
daa
jne
stos
pop
jge
or
sarl
xchg
aam
mov
es
push
lret
int
lret
fisubs
mov
xorb
inc
filds
aas
jp
retw
jb
jbe
rcr
out
fimuls
or
add
in
imul
mov
leave
lea
dec
lret
add
fwait
lcall
clc
js
add
inc
lret
loopne
je
cmp
enter
jbe
sbb
das
mov
push
lcall
ja
and
dec
pop
adc
gs
test
sbb
mov
push
es
adcb
fcomi
sub
push
mov
cmp
and
jp
and
push
and
adc
mov
cmp
mov
out
aad
push
ficoml
fstpt
lret
pop
test
xchg
imul
enter
ret
xchg
addr16
imul
pop
bound
xor
fwait
add
mov
push
testl
pop
sbb
jl
lret
xor
mov
mov
mov
inc
outsl
mov
test
mov
stc
dec
inc
xchg
push
cs
int3
iret
xor
aam
adc
pop
aad
or
or
xor
je
push
stos
jne
sbb
inc
hlt
rcll
rcl
inc
fs
pop
je
mov
mov
pop
icebp
jle
mov
lods
sbbl
push
fwait
out
add
jo
push
andb
rol
in
push
imul
movsb
xor
push
fsts
dec
xchg
ds
cwtl
push
mov
aas
mov
inc
xchg
jp
xchg
dec
shrb
lods
sbb
jns
and
and
xlat
int
jmp
int3
xchg
mov
adc
int
in
jle
aas
xchg
outsl
fstpt
sbb
jno
mov
lock
aas
fs
add
dec
add
mov
gs
sahf
data16
add
mov
adc
adc
rcl
shll
in
mov
sahf
sbb
out
rcl
jnp
movsb
add
cltd
fsubr
xlat
xchg
xchg
lods
mov
pop
cmp
mov
out
cmp
arpl
bnd
mov
adc
push
iret
les
cmp
xor
lods
mov
mov
ja
and
ret
cmpsl
and
xchg
push
jno
inc
inc
stc
in
push
mov
scas
cmp
and
sbb
sbb
fbld
orl
mov
scas
nop
and
int3
inc
xchg
dec
mov
sub
add
mov
je
clc
in
loop
sub
es
jle
movsl
dec
cs
inc
inc
arpl
adc
outsl
pop
mov
jp
jge
rol
and
imul
fs
in
fldt
stos
aaa
mov
cltd
dec
push
dec
in
mov
and
repz
cltd
call
mov
jmp
inc
mov
mov
outsb
pop
cmp
adc
and
pop
inc
jns
mov
leave
loopne
add
xor
fidivrs
mov
mov
daa
test
mov
mov
sub
ja
mov
clc
icebp
mov
repnz
mull
and
jae
addl
mov
mov
movsl
daa
mov
enter
mov
call
jl
push
call
mov
scas
out
push
adc
lahf
movsb
movsb
mov
jg
outsb
insl
cmp
jecxz
lds
popf
out
test
je
les
inc
mov
jecxz
jae
push
dec
rcll
inc
jg
xlat
movsb
and
jmp
jnp
and
push
filds
pop
repnz
lahf
in
xchg
rcll
addb
mov
mov
pop
test
pushf
stos
pushf
xor
repnz
jnp
scas
ds
loopne
adc
dec
repz
movsl
test
stos
add
stos
dec
jp
add
mov
mov
movswl
fiadds
sbb
add
push
scas
aas
add
add
in
add
gs
imul
sti
push
xor
daa
jecxz
mov
add
add
icebp
inc
cmp
repz
scas
xchg
dec
in
dec
in
jge
insb
mov
int
mov
movsb
mov
inc
jle
mov
es
mov
cmp
add
push
out
push
or
ret
add
pop
xor
rcr
cmp
shr
push
or
stc
xchg
cltd
cmpsl
lds
xor
dec
scas
out
clc
mov
popf
jb
dec
imul
lods
mov
nop
mov
ss
data16
pop
mov
in
sub
mov
fidivrs
cmp
movsb
std
imul
dec
out
cli
push
mov
cmc
das
sub
lret
jmp
xor
push
cmpsl
cmp
rcl
and
sbbl
add
out
cmpsl
mov
divl
test
xchg
sbbl
cli
ret
mov
sub
adc
adc
jg
and
fldt
cmp
test
outsb
cmpb
mov
mov
mov
or
ret
adc
xchg
out
and
and
int
add
imul
insb
inc
xchg
xchg
cmp
cli
adc
xor
lock
jb
incb
adc
or
inc
and
jne
inc
or
pop
test
push
xor
push
dec
cmp
jecxz
sbb
push
sbb
and
mov
stos
push
jbe
jbe
cltd
jae
mov
xchg
pop
out
xor
and
ret
pop
push
scas
aas
sub
jbe
nop
add
inc
rcll
and
pop
dec
frstor
inc
lock
ud2
add
gs
test
jnp
pop
push
cld
and
sub
mov
jl
arpl
and
xor
lea
nop
xor
pusha
test
jae
push
test
jle
add
pusha
sbb
mov
outsl
es
dec
dec
cli
add
fimuls
clc
int3
mov
push
and
nop
addr16
push
scas
mov
shlb
les
jne
int
xchg
xchg
mov
fistl
mov
fwait
xchg
add
xchg
daa
ficompl
sahf
les
mov
outsb
arpl
pop
scas
aas
xchg
sbb
xchg
adc
ss
mov
imul
outsb
test
mov
data16
dec
sbbl
jmp
sub
ds
cmp
shlb
pop
dec
adc
inc
push
sub
mov
imul
mov
popa
div
cmpsl
mov
pop
cmp
mov
xor
cld
fcoms
cwtl
lods
in
lods
adc
cmpsb
jle
std
xchg
inc
ret
add
lahf
mov
iret
and
aam
add
ficompl
jle
pop
sahf
jg
mov
mov
push
xchg
mov
stos
pop
cmp
add
cmpsl
mov
mov
imul
xchg
push
cmpsl
xchg
add
jae
or
pop
adc
sbb
inc
fsubrl
mov
lcall
push
aaa
shr
or
mov
popa
aam
inc
push
jno
jno
popa
int
mov
jb
mov
sbb
mov
rdmsr
mov
fbstp
xor
rorl
inc
mov
dec
pushf
test
push
insb
out
fnstsw
cli
sub
mov
sub
ljmp
mov
xlat
xlat
mov
xchg
scas
fcomps
push
fwait
popa
pusha
icebp
sub
cltd
sahf
xchg
stos
pop
stc
stos
mov
cli
lds
aaa
mov
adc
sbb
addr16
leave
push
inc
cmp
ret
pop
inc
clc
fnsave
bound
jl
fidivl
xor
xchg
mov
adc
pop
add
jecxz
pop
xor
rcll
xchg
pop
inc
and
sbbl
or
pop
imul
add
aam
jmp
and
rolb
mov
push
xchg
sub
and
rcll
icebp
mov
out
insb
hlt
jno
lret
mov
pop
mov
mov
push
adc
dec
or
mov
add
rcl
and
add
inc
and
jne
jmp
gs
push
test
in
xorb
xor
sti
push
sub
and
lret
mov
mov
imul
imul
cmpl
inc
sar
bound
and
pop
mov
dec
cmp
das
xchg
mull
fcmovbe
cmp
shll
xchg
and
mov
stos
push
mov
popw
or
mov
cs
xchg
or
dec
pop
sarb
nop
lea
push
mov
sbb
jle
gs
inc
sub
push
frstor
ljmp
add
outsl
xor
add
icebp
mov
ds
lods
sub
pop
pop
hlt
and
mov
pop
mov
les
dec
jmp
sti
fldenv
imul
push
rolb
inc
xchg
lcall
fstpt
popl
fmul
mov
and
push
les
subl
add
loopne
insl
test
icebp
jle
outsb
negb
xchg
fldt
cmp
push
mov
sahf
add
daa
cmp
pop
repz
mov
lcall
push
cmpl
adc
lea
insl
xchg
lds
hlt
mov
lds
push
jp
xor
es
sub
cltd
xor
jns
aas
addr16
push
push
test
pop
xchg
and
les
xchg
cmpl
orl
rolb
xchg
cmc
sbb
sbb
adcb
push
pop
std
add
sti
repz
pop
rclb
or
cmp
subl
or
jl
lods
movsb
sbb
fdiv
test
aad
jo
inc
push
shl
push
hlt
repz
sbb
popa
lods
loopne
pop
scas
adc
sbb
scas
les
iret
sbb
add
push
xchg
xlat
repnz
lret
rclb
sbb
mov
jecxz
and
outsb
mov
mov
cli
xchg
sti
imul
in
dec
pop
xchg
xchg
cltd
out
stos
stc
fwait
lds
pushf
movsb
inc
xchg
or
sub
push
xchg
sti
xor
enter
lahf
xchg
mov
out
loop
cmp
loop
sbb
add
addr16
icebp
insb
cmp
push
and
leave
sbb
xchg
adc
pop
dec
cld
ljmp
xlat
insb
arpl
sub
sub
pop
cmpsb
xlat
inc
fsubp
pop
adcl
lods
mov
mov
push
mov
lret
shrl
outsl
dec
cltd
daa
pop
imul
bound
lcall
test
mov
cld
test
or
outsb
ret
sbb
mov
popf
outsb
mov
push
jno
xor
inc
loopne
pop
inc
cmp
mov
lock
lcall
jae
test
lahf
stc
pop
push
das
sahf
aam
ljmp
notl
clc
xor
pop
arpl
add
inc
pop
cmp
ds
inc
dec
mov
sub
fsubrp
inc
out
sti
stos
sbb
add
fs
inc
mov
gs
inc
ds
out
adc
shrb
push
xchg
xchg
cmpsl
push
outsl
in
inc
mov
mov
cltd
or
repz
in
jnp
jmp
cmp
cmp
pushf
lods
aaa
cmp
ja
insb
arpl
mov
pushf
daa
lret
test
cltd
stc
jl
loope
out
out
aaa
or
in
lea
enter
push
std
les
xchg
mov
push
adc
push
int
test
dec
cltd
inc
xchg
popa
push
lea
mov
mov
test
pop
adc
adc
dec
in
xorb
lds
sbb
es
and
or
pop
mov
xchg
enter
out
dec
les
sub
sbb
js
inc
out
fistpll
loop
push
mov
pusha
cwtl
fcompl
dec
cwtl
xchg
pop
ljmp
adcl
lcall
mov
loope
jecxz
adc
call
out
into
mov
stos
insl
iret
outsl
mov
lcall
add
push
jg
inc
inc
ficoms
lds
into
aas
xchg
rclb
push
nop
or
pop
bound
inc
or
mov
les
push
ss
push
mov
shl
in
loop
or
movsl
and
shrb
in
add
jne
xchg
pusha
pop
neg
mov
jb
dec
mov
or
mov
lea
inc
sahf
adc
imull
cmp
iret
rcl
mov
dec
add
shll
cmp
in
jge
pop
xchg
mov
inc
jmp
stc
stos
cmp
cmpb
xor
jbe
sub
sbb
pusha
ret
push
adc
sbb
ljmp
jmp
cwtl
out
out
arpl
lea
pop
aam
int3
sbb
repz
fstps
out
adc
or
jle
mov
lods
ret
daa
pop
inc
sbb
mov
sbb
test
das
mov
loop
loope
mov
jl
lret
dec
xchg
jae
shrb
push
dec
dec
jmp
pop
jae
xchg
push
adc
fmuls
sbb
add
jge
xor
sub
push
insb
std
dec
rclb
sbb
pushf
jp
daa
cmp
jns
add
dec
push
mov
dec
mov
push
add
mov
fdivrl
dec
pop
mov
xlat
cmp
ljmp
test
push
into
xchg
adc
add
mov
test
dec
pop
or
inc
arpl
pop
push
sarl
sub
dec
mov
pop
xchg
xor
std
outsl
inc
lahf
jbe
outsb
pop
insb
pop
test
push
popa
insl
rolb
hlt
pop
mov
and
sti
add
and
addr16
sub
mov
push
mov
dec
mov
push
sub
push
popf
sbb
jg
inc
cltd
movsb
and
xlat
test
sbb
add
test
aaa
push
fisubrl
insb
iret
call
sub
movsb
jnp
dec
stos
bound
fcomps
mov
ds
inc
in
arpl
adc
jne
pop
xchg
xchg
icebp
sub
outsl
sti
out
cs
xor
js
int3
lret
mov
scas
bnd
jne
sbb
dec
sbb
mov
add
mov
add
icebp
adc
out
clc
push
fidivrl
shl
xchg
cs
cmpsb
hlt
enter
mov
push
outsl
and
push
ret
les
shll
cmp
cwtl
jnp
cmc
test
cltd
adc
jnp
fdivp
lahf
in
hlt
xchg
vaddpd
push
and
stc
pop
push
cltd
push
repnz
rorb
and
push
mov
cs
jl
imul
es
xorb
adc
sbb
fstl
sahf
and
test
sub
add
insl
iret
inc
mov
lret
push
pop
in
push
sub
sbb
mov
jno
dec
mov
mov
popf
jmp
add
and
and
and
cmp
xlat
in
repnz
cmp
cld
cmpsl
mov
repnz
rol
or
push
and
xchg
loopne
fwait
xchg
lods
testl
pop
inc
int
lret
push
imul
sub
jnp
push
xchg
rorb
cmc
cmpsb
lock
lods
ja
stos
cwtl
data16
add
cmp
aam
and
push
sbb
repz
sbb
mov
adc
dec
call
mov
test
fmull
stos
inc
mov
test
push
scas
xchg
shrl
das
cmp
pusha
cmpsl
push
jl
or
push
xlat
jg
sbb
and
jae
cmp
outsb
add
and
nop
mov
pop
cmp
int3
push
mov
mov
mov
leave
into
imul
insl
cld
mov
jp
jmp
cmp
loop
jae
xor
adc
pop
xchg
in
cmpb
inc
lret
sub
jmp
or
xor
jnp
dec
ja
add
sbb
loope
xor
aam
movsb
out
aam
adc
pop
inc
rcll
je
je
scas
mov
push
pushf
stos
push
popa
push
and
cmc
cs
push
mov
xor
mov
cmp
xor
adc
out
xor
fimuls
repz
jle
aam
popf
jbe
pop
mov
mov
fsts
adc
pusha
pop
pand
push
xor
cltd
xchg
shlb
in
stos
pop
mov
iret
mov
sub
push
pop
sbb
dec
lea
adc
popa
lea
shrb
push
sub
ja
pop
jmp
mov
pushf
mov
outsl
aaa
call
or
repnz
push
and
je
inc
roll
xchg
mov
sbb
aas
cli
cmp
sbb
test
aam
cs
push
jecxz
repnz
dec
xor
xlat
imul
jl
je
test
push
test
pop
scas
out
inc
sbbb
dec
sti
out
cmp
ss
adc
mov
in
out
dec
push
mov
adc
cwtl
push
rolb
mov
push
mov
xor
dec
test
add
pop
out
mov
push
jle
push
ljmp
out
jge
fcomi
mov
mov
popf
nopl
jl
mov
outsb
pushf
ds
fisubs
sub
pop
outsl
push
in
insl
clc
push
and
xor
xor
mov
lea
fwait
fs
mov
ss
repz
mov
aas
mov
or
lock
and
ret
std
fnstsw
and
push
frstor
mov
mov
pop
xchg
dec
xor
xor
xor
inc
dec
mov
xor
push
sbb
xchg
inc
inc
jns
adc
insl
xor
pusha
hlt
sub
das
loopne
out
or
out
push
aaa
pusha
fwait
inc
lahf
sub
fwait
mov
mov
and
stc
lret
pop
dec
movsl
jg
or
mov
repnz
and
cli
sbb
stc
sarb
in
mov
arpl
bound
insb
xchg
pop
sti
daa
mov
aaa
jo
rclb
pop
insb
in
cmc
pusha
sbb
outsl
mov
nop
cmp
push
ret
dec
dec
es
mov
jne
aam
lea
cmc
pop
xchg
pop
leave
stc
clc
sbb
addl
popf
inc
or
js
sbb
stos
add
les
sarl
das
jg
data16
shll
aam
mov
ds
scas
icebp
xor
leave
icebp
cs
movsl
pop
out
ret
call
jb
in
mov
insl
jne
pop
sarl
sar
test
in
sahf
cld
sbb
icebp
nop
into
jp
or
or
filds
or
je
mov
into
pop
std
xor
and
and
mulb
addr16
out
mov
sbb
jns
daa
sub
add
push
pop
out
mov
movntps
int
or
rclb
jns
aam
dec
push
pushf
adc
notl
gs
stos
pop
add
cld
pop
xchg
pop
fdivrl
xchg
adc
or
in
jle
int3
and
cltd
dec
mov
jb
push
sbb
mov
shl
jb
push
test
fdivrs
xchg
sbb
or
mov
outsb
push
jb
jl
xchg
cmp
divl
inc
arpl
push
cmp
inc
mov
xor
mov
or
out
sbb
test
enter
jno
xor
mov
cltd
jns
mov
push
stos
mulb
push
pop
int
dec
dec
in
mov
push
jp
jb
pop
mov
xor
in
mov
aad
sbb
push
test
jnp
or
add
js
fstpt
jecxz
imul
mov
or
lcall
mov
push
mov
fnsave
lea
push
sarl
in
out
and
nop
mov
stc
addl
adc
cs
push
pop
pusha
sbb
loop
xchg
cmp
mov
cwtl
aaa
xor
cltd
mov
ljmp
push
cmc
xor
xor
pop
mov
mov
mov
dec
push
inc
es
shl
push
cmpsb
mov
sbb
adc
ret
inc
mov
hlt
xchg
ficoms
xor
aaa
sub
xchg
insb
sbb
push
xchg
inc
mov
out
xlat
lods
fcoml
pusha
flds
pop
enter
out
sbb
repnz
add
ret
sub
xchg
testl
mov
pop
inc
sub
insb
pusha
cmp
shr
iret
cmp
loop
cwtl
mov
les
jmp
addr16
and
fucomip
sbb
xchg
xor
es
frstor
iret
push
push
fwait
adc
mov
hlt
push
adc
lds
xor
add
mov
sub
xorb
imull
pop
loopne
jo
ds
sbb
iret
dec
cwtl
add
ds
mov
cli
fdivrs
jmp
mov
mov
mov
and
xlat
int
adc
mov
push
jle
aas
add
in
jmp
fucomp
rol
repz
lods
and
shl
scas
mov
xor
push
mov
sub
mov
adc
dec
xchg
add
stos
mov
js
sbb
pop
push
lea
xchg
std
loopne
cltd
lds
std
sub
mov
pop
jp
adc
pop
pop
push
sbb
arpl
ljmp
dec
push
inc
pop
xchg
ret
outsl
js
addr16
ret
ja
bnd
push
mov
movsl
pop
sub
xor
insb
sbb
inc
pop
jne
mov
mov
inc
push
sti
push
adc
outsl
je
cmc
inc
in
popf
add
idivb
repnz
fsubr
pop
adc
mov
je
or
jle
xlat
xchg
es
push
mov
fs
dec
pop
ret
push
mov
xor
ja
sti
je
pop
loope
jne
mov
roll
sahf
lret
jne
test
jnp
jo
loope
nop
lret
jmp
fwait
addl
inc
mov
decl
push
dec
adc
mov
pop
icebp
sbb
cwtl
mov
es
in
and
add
cltd
xchg
xchg
inc
das
or
outsl
mov
pop
cmp
in
scas
popf
mov
xchg
sarb
mov
inc
push
bnd
loopne
test
pop
push
mov
fcomps
mov
ja
push
or
jp
cwtl
jecxz
xchg
or
add
sub
aam
add
jp
dec
jo
cmpsb
std
add
cwtl
push
jbe
das
shl
add
ljmp
xchg
push
sbb
push
adc
mov
jb
and
jne
xchg
test
mov
shlb
int
inc
fisubrs
into
add
daa
lods
stos
stos
mov
xchg
mov
pop
dec
aas
dec
push
inc
sbb
bound
cmp
int
cwtl
into
xchg
push
xchg
adc
into
push
pop
inc
or
es
jno
es
or
mov
xchg
scas
cltd
cmc
repnz
pop
cmp
shll
into
or
stc
into
mov
mov
jae
push
mov
and
mov
mov
mov
push
cli
divb
cmp
movsl
imul
dec
adc
mov
outsb
xor
mov
scas
or
lock
mov
loopne
loope
mov
loope
sbb
bound
insl
pop
xchg
inc
lret
daa
aas
jae
push
jnp
sub
sbb
pop
insb
push
jge
jbe
xchg
insb
rep
inc
outsl
mov
pop
ja
cmp
loopne
sarb
pushf
es
cmp
sahf
dec
push
jne
add
movsl
daa
sbb
lds
lahf
lahf
leave
sub
mov
popf
cmpsb
lds
out
icebp
xchg
imul
push
pop
cmpl
rorl
mov
in
add
mov
mov
call
test
lds
imul
roll
adc
jne
inc
dec
dec
lcall
pop
test
or
mov
pop
lea
mov
sbb
lret
repnz
mov
je
call
stc
scas
in
in
xchg
hlt
sbb
add
popf
mov
push
call
adc
xchg
jo
ss
call
loop
insl
out
add
sub
std
push
fistps
xchg
daa
stos
or
scas
mov
ja
fcompp
popf
sbb
fisubrl
cmp
lahf
cmp
sbb
mov
dec
iret
jl
cmp
inc
lahf
inc
cs
aaa
enter
mov
fldt
repz
std
mov
lcall
lds
jno
int3
fstpl
jne
mov
fcompl
ret
mov
push
sub
loopne
clc
cmc
orb
adc
scas
fisubl
push
dec
bnd
insb
ficoml
inc
stc
imul
test
inc
subb
push
stos
pusha
mov
ss
xchg
push
mov
test
cmp
lret
outsb
or
daa
frstor
jne
sub
jge
xor
aas
pop
ljmp
loop
in
aam
inc
xchg
fscale
push
cmp
lret
jmp
mov
pop
stos
sahf
or
xchg
mov
mov
mov
out
mov
test
imul
cmp
data16
adc
push
adc
jnp
mov
mov
push
ja
mov
jle
mov
ret
mov
jnp
push
mov
dec
push
flds
mov
and
popa
xlat
inc
add
adcb
aas
in
or
sbb
div
into
jne
invd
std
icebp
xchg
adc
cld
sbb
dec
and
pop
aam
xchg
jo
or
aaa
mov
fldenv
sti
ss
pop
ljmp
dec
lcall
or
in
add
adcb
add
iret
inc
mov
mov
xchg
imul
sub
sbb
pop
jne
movsl
je
lock
loop
xor
push
sahf
push
pop
cltd
ljmp
dec
rorl
iret
cmp
pop
outsb
ljmp
fiaddl
outsb
push
shll
rep
xchg
and
enter
js
sahf
xor
push
lea
lahf
mov
jbe
enter
pop
scas
and
loope
jecxz
mov
pop
stos
iret
leave
ljmp
xor
mov
inc
xchg
or
dec
xlat
cli
cld
mov
inc
pop
adc
xor
iret
sbb
pop
stos
mov
push
mov
cmp
adc
mov
sbb
es
sbb
cmc
jns
stc
fcoml
stos
test
mov
jg
imull
mov
add
and
mov
cmp
xchg
ja
cmp
or
jne
lods
jnp
pop
cmp
roll
rcll
js
and
xor
or
xchg
xor
xor
push
xor
cmpl
out
nop
sub
add
repnz
cmp
push
repnz
arpl
cltd
inc
mov
nop
xchg
add
aad
andl
out
aaa
negb
xchg
push
insb
fistps
cmp
xor
fwait
cmovs
cmp
ficoms
or
push
fists
scas
gs
jno,pt
int3
mov
push
xor
jno
mov
pop
xlat
push
out
or
sub
xchg
and
xor
or
cmp
jg
pusha
in
adc
call
popa
jo
xor
push
add
push
fs
cmp
mov
or
out
data16
jns
testl
jle
cmp
int
pop
add
pushf
push
cmc
dec
ret
and
jo
mov
test
outsb
bound
fdivl
adc
insl
outsl
sbb
sbb
insb
and
sbb
adc
add
push
das
add
test
mov
out
int3
jl
sbb
xlat
popa
or
mov
cltd
out
fcmove
ja
pop
cmpsl
cmp
roll
and
add
or
dec
int3
ja
mov
mov
lods
fsubrp
in
cmp
rol
pop
mov
xchg
aaa
dec
cmp
iret
mov
xor
xor
adc
xor
ret
push
sub
pop
outsb
loop
pop
push
int3
icebp
sbb
jmp
and
out
repz
sub
add
shll
ja
inc
or
fnstcw
in
popf
dec
aam
mov
dec
add
les
and
cmp
cwtl
sub
cld
cmpsl
pop
mov
jge
filds
js
lock
adcb
fmull
cwtl
mov
mov
xchg
enter
es
cmpsl
mov
loope
adc
cmc
lods
outsl
clc
call
call
nop
cmpsb
jns
std
dec
jg
fwait
mov
pop
loop
in
idivl
arpl
insl
ret
dec
pop
xor
lock
out
in
cltd
fcmovu
add
mov
mov
inc
mov
sbb
cmc
sub
lds
cs
dec
sbb
int3
jmp
out
leave
cmp
adcl
lahf
and
push
jge
jecxz
int3
sbb
mov
jne
push
cmpsb
subl
fcomps
stos
sub
andl
imul
mov
shll
std
mov
xchg
insb
mov
sahf
mov
ljmp
mov
test
dec
lds
adc
inc
fidivs
add
and
jb
and
ds
or
daa
pushf
or
xchg
ljmp
xchg
sbb
pop
scas
adc
ret
cmpsl
jg
int3
fsubrs
xchg
jecxz
fdivl
sbb
test
cli
sub
dec
imulb
in
push
mov
and
les
sub
sar
imul
sahf
push
sbb
and
rol
adc
xlat
or
arpl
rcrl
fnstsw
lret
popa
sub
gs
lea
les
imul
mov
inc
lret
cmp
and
mov
stos
mov
cltd
xor
cmp
out
cmp
lahf
xor
imul
sub
push
psrlw
mov
inc
dec
insb
adc
daa
push
sbb
push
subb
mov
adc
aas
and
push
cmp
lret
mov
js
sub
or
cmp
stos
dec
iret
pop
cs
clc
mov
push
pop
xchg
movsl
ror
pop
dec
adc
stos
add
das
push
sbb
xchg
insl
push
mov
out
aam
pop
into
ret
test
jno
inc
xchg
pop
lahf
subl
and
ffree
icebp
xchg
stc
push
test
sbb
in
jle
push
popa
imull
xchg
in
scas
fnstcw
pop
in
lret
arpl
inc
and
xchg
cmc
or
adc
xchg
jno
add
cli
push
and
push
movd
dec
jno
dec
pop
push
sbbb
fsubrl
repz
andb
jb
je
mov
pop
insl
jle
sub
push
sbb
or
movsl
mov
xchg
enter
aaa
ljmp
cmp
or
fs
out
leave
mov
shlb
xchg
jg
push
lods
inc
sub
sub
ss
mov
xor
shll
imul
add
popf
and
or
shl
add
mov
in
and
sub
pop
data16
cmp
outsb
inc
scas
lock
pop
test
lret
lea
shrl
mov
into
push
jne
mov
sub
mov
jne
sub
outsb
movsl
mov
sub
pop
inc
insb
mov
popa
mov
dec
push
fnstsw
add
mov
jbe
aaa
das
lahf
ja
data16
mov
ret
mul
lods
push
cmp
sahf
and
cmp
dec
out
jno
cld
leave
jmp
push
outsb
xor
add
movsb
daa
aad
fdivrl
in
sub
inc
inc
in
mov
loope,pn
push
rcll
lock
shrb
mov
ret
gs
sub
lds
loopne
into
xor
dec
dec
mov
arpl
call
dec
push
shll
jmp
add
sbb
push
cmp
repz
mov
stos
and
cwtl
dec
stc
inc
add
icebp
xor
stc
xchg
cld
push
jo
sub
loope
cltd
clc
mov
sbb
mov
adc
sbb
adc
push
lods
lods
xchg
xchg
icebp
xchg
pusha
sahf
and
loopne
and
sahf
out
loope
daa
call
popaw
popa
mov
nop
mov
dec
mov
out
or
push
or
pop
lret
insl
mov
xchg
out
fnstcw
adc
xor
mov
cs
insb
adc
bound
mov
sahf
push
mov
pop
call
aad
stos
xor
or
mov
divb
stos
jl
std
mov
pop
jne
testb
dec
pop
fbld
shll
insb
pop
inc
cs
or
sub
lret
mov
sbb
jmp
nop
xchg
cs
xchg
mov
repz
dec
loopne
xor
mov
or
mov
mov
loopne
test
sub
mov
fists
lods
call
imul
xlat
pop
xlat
inc
les
inc
rorl
sbb
mov
shl
add
or
leave
arpl
stos
sti
push
sbb
adc
sbb
dec
jb
lret
xchg
dec
sbb
stc
cmp
push
jae
xchg
push
hlt
mov
mov
fsts
lahf
mov
es
sarb
cmc
fiaddl
sahf
mov
adc
xor
adc
nop
cmp
out
inc
test
xchg
sub
jbe
nop
jns
push
pop
and
mov
pop
push
mov
xchg
mov
outsb
jg
jmp
shr
fnstenv
add
std
mov
stc
test
xchg
sbb
fcomps
xlat
dec
fstl
js
mov
xor
mov
mov
jg
mov
xchg
jo
sub
push
jne
mov
je
inc
dec
fcoml
imul
out
mov
mov
and
sahf
arpl
fwait
pop
mov
mov
or
mov
cmp
lods
roll
mull
es
fstpl
imul
fchs
and
push
dec
or
aas
loop
loope
sbbl
fsubl
movsb
pop
and
int
fs
out
out
and
jecxz
dec
jne
repnz
jl
push
pop
imul
in
jbe
rcr
in
cs
popaw
popa
shll
pushf
out
adc
inc
mov
aas
sub
pop
imul
aaa
mov
sub
push
jmp
loop
cmc
imul
out
test
or
in
or
ljmp
cmp
repnz
stc
pop
out
scas
jmp
fdivr
jmp
insb
aaa
gs
cs
rcrb
mov
sahf
iret
sti
addl
inc
pushl
ret
cld
adc
rol
inc
les
sbb
xchg
mov
jp
or
lcall
out
fstps
inc
rcrb
xchg
outsb
pop
fmuls
cmp
outsb
fs
dec
jnp
cmp
repz
arpl
loope
jnp
fs
or
shl
inc
popf
mov
sbb
data16
mov
cld
scas
or
mov
or
jnp
lods
inc
loop
dec
inc
icebp
popa
push
out
pusha
and
dec
xchg
sahf
pop
pmaxsw
inc
sub
mov
imull
pop
je
dec
insl
xor
mov
push
test
orb
pop
adc
aad
repnz
push
sbb
cmp
aaa
lds
ss
dec
xchg
inc
lds
and
jmp
mov
inc
dec
push
incb
inc
jl
and
popf
add
or
adc
mov
jge
divb
cs
cmpsb
xchg
mov
aam
add
and
pushf
lea
add
push
mov
mov
adc
fildl
jge
int3
cmp
aas
sbb
cld
mov
lahf
ja
pop
cmp
jge
test
jno
or
sbb
inc
mov
imul
enter
outsb
push
cli
xor
sbb
test
filds
mov
dec
call
cmpsb
mov
cmpl
movsl
mov
sahf
sub
xor
stos
js
js
imul
mov
push
mov
jl
in
jp
mov
notl
repnz
and
sbb
rcrb
dec
sbb
mov
dec
fs
mov
scas
mov
orb
scas
push
jle
imul
add
rclb
jmp
add
jp
aam
loope
jp
insb
dec
lret
repz
jns
inc
sub
xchg
push
out
popf
mov
and
in
cmp
loopne
pop
shl
and
push
or
rep
adc
arpl
xchg
adc
push
and
xlat
imul
in
outsl
js
in
mov
push
shlb
int
sar
or
mov
or
and
jns
pop
mov
pop
in
lret
mov
cltd
or
push
sub
jnp
ret
cld
dec
bound
or
outsb
pop
aaa
inc
adc
adc
adc
stc
jne
xchg
jnp
dec
push
dec
loope
js
mov
call
imul
adcl
xlat
xchg
cmpsb
jecxz
or
repnz
clc
adc
mov
in
xchg
fisubrs
iret
shrl
shr
sbb
sbb
cmpsb
cmpsl
adc
and
or
cs
lret
cmpb
mov
mov
dec
jne
mov
rorl
mov
das
mov
lods
mov
jge
push
gs
mov
ret
adc
test
jg
jns
inc
stos
es
mov
pop
divl
push
adc
je
dec
not
or
pop
out
sbb
scas
cmpsb
iret
cwtl
into
std
and
dec
push
js
popf
outsb
dec
cmc
cmp
jl
mov
xchg
jno
gs
mov
lock
mov
add
sub
xor
mov
mov
jbe
jno
daa
cmp
inc
cmp
sbb
jle
or
push
movsb
mov
mov
mov
adc
or
pop
jno
in
jmp
or
dec
rorl
sub
cmpl
enter
pop
loope
lds
out
mov
pop
aad
lahf
xchg
sbb
in
xchg
or
jle
jae
and
fdivl
push
dec
inc
pop
xchg
scas
int3
inc
mov
stc
push
movsb
pop
push
andb
nop
scas
push
and
imul
push
outsb
movsb
push
imull
dec
jecxz
aam
in
sbb
adc
xchg
mov
and
inc
jl
sbb
hlt
mov
inc
mov
repnz
cli
or
sub
inc
mov
out
jmp
jno
cmp
dec
in
subb
notb
adc
xchg
ja
inc
cmp
jb
stc
pop
xchg
push
gs
xor
jnp
arpl
dec
ss
popf
dec
cmp
popf
jle
sub
es
mov
xor
dec
sub
xor
stos
rorb
mov
push
popa
lods
decl
jne
fidivl
xchg
int
pusha
pushw
aad
jp
insl
push
push
sbb
and
mov
iret
mov
imul
push
dec
inc
in
xchg
lock
xor
test
jns
int3
test
adcl
sbb
test
testl
testb
cmpsb
pop
into
pushf
jnp
popa
jl
jge
push
xchg
push
sub
xor
jle
sub
ss
or
loop
in
cmc
push
sti
clc
or
inc
xchg
mov
xchg
iret
test
mov
cmp
sub
cmp
adc
pop
aas
jmp
ss
xor
int
dec
xor
push
imul
ficoml
cmp
pop
jb
rcrb
out
cmp
loope
sbb
imul
mov
mov
std
push
cmovnp
sbb
sti
lds
lcall
test
hlt
sti
test
ret
sbb
iret
mov
dec
cmp
scas
sbb
rol
and
push
push
cmp
enter
mov
pop
dec
xchg
push
mov
jle
mov
xor
pop
mov
xchg
aaa
call
add
adc
loop
aas
xor
sahf
xor
stc
enter
rolb
rorb
push
pusha
mov
inc
add
or
fcoms
cs
xor
and
imul
dec
cmp
shld
adc
and
pop
xchg
sub
cli
jns
dec
xor
sbb
xchg
pop
jno
xor
mov
pop
scas
pop
bound
jecxz
inc
out
fnsave
nop
and
sub
fwait
inc
pop
cmpsl
dec
call
shl
ror
sbb
mov
xor
movsl
in
dec
jne
add
add
imul
sbb
pop
push
testl
daa
sti
sub
push
imul
gs
push
pop
ljmp
xor
push
xchg
stc
jle
inc
ret
adcl
in
repnz
dec
cmp
inc
pop
xor
fstpl
rcrb
ficompl
xchg
outsl
or
enter
call
mov
jmp
sub
mov
test
adc
xor
push
jge
mov
mov
lods
add
mov
pop
xchg
adc
stos
xor
mov
fcmovne
js
pop
loop
mov
jge
pop
xchg
push
lea
sti
cmp
inc
jnp
pop
mov
cmp
lcall
lea
and
xchg
jp
jno
mov
repnz
sub
mov
sbb
aad
data16
stos
loopne
mov
movsb
sbb
sbb
inc
gs
pop
cli
cmp
leave
movb
ret
stos
out
mov
aam
pmaxub
lock
or
mov
cmp
xchg
popa
inc
sub
fidivrs
popl
sbb
in
repnz
push
divb
push
call
mov
cmp
mov
out
and
ucomiss
daa
mov
insb
inc
faddl
cmp
adc
rolb
xor
das
jecxz
lret
dec
loopne
and
inc
dec
push
pop
xchg
pop
dec
stc
or
test
or
xlat
xor
lods
decb
pop
mov
mov
xchg
jbe
adcl
adc
loopne
fidivrl
add
dec
mov
test
sti
push
or
jno
mov
add
daa
rorb
stos
dec
or
out
add
cmp
jbe
rcl
cmp
mov
mov
add
add
ret
daa
adc
jle
or
dec
lcall
pop
repnz
das
cli
xor
mov
mov
btc
fnstsw
sbb
sbb
in
inc
popf
cltd
cmp
jae
pop
sub
sub
aas
sub
stos
mov
jge
adc
sub
sti
xchg
adcl
cld
popa
mov
sti
sub
jno
es
pop
adc
movsl
test
in
push
mov
fisttps
insl
test
aam
mov
cmc
mov
flds
sub
faddp
xchg
fisubrl
sbb
outsb
cli
sub
dec
fsubrs
into
jmp
aad
cltd
mov
mov
xchg
fsubs
mov
dec
and
pushf
jo
ljmp
pop
jg
sbb
sbb
mov
outsb
jp
pushf
jb
mov
adc
cmpl
out
pop
bound
push
fdivr
pop
mov
push
xchg
loop
in
sarb
enter
inc
sbb
es
dec
or
cmp
pop
lds
push
xchg
xchg
mov
push
and
jnp
stos
ljmp
sub
dec
lds
popf
xor
push
push
lcall
orb
pop
lret
loop
stos
and
shr
xchg
addb
jb
pop
add
pushf
jg
sub
add
jl
in
or
mov
ret
or
cmp
test
mov
movsb
sub
xchg
sub
xchg
pop
cmp
cmp
push
fs
lods
ljmp
adcb
adc
push
pop
int3
push
adc
xchg
xlat
dec
cli
in
test
push
xchg
push
add
jg
inc
aam
sbb
jb
cmp
dec
call
add
nop
inc
jle
clc
data16
cmp
jle
scas
test
negl
xchg
inc
inc
testl
insl
push
adc
dec
mov
sbb
xchg
in
xchg
jo
mov
and
pop
sub
inc
jge
mov
fdivl
mov
int3
mov
mov
mov
jb
std
shr
scas
mov
filds
pop
push
pop
sbb
and
lret
pop
adc
add
testl
repnz
sbb
and
ljmp
icebp
cmpsl
pop
cwtl
adc
mov
sarb
xlat
sti
addr16
hlt
scas
sbb
fistpll
push
xchg
leave
pmulhw
sbb
mov
and
xor
mov
jae
jne
addr16
js
xor
sub
dec
adc
roll
jge
js
aaa
push
ljmp
bound
mov
dec
pop
jl
cmpsl
xor
fs
mov
cli
jno
shr
test
lret
sub
add
aaa
pop
jmp
add
jbe
ljmp
mov
jae
mov
push
insl
dec
rcrl
cld
xor
outsb
pop
or
mov
and
shr
mov
xor
add
les
aam
mov
test
ret
mov
sbb
je
outsb
sbb
lcall
pop
jmp
add
pop
mov
mov
push
mov
scas
sub
seta
mov
in
fwait
imul
mov
xchg
sbb
aad
popa
mov
fisubs
fwait
test
adc
mov
xchg
insb
es
push
push
push
arpl
ret
cs
in
icebp
mov
add
mov
imul
push
and
inc
fsub
test
jb
mov
scas
sti
ds
ret
ss
cmp
push
dec
or
xor
xchg
and
mov
fisttps
inc
insb
cmp
arpl
pop
leave
aad
lret
sahf
cmp
out
jno
insl
mov
aam
js
repz
dec
mov
jge
out
push
in
ljmp
dec
sti
jno
js
push
push
pop
int3
add
imul
pusha
mov
adc
fistps
icebp
ret
add
cmp
xor
mov
inc
or
push
out
add
mov
sub
or
insb
repz
inc
out
push
mov
sbb
inc
aaa
or
inc
jp
adc
sub
stos
and
pop
js
movsb
inc
mov
adc
adc
mov
xchg
test
adc
inc
stc
or
lds
pop
add
xchg
out
scas
cmc
mov
mov
inc
mov
ficoms
push
les
pop
push
les
mov
pop
cwtl
dec
imull
in
aam
mov
cmpsb
xchg
adc
insl
add
jo
xchg
into
dec
mov
mov
jmp
cmp
inc
or
pop
addr16
popa
xchg
cmp
enter
enter
inc
lcall
cmc
add
xlat
inc
sbb
data16
mulb
fstp
push
xchg
or
pop
adc
mov
jnp
loop
jns
mov
add
xchg
leave
mov
dec
inc
jo
or
scas
insl
xchg
sub
enter
sbb
xchg
insl
in
mov
or
push
and
pop
andl
xorb
or
jmp
inc
pop
jae
ficoms
lock
push
mov
jae
test
push
call
or
subl
out
stos
jge
dec
and
dec
push
loope
push
sub
add
push
push
add
and
add
ret
scas
cmp
xor
loope
stos
addr16
gs
aaa
cmc
sbb
cmp
or
cld
pop
es
and
jo
adc
das
int
lods
std
jae
les
mov
nop
and
mov
and
xor
xchg
cmp
cmp
pop
call
les
movsl
or
movsl
adc
pop
adc
push
lds
sbb
xchg
sarb
lock
mov
mov
es
jno
mov
dec
mov
sub
jle
xor
jne
add
jg
xlat
into
scas
xor
mov
fnstcw
roll
rorb
in
add
push
sub
jae
div
dec
sbb
jne
int3
xor
ljmp
es
dec
jge
mov
xchg
jbe,pn
cmpsl
mov
xor
xchg
into
out
in
repz
pop
in
call
movsb
sbb
jne
daa
imul
in
and
cwtl
mov
push
and
fidivrs
mov
loopne
cmp
fildll
adc
add
adc
push
cltd
in
mov
in
out
or
mov
sub
jno
push
add
xchg
xor
shrl
fisttps
and
in
inc
xchg
fsubrp
in
mov
xor
add
imul
loopne
add
leave
dec
fs
clc
roll
stos
inc
dec
insl
jno
cs
xor
in
and
mov
push
ja,pn
stc
shrl
cmpsl
test
daa
rcrb
insl
xchg
fucom
out
std
sbb
decb
mov
std
cli
test
sub
lfs
cmpsb
outsl
into
pop
loop
xchg
adc
insl
xchg
inc
shlb
aad
jb
adc
leave
xchg
dec
mov
loope
xor
xchg
scas
jmp
cmp
pop
fdivl
cli
loop
imul
cmpsl
pusha
data16
sub
dec
mov
aas
subl
in
jne
fcoms
mov
adc
repnz
clc
ror
add
dec
mov
or
cmpsl
ficoms
vshufps
ds
mov
cmc
push
cmp
mov
mov
daa
pop
ret
lock
cmpsl
jb
fs
aam
lock
and
scas
adc
mov
mov
xor
xor
mov
jae
les
sbb
push
mov
ss
add
pop
loop
adc
daa
rcr
gs
or
mov
add
sbb
push
mov
or
fisubrl
xchg
movq
mov
neg
nop
xchg
addb
sbb
mov
aas
xchg
push
push
pop
push
shl
mov
mov
push
jns
fxch
bound
mov
pop
sub
cmp
ja
loope
sub
dec
aam
and
pop
test
scas
rolb
shl
out
out
ljmp
gs
lods
imul
mov
push
add
lds
mov
fwait
into
xor
xchg
into
enter
pop
negb
loope
cmp
mov
int3
in
push
test
jnp
mov
pop
xorl
sbb
js
aad
repz
xor
dec
jp
mov
test
push
adc
add
push
fsts
imulb
push
xchg
jne
es
jle
fcompl
xor
test
sbb
mov
cmc
lds
mov
dec
cmp
loopne
add
dec
fsub
push
imul
jp
sub
and
adc
mov
push
xor
push
mov
ret
mov
lea
cwtl
imul
rorl
push
repz
mov
push
inc
xchg
fldenv
xchg
lret
loopne
cmpsl
stc
outsl
cmpsl
imul
sarb
pop
dec
lods
fsubrl
aas
dec
aas
scas
std
push
shll
dec
xchg
test
das
mov
ljmp
fstps
in
nop
ficomps
std
sub
xor
sbb
mov
inc
nop
jo
into
or
cli
icebp
hlt
orl
lods
int3
hlt
les
mov
and
ss
or
or
popf
aam
and
mov
js
xchg
arpl
cmpsb
jb
mov
xor
loopne
hlt
addr16
xchg
mov
sub
inc
push
push
push
cmp
test
mov
loopne
dec
aas
icebp
dec
pop
cmp
pop
jno
cmp
mov
pop
mov
mov
insb
movsl
xchg
mov
push
repz
int3
inc
dec
sub
int3
mov
mov
shrl
out
lahf
sbb
mov
jmp
mov
mov
mov
fs
xchg
mov
cltd
mov
cmp
push
insl
jnp
loope
jae
xchg
rol
inc
loop
inc
and
inc
lcall
lret
sbb
push
push
mov
push
jl
scas
iret
push
jmp
filds
and
push
iret
test
ret
sub
mov
movsb
outsb
sbb
stc
cmp
push
iret
bound
mov
mov
and
nop
push
jge
ja
inc
push
cmpsl
cs
or
xor
mov
fmuls
in
lock
jge
mov
mov
ja
jns
sarb
adc
add
push
mov
inc
mov
es
jmp
inc
pop
cli
cmp
adc
sbb
mov
faddl
pop
repz
pop
pop
loopne
in
popf
ja
mov
jo
add
outsb
insl
cmpl
in
and
mov
sub
jne
jmp
test
pushf
cmp
fs
sub
lret
cmp
test
popa
xor
push
lahf
fcmovbe
out
mov
int3
lock
int
xchg
cwtl
ret
or
in
xchg
add
movsl
icebp
lret
dec
mov
or
dec
add
ficoms
mov
cmp
std
inc
add
mov
add
mov
pop
data16
cmp
push
pop
std
call
sub
jp
fisubrl
cli
xchg
cmpsl
scas
jp
sbb
ficoml
push
lds
enter
or
cmp
in
repnz
mov
jno
out
xchg
lret
enter
or
in
pop
out
xchg
sub
lea
test
or
adc
push
or
fisttpll
adc
and
cmpsl
insb
cmp
jno
stc
push
mov
ja
sub
ffreep
mov
sbb
adc
fidivl
rcl
sub
fbld
cmpsb
hlt
sbb
fxch
enter
and
sub
xchg
dec
mov
mov
lret
dec
es
rcl
sbb
inc
or
arpl
addr16
xchg
and
hlt
adc
movl
xlat
orb
pop
leave
nop
je
stos
sbb
cmp
hlt
cmp
inc
mov
or
daa
outsl
jno
sbb
sub
pop
sub
iret
dec
mov
or
pop
mov
rolb
add
cmpsb
pusha
jge
shrb
shrl
cmp
lods
push
inc
pop
scas
cmpsb
xchg
sarl
aad
xor
pop
shlb
jl
mov
es
push
jp
fistpll
jae
or
dec
adc
ror
ret
addb
test
mov
hlt
scas
inc
lret
cs
in
inc
jl
lock
fs
jns
popf
xchg
adc
addr16
and
negl
bnd
mov
cld
and
loop
xchg
pop
mov
out
daa
push
push
push
nop
repnz
add
sbb
lea
sahf
idiv
lahf
pop
sub
rcrl
push
cmc
lods
mov
insl
mov
mov
xlat
dec
jle
in
dec
pusha
lahf
faddp
xchg
push
cmp
insb
pop
pop
rcll
xchg
cmp
push
push
dec
loopne
imul
or
sbb
jmp
jl
or
in
ret
lds
pop
cmp
mov
xor
add
mov
enter
mov
adc
fildll
insb
pop
xchg
scas
add
sbb
xorb
dec
testl
mov
ljmp
popa
lds
aam
sub
mov
pop
cmp
jecxz
popf
dec
dec
fxch
sub
data16
jae
js
sbb
adc
dec
cwtl
pop
push
adc
xchg
cmc
idivb
pop
cmpsb
out
stos
mov
and
stc
or
mov
mov
orb
movsb
adc
or
gs
sti
setns
xlat
pop
jle
jbe
cmpsb
xor
pop
adc
cli
aam
lock
inc
lea
insl
push
add
push
pop
andl
mov
aas
jmp
lods
push
hlt
rorl
xlat
dec
popa
insb
roll
push
hlt
push
scas
shrb
adc
iret
out
mov
mov
xchg
xor
mov
or
and
pop
imull
add
iret
mov
pop
loope
int3
sbb
addl
mov
pop
out
in
sub
mov
loopne
cltd
push
and
mov
std
cmpsb
jno
xchg
mov
xchg
into
jns
mov
rolb
out
notb
jl
popa
data16
cli
mull
cmp
cmp
je
add
in
into
mov
fcmove
jmp
lds
test
int
xchg
xor
into
mov
pushf
and
mov
pop
stc
lret
mov
push
fwait
pusha
mov
mov
add
adc
jbe
pop
cs
test
mov
push
pop
xchg
pop
mov
mov
mov
pop
push
and
loop
inc
dec
inc
pop
jp
aaa
mov
sub
bound
rcrl
xor
jns
sub
fists
push
icebp
cmp
add
int3
lds
adc
jmp
mov
aam
lock
jecxz
dec
fwait
mov
or
adc
push
jge
jns
es
insb
dec
mov
addb
in
fwait
jno
nop
lods
popa
jbe
mov
sbb
iret
xchg
cwtl
dec
pop
inc
push
push
outsl
inc
scas
sbb
test
push
mov
add
in
test
dec
jnp
fcoml
sbb
lret
je
fnstcw
shr
stos
push
sub
jmp
xchg
sub
pop
lds
xchg
adc
lret
lcall
fisubrl
xor
iret
dec
pop
clc
xor
mov
mov
adc
jbe
adc
push
jne
test
imul
lea
in
pandn
jae
sbb
arpl
pop
call
daa
enter
or
xchg
lods
jecxz,pt
lods
mov
jmp
repnz
jnp
out
sbb
shll
mov
ja
lret
data16
inc
xor
and
mov
outsb
outsb
push
ret
enter
cmpsl
xor
scas
in
gs
and
mov
hlt
cltd
jno
sbb
mov
xchg
insb
mov
mov
jae
test
jb
mov
outsl
dec
mov
es
cmpsb
stc
mov
or
loop
xlat
cmpsb
mov
sbb
jbe
orb
push
ss
scas
dec
mov
cltd
mov
sahf
mov
cmp
jge
xor
in
fimuls
dec
inc
jnp
pop
pop
popf
sbb
mov
rorb
add
sub
insb
rcll
mov
subps
js
fwait
sbb
insb
and
imul
stos
pop
jle
scas
push
mov
sub
mov
add
gs
into
fs
push
mov
adcl
loopne
jne
movsl
fcom
dec
inc
push
sub
mov
int3
xor
inc
cmp
sahf
cwtl
mov
loopne
bound
lds
rcrb
loop
out
sub
lahf
mov
add
into
pop
add
adc
or
and
push
addb
add
rcll
sbb
mov
pop
js
das
mov
imul
fists
xor
jecxz
sti
cmc
ljmp
adc
or
sbb
fisubl
fstpt
inc
je
inc
dec
gs
fstpt
fldenv
fistpll
sub
imul
inc
dec
inc
cltd
loop
lret
jns
mov
add
inc
xchg
imul
xchg
daa
xchg
fadds
mov
rcr
mov
hlt
dec
mov
enter
mov
mov
rcl
mov
pop
hlt
cs
mov
scas
jl
icebp
xor
incl
xchg
pop
arpl
lret
and
add
push
loopne
mov
enter
popa
outsl
iret
fistl
jg
xchg
fsubrl
fdivrs
xor
jp
xchg
mov
mov
fstp
je
inc
pop
mov
fstps
outsb
pop
mov
pop
xor
xor
and
or
push
pop
xor
push
xchg
test
fists
push
inc
and
lods
and
jmp
pop
xor
sub
dec
shlb
push
jb
icebp
es
fcoms
push
fbstp
inc
out
arpl
mov
std
stc
mov
pop
iret
cmp
mov
cmpsl
in
bound
cmpsb
adc
loope
mov
mov
sub
fnstsw
das
jo
cmp
shll
mov
fsubs
rcrl
ljmp
fldt
mov
mov
jns
test
dec
and
cmp
daa
xchg
or
mov
dec
mov
pop
push
pushf
dec
in
nop
or
data16
ljmp
ljmp
push
insb
shlb
cmp
loopne
ljmp
call
lcall
cmc
jle
mov
test
push
gs
fidivs
lds
jp
test
divb
call
loope
mov
xchg
sbb
mov
icebp
pop
mov
insb
inc
pop
inc
jmp
ja
pop
cli
ja
sbb
fldl
cs
push
cwtl
or
pop
mov
mov
into
xlat
scas
ja
test
pop
hlt
sub
fidivrl
mov
arpl
shlb
xchg
xchg
inc
xchg
cmp
cmp
sbb
aad
fwait
cmpsl
filds
jp
mov
in
outsb
cltd
gs
out
jg
xchg
aas
push
out
push
fwait
mov
mov
call
and
repz
jbe
xor
mov
xlat
cwtl
xor
jns
inc
fdiv
pop
jle
pop
loopne
or
push
add
fsubl
lods
ljmp
jns
negl
mov
movsb
iret
mov
jbe
das
mov
out
push
mov
jmp
sub
pop
inc
push
adc
xchg
add
add
data16
test
push
push
adc
outsl
xor
addb
ljmp
cmp
pop
pop
imul
inc
aam
pop
roll
scas
cmp
dec
cmp
push
adc
ss
and
sbb
mov
pop
scas
push
pop
push
xchg
ljmp
cli
jo
negl
jg
cltd
cli
adc
int
scas
in
xlat
sbb
int
mov
sub
pop
xchg
imul
xor
inc
cs
shrb
push
into
scas
popa
ja
mov
sub
mov
aad
inc
mov
inc
fdivr
enter
mov
xchg
test
outsl
and
lret
mov
ret
in
xor
aad
sub
jle
pop
fwait
add
jecxz
filds
xor
adc
jecxz
mov
mov
mov
or
arpl
jae
push
pop
lds
inc
xor
aam
push
xchg
add
xor
mov
loopne
cs
pop
notl
popa
xchg
shll
and
rolb
outsb
mov
xchg
ret
mov
sbb
popa
mov
ret
out
adc
lcall
nop
int
sbb
inc
ljmp
shlb
cmc
ds
mov
mov
xchg
pop
scas
ret
or
adc
lret
pop
pusha
xor
mov
and
cmp
fwait
adc
gs
xor
jg
jb
mov
dec
aam
pop
int
dec
push
std
repnz
cmp
inc
jbe
adc
mov
into
and
pop
cmp
or
hlt
icebp
insb
enter
ja
aas
jnp
lret
pop
sbbl
in
adc
sbb
cmp
xor
push
nop
and
in
pop
repz
jge
lcall
jae
push
inc
pop
les
mov
push
mov
xchg
and
les
pop
popf
sub
fs
out
push
dec
xchg
cwtl
mov
adc
mov
sbb
sbb
pop
mov
jo
mov
scas
jns
fistps
xchg
add
stos
ret
cld
sub
idiv
outsb
pop
fstp
mov
leave
es
out
mov
mov
jo
cmpsl
xchg
dec
dec
sbb
cmp
sahf
dec
mov
pop
adc
adc
in
jmp
aas
into
cmp
mov
sub
or
mov
lret
mov
pop
jns
add
js
push
and
inc
in
lret
sahf
pop
shl
loopne
outsb
jecxz
int
sar
daa
xchg
push
lret
and
clc
mov
adc
popa
stc
aas
fwait
lea
xchg
and
roll
mov
ret
mov
lea
cmp
add
mov
push
xchg
lds
enter
fnstenv
jecxz
mov
out
mov
lahf
in
push
dec
mov
js
adc
jle
xlat
sbb
mov
bound
inc
cmpsb
shlb
fmull
int
and
mov
cmpsb
sub
pop
xchg
enter
cmp
das
repnz
dec
mov
push
mov
xorl
jnp
jo
daa
pop
call
xor
cmp
mov
and
jecxz
lea
insb
ljmp
dec
fst
and
inc
dec
aam
jnp
xchg
aad
pop
sbb
out
cld
out
and
cmp
addr16
mov
push
arpl
call
or
push
sub
mov
push
jb
loop
aam
jg
dec
or
jb
jo
push
pop
lods
fildl
pop
push
popa
mov
sub
pop
jecxz
pop
ret
bound
sbb
sbb
and
cmpb
dec
cmp
push
mov
repnz
cmp
enter
mov
cmpsl
bound
jmp
pusha
dec
mov
push
sub
aas
sub
cmp
sub
mov
mov
stos
mov
mulb
outsb
gs
scas
fcmovu
jno
imul
test
scas
sub
mov
push
ljmp
or
xor
inc
lret
mov
ret
aas
cmp
pop
mov
nop
dec
insl
jnp
xor
sbb
pop
outsl
inc
in
sbb
hlt
mov
add
int
cmp
addr16
inc
rcl
int3
push
popf
fsubrs
adc
loopne
xor
pop
rol
clc
loope
lods
adc
adc
lock
xorb
je
xor
jmp
loope
shrb
add
sub
push
or
sbb
push
hlt
mov
xor
pop
adcl
imul
cmp
mov
negl
jbe
sarl
fstps
push
mov
sub
push
sbb
test
fwait
nop
pop
jg
push
stos
xor
stos
mov
adc
in
fmulp
sub
cltd
pop
insb
mov
inc
es
and
hlt
fidivrl
xor
les
popa
pop
xchg
push
out
stos
jns
bound
pop
add
xor
test
push
aam
mov
fcmovne
stc
mov
push
in
add
addr16
in
add
test
ficompl
pop
mov
fsubp
movsb
xlat
sbb
aad
test
xor
in
or
xchg
push
hlt
shlb
rorb
xor
nop
daa
push
inc
es
xchg
ss
idivb
rcl
in
imul
adc
fwait
xchg
leave
sub
add
adc
ds
int3
sub
cmp
mov
lock
jge
cmpsb
xchg
outsb
pop
xchg
bound
shl
stos
rcll
lea
mov
int3
or
data16
lea
sub
jno
xchg
sahf
fwait
dec
xchg
mov
jns
jb
pop
cmp
mov
pop
stos
adc
ss
mov
mov
sbb
ret
jp
hlt
inc
adc
sub
mov
cmp
fcoms
inc
mov
sub
xor
rorl
xchg
jb
fcom
sub
sub
movsl
fdivs
inc
sbb
adc
or
and
mov
repz
lds
popa
test
pop
xlat
test
shlb
pop
cli
lcall
mov
xchg
pop
cs
negb
adc
aad
mov
push
dec
daa
mov
test
negl
leave
stc
pop
jae
mov
idivb
sub
push
or
add
popf
mov
cmp
mov
mov
sbb
jge
std
or
movsb
mov
mov
cmp
sub
in
cmc
mov
and
inc
sub
sahf
sbbl
push
jbe
fdivrs
ret
add
mov
xor
outsl
bound
bound
roll
adc
gs
mov
mov
push
fnstcw
or
mov
pop
test
jl
test
xchg
out
xchg
nop
jl
jae
sub
mov
inc
cltd
and
into
divl
fcmovne
dec
mul
jo
and
fnstsw
das
mov
jo
cli
dec
mov
xor
rorb
dec
imul
sub
and
cmpsb
stos
adc
add
sub
inc
jl
pushf
fisubrl
mov
inc
mov
add
movsb
xchg
repz
ja
orl
sarl
sub
orl
xor
sub
mov
pusha
push
push
sahf
xchg
insl
jns
rorb
out
cmc
aad
lea
dec
pop
and
mov
push
cmp
push
icebp
dec
xchg
adc
aam
xchg
pop
jecxz
dec
push
es
dec
je
stos
cmp
mov
stos
pop
nop
xorl
jmp
xorl
inc
mov
aam
mov
pop
fmul
cli
test
inc
mov
cld
adc
imul
dec
sti
pop
negl
into
fsubrl
inc
test
sbb
xchg
add
sahf
mov
push
popa
or
dec
push
das
xchg
or
ret
mov
mov
negl
mov
repnz
and
sbb
mov
push
jge
jo
nop
pushl
inc
push
pushf
subb
inc
pop
iret
jno
repnz
adc
inc
clc
jle
dec
aad
pop
xor
sub
mov
xchg
icebp
pop
or
test
out
mov
inc
xlat
jle
imul
lea
shl
xlat
cmp
inc
out
sbb
mov
scas
loope
inc
aam
sarl
jecxz
xor
mov
adc
in
ljmp
mov
lcall
ds
push
lahf
xor
lods
inc
pop
xor
jge
sbb
jne
jo
imul
call
push
bound
and
jne
sub
out
xor
popa
ljmp
inc
mov
jg
and
adc
scas
lcall
jecxz
cmc
leave
cmp
pop
fstpt
mov
or
lret
ljmp
adc
frstor
dec
cmp
push
out
xlat
lret
mov
lods
and
dec
stos
daa
imul
dec
call
movb
fwait
mov
mov
push
cmp
inc
sub
sbb
mov
sbb
sub
sub
fbld
push
gs
or
push
jg
addr16
test
lret
jg
dec
lret
out
inc
sbbl
inc
movsb
loope
inc
push
pushf
pop
cmpsb
add
jo
mov
push
gs
push
out
int
daa
dec
orb
jl
leave
push
inc
dec
out
inc
jle
pop
repnz
pop
push
mov
pop
dec
pusha
pop
jge
cmp
dec
cmp
mov
inc
mov
mov
or
mov
xor
in
in
adc
mov
in
lock
in
push
iret
and
mov
divl
js
and
xchg
clc
sub
cmp
pop
outsb
sub
and
dec
mov
stos
sub
sub
scas
add
jl
sahf
inc
mov
incl
jecxz
out
inc
sub
loop
cmp
ficomps
test
cmpsb
ja
mov
and
mov
movsl
lods
xor
sub
xlat
and
inc
icebp
imul
sahf
es
and
stos
push
subb
in
and
mov
sbb
int
lahf
add
movsl
sti
jno
fisttps
int
sub
dec
add
repz
sub
add
cld
or
push
jle
data16
pop
ss
and
fdivrl
mov
mov
stos
test
sahf
in
cmp
fisttpl
mov
mov
mov
es
out
jnp
cmp
je
jmp
dec
sub
sub
stc
push
dec
mov
ds
imul
cld
outsl
mov
add
pushf
in
shr
outsb
lds
push
icebp
dec
adc
and
cmp
push
sti
fs
enter
fbstp
jp
jmp
cmpsb
sahf
lret
adc
clc
aad
push
xorl
mov
int3
dec
loop
mov
pop
insl
test
push
xor
jge
pushf
fmull
cld
adc
cs
cmc
lods
icebp
mov
mov
cmp
pop
in
lods
lods
dec
leave
jmp
lods
jp
dec
movsl
xchg
mov
jb
lahf
or
fsubl
test
addb
xor
js
fcmovb
jbe
or
xchg
nop
loop
pushf
repz
in
dec
mov
pop
out
pop
jae
stos
divl
je
cmp
test
adc
push
outsl
mov
shlb
cmp
mov
sub
xchg
add
scas
add
push
xchg
pop
icebp
pop
out
mov
in
mov
sub
xchg
imul
mov
dec
shll
lock
lret
cmp
stos
das
inc
mov
inc
mov
xor
hlt
dec
inc
xor
xor
jo
les
fisubrl
push
ret
gs
dec
inc
dec
inc
add
jg
es
repnz
ja
gs
push
inc
xor
rolb
lea
push
std
imul
pusha
sti
aas
stc
xor
imul
cltd
lods
outsl
pop
cmc
repnz
ret
imul
jge
mov
jbe
test
push
push
add
xor
bound
cmp
call
outsl
xor
cmpsl
pop
iret
stos
les
dec
xchg
aas
loope
call
in
aaa
and
mov
rcrb
ja
jp
aas
es
jno
frstpm(287
clc
mov
adc
mov
cld
xchg
clc
mov
cmp
ss
and
stos
cltd
lods
mov
daa
test
cwtl
fst
jns
sub
in
negl
xor
les
pusha
mov
shrb
inc
shll
add
pusha
mov
int
push
stos
rol
iret
cmpsl
adc
push
loopne
jmp
dec
scas
xchg
fistl
paddsb
xor
or
pop
das
jns
and
and
int3
and
inc
push
cmp
scas
lret
imul
sbbb
push
jg
test
mov
je
aaa
loop
xchg
pop
push
stos
loopne
popf
sbb
test
idivb
mov
and
fsubrs
inc
cmp
in
and
push
insl
add
insb
push
and
testl
pop
cld
mov
cmpsl
push
pop
test
mov
cs
xchg
outsl
lret
mov
dec
enter
push
int3
out
jle
test
fcomi
pop
loope
lret
bound
cmp
jmp
jp
mov
and
sti
sub
mov
pushf
inc
pop
xchg
and
push
insl
sbb
ss
adc
push
fisubrl
xchg
cmpb
call
or
cmpsb
mov
cli
jle
mov
repnz
pop
leave
je
rclb
push
pusha
fmull
pop
scas
dec
in
sti
lods
fldt
sbb
lret
pop
lahf
out
adc
mov
inc
std
xorl
adc
jns
pop
add
jnp
and
push
or
imul
push
loope
inc
test
adc
sub
add
lahf
mov
pop
sub
lret
and
scas
jb
add
sbb
adc
lock
js
or
dec
dec
icebp
aam
cmp
shl
xor
adc
xor
xchg
in
mov
mov
hlt
sub
fwait
jle
jnp
push
fwait
cmpsl
outsb
addr16
repz
xlat
js
mov
and
sahf
imul
sub
lods
stc
or
mov
push
xchg
jns
rorb
arpl
test
pop
ficompl
xor
test
fldz
nop
jg
push
mov
mov
mov
outsb
cmpsl
jbe
iret
les
pop
cld
and
jp
pop
inc
xchg
js
xor
cmpsb
leave
in
clc
arpl
rcrl
mov
fistpll
xchg
out
ljmp
inc
mov
pushf
mov
lods
or
call
test
imul
cmp
and
nop
enter
sub
rcrb
add
fs
dec
mov
dec
test
or
aad
nop
sbb
cmpb
mov
add
divl
xlat
xor
push
inc
icebp
cwtl
fwait
mov
dec
loop
ds
or
call
mov
jmp
aam
mov
imul
dec
inc
popf
ljmp
in
mov
jb
push
cmp
in
pop
sahf
mov
mul
or
and
and
pop
xchg
jge
mov
inc
sti
call
inc
int3
cmp
int
push
scas
mov
inc
cmp
lds
or
dec
adc
lods
mov
je
cs
mov
outsl
lds
loopne
out
nop
mov
sub
test
loop
gs
test
mov
xchg
inc
call
push
mov
in
leave
addr16
and
cmp
stos
testb
lods
imul
data16
fcompl
pop
push
xchg
fdecstp
dec
sbbb
mov
cmp
jp
jb
cmp
mov
mulb
leave
rcl
sahf
lret
jl
push
adc
fld
mov
aas
into
adc
cmp
and
jo
pop
lods
jo
xor
loop
sbb
mov
jmp
adc
icebp
nop
in
xor
lods
scas
cs
out
shll
pushf
mov
cmc
mov
out
push
lock
test
pop
pusha
aad
pushf
cmp
mov
mov
mov
in
mov
xchg
adc
sbb
add
outsb
int
clc
clc
aad
mov
fstps
mov
lds
int
and
mov
jp
icebp
adc
mov
adc
arpl
je
sahf
test
cmc
popa
iret
movsl
rcrb
loop
or
das
mov
jno
fmull
arpl
inc
inc
jl
cli
stc
add
subb
mov
negb
aad
mov
pop
cmp
lcall
in
int
lahf
and
mov
mov
in
xchg
pushf
and
mov
push
ret
std
jecxz
enter
fucomi
cmp
xor
lret
sbb
sub
cmp
movsl
or
inc
fwait
es
fadd
xor
adc
sbb
sti
push
inc
data16
jae
pop
mov
dec
or
mov
dec
out
push
jp
imul
pop
mov
pop
mov
pop
cmp
mov
jecxz
aas
hlt
in
adc
enter
push
sbb
dec
or
movsb
push
sbb
rclb
pop
dec
adc
adc
ret
or
xchg
push
outsb
sbb
jne
jle
lret
cmp
add
fwait
push
sbb
push
shll
adc
mov
dec
loop
lods
ret
jns
mov
cs
enter
adc
jns
jae
in
movsb
fmuls
adc
pop
repz
lret
adc
sub
mov
in
fdiv
mov
lret
xor
mov
mov
mov
arpl
imul
inc
ljmp
push
loope
inc
pop
pop
xchg
jmp
cld
ss
jmp
push
push
cld
outsb
negl
inc
dec
bound
outsl
fldl
shrb
xor
std
call
popa
movsb
xor
int
xlat
insl
sub
and
aaa
jmp
sub
mov
mov
adcb
xchg
mov
sub
jno
es
imul
lods
test
roll
add
pop
cmp
mov
les
out
popa
fwait
pusha
push
pop
test
push
sahf
push
adc
repz
fidivs
jmp
je
adc
mov
jno
push
and
xor
adc
repnz
push
movsb
jl
lods
xchg
in
arpl
icebp
sbb
mov
jo
repnz
mov
sar
aas
lea
xchg
or
inc
les
sub
cmp
or
add
push
js
add
xor
pop
mov
sbb
push
jmp
adc
ja
in
push
jl
mov
cmp
sbb
cs
push
lret
int
mov
shl
outsl
inc
push
sub
sbb
adc
in
ret
insl
inc
jg,pt
pop
pop
jl
cmp
dec
cmp
mov
xchg
add
cmp
inc
add
xchg
aas
shll
fisubl
mov
xchg
ljmp
mov
xchg
out
addl
mov
cmpsl
inc
out
out
je
mov
pusha
rcll
push
imul
into
stc
push
mov
push
jecxz
test
sub
mov
aam
and
in
pop
je
sub
pop
scas
js
jge
test
xchg
mov
or
xor
pop
sub
leave
mov
lods
jns
xor
addr16
pop
pop
mov
incl
cltd
adc
jnp
add
repz
pushf
sti
push
add
cmp
sbb
dec
push
addr16
push
mov
nop
aad
shl
mov
push
mov
repnz
pop
in
jp
sub
ja
fldenv
ja
cmpsl
push
xchg
cmp
adc
add
frstor
sub
lcall
fsubrs
out
leave
mov
or
movsb
fidivs
dec
sbb
fstps
push
insb
xchg
mov
mov
jge
mov
sti
das
mov
rol
loope
lods
pop
add
enter
push
dec
sub
ljmp
xor
push
fcmove
jmp
mov
push
jnp
lcall
dec
cs
ja
js
aad
arpl
inc
cmp
xor
sbbb
sbb
out
mov
jbe
inc
sbbl
bound
sbb
mov
dec
ss
add
ljmp
cmpsb
sub
mov
xlat
repnz
inc
daa
xor
add
sub
xor
adc
dec
xor
fsubrl
in
ja
xchg
cmpl
ret
aad
lea
aaa
adc
jle
popa
add
inc
insb
aaa
jbe
jle
pop
xchg
sar
outsl
pop
mov
push
push
cltd
xchg
jo
jae
inc
cmp
repz
push
lret
into
inc
xchg
fucomp
hlt
enter
bound
dec
jns
aam
xor
or
orb
jo
outsl
aad
aaa
or
mov
inc
fcoms
xchg
lcall
adc
int3
jmp
icebp
aam
jbe,pt
mov
fstps
mov
inc
je
cmp
sub
fnstenv
stos
dec
add
jnp
push
or
dec
iret
dec
popf
add
cld
dec
or
fnstenv
add
out
add
sbb
sbb
push
add
gs
xor
jns
pop
xchg
out
mov
adc
fcmovbe
xchg
inc
test
mov
push
push
mov
cmp
imul
adc
lock
fldt
neg
inc
push
scas
xchg
push
aas
imul
mov
test
lea
mov
ror
insb
xchg
jmp
push
or
adc
mov
mov
add
int3
or
in
dec
add
pop
aaa
int
popa
cmp
pop
shll
ficoml
rorb
mov
dec
repnz
push
add
push
fmull
inc
ret
shlb
cbtw
cltd
cmp
dec
outsl
aaa
ror
mov
xor
jl,pn
cmc
in
push
test
inc
cs
or
call
jecxz
jg,pt
push
movsl
ret
shll
mov
pop
mov
mov
cld
cmpsb
push
and
cmp
sahf
popf
fwait
jno
mov
insb
in
lahf
iret
xchg
push
xchg
cs
add
movsb
adc
pusha
fldcw
sbb
push
mov
push
aam
jnp
mov
fwait
xchg
push
add
arpl
xor
fsubr
stc
shl
add
push
popa
jl
add
sti
add
dec
mov
jg
int
cmpsl
int3
cmp
mov
adc
adc
lods
mov
and
je
sub
or
pop
jb
scas
shll
or
xchg
jle
jo
leave
jmp
push
push
mov
mov
or
enter
xorb
pop
cmc
add
xlat
lret
mov
sub
out
cmc
jecxz
mov
add
mov
xor
mov
sbb
imul
inc
ret
in
mul
cmpsb
xlat
mov
push
mov
push
stos
lods
sarl
adc
xchg
fs
mov
cltd
aad
je
loopne
rorl
mov
pop
mov
mov
jns
adc
les
or
lods
sbb
fwait
sbbl
mov
inc
sbbb
mov
hlt
push
andnps
cwtl
js
int
push
push
inc
inc
cwtl
mov
adc
outsl
enter
pop
orl
lcall
pushf
push
lcall
in
andb
add
jmp
and
jl
lret
pusha
xor
scas
mov
jbe
jo
dec
push
repz
das
test
loopne
mov
int
popa
movsl
xor
dec
rorl
jnp
lds
xlat
les
iret
icebp
adc
xor
outsb
adc
std
mov
mov
fstpl
lods
out
das
add
add
icebp
inc
hlt
mov
adc
daa
xchg
fistpll
pushf
pop
aas
jp
jge
mov
mov
mov
mov
sub
cmc
cli
xchg
adc
and
and
fwait
fs
xchg
jne
jmp
test
popa
mov
iret
inc
arpl
xchg
outsl
sub
jg
gs
add
das
xor
pusha
les
mov
or
jns
loop
cs
loop
adc
int
testl
rcrl
cmp
fists
mov
add
pusha
jl
pop
pop
daa
jns
imul
pop
xchg
dec
sbb
pop
jbe
shlb
sti
subb
pop
push
add
iret
push
aaa
xchg
jbe
ja
mov
mov
subl
adc
mov
dec
cmp
adc
jo
adc
mov
in
inc
int3
lahf
insb
inc
insl
sub
insl
lahf
shl
add
sbb
lock
das
out
rcrb
push
popf
mov
dec
xchg
push
xchg
in
popa
cmp
fwait
shrl
call
ret
enter
into
mov
js
push
cwtl
inc
push
push
mov
enter
or
cmp
push
loopne
push
aam
scas
sub
fucomp
sbbl
push
pop
int
push
xchg
mov
jbe
addr16
dec
xchg
mov
loopne
mov
push
scas
shll
lea
stos
pop
sarl
or
lea
mov
xorl
xchg
pop
clc
fstps
aaa
ror
mov
out
lahf
cmp
push
push
jnp
inc
or
xchg
jge
jne
mov
inc
cltd
sbb
sub
pop
jo
push
lahf
xchg
addr16
fidivrs
push
push
and
xchg
fsubrl
jle
mov
push
sub
xor
aaa
push
aam
mov
stos
adc
cwtl
mov
or
add
scas
xor
scas
push
lds
cltd
sbb
lds
hlt
clc
in
push
aas
inc
ds
or
adc
adc
cmpsb
inc
imul
xchg
not
cltd
inc
cmp
xorl
je
adc
popa
cmp
jne
lods
adc
jnp
cli
data16
sbb
mov
sbb
test
mov
cmpsb
lret
or
shrl
jno
mov
scas
outsl
hlt
ljmp
xchg
cmpsb
imul
pop
daa
mov
nop
adc
sub
xchg
sbb
test
fs
filds
inc
xchg
mov
xchg
push
loope
pop
stc
pop
push
jns
stc
movsb
jmp
mov
cltd
push
push
lods
inc
jl
stos
mov
fs
out
add
shl
xchg
je
andl
add
pop
push
int3
data16
or
cmovne
clc
movsl
in
repnz
inc
xchg
dec
dec
mov
daa
jecxz
cmp
xor
adc
movsl
mov
add
stc
bound
ss
mov
jae
jecxz
lea
out
fldt
mov
lods
fs
cwtl
addr16
fnstsw
hlt
cmc
lahf
sub
mov
xchg
mov
adc
xor
pop
adcl
lds
js
ss
imul
roll
jnp
adc
xor
repz
js
mov
ficoml
sub
ret
test
dec
cwtl
rol
push
aad
fstpt
cs
arpl
push
jb
inc
popa
cmc
xorb
sbb
sti
lods
aas
lock
stos
jae
addr16
inc
sbb
gs
cmp
inc
leave
xor
cmp
lcall
sub
ss
movsb
sbb
ret
push
cmc
cltd
mov
add
les
cs
fcmovne
sbb
and
mov
ljmp
pop
fldcw
arpl
sti
inc
adc
lods
lea
add
mov
popa
aas
pushf
xchg
mov
lret
push
or
aad
xchg
pusha
pusha
and
mov
mov
pand
add
arpl
mov
aas
and
xchg
and
scas
mov
lret
and
push
lahf
sub
xchg
and
gs
popa
or
mov
in
fnstsw
xor
dec
loop
aad
lret
push
scas
mov
xchg
xchg
inc
add
aam
loope
adc
cmp
or
fsts
add
rolb
aas
test
lcall
sbb
arpl
std
and
lret
cmp
mov
into
jecxz
fwait
mov
push
add
mov
nop
lret
add
cmpsl
dec
mov
mov
testb
push
cmp
iret
dec
js
xor
adc
not
push
sub
loop
mov
std
movsb
mov
pop
sbb
mov
or
jb
aas
mov
aad
sub
mov
loopne
dec
cmp
cmp
fs
clc
sbb
push
pop
pop
imul
mov
push
inc
push
gs
scas
push
pop
sbb
pop
dec
xor
sub
sub
test
inc
mov
rorb
ffree
sahf
cmc
mov
xchg
mov
setnp
sahf
pushf
out
not
ljmp
jp
push
imul
aas
pop
mov
mov
jp
jecxz
inc
ret
in
pop
aad
gs
cmp
mov
enter
xchg
cs
push
rorb
test
popf
pusha
aas
sbb
aad
mov
adc
aam
sub
xchg
mov
mov
add
cmpsb
add
rcl
push
lock
and
adc
sub
sbb
add
lret
inc
inc
sub
mov
push
pop
pop
adc
in
pop
iret
lret
inc
into
mov
shrb
iret
shll
mov
push
cmp
push
das
pop
adc
add
xor
fbld
xor
pop
int
jg
repz
mov
inc
pop
gs
fstpt
inc
fistpll
jo
inc
adc
fcmovb
test
pusha
add
jae
imul
movsl
add
test
movsl
leave
add
add
insl
data16
mov
scas
jbe
notl
ret
mov
jbe
fmul
adc
rorb
and
ljmp
inc
negb
add
xchg
popa
in
test
push
sbb
adc
jmp
mov
cmp
out
dec
jl
fistpll
ljmp
pop
fidivs
lahf
cld
mov
mov
bndldx
les
sti
imul
sbb
dec
fcompl
cld
test
xor
jl
xchg
sub
rcl
xchg
out
inc
test
scas
adc
cmp
adc
leave
jno
inc
xchg
out
rorb
jb
notb
sbb
push
xchg
daa
roll
ljmp
mov
ret
es
sub
push
repnz
xor
loopne,pt
in
arpl
mov
mov
call
sbb
xchg
lods
jg
mov
adc
in
or
and
cmpsb
mov
packssdw
lock
rcrb
cmp
sub
xor
push
and
pushf
xchg
in
and
movsl
push
testl
inc
sbb
or
jo,pt
adc
pop
testl
dec
lods
mov
loop
pop
xor
repnz
jnp
lret
jb
repnz
shl
xchg
mov
mov
add
add
iret
lods
roll
cmp
dec
push
cltd
stos
nop
xor
mov
xchg
fisttpl
or
ficoml
xor
std
cli
insl
inc
sbb
xor
jge
mov
loop
stos
xor
or
add
data16
cmc
out
sub
pop
pop
fidivl
cmp
add
das
std
out
cmpsb
mov
js
inc
xchg
movsl
das
dec
mov
xchg
xchg
movsb
ja
cmp
mov
xchg
mov
hlt
xor
int
jmp
xchg
mov
pop
dec
jmp
or
jge
sub
pop
hlt
test
enter
les
dec
cs
xor
cld
popa
xor
push
mov
adc
pop
pop
frstor
jbe
mov
xchg
push
inc
pop
mov
call
jg
sub
dec
cmp
into
pop
mov
xchg
mov
push
xor
rcll
daa
sub
pop
cwtl
pop
cmp
and
sub
sub
add
pushf
mov
inc
inc
les
addr16
sub
mov
mov
sub
cmc
les
dec
int3
cmc
aad
or
ret
mov
and
imul
mov
imul
popf
std
sbb
fsubl
jnp
mov
ljmp
sub
rol
es
outsl
cmp
rorb
dec
enter
aas
data16
loope,pt
pushf
xchg
xor
fcomi
sbb
mov
rorl
and
add
and
imull
xor
rorb
mov
lods
jns
idivb
lret
dec
sbb
cmpsb
ret
loopne
push
and
adc
stc
mov
scas
xor
jbe
lret
inc
loop
sbb
popa
pop
or
pop
ss
jl
lea
mov
mov
aad
add
mov
in
mov
mov
mov
cmp
cmp
das
and
xor
loopne
outsb
inc
sbb
test
outsb
mov
pop
clc
xor
pop
pushf
adc
in
popa
outsb
sub
insb
dec
insl
add
scas
in
pop
scas
pop
in
popa
call
sarb
sub
loope
mov
push
xchg
pop
xchg
jle
and
xchg
add
jecxz
fadd
rclb
jle
cltd
add
xchg
js
or
es
and
imul
xchg
in
mov
pop
xchg
jle
push
or
cmp
push
movsb
lret
pop
jno
dec
mov
inc
mov
lds
adc
out
mov
sbbl
rcl
es
xor
mov
jnp
add
xlat
dec
test
roll
sbb
cmc
lcall
add
push
xchg
outsl
pop
dec
xchg
shrl
adc
cli
jle
mov
gs
xchg
jae
lret
cld
test
lods
and
sahf
jmp
data16
cmp
push
hlt
mov
pop
or
int
and
and
pushf
inc
adc
hlt
cmp
mov
bnd
adc
movsb
in
pop
ja
mov
or
aaa
push
dec
test
add
mov
lods
js
les
and
dec
inc
push
fildll
xor
imul
or
repnz
ss
jmp
cmp
push
pop
das
test
cs
jns
bnd
leave
test
mov
mov
fstps
push
pop
outsb
or
cmpl
sbbb
aas
out
test
cld
arpl
push
out
std
xlat
mov
pop
dec
pop
pop
nop
push
push
jl
and
add
inc
cmpsb
jle
sub
inc
aad
xchg
push
test
pop
jno
xchg
or
add
mov
mov
inc
ja
int
cltd
pop
roll
outsl
mov
push
scas
pop
daa
and
int3
iret
pop
xlat
or
loop
es
arpl
aas
jp
adc
push
and
aad
js
test
sbb
cmpsl
int3
lret
adc
xchg
xchg
adc
fcoms
lods
loop
ret
push
shll
mov
adc
pop
pop
lret
je
gs
cmp
xchg
sub
jle
scas
fwait
lcall
xor
imull
mov
xchg
dec
out
mov
loop
mov
sub
lahf
push
jge
std
dec
repnz
test
das
pop
jg
rcrl
dec
fdivp
mov
je
addr16
cltd
or
and
or
movsl
in
push
adc
and
jmp
iret
mov
test
imul
jge
call
into
cmp
pop
out
rorl
lods
fadds
into
stos
test
ljmp
repnz
outsb
push
insl
aaa
dec
xor
int
and
fsubs
jne
lock
aaa
stos
pop
test
outsl
or
sub
in
mov
or
addb
mov
in
arpl
sub
mov
jb
ffreep
dec
mov
je
pop
add
mov
jne
adc
fistpll
xchg
mov
or
or
pop
xorb
std
ljmp
repz
cli
dec
rcll
xor
add
bound
mov
mov
in
sub
fisubl
dec
cmpsb
mov
into
jle
stos
inc
xchg
mov
icebp
imul
repnz
jo
inc
fstpl
fnstcw
lret
xor
pop
and
and
dec
pop
lahf
fdivr
jno
or
out
push
pusha
sbb
fstp
sahf
jecxz
ror
imul
cmp
mov
lock
in
xchg
repnz
fldcw
iret
cmpsl
imul
dec
mov
push
out
push
adc
fiadds
sub
stos
fldt
push
jno
push
push
rcl
ds
test
pop
lret
jecxz
xchg
sub
xor
sub
pop
sub
push
mov
mov
ret
dec
xchg
pop
icebp
push
inc
fdivs
cli
imul
cwtl
add
xchg
sbb
mov
js
repnz
add
flds
pop
adc
xor
aas
pushf
imul
mov
leave
pop
xchg
fs
push
dec
mov
or
inc
ret
fimull
xchg
cmpsb
rcr
nop
xchg
mov
test
xor
repnz
fcompl
loop
and
lea
mov
lret
mov
xor
sahf
mov
sbb
nop
int
or
inc
cmpl
xor
adc
sbb
fidivl
leave
mov
and
push
mov
xor
ss
enter
jecxz
inc
stos
fisubs
mov
test
and
fstpt
sti
in
and
test
cs
sahf
aas
imul
test
and
gs
enter
jp
shr
sbb
mov
lods
ja
mov
lret
imul
adcb
xchg
add
movsb
mov
fucomip
lods
lcall
cmc
repz
mov
hlt
in
rcl
out
cmp
xor
adc
fldl
mov
xchg
push
jp
aas
daa
dec
nop
fstpl
shlb
inc
mov
cmp
add
push
test
push
insb
in
mov
insl
sbb
cmp
mov
xor
jg
add
jl
leave
inc
push
sub
hlt
mov
loop
movsl
cmp
mov
xchg
xchg
lahf
mov
lock
sub
and
xor
out
call
push
icebp
mov
aad
daa
lea
daa
push
leave
sarl
xchg
cmp
cmpsl
mov
add
fcmovu
jl
or
and
popf
cmp
imul
pop
cld
bound
mov
jnp
insb
movsl
orl
mov
inc
mov
xchg
imul
add
push
rcr
jb
adc
je
or
dec
in
js
mov
dec
mov
cltd
sbb
xchg
out
popf
jae
mov
mov
mov
es
jp
repz
adc
jo
cwtl
and
push
lret
fdiv
cmp
lock
stos
jl
sbb
lock
inc
iret
js
pusha
out
xchg
cmp
cmc
rcrl
into
testb
sub
adc
lock
repz
add
out
mov
dec
adc
mov
daa
sbbb
scas
cmp
jmp
std
sbb
sbb
mov
andb
fmuls
repz
sub
mov
sub
pushf
mov
mov
scas
add
adc
test
cs
cmp
jecxz
push
fisubrs
or
ret
cmp
add
lret
movsb
sub
fadd
or
mov
adc
stc
ja
jns
mov
xorb
mov
pop
dec
cmpsl
das
sbb
andl
popa
scas
xor
mov
test
fistps
adc
fcmovne
xchg
sti
mov
popf
add
mov
mov
cltd
pop
jno
lods
push
xor
xchg
xchg
ja
sbb
mov
sub
movsl
or
popf
pushf
jecxz
cmpb
mov
or
jge
mov
cmpsb
mov
pop
inc
fbld
xor
mov
and
pop
jg
in
push
and
sub
cmp
add
jbe
adc
mov
cmc
fdivrp
jae,pn
xchg
pop
jg
outsl
adc
cmp
cmc
lret
ficompl
xchg
andb
cmp
xor
lods
scas
or
shlb
cmpsb
addr16
adc
sbb
stos
adc
loopne
pop
icebp
ret
push
ret
int3
and
push
inc
stos
leave
and
pop
rorb
into
mov
cmp
adc
adc
dec
dec
sarl
out
in
lock
jle
jecxz
ljmp
int
cs
test
mov
sbb
sbb
sub
cmpsl
stos
out
xchg
sti
mulb
dec
loope
lahf
adcl
lfs
gs
out
scas
xlat
sbb
pop
movb
clc
pusha
scas
aad
mov
loope
and
popf
mov
jl
sbb
mov
push
shrb
xchg
lds
sbb
repnz
repz
fs
fisttpl
ja
dec
cmp
ja
cmp
xor
pop
push
js
fsts
outsb
mov
mov
mov
push
stos
cli
xor
inc
xor
test
movsb
aaa
cmp
fcomps
push
fxch
mov
loopne
imul
jge
jl
pop
into
out
jo
cwtl
or
es
call
jge
mov
add
push
test
cmpsl
cmpsb
lods
movsl
xchg
push
jno
test
pusha
mov
pop
cld
dec
xchg
cmpl
fisttps
jo
sub
cmpsl
fistpl
sub
in
mov
mov
inc
pop
mov
add
add
shrb
mov
fimull
fdivrl
sbb
fisubrs
adc
scas
jecxz
mov
adc
loope
cmpsb
pop
pop
repz
leave
jo
inc
pop
push
sbb
mov
mov
mov
lcall
jne
cmp
je
inc
lods
mov
and
jne
leave
xor
or
and
inc
mov
stos
imul
mov
jmp
or
enter
lea
in
cli
sub
lcall
push
add
outsl
jae
in
jmp
sbb
push
lea
cmp
sub
jmp
test
push
or
xchg
pop
rcr
inc
push
pop
iret
fists
adc
mov
pop
shld
xchg
add
es
adc
out
add
lcall
mov
jo
scas
mov
mov
out
sti
xchg
or
cmp
mov
lahf
and
inc
inc
int3
and
adc
push
ljmp
hlt
mov
cmp
cmp
or
movb
jnp
and
sub
sub
pshufw
pushf
insb
push
jg
bound
mov
dec
jg
xchg
lds
mov
std
data16
xchg
add
xchg
add
stos
mov
sbb
ja
push
mov
int3
cwtl
adc
fildll
outsb
dec
addl
repnz
decl
jae
bnd
mov
popa
les
mov
ret
xchg
repnz
jbe
lock
cmp
sub
xchg
mov
idiv
enter
fcoml
test
sbb
dec
push
jg
pusha
es
dec
jae
cli
and
arpl
shlb
adc
jo,pt
sarb
shlb
sbb
cmc
in
je
fs
dec
or
inc
push
push
sub
jle
fsubrs
lret
push
lret
pop
arpl
or
mov
cmc
and
rol
aas
cwtl
jo
movsb
or
ljmp
inc
mov
mov
pop
mov
lcall
outsl
fimuls
repnz
or
adc
mov
fstpl
sahf
int3
cs
and
rol
cmp
into
xor
inc
int3
ss
dec
cmp
sbb
test
mov
lcall
jge
add
sub
adc
aam
xlat
add
xor
imul
movsb
or
lds
clc
mov
mov
jp
fcoms
lret
in
andl
jmp
enter
or
cmpsl
sbb
cmp
movsb
xchg
cmp
mov
fmull
fists
xchg
or
xor
into
in
test
cltd
xor
inc
mov
or
in
jae
push
mov
daa
xchg
lcall
iret
mov
dec
scas
or
test
jmp
xchg
xchg
lsl
dec
cmpsb
and
pop
daa
lods
es
lahf
mov
inc
xchg
repnz
int3
xor
pusha
ja
pop
sbb
mov
sbb
fistps
fcmovu
adc
bound
add
lds
xlat
push
adc
ret
aas
jmp
push
xor
aas
cmp
mov
adc
cmpsb
jno
lret
push
sahf
push
mov
cmc
loope
cmp
mov
imul
hlt
inc
push
hlt
push
clc
jecxz
ret
mov
cs
dec
aas
jp
or
subl
xchg
in
mov
enter
push
pop
cltd
scas
cmp
bound
push
cltd
push
scas
mov
ret
repz
mov
sahf
fdivrl
mov
pop
fnstsw
lret
mov
sub
jmp
or
arpl
or
pop
mulb
daa
out
out
lods
ret
fistps
aam
insl
imul
iret
sub
mov
jns
adc
adc
sub
scas
add
lea
scas
in
mov
bts
adc
mov
fwait
mov
adc
outsl
cmp
out
or
fdivp
pop
sbb
adc
ljmp
pop
inc
inc
in
dec
pop
xor
xchg
jle
in
pop
fwait
xchg
add
jo
push
push
sbb
fldenv
pop
jno
in
orl
push
push
mov
cmp
xchg
and
inc
and
sub
mov
mov
cli
cmp
shl
sarb
mov
mov
push
xor
xor
mov
xorb
push
cmp
pop
mov
jbe
sar
mov
out
fstpl
push
pop
adc
ljmp
and
jo
jne
xchg
jmp
xchg
adc
inc
imul
sar
adc
sub
lods
aad
push
xor
subl
out
inc
jns
aam
pshufw
add
movsb
int
inc
adc
mov
sbb
push
cmp
shr
jl
mov
jnp
adc
ja
xchg
pop
mov
xchg
shlb
je
movsl
into
add
nop
loope
icebp
lcall
popf
mov
add
fwait
cwtl
cmc
loop
sub
xor
scas
xor
lds
jns
pop
lods
add
in
jmp
ss
add
xlat
iret
outsb
icebp
in
fnstenv
and
sbb
out
outsl
push
in
popl
jne
repz
hlt
cmp
lds
sbb
mov
sbb
lock
repz
aas
sub
sbb
lea
dec
xor
pop
mov
in
add
aad
push
aaa
jbe
sbb
or
mov
data16
push
pusha
ds
fs
push
jo
pop
or
jae
dec
loope
lret
push
mov
jnp
sub
test
sarb
mov
dec
jp
mov
xchg
out
add
sbb
adc
sub
enter
cmpsb
add
cltd
stc
movsl
inc
jecxz
push
jle
jmp
cmc
xor
xor
cmp
dec
mov
inc
jl
xchg
push
jle
fwait
adc
rorl
sub
dec
dec
sub
das
loope
loop
push
pusha
sbb
pop
jnp
aas
hlt
inc
xchg
mov
mov
push
jl
xor
ret
sbb
aas
rcl
xchg
pop
and
push
jae
inc
xlat
pop
mov
mov
lock
fsts
push
inc
fstpt
cmc
ret
add
push
pop
fs
jo
out
cpuid
mov
and
filds
jp
cmpsb
les
andl
sahf
inc
adc
mov
mov
mov
je
fidivrl
repz
mov
mov
cmp
lock
adc
mov
inc
dec
pop
mov
movsl
or
mov
cmc
rol
sbb
dec
lock
in
fists
cltd
test
xor
lds
jecxz
mov
xchg
xor
ljmp
hlt
mov
pushf
mov
in
xchg
pop
dec
fwait
mov
xor
ret
leave
mov
adc
jp
and
imul
sbb
dec
outsb
dec
into
mov
fs
mov
test
aad
push
inc
ficoms
pop
pop
xor
push
add
inc
adc
push
stc
aad
adc
out
inc
or
and
dec
lcall
ffreep
push
std
dec
xchg
sbb
or
push
mulb
aad
or
push
cmp
loop
cmp
push
inc
mov
sub
adc
push
test
ljmp
int
sbb
ret
push
mov
dec
xor
inc
subb
cltd
mov
repz
nop
dec
push
imul
add
jl
push
lods
xor
imul
loope
mov
cmp
iret
mov
dec
jns
mov
and
adc
inc
jecxz
popa
cli
adc
pop
rclb
test
cmc
in
fdivrs
out
pop
mov
shll
mov
jge
or
jmp
jecxz
mov
ficomps
xlat
shlb
icebp
fiadds
leave
pop
ss
mov
jp
xchg
sbb
xchg
imul
lret
int3
mov
rclb
ds
mov
mov
cli
jae
mov
jl
cwtl
test
idivl
shll
mov
mov
ja
mov
jbe
xor
fs
mov
nop
push
sbb
fcompl
or
sar
cmpsl
mov
sbb
push
sbb
aad
into
aaa
mov
mov
inc
xor
hlt
mov
test
aas
and
jne
mov
and
adc
iret
pushf
cs
nop
dec
movsb
xchg
jne
insl
fidivrs
mov
lahf
sub
cmpsb
cmp
xlat
xchg
cmp
in
dec
mov
mov
pop
mov
pop
push
pop
adc
xchg
jns
xor
test
sub
lret
loopne
ds
in
fldcw
movsb
rclb
jo
xor
mov
dec
addb
add
js
adc
aas
dec
push
push
lock
and
scas
mov
adc
push
dec
lret
cmpsl
jl
call
ret
sbb
jno
pop
out
mov
or
jp
scas
cmp
push
pop
imul
pop
mov
packuswb
ds
mov
stos
mov
subl
xchg
lds
std
imul
xchg
jb
loopne
mov
jle
bound
inc
xchg
lcall
mov
inc
mov
out
cmp
ror
cmpsb
movsb
jnp
jmp
clc
xchg
mov
mov
inc
cmpsl
imul
sar
in
insl
sbb
pop
imul
xchg
fldenv
outsl
push
call
add
sub
sub
xor
xchg
inc
jo
cmp
sbb
addl
mov
sbb
in
sbb
pop
call
mov
dec
ja
sbb
loop
push
mov
xchg
scas
prefetcht2
call
sub
inc
push
xchg
or
mov
xchg
call
inc
clc
mov
rclb
sbbl
flds
adc
mov
mov
and
mov
push
mov
ja
sub
hlt
cmp
and
pop
xchg
in
add
mov
std
cmp
into
pop
lahf
popf
mov
dec
pop
push
mov
fldl
dec
push
pop
jge
imul
pop
insl
cmp
add
popa
scas
pop
outsl
stc
xor
pop
repz
stos
mov
xor
jo
xrelease
test
mov
xchg
jecxz
mov
push
das
fcmovbe
out
mov
adc
xor
jo
cli
cs
cli
mov
daa
jae
test
inc
push
mov
stc
xor
sti
repnz
mov
and
aas
lret
out
je
cmp
inc
xlat
sub
jae
xor
in
fimull
jp
popa
mov
addr16
push
lcall
popa
repnz
mov
dec
xchg
mov
cmc
xor
testb
sbb
pop
cmp
out
lock
xor
mov
jo
or
push
pop
cld
aas
jp
pushf
mov
fistl
adc
insl
js
outsb
dec
mov
pushf
jno
test
xchg
ja
cltd
out
dec
andb
scas
adc
loop
out
std
fsubl
mov
and
orl
push
sbb
adc
dec
shlb
rcrl
sahf
jmp
outsl
lret
sbb
int3
dec
pop
sarl
add
or
repnz
test
mov
aaa
dec
cwtl
jae
enter
mov
inc
in
sbb
adc
test
pop
in
addr16
subb
fldt
push
sbb
mov
fdecstp
fldl
arpl
and
loope
iret
aad
jae
xor
bound
or
mov
jbe
mov
cmp
or
movsl
push
daa
push
push
sub
xor
cs
add
stos
add
int3
cli
cmp
jg
sbb
mov
rcll
mov
cltd
mov
mov
jno
fildl
jecxz
fisttpl
mov
hlt
daa
xchg
dec
clc
in
imul
das
test
mov
mov
leave
and
repnz
jae
in
jmp
inc
mov
rorb
xchg
mov
mov
jno
rcl
sub
scas
mov
adc
or
fistl
bound
or
add
rcll
push
mov
xor
push
scas
push
repz
xor
mov
enter
sub
jne
aam
stc
js
andl
nop
jns
rclb
fsub
inc
dec
dec
outsb
pop
and
xchg
mov
push
es
sarl
ret
stos
outsb
fstps
mov
jns
leave
pop
test
mov
jmp
push
mov
adc
les
test
loop
out
add
in
inc
pop
mov
mov
push
sbbl
inc
or
cmp
lods
xor
inc
ds
mov
mov
sbb
into
data16
add
sub
ret
out
push
ror
jo
divl
faddl
mov
mov
push
stos
nop
add
call
jmp
pop
xchg
data16
fisttpll
mov
mov
das
mov
sub
fiaddl
mov
jnp
adc
and
in
xchg
mov
pop
mov
ret
mov
out
shl
nop
shlb
repz
mov
lods
jne
xor
xor
xchg
rolb
out
add
and
mov
add
scas
xchg
shll
xor
leave
pop
mov
scas
stos
mov
jge
push
mov
jne
jmp
cmp
cld
add
or
xchg
loope
jmp
ficoml
or
xlat
sti
pop
mov
rcl
cli
mov
shlb
jge
rcl
push
in
ss
frstor
aad
sub
fwait
daa
clc
scas
sbb
fbstp
push
das
mov
arpl
adc
nop
sub
cmpb
mov
pop
cmc
mov
jbe
sbb
mov
shl
xchg
ret
sub
testl
or
mov
mov
mov
adc
mov
fldt
insb
add
ja
mov
out
lods
dec
insb
ret
idivl
inc
push
adc
xchg
add
dec
movsl
cmpsb
dec
mov
repnz
lcall
test
push
repz
out
xor
inc
loope
gs
loope
xchg
adc
mov
sarb
dec
cwtl
mov
popa
cld
push
add
xchg
fwait
pop
jnp
pop
and
sub
push
sub
cwtl
int
add
loope
fwait
pusha
mov
xor
jbe
test
int3
out
dec
push
mov
lea
mov
xchg
je
fstps
loopne
push
dec
mov
inc
jp
movsb
ja
icebp
pop
inc
subl
mov
dec
and
movl
test
push
rclb
mov
push
mov
pop
leave
mov
xchg
imul
push
testb
test
inc
or
fcomp
push
mov
or
test
into
add
sub
inc
xor
xchg
cmpsl
les
into
int
test
push
mov
jns
iret
xchg
push
lods
jle
lcall
sub
cmp
or
aad
inc
movsl
pop
pusha
sbb
mov
std
adc
push
out
adc
pop
xor
outsl
insl
arpl
dec
cmp
mov
mov
push
and
cmpsb
sub
aaa
and
rcrl
out
pop
icebp
movsl
inc
sub
insb
add
out
stos
sub
jp
or
push
mov
mov
js
popf
cmp
mov
sub
pop
or
shrl
or
pop
fs
out
and
pop
adc
pop
loope
out
filds
sub
stc
sbb
sahf
dec
push
xchg
adc
xchg
hlt
lret
enter
pop
xchg
call
xchg
pop
mov
std
xchg
adc
fldz
xchg
call
jno,pn
cltd
icebp
jmp
mov
add
push
dec
mov
fsubl
fsubr
mov
cmp
inc
in
mov
dec
or
mov
in
push
movsb
push
in
out
sti
popf
icebp
test
arpl
lock
add
scas
fdivrs
xchg
inc
in
dec
sub
sbb
adc
cli
jne
aaa
dec
out
mov
fimull
mov
sbb
lea
pop
sbb
xlat
ljmp
push
fs
test
in
jbe
inc
jge
mov
sbb
xchg
ret
xchg
or
div
xchg
fs
xlat
xor
shlb
gs
movsb
jmp
and
inc
scas
add
sub
mov
cwtl
aad
adc
testl
mov
xchg
loopne
xchg
mov
pop
stos
subl
xlat
inc
pop
insb
add
cwtl
and
enter
adc
fistpl
pushw
inc
into
inc
aaa
adc
or
mov
fdivrl
xchg
jno
or
mov
fidivrl
fsubs
mov
mov
fiaddl
lods
pop
adc
push
stc
mov
mov
pop
push
dec
sub
pusha
cmp
and
xchg
into
xchg
insl
out
pop
adc
in
xorb
push
cli
xchg
add
xchg
adc
aam
mov
sahf
fcoml
addr16
scas
movsb
je
mov
fdivs
fisttpl
lret
push
dec
ss
pop
shl
nop
popa
jo
lods
xchg
outsb
icebp
insl
or
xchg
ljmp
cld
mov
jg
mov
sahf
mov
inc
inc
lret
sbb
pop
mov
dec
cltd
stc
ss
inc
and
lock
cmc
lods
int3
icebp
aam
leave
popf
js
xor
aam
out
nop
xchg
call
mov
inc
jnp
insb
lahf
aam
int3
push
imulb
stos
adc
mov
int3
iret
popa
mov
aad
int
call
out
and
fdivs
insl
ja
push
adc
mov
rorb
jmp
mov
adc
insb
xor
fld1
cli
aam
ret
xor
lahf
push
push
sub
loope
mov
xchg
and
mov
mov
imulb
andb
mov
and
or
out
mov
sbb
ret
jns
cmp
sarl
add
nop
or
shll
inc
pop
dec
mov
fnsave
xor
in
out
sti
aaa
pop
arpl
test
das
xchg
mov
xchg
roll
outsl
and
or
mov
out
inc
jp
lretw
fwait
mov
outsl
cmpsl
jne
mov
test
xchg
mov
mull
leave
lds
xor
cwtl
stos
mov
xchg
xchg
btrl
xor
insl
inc
and
fimull
mov
pop
inc
adc
mov
xor
cmp
arpl
mov
inc
pop
shl
neg
leave
ds
repz
inc
jae
inc
and
pop
loopne
jae
inc
cmpsl
ja
orl
mov
scas
push
jp
push
aad
jge
mov
imul
imul
ljmp
aaa
int
adc
jo
repnz
dec
andb
fcomi
jnp
cmp
mov
xor
inc
aaa
cmc
xchg
sub
inc
lds
fildl
lods
mov
and
ss
jb
pop
icebp
iret
insb
movsb
cmpsl
mov
mov
mov
mov
out
jo
mov
push
bound
test
cltd
cmpsb
call
jno
daa
add
push
inc
mov
jg
ja
sbb
mov
pop
or
inc
xor
or
mov
shlb
clc
xor
sbb
adc
mov
outsl
ficoms
hlt
sub
push
data16
mov
and
outsb
mov
pop
mov
imul
imul
add
bound
mov
jl
in
ja
les
cmpsb
adc
xor
cmpsl
mov
shr
push
aaa
lret
inc
into
jae
hlt
push
adc
int3
dec
outsb
int
cmp
ret
mov
loopne
and
or
jle
add
imul
or
das
mov
je
adc
movsl
dec
in
lock
ret
cs
movsl
xor
lea
cld
aas
stc
ds
loopne
add
das
data16
pushf
mov
bound
in
mov
xor
mov
push
push
sub
int3
rorl
cld
lcall
jbe
sub
adc
popa
aad
jae
xor
push
pop
add
mov
adc
pusha
jle
insl
jecxz
lods
fldcw
inc
push
push
ljmp
pushf
cwtl
test
mov
and
sbb
jb
cmpl
fcomp
enter
inc
push
lret
cld
mov
push
out
scas
or
mov
and
jge
push
out
shll
dec
push
cmpsl
push
inc
cli
stos
test
ja
clc
rcl
sbb
int
pop
pushf
test
fcmovu
cmc
jecxz
pop
and
stc
mov
loopne
adc
pushf
pop
dec
mov
jo
cmp
pusha
mov
xor
out
pop
cli
sub
aaa
enter
mov
in
cwtl
int
mov
cmp
mov
xor
push
pushf
lahf
lahf
out
sbb
push
add
cli
gs
jle
pop
xchg
fwait
iret
arpl
icebp
xchg
mov
mov
push
insb
jae
cwtl
imul
rcrb
dec
dec
adc
jns
or
or
dec
clc
movsl
mov
sub
fwait
and
inc
push
inc
xor
in
ret
stc
dec
test
leave
xchg
and
sahf
hlt
push
lds
mov
outsb
ja
push
ljmp
cmp
mov
fsubl
pop
sbb
pop
lea
add
xchg
xor
xchg
lahf
cwtl
jle
shrb
data16
push
imul
adc
aas
into
push
and
fdivr
jb
sub
les
data16
adc
inc
rorl
lea
js
aaa
out
xchg
mov
push
sbb
jg
push
jne
or
inc
cmpl
pop
ljmp
or
or
fwait
adc
rorb
push
sub
std
lea
rcrl
adc
and
sub
aas
repz
lds
add
in
sub
test
xor
add
outsl
mov
ss
xchg
xlat
inc
out
and
and
mov
outsb
inc
dec
into
shll
xchg
jle
outsl
mulb
adc
cmp
inc
int3
cli
push
xchg
test
outsb
insl
inc
pop
inc
push
sub
rcll
jae
sub
loop
push
cmp
xchg
inc
aad
in
jo
push
pop
mov
insb
sbb
stc
popf
pop
stc
pop
insl
icebp
add
add
cmp
hlt
mov
in
addl
cmp
jnp
test
mov
jo
mov
mov
lock
in
ljmp
bound
stos
inc
jmp
movsl
inc
fneni(8087
clc
adc
push
lock
ret
xchg
mov
pusha
inc
in
pushf
imul
xor
loopne
rcrb
xchg
push
adc
add
andl
movsb
mov
out
mov
xchg
and
sbb
pop
lcall
insb
movsl
mov
rclb
insl
jge
in
dec
jge
push
nop
xor
dec
mov
out
pushl
sbb
pop
mov
inc
xchg
jno
out
sub
dec
add
std
xor
sub
jo
loopne
add
sbb
push
lods
inc
rcll
pusha
lcall
orb
inc
in
into
mov
cmpsb
ljmp
mov
push
dec
out
xor
ja
jno
outsb
xchg
ds
and
jns
int3
test
mov
sub
sbb
ror
pop
jecxz
xor
add
daa
sbb
mov
pop
cmpsl
mov
and
push
jle
dec
cmp
or
push
out
dec
fildl
sbb
and
adc
mov
xchg
cs
mov
cmp
xchg
movsb
rcrb
push
push
cmp
in
mov
fdivl
pop
iret
add
in
and
xchg
fsubs
cmpsb
dec
sbb
mov
mov
fs
sbb
mov
add
sub
fcomi
xchg
shrb
jmp
jno
test
sti
hlt
push
push
xchg
imul
pop
adc
sub
jmp
sbb
call
aas
and
xor
xchg
jo
shll
mov
xor
lret
test
test
das
imul
lret
movsw
mov
sub
xor
push
shlb
pop
subb
clc
cld
mov
mov
cs
shlb
aas
mov
mov
insb
rcll
arpl
es
leave
push
jmp
xor
and
cmovb
ja
stos
je,pt
inc
sbb
lods
adc
jae
or
popa
test
mov
xor
mov
bound
adc
rcr
add
sbbl
fadd
jae
fimuls
nop
nop
xchg
mov
push
ficoml
movsl
orb
mov
in
xor
mov
cmp
shlb
jp
insb
out
popa
jno
lods
xor
push
faddl
mov
jne
movsl
je
int
repnz
or
mov
mov
mov
or
jp
sub
insl
sbb
cwtl
inc
pop
xchg
out
push
ficoms
fwait
dec
xchg
psadbw
xor
cld
xchg
cmp
fsts
leave
inc
push
orl
iret
add
fidivl
xchg
cltd
or
mov
and
sbb
mov
mov
mov
jns
mov
ror
dec
mov
dec
inc
jmp
pop
pop
jb
mov
mov
xchg
cmpsl
mov
in
dec
sbb
and
mov
lods
push
xor
adc
add
daa
sahf
mov
add
pushf
pop
xor
jge
ja
sti
push
test
mov
ljmp
decl
fwait
sbb
add
inc
push
pop
or
cwtl
adc
test
push
pusha
fldcw
pop
add
xorl
adc
lods
stc
testl
xchg
mov
cmp
cli
lret
notb
ljmp
jno
hlt
cld
scas
cmpsb
and
inc
jae
push
fcoms
push
ss
mov
out
cmc
mov
add
out
fbstp
sub
fiaddl
pop
sbb
or
lret
or
ret
cmp
lods
pop
das
imul
push
inc
cmp
repnz
or
rorl
jp
jne
in
push
fwait
dec
inc
push
shlb
rcrl
arpl
push
fs
dec
jne
adc
loopne
out
pop
xor
hlt
js
inc
xor
movl
pop
out
ret
mov
enter
xor
pop
cs
push
loopne
add
cmp
push
jno
sub
mov
push
aam
mov
jg
sbb
mulb
jae
lret
stos
jo
jle
xchg
cmpsl
and
enter
inc
test
jo
nop
loope
ss
sbb
sbb
call
lea
shlb
push
or
xchg
arpl
pushf
fistpll
add
mov
cmp
push
outsl
dec
cmp
xchg
out
cmp
cmp
out
addr16
jnp
loope
lea
aas
stos
idivb
inc
lock
rcrl
add
mov
sbb
negb
lods
jb
pusha
pop
gs
push
pop
cmc
xor
mov
movsb
shrl
sub
in
push
sarl
sbb
adc
arpl
mov
xor
xchg
shrl
pop
push
sub
test
rorl
add
xchg
mov
sub
jne
clc
xor
repnz
push
leave
xor
push
nop
mov
xlat
arpl
cmp
fadds
enter
jle
sete
in
mov
push
jl
mov
lods
inc
aam
jno
mov
loop
pop
sub
adc
insl
je
pop
fildll
je
mov
iret
inc
mov
cli
daa
inc
movsl
ljmp
push
into
popa
push
dec
out
mov
sbb
jmp
out
imul
imulb
xor
insb
cld
mov
push
pop
jb
in
sbb
lock
notl
in
stc
push
dec
xor
and
out
xor
xor
pop
add
loop
lret
cmc
jp
cmp
xchg
xchg
into
and
jg
add
scas
sub
cmp
add
xchg
dec
ljmp
lock
js
lods
xor
aas
xor
mov
int3
sbb
cmpsb
data16
lcall
jl
bswap
jg
jp
jb
mov
les
or
fidivs
jns
cmc
div
cmp
or
cltd
call
add
cli
dec
or
shll
xchg
pusha
std
sar
mov
js
cmp
jns
mov
nop
jle
out
sbb
sarb
fidivl
fmul
push
sub
int3
mov
jg
fs
test
loop
xchg
inc
out
inc
push
sub
push
add
and
int
push
jle
scas
mov
push
lcall
nop
imul
test
lcall
and
sbb
gs
or
cmc
pop
stos
inc
faddl
xchg
rcrl
sub
js
outsl
popa
ja
jl
daa
std
scas
lods
stc
xlat
subb
enter
cmp
inc
jae
xor
sbb
loopne
rolb
in
dec
xchg
icebp
and
int
push
mov
outsl
sub
aas
aam
mov
jb
cmpsb
or
xor
fstps
es
fdiv
xor
adc
mov
xor
xchg
dec
dec
test
repz
add
stos
pop
mov
add
cmp
push
pop
call
pop
xchg
push
shrb
mov
je
mov
cmc
jge
push
mov
inc
clc
inc
push
xor
mov
sub
pusha
sbb
icebp
push
inc
sbb
sub
add
call
aas
sbb
push
push
iret
xchg
je
popf
mov
cwtl
inc
stos
std
jp
add
sbb
mov
test
out
xchg
pop
fs
leave
mov
fdivl
sub
ljmp
rolb
movsb
sbb
inc
mov
arpl
mov
leavew
fwait
popa
or
mov
or
lock
xor
sbb
add
sbb
clc
xchg
roll
mov
repnz
ficoml
push
js
call
xor
repz
ljmp
hlt
add
inc
sub
xor
mov
shrb
dec
test
ljmp
sbb
sti
mov
lods
int3
lods
fucomip
outsb
negb
ret
movsl
jno
mov
xchg
mov
je
out
movsl
lcall
cmp
fidivs
jbe
decb
jp
scas
cmp
shrb
adc
push
test
out
xor
aam
lods
test
xlat
add
dec
stos
fsubl
icebp
fadds
sbb
jne
or
push
dec
xchg
les
cmp
mov
fisttpll
mov
lret
or
icebp
cs
in
push
xor
loope
add
xchg
sti
scas
test
push
cli
push
scas
push
fsts
and
in
jle
nop
mov
lds
mov
push
and
imul
mov
icebp
test
sbb
xor
dec
xor
or
call
push
mov
jb
cmpsb
jo
xchg
in
push
sbb
push
pop
dec
movsl
dec
push
and
dec
cmc
roll
leave
outsl
andl
mov
pop
push
mov
jne
out
mov
fldl
adc
aad
mov
aad
bound
inc
imul
cmp
jmp
ror
in
clc
xor
in
sbb
inc
je
jb
xlat
int
inc
push
adc
ffree
ss
mov
in
shl
inc
sub
mov
push
shrl
add
sub
addr16
aam
movl
xchg
ret
mov
int
jnp
mov
dec
cmp
pop
jp
dec
jge
push
loop
mov
movsl
ss
dec
fldcw
mov
mov
aad
orb
add
jno
fistpll
insb
ljmp
clc
push
mov
adc
aam
in
push
mov
cli
imul
pop
dec
mov
das
sub
xor
data16
inc
dec
or
push
jecxz
and
mov
and
lods
sub
lret
or
call
cmp
sti
adc
jnp
je
sbb
pop
in
and
and
in
shrb
fnstcw
push
xchg
push
orl
ret
jns
mov
insb
push
xlat
inc
pop
stc
xchg
cmp
test
and
mov
int3
mov
jno
push
lret
popa
xor
pop
mov
dec
decb
mov
push
lods
mov
mov
aam
adc
push
inc
cmp
push
test
mov
pop
in
ljmp
fmulp
in
xor
jae
jmp
ret
loope
mov
mov
filds
pop
call
das
xchg
fiadds
push
pusha
or
into
inc
notb
fimull
jp
notl
mov
mov
enter
mov
pop
testb
cltd
fstps
loope
das
sbb
adc
adc
sarl
loope
xchg
jle
sub
pop
mov
arpl
add
adc
std
into
pop
and
ret
testl
ret
sub
lods
dec
leave
int
or
imul
stos
movsb
cmp
iret
mov
cmp
lods
roll
std
sbb
mov
xor
or
xchg
jp
jg
das
and
mov
nop
lcall
lret
lret
lods
gs
jg
nop
push
imul
lret
mov
push
mov
push
sbb
jp
arpl
jp
mov
mov
mov
jno
pop
fucom
pop
push
xlat
add
outsl
stc
cltd
mov
add
je
push
and
mov
rorb
es
ret
aam
jb
sub
daa
insl
movl
mov
ret
lahf
dec
frstor
inc
sbb
lods
sbb
mov
shrl
in
push
and
and
mov
jb
add
mov
mov
xchg
xchg
jo
sbb
cmpsb
mov
inc
mov
pop
lods
out
xor
sti
xor
pop
add
je
xchg
das
sub
xchg
cltd
sbb
jne
imul
mov
cmp
cmp
and
push
das
mov
add
mov
loope
cli
add
cwtl
dec
add
push
dec
xor
cmp
mov
cmp
es
cltd
and
testl
fbstp
lds
cmpl
jb
xor
dec
xchg
inc
les
aaa
loope
push
dec
pop
inc
mov
out
pop
rclb
iret
lea
daa
shl
rolb
out
in
pop
pushf
in
ljmp
daa
cmc
xor
loopne
leave
xchg
loope
xchg
roll
into
mov
out
adc
js
add
cmp
cmpsb
and
fstps
mov
das
fcmovne
pop
pop
into
dec
mov
jg
mov
push
sbb
mov
mov
mov
sub
repz
mov
je
sbb
pop
push
jo
insb
aaa
sbb
popa
mov
mov
dec
cmp
xor
adc
jecxz
stos
lods
sbb
sbb
ror
int
adc
fsubrl
pop
aas
testb
inc
fldcw
sub
out
push
jnp
out
iret
fistl
daa
inc
pop
decl
sbb
pop
and
scas
cltd
daa
rcrl
ds
mov
sbb
pop
mov
push
mov
push
xlat
fildll
and
shl
jnp
es
dec
dec
mov
cmpsb
fnstsw
imull
bound
imul
imul
or
daa
sub
enter
lahf
mov
sbb
rorl
out
xchg
and
decb
out
push
shll
cmp
dec
pop
lock
cmc
test
or
pop
jnp
lret
inc
test
dec
in
loop
add
add
out
inc
loopne
mov
loopne
hlt
or
subb
arpl
xorb
jbe
dec
xor
hlt
or
xchg
jl
insb
adc
fs
in
xor
dec
fwait
push
andl
mov
sub
inc
cmc
pop
addr16
pop
popa
sub
mov
in
sub
out
jg
cmp
jno
std
add
js
insl
xchg
into
jnp
dec
push
fwait
cmp
xor
push
bound
pop
fmull
in
fs
adc
rorl
cli
cmpsb
and
mov
push
or
movsb
lcall
sbb
pop
xor
cli
dec
cmc
jns
mov
insl
arpl
in
shrb
stos
xor
pop
xor
mov
scas
rorb
lahf
mov
dec
mov
mov
sbbb
jno
stc
icebp
mov
int
xchg
std
dec
xor
pop
out
xchg
not
inc
push
lret
cmp
add
out
jl
outsl
ds
addb
clc
xor
fcoms
pop
jns
cmp
mov
push
fldt
jo
cmp
enter
add
cmp
iret
pop
jle
in
jns
push
inc
lods
xlat
mov
in
push
stc
test
push
rcr
xchg
dec
test
stos
es
mov
daa
jl
jmp
orb
fiadds
push
inc
pop
sub
add
in
cmpsb
test
mov
out
xacquire
sahf
sub
push
lds
jne
insl
cmpsl
andb
or
fadds
xor
pop
aam
and
aad
xchg
xchg
data16
push
jnp
fidivs
leave
imul
jg
add
inc
xor
or
sub
jge
ja
push
mov
add
mov
cltd
jb
mov
jae
xchg
aas
sarb
aad
jns
mov
out
ret
call
inc
jno
stos
pop
call
mov
imul
popa
xor
data16
jl
mov
pop
pop
xor
imul
or
int
dec
rolb
push
dec
cltd
inc
pushf
jle
mov
jo
add
jg
jge
push
je
pop
adc
jno
and
sarb
mov
pop
pusha
pop
fldt
cmp
ret
enter
scas
popa
pop
jb
dec
ss
repz
mov
fistl
insb
mov
ret
and
movsb
loop
test
jmp
xor
and
cmp
cmp
sub
jp
cmp
push
sub
push
cmp
and
inc
or
adc
push
loop
sbb
inc
push
lods
je
js
out
frstor
dec
das
test
inc
ljmp
jae
jle
sub
mov
jle
sbb
push
or
int3
push
dec
or
imul
mov
mov
xlat
xchg
je
xchg
cltd
sbb
aam
daa
pop
stos
in
jecxz
push
shl
dec
jne
ljmp
sub
sbb
jp
ss
int3
fidivrl
mov
mov
fdivs
sub
movsl
xor
out
and
mov
push
pusha
cmp
adc
mov
mov
sbb
mov
mov
xchg
mov
jae
call
icebp
mov
ljmp
cmpsl
mov
stc
and
adc
inc
pop
outsl
mov
push
shlb
mov
xor
std
push
imul
add
and
dec
mov
sub
clc
push
aad
imul
jne
or
dec
sbb
pop
std
ret
ss
fstps
lds
sub
and
das
int3
call
clc
std
stc
mov
sarl
pop
stos
xchg
lahf
jl
hlt
mov
push
xor
mov
adc
outsl
out
add
test
lret
add
jecxz
dec
loop
out
stos
aad
leave
xor
or
lock
in
sub
fdivrl
mov
in
push
ret
xor
jg
xor
xor
ret
mov
test
es
push
cmp
inc
sub
sub
pusha
sub
mov
punpckhbw
push
fs
shr
into
fnstenv
int3
inc
or
loope
icebp
mov
pop
adc
xchg
lahf
pop
add
movsl
lods
jg
lods
mov
dec
frstor
into
jg
or
inc
flds
mov
mov
sbb
mov
jecxz
ret
adc
movsb
pop
out
pop
lahf
sbb
insl
xor
mov
add
clc
ljmp
test
xor
mov
clc
pop
sub
pusha
adc
pop
out
jne
push
push
pop
lret
lock
shll
xchg
cltd
and
push
push
rcrb
lods
rcl
xor
lahf
ss
nop
loopne
add
pop
or
mov
psllq
fs
rcll
fstpl
sbb
inc
mov
xchg
jbe
cmp
pop
sbb
andl
dec
scas
dec
jge
adc
jl
dec
dec
icebp
lret
xchg
out
mov
jge
cmp
jb
js
cmp
xorl
pop
sbb
fldl
lock
cmp
inc
fistl
sbb
mov
mov
repnz
inc
dec
movl
sub
jbe
mov
push
insl
stc
mov
movsb
sti
jne
or
xchg
mov
adc
jae
test
jno
cli
jno
pushf
jb
and
xor
jmp
out
push
push
sbb
sbb
test
push
xor
clc
mov
std
pop
fiaddl
ss
lock
add
and
cmp
jae
jns
test
push
and
imul
ds
xor
ds
adc
xchg
fstpt
out
mov
repnz
lahf
rcrb
cmc
mov
rep
subb
cmpsb
loope
popa
jnp
sub
jmp
inc
lcall
or
cli
inc
jp
es
enter
add
push
jbe
add
outsl
pop
rolb
pushf
cmp
mov
lods
jnp
dec
test
loop
jbe
add
push
inc
lcall
aad
rcll
jns
jnp
sub
sub
jle
add
in
cmp
dec
sahf
imul
pop
push
loop
add
cmc
popf
mov
addr16
rclb
jl
jge
movsl
add
inc
lock
inc
sub
cmp
popa
dec
sbb
fs
fsubrl
xchg
push
dec
mov
scas
and
outsb
and
shrb
lods
mov
dec
movsb
aaa
mov
mov
hlt
jle
mov
cmp
xor
int
jns
int
jge
push
sub
orl
test
je
in
pop
scas
sub
add
shll
jg
movsb
pop
lods
loop
jbe
inc
lret
inc
adc
and
clc
inc
popa
rorl
into
ljmp
aaa
mov
incl
jbe
jmp
cmc
data16
loop
lods
sub
int
xchg
add
int3
jb
pop
sbb
loopne
cwtl
pusha
push
int3
jbe
xchg
inc
mov
ja
push
mov
jbe
sub
inc
pop
je
xchg
enter
enter
insb
cmp
test
mov
mov
sub
pop
dec
rclb
int3
je
insb
in
xor
mov
out
sbb
sbb
mov
sbb
imul
mov
inc
ss
int3
call
sbb
fistpll
ds
cmp
lea
cmc
and
mov
jbe
mov
aas
xorl
dec
dec
scas
cmp
mov
jb
push
out
adc
sbb
or
fcmovb
push
fidivl
inc
rolb
mov
xchg
aad
and
cmc
popa
inc
xchg
iret
or
mov
pop
out
mov
cmp
inc
cltd
ret
frstor
shrl
cli
je
sti
push
jl
mov
cmp
xor
in
divb
out
mov
enter
cmc
sti
arpl
andl
gs
sub
xor
push
mov
mov
ret
sub
adc
xor
sbb
adc
fadd
lock
jmp
roll
and
shlb
sbb
js
and
xchg
addr16
sahf
or
adc
cwtl
xchg
push
jp
mov
imulb
div
imul
fnsave
imul
outsb
mov
hlt
lahf
ret
jle
mov
push
push
cmpsl
test
negl
test
xor
aam
aaa
test
adc
push
push
pop
aas
in
int3
lcall
test
scas
out
outsl
adc
rolb
inc
adc
out
xchg
sbb
jbe
cmp
push
push
inc
xchg
push
pop
or
jne
int3
jnp
adc
adc
orl
cmp
cmp
test
cli
aaa
aas
mov
shlb
cltd
xor
xor
lcall
repnz
or
sbb
mov
add
adc
shlb
and
xor
icebp
jle
cmp
adc
lods
mov
jle
int3
inc
mov
lahf
mov
xchg
mov
mov
pop
or
xchg
xchg
inc
add
and
cmp
popf
and
mov
sahf
mov
add
imul
lods
fnstsw
sub
sbb
pusha
jecxz
sbb
jne
mov
xchg
hlt
dec
jae
mov
leave
push
jg
mov
or
mov
mov
cmp
fwait
sbb
popf
aas
ret
fwait
jle
sbb
cmp
adc
in
les
pushf
mov
xor
xor
xor
dec
sbb
insl
imul
pop
xchg
push
xlat
gs
out
pop
addr16
lahf
and
adc
pusha
inc
addb
inc
ja
mov
mov
roll
fwait
jmp
adc
mov
dec
dec
in
fs
lods
shll
aaa
mov
mov
sbb
pop
mov
inc
xchg
pop
rclb
cld
jge
inc
pushl
test
into
rclb
fdivrs
in
out
push
jne
adc
jmp
sahf
fidivl
dec
mov
mov
js
adc
arpl
pusha
inc
out
mov
js
ja
lret
sub
fldt
xchg
stc
xor
mov
pop
and
test
js
push
testl
and
aam
sbb
push
xor
sti
and
pop
inc
mov
fdivr
mov
fstl
cmpsb
cld
add
xchg
ret
and
sub
mov
leave
cmp
push
insl
xor
rorb
shl
pop
outsb
mov
mov
ret
pop
stc
pop
scas
pop
adc
push
loope
cltd
push
mov
dec
popa
decb
xchg
sub
sub
je
mov
pop
out
push
insb
mov
lcall
add
xchg
adc
fwait
out
jns
aam
loope
mov
fidivrl
pop
in
push
push
or
repnz
mov
fists
and
inc
push
mov
cmpsb
lock
aas
mov
mov
arpl
loope
addr16
dec
ljmp
cmp
pop
mov
hlt
fsub
lods
arpl
sbb
loope
and
and
sub
movb
sub
insl
mov
sub
data16
push
cltd
out
and
scas
mov
in
mov
pushf
inc
ja
jne
cmp
shlb
cmp
movsb
repnz
scas
mov
mov
adc
sahf
or
sahf
cmp
and
fwait
sbb
test
rcrl
out
xchg
lret
add
mov
inc
mov
in
push
test
int
mov
or
and
aas
imul
mov
mov
pushf
addl
push
testb
push
lcall
push
push
jle
cmp
movsb
cmpsl
insb
lock
adc
lahf
es
push
int
sbb
enter
test
test
sar
and
mov
pop
aad
out
or
mov
inc
xchg
adc
out
test
mov
mov
and
sbb
or
mov
xchg
adc
jecxz
nop
je
sbb
sbbb
movsl
in
push
leave
enter
push
outsl
or
jl
pop
out
push
adc
xchg
jnp
orb
icebp
imul
pop
das
negl
fcoms
icebp
imul
or
cs
xlat
sarl
jl
mov
cmpsb
setg
popl
xor
loop
push
xchg
rorl
mov
std
inc
push
ds
outsb
adc
and
shrl
lcall
pushf
mov
in
adcb
cmp
out
xor
int3
jecxz
es
shll
lret
mov
dec
xchg
aad
or
gs
push
shl
add
inc
ja
and
pop
dec
mov
sub
add
test
pop
outsl
rclb
push
imul
or
inc
loope
enter
addr16
jnp
adc
jne
shlb
add
leave
aas
out
or
mov
add
xchg
and
imull
into
in
mov
movsl
inc
dec
js
xchg
lock
ret
cmp
ja
outsl
out
pop
cmp
push
push
rcrb
fmull
push
cmc
inc
jne
stc
sub
or
and
mov
jecxz
mov
sbbl
jp
pop
jns
pop
mov
popf
je
xlat
inc
nop
fwait
loop
inc
dec
add
aam
inc
fimuls
add
sbb
fs
pushw
mov
sbb
idivl
mov
rolb
sbb
sub
pop
mov
inc
inc
pushf
add
push
mov
pusha
lea
pop
fdivl
js
mov
stc
add
jno
lret
fnsave
xor
lea
inc
adc
out
mov
outsl
jge
in
cs
mov
cmp
sbb
sub
loop
mov
roll
or
pop
xlat
ficompl
xor
cwtl
enter
rcrb
fiadds
sbb
repnz
pop
jmp
jne
sbb
mov
mov
adc
stos
rep
add
aas
pop
xchg
push
leave
ret
xor
movsb
dec
xlat
push
stos
cmp
inc
addr16
js
imul
into
in
insb
mov
inc
ja
cld
jbe
push
mov
insb
pop
inc
bound
add
xchg
out
push
jg
push
xlat
jl
ret
cli
and
or
in
and
out
xchg
pop
cmp
cmp
mov
add
jecxz
push
jmp
xchg
xor
lds
test
push
mov
outsl
jmp
mov
jb
mov
push
cmp
negl
push
imul
and
popa
clc
leave
jne
cwtl
cmpsb
cs
cmpsb
movsb
jl
mov
outsb
dec
sbb
dec
es
sti
xchg
iret
ds
pop
outsl
adc
test
stos
pop
jo
xor
push
and
xor
cmpsl
stc
xor
mov
sub
std
add
xchg
xchg
jb
testl
int
clc
jg
nop
gs
repz
ljmp
cmp
hlt
dec
lea
dec
in
outsl
popa
mov
clc
in
roll
xchg
ds
in
mov
enter
lock
mov
imul
or
rep
sbb
int3
inc
inc
xchg
les
lea
cmp
sbb
scas
push
inc
cli
cmpb
sub
scas
andl
mov
jmp
aad
mov
fadds
xchg
jle
fisttpl
int3
xlat
and
mov
cltd
cmp
testb
mov
cld
enter
or
icebp
push
dec
imul
sub
stos
cmp
stos
mov
push
out
out
or
pop
pop
mov
jp
inc
inc
push
add
dec
jo
ret
and
fdiv
xlat
jnp
ret
js
js
mov
test
inc
test
push
pushf
mov
insl
mov
std
jp
jecxz
push
adc
adc
mov
idivb
subl
mov
adc
js
in
jnp
in
popf
cmp
cltd
lock
xor
adc
neg
sbb
divb
xchg
jmp
mov
pop
loopne
jl
push
fstps
mov
cld
add
cli
stc
int
sar
insb
sbb
daa
or
dec
mov
sub
dec
push
add
and
inc
enter
jne
jge
mov
enter
sbb
adc
das
push
repnz
jmp
or
fwait
inc
fs
mov
pop
xor
add
cs
sub
in
pop
inc
mov
in
sbb
inc
pop
nop
inc
push
addr16
popa
lds
dec
loop
mov
xchg
jnp
cmp
lods
lds
and
rcrb
push
push
fwait
cs
mov
dec
clc
sub
or
mov
dec
push
cmp
mov
cwtl
mov
cmp
in
fcoml
adc
inc
jb
add
sub
mov
and
mov
pop
cmp
lret
mov
add
jle
push
xchg
and
test
adc
and
cltd
pop
jge
mov
sub
pushl
pop
lock
stc
pushf
enter
mov
sbb
test
sbb
int
push
or
in
cwtl
mov
lret
test
push
cmp
test
mov
hlt
movsl
data16
sbb
out
std
fnstcw
rorb
adc
mov
xchg
lock
dec
call
mov
lods
cmp
cmp
popf
add
or
out
lea
ja
test
jnp
xorb
fsubrl
lock
xchg
xchg
mov
call
jle
mov
add
lods
pop
out
bound
xor
xchg
sbb
xchg
push
jbe
fldl
mov
out
add
call
mov
loope
outsb
in
loope
ljmp
xchg
inc
and
sub
jb
insb
mov
push
ss
loop
add
sbb
jns
sahf
adc
mov
push
rclb
mov
in
xchg
mov
aad
imul
push
int
pop
fists
adc
cld
leave
mov
fsubs
push
repz
aam
leave
fs
xor
mov
jb
and
mov
jge
arpl
push
icebp
inc
sahf
es
lret
out
aad
inc
sub
cmpsb
add
pop
jl
popa
pushf
movsl
add
movsb
inc
out
shll
lahf
push
jle
sub
dec
or
icebp
inc
pop
test
mov
xchg
sub
fistps
sub
mov
cltd
ret
mov
flds
lcall
cmpsb
lock
push
stos
lret
flds
sarl
fcmovnu
pop
test
mov
js
stos
or
pop
int
sub
fisubl
mov
mov
incb
popa
push
mov
add
getsec
or
out
in
aad
sbb
aas
inc
repz
xor
insb
mov
xchg
repz
inc
imul
in
inc
xor
ss
jle
arpl
repnz
push
adc
sbb
lods
lods
pop
es
popf
mov
aaa
mov
cmp
aas
sub
xchg
sub
sub
popf
cli
mov
imul
sbb
clc
fsts
dec
ret
add
xchg
dec
lahf
bound
xor
or
xchg
pop
pop
les
xchg
xchg
lcall
jb
mov
clc
xlat
mov
inc
mov
je
lret
push
jnp
dec
testl
andl
dec
xchg
repnz
push
xor
scas
dec
cld
jno
xor
aas
adc
cmpb
rclb
inc
xor
repz
sub
xchg
sbb
popa
cmpsl
push
out
xor
push
mov
stos
cs
shll
adc
add
imul
fadds
xchg
test
xchg
xor
sbb
int
loopw
int3
add
sub
sbb
test
sub
mov
scas
shll
mov
jp
rcrl
aaa
xlat
movsl
jns
movb
std
repnz
stos
xor
in
adc
icebp
aas
and
xor
decb
inc
test
mov
dec
add
test
flds
hlt
aam
dec
push
mov
lock
rolb
push
out
call
xchg
lds
jle
fildl
ret
lret
popf
jge
cmpsb
icebp
xchg
repz
aad
int
xchg
outsl
in
or
and
movsl
sar
fnstcw
fsubl
mov
adcl
test
ret
jp
cmp
pusha
push
lahf
and
xchg
mov
inc
les
sbb
std
ja
adc
movsl
cmp
daa
mov
push
out
jne
ds
cwtl
cmpsb
arpl
push
add
jno
hlt
cmp
and
cwtl
shll
lahf
xchg
pusha
mov
mov
xchg
push
push
pop
int3
call
ljmp
lret
es
xchg
aad
jmp
out
int3
test
int
cmp
or
repz
stos
ja
jp
and
rorb
xchg
mov
dec
push
mov
dec
pop
rorb
push
push
sub
cmp
sub
fwait
sahf
pop
shll
arpl
repnz
stos
fsubrs
jge
push
pushf
and
call
mov
les
jg
mov
sub
jl
adc
sub
sub
out
mov
or
ds
mov
push
sub
sbb
xor
and
inc
popa
out
enter
rcl
stos
shl
sbb
pop
fnstsw
pusha
push
xchg
push
sbb
and
cli
fdivrl
jbe
lods
jnp
xor
cmc
mov
sub
and
mov
dec
data16
xchg
mov
call
in
imul
scas
fdivrl
push
mov
bound
mov
sti
outsb
jns
fiadds
xchg
notl
js
jnp
sahf
loopne
adc
out
shrb
mov
out
aam
dec
lea
inc
mov
repz
mov
out
adc
xchg
shlb
pop
mov
dec
and
inc
rolb
add
imull
jo
adc
mov
and
flds
js
test
lods
xor
xchg
in
stc
lea
out
cli
xchg
sbb
dec
xchg
ret
pop
out
into
push
js
pop
add
gs
lret
xchg
sbb
sti
mov
sahf
pop
loope
dec
adc
pop
xchg
mov
pop
mov
xchg
loopne
fidivs
arpl
sbb
dec
jno
or
out
mov
xor
xchg
neg
jae
pop
mov
es
xchg
mov
adc
mov
xchg
mov
inc
mov
xchg
sahf
dec
loope
inc
jne
xlat
and
fwait
push
xchg
sbb
jmp
jge
sbb
or
dec
jl
sbb
jo
pop
cmp
fisubrs
add
inc
data16
cmp
int
pushf
sub
loopne
nop
icebp
and
fidivs
sbb
pop
mov
fs
int
inc
loope
pusha
bound
xor
push
movsb
sub
jecxz
loop
mov
pop
nop
gs
sub
stos
das
enter
aas
xlat
int
pop
inc
jmp
xor
jle
cwtl
xchg
sub
in
sub
dec
xor
mov
stos
jo
lahf
sbb
dec
outsl
push
arpl
dec
sbb
mov
or
dec
jb
call
jge
mov
loopne
mov
adcl
push
and
inc
sarb
push
xor
push
sub
pop
sahf
push
push
mov
outsb
cltd
push
roll
mov
imul
jg
or
outsl
dec
inc
xor
fs
mov
mov
and
daa
mov
sub
mov
loope
arpl
adc
lcall
jle
mov
sub
mov
cmovb
pop
dec
fmuls
lods
sbb
pop
ror
mov
cmp
es
adc
mov
in
insl
lea
sbb
push
in
sub
lret
xor
jnp
xchg
cli
mov
hlt
or
mov
fnstcw
mov
push
pop
mov
and
jo
lcall
loope
stos
fs
in
fcmovnu
xor
adc
mov
inc
mov
sbb
pushf
popa
ret
or
xor
jns
mov
fcomps
push
or
and
push
testb
test
ror
dec
clc
mov
dec
cmp
ret
add
inc
push
bound
pusha
cmp
sub
fcoms
sub
adc
mov
push
popf
in
imul
aam
faddp
xor
mov
in
push
push
pop
cli
or
addb
push
mov
out
sub
ss
sbb
icebp
xchg
test
inc
jmp
pop
inc
jns
loop
aaa
lret
out
add
and
cmp
aam
in
push
pop
cli
or
add
add
std
adc
xor
adc
pop
pmuludq
cmp
fucompp
xchg
pushf
adc
insb
in
add
push
out
mov
es
leave
fdivr
dec
lret
pop
mov
or
in
cs
dec
jl
out
mov
jbe
popa
clc
sti
repnz
dec
lods
jbe
inc
mov
into
cltd
xchg
cmpsl
out
xor
pop
std
mov
add
push
adc
cld
xor
mov
mov
push
xchg
pop
push
je
jg
add
dec
mov
and
sbb
movsb
jmp
xor
lret
popa
lea
push
adc
cwtl
enter
das
inc
std
imul
nop
dec
adc
lds
mov
loop
test
add
jl
inc
push
lods
mov
xlat
clc
push
out
or
push
or
inc
jae
mov
jmp
fnstsw
test
push
ds
add
jl
out
dec
aas
xchg
test
cwtl
fisubrs
das
jae
xor
adc
into
pop
fucomi
mov
inc
xor
mov
mov
mov
fmuls
fisubrl
mov
and
push
jbe
and
faddl
cmpsb
aas
ret
sti
shl
jg
add
xchg
pop
add
cmp
pop
push
xchg
movsl
sti
xor
cld
cld
mov
test
shl
ficomps
jmp
add
dec
call
mov
les
xor
jns
and
ja
mov
mov
out
sub
mov
dec
xchg
pusha
xlat
psubsw
out
pop
inc
rcrl
dec
clc
es
jns
ret
sbb
pop
push
mov
ret
pop
ret
inc
sbb
mov
add
movsb
sbb
sub
shll
repz
sahf
jno
jno
iret
pop
mov
mov
xor
push
call
and
mov
mov
jno
add
sahf
hlt
fwait
mov
stc
lahf
jo
mov
idivb
jecxz
leave
xchg
in
int3
jp
xorl
and
jns
decl
inc
fists
je
shll
mov
push
and
das
xor
scas
xlat
or
or
mov
cmp
add
mov
aaa
and
aas
lcall
sbb
xchg
aad
imul
stc
movsl
inc
movsl
lea
cmp
xchg
je
shr
xchg
push
mov
push
add
add
ljmp
scas
jns
imul
call
test
cmpsb
dec
push
sti
xor
dec
mov
or
or
dec
stos
cmp
mov
sub
inc
lahf
push
mov
outsl
repnz
mov
sahf
mov
jge
lods
mov
mov
mov
inc
mov
push
into
dec
mov
xchg
fdivl
fildll
leave
pop
dec
sub
das
xor
pop
pop
mov
stos
mov
sbbl
insl
aam
xchg
adc
mov
cmc
pop
adc
mov
or
add
pop
jns
or
addl
or
inc
sub
fs
stos
dec
sbb
ret
inc
dec
and
insl
dec
mov
mov
mov
mov
adc
loope
cwtl
inc
fdivrl
sbb
mov
sub
jns
out
mov
scas
mov
adc
or
sbb
fisttpl
popf
cmp
mov
ja
das
scas
xlat
sbb
or
cld
sub
mov
xchg
lds
cmp
pop
fcom
inc
sub
ja
ljmp
loopne
push
jp
jbe
stos
push
or
stos
xchg
aaa
iret
cmp
and
jbe
cmp
fisubrs
mov
test
xchg
arpl
sub
in
push
int
or
sub
sub
mov
xor
pop
pop
shrb
xchg
mov
stos
repz
pop
xchg
add
shll
rolb
std
fcompl
and
dec
dec
mov
out
xor
pop
sub
rorl
adc
std
sbb
mov
pop
jmp
ja
dec
xchg
int
dec
cmp
jne
rcrl
inc
mov
lea
imul
pop
mov
inc
jg
fwait
jae
pop
adc
loope
and
jo
lcall
lret
inc
popa
in
pop
or
in
adc
in
jne
push
and
mov
adc
in
ss
cltd
sbb
sbb
mov
lret
add
mov
and
imul
shr
sbb
mov
push
and
or
add
mov
movsb
cmpsb
adc
jl
and
sub
xchg
jno
das
or
or
insb
int3
or
sbb
and
adc
inc
aad
sbb
dec
leave
jbe
imul
dec
test
loope
jae
xchg
push
dec
rcll
mov
cmp
xor
sub
xchg
icebp
add
iret
sahf
repnz
stos
lret
pusha
in
aas
push
push
call
jge
clc
imul
leave
mov
into
pop
movsb
pop
icebp
sarl
pop
xchg
dec
fucomip
mov
out
jbe
xor
or
insl
pop
aaa
loope
daa
xchg
loope
ss
add
mov
shr
adc
mov
inc
push
imul
jns
out
lods
mov
ret
fcomps
add
int3
sar
pop
jg
loope
sbb
ljmp
fimuls
test
sub
aam
fwait
and
jne
test
rorb
push
mov
xchg
and
push
lods
out
fbstp
sbb
pushf
test
es
sti
xor
jg
mov
ret
sub
sbb
in
mov
push
inc
lods
dec
xchg
add
pop
add
pop
sbb
testl
push
int3
mov
mov
xor
cmp
test
push
fiaddl
jp
sbb
xor
test
xchg
sbb
adc
dec
fdivp
mov
push
test
imul
inc
std
insl
cmp
jne
lds
add
fdivs
fbstp
jmp
stc
xchg
cmpsb
pop
sub
mov
aaa
ljmp
xchg
in
sbb
mov
gs
cmp
or
mov
sub
rorl
jb
adc
adc
mov
fcmovne
out
inc
adc
jne
push
loope
pop
inc
inc
pop
dec
pushf
loopne
mov
cli
fldenv
jle
fs
push
mov
mov
xor
clc
jb
sbb
andl
xor
jne
cwtl
movsl
dec
std
cmp
push
or
nop
sbb
pop
fcoml
jecxz
imul
sub
leave
mov
xchg
arpl
jmp
outsb
add
mov
hlt
jb
mov
loop
pop
les
push
adc
scas
xchg
pop
push
mov
xchg
inc
jbe
loopne
movsl
pop
jecxz
lret
push
stc
and
mov
xchg
sub
ret
stos
aaa
add
adc
cs
popa
pop
sub
cltd
repnz
mov
popa
cmp
add
jg
lret
xchg
call
jmp
xor
dec
mov
daa
jecxz
into
cmp
lods
mov
loop
jmp
popa
js
sub
inc
js
or
gs
jmp
lret
gs
addb
adc
orl
icebp
pop
xchg
testl
sub
sbb
ret
add
mov
cmp
sahf
mov
andl
push
movsb
sub
dec
mov
in
aaa
xor
fs
int
ja
data16
gs
out
rorl
sahf
sub
movl
iret
xchg
out
cltd
or
adc
pop
jp
xchg
adc
inc
sub
mov
stos
and
mov
ljmp
jg
mov
sahf
mov
mov
std
jo
or
test
pop
cmpsl
inc
cs
outsl
data16
stos
cltd
aam
outsl
xor
mov
jbe
xor
lcall
jnp
pop
cltd
xor
push
stc
lcall
sub
in
cwtl
out
js
mov
xor
inc
arpl
sbb
movsb
shll
mov
inc
leave
out
lds
js
xlat
lods
add
fnsetpm(287
push
mov
lea
and
out
sbb
dec
lahf
test
pop
popf
mov
and
addr16
sbb
xor
dec
pop
into
popf
das
sub
and
push
pop
push
mov
rcr
cld
popa
lcall
dec
enter
jno
movsl
mov
mov
fidivs
mov
or
fdivrl
outsl
dec
cmp
mov
push
iret
xchg
inc
sbb
fwait
xor
push
daa
cmpsl
or
inc
mov
cmp
lock
out
adc
cs
addl
jecxz
pop
fwait
xchg
sbb
cmp
and
std
pop
pop
repz
aaa
and
int3
sub
or
dec
pop
pop
sbb
dec
adc
jecxz
cmp
fs
mov
out
sbb
jno
cmp
shll
pop
inc
scas
mov
popf
xor
adc
ficompl
loope
and
mov
cmpsl
push
rcr
sub
jg
mov
dec
addr16
dec
adc
inc
mov
test
jl
pop
cmp
incl
imul
jmp
gs
fidivs
or
ds
jmp
lods
sub
dec
dec
sbb
test
in
sbb
cmpl
rcr
test
rclb
popa
popf
lcall
jp
imul
cmc
fstps
movsl
lret
xchg
lcall
mov
xor
xchg
adc
repnz
jmp
xchg
dec
mov
sbb
ret
loopne
add
push
js
dec
notb
int
fdivr
pop
icebp
sahf
cwtl
lea
icebp
in
dec
aaa
loope
adc
idivl
inc
xor
push
xchg
push
aas
adc
adc
jnp
negb
adc
and
nop
lcall
and
loopne
outsb
sti
out
sbb
sbbl
lret
rorl
push
dec
imul
cmp
push
cmp
add
rcll
ljmp
mov
insb
ds
pop
push
sbb
mov
adc
mov
in
out
ds
sbb
xor
adc
add
xchg
mov
ss
dec
add
push
xchg
sbb
pop
lds
test
mov
pop
mov
shl
mov
inc
daa
mov
out
xchg
outsb
jg
pop
shlb
xchg
jbe
jb
or
and
sbb
call
rol
out
filds
inc
les
xchg
addr16
xor
mov
movsl
cmp
push
and
fcmovnu
push
lcall
cli
imulb
sbb
push
jns
add
lds
mov
push
repnz
or
stc
pop
push
dec
mov
xchg
pop
jmp
addr16
sarl
test
add
push
sub
xchg
mov
lahf
popa
cmp
add
sbbl
rolb
test
or
or
push
mov
ja
shll
addr16
mov
das
dec
cmp
jp
fildll
in
xor
or
es
add
pop
inc
jne
xor
cmp
imul
and
pop
stc
pop
inc
aaa
mov
mov
sbb
lock
ja
clc
shl
ss
in
stos
into
xorb
mov
aad
notb
xor
or
jmp
loope
ss
cmp
aas
cmp
mov
and
or
fucomi
leave
pop
sti
push
pop
nop
jge
je
push
inc
insb
cmpsl
and
push
mov
clc
xor
addl
rcr
lea
je
mov
fldenv
xor
jge
or
inc
stc
fistl
hlt
push
aam
xchg
push
daa
lds
sub
sub
ja
mov
sub
mov
mov
je
inc
cmp
add
mov
add
shrb
mov
jl
xor
fstl
lret
adcl
cmc
push
cmp
dec
scas
cmp
mov
mov
adc
pop
sub
mov
push
sbb
mov
dec
jb
xor
xchg
and
xchg
and
ja
cmp
lcall
into
inc
xchg
or
cmp
xor
scas
ret
shll
and
pop
fidivrl
jno
outsl
jo
pushf
insl
and
inc
jns
jg
sbb
mov
pushf
jle
fadds
repnz
jge
rcrb
fsts
bound
or
xchg
push
xlat
jns
aaa
pop
imul
vhaddps
in
mov
lods
arpl
or
xchg
mov
test
add
sub
nop
xchg
cmpsl
daa
xchg
jnp
pusha
aas
push
xor
push
flds
lds
in
movsb
sbb
out
xchg
push
cmove
aam
out
movsl
sahf
jne
arpl
dec
popa
mov
adc
sub
jecxz
js
insb
sti
je
dec
push
or
mov
xchg
xchg
les
mov
clc
clc
or
add
mov
jg
cmp
inc
sub
sahf
pop
sbb
lret
xchg
leave
cmp
loopne
xchg
sarb
xchg
das
push
test
in
lds
lods
xchg
imul
inc
sbb
addb
test
fwait
push
pop
loop
aad
adc
lock
cmp
mov
and
or
add
ja
lcall
je
cli
test
xorb
ret
and
into
add
mov
lret
test
mov
sbb
push
and
and
xchg
rcr
jle
or
jnp
xor
data16
mov
loop
xor
cltd
insl
cmp
lock
mov
jg
inc
std
outsb
popa
cmp
out
jns
and
lret
stc
pop
lock
sbb
mov
jl
pop
cwtl
mov
int3
jl
jno
pop
mov
mov
xchg
push
cld
mov
jnp
addb
and
cmp
dec
ljmp
pop
movsb
aas
mov
lahf
sbb
lret
and
mov
jecxz
xor
sarl
dec
inc
out
fs
aam
pop
and
xchg
add
ret
loope
sbb
aam
jns
notb
std
add
notb
in
jg
pop
inc
lret
vmread
mov
sbb
test
cmp
sbb
xchg
out
dec
jp
cmpsl
int
pusha
aam
jno
sub
adc
enter
pop
outsl
jnp
and
sub
sub
ds
das
ja
adc
jp
lds
test
mov
cmpsl
jl
sub
ljmp
loop
xchg
or
stos
je
cwtl
adc
shlb
aaa
cwtl
int
xor
pop
cmp
jnp
pop
fisubs
int3
sarl
xor
push
fstl
lds
lock
xor
push
mov
sub
repz
or
push
xchg
dec
push
or
jb
sub
jne
push
ja
xchg
mov
mov
inc
mov
ret
cltd
mov
rcll
movsl
dec
and
ret
xor
push
shrl
call
movl
and
lahf
pushf
or
les
and
cli
repnz
jmp
enter
jb
das
outsb
dec
outsb
cmp
inc
mov
leave
push
and
xchg
ret
out
data16
shl
cmp
jp
sub
ja
mov
pop
pushw
and
push
mov
pop
push
adc
clc
das
dec
and
jg
jb
int
roll
push
or
pop
or
nop
mov
mov
mov
inc
das
daa
std
popf
jle
push
adc
mov
popa
jns
bound
or
inc
mov
pop
add
dec
pop
aaa
pop
popf
repz
dec
aas
test
inc
push
adc
sbb
sti
sbb
cwtl
or
cmpsb
in
inc
lret
leave
sub
adc
sub
movsb
into
jg
mov
rcl
mov
pop
cmpsl
fs
mov
cmp
jle
lahf
or
nop
push
fsqrt
sbb
pusha
stos
mov
mov
sub
push
shl
ret
inc
pop
imul
mov
cmp
aaa
nop
pop
repz
outsb
lcall
fdivrl
or
lcall
icebp
pusha
aad
in
push
dec
shrl
jg
push
popf
lods
sub
add
cmpsl
popa
jae
ss
lea
jge
pusha
test
xor
lds
sbb
insb
and
jle
mov
jle
and
jmp
xchg
hlt
and
adc
adc
dec
movsl
andb
adc
call
js
and
mov
push
sbb
lret
xchg
popa
push
pop
cmpsl
cmp
scas
pop
xor
push
pop
jae
pop
push
hlt
mov
cli
push
dec
mov
cwtl
stc
stos
es
rolb
mov
in
xlat
jae
ja
stos
add
mov
mov
sbb
sub
fimuls
lret
xchg
cmp
sahf
dec
push
xor
fbld
shr
push
cli
loope
adc
mov
xchg
arpl
cltd
out
test
mov
ljmp
out
lcall
pop
xchg
or
and
cmp
or
inc
outsb
mov
push
pop
cs
insl
mov
mov
imul
into
shlb
mov
jo
loope
je
out
int
movsl
rclb
jl
pop
sbb
loopne
and
xchg
andb
mov
gs
cmp
fcomps
adc
mov
jecxz
pop
movsb
push
mov
orb
iret
add
das
jno
pop
daa
mov
ret
inc
jbe
ret
loope
lods
jne
lcall
negb
jo
jle
hlt
stos
xchg
imul
lcall
push
fldenv
jo
mov
mov
add
popa
test
cld
inc
adc
push
out
mov
and
pop
ljmp
decl
push
popa
mov
inc
sub
insb
lahf
dec
loopne
adc
mov
mov
mov
dec
jo
int
xchg
cli
xchg
inc
jmp
mov
xchg
in
fsubs
mov
xchg
and
xchg
test
aad
gs
addr16
stc
inc
fstl
scas
repz
mov
data16
cwtl
adc
test
and
and
push
push
nop
imul
movsl
pop
mov
xor
xchg
push
out
adc
jae
add
dec
add
adc
fsubrs
es
sbb
sub
imul
dec
cmpsb
dec
call
dec
popf
or
mov
add
mov
or
insl
ficompl
push
sbb
in
xor
ds
inc
inc
add
jge
push
xchg
sbbb
jnp
rclb
cltd
call
push
mov
mov
xchg
addr16
lods
inc
xor
and
loop
jecxz
mov
sub
cmp
out
mov
or
clc
fwait
aaa
xchg
inc
push
sub
dec
ss
mov
pop
or
movsl
add
clc
sbb
push
into
cmp
sbb
rorb
out
sub
div
adc
arpl
and
jmp
mov
ja
or
jbe
mov
jge
xor
xor
scas
inc
shrb
pop
mov
arpl
inc
cmpsl
pusha
xchg
rclb
and
cmpb
cmpsl
aaa
add
call
cmp
and
push
ficoml
add
adc
adc
mov
or
mov
pop
pop
jp
clc
and
andl
test
insb
add
jo
inc
and
popf
xchg
dec
sti
fimull
mov
popa
repz
jbe
mov
push
popf
out
and
arpl
js
pop
dec
cmc
cmp
ljmp
out
mov
xchg
movsb
xchg
inc
sub
incb
adc
shrb
sbb
cmpsl
add
scas
addb
orb
call
sub
popf
call
cmp
or
push
out
push
lcall
push
sar
lahf
in
inc
jo
dec
or
cli
jo
cwtl
sub
das
xlat
aam
adc
repnz
ret
and
addb
add
xchg
arpl
cmp
add
insl
aam
mov
sub
das
stc
out
movsb
mov
mov
jg
adcb
icebp
push
bound
xor
sti
adc
movsl
jmp
das
call
push
int3
movsl
movsb
pop
xor
inc
mov
push
jge
lcall
push
iret
pop
sub
cmp
mov
add
jmp
xor
sbb
push
out
sbb
lret
adc
rorl
sbb
ficoms
adc
dec
js
or
jmp
int
outsl
pop
ficoms
ds
rcll
jne
jg
jp,pn
sub
in
push
lods
pop
lea
add
test
xor
add
scas
cmp
jnp
mov
shlb
cmp
push
sbb
mov
cmp
or
test
mov
pushf
testl
stos
mov
pop
lret
pop
adc
fcmovne
clc
hlt
dec
addl
push
inc
xchg
mov
dec
dec
jle
adc
jae
dec
cli
lds
movsl
sub
dec
popa
inc
mov
jns
lds
push
or
aam
and
fnstenv
push
jbe
repz
xor
into
sahf
repnz
out
push
push
push
xor
push
or
xlat
test
mov
jbe,pn
jb
mov
int3
inc
sub
xlat
push
clc
mov
sub
lock
push
mov
shrb
inc
mov
inc
sarl
psubsw
ss
or
mov
lods
push
xor
adc
lret
push
mov
sbb
mov
push
xor
fcoml
and
xchg
inc
ljmp
ja
lds
add
jecxz
jno
std
adc
jnp
push
push
pop
in
mov
out
pop
fldl
loopne
xchg
out
xor
pop
ficoms
sub
lods
aas
stos
and
leave
std
ljmp
punpckhwd
mov
jne
shll
or
das
inc
cmp
call
adc
push
data16
add
iret
mov
add
sub
jno
jle
push
mov
mov
dec
movsb
enter
notl
push
js
pop
sub
fldenv
idivl
or
dec
push
imul
clc
aaa
lds
in
stos
js
lods
adc
mov
jle
daa
and
jae
jb
adc
push
dec
leave
push
xchg
mov
js
or
pop
mov
inc
adc
and
insb
stc
notb
sbb
mov
mov
push
mov
rorl
arpl
js
fdivrl
hlt
xor
xor
mov
test
jmp
in
and
popa
adc
sbb
hlt
mov
sahf
icebp
shll
stc
shll
leave
popa
stos
mov
lcall
mov
or
pushf
jl
stos
int3
jae
jno
leave
repnz
out
decl
popa
pop
bound
ljmp
jae
xlat
and
adc
mov
movsb
outsb
sbb
in
add
in
sbb
arpl
lret
push
pop
xor
fmull
push
movsb
rcl
pushf
xchg
push
ret
fbstp
ja
adc
ss
fwait
lret
imul
mov
sub
enter
pop
sarb
cs
mov
xchg
sub
in
inc
into
aad
cmp
jae
xor
push
mov
lock
push
mov
aaa
in
je
scas
shlb
leave
push
cmpl
divl
mov
cmpsl
loopne
mov
sbb
out
cmpsb
les
leave
cmp
loop
cmp
pop
out
mov
orl
les
sbb
dec
mov
push
lds
pop
mov
scas
jmp
shrb
cmp
call
and
int
and
dec
leave
shll
inc
and
movsl
sarb
cmpsb
push
ror
mov
mov
or
jb
pop
mov
ret
daa
repnz
lahf
outsl
pop
orb
neg
mov
ret
xchg
jmp
sbb
jl
xor
jp
ss
jns
sub
orb
movsl
cmpsl
loop
mov
fidivs
and
pop
push
add
xor
lret
mov
rclb
pop
out
pusha
push
and
pop
jg
mov
in
in
lahf
mov
pop
add
adc
pop
cmpsb
jbe
lock
sub
xchg
insl
sub
dec
int
sti
je
sbb
pushl
dec
mov
fcompl
mov
loopne
ss
mov
mov
pop
das
and
popa
adcb
cmp
jg
notb
xchg
jge
ss
arpl
lret
dec
dec
rclb
or
js
icebp
sbb
lock
aas
jecxz
pop
mov
mov
mov
xchg
or
sbb
jmp
jno
mov
dec
ficomps
movsl
aad
mov
int
sti
mov
stc
mov
lds
and
mov
or
add
xchg
ficoms
sbb
add
scas
jmp
ror
sarl
adc
in
push
xchg
scas
ret
ja
jmp
std
arpl
movsb
arpl
aam
xchg
lret
adc
test
fstps
jbe
mov
notb
fsubrl
in
popf
push
loope
gs
leave
sub
cltd
mov
pop
xchg
loop
dec
inc
out
mov
inc
cmp
cmpsl
jnp
scas
mov
lods
addr16
cmc
pop
lcall
ljmp
out
push
es
ror
add
es
push
loopne
popa
and
add
cmp
cmp
and
popf
add
push
xchg
push
mov
mov
divl
iret
dec
out
mov
in
movsl
mov
inc
adc
or
mov
dec
popf
push
nop
pop
test
xor
jno
inc
mov
mov
pushf
or
loopne
cmp
cmp
pushw
cli
hlt
xchg
sahf
es
dec
jp
rol
ljmp
cmp
orl
jae
mov
out
fdivr
jno
cmp
js
je
jbe
jns
push
leave
faddl
movsl
cld
int3
shr
mov
and
cmp
iret
js
and
fcmovne
mov
repz
subl
mov
roll
and
push
cmc
aas
cmp
pop
ljmp
sub
pop
ja
cmc
les
add
xor
incl
xchg
push
addb
adc
xchg
xor
cltd
mov
jae
mulps
aam
js
dec
outsl
lods
addr16
dec
add
xlat
mov
sbb
and
andb
jecxz
xchg
insl
push
ss
or
mov
ljmp
ljmp
and
jecxz
fstl
mov
sbb
mov
cmp
js
pop
out
mov
sub
mov
mov
cmpsb
out
lret
cmp
sbb
icebp
push
xchg
add
inc
test
mov
sub
sbb
sbb
pop
fisttps
dec
cmp
jb
dec
and
dec
subl
js
stos
inc
out
imul
push
push
mov
push
jbe
push
xchg
cmp
addps
jbe
xlat
xor
mov
push
int
mov
xor
into
in
dec
or
stc
mov
jp
cmpsl
test
mov
jne
mov
and
mov
push
shr
out
dec
into
xchg
sbb
out
mov
xor
mov
or
enter
movsl
push
test
in
js
pop
fwait
rorb
mov
or
pusha
xlat
xor
xchg
cli
hlt
in
xchg
icebp
xor
mov
or
and
mov
scas
mov
ret
or
out
outsb
or
js
ds
and
dec
add
repnz
out
call
call
dec
jno
rcll
pop
repnz
jnp
int3
scas
pop
sub
or
or
test
fucom
mov
fbstp
ret
out
and
mov
mov
out
or
jl
xchg
int
inc
cmp
xor
mov
popf
sbb
mov
aas
add
or
cmp
xor
mov
xor
jb
out
jmp
inc
push
icebp
adc
xchg
fisubrl
int3
mov
adc
add
mov
mov
jg
fdiv
fnstsw
or
or
outsb
sti
test
add
in
repnz
test
cltd
out
sub
xchg
sarl
cli
mov
lea
sbb
cmpxchg
daa
loopne
mov
in
and
push
xor
xchg
js
ret
stc
fstl
mov
add
out
psubusb
out
mov
mov
dec
frstor
ds
jge
fiadds
mov
jg
add
push
pop
mov
jecxz
xchg
mov
mov
jb
mov
or
mov
and
xlat
out
add
in
retw
push
or
ficompl
fstpl
cld
das
aas
cmp
scas
add
iret
mov
imulb
lret
movsl
xchg
loop
orl
test
xchg
pop
pop
jmp
push
jne
ja
and
scas
shll
aaa
xchg
fisttps
rcll
push
loope
add
inc
or
pop
data16
and
add
lds
fistpll
cld
xchg
jge
xlat
stc
in
idiv
ja
mov
sub
gs
push
movsl
popa
outsb
lods
push
push
cmp
sahf
push
fwait
or
fchs
cwtl
sti
push
pop
lds
mov
xchg
xor
das
adc
xchg
ja
xor
lret
sub
dec
in
lret
push
sbbb
mov
enter
add
pop
jp
in
stos
jmp
fidivrs
jmp
mov
pop
and
loop
jmp
out
mov
les
ss
jecxz
inc
leave
sbb
arpl
and
mov
adc
roll
enter
js
into
outsl
in
orb
fmull
fsubrp
pop
jecxz
mov
push
hlt
jb
insl
sub
fsubp
rolb
pop
sbb
adc
jnp
sub
jb
ret
or
mov
mov
scas
aaa
inc
sbb
xor
negb
mov
mov
std
mov
test
inc
addr16
cltd
rcrb
lock
enter
cli
xor
insl
xchg
xor
stos
add
mov
jl
pop
bswap
jmp
cmp
bound
push
adc
mov
fs
inc
stos
mov
cmp
int3
mov
ds
xor
cmp
push
std
test
sbb
and
in
pop
fiadds
addr16
loop
pop
sti
cmc
cmpb
mov
fidivrs
mov
shrb
lret
mov
in
imul
loopne
out
inc
rclb
pop
mov
sbb
mov
call
adc
addr16
clc
pop
xchg
fdivs
push
icebp
mov
rcrb
or
into
imul
pushf
or
sbb
mov
nop
cli
push
mov
mov
or
je
out
testl
outsb
jle
aaa
das
xchg
arpl
int
in
mov
push
push
daa
add
and
test
and
call
testl
vorpd
sahf
inc
jo
xor
ds
je
imul
out
loop
pop
mov
cmp
dec
xchg
jne
push
mov
in
dec
push
shlb
cmpsb
rep
sub
adc
cmp
dec
sti
sti
out
dec
push
push
adc
xor
mov
xchg
imul
int3
cmp
icebp
push
ds
mov
pushf
scas
jle
cmp
out
push
push
adc
dec
inc
out
pop
aas
sbb
sub
hlt
inc
mov
sbb
pop
xchg
int
lods
cmp
jle
push
cmp
lahf
xchg
mov
and
jmp
ret
cmpsl
popa
jne
sbb
and
jne
fistps
lea
outsb
jl
inc
notb
push
sbb
dec
pop
mov
and
lret
imul
push
leave
js
int3
dec
and
mov
es
inc
mov
js
push
jmp
stos
mov
pop
iret
and
imul
pop
inc
xchg
xor
sbb
push
push
jecxz
mov
pop
pop
pop
jno
pop
xor
push
ljmp
jecxz
and
sarb
ret
sbb
dec
mov
insl
shll
mov
xor
fsubrl
int
int
popf
icebp
dec
cmc
push
dec
mov
jmp
or
inc
in
lahf
pop
or
xchg
push
add
mov
adc
sub
xchg
mov
scas
aaa
shlb
out
jnp
je
test
mov
fdivrp
push
dec
cli
hlt
out
xor
mov
rorl
mov
push
sarl
sbb
cmc
outsl
sub
or
es
inc
xchg
pop
xor
or
dec
movsl
and
sub
pop
mov
int3
mov
mov
ja
lods
in
mov
mov
sub
lods
mov
sbb
adc
mov
mov
gs
or
adc
lea
or
loopne
out
xchg
push
adc
xor
out
inc
jg
in
push
imul
mov
push
dec
int3
mov
ds
mov
mov
test
loop
jne
popa
pop
je
xor
adc
test
into
lahf
xor
sub
lock
add
imul
cwtl
push
push
sub
jecxz
mov
std
aas
dec
cmp
in
or
push
test
mov
scas
push
mov
push
dec
cmpsb
cmp
in
pop
xchg
frstor
in
popf
fmull
or
fwait
lret
into
outsb
fisubrs
movsb
mov
testb
sbb
mov
cmp
push
jl
cld
pusha
mov
daa
lahf
rorb
add
mov
add
iret
sbb
in
lret
call
into
jne
adcb
ss
xor
xchg
stos
fistpll
data16
sub
mov
jmp
sbb
inc
out
dec
push
or
pop
jb
aad
xchg
fs
rorl
cmp
dec
pop
sbbl
pushf
pop
mov
xchg
jae
mov
gs
cmp
and
push
adc
adc
mov
sbb
pmaddwd
cmp
push
jmp
add
cmp
lret
lods
arpl
push
std
lahf
jg
xchg
cmp
fwait
inc
cmp
test
and
sub
andb
mov
scas
adc
sub
movsl
xlat
hlt
cltd
and
lds
inc
outsl
adc
adc
xor
ds
or
mov
or
mov
call
imul
inc
dec
test
push
jbe
mov
shrl
fstpl
int
ljmp
and
jmp
roll
ss
cmpsb
out
and
mov
outsl
enter
out
jns
inc
aaa
out
fldenv
jne
cltd
sub
push
int3
stos
rcl
fcmovnb
lcall
adc
stos
lcall
xor
or
daa
fldcw
push
mov
fimuls
mov
cwtl
shlb
ds
in
mov
cmpsb
dec
cltd
or
sub
cmp
in
jge
xchg
out
pop
add
jnp
scas
stc
jg
in
inc
cmpsl
and
add
fcmovnbe
and
cld
mov
sub
add
lcall
gs
enter
sahf
and
das
xor
cmc
imul
icebp
inc
popf
inc
fcoml
in
ret
stos
push
push
imul
push
call
push
add
testb
in
out
and
pop
inc
mov
sbb
push
lcall
mov
xchg
jecxz
or
ja
add
mov
es
arpl
xchg
add
stos
ret
das
mov
clc
jl
scas
xor
xor
xlat
out
fimuls
xor
pop
in
lcall
test
add
cmp
jne
stc
iret
negb
mov
push
aas
mov
repz
jl
addr16
jl
inc
xor
sbb
js
add
pop
loope
addr16
xor
sbb
rorb
clc
dec
jae
lcall
lods
lock
das
pop
jnp
push
xrelease
fldt
inc
and
dec
pop
test
ret
mov
js
dec
popa
imul
sub
ret
cli
lea
jge
repz
testb
cmp
outsb
or
inc
cmpsb
push
jne
mov
xchg
outsl
pop
dec
lret
test
arpl
or
fimull
enter
push
xorl
or
sub
mov
test
popf
cmp
loope
jns
push
xor
enter
addr16
add
inc
inc
or
enter
cmpl
mov
fcmovnb
push
jae
ss
fisttpl
lret
mov
pusha
mov
sub
push
push
adc
fdivrs
mov
jg,pt
lock
ret
popa
pop
cs
fisttpl
cltd
fidivrl
mulb
out
xchg
lret
aas
lock
ror
addl
and
push
clc
and
cwtl
stc
out
or
daa
mov
cmc
cld
inc
sti
sbbl
xchg
mov
pop
cld
loope
adc
test
push
ret
insb
jb
pop
dec
ret
mov
jmp
pop
in
in
push
test
ds
dec
or
jno
dec
jge
idivl
nop
jns
in
sbb
mov
cmc
int
xchg
or
cmp
out
ficoml
test
push
test
scas
adc
inc
lds
push
cli
popa
pop
mov
cli
pop
popf
repnz
out
cmp
ds
jae
lea
bound
sti
jle
mov
dec
inc
and
add
inc
cmp
shll
std
ja
rorl
insl
ret
gs
xchg
pusha
fwait
mov
adc
insl
fstp
fwait
sub
or
movsb
xor
in
adc
sbb
dec
dec
mov
ss
mov
andl
inc
int
hlt
adc
cli
sub
mov
inc
push
test
sub
dec
popa
in
repz
xor
notb
adc
xchg
lret
pop
testl
push
jmp
pop
aas
call
push
cmp
leave
and
je
mov
aam
push
push
push
pusha
andb
xchg
adc
jno
outsl
dec
rcll
outsb
scas
loop
and
xor
sahf
sub
cld
or
aaa
pusha
jmp
push
jnp
clc
nop
xchg
idivl
ficoms
pop
insl
in
cmpxchg
outsl
sarb
call
sub
mov
call
mov
and
gs
insl
pop
cltd
xchg
dec
add
fnsave
add
or
gs
jp
jno
flds
in
xor
mov
sbb
cmp
sbb
and
out
adc
ja
cmpsb
mov
mov
test
fnstenv
xchg
push
inc
cs
clc
rclb
dec
fcompl
adc
pushl
hlt
mov
push
rclb
enter
out
shlb
scas
sbb
adc
aaa
add
lock
lret
cmp
bound
push
push
mov
pop
jb
clc
les
imul
sbb
mov
xor
das
outsb
inc
aaa
sbb
imul
sub
test
int
push
aam
xchg
adc
sbb
pushf
or
mov
or
xchg
out
loop
leave
clc
js
stc
shufps
inc
xor
jo
sbb
cli
rol
shlb
mov
shl
add
mov
cmpsb
es
sbb
rcrb
imul
out
out
xor
mov
cli
pop
mov
inc
repnz
sbb
mov
movsb
mov
xor
sub
sub
adc
sbb
outsb
and
popa
dec
aas
jns
dec
push
aad
fisubs
arpl
xchg
xchg
testb
repz
mov
or
fmull
ljmp
dec
mov
cmpsb
add
rcrl
mov
je
mov
out
mov
xor
fistpll
rolb
adc
xor
stos
rcr
sub
sub
xor
scas
aaa
insl
jl
aaa
add
lods
cld
cmpb
sub
scas
pmaddwd
sbb
or
and
divl
shll
sub
dec
sub
movsb
xchg
aad
fbld
lock
jmp
pop
xorb
icebp
mov
adc
popf
pop
into
in
jno
jge
out
mov
xchg
shrl
jle
mov
iret
adc
jb
sub
xor
leave
pop
adc
mov
cmp
push
adc
jae
and
shll
xchg
mov
rcrl
aaa
add
sub
add
jnp
int
jae
mov
ds
dec
addr16
call
xchg
sub
xor
jns
sub
or
cmpsb
inc
jp
dec
fldl
sarb
mov
push
ljmp
popf
ljmp
scas
mov
scas
cmp
inc
jge
xchg
fwait
shlb
jl
call
xchg
call
scas
arpl
fstpl
pusha
movsb
lret
sahf
sarl
xchg
pop
pop
cli
inc
stos
cmc
pusha
nop
stos
popf
fildll
cld
hlt
insb
dec
fstcw
cmp
ljmp
in
in
js
mov
xchg
test
arpl
push
in
sub
std
sahf
fdivp
js
cmp
sub
cli
ret
mov
mov
cmpl
mov
insb
jmp
dec
mov
dec
adc
lcall
aas
in
xchg
sub
sub
mov
inc
ljmp
inc
pop
jo
jbe
xor
cmpsb
pop
cmp
ja
clc
je
in
insl
mov
mov
mov
dec
jp
loope
cmp
mov
stos
and
jl
outsl
mov
rcl
mov
mov
cmpsb
xor
data16
jnp
jecxz
popa
jae
nop
pop
adc
push
sub
jno
mov
nop
imul
add
and
pop
mov
dec
sub
mov
roll
lods
mov
addr16
js
lret
popa
fildl
loop
xchg
loopne
xor
sbb
adc
fs
mov
sbb
fwait
mov
iret
xchg
lods
stos
dec
adc
into
mov
add
mov
lcall
xor
cwtl
sbb
cmp
scas
xorb
pop
inc
in
fadd
xor
in
adcl
adc
fbld
js
jo
data16
jnp
or
in
std
repnz
jb
mov
and
bswap
repz
pop
lods
out
mov
pop
pop
xor
pop
sub
mov
inc
mov
add
pop
rorl
xchg
inc
testb
int
les
dec
iret
mov
es
xchg
inc
pop
xchg
in
and
inc
inc
mov
shlb
movaps
ficompl
jle
dec
aas
jno
cwtl
xorl
addl
cmp
shll
test
fnstenv
ds
xchg
mov
push
bound
push
mov
mov
mov
mov
push
mov
sbb
fcoms
cmp
aam
fstpl
lcall
mov
xchg
outsb
cs
mov
pop
in
inc
ss
jmp
sub
lock
out
loopne
cmp
push
scas
xlat
mov
add
lret
es
imul
loop
in
rcrl
mov
inc
scas
out
sub
jnp
and
inc
loope
cmp
pop
imul
imul
or
lea
addb
ret
cmpsl
add
mov
fs
stc
mov
pushf
cmp
xchg
add
into
pop
or
jb
loope
int3
repnz
ja
adc
cmp
xchg
mov
popa
pop
outsl
sbb
pop
jns
cs
in
xchg
jbe
test
sbb
loopne
add
or
arpl
inc
add
cmp
inc
fcmovnbe
sbb
notb
in
fmuls
andb
dec
iret
or
lods
jne
shl
out
cmp
inc
pop
movsb
jl
sub
ret
lods
mov
shlb
mov
insb
dec
add
sbb
lahf
int
repnz
mov
inc
adc
dec
hlt
pop
add
push
or
mov
stos
loop
into
or
mov
push
mov
arpl
add
mov
test
insb
daa
movsb
aam
mov
sahf
mov
shlb
cwtl
cltd
inc
push
sahf
mov
pop
faddp
cli
lahf
dec
inc
dec
test
mov
repnz
lods
pop
push
and
inc
adc
incl
leave
push
xchg
mov
adc
sarb
adc
and
dec
xlat
lret
sbb
add
pop
int3
sbb
fdivr
out
push
mov
add
dec
cmp
shrb
adc
push
out
int3
mov
xchg
push
mov
icebp
and
cltd
sbb
xor
mov
in
pusha
fistl
into
ds
les
and
cmp
sbb
sahf
xlat
or
es
testl
outsb
adc
fsts
lods
data16
adc
jns
mov
xor
aas
push
jl
jbe
add
popf
nop
div
enter
in
test
stos
lods
pusha
ret
fisubrs
pop
mov
push
mov
and
adc
mov
loop
sbb
loopne
daa
mov
mov
stc
pop
scas
icebp
rol
and
lea
icebp
adc
adc
enter
in
testb
lret
cmp
aam
inc
add
cli
push
ds
sbbl
iret
sub
loop,pt
sbbl
lret
push
cmp
mov
pop
mov
div
popf
shll
xchg
jno
roll
cli
push
iret
loopne
mov
xor
inc
push
mov
cmp
or
dec
bound
test
mov
jae
gs
cwtl
sti
pop
and
mov
out
xor
and
jae
mov
movsb
lret
fnstsw
ja
ret
mull
pop
cmpsl
xor
add
lret
and
lahf
inc
mov
fisubs
pop
rolb
sbb
mov
bound
jb
cmpsb
call
int3
xor
add
mov
repnz
pushf
add
out
vfmaddsub132pd
pop
jbe
pop
and
mov
mov
dec
loope
push
in
mov
xchg
mov
dec
sti
pop
push
in
aaa
or
mov
or
fstps
faddp
data16
aaa
les
dec
dec
jnp
pop
dec
pushf
xchg
cmp
jl
pop
jnp
push
pop
inc
mov
or
in
rol
mov
sbb
add
add
test
pop
psubusb
adc
rclb
jnp
dec
scas
mov
enter
dec
cmp
pop
adc
ret
push
dec
jge
sti
xor
push
adc
test
adc
xchg
cmp
into
jp
lods
inc
push
sbb
int3
cwtl
aaa
sti
shrb
mov
mov
scas
pop
loope
or
xchg
mov
lcall
mov
std
out
popf
iret
lock
pop
insl
outsb
or
gs
in
mull
shlb
es
mov
in
jno
fisubl
mov
adc
sub
shrb
xchg
jp
es
mov
push
jg
rorl
pop
sti
push
lcall
xchg
imul
dec
cltd
fnstenv
mov
inc
jae
sarl
in
push
push
jae
jne
push
pop
int
push
xorl
bnd
dec
aaa
xchg
xor
scas
sbb
ljmp
ss
xor
inc
dec
xchg
aad
jg
cltd
cmp
dec
sahf
jmp
scas
lods
iret
add
mov
push
mov
aam
and
test
icebp
mov
add
or
orb
sbbl
cmpsl
aam
fwait
in
data16
les
add
jle
pop
fldcw
lahf
loope
movsb
loope
lahf
add
pop
and
xor
push
fnstsw
inc
inc
mov
std
out
pop
cmpsl
pop
icebp
inc
pop
cmp
leave
mov
fst
inc
bound
dec
adc
loope
sub
jl
dec
mov
sbb
lds
and
in
outsl
mov
insb
aad
push
push
sbb
call
xor
mov
bound
add
sub
add
inc
or
iret
mov
cmpsb
inc
jg
bound
arpl
popw
aam
aam
sahf
dec
rcl
push
cltd
pop
mov
sub
es
std
data16
enter
mov
inc
jle
add
repz
mov
jbe
mov
xchg
dec
xor
jmp
or
mov
mov
pop
cmp
push
jp
lock
dec
jge
loope
or
test
int
es
fildll
xchg
stc
or
je
pop
sar
jne
ret
int3
push
and
jae
ficoms
pop
or
push
push
xor
arpl
cs
mov
fsub
enter
jbe
lock
push
adcb
lcall
fmulp
movsl
sub
shll
cs
cmp
mov
lret
jmp
push
mov
sbb
loope
add
dec
cmpsb
push
cmp
rcrl
sub
xchg
aam
aas
fimull
scas
or
or
lock
shll
das
fbstp
sub
popf
cmp
pop
add
adcb
popf
jl
mov
jo
adc
fmuls
mov
fcmovne
fbld
bound
inc
fs
pop
sub
repnz
fisubrl
out
jge
sahf
fisttps
add
jl
in
sbbb
sahf
push
daa
mov
adc
xor
mov
pop
xor
or
scas
jns
or
insb
addr16
mov
mov
mov
cld
enter
mov
imul
mov
dec
nop
adc
sbb
fldt
mov
dec
leave
jb
mov
loope
repnz
out
sub
cmpsb
xor
xchg
mov
mov
lock
or
outsl
inc
iret
sub
insl
jle
out
addr16
xchg
rorl
jg
xchg
pop
sub
cmp
rcrl
call
sahf
xchg
mov
ljmp
mov
xor
sbb
movsb
pop
pop
hlt
inc
jb
pop
cmp
shrb
std
xchg
fimull
xchg
mov
push
int
loopne
daa
rcrl
cmp
hlt
mov
pop
jbe
mov
fildl
out
and
lods
mov
sbb
mov
stos
hlt
push
xor
mov
mov
inc
mov
or
jb
mov
test
in
nop
mov
and
fmull
adc
adc
jg
hlt
call
insl
cmp
addr16
aaa
mov
popf
mov
pop
es
mov
mov
in
or
pushf
or
adc
and
lods
fnstenv
test
subl
cmpsl
inc
or
scas
and
subb
adc
mov
in
cld
sbb
daa
mov
js
cmovne
jns
jns
fldl
dec
lods
test
cmp
mov
loope
repnz
sub
sbb
data16
push
add
jg
mov
bnd
mov
cs
lds
xchg
cmp
mov
test
movsl
mov
in
push
sub
adc
xor
mov
xor
or
leave
jp
jnp
adc
or
dec
fsubr
mov
cmp
aad
mov
add
pop
nop
jne
jmp
xorb
xchg
push
adc
test
pop
xchg
mov
loope
std
push
and
aas
loope
jno
cmpsl
pop
sbb
mov
pop
pop
stos
mov
test
shrl
pop
mov
mov
push
roll
lret
or
mov
and
push
icebp
or
xchg
aam
push
and
fsubs
lcall
pop
jl
lcall
rorl
cltd
ret
jnp
data16
scas
jns
inc
leave
lods
sbb
movsl
test
cmp
pop
dec
cmp
cmp
aas
into
js
orl
cmp
inc
dec
fnstsw
shlb
sub
pushf
xor
inc
loopne
jne
and
dec
stos
lea
lahf
arpl
xor
jl
dec
je
daa
mov
mov
call
and
pop
iret
iret
xor
out
push
icebp
shll
cs
pusha
outsb
loopne
cmp
xchg
mov
enter
mov
xor
test
push
inc
mov
xchg
sahf
fdivrs
adc
mov
jl
adcb
push
sub
and
repz
jno
dec
push
pop
js
mov
aas
xchg
fadds
sbb
pop
cs
jg
insl
cld
xchg
sbb
sub
xor
aad
push
imul
adc
test
mov
andps
or
pushf
add
mov
icebp
adc
fbld
inc
and
mov
lcall
sbb
pushf
out
leave
pop
xchg
jmp
adc
mov
push
jo
mov
mov
in
stc
xor
or
scas
cli
dec
mov
jne
lods
cmp
and
push
xchg
test
mov
hlt
das
ret
inc
decl
pop
leave
xchg
lods
cld
pushf
fcmovnbe
xchg
cmpsb
cli
mov
cmp
and
sbb
stos
adc
into
jl
mov
mov
xchg
cmpsb
cmp
mov
stc
popa
cmp
ret
pop
xor
mov
xchg
inc
or
adc
pop
or
cmp
imul
mov
incl
clc
idivb
inc
jp
in
insl
insb
daa
in
xorl
scas
clc
lahf
imul
pop
cld
loopne
cmp
cmp
dec
lods
ljmp
orb
cmpsl
int3
es
mov
out
ret
dec
fistpl
roll
movsl
nop
push
add
sbb
mov
mov
or
pop
pop
sub
cwtl
jmp
or
enter
push
popl
outsb
hlt
fisubrs
aad
enter
clc
rdpmc
mov
sub
jecxz
dec
xchg
test
xor
xchg
call
add
ret
pop
push
movsb
popa
xchg
jno
inc
dec
fwait
push
cmp
pop
lods
jns
mov
ror
fwait
push
mov
or
xlat
jle
fisubrs
jns
mov
push
mov
and
leave
stc
test
pop
add
jo
mov
cmpsl
pop
lcall
sbb
push
clc
into
cmp
mov
dec
push
add
and
lret
mov
aad
enter
ret
std
dec
sbb
inc
test
daa
sbb
xchg
mov
sub
test
daa
xlat
cmp
test
out
push
sub
inc
clc
xchg
xchg
and
std
xchg
cmp
jmp
push
add
out
scas
notb
xchg
lret
outsl
inc
jle
mov
xor
outsb
mov
in
lret
push
pop
ret
lods
outsl
stos
and
fiaddl
lods
dec
ljmp
dec
push
fxch
stos
push
fdivrp
bnd
xor
dec
push
into
cwtl
inc
pop
dec
mov
mov
aaa
scas
pop
pop
adcb
jl
xor
cmp
repnz
hlt
push
sti
jne
push
loope
cmpsb
gs
push
mov
xchg
jl
lds
push
or
lahf
repz
out
push
xchg
or
cmp
mov
aaa
sub
stos
adc
ja
push
or
popl
xchg
xor
mov
arpl
push
pop
xchg
lret
lock
divb
daa
insb
or
call
stc
sbbl
aad
out
cli
popf
xorl
sub
cmp
repnz
cmp
add
repnz
cmpsl
or
fsts
in
dec
outsl
faddl
mov
mov
pop
es
js
stos
cmp
and
les
mov
fs
data16
xchg
push
pop
adc
sub
lahf
adcl
adc
lret
mov
outsb
test
mov
rclb
fnsave
push
cli
mov
mov
lret
test
das
or
lret
push
in
or
sti
mov
incl
mov
test
xchg
xor
in
rclb
push
outsl
push
sub
inc
out
mov
cld
mov
fwait
cmp
push
bound
js
jne
repnz
mov
arpl
pop
gs
insb
sbb
sub
and
add
push
adc
xchg
mov
sahf
sbb
std
sti
cmp
aam
leave
popf
in
jmp
push
pop
dec
sub
pop
xor
fs
sub
jno
mov
fstps
icebp
lret
lcall
jl
aad
arpl
pop
adc
fadds
mov
incl
and
fisttpl
add
outsl
roll
loop
in
test
aam
in
jmp
rcll
movsb
pusha
or
decl
cli
rcll
mov
mov
push
jg
jp
or
mov
loopne
or
cmc
test
push
xchg
mov
scas
bnd
mov
adc
mov
cmpsb
sbb
out
rcrb
repz
sbb
or
inc
stos
xor
mov
fisttps
sbb
cwtl
inc
aaa
faddl
or
sub
test
cmp
inc
cmp
jle
imul
fs
sahf
add
fwait
adc
lods
pop
inc
inc
pop
test
cmp
out
mov
cltd
loope
push
xchg
adc
shll
std
sahf
imul
mov
stc
sbb
ret
mov
pop
adc
cmp
and
ret
pop
push
mov
jmp
insb
adc
call
jecxz
xor
push
mov
or
dec
test
pop
mov
push
repnz
popl
inc
inc
into
xchg
fldt
inc
dec
stos
out
dec
mov
mov
and
adc
arpl
pop
arpl
jl
xchg
sti
mov
sub
aam
addr16
and
push
pop
push
imul
test
cmp
mov
mov
dec
mov
ja
nop
jb
test
inc
arpl
test
xor
scas
push
push
lds
dec
cmc
sub
sbb
sbb
cmpsl
rcl
call
je
pop
mov
xchg
cmp
jmp
inc
inc
dec
sbb
push
jg
lds
repz
mov
mov
push
fisubl
sub
or
dec
or
cwtl
push
jecxz
sub
push
sbb
cwtl
push
cmp
mov
jbe
inc
xchg
ret
jns
imul
nop
clc
pop
pushf
sbb
loope
clc
test
xor
jge
out
lea
movaps
in
dec
sbb
sbb
ficompl
shlb
movsl
movsl
lods
inc
pop
and
aaa
cmp
xchg
mov
lods
jb
adc
shll
insb
int3
imul
cmp
icebp
push
out
int
inc
add
adc
mov
jle
insb
jle
xchg
adc
shll
pop
das
das
test
cmp
push
rcrl
outsb
mov
jmp
mov
mov
jo
or
mov
lahf
loopne
int3
addr16
sbb
popa
sub
xchg
push
mov
mov
cli
mov
dec
xchg
stos
outsl
mov
mov
lods
cmpb
mov
fistps
andl
jmp
std
int
repz
mov
jns
popa
cltd
mov
jecxz
nop
cli
fwait
mov
push
sbb
mov
mov
scas
mov
inc
mov
xchg
xchg
mov
pop
xlat
shlb
iret
pop
cmp
sub
sub
ljmp
nop
lods
nop
fisttpl
push
js
and
out
mov
and
jb
jecxz
mov
stos
stos
pop
and
in
popf
dec
mov
mov
jmp
clc
ret
cmpsb
add
loopne
push
ja
dec
add
pop
xchg
lea
enter
mov
daa
fld
pop
movsb
and
xchg
daa
or
push
lods
test
sarl
lret
into
mov
mov
outsb
adc
add
loopne
dec
xchg
and
ja
sbb
pusha
sub
inc
mov
xchg
aam
pop
hlt
popf
jmp
loop
pop
add
fbld
leavew
or
enter
daa
pop
mov
xchg
mov
inc
mov
jecxz
addl
cmpsb
pop
mov
sbb
add
mov
loopne
icebp
cmp
push
sarb
mov
es
movsb
and
jg
mov
ret
mov
lcall
or
mov
movsl
jmp
dec
pop
shrb
jo
lock
inc
fdivrl
aad
and
or
stc
mov
fldenv
stc
aad
sub
mov
mov
iret
popa
push
mov
fnstsw
iret
sub
add
test
loope
dec
jl
inc
aas
mov
pop
jl
inc
inc
daa
ljmp
cmp
cmc
add
push
sahf
popf
mov
sub
aas
into
jg
rclb
add
dec
and
xchg
add
fucomi
mov
test
cmpsb
inc
loop
mov
inc
jmp
jmp
mov
rcrb
cmp
in
inc
or
push
call
mov
es
jmp
repnz
pop
inc
or
in
mov
xchg
insl
nop
add
mov
pusha
loop
movsl
ja
pop
sub
push
and
in
jmp
and
cmc
lods
daa
insb
sbb
mov
adc
daa
je
mov
xor
inc
call
test
jle
and
pop
pop
scas
into
out
add
add
scas
push
and
lea
cli
pop
mov
push
or
js
adc
test
push
cmp
gs
xor
in
pop
push
nop
adc
cmp
insb
xchg
mov
fsub
cs
loope
mov
out
ss
insb
imul
mov
xchg
xor
shr
movsb
or
arpl
in
inc
lahf
ss
icebp
fildll
cmp
jnp
jnp
out
popl
and
cmp
mov
add
les
cmp
fwait
sbb
cli
adc
js
aas
dec
jo
ss
in
popa
popa
mov
adc
pop
ret
popf
lds
mov
dec
push
xlat
xor
scas
imul
inc
fdivrl
xor
inc
pop
ljmp
das
jne
sub
int3
aam
jae
les
hlt
outsb
in
cltd
adc
add
shlb
mov
mov
mov
xor
xor
sbb
scas
or
cmp
lods
mov
add
mov
xor
sbb
jo
sbb
sbb
mov
test
jmp
mov
mov
jmp
es
scas
mov
xor
sub
and
mov
add
fstps
add
fsubrp
ss
jmp
aas
fcoms
sbb
pop
mov
out
sub
inc
fbstp
sub
pop
cmc
sub
add
xchg
in
imul
xchg
pop
and
sub
out
mov
mov
adcl
dec
push
push
int3
es
push
cltd
adc
test
cmp
pop
fst
mov
insb
or
or
int3
sbb
mov
mov
ret
jge
mov
rcrb
cli
ss
cmpsl
xor
ds
gs
adc
inc
sbbb
movsl
scas
jo
leave
insb
es
inc
cmp
xchg
xchg
roll
jo
test
shrl
jle
fs
pop
jno
jo
mov
cmpsl
or
imul
addr16
int3
lret
and
jl
into
mov
sub
jge
mov
leave
lret
bnd
dec
movsb
pusha
shrb
xchg
loopne
test
or
sub
sti
pop
mov
jno
sub
repnz
jecxz
ret
mov
int3
inc
mov
xchg
sub
in
imul
lds
in
cltd
sti
jle
dec
cltd
add
jnp
outsl
sub
dec
xor
mov
mov
int
repz
cld
jge
out
and
adc
cmp
xchg
addb
test
xor
xor
xlat
rep
test
shr
sarb
div
icebp
fcoml
and
shll
inc
std
gs
mov
outsl
test
jns
lcall
cmp
arpl
das
in
xor
sti
cmp
ficompl
sub
cmpsl
insl
or
push
push
pop
jl
call
movsb
pop
mov
add
in
sub
shl
cli
dec
push
into
popf
mov
int3
jl
xor
jle
jb
ja
in
sahf
popa
addr16
lret
sbb
lret
cli
xchg
pop
mov
shll
aaa
leave
adc
push
sub
lahf
test
sub
ss
mov
xor
adc
cmc
sbb
mov
push
lock
in
out
mov
xor
push
mov
imul
movsl
imul
rdpmc
notl
shlb
repnz
out
xor
jmp
fwait
dec
cwtl
jno
popf
push
jp
out
ret
xlat
in
ret
or
lahf
mov
inc
mov
pop
xchg
push
adc
xchg
jmp
xor
push
aad
push
sarb
nop
std
mov
aam
jbe
xchg
and
mov
pop
inc
ljmp
xlat
push
cwtl
hlt
mov
push
xor
mov
test
data16
xchg
or
outsb
dec
aaa
and
cltd
loopne
inc
mov
mov
push
les
mov
xorb
and
push
mov
jg
rcrl
mov
adcb
repz
mov
cmp
bound
stos
dec
inc
mov
test
cmp
sbb
je
rorb
jns
sub
sti
jl
inc
adc
int3
pushf
xchg
jle
ret
xor
sbb
mov
insb
add
or
andb
adc
mov
cmp
mov
bound
aas
shll
inc
dec
xor
cmpsl
xchg
add
scas
imul
or
arpl
popf
test
push
pop
sub
stc
mov
xor
dec
cmp
addl
pop
push
aaa
not
shl
cmp
xor
jle
sub
push
jmp
and
and
inc
ss
test
and
pop
sub
in
push
cli
jb
in
mov
or
fadds
or
stc
dec
sarb
pop
ret
add
lds
adc
mov
fwait
lds
out
jno
inc
jmp
rcr
addr16
push
xchg
or
cld
mov
lea
sarl
inc
je
cmp
imull
inc
in
mov
lret
sbb
in
dec
lock
cmpsl
mov
xor
cmp
xor
jnp
mov
outsb
cli
rcll
fadd
lds
dec
inc
adc
mov
jns
xchg
mov
push
sub
and
mov
add
mov
xor
xchg
mulb
shl
nop
popf
lea
pop
jb
jne
divb
scas
into
pop
xchg
or
jle
addr16
clc
push
mov
outsb
outsl
ljmp
push
arpl
cwtl
popa
inc
addr16
jnp
shlb
ret
cwtl
push
dec
repz
adc
sub
outsl
popf
inc
xchg
xchg
and
pop
aam
in
insb
cmc
sub
adcb
sub
das
leave
inc
adcb
push
dec
cwtl
stos
out
int
inc
pop
cltd
in
hlt
cmp
sbb
pushl
shlb
mov
test
sub
jg
inc
or
cmc
std
sub
arpl
rcrb
xor
sub
jno
pop
mov
add
cwtl
scas
mov
xor
pushf
dec
xor
adc
stos
pop
sahf
fcoms
adc
clc
cmp
cld
test
ret
adc
iret
pop
daa
sub
xor
fwait
push
sbb
nop
fisubrs
xchg
adc
inc
adc
fxch
insl
xor
movsb
cmc
outsb
fisubrl
jo
jmp
push
cld
in
ljmp
aad
out
pop
clc
out
sbb
mov
jl
dec
mov
lea
push
jl
sub
xor
test
mov
in
adc
add
xor
insb
insb
mov
ljmp
adc
andb
or
cltd
pop
push
frstor
mov
push
ds
scas
movl
pop
cmpsl
mov
jecxz
or
xor
lds
ret
test
mov
into
icebp
jg
or
pop
subb
mov
dec
mov
adcb
adc
mov
shlb
add
out
insl
sbb
cmovb
ljmp
ds
mov
fsubl
repz
orl
adc
xor
xor
test
xchg
jbe
dec
push
into
jle
mov
popf
sub
cld
jne
icebp
mov
push
and
mov
sbb
test
xor
lea
xor
pop
mov
loope
iret
loop
call
lds
addl
cs
divb
jne
or
inc
jnp
pushl
pop
xor
mov
sub
pop
fs
jo
lcall
repnz
sbbl
movsb
add
sahf
iret
pop
insb
shlb
and
xchg
nop
pop
repz
sub
rol
xchg
popa
pop
pop
xchg
cmp
add
pop
jae
xchg
adc
and
lea
mov
mov
mov
sbb
mov
ret
xchg
test
dec
addb
cmp
add
pop
das
fucomip
clts
sub
ror
cltd
xchg
andl
mov
xchg
pop
in
cmp
in
or
in
fmuls
insb
cmpsb
mov
adc
fistl
lods
fldl
shll
mov
push
mov
jl
xchg
xchg
jmp
pop
and
ret
pop
cwtl
scas
cmp
sarl
movsl
rcrl
jns
into
cmp
rol
popf
xchg
jbe
mov
mov
adc
lock
xchg
hlt
in
sub
xor
push
cli
rclb
jno
push
sub
mov
pusha
jp
mov
adc
sbb
dec
insb
pop
or
cmpsb
mov
data16
and
jecxz
insb
push
cmp
daa
cmpb
mov
adc
test
nop
gs
push
ss
shrb
das
xchg
call
xor
orl
jb
and
push
push
mov
push
dec
dec
addr16
xor
sub
cmp
rcl
in
sbb
lea
inc
add
pop
outsl
adc
les
ret
xchg
jmp
imul
and
test
sub
sbb
add
jae
popa
cmc
mov
adc
pop
lcall
fwait
adc
shr
jp
mov
es
lahf
fisttps
fwait
mov
fldenv
addr16
xor
popf
nop
mov
and
mov
fdivl
dec
xlat
jge
sub
cmp
sarb
pusha
adc
shrb
test
and
aam
loopne
in
cmp
jnp
call
inc
aas
mov
mov
lds
or
jmp
insl
lea
mov
dec
aam
cmp
shll
addr16
sti
mov
outsb
dec
or
lds
push
sub
rcrb
aaa
cld
loope
xor
xor
push
xor
popa
sbb
mov
push
xor
push
mov
adc
dec
dec
xlat
lds
test
jbe
fdivr
inc
mov
inc
dec
js
cld
push
dec
jp
jl
popa
call
and
les
sub
cmp
pushf
out
jp
pop
ljmp
push
mov
js
lods
mov
push
inc
orl
jge
jle
je
xchg
adc
mov
aam
loopne
scas
or
dec
cltd
add
push
sbb
insl
lds
mov
jl
mov
jo
or
jbe
mov
mov
adc
and
test
lods
imull
jne
mov
repz
cs
test
mov
movsl
push
jno
stc
cs
jp
mov
xor
nop
hlt
or
insb
xchg
sbb
dec
ds
jge
rorb
js
scas
pop
daa
aas
add
mov
movsb
fwait
cmp
cmpb
cmp
add
xor
mov
mov
cwtl
out
ror
arpl
mov
cmc
das
xchg
shrb
hlt
jle
lods
cmp
add
xchg
and
sub
loopne
mov
lock
xchg
sub
and
fcmovnu
clc
xchg
repz
add
ljmp
inc
cmpsb
and
in
hlt
out
and
stc
mov
mov
adc
and
lds
jbe
cmp
ds
sub
and
fcomps
fimull
jb
int3
lock
jl
cltd
insl
movsl
mov
mov
lods
xchg
insb
popa
add
jmp
mov
lea
inc
jecxz
mov
lcall
and
out
out
adc
mov
mov
mov
dec
mov
js
outsb
mov
jnp
pusha
xchg
xchg
cltd
xor
cmpsb
xor
rcrb
sahf
fcomps
xorb
in
in
lea
dec
fmuls
push
js
jo
call
pop
inc
dec
mov
xchg
pop
gs
addr16
xor
push
add
je
or
jns
lea
cmp
shlb
std
out
pop
mov
rcr
rcrb
test
pop
jnp
or
pop
sbb
mov
aam
das
mov
pop
fistl
leave
fimuls
adc
or
push
int3
mov
or
iret
cli
inc
xchg
ss
jecxz
insb
sti
adc
fdivrs
sbb
jl
stos
into
data16
sbb
icebp
scas
mov
cmp
mov
pop
into
push
add
add
cmpsl
or
mov
and
xor
ja
mov
mov
add
loop
dec
outsl
or
lea
fstpt
fdivs
fisubs
mov
mov
dec
cmpsb
sti
xor
cmp
mov
movsw
or
xor
add
testb
movb
ljmp
test
mov
jp
push
push
lods
sub
jl
sub
mov
inc
dec
test
xchg
loopne
mov
cmp
cmpsb
cmp
mov
imul
sub
jne
push
pop
xchg
or
mov
adc
int3
out
pop
repz
shll
cmp
imul
mov
movsl
cmp
cmp
adc
arpl
jbe
mov
loop
add
xchg
fsubl
aas
sti
push
adc
mov
add
cltd
mov
jae
imul
fsubl
cs
repnz
adc
test
bound
lods
addr16
into
out
in
scas
and
int
inc
ljmp
sbb
mov
push
mov
scas
jge
shlb
in
push
or
ret
xchg
xchg
hlt
inc
sub
push
mov
sub
js
push
pop
pop
test
out
sub
mov
jmp
adc
movsl
pop
xor
xorl
pop
out
add
cmp
jns
cmp
aaa
xor
aas
stos
popa
popf
inc
adc
fcomps
and
pop
mov
fimuls
cmp
add
into
inc
cltd
xlat
sbb
push
lock
test
ret
xchg
inc
sbb
xchg
daa
cs
or
inc
in
insb
test
add
aaa
test
adc
ds
ss
or
mov
ja
stos
and
push
mov
jg
bound
popa
cmp
sbb
loope
scas
dec
mov
push
mov
jne
dec
int3
sub
xor
push
pop
add
inc
nop
repz
andb
xor
cli
test
cmp
push
cs
out
add
jbe
movsb
cs
lds
jne
mov
push
add
call
mov
das
mov
jp
sbb
add
jmp
mov
sti
mov
mov
test
bound
add
jle
shl
mov
cmp
data16
cld
mov
push
inc
xchg
jmp
stos
lret
mov
push
call
fcomps
cmp
movsb
aad
lods
call
push
sub
pop
or
ds
loop
fs
divb
mov
loope
es
xor
mov
repz
add
in
fs
xchg
mov
icebp
dec
sbb
sahf
xor
outsb
cmpsl
lret
cwtl
rcrw
jbe
jo
pop
sub
faddl
xor
ror
push
dec
jae
inc
js
test
sti
push
test
dec
out
sbb
std
push
jns
outsb
hlt
dec
inc
faddl
clc
jge
adc
or
movsl
inc
into
cmp
sbb
xor
jb
movsl
inc
out
dec
sahf
arpl
or
cs
insl
inc
into
inc
jmp
sti
out
test
push
gs
ret
rcll
cmp
inc
sbb
jae
pop
neg
xchg
xor
jmp
je
jo
fstl
data16
pushf
jbe
ja
pop
std
nop
jbe
test
push
add
ret
add
lcall
dec
movsb
pop
jecxz
push
nop
push
push
inc
push
sub
push
sbb
inc
repnz
lock
sub
xchg
add
lods
cli
ficomps
add
dec
repz
pop
mov
fs
adc
lods
and
arpl
xchg
pop
add
sub
insb
lods
ss
insl
mov
mov
mov
sarb
push
cmp
fdivl
mov
test
cmp
jg
jno
xor
xor
mov
lds
out
stc
insb
imul
insl
mov
cmp
in
cmp
fstl
mov
jnp
jo
mov
xchg
scas
lahf
cmpsl
mov
lea
pop
jl
and
lret
roll
cs
mov
pop
push
scas
jne
xorb
push
loop
inc
test
dec
mov
push
stos
push
daa
es
gs
mov
scas
adc
test
movsl
outsl
sub
jae
cmp
mov
das
mov
mov
lock
ficomps
gs
sbb
scas
test
out
xchg
cmp
call
loop
cmpsb
add
mov
mov
neg
into
movsb
cs
pushf
pop
jo
rclb
dec
mov
and
out
lcall
out
wrmsr
mov
xor
scas
in
xor
jmp
sub
int
or
and
es
xor
test
jae
cwtl
xchg
dec
mov
in
cli
mov
fs
mov
into
sti
icebp
pop
xchg
jbe
ffreep
inc
sbb
loope
adc
push
cmp
dec
cs
mov
fwait
mov
out
dec
mov
enter
cli
mov
jecxz
hlt
mov
mov
cld
inc
in
pop
adc
scas
stc
cmp
mov
mov
std
mov
mov
add
bound
adc
rcrb
mov
sbb
xlat
std
aam
out
dec
in
pop
loop
mov
cwtl
pushf
popf
push
xchg
lods
mov
xchg
cmpsl
daa
lret
push
dec
mov
jp
add
and
dec
lret
cmp
scas
mov
or
cltd
push
xor
push
dec
push
mov
xchg
or
xor
pop
push
fwait
lods
mov
rcrl
push
test
repz
ds
dec
outsl
int3
mov
or
lret
xchg
sub
repz
push
fadd
mov
call
loopne
sti
adc
dec
sbb
nop
xor
mov
add
aam
jb
sub
jbe
mov
adc
adc
jb
mov
int3
gs
or
or
mov
mov
lods
xlat
addl
les
fimuls
push
mov
imul
imul
mov
inc
out
cmp
push
test
mov
out
inc
psubb
aas
push
jecxz
dec
aaa
insb
mov
es
fnstenv
xor
test
mov
imul
flds
lcall
sub
shlb
xor
cmc
adc
cmpsb
mov
jbe
into
sbb
mov
dec
adc
adc
and
shlb
dec
hlt
xchg
ja
icebp
push
push
pushf
mov
mov
jbe
xchg
in
and
aas
je
adc
xor
idivb
pop
mov
xor
mov
subb
rcr
adc
arpl
inc
ror
or
imul
cmp
mov
pop
scas
pusha
push
jbe
mov
add
js
fnstcw
jne
xlat
stos
clc
mulb
pop
cmp
lcall
imul
push
push
mov
fs
or
imul
fmull
data16
lretw
mov
mov
xchg
and
adc
ljmp
es
in
pop
fldl
test
push
aaa
jb
rcrl
adc
lcall
mov
xor
xchg
or
icebp
fstpl
push
adc
inc
mov
mov
push
addb
mov
pop
loopne
imul
dec
and
xchg
cwtl
push
and
sbb
into
fistl
sub
pop
pop
xchg
jl
dec
mov
gs
outsl
inc
push
test
je
cs
add
popa
jp
cltd
mov
jg
mov
loope
es
outsl
ret
shrl
sub
test
adc
dec
lea
popf
sub
imul
ret
ja
add
aam
jp
sbb
push
cs
mov
xchg
fisubrs
inc
std
aam
arpl
pushf
scas
stc
add
in
push
loope
xchg
add
jbe
lahf
xor
xchg
pop
and
xor
jmp
sub
mov
pushf
mov
xchg
arpl
rcll
cwtl
bound
ljmp
dec
push
pushf
mov
adc
js
mov
jb
push
mov
jl
dec
jmp
arpl
xchg
mov
jecxz
loop
dec
outsl
rclb
push
bound
iret
xchg
sub
ja
pusha
cmp
mov
lods
xor
jp
add
movsl
jne
fcomp
push
jnp
mov
aam
dec
inc
xchg
in
xchg
push
addr16
cmp
xchg
jg
jne
dec
dec
xlat
sub
imul
sub
popa
dec
aas
xchg
xor
fmuls
sbb
xchg
or
adc
cli
adc
push
xchg
lock
std
mov
int3
ljmp
and
jo
cmp
sbb
loope
lock
sub
cmp
xchg
cmp
sub
sbb
push
jge
xchg
repnz
cmp
sub
pop
ficoms
mov
sub
int
sahf
cltd
imul
sbb
jnp
cld
xchg
rolb
fnstenv
mov
xorb
fcmovb
repz
and
dec
push
dec
push
cmp
or
sub
nop
imul
int
adc
inc
xchg
int3
push
movb
imul
daa
mov
stos
push
jnp
mov
test
mov
or
jmp
test
rcrb
sub
mov
mov
data16
jo
fstpl
and
mov
sti
jno
data16
sbb
cmp
xor
jnp
cmp
add
nop
push
dec
test
push
sti
jae
cmc
data16
ja
daa
push
aas
sbb
clc
imul
inc
test
leave
push
xchg
hlt
pop
lret
or
mov
dec
cmp
pop
push
rorl
into
in
jb
dec
xchg
mov
movsl
mov
addr16
addr16
test
cld
adc
in
in
je
pushl
mov
jge
movsb
je
insb
fs
fs
scas
cmpsb
testl
loope
jno
test
pop
pop
scas
mov
pop
out
fnstenv
jmp
outsb
xor
rcrb
inc
mov
lahf
and
xor
xchg
rorl
es
ret
mov
in
or
pop
movsb
mov
call
and
xchg
testl
jge
cmp
pop
in
rolb
and
xchg
cld
testl
jb
dec
lds
test
push
jl
push
loope
imul
out
leave
or
adc
add
pop
xchg
mov
jno
adc
pushf
add
dec
ss
mov
out
adc
xchg
xor
push
mov
jbe
dec
sbb
jmp
shlb
lods
xlat
idiv
inc
test
daa
jge
stos
mov
dec
das
nop
leave
cmpsb
ret
cmc
sub
jns
fwait
std
mov
int
clc
adc
out
cmp
push
mov
sahf
sahf
mov
rorb
mov
inc
mov
cmp
in
popf
xchg
jle
enter
add
adc
mov
push
and
into
popf
cmp
in
rcrb
jno
push
lods
cmpsb
pop
out
shlb
arpl
xor
adc
lret
push
xchg
imul
gs
pop
loope
arpl
lahf
pop
xor
loope
dec
sub
push
fwait
inc
clc
inc
xor
cmpsb
or
scas
dec
adc
aam
je
xchg
divb
mov
fwait
push
ljmp
sub
jl
jmp
lock
pop
push
mov
addb
cmp
add
push
mov
jmp
adc
andb
outsl
add
mov
lods
shlb
negb
and
int
jnp
scas
pop
xorb
sub
mov
pop
insb
mov
mov
inc
and
cltd
mov
adcb
dec
add
cmp
mov
inc
fdivrs
mov
jbe
out
insl
iret
bound
fwait
or
xor
mov
fadd
mov
and
lret
arpl
mov
aam
cmpsb
dec
out
loop
testl
or
inc
in
xor
daa
icebp
cli
in
pop
inc
stc
sbb
mov
or
jnp
bnd
cld
lcall
push
cmpsl
in
xor
addb
xor
sub
lea
fs
lret
dec
add
stos
cmp
jns
push
jnp
dec
jne
pop
ds
stos
mov
or
insb
pusha
sti
seta
cmp
cmp
or
xchg
sub
sbb
fisttps
rcrb
jns
push
filds
jecxz
add
fists
jbe
loope
and
lcall
and
fnstenv
xlat
rcrb
mov
sbb
ret
xchg
mov
lret
or
fisubrs
ja
rcrb
push
xchg
cwtl
js
add
inc
adc
adc
pop
and
mov
int3
push
mov
jbe
push
js
lret
mov
xchg
cmp
jg
ficoml
clc
and
fs
fidivrs
adc
add
daa
push
insb
outsb
pop
pop
in
popf
push
sub
and
and
ret
pop
cmp
add
dec
les
cmpsl
push
mov
repz
dec
jl
out
icebp
out
xchg
shll
loopne
in
push
movsb
adcb
adc
sub
jp
inc
movsl
inc
scas
popf
sahf
ret
push
xchg
pop
dec
lods
and
dec
or
jae
dec
mov
inc
mov
and
dec
push
leave
subl
ficomps
imul
test
mov
pop
xchg
pop
pop
jno
mov
inc
mov
gs
push
mov
jbe
ljmp
cmp
jo
pop
data16
cmp
cmp
mov
jmp
shll
jge
cmpsb
mov
xlat
out
pop
out
and
rclb
push
xorb
xor
or
test
pand
xchg
test
xor
out
ljmp
xor
adc
cli
push
mov
fsubl
nop
xchg
pop
sbb
jnp
test
sbb
frstpm(287
jbe
inc
pop
xlat
shr
or
sarb
in
repz
inc
imul
insb
adc
mov
hlt
dec
int3
mov
iret
push
divb
pop
push
xor
push
and
outsl
out
aas
or
mov
ficoml
test
jne
pop
cmp
fstl
repz
inc
ljmp
addl
inc
jle
fdivl
movsl
ficoms
adc
cmpsl
xor
dec
ljmp
shll
int3
mov
add
mov
fdiv
test
sbb
jns
jle
dec
stos
push
pushf
shlb
xchg
daa
lds
scas
rorb
mov
add
push
push
lea
or
fwait
in
bound
and
xchg
jp
jnp
jg
test
das
dec
mov
enter
sbb
stos
xchg
rol
xor
jb
sub
or
lea
call
cld
clc
std
call
pop
js
push
hlt
jno
stos
int3
xor
es
jnp
or
mov
lods
and
xchg
adc
stos
pushf
inc
cmp
out
lods
push
lcall
adc
das
sti
xchg
fwait
lock
div
jle
loop
jp
push
aam
int3
add
push
xor
lahf
pop
inc
imul
pop
adc
xchg
mov
pop
xchg
inc
out
lea
cld
sub
pusha
mov
in
xor
ret
and
adc
push
mov
ljmp
frstors
xchg
inc
cmp
mov
jnp
jae
cmpsl
sub
in
in
sahf
mov
sub
sub
iret
adc
psubusb
pop
imul
std
sub
insb
pop
fucomi
cltd
or
aas
rorb
jle
roll
xor
das
not
fsts
js
negl
imul
aas
sub
cmp
cmpsl
pop
dec
cmc
lret
movl
and
mov
mov
movsl
mov
shll
popf
out
xchg
or
ret
sbb
inc
fsubs
loop
add
stos
sbb
xchg
clc
inc
pop
sub
rep
ret
push
in
inc
stos
cmp
mov
pop
dec
xor
jl
int
nop
fstl
rcrl
inc
mov
xor
dec
adc
sbb
mov
dec
std
in
cmp
movsl
or
pop
pop
add
lret
notb
dec
add
out
std
jo
xor
cmpl
mov
jmp
js
pop
push
jge
shll
sarl
pusha
sub
mov
jnp
mov
imull
inc
mov
fists
test
xchg
pop
pushf
xchg
mov
lcall
outsb
xchg
push
push
imul
jno
lret
fisubrs
scas
jge
ret
rorl
sub
call
push
lods
pop
mov
jo
push
pop
xor
sub
orl
or
xlat
and
push
and
nop
das
psrad
leave
mov
ret
mov
jno
sbb
out
ss
xor
cmpsl
cmp
sahf
out
cli
cmp
js
shll
mull
inc
pop
cmc
fs
mov
pushf
pop
pop
cmp
sbb
jg
add
jp
dec
into
and
dec
shlb
rolb
divl
jo
or
cmp
inc
lret
and
xchg
adc
arpl
mov
xor
enter
movsb
js
fidivrl
cli
stc
mov
ret
arpl
cmp
xchg
pusha
mov
sub
movsb
jmp
arpl
outsl
cmp
cmp
cli
xchg
dec
push
test
xchg
dec
jp
xchg
test
mov
xor
sub
rcrl
jp
das
lret
dec
pop
add
or
adc
xor
sbb
and
push
clc
or
and
test
sti
jae
testl
arpl
push
stc
mov
xorl
imul
das
enter
push
or
es
or
mov
cmp
sub
cltd
xchg
mov
jmp
dec
ljmp
insl
xchg
jle
frstor
sub
arpl
pop
mov
inc
aam
xor
inc
lea
jb
cmp
adcb
xchg
and
ja
push
js
lret
jne
lahf
jle
xchg
nop
rcll
out
pop
test
jecxz
mov
inc
aam
stc
sub
pop
sbb
push
jg
jns
mov
fbstp
mov
mov
jmp
adc
mov
and
push
mov
int
call
adc
sbb
or
enter
popa
xchg
movsl
mov
inc
sbb
and
imul
mov
dec
and
mov
and
aad
mov
push
nop
add
xchg
call
jg
pop
xchg
scas
mov
pushl
cld
in
leave
push
mov
insl
imul
xchg
out
mov
addr16
lds
adc
shrl
addr16
fistl
xor
leave
adc
xchg
data16
mul
pop
shlb
int
cmpsb
sbb
outsb
and
aam
std
adc
insb
cmc
add
mov
enter
push
mov
dec
lea
or
testb
mov
punpckhdq
adc
popa
test
adc
xchg
xor
clc
in
int
jae
push
int3
mov
and
ljmp
sub
ss
pop
mov
scas
test
lods
es
cmp
jl
xor
xchg
pop
mov
pop
ljmp
xchg
and
xchg
mov
aam
adc
loope
out
in
adc
inc
mov
push
in
xchg
inc
sbb
and
mov
je
int3
enter
xor
and
cltd
int3
or
push
es
inc
pop
add
repnz
lods
xor
jecxz
sti
ret
lahf
mov
mulb
push
je
pop
mov
cld
pop
inc
insb
ret
push
popa
sbb
fmull
int
lds
loopne
cltd
addl
push
adc
aad
dec
ffree
sub
in
test
mov
aad
mov
push
std
pop
mov
sub
sarb
xchg
lahf
pusha
mov
stos
cmp
mov
mov
cld
inc
mov
cmpsb
sarb
dec
sbb
jnp
sbb
sbb
inc
out
push
hlt
push
push
adc
pop
mov
daa
push
sub
inc
jp,pt
jo
mov
push
push
or
adc
test
dec
xchg
ljmp
inc
sahf
call
fs
mov
loop
outsl
adc
sbb
jg
jne
xlat
mov
cmpsl
outsl
sub
mov
clc
xchg
sub
push
fst
jbe
movsl
push
mov
sbb
hlt
xchg
mov
jbe
dec
xchg
or
push
aaa
jl
mov
enter
adc
push
push
das
lds
jnp
pop
add
cmpsb
adc
sub
scas
cmp
jno
lret
xchg
cmp
sub
gs
lret
movsl
jns
and
out
add
push
lahf
push
fisubrl
lret
mov
lea
sahf
jne
jno
add
hlt
sahf
cmp
xchg
mull
push
rcll
ja
call
enter
lock
in
sub
mov
mov
into
cmp
out
shl
lods
add
push
cli
mov
lock
cwtl
mov
inc
cmc
nop
mov
pop
hlt
pop
call
arpl
mov
fs
orl
push
pop
aas
das
test
roll
lods
xchg
add
outsb
jno
fdivrp
pop
int3
dec
mov
gs
sahf
test
push
mov
test
xchg
jmp
rcrl
sub
pop
in
sbb
lahf
dec
aad
push
or
mov
cltd
imul
and
mov
mov
push
xchg
es
xchg
and
out
pop
or
bound
and
je
mov
das
adc
mov
in
in
fstps
pop
mov
cwtl
mov
mov
xor
push
test
xchg
cwtl
cmp
sub
jmp
fadd
push
mov
mov
xchg
jb
sub
lcall
es
aam
repnz
pop
push
js
out
fs
sbb
mov
hlt
jbe
dec
push
lcall
sahf
jnp
mov
push
jne
add
dec
pop
sarb
xchg
arpl
into
inc
add
outsl
xchg
cltd
loop
mov
rcll
lcall
jmp
jg
jae
dec
xchg
sub
mov
shlb
mov
jbe
mov
dec
add
clc
sub
dec
int
ret
pop
dec
dec
data16
rcrb
popf
repnz
pop
lock
jge
leave
and
les
add
sub
mov
xor
mov
aam
ljmp
mov
cmp
mov
je
or
std
push
add
sbb
scas
mov
add
cwtl
ror
fcoms
rcll
push
and
leave
out
xchg
and
cmp
icebp
test
cmp
leave
cltd
sub
out
ret
mov
pop
push
outsl
cld
cld
fsubrl
cmp
push
je
pop
sahf
mov
dec
xor
ror
ljmp
xchg
pop
pop
frstpm(287
mov
test
inc
mov
fsubrs
xor
mov
std
add
mov
inc
dec
cltd
mov
repz
xchg
cmp
xchg
adc
int
add
ss
mov
xchg
push
push
and
mov
jns
dec
sub
clc
cmpb
mov
in
jle
fisttpll
mov
cmpsb
add
push
rcrb
and
bound
orl
push
add
lahf
jp
sub
cld
add
pushf
ljmp
mov
test
lret
pop
push
or
mov
es
dec
aam
xor
jae
push
out
sarb
and
inc
stos
jle
negl
mov
stc
les
imul
popf
out
jg
inc
int3
fdivrl
out
lahf
int3
add
fdivs
mov
shll
push
outsb
xchg
push
push
ljmp
pop
sahf
add
test
scas
mov
pop
sbb
js
pop
cmp
dec
clc
fdiv
add
in
xchg
jno
dec
pop
stos
repnz
xchg
out
and
cmc
pusha
cmp
out
xchg
out
cwtl
repz
shlb
or
mov
in
scas
adc
cmpsl
inc
rorb
inc
test
push
sbb
adc
jle
mul
or
cmpsb
pop
push
daa
inc
dec
adc
xor
jmp
and
mov
jne
cmpsb
fsubr
sbb
inc
aaa
int3
or
out
cmpsb
mov
sub
mov
mov
ss
pushf
cmpsl
xchg
icebp
fldenv
mov
pop
pop
pop
pusha
fdivr
leave
or
rorl
shrb
das
stc
sbb
push
dec
and
sbb
clc
call
mov
shrb
leave
and
xor
lock
and
xchg
pop
push
cli
aad
mov
cmpsl
xchg
arpl
or
lea
xor
push
inc
or
ret
movl
cmpsl
mov
out
pushf
adcl
sub
fdivrs
inc
pop
dec
push
cmp
inc
arpl
cmp
pop
pop
rcl
add
or
int
jge
icebp
andb
xchg
jmp
inc
pushf
and
pop
fdivs
roll
clc
aas
cmpsl
jge
jl
negb
fcomps
xor
ret
mov
jns
xor
mov
data16
mov
fwait
sub
push
shrl
test
mov
xchg
xlat
daa
push
cmp
and
cs
or
push
or
inc
and
cwtl
pop
fs
fists
jbe
mov
cmp
push
jecxz
dec
ficomps
pop
fucomip
incb
bt
lcall
adc
ret
xor
cmp
adc
xchg
insb
adc
jb
fnstcw
jecxz
ss
lods
mov
pop
push
lds
mov
push
fsubs
and
insb
xchg
mov
mov
xor
es
pop
cmc
pop
dec
repz
sub
ficompl
out
sbb
pop
mov
js
push
inc
mov
hlt
addr16
push
dec
cmp
cli
xchg
mov
sub
std
cmp
push
mov
sub
clc
mov
aam
popa
jp
sti
cs
lcall
fildll
arpl
mov
sbb
mov
cmp
mov
xor
pop
je
outsl
stos
inc
in
mov
and
mov
daa
pushf
stos
mov
cmc
decl
adcb
sbb
push
sub
sti
pop
inc
testl
ja
aad
out
fistps
daa
enter
sbb
aad
fldcw
clc
into
shrl
mov
test
enter
aad
jo
xlat
pusha
and
rclb
orl
push
adc
or
shll
jl
inc
dec
test
test
jmp
push
inc
out
out
lret
pop
aaa
gs
mov
cwtl
lea
icebp
push
jae
test
mov
aaa
addr16
wrmsr
xchg
adc
movb
xchg
jge
mov
jno
push
push
mov
test
movl
push
sub
inc
mov
pusha
push
add
push
outsl
in
pushf
push
das
or
ja
mov
push
push
xor
cmp
jge
lcall
mov
dec
or
divl
xor
pushf
daa
and
es
outsb
cmp
fbld
lods
inc
inc
mov
sub
bound
pop
jge
clc
stos
jnp
outsb
cmpsl
sub
sbb
fbld
test
fimull
imul
push
aam
rorb
jo
fsubr
cmc
add
mov
jge
xchg
test
cmp
xlat
sbb
cltd
xorl
cmp
mov
test
ret
dec
test
pusha
dec
cld
fs
and
adc
out
adc
mov
syscall
sti
push
pusha
lahf
inc
pop
push
sub
out
mov
push
dec
inc
das
stos
sbb
add
mov
push
mov
mov
aas
xor
cmp
lcall
jmp
xchg
lds
sub
mov
ljmp
insb
ss
sarl
dec
int
es
mov
je
xor
sbb
jl
into
adc
push
outsb
push
pop
movsb
negl
outsl
es
test
hlt
popa
push
les
insb
ret
cmp
js
cmp
inc
sbb
lcall
int3
ljmp
aam
mov
fisubrs
clc
insb
pop
add
scas
sbb
inc
sbb
cwtl
sbb
dec
add
ficoms
adc
sub
dec
cmp
and
or
mov
stos
enter
add
pop
mov
sbb
lods
inc
mov
sbb
sbb
cmpb
fwait
xchg
xchg
xchg
mov
cmp
adc
out
push
adc
dec
mov
push
inc
pop
adc
cmp
insl
jmp
jnp
pop
std
adc
mulb
nop
hlt
pop
lret
lods
dec
mov
cmp
in
jns
decb
scas
fists
fmulp
cli
inc
pop
leave
xor
les
lcall
dec
mov
or
movsb
lret
jge
jecxz
stos
push
sbb
movsl
xchg
mov
clc
xchg
mov
jge
mov
lods
lds
gs
iret
cmp
imul
je
mov
shll
lahf
orb
push
xchg
or
and
mulps
jno
xlat
pushf
add
adc
lret
nop
mov
inc
mov
sub
sbb
lret
fbld
stos
movsb
sarb
iret
test
mov
xchg
fnstcw
or
cs
jmp
xchg
aam
or
repz
inc
mov
inc
inc
sub
ss
mov
clc
jp
pop
lock
pop
es
stos
adc
rorb
leave
dec
mov
enter
and
fidivrl
imul
cmp
sub
sbb
xchg
push
lock
xlat
iret
pop
jle
jl
jecxz
xchg
sarb
pusha
adc
and
and
xchg
mov
std
lahf
sub
das
dec
mov
inc
jo
ss
lcall
fisttpl
pop
mov
push
inc
insl
popa
std
push
xor
pop
push
insl
fimuls
aad
dec
jne
xor
fbstp
sahf
xchg
mov
or
dec
pop
out
arpl
mov
movsb
xchg
out
ss
cmpl
cli
repz
out
sbb
fwait
cmp
out
lods
outsb
xchg
cld
or
push
loop
out
mov
int3
and
ja
mov
jns
popf
mov
icebp
push
repnz
pop
aaa
xchg
cmp
out
mov
out
mov
sub
hlt
sub
ljmp
push
sub
in
fsubrs
inc
push
test
out
jle
lods
addl
in
mov
pop
lea
int
iret
add
popa
pop
bound
or
or
sub
out
sarl
fwait
cld
cmp
and
adc
jecxz
pop
push
sbb
mov
out
or
int
mov
jo
sbb
cld
test
jg
inc
mov
jecxz
cltd
push
inc
popa
mov
pop
xor
lcall
xchg
cli
out
into
js
cmpsl
imul
mov
jg
mov
mov
pushf
std
mov
shr
add
pop
enter
addr16
mov
jge
push
jl
sbb
pop
arpl
icebp
out
popf
loop
in
pop
hlt
aas
shrl
bound
fidivrl
or
pop
mov
nop
clc
xchg
jecxz
inc
stos
loop
fidivs
inc
or
sbb
sub
pop
mull
ss
mov
or
mov
fidivs
and
inc
je
sbb
mov
fcmove
movl
jb
inc
stos
scas
gs
push
inc
sbb
mov
and
inc
push
mov
and
or
mov
add
lods
aam
mov
fnstcw
and
loopne
mov
and
imul
jmp
jno
in
in
std
mov
sbb
mov
icebp
add
inc
dec
or
fwait
mov
cmp
roll
mov
jg
mov
pop
mov
gs
call
es
std
xor
sub
cltd
jae
loop
mov
jle
addr16
xchg
mov
lock
dec
ror
pop
rorl
icebp
jl
mov
out
stos
jnp
and
lret
mov
jl
push
imul
mov
jb
xchg
test
push
pop
nop
jnp
add
mov
outsl
enter
inc
fs
adc
lods
loop
jecxz
dec
or
push
jecxz
in
ja
mov
lahf
faddp
enter
or
js
mov
push
mov
xchg
push
inc
jl
or
es
pusha
sbb
push
loop
fldcw
push
push
jmp
fnstcw
cmp
dec
pop
fwait
outsl
lea
dec
mov
mov
push
cmp
div
pop
mov
sub
jecxz
das
iret
scas
xchg
jno
repz
dec
sub
clc
add
outsl
std
test
in
nop
xlat
fnsave
cmp
sbb
or
dec
push
sbb
sahf
add
ds
loopne
add
repz
out
or
mov
mov
pop
sub
jmp
fildll
imull
into
add
cmp
and
xchg
mov
loope
das
mov
mov
jmp
in
insl
insl
add
pop
in
and
inc
xchg
xor
cli
xchg
mov
sub
cmp
rcrb
pop
pop
dec
divb
inc
arpl
cmpsb
jae
pop
stos
mov
dec
hlt
inc
xchg
pop
outsl
shl
sbb
adc
int
mov
xchg
jl
push
jb
adc
test
mov
scas
fmul
cld
and
jl
test
aam
cmp
cmp
daa
push
icebp
testl
mov
fwait
xor
xlat
iret
inc
mov
mov
imul
scas
shl
aam
sti
cld
mov
insb
std
imul
cmp
cltd
sbb
hlt
sub
pop
les
sbb
push
rolb
pop
ljmp
ds
and
punpckhbw
mov
sub
es
mov
les
sarl
mov
inc
jp
push
jb
out
push
cmp
lcall
negl
jle
aaa
adc
sbb
push
cmc
jecxz
add
inc
stc
std
stc
or
std
and
imul
in
shlb
pop
repz
push
push
cmp
adc
aas
mov
loopne
push
cmc
outsb
push
sti
cmpsb
subb
es
mov
pop
cld
dec
or
jl
stos
movsl
mov
cli
add
mov
adc
in
pop
sbb
push
iret
cmovl
pop
lahf
lret
xchg
fwait
xchg
pusha
inc
lods
push
std
fiadds
pop
dec
push
outsb
nop
add
ficompl
das
hlt
bound
sbb
inc
pop
push
outsb
das
ret
mov
enter
ret
mov
nopl
sbb
inc
dec
repnz
icebp
popf
rclb
dec
fcomi
mov
inc
or
mov
in
cmp
icebp
mov
xchg
and
daa
inc
in
fstpt
inc
pop
jg
movb
xorl
adc
xchg
add
movsl
imul
sarb
icebp
and
fwait
pop
repnz
les
cmpb
xchg
loope
out
out
mov
cs
adc
mov
sub
inc
shrb
xchg
adc
fstps
add
mov
sub
leave
xor
pop
clc
notl
imul
jmp
loope
jle
or
mov
and
or
xchg
and
mov
test
xchg
add
fmull
in
mov
arpl
pop
cli
sub
jge
xor
mov
cli
cmp
loope
mov
jg
jle
fwait
push
sbb
cmp
push
repz
rcll
dec
cmp
lods
inc
orb
cmc
fwait
sbb
in
fwait
fidivrs
sub
aas
mov
jns
sbb
xchg
push
fidivrl
test
cld
ja
xor
out
push
lahf
jns
jmp
adc
decb
sarl
inc
shll
sbb
outsl
enter
imul
xchg
pop
xor
or
cmp
cmc
sbb
mov
mov
jmp
push
ds
push
cwtl
xor
ret
stc
mov
sub
mov
push
aas
clc
fnstsw
andb
jne
push
jbe
xor
push
jecxz
loopne
imul
in
pusha
push
pop
mov
insb
shlb
adc
xchg
inc
cmp
jae
sar
pop
dec
or
jae
jnp
pushf
mov
ret
icebp
out
pop
ds
sbb
out
xor
mov
or
mov
sbb
shl
pushf
leave
add
fs
cmp
inc
add
and
aaa
clc
mov
call
stc
xchg
xor
sbb
mov
push
and
stos
mov
mov
fnstcw
jmp
jnp
adcl
in
push
imul
adcb
pop
out
fldt
xor
mov
or
cmp
adc
in
push
test
loopne
push
inc
mov
icebp
test
add
add
test
mov
xchg
xor
in
test
add
daa
pop
pop
popl
pop
arpl
les
scas
ljmp
les
ret
or
xor
ss
pushf
xorl
mov
xchg
mov
pop
dec
scas
jp
add
repz
lock
mov
pop
outsl
das
loop
aaa
push
rolb
mov
stos
cmp
out
push
sbb
test
and
mov
mov
lcall
push
sbb
fimuls
dec
fcmovu
mov
jle
xchg
sbb
aam
mov
xor
sub
mov
jns
xor
nop
add
and
repnz
or
xchg
cmp
xor
stos
jne
sbb
or
mov
decb
sbb
lcall
bound
lret
mov
xchg
jmp
pop
lods
xchg
lock
xor
daa
add
pop
push
mov
lret
jns
pop
mov
nop
sub
fisubrl
jbe
mov
ret
sbb
mov
mov
xchg
insl
jno
push
addr16
mov
rcll
xchg
adc
nop
mov
shrl
cmp
jno
jb
cs
daa
fisttps
xchg
sub
dec
lods
mov
mov
nop
es
fidivs
out
mov
add
jge
fwait
xor
dec
mov
ja
xor
sti
ret
jbe
and
or
mov
add
sbb
incb
inc
stc
mov
push
add
pushf
mov
pop
push
push
mov
dec
sbb
rorl
icebp
sahf
cmc
fisttpl
loopne
orb
pop
imul
or
or
dec
xorl
ror
cwtl
jl
inc
sbb
xor
push
mov
loope
dec
mov
xchg
inc
pop
dec
fsubl
mov
insb
andb
pusha
aaa
jecxz
aas
push
jle
mov
out
mov
imul
les
xchg
call
and
in
push
and
sbb
pop
xchg
pop
iret
pushf
jecxz
loop
ret
fs
mov
ftst
test
dec
push
xchg
dec
xchg
out
sbb
pop
outsb
cmp
and
movsb
ret
in
mov
pop
lret
dec
mov
xor
sbb
idivb
cmp
cmp
mov
and
es
stc
repz
jo
sbb
loope
jno
iret
and
add
cs
fadds
lds
mov
scas
aad
dec
sbb
mov
ljmp
fsts
nop
adc
into
lods
lret
push
out
lret
je
mov
lock
sahf
cltd
pop
sbb
mov
bound
jge
ljmp
fsubl
icebp
mov
xchg
push
rolb
iret
push
adc
jle
mov
xlat
fiadds
inc
mov
test
sbb
push
mov
mov
dec
bound
dec
pop
push
jo
dec
test
outsl
sbb
sbb
pop
dec
aaa
cmp
push
pop
gs
sbb
jle
sarl
outsb
mov
repz
cmp
push
cmp
pop
xor
call
fiaddl
mov
and
test
pop
pop
popa
dec
imul
and
call
popa
pop
mov
lcall
or
xor
mov
cmpsl
sar
xlat
jp
es
testl
nop
pop
test
mov
leave
adc
and
jbe
pop
imul
mov
push
outsb
xchg
add
lock
mov
data16
pop
dec
aad
pop
xor
repz
loope
sahf
jge
repz
push
and
fisubrs
test
fs
lea
push
call
sub
inc
stc
js
inc
jmp
cmpsl
cmp
out
pop
add
imul
nop
inc
mov
sub
dec
stos
lret
cmc
test
adc
test
jle
mov
jno
fldenv
fisubrs
jp
xchg
or
push
scas
stc
sahf
insl
outsb
loopne
mov
hlt
mov
out
lds
fadd
sub
xchg
inc
jno
xor
das
pop
bound
lods
jae
sahf
sub
addr16
push
add
pop
sbb
adcb
pop
jo
xlat
push
stos
adc
daa
lret
and
decb
sub
ja
cmp
scas
filds
in
and
pushf
xorl
sbb
add
mov
fiaddl
hlt
push
mov
loopne,pn
push
xchg
cmpsl
cmp
xor
lfs
mov
es
clc
cmp
inc
loopne
or
add
arpl
and
inc
xchg
add
push
jo
clc
ja
adc
test
call
lods
pusha
jo
vpminub
mov
aad
mov
mov
mov
push
pusha
jg
movsb
jmp
or
lahf
sub
sbb
sub
xchg
xchg
adc
movsl
dec
mov
pop
xchg
out
add
pop
mov
mov
js
je
mov
and
adc
push
cld
stos
mov
inc
fnstenv
mov
iret
cltd
rcll
test
jmp
mov
cmp
lahf
pushl
sub
mov
cmp
and
adc
cmpsl
push
cmp
int3
cs
fmull
push
hlt
rorb
repz
inc
scas
lock
sub
icebp
xor
mov
or
add
adc
stos
jl
mov
ret
sbb
les
insb
adc
enter
outsl
sub
int3
repz
dec
hlt
sub
and
jmp
dec
xor
bnd
imul
mov
mov
push
xchg
xorb
aaa
fwait
mov
sbb
icebp
mov
sbb
push
shlb
jnp
lret
outsb
jno
push
mov
jge
sbb
mov
dec
enter
add
mov
xchg
push
ljmp
inc
jg
clc
or
loope
repnz
add
insl
testb
inc
js
fiadds
repnz
mov
fnstsw
dec
add
mov
dec
out
jae
adcb
lret
fmulp
insb
dec
daa
mov
sbb
adc
sbb
dec
pop
pop
in
push
mov
lahf
or
stos
dec
cmp
mov
sbb
lods
inc
fdivr
fwait
inc
mov
mov
jne
lret
daa
jns
push
inc
xchg
mov
addb
xor
iret
push
cmp
imul
fisubrl
adc
xchg
sub
cmc
xchg
jns
mov
pusha
loopne
adc
clc
into
or
pop
cwtl
mov
cmp
adc
mov
mov
icebp
dec
je
push
add
jmp
cmp
dec
or
shr
out
rolb
or
xor
mov
add
cmp
in
enter
stos
ficoms
mov
mov
sub
push
push
pop
jp
xchg
outsb
arpl
xchg
sbb
mov
fisttpl
in
in
xor
cltd
shll
ds
add
sti
mov
inc
sub
je
arpl
push
aam
sahf
pushf
jle
and
sub
insb
lods
hlt
jmp
mov
jb
ljmp
rorb
cmpsl
sbb
test
cwtl
out
cmp
call
cli
int3
aam
loop
mov
pop
adc
stos
aaa
gs
lahf
pop
xor
ja
or
cmp
and
repnz
cmpsl
adc
daa
stos
dec
sbb
mov
cwtl
in
jge
orb
jle
es
lret
movsb
sub
push
adc
mov
sarl
sub
test
cli
aad
add
dec
arpl
xchg
mov
mov
and
fs
bound
mov
andl
mov
adc
sbb
negl
int3
js
xchg
nop
sub
not
mull
ret
mov
aam
add
add
inc
add
cwtl
adc
mov
jp
movb
mov
push
xchg
dec
push
mov
popa
roll
add
cmp
push
pop
and
adc
rcl
adc
mov
cld
enter
bound
jg
pop
mov
movsl
clc
sbb
xchg
pop
fcompl
pop
nop
sub
or
repnz
mov
loope
nop
sarb
jmp
jecxz
inc
adc
inc
jge
scas
out
xor
pop
mov
sub
mov
lods
popf
mov
rorb
jns
ret
fwait
push
orl
clc
cmp
xchg
fidivrl
sbb
fists
sbb
mov
adc
out
and
push
sub
out
test
shld
push
jecxz
movsl
sub
mov
ret
jns
pop
movsb
lahf
and
pop
sbb
orb
xor
inc
inc
push
out
sbb
push
cmp
gs
rep
fcmovb
loop
dec
cmp
fbld
mov
cwtl
loopne
lahf
push
loopne
out
mov
nop
add
jmp
mov
in
mov
sbb
or
lods
mov
add
add
cmp
cmp
pusha
adc
add
mov
in
dec
aad
add
shll
in
jo
pop
inc
pop
aas
jge
int
or
loopne
mov
fidivrs
pop
cwtl
sub
or
push
cmp
clc
adcb
ss
lods
cmp
cmpsl
out
pusha
xchg
aam
mov
push
pushl
sar
xchg
cmp
push
sub
push
fs
sbb
jg
outsb
and
jmp
cmp
in
neg
sbb
mov
out
xchg
xchg
movsl
lods
or
test
inc
in
mov
shlb
cmp
rcrl
xor
cmp
bnd
out
inc
sub
sbb
cmpsb
lret
stc
push
sub
mov
fxch
add
sbb
loop
pop
test
mov
fisubrl
add
je
mov
into
roll
or
mov
dec
out
dec
mov
push
push
repnz
ljmp
aad
push
push
pop
and
add
hlt
pop
fisttpll
test
pop
push
sub
xor
addl
jg
das
lods
lahf
int
xor
or
lock
popa
sub
rcll
into
xor
mov
lds
push
stc
mov
loope
jg
mov
xorb
cmp
inc
ss
inc
sar
xchg
rolb
fildll
test
sub
cltd
cltd
push
or
inc
xchg
imul
mov
push
aas
dec
xchg
push
in
xor
fisttps
movsl
lahf
sti
loop
or
ljmp
jecxz
pop
jb
xlat
inc
jge
jp
push
cmpsl
pop
fwait
pop
insb
daa
stc
loop
outsb
adc
mov
or
pop
scas
fadds
pop
adc
sbbl
loope
push
mov
mov
inc
loopne
dec
xor
jmp
inc
shlb
mov
outsl
in
xor
or
cwtl
xchg
ficoms
jae
mov
jge
push
lret
and
lahf
mov
jmp
int3
xor
adc
inc
ljmp
dec
aad
insb
and
or
and
jb
sbb
push
inc
inc
and
aaa
mov
stos
ja
add
shl
pop
rol
inc
test
xor
xchg
icebp
stos
xchg
jle
cwtl
push
scas
shlb
in
lret
nop
mov
add
pop
sbb
popf
pusha
and
inc
pop
xchg
hlt
sub
mov
inc
test
xchg
jecxz
pusha
mov
shr
leave
dec
mov
cmpsl
add
inc
out
add
pushf
jae
cmp
mov
push
pop
and
stos
xlat
or
iret
sbb
pop
rclb
push
dec
vminps
mov
sahf
or
imul
lcall
push
inc
adc
pop
out
inc
icebp
call
sub
xchg
les
xor
cmp
or
push
push
lea
shll
xor
mov
movsb
jmp
jnp
xlat
call
cld
bound
hlt
ljmp
std
mov
and
sbb
test
call
mov
add
xor
jp
push
in
gs
dec
push
adc
xor
xchg
lret
or
test
into
leave
cltd
lcall
lret
xchg
movsl
ss
push
mov
pop
das
mov
inc
ficompl
out
mov
xadd
imul
inc
push
scas
mov
jns
repz
mulb
in
sbb
ret
subb
test
pop
cmpsb
jns
sub
sti
cltd
movd
push
sbb
in
rcrb
sbb
mov
jp
push
jg
dec
loope
pusha
inc
dec
sbb
and
addr16
aas
pop
sub
mov
jae
inc
cwtl
mov
clc
cmp
cmpsl
mov
jne
mov
lea
fnstcw
aaa
or
push
scas
lea
test
int3
add
arpl
mov
repnz
leave
repnz
bnd
mov
sbb
dec
sbb
jne
idivl
pop
jle
arpl
test
and
add
jbe
stos
fisttps
sbbl
xchg
mov
inc
cs
stos
shrb
mov
jnp
scas
push
fwait
adc
mov
push
repnz
ds
mov
push
ret
xor
in
in
add
inc
or
adcb
push
pop
mov
in
mov
incb
jns,pt
mov
add
lods
xchg
dec
push
mulb
shr
insb
fisubrs
jbe
add
clc
push
out
and
dec
cs
or
aad
cmp
xor
or
hlt
push
mov
cmp
jecxz
dec
mov
add
iret
rcl
xchg
stos
cmp
adc
ja
xor
xchg
ret
adc
add
pusha
fldt
cmp
jo
fs
mov
loope
sbb
lret
sbbb
sub
les
mov
pusha
jge
xor
adc
mov
inc
xchg
pushf
enter
mov
pop
mov
iret
adc
cld
push
jne
push
sub
aaa
out
cmpl
xor
pop
push
test
lds
clc
hlt
negb
pop
sub
lds
mov
mov
in
sbb
sbb
jmp
sbb
mov
pop
pop
or
stos
mov
andb
lock
pop
dec
jp
loope
out
mov
or
iret
inc
outsb
jne
xchg
fildll
jb
shlb
or
iret
out
in
adc
push
push
sti
lcall
mov
add
xor
mov
imul
cmpsb
mov
jae
fs
xor
jmp
shll
push
or
pop
imul
mov
arpl
movsb
adc
outsl
sub
pushf
cmp
and
sbb
sbb
mov
movsl
dec
arpl
and
adcb
hlt
sub
movsl
mov
or
cwtl
sub
adc
aam
in
in
inc
xor
xor
push
movsb
add
mov
inc
es
fstp
mov
push
add
xor
cld
pushf
xor
pop
les
jne
xchg
jae
pop
jge
pop
mov
lock
scas
pop
pop
je
cmp
adc
pop
pop
mov
lock
adc
sub
cld
or
sbb
in
cli
pop
sub
or
cmp
push
xchg
xchg
mov
mov
xchg
shlb
aam
xchg
mov
jp
cmp
jl
mov
stos
movsb
pop
enter
adc
lods
roll
add
mov
push
mov
stos
aad
hlt
fisubrs
push
xor
int
callw
pop
loopne
in
mov
inc
jl
or
pop
dec
inc
adc
int3
push
out
push
lret
js
sub
add
das
psadbw
clc
int
arpl
xor
push
out
pop
push
xlat
mov
xor
sub
out
gs
pop
enter
repz
fistps
lea
cmp
js
shlb
cmc
divl
ret
mov
rcll
push
mov
or
loopne
ror
xchg
fistpll
aas
jnp
popf
mov
adc
inc
and
aas
mov
int3
insb
int3
xor
or
jns
ds
dec
rcr
dec
or
jp
pop
ljmp
mov
or
pushf
sub
mov
jns
insl
jno
xchg
iret
sub
dec
ret
cmpsl
adc
std
pusha
iret
sub
sub
hlt
pop
sbbl
jl
xor
gs
cwtl
xchg
das
mov
mov
mov
push
cmp
xor
gs
cmp
sbb
cwtl
inc
cmpb
cmp
sub
mov
mov
into
push
mov
inc
lods
jle
shlb
sub
adc
mov
aas
loope
test
jle
inc
nop
xchg
in
pop
sar
addr16
dec
mov
dec
mov
jg
repz
mov
rcrl
sub
out
enter
mov
cmp
xor
out
dec
inc
subb
fiadds
and
outsl
test
aaa
stos
orb
jecxz
pop
mov
lret
pop
insb
sahf
rcr
mov
lds
fwait
movsb
add
add
je
lock
jl
jge
testl
lret
icebp
push
push
ljmp
pop
pop
insl
pop
pop
cwtl
enter
in
xchg
fs
inc
jg
mov
leave
out
pop
cmc
fmuls
mov
inc
lock
mov
bound
scas
cmp
pop
jmp
sub
aaa
add
popf
push
push
add
ds
jge
lods
js
loope
inc
lods
mov
das
mov
stc
add
adc
mov
pop
inc
adc
dec
xchg
and
xor
pop
push
adc
cmp
test
cmp
rorb
mov
movsl
call
mov
sbbb
std
jae
mov
enter
into
inc
inc
repnz
jg
enter
add
sar
inc
mov
adc
cwtl
repnz
outsl
mov
dec
in
mov
sbb
or
nop
cmpsb
xchg
je
std
add
mov
out
call
ds
pop
call
mov
mov
fsubl
inc
mov
nop
data16
test
jmp
popf
cwtl
push
or
rorl
mov
aas
xor
dec
inc
mov
mov
sbb
mov
stc
clc
jl
xlat
gs
sbb
lods
xor
jb
fists
mov
and
scas
lcall
les
mov
enter
mov
out
lcall
dec
inc
push
push
rclw
test
mov
sbb
jmp
mov
and
mov
lea
cmpsl
push
mov
add
push
fidivrs
clc
testl
pop
pop
or
fwait
icebp
mov
popf
out
outsl
ret
inc
xchg
hlt
outsl
mov
inc
jl
je
mov
test
and
xorl
out
out
cs
repnz
das
cmpsl
ja
mov
mov
inc
jbe
pop
jge
pop
aad
and
and
dec
adc
jnp
shll
enter
in
daa
mov
xchg
fwait
mov
inc
gs
and
in
jmp
ss
adc
aas
xor
sub
xor
xchg
hlt
xchg
fs
xor
sbb
mov
movsl
in
jno
divl
sbb
stos
fiaddl
pop
test
std
fsubl
jo
aad
ljmp
and
xor
xchg
or
xor
aas
xchg
lcall
xor
mov
inc
push
jbe
stos
mov
js
stos
sbb
push
mov
sbb
movsl
mov
mov
or
push
cmp
cmpsl
add
cltd
aas
inc
mulb
in
dec
push
mov
out
jb
xchg
idivl
hlt
or
mov
mov
inc
mov
outsl
gs
pop
das
push
adc
push
mov
add
adc
mov
mov
or
dec
rclb
dec
roll
shll
dec
movsb
mov
out
repz
pusha
in
xchg
push
rclb
add
pop
and
add
aaa
pop
and
add
mov
das
popf
loop
outsl
sub
cld
mov
cmpsl
stc
jmp
ffree
xor
stos
dec
clc
out
push
push
fsubrl
mov
lea
ret
push
jl
mov
lret
js
mov
js
jae
sbb
xlat
dec
outsb
shll
dec
xor
repnz
ret
fldt
jl
ljmp
sahf
mov
mov
testb
adc
dec
test
test
sahf
mov
movsb
loop
xor
call
ss
add
frndint
cmp
and
inc
mov
xor
comiss
adc
vsqrtsd
mov
xchg
xchg
and
mov
sbb
mov
jmp
loopne
push
test
enter
scas
lcall
mov
addr16
xchg
adc
jmp
cmpsl
pop
add
popf
icebp
iret
push
push
les
sub
lret
cltd
xchg
scas
sub
and
fstl
adc
clc
jb
xchg
lret
mov
es
sub
cs
jne
mov
dec
fstpl
push
cmpsb
sbb
inc
stos
or
inc
ret
shll
movsw
sbbb
popa
and
inc
pop
xor
mov
mov
fwait
jae
inc
popf
push
popa
fiaddl
jle
and
daa
imul
mov
mov
adc
leave
data16
push
pushl
fs
inc
je
lret
cmp
cmpsl
loop
pop
cmp
push
stos
fmull
mov
test
gs
pop
cli
out
hlt
jae
push
pushf
cmp
jnp
int
or
sub
mov
pop
scas
inc
jns
fistpl
test
loopne
cmpsb
add
loope
xchg
or
jb
outsb
dec
or
push
inc
mov
inc
add
enter
ret
jnp
push
jl
fidivrl
mov
mov
rcrl
test
dec
xchg
call
pop
out
xlat
lahf
cs
pop
xor
jnp
or
mov
test
push
nop
push
cmp
cmpl
and
mov
loope
rcrl
dec
bound
push
dec
cli
cmp
cmp
pop
ja
sub
mov
xor
push
outsl
pop
shll
fwait
dec
pushl
mov
lcall
in
rcr
sub
jne
bswap
push
jo
cmpsb
mov
mov
rcll
xchg
pop
dec
jmp
ud2
dec
cmp
adc
xchg
mov
jno
in
icebp
pushf
mov
xor
sbb
fadd
mov
inc
scas
pop
sbbl
sub
mov
xchg
mov
inc
or
aad
cli
loop
into
dec
shll
in
mov
arpl
adc
je
fmuls
ja
aad
inc
les
push
push
es
jg
fcompl
movsb
dec
mov
dec
and
inc
mov
aam
pop
lcall
cmp
pop
not
and
icebp
jnp
cwtl
pop
sub
pop
adc
in
push
sahf
lods
jp
xchg
jo
or
or
scas
sbb
xor
mov
clc
jnp
rorl
stos
sub
movl
int
ljmp
sub
jno
sub
sti
inc
jo
adc
addr16
push
mov
shr
in
dec
dec
nop
pop
sub
jmp
jmp
mov
adc
fcmovne
cmp
into
inc
subb
xchg
xor
mov
sahf
std
call
mov
lds
mov
xchg
loope
xchg
cmp
inc
sbb
cmp
cwtl
flds
pop
dec
cmc
out
std
xor
icebp
testl
sarb
lret
cld
push
dec
pop
aas
push
out
and
out
cmp
aas
xchg
ss
adc
cmp
jb
test
lahf
loopne
sub
ss
jno
mov
nop
jl
xchg
dec
repz
sub
mov
jl
pop
sarl
out
adc
imull
adc
stc
lcall
ret
stos
sub
push
and
in
jecxz
push
push
daa
push
xchg
xor
push
mov
repz
push
pop
fcoml
mov
aaa
sub
movsb
dec
dec
icebp
orl
jae
in
jbe
or
jp
lds
clc
jne
pop
pop
or
fcmovu
stos
filds
imul
fnstsw
fnstsw
adc
fidivrl
lds
push
push
dec
int3
or
jmp
adc
lcall
aad
push
dec
mov
outsb
pusha
popa
push
jne
mov
stc
fistpll
xchg
inc
xchg
shrl
stc
xor
rclb
cwtl
std
cmpsb
iret
sub
sbbb
xchg
sbb
movsl
shll
xchg
addr16
push
cli
pop
pop
lret
xchg
int3
xchg
inc
and
out
mov
push
arpl
xlat
movsl
outsb
adc
inc
das
sub
cmp
xor
es
lds
pop
loope
sub
or
add
stos
orl
adc
and
fiadds
sub
mov
into
xchg
jae
adc
lcall
pop
fdivr
pusha
or
stos
fldt
xchg
notb
std
jae
in
adc
xor
adc
sbb
movnti
pop
or
lods
push
fistpl
stc
test
dec
dec
je
inc
int
add
inc
xlat
ss
sub
scas
fisttps
mov
mov
dec
mov
and
fldenv
nop
mov
mov
adc
ret
jecxz
mov
mov
ljmp
stc
cmp
inc
fisubrl
pop
push
sti
xor
mov
and
addr16
leave
ss
pop
jmp
jecxz
lods
pusha
das
mov
xchg
or
mov
ss
sbb
lds
mov
sbb
lods
pop
lahf
inc
test
mov
rclb
push
int
insb
lods
outsb
popl
sbb
fcos
and
orb
inc
adc
mov
push
inc
jmp
dec
loop
lods
mov
push
xchg
pop
out
inc
pop
jae
cld
pop
scas
cmp
add
sub
inc
jle
mov
ds
filds
cmpsl
cmp
leave
or
dec
notl
lock
dec
xchg
mov
stos
xchg
jno
test
inc
dec
mov
iret
mov
out
pop
cmp
movsl
mov
adc
or
testb
push
andb
ljmp
cmp
add
lea
mov
gs
cmp
pop
pop
or
cltd
nop
imul
cltd
xchg
jmp
ljmp
lea
push
scas
movsb
xchg
ret
outsl
add
push
js
or
mov
rcr
loop
sti
lds
hlt
les
sbb
push
mov
sbb
mov
repnz
test
dec
jb,pt
cmpsl
push
xchg
add
nop
sbb
pop
xor
sbbb
xchg
lods
cltd
rcl
test
lcall
jae
mov
incl
jg
dec
sub
inc
cli
iret
ret
add
push
popa
pop
jb
enter
out
inc
sub
mov
dec
cmpsb
outsb
lret
jne
mov
mov
stos
pop
cmpsb
insl
adc
xor
dec
sbb
imul
jmp
test
inc
cmp
jb
fcomps
into
mov
imul
stos
aaa
sar
dec
cmc
or
mov
pop
addl
jle
notl
inc
cmp
scas
mov
xor
fisttps
dec
neg
cmp
adc
rcll
push
pop
and
insb
and
rol
sub
push
cwtl
or
inc
adc
notb
xor
dec
xor
ret
ss
iret
sub
fmuls
cld
xlat
lods
gs
sub
pop
cmpsb
cmpsb
cmp
lret
imul
cld
data16
mov
repz
dec
daa
pushf
insb
push
mov
loope
add
imul
sbb
xchg
dec
fisubrs
and
mov
rcrb
add
push
arpl
lods
pop
and
mov
outsl
lock
jae
mov
mov
xchg
or
push
daa
push
dec
dec
push
scas
mov
mov
push
pusha
clc
adc
mov
lock
data16
mov
xor
or
fbld
hlt
outsb
cmpsl
jb
jnp
loop
xchg
mov
push
cwtl
add
jp
bswap
jle
das
mov
xchg
inc
dec
in
sub
push
mov
loop
mov
insb
aas
ja
lret
sbb
outsb
pop
xchg
dec
inc
cld
push
dec
insl
fisttpl
daa
loop
fcoms
lahf
pop
loop
call
bound
dec
sub
inc
mov
cltd
mov
pop
mov
test
push
imul
sbb
add
xor
outsl
dec
mov
mov
inc
out
loopne
es
std
add
loop
xchg
enter
enter
fists
cmp
push
fs
cmp
mov
push
repnz
fcmovb
das
cwtl
cwtl
jns
or
fldenv
jecxz
mov
push
sub
stos
sbb
insb
dec
stos
pop
cmp
sub
dec
pop
dec
xor
lods
inc
clc
nop
stos
ljmp
iret
cmc
fwait
jle
and
pop
mov
daa
xchg
jg
fs
ljmp
mov
lods
mov
push
cmpsb
insb
insb
add
ja
xor
adc
outsb
xchg
out
adc
sbb
inc
push
fcmovnbe
push
lock
hlt
xchg
or
stos
outsl
mov
leave
stos
adc
into
push
mov
adc
inc
xor
cld
cmc
cltd
notb
call
mov
popl
into
pop
and
xorb
dec
cmp
hlt
js
icebp
mov
sbb
cmp
adc
jmp
and
js
mov
je
bound
pop
negl
jae
push
mov
test
and
jg
sub
cmpsl
pusha
pop
and
icebp
repz
movsl
jg
mov
std
aad
das
scas
adc
xchg
xor
sbb
pusha
inc
addr16
jbe
lock
mov
mov
add
ljmp
repz
sub
adc
xchg
cmp
pop
shl
das
into
es
inc
stos
loopne
andb
mov
xor
sbb
int3
pop
mov
dec
pusha
insb
lcall
sahf
jns
into
mov
add
mov
je
test
in
out
mov
jmp
cmpsb
idivb
lret
mov
data16
aam
jle
in
js
clc
mov
pop
xchg
inc
loope
sub
mov
cmp
mov
arpl
add
cmp
mov
dec
mov
pop
paddd
pop
mov
shll
ja
daa
adc
scas
sub
loopne
mov
into
push
mov
add
mov
into
xor
push
adcl
lahf
add
rorb
mov
inc
rolb
push
jp
iret
add
cs
popf
gs
or
stos
pop
sbb
out
dec
and
push
dec
cmp
jo
mov
cmpb
sbb
andl
loop
fisubrs
add
out
loope
xlat
push
sub
mov
arpl
pop
inc
insl
daa
punpckhwd
inc
rdpmc
fsts
and
flds
adc
mov
add
sbb
mov
ljmp
add
or
mov
push
dec
insl
cmp
arpl
push
aad
loopne
xchg
out
scas
xor
out
inc
js
xor
jmp
das
inc
in
scas
jae
mov
mov
shr
movsb
enter
sub
in
inc
push
push
sub
xchg
addb
shrb
jnp
stos
jnp
add
xchg
pop
xchg
imul
fcompl
outsl
cmp
pop
xor
aas
inc
out
dec
punpcklbw
sbb
repnz
lea
insb
jle
sub
arpl
dec
lods
jno
orl
pop
insl
jne
xchg
mov
nop
nop
and
sarb
inc
cld
aaa
cmp
repz
xor
mov
je
sbb
cmp
cld
loope
arpl
inc
cmc
jbe
scas
mov
mov
ss
faddl
fsub
inc
int3
movsb
sbb
add
es
sahf
push
adc
mov
cmc
xchg
mov
pop
mov
sub
jl
arpl
sbb
inc
pop
repz
lock
arpl
or
jl
push
not
jmp
lods
sub
cmc
jbe
insb
dec
jecxz
aas
inc
cmp
mov
jecxz
imul
sbb
inc
push
cmp
push
in
push
mov
insb
out
sbb
mov
mov
test
shll
jne,pt
pop
xchg
adc
mov
jb
mov
sub
lods
sarl
cmpsl
aas
ljmp
mov
inc
add
inc
sub
xchg
sahf
dec
jns
fwait
adc
lahf
jns
sub
and
pop
jl
xor
fnstcw
sbb
push
insb
ljmp
jne
xchg
cmpsl
mov
xchg
pushf
in
or
les
or
dec
mov
jp
out
cld
hlt
inc
push
cmpb
mov
adc
inc
mov
mov
or
mov
hlt
mov
test
push
mov
daa
mov
cltd
push
test
sub
loopne
enterw
jg
in
sti
in
mov
xchg
xchg
jecxz
mov
add
divl
cmp
jo
pop
xor
xchg
jecxz
push
es
lods
addb
xchg
xchg
je
add
and
in
pop
or
rol
sbb
cltd
test
jno
popa
ficomps
fimull
je
cltd
fwait
dec
ret
mov
fnsave
pop
ss
mov
jae
sbbl
pop
ret
dec
fistl
xchg
repnz
insl
jmp
xor
je
out
or
sbb
sub
pop
aam
fsts
adc
or
sbb
jle
out
paddsw
xor
test
fdivs
repz
call
sub
aad
xor
jge
mov
mov
stc
xchg
popf
and
popa
ljmp
into
jns
or
xor
cmpsl
jb
ja
mov
xor
std
divl
add
cmp
sub
add
xor
call
pop
pop
inc
outsb
add
lods
mov
push
pop
or
pop
and
jo
addr16
cmp
lea
inc
icebp
jmp
xor
js
mov
and
cmp
mov
js
sbb
adc
xchg
pop
dec
sahf
movsl
jno
into
push
jmp
out
scas
fnstcw
aad
jnp
sbbb
push
push
ret
add
mov
mov
mov
notb
push
aam
sbb
jo
add
out
xchg
xor
call
jl
aaa
mov
dec
mov
mov
push
push
sub
dec
lds
fdiv
hlt
or
lods
and
mov
insl
push
dec
jmp
xchg
lahf
and
and
rcl
cmpsl
xor
stos
mov
lret
pop
pop
push
jo
sti
dec
mov
xchg
mov
bnd
das
mov
cltd
sarl
lea
imul
xchg
outsb
dec
fistpl
sti
mov
mov
mov
fs
bound
mov
fsubl
les
and
lods
dec
mov
sarb
lcall
pop
xorb
dec
fs
inc
xchg
xchg
icebp
add
imul
push
insb
push
lea
jbe,pt
lods
in
and
cmp
stos
fildl
lcall
rcrl
cmp
xchg
faddl
fsts
pop
mov
jmp
movsl
cltd
inc
popf
in
mov
jmp
adc
sbb
push
stos
mov
pop
andb
sbb
out
ret
inc
pop
or
scas
xchg
push
sub
sbb
jl
lcallw
imul
mov
push
jecxz
xchg
std
scas
add
mov
pop
and
pop
pop
int3
cwtl
insl
out
ss
orl
inc
flds
mov
adc
xor
and
push
sbb
out
es
stos
fsubl
mov
mov
aas
ror
push
incb
pop
jmp
mov
push
rcl
jg
stos
movsl
test
push
push
loop
outsb
std
pushf
xchg
xlat
dec
dec
dec
scas
dec
adc
ror
and
pop
sub
rolb
jge
push
je
sti
pop
lret
sub
clc
stc
jae
or
pop
ja
push
jno
leave
fisubrl
nop
mov
inc
adc
lret
lret
icebp
test
xchg
inc
xchg
cmpsb
mov
sti
sub
cmp
add
or
push
sbbl
fwait
into
jae,pt
movsl
enter
xchg
aaa
movsb
cwtl
mov
and
sar
and
jb
imul
xor
jl
dec
push
insb
in
outsb
lods
mov
orb
insl
mov
cmp
jmp
sbb
pushf
int3
inc
dec
mov
xchg
pop
lea
and
stos
push
mov
out
or
into
lahf
jge
xchg
pop
xor
mov
popa
outsb
cmpsl
mov
stos
cwtl
mov
stos
pop
pop
dec
outsl
fists
push
js
in
jns
cmp
adc
jge
cmp
or
aas
shr
sbb
pop
fs
dec
insb
addl
xchg
negl
cltd
pushf
lret
mov
mov
xchg
clc
ficoms
loope
js
stc
and
xor
stc
ss
mov
lret
mov
fs
jo
mov
popa
aaa
mov
pop
cli
push
shlb
lds
in
jg
inc
jno
in
sbb
div
mov
cli
mov
mov
lods
lods
filds
aad
enter
xchg
jno
or
pop
pop
mov
icebp
lods
test
rcrl
mov
cmp
lret
pop
incb
icebp
ja
push
or
or
gs
mov
and
dec
mov
mov
sti
push
call
push
les
add
pop
xorl
push
movsb
out
push
xchg
or
repnz
loope
mov
xchg
inc
cmpl
cmp
std
xchg
dec
lea
xor
gs
int
scas
xchg
add
notb
aas
inc
dec
stos
jne
push
cli
cmpsl
ret
stos
gs
loopne
sbb
mov
adc
adc
lock
mov
and
mov
sti
adc
out
pop
outsl
call
adc
pop
pop
mov
rcl
std
pop
bound
pop
sbb
sahf
push
and
call
adc
and
dec
push
gs
mov
mov
pop
iret
lock
popa
dec
insb
fisubs
xchg
pushw
sbb
repnz
fs
and
dec
icebp
inc
pop
dec
push
and
int
jns
mov
dec
mov
mov
fistpll
arpl
cmp
cmc
ficoms
call
cmp
adc
in
mov
xchg
cwtl
inc
popf
adc
les
jge
pop
cmp
fists
jb
orl
and
shlb
mov
movsb
into
mov
mov
sub
cmp
in
call
xor
mov
loopne
sti
xor
pop
aaa
adc
cmpsb
test
jecxz
xor
mov
adc
shll
and
arpl
and
dec
sti
cmp
push
test
jns
out
adc
xchg
jmp
jae
je
daa
push
and
adc
loope,pt
in
inc
xchg
cmp
int3
mov
imul
pop
ds
lahf
data16
push
mov
arpl
mov
gs
jge
add
mov
imull
js
push
mov
dec
into
cld
mov
fisttpll
popa
mov
in
rcrl
and
add
jecxz
lods
mov
aaa
push
sahf
clc
cli
mov
mov
aam
cmc
outsl
lea
fwait
mov
mov
es
rcr
xchg
ret
xchg
loopne
inc
cmp
and
push
fdivrl
test
xchg
sbb
pop
pop
aam
inc
addr16
mov
movl
adc
loopne
xor
xor
sti
push
mov
shll
fnsave
bound
inc
je
rcll
arpl
mov
mov
mul
fadd
arpl
lods
mov
add
jb
imul
fwait
pop
mov
jge
ljmp
ja
pop
ret
and
enter
jb
sub
orb
shlb
jle
inc
bound
pop
sbb
push
dec
addr16
jmp
add
jp
or
sub
cltd
dec
pop
push
mov
sti
sub
push
push
fmull
push
mov
insl
daa
fidivrs
sub
stos
out
mov
xchg
in
push
outsl
jb
hlt
int3
sbb
pop
mov
es
push
clc
pop
in
mov
jl
adc
es
repnz
cmp
iret
xlat
xchg
xor
repz
ss
cmc
ds
rolb
cmc
and
popa
mov
imul
mov
cwtl
sub
push
inc
or
xor
mov
int
ljmp
xor
inc
aad
add
mov
xchg
sahf
dec
sbb
or
outsl
dec
popf
push
or
inc
inc
daa
retw
jne
call
inc
repnz
xor
clc
pop
add
sbb
lret
sub
or
jns
scas
and
cmp
iret
dec
jno
pop
push
cs
int3
cli
push
inc
jbe
sub
inc
daa
imul
mov
cmpsl
dec
mov
stc
repz
mov
push
push
std
ja
or
arpl
shlb
insb
pushf
xchg
mov
repnz
fdivrl
dec
mov
push
pop
pop
pusha
jns
mov
mov
jecxz
mov
jno
dec
sbb
shll
xchg
mov
rolb
stos
call
mov
imul
mov
cmc
lret
mov
mov
call
mov
jo
sub
jg
add
mov
movsb
adc
mov
popa
fnstenv
shll
mov
or
stos
xor
rcll
popf
jle
adc
jb
and
hlt
mov
jmp
push
xor
xchg
push
sub
lret
mov
and
sub
jne
leave
sub
insb
jne
mov
fcompl
js
roll
sbb
pop
ja
je
in
inc
xchg
push
jp
or
mov
test
adc
in
push
dec
fstps
mov
xor
cmpb
test
xchg
push
add
mov
cwtl
sub
sti
ret
mov
xchg
fistpll
and
adc
pop
adc
lahf
decb
inc
lret
pushf
cmp
ds
jb
mov
jmp
mov
mov
movsl
mov
fsubrs
pop
js
out
cmp
jecxz
sbb
pop
mov
jmp
sub
jbe
int3
adc
cmpsl
lret
lret
dec
push
xchg
pop
lret
jmp
pushf
add
cmpsl
mov
adc
xor
mov
ret
xchg
addr16
sbb
xchg
dec
daa
test
imul
pushf
test
push
neg
ret
inc
mov
test
imul
sbbb
sub
mov
popw
repz
mov
cmc
pusha
vcmpsd
add
sbbl
repz
mov
lcall
cmp
flds
clc
mov
stc
pop
repz
push
fs
std
jo
out
pop
add
jle
sub
sti
aaa
push
mov
ljmp
mov
or
ficoml
cld
and
fidivrl
pop
push
popa
add
mov
cmp
inc
adc
adc
mov
lods
daa
sbb
das
xorb
adc
shl
out
add
or
pop
icebp
mov
hlt
mov
mov
call
jbe
outsb
jo
mov
std
sti
psubusb
cltd
pop
jb
int3
cmc
icebp
xchg
and
xchg
outsl
xor
icebp
shrb
and
cmp
mov
push
cmp
dec
cmp
pop
pop
in
in
nop
fwait
mov
push
xchg
test
add
sbb
lahf
loop
cwtl
aaa
pop
cmpsl
scas
outsb
movsb
xor
insl
jo
fcomps
sub
js
lods
xchg
inc
push
loop
jns
bound
sub
mov
stos
add
es
push
mov
xor
jge
cmp
and
jp
js
scas
shlb
sub
aas
adc
cmp
mov
xchg
add
pop
sbb
add
sub
lods
mov
push
ds
jb
test
xor
cli
xor
push
scas
int3
mov
cli
rol
ljmp
pop
pop
dec
stos
and
ljmp
cmp
dec
jno
aas
pop
lods
inc
dec
mov
jecxz
jne
lods
std
int
lret
adc
sbb
pop
jns
cmp
imull
and
fmul
mov
arpl
out
mov
bound
dec
or
or
or
loopne
mov
pop
or
scas
popa
iret
out
mov
mov
mull
sar
cld
arpl
in
add
xor
iret
sahf
pop
ror
loop
or
out
xchg
jmp
sub
into
mov
push
aaa
push
push
mov
jle
loop
add
mov
rcll
mov
adc
ljmp
lret
int3
dec
jae
pop
mov
or
xchg
jge
xchg
cld
shlb
inc
add
pop
push
int3
cmp
lret
adc
sub
or
test
fstps
imul
or
xchg
mov
in
fisttps
aam
push
add
cld
mov
inc
mov
inc
sbb
mov
je
mov
push
enter
pop
daa
sbb
stos
jns
outsl
push
je
xchg
pushf
in
aad
dec
adc
out
dec
call
mov
stc
inc
pusha
je
mov
pop
dec
jecxz
repnz
push
xor
rcr
cs
xchg
push
pop
cmp
mov
mov
cmp
push
push
jecxz
je
pop
pop
push
jle
popa
cmp
call
mov
mov
and
daa
xor
jbe
cmp
cmpsb
out
cs
les
insl
xchg
push
cmp
lret
mov
scas
aas
push
shlb
pop
xor
sarb
popa
pop
xchg
repnz
jecxz
fwait
cmp
sub
pop
in
imul
test
aaa
popa
pop
inc
mov
dec
aad
pushf
jb
int3
push
jp
insl
push
mov
sub
jl
mov
mov
or
test
dec
xor
testl
cmpsl
into
push
outsb
xchg
and
rcrb
inc
pusha
add
shll
push
jnp
and
leave
and
je
sbb
cld
mov
stos
clc
fcmovnbe
outsl
addb
lock
scas
cmpsl
mov
pop
rorl
lods
adc
inc
inc
hlt
cltd
outsb
lock
xchg
pop
mov
dec
ljmp
leave
aaa
xor
jecxz
testb
pop
xchg
xorl
popa
and
out
mov
pusha
push
inc
sub
inc
pop
jg
sub
lahf
inc
dec
in
lret
sarl
in
mov
mov
add
or
scas
mov
push
jns
popa
xlat
or
sti
xchg
xchg
fcompl
popf
jle
sub
icebp
inc
pop
and
lds
jl
enter
out
xchg
inc
mov
or
push
xchg
cmc
ror
mov
mov
push
jle
push
inc
daa
ds
mov
stc
mov
into
xor
xor
cmpsl
test
push
loope
or
mov
rcrl
sbb
stos
inc
add
pop
inc
cmp
xchg
aas
sbb
adc
mov
mov
pop
dec
out
and
dec
push
adc
mov
mov
inc
sub
out
lock
bound
test
ja
push
dec
inc
inc
popa
cmp
lds
and
pop
mov
loopne
cmpsl
lds
dec
mov
in
xchg
scas
mov
gs
jnp
adc
loope
fwait
xchg
adc
ds
jnp
js
xchg
aas
mov
fisttps
or
lock
and
xchg
shlb
cmp
mov
jbe
add
sub
sbb
outsl
sbb
nop
movsl
inc
xorb
leave
stos
cwtl
jge
add
lret
add
jle
mov
lds
inc
andb
mov
pop
ja
loope
xor
into
lret
xchg
test
mov
sbb
push
xchg
adc
cmc
je
push
aad
rorb
jp
lahf
adc
inc
mov
xchg
clc
js
jmp
jo
outsl
and
ds
loopne
ds
leave
mov
dec
sarb
jecxz
outsl
and
jo
xchg
push
jmp
loopne
test
test
call
movsl
and
inc
mov
inc
push
or
mov
sbb
rcrl
cmp
fisubrl
jb
mov
int3
aad
stc
xlat
loopne
cmpsl
repz
cwtl
aam
repz
jnp
push
sub
divb
add
out
data16
test
jns
nop
ds
sti
rcrb
daa
out
pop
push
popf
mov
aad
adc
fidivl
jne
std
push
mov
mov
xlat
test
arpl
sub
xor
mov
leave
lods
sbb
ret
insb
push
repnz
jae
outsb
jge
add
pushf
or
arpl
fstpl
lahf
incb
mov
push
ret
sti
repz
aad
lret
rolb
xchg
imulb
xorl
imulb
fcoml
inc
dec
mov
xorb
dec
push
push
xor
ficoml
or
jb
adc
mov
mov
or
mov
rclb
mov
xor
jo
sub
jl
adc
cmp
sub
cwtl
inc
aam
mov
xchg
dec
xchg
out
daa
mov
mov
push
and
stc
cld
movsb
mov
hlt
cmp
push
lods
or
pop
lret
leave
sbb
mov
pop
pop
outsl
int
inc
lea
test
das
mov
jmp
push
arpl
rorb
lret
mov
mov
shll
faddl
push
roll
movsl
mov
xchg
cmp
icebp
cmpsl
shlb
sub
cmp
insl
jg
or
push
pop
push
jecxz
dec
out
lea
subl
loopne
sub
jb
addb
stc
in
movsb
pusha
bound
into
jnp
xor
and
xchg
push
and
jp
ss
mov
dec
clc
aad
sub
mov
dec
enter
mov
inc
push
xchg
lock
push
mov
mov
xor
and
lea
bound
stc
ret
or
pop
pop
loope
adc
ds
inc
pop
or
adc
push
add
lock
gs
push
or
mov
push
bound
push
int3
clc
xor
mov
push
decb
lods
adc
add
ret
pop
cs
push
fsts
xor
push
mov
jl
cmp
dec
mov
into
dec
addr16
pop
ljmp
adc
mov
and
sub
pop
xor
repz
pop
movsb
and
out
xchg
sbb
addr16
push
xor
adc
jb
popa
in
scas
sbbl
mov
movsl
sbb
adc
adc
ret
dec
call
pop
mov
in
inc
xchg
jne
fcmovu
and
pop
andb
xchg
in
add
jmp
jle
jno
inc
mov
stos
out
shll
add
in
stos
xorb
popa
and
stos
sub
icebp
imul
pop
daa
or
add
mulb
mov
and
scas
fiadds
pushf
mov
psubd
or
shlb
cs
rclb
mov
xchg
jb
xor
in
sub
lcall
loopne
jnp
int3
pop
pop
dec
inc
fs
push
xchg
fucomp
jb
sbb
daa
sbb
popf
in
stc
sbbl
mov
sbb
and
mov
xchg
cmp
lock
lcall
add
flds
lahf
sbb
sbb
call
stos
outsl
adc
mov
xor
aaa
cltd
in
addr16
test
and
test
and
test
push
nop
outsl
cmp
jo
mov
mov
push
sbb
rolb
jecxz
mov
sbb
in
xor
shrb
xlat
jp
loop
cmpsb
hlt
sbb
dec
out
arpl
mov
arpl
mov
inc
mov
cmp
jne
mov
push
jb
and
add
fisttpll
jg
std
adc
les
test
add
cwtl
xor
jo
jle
mov
fcomp
lret
movsb
in
movsl
mov
lcall
sbb
cmp
ret
mov
mov
jae
out
lret
push
aad
and
xchg
pop
sbb
test
mov
aam
or
dec
cmp
sub
sub
or
fucom
mov
fcomp
lds
fstpt
cmp
adc
fsts
lock
int3
sti
cld
out
pop
fidivl
aaa
ds
ja
jp
mov
and
fdivl
push
rcl
push
sub
imul
ljmp
mov
js
mov
lret
out
dec
mov
arpl
jecxz
das
cmp
and
or
jl
aaa
cmc
mov
xor
mov
mov
sub
jle
ret
jb
adc
or
pop
out
push
and
imul
sbb
cwtl
lods
mov
pop
xchg
mov
scas
lods
or
xchg
shll
add
sub
pop
adc
mov
jns
jns
xchg
sbb
leave
das
lret
jl
dec
in
sbb
dec
fsubl
arpl
sbb
lds
dec
in
jns
dec
adc
bound
rorb
mov
addl
adcl
test
push
xor
adc
add
xor
das
xchg
and
xor
or
lock
shl
or
dec
fs
push
out
inc
push
mov
dec
enter
ljmp
pop
aas
dec
pop
push
inc
pop
xchg
xor
lret
jae
xchg
rclb
pop
cld
out
dec
pop
cwtl
dec
xorb
or
jmp
xor
out
enterw
jle
ret
jb
add
mov
jg
ret
jl
pop
rcl
xlat
cmc
sub
sub
rorb
jo
pop
mov
push
pushf
mov
xchg
cmp
pop
cs
mov
jbe
mov
sub
dec
fadd
inc
dec
vpmacssdql
insb
ljmp
inc
cmpsl
les
fwait
sub
jb
mov
sbbl
sub
int3
jle
stc
dec
cmp
mov
daa
ficomps
xchg
enter
test
ffreep
iret
add
mov
jecxz
les
aas
shl
or
mov
push
mov
or
imul
cmpsl
sub
popa
or
push
jecxz
icebp
aad
out
lahf
les
mov
xchg
pop
rol
pop
mov
fmul
hlt
adc
lcall
iret
mov
clc
mov
fcoml
inc
int
xchg
mov
jo
sub
add
xlat
stc
lods
cmpsl
lahf
shlb
dec
aad
pop
inc
mulps
repnz
inc
xor
divb
sbb
insl
mov
mov
pusha
fwait
stos
add
cmp
or
mov
push
test
out
mov
jnp
push
cmp
mov
sbb
push
ja
pusha
mov
or
repnz
mov
movsb
mov
jecxz
mov
jg
adc
cmpsl
inc
adc
call
mov
xchg
int3
imul
packssdw
pusha
pop
jecxz
shr
notl
repz
fildl
das
fidivrs
xor
ffreep
mov
rcrl
push
das
ret
pop
pop
pop
cmp
lret
mov
mov
xchg
xchg
out
imul
jns
jl
mov
repz
cmp
test
movsb
adc
lahf
sbb
push
insb
test
in
rorl
cli
xor
test
iret
push
outsb
jns
xchg
mov
add
pop
leave
push
out
movsb
push
rcll
sub
insl
and
push
ja
and
sub
cmpsl
xchg
pop
or
lcall
in
into
lods
mov
nop
mov
push
cltd
pop
adc
xor
addr16
outsl
shlb
incl
mov
popf
cmp
or
mov
jb
dec
test
test
lcall
dec
jg
dec
sbb
in
push
fidivrl
xchg
push
push
je
movsb
mov
mov
xchg
aas
sub
push
xor
push
scas
mov
xlat
shl
and
push
xchg
or
xor
lret
cmp
pop
aaa
adc
or
cmp
jmp
cmpsl
dec
hlt
in
rolb
jge
adc
dec
jne
fcmovu
pop
push
or
jl
mov
int3
scas
sti
into
mov
cmp
cld
mov
popa
mov
cmp
mov
cmp
adc
mov
cmc
dec
cmp
mov
js
fimull
gs
xchg
jae
sbbl
xor
les
mov
gs
sbb
xchg
inc
inc
and
sti
gs
mov
mov
mov
cs
pusha
cmp
pop
mov
lret
les
js
addr16
ja
xchg
lret
add
cmp
mov
xchg
arpl
fidivrs
sbb
cmp
xorb
mov
pop
leave
call
adc
je
bound
add
iret
fiaddl
push
and
shll
fs
xchg
cmp
leave
aaa
mov
mov
out
push
jg
sub
mov
xchg
inc
adc
scas
cmpsl
stc
dec
cmp
sarl
mov
pop
sbb
cmp
xchg
dec
adc
add
sbb
or
push
push
xchg
adc
outsl
jmp
out
lock
nop
in
push
mov
scas
mov
test
lock
shrl
rcll
stos
ja
push
in
xchg
rcrb
sbbb
enter
fdiv
lods
repz
xchg
inc
jne
mov
cli
mov
xchg
sbb
mov
das
and
daa
icebp
fsub
pop
mov
div
sub
out
js
insl
sub
jecxz
jle
inc
rcl
gs
arpl
arpl
test
mov
loopne,pt
lcall
aas
sbb
pop
jmp
cmp
cmpsl
and
or
inc
add
mov
aaa
popf
sahf
jg
out
xchg
or
jg
jno
push
xorb
sub
pop
mov
push
out
ss
inc
push
arpl
hlt
les
cmp
imul
ljmp
fidivl
loop
sbb
cmp
jecxz
ss
imul
mov
int3
scas
mov
cwtl
lods
cld
cmp
mov
call
movsb
shll
scas
cmp
cmp
cmp
sbb
sub
sub
mov
jge
loope
cmp
jmp
jns
inc
sbb
cmp
je
and
adc
fisttpll
sbb
in
pop
std
push
mov
pop
mov
mov
fimuls
lods
mov
loop
sub
jl
add
xlat
xchg
cmc
nop
repz
pop
mov
mov
and
in
out
rep
add
push
mov
jno
jb
inc
out
dec
aaa
lret
negl
cltd
popf
mov
out
sbb
lea
sub
xor
mov
adc
in
incb
imul
in
insl
adc
inc
add
xlat
in
sbb
mov
out
test
fsubrs
insb
mov
mov
test
jmp
in
xchg
fidivrs
dec
push
jns
sar
inc
je
and
or
fwait
push
pop
xchg
movsl
shl
sbbb
iret
push
mov
adc
fcomip
cmp
push
xor
enter
imull
cmp
scas
inc
stc
ss
pop
dec
pop
in
push
add
jle
fdivl
push
pop
je
push
enter
sub
rsqrtps
shlb
aad
mov
push
popw
mov
rcl
sub
popa
add
dec
mov
dec
jb
mov
and
pop
addr16
cld
imul
insb
inc
cwtl
inc
lcall
xor
pop
mov
xor
bound
sbb
shrl
push
push
popf
inc
filds
in
sbb
fisubs
in
jp
fwait
movsl
sub
pop
jnp
aad
mov
enter
in
pop
dec
in
sti
loopne
lods
add
cwtl
shl
push
leave
fbld
push
or
adc
pop
fcoms
jmp
ret
frstor
mov
pusha
and
sti
or
xchg
dec
adc
fisttps
ljmp
fs
mov
xchg
into
lret
jmp
mov
clc
xor
inc
dec
mov
push
adc
pop
mov
adc
mov
push
in
das
mov
insl
dec
out
cmpl
and
subb
jmp
push
jge
mov
test
push
push
out
ss
sbb
shlb
loopne
leave
aad
or
aaa
scas
test
pop
fcmovb
xchg
or
or
sub
xchg
mov
pop
pop
xchg
mov
mov
loope
dec
or
mov
out
push
imul
pop
stos
xchg
dec
hlt
mov
xchg
adc
cmp
ret
je
fldcw
dec
dec
dec
dec
scas
aaa
fwait
stos
cmp
xor
add
pop
clc
push
xchg
fsubrp
loopne
pop
les
ljmp
jmp
add
sbb
addr16
out
leave
cmp
add
nop
cltd
test
mov
jecxz
insl
lahf
out
ja
ret
sub
ficoml
cwtl
push
outsl
mov
ja
lcall
pop
ds
es
cli
cmpsl
pop
mov
shlb
add
or
cli
shll
inc
in
lcall
shll
push
arpl
xchg
wrmsr
inc
shrl
mov
cmp
test
push
jp
push
cmp
sbb
fs
mov
inc
out
adc
imul
jle
adc
lods
push
push
divl
inc
out
xchg
into
dec
int
adc
mov
or
outsb
jne
test
ret
inc
fsubrl
jnp
mov
or
mov
call
mov
dec
sahf
add
in
test
sbb
mov
ss
inc
jno
rcpps
fildl
xchg
shr
jo
or
pop
jbe
vminps
aad
out
into
jecxz
fiaddl
add
cmc
dec
mov
lea
mov
mov
pop
jl
mov
sti
inc
ljmp
push
repz
cmp
cmp
jb
push
push
pop
push
mov
jno
push
repz
stos
lds
mov
mov
testl
fldt
cmp
daa
fiaddl
xchg
mov
push
mov
in
ret
pop
and
jb
mov
cs
dec
dec
rclb
xchg
loope
add
adc
cmp
call
fsts
test
pop
adc
and
sub
cli
test
aaa
lcall
add
in
push
out
adc
icebp
dec
xor
push
sub
adc
addr16
in
pop
cmpsl
int
push
in
add
mov
push
repnz
jne
roll
movsb
jmp
pop
jno
scas
sbb
push
mov
sub
jnp
cwtl
adc
pop
xchg
push
es
data16
push
pop
cwtl
sti
sar
cmpsl
sub
inc
out
push
test
repnz
out
bound
cmpsl
mov
addr16
add
sub
mov
js
outsb
jmp
in
adc
std
push
dec
sbb
jge
jge,pn
ja
sti
push
push
mov
mov
psubusb
lods
and
add
mov
mov
mov
ret
lsl
push
add
lea
subb
scas
and
fsubrp
fwait
mov
shlb
fcompl
enter
mov
aad
out
jae
inc
pop
add
sbb
mov
aam
xchg
mov
mov
push
clc
and
mov
bound
icebp
fldcw
fwait
cwtl
hlt
or
mov
into
and
jno
add
sarl
xor
stos
ret
inc
push
test
jecxz
imul
pop
out
test
lea
pop
adc
sbb
xor
jecxz
icebp
mov
cld
repz
jb
dec
clc
sbb
cmp
mov
push
push
cs
sbb
mov
bswap
leave
lds
mov
or
shrb
pusha
xchg
or
fs
mov
jb
ret
mov
fs
push
mov
clc
lret
jae
mov
jge
xchg
cwtl
ret
pop
add
mov
lahf
mov
aaa
or
xchg
cwtl
push
sub
insl
jne
push
std
sub
fiadds
pop
out
je
in
inc
add
mov
sub
or
and
testb
pop
stos
mov
aaa
lret
ret
out
fwait
and
enter
test
adc
dec
mov
stos
adc
das
stc
push
xchg
insl
fadd
mov
lock
pushf
cli
in
fcoml
iret
fiadds
aam
and
sbb
add
xor
lahf
and
sub
dec
jl
mov
mov
xchg
pop
mov
cmp
aad
ja
stos
jmp
sub
mov
add
push
and
cmp
mov
int3
je
push
out
sahf
mov
adc
call
test
jp
push
jnp
mov
cmp
icebp
fdivs
jne
popa
ss
aam
mov
mov
push
jne
push
in
sahf
sub
int3
roll
mov
ja
lret
in
mov
mov
pusha
push
mov
pop
push
sub
mov
popf
loope
inc
fs
int3
in
mov
lea
aaa
sub
test
arpl
or
loope
push
xchg
sbb
mov
popl
adc
or
and
icebp
out
cmp
test
insl
popf
sbb
push
add
mov
adc
jbe
add
idivb
pop
xchg
inc
dec
repnz
addr16
and
scas
or
mov
cltd
or
xor
mov
jge
xchg
xor
mov
mov
push
daa
outsb
push
jae
mov
fcoml
call
pop
lahf
loope
adc
daa
mov
and
add
mov
xchg
fists
lcall
xchg
xor
out
inc
lret
int
mov
out
test
ljmp
cwtl
push
mov
int
xorb
ljmp
loopne
jne
xchg
data16
push
cmpsb
les
push
sub
mov
js
push
shlb
mov
mov
and
pop
iret
adc
lods
inc
clc
jae
lock
sub
inc
jmp
push
out
sub
xchg
data16
test
div
clc
jno
jmp
mov
pop
out
adc
or
dec
push
push
or
mov
shll
adc
popa
push
push
fwait
inc
adc
add
js
sub
jmp
loope
scas
mov
dec
push
fiaddl
int
inc
repz
sbb
fsubs
xlat
xchg
mov
pop
push
andl
ret
mov
inc
aam
or
jg
lea
pushf
or
subl
fisttpll
jbe
xor
int3
dec
add
push
jmp
push
xchg
addr16
mov
xchg
fisubs
loope
ss
mov
ret
jg
or
mov
pop
pop
and
sbb
cli
mov
sub
mov
sar
and
xchg
mov
cmc
repnz
not
testl
divb
aas
or
or
cmp
mov
push
sarb
add
cmpsl
mov
sub
sub
ljmp
adc
cmp
pop
cmp
dec
test
mov
lods
push
push
jo
pop
ror
add
push
lret
fwait
xchg
mov
xchg
push
mov
jae
lea
mov
leave
cmpsl
test
jno
pop
jns
arpl
scas
fiadds
xor
add
mov
and
sahf
lods
push
mov
outsb
fnsave
rcrl
mov
mov
xchg
dec
xor
mov
popf
rolb
mull
jmp
jbe
mov
fidivs
or
ja
pop
in
cmp
call
fisubrs
xor
loop
addb
sub
leave
iret
lcall
pushf
in
jb
sub
aaa
ss
mov
xor
xor
adc
mov
fs
mov
out
mov
or
popf
sub
dec
mov
add
and
xchg
fsubl
rorb
pushf
sub
push
cmp
jns
sti
jb
das
mov
in
mov
dec
test
sbb
testl
push
jle
mov
pop
cli
fsubrl
fwait
rorl
push
aas
mov
repz
ret
dec
cwtl
das
shrb
cltd
jmp
mov
data16
imul
mov
fwait
ret
xlat
push
scas
enter
or
sti
aad
inc
or
idivb
test
xchg
jnp
cwtl
psrad
test
push
test
leave
mov
stos
inc
sub
inc
enter
adc
pop
inc
test
push
pop
cmp
enter
mov
test
imul
dec
les
push
xor
pushf
scas
ror
sub
xchg
sub
mov
cltd
sub
lock
or
mov
and
in
das
ret
les
push
sbb
imul
pop
aad
sbb
mov
jo
xor
inc
hlt
fnstcw
add
lock
ss
je
fsubrp
and
inc
cmp
and
inc
lods
pop
ss
fmuls
inc
call
out
xlat
pusha
jmp
pop
xor
sahf
pop
add
mov
lds
and
aas
lock
jmp
arpl
add
lds
insl
pushf
pop
adc
int
sbb
sub
add
gs
out
mov
jle
lods
push
leave
inc
dec
std
in
loope
and
rol
pop
mov
xchg
cltd
mov
push
data16
fs
jp
rolb
out
jae
sub
in
insl
addr16
adc
push
loope
testl
fistl
sub
dec
movsl
sub
mov
icebp
inc
cmp
mov
mov
faddl
insb
jne
mov
jae
push
jge
mov
fildl
jg
loopne
stos
scas
push
das
mov
ss
add
or
jmp
xchg
add
or
push
inc
sub
mov
sahf
js
push
sbb
jl
sti
adc
in
pop
mov
add
push
push
xchg
repnz
xor
fisubs
xor
xchg
mov
push
fbld
repnz
sbb
loope
dec
les
ds
and
ljmp
fstpl
mov
mov
js
in
js
xor
mov
ja
sbbl
jne
in
repnz
mov
inc
pop
cmp
jle
mov
les
aas
pop
jns
cmc
in
cmpsl
sbb
xchg
dec
sbb
insl
xor
clc
cltd
ret
cmp
leave
das
insl
pop
inc
das
stos
mov
inc
fucomp
mov
sbb
ss
sti
std
dec
imul
lret
mov
mov
mov
pusha
push
mov
pop
scas
mov
adc
push
add
sbb
cmp
int
mov
xor
jl
sbb
arpl
and
xchg
ljmp
int
addb
aas
sub
xchg
jbe
mov
cmp
rcr
xchg
cltd
mov
sub
dec
les
pop
push
adc
movsl
movsb
js
addb
stos
scas
popa
inc
dec
ds
sub
mov
add
in
test
xchg
int3
imul
rorl
loope
int
loopnew
ret
mov
ja
pop
and
mov
push
cs
out
gs
cltd
int3
adc
in
cli
leave
stos
or
loope
test
test
jl
adc
stos
rolb
pushf
sub
sub
mov
sub
movsl
fidivrs
xor
iret
pop
pusha
jmp
fadds
jae
cs
stos
cmpsb
jg
push
sbb
pop
mov
inc
fdivl
xchg
test
hlt
cli
sbb
cmp
clc
sub
mov
push
lods
outsb
mov
lcall
repz
jns
dec
inc
mov
pop
aam
or
jl
out
xchg
sbb
sub
push
in
les
nop
loop
cmc
testl
add
cmp
mov
xlat
loopne
lcall
rorb
cmpsb
sbb
int3
xchg
jb
movl
iret
pop
arpl
mov
pushw
mov
pop
arpl
adc
fldt
les
add
fisubrs
push
push
mov
arpl
loopne
fcmove
xorb
xor
pop
frstor
mov
pop
lcall
ret
and
dec
es
mov
push
push
or
dec
ss
out
and
jmp
negb
mov
stc
cld
add
fucompp
sbb
mov
add
jl
pop
int
outsl
inc
aad
das
addr16
xchg
dec
jp
mov
jae
cmp
in
popa
movsb
mov
or
nop
icebp
inc
sbb
xor
mov
sub
push
or
lds
idiv
push
sub
xor
inc
outsb
mov
ljmp
shrb
mov
ds
jle
jg
add
or
and
imul
or
arpl
or
mov
xchg
jl
mov
cld
push
jp
sti
decb
loopne
test
data16
js
push
mov
add
sbb
mov
xchg
fstpt
mov
pusha
dec
add
cltd
sbb
xor
bound
into
pusha
pop
cmpsb
addr16
fistl
mov
bswap
fcmove
cmp
loop
adc
int3
aam
in
dec
and
pop
adc
fcmovu
shrb
cli
leave
cmpsl
jg
lret
mov
sub
pusha
mov
and
push
nop
insl
dec
repz
push
inc
jno
adc
popf
ficomps
inc
fbld
test
xor
jmp
add
mov
push
xor
loopne
daa
dec
mov
mov
fistpl
jns
sub
push
sbb
pop
jae
mov
mov
cmp
cmp
mov
hlt
stos
adc
out
bswap
cmp
enter
and
jp
lods
xor
sub
loop
aad
jl
jnp
pop
inc
or
jae
in
mov
dec
imul
mov
xchg
popa
cltd
mov
leave
leave
sub
in
pop
rcl
in
push
mov
lea
call
push
sub
add
sbb
subb
or
enter
leave
jnp
es
jns
nop
movsb
cmp
xchg
xor
fidivl
stos
hlt
add
xor
jnp
out
or
cmp
adc
fninit
ret
in
or
ret
ret
ljmp
shll
sahf
sub
lock
xchg
jp
popf
sub
inc
mov
or
adc
xchg
in
adc
ss
sub
jle
jb
mov
fidivl
sub
jb
orl
ss
call
fidivl
xchg
in
shl
shll
js
shl
or
arpl
push
std
inc
mov
fxch
pop
pop
orb
lock
call
cltd
and
aad
ss
dec
adc
in
xchg
pop
mov
dec
adc
pushf
mov
ja
out
adc
or
imul
and
inc
aam
into
mov
mov
call
inc
pop
sbb
sub
out
jbe
inc
jge
sti
or
gs
cmp
xor
flds
sti
xor
pop
ljmp
rclb
push
les
dec
adc
pusha
shr
aaa
fdivr
push
pop
shrl
dec
xchg
icebp
movsb
sahf
mov
aam
sbb
pusha
loopne
cwtl
cmpsl
cs
xchg
fnstenv
cmp
fimull
stc
lret
mov
mov
notb
jmp
imul
or
push
ljmp
lods
xchg
jecxz
jle
pushf
adc
stos
insl
sub
jecxz
adc
arpl
mov
lret
in
lahf
push
aaa
rcl
scas
popf
push
inc
pop
movsl
jl
aaa
out
pop
ret
push
ror
shll
push
jp
push
mov
cmp
daa
cmp
adc
mov
rclb
or
xchg
sub
fdecstp
loop
cmp
nop
sbb
repz
pop
sub
ja
lahf
cli
call
pop
testb
in
inc
dec
sbb
xlat
add
adc
test
cmpb
ss
inc
xlat
xor
lret
sbb
arpl
fisubs
mov
pop
ja
rcrb
sahf
mov
mov
sbb
and
sahf
dec
insb
jge
mov
push
bound
jb
repz
inc
xor
and
mov
out
jp
adc
xor
daa
and
call
imul
repnz
lcall
xchg
pinsrw
js
push
lret
insb
fdivrl
sbb
cli
inc
clc
dec
pop
fdivrp
repnz
and
fcmovnu
push
mov
jmp
fs
push
and
push
add
js
sub
jmp
shlb
adc
cmpsb
roll
push
mov
fisttpl
stc
sub
adc
xor
ret
pop
das
lods
and
out
ss
out
inc
js
cmpb
nop
cwtl
jecxz
lds
dec
xlat
xor
jns
sbb
nop
xchg
xchg
ja
and
pop
and
std
sub
mov
es
dec
jbe
push
xchg
push
enter
xchg
daa
movsb
inc
and
lods
and
clc
sub
or
repnz
jbe
or
movsl
cs
outsl
cld
cmp
stos
cmp
cmp
mov
pop
cmc
stc
repnz
inc
rcl
sahf
pop
or
mov
test
xchg
sub
icebp
repnz
pop
xor
xchg
imul
inc
cmpsb
mov
leave
rcrl
aad
inc
pop
leave
and
std
and
cmpsb
call
es
ljmp
cld
pop
mov
jg
out
leave
es
jne
mov
jp
adc
mov
dec
lret
cmp
inc
mov
pop
movsl
stc
jecxz
gs
xchg
cmp
loope
fimuls
and
pushf
hlt
cmp
lods
xchg
mov
gs
shlb
loopne
pop
repnz
lods
sbb
lods
mov
outsb
out
lds
les
gs
sub
cmpsl
jecxz
push
lods
and
stos
outsl
push
test
gs
stos
paddw
push
inc
cli
mov
cmc
xchg
dec
jb
jnp
mov
out
sti
imul
add
pop
lds
pop
das
lcall
xor
imul
push
adc
mov
gs
mov
jne
leave
test
out
cmp
xor
fwait
jo
cmp
imul
mov
xchg
mov
lock
in
scas
dec
mov
loope
adc
into
lcall
mov
dec
fcmovnb
sbb
jg
jmp
sti
jno
adc
mov
add
or
and
mov
movsb
mov
xchg
subl
dec
ss
xchg
xor
fisttpl
cmp
push
std
out
pusha
cmp
mov
jp
mov
pop
jg
inc
mov
push
pop
jnp
or
out
adc
xchg
push
ficoml
ds
test
or
sub
inc
fiaddl
adc
aad
imul
repz
cltd
mov
xlat
add
cmpb
adc
jbe
mov
mov
push
hlt
sbb
pop
movsb
or
rcrl
mov
xchg
fimull
sub
xor
or
movsl
out
repz
mov
adc
icebp
cld
add
xor
pushf
paddsw
sti
loop
outsl
push
jmp
das
cld
pop
and
push
adc
js
push
mov
std
push
out
push
adc
ret
dec
ret
or
mov
sbb
adc
inc
mov
fadds
dec
pop
inc
xchg
pop
ja
push
mov
xchg
adc
aam
jne
add
icebp
out
std
ret
aam
sti
sbb
add
sbb
hlt
out
lret
and
jp
out
add
test
push
ror
inc
or
rcrl
cwtl
mov
aad
dec
mov
rcrl
xlat
clc
push
out
cmpsl
inc
outsl
xor
push
lods
in
mov
mov
rorb
dec
add
inc
fidivrl
mov
pushf
in
push
ja
jg
repnz
pop
xchg
shrb
lcall
jae
fdivs
lea
mov
inc
rdmsr
popf
pop
mov
inc
inc
jecxz
mov
inc
lock
lcall
test
mov
jb
adc
mov
int
stc
out
mov
lods
inc
out
mov
mov
stos
shlb
sub
scas
sbb
add
iret
or
xchg
push
sbb
cwtl
adc
enter
ss
cmpsl
ret
adc
pop
lds
or
fldenv
je
sahf
jb
in
jmp
cs
aam
test
sub
push
jbe
test
sti
add
fs
mov
cli
sub
xor
adc
cmpsl
sub
into
dec
adc
jl
hlt
test
mov
cmp
nop
mov
adcl
inc
xlat
adc
adc
inc
cld
push
and
daa
pop
dec
pop
out
sti
add
xchg
mov
sbb
add
fmul
sbb
cld
mov
inc
or
adc
push
push
ja
xor
out
movsl
mov
mov
xchg
pusha
lret
pop
jl
cs
xchg
cmpsl
sub
add
insl
ss
push
fstps
fwait
lret
mov
lods
pop
fists
inc
fs
mov
mov
sub
xchg
mov
fs
inc
sub
out
sbb
pop
adc
pop
repz
ljmp
pop
adc
xchg
std
cmpsb
adc
mov
mov
pop
adc
mov
icebp
jecxz
push
dec
pop
cmpsb
mov
outsb
lahf
fdivr
popf
add
add
rol
and
das
jl
mov
das
xchg
js
and
test
frstor
addr16
lret
fmulp
cmp
pop
jbe
outsl
addl
shll
jl
clc
pop
scas
fwait
push
mov
sub
dec
cmp
aad
scas
lock
mov
rol
and
sbb
sub
jnp
and
pop
add
and
sub
repnz
xor
pop
mov
pusha
xchg
adc
insl
arpl
lret
xor
repnz
jns
sub
inc
dec
stc
sub
inc
mov
push
or
mov
sbb
je
xchg
orl
jno
add
in
pop
test
mov
je
std
mov
out
es
cmc
enter
mov
and
int3
jnp
push
movsl
mov
jge
pop
add
jns
push
rolb
outsl
fidivs
pop
jg
sahf
sub
lods
sub
xchg
scas
out
fidivrl
mov
xchg
in
jnp
sub
test
sub
jno
ret
cmpsb
push
xlat
mov
leave
lods
adc
add
mov
fnstcw
lods
fsubrl
arpl
and
loopne
cmpsl
pushf
jnp
cmpsl
inc
or
adc
in
out
pushl
lock
ret
lahf
fsts
mov
imul
rorb
cmp
xchg
stos
adc
push
ficompl
adc
jl
aam
sbb
sbb
je
ja
sti
pop
and
adc
mov
mov
inc
sub
mov
or
arpl
dec
ret
hlt
lret
and
movsl
and
xor
addb
xor
jno
cmp
ret
mov
pop
clc
fiaddl
into
hlt
jno
lock
loope
rcr
mov
negl
pop
ds
xor
add
leave
pusha
mov
cs
xchg
repnz
add
sub
mov
pop
je
pop
sbb
add
call
rclb
loopne
sub
in
andb
sahf
mov
pop
sub
push
push
inc
shl
sahf
pusha
cmp
jge
inc
xchg
push
sarl
sub
and
jecxz
dec
and
jle
aam
pop
xchg
xor
push
push
stos
and
cmp
cld
mov
jle
movsl
sub
lret
sahf
cltd
repz
scas
je
mov
dec
cmp
xchg
les
mov
push
data16
jo
das
aas
dec
add
cmpsb
mov
pop
sbb
mov
dec
dec
push
and
xor
ljmp
xchg
lret
into
sbb
jo
xor
stos
and
fsubrs
or
lcall
lahf
imul
push
push
pop
or
mov
sub
mov
into
jne
jae
popf
popf
fistpll
jne
mov
popf
das
mov
mov
inc
inc
lods
jle
popw
jp
dec
popf
push
stos
popf
xlat
xchg
xchg
pushf
adc
iretw
mov
and
sbb
enter
xchg
dec
insl
shl
pop
lahf
push
decb
cld
aaa
cmpb
and
sbbb
cmp
rorl
in
stos
lock
mov
cmp
cmp
xchg
jle
cli
and
dec
mov
sub
add
enter
mov
and
pop
add
jno
sub
movsb
aaa
and
rcll
popf
sbb
jmp
int
jg
call
jo
std
sarl
pop
cli
ficoml
or
shll
push
lcall
mov
lahf
and
aad
jnp
lock
das
incl
push
int3
sbb
fwait
xor
pop
pop
dec
sub
enter
out
rcrb
mov
psubusw
xlat
push
xchg
fwait
ljmp
lock
aaa
xor
sar
sub
lock
mov
sbb
daa
sti
jmp
xor
xchg
push
xchg
jo
mov
or
fcoml
sbbb
movsb
and
cmc
aam
scas
xchg
jns
fwait
dec
and
pop
xchg
xorl
mov
pop
xor
movsl
ret
cli
cli
lds
dec
sbb
inc
xchg
jge
jae
and
loopne
or
sbb
or
clc
adc
dec
pop
dec
adc
xchg
cwtl
mov
cmp
mov
xor
lret
stc
test
jl
push
andb
xor
fmul
xchg
mov
insl
inc
lods
mov
push
ret
aaa
scas
jle
or
popa
xchg
xor
fucomi
sub
mov
aam
mov
cmp
std
lods
lcall
test
nop
aad
mov
fsin
xor
jne
mov
aam
out
imul
arpl
stos
pop
xchg
sub
sahf
xchg
sahf
push
or
mov
in
fildl
std
imul
push
dec
fwait
inc
xchg
je
push
mov
incb
push
ret
xor
and
push
push
sub
jnp
and
scas
jge
sbb
sub
int
idiv
out
ret
loope
aad
divl
adc
cmp
hlt
adc
jno
das
out
aas
inc
sbb
lea
sahf
jne
rorl
les
shlb
nop
lods
ljmp
mov
enter
outsl
mov
loopne
cmp
pop
sbb
lods
ds
xchg
pop
imul
jle
or
cmp
imul
clc
and
mov
dec
in
addr16
jmp
ret
jge
jo
inc
cmp
mov
jns
pop
inc
lds
inc
xchg
dec
mov
sub
ret
cs
adc
mov
popa
bound
adc
mov
sbb
in
test
xor
mov
fsub
std
imul
push
xlat
test
int
fistl
dec
mov
stc
mov
cmpsl
xor
mov
jmp
pop
adc
imul
inc
xchg
push
xor
outsl
xchg
pop
adc
repnz
loope
mov
scas
dec
das
push
xchg
mov
mov
cmpl
repz
sub
sub
push
out
out
mov
xor
repnz
adc
or
out
hlt
jno
popf
jno
mov
xor
test
outsl
hlt
xor
je
add
push
movl
incb
pop
lcall
inc
out
popf
jge
lock
cwtl
add
sti
inc
push
sub
mov
xchg
data16
push
lea
jbe
mov
push
aas
bound
loope
push
cwtl
addr16
push
aas
jp
and
mov
or
dec
dec
mov
cmpl
mov
pop
jp
in
dec
filds
shlb
mov
pop
dec
ljmp
adc
ss
sbb
adc
mov
sti
pop
scas
test
xchg
iret
pushw
cmpsb
ljmp
fcompl
and
imul
sub
xchg
push
outsl
or
xchg
scas
xor
mov
mov
push
add
fimull
es
lahf
mov
lret
jno
nop
sbbl
jmp
shrb
lcall
pop
inc
jb
xor
sub
xchg
push
ljmp
addb
icebp
mov
push
mov
or
cltd
mov
lret
add
gs
loope
insb
imul
in
fisttpll
fs
clc
jl
sub
sbb
mov
imul
jo
or
lret
mov
inc
inc
push
mov
or
mov
cmpsb
pusha
movsb
pop
sbb
cld
lret
je
add
ret
cmp
leave
push
mov
ja
and
rolb
in
push
mov
sub
or
add
push
arpl
lcall
sarl
fnsave
ficompl
inc
mov
shl
xor
or
push
mov
pop
mov
imul
shrb
or
cld
push
aaa
cmp
push
add
arpl
and
pop
orb
clc
stos
dec
cwtl
test
sbb
inc
xor
les
lcall
in
jge
jne
popa
sbb
js
imul
jo
ficoms
push
or
fiadds
mov
sub
mov
pop
gs
repnz
lcall
cwtl
repnz
sbb
pop
jno
loopne
push
mov
dec
stos
mov
adc
cltd
out
dec
mov
xchg
push
xchg
dec
frstor
into
sub
pop
adc
inc
jp
xchg
pop
xchg
lea
inc
iret
inc
frndint
das
into
and
mov
mov
into
inc
out
inc
daa
xchg
popa
ret
popa
lret
out
ljmp
ret
pop
sub
lahf
sahf
cli
add
add
lock
scas
push
aaa
test
adc
cmpsb
lds
leave
cmp
cmp
pop
clc
jne
dec
cmp
shll
ret
pop
jle
cli
inc
pop
push
push
jbe
les
mov
jl
pop
fwait
cmp
or
mov
leave
repnz
testl
stos
scas
xchg
jp
xchg
mov
icebp
xor
js
jb
pushl
ja
insb
fxch
xor
and
dec
mov
push
out
and
rcll
sub
push
and
out
ret
in
xchg
testl
push
sbb
cltd
mov
sub
jle
test
popf
rorb
mov
lods
xchg
mov
and
daa
clc
outsl
hlt
popa
ds
jb
mov
or
sti
dec
mov
shrb
js
mov
orl
mov
cmp
xorb
addr16
inc
xchg
ja
cmp
pop
cmp
rcrl
push
inc
testl
ficoms
lea
sahf
xlat
mov
sbb
push
xchg
fidivrs
mov
or
sub
into
inc
dec
inc
dec
push
xchg
sbb
popa
or
dec
aas
mov
icebp
movsb
jle
push
out
movsl
mov
test
cli
stos
jmp
rcrl
jns
daa
pop
mov
push
mov
pushf
mov
add
pop
mov
adc
jno
jbe
pop
clc
repnz
rorb
out
in
outsl
inc
mov
fldcw
loope
test
test
out
mov
add
mov
sbb
dec
dec
loope
and
cmpb
jae
mov
inc
xor
mov
int
mov
gs
aaa
mov
mov
xchg
mov
out
mov
and
pop
inc
sbb
and
out
xlat
int
rorl
shrb
int
repz
xchg
mov
mov
mov
jle
lcall
jae
cs
adc
cli
jecxz
push
inc
lea
pop
pop
mov
xchg
rcl
lods
xchg
mov
fmuls
mov
dec
bound
outsl
jle
jo
pop
mov
lahf
pop
mov
rcl
and
push
scas
lcall
hlt
xchg
hlt
je
push
cmpsl
or
cld
scas
lods
mov
pop
lcall
ret
clc
out
int
mov
mov
div
arpl
sub
xchg
mov
and
xlat
jecxz
popa
cld
inc
xchg
je
sub
scas
push
push
daa
xchg
push
jp
push
nop
push
sbbb
and
inc
mov
fs
js
adc
cmpsl
ret
xor
or
cmp
xchg
test
addb
sbb
cmp
cmp
dec
scas
pop
ljmp
ljmp
int3
gs
pop
lret
in
lock
xor
and
mov
sahf
mov
jo
scas
and
jmp
lret
add
xor
or
outsb
xchg
idivl
mov
or
add
ljmp
or
pop
iret
mov
and
pop
pop
jne
jnp
aas
and
mov
dec
je
dec
pop
mov
repz
and
outsl
iret
dec
shrl
pop
jb
push
jnp
push
push
mov
aad
bnd
popl
leave
push
hlt
xor
sub
xor
cmp
leave
faddl
aad
std
mov
dec
in
xchg
leave
popf
fisubrs
movl
xchg
jg,pn
in
imul
jp
or
in
mov
jb
cmp
adc
mov
imulb
jnp
lea
pop
pop
aas
int3
mov
sub
test
loopne
out
xor
das
sbb
adc
sbb
xorb
lahf
fisttpl
cmp
mov
jecxz
clc
cmp
add
dec
xor
es
ret
ja
xchg
jnp
call
jecxz
bound
and
inc
jmp
mov
xor
adc
outsl
popa
jae
mov
fs
les
in
test
sbb
out
push
add
imull
enter
pushf
pop
fldenv
xchg
lret
adc
js
and
in
ret
push
sbb
and
inc
in
jge
pop
sbb
cs
xor
pop
sbb
pop
sarb
mov
xchg
jnp
cld
jo
cwtl
and
push
fsubs
scas
shr
scas
inc
xchg
rolb
js,pt
imul
push
mov
int3
jmp
xor
add
pop
pusha
sarb
arpl
sahf
push
int3
int
je
jb
test
cli
aad
mov
sub
cmpsl
inc
shrl
push
and
or
and
ja
sarl
mov
and
bound
lock
push
repz
ret
mov
mov
cmp
out
cmp
cwtl
rcrl
push
push
mov
aam
cmp
jns
push
inc
fcmovnu
cmpsl
ret
loop
cwtl
and
bound
jp
push
pusha
inc
nop
inc
sbb
rclb
call
pop
adc
add
dec
call
sbb
les
sub
insb
ja
outsl
fs
mov
fcmovne
out
xor
pushf
mov
mov
mov
cli
loop
mov
jns
int
arpl
loope
sahf
int3
xlat
push
into
pop
arpl
repz
lahf
aam
lcall
jl
test
and
sbb
jno
mov
mov
inc
cld
fwait
shrb
lret
mov
mull
add
push
fiadds
cmc
scas
mov
adc
mov
or
mov
cmp
shrb
mov
sub
repnz
rorb
fcmovu
cli
push
mov
les
aad
sbb
cld
and
xor
xchg
xchg
jmp
jae
adc
jne
xor
mov
inc
sub
call
lret
push
ds
mov
jecxz
decl
xor
pop
xor
sub
jmp
lret
mov
aam
mov
mov
mov
sarl
xor
xor
sbb
sahf
xor
sub
ret
stos
ds
and
cmp
imul
sbb
and
jle
sub
faddl
pop
shll
push
scas
pop
lock
jbe
rcll
or
push
cmp
jns
bound
mov
mov
inc
jle
cmp
inc
xchg
cmpb
stos
xchg
jp
cmp
jmp
inc
or
xor
mov
stos
cmp
loopne
or
out
in
nop
jp
jnp
add
lret
xchg
sub
nop
push
mov
jno
mov
ret
sbb
mov
fcoms
push
jecxz
jo
mov
xchg
mov
dec
lods
test
fcomip
dec
pop
cld
sbb
xor
std
or
cmp
add
xor
xchg
insb
mov
dec
pop
mov
xchg
inc
add
pop
das
xchg
xchg
sbb
sub
sti
out
xchg
mov
sahf
rclb
stc
jg
cmc
xorb
fucom
sub
mov
or
clc
sbb
ja
inc
pop
or
in
mov
outsl
jne
iret
jp
pop
pop
jmp
or
loop
daa
rcrb
mov
enter
xchg
filds
loop
or
jmp
adc
rorl
bound
pop
adc
and
es
iret
and
push
addr16
in
insb
fldcw
gs
and
sub
push
jge
push
mov
dec
es
dec
incb
mov
cltd
inc
mov
inc
scas
subl
adc
dec
outsl
movsb
sub
sub
push
les
push
xor
imul
fwait
pop
mov
add
gs
data16
sub
das
int3
xchg
xchg
ret
scas
sarb
cs
mov
jo
dec
jae
add
les
xor
push
or
pop
aam
call
adc
cmp
sub
insl
cltd
mov
push
jmp
mov
pop
rolb
fsubrl
add
sbb
subl
sbb
aad
mov
xor
imul
mov
fdivrl
push
mov
aad
mov
mov
xorl
ljmp
fdivs
add
out
icebp
push
xchg
lcall
outsb
test
cld
mov
in
jne
jno
subb
xor
sbb
out
or
xlat
hlt
in
test
leave
rcl
mov
jns
pop
mov
push
mov
movsb
repnz
xchg
push
int
push
xor
push
popa
sub
pop
std
or
lods
and
xlat
cltd
flds
mov
inc
subl
xlat
sbbb
jl
loopne
shll
mov
inc
into
inc
fldln2
mov
arpl
dec
lea
lock
btc
dec
outsl
pop
gs
stc
gs
push
in
jmp
fisubl
cmp
mov
loope
mov
mov
and
adc
xor
sub
or
imul
push
jg
in
repnz
test
mov
aaa
fucom
pushf
je
stos
cmc
adc
stos
loop
jge
mov
dec
pop
jl
jmp
lds
add
aaa
mov
movsb
or
jmp
dec
cmpsl
inc
and
rorb
xchg
xchg
push
cmp
in
cld
in
stos
testl
cwtl
sbb
inc
sub
inc
data16
adc
mov
sbb
jmp
inc
nop
add
arpl
mov
sub
sub
enter
mov
push
loopne
jnp
mov
pop
xlat
das
lds
jg
sbbb
cmpsl
jecxz
jmp
lret
std
xchg
mov
jns
adc
sub
pop
clc
insb
sbb
adc
out
push
or
mov
rorl
sbb
fsts
jmp
and
sti
lods
lret
mov
add
mov
mov
adc
xor
push
sarb
mov
dec
mov
popa
mov
cmp
xchg
pop
into
cmpsl
mov
mov
out
bound
leave
mov
inc
mov
jnp
and
sbb
call
pop
cwtl
addr16
adc
sbb
rcrb
push
aaa
adc
mov
sub
and
pop
mov
jb
sbb
push
outsb
fwait
cmp
out
cmp
outsb
add
pop
inc
sbb
insb
lret
mov
jg
bound
fidivl
das
cltd
cli
mov
jl
xor
jns
pop
shll
leave
mov
mov
mov
push
daa
mov
jb
jae,pn
loop
fmuls
cmp
mov
mov
adc
mov
fsub
int3
les
int
pop
stos
iret
push
popa
inc
add
push
inc
jg
lock
popa
sbb
cwtl
cmp
inc
mov
fdivrs
lods
stos
scas
add
jbe
dec
ds
sub
aas
mov
mov
out
popf
cltd
inc
cmp
insl
inc
fwait
dec
mov
add
xor
cli
mov
rcr
pop
mov
pop
mov
lret
adc
pop
sub
scas
mov
stc
jg
stc
popa
adc
out
jnp
cmpb
mov
aad
ds
mov
add
jp
xor
mov
pop
pushl
mov
adc
movsl
call
cmp
ljmp
sahf
dec
pop
imul
pusha
xchg
ja
jl
aas
cmp
scas
iret
xor
lret
in
call
pop
sti
cli
xchg
loope
inc
movsb
dec
xchg
clc
leave
pop
inc
rcl
ja
sub
subb
stos
arpl
mov
lods
inc
sbb
cmp
xchg
pop
dec
xor
mov
mov
cwtl
cmp
je
push
lcall
add
insl
divl
jo
out
lea
push
lea
sub
cmp
stos
stos
or
sbb
dec
gs
lret
adc
and
scas
shlb
push
xor
popa
test
sub
inc
fs
mov
jmp
add
fs
ja
pop
or
adc
jae
pop
fstps
mov
movsb
xchg
sbb
xchg
data16
cli
repnz
mov
je
pop
dec
lret
cmc
test
fldenv
mov
xchg
cld
xchg
sbb
lahf
ss
aad
sbb
ret
out
jecxz
cld
or
lret
lret
aad
rcrl
aaa
int3
lock
call
mov
adc
test
mov
outsb
sbb
dec
push
loope
pop
jl
mov
lock
aaa
rolb
jge
rorb
pop
jecxz
in
call
lods
mov
pop
adc
lock
jb
jno
cmpsl
popa
jle
repnz
cwtl
aas
cmp
imul
fldl
loop
dec
dec
cwtl
xchg
test
enter
pop
ret
sub
mov
mov
cwtl
arpl
int
mov
cmp
jecxz
cmc
add
and
xchg
fs
inc
push
xchg
lds
mov
movsb
dec
pop
push
inc
imul
rcrb
lods
fadd
popf
stos
jge
inc
lods
je
adc
and
lds
xchg
lods
int3
ret
inc
add
call
push
mov
xchg
sbb
add
mov
push
and
lock
mov
faddl
aas
outsb
repz
repnz
popa
cwtl
pop
dec
mov
mov
mov
cld
ljmp
cmp
jbe
xor
repnz
test
xor
or
xchg
int
inc
push
adc
divl
rcrl
xchg
mov
or
fwait
cmp
lcall
or
xor
stos
in
mov
addr16
jle
xor
xchg
popa
jbe
not
sbb
insl
xchg
adc
mov
mov
std
or
sahf
push
cmp
int3
mov
pop
testl
mov
sbb
mov
imul
jnp
sbb
xchg
add
sahf
fcmove
inc
dec
jno
ljmp
mov
cli
stc
mov
iret
mov
enter
sbb
sub
ret
std
pop
add
xchg
jo
imul
pop
xchg
jge
mov
test
dec
std
push
mov
dec
outsl
sbb
or
jno
in
jg
and
cmc
add
arpl
jmp
daa
pop
popf
enter
aam
movsb
imul
pop
sbb
int3
test
jle
out
or
push
inc
fwait
je
sbb
loope
cld
out
test
mov
pop
stos
sbb
sub
or
push
push
testb
push
in
ljmp
scas
inc
sub
or
repnz
sarl
fmull
ja
mov
cmp
ljmp
jno
out
or
mov
fstpl
mov
testl
or
ja
mov
xchg
jecxz
ljmp
adc
adc
leave
adc
es
pop
movsb
jp
cmp
popa
push
mov
jbe
scas
mov
mov
pop
fildll
mov
rorb
push
fistpll
lods
ja
or
adc
jl
pusha
pop
ss
or
or
mov
sub
lret
sbb
fildl
xor
pop
sti
dec
enter
pop
xor
stos
clc
mov
xor
dec
ljmp
jae
adc
aas
ret
mov
movsl
push
inc
insb
pusha
xchg
dec
xor
lret
push
dec
pop
pop
scas
push
cmp
js
and
inc
sub
clc
arpl
cmpsb
mov
in
mov
add
mov
enter
in
int
jle
loop
fisttpll
pop
pop
movsl
ds
sbb
ret
push
mov
add
jo
or
mov
sbb
dec
lret
push
push
loopne
jl
sub
loop
cmp
xchg
sub
mov
fsubl
enter
push
cmc
lds
pop
dec
push
jl
addr16
sub
dec
andb
xchg
jecxz
pop
push
pop
add
cwtl
push
cwtl
sti
scas
jmp
fs
sub
push
jecxz
mov
hlt
jmp
daa
or
jmp
test
stc
xorb
jnp
xchg
xchg
ja
xlat
add
jo
push
inc
dec
sub
inc
repz
loop
xchg
inc
sub
movsb
xchg
fstpt
cmc
mov
jo
cmp
or
add
push
xor
jecxz
jns
pop
mov
iret
scas
inc
jl
nop
cld
andb
pop
popa
push
jecxz
ljmp
dec
jb
or
xchg
push
and
jge
imul
adc
sbb
cmp
std
pop
addb
inc
push
or
lahf
test
mov
or
jge
insl
mov
out
pop
ljmp
mov
gs
fisttpl
outsl
add
pop
sbb
mov
sub
jge
fistpll
test
out
mov
inc
mov
aaa
je
xchg
mov
js
jb
push
pop
xor
bnd
out
ficompl
clc
lret
mov
std
pop
pop
mov
xchg
jb
xor
out
popf
dec
movb
loope
jae
mov
jnp
ja
popf
mov
adc
cmpsl
mov
jae
call
or
jmp
lock
adc
and
ret
lcall
push
mov
pushf
mov
mov
clc
es
or
jo
jg
adc
or
leave
dec
push
call
lea
lcall
cli
xor
sti
mov
jmp
shr
pop
pop
out
ret
xchg
xor
dec
xor
aam
push
stos
cli
cmp
mov
and
jnp
push
fimuls
or
lds
pop
mov
rol
test
push
lock
mov
mov
testb
in
push
dec
jno
call
lods
lea
sbb
or
in
js
jo
sbb
imul
mov
in
lea
xchg
jnp
xchg
mov
mov
das
adc
add
mov
imul
xor
lret
xchg
cmp
cmp
stc
sub
cltd
dec
mov
cmp
imul
aas
in
and
subb
xlat
pop
ror
jno
rcll
pop
cmp
pop
pop
leave
add
pop
fimull
xlat
stc
xor
addr16
inc
fnstsw
pusha
push
clc
fnstcw
lock
loope
mov
mov
and
sbb
into
adc
ja
adc
fbstp
mov
cmp
sub
lea
lret
pusha
cmp
xor
daa
jb
sbb
or
or
sub
sarb
inc
hlt
sbb
fwait
cmpsl
push
frstor
jp
imul
lret
push
hlt
faddl
xor
in
jp
mov
lret
mov
je
adc
loop
int
inc
xlat
inc
shll
xchg
dec
dec
sbb
daa
jp
shlb
fldl
jnp,pt
jne
int3
testl
mov
loopne
mov
mov
jl
adc
inc
mov
inc
out
mov
mov
cmpsl
mov
jns
sub
jecxz
xchg
int
ljmp
insb
fnstcw
test
sbb
out
lods
push
ret
aam
push
ja
adc
add
cltd
pop
insl
fisubrl
add
sub
aad
push
cmp
jne
insl
sub
mov
dec
loope
aaa
xchg
cltd
test
add
mov
or
rol
js
xchg
jecxz
pop
pop
mov
insl
mov
pop
les
push
pop
adc
cmc
subl
or
adc
push
sub
ret
sbb
adc
lahf
mov
fnstcw
push
sub
dec
jl
daa
pop
xchg
sti
or
lock
dec
cli
cltd
loopne
mov
sub
mov
mov
repz
xor
imul
mov
jo
divb
mov
mov
shrb
mov
push
xor
enter
pop
fwait
jp
repz
les
sbb
cmp
pop
and
test
dec
bsr
loopne
enter
sbb
or
icebp
je
xchg
sti
jo
and
loopne
adc
mov
test
mov
icebp
dec
add
add
pop
insb
ds
fwait
lret
insb
add
add
adc
pop
pusha
push
push
pusha
outsb
mov
mov
mov
pop
in
add
cmp
mov
jle
test
fildll
xor
sub
sbb
mov
jae
and
ret
imul
loope
in
push
xchg
add
out
frstor
dec
in
ret
push
sahf
xchg
mov
inc
and
mov
sahf
fisttps
mov
mov
pop
jo
ds
mov
jp
out
mov
addl
sbb
outsb
ret
sub
inc
sbb
mov
push
test
xor
rclb
xor
xchg
cmp
and
push
pop
inc
loop
pop
cmc
mov
sbb
jle
pushf
shll
mov
popf
sub
mov
inc
mov
cmp
fildl
sub
cld
ss
xor
repnz
in
xchg
sti
push
gs
lret
push
jae
dec
mov
fadds
je
cli
adc
push
gs
pop
inc
fucom
cmpsl
push
addr16
xor
or
xor
mov
nop
push
dec
stos
sub
rcll
ja
testb
icebp
pop
js
std
lcall
jl
inc
sti
pop
cmp
rcrl
xchg
loop
xor
ficomps
mov
jg
push
in
rolb
les
jno
pop
inc
int
imull
jbe
or
and
sbb
inc
inc
sbb
cld
addr16
cmovge
cmp
dec
mov
sbb
or
sub
sub
aad
sub
mov
sub
pop
add
or
fninit
imul
jl
lds
insl
dec
push
mov
in
push
ja
mov
dec
mov
xor
repz
sbb
dec
sbbb
fstps
mov
sbb
push
inc
jecxz
adc
pop
aaa
sti
sub
insb
cmp
stc
push
sbbl
loopne
sub
cli
push
decl
les
and
xchg
lret
shl
mov
scas
fs
push
imul
out
xchg
call
cmp
fwait
orb
filds
cmpsb
and
incl
das
jge
dec
out
add
imul
test
js
fisubrl
mov
or
enter
stos
int
pop
xlat
push
in
popf
daa
lcall
or
sbb
inc
test
push
or
testb
cs
mov
adc
lret
bound
fldt
sahf
mov
jnp
cltd
dec
sbb
xchg
stos
ljmp
test
xchg
aas
mov
mov
lcall
jne
xchg
clc
pop
insl
mov
xlat
add
mov
add
lods
or
jnp
lcall
mov
stos
dec
cmp
outsb
test
adc
inc
dec
adc
aad
jae
insb
jb
xchg
mov
insb
sbb
or
mov
jp
and
mov
mov
add
cmpsl
les
loope
ret
out
mov
jle
push
jo
dec
mov
les
xor
pop
pop
xchg
mov
mov
jne
repnz
pop
hlt
mov
popf
sbbl
jp
mov
jne
lcall
jmp
int
mulb
or
mov
fnstenv
aam
push
movsb
repz
lea
mov
mov
pop
sbb
ds
and
and
xor
in
out
jno
lret
sbbl
and
xchg
xor
hlt
pop
jg
mov
pop
hlt
mov
dec
out
inc
fistl
xor
loope
cmp
shrl
mov
fisttpl
xor
notl
dec
add
mov
xor
lcall
sbb
xchg
cli
sub
stos
pushf
inc
pushf
jecxz
orb
pop
pop
loopne
stos
cmpsb
jae
cmpsl
insb
xchg
pop
pushf
daa
test
dec
push
lds
je
test
mov
xor
sbb
dec
xor
fistl
pusha
sub
jbe
pop
mov
mov
add
std
aam
int3
popa
sarl
xor
incl
fdivs
mov
ljmp
pop
add
mov
sbb
mov
outsb
jbe
mov
sbb
mov
out
ror
inc
mov
dec
in
adc
inc
push
mov
std
jle
jnp
inc
test
push
cmp
loopne
insb
dec
push
pop
mov
fucomp
or
inc
sub
sub
das
pushf
hlt
icebp
bound
push
jno
daa
add
xchg
sub
pop
out
mov
int3
mov
adc
xchg
fnstsw
or
mov
lods
adc
ja
and
out
and
cmpsl
ret
xchg
mov
cs
push
lea
pop
out
out
cmp
faddl
xor
dec
loop
fsub
icebp
dec
pop
xchg
mov
jl
rclb
or
gs
cld
jl
pop
mov
xor
mov
mov
lods
call
loopne
mov
repnz
or
push
pop
pop
pop
mov
mov
les
dec
mov
shll
in
imul
pop
sub
jp
jb
jecxz
loop
ss
pop
shl
lods
and
cltd
pop
cmp
repz
or
pusha
or
or
bound
out
outsb
iret
ds
cmp
test
scas
std
movsl
cmp
sub
repz
popa
ret
in
add
cmp
sbb
xor
movsb
ret
mov
jmp
aaa
sbb
pop
out
and
repz
pop
sub
mov
mul
adc
pop
mov
lahf
push
ja
adcl
arpl
mov
loope
jmp
adc
pop
inc
jb
jns
jge
pop
ficomps
sbb
mov
dec
mov
fistpl
out
loopne
adc
sbb
sbb
rcr
subb
mov
int3
pop
or
sub
lods
adc
adc
and
sub
testl
sbb
and
decb
shlb
sbb
push
lods
ds
mov
or
cwtl
dec
push
gs
je
mov
in
xchg
mov
mov
adc
scas
or
movzwl
popf
pop
and
je
arpl
push
and
xchg
dec
cmc
lahf
stos
mov
xchg
divb
cmc
fldt
icebp
es
popf
pop
mov
cwtl
push
push
cwtl
js
gs
fstpl
mov
pushf
dec
in
loope
mov
sti
xchg
cmp
int
or
cmp
push
pop
test
adc
iret
call
aaa
sub
or
push
cs
outsb
insl
popf
int
push
pop
mov
push
adc
and
mov
ret
icebp
pop
fdivrs
hlt
loopne
inc
imul
mov
xor
xchg
out
cmc
fs
dec
or
push
faddl
fists
mov
jl
sub
or
mov
push
cwtl
nop
add
xchg
test
in
lods
sub
test
cmp
testl
lock
cmpb
je
stc
sub
iret
push
rclb
cmpsb
cmp
jge
add
inc
loope
xor
xlat
imul
sub
std
scas
inc
push
lods
popf
fistps
sbb
ffreep
jg
inc
cltd
pushf
pop
mov
in
jle
shlb
jo
cld
adc
sub
cmp
imul
cmpsb
stos
lret
mov
inc
xor
dec
xchg
push
mov
mov
pop
shrl
mov
cmpsb
imul
adc
leave
out
out
test
mov
pusha
pop
sub
sbb
or
add
push
in
testb
jl
sbb
data16
imul
xor
push
into
in
outsl
push
fs
testb
stos
jae
sbb
mov
xor
mov
repnz
insb
nop
and
cld
or
add
rcrb
push
push
addl
rol
test
cmpsb
push
jmp
outsb
jle
adc
dec
lock
inc
mov
xor
cmpsb
in
insb
imulb
les
jns
pop
lcall
adc
push
pusha
add
inc
jecxz
or
popf
push
mov
sub
repz
mov
dec
or
out
dec
push
xor
sub
sub
jns
add
stos
add
jl
sar
nop
mov
test
dec
mov
push
lods
xor
movsb
add
fisubrs
jae
sub
aaa
adc
pop
jecxz
dec
push
in
pop
dec
or
insb
sub
push
pop
ret
adc
push
pop
adc
iret
loopne
push
dec
lock
sub
xchg
mov
mov
xchg
popa
mov
jp
and
aam
je
xor
sub
mov
test
out
insb
daa
jbe
dec
loope
ret
mov
test
add
sub
in
adc
cmpsl
js
std
je
cmpsl
adc
lret
cmp
in
inc
cld
in
movsb
and
mov
sbb
test
xorps
add
add
mov
ja
cwtl
jecxz
test
pop
pop
in
cli
movsb
out
mov
adc
mov
jne
inc
adc
mov
lods
bound
in
call
mov
xor
iret
push
gs
loopne
lea
mov
rcr
loopne
pop
mov
rorb
enter
lret
incb
mull
lods
push
into
mov
add
jo
dec
fwait
cmp
orb
divb
in
cld
popf
movsl
jb
mov
imul
in
sub
xor
nop
jl
pushf
jl
sub
sbb
push
xor
mov
or
movsb
mov
and
xor
imul
out
jg,pn
jge
sbb
rorb
inc
mov
and
pop
dec
es
pop
int3
sub
int
lret
mov
incl
fisubrs
pop
sbb
icebp
sbb
add
mov
or
xacquire
sub
in
in
stos
pop
je
jae
and
mov
or
mov
add
je
jmp
add
loope
jb
addr16
jmp
pop
lcall
or
pop
mov
pop
ficomps
or
insb
lods
or
push
in
cmp
movsb
aas
jecxz
mov
lahf
shrl
inc
hlt
movsb
sbb
adc
js
xor
adc
pop
mov
mov
jno
xchg
je
inc
pop
mov
icebp
ds
clc
pop
mov
out
push
in
and
cmpsl
xor
mov
ficoms
popw
mov
pop
jecxz
xor
and
mov
mov
add
jnp
sbb
mov
or
jns
je
sub
push
into
bound
xor
mov
xor
cld
xchg
jecxz
dec
jb
lret
cmp
js
xchg
fiadds
pop
mov
dec
pop
out
mov
xchg
nop
lahf
or
dec
ss
addl
push
fmull
idivb
jmp
cli
test
and
cwtl
adc
test
adcl
hlt
out
ret
out
mov
ds
inc
fwait
aam
sar
inc
mov
mov
rolb
jp
pop
push
out
mov
mov
ljmp
stos
es
adc
ljmp
outsb
aas
mov
mov
sub
sti
fstps
pop
call
xchg
insl
das
sub
pop
iret
sti
test
fs
xor
stos
inc
orl
add
sahf
test
mov
movsb
dec
cmp
mov
sbb
sbb
cmp
mov
or
fcomi
andb
cli
mov
loope
lret
fstpl
lcall
test
sub
loopnew
or
fidivl
sub
and
pop
fisubs
adc
pop
sbb
pop
push
cmp
das
adc
inc
fildll
jmp
movsl
mov
mov
push
lods
dec
add
xor
iret
adc
rorl
std
sub
push
mov
fmuls
cmp
jb
cmpl
and
insl
or
mov
jae
push
adc
dec
xlat
rorl
testl
jle
cmp
lock
inc
iret
inc
into
mov
cld
lret
pop
push
jnp
push
cmpsb
mov
push
sub
sub
jl
dec
ss
cld
lods
mov
in
fmuls
arpl
mov
stos
mov
enter
mov
insb
aam
pop
ljmp
jp
inc
pop
out
mov
aam
jg
cmpsl
scas
mov
js
sub
dec
sbb
push
pop
jne
nop
out
data16
mov
cld
lods
mov
ret
mov
sbb
cmp
push
or
loop
orl
fs
cld
adc
xchg
sbb
add
mov
xchg
rcrl
dec
and
stos
repnz
inc
outsb
mov
iret
xchg
cmpsb
iret
sub
add
pop
pop
push
xchg
xchg
sub
out
mov
xchg
mov
pop
jnp
std
xchg
fisttpl
xchg
ja
push
insl
loope
fstpl
fdivrl
sub
dec
subb
xor
xchg
sbbb
insl
js
loopne
inc
incb
repnz
aaa
jne
push
cwtl
in
in
addb
in
jbe
cltd
pushf
mov
stos
inc
aaa
cmp
mov
and
pop
lahf
mov
imulb
stc
jno
cli
dec
repz
movsb
out
rorl
nop
inc
jns
mov
fistps
inc
pop
dec
pop
add
fwait
out
push
or
mov
sub
ret
jne
test
imul
aas
or
inc
jno
inc
notw
add
in
inc
jne
cmpsb
push
and
mov
xchg
and
movsl
clc
sbb
push
movsl
into
setno
imul
xor
les
movsb
arpl
mov
into
dec
cld
sbb
test
cmp
clc
jnp
add
imul
sbb
icebp
pop
mov
push
fadd
stc
shlb
mov
icebp
idivl
sub
xorl
xchg
in
aam
fadd
cs
pop
mov
popa
adc
repz
xchg
push
fisubs
jle
out
lds
inc
lahf
out
push
lods
test
push
add
pop
repnz
jg
jns
in
fmulp
cltd
xchg
or
sub
pusha
sub
mov
jb
test
xorb
xor
data16
inc
hlt
ret
adc
inc
mov
mov
fidivs
and
jl,pn
ljmp
jns
sbbl
sbb
add
mov
mov
and
out
xor
mov
and
adc
pop
lret
insb
cmpl
xchg
pusha
into
jp
cmp
pop
int
pop
pop
imul
sub
sub
inc
adc
inc
adcl
pop
lcall
shll
mov
mov
lahf
sar
addr16
mov
add
subb
push
test
clc
sub
out
loopne
sub
cmovge
pop
clc
push
leave
dec
sar
cmp
cmp
stc
cmp
mov
push
pop
mov
inc
andb
push
add
sbb
inc
mov
mov
mov
mov
cmpsb
jmp
adc
pop
fsubrl
mov
cmp
add
cmpl
push
call
and
sub
pusha
push
faddl
fwait
lods
sub
jge
and
sub
and
add
cs
loopne
popf
sub
cmp
and
xchg
pop
jo
aas
push
mov
sbb
xor
inc
pop
push
xor
pop
cmp
mov
adc
int3
jns
xchg
repnz
outsb
jnp
shll
out
pop
jg
sbbb
repz
stc
cs
cmp
adc
dec
mov
int3
pop
and
arpl
or
xorb
pop
mov
inc
nop
ret
add
ja
jnp
imul
inc
jne
and
dec
xor
lcall
dec
push
notl
inc
xor
scas
negl
mov
push
mov
jg
cld
mov
fdivrs
sbb
mov
xchg
add
ds
sub
arpl
cmp
icebp
mov
scas
and
xor
mov
jg
fstpl
mov
insl
ljmp
loopne
or
pop
pop
rclb
dec
fldenv
roll
fisubrs
mov
test
daa
mov
test
and
jne
int
pop
sbb
dec
push
cmp
and
push
insl
mov
stos
xchg
ja
outsb
cmp
inc
inc
and
lret
aam
cmp
mov
nop
mov
push
cwtl
push
gs
insb
xchg
cli
js
inc
add
xlat
push
shll
scas
sub
jne
dec
and
push
inc
jl
lods
sarl
int
push
xchg
mov
addl
pusha
mov
lods
movsb
roll
dec
outsb
in
cltd
pop
jbe
and
lds
lds
frstor
and
inc
dec
rcl
mov
scas
jae
mov
inc
push
jne
mov
mov
ds
cld
hlt
and
mov
int3
or
push
cmp
and
jp
sbb
cmpsb
gs
jae
adc
in
mov
push
jne
cli
repz
dec
mov
lahf
jmp
mov
and
jbe
inc
test
sbb
mov
or
icebp
test
and
pop
pop
inc
fs
int3
lret
and
mov
cmpsl
inc
and
xchg
pop
push
push
or
or
cmp
ret
inc
loop
lret
rclb
iret
jb
sahf
inc
cmp
add
jno
adc
pushf
mov
mov
and
in
pop
ret
movsl
into
addr16
and
push
jo
xchg
and
jge
mov
sbb
icebp
in
pop
push
repnz
push
push
mov
pop
loopne
andb
dec
popf
adc
jbe
mov
pop
mov
adc
jb
add
cmp
shl
iret
jno
adc
jbe
cli
sbb
imul
call
adc
in
jne
jne
enter
cld
pop
xchg
scas
scas
dec
and
push
mov
mov
mov
xchg
jp
cmp
jmp
and
jmp
sbb
push
insl
push
clc
dec
lea
pop
dec
mulb
xor
testb
adc
in
push
xchg
inc
mov
dec
or
cmp
mov
jecxz
sbb
sub
push
test
cltd
stos
xor
fsubrl
pop
fadds
dec
test
inc
inc
dec
jmp
cmpsb
mov
push
cld
bound
adc
std
into
pop
cwtl
loope
inc
or
xor
popa
out
les
or
push
repz
daa
test
xchg
out
outsb
rorl
scas
xchg
repnz
ljmp
dec
inc
enter
xchg
test
mov
mov
nop
sahf
sahf
mov
les
adc
push
or
xorb
xor
sarl
repnz
xor
xchg
es
jle
int3
ss
lds
mov
jne
es
ret
adc
mov
cmpsl
int3
mov
es
add
adc
push
ret
daa
lods
enter
mov
stos
lret
insl
pop
dec
imul
xchg
dec
out
into
add
sub
dec
inc
sbb
jl
mov
mov
xchg
jge
cmc
jle
pusha
sub
fwait
mov
jl
and
and
out
pop
inc
lock
or
imul
imul
mov
mov
sub
fildll
shlb
mov
adc
dec
les
or
sbb
dec
stos
xlat
or
xchg
push
loop
pop
and
fldenv
cld
mov
pop
lcall
dec
lods
or
push
sbb
add
loopne
scas
add
rsqrtps
mov
mull
stos
adc
pop
pop
jp
imul
lea
aas
cmc
mov
movd
xchg
adc
mov
or
out
popf
popa
fnstcw
loope
jmp
pusha
movsb
jge
cld
outsl
xchg
lea
xchg
sub
mov
in
andb
pushf
movsb
insb
push
popa
ljmp
mov
mov
mov
add
mov
or
add
xor
cs
cmc
imul
stos
ret
pop
aam
loop
pop
popa
les
mov
dec
pop
add
arpl
dec
jg
movsb
mov
lret
and
mov
lods
aas
inc
jb
test
std
test
test
mov
arpl
pop
adc
lods
jle
adc
push
xor
lahf
out
mov
xor
leave
loop
or
ret
or
or
lds
pop
and
jno
imul
das
pcmpgtw
repnz
pushl
js
fdivs
outsb
jne
pop
loop
cmp
call
or
sbb
jne
in
xchg
xor
xor
bound
sti
aaa
or
lods
xchg
mov
mov
cmpb
dec
xor
fbstp
vmovq
push
into
jno
inc
stos
push
repz
adc
mov
stos
ljmp
add
cli
popf
or
sbb
loop
push
je
fsubrl
dec
fimuls
mov
insb
sub
mov
cmp
sub
pop
xchg
dec
mov
jle
fdivrp
jle
fstps
add
adc
xchg
lcall
mov
faddl
mov
mov
stos
loop
inc
adc
dec
jns
xor
add
hlt
ret
arpl
jno
or
inc
cmpsl
imul
out
ljmp
out
mov
cwtl
ds
xor
insb
into
mov
cltd
lea
xorb
jge
adc
mov
popa
mov
sbb
xlat
xsaveopt
scas
jb
arpl
lock
jb
cmp
cmp
stos
inc
push
cmpsl
mov
sahf
sbb
stos
adc
fucomip
repz
out
pop
aaa
push
test
add
inc
add
ror
adcl
insb
nop
adc
pop
dec
jmp
shll
icebp
pop
in
loope
out
and
ds
bswap
xlat
adc
insb
loope
xor
sbb
add
mov
and
outsl
in
mov
sbb
popf
mov
xor
scas
xchg
mov
add
pop
out
lret
mov
jb
js
in
imul
jne
xor
mov
pop
testl
loopne
ret
lock
cs
mov
ss
xchg
and
jno
stc
es
adc
or
pop
and
cmp
fwait
imul
shr
ljmp
lahf
adc
fldt
shrl
test
popf
xchg
jl
test
mov
pop
jns
xor
pop
and
ljmp
xchg
and
add
mov
xor
mov
cmpsl
pop
mov
adc
in
mov
sbb
inc
inc
popa
out
xchg
mov
mov
sub
insl
sbb
fiadds
inc
pop
pop
cwtl
jne
mov
mov
add
mov
test
mov
insl
aad
sahf
sub
and
add
dec
popf
sti
arpl
or
jne
push
cmp
addl
fs
into
push
inc
aad
xorb
es
cmp
movsb
xchg
mov
xchg
js
push
push
pop
mov
icebp
popa
or
std
adc
loop
movl
or
push
sub
daa
mov
xor
into
xchg
xor
shr
jne
pop
in
jns
cmpsb
dec
sub
push
push
or
mov
mov
cmp
lods
rcrb
push
dec
jmp
jle
insb
fs
lahf
mov
iret
aam
jno
leave
xor
cltd
fisttpll
mov
aas
or
test
gs
aam
sbb
sbb
jg
xor
out
das
mov
bound
add
cs
xor
arpl
jp
fsubrs
fisubl
adc
sbb
jp
sbb
jne
pop
jae
jns
jp
jl
addl
jmp
mov
inc
test
xor
xchg
lds
lock
arpl
mov
imul
clc
pop
pusha
pop
mov
dec
into
sub
push
jge
mov
bound
loopne
jp
pushf
aaa
test
jbe
sti
fucomp
cltd
sbb
sub
inc
inc
jle
and
jmp
sarl
mov
cmc
lahf
xor
xchg
ja
out
mov
das
iret
iret
xorb
jmp
mov
icebp
imul
jl
sub
xor
nop
mov
scas
add
push
imul
push
jo
cmp
movsb
xchg
xor
inc
mov
dec
pop
popf
ret
outsl
jae
or
or
xor
cmp
mov
mov
xchg
rcll
iret
pusha
pop
out
popa
push
and
in
loope
inc
xor
xchg
mov
nop
ss
mov
xor
scas
cmp
mov
pop
jg
inc
dec
fsubs
bound
faddl
insl
mov
icebp
fs
push
or
xor
clc
ret
mov
js
hlt
add
aaa
fimull
cmp
push
dec
mov
test
push
outsb
adc
mov
mov
dec
jnp
mov
cltd
ror
inc
push
inc
or
mov
inc
adc
std
cltd
popa
mov
jecxz
mov
int3
daa
push
mov
lods
or
popa
rorl
add
fsub
stos
add
pop
adc
popf
ja
pusha
repz
sahf
notl
lods
leave
mov
stos
lock
mov
adc
scas
xor
push
push
push
push
mov
lods
insl
rorl
xor
or
pop
repnz
cmpsl
push
sbb
mov
test
fdivp
es
outsb
popa
push
cli
cmp
adc
push
xor
add
push
cs
insb
jae
mov
lcall
cmpsl
icebp
sbb
cmp
sub
add
mov
test
into
cmp
jae
adc
add
lret
and
pop
cmp
mov
and
loop
sahf
sbb
push
stc
add
jbe
lock
adc
jge
lock
outsb
ret
addl
push
mov
inc
repnz
or
add
cmp
imul
sti
insl
ret
and
cmp
mov
scas
jecxz
push
jno
xchg
cld
sbb
jmp
sub
hlt
out
rorl
insl
xor
cmp
inc
cmp
mov
inc
dec
in
and
lret
adc
notl
stos
mov
aas
jmp
fdivs
aam
mov
sbb
xchg
mov
in
addr16
sbb
or
mov
sub
push
sbb
scas
fnsave
inc
test
cltd
movsl
push
test
insb
sub
lock
aam
sub
jle
ss
int3
jmp
xor
adc
sub
cwtl
push
movb
jb
dec
addb
mov
fs
fldt
pop
jecxz
and
push
sbb
mov
sbb
or
dec
daa
loop
fists
jno
pop
pop
sbb
adc
dec
dec
push
add
dec
ss
pop
jl
jle
sbb
cs
mov
sub
js
sbb
jmp
in
or
sbb
shl
jb
in
shl
sbb
cmp
ja
add
or
int3
and
sub
sub
pop
inc
or
push
pushf
cmp
leave
imul
int
and
enter
fwait
mov
sti
incl
sbb
test
push
jge
sub
xchg
add
push
mov
inc
les
pop
cmpb
adc
popl
xor
aad
mov
dec
lahf
xor
push
and
xor
jmp
fcmovb
dec
iret
push
cmp
add
lret
inc
orb
jns
jle
inc
adc
xchg
popa
sub
cmp
fisttpl
int
bound
jb
out
jge
es
and
lds
adc
add
mov
cmpl
adcb
jne
dec
adcb
pop
ja
inc
xchg
ss
enter
fists
cmp
mov
mov
push
pop
or
repz
mov
push
ljmp
xchg
dec
in
and
mov
push
and
jae
mov
mov
push
ss
insl
repnz
out
sub
ljmp
cmp
or
in
imul
cmp
pop
imul
cmp
lea
push
xor
mov
xchg
sahf
bound
jle
aaa
push
movsb
cmpsb
cmp
cmp
push
jae
lds
idivb
dec
gs
add
pop
add
mov
mov
dec
ds
lret
ljmp
aaa
loop
mov
inc
aaa
mov
imul
or
sub
stos
inc
xor
dec
les
ud1
into
jne
mov
mov
inc
jne
pop
cltd
jmp
push
lcall
push
jae
jno
add
cmc
stos
inc
push
push
pop
outsl
and
andl
mov
cmp
aaa
cmp
mov
dec
mov
out
pop
popf
push
sub
xchg
ret
arpl
fnstenv
mov
jno
insl
imul
mov
jp
or
jbe
call
call
enter
bound
inc
ret
gs
js
jae
addr16
sub
mov
mov
stos
sbb
xor
gs
icebp
jp
add
pop
or
insb
enter
push
pop
nop
mov
mov
xchg
out
and
mov
lods
and
sub
lods
xchg
xchg
icebp
ds
dec
dec
push
mov
stos
rorb
leave
insb
ret
cmp
loopne
jb
add
sbb
movsb
mov
cmp
cli
mov
or
pop
iret
push
adc
add
sbb
les
sti
pop
mov
pop
sbb
imul
clc
lds
leave
mov
les
add
jb
popa
leave
or
dec
mov
fsubrs
test
inc
xchg
decb
add
clc
aam
dec
sub
int3
mov
push
daa
dec
lock
push
or
data16
xor
stc
cmc
fnstsw
jno
mov
or
jno
test
mov
gs
xchg
sub
add
jne
add
test
in
mov
jg
mov
xchg
sahf
xchg
sub
arpl
lds
nop
add
inc
adc
ss
mov
adc
xor
sbbl
or
popa
pop
and
mov
inc
adc
and
xchg
cmp
xor
cmp
xchg
insl
pop
testl
test
add
inc
push
in
mov
and
imul
sub
mov
push
or
cmp
stos
or
aaa
insb
or
or
lret
mov
sbb
rol
imul
cmp
lcall
ljmp
stos
inc
stos
add
xchg
and
mov
fadd
xor
pusha
add
pop
dec
bound
test
test
sahf
std
in
loop
es
test
das
pusha
iret
jb
pop
inc
int3
xchg
adc
xor
mov
jo
test
fistpl
inc
fwait
pop
cmp
test
frstor
outsb
mov
in
in
adc
pushf
cmp
ljmp
add
insl
mov
dec
shrl
or
cmp
xor
pusha
out
mov
stc
popa
aaa
incl
push
neg
jge
in
xlat
scas
adc
cwtl
push
in
mov
push
incb
das
mov
fs
rcl
faddl
movsb
pop
mov
push
mov
push
push
and
sub
jecxz
ds
mov
push
aas
sub
push
push
sbb
xchg
xchg
fldl
and
xchg
and
js
inc
push
pop
sub
mov
je
mov
and
push
sbb
inc
pushf
jmp
jp
add
lods
sti
or
mov
jb
and
ljmp
out
pop
int
pop
adc
fdivs
mov
jp
jge
ds
jae
jo
cmp
mov
inc
outsb
cmpsl
sub
mov
repz
xor
lret
fcomp
jp
flds
inc
test
test
insl
mov
loope
in
ljmp
mov
loope
cmp
pop
sbb
mov
test
xchg
or
push
arpl
sbb
cmc
sub
push
popa
add
lock
loop
orb
jp
lret
xor
sbb
jge
jecxz
imul
ljmp
std
sbb
call
push
xchg
pop
fildl
dec
add
add
fiadds
inc
jne
push
pushf
mov
adc
daa
lcall
pop
xchg
jno
add
incl
add
add
stos
jo
xchg
and
xor
pop
mov
and
jns
pop
pop
ja
lock
ja
add
cld
das
adc
fwait
out
cmp
insb
scas
jno
push
shll
pop
divb
iret
cmpsl
xor
mov
dec
pop
or
xchg
and
or
pushl
icebp
call
lea
jl
test
adc
inc
sbb
sub
cmp
arpl
mov
push
cmc
push
rolb
outsb
cvtdq2ps
sti
mov
enter
fisubrl
sti
imul
jecxz
xor
fisttps
add
mov
out
jp
xchg
popa
fwait
aaa
adc
mov
jb
cwtl
js
insb
jae
pop
push
outsl
clc
mov
mov
stos
jge
fdivr
sbb
outsl
jmp
leave
fcomp
in
xchg
cmp
es
dec
pop
mov
push
push
push
imull
xchg
add
test
fidivrl
push
adc
test
and
loope
mul
inc
test
icebp
pop
jp
clc
inc
rcrb
mov
mov
jl
fdivrl
stos
push
pop
aaa
out
lock
jecxz
dec
fnstcw
pop
inc
movsb
rcrl
xor
stc
push
push
mov
jb
stos
rcl
add
push
mov
stos
sub
push
popa
xor
outsb
scas
dec
sbb
pop
mov
add
adc
push
mull
jo
mov
mov
fbld
sbb
mov
jmp
scas
sbb
bound
rorb
and
pop
jg
out
in
push
push
add
and
and
pop
mov
pop
sbb
and
rcll
cli
cmpsl
inc
roll
jl
sbb
fwait
push
cwtl
loop
sbb
nop
insb
insl
or
jle
mov
mov
and
loop
jmp
ljmp
and
jg
sarb
pop
out
imul
fcmovnu
mov
lea
xchg
test
xchg
test
cmp
adc
mov
mov
cld
outsl
jmp
outsl
dec
insl
fdivrs
pop
enter
mov
hlt
fnstcw
or
dec
aad
jne
mov
fidivrs
push
mov
jle
or
adc
test
xor
movsl
std
xchg
jp
testl
in
dec
mov
pop
inc
movsl
push
dec
out
xchg
sbb
push
sub
push
jnp
add
push
arpl
and
cmp
loopne
push
shll
stc
into
jnp
int3
mov
movsb
mov
or
xchg
pushf
and
push
and
sub
pop
sbb
pop
dec
push
mov
push
movsb
mov
loope
push
jecxz
xchg
pusha
cs
push
loope
das
cli
adc
dec
out
mov
add
xor
fisubl
pusha
insl
push
sbb
and
push
pop
fcmovne
fwait
inc
iret
mov
gs
in
mov
divl
cmpsb
lret
push
xor
insb
mov
dec
inc
fildll
jp
movsl
add
call
mov
ror
mov
mov
clc
xor
dec
jmp
add
lods
or
push
push
dec
lods
sbb
mov
insb
scas
push
scas
clc
pop
int3
scas
inc
and
mov
sbb
mov
imul
je,pn
lret
sub
xor
add
mov
inc
adc
jecxz
xor
fs
lds
pop
or
movl
mov
gs
fistpl
imul
mov
loop
cmp
dec
mov
addb
xor
cli
mov
dec
lret
mov
aaa
add
fwait
add
andl
in
out
cmp
rclb
or
das
cmp
pop
or
mov
mov
call
je
and
scas
xorl
lret
and
dec
es
pop
pop
rol
ret
lcall
mov
jle
add
inc
into
add
idiv
jl
adc
xor
bound
dec
add
xchg
xor
iret
imul
lret
adc
push
add
jno
mov
pop
add
fld
inc
add
mov
lock
or
xchg
fnstcw
std
fwait
shll
inc
cmp
inc
mov
test
push
push
dec
adc
dec
into
inc
lea
cwtl
xchg
ss
jmp
jae
xchg
fwait
xlat
fxch
mov
repnz
cli
jne
sbb
add
test
cmc
xchg
mov
daa
dec
mov
cmp
xchg
push
mov
xchg
arpl
push
mov
ret
ret
sar
sti
pop
add
lret
je
jns
cld
test
loope
inc
and
xlat
adc
xlat
jp
xchg
mov
xor
test
push
das
rol
cmp
pop
push
loopne
jbe
repz
jbe
jbe
pop
sarb
in
test
xchg
cmpsl
dec
leave
mov
stos
test
fildl
xor
or
dec
std
aaa
push
leave
mov
mov
gs
add
test
cmp
icebp
jle
outsb
mov
jae
test
inc
out
inc
adc
rorl
dec
adc
loope
sahf
jmp
js
inc
call
and
fsubp
xchg
lock
inc
pop
mov
xor
mov
out
jmp
sub
insb
dec
mov
pop
clc
mov
push
popa
xor
mov
pop
call
jae
inc
repnz
popf
loop
inc
pop
sti
and
mov
or
lock
jbe
in
test
dec
mov
movsl
inc
stc
cmp
mov
addr16
bound
inc
push
sbb
pop
inc
and
arpl
lret
mov
mov
popa
ljmp
cmc
sbb
mov
fiaddl
add
mov
push
mov
cmc
dec
mov
sbb
jge
ficoms
mov
or
add
push
fcompl
pushf
aam
or
in
fstpl
cltd
test
pushf
enter
popa
adc
mov
pop
push
mov
pop
push
xor
hlt
pop
push
pushf
jmp
pop
pop
jl
dec
pop
gs
popa
mov
push
inc
mov
mov
mov
push
inc
shlb
lods
enter
out
mov
cmp
sahf
clc
out
fstl
push
gs
inc
js
stos
or
dec
out
add
mov
movl
jmp
or
insb
sub
inc
jnp
clc
mov
insl
ja
xchg
adc
mov
lret
hlt
adc
push
inc
or
in
ret
je
leave
xchg
inc
mov
jb
dec
fcom
lret
jae
push
bound
pop
rolb
pop
fisttps
fwait
je
repnz
fldt
loop
out
stc
push
mov
cmp
sti
lret
gs
shrb
clc
xchg
mov
imul
imul
push
push
cwtl
out
adc
push
jo
or
adc
sbb
or
mov
mov
outsb
gs
add
dec
push
in
sbb
xchg
xor
cmp
adcl
clc
jbe
add
inc
std
mov
fdivr
xchg
sub
test
in
xchg
daa
cld
scas
lcall
out
inc
and
push
mov
push
mov
xchg
aaa
push
loopne
mov
mov
lods
mov
rclb
dec
xchg
push
daa
pop
stos
cmp
inc
mov
jg
xor
push
fistpll
js
inc
insb
insl
pusha
or
cmp
in
mov
idivb
xchg
xor
repnz
cld
pop
xchg
add
or
pop
testl
inc
jecxz
cmpsb
sub
fidivrs
lret
fdivrl
aaa
mov
lds
push
pushl
cmc
cmpsl
adc
mov
inc
ss
aam
cmp
inc
and
inc
cli
mov
cs
aas
das
push
add
ficoml
pop
inc
adc
inc
mov
stc
or
sarl
sbb
xchg
inc
mov
push
das
inc
xor
mov
out
sub
bound
jmp
push
cld
popf
pop
or
xchg
jb
xchg
pushf
aaa
jmp
inc
imul
xchg
andb
das
leave
mov
out
nop
data16
nop
lods
les
sub
push
insl
push
sub
int3
jge
mov
mov
adc
inc
insb
push
inc
stos
jno
stc
mov
mov
cltd
push
nop
mov
mov
cmc
sbb
xchg
sbb
mov
dec
pop
xor
sbb
outsl
lcall
rcrb
es
sti
cld
dec
or
push
jl
or
cmp
jle
aas
jecxz
clc
cs
lahf
es
pop
andl
shll
mov
stos
xchg
inc
popa
icebp
out
sbb
cmpsb
cld
cmp
jmp
fwait
jl
pop
test
int
add
mov
std
xor
es
adc
std
mov
or
repnz
push
icebp
push
cmpsb
xchg
adc
dec
sahf
xchg
jp
pop
sahf
and
cmp
push
out
test
push
movsl
imul
cwtl
out
adc
jg
xchg
pop
stos
cli
pop
iret
sub
pop
mov
nop
or
mov
and
mov
push
mov
lock
std
test
adc
pop
adcl
mov
scas
pusha
push
dec
mov
stos
pop
xlat
out
inc
add
and
std
sbb
xlat
jae
push
shll
and
clc
ret
sbb
jne
or
jl
dec
mov
inc
sbb
pop
stos
inc
fdiv
dec
push
je
flds
insl
gs
and
mov
ss
rorb
push
mov
loopne
xchg
mov
dec
scas
out
xlat
mulb
jle
mov
mov
cmp
addr16
hlt
dec
inc
leave
imul
sub
add
ret
add
xchg
jmp
push
adc
dec
loope
sti
out
scas
sub
cld
inc
jg
mov
loop
lds
adc
ret
xor
push
add
adc
imul
shr
and
pop
xor
ret
push
test
cmpsb
mov
push
sbb
inc
clc
xchg
xor
jnp
jmp
test
mov
or
sbb
jns
lods
shl
aam
jb
jno
outsb
mov
xchg
sub
pushf
inc
into
mov
sbb
cmp
fldcw
enter
lods
push
and
jecxz
mov
jo
sub
xchg
out
mulb
jmp
scas
addr16
shrl
mov
and
jmp
dec
scas
adc
lcall
sbb
sbb
and
mov
sbb
loop
inc
pop
testb
and
jo
adc
ret
les
pop
xchg
es
adc
xor
cwtl
sub
stos
pop
aad
lods
call
dec
xchg
fmul
inc
testl
shlb
add
daa
xor
lret
jp
cmp
cld
pop
add
inc
outsl
ss
sub
mov
cld
dec
sahf
loop
inc
dec
and
daa
inc
cwtl
inc
enter
push
push
or
filds
jb
jno
mov
in
jecxz
jmp
ficompl
int
add
insl
cmp
adc
pop
out
loop
jo
dec
cmpb
jmp
imul
mov
int
je
pop
sub
jb
sbb
in
xor
call
mov
sti
sarl
lahf
lods
xchg
push
sub
cmpsb
shll
or
mov
lock
fisttps
and
ljmp
stc
outsl
pop
popf
xor
fstpt
dec
es
loope
jb
mov
xor
lahf
imul
sbb
dec
outsl
mov
mov
sub
push
ljmp
fwait
adc
adc
push
aas
dec
aas
jae
sbb
fwait
add
icebp
adc
mov
dec
loop
mov
cmp
sbb
mov
sub
js
jecxz
inc
rcll
push
and
repz
xor
sub
leave
mov
add
mov
sbb
dec
dec
cmpsl
adc
aaa
inc
xchg
and
inc
test
outsl
mov
mov
push
xchg
jecxz
shlb
popf
fcoms
sub
and
or
xchg
in
cmpl
adc
pop
aad
mov
push
push
push
orl
inc
imul
loop
mov
cmpsb
addr16
pushf
cltd
repnz
imul
or
cmp
negl
outsl
repz
push
dec
adc
push
xchg
push
fcmovbe
leave
cmpsl
jne
das
loopne
not
sbb
mov
lea
jmp
movsl
mov
pop
add
dec
loopne
sub
cmp
inc
jge
ret
std
pop
ss
ja
pop
sub
pushf
xchg
fs
push
lret
sub
inc
test
push
adc
cmp
ret
aam
or
and
cmpsb
or
out
or
bound
jp
das
loope
sub
sahf
jns
sub
pop
std
or
fdivrl
daa
push
loopne
add
mov
icebp
hlt
cwtl
in
mov
pop
sahf
stc
sbb
push
or
cmp
loopne
lds
mov
xchg
rcrb
dec
mov
loope
adc
fimull
adcb
xchg
sbb
call
js
adc
test
popa
aaa
adc
and
pop
jns
das
sub
and
jns
std
jns
xchg
mov
in
sti
shll
fs
inc
ss
dec
ret
int
mov
sub
loope
or
icebp
mov
aaa
jl
pop
sub
push
lret
cmpsb
and
ja
shrl
cli
inc
repnz
cmp
cld
ds
or
lds
das
scas
and
mov
inc
ds
incb
ljmp
pop
mov
xor
pop
inc
jne
pop
mov
mov
or
xchg
pop
lods
mov
cmpsb
cmp
aad
adc
icebp
shlb
push
stos
xchg
bound
mov
push
mov
sub
ret
lahf
mov
arpl
jbe
shl
mov
insl
sub
sub
ds
xchg
sarb
out
testl
iret
mov
adc
ss
mov
jnp
cmp
mov
jnp
es
movsl
hlt
movsl
jns
mov
inc
or
mov
xchg
push
dec
lea
call
and
cwtl
fnstcw
or
aas
sbb
loop
test
adc
in
jl
pop
stos
push
or
int
jp
mov
sbb
cmc
adc
inc
cld
mov
les
xchg
mov
cmpsb
add
fdivrp
imul
adc
mov
lret
into
ffree
mov
nop
and
adc
and
xchg
xor
mov
stos
add
xchg
and
outsb
lahf
push
movsl
dec
mov
cld
cltd
repz
sar
push
mov
test
andb
add
shrb
das
pop
mov
xchg
loopne
dec
in
mov
jmp
xlat
stos
inc
bound
mov
je
lret
sbb
cld
or
cs
dec
push
in
xor
mov
in
ds
mov
xchg
insb
sti
cmp
pop
pop
mov
push
in
je
ret
sbb
out
leave
mov
mov
xchg
test
paddsw
rorb
add
cmp
lcall
leave
or
jne
iret
add
pop
lds
stc
sbb
mov
adc
push
divl
scas
popf
cltd
pop
in
adc
xchg
jg
xor
push
sub
cltd
repz
pop
cli
les
rcll
push
xor
add
ja
cmpsl
pop
cld
and
xor
data16
dec
fcomps
popa
test
in
mov
dec
pop
stc
sbb
icebp
sbb
push
or
xchg
test
mov
inc
fwait
cmp
leave
lods
and
xor
cmp
movsb
adc
adc
mov
mov
mov
mov
lret
dec
adc
add
dec
and
lods
out
lret
inc
rorl
mov
mov
xlat
es
mov
movsl
sub
sbb
push
shll
xchg
mov
jns
dec
inc
es
mov
ss
xor
cmp
mov
enter
pop
addr16
bound
fstpl
fistl
push
push
pop
aaa
movsl
dec
ret
in
das
lea
xchg
xchg
xor
enter
imulb
adcb
jne
dec
fisttpll
xchg
sub
iret
sarb
leave
sbb
lret
sbb
fdivs
loop
aam
mov
cmp
mov
push
lcall
mov
push
int3
sbb
dec
xchg
imulb
imul
adc
divl
cmp
jbe
sbb
mov
lret
adc
iret
dec
fnstsw
mov
pop
es
cmp
shl
ljmp
push
sub
adc
ljmp
in
mov
ss
xchg
fnstenv
dec
or
lock
ja
push
hlt
stos
mov
fwait
adc
sahf
jmp
mov
jle
pop
cltd
mov
pop
hlt
xlat
push
mov
hlt
or
sbb
enter
xchg
xor
and
cs
loop
push
cmp
adc
dec
adc
sbbb
sub
cmpsb
enter
push
mov
imul
iret
push
sbb
lea
jmp
sbb
pop
inc
lret
repnz
out
pop
xchg
jno
fstpl
and
pop
mov
push
mov
sub
shl
ret
rorb
adc
imul
sbb
jb
inc
mov
cli
and
pop
sahf
loopne
mov
iret
cmp
shlb
adc
icebp
repz
push
ss
fsubl
mov
lret
mov
push
xor
in
clc
and
or
xor
arpl
shl
outsb
testb
cs
adc
gs
jb
stos
and
xchg
push
xor
repz
add
popf
cmp
test
sarl
jp
xchg
mov
push
movsb
pop
dec
mov
loop
cs
lea
inc
sahf
xor
jne
repnz
shrl
push
std
cmp
push
popa
sub
inc
mov
mov
and
jns
daa
or
inc
pop
bound
xchg
inc
sub
sub
test
scas
cltd
icebp
lret
hlt
test
dec
shll
dec
cmp
daa
pop
push
pcmpeqd
andl
andl
pop
aam
sbb
imul
cmpsl
mov
inc
mov
cmp
dec
ret
cmpsb
mov
je
cltd
dec
mov
sub
dec
pop
add
xchg
dec
in
cmp
jecxz
mov
repz
adc
jns
stos
or
ds
pop
dec
data16
mov
loopew
jl
iret
cmp
inc
jmp
xchg
pop
mov
jae
nop
daa
mov
mov
mov
in
inc
mov
into
fimuls
adc
icebp
mov
ljmp
push
iret
cltd
ljmp
mov
cmp
test
cmp
jl
clc
cmp
add
pop
out
push
int
dec
repz
cltd
mov
js
fstpl
mov
dec
mov
cmp
mov
sti
mov
movsl
ds
fisttps
pushf
daa
lods
pop
stc
lods
xor
popf
push
push
mov
outsb
sbb
aaa
mov
add
xor
loop
sbb
sub
lock
test
xchg
sti
mov
out
push
int3
sub
es
mov
stc
test
push
jmp
clc
cmc
scas
es
sub
mov
loop
ficoml
call
push
sti
push
cmp
call
pop
dec
testl
push
and
cmp
jp
push
divb
add
stos
dec
rclb
out
push
add
stos
shrb
daa
jb
lsl
jbe
jbe
dec
mov
push
jno
xchg
push
imul
bound
sbb
pop
cli
rorb
mov
inc
add
and
outsl
movsl
int
or
cmpsl
adcb
arpl
dec
add
add
lret
rcll
sub
out
aas
loopne
dec
or
pop
push
push
xor
pushl
ficompl
adc
out
stos
sub
pop
jae
ror
test
ss
and
data16
xorb
outsb
outsl
and
inc
pop
pop
mov
ret
inc
and
ret
addr16
fnsave
mov
pop
movsl
pop
inc
mov
mov
es
pop
or
xor
or
adc
gs
push
lods
inc
js
sbb
xor
mov
and
and
out
fwait
cli
sbb
inc
jg
gs
inc
inc
push
enter
stos
in
cmp
test
inc
sbb
sbb
add
xchg
push
aas
cli
shll
push
push
insb
ja
adc
xchg
mov
insl
fwait
push
and
sub
stos
aaa
add
and
cmp
stos
lods
iret
imul
pop
fwait
xor
pop
pop
xor
dec
jmp
int
lahf
les
int3
adcb
jl
int3
ficomps
fs
gs
outsb
into
aas
dec
dec
xor
mov
cltd
in
xlat
sub
inc
in
push
jbe
mov
adc
cmpsb
or
cmp
jl
mov
in
lods
sbb
lds
xchg
mov
fs
cmc
jge
lahf
sar
add
sti
int
xchg
xchg
lcall
icebp
insl
loopne
dec
cmpsb
jmp
mov
mov
test
out
test
add
xchg
ds
nop
sarb
andb
xchg
sbb
loop
xor
cmpsb
jo
inc
ljmp
cmpb
inc
lret
pop
rol
out
mov
mov
mov
sub
mov
and
shrb
sub
push
imul
cld
sbb
popa
stc
fiadds
aam
mov
inc
in
sub
popa
mov
jl
xlat
andl
std
negl
outsl
inc
push
shr
insl
es
scas
sbb
add
mov
ljmp
pop
inc
scas
sub
repnz
scas
mov
push
mov
fdivr
cltd
test
outsl
xor
and
in
pop
cmpsb
shr
or
xchg
cmp
xchg
push
es
cmp
addr16
adc
into
fcoml
xchg
jae
mov
aam
repz
mov
push
mov
aaa
push
cmp
mulb
jne
and
and
imul
jecxz
shr
jns
sub
adc
jp
es
or
push
pop
sbbl
shlb
mov
mov
addr16
dec
jbe
push
rorb
and
fmuls
and
sub
leave
out
subl
push
adc
pop
sbb
repz
clc
hlt
repz
xchg
cs
test
loop
bound
xchg
movsb
add
mov
pop
cltd
pop
notb
pop
push
inc
and
push
jge
pop
jbe
pusha
addl
ficomps
pop
mov
xor
inc
jbe
and
jp
lea
lahf
push
daa
and
or
out
sub
sbb
mov
adc
fs
jne
push
adc
push
push
pop
mov
add
pop
add
cwtl
adc
jb
cmp
bound
test
xchg
jne
stc
pop
in
inc
sbb
pop
divl
cs
js
shr
cmp
bnd
xor
sbb
or
xor
mov
jmp
es
push
lret
fwait
jbe
sub
loope
adc
push
inc
xor
testl
test
sub
insl
das
cmp
movsl
stc
sbb
cmp
int3
mov
sbb
inc
gs
push
testb
push
pop
rcrb
push
ljmp
in
sub
lahf
fsubrs
xchg
lea
sbb
adc
cmp
mov
and
testl
adc
inc
aam
pop
in
cli
sbb
lods
and
push
fcoms
je
xor
in
mov
and
loop
inc
jg
and
cltd
fimull
push
sbb
jl
push
or
je
push
int
stos
in
push
jb
pusha
sub
pusha
gs
dec
mov
loope
fdivr
dec
push
mov
lret
xlat
push
in
push
push
add
inc
mov
inc
sar
push
inc
jo
xor
xchg
push
and
rcr
sbb
cwtl
fimuls
or
push
sbb
cmp
fidivrl
mov
push
sub
inc
lock
pop
dec
fcmovnb
dec
inc
sub
pop
in
icebp
mov
fbstp
clc
push
xchg
jle
pop
mov
shrb
jno
mov
pop
pop
aaa
dec
movb
xor
cmp
fldl
dec
or
pop
lods
jae
cmp
sub
mov
pop
mov
pop
dec
xchg
mov
xor
mov
aas
cmpsl
imul
adc
cmp
xchg
mov
aam
lock
aas
mov
mov
mov
sbb
adc
inc
cmpsl
sti
mov
sbb
cmp
xor
mov
popf
aam
popl
test
iret
pop
lret
lds
subl
jbe
mov
dec
jne
add
fsubrs
dec
cli
jmp
movsl
jecxz
lret
jl
sbb
and
hlt
pop
loope
mov
mov
rorb
cmpsl
pop
test
and
scas
or
add
sub
xorl
mov
pushf
iret
add
out
push
push
ss
adc
notb
push
adcl
fdivrs
mov
add
xchg
lods
negb
jbe
adc
loop
fwait
xchg
cmpsl
sub
sub
pusha
shrb
nop
int
lods
cld
jnp
dec
sbb
dec
sbb
dec
push
aad
je
and
dec
jle
xor
ds
and
xlat
adc
sub
mov
rcrl
pop
and
pop
mov
xor
mov
pop
pop
or
movsb
sub
aaa
xchg
lret
add
mov
adc
cs
ds
or
xchg
imul
sub
or
push
dec
xchg
stos
dec
addr16
pop
adc
adcl
aas
push
pop
cmp
cmc
mov
push
shlb
sub
or
xchg
or
mov
stos
mov
mov
pop
rorl
cmpsb
in
stc
push
xor
aaa
sbb
outsl
shll
jg
lock
cmp
out
inc
insl
mov
dec
or
and
or
push
js
cmc
sbb
daa
mov
mov
gs
orl
mov
mov
cs
leave
in
inc
mov
add
rolb
in
fdivr
pushf
pop
adc
jl
mov
test
call
imul
sub
mov
jae
pusha
in
jo
jmp
pop
movsb
lcall
or
jne
roll
fscale
jl
pop
add
and
loop
mov
xchg
sub
aam
push
out
xchg
xchg
adc
xor
enter
scas
lea
adc
and
xorl
cwtl
mov
add
dec
inc
leave
fxch
adc
jecxz
mov
xchg
fstpt
dec
adc
subb
push
sbbb
inc
aas
and
mov
push
adc
lcall
imulb
and
incl
lea
cs
mov
je
ljmp
test
out
adc
imul
mov
lods
xchg
call
xchg
clc
adc
dec
push
sti
fwait
imul
mov
push
pop
lcall
pop
inc
jg
in
xor
jge
rcr
dec
cmp
add
loopne
pop
inc
fidivs
xor
sti
push
inc
lea
repnz
sti
xchg
adc
jmp
data16
mulb
loopne
dec
imul
add
xchg
cld
repz
jl
jecxz
dec
je
test
sub
mov
push
adc
jne
cmp
sub
pop
mov
movsl
dec
loop
pop
inc
stos
popa
imul
aam
dec
sub
lea
faddp
js
testb
outsb
mov
push
fsubrl
xlat
pop
imulb
xor
addr16
cmp
xchg
pop
adc
jae
pop
adc
movl
xchg
xchg
test
outsl
sbb
movl
sub
inc
inc
jns
loope
or
je
mov
fs
lcall
nop
mov
push
fcomps
dec
in
loope
scas
cmpsl
pushf
push
adc
or
addr16
inc
scas
mov
sahf
inc
iret
inc
and
es
push
xor
cmc
cltd
ds
sub
inc
pop
fstl
push
fistpll
or
or
sub
out
jnp
loopne
ss
jno
add
aam
cmpsb
and
add
xchg
push
in
jae
cmc
add
adc
sub
or
fistpl
mov
je
pop
fimull
jae
sbb
pop
sbb
jl
jp
add
xor
lcall
nop
popf
push
dec
test
aad
jge
inc
mov
lods
add
mov
mov
mov
inc
sub
pusha
lcall
pop
inc
mov
out
xchg
scas
cli
lds
jae
pop
xor
xor
out
imul
push
repnz
in
add
inc
sub
stos
fildll
std
in
push
cmp
pop
mov
cmp
xor
out
jo
dec
and
popf
xor
push
cmpsb
pop
push
repnz
enter
jecxz
aam
or
out
lods
lock
jae
rclb
iret
cwtl
loope
mov
movsb
insb
xchg
les
adc
jge
adc
dec
pop
jle
or
lahf
xchg
pop
dec
pop
aam
out
jmp
push
mov
jbe
inc
xor
adc
or
mov
add
sub
jmp
movsb
push
pusha
xlat
cltd
scas
lahf
rolb
push
mul
lods
shl
push
and
test
mov
cmp
imul
lock
ljmp
jecxz
stc
cmpsb
int
repnz
sub
popa
outsb
pop
fsts
fdivp
pop
mov
cmp
lahf
or
lcall
push
cmpsl
xor
pop
mov
sub
sbb
lret
divl
sub
inc
lods
fdivl
in
sarl
cmpsb
mov
fcomps
scas
dec
jne
nop
cli
je
les
addr16
pop
add
mov
sub
pop
movsb
es
inc
dec
mov
icebp
and
stos
adc
pop
jb
cli
and
adc
mov
pop
int
mov
sbb
push
test
mov
fcmovu
inc
roll
ss
leave
ficomps
mov
jne
scas
jmp
pop
pusha
lahf
xchg
sbbl
pop
inc
insl
cmp
rcrl
sbb
lret
jge
mov
adc
pop
inc
cs
dec
cmc
cmp
movsb
decl
sbb
negl
mov
sbb
xchg
push
adc
das
ds
mov
popl
dec
das
adc
lds
jl
add
lods
ss
and
jl
sbb
jl
cs
icebp
orb
mov
test
cmpsl
lcall
test
mov
cwtl
xchg
popa
rcr
push
jmp
push
cmp
adc
stos
std
repnz
lahf
std
stc
loopne
push
int
int
popa
push
fmull
scas
decb
push
dec
sbb
loopne
xchg
rclb
fadd
jo
inc
out
rclb
lret
push
push
shl
jmp
or
push
fucom
push
xchg
add
pop
pop
sub
mov
jb
fsts
xor
cmovnp
mov
dec
xchg
test
out
push
jle
fstl
pop
xchg
jns
call
sbb
cmc
mov
std
pop
mov
and
jecxz
pop
mov
aam
in
cmpsl
sbb
dec
xchg
stos
stos
jae
mov
pop
lds
and
pop
jl
xor
xchg
cwtl
sbb
jmp
dec
cs
idiv
jnp
xchg
ja
arpl
stc
mov
dec
dec
pop
rolb
pop
fsubl
xchg
or
add
in
leave
mov
and
pop
sbb
or
sbb
mov
dec
lea
rolb
or
or
or
push
mov
lods
filds
and
adc
mov
or
xchg
and
jge
and
popf
out
rcr
roll
xchg
lret
fs
sbbl
jecxz
push
dec
xchg
cmpsl
add
stc
fdivl
push
fldcw
insl
pop
cmc
into
xchg
pushf
mov
add
test
out
cmp
leave
mov
imul
xchg
mov
outsb
cmp
cmp
ret
jmp
inc
test
mov
bound
lock
and
push
aam
lods
lods
fmuls
mov
adcb
mov
cmp
jle
lods
jb
subb
test
or
xchg
fwait
pop
sub
sub
fistpl
in
testl
jno
xchg
xlat
ret
stc
stc
stos
fcoms
sbb
in
fadd
sahf
out
sub
and
int
push
sahf
mov
fisubs
jmp
fwait
cmp
pop
mov
scas
ss
dec
and
push
jno
xchg
jmp
xor
jl
ds
in
cld
sub
xchg
stos
push
lcall
adc
ds
lods
test
or
pop
xor
xor
fstp
mov
mov
in
in
popa
dec
pop
sarb
gs
leave
imul
xor
es
daa
dec
and
jo
push
outsl
mov
fidivs
adcb
sub
add
inc
push
lret
push
mov
pop
push
jo
or
loopne
cmc
cmpsl
mov
ds
jge
jo
adc
mov
sbb
mov
jnp
fisubrs
adc
je
sbb
mov
pop
test
inc
sbb
add
xchg
push
gs
bnd
scas
inc
dec
xor
lock
fisubrl
lcall
push
out
pop
jnp
test
push
das
push
sbb
in
add
xchg
adc
out
out
lock
insb
ljmp
mov
sub
mov
xlat
stos
push
add
or
in
cmp
jecxz
lock
bound
mov
sbb
xchg
imul
mov
jne
subl
jb
push
jbe
xchg
dec
je
add
or
lret
iret
lcall
outsl
sti
inc
or
dec
mov
sahf
pop
and
in
dec
iret
call
addr16
or
int3
gs
ljmp
or
jge
loopne
decb
pusha
xorl
xchg
lea
mov
scas
mov
imul
mov
push
push
xchg
push
mov
movsb
push
sub
gs
push
mov
ljmp
jp
mov
or
and
cmp
inc
es
mov
push
xchg
xchg
mov
loopne
push
fwait
or
sbb
xchg
daa
push
or
inc
repz
or
js
push
add
call
add
subl
psrlw
mov
mov
mov
sbb
dec
addr16
repz
out
mov
fs
ror
xchg
mov
aas
cmp
mov
add
push
adc
xchg
or
or
sbb
mov
xchg
cmp
dec
and
push
inc
in
in
jge
iret
inc
mov
or
or
pop
iret
jge
jecxz
jae
fstps
ds
addr16
cmpsl
addr16
dec
or
outsb
movsl
jbe
fnstcw
sub
dec
pop
aam
mov
int3
mov
cli
xor
jg
xor
add
jns
jge
mov
xchg
fwait
jg
cmp
mul
mov
stos
pop
or
jl
and
sbb
aad
movsl
and
in
push
pop
dec
nop
outsl
jl
inc
mov
dec
push
out
and
sahf
mov
int
inc
dec
mov
xor
aas
jns
and
mov
stc
dec
pusha
xchg
addr16
icebp
mov
imul
jns
cmp
mov
stos
mov
in
add
lret
lahf
adcl
lcall
stos
pop
fists
cmp
fisttpl
jle
repnz
sarb
pop
outsb
pop
pop
adc
or
mov
xchg
push
nop
adcb
and
jne
and
fstps
icebp
mov
pop
mov
xchg
mov
inc
cld
cmp
sbbl
lcall
sahf
fnstcw
and
lock
ds
inc
out
sub
adc
in
sub
and
add
fucom
dec
ljmp
xchg
mov
sbb
gs
add
test
push
pop
stc
fdivl
lods
loopne
jnp
mov
cmpsl
dec
lea
mov
ja
sbb
push
dec
loop
ds
adc
fadd
mov
add
sti
cli
push
stos
fnstenv
je
loope
xchg
xchg
arpl
movsl
mov
jecxz
inc
stos
arpl
sti
adc
ffreep
aad
cmp
and
mov
push
shl
dec
fsubrl
ret
xchg
inc
loopne
jle
xchg
nop
and
rep
fwait
cwtl
add
dec
add
fidivrs
push
mov
enter
aam
sub
cwtl
int
test
fmuls
sbb
cmp
subl
inc
inc
pop
gs
test
rcll
or
mov
sbb
jle
fsubrs
test
in
xlat
fcoml
and
adc
sahf
cmp
daa
cwtl
cmp
mov
cmp
loop
cwtl
gs
jns
add
inc
sbb
scas
push
sub
repnz
cmp
rorl
dec
scas
jbe
mov
enter
mov
mov
xlat
xchg
dec
fs
data16
add
dec
xor
sbb
push
push
fucomi
xor
sahf
ret
add
in
inc
jg
inc
data16
mov
mov
in
cmp
adc
gs
pop
cmp
sub
jecxz
idivl
mov
decl
push
push
popa
and
stos
mov
mov
into
add
mov
xchg
andl
xchg
push
cmp
in
fcompl
cmp
mov
in
sbb
push
xchg
test
xor
rorb
ja
mov
es
cmp
leave
xchg
pushf
sub
push
inc
popf
clc
pusha
pop
mov
repz
add
add
mov
clc
push
pop
adc
enter
xor
adc
aaa
dec
rol
push
gs
mov
push
daa
cli
mov
jmp
or
dec
ret
inc
mov
hlt
inc
sti
out
test
lret
fbstp
in
test
fsubrs
inc
cmp
inc
pop
push
fidivrs
and
fwait
cld
jecxz
xchg
pop
sbb
sub
aad
mov
jl
stc
test
sub
mov
sub
mov
or
adc
cmc
jl
add
push
dec
mov
mov
dec
shll
or
sbb
or
pop
andl
ffree
pop
adc
insl
stc
andb
sti
je
xor
xor
pop
dec
mov
mov
mov
xorb
pop
mov
jp
sbb
mov
loope
push
sub
out
mov
push
pop
adc
mov
xchg
int
dec
in
mov
push
xor
lcall
jno
inc
scas
sub
push
int3
mov
xchg
sbb
push
bound
outsl
add
aaa
sub
mov
sbb
repz
enter
fbld
stc
inc
arpl
push
lret
aam
out
push
xchg
lret
or
dec
jns
insl
dec
and
mov
mov
jge
hlt
out
test
mov
jmp
push
sti
mov
push
cmp
dec
dec
clc
sbb
adc
pop
or
pop
cld
pop
cmp
dec
je
ja
cmp
scas
aaa
leave
stc
push
popa
fisubs
xchg
push
add
ja
push
push
jo
inc
out
and
in
stos
xchg
xchg
test
ret
stos
add
jecxz
outsl
jecxz
shll
xchg
stos
sbb
lods
repnz
and
adcl
cmp
xor
imul
aad
fdivl
jns
movsl
cmp
mov
out
adc
mov
and
adc
into
mov
cmp
xor
je
mov
mov
in
jmp
stos
inc
fldcw
mov
xor
pop
adc
lds
popf
push
jne
mov
popf
push
dec
mov
sbb
push
les
cmp
jecxz
inc
xchg
into
push
cltd
adc
bsf
ss
push
pop
addb
push
stos
and
cs
fsubs
pushf
cmp
xchg
xor
adc
mov
rcll
xchg
lcall
or
loopne
push
pop
pop
insl
cmp
pop
mov
mov
mov
fwait
cmp
xchg
in
push
imul
push
or
test
push
movswl
gs
dec
fdiv
sub
inc
loop
and
dec
insl
inc
fsubrs
cwtl
lret
sbb
push
cmp
mov
jbe
pop
adc
fs
dec
cmp
pop
cmp
fildll
jnp
pusha
stc
dec
inc
lcall
aad
fdivl
out
mov
pop
fmuls
in
aaa
cltd
es
push
sub
xor
int3
mov
int
imul
popa
jmp
pushf
popl
jle
mov
movsl
jbe
popa
lahf
fcoml
arpl
rcl
je
mov
fwait
out
adc
repnz
fisubrl
xor
iret
mov
inc
pop
pop
cmp
out
push
movsl
xchg
mov
xor
ret
movsl
repnz
das
pop
scas
inc
push
jae
xchg
gs
cmp
and
mov
add
cmp
cmp
mov
cmp
xor
add
ljmp
out
loope
xor
adc
jbe
loope
stos
outsb
and
jle
cs
push
jno
rcrb
je
sub
clc
dec
sbb
rclb
stos
cmp
fdivr
js
arpl
addr16
cmp
pop
inc
into
dec
pop
or
and
sub
jae
repnz
jge
daa
xor
sbb
or
cmpsl
xchg
in
cmc
or
rep
pushl
movsl
test
jo
loope
dec
or
js
jge
adc
pop
or
cs
ds
sub
in
mov
cli
ret
cwtl
jno
insb
mov
push
fidivl
and
imul
push
add
push
insl
stc
je
xchg
stos
dec
test
jae
int
shlb
lahf
in
or
test
sbb
push
ror
mov
loopne
dec
inc
shr
cmp
and
mov
inc
cmc
sub
cmpsb
xchg
insl
out
fisubl
xchg
aad
aam
inc
add
inc
add
sbb
xchg
jmp
insl
bound
mov
sub
dec
add
aas
sub
jge
jbe
jmp
jmp
sub
in
push
and
mov
jmp
mov
arpl
jo
into
or
lret
mov
xor
sti
test
cmpsb
mov
dec
gs
cmp
cmc
jge
jno
or
push
shlb
pop
jns,pn
pop
add
hlt
daa
sub
pop
ss
sub
push
outsb
out
inc
imul
dec
popa
xchg
push
pop
xchg
aas
lods
jge
ljmp
dec
fstps
outsl
ret
fcomp
jo
sbb
in
addl
fistpl
frstor
fisubrs
cld
xchg
test
cmp
mov
pop
cli
pop
dec
lret
fisttpl
xor
jecxz
fldcw
dec
stc
lret
mov
inc
fcoms
sbb
neg
test
push
ret
xchg
xor
and
imul
cmpsb
mov
cmpsl
lahf
ljmp
xlat
in
xchg
xor
xchg
imul
fdivs
imul
cmp
not
mov
or
push
xor
xchg
mov
jne
in
pushf
mov
and
negb
inc
xor
daa
fcomip
sub
inc
cltd
jl
add
sub
in
gs
out
loope
shrl
dec
setns
cmp
add
stc
sub
mov
scas
pop
sub
insb
sbb
xchg
add
popa
pop
cltd
test
pop
inc
dec
in
ret
cmp
mov
scas
mov
ret
mov
pop
into
out
into
dec
ss
inc
das
fsubrl
mov
xlat
mov
js
pop
mov
fwait
testl
dec
lock
js
faddl
push
xchg
dec
aas
fisttpl
mov
in
xchg
std
xchg
es
stos
sub
lcall
dec
push
or
mov
or
aad
nop
pop
cmp
shr
loop
fsqrt
outsl
cmp
mov
mov
leave
rcrl
outsl
adcb
cmp
dec
jl
jo
inc
pop
aam
and
sub
cli
das
int
xchg
pop
inc
xor
sub
rolb
inc
pop
rep
shll
push
bound
xor
xchg
sub
imul
orb
or
scas
mov
imull
out
mov
aas
aad
or
stc
pop
jmp
inc
mov
mov
imul
xchg
stc
pop
insb
imul
lods
bound
jns
inc
jbe
sub
and
pop
ja
aaa
sub
jecxz
lock
cmpsb
popf
and
jbe
js
jnp
mov
les
sub
pop
mov
push
mov
incb
inc
or
push
sbb
xchg
lods
inc
pop
push
cmp
pop
addl
xchg
add
xor
xchg
or
int
or
loop
sti
imul
inc
jl
ja
je
mov
testl
mov
adc
fwait
test
test
leave
xchg
shr
pop
movsl
inc
adc
mov
jecxz
xchg
xchg
jns
mov
cs
or
aad
je
sbb
cmp
in
shll
add
push
fmul
sub
cmc
or
lret
mov
mov
cmpsl
mov
fistpll
adc
mov
mov
and
or
push
mov
andl
mov
sub
idivb
scas
enter
xchg
sbb
pushf
pop
int
std
mov
pop
mov
sbb
insb
pusha
dec
xor
mov
gs
fmul
test
jmp
pop
test
data16
sub
push
jnp
sbb
xchg
idivl
imul
pop
es
cmp
aad
push
jecxz
pushf
pushf
pop
in
sarb
mov
in
lods
in
add
push
sbb
out
add
enter
iret
test
sarl
xchg
xchg
lcall
je
insl
test
sbb
xor
cmp
jl,pn
mov
adc
or
xor
sbb
pop
xor
pop
loope
add
pop
incl
or
pop
jmp
sbb
cmp
adc
test
rcll
ret
xchg
mov
in
lret
push
xchg
jmp
pop
js
sub
decl
cltd
out
arpl
jae
inc
inc
mov
dec
in
mov
lret
sbb
imull
xor
lods
loop
loopne
cs
dec
and
cltd
pop
inc
pop
pop
fisttpll
cmp
mov
notb
cli
repz
loope
xchg
lcall
cli
sbb
dec
cmp
lock
add
popf
push
insl
mov
inc
movsl
sub
push
fisubrs
cmp
jb
add
incb
cmp
and
pop
adc
sub
nop
and
mov
xor
push
lret
add
xchg
mov
mov
stc
test
mov
mov
xchg
inc
imul
cmc
mov
ret
fstpl
iret
or
popa
in
mov
dec
add
in
dec
inc
add
bound
xor
push
int
cmp
adc
icebp
popf
in
xchg
insb
nop
xchg
jl
repnz
cmc
jbe
lahf
or
cmc
pop
cmp
clc
or
and
pop
aas
dec
cltd
xchg
dec
js
test
mov
jne
popa
push
jge
insl
test
dec
or
mov
or
fisubrs
pop
mov
sub
jl
add
scas
xlat
loopne
fstpt
call
insl
mov
or
lds
and
int3
ficoml
rcl
lret
int
in
cwtl
mov
in
ret
or
mov
add
xor
xchg
mov
adc
sub
in
sbb
mov
imul
mov
add
adc
in
adc
mov
mov
sub
lret
jns
xchg
jg
mov
and
scas
cwtl
ficomps
add
mov
sub
fistpl
gs
ret
stos
cld
pop
sbb
mov
xchg
dec
out
lcall
add
adc
lret
ret
flds
test
xchg
cwtl
int3
fs
cmpsb
daa
add
pusha
push
sub
cmp
sbb
cmp
pop
push
add
test
xor
frstpm(287
mov
xor
fimuls
pop
sahf
sar
in
push
inc
fisttps
cs
sub
insb
shrb
jb
xchg
mov
jae
sti
sub
je
addb
sub
and
inc
jo
lods
cmp
add
jmp
pop
scas
xchg
rcll
fisubrl
dec
idivl
rclb
repnz
jb
mov
test
xor
lea
dec
loope
ds
mov
loopne
mov
movsl
add
pop
insl
shl
adc
jmp
aaa
or
sub
inc
sbb
jae
and
pop
enter
sbb
cmp
xor
push
std
jg
loopne
push
push
mov
lret
pop
dec
adc
pushf
mov
jae
cmp
mov
mov
adc
xchg
dec
push
fsts
ljmp
insl
out
xchg
movsl
mov
fsts
adc
in
aam
or
or
pop
pop
dec
adc
idiv
and
in
mov
jl
sub
leave
inc
rcll
mov
leave
adc
mov
mov
jne
mov
jbe
sub
sarb
pop
adc
iret
mov
and
cmp
inc
xchg
jns
jecxz
imulb
pop
lods
test
lods
sahf
adc
imul
outsl
ret
mov
dec
jmp
hlt
in
cs
or
or
and
push
xchg
and
inc
cli
mov
inc
aad
push
jmp
daa
fmuls
lock
xor
icebp
inc
gs
clc
scas
sbb
push
rcll
mov
in
out
sub
push
test
mulb
mov
and
orb
lock
jae
lds
aas
mov
mov
xchg
cmp
jo
sub
test
sbb
popf
xor
mov
or
call
fstl
sub
pop
filds
loope
pop
and
push
iret
psubsw
push
sbb
sub
push
push
imul
pop
xchg
lods
scas
sub
mov
jl
test
cmp
jb
add
jle
aas
or
je
dec
outsl
cmp
sub
jmp
notb
cmc
in
cmp
shl
and
sub
mov
add
in
int3
jne
push
pop
fisubrs
mov
out
push
loop
loop
out
and
push
into
in
call
out
outsl
fistl
daa
xor
ds
mov
js
popf
or
mov
notb
mov
mov
add
xchg
notl
dec
jg
insl
push
fwait
xchg
mov
pop
outsl
dec
sbb
inc
enter
mov
xchg
jp
dec
push
out
inc
rorb
ljmp
insl
mov
insl
jge
or
and
scas
adc
fcoml
out
dec
jne
xlat
ljmp
or
fwait
adc
xor
int3
pop
insb
push
cmpsb
mov
fs
inc
into
dec
and
pop
xchg
repnz
xor
jo
idivb
or
lret
cmpsl
fbstp
mov
gs
xchg
pusha
leave
scas
jae
mov
dec
stos
incb
jns
mov
and
addr16
adc
ja
xchg
dec
sub
dec
cmpsl
jb
fiaddl
enter
dec
xor
dec
inc
xor
inc
icebp
adc
and
add
int3
pop
cmp
or
inc
xlat
mov
mov
in
mov
push
xchg
adc
popa
adc
pop
push
imul
and
jns
dec
sub
jb
push
in
lahf
in
fwait
int
test
mov
mov
cmp
or
inc
into
sbb
nop
cmp
rorb
gs
pop
ja
add
mov
or
dec
cmp
imul
mov
mov
push
xchg
add
pop
or
xchg
cmp
pop
lods
stos
fists
cmc
lret
repz
test
loopne
in
loopne
pop
lret
loope
mov
and
das
push
cmp
popf
shrl
mov
iret
mov
mov
inc
notb
imul
dec
and
sarb
rcll
cmp
mov
divb
pop
cmp
fucomp
lret
clc
jno
les
push
ficoml
mov
cmp
push
insl
lret
pop
popa
rclb
pop
movsb
leave
imulb
lcall
pop
sub
mov
test
pop
push
ret
out
and
sbb
scas
or
inc
jecxz
andb
fcmovb
inc
sarb
adcb
scas
xlat
adc
das
arpl
fidivl
imul
jg
stc
or
stos
sbb
inc
rolb
mov
movsb
sub
mov
adc
xchg
xchg
inc
xor
mov
stos
rorl
popa
push
movsb
pop
inc
xchg
mov
aaa
sarl
lahf
mov
call
test
push
pop
int
push
push
mov
pop
lcall
enter
aaa
jbe
lcall
and
iret
or
xchg
fsubrs
rcrl
lret
jp
ljmp
xor
add
std
lods
aaa
inc
scas
repnz
sub
lahf
nop
dec
or
int3
add
fwait
in
and
call
push
out
in
icebp
test
jns
sub
mov
add
add
xchg
insl
addl
sub
mov
cltd
mov
mov
movsb
les
mov
xchg
movsb
test
push
mov
dec
shll
imul
mov
std
add
test
ja
ljmp
inc
test
ficoms
xor
inc
xchg
cmp
scas
movsb
push
imul
xchg
inc
ds
inc
loop
adc
xor
sbbb
push
mov
cld
ret
sbb
sub
xchg
xor
xchg
sti
fsubrs
lea
outsb
sub
lret
mov
adc
in
pop
push
ret
mov
add
pop
jno
jg
push
gs
mov
jl
fdivrs
shll
leave
mov
rcrl
sahf
jnp
xchg
push
subl
mov
and
mov
xchg
mov
jecxz
aad
into
jne
and
das
leave
push
arpl
dec
call
out
stos
pop
xchg
jmp
scas
push
ret
lret
adc
scas
fists
sbb
and
push
icebp
adc
push
testl
cld
imul
sub
sub
add
rdmsr
scas
sub
popa
cmp
mov
jo
int
push
xor
fistpll
jno
loopne
mov
jmp
jne
mov
push
dec
aad
xchg
lods
out
test
rclb
test
out
and
lods
lret
imul
jmp
ja
cmp
sbb
das
out
adc
add
aad
lahf
pop
je
arpl
popa
fsubrp
jmp
fldt
sbb
shlb
enter
loope
adc
dec
mov
inc
push
cmp
fs
sbb
push
or
movsl
adc
aam
add
sub
mov
sbb
in
sbb
mov
cmp
in
repz
adc
in
mov
neg
xchg
cmpsb
aam
ficoms
jle
jbe
push
fldt
js
push
iret
dec
or
push
pushf
adc
pop
sti
jmp
and
mov
sbb
sub
push
test
dec
sbb
sub
jmp
xchg
pop
test
out
stos
into
xor
stos
add
test
add
jge
imul
dec
sbb
push
push
das
xchg
scas
test
pusha
mov
inc
mov
xchg
ret
push
sbb
into
pop
jmp
add
jae
in
ds
sub
sub
push
rsqrtps
inc
jmp
pop
std
jns
and
roll
iret
mov
jo
arpl
enter
aaa
push
lods
jb
pop
jo
mov
stos
fs
outsb
lea
xchg
ja
push
xchg
fisubs
in
out
jmp
sub
cltd
sbb
mov
pusha
lods
mov
add
sbb
clc
es
repnz
stos
sbb
test
rcll
aas
lods
xchg
push
xor
call
cld
xchg
jns
pop
fldl2e
cwtl
fidivrl
loop
mov
push
adc
mov
cmp
mov
je
imul
aas
and
sub
mov
cmc
xchg
xchg
jle
and
mov
mov
movsb
push
jmp
jl
loop
fwait
sub
jnp
push
mov
lock
push
out
dec
add
in
and
and
pop
ja
mov
test
add
data16
daa
and
dec
fsubrs
sbb
rcll
jmp
xor
add
cmp
insb
add
rcr
scas
mov
push
lret
cmp
lods
mov
push
xchg
cli
shrb
jp
lds
sahf
jmp
cmp
mov
sbb
xor
nopl
lahf
call
imul
push
mov
mov
out
lods
int
xor
add
aaa
in
mov
lock
jns
stos
pop
lret
and
stos
cmp
cltd
cmp
or
mov
mov
xchg
xchg
test
xchg
cmp
dec
dec
out
repnz
jmp
mov
jne
stc
fs
loop
stos
mov
sub
out
push
dec
xor
cmp
pop
nop
push
mov
push
jae
or
stos
xchg
loopne
insb
mov
rcll
cwtl
in
insl
push
iret
aam
std
push
xlat
xor
jmp
adc
loope
cmp
movsb
mov
sbb
test
inc
rclb
sbb
nop
pop
insl
xchg
pop
jb
sbb
mov
xchg
nop
ss
clc
arpl
int3
adc
add
push
outsl
daa
aas
jbe
pushf
jp
daa
js
jae
pop
leave
loope
mov
test
clc
shll
jle
mov
sbb
outsb
stc
loop
and
cld
mov
mov
ljmp
and
sub
pusha
jae
mov
cltd
popf
sbb
aad
dec
pop
sbb
or
sub
push
mov
orl
out
jns
mov
aam
inc
lcall
push
add
ja
add
lods
outsb
inc
subb
sbb
cli
dec
mov
lds
sarl
sub
xchg
sbb
xor
aas
cs
fimuls
dec
cli
pusha
inc
dec
push
mov
pop
shrl
movsb
daa
cmp
push
mov
insb
sbb
or
push
jne
enter
jae
pushf
sbb
addr16
jge
pop
shrl
movsb
pop
mov
movsb
jo
imull
mov
sbb
icebp
das
cmc
ret
inc
dec
push
inc
sbb
lods
sub
aas
js
mov
xchg
fwait
dec
dec
add
sub
cmpsb
cwtl
mov
inc
aaa
mov
je
xchg
mov
fprem
mov
cmp
fnstsw
les
out
mov
call
jne
pop
xor
xlat
sbb
xchg
dec
bound
fsub
repz
lea
dec
pop
pushf
inc
cmp
cltd
dec
pop
xchg
rcr
hlt
and
cli
mov
nop
jg
loopne
cmp
fs
gs
xchg
add
xchg
pop
jo
lcall
movsb
test
jae
xor
cmp
mov
xor
add
mov
fldcw
xchg
cmp
cmp
add
repz
ds
push
rclb
rol
jmp
lock
fwait
pop
sahf
inc
xorl
add
fcomip
std
lret
out
in
cmp
cwtl
addb
dec
inc
sub
out
cld
xor
and
hlt
cmp
push
jae
and
sub
call
leave
sbb
mov
test
icebp
lahf
arpl
push
mov
popa
imulb
sbb
in
test
push
mov
sbb
mov
pop
mov
inc
int3
jo
jmp
movsb
flds
orb
test
push
jg
inc
mov
ss
mov
inc
and
dec
imul
cwtl
or
xlat
mov
xchg
arpl
sub
rorl
movsb
add
jge
fcomip
in
jb
fwait
pop
jno
mov
test
cmp
cmp
and
sahf
xor
mov
scas
fmuls
ljmp
or
push
jne
mov
movsl
mov
dec
lcall
push
dec
movsb
mov
or
inc
pop
leave
fcmovbe
push
test
lods
popa
test
or
cmp
fsubs
pop
stos
or
paddsw
out
ljmp
out
decl
fisttpll
add
cmpsl
fwait
mov
adcb
mov
push
cmp
cmc
xchg
fucomp
xchg
mov
sahf
mov
jno
and
out
adc
adc
inc
out
xor
push
ja
fs
push
add
lea
shll
sbb
pop
mov
and
adc
mov
xchg
push
testl
mov
cmc
mov
lret
sti
rorb
jg
cmp
jl
fsubrl
pop
pop
lret
int3
fisubrs
movsl
loopne
jg
cmpsb
add
mov
add
daa
lret
mov
lahf
int
sbb
adc
loope
cmpsl
and
inc
jns
or
lret
add
imulb
scas
add
ja
mov
xchg
insl
jns
xchg
addb
lret
sarb
sarb
fdivr
add
pop
ja
add
dec
stos
fsubrl
and
fdivr
sbb
mov
sub
cmp
hlt
xchg
test
push
sti
mov
jle
pop
xor
cmp
or
rorl
scas
pop
fwait
fwait
in
sub
sub
cmpsl
dec
and
mov
inc
out
inc
or
ret
leave
pop
stos
and
in
jo
mov
or
addr16
push
ljmp
mov
sbb
fs
push
push
add
ljmp
jge
xor
sbb
iret
sahf
jge
push
add
mov
and
es
xor
xchg
mov
mov
inc
bound
test
mov
and
adc
and
movsl
lahf
ljmp
out
lock
in
pop
adcl
pop
cmc
adc
pop
add
fs
jbe
popfw
add
cmp
iret
or
adc
das
and
mov
inc
enter
testl
std
inc
jg
mov
loope
jecxz
and
gs
pop
rcrl
jecxz
cli
mov
mov
add
push
push
icebp
cwtl
xor
test
adc
and
enter
add
dec
pop
add
es
nop
movsb
mov
lret
mov
push
inc
mov
push
testb
inc
dec
test
adc
add
lds
push
or
adc
shl
outsl
mov
out
sub
mov
push
test
or
test
cli
aas
daa
aaa
push
or
pop
or
addr16
jp
cmpsb
lods
movsl
sarl
mov
frstor
loope
fisttpl
test
push
mov
subb
push
xchg
mov
mov
jae
loope
jb
mov
cli
xchg
mov
mov
lds
shrb
in
cmp
loope
mov
push
test
cmp
xorl
push
xor
in
repnz
push
xlat
xchg
leave
fstl
clc
nop
fisubs
test
inc
mov
clc
mov
adc
mov
imul
and
testb
pop
mov
xchg
fcomps
jnp
fwait
adc
js
inc
sti
stc
sub
mov
arpl
sahf
mov
negl
fiadds
loop
cmpsb
sbb
sbb
mov
xor
aaa
call
push
cmp
shll
mov
jnp
and
pop
clc
adc
ror
loope
pop
push
fadd
stos
cvttps2pi
cld
xor
xor
into
inc
xor
push
and
mov
jmp
sub
stos
and
rcrl
mov
xchg
mov
insb
insb
stc
lret
jecxz
xchg
and
icebp
xor
pop
jae
sarb
push
ja
ja
fstl
mov
inc
xlat
and
inc
lret
push
sahf
or
push
and
cmp
ret
mov
repnz
or
sarl
fbstp
lcall
and
inc
inc
mov
or
loope
xchg
adc
pop
pop
sub
test
out
sahf
inc
lods
adc
nop
enter
shll
leave
sub
movsl
mulb
adc
bnd
nop
mov
mov
pop
shlb
push
or
mov
xchg
int3
and
in
fistpll
pushf
jne
mov
and
subl
fnstcw
xchg
stc
push
sbb
test
or
xor
jb
pop
xor
adc
sarl
add
ret
dec
inc
pop
mov
gs
pop
or
sub
push
nop
inc
out
xor
adc
or
scas
test
data16
bnd
mov
mov
dec
rcl
push
cmp
jnp
mov
gs
pop
xchg
lret
jecxz
scas
mov
push
ljmp
and
mov
movsb
pop
dec
mov
sub
push
in
dec
cmpsl
jbe
mov
push
ret
xchg
pop
jb
xor
aam
mov
scas
cltd
add
jl
mov
les
jb
mov
xchg
lahf
insb
mov
pop
or
adc
fdivrs
dec
mov
push
inc
sbb
test
dec
pusha
xchg
cltd
das
dec
rorl
xor
bound
fcomp
or
shll
scas
aaa
pusha
pop
imul
outsl
test
adc
xor
jb
xor
sbb
lods
fs
cmp
push
cltd
ljmp
cmpsb
push
out
pop
lret
bound
cwtl
das
filds
jle
dec
sarb
dec
fcmove
mov
mov
mov
aad
jmp
loope
js
mov
fs
and
call
in
orl
insl
mov
jae
femms
xchg
test
inc
xchg
cmp
xlat
jp
cmp
aaa
nop
push
fwait
push
fisttpll
jg
inc
movb
inc
xor
lret
pop
insl
mov
sbb
mov
decl
cmpl
xor
or
lahf
sar
neg
mov
fstps
lods
repz
jns
pushf
cltd
push
repz
fidivs
fldenv
cltd
lret
movq
shll
das
repz
loop
movsl
dec
xchg
xchg
movsl
xor
jb
inc
jbe
push
pop
stos
push
inc
or
sti
and
cld
movsl
test
ljmp
pushf
mov
pop
shrl
in
out
xorb
or
hlt
cld
int3
add
pushf
mov
cmpsb
test
cld
mov
xor
pop
dec
daa
cmp
mov
push
mov
jb
add
arpl
imul
or
aad
shll
popf
xor
dec
call
les
pusha
push
enter
outsl
sbb
sbb
jno
mov
in
inc
add
mov
rcll
outsb
imul
xlat
fwait
dec
pop
in
xor
ret
cmpsb
adc
and
push
jnp
dec
mov
sbb
cmp
xchg
adc
das
pusha
cmp
mov
mov
lret
jno
fisttps
out
mov
jne
cld
or
cmc
out
push
xchg
int
push
mov
leave
lds
je
jae
out
jle
leave
arpl
lret
cltd
push
push
or
xor
lods
push
mov
and
jbe
in
fs
xor
add
shll
jns
jmp
cwtl
bound
or
rcl
cld
and
push
mov
dec
lods
cmpsl
mov
mov
mov
lret
or
jmp
lret
mov
pop
stos
adc
dec
fimull
push
add
cmp
mov
or
or
mov
fildll
add
adc
jbe
sub
adc
mov
mov
and
and
xor
fistpll
filds
cmc
push
popa
mov
ret
mov
inc
pop
mov
enter
insb
or
lcall
pushf
xor
mov
inc
clc
cmp
jecxz
cmp
call
cwtl
shll
push
inc
ror
pop
stos
inc
mov
orb
add
shrb
clc
out
mov
and
ror
adc
cmp
jnp
push
test
jns
movsb
repnz
sbbb
fucomi
push
cmpsl
jnp
outsl
lods
andb
and
push
ret
imul
repnz
xchg
mov
pop
pop
enter
xchg
adcb
sbb
cmc
popl
incb
lcall
lods
loop
xchg
xchg
shrb
mov
fwait
or
push
and
cld
add
adc
xchg
push
mov
in
jbe
xor
ds
xchg
shll
jmp
rcll
in
mov
rcrb
mov
jbe
int
pop
shl
out
jmp
aad
jne
dec
sub
xlat
jnp
fst
sub
mov
and
jl
dec
adc
xor
mov
aad
shl
out
mov
ret
lds
push
je
aas
jecxz
enter
inc
jmp
ja
cmp
fisubs
sbb
dec
icebp
daa
lea
jo
scas
mov
mov
xchg
add
jp
test
je
mov
adc
scas
mov
jae
ret
inc
mov
fldl
loop
adc
adc
fwait
mov
into
lret
or
or
xchg
or
fisttpl
mov
stos
in
clc
in
and
es
jo
lods
addl
cmp
sub
and
mov
shll
mov
mov
addr16
inc
jo
lret
shlb
add
outsl
aam
inc
xor
sbb
out
lahf
xchg
adc
data16
sub
gs
popf
and
jecxz
fistl
fstl
inc
and
leave
ss
mov
cmpsb
pop
cli
add
jmp
mov
fcoml
pusha
pop
add
pusha
and
or
daa
sub
and
stos
jge
sbb
jl
dec
out
jno
daa
icebp
mov
out
test
and
or
mov
inc
fidivrl
gs
add
adc
arpl
rorb
and
gs
ljmp
adc
int
mov
xchg
adc
notb
sbb
jno
ffree
test
push
sti
sbb
mov
loop
add
stos
push
push
test
add
and
lret
ffreep
xor
add
push
ss
fldt
stos
cmp
cwtl
push
orb
popf
call
inc
cmp
imull
jb
xchg
jbe
jbe
in
lret
lret
aam
cmp
das
push
rol
imul
jae
cmp
dec
xchg
sbb
sbb
test
loope
jl
icebp
cmp
mov
pop
or
cmpsl
xchg
nop
mov
dec
iret
jle
bound
insl
push
mov
test
std
sahf
jo
pop
pop
dec
je
stos
sbb
inc
push
jl
sub
xor
add
pop
add
xchg
lcall
arpl
xor
mov
inc
sub
cmpb
daa
shll
lock
outsb
loopne
mov
add
xor
xchg
push
ljmp
cld
xor
add
jl
mov
xchg
pop
push
add
js
rcl
repz
adc
pop
xchg
mov
mov
out
imull
fistl
int
cmp
lret
sarb
sub
aad
push
das
or
fldlg2
stc
mov
and
inc
add
jge
sbb
addr16
mov
pop
test
adc
pop
fs
in
ret
mov
fcoms
push
rcr
mov
inc
cmp
cmp
mov
sub
jns
insb
adc
mov
cmpb
pop
push
adcb
icebp
ret
jae
shl
and
xor
jmp
ficompl
dec
inc
cmp
mov
dec
and
mov
mov
fldz
gs
fbld
and
mov
adc
sbb
test
mov
xor
call
enter
fstpt
jmp
sub
movsl
fstl
loopne
in
lds
int3
pop
pop
rcll
jo
clc
mov
and
mov
push
mov
movsb
cmp
inc
push
cwtl
aad
outsl
mov
push
add
setne
loop
int
push
dec
outsb
sbb
or
inc
js
in
loopne
lds
aam
out
fcmovnbe
hlt
dec
or
frstor
movsl
and
xchg
jg
dec
out
add
or
std
sbb
xchg
jge
xchg
xor
xchg
cs
mov
aad
repz
push
xchg
or
dec
sbb
xchg
shll
inc
lret
les
iret
fwait
push
sarl
mov
inc
pushf
loope
cmp
fldl2t
movsb
aaa
jmp
mov
es
addb
testb
sub
nop
pop
sahf
jae
add
jp
jae
sarl
inc
popa
mov
or
mov
lret
dec
inc
xor
into
sbb
adc
cmpsb
inc
xchg
add
fisttps
jg
outsb
adc
test
pop
jno
addb
jl
shrl
push
and
push
outsb
stos
sar
mov
adc
jmp
lods
in
mov
mov
pop
popa
lods
mov
in
fldcw
stc
loop
or
into
in
sbb
mov
mov
xchg
xchg
xor
call
testb
test
fidivs
les
push
repnz
movsb
fistpll
cmpsl
mov
inc
push
push
jae
jnp
repz
push
pop
movsl
stc
xchg
adc
lea
in
loope
push
inc
jns
insl
rol
mov
cmpsb
mov
or
testl
test
sbb
add
ljmp
fsubrl
cmp
sbb
cmp
iret
outsb
movl
xchg
loope
dec
mov
lea
add
jle
mov
mov
mov
test
lods
jp
loop
int
mov
aaa
adcb
dec
enter
xchg
push
subb
sub
mov
das
sbb
cs
jbe
dec
xchg
cmp
aas
fstps
sbb
or
test
mov
ljmp
sbb
shlb
add
and
or
add
andnps
lock
fcomip
mov
clc
into
xchg
adc
and
jp
fs
mov
into
mov
mov
dec
inc
rclb
ficompl
call
adc
roll
sub
pop
sahf
scas
xchg
pop
sahf
ret
mov
sbb
or
jp
pop
push
clc
and
outsl
or
dec
xlat
es
out
mov
cltd
in
add
mov
and
xchg
stos
lock
or
daa
fidivrs
xchg
mov
xchg
aam
xlat
mov
int3
dec
popf
mov
pop
pusha
xor
andl
jl
mov
pop
addb
into
or
sub
sub
xchg
inc
mov
stc
out
inc
les
push
je
lock
mov
or
inc
lock
lds
sbb
stos
adc
sub
jo
out
lret
fisttpll
idiv
enter
in
sub
scas
repnz
daa
repnz
popa
mov
or
xor
xchg
lods
repnz
mov
jbe
mov
xorl
xchg
js
out
cld
xchg
pusha
daa
mov
xor
xor
int
stos
mov
inc
mov
aad
lods
repnz
mov
mov
and
jl
mov
push
fcmovnbe
out
xchg
xor
mov
test
and
pop
enter
jecxz
fsubrs
inc
fisttpl
fmull
js
pop
pop
cmp
inc
popl
lods
mov
jne
inc
mov
xor
mov
mov
int3
inc
fsubl
fdivl
pop
fdivrs
or
in
cmp
xor
dec
or
cmp
cmp
cmp
sbb
pop
inc
pusha
leave
inc
jecxz
mov
out
out
clc
ret
pop
loope
cld
or
add
jns
sub
clc
jne
and
lret
fildl
mov
int3
sbb
lcall
test
lret
adc
in
shrb
jnp
rcl
rcll
shrb
add
fsubs
push
pop
mov
ja
cmp
jne
dec
mov
jl
push
lods
jno
testl
insl
enter
jecxz
repz
ljmp
jge
sti
int
out
mov
jae
cld
sahf
call
mov
in
fidivrs
mov
je
ja
in
or
jl
xchg
mov
fidivl
jp
xor
mov
jbe
dec
or
lret
push
mov
inc
push
shr
imul
jo
or
and
and
movsl
push
mov
sub
iret
xor
lahf
scas
push
insl
fdiv
push
mov
jg
insb
and
lods
adc
mov
jns
fisubrl
inc
mov
rclb
repz
iret
mov
outsl
cmp
and
stos
test
lret
icebp
push
test
mov
fstpl
les
add
jnp
ljmp
bound
pusha
adc
jecxz
in
fistps
cmp
mulb
sub
stc
popf
lret
push
test
cmp
cmp
divb
cmpsl
outsl
xor
lahf
jne
jl
outsl
mov
xchg
jbe
ds
dec
mov
xor
fwait
lds
mov
xchg
lds
cmp
push
lock
cmp
out
adc
aad
inc
sti
adc
lods
das
fdivrs
fisttps
lods
aam
xor
or
enter
aas
mov
cmc
xor
sbb
fimull
loopnew
fwait
inc
subb
pop
arpl
or
add
cmp
mov
lds
jmp
movsl
dec
jge
mov
movsb
ret
movsb
daa
jno
sbbb
lret
stos
daa
jo
mov
fbld
iret
in
dec
and
push
push
les
adc
push
data16
jecxz
nop
mov
notl
xchg
shrb
les
dec
xchg
sahf
call
repz
mov
inc
sub
inc
adc
popa
push
adcl
mov
jbe
adc
ja
add
and
scas
clc
int
dec
lret
mov
mov
add
cwtl
pop
and
ds
movsb
mov
mov
aas
inc
jbe
inc
inc
xchg
fisubs
stos
and
shrl
dec
in
pop
cmpsl
cmp
dec
jb
lock
lea
mov
into
xorb
push
inc
pop
ret
or
mov
inc
push
cs
or
add
cli
mov
mov
iret
icebp
popa
fmuls
dec
ljmp
or
in
lds
push
aaa
sbb
and
out
inc
mov
cmpsl
subb
test
dec
mov
adc
sub
or
mov
adc
cltd
dec
and
sbb
cmp
cwtl
push
lods
in
arpl
add
cli
and
cmp
xor
jno
dec
cwtl
lock
pop
stc
add
push
pop
in
popa
jmp
lcall
mov
jp
cmp
xchg
adc
aam
push
adc
lods
lods
leave
movsb
shr
cld
xor
nop
ss
mov
inc
lds
mov
pop
mov
test
cmpsb
shll
in
jnp
lock
lods
lods
loope
push
pop
call
mov
xor
jnp
fisubl
aam
popf
jecxz
mov
jle
mov
pop
dec
xchg
push
and
mov
out
dec
mov
pop
push
and
loope
sub
fldt
xchg
pop
pop
es
cmp
adc
pop
xchg
arpl
dec
divb
stos
mov
ljmp
rcrl
stc
and
rorb
test
rorl
jle
inc
int3
lock
hlt
push
cmpsl
bound
adc
ljmp
and
jg
enter
js
fstpt
bound
ret
push
shll
movsb
add
lret
mov
es
pop
gs
xchg
ss
cwtl
loop
add
icebp
dec
dec
xor
add
test
xor
or
sub
jle
or
imul
mov
xchg
dec
push
push
iret
int3
ror
mov
mov
and
imul
orl
or
jb
push
push
mov
xchg
add
stc
movl
cwtl
and
cmp
push
inc
jge
test
dec
test
mov
mov
jb
add
sbb
and
inc
cmpsb
jge
pop
mov
leave
and
clc
pop
xchg
sbb
lcall
pop
sub
jnp,pt
gs
cmp
scas
pop
and
jmp
jno
fdivr
mov
mov
mov
push
adc
xchg
cmp
mov
or
sub
mov
shll
popa
add
adc
push
push
push
test
inc
mov
or
inc
push
push
fdivrs
in
jmp
imul
out
mov
xor
gs
scas
ljmp
in
jne
cs
cmp
fisttps
xchg
lods
sub
popf
push
cltd
in
adc
adc
stos
push
adc
addr16
mov
pop
ret
rorl
aas
sbb
lods
xor
xor
mov
shll
int3
jnp
xchg
dec
push
sub
hlt
mov
pushf
cld
hlt
ds
setp
push
adc
test
outsb
mov
iret
mov
test
sub
fdivrp
push
add
cmp
leave
popa
xchg
bsr
mov
inc
addr16
std
jb
mov
jg
sub
into
mov
stos
mov
lahf
cli
mov
xchg
push
xchg
dec
push
repnz
aad
ljmp
xor
xchg
pop
lods
adc
jg
pop
push
loope
sbb
popf
mov
sbb
lods
ds
mov
dec
fildll
cmp
push
sahf
fsub
rcr
dec
pop
xchg
xchg
lcall
in
popf
sbb
out
ljmp
cltd
push
fisttpll
loopne
jo
adc
test
out
pusha
cli
shlb
and
jae
push
daa
and
mov
repz
cmp
push
lcall
sub
movsl
bound
lea
test
cmpsb
inc
lret
jbe
mov
pop
jnp
dec
jmp
mov
stos
dec
mov
fs
aaa
jnp
or
shlb
sbb
rorl
js
inc
hlt
fwait
cmpl
jbe
out
push
pop
sahf
and
jnp
lock
into
std
lods
sub
mov
sahf
pop
push
test
or
cld
pop
cltd
xlat
pop
das
dec
movsb
enter
dec
lret
jp,pn
ret
mov
push
mov
outsl
push
fsubrp
xchg
in
loopne
xor
ss
test
sbb
sub
scas
dec
inc
sbb
sub
addb
xorl
ds
addl
sub
sahf
xchg
pusha
push
sbb
jg
test
push
mov
loope
adcl
adc
pop
rcrb
push
popf
fisttpl
mov
test
or
out
flds
movsb
lods
push
sbb
lahf
arpl
add
cltd
mov
inc
imull
add
in
sub
in
inc
or
mov
or
xor
popf
pop
or
fistps
in
test
jbe
lea
stos
jo
cltd
sub
add
mov
pop
inc
inc
out
lret
and
xor
fdivrl
fadd
popa
sahf
fcmove
jmp
inc
pop
movsl
push
push
bound
jecxz
cmc
inc
das
jle
sbb
sbb
xchg
leave
mov
inc
in
xchg
bnd
aad
pop
movsb
or
jne
push
inc
push
inc
popa
int
cmp
pusha
xor
cmp
pop
jle
loopne
sub
mov
cli
pushf
pusha
adc
adc
aaa
mov
fsts
or
xchg
sbb
movb
orl
adcl
in
jbe
jmp
mov
or
mov
pop
pop
lret
in
int
lret
movsb
shr
mov
es
jae
std
je
mov
push
stos
mov
xchg
mov
jecxz
cltd
adc
jb
fsubrl
xchg
jge
adcb
ss
cltd
je
sbb
inc
inc
add
in
mov
insl
test
pop
data16
out
lea
adc
int3
imul
roll
mov
mov
xor
xor
insl
inc
cmc
push
push
jmp
fstpt
call
or
movsb
js
iret
mov
adc
shlb
mov
not
insb
sbb
adc
mov
xchg
lahf
jae
xor
cmpsb
push
dec
adc
adc
scas
sub
out
xchg
mov
adc
adc
loop
push
dec
or
in
jp
ss
push
pushf
and
loopne
popf
shl
push
inc
pop
pop
loopne
mov
xor
in
bound
push
fwait
pop
and
pop
icebp
mov
sbb
cmovl
cmp
sbb
push
jnp
insb
mov
sbb
fcoml
fsts
aam
mov
mov
pop
js
inc
ret
fisubrl
movsb
repz
add
shr
iret
dec
gs
cmp
mov
jnp
aaa
insb
mov
movsb
cmp
loop
test
lret
stc
rorl
jg
push
jge
mov
shlb
pop
jns
or
imul
xor
inc
pop
push
int3
jnp
mov
adc
lahf
inc
addr16
xchg
cli
mov
cmp
push
xchg
imul
popf
push
pop
mov
int3
add
cmp
or
sbb
pop
popa
shlb
inc
jge
xchg
in
scas
inc
mov
test
ret
dec
push
inc
daa
icebp
pop
lods
push
or
subb
repz
and
mov
mov
jnp
fmul
cmp
adc
cmpsb
add
popa
and
inc
mov
cld
pop
out
mov
pop
outsb
movsb
mov
cmc
xchg
dec
jno
lahf
sub
pop
movsb
aam
ret
loopne
jge
jge
daa
cmpsb
cmova
pop
pop
cmpsl
loopne
call
repnz
mov
adc
cmp
fcom
pushf
call
cmp
pop
test
pop
andb
cwtl
adc
cmp
or
sahf
out
popf
cmp
and
sahf
and
loopne
test
nop
jns
rcr
pop
cmp
sub
or
push
jp
orb
push
push
in
sub
fsts
aaa
jo
je
add
jbe
sbb
ret
gs
stos
jno
call
nop
or
mov
sbb
inc
imul
cld
lret
mov
rolb
cmp
cmp
push
mov
shrl
sbb
pop
add
aas
aam
jno
loop
ja
mov
push
or
sahf
mov
push
add
xorl
insl
pushf
je
mov
mov
enter
adc
data16
pop
out
pop
mov
jp
push
mov
pop
sbb
jne
clc
aad
inc
stos
lods
jle
pop
push
sbb
div
call
jbe
rcl
fsub
sub
popa
andl
int3
lret
fsubrl
insl
sti
aam
sub
pop
les
cmc
mov
add
into
in
jns
xor
sub
fsubl
insb
ds
jge
call
int3
stc
icebp
mov
test
pop
add
test
adc
jnp
xor
dec
adc
sub
cs
push
or
jge
pop
mov
adc
sti
stc
add
mov
adc
or
das
test
sbb
lods
icebp
xchg
pop
les
lds
daa
mov
cmpsl
cwtl
mov
xchg
scas
pop
lds
lods
mov
fwait
push
cs
or
push
cmp
sahf
jno
cltd
cmp
jbe
test
add
aas
clc
jbe
xchg
hlt
mov
push
push
repnz
shl
push
test
xchg
lock
cmpsb
aad
mov
push
lahf
adc
ret
cwtl
xchg
fimuls
fwait
jp
popf
rcrb
fwait
pop
cmp
mov
js
mov
dec
test
mov
or
add
fcmovnbe
insl
mov
sub
jmp
or
repnz
push
fsubs
nop
mov
jne
push
inc
jle
rolb
xchg
xchg
lret
xor
add
cmp
in
iret
int3
cmpsb
and
leave
push
aaa
mov
pop
clc
fs
jae
ret
adc
push
neg
aaa
leave
data16
push
dec
dec
icebp
mov
mov
stos
dec
pop
xchg
aad
mov
out
pop
push
call
into
adc
mov
fisttpl
mov
adc
jmp
inc
icebp
lret
fistpl
mul
adc
pop
add
mov
lret
mov
pop
push
add
insb
sub
mov
dec
sub
sbb
std
mov
mov
stos
out
lods
and
pop
mov
pop
shrl
into
pop
scas
cmp
push
imul
shlb
mov
jno
scas
sbb
dec
and
mov
fsub
and
inc
push
push
xchg
cmpsl
adc
movsb
xor
cltd
sbb
mov
xchg
mov
xchg
std
cwtl
jg
daa
inc
mov
addr16
pop
cmp
gs
aas
daa
enter
inc
jo
mov
mov
rorl
or
loop
in
stos
pop
jo
cmpsb
mov
loop
add
loope
jne
scas
push
incb
inc
ljmp
dec
sar
js
jns
mov
adc
jb
loopne
ja
cmpsb
ror
mov
cmp
inc
lcall
add
ret
mov
dec
cmp
lahf
dec
imul
leave
mov
mov
pop
mov
sti
push
ljmp
movsb
aam
mov
push
xchg
inc
pop
xor
xor
bound
jb
dec
pop
mov
sbb
mov
sbb
enter
mov
sub
push
mov
mov
cwtl
jbe
pop
mov
jl
sbb
es
jns
insb
jg
in
mov
cli
es
cmpsl
ljmp
ljmp
xchg
int
cmc
sbb
cmc
sbb
cli
add
mov
push
xchg
loop
shlb
imul
ja
ds
ljmp
xor
rcrl
add
or
mov
fs
outsb
inc
popa
pop
pop
arpl
jmp
mov
xor
loopne
int
xor
repz
dec
and
sbb
mov
jne
adc
ror
sbb
pusha
fsubr
std
dec
inc
idivb
push
fimull
cmp
push
out
or
push
int
push
fistpl
jbe
lahf
f2xm1
xchg
cli
pop
fldenv
dec
jns
js
xchg
outsb
pop
test
jno
adc
test
add
xchg
dec
pop
icebp
xlat
aam
repz
vmovups
adc
mov
push
lock
push
clc
push
in
sbb
push
cmp
xchg
loopne
fdivr
outsl
mov
adc
sub
aaa
jmp
addr16
cwtl
es
push
fcmovu
cmp
dec
rcll
movsb
ja
aad
cmc
jl
fnsave
stos
and
in
xorb
dec
es
mov
sbb
das
mov
ret
cld
adc
addr16
repz
dec
xor
in
cmpsb
mov
imul
mov
arpl
outsb
mov
into
sti
mov
hlt
adc
jnp
sub
cltd
sti
imul
mov
inc
pcmpeqd
mov
lds
mov
push
loope
insb
mov
and
stc
lock
sub
les
mov
fisttpll
mov
lcall
stos
pop
std
fdiv
dec
test
loope
adc
out
loop
adc
rcr
lret
xor
fisttpll
js
lret
sbb
cmc
pop
push
out
notb
adc
jmp
rclb
pusha
sbb
rcrl
jge
sbb
call
aas
cmp
adc
jae
aad
inc
push
cmc
daa
std
dec
mov
inc
xor
mov
fwait
cli
das
sub
push
or
mov
mov
call
inc
cwtl
jo
insb
push
enter
pop
lea
mov
repnz
mov
pop
outsl
iret
push
jb
adc
adc
cmp
popf
fisubrl
mov
xchg
xchg
jb
lsl
or
outsb
jmp
imulb
mov
inc
fwait
es
xor
stc
adc
mov
push
mov
in
push
push
stos
nop
xchg
sub
dec
and
dec
and
negl
push
lcall
aaa
pop
xchg
iret
sbb
orb
mov
testl
mov
rorl
test
ja
xchg
dec
mov
into
sahf
js
xor
push
sub
sub
add
lock
dec
xor
mov
and
mov
repz
les
cmp
sub
xchg
lods
push
adc
fs
in
ljmp
test
push
cltd
ret
ss
inc
sahf
fsubl
mov
scas
or
rorl
insb
inc
and
xlat
mov
fst
ficoms
out
mov
mov
xchg
inc
lcall
fisubrs
add
push
jge
fnstcw
popf
adc
iret
dec
das
xlat
dec
movsl
stc
repz
sahf
jns
fcoms
dec
orb
adc
sub
lahf
push
mov
sub
sarb
or
lret
dec
daa
mov
xchg
cs
xor
add
subb
mov
push
pop
dec
and
xorb
js
ret
xchg
cmc
pop
sub
lds
push
out
pop
mov
mov
adc
cmpsl
js
mov
in
mov
int
in
sahf
mov
nop
mov
xor
cmpsl
pop
sti
xor
push
std
test
pop
pop
ja
jne
imul
test
loope
cmp
mov
pop
lcall
call
mov
sub
mov
xchg
jnp
lock
xor
xor
mov
popf
aas
dec
ror
pop
loop
out
icebp
push
mov
xor
clc
mov
inc
mov
cmp
adc
jno
or
mov
leave
mov
xsha1
cmpsb
lret
mov
push
inc
mov
cmp
sub
lds
stos
push
shlb
aad
jmp
sbb
push
mov
add
push
push
add
fwait
mov
bound
aas
rcll
fwait
stos
mov
fdivl
xor
insl
push
sub
xchg
clc
addr16
add
faddl
notl
movsb
xor
sbb
and
inc
jg
and
call
mov
sbb
cmpsb
int
out
xor
lods
aas
subl
mov
loope
cmc
jle
jnp
fiaddl
pusha
std
add
fildll
sti
and
lods
aad
ja
mov
rolb
mov
jbe
cmp
into
pop
out
push
xchg
clc
pop
mov
insb
fistpl
sub
dec
mov
pop
sbb
cmpb
sub
into
out
and
mov
mov
lods
pop
mov
ficoml
push
fwait
nop
addr16
repnz
out
push
sbb
in
sti
fisttps
dec
cmpsb
push
repnz
lock
mov
leave
jbe
inc
ss
movsb
in
push
lcall
dec
adc
popa
adc
inc
ret
dec
push
out
test
mull
imul
mov
jl
repnz
mov
push
insl
sahf
cmpsb
push
shlb
cmp
fidivl
outsb
adc
xlat
mov
mov
ret
cs
fnstsw
cmpsl
cmc
jp
aad
pop
incl
push
ljmp
xchg
dec
push
icebp
push
ljmp
fimuls
pop
movsl
nop
pushl
and
inc
test
arpl
jle
imul
mov
inc
divl
into
aas
inc
rol
sbb
cmpsb
lods
cld
mov
or
dec
pop
scas
jo
or
sahf
or
adc
jmp
jl
lock
notl
jo
sub
or
leave
cld
jbe
inc
int3
mov
sahf
in
es
fwait
push
aad
mov
add
mov
fnstenv
xor
sbb
push
jmp
and
cltd
inc
push
mov
xchg
cmpsl
jmp
jne
cltd
leave
inc
push
cmp
add
dec
sub
scas
ret
lods
xchg
xchg
fwait
jo
jmp
adc
out
jecxz
lock
jnp
xor
fiaddl
dec
cwtl
lods
sahf
mov
add
sub
loop
cli
mov
inc
push
mov
dec
add
dec
int
repnz
daa
mov
stos
stc
outsl
fnstcw
push
ljmp
out
xchg
and
mov
jp
les
dec
sahf
stc
pop
test
push
add
inc
rcll
mov
outsl
xchg
or
mov
iret
addr16
inc
movsb
xor
std
stc
mov
add
cs
xor
call
sub
lods
or
dec
and
sbb
rorb
push
test
xor
icebp
adc
sti
jne
pop
out
and
adc
enter
push
shlb
cmpsl
fldcw
xchg
fmull
fsubs
pop
add
push
sub
test
adc
or
mov
fadd
sub
or
xchg
lret
adc
stc
xchg
dec
mov
shll
notb
bound
stos
push
inc
push
pop
jb
xor
cmp
pop
jg
dec
dec
sbb
jns
mov
sub
outsl
ljmp
or
fsubs
xor
lods
xor
hlt
jo
xchg
xor
movsb
xchg
out
or
xchg
pop
cmpsl
fsts
fistpl
or
mov
fcom
lods
cli
add
call
out
sarl
mov
popf
into
or
pop
insl
imul
or
xor
fidivs
hlt
out
mov
insl
jno
fnstenv
add
negl
inc
out
mov
cli
jle
out
mov
cmpsl
decl
movb
jmp
loopne
and
pop
call
imul
sbb
decb
bound
jnp
dec
aaa
nop
ljmp
jnp
lods
pop
insb
xor
icebp
ljmp
mov
push
andb
xor
test
jne
lods
or
std
xchg
or
ss
out
push
and
sahf
add
outsl
and
mov
mov
rorb
cmp
and
dec
js
mov
add
cmp
mov
push
test
sarb
fmul
or
sbb
mov
or
inc
cmc
sahf
popf
fsub
cmpsl
xchg
sub
out
push
xlat
xor
lea
das
cmpsb
lahf
sbb
mov
sub
popa
call
dec
js
push
iret
pop
pop
movsl
inc
aas
sbb
adc
gs
nop
incb
mov
or
sub
loope
scas
xor
imul
jge
jo
aaa
lret
loopne
mov
out
test
aad
call
cmc
pop
push
inc
mov
cmp
inc
push
inc
mov
mov
inc
mov
call
push
scas
in
jne
std
jecxz
test
add
dec
int3
pop
push
pop
inc
clc
fsubl
mov
jnp
xchg
movsb
dec
icebp
sahf
popf
movsb
jbe
int3
fnstsw
adc
sbb
roll
sarb
sbb
test
pop
aad
sbb
std
loopne
mov
mov
lea
ret
lcall
sub
adc
sbb
inc
sbb
ljmp
add
jbe
mov
and
into
adc
lahf
xchg
cmp
lea
ljmp
outsw
icebp
cmp
insb
mov
loop
cmp
cmp
cmc
arpl
push
push
xor
dec
push
adc
or
aad
mov
mov
mov
pushf
jg
pop
icebp
pop
mov
mov
out
scas
stos
movsl
mov
jge
adc
dec
jl
sub
test
xor
outsb
sub
xchg
inc
jmp
inc
rcl
push
mov
adc
sbb
sysenter
mov
jo
repnz
daa
addb
mov
and
ret
fcom
xchg
or
jg
push
cmp
pop
pop
dec
jecxz
sbb
jno
rcll
xchg
add
movhps
and
fsts
fnsave
or
xlat
sbb
cmp
dec
lods
pop
adc
inc
lds
mov
shlb
fcompl
push
not
scas
clc
outsb
in
fcoml
sub
inc
cli
pusha
lahf
js
jg
data16
xor
push
pop
mov
push
std
cmp
scas
sbb
sbb
and
lret
mov
mov
test
cwtl
or
nop
and
xchg
outsb
lea
out
push
sub
insl
sub
in
mov
mov
xor
test
pop
sahf
dec
aam
dec
cs
insl
icebp
add
pop
gs
fs
and
xchg
mov
mov
mov
jmp
pushf
inc
rolb
add
lods
inc
push
or
cmp
test
mov
adc
mov
xchg
dec
jnp
decl
mov
imul
out
push
int3
divl
jmp
or
in
xor
mov
int
mov
outsl
dec
sub
or
push
pop
and
sub
adc
inc
inc
jp
xchg
aam
mov
inc
nop
jecxz
scas
les
in
or
push
and
xchg
pop
adc
shrl
cwtl
mov
cmpb
sahf
shl
adc
jb
shlb
and
mov
push
adc
sub
fmuls
pop
ds
inc
fdivs
add
sbb
inc
mov
pop
cmp
sub
and
xlat
orl
add
std
das
cmpb
out
sub
sbbb
inc
pushf
cmp
mov
in
xor
lds
out
jae
jmp
mov
ror
jo
imul
fxch
sbb
mov
pop
pop
fnstenv
sbb
or
mov
sub
pop
mov
call
movsl
jbe
jge
jae
lcall
or
inc
ds
xor
notl
outsb
adc
cmpsl
sub
aam
mov
push
lret
cld
adc
push
dec
call
shlb
hlt
pushf
mov
cmpsb
icebp
add
into
push
cltd
les
mov
test
test
aaa
xor
xchg
inc
imul
adc
push
adc
clc
mov
sbb
aad
lcall
test
addr16
jae
fs
leave
sub
mov
insb
inc
nop
mov
fwait
orb
push
xchg
lea
fisttps
push
lret
add
cmc
push
loope
dec
cli
gs
rorb
dec
mov
cmp
je
jo
mov
xchg
jmp
dec
cmpsl
and
iret
pop
xchg
aad
movsl
cmp
xlat
stc
push
dec
sub
out
sbb
cmpsl
mov
fiadds
push
xchg
or
mov
adc
xchg
sti
mov
xlat
jns
add
scas
jle
mov
push
xor
cltd
lret
lds
adc
lock
sbb
mov
add
inc
sbb
jl
jle
or
aas
push
sub
pop
cs
into
jl,pt
and
xchg
jmp
imul
push
dec
inc
mov
sbb
movsb
dec
stc
sub
fdivl
test
mov
or
call
imul
lock
xchg
mov
stos
xor
and
dec
ds
and
rclb
in
push
jmp
decl
mov
dec
testl
ficoms
jecxz
test
pusha
scas
push
fbld
sarl
or
sbb
xor
mov
dec
adc
jecxz
and
xchg
insl
in
pop
adc
pop
and
mov
cltd
jl
adc
mov
push
mov
dec
xchg
ljmp
xor
mov
aad
testb
add
js
test
jbe
jp
test
mov
repz
mov
out
xchg
outsb
mov
sub
insb
out
mov
imul
out
jb
mov
les
mov
sarb
fnstcw
jo
adc
push
stc
out
push
loopne
ret
inc
enter
sbb
rolb
jb
in
sar
dec
loopne
nop
das
lock
xlat
cmp
cmc
daa
mov
lcall
add
fldt
push
add
rcll
jb
jg
lods
or
sbbb
in
aad
jecxz
sbb
fldt
or
hlt
pop
adc
js
xchg
mov
jns
add
mov
pushf
xor
test
aaa
add
fdivrp
bound
mov
push
stos
or
lahf
repnz
push
xchg
dec
or
push
dec
fcoml
xor
pop
lret
push
pop
dec
orl
fcomps
add
cmp
insb
and
mull
inc
cmp
icebp
jb
push
sbb
add
aam
mov
pop
jge
mov
aam
into
xchg
stc
mov
add
jb
sub
xor
xor
mov
fs
in
pop
sub
jae
push
jmp
bound
mov
dec
xchg
rcrl
push
leave
jmp
scas
xor
adc
cmpsl
int3
cmpsb
cmp
xor
push
scas
incl
sahf
inc
ret
cs
mov
cld
sub
pop
je
push
or
test
rorb
rol
cmp
xor
jle
aaa
mov
xchg
fwait
pop
outsb
scas
xchg
repz
lret
lods
jbe
pop
lea
xor
leave
xor
rorb
sbbb
int
adc
mov
imul
push
dec
dec
xorl
sti
pop
dec
mov
add
out
push
mov
sti
cmp
test
enter
pop
xor
test
jnp
movsb
sub
mov
int3
pmaddwd
lock
jb
fs
outsl
int3
cmc
inc
cltd
xchg
imul
ffreep
int3
movsb
push
mov
pop
outsl
bound
push
xor
loopne
es
testb
add
fimull
into
push
mov
dec
sub
xor
jae
fnstcw
std
cmp
into
insl
icebp
dec
xchg
stc
out
iret
imul
jmp
push
clc
and
pop
pop
jnp
xchg
iret
pop
cmp
loopne
movsb
ja
jp
mov
adc
add
xchg
lock
test
ljmp
mov
iret
xchg
stos
fwait
aam
movaps
sub
lods
add
out
dec
fadd
push
nop
cmp
fs
sub
rcrl
icebp
mov
insb
aad
mov
mov
mov
dec
sbb
pop
pop
pop
push
sbb
cmp
dec
and
sbb
mov
sbb
outsb
pusha
insl
inc
and
daa
enter
lcall
pop
insl
adc
sti
shll
ficomps
dec
pusha
lahf
adc
lret
les
jb
or
ds
mov
cmp
pop
and
loop
fiaddl
ret
out
pop
xchg
mov
popf
pop
nop
jne
sbb
xchg
cmpsb
lret
fwait
lahf
jp
and
ja
icebp
pop
cld
test
add
sbb
movsl
inc
outsl
fwait
lahf
jl
sbb
pop
ja
add
bound
sub
sub
push
es
add
nop
out
pushf
mov
xchg
in
mov
mov
sub
add
aam
or
repnz
cwtl
sti
nop
ret
out
xor
or
adc
cmc
ret
cmp
adc
mov
lahf
les
sub
pop
mov
sub
pop
cli
aaa
aas
inc
ud1
and
mov
mov
inc
stos
sub
xchg
pop
loopne
mov
cmc
inc
push
mov
push
fimuls
inc
sub
jl
jmp
sub
jb
std
dec
xor
push
cs
push
pusha
rcrb
pop
cmp
fistl
inc
inc
mov
ss
cmp
cmp
insl
cs
lcall
jo
iret
mov
sub
lea
out
inc
out
popa
lods
repnz
push
fistps
add
mov
mov
repnz
mov
lcall
rcl
sub
fstp
lcall
cld
bnd
adc
outsb
xor
and
test
loop
ret
sub
adc
jne
int
paddq
lods
loope
xchg
sub
cli
inc
xor
pushf
xlat
jg
aad
xor
add
inc
flds
adc
push
and
pop
repnz
pop
in
imul
cld
pop
dec
nop
adc
cs
jecxz
inc
jmp
mov
add
stos
xchg
pop
inc
sbb
mov
nop
xor
ljmp
add
fisttps
fcoml
mov
adc
outsb
lret
iret
out
lea
in
dec
out
add
in
jecxz
mov
xor
test
xchg
mulb
leave
or
add
or
out
leave
mov
or
out
pop
enter
and
inc
sub
and
push
pop
movsb
mov
mov
jae
pop
ficoml
in
mov
out
and
fcompl
jns
xchg
mov
in
cld
mov
shl
test
adc
aaa
push
mov
sub
pop
jg
adc
mov
sub
ss
cwtl
into
adc
jg
cwtl
sahf
cmp
add
pop
out
dec
mov
gs
aam
or
aad
je
dec
data16
gs
add
addb
mov
aaa
ret
xchg
jne
push
pusha
test
fsubs
stos
aas
mov
jmp
dec
inc
fptan
jl
push
lea
push
movsl
in
stos
loope
xor
test
sahf
stc
gs
sbb
inc
mov
push
outsl
jle
insl
jbe
out
das
sbb
push
lods
jae
xor
orb
mov
sub
jno
jmp
adc
rorl
insb
mov
and
cmp
movsb
stos
dec
inc
lret
bound
jg
push
xchg
lret
adc
divl
adc
pop
pushl
mov
in
lea
pop
sbb
loop
lock
jmp
cmpsb
cmp
stos
fld
out
movsb
ja
adc
and
pop
fbld
push
mov
inc
cwtl
and
jne
adc
shrb
stos
pop
cltd
icebp
repnz
inc
push
test
cwtl
push
jno
testl
adc
sub
int3
sbbl
pop
xchg
repz
clc
inc
mov
pop
enter
enter
rcrl
mov
stc
popa
push
dec
addl
lret
dec
aas
mov
xchg
icebp
inc
inc
data16
and
jge
or
dec
adc
mov
mov
xor
rorb
push
in
aam
lods
xor
mov
fstpl
inc
cltd
sub
mov
mov
xor
sub
push
mul
mov
lods
or
push
push
sbbb
mov
pop
into
push
enter
xchg
xor
xchg
sarb
movsl
sub
jecxz
and
xchg
add
mov
filds
test
jge
push
bound
pop
and
pop
mov
cmp
jl
mov
and
cmp
cwtl
mov
add
mov
mov
lods
adc
scas
movsl
inc
ret
push
xor
test
les
xor
clc
jns
enter
sbb
arpl
repnz
push
xlat
push
jle
ja
mov
loope
loope
repnz
xchg
loope
pop
jge
pop
cmpsl
sbb
and
lahf
pushf
out
lods
popf
add
cmp
loop
sbb
imul
in
fsubl
inc
and
add
aas
or
mull
sbb
xchg
sub
not
int3
xor
insb
and
add
loop
daa
lods
pop
out
push
jle
adc
sahf
cli
out
dec
rolb
test
sbb
hlt
mov
cmp
pop
jmp
add
dec
mov
dec
test
push
lods
jmp
stc
sub
adc
mov
fsts
ret
jae
sti
rcrb
in
cmpb
lcall
dec
cmp
loope
lock
test
jnp
shrb
jle
inc
xlat
adc
and
scas
je
dec
arpl
test
add
scas
sbbb
loope
ja
outsb
inc
inc
xchg
cmp
xchg
cmp
jae
xchg
in
xchg
mov
popa
mov
and
adc
jmp
jmp
add
vshufps
pop
adc
cmp
mov
mov
mov
xor
or
pusha
mov
xor
lcall
es
in
out
mov
test
jae
mov
jb
mov
cwtl
div
in
mov
pop
movsb
fisubl
ret
pop
jns
mov
mov
jp
mov
mov
cmp
fildll
in
xchg
sub
cmc
divl
sub
in
fs
mov
repz
stc
jp
js
imul
adc
insl
test
mov
pop
ss
fiaddl
jnp
jle
adcl
mov
test
sbb
push
mov
sbb
and
sbb
pop
and
ljmp
jmp
es
push
and
jecxz
shll
cmpsb
gs
cmp
enter
xchg
push
xchg
test
test
ficoms
mov
inc
xchg
xor
inc
insl
dec
les
cmp
popa
cltd
sub
mov
aad
jg
add
pop
adc
inc
aad
pop
aaa
pop
pop
dec
cli
repz
or
lods
iret
sub
mov
mov
sti
dec
fdivs
into
ss
pop
or
xchg
fs
sub
fwait
dec
dec
imul
sub
xchg
sti
lcall
cs
or
rorb
loopne
push
and
dec
mov
push
mov
repz
and
outsl
subl
imull
mov
xor
sahf
loope
and
mov
sbb
pop
mov
cltd
sbb
pop
shll
es
xor
daa
lret
or
adc
js
mov
mov
popf
sub
out
negl
push
sarb
mov
hlt
and
push
hlt
dec
xor
jle
jnp
sub
jmp
inc
loope
int3
stos
pop
lods
dec
inc
ret
movb
inc
testl
jnp
sub
pop
idivb
or
push
mov
mov
pushf
loope
out
rcr
cltd
adc
inc
sbb
sti
inc
scas
inc
or
sbb
add
in
sar
loope
pop
mov
cmp
ljmp
mov
cmpsl
dec
dec
addr16
outsb
mov
loopne
shll
push
dec
fbstp
cmpsb
lock
lds
xchg
andb
jne
xchg
sbb
nop
push
fistpll
pusha
push
and
fiaddl
sahf
mov
aas
outsl
scas
nop
mov
call
call
testb
cmpl
sbb
inc
or
jmp
shlb
and
add
or
cmc
lock
xchg
cmpsb
outsl
call
cmp
pop
jo,pt
sarl
rolb
dec
inc
mov
jno
mov
ja
js
arpl
sub
mov
pop
test
hlt
hlt
sub
daa
in
lds
jae
xor
fcoml
xchg
int3
int3
mov
dec
mov
fcom
mov
fs
enter
in
push
das
mov
adcl
outsl
nop
inc
mov
jno
mov
inc
mov
js
loope
mov
hlt
push
or
jle
movsl
gs
imul
sub
xlat
add
jle
aad
adc
iret
dec
mov
mov
cmpsb
adc
lods
loope
pop
sub
data16
fadds
add
adc
shll
pushf
ret
pop
jl
test
inc
push
xor
ret
call
ret
mov
hlt
or
mov
adc
outsb
adc
enter
shlb
sbb
push
push
or
test
jno
into
loopne
ljmp
mov
or
push
enter
and
dec
sti
xchg
or
insl
adc
mov
mov
adc
mov
imul
xor
sbb
xor
js
stc
dec
push
dec
scas
lods
test
inc
lds
adc
sbb
or
and
insb
sbb
mov
pop
mov
lds
dec
mov
int
les
rorl
push
push
cltd
ret
adc
rorl
nop
out
dec
sub
inc
out
adc
mov
lret
imul
dec
sub
notb
cmp
into
push
shr
or
hlt
add
push
xor
dec
push
add
dec
xchg
push
popf
cltd
pop
dec
cmp
inc
mov
incb
pop
and
in
shlb
not
mov
aas
aad
jno
data16
inc
push
sub
cmp
xor
addl
imul
scas
sub
sbb
gs
ds
and
cltd
fisubs
jbe
stc
cld
push
jbe
shlb
mov
jbe
int
loop
stos
pcmpgtw
sub
xchg
push
fprem1
push
jae
sahf
ljmp
add
mov
sub
or
inc
push
sbb
or
repnz
mov
pop
hlt
mov
mov
mov
inc
popf
or
imul
insl
fidivrs
cmp
xchg
inc
das
loopne
jg
aam
repnz
mov
cmpsl
jl
movsb
imul
push
iret
jno
in
arpl
ljmp
inc
pop
push
cmp
pushf
leave
or
push
fmull
mov
shlb
sbb
std
lret
orl
mov
les
fwait
rolb
xor
fwait
add
pop
call
jmp
add
cmpsl
sbb
outsb
jge
sarb
xor
sahf
in
and
jbe
lods
pop
out
es
xchg
push
mov
or
push
stc
mov
outsb
lea
call
mov
mov
leave
sub
mov
loopne
ret
mov
icebp
ja
jp
inc
mov
fstps
adc
dec
data16
push
cmc
dec
mov
xor
shl
jb
imul
mulb
jne
lret
and
lods
or
pop
mov
cltd
bt
push
mov
lcall
je
mov
jbe
iret
fidivrs
and
cli
in
push
dec
js
push
push
push
je
adc
daa
mov
shlb
xchg
add
inc
inc
add
and
sub
jo
inc
pop
jg
int3
jle
push
pusha
in
rcll
xor
mov
mov
lahf
icebp
cmp
test
mov
arpl
ret
mov
lret
jns
clc
adc
fsubrs
xlat
mov
or
popa
mov
mov
clc
jne
mov
jecxz
add
cld
shl
mov
cmp
in
mov
scas
pop
adc
test
mov
xchg
movsl
ret
mov
or
pop
dec
sti
adc
test
repz
stc
push
int
push
push
cmpl
cmp
cli
out
out
adc
loop
mov
nop
loope
adc
repz
xchg
or
jge
jbe
dec
faddl
add
and
ljmp
in
cmpsb
shr
scas
push
arpl
or
pop
dec
mov
ret
dec
jg
push
in
jb
popa
xor
jno
jle
jp
ljmp
lahf
xor
mov
int
pop
ja
jp
pop
adc
nop
jmp
test
adc
or
sbb
mov
xor
push
and
push
mov
sub
fchs
cwtl
in
jnp
xchg
xchg
mov
loopne
or
inc
jo
jg
loopne
lcall
scas
lahf
aas
aas
insb
jecxz
mov
adc
and
fisttps
repz
cmp
std
sarl
shl
iret
mov
jl
cli
je
add
sahf
cmc
or
and
push
mov
dec
lock
sub
mov
sbb
test
sub
test
das
sbb
xchg
sarl
add
fwait
leave
inc
mov
cmp
outsb
mov
push
cmpsl
hlt
out
sub
sbb
pop
mov
dec
dec
lock
aad
sbb
pop
mov
xchg
sub
aad
aaa
jae
xchg
scas
cmpsb
fdiv
adcl
std
mov
inc
sbb
mov
orb
fdivs
movsb
mov
push
jl
dec
pusha
xchg
push
add
test
call
pop
jae
cmp
pop
cltd
dec
cs
mov
jno
sbb
ret
cmp
jmp
in
jne
fbstp
xor
ret
sbb
into
add
adc
out
mov
push
sub
clc
xchg
mov
nop
sbb
pop
add
mov
imul
cltd
leave
inc
cmp
inc
push
adc
mov
xchg
stos
cwtl
pop
stos
pop
jne
dec
push
pop
sbbl
xor
lock
cmp
aas
pop
inc
cmp
nop
mov
sbb
sahf
mov
in
dec
pop
xchg
xchg
loop
cwtl
mov
inc
cmc
in
xchg
pop
in
mov
pop
aaa
mov
xchg
jg
jl
neg
leave
mov
dec
mov
cmpsl
in
int3
push
bound
jle
mov
das
or
dec
or
add
sub
or
inc
clc
addr16
sbb
jo
add
sbb
call
out
cmp
xor
xchg
pop
std
and
shll
test
sub
sbb
or
or
clc
mov
fstps
jo
jg
int3
je
dec
shlb
scas
nop
les
out
out
add
jae
gs
dec
fisubrs
mov
out
dec
ret
lds
out
mov
xchg
pop
iret
xor
cwtl
add
pop
mov
call
lahf
mov
insb
je
or
cmp
insb
ret
inc
sbb
lds
popa
aas
mov
cmpsb
imul
or
repnz
sbb
xchg
cld
push
jmp
sub
movb
ja
insl
dec
cmp
dec
pop
sub
mov
pop
push
clc
push
movl
push
sti
pop
push
sbb
rorl
int
loope
movsl
cmpsl
sub
fdivs
add
fcoms
sbb
mov
jae
ja
add
and
sbb
pop
jg
xchg
sahf
and
jle
mov
movl
push
pop
mov
gs
push
scas
jnp
and
push
or
int
sti
inc
cmpsb
fstp
add
sbb
lods
aas
les
xor
mov
add
sbb
enter
shll
insb
in
jmp
test
es
popa
inc
mov
mov
in
outsb
inc
and
data16
mov
cmp
cmp
nop
mov
int3
lcall
inc
jge
sub
pop
stc
lret
dec
push
ss
jno
xchg
cmpsb
out
fimuls
mov
push
xlat
push
adc
jns
sahf
mov
xchg
je
out
fwait
in
movsb
or
jae
jp
movsb
add
mov
nopl
xchg
dec
scas
sbb
xorb
pop
xchg
stos
jge
add
test
jmp
xor
and
inc
xor
jl
mov
fstl
sarl
enter
adc
or
idiv
or
cld
mov
ret
mov
pop
push
inc
jmp
sub
mov
mov
shlb
xor
scas
in
or
push
push
sahf
inc
out
jmp
out
lods
test
test
pusha
out
mov
cld
push
pop
ret
push
lods
add
xor
lods
outsl
mov
out
jae
mov
or
adc
mov
int
cmp
push
dec
lret
les
or
cmp
xor
aaa
jp
in
sbb
popf
xor
xlat
shrb
push
adc
das
mov
outsl
dec
mov
lahf
push
or
incb
loop
addb
xchg
ja
es
dec
daa
stc
cwtl
xor
mov
sub
sub
cmp
jns
sbb
sar
push
xchg
pop
cwtl
mov
pop
push
xchg
aad
loop
sbb
stos
sbb
mov
stos
sarl
test
mov
cmp
cmp
push
iret
sub
cmp
adc
jmp
sahf
push
inc
out
mov
lea
dec
cmp
and
jg
pop
mov
add
pop
sbb
xchg
xor
jnp
test
push
sub
jns
outsl
and
mov
mov
cli
ss
adc
push
push
sub
push
pop
sub
jnp
pop
push
fldt
out
dec
movsl
mov
cmpsl
popf
js
mov
jle
rcr
adc
jne
dec
rcrl
push
jge
cmp
test
aam
or
and
sti
es
xchg
or
xor
add
out
aaa
rol
dec
xlat
push
inc
into
or
lods
mov
push
and
cmp
fnstenv
idiv
jae
mov
push
mov
cmpsb
lods
ss
push
or
fwait
sub
jno
testl
dec
cmp
adc
ljmp
push
push
pop
int
das
cmp
mov
popf
hlt
xor
and
adc
add
or
cmp
pop
mov
mov
pop
and
adc
pop
lea
dec
mov
mov
rcrb
in
mov
cmp
fdivrs
xchg
dec
xor
stos
inc
push
lock
mov
cmp
mov
add
ljmp
dec
push
push
and
mov
or
stos
add
daa
mov
cs
dec
mov
jp
out
fldt
add
inc
test
ds
push
push
roll
sbbb
jne
pop
inc
stc
mov
jle
add
xor
add
stos
mov
pusha
data16
mov
jge
jae
stos
cltd
xchg
cwtl
add
mov
add
adc
cmp
jns
das
pop
xchg
icebp
sub
cmp
pop
adc
sahf
in
add
outsb
mov
xor
fstpt
ljmp
movsb
mov
pop
outsb
jno
dec
mov
jo
push
xor
adc
imul
inc
mov
inc
or
mov
xor
in
cld
mov
jecxz
xor
xlat
addr16
push
sub
push
insl
mov
fbstp
negl
subl
xor
push
xlat
cwtl
ret
xchg
xor
sub
push
pop
or
adc
test
mov
and
subb
lahf
mov
mov
pop
xlat
test
mov
in
dec
pop
sbb
in
push
sbb
mov
push
jns
or
repnz
pop
decl
test
pop
shlb
cmp
clc
fwait
dec
and
das
mulb
imul
sub
icebp
add
push
lds
std
mov
mov
push
aas
pop
movsl
shr
repz
jns
imul
fs
js
les
imul
jmp
roll
fwait
mov
sar
jno
xor
sub
pop
fwait
cmpsb
ja,pn
xor
in
mov
movsl
push
les
adc
or
mov
fbstp
adc
and
enter
or
sub
popf
arpl
dec
repz
std
jbe
inc
imul
dec
pop
cmpl
outsl
cmpsl
adc
mov
cmpsb
scas
adc
dec
loop
push
xorl
movsb
cld
mov
push
or
sub
xor
mov
ja
inc
jmp
jl
pop
pop
loopne
popf
adc
push
inc
pop
sub
aaa
dec
push
mov
cmp
or
ret
leave
call
adc
cmc
sub
movsl
mov
aam
mov
dec
adc
dec
sbb
pop
xor
adc
lea
aad
inc
mov
push
mov
popa
fwait
rcrb
imul
inc
or
xor
mov
mov
loop
fisttps
test
add
stc
jecxz
and
lods
jecxz
scas
sahf
xorb
and
ss
inc
mov
mov
arpl
lret
imul
fs
mov
sub
lret
in
test
inc
jns
xchg
imul
xor
rclb
fnstcw
scas
adc
jl
in
dec
stos
sub
push
testl
pusha
push
mov
out
mov
sub
mov
mov
das
and
and
inc
in
ljmp
xchg
shll
in
dec
sbbb
jns
fsubrl
inc
adc
fcompl
jle
fsubrs
pop
and
fistpll
fwait
mov
stos
das
adc
and
nop
mov
insb
test
fiadds
add
cwtl
adc
das
and
fidivrs
fwait
inc
xchg
imul
pop
push
rolb
mov
cltd
push
in
mov
shlb
lock
pop
jno
and
loopne
mov
mov
cmp
mov
in
pop
test
xor
stos
pop
repz
mov
sti
test
cwtl
pop
mov
imul
shll
xor
or
test
mov
jb
dec
icebp
jmp
pop
xchg
mov
pushf
pusha
gs
test
repnz
and
imul
jnp
outsb
int
jno
xor
mov
fistl
lds
jnp
cmp
inc
dec
enter
jo
jb
add
testb
icebp
scas
jmp
push
add
dec
jo
ret
test
xor
cmp
dec
inc
into
fsubp
and
stos
cltd
sub
jecxz
or
sbb
jns
jae
xor
xor
jae
cmp
sbb
dec
or
mov
adc
shll
adc
das
xor
ljmp
mov
jo
sti
imul
and
mov
adc
inc
xor
and
pusha
dec
adc
test
sbbb
ljmp
popf
popf
pop
in
push
aam
inc
mov
xorl
imul
je
das
jle
ret
fidivs
aaa
xchg
lcall
inc
push
or
pop
push
enter
pop
xlat
mov
xchg
out
pop
lcall
bound
jae
mov
jae
iret
mov
pop
fstpt
jno
in
cmp
or
addb
push
fstps
outsb
pop
lahf
out
push
cwtl
lcall
add
imul
inc
and
jg
les
push
shlb
push
or
pop
pop
cmc
lret
out
out
ret
pop
xlat
ss
sarl
int3
fsqrt
arpl
out
cli
inc
dec
push
pop
or
scas
inc
pop
lret
aad
xor
xchg
mov
pop
lret
daa
xor
and
push
arpl
test
xchg
insb
and
rep
rolb
lea
sub
jecxz
ret
mov
fsubrl
mov
xchg
mov
xlat
cmc
pop
cwtl
outsb
in
insl
test
test
mov
pop
js
mov
mov
aad
hlt
lcall
movsb
or
fs
pop
ljmp
mov
fsubrs
inc
lds
inc
jne
xchg
or
xor
sbb
fdivs
sbb
jns
jge
pusha
outsb
lea
pop
ja
stos
pop
sub
mov
sti
jle
pusha
aad
ljmp
out
xchg
sbb
jg
shl
test
hlt
adc
push
addl
lcall
sub
mov
jne
loopne
add
andl
in
jge
sub
outsb
notl
dec
and
aaa
or
mov
bound
sub
push
jmp
testl
test
mov
out
mov
sbb
test
sbb
adc
mov
push
outsl
sahf
sahf
ljmp
adc
xchg
lea
test
call
pop
dec
cld
sbb
jmp
mov
and
andb
leave
int3
test
xchg
orb
xchg
xor
mov
sub
push
enter
nop
ss
push
pop
lods
xchg
and
jle
push
mov
add
or
lcall
mov
push
das
pop
arpl
ljmp
leave
mov
aad
or
inc
or
push
ret
rorl
repz
testl
adc
mov
mov
xor
jae
lcall
out
rclb
lods
movsb
inc
inc
or
dec
pop
xor
je
xlat
adcl
jnp
inc
rolb
mov
icebp
aam
mov
scas
cltd
sbbl
sub
pop
jle
jg
cmc
es
movsb
in
sbb
popa
lret
xorb
mov
jns
jbe
dec
xor
es
idivl
in
fcmovnu
mov
lcall
ret
stos
outsb
sbb
dec
int
arpl
fldt
aaa
pusha
sub
mov
xchg
mov
push
faddl
mov
sbb
dec
push
lods
or
lahf
ljmp
int3
sbb
dec
cmp
mov
popl
jo
mov
loope
mov
aaa
mov
mov
pop
xchg
push
stos
popf
lret
sarb
jns
ds
push
adc
add
pop
rcl
jmp
test
das
aam
lea
gs
adc
or
addr16
xchg
sub
call
pop
jo
adc
into
bound
ret
mov
insl
cwtl
xor
je
test
add
or
pop
adcb
add
in
dec
push
jo
jecxz
movsl
dec
ret
pop
cmp
push
daa
adc
push
subl
ret
iret
adc
jns
clc
fcmove
test
dec
les
frstor
dec
and
repnz
xchg
mov
cmp
es
sbb
movsl
scas
dec
mov
mov
add
ja
fsubl
sbb
xor
xchg
dec
or
test
stos
not
cli
stos
push
stos
stc
hlt
cmp
aaa
mov
leave
adc
call
notb
xchg
jae
in
arpl
fldcw
lds
inc
lea
inc
pushf
sbb
push
ja
xchg
cmpsl
xchg
aaa
leave
fiaddl
push
int
or
adc
ds
mov
sbb
sarb
fistl
pop
mov
ljmp
and
rolb
rcll
sbb
mov
arpl
mov
arpl
dec
pop
sub
pop
cmp
push
bound
pop
enter
push
jecxz
rcr
int
sub
xchg
movsl
out
call
fsubs
les
ljmp
shll
add
push
addl
repz
pop
jns
loop
sub
jae
pop
xorb
popf
dec
add
jbe
dec
or
loope
xor
cwtl
scas
mov
fwait
pushf
aas
mov
sti
shll
into
lahf
cltd
xchg
dec
jns
cld
push
enter
daa
mov
xchg
lock
fwait
jae
pop
and
sbb
and
push
je
insl
jg
xorl
das
adc
ds
call
stc
shrb
das
rclw
decb
dec
and
mov
or
push
dec
xchg
jmp
sub
push
jg
inc
cmpsl
sub
mov
mov
ja
adc
and
les
or
mov
push
ds
out
sbb
call
mov
adc
or
add
mov
sub
jb
xor
sti
pushf
pusha
add
fisttps
mov
int3
inc
iret
mov
inc
mov
test
jecxz
jl
ret
push
scas
pop
sahf
mov
lods
int
cs
jnp
xchg
sbb
and
mov
out
cmpsb
scas
call
xorl
inc
subl
pop
mov
lret
cmpsl
into
addb
ljmp
cmc
sub
sbb
mulb
mov
bound
movsb
sbb
xchg
mov
cmpsb
in
xchg
xor
psubsb
cli
mov
cmpsb
add
call
adc
jne
iret
mov
test
cmp
das
pop
jno
push
in
stos
xlat
cmp
data16
pusha
in
sub
xchg
and
aad
pop
stc
add
lret
sbb
loope
and
xchg
sbb
push
cmpsb
cltd
sti
xchg
jmp
jl
fisubl
mov
aam
jb
mov
mov
mov
fcmovb
dec
jecxz
imul
mov
mov
ja
into
push
test
cmp
jecxz
aaa
jb
adc
add
pop
xor
decb
cli
sti
arpl
push
sub
or
jmp
cwtl
inc
mov
roll
sbb
cmp
and
adc
div
not
iret
aad
mov
daa
stc
mov
inc
testl
push
fwait
pop
mov
loop
sbb
movsb
cmp
sbb
into
pop
xor
out
lcall
inc
xor
push
mov
xorb
mov
aad
push
inc
int3
mov
xchg
stos
cmp
xor
mov
fwait
sahf
mov
push
adcl
lret
rorb
push
xchg
lret
or
cwtl
and
mov
or
loopne
outsl
ds
loopne
pop
pop
hlt
int3
fmull
push
cld
cmp
jns
add
adc
mov
pop
cmp
mov
sbb
mov
adc
push
xor
dec
flds
or
push
mov
fwait
push
mov
add
pushf
xchg
mov
inc
stc
or
daa
out
fs
jb
dec
pop
push
daa
or
repz
or
sbb
stc
pop
fst
ret
je
aaa
sub
mov
aam
xor
enter
jle
xchg
subl
std
enter
cmp
lods
leave
xor
mov
sbb
clc
pop
push
dec
movsb
fcmovb
cmp
pop
shrb
inc
push
jg
xchg
gs
or
arpl
push
aaa
das
fld
and
scas
pushf
jb
std
jle
push
mov
push
aam
sbb
add
bound
push
mov
popa
push
cmc
cs
xchg
decl
rcll
mul
jne
mov
dec
xorl
jg
stos
movsb
cmp
call
jecxz
xor
inc
and
dec
pushf
test
ljmp
sbb
in
das
mov
mov
loop
rcll
jb
cmp
lret
ret
sub
dec
ja
daa
incl
outsl
bound
adc
sti
lea
lds
rolb
and
icebp
js
inc
popf
and
push
dec
cmpsb
add
mov
andb
and
pop
sub
inc
pushl
ret
adc
pop
push
add
arpl
add
push
inc
cmp
pushf
mov
dec
add
jecxz
or
mov
xlat
daa
mov
and
cmp
test
insb
daa
mov
orl
orb
pop
insb
lea
outsb
mov
popa
push
and
aas
notl
sub
fcos
pop
push
xchg
rolb
pop
aad
jns
sub
push
mov
inc
out
push
fsubp
int
cmpsl
sbb
fiaddl
cmc
xchg
and
jno
es
jnp
aad
xchg
mov
stos
lods
stc
outsl
ds
xlat
cld
out
fdiv
lahf
xchg
hlt
arpl
imul
push
cwtl
arpl
adc
sbb
out
inc
ljmp
mov
insl
mov
sub
leave
imul
outsl
insb
sbb
aad
sub
imul
push
push
xor
sbb
pop
loop
in
push
aam
xor
add
push
roll
sub
push
jnp
push
inc
cmp
out
cmc
leave
gs
push
sahf
fsts
hlt
mov
push
test
fidivrs
jge
sahf
sbb
hlt
loopne
ret
rorl
loope
cmp
clc
cmp
xor
popf
pushf
push
xor
add
jge
push
fwait
nop
sbb
jmp
js
movsb
or
inc
pop
mov
xor
inc
stos
incb
das
fsubrl
xchg
sub
xorl
add
lahf
mov
mov
adc
outsb
loope
loope
cmc
fsts
repnz
inc
loopne
clc
out
fstpt
aaa
movsb
and
lcall
int
push
jl
aam
mov
pop
rorb
mov
sahf
mov
outsl
mov
mov
lcall
shrb
daa
rclb
or
fs
ret
sbb
mov
sub
push
pop
aaa
jge
cld
push
xor
dec
sub
repz
gs
jge
add
jno
je
pop
cmc
je
test
stc
pushf
insb
add
inc
xor
loop
adc
fsts
rorb
xor
mov
popa
jo
jbe
mov
sbb
dec
xor
fs
popf
stos
sub
sbb
lret
mov
sub
xor
cmc
mov
cmp
shlb
nop
cs
ret
inc
stos
lahf
push
mov
iret
int3
dec
ljmp
push
fucomip
fisttps
mov
adc
in
inc
jmp
mov
sbb
mulb
movl
mov
push
pop
movlps
es
sub
imul
shlb
fwait
fs
test
lds
fcompl
or
add
enter
iret
bts
lret
adc
ss
mov
push
gs
xor
inc
cmp
lods
fstpl
and
movsl
cmpsb
jmp
into
fs
jne
add
js
leave
cmpsb
pop
mov
or
jno
repz
movsl
pop
push
mov
mov
out
push
loopne
pop
aas
pusha
jne
roll
scas
or
mov
loopne
add
scas
cmp
pop
into
sub
sub
dec
jbe
dec
cli
xor
ljmp
mov
mov
in
adc
inc
add
sbb
or
jne
xchg
dec
daa
cmp
jnp
popf
sub
arpl
bound
sub
adc
xor
popa
or
inc
adc
xchg
inc
pop
jle
stos
jae
ja
sbb
push
fsubrl
lods
sbb
lret
cs
bound
lea
lret
shl
dec
mov
cmpsl
add
pop
inc
incl
hlt
or
addr16
pushf
out
jns
bound
in
fwait
jns
subb
push
push
sbb
cmpsl
mov
sub
test
or
ret
mov
into
enter
and
lret
mov
int
jns
popf
push
stos
xchg
shl
dec
and
das
and
dec
add
lret
pushf
push
sbb
lods
adc
aad
stos
das
cli
sti
idiv
cmp
sbb
inc
mov
pushf
and
idivl
pop
ss
mov
into
test
push
das
aaa
lret
sub
add
and
adc
into
fwait
dec
ret
jne
cmp
and
pop
sbb
fcomps
out
popa
add
loopne
jg
int3
add
xor
out
sub
jmp
fwait
and
sub
jae
adcl
es
jle
fiadds
out
add
fwait
ljmp
cmp
out
imulb
mov
jg
mov
lods
cltd
rcrl
mov
mov
sbb
pop
dec
fcompl
repnz
pop
addr16
push
inc
add
pushf
inc
sub
scas
push
stos
add
dec
iret
fucomi
lahf
out
fsubs
push
int3
mov
mov
push
shll
dec
fmuls
mov
ss
mov
adc
outsl
and
adc
cmp
add
stc
ja
pop
and
mov
std
cmp
fsubrp
sbb
lret
xchg
push
sub
pop
testb
pushl
lds
jg
cld
cltd
xchg
dec
jle
jl
leave
mov
nop
sub
lods
and
fs
jle
out
imul
jno
mov
sbb
fiaddl
cmp
scas
imul
cmp
test
fwait
mov
push
mov
pop
cs
adc
fsubs
cmp
cli
in
fs
jbe
xchg
mov
dec
andl
add
adcb
dec
imul
cmp
lret
outsl
mov
pop
lcall
ljmp
je
add
adc
mov
jmp
dec
test
jo
jns
inc
or
inc
or
std
cld
cli
or
or
xor
sub
sbb
xchg
lret
mov
adc
in
lods
cmp
loop
mov
ds
nop
sbb
aad
dec
shl
data16
orl
stos
shlb
dec
cmp
pop
lret
sub
imulb
or
xchg
sahf
loopne
dec
inc
leave
mov
je
std
loope
pop
mov
pop
fadds
mov
mov
lret
or
stc
shll
xor
add
sbb
xlat
das
int3
pop
fmulp
sbb
xor
ret
jae
lcall
xor
jle
add
imul
push
push
xchg
sub
jo
inc
fisttpll
fdivrl
xchg
xor
rorl
cmp
mov
push
dec
and
arpl
pop
dec
out
cmpsl
xchg
xchg
jnp
mov
or
cmp
mov
testl
insl
stos
dec
lret
loopne
pusha
pop
sub
loope
dec
xor
lds
aas
iret
or
and
xchg
add
dec
mov
xchg
mov
sub
xchg
scas
enter
scas
cmc
cwtl
pop
popa
pop
pop
cmp
outsb
enter
mov
out
or
stos
and
xchg
mov
lods
pop
bound
sahf
cmp
and
cwtl
shrb
adc
or
mov
fildl
jmp
dec
ljmp
xor
inc
scas
inc
icebp
add
pop
test
out
loope
cmp
pop
imul
hlt
lcall
sub
cli
push
jge
sbbb
sub
mov
pop
sbb
jl
mov
insl
inc
mov
pusha
inc
cli
mov
mov
mov
xchg
and
adc
sbb
notl
and
imul
pop
push
add
loopne
mov
dec
inc
push
fwait
cli
jmp
lds
inc
mov
xchg
inc
mov
fildll
int3
push
imul
or
mov
loop
fstpl
pop
jb
out
mov
inc
sub
or
enter
icebp
pop
mov
mov
adc
aaa
and
mov
ja
lea
lods
mov
dec
lods
mov
aad
movsl
sarb
into
rcll
pop
dec
jmp
push
das
push
push
adc
int3
pop
divl
xor
and
je
testl
mov
xor
fstl
jg
mov
push
shr
hlt
jnp
sbb
js
stos
xchg
jp
fimull
push
sarl
mov
push
xchg
xor
sub
mov
in
add
sbb
ret
mov
stos
xchg
cmc
push
jns
jl
inc
xchg
mov
mov
push
and
jmp
das
lcall
cld
sub
ja
pop
cmp
pop
lock
aaa
fidivs
push
mov
orb
stos
sbb
dec
cmp
mov
les
xchg
out
enter
out
lahf
fisubs
pop
add
sub
loope
sahf
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
mov
xchg
jno
jnp
out
push
lods
popf
sahf
sarb
push
push
inc
and
or
or
popa
fiadds
fdivrs
jl
xchg
push
clc
jno
pop
lret
ss
addl
fsts
rorb
cmp
sahf
lock
dec
jae
jmp
add
dec
inc
fidivrl
push
lds
fstpt
lock
stos
mov
adcl
cs
cmp
push
jne
sbb
mov
mov
push
push
and
inc
add
xchg
ds
mov
jbe
in
mov
imul
aam
sub
movsl
cwtl
fistps
push
fdivrs
les
mov
adc
push
out
divb
sbb
cwtl
mov
fisubl
mov
xor
lcall
aaa
lds
push
jmp
pop
lret
add
andl
mov
enter
aam
dec
dec
lret
push
jg
lret
jne
xor
fidivs
loop
pop
and
testl
pop
arpl
add
cmp
insl
inc
out
and
pop
out
gs
cmp
sahf
insl
fwait
bnd
push
out
scas
jnp
test
sub
mov
push
imul
xchg
movsb
jo
sahf
and
jae
xor
lahf
sub
mov
cmpsl
adc
and
add
lods
insl
pop
loop
xchg
movsl
into
mov
shrb
cmpsb
or
mov
dec
jge
dec
lock
jne
leave
int
aas
cmpsb
hlt
loopne
out
sbb
push
lea
insb
nop
cmp
lret
push
mov
rcrl
test
lret
hlt
or
dec
adc
inc
xor
adc
cmp
mov
ret
cmp
out
sbb
mov
sbb
push
fmul
pusha
iret
sub
iret
mov
cwtl
add
xor
sub
push
out
dec
mov
xchg
ljmp
sbb
loopne
cmpsb
sar
adc
xchg
out
and
jo
and
adc
loope
mov
jnp
sahf
cltd
xor
pop
lret
pop
mov
mov
popa
jae
nop
dec
and
push
test
cmpsb
sbb
dec
cmp
movsb
pop
push
aaa
in
xchg
cmpsl
out
pop
pop
mov
insb
pop
daa
das
cmpsl
pop
inc
jno
dec
popf
mov
ss
popa
mov
jecxz
clc
push
fwait
and
shll
cmp
cltd
hlt
sti
adc
inc
cmp
or
fisubrl
lods
stc
stos
dec
jge
pushf
outsl
inc
mov
loopne
xchg
cmp
pop
fdivr
and
push
fcoms
shlb
test
lods
iret
mov
rorl
cs
cmp
inc
push
scas
movsl
dec
xchg
inc
inc
pusha
dec
cmp
pop
stos
ljmp
jnp
push
xor
pushf
pop
in
out
imul
pushf
in
cmp
clc
jo
rcll
cltd
sbb
xor
aad
cmp
sti
cmpl
sbb
push
xor
mov
mov
mov
inc
mov
sub
pop
ss
out
dec
add
sahf
cld
xor
xchg
dec
jae
adc
jbe
inc
pop
in
out
cli
pop
mov
jns
idiv
daa
pop
testl
sub
test
xchg
rcl
jbe
arpl
push
inc
dec
imul
or
shl
xchg
add
jl
or
inc
ljmp
cmp
mov
rorl
sub
cmpsl
push
jge
jle
sbb
jne
dec
mov
cmpsl
fstpl
mov
jg
jno
or
rcrl
aad
arpl
or
mov
insl
fdivl
rclb
dec
pusha
test
mov
push
push
mov
insb
xchg
stos
mov
in
push
xor
mov
cmp
outsb
fdivrs
int3
cmpsl
push
inc
outsl
iret
inc
jl
ret
and
into
mov
outsb
addr16
imul
and
fcompl
lea
inc
xlat
cli
pusha
mov
jo
js
dec
pop
arpl
jb
out
xchg
notb
in
nop
jbe
pop
xor
out
jae
shrl
lcall
out
xor
fnstsw
lret
rolb
std
xchg
jg
dec
nop
out
std
int3
nop
das
mov
shrl
mov
add
inc
inc
cmp
push
xchg
xchg
nop
insl
inc
fsubl
aaa
ret
leave
push
lods
adc
fdiv
aad
cmc
fdivrs
push
cltd
jecxz
call
cmp
stc
popa
pop
sbb
in
add
jecxz
mov
insl
cmp
sub
push
sub
rorl
cld
aaa
sub
xchg
lds
cmp
iret
xchg
dec
stos
cmpb
push
fwait
nop
neg
mov
add
in
fbstp
push
scas
clc
in
testb
and
ja
gs
jge
add
jnp
push
jo
jo
call
add
sub
or
lret
leave
lods
inc
loope
add
jbe
mov
dec
or
shr
shl
jmp
dec
cmpsb
push
sub
mov
push
mov
add
imul
aad
cmp
cmp
scas
cmpl
arpl
xchg
pop
inc
jne
mov
cmp
lcall
jg
mov
bound
jnp
hlt
imul
push
cltd
sub
pop
add
xchg
cmc
test
or
mov
in
lret
cmpsb
jmp
insl
mov
and
sahf
pavgw
mov
sbb
jne
mov
popf
inc
cwtl
mov
jbe
loop
dec
repz
frstor
xchg
das
lret
in
jo
mov
mov
xchg
or
aam
shlb
mov
adc
icebp
outsb
ljmp
imul
sub
pop
dec
mov
push
inc
es
xor
xchg
mov
repnz
fwait
arpl
popa
bound
stos
jae
addl
push
inc
das
cmp
fisubs
mov
and
and
inc
xchg
gs
pop
jge
je
fwait
inc
popa
cli
inc
pop
sbb
das
testb
jl
lea
rolb
inc
sbb
pop
push
push
sbb
or
in
mov
enter
or
jo
xchg
mov
stos
sub
ret
movsl
push
out
popa
loope
xchg
inc
jmp
test
andb
outsb
div
mov
fstpt
xor
push
mov
xlat
jae
jg
push
movsl
cmp
popf
dec
lods
mov
mov
out
fdivr
subb
movsb
lods
jp
adc
adc
add
ja
dec
in
add
iret
push
inc
incb
mov
add
jnp
jns
stos
mov
icebp
cmp
cmp
gs
mov
leave
xor
inc
sbb
out
mov
imul
inc
dec
ljmp
cltd
or
dec
mov
pop
ljmp
mov
push
lods
jmp
mov
in
fstl
outsb
gs
or
xchg
out
jb
mov
sti
out
push
ljmp
add
pop
repz
mov
and
sbb
addr16
jge
in
in
push
xlat
mov
mov
add
inc
popa
repnz
pusha
cmc
xchg
cmp
adc
cltd
and
loopne
fnstcw
mov
sbb
push
stos
push
pusha
leave
mov
lds
adc
jg
out
inc
js
pop
xor
sub
xchg
in
mov
ret
mulb
ds
rcrb
mov
inc
mov
fsubl
mov
pop
xchg
xchg
lea
dec
stc
mov
mov
icebp
popa
add
test
stos
aam
cmp
add
es
es
je
mov
sub
or
mov
push
cmpsl
fwait
cmp
cmp
mov
hlt
leave
fdivl
pop
in
adc
sti
cltd
les
popa
mov
into
mov
jg
xlat
shl
fs
or
sarl
or
aam
popf
orb
cmp
rcrl
leave
imul
aaa
out
scas
sarl
outsb
lahf
xor
push
cmp
pop
pop
fldcw
test
dec
lods
popa
sbb
into
in
add
and
pop
adc
push
push
and
jl
nop
imul
imul
mov
push
cmp
enter
arpl
or
rcrb
mov
and
add
std
inc
shrb
hlt
pop
ds
shlb
stc
js
fildl
sti
popa
inc
xchg
mov
addr16
jne
mov
inc
outsb
push
adc
and
cs
inc
adc
sub
cmpsb
sbb
xchg
movsb
inc
ficompl
mov
push
addr16
pop
xorb
loope
out
bound
inc
ja
mov
movsl
adc
call
outsl
sbb
aaa
xchg
pop
inc
cmc
mov
cmpb
stos
into
aas
inc
rcrl
jecxz
inc
xchg
xchg
in
xchg
sbb
sti
out
pop
and
or
inc
cmpsl
push
pop
jmp
jmp
push
test
push
xor
dec
enter
mov
fwait
sub
mov
fsubs
sar
push
idivl
insb
add
add
aas
inc
movsl
mov
mov
insl
ds
stos
sub
scas
jne
mov
or
xor
in
cmp
out
in
in
std
pop
pop
xor
jecxz
push
sub
popa
aam
push
out
dec
decb
push
jp
xchg
sub
fcmovbe
and
sahf
cmp
mov
pop
notb
fnsetpm(287
push
mov
adc
xor
cmpsb
dec
pop
in
jae
mov
leave
stc
jns
cmpsb
nop
gs
fidivrl
std
inc
push
cmpsb
jne
cs
sub
push
push
lahf
test
adc
xchg
mov
mov
push
mov
mov
fwait
mov
lods
sbb
dec
ds
mov
rorb
test
sbb
and
push
inc
insb
loopne
xor
push
push
insb
in
adc
xor
dec
mov
ja
lods
dec
mov
bound
mov
ficomps
stc
test
cmp
js
inc
lds
jecxz
push
mov
stc
pop
xchg
fsts
dec
mov
mov
inc
adc
test
sbb
cmp
mov
dec
cld
xchg
jb
pop
fbstp
cli
dec
nop
shl
cmp
cmp
inc
popf
and
cs
popa
and
cmp
dec
in
cmp
jne
jbe
pop
mov
push
in
rcrl
popl
push
mov
in
push
xor
test
sub
aas
jl
jnp
daa
adcl
movl
int3
push
xchg
fs
push
ss
mov
or
jge
fistl
add
in
in
adc
sub
adc
dec
ds
fidivrl
repnz
test
inc
outsb
sbb
pop
cvtps2pd
fisttpl
pop
adc
stos
adc
ficomps
add
popa
cld
sub
insl
jecxz
lahf
sub
lret
jnp
pop
and
or
loopne
call
int
mov
lahf
lret
out
push
notl
fisubrl
push
stos
sub
ja
out
xchg
incb
xchg
and
lcall
cmp
mov
add
sub
fidivs
das
shlb
xchg
jb
ffree
sub
mov
jg
aad
stos
stos
loopne
scas
inc
and
or
push
repz
out
mov
mov
cmp
xchg
mov
adc
mov
pop
mov
or
pop
push
jle
fldt
cs
test
movsb
mov
jmp
push
cwtl
xor
out
xlat
inc
mov
aas
sub
js
inc
mov
imul
mov
add
rol
je
fsubrp
pop
leave
fldt
and
int3
push
cmp
or
pop
adc
xlat
rcrl
cltd
out
inc
add
loope
lret
sub
dec
inc
into
mov
xchg
pop
lahf
stos
jno,pt
sbbb
imul
loopne
loopne
or
call
xor
out
mov
ss
cmp
lcall
push
mov
leave
dec
stos
and
add
in
fisttpll
iret
ljmp
mov
sub
out
sti
ret
in
std
mov
pusha
inc
test
stos
xor
mov
nop
sarb
mull
xchg
cs
cmpsb
inc
pop
push
jbe
lds
lods
adc
pop
or
outsl
outsb
dec
xor
lock
shlb
mov
dec
pop
lea
outsl
ds
push
lahf
or
lds
push
aad
popf
xor
inc
push
push
jnp
cld
pop
fs
arpl
mov
stos
xor
and
or
fldl
loopne
sbb
jo
jae
cmp
pop
jo
add
add
add
add
add
add
inc
xchg
add
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
or
jne
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
pop
outsb
add
add
