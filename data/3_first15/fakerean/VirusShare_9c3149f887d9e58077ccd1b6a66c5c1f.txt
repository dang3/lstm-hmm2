call
pop
mov
cmp
je
mov
push
call
lea
call
cmp
je
mov
test
jne
cmpl
jne
lea
call
lea
call
pop
pop
xor
pop
mov
pop
ret
cmpl
je
andl
decl
jmp
movl
cmpl
je
decl
pushl
lea
call
mov
jmp
push
mov
sub
push
mov
push
push
mov
call
test
mov
je
mov
sub
mov
mov
mov
sub
pop
pop
mov
mov
pop
leave
ret
testl
je
mov
push
pushl
pushl
call
xor
ret
movl
jmp
push
mov
and
sub
push
push
push
lea
call
mov
lea
mov
mov
xor
mov
add
mov
push
mov
lea
push
mov
call
mov
test
jne
mov
cmp
jge
mov
xor
mov
and
inc
shl
mov
shr
shl
not
and
and
cmpl
je
lea
call
lea
push
mov
call
cmp
je
xor
inc
push
push
push
pushl
call
mov
andl
test
jne
mov
andl
test
jne
push
push
lea
push
call
lea
push
call
pop
pop
pop
mov
pop
ret
push
mov
push
mov
push
mov
call
test
je
push
mov
mov
mov
call
test
mov
je
mov
push
call
mov
test
je
mov
push
call
call
pushl
mov
push
call
mov
push
mov
call
mov
test
mov
je
mov
push
call
lea
call
mov
pop
leave
ret
xor
jmp
push
mov
push
push
mov
cmpl
mov
mov
jne
call
mov
push
pushl
lea
push
mov
call
mov
test
mov
je
cmpl
push
push
jne
mov
mov
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
push
andl
push
lea
call
mov
mov
lea
push
push
call
test
js
mov
test
je
xor
cmp
jne
inc
mov
push
push
push
push
call
lea
call
xor
leave
ret
push
mov
sub
push
mov
test
je
mov
push
xor
mov
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
mov
push
call
lea
call
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
mov
xor
cmp
mov
je
lea
call
mov
mov
call
push
push
push
push
push
pushl
mov
call
mov
lea
call
pop
mov
pop
leave
ret
push
andl
test
mov
je
mov
push
call
mov
test
je
mov
push
call
cmpl
jne
mov
pop
ret
push
mov
and
sub
cmpl
push
push
jne
pop
pop
mov
pop
ret
andl
lea
add
push
push
mov
movl
call
mov
mov
test
jbe
push
pop
mov
mov
mov
push
call
test
je
mov
mov
test
je
cmpl
je
mov
test
jne
mov
test
je
call
add
decl
jne
lea
call
lea
call
lea
call
jmp
mov
push
push
call
jmp
push
mov
and
push
push
mov
push
call
test
je
mov
mov
test
je
cmpl
je
mov
test
jne
mov
test
jne
pop
mov
pop
ret
mov
push
push
call
jmp
mov
call
cmpl
jne
xor
inc
cmp
jne
cmpb
jne
ret
xor
ret
push
mov
push
mov
push
push
mov
call
test
jne
cmp
jne
mov
call
mov
call
test
je
mov
call
cmpb
jne
xor
jmp
mov
push
pop
call
test
je
pushl
mov
call
jmp
xor
mov
mov
call
pop
pop
pop
pop
ret
mov
and
or
jne
xor
ret
test
push
je
mov
mov
test
je
mov
test
je
mov
mov
cmp
jne
mov
test
je
mov
push
mov
call
test
mov
je
mov
mov
and
xor
or
mov
pop
mov
je
or
ret
andl
ret
xor
jmp
mov
jmp
push
mov
lea
movl
call
lea
call
mov
call
testb
jne
mov
pop
ret
push
mov
push
push
push
mov
mov
call
test
jne
andl
lea
push
lea
push
pushl
mov
push
pushl
call
add
mov
xor
mov
test
jne
pushl
mov
pushl
pushl
pushl
push
pushl
pushl
call
add
test
pop
jne
xor
inc
leave
ret
push
mov
push
mov
mov
cmp
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
push
call
xor
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
shl
test
lea
jbe
mov
mov
test
je
andl
andl
add
dec
jne
mov
add
pop
ret
xor
pop
ret
push
mov
push
andl
push
push
lea
call
mov
mov
mov
lea
push
push
call
test
js
cmpl
je
pushl
add
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
sub
push
push
push
lea
push
pushl
xor
inc
lea
movl
movl
mov
call
testb
mov
mov
jne
testb
jne
test
je
mov
mov
push
call
mov
mov
andl
push
push
add
push
lea
movl
movl
mov
movl
mov
call
mov
push
lea
push
push
call
testb
mov
jne
testb
jne
testb
jne
testb
jne
mov
test
jne
mov
mov
lea
push
push
call
test
jne
cmpl
je
mov
mov
mov
push
push
push
call
test
jne
mov
mov
lea
push
push
push
call
test
jne
cmpl
jne
mov
mov
lea
push
push
push
call
test
jne
mov
mov
lea
push
push
push
call
test
jne
cmpl
jne
mov
andl
mov
lea
push
lea
push
push
push
call
test
jne
pushl
add
pushl
call
mov
mov
mov
add
push
push
push
call
test
jne
mov
test
je
mov
push
call
lea
call
xor
lea
call
pop
mov
pop
pop
leave
ret
lea
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
push
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
fldl
mov
fstpl
fldl
mov
mov
fstpl
mov
mov
mov
add
mov
mov
add
mov
fildl
mov
fildl
sub
fxch
fstl
lea
fxch
mov
fstl
fxch
fstpl
fstpl
call
lea
call
lea
call
test
jne
mov
test
je
lea
mov
mov
movb
mov
rep
lea
push
lea
push
mov
call
mov
mov
mov
add
mov
add
mov
fildl
sub
mov
fildl
lea
fxch
fstl
fxch
fstl
fxch
fstpl
fstpl
call
lea
push
lea
push
lea
call
fldl
mov
fstpl
fldl
mov
fstpl
fldl
fstpl
fldl
fstpl
mov
test
je
mov
fldl
mov
fstpl
fldl
mov
mov
fstpl
mov
mov
mov
lea
mov
call
mov
add
mov
add
mov
fildl
mov
fildl
sub
fxch
fstl
lea
fxch
fstl
fxch
fstpl
fstpl
call
lea
lea
push
push
call
xor
mov
mov
mov
mov
lea
push
lea
push
call
add
push
lea
mov
call
lea
call
test
jne
mov
mov
sub
sub
mov
push
call
add
test
je
fldl
mov
call
fldl
mov
call
push
lea
push
mov
mov
call
mov
test
je
mov
call
mov
test
mov
jne
mov
test
je
cmpb
je
mov
push
call
add
test
jne
fldl
mov
mov
fchs
fldl
sub
fchs
fstpl
fstpl
push
call
add
push
call
add
test
je
mov
push
mov
call
test
je
addl
mov
test
mov
jne
mov
pop
pop
pop
mov
pop
ret
xor
jmp
push
mov
lea
mov
or
lock
dec
je
pop
ret
mov
movl
call
push
call
pop
xor
jmp
push
mov
sub
push
push
xor
push
lea
movl
mov
call
mov
lea
push
push
call
test
mov
js
mov
mov
lea
push
lea
lea
mov
mov
mov
movl
mov
mov
call
test
jne
push
lea
call
lea
push
call
test
pop
mov
jne
mov
pushl
mov
call
mov
mov
push
push
pushl
pushl
pushl
push
pushl
call
test
mov
jne
mov
pushl
mov
push
call
mov
mov
mov
cmp
mov
je
mov
push
call
mov
lea
call
lea
call
lea
call
mov
pop
pop
leave
ret
push
mov
push
push
push
lea
call
mov
test
mov
je
pushl
andl
mov
lea
call
testb
mov
je
pushl
mov
push
pushl
push
call
lea
call
lea
call
pop
leave
ret
push
mov
push
mov
cmpl
jne
cmp
mov
jl
cmp
jg
pushl
lea
push
call
mov
test
pop
pop
mov
je
pop
pop
ret
call
jmp
andl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
testb
push
jne
movzwl
movzwl
push
add
lea
lea
push
push
call
mov
add
test
je
mov
movl
mov
push
push
lea
push
call
add
movw
mov
mov
pop
pop
pop
pop
ret
mov
sub
je
push
call
mov
add
mov
pop
pop
ret
push
mov
and
push
push
push
push
mov
mov
and
or
jne
xor
push
mov
call
test
jne
mov
push
mov
call
inc
test
jne
pop
pop
xor
pop
mov
pop
ret
mov
pushl
pushl
pushl
push
call
mov
add
test
je
jmp
mov
mov
call
cmp
je
mov
call
mov
mov
mov
push
push
call
mov
push
call
mov
pop
xor
test
setne
push
push
push
pushl
push
call
jmp
push
push
mov
mov
test
push
push
jne
mov
test
jne
pop
pop
pop
pop
ret
pushl
call
mov
lea
movsl
movsl
movsl
jmp
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
mov
xor
testb
mov
push
mov
movl
mov
mov
jne
lea
push
call
mov
mov
mov
lea
mov
mov
lea
mov
mov
test
je
cmp
je
add
jmp
cmp
mov
je
lea
mov
test
je
mov
mov
mov
cmp
je
mov
add
test
jne
add
cmp
jne
mov
mov
mov
sub
cmp
movl
movl
movl
jb
movl
cmp
je
sub
push
push
push
call
add
test
je
push
push
push
call
add
test
je
mov
cmpl
jne
movl
testb
jne
cmpl
jne
push
mov
mov
call
mov
or
mov
call
test
je
mov
add
cmp
je
mov
mov
sub
cmp
jbe
add
cmp
jne
mov
cmpl
jne
cmpl
jne
mov
mov
mov
cmpl
jne
cmpl
jne
mov
cmp
jne
mov
add
mov
mov
mov
mov
test
je
lea
push
call
add
test
jne
push
call
add
pop
pop
pop
pop
add
ret
lea
push
mov
lea
mov
mov
movl
mov
mov
movl
call
test
je
jmp
mov
test
jne
test
je
jmp
sub
push
add
push
push
call
add
test
je
sub
cmp
mov
je
lea
nop
push
mov
lea
call
mov
mov
lea
push
mov
push
lea
call
push
push
push
mov
call
add
test
jne
mov
mov
add
add
mov
mov
movl
mov
mov
lea
cmp
jb
cmpl
je
mov
mov
push
push
call
mov
mov
add
cmp
je
cmp
je
push
mov
mov
mov
call
add
mov
mov
mov
jmp
mov
mov
movl
mov
sub
push
call
cmpl
je
mov
mov
mov
mov
add
mov
lea
mov
mov
jmp
mov
cmp
push
push
je
cmp
je
pop
xor
pop
ret
mov
call
cmpb
jne
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
test
movl
jne
mov
test
je
mov
mov
push
push
push
lea
push
push
call
mov
cmp
jne
mov
test
pop
je
mov
mov
push
call
push
call
add
lea
call
mov
test
je
addl
cmpl
je
mov
test
mov
jne
test
jne
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
add
test
je
pop
pop
pop
ret
movl
mov
mov
push
call
jmp
push
call
add
pop
pop
pop
ret
push
mov
push
push
push
mov
add
cmp
jg
mov
mov
add
push
mov
lea
mov
push
mov
lea
push
call
add
mov
pop
leave
ret
push
mov
mov
test
mov
push
je
lea
push
call
test
pop
jne
push
call
pop
testb
movl
je
push
call
pop
pop
mov
pop
ret
test
je
jmp
mov
movw
xor
ret
push
mov
cmpl
movl
movl
movl
jne
push
lea
call
mov
test
movl
jne
movl
lea
movl
movl
movl
mov
test
je
mov
call
push
lea
movl
call
push
lea
movl
call
mov
test
pop
je
mov
push
call
ret
mov
mov
mov
cmp
jae
imul
lea
mov
test
mov
mov
je
mov
push
call
xor
ret
push
call
test
je
xor
inc
pop
ret
push
mov
push
mov
push
push
xor
inc
mov
test
jl
cmp
jge
mov
imul
add
mov
cmp
je
mov
add
add
neg
negl
jmp
add
cmpl
jg
test
jl
mov
imul
add
mov
cmp
jne
pop
pop
leave
ret
dec
sub
test
jge
xor
jmp
push
mov
sub
push
push
xor
cmpl
mov
mov
mov
jb
call
mov
cmp
je
mov
push
call
mov
cmp
mov
jne
mov
cmp
je
push
lea
call
mov
lea
push
pushl
pushl
push
call
test
js
mov
cmp
je
mov
mov
lea
push
pushl
push
call
test
js
mov
cmp
je
mov
push
call
mov
xor
inc
lea
call
lea
call
lea
call
mov
pop
pop
leave
ret
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
push
mov
xor
mov
movl
mov
call
push
mov
pop
push
push
push
push
push
push
push
mov
push
lea
push
mov
mov
mov
mov
mov
call
cmp
je
pushl
push
call
cmp
pop
pop
je
mov
mov
push
call
mov
lea
call
mov
pop
mov
pop
pop
xor
call
mov
pop
ret
push
lea
sub
mov
xor
mov
test
push
mov
je
lea
push
xor
mov
mov
mov
push
mov
lea
mov
mov
movl
movl
mov
mov
mov
call
cmpb
je
mov
mov
lea
push
call
lea
mov
mov
mov
mov
cmp
mov
je
lea
mov
lea
call
mov
mov
call
xor
push
push
mov
call
lea
push
xor
inc
push
push
lea
push
mov
mov
movl
movl
mov
push
mov
mov
pushl
call
add
testb
jne
testb
jne
xor
cmp
je
mov
cmp
jne
mov
call
pushl
mov
mov
call
mov
mov
call
mov
cmp
jne
push
push
push
lea
push
mov
movl
movl
mov
push
mov
mov
pushl
call
add
testb
jne
testb
jne
pushl
mov
pushl
call
cmpl
je
mov
mov
add
call
lea
call
lea
call
lea
call
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
mov
pop
mov
xor
pop
call
add
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
test
jne
test
mov
je
mov
test
jne
test
mov
je
mov
mov
mov
xor
cmp
jne
cmp
mov
jne
mov
mov
mov
mov
pop
mov
mov
mov
pop
ret
mov
mov
mov
pop
mov
mov
mov
pop
ret
mov
test
je
mov
mov
mov
push
call
mov
mov
test
je
jmp
mov
mov
mov
jmp
cmp
jne
movl
jmp
push
mov
mov
mov
call
pushl
mov
pushl
shr
push
push
mov
call
pop
ret
push
mov
push
push
push
push
mov
test
jne
pushl
mov
pushl
mov
mov
call
test
js
cmp
je
mov
mov
mov
mov
mov
push
push
push
push
call
xor
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
je
cmpl
je
push
push
mov
push
mov
push
call
mov
movzbl
push
mov
call
add
test
jne
mov
mov
lea
push
lea
push
mov
call
mov
test
je
movl
mov
push
call
mov
movzbl
push
mov
call
add
cmpl
je
test
jne
mov
cmp
je
cmp
je
cmpb
je
mov
test
jne
mov
mov
mov
push
call
lea
xor
call
xor
lea
call
cmpb
je
mov
test
je
test
jne
mov
mov
push
push
mov
call
lea
xor
call
xor
lea
call
mov
test
jne
pop
pop
pop
pop
add
ret
test
jne
test
je
movl
jmp
test
je
jmp
mov
push
mov
lea
movl
call
mov
test
je
mov
test
jne
test
jne
mov
mov
push
call
lea
call
jmp
test
jne
mov
test
js
mov
cmp
je
push
mov
push
call
add
pop
pop
pop
pop
add
ret
mov
jmp
xor
push
mov
push
call
add
pop
pop
pop
pop
add
ret
push
mov
mov
push
push
mov
mov
mov
push
pushl
call
test
pop
pop
jne
pop
pop
pop
ret
push
mov
sub
push
xor
cmp
mov
je
pushl
mov
mov
lea
push
mov
push
call
lea
push
call
cmp
jne
lea
call
mov
pop
leave
ret
push
mov
sub
push
mov
push
mov
mov
push
call
test
je
xor
mov
mov
mov
mov
mov
lea
mov
mov
mov
call
test
mov
mov
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
js
mov
mov
mov
mov
neg
sbb
and
push
lea
push
pushl
pushl
pushl
call
test
jne
dec
mov
mov
mov
jns
mov
xor
cmp
jne
mov
cmp
jne
xor
pop
pop
pop
leave
ret
push
mov
call
cmp
jne
mov
call
fmull
pop
ret
push
xor
call
lea
push
mov
call
andl
cmpl
jne
pop
ret
mov
call
pop
ret
push
pushl
mov
mov
mov
call
test
je
xor
inc
pop
ret
mov
pushl
mov
call
test
jne
jmp
push
mov
push
push
movl
movl
movl
call
cmpl
je
lea
push
call
pop
push
lea
xor
mov
call
lea
call
mov
call
lea
call
lea
call
mov
test
movl
pop
jne
pop
ret
andl
andl
pop
ret
push
mov
sub
cmpl
je
mov
mov
push
push
call
mov
mov
sub
mov
push
push
pushl
mov
mov
push
call
test
jle
mov
lea
push
lea
push
add
mov
push
call
push
mov
call
mov
mov
add
push
call
mov
cmp
jg
mov
mov
push
push
call
andl
mov
mov
mov
mov
push
call
mov
mov
mov
push
call
mov
sub
add
lea
mov
push
mov
call
mov
sub
pop
sar
cmp
jne
mov
andl
mov
mov
mov
pop
leave
ret
xor
jmp
push
mov
push
mov
test
push
push
je
mov
mov
mov
cmp
ja
test
jne
lea
push
mov
sub
push
mov
add
push
mov
mov
push
call
test
mov
mov
js
mov
add
pop
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
mov
sub
test
push
mov
je
mov
test
js
mov
mov
push
mov
push
push
push
push
mov
call
test
jg
cmpl
jne
movl
xor
pop
pop
add
ret
movl
movl
xor
push
lea
mov
mov
mov
push
call
sub
mov
mov
mov
mov
push
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
push
mov
push
add
call
mov
lea
push
lea
push
mov
mov
mov
push
call
mov
add
push
mov
push
call
mov
add
mov
add
testl
jne
cmpw
je
testl
jne
mov
mov
mov
push
call
sub
pop
pop
mov
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
je
mov
cmp
je
mov
add
test
jne
xor
mov
test
jns
mov
test
je
mov
mov
cmp
je
mov
add
test
jne
cmpl
je
xor
mov
mov
pop
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
xor
jmp
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
cmpl
je
mov
mov
mov
push
call
mov
mov
xor
mov
pop
ret
int3
int3
int3
int3
push
mov
push
mov
push
push
mov
push
mov
lea
mov
add
cmp
mov
jg
mov
mov
mov
add
mov
mov
mov
add
mov
cmp
jg
cmp
jge
mov
mov
mov
cmp
jge
mov
pop
sub
pop
sub
pop
mov
mov
mov
pop
pop
ret
mov
jmp
mov
jmp
push
mov
sub
push
xor
cmp
push
movb
je
mov
xor
cmp
sete
mov
mov
pop
pop
leave
ret
mov
movb
movl
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
je
cmp
mov
je
mov
push
lea
call
lea
mov
mov
lea
push
mov
add
push
mov
movl
movl
mov
call
push
pushl
lea
push
push
lea
push
call
add
testb
mov
jne
testb
jne
mov
test
jne
mov
mov
cmp
je
cmp
jne
mov
mov
lea
push
push
push
call
test
jne
cmp
je
mov
mov
push
pushl
pushl
push
call
test
jne
lea
mov
mov
mov
lea
mov
call
mov
push
push
push
pushl
call
test
jne
mov
push
push
pushl
push
call
lea
call
mov
mov
cmp
jne
mov
xor
cmp
sete
mov
mov
cmp
mov
je
mov
call
push
call
pop
lea
mov
call
lea
call
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
fldl
mov
fcompl
fnstsw
test
jp
fldl
faddl
fldl
faddl
fcompp
fnstsw
test
jne
fldl
fcompl
fnstsw
test
jp
fldl
faddl
fldl
faddl
fcompp
fnstsw
test
jne
mov
ret
xor
ret
call
test
jl
movsbl
mov
test
je
jmp
mov
ret
push
mov
and
sub
mov
xor
mov
mov
push
push
push
mov
xor
push
mov
lea
mov
mov
call
cmp
je
cmp
movl
movl
movl
mov
jne
mov
mov
lea
push
push
mov
call
test
mov
jne
mov
pushl
mov
mov
call
test
pop
je
mov
pushl
lea
mov
lea
mov
mov
mov
movl
movl
mov
movb
mov
call
mov
cmp
mov
je
lea
push
lea
push
movl
movl
movl
mov
push
call
testb
mov
jne
testb
jne
mov
push
lea
mov
call
mov
mov
lea
push
push
call
test
je
cmp
mov
movl
mov
movl
jne
mov
cmp
je
pushl
push
mov
call
test
je
lea
call
lea
call
lea
call
testb
jne
testb
jne
lea
call
mov
pop
mov
pop
pop
xor
call
mov
pop
ret
pushl
mov
lea
mov
call
mov
cmp
jne
lea
push
pushl
call
pop
pop
lea
mov
call
jmp
push
mov
and
sub
push
push
xor
cmp
push
mov
je
cmpb
je
mov
mov
push
call
pop
pushl
mov
pushl
lea
mov
call
test
js
lea
call
pushl
lea
pushl
call
test
je
mov
andl
test
mov
mov
je
lea
push
push
push
add
push
call
mov
and
jne
test
mov
jne
pushl
lea
call
test
jne
mov
pushl
mov
push
call
test
jne
pushl
pushl
pushl
call
add
test
je
xor
inc
test
jne
test
mov
je
mov
mov
mov
mov
mov
andl
lea
push
push
movl
mov
call
push
push
push
pushl
pushl
pushl
pushl
pushl
call
add
test
mov
je
movb
test
je
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
cmpb
mov
jne
mov
mov
push
push
call
test
jne
lea
call
lea
call
pushl
call
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
xor
mov
mov
mov
push
mov
push
mov
cmpl
je
push
mov
test
mov
jne
test
jne
lea
push
push
push
mov
call
add
test
je
mov
mov
add
sar
mov
lea
push
xor
lea
lea
push
mov
mov
movl
movl
mov
mov
mov
call
pushl
pushl
pushl
call
add
cmp
mov
je
mov
push
call
cmp
je
pushl
mov
mov
lea
push
push
call
test
js
lea
call
testb
jne
testb
jne
mov
movl
xor
pop
mov
pop
xor
pop
call
leave
ret
push
mov
sub
push
mov
push
xor
mov
mov
cmp
je
mov
push
mov
lea
push
lea
lea
movl
mov
mov
call
mov
test
jne
mov
mov
push
lea
call
mov
lea
push
push
call
test
mov
jne
mov
andl
test
je
mov
lea
push
push
push
call
test
mov
jne
pushl
lea
call
test
jne
mov
mov
mov
lea
mov
call
lea
call
xor
lea
call
mov
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
xor
push
lea
mov
call
lea
push
mov
call
test
mov
js
mov
add
push
mov
call
pushl
mov
pushl
call
test
mov
js
cmpl
je
mov
andl
add
mov
mov
push
mov
call
mov
push
push
call
test
mov
js
mov
mov
mov
lea
mov
lea
push
xor
push
lea
mov
mov
call
test
jne
pushl
lea
call
test
jne
mov
mov
lea
push
pushl
pushl
push
call
test
mov
jne
cmp
mov
mov
jge
pushl
pushl
push
call
test
mov
jne
pushl
pushl
mov
mov
push
call
test
mov
jne
cmpl
jne
mov
mov
add
call
cmp
jne
lea
call
xor
lea
call
pop
mov
pop
pop
leave
ret
mov
lea
xor
movl
call
jmp
mov
cmpl
push
mov
push
mov
push
mov
jge
cmp
je
mov
cmp
jne
movzwl
test
jne
movzwl
test
je
and
test
je
and
mov
lea
xor
call
mov
mov
cmpw
je
pop
pop
pop
ret
mov
and
test
je
and
mov
lea
xor
call
jmp
andw
jmp
cmp
jne
push
pushl
call
pop
pop
test
jne
mov
call
jmp
mov
mov
sub
neg
sbb
inc
ret
push
mov
and
push
push
andl
lea
push
mov
push
call
pop
pop
lea
call
mov
test
mov
jne
mov
pop
ret
push
pushl
mov
call
mov
mov
shr
and
push
lea
call
jmp
push
mov
and
push
push
mov
push
push
mov
orl
testl
jne
mov
mov
mov
mov
mov
call
add
mov
mov
mov
test
je
pushl
mov
push
pushl
push
push
call
pop
pop
mov
pop
ret
push
push
pushl
call
jmp
push
mov
push
push
push
mov
push
push
lea
mov
mov
push
push
call
mov
test
je
push
cmp
jne
xor
pop
pop
pop
leave
ret
mov
and
je
mov
push
mov
call
mov
push
lea
push
push
xor
call
mov
mov
jmp
push
mov
test
push
push
mov
push
mov
mov
je
mov
test
jne
mov
test
je
push
push
mov
mov
push
pushl
call
mov
test
jne
pop
pop
xor
pop
pop
ret
push
mov
flds
fcomps
fnstsw
test
jp
mov
pop
ret
push
mov
fldl
faddl
fstpl
fldl
faddl
fstpl
fldl
faddl
fsubrl
fldz
fcom
fnstsw
test
je
fxch
fstpl
fldl
faddl
fsubrl
fcom
fnstsw
test
jnp
fstp
fstpl
pop
ret
fstp
jmp
push
mov
push
xor
push
xor
inc
cmp
mov
mov
mov
mov
je
cmp
je
cmpl
mov
je
cmp
jne
mov
mov
lea
push
push
push
call
xor
inc
mov
mov
test
je
cmp
je
cmpl
je
mov
call
mov
pop
leave
ret
mov
mov
push
push
push
push
call
test
jl
cmp
jle
cmp
je
add
cmp
ja
push
pop
cmp
je
mov
mov
jmp
mov
mov
jmp
push
jmp
xor
jmp
mov
jmp
push
mov
and
sub
push
mov
push
mov
push
push
lea
lea
call
xor
cmp
je
mov
mov
mov
mov
mov
push
push
push
push
call
cmp
je
cmp
je
pop
pop
xor
pop
mov
pop
ret
cmp
je
jmp
mov
cmp
jg
je
sub
jne
ret
push
mov
push
push
push
mov
push
lea
cmpl
mov
jne
lea
mov
test
mov
jne
push
mov
lea
push
call
pop
pushl
lea
mov
call
xor
cmp
jne
mov
mov
cmp
mov
jne
cmp
movl
je
mov
lea
cmpl
jne
mov
call
cmpl
pop
jne
mov
call
lea
call
pop
pop
leave
ret
push
mov
sub
push
push
push
mov
push
pushl
lea
mov
push
mov
call
lea
mov
lea
push
lea
push
push
movl
call
add
push
push
push
lea
call
mov
xor
cmp
ja
lea
call
push
push
push
lea
push
mov
mov
call
cmp
pop
pop
pop
jne
leave
ret
push
mov
sub
andl
push
mov
test
push
je
mov
lea
push
push
push
call
add
test
jne
mov
mov
call
test
je
lea
push
call
test
je
andl
push
xor
lea
mov
mov
push
push
push
call
cmp
je
mov
cmp
jne
movl
mov
lea
push
push
mov
call
cmpw
jne
push
mov
lea
mov
mov
call
mov
mov
call
mov
mov
mov
shr
cmpl
mov
je
cmp
mov
je
andl
mov
cmp
jge
mov
shr
mov
andl
cmpl
mov
jne
movzbl
call
test
je
movl
mov
mov
cmp
jl
lea
xor
call
cmp
je
pop
pop
leave
ret
mov
mov
mov
lea
push
push
pushl
mov
movb
call
add
cmpb
mov
jne
cmp
je
mov
mov
call
test
jne
cmp
jne
jmp
mov
mov
jmp
sub
mov
mov
mov
lea
push
lea
mov
mov
mov
call
pushl
mov
lea
push
mov
call
jmp
cmp
jne
jmp
pushl
mov
mov
call
mov
test
pop
jne
jmp
cmp
jne
mov
xor
test
jle
mov
lea
push
dec
push
push
call
mov
add
mov
mov
jmp
push
lea
sub
mov
xor
mov
push
push
push
mov
mov
xor
push
mov
lea
mov
call
cmp
je
mov
call
test
jne
push
lea
mov
call
testb
mov
je
mov
lea
push
push
pushl
push
call
mov
cmp
je
lea
push
lea
xor
lea
inc
push
mov
mov
movl
movl
mov
mov
movl
movl
mov
mov
push
call
testb
jne
testb
jne
mov
push
pop
cmp
je
testb
jne
testb
jne
lea
call
mov
lea
call
mov
pop
pop
mov
xor
pop
call
add
leave
ret
xor
inc
jmp
push
mov
push
push
mov
xor
cmp
jne
push
mov
cmp
je
cmp
mov
je
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
cmp
je
lea
push
pushl
mov
pushl
pushl
call
add
test
js
mov
mov
xor
lea
call
mov
pop
pop
pop
pop
ret
lea
call
cmp
je
pushl
add
pushl
mov
pushl
push
call
jmp
push
mov
push
push
mov
push
push
xor
lea
mov
call
mov
cmp
mov
je
push
call
cmp
pop
je
mov
mov
mov
mov
xor
inc
andb
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
movl
cmp
je
mov
mov
mov
push
call
lea
call
mov
pop
pop
leave
ret
xor
jmp
push
mov
sub
mov
xor
mov
mov
push
push
mov
mov
cmpl
push
mov
mov
mov
jge
andl
testb
mov
jne
andl
lea
push
pushl
mov
push
call
test
jne
mov
sub
jne
cmpl
jne
testb
jne
xor
mov
pop
pop
xor
pop
call
leave
ret
andl
lea
push
pushl
mov
pushl
mov
call
test
jne
testb
je
cmpl
je
jmp
test
je
mov
pushl
add
push
push
call
add
jmp
push
mov
push
mov
testb
jne
mov
mov
push
mov
push
pushl
pushl
call
test
js
orl
pushl
mov
pushl
mov
call
mov
test
js
mov
pop
pop
pop
ret
mov
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
lea
push
mov
call
mov
push
push
call
mov
test
pop
je
pushl
push
call
andl
mov
push
lea
call
mov
mov
lea
push
push
push
call
lea
mov
call
mov
pop
pop
pop
ret
push
mov
push
push
mov
push
lea
mov
test
mov
je
mov
push
call
mov
test
je
movzwl
mov
push
pushl
push
call
mov
andl
andw
lea
call
pop
pop
mov
pop
pop
ret
push
push
mov
mov
push
lea
push
call
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
ret
test
je
mov
push
mov
call
test
je
mov
mov
cmp
je
mov
cmpb
jne
mov
mov
call
test
jne
push
mov
test
jne
xor
test
jne
and
jne
mov
pop
ret
mov
mov
and
je
jmp
mov
call
jmp
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
cmp
push
je
cmp
jbe
cmp
jne
mov
mov
lea
push
push
xor
mov
push
movl
mov
mov
call
add
cmp
je
mov
push
mov
mov
call
add
cmp
je
mov
lea
mov
lea
movl
push
push
mov
movl
mov
mov
call
mov
pop
pop
pop
mov
pop
ret
push
call
xor
add
cmp
je
mov
mov
cltd
mov
mov
movl
mov
mov
pop
pop
pop
mov
pop
ret
push
call
xor
add
cmp
je
mov
mov
mov
fldl
mov
fstpl
movl
pop
pop
pop
mov
pop
ret
cmp
je
cmp
jne
push
call
xor
add
cmp
je
mov
pop
pop
movl
pop
mov
pop
ret
push
mov
push
mov
mov
test
mov
je
mov
push
call
mov
mov
mov
mov
mov
test
je
mov
push
push
push
call
mov
lea
call
mov
pop
pop
ret
xor
jmp
push
mov
push
push
mov
cmpb
jne
movb
mov
test
mov
movb
jne
mov
mov
andl
push
inc
push
lea
mov
call
mov
mov
lea
push
push
call
test
js
mov
push
lea
push
mov
call
mov
push
push
call
mov
mov
lea
push
push
call
lea
call
movb
xor
pop
pop
pop
leave
ret
mov
mov
pushl
mov
mov
push
push
call
movsbl
add
and
ret
testb
push
mov
movl
je
push
call
pop
mov
pop
ret
mov
test
je
movw
xor
ret
mov
lea
push
mov
or
lock
dec
pop
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
sub
mov
push
push
push
xor
mov
mov
cmp
mov
je
lea
call
pushl
lea
call
mov
call
test
je
movl
push
lea
mov
call
lea
push
call
mov
test
pop
jne
mov
push
lea
mov
call
pushl
lea
push
push
call
add
test
jne
mov
push
lea
mov
call
push
push
push
push
pushl
lea
push
xor
call
add
test
jne
call
cmp
mov
je
mov
push
call
cmp
je
mov
pushl
mov
push
call
cmp
je
mov
mov
push
lea
mov
mov
call
pushl
mov
push
lea
push
push
pushl
mov
pushl
push
call
test
jne
mov
push
lea
mov
call
mov
lea
push
push
call
test
jne
pushl
pushl
pushl
call
add
test
jne
mov
mov
mov
mov
lea
mov
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
push
push
mov
push
mov
push
mov
push
mov
mov
cmpl
jge
cmpl
movl
je
testl
je
nop
sub
push
push
push
call
mov
add
test
je
sub
add
add
cmp
jbe
cmpb
jne
sub
push
push
push
movb
call
test
js
testb
jne
lea
mov
jmp
testb
jne
mov
sub
jne
xor
pop
pop
pop
pop
pop
ret
push
call
add
test
je
call
test
mov
je
mov
test
je
jmp
mov
test
je
mov
mov
call
test
jne
orl
cmp
jb
mov
push
push
push
push
call
test
je
cmp
jbe
jmp
xor
jmp
mov
jmp
mov
and
or
jne
mov
ret
push
mov
push
push
pushl
andl
andl
mov
lea
call
mov
test
je
pushl
mov
call
push
mov
lea
call
mov
test
mov
jne
lea
call
lea
call
mov
leave
ret
mov
push
call
jmp
push
xor
cmp
je
cmp
jne
push
push
call
cmp
pop
je
movl
movl
mov
mov
xor
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
pushl
mov
pushl
push
call
test
js
xor
pop
pop
ret
xor
jmp
push
mov
and
sub
push
mov
cmpl
push
push
mov
je
mov
test
jne
xor
pop
pop
pop
mov
pop
ret
push
lea
sub
mov
xor
mov
mov
and
neg
push
push
sbb
inc
mov
lea
push
call
mov
xor
cmp
mov
jne
cmp
jne
testb
jne
mov
cmp
jne
pushl
mov
push
mov
call
cmp
movb
jne
mov
mov
lea
push
mov
call
mov
push
mov
lea
mov
mov
call
lea
push
pushl
lea
mov
mov
mov
push
mov
mov
movl
movl
mov
call
cmp
jne
cmp
jne
mov
mov
cmp
jne
movzbl
push
push
lea
call
testb
je
mov
add
push
call
test
pop
je
lea
call
lea
call
lea
call
mov
pop
xor
pop
call
add
leave
ret
cmp
je
cmp
jne
mov
mov
lea
push
call
cmp
je
jmp
cmp
je
mov
lea
push
call
cmp
je
jmp
movb
jmp
pushl
mov
push
mov
call
test
je
jmp
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
xor
cmp
jg
xor
cmp
jg
xor
cmp
jne
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
call
test
je
xor
ret
xor
inc
ret
push
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
test
je
push
mov
cmpw
je
test
jbe
mov
mov
lea
cmpw
je
sub
add
test
jne
push
mov
mov
call
add
test
je
cmpl
jne
test
jbe
mov
mov
nop
cmpw
je
sub
add
test
jne
mov
lea
push
movb
call
test
je
movl
mov
lea
mov
push
lea
mov
mov
push
lea
push
movl
movl
mov
mov
call
mov
test
jne
test
jne
xor
pop
pop
pop
add
ret
mov
lea
mov
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
mov
mov
mov
mov
call
add
test
jne
mov
lea
lea
mov
movl
movl
movl
call
push
push
mov
call
add
test
jne
push
push
call
mov
add
jmp
push
lea
sub
mov
xor
mov
mov
mov
push
mov
lea
push
mov
mov
mov
mov
cmp
lea
ja
mov
test
jne
mov
mov
cmp
mov
lea
ja
xor
test
jne
mov
test
jne
mov
mov
mov
mov
add
mov
cmp
mov
jb
mov
push
pushl
mov
pushl
call
test
je
test
jbe
mov
mov
lea
push
push
mov
call
mov
pop
xor
pop
call
add
leave
ret
cmp
jae
jmp
push
call
pop
ret
push
mov
sub
mov
xor
mov
mov
andl
push
mov
push
mov
lea
call
mov
test
jne
lea
call
mov
xor
xor
pop
call
leave
ret
andl
push
push
lea
push
lea
lea
push
mov
movl
movl
mov
movb
movl
movl
movl
mov
push
call
testb
mov
jne
testb
jne
test
jns
testb
jne
testb
jne
lea
call
pop
pop
jmp
push
push
push
push
push
lea
mov
mov
push
push
call
mov
mov
cmp
jne
push
push
lea
mov
mov
push
push
call
mov
cmp
jne
mov
test
mov
jne
test
jne
lea
call
lea
call
lea
call
pop
pop
mov
pop
jmp
lea
call
jmp
push
mov
sub
mov
push
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
test
js
pushl
mov
push
mov
mov
push
call
lea
mov
call
lea
call
lea
call
pop
mov
pop
leave
ret
push
mov
and
sub
push
mov
push
xor
cmp
push
je
mov
push
lea
lea
movl
mov
mov
mov
call
cmp
je
lea
call
mov
cmp
push
mov
je
mov
push
call
lea
call
mov
test
jne
push
lea
mov
call
lea
push
mov
call
test
jne
mov
push
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
push
push
call
mov
add
xor
test
je
mov
push
push
lea
push
push
push
push
mov
push
push
call
add
test
js
mov
movl
testl
jne
lea
call
mov
pusha
push
call
mov
push
add
mov
add
add
insb
lods
xor
add
mov
add
add
xchg
add
mov
add
push
add
add
add
ljmp
in
hlt
call
in
add
push
push
push
push
push
push
push
lea
push
call
xchg
jmp
add
jle
out
add
nop
stc
gs
add
add
mov
les
jmp
shl
in
add
add
sub
pop
popl
push
push
push
call
add
add
sahf
je
icebp
jmp
jmp
add
ljmp
push
add
jno
add
cmpsl
add
jmp
cmc
pusha
add
fadd
push
mov
scas
add
stos
add
pop
add
push
push
push
push
push
lea
push
push
push
push
call
loope
jbe
test
orl
sbb
test
mov
mov
roll
arpl
std
js
mov
bound
pop
bound
add
lret
jmp
xchg
pop
sub
pop
push
call
push
push
lea
push
push
lea
push
call
add
pop
add
add
mov
scas
mov
jmp
je
jmp
push
jle
in
add
jmp
test
mov
add
add
jnp
add
pop
cmc
testl
call
push
lea
push
push
lea
push
push
push
push
push
push
call
lds
add
data16
add
pushf
xchg
add
sahf
repnz
jp
mov
add
roll
mov
popa
pop
jbe
pop
add
lock
add
cmc
cmpl
jno
add
add
mov
jmp
push
push
lea
push
push
lea
push
push
push
call
add
bound
pop
bound
divb
mov
loope
add
leave
add
pop
hlt
nop
add
add
gs
jo
popa
scas
cmp
lods
test
cwtl
mov
std
jns
leave
add
test
mov
pop
ret
push
lea
push
push
push
push
push
push
lea
push
push
push
call
add
popa
data16
popa
push
lcall
add
lods
loopne
imul
movsl
add
loopne
icebp
mov
imul
add
add
add
add
add
testl
fcomps
inc
hlt
push
push
call
data16
roll
add
xchg
loop
mov
jle
add
add
add
jp
xchg
xchg
pop
add
je
out
mov
scas
add
mov
lock
add
push
lods
mov
add
in
outsl
stos
push
out
add
cli
in
add
mov
add
pop
mov
push
push
lea
push
call
add
divb
mov
sarl
out
addl
add
add
jmp
jl
int3
add
repnz
add
sub
pop
add
push
push
push
push
push
push
push
push
push
push
call
mov
mov
xchg
addb
fcmovnbe
jnp
add
in
popf
add
lret
loop
stos
testl
add
mov
add
xorl
add
mov
cmpsb
fdivr
lcall
ret
add
add
push
push
push
push
push
push
lea
push
push
call
add
push
mov
jb
imul
add
iret
popf
rcrb
mov
fxch
mov
add
jle
lock
jns
xchg
jo
stos
popf
fwait
add
sar
add
mov
add
add
add
mov
pop
data16
gs
add
shl
test
mov
add
sub
pop
add
mov
xor
push
push
xor
xor
inc
push
xor
add
sub
sub
pop
lea
pop
push
push
call
xchg
mov
cld
jl
lret
add
icebp
mov
loope
add
outsl
mov
mov
add
loopne
add
rcrl
xorb
add
mov
push
add
add
mov
add
cmpsl
lods
mov
sub
lcall
jne
call
push
push
lea
push
push
push
push
call
add
add
pop
ret
ret
rorl
shl
jno
mov
add
add
add
mov
mov
add
ja
data16
movsl
add
add
out
xlat
iret
in
test
add
lcall
inc
lock
push
push
lea
push
push
call
cli
add
addr16
roll
add
add
test
xchg
add
pop
mov
stc
sti
mov
pusha
mov
pop
pop
andb
stos
add
add
sahf
add
add
fidivs
fldl
mov
addb
in
lock
lcall
inc
call
lret
inc
inc
pop
push
push
push
lea
push
push
push
push
push
push
call
int3
add
pusha
movsl
mov
test
ljmp
xchg
int
xchg
add
add
add
add
hlt
add
jne
mov
pushl
pushl
push
push
push
push
push
push
push
call
add
std
pushf
add
loop
add
fsubr
ja
add
add
mov
bound
xchg
lret
nop
mov
add
add
add
scas
add
mov
sub
pop
call
push
push
push
push
push
push
lea
push
push
push
call
add
hlt
add
add
pushf
push
lds
mov
xchg
in
mov
xchg
xchg
jno
lock
test
add
jbe
mov
add
fsub
add
enter
push
add
mov
add
add
test
fdivr
lcall
jne
push
lea
push
push
lea
push
push
push
push
push
lea
push
push
call
test
add
hlt
cli
jns
bound
add
aad
mov
add
xlat
lret
add
addb
add
mov
lcall
jne
push
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
cld
xchg
mov
mov
add
push
add
mov
add
imul
add
add
sarl
add
add
add
pop
add
add
jb
mov
cmpsl
pop
cmpsl
add
jae
nop
push
add
pusha
out
mov
popl
in
xchg
sub
pop
call
push
push
shr
add
push
or
inc
add
lea
xor
sub
pop
dec
not
pop
push
push
push
lea
push
call
mov
in
add
add
stc
mov
add
call
add
add
add
jecxz
imul
add
je
add
add
sti
mov
arpl
jne
call
push
push
call
add
add
pop
add
icebp
add
add
mov
je
add
mov
push
add
popa
push
add
std
stos
xchg
mov
fstps
ror
add
jp
add
mov
in
clc
pop
push
push
push
not
push
xor
add
xor
sub
rol
pop
add
pop
push
push
push
push
lea
push
push
lea
push
push
lea
push
call
pop
push
leave
into
mov
add
mov
cmpsl
add
add
add
stos
in
add
cmpsb
in
add
jns
xorb
add
add
add
arpl
mov
std
add
add
sarb
push
push
ja
testl
fcompl
push
push
push
lea
push
push
lea
push
push
call
stos
mov
pop
fsubrl
mov
xchg
mov
fadds
icebp
lea
add
lcall
add
rclb
push
push
push
push
call
add
ficompl
lea
add
movsb
add
test
push
pop
add
int
add
add
nop
add
add
mov
icebp
jne
add
jge
add
fistpl
aad
mov
push
ja
add
add
filds
add
add
add
pop
mov
push
lea
push
push
push
push
push
push
push
call
lds
sti
add
clc
imul
mov
add
cwtl
add
mov
add
mov
add
icebp
pop
jno
rorl
jb
add
add
fildl
push
push
lea
push
lea
push
push
call
lret
mov
add
xchg
in
mov
add
loop
loope
add
add
add
mov
lcallw
add
data16
add
nop
sahf
push
push
add
in
lock
lcall
push
lea
push
lea
push
push
push
push
call
jle
add
leave
mov
xchg
mov
xchg
add
addb
lret
shll
lcall
jno
fs
pop
call
add
add
jmp
test
outsl
add
fwait
imul
mov
add
gs
hlt
jge
add
mov
add
movl
hlt
add
push
push
push
push
push
push
push
call
aad
push
add
aad
jno
gs
lock
cld
mov
sahf
jmp
jle
movsl
add
lods
pop
orl
add
in
add
push
fsubr
jle
data16
push
push
add
add
add
add
mov
in
add
mov
shlb
add
mov
add
subb
in
in
add
push
push
push
push
push
push
push
push
lea
push
push
call
add
insb
add
std
mov
xchg
add
add
in
xchg
pop
mov
cli
add
add
add
add
jae
add
add
ret
outsb
dec
add
mov
push
push
push
push
push
push
call
int3
mov
mov
push
xlat
call
lea
mov
add
add
pop
repnz
lret
shl
xchg
add
add
stos
xchg
xchg
add
imul
and
push
lea
push
call
bound
add
roll
fwait
mov
add
xchg
add
add
cmpsl
add
loope
pop
xchg
roll
jle
stos
add
add
addl
sub
pop
add
push
push
push
push
call
sub
lods
add
popf
jl
add
jbe
add
add
imul
fadds
add
iret
jb
iret
add
nop
add
fadds
pop
testb
add
cmpsl
jecxz
in
in
lock
add
push
push
push
push
lea
push
lea
push
push
lea
push
push
call
xchg
add
add
push
add
stc
loopne
add
add
add
imul
nop
add
add
je
cld
testb
cmpsl
push
add
push
add
out
add
push
lea
push
push
push
push
push
push
lea
push
push
call
add
lret
xchg
shl
xchg
add
cmc
add
insb
add
icebp
mov
xlat
add
mov
pop
add
shlb
testb
add
add
sar
add
add
jge
jne
lret
in
fdivr
lcall
inc
or
jno
adc
cmp
sbb
inc
add
add
add
fldl
add
add
add
add
jno
xchg
into
add
call
add
mov
add
add
sarw
mov
add
movl
ljmp
xor
push
lea
push
push
push
push
push
call
fcom
stos
add
nop
add
ja
mov
fs
add
mov
xchg
push
add
add
nop
jp
pop
add
in
mov
cmpsb
add
cmp
in
call
push
push
push
call
add
add
fcomp
add
add
mov
pop
add
pop
mov
pop
mov
xchg
add
andb
mov
mov
add
mov
add
stc
data16
icebp
int
jecxz
pop
sub
pop
add
push
lea
push
push
call
sti
loop
add
cwtl
cli
add
add
out
add
imull
add
mov
in
push
mov
add
mov
insb
mov
in
idiv
add
add
add
mov
xchg
add
stos
mov
cli
add
add
mov
pop
pop
push
push
push
push
push
push
push
call
add
add
shrb
ret
nop
add
pusha
add
pusha
add
stos
fsincos
aad
sub
pop
mov
push
push
push
push
push
lea
push
push
push
push
push
call
push
add
mov
jnp
mov
ret
jae
mov
add
lock
cli
pusha
mov
fldcw
pop
popf
movl
adc
lea
push
call
out
pushf
cltd
jmp
mov
add
add
add
fs
add
cli
jbe
addl
mov
pop
lock
lock
bound
xchg
add
mov
sub
pop
add
push
push
push
lea
push
push
call
fiadds
add
call
add
arpl
fnstenv
cmc
std
add
push
test
in
add
mov
add
fadds
mov
fbstp
add
jmp
add
add
add
aam
outsl
xchg
add
push
add
pop
pop
add
roll
pushf
out
add
pop
push
push
lea
push
push
call
jnp
add
pop
lea
add
add
add
sti
lds
add
add
ja
pop
std
add
add
mov
add
mov
push
push
lea
push
push
push
push
lea
push
push
lea
push
call
add
clc
loop
add
add
cwtl
cltd
add
imul
pop
add
jne
mov
mov
mov
sub
pop
xor
push
push
push
lea
push
lea
push
push
push
push
push
lea
push
call
jmp
xchg
add
jnp
add
pop
add
incb
mov
add
in
fcomps
les
add
push
push
push
push
push
lea
push
push
push
lea
push
push
call
rolb
add
les
jnp
xchg
add
pushf
mov
mov
aam
add
jbe
add
mov
cmpsl
mov
outsl
add
out
out
divl
add
int3
xchg
imul
enter
xor
push
push
push
push
push
lea
push
push
push
push
call
jne
push
mov
imul
ljmp
push
add
mov
add
arpl
add
imul
add
add
scas
mov
add
add
std
mov
add
lcall
push
push
push
push
push
call
not
jl
loopne
popl
add
mov
xchg
pop
jmp
imul
stc
add
cltd
add
cld
add
xchg
mov
add
add
add
aad
imul
icebp
shl
add
add
jge
add
jl
lcall
sub
pop
rep
push
lea
push
call
fcmovnb
gs
push
add
scas
test
mov
add
mov
sar
imul
fnstenv
add
mov
test
mov
add
push
in
add
add
leave
mov
je
pusha
or
sub
pop
pop
push
lea
push
call
loope
mov
add
mov
pop
mov
push
add
test
movl
xchg
add
sahf
pop
add
addb
jp
sub
pop
mov
add
push
push
push
push
push
push
push
push
push
lea
push
call
insb
add
add
shll
add
pop
out
add
adcl
push
xchg
push
add
add
fdiv
add
sub
pop
add
push
lea
push
lea
push
push
push
push
lea
push
call
add
shl
fcoms
mov
ja
out
test
add
add
add
add
ja
push
xchg
out
cld
faddp
aam
loope
add
movsb
pop
js
jp
add
add
add
iret
in
in
sub
pop
add
push
push
push
lea
push
push
lea
push
push
push
push
call
outsl
add
add
xlat
ret
fldl
pop
add
jb
pop
add
add
mov
jmp
add
mov
add
push
int3
add
add
add
add
nop
aad
insb
aam
movsl
add
sahf
mov
jle
add
movsb
bound
add
jno
add
xchg
test
fcompl
inc
and
jno
adc
xchg
imulb
adc
push
push
call
in
pop
icebp
scas
add
lock
shlb
add
hlt
add
jle
test
movsb
shlb
shll
fnstcw
mov
cmpsb
add
add
xchg
add
push
add
pop
xor
push
push
push
lea
push
push
push
push
push
call
scas
add
add
mov
loop
filds
insb
jbe
ljmp
jecxz
add
andb
std
mov
add
add
outsl
push
add
mov
jp
add
cli
out
fmul
pop
add
loopne
add
push
lea
push
call
add
pop
add
add
iret
push
add
jb
add
pop
mov
add
incb
add
add
cltd
xchg
jae
pop
js
iret
add
xchg
cmpsl
in
mov
xchg
mov
fmul
outsl
addl
and
xor
adc
push
push
lea
push
call
add
add
ret
jmp
test
add
rcrb
add
add
out
je
add
mov
mov
add
add
add
movsb
xchg
hlt
roll
cmpsl
ljmp
in
lcall
adc
push
push
push
lea
push
lea
push
push
push
push
lea
push
push
call
fdivs
add
add
subl
add
add
add
add
add
loopne
loope
aad
add
add
add
add
add
push
lcall
icebp
add
jle
add
out
shr
add
add
add
in
fdivr
lcall
les
add
push
push
push
lea
push
lea
push
push
push
push
call
ficompl
sar
scas
call
addr16
stos
add
mov
rolw
add
add
add
add
jb
add
lea
jo
stos
test
add
mov
nop
scas
add
add
clc
sub
pop
mov
xor
push
lea
push
lea
push
push
lea
push
call
stc
lods
pop
add
mov
lcall
add
lret
jo
icebp
add
mov
mov
add
add
mov
xchg
jnp
lcall
out
fiadds
into
fiaddl
add
sub
enter
add
push
popa
push
fadds
add
sub
pop
add
push
push
push
call
add
pop
add
add
push
popf
mov
add
mov
jle
add
scas
mov
add
hlt
pop
add
push
lea
push
push
push
lea
push
lea
push
push
push
lea
push
lea
push
call
les
jmp
jp
mov
add
hlt
push
mov
add
js
icebp
mov
sbb
andl
mov
add
loope
add
add
add
fdivr
lcall
fsubrs
xor
stos
push
push
and
add
sub
xor
sub
add
pop
sub
add
pop
push
push
call
add
mov
pop
into
add
test
add
jp
les
mov
add
bound
xchg
add
add
push
add
fstp
lcall
roll
pop
add
add
lcall
jne
push
rol
add
pop
call
push
not
inc
inc
shl
pop
push
push
push
xor
ror
lea
push
or
inc
add
shr
sub
dec
sub
pop
xor
sub
add
pop
push
pop
push
push
push
push
push
push
push
push
push
call
xchg
mov
add
add
add
icebp
fcmovu
xchg
je
scas
jp
cwtl
xchg
add
call
leave
cltd
mov
pop
add
push
xchg
call
imul
jl
test
pop
push
push
push
push
push
push
push
push
push
call
in
cmpsl
xchg
xchg
mov
imull
add
sarl
jno
gs
add
loope
add
add
sub
pop
call
push
push
push
call
mov
add
add
jne
incb
add
add
xchg
add
add
add
push
add
add
add
push
jnp
add
push
jo
cltd
add
flds
add
add
add
mov
arpl
ffreep
and
add
lcall
clc
push
inc
not
pop
push
push
push
sub
shl
sub
pop
mov
push
shr
pop
add
push
sub
ror
pop
add
add
push
push
call
mov
add
cmpsb
add
nop
mov
add
stos
pop
jo
fildl
sarl
pop
mov
xchg
outsl
add
mov
in
in
clc
lcall
jae
push
push
lea
push
lea
push
lea
push
push
call
mov
insb
add
add
push
add
imul
add
add
jmp
add
lds
lcall
insb
push
pop
mov
out
pop
push
mov
in
aam
add
push
add
leavew
add
nop
pop
scas
add
jl
movsl
shrl
lcall
xor
push
push
push
lea
push
push
call
adcb
add
ret
add
pop
add
add
rolb
hlt
icebp
loopne
add
faddp
add
jb
mov
popa
add
jge
jns
add
fiadds
scas
jmp
mulb
add
mov
add
cltd
je
add
testb
add
sub
pop
add
push
pop
add
push
shl
lea
pop
push
mov
push
push
push
push
push
push
push
push
push
push
push
call
out
xchg
add
add
add
mov
add
mov
add
add
jne
je
add
out
add
mov
cli
add
add
add
mov
add
mov
add
add
push
push
push
push
push
push
call
mov
shll
addb
xlat
popa
pop
clc
add
jge
add
popa
jp
movsb
add
mov
add
jno
add
out
add
add
cltd
add
mov
in
add
mov
test
add
cli
mov
fs
lcall
les
push
push
call
push
add
add
flds
lret
add
sti
add
clc
push
add
lods
test
out
fs
add
fiaddl
push
add
add
icebp
stc
out
mov
add
add
test
lock
add
add
cli
add
gs
sub
pop
add
pop
push
push
push
call
jle
add
xlat
je
cli
add
add
mov
push
shl
test
add
mov
add
jle
jnp
sbbl
cld
mov
je
sub
pop
mov
push
push
push
push
push
push
push
lea
push
call
mov
testl
lock
clc
int
mov
add
mov
add
add
outsl
pop
out
bound
mov
sub
pop
xor
push
push
push
push
push
push
call
mov
add
push
div
add
add
repnz
cli
push
mov
add
push
scas
xchg
add
lea
pop
add
add
push
xchg
push
ret
add
add
add
stos
in
jno
sub
pop
add
push
push
push
call
in
out
mov
push
add
stos
ret
add
lahf
out
pusha
push
je
movsl
xchg
add
push
jne
icebp
push
loope
scas
add
add
mov
add
fldl
imul
mov
xchg
add
mov
cwtl
add
hlt
pop
rep
mov
push
push
lea
push
push
lea
push
push
lea
push
push
push
call
add
add
call
out
add
add
add
ror
scas
fstpl
fiadds
loopne
add
jb
add
add
fdivrl
in
loopne
xor
push
push
push
push
push
push
lea
push
push
push
push
call
jecxz
loop
xchg
xlat
xchg
mov
imul
push
int
add
add
cmpsl
add
in
aam
shll
add
add
movsb
sub
pop
add
push
not
inc
pop
or
je
mov
push
push
push
lea
push
lea
push
push
push
push
call
stos
add
hlt
test
popa
add
lret
add
mov
cli
lret
add
cmc
fwait
mov
loop
mov
add
add
add
add
xchg
add
xchg
add
bound
icebp
mov
add
into
sub
pop
xor
push
push
push
push
call
lahf
add
add
out
fistps
add
outsl
add
add
add
push
add
sbb
out
add
xchg
add
xchg
lret
lret
clc
xchg
add
fnstsw
stos
movb
ret
push
jnp
pop
lahf
add
fisubs
scas
test
jp
add
jmp
add
mov
jge
jecxz
add
lcall
les
inc
sub
pop
mov
push
push
push
push
push
call
iret
add
mov
cld
cli
add
add
add
add
clc
cltd
fsubp
add
mov
add
scas
pop
mov
pop
add
int3
mov
add
bound
in
lock
lcall
adc
push
push
call
pop
add
push
out
ljmp
pushf
add
mov
xchg
je
push
mov
add
fdivr
insb
test
add
push
lea
push
push
call
mov
add
add
gs
icebp
fmul
cmpsb
rolb
jecxz
jns
jae
add
in
add
lcall
repnz
dec
shl
pop
add
push
sub
lea
inc
pop
push
push
add
shl
pop
mov
push
push
push
push
lea
push
call
out
add
add
mov
lahf
testb
mov
andb
xlat
jne
fucomip
iret
in
pop
add
loope
filds
fstl
jns
lcall
enter
fildl
add
add
lock
lcall
add
push
lea
push
push
lea
push
lea
push
push
lea
push
push
call
jno
mov
add
jmp
add
add
jns
cmpsl
mov
roll
add
insb
ja
push
out
add
aad
fldl
add
mov
mov
bnd
push
fcoml
flds
les
add
push
sub
pop
add
push
ror
dec
add
pop
pop
push
inc
pop
rep
push
dec
pop
mov
xor
push
push
lea
push
push
push
push
push
push
lea
push
lea
push
call
add
loop
call
fiadds
add
in
int
pop
push
lods
mov
incb
in
loop
add
mov
movsl
insb
fists
nop
in
ret
loop
add
sarb
mov
mov
add
repnz
pop
add
sub
pop
or
je
push
lea
push
lea
push
lea
push
push
push
push
push
push
call
mov
ja
pop
add
add
add
add
add
add
mov
out
hlt
add
add
add
fistpl
mov
add
leave
mov
loopne
leave
sub
pop
mov
push
push
push
call
mov
add
push
arpl
scas
add
test
add
mov
add
mov
repnz
cmp
fiadds
add
lods
mov
add
push
cli
shl
pop
jns
in
hlt
pop
add
add
push
add
pop
rep
push
push
lea
push
call
into
xlat
add
test
in
add
loope
add
mov
add
add
call
in
add
add
add
add
jecxz
ja
iret
in
jno
cld
mov
test
pop
pop
push
push
add
add
push
xor
add
sub
inc
add
pop
sub
xor
pop
push
add
sub
pop
pop
push
push
push
push
push
lea
push
lea
push
call
arpl
leave
add
add
add
xchg
add
add
pop
add
xlat
xchg
jmp
xlat
pop
add
add
xchg
add
add
lods
xchg
xlat
add
cmpsb
add
add
xchg
mov
add
xchg
lcall
add
add
mov
add
xchg
sub
pop
mov
push
sub
inc
add
lea
pop
mov
push
push
push
lea
push
call
in
push
shrb
roll
repnz
add
in
mov
add
addb
bnd
add
add
push
xchg
add
mov
les
push
lret
add
add
stc
enter
add
fcmovnb
mov
add
jecxz
pop
add
lock
lcall
inc
and
push
push
push
push
push
call
pop
add
mov
add
add
test
add
pop
enter
add
add
add
add
mov
pop
into
mov
sub
pop
jmp
push
push
push
push
push
call
add
add
add
add
arpl
xchg
clc
add
add
rcrl
add
add
stos
lret
mov
add
lds
jmp
add
int
add
fisubrs
mov
shlb
mov
sub
pop
push
push
xor
shr
pop
mov
push
push
push
push
push
push
call
add
add
add
push
push
add
add
icebp
mov
add
jbe
add
cli
add
pop
cltd
rclb
out
sub
pop
add
push
push
ror
not
pop
push
push
push
add
sub
shl
pop
push
push
lea
push
push
push
push
push
push
lea
push
call
add
jb
outsl
mov
int3
add
int3
add
add
push
call
shrb
add
movsl
add
add
add
lahf
add
add
ljmp
mull
lret
je
add
add
inc
cld
push
inc
pop
pop
push
sub
pop
pop
pop
push
push
push
push
push
lea
push
push
call
mov
pop
std
lcall
add
add
add
add
add
xchg
add
add
test
mov
add
xchg
je
call
clc
fbstp
subl
jge
addl
mov
pop
outsl
add
jmp
pop
push
sub
pop
leave
push
push
push
push
call
in
mov
mov
xchg
in
add
jmp
jbe
lea
mov
pop
cmc
out
add
loop
add
mov
add
stos
imul
loope
popf
movsb
jae
xchg
movsb
shll
ja
arpl
add
push
mov
add
faddl
hlt
pop
add
add
fs
test
in
lock
lcall
or
push
ror
xor
rol
pop
push
mov
push
push
push
push
push
lea
push
push
push
call
jp
pop
jl
add
jb
call
push
lret
insb
in
xchg
shl
mov
in
add
fldl
lods
xchg
add
pop
add
push
rol
shr
rol
sub
pop
push
push
push
push
lea
push
push
call
add
push
xlat
add
insb
xchg
rolb
xchg
add
add
push
push
xchg
add
add
test
push
shll
jle
add
shl
ja
cld
in
add
add
test
jno
add
out
add
mov
shlb
sti
cli
sub
pop
push
push
push
lea
push
push
push
push
push
push
lea
push
call
mov
mov
add
add
push
std
rolb
add
add
xchg
xchg
mov
add
cmpsb
popf
add
in
popl
add
xchg
add
bnd
add
movsl
loopne
pop
add
jbe
pop
int
je
add
pop
jae
add
push
push
push
push
lea
push
call
xchg
icebp
out
add
add
mov
jmp
cmpsb
jmp
mov
jb
add
stc
lahf
add
add
and
add
idivb
movsb
push
add
add
arpl
add
add
add
add
add
leave
add
add
add
add
lcall
inc
cld
add
add
addl
push
push
lea
push
push
push
push
push
push
push
push
call
test
add
out
add
add
pop
fdivs
add
repnz
mov
pop
push
mov
jno
int
mov
cmc
ret
add
mov
sub
pop
test
je
mov
push
xor
inc
pop
pop
push
lea
ror
not
pop
pop
push
lea
push
push
call
xchg
clc
pop
jns
pop
mov
in
add
mov
imul
add
xchg
add
jno
lods
add
mov
add
add
add
mov
add
mov
loope
in
flds
add
into
add
add
icebp
mov
hlt
pop
pop
push
ror
sub
pop
pop
push
inc
pop
leave
push
inc
pop
ret
push
push
push
push
push
push
push
push
push
push
push
call
or
mov
mov
in
incb
jb
mov
js
add
add
jp
pop
add
pop
mov
popa
add
in
repnz
jle
sti
jmp
jecxz
sub
pop
mov
push
lea
push
push
lea
push
call
add
xchg
pop
pop
movb
lahf
jnp
jno
fdivs
add
mov
mov
clc
lds
add
xorl
push
add
mov
add
add
stos
add
jmp
mov
sub
pop
add
push
shr
sub
shr
pop
push
push
not
pop
push
push
push
sub
shr
pop
push
testl
push
inc
pop
addl
push
lea
push
lea
push
push
call
mov
add
in
push
add
insb
add
add
add
add
add
out
add
into
jne
jae
add
add
xchg
add
ret
les
add
fldcw
mov
aad
add
push
mov
mov
add
in
mov
scas
ljmp
push
add
lock
push
push
xor
inc
pop
call
push
push
push
lea
push
call
cwtl
int
stos
xchg
push
add
cltd
lret
add
add
add
xlat
mov
in
test
test
jno
insb
addl
insb
add
mov
add
popa
add
clc
mov
imul
add
add
add
fisttpll
sahf
aad
mov
add
fiaddl
jb
add
lcall
inc
cld
push
push
push
push
push
lea
push
lea
push
push
call
push
jecxz
cli
add
shr
add
add
jle
add
cltd
imul
mov
scas
xchg
jle
xchg
cli
add
popa
call
add
add
add
jne
push
push
push
push
push
push
push
push
push
push
push
call
imul
add
je
add
cmc
shl
xorl
add
add
testb
jle
xchg
roll
add
stc
fmulp
in
jbe
mov
push
add
add
in
add
scas
add
push
add
jge
add
cmpsb
fiaddl
sub
pop
push
push
add
dec
dec
pop
call
push
lea
ror
add
pop
cmpl
jne
push
rol
pop
pop
pop
push
push
push
push
lea
push
push
push
push
push
call
js
add
add
add
mov
jbe
push
rolb
jo
lret
add
int3
mov
add
add
shll
subl
mov
addb
mov
js
movb
add
lcall
push
dec
ror
pop
pop
leave
push
sub
pop
ret
push
push
push
push
lea
push
lea
push
lea
push
call
sahf
xchg
mov
add
add
out
stos
add
lock
xlat
shl
jnp
test
lcall
in
push
push
call
mov
add
add
jb
fs
cmpsb
in
je
add
imul
lcall
jmp
stos
xchg
js
add
jbe
mov
add
ljmp
addr16
add
ja
add
pop
pusha
add
mov
add
lret
test
jge
addr16
imul
clc
lcall
cld
push
rol
add
sub
pop
push
push
lea
push
push
push
push
lea
push
lea
push
push
call
les
add
cli
add
jne
ljmp
xchg
xchg
testl
add
xchg
add
add
cli
pusha
leave
add
add
jo
jecxz
add
pusha
xchg
jnp
mov
into
mov
push
fstl
xchg
lret
lock
lret
jno
add
jmp
imull
cmpsb
add
sub
pop
push
push
rol
shr
pop
push
push
push
lea
push
push
push
lea
push
call
jns
shr
cmpsb
add
push
jl
lcall
add
add
add
fcmovnb
cld
push
je
add
jnp
stos
add
ficoml
in
lcall
inc
cld
or
add
push
push
push
push
push
push
push
push
lea
push
lea
push
call
xchg
lds
jne
mov
mov
into
cld
repnz
mov
loope
add
mov
add
add
push
jne
add
mov
enter
arpl
mov
add
shlb
add
mov
in
fcompl
xchg
idiv
call
inc
in
mov
pop
xchg
push
push
lea
push
push
push
push
lea
push
push
call
idiv
add
add
hlt
add
stos
add
add
add
add
add
add
add
pop
xchg
test
fistpll
lcall
adc
sti
stc
call
aas
jb
push
add
add
jmp
mov
mov
push
lea
addb
add
in
push
jbe
add
add
jne
add
incb
add
in
mov
sub
pop
subl
push
not
ror
shl
pop
cmpl
jne
push
not
pop
pop
push
xor
not
pop
pop
push
push
push
push
push
lea
push
push
push
push
push
call
xchg
add
mov
cmpsl
not
add
hlt
add
add
outsl
add
fcoml
add
iret
std
mov
mov
add
mov
mov
outsl
add
push
mov
std
add
cmpsl
add
lcall
push
lea
shr
pop
pop
push
lea
push
push
push
push
push
push
lea
push
call
mov
add
add
add
into
movsl
addl
loopne
add
les
pop
xchg
add
pop
fnstsw
add
push
push
push
push
push
push
push
lea
push
push
push
call
rcll
mov
add
jbe
add
add
add
add
je
add
add
xlat
fiadds
lock
mov
push
add
mov
add
lcall
fadds
add
xchg
mov
ret
push
push
dec
not
pop
mov
push
add
pop
add
push
sub
shl
rol
pop
push
push
lea
push
push
push
push
call
push
lahf
pusha
jbe
pusha
mov
jle
filds
lea
jno
add
adc
add
test
imul
clc
add
mov
add
outsl
lods
mov
hlt
popf
stc
test
add
add
movl
test
out
jge
movsb
add
lcall
push
shl
shr
pop
push
push
lea
push
push
push
lea
push
push
push
call
cwtl
add
jnp
call
add
add
jmp
lock
pop
add
xchg
fiadds
add
mov
scas
jns
mov
fmull
fisttpll
mov
add
in
add
mov
push
lea
push
push
lea
push
call
add
pusha
jo
xchg
fiadds
roll
jae
stos
add
add
add
stos
neg
sti
mov
mov
out
in
in
add
rcrb
add
data16
repnz
add
add
testb
add
cmc
popf
insb
shlb
stos
sub
pop
lea
push
ror
xor
dec
not
pop
sub
push
push
push
push
lea
push
lea
push
lea
push
push
lea
push
push
call
add
add
mov
jecxz
lahf
add
push
hlt
aam
mov
in
rolb
add
add
aad
mov
rolb
mov
icebp
mov
test
lds
mov
mov
mov
add
add
cwtl
test
mov
roll
out
cld
int3
lret
sub
pop
mov
push
push
push
push
push
lea
push
push
push
push
call
add
add
sahf
sahf
add
pop
add
iret
enter
loop
add
jecxz
arpl
add
add
cwtl
mov
xchg
mov
sub
pop
shr
push
not
pop
add
push
shl
dec
pop
mov
push
push
lea
push
call
je
sahf
shlb
push
shr
pop
int3
mov
lret
xchg
mov
add
test
sub
pop
mov
push
rol
rol
pop
add
push
push
push
lea
push
push
call
into
add
add
mov
xchg
pop
je
add
add
mov
leave
lahf
mov
add
lret
jne
ja
flds
add
popa
shrb
pop
add
scas
add
add
stos
mov
add
fiadds
lcall
shlb
push
push
call
push
jbe
pop
imul
jp
xorb
stos
cld
test
add
add
add
clc
add
hlt
lcall
inc
add
add
push
push
push
push
push
push
lea
push
call
imul
cmc
aad
add
incb
add
add
mov
nop
xlat
fs
imul
xchg
add
div
jp
iret
pop
add
ret
mov
sub
pop
cmp
jne
cmp
jne
push
lea
push
push
push
call
rcll
addr16
into
std
cld
add
add
add
add
add
mov
add
mov
loop
add
rcll
mov
add
add
mov
jmp
xchg
add
ret
rol
jp
in
add
push
add
sub
pop
mov
movl
push
lea
push
call
cmpb
lds
xchg
add
add
cld
add
add
xlat
in
stos
jecxz
pushf
fsubrs
jnp
pop
sub
pop
jmp
push
lea
push
lea
push
push
push
push
push
call
pop
out
je
mov
add
jmp
jge
mov
rolb
mov
add
add
jecxz
add
pop
add
add
inc
cld
mov
push
push
push
push
push
push
push
call
jo
mov
jecxz
mov
loop
add
aad
add
mov
add
add
add
add
xchg
aam
jne
add
lods
add
xchg
add
into
add
je
add
mov
movsl
sub
pop
sub
jne
mov
push
shl
pop
movl
push
shr
shr
lea
pop
jmp
push
shl
shl
pop
mov
mov
push
push
push
push
call
add
mov
sarl
cltd
pop
mov
fwait
add
push
xchg
add
in
add
xchg
mov
arpl
mov
add
test
sub
pop
cmp
jne
mov
push
ror
shl
pop
movl
push
sub
pop
jmp
push
push
lea
push
lea
push
push
push
lea
push
call
add
std
add
add
scas
pop
lea
filds
jmp
cltd
add
cltd
add
add
imul
add
mov
faddp
out
fildl
mov
add
jb
add
add
xchg
xchg
addr16
arpl
pusha
sub
pop
mov
push
push
push
lea
push
push
push
call
add
xchg
pop
addb
xchg
popl
lret
shl
popa
add
add
shlb
arpl
in
mov
imul
enter
add
sub
pop
cmpw
jne
mov
push
rol
pop
movl
jmp
push
add
dec
lea
pop
pushl
pop
push
add
add
xor
pop
mov
push
push
lea
push
push
push
lea
push
lea
push
call
icebp
stc
cwtl
add
add
subl
in
jge
mov
mov
add
push
sti
xchg
push
cmc
filds
mov
in
cmc
add
jo
ljmp
enter
add
lcall
inc
sbb
push
or
add
inc
push
rol
add
rol
push
or
inc
add
shl
sub
sub
xor
add
shl
pop
shl
dec
rol
pop
push
push
push
push
push
push
push
call
int3
add
add
movb
clc
addl
add
mov
add
add
add
jge
enter
mov
add
movl
lea
roll
add
add
add
sub
pop
push
push
xor
pop
call
push
xor
shr
dec
pop
cmpl
je
push
push
push
or
inc
add
ror
xor
sub
sub
add
rol
pop
pop
push
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
testb
faddp
jmp
jnp
fildl
add
xchg
xchg
fdiv
add
add
sahf
add
les
mov
mov
shlb
in
fdivr
lcall
call
push
lea
pop
cmpl
je
push
push
ror
shr
push
or
inc
add
rol
sub
lea
pop
ror
ror
pop
push
push
push
push
lea
push
lea
push
push
call
sti
add
nop
mov
add
loopne
cmpsb
add
push
push
into
add
add
add
mov
mov
lcall
call
push
xor
inc
not
pop
cmpl
je
push
push
shl
lea
push
or
inc
add
shl
lea
sub
ror
rol
sub
pop
sub
add
pop
push
inc
pop
push
push
xor
shr
pop
call
push
push
push
push
push
push
lea
push
lea
push
call
jl
add
test
out
add
mov
lods
add
add
add
test
int3
roll
sti
faddl
stc
mov
add
add
fbld
out
popa
enter
pop
cmpl
je
push
push
shr
xor
push
or
inc
add
add
rol
sub
xor
ror
rol
pop
shl
add
inc
pop
push
push
push
push
push
call
clc
adcl
add
add
mov
ja
add
mov
insb
add
ljmp
in
pushf
cld
popf
add
add
fsub
mov
fbstp
in
in
pop
push
push
lea
push
push
lea
push
push
push
lea
push
call
add
movsl
mov
data16
leave
test
mov
jecxz
enter
add
add
ret
stos
add
test
add
in
call
push
push
lea
push
lea
push
push
call
add
in
imul
arpl
mov
out
add
add
mov
add
loope
mov
pop
xchg
aam
mov
add
add
add
mov
pusha
mov
addb
add
lret
add
add
dec
icebp
add
in
in
lcall
cmp
rol
je
push
push
rol
xor
push
xor
add
add
inc
sub
shl
sub
lea
sub
pop
lea
pop
push
push
push
push
lea
push
push
call
add
scas
mov
mov
add
jo
add
fstl
flds
push
nop
add
loopne
stc
jo
jl
cmpsl
lea
hlt
add
mov
cmc
nop
add
mov
xchg
jge
mov
in
add
lds
push
bound
mov
jecxz
add
sub
pop
push
push
push
lea
push
push
push
push
call
add
mov
add
hlt
flds
les
fiaddl
mov
cld
add
add
pop
add
jne
test
xchg
in
jnp
add
add
xlat
add
add
add
pusha
add
mov
jo
pop
pop
filds
imul
pop
xchg
lcall
and
add
cmpl
je
push
push
xor
push
and
add
inc
shr
sub
dec
shr
pop
sub
pop
push
push
push
push
push
call
in
add
jl
mov
jbe
out
add
int3
add
mov
add
add
mov
test
rol
sub
pop
push
push
add
pop
call
cmpl
je
push
push
push
sub
add
not
dec
shl
sub
add
lea
add
pop
xor
inc
inc
pop
push
add
not
pop
push
call
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
add
add
jnp
call
add
add
out
add
add
popf
sbb
mov
add
push
loopne
pushf
pop
add
andl
lea
jge
xchg
mov
add
add
mov
in
fdivr
lcall
js
int3
fldz
ret
lret
add
add
inc
mov
push
add
push
sub
add
xor
shr
sub
rol
shr
pop
rol
add
pop
push
sub
inc
ror
pop
push
call
push
lea
shl
sub
pop
cmpl
je
push
push
xor
dec
push
xor
add
shl
dec
sub
xor
pop
dec
shr
pop
push
shl
xor
pop
push
call
push
lea
push
push
push
lea
push
push
push
call
add
ja
add
lret
add
jnp
cmpsl
hlt
imulb
enter
add
ja
mov
add
add
addr16
iret
mov
pop
mov
out
add
add
add
jle
sub
pop
cmpl
je
push
push
sub
not
sub
push
or
not
add
add
sub
ror
shr
lea
pop
shr
inc
pop
push
not
inc
sub
shl
pop
push
push
dec
inc
shr
dec
pop
call
cmpl
je
push
push
shl
sub
push
push
pop
add
dec
sub
sub
ror
dec
pop
ror
sub
pop
push
sub
pop
push
push
push
lea
push
push
lea
push
call
push
scas
lds
in
add
fwait
mov
imul
cltd
mov
aad
outsl
lock
add
add
out
add
stos
add
ja
pop
add
fwait
mov
lahf
add
add
add
mov
add
stos
hlt
add
jp
out
mov
push
add
add
add
fiadds
add
lcall
call
not
pop
cmpl
je
push
push
inc
inc
push
xor
add
not
shl
shr
rol
sub
shl
shl
sub
pop
inc
add
pop
push
not
sub
pop
push
push
push
push
push
push
push
lea
push
push
call
mov
xchg
fucomp
in
popa
add
add
push
mov
lret
xchg
out
fiadds
jecxz
cmpsb
add
lods
add
pop
divl
mov
add
bound
add
aad
pusha
mov
jp
add
xchg
jo
add
leave
testb
hlt
xchg
add
add
push
das
add
cmpl
jne
push
inc
pop
mov
movl
push
lea
shl
ror
pop
jmp
push
push
push
push
push
call
add
add
fs
add
add
jge
cli
mov
add
mov
cmpsl
add
add
add
add
jecxz
incb
jno
mov
add
add
sub
pop
xor
push
lea
push
call
fldt
add
test
add
add
data16
stos
loop
jo
out
jmp
jmp
add
add
push
add
lds
int3
mov
mov
add
add
add
call
in
clc
lcall
pop
push
lea
push
push
push
push
call
add
xchg
jle
sahf
sahf
add
add
add
xchg
add
add
mov
arpl
add
insb
push
fadds
mov
push
nop
cmpsb
add
mov
push
lea
add
roll
movb
add
movsl
pusha
mov
jae
add
imul
in
in
pop
pop
push
lea
push
call
jnp
add
jne
mov
leave
add
out
add
add
add
add
add
jne
push
lret
jae
sub
pop
pop
push
lea
push
push
push
lea
push
push
call
pop
lods
lock
jbe
add
push
add
cmpsl
add
data16
add
data16
out
add
add
add
add
mov
sti
aam
arpl
add
cmpsb
add
shrl
fildl
cld
jo
loop
add
cwtl
add
leave
add
popl
shrb
sub
pop
leave
push
push
push
push
push
push
push
push
lea
push
call
rolb
jne
add
testl
add
aam
jne
mov
add
pop
push
add
movl
imul
pop
ja
mov
add
add
cld
in
jp
aad
rol
fsubp
mov
pop
push
or
add
sub
pop
ret
push
push
push
push
lea
push
push
push
push
call
out
add
add
ljmp
add
add
lds
push
jnp
add
cltd
imul
icebp
push
gs
mov
add
mov
mov
stos
add
jae
add
xchg
add
pop
add
movl
ljmp
hlt
mov
add
pusha
les
add
in
pop
sub
pop
push
mov
push
push
push
push
push
push
push
push
lea
push
push
call
nop
mov
faddl
out
pop
add
xlat
jno
fdiv
add
cltd
push
add
gs
fwait
add
xchg
add
xchg
add
add
fs
push
add
test
xchg
jae
xchg
fs
add
dec
stc
add
push
add
add
add
mov
movl
lahf
test
jo
sub
pop
add
cmpl
jne
push
push
lea
ror
push
sub
add
inc
not
lea
sub
not
lea
sub
pop
xor
pop
push
push
push
push
push
push
push
push
call
loop
mov
add
lock
std
add
add
add
add
fdivrs
hlt
ja
shlb
stc
cmpsl
mov
add
test
add
mov
add
test
add
add
add
fildl
loopne
lcall
jne
call
push
not
xor
sub
pop
push
push
push
push
push
push
push
push
push
push
call
lahf
push
call
int
pop
add
mov
add
lcall
flds
add
add
add
add
add
mov
in
add
mov
lret
add
test
add
xchg
mov
popa
add
mov
add
out
add
sub
pop
call
jmp
push
lea
rol
shl
pop
cmpl
je
push
push
push
call
fadds
add
sar
jp
pusha
mov
push
rolb
hlt
mov
loop
sahf
pop
out
jecxz
pop
add
add
lods
mov
addb
jle
lock
add
out
mov
scas
addl
add
add
add
fnsetpm(287
mov
add
sub
pop
cmpl
jne
push
sub
pop
mov
push
lea
push
push
push
push
lea
push
lea
push
push
call
push
xchg
add
movsb
mov
not
mov
hlt
mov
add
stos
jb
test
mov
ret
add
mov
popl
test
push
add
add
enter
data16
add
lds
push
rolb
mov
insb
sub
pop
call
ret
push
lea
push
push
lea
push
push
push
push
push
call
add
lods
mov
add
add
cld
add
lret
add
out
xchg
out
add
sahf
add
insb
pushf
sarl
add
add
les
add
roll
sub
pop
jmp
cmpl
jne
push
push
add
rol
ror
push
push
pop
add
inc
xor
sub
sub
sub
sub
ror
dec
pop
shr
ror
pop
push
not
add
shr
sub
pop
pushl
push
push
lea
push
lea
push
push
push
call
les
lcall
add
pop
je
xchg
xchg
fwait
pop
add
mov
add
in
jns
addb
jle
in
push
mov
add
add
leave
jmp
test
bound
imul
add
je
in
call
add
push
sub
pop
push
push
add
sub
add
pop
call
jmp
push
lea
push
push
push
push
push
push
push
push
call
xchg
add
fadds
mov
bound
add
jae
add
pop
repnz
cmc
in
pop
mov
into
imul
pop
jle
jo
mov
mov
mov
movsb
jns
scas
mov
jmp
lahf
iret
add
mov
jo
push
mov
lret
jmp
decb
in
fcompl
jge
add
test
push
push
push
push
lea
push
push
push
push
lea
push
call
add
xchg
add
testl
lock
lods
mov
push
insb
add
pop
popf
add
mov
pushf
jo
add
in
add
add
push
add
mov
sub
pop
mov
push
sub
inc
pop
mov
push
push
lea
push
push
push
lea
push
call
add
cld
jnp
fnstsw
jp
add
jge
add
incb
add
jge
push
mov
add
rolb
pushf
add
mov
stos
iret
jecxz
clc
add
add
roll
mov
add
add
add
add
add
lcall
push
push
inc
push
push
pop
add
inc
sub
pop
inc
sub
pop
push
push
push
push
push
call
adcl
push
jb
xchg
jge
add
add
jge
xlat
mov
add
add
pop
pop
add
jne
push
push
push
push
push
lea
push
push
push
lea
push
lea
push
call
fisubrs
add
popa
pop
add
add
fld
cmpsb
test
mov
add
add
enter
repnz
add
test
push
add
add
jo
hlt
add
jmp
out
push
add
loop
add
clc
xchg
xlat
je
push
pop
cmpsl
shrb
push
add
sub
pop
call
call
push
push
rol
sub
not
sub
push
and
add
lea
add
add
shr
sub
not
ror
pop
shl
not
pop
push
push
push
call
mov
mov
add
out
add
cmc
pop
clc
leave
in
rolb
mov
mov
lods
add
jle
mov
shrl
add
pop
cli
cmpsl
out
addr16
add
add
sub
pop
pushl
call
push
lea
push
lea
push
push
call
outsl
repnz
int3
pop
mov
movb
loopne
add
push
add
ret
pop
loope
xchg
add
addl
sti
mov
incb
mov
cltd
add
arpl
sub
pop
call
push
push
add
shl
push
xor
add
inc
add
sub
add
pop
xor
add
pop
push
lea
push
lea
push
lea
push
push
push
call
imul
add
roll
add
fiaddl
jge
jno
test
jl
jp
jge
cmpsl
gs
add
add
fld
out
push
add
lds
gs
imul
stc
sahf
loop
push
xlat
add
mov
hlt
mov
repnz
push
sub
pop
pushl
push
pop
call
push
push
push
push
push
call
add
mov
pop
mov
jnp
lcall
xchg
add
std
std
add
xchg
add
add
test
mov
mov
cwtl
add
in
in
pop
call
push
push
ror
lea
sub
push
xor
add
sub
sub
shr
sub
shr
add
sub
pop
shl
rol
pop
push
pop
pushl
push
push
push
push
push
push
lea
push
push
push
call
add
loopne
add
mov
mov
roll
mov
testb
jl
lds
add
add
loop
mov
mov
add
add
imul
add
js
lret
cli
add
popa
popa
add
call
push
push
push
push
push
push
lea
push
call
cwtl
data16
hlt
add
add
add
push
mov
add
add
mov
mov
test
repnz
jecxz
mov
push
scas
ljmp
mov
loop
add
mov
sub
pop
call
push
push
ror
lea
push
xor
add
rol
dec
sub
shr
add
add
sub
pop
pop
push
push
call
ljmp
hlt
add
mov
shlb
add
add
add
jne
popf
in
js
add
add
aam
cld
mov
cmpsl
add
sarl
cld
add
loopne
outsl
in
ja
in
clc
pop
pushl
call
push
push
call
add
push
aad
add
arpl
add
add
add
pusha
mov
fistl
add
ja
add
scas
jmp
xchg
pop
fdivr
bound
jge
mov
add
addl
int3
sub
pop
call
push
push
inc
push
or
inc
add
sub
lea
add
xor
pop
xor
pop
push
rol
rol
sub
pop
pushl
push
rol
pop
call
push
push
call
lea
in
add
out
add
out
add
add
add
mov
add
add
cmpsl
xchg
add
add
mov
lds
add
fistl
pop
call
push
push
xor
shr
shl
push
and
add
ror
sub
lea
pop
sub
ror
sub
xor
pop
push
add
inc
dec
pop
pushl
push
add
sub
sub
pop
call
call
push
push
inc
inc
add
xor
push
or
not
add
inc
sub
xor
shr
dec
add
pop
shl
pop
push
push
push
push
push
push
push
push
push
call
add
push
pop
add
add
mov
lds
add
jmp
outsl
cli
jmp
jp
add
mov
test
lcall
jne
call
push
dec
pop
call
push
push
sub
push
xor
add
add
rol
shr
inc
sub
inc
pop
add
rol
pop
push
pop
pushl
push
rol
shr
sub
shr
pop
call
push
push
push
call
add
and
jmp
mov
gs
mov
scas
not
mov
xchg
pop
add
add
add
add
jecxz
scas
add
push
fildl
jl
xchg
pop
call
mov
icebp
push
xchg
add
lcall
enter
jbe
add
sub
pop
call
push
push
not
push
push
pop
add
shr
shl
sub
shl
shl
pop
rol
xor
shr
pop
push
shr
rol
pop
pushl
push
pop
call
lea
push
push
lea
push
push
lea
push
push
push
push
push
push
call
sub
fsts
js
add
cwtl
jo
loopne
add
add
js
add
add
out
mov
aam
add
add
xlat
faddl
add
movsb
xchg
add
add
add
mov
add
out
add
lcall
push
dec
lea
shr
pop
call
push
push
add
rol
rol
push
or
not
add
dec
shl
ror
sub
shr
not
xor
pop
shl
pop
push
shl
pop
pushl
push
xor
pop
call
push
lea
push
push
push
push
call
aad
rcll
notl
pusha
mov
add
lcall
imul
movsl
mov
push
add
add
roll
popf
sti
mov
insb
icebp
add
gs
mov
cli
add
test
addb
in
in
lcall
shrb
test
mov
add
lea
lea
push
push
pop
add
shl
dec
sub
add
shr
not
pop
pop
push
push
push
lea
push
call
push
rolb
pushf
add
mov
add
add
add
add
mov
outsl
aad
stos
add
popa
aam
jae
add
add
add
add
int3
add
rolb
addr16
add
add
add
push
add
insb
add
lcall
jne
push
lea
lea
not
pop
call
push
push
push
push
push
push
lea
push
call
add
add
pop
add
xchg
mov
ja
jecxz
add
add
add
add
add
addb
add
sub
pop
call
push
push
rol
push
push
pop
add
dec
sub
sub
not
dec
pop
xor
dec
sub
add
pop
push
lea
push
push
push
push
push
push
lea
push
call
cld
add
pop
jb
repnz
add
faddl
sahf
mov
mov
mov
add
loop
add
add
into
add
add
xorb
into
in
fists
pop
stos
sahf
push
fwait
in
jl
add
jae
mov
add
mov
cmpl
add
std
mov
lcall
jne
call
push
push
lea
push
push
lea
push
lea
push
push
push
call
add
mov
lods
mov
flds
add
xchg
lret
mov
cmpsb
add
mov
pop
add
add
add
jp
jo
stos
xchg
lcall
cli
add
add
xchg
jecxz
add
add
fnstsw
add
jge
fnstenv
mov
in
loopne
call
push
push
rol
sub
sub
push
sub
add
add
sub
lea
inc
sub
not
ror
dec
pop
pop
push
dec
pop
pushl
call
push
push
push
or
inc
add
lea
sub
rol
rol
sub
shl
pop
ror
pop
push
push
sub
inc
push
push
pop
add
sub
dec
shl
shr
sub
sub
lea
pop
shl
shl
not
sub
pop
push
lea
push
call
mov
lock
mov
mov
push
xchg
movsb
fcmove
out
flds
add
addr16
filds
add
loop
mov
xchg
ja
add
out
sub
pop
call
push
push
push
push
lea
push
push
push
push
push
call
out
add
jo
push
add
add
out
add
add
pop
xchg
int
xlat
add
pop
bnd
movsl
loope
movb
scas
jnp
add
imul
add
roll
fiadds
pop
fwait
xchg
add
add
lds
arpl
in
add
popaw
imul
sbbl
lcall
dec
jne
push
push
lea
push
lea
push
lea
push
push
push
call
mov
cmc
fcomp
movsl
add
add
add
xlat
add
fs
add
fcomp
cmpsb
leave
add
fcompl
add
hlt
sarb
pop
aam
sbbl
in
in
call
push
push
push
and
add
dec
ror
add
sub
sub
xor
pop
xor
pop
push
sub
inc
shr
pop
pushl
push
push
push
push
lea
push
push
call
add
add
xchg
stos
add
loope
add
hlt
lcall
add
add
je
nop
aam
add
aad
popa
mov
decb
lcall
call
lea
push
push
lea
push
push
call
xchg
rolb
fnstcw
std
fisttps
mov
add
lret
int3
mov
add
mov
cli
int
push
mov
add
stos
sub
pop
push
push
add
rol
ror
add
pop
call
mov
push
push
sub
push
or
inc
add
sub
inc
sub
add
add
lea
shr
pop
sub
pop
push
push
push
push
push
push
push
call
loope
add
pushf
fwait
mov
adcb
into
add
add
add
add
add
ror
push
add
gs
add
mov
add
icebp
add
fistl
add
xchg
je
stc
add
mov
jo
bound
jne
push
sub
sub
rol
pop
call
lea
push
add
ror
pop
push
push
push
ror
pop
push
push
push
push
push
lea
push
push
push
push
call
cmc
add
addr16
add
add
add
mov
add
roll
xchg
add
pop
push
call
push
xor
sub
rol
pop
lea
push
push
shr
ror
add
push
or
inc
add
lea
sub
not
add
rol
pop
dec
lea
lea
rol
pop
push
push
push
push
lea
push
push
lea
push
lea
push
push
call
mov
pop
push
xchg
xchg
pop
out
mov
clc
jle
les
add
add
add
xchg
ret
add
add
stos
imul
imul
push
into
fdivrs
add
add
lock
jmp
lcall
jne
push
push
call
mov
pusha
add
add
ljmp
add
mov
jge
add
jo
add
popa
add
add
add
add
out
jp
add
add
sub
pop
call
push
push
push
push
lea
push
push
push
lea
push
call
clc
add
jmp
incb
mov
add
imulb
mov
mov
push
add
add
jmp
shll
add
sti
add
push
mov
std
xchg
add
lret
fmulp
add
xchg
push
jnp
iret
add
push
mov
aam
stos
cmpsl
jb
add
sub
pop
push
push
push
push
push
call
mov
shr
add
lahf
add
mov
mov
andl
pop
add
ret
in
lock
call
push
push
inc
shl
push
xor
add
inc
sub
lea
pop
inc
sub
dec
pop
push
push
push
lea
push
call
xchg
scas
add
add
add
flds
int3
add
mov
mov
add
jp
add
add
add
clc
cmpl
add
add
mov
jne
sar
xchg
sar
jecxz
out
jge
sahf
add
mov
jne
movl
jne
push
push
push
push
push
lea
push
lea
push
push
call
mov
xchg
pushf
mov
mov
add
push
and
adc
add
testl
stos
out
add
cmpsb
fists
fnsave
clc
pusha
std
mov
out
mov
fadds
les
add
shlb
add
fadds
jp
add
call
push
shl
pop
mov
lea
push
push
shr
shr
add
push
and
add
inc
add
sub
shr
not
dec
sub
pop
add
add
xor
pop
push
push
push
push
call
imul
repnz
push
add
add
jp
add
add
ja
test
nop
add
out
add
add
les
in
sti
add
add
lret
lahf
add
stos
mov
shlb
add
sub
pop
pushl
push
push
push
push
push
push
lea
push
call
out
stos
add
add
xchg
xchg
int
pusha
add
icebp
test
fwait
add
jmp
ja
jae
add
xchg
jnp
add
mov
jns
add
jb
js
xchg
pushf
add
xchg
add
test
stos
mov
mov
rcrb
std
jnp
loope
in
add
add
add
loope
in
in
call
lea
push
sub
rol
pop
push
push
push
call
jo
add
add
fwait
ja
popf
add
push
int3
xchg
cli
scas
jb
push
into
add
add
lret
add
mov
add
rolb
add
mov
jns
add
mov
pop
xchg
add
movsl
add
xchg
sub
pop
push
push
push
not
add
pop
pushl
push
push
add
add
lea
push
xor
add
xor
sub
not
add
pop
add
pop
push
push
call
mov
addb
add
push
add
notl
popa
in
add
fimull
add
fwait
jne
push
add
mov
out
mov
iret
add
add
stos
fcoms
aad
add
add
add
push
rol
rol
add
pop
call
push
push
lea
lea
push
or
not
add
xor
sub
shr
sub
xor
lea
pop
inc
shl
pop
push
lea
push
push
call
add
test
add
addl
clc
add
cli
add
cltd
pop
js
lds
test
add
xchg
add
add
testl
xchg
add
into
add
add
fwait
xchg
loope
add
imul
mov
in
hlt
pop
pushl
push
xor
pop
call
push
push
sub
add
sub
pop
call
push
push
add
add
push
and
add
shr
dec
ror
shr
sub
rol
pop
add
pop
push
rol
shr
shr
pop
pushl
push
push
push
call
add
xchg
add
je
call
mov
fs
test
out
mov
lret
out
rcll
stos
roll
add
faddl
add
test
mov
add
loopne
add
mov
outsl
add
icebp
add
add
add
add
add
sub
pop
call
call
push
sub
pop
jmp
push
push
lea
push
lea
push
call
stos
jne
add
add
mov
stc
outsl
add
add
test
loope
mov
add
add
stc
add
aad
cli
lods
push
fdivl
pushl
push
inc
shr
pop
mov
push
push
push
call
cld
mov
add
int
clc
add
add
add
lahf
loop
iret
add
xchg
mov
shrl
add
aad
mov
jbe
xchg
jae
fs
sub
pop
jmp
push
push
lea
push
or
inc
add
inc
inc
sub
sub
inc
pop
add
pop
push
push
push
push
lea
push
push
call
imul
add
add
add
in
add
nop
jae
pop
add
cmc
mov
add
push
add
mov
pop
add
mov
add
add
out
ret
jbe
in
call
pushl
push
dec
not
pop
call
push
lea
pop
push
push
shr
xor
lea
pop
call
push
push
shr
push
xor
add
ror
not
dec
sub
ror
pop
inc
dec
xor
sub
pop
push
lea
push
push
lea
push
lea
push
lea
push
lea
push
push
call
add
push
jne
xchg
popfw
add
xchg
xlat
fs
fsubrl
mov
addb
add
scas
out
ljmp
pop
sub
pop
pushl
push
push
push
push
push
push
push
call
add
shlb
lds
jl
lret
add
iret
mov
lret
add
clc
fcompl
add
xchg
xchg
push
add
mov
ret
add
xlat
add
fists
add
mov
jbe
ja
and
add
add
add
xchg
jle
in
in
call
push
lea
sub
pop
push
push
push
call
std
movsb
scas
add
jle
out
add
shlb
push
mov
pop
stos
xlat
call
leave
add
jl
pop
add
ret
push
add
add
xchg
mov
int
ljmp
call
push
push
push
call
jno
mov
add
cltd
mov
test
addr16
xchg
jb
mov
jl
mov
cmpsl
fisubl
add
add
sarb
mov
or
jae
add
vpshlb
fisubrl
push
shr
pop
add
pop
push
add
pop
pop
pop
push
push
lea
push
push
push
push
lea
push
push
call
mov
add
cli
add
add
add
andb
add
addr16
pop
add
mov
add
add
add
add
add
cli
xchg
add
addb
inc
push
dec
shr
pop
ret
push
inc
shr
xor
add
pop
leave
ret
push
push
push
push
lea
push
call
xchg
shrb
add
mov
sahf
movl
mov
loop
add
nop
jl
stc
testb
mov
testl
mov
leave
add
add
add
mov
lea
xlat
sub
pop
push
push
not
sub
add
not
pop
mov
push
push
push
lea
push
lea
push
push
push
push
call
flds
add
jl
xchg
add
movb
mov
add
add
push
mov
add
add
addl
add
mov
add
out
mov
add
lods
sub
pop
cmpl
jne
push
rol
inc
pop
mov
push
ror
lea
not
pop
jmp
push
push
push
push
push
push
push
push
lea
push
call
cmpsl
mov
add
imul
stc
cli
roll
add
add
add
int3
nop
add
add
mov
add
add
add
sar
mov
lcall
inc
or
popf
push
push
push
lea
push
push
push
lea
push
push
call
add
shlb
outsl
mov
rol
xchg
add
push
add
add
sub
push
jp
xchg
add
mov
popf
clc
scas
add
pop
jb
add
mov
jmp
mov
aam
in
push
mov
scas
push
shrl
mov
orb
sub
pop
and
push
pop
xor
push
push
push
push
push
push
push
push
call
nop
add
roll
add
add
fildl
mov
add
add
jne
jne
in
push
lcall
add
cli
add
std
add
add
pop
popa
mov
rolb
ret
sub
pop
xor
push
sub
xor
pop
add
push
dec
sub
shr
xor
pop
xor
push
push
call
add
lahf
movsb
add
add
add
loope
add
in
add
add
add
add
outsl
add
add
mov
out
pop
test
add
out
lds
jne
add
cltd
rorb
jmp
movsb
filds
push
rol
xor
sub
pop
sub
push
inc
shr
rol
xor
pop
jmp
push
ror
shl
xor
inc
pop
sub
push
lea
push
push
lea
push
push
push
push
call
add
add
mov
imul
add
loopne
add
add
mov
cwtl
add
out
add
add
in
lcall
xor
inc
not
add
pop
sub
push
push
push
lea
push
call
cld
add
pusha
pushf
add
add
add
add
divb
add
fiadds
rcrb
bound
mov
add
arpl
add
lcall
cmp
cmp
dec
shl
add
pop
mov
lea
push
push
call
add
nop
mov
rcr
stos
xchg
add
xlat
add
add
in
roll
add
add
add
mov
addb
testb
add
cmpsl
add
jecxz
shlb
add
add
imulb
mov
jb
add
jo
gs
fiaddl
fimuls
in
clc
lcall
jmp
shr
shl
pop
shr
add
push
inc
ror
pop
sub
pushl
push
shr
not
sub
pop
pop
push
shl
shr
pop
shr
and
push
xor
pop
sub
push
sub
rol
pop
cmp
jne
push
push
push
push
push
lea
push
call
mov
lods
mul
add
mov
loop
mov
add
add
push
jmp
jne
mov
test
push
fwait
mov
repnz
add
mov
add
fiaddl
add
add
add
sub
pop
leave
ret
push
inc
pop
push
push
sub
pop
mov
push
add
pop
add
push
xor
xor
pop
push
push
push
push
push
push
push
call
push
shrl
mov
cmpsb
add
int
add
pop
nop
lods
cld
push
divb
out
testl
ja
out
testb
hlt
call
addb
add
add
jecxz
add
add
push
ljmp
mov
pop
push
push
xor
pop
push
push
push
add
dec
pop
mov
push
shr
dec
dec
pop
lea
push
inc
pop
sub
push
push
lea
push
push
push
push
push
lea
push
call
in
add
pushf
jae
out
add
sbbb
xchg
mov
xchg
lods
add
push
clc
add
add
out
sahf
add
add
mov
cli
add
popf
mov
mov
roll
add
jmp
add
pusha
in
roll
jne
add
call
bound
add
add
imul
mov
fs
loopne
add
adc
roll
aam
rcrl
ljmp
jmp
ficoml
mov
push
push
push
lea
push
push
push
push
lea
push
call
aad
mov
add
add
add
pop
movsb
add
push
bound
xchg
leave
add
add
lock
add
add
add
mov
add
mov
xchg
add
add
pop
add
add
add
outsl
add
in
roll
addb
add
in
fdivr
lcall
fwait
addb
add
pop
or
aad
ljmp
or
jge
push
push
push
push
call
add
add
loop
jge
xchg
add
jo
scas
insb
add
mov
bound
pop
jp
incb
mov
pop
add
add
fidivl
in
lock
lcall
notb
rcrl
xlat
push
lea
push
push
push
push
push
call
add
pop
add
add
test
push
sti
push
mov
jmp
add
add
add
out
jns
add
add
push
add
mov
add
ficoml
out
add
sahf
add
add
js
sub
pop
and
rol
push
ror
add
pop
rol
push
xor
pop
xor
push
push
push
push
push
push
push
lea
push
push
call
mov
add
fadds
xlat
testb
bound
arpl
add
int3
mov
fwait
outsl
lret
add
mov
add
sahf
add
xchg
iret
fsubs
mov
add
add
add
movsl
add
loop
pop
fbld
fdivr
lcall
cmpb
jne
push
push
push
push
push
push
push
call
test
xchg
out
add
sub
add
popa
out
add
ljmp
data16
rorl
mov
je
faddl
jnp
movb
mov
add
add
push
call
stc
add
mov
mov
test
fs
std
scas
add
add
mov
add
stc
stc
jle
sub
pop
add
push
push
push
lea
push
push
lea
push
push
push
push
push
call
sahf
add
lahf
mov
push
add
mov
pop
fstps
jb
add
out
add
push
loopne
out
add
arpl
cmp
je
push
push
push
lea
push
call
addl
scas
pop
mov
add
mov
filds
add
int3
add
add
add
pop
imul
popa
test
test
add
push
addb
mov
clc
add
xlat
mov
xchg
add
add
add
cmpl
jne
push
add
add
pop
xor
push
ror
lea
shr
pop
pop
pop
push
sub
xor
pop
pop
push
push
lea
push
push
push
push
push
lea
push
push
call
ja
fiaddl
jl
pop
lds
xchg
mov
call
xorb
add
mov
jno
add
push
add
add
add
add
xorl
jae
push
clc
xchg
fstps
add
push
mov
mov
push
sub
pop
pop
push
push
call
add
cwtl
jae
add
add
add
pop
lret
jl
test
add
pop
push
test
add
mov
push
lcall
add
scas
add
int
clc
scas
jmp
movsb
add
add
add
xchg
repnz
add
clc
lcall
push
push
push
push
lea
push
push
push
lea
push
call
add
xlat
movb
mov
cmc
cld
test
insb
lds
mov
add
cld
mov
arpl
add
lahf
into
mov
add
pop
ret
mov
loopne
leave
push
rol
shl
pop
ret
push
inc
not
rol
pop
mov
push
push
push
push
lea
push
push
push
push
push
push
call
add
add
add
mov
movsl
add
mov
xchg
jae
push
mov
add
leave
mov
fildl
push
icebp
scas
testl
movb
jecxz
fidivrs
add
xchg
lods
test
arpl
rcl
sbbb
add
fcomps
add
pop
ljmp
add
sub
pop
add
push
push
push
push
push
call
add
push
cld
mov
ja
add
mov
mov
mov
mov
rolb
xchg
jmp
xlat
add
add
push
ja
frstor
mov
xchg
add
add
add
add
loop
jge
add
shrb
aam
in
add
mov
add
jp
in
in
pop
mov
push
push
push
push
lea
push
call
add
xchg
into
add
popf
pop
in
add
jae
xchg
nop
jae
clc
jbe
add
pushf
add
add
add
add
pushf
mov
fdivl
faddl
sub
pop
mulb
push
rol
lea
rol
add
pop
pop
call
push
not
lea
ror
pop
push
push
push
push
lea
push
push
call
icebp
loopne
jne
jo
fdivr
add
int3
aam
movsb
outsl
xchg
loope
je
xlat
clc
imul
add
add
hlt
xchg
mov
outsl
out
std
add
mov
in
cltd
pop
add
add
imul
scas
repnz
pop
lock
shl
add
add
movb
mov
add
mov
rol
pop
xor
push
push
push
push
lea
push
push
lea
push
push
call
pop
pop
add
push
cld
mov
stos
stc
pop
jne
add
lods
add
ficompl
mov
movsl
add
add
and
mov
ret
add
bound
lcall
lret
incb
xchg
add
add
add
loopne
lcall
push
inc
lea
pop
pop
pop
push
ror
sub
pop
pop
pop
push
lea
push
push
push
lea
push
push
push
lea
push
call
jns
fcom
jnp
add
add
fiaddl
ljmp
int
fwait
mov
nop
iret
add
bound
test
add
out
add
add
jge
jo
add
add
jmp
ret
add
add
je
add
xchg
add
push
add
mov
gs
jmp
sub
pop
leave
push
shl
shr
pop
ret
push
push
push
push
push
lea
push
lea
push
call
pop
add
add
lcall
movsb
test
fwait
pushf
testb
in
fsubl
shlb
lods
int
add
jmp
stos
je
add
mov
in
sahf
add
in
add
int
push
add
add
xchg
add
add
fisubs
insb
jge
add
add
aad
in
in
lcall
mov
push
lea
push
lea
push
push
push
lea
push
push
lea
push
lea
push
lea
push
call
ja
add
mov
push
out
fmul
mov
add
add
add
add
mul
test
data16
add
add
mov
sahf
add
jo
cmc
addw
add
stos
add
pop
lods
imul
sub
pop
add
push
push
shl
sub
pop
push
push
push
push
push
push
lea
push
push
lea
push
call
mov
mov
add
push
xchg
add
pop
mov
add
mov
int
mov
popl
jns
mov
add
scas
int3
jae
movsl
add
add
sti
add
add
add
stos
fstpl
test
sti
jbe
cmpsl
add
into
xchg
loope
mov
in
push
push
lea
push
push
call
into
add
add
add
mov
add
std
add
roll
in
ljmp
push
out
out
add
jns
enter
iret
lret
add
int
add
iret
aam
add
add
movsl
add
in
add
push
add
mov
add
fcoms
mov
testl
or
ret
test
orb
push
dec
pop
pop
push
push
push
call
add
add
cli
movsb
xchg
add
mov
js
add
out
xchg
mov
add
mov
jno
add
bound
pop
scas
jge
add
add
add
mov
add
add
hlt
lcall
push
cmp
ror
add
pop
sub
push
add
shr
inc
pop
mov
push
inc
xor
pop
shr
add
push
ror
pop
mov
add
push
ror
add
pop
pushl
popl
push
push
push
call
enter
scas
lret
jb
pop
imul
fmul
test
jle
lret
add
xchg
in
add
lods
mov
in
ja
add
add
gs
mov
sub
pop
mov
push
lea
push
push
lea
push
push
push
lea
push
call
add
mov
pop
xchg
jmp
in
add
mov
add
xchg
add
cmpsl
int
aam
xchg
push
jno
add
jecxz
leave
xchg
mov
pop
imul
xchg
fiadds
sub
pop
add
xor
push
shl
add
pop
lea
push
push
push
push
call
add
mov
jmp
add
add
add
fs
stos
add
pop
add
add
test
mov
enter
jl
add
add
sub
pop
mov
push
push
push
push
push
push
lea
push
push
call
movsl
add
mov
add
std
add
add
nop
addr16
add
xchg
add
lret
ror
mov
arpl
add
mov
push
add
add
add
fiaddl
add
lret
aad
adc
add
addr16
jp
add
iret
add
xchg
add
add
xlat
js
xchg
sub
pop
add
push
inc
sub
add
not
pop
xor
push
lea
shr
pop
rol
nop
push
push
push
lea
push
call
jns
add
add
repnz
bound
add
mov
xchg
jnp
push
call
add
hlt
add
add
add
xchg
add
push
fildll
pop
sub
pop
nop
push
push
push
push
lea
push
push
push
lea
push
call
movsb
lods
in
add
jmp
loop
or
sbb
add
add
into
fwait
test
out
fcom
add
imul
add
sti
add
jo
add
fs
add
jecxz
add
in
loopne
lcall
add
jbe
push
push
push
push
push
push
push
call
add
mov
iret
add
fisubrl
add
stos
pusha
add
jge
mov
ret
lea
jo
add
ja
add
cld
push
xchg
pop
push
mov
lods
mov
mov
mov
jnp
add
add
pusha
out
add
gs
flds
add
leave
out
je
add
mov
sub
pop
nop
push
add
sub
lea
pop
nop
inc
push
xor
sub
lea
shl
pop
nop
push
lea
push
push
lea
push
push
lea
push
call
add
mov
add
movb
nop
jno
add
in
add
add
add
arpl
stc
mov
add
push
cmc
fistpl
addb
hlt
add
add
movb
add
add
push
shl
into
add
sub
pop
nop
push
lea
push
push
push
call
jb
fs
add
mov
rclb
imul
xchg
add
popf
add
mov
add
movsb
lret
int3
add
cmp
jne
push
shl
pop
add
push
push
push
push
push
push
call
lods
shll
in
add
sarb
or
addb
add
test
add
mov
push
xchg
xlat
in
lock
bound
in
test
add
xlat
shlb
add
add
add
loope
fdivrl
je
add
mov
mov
outsl
out
sub
pop
nop
push
inc
dec
sub
pop
nop
push
push
lea
push
push
push
lea
push
lea
push
lea
push
push
call
jle
lret
add
cmpsl
shr
popa
push
ljmp
rclb
push
mov
push
fsubrl
scas
enter
addb
pushf
mov
mov
mov
in
fcompl
inc
or
test
push
push
push
lea
push
push
push
push
call
add
add
loop
rolb
shll
mov
and
add
push
test
arpl
insb
add
add
stos
xchg
out
add
add
filds
push
in
add
pop
shl
add
add
mov
add
push
mov
add
add
insb
add
push
add
loopne
nop
push
sub
add
shl
pop
nop
inc
push
lea
push
push
push
push
lea
push
push
push
push
push
call
add
rclb
add
out
loope
add
ljmp
stos
add
nop
pop
add
add
xchg
mov
add
xchg
enter
push
mov
pop
jmp
push
add
jl
add
add
add
add
out
stos
lods
xchg
lods
faddl
lcall
nop
push
push
push
lea
push
push
lea
push
call
cmpsl
add
add
sti
stos
popf
je
xorb
add
mov
add
add
int
add
rcr
stos
push
jmp
add
add
jb
mov
lcall
add
add
add
in
call
jb
push
push
push
push
lea
push
lea
push
push
push
call
in
mov
fstpt
mov
lock
add
jle
add
lahf
add
gs
int
mov
add
out
xchg
movsb
clc
add
pop
sub
pop
xor
push
shl
pop
jmp
push
push
push
lea
push
call
in
add
add
notl
iret
add
fs
push
add
out
pusha
add
add
add
add
loopne
fsts
add
mov
test
push
scas
add
add
mov
add
mov
in
lock
mov
push
add
sub
pop
add
push
lea
push
push
push
push
lea
push
call
imul
add
jb
pop
add
add
jb
aam
lret
push
loopne
out
fwait
add
ja
add
lea
loope
add
cld
fwait
add
mov
js
add
push
jmp
add
add
add
add
lcall
mov
jb
inc
sbb
ror
add
pop
add
mov
push
lea
push
push
push
call
xchg
add
lea
add
in
sti
add
sahf
add
jp
add
in
add
add
add
push
add
push
cmpsl
add
add
pop
and
fs
add
xorb
xchg
add
mov
add
sub
pop
xor
xor
push
ror
xor
pop
shl
push
inc
pop
xor
push
push
push
push
push
call
jge
add
mov
sahf
mov
add
js
add
loopne
add
push
cli
push
in
iret
add
pop
int3
loop
in
in
pop
shl
push
push
call
xchg
add
les
add
fwait
mov
mov
icebp
pop
hlt
lds
pop
int3
roll
add
in
clc
lcall
dec
nop
add
loope
push
push
push
lea
push
push
push
lea
push
push
push
call
add
mov
add
add
xchg
bound
mov
iret
jecxz
stos
mov
iret
mov
xchg
push
sti
xchg
lods
int3
add
mov
mov
mov
add
lcall
or
mov
push
push
call
bound
push
mov
scas
add
add
xlat
mov
shl
add
lods
js
add
mov
add
bound
add
call
mov
add
push
jecxz
add
fildl
cli
jmp
add
inc
hlt
pop
push
push
push
lea
push
push
call
add
mov
out
lods
jp
loop
add
mov
pop
roll
push
add
add
add
add
enter
add
sub
pop
pop
push
push
push
call
add
je
stos
lods
add
cmc
add
cltd
add
leave
mov
add
add
add
fbstp
add
lods
add
jecxz
mov
aam
fs
addb
mov
xchg
add
add
add
test
gs
xchg
out
sub
pop
pop
push
sub
shl
dec
pop
pop
leave
push
lea
push
push
push
push
push
push
push
push
call
outsl
xchg
add
loop
jno
add
aam
cli
add
xchg
add
shlb
cwtl
add
mov
lods
add
pop
cwtl
push
fldt
mov
mov
pop
add
sub
pop
ret
push
push
rol
shl
pop
mov
push
push
lea
push
push
push
push
call
jae
mov
test
aad
add
add
pop
ja
ja
adc
add
andb
jns
push
sahf
add
add
add
push
mov
jne
cwtl
mov
test
popf
pop
add
lds
in
mov
add
add
add
add
jo
add
in
call
push
push
push
not
not
pop
push
push
push
lea
add
ror
pop
mov
push
not
lea
sub
pop
mov
mov
push
xor
sub
not
shr
pop
test
je
push
shr
pop
mov
push
push
push
push
push
push
push
push
call
add
rolb
fucomp
add
movsb
add
nop
add
jae
push
add
add
add
push
add
cli
cwtl
test
add
add
loope
add
in
loopne
test
je
mov
push
add
ror
pop
mov
mov
push
add
add
rol
pop
inc
cmp
je
push
lea
push
lea
push
lea
push
lea
push
push
push
lea
push
lea
push
call
add
add
jo
mov
mov
add
imul
popa
add
add
ja
mov
in
mov
add
xchg
lods
fldenv
lods
add
ljmp
les
add
aad
jmp
add
add
add
fildl
xchg
mov
xchg
add
movsb
add
lcall
rorb
or
add
push
lea
push
push
push
push
lea
push
push
lea
push
call
lahf
pop
stos
testl
loope
lret
fildl
add
stos
add
add
fcoml
mov
jne
sar
rclb
push
idivl
add
add
jge
mov
in
xchg
add
add
xlat
sub
pop
mov
inc
push
push
lea
push
lea
push
push
push
push
push
push
call
add
movsl
add
test
mov
add
jb
cli
in
add
mov
xchg
add
jae
add
pop
xchg
add
jl
mov
mov
add
aad
imul
pop
pop
add
cmpsb
test
jne
add
sub
pop
cmp
je
push
dec
pop
test
jne
push
xor
ror
pop
xor
push
sub
sub
dec
pop
pop
pop
push
add
inc
inc
rol
pop
pop
push
shr
inc
pop
pop
push
pop
leave
push
push
lea
push
lea
push
push
call
ja
add
sti
addb
pop
add
mov
add
jnp
fcoms
add
add
jge
add
rolb
add
push
push
add
or
push
sub
inc
xor
pop
mov
push
push
call
testl
xchg
add
add
bound
jle
fadds
mov
leave
roll
add
cmpsb
add
add
pop
shll
add
add
sub
pop
inc
push
push
push
push
lea
push
call
add
add
js
fcomps
jns
add
add
test
add
enter
add
push
jmp
cwtl
leave
mov
movsb
in
loopne
jo
lret
repnz
push
pusha
add
sub
pop
cmp
jne
lea
push
shr
lea
add
rol
pop
mov
test
je
push
ror
not
rol
pop
mov
push
push
call
fildl
add
add
jge
add
pop
nop
add
add
in
xchg
fs
fst
lahf
scas
loopne
movsb
push
repnz
cltd
mov
lret
jecxz
add
add
xchg
mov
movb
loopne
test
add
sub
sub
pop
mov
push
push
push
push
call
enter
add
add
xchg
mov
jo
mov
mov
loopne
add
add
jecxz
repnz
add
add
mov
xchg
add
mov
add
xchg
bound
add
clc
add
scas
add
add
add
lock
test
je
push
push
push
push
call
lods
add
add
movb
add
add
nop
jb
jle
add
shll
add
test
add
sbb
add
fidivs
add
add
xchg
xchg
in
xchg
jmp
xchg
test
lock
lcall
callw
pop
push
push
call
movl
mov
xchg
lret
mov
cmpsb
scas
add
add
push
clc
add
add
mov
mov
rolb
out
add
xlat
rclb
mov
scas
add
mov
jo
cltd
stos
add
add
nop
add
pop
add
pop
add
push
dec
shr
lea
pop
cmp
je
push
pop
jmp
push
sub
add
pop
xor
pop
push
push
push
push
call
mov
add
fidivs
add
jecxz
add
add
push
add
scas
add
add
add
jae
push
test
adcb
clc
add
pop
push
pop
clc
pop
clc
add
add
sti
out
mov
push
add
pop
lret
sub
pop
pop
push
rol
pop
pop
pop
push
xor
sub
xor
xor
pop
leave
ret
push
shl
pop
lea
push
push
lea
push
lea
push
push
push
lea
push
call
add
add
lock
mov
mov
add
jnp
add
lret
jbe
add
add
lcall
pop
push
lea
push
push
push
push
push
lea
push
push
push
call
jno
int3
add
add
mov
ja
mov
add
add
add
mov
add
rcll
mov
add
popa
js
add
add
sub
pop
pop
pop
push
push
push
call
outsl
mov
push
add
shl
add
stc
add
xchg
add
add
add
add
add
loope
add
mov
jnp
in
mov
add
add
add
mov
add
add
les
incb
sub
pop
leave
ret
push
lea
push
call
lock
lock
add
push
jb
add
add
mov
add
xchg
xchg
add
add
mov
add
jle
aam
cmpb
add
addr16
add
cli
arpl
in
clc
pop
mov
pop
push
lea
push
push
push
push
push
push
push
push
call
add
movsb
pop
mov
jne
add
ret
add
add
add
in
add
add
out
pop
enter
in
fcompl
pop
push
push
call
add
add
sbbb
shl
fldl
lahf
lret
test
fs
xchg
imul
roll
mov
add
xchg
add
add
ljmp
clc
lcall
leave
push
push
push
push
lea
push
push
push
call
mov
rolb
jecxz
add
hlt
add
sti
push
jge
lahf
stc
pop
jnp
push
add
add
std
add
rorb
cld
jmp
mov
fldenv
add
cld
fldl
add
add
cmpsl
addl
in
in
lcall
or
xor
cmp
movl
adc
and
adc
cmp
imul
movsl
idivl
adc
popa
cmp
xor
adc
mov
add
jecxz
ret
sahf
cmc
shlb
arpl
ljmp
les
lahf
or
jecxz
dec
outsl
jne
bound
scas
push
dec
adcb
arpl
dec
pop
add
or
push
sbb
push
mov
into
inc
fcomip
and
jge
clc
pop
mov
push
mov
xchg
cmp
jno
cmp
pushf
and
mov
mull
rcrb
pop
negb
mov
loopne
arpl
jge
jne
lcall
scas
push
push
lds
cmp
fdivrl
int
pop
and
fbstp
int3
or
loope
cmp
divb
mov
sub
inc
pop
add
pop
dec
hlt
add
testl
pop
and
shrb
sub
push
ret
subb
mull
jo
cmpsl
push
in
add
mov
xor
push
push
cmpsb
cmp
mov
lds
out
adc
pop
test
add
lds
jmp
dec
jl
sub
sbb
push
out
and
xlat
insb
push
mov
mov
in
popf
pop
lret
mov
ret
shrl
add
pusha
sar
pop
stos
mov
or
fildll
int
mov
xchg
out
adc
repz
jae
or
fnstenv
call
loopne
pop
xchg
xor
aas
lods
fnstcw
out
cld
daa
je
in
adcl
pusha
dec
lret
orl
jmp
pushf
inc
xchg
in
dec
outsb
push
mov
call
mov
scas
bound
sub
idivl
inc
or
loope
imul
cmc
jae
lahf
call
mov
push
lock
or
cmpsb
add
xchg
sub
pop
mov
sbb
dec
sti
pop
imul
sbb
add
std
mov
lret
jl
or
jl
mov
mov
push
inc
shrb
jae
xchg
shll
fdivrl
ljmp
xchg
ret
das
xor
popf
test
fldcw
xor
rclb
shll
jnp
pop
mov
outsb
stc
xchg
jp
xchg
jge
add
pop
jmp
adcl
lea
dec
xchg
mov
xchg
mov
add
cld
xor
sub
sarl
xlat
fisttps
lock
xchg
pop
mov
jg
lock
mov
sbb
push
ss
xchg
lret
add
xchg
iret
in
popa
shr
sub
dec
out
push
and
js
shll
push
dec
in
stos
sub
roll
sub
int
push
mov
iret
cmc
je
scas
pop
aas
sti
push
into
lds
xlat
testb
inc
das
push
test
das
lock
or
enter
and
push
jl
ljmp
adc
popa
pop
xchg
jle
dec
scas
loopne
fldl
lock
out
fldcw
mov
into
dec
adc
icebp
dec
inc
or
xchg
out
cmpsb
mov
je
push
rcrb
push
iret
pop
popf
imul
jle
leave
jno
int3
push
sbbl
xchg
and
rorl
sbb
adc
and
jb
lods
out
movsb
jns
mov
cmp
push
outsl
rcrb
push
add
lods
jecxz
jo
inc
outsb
pop
aaa
inc
dec
pushf
mov
inc
repz
gs
divl
xor
faddl
add
push
xor
adc
test
push
mov
push
mov
cltd
fwait
outsb
int3
pusha
pop
sbb
test
and
ret
aad
repz
push
mov
jae
pop
pop
jl
mov
mov
add
in
das
addr16
fucomip
cli
mov
adc
xchg
rcrb
shlb
mulb
push
movsb
xchg
and
adc
xchg
inc
in
push
js
mov
push
mov
pop
inc
hlt
xchg
gs
sub
or
testl
jg
adcb
xchg
fs
stos
hlt
mov
jmp
or
mov
lret
mov
jae
jns
stos
icebp
aad
mov
jb
icebp
sahf
scas
push
push
into
lret
addr16
fadds
and
fcompl
jns
fyl2xp1
xor
clc
dec
xrelease
pop
lea
or
ret
and
pop
adc
xlat
fidivl
and
jecxz
test
imul
xchg
xorl
xchg
test
mov
clc
rolb
call
jne
and
push
ficoml
mov
pop
add
cs
bound
cld
lret
mov
cmp
pop
inc
je
imul
xchg
cmp
push
fwait
xor
jmp
scas
scas
adc
dec
ja
data16
xor
mov
inc
addr16
cld
mov
xor
jbe
hlt
stc
mov
leave
ljmp
sti
sahf
sub
add
cmpsb
call
mov
sbb
out
fiadds
mov
js
inc
fcmovu
cs
dec
sub
sbb
ret
in
xchg
lret
arpl
jle
and
xor
outsb
mov
inc
mov
lods
xchg
xor
insb
pushf
je
dec
jns
rcll
and
roll
aam
and
pop
ja
iret
xlat
in
mov
pop
fs
and
push
int
loop
cmp
lret
xchg
sahf
or
and
loop
xchg
mov
jle
shlb
add
jns
add
jo
out
sub
enter
sbb
int
lock
repz
push
cmpsl
sub
nop
aam
outsb
sahf
inc
fstl
repnz
adc
push
ret
jne
sub
and
and
loop
call
test
negb
fnsetpm(287
push
mov
cltd
or
fcmove
repz
shrb
push
cs
test
mov
imul
arpl
pop
test
cmp
xchg
shl
bound
and
xor
in
nop
pop
jne
or
sbb
xchg
in
mov
mov
lret
shrl
cmp
or
mov
rcrl
lock
push
push
dec
dec
cld
pop
mov
mov
mov
sbb
pushf
and
shlb
push
ret
pop
sub
dec
xchg
repz
jae
xlat
lret
inc
inc
scas
xor
jno
sub
stc
addr16
stos
sbb
int
sbb
and
push
das
adc
dec
pop
sub
jle
inc
mov
rcrl
mov
rcrl
cmpsl
mov
addb
arpl
inc
inc
and
cmpl
pop
jae
jns
pop
insl
mov
shrb
sub
dec
pop
sahf
xchg
lahf
jbe
adc
clc
sahf
jle
sti
popa
xlat
and
sbb
testb
and
sub
ret
xor
dec
xchg
dec
mov
mov
adc
pop
imull
cwtl
lods
add
mov
mov
pop
clc
in
inc
scas
les
ret
filds
cs
jg
sub
addb
ljmp
xlat
les
call
mov
push
ficoms
dec
movsb
scas
or
mul
or
mov
loop
aas
test
rclb
jne
cli
push
mov
dec
das
test
stos
mov
ret
leave
xor
fisttps
ret
push
andb
and
push
insl
repnz
and
adc
inc
inc
mov
jns
ds
or
pop
xor
popa
leave
scas
and
addl
test
pop
repz
sub
pop
stos
out
jg
int3
or
xchg
loopne
int
shrl
sub
es
fsubrl
es
or
out
popf
cmp
push
cld
in
jns
shll
lret
add
fwait
sar
jnp
inc
sub
rcrl
adc
pop
imul
push
in
sub
xor
cmp
mov
mov
aam
es
pop
cwtl
sarb
insl
ss
lahf
inc
scas
aaa
das
xchg
fcmove
fmuls
dec
mov
mov
mov
xchg
or
outsl
shll
jge
daa
pop
push
and
add
sbb
pop
clc
and
cmpsb
lock
iret
dec
mov
dec
adcl
cmp
mov
dec
dec
imul
dec
jnp
push
sahf
xchg
jns
cmp
pop
push
xlat
adc
dec
inc
lods
pusha
test
addb
decl
ja
inc
pop
pop
outsl
mov
pop
ror
sbb
cwtl
jae
mov
aad
js
call
push
cmp
iret
pop
inc
sbb
pop
js
mov
sub
mov
pusha
lds
sbb
push
mov
idiv
cmp
push
clc
mov
test
ret
adcl
add
outsl
out
add
int3
jb
or
ret
or
ds
adc
jecxz
mov
xchg
fnsave
mov
inc
add
inc
dec
xor
imul
mov
gs
movsb
and
pop
call
popa
sbb
pop
mov
repnz
inc
rol
adc
adc
out
jg
mov
push
mov
xor
bts
add
shll
hlt
xor
fmull
popw
test
rolb
insb
out
shll
pusha
jae
inc
mov
xor
xor
adc
mov
fldl
sbb
jb
push
and
jmp
inc
pop
add
xlat
lods
imul
je
loope
add
iret
dec
les
mov
inc
push
add
mov
in
imul
daa
sbb
inc
int
out
cmp
hlt
push
add
push
cwtl
mov
fwait
incl
push
dec
decb
dec
shrb
mov
je
loope
cmp
jg
loop
sbb
inc
fcmovnb
ret
int
cld
mov
repnz
mov
faddp
cmp
repz
lods
or
mov
gs
xchg
imul
cmp
push
inc
push
dec
in
cmp
iret
inc
cld
push
sbb
jbe
mov
out
xchg
adc
mov
out
pop
insb
or
sahf
adc
sub
sti
push
insb
inc
imull
leave
sbb
in
mov
pushf
xchg
xchg
mov
pushf
lea
and
adc
xor
lret
hlt
jns
sbb
repz
cli
arpl
pop
and
push
imul
repnz
dec
mov
xlat
cmp
cmpsb
push
loopne
cs
icebp
and
sub
jg
jle
ret
cli
int
mov
xchg
icebp
sub
cld
les
or
test
push
icebp
fwait
push
inc
xor
sub
adc
loope
out
es
pop
imulb
cltd
push
mov
fs
mov
jge
sti
mov
fistpll
mov
int
and
mov
xchg
push
pop
cwtl
adc
rorb
jnp
pusha
and
cmpsl
mov
and
cmp
pop
inc
stos
out
sbb
jecxz
cmp
cmp
test
inc
sti
jecxz
and
push
ja
mov
lea
ja
sbb
xor
in
jo
enter
out
in
push
push
sub
inc
mov
int
leave
push
pop
repnz
pop
fsincos
daa
and
adc
rcr
ror
shll
or
psubq
arpl
pop
outsb
xchg
or
push
insl
cmp
pushf
sub
jg
inc
mov
js
aas
mov
xchg
test
sub
mov
hlt
inc
jno
mov
mov
xchg
stos
repz
int3
mov
rorl
and
inc
add
lds
cli
loope
mov
jae
scas
iret
testb
int
or
filds
push
repz
jno
rcr
dec
xor
jb
test
dec
fistps
mov
insb
inc
xchg
mov
lahf
or
jmp
shrl
push
cmp
push
push
mov
add
jle
push
push
cmc
mov
stos
test
or
jp
rcll
mov
bound
out
add
adcl
ret
jb
mov
xchg
or
in
jecxz
or
inc
lahf
std
dec
cs
ljmp
shrl
cmp
cmpsb
mov
jmp
sarl
notl
sti
pop
and
xchg
and
cmpsb
es
jnp
inc
xor
icebp
subb
stos
adc
pop
daa
dec
fs
xorl
popa
mov
jno
ret
clc
popf
icebp
push
subb
mov
and
xor
jnp
jecxz
push
mov
jecxz
out
testl
and
mov
mov
fadds
cltd
lahf
adc
nop
xor
popf
push
jbe
adc
sub
add
sub
mov
test
dec
jb
call
aas
cmp
inc
repz
pop
test
push
mov
es
jmp
repz
add
sub
and
cld
addr16
sbb
mov
mov
outsb
adc
in
out
lcall
cmc
jns
cmp
shlb
shrl
add
addr16
mov
lds
lock
lods
jge
inc
lods
mov
or
pop
add
xor
mov
adc
aaa
mov
ja
jbe
lock
dec
jno
and
lcall
sub
jo
and
stos
pop
sbb
inc
and
jle
cli
sbbl
lahf
fwait
dec
jae
mov
jecxz
movsl
pop
sub
sbb
mov
push
loope
inc
xchg
mov
sbb
mov
inc
jnp
scas
imul
sbb
ljmp
and
test
fisubrl
loope
lret
xor
xor
sbb
cmc
mov
ljmp
dec
dec
cmpsb
dec
sub
lret
jno
mov
mov
push
ljmp
dec
jge
daa
mov
xchg
dec
mov
sbb
fisttpll
cmp
pop
adc
xchg
pop
orl
mov
ljmp
mov
scas
mov
in
test
push
mov
dec
or
jge
popa
jg
aam
xor
subb
les
outsl
clc
sub
inc
dec
cs
ja
ljmp
or
jge
jmp
xchg
sub
stos
pop
roll
mov
mov
or
filds
add
and
mull
imul
jae
decl
call
mov
out
and
lret
lahf
inc
jg
jge
mov
int
xchg
aad
loopne
or
jge
or
cltd
inc
popa
dec
push
jl
xchg
popf
fisubrl
sti
out
cmp
cmp
lds
mov
pop
add
mov
jns
adc
insl
lods
and
sub
ret
sahf
adc
pop
sbb
cmp
or
popa
sbb
push
lods
mov
mov
mov
xchg
iret
dec
mov
xchg
icebp
mov
mov
notb
push
cmp
push
mov
mov
out
jns
cld
or
dec
jmp
sbb
mov
cmp
mov
stc
in
mov
fwait
jno
imul
jecxz
in
push
stc
loop
or
and
cmp
inc
adc
mov
cmpsl
lret
xchg
mov
sar
xchg
rcrb
inc
aam
and
mov
pop
pusha
ja,pt
out
in
add
pop
ljmp
test
repz
es
mov
insl
out
enter
mov
jmp
sub
loopne
mov
dec
inc
out
pop
in
mov
and
je
inc
div
push
mov
mov
xchg
and
sbb
cld
addr16
scas
or
popa
insb
ljmp
jns
jmp
push
mov
in
mov
xor
sbb
adc
xlat
inc
nop
mov
rcll
jnp
pop
pop
dec
sub
fs
mov
mov
outsl
inc
sbb
outsw
mov
inc
push
lret
dec
lcall
lods
fsubl
test
in
cmc
pushf
outsl
inc
orb
pop
test
les
insl
xor
jo
dec
xor
in
movsb
cmp
insl
jmp
jge
insl
jp
xchg
sbb
in
cs
cwtl
inc
push
mov
sbb
sbb
icebp
inc
pop
and
popa
fdivl
and
jns
lods
mov
enter
dec
inc
rclb
push
imul
cs
outsl
popa
ja
pusha
cmp
xor
pusha
aam
fs
cmp
xchg
lea
push
fwait
dec
dec
shll
pop
inc
push
jbe
mov
pop
testl
add
data16
xor
stc
mov
enter
inc
jae
out
sbb
mov
dec
andb
fildll
cmc
aaa
or
sub
stos
jo
clc
std
xchg
lea
cmp
mov
mov
mov
and
add
dec
adc
fdiv
push
les
mov
dec
mov
adc
test
leave
pushf
sub
mov
ljmp
sub
in
shrl
adc
dec
adc
adc
pop
jle
lods
jp
mov
inc
xchg
mov
sahf
jl
gs
pop
mov
insb
jl
mov
mov
movsb
leave
or
xorl
cmpsb
dec
jnp
in
data16
xchg
and
jno
inc
mov
stos
jle
lahf
sbb
xchg
je
shl
mov
ret
dec
lahf
jg
cs
rcrb
add
cmp
repnz
imul
test
in
add
push
mov
daa
inc
clc
or
les
loope
call
or
push
xor
or
xor
test
or
push
popf
sahf
dec
and
mov
mov
enter
imul
es
dec
insb
jge
jb
popl
add
mov
pop
aam
sahf
push
js
ret
pop
cmp
dec
sub
jne
jg
mov
or
repz
lods
aas
leave
xor
insb
inc
add
lock
pop
lds
clc
or
push
pop
pusha
ret
jle
cs
push
mov
inc
adc
mov
in
or
pop
scas
mov
scas
sbb
in
cmp
push
arpl
add
popf
inc
dec
cltd
pop
add
stc
xchg
loop
jg
pop
lret
fisubs
inc
xor
sbb
mov
lds
jl
fwait
jge
fs
xchg
push
push
test
jge
fcomps
hlt
mov
jp
out
mov
adcb
in
lcall
lret
and
iret
adc
mov
ljmp
leave
aaa
out
sahf
ds
cmp
insb
imul
cmp
cmc
jns
shll
push
mov
sub
and
out
es
shrl
sahf
xchg
hlt
pop
nop
or
mov
loop
gs
clc
hlt
cmc
or
and
push
xchg
push
imul
adc
inc
aad
sbb
mov
and
jnp
test
mov
cmp
or
int3
mov
push
push
xlat
imul
iret
addr16
pop
push
adc
mov
inc
rcll
sarb
jge
sub
push
jmp
inc
add
cmp
mov
fists
outsl
mov
or
mov
out
dec
divl
dec
enter
adc
and
fldt
xor
sahf
stc
inc
xchg
adcl
fsqrt
ja
loopne
or
lods
rcrl
mov
sbb
xchg
out
dec
push
mov
leave
mov
jo
gs
addl
push
cmp
pop
out
ror
lahf
sbb
int
pop
jge
arpl
popa
shl
mov
rolb
push
stos
jae
loope
fimuls
sbb
fst
jnp
sbb
lret
dec
ror
cmpsl
xchg
dec
orb
out
fwait
jle
shrl
adc
sub
fs
dec
shl
mov
iret
and
or
or
mov
shrb
stos
mov
add
jmp
lods
addl
test
add
stos
aas
testl
fstl
mov
xchg
pusha
dec
out
mov
xchg
pop
out
les
and
sbb
fucomip
roll
fidivs
mov
sub
jge
jno
dec
or
fwait
sahf
mov
xchg
pop
mov
or
shl
or
jge
mov
mov
addl
addb
sbb
sbb
jno
shll
lret
fdivrl
sti
popf
push
mov
pop
jg
jae
dec
lds
js
or
les
es
cmp
fs
les
stos
inc
mov
dec
mov
mov
shlb
and
mov
mov
push
sbb
imul
orl
push
mov
add
movsb
sti
out
jo
js
xor
andb
hlt
mov
push
jl
inc
stos
jmp
push
or
cld
sbb
test
jne
add
push
pushf
icebp
dec
std
or
pop
test
movsb
addb
pusha
das
dec
push
jle
and
adc
lcall
inc
insb
or
and
aas
in
mov
das
jg
imul
sbb
lock
sbb
push
push
aaa
mov
sbb
jae
lods
or
mov
mov
lret
dec
inc
xchg
inc
pop
adc
adc
test
jb
test
jmp
xchg
mov
cmc
mov
mov
aad
cmp
stos
loop
cmp
rolb
into
pop
nop
test
out
ret
cmp
mov
xor
loop
push
xchg
outsb
lcall
subl
pop
fsubs
mov
notb
inc
repnz
clc
daa
sbb
pop
test
iret
loope
xor
out
sub
notb
xchg
data16
cmp
test
and
push
pop
neg
int3
outsb
cmpsl
arpl
or
jae
cmpl
pop
push
shr
sbb
pop
ret
in
es
es
orb
mov
mov
pop
repnz
or
les
arpl
jmp
repnz
and
mov
loopne
dec
lds
icebp
xorb
pop
jmp
or
push
cli
push
and
lahf
lods
dec
iret
icebp
jns
mov
lods
and
pop
std
cmp
int
lock
sbb
das
in
fwait
popf
imulb
mov
in
les
pop
in
test
or
lock
pop
stc
std
dec
ss
adc
mov
cltd
pushl
dec
mov
mov
push
das
dec
test
jg
fmul
leave
hlt
lds
mov
out
call
mov
out
and
mov
sub
lods
pop
cli
sarl
cmp
test
dec
cld
std
test
cwtl
xorb
lahf
pusha
shrl
cmpsl
cmp
ljmp
rorb
mov
leave
insl
dec
into
xor
xchg
lods
loopne
cmp
mov
xchg
icebp
js
imul
push
sub
mov
and
cli
adc
mov
out
mov
mov
iret
subl
loope
xor
adc
inc
xor
dec
in
stc
in
mov
dec
fsubrl
in
lods
sti
jb
out
out
mov
in
ss
lock
repz
stos
insb
xor
repnz
and
scas
xor
xchg
xor
out
out
xor
sbb
dec
std
sbb
jae
and
in
insb
filds
gs
mov
sahf
les
je
test
pop
dec
cld
inc
mov
ljmp
int
out
push
popf
mov
mov
ret
lret
scas
pop
xchg
imul
and
insl
or
sahf
call
mov
nop
mov
in
push
scas
leave
loope
add
or
xlat
arpl
jno
out
cmp
mov
jl
sbbb
imul
mov
jle
add
sti
jg
insl
push
mov
out
push
add
push
push
fldenv
aam
out
or
testl
pop
ror
insb
into
lahf
pop
stos
push
ds
inc
inc
push
push
outsl
mov
adc
inc
mov
aad
mov
enter
out
lods
mov
and
xor
test
jns
pop
cmp
inc
mov
pop
mull
frstor
push
sub
inc
add
lock
fs
aam
hlt
mov
into
pushf
xor
test
popf
xchg
jp
inc
mov
out
dec
sub
ret
gs
fistpll
jnp
cmp
fldcw
add
mov
ret
adc
jbe
xchg
lret
fcoml
xor
xchg
sub
mov
jp,pn
mov
adc
fisttpl
les
push
jl
sub
inc
dec
xchg
popa
or
adc
movsb
imul
mov
sti
inc
and
jge
mov
nop
int
mov
enter
pop
dec
push
xchg
loop
jne
jp
fidivrs
lods
inc
shr
ficomps
inc
roll
movsb
mov
mov
xor
sub
arpl
add
jo
jmp
test
mov
das
or
mov
bound
fcoml
fidivrl
stc
divl
or
lea
jp
sbb
loopne
ficoml
hlt
push
mov
test
enter
lods
jnp
cmp
or
out
enter
inc
insl
je
cli
adc
js
and
leave
mov
sbbb
dec
adc
mov
stos
push
mov
mov
pop
negb
cltd
dec
jle
cs
pop
imul
arpl
mov
icebp
lods
ret
xchg
roll
popa
test
sbb
ljmp
xchg
pop
pop
fnstenv
ret
das
inc
fidivl
mov
orl
inc
out
stc
scas
jns
leave
loope
movsl
mov
aad
stos
sub
sbb
mov
adc
popa
inc
inc
mov
push
repnz
inc
push
mov
mulb
sub
cmp
add
stc
add
popf
iret
mov
sub
xchg
int3
xchg
add
pop
adc
add
lahf
bound
lcall
call
mov
and
lea
ljmp
ds
push
xlat
mov
mov
mov
push
shlb
test
sub
loop
ljmp
roll
mov
jmp
cmp
mov
jo
inc
fidivrl
sub
mov
loope
in
loop
lahf
mov
aad
shl
aam
xchg
loope
clc
fcmovb
testb
dec
xchg
fisubs
out
add
xchg
cmp
mov
sbb
add
iret
outsb
movsb
or
sbb
aam
mov
cltd
fs
pop
pop
in
cmp
jp
add
adc
mov
call
mov
ror
or
into
pop
dec
nop
push
pop
ret
xchg
mov
and
rcrb
fsubl
jmp
mov
imul
in
mov
push
int
xor
fcompl
mov
xlat
push
leave
add
add
mov
add
pop
test
pop
xchg
jae
in
push
jno
inc
mov
stos
sub
imul
xchg
cmp
fimuls
test
pop
lds
in
cli
adc
pop
xchg
push
daa
shll
mov
lret
out
inc
std
hlt
int
push
ds
jbe
jmp
dec
sub
ds
in
mov
or
insb
xchg
inc
les
in
das
daa
mov
imulb
repz
dec
dec
push
pop
in
fistpll
ja
fsts
leave
inc
adc
sub
dec
out
hlt
lcall
imul
pop
imulb
push
subb
jg
mov
stos
and
ljmp
add
jnp
mov
clc
outsl
aam
push
mov
mov
cmp
sar
adc
lds
shll
cmp
jp
loopne
push
mov
pop
in
xchg
test
in
pop
and
mov
jno
adc
daa
mov
push
adc
add
xorl
cmp
jge
rclb
pop
gs
pushf
repnz
mov
stos
shll
int
mov
cmp
jge
fcomi
push
jnp
xchg
js
sub
mov
rcll
inc
movsl
dec
add
sub
mov
dec
daa
pop
leave
pusha
jnp
mov
dec
or
cmp
mov
jno
or
and
pop
and
aam
es
daa
inc
and
loope
pop
xchg
std
pop
shrl
stos
mov
pop
movsb
cmp
pop
jmp
add
pop
loop
mov
add
cmp
lea
jno
daa
cltd
cmp
mov
sub
sbb
xor
das
shr
les
fadds
sbb
jb
cmp
mov
add
cmp
xor
lahf
jecxz
fidivs
pusha
push
jo
hlt
cmc
test
xchg
sbb
arpl
xchg
xor
gs
shrb
cmp
into
cs
sbb
popf
or
push
scas
mov
or
out
aam
mov
jb
and
jo
xchg
movb
and
shrb
inc
popf
dec
inc
push
cmp
pushl
jecxz
jecxz
mov
jno
mov
add
mov
jo
cltd
xchg
mov
insb
out
rorl
cmpsl
ljmp
mov
stos
dec
or
into
pop
or
sub
pop
outsl
adcl
scas
pop
scas
mov
push
push
jne
xchg
lret
mov
mov
push
inc
fstl
xchg
lods
pop
mov
mov
fistl
ud2
pop
xchg
or
and
dec
mov
and
je
xchg
push
mov
stc
loope
repz
jo
cmp
popf
pop
and
int3
inc
inc
push
push
mov
lods
sbb
fcoms
fisubl
sub
push
mov
sbb
mov
add
push
xchg
mov
xor
cld
and
fidivl
xchg
xchg
adc
push
popa
adc
inc
movsb
out
add
call
iret
push
repnz
test
ss
es
shrb
xchg
jg
push
xchg
ja
repnz
les
aas
ret
mov
jmp
fnstcw
stc
jne
sbb
and
pushf
nop
test
inc
lret
shll
or
mov
fsubp
js
mov
adc
push
scas
sub
cmp
mov
lcall
pop
jl
test
movsb
cmp
push
imulb
cmp
das
mov
icebp
mov
sub
inc
lret
push
jnp
bound
arpl
movsb
movsl
rcrb
cld
lcall
mov
out
lahf
add
mov
adc
lds
mov
pushf
and
jle
movsl
and
dec
cmp
push
push
inc
cmpsb
ljmp
mov
call
mov
push
adc
bound
loopne
das
add
inc
or
inc
cli
push
mov
mov
cmp
pop
pop
or
leave
jno
push
lods
into
outsb
dec
dec
jle
mov
xchg
push
mov
mov
and
repz
out
pop
cmp
in
mov
inc
add
xor
loope
adc
xor
inc
push
mov
ljmp
xchg
lcall
aaa
sti
mov
cmpsl
xor
fidivs
and
std
flds
into
mov
lret
xchg
sbb
shlb
call
push
addr16
xor
dec
mov
inc
jge
mov
test
lea
pop
insl
or
xchg
js
inc
or
cwtl
xor
lret
xchg
sbb
cli
or
sbb
cmp
imul
mov
pop
stc
cmp
mov
mov
int
addr16
sub
lret
aam
cmp
daa
xor
mov
xor
and
jnp
or
and
mov
into
xchg
arpl
xorb
fcomps
xlat
mov
aas
out
add
ret
adc
bound
pop
dec
outsl
ja
or
imul
xchg
aad
jne
sbb
push
cld
scas
scas
fsubs
pop
jae
inc
dec
or
jl
stos
mov
jmp
nop
and
test
push
push
inc
lret
loopne
xchg
aad
gs
jp
flds
dec
xchg
push
sbb
inc
xchg
fcompl
aam
mov
sub
out
or
add
sub
enter
cmp
mov
aaa
ljmp
nop
shlb
inc
mov
insb
insl
push
dec
inc
or
lods
stos
divl
add
pop
or
jge
pop
adc
jo
inc
jo
sbb
hlt
or
popf
mov
xchg
repz
sbb
popl
shlb
and
out
xor
inc
repz
repz
mov
cli
inc
pop
shll
stc
or
sub
rcrb
popf
scas
jbe
stos
mov
fsubrl
inc
insb
dec
mov
xchg
lds
gs
sub
les
in
jg
jge
sarl
data16
test
xchg
lods
insl
shlb
mov
fstps
lahf
mov
inc
pop
mov
pmaxsw
mov
push
xor
dec
ficoml
data16
movsb
mov
das
sub
out
pop
in
cmpb
add
pushf
data16
push
sbb
les
push
xor
mov
outsb
stos
decb
out
jbe
lea
cmp
pop
les
xchg
stos
and
ljmp
dec
shl
movlps
test
jns
andl
mov
mov
loopne
and
dec
leave
push
push
push
dec
mov
sbbb
pop
dec
test
jle
pop
mov
or
jnp
xor
pop
xchg
cmp
lea
inc
xor
pusha
je
jo
test
push
push
lods
cmp
fcoms
pop
inc
xor
add
ds
push
pop
xor
mov
jg
pop
mov
gs
or
jmp
jne
int3
add
and
repz
dec
push
cmpsb
and
cwtl
xor
int
xchg
std
push
inc
test
push
xor
adc
jl
mov
daa
outsb
enter
clc
shrl
int
push
add
jae
push
mov
lods
pop
outsb
adc
mov
cmp
mov
pop
loopne
sub
sbb
mov
sub
insb
xchg
cmp
mov
stos
repnz
aad
mov
mov
shlb
bound
and
and
scas
mov
iret
outsb
test
push
cmpsb
cmpsb
mov
int3
add
inc
mov
mov
cmc
jno
imul
sbb
xlat
or
inc
outsl
loope
ret
and
xor
push
out
push
pop
sub
ficoml
je
mov
sub
enter
scas
js
inc
jl
insl
xchg
lahf
clc
dec
mov
push
enter
lret
inc
les
sbb
dec
inc
mov
xor
mov
std
test
xchg
add
cltd
sbb
shl
mov
dec
sub
or
sub
or
sbb
fmuls
sti
es
idivb
lods
mov
mov
cmpb
test
push
add
dec
rcrl
mov
fs
jmp
lret
dec
inc
mov
push
mov
push
pop
mov
mov
sarl
rorb
arpl
imul
shrl
or
in
pusha
es
insb
loopne
fmul
lods
mov
in
xchg
ret
into
aas
sbb
sbb
adc
shrl
lahf
xchg
jle
dec
aad
jns
int
lds
das
nopl
cld
insb
jns
push
sbb
xchg
jnp
xor
add
dec
pop
and
dec
mov
mov
cmpsl
sti
mov
ror
adc
push
pop
lcall
inc
sub
dec
movsb
jmp
fimuls
sbb
jecxz
call
push
mov
mov
push
fcos
test
cmp
in
mov
js
repnz
loope
mov
cltd
rcr
hlt
add
mov
sub
div
adc
fiadds
jge
push
xchg
sti
mov
loopne
jno
shl
push
movsb
fidivs
mov
hlt
inc
cs
add
insb
cli
std
nop
cld
clc
dec
cmp
aad
pop
pop
jns
shr
sbb
aam
fsubl
pop
pop
mov
push
cmp
insl
subb
sub
rcrl
cmpsl
out
dec
mov
sub
stc
icebp
lods
addr16
mov
test
sub
pusha
xor
mov
rclb
push
out
push
lret
inc
ljmp
aam
dec
pop
cwtl
inc
aaa
shlb
sub
test
insl
cld
mov
push
add
lret
xor
test
jae
fidivs
lret
sbb
push
push
les
mov
lea
fstps
cld
xchg
por
adcb
push
add
out
rcl
xor
mov
jecxz
push
jno
sub
ds
int3
sbb
test
and
jg
or
rolb
and
jae
sti
fwait
repz
pop
or
scas
test
push
and
xchg
jns
push
mov
lds
ja
das
xor
shrb
repz
xor
imul
cmp
pop
sub
mov
sub
andl
push
outsl
jecxz
nop
push
jo
mov
and
xchg
jnp
imul
mov
pop
aad
rcrb
sub
jnp
stc
mov
fisttps
xchg
fsubr
popa
je
cs
mov
fwait
jae
lcall
cltd
in
jmp
mov
cmp
pop
lds
aam
into
adc
push
out
cmpsb
dec
cmpsl
jg
xchg
mov
cmp
sbb
cmc
pushf
pop
pop
addr16
cwtl
jl
sbb
inc
xor
jbe
fistps
xor
cmpsb
add
push
lcall
insl
cmpps
xor
outsl
pop
loopne
cmp
test
inc
add
repz
aas
push
sahf
pop
sub
push
sbb
ljmp
nop
aaa
stc
sub
dec
call
push
mov
pop
arpl
popf
popf
loop
int3
pop
mov
fwait
and
jo
out
call
fisttps
pop
sub
test
mov
fdivrl
xlat
dec
push
adc
fiadds
cmc
dec
mov
sbb
insb
int3
cmpsl
xor
mov
cmp
cmc
cmpl
dec
addl
xchg
stc
mov
loope
fbstp
cmpsl
push
hlt
jmp
les
add
adc
xor
leave
fcomps
mov
xchg
jnp
jl
scas
ucomiss
testl
test
cmpsl
push
push
subl
mov
or
bound
iret
jns
pushf
call
mov
call
add
adc
xchg
jbe
push
dec
and
test
dec
pop
imul
jns
fst
je
jmp
xor
mov
or
fstps
xchg
mov
xor
dec
sub
cli
or
lods
ds
pop
icebp
jl
or
lahf
int3
jp
iret
sbb
lock
sbb
ja
rcr
xchg
fcmovnbe
int
push
mov
pusha
jb
out
nop
pop
scas
out
loopne
push
pusha
mov
outsl
jb
push
movsl
mov
je
mov
sbb
push
cmp
das
lods
adc
pop
xchg
movsl
sahf
inc
sub
jno
dec
std
push
jp
jno
jo
sbb
push
inc
xor
xchg
xchg
or
add
lock
add
pop
loopne
fisttpl
enter
add
movb
mov
sub
lock
imul
fidivl
int3
testl
movsb
jbe
stos
nop
sub
inc
adc
cmp
xchg
inc
and
inc
sub
rorb
inc
std
test
adc
lret
and
stos
test
idivl
sbb
xchg
cmpsb
jle
pop
adc
in
insl
iret
data16
sub
inc
sbb
out
xchg
xchg
jne
jl
push
popa
sub
das
add
mov
fstps
adc
lods
andps
dec
icebp
mov
mov
push
pop
repz
xchg
pop
lret
cmp
mov
mov
mov
rclb
dec
js
ds
loopne
fisttpl
mov
nop
pop
inc
jns
or
mov
insb
js
aaa
fdivp
push
movsl
testl
xor
dec
das
pusha
into
fists
call
mov
lds
shrl
xchg
mov
icebp
pop
jae
mov
lahf
insl
test
pushw
push
cmc
dec
mov
hlt
sbb
out
mov
sbb
push
push
mov
fs
pop
sub
dec
xor
negl
lret
and
data16
jle
outsl
fimull
in
jg
dec
push
mov
jle
aam
push
movsb
mov
add
sbb
out
bound
mov
mov
lret
arpl
sub
in
lock
es
mov
sbb
mov
insl
push
test
add
cmpsb
inc
push
jne
adc
xchg
xlat
loopne
push
mov
cmc
cltd
jae
mov
add
mov
dec
jg
fiaddl
cmp
je
js
ficoms
push
ret
mov
xchg
dec
mov
mov
push
js,pt
inc
fldcw
mov
mov
mov
jbe
daa
icebp
sbbb
pop
jp
and
push
mov
ja
pop
add
cmp
aaa
jge
ret
add
lock
loopne
sub
imul
lret
jecxz
mov
popa
movsb
push
mov
scas
stc
push
cmp
or
cmp
pop
xchg
fisubl
inc
lahf
cmp
add
mov
outsb
mov
or
cli
sbb
outsb
cmp
movsb
cmp
xchg
push
jbe
inc
bound
mov
mov
mov
mov
push
pop
or
mov
mov
and
jp
sub
imul
pop
mov
rolb
arpl
mov
and
and
jbe
lods
cmp
push
push
ret
in
mov
xchg
sahf
jecxz
fldcw
cld
in
sbb
int3
cwtl
out
lret
xchg
pop
xlat
ret
mov
mov
add
add
cmp
dec
das
add
pop
out
repz
es
rorb
dec
mov
inc
cmpsb
mov
into
ljmp
adcl
psubsb
and
dec
jae
cmpsl
aad
mov
cmc
xor
aad
pop
ljmp
or
mov
mov
inc
ljmp
xor
pop
jl
inc
repz
lods
pop
in
lcall
aaa
inc
lret
bound
inc
nop
dec
jl
sarl
out
xchg
loop
sbb
scas
and
push
jge
scas
movsl
pop
pop
push
stos
rol
or
lock
inc
add
and
adc
es
nop
xchg
aaa
inc
jle
add
xor
inc
orb
mov
jbe
dec
sarl
bound
fsqrt
daa
jbe
push
out
es
lea
sarb
sub
pop
loop
orb
cli
push
push
mov
lock
adc
lcall
pop
jo
negl
inc
inc
lcall
xlat
inc
fmuls
ret
mov
outsb
xchg
lahf
test
and
aam
pop
pop
jp
icebp
js
xchg
pop
fcomps
xor
sub
outsl
inc
fdivr
jp
push
adcl
jge
movsl
loopne
push
aaa
xchg
insb
jmp
hlt
test
cmpb
dec
cmp
inc
sbb
jl,pt
insl
or
rclb
mov
sbb
sub
or
bound
inc
in
inc
inc
rcl
stos
xlat
or
lods
push
aam
mov
jns
pop
fbstp
outsb
stc
add
pop
sub
daa
jl
mov
ds
xchg
shll
push
int
jmp
imul
les
jnp
sub
inc
pop
or
jecxz
sub
icebp
pushl
xchg
cmpsl
sub
push
sarl
pop
aam
aam
adc
sahf
shl
sub
fbstp
mov
xor
shrl
icebp
hlt
adc
xchg
jge
xchg
mov
int
stos
aam
or
mov
das
pop
jmp
ret
inc
mov
and
mov
jae
add
repnz
test
dec
test
cmp
mov
push
mov
jg
mov
mov
jle
es
popf
mov
fdivl
out
pop
aas
xchg
clc
andl
xor
add
jmp
cmp
push
inc
lock
push
xor
sbb
cmp
mov
stc
test
ret
dec
mov
push
jnp
fcomip
xchg
lock
mov
xchg
cmp
js
mov
xchg
jle
inc
rcl
mov
inc
in
xchg
popl
int3
pushf
sbb
out
sub
lret
jb
fisubl
dec
and
mov
fdivs
shrl
inc
fs
push
mov
cmp
sbb
dec
sbb
out
rcr
jne
repz
sarl
pop
xchg
cmpsl
sbb
aas
mov
mov
sarb
cmp
inc
call
mov
mov
jmp
pop
cvtps2pd
cli
cs
xor
icebp
clc
enter
stc
lods
dec
add
push
inc
js
int3
mov
movsl
iret
and
sbb
push
sbb
adc
stos
or
push
outsl
in
lods
icebp
push
inc
lcall
sub
jo
adc
mov
sbb
test
inc
sub
jp
sahf
js
je
in
lcall
or
cmpsb
pop
leave
gs
push
mov
out
add
jmp
xchg
shr
inc
rolb
lods
outsl
repnz
mov
lods
mov
and
sbb
int
push
sub
xchg
sarl
cmc
outsb
stos
mov
dec
or
and
or
mov
inc
mov
icebp
cmpsl
xor
test
add
cli
lahf
sub
out
inc
adc
rclb
push
cmp
xor
xchg
mov
push
enter
jg
sub
add
or
push
dec
mov
int
int3
std
sub
push
jp
les
movsl
iret
popa
rcrl
data16
notl
cltd
stc
add
shl
jge
fidivrs
add
cld
mov
inc
ret
dec
js
decl
mov
into
cld
lea
out
push
popf
pop
int
idivl
pop
jg
xchg
out
pop
sub
mov
inc
repnz
jae
push
mov
and
lods
lret
popf
outsl
sbb
pop
inc
filds
cmpsl
cld
js
push
or
stc
xchg
jno
cmpl
mov
mov
mov
fisttpl
incb
and
daa
or
jne
sbb
sahf
in
outsl
sbb
pop
or
fcomps
add
lahf
jbe
mov
fwait
mov
test
push
or
and
mov
mov
jo
cmp
cmp
js
xchg
lods
jle
mov
pop
outsb
pushf
push
xchg
imul
or
pop
incl
stos
pop
lret
xor
test
adc
test
add
jbe
out
xchg
movsb
push
adc
jg
pusha
iret
mov
jg
mov
mov
ds
mov
out
testb
or
lea
std
mov
mov
inc
bound
or
bound
aaa
cld
idivb
xchg
xlat
iret
cmp
add
fs
mov
mov
xchg
push
cmp
loop
fstpl
xchg
pushf
mov
add
or
shrl
xorl
jno
adcb
nop
inc
mov
lret
push
jbe
push
leave
popa
test
mov
sbb
sub
fsubl
lcall
or
ja
andb
stc
mov
inc
mov
insb
insl
mov
mov
cmc
test
sbb
enter
mov
cli
inc
insl
jbe
test
hlt
xchg
xchg
xchg
cwtl
sbbl
jg
adc
push
mov
aaa
jbe
add
push
inc
adc
add
mov
cmp
mov
movsb
mov
sarb
pop
lahf
xchg
mov
mov
scas
mov
or
add
inc
fwait
pop
inc
or
popf
insb
mov
adc
jbe
jbe
cmp
xor
jae
mov
push
icebp
and
das
mov
push
sub
rorb
sbb
mov
ret
in
cmp
adc
lock
mov
mov
roll
in
jle
gs
dec
stos
sub
test
lock
and
mov
jge
inc
push
inc
adc
jmp
adc
std
add
adc
pop
adc
dec
and
cltd
in
pop
scas
arpl
add
notl
jg
cmpsl
call
pop
jb
leave
mov
cmp
mov
mov
jb
test
pop
cmpsl
out
dec
aaa
je
sub
jne
inc
push
xlat
mov
rcrb
test
dec
mov
lods
adc
lea
jp
pop
mov
mov
mov
daa
mov
and
and
mov
les
mov
cmp
std
push
mov
adc
stc
in
pop
sarb
rorl
call
pop
js
add
aad
stos
repz
test
rcr
and
das
rcll
pop
call
cmp
and
or
mov
cli
push
pop
push
push
jo
mov
dec
adc
xor
jmp
xchg
mov
cmpsl
pop
xchg
std
sbbl
pop
ret
cmpb
lock
stos
daa
fs
xlat
ret
pop
jmp
imul
outsl
sub
test
xchg
in
popf
push
jmp
sub
cs
jg
push
jecxz
pop
jbe
push
sbb
mov
aad
cltd
jecxz
sub
cwtl
xchg
jb
std
enter
fsubs
pop
jmp
testb
test
xor
xor
repz
ljmp
insb
xchg
imul
sahf
jnp
push
stc
and
dec
rclb
mov
cs
aad
ja
lahf
push
xor
clc
iret
xchg
jg
sub
add
cwtl
mov
int
movsb
mov
lret
xor
dec
lods
jnp
or
inc
pop
and
xchg
or
in
fldt
fs
xchg
sbbb
sbb
cmp
inc
popf
imul
cmc
mov
imul
outsl
js
xor
test
push
and
and
sahf
mov
ljmp
pop
lock
fidivl
popf
jge
sti
and
cmp
xchg
insl
push
jno
add
mov
push
aaa
adc
sub
shrb
sub
out
mov
cmpsb
pop
into
add
xchg
test
in
iret
cmp
jb
xchg
into
rorl
out
pop
les
cmp
xchg
stc
jo
pop
ffree
mull
dec
mov
outsl
push
in
push
and
cltd
mov
cmp
fcmove
push
mov
fsubp
iret
fdivrl
mov
mov
fst
mov
push
aam
jge
out
push
es
xchg
pusha
and
xor
or
cwtl
in
es
push
daa
push
aam
jp
popa
or
mov
stc
add
mov
out
ja
movapd
jg
xchg
pop
jb
jnp
pushf
outsb
dec
cli
push
std
xchg
cmp
dec
mov
jae
jmp
rcrb
dec
hlt
bound
sub
pop
lea
enter
add
call
test
call
mov
lret
js
data16
out
cmp
cmpsb
xchg
adc
pop
cmpl
or
xchg
lret
aad
dec
push
sbb
int
add
dec
pop
outsb
adc
jecxz
mov
or
jp
mov
jo
add
inc
push
cltd
rcl
mov
jl
cmp
out
xor
mov
sbb
es
adc
test
dec
sbb
cmp
sub
pushf
cmp
mov
mov
std
mov
popa
sbb
or
ss
mov
jns
leave
push
adc
or
adc
scas
lahf
push
pop
pop
cltd
jg
or
pop
cmpsb
adc
and
es
ret
popa
test
xchg
lret
addr16
mov
and
les
adc
insb
mov
adc
nop
test
nop
mov
outsl
inc
or
or
mov
repz
cmp
dec
xchg
inc
aad
add
xchg
hlt
into
adc
add
dec
inc
imul
or
mov
jge
sarl
push
jmp
inc
inc
jmp
dec
outsl
outsb
dec
dec
push
loope
outsb
testl
loopne
xchg
testl
testb
outsb
sar
and
cltd
add
repnz
in
and
jnp
jg
test
inc
mov
mov
lock
jl
pop
mov
pop
cmp
je
or
adc
jg
cli
jae
push
lahf
mov
dec
xor
es
and
push
popa
rcrb
mov
inc
fisubs
dec
in
dec
insl
dec
add
jo
fcompl
test
fldcw
shl
outsb
sub
inc
jne,pt
push
std
sub
xchg
sbb
pop
mov
movsb
add
inc
lods
sbb
rorb
hlt
cmc
pop
call
add
push
iret
xor
sarb
in
cwtl
sahf
push
pop
add
das
mov
std
mov
push
dec
repz
dec
sbb
cmp
mul
sbb
mov
rcll
or
int
cmp
imul
cld
mov
mov
inc
cmpl
or
or
jne
sbb
test
mov
mov
or
pop
out
ret
aaa
loope
push
inc
and
pop
sub
shr
in
sahf
jg
mov
cmp
cmp
adc
xor
cld
jg
mov
das
mov
pop
xor
mov
inc
mov
pusha
sub
js
ret
pusha
xlat
or
jmp
daa
ss
jl
mov
xor
push
inc
adcl
mov
lahf
mov
leave
popf
cmc
addr16
int3
mov
cmpsl
sub
aaa
push
inc
jns
adc
adc
stos
jnp
repnz
mov
cltd
out
adc
or
leave
jb
icebp
cmp
mov
out
mov
fcoms
mov
push
cwtl
push
cmp
inc
cmp
cmpsl
lock
or
or
pop
in
iret
outsb
push
cld
mov
mov
pop
fnsave
xor
cmp
das
sub
repz
jae
nop
out
fcmovnbe
pop
jne
push
fildl
lock
push
xchg
lcall
and
pop
cmp
nop
mov
sub
loopne
inc
inc
ss
dec
mov
stos
lods
js
cmc
add
cmp
xlat
xor
gs
mov
leave
sbb
out
cld
push
leave
mov
and
push
shrl
outsl
arpl
mov
xlat
mov
xor
cmc
xchg
gs
cmp
je
das
cmp
mov
stos
xlat
int3
xchg
lock
push
add
mov
sub
lods
xchg
cmp
mov
neg
call
hlt
inc
popa
mov
notl
or
push
pop
dec
xchg
push
jnp
dec
jp
fsub
cmp
lods
cmp
inc
push
mov
lods
adc
adc
loope
sahf
push
divl
negl
mov
xlat
mov
ficomps
add
arpl
pop
gs
testb
out
scas
jmp
data16
loop
sbb
xor
mov
jns
push
inc
mov
into
insl
fstl
lock
jo
jle
push
or
jns
cli
jno
cmp
das
testl
jl
aad
movsl
ret
mov
xor
es
sub
mov
pop
cmp
or
test
add
xor
xchg
add
aaa
cmp
cmp
out
and
mov
rclb
imul
jns
lahf
inc
adc
addl
aam
xor
loopne
cli
dec
push
sub
jmp
outsl
rcrw
cmpsb
fldcw
insb
subl
pop
and
adc
fistpll
jae
xchg
adc
es
addb
xlat
gs
lods
hlt
add
or
nop
lods
movsb
inc
insb
push
sarl
mov
popf
lods
int3
fistl
rcl
mov
add
xor
mov
sub
sub
xchg
mov
imul
ja
loopne
mov
leave
add
dec
or
call
and
add
sbb
cli
mov
jmp
scas
imul
sub
mov
cltd
xchg
mov
dec
jo
xchg
dec
mov
outsl
addr16
jne,pt
adc
add
int
dec
sub
in
mov
sub
mov
cmp
mov
pop
xchg
xlat
dec
inc
rolb
mov
or
stos
sbb
jne
push
adc
jo
or
cmp
sbbl
pop
mov
into
mov
outsl
mov
add
cmp
loop
mov
push
cwtl
xor
xor
xchg
icebp
cmpsl
jge
jmp
daa
daa
out
aam
int3
add
sbb
inc
mov
xor
incl
jno
mov
jno
cmp
push
inc
mov
in
jmp
xlat
xor
jo
push
inc
mov
xbegin
lret
xor
xor
fimuls
mov
cmpsl
iret
cmpsb
mov
pop
lea
lds
xor
push
xchg
les
aam
mov
lcall
cmp
mov
cmc
data16
push
fimull
cmpsb
mov
inc
psraw
enter
lahf
mov
lret
jbe
jae
bound
js
das
jp
xchg
or
mov
inc
out
xor
in
dec
cmpsl
xchg
ror
ret
pusha
jno
fcoms
mov
fwait
xchg
mov
cmp
sbbl
dec
jno
or
cmp
xlat
enter
jge
jp
mov
push
mov
jo
and
jecxz
insb
mov
dec
aas
jmp
popf
pop
rolb
lea
dec
fadd
loopne
adc
jno
imul
loop
je
hlt
nop
stos
data16
outsb
fisubrl
pop
cmp
stc
push
fcoml
mov
xchg
dec
out
jb
mov
je
push
inc
pop
dec
out
sbb
push
xor
dec
adcb
dec
dec
icebp
xor
sub
xchg
cld
icebp
aaa
mov
fistps
add
inc
fidivl
xchg
int
adc
ret
lret
adc
lcall
insb
loope
adc
test
cmp
rcrb
mov
pop
addr16
inc
cs
cli
ds
sub
pop
jbe
sub
mov
shll
inc
insl
push
mov
cmpsb
addr16
lahf
loopne
outsl
test
ja
addb
jno
je
mov
out
in
jmp
inc
arpl
or
mov
inc
movsb
shr
popa
ret
or
mov
test
addl
lock
lcall
dec
outsl
test
inc
push
fmuls
inc
stos
cmp
ljmp
dec
add
add
das
adc
add
or
mov
add
je
aam
arpl
jno
outsl
xchg
outsl
cmpsl
ret
push
aad
add
dec
ret
inc
and
daa
out
jns
call
jg
jnp
cld
xor
mov
gs
mov
es
in
mov
jg
inc
js
add
shrb
mov
or
stc
fcompl
cli
mov
pushf
popa
sub
sub
mov
fnsave
mov
mov
cmp
mov
cmc
xchg
data16
clc
pop
enter
add
movsl
inc
sub
lods
dec
pop
pop
add
outsb
test
fidivl
xor
dec
xchg
push
es
mov
and
and
push
push
sti
out
mov
push
push
hlt
lea
and
scas
cltd
outsl
mov
fisttpll
pop
adc
sub
jp
int3
fs
std
rclb
addr16
pop
cwtl
in
pop
xchg
andb
mov
adc
mov
push
push
push
lods
push
cmp
das
lods
loope
js
mov
push
nop
or
pop
fbstp
adc
mov
aaa
insb
push
inc
mov
push
sub
je
sub
sub
testb
pushf
mov
clc
jo
fimull
jge
jecxz
xor
stos
sub
icebp
lret
lcall
stc
adc
shll
adc
xor
jns
push
ficomps
mov
ret
cmp
mov
mov
mov
jmp
xor
test
lds
xor
lea
xchg
mov
scas
je
mov
fidivrs
sub
add
js
scas
mov
sub
cmpl
mov
push
mov
icebp
out
or
dec
test
stos
mov
fstps
add
shrl
adc
nop
mov
fsub
es
sub
pusha
cmpsb
and
cltd
insb
pop
jge
inc
lds
mov
cs
adc
movsb
lods
lret
sahf
cmp
scas
sarb
hlt
das
leave
pop
outsb
mov
mov
pop
mov
inc
es
dec
sbbb
jl
shr
adc
jg
bound
test
mov
test
or
xchg
scas
orb
adc
and
dec
rcrl
or
or
sub
push
inc
pop
rcrl
sbb
mov
ljmp
adc
mov
and
sub
ds
cmp
push
out
fs
in
mov
stos
test
mov
dec
cmc
fcomp
jno
and
xchg
into
adc
aad
jne
pop
jb
loopne
sahf
fstps
cmp
jae
orl
nop
and
mov
push
sub
xchg
cmp
rorb
call
scas
rcll
and
repnz
in
dec
test
mov
cmc
mov
cwtl
aad
sub
xchg
scas
pushf
fisubl
xor
mov
data16
lret
inc
scas
in
sub
decl
scas
scas
fdivl
or
outsl
icebp
sahf
or
js
ret
push
jl
or
insb
pop
es
insb
cs
loopne
add
inc
orb
movsb
std
mulb
xchg
into
vmovddup
mov
rcr
cmp
mov
sti
cmp
and
dec
sub
icebp
fldenv
in
mov
ds
clc
mov
lods
mov
fidivl
lea
imul
push
dec
enter
fsts
jb
mov
ds
push
loop
aam
jl
xchg
adc
xchg
aam
aaa
adc
dec
jns
and
test
xchg
aaa
cli
dec
sub
push
repz
sarl
mov
int3
mov
mov
addb
cwtl
cmp
loope
xchg
int3
negb
les
lds
push
mov
stos
imul
add
mov
movb
push
add
and
bound
jl
movsl
cmpsb
repz
add
mov
in
xor
mov
dec
movsl
cltd
jl
roll
lret
mov
ds
adc
fxch
push
fsincos
loopne
pop
out
arpl
lods
push
mov
das
sbb
in
mov
jmp
testb
std
fdivl
lret
jmp
outsl
sub
sub
popf
insl
and
dec
bound
xchg
jg
in
dec
fldcw
lcall
adc
and
icebp
push
repz
cmp
andl
in
test
jge
mov
scas
adc
and
dec
decb
test
push
xor
je
xor
js
std
xor
jnp
mov
xor
icebp
inc
pop
dec
stos
movsb
dec
mov
shll
add
es
jl
xor
xor
push
mov
jb
in
push
mov
sbb
push
pop
add
mov
inc
xor
pop
add
lcall
and
mulb
fs
roll
arpl
sti
popf
jne
les
pop
jne
xchg
sub
lods
sub
fildl
xchg
insl
ds
fildl
bnd
ret
repz
dec
orb
cmp
lahf
adc
add
mul
jp
inc
and
add
arpl
mov
addr16
inc
pushf
fwait
pop
dec
nop
mov
push
push
in
and
xlat
xor
mov
stos
cld
fcmove
jmp
es
scas
adc
lcall
sbb
pop
icebp
int3
pop
lret
jo
cmp
inc
sbb
ror
mov
mov
repz
or
fbstp
test
bound
mov
mov
push
pop
mov
rcl
cmp
sub
adc
lods
adc
jmp
pop
dec
lret
adc
mov
gs
pusha
inc
es
out
fnstsw
addl
xchg
and
inc
or
loope
test
push
in
cmp
sbb
xchg
cmp
sbb
pop
jecxz
xor
rcll
fs
dec
in
imull
and
jge
or
pop
lret
dec
int
clc
div
push
icebp
push
aad
push
pushf
popl
xor
jne
in
lods
std
imul
lret
xor
pop
rcll
shll
cwtl
xor
dec
xchg
in
test
add
loope
das
jl
jb
insl
loope
test
lret
sbb
or
lds
loop
outsb
std
jae
mov
xor
pop
hlt
push
aas
add
lcall
mov
dec
push
lret
or
pop
out
xchg
sbb
lret
add
lds
or
mov
cld
push
mov
ret
push
pop
jle
test
lcall
lds
out
inc
cmc
sbb
hlt
js
test
adc
xor
out
push
jne
testb
call
dec
sbb
in
out
mov
adc
fcomip
mov
push
int
test
imul
inc
mov
out
rcl
cmp
cmpsl
cli
mov
leave
adc
enter
or
stc
popf
pop
iret
sbb
jg
mov
mov
push
sahf
bound
mull
sahf
cmp
or
and
pop
or
mov
push
inc
pop
and
push
cmp
int3
cli
pop
sub
loopne
xchg
xchg
pusha
lock
insb
les
mov
ficoml
repnz
out
cmp
arpl
pop
and
shl
pop
decb
imulb
imul
adc
push
mov
jne
fmull
mov
das
pop
scas
jmp
ret
inc
adc
xchg
out
jne
mov
ret
stos
adc
add
adc
inc
cmp
sbb
sub
scas
mov
push
fnsave
xor
mov
aas
in
add
xchg
mov
popa
out
icebp
stc
aaa
mul
or
xor
aam
pushf
xor
ja
test
out
xchg
testl
and
sarb
xor
mov
push
mov
inc
add
cmp
jb
ja
jmp
cmp
clc
sub
ss
jle
fisubrl
mov
aam
cmp
add
lods
out
pusha
fucomp
or
xor
sbb
pushl
fidivl
test
push
lahf
int3
fstpl
cmpsb
add
ja
std
mov
mov
gs
inc
cmp
add
inc
lods
mov
outsl
pop
mov
shrb
mov
je
in
lock
in
adcl
mov
pop
int3
and
inc
jo
lret
gs
je
pop
cltd
xor
fdivrl
push
popf
ret
jecxz
out
cs
sbb
mov
aas
fsts
imul
cmc
add
mov
clc
jbe
movsl
and
adc
sbb
inc
js
xor
sub
das
cmp
jne
jle
fmuls
mov
dec
lahf
mov
add
mov
or
push
arpl
daa
push
fsubs
mov
pop
xor
mov
push
lods
ds
insl
pop
inc
sti
fisubrs
rol
mov
and
cmp
xchg
mov
mov
mov
arpl
push
xchg
sbb
and
sti
lcall
pop
lods
fdivs
add
pusha
jno
push
push
insb
sub
add
dec
test
lock
ja
jo
sub
jne
loop
inc
call
packsswb
ret
adc
xchg
adc
pop
fucomp
test
add
fwait
sarl
add
sbb
sbb
rcll
mov
push
repnz
sub
inc
fidivrs
lcall
outsb
shr
pusha
mov
mov
aaa
stos
fnstenv
push
xchg
fwait
jns
add
jmp
fstl
enter
pop
imul
pop
mov
dec
mov
push
jae
pop
sbb
xchg
adc
add
jge
xchg
fldcw
popa
jp
xchg
fnsave
add
repz
mov
push
xchg
mov
inc
out
addr16
iret
pop
stos
test
or
mov
pop
les
shll
in
stc
xor
cmp
add
pop
mov
outsl
lods
sub
or
mov
push
pusha
int3
sub
fisttps
icebp
or
xor
push
xchg
ljmp
mov
jg
or
sbb
jle
insb
sbb
addr16
in
clc
mov
cmp
jl
cmp
insb
roll
enter
jecxz
pop
cmp
inc
cmp
or
mov
test
aas
pushf
pop
sbbl
xor
dec
xor
inc
xchg
and
push
xorb
and
movsb
loope
rcrb
std
jb
ljmp
mov
test
les
jo
out
divl
mov
lea
lret
cs
in
adc
cmpsb
push
dec
mov
sbb
lcall
mov
ret
std
sub
stos
lds
in
pop
inc
fisttpl
jp
ljmp
jo
loopne
jge
fcompl
push
xor
outsb
dec
xchg
out
or
xor
out
dec
jae
xlat
in
sub
jnp
mov
or
pop
enter
sub
es
lcall
mov
jne
sub
inc
ror
mov
cmpsl
pushf
push
push
lea
or
jmpw
dec
nop
fisttpl
or
stos
int
xor
shrb
daa
dec
repnz
or
xlat
movsl
dec
adc
pop
lods
mov
sahf
cltd
into
pop
jl
rolb
cmp
aaa
xchg
cmpsb
add
add
pop
out
loopne
adc
xor
mov
add
or
adcl
pop
stos
std
push
in
ss
mov
add
sbb
bound
in
lcall
xor
add
jg
push
pop
popl
imul
sbbl
jne
pop
inc
ret
and
pop
push
out
and
arpl
xor
jecxz
cmpsl
mov
dec
cs
dec
or
loopne
aas
insl
arpl
sahf
icebp
adc
xor
sbb
outsb
ret
stos
shrb
test
mov
aam
mov
sbb
subb
scas
loope
orb
out
imull
in
test
hlt
push
mov
cwtl
add
leave
jo
or
fisttpl
or
or
lahf
dec
mov
add
inc
insb
mov
outsb
pop
or
jle
int
inc
or
sub
nop
pop
in
xor
or
sub
pop
repz
jo
pop
xor
in
adc
mov
add
mov
pop
clc
pop
lret
jns
stos
pop
movsl
stos
cwtl
dec
lea
rorl
movsb
jns
cmp
jbe
mov
push
and
lods
daa
mov
ljmp
xlat
or
into
mov
fldenv
test
test
or
out
add
jl
mov
sbb
gs
inc
lcall
lods
pusha
push
das
and
jmp
cmc
cmp
sub
or
stc
in
and
iret
mov
cs
cli
sub
insb
in
leave
mov
xchg
test
orl
xchg
jp
dec
out
dec
jnp
jbe
enter
pop
ljmp
stos
test
add
cmpsb
xchg
or
dec
loopne
or
test
test
jne
jne
jne
test
xor
cmpsb
mov
adc
jo
cmp
sbb
das
adc
test
xchg
sub
repz
push
fldenv
push
sti
ret
jmp
mov
int
mov
jne
inc
jno
sbb
and
adc
inc
sub
cmpsb
lret
outsl
loope
or
rcll
sarl
mov
adc
out
aas
in
push
aad
ja
fimull
xchg
jno
inc
popa
enter
mov
out
rorb
sbbl
sub
loop
ja
xor
adc
fs
push
enter
pop
mov
cmp
adc
cmp
jbe
push
inc
outsl
stos
inc
xchg
mov
adc
adc
jecxz
lahf
std
add
int
pop
mov
ss
sub
inc
xchg
ret
push
aaa
imul
mov
into
pop
or
ror
inc
pop
sbb
mov
je
dec
out
jg
sbb
lahf
gs
dec
mov
dec
jb
aad
loopne
cmpb
lcall
inc
addr16
pop
sbb
fidivs
push
push
pop
flds
or
das
cmp
cmp
lcall
xor
cli
xchg
fisubs
sbb
idiv
cs
pop
xchg
je
sub
xchg
push
fdivs
xchg
xchg
leave
and
add
jns
test
prefetchwt1
aas
out
out
adcb
fnstenv
adc
addr16
xlat
in
sarb
icebp
adc
sub
mov
add
mov
pushl
mov
and
inc
jle
or
or
mov
sbb
in
sbb
mov
fwait
jno
lea
mov
sar
sub
and
mov
cmpsl
arpl
mov
jge
fcmovb
push
sarl
lods
xor
or
mov
lods
push
push
lods
mov
es
pop
adc
in
cmp
stos
mov
pop
out
test
mov
cltd
and
arpl
push
sub
lds
pop
mov
cmp
aad
inc
mov
mov
mov
pusha
mov
insb
xor
aaa
mov
cli
test
mov
ljmp
dec
insl
jg
in
sbb
or
dec
xorb
test
cmp
push
mov
leave
cmp
mov
pop
bswap
icebp
xchg
push
icebp
or
pop
pop
push
add
pop
pop
inc
jmp
or
test
xlat
sub
mov
dec
inc
lds
cmp
popf
inc
mov
and
mov
xchg
xchg
or
cmpsl
and
in
adc
sub
mov
sbb
sub
js
stc
push
stos
adc
mov
sbb
outsl
mov
scas
bound
dec
push
jl
pop
xor
lds
mov
xchg
or
stc
inc
pop
cmp
push
jb
jns
push
fcmovbe
call
std
and
dec
adcl
inc
cmpsb
xlat
push
xor
xor
rclb
add
mov
addb
inc
xlat
dec
sahf
ljmp
movsb
testb
mov
stos
xchg
movsb
push
pop
outsb
sub
pop
jb
inc
adc
in
jl
je
inc
xor
push
movsl
xor
push
pop
pushf
cmp
rclb
jae
nop
repnz
cmp
push
icebp
jmp
into
mov
data16
mov
dec
push
xor
inc
out
lock
push
pop
sub
lcall
xor
xchg
cltd
jbe
jno
stc
mov
mov
sbb
push
sbb
mov
fs
pop
addr16
sbb
sbb
dec
push
int3
push
jne
cmpsb
movsl
mov
stos
push
sub
int3
scas
sbb
pop
cli
gs
jne
and
mov
xor
jb
mov
sbb
fdivr
xor
fstl
xor
incl
mov
fsubs
sub
push
add
and
and
sbb
lcall
mov
mov
stc
ljmp
mov
in
pop
dec
ja
mov
arpl
or
loope
sbb
or
xor
call
test
js
daa
jge
inc
xchg
mov
ljmp
fnstcw
data16
lcall
invd
pushf
loopne
mov
mov
push
loop
push
sbb
pop
jge
xchg
fs
push
ret
mov
movsb
jns
cmp
push
xchg
ljmp
adc
repnz
test
xor
dec
mov
mov
movaps
push
adc
test
test
pop
rorl
in
gs
loopne
out
mov
imul
repnz
hlt
pop
fisttpll
lret
xor
xchg
stos
in
xchg
inc
and
les
rorb
or
cmp
ljmp
nop
xor
aad
andl
cmc
shlb
mov
fstpt
out
iret
popa
fldt
stc
xor
dec
loopne
imul
push
xchg
sbb
dec
push
in
xchg
popf
dec
mov
push
and
fcmovnbe
fs
sub
pop
inc
test
fs
adc
repz
jns
inc
cmp
je
xchg
pushf
test
nop
lods
test
jecxz
mov
add
cmp
mov
std
mov
dec
dec
push
xor
inc
rol
loop
adc
andb
cmpsl
int
gs
mov
pop
fcomps
int
push
xor
test
jb
add
outsb
sub
inc
or
xor
popf
sbb
stc
adc
fs
sti
test
movsb
jae
inc
pop
insb
insl
xor
dec
dec
mov
fs
jne
adc
lock
cs
jno
or
push
push
mov
dec
mov
jge
inc
xor
xlat
rcr
cli
in
ret
mov
in
jnp
iret
inc
sub
enter
inc
mov
add
cmpsl
sahf
sbb
in
je
mov
out
popa
jmp
outsl
push
pslld
sub
jge
sub
jb
hlt
stos
sub
push
aas
xchg
cmp
out
sub
popf
jb
xchg
stos
inc
jb
cmp
dec
pop
cmp
mov
sbb
and
mov
mov
lret
or
sub
iret
in
fidivl
orb
or
push
dec
flds
pop
fnstsw
scas
stos
int3
roll
cld
sbb
cmpsb
cs
sbb
xchg
mov
xchg
or
cmc
pop
pop
sti
mov
sti
in
mov
add
adc
mov
nop
sub
outsb
call
mov
bound
ret
mov
imul
lret
pop
sub
push
movsb
out
cld
mov
in
mov
data16
ljmp
jbe
mov
stc
pop
and
xchg
fdivr
mov
mov
cli
das
sbb
and
repnz
or
ljmp
nop
cli
mov
or
push
jbe
mov
int
add
pop
mov
cmpsb
push
xchg
push
xchg
inc
adc
bound
and
mov
je
out
incb
pushf
stc
int3
mov
ja
cmpsl
iret
push
cmp
pop
mov
cs
sbb
pop
push
pusha
mov
out
stos
sbb
lret
out
cld
mov
jb
sub
or
shlb
cltd
insb
adc
outsl
and
data16
inc
push
sbb
test
push
sbb
in
mov
add
test
das
push
lret
or
imul
sbb
fdivr
clc
mov
mov
xchg
or
movsb
out
jg
mov
add
imul
std
loope
stos
pop
push
out
dec
popa
jle
sbb
push
loop
jl
pop
jnp
mov
orl
push
inc
jne
test
ja
cmp
ja
xchg
fucomi
dec
testl
das
mov
push
into
iret
mov
js
jns
loopne
mov
mov
jns
jnp
imul
arpl
xlat
test
or
lds
stos
pusha
pop
mov
fstl
inc
popa
fs
shl
movsb
cwtl
pop
stc
xor
pop
adc
mov
xlat
jae
xchg
sub
or
cs
pop
push
lret
fisttpl
lock
adcb
inc
mov
inc
jmp
push
test
inc
lret
mov
unpcklps
das
lret
inc
call
and
ljmp
fisubrs
add
push
mov
cmp
dec
repnz
mov
nop
bound
mov
subb
cmp
or
xchg
mov
fwait
jns
daa
sub
jbe
je
jb
dec
ljmp
fbld
jb
jle
inc
xor
and
jg
mov
out
in
add
jnp
lods
dec
aam
je
std
inc
mov
call
jbe
pop
push
icebp
push
xor
stos
cld
sbb
rclb
inc
arpl
mov
and
popa
into
icebp
sub
and
jns
movsl
loop
in
xchg
pop
repnz
insb
fs
in
cmp
jnp
push
or
xchg
and
sub
jl
loop
cwtl
div
insl
add
sbbl
dec
jns
pop
adc
mov
mov
push
imul
inc
mov
pop
je
pop
jecxz
call
rcr
sbb
pop
lods
add
pop
fisttpl
lds
or
ds
add
jns
iret
mov
or
lods
in
jne
jp
or
fnsave
pop
pop
data16
mov
jbe
dec
jl
pop
xor
jno
das
and
push
fildl
or
incb
les
in
mov
xchg
push
aam
cs
pop
decl
push
add
inc
shll
adc
ja
mov
xchg
out
ret
pop
mull
push
push
loopne
push
addr16
xor
xor
add
decl
test
popa
mov
dec
in
xchg
loop
lods
xchg
mov
xchg
mov
gs
and
xchg
xor
sbb
or
xor
out
mov
and
scas
sbb
lods
loope
mov
fsubl
mov
dec
mov
lock
das
es
repz
dec
outsl
push
fsts
loop
xor
in
lcall
rcrl
bound
add
adc
aaa
sub
aas
mov
push
xchg
jo
xchg
popa
std
outsb
sub
lea
repnz
inc
dec
cli
xchg
xor
cmp
shl
or
cmp
aaa
fcmovbe
dec
in
and
fildl
fldt
pop
add
mov
out
cmp
jmp
daa
fldcw
mov
and
xor
out
leave
and
xlat
aas
sub
or
mov
enter
call
std
add
push
xchg
adc
pusha
xchg
mov
jb
mov
mov
rorl
dec
jbe
adc
es
cmpsl
in
push
aam
js
dec
lret
xchg
fisubrs
adc
pusha
outsl
mov
mov
mov
pop
daa
cmpsw
fadds
into
call
jl
sub
fidivl
mov
cmpsl
mov
movsl
mov
and
or
pop
ja
and
xchg
add
cmp
cltd
es
out
cltd
or
cltd
xchg
cmc
mov
incb
push
and
fldl
inc
mov
mov
shl
jl
mov
adc
imul
out
mov
mov
pusha
mov
and
aad
mov
pusha
cmc
mov
inc
icebp
xor
nop
add
pusha
imul
pushf
xchg
lods
enter
stos
mov
mov
imul
aas
iret
dec
cwtl
ret
out
push
fdivrl
cmp
ret
mov
adc
jo
clc
mov
cmc
pop
lods
fisubl
negb
sbb
sbbb
xchg
ds
popf
lret
mov
add
fwait
call
and
notl
lcall
sarb
mov
adc
lods
scas
xchg
jle
ds
mov
mov
adc
xchg
mov
inc
push
std
nop
adc
icebp
xchg
mov
sub
loop
xchg
iret
sub
xor
inc
sbb
mov
lock
ret
xor
lods
and
movl
xchg
cmp
test
and
mov
and
sbb
mov
mov
movsb
jecxz
shr
ret
dec
loopne
add
fdivrs
lret
lcall
cltd
cwtl
ficomps
into
sti
adc
push
dec
stc
fcompl
out
mov
test
aas
rorb
aam
arpl
push
dec
sub
mov
add
jp
cmp
test
test
popf
xor
notb
ret
int3
mov
jecxz
adc
outsl
sub
loopne
cmpsb
lret
sub
mov
in
ss
mov
inc
xor
hlt
outsb
ja
movsb
stos
loopne
mov
lcall
jmp
out
out
and
or
fdivs
dec
push
push
xlat
xchg
xchg
and
incl
push
aad
js
fiaddl
bound
sub
mov
bound
add
mov
test
lods
cmp
adc
mov
js
adc
in
cld
or
jb
cmpsl
mov
push
addl
sub
clc
pusha
mov
xor
mov
lods
and
mov
jb
iret
popf
stos
call
pop
hlt
popa
mov
mov
ds
mov
insb
cld
mov
push
and
inc
fbstp
out
sti
sub
sub
inc
lahf
hlt
bound
add
das
out
popa
or
xor
and
mov
mov
jbe
fcompl
lahf
push
xlat
rcll
mov
sub
ja
rclb
pop
and
jbe
cmp
das
adc
imul
or
fistps
out
sub
hlt
in
dec
mov
pusha
fadds
aas
and
add
daa
xchg
repnz
inc
jl
movsb
mov
cmp
and
ds
mov
mov
repnz
push
mov
mov
test
push
xchg
or
xchg
stos
xlat
jp
adc
xchg
cmp
stos
mov
es
and
dec
xchg
aaa
xor
mov
and
fs
mov
mov
mov
and
adc
cmpsl
outsl
das
imul
pop
inc
pop
cs
aad
mov
cmp
fwait
in
cmpsl
push
sarb
dec
adc
cmpsb
add
repz
sarl
pop
inc
jecxz
xchg
inc
dec
out
int3
push
movsb
inc
mov
testb
mov
mov
and
sub
mov
pop
aam
cmpsl
inc
call
xchg
pop
sbb
scas
outsb
int3
jge
xchg
or
or
in
sub
loope
cmp
aad
repnz
jge
dec
data16
gs
mov
jno
aas
push
inc
mov
sub
sub
inc
ja
jp
mov
mov
test
data16
in
mov
mov
leave
out
in
std
cmpsb
test
jl
pusha
dec
and
lods
stos
dec
call
and
mov
jnp
push
mov
mov
sbb
scas
mov
fisubs
pop
pop
push
jnp
sub
in
ljmp
jns
out
or
pop
push
and
sahf
push
fcompl
or
outsb
cwtl
outsb
popa
scas
cmp
jne
lahf
sbb
cmp
push
mov
adc
push
and
inc
push
xchg
xchg
sbb
jg
or
jbe
inc
mov
daa
fsubl
sbb
popa
ja
imul
inc
mov
cld
adc
in
mov
mov
pop
js
es
ret
ljmp
xchg
dec
cwtl
repz
push
push
repz
xor
xchg
push
ja
jbe
jge
inc
std
stc
add
fadd
jp
shlb
pop
fldt
mov
jmp
push
xchg
inc
or
daa
sti
insb
jno
cmp
jecxz
push
jb
pop
test
inc
aad
inc
test
sbb
push
sbb
movsb
mov
ljmp
movsl
xor
or
and
cld
in
push
xchg
add
call
xchg
or
imul
adc
lahf
ret
call
sbb
cmp
dec
and
fnstenv
sub
hlt
inc
add
push
jne
or
sub
roll
sbb
sbb
ret
xchg
push
sti
les
insl
push
cmpsl
mov
mov
fs
xchg
shrl
cmpsl
and
cmpl
mov
fdivrs
js
mov
aam
adc
mov
fimuls
xchg
push
test
mov
add
in
pop
add
jecxz
mov
inc
and
addl
mov
addr16
and
xor
cld
pop
cltd
bnd
pop
mov
dec
stos
stc
sbb
mov
inc
pop
dec
lods
imul
push
mov
jmp
aaa
xchg
fwait
push
add
loopne
addr16
stos
sub
pop
mov
jle
push
push
pop
dec
dec
inc
add
push
in
cmc
dec
adc
push
push
test
mov
mov
fsubrs
popf
pop
sbbl
mov
push
push
cmp
jg
aad
cmp
icebp
fcmove
or
xlat
adcb
xchg
mov
xchg
sbb
fidivl
aas
je
fdivr
lret
dec
pop
dec
dec
and
into
lds
cmp
inc
dec
xor
jl
cmp
mov
pop
rorl
pop
jecxz
pop
pop
repnz
sarb
mov
push
rcr
es
shll
icebp
cmp
dec
jmp
sbb
mov
stos
jl
sti
mov
cmp
iret
sub
dec
es
mov
cmpb
fwait
mov
gs
sub
sub
and
insb
push
push
or
test
inc
mov
call
ja
cltd
rclb
and
mov
push
out
out
pushf
sahf
fstps
popa
push
jp
repnz
das
cmpsb
inc
cmp
leave
push
aaa
cli
scas
sub
mov
mov
push
mov
insl
jge
in
test
mov
ret
stos
push
xchg
jle
lds
cmpsl
mov
in
aaa
call
test
xchg
hlt
mov
xchg
imulb
jno
rclb
popf
and
inc
pop
hlt
out
add
test
mov
jmp
dec
repnz
jge
fadds
xor
push
cld
jnp
inc
or
cwtl
aad
sahf
mov
inc
cmp
sbb
cmp
imul
jmp
stos
fstpt
insb
jp
clc
cld
cld
jle
add
das
cmp
inc
xor
movsb
xchg
loopne
aam
out
ja
test
lds
adc
cmp
enter
xor
adc
sub
outsb
cmp
or
sarl
cmp
stc
ja
std
outsb
dec
scas
mov
es
adc
mov
nop
imul
sub
inc
push
test
dec
pop
fistps
jecxz
in
push
mov
jl
int
out
jecxz
jbe
arpl
lock
leave
lahf
mov
mov
dec
inc
dec
mov
dec
push
je
xor
push
fcoms
jns
insb
pop
dec
sub
xchg
mov
push
push
sbb
call
dec
and
fidivs
dec
add
sub
mov
popa
lret
test
ret
push
and
popa
dec
dec
jo
inc
adc
call
mov
inc
loopne
test
divl
leave
lret
jmp
int3
sub
les
pop
cmpsb
ja
adc
call
aaa
in
mov
xor
inc
mov
sub
dec
mov
mov
hlt
dec
popa
push
push
sahf
stos
sub
mov
out
aad
push
add
mov
push
aam
cmp
mov
cld
inc
sarb
popa
lret
shrl
ds
insb
jne
mov
ljmp
mov
insb
push
cmp
mov
mov
jge
leave
jl
test
xchg
pop
stos
mov
xchg
dec
ret
xchg
pop
and
sbb
pop
outsb
pop
jp
inc
frstor
arpl
int
jecxz
loop
inc
pop
adc
mov
shlb
inc
test
ja
ret
lods
push
sub
cmc
ja
mov
adc
sub
jbe
stos
or
mov
sub
sub
jmp
nop
sbbl
mov
std
xor
lcall
jo
adc
lret
add
mov
testb
enter
scas
insl
lcall
pop
rolb
push
dec
mov
in
adc
jle
and
jmp
lret
jmp
outsl
int
repz
jnp
ror
jno
sbb
push
cmp
iret
inc
popa
xor
out
lret
pop
mov
and
cmp
xor
lret
call
sbb
mov
ljmp
imul
cmp
xor
lret
inc
xchg
pusha
dec
mov
sub
lods
andl
pop
aam
pop
mov
rorb
inc
lahf
sub
inc
test
orl
shrl
test
rcrl
add
jno
and
dec
lock
std
leave
rolb
inc
out
je
jnp
jg
xchg
fs
data16
push
push
loope
pop
das
out
test
sbb
xor
jae
or
ret
subb
xor
push
sub
adc
pusha
and
pop
add
inc
sbb
lea
cwtl
pushf
adc
dec
mov
dec
push
xor
push
add
and
mov
dec
push
dec
cmpsl
fdivrl
iret
xor
ret
and
and
or
ret
mov
or
jns
sahf
pop
or
pop
in
adc
push
into
addb
imul
fcmovnbe
call
in
and
xchg
adc
inc
imul
pop
cs
adc
outsb
mov
dec
cli
out
cld
insb
mov
testb
or
int3
xor
adc
mov
mov
pop
jns
push
mov
in
cltd
iret
sarb
cld
scas
fwait
jg
ljmp
js
or
addb
mov
or
dec
rclb
insl
dec
lods
jne
pop
mov
fbstp
mov
pop
and
dec
out
sub
inc
xor
or
std
mov
es
movsl
cmp
and
or
cmpsl
pop
pop
outsl
xchg
xor
xlat
les
aam
jmp
add
ret
mov
push
adc
out
dec
xchg
gs
pop
ret
sub
out
jmp
and
lret
mov
xchg
or
cmp
sub
xchg
aam
fsubs
xchg
and
cld
clc
mov
xor
cld
pop
dec
out
movsl
mov
call
pop
ljmp
adc
dec
nop
mov
stos
rorl
sahf
fmuls
mov
xchg
jle
push
mov
mov
arpl
mov
in
hlt
xor
sbb
push
xchg
push
push
out
mov
inc
xchg
mov
jae
sti
addb
repnz
clc
adc
jecxz
jp
negb
fidivs
push
mov
push
push
xchg
sahf
fucomi
jg
fmul
pushf
pusha
int3
stc
cmp
data16
popf
xor
pop
xchg
inc
push
hlt
in
add
sbb
loope
shlb
cmp
stos
fs
loop
fsubrl
mov
pop
ljmp
inc
cli
cmp
push
xchg
mov
dec
rorb
sbb
xor
and
and
mov
push
cmp
inc
insb
repz
test
mov
xchg
stc
leave
dec
push
pusha
repz
pushf
and
xchg
test
sub
popf
int
mov
fnstsw
pop
fiadds
lcall
jno
mov
add
rcrb
ljmp
sub
loopne
pop
mov
or
lds
mov
cmp
or
hlt
lods
mov
bound
sti
std
mov
mov
pop
push
out
mov
mov
lods
lods
mov
cmp
sub
pop
dec
push
pop
adc
dec
mov
in
add
hlt
jns
mov
push
pop
int3
movsb
pop
mov
enter
adc
pop
fsts
dec
sbb
repz
xchg
sub
out
movsb
mov
mov
repz
xchg
dec
adc
mov
fwait
imul
mov
mov
adc
inc
mov
and
loopne
cmpsl
sarl
call
adc
inc
shrl
cmp
sub
lock
xchg
sbb
push
or
hlt
fdivs
mov
or
pop
jno
adc
dec
les
outsb
movsb
das
sbb
ret
sti
pushf
mov
cmp
adc
push
xor
fistl
jle
ss
cmpsb
pop
cmp
pop
jbe
fcoml
jl
inc
cmp
jp
xchg
inc
inc
je
iret
mov
cmp
dec
cwtl
push
xchg
lock
push
push
push
repnz
mov
sahf
sub
jae
out
call
dec
sbb
cwtl
add
out
fidivl
daa
mov
outsb
gs
mov
jne
push
test
mov
xor
xchg
jg
and
dec
push
push
test
inc
push
cmp
or
inc
xchg
push
mov
ficomps
inc
mov
outsb
outsb
test
in
outsl
idiv
adc
mov
movsb
adc
push
mov
dec
jmp
outsb
push
clc
ss
in
jp
push
mov
cli
loopne
arpl
xchg
sbb
lcall
andb
mov
arpl
rol
fcoml
divl
bound
test
test
sbb
jmp
addl
xlat
mov
test
dec
adc
mov
sahf
mov
pop
inc
cmc
add
sub
sub
int3
popa
and
ss
loope
lods
add
jecxz
ret
push
outsl
pop
jge
stos
fdiv
loopne
rorl
jp
lret
xor
jecxz
xchg
mov
in
in
scas
jo
fidivl
mov
pop
pmulhuw
ret
pushf
je
pop
jp
movsb
jb
pop
mov
fcmovnb
ljmp
adc
flds
or
mov
ss
sahf
push
ljmp
mov
mov
ds
pop
add
lods
cmp
push
in
inc
mov
les
pushl
push
or
shr
xor
inc
xor
sbb
in
int
je
or
mov
les
mov
inc
adc
mov
jae
cmp
xchg
mov
ficompl
aad
out
sti
cli
imul
shl
dec
pop
inc
pop
fstl
js
fmull
lods
jb
mov
xlat
aaa
or
sub
pop
aad
test
and
sbb
out
mov
jns
jae
fcmovnbe
and
sub
xchg
dec
loopne
or
pop
xlat
jb
mov
jl
jnp
xchg
mov
js
cwtl
push
cmpb
aas
jmp
leave
mov
repz
clc
lcall
sub
xor
inc
inc
fisttps
push
cmpsl
ljmp
pop
loope
cmp
sbb
aaa
sbb
rcl
xor
in
sahf
fdivrs
sbb
fs
pop
xchg
pop
cmp
push
mov
iret
inc
pop
xor
or
scas
ljmp
and
sarb
pushf
adc
jne
ss
pop
inc
imul
mov
xor
movsb
aas
mov
jnp
pop
xor
inc
pushf
fsubrl
jmp
push
js
ds
pushf
inc
es
xor
orb
jne
xchg
cmp
push
pushf
pop
loope
cmpsl
insb
repnz
test
or
sub
imul
pop
int
fs
push
mov
mov
mov
idivb
testl
cmpsl
pop
out
lds
cmp
in
out
test
cmp
push
fst
jo
push
rcrb
push
adc
xchg
addr16
mov
mov
cmp
pushf
rcrw
stos
jle
sbb
dec
inc
pop
xor
mov
aam
es
jmp
push
jl
insb
stos
mov
add
sub
and
mov
xchg
push
pop
xchg
mov
xor
or
fdivrl
jb
int
iret
divl
cmp
push
sub
jno
jecxz
mov
dec
push
outsb
xor
jbe
add
dec
test
sarb
scas
adc
mov
inc
subl
cli
cld
adc
fidivrs
loop
or
cli
fistl
into
xchg
cmpsb
std
push
sbb
inc
mov
shlb
incl
inc
dec
xchg
cmpsb
in
std
xchg
fimuls
lods
adc
inc
push
adc
push
xor
and
and
xor
push
int3
daa
mov
inc
iret
inc
pop
testl
mov
lsl
fsubrl
jb
imul
jl
neg
addr16
lea
jge
sbb
negb
out
mov
out
call
and
pop
mov
mov
movsl
loope
jge
out
jnp
lret
mov
ret
xchg
dec
sahf
xor
sub
push
and
movsb
addr16
mov
or
pop
sbb
adc
xchg
push
mov
mov
jmp
and
mov
les
sbb
imul
test
outsl
shrl
add
rclb
xchg
sub
pop
pop
jecxz
jae
xchg
fdecstp
sub
imul
mov
xor
out
orl
lods
lret
push
add
or
push
sub
cwtl
xchg
mov
popf
cwtl
sbb
mov
call
jmp
aam
and
xchg
jle
jae
xor
call
imull
and
xchg
push
fidivrl
imul
xlat
lods
mov
mov
sbb
push
out
cmp
cmpsl
jne
push
andb
aaa
sub
sarb
addl
cltd
iretw
or
cltd
dec
xor
cmp
out
mov
xlat
inc
mov
pop
jno
mov
fimuls
movsb
mov
sbb
push
mov
frstor
and
add
or
cwtl
inc
sbb
push
push
jge
imul
idivl
mov
push
mov
jle
sub
sar
jecxz
mov
mov
dec
lods
sbb
sub
lahf
push
pop
lret
push
loopne
cmc
xchg
fxtract
mull
insb
sbb
out
rolb
lds
add
xor
dec
fwait
sti
iret
mov
mov
jge
ficomps
cs
scas
adc
jnp
mov
clc
mov
sbb
roll
cli
or
out
jae
push
int3
es
add
mov
dec
punpcklbw
iret
inc
xchg
xor
clc
mov
mov
jo
ffree
in
fldl
stos
jg
dec
jmp
lahf
popf
mov
mov
repz
aas
jno
jp
jmp
and
or
adc
outsl
mov
cmp
push
dec
xlat
sti
mov
adc
add
cli
sbb
add
es
popf
pop
or
shlb
xchg
cmp
or
xor
adc
lods
push
xor
inc
es
pusha
xchg
sub
dec
stos
push
fcoml
test
push
sbb
adcb
das
adc
dec
pop
ja
xor
test
idiv
roll
rcl
pop
shrb
push
push
add
insl
or
add
cmp
push
jmp
mov
dec
test
jne
test
mov
push
add
mov
insb
and
mov
pusha
fs
mov
sahf
push
and
inc
js
ds
xchg
lods
enter
cmp
je
arpl
pop
out
fbld
out
stc
jns
jl
xchg
cmp
test
xchg
fildll
mov
cltd
xchg
inc
pop
pop
dec
in
adc
pop
or
push
jecxz
sub
sub
sbb
inc
push
das
push
sbb
ficoms
imul
cmp
mov
notb
and
arpl
cmp
push
inc
mov
adc
cmp
xor
movsb
insl
gs
push
cwtl
mov
xor
xor
push
jl
sbb
sbb
scas
iret
xchg
adc
xchg
data16
push
in
push
icebp
sbb
pop
xchg
jp
push
push
test
or
stos
sub
lods
push
mov
mov
xchg
adc
iret
aam
ljmp
sub
jle
inc
pop
mov
faddl
popa
jle
stos
enter
push
ja
cmpsl
outsb
inc
sahf
je
lcall
out
mov
dec
mov
cmc
addl
dec
pop
xor
popf
mov
in
std
mov
loopne
inc
fcoms
xor
pusha
push
jnp
jmp
or
pushf
popf
shrb
std
jb
dec
out
hlt
pop
imul
mov
adc
xchg
push
fnstsw
push
out
aaa
scas
std
fsubl
lahf
mov
dec
lds
pop
aad
les
shrl
das
test
pop
leave
dec
mov
mov
mov
xor
jecxz
lret
andl
shl
pushf
dec
pop
inc
int3
int3
jle
or
lods
mov
hlt
fbstp
fcoml
ss
cmp
gs
push
repz
pop
lds
pop
pop
out
jle
sbb
xor
dec
adc
push
and
jns
arpl
call
xchg
or
shl
daa
adc
push
sbb
dec
inc
add
aam
out
lods
push
popa
inc
mov
rorl
icebp
addr16
lahf
js
mov
push
insl
pop
xchg
mov
aad
cs
cmp
ficompl
cli
lret
cld
ja
mov
xor
lds
in
mov
ds
inc
repz
dec
sbb
repz
cmp
in
inc
push
out
lret
hlt
repz
sub
aas
lods
fldenv
lea
pop
subl
cmp
scas
out
and
add
fidivrs
mov
inc
in
mov
inc
cmpsl
rcll
in
outsb
jb
jp
lds
mov
ss
lret
pop
lahf
push
and
jl
repnz
cli
mov
daa
ss
dec
mov
test
clc
test
iret
loope
aad
les
push
dec
sbb
sub
pop
hlt
or
cmp
pop
push
push
or
xor
push
dec
stc
sbb
aam
jb
rcr
push
je
inc
data16
add
pop
mov
shlb
sub
adc
mov
push
je
add
leave
dec
or
clc
fcmovu
cmc
cmp
inc
mov
xchg
dec
mov
xor
daa
sub
imul
pop
aam
dec
and
jl
jns
pushf
mov
inc
push
sti
cwtl
sarl
pop
pop
sbb
daa
adc
mov
or
out
aas
insl
in
jp
dec
fstl
ficoms
dec
push
sub
xchg
sub
sbb
insb
out
xchg
ror
mov
mov
aaa
mov
mov
out
jmp
xor
push
pop
mov
mov
imul
in
lods
les
fcom
pop
adc
fdivp
mov
in
mov
mov
in
cmp
outsb
ret
pop
das
jp
sub
nop
scas
push
cli
pop
stos
pop
xchg
dec
mov
mov
iret
mov
dec
fs
push
in
sub
add
jl
lods
imul
out
push
cmpsl
mov
xor
dec
mov
sub
mov
cltd
adc
addr16
mov
addb
cli
xchg
imulb
arpl
mov
shr
xor
sub
es
sub
push
pop
xchg
in
aad
fidivrl
mov
and
fs
fisubs
mov
data16
xchg
mov
mov
cwtl
and
int
into
movsb
mov
jns
mov
shlb
pusha
inc
mov
mov
pop
shll
add
or
les
push
das
lret
mov
rclb
aad
aaa
jne
das
popf
push
js
jo
sbb
mov
mov
std
adc
outsb
test
mov
xchg
out
mov
jmp
mov
jno
dec
mov
push
mov
xchg
es
mov
outsl
or
rcrb
xchg
ret
mov
and
pop
ljmp
int
inc
loope
bswap
ja
clc
mov
inc
adc
push
inc
int
daa
xchg
fwait
stos
insb
xor
xor
mov
xor
jle
xor
cmp
jne
mov
lea
inc
push
push
jmp
sub
nop
inc
xor
imul
xor
mov
loope
pop
aaa
sub
daa
shrb
jge
inc
aas
inc
scas
cmpsl
sub
mov
outsb
jo
rcll
cmp
scas
mov
stc
and
cmpsb
adc
cmpsl
outsl
or
gs
or
mov
or
inc
mov
or
aad
repnz
lret
pop
xchg
loop
jns
outsl
ret
xor
rcrb
jnp
fiaddl
sbb
inc
lea
or
jb
aad
fcoms
enter
bound
ret
push
mov
push
nop
es
gs
xlat
cli
bound
xchg
jbe
addr16
ror
ss
inc
gs
mov
stos
and
and
stc
call
push
test
icebp
clc
and
jg
clc
xor
sub
call
mov
adcb
in
lret
mov
dec
aam
xchg
mov
fdivr
cmp
dec
into
xchg
popa
sbb
mov
mov
das
clc
push
sub
ret
mov
rcrl
outsb
xor
xchg
mov
icebp
stc
inc
sub
in
std
call
imul
mov
test
dec
imul
fildll
jge
jae
sbb
les
add
leave
loop
ljmp
addr16
out
cli
js
push
or
cwtl
cmpsb
fldenv
adc
js
dec
dec
push
add
cmc
pop
inc
pop
xorl
or
ret
test
ja
arpl
sahf
push
mov
lds
scas
cwtl
stos
movsb
and
mov
es
xchg
add
pop
mov
pusha
in
scas
and
in
fidivl
add
sbb
pop
rclb
orl
xor
outsl
daa
cwtl
mov
pop
scas
or
xor
loopne
std
mov
cmp
int
xor
mov
loope
mov
scas
xchg
pop
pop
xchg
jle
sbb
sbb
xchg
das
outsl
push
adc
xchg
decl
test
dec
cmp
xor
and
or
jnp
jo
sbb
enter
add
jns
cmp
sbb
jmp
pushf
stc
lea
fsub
lcall
movsl
jmp
cmc
cmpsb
xor
fcompl
jl
je
imul
mov
sub
icebp
mov
cmp
outsb
mov
fiaddl
or
add
push
adc
sub
jnp
pop
std
cwtl
jp
dec
lods
pop
jbe
pop
inc
push
rcrw
sub
or
mov
jbe
xor
fldcw
fnstcw
fcmovnbe
cmp
icebp
mov
movsb
push
lock
ret
mov
sub
or
mov
iret
popf
call
movsb
movups
arpl
inc
pand
mov
inc
ds
sub
dec
xchg
fwait
xchg
sbb
or
out
in
out
dec
sbb
push
jl
repnz
or
jns
repnz
ja
int3
repnz
imulb
lahf
hlt
sub
cmp
sbb
fiadds
cmpsl
adc
push
jg
movsl
push
lret
imul
cmc
clc
jg
push
mov
cmp
jne
pop
pop
xchg
aaa
or
insb
jl
mov
lock
rcl
es
fmulp
add
setnp
jecxz
jmp
shlb
lods
adc
dec
jae
dec
mov
xor
icebp
pop
xchg
cmp
ss
out
test
dec
adc
std
in
mov
dec
sbb
daa
dec
mov
add
pop
push
sub
sub
adc
loope
add
call
or
xchg
push
stos
xor
push
popa
ds
mov
ret
notb
jg
xor
jbe
jmp
lret
cmp
push
and
test
in
enter
ret
sub
stc
adc
arpl
test
sub
loop
xchg
pusha
sub
popa
sbb
mov
xor
cmp
mov
mov
add
clc
mov
pusha
mov
fidivs
in
and
mov
or
insb
mov
sub
dec
loope
cmpsb
xchg
cmp
pop
jg
sbb
lahf
fistl
inc
dec
jge
stos
aaa
pusha
es
out
mov
sbb
outsb
scas
jp
lock
lahf
lret
sti
ja
push
xor
lock
jge
dec
mov
lret
push
and
dec
inc
push
adc
adc
inc
stc
adc
test
out
stc
cmpsb
mov
sbb
rcl
and
ljmp
and
jl
movsb
nop
test
leave
cmpsl
shrb
pop
rol
dec
dec
add
push
inc
roll
sahf
pop
xchg
int
test
shlb
sbb
lods
adc
arpl
mov
mov
mov
data16
sbb
mov
in
xchg
data16
dec
mov
popf
popf
andb
jmp
cltd
in
imul
rcll
or
jo
cmp
in
jmp
xchg
and
push
pop
sub
mov
mov
addr16
inc
inc
sbb
cltd
lahf
pop
cmp
inc
push
ja
popa
sub
je
fwait
cmpb
xlat
mov
push
push
pop
lods
out
ja
cmp
adc
jmp
pop
jmp
bswap
int
pop
pop
call
xor
pushf
test
xor
and
push
jle
je
lret
or
cmp
xor
jnp
mov
cmc
test
sarl
sbb
test
shrl
repnz
xchg
add
and
stos
leave
xchg
mov
roll
mov
sub
push
mov
loopne
push
mov
aad
pop
push
mov
mulb
sub
xchg
nop
int3
in
lods
cmp
loop
sti
out
cmp
lock
int
dec
adcl
jecxz
test
in
inc
dec
ljmp
jne
adc
sahf
jnp
aas
cmc
jno
sti
and
cmpsl
add
jb
add
sub
jae
sbb
push
xor
lods
jmp
lret
shr
or
jno
add
push
add
sti
dec
mov
mov
das
mov
xchg
cmp
mov
or
jno
xchg
mov
push
mov
or
lret
add
repz
add
push
movsl
cmovns
pushf
xchg
lret
orb
pop
pop
cmp
fwait
dec
adc
fdivp
inc
insb
cmp
sti
mov
push
xor
arpl
xor
jmp
inc
addr16
test
adc
xor
pop
lds
rcr
sbb
xor
ret
cmc
shlb
push
adc
cmp
adc
loop
test
add
pusha
mov
and
subl
mov
test
push
adc
fimuls
addl
adc
jp
push
xchg
jg
fadd
xor
xchg
repz
mov
push
in
mov
lock
sbb
inc
mov
xor
sbb
scas
and
mov
jl
insl
data16
jmp
inc
and
insl
jbe
xchg
arpl
inc
into
pusha
xacquire
push
inc
mov
in
xor
subl
daa
push
rorl
push
add
test
nop
mov
repz
movsl
cwtl
pop
adc
add
mov
and
daa
shl
cmpsb
pop
cld
jne
ds
stc
adc
dec
int3
aaa
aad
int
mov
mov
mov
and
out
jmp
and
jns
cmpsb
das
ljmp
icebp
adc
cmp
jb
adc
arpl
sub
mov
add
jmp
lret
cmp
xchg
push
fisubs
cmp
pop
into
xchg
xchg
adc
js
dec
fistps
dec
iret
and
nop
out
outsl
mov
dec
adc
jmp
push
and
call
out
lea
loope
test
mov
incl
push
inc
les
lret
jp
mov
cmc
pop
repnz
pop
jmp
add
pop
int3
dec
pop
and
pop
loopne
sub
jmp
shlb
cmp
cs
mov
mov
push
and
jne
sub
push
jns
lods
loop
or
sahf
push
cmp
enter
das
hlt
mov
inc
lahf
imul
dec
loope
adc
mov
sbb
aaa
add
jnp
popa
cmp
rcrb
sarb
or
push
mov
pop
push
es
shl
lds
mov
cmp
xchg
sahf
push
repnz
ret
push
push
test
jbe
mov
pushf
ss
scas
mov
sub
pop
push
sub
lret
sub
jge
pop
jle
cmp
push
and
insl
push
add
sarb
push
jb
fnstcw
repnz
cld
inc
push
arpl
nop
movsb
pushf
into
cli
outsb
adc
inc
mov
jg
cmp
push
jno
movsb
sarb
in
jl
mov
imul
andl
and
and
cli
fwait
test
int
mov
jb
lds
out
pop
sti
ret
and
fisttps
xor
adc
xor
divl
xor
or
in
and
xor
leave
lea
push
cmp
adc
fiadds
insl
pop
adc
mov
lahf
inc
fdiv
add
out
idivl
xchg
xchg
clc
ja
lret
in
jno
and
faddl
stos
mov
mov
in
cld
ror
incl
in
mov
xchg
or
negl
jns
push
xor
mov
xchg
imul
int
subb
das
ret
add
imul
jne
int
gs
les
mov
pop
popa
std
inc
fadds
cmc
or
scas
out
mov
pop
addr16
push
xchg
pop
inc
push
int
mov
mov
in
inc
lods
mov
pushf
jle
rcl
popa
add
dec
stos
mov
pop
std
cmpsb
and
xlat
or
in
mov
test
add
shlb
push
cmpsb
subb
add
fidivs
xchg
jno
jbe
popf
cmp
jl
lods
ret
mov
repnz
dec
mov
push
cmp
int3
mov
adc
aad
xor
xchg
xor
jb
fwait
jne
dec
adc
js
xchg
mov
imul
push
lds
loop
jnp
cmpb
inc
mov
stos
push
xor
inc
movsl
aas
xchg
push
arpl
lds
repz
nop
xchg
in
movsl
cmp
xor
ljmp
cmpsl
lea
xchg
mov
arpl
mov
out
mov
mov
ss
aaa
xor
lret
mul
mov
imul
or
jecxz
jle
pop
dec
or
mov
pop
or
add
pop
loope
cmp
int
es
and
cmp
ss
std
mov
hlt
lret
imul
cld
loopne
movsb
js
movsb
or
rcll
test
fadd
scas
and
sbb
xchg
cmp
mov
int
jbe
sub
push
dec
roll
sbb
inc
ds
sahf
jp
add
iret
add
insl
or
pop
repnz
pop
add
orb
push
pop
ss
mov
gs
xchg
sbb
rcrl
cmp
xor
int
ret
mov
sub
bound
sub
insl
dec
scas
push
adc
int
mov
mov
sbb
pop
push
aam
call
push
mov
stos
jg
jae
mov
mov
push
loop
jle
push
pop
test
ljmp
icebp
test
das
pop
sbb
leave
add
insl
adc
sbbl
lods
or
mov
sti
pop
sahf
cli
repz
vmulss
pop
mov
push
xchg
orl
cmpsb
fsts
imul
insl
fcoml
jg
std
and
pop
mov
push
mov
in
fldl
pop
fucomp
add
jno
scas
std
adc
clc
out
push
or
enter
adc
frstor
sbb
subb
pop
and
in
jb
in
jmp
sbb
push
push
loopne
aaa
and
pop
jecxz
stos
cmc
inc
or
mov
dec
repz
sub
in
gs
cs
mov
sbb
push
mov
pop
sbb
xchg
scas
fs
sbb
arpl
cmpsb
pop
leave
push
dec
scas
clc
mov
movsl
push
cld
pushf
sbb
bound
mov
sarl
mov
test
cmp
movsl
daa
lods
dec
mov
push
lret
or
dec
rorl
jle
lods
xor
imul
test
pop
pusha
scas
sar
add
xor
push
push
int
cltd
inc
sbb
rcrl
and
xchg
xchg
call
dec
popf
decl
jge
jns
dec
xor
cmp
mov
mov
push
adc
cmp
jle
or
fs
inc
jns
fisubl
out
pop
mov
ss
in
gs
dec
repz
pushf
lahf
inc
sbb
mov
ja
cli
cmp
mov
push
adc
pop
cmp
xlat
movb
lret
cltd
lock
cmp
inc
clc
aad
enter
jmp
pop
pop
push
data16
cmp
pop
xor
add
shl
lcallw
dec
pop
push
mov
push
jmp
imul
jecxz
adc
imul
scas
xchg
nop
pop
imulb
and
cld
xorl
jae
add
scas
xchg
ficomps
into
outsl
cwtl
fs
inc
xchg
test
xor
leave
jns
and
push
cli
adc
outsb
mov
fs
lahf
jp
int
scas
xchg
inc
xchg
aas
adc
sti
push
shll
jl
in
int
cmp
jp
pop
or
mov
push
add
icebp
xchg
js
js
mov
inc
jns
fimuls
loop
add
xor
push
cmp
inc
inc
mov
mov
mov
xchg
es
sarb
mov
cmc
in
adc
sub
jb
add
jo
pop
cmp
mov
mov
sahf
jg
aad
not
sti
movl
movsl
sbb
sub
adc
dec
in
dec
lds
pusha
lret
or
iret
adc
mov
sbb
inc
divb
jg
push
lret
mov
dec
xor
mov
jg
scas
rcrb
dec
aas
xorl
sub
in
out
and
sbb
imul
ret
into
push
movsb
std
test
add
outsb
in
or
cmpsl
mov
addr16
out
and
fisttps
sub
xchg
sub
cltd
sbb
xchg
dec
jg
mov
fidivrs
or
and
adc
xchg
pop
jbe
data16
cmpsb
decb
gs
adc
lret
xchg
subb
add
inc
stos
ret
inc
cltd
or
je,pt
lret
bnd
adc
hlt
outsb
mov
jo
movsb
stos
stos
imul
pushl
dec
inc
cmp
test
sub
fisttpll
jo
cwtl
outsl
out
jnp
mov
flds
inc
xor
roll
lods
lret
mov
out
icebp
adc
mov
sub
jno
mov
push
mov
popf
das
sbb
xor
cmp
in
cmpsl
loopne
cs
xor
mov
push
ds
pusha
inc
mov
enter
pop
arpl
mov
popf
int3
inc
sbb
cmp
into
fidivrl
add
ret
int
mov
pop
outsb
es
bound
mov
test
icebp
ret
mov
out
enter
sbb
dec
or
mov
stos
fidivl
aaa
scas
cli
in
and
xchg
aaa
sbb
pop
movsb
pop
mov
sbb
sbb
fstpt
pop
cmp
sbbb
dec
js
jns
mov
xchg
popa
stos
dec
pushw
sbb
jo
ret
sbbb
and
scas
sub
aad
shrl
xchg
into
mov
jecxz
popa
out
add
mov
dec
cmp
push
add
add
and
sbb
dec
sbb
mov
gs
icebp
inc
ljmp
lea
les
andl
cwtl
mov
mov
push
scas
adc
push
popf
cmpsl
cld
sarl
sarb
or
insb
icebp
popf
mov
and
ret
xorb
and
loopne
or
mov
clc
cmp
add
and
lahf
cmp
aaa
enter
andb
pop
sub
pop
icebp
call
iret
rcrb
out
out
pop
aam
negb
push
ljmp
pop
jne
xchg
fnstenv
pop
fcompl
xor
or
ja
dec
out
cmp
in
sbb
mov
ja
mov
and
xchg
ficomps
out
cmp
outsb
sbb
pop
pop
lcall
inc
adc
and
adc
in
mov
ret
sbb
ljmp
jp
sub
shlb
sub
jb
lea
xchg
jge
mov
xor
xor
movsl
aam
outsl
xchg
loopne
movsb
clc
int
rcl
ja
adc
and
mov
stos
or
xor
push
mov
jge
jnp
xlat
mov
ja
ret
sub
xlat
arpl
rorb
mov
inc
pop
adc
jecxz
lret
lock
clc
imul
push
aas
inc
and
cs
push
enter
in
lret
push
cmp
and
dec
rcrb
fmul
dec
mov
inc
out
cs
pop
mov
dec
dec
sub
imul
xchg
mov
jae
mov
sahf
sahf
and
push
pop
pop
stos
fisubrs
std
fcmovu
mov
mov
mov
fidivs
pushl
fs
sub
mov
std
push
mov
cli
xchg
xchg
jae,pn
pop
aaa
pop
jns
mov
je
daa
push
adc
xchg
mov
leave
jnp
dec
cmp
loopne
sahf
or
sbb
js
test
sub
sub
sub
frstor
scas
lods
jmp
sub
and
push
inc
scas
scas
mov
sbb
cmpsb
aaa
mov
aam
inc
popf
rorl
ja
inc
arpl
lds
and
rclb
or
inc
cmp
lods
jnp
cmp
int
pushf
mov
push
cmpsb
bound
mov
push
arpl
push
test
jecxz
int3
xchg
int
aad
sbb
lds
mov
stc
mov
pop
push
aad
cmpsb
push
es
and
js
xchg
or
lods
test
mov
sbb
iret
mov
xor
pusha
loopne
fiadds
jmp
std
cli
push
mov
insl
das
sbb
and
sbb
jno
adc
xor
loop
xchg
pop
mov
dec
xor
ja
iret
push
cmp
and
xchg
cmpsb
adc
and
xchg
jmp
dec
push
ds
fwait
lahf
ret
test
insl
icebp
out
mov
sbb
pop
mov
push
xchg
enter
inc
jg
add
enter
fdivrs
jp
leave
imul
push
rclb
dec
jne
sti
or
xlat
mov
cmp
cmp
imul
cltd
outsl
cmpsl
rorb
xchg
test
ljmp
add
xchg
mov
jle
add
addr16
aam
arpl
dec
jl
fcmovnu
rcrb
in
les
push
in
std
std
adc
in
std
add
adcb
repz
xor
jo
jge
test
push
fwait
sarb
mov
fisubrs
ficompl
fbstp
ret
and
dec
popa
enter
push
dec
mov
ret
push
rcll
jmp
orl
daa
xor
lock
cmp
std
gs
lods
aas
ja
sti
cmpl
xor
adc
mov
push
dec
jle
hlt
cmp
mov
std
xchg
or
adc
std
jg
nop
xchg
mov
add
xchg
cltd
or
adcl
add
int3
sbb
jns
pop
mov
mov
jmp
in
dec
cmc
sub
lcall
push
bound
mov
in
xor
mov
cmpsb
rol
fwait
dec
in
int3
dec
mov
pop
mov
scas
mov
sti
mov
push
cwtl
sub
dec
or
arpl
jnp
pop
mov
add
mov
rcll
jle
lds
shlb
das
lock
cmpl
dec
and
pop
shlb
fucomi
cld
out
dec
fsubs
sbb
sbb
push
or
lcall
xchg
mov
scas
fnsave
shl
arpl
jl
add
stos
pop
popa
or
push
das
push
loop
loope
aaa
sbb
and
dec
insl
pusha
repz
and
pop
mov
jmp
lret
mov
rorb
stos
cmc
dec
add
xchg
aad
or
sbb
jns
xor
push
mov
adc
sub
sub
mov
in
xor
jle
add
sub
push
xchg
gs
loop
jae
cltd
outsb
pop
inc
js
filds
movb
push
xor
and
xchg
bound
iret
jecxz
loop
testl
push
loop
xchg
mov
scas
sbb
xor
pop
or
push
sbb
aas
cld
std
and
negb
mov
jnp
aaa
das
cli
inc
mov
repnz
inc
cmpsb
ret
pop
sahf
push
xor
daa
xchg
jne
or
out
dec
cmp
fildll
or
jmp
leave
mov
int
jbe
push
pop
incl
push
bound
pop
adc
stos
jae
fildll
push
pop
cmpsl
lcall
jo,pn
jne
movsl
mov
xor
pop
inc
adc
test
mov
je
xchg
dec
xchg
scas
int
and
xchg
push
cmp
sbb
inc
repnz
xchg
and
adc
push
subl
ffreep
aad
popf
pop
inc
push
fisubrs
iret
dec
mov
cmp
and
dec
mov
mov
rcrl
lock
mov
inc
in
add
sub
into
scas
lret
mov
jns
out
xor
add
in
fbstp
call
dec
adc
mov
xor
inc
je
mov
iret
sbbl
shll
je
cwtl
mov
sub
enter
push
popa
ret
dec
jl
mov
lret
pop
clc
clc
add
in
push
or
inc
or
bound
jnp
mov
xchg
sbb
mov
call
aad
les
pushf
cs
insl
vhsubpd
sub
cmp
jae
shrb
push
aaa
mov
fnsave
jmp
sub
push
inc
popa
popf
jnp
xchg
inc
fwait
test
in
add
push
sti
sbb
adc
in
sub
mov
imul
ja
daa
cmp
std
mov
jmp
stos
pop
int3
lcall
and
sub
add
arpl
movl
in
imul
insb
repz
ret
aad
stc
mov
movsb
in
mov
add
and
mov
dec
pusha
jge
fcomps
push
pop
push
insb
rorb
push
outsb
or
add
cmp
sbb
repnz
test
sbb
mov
and
xor
sbb
xor
sbb
cmp
popf
jge
and
mov
add
jbe
stc
int3
out
mov
dec
mov
gs
mov
pop
sbb
mov
sub
setp
enter
adc
cmp
adc
push
int
jecxz
stos
sub
cmp
pop
gs
insl
loope
leave
xor
cmpsb
mov
sbb
xchg
xor
dec
push
sbb
xor
dec
leave
ret
sbb
ds
scas
jo
sbbb
or
pop
cld
jmp
mov
cmp
loopne
roll
mov
sbb
or
notb
jns
pop
cwtl
clc
xor
fstps
push
inc
push
push
sarl
aad
inc
mov
jp
cmp
add
iret
inc
in
cmc
xchg
adc
pop
sti
or
in
loop
push
outsb
jbe
sbb
fsubs
inc
inc
mov
stos
arpl
and
test
inc
xchg
sar
jg
lret
fwait
pusha
cmp
in
or
cmp
ret
jbe
jns
mov
fwait
push
cmc
aas
jg
pop
aam
scas
cmp
jnp
dec
cmp
fcoms
ljmp
fisubrl
imul
adc
jecxz
adcl
and
insb
test
add
xchg
sbb
cmpsl
push
push
jle
imul
inc
cwtl
mov
cmp
pop
scas
jp
pop
sahf
in
pop
loope
pop
dec
fst
bound
xor
out
mov
rcl
add
shrl
std
hlt
mov
test
out
add
add
xor
jb
into
iret
aam
movsl
icebp
fbstp
jecxz
jle
xlat
imul
and
ret
mov
pop
push
push
push
arpl
enter
mov
jge
mov
mov
lret
mull
bnd
frstor
bound
jno
adc
mov
insb
add
shll
into
jecxz
push
leave
sbb
mov
mov
es
mov
pop
dec
xlat
or
test
in
xchg
ja
jp
add
fs
punpckhwd
add
sub
xor
notl
data16
push
adc
ljmp
jo
mov
pushf
pop
sub
dec
popf
mov
xor
cs
push
shrl
sub
xchg
add
pushf
adc
aad
loopne
mov
test
rcll
int
sbb
mov
and
adc
jp
add
sbb
adc
adc
inc
in
sub
jl
dec
fwait
repz
dec
cmp
push
loop
adc
cwtl
dec
push
aas
in
mov
inc
std
jmp
xchg
decb
jno
and
jp
push
cmp
lahf
sbb
xor
mov
ss
fildl
pop
cs
mov
add
cmc
or
xor
scas
pop
xlat
in
push
stos
in
cltd
mov
pop
jecxz
jns
sti
mov
iret
jbe
push
sbb
jg
js
popf
xor
push
mov
dec
std
mov
in
stos
hlt
bound
cld
in
movsl
pop
mov
icebp
mov
lret
sub
in
sti
ret
hlt
lea
mov
ljmp
xor
sub
leave
cmp
xchg
add
jne
mov
xor
xchg
sbb
push
out
xlat
ret
xchg
test
out
ds
dec
sbb
shll
sti
ja
xor
lret
ljmp
dec
test
int
nop
pop
rcr
jp
cmp
aad
call
mov
cmpsb
adc
dec
test
mov
add
push
lods
cmp
popa
cld
in
sbb
jge
repnz
add
sub
loop
aas
inc
pop
aaa
mov
cmpsl
cmpb
test
push
stos
call
sarl
xchg
jo
enter
push
cmp
in
fidivrl
pop
sti
dec
sub
mov
sbb
jae
inc
mov
sub
dec
mov
es
sbb
mov
arpl
push
dec
xchg
mov
outsl
push
mov
pop
pop
imul
jmp
insb
repnz
or
cltd
imul
stos
jbe
xchg
sbb
ret
xor
jge
int3
nop
in
cmp
in
mov
in
add
push
fldl
add
je
jae
fs
out
and
out
stos
inc
fldenv
ja
jecxz
pop
test
cmp
js
test
ret
loope
inc
cwtl
push
cmpsl
and
addr16
sarb
aam
inc
xchg
stc
in
push
shll
xchg
in
lock
dec
ret
or
pushl
mov
pop
cmp
jae
mov
push
lea
outsl
mov
sahf
push
int
lock
pop
cmc
pop
clc
frstor
jl
xchg
or
ss
shll
je
je
sub
mov
rol
cmc
cmp
and
mov
nop
add
mulb
jmp
mov
jl
push
addr16
loop
mov
je
pop
sbb
add
lods
hlt
outsl
or
pushf
add
pop
pop
push
pop
ja
pop
out
bnd
leave
xor
jno
dec
xlat
cld
ja
cld
lea
std
cmp
mov
and
imul
adc
aad
lds
mov
decl
jl
mov
adc
pop
sub
sub
jbe
fidivrl
ficompl
adc
pop
xor
adc
in
stc
mov
cmc
js
cmpb
negb
dec
fidivl
fcoms
shll
push
or
pop
mov
arpl
mov
xchg
loopne
fs
por
out
sbb
fcmovnbe
inc
pop
imul
cld
jle
icebp
adc
fiadds
sarb
and
insb
addr16
adc
sub
out
mov
dec
sbb
pushf
sbb
dec
cld
jne
imul
xchg
mov
gs
or
les
addr16
mov
in
mov
fdivrl
int3
dec
xchg
pop
testl
test
jno
aas
dec
je
leave
dec
aas
bound
and
lods
lods
mov
clc
fidivrl
sbb
jne
outsl
jp
adc
xchg
push
iret
push
inc
shlb
xlat
jno
or
lahf
inc
mov
add
pop
imul
lahf
es
js
mov
shll
jne
jo
mov
stos
into
adc
xlat
ret
dec
dec
cmp
or
jne
jne
shl
out
cld
scas
xor
cli
rcrl
loopne
rcrb
mov
lods
xchg
lods
mov
push
or
mov
cld
jmp
cmp
adc
stos
fbld
lahf
fmull
mov
pop
adcb
ss
cmpsb
enter
adc
out
jge
movb
xchg
dec
enter
daa
jmp
pop
inc
cmpsl
mov
adc
push
rcr
jno
pop
mov
add
and
xchg
mov
fs
jo
push
sub
adc
aam
adc
xor
push
and
insb
push
xor
fs
xchg
jno
pop
push
jp
testb
jb
je
fstpl
imul
jge
or
cmp
mov
mov
std
jbe
ljmp
inc
pop
fld
nop
icebp
icebp
jbe
jae
cltd
clc
inc
dec
add
stos
shl
mov
cmp
jg
inc
add
cmpsb
add
jmp
jp
repnz
into
and
ror
rorl
mov
pop
fmull
ljmp
pop
pop
push
mov
in
repz
imul
out
fisubs
mov
jbe
add
je
push
rcrl
and
test
xchg
sbb
mov
jge
mov
mov
sahf
out
push
std
cmp
es
imul
out
cmp
rolb
leave
pop
test
mov
dec
loopne
xor
mov
xchg
lahf
out
notb
dec
aad
sbb
iret
insl
cltd
icebp
iret
add
push
or
lret
cmc
inc
xor
movsb
jmp
mov
or
test
stos
mov
or
jns
mov
inc
cmpb
les
into
push
popl
aad
xlat
leave
cld
js
cld
cmp
sbb
sbbb
int
hlt
or
adc
ds
mov
sub
lods
and
mov
out
fs
cli
push
scas
inc
enter
outsl
sub
clc
sub
lahf
shr
push
sub
call
cmpb
pop
fisubl
outsl
cmc
shrl
adc
test
xchg
pop
xor
push
decl
iret
xor
popa
jae
lret
inc
in
or
scas
mov
push
push
or
stc
icebp
daa
xor
cmpsl
out
inc
sub
and
jmp
popf
lret
lods
mov
es
mov
jmp
jg
add
sbb
cmpsb
sub
push
cmp
push
adc
sbb
mov
cmpb
flds
xor
sbb
inc
or
ret
pop
aam
pop
andb
or
pop
push
cmpsl
mov
imulb
dec
inc
inc
mov
lahf
cwtl
ret
mov
movsl
sarb
cmp
movsl
loopne
xchg
mov
sbb
pusha
ror
and
xlat
dec
stos
sar
jnp
bound
aas
inc
cmpsb
inc
xchg
push
mov
sub
dec
enter
subl
ss
mov
in
cmpsb
shrl
pop
jecxz
test
inc
adc
cs
push
cmp
cmp
dec
sbb
adc
lcall
mov
jns
sar
and
adc
aad
pop
jno
inc
push
lahf
mov
scas
cmpl
sbb
sub
out
jp
das
fwait
xor
adc
out
rol
and
repnz
pop
scas
ficoms
add
aad
adc
shl
ljmp
cmc
xor
inc
aam
xor
mov
mov
sahf
imul
imul
cmp
movsl
bswap
aad
lea
mov
sti
popf
imulb
adcl
cli
shll
mov
xor
loopne
insb
insb
dec
mov
js
xchg
out
adc
pop
pop
cmp
mov
mov
pop
fldl
mov
push
jmp
fwait
jae
cltd
pop
js
xor
loope
out
dec
das
cmpsl
cld
sub
data16
call
adc
xor
out
or
in
xor
in
add
xchg
cmp
push
xchg
or
mov
sub
xor
decl
ret
xchg
addr16
xor
mov
xchg
mov
lcall
push
lahf
out
arpl
mov
sbb
imul
and
in
fsubrl
sub
daa
xchg
lcall
das
mov
cltd
loopne
push
cmp
out
sub
adc
stos
push
pushf
cmpsb
aaa
cmpl
aad
testb
pusha
in
add
imul
xchg
aas
into
imul
leave
pop
popf
imul
sub
ds
sub
aam
notl
jmp
push
mov
mov
ljmp
pusha
fnsave
out
pop
stos
outsb
icebp
loopne
sbb
jae
imul
sbb
test
jbe
ja
jg
push
pusha
enter
or
sub
mov
std
popa
push
popa
rolb
jmp
sbb
and
inc
jbe
inc
sar
inc
outsb
sub
adc
test
out
add
icebp
dec
rorb
aad
sar
inc
bound
fdivrs
fdiv
mov
xor
inc
repnz
jge
cli
insb
call
test
ret
in
inc
push
cli
jle
dec
inc
lea
out
xorb
out
cmp
repnz
in
lret
imul
andl
xchg
repz
loopne
sti
or
pop
loop
jecxz,pt
rolb
cmpsl
push
add
stos
adc
inc
int3
outsb
pop
or
inc
sub
pushf
cli
pop
arpl
mov
sub
test
data16
mov
test
cmp
es
or
into
cmc
test
jo
fwait
adc
cmp
adc
jne
out
adc
jg
loope
pmaxub
faddp
pop
fldenv
inc
sub
add
hlt
inc
repz
fisttpll
pop
nop
xor
pop
into
out
movsl
std
mov
in
fimuls
call
call
mov
out
mov
pop
inc
pop
dec
test
decl
mov
mov
in
dec
cmp
sbb
pushf
xor
add
xor
sbbb
mov
loope
xor
imul
adc
cltd
sbb
inc
mov
arpl
add
ljmp
xor
icebp
and
cmp
gs
xchg
mov
mov
pop
stos
pop
into
sub
lods
popa
push
adc
lea
mov
jle
insb
out
out
jno
dec
adcb
scas
mov
les
or
out
sti
xor
xchg
fisubrl
lock
mov
push
in
lds
lock
sti
mov
mov
or
dec
jb
adc
cmp
sahf
cmpsl
xor
mov
adc
aas
shrb
lcall
xchg
fists
pop
ds
dec
mov
jmp
inc
push
in
clc
in
ret
insb
or
jecxz
mov
jge
and
adc
xchg
push
popa
lds
movsl
push
or
les
lock
fwait
in
lods
sahf
and
test
int3
test
roll
adc
dec
sbb
in
jg
movsb
mov
nop
pop
das
rol
rcrl
popa
test
push
mov
inc
dec
stos
fsubl
pop
adc
mov
xor
inc
xor
push
push
adc
fisttpl
imul
pop
pusha
test
inc
adc
mov
clc
movsb
pop
nop
adc
mov
cpuid
loope
lods
fbstp
cmp
sbb
mov
sbb
scas
push
neg
xor
aaa
inc
mov
push
mov
and
sbb
dec
mov
insb
mov
pop
sbb
fidivrs
in
inc
mov
or
es
jge
dec
jno
jge
adc
xor
dec
mov
xchg
es
icebp
mov
cmp
iret
mov
lret
xor
sub
pop
arpl
push
push
add
adc
mov
fists
lock
mov
mov
or
pop
inc
inc
jmp
or
mov
jl
pop
aaa
cmp
inc
repnz
bound
mov
mov
dec
and
sbb
jo
das
insb
and
test
push
call
inc
movb
mov
jne
mov
aad
dec
pushf
pusha
mov
or
xor
dec
inc
mov
push
mov
clc
lahf
xor
pop
cmp
push
cli
pop
lock
dec
pop
test
les
dec
xor
mov
add
jb
lock
rcll
push
or
sub
cmp
rcrl
jb
lds
repnz
cmp
jne
adcb
out
pop
js
or
aaa
ja
mov
cmpsl
push
cmp
mov
ljmp
and
push
lret
cmp
mov
jecxz
xor
push
sbb
xor
insb
out
push
dec
in
cmc
push
inc
shlb
mov
cmpl
lea
gs
jne
pop
xchg
mov
lahf
dec
pop
push
push
inc
sti
push
adc
cld
cld
mov
xlat
movsl
mov
xor
fcoml
xchg
sub
push
mov
add
ljmp
sub
popa
test
pop
imul
push
cli
in
hlt
insl
adc
mov
mov
test
adc
adc
out
sti
call
dec
mov
adc
rolb
sub
add
mov
imull
rcrb
and
dec
or
popa
bound
out
push
lea
jmp
pop
scas
in
push
ss
cmp
loopne
ret
xchg
pop
fcoml
jno
stos
add
and
lcall
repnz
and
sti
or
pop
mov
dec
lock
int3
push
push
push
mov
pop
mov
dec
pop
dec
rclb
jo
mov
sarb
je
out
fisubs
mov
pusha
imul
data16
mov
sbb
outsl
pop
js
fwait
pushf
mov
loop
stos
test
inc
lods
add
movl
xchg
jg
daa
pop
xor
sbb
into
cs
dec
fxch
aas
lock
sbbl
push
pop
cmp
xor
fwait
mov
out
test
sar
push
outsl
outsb
leave
jbe
out
pop
and
sarl
imul
cmp
xchg
mov
scas
loope
jecxz
jge,pt
lea
dec
sbb
sbb
das
cltd
fistl
mov
repz
jb
push
mov
addr16
mov
ljmp
lods
insb
sbb
or
cltd
cmpsb
loopne
lods
sub
inc
sub
push
orb
pop
dec
testb
repz
cld
dec
sbb
cmc
cmp
arpl
mov
enter
xor
aad
inc
in
imul
lret
push
daa
nop
es
test
xchg
and
andl
int
scas
fwait
sub
sbb
inc
lods
and
movsl
xchg
mov
cmp
fsubrs
jo
xor
mov
pop
arpl
es
cmpsl
add
mov
call
pop
rcr
in
mov
dec
pop
test
mov
dec
fimull
shlb
mov
xchg
add
mov
addb
sbbb
pop
push
inc
aaa
hlt
stos
movsb
mov
xor
push
xchg
mov
jb
or
push
arpl
out
mov
adc
loope
jl
lcall
insb
sub
push
mov
fwait
stos
sbb
push
dec
lds
cmp
adc
mov
sub
xor
jle
stos
in
out
jg
sub
leave
jae
pushf
cmp
call
pop
push
shl
imul
and
cmp
jmp
push
lods
test
pop
pop
sbb
es
popl
outsb
les
ds
push
in
int3
cmp
sub
in
jae
aam
jne
jle
popa
adc
insl
pop
scas
sub
in
iret
and
ffreep
jp
movsb
mov
test
scas
mov
stc
cmp
test
adc
mov
pusha
mov
scas
mov
mov
popf
pushf
fcmovbe
ds
imul
repnz
xchg
xchg
and
negb
out
dec
cmp
pop
out
das
or
and
mov
xlat
in
sub
mov
int3
popf
fnstenv
in
or
pushf
fwait
jmp
cmpb
push
push
mov
add
hlt
and
mov
add
repnz
push
mov
int3
jmp
cld
mov
sub
inc
and
popa
je
shlb
push
inc
std
movsl
dec
or
dec
stc
mov
and
ja
into
cmp
cmc
sub
ret
imul
ror
and
xchg
add
popl
mov
mov
push
sub
or
xchg
aad
mov
lahf
xor
jmp
pusha
insb
xchg
inc
fsubs
jge
pop
mull
mov
scas
inc
xor
pop
inc
mov
arpl
rol
test
out
cmpsl
or
pop
adc
rol
or
imul
aam
in
sub
cltd
mov
sahf
xor
mov
ja
imul
stc
push
mov
jge
fcompl
into
push
lods
rcrb
mov
idivl
lcall
repnz
clc
dec
bound
inc
xor
mov
or
sbb
stc
shl
int
and
lahf
and
xor
dec
push
xor
mov
fwait
push
cli
rcl
lods
dec
pop
insb
dec
in
dec
stos
lods
mov
fwait
idivb
rolb
fsubl
popw
mov
adc
fistpll
es
push
das
scas
xor
inc
push
mov
push
mov
add
ret
jg
inc
cmp
shll
cmp
jmp
mov
outsb
popa
dec
and
cltd
arpl
and
mov
bound
jmp
jle
inc
mov
icebp
lds
mov
sti
fsubl
adc
insl
adc
sbb
int3
mov
jnp
das
repnz
fdivrl
dec
fmull
out
loop
rcrl
jg
xor
or
cmc
jl
sub
test
mov
pop
das
mov
or
jnp
jl
adc
in
jl
js
mov
push
inc
enter
mov
mov
sub
xchg
bnd
in
jg
mov
pop
cmc
adc
or
nop
xor
xor
pop
cmp
jae
adc
mov
daa
sarl
test
pop
and
cld
cltd
push
rcrl
call
and
mov
imul
jmp
add
pop
stos
adc
mov
sub
pusha
sbb
cli
test
aas
pop
mov
pop
pop
inc
xor
jo
xchg
adc
inc
pop
cmp
imul
test
jns
or
xchg
or
sahf
ljmp
mov
inc
sar
cld
iret
and
mov
outsb
pop
jmp
dec
stos
decb
rclb
sbb
mov
sbb
cltd
lods
out
pop
jo
mov
lret
mov
pusha
sub
cmp
inc
ror
test
push
leave
imul
arpl
jo
mov
mov
jo
dec
lock
shl
fiaddl
jns
aad
cmp
mov
cs
lods
mov
jp
or
jnp
outsb
sbb
mov
in
ljmp
add
jns
push
popf
sbb
lcall
xchg
ret
xor
loop
mov
xchg
repnz
push
rorl
pop
jbe
ret
xor
into
lods
mov
imul
xor
lret
and
push
xor
fwait
sub
push
pop
sbb
loope
sub
mov
cs
clc
enter
push
lcall
cmp
aam
mov
mov
or
push
adc
and
shrb
mov
xor
inc
pop
hlt
push
mov
push
sub
or
push
std
cltd
pop
push
mov
dec
adc
testb
loopne
mov
hlt
out
bound
cmp
stos
mov
mov
adc
and
addr16
jb
insb
mov
xchg
xor
jae
inc
ret
jmp
push
ret
mov
or
gs
push
push
and
mov
cmp
in
out
sub
add
jge
or
fs
push
jne
lar
lea
jo
xchg
or
sar
add
lret
and
add
roll
add
cld
pop
mov
xor
loopne
xchg
js
pop
xchg
pusha
adc
cmpsb
xchg
sub
cmc
xchg
out
and
mov
sub
aam
xlat
aam
cmp
fcoms
inc
jb
repnz
mov
mov
lods
sbb
ret
ficompl
xor
aaa
or
les
pop
popf
and
and
fnstenv
pop
xchg
dec
inc
push
insb
pop
and
mov
adc
cmp
sub
pop
mov
es
stos
out
popf
jne
int
mov
and
or
loopne
cmp
gs
shlb
gs
mov
and
mov
lahf
xchg
lret
hlt
es
mov
gs
lds
sub
sbb
outsb
mov
jp
jo
mov
scas
xchg
dec
sbb
fildl
ss
ss
mov
add
repnz
ret
mov
pop
push
out
xchg
das
ds
lods
mov
jns
lds
mov
out
sbb
mov
cmp
int3
enter
xchg
jns
enter
add
aad
sbb
idivl
xor
sbb
mov
sub
adc
enter
sbb
stos
xchg
fdivrl
bound
mov
call
mov
insl
je
jg
push
divl
pop
fiaddl
jg
jnp
xchg
add
mov
xor
sahf
dec
rolb
enter
mov
test
into
aad
rcrl
jo
mov
adc
jp
or
and
inc
xchg
inc
cmp
cmpsl
and
add
push
inc
push
out
mov
adc
loope
add
push
push
mov
push
cmpsb
sbb
cmpsb
aas
push
loopne
adc
adc
and
add
xor
cld
aaa
fisttps
mov
addr16
out
sbb
jns
outsl
scas
nop
jbe
mov
pop
test
ret
jae
ja
cmp
inc
cmp
xor
icebp
mov
lds
xor
cmpsl
fildl
fcompl
xchg
inc
out
popf
push
mov
sbb
std
out
fimull
loopne
xor
shr
stc
out
inc
or
rorb
pop
add
mov
push
inc
shr
push
mov
jecxz
in
sub
xor
and
dec
cmp
dec
in
mov
mov
mov
push
das
jmp
jb
inc
xor
mov
mov
movsl
jmp
jo
loope
xor
fmul
or
push
stos
rep
out
cld
repz
aad
xor
movsb
lea
mov
nop
test
lcall
movsl
cli
sub
mov
imul
lods
iret
sub
aad
mov
jbe
xor
sub
inc
push
cs
pop
push
cli
xor
inc
add
dec
test
cltd
imul
les
stos
mov
inc
xchg
mov
dec
adc
fdivr
leave
cmp
cmp
mov
xchg
dec
stc
mov
lods
je
xchg
dec
mov
sbb
mov
push
jge
or
lods
push
pusha
cmp
lcall
add
and
add
scas
aas
outsl
test
xor
loope
xlat
les
mull
popf
shll
sbb
pop
loop
pop
jbe
or
jnp
scas
pop
pop
outsl
inc
iret
xchg
aam
outsb
sarl
stos
sbb
cmp
jle
movsb
pop
adc
push
dec
lahf
mov
and
imul
jecxz
loope
xor
adc
mov
mov
enter
sub
or
mov
lret
sbb
inc
mov
movsb
pop
lret
pop
pop
in
xchg
xor
mov
cs
mov
in
mov
and
push
outsb
pop
repnz
dec
hlt
mov
or
cmp
es
sub
push
xchg
repnz
das
daa
pop
mov
mov
ficompl
cmpsb
jns
push
sub
push
pop
insb
xchg
cmpsb
cmp
inc
mov
fists
pop
stc
imull
lret
stos
jg
daa
xchg
xchg
jg
gs
pop
xchg
out
bound
jo
fwait
insl
fs
je
push
mov
dec
push
fwait
or
std
mov
int3
pusha
test
stc
fs
cmp
dec
push
in
push
sbb
loope
loopne
dec
add
cltd
ljmp
fsubrl
cld
add
cmp
adc
inc
push
push
sub
dec
gs
addr16
lock
adc
test
mov
lret
sub
jecxz
pop
add
ja
lret
pushl
xchg
ljmp
iret
popf
sbb
sbb
adc
aas
gs
lret
test
inc
push
icebp
mov
adc
add
jmp
pop
and
cld
inc
jno
imul
mov
lret
and
fistpl
push
sarl
sub
xor
mov
test
mov
lret
ja
sbb
mov
shll
sub
dec
cmc
mov
insb
loope
add
aad
pop
sub
lret
sti
mov
sub
repnz
fwait
or
data16
add
imul
inc
leave
push
shr
fcoms
or
mov
add
fcomps
std
fmull
imul
pop
cli
out
xchg
adcb
jl
xchg
pop
nop
jbe
shr
or
imul
jnp
fwait
mov
sub
clc
fwait
add
iret
mov
add
scas
test
dec
into
sub
cmp
sub
push
adc
jnp
xchg
sbb
ret
add
mov
mov
fldcw
push
cmp
dec
ss
dec
sub
das
add
cli
lock
push
fildl
je
mov
jmp
mov
inc
cmp
pusha
mov
loopne
mov
mov
xor
mov
mov
push
dec
pop
lret
out
push
jns
mov
pop
jle
or
mov
mov
push
add
push
jns
cmp
add
mov
arpl
xchg
in
add
push
and
mov
inc
dec
pusha
ud2
xlat
pop
cmc
int3
and
add
movsl
aas
mov
sub
pushf
pop
jne
push
fbld
cmpl
aas
xor
fisttps
mov
ret
fcoml
sub
dec
pop
aas
mov
dec
fwait
dec
ret
stos
in
cmpsb
jne
gs
sahf
pop
out
and
std
fdiv
sub
cmp
imul
jle
es
movsl
pusha
mov
nop
dec
rcrb
lds
lds
incb
outsl
je
and
bound
insl
or
movsl
jns
cs
cmp
cwtl
add
stos
add
jb
mov
test
ja
dec
data16
loopne
jns
cmp
lahf
orb
push
aas
mov
mov
shll
dec
pop
xchg
int
push
loop
mov
add
loopne
out
or
aas
aad
sub
sub
jge
sub
cmc
jne
insl
or
pop
clc
jmp
sub
or
jnp
lods
jmp
shlb
loopne
jno
xor
clc
test
cs
xchg
scas
bnd
push
cld
mov
cmp
dec
mov
xchg
out
subb
in
dec
push
dec
mov
mov
leave
cmp
popf
mov
ljmp
pop
xlat
lds
pop
lods
push
inc
mov
adc
clc
cmp
fsubs
aaa
mov
cmp
pop
ficoml
mov
inc
jmp
adc
pop
fisttps
push
inc
pop
popa
adc
adc
in
pop
fidivl
mov
cmp
es
jmp
dec
cmp
clc
addb
mov
sbbb
popf
repnz
adcb
xor
mov
mov
jp
xchg
and
es
ret
xor
push
and
sub
imul
cmpsl
out
pop
sub
mov
lods
bsf
in
rcrb
push
push
xor
fistl
mov
mov
adc
push
or
mov
mov
or
pop
ret
mov
ret
pop
lret
xor
dec
add
outsb
xor
jp
sti
je
mov
or
xchg
pop
out
sub
xor
inc
test
repz
mov
fsubl
add
add
into
xchg
mov
scas
fdivl
fidivl
and
lea
sbb
sbb
out
mov
pop
repnz
xchg
adc
ret
std
mov
mov
dec
fistpll
jo
mov
repz
adc
mov
ljmp
mov
xchg
adc
mov
sbb
or
xchg
xor
mov
enter
call
jae
inc
mov
lss
push
pop
lahf
outsb
mov
in
sub
sub
add
mov
pop
mov
lret
pop
inc
mov
push
dec
popf
adc
aas
lret
test
nop
icebp
ja
dec
jg
sub
lods
pop
push
neg
outsb
shll
and
add
scas
mov
gs
into
aam
scas
jns
adc
mov
push
scas
jmp
xchg
mov
dec
dec
inc
dec
cmp
mov
into
mov
xor
cmpsl
into
rcr
inc
jecxz
in
clc
out
mov
xchg
add
add
add
dec
imul
inc
mov
sbb
cmpsb
rcr
fsub
mov
fiaddl
rclb
mov
inc
pop
in
adc
iret
dec
adcl
mov
pop
adc
cmp
cli
fs
popa
sub
jmp
ja
mov
fnstcw
and
ret
sub
jae
pop
cmp
pop
xchg
jg
mov
sub
add
and
lock
int
imul
xchg
popf
pop
cmp
movsb
pop
jl
xchg
mov
fs
insl
jnp
clc
dec
nop
stc
inc
inc
jns
nop
xchg
pusha
pop
daa
xchg
nop
notl
xchg
cltd
push
out
sub
xchg
xchg
hlt
adc
mov
imul
repz
xchg
mov
mov
mov
inc
addb
inc
aad
mov
cs
mov
adcl
jl
scas
xchg
imul
ds
ja
cmc
mov
enter
or
push
bound
iret
je
cmpb
fisubs
movsb
and
sbb
inc
sub
push
int
sti
arpl
jb
pusha
in
adcb
jo
js
lds
mov
pop
daa
rclb
out
les
insb
fs
sbbb
lds
test
mov
pop
inc
rorb
add
mov
add
loopne
sub
xorl
cs
push
push
mov
mov
xchg
mov
sub
jmp
pop
mov
mul
sub
jle
je
xchg
sbb
addr16
in
xorl
sbb
adc
test
out
mov
jno
xor
mov
sbb
dec
js
decl
dec
pusha
lcall
dec
add
clc
test
mov
adcb
out
adc
leave
rolb
sahf
fsub
imul
cmp
push
jne
and
vshufps
std
in
or
test
mov
stos
sub
add
push
xchg
test
pop
ja
xchg
mov
or
inc
mov
lea
ljmp
mov
push
inc
jmp
and
shl
adc
iret
scas
push
outsb
lock
jmp
in
xchg
add
dec
sbb
cmp
nop
daa
imul
notb
out
mov
pop
mov
imul
pop
sbb
cmp
arpl
int3
adc
pop
mov
jnp
in
jnp
insb
arpl
mov
or
pop
insl
sbb
xlat
mov
inc
cmp
iret
pop
and
loop
or
jbe
add
jb
imul
cmp
cltd
data16
aam
es
dec
mov
ss
jns
fsubl
jno
leave
inc
mov
cmp
nop
cs
fcomps
add
test
mov
repz
lds
or
lret
mov
push
arpl
jmp
out
jae
push
test
aad
or
cmp
pop
push
jl,pn
jno
adc
jmp
repz
in
shlb
stos
pushf
xchg
adc
andb
fisttpll
testb
mov
mov
test
xor
mov
xchg
mov
xor
repnz
cmp
add
mov
mov
jo
pop
pop
sti
outsb
sub
jp
push
dec
clc
dec
and
cmp
std
sub
ret
aaa
pushf
mov
inc
ds
lahf
idivl
and
or
dec
imul
xchg
push
fldt
cmp
mov
rclb
mov
shll
dec
sahf
xchg
icebp
and
inc
jbe
adc
inc
je
pushf
pop
inc
ret
push
mov
push
mov
jl
dec
inc
cs
cmpl
cld
addb
je
xchg
addr16
or
jecxz
out
adcb
aad
sub
adc
std
scas
push
je
stos
dec
mov
lods
cwtl
lock
or
movsl
es
jecxz
aad
dec
add
lret
aas
das
pop
jecxz
cwtl
fs
dec
int
int3
scas
dec
and
sbb
mov
adc
jns
in
mov
sti
lcall
ss
push
mov
mov
sbb
das
outsl
out
imul
push
daa
inc
fprem
in
and
cmp
mov
rcll
adc
stos
xchg
loopne
xor
pop
xor
aam
mov
std
insb
xchg
test
add
or
mov
aam
leave
cmpsl
inc
lahf
aad
sbb
out
xor
fmuls
xchg
xlat
jb
retw
inc
sbb
inc
push
imul
mov
or
xlat
push
ja
sub
rorl
jle
mov
or
lods
dec
mov
or
lcall
jl
or
testb
sti
and
ret
lds
cmpsb
push
mov
mov
test
insl
sbb
es
aas
mov
dec
insb
mov
sbb
popf
arpl
mov
sub
mov
jle
imul
cli
sti
imul
jmp
and
pop
outsb
add
sub
and
mov
stos
cli
push
pop
mov
xlat
inc
movsl
or
inc
adc
dec
mov
insl
data16
dec
push
xlat
sahf
xor
mov
xchg
jo
dec
bound
sub
mov
ror
pusha
or
and
repz
xchg
cmpsl
clc
cmp
jge
mov
ja
sub
movsl
lret
add
lahf
imul
jmp
test
cmp
data16
mov
lds
lds
xor
mov
cmp
and
ss
out
test
push
dec
inc
jne
jg
sub
ja
popa
pop
push
pop
pop
adc
mov
loop
mov
and
mov
inc
pop
rcrb
outsb
mov
xchg
xchg
or
sub
sbb
or
push
icebp
loop
lret
push
pop
push
push
ret
cli
movsl
fdivs
ficoml
sahf
dec
dec
outsb
adc
mov
fstps
pop
jne
call
mov
das
ja
fucomip
mov
jbe
mov
inc
fadd
out
mov
ljmp
cmpsl
push
push
data16
and
data16
adc
movsb
sbb
and
sub
inc
mov
cmpb
mov
stos
jo
icebp
push
push
or
out
rcl
cmp
jge
ret
ret
sub
jae
xor
push
inc
pop
ret
mov
jnp
stc
fbld
dec
dec
in
stc
mov
adcb
adc
add
xchg
repz
je
loop
cmpsb
cmp
in
in
cmp
mov
jbe
loopne
push
sbb
ret
cmp
loop
dec
bound
pop
pop
daa
cltd
dec
shrl
mov
cmpxchg
and
inc
inc
test
xchg
cmp
das
cmp
jns
inc
xlat
jge
mov
or
out
adc
sbb
push
inc
sub
mov
push
pop
mov
imul
loope
movsb
aaa
dec
int
dec
push
rcll
cmpsb
aam
mov
mov
lea
inc
sarb
lret
xchg
dec
push
push
mov
sub
test
or
add
add
into
xchg
imul
push
enter
cmp
dec
sbb
push
jae
adc
stos
jo
nop
or
mov
mov
cmp
adc
cmc
pusha
or
data16
mov
cltd
cmpl
mul
sub
mov
mov
inc
call
mov
cmpsb
xchg
and
lds
pop
or
or
jo
xor
test
scas
push
jp
push
mov
out
sub
test
pop
inc
mov
and
mov
popf
lds
lods
pop
mov
xchg
scas
or
pop
sbb
mov
mov
repnz
push
pop
leave
inc
daa
mov
dec
xchg
jle
and
add
cmp
lea
pusha
stc
in
mov
fcompl
jnp
sti
jns
in
cmc
pushf
subb
mov
sbb
ds
jmp
push
ljmp
mov
xchg
shll
pop
adc
repz
rcrl
cmp
mov
testl
push
sbb
dec
dec
div
ss
xchg
jno
jp
clc
sahf
test
mov
or
xor
lock
in
jg
push
lods
nopl
fmuls
lea
or
mov
pop
outsb
cmc
jp
sub
push
sub
jle
int
in
cmpsb
dec
inc
enter
xchg
mov
insl
daa
pop
mov
push
aam
orl
sub
sahf
add
sub
adc
fadds
mov
mov
xor
mov
xchg
jmp
add
lods
popf
sbb
jmp
cmc
push
iret
repnz
lea
aam
mov
punpckhwd
icebp
or
mov
xchg
cmpsb
jae,pn
adc
xchg
es
shll
outsb
movlps
je
add
lret
into
adc
pop
gs
lock
in
push
jmp
test
frstor
andb
dec
xchg
pop
mov
rep
inc
ret
xor
scas
and
rcr
outsl
jge
adc
js
push
aaa
jle
pop
dec
add
and
add
add
test
fisubrl
rorl
scas
call
mov
pop
xor
jo
incb
cld
jg
arpl
ljmp
inc
pusha
xor
dec
lcall
push
xor
das
les
lcall
lods
jecxz
cli
aam
cmpsb
testl
test
gs
fisubrl
cmc
cmp
adc
mov
jecxz
xor
out
push
lods
sub
sbb
pop
push
adc
scas
sbb
movnti
sbb
pop
mov
shll
or
fnsave
mov
ret
push
divb
jo
mov
mov
xchg
and
mov
xor
int3
scas
xor
ljmp
mov
sbb
inc
mov
mov
cmp
xlat
xchg
ljmp
mov
mov
and
popf
and
mov
mov
test
out
xchg
xchg
xchg
jl
roll
scas
mov
int
jno
popa
scas
arpl
pop
negl
push
std
popa
add
inc
jg
and
push
pop
test
dec
pop
pop
mov
push
aad
xor
jecxz
inc
cld
jmp
adc
pusha
cmpsl
push
pop
lock
mov
push
aad
sbb
aam
push
or
scas
dec
es
andb
lcall
push
cmp
imull
aam
inc
push
mov
jl
enter
jbe
clc
mov
ja
pcmpgtb
loop
sti
or
ret
pop
push
bound
jae
adc
xor
mov
lock
cmc
cld
adc
pop
popa
sbb
cmpsl
jmp
bound
or
adc
out
mov
subb
insl
sbb
fldcw
xor
inc
mov
mov
push
nop
or
cvtpi2ps
mov
and
insb
es
fmulp
cmp
rcrb
sub
push
xchg
pop
dec
bound
mov
xor
out
inc
out
repnz
and
jge
jl
call
mov
mov
imul
stc
mov
pop
mov
jg
adc
movlps
and
dec
push
dec
add
xchg
imull
fimuls
cwtl
pop
pop
inc
xchg
iret
mov
test
lcall
jl
dec
inc
pop
lds
jns
cmp
adc
mov
sti
andl
or
mov
push
jo
lods
cmp
or
jbe
sbb
push
mov
mov
pop
icebp
sbb
rcrl
sbb
out
sahf
xchg
out
mov
cmp
push
xchg
jb
push
jne
xchg
xor
hlt
incb
inc
stc
pop
jge
inc
aaa
sbb
sub
outsl
mov
subb
sbb
lods
fcomps
add
outsb
outsl
imul
ja
stc
das
cmp
stc
sub
aam
lea
cs
mov
sbb
xlat
lcall
or
loop
add
cmp
into
mov
mov
mov
xor
mov
out
jg
mov
sahf
repnz
jne
jo
mov
adc
jne
xchg
push
or
rorl
mov
ret
in
jmp
arpl
insb
arpl
fsubl
pop
cmc
mov
mov
sahf
out
sahf
sub
push
mov
test
jl
xor
test
dec
xchg
imul
popa
in
mov
inc
test
push
jns
daa
jo
fwait
pop
sbb
adcl
fisubl
jbe
cmp
sbb
dec
push
je
or
xchg
in
jbe
push
mov
sahf
movsl
dec
pop
fstl
pop
cmovge
lds
dec
nop
ljmp
push
or
push
pop
add
cltd
int3
es
fsts
out
lock
jno
cmp
mov
cld
mov
loope
pushf
xor
es
push
outsl
push
or
hlt
adc
mov
push
add
sub
xor
or
pop
shlb
flds
rorl
ss
jnp
mov
jbe
loopne
test
mov
xchg
shll
icebp
sbb
andw
pop
arpl
mov
cmpsb
fsts
outsl
xor
aas
and
sub
pop
jecxz
rcr
sbb
adc
pushf
mov
mov
inc
sub
inc
imul
mov
test
cmp
and
inc
shll
mov
call
add
jo
fcmovu
mov
aam
mov
mov
mov
cmp
mov
mov
cmp
inc
rclb
lods
mov
cmp
cmpsb
xor
inc
sub
js
ret
imull
jp
fcomps
xor
jle
into
lods
clc
and
jb
outsl
iret
push
mov
cmp
sbb
pusha
pop
nop
out
lcall
call
pop
fildll
mov
das
mov
cmpsl
cmp
cwtl
mov
adc
jbe
xor
xchg
mov
pusha
int3
xor
into
sbb
sbb
jo
les
mov
jge
pop
mov
sbb
adc
dec
xchg
sahf
pop
mov
test
mov
test
pop
sub
dec
incb
push
xchg
or
push
dec
or
fiadds
jmp
in
je
push
push
dec
imul
pop
cwtl
sbb
imul
rcrb
dec
sbb
insb
add
cltd
jg
pop
roll
or
clc
in
lods
mov
jno
push
sbb
inc
repnz
dec
or
or
jnp
out
pop
adc
dec
jo
and
push
ljmp
ss
and
in
jns
test
lods
loopne
lds
xchg
cmp
pop
rcrb
hlt
es
mov
mov
push
clc
or
mov
lcall
cmc
mov
inc
push
fwait
xor
ljmp
ret
jge
jbe
dec
xchg
mov
out
lret
or
pop
lea
jno
lret
add
in
arpl
outsl
inc
lahf
pop
mov
out
pop
mov
cmc
insb
lret
mov
push
mov
pop
mov
ds
jmp
cltd
and
js
cmc
in
jno
pop
mov
mov
out
sbb
adc
ja,pn
jne
int
push
xor
xchg
fdivrs
adc
inc
mov
mov
xchg
add
inc
popl
or
jge
mov
mov
or
sarl
pop
das
add
jo
add
jnp
iret
shlb
fsubrl
dec
imul
and
cli
int
and
outsb
pop
roll
dec
mov
inc
push
adc
xchg
dec
jo
enter
push
lcall
fisttpl
jns
push
je
lahf
mov
in
int3
loop
mov
test
push
push
test
push
imul
mov
jbe
rorb
in
pop
fnstcw
ds
fadds
call
fstpl
pop
dec
add
push
sub
insb
js
fsubrs
sti
mov
stos
popa
dec
and
sub
rcl
roll
push
clc
cmpl
adc
xchg
das
iret
pop
stc
out
ret
add
bound
push
rcl
ret
xchg
test
clc
in
xchg
das
push
hlt
jge
xchg
jo
dec
push
movsl
inc
jg
cs
cltd
div
cmc
imul
cmp
mov
sbb
jl
ss
outsl
pop
mov
fwait
subl
lcall
gs
aas
rcrb
in
add
in
xlat
push
fdiv
pop
jb
add
repz
mov
sbb
sbb
mov
aaa
cmpsl
jo
fimuls
mov
adc
cwtl
xchg
sbb
arpl
mov
xchg
push
adc
adc
cmpsb
xor
cmp
fst
ret
pop
aad
and
xchg
jmp
ret
sub
jb
inc
fmull
ss
loop
xor
adc
lret
popa
adc
mov
imul
mov
jge
cli
int
lea
and
enter
negb
sub
scas
aaa
ja,pt
negb
lcall
mov
and
mov
cld
sub
jno
jmp
in
add
jl
mov
into
dec
xchg
sbb
inc
sub
adc
mov
ror
pusha
rcr
imul
aas
xchg
dec
and
sub
cmp
push
push
mov
sbb
clc
insb
arpl
outsb
mov
add
push
ret
adc
rclb
sub
loope
jmp
mov
dec
cmp
popf
stos
pop
adc
enter
mov
repz
mov
je
add
movsb
inc
xchg
jle
leave
sub
rcrb
pop
pop
repnz
add
sbb
daa
daa
in
or
and
push
jb
leave
jle
sbb
mov
mov
fists
fbld
jg
sbb
popf
insb
xchg
push
push
sbb
push
or
push
xor
lret
mov
scas
dec
mov
and
shrl
mov
mov
stos
adcl
ja
cltd
sbb
xchg
or
cld
and
addr16
pop
lahf
call
jl
fimuls
shrl
push
dec
inc
imul
bound
js
xor
stos
jnp
lret
mov
or
dec
adc
out
pop
adc
out
xlat
add
pop
mov
cltd
push
mov
test
pop
insb
sysret
stos
cmpsb
push
dec
xchg
push
adc
mov
pop
outsl
pop
lods
inc
mov
or
mulb
inc
and
sbb
mov
std
mov
out
enter
pop
outsl
cltd
inc
adc
mov
pop
dec
push
adc
cltd
mov
inc
cmp
inc
mov
lret
ret
pop
es
sub
or
cmpsb
mov
scas
pop
or
sbb
test
ss
jb
mov
mov
pop
cmp
xor
loope
mov
int3
mov
std
dec
or
jns
jb
jle
inc
stc
out
shrl
sub
xchg
xlat
pop
mov
and
mull
rcrl
mov
inc
inc
cmp
inc
outsl
movl
insl
jmp
mov
xchg
pop
jbe
stc
cltd
cmp
and
pop
cmp
bound
jl
inc
xchg
jge
mov
sahf
imul
cltd
inc
mov
pop
test
mov
and
xlat
push
lret
xor
pusha
xchg
out
in
cmpl
add
out
sbb
stos
in
imul
test
ror
push
dec
outsl
or
mov
repnz
push
cli
sbb
outsb
push
imulb
js
pop
ficomps
mov
sub
gs
testb
lods
cltd
cwtl
pushf
lret
inc
sub
or
out
popf
mov
adc
ret
pop
std
stos
sbb
cmp
xchg
aaa
test
jmp
repz
aaa
mov
pop
pusha
jae
pusha
mov
mov
ljmp
xor
fisttpl
pop
popa
rol
mov
out
out
jge
in
es
mov
fadds
arpl
aas
mov
outsb
lock
sub
inc
inc
out
lcall
push
nop
add
pop
cmp
inc
pop
es
insl
sbb
cs
jge
mov
mov
addr16
aaa
mov
sub
and
call
hlt
sbb
adc
fwait
pop
add
jno
insb
ja
arpl
aas
cmpsl
push
xlat
cmp
pop
push
or
ficoml
fwait
cmp
enter
lds
pop
jl
or
scas
inc
or
xchg
sti
sbb
jecxz
test
jno
mov
scas
mov
scas
xor
stos
pop
lea
notl
ret
cmpsb
mov
into
sbb
addb
je
repz
sbb
fadds
pop
cmp
add
je
sbb
lret
push
movsl
ss
call
movsb
loopne
add
jp
popf
sub
or
xchg
das
dec
insb
pop
incb
sub
jmp
mov
add
scas
subl
test
push
dec
push
jno
dec
popa
sbb
lock
in
xchg
inc
dec
pop
push
stc
ljmp
xchg
cmp
lds
daa
data16
shrl
movhlps
jge
sbb
lret
push
or
sub
aad
or
cmpb
in
dec
out
pop
cltd
jle
inc
ret
fimuls
lea
ret
dec
push
out
push
scas
pop
icebp
aam
xchg
divl
mov
push
inc
jns
in
mov
pop
cld
int3
das
inc
xchg
xlat
imul
sub
stos
loope
push
sbb
mov
push
push
shrl
adc
lock
negb
repnz
xor
test
mov
jbe
xchg
arpl
insb
lret
adc
fldenv
repz
mov
pop
loopne
lods
and
bound
mov
push
xchg
sub
fstpt
popa
loope
mov
fwait
sub
test
dec
lods
sarb
in
dec
sbb
jns
pop
clc
imul
pop
loop
cmovbe
inc
fcomps
cmp
fcmovb
or
loope
sub
mov
das
mov
out
cwtl
mov
insb
or
cs
addr16
mov
or
xor
xchg
cld
out
cmpsb
sub
add
xor
jg
sbb
idiv
jbe
cli
jge
or
mov
shll
test
xor
inc
mov
nop
and
push
dec
pushf
mov
or
int
sub
and
sbb
shrb
cmp
push
ret
pop
sub
leave
leave
mov
cli
add
data16
scas
out
data16
shrb
sub
repnz
mov
int3
in
jnp
pop
stc
je
sti
jecxz
jmp
inc
scas
stc
movsl
int3
sahf
fnstsw
aas
push
xrelease
ret
xor
inc
jne
or
sub
pop
or
out
iret
fildl
sub
outsl
inc
aam
dec
or
push
mov
rol
mov
lcall
mov
mov
sbb
or
fwait
pushf
xlat
fadds
fwait
jle
and
dec
iret
imul
call
scas
mov
das
int3
popa
or
out
adc
into
mov
scas
loopne
shrb
mov
inc
cltd
or
sbb
xor
pop
jb
std
adc
dec
xorl
lea
push
sahf
sti
jecxz
push
xchg
je
cwtl
sub
sarb
push
fadds
test
lods
adc
sub
mov
xor
xor
clc
outsb
cld
adc
imul
adc
jecxz
mov
cmpsb
mov
ret
fwait
cltd
lods
aam
cwtl
cmc
iret
test
shlb
imul
push
lret
repnz
add
ror
cmp
push
and
jl
fs
in
push
and
repnz
xchg
jge
shll
popf
mov
mov
pop
in
into
icebp
mov
call
cmp
leave
cmpsb
adc
mov
fisubl
addr16
mov
rclb
loopne
adc
jge
ds
in
out
frstor
or
pop
sub
sbb
enter
shrb
and
int
jae
je
jge
fsts
je
lods
aas
mov
movsb
aaa
jle
cld
lss
pop
icebp
xor
mov
jle
xor
mov
stc
mov
ret
jp
add
mov
fcmovb
xchg
dec
popa
movsb
mov
sbb
or
rclb
xchg
iret
dec
mov
adc
outsl
xor
sub
lahf
lods
xchg
dec
out
push
add
jbe
les
das
jae
ljmp
fbstp
push
fcompl
add
xor
xchg
les
int3
inc
sub
sti
and
and
repnz
aam
lret
inc
mov
test
jno
mov
out
ss
or
sub
cmp
mov
adc
pop
and
adc
adc
imul
xor
aad
mov
jo
enter
jg
jge
and
pop
pop
aas
movsl
aas
sbb
fsubrs
or
fadds
cmp
mov
les
arpl
jl
int
je
push
dec
in
dec
mov
adc
add
push
mov
ret
mov
inc
push
xor
push
dec
gs
mov
out
xor
pop
loopne
jmp
pop
cs
push
test
fs
sub
xor
push
dec
pop
lret
in
daa
mov
fiaddl
lcall
adc
jne
xor
mov
sbb
int
cmpsl
lcall
inc
gs
and
cvtpi2ps
xor
into
adcl
jp
inc
xor
mov
pushf
sbb
add
or
test
mov
stos
das
dec
nop
mov
aad
sub
je
or
data16
shl
mov
out
cli
add
out
mov
mov
imul
push
add
xchg
cmpsb
cmp
test
clc
mov
scas
mov
lret
mov
inc
adc
and
stos
scas
mov
add
jge
dec
cmp
scas
xchg
push
jnp
inc
jb
mov
imul
ds
push
repz
sub
pop
dec
and
jle
pop
mov
fcompl
imul
push
fstps
dec
or
fmuls
pop
ret
and
sbbl
pop
cwtl
or
rcrb
in
mov
call
outsb
pop
insl
push
into
cmp
dec
xchg
jmp
push
push
adc
je
int3
jge
cmp
pop
insl
adc
outsb
sub
cmc
jne
push
fcompp
jnp
and
aad
mov
xor
jg
push
je
pushf
lds
sbb
notl
dec
xor
xor
push
sub
shl
push
mov
mov
mov
dec
jge
mov
ss
xlat
shl
lcall
sub
jp
mov
scas
jmp
or
sbb
jo
pop
mov
adc
add
icebp
pop
lret
cmc
lahf
ljmp
cmp
xor
je
pop
xchg
ret
lods
imul
test
inc
fdivr
cld
inc
sub
mov
movsb
cmc
lret
movsb
aad
fcmove
push
sti
mov
mov
arpl
scas
arpl
fstl
insl
ret
xor
ljmp
testl
ret
mov
lret
inc
pop
cmp
loop
push
movsb
icebp
stos
repnz
xchg
arpl
cmp
sub
mov
mov
int3
and
lret
xchg
test
mov
mov
xor
jo
xchg
insl
mov
lods
jnp
adc
aaa
lock
mov
icebp
xchg
dec
push
push
nop
adc
es
pop
jmp
imul
mov
cmp
sub
addr16
push
mov
negl
mov
shlb
cmp
jmp
mov
in
adc
cmp
pop
divl
or
add
inc
xchg
adc
jp
adc
dec
cwtl
cmc
mov
and
mov
xchg
pop
mov
das
sahf
adc
cld
call
sbb
jb
mov
aam
sbb
jns
shlb
add
stos
xchg
stos
mov
sbb
adc
dec
sahf
shll
xchg
lcall
push
push
cmpsb
sti
outsl
xchg
out
sub
icebp
jnp
push
inc
sub
enter
mul
mov
jbe
loop
ror
inc
mov
scas
hlt
dec
or
sub
jo
lea
pop
push
dec
cmp
mov
cld
hlt
rorb
pop
das
in
or
je
int
cmpsl
aam
xchg
adc
dec
mov
fildl
adc
sbb
jle
icebp
pop
cmp
and
andb
notl
xor
movsl
inc
gs
push
lds
mov
adc
jmp
cmpsb
icebp
mov
adc
dec
clc
pop
popf
push
mov
xor
xor
push
and
stos
or
xchg
fldl
ret
ficompl
js
lret
sbb
mov
pop
xor
cmpb
adc
test
push
sbb
add
ja
pop
xchg
data16
aad
lahf
addr16
mov
sub
into
pop
mov
push
push
ja
add
jne
cmpb
and
mov
gs
and
jmp
outsl
or
loope
inc
push
test
mov
jmp
dec
pusha
aam
imulb
ror
sti
subl
js
std
mov
cmp
orb
jns
cmpsb
pop
nop
popa
lcall
jns
sub
fwait
xchg
sub
mov
sbb
jg
add
and
sub
repz
imul
push
push
add
lcall
loope
enter
lret
data16
cld
inc
pop
mov
rcll
stos
xor
push
adc
and
imul
or
movsb
mov
shl
mov
bound
mov
pop
sub
maxps
pushf
inc
jb
jae
sbb
mov
fidivs
ret
cmp
mov
cmp
sbb
cs
mov
cli
add
cltd
xchg
outsl
mov
inc
negb
icebp
dec
xor
and
inc
xchg
fnstsw
dec
fsts
daa
pop
aad
das
adc
addr16
xor
mov
dec
and
das
push
rorl
sti
or
ss
sbb
psrld
jb
push
lret
aam
mov
lods
and
xor
dec
movl
xchg
mov
cld
xchg
in
sarl
and
je
cld
popa
jmp
add
das
jmp
dec
mov
dec
stos
cmp
xor
mov
jbe
scas
inc
inc
stc
xchg
jo
mov
mov
ljmp
adc
adc
jl
movsl
sub
sbb
mov
aad
and
fdivrs
js
and
jo
mov
fisttpll
jecxz
int3
push
mov
pop
add
pop
mov
sub
xchg
jp
fstl
sbb
or
jne
adc
jp
lret
std
cmpsb
jns
in
gs
push
loop
push
push
repnz
mov
xchg
dec
out
insb
xor
cmpsl
add
and
jle
adc
dec
sub
xor
std
call
add
loopne
cmp
stc
clc
cmp
mov
pop
fidivrl
jae
xorb
imul
pop
shr
pop
hlt
insl
loop
movsb
mul
and
out
mov
fdivr
pop
push
enter
sbb
jg
mov
das
sub
sbb
into
adc
sub
pop
xchg
pop
push
out
fdiv
add
scas
insl
in
push
mov
test
nop
daa
ja
fwait
in
leave
push
popa
sbb
push
cmp
cs
jbe
sub
xchg
cmp
adc
subl
mov
xchg
mov
xor
daa
jmp
movb
push
jg
adc
sbb
cwtl
xlat
or
stos
and
jne
pop
jae
inc
jmp
pusha
lods
cmp
add
addr16
mov
lahf
in
inc
lahf
fidivl
stos
dec
daa
sub
orb
mov
inc
xor
out
fisubl
jmp
lret
jo
stos
fisttpl
nop
nop
cmp
sbb
outsb
aaa
sbb
in
sub
inc
movsb
jns
mov
sub
jb
addb
sub
jg
cs
arpl
in
loopne
add
into
rorb
test
pop
loopne
jecxz
daa
push
mov
inc
in
cmp
shr
ret
xchg
dec
mov
ja
sbb
jecxz
shr
xchg
aam
std
mov
pop
mov
xchg
adcl
mov
mov
cmpsb
pop
insb
test
je
cmp
test
dec
mov
xor
test
in
idiv
cltd
push
out
lcall
push
sbb
and
xor
xor
mov
out
aas
test
bound
xchg
je
notl
mov
jle
push
sahf
andl
fwait
mov
sbb
sbb
xor
fsubs
notb
pop
daa
pop
sub
push
and
push
sub
xor
jno
mov
sub
mov
dec
sub
mov
mov
ja
ss
mov
pop
imul
jnp
mov
ja
out
sub
jg
add
mov
add
lcall
mov
lods
lods
push
aaa
movsl
scas
add
test
jo,pt
mov
push
outsb
icebp
xlat
sti
nop
mov
and
je
mov
scas
or
gs
fs
jno
jae
in
js
xchg
mov
xor
scas
scas
fwait
jge
outsl
push
dec
mov
inc
fnstcw
scas
xor
lahf
lret
pop
mov
mov
mov
cmp
jb
sbb
mov
in
cmpsb
mov
cmp
fbstp
js
pop
adc
xchg
sub
add
mov
push
add
aas
notl
cmp
mov
xchg
pushf
fistpl
lret
xchg
or
repz
jp
xor
fwait
mov
andb
cwtl
out
pop
inc
cmp
pop
add
je
xor
outsb
sbb
lcall
cli
ja
outsb
lods
push
mov
and
push
and
loop
ror
jae
loope
cmpb
fldt
outsb
or
mov
mov
daa
aam
fiadds
jbe
arpl
push
test
or
add
xor
daa
punpcklwd
adc
pop
lcall
lds
pushf
aad
mov
lds
inc
subb
mov
jno
sub
mov
data16
cmpsb
pop
push
inc
dec
test
sbb
push
popa
insl
sahf
push
mov
sub
stos
sub
loopne
out
xor
roll
test
data16
mov
dec
adc
std
xor
inc
scas
out
mov
and
mov
ja
mov
pop
inc
pop
sub
mov
push
pop
lcall
mov
leave
jge
repnz
and
xchg
jbe
add
fnstenv
loopne
sbb
call
pop
push
jmp
out
push
pop
hlt
aaa
dec
fisttpl
sbb
jg
lds
dec
dec
sub
cmp
testl
and
out
push
flds
cmp
push
mov
cmp
pop
cmp
mov
dec
loopne
rolb
cmp
mov
push
adc
std
mov
jns
gs
stos
xor
sarb
pop
jle
fldcw
test
mov
jecxz
xor
lahf
fdiv
cmpb
pop
mov
push
mov
lea
outsb
das
push
cli
lret
and
in
push
loopne
ss
cmp
std
add
aas
mov
aam
add
outsl
mov
ss
mov
and
lahf
outsb
and
sahf
rol
test
xchg
mov
dec
dec
pusha
mov
jle
pop
les
fsubs
push
fstp
clc
ds
out
cmpsl
mov
movsl
xchg
xor
out
add
jns
rcll
imul
xchg
push
gs
test
xor
cld
andb
fcoml
outsb
mov
pop
add
push
test
sti
mov
mov
jns
leave
andb
aam
adc
jg
out
into
cmpsl
imul
pop
xchg
push
in
pop
lret
xchg
insb
mov
mov
leave
xor
fwait
mov
stos
add
into
dec
mov
pop
lcall
jae
test
clc
mov
jbe
into
cmp
lock
jno
mov
jb
loopne
xchg
pop
mov
das
mov
sbb
fs
mov
or
les
loopne
rclb
nop
cmp
inc
mov
loopne
aam
stc
jmp
xor
dec
inc
dec
cmpsl
ljmp
push
pop
inc
mov
lods
in
pop
jg
xor
push
xchg
mov
xlat
arpl
inc
mov
fs
xor
imul
jb,pn
cmpsb
cli
sahf
push
xor
xchg
mov
aam
xchg
mov
xchg
mov
or
out
dec
xchg
mov
movsb
adc
jae
push
push
jg
test
or
test
mov
jns
dec
jne
mov
jl
dec
and
sbb
xor
imul
ja
testb
fdivrl
mov
mov
mov
ret
mov
jmp
pop
jne
sahf
das
loopne
lds
add
mov
hlt
xchg
xor
aad
cmpsl
bound
repz
mulb
mov
mov
inc
rcl
stc
push
push
ret
xor
and
stos
cmpsl
fldt
movsb
into
hlt
xchg
inc
ss
mov
mov
ret
sbb
jge
pop
lret
and
mov
mov
mov
push
push
cs
inc
lods
imul
dec
sahf
lods
dec
sarl
shlb
cwtl
mov
popa
in
shrb
ja
fld
mov
mov
das
aas
insb
add
jnp
push
int
fneni(8087
leave
sarl
lahf
rcll
ljmp
roll
lods
inc
arpl
push
add
pushf
cltd
orl
jbe
popa
mov
enter
aas
mov
pop
jg
jno
ljmp
sarl
mov
scas
inc
lret
xor
les
stc
push
mov
cwtl
mov
repnz
xchg
adc
mov
out
es
cli
xor
sbb
fsubrl
xor
pop
mov
adc
mov
test
push
push
add
sbb
push
pop
push
add
mov
lock
insb
adc
fldcw
adc
mov
fisubrl
rcr
push
mov
mov
sbb
outsl
pop
call
call
xor
test
and
pop
aad
mov
mov
jl
mov
idivl
aaa
ficoml
movsl
aad
xchg
mov
lds
sub
lock
lods
adc
into
repz
cs
jmpw
xor
xchg
adc
insl
nop
shlb
jmp
clc
jnp
cmc
ljmp
dec
lods
inc
shl
imul
jb
adc
cmp
xchg
mov
mov
mov
lret
loopne
mov
push
cmpsl
lea
popf
js
inc
lods
les
mov
jb
je
inc
mov
jb
outsb
mov
sti
cmc
sbb
jo
and
pushf
adc
xchg
aam
sub
lea
cmpsb
cld
int
notb
sbb
in
pop
sarl
gs
adc
lea
mov
mov
pop
clc
adc
cmp
ds
gs
and
pusha
adc
cmp
pop
mov
push
jmp
add
movsl
nop
fildll
dec
cmc
gs
ss
mov
jecxz
xacquire
inc
push
scas
jl
add
push
ret
add
fsts
sbb
jl
pop
and
push
cmova
xor
add
movsb
sti
pop
test
pop
enter
xor
rcll
shll
mov
ja
jmp
or
mov
dec
xchg
pop
add
sub
push
pop
out
lret
jnp
push
mov
inc
movsb
mov
js
in
mov
mov
loop
and
xor
jge
imul
adc
fcomp
pop
into
pop
mov
and
jb
es
add
jecxz
loopne
add
test
sbb
andl
addb
stos
and
clc
cmc
cmc
addr16
xchg
fmul
and
ds
es
ret
repz
dec
cld
and
int
rol
aad
jo
inc
dec
ss
clc
pop
sub
mull
add
lods
in
or
or
add
push
leave
insb
mov
popa
dec
adc
std
jne
cmpsb
negb
out
xchg
adc
andl
lret
mov
cmpsb
push
push
lods
mov
frstor
mov
cmp
mov
gs
jle
jp
cwtl
fidivrl
aaa
fcoml
pusha
xchg
sub
sarl
ds
jns
sbb
mov
push
sbb
mov
sarl
sbb
jle
cmp
sbb
adc
fsubrl
mov
js
push
push
ljmp
popf
aaa
ds
sbb
aad
rcrl
adc
hlt
dec
jne
jg
mov
cmpsl
in
xor
mov
lret
ds
lret
aad
je
cmp
imul
mov
fistps
in
rep
sub
loop
mov
mov
out
pop
jne
nop
xor
hlt
jecxz
jo
rcrl
add
repnz
jge
movsl
pop
push
incb
movsb
mov
popa
ret
add
mov
jg
inc
mov
jle
into
addr16
jmp
inc
out
add
arpl
call
cltd
or
sub
add
out
idiv
cmp
stc
sbb
and
test
std
rcll
int
hlt
flds
orl
addr16
in
mov
mov
xchg
sbb
loop
out
lods
insl
shlb
jg
mov
push
push
popa
adc
mov
and
dec
and
cmp
pop
sbb
xor
jb
imul
sbb
cmp
clc
dec
mov
aam
xchg
fimull
icebp
out
xchg
in
sub
dec
imul
into
cmp
std
or
lcall
arpl
mov
jae
dec
movsb
cmp
mov
adc
push
add
jge
lea
mov
or
cmp
mov
pop
call
gs
out
jns
test
dec
inc
dec
pop
cs
jecxz
lret
sahf
arpl
rcr
cmpsb
lret
lods
xor
std
movl
data16
xlat
jmp
push
lods
aaa
mov
sub
shlb
imul
mov
pop
sbb
push
insl
punpckhbw
nop
mov
or
inc
sbbl
into
xor
movsl
xor
fbld
lods
bound
pop
mov
mov
add
cmp
mov
sub
mov
mov
and
arpl
nop
mov
add
rclb
mov
das
rorl
test
jp
mov
insl
dec
push
mov
bound
pop
in
cmp
loop
lahf
sub
addb
pop
xchg
cmc
js
divl
adcl
pop
push
je
and
cmp
add
jo
push
sti
insl
xchg
loope
jge
lock
bound
dec
notl
insb
data16
mov
int
pop
insl
out
sub
mov
mov
aas
xor
push
in
outsl
adc
or
lfs
in
pop
insl
xchg
hlt
pop
movsb
roll
das
add
cltd
adc
push
loope
dec
fcmovne
loop
nop
jmp
inc
pop
xchg
or
mov
adc
das
addr16
mov
stos
adc
pop
lock
push
aam
lret
push
mov
sub
add
movsl
insb
jns
call
mull
adc
jl
inc
sbb
imul
das
outsl
out
test
push
xchg
mov
sub
xor
jmp
jno
rcrl
ljmp
sbb
mov
leave
cmp
sub
clc
jp
jne
cmpl
dec
xchg
daa
mov
xor
dec
test
ljmp
push
cld
dec
mov
arpl
xor
inc
das
push
aas
shr
jg,pn
xor
scas
pop
pop
ljmp
aad
mov
fs
jg
mov
mov
mov
jl
pop
sbb
xchg
sbb
enter
and
test
movb
pop
xchg
xchg
cld
nop
pop
or
scas
push
pusha
mov
mov
fbld
or
pop
sbbl
mov
push
adc
jns
xor
daa
fdiv
enter
scas
cli
adc
aam
cmp
fsubrs
lock
popa
int
xchg
pop
dec
pop
sahf
and
dec
jmp
adc
loop
loopne
cmp
pop
cmc
sbb
xor
push
mov
push
xchg
nop
add
mov
cmp
inc
pushf
dec
stos
bnd
aad
fcoms
fs
mov
imul
adc
mov
mov
and
inc
mov
push
rcll
and
popa
push
or
out
mov
in
lea
cmp
roll
add
add
and
arpl
push
sub
lfs
fstpl
pop
pop
xor
sbb
cmp
push
sbb
adc
cltd
jmp
jbe
pop
and
mov
fwait
ret
jb
jge
mov
sbb
mov
mov
sbb
sbb
push
adc
add
jecxz
xchg
ja
or
mov
fcmovnbe
pop
rcr
lods
leave
xlat
push
cmp
int3
das
sbb
adc
cmp
sti
mov
test
imul
jbe
es
mov
push
fdivrs
popa
cwtl
ret
jmp
sbb
leave
js
lret
mul
push
cmp
into
inc
fs
dec
xchg
scas
xchg
das
jbe
movsb
add
sbbl
movsb
icebp
out
fistpl
repz
decl
jmp
imul
sbb
call
adc
cmp
frstor
or
loop
scas
cli
pop
push
mov
mov
aas
add
out
aas
xchg
dec
test
xchg
out
cmc
adc
adc
js
or
adc
cmc
inc
int3
addl
lods
push
loop
pop
sbb
inc
mov
cli
gs
cwtl
jmp
test
cwtl
movsl
gs
aam
fiadds
movsl
add
mov
add
jp
lret
int
cmp
test
mov
pop
cmp
outsb
lret
loopne
pop
pop
sbb
js
mov
jmp
jo
mov
fidivrs
push
gs
adc
mov
mov
push
sub
push
push
ja
or
xchg
mov
xor
lock
mov
das
mov
jecxz
mov
popa
jg
cmp
mov
fdivr
repnz
mov
arpl
jmp
adc
sub
bound
and
sahf
ljmp
pop
push
bound
mov
sub
in
ss
inc
leave
add
mov
sbb
pusha
mov
dec
in
sub
addr16
dec
movsl
int
retw
xor
stc
enter
frstor
xchg
jns
push
pop
iret
cld
cmp
mov
add
fidivs
dec
jle
mov
cmpsl
push
dec
pop
push
sbb
out
repnz
jmp
inc
mov
lds
push
out
or
xor
or
cmp
pusha
sbb
jo
adc
fnstsw
cmp
pop
pop
orb
dec
addl
rorl
enter
mov
iret
loope
push
sub
aas
pushf
loop
call
aam
and
inc
clc
push
aam
and
mov
jnp
pop
daa
xchg
fnstcw
clc
sub
mov
lds
mov
dec
popl
mov
mov
sahf
and
jmp
jbe
and
pop
mov
or
mov
mov
addr16
lret
mov
ss
and
push
sub
mov
adc
push
push
mov
rorb
rcl
repz
mov
sbb
push
cmpsb
aam
xchg
or
andb
scas
pop
insb
xchg
and
adc
mov
adc
in
int3
xchg
pop
int3
leave
mov
xchg
jnp
pop
mov
mov
add
je
xlat
cmp
es
pop
stos
scas
sbb
int
inc
inc
movsb
or
mov
stos
add
push
sbb
mov
jbe
shlb
mov
dec
fistpll
sub
test
daa
sub
adcb
sbb
rcrb
aaa
xchg
inc
mov
push
sbb
mov
andb
inc
mov
imul
cmp
pushl
push
xor
xor
aam
mov
faddl
push
insl
inc
popf
in
js
mov
xchg
test
pop
sub
in
jae
loopne
pop
xor
sahf
cmp
add
ds
out
int
es
inc
adc
mov
xor
out
mov
test
jnp
push
fists
std
lods
pop
or
dec
icebp
xchg
mov
add
or
sbb
jbe
adc
cmp
dec
cmp
aam
ror
sbb
inc
clc
arpl
jae
xchg
and
jno
mov
ret
sub
jno
cmp
outsl
aas
clc
add
lock
mov
jecxz
cmp
xchg
ljmp
mov
pop
lcall
fs
mov
aas
aaa
sbb
push
das
jmp
fwait
and
xor
out
adc
mov
pop
roll
or
sub
cmp
pop
lcall
jg
divb
mov
xor
or
xchg
mov
mov
jge
pop
inc
js
push
xchg
push
mov
stos
sarb
aas
xlat
and
push
or
aam
imul
ficoms
mov
dec
cmp
mov
loop
cltd
mov
add
fistps
daa
add
les
dec
mov
mov
lods
lahf
push
aad
xchg
aam
int3
insb
xchg
stc
cmp
mov
dec
cmpsb
jl
inc
insb
xchg
insl
call
sbb
push
dec
push
and
scas
jnp
sbbb
pushf
fsubs
adc
mov
loop
mov
dec
or
mov
enter
inc
sbb
jb
mov
or
es
cmp
push
cmp
adc
es
outsl
fcomps
xchg
aam
scas
cmp
fisttpll
in
pop
mov
inc
sub
dec
push
cmp
imul
shll
inc
add
mov
adc
sub
mov
xchg
jne
mov
cmp
nop
jmp
adc
int3
stc
test
cmp
mov
xor
adc
inc
mov
hlt
add
test
push
lock
sbb
mov
mov
sbb
xor
push
aas
sbb
aaa
adc
xor
adc
call
outsl
fidivl
das
movsb
ficoms
popf
jns
lret
sbb
ja
cmp
xchg
mov
sbb
xchg
lahf
and
mov
pop
or
pop
dec
push
add
adc
cs
mov
jge
xchg
pop
in
in
cmp
adc
inc
shll
test
mov
lcall
es
shrb
cli
jnp
adc
or
mov
fcomps
and
cwtl
sbb
movswl
dec
xchg
dec
imul
test
ret
cmp
fs
es
pop
jp
es
mov
jle
jle
inc
ljmp
adc
sbb
and
rcrl
inc
pop
cmpsb
inc
shll
arpl
jae
mov
push
in
bswap
sar
aas
clc
lods
mov
xor
sub
sahf
cli
pusha
sbb
adc
ljmp
cmp
clc
xchg
addr16
negl
lret
push
orb
add
imul
gs
or
rcrl
stos
adc
push
movsl
aas
dec
out
lods
mov
popa
xchg
bound
aaa
addr16
xchg
lock
call
dec
pop
push
add
adc
mov
in
sbb
subb
lods
sahf
lods
incl
push
lods
mov
jmp
jnp
lea
jae
mov
push
lret
dec
fistpl
pop
loop
iret
scas
das
fs
test
jl
imul
outsl
cmpsb
test
add
call
xchg
mov
mov
arpl
loop
test
pop
insb
pop
or
push
or
in
popa
pop
jmp
mov
test
jmp
and
jmp
ja
sub
mov
cmp
sub
adc
int
mov
lret
ds
mov
sub
imul
test
icebp
mov
cmpsl
stos
arpl
je
adc
mov
pushf
jne
sub
adc
loopne
sub
xor
pop
loopne
and
test
cs
jp
add
sti
adc
jge
xchg
lcall
js
enter
inc
loop
mov
in
inc
sbb
pop
imul
sub
and
clc
and
pop
cmpsb
add
nop
rolb
and
scas
add
jns
jecxz
adc
push
ja
mov
dec
mov
add
add
imull
cmc
mov
sbb
dec
mov
loopne
sbb
dec
adc
insl
outsb
cmp
movsl
fwait
adc
dec
insb
dec
out
pop
mov
icebp
jns
outsl
adc
loop
or
adc
pop
xor
jbe
lcall
movsl
psrld
imul
in
cs
add
bound
mov
ret
add
jb
insb
mov
repz
pop
xor
mov
inc
clc
mov
inc
in
loopne
rolb
scas
sub
push
lods
xchg
xor
mov
outsl
xlat
rorl
movsb
popf
neg
sbb
mov
fcmovb
lahf
popf
xchg
repz
mov
xor
cmp
mov
jb
popf
lock
jmp
stc
dec
push
ret
lret
orl
rcll
insl
dec
inc
stc
rorb
add
jne
mov
rcl
pushf
leave
push
mov
and
cld
pop
test
out
arpl
mov
into
nop
add
dec
test
sbb
pop
cmp
sub
cmpsb
mov
out
clc
sahf
cmpsb
sbb
inc
mov
cs
repnz
fadds
and
sbb
pop
add
idiv
js
fildll
andl
mov
sbb
lds
jae
mov
or
shll
hlt
mov
stos
or
in
test
inc
imul
xor
bound
mov
mov
dec
cli
cwtl
sub
dec
mov
dec
mov
hlt
inc
and
push
lods
mov
daa
mov
lods
pop
xorb
push
pop
orb
dec
xchg
enter
lret
cmp
lret
push
test
ret
test
cli
inc
push
clc
inc
fmuls
cld
adc
pop
add
clc
shrl
and
xchg
or
inc
movsl
pop
mov
lcall
negb
lcall
mov
jo
and
mov
bound
and
jbe
adc
stc
fs
dec
inc
lock
xchg
rclb
mov
add
pushf
loopne
test
adc
mov
mov
lret
stos
in
in
outsl
loop
cmp
addr16
inc
bound
pop
xlat
mov
mov
clc
or
xor
jge
sub
xor
adc
in
pop
pop
in
in
push
aad
mov
jp
cmpsl
iret
inc
lahf
push
andb
ljmp
das
repz
pop
rorb
xlat
out
push
sbb
fistl
test
lret
divb
gs
mov
sbb
arpl
adc
imul
cmp
sti
dec
repnz
enter
mov
push
cmc
call
in
or
xchg
xchg
mov
dec
andl
cmpsb
dec
or
push
mov
test
test
jbe
lea
xor
xlat
push
fdiv
mov
cmp
dec
inc
cld
dec
sub
adc
xor
push
sub
daa
jg
mov
xor
bound
and
xchg
adc
pop
mov
push
iret
dec
sbb
and
mov
test
rolb
push
push
std
iret
sbb
je
add
lahf
sbb
pop
out
and
adc
sbb
out
sahf
dec
cwtl
jmp
mov
xlat
mov
jge
jmp
push
dec
jne
in
dec
mov
mov
xor
cmp
dec
mov
inc
jle
cmc
rcrb
in
enter
dec
aad
ljmp
fbstp
js
xor
xchg
in
cmp
mov
out
mov
pop
fcoms
test
and
insb
and
bound
fisubrs
cmpb
sbb
mov
popf
push
jns
movsb
cmp
mov
cwtl
stos
mov
mov
jbe
outsb
out
mov
lret
mov
adc
add
and
cld
cs
or
xchg
dec
loop
xlat
mov
mov
lock
jecxz
negl
inc
jle
scas
jmp
ja
fstl
stos
movsb
and
cmpsb
adc
ffree
and
in
ret
ret
mov
addr16
filds
add
mov
cltd
nop
pop
or
mov
jne
sub
daa
and
lds
test
mov
outsb
enter
or
subl
testl
dec
lock
stos
and
nop
arpl
call
icebp
mov
cmpsl
and
push
or
xor
arpl
pop
push
sbb
xchg
push
inc
lret
enter
in
push
push
sarb
sub
jge
add
xchg
adc
inc
loope
jbe
add
dec
out
insb
movsb
mov
push
hlt
or
js
int
jp
sbb
pop
mov
sub
fcom
jmp
cs
shlb
dec
xlat
dec
jl
jl
add
mov
mov
adc
xor
push
or
stc
dec
xor
jne
movsb
fneni(8087
mov
in
jl
xchg
pop
ds
xor
jecxz
popf
and
bnd
mov
push
and
mov
popa
jno
and
repnz
les
mov
lock
out
sub
shll
inc
aam
aam
and
out
push
ja
call
or
mov
loopne
mov
mov
sbb
repnz
aam
fsubr
pushf
or
shlb
add
and
push
mov
das
cmc
daa
mov
test
push
insb
repz
xor
sti
jle
les
test
push
jg
sub
cld
daa
push
push
sub
mov
cmp
ljmp
jp
cltd
pop
xor
cmpsl
mov
fsts
pop
loopne
xor
lea
fdivs
les
movaps
inc
cwtl
imul
js
rclb
fcomip
aam
jp
xor
fs
xchg
mov
cwtl
icebp
sarb
push
pop
in
movsb
js
xchg
aam
ffree
pop
jb
lods
cmc
ja
sub
movsl
repz
sub
mov
dec
jo
arpl
push
fidivs
inc
cld
std
stos
call
jmp
mov
mov
mov
xor
cmp
and
inc
inc
test
jb
loope
insl
dec
sbb
pop
mov
mov
cmp
or
push
ja
xor
shll
xor
imul
push
sbb
xorb
or
repz
out
dec
mov
mov
cmpsl
or
inc
lret
pushf
jae
dec
ja
cmp
cmpsb
mov
mov
and
and
add
pop
jl
pop
push
cmp
jle
xor
add
adc
pop
ret
push
fs
imul
xor
aas
imul
test
mov
mov
pop
add
fisttpll
je
fs
and
jmp
mov
mov
mov
push
xlat
jp
fistl
or
cltd
cmc
pop
mov
pop
push
repnz
pop
nop
fdivrs
and
rcrl
jmp
lods
xor
push
test
add
add
scas
push
lret
fmuls
dec
cltd
lret
idivl
jge
cmpsb
mov
adc
xor
xchg
rcl
sub
aad
add
inc
jb
cmpsw
push
cmp
push
out
inc
push
jmp
int3
adc
mov
push
push
add
pop
mov
in
addl
les
sub
push
dec
and
dec
or
dec
jnp
testb
or
jecxz
int
in
pop
inc
movsl
adc
and
mov
popa
dec
into
cli
push
jle
inc
pop
jmp
imul
in
aaa
or
push
inc
adc
cmp
mov
call
cmp
adc
out
enter
push
mov
mov
mov
je
sbb
push
adcl
sbb
stos
orl
pop
je
push
enter
or
add
cwtl
shll
out
test
push
mov
and
aam
mov
in
popf
xchg
outsl
push
push
sbb
repz
lret
xor
mov
fstpl
jae
cmp
xchg
fucomp
or
adc
adc
push
aam
inc
sub
or
adc
icebp
mov
icebp
fstsw
xor
stc
fisttpll
xchg
add
out
push
cmpsb
mov
test
lea
pusha
loope
inc
xor
fmulp
loopne
mov
cmp
popf
cmc
out
aas
movsl
mov
int3
adcl
mov
std
sub
out
add
jle
mov
inc
dec
mov
push
sbbb
pop
inc
add
nop
jno
cmpsl
fcomps
sahf
pop
jmp
add
inc
out
ret
pop
frstor
mov
xor
mov
push
jo
ret
mov
mov
and
add
and
mov
inc
mov
xor
bound
icebp
jmp
aas
lret
inc
pop
iret
test
dec
jmp
cmpsb
push
rol
push
xchg
popf
sahf
jo
cmpb
aaa
jg
mov
dec
out
inc
mov
movsb
xor
and
gs
jge
dec
and
sbb
pop
loop
lea
pop
pop
into
add
mov
loopne
pop
jb
mov
dec
dec
mov
pop
in
cmpsb
mov
sub
adc
daa
aaa
jle
ficomps
or
adc
iret
cmp
or
jns
addb
aaa
jmp
call
sbb
in
mov
ds
mov
stos
repnz
dec
push
int
lea
orb
adc
fwait
sysenter
sub
mov
push
call
inc
dec
into
cwtl
add
sub
pop
xor
add
push
pop
loop
push
adc
pop
sbb
fsubrp
movsb
cmp
pop
lds
pop
cmp
jg
pop
in
in
sti
out
cmp
inc
push
cmc
daa
xchg
mov
in
fcomip
insl
cmp
cmp
cltd
sub
jp
add
cld
xor
and
or
std
sbb
in
test
xor
mov
dec
in
pop
lods
mov
xchg
into
xchg
lcall
out
pop
mov
push
scas
lea
mov
dec
jmp
out
mov
and
sub
sbb
test
into
inc
push
movsb
js
sbbl
and
pop
and
rorb
mov
inc
jp
das
cmc
jne
jo
push
mov
or
cmp
inc
jb
sub
xchg
in
lcall
data16
test
push
xor
push
es
cwtl
cmp
pop
sbb
dec
fwait
mov
ret
loope
push
pop
xor
out
dec
jecxz
jno
fadds
loope
test
ffreep
jl
adc
sarb
and
nop
xchg
pop
cld
cs
call
cmp
mov
xchg
adc
and
xor
jno
or
fs
fistpl
adc
pop
or
imul
sti
sbb
in
mov
std
or
ret
loop
xchg
icebp
xchg
inc
xor
aam
cmp
imul
or
xchg
xchg
frstor
cmp
dec
sbb
sbb
xchg
jp
push
stos
sub
inc
push
gs
mov
push
mov
das
dec
aam
mov
loope
cmp
xor
mov
in
sub
iret
test
add
adc
add
js
sahf
das
inc
cmc
cs
push
pushw
leave
mov
aaa
cltd
in
outsb
cld
dec
mov
xor
fiaddl
daa
sbb
mov
adc
lock
mov
pop
aam
mov
sbb
push
pop
or
inc
push
cmp
test
mov
inc
sub
fsubrs
sahf
mov
sub
push
and
mov
icebp
mov
jle
call
stos
mov
addl
fistl
pop
stos
jo
sbb
lock
iret
insb
aas
inc
arpl
push
stos
leave
sbb
mov
jbe
jg
cmp
jecxz
mov
rcr
dec
and
ret
or
das
and
movsl
push
dec
add
inc
and
out
idivb
out
scas
pop
imul
jb
cmp
fldenv
adc
mov
pop
pop
sub
mov
cmp
pop
inc
arpl
adc
dec
jbe
loop
xor
cwtl
popf
mov
mov
ret
push
dec
sbb
lcall
mov
mov
or
loop
incl
imul
mov
and
shrb
inc
addr16
jl
call
push
pop
into
shr
or
or
adc
scas
iret
mov
jl
adc
xor
mov
lret
pop
xchg
int
sbb
call
mov
xchg
dec
cmp
sub
out
dec
popa
popf
jg
mov
sahf
jbe
jae
je
scas
je
sub
xor
sub
ret
mov
test
push
push
jmp
mov
sub
sub
xchg
mov
push
mov
inc
xor
iret
ret
dec
subb
or
jo
and
jns
cwtl
shrb
push
cmpb
cs
pop
in
jno
fcomip
adcb
in
and
inc
in
mov
mov
sub
and
pop
mov
iret
add
jle
mov
cmp
mov
inc
xlat
popa
xor
dec
inc
enter
cmp
mov
cmpsb
cmpb
or
xor
es
pop
stc
xchg
inc
lods
mov
sub
fstps
cltd
lds
lcall
outsb
mov
hlt
jmp
add
xlat
subb
imul
mov
jmp
cmp
pop
dec
push
nop
sub
lahf
push
mov
divl
mov
sub
test
lods
mov
icebp
fistpl
add
cld
and
jl
cmp
dec
mov
jg
jae
pop
ds
test
pushf
xchg
fsubrs
push
sbbl
cmp
inc
jl
sub
movsb
shlb
insb
gs
icebp
test
gs
push
test
test
cmpsl
jecxz
xor
ss
cmp
and
jl
adc
dec
idivb
cmp
mov
rclb
jmp
mov
cmp
movsl
shl
cmp
inc
roll
inc
cltd
cmp
outsl
outsl
rol
popf
aas
mov
xchg
iret
inc
cmpsb
out
pop
ljmp
push
das
nop
adc
insl
cmpsl
in
adc
cmp
rolb
mov
daa
popf
mov
xor
les
jge
movsl
cmp
into
cmp
cmpsb
jecxz
adc
add
xlat
aad
ja
jno
test
mov
xchg
mov
movsb
inc
movsb
mov
mov
imul
pushf
pop
filds
xchg
sub
daa
sub
mov
fsubs
or
out
mov
mov
push
test
dec
add
fidivl
mov
stos
push
popa
jp
cmpsb
ljmp
cmp
sbb
ss
sbb
cs
cmpl
stos
shlb
sub
test
jno
and
pop
jns
out
add
push
adc
sbb
arpl
subb
ljmp
inc
pop
cmp
les
push
and
insl
ss
std
data16
pop
call
int
sahf
clc
dec
jmp
sub
mov
rcrb
jle
fnsave
ret
ret
sbb
shr
aam
pop
out
loopne
push
icebp
into
faddl
scas
xchg
sub
clc
mov
pop
jl
rcl
inc
outsb
out
xchg
pop
pop
sbb
jns
insl
mov
pop
push
mov
and
and
cwtl
in
push
mov
hlt
mov
mov
mov
dec
repnz
jb
xor
mov
and
cmp
call
jne
or
stc
lret
sbb
mov
test
push
mov
fistpl
inc
mov
mov
add
data16
pop
fistpl
cmp
icebp
daa
repz
stos
sbb
in
lds
sbb
mov
inc
ret
out
ret
push
cmp
gs
loopne
dec
clc
stos
jmp
mov
dec
test
inc
mov
jno
sbb
fbstp
add
mov
cld
shll
leave
sbb
or
pusha
insb
xlat
aas
mov
js
es
add
jns
mov
add
das
ret
loopne
sbbb
push
mov
cmp
dec
inc
insb
insl
cmpsl
in
push
xor
dec
adc
mov
icebp
sbb
iret
fnstcw
clc
xchg
cmp
sbb
imul
aaa
adc
add
xchg
gs
mov
ljmp
enter
push
out
sbb
mov
adc
inc
adc
cmp
ret
pop
sahf
gs
fwait
hlt
jl
ffree
test
adc
popf
jl
push
lret
mov
push
sub
dec
out
add
add
adc
jecxz
mov
pop
inc
testl
add
or
enter
testb
cwtl
pop
xchg
inc
lret
xor
add
adc
jmp
push
aad
imul
pusha
push
dec
cmp
nop
das
mov
dec
xchg
aaa
add
dec
aad
xchg
and
sub
dec
dec
cmp
mov
mov
bound
fs
jge
xchg
sti
in
jae
push
out
push
inc
aad
stc
jge
jge
cs
ficoms
cli
sbb
and
and
mov
push
repz
lods
inc
push
sbb
aas
and
int
mull
rclb
sbb
or
orb
push
cmpb
xor
sbb
imul
scas
mov
mov
mov
stc
sub
popa
dec
in
or
xorb
jbe
lret
out
mov
mov
sbb
fucomi
mov
movsb
js
out
mov
mov
test
outsb
fisubl
repz
inc
inc
cmp
fbld
push
mov
add
loop
mov
dec
dec
dec
push
jp
push
nop
imul
jbe
les
pop
cmp
lock
out
lcall
jg
into
mov
add
and
std
mov
incb
sub
js
pop
mov
fs
popf
in
out
jae
xor
inc
mov
mov
pusha
popf
or
mov
sbb
aas
jmp
xorl
push
and
mov
icebp
sub
ljmp
fisubl
fistps
push
orb
filds
add
push
lret
mov
sti
xor
pop
movsl
push
jno
loopne
push
stos
sub
xchg
xor
push
push
std
fsts
xchg
cmp
cmp
je
mov
mov
mov
fsub
xor
lods
test
adc
xchg
xchg
mov
jp
jg
fwait
imul
mov
sti
add
push
xchg
sub
outsl
subb
or
and
pop
shlb
bnd
cwtl
push
push
jp
push
adc
sub
or
or
push
sub
in
gs
out
sbb
and
lahf
outsb
inc
lds
ret
lods
shlb
dec
arpl
mov
sbb
jg
push
aad
dec
std
and
mov
xor
sbb
icebp
daa
insb
aaa
lret
adc
mov
jmp
iret
adc
rcrl
decl
mov
and
lods
cmp
mov
rcrb
sub
xor
out
into
sub
repz
sub
or
pop
mov
dec
cmpsb
xchg
mov
fwait
xor
leave
pop
jl
cmp
mov
dec
cmp
ljmp
inc
sti
fstps
outsb
lods
mov
push
or
dec
or
and
in
popf
mov
mov
insl
stos
imulb
loop
iret
and
mov
jne
jmp
or
xor
in
mov
pop
push
in
cmc
mov
fistl
mov
test
mov
cmp
jo
std
leave
aam
bound
ds
sub
mov
movsl
rclb
jmp
sub
push
add
aad
outsl
dec
pop
leave
mov
sti
cmp
jns
adc
cs
imull
insl
inc
dec
ljmp
nop
adc
xchg
sbb
mov
je
mov
dec
out
add
pop
loope
orl
cmp
sub
inc
gs
sbb
cmp
test
pop
inc
das
movsb
mov
xchg
and
mov
jno
push
arpl
ljmp
sarl
push
shll
data16
sub
and
mov
xchg
push
out
ja
sbbb
iret
pop
jmp
fwait
xor
and
mov
ds
fildll
push
mov
popa
ds
out
int3
int3
pop
in
loop
add
mov
imul
jns
jg
xchg
mov
hlt
mov
push
or
sahf
dec
jmp
jl
push
and
or
das
pop
repz
ss
cltd
xchg
out
rolb
fs
fistpl
out
add
iret
lods
adc
imul
jmp
xchg
sub
xchg
mov
aam
jecxz
adc
add
out
outsl
iret
or
imul
inc
fmull
nop
sbb
lahf
cltd
loop
sbb
lahf
inc
xchg
sub
mov
cmp
cli
in
je
and
push
xor
fucomi
xchg
jbe
lea
adc
fstps
xor
sub
pop
dec
gs
mov
adc
loop
mov
cmp
mov
test
scas
rcrb
xchg
fsubl
cmp
xchg
inc
jb
scas
pop
lret
xlat
jns,pn
stos
fmuls
lds
xchg
cld
mov
cmp
sub
dec
xchg
cltd
nop
add
sub
mov
mov
pushf
mov
jnp
xchg
mov
jns
cmpsl
repnz
push
pop
inc
fwait
ljmp
sbb
test
fildll
dec
mov
aad
or
int3
inc
jbe
dec
fiadds
ss
into
xchg
xchg
dec
outsl
arpl
gs
outsl
xchg
decb
test
repnz
mov
jp
ss
es
aaa
fdivrp
lods
add
sbb
adc
dec
sahf
pop
xchg
call
ljmp
test
pushf
dec
movsb
sub
push
and
lcall
sahf
push
xor
dec
cld
test
mov
xor
outsl
mov
xor
push
cmpsb
cmpsl
mov
loop
scas
cld
fs
fs
mov
stos
pop
lock
popf
pop
jnp
fistpl
adc
xor
test
push
push
lret
cwtl
xor
test
pop
lds
xlat
jne
mov
sbb
rorb
mov
stos
mov
push
dec
fmuls
mov
sbb
mov
or
addr16
lods
in
lret
idiv
xlat
sub
icebp
pop
jns
dec
lcall
and
rsm
adc
pop
sbb
pop
in
lock
xchg
je
xchg
or
jno
mov
push
push
ljmp
cmp
add
pop
lcall
mov
subb
jmp
and
and
mov
insl
inc
push
or
test
jne
xor
mov
insb
or
and
jge
pop
ret
xchg
aas
add
jp
inc
adc
pop
mov
subb
jmp
clc
fcoml
mov
fnstcw
das
push
stos
inc
xchg
sub
cmpsb
out
xchg
pop
jmp
ljmp
cs
jge
cld
fildll
int
push
jo
in
xchg
push
pop
cli
lock
test
push
inc
rcr
xlat
ss
ljmp
or
xor
jg
inc
jbe
jmp
cmp
in
pop
mov
adc
adc
mov
fsubs
mov
loope
in
inc
mov
mov
out
sub
push
fwait
mov
xor
and
into
cmp
xchg
push
pop
aaa
sbb
sbb
and
sbb
fucomi
popf
or
loopne
pop
xchg
cmp
nop
fs
and
mov
push
negb
repz
mov
sbb
sub
xchg
xchg
jb
jae
or
jbe
shlb
jg
lods
push
sbb
push
adc
xchg
roll
jp
inc
data16
jb
or
inc
mov
mov
or
das
fcomps
popa
mov
jno
mov
mov
gs
sub
xchg
aas
imul
rorl
test
mov
mov
xchg
stos
sbb
mov
mov
inc
add
ja
test
enter
xchg
sub
fidivl
push
mov
mov
ss
aaa
cmp
fdivrs
lret
push
add
mov
scas
cmpsb
or
negl
jb
add
xlat
sub
cltd
or
push
mov
decl
mov
out
into
fidivs
lcall
inc
jecxz
pop
pushf
jmp
mov
jmp
in
jecxz
incl
inc
lea
cmpl
and
mov
cs
lahf
lcall
pushf
scas
mov
or
sbb
sbb
sub
scas
mov
in
and
lret
inc
cmp
push
std
rcll
clc
push
xchg
stc
dec
cltd
outsl
fsubrs
sbb
cwtl
push
push
repz
xor
sub
lods
lret
shl
cmpl
sub
add
test
adc
ja
jae
cmpsb
xchg
mov
enter
mov
sahf
jmp
in
movsb
fstps
mov
incl
lods
leave
mov
mov
fs
inc
mov
test
bound
cmpl
xor
rolb
add
shrl
add
outsl
cld
xchg
xchg
stos
pop
ljmp
loope
outsl
mov
fdivrs
mov
in
push
lea
and
into
sub
outsb
mov
jo
xchg
and
leave
enter
fcmovne
cmpl
cmc
les
push
repnz
cmc
lods
cmc
add
iret
inc
sbb
outsb
lcall
pop
ss
out
sub
or
mov
leave
pop
fwait
dec
ja
add
mov
es
out
icebp
mov
shlb
xchg
cmp
lea
fwait
in
lahf
js
xchg
mov
lcall
rorb
xor
aad
pusha
cwtl
daa
fwait
mov
out
movsl
cmp
test
fidivs
sub
sbb
aas
lods
mov
or
inc
cmp
cmp
shlb
dec
dec
jnp
cmp
std
xchg
mov
shr
push
xchg
mov
jo
scas
cmp
iret
adc
shlb
popa
in
add
dec
hlt
push
push
sub
mov
cmp
inc
stos
les
test
jl
or
pop
mov
sub
adc
pop
dec
xchg
add
jns
arpl
jb
push
pop
lahf
movsb
xorb
pop
fs
push
repnz
push
cmp
sbb
sbb
sar
imul
imul
push
mov
cmp
inc
cld
dec
sti
dec
in
ror
and
mov
sbb
test
mov
push
in
cs
aam
mov
cmp
icebp
lods
dec
pop
mov
aad
das
cltd
jb
and
dec
xchg
icebp
jb
mov
addr16
scas
popa
imull
mov
mul
sahf
sbb
aas
inc
addr16
sub
lahf
aad
mov
mov
setbe
iret
pusha
jg
push
push
cmpsb
inc
xor
in
inc
jae
jnp
add
cmp
jle
mov
aas
fwait
jae
pop
insl
xor
imul
xorb
pusha
shl
ljmp
call
push
xchg
iret
aas
fprem1
mov
pop
leave
xor
pusha
repz
adc
in
bound
ljmp
and
daa
test
xor
xchg
ret
push
inc
push
sti
in
daa
jg
mov
stc
sahf
inc
cmp
lret
xchg
jge
call
pop
sbb
in
push
pop
jecxz
testb
inc
jmp
aad
pop
addr16
dec
scas
jmp
xchg
xchg
add
sbb
scas
aam
xor
rcr
mov
cwtl
andb
mov
addr16
arpl
sti
mov
jp
jb
stos
insl
dec
cmc
jns
adc
iret
dec
xchg
jmp
xchg
lret
rcll
mov
in
push
popf
inc
push
loopne
outsb
add
and
adc
mov
rcll
xchg
lock
scas
in
int
jl
stc
sbb
fcomip
or
sbb
xchg
xchg
loope
inc
fdivrs
fldenv
push
cltd
mov
or
cwtl
jnp
fwait
adc
mov
push
sub
bnd
pop
push
dec
rcrl
mov
sarl
in
int3
loop
vmread
adc
movsb
lods
sbb
mov
sbb
cli
xchg
mov
es
nop
std
mov
dec
addr16
pop
test
or
into
scas
out
mov
shll
jb
pop
fiaddl
gs
je
pop
ja
jo
push
movsb
ja
fstl
mov
cld
mov
cmovle
jl
mov
inc
jp
mov
iret
push
add
out
cmpsl
pop
iret
or
and
push
sbb
cmp
mov
xlat
sbb
inc
push
loopne
push
cld
sbb
sahf
stos
pop
cs
fcmovnb
rcrl
int3
cmp
popf
gs
ljmp
stos
flds
inc
cmc
addr16
dec
mov
pop
or
icebp
mov
sahf
mov
loop
mov
stos
nop
test
in
and
dec
fmull
pop
mov
jb
sub
mov
das
jns
repnz
jl
inc
addr16
insl
dec
xchg
and
cmpb
sub
jge
idivb
dec
sub
adc
xchg
cmpsb
iret
push
in
js
inc
jp
lods
sub
scas
xchg
xchg
adcl
or
in
add
jbe
shr
sub
fldt
mov
aaa
mov
mov
xchg
mov
ja
ret
push
int
xchg
xlat
push
shrb
pop
pushf
xor
cmp
test
cmc
shrb
sbb
repnz
inc
push
xorb
push
lcall
add
mov
and
push
pop
jae
push
xor
test
add
adc
cltd
and
cmp
adc
add
sbb
outsb
pop
les
mov
mov
cmp
add
pop
xor
mov
das
stos
test
shlb
fiadds
cltd
jnp
sbb
stc
xchg
sub
decl
cmp
jbe
sbb
mov
and
xchg
pop
push
dec
pshufw
mov
mov
movsb
jge
repnz
mov
imul
imul
push
cmp
pop
sahf
sub
icebp
frstor
imul
mov
mov
mov
and
loop
push
popl
push
jg
sub
iret
sub
mov
int3
push
mov
inc
loopne
sbb
jns
mov
in
fildll
bound
scas
bound
pop
or
outsl
and
mov
mov
or
sbb
mov
in
cmpsb
in
xchg
push
sti
aas
xor
inc
push
jp
adc
mov
dec
and
xor
inc
sahf
inc
push
int
lea
add
xchg
xchg
rcrl
push
test
popf
xchg
xchg
fwait
mov
adc
int3
add
xchg
stos
push
and
pop
ds
or
jnp
jbe
pop
push
stos
shll
push
jae
cmp
js
push
dec
into
inc
or
aaa
mov
gs
adc
mov
std
mov
add
pop
adc
add
movsb
jae
inc
sahf
shlb
inc
dec
mov
dec
xchg
mov
xlat
cmp
inc
mov
mov
popf
sbb
call
dec
xchg
pop
fisubrl
or
ss
shll
mov
add
jb
dec
js
pusha
lods
fwait
dec
ds
sub
das
test
les
xor
fiadds
xlat
sti
je
cmpl
push
test
sbb
lods
pushaw
insl
inc
repnz
scas
movsb
jbe
ficoml
fsubrl
testl
scas
mov
add
js
fcoms
sbb
rolb
jbe
loop
loop
inc
cmpsl
xchg
sbb
mov
in
pushl
aad
xchg
cmp
lock
mov
or
sbb
jge
adc
push
lea
jmp
pusha
push
icebp
dec
dec
pusha
dec
hlt
std
inc
and
loope
xchg
sub
dec
lret
pop
dec
jae
in
sub
fidivrs
enter
sarb
adc
adc
loop
int
jnp
jo
sahf
jne
push
mov
ds
inc
or
inc
pop
adc
sbb
test
leave
and
push
outsb
jb
dec
paddw
mov
mov
jl
pushf
xlat
fisubrs
xchg
loope
cmp
popa
and
fiadds
sar
sub
lahf
inc
jne
das
jns
lock
mov
dec
into
sbb
sub
scas
fbstp
dec
xchg
pop
mov
gs
xchg
sub
ret
daa
hlt
cwtl
mov
jb
mov
stos
aaa
ret
in
cmp
cmp
pop
movsb
and
lahf
dec
jecxz
pop
clc
or
mov
std
fnstsw
icebp
faddl
jp
insl
mull
adc
xchg
aaa
lds
sbb
mov
sbb
cmc
jmp
jmp
es
clc
adc
pop
cmc
mov
jmp
cmp
adc
inc
and
out
mov
fiaddl
xchg
jno
mov
jb
xchg
js
adc
mov
fisttps
dec
dec
inc
adc
pop
mov
mov
orb
inc
mov
and
mov
fdivr
scas
push
push
add
movsb
cmp
push
aad
dec
and
mov
stos
fidivrl
jnp
xchg
rcrl
lds
mov
mov
jo
xchg
icebp
popf
arpl
fmull
lret
pop
lock
sbb
hlt
sub
ja
xchg
jge
out
and
btr
mov
ret
or
lahf
sub
add
dec
lea
mov
inc
inc
les
imul
inc
fdivrs
out
scas
jp
xchg
jbe
fcompl
jmp
and
ss
mov
push
jle
xor
xchg
jno
jmp
arpl
ss
imul
ljmp
roll
cld
adc
cmp
out
jecxz
and
mov
lods
sub
repnz
in
adc
sbb
or
outsb
dec
lea
sub
jne
add
or
inc
mov
shll
add
jbe
in
pushf
jns
xchg
lret
iret
stc
sti
movsb
lods
or
push
stos
lods
lods
adc
mov
xchg
sub
pop
ja
lret
adc
inc
dec
nop
add
pop
cltd
jmp
xor
xor
icebp
jbe
xchg
int
mov
arpl
aam
pop
xlat
lods
out
pop
je
xchg
loopne
lcall
and
ret
repnz
imul
adc
xchg
stos
dec
out
cmpsl
sbb
daa
jp
jne
xchg
jle
xchg
cmp
lahf
mov
and
pop
xchg
fidivl
mov
andb
sub
rorl
clc
fstpl
mov
and
mov
push
std
adc
incl
adc
or
fildll
ss
and
and
jno
dec
pop
das
fidivl
or
hlt
pop
roll
cs
and
pop
push
int
outsl
jb
sub
jle
lds
mov
pop
or
mov
mov
inc
xor
rcrb
sub
or
iret
test
mov
xor
enter
shl
pop
sarl
cltd
xchg
push
imul
mov
movsb
leave
stos
int
pop
imul
dec
ret
sbb
add
mov
jo
int
insb
test
sbb
ret
test
in
popf
mov
leave
out
xor
in
jp
fidivs
and
lea
ljmp
mov
jae
pop
call
xor
dec
test
and
call
xor
cmpsb
xchg
repnz
mov
lret
stos
adc
xchg
push
pop
inc
cli
mov
inc
roll
jbe
cmp
stos
lcall
lret
jnp
inc
xchg
in
mov
clc
jnp
stos
sbb
xchg
orb
push
test
cmp
mov
fbstp
sarl
sub
cmpsb
in
fldenv
xlat
pop
shrb
mov
cli
stc
int
les
out
mov
adc
mov
loope
enter
sbb
lods
sub
jb
repnz
mov
je
jne
aam
ljmp
fwait
jae
or
xor
fldcw
outsl
jp
jne
cld
sbb
es
mov
outsl
mov
jge
xor
fwait
add
ret
bound
stos
add
mov
imul
jb
dec
flds
dec
xor
push
mov
cmpsb
add
notl
stc
call
push
insb
repz
lea
push
dec
aas
fldl
scas
popa
xor
jno
push
dec
push
icebp
cmp
fadds
lea
lcall
shll
addl
mov
mov
xor
push
lea
add
xor
dec
aam
rcrl
mov
stc
mov
cwtl
sbb
scas
or
lret
idivl
sub
cli
cli
pushf
cmp
push
inc
data16
popf
sub
test
pop
dec
aas
movsl
push
ds
jns
xchg
iret
or
xor
in
das
ds
je
jb
push
push
mov
das
mov
xor
jbe
cmpsb
int
pop
cmp
lock
movsl
mov
jmp
pop
ror
fs
ret
loop
negb
and
and
jl
inc
jmp
mov
jmp
int
mov
adc
imul
sbb
inc
mov
inc
daa
xchg
lds
xlat
lahf
sub
movsb
hlt
dec
iret
fistl
cs
jg
faddl
xor
lcall
xchg
daa
adc
sahf
das
daa
cmp
data16
outsb
mov
mov
testl
mov
mov
add
adc
lret
or
cld
pop
out
xlat
movsl
mov
dec
ret
ret
and
add
and
cmp
and
sbb
push
mov
nop
jge
adc
fchs
bnd
mov
pop
leave
jmp
inc
mov
popa
add
sub
xchg
mov
insb
and
jno
call
sbb
rclb
fidivrs
dec
inc
mov
xchg
inc
sbb
push
out
pop
cs
iret
add
xor
xor
lock
in
xor
mov
jmp
fistpll
stc
jp
es
dec
push
aad
jno
push
ret
mov
jp
lock
or
leave
cmp
test
and
inc
arpl
xchg
cmpsl
sbb
xchg
rorl
dec
in
sub
das
stc
shrl
outsb
push
adc
dec
sub
jo
mov
scas
sub
sbb
out
cld
roll
aaa
xchg
sbb
repnz
sarb
push
inc
or
xor
xlat
mov
jp
mov
testl
jb
xor
jns
loop
inc
push
jmp
xlat
dec
in
add
mov
jbe
xlat
loop
sbb
jns
push
mov
pop
test
push
or
decl
adc
push
add
rclb
imul
call
sub
adc
push
test
adcb
sarl
and
mov
mov
cmp
rolb
cli
sub
mov
leave
loop
adc
in
push
add
mov
mov
mov
test
cmp
je
pop
or
scas
outsb
sub
and
or
data16
push
sub
loope
adc
out
mov
aas
mov
mov
andb
cmp
ret
fsubl
ja
js
push
cld
out
lea
addb
cmp
add
adc
dec
lods
mov
pop
aas
mov
pop
ret
add
rcrl
out
jo
jno
push
orb
push
pusha
fcmove
in
div
push
xchg
loopne
mov
std
in
mov
or
push
inc
mov
mov
mov
pop
add
dec
dec
fadds
loope
ja
jo
or
xchg
sbb
cmp
std
fadd
dec
repz
inc
repnz
divl
push
cmpsb
and
imul
sbb
insl
mov
inc
ret
dec
push
pushf
add
mov
inc
out
and
mov
mov
gs
xor
adc
and
lock
pop
in
popa
jne
or
ljmp
inc
aam
rorb
cli
outsb
jl
xchg
mov
call
inc
sbb
cmp
sub
xor
in
imul
and
add
xchg
or
xor
sbb
mov
and
rcl
cmp
das
jl
scas
negb
xor
ret
cwtl
in
sahf
or
das
imul
popf
scas
jge
mov
jb
cmp
and
jecxz
push
pop
shrl
ja
subb
movups
jo
xchg
ror
imulb
mov
es
inc
xchg
jle
and
jo
fcmovu
jecxz
mull
jle
and
inc
das
enter
cmpsl
mov
inc
pop
mov
notl
ds
outsb
cmp
adc
mov
fdivrl
and
das
xchg
mov
mov
push
hlt
mov
nop
or
in
mov
test
stos
jg
loop
jno
and
in
xor
lea
xchg
and
inc
das
mov
xor
pop
not
mov
pop
roll
xchg
inc
dec
mov
inc
pop
pop
je
xchg
xchg
cmp
inc
xor
out
push
daa
and
dec
in
pop
lea
iret
jp
lahf
movsl
insl
mov
mov
dec
repz
inc
mov
sbb
sbb
dec
pop
aad
mov
add
mov
push
or
and
jo
sub
insl
pop
jge
jae
call
or
outsb
fnstenv
push
pop
cmpsb
iretw
in
mov
bound
shll
and
jnp
mov
insb
or
pop
dec
inc
popf
add
xchg
test
jae
leave
sub
and
scas
repnz
jmp
inc
cmp
push
sbb
lret
pop
sahf
push
das
sbb
ret
and
cs
inc
js
repz
or
lea
xor
inc
sub
pop
xchg
sub
cmpsb
fisttps
lret
jp
inc
inc
daa
push
movsl
sub
in
add
sbb
add
mov
fldl
push
cs
xor
push
sub
lods
jno
stc
scas
test
testb
call
ljmp
mov
in
dec
adc
daa
push
jge
test
xor
insb
fidivrl
test
jl
pop
fimuls
pusha
jno
repz
lea
sbb
in
cmp
sbb
push
inc
adcl
or
aas
popa
in
push
loopne
shrb
cmp
stos
and
xchg
pop
inc
mov
and
mov
add
cmpsb
mov
push
arpl
xchg
pop
ljmp
dec
dec
ret
lea
push
loopne
push
ret
sti
mov
pop
or
jo
lds
pusha
mov
and
jmp
outsb
inc
push
sub
xor
cmp
aas
and
jnp
rorb
sub
inc
xchg
clc
push
sub
sti
sub
xor
mov
stc
ss
jmp
ds
mov
int3
in
xchg
sbb
int3
cltd
push
adc
enter
xchg
push
inc
jno
adc
and
stos
lahf
lock
jae
mov
int3
push
std
movsb
jmp
pushf
clc
inc
bound
adc
or
mov
testb
jecxz
lods
sub
fbld
mov
movsl
rorb
push
pushl
stc
sub
cmpsl
pop
fists
xchg
and
adc
sbb
clc
and
int3
and
xor
into
xor
ljmp
lods
inc
lahf
aam
and
inc
xor
sbb
es
pop
jl
ss
test
shl
dec
mov
pop
mov
and
and
dec
bound
fcmovbe
mov
mov
sub
lret
int
push
ss
movsl
add
mov
jle
fs
push
sub
mov
cmp
or
stos
adc
lock
js
adc
rcr
outsl
pushf
dec
cltd
adc
das
or
loop
push
mov
xor
add
pop
xchg
int3
push
bound
ret
mov
mov
cmp
pop
outsl
test
xchg
mov
movsl
sbb
ds
jmp
fdivrs
cmpsb
fbstp
jg
dec
add
adc
aad
or
sub
inc
loope
xor
inc
aas
jge
icebp
push
test
negl
les
leave
mov
push
divb
or
mov
push
rcrl
ja
xchg
cmp
mov
sbb
mov
clc
fdiv
adc
sbb
aam
or
adc
sub
das
mov
jns
dec
int3
jmp
out
jmp
in
movl
pop
mov
lock
jl
mov
jl
or
push
pop
or
dec
out
or
inc
dec
cmp
out
adc
or
clc
ret
mov
test
jg
pop
test
dec
lods
je
sub
pop
xor
adc
in
movsb
mov
imul
inc
shlb
ljmp
push
push
inc
cmova
imul
or
imul
popa
jae,pt
cmp
iret
inc
bound
fdivl
lahf
sbbb
shr
arpl
lahf
adc
push
cwtl
in
and
ret
je
clc
cmc
mov
mov
lcall
mov
mov
mov
out
mov
xor
ss
movsb
jae
inc
ds
loopne
aaa
hlt
mov
mov
addr16
es
jl
les
add
lret
mov
fidivl
jp
xor
add
inc
inc
mov
cmpsl
mov
pop
loope
or
cmp
sbb
ds
push
flds
ss
shll
jmp
pop
cmp
push
sub
mov
cmc
roll
call
jne
insb
outsl
cld
dec
inc
cmpps
adc
push
mov
jmp
push
inc
mov
pushf
addr16
sbb
fsubl
mov
mov
mov
and
dec
iret
or
xchg
ja
enter
cmp
dec
xchg
or
mov
add
dec
hlt
inc
add
sub
sub
cmp
mov
pop
and
add
dec
roll
aaa
mov
cmp
mov
out
push
rorb
shrl
push
int
xor
or
inc
jns
jno
push
pop
loope
adc
pusha
shrb
pop
xchg
divb
lcall
shrl
jmp
subl
data16
add
cmp
mov
push
xlat
int
mov
push
pop
push
addl
mov
inc
mov
jg
mov
mov
mov
or
stos
lods
nop
sahf
std
ja
cmp
cmc
and
pop
fstpl
repnz
cmp
js
dec
mov
in
xchg
int3
cmp
mov
les
push
loopne
mov
dec
push
ret
es
dec
jecxz
xchg
call
clc
fmull
pop
in
scas
bound
leave
push
or
lods
dec
gs
inc
dec
out
mov
add
inc
or
out
inc
sub
das
mov
push
inc
xor
daa
lret
fists
push
vucomisd
test
loop
xlat
in
ss
out
cmp
xor
dec
inc
jg
out
les
lock
das
and
loop
rorl
mov
or
cmc
lahf
insl
popa
sub
push
mov
mov
mov
aaa
xchg
data16
into
mov
lahf
sub
jle
jbe
fcomp
out
add
roll
sub
jns
cwtl
add
call
insb
dec
int
imul
push
sub
loope
lds
cli
aas
jmp
es
xchg
add
dec
jmp
sub
or
fisttpll
call
imul
bound
cmp
or
hlt
dec
pop
inc
jnp
mov
lods
xor
hlt
cmpsl
xchg
pop
shrl
jne
sub
jnp
dec
and
jle
xor
inc
push
scas
test
cwtl
sbb
int3
jbe
push
imul
sbb
aad
mov
dec
ret
cli
push
xchg
jmp
or
es
jmp
adc
mov
sbb
mov
or
cmpsl
push
add
mov
add
push
sub
and
push
jecxz
lea
dec
orl
mov
loop
xchg
jno
push
idivb
mov
leave
stos
enter
xor
and
ja
inc
jbe
jmp
lahf
adc
rcl
pop
insl
or
sub
cli
ret
insl
adc
ret
imul
test
xchg
dec
jle
pop
sbb
sbb
arpl
inc
jl
dec
mov
fsub
das
mov
popf
or
add
popa
dec
out
cld
fiadds
xor
ret
mov
test
mov
test
iret
push
divb
xor
movb
loope,pn
repnz
call
inc
mov
add
dec
pop
in
clc
mov
mov
stc
outsl
pop
xchg
jns
mov
imul
cmpb
pop
mov
js
repz
mov
fcmovbe
jne
pop
fimuls
add
outsb
imul
imul
fcomp
mov
jns
push
xor
jg
enter
xlat
rcll
notb
sbb
mov
out
dec
cli
dec
icebp
add
incl
adc
out
aad
ret
mov
fcomps
inc
pusha
jbe
daa
lea
ljmp
cmpb
in
test
shlb
jle
push
imul
scas
pushf
xor
pushf
fdivp
ss
pop
jge
loopne
cmp
add
cltd
add
mov
scas
popa
dec
outsl
ffree
int
std
fadds
das
das
repz
and
and
sbb
push
bound
xchg
pop
xchg
cltd
jno
add
mov
leave
dec
sbb
xchg
in
lcall
fimull
push
movl
mov
arpl
mov
inc
push
int3
pop
ds
or
cmpsb
rol
inc
aaa
jl
mov
mov
popf
mov
inc
mov
push
cmp
dec
push
xchg
cmpsl
cld
adc
icebp
adc
les
mov
add
je
add
mov
mov
inc
push
xor
test
sub
leave
movl
pop
inc
inc
in
and
adc
inc
test
add
pusha
sti
and
movl
hlt
sub
cwtl
adcl
and
shll
clc
je
xlat
adc
jno
xchg
into
sub
sahf
std
repz
or
lret
negb
cld
shrl
fwait
inc
mov
jle
pop
outsb
mov
movsl
in
je
mov
out
jb
add
fucomi
lret
hlt
scas
jle,pn
push
sbbl
inc
push
movsb
xchg
dec
call
xor
push
pushf
fnsave
xchg
push
pop
cld
dec
rorb
rclb
gs
pop
mov
inc
fwait
adc
ja
jp
jne
pop
hlt
andb
mov
shl
sub
aad
xchg
jae
jns
sub
in
xchg
shrb
xor
jl
xchg
fisttpl
push
or
mov
clc
cmp
xchg
stos
cmp
int
and
out
fildl
mov
pop
movsl
ss
shrl
xor
lret
stos
dec
cmp
jo
mov
in
popf
mov
xchg
loop
mov
testl
pop
mov
popa
in
test
leavew
movl
lahf
mov
mov
jbe
repz
call
mov
pop
out
xchg
cmp
mov
and
aas
fstl
pusha
push
lret
and
pusha
pop
lret
fisttpll
adc
test
mov
and
cwtl
jns
cld
cmp
push
test
outsl
cmp
cmpsl
xchg
adc
imul
cmpl
subl
fimuls
roll
cmp
movsl
lret
pop
inc
sub
or
jmp
mov
xchg
stc
add
adc
cltd
lcall
jbe
jecxz
lretw
jmp
pop
xchg
int3
insb
mov
dec
adc
xchg
rol
mov
jnp
push
iret
and
inc
cmp
inc
and
fldenv
jb
mov
test
add
cmp
cmpb
jmp
and
mov
push
hlt
xchg
pusha
or
imull
lock
je
push
scas
in
test
mov
pop
adc
ficompl
inc
xchg
sub
adc
add
stos
push
ljmp
cmc
addr16
cmp
jns
mov
mov
out
cmp
mov
xlat
pushf
inc
push
lahf
int
inc
and
adc
push
sub
sub
dec
xchg
aam
loopne
add
inc
js
cmp
xchg
pop
sbb
ret
loope
adc
mov
inc
je
jle
push
insl
mov
dec
pop
xor
and
loopne,pt
pop
xchg
shlb
stos
test
jno
shrl
add
jae
push
in
add
cmp
jmp
pop
cld
mov
xchg
and
or
dec
in
cmc
cmpsb
sub
daa
imul
push
xlat
pushf
incl
and
vrsqrtss
add
aaa
jne
xor
push
movb
cmpb
gs
imul
sbb
shll
jne
xor
iret
push
js
pop
add
int3
lahf
push
faddp
xchg
xchg
into
mov
rorl
aaa
mov
in
dec
jo
inc
out
sub
enter
dec
stos
cmp
inc
mov
jno
cs
sub
jle
or
sub
cli
scas
out
ret
in
mov
push
pop
jno
or
ds
inc
xchg
ret
mov
rorb
sbb
pop
push
adc
jg
outsb
test
cmp
lcall
out
dec
mov
add
sbb
pop
jecxz
pop
pushf
jae
and
push
pushf
push
jge
fs
test
shl
movsb
dec
ljmp
pop
mov
out
movsb
out
gs
adcl
dec
fidivl
les
testl
stc
inc
add
sbb
pop
add
sarb
xor
xchg
jle
jb
inc
or
and
adc
xor
aaa
test
adc
mov
lock
push
jl
popa
adc
sbb
add
xchg
movsl
add
mov
cs
mov
pop
push
jl
fdivl
lea
adc
nop
push
out
fnstcw
or
sub
or
scas
xchg
in
inc
imul
mov
cltd
cmp
add
inc
aas
mov
and
ds
pop
push
sub
mov
jecxz
mov
mov
pop
idivl
mov
sti
xchg
iret
lret
cmp
iret
pop
mov
xor
or
iret
aad
cs
and
sbb
sbb
movsl
xchg
inc
fnstcw
or
das
pop
fucomi
sub
jnp
insl
and
daa
out
sub
cmpsl
sub
popf
clc
shlb
mov
out
lret
fsubs
push
adc
pop
pop
xchg
ficomps
push
out
sahf
add
sub
push
inc
popf
movsl
and
outsb
inc
cmc
lahf
into
movl
rolb
cld
outsb
test
add
xchg
rcrb
add
std
in
lock
xchg
dec
pop
mov
lods
cwtl
mov
mov
data16
int3
inc
jecxz
insl
jno
loope
ja
or
xchg
dec
fstpl
lods
sub
fsubrs
add
sbbl
leave
call
fwait
cmp
shl
insb
mov
enter
fcoml
sbb
lds
inc
xchg
mov
mov
fldl
xstore-rng
cmpsl
inc
fnstenv
bound
mov
jno
loope
mov
dec
and
cmp
ret
std
jg
lret
mov
pusha
jo
push
inc
cwtl
jecxz
movsb
xchg
pusha
rorb
add
cmp
push
js
ljmp
cli
mov
out
outsl
loope
and
adc
test
sbb
mov
pop
adc
xor
arpl
cmp
aad
lds
dec
and
std
daa
pop
cltd
push
ret
ljmp
cmp
les
ds
iret
mov
loop
xor
imul
fistl
jo
std
out
jmp
mov
mov
notl
mov
mov
out
in
lods
or
jnp
mov
mov
ss
fcompl
push
shrl
jae
arpl
mov
mov
xchg
insb
dec
and
mov
pop
jmp
and
and
fistl
xchg
xlat
ret
xor
add
push
mov
sarb
xchg
sahf
aam
xor
dec
xor
nop
ja
xorl
cmpsl
andnps
xchg
je
js
mov
adc
pop
mov
dec
sub
adc
popf
sbb
xor
mov
pop
inc
inc
jnp
xor
fcoml
in
xchg
mov
push
aad
or
jle
jle
imul
add
xchg
push
into
jns
or
jmp
mov
mov
xor
xor
sbb
stc
fiaddl
aaa
inc
inc
fidivl
aad
cwtl
fnsave
push
lods
sub
sub
sub
add
nop
push
adc
rclb
ficomps
jb
cld
int
repz
lods
sub
je
xor
mov
addr16
pop
mov
or
xchg
push
push
rcrl
sub
mov
inc
scas
and
int3
ja
les
loope
xor
dec
pop
and
movsl
jno
aas
dec
lock
push
sbb
ret
dec
popa
or
loopne
xchg
pop
adc
sub
lret
fsubl
or
sbb
pop
shlb
lea
int3
test
pop
and
mov
in
test
sahf
pop
mov
jp
pop
mov
or
aad
mov
push
or
cmp
aad
cmp
lcall
push
mov
aas
scas
xor
mov
mov
loop
in
adc
dec
cmp
cmp
mov
lcall
rcl
pop
push
push
dec
lods
in
add
insb
pop
jb
mov
or
mov
dec
adc
in
lret
popa
cmp
adc
push
arpl
or
lea
repnz
push
dec
cli
pop
inc
inc
unpckhps
hlt
jns
mov
std
add
lahf
in
in
roll
and
lcall
push
adc
push
jno
in
faddl
ss
sub
iret
movsb
add
decb
movsb
mov
inc
and
mov
out
mov
jne
inc
cmp
addr16
clc
xor
xchg
add
gs
mov
jns
es
sub
sub
call
idiv
mov
mov
pusha
fsub
aad
push
repz
or
jle
je
push
mov
call
inc
jl
les
int3
sub
aas
or
aaa
repnz
push
mov
ja
aas
mov
in
sbb
and
mov
adc
mov
cmp
mov
test
push
loop
out
cmc
dec
jmp
das
out
popa
inc
add
xchg
in
pop
loop
push
push
and
or
mov
adc
sbb
movb
stos
pop
dec
ficoms
fadds
inc
sbb
mov
push
add
cmpsl
pop
xlat
push
je
inc
subb
cmc
out
pop
inc
lea
sub
mov
sbb
inc
inc
cwtl
mov
xchg
popa
cs
push
mov
mov
adc
mov
and
pushl
cs
fisubl
into
xlat
mov
out
adc
jle
mov
enter
fucom
lock
sub
fimuls
js
mov
ljmp
fdivrs
sbb
adc
push
push
popa
scas
mov
xchg
xchg
bound
popa
cmp
xchg
pushf
cs
dec
push
incl
pop
inc
pop
cltd
adc
push
add
jg
add
rcrl
cmp
add
out
popa
pop
out
or
xchg
xor
mov
test
test
inc
or
add
cmpl
sub
mov
sub
mov
sbb
hlt
lret
push
mov
test
scas
pop
cmpsb
aaa
addr16
enter
std
and
cltd
nop
loopne
inc
insl
sub
movsl
add
call
sbb
pop
call
inc
repz
mov
inc
outsl
insb
icebp
neg
xchg
jge
jo
out
aam
xor
into
push
sarb
pop
data16
xchg
rcr
repz
lahf
repz
dec
sbb
cltd
shll
test
lret
loop
mov
and
sbb
xchg
dec
dec
fildl
push
add
in
fldenv
and
dec
sub
pop
mov
popf
adc
mov
fistps
repz
cmpsb
std
sbb
mov
inc
xor
ret
loopne
stos
mov
xchg
adc
pop
popl
insb
mov
jmp
xchg
pop
sub
sub
xchg
sbb
adc
ds
sbbb
imul
xor
xor
jbe
mov
call
ljmp
pop
pusha
imul
or
sub
int3
cmp
and
push
pop
sbb
repnz
fiadds
and
cmp
in
xor
scas
and
in
leave
jmp
mov
mov
add
out
or
lea
mov
pop
fadds
je
xchg
xor
mov
popl
repz
adc
mov
cmp
notb
nop
sub
arpl
icebp
ret
daa
fcompl
int3
sbb
mov
std
loop
fistpll
sbb
mov
jge
push
push
fldt
xchg
sar
sbb
loop
rcrl
pop
cwtl
fcmovnb
repz
add
ljmp
push
push
pusha
loopne
and
xor
xchg
xchg
stos
fistpl
mov
iret
inc
xchg
ja
lahf
xor
loopne
lcall
mov
mov
sti
sahf
adc
cli
testl
xchg
pop
cwtl
sbb
xchg
rorl
xchg
arpl
mov
test
xchg
sub
pop
push
cld
fs
subl
xchg
mov
mov
pushf
xchg
jae
jl
mov
pop
jmp
nop
xlat
fldcw
popf
enter
jmp
data16
jle
add
and
push
mov
push
sbbb
jmp
or
lods
xorl
ja
ret
dec
push
std
and
push
sbb
pop
adc
shll
xchg
xor
popa
imul
adc
fiadds
pop
lret
xorl
ret
xor
sub
xor
int3
mov
jl
mov
pusha
out
inc
ljmp
xor
test
loope
pop
fdivrs
call
lcall
adc
jo
mov
out
jno
frstor
adc
out
mov
mov
cmc
dec
lcall
cltd
in
add
lock
loop
dec
jne
mov
movsb
imul
in
mov
push
sub
mov
cmp
movsl
dec
aaa
jp
jp
xor
or
sub
adc
or
sub
insb
mov
jbe
outsb
movsl
stc
mov
lods
adc
fld
in
popa
and
inc
sti
mov
repz
and
mull
cs
add
cmp
sub
push
fistl
dec
xchg
dec
dec
movsl
sub
mov
and
add
aas
aaa
lds
outsb
sub
xchg
pop
pop
stc
adc
push
add
sti
cmp
inc
mov
movsl
pop
mov
cltd
pop
sti
sbb
lret
outsl
and
push
les
les
mov
popa
icebp
pushf
adc
les
int3
iret
les
push
inc
sar
jmp
jg
adc
adc
push
push
mov
xchg
lods
xor
rorl
jno
mov
pop
xor
add
pop
sub
mov
and
inc
mov
xchg
xchg
jle
in
out
jnp
mov
scas
shll
mov
outsb
xchg
mov
pop
mov
cmp
add
mov
push
jp
xlat
add
and
iret
lock
int
push
pop
and
cmp
movsb
mov
push
or
push
arpl
movsb
inc
and
mov
les
cmpsb
stos
shrl
push
jae
outsb
inc
roll
push
mov
fdivrl
or
addr16
std
adc
in
rcrl
imul
mov
leave
jmp
mov
data16
in
loope
mov
nop
lahf
shrl
xchg
mov
xor
pop
test
imul
inc
mov
lahf
dec
or
int
outsb
sub
lcall
aas
xchg
xlat
push
loope
jmp
fstpt
repnz
fcomps
into
cmpsl
mov
fisubrl
pop
imul
outsb
les
fidivrl
or
repz
sbb
js
mov
out
imul
add
cli
pop
inc
jns
sub
xchg
push
cmpsl
xchg
lahf
jg
loope
stos
xor
sbb
pop
dec
cmp
cmp
xchg
jmp
repz
lahf
test
fadds
cmpsl
or
sub
bound
mov
push
jnp
or
rcl
std
or
fwait
insl
out
fnstenv
cltd
pop
mov
push
popa
sub
loope
push
push
test
lret
push
das
not
out
pop
out
sub
mov
jne
xchg
inc
ljmp
insl
pop
in
jbe
dec
push
aad
inc
xchg
lods
es
xchg
dec
pop
test
jge
out
and
insl
ja
in
es
inc
ret
stos
ja
xchg
sub
mov
jo
into
shll
xlat
fisttpll
sarl
fcmovnu
repz
jno
insl
mov
addr16
or
push
das
push
es
lcall
dec
ret
inc
lret
adc
jnp
mov
adc
xchg
and
mov
push
lock
dec
cmpl
sub
cs
imul
xorl
mov
or
mov
mov
inc
push
mov
jg
int3
mov
push
punpckhbw
add
ja
jg
cld
std
mov
inc
into
add
mov
mov
stos
test
sti
ret
xchg
mov
stos
sbb
fiaddl
push
movsl
sbb
mov
inc
sbb
add
jnp
ja
adc
fidivl
dec
cmp
imul
aad
ds
mov
pop
or
jae
popf
mov
and
shl
outsb
pop
and
xchg
popf
lds
sub
add
insl
push
pop
sarb
mov
gs
das
lock
sbb
dec
sub
sbb
push
sbb
xor
aas
inc
xor
lds
icebp
and
jae
popf
sub
repz
pause
cmpsl
fidivs
mov
aad
dec
rcl
rcpps
xchg
fsubs
out
cmp
in
les
negb
fwait
adc
add
mov
inc
xchg
enter
insb
ficompl
sub
inc
or
inc
stos
mov
add
push
and
sub
test
push
lods
mov
ja
iret
mov
imul
ja
dec
andl
push
out
xchg
cmp
loope
mov
jge
jl
pop
and
shlb
mov
lret
popa
idivb
imul
shrl
and
and
fdivs
xor
fs
sbb
insb
mov
and
sbb
xchg
cmp
ret
pop
xor
es
inc
jae
cmp
push
pop
cmp
mov
rorl
add
in
popa
push
int
mov
jne
icebp
and
repnz
cmp
xchg
adc
shlb
inc
pusha
inc
inc
cmpsl
inc
aaa
stos
lret
lcall
pushf
pop
push
mov
leave
ss
into
mov
decl
cmp
stc
stos
mov
js
push
jecxz
sbb
pusha
cltd
icebp
xchg
adc
insl
sbb
jg
dec
js
and
std
testb
adc
popf
mov
add
mov
mov
xchg
mov
fcomi
out
movsl
jl
jns
das
xchg
xchg
push
cli
mov
leave
orl
add
mov
fsubl
mov
mov
imul
out
adc
popa
testb
inc
mov
negl
fstpl
jb
xchg
fadd
push
aam
sub
test
test
sub
cmpl
mov
adc
sahf
repnz
xor
fmul
mov
stos
adc
sbb
dec
dec
or
push
mov
xchg
jo
je
clc
or
push
inc
cmc
xor
jns
shll
add
xchg
jnp
std
xor
push
xchg
mov
mov
sbb
repnz
sahf
lods
add
xchg
xchg
testb
sub
jmp
and
mov
lods
adc
sbb
cmp
cmp
ds
sub
adc
scas
scas
enter
add
inc
adc
or
jle
mov
adc
outsl
fsubs
sbb
adc
daa
mov
sahf
sub
xchg
lea
cwtl
imul
jno
mov
out
pop
mov
and
movsb
xchg
bnd
aad
mov
shll
cmpsl
cmc
or
dec
sbbl
std
and
dec
rcrb
cltd
jae
out
inc
mov
popf
popl
gs
xlat
mov
add
fimuls
pop
outsl
jmp
idivl
lods
daa
mov
push
inc
movsb
jl
fidivrl
pop
sub
pop
mov
push
jns
fs
cwtl
pop
xor
fwait
jmp
fwait
test
xchg
cmpsl
lock
mov
adc
cli
stos
jl
test
sbb
dec
push
decb
popa
sub
lods
sbb
in
inc
sub
dec
push
xchg
out
or
inc
cmp
pushf
jno
gs
bound
rcrl
pushl
in
gs
or
das
adc
and
jl
cmpsl
scas
mov
pop
mov
mov
jl
jbe
rorb
hlt
movsl
jle
mov
es
xchg
sahf
dec
jo
inc
dec
mov
mov
jge
dec
test
xor
in
jmp
pop
jmp
pop
aam
cmc
jae
lods
cltd
addr16
cmp
and
scas
or
jns
or
scas
pop
mov
outsb
iret
lcall
mov
pop
mov
in
out
clc
or
mov
dec
fsubrl
mov
dec
sarl
mov
cmp
or
xchg
das
in
or
cmc
push
adc
aaa
lds
lcall
adc
push
jmp
cld
test
xchg
sbb
push
jge
movsb
gs
lods
outsl
sub
inc
cltd
mov
leave
mov
mov
stos
cmp
and
negl
add
in
out
pusha
mov
xchg
dec
les
das
out
xlat
pop
push
mov
test
inc
inc
stos
fimull
divb
jmp
aam
pop
pop
fs
dec
aas
mov
or
shlb
lods
ss
jle
in
andl
out
xchg
and
lea
jns
adc
arpl
andb
nop
xchg
inc
fidivl
cli
jmp
sub
out
pop
xorl
inc
rorl
sbb
push
adc
xchg
mov
sti
std
and
jns
adc
test
cltd
cmpsb
cmp
pop
test
pusha
cmp
sti
fnclex
inc
jns
mov
idiv
cmp
sets
sub
jle
loopne
loop
xchg
jl
adc
arpl
pop
xor
or
cmpsl
shll
and
xchg
sbb
inc
xchg
test
xchg
icebp
into
arpl
lods
call
add
test
aam
fidivrl
jno
push
xor
out
js
fldcw
lds
stos
testl
xor
dec
jne
dec
push
xchg
push
sub
sbb
fwait
rorb
xchg
inc
cltd
xchg
jmp
lds
inc
mov
daa
daa
ds
jne
push
dec
icebp
xchg
mov
clc
sahf
push
out
dec
lcall
dec
mov
cmp
fdivr
or
in
loope
sub
rorb
mov
xchg
icebp
cmp
lret
aad
push
mov
jbe
adc
int
push
fnstcw
mov
insb
loope
or
and
inc
dec
add
jns
int3
push
xlat
inc
ror
frstpm(287
mov
ret
add
cmp
mov
out
xchg
mov
sti
test
std
loop
addr16
push
inc
in
sbb
push
cmp
mov
cmp
sbb
cmp
mov
and
xchg
inc
rcll
adc
adc
xchg
scas
xor
cmp
cmp
js
movsl
jns
mov
call
fs
aaa
lods
inc
xchg
lea
xor
and
sbb
in
lret
in
sub
push
call
sub
push
fistps
jmp
fmull
lea
jne
sub
jae
xchg
dec
mov
push
push
jns
stos
aam
and
sahf
or
daa
xor
lret
or
jp
jmp
dec
cmp
movsb
push
mov
or
jg
lods
lcall
add
mov
mov
sbb
sbb
xchg
jge
stos
daa
cmp
fstpt
xchg
and
push
mov
divb
jne
or
mov
aam
scas
testl
out
add
cmp
das
mov
mov
xor
ds
call
clc
mov
cmp
test
xchg
pop
jl
fs
stos
std
sub
push
mov
test
dec
rcrl
mov
inc
ljmp
mov
dec
push
call
inc
sub
out
jp
inc
out
pop
les
fnsave
jb
cmc
xor
test
push
out
std
rolb
mov
inc
js
fists
dec
cmp
sub
icebp
daa
ret
sub
push
pop
repnz
mov
test
dec
mov
mov
loop
push
call
or
jg
orb
daa
or
scas
inc
jo
add
mov
popa
jl
push
mov
fadds
dec
ja
stos
inc
jle
add
pop
iret
add
xlat
lea
loop
mov
pop
fdivrs
shll
das
jne
and
pop
cmpsb
sub
fnstcw
mov
notl
sub
rcr
lret
cmp
orl
jmp
and
jp
and
pop
popf
sub
push
cmp
jmp
sti
dec
lock
adc
xor
mov
aad
dec
hlt
inc
bound
jmp
jns
mov
pop
iret
in
repz
and
inc
jmp
dec
jg
mov
push
xor
cltd
popa
push
mov
in
or
and
sub
stc
enter
sub
pop
push
cmp
mov
xchg
mov
cmpsl
mov
out
mov
arpl
or
cmp
add
inc
leave
mov
mov
pop
and
pop
or
adc
adc
add
or
push
xchg
pop
push
xor
inc
pusha
mov
scas
lock
out
lock
cmp
sbb
jne
lock
bound
fsts
jge
movsl
xor
jae
jo
jg
fwait
xchg
inc
mov
decb
dec
outsl
push
ljmpw
inc
adc
jl
and
mov
jmp
push
dec
daa
adc
mov
cli
cmp
dec
mov
dec
sbb
dec
rorb
inc
hlt
xorb
mov
dec
xor
pushf
lds
xchg
mov
sbb
and
movsl
sbb
mov
or
in
xor
add
cmp
cmp
inc
lret
xor
cmp
icebp
outsb
add
dec
or
shlb
jne
gs
loope
add
mov
cld
sbb
faddl
add
jnp
arpl
jnp
test
jno
mov
xchg
pop
sbb
push
movsb
pop
sub
and
adc
rclb
adc
imull
pushw
jo
and
and
imul
inc
mov
addr16
pop
inc
mov
dec
lods
cli
loope
add
xchg
pop
push
xchg
aaa
inc
jnp
popf
mov
shll
lods
cltd
xchg
cmp
jl
inc
xorl
fildll
imul
mov
or
mov
and
jg
push
lret
xchg
or
fcmovb
lret
stos
mov
mov
test
jg
js
popa
sub
stc
imul
out
jb
push
jnp
stos
xchg
and
mov
fstpl
bnd
mov
ret
cmp
xlat
inc
add
rcrb
shrb
cmp
push
adc
push
lret
repnz
out
push
push
fs
and
mov
mov
or
dec
out
xchg
mov
pop
data16
enter
out
fwait
mov
mov
shlb
jp
divb
mov
jmp
xchg
pop
adc
mov
cwtl
insl
sarb
sti
cmp
fsubr
outsl
jmp
clc
sbb
bound
iret
dec
mov
in
pop
push
jg
in
sar
and
dec
mov
sbb
xchg
sbbb
dec
lock
movntq
out
dec
xor
fsqrt
push
arpl
jnp
cmpsb
addr16
into
stc
sahf
lret
push
jo
sub
cmp
std
cli
xchg
add
fistl
jecxz
push
mov
inc
push
pop
cmp
lcall
xchg
and
inc
icebp
lods
mov
orb
push
inc
pop
cli
xchg
add
lahf
cmp
xchg
xlat
pop
cmpsb
in
xchg
aas
aas
data16
out
pushf
adc
pop
jbe
pop
xor
sahf
out
push
sub
and
xchg
inc
pop
movsb
stos
cmp
cmpb
adc
daa
push
or
shr
jp
push
push
pop
mov
push
rcrb
fsubrl
mov
int
cmp
repz
xchg
push
lahf
xor
loop
mov
insl
mov
add
loop
std
pop
xchg
mov
push
in
mov
xor
movsl
andb
out
add
xlat
imul
mov
push
xchg
adc
mov
cmp
cmpsl
pop
out
popf
xchg
sub
addb
out
cmpsb
cld
mov
xchg
shll
loopne
mov
inc
ret
jge
sub
int3
je
les
leave
mov
mov
lea
iret
mov
push
sub
dec
lods
repz
stos
xchg
jmp
imull
hlt
loope
fscale
cmp
xchg
adc
adc
push
mov
ljmp
fnstsw
mov
jns
dec
lret
lds
iret
ds
jl
xchg
lahf
xchg
movsl
jl
sub
icebp
jnp
and
cmc
movsb
ret
shll
xor
popf
in
mov
mov
jg
dec
cmovbe
cmc
xor
shrl
loop
stos
in
addb
xchg
repz
mov
imul
push
outsb
pushf
scas
mov
pusha
imul
or
sub
cmp
inc
sbb
bound
lret
mov
jbe
jl
movsb
pop
ror
scas
in
sbb
pop
mov
pop
sbb
fistps
adc
cld
call
in
daa
push
ret
mov
cmp
cmp
sub
ja
sub
ljmp
pop
in
scas
fisubrs
and
daa
out
js
adc
mov
sub
rep
arpl
andl
imul
cs
and
sbb
adc
xor
jo
fistl
add
sbb
dec
pop
and
testl
add
repnz
stos
in
pop
inc
pushf
or
rorl
std
mov
sbb
cwtl
loope
mov
clc
sbb
pop
inc
dec
rcl
rcrb
mov
fs
mov
xchg
mov
jl
sub
das
int3
and
dec
or
sub
daa
sub
mul
fists
mov
out
out
inc
or
pop
inc
je
add
js
out
scas
mov
and
roll
sub
pop
loope
mov
pop
add
jle
and
pop
orb
dec
xor
imul
mov
jb
adc
repz
xor
add
inc
cmpsl
test
imul
orb
test
adc
dec
faddp
cli
popa
xchg
pop
and
lea
mov
cmp
out
push
in
repnz
mov
loopne
decb
mov
push
fstps
stos
ss
and
ret
push
jle
fldcw
js
jge
push
movnti
ja
mov
cmp
jg
inc
xchg
add
pop
jmp
cmp
pushf
aad
dec
or
aas
dec
stos
ret
cmp
sub
rcrb
dec
push
dec
jns
cmp
pushf
push
std
into
rorl
dec
scas
sbb
or
xchg
pop
fs
jbe
push
loope
add
sub
mov
push
cli
pop
out
dec
gs
inc
mov
or
mov
add
cmp
cmp
cmpsb
cmp
sbbl
loop
xchg
fcomp
adc
jmp
fs
dec
fsubs
arpl
push
filds
scas
mov
cmp
inc
ret
sbb
mov
int
lcall
sbb
int3
in
xor
out
aaa
push
add
lret
lahf
inc
mov
ds
ret
adc
testl
fsubrl
orb
lcall
lret
imul
rcll
sahf
into
xchg
cmpsb
loope
lods
xchg
mov
inc
mov
movsl
sub
ss
push
in
fimull
out
cmp
pop
out
pop
add
int
bound
fwait
cltd
add
cmp
pop
xchg
rolb
cmp
pop
pop
xorb
hlt
repnz
jbe
addr16
add
jmp
pop
fnsave
fmulp
adc
je
pmovmskb
repnz
iret
sbb
push
aaa
dec
adc
xor
xor
sub
inc
loopne
insb
bound
mov
add
add
sbb
inc
orb
mov
in
cmpsl
scas
xor
aas
ljmp
mov
dec
push
mov
mov
pop
test
add
push
xor
pop
mov
pop
mov
jne
outsb
pop
fldcw
in
stos
mov
adc
test
popa
repnz
mov
pop
into
mov
jmp
add
or
loope
cld
jns
aaa
pop
jbe
push
xchg
push
gs
dec
mov
mov
hlt
lods
mov
lods
test
test
movsb
jecxz
jb
jecxz
mov
out
xchg
sbb
ja
xor
enter
loope
popf
fistps
xchg
mov
ffree
adc
jl
hlt
mov
loop
adcb
sbb
mulb
pop
insb
adc
and
pop
arpl
aam
pop
inc
xor
shl
shll
aas
lds
cmp
pop
pop
add
ss
std
mov
pop
push
outsl
in
or
jne
push
inc
xorb
cmp
xor
dec
lar
out
in
push
xchg
cmpb
es
pop
ds
sub
test
xchg
cmc
flds
push
mov
inc
pop
gs
pop
xchg
jae
or
or
out
wrmsr
movsb
jl
and
or
adc
mov
pop
pop
xchg
aas
pop
ror
daa
mov
lret
push
push
inc
lods
jno
mov
mov
dec
lahf
lods
popa
pop
xchg
mov
outsb
inc
jae
popa
mov
sub
push
fwait
dec
data16
ljmp
sub
fcmovnb
repz
and
or
xchg
roll
loopne
lods
out
fsubl
xor
jp
fwait
inc
mov
adcl
push
xor
sub
xor
push
inc
cld
cmp
lahf
sub
sbb
imul
sub
out
je
jge
imul
and
adc
loop
incb
aad
idivb
sub
into
pop
icebp
dec
cmc
dec
js
inc
movsl
add
inc
pop
inc
sbb
xchg
sbb
sub
dec
jns
imul
testb
adc
cmpsl
in
pop
mov
js
sbb
arpl
xor
inc
and
adc
adc
mov
add
arpl
xchg
sbb
clc
sub
ja
or
adc
fisubs
repnz
push
sarb
fildl
lret
adc
int3
aas
inc
dec
aad
es
cli
inc
sbb
xchg
into
out
push
addl
or
or
negl
xchg
iret
mov
sub
adc
inc
cmpb
dec
fcoms
push
out
pop
shr
push
arpl
mov
jo
loope
cmpsl
stos
ss
mov
hlt
xchg
xchg
movb
pusha
in
movl
sbb
lods
mov
insl
fdivs
adc
push
jno
lcall
jb
arpl
pop
add
fists
in
sbb
data16
xchg
addb
je
xchg
bound
dec
pop
push
fwait
je
lret
int3
mov
lea
inc
into
mov
cli
mov
mov
mov
and
push
ds
adc
sub
xchg
xchg
nop
pop
out
std
xor
and
push
mov
popf
imul
jbe
popa
jne
pop
cmpsl
xor
aaa
dec
call
inc
call
gs
mov
ficoms
int
mov
lret
mov
mov
cmp
xor
sbb
je
xchg
sub
mov
insb
fsubs
push
test
mov
or
jecxz
mov
mov
jl
lea
pushf
adc
xchg
jne
jnp
fisubrl
xorl
jns
jg
rcll
mov
scas
mov
nop
ss
repz
out
adc
rcrl
adc
fxtract
mov
popa
or
clc
mov
adc
sahf
les
cld
lock
add
fnstsw
in
pushf
imul
stos
add
pop
out
xor
popf
push
not
inc
sahf
sbb
cmp
movsl
rcrb
push
loop
fisttpl
jno
inc
imul
xor
pop
cmp
mov
ret
mov
pusha
popa
inc
mov
xchg
jmp
or
jnp
movsl
cmp
clc
jne
js
outsb
push
mov
aad
test
mov
in
mov
push
jo
cmpsl
mov
test
xor
push
mov
aaa
sbb
test
add
nop
leave
aam
cld
stos
cmp
jns
mov
outsl
cmpsl
into
fdivr
bound
outsb
mov
sub
or
ja
xor
dec
adc
xor
ret
je
dec
and
sub
cmc
daa
push
dec
adc
adc
add
insb
js
pop
pop
lret
dec
loope
and
into
jl
loopne
mov
hlt
cmp
mov
sub
pop
lret
hlt
popf
addr16
loopnew
xor
cmp
fldcw
mov
fwait
ss
or
jmp
cmp
pop
addl
or
pushf
repz
push
nop
mov
adc
mov
fnsave
test
pop
push
in
push
jmp
cmpsl
cmp
lret
fcom
mov
pop
test
adc
lock
imul
pop
push
sarb
sub
data16
cs
or
fdivp
pop
repz
stos
stc
xchg
add
or
fldl
rorl
outsb
inc
stos
pop
pop
aaa
sbb
jbe
push
aad
test
test
add
test
es
xchg
mov
mov
sbb
clc
xor
push
xor
daa
mov
ljmp
inc
mov
inc
mov
jl
mov
shrb
xor
and
and
mov
aas
mov
cld
push
xchg
mov
fwait
lcall
pop
pop
and
mov
js
mov
mov
mov
bound
cld
je
in
lret
rclb
int
push
xchg
jb
loope
push
rclb
arpl
cmp
and
stos
cs
mov
fs
insb
add
test
lds
cld
add
movsb
cmp
pop
xor
xchg
aam
adc
adc
or
pop
and
push
out
test
xchg
add
pushf
fs
sar
inc
jo
ret
sub
inc
or
inc
sub
shrl
push
xchg
ss
or
add
or
faddl
lahf
iret
inc
mov
lahf
push
ficoms
jg
pushf
repz
aam
and
dec
sbb
aad
cmp
ss
jbe
shrb
insl
xchg
outsl
add
cltd
dec
imul
lds
inc
mov
mov
lods
mov
lahf
pop
jl
iret
jbe
hlt
cmpb
test
sbb
in
mov
pop
cmp
adc
enter
sub
sub
iret
rolb
mov
xchg
pop
divl
loopne
xor
fcmovne
clc
jecxz
jge
jbe
and
or
sub
cld
sub
pop
or
loope
xchg
jg
int
ja
pop
sub
xchg
dec
mov
mov
aam
popa
xor
lods
push
sbb
dec
jge,pt
pusha
xor
mov
or
call
sub
testb
cmc
cmp
jecxz
sub
sub
and
fstpt
stos
add
xor
int
loope
test
pop
or
imull
push
cmp
jp
jl
popa
shrb
and
pop
jmp
insb
repz
dec
je
jbe
lds
sbb
lock
mov
cmp
in
aad
outsb
and
dec
or
sub
test
fildl
add
dec
xor
sub
adc
lcall
push
dec
sbb
inc
pop
test
out
mov
mov
fimuls
sub
test
dec
jg
inc
out
cmp
mov
cmpsb
lahf
shrl
push
mov
sbb
mov
subb
icebp
cltd
mov
xlat
inc
fucomip
inc
adcb
pop
mov
int
sti
enter
sbb
xchg
push
insb
pop
lret
sub
push
sbb
pop
mov
push
inc
js
fisubs
nop
xchg
pop
mov
cltd
outsb
fsubl
jb
icebp
mov
mov
mov
les
jecxz
aam
add
rcll
rcll
xor
bound
enter
push
and
mov
mov
jle
xchg
mov
imul
pop
or
jle
cmp
mov
outsl
lea
popa
mov
test
outsb
iret
stos
daa
inc
scas
adc
fdivl
das
push
dec
dec
jecxz
dec
jbe
fucomp
push
sbb
mov
mov
sub
gs
inc
mov
jno
shlb
xorb
test
mov
pusha
push
push
sub
cmp
sbb
sti
fwait
inc
dec
push
sbb
cmp
jo
sahf
sbb
dec
mov
enter
pop
lahf
fwait
and
rcll
outsl
dec
cmp
or
aam
push
add
jmp
inc
mov
jg
xchg
cs
xchg
pop
and
testb
jne
dec
mov
in
xor
ljmp
das
test
int3
or
pop
fsubr
pop
pop
push
int
fs
push
mov
add
jno
cmp
mov
fdivl
ss
add
rclb
dec
sti
cmp
or
scas
adcl
mov
cmpsl
jo
fcmovu
mov
repnz
test
jg
and
fisttps
xchg
or
cmp
test
cmp
sbb
or
inc
call
mov
mov
and
rol
shll
stos
movsb
lock
popa
aam
inc
mov
inc
mov
xor
das
jle
mov
xor
xchg
pop
pop
and
mov
adcl
out
popa
jb
and
ds
xor
inc
add
js
sbb
xor
subb
lcall
push
pop
pop
dec
xlat
sub
dec
sub
adc
std
shrl
xchg
test
dec
out
inc
dec
mov
inc
xor
loopne
adc
adc
fidivl
aam
dec
inc
inc
push
fdivl
jg
cs
xchg
add
rolb
xor
mov
adc
sbb
fbstp
inc
dec
add
or
xor
arpl
or
cmp
mov
fdivrs
outsl
std
dec
jmp
inc
xchg
loope
in
sbb
mov
xchg
xchg
loope
add
inc
ret
mov
iret
xchg
add
adc
bound
sbb
mov
sub
jno
sub
fstps
inc
iret
jle
sbb
xchg
dec
stos
adc
fwait
fwait
mov
xor
mov
mov
xor
jb
pop
xchg
cmpsl
scas
icebp
or
es
stos
adc
loopne
xchg
inc
rep
aad
je
mov
seto
sbb
imul
fnstenv
shlb
insl
mov
or
test
lods
sub
cmc
outsb
fwait
shrl
or
pop
lea
cmp
decb
sti
inc
jle
push
xchg
rclb
push
cs
xchg
clc
fsubl
cmp
test
mov
or
rcrb
pop
cmpsl
fwait
out
les
into
push
dec
pop
mov
mov
xor
mov
cmp
cmp
ror
fwait
xchg
fwait
xchg
mov
outsl
xor
inc
mov
xchg
imul
or
idiv
stos
les
cmp
test
pop
sub
xchg
fsubs
jne
inc
inc
xor
insl
dec
mov
add
aad
std
test
test
in
jb
out
lods
xchg
int
mov
sbb
loope
push
fsubs
lods
addb
adc
lcall
push
outsb
push
mov
getsec
add
popa
pop
enter
cwtl
pushf
or
addb
add
stos
dec
test
lock
xchg
cmpsb
xor
mov
cmp
ja
out
mov
sti
sbb
insb
lods
and
ss
inc
and
jle
jg
fcmovbe
ror
lret
in
psubq
lret
jns
insl
cld
lods
orb
inc
scas
test
push
mov
test
enter
in
cmp
add
inc
rorl
fs
pop
popf
xlat
cmp
and
xor
jp
lcall
jle
pop
in
das
push
test
divps
fs
mov
dec
adc
aam
xor
sbb
mov
add
test
nop
testl
sti
movsb
and
push
aaa
or
cmpsb
jns
mov
cmpsb
and
fdivr
fwait
push
aas
push
stos
shrb
fmul
ljmp
pop
in
sbb
xor
ds
aas
mov
adc
inc
or
mov
fisttps
test
jo
xlat
mov
push
sbb
add
mov
pop
adc
test
setae
outsb
or
mov
loopne
sbb
cli
lock
xchg
out
push
leave
xchg
jae
movsl
stos
movsl
and
lret
lds
pop
and
and
pushf
inc
jp
xchg
push
push
xchg
sahf
xor
cmovae
in
shrb
jbe
push
sbb
cltd
jne
in
cmp
iret
pop
add
ljmp
js
fwait
sbb
loop
movsl
or
pusha
push
pop
cmpsb
clc
adc
mov
sbb
mov
and
data16
inc
xchg
test
jge
lock
sub
cs
cli
jecxz
mov
dec
xlat
jp
clc
int
dec
or
ret
sbbb
sbb
jae
add
xor
add
fsub
repnz
push
nop
pusha
jge
shll
sbb
fbstp
pop
push
std
pop
cltd
cmp
sbb
mov
test
mov
lcall
adc
outsl
rcrl
cmpl
and
xor
mov
cmp
mov
hlt
cli
inc
push
repnz
mov
jge
popa
adc
lret
mov
dec
aam
and
add
rcrl
int3
sub
imul
leave
lds
xchg
xor
mov
mov
mov
xchg
inc
and
in
aam
test
ffreep
insb
xchg
cmp
pop
push
lds
pop
adc
jecxz,pn
push
push
add
adc
dec
mov
je
negb
dec
stos
scas
and
mov
sti
mov
lods
jmp
mov
dec
fsubr
aas
ja
push
dec
mov
in
mov
test
jo
jmp
add
cmpsl
pushf
sbb
sub
call
and
test
bound
repz
xor
mov
jb
push
mov
jae
push
lods
dec
or
fcmovne
pop
add
adc
scas
pop
sbb
int
add
push
into
push
aaa
or
push
sub
sbb
xor
xchg
pop
sahf
cmp
idivb
pop
popf
lcall
push
aam
adc
push
and
out
adcb
inc
test
cmp
jl
push
mov
outsb
repnz
ret
inc
add
imul
nop
mov
sub
lret
icebp
inc
stos
pop
iret
inc
or
mov
loopne
nopl
rcl
fcmovnb
movsl
lret
icebp
sub
xchg
jmp
testl
scas
or
push
or
pop
cld
cmpl
mov
sbb
pop
nop
xchg
and
cmp
rol
mov
out
dec
lods
flds
cltd
cmpsl
rorb
leave
sub
or
xchg
xchg
adc
repnz
xor
aam
aaa
insb
movsb
xchg
fs
push
sub
pop
stos
fstl
adc
and
clc
mov
jo
mov
insb
mov
sbbl
or
lcall
xchg
ja
pop
aas
les
jge
and
fs
addr16
xchg
into
pop
fs
xchg
iret
cmp
add
sarb
or
loop
out
xchg
xor
shrb
jb
mov
adc
pop
fimuls
jp
arpl
lds
shr
mov
and
out
aad
hlt
jo
pop
mov
dec
inc
jmp
push
jp
mov
ds
sbb
int3
adc
pop
sarb
dec
and
mov
bnd
sarb
outsl
addb
push
sti
ljmp
xor
xchg
out
fs
mov
jg
shlb
mov
ret
es
xchg
scas
ja
pop
scas
mov
pop
inc
add
ds
das
jbe
jae
fdivrs
popf
sarl
mov
sahf
pop
clc
je
or
and
std
cmp
arpl
or
mov
jbe
fs
jns
xor
or
jmp
xchg
ja
cmp
push
sarl
cwtl
jb
call
inc
jne
pop
cltd
loop
mov
pop
jge
leave
fs
lret
cs
xor
es
ret
out
mov
mov
cmp
mov
mov
jmp
loop
lods
out
stos
inc
mov
sar
bound
jecxz
adc
cli
or
aad
testl
pop
sub
adc
inc
xchg
pop
adc
xchg
insl
inc
repnz
loope
mov
mov
xor
pop
sub
movsb
pop
sti
lahf
dec
fsubs
cmp
in
enter
jb
inc
jge
out
jge
testb
mov
divb
mov
rolb
dec
out
in
popf
xchg
sbb
dec
sti
arpl
pushf
imul
leave
mov
pop
xchg
push
sbb
mov
mov
mov
je
cmp
sti
push
jmp
fucomip
ficompl
cs
mov
xchg
stc
jge
xor
sbb
arpl
jmp
mov
mov
dec
cmpsl
lret
xchg
leave
xchg
insb
mov
pop
mov
sbb
loop
imul
adc
sbb
sbb
pop
xchg
push
sub
push
movsb
pushf
insl
stos
pop
test
shlb
fidivs
pop
push
adc
push
int3
pop
andl
cmp
ljmp
cltd
stos
and
mov
adc
xor
ficompl
mov
xchg
mov
mov
or
lods
add
pop
movsl
xchg
dec
sub
xchg
decl
mull
in
xor
mov
sub
jae
ret
je
and
loop
mov
adc
sarl
cmp
call
jle
fdivl
sbb
cmpb
mov
lcall
xchg
mov
xchg
iret
add
adc
mov
xchg
lahf
inc
sub
sti
ja
imull
mov
mov
cmp
dec
sbb
stos
mov
dec
ja
jecxz
fadds
dec
inc
repnz
ret
or
sbb
inc
ds
or
dec
fisttpll
ds
push
lea
inc
add
lcall
mov
inc
or
aad
cltd
fstp
sbb
push
repz
add
xor
mov
lea
mov
fistps
cli
mov
pop
out
or
lahf
sbb
negl
cmp
jmp
popa
or
mov
shll
inc
mov
and
inc
push
sub
mov
cmp
les
push
in
outsb
jg
fstps
push
mov
xchg
test
mov
daa
jecxz
sbb
sbb
aad
sub
sub
cld
xlat
jns
xchg
andb
fs
mov
aas
cmp
je
xchg
xchg
mov
mov
jle
xchg
pop
daa
xor
popa
jno
ret
xor
xchg
es
adc
mov
jae
mov
adc
popf
divl
fsubl
outsl
ja
mov
in
pop
mov
add
jbe
not
xchg
addb
xchg
and
jo
es
divb
ret
das
jg
mov
mov
add
xchg
insb
inc
pop
sbb
int3
pop
outsb
ds
adc
add
dec
pop
adcl
xchg
in
es
jae
xchg
mov
xor
clc
cli
out
inc
or
mov
add
adc
sbb
adc
das
pop
and
jle
popf
call
mov
movsb
mov
sbb
ret
adc
inc
lods
dec
dec
mov
xor
adc
dec
cltd
inc
and
hlt
out
mov
xor
ljmp
xchg
std
push
cld
add
push
jecxz
repnz
inc
and
and
stos
xorl
push
jl
mov
and
dec
fisubl
scas
and
mov
out
xchg
mov
test
xchg
lret
jno
jno
xchg
lahf
es
push
outsl
sub
mov
push
mov
mov
je
les
fisttpll
enter
inc
pop
imul
jno
adc
inc
cs
inc
sub
push
inc
xor
mov
flds
push
cmp
push
xor
pop
test
ret
lds
aas
inc
lcall
push
mov
sbb
sub
mov
in
mov
sub
in
out
lret
iret
mov
repnz
stos
mov
or
pop
mov
sbb
test
out
scas
inc
mov
mov
adc
and
xor
ja
xchg
sub
push
push
pop
mov
lock
push
imul
push
push
jmp
jle
orb
pusha
cmp
jae
insl
je
ss
loop
out
xor
fidivrs
mov
outsb
xchg
adc
in
mov
xchg
mov
dec
jg
insl
cmp
rcrb
xchg
fidivl
ljmp
adc
adc
push
mul
mov
push
lret
push
sub
loopne
mov
lahf
loopne
hlt
cmp
fildl
cmp
je
pop
or
out
mov
gs
jecxz
fwait
movsl
and
inc
pop
das
xchg
xchg
push
sarb
lcall
cmp
mov
push
pop
lods
mov
in
sbb
xor
aaa
loope
inc
pop
pusha
fwait
dec
ljmp
sbb
fsubl
or
lods
cld
dec
jecxz
add
or
fcmovu
adcl
nop
imul
or
jnp
mov
adc
in
inc
pop
fisttps
or
js
mov
dec
outsl
clc
in
roll
jno
pop
cmpsb
popa
jmp
or
mov
add
icebp
pop
inc
mov
loop
into
jmp
stc
pop
xchg
push
clc
lcall
push
or
cmp
inc
frstor
sub
cli
mov
pop
inc
imul
sbb
loop
out
je
lds
fldl2e
sub
sbb
mov
xchg
test
adc
pop
adc
fs
and
cmpsl
and
xchg
mov
aam
bound
dec
and
or
sahf
outsb
cmp
pop
cmp
subl
pop
and
scas
mov
xor
mov
mov
inc
fildl
out
stos
flds
movb
mov
outsb
xor
pushf
in
ret
push
pop
dec
xchg
ljmp
mov
stos
and
loopne
push
adc
in
or
loop
xchg
mov
ja
adc
shrl
mov
movq
cmp
mov
imul
js
pusha
inc
bnd
and
dec
mulb
fsts
cmp
pop
repz
orl
sub
cmc
and
xchg
repnz
jnp
mov
push
std
xor
lret
jb
repz
mov
mov
js
xchg
aad
fucom
nop
pop
xor
mov
mov
out
outsl
and
pop
outsb
cmove
jb
mov
jae
pop
xchg
mov
cmc
cmp
push
inc
rorb
push
xchg
pop
mov
movsl
mov
inc
insl
mov
push
fwait
lcall
or
push
mov
mov
addr16
aaa
pusha
sub
fcomi
call
add
xchg
aas
jp
std
lods
sbb
lahf
push
mov
or
lods
cwtl
rcrb
sbb
jg
jb
popa
frstor
rorl
fstl
cmp
into
rorb
inc
fidivl
sbb
jecxz
stos
pop
jo
add
cmc
movsb
fbstp
dec
push
cmpsl
xchg
std
aad
mov
jmp
daa
cmp
repz
addr16
cmp
es
data16
mov
jnp
das
es
jno
xor
insl
fwait
inc
cmpsb
pop
pop
sbb
jno
add
inc
outsb
xor
and
mov
pop
push
lea
enter
ss
outsl
xor
jecxz
add
ret
lods
cmc
fcmovb
cmc
pop
jle
jne
insl
shlb
sti
test
movsl
out
mov
sub
mov
pushf
dec
add
out
jmp
in
cmc
orl
imul
push
mov
mul
cld
hlt
loopne
sar
pop
mov
dec
js
sbb
mov
frstor
push
mov
push
dec
jb
adc
inc
cwtl
jo
sub
add
dec
and
js
pminub
in
ret
mov
cmpsl
arpl
out
adc
mov
pushf
push
pop
les
outsl
icebp
pop
lea
in
outsb
and
insl
sbb
enter
stos
xchg
mov
and
pop
in
das
loopne
push
sbb
mov
push
fwait
pop
mov
lret
jnp
rorl
nop
pop
and
or
or
call
xor
ljmp
jnp
pop
mov
gs
pop
daa
in
add
lds
pop
rcll
mov
push
or
pushf
fdivp
int3
jo
fwait
xchg
add
add
ret
scas
rcr
lret
xchg
std
testl
test
add
js
add
ret
mov
orb
mov
movsl
test
lahf
push
jae
lods
jnp
ret
in
push
scas
push
push
pushf
ret
and
cmpsb
jl
in
pop
popa
ljmp
mov
jno
jae
inc
xlat
loope
in
mov
jmp
or
xchg
fwait
pusha
add
frstor
or
adc
popf
jae
or
push
vpunpcklwd
ljmp
mov
arpl
inc
dec
scas
cltd
sti
jmp
movsl
and
mov
stos
inc
outsb
es
mov
mov
ret
push
pop
mov
and
cmc
scas
pop
pop
in
jmp
pop
sub
sub
pop
pop
add
shlb
lock
or
test
lcall
adcb
out
stc
bound
stos
subb
inc
cli
mov
aaa
test
dec
daa
push
es
and
jg
lahf
xor
out
and
push
mov
fiaddl
aam
inc
out
lea
hlt
fnsave
mov
test
and
loope
insl
test
pushl
into
das
jns
mov
pop
sbb
daa
mov
cltd
iret
test
push
test
loopne
int3
mov
jns
inc
lods
jns
leave
push
ret
pop
loope
lds
xor
adc
mov
stc
ror
push
pop
pop
cmp
lret
loope
xchg
inc
xor
in
das
mov
jbe
add
fbstp
push
pop
cld
shl
push
popa
pop
inc
jbe
int
fsts
sub
nop
adc
mov
xor
scas
sub
sbb
push
ss
stos
xor
push
fisubrl
orb
mov
data16
rcrb
pop
inc
pop
push
adc
and
pop
push
pop
cli
into
mov
outsl
jmp
mov
jg
shrb
shlb
mov
add
add
adc
shll
subps
cmp
fs
xor
aad
and
inc
dec
hlt
mov
jae
loopne
xchg
or
add
addr16
adc
popf
scas
pop
inc
mov
cmpb
cmp
push
jo
adc
mov
fwait
push
push
cmp
out
mov
mov
sub
mov
aad
movb
test
or
and
mov
imulb
add
rol
gs
mov
fisubrs
lret
scas
inc
push
rolb
scas
mov
data16
hlt
test
enter
cmp
mov
cmp
clc
les
in
cmp
cs
scas
loopne
hlt
in
les
xchg
sub
inc
dec
lods
rcll
mov
sub
or
jno
cmp
lret
xchg
and
or
imul
push
cmp
rclb
test
in
xchg
ret
dec
mov
dec
js
push
sub
arpl
sub
int3
insl
add
push
push
mov
dec
test
adc
mov
and
popa
mov
pop
jb
insb
mov
mov
sarb
mov
inc
mov
imul
cmp
test
mov
jne
out
jg
lret
mov
sub
push
stos
and
pop
dec
cmp
jmp
mov
outsl
mov
push
sbb
sbbb
fstpt
dec
sahf
mov
popf
and
fadds
out
sub
dec
loopne
jbe
add
in
fnstenv
shrl
xor
rorl
pop
popa
inc
xchg
push
cmp
test
fnsave
dec
sub
xchg
xchg
push
dec
pop
out
inc
adc
dec
faddp
jae
lret
or
jge
cmp
repnz
aad
lcall
pop
jno
push
movsl
outsb
lods
stos
sarl
jg
adc
jp
lods
and
arpl
jb
mull
cltd
sub
xor
sub
pop
mov
stc
ficoml
mov
xchg
mov
dec
testl
in
mov
das
les
adc
outsb
push
aas
jae
sbb
and
aas
movsb
mov
scas
movsl
adc
outsl
pop
bound
xor
loop
lods
mov
cmpsb
xor
adc
sar
stos
popf
fwait
push
int3
and
push
sbb
fistpl
in
add
push
jecxz
jmp
outsb
or
mov
jo
loop
hlt
loop
xchg
push
add
into
adcl
jo
les
push
lods
or
rcrl
rorb
lcall
xchg
outsb
lds
das
sbb
insb
pop
pop
fcmovu
cs
pop
hlt
or
dec
mov
mov
jno
jle
sti
push
inc
stc
popf
add
loop
outsb
cmp
scas
addr16
inc
mov
and
movsb
xchg
shr
jmp
aam
faddp
ret
das
and
xor
push
lcall
rorl
cmp
pop
in
or
test
cmp
xchg
pop
jp
fidivrl
or
pop
sbb
fwait
sbb
loop
addb
gs
addl
xor
or
sub
dec
cmp
adc
lret
jns
adc
gs
fisubs
or
fidivrs
or
cwtl
adc
mov
dec
mov
data16
inc
pop
sub
popa
sbb
or
sti
add
stos
adc
popf
repnz
subl
imul
in
add
pop
mov
inc
cmp
int
mov
aad
popa
popa
rcrb
fs
jge
out
shrl
mov
mov
leave
xchg
xchg
jbe
lods
les
shlb
fadds
adc
sub
and
out
aam
adc
repz
push
pop
lods
mov
dec
imul
or
pop
dec
mov
add
mov
in
fcompl
icebp
xorb
cmp
jne
xor
sub
add
jl
lods
adcb
mov
fsubrs
inc
rorb
and
push
pop
je
push
jnp
test
mov
pop
jp
mov
pop
push
je
and
lds
mov
nop
mov
jb
sub
sbb
inc
frstor
std
cwtl
mov
or
mov
fbld
adc
mov
in
inc
cld
lods
std
adc
or
stos
mov
mov
lock
dec
imul
lahf
in
hlt
pop
cmpsb
cltd
add
inc
cs
lahf
lret
xchg
test
xchg
cwtl
js
dec
add
push
repz
pop
dec
mov
aad
ja
leave
lods
ljmp
push
pop
jno
or
lods
adc
mov
icebp
sbb
hlt
loop
dec
pusha
and
jnp
mov
test
fs
fwait
sbb
or
enter
and
cmc
sub
call
dec
mov
push
xchg
mov
je
push
mov
mov
sbb
in
adc
lea
and
or
xchg
shrl
pop
pop
rorl
orl
jb
or
inc
aas
fldt
mov
test
test
movsl
sub
in
pop
inc
adc
sbb
push
jp
popf
xor
xlat
shlb
sbb
das
fcmovbe
pop
fdivl
test
lods
frstor
subb
add
push
popf
cs
mov
pop
push
and
xor
mov
repnz
data16
movsl
insl
pop
out
or
into
in
xchg
mov
fimull
add
xor
jmp
xor
adc
cwtl
aaa
fs
cs
stos
aas
pop
sub
mov
push
loope
push
arpl
pop
sub
xor
scas
cmpsb
jbe
xor
test
push
nop
xor
adcl
inc
xor
adc
or
fdivrl
and
cmp
dec
pop
stos
mov
jb
jecxz
insl
inc
xor
pop
lret
xor
and
iret
pushf
fsub
jb
mov
push
mov
jmp
inc
jb
pop
xchg
add
or
mov
adc
jp
pop
shl
jle
nop
mov
dec
sbb
cs
imul
xor
sbb
sbb
dec
inc
mov
out
scas
enter
mov
es
movsl
iret
fs
pop
jp
cmp
fistpl
pop
insb
sahf
sbb
idivl
inc
xchg
insl
sbb
nop
cltd
fs
fs
fisubs
cli
add
das
push
jecxz
mov
mov
jge
jo
sbb
add
nop
jge
xor
jno
xor
out
jge
mov
cltd
aam
sbb
test
or
cmp
in
in
in
dec
mov
pop
lods
mov
add
push
fstpt
sbb
call
sub
dec
pop
pop
xchg
mov
mov
and
cmp
cwtl
outsl
std
lret
fldl
call
enter
bsf
gs
xor
repz
nop
or
stos
adc
adcb
jns
mov
jg
sbbl
or
loop
push
mov
mov
sub
add
xchg
jae
mov
or
add
pop
inc
ficoml
repnz
fisubrl
xor
jle
je
cli
ss
mov
pop
mov
or
jb
jge
or
and
hlt
pop
add
dec
xchg
ret
in
repnz
xorl
mov
jle
test
test
xchg
and
jmp
push
jb
rcr
adc
push
push
xchg
ret
mov
imul
mov
adc
and
sbb
lods
add
inc
stc
out
mov
fdivl
into
mov
add
xchg
jecxz
mov
mov
cwtl
sti
or
mov
clc
pop
iret
cmp
stc
jg
sbb
push
popa
dec
and
es
mov
arpl
xchg
xchg
scas
lods
imul
mov
adc
in
test
test
cmp
inc
mov
mov
popf
test
scas
test
stos
shll
and
jnp
add
cld
adc
jae
push
jecxz
in
in
aad
je
sarb
jo
and
lcall
adc
scas
xchg
into
jge
hlt
loope
push
lods
ret
je
outsl
or
ret
iret
xlat
add
iret
add
push
xchg
loop
or
dec
and
mov
push
addb
mov
movsl
cmpsl
mov
mov
loop
call
loope
ja
xchg
cmpsl
jne
arpl
and
pop
mov
and
sbb
adc
insb
cmp
imul
mov
add
mov
mov
xor
xor
cmp
fdivs
in
in
inc
test
arpl
xor
cmpsl
out
fnstcw
fnstsw
outsb
in
add
lock
std
pop
sahf
imul
mov
mov
iret
add
je
imul
or
cs
pop
dec
js
aaa
push
insb
jge
jmp
and
xor
repnz
inc
leave
imull
push
sbb
cmp
lea
xchg
jne
lret
aam
out
scas
sbb
sti
xor
out
test
cmp
jmp
subl
adc
sbb
push
jp
test
xchg
cmp
mov
in
push
dec
cli
movsb
pop
fidivrs
sbb
cmp
popa
inc
and
cmp
cmp
mov
clc
mov
sbb
cltd
pop
lcall
in
and
es
push
rcll
mov
mov
pop
dec
into
jg
inc
add
pushf
xor
loopne
call
adc
pop
mov
and
xchg
xor
cmpsl
pop
adc
jp
xchg
insb
gs
mov
mov
mov
aam
int
loopne
push
mov
jnp
xor
jns
iret
xchg
in
lods
popf
pop
or
pop
mov
lods
cmp
aam
pop
push
leave
inc
loope
imul
mov
clc
arpl
loopne
and
inc
popa
icebp
fwait
jmp
push
outsb
sub
jne
cs
mov
cmp
lcall
bound
orb
int3
add
jge
popa
shl
hlt
cmpsl
fwait
lods
inc
icebp
daa
push
lcall
jno
lds
pop
bnd
sbb
mov
lock
ret
cld
into
hlt
or
loopne
dec
out
push
cmpsl
cmp
add
call
ljmp
data16
adc
iret
push
xor
sbb
subl
insl
out
xor
lods
mov
fmull
fwait
mov
xchg
fs
lock
xor
imul
dec
cmc
test
shr
outsb
shlb
leave
mov
repz
loopne
pop
push
mov
sahf
push
fadd
mov
scas
lcall
stos
ss
cwtl
jp
pop
ljmp
clc
xor
popf
jp
sahf
movsb
in
fs
pop
jecxz
fdivs
jl
dec
jmp
test
sarb
inc
inc
mov
cmp
sti
sub
cmpsb
mov
rcrl
out
bound
lock
sub
sub
and
insb
or
cltd
sub
int3
clc
push
mov
mov
mov
sbbb
adc
scas
xor
xchg
sbb
cmp
jns
imul
test
mov
sbb
inc
mov
fwait
or
jb
lcall
fisubrl
popf
mov
scas
and
xchg
sti
pop
jne
push
in
push
xchg
dec
push
cmp
imul
pop
xchg
aaa
int3
xor
addl
push
insl
or
aad
loop
test
cmpsb
fsubl
push
xchg
xor
ret
jmp
mov
lcall
fstpl
insl
stos
mov
sbb
push
mov
xchg
movsl
jno
outsl
lods
fnstenv
insl
ss
mull
ret
inc
test
fcoms
dec
jo
lret
dec
into
jns
xchg
fs
call
scas
sti
xor
adc
mov
neg
in
out
lea
stc
push
rol
mov
arpl
mov
int
ret
lahf
or
test
add
xor
xor
dec
js
test
xor
sub
mov
cmpsl
insl
imul
int3
mov
aad
insb
ds
mov
jno
xchg
loopne
push
and
dec
and
push
and
lcall
fsubrl
inc
int3
mov
xchg
repz
enter
movsb
or
sbb
out
outsl
pushf
mov
fisttpll
push
mov
dec
sti
ficoms
cmp
out
cmpsb
test
fdivs
shlb
mov
lods
mov
enter
filds
inc
scas
test
push
sbb
dec
inc
xor
sbb
cwtl
push
sub
loopne
jmp
iret
in
popa
or
pop
mov
xor
xchg
lds
mov
xchg
pop
cmp
push
dec
sbb
push
outsb
or
pop
sbbb
jae
cmp
jmp
jp
pop
cmp
inc
pop
cmpsl
scas
dec
sub
aas
mov
pop
lds
inc
cwtl
sbb
inc
rorb
xor
xor
mov
add
xchg
in
cmp
outsb
adc
mov
cmp
cmovl
push
ret
jne
push
outsb
or
testb
push
movsl
aaa
cmp
shlb
xchg
pusha
cmpl
out
nop
call
incl
sbb
cmp
mov
into
cltd
jecxz
aam
jns
iret
int3
icebp
sub
stc
lock
xchg
rep
and
test
xorl
push
les
xor
out
jo
scas
xchg
sub
sub
stc
mov
fdivl
jbe
and
jb
xchg
xor
cmpsl
js
sub
jl
or
cmp
add
xlat
call
repz
mov
call
repz
push
pop
ret
pop
popf
loope
cmp
mov
inc
adc
pusha
mov
jge
sti
or
add
and
mov
out
inc
cmpb
orb
cli
sbb
dec
test
xchg
jno
mov
cmp
mov
int3
les
cmp
xor
in
mov
fst
pushl
and
sub
add
xor
loope
xor
shl
push
aad
ss
pop
xor
clc
xchg
test
mov
mov
and
add
mov
lods
lahf
pop
inc
add
push
popa
cmp
addb
sbb
inc
push
int3
cltd
cltd
leave
out
cs
jl
jbe
pop
jns
ja
daa
in
add
cwtl
mov
add
testl
movsl
repnz
out
je
test
jp
sub
cwtl
in
push
bound
outsb
dec
xchg
stos
fucomip
lods
sub
icebp
test
popa
scas
adc
lods
call
sbb
adc
lock
mov
cmp
arpl
in
mov
test
mov
jge
push
pop
fnsave
add
fisubrl
insb
loopne
rcrb
aaa
decb
pop
mov
xlat
js
jne,pn
push
push
jo
mov
test
test
mov
mov
mov
iret
push
mov
sub
xor
push
das
test
push
or
add
stos
cmp
or
mov
repnz
das
in
fwait
aaa
jae
cmp
iret
loope
fwait
add
pusha
mov
pop
into
ja
push
xor
xor
jae
pop
jbe
mov
les
adc
cs
imul
out
shr
sub
gs
sub
in
jecxz
iret
loop
je
loop
lret
pushf
sarb
js
xor
cmp
daa
pop
or
stos
mov
dec
jle
mov
es
xchg
fstp
jno
enter
je
adc
xchg
adc
mov
stos
js
jg
std
out
lods
pop
mov
sbb
or
mov
mov
xor
shr
sub
xlat
dec
scas
xor
movsl
ffree
jle
jge
mov
rcrb
mov
jne
mov
mov
and
push
and
inc
insl
aas
cmpsb
ds
cld
mov
stos
movb
sbb
iret
push
pop
inc
clc
cwtl
lds
pop
cmp
cwtl
aad
and
sub
xlat
adc
xor
lcall
test
or
pop
mov
sub
dec
cwtl
or
push
ret
ret
cmpsl
popf
sbb
adc
mov
popa
push
nop
aaa
stos
lock
test
sbb
repz
push
jmp
and
jg
cli
into
nop
mov
loope
jecxz
push
cwtl
bound
pop
repz
push
ret
pop
mov
pusha
sbb
aam
jg
ds
mov
xor
mov
mov
clc
test
sarl
mov
cwtl
mov
mov
aaa
sbb
dec
mov
push
cmp
mov
insl
cmp
and
cmpsl
push
imul
push
sbb
leave
xor
adc
xor
lret
loop
push
notb
test
loop
jns
sti
shl
sarl
sub
mov
das
std
dec
push
ss
xor
jmp
out
inc
aas
sub
push
adc
push
imul
test
jmp
test
jae
aaa
das
dec
jne
dec
push
mov
sbb
sbb
das
pop
and
cmp
xor
sbb
mov
addb
popa
mov
and
imul
ficoms
leave
push
mov
push
jnp
inc
pop
dec
ja
pop
addr16
icebp
push
xchg
bound
push
push
lahf
flds
pushf
int
add
sbbl
mov
mov
adc
divb
cmp
mov
mov
xlat
ljmp
repnz
das
cmc
jmp
add
or
sbbl
stos
xor
rcll
mov
pop
shll
dec
sti
fcmovbe
jne
aaa
daa
sbbl
sahf
adc
fistps
xchg
push
or
cmc
cmc
andnps
inc
inc
jo
dec
iret
push
rorb
jecxz
repz
lret
xchg
sbb
or
shll
mov
and
mov
or
shl
movsl
add
inc
lea
mov
adc
outsb
mov
movb
ficomps
push
mov
dec
sbb
add
jns
aas
sbb
lcall
mov
jl
repz
sbb
faddl
pop
pop
inc
or
lods
jns
arpl
test
add
and
ficoml
push
ljmp
and
enter
out
mov
jne
dec
nop
gs
cmpsl
cmp
out
test
or
push
out
mov
xchg
or
pop
aaa
fmull
movsb
xor
xor
repnz
test
filds
cmp
repz
inc
cwtl
push
mov
test
push
je
cmp
or
and
sbb
xchg
popa
aas
push
loop
push
outsl
sbb
clc
lea
lds
or
push
push
and
bound
pop
dec
shl
into
out
fmuls
xchg
add
mov
stos
pushf
pop
inc
mov
jae
add
or
and
pop
popa
xchg
aam
xchg
mov
pop
test
pop
sbb
test
jo
ret
pop
and
inc
fistpl
cmpsl
jmp
outsl
insb
adc
outsl
mov
addr16
loope
xchg
mov
test
xor
hlt
aad
mov
cmpb
xchg
pop
cmpsl
and
sbb
jo
xchg
lods
into
adc
xchg
dec
adc
add
jecxz
mov
fdivr
leave
pop
ljmp
cmp
cltd
cmp
xor
cmp
mov
aam
sti
sahf
pop
call
cltd
inc
daa
movsl
xchg
xchg
inc
adc
add
aam
or
jnp
dec
test
je
aad
shlb
mov
push
dec
scas
cmp
and
jp
mov
lea
roll
add
orb
std
adc
xchg
mov
cmp
adc
in
aam
pushf
dec
in
ds
sbb
jnp
movsb
mov
adc
cwtl
inc
mov
out
mov
icebp
ss
hlt
xchg
push
in
cwtl
int3
lods
push
lcall
repnz
cmp
push
pop
out
scas
sbb
sarl
mov
sbb
addl
pop
fisubs
jg
mov
pop
test
std
lret
mov
dec
fwait
mov
test
xchg
dec
mov
in
punpcklwd
fisubl
es
sub
and
cmp
jne
scas
bound
lret
inc
xchg
jne
pop
popf
aaa
inc
loope
push
xchg
sbb
dec
sbb
pop
xor
push
out
dec
adc
test
adc
cltd
push
sbb
xor
mov
testl
dec
inc
incl
mov
add
push
fs
out
ljmp
shlb
pop
jnp
mov
mov
or
lods
push
xor
and
dec
cmp
bound
mov
xchg
popf
lcall
hlt
jl
repnz
jmp
xchg
pop
push
sarl
in
sub
jns
mov
sbb
test
pop
mov
rcl
popa
jmp
sub
test
mov
or
ljmp
cmp
adc
jbe
pop
push
mov
mov
jns
jmp
adc
pop
cltd
cmp
enter
rcl
sbb
or
call
adc
and
inc
out
or
popf
jecxz
nop
push
ret
jl
sbb
push
test
movsl
aaa
icebp
push
stc
popa
cmpsb
xchg
fidivl
mov
repnz
mov
or
jno
cmp
mov
sub
inc
cwtl
jle
cmpsl
push
cwtl
push
add
rcll
jae
xor
inc
xchg
jns
lds
lea
jno
aad
push
cltd
in
stos
pop
stc
add
or
jns
test
dec
fidivrl
push
jno
in
jne
iret
cmc
mov
cwtl
adc
xor
cwtl
push
scas
pop
mov
mov
icebp
jmp
xor
and
fdivrs
mov
jge
push
imul
jge
dec
mov
jae
ja
mov
ret
lret
adc
push
nop
or
pop
or
xchg
xchg
xor
scas
mov
enter
icebp
aaa
dec
dec
in
cmpsl
mov
nop
movsw
dec
in
mov
mov
sub
sub
and
or
test
stos
pop
mov
adc
jbe
dec
push
lods
sub
cli
loop
jp
je
test
shl
aaa
xor
add
sti
fidivs
mov
lock
js
sbbl
push
ss
int3
in
ljmp
test
sets
dec
mov
es
push
mov
xor
and
in
mov
lahf
into
in
gs
mov
mov
mov
lahf
cmp
lret
mov
cld
pusha
add
repz
fbld
bound
xchg
add
loopne
popf
push
imul
add
cmp
sahf
xorb
es
pushf
jne
call
jmp
je
dec
or
inc
cmp
fiaddl
cmp
xchg
lret
or
iret
out
sbb
adc
sahf
aad
mov
aam
pop
mov
pop
hlt
aad
sbb
mov
mov
pop
push
sbb
aaa
add
test
dec
pop
xchg
lcall
pop
inc
fisubrs
cmpsb
out
testl
sarl
ret
or
ljmp
les
mov
das
sahf
cwtl
loope
fldenv
int3
and
jns
ret
inc
icebp
jnp
add
stos
pop
scas
dec
fs
jo
addr16
cli
sbb
fldcw
scas
divb
xor
das
cmpsb
mov
mov
jo
icebp
nop
leave
stc
fisubl
push
loope
and
push
lods
loope
or
push
in
popf
fisttps
jge
inc
data16
inc
xor
mov
arpl
es
mov
mov
loop
cmp
jge
xchg
inc
cmpsl
inc
mov
mov
sbb
addr16
std
inc
ret
clc
sbb
cmp
arpl
hlt
and
cwtl
repnz
cmp
inc
jb
roll
cs
xlat
ret
push
push
out
dec
insb
out
lcall
pop
xor
shlb
sar
xchg
xor
leave
mov
or
jno
cld
fisttps
push
push
lods
fdivrl
fistpll
jno
mov
ret
inc
pop
movsb
in
mov
jnp
xchg
mov
loope
sub
xchg
adc
stos
mov
pusha
jns
pop
nop
sub
data16
aas
mov
xor
scas
sub
arpl
fwait
mov
and
mov
dec
cwtl
cmp
pop
pop
out
sbb
shlb
push
add
addr16
sbb
orb
push
std
test
fxch
nop
ret
sbb
xlat
lcall
mov
inc
sbb
roll
mov
push
es
inc
jmp
sub
in
mov
cmp
add
insl
icebp
adcl
test
jle
pop
fnstsw
ret
cld
adc
cmpsl
xchg
pop
cwtl
lock
jge
repnz
ss
mov
test
test
cmpsl
lahf
mov
outsl
mov
inc
jge
pop
xchg
mov
insl
ret
add
outsl
push
lret
in
test
sbb
cmp
jae
cmp
push
cmpsb
sbb
inc
test
aad
jecxz
push
mov
cmp
cmc
pop
dec
pop
lret
mov
stc
lods
movsl
add
sbb
push
aad
mov
jns
cmpxchg
in
addl
in
push
add
fs
lea
mov
jmp
aad
repz
mov
jbe
mov
xchg
imul
fcoms
sahf
mov
xlat
js
test
cmp
xchg
aas
and
cmp
jb,pt
addr16
imul
popa
mov
mov
mov
mov
adc
add
and
mov
cmp
andl
and
ds
xchg
add
jmp
in
loopne
in
int3
or
fstpt
mov
and
fsubs
fcoms
in
jmp
call
daa
jmp
movsb
push
and
and
sub
arpl
test
loope
cs
mov
mov
cmp
mov
fildl
or
jmp
cmp
lret
repz
jg
jno
shll
sub
pop
enter
push
xsaveopt
add
in
lret
jae
and
xor
sbbb
icebp
jae
daa
mov
lds
adc
das
mov
jae
jg
orb
and
or
je
ret
cmc
xchg
lea
bound
dec
mov
inc
and
insl
clc
cld
int
mov
sarb
pop
add
movsb
sti
imul
sbb
out
jmp
jmp
dec
add
int3
xchg
icebp
jne
les
push
enter
cltd
pop
add
add
inc
dec
jp
xor
push
and
cmpsl
fwait
ja
pop
xchg
pop
mov
call
mov
adc
testl
out
dec
cmpsl
and
out
ficoms
std
push
jg
stc
mov
fdivr
sti
sahf
jl
mov
insl
mov
adc
in
xor
push
sbb
jns
idiv
lea
clc
out
inc
rcrl
dec
add
mov
out
std
push
out
pushf
dec
int
pop
mov
clc
mov
xor
aad
or
xor
dec
inc
nop
xchg
mov
inc
push
or
movsb
loope
mov
jns
and
aaa
in
fisttps
inc
subl
dec
mov
adcb
ja
cli
in
outsb
out
dec
ljmp
fldenv
and
fidivs
sahf
mull
mov
add
adc
int3
pop
fstps
test
add
test
rorl
xlat
mov
mov
test
inc
movb
aam
negb
mov
stos
mov
loope
xchg
cmp
inc
daa
es
outsl
sbb
jl
insl
mov
in
cmp
xor
mov
movsl
icebp
loope
dec
inc
out
push
inc
xchg
arpl
dec
adc
ret
lahf
cltd
stc
aas
jg
sbb
mov
or
xchg
inc
push
clc
test
inc
sub
mov
jae
push
dec
movsl
stc
sub
filds
cltd
or
xor
and
xor
mov
cmp
inc
out
push
mov
sbbl
test
push
mov
adc
mov
dec
ljmp
sub
add
outsl
sub
clc
jbe
roll
adc
nop
pusha
ret
into
into
inc
ljmp
ja
fildl
mov
mov
mov
sbb
add
pop
cmp
cmp
lcall
sbbb
fsubl
xor
dec
les
xchg
jle
js
mov
push
sub
jle
jmp
sub
sbb
dec
shlb
push
cmpsb
xlat
stc
dec
mov
jns
gs
mov
add
lea
pop
push
imull
pop
dec
inc
cmpsb
cltd
movsl
pop
fdivp
hlt
sbb
mov
push
fcmovnb
dec
inc
jns
inc
jb
inc
pop
sbb
fldenv
clc
xchg
jb
pop
cmpsl
ret
and
decb
inc
clc
pusha
inc
cbtw
pushl
jecxz
clc
mov
cmc
mov
mov
or
lcall
aad
sbb
test
lcall
clc
mov
aam
push
xchg
xchg
mov
mov
sub
dec
orb
les
pop
jae
andl
or
mov
dec
fwait
test
popa
inc
xchg
inc
xchg
int
mov
stos
fs
mov
pop
dec
sub
je
jle
cmpsb
mov
out
push
mov
jno
insb
lds
xchg
push
and
xchg
pop
fisttpl
jne
or
in
add
pusha
pushf
test
mov
insb
xchg
movsl
jo
or
xchg
and
outsb
mov
mov
mov
lods
test
pop
add
xchg
mov
jbe
outsb
aaa
pop
xchg
push
xor
cwtl
sub
ljmp
movsb
sbb
inc
push
sbb
divl
lahf
cltd
lcall
cmp
push
and
ljmp
or
pop
cmpsb
pop
mov
ret
lcall
mov
sub
repnz
cmp
pop
push
nop
sub
sub
sarb
ds
fstps
mov
popa
dec
daa
call
scas
mov
xchg
sbb
pop
pop
sub
out
and
or
mov
shrb
jbe
dec
push
das
sbb
mov
clc
mov
pop
fnstenv
mov
push
iret
out
dec
adc
jle
sbb
movb
fndisi(8087
mov
sbb
je,pn
in
lcall
rorl
sub
adc
adc
into
sti
enter
es
lcall
outsl
xchg
pop
aaa
inc
cli
int
scas
aas
gs
mulb
sub
or
fcoml
adc
lcall
jmp
jbe
test
ss
popf
rcrl
ljmp
mov
mov
cmp
mov
lds
push
repnz
adc
testl
or
nop
dec
aad
jmp
xor
add
cmp
inc
test
cs
addr16
and
icebp
sub
ret
cmpsl
ljmp
mov
push
jmp
pop
repz
fidivrs
call
push
enter
sbb
loope
outsl
jmp
mov
xor
add
sbbb
in
scas
xchg
daa
movsb
popf
cs
sub
add
mov
cmc
add
and
pop
fwait
xchg
int
sar
popf
sub
adc
pop
pop
fdivl
loop
loop
xor
icebp
mov
push
stc
dec
call
fcmovne
mov
add
aas
xchg
dec
push
cmpsl
lahf
test
pop
xchg
inc
xbegin
inc
sub
sahf
inc
clc
fidivs
sbb
sbbb
sti
jmpw
lds
sarl
mov
stos
imul
mov
divl
xor
es
and
test
into
repnz
xorb
cld
scas
xor
out
sbb
xchg
insl
jge
test
test
pushf
lds
mov
or
scas
popf
out
mov
xchg
add
cmp
les
shl
cli
dec
out
mov
icebp
xchg
fsts
xchg
push
int3
mov
cwtl
loope
xchg
vpshuflw
or
leave
inc
loop
push
pop
jnp
inc
xchg
mov
add
fimull
aaa
ret
inc
pop
scas
adc
xor
adc
sbb
jmp
mov
in
mov
push
xor
cmp
mov
lret
repz
cmpsl
push
sbb
iret
insl
pop
pop
sub
lea
adc
aaa
xor
cmpsb
dec
test
fcomi
adc
cwtl
lods
add
call
mov
dec
mov
xchg
mov
xchg
add
enter
xor
stos
int
xor
pop
xor
cmp
pusha
cmpsl
fs
xchg
dec
shlb
inc
push
sbb
cmpsb
ret
dec
outsl
ret
roll
inc
jo
push
fstpl
data16
test
dec
or
or
push
cwtl
xchg
iret
adc
aad
mov
ss
cltd
inc
mov
mull
sbb
lea
inc
and
lcall
inc
lods
mov
pop
inc
jb
jno
js
dec
jp
lret
sbb
enter
add
pop
jno
aam
fwait
cmp
mov
pop
push
sbb
sub
into
pop
adc
xchg
xlat
orb
mov
sbb
arpl
adc
jb
push
shll
push
jecxz
mov
cmp
mov
sub
in
or
pop
aaa
push
das
sub
add
test
add
mov
leave
out
mov
addl
into
in
int3
out
sbb
dec
xor
and
or
out
ret
subb
inc
sbb
pop
bndstx
push
cmp
or
std
jae
push
shll
mov
fstps
pushl
int3
mov
add
mov
inc
rolb
add
mov
mov
cmpsl
cs
subl
mov
dec
rcrl
iret
fcompl
mov
sahf
stos
stc
test
sbb
mov
cmovae
or
pop
sub
inc
outsb
loopne
std
int3
xor
adc
mov
cld
xor
je
mov
mov
fidivrl
push
mov
mov
int
popa
ret
mov
lcall
jge
aas
push
gs
and
mov
out
test
jl
lods
mov
push
jo
and
movsb
out
jmp
lret
in
mov
cld
jae
into
jns
lret
push
int3
push
mov
sbb
or
bound
adc
mov
cltd
adc
pusha
arpl
adc
shlb
scas
icebp
xchg
inc
test
imul
adc
insb
clc
mov
mov
inc
add
pop
pop
xor
or
fcompl
cld
fcomip
into
test
mov
adc
cltd
xchg
call
call
es
inc
or
pop
xchg
mov
int
nop
mov
rorb
fs
mov
mov
repz
adc
xor
loope
mov
or
movsl
rorl
int
jbe
test
and
mov
mov
lods
test
movsl
mov
imul
mov
pop
and
and
shl
ds
sub
mov
jne
mov
stos
mov
mov
adc
or
inc
add
mov
fwait
sbbl
dec
and
aas
movsb
and
pop
mov
pop
loop
mov
test
fists
jbe
and
shrl
mov
jl
xchg
mov
into
push
or
xchg
incb
test
pop
or
push
int
clc
mov
scas
and
mov
or
mov
stc
jb
fnstcw
dec
adc
add
mov
repz
movsl
cmp
aaa
mov
stos
pop
daa
aas
mov
inc
ret
cmp
sub
pop
aad
jle
and
sub
aam
pop
jle
mov
or
bnd
sbb
hlt
xchg
mov
pop
rcrb
js
xchg
cmp
jb
mov
aam
xor
add
fcmovne
es
push
mulb
subl
lods
cmp
shl
pop
add
out
outsl
repz
push
sub
mov
ss
and
cmp
or
ss
pop
js
icebp
pop
jae
enter
lahf
insl
inc
lods
inc
das
lret
sub
push
jne
inc
scas
imul
in
and
mov
sub
out
shlb
push
or
adc
es
mov
ret
adc
rorl
dec
negb
fs
adc
push
inc
and
stos
cmp
jle
or
ret
ret
jb
lods
or
lcall
push
jmp
pusha
xlat
popa
mov
adcl
and
inc
rorl
mov
lret
fiadds
inc
lret
int3
sbb
aaa
orb
or
sbb
push
sub
data16
push
sbb
sub
mov
shlb
or
dec
lock
dec
into
xlat
inc
adc
xor
ret
insb
sub
les
and
cltd
aad
dec
sahf
ss
mov
in
scas
hlt
ja
push
bound
or
ja
push
cmp
lret
leave
mov
add
test
mov
roll
inc
add
movsb
int
inc
sbb
loop
sbb
mov
push
dec
sbb
rorb
xor
rcr
jecxz
fsubl
movsl
ret
jns
cmp
insb
dec
icebp
jb
lcall
push
ss
inc
les
jnp
jge
cmp
sbb
out
orl
loop
es
repnz
imul
jp
pop
out
dec
jmp
test
jns
jg
add
icebp
ret
lahf
hlt
loopne
mov
mov
movsl
mov
jle
addr16
dec
cmpsb
cmp
jns
pop
aaa
mov
out
mov
ret
mov
mull
inc
aad
lea
xor
fs
daa
xchg
pushf
sbb
pop
xor
sub
lds
stos
dec
in
pop
jbe
loop
xor
aad
aam
add
and
xchg
or
push
xchg
mull
or
imul
enter
test
nop
xor
andb
aam
int3
arpl
fcom
mov
and
pop
cs
or
out
xchg
mov
jp
jecxz
sarl
cmpsl
jmp
and
pop
xor
and
shll
dec
push
cmp
sahf
pop
aaa
les
loop
lahf
push
jecxz
cmp
daa
aaa
popa
or
fs
xor
cltd
xorl
pop
js
add
xchg
add
pop
sbb
pop
pop
enter
or
out
xchg
int
pop
test
add
scas
mov
mov
pop
add
cwtl
jmp
lock
rcll
sahf
mov
outsb
push
inc
mov
shr
xchg
roll
mov
mov
incl
js
fstp
xor
xor
inc
popa
mov
cmp
fcomip
js
cli
sti
jne
mov
cmpsl
inc
gs
mov
adc
mov
push
xchg
dec
jne
addl
repz
xchg
mov
clc
pop
cmp
xchg
shr
pushf
pop
dec
aad
addr16
inc
add
mov
lds
xchg
aas
pop
in
mov
pop
xchg
push
sahf
rcrl
enter
mov
cmp
ljmp
lcall
cli
mov
into
ret
sub
add
scas
lea
push
out
test
jg
int
test
xor
outsb
fnstsw
pop
push
xchg
adc
mulb
gs
fs
push
and
subl
xchg
push
cmp
es
daa
mov
push
sbb
or
or
mov
cmpsl
or
std
and
dec
mov
jb
outsb
ljmp
cmp
cmc
jmp
push
insb
ret
sbb
pop
mov
jmp
ja
jo
scas
xor
fstpt
jl
cmc
jl
lods
mov
sbb
dec
push
mov
out
pop
out
test
clc
mov
mov
icebp
and
xchg
arpl
xchg
inc
loop
bound
or
imul
inc
dec
push
call
cmc
mov
xor
xor
push
jge
mov
pop
icebp
adcb
add
add
push
adc
adc
push
sbb
outsb
add
and
xor
insl
test
xchg
rcl
loope
clc
mov
roll
cli
pop
cld
inc
mov
sub
jle
sub
jle
outsl
pusha
jnp
xchg
pop
nop
test
inc
sub
dec
inc
test
das
ss
lret
add
fstps
aaa
fstps
in
xchg
push
loop
or
stos
inc
repz
pusha
jle
jmp
mov
movsl
pop
mov
push
inc
sti
repnz
fcmovb
pop
mov
adc
inc
in
lods
sbb
das
push
cltd
push
xor
ds
leave
ds
xorb
movsb
push
fadds
mov
mov
jg
mov
scas
dec
mov
and
call
sub
inc
in
jae
inc
pop
xchg
loope
nop
loope
inc
adc
aam
cmp
call
or
fimull
xchg
aam
jb
fisttps
mov
fldl
fs
cli
dec
cld
mull
nop
xchg
popf
mov
and
out
sbb
sub
xchg
push
and
adc
pop
and
insl
jnp
adcb
inc
cmp
jnp
notb
pop
jbe
cld
xor
pushf
cwtl
inc
push
cmpsb
adc
out
js
nop
mov
je
js
into
lcall
mov
faddl
dec
push
scas
cmp
hlt
mov
cmp
push
in
stos
pop
ficoml
jnp
outsl
hlt
add
scas
sbb
or
stos
inc
test
lret
into
mov
pop
pop
outsb
pop
andb
cmpsl
dec
sbb
mov
pop
mov
dec
push
enter
das
mov
inc
pushf
mov
adc
sub
sbb
jno
int
imul
xor
xor
pop
dec
sbb
jmp
xchg
push
movsb
push
pushl
inc
daa
nop
outsb
aad
jbe
inc
inc
jnp
sub
inc
sbb
fbld
cmpsl
cld
and
cmp
xchg
loop
push
xchg
test
popf
xchg
out
shrl
or
dec
inc
out
aam
cmpsb
sbb
dec
cmp
push
call
and
int3
pop
sub
jmp
scas
fxch
loope
mov
cmpsl
in
fisubs
leave
daa
xchg
lods
mov
in
popa
cmc
mov
loopne
lret
jmp
push
inc
mov
or
daa
fsubrs
add
dec
push
out
lods
push
adc
ja
adc
pop
aaa
add
or
test
jmp
aam
and
inc
es
add
sbb
mov
test
daa
mov
push
inc
pop
clc
sbb
popa
test
ss
loop
clc
inc
push
mov
inc
adc
mov
sub
and
subb
decb
enter
insb
or
adc
ret
dec
pop
cmpsl
out
daa
lods
test
sub
add
xchg
add
cmpsb
nop
lcall
mov
cwtl
add
rcrl
data16
mov
imulb
inc
xor
jl
cli
push
loope
mov
data16
pop
les
pop
mov
xchg
or
aas
dec
movsl
rclb
iret
inc
mov
ja
adc
pop
adc
and
mov
pop
xchg
ret
aaa
pop
and
push
fsts
cmc
inc
mov
push
lahf
push
sar
outsl
das
cmp
adc
fisubrl
jg
filds
jae
flds
outsl
fidivrs
inc
jns
jne
int
repz
ja
popa
cmp
rorl
cmc
sub
lock
daa
outsl
adc
push
mov
les
sbb
ja
mov
mov
push
shll
inc
insb
inc
shrb
push
fisubrs
jo
lods
sbb
sub
mov
lock
push
in
jge
dec
popa
jne
xor
and
loop
addr16
mov
push
mov
xor
in
mov
lahf
int3
dec
sbb
movsl
inc
xor
fisubrl
mov
es
lock
nop
into
pop
add
jb
rcll
sub
ret
push
add
lods
mov
sub
xor
xchg
sub
fbld
cwtl
sub
pop
push
dec
bnd
mov
and
mov
loop
mov
cmc
ljmp
call
pop
outsb
cmpsb
sbb
mov
add
cmp
mov
popf
mov
loopne
or
das
xlat
std
push
inc
sbb
scas
jae
insl
sbb
sbb
hlt
insl
xchg
into
scas
scas
ss
outsb
or
sahf
mov
push
fwait
sarl
mov
inc
sbb
cwtl
into
pop
jle
cmp
pusha
push
dec
pusha
xor
bound
push
orb
mov
xchg
and
mov
shrl
lods
cmp
jnp
arpl
jmp
stc
arpl
sti
js
mov
xor
xor
jnp
insl
stc
int
and
jl
daa
sub
add
fwait
mov
pop
daa
inc
in
mov
adc
int3
inc
popf
jge
cmp
add
dec
insb
inc
xlat
pop
fisubl
inc
dec
sti
aam
call
loop
testl
xor
add
xor
test
std
rcrb
pop
lods
fsubl
aaa
push
push
xor
dec
add
adc
adc
xor
into
cmpsb
mov
adc
test
cmp
test
movsl
ja
clc
and
in
cs
sbb
push
xor
sti
lret
add
insl
push
push
mov
sub
xlat
dec
and
jp
xchg
shrl
push
rolb
iret
jmp
pop
mov
leave
lock
in
ret
mov
xchg
icebp
xchg
pop
and
lahf
aam
xchg
dec
std
mov
mov
stc
jge
mov
cmp
inc
jle
shll
push
imul
xchg
cmpsb
out
mov
mov
out
sub
dec
pop
sbb
aaa
aaa
mov
cli
dec
stc
pop
insl
jle
test
outsl
xchg
movsb
dec
out
adc
inc
leave
xor
aam
lret
jl
or
and
mov
sub
sbb
shll
mov
xor
mov
ja
cmp
jge
in
imul
int
shll
hlt
mov
ret
and
jl
mov
shrb
out
imul
or
sbb
pop
pop
cltd
test
xchg
pop
test
daa
daa
dec
adc
sub
push
add
xchg
imul
fldl
xchg
stos
mov
lods
icebp
cmpsl
in
or
mov
bound
mov
inc
xchg
icebp
pop
mov
test
xchg
lds
in
sub
pusha
push
sbb
jge
mov
xor
shrb
mov
scas
into
sbb
pop
ja
ret
insb
adc
lret
add
xchg
inc
push
inc
test
jmp
xorb
sbb
pushf
jmp
mov
xlat
mov
test
xor
xchg
push
and
cwtl
out
sub
push
jmp
shrl
xchg
repz
inc
sbb
xchg
pop
int
mov
inc
or
icebp
inc
ss
pop
jnp
xchg
out
pop
xor
arpl
add
pop
icebp
xorl
mov
scas
dec
mov
test
inc
jmp
inc
add
orl
xchg
dec
pop
push
fiaddl
sahf
sub
fdiv
fidivrl
jmp
cmp
xor
jb
xchg
fucomip
out
into
and
jg
pop
lods
or
cwtl
imul
sarb
repz
in
daa
sbb
mov
xor
lods
sub
mov
push
int
sbb
and
insl
movsb
cmpsb
mov
in
out
fcomps
or
sbb
sub
insb
mov
lahf
mov
mov
mov
pop
fsubl
fdivp
or
ficompl
xor
jbe
rorl
xchg
adc
pop
mov
setge
popa
pop
jmp
push
push
cmp
jno
es
xchg
scas
xlat
orb
test
mov
pop
inc
push
daa
xchg
or
mov
adc
fwait
enter
xor
popa
stos
push
addr16
test
mov
mov
or
xchg
mov
insb
mov
pushf
xor
out
mov
push
or
rcll
xlat
ljmp
popf
loopne
inc
mov
sub
mov
popa
xor
adc
push
cmp
js
mov
mov
adc
or
hlt
daa
mov
jle
scas
adc
inc
gs
test
adc
inc
imul
mov
adc
sub
fdivl
mov
mov
cmp
xor
pushf
xchg
or
stos
cmpsb
add
in
pop
ja
pop
push
mov
mov
lret
jno
xor
mov
mov
push
je
ficomps
out
sub
mov
adc
bound
jl
int
negl
inc
pop
outsb
jno
dec
pop
sbb
inc
gs
add
and
mov
pop
jo
dec
cltd
inc
jge
mov
divl
ret
icebp
mov
xchg
lret
cmpsl
and
cmp
push
imul
push
mov
jmp
hlt
out
pop
jo
mov
mov
push
inc
adc
loop
test
cwtl
repnz
push
nop
and
xchg
inc
add
shr
push
cmc
loopne
sub
fiaddl
lds
aad
jns
cmpsl
jg
sbb
push
sarb
xor
and
mov
imul
push
outsl
sti
test
stos
jmp
jae
pop
mov
pop
aaa
dec
sbb
cmp
add
push
mov
fxch
repz
fwait
or
jmp
fnstsw
xor
movsb
sti
adcl
jo
into
fstp
mov
jnp
lods
mov
rcrl
int
jbe
xor
push
or
sbb
mov
xor
mov
lds
xchg
jg
rcr
loopne
nop
sbb
jp
jnp
js
mov
repz
add
lea
mov
and
mov
mov
jg
add
movsb
pop
out
pop
pop
loop
dec
mov
mov
mov
cmpsb
or
rcrl
xchg
push
push
xchg
ret
lcall
cli
rorb
xor
cmp
adc
jg
stc
mov
fcos
imul
lahf
lret
test
pop
sub
mov
test
cld
lds
test
add
lods
sahf
sbb
fcmovbe
xchg
pop
fnsave
int
pushf
jb
or
mov
mov
negl
test
aas
xchg
pop
aaa
ret
int3
cmp
std
push
cmpsl
mov
xchg
mov
negb
mov
int3
insb
cmp
xlat
arpl
jno
jl
icebp
scas
mov
xchg
fs
loope
aad
dec
mov
mov
fdivs
ficomps
fcmovne
aam
lret
add
fadd
lcall
sbb
lds
xchg
insl
sarl
leave
cmp
push
mov
xchg
mov
jo
pop
call
jns
sbb
push
and
cmc
jge
push
ja
test
sbb
lret
aaa
cmp
sbb
test
mov
and
and
add
cmpsb
es
mov
add
repnz
mov
ret
fiadds
and
cs
je
xchg
mov
xor
icebp
mov
inc
dec
fstps
mov
xchg
push
lods
leave
jb
loope
jne
and
lock
popa
sub
nop
lcall
or
mov
mov
add
rorl
mov
jb
fldcw
cmp
es
lea
adc
lods
sahf
repnz
sub
mov
jmp
inc
repnz
adc
xlat
sbb
cld
ficoml
outsb
mov
cmpsb
push
clc
stos
xchg
jecxz
cli
pushf
scas
mov
cmp
movl
jmp
sarl
pop
mov
lods
fadds
push
enter
leave
pop
iret
es
ficomps
mov
mov
stos
bound
nop
xchg
aaa
hlt
sbb
cltd
push
cs
jp
adc
gs
imulb
outsl
adc
mov
cmp
outsb
test
mov
lret
adc
enter
cs
fisubl
dec
js
ficompl
test
test
dec
int
cld
dec
or
leave
xor
and
fucomi
mov
test
mov
mov
scas
mov
fs
xchg
mov
and
and
cs
leave
insl
test
or
add
test
fldcw
scas
daa
repnz
pushf
lock
cmp
bound
in
imul
xlat
dec
jb
iret
mov
fucomp
push
loop
in
mov
inc
test
clc
cld
mov
xchg
int3
ja
mov
ret
lds
and
add
insl
or
das
jp
orb
test
pop
pop
cs
fnstcw
mov
push
loope
hlt
xchg
mov
adc
jno
sub
lods
stos
sbb
mov
scas
rolb
adc
cmpsb
scas
negl
inc
popa
xor
mov
das
cmp
adc
mov
jle
movsl
lock
imul
add
ljmp
mov
daa
jecxz
leave
xchg
jg
jg
gs
jo
cli
mov
push
jno
cmp
inc
jno
jecxz
lock
ret
cmpsl
or
insl
inc
mov
xchg
sub
je
add
in
in
jg
daa
mov
pop
pusha
pop
cli
xchg
hlt
sar
add
push
popf
add
mov
and
movsl
sbb
or
mov
mov
data16
js
xor
and
scas
dec
fwait
lods
mov
xchg
xchg
loopne
je
cs
add
or
int3
sub
fstpl
ss
cmp
mov
enter
aam
pop
push
cmc
aaa
sbb
div
push
arpl
pop
sub
xchg
ret
mov
xchg
inc
dec
jp
shl
push
popa
and
mov
nop
or
xchg
and
out
gs
imul
fnstenv
push
jge
cmp
mov
jns
std
dec
out
mov
jg
mov
gs
je
ret
test
stos
in
xchg
hlt
fldt
pop
jecxz
jp
in
es
pop
sbb
outsl
push
fs
pop
xor
ja
xor
mov
lret
int
lret
pop
rol
or
aam
lret
mov
xadd
or
mov
mov
stos
aas
push
fisttps
cmpsb
pop
repz
lock
test
lods
or
add
mov
xchg
dec
or
xor
sub
nop
outsl
mov
mov
dec
inc
dec
lret
sub
lea
mov
mov
jo
xchg
adc
lods
adc
jb
xor
push
nop
loope
cli
jno
cs
xor
in
or
dec
mov
mov
insl
sbb
or
mov
sub
sub
into
xchg
cmpsl
movsb
push
js
lea
aaa
daa
mov
cmp
idiv
and
and
bound
xchg
in
pop
sahf
loope
mov
into
imul
and
icebp
int3
out
xchg
iret
adc
xor
int
xchg
rorb
sub
clc
mov
mov
cmp
inc
push
xchg
xor
or
loope
dec
fcomp
dec
mov
mov
inc
nop
or
jne
cwtl
and
pusha
xchg
mov
aad
pop
out
pusha
sahf
lds
add
or
adc
cmc
pop
sub
pop
pushl
cs
sub
data16
jno
inc
push
xchg
xor
mov
fwait
add
and
cwtl
cmp
mov
imul
pop
das
cwtl
pusha
cmp
push
neg
mov
xlat
inc
or
jbe
insb
or
loopne
or
jecxz
inc
aaa
sahf
fildl
xor
sbb
jns
sub
mov
pusha
push
enter
and
inc
jnp
js
lahf
xchg
mov
sbb
cmp
xchg
addr16
hlt
js
mov
test
imul
mov
xchg
dec
push
mov
xlat
push
mov
lods
pop
cmp
mov
or
push
push
push
sub
aam
sti
into
stos
or
adc
mov
xchg
inc
scas
or
inc
xor
dec
pop
mov
int3
lcall
xor
pop
push
or
xchg
sub
push
das
push
and
push
push
mov
bound
xor
lods
add
mov
aaa
and
aas
xor
cmp
jle
push
sar
mov
and
dec
mov
or
and
cmp
sub
xchg
inc
stc
sub
dec
mov
or
lock
inc
adc
adc
pusha
sbb
xchg
pushf
into
ds
pop
or
dec
aas
cltd
push
test
popf
adc
mov
dec
jle
jae
fnstcw
imul
loop
stos
icebp
mov
data16
fcmovb
pop
pop
pop
push
cmp
shr
mov
adc
int
movsb
cld
aaa
imul
dec
xchg
js
loope
mov
stc
add
movsl
ficomps
jne
mov
pop
das
add
sbb
in
bound
das
xor
mov
push
or
jle
subb
pop
sub
loop
das
sbb
cmc
dec
push
rorl
pushaw
js
int
push
test
addl
test
adc
jb
lods
cmp
repz
mov
bound
sti
test
inc
or
daa
dec
lret
jp
gs
mov
fmuls
negl
es
test
cmpb
xor
int3
mov
iret
jl
imulb
mov
sbb
push
and
lock
adc
popf
inc
pusha
popa
cld
lock
jge
jmp
data16
out
or
sub
dec
rcll
out
inc
out
adc
int3
and
aas
iret
jp
push
arpl
push
loop
pop
jp
lret
push
xchg
lret
jnp
outsl
mov
mov
js
out
fwait
cld
rorb
outsl
aaa
popa
mul
cld
imul
adc
dec
add
sbb
imul
shr
dec
mov
mov
icebp
jecxz
cli
int3
jnp
sub
fxch
jae
repz
cwtl
orl
pop
rolb
add
xchg
sbb
in
sbb
std
cmp
es
sub
fildl
test
mov
pop
popa
cmp
rcrb
sarb
cmc
scas
dec
andnps
ret
lds
xchg
sub
notb
dec
and
mulb
imul
jle
mov
xor
cmpsb
out
mov
in
hlt
cli
jg,pt
fimuls
dec
mov
popa
sbb
and
leave
es
mov
dec
mov
jbe
or
js
xchg
add
and
push
mov
cmpl
mov
movsl
mov
jnp
cmp
adc
iret
xchg
jmp
mov
xor
enter
jle
push
stos
loop
push
adc
adc
and
adc
inc
mov
aaa
push
xor
roll
adc
mov
cmp
sub
xchg
push
sub
and
adc
mov
mov
jle
insl
aam
pop
jne
icebp
int
push
xchg
pushw
cmp
jl
nop
popa
sub
inc
in
loopne
aaa
jb
addr16
dec
sbb
pushf
divb
iret
int3
lods
mov
pop
enter
out
idivl
into
insb
dec
pop
mov
sub
xor
int3
dec
mov
xor
pop
daa
mov
adc
js
shrb
lcall
inc
cmp
xorb
pop
cmp
inc
test
push
push
mov
jno
cmpsb
pop
sarl
xchg
scas
pop
sbb
mov
and
xchg
imul
xlat
cmpsl
call
dec
xor
sub
xor
and
mov
out
in
clc
and
or
sub
faddl
les
cmp
in
inc
fsubrs
or
add
ret
push
lock
jno
inc
iret
in
and
int
test
adc
xor
add
mov
cmpsb
movsl
loopne
data16
icebp
fdiv
inc
dec
xchg
aaa
cmc
xchg
sbb
orb
mov
push
xlat
in
repnz
pop
sub
jge
cmc
cs
mov
loope
lcall
mov
push
lods
inc
mov
cmpsl
sbb
jmp
imul
sub
or
and
call
in
das
sbb
arpl
pushf
leave
in
sbb
pop
mov
mov
andb
mov
sub
ret
xlat
jp
lcall
and
mov
sbb
and
lods
jns
adcl
sub
in
or
call
push
btr
push
sbb
xlat
dec
dec
push
jmp
jne
pop
clc
mov
pop
jmp
aas
int
xlat
pop
mov
test
sbbl
mov
test
add
sub
fnsave
xchg
aas
cmp
sub
sub
fisttpl
sub
lcall
and
jae
inc
test
cmp
test
rorb
mov
adc
loopne
cmp
dec
sbb
mov
test
in
cmp
inc
mov
sbb
and
mov
xchg
jnp
inc
and
xchg
cmc
nop
mov
mov
data16
xchg
incl
movsl
movsl
fsubl
jns
xchg
xchg
aad
repz
mov
rorl
scas
or
jne
cmp
xor
mov
rcl
push
xor
mov
mov
outsb
rorb
add
repnz
call
movsb
sub
lret
or
sarb
lea
fwait
pop
push
outsb
and
and
sbb
sub
adc
jmp
pop
xchg
xor
pop
ss
fld
push
cli
cltd
push
outsb
dec
test
ds
insb
push
mov
xor
test
jmp
mov
movsb
stos
cmpsb
cmp
mov
in
shll
cmp
movnti
dec
mov
flds
movsl
pop
test
pop
aam
add
sub
add
rorb
into
int3
pop
adc
sahf
shll
lods
mov
ss
push
cmp
pop
adcb
out
shrb
or
loopne
xchg
xor
jno
ss
dec
test
xchg
imul
shrb
fucomip
mov
mov
jp
sbb
mov
test
adc
rdpmc
push
xlat
data16
ds
jnp
xchg
xchg
adc
add
adc
arpl
xchg
sahf
push
push
push
push
loope
shll
dec
sbb
lahf
stc
push
mov
or
insl
xchg
and
pusha
jb
adc
repz
dec
repnz
jg
popa
bnd
sub
push
ds
into
add
sbb
mov
sub
or
fsubrs
dec
push
push
add
std
je
mov
pop
mov
or
sbb
pop
ficoml
gs
xorw
inc
popw
pusha
sub
pop
add
sbb
sbbw
adc
jmp
into
dec
xchg
test
popf
add
jge
shl
cmpsl
dec
jmp
es
sbb
push
ret
ret
lcall
inc
neg
test
mov
push
mov
dec
aam
loop
call
ficomps
jns
sub
cld
lock
mov
mov
es
shll
std
cmp
xchg
cmpb
outsb
inc
add
stos
add
pusha
rolb
movsl
subb
mov
jmp
jbe
mov
ljmp
push
mov
popa
xchg
pop
imul
cmp
or
or
and
or
inc
orb
cld
mov
out
scas
xchg
and
ja
or
mov
mov
jne
js
loop
nop
and
mov
lea
dec
js
imul
ja
fsubrs
outsb
lret
lret
jmp
andb
les
xchg
repz
sbb
test
nop
outsl
in
adcb
sarb
iret
leave
scas
sub
cmp
xor
clc
repz
scas
mov
and
adcl
stc
ret
mov
lock
je
mov
jb
sti
xor
in
fistps
negl
shll
lahf
repz
in
or
and
dec
push
loopne
inc
pop
ljmp
shlb
push
lret
xor
xlat
inc
mov
test
movsb
imul
mov
leave
jecxz
je
mov
shr
xchg
fisubs
jl
enter
or
xchg
loop
cwtl
jno
inc
cwtl
cltd
fnstenv
inc
fists
iret
std
add
cmpsb
aad
jne
call
add
ret
addr16
icebp
iret
push
stos
mov
sbb
jno
mov
jnp
push
dec
and
enter
push
shll
sub
mov
inc
add
mov
sub
popf
pop
std
xor
mov
mov
add
xchg
jnp
icebp
xchg
inc
adc
sub
hlt
sbb
fistpll
in
lock
sarb
and
cs
jno
adc
jns
xchg
sbb
jb
jns,pn
rcl
mov
mov
jo
xchg
mov
mov
or
mov
pop
pop
and
jmp
btr
div
push
sub
ret
in
xchg
mov
nop
push
cmp
mov
pop
jae
out
or
shrl
inc
xor
je
pop
hlt
fwait
xchg
push
sbb
scas
xor
sarb
and
pop
jo
loop
adc
mov
rcr
mov
xchg
cwtl
mov
mov
sti
arpl
loop
ss
jo
lods
inc
outsl
stos
mov
ret
sti
xor
xor
mov
or
xorl
pusha
stc
insl
and
xchg
mov
sub
outsl
shlb
out
jge
add
stos
in
dec
xchg
stc
lds
jnp
jno
or
adc
mov
data16
sbb
sbb
cs
out
jge
mov
insl
lahf
push
popa
jmp
push
std
fsubr
popf
das
jg
jle
stos
in
pushf
inc
loopne
jbe
pushf
cmp
enter
filds
sub
push
imul
add
in
xor
bound
sahf
insb
aas
pop
xor
sub
hlt
fisubrl
shll
out
mov
jb
sbb
or
std
push
out
add
dec
cli
xchg
push
jae
test
pusha
jecxz
and
mov
outsl
loop
mov
dec
lea
popf
subl
sub
arpl
jbe
mov
leave
ss
xchg
dec
hlt
mov
mov
shll
cbtw
jl
pop
je
out
add
jl
adc
sbb
rorl
pop
or
sbb
outsl
lcall
iret
jb
jne
dec
mov
or
xlat
insb
mov
or
outsb
aaa
push
mov
cmp
repnz
jns
push
jge
mov
jae
xor
fsub
mov
sbb
jmp
in
inc
or
leave
cmp
popa
nop
or
add
mov
fnstsw
sub
adc
orl
add
pop
mov
jno
mov
test
repnz
dec
xchg
or
inc
or
movsb
jbe
mov
movsl
and
xchg
sbb
push
or
pop
fisttpl
shr
and
jge
add
les
out
fistpll
cmc
push
inc
icebp
test
fidivl
clc
mov
into
insl
into
inc
jne
and
jmp
dec
sbb
sub
push
or
popf
mov
push
mov
je
pop
jnp
xor
test
sub
cmp
dec
iret
jge
aas
stos
enter
push
popa
icebp
das
sti
mov
mov
mov
shlb
enter
out
and
jno,pn
jecxz
adc
sub
mov
lret
push
nop
out
and
pop
jns
daa
mov
addl
leave
xchg
push
fyl2xp1
adc
xchg
les
jp
fsubl
insl
sub
lods
lock
add
cmpsb
sti
mov
fdivr
cltd
add
dec
xchg
sbb
jbe
popa
push
cmp
out
xchg
xchg
pop
ss
mov
or
cltd
nop
and
jl
pop
fdivs
xchg
xchg
aam
mov
das
stos
jecxz
bound
cld
mov
add
xchg
lret
shlb
roll
lahf
xchg
xor
aas
arpl
lret
sub
outsb
xchg
jo
pop
outsb
jl
hlt
lahf
movsb
cmpsb
mov
xor
popf
jecxz
jle
and
or
jno
pop
aaa
fisubrs
sbb
mov
pop
popf
jnp
inc
mov
pop
cmp
stos
dec
arpl
xchg
stc
push
mov
popa
mov
mov
jnp
fsts
imul
mov
je
pop
adc
stos
jmp
pop
loop
mov
xchg
hlt
cmpsl
push
pop
xor
sub
std
cli
lods
mov
adc
jle
add
or
je
mov
out
pop
lret
jmp
inc
sbbb
and
xor
add
lds
aad
add
leave
jns
sahf
and
pop
mov
and
insb
jns
cmp
rclb
fadds
xchg
sub
push
mov
inc
xchg
mov
in
stos
mov
add
scas
dec
push
mov
cwtl
icebp
fcmovnbe
push
idivl
mov
pop
inc
andb
leave
cmp
dec
int3
xchg
mov
rcrb
dec
pushf
aaa
xchg
mov
nop
and
orl
inc
fcmovnbe
jg
mov
daa
dec
inc
scas
jno
jns
call
or
lods
mov
push
cmpsl
sahf
jae
test
fisttps
jne
jecxz
mov
and
push
aas
adc
pop
mov
rcrb
fcoml
mov
adc
mov
into
mov
mov
outsl
and
mov
mov
clc
push
popa
flds
daa
mov
jle
pop
popa
ret
int
loopne
and
in
cmp
pop
pop
aam
repz
mov
je
inc
sbb
outsb
mov
xor
mov
lods
pop
insb
shlb
inc
mov
ljmp
scas
shl
insb
fstpt
cld
daa
pop
jmp
pusha
call
push
inc
xchg
cmp
mov
push
hlt
fisttpl
cld
insb
xchg
xchg
rep
cli
sti
lds
nop
mov
movsb
inc
bound
int3
mov
sti
xchg
mov
or
xchg
mov
pop
stos
lahf
adc
jmp
xchg
add
lret
cmc
fwait
adc
in
js
jne
bound
pusha
in
incb
out
hlt
mov
push
cs
push
mov
mov
adcl
sub
and
push
iret
hlt
mov
add
sbb
jb
and
xchg
ja
fwait
or
test
inc
shr
or
jbe
jle
fprem
add
outsl
shll
mov
mov
in
imul
sub
insb
sub
ss
sbbb
cmc
loope
in
movb
lcall
push
and
push
test
push
insl
push
out
ja
xor
xchg
pop
cmpsb
adc
mov
pop
arpl
jae
cltd
sahf
jbe
cmp
es
push
mov
xor
mov
fistl
fstpt
dec
and
mov
aaa
inc
xchg
cmp
xlat
jns
shrb
fisttpll
mov
fstpl
lcall
add
xchg
nop
add
xchg
push
fidivl
stos
inc
mov
stos
lock
repnz
rcll
sbb
addr16
lahf
mov
mov
mov
fstl
sbbb
jecxz
inc
dec
clc
and
cmp
orb
mov
mov
jg
jge
fnsave
pop
pop
and
xchg
inc
inc
mov
xor
bound
push
ret
repnz
push
push
jmp
xchg
inc
sbb
sbb
pop
jno
push
xchg
fisubl
out
js
jb
icebp
sub
subl
inc
insb
jecxz
or
addl
xor
push
xor
movsb
int3
decl
sbb
xchg
icebp
sbb
mov
and
sbb
push
ret
popa
jbe
cld
lds
aas
jno
loopne
and
movsl
mov
sahf
ss
inc
add
xor
jl
mov
in
xchg
scas
icebp
in
and
testl
mov
push
mov
push
outsl
test
stc
lods
cltd
loope
cmp
xlat
ret
inc
jg
stc
gs
in
insb
lret
jg
pusha
inc
adc
dec
addr16
cmp
cmp
repz
pop
jp
dec
psubsb
add
mov
repnz
xlat
adc
int3
pop
stos
inc
out
icebp
xchg
cmp
frstor
test
fcomps
fmuls
cmp
stos
popf
fbstp
jae
push
das
aam
imul
shrb
and
sbb
lret
or
pop
mov
into
lock
icebp
idivb
mov
inc
loope
cmc
cmp
sarb
cmpb
dec
in
sbb
into
xchg
push
sub
rorl
sti
cmp
out
add
xor
and
popf
pop
pop
inc
adc
int
cs
mov
push
jecxz
popa
mov
les
cmc
mov
das
test
mov
ja
fs
jo
int3
pop
mov
or
addr16
leave
or
lcall
clc
push
sti
pop
aaa
xor
test
xchg
mov
push
xor
cld
rol
sub
scas
or
in
fnstcw
adc
sub
xor
xor
xchg
sub
vpopcntb
ret
xchg
inc
pop
and
add
cmpsb
ret
lahf
xor
repnz
dec
xchg
ror
push
xor
ret
or
cmp
jp
arpl
mov
andl
add
sbb
test
xchg
fiaddl
jne
loope
or
sub
jg
scas
ret
fwait
inc
aam
xor
ljmp
iret
mov
add
mov
shr
mov
js
in
push
in
inc
in
xchg
push
add
inc
leave
jbe
push
outsb
rorl
clc
jmp
sub
nop
ret
pop
inc
or
inc
or
cmpsl
xor
mov
push
sub
push
push
pop
lods
movsl
mov
and
fnop
dec
ljmp
js
flds
xor
push
xor
and
xchg
dec
push
dec
push
cmpsl
cltd
loope
stos
jae
ss
sbb
jecxz
out
fs
repnz
pop
mov
repnz
lods
push
into
mov
cld
sub
dec
test
cmp
popa
imul
lea
cmp
push
sub
sti
lcall
hlt
mul
mov
pop
loop
sub
cmpsl
mov
and
fs
scas
je
fidivl
add
cmpsb
xor
dec
jnp
repnz
or
mov
mov
fwait
and
ja
add
dec
gs
xor
xor
jmp
lea
ret
mov
mov
fsubs
notl
mov
sbb
adc
adc
data16
adc
das
lock
mov
xchg
dec
int
push
mov
outsb
sti
add
mov
xor
ret
outsl
add
sub
aas
sahf
mov
aaa
mov
imul
aaa
dec
cmp
xchg
push
in
sub
fwait
xlat
adc
dec
pop
adc
stc
or
jb
cmpsl
and
fbstp
insb
or
pop
std
push
fadd
mov
pusha
loopne
lods
cmc
mov
xchg
or
ds
aaa
cmp
and
shrl
je
fbstp
mov
scas
mov
out
push
mov
sti
cmp
fsts
repnz
adc
jle
push
xchg
mov
mov
sub
and
mov
dec
loopne,pn
xor
xchg
pushl
scas
icebp
xor
rcrl
das
adc
pop
fldt
xchg
sub
push
mov
std
test
clc
add
ret
pop
xchg
stos
xor
mov
gs
rol
daa
in
push
pusha
adc
ljmp
mov
adcb
pop
insb
mov
mov
test
in
stos
jg
jno
adc
stc
and
push
sbb
pop
dec
push
aas
jbe
lcall
fdivrl
dec
xchg
pop
push
andl
out
adc
iret
mov
icebp
leave
xchg
pop
stos
popf
shll
movsl
mov
sti
roll
in
sbb
push
insl
jns
pop
mov
mov
sbb
cmp
mov
rcl
test
push
cmc
sar
mov
jmp
jnp
loope
or
inc
cmpl
fistpl
mov
int3
fcompl
arpl
push
ja
xor
aad
cmp
add
adc
adc
nop
pop
jecxz
je
test
cmp
mov
sbb
shr
jl
mov
fldenv
mov
and
jnp
cli
pusha
aam
add
iret
shl
addb
mov
mov
dec
mov
mov
loopne
pushf
inc
and
cmp
sub
and
loop
push
rorl
iret
je,pt
cld
addr16
sbb
sub
sub
jmp
mov
mov
loopne
cs
jns
test
jne
inc
cwtl
lret
xchg
pop
sub
xor
push
scas
aad
sub
push
adc
pushf
cmp
inc
xor
sub
in
std
call
push
mov
jg
loopne
pop
push
lcall
xor
jnp
sub
sbb
jl
mov
cmp
mov
and
jb
in
jle
bound
and
lods
push
adc
icebp
sub
fcmovnbe
insb
shl
mov
data16
ss
sti
sub
outsb
in
shr
jp
addr16
xor
aad
cltd
test
scas
sub
pop
or
lds
xor
call
scas
sbb
in
jb
xor
lock
lea
imul
xchg
sbb
add
pop
fmull
stos
xor
fistpll
sbb
rolb
xchg
popf
inc
in
mov
leave
inc
add
jno
fstpt
out
xor
push
pop
xchg
mov
addr16
and
and
dec
add
sub
cld
inc
cld
imul
call
adc
pushl
loope
mov
mov
cld
shr
loope
inc
xchg
dec
in
in
mov
adc
ja
dec
xchg
subb
ss
pop
jns
add
leave
inc
mov
xor
in
nop
mov
xor
mov
mov
xchg
imull
jo
lds
lcall
in
sbb
adc
sub
pop
jb
test
cmp
pop
insb
shl
cs
jo,pn
mov
push
leave
loop
inc
mov
and
outsl
imul
mov
nop
and
pop
xor
test
mov
icebp
rorl
in
aas
into
mov
fdivrl
push
lock
jmp
jmp
ss
xor
sti
mov
add
sarb
ds
ret
push
jns
push
push
cmp
adcb
es
push
pop
xor
or
mov
mov
leave
movsb
mov
clc
push
cmp
xor
loop
pop
fstps
or
aam
mov
popa
aas
test
mov
sub
mov
or
fwait
rclb
lcall
sbb
jno
fucomp
pop
jo
jns
pop
jne
pop
data16
dec
pop
dec
pusha
and
xchg
fs
push
cmp
add
add
ja
lds
sahf
imul
jb
stos
mov
in
and
xor
inc
xchg
imul
int
mov
push
cmc
xchg
bswap
rcr
stos
cmp
fsts
rcl
cmp
bound
inc
add
pop
mov
jne
add
hlt
jnp
popf
inc
popa
insb
jmp
or
rclb
push
adc
jle
push
es
inc
in
and
jl
or
xchg
mov
fsubrs
cmp
fmull
icebp
add
test
insb
jae
cltd
pop
xor
dec
ds
daa
hlt
add
lahf
fsubs
out
leave
sub
sbb
sub
js
icebp
push
inc
ret
sbb
fsubl
lds
jmp
sti
repz
test
aas
aam
jb
xchg
mov
jo
adc
mov
mov
insb
pop
mov
lret
and
mov
mov
cmc
add
dec
mov
data16
sub
roll
adc
arpl
popf
lock
in
mov
movsl
jp
lret
pop
xchg
dec
out
rol
dec
push
in
and
push
arpl
mov
inc
dec
js
push
sub
xchg
lock
push
dec
pushf
mov
xchg
in
cmpsb
aas
cmp
mov
int3
scas
imul
mov
aaa
push
outsl
scas
fwait
jl
jg
pushf
in
pop
arpl
mov
mov
jmp
pop
or
or
dec
cmpsl
loope
sub
sub
lret
mov
cmp
xchg
data16
aaa
lcall
scas
xchg
test
sti
and
outsl
push
rcl
rolb
into
push
push
push
loopne
sti
cmpsl
in
icebp
mov
sbb
mov
fs
bound
sub
popf
mov
mov
mov
sbb
push
mov
pusha
jo
jge
out
scas
shll
dec
xor
das
sbb
dec
stos
cwtl
cmpsl
fcmovu
and
sub
cmp
mov
mov
fldl
pop
mov
js
inc
test
mov
daa
leave
push
jo
std
jmp
xchg
mov
xchg
je
xchg
and
dec
xchg
stc
xchg
clc
cmp
fmuls
jge
xchg
push
test
dec
sub
enter
mov
mov
mov
xor
pop
mov
xchg
repz
jle
jbe
cmp
iret
sbb
out
das
push
pop
dec
enter
add
push
faddl
lahf
add
mov
fistps
xor
xchg
cwtl
into
push
cmc
mov
add
xor
ja
call
add
sbb
lahf
xor
and
and
add
adc
leave
mov
or
ret
arpl
xor
ret
icebp
push
lret
jnp
out
inc
and
pop
sub
sbb
mov
sub
xchg
push
add
call
sti
inc
ja
cmc
out
es
sub
imull
int3
insl
lods
cmp
and
add
and
jle
lret
divb
roll
repz
xchg
and
or
push
mov
scas
pop
call
push
gs
lcall
or
pop
mov
push
xlat
movsb
inc
and
inc
adc
xchg
dec
lods
loopne
lds
add
cmc
hlt
fldt
sar
cs
adc
jbe
mov
xchg
adc
sbb
mov
xor
jg
or
insl
xor
add
fstl
push
rcll
or
insb
sahf
pushf
mov
mov
rclb
push
add
sti
js
sti
push
mov
inc
out
xchg
mov
mov
cmpsb
inc
test
mov
xchg
xchg
mov
in
push
xchg
mov
iret
adc
jg
mov
sub
dec
mov
or
aas
jno
loopne
cltd
ret
fwait
and
fwait
jge
popa
sbbb
pop
mov
test
mov
fst
push
add
rorl
mov
js
xchg
cmp
lods
sub
lds
cmp
ret
push
jmp
mov
and
lea
pop
cmp
aas
ret
je
or
es
mov
bound
xchg
ret
outsb
pop
stos
idiv
test
push
push
add
aas
cwtl
cmp
shlb
mov
hlt
xor
call
adc
outsl
dec
jnp
flds
lds
stos
std
repnz
orb
and
shlb
imul
out
push
je
fldl
xchg
aad
sbb
ja
fimuls
rcl
mov
sahf
sbb
jle
inc
inc
fs
popa
xchg
dec
shlb
xor
mov
notl
mov
icebp
mov
scas
push
push
popf
or
iret
push
pop
sub
jmp
sub
dec
or
es
push
inc
subl
inc
scas
pusha
push
rcr
jbe
mov
or
cmp
jne
sahf
dec
fildl
data16
dec
xchg
adc
mov
mov
std
xor
int
icebp
rcll
cltd
or
push
mov
data16
bound
pop
pop
movsl
imul
cs
jle
ljmp
mov
add
addr16
mov
push
pop
arpl
sub
cmp
mov
add
daa
sub
aad
xchg
pusha
fwait
in
fimuls
inc
rcll
adc
jnp
xchg
dec
pushf
mov
pop
mov
imulb
outsb
leave
enter
pop
mov
hlt
push
mov
repnz
mov
icebp
jge
dec
fdiv
repnz
sub
loop
cmpsl
mov
cwtl
test
dec
jecxz
dec
aad
cmpsb
or
add
pop
mov
es
movsl
jne
push
dec
xchg
add
shlb
sub
in
dec
mov
out
mov
insb
cmp
inc
in
push
inc
shrb
adc
push
or
pop
adc
dec
lds
iret
dec
mov
push
outsl
test
cs
idivl
mov
jl
movsl
ret
adc
ror
and
divb
cmpl
or
push
pop
dec
lods
iret
lahf
pop
scas
mov
mov
jb
jmp
std
test
cmp
pop
push
aas
jg
cmp
pusha
jo
scas
add
movsl
mov
jae
rolb
add
mov
sbb
sahf
adc
test
pop
ss
fsubl
daa
sub
aad
divb
shll
and
out
cmc
cmp
fisttpll
loop
pop
insb
mov
sbb
mov
rcll
and
or
jne
push
xchg
loop
out
push
stc
pop
mov
sti
fimuls
dec
adc
movsb
test
rorl
xchg
insl
lods
jb
cli
push
xor
or
aam
push
sbb
sub
lds
sub
cld
fcmovb
dec
movaps
sbb
push
movsb
inc
cli
int
mov
push
jb
in
clc
inc
xor
pop
inc
and
inc
sbb
out
bound
xchg
or
fmull
cltd
xlat
ss
add
lods
or
mov
adc
jae
cmpsl
cmp
sidtl
fucomip
fs
add
test
or
sbbb
in
int
das
fbstp
push
and
mov
xchg
mov
jp
add
mov
adc
xchg
dec
test
xchg
fwait
xchg
addb
adc
push
inc
pop
sub
pop
pop
in
cmp
or
xor
inc
xor
mov
xor
call
xor
adc
jne
popa
dec
add
insb
arpl
stos
lods
sbb
or
push
nop
and
daa
mov
jne
xchg
and
jae
sahf
jae
addr16
sbb
push
pop
cmp
inc
push
cld
scas
jecxz
jae
mov
dec
jle
test
jge
insb
push
cmpsl
push
ret
or
jmp
lds
cli
dec
inc
jae
test
sbb
pop
rcll
outsl
cmp
dec
dec
inc
iret
in
call
jns
addr16
daa
pop
pop
mov
jmp
sbb
and
sar
adc
notl
insb
imul
cmp
dec
jo
mov
in
bound
cmp
xlat
push
add
aaa
and
push
aaa
aaa
in
jmp
je
out
and
xchg
mulb
shl
add
out
insb
lock
addr16
mov
adc
int
sub
sbb
dec
dec
add
sub
bound
addb
js
mov
sahf
xor
add
orl
push
ficoms
loope
test
jecxz
sub
mov
jle
cltd
push
and
cltd
adc
test
lds
xor
pop
jl
sahf
and
stc
loopne
and
into
insb
movb
xchg
pop
or
sub
shl
cmp
fstps
inc
xchg
rolb
insb
stc
jnp
mulb
xor
pop
out
inc
mov
pop
push
push
imul
or
fmuls
inc
scas
mov
movsl
mov
orl
cmpb
dec
lock
into
div
rol
mov
jl
xchg
add
test
das
dec
out
jb
arpl
sub
inc
mov
fs
lret
mov
xchg
mov
dec
and
fldl
sub
adc
push
or
stos
mov
aam
pop
movsl
cmp
aam
adc
lds
jp
icebp
jl
push
and
push
scas
push
lret
fadds
adc
or
lds
fwait
imul
push
lret
insl
push
decb
fcomip
inc
lret
pop
adc
int3
aam
in
jmp
loope
and
xchg
fldcw
fwait
push
pop
ss
pop
clc
pop
push
cmpsb
lods
sbb
pusha
into
repz
shll
push
shlb
xchg
test
inc
sbbl
into
scas
mov
lods
pop
sbbl
xor
dec
mov
outsb
lahf
mov
in
push
mov
mov
jg
shrl
jo
pushf
test
sti
jo
cli
mov
aad
pop
sbb
clc
sbb
out
pop
cmp
or
test
in
icebp
cmpsl
mov
fisubrs
sbb
add
adc
in
xor
testl
ljmpw
movsb
iret
inc
fcoms
in
lret
dec
and
or
xlat
jmp
push
loope
out
scas
mov
rcll
jne
push
push
xchg
repnz
test
jb
pop
ficoms
outsb
ja
mov
xchg
and
in
xor
sbb
fst
cltd
sbb
jno
shll
xchg
fists
push
add
or
call
adc
mov
xor
cli
ret
inc
in
cwtl
aaa
movsl
shll
aam
push
xor
pop
xor
test
push
out
mov
sbb
cmpsl
clc
call
popf
mov
daa
jae
adc
in
enter
mov
cmpsl
cltd
inc
adc
sbb
cli
int3
movl
sbb
lret
cmp
aad
mov
stos
xor
inc
xchg
sub
jmp
sbb
mov
and
push
idivl
pop
sub
pop
orb
inc
inc
sub
cmp
dec
push
jnp
bnd
add
lret
jg
push
mov
inc
mov
or
scas
and
jo
lock
ljmp
jle
imul
dec
sbb
mov
loopne
lret
iret
aam
jbe
ret
loopne
ljmp
fidivl
xchg
js
push
adc
sar
push
add
xor
daa
dec
mov
or
aam
mov
mov
inc
sub
imul
lret
jle
in
mov
pop
sbb
out
shlb
mov
jle
mov
cmp
push
enter
jmp
divb
mov
xchg
lret
sbb
lock
jae
ja
push
es
cld
int
xor
add
outsl
mov
mov
aas
rcr
pop
pop
fucomi
xchg
rclb
divb
inc
jae
mov
leave
rorb
sub
jmp
les
mov
mov
in
int3
ljmp
jmp
out
mov
pop
nop
lods
and
das
push
jne
mov
loop
inc
cmp
test
data16
scas
test
mov
adc
jne
cwtl
sbb
loope
xchg
repz
xchg
je
lock
adc
mov
jl
fnstenv
insl
fcomp
dec
jb
jmp
mov
idivl
pop
sbb
ja
add
mov
adc
scas
push
out
add
xor
movsb
test
add
mov
ret
fadds
call
mov
dec
push
fs
xor
stc
jp
popa
lea
push
jae
loop
rorb
fdivl
mov
ret
sub
pop
ret
xchg
mov
cmc
cmp
iret
sbbl
out
and
into
and
andl
cmp
enter
or
cmp
jae
add
ret
and
or
aad
ds
inc
xchg
addr16
out
gs
call
insl
dec
inc
jp
cltd
cwtl
cmp
xchg
psubb
int3
lcall
testb
push
stos
push
cmp
cmp
in
scas
push
add
cmp
ret
and
add
cmc
or
adc
inc
stos
lods
popf
aad
imul
xor
mov
mov
dec
in
jle
clc
jecxz
ja
inc
shrl
dec
jno
mov
and
in
add
pusha
scas
movsl
fwait
mov
test
pop
dec
cltd
push
inc
mov
add
movsb
loopne
lahf
xor
push
push
xchg
fsubrl
or
mov
and
clc
xor
xchg
subb
adc
cwtl
mov
int3
popf
pop
fsubrp
ret
aas
shll
lahf
pop
in
std
ret
repnz
mov
push
daa
dec
lret
in
les
add
repz
push
sub
loop
xchg
sub
push
and
popf
cmp
inc
fxtract
lds
pop
push
push
and
push
in
dec
sbb
div
or
out
xor
sbb
push
pushf
cmovg
subb
ficompl
mov
inc
repnz
into
xor
inc
dec
dec
push
cmp
xor
cmp
push
js
and
push
stos
inc
hlt
add
sub
inc
in
pop
push
cmc
inc
and
arpl
or
out
testl
popf
pusha
or
jnp
iret
popa
lahf
shlb
fildl
test
cli
mov
pop
out
xor
out
ret
pop
out
js
pusha
cmpl
jo
cmovle
xor
pop
dec
imul
sarb
imul
pusha
sbb
sub
aam
push
dec
pop
jno
in
call
dec
out
adc
loop
mov
negl
sub
out
gs
lahf
aam
mull
xor
lret
sbb
test
jno
mov
xorb
xor
and
lock
emms
scas
xchg
ja
cmp
popa
in
out
test
xchg
push
adc
arpl
add
sub
sti
lret
add
cmpsb
flds
lret
mov
push
pop
in
or
inc
mov
push
xorb
jae
nop
fdivrl
popf
lret
repnz
push
mov
xor
andnps
loope
ljmp
mov
test
cmp
push
push
jnp
shrb
cmp
movsl
adc
inc
mov
xchg
push
stos
ss
push
es
clc
inc
dec
rclb
in
fwait
arpl
int3
mov
or
push
divl
icebp
movsl
adc
inc
cmp
insl
or
pop
cmpsb
test
imul
xchg
js
jo
mov
imulb
or
jae
outsb
jnp
jle
xchg
pop
cmp
psubusw
and
xlat
inc
lahf
bound
into
or
je
push
xchg
pop
xor
in
filds
outsl
in
insb
lds
mov
add
lahf
iret
and
addb
fsubp
xchg
imul
mov
test
or
das
inc
movsb
loopne
and
or
sbb
scas
aad
aad
dec
cmp
mov
push
sahf
add
jns
jmp
xor
int3
jae
mov
push
mov
test
mov
sbb
xchg
orb
sub
fnstsw
mov
scas
std
xor
push
sub
or
es
inc
mov
loop
pop
test
dec
pushf
cld
idiv
and
jb
pop
je
mov
lods
or
out
push
pop
insl
fdivs
hlt
xor
mov
and
out
arpl
aas
lret
mov
popa
pusha
in
je
mov
mov
sub
imul
int3
mov
add
or
or
std
xor
dec
dec
insl
inc
cmp
or
sbb
mov
jmp
stos
lock
jl
jp
cmp
mov
js
mov
pop
and
or
lret
mov
popf
lcall
mov
in
fiaddl
jecxz
into
adc
mov
sub
or
xchg
sbb
jnp
dec
sub
push
mov
cmpsb
mov
adc
clc
pusha
adc
repnz
sti
addr16
jns
repz
std
out
sbb
out
lret
cltd
cmpb
sub
jge
ret
fwait
gs
imul
rol
mov
pop
testb
ret
sub
push
dec
mov
adcb
stc
movsl
lahf
dec
cmp
shlb
cmc
mov
repnz
push
insl
cld
fmulp
iret
jae
xor
xchg
hlt
idivl
dec
push
test
popa
sbb
mov
push
mov
daa
rclb
mov
repz
pop
sbb
imul
in
adc
sbb
std
ja
out
jnp
int3
movsb
popf
in
xor
je
stos
jecxz
insb
jo
pop
cmp
xchg
jnp
jnp
sbb
sub
shr
aaa
fstl
xchg
dec
out
loope
rcl
stos
repz
fiaddl
mov
xchg
pop
cwtl
test
aam
mov
out
lods
imul
adc
flds
dec
scas
lds
pop
mov
jmp
movsb
repnz
dec
sub
xor
inc
mov
sbb
sahf
out
mov
aas
pop
push
cmp
mov
push
iret
popa
std
stos
jl
inc
xor
outsb
inc
push
sub
std
jg
daa
cmp
xor
and
das
xchg
jo
mov
mov
jbe
dec
ficoms
scas
inc
mov
inc
aad
xchg
lods
dec
fstpt
push
jecxz
popa
xor
sub
xor
mov
add
sahf
stos
mov
inc
inc
pop
scas
out
rolb
leave
push
lea
nopl
cwtl
pop
pop
jg
add
mov
dec
leave
mov
stos
push
loopne
mov
js
pop
sub
cmp
jl
jp
xchg
jle
testb
dec
push
sbb
sub
rolb
push
cmp
or
pop
ret
dec
xchg
xchg
sub
push
dec
or
mov
add
pop
dec
rcr
push
shrb
push
mov
or
mov
mov
jl
out
cmp
pop
jge
jae
pop
xlat
cwtl
or
cld
pop
jecxz
adc
jne
ss
arpl
pop
subb
xchg
ljmp
xchg
pop
andl
xchg
and
adc
xor
mov
push
lock
jne
fstl
cmpsb
mov
xor
movsl
lret
dec
dec
lods
sbb
js
mov
jnp
push
add
or
out
xchg
jmp
imul
mov
repz
lock
push
mov
jl
xchg
mov
loope
mov
sahf
mov
outsl
inc
push
leave
sti
or
lret
push
and
aas
pop
int3
cs
cmp
inc
inc
adc
and
add
dec
lods
mov
jbe
mov
lock
mov
daa
push
xchg
psubw
jmp
fidivrs
std
inc
jg
lods
inc
pop
es
lds
test
mov
xor
and
orl
pop
push
sbb
mov
dec
mov
stc
cs
dec
dec
pushf
or
sbb
int3
andb
aam
jns
pop
lret
aam
ror
mov
mov
fldt
pop
add
or
cld
or
push
pop
xor
bound
out
data16
sub
clc
xor
mulb
push
or
sbb
daa
nop
xchg
mov
mov
add
rol
or
out
fcoms
sbb
hlt
sub
pop
jbe
adc
out
in
cltd
inc
lret
mov
fidivs
roll
and
cmpsb
shrl
popa
imul
mov
pop
nop
push
dec
test
and
outsl
daa
ds
inc
imul
xchg
pop
push
sub
sahf
scas
sub
test
fldenv
out
push
mov
fcmovnb
fwait
js
push
out
stos
add
cmpsb
mov
dec
out
lcall
sbb
xchg
xchg
test
insb
pop
mov
xchg
ljmp
jo
push
push
loop
xchg
mov
add
xchg
ds
sbb
pop
add
fsubl
mov
loopne
xor
ja
mov
imul
popf
fs
or
pop
shll
sub
lret
outsb
loope
insb
xlat
int3
loopne
inc
aad
loop
and
lods
jae
and
fistpll
nop
dec
sub
jle
test
jecxz
es
lea
dec
and
push
lahf
xchg
popa
mov
inc
sbb
mov
je
xchg
xor
std
in
inc
mulb
aad
cmp
repz
mov
jne
push
daa
inc
fsubrl
xor
mov
int3
sub
xchg
cmpsl
inc
mov
mov
fbld
in
mov
xchg
pop
ror
dec
push
bound
sub
mov
pop
add
fiaddl
inc
lods
mov
adc
mov
pop
inc
inc
mov
lahf
cs
mov
fdivr
mov
push
dec
out
jae
outsl
pop
sub
inc
push
xchg
xor
mov
push
stos
push
hlt
xor
and
pop
pop
jmp
icebp
add
das
pop
lods
repz
in
push
mov
add
jae
xor
mov
ds
pop
jge
pop
jb
nop
into
aad
sbb
mov
add
in
push
dec
sbb
push
jp
xor
cmp
sub
or
fsubs
xchg
addr16
sub
jne
sbb
stc
or
popf
xchg
sbb
push
pop
into
mov
mov
out
loop
sti
sbb
ja
jge
sub
and
addl
push
leave
mov
test
pop
shll
xchg
cmp
adc
adc
cli
and
cld
out
int3
adc
int
jecxz
dec
ror
popa
repnz
xlat
imul
push
jno
cld
push
push
sarb
sub
aad
push
test
mov
arpl
int
inc
popf
popa
mov
xlat
cmp
mov
xlat
lea
cmp
std
mov
lods
and
xchg
movsb
pop
jb
dec
mov
subb
aas
mov
dec
lret
cltd
js
sahf
inc
and
aas
data16
loope
sbb
fwait
sbb
lahf
jne
jb
jle
jae
pop
iret
sub
je
add
movsb
dec
test
scas
sahf
push
das
hlt
mov
jae,pt
sbb
mov
fucomi
cwtl
and
lret
dec
test
dec
jbe
iret
or
pop
sbb
dec
and
pop
lock
sahf
lcall
jne
mov
cvtpi2ps
cmp
adc
cs
cmp
bound
xor
jmp
test
dec
std
mov
pop
dec
lds
add
sub
inc
cs
test
push
inc
test
or
sub
lcall
adc
cld
fstpl
mov
or
push
mov
rol
test
mov
mov
es
xchg
fcmovnb
bound
mov
pop
scas
negl
adc
gs
xchg
push
sbb
mov
sbb
repnz
leave
aaa
pop
mov
test
out
push
mov
xchg
je
dec
pushf
and
jae
ds
insb
inc
push
sub
mov
stos
lea
aas
repnz
sub
iret
std
inc
jle
push
jnp
nop
shl
add
int
lret
repnz
mov
mov
cmpsb
stos
faddl
sahf
fiaddl
mov
push
inc
dec
xchg
setno
xchg
and
xor
lret
stos
pop
sub
testl
xchg
shrl
cli
fxch
mov
or
shlb
jae
movsl
cmp
pop
mov
pop
lret
scas
mov
stos
dec
jne
sti
or
lret
test
push
sub
mov
pop
and
addr16
in
adc
xchg
cltd
push
fsubrs
sti
fwait
and
cltd
int
cwtl
ficompl
mov
mov
mov
test
test
xchg
insl
loop
or
mov
cmp
jl
xchg
mov
mov
iret
pop
bound
mov
fists
lods
out
icebp
dec
bound
mov
cmpb
xchg
mov
lods
fdivs
test
loope
jbe
push
xchg
jae
clc
test
xchg
stc
or
cs
repz
pop
rolb
xchg
or
aas
cmp
push
lcall
adc
or
lahf
test
inc
ds
insl
dec
inc
mov
sbb
out
les
xor
inc
movsl
ret
jne
mov
add
into
mov
addb
lret
mov
push
adc
dec
jns
bound
test
pop
test
or
mov
rcr
xchg
cmpl
xchg
out
sahf
and
or
cmp
lahf
mov
js
cmc
nop
lock
and
sub
dec
int
add
inc
mov
popa
pop
or
fadds
inc
int3
test
nop
fisttpl
dec
lods
daa
add
pusha
stc
daa
push
cmpb
pop
mov
test
lods
lock
pop
nop
push
fs
pop
test
xchg
mov
lcall
xacquire
push
xchg
fidivs
fwait
stc
mov
lret
imulb
cmc
push
js
mov
loope
adc
mov
addb
mov
cmp
fsubrl
loop
jns
adc
repz
cli
in
sbb
sub
dec
and
and
inc
xchg
mov
inc
sbb
fistl
mov
adc
lock
push
icebp
dec
test
or
mov
mov
xchg
add
xchg
push
inc
lds
sarl
sti
mov
dec
ret
mov
ret
pusha
mov
incb
cld
gs
adc
jnp
out
mov
cmp
push
aas
xchg
jne
or
les
imul
jne
mov
adc
out
and
lret
adc
adc
fs
pop
stc
dec
and
push
xor
or
xor
xor
jb
pop
jp
js
or
mov
sub
dec
add
lahf
mov
dec
mov
xor
mov
mov
dec
push
fistps
push
fs
push
xor
xchg
adc
pushf
adc
cltd
push
outsb
add
fbstp
sbbb
push
cmp
xchg
xor
adc
pop
out
and
je
pop
cltd
aaa
mov
xor
jo
cwtl
cwtl
xor
insl
ja
sub
pop
mov
or
fstpl
lea
pushf
cmp
sti
stos
pop
das
mov
cmc
int
sbb
daa
mov
fisubs
outsb
loop
test
dec
cmp
nop
cmc
clc
fsubp
xor
mov
gs
lock
test
js
mov
stos
add
push
mov
cwtl
outsb
adc
adc
mov
in
das
or
std
pop
jge
sbb
or
add
imul
loopne
int
and
sbb
pop
iret
mov
int
repz
dec
mov
sub
mov
adc
ret
adc
into
jo
ja
jnp
mov
lcall
inc
call
cmpsb
out
pop
sti
mov
push
xor
fmuls
adc
mov
addb
test
popf
pop
mov
sbb
sub
cmc
mov
mov
and
sahf
in
lea
pop
aas
inc
lea
repnz
add
inc
dec
and
mov
jecxz
pop
sbb
std
xchg
test
mov
mov
jo
cmc
cltd
xchg
or
lret
das
jle
cmc
push
lock
fstp
dec
and
sub
sbbb
and
cltd
inc
add
mov
mov
xchg
loop
imul
dec
push
pop
in
sbb
mov
clc
sub
xor
gs
push
mull
fidivl
clc
jl
or
xchg
dec
inc
mov
lcall
inc
dec
dec
adc
pop
jl
push
push
pop
jne
push
jecxz
xchg
std
loope
lahf
and
rolb
cmp
fwait
or
es
pop
jne
cmpsb
arpl
dec
xor
test
je
bound
in
adc
push
fs
xchg
iret
add
dec
aaa
lcall
test
rcrb
leave
rcll
push
das
aaa
inc
xor
ficompl
scas
jge
ficoms
or
mov
ret
and
jle
flds
xorb
sub
jb
lret
mov
xor
mov
jne
sub
jg
out
push
mov
jecxz
in
push
jno
pop
push
cmpsb
scas
ss
gs
push
out
mov
inc
dec
and
and
mov
daa
arpl
aam
repnz
adc
ret
ret
jecxz
adc
movsl
aad
xor
jno
and
mov
xor
pop
xchg
dec
cmpl
repz
sbb
imul
xor
adc
mov
jge
les
in
andb
nop
push
and
add
insl
push
xor
and
dec
addr16
ss
aad
mov
ficomps
popf
dec
push
in
mov
popf
jbe
adc
out
lea
sub
lock
ds
inc
mov
xchg
mov
jecxz
andps
pushf
sbb
call
inc
cli
popa
fdivrp
fsubrs
add
fdivrl
fidivrl
xchg
xchg
push
cmpsb
mov
xchg
fs
push
jae
mov
mov
sbb
adc
iret
lcall
adc
sub
mov
adc
popf
jno
or
add
sbb
inc
adc
pop
sub
pop
xchg
push
fdivr
dec
push
ss
fs
xor
loopne
xor
fucomip
mov
or
movsb
or
repz
add
mov
mov
mov
out
jge
or
xor
repnz
or
mov
scas
out
xor
inc
rcrb
sub
adc
fnstenv
out
adc
loop
fistpll
test
outsb
adc
sbb
cltd
les
leave
in
add
daa
ljmp
pushf
sub
and
pop
inc
xchg
xchg
sarb
out
xchg
and
cmpsl
mov
add
std
adc
mov
jae
add
push
jecxz
jmp
stc
fildll
xor
fisttps
jle
clc
jmp
or
in
mov
jl
out
imul
xchg
insl
add
movsb
inc
lret
push
mov
xchg
add
mov
cmpsb
int
sarb
pop
mov
sbb
mov
das
cmp
push
cmc
sbb
xor
loopne
inc
out
shrb
mov
call
jecxz
nop
aad
movsb
pop
movsb
ljmp
aam
stos
stc
fnstcw
in
add
mov
call
adcb
push
push
add
dec
into
loopnew
inc
sbbb
mov
subl
mov
adc
cmp
xchg
jne
ljmp
std
adc
cltd
outsb
or
stos
adc
sti
call
sti
addb
pushl
das
pop
loope
bound
mov
lods
push
and
xchg
xchg
les
not
lret
pop
adc
mov
cmpsb
andl
mov
icebp
cwtl
jg
push
cmp
call
shr
adc
sti
test
push
xchg
out
insb
repz
push
sbb
xor
mov
test
test
xchg
push
mov
dec
sub
adc
jns
jg
sbb
jno
inc
push
adc
cltd
and
bound
jecxz
push
jae
lods
sub
loop
mov
nop
push
nop
cld
xchg
cmc
cltd
mov
mov
lds
subb
cmp
out
cmp
add
lock
movsl
jo
stc
push
jp
mov
pushf
outsl
mov
push
xlat
add
pop
inc
lods
push
sub
pop
aaa
lods
je
and
pop
std
ljmp
fdivr
sbb
inc
cmp
add
xor
mov
push
pop
xor
popa
inc
add
sub
inc
mov
xchg
xor
icebp
jmp
add
icebp
cmp
pop
lods
xchg
push
jnp
data16
push
or
cmpsb
nop
mov
mov
cmp
or
out
sbb
xchg
inc
add
xchg
mov
sbb
cmp
loope
jo
cmp
xor
pushf
mov
out
ljmp
stos
and
inc
shr
stos
cltd
and
aaa
jae
inc
ret
dec
cmp
call
cmpb
aas
xor
es
sub
cmp
test
pop
daa
test
jmp
jg
pop
mov
aaa
mov
jns
and
xor
cmpsb
push
pop
inc
push
pop
call
testl
pop
fstpt
out
popf
dec
sub
mov
in
leave
outsl
jecxz
inc
inc
cmp
adcl
dec
cld
adc
test
push
inc
dec
xor
aas
mov
lret
sbb
sub
pop
lods
sar
outsb
lcall
das
sbb
sti
in
xor
cmp
jne
arpl
movsl
mov
ja
xchg
enter
mov
fistpl
in
loop
es
notb
mov
sarl
scas
ljmp
stos
stos
lock
inc
fwait
repz
hlt
xchg
fs
adc
push
mov
push
js
stos
xorl
je
mov
jmp
mov
lock
movsb
fs
adc
or
sub
fxam
push
push
sbb
xor
jb
loopne
jns
fidivl
stos
test
sbb
mov
pop
mov
das
pop
aaa
testl
in
movsl
popf
and
cmp
jg
push
and
in
jns
dec
inc
pop
xor
jge
xchg
sbb
add
cmpsl
jo
adc
cmp
sbb
jo
lods
int
fimuls
inc
movsb
push
cmpl
fcomip
mov
mov
test
mov
mov
cld
xor
outsb
call
scas
mov
or
sbb
mov
or
popa
or
ja
pop
cmp
xchg
in
jae
push
ret
jmp
popf
cs
jmp
fcoml
mov
push
inc
inc
mov
mov
and
add
mov
cmp
jecxz
sub
iret
mov
xor
sbb
rolb
push
mov
cmc
mov
mov
sub
xor
or
or
out
push
inc
adc
loope
mov
add
rcrl
sbb
or
sbb
add
adc
adc
and
call
test
add
fsubs
sub
jnp
mov
xor
pop
sbb
aas
xor
xchg
lcall
dec
xchg
out
or
stos
xor
mov
xchg
pop
ret
arpl
addr16
inc
int
lahf
mov
out
jae
mov
mov
loopne,pn
cli
aaa
std
jo
xchg
mov
push
xor
mov
daa
jecxz
cmp
xor
cmp
data16
into
pop
xchg
insb
addb
and
imul
adc
xchg
or
lret
gs
xchg
fucomip
icebp
cmpsl
loope
jl
loopne
cmpsl
pop
or
xlat
outsb
comiss
fisttpll
sub
mov
rcll
xor
ret
push
fucomip
mov
pop
dec
pop
adcl
sbb
out
repz
ja
or
mov
jbe
in
sub
sbb
sbb
dec
rcll
mov
pop
push
repz
pop
lods
jecxz
mov
xchg
add
sub
gs
daa
jge
fdivl
and
shl
sbb
in
jg
popa
into
mov
fcmovnb
test
pop
or
lahf
sub
mov
sub
nop
or
cmpsb
lds
test
inc
or
lahf
fisttpll
repnz
scas
pop
test
dec
cmp
fs
jo
call
mov
cmpsl
cmp
lds
xor
jge
add
jnp
adc
mov
out
sub
imul
pop
pop
imul
dec
dec
pushf
add
and
jl
mov
shr
stos
nop
inc
test
or
fbstp
xchg
in
mov
cld
test
sub
popa
sbb
les
adcl
ffree
sub
fisttps
test
sbb
insb
aaa
jg
push
xor
jb
fdivl
pop
mov
or
xor
mov
addr16
jns
cld
inc
jecxz
repnz
rorb
test
fdivs
jmp
xor
pop
cmc
mov
popf
iret
mov
jns
cmp
rclb
sbb
mov
mov
and
adc
pop
push
ficompl
lret
xlat
bound
add
xchg
cmp
mov
into
lret
xor
inc
rcr
xchg
push
sbbb
imul
cmp
das
or
test
fisubrs
mov
jle
mov
stos
inc
into
outsb
mov
test
push
push
and
sbb
inc
sbb
lds
insb
data16
mov
mov
mov
fadds
orl
adc
scas
imul
pop
push
push
syscall
pop
mov
pop
inc
xor
mov
mov
dec
rol
mov
pusha
add
push
lock
or
jmp
ds
call
or
xchg
pop
insl
push
push
repnz
stc
add
bsf
jb
dec
sti
mov
in
mov
mov
and
dec
adc
shrb
jns
rol
pop
fs
push
jle
int
lcall
mov
jb
ds
movsl
lahf
pop
dec
adc
jge
dec
stos
push
pop
jno
xchg
test
je
push
aas
mov
xchg
push
cld
lods
or
aad
sbb
out
inc
sbb
xchg
ds
stos
int
push
loopne
pop
dec
mov
out
pop
mov
adc
addb
mov
aam
fisttpll
in
inc
dec
cs
icebp
dec
xchg
xchg
out
out
dec
pop
push
jns
pop
aas
mov
sarb
fisubrl
or
sub
jmp
and
popa
add
iret
push
sbb
inc
push
fnstsw
into
xor
clc
mov
xlat
xor
jle
and
pop
pop
cmp
aam
aas
xchg
ja
notl
jne
fisubrl
nop
jnp
adc
xchg
cmp
xlat
xchg
in
mov
push
dec
cmpsl
insb
mov
fisubs
jl
subb
xor
sub
dec
xor
rolb
ficoms
gs
cmpsl
cltd
stc
ja
mov
movsb
stc
cltd
cmp
cltd
out
aam
push
mov
cmpsl
xchg
or
inc
aad
adc
icebp
aam
sub
testl
test
stc
xchg
xchg
jno
push
mov
popw
mov
aam
aam
cltd
jmp
jb
hlt
xchg
pop
pop
shll
dec
xor
fcomps
clc
lock
or
in
in
inc
sub
and
add
rclb
gs
pop
cmc
push
ret
adcl
push
cmp
ret
int3
jbe
lea
popa
in
mov
fs
add
cwtl
insb
xor
pusha
cmpsb
push
ds
jmp
scas
fmuls
adc
and
push
cld
and
adc
and
fdivl
sbb
aam
daa
jp
std
pop
hlt
aas
sbb
or
xchg
std
or
ds
and
mov
jbe
xchg
mov
xlat
cmp
lahf
call
or
outsl
adc
out
shlb
cld
and
mov
push
das
jnp
fdivs
aas
pop
cmp
testb
aas
fsubrs
pop
sub
hlt
iret
push
mov
outsl
jne
shlb
enter
mov
mov
mov
enter
movsl
inc
inc
sbb
pop
stc
and
mov
out
imul
test
xor
frstor
cmp
cmpsl
sub
test
sub
pop
mov
mov
cmp
mov
stos
lret
pop
lcall
add
jnp
cmp
sbb
pop
push
cmp
mov
scas
inc
js
add
and
jo
ret
and
dec
mov
js
jbe
jnp
and
leave
out
mov
xchg
sbb
int
dec
push
xor
fucomp
push
js
lods
int
push
test
pop
test
js
dec
jmp
loop
or
fnstenv
push
push
out
fst
ss
cmp
in
aas
mov
pusha
add
xor
mov
dec
xchg
repz
mov
jmp
add
je
jmp
jl
mov
and
push
jae
incb
movsb
adc
or
pop
add
add
xor
lea
cwtl
gs
inc
stos
loope
imul
sub
push
addr16
in
jg
and
push
xchg
mov
add
jg
adc
roll
push
add
add
aad
push
outsb
and
inc
lahf
inc
adcl
sbb
nop
in
push
rorb
lods
sub
push
fisubrl
cltd
dec
mov
xor
or
lods
sub
fadds
test
pop
pop
inc
dec
sbb
add
and
cmp
mov
cwtl
xchg
xor
out
in
push
or
xchg
decl
xchg
pop
rcll
leave
jle
je
adc
int
sbb
lock
sti
and
push
xchg
mov
jbe
xchg
mov
into
jnp
push
fdivrp
rcrb
xchg
test
cmp
dec
cmp
and
pop
outsb
leave
push
mov
mov
out
xor
adc
fwait
popf
add
xlat
dec
ljmp
sbb
mov
jle
sub
inc
popa
stos
clc
cmp
adc
jne
pop
arpl
in
dec
icebp
pop
adc
pop
nop
sbb
xor
or
repz
outsl
mov
js
and
cltd
cmp
das
sub
push
mov
cli
test
enter
jl
sub
aam
pop
sti
rolb
loope
inc
mov
cwtl
out
cli
pusha
mov
dec
dec
fucom
leave
pushf
pusha
imul
sub
scas
shlb
mov
sbb
adc
inc
inc
ljmp
adc
and
add
xchg
xor
pushf
adc
icebp
xlat
sahf
scas
dec
pop
xor
fwait
mov
enter
push
adc
xchg
or
jecxz
jnp
xchg
fistl
dec
add
std
in
sahf
pop
xor
popf
or
mov
push
ljmp
jge
hlt
dec
sub
mov
daa
das
xchg
lds
xchg
mov
fistpl
sbb
fwait
pop
pop
pop
movsl
ficompl
daa
in
inc
xchg
or
sahf
mov
sub
cwtl
repz
dec
into
jg
cmp
leave
fwait
dec
div
inc
repz
mov
sbb
and
lock
adc
push
lahf
pop
ss
adc
outsb
adc
cmc
sbbl
cmp
test
imul
loopne
lock
push
imul
push
aas
xchg
cmp
and
rcll
sti
jbe
pop
fldenv
clc
addr16
enter
cld
mov
mov
popa
notb
dec
push
cmp
dec
add
popf
outsl
sbb
sub
push
icebp
and
jb
je
sbb
insb
stc
jnp
fcomps
aad
mov
mov
std
adc
xor
popa
sbb
jecxz
movsb
data16
loope
sbb
or
mov
scas
sbb
sub
xor
mov
es
repnz
xchg
mov
or
dec
mov
nop
dec
or
in
jo
cs
inc
into
sub
xchg
pop
repnz
mov
sbb
mov
stos
repz
jge
sti
mov
scas
inc
dec
lcall
dec
inc
inc
mov
cmp
test
adc
popa
outsb
xchg
sub
scas
push
lds
aaa
aas
inc
cmp
jns
cmp
xchg
inc
aas
and
inc
xchg
push
add
or
mov
mov
es
cltd
pop
decb
inc
mov
push
loope
push
sbb
ffreep
mov
orb
adc
addb
les
mov
std
insb
or
cs
sti
mov
adc
sar
jmp
and
push
fwait
cmpsb
cmp
je
sub
add
aam
mov
jo
out
sahf
lahf
addr16
pop
out
out
mov
xchg
add
mov
test
and
dec
rclb
imul
lcall
sub
sbb
bound
add
xchg
jnp
fsubrs
mov
loop
push
xchg
lcall
jb
fiadds
push
jae
or
mov
jo
dec
lcall
push
pop
cmc
lods
xchg
cmp
mov
icebp
and
shr
jmp
hlt
mov
cmp
adcb
mov
sbb
push
adc
subl
pop
jle
add
lock
fstps
push
sbb
adc
aas
jmp
arpl
push
sbb
push
mov
mov
xchg
pop
xchg
sbb
mov
movsl
adc
push
arpl
add
pop
shll
mov
out
sub
or
adc
sahf
aad
xchg
xlat
pop
jno
sbb
xchg
bound
push
cmp
subb
push
out
hlt
test
sub
mov
pop
or
cmp
ds
icebp
jmp
xor
rcrb
cmc
cld
std
or
ds
enter
mov
or
adc
and
xchg
ds
cmp
sub
or
sub
stos
dec
rorb
pop
lock
xor
in
js
dec
mov
push
sub
jb
add
cmovno
nop
mov
pop
xchg
icebp
xor
movsl
dec
xor
shlb
xchg
mov
mov
sub
xorl
loop
dec
adc
movsb
in
mov
in
push
push
xchg
xor
dec
or
enter
xchg
xlat
scas
fwait
pop
xlat
es
movsl
imul
mov
lods
ds
movsb
in
pop
mov
in
mov
xchg
mov
or
adcl
fldenv
jb
mov
mov
das
xchg
pop
sub
dec
cltd
and
jnp
mov
rclb
rorl
dec
test
enter
call
shlb
dec
mov
or
lods
loope
or
mov
out
fcmovu
pop
leave
fidivl
xchg
inc
adc
add
cwtl
std
divb
or
and
pusha
and
cmp
push
and
lods
sbb
jo
xchg
out
cmp
sahf
mov
pop
lea
mov
or
cmp
scas
cld
sub
test
add
xlat
lods
orl
insl
and
cmpsl
inc
jl
jle
mov
popf
jg
das
inc
jae
movsb
sub
and
sub
ss
cmpsb
arpl
aaa
popa
mov
dec
jge
ret
fs
scas
push
insb
cwtl
jecxz
mov
mov
jl
jae
push
push
lret
inc
push
shl
push
inc
jmp
out
jno
aas
jo,pt
mov
testb
jnp
xchg
lea
out
adc
sbb
cmp
leave
rcl
adc
jno
int3
sti
ret
push
mov
mov
jge
mov
mov
cmp
mov
jae
in
mov
jne
xor
scas
jns
or
in
pop
mov
pushf
cmpsl
mov
or
jp
mov
and
jne
and
pop
mov
dec
mov
test
imulb
leave
mov
mov
lahf
dec
pop
iret
adc
cltd
mov
stos
pop
stos
mov
movsl
fisubl
rcr
pop
or
sub
dec
cmpsb
lret
ret
aaa
mov
push
sbb
xchg
mov
addr16
faddp
leave
inc
push
enter
loopne
fnsave
lret
mov
lods
inc
mov
shll
imul
or
adc
push
or
lea
or
test
clc
out
movsl
test
imul
ret
or
test
mov
inc
push
stc
shr
pushf
jecxz
inc
push
adc
sbb
add
lahf
inc
push
sub
das
pop
lahf
pop
mov
mov
cld
insb
loope
cli
lds
mov
and
mov
div
jbe
xor
cld
xchg
jns
mov
sahf
mov
pop
dec
xchg
mov
inc
jb
mov
xor
push
lcall
gs
mov
adc
in
fcmovb
pop
push
stos
pop
addb
xchg
pushf
cmp
lock
xchg
ljmp
ljmp
dec
enter
nop
and
lock
or
ret
sbb
lods
hlt
nop
lds
repnz
out
sub
dec
mov
sbb
inc
inc
mov
jecxz
data16
mov
xchg
jb
rorl
dec
in
xor
jl
or
in
ss
or
loope
xchg
sub
jp
mov
mov
sub
pop
xchg
mov
mov
ja
stc
lods
aad
sub
stos
mov
jl
and
xor
push
stc
cmc
ja
jle
std
hlt
gs
lock
pop
outsb
push
mov
jge
push
ja
mov
imul
test
pop
add
ficoml
vpavgb
xchg
sub
and
or
aas
shlb
mov
loope
and
mov
pop
sub
mov
inc
into
inc
lds
cmc
aad
mov
pop
int3
movsb
and
into
mov
jecxz
mov
sti
loopne
mov
inc
push
push
cli
lods
push
cli
dec
xchg
jp
aas
jmp
sbb
pop
cwtl
movsb
xor
or
stc
sub
js
dec
sbb
jle
cwtl
jae
popf
xchg
xchg
out
and
jno
jl
jno
jo
sub
fs
cs
dec
or
bnd
xor
add
or
repz
dec
mov
dec
lods
adc
lea
and
lret
fistl
push
jg
fs
xchg
das
cmp
mov
and
jne
push
lcall
jecxz
or
mov
push
shll
mov
jp
mov
fwait
test
mov
test
stos
pop
inc
mov
push
and
cs
in
test
dec
lahf
outsb
test
jl
lahf
mov
dec
xchg
adcl
pusha
pop
push
cltd
mov
lods
jo
sub
gs
leave
dec
scas
mov
out
stc
jmp
mov
mov
into
add
or
cmc
jbe
and
lods
jge
xchg
and
repnz
xor
data16
fld
ret
out
lock
xor
mov
jo
in
scas
xchg
pushf
outsl
iret
mov
into
rcrb
push
shlb
jmp
cmp
pop
popf
mov
jle
cmc
push
mov
das
cmp
into
les
cmp
popf
jl
repz
inc
inc
idivb
adc
popa
dec
cmpsb
xchg
and
jne
daa
lcall
test
loop
leave
enter
pop
xchg
ja
sub
scas
cmp
mov
outsb
or
or
in
dec
and
js
aaa
jae
bound
orb
lods
sbb
push
push
ret
nop
sub
les
popa
sbbb
loopne
imul
pop
or
fisttps
mov
sbb
filds
add
cltd
je
sbb
dec
push
jo
mov
stos
dec
xor
fldt
dec
pop
imul
mov
sub
mov
cld
or
add
jns
push
in
idiv
sbb
mov
cmp
fcmovbe
mov
rclb
adc
xor
pusha
inc
test
ss
dec
ljmp
fwait
js
mov
and
negl
std
cmpb
pop
xchg
add
xchg
loop
jno
fbstp
negl
or
shl
jb
cmp
scas
adc
dec
push
rsqrtps
pop
jae
flds
in
popf
sbb
mov
stos
and
or
ret
adc
repz
add
or
je
push
loop
dec
enter
mov
xor
sub
inc
adc
pop
stos
add
ret
mov
mov
je
jp
mov
mov
pushf
push
xor
xchg
inc
xchg
sub
cmp
xor
mov
lcall
and
js
jb
mov
pop
cmc
es
cmpsl
sub
je
cmp
andl
pop
sbb
cmpsb
push
int
sbb
sbb
jns
xor
gs
lcall
add
test
jge
movsl
sbb
in
les
mov
aaa
mov
insb
dec
push
inc
rep
test
pop
inc
inc
mov
cwtl
or
mov
mov
jle
mov
arpl
aam
or
aas
xchg
into
cli
xor
mov
pop
push
mov
imulb
in
dec
inc
movsb
dec
fiadds
inc
iret
icebp
rcrb
into
push
cwtl
lock
sub
pop
xor
neg
addr16
ret
out
cmpsl
jmp
push
stc
push
xchg
stos
faddl
cmpsb
push
icebp
add
mov
jae
xchg
adc
cmp
test
adc
daa
xchg
adc
cmp
xchg
or
mov
jp
out
js
cmp
addb
jnp
in
cltd
cld
ljmp
sbb
pop
repz
scas
mov
ret
cmp
add
icebp
fcompl
addr16
daa
cwtl
dec
imul
mov
dec
cmp
adc
nop
mov
in
in
addr16
stos
or
test
xor
insb
xchg
mul
fnsave
push
or
enter
outsb
add
add
mov
scas
mulps
shll
aas
mov
call
jp
xor
add
cmp
xorl
mov
ss
lods
adc
dec
mov
je
mov
movsl
imulb
sbb
inc
jge
push
push
push
mov
jle
xlat
pop
mov
cmp
shrl
adcl
bound
mov
clc
lahf
leave
fidivrl
adc
stc
inc
jmp
sbb
lahf
pop
lahf
pop
dec
pop
xchg
out
cmc
insl
adc
imul
or
loopne
sub
adc
ror
stc
and
cmpsb
mov
clc
cwtl
jnp
mov
inc
pop
insb
cs
aas
xor
lcall
xor
divb
adcl
sub
cmp
mov
ss
sbb
push
and
mov
adc
jne
hlt
icebp
aam
std
dec
xor
leave
xlat
mov
xchg
cmc
pushf
repnz
mov
lcall
xorb
inc
dec
jl
sub
mov
sub
jecxz
jno
ret
cmpsb
push
call
mov
test
call
jmp
dec
repnz
mov
sbb
fwait
test
cmpl
inc
add
fs
inc
sub
rolb
xchg
repnz
mov
insb
fwait
xor
xchg
push
mov
dec
fsubs
push
es
loop
inc
mov
xor
fisubrl
and
mov
lods
xchg
push
lods
rclb
inc
bound
cld
int3
mov
and
call
dec
sub
test
into
adc
test
mov
cmp
daa
cmp
xchg
add
adc
mov
mov
loope
pop
jge
pop
push
jle
inc
insb
test
add
ss
lods
xchg
xchg
in
je
stos
shll
pop
dec
jbe
adc
rcrl
xor
fsubrs
ja
mov
mov
ja
xchg
rol
add
push
adc
dec
lahf
jno
clc
mov
pop
sbb
lods
addr16
daa
dec
mov
mov
test
ds
push
or
xrelease
in
enter
xchg
rcll
fwait
iret
ja
dec
data16
sbb
inc
push
hlt
lcall
dec
aad
push
cmp
lock
cmp
scas
in
aas
push
lods
jecxz
mov
lahf
leave
fsubl
daa
push
jle
inc
movsb
mov
and
pop
or
push
pop
push
sbbb
ficompl
xor
mov
int3
sub
mov
ljmp
sarb
inc
xchg
lea
aam
pusha
mov
jp
pop
aad
mov
orl
dec
sbb
and
mov
jne
mov
mov
ljmp
sbb
ljmp
inc
and
repz
in
sub
mov
or
sbbl
inc
sbb
sbb
adc
add
cmpsb
add
pop
pusha
jmp
sbb
push
and
das
mov
insl
pop
std
rol
mov
mov
nop
mov
mov
or
loope
fisubl
ficoms
push
and
inc
push
insl
mov
cmp
test
cltd
dec
push
int3
push
out
xor
cltd
jo
inc
mov
out
mov
and
inc
add
dec
jecxz
inc
inc
std
data16
xor
movsl
add
dec
dec
adc
in
loopne
pop
pushf
push
mov
hlt
adc
icebp
scas
jmp
pop
movsl
mov
inc
add
sbb
loop
int
imul
scas
rcrb
push
adc
pop
and
xor
test
dec
rclb
cmc
mov
sbb
loop
push
dec
jg
popf
out
ljmp
sbb
mov
and
out
fidivrl
scas
mov
mov
lcall
dec
divb
sbb
out
out
addb
xchg
imul
clc
pop
jns
jmp
or
and
sub
mov
mov
sbb
addr16
sub
mov
push
adc
jle
mov
sub
aad
jae
mov
pop
cmpsb
cli
mov
xlat
incb
lock
lret
xlat
jno
lret
inc
cs
stos
inc
jl
jae
int3
or
push
adc
fwait
mov
ja
xor
fmuls
mov
loopne
jecxz
int
mov
jmp
adcb
lea
iret
fisttpll
fcmove
adcb
mov
cmp
lahf
test
xchg
or
pop
in
push
mov
cld
cmp
ret
jo
adcb
add
addr16
cmc
test
xchg
out
add
int
pop
sbb
xchg
sti
xor
push
mov
rcr
pop
dec
add
xor
and
pop
int3
enter
jp
fcompl
or
mov
int3
add
sbb
lcall
sub
arpl
adc
add
bnd
pop
xchg
enter
ds
mov
sbb
and
inc
push
sti
pushaw
mov
push
outsb
mov
mov
rcll
arpl
lret
pop
mov
fs
or
push
packssdw
jp
push
dec
dec
xchg
xchg
enter
pop
clc
and
fwait
pop
test
jle
pushf
mov
loop
pop
cmp
xor
lret
into
movsb
fcomi
mov
lahf
imul
sbb
jp
outsb
clc
ljmp
test
call
bound
test
push
push
cmp
and
cli
scas
enter
dec
inc
scas
xorb
cmp
std
test
mov
in
fs
fs
sub
addr16
inc
cmpl
mov
jae
mov
xchg
mov
dec
mov
fmulp
mov
into
fwait
add
sub
sbb
dec
shll
fcompl
cltd
shll
cwtl
jl
in
mov
call
jecxz
push
xchg
xchg
cld
call
or
leave
jns
mov
je
mov
inc
pop
outsl
jae
dec
and
mov
xchg
mov
jl
mov
icebp
fdivs
adc
and
lahf
push
sub
push
out
push
stc
inc
shlb
sub
mov
inc
pusha
insl
jae
push
xlat
cmc
inc
and
adc
add
rolb
aad
sub
push
in
mov
addr16
sub
mov
movsl
orl
adc
lahf
bound
or
std
subl
es
loopne
cwtl
mov
add
mov
popf
push
fdivs
dec
add
imul
mov
push
mov
mov
xlat
cltd
movsl
ss
mov
sbb
push
cmp
sarb
mov
cltd
in
pusha
clc
and
pop
ret
dec
xchg
xor
or
xchg
fistpl
addr16
aam
sahf
jle
dec
mov
and
int3
inc
inc
pop
clc
inc
flds
xlat
mov
sbb
mov
push
cmp
cmp
dec
stos
sub
cmp
filds
sbb
lcall
sbb
out
out
fsubp
pop
pop
add
movsl
or
lods
push
mov
stc
rcrb
fwait
xchg
dec
aad
push
or
dec
sbb
and
push
loope
cmc
pop
jns
js
lret
jo
pop
jns
lock
xor
xchg
dec
cmp
mov
in
sub
mov
fcomi
push
adc
mov
dec
ficoml
xchg
pop
or
mov
int
bnd
scas
out
jbe
test
sahf
add
xchg
rcrl
xor
mov
loope
scas
mov
pop
mov
jns
add
and
andl
xchg
cmp
daa
add
jno
hlt
arpl
xor
push
jb
sbb
dec
pop
inc
mov
cmp
jnp
test
ret
arpl
data16
xor
shl
push
add
mov
pop
jmp
stos
pop
xchg
data16
mov
add
adc
sub
out
pop
and
cmp
adc
lea
xchg
sar
nop
mov
push
nop
mov
xor
pop
dec
repz
ja
inc
xchg
sub
outsb
ja
add
cltd
stos
lret
sub
pop
push
jp
stos
inc
dec
fildll
jb
dec
sbb
lds
sbb
inc
scas
decl
push
xchg
ss
rolb
cmp
mov
sahf
push
test
lcall
pop
adc
or
xchg
sbb
dec
jns
cmpsb
cmp
sub
stos
jnp
aad
ljmp
cwtl
cmp
imul
fmull
pop
mov
xor
inc
aad
lret
rorb
in
call
jp
mov
push
outsl
std
pop
xchg
xchg
mov
mov
insl
sti
insl
adc
fsts
aad
push
mov
sbb
or
ss
addr16
mov
stc
cmpsb
jle
jmp
lret
pop
jbe
pop
xor
imul
xchg
ss
sbb
adc
push
xor
xchg
inc
mov
cmp
scas
test
mov
lret
aaa
js
shrl
cmpl
dec
mov
jns
stc
shlb
hlt
dec
xor
outsb
jl
sub
stos
adc
or
jns,pn
cli
andl
pop
push
js
dec
push
mov
loope
cwtl
xor
mov
cmpsl
inc
fmuls
std
mov
cmp
mov
and
jp
pop
mov
xchg
xchg
sub
out
add
dec
inc
int3
cltd
cmpsb
cmp
xchg
bound
push
jle
cmp
cmpsl
ja
jae
or
test
sub
shlb
push
adc
mov
roll
xchg
fdivs
sub
outsb
mov
sub
and
jbe
xor
sarl
clc
adcl
xchg
push
imul
daa
test
mov
mov
jns
jp
adc
pop
sarb
popa
mov
mov
aaa
xor
sbb
sti
and
loop
mov
pusha
sbb
pushf
les
sub
or
out
test
jae
loop
in
inc
mov
leave
jbe
and
push
mov
popf
and
xchg
inc
or
je
scas
mov
cli
xchg
xor
movsl
mul
test
and
or
add
cmp
cltd
push
adc
cmp
js
outsb
sub
fadd
outsb
sbb
enter
sub
mov
in
sbb
push
lods
push
cmp
inc
adcl
mov
jbe
rcll
xchg
lea
adc
inc
cltd
xchg
out
pushf
lds
push
cli
pop
jb
inc
push
jle
cmpsl
std
xchg
sbb
leave
mov
adc
ja
dec
cmp
adc
cmp
stc
scas
cwtl
mov
test
in
aam
sahf
stc
jle
cmpsb
pop
add
pusha
daa
inc
call
mov
pop
test
cmp
xchg
inc
cmp
lea
popf
cmp
stos
fsub
jnp
mov
mov
fbld
nop
sub
nop
xchg
push
sahf
and
dec
lcall
sbb
loopne
mov
in
cmp
cld
mov
ja
scas
pop
push
cmpsl
daa
cmp
mov
push
sub
movsb
xchg
push
pop
stc
lret
hlt
cmpb
sub
cld
shl
shlb
push
mov
add
jg
xchg
push
push
imul
push
inc
daa
ds
imul
adc
mov
xor
jne
lret
outsb
xchg
es
mov
pop
push
jo
mov
dec
sub
rol
fcomip
lock
aas
das
and
add
cmovnp
push
nop
out
dec
jb
xor
or
outsl
ljmp
cld
pop
adc
push
std
stos
test
cmp
sub
push
gs
jge
aad
mov
jae
fsts
lock
mov
rorl
cmp
cmp
jp
and
sbb
repnz
fwait
push
add
pop
jge
push
rclb
xor
lods
and
das
in
loop
jmp
idivl
bound
add
icebp
cmpsb
stc
pop
mov
call
fisttpll
jle
and
rcrb
push
sbb
sub
cmp
inc
test
pusha
mov
clc
cmpsb
movsl
cmp
cld
imul
out
cmc
pop
mov
xchg
lea
sti
imul
pop
xchg
fisttps
bound
add
add
push
mov
test
adc
fistpll
aam
loope
or
xor
cli
xor
cli
in
repz
cmp
iret
sahf
pop
xorb
lahf
push
jne
or
sbb
adc
mov
sbb
lds
aam
dec
call
fstpt
adc
dec
mov
lret
sbb
xor
xor
cmp
mov
jg
sahf
push
addr16
ljmp
es
scas
sub
jnp
cli
fwait
cwtl
jae
cmp
jmp
cld
test
cmp
outsb
xchg
xor
push
and
add
nop
mov
add
out
loope
lahf
cltd
adc
jnp
sbb
lods
cs
sahf
inc
sub
je
sub
jge
stos
pushf
push
popa
data16
fldenv
lods
or
sub
hlt
lcall
popf
or
in
pop
adc
inc
test
imul
cs
mov
adc
dec
arpl
js
andl
enter
or
xchg
cmp
push
dec
cmp
orl
xor
sbb
mov
stc
je
xor
xor
enter
mov
mov
and
and
push
inc
push
dec
fisttps
xchg
movsl
mov
sbb
icebp
fistl
xor
sub
int3
popf
shll
mov
shrb
into
or
lcall
mov
sub
imul
loop
xchg
inc
sub
out
mov
out
jae
je
mov
push
int
lret
ja
inc
or
xchg
sbb
dec
inc
inc
in
ljmp
xchg
sub
cltd
sub
inc
mov
lds
xchg
mov
out
lret
push
dec
pop
hlt
imul
dec
cli
sub
mov
or
addr16
ja
fdivl
jae
mov
dec
sub
imul
lret
mov
insl
jg
cwtl
jg
adcb
gs
jno
lock
dec
jg
cld
insb
xchg
negl
jp
mov
pop
ret
inc
addr16
mov
ss
mov
pop
inc
sbb
in
lahf
mov
adc
jae
test
mov
roll
pop
jg
in
ret
insb
shlb
pop
fstpt
jmp
imul
inc
repz
fwait
cmp
add
andl
xor
in
add
mov
pop
into
cmp
inc
and
pop
sbb
stos
pusha
imul
cmp
cmp
repz
adc
sub
xchg
push
test
mov
dec
xchg
xchg
push
fsubs
dec
jl
and
aaa
mov
add
addr16
imul
jno
inc
cmp
push
rorb
adc
repz
or
outsl
push
pusha
fs
jne
pop
cmp
add
mov
das
cmp
mov
shll
fstpl
inc
push
rclb
mov
xchg
rorb
inc
jg
repnz
and
mov
or
std
imul
mov
jg
xchg
push
popf
push
sbb
inc
mov
scas
xchg
jge
minps
addr16
lahf
repnz
mov
cmc
in
jnp
loop
mov
adc
ljmp
mov
cmpb
sbb
jp
rcll
clc
inc
xchg
sbb
insl
lods
add
fstl
mov
add
movl
xchg
out
sbb
or
mov
aam
mov
inc
push
xchg
pop
adc
xchg
inc
movsb
adc
scas
add
pushf
loope
out
test
rorl
cmp
in
lock
and
adc
js
popa
pop
jle,pn
or
mov
mov
ret
sub
mov
shrl
inc
jecxz
add
mov
adc
pop
rcrl
push
mov
pop
add
pop
outsb
clc
sub
mov
push
mov
inc
adcl
or
rorl
shll
aam
cld
dec
mulb
mov
insb
inc
cmc
cmp
sbb
lcall
jmp
inc
jbe
in
in
jo
xchg
mov
mov
cltd
clc
add
fwait
pop
dec
mov
outsl
ret
mov
cltd
xchg
cmc
int
shl
dec
shl
cmovno
ds
fdivrs
outsl
movsb
mov
dec
mov
idivb
repnz
cmp
decl
in
jns
push
in
movsl
aam
jmp
ret
test
shrl
xchg
push
add
fyl2xp1
lds
les
mov
lds
mov
jae
sub
lock
xchg
pop
add
imul
lods
cltd
popf
inc
ljmp
fistl
add
dec
movsb
dec
ljmp
and
dec
mov
xchg
sub
jge
pop
cli
xchg
sub
dec
or
les
inc
test
dec
imul
sub
int3
xchg
jne
iret
stc
mov
mov
push
and
push
sbb
sbb
stc
test
mov
ficompl
subl
outsl
test
sub
into
loop
or
and
aam
xor
xchg
aam
mov
lahf
icebp
loop
in
mov
mov
mov
dec
jp
inc
daa
lods
push
int3
dec
sub
test
push
and
add
add
dec
stos
fstps
addr16
pop
std
lahf
add
rolb
adc
xchg
ds
rclb
gs
pop
adc
adc
or
fidivl
cmp
ss
sbb
leave
mov
sub
adc
jecxz
into
enter
dec
adc
push
pop
cmp
shl
mov
sub
je
and
and
popf
or
pop
xchg
aad
nop
mov
or
shll
push
push
lcall
fwait
stos
push
int
aaa
icebp
aas
test
rol
bound
arpl
pop
lods
loope
dec
into
add
mov
stc
mov
je
xchg
pop
enter
inc
ljmp
xor
mov
addr16
pop
or
divb
pop
cmp
es
mov
mov
cmp
sub
mov
pushf
mov
xchg
insb
adc
push
lock
popa
idivl
dec
adc
push
jo
enter
out
imul
pop
xchg
test
es
out
ja
add
mov
cs
push
cmp
and
les
xchg
test
dec
in
ret
pop
add
js
sbb
loopne
movsl
test
aad
mov
pop
lea
push
popa
pusha
shl
adc
icebp
loop
cmpsl
out
sbb
fsts
in
int
enter
sbb
jge
sub
out
jp
sbb
jno
pop
xlat
repz
sub
mov
nop
pop
push
push
data16
call
mov
xchg
xlat
jbe
cmp
xor
lret
mov
push
and
inc
lods
push
mov
imul
je
les
ja
sub
cmpsl
clc
jmp
jno
test
cmp
jl
loope
mov
mov
add
or
outsb
stos
in
lcall
pop
mov
fwait
pusha
mov
imul
cmp
jne
inc
iret
adc
cmp
pop
lods
daa
sub
add
or
test
xor
push
mov
out
stc
sbb
jmp
pop
stc
lcall
xor
mov
data16
aam
fs
pop
ss
je
aad
or
sub
in
mov
out
dec
cld
adc
and
sbb
pop
sub
fnstsw
mov
pop
call
cmc
test
and
sbb
scas
push
jns
push
test
jl
test
pop
cmp
stos
fisttpll
les
cmp
ss
mov
cltd
data16
mov
xor
adcb
ljmp
popf
mov
cmpsb
pop
xchg
fwait
daa
cmpsb
mov
mov
mov
and
xchg
test
lds
dec
jmp
cmc
push
jle
outsb
cmpsb
jo
jae
int3
movsl
xorl
insb
add
add
cltd
leave
sbb
jge
jns
mov
adc
imul
mov
daa
and
push
mov
or
cmpsb
lea
sti
outsl
sti
pushf
cmpsb
testl
pop
std
dec
xor
mov
inc
mov
sub
adc
mov
lods
jecxz
aad
and
enter
out
mov
push
push
and
cmp
popa
mov
cld
cmp
mov
push
dec
lods
pop
mov
push
jmp
cmp
or
rcr
and
jmp
dec
sbb
push
cmp
and
dec
cmp
or
and
outsl
sub
sbb
sub
scas
shl
aam
lock
out
int
dec
cli
out
xchg
inc
insl
ret
fldcw
adc
add
add
sbb
cmpsl
test
mov
sub
adc
insl
or
inc
xor
call
pop
imul
loope
ss
push
jbe
shlb
jno
fisttpl
lahf
mov
mov
pop
dec
push
or
xorb
sub
iret
into
sti
mov
out
jg
inc
out
jmp
pop
xchg
loop
shrb
pop
rclb
jg
ret
insl
pop
subb
loope
fwait
inc
pushf
dec
shr
fdivl
rcrb
mov
jae
popa
xchg
hlt
jne
lret
push
jbe
add
fcomps
adcl
dec
lahf
repz
dec
mov
flds
push
jg
in
arpl
push
pop
push
pop
jp
and
dec
mov
sarl
push
clc
outsl
inc
xor
sar
stos
fs
test
inc
cmp
out
push
push
push
or
jg
jnp
sub
and
add
or
imul
xor
daa
mov
nop
jb
test
add
and
cmc
movsb
cwtl
cltd
cmpl
in
dec
inc
push
push
fisttps
inc
repz
sub
int3
xor
cltd
loope
out
mov
out
insb
mov
test
add
jmp
mov
sub
shr
lret
mov
outsl
push
sbb
sub
mov
loopne
lods
jmp
aam
mov
mov
xchg
outsl
xchg
inc
mov
out
push
negl
mov
dec
insb
xor
mov
scas
lret
sbb
push
jb
xchg
jnp
les
dec
jne
bound
cld
lcall
or
lret
test
repnz
in
fstpt
dec
mov
jno
mov
pop
fs
or
mov
lock
arpl
lods
or
and
push
jb
test
decb
outsl
flds
scas
jno
mov
bound
dec
mov
jecxz
leave
add
sub
cmp
push
and
dec
fsubrl
pavgw
lcall
jae
sbb
and
mov
pop
aad
xor
xchg
add
hlt
pusha
cmp
mov
mov
adc
or
sub
popf
or
and
rcrl
push
fldl
pop
in
add
pop
nop
mov
and
xor
sbb
js
dec
nop
xchg
shrb
out
jmp
jmp
lods
add
jl
fstl
lahf
mov
std
xor
pushf
xchg
adc
and
jbe
mov
or
icebp
jae
dec
jns
ljmp
jne
scas
jmp
and
push
dec
adc
cmp
inc
outsb
pop
jno
int
push
push
das
and
mov
lds
jl
enter
push
stos
cmc
push
push
cltd
lret
mov
jno
jge
pop
mov
or
dec
mov
ljmp
mov
into
testb
stos
jb
shll
test
and
stos
xlat
lret
inc
or
test
pop
aad
add
sbb
adc
icebp
imul
add
pop
lock
leave
insl
push
xchg
mov
fldt
adc
pop
scas
les
jle
outsl
add
idiv
push
popa
pop
and
cld
adc
shrb
pop
and
enter
sub
lods
jle
js
mov
popf
xrstors
js
push
popa
sub
clc
mov
mov
pop
add
test
mov
sbb
or
or
data16
adc
xor
stos
lods
call
inc
inc
popa
rorb
jb
xor
mov
mov
popf
xchg
or
addr16
popf
mov
jmp
adc
loop
popa
dec
popa
in
mov
loopne
sub
iret
jae
push
loop
inc
pop
repz
push
mov
int
mov
push
adc
xor
stc
sub
not
rcrl
add
out
push
jno
mov
xchg
or
or
in
xor
add
inc
out
out
rcl
repnz
mov
scas
pop
xlat
jge
repnz
or
scas
adc
inc
dec
divb
imul
jle
imul
sub
loopne
les
arpl
js
sahf
inc
add
pop
xlat
les
shlb
mov
jecxz
pop
jo
insl
fsubl
lods
loop
je
daa
xchg
and
ret
jge
mov
mov
subb
inc
stos
sub
jno
mov
or
negl
add
ljmp
imul
lea
dec
int
out
jne
lcall
push
adc
jne
addb
lcall
dec
ljmp
mov
shrl
stc
add
xor
test
xchg
jmp
loop
and
inc
inc
loope
xchg
repz
mov
cmp
stos
aam
mov
lds
xor
cmpsb
inc
ds
fwait
test
adc
adc
pusha
loope
pop
dec
adcl
lret
ss
mov
outsb
sub
sbb
jns
enter
add
cwtl
add
pop
cmp
jns
mov
lds
cltd
icebp
jnp
mov
sbb
push
mov
leave
push
fists
mov
xchg
jnp
ds
arpl
cmpsb
cmp
xor
sbb
mov
inc
mov
ds
push
mov
push
cmpsl
fcoms
jb
pop
pop
dec
std
and
hlt
leave
cmp
jle
lcall
popf
cmp
test
cmp
aaa
push
mov
cmp
cltd
imul
jmp
xchg
cli
mov
sub
dec
bound
rcrb
bswap
pop
xchg
mov
dec
mov
adcl
mov
sub
inc
add
arpl
mov
pop
jbe
pop
or
stos
fcmovnbe
sbb
std
sbb
mov
xor
xchg
outsl
pushf
scas
stc
ja
divps
movl
mov
fwait
mov
das
aad
mov
notl
test
sub
pop
push
insb
das
pop
lea
arpl
sub
scas
inc
dec
or
mov
sub
dec
adc
mov
xor
das
and
xchg
sbbb
roll
mov
sbbb
outsb
das
jnp
push
movsl
mov
lods
mov
dec
clc
push
sub
ffreep
jbe
pop
mov
sbb
push
inc
push
std
es
out
cld
mov
test
jbe
daa
mov
and
faddl
xlat
dec
adc
and
in
cmpsl
out
xchg
ljmp
adc
hlt
fnstenv
xor
ret
pop
stos
fisttpll
int3
sub
and
lret
sbb
clc
dec
lret
mov
ja
or
test
aas
arpl
jo
sbb
lods
mov
insb
scas
inc
lea
dec
cmp
sub
cmp
pop
add
and
sub
hlt
sub
ret
lds
shl
pop
sbb
inc
add
mov
loop
inc
test
jmp
xor
mov
dec
add
testl
testl
push
int3
scas
inc
sar
or
push
js
js
test
mov
jmp
lcall
flds
jnp
xchg
sub
ret
sti
mov
pop
push
mov
mov
ss
xlat
aaa
push
call
sub
sbbl
cmp
pop
shlb
lahf
mov
cmp
cs
cmp
dec
or
cmc
cmp
les
pop
fisubs
or
inc
sar
lds
je
stos
mov
jge
sub
in
mov
shll
pusha
leave
jl
mov
enter
adc
outsl
xchg
sub
add
push
out
into
mov
sbb
add
stc
lahf
iret
xrelease
pushf
pop
jno
pop
lret
addl
pop
aam
insb
xorb
outsl
jno
mov
cmp
rcrb
pop
faddl
xchg
rclb
ds
je
sbb
outsl
push
hlt
dec
pop
mov
fbstp
mov
mov
cli
outsl
xlat
ret
jno
xor
enter
xchg
mov
movsb
push
dec
mov
pop
mov
pushf
add
or
mov
mov
dec
loopne
add
out
out
inc
test
xor
test
jge
lock
xchg
or
fistpl
jge
lcall
sbb
and
daa
cli
jb
sub
push
call
cmpsb
jb
in
in
int
add
sub
cmpsb
test
xchg
ret
ljmp
leave
sarb
mov
jo
push
mov
sub
pushf
testl
mov
adc
gs
dec
mov
lea
sub
shl
outsl
mov
xor
pop
push
scas
rcrb
in
cmp
inc
mov
mov
dec
in
pop
scas
nop
cmp
sub
mov
jae
xchg
pop
es
push
fs
xor
imul
mov
dec
das
mov
xor
jae
xor
out
dec
mov
mov
dec
push
xchg
cld
inc
jno
xor
jns
dec
jnp
mov
lahf
dec
out
mov
pushf
mov
cmpsl
pop
add
stc
jle
jg
ds
cmp
push
mov
fisubrs
shll
jb
adc
icebp
ret
dec
daa
roll
cmpsl
jecxz
add
sub
jbe
cli
aad
mov
mov
shlb
repnz
sti
and
xchg
jb
jmp
push
mov
loopne
and
outsl
test
and
jl
push
mov
push
stos
stos
inc
jnp
pop
cmpb
xchg
mov
push
and
inc
pop
lock
jl
mov
in
jecxz
cltd
insl
add
inc
sub
stos
pushl
les
push
lcall
xor
test
pop
adc
lods
nop
sub
cmp
lea
xor
imull
jp
or
ljmp
andb
loopne
imul
push
test
dec
jne
mov
cmp
in
xchg
sbb
ficomps
hlt
outsb
mov
lods
cmp
jle
mov
idivb
xor
cwtl
push
cltd
or
subl
cmp
push
std
stos
inc
push
cmpsl
lods
pop
aad
fs
repnz
fwait
gs
inc
adc
push
or
daa
fwait
icebp
lret
sbbb
add
adc
mov
pop
inc
dec
clc
push
xor
sbb
pusha
sbb
imul
mov
data16
gs
mov
lea
mov
mov
imul
pushl
push
movsl
mov
adc
das
stos
cwtl
leave
test
xchg
icebp
es
pop
int
popa
sub
vpmacsswd
fcoms
subl
cltd
data16
lods
mov
out
ror
cmp
and
in
addr16
xchg
and
dec
mov
fwait
int3
std
daa
add
in
stc
cmp
mov
push
lock
xor
push
sbb
mov
sub
es
xor
jns
shrl
sbb
sub
add
dec
mov
addr16
cmpsb
mov
inc
fwait
sbb
xchg
xchg
sbb
adc
das
add
lock
imul
add
cmp
imul
cwtl
lret
out
and
rclb
mov
sahf
cmpsl
lods
push
mov
pop
shl
jb
cmp
cmc
xor
jne
sti
push
jecxz
je
cld
in
fidivrs
pop
ret
insl
les
fwait
aaa
orl
mov
sti
imul
inc
arpl
or
fdivrs
mul
test
cmp
inc
cmp
xchg
icebp
jnp
out
xchg
xchg
adc
jecxz
inc
frstor
into
dec
inc
bound
insl
pushf
int
dec
cmp
cwtl
xor
mov
push
and
adc
mov
cmp
pop
test
sbb
push
dec
pop
fiaddl
mov
pop
cmpsl
cwtl
pusha
mov
xor
dec
sub
pop
rorb
pop
cmp
pop
cmp
xor
xchg
adc
in
add
out
xchg
cmp
imul
cmp
adc
xchg
cmp
add
and
arpl
jge
jo
push
adc
mov
lods
fiaddl
repnz
pop
ljmp
cwtl
inc
daa
xchg
xor
mov
test
fiaddl
xor
jbe
pop
mov
and
je
inc
seta
pop
sbb
sbbl
outsb
scas
pusha
inc
popf
jle
outsb
adc
out
mov
mov
jno
imul
jecxz
xchg
push
inc
push
jbe
inc
mul
cmovae
or
dec
adc
add
call
push
pop
jl
cmpsl
pop
aad
mov
incl
scas
xchg
xchg
jns
mov
add
and
daa
sub
les
aas
and
or
cltd
push
out
add
dec
fmuls
pop
aam
js
jge
fists
pushf
dec
mov
jle
lcall
pop
bound
outsb
in
jecxz
adc
shll
fildll
mov
and
cmpsl
pop
sbb
mov
mov
fldt
test
fwait
out
sahf
add
xlat
cld
je
mov
loop
bound
jne
jbe
ret
loope
into
stc
dec
in
fcmovbe
inc
push
or
outsl
mov
cld
cmpsb
loopne
in
popa
testb
pop
fisubl
cltd
dec
push
mov
leave
dec
mov
cmp
sbb
testb
pop
ljmp
imul
xlat
jecxz
jp
or
pop
add
cmp
dec
add
cmp
dec
scas
jmp
add
jecxz
aad
and
bswap
lret
adc
sbb
mov
xor
push
mov
jecxz
faddl
cmc
shll
lods
xchg
jge
sbb
jp
mov
sub
movsl
das
cmp
cmp
xor
rcl
sbb
xor
stos
out
fistps
add
sbb
aas
push
aad
loope
push
jl
lahf
clc
ret
mov
dec
sub
or
and
es
mov
fs
cmpsb
inc
pop
popa
or
adc
arpl
sbb
lret
jno
paddusb
cltd
out
jp
lods
jecxz
mov
mov
pop
ror
xchg
mov
adc
filds
loope
mov
dec
bound
shlb
sub
clc
test
jl
jnp
or
js,pn
maxps
test
xor
in
add
int3
sub
iret
rolb
pop
aaa
sti
movsl
daa
imul
pop
pop
les
xchg
repz
ljmp
cmp
push
xor
cmp
fdivl
or
lcall
xchg
jl
shlb
divb
or
sti
inc
scas
cmp
dec
aas
adc
fsubrl
jnp
push
int
int
lods
clc
ds
sbb
inc
push
xchg
test
push
int3
mov
dec
iret
lods
outsl
cwtl
push
xchg
ja
or
sarl
push
pop
xchg
sbb
add
inc
data16
fsubl
cmp
mov
pop
dec
out
jp
rcr
lods
inc
sbb
lea
sarl
push
jle
pop
add
mov
pop
adc
cmp
and
in
faddl
fildll
mov
mov
daa
add
aad
mov
dec
aas
cld
mov
pop
push
and
mov
test
mov
push
xor
enter
cs
mov
xor
jmp
inc
int3
mov
add
bound
and
cli
test
cmpsb
movsl
xchg
es
dec
shll
je
ret
or
inc
les
ret
fcmovb
scas
stc
loope
add
int3
xchg
lcall
lea
mov
outsb
push
cmp
fstpt
mov
push
push
cli
cli
push
cmpsb
mov
xor
fidivrs
pop
je
xchg
xchg
xlat
push
bound
test
divb
jnp
push
mov
or
xchg
in
sbb
jmp
aam
in
inc
mov
and
mov
cltd
jae
negb
ffree
gs
adc
mov
add
dec
orl
xchg
sbb
ret
repz
mov
lea
in
mov
loop
xchg
lahf
mov
lahf
es
xchg
mov
inc
jae
dec
mov
lahf
and
bound
mov
xor
xlat
mov
adc
bound
into
lock
lods
mov
xchg
sbb
movl
adc
sbbb
mov
cs
mov
xor
divb
mov
ss
cmp
push
mov
inc
into
cmpsl
mov
jp
imul
and
lea
cli
inc
data16
mov
xlat
mov
ljmp
mov
mov
cmp
push
test
pusha
popf
jbe
mov
out
aam
adc
add
repz
lret
nop
mov
inc
cmp
hlt
testb
cmp
push
and
rorb
aad
or
jg
cld
push
popl
push
cs
cmc
addr16
stos
xchg
push
dec
cmp
fsubr
lea
lret
das
dec
shlb
add
shrl
test
ficompl
cmp
loope
sub
adc
iret
add
cmp
push
pop
js
sub
and
out
mov
mull
mov
ret
scas
gs
mov
mov
add
mov
xorb
aas
out
sub
cmp
jge
ret
int3
lret
rclb
les
outsb
cmp
repz
outsb
push
jns
pop
popa
mov
inc
repnz
xor
out
push
push
inc
sub
adc
push
xchg
mov
cli
jle
sbb
ss
cld
adc
mov
add
dec
outsb
aad
sbb
ljmp
mov
jb
cmpsl
sbb
pusha
push
jnp
in
sub
inc
call
cmpl
in
scas
mov
sub
sbb
mov
jb
imul
adc
out
xchg
sub
xchg
stc
fisubrl
xchg
mov
jp
addb
mov
inc
pushl
lods
add
push
addr16
adc
icebp
sbb
sbb
in
mov
pop
xchg
test
xchg
cltd
xchg
sbb
std
ja
pop
call
sahf
mov
dec
mov
insb
call
adc
out
mov
push
adc
xchg
or
pop
imulb
inc
icebp
push
adc
xchg
sbb
jns
ss
mov
stc
push
cmp
mov
mov
push
cmpl
cli
cmp
ja
out
fwait
int
jg
nop
sbb
arpl
or
sbb
add
mov
xchg
sub
cmp
loope
test
mov
mov
add
cwtl
xor
mov
and
ja
adc
rclb
inc
push
sti
leave
imul
push
mov
test
jne
or
les
push
xor
jge
fimull
ror
es
hlt
loopne
stos
fwait
inc
imulb
jnp
sub
icebp
lock
jecxz
ficomps
insl
xchg
fimull
mov
sahf
rorl
das
js
add
in
mov
inc
sbbb
mov
pushf
xchg
mov
add
pop
scas
outsl
mov
lcall
rorb
and
idiv
rcr
cs
push
rcl
sarb
and
jge
cld
add
ret
sahf
pushf
mov
lods
cmp
fstps
in
shrb
pop
mov
push
push
jne
fisubl
dec
or
dec
cmc
aad
xlat
inc
sbbb
adc
shl
repz
sub
repz
and
mov
mov
lea
repz
adc
and
xchg
gs
pop
mov
mov
xchg
fildll
lock
hlt
lret
or
dec
fs
sub
ret
mov
and
add
int
nop
shlb
jno
fisttpl
call
sbb
lods
push
push
rcl
adc
jge
jne
fucomi
out
xlat
lods
test
mov
sbb
cli
xchg
inc
imul
xchg
dec
in
in
jmp
lahf
xor
fistl
cmpsb
nop
hlt
fimull
dec
xor
pop
repz
test
dec
sub
and
xchg
int3
xchg
out
jecxz
push
sub
hlt
xchg
push
cmp
pushf
lret
mov
mov
mov
xor
xchg
clc
lods
movsb
pop
mov
iret
mov
dec
mov
nop
lods
cmp
dec
mov
cmp
push
and
test
push
cli
dec
adc
xchg
decb
int3
dec
dec
or
cwtl
nop
ss
je
jo
xor
inc
mov
sbb
mov
push
sti
xchg
inc
jne
pop
sub
lock
and
and
pushf
or
in
enter
lods
sub
shlb
sub
push
add
and
pusha
lods
adc
lock
or
inc
cmp
adc
xorl
loope
mov
cmp
movsb
xor
das
in
imul
stos
mov
lds
sbb
adc
call
sub
xchg
cmp
xor
mov
pop
mov
fldln2
mov
or
cs
inc
jle
sub
fisttpll
andb
xchg
out
dec
aas
mov
les
testl
push
push
xchg
ret
enter
test
orb
xchg
aad
nop
push
lds
and
stc
mov
outsl
rcll
mov
dec
pop
pop
rolb
or
jl
les
scas
push
jae
xor
and
push
mov
jge
or
icebp
add
clc
xchg
mov
addb
pusha
push
jg
dec
adc
fstl
jmp
cmp
fnstsw
repnz
leave
sub
or
mov
stos
or
xchg
ss
jb
and
cmpsb
scas
sub
mov
andl
insb
into
loop
je
lcall
arpl
or
and
data16
xchg
aad
mov
push
or
lret
mov
push
xchg
ds
mov
or
fnstsw
hlt
sahf
mov
jne
ficoms
negl
fs
fiaddl
out
and
cmp
mov
lcall
jp
xor
cltd
jecxz
jmp
js
lds
fmuls
int3
in
mov
xchg
xchg
aas
pop
popf
inc
lret
lcall
pop
inc
fisubrs
jp
adcb
xchg
call
std
pop
andb
das
sbb
test
add
call
inc
stos
leave
js
aad
add
shlb
cmp
xchg
scas
xor
lahf
and
into
jmp
or
clc
fmuls
inc
push
dec
test
mov
xchg
add
mov
xchg
jnp
push
xchg
cmpsl
ljmp
jo
dec
xorl
scas
addr16
mov
push
pusha
xchg
icebp
in
mov
and
popa
xchg
fwait
pop
stos
mov
add
xchg
adc
jmp
in
mov
loop
hlt
xchg
mov
sti
js
pop
mov
mov
xor
mov
dec
mov
ret
insl
out
or
hlt
mov
pop
sbb
daa
pop
xchg
fnstsw
std
fldt
xor
jnp
ss
mov
xor
les
mov
test
inc
sub
dec
push
inc
insb
ret
or
nop
int
push
jp
cli
test
push
shl
clc
iret
push
int
xchg
jo
aam
mov
test
inc
rcrl
out
mov
loop
out
sbb
test
movsb
add
xor
or
push
stc
repnz
pop
lds
popa
mov
sahf
out
jnp
mov
sub
mov
stc
jb
je
inc
mov
lods
bound
idivl
xor
push
punpcklbw
cmc
jp
xor
mov
or
shlb
mov
in
sti
xor
in
fiadds
mov
into
ror
fdivrl
push
cmp
lret
dec
dec
adc
pop
shlb
mov
out
sub
lahf
shll
aad
pop
daa
mov
adc
mov
rcl
mov
pop
adc
xchg
sbb
rclb
and
ds
fdivl
xchg
xor
cmp
xchg
jae
test
cs
std
adc
ss
cltd
incl
pop
test
mov
cmpb
imull
pop
cwtl
stos
cmp
or
stc
cltd
mov
sahf
addl
lea
sub
rcr
in
test
and
pop
aad
dec
gs
dec
or
rorb
sub
xor
aam
or
adc
lods
cmp
imul
cmc
lahf
and
adc
and
inc
push
sbb
inc
mov
sub
into
mov
mov
outsb
mov
outsl
or
pop
sbb
inc
xchg
sarb
add
xor
jecxz
mov
out
loopne
and
dec
ror
rorb
aaa
out
cmpsb
ret
add
lea
inc
inc
icebp
inc
pop
pop
pusha
pop
arpl
test
xor
xchg
mov
rorb
divb
sbb
pop
bnd
adc
mov
push
ret
dec
mov
cs
jl
inc
stos
lret
gs
sahf
adcl
jl
ret
dec
sbb
jnp
sub
enter
inc
int3
mov
lret
sub
mov
push
push
ds
dec
sub
mov
popa
jp
lcall
mov
mov
or
movsb
pushf
sub
lret
sub
push
aad
dec
sub
cmp
add
adcl
call
cwtl
adc
add
rclb
or
xchg
mov
mov
jecxz
inc
sub
out
loopnew
sub
enter
mov
adc
add
pushf
bound
outsb
and
nop
mov
ljmp
xchg
sahf
shl
stos
push
push
adc
icebp
cmpsl
iret
aad
mov
gs
dec
xchg
pop
mov
push
sbb
mov
and
jmp
mov
sti
inc
dec
pop
jmp
jnp
sbb
out
lods
int3
sub
xchg
imul
pop
cmp
mov
adc
leave
xchg
lods
das
das
push
jo
popa
and
in
and
scas
mov
jg
jo
push
cwtl
push
shll
xchg
sahf
push
ret
jle
icebp
jno
xlat
sahf
fimuls
ds
aad
xor
dec
jle
cmp
mov
and
dec
jae
adc
mov
mov
repnz
xchg
jp
mov
inc
shll
add
jge
adc
mov
sub
loop
mov
jmp
push
mov
scas
pop
jae
fdivl
xor
shr
mov
fwait
lea
jno
dec
pop
in
mov
pop
mov
sub
lret
mov
xor
out
notl
mov
jecxz
pop
in
pop
cltd
or
mov
gs
je
sub
sbb
shrl
bound
es
cmpsb
cmpsl
mov
stos
dec
adc
sbb
adc
call
loop
shll
xor
movsl
lock
inc
mov
mov
jle
jne
and
cmpsb
cmpsb
push
jo
mov
cmp
sti
pop
cmp
ss
ljmp
cmp
lods
test
roll
xorb
or
test
jne
shr
add
or
pushf
mov
xchg
mov
imul
pop
mov
sti
sub
jmp
and
dec
push
adc
icebp
rclb
jmp
call
clc
shl
dec
mov
xchg
jg
loopne
jmp
aaa
sbbl
inc
pusha
pop
push
mov
xchg
movsl
fcoml
lds
jge
cmpsl
int3
fisubl
jno
scas
adc
pop
hlt
adc
push
bound
and
jno
repnz
mov
dec
hlt
add
jbe
data16
subps
ret
dec
sub
lea
push
mov
cmp
mov
fisubl
add
fiaddl
movsl
popa
loop
rorl
fstps
sub
shlb
into
jl
scas
enter
push
adc
adc
jmp
in
sub
arpl
mov
jb
pop
add
jns
dec
inc
sub
xchg
imul
xor
insb
inc
mov
repnz
mov
out
lods
push
jp
pusha
inc
pop
cld
cwtl
jle
shlb
orl
enter
cmpsl
and
fbld
or
fimull
xor
adc
int3
push
orb
mov
ds
popf
andl
xchg
fisubl
mov
lret
sub
or
daa
and
pop
les
mov
inc
enter
andl
push
or
xchg
jbe
xchg
xchg
movsb
inc
stos
mov
movsl
mov
dec
daa
clc
xlat
es
outsl
dec
jge
xchg
adc
jno
or
push
je
pop
mov
test
jge
call
cmp
orl
nop
jle
fstl
out
pop
jne
adc
add
cmp
xor
jge
dec
jae
mov
in
loop
test
cwtl
lods
mov
sbb
and
mov
dec
cwtl
imul
iret
nop
pushf
pop
add
jmp
mov
sarb
jmp
jo
pop
inc
xchg
aam
and
jp
inc
and
jle
sub
out
ss
inc
cmc
lock
push
ja
in
sbb
inc
daa
dec
cmp
js
inc
dec
repz
int3
xchg
adc
pusha
jo
xor
and
es
cld
push
lret
jmp
repnz
and
xor
adc
dec
ret
push
scas
test
xchg
mov
fcomps
in
push
or
jp
push
add
cltd
cwtl
repnz
cld
mov
subb
into
jle
and
add
sbb
dec
imul
push
xchg
or
jge
mov
push
pop
out
in
inc
icebp
cwtl
outsl
sti
leave
mov
aas
addr16
pop
and
arpl
nopl
dec
sub
sbb
mov
cmpsl
sub
mov
cld
cmpb
and
in
dec
xchg
sbb
sub
inc
nop
dec
xchg
pop
jp
push
inc
xor
mov
stos
sbb
jle
xor
jns
pop
in
cmp
nop
leave
imul
push
inc
lret
jp
lea
jle
aad
insb
fcmovb
cmp
dec
jnp
add
decb
ficompl
sub
stos
jno
sbb
int3
arpl
out
and
out
push
incb
call
cwtl
movl
add
dec
cmp
rclb
stos
sbb
push
mov
icebp
movb
enter
lock
xchg
rorb
mov
mov
mov
pop
inc
add
sub
vpsubsb
mov
stos
xor
sub
cmp
dec
cmc
or
leave
test
call
sub
repnz
outsb
repz
inc
and
inc
dec
mov
leave
cmpb
xchg
idivb
clc
sbbb
loop
mov
or
fwait
ret
out
and
xchg
sub
jb
idivb
and
or
mov
loopne
sbb
and
in
test
mov
and
repnz
aaa
inc
jmp
mov
shrl
xor
pop
lock
pop
mov
dec
adc
cli
xor
mov
sbb
cvtps2pd
sbb
or
stc
inc
fildll
pop
mov
insb
popf
xor
rcr
and
aaa
adc
sbb
in
test
imul
sub
andl
sbb
lds
or
nop
add
mov
je
imul
nop
mov
std
mov
or
insb
mov
pop
gs
xchg
mov
jae
mov
push
mov
mov
sahf
lods
xor
pop
push
xchg
mov
xchg
ljmp
les
add
pop
orl
push
mov
mov
mov
cmp
cli
rclb
mov
xchg
jb
out
insl
xor
pop
stc
out
cmpsb
cwtl
shlb
dec
and
rclb
and
repz
jne
dec
ja
sbb
or
cmp
and
xchg
cmp
out
pop
cs
and
cmp
in
stc
sub
sbb
xchg
mov
mov
add
fwait
dec
cmc
inc
in
and
push
dec
xor
sub
jne
add
mov
inc
add
testb
stc
sbb
mov
push
shrb
lret
mov
fidivrl
out
mov
inc
ss
dec
icebp
out
add
xor
pusha
adc
cltd
pop
or
push
and
dec
cmp
clc
cmp
ljmp
shl
popa
dec
mov
les
out
and
sub
sbb
sub
jae
pop
adc
notl
add
pop
aaa
dec
cmc
inc
jg
cmpsl
push
call
aad
orb
les
out
adcb
bnd
mov
data16
sbb
lcall
dec
roll
leave
sti
lret
sbb
loope
loopne
dec
mov
mov
push
mov
mov
mov
push
dec
addl
cmp
jo
mov
jle
inc
pusha
ljmp
lret
cli
out
and
mov
mov
cmpsl
std
ljmp
or
pop
test
les
daa
insl
jecxz
jo
js
dec
stos
nop
decl
add
js
dec
addr16
push
sbb
or
add
jg
sub
jae
adc
addr16
jl
aaa
sbb
mov
out
cmp
gs
xor
popa
lea
fistl
mov
aad
in
imul
sbb
popa
das
stos
jb
push
mov
pop
test
cmpl
lock
sbbb
push
iret
cwtl
stc
xchg
dec
sti
out
sub
in
movups
xchg
inc
dec
pop
loope
shll
or
insb
add
rcrl
jb
movsl
dec
into
fstpt
cmp
adcb
fnstsw
in
inc
mov
andl
adc
cs
mov
je
enter
add
sub
cmp
lret
sub
outsl
lds
rclb
nop
or
or
in
push
leave
pop
fistpll
adc
mov
inc
adc
sarl
movsb
loope
test
adc
mov
and
mov
add
fldenv
mov
subb
sub
lock
xchg
pop
mov
jne
test
andb
and
loopne
lret
xor
inc
push
ja
mov
or
pop
pop
jbe
mov
aad
push
jecxz
xor
pop
mov
call
dec
rcl
call
xchg
fisttpl
cmp
cmp
in
scas
push
xchg
std
js
pop
popa
push
mov
adc
dec
xchg
jno
fcmovu
xor
jnp
dec
push
popa
push
sbb
sub
ja
ret
pop
dec
dec
dec
sbb
dec
jns
push
popa
mov
sbb
mov
cmp
into
adc
xor
push
cmp
pop
xchg
out
into
mov
icebp
fstl
adc
stos
or
ret
enter
ds
sbb
jnp
sahf
ret
repz
mov
icebp
xchg
xor
push
xor
pop
repz
mov
jmp
xchg
cmp
idivl
or
adcb
push
in
inc
mov
jo
es
in
sbb
loope
ljmp
inc
xchg
or
mov
pop
aam
jbe
stc
fcmovu
ss
jae
loopne
xorl
inc
xchg
outsl
popf
sahf
arpl
mov
push
mov
popf
test
adc
pop
xchg
dec
jo
adc
cmc
jl
push
mov
fnstsw
int
ja
mov
xchg
dec
mov
scas
mov
cmp
out
mov
incl
dec
mov
jo
rcl
test
push
les
js
roll
stos
push
mov
lods
dec
ret
scas
inc
pop
xor
fwait
test
sti
xchg
cmpsl
scas
dec
jb
adc
int
aad
jecxz
ds
lock
mov
inc
xchg
sbb
xor
fsubs
and
inc
xor
test
dec
fnstenv
jae
push
lcall
jb
addr16
inc
mov
mov
sub
and
fwait
insl
into
sub
dec
and
call
test
cmp
repnz
lds
imul
xchg
in
in
mov
sahf
mov
adc
cs
mov
add
mov
dec
adc
add
lods
in
mov
lahf
data16
jno
xor
sahf
mov
cmpsl
ficomps
cmp
pusha
int3
sub
mov
pusha
mov
cmp
and
jb
mov
lret
or
xor
xor
xchg
xchg
mov
sub
test
jle
out
sub
push
jae
jbe
addr16
adc
lods
add
inc
lea
push
jle
cmp
nop
or
push
inc
fyl2xp1
xchg
xchg
popa
push
cmpsb
je
fcmovne
mulb
jo
enter
pop
sbb
xor
jle
test
stos
dec
imul
scas
cli
lods
pop
leave
inc
dec
les
int3
xor
cltd
dec
pop
mov
jbe
rclb
push
pusha
mov
subb
sarl
adcl
mov
call
cltd
clc
push
adc
cli
lcall
dec
and
add
mov
add
cltd
push
mov
jmp
jne
mov
add
fistl
mov
loopne
mov
mov
inc
sbb
stc
xor
push
int
out
pusha
cmpsl
aas
xchg
push
dec
xchg
pop
fimuls
or
iret
arpl
push
dec
mov
or
jecxz
pop
sub
scas
aaa
xchg
jns
lret
nop
sbb
add
fistpll
insb
pusha
mov
inc
jno
roll
xchg
test
xchg
xor
mov
pop
mov
cwtl
pop
ret
fnstsw
mov
out
mov
pop
or
cmpsl
xor
cmp
test
add
les
or
sbb
cmp
sub
dec
sbb
lods
adc
call
push
pop
repz
cli
xor
pop
xlat
inc
fsubs
mov
mov
dec
movsb
andl
fadd
jg
xchg
lea
sbb
mov
xchg
cld
adc
movsb
lea
cmovs
mov
cmp
repz
aad
popf
pusha
add
and
mov
xchg
push
loop
mov
out
not
dec
adc
fisttpl
pmuludq
pop
mov
fcom
pop
dec
push
or
out
jns
in
or
mov
sub
aas
mov
xchg
xlat
dec
ds
ss
cmc
adc
xchg
xor
scas
test
es
je
int3
sub
icebp
scas
inc
sbb
pop
adc
lea
push
xchg
shr
mov
or
aas
stc
loope
pop
adc
insb
or
js
fsubp
push
jmp
mov
mov
inc
ret
stc
mov
cld
jns
pop
mov
cwtl
push
xor
pop
and
pop
pop
sub
sbb
in
xchg
dec
xor
cli
dec
inc
lahf
pop
mov
jle
adc
or
loopne
mov
push
out
xchg
mov
stos
push
test
sti
mov
cmc
xor
ljmp
push
ss
jno
lret
mov
popf
jbe
out
rolb
push
xchg
inc
shlb
mov
outsl
and
sbb
out
pop
std
cltd
aaa
aaa
inc
mov
in
scas
add
push
pop
add
fdiv
imul
xor
xor
imul
hlt
dec
js
jp
or
push
lods
cli
cltd
mov
out
mov
stos
int3
pop
or
insl
loopne
mov
inc
in
pop
push
fstpl
mov
movsb
sub
mov
xchg
push
cmp
fsub
cmc
pushf
data16
pop
mov
jns
pushf
mov
cmpsl
push
or
mov
mov
lret
mov
pop
cmp
nop
stc
int3
iret
sub
sbb
insb
ljmp
ss
sub
orb
push
inc
popw
stos
cmp
pop
adc
or
repnz
xchg
repnz
loop
jne
jb
repz
or
xchg
mov
iret
mov
push
or
ljmp
adc
xor
ja
cmp
aas
xchg
shr
fmull
incl
addr16
out
xor
sbb
xor
into
arpl
add
dec
loope
sahf
fcompl
pop
imul
popa
negb
pop
lods
mov
sahf
les
mov
subl
sub
clc
xor
mov
das
adc
ja
pusha
sti
dec
cld
hlt
mov
test
dec
or
xchg
or
hlt
lret
popa
fwait
aam
dec
xor
lock
push
roll
push
bound
xchg
jb
frstor
clc
repnz
add
and
inc
cli
dec
mov
mov
movsl
sbb
ljmp
lahf
add
mov
outsl
pusha
sub
roll
pop
or
jmp
jecxz
imul
movsb
lret
daa
addb
vpaddusw
movsl
nop
ret
sbb
push
dec
icebp
ret
mov
ljmp
loopne
adc
mov
pop
push
mov
sbb
pop
xorb
adc
imul
leave
xlat
popa
sahf
movsb
sbb
popl
out
outsl
shll
xchg
inc
pushf
aam
mov
cmp
orb
pop
mov
inc
pop
icebp
pop
imul
rolw
hlt
in
jp
jne
xor
scas
sub
sub
or
adc
lds
xchg
jns
inc
xchg
les
and
xor
sbb
hlt
sub
sub
dec
pop
mov
ficomps
mov
add
lock
sahf
adc
and
xchg
xor
mov
rol
test
add
and
push
ret
stos
out
mov
sub
imul
cmp
xor
add
sub
leave
es
sahf
mov
fiadds
jg
xchg
inc
std
sbb
ds
mov
arpl
adc
pusha
lds
mov
add
xchg
ret
inc
fsts
out
sbb
jle
das
shl
jns
sub
jle
test
outsl
lretw
movsl
adc
mov
decb
cmpsb
xchg
outsb
lock
addr16
xor
insl
lret
push
jp
sbb
cmpsb
inc
fistpl
inc
sti
adc
hlt
fisttpl
mov
sbb
pop
dec
push
sbb
jae
aad
test
outsl
lcall
popa
test
jb
xchg
push
jns
pop
popf
dec
loopne
dec
das
outsb
xor
xor
xor
xor
aam
push
mov
jae
bound
cli
adc
sbb
cmp
ds
mov
movsb
lock
xchg
das
inc
sub
jle
inc
ds
pop
pop
sub
int
negb
and
decb
jl
adc
int
clc
xchg
je
and
add
out
sub
pop
idivl
icebp
mov
push
insb
int
adc
loope
xchg
aas
adc
sub
loop
add
pop
daa
sbb
imul
loopne
fwait
jmp
das
or
or
insb
lret
fld1
jns
aas
mov
xor
sbb
and
clc
in
mov
fstpt
xchg
inc
cmp
loopne
mov
insb
sub
push
add
cld
jl
cli
adc
jg
xbegin
iret
in
test
into
fstpt
lcall
jbe
ljmp
mov
std
movl
add
push
jbe
pop
mov
repnz
and
jbe
lock
and
xor
push
pop
lods
cmp
mov
or
xor
daa
je
or
dec
aas
shrb
jge
or
pushf
mov
mov
fbld
push
xorb
lret
inc
lcall
add
inc
cmp
add
hlt
add
lcall
ror
push
cltd
mov
lret
movsb
xor
or
mov
sub
cwtl
repnz
dec
cmp
inc
jnp
sub
ds
arpl
es
cmp
neg
leave
jg
push
lret
jmp
cmp
mov
addr16
out
sbb
negl
lret
xor
inc
movsb
adc
jbe
pop
or
mov
mov
pusha
add
pop
fdivl
hlt
mov
jno
ss
sti
mov
lcall
mov
xorb
leave
insl
test
pusha
xchg
mov
xor
jle,pn
scas
dec
insl
pop
test
jge
cmc
mov
cli
pop
out
jae,pt
jl
arpl
push
mov
jg
int3
pop
mov
notl
jl
repz
add
ret
jg
sbb
mov
inc
std
out
loop
jbe
iret
jbe
sbb
pop
xor
int3
xchg
pop
fcomp
aaa
push
pop
inc
in
ret
fcomip
inc
add
add
cs
mov
fcmovnbe
fisttpll
les
leave
shlb
into
insl
sbb
mov
in
in
add
jg
iret
or
xor
xor
dec
adc
adc
jnp
bound
cwtl
fcomps
xor
mov
jnp
sbb
adc
sub
lea
outsl
cmp
fists
ja
rol
stos
mov
mov
std
jecxz
dec
stos
xchg
push
ret
clc
shll
lahf
data16
mov
cltd
es
inc
aam
sarb
shll
jne
sub
pop
add
fisttpll
pop
jg
jne
and
rcr
in
mov
inc
jge
pop
pop
aam
out
addr16
ss
inc
aaa
and
add
push
mov
mov
mov
lods
lret
pop
dec
jge
and
scas
cmp
mov
loop
lret
inc
insl
lcall
sub
adc
sbb
adc
scas
je
sub
stc
jp
push
in
inc
and
inc
pop
adc
mov
decb
push
xor
rcrb
xchg
lock
in
aaa
and
imul
jo
xlat
mov
push
loope
dec
cmp
insl
pop
rcr
in
xchg
arpl
inc
pop
sbb
jl
lods
clc
xchg
ljmp
cmp
xchg
pop
or
adc
adc
push
insl
jp
and
lods
dec
jno
push
dec
adc
stos
test
jne
mov
addl
dec
ljmp
pop
cmp
dec
mov
mov
adc
cmpl
add
dec
test
shlb
cmp
adc
std
stos
rcr
rolb
and
je
jno
push
or
or
mov
cmp
dec
stos
lcall
lret
sbb
lock
movsb
mov
lock
ljmp
test
sub
in
push
outsl
out
out
aaa
adc
inc
stos
mov
dec
lret
rcll
les
jge
push
orl
fwait
mov
imul
loope
scas
std
sahf
adc
lds
mov
f2xm1
inc
mov
add
loopne
test
lock
das
fmuls
cmpsb
push
pop
xchg
imul
aam
lds
xchg
stc
into
dec
sub
aas
sbb
push
fisttps
mov
push
bound
sti
les
inc
add
es
pop
push
fwait
sti
xor
loop
jle
dec
int
cmp
xchg
fs
mov
push
cmp
xchg
push
inc
subb
mull
mov
mov
rol
mov
sub
push
sti
xchg
jp
push
out
sub
outsl
out
aaa
cmp
adc
pop
repz
inc
jns
ja
inc
lea
not
fsubrs
addr16
mov
cs
xchg
pusha
sbb
xor
push
xchg
call
mov
adc
mov
adc
fdivs
pop
cmp
add
iret
test
mov
inc
xchg
bound
sti
xorl
aas
jl
cmp
cltd
call
xor
sub
push
dec
icebp
inc
and
mov
es
mov
pop
dec
int3
sbb
or
iret
and
fcmovbe
xchg
xor
jmp
lea
popl
xchg
sar
pop
sub
inc
pop
out
or
in
loope
out
lahf
ret
into
psadbw
inc
daa
jg
sarb
add
add
lcall
cli
das
inc
sbb
fldcw
mov
pusha
lods
fstps
push
jo
test
dec
je
and
sbb
push
and
aad
mov
lods
dec
jbe
xchg
mov
add
xor
or
and
and
mov
pop
pop
mov
mov
push
add
cmpsb
mov
xlat
clc
shlb
inc
push
dec
sub
fwait
imulb
cmc
xchg
cmp
dec
por
or
ret
leavew
add
fisubl
dec
fs
das
shll
inc
stos
mov
xor
jae,pt
mov
sahf
mov
cmp
and
mov
adc
mov
inc
pop
mov
mov
arpl
imul
fcmovnu
cmpsb
adcl
subb
dec
xchg
mov
ficoml
fidivrs
xchg
lods
mov
jle
cltd
cli
pop
sbb
jae
push
movsb
push
inc
sbb
jne
mov
mov
loop
or
fwait
dec
movsb
lcall
jns
rcrl
sub
and
pushf
out
jecxz
xchg
cli
xor
jge
cmp
mov
add
or
mov
push
inc
xlat
xchg
notb
ljmp
test
into
js
movsb
push
mov
and
lea
in
jmp
mov
cwtl
in
push
mov
mov
inc
push
lock
stos
data16
jae
sti
int
xlat
xchg
mov
test
sub
jmp
mov
or
enter
mov
loop
iret
outsl
push
and
clc
roll
mov
popf
ljmp
cmp
xor
shll
dec
mov
and
push
mov
adc
inc
je
insb
sarb
sub
lds
popf
imul
loope
mov
push
adc
jle
not
sbb
or
adc
ror
jl
pusha
xchg
loop
cmpsl
enter
push
pop
xor
fidivrl
xor
xor
fs
xchg
sbb
add
dec
out
mov
push
cmp
hlt
ss
sbb
mov
cmpsb
jno
mov
test
popa
test
repz
jmp
xchg
mov
sub
jbe
adc
stos
in
xchg
int3
adc
sub
mov
jno
push
sbb
xchg
mov
mov
loop
stos
push
loop
sub
jae
adc
cld
push
shlb
fucom
inc
push
ret
sahf
pop
inc
insb
lea
mov
inc
rcrb
loopne
xchg
arpl
sbbb
pop
rcll
pusha
inc
into
xor
cmp
sub
jo
rcl
push
imulb
std
inc
call
xchg
add
pop
mov
mov
aas
mov
repnz
xchg
cs
in
mov
int3
sub
mov
imul
or
fdivl
lock
xchg
jno
jne
loopne
push
lods
jle
mov
lret
icebp
inc
mov
js
pop
add
arpl
loope
jbe
testl
adc
inc
clc
shll
cltd
clc
jb
cmp
in
cmp
lcall
les
and
bound
push
jns
jg
jo
pusha
in
jb
mov
dec
loop
fs
or
jmp
loop
add
jecxz
and
xor
aaa
sbb
dec
lcall
sub
loop
aad
aaa
mov
xchg
fsubrs
data16
cmp
cmp
enter
fstpt
sub
xorb
pusha
sahf
pusha
and
into
imull
pop
jmp
data16
pop
repz
cbtw
sahf
push
sub
cmp
in
xor
std
mov
push
lds
fsubp
ficoml
aam
and
pop
cmp
cmp
test
loop
int3
testl
bound
xor
dec
fsubrl
cmp
add
in
lret
add
push
addr16
ljmp
imul
dec
push
imul
bnd
test
mov
xor
sbb
mov
push
inc
push
push
cmp
mov
out
int
xchg
adc
push
dec
cmc
jp
fildl
cmpsb
lcall
inc
fmuls
push
add
add
mov
lods
inc
subl
dec
inc
mov
ja
ss
mov
les
divb
and
or
mov
adcl
inc
clc
jo
fs
std
ds
pop
jmp
int
cld
loope
mov
dec
sub
cmc
push
push
dec
negl
jmp
inc
ja
stc
test
in
push
aas
add
adc
pop
xchg
repz
in
pop
inc
jmp
iret
mov
lcall
es
xor
rcl
push
mov
sbb
sbbb
scas
add
inc
jnp
xlat
and
mov
mov
cmp
push
mov
into
xlat
sbb
popf
in
mov
stc
adc
cmp
loop
mov
mov
rol
lds
repz
hlt
in
pop
dec
xor
sub
mov
test
popa
notl
lahf
or
in
push
shll
daa
pop
fistpll
mov
push
pop
mov
jmp
addr16
lret
add
iret
dec
sbb
pop
mov
dec
fisubrl
fsubs
mov
mov
movsl
jnp
mov
int
cmp
and
pop
sub
ficompl
daa
xchg
test
arpl
repnz
jns
push
and
popf
push
outsl
and
jae
jns
sub
and
lret
ds
mov
adc
add
xlat
inc
arpl
inc
shrb
sub
in
push
lods
outsl
mov
mov
loop
rcrl
inc
hlt
pop
or
jp
sub
test
enter
divb
stos
xchg
add
inc
mov
push
mov
mov
in
cmp
xchg
ds
cs
sbb
int3
xor
dec
fcompl
xor
push
or
stos
jne
outsl
int
cmp
arpl
mov
add
dec
sub
sub
sahf
adc
sbb
inc
loopne
loopne
dec
std
mov
cld
xor
shufps
idiv
icebp
mov
in
aad
pop
pop
sbb
imul
ficoms
add
jmp
cmp
scas
push
pop
add
sbb
cmp
or
push
mov
mov
lock
in
xlat
int
jb
push
stc
mov
and
clc
cmp
cmp
mulps
ss
fistpl
or
lahf
lcall
rcr
int
popf
cmp
enter
xchg
adc
ljmp
lahf
inc
test
inc
jae
pop
pop
aas
stc
scas
mov
addr16
insl
xor
jecxz
clc
ds
scas
cmp
mov
int
test
adc
mov
insb
push
xchg
fs
jmp
push
or
mov
dec
add
lea
dec
stos
mov
lods
pop
out
ret
imul
mov
xchg
fsub
mov
loopne
cmpl
xchg
mov
test
dec
dec
push
pop
or
pusha
pop
xchg
ds
mov
add
bound
sub
pop
outsb
mov
mov
cld
leave
mov
mov
sbb
aad
mov
dec
test
xlat
mov
mov
data16
mov
sahf
jp
dec
or
pop
sbb
jbe
lods
popa
aad
mov
xchg
popf
test
jecxz
and
imul
adc
and
ret
mov
adc
push
mov
xor
in
jb
es
inc
pusha
sar
add
mov
pushf
or
lcall
scas
xor
jne
ljmp
cmc
stos
stos
and
inc
inc
cmpsb
adc
lahf
jno
iret
push
push
add
sub
hlt
push
lret
lahf
ljmp
jbe
push
hlt
es
imul
es
inc
int
xchg
ret
sbb
repz
ds
cmpsb
mov
sbbl
popa
fdivrl
xchg
add
or
nop
scas
xchg
adc
xchg
jno
xlat
mov
punpckhbw
adc
sahf
mov
testb
pop
mov
inc
dec
mov
mov
bound
rorl
cmp
inc
mov
inc
xchg
addb
dec
addr16
dec
nop
lahf
cmpb
xchg
push
fnstenv
pop
nop
fistps
xor
lock
mov
arpl
rcll
or
shlb
or
mov
sub
fwait
mov
jne
outsb
and
mov
sub
cmpsb
aad
xchg
je
les
out
mov
adc
fistl
test
pop
lret
xor
iret
dec
movsl
loope
test
sbb
dec
cmp
xchg
sbb
fiaddl
rcrb
sbb
popl
scas
fwait
cli
xor
es
sub
sub
outsb
cmp
stc
xchg
enter
xchg
push
cs
lahf
mov
test
shll
test
int
fdivrl
or
dec
fwait
mov
dec
in
xchg
lahf
cwtl
or
jnp
cmpsl
cmp
cmp
fisubrl
jg
mov
jno
andl
push
ret
or
popa
cltd
push
mov
jbe
sbb
imul
popf
mov
xor
push
mov
sub
cmpsl
mov
mov
sub
xchg
and
leave
int
dec
xchg
sahf
xor
dec
rcll
hlt
arpl
mov
je
rolb
dec
mov
mov
lock
xor
sbb
mov
daa
add
int
daa
ja
enter
sti
mov
push
xchg
cwtl
dec
adc
jmp
sbb
lock
leave
adc
fisttpl
mov
xlat
outsl
or
jns
xchg
fwait
in
pop
inc
gs
sbb
push
xor
fstpl
out
rep
roll
cmc
movsb
je
add
decb
movsb
fldl
test
ljmp
aaa
cmc
mov
clc
adc
loope
stc
jno
xchg
sbb
dec
out
xchg
icebp
pop
scas
std
or
rcrl
es
fsubl
sbb
or
jno
inc
adc
mov
inc
or
fsubr
addr16
pop
scas
mov
rorl
clc
scas
rclb
das
mov
cld
rcrl
dec
pop
mov
lods
jno
or
pushl
lods
popf
mov
add
mov
fcom
dec
js
jnp
insb
xchg
das
push
pop
push
out
add
hlt
cmp
bound
inc
or
sub
adc
mov
mov
out
push
data16
adc
call
out
mov
add
scas
mov
jnp
or
push
imul
dec
mov
jge
xchg
xchg
out
and
jp
icebp
xchg
sar
sar
lea
hlt
scas
push
cmpsl
push
inc
and
xorb
inc
add
aaa
adc
pusha
cs
stos
and
xchg
icebp
xchg
xor
ret
push
adc
imul
and
enter
int3
into
test
movsb
shl
mov
shll
pop
inc
jg
call
cmp
cmp
mov
pop
popa
push
mov
sub
int
or
les
xor
jns
mov
cmpl
in
jns
jge
mulb
ret
ss
out
sub
sbb
mov
sbb
mov
insb
cmc
popf
xchg
dec
mov
clc
xchg
push
jbe
mov
rep
jno
insl
scas
xchg
inc
out
mov
xchg
movsb
outsb
out
jp
lahf
push
das
push
add
out
dec
jl
and
lret
jmp
jnp
fbld
or
dec
mov
jns
sbb
cmpsl
leave
leave
popf
icebp
popf
adc
pushf
jne
fisubrl
pop
decl
popf
cmc
dec
ficomps
lock
adc
popa
adcb
fcompl
add
push
mov
mov
jb
and
inc
cmpb
ss
add
mov
inc
xor
data16
pop
cltd
mov
mov
push
int3
fwait
mov
scas
xchg
cmp
or
jle
xor
and
je
test
push
mov
mov
mov
and
hlt
mov
outsb
add
mov
aas
adc
add
daa
jle
add
lret
mov
mov
bound
jno
inc
stos
mov
mov
push
aam
test
and
into
pushf
pusha
mov
cmp
popa
stos
add
push
je
mov
xchg
loop
in
cmpsl
dec
loopne
cmp
and
sbb
mov
jae
out
push
pop
aad
cli
es
shlb
inc
rcrl
cwtl
mov
test
insl
and
test
cltd
cmp
call
addr16
mov
or
add
and
sbb
sub
repnz
bound
stc
xchg
xor
je
iret
push
xor
aas
push
and
jns
jmp
sbb
rcll
cli
in
sbbb
loopne
or
dec
imull
pushf
lret
movsl
add
xor
stos
ja
and
or
jge
cmp
inc
push
jge
dec
aas
clts
mov
iret
loopne
dec
jno
repz
lods
inc
hlt
add
sbb
lods
sbb
call
adc
inc
mov
jo
jne
jp
jae
pop
stos
sub
cmp
pop
fildl
mov
dec
jns
aas
xor
outsb
jmp
xor
adc
or
shl
scas
addb
lahf
xor
jne
adc
nop
std
movsb
aad
popf
and
sbb
mov
and
sbbl
lret
das
loopne
fldl
dec
popf
jbe
sub
das
dec
sbb
sbb
sbb
sub
xchg
outsb
adc
pop
xor
lods
cmp
int
mov
dec
loopne
pop
push
shr
test
adc
test
inc
mov
push
adc
add
out
sbb
mov
outsb
add
imul
icebp
xor
shl
jno
pusha
mov
xchg
aam
jbe
dec
mov
pop
pop
loop
fstpl
xor
mov
ret
inc
pop
das
cwtl
adc
jno
jne
hlt
addl
fabs
ljmp
add
insl
adc
sbb
mov
sub
adc
loope
pusha
rclb
les
icebp
sar
dec
pop
stc
mov
cmp
rolb
fptan
and
test
dec
pop
xchg
xor
sub
je
push
repz
mov
lea
sbb
jb
loop
sub
push
and
mov
lods
hlt
pop
inc
nop
add
xlat
sbb
mov
adc
xchg
hlt
pop
lock
mov
sub
adc
add
pop
pop
cld
xor
sarb
das
test
js
lret
mov
adc
push
cli
popf
jmp
loopne
sub
and
jno
xchg
shlb
dec
dec
xchg
xchg
push
adc
jg
cmp
cmpsl
sti
dec
roll
das
lods
sbb
mov
fistpl
test
cmpl
aam
pop
ror
add
or
inc
mov
sub
repnz
pop
and
mov
add
cmp
push
cld
mov
and
dec
shr
stos
jmp
mov
rolb
repz
xchg
fwait
mov
dec
add
mov
out
push
out
push
outsb
push
xchg
and
mov
in
jge
hlt
loop
add
loope
mov
push
pop
and
movq
rclb
sbb
mov
int
gs
testb
xchg
fs
xor
aaa
bound
push
je
repz
xor
fwait
ds
dec
push
and
lea
loopne
in
push
lods
das
pop
sub
xchg
cmpl
mov
or
in
stos
out
mov
pushl
les
cmp
jp
mov
dec
lods
test
out
sbb
clc
and
xor
lret
pop
mov
iret
push
fadds
xchg
mov
icebp
xor
mov
rclb
leave
ljmp
fsubl
lret
jmp
mov
and
imul
adc
xchg
cmp
cltd
negl
stos
cmp
jne
inc
ja
in
outsb
scas
gs
jmp
call
sti
imul
jecxz
push
inc
icebp
mov
arpl
push
xor
inc
out
gs
enter
push
hlt
repnz
jecxz
out
and
ss
sbb
mov
pop
fdivl
xchg
pop
lods
pop
add
adc
mov
sub
loope
jne
pop
jge
sub
rorb
lock
jg
adc
stos
pushf
push
jl
cli
out
add
icebp
pop
daa
inc
rcrb
mov
push
jmp
ret
xor
dec
dec
pop
test
dec
push
mov
and
xor
xor
jl
pop
xchg
loop
dec
cmp
out
fwait
mov
lock
push
xor
fstp
jo
mov
fimull
xor
sbbl
rcrb
mov
xor
sub
mov
les
xlat
outsl
push
notb
sbb
push
add
dec
xchg
xchg
mov
fisttps
cmp
jne
mov
aas
subl
out
lods
sbb
xchg
sub
or
pop
sbb
fcomip
cmp
fxam
dec
jge
jb
test
fiadds
into
test
outsl
filds
mov
push
rcrl
fisubl
mov
inc
fldt
sub
inc
mov
cmp
xchg
rcl
adc
xchg
rcr
sub
add
pop
dec
stos
fdivr
repz
mov
mov
dec
movsl
or
enter
sbb
rcr
mov
lods
dec
sub
pop
and
add
adc
loope
mov
ret
jg
ss
mov
xor
or
adc
shll
insb
stos
inc
pop
bound
cli
push
in
cltd
sarl
fcoms
inc
std
fs
idivl
mov
sbb
cmp
jle
mov
out
jp
xchg
cmp
cmp
jmp
repz
fs
fidivrl
jmp
mov
icebp
jns
loope
jl
inc
imull
and
lods
ret
mov
lock
aas
lds
sbb
repnz
sahf
addr16
dec
sbb
outsb
sbb
pop
je
popa
fidivrs
in
call
in
pop
outsl
and
imull
pop
mov
cmpsb
jne
jp
xchg
xchg
xchg
in
movsb
cmpsl
nop
popa
mov
push
add
mov
ret
add
xor
rolb
lret
xchg
or
pop
stc
stos
aam
mov
or
pop
lahf
pushf
stos
jnp
aas
mov
arpl
int3
mov
add
sbb
dec
or
es
adc
fcomps
clc
dec
sbb
testb
sub
xchg
repz
jb
lds
mov
mov
pop
pop
ja
xchg
or
jne
lods
lds
push
xor
sub
das
mov
ljmp
add
imul
add
jbe
xchg
jo
popf
sbb
adc
imull
mov
fcmovnbe
or
movsl
and
daa
lods
into
inc
or
mov
ja
negb
leave
out
bound
lret
fisubrl
int3
aad
cmpb
aad
mov
jnp
lret
cmpb
subb
mov
adc
call
jge
popf
dec
lock
shrb
xchg
imul
mov
lahf
mov
push
pop
cwtl
push
push
jp
push
xor
adc
mov
clc
push
call
mov
push
inc
jle
xchg
or
lds
ficompl
jl
xchg
arpl
sbb
dec
gs
repz
dec
xchg
jmp
jmp
inc
sahf
les
jns
or
or
push
movsb
sahf
mov
and
add
and
cmpsl
sbb
lds
lods
cmp
dec
pop
rol
push
cmp
mov
mov
stos
ds
sub
fstl
dec
stos
pop
mov
loopne
aam
xor
mov
adc
xchg
insb
xchg
dec
sub
dec
cmp
inc
lret
mov
sbb
inc
mov
call
xchg
data16
iret
repz
jmp
jbe
fidivs
mov
xor
inc
xlat
jl
mov
cmp
lcall
jae
jno
inc
sub
push
fidivs
mov
dec
dec
cmp
cld
mov
cmpsl
cmp
mov
stos
test
imul
cmpsb
andb
pop
pop
lods
mov
outsl
out
adc
inc
add
pop
ja
cmpsb
inc
xor
and
dec
pushl
and
and
cmp
arpl
sbb
sbb
enter
loopne
mov
cli
adc
add
clc
ljmp
and
ret
sub
sub
dec
xor
in
or
ljmp
addr16
xor
xchg
loop
add
icebp
stc
imul
or
test
insb
xor
dec
sbb
int3
push
dec
imul
sbb
js
inc
gs
sub
in
popf
and
add
js
cmp
lea
jno
jo
frstor
pop
std
scas
mov
xor
dec
aaa
std
jo
mov
jle
jp
xchg
ret
sahf
lahf
fildl
adc
stos
idivb
lds
mov
out
dec
lret
movsl
sbb
add
mov
dec
inc
test
xchg
sbb
cmp
jnp
fsubr
xchg
nop
and
xchg
fabs
popa
inc
or
sub
into
lea
jbe
and
sbb
ficomps
jbe
pop
pop
mov
ds
mov
bound
pop
leave
mov
cmp
insl
or
fdivr
cmp
popf
movsb
mov
inc
xchg
fsubl
shll
dec
dec
jne
pop
jmp
ret
adc
loopne
mov
mov
inc
mov
mov
and
cmp
pop
jbe
adc
in
test
adc
jge
xor
out
mov
jecxz
push
stos
and
pop
outsb
jge
ja
jb
push
aas
jnp
sub
nop
lods
xchg
sarb
imul
pop
mov
or
cs
push
lock
jecxz
adc
jns
xchg
inc
stos
repz
daa
xor
lahf
repz
dec
xchg
push
loop
push
cmpsb
sti
mov
jl
push
add
gs
into
orl
pop
mov
rolb
cmpsl
test
stos
jae
sahf
ja
outsb
addr16
mov
jmp
flds
sbb
inc
imulb
lea
jns
cmp
adc
lcall
ror
in
aad
cmp
rdtsc
sti
sbb
shr
test
mov
add
lret
popa
imul
sbb
cli
out
mov
sti
data16
fistpll
mov
cmp
mov
cmpl
es
fnstsw
dec
jae
cltd
sbb
sbb
dec
sbb
inc
adc
and
das
addr16
pop
bnd
outsb
sbb
dec
mov
sahf
subb
mov
daa
test
dec
add
mov
iret
test
ret
mov
mov
adc
pushf
aad
popf
call
and
xor
push
push
push
sbb
imul
movsl
imul
xlat
push
in
add
popa
in
mov
cmc
cs
test
sbb
aad
pop
lea
incl
inc
and
lret
movsb
push
cmc
push
mov
pop
ja
sbb
adc
movsl
push
mov
inc
or
mov
xchg
loope
adc
cltd
icebp
addr16
sahf
leave
fs
out
adc
add
aas
add
mov
jge
or
aas
stos
or
in
push
daa
fcmovbe
fwait
xor
or
cmp
fsub
inc
pop
adc
jg
cmpsb
pop
repnz
add
es
pop
mov
push
es
xor
int3
mov
and
sbb
or
dec
insl
cmc
xchg
pop
add
mov
fcomps
lods
xor
push
pop
xchg
or
icebp
mov
out
lods
mov
test
aam
xchg
inc
lock
sub
sub
es
xchg
push
push
inc
lods
xlat
jbe
push
rcll
pusha
jns
pop
or
in
jbe
sbb
xor
xorl
cmp
pusha
ret
and
imul
test
push
jb
pushf
negb
pop
pushf
xor
dec
data16
insl
pop
std
insl
mov
ficoms
mov
dec
sub
or
xor
movsl
out
cld
cwtl
das
mov
testl
dec
int
adc
adc
sbb
fdivr
je
sbb
dec
jbe
inc
and
dec
rcr
mov
mov
outsb
std
pop
inc
das
cmp
mov
dec
xor
dec
pop
jp
xchg
int3
jmp
pop
mov
scas
or
cmp
mov
jae
sbb
push
adc
mov
nop
jp
mov
cmp
pushf
adc
jp
inc
adc
out
sti
cld
or
inc
iret
andb
mov
sbb
mov
cld
pusha
mov
pop
xchg
pop
xchg
or
push
sub
mov
mov
sbb
push
add
shlb
addr16
lock
cmp
mov
mov
mov
fstpt
xor
cmp
int3
div
notb
rcrl
add
sbb
fildll
cmp
cmp
mulb
leave
rcll
inc
add
cmp
dec
xchg
cmpsb
mov
loopne
or
xchg
pop
sahf
scas
or
pop
mov
add
pop
lahf
sub
call
gs
cmp
cwtl
mov
cmp
xor
xchg
ret
dec
mov
cmp
xchg
dec
jecxz
sbb
stc
call
cwtl
jbe
xor
adc
push
iret
adc
popa
dec
popa
xchg
cwtl
xchg
outsb
inc
cmpsl
iret
inc
jge
mov
mov
outsb
sub
scas
jno
test
in
xchg
push
mov
fildl
inc
adc
lea
push
ret
push
jmp
or
mov
pusha
jge
jns
sub
adc
orl
mov
rcr
mov
pushl
sub
adc
push
mov
push
mov
cmpsb
sub
adc
out
andb
out
xchg
mul
lods
cmp
fxch
sbb
fldt
or
adc
int3
mov
aam
lret
stos
call
mov
mov
testb
loope
sbb
scas
sbb
and
cmp
fidivrl
call
sbb
lret
xor
xor
fistps
xchg
pop
xor
add
or
daa
insb
push
mov
repz
leave
push
cs
xchg
scas
pushf
xor
ret
mov
mov
negl
loop
jbe
and
scas
and
xlat
inc
in
jae
out
add
push
in
xchg
mov
sbb
daa
sub
xchg
pushf
repz
cli
nop
mov
jle
ljmp
jae
not
std
call
sub
repz
cltd
jge
mov
push
fldenv
repz
loop
aaa
insl
mov
add
sarb
aas
addr16
or
jb
mov
aam
in
in
add
fcoms
out
popf
pop
fdivr
arpl
mov
iret
mov
jnp
loop
dec
pusha
inc
mov
pop
pop
add
ror
add
adc
inc
xor
sarb
data16
out
push
adc
pop
xchg
mov
sti
mov
pop
push
insl
mov
pop
jecxz
ds
popa
cltd
push
scas
mov
push
sbb
in
aaa
xchg
loopne
out
clc
mov
sub
sbb
into
fnsave
out
xchg
add
jge
sub
pushw
inc
popf
dec
js
mov
lret
and
mov
xor
neg
loop
jae
loope
mov
clc
sbb
lahf
repnz
cmp
pop
les
mov
pop
cli
imul
push
inc
push
shlb
addr16
xchg
stc
cmpsb
js
outsb
sbb
and
fistl
ds
out
sbb
jno
fmuls
leave
loopne
stos
insb
ja
xchg
jecxz
or
test
jmp
xchg
bound
push
das
jae
cmp
insb
sahf
pop
icebp
ret
mov
loop
dec
adc
xchg
cwtl
fdivp
pop
and
lret
std
daa
mov
fstpt
aas
or
mov
cmpsl
or
movsl
lea
mov
push
push
inc
addr16
shrb
jmp
xlat
or
mov
lret
push
loop
imul
cmp
adc
adc
cltd
and
cmp
rcll
jp,pt
xchg
cmpsb
push
mov
and
xchg
push
inc
mov
mov
lods
ss
push
data16
cmpsl
or
pop
cmpsb
js
testb
loop
outsb
mov
jno
push
int3
sarb
and
sub
xchg
adc
inc
in
shl
shld
add
addr16
sarb
in
dec
mov
in
repnz
cs
out
jno
pop
out
or
dec
push
jmp
cltd
les
pushf
mov
bound
cmp
and
lea
xchg
xchg
in
mov
es
adcb
dec
shrb
mov
cmp
sub
xchg
orb
or
push
clc
sbb
fmull
jmp
inc
ret
in
scas
call
xor
movsb
pop
push
or
jne
pop
fdivr
stc
add
aam
jecxz
and
or
imul
int
je
adc
insl
outsb
push
call
xlat
jb
add
dec
in
test
cmc
jbe
add
in
fs
mov
cmp
aam
sub
fldenv
js
cwtl
ret
adc
jl
lods
mov
mov
sbb
rcll
aad
add
mov
jg
enter
inc
test
and
fsts
dec
call
and
push
arpl
mov
push
inc
gs
cltd
mov
lea
subb
cmp
lods
pushf
push
repnz
sub
or
filds
sahf
sub
mov
lret
cmp
dec
lods
xchg
jmp
or
dec
shlb
aam
lock
movsb
repz
inc
xchg
subl
icebp
adc
jbe
push
xor
int3
cs
jne
sbb
adc
in
cmp
fst
fistl
ret
into
xlat
js
xor
push
mov
add
add
int
sub
adc
cld
fwait
dec
in
incl
pop
inc
data16
ds
fldt
cmpsl
mov
and
in
push
jns
sub
xchg
ret
push
aas
bound
sti
cmc
dec
inc
lods
add
jno
pop
pop
inc
jl
test
xor
decb
sarb
xlat
in
sbb
add
dec
fiadds
jno
push
xchg
push
sub
sub
push
cmp
cmp
sbb
mov
mov
mov
adc
leave
jne
test
jae
lods
inc
xchg
adc
push
or
in
add
test
dec
sbb
xor
jae
sbb
ja
mov
sub
out
fnsave
sub
mov
test
push
jae
je
jp
dec
loope
lcall
ret
ret
shlb
xchg
sahf
iret
adc
cmc
xchg
push
fwait
lods
into
mov
daa
jmp
cmp
or
xchg
stos
cmp
loop
pushf
je
fwait
in
sysexit
mov
jge
adc
rcrl
rcrl
xor
pop
in
call
scas
pop
filds
in
mulb
imul
stos
fsubr
les
add
lret
adc
or
cltd
and
arpl
std
loope
xchg
gs
and
xchg
dec
adc
xor
flds
js
dec
iret
and
imul
or
cmp
push
lds
mov
push
pop
cmpsb
xchg
movsl
xor
addl
push
hlt
js
addl
es
leave
xlat
sub
push
adc
mov
cmp
stc
sub
ret
lcall
cmp
adc
sarb
div
int
int
pop
insb
je
punpcklwd
rcrb
aas
orl
gs
arpl
inc
lds
ljmp
lret
sub
lahf
scas
or
push
fucomip
mov
jg
nop
jg
in
and
lods
les
es
imul
cmc
xchg
hlt
or
push
cmpb
pop
into
sbb
jge
or
pop
and
cmp
dec
sbb
or
xor
add
mov
pop
dec
aad
mov
dec
int
jbe
out
lods
push
in
lds
insb
pop
shll
dec
mov
cmp
sub
cmp
cmc
push
pop
xchg
jmp
dec
jb
xor
xor
xor
cmp
insl
xor
push
push
adc
outsl
aas
dec
lcall
cmp
hlt
add
mov
mov
lock
mov
push
scas
sbb
and
mov
enter
aam
inc
sahf
jge
loop
cmp
popf
pop
ds
sarb
fimull
das
push
or
aad
idiv
in
and
sbb
push
fdivrp
stc
push
mov
fldcw
outsl
test
dec
xor
aam
add
xor
jge
imul
mov
jno
in
and
dec
jne
mov
or
jle
dec
pop
loop
sti
push
adc
add
mov
loope
subl
sbb
dec
xor
arpl
mov
add
cmpsb
insl
into
sbb
mov
jne
add
repnz
jno
or
test
and
rorl
incl
out
dec
mov
mov
push
loop
mov
add
or
inc
mov
mov
cs
adc
mov
mov
lcall
imul
inc
fdivr
jle
or
sbb
enter
mov
shl
cmovl
sub
mov
adc
push
stos
pop
adc
and
cli
jo
test
pushf
inc
divl
or
lahf
cmp
or
xchg
vpcmpeqw
enter
rcr
fmuls
adc
or
and
fiaddl
sbb
pop
jecxz
xorl
les
subl
into
lret
mov
jmp
push
inc
cld
rcrl
fs
movsl
pop
jbe
stos
jmp
dec
pop
xchg
jp
inc
add
movsl
int3
scas
aas
cwtl
sbb
repz
fldt
mulb
mov
xor
hlt
push
ds
mov
test
dec
fs
mov
cltd
jmp
mov
jg
sbb
add
pop
jae
pop
sub
dec
pop
mov
sbb
adc
and
pop
jno
push
push
cmpsl
xor
cld
xchg
das
loopne
inc
xchg
stos
iret
enter
movsl
stc
lods
sub
rclb
cmp
jge
pop
mov
in
xor
pop
xchg
fdivrl
xchg
jecxz
stos
and
lret
xchg
je
sbb
sbb
xchg
cmp
jge
add
or
xchg
fists
push
sub
cs
je
lret
cmpsl
data16
jg
add
sub
les
aam
mov
push
lods
xlat
scas
push
pop
cwtl
sarl
out
xchg
mov
aaa
mov
je
add
test
xchg
xchg
dec
xchg
xor
rcrb
das
mov
sti
rorb
addr16
lods
mov
sub
jge
std
rclb
and
jl
mov
es
test
pop
test
scas
inc
push
int3
add
add
cltd
sub
stos
arpl
out
inc
out
jmp
push
pop
or
sbbb
cmp
testb
jecxz
arpl
xchg
lahf
imul
arpl
adc
or
xchg
aam
faddl
in
jbe
stos
movsb
testl
push
and
mov
mov
lret
mov
pop
xchg
add
sub
jmp
gs
arpl
iret
cmp
loope
stos
xchg
shl
xchg
jge
xchg
cmpsl
lds
out
lahf
cmp
mov
add
dec
lock
dec
stos
out
pmulhw
call
adc
inc
faddl
xor
jb
je
and
or
cmp
mov
pop
adcl
dec
sahf
cltd
mov
loop
fsts
cs
mov
lret
into
int
jl
lods
popf
cmpsb
mov
xchg
push
mov
jbe
mov
pop
adc
adc
push
mov
mov
push
scas
aam
fidivl
shrl
out
insb
mov
int3
stos
out
iret
add
pop
xor
jmp
inc
dec
dec
jge
aad
mov
push
jno
imul
cmp
and
lods
insb
outsl
xor
movsb
jae
jmp
shl
push
add
add
sub
lret
int
clc
lahf
in
cwtl
int3
popa
lahf
jo
add
vmptrst
cli
ljmp
outsb
mov
nop
flds
outsb
movsl
ret
addr16
mov
out
push
inc
cli
sub
push
sub
outsb
jae
iret
ss
sub
adc
frstor
push
fadds
cltd
adc
fisubrl
dec
add
aam
sub
into
test
mov
insb
test
int3
fwait
add
ds
aas
fmuls
sarl
pop
sbb
cmpb
adc
sarl
test
or
incb
and
mov
mov
cmpsl
jge
out
jmp
mov
mov
shlb
xchg
icebp
jg
xchg
and
iret
hlt
and
or
dec
or
lods
mov
xchg
es
bound
fucomp
dec
and
inc
cs
inc
sub
add
fwait
cld
add
push
sub
mov
sub
and
fiadds
aas
das
inc
xchg
lret
in
lret
add
dec
sti
mov
ja
aad
bound
sbb
fdivl
pop
xchg
pop
adc
lods
adc
lods
jo
ja
sub
jmp
sbb
pop
lods
dec
sbb
aaa
mov
std
int3
ja
inc
pop
fldcw
ficomps
and
aas
sti
cld
mov
imul
cmp
cli
mov
jo
sbb
mov
lret
mov
out
inc
les
add
aaa
lcall
icebp
sbb
cli
dec
jecxz
hlt
cmpb
test
cmpsl
or
jbe
dec
out
add
in
sub
ss
mov
add
dec
je
test
inc
dec
or
loopne
sub
or
scas
push
pop
pop
nop
popf
xchg
adc
cmpl
pop
push
adc
les
xor
adc
stos
xor
sarb
je
out
mov
inc
dec
stc
push
and
sub
bound
adc
pop
mov
repnz
cmp
rcr
repnz
popa
sarb
jbe
cmpb
jns
int3
lock
inc
pop
das
sub
data16
jne
inc
iret
fs
and
dec
push
jmp
call
insl
dec
scas
jb
icebp
and
shl
jb
ret
cwtl
in
aaa
pusha
dec
cwtl
or
and
add
in
mov
into
arpl
cmp
push
cmc
dec
sbb
out
mov
xchg
repz
frstor
les
adcl
addl
lea
push
adc
and
or
dec
xchg
stc
aas
inc
dec
rol
movsbl
mov
test
inc
jecxz
repz
and
into
jae
scas
daa
push
inc
xchg
in
rorl
mov
rcrb
inc
xor
repnz
test
adc
sbb
inc
adcl
sarb
mov
pop
inc
mov
pop
sub
iret
dec
hlt
xchg
andb
leave
fistpll
nop
ds
push
stc
add
add
lds
les
mov
sbb
cltd
push
xchg
xor
repnz
sub
jbe
sbb
pop
add
je
dec
adc
cld
and
iret
mov
cmp
and
dec
imulb
loop
push
dec
insb
add
leave
stc
jmp
test
adc
std
jns
dec
mov
data16
repz
cwtl
add
push
movsl
leave
adc
lret
dec
push
xor
sbbb
testl
shll
push
ds
icebp
xlat
mov
add
sub
and
test
cs
add
pop
popa
pop
pop
sbb
cmpsl
adc
iret
xorl
fwait
pop
loopne
rcrl
inc
dec
stos
xchg
scas
dec
notl
hlt
push
mov
cmp
mov
jl
clc
test
sti
repz
push
repz
jno
rcrl
mov
clc
dec
push
arpl
add
icebp
xchg
jl
push
ja
addr16
sbb
adc
rcrb
inc
xchg
jo
fwait
add
xor
loope
int
and
sbb
xchg
in
lcall
pop
fldenv
stc
imul
pop
mov
dec
adc
fwait
push
pop
dec
mov
out
divb
cmp
fildl
push
arpl
addb
cmp
iret
adc
sbb
or
push
xor
mov
hlt
sbb
shrl
dec
lahf
subl
je
cwtl
mov
cmp
mov
dec
loope
loopne
xchg
pop
mul
daa
std
stos
adc
xchg
rcrl
add
xor
mov
hlt
fldt
mov
orb
inc
add
adc
xchg
in
out
aas
dec
xchg
sub
lea
icebp
bound
fcoml
sbb
jno
xchg
sub
orl
cld
jbe
rcrl
imul
push
jle
dec
jmp
cwtl
cmp
jg
pop
push
pop
je
int
sbb
loopne
xchg
or
mov
xor
lock
cmp
mov
jl
not
push
leave
ja
push
xor
xchg
in
mov
pop
add
loop
mov
loope
mov
xlat
aaa
adc
pop
or
sub
ja
mov
sub
add
in
enter
out
sbb
push
push
dec
rclb
mov
xchg
in
in
push
mov
mov
mov
push
data16
dec
lods
std
xor
cmp
imul
ret
inc
outsb
adc
lahf
xchg
and
test
mov
ds
fld
fbld
lds
js
cli
filds
xor
clc
arpl
loop
popf
or
loope
xor
inc
repz
bound
stc
cmpsl
push
inc
test
mov
xchg
mov
dec
xchg
push
xchg
xor
bound
daa
aam
aad
fstpl
push
add
or
in
sar
sub
jl
cwtl
inc
call
and
imul
fidivrl
adc
xor
sbb
test
inc
fcmovb
xchg
clc
dec
rorb
mov
pop
jns
mov
cmp
cmc
inc
xchg
loopne
jmp
loopne
mov
jmp
ljmp
in
pop
mov
inc
enter
loop
xlat
jno
inc
xor
stos
sti
loop
mov
arpl
subl
add
nop
adc
icebp
mov
inc
int
fstpl
std
push
sbb
test
mov
inc
test
test
in
adc
fnstenv
jecxz
out
lds
movsl
rcl
mov
jnp
ljmp
pusha
mov
shll
bound
cmp
add
jmp
and
xor
sub
jle
pop
sbb
psubb
imul
mov
and
dec
scas
xchg
mov
out
outsb
xchg
push
xor
call
xchg
ficoml
push
lock
loopne
cmpsb
nop
stc
je
flds
jl
xorl
bound
outsb
out
in
nop
and
fstpl
gs
mov
jo
push
xor
popf
pop
dec
inc
lds
fbld
mov
nop
aas
fwait
dec
inc
xor
pusha
hlt
addl
jl
aaa
lret
mov
push
loopne
jecxz
mov
call
popf
ds
jae
repnz
lret
jnp
call
xlat
mov
dec
sbb
add
adc
inc
mov
arpl
mov
cli
add
mov
ret
sti
or
pop
xchg
jnp
xchg
mov
dec
mov
testl
imul
ret
mov
inc
or
loope
xor
pop
stc
jge
movsl
test
fadds
lea
loope,pt
mov
mov
cmpsb
xchg
outsl
and
mov
adc
lret
daa
cmp
je
push
inc
xchg
mov
loopne
inc
push
dec
dec
adcb
or
sti
pop
sbb
subb
cli
mov
pop
sbb
scas
cmpsb
adc
adc
or
sti
mov
and
adc
lahf
jmp
aad
orb
ror
addb
cld
fnstcw
inc
mov
mov
aam
lock
shl
cmp
or
xchg
je
cmp
push
mov
mov
xor
mov
push
ja
dec
push
loopne
out
add
push
daa
in
mov
add
mov
xor
dec
push
ljmp
and
jb
lods
pushf
out
inc
movsl
nop
sub
mov
mov
cmp
setl
mov
xor
pop
xor
push
push
in
je
outsl
push
push
inc
clc
or
jmp
enter
jne
cmp
dec
pusha
loopne
cltd
sbbb
xchg
mov
sbb
pop
pop
mov
pop
jbe
icebp
jbe
rol
std
dec
movsl
jo
adc
sarb
shl
and
mov
test
sbb
mov
aam
mov
cmp
pop
repz
xchg
loope
sbb
add
sub
sub
jle
add
xchg
in
cld
push
jp
sub
jge
sahf
and
pop
arpl
movsl
out
pop
out
hlt
mov
push
sti
stos
xchg
push
add
xchg
in
xchg
adc
push
cmp
js
inc
sub
and
lcall
cmpsl
xor
cltd
ds
imul
loopne
cmp
loopne
data16
lcall
aas
leave
and
jno
mov
xor
adc
stc
xchg
invd
and
loop
pop
dec
fdivl
push
cmp
pop
xchg
inc
xchg
rclb
mov
mov
add
enter
mov
pop
ret
out
shlb
xchg
stc
jnp
insb
outsb
xchg
ret
in
fs
inc
cmpb
pop
pop
mov
icebp
sahf
jp
push
enter
sbb
shll
shll
dec
cmp
in
jecxz
xchg
cmp
in
into
mov
pop
sub
pop
add
cmp
lret
ja
cmp
insl
shrb
and
and
aad
into
stos
shlb
or
ss
and
push
cmpsb
jmp
pop
insb
push
xchg
mov
mul
fcmovbe
in
dec
loopne
mov
jbe
les
movsl
jb
out
add
push
mov
mov
sub
lcall
adcb
pop
push
addr16
stos
ljmp
ffree
push
push
cmp
xchg
pop
jg
xor
dec
rclb
out
shll
xchg
inc
adc
dec
pop
inc
lahf
mov
leave
push
add
mov
fists
cmpsl
icebp
push
stc
int
cmc
out
mov
and
movb
aaa
ljmp
loope
insl
pop
jg
add
push
fisubs
insb
out
icebp
std
sub
out
jl
scas
out
jecxz
rolb
jae
cmp
inc
into
inc
call
fisubl
je
scas
pop
and
pushf
repz
jns
sbb
out
hlt
inc
mov
cmp
dec
mov
inc
lods
and
mov
push
pop
fadd
push
cmp
clc
in
adc
int3
hlt
cmc
sub
inc
jnp
or
xor
mov
in
fs
push
xorb
inc
std
add
insl
sub
xchg
into
insl
mov
out
pop
ljmp
cwtl
and
pop
push
xor
cmp
data16
jg
jnp
sub
rolb
pop
ret
mov
jb
xlat
sti
sub
push
clc
inc
sub
jg
jns
add
std
js
cmp
fwait
and
add
ret
push
into
aad
mov
loope
push
lods
in
jbe
popa
cmp
push
add
insb
push
mov
std
arpl
xchg
pop
insb
sub
sbb
xchg
cmpsb
sbb
jno
sbb
sbb
arpl
in
dec
fdivl
in
ss
loop
ja
mov
addr16
jmp
or
rcrl
out
dec
in
fistps
imul
jns
pusha
adc
int3
push
pop
sub
pop
cli
lret
and
test
outsl
divb
mov
dec
les
fidivs
jno
cld
xor
daa
ret
dec
divb
adc
pop
popf
xor
mov
dec
shll
and
push
or
mov
lret
mov
add
pop
lods
rcl
int
fmull
push
push
inc
dec
leave
dec
xorb
cmp
jbe
aaa
or
mov
shll
cmpsb
scas
push
fidivrl
cmp
lds
fnstsw
int3
divl
leave
fsub
in
rcrb
fistps
xor
mov
mov
pop
push
and
arpl
call
pop
mov
or
dec
test
mov
pop
cmp
in
gs
lahf
popf
cmp
sub
outsb
xchg
push
sar
repnz
hlt
mov
cmpsl
clc
clc
push
pop
fs
mov
mov
fwait
shrl
xchg
in
inc
ds
lods
xchg
push
adc
scas
outsl
cld
jecxz
in
mov
leave
pop
or
mov
repz
sub
adc
adc
out
pusha
mov
cmp
data16
cmp
repnz
aaa
add
add
cltd
les
or
mov
pop
xchg
clc
les
inc
inc
inc
xchg
dec
es
call
imul
hlt
out
addl
sbb
ljmp
xchg
pop
aaa
mov
dec
sub
outsl
pop
xchg
lahf
inc
lcall
or
jno
jne
lods
mov
jne
outsl
adc
loope
xor
mov
push
lds
arpl
ss
mov
clc
mov
into
scas
mov
push
pop
add
mov
add
popa
mov
repz
lods
shll
adc
jecxz
mov
fisubl
fldcw
insb
movsl
jo
jl
ja
adc
fsubrp
imul
imul
and
jbe
pop
ds
ss
outsl
sub
or
pop
stc
repnz
inc
cmpsl
lods
iret
xor
ret
cs
jmp
imul
stc
mov
roll
movzwl
test
ficomps
cli
call
cli
decl
out
jecxz
sub
repz
inc
push
jns
fdivrl
pop
fists
out
push
mov
pop
cmpsl
mov
jb
inc
xor
pop
fcomps
lds
dec
js
sbb
inc
jl
xor
fcmovnb
mov
fsts
shlb
mov
bound
inc
and
inc
mov
icebp
imul
cmp
es
or
mov
shl
xchg
jbe
out
shlb
fsts
jg
xor
jg
ljmp
aad
pop
push
inc
push
adc
idivb
mov
mov
loope
xor
mov
xchg
and
push
rclb
jne
sbb
jge
pop
lret
popa
xor
jge
sub
hlt
sbb
shll
jns
xor
negb
push
push
jbe
sbb
rclb
iret
mov
xchg
cmp
movsl
cmpsl
push
ljmp
daa
jb
or
inc
or
fsin
lods
mov
outsl
mov
jb
push
leave
insb
sub
mov
in
or
xor
std
and
mov
adc
cli
push
jo
hlt
adcl
das
and
jl
dec
cmp
shll
ror
adc
pushf
push
jmp
clc
cltd
push
push
inc
mov
rcrb
stc
aad
pop
or
shrb
ret
sub
lds
jmp
mov
sub
pop
testl
sbb
fdivs
mov
sbb
pop
je,pt
or
test
mov
sub
daa
and
xchg
xchg
jo
push
inc
inc
push
jbe
dec
jno
or
add
fimull
clc
scas
jbe
fcompl
cmp
mov
cld
call
xor
cwtl
stos
jae
and
mov
or
into
dec
sub
inc
inc
push
sub
pop
or
gs
cmp
pop
and
testb
test
jmp
xchg
push
fisttpll
pop
jnp
jp
and
sbb
sub
sarb
int3
mov
add
inc
shll
test
inc
mov
int
gs
lret
aas
pop
aam
mov
in
pushf
dec
and
xor
aad
add
out
test
push
pop
test
jns
or
and
xchg
sub
imul
mov
sar
inc
adc
jmp
out
int
add
gs
cli
imul
cmc
push
pusha
sbb
mov
movsl
daa
enter
or
mov
cs
lret
outsb
jge
scas
lods
or
sub
add
loopne
ret
mov
sub
push
aas
sub
out
jecxz
sbb
ljmp
xchg
adc
push
xchg
ret
xchg
mov
mov
in
insl
test
orb
mov
repnz
loope
jbe
or
shlb
popf
fsubr
mov
mov
push
out
dec
inc
mov
aaa
les
imul
int3
iret
pop
and
sub
push
pusha
adc
sbb
sbb
add
mov
jns
icebp
lret
push
leave
add
dec
stos
test
shll
lahf
lds
bound
or
add
xchg
dec
xchg
fisttpll
sti
fmull
or
lods
inc
stos
push
mov
or
insl
jmp
sub
push
xor
push
fmuls
xchg
sbb
fwait
adc
inc
nop
add
push
mov
mov
roll
and
push
fisubrs
jne
dec
mov
test
movsl
shll
adcb
and
mov
jmp
rolb
jbe
jmp
push
ucomiss
std
rolb
loopne
shlb
cld
bound
stc
popa
pop
addr16
xchg
addl
mov
dec
sub
xchg
aad
mov
ret
push
daa
lret
adc
xchg
cmc
insl
pop
out
push
call
loopne
mov
in
stc
sbb
cwtl
pushf
ret
test
xchg
clc
xchg
loope
fsubl
push
hlt
leave
fsubr
sti
inc
out
dec
decb
pop
sbb
xor
movl
popa
inc
js
sbb
stos
dec
sub
sbb
or
xchg
mov
push
dec
or
xchg
aam
xchg
sbb
movsb
dec
jge
sbb
fmuls
int
jbe
lods
push
insb
push
fcompl
rorb
push
pop
in
push
cwtl
int
sahf
loop
pop
dec
lret
jbe
pop
dec
aad
jno
push
test
add
fs
jb
sbb
add
leave
mov
popf
mov
inc
pop
mov
cltd
push
mov
pusha
push
insb
sarb
bound
scas
jae
out
dec
pop
push
cli
mov
push
and
push
xor
and
jno
inc
sahf
push
aam
inc
ret
mov
ss
push
push
aaa
push
jmp
addr16
adc
insb
imul
out
int3
xchg
and
add
mov
dec
pusha
icebp
rclb
mov
or
scas
pop
jo
movsl
cmp
jno
shlb
clc
and
add
dec
jl
dec
fisttps
add
fidivl
aaa
test
jno
js
xchg
push
mov
loope
sahf
sbbb
xchg
clc
add
out
adc
and
mov
adc
dec
inc
mov
and
mov
sahf
sbb
pop
xchg
fcoml
repz
je
cli
pop
aam
mov
insb
dec
adc
xcrypt-cbc
cmpsl
xlat
icebp
aam
mov
aam
sbbb
mov
cli
push
sarb
inc
mov
gs
mov
test
cmpsl
xor
add
dec
das
sub
xor
cmp
mov
dec
repz
xchg
sbb
xchg
outsl
cmp
adc
jae
sbb
lods
push
loope
pop
fwait
movsb
lahf
sbb
in
jns
push
pushf
popa
shlb
ljmp
push
in
adc
xor
cmc
mov
scas
mov
xchg
rol
ds
stos
sbb
insl
dec
or
mov
fcmove
sahf
rolb
imul
or
notb
insb
push
data16
add
xchg
dec
pushw
mov
aas
jne
and
push
mov
aaa
inc
popf
push
add
outsl
mull
pop
mov
int3
in
sbb
mov
jno
outsl
stos
test
je
inc
push
bound
xchg
push
out
pushf
and
sbb
aad
mov
aam
pop
lcall
cld
sbb
xchg
pop
sub
push
stos
aas
insl
nop
lahf
cltd
dec
out
add
dec
cld
push
jle
fwait
jle
mov
cmp
outsl
jecxz
repz
lcall
xchg
scas
cpuid
pop
roll
jge
iret
test
xor
sbb
sar
push
and
das
pushf
jbe
loopne
fldt
sbb
jae
xchg
or
adc
or
dec
out
movsb
test
lahf
push
jb
mov
mov
mov
cmp
sbbl
dec
fcmovnu
inc
mov
push
movsb
push
int
xchg
popf
sbb
lret
add
pusha
mov
addb
inc
clc
jmp
push
imul
jae
pop
icebp
dec
ja
pushf
xor
jg
pop
push
dec
xor
out
and
cmp
mov
xor
add
adc
push
mov
cltd
test
xorb
jnp
jg
mov
bound
pop
int3
in
in
mov
mov
ss
or
jbe
in
ret
ja
aas
lds
cmp
inc
add
push
jb
sub
fwait
popl
stos
lahf
pop
fisttpll
dec
xchg
or
sub
mov
rclb
pop
clc
ret
stos
in
rclb
and
rcll
inc
stc
xchg
push
mov
test
fidivrs
in
negl
loope
test
roll
fstpt
fs
in
repz
sbb
mov
jge
cmp
adcl
bound
cli
mov
mov
mov
push
jbe
aas
lret
scas
gs
nop
fcoms
mov
cmpsb
mov
cmpsl
xor
mov
cld
xor
test
nop
js
test
xor
sbb
out
jmp
xchg
sub
cmp
xchg
xchg
jns
adc
addl
in
icebp
lods
ss
in
push
sti
aad
nop
cmp
cwtl
add
sbbl
push
jmp
jne
adc
sub
cltd
mov
aaa
in
or
sub
jp
push
test
js
aas
fcomps
adc
mov
mov
sub
push
mov
lcall
sbb
pushl
pop
and
movl
pushf
mov
push
shll
pop
mov
repz
lcall
sarl
fbld
jo
mov
lock
repz
mov
insl
inc
jge
lock
or
imul
jnp
sub
add
cltd
adc
int
fwait
add
xchg
imul
lea
mov
jae
addb
stc
in
movsl
cmp
adc
jg
adc
test
out
stos
and
sbb
cli
jecxz
pushf
push
lods
lods
lods
inc
cmp
mov
push
mov
lcall
ja
sbb
arpl
push
jl
push
outsb
lret
and
mov
lcall
inc
ret
cmp
mov
push
lods
lret
daa
push
cmp
or
es
mov
push
xor
jno
sbb
shlb
jp
js
or
push
loopne
mov
movsl
mov
xchg
hlt
addb
xor
popf
jo
std
test
mov
mov
fdivl
pop
mov
outsb
mov
xor
test
cmp
pop
pop
dec
stc
pusha
vshufpd
icebp
dec
mov
scas
cwtl
adc
loope
cmp
push
adc
int3
adc
and
fs
xor
clc
out
xchg
fimull
cltd
jmp
mov
adc
sbb
adc
lds
lock
aam
movsl
mov
add
mov
lea
sub
jecxz
xor
pop
ljmp
lahf
fldcw
mov
jmp
sub
pop
andb
lock
out
and
movsb
xor
add
dec
ret
incb
lret
and
push
mov
ja
bound
pop
test
scas
nop
fistpl
xlat
loopne
and
cmp
jno
mov
add
shlb
xor
imul
sbb
sub
adc
xchg
notb
pop
movb
shrb
xchg
lock
mov
cmpsb
adc
jg
xor
or
push
fwait
out
fcomps
jbe
add
insb
pop
xlat
pop
cmp
out
inc
lock
dec
cwtl
sbb
loopne
in
outsl
jmp
popf
pop
pusha
adc
fmul
sbb
sub
mov
cs
dec
adc
mov
and
mov
outsb
jle
adc
mov
popf
add
mov
push
fildll
dec
rcrb
fstpl
cmp
jns
xor
ret
inc
jne
xor
adc
stos
test
dec
cmp
ss
fiadds
inc
pop
sub
lds
insb
pusha
push
mov
push
pop
sar
fcoms
dec
mov
insl
orl
stos
out
jge
cmpsl
shlb
popa
lds
inc
daa
hlt
idiv
or
jl
and
and
dec
xorl
test
lcall
lret
mov
and
fwait
outsl
mov
cmc
add
sub
xchg
xlat
movsb
adc
aam
arpl
imul
aad
stc
les
mov
cmc
dec
imul
dec
lcall
xor
inc
xchg
push
fildll
in
loope
rcrb
cmp
inc
loope
shll
test
jmp
mov
loope
gs
ret
decb
pop
jmp
pop
sub
jne
outsb
jg
loopne
fistpll
adc
push
das
pop
and
xchg
mov
or
insb
mov
push
jo
push
iret
or
frstor
xchg
or
push
sub
or
xchg
movsb
push
jo
testl
fldcw
jmp
sub
fsts
xchg
jmp
cmc
pop
jns
dec
xor
inc
xor
inc
mov
pop
cwtl
xchg
out
jbe
cmp
mov
adc
push
pop
paddusb
jmp
fstl
mov
inc
sub
add
incb
out
cmc
mov
lret
mov
movsl
mov
in
lret
imul
out
test
xchg
cltd
ffreep
cmp
ljmp
mov
or
aad
dec
sub
sub
pcmpeqd
movsl
pop
call
ds
dec
scas
vmovntps
cmp
xchg
inc
loope
mov
dec
mov
mov
push
lds
pop
movb
pop
and
stos
ja
call
fnstcw
xor
or
mov
fmull
push
mov
xor
inc
test
or
inc
xchg
push
fs
mov
fstpt
mov
sbb
mov
mov
fsubrl
inc
fsts
sarb
xor
inc
adc
fisubl
addr16
jb
dec
mov
sahf
xor
xchg
jg
xor
mov
shll
int
sbb
icebp
xchg
mov
addr16
aam
xchg
jle
jl
mov
inc
fbld
fisubrl
pusha
repz
iret
fwait
les
pop
sar
pop
and
add
and
stos
loope
aad
ss
pop
aas
xor
sub
mov
inc
or
das
and
mov
out
cli
stos
dec
stc
rcl
adc
adc
adc
cmp
inc
rcl
lea
sbb
and
loope
and
outsb
repnz
addr16
cmpsl
pop
sbbb
push
dec
and
mov
mov
push
movsl
rcll
iret
ljmp
jo
pop
and
mov
mov
mov
dec
dec
jl
dec
enter
jecxz
mov
ret
xor
repz
dec
or
mov
sbb
fcoms
push
stc
xchg
sbb
nop
mov
push
ja
dec
inc
divb
mov
subl
and
mov
xor
cmpsl
jmp
dec
xchg
cs
call
out
inc
pop
aam
push
repz
xorb
sub
cmpb
dec
stos
cmpsb
insb
pop
xlat
daa
pop
jnp
movsl
sub
inc
inc
fs
cmp
dec
jb
das
pop
jmp
std
pop
insb
es
cmc
icebp
cmpsb
enter
repz
mov
inc
loope
mov
and
pop
rcrl
xor
mov
mov
call
push
push
dec
cld
scas
push
jle
add
dec
xchg
jne
inc
sub
inc
pop
mov
mov
jns
hlt
in
inc
jmp
out
jne
ljmp
dec
xor
mov
cmp
movsb
mov
inc
in
add
add
jl
or
jg
jae
jne
mov
mov
nop
cwtl
fsubs
jp
in
ss
add
pop
dec
ret
clc
sub
sub
mov
outsl
lret
or
pop
push
ja
add
loope
jno
and
or
scas
ds
pop
js
or
and
adc
cld
xor
je
xor
in
mov
mov
xchg
sbb
sbbl
test
lds
cs
adc
jbe
push
dec
ja
js
add
dec
sbb
sbb
jbe
stc
imul
je
sbb
push
iret
aam
xlat
filds
ds
inc
xchg
and
bound
scas
fidivl
in
ss
jge
cmc
outsl
sbb
push
cmp
shr
inc
pop
jecxz
imul
dec
xchg
jnp
stc
add
adc
dec
cmp
nop
shrb
lea
in
dec
sbb
rclb
mov
dec
in
xchg
push
leave
push
mov
jp
bound
aaa
or
mov
mov
inc
pop
xor
adcb
dec
clc
jge
mov
jle
mov
inc
bound
mov
cmp
aam
xchg
push
je
lret
and
in
test
shl
or
or
popl
sarl
mov
mov
call
int
popa
fists
push
xchg
nop
repz
test
sbb
mov
xchg
clc
dec
xchg
or
hlt
sub
jmp
inc
sub
sub
cmpsl
aad
xor
iret
push
fldcw
mov
pop
push
cmp
loopne
xchg
cmp
cmp
ret
inc
loope
arpl
pusha
in
jp
add
dec
mov
push
mov
mov
inc
jmp
fsubs
fs
add
xchg
jp
xor
mov
add
pop
movsb
push
inc
lea
mov
fsubrs
xchg
hlt
ss
and
pop
nop
ja
cli
mov
pop
cmpsb
je
daa
hlt
sub
or
test
ljmp
cmpsl
test
and
fstps
sahf
stc
out
cmp
popf
out
sbb
cld
popa
std
cmp
or
loop
sbb
out
push
mov
adc
ds
pop
sti
inc
mov
fwait
inc
pop
jb
shrb
rorl
pop
and
aaa
test
mov
and
sbb
xchg
mov
mov
or
cmpsb
or
dec
mov
into
stc
push
jmp
test
xchg
mov
outsb
ja
fnstcw
dec
cmp
ja
inc
movsb
adc
mov
adc
scas
je
imul
out
cli
and
push
mov
jno
nop
push
nop
pop
jecxz,pt
or
and
pop
mov
sti
adc
mov
dec
dec
dec
xchg
and
sub
inc
js
cmp
arpl
arpl
add
ret
mov
mov
imul
sub
cltd
jmp
push
loope
lret
jo
pop
fwait
lods
loopne
lods
or
and
inc
mov
jmp
sub
out
les
inc
loope
xor
ficoml
add
jbe
fwait
sbb
into
jno
orl
fisttpl
push
mov
dec
and
lahf
stc
mov
mov
cmpb
sub
movsb
ret
es
sub
xor
xchg
cmp
xchg
mov
mov
or
push
sarl
jp
jl
mov
fiaddl
mov
into
sbbb
and
adc
cwtl
pop
inc
jns
mov
dec
sbb
mov
aad
xor
inc
jns
test
pop
add
lods
js
sub
dec
cmp
and
in
int
xor
outsl
je
mov
and
mov
add
xor
sub
mov
in
xor
push
scas
mov
xchg
adc
mov
jle
jmp
push
jno
cmp
lea
mov
ja
andl
fimuls
mov
cmp
lcall
popa
bound
out
daa
xchg
movsl
fadd
cmp
adc
pop
push
dec
inc
mov
addr16
mov
ret
adc
cwtl
aaa
pop
shrb
push
int
xchg
xlat
out
popa
cmp
inc
gs
cli
fistps
out
xchg
mov
fwait
cmp
scas
pop
xor
mov
jl
cmp
out
aam
pop
pop
and
xchg
pop
pop
loop
lds
xchg
push
sti
inc
pop
ds
leave
xor
sbb
ja
bound
or
bswap
mov
dec
xchg
outsb
push
je
decl
and
jge
xchg
loop
inc
xchg
and
fwait
mov
in
subl
jns
jl
nop
xchg
ret
or
mov
push
movsb
xchg
pop
lods
sub
repz
mov
sub
fidivl
adc
xchg
jae
xchg
xor
leave
jl
or
pop
sub
in
push
cmp
fs
fisttps
in
fnstcw
mov
and
dec
xor
cmp
pop
mov
sub
es
xor
out
icebp
xchg
add
cs
sbb
pop
and
push
lods
add
out
int
outsb
sub
cltd
cmp
out
mov
mov
cs
ljmp
stos
int
ret
into
test
icebp
fmull
adc
test
fldenv
xchg
cmpsl
and
inc
popa
insl
in
into
adc
mov
dec
nop
jmp
sbb
mov
sbb
ss
lahf
aaa
mov
fsubl
andl
mov
dec
aas
jp
fildll
jge
mov
lahf
pop
pmulhw
adc
mov
lret
dec
mov
pop
xor
aad
cs
out
xor
sbb
mov
cmpl
xor
mov
adc
movsb
cwtl
cmc
clc
cmc
fst
pusha
fistpll
daa
cmp
sti
push
mov
mov
inc
push
addr16
filds
in
sar
and
push
lods
push
jbe
jns
fcmovne
cmpb
pop
mov
cmp
xchg
icebp
xchg
rolb
loopne
or
mov
lock
xchg
xor
aad
mov
xchg
and
or
adc
mov
mov
mov
out
cmp
mov
aam
add
jb
jo
iret
cmpsb
loopne
xor
sarl
push
ret
insb
insl
add
xchg
push
mov
push
push
mov
pop
repnz
nop
push
jb
stos
xchg
dec
jae
push
mov
mov
mov
inc
lahf
cwtl
wbinvd
mov
mov
adcl
xchg
aam
and
cmpsl
das
xor
ret
adc
add
xor
sbb
popa
cmp
mov
xchg
lret
push
clc
stc
pop
and
cmp
push
ljmp
cmp
in
mov
in
addr16
xor
cmpsb
xchg
sub
fldenv
pop
cld
adc
mov
jb
ret
push
or
xor
imul
pop
adc
in
aad
and
fstp
mov
lods
stos
jmp
mov
iret
and
into
xchg
or
mov
and
inc
add
rorb
lret
push
pop
mov
pop
push
or
popa
push
ret
mov
jns
popa
xchg
sub
stc
pop
mov
push
or
mov
insb
insb
movsb
push
mov
inc
lret
imul
xor
or
mov
jle
jge
repnz
adc
push
call
test
fwait
ret
rclb
fwait
mov
adc
mov
mov
cmp
jb
xor
adc
rcrb
shlb
pusha
add
ret
fsubp
fmuls
pop
in
cmp
inc
nop
jb
inc
fs
cltd
mov
push
dec
dec
and
mov
jg
into
xchg
icebp
rorb
test
pop
ret
sbb
jae
les
lds
test
out
je
mov
pop
shll
and
cmp
mov
jns
aad
pop
stc
iret
xor
cmp
pop
icebp
out
jg
xchg
ficompl
imul
pop
ret
neg
push
scas
push
out
scas
test
in
aam
dec
mov
push
adc
dec
mov
in
dec
sti
dec
rorl
and
mov
and
jg
cli
cmp
xor
in
popa
orb
add
fwait
mov
scas
aam
mov
loop
pop
ja
xchg
rcrb
inc
jae
hlt
and
imul
jge
cmc
sub
push
clc
push
into
lods
push
mov
cmc
mov
daa
fcompl
mov
stos
into
stc
ljmp
int3
mov
jge
jle
xor
loopne
add
dec
out
daa
sti
mov
cmpsl
icebp
out
das
das
push
add
mov
orl
fildll
dec
pop
incb
hlt
fstp
outsb
adc
and
rol
ret
fst
pop
movsl
sub
pop
enter
fnstenv
push
cmp
andb
sbb
push
dec
cmp
dec
mov
mov
xchg
loop
push
pop
mov
jo
out
dec
xchg
mov
iret
les
int
imul
insl
insb
shll
mov
scas
dec
ficomps
xchg
add
add
mov
cmp
data16
mov
and
stc
mov
push
jl
cmp
lcall
push
add
jp
add
ret
xor
mov
lcall
jecxz
sub
xor
and
sarb
movsb
outsl
xor
in
add
mov
cld
shll
and
jl
out
sbb
mov
xlat
adc
test
ficoml
xchg
push
sti
push
cmp
cmpsb
xchg
shll
sub
push
hlt
jg
push
pop
js,pt
mov
bound
je
mov
call
mov
mov
xor
fwait
jno
pop
out
and
fsts
out
insl
sarb
push
sub
repnz
call
xor
lods
xor
inc
and
fwait
push
std
jp
adc
pop
aas
or
pop
das
add
dec
movsl
arpl
stc
js
aad
fstl
lea
and
sarl
frstor
inc
mov
xlat
popa
pop
xor
out
test
fsubs
out
sbb
jmp
jns
lods
gs
sahf
jb
shll
dec
push
ds
cmpsl
popf
mov
mov
sahf
adc
and
xchg
add
and
or
push
push
sub
xor
in
cld
stc
pop
dec
inc
and
iret
sbb
push
scas
jp
add
stos
mov
jns
add
pushf
adc
outsl
xchg
outsb
push
aaa
je
ds
push
or
mov
lret
mov
add
jo
movsl
or
aad
out
pop
inc
ss
inc
pop
mov
inc
dec
js
or
mov
out
mov
jnp
adc
sbb
cwtl
call
xchg
gs
cmp
out
dec
mov
popa
jp
jg
jne
mov
lock
jae
out
out
cli
nop
sarb
shlb
int
fidivrs
mov
jmp
sub
jmp
mov
sahf
and
mov
dec
pop
inc
xchg
icebp
sti
mov
inc
hlt
daa
test
xchg
cmpsl
test
sbb
or
and
cmp
lods
movsb
mov
sbb
adcl
cmpsl
loop
fwait
xchg
ljmp
test
sar
pop
pop
sarb
adc
jecxz
pop
subl
xchg
in
roll
inc
mov
push
je
xor
xor
je
bswap
hlt
lods
mov
dec
xchg
xor
repz
sbb
shl
loope
das
xchg
lcall
inc
shlb
loope
div
cs
fstpt
std
sarb
sub
pop
pop
fwait
dec
lea
lods
xor
call
ds
add
xchg
fucom
stos
or
mov
icebp
add
pop
adc
outsb
ljmp
push
lods
iret
mov
or
cmpsl
sub
xor
push
adc
ds
addr16
fistl
dec
fisubrl
jecxz
lods
jnp
popa
and
lret
xor
out
sbb
repnz
sahf
outsb
jne
cmovg
ret
mov
jl
int3
dec
ja
test
pop
imull
jno
mov
fcomps
sub
sub
fwait
cmp
and
xor
sub
std
inc
cs
ss
andb
mov
dec
sub
dec
jmp
mov
pop
rcr
sub
jne
adc
push
leave
outsb
fisubl
jo
xchg
inc
cmpsb
inc
jle
jno
rclb
push
movsl
xchg
push
aad
movsl
repz
gs
xchg
loopne
repnz
inc
mov
cli
mov
or
jns
nop
fisubrs
fucomp
dec
push
and
xlat
sub
bound
sarb
shl
push
xorb
sbb
and
dec
push
xor
adc
aam
movsb
stc
aad
scas
repz
dec
loopne
stos
imul
test
out
jmp
sbb
push
in
ja
test
adc
push
push
popa
shlb
lods
icebp
ss
out
imul
mov
sub
dec
dec
fimuls
mov
xchg
jno
lock
jmp
adc
jno
pop
loope
pop
mov
loope
adc
orl
arpl
xor
sbb
in
pop
dec
xchg
out
outsl
jp
lods
pusha
adc
and
xchg
out
outsb
js
cld
xchg
stos
ret
push
pop
daa
xor
mov
dec
movsl
test
ja
push
sub
mov
adc
adcb
cmp
sbb
fwait
ss
popf
mov
xchg
lret
jbe
fsubl
xor
test
mov
cs
adc
push
in
outsl
jns
ficoml
push
loopne
pop
push
addb
mov
mov
inc
mov
cli
fisubrl
sub
sbb
pop
mov
aad
pop
mov
icebp
push
dec
clc
or
jne
inc
das
js
adc
jge
add
pop
adc
jle
in
out
popa
dec
ljmp
loopne
add
out
sbb
cmpb
pop
xor
add
iret
in
fsubrs
in
mov
inc
xor
setg
or
mov
mov
loopne
mov
and
lcall
jg
mov
push
or
fadd
mov
dec
rolb
cmpl
shl
ja
cld
popa
loopne
inc
mov
dec
test
pop
mov
mov
mov
dec
dec
mov
cmpsl
add
jmp
push
cmp
testl
lock
dec
lret
pop
icebp
jno
es
mov
sti
ja
xchg
adc
fistl
cmpl
add
cmp
repz
nop
in
sahf
leave
xchg
xor
mov
mov
jl
mov
out
rolb
into
or
fisttpll
fistps
ffree
cmpsl
aas
mov
inc
and
sbb
insl
adc
in
mov
push
out
fs
jnp
jnp
je
inc
outsb
pop
mov
in
arpl
mov
lods
sbb
or
pop
jmp
mov
test
cmpsl
xchg
push
and
lahf
je
fs
inc
stos
es
ret
push
movb
or
mov
ret
mov
push
mov
cmp
lea
stc
pop
pop
jp
mov
mov
mov
pop
xlat
push
mov
mov
aaa
jecxz
js
pop
fisubs
and
xor
addb
jnp
sbb
add
push
dec
dec
push
adc
popa
sub
negb
lret
pusha
adc
mov
adc
repnz
iret
mov
xchg
shlb
mov
mov
xchg
or
arpl
test
insl
hlt
data16
sbb
rcrb
adc
ja
push
ds
mov
mov
mov
sti
mov
xor
lds
loopne
mov
jge
cmpsb
stos
mov
mov
jl
arpl
adc
insw
add
jae
pop
cmp
dec
xor
xor
xchg
lcall
dec
lret
and
or
mov
xor
sbb
pop
xchg
push
cltd
adc
gs
inc
movsb
mov
icebp
fsts
xchg
icebp
lock
dec
add
andl
jne
jbe
fs
fcomps
repz
push
jno
mov
fidivs
lods
sbb
adc
pusha
test
loope
and
cmpsl
inc
dec
cltd
ja
popl
outsl
push
out
cld
add
add
dec
fistps
aaa
inc
das
add
test
cmp
aas
adc
mov
jp
push
jmp
inc
push
cmpsl
in
xchg
dec
xchg
idivl
adc
push
rorb
sbb
push
icebp
je
or
lret
xchg
ljmp
or
add
xor
sbb
push
adc
xor
movsb
aas
adc
push
loope
pop
xor
mov
psrad
mov
lret
add
shr
arpl
xor
frstor
sti
pop
mov
inc
ljmp
adc
cmp
jb
xor
lods
mov
add
data16
and
std
adc
adc
add
push
mov
loopne
in
cmp
es
lods
lock
adc
xchg
lods
mov
cmpsb
add
jg
ljmp
xchg
lcall
aaa
into
loopne
jle
gs
test
mov
shrb
data16
cmpb
fstp
pop
sbb
cmp
push
out
enter
insl
inc
mov
je
jnp
xchg
jne
aaa
pop
imul
inc
xor
cmp
stos
pop
adc
mov
pop
mov
pop
mov
push
jp
or
sub
pop
add
sbb
loop
lock
xchg
leave
popf
inc
lcall
sbb
rclb
fsubrl
push
stos
scas
xchg
or
mov
movsb
mov
inc
ds
sbb
imul
imul
or
jle
sub
dec
in
outsb
ja
xchg
xchg
popf
jnp
clc
or
push
in
and
mov
mov
imull
mov
mov
ficompl
mov
and
jnp
dec
cmp
sbb
ret
pushf
rol
xchg
fs
sub
mov
xor
stc
out
dec
das
int3
das
sahf
inc
mov
mov
lahf
gs
cwtl
in
cld
pop
cmp
mov
imul
cmovg
xchg
push
call
inc
dec
lret
loope
sub
mov
inc
pushf
out
jae
push
les
jl
xlat
arpl
xchg
inc
les
rcrb
lock
xlat
shlb
lret
lcall
jge
jbe
mov
psllq
adc
movsb
mov
movsb
xchg
enter
sbb
or
push
aaa
sub
repz
sbb
aad
sbb
mov
inc
pop
inc
mov
sbb
cmp
dec
jg
in
lods
xchg
fwait
mov
or
jo
jg
pop
lcall
add
into
adc
iret
sbb
subb
adcb
inc
repnz
divl
mov
fists
inc
jno
bound
dec
pop
inc
lcall
or
stc
dec
hlt
mov
mov
sub
frstor
push
std
int
xchg
mov
inc
pushf
xor
mov
outsb
mov
pusha
adc
fs
or
sub
xor
cltd
push
mov
imul
sbb
jl
mov
mov
ret
mov
jb
jne
xlat
and
and
inc
ficomps
fsubrp
xchg
shr
and
fstpl
stos
push
add
xchg
mov
roll
pusha
push
inc
sahf
adcl
xchg
dec
cwtl
into
mov
fwait
das
into
mov
daa
mov
les
lret
mov
xor
ds
sub
aas
in
ficompl
stos
adc
lods
cli
pop
fildl
jns
imul
fldenv
mov
cmp
push
dec
ss
lock
jp
push
out
sbb
mov
lret
push
out
adc
or
inc
arpl
jae
jecxz
movsb
sub
jmp
cmp
clc
push
xor
sub
add
adc
dec
pop
and
push
sbb
dec
cltd
sub
in
push
mov
dec
jp
inc
xchg
mov
andl
and
stos
xchg
scas
dec
popa
xchg
jp
xchg
out
dec
push
mov
out
add
dec
es
jecxz
push
pushaw
in
mov
pop
inc
adc
xor
inc
call
push
imul
mov
lods
stos
xor
mov
xchg
jge
push
mov
adc
inc
pop
into
aaa
push
pop
dec
xlat
xchg
jns
mov
adcb
sub
and
sbb
lahf
push
dec
out
pop
push
xrelease
jg
add
pusha
sbb
jnp
dec
test
in
push
mov
or
cmpsb
or
js
or
xchg
mull
add
mov
mov
loope
leave
jnp
lea
add
xor
sbb
aas
fwait
xchg
or
nop
ret
es
jp
mov
outsl
dec
dec
clc
pop
loopne
in
fistpl
dec
dec
mov
nop
les
adc
aas
jg
lock
pop
mov
sub
cli
das
xchg
xor
push
mov
js
ja
das
xor
push
xor
jb
add
imul
add
lahf
sub
or
repnz
push
rcr
call
push
xor
and
lods
arpl
mov
int3
mov
sbb
mov
hlt
jle
inc
mov
jge
push
cmp
add
mov
sub
xchg
sub
pop
popf
call
stos
adc
pop
lods
stos
jbe
fisttpll
xor
jp
jns
cmc
pop
adc
mov
add
sub
lahf
clc
ja
mov
dec
push
jmp
xchg
addr16
insl
mov
ds
mov
call
into
mov
push
insl
scas
sub
xchg
and
jle
sar
call
out
mov
sub
push
mov
fisttps
repnz
cmpsl
jb
xchg
daa
repnz
mov
add
jge
stos
inc
inc
les
outsl
fistps
test
xor
xchg
push
out
shrl
push
mov
das
push
and
sbb
jo
fsubrs
push
mov
xchg
pop
sub
pop
mov
cmc
out
pop
mov
sub
pop
clc
push
jae
and
inc
mov
aas
pop
adc
addl
icebp
cmp
mov
shr
sub
mov
jno
xchg
hlt
sub
xor
pop
push
and
in
push
xchg
mov
jbe
ljmp
es
jl
imul
movl
insl
mov
jecxz
sbb
dec
add
mov
mov
fs
mov
pop
cmp
addr16
es
mov
push
insl
shll
cmp
or
sub
pop
popf
shrb
sub
cmp
daa
shll
insb
mov
in
rorb
ja
pusha
or
mov
repz
ds
push
add
hlt
adc
mov
jmp
test
scas
sbb
add
push
dec
add
shlb
xor
push
and
add
fadds
inc
xchg
aas
mov
mov
sub
inc
mov
ds
or
sbbb
push
out
jle
sbb
and
mov
sarb
xchg
adc
push
xchg
outsl
ret
xor
or
sub
in
and
lea
cwtl
mov
sub
cltd
push
dec
into
dec
push
cwtl
jbe
or
jl
jb
aam
xchg
sub
mov
jo
pop
inc
aas
sub
dec
pop
xchg
push
imul
xchg
mov
push
xor
adc
mov
add
mov
sub
cmp
ret
hlt
ljmp
mov
shll
scas
test
and
aad
lds
test
stos
mov
dec
jne
mov
loopne
aad
in
pop
add
add
sarl
sub
xor
mov
mov
outsl
arpl
sub
daa
pop
xor
ret
jae
mov
sub
fistl
fimuls
fistl
mov
add
mov
cmc
add
adc
adc
and
push
fwait
lock
test
push
mov
push
subl
data16
out
dec
mov
ret
mov
push
xchg
inc
xchg
sbb
dec
inc
sub
addl
mov
addr16
std
lock
adc
xchg
cwtl
push
into
and
sub
movsb
jnp
shl
jne
adc
fiadds
imul
fstpt
popa
ljmp
imull
add
push
dec
nop
jecxz
cli
sarl
sub
inc
xchg
xchg
sbb
fbstp
das
pop
push
popa
pushf
call
mov
fdivrs
xchg
jbe
lock
testl
jp
adc
outsb
jno
cli
stos
jno
aaa
mov
arpl
fimull
pop
sbb
xchg
xchg
fbstp
cmpsl
jb
incb
and
test
insl
ret
push
outsl
mov
push
test
ljmp
dec
sub
jno
and
cltd
mov
pop
dec
nop
subb
and
dec
dec
cli
outsb
ret
adc
push
lcall
mov
lret
inc
jg
repz
fpatan
jne
add
xor
mov
shlb
push
popa
sub
popa
add
int
and
sub
cld
movsb
inc
cmp
jmp
push
add
inc
and
mov
mov
js
and
int3
dec
addr16
push
and
fisttps
sbb
inc
ljmp
out
orb
jne
mov
mov
push
popa
mov
loopne
cmp
xchg
push
xchg
sbb
pop
stos
arpl
arpl
and
cmp
push
lods
jge
jnp
dec
enter
iret
shr
mov
jecxz
insl
aas
stos
jo
jbe
dec
push
movsl
aad
stos
lods
sbb
jb
hlt
jecxz
xchg
cs
gs
sbb
fildl
add
cmp
stos
adc
hlt
mov
aaa
jbe
hlt
flds
sti
xor
mov
sub
arpl
mov
inc
adc
cmpl
cmp
lock
cmpsl
pop
mov
inc
jnp
out
lds
mov
adc
dec
adc
sti
pusha
or
dec
xor
mov
stos
fcmovu
out
in
mov
addb
jne
test
out
dec
cwtl
adc
fcmovbe
adc
cmp
adcl
adc
lahf
mov
fs
add
sub
jne
dec
push
jne
out
mov
dec
lea
js
ss
popa
dec
inc
lret
pop
lods
das
sub
dec
fnstcw
mov
sbb
rcr
fldl
dec
aas
rclb
scas
jne
xor
movsl
es
jmp
outsl
jg
sbb
mov
bound
ret
test
aas
dec
imul
mov
dec
nop
ss
xor
lods
or
dec
pop
xor
pushf
ja
lds
push
out
cs
pop
fsts
mov
cmp
rorl
insb
jge
mov
pop
pop
jbe,pt
mov
fcoms
lret
push
ret
int3
and
jns
mov
dec
aaa
or
dec
mov
testb
cli
nop
xor
jmp
and
pushf
nop
jno
cltd
dec
pop
jns
je
movsb
xor
dec
js
stos
jge
cmp
test
cs
push
dec
mov
xchg
aas
repz
push
mov
pusha
aas
inc
inc
pushf
arpl
data16
xchg
jo
fwait
cmp
and
add
leave
andb
cmp
xchg
xor
aaa
pop
push
mov
push
rorl
dec
adc
imul
cltd
fildl
push
xchg
push
fildll
sahf
inc
push
jnp
lcall
mov
addl
jns
popf
and
mov
sarl
fnstcw
es
fwait
popf
sahf
and
pop
notb
push
daa
shrb
pop
insl
pushf
ss
mov
aaa
mov
xlat
or
roll
sub
push
cltd
dec
and
lret
xor
sbb
mov
pop
push
std
xchg
sub
lcall
outsl
mov
pushf
jae
xor
jno
adc
sarb
mov
into
ds
and
outsl
icebp
pop
push
cmp
pushf
pop
dec
fstpt
sub
nop
sub
adc
xchg
movl
sbb
jl
push
lea
adc
testl
mov
enter
mov
mov
dec
pop
cmp
arpl
movsb
in
push
cmpsl
hlt
pushf
bound
cs
lock
ja
inc
cmp
sbbb
mov
dec
testb
sahf
loop
sbb
mov
jmp
scas
aad
xchg
dec
push
not
xchg
stc
test
sbb
push
repz
add
roll
cmpl
loop
push
xor
imul
movsl
adc
cmp
std
gs
mov
iret
push
pop
mov
testb
lret
sahf
add
mov
rcl
in
xlat
or
rorl
cmp
sbb
cmp
lds
and
loopne
xor
mov
xor
nop
gs
idivb
aaa
and
mov
push
daa
aam
stos
cmp
cli
sub
cmp
sub
pop
test
push
out
mov
xchg
test
sub
push
inc
loopne
pop
pop
lahf
jmp
mov
sub
xchg
repnz
jnp
add
icebp
pushf
xchg
adc
cmp
cli
out
cmp
cmp
ljmp
jg
insb
jg
mov
sahf
pop
mov
out
decl
xchg
loopne
mov
jno
adc
xor
mov
js
mov
push
xor
cmpsb
ret
clc
mov
dec
jecxz
lea
insb
repnz
xchg
stc
outsl
jb
mov
jno
or
aam
mov
pusha
ret
loope
cmp
adc
cli
int
sub
mov
out
subl
fsqrt
jns
or
gs
push
xor
cld
out
repz
jbe
mov
ss
aad
jbe
mov
push
push
in
out
sub
cmpl
adc
popa
push
fs
sti
xchg
or
mov
sub
sub
pop
cmpsb
in
fnstsw
adc
repz
lcall
push
sbb
inc
xor
pop
das
push
push
and
push
xlat
push
jae
xlat
dec
ja
sub
scas
pop
mov
repnz
mov
es
lods
lock
add
adc
pop
inc
xchg
in
scas
mov
insl
out
xchg
jle
dec
lods
aaa
sub
pop
out
xor
push
jno
test
aad
and
xor
xor
ljmp
loop
mov
inc
sbb
inc
lock
jl
std
ljmp
dec
sbb
and
into
xchg
pop
fs
jno
push
mov
imul
loopne
rolb
cwtl
out
jne
cld
push
jb
icebp
cltd
cli
movsb
repnz
repz
ja
sub
lds
